
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ec0 <.init>:
   11ec0:	push	{r3, lr}
   11ec4:	bl	11fc4 <_start@@Base+0x3c>
   11ec8:	pop	{r3, pc}

Disassembly of section .plt:

00011ecc <strcmp@plt-0x14>:
   11ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ed0:	ldr	lr, [pc, #4]	; 11edc <strcmp@plt-0x4>
   11ed4:	add	lr, pc, lr
   11ed8:	ldr	pc, [lr, #8]!
   11edc:	andeq	r3, r1, r4, lsr #2

00011ee0 <strcmp@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #77824	; 0x13000
   11ee8:	ldr	pc, [ip, #292]!	; 0x124

00011eec <free@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #77824	; 0x13000
   11ef4:	ldr	pc, [ip, #284]!	; 0x11c

00011ef8 <time@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #77824	; 0x13000
   11f00:	ldr	pc, [ip, #276]!	; 0x114

00011f04 <realloc@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #77824	; 0x13000
   11f0c:	ldr	pc, [ip, #268]!	; 0x10c

00011f10 <strcpy@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #77824	; 0x13000
   11f18:	ldr	pc, [ip, #260]!	; 0x104

00011f1c <malloc@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #77824	; 0x13000
   11f24:	ldr	pc, [ip, #252]!	; 0xfc

00011f28 <__libc_start_main@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #77824	; 0x13000
   11f30:	ldr	pc, [ip, #244]!	; 0xf4

00011f34 <__gmon_start__@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #77824	; 0x13000
   11f3c:	ldr	pc, [ip, #236]!	; 0xec

00011f40 <strlen@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #77824	; 0x13000
   11f48:	ldr	pc, [ip, #228]!	; 0xe4

00011f4c <srand@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #77824	; 0x13000
   11f54:	ldr	pc, [ip, #220]!	; 0xdc

00011f58 <snprintf@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #77824	; 0x13000
   11f60:	ldr	pc, [ip, #212]!	; 0xd4

00011f64 <__isoc99_sscanf@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #77824	; 0x13000
   11f6c:	ldr	pc, [ip, #204]!	; 0xcc

00011f70 <rand@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #77824	; 0x13000
   11f78:	ldr	pc, [ip, #196]!	; 0xc4

00011f7c <abort@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #77824	; 0x13000
   11f84:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011f88 <_start@@Base>:
   11f88:	mov	fp, #0
   11f8c:	mov	lr, #0
   11f90:	pop	{r1}		; (ldr r1, [sp], #4)
   11f94:	mov	r2, sp
   11f98:	push	{r2}		; (str r2, [sp, #-4]!)
   11f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11fa0:	ldr	ip, [pc, #16]	; 11fb8 <_start@@Base+0x30>
   11fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa8:	ldr	r0, [pc, #12]	; 11fbc <_start@@Base+0x34>
   11fac:	ldr	r3, [pc, #12]	; 11fc0 <_start@@Base+0x38>
   11fb0:	bl	11f28 <__libc_start_main@plt>
   11fb4:	bl	11f7c <abort@plt>
   11fb8:	andeq	r4, r1, ip, asr #23
   11fbc:	andeq	r2, r1, r8, ror r0
   11fc0:	andeq	r4, r1, ip, ror #22
   11fc4:	ldr	r3, [pc, #20]	; 11fe0 <_start@@Base+0x58>
   11fc8:	ldr	r2, [pc, #20]	; 11fe4 <_start@@Base+0x5c>
   11fcc:	add	r3, pc, r3
   11fd0:	ldr	r2, [r3, r2]
   11fd4:	cmp	r2, #0
   11fd8:	bxeq	lr
   11fdc:	b	11f34 <__gmon_start__@plt>
   11fe0:	andeq	r3, r1, ip, lsr #32
   11fe4:	andeq	r0, r0, r4, asr #32
   11fe8:	ldr	r0, [pc, #24]	; 12008 <_start@@Base+0x80>
   11fec:	ldr	r3, [pc, #24]	; 1200c <_start@@Base+0x84>
   11ff0:	cmp	r3, r0
   11ff4:	bxeq	lr
   11ff8:	ldr	r3, [pc, #16]	; 12010 <_start@@Base+0x88>
   11ffc:	cmp	r3, #0
   12000:	bxeq	lr
   12004:	bx	r3
   12008:	andeq	r5, r2, r0, asr r0
   1200c:	andeq	r5, r2, r0, asr r0
   12010:	andeq	r0, r0, r0
   12014:	ldr	r0, [pc, #36]	; 12040 <_start@@Base+0xb8>
   12018:	ldr	r1, [pc, #36]	; 12044 <_start@@Base+0xbc>
   1201c:	sub	r1, r1, r0
   12020:	asr	r1, r1, #2
   12024:	add	r1, r1, r1, lsr #31
   12028:	asrs	r1, r1, #1
   1202c:	bxeq	lr
   12030:	ldr	r3, [pc, #16]	; 12048 <_start@@Base+0xc0>
   12034:	cmp	r3, #0
   12038:	bxeq	lr
   1203c:	bx	r3
   12040:	andeq	r5, r2, r0, asr r0
   12044:	andeq	r5, r2, r0, asr r0
   12048:	andeq	r0, r0, r0
   1204c:	push	{r4, lr}
   12050:	ldr	r4, [pc, #24]	; 12070 <_start@@Base+0xe8>
   12054:	ldrb	r3, [r4]
   12058:	cmp	r3, #0
   1205c:	popne	{r4, pc}
   12060:	bl	11fe8 <_start@@Base+0x60>
   12064:	mov	r3, #1
   12068:	strb	r3, [r4]
   1206c:	pop	{r4, pc}
   12070:	andeq	r5, r2, r0, asr r0
   12074:	b	12014 <_start@@Base+0x8c>

00012078 <main@@Base>:
   12078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1207c:	add	fp, sp, #24
   12080:	sub	sp, sp, #16
   12084:	mov	r7, #0
   12088:	str	r7, [sp, #12]
   1208c:	bl	121b0 <table_new@@Base>
   12090:	mov	r4, r0
   12094:	add	r0, sp, #8
   12098:	bl	11ef8 <time@plt>
   1209c:	bl	11f4c <srand@plt>
   120a0:	movw	r1, #8604	; 0x219c
   120a4:	add	r2, sp, #12
   120a8:	mov	r0, r4
   120ac:	mvn	r3, #0
   120b0:	movt	r1, #1
   120b4:	bl	1288c <table_register_callback@@Base>
   120b8:	add	r5, sp, #6
   120bc:	mov	r6, #0
   120c0:	mov	r0, r4
   120c4:	mov	r1, r5
   120c8:	mov	r2, r6
   120cc:	strh	r7, [sp, #6]
   120d0:	strb	r6, [sp, #6]
   120d4:	bl	12c68 <table_add_column@@Base>
   120d8:	add	r6, r6, #1
   120dc:	cmp	r6, #24
   120e0:	bne	120c0 <main@@Base+0x48>
   120e4:	mov	r0, r4
   120e8:	bl	12be0 <table_get_column_length@@Base>
   120ec:	mov	r8, r0
   120f0:	mov	r9, #0
   120f4:	mov	r6, #0
   120f8:	mov	r0, #64	; 0x40
   120fc:	bl	11f1c <malloc@plt>
   12100:	mov	r7, r0
   12104:	mov	r5, #0
   12108:	bl	11f70 <rand@plt>
   1210c:	asr	r1, r0, #31
   12110:	add	r1, r0, r1, lsr #25
   12114:	and	r1, r1, #128	; 0x80
   12118:	sub	r0, r0, r1
   1211c:	strb	r0, [r7, r5]
   12120:	add	r5, r5, #1
   12124:	cmp	r5, #63	; 0x3f
   12128:	bne	12108 <main@@Base+0x90>
   1212c:	mov	r0, r4
   12130:	strb	r9, [r7, #63]	; 0x3f
   12134:	bl	13890 <table_add_row@@Base>
   12138:	cmp	r8, #1
   1213c:	blt	12174 <main@@Base+0xfc>
   12140:	mov	r5, #0
   12144:	mov	r0, r4
   12148:	mov	r1, r5
   1214c:	bl	12c54 <table_get_column_data_type@@Base>
   12150:	str	r0, [sp]
   12154:	mov	r0, r4
   12158:	mov	r1, r6
   1215c:	mov	r2, r5
   12160:	mov	r3, r7
   12164:	bl	13a50 <table_set@@Base>
   12168:	add	r5, r5, #1
   1216c:	cmp	r8, r5
   12170:	bne	12144 <main@@Base+0xcc>
   12174:	mov	r0, r7
   12178:	bl	11eec <free@plt>
   1217c:	add	r6, r6, #1
   12180:	cmp	r6, #500	; 0x1f4
   12184:	bne	120f8 <main@@Base+0x80>
   12188:	mov	r0, r4
   1218c:	bl	12240 <table_delete@@Base>
   12190:	mov	r0, #0
   12194:	sub	sp, fp, #24
   12198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1219c:	ldr	r0, [sp]
   121a0:	ldr	r1, [r0]
   121a4:	orr	r1, r1, r3
   121a8:	str	r1, [r0]
   121ac:	bx	lr

000121b0 <table_new@@Base>:
   121b0:	push	{fp, lr}
   121b4:	mov	fp, sp
   121b8:	mov	r0, #56	; 0x38
   121bc:	bl	11f1c <malloc@plt>
   121c0:	mov	r1, #0
   121c4:	mov	r2, #10
   121c8:	mov	r3, #20
   121cc:	vmov.i32	q8, #0	; 0x00000000
   121d0:	str	r1, [r0]
   121d4:	stmib	r0, {r1, r2}
   121d8:	str	r1, [r0, #12]
   121dc:	str	r1, [r0, #16]
   121e0:	str	r1, [r0, #20]
   121e4:	str	r3, [r0, #24]
   121e8:	str	r1, [r0, #28]
   121ec:	str	r2, [r0, #48]	; 0x30
   121f0:	str	r1, [r0, #52]	; 0x34
   121f4:	add	r1, r0, #32
   121f8:	vst1.32	{d16-d17}, [r1]
   121fc:	pop	{fp, pc}

00012200 <table_init@@Base>:
   12200:	mov	r1, #0
   12204:	mov	r2, #10
   12208:	mov	r3, #20
   1220c:	vmov.i32	q8, #0	; 0x00000000
   12210:	str	r1, [r0]
   12214:	stmib	r0, {r1, r2}
   12218:	str	r1, [r0, #12]
   1221c:	str	r1, [r0, #16]
   12220:	str	r1, [r0, #20]
   12224:	str	r3, [r0, #24]
   12228:	str	r1, [r0, #28]
   1222c:	str	r2, [r0, #48]	; 0x30
   12230:	str	r1, [r0, #52]	; 0x34
   12234:	add	r0, r0, #32
   12238:	vst1.32	{d16-d17}, [r0]
   1223c:	bx	lr

00012240 <table_delete@@Base>:
   12240:	push	{r4, sl, fp, lr}
   12244:	add	fp, sp, #8
   12248:	mov	r4, r0
   1224c:	bl	1225c <table_destroy@@Base>
   12250:	mov	r0, r4
   12254:	pop	{r4, sl, fp, lr}
   12258:	b	11eec <free@plt>

0001225c <table_destroy@@Base>:
   1225c:	cmp	r0, #0
   12260:	bxeq	lr
   12264:	push	{r4, r5, r6, sl, fp, lr}
   12268:	add	fp, sp, #16
   1226c:	mvn	r1, #0
   12270:	mvn	r2, #0
   12274:	mov	r3, #64	; 0x40
   12278:	mov	r4, r0
   1227c:	bl	12aec <table_notify@@Base>
   12280:	mov	r0, r4
   12284:	bl	13888 <table_get_row_length@@Base>
   12288:	cmp	r0, #1
   1228c:	blt	122b0 <table_destroy@@Base+0x54>
   12290:	mov	r5, r0
   12294:	mov	r6, #0
   12298:	mov	r0, r4
   1229c:	mov	r1, r6
   122a0:	bl	13830 <table_row_destroy@@Base>
   122a4:	add	r6, r6, #1
   122a8:	cmp	r5, r6
   122ac:	bne	12298 <table_destroy@@Base+0x3c>
   122b0:	ldr	r0, [r4, #16]
   122b4:	cmp	r0, #0
   122b8:	beq	122c0 <table_destroy@@Base+0x64>
   122bc:	bl	11eec <free@plt>
   122c0:	mov	r0, r4
   122c4:	bl	12be0 <table_get_column_length@@Base>
   122c8:	cmp	r0, #1
   122cc:	blt	122f0 <table_destroy@@Base+0x94>
   122d0:	mov	r5, r0
   122d4:	mov	r6, #0
   122d8:	mov	r0, r4
   122dc:	mov	r1, r6
   122e0:	bl	12bc8 <table_column_destroy@@Base>
   122e4:	add	r6, r6, #1
   122e8:	cmp	r5, r6
   122ec:	bne	122d8 <table_destroy@@Base+0x7c>
   122f0:	ldr	r0, [r4]
   122f4:	cmp	r0, #0
   122f8:	beq	12300 <table_destroy@@Base+0xa4>
   122fc:	bl	11eec <free@plt>
   12300:	ldr	r0, [r4, #36]	; 0x24
   12304:	cmp	r0, #0
   12308:	beq	12310 <table_destroy@@Base+0xb4>
   1230c:	bl	11eec <free@plt>
   12310:	ldr	r0, [r4, #40]	; 0x28
   12314:	cmp	r0, #0
   12318:	beq	12320 <table_destroy@@Base+0xc4>
   1231c:	bl	11eec <free@plt>
   12320:	ldr	r0, [r4, #44]	; 0x2c
   12324:	cmp	r0, #0
   12328:	pop	{r4, r5, r6, sl, fp, lr}
   1232c:	beq	12334 <table_destroy@@Base+0xd8>
   12330:	b	11eec <free@plt>
   12334:	bx	lr

00012338 <table_dupe@@Base>:
   12338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1233c:	add	fp, sp, #28
   12340:	sub	sp, sp, #12
   12344:	mov	r4, r0
   12348:	bl	13888 <table_get_row_length@@Base>
   1234c:	mov	r8, r0
   12350:	mov	r0, r4
   12354:	bl	12be0 <table_get_column_length@@Base>
   12358:	mov	r6, r0
   1235c:	mov	r0, #56	; 0x38
   12360:	bl	11f1c <malloc@plt>
   12364:	mov	sl, r0
   12368:	mov	r5, #0
   1236c:	mov	r0, #10
   12370:	mov	r1, #20
   12374:	cmp	r6, #1
   12378:	vmov.i32	q8, #0	; 0x00000000
   1237c:	str	r5, [sl]
   12380:	str	r5, [sl, #4]
   12384:	str	r0, [sl, #8]
   12388:	str	r5, [sl, #12]
   1238c:	str	r5, [sl, #16]
   12390:	str	r5, [sl, #20]
   12394:	str	r1, [sl, #24]
   12398:	str	r5, [sl, #28]
   1239c:	str	r0, [sl, #48]	; 0x30
   123a0:	add	r0, sl, #32
   123a4:	str	r5, [sl, #52]	; 0x34
   123a8:	vst1.32	{d16-d17}, [r0]
   123ac:	blt	123e8 <table_dupe@@Base+0xb0>
   123b0:	mov	r0, r4
   123b4:	mov	r1, r5
   123b8:	bl	12c44 <table_get_column_name@@Base>
   123bc:	mov	r7, r0
   123c0:	mov	r0, r4
   123c4:	mov	r1, r5
   123c8:	bl	12c54 <table_get_column_data_type@@Base>
   123cc:	mov	r2, r0
   123d0:	mov	r0, sl
   123d4:	mov	r1, r7
   123d8:	bl	12c68 <table_add_column@@Base>
   123dc:	add	r5, r5, #1
   123e0:	cmp	r6, r5
   123e4:	bne	123b0 <table_dupe@@Base+0x78>
   123e8:	cmp	r8, #1
   123ec:	blt	12854 <table_dupe@@Base+0x51c>
   123f0:	mov	r5, #0
   123f4:	add	r9, sp, #8
   123f8:	mov	r0, sl
   123fc:	bl	13890 <table_add_row@@Base>
   12400:	cmp	r6, #1
   12404:	blt	12848 <table_dupe@@Base+0x510>
   12408:	mov	r7, #0
   1240c:	mov	r0, r4
   12410:	mov	r1, r7
   12414:	bl	12c54 <table_get_column_data_type@@Base>
   12418:	cmp	r0, #23
   1241c:	bhi	1283c <table_dupe@@Base+0x504>
   12420:	add	r1, pc, #0
   12424:	ldr	pc, [r1, r0, lsl #2]
   12428:	andeq	r2, r1, r8, lsl #9
   1242c:			; <UNDEFINED> instruction: 0x000124b0
   12430:	ldrdeq	r2, [r1], -r8
   12434:	andeq	r2, r1, r0, lsl #10
   12438:	andeq	r2, r1, r8, lsr #10
   1243c:	andeq	r2, r1, r0, asr r5
   12440:	andeq	r2, r1, r8, ror r5
   12444:	andeq	r2, r1, r0, lsr #11
   12448:	andeq	r2, r1, r8, asr #11
   1244c:	strdeq	r2, [r1], -r0
   12450:	andeq	r2, r1, r8, lsl r6
   12454:	andeq	r2, r1, r0, asr #12
   12458:	andeq	r2, r1, r8, ror #12
   1245c:	muleq	r1, r0, r6
   12460:			; <UNDEFINED> instruction: 0x000126b8
   12464:	andeq	r2, r1, r0, ror #13
   12468:	andeq	r2, r1, r8, lsl #14
   1246c:	andeq	r2, r1, ip, lsr #14
   12470:	andeq	r2, r1, r0, asr r7
   12474:	andeq	r2, r1, r4, ror r7
   12478:	muleq	r1, ip, r7
   1247c:	andeq	r2, r1, r4, asr #15
   12480:	andeq	r2, r1, ip, ror #15
   12484:	andeq	r2, r1, r4, lsl r8
   12488:	mov	r0, r4
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	135e0 <table_get_int@@Base>
   12498:	mov	r3, r0
   1249c:	mov	r0, sl
   124a0:	mov	r1, r5
   124a4:	mov	r2, r7
   124a8:	bl	13d8c <table_set_int@@Base>
   124ac:	b	1283c <table_dupe@@Base+0x504>
   124b0:	mov	r0, r4
   124b4:	mov	r1, r5
   124b8:	mov	r2, r7
   124bc:	bl	135f8 <table_get_uint@@Base>
   124c0:	mov	r3, r0
   124c4:	mov	r0, sl
   124c8:	mov	r1, r5
   124cc:	mov	r2, r7
   124d0:	bl	13db4 <table_set_uint@@Base>
   124d4:	b	1283c <table_dupe@@Base+0x504>
   124d8:	mov	r0, r4
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	13610 <table_get_int8@@Base>
   124e8:	mov	r3, r0
   124ec:	mov	r0, sl
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	13ddc <table_set_int8@@Base>
   124fc:	b	1283c <table_dupe@@Base+0x504>
   12500:	mov	r0, r4
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	13628 <table_get_uint8@@Base>
   12510:	mov	r3, r0
   12514:	mov	r0, sl
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	13e04 <table_set_uint8@@Base>
   12524:	b	1283c <table_dupe@@Base+0x504>
   12528:	mov	r0, r4
   1252c:	mov	r1, r5
   12530:	mov	r2, r7
   12534:	bl	13640 <table_get_int16@@Base>
   12538:	mov	r3, r0
   1253c:	mov	r0, sl
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	13e2c <table_set_int16@@Base>
   1254c:	b	1283c <table_dupe@@Base+0x504>
   12550:	mov	r0, r4
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	13658 <table_get_uint16@@Base>
   12560:	mov	r3, r0
   12564:	mov	r0, sl
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	13e54 <table_set_uint16@@Base>
   12574:	b	1283c <table_dupe@@Base+0x504>
   12578:	mov	r0, r4
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	13670 <table_get_int32@@Base>
   12588:	mov	r3, r0
   1258c:	mov	r0, sl
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	13e7c <table_set_int32@@Base>
   1259c:	b	1283c <table_dupe@@Base+0x504>
   125a0:	mov	r0, r4
   125a4:	mov	r1, r5
   125a8:	mov	r2, r7
   125ac:	bl	13688 <table_get_uint32@@Base>
   125b0:	mov	r3, r0
   125b4:	mov	r0, sl
   125b8:	mov	r1, r5
   125bc:	mov	r2, r7
   125c0:	bl	13ea4 <table_set_uint32@@Base>
   125c4:	b	1283c <table_dupe@@Base+0x504>
   125c8:	mov	r0, r4
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	136a0 <table_get_int64@@Base>
   125d8:	stm	sp, {r0, r1}
   125dc:	mov	r0, sl
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	13ecc <table_set_int64@@Base>
   125ec:	b	1283c <table_dupe@@Base+0x504>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	136b8 <table_get_uint64@@Base>
   12600:	stm	sp, {r0, r1}
   12604:	mov	r0, sl
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	13f00 <table_set_uint64@@Base>
   12614:	b	1283c <table_dupe@@Base+0x504>
   12618:	mov	r0, r4
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	136d0 <table_get_short@@Base>
   12628:	mov	r3, r0
   1262c:	mov	r0, sl
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	13f34 <table_set_short@@Base>
   1263c:	b	1283c <table_dupe@@Base+0x504>
   12640:	mov	r0, r4
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	136e8 <table_get_ushort@@Base>
   12650:	mov	r3, r0
   12654:	mov	r0, sl
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	13f5c <table_set_ushort@@Base>
   12664:	b	1283c <table_dupe@@Base+0x504>
   12668:	mov	r0, r4
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	13700 <table_get_long@@Base>
   12678:	mov	r3, r0
   1267c:	mov	r0, sl
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	13f84 <table_set_long@@Base>
   1268c:	b	1283c <table_dupe@@Base+0x504>
   12690:	mov	r0, r4
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	13718 <table_get_ulong@@Base>
   126a0:	mov	r3, r0
   126a4:	mov	r0, sl
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	13fac <table_set_ulong@@Base>
   126b4:	b	1283c <table_dupe@@Base+0x504>
   126b8:	mov	r0, r4
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	13730 <table_get_llong@@Base>
   126c8:	stm	sp, {r0, r1}
   126cc:	mov	r0, sl
   126d0:	mov	r1, r5
   126d4:	mov	r2, r7
   126d8:	bl	13fd4 <table_set_llong@@Base>
   126dc:	b	1283c <table_dupe@@Base+0x504>
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	13748 <table_get_ullong@@Base>
   126f0:	stm	sp, {r0, r1}
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	14008 <table_set_ullong@@Base>
   12704:	b	1283c <table_dupe@@Base+0x504>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	13760 <table_get_float@@Base>
   12718:	mov	r0, sl
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	1403c <table_set_float@@Base>
   12728:	b	1283c <table_dupe@@Base+0x504>
   1272c:	mov	r0, r4
   12730:	mov	r1, r5
   12734:	mov	r2, r7
   12738:	bl	13778 <table_get_double@@Base>
   1273c:	mov	r0, sl
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	14064 <table_set_double@@Base>
   1274c:	b	1283c <table_dupe@@Base+0x504>
   12750:	mov	r0, r4
   12754:	mov	r1, r5
   12758:	mov	r2, r7
   1275c:	bl	13790 <table_get_ldouble@@Base>
   12760:	mov	r0, sl
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	1408c <table_set_ldouble@@Base>
   12770:	b	1283c <table_dupe@@Base+0x504>
   12774:	mov	r0, r4
   12778:	mov	r1, r5
   1277c:	mov	r2, r7
   12780:	bl	137a8 <table_get_char@@Base>
   12784:	mov	r3, r0
   12788:	mov	r0, sl
   1278c:	mov	r1, r5
   12790:	mov	r2, r7
   12794:	bl	140d4 <table_set_char@@Base>
   12798:	b	1283c <table_dupe@@Base+0x504>
   1279c:	mov	r0, r4
   127a0:	mov	r1, r5
   127a4:	mov	r2, r7
   127a8:	bl	137c0 <table_get_uchar@@Base>
   127ac:	mov	r3, r0
   127b0:	mov	r0, sl
   127b4:	mov	r1, r5
   127b8:	mov	r2, r7
   127bc:	bl	140fc <table_set_uchar@@Base>
   127c0:	b	1283c <table_dupe@@Base+0x504>
   127c4:	mov	r0, r4
   127c8:	mov	r1, r5
   127cc:	mov	r2, r7
   127d0:	bl	137d8 <table_get_string@@Base>
   127d4:	mov	r3, r0
   127d8:	mov	r0, sl
   127dc:	mov	r1, r5
   127e0:	mov	r2, r7
   127e4:	bl	140b4 <table_set_string@@Base>
   127e8:	b	1283c <table_dupe@@Base+0x504>
   127ec:	mov	r0, r4
   127f0:	mov	r1, r5
   127f4:	mov	r2, r7
   127f8:	bl	135c8 <table_get_bool@@Base>
   127fc:	mov	r3, r0
   12800:	mov	r0, sl
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	13d64 <table_set_bool@@Base>
   12810:	b	1283c <table_dupe@@Base+0x504>
   12814:	mov	r0, r4
   12818:	mov	r1, r5
   1281c:	mov	r2, r7
   12820:	bl	137ec <table_get_ptr@@Base>
   12824:	str	r0, [sp, #8]
   12828:	mov	r0, sl
   1282c:	mov	r1, r5
   12830:	mov	r2, r7
   12834:	mov	r3, r9
   12838:	bl	14124 <table_set_ptr@@Base>
   1283c:	add	r7, r7, #1
   12840:	cmp	r6, r7
   12844:	bne	1240c <table_dupe@@Base+0xd4>
   12848:	add	r5, r5, #1
   1284c:	cmp	r5, r8
   12850:	bne	123f8 <table_dupe@@Base+0xc0>
   12854:	mov	r0, sl
   12858:	sub	sp, fp, #28
   1285c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012860 <table_get_major_version@@Base>:
   12860:	mov	r0, #0
   12864:	bx	lr

00012868 <table_get_minor_version@@Base>:
   12868:	mov	r0, #0
   1286c:	bx	lr

00012870 <table_get_patch_version@@Base>:
   12870:	mov	r0, #0
   12874:	bx	lr

00012878 <table_get_version@@Base>:
   12878:	movw	r0, #19584	; 0x4c80
   1287c:	movt	r0, #1
   12880:	bx	lr

00012884 <table_get_callback_length@@Base>:
   12884:	ldr	r0, [r0, #32]
   12888:	bx	lr

0001288c <table_register_callback@@Base>:
   1288c:	push	{r4, r5, r6, r7, fp, lr}
   12890:	add	fp, sp, #16
   12894:	mov	r5, r0
   12898:	ldr	r0, [r0, #32]
   1289c:	mov	r4, r3
   128a0:	mov	r6, r2
   128a4:	mov	r7, r1
   128a8:	cmp	r0, #1
   128ac:	blt	128e0 <table_register_callback@@Base+0x54>
   128b0:	ldr	r2, [r5, #36]	; 0x24
   128b4:	mov	r1, #0
   128b8:	ldr	r3, [r2, r1, lsl #2]
   128bc:	cmp	r3, r7
   128c0:	bne	128d4 <table_register_callback@@Base+0x48>
   128c4:	ldr	r3, [r5, #40]	; 0x28
   128c8:	ldr	r3, [r3, r1, lsl #2]
   128cc:	cmp	r3, r6
   128d0:	beq	12964 <table_register_callback@@Base+0xd8>
   128d4:	add	r1, r1, #1
   128d8:	cmp	r1, r0
   128dc:	blt	128b8 <table_register_callback@@Base+0x2c>
   128e0:	ldr	r1, [r5, #48]	; 0x30
   128e4:	udiv	r2, r0, r1
   128e8:	mls	r2, r2, r1, r0
   128ec:	cmp	r2, #0
   128f0:	bne	1293c <table_register_callback@@Base+0xb0>
   128f4:	ldr	r2, [r5, #52]	; 0x34
   128f8:	ldr	r0, [r5, #36]	; 0x24
   128fc:	add	r1, r2, r1
   12900:	str	r1, [r5, #52]	; 0x34
   12904:	lsl	r1, r1, #2
   12908:	bl	11f04 <realloc@plt>
   1290c:	str	r0, [r5, #36]	; 0x24
   12910:	ldr	r1, [r5, #52]	; 0x34
   12914:	ldr	r0, [r5, #40]	; 0x28
   12918:	lsl	r1, r1, #2
   1291c:	bl	11f04 <realloc@plt>
   12920:	str	r0, [r5, #40]	; 0x28
   12924:	ldr	r1, [r5, #52]	; 0x34
   12928:	ldr	r0, [r5, #44]	; 0x2c
   1292c:	lsl	r1, r1, #2
   12930:	bl	11f04 <realloc@plt>
   12934:	str	r0, [r5, #44]	; 0x2c
   12938:	ldr	r0, [r5, #32]
   1293c:	ldr	r1, [r5, #36]	; 0x24
   12940:	str	r7, [r1, r0, lsl #2]
   12944:	ldr	r1, [r5, #40]	; 0x28
   12948:	str	r6, [r1, r0, lsl #2]
   1294c:	ldr	r1, [r5, #44]	; 0x2c
   12950:	str	r4, [r1, r0, lsl #2]
   12954:	ldr	r0, [r5, #32]
   12958:	add	r0, r0, #1
   1295c:	str	r0, [r5, #32]
   12960:	pop	{r4, r5, r6, r7, fp, pc}
   12964:	cmp	r1, #0
   12968:	ldrne	r0, [r5, #44]	; 0x2c
   1296c:	ldrne	r2, [r0, r1, lsl #2]
   12970:	orrne	r2, r2, r4
   12974:	strne	r2, [r0, r1, lsl #2]
   12978:	popne	{r4, r5, r6, r7, fp, pc}
   1297c:	b	128e0 <table_register_callback@@Base+0x54>

00012980 <table_unregister_callback@@Base>:
   12980:	push	{r4, r5, r6, sl, fp, lr}
   12984:	add	fp, sp, #16
   12988:	ldr	r4, [r0, #32]
   1298c:	cmp	r4, #1
   12990:	blt	129c8 <table_unregister_callback@@Base+0x48>
   12994:	ldr	r3, [r0, #36]	; 0x24
   12998:	mov	r6, r0
   1299c:	mov	r0, #0
   129a0:	ldr	r5, [r3, r0, lsl #2]
   129a4:	cmp	r5, r1
   129a8:	bne	129bc <table_unregister_callback@@Base+0x3c>
   129ac:	ldr	r5, [r6, #40]	; 0x28
   129b0:	ldr	r5, [r5, r0, lsl #2]
   129b4:	cmp	r5, r2
   129b8:	beq	129cc <table_unregister_callback@@Base+0x4c>
   129bc:	add	r0, r0, #1
   129c0:	cmp	r0, r4
   129c4:	blt	129a0 <table_unregister_callback@@Base+0x20>
   129c8:	pop	{r4, r5, r6, sl, fp, pc}
   129cc:	sub	r1, r4, #1
   129d0:	cmp	r0, r1
   129d4:	bge	12a64 <table_unregister_callback@@Base+0xe4>
   129d8:	add	r1, r3, r0, lsl #2
   129dc:	ldr	r1, [r1, #4]
   129e0:	str	r1, [r3, r0, lsl #2]
   129e4:	ldr	r1, [r6, #40]	; 0x28
   129e8:	add	r2, r1, r0, lsl #2
   129ec:	ldr	r2, [r2, #4]
   129f0:	str	r2, [r1, r0, lsl #2]
   129f4:	ldr	r1, [r6, #44]	; 0x2c
   129f8:	add	r2, r1, r0, lsl #2
   129fc:	ldr	r2, [r2, #4]
   12a00:	str	r2, [r1, r0, lsl #2]
   12a04:	add	r2, r0, #1
   12a08:	ldr	r1, [r6, #32]
   12a0c:	sub	r1, r1, #1
   12a10:	cmp	r2, r1
   12a14:	bge	12a64 <table_unregister_callback@@Base+0xe4>
   12a18:	ldr	r1, [r6, #36]	; 0x24
   12a1c:	add	r1, r1, r0, lsl #2
   12a20:	ldr	r2, [r1, #8]
   12a24:	str	r2, [r1, #4]
   12a28:	ldr	r1, [r6, #40]	; 0x28
   12a2c:	add	r1, r1, r0, lsl #2
   12a30:	ldr	r2, [r1, #8]
   12a34:	str	r2, [r1, #4]
   12a38:	ldr	r1, [r6, #44]	; 0x2c
   12a3c:	add	r1, r1, r0, lsl #2
   12a40:	ldr	r2, [r1, #8]
   12a44:	str	r2, [r1, #4]
   12a48:	add	r2, r0, #1
   12a4c:	add	r0, r0, #2
   12a50:	ldr	r1, [r6, #32]
   12a54:	sub	r1, r1, #1
   12a58:	cmp	r0, r1
   12a5c:	mov	r0, r2
   12a60:	blt	12a18 <table_unregister_callback@@Base+0x98>
   12a64:	str	r1, [r6, #32]
   12a68:	ldr	r2, [r6, #48]	; 0x30
   12a6c:	udiv	r0, r1, r2
   12a70:	mls	r0, r0, r2, r1
   12a74:	cmp	r0, #0
   12a78:	popne	{r4, r5, r6, sl, fp, pc}
   12a7c:	ldr	r1, [r6, #52]	; 0x34
   12a80:	ldr	r0, [r6, #36]	; 0x24
   12a84:	subs	r1, r1, r2
   12a88:	str	r1, [r6, #52]	; 0x34
   12a8c:	beq	12ac4 <table_unregister_callback@@Base+0x144>
   12a90:	lsl	r1, r1, #2
   12a94:	bl	11f04 <realloc@plt>
   12a98:	str	r0, [r6, #36]	; 0x24
   12a9c:	ldr	r1, [r6, #52]	; 0x34
   12aa0:	ldr	r0, [r6, #40]	; 0x28
   12aa4:	lsl	r1, r1, #2
   12aa8:	bl	11f04 <realloc@plt>
   12aac:	str	r0, [r6, #40]	; 0x28
   12ab0:	ldr	r1, [r6, #52]	; 0x34
   12ab4:	ldr	r0, [r6, #44]	; 0x2c
   12ab8:	lsl	r1, r1, #2
   12abc:	bl	11f04 <realloc@plt>
   12ac0:	b	12ae4 <table_unregister_callback@@Base+0x164>
   12ac4:	bl	11eec <free@plt>
   12ac8:	ldr	r0, [r6, #40]	; 0x28
   12acc:	bl	11eec <free@plt>
   12ad0:	ldr	r0, [r6, #44]	; 0x2c
   12ad4:	bl	11eec <free@plt>
   12ad8:	mov	r0, #0
   12adc:	str	r0, [r6, #36]	; 0x24
   12ae0:	str	r0, [r6, #40]	; 0x28
   12ae4:	str	r0, [r6, #44]	; 0x2c
   12ae8:	pop	{r4, r5, r6, sl, fp, pc}

00012aec <table_notify@@Base>:
   12aec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12af0:	add	fp, sp, #24
   12af4:	sub	sp, sp, #8
   12af8:	mov	r7, r0
   12afc:	ldr	r0, [r0, #32]
   12b00:	cmp	r0, #1
   12b04:	blt	12b60 <table_notify@@Base+0x74>
   12b08:	mov	r4, r3
   12b0c:	mov	r8, r2
   12b10:	mov	r9, r1
   12b14:	mov	r5, #0
   12b18:	ldr	r1, [r7, #44]	; 0x2c
   12b1c:	ldr	r1, [r1, r5, lsl #2]
   12b20:	tst	r1, r4
   12b24:	beq	12b54 <table_notify@@Base+0x68>
   12b28:	ldr	r0, [r7, #36]	; 0x24
   12b2c:	ldr	r1, [r7, #40]	; 0x28
   12b30:	mov	r2, r8
   12b34:	mov	r3, r4
   12b38:	ldr	r6, [r0, r5, lsl #2]
   12b3c:	ldr	r0, [r1, r5, lsl #2]
   12b40:	mov	r1, r9
   12b44:	str	r0, [sp]
   12b48:	mov	r0, r7
   12b4c:	blx	r6
   12b50:	ldr	r0, [r7, #32]
   12b54:	add	r5, r5, #1
   12b58:	cmp	r5, r0
   12b5c:	blt	12b18 <table_notify@@Base+0x2c>
   12b60:	sub	sp, fp, #24
   12b64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b68 <table_column_init@@Base>:
   12b68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b6c:	add	fp, sp, #24
   12b70:	ldr	r7, [r0]
   12b74:	mov	r0, r2
   12b78:	mov	r4, r3
   12b7c:	mov	r5, r2
   12b80:	mov	r6, r1
   12b84:	bl	11f40 <strlen@plt>
   12b88:	add	r0, r0, #1
   12b8c:	bl	11f1c <malloc@plt>
   12b90:	ldr	r8, [fp, #8]
   12b94:	add	r6, r6, r6, lsl #1
   12b98:	cmp	r0, #0
   12b9c:	str	r0, [r7, r6, lsl #2]
   12ba0:	beq	12bac <table_column_init@@Base+0x44>
   12ba4:	mov	r1, r5
   12ba8:	bl	11f10 <strcpy@plt>
   12bac:	add	r0, r7, r6, lsl #2
   12bb0:	stmib	r0, {r4, r8}
   12bb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012bb8 <table_get_col_ptr@@Base>:
   12bb8:	ldr	r0, [r0]
   12bbc:	add	r1, r1, r1, lsl #1
   12bc0:	add	r0, r0, r1, lsl #2
   12bc4:	bx	lr

00012bc8 <table_column_destroy@@Base>:
   12bc8:	ldr	r0, [r0]
   12bcc:	add	r1, r1, r1, lsl #1
   12bd0:	ldr	r0, [r0, r1, lsl #2]
   12bd4:	cmp	r0, #0
   12bd8:	bxeq	lr
   12bdc:	b	11eec <free@plt>

00012be0 <table_get_column_length@@Base>:
   12be0:	ldr	r0, [r0, #4]
   12be4:	bx	lr

00012be8 <table_get_column@@Base>:
   12be8:	push	{r4, r5, r6, r7, fp, lr}
   12bec:	add	fp, sp, #16
   12bf0:	ldr	r6, [r0, #4]
   12bf4:	cmp	r6, #1
   12bf8:	blt	12c30 <table_get_column@@Base+0x48>
   12bfc:	ldr	r7, [r0]
   12c00:	mov	r5, r1
   12c04:	mov	r4, #0
   12c08:	ldr	r0, [r7]
   12c0c:	mov	r1, r5
   12c10:	bl	11ee0 <strcmp@plt>
   12c14:	cmp	r0, #0
   12c18:	beq	12c34 <table_get_column@@Base+0x4c>
   12c1c:	add	r4, r4, #1
   12c20:	add	r7, r7, #12
   12c24:	cmp	r4, r6
   12c28:	blt	12c08 <table_get_column@@Base+0x20>
   12c2c:	b	12c34 <table_get_column@@Base+0x4c>
   12c30:	mov	r4, #0
   12c34:	cmp	r4, r6
   12c38:	mvneq	r4, #0
   12c3c:	mov	r0, r4
   12c40:	pop	{r4, r5, r6, r7, fp, pc}

00012c44 <table_get_column_name@@Base>:
   12c44:	ldr	r0, [r0]
   12c48:	add	r1, r1, r1, lsl #1
   12c4c:	ldr	r0, [r0, r1, lsl #2]
   12c50:	bx	lr

00012c54 <table_get_column_data_type@@Base>:
   12c54:	ldr	r0, [r0]
   12c58:	add	r1, r1, r1, lsl #1
   12c5c:	add	r0, r0, r1, lsl #2
   12c60:	ldr	r0, [r0, #4]
   12c64:	bx	lr

00012c68 <table_add_column@@Base>:
   12c68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c6c:	add	fp, sp, #24
   12c70:	sub	sp, sp, #8
   12c74:	mov	r4, r0
   12c78:	mov	r8, r1
   12c7c:	ldr	r0, [r0, #4]
   12c80:	mov	r9, r2
   12c84:	ldr	r1, [r4, #8]
   12c88:	udiv	r2, r0, r1
   12c8c:	mls	r0, r2, r1, r0
   12c90:	cmp	r0, #0
   12c94:	bne	12d00 <table_add_column@@Base+0x98>
   12c98:	ldr	r2, [r4, #12]
   12c9c:	ldr	r0, [r4]
   12ca0:	add	r1, r2, r1
   12ca4:	str	r1, [r4, #12]
   12ca8:	add	r1, r1, r1, lsl #1
   12cac:	lsl	r1, r1, #2
   12cb0:	bl	11f04 <realloc@plt>
   12cb4:	str	r0, [r4]
   12cb8:	mov	r0, r4
   12cbc:	bl	13888 <table_get_row_length@@Base>
   12cc0:	cmp	r0, #1
   12cc4:	blt	12d00 <table_add_column@@Base+0x98>
   12cc8:	mov	r6, r0
   12ccc:	mov	r7, #0
   12cd0:	mov	r0, r4
   12cd4:	mov	r1, r7
   12cd8:	bl	13824 <table_get_row_ptr@@Base>
   12cdc:	ldr	r1, [r4, #12]
   12ce0:	mov	r5, r0
   12ce4:	ldr	r0, [r0]
   12ce8:	lsl	r1, r1, #2
   12cec:	bl	11f04 <realloc@plt>
   12cf0:	add	r7, r7, #1
   12cf4:	str	r0, [r5]
   12cf8:	cmp	r6, r7
   12cfc:	bne	12cd0 <table_add_column@@Base+0x68>
   12d00:	mov	r0, r4
   12d04:	bl	13888 <table_get_row_length@@Base>
   12d08:	ldr	r6, [r4, #4]
   12d0c:	mov	r7, r0
   12d10:	mov	r0, r9
   12d14:	bl	1359c <table_get_default_compare_function_for_data_type@@Base>
   12d18:	str	r0, [sp]
   12d1c:	mov	r0, r4
   12d20:	mov	r1, r6
   12d24:	mov	r2, r8
   12d28:	mov	r3, r9
   12d2c:	bl	12b68 <table_column_init@@Base>
   12d30:	cmp	r7, #1
   12d34:	blt	12d58 <table_add_column@@Base+0xf0>
   12d38:	mov	r5, #0
   12d3c:	mov	r0, r4
   12d40:	mov	r1, r5
   12d44:	mov	r2, r6
   12d48:	bl	14144 <table_cell_init@@Base>
   12d4c:	add	r5, r5, #1
   12d50:	cmp	r7, r5
   12d54:	bne	12d3c <table_add_column@@Base+0xd4>
   12d58:	ldr	r2, [r4, #4]
   12d5c:	mov	r0, r4
   12d60:	mvn	r1, #0
   12d64:	mov	r3, #8
   12d68:	bl	12aec <table_notify@@Base>
   12d6c:	ldr	r0, [r4, #4]
   12d70:	add	r1, r0, #1
   12d74:	str	r1, [r4, #4]
   12d78:	sub	sp, fp, #24
   12d7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012d80 <table_remove_column@@Base>:
   12d80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d84:	add	fp, sp, #24
   12d88:	mov	r5, r0
   12d8c:	ldr	r0, [r0]
   12d90:	add	r6, r1, r1, lsl #1
   12d94:	mov	r9, r1
   12d98:	ldr	r0, [r0, r6, lsl #2]
   12d9c:	cmp	r0, #0
   12da0:	beq	12da8 <table_remove_column@@Base+0x28>
   12da4:	bl	11eec <free@plt>
   12da8:	ldr	r0, [r5, #4]
   12dac:	sub	r4, r0, #1
   12db0:	cmp	r4, r9
   12db4:	ble	12de4 <table_remove_column@@Base+0x64>
   12db8:	sub	r0, r4, r9
   12dbc:	lsl	r1, r6, #2
   12dc0:	ldr	r2, [r5]
   12dc4:	subs	r0, r0, #1
   12dc8:	add	r2, r2, r1
   12dcc:	add	r1, r1, #12
   12dd0:	vldr	d16, [r2, #12]
   12dd4:	ldr	r3, [r2, #20]
   12dd8:	str	r3, [r2, #8]
   12ddc:	vstr	d16, [r2]
   12de0:	bne	12dc0 <table_remove_column@@Base+0x40>
   12de4:	mov	r0, r5
   12de8:	bl	13888 <table_get_row_length@@Base>
   12dec:	cmp	r0, #1
   12df0:	blt	12e4c <table_remove_column@@Base+0xcc>
   12df4:	mov	r6, r0
   12df8:	mov	r7, #0
   12dfc:	mov	r0, r5
   12e00:	mov	r1, r7
   12e04:	mov	r2, r9
   12e08:	bl	14180 <table_cell_destroy@@Base>
   12e0c:	mov	r0, r5
   12e10:	mov	r1, r7
   12e14:	bl	13824 <table_get_row_ptr@@Base>
   12e18:	cmp	r4, r9
   12e1c:	ble	12e40 <table_remove_column@@Base+0xc0>
   12e20:	mov	r1, r9
   12e24:	ldr	r2, [r0]
   12e28:	add	r3, r2, r1, lsl #2
   12e2c:	ldr	r3, [r3, #4]
   12e30:	str	r3, [r2, r1, lsl #2]
   12e34:	add	r1, r1, #1
   12e38:	cmp	r4, r1
   12e3c:	bne	12e24 <table_remove_column@@Base+0xa4>
   12e40:	add	r7, r7, #1
   12e44:	cmp	r7, r6
   12e48:	bne	12dfc <table_remove_column@@Base+0x7c>
   12e4c:	ldmib	r5, {r0, r1}
   12e50:	sub	r0, r0, #1
   12e54:	udiv	r2, r0, r1
   12e58:	str	r0, [r5, #4]
   12e5c:	mls	r0, r2, r1, r0
   12e60:	cmp	r0, #0
   12e64:	bne	12ed0 <table_remove_column@@Base+0x150>
   12e68:	ldr	r2, [r5, #12]
   12e6c:	ldr	r0, [r5]
   12e70:	sub	r1, r2, r1
   12e74:	str	r1, [r5, #12]
   12e78:	add	r1, r1, r1, lsl #1
   12e7c:	lsl	r1, r1, #2
   12e80:	bl	11f04 <realloc@plt>
   12e84:	str	r0, [r5]
   12e88:	mov	r0, r5
   12e8c:	bl	13888 <table_get_row_length@@Base>
   12e90:	cmp	r0, #1
   12e94:	blt	12ed0 <table_remove_column@@Base+0x150>
   12e98:	mov	r8, r0
   12e9c:	mov	r7, #0
   12ea0:	mov	r0, r5
   12ea4:	mov	r1, r7
   12ea8:	bl	13824 <table_get_row_ptr@@Base>
   12eac:	ldr	r1, [r5, #12]
   12eb0:	mov	r6, r0
   12eb4:	ldr	r0, [r0]
   12eb8:	lsl	r1, r1, #2
   12ebc:	bl	11f04 <realloc@plt>
   12ec0:	add	r7, r7, #1
   12ec4:	str	r0, [r6]
   12ec8:	cmp	r8, r7
   12ecc:	bne	12ea0 <table_remove_column@@Base+0x120>
   12ed0:	mov	r0, r5
   12ed4:	mvn	r1, #0
   12ed8:	mov	r2, r9
   12edc:	mov	r3, #16
   12ee0:	bl	12aec <table_notify@@Base>
   12ee4:	mov	r0, #0
   12ee8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012eec <table_get_column_compare_function@@Base>:
   12eec:	ldr	r0, [r0]
   12ef0:	add	r1, r1, r1, lsl #1
   12ef4:	add	r0, r0, r1, lsl #2
   12ef8:	ldr	r0, [r0, #8]
   12efc:	bx	lr

00012f00 <table_set_column_compare_function@@Base>:
   12f00:	ldr	r0, [r0]
   12f04:	add	r1, r1, r1, lsl #1
   12f08:	add	r0, r0, r1, lsl #2
   12f0c:	str	r2, [r0, #8]
   12f10:	bx	lr

00012f14 <table_compare_bool@@Base>:
   12f14:	cmp	r0, #0
   12f18:	beq	12f40 <table_compare_bool@@Base+0x2c>
   12f1c:	cmp	r1, #0
   12f20:	beq	12f4c <table_compare_bool@@Base+0x38>
   12f24:	ldrb	r2, [r1]
   12f28:	ldrb	r0, [r0]
   12f2c:	mov	r1, #0
   12f30:	cmp	r0, r2
   12f34:	mvncc	r1, #0
   12f38:	movwhi	r1, #1
   12f3c:	b	12f50 <table_compare_bool@@Base+0x3c>
   12f40:	cmp	r1, #0
   12f44:	mvnne	r1, #0
   12f48:	b	12f50 <table_compare_bool@@Base+0x3c>
   12f4c:	mov	r1, #1
   12f50:	mov	r0, r1
   12f54:	bx	lr

00012f58 <table_compare_int@@Base>:
   12f58:	cmp	r0, #0
   12f5c:	beq	12f84 <table_compare_int@@Base+0x2c>
   12f60:	cmp	r1, #0
   12f64:	beq	12f90 <table_compare_int@@Base+0x38>
   12f68:	ldr	r2, [r1]
   12f6c:	ldr	r0, [r0]
   12f70:	mov	r1, #0
   12f74:	cmp	r0, r2
   12f78:	mvnlt	r1, #0
   12f7c:	movwgt	r1, #1
   12f80:	b	12f94 <table_compare_int@@Base+0x3c>
   12f84:	cmp	r1, #0
   12f88:	mvnne	r1, #0
   12f8c:	b	12f94 <table_compare_int@@Base+0x3c>
   12f90:	mov	r1, #1
   12f94:	mov	r0, r1
   12f98:	bx	lr

00012f9c <table_compare_uint@@Base>:
   12f9c:	cmp	r0, #0
   12fa0:	beq	12fc8 <table_compare_uint@@Base+0x2c>
   12fa4:	cmp	r1, #0
   12fa8:	beq	12fd4 <table_compare_uint@@Base+0x38>
   12fac:	ldr	r2, [r1]
   12fb0:	ldr	r0, [r0]
   12fb4:	mov	r1, #0
   12fb8:	cmp	r0, r2
   12fbc:	mvncc	r1, #0
   12fc0:	movwhi	r1, #1
   12fc4:	b	12fd8 <table_compare_uint@@Base+0x3c>
   12fc8:	cmp	r1, #0
   12fcc:	mvnne	r1, #0
   12fd0:	b	12fd8 <table_compare_uint@@Base+0x3c>
   12fd4:	mov	r1, #1
   12fd8:	mov	r0, r1
   12fdc:	bx	lr

00012fe0 <table_compare_int8@@Base>:
   12fe0:	cmp	r0, #0
   12fe4:	beq	1300c <table_compare_int8@@Base+0x2c>
   12fe8:	cmp	r1, #0
   12fec:	beq	13018 <table_compare_int8@@Base+0x38>
   12ff0:	ldrsb	r2, [r1]
   12ff4:	ldrsb	r0, [r0]
   12ff8:	mov	r1, #0
   12ffc:	cmp	r0, r2
   13000:	mvnlt	r1, #0
   13004:	movwgt	r1, #1
   13008:	b	1301c <table_compare_int8@@Base+0x3c>
   1300c:	cmp	r1, #0
   13010:	mvnne	r1, #0
   13014:	b	1301c <table_compare_int8@@Base+0x3c>
   13018:	mov	r1, #1
   1301c:	mov	r0, r1
   13020:	bx	lr

00013024 <table_compare_uint8@@Base>:
   13024:	cmp	r0, #0
   13028:	beq	13050 <table_compare_uint8@@Base+0x2c>
   1302c:	cmp	r1, #0
   13030:	beq	1305c <table_compare_uint8@@Base+0x38>
   13034:	ldrb	r2, [r1]
   13038:	ldrb	r0, [r0]
   1303c:	mov	r1, #0
   13040:	cmp	r0, r2
   13044:	mvncc	r1, #0
   13048:	movwhi	r1, #1
   1304c:	b	13060 <table_compare_uint8@@Base+0x3c>
   13050:	cmp	r1, #0
   13054:	mvnne	r1, #0
   13058:	b	13060 <table_compare_uint8@@Base+0x3c>
   1305c:	mov	r1, #1
   13060:	mov	r0, r1
   13064:	bx	lr

00013068 <table_compare_int16@@Base>:
   13068:	cmp	r0, #0
   1306c:	beq	13094 <table_compare_int16@@Base+0x2c>
   13070:	cmp	r1, #0
   13074:	beq	130a0 <table_compare_int16@@Base+0x38>
   13078:	ldrsh	r2, [r1]
   1307c:	ldrsh	r0, [r0]
   13080:	mov	r1, #0
   13084:	cmp	r0, r2
   13088:	mvnlt	r1, #0
   1308c:	movwgt	r1, #1
   13090:	b	130a4 <table_compare_int16@@Base+0x3c>
   13094:	cmp	r1, #0
   13098:	mvnne	r1, #0
   1309c:	b	130a4 <table_compare_int16@@Base+0x3c>
   130a0:	mov	r1, #1
   130a4:	mov	r0, r1
   130a8:	bx	lr

000130ac <table_compare_uint16@@Base>:
   130ac:	cmp	r0, #0
   130b0:	beq	130d8 <table_compare_uint16@@Base+0x2c>
   130b4:	cmp	r1, #0
   130b8:	beq	130e4 <table_compare_uint16@@Base+0x38>
   130bc:	ldrh	r2, [r1]
   130c0:	ldrh	r0, [r0]
   130c4:	mov	r1, #0
   130c8:	cmp	r0, r2
   130cc:	mvncc	r1, #0
   130d0:	movwhi	r1, #1
   130d4:	b	130e8 <table_compare_uint16@@Base+0x3c>
   130d8:	cmp	r1, #0
   130dc:	mvnne	r1, #0
   130e0:	b	130e8 <table_compare_uint16@@Base+0x3c>
   130e4:	mov	r1, #1
   130e8:	mov	r0, r1
   130ec:	bx	lr

000130f0 <table_compare_int32@@Base>:
   130f0:	cmp	r0, #0
   130f4:	beq	1311c <table_compare_int32@@Base+0x2c>
   130f8:	cmp	r1, #0
   130fc:	beq	13128 <table_compare_int32@@Base+0x38>
   13100:	ldr	r2, [r1]
   13104:	ldr	r0, [r0]
   13108:	mov	r1, #0
   1310c:	cmp	r0, r2
   13110:	mvnlt	r1, #0
   13114:	movwgt	r1, #1
   13118:	b	1312c <table_compare_int32@@Base+0x3c>
   1311c:	cmp	r1, #0
   13120:	mvnne	r1, #0
   13124:	b	1312c <table_compare_int32@@Base+0x3c>
   13128:	mov	r1, #1
   1312c:	mov	r0, r1
   13130:	bx	lr

00013134 <table_compare_uint32@@Base>:
   13134:	cmp	r0, #0
   13138:	beq	13160 <table_compare_uint32@@Base+0x2c>
   1313c:	cmp	r1, #0
   13140:	beq	1316c <table_compare_uint32@@Base+0x38>
   13144:	ldr	r2, [r1]
   13148:	ldr	r0, [r0]
   1314c:	mov	r1, #0
   13150:	cmp	r0, r2
   13154:	mvncc	r1, #0
   13158:	movwhi	r1, #1
   1315c:	b	13170 <table_compare_uint32@@Base+0x3c>
   13160:	cmp	r1, #0
   13164:	mvnne	r1, #0
   13168:	b	13170 <table_compare_uint32@@Base+0x3c>
   1316c:	mov	r1, #1
   13170:	mov	r0, r1
   13174:	bx	lr

00013178 <table_compare_int64@@Base>:
   13178:	cmp	r0, #0
   1317c:	beq	131c4 <table_compare_int64@@Base+0x4c>
   13180:	cmp	r1, #0
   13184:	beq	131d0 <table_compare_int64@@Base+0x58>
   13188:	push	{r5, r7, fp, lr}
   1318c:	add	fp, sp, #8
   13190:	ldm	r1, {r2, r7}
   13194:	ldm	r0, {r0, r5}
   13198:	mov	r1, #0
   1319c:	subs	r3, r0, r2
   131a0:	sbcs	r3, r5, r7
   131a4:	movwlt	r1, #1
   131a8:	cmp	r1, #0
   131ac:	mvnne	r1, #0
   131b0:	subs	r0, r2, r0
   131b4:	sbcs	r0, r7, r5
   131b8:	movwlt	r1, #1
   131bc:	pop	{r5, r7, fp, lr}
   131c0:	b	131d4 <table_compare_int64@@Base+0x5c>
   131c4:	cmp	r1, #0
   131c8:	mvnne	r1, #0
   131cc:	b	131d4 <table_compare_int64@@Base+0x5c>
   131d0:	mov	r1, #1
   131d4:	mov	r0, r1
   131d8:	bx	lr

000131dc <table_compare_uint64@@Base>:
   131dc:	cmp	r0, #0
   131e0:	beq	13228 <table_compare_uint64@@Base+0x4c>
   131e4:	cmp	r1, #0
   131e8:	beq	13234 <table_compare_uint64@@Base+0x58>
   131ec:	push	{r5, r7, fp, lr}
   131f0:	add	fp, sp, #8
   131f4:	ldm	r1, {r2, r7}
   131f8:	ldm	r0, {r0, r5}
   131fc:	mov	r1, #0
   13200:	subs	r3, r0, r2
   13204:	sbcs	r3, r5, r7
   13208:	movwcc	r1, #1
   1320c:	cmp	r1, #0
   13210:	mvnne	r1, #0
   13214:	subs	r0, r2, r0
   13218:	sbcs	r0, r7, r5
   1321c:	movwcc	r1, #1
   13220:	pop	{r5, r7, fp, lr}
   13224:	b	13238 <table_compare_uint64@@Base+0x5c>
   13228:	cmp	r1, #0
   1322c:	mvnne	r1, #0
   13230:	b	13238 <table_compare_uint64@@Base+0x5c>
   13234:	mov	r1, #1
   13238:	mov	r0, r1
   1323c:	bx	lr

00013240 <table_compare_short@@Base>:
   13240:	cmp	r0, #0
   13244:	beq	1326c <table_compare_short@@Base+0x2c>
   13248:	cmp	r1, #0
   1324c:	beq	13278 <table_compare_short@@Base+0x38>
   13250:	ldrsh	r2, [r1]
   13254:	ldrsh	r0, [r0]
   13258:	mov	r1, #0
   1325c:	cmp	r0, r2
   13260:	mvnlt	r1, #0
   13264:	movwgt	r1, #1
   13268:	b	1327c <table_compare_short@@Base+0x3c>
   1326c:	cmp	r1, #0
   13270:	mvnne	r1, #0
   13274:	b	1327c <table_compare_short@@Base+0x3c>
   13278:	mov	r1, #1
   1327c:	mov	r0, r1
   13280:	bx	lr

00013284 <table_compare_ushort@@Base>:
   13284:	cmp	r0, #0
   13288:	beq	132b0 <table_compare_ushort@@Base+0x2c>
   1328c:	cmp	r1, #0
   13290:	beq	132bc <table_compare_ushort@@Base+0x38>
   13294:	ldrh	r2, [r1]
   13298:	ldrh	r0, [r0]
   1329c:	mov	r1, #0
   132a0:	cmp	r0, r2
   132a4:	mvncc	r1, #0
   132a8:	movwhi	r1, #1
   132ac:	b	132c0 <table_compare_ushort@@Base+0x3c>
   132b0:	cmp	r1, #0
   132b4:	mvnne	r1, #0
   132b8:	b	132c0 <table_compare_ushort@@Base+0x3c>
   132bc:	mov	r1, #1
   132c0:	mov	r0, r1
   132c4:	bx	lr

000132c8 <table_compare_long@@Base>:
   132c8:	cmp	r0, #0
   132cc:	beq	132f4 <table_compare_long@@Base+0x2c>
   132d0:	cmp	r1, #0
   132d4:	beq	13300 <table_compare_long@@Base+0x38>
   132d8:	ldr	r2, [r1]
   132dc:	ldr	r0, [r0]
   132e0:	mov	r1, #0
   132e4:	cmp	r0, r2
   132e8:	mvnlt	r1, #0
   132ec:	movwgt	r1, #1
   132f0:	b	13304 <table_compare_long@@Base+0x3c>
   132f4:	cmp	r1, #0
   132f8:	mvnne	r1, #0
   132fc:	b	13304 <table_compare_long@@Base+0x3c>
   13300:	mov	r1, #1
   13304:	mov	r0, r1
   13308:	bx	lr

0001330c <table_compare_ulong@@Base>:
   1330c:	cmp	r0, #0
   13310:	beq	13338 <table_compare_ulong@@Base+0x2c>
   13314:	cmp	r1, #0
   13318:	beq	13344 <table_compare_ulong@@Base+0x38>
   1331c:	ldr	r2, [r1]
   13320:	ldr	r0, [r0]
   13324:	mov	r1, #0
   13328:	cmp	r0, r2
   1332c:	mvncc	r1, #0
   13330:	movwhi	r1, #1
   13334:	b	13348 <table_compare_ulong@@Base+0x3c>
   13338:	cmp	r1, #0
   1333c:	mvnne	r1, #0
   13340:	b	13348 <table_compare_ulong@@Base+0x3c>
   13344:	mov	r1, #1
   13348:	mov	r0, r1
   1334c:	bx	lr

00013350 <table_compare_llong@@Base>:
   13350:	cmp	r0, #0
   13354:	beq	1339c <table_compare_llong@@Base+0x4c>
   13358:	cmp	r1, #0
   1335c:	beq	133a8 <table_compare_llong@@Base+0x58>
   13360:	push	{r5, r7, fp, lr}
   13364:	add	fp, sp, #8
   13368:	ldm	r1, {r2, r7}
   1336c:	ldm	r0, {r0, r5}
   13370:	mov	r1, #0
   13374:	subs	r3, r0, r2
   13378:	sbcs	r3, r5, r7
   1337c:	movwlt	r1, #1
   13380:	cmp	r1, #0
   13384:	mvnne	r1, #0
   13388:	subs	r0, r2, r0
   1338c:	sbcs	r0, r7, r5
   13390:	movwlt	r1, #1
   13394:	pop	{r5, r7, fp, lr}
   13398:	b	133ac <table_compare_llong@@Base+0x5c>
   1339c:	cmp	r1, #0
   133a0:	mvnne	r1, #0
   133a4:	b	133ac <table_compare_llong@@Base+0x5c>
   133a8:	mov	r1, #1
   133ac:	mov	r0, r1
   133b0:	bx	lr

000133b4 <table_compare_ullong@@Base>:
   133b4:	cmp	r0, #0
   133b8:	beq	133e0 <table_compare_ullong@@Base+0x2c>
   133bc:	cmp	r1, #0
   133c0:	beq	133ec <table_compare_ullong@@Base+0x38>
   133c4:	ldr	r2, [r1]
   133c8:	ldr	r0, [r0]
   133cc:	mov	r1, #0
   133d0:	cmp	r0, r2
   133d4:	mvncc	r1, #0
   133d8:	movwhi	r1, #1
   133dc:	b	133f0 <table_compare_ullong@@Base+0x3c>
   133e0:	cmp	r1, #0
   133e4:	mvnne	r1, #0
   133e8:	b	133f0 <table_compare_ullong@@Base+0x3c>
   133ec:	mov	r1, #1
   133f0:	mov	r0, r1
   133f4:	bx	lr

000133f8 <table_compare_float@@Base>:
   133f8:	cmp	r0, #0
   133fc:	beq	13428 <table_compare_float@@Base+0x30>
   13400:	cmp	r1, #0
   13404:	beq	13434 <table_compare_float@@Base+0x3c>
   13408:	vldr	s0, [r1]
   1340c:	vldr	s2, [r0]
   13410:	mov	r1, #0
   13414:	vcmpe.f32	s2, s0
   13418:	vmrs	APSR_nzcv, fpscr
   1341c:	mvnmi	r1, #0
   13420:	movwgt	r1, #1
   13424:	b	13438 <table_compare_float@@Base+0x40>
   13428:	cmp	r1, #0
   1342c:	mvnne	r1, #0
   13430:	b	13438 <table_compare_float@@Base+0x40>
   13434:	mov	r1, #1
   13438:	mov	r0, r1
   1343c:	bx	lr

00013440 <table_compare_double@@Base>:
   13440:	cmp	r0, #0
   13444:	beq	13470 <table_compare_double@@Base+0x30>
   13448:	cmp	r1, #0
   1344c:	beq	1347c <table_compare_double@@Base+0x3c>
   13450:	vldr	d16, [r1]
   13454:	vldr	d17, [r0]
   13458:	mov	r1, #0
   1345c:	vcmpe.f64	d17, d16
   13460:	vmrs	APSR_nzcv, fpscr
   13464:	mvnmi	r1, #0
   13468:	movwgt	r1, #1
   1346c:	b	13480 <table_compare_double@@Base+0x40>
   13470:	cmp	r1, #0
   13474:	mvnne	r1, #0
   13478:	b	13480 <table_compare_double@@Base+0x40>
   1347c:	mov	r1, #1
   13480:	mov	r0, r1
   13484:	bx	lr

00013488 <table_compare_ldouble@@Base>:
   13488:	cmp	r0, #0
   1348c:	beq	134b8 <table_compare_ldouble@@Base+0x30>
   13490:	cmp	r1, #0
   13494:	beq	134c4 <table_compare_ldouble@@Base+0x3c>
   13498:	vldr	d16, [r1]
   1349c:	vldr	d17, [r0]
   134a0:	mov	r1, #0
   134a4:	vcmpe.f64	d17, d16
   134a8:	vmrs	APSR_nzcv, fpscr
   134ac:	mvnmi	r1, #0
   134b0:	movwgt	r1, #1
   134b4:	b	134c8 <table_compare_ldouble@@Base+0x40>
   134b8:	cmp	r1, #0
   134bc:	mvnne	r1, #0
   134c0:	b	134c8 <table_compare_ldouble@@Base+0x40>
   134c4:	mov	r1, #1
   134c8:	mov	r0, r1
   134cc:	bx	lr

000134d0 <table_compare_char@@Base>:
   134d0:	cmp	r0, #0
   134d4:	beq	134fc <table_compare_char@@Base+0x2c>
   134d8:	cmp	r1, #0
   134dc:	beq	13508 <table_compare_char@@Base+0x38>
   134e0:	ldrb	r2, [r1]
   134e4:	ldrb	r0, [r0]
   134e8:	mov	r1, #0
   134ec:	cmp	r0, r2
   134f0:	mvncc	r1, #0
   134f4:	movwhi	r1, #1
   134f8:	b	1350c <table_compare_char@@Base+0x3c>
   134fc:	cmp	r1, #0
   13500:	mvnne	r1, #0
   13504:	b	1350c <table_compare_char@@Base+0x3c>
   13508:	mov	r1, #1
   1350c:	mov	r0, r1
   13510:	bx	lr

00013514 <table_compare_uchar@@Base>:
   13514:	cmp	r0, #0
   13518:	beq	13540 <table_compare_uchar@@Base+0x2c>
   1351c:	cmp	r1, #0
   13520:	beq	1354c <table_compare_uchar@@Base+0x38>
   13524:	ldrb	r2, [r1]
   13528:	ldrb	r0, [r0]
   1352c:	mov	r1, #0
   13530:	cmp	r0, r2
   13534:	mvncc	r1, #0
   13538:	movwhi	r1, #1
   1353c:	b	13550 <table_compare_uchar@@Base+0x3c>
   13540:	cmp	r1, #0
   13544:	mvnne	r1, #0
   13548:	b	13550 <table_compare_uchar@@Base+0x3c>
   1354c:	mov	r1, #1
   13550:	mov	r0, r1
   13554:	bx	lr

00013558 <table_compare_string@@Base>:
   13558:	cmp	r0, #0
   1355c:	beq	1356c <table_compare_string@@Base+0x14>
   13560:	cmp	r1, #0
   13564:	beq	13578 <table_compare_string@@Base+0x20>
   13568:	b	11ee0 <strcmp@plt>
   1356c:	cmp	r1, #0
   13570:	mvnne	r1, #0
   13574:	b	1357c <table_compare_string@@Base+0x24>
   13578:	mov	r1, #1
   1357c:	mov	r0, r1
   13580:	bx	lr

00013584 <table_compare_ptr@@Base>:
   13584:	mov	r2, #0
   13588:	cmp	r0, r1
   1358c:	mvncc	r2, #0
   13590:	movwhi	r2, #1
   13594:	mov	r0, r2
   13598:	bx	lr

0001359c <table_get_default_compare_function_for_data_type@@Base>:
   1359c:	cmp	r0, #23
   135a0:	movwls	r1, #19440	; 0x4bf0
   135a4:	movhi	r0, #0
   135a8:	movtls	r1, #1
   135ac:	ldrls	r0, [r1, r0, lsl #2]
   135b0:	bx	lr

000135b4 <table_get@@Base>:
   135b4:	push	{fp, lr}
   135b8:	mov	fp, sp
   135bc:	bl	14164 <table_get_cell_ptr@@Base>
   135c0:	ldr	r0, [r0]
   135c4:	pop	{fp, pc}

000135c8 <table_get_bool@@Base>:
   135c8:	push	{fp, lr}
   135cc:	mov	fp, sp
   135d0:	bl	14164 <table_get_cell_ptr@@Base>
   135d4:	ldr	r0, [r0]
   135d8:	ldrb	r0, [r0]
   135dc:	pop	{fp, pc}

000135e0 <table_get_int@@Base>:
   135e0:	push	{fp, lr}
   135e4:	mov	fp, sp
   135e8:	bl	14164 <table_get_cell_ptr@@Base>
   135ec:	ldr	r0, [r0]
   135f0:	ldr	r0, [r0]
   135f4:	pop	{fp, pc}

000135f8 <table_get_uint@@Base>:
   135f8:	push	{fp, lr}
   135fc:	mov	fp, sp
   13600:	bl	14164 <table_get_cell_ptr@@Base>
   13604:	ldr	r0, [r0]
   13608:	ldr	r0, [r0]
   1360c:	pop	{fp, pc}

00013610 <table_get_int8@@Base>:
   13610:	push	{fp, lr}
   13614:	mov	fp, sp
   13618:	bl	14164 <table_get_cell_ptr@@Base>
   1361c:	ldr	r0, [r0]
   13620:	ldrsb	r0, [r0]
   13624:	pop	{fp, pc}

00013628 <table_get_uint8@@Base>:
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	bl	14164 <table_get_cell_ptr@@Base>
   13634:	ldr	r0, [r0]
   13638:	ldrb	r0, [r0]
   1363c:	pop	{fp, pc}

00013640 <table_get_int16@@Base>:
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	bl	14164 <table_get_cell_ptr@@Base>
   1364c:	ldr	r0, [r0]
   13650:	ldrsh	r0, [r0]
   13654:	pop	{fp, pc}

00013658 <table_get_uint16@@Base>:
   13658:	push	{fp, lr}
   1365c:	mov	fp, sp
   13660:	bl	14164 <table_get_cell_ptr@@Base>
   13664:	ldr	r0, [r0]
   13668:	ldrh	r0, [r0]
   1366c:	pop	{fp, pc}

00013670 <table_get_int32@@Base>:
   13670:	push	{fp, lr}
   13674:	mov	fp, sp
   13678:	bl	14164 <table_get_cell_ptr@@Base>
   1367c:	ldr	r0, [r0]
   13680:	ldr	r0, [r0]
   13684:	pop	{fp, pc}

00013688 <table_get_uint32@@Base>:
   13688:	push	{fp, lr}
   1368c:	mov	fp, sp
   13690:	bl	14164 <table_get_cell_ptr@@Base>
   13694:	ldr	r0, [r0]
   13698:	ldr	r0, [r0]
   1369c:	pop	{fp, pc}

000136a0 <table_get_int64@@Base>:
   136a0:	push	{fp, lr}
   136a4:	mov	fp, sp
   136a8:	bl	14164 <table_get_cell_ptr@@Base>
   136ac:	ldr	r0, [r0]
   136b0:	ldrd	r0, [r0]
   136b4:	pop	{fp, pc}

000136b8 <table_get_uint64@@Base>:
   136b8:	push	{fp, lr}
   136bc:	mov	fp, sp
   136c0:	bl	14164 <table_get_cell_ptr@@Base>
   136c4:	ldr	r0, [r0]
   136c8:	ldrd	r0, [r0]
   136cc:	pop	{fp, pc}

000136d0 <table_get_short@@Base>:
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	bl	14164 <table_get_cell_ptr@@Base>
   136dc:	ldr	r0, [r0]
   136e0:	ldrsh	r0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_ushort@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	14164 <table_get_cell_ptr@@Base>
   136f4:	ldr	r0, [r0]
   136f8:	ldrh	r0, [r0]
   136fc:	pop	{fp, pc}

00013700 <table_get_long@@Base>:
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	bl	14164 <table_get_cell_ptr@@Base>
   1370c:	ldr	r0, [r0]
   13710:	ldr	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_ulong@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	14164 <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	ldr	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_llong@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	14164 <table_get_cell_ptr@@Base>
   1373c:	ldr	r0, [r0]
   13740:	ldrd	r0, [r0]
   13744:	pop	{fp, pc}

00013748 <table_get_ullong@@Base>:
   13748:	push	{fp, lr}
   1374c:	mov	fp, sp
   13750:	bl	14164 <table_get_cell_ptr@@Base>
   13754:	ldr	r0, [r0]
   13758:	ldrd	r0, [r0]
   1375c:	pop	{fp, pc}

00013760 <table_get_float@@Base>:
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	bl	14164 <table_get_cell_ptr@@Base>
   1376c:	ldr	r0, [r0]
   13770:	vldr	s0, [r0]
   13774:	pop	{fp, pc}

00013778 <table_get_double@@Base>:
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	bl	14164 <table_get_cell_ptr@@Base>
   13784:	ldr	r0, [r0]
   13788:	vldr	d0, [r0]
   1378c:	pop	{fp, pc}

00013790 <table_get_ldouble@@Base>:
   13790:	push	{fp, lr}
   13794:	mov	fp, sp
   13798:	bl	14164 <table_get_cell_ptr@@Base>
   1379c:	ldr	r0, [r0]
   137a0:	vldr	d0, [r0]
   137a4:	pop	{fp, pc}

000137a8 <table_get_char@@Base>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	bl	14164 <table_get_cell_ptr@@Base>
   137b4:	ldr	r0, [r0]
   137b8:	ldrb	r0, [r0]
   137bc:	pop	{fp, pc}

000137c0 <table_get_uchar@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	14164 <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	ldrb	r0, [r0]
   137d4:	pop	{fp, pc}

000137d8 <table_get_string@@Base>:
   137d8:	push	{fp, lr}
   137dc:	mov	fp, sp
   137e0:	bl	14164 <table_get_cell_ptr@@Base>
   137e4:	ldr	r0, [r0]
   137e8:	pop	{fp, pc}

000137ec <table_get_ptr@@Base>:
   137ec:	push	{fp, lr}
   137f0:	mov	fp, sp
   137f4:	bl	14164 <table_get_cell_ptr@@Base>
   137f8:	ldr	r0, [r0]
   137fc:	pop	{fp, pc}

00013800 <table_row_init@@Base>:
   13800:	push	{r4, r5, fp, lr}
   13804:	add	fp, sp, #8
   13808:	mov	r4, r1
   1380c:	ldr	r1, [r0, #12]
   13810:	ldr	r5, [r0, #16]
   13814:	lsl	r0, r1, #2
   13818:	bl	11f1c <malloc@plt>
   1381c:	str	r0, [r5, r4, lsl #2]
   13820:	pop	{r4, r5, fp, pc}

00013824 <table_get_row_ptr@@Base>:
   13824:	ldr	r0, [r0, #16]
   13828:	add	r0, r0, r1, lsl #2
   1382c:	bx	lr

00013830 <table_row_destroy@@Base>:
   13830:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13834:	add	fp, sp, #24
   13838:	mov	r4, r1
   1383c:	mov	r5, r0
   13840:	bl	12be0 <table_get_column_length@@Base>
   13844:	ldr	r8, [r5, #16]
   13848:	cmp	r0, #1
   1384c:	blt	13874 <table_row_destroy@@Base+0x44>
   13850:	mov	r6, r0
   13854:	mov	r7, #0
   13858:	mov	r0, r5
   1385c:	mov	r1, r4
   13860:	mov	r2, r7
   13864:	bl	14180 <table_cell_destroy@@Base>
   13868:	add	r7, r7, #1
   1386c:	cmp	r6, r7
   13870:	bne	13858 <table_row_destroy@@Base+0x28>
   13874:	ldr	r0, [r8, r4, lsl #2]
   13878:	cmp	r0, #0
   1387c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13880:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13884:	b	11eec <free@plt>

00013888 <table_get_row_length@@Base>:
   13888:	ldr	r0, [r0, #20]
   1388c:	bx	lr

00013890 <table_add_row@@Base>:
   13890:	push	{r4, r5, r6, r7, fp, lr}
   13894:	add	fp, sp, #16
   13898:	ldr	r5, [r0, #20]
   1389c:	ldr	r1, [r0, #24]
   138a0:	mov	r4, r0
   138a4:	udiv	r0, r5, r1
   138a8:	mls	r0, r0, r1, r5
   138ac:	cmp	r0, #0
   138b0:	bne	138d4 <table_add_row@@Base+0x44>
   138b4:	ldr	r2, [r4, #28]
   138b8:	ldr	r0, [r4, #16]
   138bc:	add	r1, r2, r1
   138c0:	str	r1, [r4, #28]
   138c4:	lsl	r1, r1, #2
   138c8:	bl	11f04 <realloc@plt>
   138cc:	str	r0, [r4, #16]
   138d0:	ldr	r5, [r4, #20]
   138d4:	mov	r0, r4
   138d8:	bl	12be0 <table_get_column_length@@Base>
   138dc:	mov	r6, r0
   138e0:	ldr	r0, [r4, #12]
   138e4:	ldr	r7, [r4, #16]
   138e8:	lsl	r0, r0, #2
   138ec:	bl	11f1c <malloc@plt>
   138f0:	cmp	r6, #1
   138f4:	str	r0, [r7, r5, lsl #2]
   138f8:	blt	1391c <table_add_row@@Base+0x8c>
   138fc:	mov	r7, #0
   13900:	mov	r0, r4
   13904:	mov	r1, r5
   13908:	mov	r2, r7
   1390c:	bl	14144 <table_cell_init@@Base>
   13910:	add	r7, r7, #1
   13914:	cmp	r6, r7
   13918:	bne	13900 <table_add_row@@Base+0x70>
   1391c:	ldr	r1, [r4, #20]
   13920:	mov	r0, r4
   13924:	mvn	r2, #0
   13928:	mov	r3, #2
   1392c:	bl	12aec <table_notify@@Base>
   13930:	ldr	r0, [r4, #20]
   13934:	add	r1, r0, #1
   13938:	str	r1, [r4, #20]
   1393c:	pop	{r4, r5, r6, r7, fp, pc}

00013940 <table_remove_row@@Base>:
   13940:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13944:	add	fp, sp, #24
   13948:	ldr	r8, [r0, #20]
   1394c:	mov	r4, r1
   13950:	mov	r5, r0
   13954:	bl	12be0 <table_get_column_length@@Base>
   13958:	cmp	r0, #1
   1395c:	blt	139a8 <table_remove_row@@Base+0x68>
   13960:	mov	r6, r0
   13964:	mov	r7, #0
   13968:	mov	r0, r5
   1396c:	mov	r1, r7
   13970:	bl	12c54 <table_get_column_data_type@@Base>
   13974:	cmp	r0, #23
   13978:	beq	1399c <table_remove_row@@Base+0x5c>
   1397c:	mov	r0, r5
   13980:	mov	r1, r4
   13984:	mov	r2, r7
   13988:	bl	14164 <table_get_cell_ptr@@Base>
   1398c:	ldr	r0, [r0]
   13990:	cmp	r0, #0
   13994:	beq	1399c <table_remove_row@@Base+0x5c>
   13998:	bl	11eec <free@plt>
   1399c:	add	r7, r7, #1
   139a0:	cmp	r6, r7
   139a4:	bne	13968 <table_remove_row@@Base+0x28>
   139a8:	ldr	r0, [r5, #16]
   139ac:	ldr	r0, [r0, r4, lsl #2]
   139b0:	cmp	r0, #0
   139b4:	beq	139bc <table_remove_row@@Base+0x7c>
   139b8:	bl	11eec <free@plt>
   139bc:	sub	r0, r8, #1
   139c0:	cmp	r0, r4
   139c4:	ble	139e8 <table_remove_row@@Base+0xa8>
   139c8:	mov	r1, r4
   139cc:	ldr	r2, [r5, #16]
   139d0:	add	r3, r2, r1, lsl #2
   139d4:	ldr	r3, [r3, #4]
   139d8:	str	r3, [r2, r1, lsl #2]
   139dc:	add	r1, r1, #1
   139e0:	cmp	r0, r1
   139e4:	bne	139cc <table_remove_row@@Base+0x8c>
   139e8:	ldr	r0, [r5, #20]
   139ec:	ldr	r1, [r5, #24]
   139f0:	sub	r0, r0, #1
   139f4:	udiv	r2, r0, r1
   139f8:	str	r0, [r5, #20]
   139fc:	mls	r0, r2, r1, r0
   13a00:	cmp	r0, #0
   13a04:	bne	13a24 <table_remove_row@@Base+0xe4>
   13a08:	ldr	r2, [r5, #28]
   13a0c:	ldr	r0, [r5, #16]
   13a10:	sub	r1, r2, r1
   13a14:	str	r1, [r5, #28]
   13a18:	lsl	r1, r1, #2
   13a1c:	bl	11f04 <realloc@plt>
   13a20:	str	r0, [r5, #16]
   13a24:	mov	r0, r5
   13a28:	mov	r1, r4
   13a2c:	mvn	r2, #0
   13a30:	mov	r3, #4
   13a34:	bl	12aec <table_notify@@Base>
   13a38:	mov	r0, #0
   13a3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a40 <table_set_row_ptr@@Base>:
   13a40:	ldr	r2, [r2]
   13a44:	ldr	r0, [r0, #16]
   13a48:	str	r2, [r0, r1, lsl #2]
   13a4c:	bx	lr

00013a50 <table_set@@Base>:
   13a50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a54:	add	fp, sp, #24
   13a58:	mov	r8, r3
   13a5c:	mov	r4, r2
   13a60:	mov	r9, r1
   13a64:	mov	r6, r0
   13a68:	bl	14164 <table_get_cell_ptr@@Base>
   13a6c:	mov	r5, r0
   13a70:	mov	r0, r6
   13a74:	mov	r1, r4
   13a78:	bl	12bb8 <table_get_col_ptr@@Base>
   13a7c:	ldr	r1, [fp, #8]
   13a80:	mvn	r7, #0
   13a84:	cmp	r1, #23
   13a88:	bhi	13d48 <table_set@@Base+0x2f8>
   13a8c:	add	r2, pc, #0
   13a90:	ldr	pc, [r2, r1, lsl #2]
   13a94:	strdeq	r3, [r1], -r4
   13a98:	andeq	r3, r1, r4, lsl #22
   13a9c:	andeq	r3, r1, r4, lsl fp
   13aa0:	andeq	r3, r1, r4, lsr #22
   13aa4:	andeq	r3, r1, r4, lsr fp
   13aa8:	andeq	r3, r1, r4, asr #22
   13aac:	andeq	r3, r1, r4, asr fp
   13ab0:	andeq	r3, r1, r4, ror #22
   13ab4:	andeq	r3, r1, r4, ror fp
   13ab8:	andeq	r3, r1, r4, lsl #23
   13abc:	muleq	r1, r4, fp
   13ac0:	andeq	r3, r1, r4, lsr #23
   13ac4:	ldrdeq	r3, [r1], -ip
   13ac8:	andeq	r3, r1, ip, ror #23
   13acc:	strdeq	r3, [r1], -ip
   13ad0:	andeq	r3, r1, ip, lsl #24
   13ad4:	andeq	r3, r1, ip, lsl ip
   13ad8:	andeq	r3, r1, r0, asr ip
   13adc:	andeq	r3, r1, r0, ror #24
   13ae0:	andeq	r3, r1, r0, lsr #25
   13ae4:			; <UNDEFINED> instruction: 0x00013cb0
   13ae8:	andeq	r3, r1, r0, asr #25
   13aec:	strdeq	r3, [r1], -ip
   13af0:	andeq	r3, r1, r0, asr sp
   13af4:	ldr	r0, [r0, #4]
   13af8:	cmp	r0, #0
   13afc:	bne	13d48 <table_set@@Base+0x2f8>
   13b00:	b	13c28 <table_set@@Base+0x1d8>
   13b04:	ldr	r0, [r0, #4]
   13b08:	cmp	r0, #1
   13b0c:	beq	13c28 <table_set@@Base+0x1d8>
   13b10:	b	13d48 <table_set@@Base+0x2f8>
   13b14:	ldr	r0, [r0, #4]
   13b18:	cmp	r0, #2
   13b1c:	beq	13d08 <table_set@@Base+0x2b8>
   13b20:	b	13d48 <table_set@@Base+0x2f8>
   13b24:	ldr	r0, [r0, #4]
   13b28:	cmp	r0, #3
   13b2c:	beq	13d08 <table_set@@Base+0x2b8>
   13b30:	b	13d48 <table_set@@Base+0x2f8>
   13b34:	ldr	r0, [r0, #4]
   13b38:	cmp	r0, #4
   13b3c:	beq	13bb0 <table_set@@Base+0x160>
   13b40:	b	13d48 <table_set@@Base+0x2f8>
   13b44:	ldr	r0, [r0, #4]
   13b48:	cmp	r0, #5
   13b4c:	beq	13bb0 <table_set@@Base+0x160>
   13b50:	b	13d48 <table_set@@Base+0x2f8>
   13b54:	ldr	r0, [r0, #4]
   13b58:	cmp	r0, #6
   13b5c:	beq	13c28 <table_set@@Base+0x1d8>
   13b60:	b	13d48 <table_set@@Base+0x2f8>
   13b64:	ldr	r0, [r0, #4]
   13b68:	cmp	r0, #7
   13b6c:	beq	13c28 <table_set@@Base+0x1d8>
   13b70:	b	13d48 <table_set@@Base+0x2f8>
   13b74:	ldr	r0, [r0, #4]
   13b78:	cmp	r0, #8
   13b7c:	beq	13c6c <table_set@@Base+0x21c>
   13b80:	b	13d48 <table_set@@Base+0x2f8>
   13b84:	ldr	r0, [r0, #4]
   13b88:	cmp	r0, #9
   13b8c:	beq	13c6c <table_set@@Base+0x21c>
   13b90:	b	13d48 <table_set@@Base+0x2f8>
   13b94:	ldr	r0, [r0, #4]
   13b98:	cmp	r0, #10
   13b9c:	beq	13bb0 <table_set@@Base+0x160>
   13ba0:	b	13d48 <table_set@@Base+0x2f8>
   13ba4:	ldr	r0, [r0, #4]
   13ba8:	cmp	r0, #11
   13bac:	bne	13d48 <table_set@@Base+0x2f8>
   13bb0:	ldr	r0, [r5]
   13bb4:	cmp	r0, #0
   13bb8:	bne	13bd0 <table_set@@Base+0x180>
   13bbc:	mov	r0, #2
   13bc0:	bl	11f1c <malloc@plt>
   13bc4:	cmp	r0, #0
   13bc8:	str	r0, [r5]
   13bcc:	beq	13d48 <table_set@@Base+0x2f8>
   13bd0:	ldrh	r1, [r8]
   13bd4:	strh	r1, [r0]
   13bd8:	b	13d30 <table_set@@Base+0x2e0>
   13bdc:	ldr	r0, [r0, #4]
   13be0:	cmp	r0, #12
   13be4:	beq	13c28 <table_set@@Base+0x1d8>
   13be8:	b	13d48 <table_set@@Base+0x2f8>
   13bec:	ldr	r0, [r0, #4]
   13bf0:	cmp	r0, #13
   13bf4:	beq	13c28 <table_set@@Base+0x1d8>
   13bf8:	b	13d48 <table_set@@Base+0x2f8>
   13bfc:	ldr	r0, [r0, #4]
   13c00:	cmp	r0, #14
   13c04:	beq	13c6c <table_set@@Base+0x21c>
   13c08:	b	13d48 <table_set@@Base+0x2f8>
   13c0c:	ldr	r0, [r0, #4]
   13c10:	cmp	r0, #15
   13c14:	beq	13c6c <table_set@@Base+0x21c>
   13c18:	b	13d48 <table_set@@Base+0x2f8>
   13c1c:	ldr	r0, [r0, #4]
   13c20:	cmp	r0, #16
   13c24:	bne	13d48 <table_set@@Base+0x2f8>
   13c28:	ldr	r0, [r5]
   13c2c:	cmp	r0, #0
   13c30:	bne	13c48 <table_set@@Base+0x1f8>
   13c34:	mov	r0, #4
   13c38:	bl	11f1c <malloc@plt>
   13c3c:	cmp	r0, #0
   13c40:	str	r0, [r5]
   13c44:	beq	13d48 <table_set@@Base+0x2f8>
   13c48:	ldr	r1, [r8]
   13c4c:	b	13c98 <table_set@@Base+0x248>
   13c50:	ldr	r0, [r0, #4]
   13c54:	cmp	r0, #17
   13c58:	beq	13c6c <table_set@@Base+0x21c>
   13c5c:	b	13d48 <table_set@@Base+0x2f8>
   13c60:	ldr	r0, [r0, #4]
   13c64:	cmp	r0, #18
   13c68:	bne	13d48 <table_set@@Base+0x2f8>
   13c6c:	ldr	r0, [r5]
   13c70:	cmp	r0, #0
   13c74:	bne	13c8c <table_set@@Base+0x23c>
   13c78:	mov	r0, #8
   13c7c:	bl	11f1c <malloc@plt>
   13c80:	cmp	r0, #0
   13c84:	str	r0, [r5]
   13c88:	beq	13d48 <table_set@@Base+0x2f8>
   13c8c:	ldr	r1, [r8]
   13c90:	ldr	r2, [r8, #4]
   13c94:	str	r2, [r0, #4]
   13c98:	str	r1, [r0]
   13c9c:	b	13d30 <table_set@@Base+0x2e0>
   13ca0:	ldr	r0, [r0, #4]
   13ca4:	cmp	r0, #19
   13ca8:	beq	13d08 <table_set@@Base+0x2b8>
   13cac:	b	13d48 <table_set@@Base+0x2f8>
   13cb0:	ldr	r0, [r0, #4]
   13cb4:	cmp	r0, #20
   13cb8:	beq	13d08 <table_set@@Base+0x2b8>
   13cbc:	b	13d48 <table_set@@Base+0x2f8>
   13cc0:	ldr	r0, [r0, #4]
   13cc4:	cmp	r0, #21
   13cc8:	bne	13d48 <table_set@@Base+0x2f8>
   13ccc:	mov	r0, r8
   13cd0:	bl	11f40 <strlen@plt>
   13cd4:	ldr	r2, [r5]
   13cd8:	add	r1, r0, #1
   13cdc:	mov	r0, r2
   13ce0:	bl	11f04 <realloc@plt>
   13ce4:	cmp	r0, #0
   13ce8:	str	r0, [r5]
   13cec:	beq	13d48 <table_set@@Base+0x2f8>
   13cf0:	mov	r1, r8
   13cf4:	bl	11f10 <strcpy@plt>
   13cf8:	b	13d30 <table_set@@Base+0x2e0>
   13cfc:	ldr	r0, [r0, #4]
   13d00:	cmp	r0, #22
   13d04:	bne	13d48 <table_set@@Base+0x2f8>
   13d08:	ldr	r0, [r5]
   13d0c:	cmp	r0, #0
   13d10:	bne	13d28 <table_set@@Base+0x2d8>
   13d14:	mov	r0, #1
   13d18:	bl	11f1c <malloc@plt>
   13d1c:	cmp	r0, #0
   13d20:	str	r0, [r5]
   13d24:	beq	13d48 <table_set@@Base+0x2f8>
   13d28:	ldrb	r1, [r8]
   13d2c:	strb	r1, [r0]
   13d30:	mov	r0, r6
   13d34:	mov	r1, r9
   13d38:	mov	r2, r4
   13d3c:	mov	r3, #1
   13d40:	bl	12aec <table_notify@@Base>
   13d44:	mov	r7, #0
   13d48:	mov	r0, r7
   13d4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d50:	ldr	r0, [r0, #4]
   13d54:	cmp	r0, #23
   13d58:	bne	13d48 <table_set@@Base+0x2f8>
   13d5c:	str	r8, [r5]
   13d60:	b	13d30 <table_set@@Base+0x2e0>

00013d64 <table_set_bool@@Base>:
   13d64:	push	{fp, lr}
   13d68:	mov	fp, sp
   13d6c:	sub	sp, sp, #8
   13d70:	strb	r3, [fp, #-1]
   13d74:	mov	r3, #22
   13d78:	str	r3, [sp]
   13d7c:	sub	r3, fp, #1
   13d80:	bl	13a50 <table_set@@Base>
   13d84:	mov	sp, fp
   13d88:	pop	{fp, pc}

00013d8c <table_set_int@@Base>:
   13d8c:	push	{fp, lr}
   13d90:	mov	fp, sp
   13d94:	sub	sp, sp, #8
   13d98:	str	r3, [sp, #4]
   13d9c:	mov	r3, #0
   13da0:	str	r3, [sp]
   13da4:	add	r3, sp, #4
   13da8:	bl	13a50 <table_set@@Base>
   13dac:	mov	sp, fp
   13db0:	pop	{fp, pc}

00013db4 <table_set_uint@@Base>:
   13db4:	push	{fp, lr}
   13db8:	mov	fp, sp
   13dbc:	sub	sp, sp, #8
   13dc0:	str	r3, [sp, #4]
   13dc4:	mov	r3, #1
   13dc8:	str	r3, [sp]
   13dcc:	add	r3, sp, #4
   13dd0:	bl	13a50 <table_set@@Base>
   13dd4:	mov	sp, fp
   13dd8:	pop	{fp, pc}

00013ddc <table_set_int8@@Base>:
   13ddc:	push	{fp, lr}
   13de0:	mov	fp, sp
   13de4:	sub	sp, sp, #8
   13de8:	strb	r3, [fp, #-1]
   13dec:	mov	r3, #2
   13df0:	str	r3, [sp]
   13df4:	sub	r3, fp, #1
   13df8:	bl	13a50 <table_set@@Base>
   13dfc:	mov	sp, fp
   13e00:	pop	{fp, pc}

00013e04 <table_set_uint8@@Base>:
   13e04:	push	{fp, lr}
   13e08:	mov	fp, sp
   13e0c:	sub	sp, sp, #8
   13e10:	strb	r3, [fp, #-1]
   13e14:	mov	r3, #3
   13e18:	str	r3, [sp]
   13e1c:	sub	r3, fp, #1
   13e20:	bl	13a50 <table_set@@Base>
   13e24:	mov	sp, fp
   13e28:	pop	{fp, pc}

00013e2c <table_set_int16@@Base>:
   13e2c:	push	{fp, lr}
   13e30:	mov	fp, sp
   13e34:	sub	sp, sp, #8
   13e38:	strh	r3, [fp, #-2]
   13e3c:	mov	r3, #4
   13e40:	str	r3, [sp]
   13e44:	sub	r3, fp, #2
   13e48:	bl	13a50 <table_set@@Base>
   13e4c:	mov	sp, fp
   13e50:	pop	{fp, pc}

00013e54 <table_set_uint16@@Base>:
   13e54:	push	{fp, lr}
   13e58:	mov	fp, sp
   13e5c:	sub	sp, sp, #8
   13e60:	strh	r3, [fp, #-2]
   13e64:	mov	r3, #5
   13e68:	str	r3, [sp]
   13e6c:	sub	r3, fp, #2
   13e70:	bl	13a50 <table_set@@Base>
   13e74:	mov	sp, fp
   13e78:	pop	{fp, pc}

00013e7c <table_set_int32@@Base>:
   13e7c:	push	{fp, lr}
   13e80:	mov	fp, sp
   13e84:	sub	sp, sp, #8
   13e88:	str	r3, [sp, #4]
   13e8c:	mov	r3, #6
   13e90:	str	r3, [sp]
   13e94:	add	r3, sp, #4
   13e98:	bl	13a50 <table_set@@Base>
   13e9c:	mov	sp, fp
   13ea0:	pop	{fp, pc}

00013ea4 <table_set_uint32@@Base>:
   13ea4:	push	{fp, lr}
   13ea8:	mov	fp, sp
   13eac:	sub	sp, sp, #8
   13eb0:	str	r3, [sp, #4]
   13eb4:	mov	r3, #7
   13eb8:	str	r3, [sp]
   13ebc:	add	r3, sp, #4
   13ec0:	bl	13a50 <table_set@@Base>
   13ec4:	mov	sp, fp
   13ec8:	pop	{fp, pc}

00013ecc <table_set_int64@@Base>:
   13ecc:	push	{fp, lr}
   13ed0:	mov	fp, sp
   13ed4:	sub	sp, sp, #16
   13ed8:	ldr	r3, [fp, #12]
   13edc:	str	r3, [sp, #12]
   13ee0:	ldr	r3, [fp, #8]
   13ee4:	str	r3, [sp, #8]
   13ee8:	mov	r3, #8
   13eec:	str	r3, [sp]
   13ef0:	add	r3, sp, #8
   13ef4:	bl	13a50 <table_set@@Base>
   13ef8:	mov	sp, fp
   13efc:	pop	{fp, pc}

00013f00 <table_set_uint64@@Base>:
   13f00:	push	{fp, lr}
   13f04:	mov	fp, sp
   13f08:	sub	sp, sp, #16
   13f0c:	ldr	r3, [fp, #12]
   13f10:	str	r3, [sp, #12]
   13f14:	ldr	r3, [fp, #8]
   13f18:	str	r3, [sp, #8]
   13f1c:	mov	r3, #9
   13f20:	str	r3, [sp]
   13f24:	add	r3, sp, #8
   13f28:	bl	13a50 <table_set@@Base>
   13f2c:	mov	sp, fp
   13f30:	pop	{fp, pc}

00013f34 <table_set_short@@Base>:
   13f34:	push	{fp, lr}
   13f38:	mov	fp, sp
   13f3c:	sub	sp, sp, #8
   13f40:	strh	r3, [fp, #-2]
   13f44:	mov	r3, #10
   13f48:	str	r3, [sp]
   13f4c:	sub	r3, fp, #2
   13f50:	bl	13a50 <table_set@@Base>
   13f54:	mov	sp, fp
   13f58:	pop	{fp, pc}

00013f5c <table_set_ushort@@Base>:
   13f5c:	push	{fp, lr}
   13f60:	mov	fp, sp
   13f64:	sub	sp, sp, #8
   13f68:	strh	r3, [fp, #-2]
   13f6c:	mov	r3, #11
   13f70:	str	r3, [sp]
   13f74:	sub	r3, fp, #2
   13f78:	bl	13a50 <table_set@@Base>
   13f7c:	mov	sp, fp
   13f80:	pop	{fp, pc}

00013f84 <table_set_long@@Base>:
   13f84:	push	{fp, lr}
   13f88:	mov	fp, sp
   13f8c:	sub	sp, sp, #8
   13f90:	str	r3, [sp, #4]
   13f94:	mov	r3, #12
   13f98:	str	r3, [sp]
   13f9c:	add	r3, sp, #4
   13fa0:	bl	13a50 <table_set@@Base>
   13fa4:	mov	sp, fp
   13fa8:	pop	{fp, pc}

00013fac <table_set_ulong@@Base>:
   13fac:	push	{fp, lr}
   13fb0:	mov	fp, sp
   13fb4:	sub	sp, sp, #8
   13fb8:	str	r3, [sp, #4]
   13fbc:	mov	r3, #13
   13fc0:	str	r3, [sp]
   13fc4:	add	r3, sp, #4
   13fc8:	bl	13a50 <table_set@@Base>
   13fcc:	mov	sp, fp
   13fd0:	pop	{fp, pc}

00013fd4 <table_set_llong@@Base>:
   13fd4:	push	{fp, lr}
   13fd8:	mov	fp, sp
   13fdc:	sub	sp, sp, #16
   13fe0:	ldr	r3, [fp, #12]
   13fe4:	str	r3, [sp, #12]
   13fe8:	ldr	r3, [fp, #8]
   13fec:	str	r3, [sp, #8]
   13ff0:	mov	r3, #14
   13ff4:	str	r3, [sp]
   13ff8:	add	r3, sp, #8
   13ffc:	bl	13a50 <table_set@@Base>
   14000:	mov	sp, fp
   14004:	pop	{fp, pc}

00014008 <table_set_ullong@@Base>:
   14008:	push	{fp, lr}
   1400c:	mov	fp, sp
   14010:	sub	sp, sp, #16
   14014:	ldr	r3, [fp, #12]
   14018:	str	r3, [sp, #12]
   1401c:	ldr	r3, [fp, #8]
   14020:	str	r3, [sp, #8]
   14024:	mov	r3, #15
   14028:	str	r3, [sp]
   1402c:	add	r3, sp, #8
   14030:	bl	13a50 <table_set@@Base>
   14034:	mov	sp, fp
   14038:	pop	{fp, pc}

0001403c <table_set_float@@Base>:
   1403c:	push	{fp, lr}
   14040:	mov	fp, sp
   14044:	sub	sp, sp, #8
   14048:	mov	r3, #16
   1404c:	vstr	s0, [sp, #4]
   14050:	str	r3, [sp]
   14054:	add	r3, sp, #4
   14058:	bl	13a50 <table_set@@Base>
   1405c:	mov	sp, fp
   14060:	pop	{fp, pc}

00014064 <table_set_double@@Base>:
   14064:	push	{fp, lr}
   14068:	mov	fp, sp
   1406c:	sub	sp, sp, #16
   14070:	mov	r3, #17
   14074:	vstr	d0, [sp, #8]
   14078:	str	r3, [sp]
   1407c:	add	r3, sp, #8
   14080:	bl	13a50 <table_set@@Base>
   14084:	mov	sp, fp
   14088:	pop	{fp, pc}

0001408c <table_set_ldouble@@Base>:
   1408c:	push	{fp, lr}
   14090:	mov	fp, sp
   14094:	sub	sp, sp, #16
   14098:	mov	r3, #18
   1409c:	vstr	d0, [sp, #8]
   140a0:	str	r3, [sp]
   140a4:	add	r3, sp, #8
   140a8:	bl	13a50 <table_set@@Base>
   140ac:	mov	sp, fp
   140b0:	pop	{fp, pc}

000140b4 <table_set_string@@Base>:
   140b4:	push	{fp, lr}
   140b8:	mov	fp, sp
   140bc:	sub	sp, sp, #8
   140c0:	mov	ip, #21
   140c4:	str	ip, [sp]
   140c8:	bl	13a50 <table_set@@Base>
   140cc:	mov	sp, fp
   140d0:	pop	{fp, pc}

000140d4 <table_set_char@@Base>:
   140d4:	push	{fp, lr}
   140d8:	mov	fp, sp
   140dc:	sub	sp, sp, #8
   140e0:	strb	r3, [fp, #-1]
   140e4:	mov	r3, #19
   140e8:	str	r3, [sp]
   140ec:	sub	r3, fp, #1
   140f0:	bl	13a50 <table_set@@Base>
   140f4:	mov	sp, fp
   140f8:	pop	{fp, pc}

000140fc <table_set_uchar@@Base>:
   140fc:	push	{fp, lr}
   14100:	mov	fp, sp
   14104:	sub	sp, sp, #8
   14108:	strb	r3, [fp, #-1]
   1410c:	mov	r3, #20
   14110:	str	r3, [sp]
   14114:	sub	r3, fp, #1
   14118:	bl	13a50 <table_set@@Base>
   1411c:	mov	sp, fp
   14120:	pop	{fp, pc}

00014124 <table_set_ptr@@Base>:
   14124:	push	{fp, lr}
   14128:	mov	fp, sp
   1412c:	sub	sp, sp, #8
   14130:	mov	ip, #23
   14134:	str	ip, [sp]
   14138:	bl	13a50 <table_set@@Base>
   1413c:	mov	sp, fp
   14140:	pop	{fp, pc}

00014144 <table_cell_init@@Base>:
   14144:	push	{r4, sl, fp, lr}
   14148:	add	fp, sp, #8
   1414c:	mov	r4, r2
   14150:	bl	13824 <table_get_row_ptr@@Base>
   14154:	ldr	r0, [r0]
   14158:	mov	r1, #0
   1415c:	str	r1, [r0, r4, lsl #2]
   14160:	pop	{r4, sl, fp, pc}

00014164 <table_get_cell_ptr@@Base>:
   14164:	push	{r4, sl, fp, lr}
   14168:	add	fp, sp, #8
   1416c:	mov	r4, r2
   14170:	bl	13824 <table_get_row_ptr@@Base>
   14174:	ldr	r0, [r0]
   14178:	add	r0, r0, r4, lsl #2
   1417c:	pop	{r4, sl, fp, pc}

00014180 <table_cell_destroy@@Base>:
   14180:	push	{r4, r5, r6, sl, fp, lr}
   14184:	add	fp, sp, #16
   14188:	mov	r5, r1
   1418c:	mov	r1, r2
   14190:	mov	r4, r2
   14194:	mov	r6, r0
   14198:	bl	12c54 <table_get_column_data_type@@Base>
   1419c:	cmp	r0, #23
   141a0:	popeq	{r4, r5, r6, sl, fp, pc}
   141a4:	mov	r0, r6
   141a8:	mov	r1, r5
   141ac:	bl	13824 <table_get_row_ptr@@Base>
   141b0:	ldr	r0, [r0]
   141b4:	ldr	r0, [r0, r4, lsl #2]
   141b8:	cmp	r0, #0
   141bc:	beq	141c8 <table_cell_destroy@@Base+0x48>
   141c0:	pop	{r4, r5, r6, sl, fp, lr}
   141c4:	b	11eec <free@plt>
   141c8:	pop	{r4, r5, r6, sl, fp, pc}

000141cc <table_cell_to_buffer@@Base>:
   141cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141d0:	add	fp, sp, #24
   141d4:	sub	sp, sp, #8
   141d8:	mov	r7, r1
   141dc:	mov	r1, r2
   141e0:	mov	r5, r3
   141e4:	mov	r6, r2
   141e8:	mov	r4, r0
   141ec:	bl	12c54 <table_get_column_data_type@@Base>
   141f0:	cmp	r0, #23
   141f4:	bhi	144e4 <table_cell_to_buffer@@Base+0x318>
   141f8:	ldr	r8, [fp, #8]
   141fc:	add	r1, pc, #0
   14200:	ldr	pc, [r1, r0, lsl #2]
   14204:	andeq	r4, r1, r4, ror #4
   14208:	andeq	r4, r1, r8, ror r2
   1420c:	andeq	r4, r1, ip, lsl #5
   14210:	andeq	r4, r1, r0, lsr #5
   14214:			; <UNDEFINED> instruction: 0x000142b4
   14218:	andeq	r4, r1, r8, asr #5
   1421c:	ldrdeq	r4, [r1], -ip
   14220:	strdeq	r4, [r1], -r0
   14224:	andeq	r4, r1, r0, lsl r3
   14228:	andeq	r4, r1, r4, lsr #6
   1422c:	andeq	r4, r1, r8, lsr r3
   14230:	andeq	r4, r1, r8, asr r3
   14234:	andeq	r4, r1, r8, ror r3
   14238:	muleq	r1, r8, r3
   1423c:			; <UNDEFINED> instruction: 0x000143b8
   14240:	ldrdeq	r4, [r1], -r8
   14244:	strdeq	r4, [r1], -r8
   14248:	andeq	r4, r1, ip, lsl r4
   1424c:	andeq	r4, r1, ip, lsr r4
   14250:	andeq	r4, r1, r8, ror #8
   14254:	andeq	r4, r1, ip, ror r4
   14258:	muleq	r1, ip, r4
   1425c:			; <UNDEFINED> instruction: 0x000144bc
   14260:	strdeq	r4, [r1], -r0
   14264:	mov	r0, r4
   14268:	mov	r1, r7
   1426c:	mov	r2, r6
   14270:	bl	135e0 <table_get_int@@Base>
   14274:	b	144cc <table_cell_to_buffer@@Base+0x300>
   14278:	mov	r0, r4
   1427c:	mov	r1, r7
   14280:	mov	r2, r6
   14284:	bl	135f8 <table_get_uint@@Base>
   14288:	b	14300 <table_cell_to_buffer@@Base+0x134>
   1428c:	mov	r0, r4
   14290:	mov	r1, r7
   14294:	mov	r2, r6
   14298:	bl	13610 <table_get_int8@@Base>
   1429c:	b	144cc <table_cell_to_buffer@@Base+0x300>
   142a0:	mov	r0, r4
   142a4:	mov	r1, r7
   142a8:	mov	r2, r6
   142ac:	bl	13628 <table_get_uint8@@Base>
   142b0:	b	14300 <table_cell_to_buffer@@Base+0x134>
   142b4:	mov	r0, r4
   142b8:	mov	r1, r7
   142bc:	mov	r2, r6
   142c0:	bl	13640 <table_get_int16@@Base>
   142c4:	b	144cc <table_cell_to_buffer@@Base+0x300>
   142c8:	mov	r0, r4
   142cc:	mov	r1, r7
   142d0:	mov	r2, r6
   142d4:	bl	13658 <table_get_uint16@@Base>
   142d8:	b	14300 <table_cell_to_buffer@@Base+0x134>
   142dc:	mov	r0, r4
   142e0:	mov	r1, r7
   142e4:	mov	r2, r6
   142e8:	bl	13670 <table_get_int32@@Base>
   142ec:	b	144cc <table_cell_to_buffer@@Base+0x300>
   142f0:	mov	r0, r4
   142f4:	mov	r1, r7
   142f8:	mov	r2, r6
   142fc:	bl	13688 <table_get_uint32@@Base>
   14300:	movw	r2, #19539	; 0x4c53
   14304:	mov	r3, r0
   14308:	movt	r2, #1
   1430c:	b	144d8 <table_cell_to_buffer@@Base+0x30c>
   14310:	mov	r0, r4
   14314:	mov	r1, r7
   14318:	mov	r2, r6
   1431c:	bl	136a0 <table_get_int64@@Base>
   14320:	b	143c8 <table_cell_to_buffer@@Base+0x1fc>
   14324:	mov	r0, r4
   14328:	mov	r1, r7
   1432c:	mov	r2, r6
   14330:	bl	136b8 <table_get_uint64@@Base>
   14334:	b	143e8 <table_cell_to_buffer@@Base+0x21c>
   14338:	mov	r0, r4
   1433c:	mov	r1, r7
   14340:	mov	r2, r6
   14344:	bl	136d0 <table_get_short@@Base>
   14348:	movw	r2, #19552	; 0x4c60
   1434c:	mov	r3, r0
   14350:	movt	r2, #1
   14354:	b	144d8 <table_cell_to_buffer@@Base+0x30c>
   14358:	mov	r0, r4
   1435c:	mov	r1, r7
   14360:	mov	r2, r6
   14364:	bl	136e8 <table_get_ushort@@Base>
   14368:	movw	r2, #19556	; 0x4c64
   1436c:	mov	r3, r0
   14370:	movt	r2, #1
   14374:	b	144d8 <table_cell_to_buffer@@Base+0x30c>
   14378:	mov	r0, r4
   1437c:	mov	r1, r7
   14380:	mov	r2, r6
   14384:	bl	13700 <table_get_long@@Base>
   14388:	movw	r2, #19560	; 0x4c68
   1438c:	mov	r3, r0
   14390:	movt	r2, #1
   14394:	b	144d8 <table_cell_to_buffer@@Base+0x30c>
   14398:	mov	r0, r4
   1439c:	mov	r1, r7
   143a0:	mov	r2, r6
   143a4:	bl	13718 <table_get_ulong@@Base>
   143a8:	movw	r2, #19564	; 0x4c6c
   143ac:	mov	r3, r0
   143b0:	movt	r2, #1
   143b4:	b	144d8 <table_cell_to_buffer@@Base+0x30c>
   143b8:	mov	r0, r4
   143bc:	mov	r1, r7
   143c0:	mov	r2, r6
   143c4:	bl	13730 <table_get_llong@@Base>
   143c8:	movw	r2, #19542	; 0x4c56
   143cc:	stm	sp, {r0, r1}
   143d0:	movt	r2, #1
   143d4:	b	14458 <table_cell_to_buffer@@Base+0x28c>
   143d8:	mov	r0, r4
   143dc:	mov	r1, r7
   143e0:	mov	r2, r6
   143e4:	bl	13748 <table_get_ullong@@Base>
   143e8:	movw	r2, #19547	; 0x4c5b
   143ec:	stm	sp, {r0, r1}
   143f0:	movt	r2, #1
   143f4:	b	14458 <table_cell_to_buffer@@Base+0x28c>
   143f8:	mov	r0, r4
   143fc:	mov	r1, r7
   14400:	mov	r2, r6
   14404:	bl	13760 <table_get_float@@Base>
   14408:	movw	r2, #19571	; 0x4c73
   1440c:	vcvt.f64.f32	d16, s0
   14410:	vstr	d16, [sp]
   14414:	movt	r2, #1
   14418:	b	14458 <table_cell_to_buffer@@Base+0x28c>
   1441c:	mov	r0, r4
   14420:	mov	r1, r7
   14424:	mov	r2, r6
   14428:	bl	13778 <table_get_double@@Base>
   1442c:	movw	r2, #19574	; 0x4c76
   14430:	vstr	d0, [sp]
   14434:	movt	r2, #1
   14438:	b	14458 <table_cell_to_buffer@@Base+0x28c>
   1443c:	mov	r0, r4
   14440:	mov	r1, r7
   14444:	mov	r2, r6
   14448:	bl	13790 <table_get_ldouble@@Base>
   1444c:	movw	r2, #19578	; 0x4c7a
   14450:	vstr	d0, [sp]
   14454:	movt	r2, #1
   14458:	mov	r0, r5
   1445c:	mov	r1, r8
   14460:	bl	11f58 <snprintf@plt>
   14464:	b	144e4 <table_cell_to_buffer@@Base+0x318>
   14468:	mov	r0, r4
   1446c:	mov	r1, r7
   14470:	mov	r2, r6
   14474:	bl	137a8 <table_get_char@@Base>
   14478:	b	1448c <table_cell_to_buffer@@Base+0x2c0>
   1447c:	mov	r0, r4
   14480:	mov	r1, r7
   14484:	mov	r2, r6
   14488:	bl	137c0 <table_get_uchar@@Base>
   1448c:	movw	r2, #19582	; 0x4c7e
   14490:	mov	r3, r0
   14494:	movt	r2, #1
   14498:	b	144d8 <table_cell_to_buffer@@Base+0x30c>
   1449c:	mov	r0, r4
   144a0:	mov	r1, r7
   144a4:	mov	r2, r6
   144a8:	bl	137d8 <table_get_string@@Base>
   144ac:	movw	r2, #19568	; 0x4c70
   144b0:	mov	r3, r0
   144b4:	movt	r2, #1
   144b8:	b	144d8 <table_cell_to_buffer@@Base+0x30c>
   144bc:	mov	r0, r4
   144c0:	mov	r1, r7
   144c4:	mov	r2, r6
   144c8:	bl	135c8 <table_get_bool@@Base>
   144cc:	movw	r2, #19536	; 0x4c50
   144d0:	mov	r3, r0
   144d4:	movt	r2, #1
   144d8:	mov	r0, r5
   144dc:	mov	r1, r8
   144e0:	bl	11f58 <snprintf@plt>
   144e4:	mov	r0, #0
   144e8:	sub	sp, fp, #24
   144ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   144f0:	mov	r0, r4
   144f4:	mov	r1, r7
   144f8:	mov	r2, r6
   144fc:	bl	137ec <table_get_ptr@@Base>
   14500:	movw	r2, #19585	; 0x4c81
   14504:	mov	r3, r0
   14508:	movt	r2, #1
   1450c:	b	144d8 <table_cell_to_buffer@@Base+0x30c>

00014510 <table_cell_from_buffer@@Base>:
   14510:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14514:	add	fp, sp, #24
   14518:	sub	sp, sp, #264	; 0x108
   1451c:	mov	r5, r1
   14520:	mov	r1, r2
   14524:	mov	r7, r3
   14528:	mov	r4, r2
   1452c:	mov	r6, r0
   14530:	bl	12c54 <table_get_column_data_type@@Base>
   14534:	cmp	r0, #23
   14538:	bhi	14b0c <table_cell_from_buffer@@Base+0x5fc>
   1453c:	add	r1, pc, #0
   14540:	ldr	pc, [r1, r0, lsl #2]
   14544:	andeq	r4, r1, r4, lsr #11
   14548:	ldrdeq	r4, [r1], -ip
   1454c:	andeq	r4, r1, r4, lsl r6
   14550:	andeq	r4, r1, ip, asr #12
   14554:	andeq	r4, r1, r4, lsl #13
   14558:			; <UNDEFINED> instruction: 0x000146bc
   1455c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14560:	andeq	r4, r1, ip, lsr #14
   14564:	andeq	r4, r1, r4, ror #14
   14568:	andeq	r4, r1, r4, lsr #15
   1456c:	andeq	r4, r1, r4, ror #15
   14570:	andeq	r4, r1, ip, lsl r8
   14574:	andeq	r4, r1, r4, asr r8
   14578:	andeq	r4, r1, ip, lsl #17
   1457c:	andeq	r4, r1, r4, asr #17
   14580:	andeq	r4, r1, r4, lsl #18
   14584:	andeq	r4, r1, r4, asr #18
   14588:	andeq	r4, r1, ip, ror r9
   1458c:			; <UNDEFINED> instruction: 0x000149b4
   14590:	andeq	r4, r1, ip, ror #19
   14594:	andeq	r4, r1, r4, lsr #20
   14598:	andeq	r4, r1, ip, asr sl
   1459c:	muleq	r1, r4, sl
   145a0:	ldrdeq	r4, [r1], -r8
   145a4:	movw	r1, #19536	; 0x4c50
   145a8:	add	r2, sp, #8
   145ac:	mov	r0, r7
   145b0:	movt	r1, #1
   145b4:	bl	11f64 <__isoc99_sscanf@plt>
   145b8:	mvn	r7, #0
   145bc:	cmp	r0, #1
   145c0:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   145c4:	ldr	r3, [sp, #8]
   145c8:	mov	r0, r6
   145cc:	mov	r1, r5
   145d0:	mov	r2, r4
   145d4:	bl	13d8c <table_set_int@@Base>
   145d8:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   145dc:	movw	r1, #19539	; 0x4c53
   145e0:	add	r2, sp, #8
   145e4:	mov	r0, r7
   145e8:	movt	r1, #1
   145ec:	bl	11f64 <__isoc99_sscanf@plt>
   145f0:	mvn	r7, #0
   145f4:	cmp	r0, #1
   145f8:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   145fc:	ldr	r3, [sp, #8]
   14600:	mov	r0, r6
   14604:	mov	r1, r5
   14608:	mov	r2, r4
   1460c:	bl	13db4 <table_set_uint@@Base>
   14610:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14614:	movw	r1, #19588	; 0x4c84
   14618:	add	r2, sp, #8
   1461c:	mov	r0, r7
   14620:	movt	r1, #1
   14624:	bl	11f64 <__isoc99_sscanf@plt>
   14628:	mvn	r7, #0
   1462c:	cmp	r0, #1
   14630:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14634:	ldrsb	r3, [sp, #8]
   14638:	mov	r0, r6
   1463c:	mov	r1, r5
   14640:	mov	r2, r4
   14644:	bl	13ddc <table_set_int8@@Base>
   14648:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   1464c:	movw	r1, #19593	; 0x4c89
   14650:	add	r2, sp, #8
   14654:	mov	r0, r7
   14658:	movt	r1, #1
   1465c:	bl	11f64 <__isoc99_sscanf@plt>
   14660:	mvn	r7, #0
   14664:	cmp	r0, #1
   14668:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   1466c:	ldrb	r3, [sp, #8]
   14670:	mov	r0, r6
   14674:	mov	r1, r5
   14678:	mov	r2, r4
   1467c:	bl	13e04 <table_set_uint8@@Base>
   14680:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14684:	movw	r1, #19552	; 0x4c60
   14688:	add	r2, sp, #8
   1468c:	mov	r0, r7
   14690:	movt	r1, #1
   14694:	bl	11f64 <__isoc99_sscanf@plt>
   14698:	mvn	r7, #0
   1469c:	cmp	r0, #1
   146a0:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   146a4:	ldrsh	r3, [sp, #8]
   146a8:	mov	r0, r6
   146ac:	mov	r1, r5
   146b0:	mov	r2, r4
   146b4:	bl	13e2c <table_set_int16@@Base>
   146b8:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   146bc:	movw	r1, #19556	; 0x4c64
   146c0:	add	r2, sp, #8
   146c4:	mov	r0, r7
   146c8:	movt	r1, #1
   146cc:	bl	11f64 <__isoc99_sscanf@plt>
   146d0:	mvn	r7, #0
   146d4:	cmp	r0, #1
   146d8:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   146dc:	ldrh	r3, [sp, #8]
   146e0:	mov	r0, r6
   146e4:	mov	r1, r5
   146e8:	mov	r2, r4
   146ec:	bl	13e54 <table_set_uint16@@Base>
   146f0:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   146f4:	movw	r1, #19536	; 0x4c50
   146f8:	add	r2, sp, #8
   146fc:	mov	r0, r7
   14700:	movt	r1, #1
   14704:	bl	11f64 <__isoc99_sscanf@plt>
   14708:	mvn	r7, #0
   1470c:	cmp	r0, #1
   14710:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14714:	ldr	r3, [sp, #8]
   14718:	mov	r0, r6
   1471c:	mov	r1, r5
   14720:	mov	r2, r4
   14724:	bl	13e7c <table_set_int32@@Base>
   14728:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   1472c:	movw	r1, #19539	; 0x4c53
   14730:	add	r2, sp, #8
   14734:	mov	r0, r7
   14738:	movt	r1, #1
   1473c:	bl	11f64 <__isoc99_sscanf@plt>
   14740:	mvn	r7, #0
   14744:	cmp	r0, #1
   14748:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   1474c:	ldr	r3, [sp, #8]
   14750:	mov	r0, r6
   14754:	mov	r1, r5
   14758:	mov	r2, r4
   1475c:	bl	13ea4 <table_set_uint32@@Base>
   14760:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14764:	movw	r1, #19542	; 0x4c56
   14768:	add	r2, sp, #8
   1476c:	mov	r0, r7
   14770:	movt	r1, #1
   14774:	bl	11f64 <__isoc99_sscanf@plt>
   14778:	mvn	r7, #0
   1477c:	cmp	r0, #1
   14780:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14784:	ldr	r0, [sp, #8]
   14788:	ldr	r1, [sp, #12]
   1478c:	mov	r2, r4
   14790:	stm	sp, {r0, r1}
   14794:	mov	r0, r6
   14798:	mov	r1, r5
   1479c:	bl	13ecc <table_set_int64@@Base>
   147a0:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   147a4:	movw	r1, #19547	; 0x4c5b
   147a8:	add	r2, sp, #8
   147ac:	mov	r0, r7
   147b0:	movt	r1, #1
   147b4:	bl	11f64 <__isoc99_sscanf@plt>
   147b8:	mvn	r7, #0
   147bc:	cmp	r0, #1
   147c0:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   147c4:	ldr	r0, [sp, #8]
   147c8:	ldr	r1, [sp, #12]
   147cc:	mov	r2, r4
   147d0:	stm	sp, {r0, r1}
   147d4:	mov	r0, r6
   147d8:	mov	r1, r5
   147dc:	bl	13f00 <table_set_uint64@@Base>
   147e0:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   147e4:	movw	r1, #19552	; 0x4c60
   147e8:	add	r2, sp, #8
   147ec:	mov	r0, r7
   147f0:	movt	r1, #1
   147f4:	bl	11f64 <__isoc99_sscanf@plt>
   147f8:	mvn	r7, #0
   147fc:	cmp	r0, #1
   14800:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14804:	ldrsh	r3, [sp, #8]
   14808:	mov	r0, r6
   1480c:	mov	r1, r5
   14810:	mov	r2, r4
   14814:	bl	13f34 <table_set_short@@Base>
   14818:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   1481c:	movw	r1, #19556	; 0x4c64
   14820:	add	r2, sp, #8
   14824:	mov	r0, r7
   14828:	movt	r1, #1
   1482c:	bl	11f64 <__isoc99_sscanf@plt>
   14830:	mvn	r7, #0
   14834:	cmp	r0, #1
   14838:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   1483c:	ldrh	r3, [sp, #8]
   14840:	mov	r0, r6
   14844:	mov	r1, r5
   14848:	mov	r2, r4
   1484c:	bl	13f5c <table_set_ushort@@Base>
   14850:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14854:	movw	r1, #19560	; 0x4c68
   14858:	add	r2, sp, #8
   1485c:	mov	r0, r7
   14860:	movt	r1, #1
   14864:	bl	11f64 <__isoc99_sscanf@plt>
   14868:	mvn	r7, #0
   1486c:	cmp	r0, #1
   14870:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14874:	ldr	r3, [sp, #8]
   14878:	mov	r0, r6
   1487c:	mov	r1, r5
   14880:	mov	r2, r4
   14884:	bl	13f84 <table_set_long@@Base>
   14888:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   1488c:	movw	r1, #19564	; 0x4c6c
   14890:	add	r2, sp, #8
   14894:	mov	r0, r7
   14898:	movt	r1, #1
   1489c:	bl	11f64 <__isoc99_sscanf@plt>
   148a0:	mvn	r7, #0
   148a4:	cmp	r0, #1
   148a8:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   148ac:	ldr	r3, [sp, #8]
   148b0:	mov	r0, r6
   148b4:	mov	r1, r5
   148b8:	mov	r2, r4
   148bc:	bl	13fac <table_set_ulong@@Base>
   148c0:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   148c4:	movw	r1, #19542	; 0x4c56
   148c8:	add	r2, sp, #8
   148cc:	mov	r0, r7
   148d0:	movt	r1, #1
   148d4:	bl	11f64 <__isoc99_sscanf@plt>
   148d8:	mvn	r7, #0
   148dc:	cmp	r0, #1
   148e0:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   148e4:	ldr	r0, [sp, #8]
   148e8:	ldr	r1, [sp, #12]
   148ec:	mov	r2, r4
   148f0:	stm	sp, {r0, r1}
   148f4:	mov	r0, r6
   148f8:	mov	r1, r5
   148fc:	bl	13fd4 <table_set_llong@@Base>
   14900:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14904:	movw	r1, #19547	; 0x4c5b
   14908:	add	r2, sp, #8
   1490c:	mov	r0, r7
   14910:	movt	r1, #1
   14914:	bl	11f64 <__isoc99_sscanf@plt>
   14918:	mvn	r7, #0
   1491c:	cmp	r0, #1
   14920:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14924:	ldr	r0, [sp, #8]
   14928:	ldr	r1, [sp, #12]
   1492c:	mov	r2, r4
   14930:	stm	sp, {r0, r1}
   14934:	mov	r0, r6
   14938:	mov	r1, r5
   1493c:	bl	14008 <table_set_ullong@@Base>
   14940:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14944:	movw	r1, #19571	; 0x4c73
   14948:	add	r2, sp, #8
   1494c:	mov	r0, r7
   14950:	movt	r1, #1
   14954:	bl	11f64 <__isoc99_sscanf@plt>
   14958:	mvn	r7, #0
   1495c:	cmp	r0, #1
   14960:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14964:	vldr	s0, [sp, #8]
   14968:	mov	r0, r6
   1496c:	mov	r1, r5
   14970:	mov	r2, r4
   14974:	bl	1403c <table_set_float@@Base>
   14978:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   1497c:	movw	r1, #19574	; 0x4c76
   14980:	add	r2, sp, #8
   14984:	mov	r0, r7
   14988:	movt	r1, #1
   1498c:	bl	11f64 <__isoc99_sscanf@plt>
   14990:	mvn	r7, #0
   14994:	cmp	r0, #1
   14998:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   1499c:	vldr	d0, [sp, #8]
   149a0:	mov	r0, r6
   149a4:	mov	r1, r5
   149a8:	mov	r2, r4
   149ac:	bl	14064 <table_set_double@@Base>
   149b0:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   149b4:	movw	r1, #19578	; 0x4c7a
   149b8:	add	r2, sp, #8
   149bc:	mov	r0, r7
   149c0:	movt	r1, #1
   149c4:	bl	11f64 <__isoc99_sscanf@plt>
   149c8:	mvn	r7, #0
   149cc:	cmp	r0, #1
   149d0:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   149d4:	vldr	d0, [sp, #8]
   149d8:	mov	r0, r6
   149dc:	mov	r1, r5
   149e0:	mov	r2, r4
   149e4:	bl	1408c <table_set_ldouble@@Base>
   149e8:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   149ec:	movw	r1, #19582	; 0x4c7e
   149f0:	add	r2, sp, #8
   149f4:	mov	r0, r7
   149f8:	movt	r1, #1
   149fc:	bl	11f64 <__isoc99_sscanf@plt>
   14a00:	mvn	r7, #0
   14a04:	cmp	r0, #1
   14a08:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14a0c:	ldrb	r3, [sp, #8]
   14a10:	mov	r0, r6
   14a14:	mov	r1, r5
   14a18:	mov	r2, r4
   14a1c:	bl	140d4 <table_set_char@@Base>
   14a20:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14a24:	movw	r1, #19582	; 0x4c7e
   14a28:	add	r2, sp, #8
   14a2c:	mov	r0, r7
   14a30:	movt	r1, #1
   14a34:	bl	11f64 <__isoc99_sscanf@plt>
   14a38:	mvn	r7, #0
   14a3c:	cmp	r0, #1
   14a40:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14a44:	ldrb	r3, [sp, #8]
   14a48:	mov	r0, r6
   14a4c:	mov	r1, r5
   14a50:	mov	r2, r4
   14a54:	bl	140fc <table_set_uchar@@Base>
   14a58:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14a5c:	movw	r1, #19568	; 0x4c70
   14a60:	add	r2, sp, #8
   14a64:	mov	r0, r7
   14a68:	movt	r1, #1
   14a6c:	bl	11f64 <__isoc99_sscanf@plt>
   14a70:	mvn	r7, #0
   14a74:	cmp	r0, #1
   14a78:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14a7c:	add	r3, sp, #8
   14a80:	mov	r0, r6
   14a84:	mov	r1, r5
   14a88:	mov	r2, r4
   14a8c:	bl	140b4 <table_set_string@@Base>
   14a90:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14a94:	movw	r1, #19536	; 0x4c50
   14a98:	add	r2, sp, #8
   14a9c:	mov	r0, r7
   14aa0:	movt	r1, #1
   14aa4:	bl	11f64 <__isoc99_sscanf@plt>
   14aa8:	mvn	r7, #0
   14aac:	cmp	r0, #1
   14ab0:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14ab4:	ldr	r0, [sp, #8]
   14ab8:	cmp	r0, #0
   14abc:	beq	14b1c <table_cell_from_buffer@@Base+0x60c>
   14ac0:	mov	r0, r6
   14ac4:	mov	r1, r5
   14ac8:	mov	r2, r4
   14acc:	mov	r3, #1
   14ad0:	bl	13d64 <table_set_bool@@Base>
   14ad4:	b	14b0c <table_cell_from_buffer@@Base+0x5fc>
   14ad8:	movw	r1, #19585	; 0x4c81
   14adc:	add	r2, sp, #8
   14ae0:	mov	r0, r7
   14ae4:	movt	r1, #1
   14ae8:	bl	11f64 <__isoc99_sscanf@plt>
   14aec:	mvn	r7, #0
   14af0:	cmp	r0, #1
   14af4:	bne	14b10 <table_cell_from_buffer@@Base+0x600>
   14af8:	ldr	r3, [sp, #8]
   14afc:	mov	r0, r6
   14b00:	mov	r1, r5
   14b04:	mov	r2, r4
   14b08:	bl	14124 <table_set_ptr@@Base>
   14b0c:	mov	r7, #0
   14b10:	mov	r0, r7
   14b14:	sub	sp, fp, #24
   14b18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14b1c:	mov	r0, r6
   14b20:	mov	r1, r5
   14b24:	mov	r2, r4
   14b28:	mov	r3, #0
   14b2c:	mov	r7, #0
   14b30:	bl	13d64 <table_set_bool@@Base>
   14b34:	b	14b10 <table_cell_from_buffer@@Base+0x600>

00014b38 <table_cell_nullify@@Base>:
   14b38:	push	{r4, r5, fp, lr}
   14b3c:	add	fp, sp, #8
   14b40:	mov	r4, r2
   14b44:	bl	13824 <table_get_row_ptr@@Base>
   14b48:	ldr	r5, [r0]
   14b4c:	ldr	r0, [r5, r4, lsl #2]
   14b50:	cmp	r0, #0
   14b54:	beq	14b64 <table_cell_nullify@@Base+0x2c>
   14b58:	bl	11eec <free@plt>
   14b5c:	mov	r0, #0
   14b60:	str	r0, [r5, r4, lsl #2]
   14b64:	mov	r0, #0
   14b68:	pop	{r4, r5, fp, pc}

00014b6c <__libc_csu_init@@Base>:
   14b6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b70:	mov	r7, r0
   14b74:	ldr	r6, [pc, #72]	; 14bc4 <__libc_csu_init@@Base+0x58>
   14b78:	ldr	r5, [pc, #72]	; 14bc8 <__libc_csu_init@@Base+0x5c>
   14b7c:	add	r6, pc, r6
   14b80:	add	r5, pc, r5
   14b84:	sub	r6, r6, r5
   14b88:	mov	r8, r1
   14b8c:	mov	r9, r2
   14b90:	bl	11ec0 <strcmp@plt-0x20>
   14b94:	asrs	r6, r6, #2
   14b98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b9c:	mov	r4, #0
   14ba0:	add	r4, r4, #1
   14ba4:	ldr	r3, [r5], #4
   14ba8:	mov	r2, r9
   14bac:	mov	r1, r8
   14bb0:	mov	r0, r7
   14bb4:	blx	r3
   14bb8:	cmp	r6, r4
   14bbc:	bne	14ba0 <__libc_csu_init@@Base+0x34>
   14bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bc4:	andeq	r0, r1, r8, lsl #7
   14bc8:	andeq	r0, r1, r0, lsl #7

00014bcc <__libc_csu_fini@@Base>:
   14bcc:	bx	lr

Disassembly of section .fini:

00014bd0 <.fini>:
   14bd0:	push	{r3, lr}
   14bd4:	pop	{r3, pc}
