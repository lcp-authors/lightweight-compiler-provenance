
../repos/charybdis/extensions/.libs/override.so:     file format elf32-littlearm


Disassembly of section .init:

00000678 <_init>:
 678:	push	{r3, lr}
 67c:	bl	764 <call_weak_fn>
 680:	pop	{r3, pc}

Disassembly of section .plt:

00000684 <.plt>:
 684:	push	{lr}		; (str lr, [sp, #-4]!)
 688:	ldr	lr, [pc, #4]	; 694 <.plt+0x10>
 68c:	add	lr, pc, lr
 690:	ldr	pc, [lr, #8]!
 694:	.word	0x0001196c

00000698 <calloc@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2412]!	; 0x96c

000006a4 <rb_current_time@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2404]!	; 0x964

000006b0 <rb_event_add@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2396]!	; 0x95c

000006bc <__cxa_finalize@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2388]!	; 0x954

000006c8 <rb_event_delete@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2380]!	; 0x94c

000006d4 <free@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2372]!	; 0x944

000006e0 <rb_outofmemory@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2364]!	; 0x93c

000006ec <user_mode@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2356]!	; 0x934

000006f8 <sendto_realops_snomask@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2348]!	; 0x92c

00000704 <find_umode_slot@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2340]!	; 0x924

00000710 <get_oper_name@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2332]!	; 0x91c

0000071c <__gmon_start__@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2324]!	; 0x914

00000728 <get_channel_access@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2316]!	; 0x90c

00000734 <sendto_one_notice@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2308]!	; 0x904

00000740 <privilegeset_in_set@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2300]!	; 0x8fc

0000074c <__assert_fail@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2292]!	; 0x8f4

00000758 <construct_umodebuf@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2284]!	; 0x8ec

Disassembly of section .text:

00000764 <call_weak_fn>:
     764:	ldr	r3, [pc, #20]	; 780 <call_weak_fn+0x1c>
     768:	ldr	r2, [pc, #20]	; 784 <call_weak_fn+0x20>
     76c:	add	r3, pc, r3
     770:	ldr	r2, [r3, r2]
     774:	cmp	r2, #0
     778:	bxeq	lr
     77c:	b	71c <__gmon_start__@plt>
     780:	.word	0x0001188c
     784:	.word	0x00000064

00000788 <deregister_tm_clones>:
     788:	ldr	r3, [pc, #52]	; 7c4 <deregister_tm_clones+0x3c>
     78c:	ldr	r0, [pc, #52]	; 7c8 <deregister_tm_clones+0x40>
     790:	add	r3, pc, r3
     794:	add	r0, pc, r0
     798:	add	r3, r3, #3
     79c:	sub	r3, r3, r0
     7a0:	cmp	r3, #6
     7a4:	ldr	r3, [pc, #32]	; 7cc <deregister_tm_clones+0x44>
     7a8:	add	r3, pc, r3
     7ac:	bxls	lr
     7b0:	ldr	r2, [pc, #24]	; 7d0 <deregister_tm_clones+0x48>
     7b4:	ldr	r3, [r3, r2]
     7b8:	cmp	r3, #0
     7bc:	bxeq	lr
     7c0:	bx	r3
     7c4:	.word	0x0001195c
     7c8:	.word	0x00011958
     7cc:	.word	0x00011850
     7d0:	.word	0x00000058

000007d4 <register_tm_clones>:
     7d4:	ldr	r1, [pc, #56]	; 814 <register_tm_clones+0x40>
     7d8:	ldr	r0, [pc, #56]	; 818 <register_tm_clones+0x44>
     7dc:	add	r1, pc, r1
     7e0:	add	r0, pc, r0
     7e4:	sub	r1, r1, r0
     7e8:	ldr	r3, [pc, #44]	; 81c <register_tm_clones+0x48>
     7ec:	asr	r1, r1, #2
     7f0:	add	r3, pc, r3
     7f4:	add	r1, r1, r1, lsr #31
     7f8:	asrs	r1, r1, #1
     7fc:	bxeq	lr
     800:	ldr	r2, [pc, #24]	; 820 <register_tm_clones+0x4c>
     804:	ldr	r3, [r3, r2]
     808:	cmp	r3, #0
     80c:	bxeq	lr
     810:	bx	r3
     814:	.word	0x00011910
     818:	.word	0x0001190c
     81c:	.word	0x00011808
     820:	.word	0x00000070

00000824 <__do_global_dtors_aux>:
     824:	ldr	r3, [pc, #76]	; 878 <__do_global_dtors_aux+0x54>
     828:	ldr	r2, [pc, #76]	; 87c <__do_global_dtors_aux+0x58>
     82c:	add	r3, pc, r3
     830:	add	r2, pc, r2
     834:	ldrb	r3, [r3]
     838:	cmp	r3, #0
     83c:	bxne	lr
     840:	ldr	r3, [pc, #56]	; 880 <__do_global_dtors_aux+0x5c>
     844:	push	{r4, lr}
     848:	ldr	r3, [r2, r3]
     84c:	cmp	r3, #0
     850:	beq	860 <__do_global_dtors_aux+0x3c>
     854:	ldr	r3, [pc, #40]	; 884 <__do_global_dtors_aux+0x60>
     858:	ldr	r0, [pc, r3]
     85c:	bl	6bc <__cxa_finalize@plt>
     860:	bl	788 <deregister_tm_clones>
     864:	ldr	r3, [pc, #28]	; 888 <__do_global_dtors_aux+0x64>
     868:	mov	r2, #1
     86c:	add	r3, pc, r3
     870:	strb	r2, [r3]
     874:	pop	{r4, pc}
     878:	.word	0x000118c0
     87c:	.word	0x000117c8
     880:	.word	0x00000050
     884:	.word	0x00011814
     888:	.word	0x00011880

0000088c <frame_dummy>:
     88c:	ldr	r0, [pc, #56]	; 8cc <frame_dummy+0x40>
     890:	ldr	r3, [pc, #56]	; 8d0 <frame_dummy+0x44>
     894:	add	r0, pc, r0
     898:	ldr	r2, [r0]
     89c:	add	r3, pc, r3
     8a0:	cmp	r2, #0
     8a4:	bne	8ac <frame_dummy+0x20>
     8a8:	b	7d4 <register_tm_clones>
     8ac:	ldr	r2, [pc, #32]	; 8d4 <frame_dummy+0x48>
     8b0:	ldr	r3, [r3, r2]
     8b4:	cmp	r3, #0
     8b8:	beq	8a8 <frame_dummy+0x1c>
     8bc:	push	{r4, lr}
     8c0:	blx	r3
     8c4:	pop	{r4, lr}
     8c8:	b	7d4 <register_tm_clones>
     8cc:	.word	0x00011660
     8d0:	.word	0x0001175c
     8d4:	.word	0x00000068

000008d8 <rb_dlinkAdd>:
     8d8:	push	{fp, lr}
     8dc:	add	fp, sp, #4
     8e0:	sub	sp, sp, #16
     8e4:	str	r0, [fp, #-8]
     8e8:	str	r1, [fp, #-12]
     8ec:	str	r2, [fp, #-16]
     8f0:	ldr	r3, [fp, #-8]
     8f4:	cmp	r3, #0
     8f8:	bne	91c <rb_dlinkAdd+0x44>
     8fc:	ldr	r3, [pc, #260]	; a08 <rb_dlinkAdd+0x130>
     900:	add	r3, pc, r3
     904:	mov	r2, #143	; 0x8f
     908:	ldr	r1, [pc, #252]	; a0c <rb_dlinkAdd+0x134>
     90c:	add	r1, pc, r1
     910:	ldr	r0, [pc, #248]	; a10 <rb_dlinkAdd+0x138>
     914:	add	r0, pc, r0
     918:	bl	74c <__assert_fail@plt>
     91c:	ldr	r3, [fp, #-12]
     920:	cmp	r3, #0
     924:	bne	948 <rb_dlinkAdd+0x70>
     928:	ldr	r3, [pc, #228]	; a14 <rb_dlinkAdd+0x13c>
     92c:	add	r3, pc, r3
     930:	mov	r2, #144	; 0x90
     934:	ldr	r1, [pc, #220]	; a18 <rb_dlinkAdd+0x140>
     938:	add	r1, pc, r1
     93c:	ldr	r0, [pc, #216]	; a1c <rb_dlinkAdd+0x144>
     940:	add	r0, pc, r0
     944:	bl	74c <__assert_fail@plt>
     948:	ldr	r3, [fp, #-16]
     94c:	cmp	r3, #0
     950:	bne	974 <rb_dlinkAdd+0x9c>
     954:	ldr	r3, [pc, #196]	; a20 <rb_dlinkAdd+0x148>
     958:	add	r3, pc, r3
     95c:	mov	r2, #145	; 0x91
     960:	ldr	r1, [pc, #188]	; a24 <rb_dlinkAdd+0x14c>
     964:	add	r1, pc, r1
     968:	ldr	r0, [pc, #184]	; a28 <rb_dlinkAdd+0x150>
     96c:	add	r0, pc, r0
     970:	bl	74c <__assert_fail@plt>
     974:	ldr	r3, [fp, #-12]
     978:	ldr	r2, [fp, #-8]
     97c:	str	r2, [r3]
     980:	ldr	r3, [fp, #-12]
     984:	mov	r2, #0
     988:	str	r2, [r3, #4]
     98c:	ldr	r3, [fp, #-16]
     990:	ldr	r2, [r3]
     994:	ldr	r3, [fp, #-12]
     998:	str	r2, [r3, #8]
     99c:	ldr	r3, [fp, #-16]
     9a0:	ldr	r3, [r3]
     9a4:	cmp	r3, #0
     9a8:	beq	9c0 <rb_dlinkAdd+0xe8>
     9ac:	ldr	r3, [fp, #-16]
     9b0:	ldr	r3, [r3]
     9b4:	ldr	r2, [fp, #-12]
     9b8:	str	r2, [r3, #4]
     9bc:	b	9dc <rb_dlinkAdd+0x104>
     9c0:	ldr	r3, [fp, #-16]
     9c4:	ldr	r3, [r3, #4]
     9c8:	cmp	r3, #0
     9cc:	bne	9dc <rb_dlinkAdd+0x104>
     9d0:	ldr	r3, [fp, #-16]
     9d4:	ldr	r2, [fp, #-12]
     9d8:	str	r2, [r3, #4]
     9dc:	ldr	r3, [fp, #-16]
     9e0:	ldr	r2, [fp, #-12]
     9e4:	str	r2, [r3]
     9e8:	ldr	r3, [fp, #-16]
     9ec:	ldr	r3, [r3, #8]
     9f0:	add	r2, r3, #1
     9f4:	ldr	r3, [fp, #-16]
     9f8:	str	r2, [r3, #8]
     9fc:	nop			; (mov r0, r0)
     a00:	sub	sp, fp, #4
     a04:	pop	{fp, pc}
     a08:	.word	0x000010c8
     a0c:	.word	0x00000e88
     a10:	.word	0x00000e9c
     a14:	.word	0x0000109c
     a18:	.word	0x00000e5c
     a1c:	.word	0x00000e80
     a20:	.word	0x00001070
     a24:	.word	0x00000e30
     a28:	.word	0x00000e60

00000a2c <rb_dlinkDelete>:
     a2c:	push	{fp, lr}
     a30:	add	fp, sp, #4
     a34:	sub	sp, sp, #8
     a38:	str	r0, [fp, #-8]
     a3c:	str	r1, [fp, #-12]
     a40:	ldr	r3, [fp, #-8]
     a44:	cmp	r3, #0
     a48:	bne	a6c <rb_dlinkDelete+0x40>
     a4c:	ldr	r3, [pc, #240]	; b44 <rb_dlinkDelete+0x118>
     a50:	add	r3, pc, r3
     a54:	mov	r2, #235	; 0xeb
     a58:	ldr	r1, [pc, #232]	; b48 <rb_dlinkDelete+0x11c>
     a5c:	add	r1, pc, r1
     a60:	ldr	r0, [pc, #228]	; b4c <rb_dlinkDelete+0x120>
     a64:	add	r0, pc, r0
     a68:	bl	74c <__assert_fail@plt>
     a6c:	ldr	r3, [fp, #-12]
     a70:	cmp	r3, #0
     a74:	bne	a98 <rb_dlinkDelete+0x6c>
     a78:	ldr	r3, [pc, #208]	; b50 <rb_dlinkDelete+0x124>
     a7c:	add	r3, pc, r3
     a80:	mov	r2, #236	; 0xec
     a84:	ldr	r1, [pc, #200]	; b54 <rb_dlinkDelete+0x128>
     a88:	add	r1, pc, r1
     a8c:	ldr	r0, [pc, #196]	; b58 <rb_dlinkDelete+0x12c>
     a90:	add	r0, pc, r0
     a94:	bl	74c <__assert_fail@plt>
     a98:	ldr	r3, [fp, #-8]
     a9c:	ldr	r3, [r3, #8]
     aa0:	cmp	r3, #0
     aa4:	beq	ac0 <rb_dlinkDelete+0x94>
     aa8:	ldr	r3, [fp, #-8]
     aac:	ldr	r3, [r3, #8]
     ab0:	ldr	r2, [fp, #-8]
     ab4:	ldr	r2, [r2, #4]
     ab8:	str	r2, [r3, #4]
     abc:	b	ad0 <rb_dlinkDelete+0xa4>
     ac0:	ldr	r3, [fp, #-8]
     ac4:	ldr	r2, [r3, #4]
     ac8:	ldr	r3, [fp, #-12]
     acc:	str	r2, [r3, #4]
     ad0:	ldr	r3, [fp, #-8]
     ad4:	ldr	r3, [r3, #4]
     ad8:	cmp	r3, #0
     adc:	beq	af8 <rb_dlinkDelete+0xcc>
     ae0:	ldr	r3, [fp, #-8]
     ae4:	ldr	r3, [r3, #4]
     ae8:	ldr	r2, [fp, #-8]
     aec:	ldr	r2, [r2, #8]
     af0:	str	r2, [r3, #8]
     af4:	b	b08 <rb_dlinkDelete+0xdc>
     af8:	ldr	r3, [fp, #-8]
     afc:	ldr	r2, [r3, #8]
     b00:	ldr	r3, [fp, #-12]
     b04:	str	r2, [r3]
     b08:	ldr	r3, [fp, #-8]
     b0c:	mov	r2, #0
     b10:	str	r2, [r3, #4]
     b14:	ldr	r3, [fp, #-8]
     b18:	ldr	r2, [r3, #4]
     b1c:	ldr	r3, [fp, #-8]
     b20:	str	r2, [r3, #8]
     b24:	ldr	r3, [fp, #-12]
     b28:	ldr	r3, [r3, #8]
     b2c:	sub	r2, r3, #1
     b30:	ldr	r3, [fp, #-12]
     b34:	str	r2, [r3, #8]
     b38:	nop			; (mov r0, r0)
     b3c:	sub	sp, fp, #4
     b40:	pop	{fp, pc}
     b44:	.word	0x00000f68
     b48:	.word	0x00000d38
     b4c:	.word	0x00000d5c
     b50:	.word	0x00000f3c
     b54:	.word	0x00000d0c
     b58:	.word	0x00000d3c

00000b5c <rb_malloc>:
     b5c:	push	{fp, lr}
     b60:	add	fp, sp, #4
     b64:	sub	sp, sp, #16
     b68:	str	r0, [fp, #-16]
     b6c:	ldr	r1, [fp, #-16]
     b70:	mov	r0, #1
     b74:	bl	698 <calloc@plt>
     b78:	mov	r3, r0
     b7c:	str	r3, [fp, #-8]
     b80:	ldr	r3, [fp, #-8]
     b84:	cmp	r3, #0
     b88:	moveq	r3, #1
     b8c:	movne	r3, #0
     b90:	uxtb	r3, r3
     b94:	cmp	r3, #0
     b98:	beq	ba0 <rb_malloc+0x44>
     b9c:	bl	6e0 <rb_outofmemory@plt>
     ba0:	ldr	r3, [fp, #-8]
     ba4:	mov	r0, r3
     ba8:	sub	sp, fp, #4
     bac:	pop	{fp, pc}

00000bb0 <rb_free>:
     bb0:	push	{fp, lr}
     bb4:	add	fp, sp, #4
     bb8:	sub	sp, sp, #8
     bbc:	str	r0, [fp, #-8]
     bc0:	ldr	r3, [fp, #-8]
     bc4:	cmp	r3, #0
     bc8:	movne	r3, #1
     bcc:	moveq	r3, #0
     bd0:	uxtb	r3, r3
     bd4:	cmp	r3, #0
     bd8:	beq	be4 <rb_free+0x34>
     bdc:	ldr	r0, [fp, #-8]
     be0:	bl	6d4 <free@plt>
     be4:	nop			; (mov r0, r0)
     be8:	sub	sp, fp, #4
     bec:	pop	{fp, pc}

00000bf0 <update_session_deadline>:
     bf0:	push	{r4, fp, lr}
     bf4:	add	fp, sp, #8
     bf8:	sub	sp, sp, #20
     bfc:	str	r0, [fp, #-24]	; 0xffffffe8
     c00:	str	r1, [fp, #-28]	; 0xffffffe4
     c04:	ldr	r4, [pc, #220]	; ce8 <update_session_deadline+0xf8>
     c08:	add	r4, pc, r4
     c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c10:	cmp	r3, #0
     c14:	bne	c70 <update_session_deadline+0x80>
     c18:	ldr	r3, [pc, #204]	; cec <update_session_deadline+0xfc>
     c1c:	ldr	r3, [r4, r3]
     c20:	ldr	r3, [r3]
     c24:	str	r3, [fp, #-16]
     c28:	b	c64 <update_session_deadline+0x74>
     c2c:	ldr	r3, [fp, #-16]
     c30:	ldr	r3, [r3]
     c34:	str	r3, [fp, #-20]	; 0xffffffec
     c38:	ldr	r3, [fp, #-20]	; 0xffffffec
     c3c:	ldr	r2, [r3, #12]
     c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c44:	cmp	r2, r3
     c48:	bne	c58 <update_session_deadline+0x68>
     c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
     c50:	str	r3, [fp, #-28]	; 0xffffffe4
     c54:	b	c70 <update_session_deadline+0x80>
     c58:	ldr	r3, [fp, #-16]
     c5c:	ldr	r3, [r3, #8]
     c60:	str	r3, [fp, #-16]
     c64:	ldr	r3, [fp, #-16]
     c68:	cmp	r3, #0
     c6c:	bne	c2c <update_session_deadline+0x3c>
     c70:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c74:	cmp	r3, #0
     c78:	bne	c94 <update_session_deadline+0xa4>
     c7c:	mov	r0, #20
     c80:	bl	b5c <rb_malloc>
     c84:	str	r0, [fp, #-28]	; 0xffffffe4
     c88:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     c90:	str	r2, [r3, #12]
     c94:	bl	6a4 <rb_current_time@plt>
     c98:	mov	r3, r0
     c9c:	add	r3, r3, #1792	; 0x700
     ca0:	add	r3, r3, #8
     ca4:	ldr	r2, [fp, #-28]	; 0xffffffe4
     ca8:	str	r3, [r2, #16]
     cac:	ldr	r2, [fp, #-28]	; 0xffffffe4
     cb0:	ldr	r3, [pc, #52]	; cec <update_session_deadline+0xfc>
     cb4:	ldr	r3, [r4, r3]
     cb8:	mov	r1, r3
     cbc:	mov	r0, r2
     cc0:	bl	a2c <rb_dlinkDelete>
     cc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     cc8:	ldr	r3, [pc, #28]	; cec <update_session_deadline+0xfc>
     ccc:	ldr	r3, [r4, r3]
     cd0:	mov	r2, r3
     cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     cd8:	bl	8d8 <rb_dlinkAdd>
     cdc:	nop			; (mov r0, r0)
     ce0:	sub	sp, fp, #8
     ce4:	pop	{r4, fp, pc}
     ce8:	.word	0x000113f0
     cec:	.word	0x00000054

00000cf0 <expire_override_deadlines>:
     cf0:	push	{r4, fp, lr}
     cf4:	add	fp, sp, #8
     cf8:	sub	sp, sp, #44	; 0x2c
     cfc:	str	r0, [fp, #-48]	; 0xffffffd0
     d00:	ldr	r2, [pc, #264]	; e10 <expire_override_deadlines+0x120>
     d04:	add	r2, pc, r2
     d08:	ldr	r3, [pc, #260]	; e14 <expire_override_deadlines+0x124>
     d0c:	ldr	r3, [r2, r3]
     d10:	ldr	r3, [r3]
     d14:	str	r3, [fp, #-16]
     d18:	ldr	r3, [fp, #-16]
     d1c:	cmp	r3, #0
     d20:	beq	d30 <expire_override_deadlines+0x40>
     d24:	ldr	r3, [fp, #-16]
     d28:	ldr	r3, [r3, #8]
     d2c:	b	d34 <expire_override_deadlines+0x44>
     d30:	mov	r3, #0
     d34:	str	r3, [fp, #-20]	; 0xffffffec
     d38:	b	df0 <expire_override_deadlines+0x100>
     d3c:	ldr	r3, [fp, #-16]
     d40:	ldr	r3, [r3]
     d44:	str	r3, [fp, #-24]	; 0xffffffe8
     d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d4c:	ldr	r4, [r3, #16]
     d50:	bl	6a4 <rb_current_time@plt>
     d54:	mov	r3, r0
     d58:	cmp	r4, r3
     d5c:	bgt	e00 <expire_override_deadlines+0x110>
     d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d64:	ldr	r4, [r3, #16]
     d68:	bl	6a4 <rb_current_time@plt>
     d6c:	mov	r3, r0
     d70:	cmp	r4, r3
     d74:	bge	dc8 <expire_override_deadlines+0xd8>
     d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d7c:	ldr	r3, [r3, #12]
     d80:	add	r3, r3, #88	; 0x58
     d84:	str	r3, [fp, #-40]	; 0xffffffd8
     d88:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d8c:	ldr	r3, [r3, #12]
     d90:	add	r3, r3, #88	; 0x58
     d94:	str	r3, [fp, #-36]	; 0xffffffdc
     d98:	ldr	r3, [pc, #120]	; e18 <expire_override_deadlines+0x128>
     d9c:	add	r3, pc, r3
     da0:	str	r3, [fp, #-32]	; 0xffffffe0
     da4:	mov	r3, #0
     da8:	str	r3, [fp, #-28]	; 0xffffffe4
     dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
     db0:	ldr	r0, [r3, #12]
     db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     db8:	ldr	r1, [r3, #12]
     dbc:	sub	r3, fp, #40	; 0x28
     dc0:	mov	r2, #3
     dc4:	bl	6ec <user_mode@plt>
     dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
     dcc:	str	r3, [fp, #-16]
     dd0:	ldr	r3, [fp, #-16]
     dd4:	cmp	r3, #0
     dd8:	beq	de8 <expire_override_deadlines+0xf8>
     ddc:	ldr	r3, [fp, #-16]
     de0:	ldr	r3, [r3, #8]
     de4:	b	dec <expire_override_deadlines+0xfc>
     de8:	mov	r3, #0
     dec:	str	r3, [fp, #-20]	; 0xffffffec
     df0:	ldr	r3, [fp, #-16]
     df4:	cmp	r3, #0
     df8:	bne	d3c <expire_override_deadlines+0x4c>
     dfc:	b	e04 <expire_override_deadlines+0x114>
     e00:	nop			; (mov r0, r0)
     e04:	nop			; (mov r0, r0)
     e08:	sub	sp, fp, #8
     e0c:	pop	{r4, fp, pc}
     e10:	.word	0x000112f4
     e14:	.word	0x00000054
     e18:	.word	0x00000af8

00000e1c <check_umode_change>:
     e1c:	push	{r4, fp, lr}
     e20:	add	fp, sp, #8
     e24:	sub	sp, sp, #36	; 0x24
     e28:	str	r0, [fp, #-40]	; 0xffffffd8
     e2c:	ldr	r4, [pc, #636]	; 10b0 <check_umode_change+0x294>
     e30:	add	r4, pc, r4
     e34:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e38:	str	r3, [fp, #-24]	; 0xffffffe8
     e3c:	mov	r3, #0
     e40:	strb	r3, [fp, #-25]	; 0xffffffe7
     e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e48:	ldr	r3, [r3]
     e4c:	str	r3, [fp, #-32]	; 0xffffffe0
     e50:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e54:	ldrd	r2, [r3, #64]	; 0x40
     e58:	mov	r0, #8192	; 0x2000
     e5c:	mov	r1, #0
     e60:	and	r2, r2, r0
     e64:	and	r3, r3, r1
     e68:	orrs	r3, r2, r3
     e6c:	beq	10a4 <check_umode_change+0x288>
     e70:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e74:	ldrh	r3, [r3, #80]	; 0x50
     e78:	cmp	r3, #64	; 0x40
     e7c:	bne	10a4 <check_umode_change+0x288>
     e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e84:	ldr	r3, [r3, #4]
     e88:	and	r3, r3, #4096	; 0x1000
     e8c:	cmp	r3, #0
     e90:	beq	ecc <check_umode_change+0xb0>
     e94:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e98:	ldr	r3, [r3, #56]	; 0x38
     e9c:	and	r3, r3, #4096	; 0x1000
     ea0:	cmp	r3, #0
     ea4:	bne	ecc <check_umode_change+0xb0>
     ea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     eac:	ldr	r3, [r3, #56]	; 0x38
     eb0:	ldr	r2, [pc, #508]	; 10b4 <check_umode_change+0x298>
     eb4:	ldr	r2, [r4, r2]
     eb8:	ldr	r2, [r2, #448]	; 0x1c0
     ebc:	mvn	r2, r2
     ec0:	and	r2, r2, r3
     ec4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ec8:	str	r2, [r3, #56]	; 0x38
     ecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ed0:	ldr	r2, [r3, #4]
     ed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     ed8:	ldr	r3, [r3, #56]	; 0x38
     edc:	eor	r3, r3, r2
     ee0:	ldr	r2, [pc, #460]	; 10b4 <check_umode_change+0x298>
     ee4:	ldr	r2, [r4, r2]
     ee8:	ldr	r2, [r2, #448]	; 0x1c0
     eec:	and	r3, r3, r2
     ef0:	cmp	r3, #0
     ef4:	movne	r3, #1
     ef8:	moveq	r3, #0
     efc:	strb	r3, [fp, #-25]	; 0xffffffe7
     f00:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f04:	ldr	r3, [r3, #56]	; 0x38
     f08:	ldr	r2, [pc, #420]	; 10b4 <check_umode_change+0x298>
     f0c:	ldr	r2, [r4, r2]
     f10:	ldr	r2, [r2, #448]	; 0x1c0
     f14:	and	r3, r3, r2
     f18:	cmp	r3, #0
     f1c:	beq	fc8 <check_umode_change+0x1ac>
     f20:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f24:	ldr	r3, [r3, #24]
     f28:	cmp	r3, #0
     f2c:	beq	f70 <check_umode_change+0x154>
     f30:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f34:	ldr	r3, [r3, #24]
     f38:	ldr	r3, [r3, #36]	; 0x24
     f3c:	cmp	r3, #0
     f40:	beq	f70 <check_umode_change+0x154>
     f44:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f48:	ldr	r3, [r3, #24]
     f4c:	ldr	r3, [r3, #36]	; 0x24
     f50:	ldr	r2, [pc, #352]	; 10b8 <check_umode_change+0x29c>
     f54:	add	r2, pc, r2
     f58:	mov	r1, r2
     f5c:	mov	r0, r3
     f60:	bl	740 <privilegeset_in_set@plt>
     f64:	mov	r3, r0
     f68:	cmp	r3, #0
     f6c:	bne	fac <check_umode_change+0x190>
     f70:	ldr	r3, [pc, #324]	; 10bc <check_umode_change+0x2a0>
     f74:	add	r3, pc, r3
     f78:	mov	r1, r3
     f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
     f80:	bl	734 <sendto_one_notice@plt>
     f84:	ldr	r3, [fp, #-32]	; 0xffffffe0
     f88:	ldr	r3, [r3, #56]	; 0x38
     f8c:	ldr	r2, [pc, #288]	; 10b4 <check_umode_change+0x298>
     f90:	ldr	r2, [r4, r2]
     f94:	ldr	r2, [r2, #448]	; 0x1c0
     f98:	mvn	r2, r2
     f9c:	and	r2, r2, r3
     fa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fa4:	str	r2, [r3, #56]	; 0x38
     fa8:	b	10a8 <check_umode_change+0x28c>
     fac:	ldrb	r3, [fp, #-25]	; 0xffffffe7
     fb0:	cmp	r3, #0
     fb4:	beq	10a8 <check_umode_change+0x28c>
     fb8:	mov	r1, #0
     fbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     fc0:	bl	bf0 <update_session_deadline>
     fc4:	b	10a8 <check_umode_change+0x28c>
     fc8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
     fcc:	cmp	r3, #0
     fd0:	beq	10a8 <check_umode_change+0x28c>
     fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     fd8:	ldr	r3, [r3, #56]	; 0x38
     fdc:	ldr	r2, [pc, #208]	; 10b4 <check_umode_change+0x298>
     fe0:	ldr	r2, [r4, r2]
     fe4:	ldr	r2, [r2, #448]	; 0x1c0
     fe8:	and	r3, r3, r2
     fec:	cmp	r3, #0
     ff0:	bne	10a8 <check_umode_change+0x28c>
     ff4:	ldr	r3, [pc, #196]	; 10c0 <check_umode_change+0x2a4>
     ff8:	ldr	r3, [r4, r3]
     ffc:	ldr	r3, [r3]
    1000:	str	r3, [fp, #-16]
    1004:	ldr	r3, [fp, #-16]
    1008:	cmp	r3, #0
    100c:	beq	101c <check_umode_change+0x200>
    1010:	ldr	r3, [fp, #-16]
    1014:	ldr	r3, [r3, #8]
    1018:	b	1020 <check_umode_change+0x204>
    101c:	mov	r3, #0
    1020:	str	r3, [fp, #-20]	; 0xffffffec
    1024:	b	1094 <check_umode_change+0x278>
    1028:	ldr	r3, [fp, #-16]
    102c:	ldr	r3, [r3]
    1030:	str	r3, [fp, #-36]	; 0xffffffdc
    1034:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1038:	ldr	r2, [r3, #12]
    103c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1040:	cmp	r2, r3
    1044:	bne	1068 <check_umode_change+0x24c>
    1048:	ldr	r3, [pc, #112]	; 10c0 <check_umode_change+0x2a4>
    104c:	ldr	r3, [r4, r3]
    1050:	mov	r1, r3
    1054:	ldr	r0, [fp, #-16]
    1058:	bl	a2c <rb_dlinkDelete>
    105c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1060:	bl	bb0 <rb_free>
    1064:	b	106c <check_umode_change+0x250>
    1068:	nop			; (mov r0, r0)
    106c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1070:	str	r3, [fp, #-16]
    1074:	ldr	r3, [fp, #-16]
    1078:	cmp	r3, #0
    107c:	beq	108c <check_umode_change+0x270>
    1080:	ldr	r3, [fp, #-16]
    1084:	ldr	r3, [r3, #8]
    1088:	b	1090 <check_umode_change+0x274>
    108c:	mov	r3, #0
    1090:	str	r3, [fp, #-20]	; 0xffffffec
    1094:	ldr	r3, [fp, #-16]
    1098:	cmp	r3, #0
    109c:	bne	1028 <check_umode_change+0x20c>
    10a0:	b	10a8 <check_umode_change+0x28c>
    10a4:	nop			; (mov r0, r0)
    10a8:	sub	sp, fp, #8
    10ac:	pop	{r4, fp, pc}
    10b0:	.word	0x000111c8
    10b4:	.word	0x00000060
    10b8:	.word	0x00000944
    10bc:	.word	0x00000934
    10c0:	.word	0x00000054

000010c4 <hack_channel_access>:
    10c4:	push	{fp, lr}
    10c8:	add	fp, sp, #4
    10cc:	sub	sp, sp, #24
    10d0:	str	r0, [fp, #-16]
    10d4:	ldr	r1, [pc, #220]	; 11b8 <hack_channel_access+0xf4>
    10d8:	add	r1, pc, r1
    10dc:	ldr	r3, [fp, #-16]
    10e0:	str	r3, [fp, #-8]
    10e4:	ldr	r3, [fp, #-8]
    10e8:	ldr	r3, [r3, #20]
    10ec:	cmp	r3, #0
    10f0:	beq	11a4 <hack_channel_access+0xe0>
    10f4:	ldr	r3, [fp, #-8]
    10f8:	ldr	r3, [r3, #16]
    10fc:	cmp	r3, #2
    1100:	beq	11ac <hack_channel_access+0xe8>
    1104:	ldr	r3, [fp, #-8]
    1108:	ldr	r3, [r3]
    110c:	ldr	r3, [r3, #56]	; 0x38
    1110:	ldr	r2, [pc, #164]	; 11bc <hack_channel_access+0xf8>
    1114:	ldr	r2, [r1, r2]
    1118:	ldr	r2, [r2, #448]	; 0x1c0
    111c:	and	r3, r3, r2
    1120:	cmp	r3, #0
    1124:	beq	11b0 <hack_channel_access+0xec>
    1128:	ldr	r3, [fp, #-8]
    112c:	ldr	r3, [r3]
    1130:	mov	r1, #0
    1134:	mov	r0, r3
    1138:	bl	bf0 <update_session_deadline>
    113c:	ldr	r3, [fp, #-8]
    1140:	mov	r2, #4
    1144:	str	r2, [r3, #16]
    1148:	ldr	r3, [fp, #-8]
    114c:	ldr	r3, [r3, #24]
    1150:	cmp	r3, #0
    1154:	beq	11b0 <hack_channel_access+0xec>
    1158:	ldr	r3, [fp, #-8]
    115c:	ldr	r3, [r3]
    1160:	mov	r0, r3
    1164:	bl	710 <get_oper_name@plt>
    1168:	mov	r1, r0
    116c:	ldr	r3, [fp, #-8]
    1170:	ldr	r3, [r3, #4]
    1174:	ldr	r3, [r3, #236]	; 0xec
    1178:	ldr	r2, [fp, #-8]
    117c:	ldr	r2, [r2, #24]
    1180:	str	r2, [sp, #4]
    1184:	str	r3, [sp]
    1188:	mov	r3, r1
    118c:	ldr	r2, [pc, #44]	; 11c0 <hack_channel_access+0xfc>
    1190:	add	r2, pc, r2
    1194:	mov	r1, #256	; 0x100
    1198:	mov	r0, #256	; 0x100
    119c:	bl	6f8 <sendto_realops_snomask@plt>
    11a0:	b	11b0 <hack_channel_access+0xec>
    11a4:	nop			; (mov r0, r0)
    11a8:	b	11b0 <hack_channel_access+0xec>
    11ac:	nop			; (mov r0, r0)
    11b0:	sub	sp, fp, #4
    11b4:	pop	{fp, pc}
    11b8:	.word	0x00010f20
    11bc:	.word	0x00000060
    11c0:	.word	0x00000748

000011c4 <hack_can_join>:
    11c4:	push	{fp, lr}
    11c8:	add	fp, sp, #4
    11cc:	sub	sp, sp, #24
    11d0:	str	r0, [fp, #-16]
    11d4:	ldr	r1, [pc, #168]	; 1284 <hack_can_join+0xc0>
    11d8:	add	r1, pc, r1
    11dc:	ldr	r3, [fp, #-16]
    11e0:	str	r3, [fp, #-8]
    11e4:	ldr	r3, [fp, #-8]
    11e8:	ldr	r3, [r3, #8]
    11ec:	cmp	r3, #0
    11f0:	beq	1278 <hack_can_join+0xb4>
    11f4:	ldr	r3, [fp, #-8]
    11f8:	ldr	r3, [r3]
    11fc:	ldr	r3, [r3, #56]	; 0x38
    1200:	ldr	r2, [pc, #128]	; 1288 <hack_can_join+0xc4>
    1204:	ldr	r2, [r1, r2]
    1208:	ldr	r2, [r2, #448]	; 0x1c0
    120c:	and	r3, r3, r2
    1210:	cmp	r3, #0
    1214:	beq	127c <hack_can_join+0xb8>
    1218:	ldr	r3, [fp, #-8]
    121c:	ldr	r3, [r3]
    1220:	mov	r1, #0
    1224:	mov	r0, r3
    1228:	bl	bf0 <update_session_deadline>
    122c:	ldr	r3, [fp, #-8]
    1230:	mov	r2, #0
    1234:	str	r2, [r3, #8]
    1238:	ldr	r3, [fp, #-8]
    123c:	ldr	r3, [r3]
    1240:	mov	r0, r3
    1244:	bl	710 <get_oper_name@plt>
    1248:	mov	r2, r0
    124c:	ldr	r3, [fp, #-8]
    1250:	ldr	r3, [r3, #4]
    1254:	ldr	r3, [r3, #236]	; 0xec
    1258:	str	r3, [sp]
    125c:	mov	r3, r2
    1260:	ldr	r2, [pc, #36]	; 128c <hack_can_join+0xc8>
    1264:	add	r2, pc, r2
    1268:	mov	r1, #256	; 0x100
    126c:	mov	r0, #256	; 0x100
    1270:	bl	6f8 <sendto_realops_snomask@plt>
    1274:	b	127c <hack_can_join+0xb8>
    1278:	nop			; (mov r0, r0)
    127c:	sub	sp, fp, #4
    1280:	pop	{fp, pc}
    1284:	.word	0x00010e20
    1288:	.word	0x00000060
    128c:	.word	0x000006a8

00001290 <hack_can_kick>:
    1290:	push	{r4, fp, lr}
    1294:	add	fp, sp, #8
    1298:	sub	sp, sp, #28
    129c:	str	r0, [fp, #-24]	; 0xffffffe8
    12a0:	ldr	r4, [pc, #220]	; 1384 <hack_can_kick+0xf4>
    12a4:	add	r4, pc, r4
    12a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    12ac:	str	r3, [fp, #-16]
    12b0:	ldr	r3, [fp, #-16]
    12b4:	ldr	r0, [r3]
    12b8:	ldr	r3, [fp, #-16]
    12bc:	ldr	r1, [r3, #4]
    12c0:	ldr	r3, [fp, #-16]
    12c4:	ldr	r2, [r3, #8]
    12c8:	ldr	r3, [fp, #-16]
    12cc:	ldr	ip, [r3, #20]
    12d0:	mov	r3, #0
    12d4:	str	r3, [sp]
    12d8:	mov	r3, ip
    12dc:	bl	728 <get_channel_access@plt>
    12e0:	str	r0, [fp, #-20]	; 0xffffffec
    12e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    12e8:	cmp	r3, #4
    12ec:	bne	1378 <hack_can_kick+0xe8>
    12f0:	ldr	r3, [fp, #-16]
    12f4:	ldr	r3, [r3]
    12f8:	ldr	r3, [r3, #56]	; 0x38
    12fc:	ldr	r2, [pc, #132]	; 1388 <hack_can_kick+0xf8>
    1300:	ldr	r2, [r4, r2]
    1304:	ldr	r2, [r2, #448]	; 0x1c0
    1308:	and	r3, r3, r2
    130c:	cmp	r3, #0
    1310:	beq	137c <hack_can_kick+0xec>
    1314:	ldr	r3, [fp, #-16]
    1318:	ldr	r3, [r3]
    131c:	mov	r1, #0
    1320:	mov	r0, r3
    1324:	bl	bf0 <update_session_deadline>
    1328:	ldr	r3, [fp, #-16]
    132c:	ldr	r3, [r3]
    1330:	mov	r0, r3
    1334:	bl	710 <get_oper_name@plt>
    1338:	mov	r1, r0
    133c:	ldr	r3, [fp, #-16]
    1340:	ldr	r3, [r3, #4]
    1344:	ldr	r3, [r3, #236]	; 0xec
    1348:	ldr	r2, [fp, #-16]
    134c:	ldr	r2, [r2, #12]
    1350:	add	r2, r2, #88	; 0x58
    1354:	str	r2, [sp, #4]
    1358:	str	r3, [sp]
    135c:	mov	r3, r1
    1360:	ldr	r2, [pc, #36]	; 138c <hack_can_kick+0xfc>
    1364:	add	r2, pc, r2
    1368:	mov	r1, #256	; 0x100
    136c:	mov	r0, #256	; 0x100
    1370:	bl	6f8 <sendto_realops_snomask@plt>
    1374:	b	137c <hack_can_kick+0xec>
    1378:	nop			; (mov r0, r0)
    137c:	sub	sp, fp, #8
    1380:	pop	{r4, fp, pc}
    1384:	.word	0x00010d54
    1388:	.word	0x00000060
    138c:	.word	0x000005d8

00001390 <hack_can_send>:
    1390:	push	{fp, lr}
    1394:	add	fp, sp, #4
    1398:	sub	sp, sp, #24
    139c:	str	r0, [fp, #-16]
    13a0:	ldr	r1, [pc, #264]	; 14b0 <hack_can_send+0x120>
    13a4:	add	r1, pc, r1
    13a8:	ldr	r3, [fp, #-16]
    13ac:	str	r3, [fp, #-8]
    13b0:	ldr	r3, [fp, #-8]
    13b4:	ldr	r3, [r3, #20]
    13b8:	cmp	r3, #0
    13bc:	beq	149c <hack_can_send+0x10c>
    13c0:	ldr	r3, [fp, #-8]
    13c4:	ldr	r3, [r3, #16]
    13c8:	cmp	r3, #1
    13cc:	beq	14a4 <hack_can_send+0x114>
    13d0:	ldr	r3, [fp, #-8]
    13d4:	ldr	r3, [r3, #16]
    13d8:	cmp	r3, #2
    13dc:	beq	14a4 <hack_can_send+0x114>
    13e0:	ldr	r3, [fp, #-8]
    13e4:	ldr	r3, [r3]
    13e8:	ldr	r3, [r3, #56]	; 0x38
    13ec:	ldr	r2, [pc, #192]	; 14b4 <hack_can_send+0x124>
    13f0:	ldr	r2, [r1, r2]
    13f4:	ldr	r2, [r2, #448]	; 0x1c0
    13f8:	and	r3, r3, r2
    13fc:	cmp	r3, #0
    1400:	beq	14a8 <hack_can_send+0x118>
    1404:	ldr	r3, [fp, #-8]
    1408:	mov	r2, #1
    140c:	str	r2, [r3, #16]
    1410:	ldr	r3, [fp, #-8]
    1414:	ldr	r3, [r3]
    1418:	ldrd	r2, [r3, #64]	; 0x40
    141c:	mov	r0, #8192	; 0x2000
    1420:	mov	r1, #0
    1424:	and	r2, r2, r0
    1428:	and	r3, r3, r1
    142c:	orrs	r3, r2, r3
    1430:	beq	14a8 <hack_can_send+0x118>
    1434:	ldr	r3, [fp, #-8]
    1438:	ldr	r3, [r3]
    143c:	ldrh	r3, [r3, #80]	; 0x50
    1440:	cmp	r3, #64	; 0x40
    1444:	bne	14a8 <hack_can_send+0x118>
    1448:	ldr	r3, [fp, #-8]
    144c:	ldr	r3, [r3]
    1450:	mov	r1, #0
    1454:	mov	r0, r3
    1458:	bl	bf0 <update_session_deadline>
    145c:	ldr	r3, [fp, #-8]
    1460:	ldr	r3, [r3]
    1464:	mov	r0, r3
    1468:	bl	710 <get_oper_name@plt>
    146c:	mov	r2, r0
    1470:	ldr	r3, [fp, #-8]
    1474:	ldr	r3, [r3, #4]
    1478:	ldr	r3, [r3, #236]	; 0xec
    147c:	str	r3, [sp]
    1480:	mov	r3, r2
    1484:	ldr	r2, [pc, #44]	; 14b8 <hack_can_send+0x128>
    1488:	add	r2, pc, r2
    148c:	mov	r1, #256	; 0x100
    1490:	mov	r0, #256	; 0x100
    1494:	bl	6f8 <sendto_realops_snomask@plt>
    1498:	b	14a8 <hack_can_send+0x118>
    149c:	nop			; (mov r0, r0)
    14a0:	b	14a8 <hack_can_send+0x118>
    14a4:	nop			; (mov r0, r0)
    14a8:	sub	sp, fp, #4
    14ac:	pop	{fp, pc}
    14b0:	.word	0x00010c54
    14b4:	.word	0x00000060
    14b8:	.word	0x000004e0

000014bc <handle_client_exit>:
    14bc:	push	{r4, fp, lr}
    14c0:	add	fp, sp, #8
    14c4:	sub	sp, sp, #36	; 0x24
    14c8:	str	r0, [fp, #-40]	; 0xffffffd8
    14cc:	ldr	r4, [pc, #204]	; 15a0 <handle_client_exit+0xe4>
    14d0:	add	r4, pc, r4
    14d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
    14d8:	str	r3, [fp, #-24]	; 0xffffffe8
    14dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    14e0:	ldr	r3, [r3, #4]
    14e4:	str	r3, [fp, #-28]	; 0xffffffe4
    14e8:	ldr	r3, [pc, #180]	; 15a4 <handle_client_exit+0xe8>
    14ec:	ldr	r3, [r4, r3]
    14f0:	ldr	r3, [r3]
    14f4:	str	r3, [fp, #-16]
    14f8:	ldr	r3, [fp, #-16]
    14fc:	cmp	r3, #0
    1500:	beq	1510 <handle_client_exit+0x54>
    1504:	ldr	r3, [fp, #-16]
    1508:	ldr	r3, [r3, #8]
    150c:	b	1514 <handle_client_exit+0x58>
    1510:	mov	r3, #0
    1514:	str	r3, [fp, #-20]	; 0xffffffec
    1518:	b	1588 <handle_client_exit+0xcc>
    151c:	ldr	r3, [fp, #-16]
    1520:	ldr	r3, [r3]
    1524:	str	r3, [fp, #-32]	; 0xffffffe0
    1528:	ldr	r3, [fp, #-32]	; 0xffffffe0
    152c:	ldr	r2, [r3, #12]
    1530:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1534:	cmp	r2, r3
    1538:	bne	155c <handle_client_exit+0xa0>
    153c:	ldr	r3, [pc, #96]	; 15a4 <handle_client_exit+0xe8>
    1540:	ldr	r3, [r4, r3]
    1544:	mov	r1, r3
    1548:	ldr	r0, [fp, #-16]
    154c:	bl	a2c <rb_dlinkDelete>
    1550:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1554:	bl	bb0 <rb_free>
    1558:	b	1560 <handle_client_exit+0xa4>
    155c:	nop			; (mov r0, r0)
    1560:	ldr	r3, [fp, #-20]	; 0xffffffec
    1564:	str	r3, [fp, #-16]
    1568:	ldr	r3, [fp, #-16]
    156c:	cmp	r3, #0
    1570:	beq	1580 <handle_client_exit+0xc4>
    1574:	ldr	r3, [fp, #-16]
    1578:	ldr	r3, [r3, #8]
    157c:	b	1584 <handle_client_exit+0xc8>
    1580:	mov	r3, #0
    1584:	str	r3, [fp, #-20]	; 0xffffffec
    1588:	ldr	r3, [fp, #-16]
    158c:	cmp	r3, #0
    1590:	bne	151c <handle_client_exit+0x60>
    1594:	nop			; (mov r0, r0)
    1598:	sub	sp, fp, #8
    159c:	pop	{r4, fp, pc}
    15a0:	.word	0x00010b28
    15a4:	.word	0x00000054

000015a8 <_modinit>:
    15a8:	push	{r4, fp, lr}
    15ac:	add	fp, sp, #8
    15b0:	sub	sp, sp, #12
    15b4:	ldr	r4, [pc, #220]	; 1698 <_modinit+0xf0>
    15b8:	add	r4, pc, r4
    15bc:	bl	704 <find_umode_slot@plt>
    15c0:	mov	r3, r0
    15c4:	mov	r2, r3
    15c8:	ldr	r3, [pc, #204]	; 169c <_modinit+0xf4>
    15cc:	ldr	r3, [r4, r3]
    15d0:	str	r2, [r3, #448]	; 0x1c0
    15d4:	bl	758 <construct_umodebuf@plt>
    15d8:	ldr	r3, [pc, #192]	; 16a0 <_modinit+0xf8>
    15dc:	ldr	r3, [r4, r3]
    15e0:	ldr	r3, [r3]
    15e4:	str	r3, [fp, #-16]
    15e8:	b	1650 <_modinit+0xa8>
    15ec:	ldr	r3, [fp, #-16]
    15f0:	ldr	r3, [r3]
    15f4:	str	r3, [fp, #-20]	; 0xffffffec
    15f8:	ldr	r3, [fp, #-20]	; 0xffffffec
    15fc:	ldrh	r3, [r3, #80]	; 0x50
    1600:	cmp	r3, #64	; 0x40
    1604:	bne	1644 <_modinit+0x9c>
    1608:	ldr	r3, [fp, #-20]	; 0xffffffec
    160c:	ldr	r3, [r3, #24]
    1610:	cmp	r3, #0
    1614:	beq	1644 <_modinit+0x9c>
    1618:	ldr	r3, [fp, #-20]	; 0xffffffec
    161c:	ldr	r3, [r3, #56]	; 0x38
    1620:	ldr	r2, [pc, #116]	; 169c <_modinit+0xf4>
    1624:	ldr	r2, [r4, r2]
    1628:	ldr	r2, [r2, #448]	; 0x1c0
    162c:	and	r3, r3, r2
    1630:	cmp	r3, #0
    1634:	beq	1644 <_modinit+0x9c>
    1638:	mov	r1, #0
    163c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1640:	bl	bf0 <update_session_deadline>
    1644:	ldr	r3, [fp, #-16]
    1648:	ldr	r3, [r3, #8]
    164c:	str	r3, [fp, #-16]
    1650:	ldr	r3, [fp, #-16]
    1654:	cmp	r3, #0
    1658:	bne	15ec <_modinit+0x44>
    165c:	mov	r3, #60	; 0x3c
    1660:	mov	r2, #0
    1664:	ldr	r1, [pc, #56]	; 16a4 <_modinit+0xfc>
    1668:	add	r1, pc, r1
    166c:	ldr	r0, [pc, #52]	; 16a8 <_modinit+0x100>
    1670:	add	r0, pc, r0
    1674:	bl	6b0 <rb_event_add@plt>
    1678:	mov	r2, r0
    167c:	ldr	r3, [pc, #40]	; 16ac <_modinit+0x104>
    1680:	ldr	r3, [r4, r3]
    1684:	str	r2, [r3]
    1688:	mov	r3, #0
    168c:	mov	r0, r3
    1690:	sub	sp, fp, #8
    1694:	pop	{r4, fp, pc}
    1698:	.word	0x00010a40
    169c:	.word	0x00000060
    16a0:	.word	0x0000006c
    16a4:	.word	0xfffff680
    16a8:	.word	0x0000032c
    16ac:	.word	0x0000005c

000016b0 <_moddeinit>:
    16b0:	push	{r4, fp, lr}
    16b4:	add	fp, sp, #8
    16b8:	sub	sp, sp, #12
    16bc:	ldr	r4, [pc, #192]	; 1784 <_moddeinit+0xd4>
    16c0:	add	r4, pc, r4
    16c4:	ldr	r3, [pc, #188]	; 1788 <_moddeinit+0xd8>
    16c8:	ldr	r3, [r4, r3]
    16cc:	mov	r2, #0
    16d0:	str	r2, [r3, #448]	; 0x1c0
    16d4:	bl	758 <construct_umodebuf@plt>
    16d8:	ldr	r3, [pc, #172]	; 178c <_moddeinit+0xdc>
    16dc:	ldr	r3, [r4, r3]
    16e0:	ldr	r3, [r3]
    16e4:	str	r3, [fp, #-16]
    16e8:	ldr	r3, [fp, #-16]
    16ec:	cmp	r3, #0
    16f0:	beq	1700 <_moddeinit+0x50>
    16f4:	ldr	r3, [fp, #-16]
    16f8:	ldr	r3, [r3, #8]
    16fc:	b	1704 <_moddeinit+0x54>
    1700:	mov	r3, #0
    1704:	str	r3, [fp, #-20]	; 0xffffffec
    1708:	b	1758 <_moddeinit+0xa8>
    170c:	ldr	r3, [pc, #120]	; 178c <_moddeinit+0xdc>
    1710:	ldr	r3, [r4, r3]
    1714:	mov	r1, r3
    1718:	ldr	r0, [fp, #-16]
    171c:	bl	a2c <rb_dlinkDelete>
    1720:	ldr	r3, [fp, #-16]
    1724:	ldr	r3, [r3]
    1728:	mov	r0, r3
    172c:	bl	bb0 <rb_free>
    1730:	ldr	r3, [fp, #-20]	; 0xffffffec
    1734:	str	r3, [fp, #-16]
    1738:	ldr	r3, [fp, #-16]
    173c:	cmp	r3, #0
    1740:	beq	1750 <_moddeinit+0xa0>
    1744:	ldr	r3, [fp, #-16]
    1748:	ldr	r3, [r3, #8]
    174c:	b	1754 <_moddeinit+0xa4>
    1750:	mov	r3, #0
    1754:	str	r3, [fp, #-20]	; 0xffffffec
    1758:	ldr	r3, [fp, #-16]
    175c:	cmp	r3, #0
    1760:	bne	170c <_moddeinit+0x5c>
    1764:	ldr	r3, [pc, #36]	; 1790 <_moddeinit+0xe0>
    1768:	ldr	r3, [r4, r3]
    176c:	ldr	r3, [r3]
    1770:	mov	r0, r3
    1774:	bl	6c8 <rb_event_delete@plt>
    1778:	nop			; (mov r0, r0)
    177c:	sub	sp, fp, #8
    1780:	pop	{r4, fp, pc}
    1784:	.word	0x00010938
    1788:	.word	0x00000060
    178c:	.word	0x00000054
    1790:	.word	0x0000005c

Disassembly of section .fini:

00001794 <_fini>:
    1794:	push	{r3, lr}
    1798:	pop	{r3, pc}
