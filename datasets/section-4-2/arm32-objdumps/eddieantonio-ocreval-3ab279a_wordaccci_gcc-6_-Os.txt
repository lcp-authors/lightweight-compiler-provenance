
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010780 <.init>:
   10780:	push	{r3, lr}
   10784:	bl	10974 <abort@plt+0xa8>
   10788:	pop	{r3, pc}

Disassembly of section .plt:

0001078c <calloc@plt-0x14>:
   1078c:	push	{lr}		; (str lr, [sp, #-4]!)
   10790:	ldr	lr, [pc, #4]	; 1079c <calloc@plt-0x4>
   10794:	add	lr, pc, lr
   10798:	ldr	pc, [lr, #8]!
   1079c:	andeq	r2, r1, r4, ror #16

000107a0 <calloc@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #73728	; 0x12000
   107a8:	ldr	pc, [ip, #2148]!	; 0x864

000107ac <raise@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #73728	; 0x12000
   107b4:	ldr	pc, [ip, #2140]!	; 0x85c

000107b8 <strcmp@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #73728	; 0x12000
   107c0:	ldr	pc, [ip, #2132]!	; 0x854

000107c4 <printf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #73728	; 0x12000
   107cc:	ldr	pc, [ip, #2124]!	; 0x84c

000107d0 <fopen@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #73728	; 0x12000
   107d8:	ldr	pc, [ip, #2116]!	; 0x844

000107dc <free@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #73728	; 0x12000
   107e4:	ldr	pc, [ip, #2108]!	; 0x83c

000107e8 <fgets@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #73728	; 0x12000
   107f0:	ldr	pc, [ip, #2100]!	; 0x834

000107f4 <strdup@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #73728	; 0x12000
   107fc:	ldr	pc, [ip, #2092]!	; 0x82c

00010800 <unlink@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2084]!	; 0x824

0001080c <__xstat@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2076]!	; 0x81c

00010818 <__libc_start_main@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #73728	; 0x12000
   10820:	ldr	pc, [ip, #2068]!	; 0x814

00010824 <__sysv_signal@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #73728	; 0x12000
   1082c:	ldr	pc, [ip, #2060]!	; 0x80c

00010830 <__gmon_start__@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #73728	; 0x12000
   10838:	ldr	pc, [ip, #2052]!	; 0x804

0001083c <getpid@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #73728	; 0x12000
   10844:	ldr	pc, [ip, #2044]!	; 0x7fc

00010848 <exit@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #73728	; 0x12000
   10850:	ldr	pc, [ip, #2036]!	; 0x7f4

00010854 <strlen@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #73728	; 0x12000
   1085c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010860 <fprintf@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #73728	; 0x12000
   10868:	ldr	pc, [ip, #2020]!	; 0x7e4

0001086c <sqrt@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #73728	; 0x12000
   10874:	ldr	pc, [ip, #2012]!	; 0x7dc

00010878 <__isoc99_sscanf@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #73728	; 0x12000
   10880:	ldr	pc, [ip, #2004]!	; 0x7d4

00010884 <fclose@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #73728	; 0x12000
   1088c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010890 <fputc@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #73728	; 0x12000
   10898:	ldr	pc, [ip, #1988]!	; 0x7c4

0001089c <sprintf@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #73728	; 0x12000
   108a4:	ldr	pc, [ip, #1980]!	; 0x7bc

000108a8 <atoi@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #73728	; 0x12000
   108b0:	ldr	pc, [ip, #1972]!	; 0x7b4

000108b4 <fputs@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #73728	; 0x12000
   108bc:	ldr	pc, [ip, #1964]!	; 0x7ac

000108c0 <strncmp@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #73728	; 0x12000
   108c8:	ldr	pc, [ip, #1956]!	; 0x7a4

000108cc <abort@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #73728	; 0x12000
   108d4:	ldr	pc, [ip, #1948]!	; 0x79c

Disassembly of section .text:

000108d8 <error@@Base-0x101c>:
   108d8:	push	{r0, r1, r2, r4, r5, lr}
   108dc:	add	ip, sp, #8
   108e0:	mov	r3, #0
   108e4:	str	r0, [ip, #-4]!
   108e8:	ldr	r2, [pc, #64]	; 10930 <abort@plt+0x64>
   108ec:	mov	r0, ip
   108f0:	mov	r5, r1
   108f4:	bl	11a18 <error@@Base+0x124>
   108f8:	ldr	r3, [sp, #4]
   108fc:	cmp	r3, #1
   10900:	movgt	r4, #0
   10904:	bgt	1091c <abort@plt+0x50>
   10908:	ldr	r0, [pc, #36]	; 10934 <abort@plt+0x68>
   1090c:	bl	118f4 <error@@Base>
   10910:	ldr	r0, [r5, r4, lsl #2]
   10914:	bl	10a60 <abort@plt+0x194>
   10918:	add	r4, r4, #1
   1091c:	ldr	r3, [sp, #4]
   10920:	cmp	r4, r3
   10924:	blt	10910 <abort@plt+0x44>
   10928:	bl	10a98 <abort@plt+0x1cc>
   1092c:	bl	1189c <abort@plt+0xfd0>
   10930:	andeq	r2, r1, r6, lsr #4
   10934:	andeq	r2, r1, r6, asr r2
   10938:	mov	fp, #0
   1093c:	mov	lr, #0
   10940:	pop	{r1}		; (ldr r1, [sp], #4)
   10944:	mov	r2, sp
   10948:	push	{r2}		; (str r2, [sp, #-4]!)
   1094c:	push	{r0}		; (str r0, [sp, #-4]!)
   10950:	ldr	ip, [pc, #16]	; 10968 <abort@plt+0x9c>
   10954:	push	{ip}		; (str ip, [sp, #-4]!)
   10958:	ldr	r0, [pc, #12]	; 1096c <abort@plt+0xa0>
   1095c:	ldr	r3, [pc, #12]	; 10970 <abort@plt+0xa4>
   10960:	bl	10818 <__libc_start_main@plt>
   10964:	bl	108cc <abort@plt>
   10968:	andeq	r2, r1, r0, ror r1
   1096c:	ldrdeq	r0, [r1], -r8
   10970:	andeq	r2, r1, r0, lsl r1
   10974:	ldr	r3, [pc, #20]	; 10990 <abort@plt+0xc4>
   10978:	ldr	r2, [pc, #20]	; 10994 <abort@plt+0xc8>
   1097c:	add	r3, pc, r3
   10980:	ldr	r2, [r3, r2]
   10984:	cmp	r2, #0
   10988:	bxeq	lr
   1098c:	b	10830 <__gmon_start__@plt>
   10990:	andeq	r2, r1, ip, ror r6
   10994:	andeq	r0, r0, r4, ror r0
   10998:	ldr	r3, [pc, #28]	; 109bc <abort@plt+0xf0>
   1099c:	ldr	r0, [pc, #28]	; 109c0 <abort@plt+0xf4>
   109a0:	sub	r3, r3, r0
   109a4:	cmp	r3, #6
   109a8:	bxls	lr
   109ac:	ldr	r3, [pc, #16]	; 109c4 <abort@plt+0xf8>
   109b0:	cmp	r3, #0
   109b4:	bxeq	lr
   109b8:	bx	r3
   109bc:	andeq	r3, r2, fp, lsl #1
   109c0:	andeq	r3, r2, r8, lsl #1
   109c4:	andeq	r0, r0, r0
   109c8:	ldr	r1, [pc, #36]	; 109f4 <abort@plt+0x128>
   109cc:	ldr	r0, [pc, #36]	; 109f8 <abort@plt+0x12c>
   109d0:	sub	r1, r1, r0
   109d4:	asr	r1, r1, #2
   109d8:	add	r1, r1, r1, lsr #31
   109dc:	asrs	r1, r1, #1
   109e0:	bxeq	lr
   109e4:	ldr	r3, [pc, #16]	; 109fc <abort@plt+0x130>
   109e8:	cmp	r3, #0
   109ec:	bxeq	lr
   109f0:	bx	r3
   109f4:	andeq	r3, r2, r8, lsl #1
   109f8:	andeq	r3, r2, r8, lsl #1
   109fc:	andeq	r0, r0, r0
   10a00:	push	{r4, lr}
   10a04:	ldr	r4, [pc, #24]	; 10a24 <abort@plt+0x158>
   10a08:	ldrb	r3, [r4]
   10a0c:	cmp	r3, #0
   10a10:	popne	{r4, pc}
   10a14:	bl	10998 <abort@plt+0xcc>
   10a18:	mov	r3, #1
   10a1c:	strb	r3, [r4]
   10a20:	pop	{r4, pc}
   10a24:	muleq	r2, r8, r0
   10a28:	ldr	r0, [pc, #40]	; 10a58 <abort@plt+0x18c>
   10a2c:	ldr	r3, [r0]
   10a30:	cmp	r3, #0
   10a34:	bne	10a3c <abort@plt+0x170>
   10a38:	b	109c8 <abort@plt+0xfc>
   10a3c:	ldr	r3, [pc, #24]	; 10a5c <abort@plt+0x190>
   10a40:	cmp	r3, #0
   10a44:	beq	10a38 <abort@plt+0x16c>
   10a48:	push	{r4, lr}
   10a4c:	blx	r3
   10a50:	pop	{r4, lr}
   10a54:	b	109c8 <abort@plt+0xfc>
   10a58:	andeq	r2, r2, r4, lsl #30
   10a5c:	andeq	r0, r0, r0
   10a60:	push	{r4, r5, r6, lr}
   10a64:	mov	r1, r0
   10a68:	ldr	r4, [pc, #32]	; 10a90 <abort@plt+0x1c4>
   10a6c:	mov	r0, r4
   10a70:	ldm	r4, {r5, r6}
   10a74:	bl	11210 <abort@plt+0x944>
   10a78:	ldm	r4, {r1, r2}
   10a7c:	ldr	r0, [pc, #16]	; 10a94 <abort@plt+0x1c8>
   10a80:	sub	r2, r2, r6
   10a84:	sub	r1, r1, r5
   10a88:	pop	{r4, r5, r6, lr}
   10a8c:	b	10b58 <abort@plt+0x28c>
   10a90:	andeq	r3, r2, r0, lsl r1
   10a94:	andeq	r7, r2, r0, ror #7
   10a98:	push	{r4, lr}
   10a9c:	sub	sp, sp, #32
   10aa0:	ldr	r4, [pc, #144]	; 10b38 <abort@plt+0x26c>
   10aa4:	add	r2, sp, #24
   10aa8:	add	r1, sp, #16
   10aac:	mov	r0, r4
   10ab0:	bl	10ba4 <abort@plt+0x2d8>
   10ab4:	ldr	r1, [r4, #12]
   10ab8:	ldr	r4, [pc, #124]	; 10b3c <abort@plt+0x270>
   10abc:	ldr	r0, [pc, #124]	; 10b40 <abort@plt+0x274>
   10ac0:	bl	107c4 <printf@plt>
   10ac4:	ldr	r1, [r4]
   10ac8:	ldr	r0, [pc, #116]	; 10b44 <abort@plt+0x278>
   10acc:	bl	107c4 <printf@plt>
   10ad0:	ldr	r1, [r4, #4]
   10ad4:	ldr	r0, [pc, #108]	; 10b48 <abort@plt+0x27c>
   10ad8:	bl	107c4 <printf@plt>
   10adc:	ldm	r4, {r2, r3}
   10ae0:	vldr	d6, [pc, #72]	; 10b30 <abort@plt+0x264>
   10ae4:	ldr	r0, [pc, #96]	; 10b4c <abort@plt+0x280>
   10ae8:	sub	r3, r2, r3
   10aec:	vmov	s14, r3
   10af0:	vcvt.f64.s32	d7, s14
   10af4:	vmul.f64	d7, d7, d6
   10af8:	vmov	s13, r2
   10afc:	vcvt.f64.s32	d6, s13
   10b00:	vdiv.f64	d5, d7, d6
   10b04:	vmov	r2, r3, d5
   10b08:	bl	107c4 <printf@plt>
   10b0c:	ldr	r3, [pc, #60]	; 10b50 <abort@plt+0x284>
   10b10:	ldr	r0, [pc, #60]	; 10b54 <abort@plt+0x288>
   10b14:	str	r3, [sp, #8]
   10b18:	ldrd	r2, [sp, #24]
   10b1c:	strd	r2, [sp]
   10b20:	ldrd	r2, [sp, #16]
   10b24:	bl	107c4 <printf@plt>
   10b28:	add	sp, sp, #32
   10b2c:	pop	{r4, pc}
   10b30:	andeq	r0, r0, r0
   10b34:	subsmi	r0, r9, r0
   10b38:	andeq	r7, r2, r0, ror #7
   10b3c:	andeq	r3, r2, r0, lsl r1
   10b40:	muleq	r1, r0, r1
   10b44:	andeq	r2, r1, r6, lsr #3
   10b48:			; <UNDEFINED> instruction: 0x000121b5
   10b4c:	andeq	r2, r1, ip, asr #3
   10b50:	strdeq	r2, [r1], -r5
   10b54:	andeq	r2, r1, r0, ror #3
   10b58:	push	{r4, r5, r6, lr}
   10b5c:	mov	r4, r0
   10b60:	mov	r6, r1
   10b64:	mov	r0, #1
   10b68:	mov	r1, #32
   10b6c:	mov	r5, r2
   10b70:	bl	11930 <error@@Base+0x3c>
   10b74:	str	r6, [r0, #8]
   10b78:	str	r5, [r0, #12]
   10b7c:	ldr	r1, [r4, #24]
   10b80:	ldr	r3, [r4, #28]
   10b84:	add	r1, r1, r6
   10b88:	add	r2, r3, r5
   10b8c:	str	r1, [r4, #24]
   10b90:	str	r2, [r4, #28]
   10b94:	mov	r1, r0
   10b98:	mov	r0, r4
   10b9c:	pop	{r4, r5, r6, lr}
   10ba0:	b	11c8c <error@@Base+0x398>
   10ba4:	push	{r4, r5, r6, lr}
   10ba8:	vpush	{d8-d9}
   10bac:	ldr	lr, [r0]
   10bb0:	mov	r6, r2
   10bb4:	mov	r4, r0
   10bb8:	mov	r5, r1
   10bbc:	mov	r3, lr
   10bc0:	mov	r2, #0
   10bc4:	cmp	r3, #0
   10bc8:	bne	10bdc <abort@plt+0x310>
   10bcc:	cmp	r2, #1
   10bd0:	bgt	10bf0 <abort@plt+0x324>
   10bd4:	ldr	r0, [pc, #388]	; 10d60 <abort@plt+0x494>
   10bd8:	bl	118f4 <error@@Base>
   10bdc:	ldr	r1, [r3, #8]
   10be0:	ldr	r3, [r3, #4]
   10be4:	cmp	r1, #0
   10be8:	addgt	r2, r2, #1
   10bec:	b	10bc4 <abort@plt+0x2f8>
   10bf0:	ldr	r2, [r4, #24]
   10bf4:	ldr	r1, [r4, #28]
   10bf8:	vldr	d8, [pc, #328]	; 10d48 <abort@plt+0x47c>
   10bfc:	sub	r3, r2, r1
   10c00:	vmov	s13, r2
   10c04:	vmov	s14, r3
   10c08:	vldr	d2, [pc, #320]	; 10d50 <abort@plt+0x484>
   10c0c:	mov	r0, lr
   10c10:	vcvt.f64.s32	d6, s13
   10c14:	vcvt.f64.s32	d7, s14
   10c18:	vmov.f64	d9, d2
   10c1c:	vmul.f64	d7, d7, d8
   10c20:	vdiv.f64	d3, d7, d6
   10c24:	vldr	s15, [r4, #12]
   10c28:	vcvt.f64.s32	d4, s15
   10c2c:	vmov	r3, s15
   10c30:	sub	r3, r3, #1
   10c34:	vmov	s13, r3
   10c38:	vstr	d3, [r4, #32]
   10c3c:	vmul.f64	d3, d4, d3
   10c40:	cmp	r0, #0
   10c44:	bne	10cd4 <abort@plt+0x408>
   10c48:	vcvt.f64.s32	d7, s13
   10c4c:	vmul.f64	d2, d2, d7
   10c50:	vdiv.f64	d5, d2, d4
   10c54:	vsub.f64	d5, d3, d5
   10c58:	vldr	d3, [pc, #240]	; 10d50 <abort@plt+0x484>
   10c5c:	vstr	d5, [r4, #40]	; 0x28
   10c60:	cmp	lr, #0
   10c64:	bne	10d20 <abort@plt+0x454>
   10c68:	vdiv.f64	d6, d3, d7
   10c6c:	vdiv.f64	d0, d6, d4
   10c70:	bl	1086c <sqrt@plt>
   10c74:	vldr	d7, [pc, #220]	; 10d58 <abort@plt+0x48c>
   10c78:	vmul.f64	d0, d0, d7
   10c7c:	vldr	d7, [r4, #40]	; 0x28
   10c80:	vsub.f64	d7, d7, d0
   10c84:	vcmpe.f64	d7, d8
   10c88:	vmrs	APSR_nzcv, fpscr
   10c8c:	bgt	10d34 <abort@plt+0x468>
   10c90:	vcmp.f64	d7, d9
   10c94:	vldr	d6, [pc, #180]	; 10d50 <abort@plt+0x484>
   10c98:	vmrs	APSR_nzcv, fpscr
   10c9c:	vmovmi.f64	d7, d6
   10ca0:	vstr	d7, [r5]
   10ca4:	vldr	d7, [r4, #40]	; 0x28
   10ca8:	vadd.f64	d0, d0, d7
   10cac:	vcmpe.f64	d0, d8
   10cb0:	vmrs	APSR_nzcv, fpscr
   10cb4:	bgt	10d3c <abort@plt+0x470>
   10cb8:	vcmp.f64	d0, d9
   10cbc:	vldr	d7, [pc, #140]	; 10d50 <abort@plt+0x484>
   10cc0:	vmrs	APSR_nzcv, fpscr
   10cc4:	vmovmi.f64	d0, d7
   10cc8:	vpop	{d8-d9}
   10ccc:	vstr	d0, [r6]
   10cd0:	pop	{r4, r5, r6, pc}
   10cd4:	ldr	ip, [r0, #8]
   10cd8:	ldr	r3, [r0, #12]
   10cdc:	sub	ip, r2, ip
   10ce0:	sub	r3, r1, r3
   10ce4:	sub	r3, ip, r3
   10ce8:	vmov	s12, ip
   10cec:	vmov	s14, r3
   10cf0:	vcvt.f64.s32	d5, s12
   10cf4:	vcvt.f64.s32	d7, s14
   10cf8:	vmul.f64	d7, d7, d8
   10cfc:	vdiv.f64	d1, d7, d5
   10d00:	vcvt.f64.s32	d7, s13
   10d04:	vmov.f64	d5, d3
   10d08:	vmls.f64	d5, d7, d1
   10d0c:	vstr	d1, [r0, #16]
   10d10:	vadd.f64	d2, d2, d1
   10d14:	vstr	d5, [r0, #24]
   10d18:	ldr	r0, [r0, #4]
   10d1c:	b	10c40 <abort@plt+0x374>
   10d20:	vldr	d6, [lr, #24]
   10d24:	ldr	lr, [lr, #4]
   10d28:	vsub.f64	d6, d6, d5
   10d2c:	vmla.f64	d3, d6, d6
   10d30:	b	10c60 <abort@plt+0x394>
   10d34:	vldr	d7, [pc, #12]	; 10d48 <abort@plt+0x47c>
   10d38:	b	10ca0 <abort@plt+0x3d4>
   10d3c:	vldr	d0, [pc, #4]	; 10d48 <abort@plt+0x47c>
   10d40:	b	10cc8 <abort@plt+0x3fc>
   10d44:	nop			; (mov r0, r0)
   10d48:	andeq	r0, r0, r0
   10d4c:	subsmi	r0, r9, r0
	...
   10d58:			; <UNDEFINED> instruction: 0xf5c28f5c
   10d5c:	svccc	0x00ff5c28
   10d60:	andeq	r2, r1, sp, ror #4
   10d64:	andeq	r0, r0, r0
   10d68:	mov	r2, r0
   10d6c:	push	{r4, lr}
   10d70:	mov	r1, #99	; 0x63
   10d74:	ldr	r0, [pc, #12]	; 10d88 <abort@plt+0x4bc>
   10d78:	bl	107e8 <fgets@plt>
   10d7c:	adds	r0, r0, #0
   10d80:	movne	r0, #1
   10d84:	pop	{r4, pc}
   10d88:	muleq	r2, r9, r0
   10d8c:	push	{r4, lr}
   10d90:	mov	r4, r1
   10d94:	bl	10d68 <abort@plt+0x49c>
   10d98:	cmp	r0, #0
   10d9c:	popeq	{r4, pc}
   10da0:	mov	r2, r4
   10da4:	ldr	r1, [pc, #20]	; 10dc0 <abort@plt+0x4f4>
   10da8:	ldr	r0, [pc, #20]	; 10dc4 <abort@plt+0x4f8>
   10dac:	bl	10878 <__isoc99_sscanf@plt>
   10db0:	sub	r0, r0, #1
   10db4:	clz	r0, r0
   10db8:	lsr	r0, r0, #5
   10dbc:	pop	{r4, pc}
   10dc0:	andeq	r2, r1, pc, ror #5
   10dc4:	muleq	r2, r9, r0
   10dc8:	ldr	r2, [r1]
   10dcc:	cmp	r2, #0
   10dd0:	bne	10de0 <abort@plt+0x514>
   10dd4:	mov	r1, r0
   10dd8:	ldr	r0, [pc, #56]	; 10e18 <abort@plt+0x54c>
   10ddc:	b	108b4 <fputs@plt>
   10de0:	ldr	r3, [r1, #4]
   10de4:	vldr	d6, [pc, #36]	; 10e10 <abort@plt+0x544>
   10de8:	sub	r3, r2, r3
   10dec:	ldr	r1, [pc, #40]	; 10e1c <abort@plt+0x550>
   10df0:	vmov	s14, r3
   10df4:	vcvt.f64.s32	d7, s14
   10df8:	vmul.f64	d7, d7, d6
   10dfc:	vmov	s13, r2
   10e00:	vcvt.f64.s32	d6, s13
   10e04:	vdiv.f64	d5, d7, d6
   10e08:	vmov	r2, r3, d5
   10e0c:	b	10860 <fprintf@plt>
   10e10:	andeq	r0, r0, r0
   10e14:	subsmi	r0, r9, r0
   10e18:	andeq	r2, r1, r5, lsl #5
   10e1c:	andeq	r2, r1, lr, lsl #5
   10e20:	push	{r4, r5, r6, lr}
   10e24:	subs	r5, r1, #0
   10e28:	mov	r4, r0
   10e2c:	beq	10e58 <abort@plt+0x58c>
   10e30:	ldr	r1, [pc, #48]	; 10e68 <abort@plt+0x59c>
   10e34:	ldm	r5, {r2, r3}
   10e38:	bl	10860 <fprintf@plt>
   10e3c:	mov	r1, r5
   10e40:	mov	r0, r4
   10e44:	bl	10dc8 <abort@plt+0x4fc>
   10e48:	mov	r1, r4
   10e4c:	ldr	r0, [pc, #24]	; 10e6c <abort@plt+0x5a0>
   10e50:	pop	{r4, r5, r6, lr}
   10e54:	b	108b4 <fputs@plt>
   10e58:	mov	r1, r0
   10e5c:	ldr	r0, [pc, #12]	; 10e70 <abort@plt+0x5a4>
   10e60:	bl	108b4 <fputs@plt>
   10e64:	b	10e48 <abort@plt+0x57c>
   10e68:	muleq	r1, r4, r2
   10e6c:			; <UNDEFINED> instruction: 0x000122ba
   10e70:	muleq	r1, pc, r2	; <UNPREDICTABLE>
   10e74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e78:	mov	r4, r0
   10e7c:	ldrb	r8, [sp, #32]
   10e80:	mov	r6, r1
   10e84:	mov	r7, r2
   10e88:	ldr	r1, [pc, #204]	; 10f5c <abort@plt+0x690>
   10e8c:	mov	r2, r3
   10e90:	ldrb	r9, [sp, #36]	; 0x24
   10e94:	bl	10860 <fprintf@plt>
   10e98:	mov	r1, #0
   10e9c:	mov	r0, r4
   10ea0:	bl	10e20 <abort@plt+0x554>
   10ea4:	ldr	r3, [pc, #180]	; 10f60 <abort@plt+0x694>
   10ea8:	cmp	r8, #0
   10eac:	ldr	r2, [pc, #176]	; 10f64 <abort@plt+0x698>
   10eb0:	ldr	r1, [pc, #176]	; 10f68 <abort@plt+0x69c>
   10eb4:	moveq	r2, r3
   10eb8:	mov	r0, r4
   10ebc:	bl	10860 <fprintf@plt>
   10ec0:	ldr	sl, [pc, #164]	; 10f6c <abort@plt+0x6a0>
   10ec4:	mov	r5, #1
   10ec8:	cmp	r5, r7
   10ecc:	ble	10f28 <abort@plt+0x65c>
   10ed0:	cmp	r8, #0
   10ed4:	beq	10f04 <abort@plt+0x638>
   10ed8:	add	r3, r7, #1
   10edc:	add	r1, r6, r3, lsl #3
   10ee0:	ldr	r3, [r6, r3, lsl #3]
   10ee4:	cmp	r3, #0
   10ee8:	ble	10f04 <abort@plt+0x638>
   10eec:	mov	r0, r4
   10ef0:	bl	10e20 <abort@plt+0x554>
   10ef4:	mov	r2, r7
   10ef8:	ldr	r1, [pc, #112]	; 10f70 <abort@plt+0x6a4>
   10efc:	mov	r0, r4
   10f00:	bl	10860 <fprintf@plt>
   10f04:	cmp	r9, #0
   10f08:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f0c:	mov	r1, r6
   10f10:	mov	r0, r4
   10f14:	bl	10e20 <abort@plt+0x554>
   10f18:	mov	r1, r4
   10f1c:	ldr	r0, [pc, #80]	; 10f74 <abort@plt+0x6a8>
   10f20:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f24:	b	108b4 <fputs@plt>
   10f28:	ldr	r3, [r6, r5, lsl #3]
   10f2c:	add	r1, r6, r5, lsl #3
   10f30:	cmp	r3, #0
   10f34:	ble	10f50 <abort@plt+0x684>
   10f38:	mov	r0, r4
   10f3c:	bl	10e20 <abort@plt+0x554>
   10f40:	mov	r2, r5
   10f44:	mov	r1, sl
   10f48:	mov	r0, r4
   10f4c:	bl	10860 <fprintf@plt>
   10f50:	add	r5, r5, #1
   10f54:	sxth	r5, r5
   10f58:	b	10ec8 <abort@plt+0x5fc>
   10f5c:	andeq	r2, r1, ip, asr #5
   10f60:	andeq	r2, r1, r5, asr #5
   10f64:			; <UNDEFINED> instruction: 0x000122be
   10f68:	andeq	r2, r1, sp, asr #5
   10f6c:	ldrdeq	r2, [r1], -r1
   10f70:	ldrdeq	r2, [r1], -sl
   10f74:	andeq	r2, r1, r3, ror #5
   10f78:	push	{r4, r5, r6, r7, r8, lr}
   10f7c:	mov	r4, r1
   10f80:	add	r4, r4, #4096	; 0x1000
   10f84:	mov	r6, r0
   10f88:	mov	r0, r1
   10f8c:	mov	r5, r2
   10f90:	bl	11628 <abort@plt+0xd5c>
   10f94:	ldr	r2, [pc, #124]	; 11018 <abort@plt+0x74c>
   10f98:	ldr	r1, [r4, #3952]	; 0xf70
   10f9c:	ldr	r0, [r4, #3956]	; 0xf74
   10fa0:	bl	11ea0 <error@@Base+0x5ac>
   10fa4:	mov	r2, r5
   10fa8:	ldr	r1, [pc, #108]	; 1101c <abort@plt+0x750>
   10fac:	mov	r0, r6
   10fb0:	bl	10860 <fprintf@plt>
   10fb4:	mov	r1, #0
   10fb8:	mov	r0, r6
   10fbc:	bl	10e20 <abort@plt+0x554>
   10fc0:	mov	r1, r6
   10fc4:	mov	r0, #10
   10fc8:	bl	10890 <fputc@plt>
   10fcc:	ldr	r7, [pc, #76]	; 11020 <abort@plt+0x754>
   10fd0:	mov	r5, #0
   10fd4:	ldr	r3, [r4, #3956]	; 0xf74
   10fd8:	cmp	r5, r3
   10fdc:	blt	10fe4 <abort@plt+0x718>
   10fe0:	pop	{r4, r5, r6, r7, r8, pc}
   10fe4:	ldr	r3, [r4, #3952]	; 0xf70
   10fe8:	mov	r0, r6
   10fec:	ldr	r1, [r3, r5, lsl #2]
   10ff0:	add	r1, r1, #12
   10ff4:	bl	10e20 <abort@plt+0x554>
   10ff8:	ldr	r3, [r4, #3952]	; 0xf70
   10ffc:	mov	r1, r7
   11000:	mov	r0, r6
   11004:	ldr	r3, [r3, r5, lsl #2]
   11008:	add	r5, r5, #1
   1100c:	ldr	r2, [r3, #8]
   11010:	bl	10860 <fprintf@plt>
   11014:	b	10fd4 <abort@plt+0x708>
   11018:	andeq	r1, r1, r4, lsr #32
   1101c:	andeq	r2, r1, ip, asr #5
   11020:	andeq	r2, r1, sp, asr #5
   11024:	ldr	r1, [r1, #8]
   11028:	ldr	r0, [r0, #8]
   1102c:	b	117a4 <abort@plt+0xed8>
   11030:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   11034:	mov	r6, r0
   11038:	mov	r5, r1
   1103c:	bl	10d68 <abort@plt+0x49c>
   11040:	mov	r4, #0
   11044:	cmp	r0, #0
   11048:	bne	11058 <abort@plt+0x78c>
   1104c:	mov	r0, r4
   11050:	add	sp, sp, #8
   11054:	pop	{r4, r5, r6, r7, r8, pc}
   11058:	mov	r0, r6
   1105c:	bl	10d68 <abort@plt+0x49c>
   11060:	cmp	r0, #0
   11064:	ldrne	r7, [pc, #128]	; 110ec <abort@plt+0x820>
   11068:	beq	1104c <abort@plt+0x780>
   1106c:	mov	r0, r6
   11070:	bl	10d68 <abort@plt+0x49c>
   11074:	cmp	r0, #0
   11078:	beq	1104c <abort@plt+0x780>
   1107c:	add	r3, sp, #4
   11080:	mov	r2, sp
   11084:	mov	r1, r7
   11088:	ldr	r0, [pc, #96]	; 110f0 <abort@plt+0x824>
   1108c:	bl	10878 <__isoc99_sscanf@plt>
   11090:	cmp	r0, #2
   11094:	bne	1104c <abort@plt+0x780>
   11098:	ldr	r0, [pc, #84]	; 110f4 <abort@plt+0x828>
   1109c:	bl	108a8 <atoi@plt>
   110a0:	ldr	r8, [sp]
   110a4:	cmp	r0, #0
   110a8:	bne	110c8 <abort@plt+0x7fc>
   110ac:	ldr	r1, [pc, #68]	; 110f8 <abort@plt+0x82c>
   110b0:	ldr	r0, [pc, #60]	; 110f4 <abort@plt+0x828>
   110b4:	bl	107b8 <strcmp@plt>
   110b8:	cmp	r0, #0
   110bc:	moveq	r4, r8
   110c0:	moveq	r0, #0
   110c4:	movne	r0, #11
   110c8:	ldr	r3, [r5, r0, lsl #3]
   110cc:	add	r2, r5, r0, lsl #3
   110d0:	add	r3, r3, r8
   110d4:	str	r3, [r5, r0, lsl #3]
   110d8:	ldr	r1, [sp, #4]
   110dc:	ldr	r3, [r2, #4]
   110e0:	add	r3, r3, r1
   110e4:	str	r3, [r2, #4]
   110e8:	b	1106c <abort@plt+0x7a0>
   110ec:	andeq	r2, r1, fp, ror #5
   110f0:	muleq	r2, r9, r0
   110f4:	strheq	r3, [r2], -r6
   110f8:	andeq	r2, r1, r3, ror #5
   110fc:	ldr	r3, [r0]
   11100:	add	r1, r3, r1
   11104:	ldr	r3, [r0, #4]
   11108:	str	r1, [r0]
   1110c:	add	r2, r3, r2
   11110:	str	r2, [r0, #4]
   11114:	bx	lr
   11118:	push	{r4, r5, r6, r7, r8, lr}
   1111c:	mov	r7, r0
   11120:	mov	r8, r1
   11124:	mov	r6, r2
   11128:	mov	r5, r3
   1112c:	bl	1154c <abort@plt+0xc80>
   11130:	subs	r4, r0, #0
   11134:	bne	11160 <abort@plt+0x894>
   11138:	mov	r1, #20
   1113c:	mov	r0, #1
   11140:	bl	11930 <error@@Base+0x3c>
   11144:	mov	r4, r0
   11148:	mov	r0, r8
   1114c:	bl	107f4 <strdup@plt>
   11150:	mov	r1, r4
   11154:	str	r0, [r4, #8]
   11158:	mov	r0, r7
   1115c:	bl	11590 <abort@plt+0xcc4>
   11160:	ldr	r2, [r4, #12]
   11164:	ldr	r3, [r4, #16]
   11168:	add	r2, r2, r6
   1116c:	add	r3, r3, r5
   11170:	str	r2, [r4, #12]
   11174:	str	r3, [r4, #16]
   11178:	pop	{r4, r5, r6, r7, r8, pc}
   1117c:	push	{r0, r1, r4, r5, r6, lr}
   11180:	mov	r4, r0
   11184:	mov	r6, r1
   11188:	bl	10d68 <abort@plt+0x49c>
   1118c:	cmp	r0, #0
   11190:	beq	111a8 <abort@plt+0x8dc>
   11194:	mov	r0, r4
   11198:	bl	10d68 <abort@plt+0x49c>
   1119c:	cmp	r0, #0
   111a0:	ldrne	r5, [pc, #92]	; 11204 <abort@plt+0x938>
   111a4:	bne	111d4 <abort@plt+0x908>
   111a8:	add	sp, sp, #8
   111ac:	pop	{r4, r5, r6, pc}
   111b0:	mov	r0, r5
   111b4:	bl	10854 <strlen@plt>
   111b8:	mov	r3, #0
   111bc:	ldr	r1, [pc, #68]	; 11208 <abort@plt+0x93c>
   111c0:	add	r0, r5, r0
   111c4:	strb	r3, [r0, #-1]
   111c8:	ldm	sp, {r2, r3}
   111cc:	mov	r0, r6
   111d0:	bl	11118 <abort@plt+0x84c>
   111d4:	mov	r0, r4
   111d8:	bl	10d68 <abort@plt+0x49c>
   111dc:	cmp	r0, #0
   111e0:	beq	111a8 <abort@plt+0x8dc>
   111e4:	add	r3, sp, #4
   111e8:	mov	r2, sp
   111ec:	ldr	r1, [pc, #24]	; 1120c <abort@plt+0x940>
   111f0:	ldr	r0, [pc, #12]	; 11204 <abort@plt+0x938>
   111f4:	bl	10878 <__isoc99_sscanf@plt>
   111f8:	cmp	r0, #2
   111fc:	beq	111b0 <abort@plt+0x8e4>
   11200:	b	111a8 <abort@plt+0x8dc>
   11204:	muleq	r2, r9, r0
   11208:	strheq	r3, [r2], -r6
   1120c:	andeq	r2, r1, fp, ror #5
   11210:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11214:	mov	r6, r1
   11218:	mov	r5, r0
   1121c:	ldr	r1, [pc, #332]	; 11370 <abort@plt+0xaa4>
   11220:	mov	r0, r6
   11224:	bl	119bc <error@@Base+0xc8>
   11228:	mov	r4, r0
   1122c:	bl	10d68 <abort@plt+0x49c>
   11230:	cmp	r0, #0
   11234:	beq	1135c <abort@plt+0xa90>
   11238:	mov	r2, #45	; 0x2d
   1123c:	ldr	r1, [pc, #304]	; 11374 <abort@plt+0xaa8>
   11240:	ldr	r0, [pc, #304]	; 11378 <abort@plt+0xaac>
   11244:	bl	108c0 <strncmp@plt>
   11248:	cmp	r0, #0
   1124c:	bne	1135c <abort@plt+0xa90>
   11250:	mov	r0, r4
   11254:	bl	10d68 <abort@plt+0x49c>
   11258:	cmp	r0, #0
   1125c:	beq	1135c <abort@plt+0xa90>
   11260:	ldr	r1, [pc, #276]	; 1137c <abort@plt+0xab0>
   11264:	ldr	r0, [pc, #268]	; 11378 <abort@plt+0xaac>
   11268:	bl	107b8 <strcmp@plt>
   1126c:	cmp	r0, #0
   11270:	bne	1135c <abort@plt+0xa90>
   11274:	mov	r1, sp
   11278:	mov	r0, r4
   1127c:	bl	10d8c <abort@plt+0x4c0>
   11280:	cmp	r0, #0
   11284:	beq	1135c <abort@plt+0xa90>
   11288:	add	r1, sp, #4
   1128c:	mov	r0, r4
   11290:	bl	10d8c <abort@plt+0x4c0>
   11294:	cmp	r0, #0
   11298:	beq	1135c <abort@plt+0xa90>
   1129c:	mov	r0, r4
   112a0:	bl	10d68 <abort@plt+0x49c>
   112a4:	cmp	r0, #0
   112a8:	beq	1135c <abort@plt+0xa90>
   112ac:	mov	r0, r4
   112b0:	bl	10d68 <abort@plt+0x49c>
   112b4:	cmp	r0, #0
   112b8:	beq	1135c <abort@plt+0xa90>
   112bc:	ldr	r3, [r5]
   112c0:	ldr	r2, [sp]
   112c4:	add	r1, r5, #8
   112c8:	add	r3, r3, r2
   112cc:	str	r3, [r5]
   112d0:	ldr	r2, [sp, #4]
   112d4:	ldr	r3, [r5, #4]
   112d8:	mov	r0, r4
   112dc:	add	r3, r3, r2
   112e0:	str	r3, [r5, #4]
   112e4:	bl	11030 <abort@plt+0x764>
   112e8:	add	r1, r5, #416	; 0x1a0
   112ec:	mov	r7, r0
   112f0:	mov	r0, r4
   112f4:	bl	11030 <abort@plt+0x764>
   112f8:	add	r1, r5, #824	; 0x338
   112fc:	mov	r6, r0
   11300:	mov	r0, r4
   11304:	bl	11030 <abort@plt+0x764>
   11308:	ldr	r3, [sp]
   1130c:	cmp	r3, #0
   11310:	ble	1134c <abort@plt+0xa80>
   11314:	add	r1, r5, #920	; 0x398
   11318:	mov	r0, r4
   1131c:	bl	11030 <abort@plt+0x764>
   11320:	cmp	r7, #0
   11324:	ble	11334 <abort@plt+0xa68>
   11328:	add	r1, r5, #992	; 0x3e0
   1132c:	mov	r0, r4
   11330:	bl	1117c <abort@plt+0x8b0>
   11334:	cmp	r6, #0
   11338:	ble	1134c <abort@plt+0xa80>
   1133c:	add	r1, r5, #9024	; 0x2340
   11340:	add	r1, r1, #24
   11344:	mov	r0, r4
   11348:	bl	1117c <abort@plt+0x8b0>
   1134c:	mov	r0, r4
   11350:	bl	117ec <abort@plt+0xf20>
   11354:	add	sp, sp, #12
   11358:	pop	{r4, r5, r6, r7, pc}
   1135c:	cmp	r6, #0
   11360:	ldr	r1, [pc, #24]	; 11380 <abort@plt+0xab4>
   11364:	ldr	r0, [pc, #24]	; 11384 <abort@plt+0xab8>
   11368:	movne	r1, r6
   1136c:	bl	1197c <error@@Base+0x88>
   11370:	strdeq	r2, [r1], -r9
   11374:	strdeq	r2, [r1], -fp
   11378:	muleq	r2, r9, r0
   1137c:	andeq	r2, r1, fp, lsr #6
   11380:	strdeq	r2, [r1], -r3
   11384:	andeq	r2, r1, fp, asr r3
   11388:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1138c:	mov	r4, r0
   11390:	mov	r0, r1
   11394:	ldr	r1, [pc, #276]	; 114b0 <abort@plt+0xbe4>
   11398:	bl	119bc <error@@Base+0xc8>
   1139c:	ldr	r3, [pc, #272]	; 114b4 <abort@plt+0xbe8>
   113a0:	ldr	r2, [pc, #272]	; 114b8 <abort@plt+0xbec>
   113a4:	ldr	r1, [pc, #272]	; 114bc <abort@plt+0xbf0>
   113a8:	mov	r7, #1
   113ac:	mov	r6, #0
   113b0:	mov	r5, r0
   113b4:	bl	10860 <fprintf@plt>
   113b8:	ldr	r2, [r4]
   113bc:	ldr	r1, [pc, #252]	; 114c0 <abort@plt+0xbf4>
   113c0:	mov	r0, r5
   113c4:	bl	10860 <fprintf@plt>
   113c8:	ldr	r2, [r4, #4]
   113cc:	ldr	r1, [pc, #240]	; 114c4 <abort@plt+0xbf8>
   113d0:	mov	r0, r5
   113d4:	bl	10860 <fprintf@plt>
   113d8:	mov	r1, r4
   113dc:	mov	r0, r5
   113e0:	bl	10dc8 <abort@plt+0x4fc>
   113e4:	mov	r1, r5
   113e8:	ldr	r0, [pc, #216]	; 114c8 <abort@plt+0xbfc>
   113ec:	bl	108b4 <fputs@plt>
   113f0:	ldr	r3, [pc, #212]	; 114cc <abort@plt+0xc00>
   113f4:	mov	r2, #50	; 0x32
   113f8:	add	r1, r4, #8
   113fc:	mov	r0, r5
   11400:	stm	sp, {r6, r7}
   11404:	bl	10e74 <abort@plt+0x5a8>
   11408:	ldr	r3, [pc, #192]	; 114d0 <abort@plt+0xc04>
   1140c:	mov	r2, #50	; 0x32
   11410:	add	r1, r4, #416	; 0x1a0
   11414:	mov	r0, r5
   11418:	stm	sp, {r6, r7}
   1141c:	bl	10e74 <abort@plt+0x5a8>
   11420:	ldr	r3, [pc, #172]	; 114d4 <abort@plt+0xc08>
   11424:	str	r7, [sp, #4]
   11428:	str	r7, [sp]
   1142c:	mov	r2, #10
   11430:	add	r1, r4, #824	; 0x338
   11434:	mov	r0, r5
   11438:	bl	10e74 <abort@plt+0x5a8>
   1143c:	ldr	r3, [r4]
   11440:	cmp	r3, r6
   11444:	ble	114a0 <abort@plt+0xbd4>
   11448:	ldr	r3, [pc, #136]	; 114d8 <abort@plt+0xc0c>
   1144c:	str	r6, [sp, #4]
   11450:	str	r6, [sp]
   11454:	mov	r2, #8
   11458:	add	r1, r4, #920	; 0x398
   1145c:	mov	r0, r5
   11460:	bl	10e74 <abort@plt+0x5a8>
   11464:	ldr	r3, [r4, #8]
   11468:	cmp	r3, r6
   1146c:	ble	11480 <abort@plt+0xbb4>
   11470:	ldr	r2, [pc, #84]	; 114cc <abort@plt+0xc00>
   11474:	add	r1, r4, #992	; 0x3e0
   11478:	mov	r0, r5
   1147c:	bl	10f78 <abort@plt+0x6ac>
   11480:	ldr	r3, [r4, #416]	; 0x1a0
   11484:	cmp	r3, #0
   11488:	ble	114a0 <abort@plt+0xbd4>
   1148c:	add	r1, r4, #9024	; 0x2340
   11490:	ldr	r2, [pc, #56]	; 114d0 <abort@plt+0xc04>
   11494:	add	r1, r1, #24
   11498:	mov	r0, r5
   1149c:	bl	10f78 <abort@plt+0x6ac>
   114a0:	mov	r0, r5
   114a4:	add	sp, sp, #12
   114a8:	pop	{r4, r5, r6, r7, lr}
   114ac:	b	117ec <abort@plt+0xf20>
   114b0:	andeq	r2, r1, sp, ror #6
   114b4:	andeq	r2, r1, fp, lsr #6
   114b8:	strdeq	r2, [r1], -fp
   114bc:	andeq	r2, r1, pc, ror #6
   114c0:	andeq	r2, r1, r4, ror r3
   114c4:	andeq	r2, r1, r2, lsl #7
   114c8:	ldrdeq	r2, [r1], -r3
   114cc:	muleq	r1, r8, r3
   114d0:	andeq	r2, r1, fp, lsr #7
   114d4:	andeq	r2, r1, r2, lsr #7
   114d8:			; <UNDEFINED> instruction: 0x000123b9
   114dc:	sub	r2, r0, #1
   114e0:	mov	r0, #0
   114e4:	push	{r4, lr}
   114e8:	ldrb	r3, [r2, #1]!
   114ec:	cmp	r3, #0
   114f0:	bne	11504 <abort@plt+0xc38>
   114f4:	ldr	r1, [pc, #16]	; 1150c <abort@plt+0xc40>
   114f8:	bl	120e0 <error@@Base+0x7ec>
   114fc:	sxth	r0, r1
   11500:	pop	{r4, pc}
   11504:	add	r0, r0, r3
   11508:	b	114e8 <abort@plt+0xc1c>
   1150c:	strdeq	r0, [r0], -r7
   11510:	push	{r4, r5, r6, lr}
   11514:	add	r6, r0, #8000	; 0x1f40
   11518:	mov	r4, r0
   1151c:	mov	r5, r0
   11520:	add	r6, r6, #48	; 0x30
   11524:	mov	r0, r5
   11528:	add	r5, r5, #16
   1152c:	bl	11c64 <error@@Base+0x370>
   11530:	cmp	r5, r6
   11534:	bne	11524 <abort@plt+0xc58>
   11538:	add	r4, r4, #4096	; 0x1000
   1153c:	mov	r3, #0
   11540:	str	r3, [r4, #3952]	; 0xf70
   11544:	str	r3, [r4, #3956]	; 0xf74
   11548:	pop	{r4, r5, r6, pc}
   1154c:	push	{r4, r5, r6, lr}
   11550:	mov	r4, r0
   11554:	mov	r0, r1
   11558:	mov	r5, r1
   1155c:	bl	114dc <abort@plt+0xc10>
   11560:	ldr	r4, [r4, r0, lsl #4]
   11564:	cmp	r4, #0
   11568:	beq	11580 <abort@plt+0xcb4>
   1156c:	ldr	r1, [r4, #8]
   11570:	mov	r0, r5
   11574:	bl	107b8 <strcmp@plt>
   11578:	cmp	r0, #0
   1157c:	bne	11588 <abort@plt+0xcbc>
   11580:	mov	r0, r4
   11584:	pop	{r4, r5, r6, pc}
   11588:	ldr	r4, [r4, #4]
   1158c:	b	11564 <abort@plt+0xc98>
   11590:	push	{r4, r5, r6, lr}
   11594:	mov	r4, r0
   11598:	ldr	r0, [r1, #8]
   1159c:	mov	r5, r1
   115a0:	bl	114dc <abort@plt+0xc10>
   115a4:	mov	r1, r5
   115a8:	add	r0, r4, r0, lsl #4
   115ac:	add	r4, r4, #4096	; 0x1000
   115b0:	bl	11c7c <error@@Base+0x388>
   115b4:	ldr	r0, [r4, #3952]	; 0xf70
   115b8:	cmp	r0, #0
   115bc:	beq	115cc <abort@plt+0xd00>
   115c0:	bl	107dc <free@plt>
   115c4:	mov	r3, #0
   115c8:	str	r3, [r4, #3952]	; 0xf70
   115cc:	ldr	r3, [r4, #3956]	; 0xf74
   115d0:	add	r3, r3, #1
   115d4:	str	r3, [r4, #3956]	; 0xf74
   115d8:	pop	{r4, r5, r6, pc}
   115dc:	push	{r4, r5, r6, lr}
   115e0:	mov	r4, r0
   115e4:	ldr	r0, [r1, #8]
   115e8:	mov	r5, r1
   115ec:	bl	114dc <abort@plt+0xc10>
   115f0:	mov	r1, r5
   115f4:	add	r0, r4, r0, lsl #4
   115f8:	add	r4, r4, #4096	; 0x1000
   115fc:	bl	11cb4 <error@@Base+0x3c0>
   11600:	ldr	r0, [r4, #3952]	; 0xf70
   11604:	cmp	r0, #0
   11608:	beq	11618 <abort@plt+0xd4c>
   1160c:	bl	107dc <free@plt>
   11610:	mov	r3, #0
   11614:	str	r3, [r4, #3952]	; 0xf70
   11618:	ldr	r3, [r4, #3956]	; 0xf74
   1161c:	sub	r3, r3, #1
   11620:	str	r3, [r4, #3956]	; 0xf74
   11624:	pop	{r4, r5, r6, pc}
   11628:	push	{r4, r5, r6, lr}
   1162c:	add	r6, r0, #4096	; 0x1000
   11630:	ldr	r4, [r6, #3952]	; 0xf70
   11634:	cmp	r4, #0
   11638:	popne	{r4, r5, r6, pc}
   1163c:	ldr	r3, [r6, #3956]	; 0xf74
   11640:	cmp	r3, #0
   11644:	popeq	{r4, r5, r6, pc}
   11648:	mov	r5, r0
   1164c:	mov	r1, #4
   11650:	mov	r0, r3
   11654:	bl	11930 <error@@Base+0x3c>
   11658:	ldr	lr, [pc, #60]	; 1169c <abort@plt+0xdd0>
   1165c:	mov	r3, r4
   11660:	mov	r2, r4
   11664:	str	r0, [r6, #3952]	; 0xf70
   11668:	ldr	r1, [r5, r2, lsl #4]
   1166c:	mov	ip, r3
   11670:	cmp	r1, #0
   11674:	mov	r3, ip
   11678:	bne	1168c <abort@plt+0xdc0>
   1167c:	add	r2, r2, #1
   11680:	cmp	r2, lr
   11684:	bne	11668 <abort@plt+0xd9c>
   11688:	pop	{r4, r5, r6, pc}
   1168c:	str	r1, [r0, ip, lsl #2]
   11690:	add	ip, ip, #1
   11694:	ldr	r1, [r1, #4]
   11698:	b	11670 <abort@plt+0xda4>
   1169c:	strdeq	r0, [r0], -r7
   116a0:	push	{r4, r5, r6, r7, r8, lr}
   116a4:	add	r6, r0, #8000	; 0x1f40
   116a8:	mov	r4, r0
   116ac:	mov	r7, r1
   116b0:	mov	r5, r0
   116b4:	add	r6, r6, #48	; 0x30
   116b8:	mov	r0, r5
   116bc:	mov	r1, r7
   116c0:	add	r5, r5, #16
   116c4:	bl	11d60 <error@@Base+0x46c>
   116c8:	cmp	r5, r6
   116cc:	bne	116b8 <abort@plt+0xdec>
   116d0:	add	r4, r4, #4096	; 0x1000
   116d4:	ldr	r0, [r4, #3952]	; 0xf70
   116d8:	cmp	r0, #0
   116dc:	beq	116ec <abort@plt+0xe20>
   116e0:	bl	107dc <free@plt>
   116e4:	mov	r3, #0
   116e8:	str	r3, [r4, #3952]	; 0xf70
   116ec:	mov	r3, #0
   116f0:	str	r3, [r4, #3956]	; 0xf74
   116f4:	pop	{r4, r5, r6, r7, r8, pc}
   116f8:	ldr	r3, [pc, #56]	; 11738 <abort@plt+0xe6c>
   116fc:	push	{r4, r5, lr}
   11700:	sub	sp, sp, #116	; 0x74
   11704:	ldr	r4, [r3]
   11708:	mov	r5, r0
   1170c:	bl	1083c <getpid@plt>
   11710:	mov	r2, r4
   11714:	ldr	r1, [pc, #32]	; 1173c <abort@plt+0xe70>
   11718:	str	r5, [sp]
   1171c:	mov	r3, r0
   11720:	add	r0, sp, #12
   11724:	bl	1089c <sprintf@plt>
   11728:	add	r0, sp, #12
   1172c:	bl	107f4 <strdup@plt>
   11730:	add	sp, sp, #116	; 0x74
   11734:	pop	{r4, r5, pc}
   11738:	andeq	r7, r2, r4, lsl r4
   1173c:	andeq	r2, r1, r1, asr #7
   11740:	ldr	r3, [pc, #84]	; 1179c <abort@plt+0xed0>
   11744:	push	{r7, lr}
   11748:	mov	r5, r0
   1174c:	ldr	r3, [r3]
   11750:	cmp	r3, #0
   11754:	beq	1175c <abort@plt+0xe90>
   11758:	blx	r3
   1175c:	ldr	r6, [pc, #60]	; 117a0 <abort@plt+0xed4>
   11760:	mov	r4, #1
   11764:	ldrsh	r3, [r6]
   11768:	cmp	r3, r4
   1176c:	bge	11778 <abort@plt+0xeac>
   11770:	mov	r0, r5
   11774:	bl	10848 <exit@plt>
   11778:	mov	r0, r4
   1177c:	bl	116f8 <abort@plt+0xe2c>
   11780:	add	r4, r4, #1
   11784:	sxth	r4, r4
   11788:	mov	r7, r0
   1178c:	bl	10800 <unlink@plt>
   11790:	mov	r0, r7
   11794:	bl	107dc <free@plt>
   11798:	b	11764 <abort@plt+0xe98>
   1179c:	andeq	r7, r2, r8, lsl r4
   117a0:	strdeq	r3, [r2], -lr
   117a4:	mov	r3, #0
   117a8:	ldrb	r2, [r0, r3]
   117ac:	cmp	r2, #0
   117b0:	beq	117dc <abort@plt+0xf10>
   117b4:	ldrb	ip, [r1, r3]
   117b8:	cmp	ip, r2
   117bc:	beq	117d4 <abort@plt+0xf08>
   117c0:	ldrb	r3, [r1, r3]
   117c4:	cmp	r3, r2
   117c8:	mvnhi	r0, #0
   117cc:	movls	r0, #1
   117d0:	bx	lr
   117d4:	add	r3, r3, #1
   117d8:	b	117a8 <abort@plt+0xedc>
   117dc:	ldrb	r0, [r1, r3]
   117e0:	cmp	r0, #0
   117e4:	bne	117c0 <abort@plt+0xef4>
   117e8:	bx	lr
   117ec:	ldr	r2, [pc, #28]	; 11810 <abort@plt+0xf44>
   117f0:	ldr	r2, [r2]
   117f4:	cmp	r2, r0
   117f8:	bxeq	lr
   117fc:	ldr	r2, [pc, #16]	; 11814 <abort@plt+0xf48>
   11800:	ldr	r2, [r2]
   11804:	cmp	r0, r2
   11808:	bxeq	lr
   1180c:	b	10884 <fclose@plt>
   11810:	muleq	r2, r0, r0
   11814:	muleq	r2, r4, r0
   11818:	push	{lr}		; (str lr, [sp, #-4]!)
   1181c:	sub	sp, sp, #92	; 0x5c
   11820:	mov	r1, sp
   11824:	bl	12174 <error@@Base+0x880>
   11828:	clz	r0, r0
   1182c:	lsr	r0, r0, #5
   11830:	add	sp, sp, #92	; 0x5c
   11834:	pop	{pc}		; (ldr pc, [sp], #4)
   11838:	ldr	r3, [pc, #36]	; 11864 <abort@plt+0xf98>
   1183c:	push	{r4, lr}
   11840:	ldrh	r0, [r3]
   11844:	add	r0, r0, #1
   11848:	sxth	r0, r0
   1184c:	strh	r0, [r3]
   11850:	bl	116f8 <abort@plt+0xe2c>
   11854:	mov	r4, r0
   11858:	bl	10800 <unlink@plt>
   1185c:	mov	r0, r4
   11860:	pop	{r4, pc}
   11864:	strdeq	r3, [r2], -lr
   11868:	push	{r4, lr}
   1186c:	mov	r4, r0
   11870:	bl	10854 <strlen@plt>
   11874:	sub	r0, r0, #1
   11878:	sxth	r0, r0
   1187c:	cmp	r0, #0
   11880:	blt	11890 <abort@plt+0xfc4>
   11884:	ldrb	r3, [r4, r0]
   11888:	cmp	r3, #47	; 0x2f
   1188c:	bne	11874 <abort@plt+0xfa8>
   11890:	add	r0, r0, #1
   11894:	add	r0, r4, r0
   11898:	pop	{r4, pc}
   1189c:	push	{r4, lr}
   118a0:	mov	r0, #0
   118a4:	bl	11740 <abort@plt+0xe74>
   118a8:	ldr	r2, [pc, #52]	; 118e4 <abort@plt+0x1018>
   118ac:	push	{r4, lr}
   118b0:	ldr	r2, [r2]
   118b4:	cmp	r2, #0
   118b8:	beq	118c4 <abort@plt+0xff8>
   118bc:	blx	r2
   118c0:	bl	1189c <abort@plt+0xfd0>
   118c4:	mov	r3, r0
   118c8:	ldr	r2, [pc, #24]	; 118e8 <abort@plt+0x101c>
   118cc:	ldr	r0, [pc, #24]	; 118ec <abort@plt+0x1020>
   118d0:	ldr	r1, [pc, #24]	; 118f0 <abort@plt+0x1024>
   118d4:	ldr	r2, [r2]
   118d8:	ldr	r0, [r0]
   118dc:	bl	10860 <fprintf@plt>
   118e0:	b	118c0 <abort@plt+0xff4>
   118e4:	andeq	r7, r2, r0, lsl r4
   118e8:	andeq	r7, r2, r4, lsl r4
   118ec:	andeq	r3, r2, r8, lsl #1
   118f0:	andeq	r2, r1, pc, asr #7

000118f4 <error@@Base>:
   118f4:	mov	r3, r0
   118f8:	ldr	r2, [pc, #32]	; 11920 <error@@Base+0x2c>
   118fc:	ldr	r0, [pc, #32]	; 11924 <error@@Base+0x30>
   11900:	push	{r4, lr}
   11904:	ldr	r2, [r2]
   11908:	ldr	r1, [pc, #24]	; 11928 <error@@Base+0x34>
   1190c:	ldr	r0, [r0]
   11910:	bl	10860 <fprintf@plt>
   11914:	ldr	r3, [pc, #16]	; 1192c <error@@Base+0x38>
   11918:	ldr	r0, [r3]
   1191c:	bl	11740 <abort@plt+0xe74>
   11920:	andeq	r7, r2, r4, lsl r4
   11924:	andeq	r3, r2, r8, lsl #1
   11928:	ldrdeq	r2, [r1], -lr
   1192c:	andeq	r3, r2, r0, lsl #1
   11930:	push	{r4, lr}
   11934:	bl	107a0 <calloc@plt>
   11938:	cmp	r0, #0
   1193c:	popne	{r4, pc}
   11940:	ldr	r0, [pc]	; 11948 <error@@Base+0x54>
   11944:	bl	118f4 <error@@Base>
   11948:	andeq	r2, r1, r6, ror #7
   1194c:	ldr	r3, [pc, #32]	; 11974 <error@@Base+0x80>
   11950:	ldrb	r2, [r3, #2]
   11954:	cmp	r2, #0
   11958:	bne	11970 <error@@Base+0x7c>
   1195c:	push	{r4, lr}
   11960:	mov	r2, #1
   11964:	ldr	r0, [pc, #12]	; 11978 <error@@Base+0x84>
   11968:	strb	r2, [r3, #2]
   1196c:	bl	118f4 <error@@Base>
   11970:	bx	lr
   11974:	strdeq	r3, [r2], -lr
   11978:	andeq	r2, r1, r0, lsl #8
   1197c:	push	{r0, r1, r2, lr}
   11980:	mov	r3, r0
   11984:	ldr	r2, [pc, #32]	; 119ac <error@@Base+0xb8>
   11988:	ldr	r0, [pc, #32]	; 119b0 <error@@Base+0xbc>
   1198c:	str	r1, [sp]
   11990:	ldr	r1, [pc, #28]	; 119b4 <error@@Base+0xc0>
   11994:	ldr	r2, [r2]
   11998:	ldr	r0, [r0]
   1199c:	bl	10860 <fprintf@plt>
   119a0:	ldr	r3, [pc, #16]	; 119b8 <error@@Base+0xc4>
   119a4:	ldr	r0, [r3]
   119a8:	bl	11740 <abort@plt+0xe74>
   119ac:	andeq	r7, r2, r4, lsl r4
   119b0:	andeq	r3, r2, r8, lsl #1
   119b4:	andeq	r2, r1, pc, lsl #8
   119b8:	andeq	r3, r2, r0, lsl #1
   119bc:	push	{r4, r5, r6, lr}
   119c0:	subs	r4, r0, #0
   119c4:	mov	r5, r1
   119c8:	bne	119e4 <error@@Base+0xf0>
   119cc:	ldrb	r3, [r1]
   119d0:	cmp	r3, #114	; 0x72
   119d4:	ldreq	r3, [pc, #44]	; 11a08 <error@@Base+0x114>
   119d8:	ldrne	r3, [pc, #44]	; 11a0c <error@@Base+0x118>
   119dc:	ldr	r0, [r3]
   119e0:	pop	{r4, r5, r6, pc}
   119e4:	bl	107d0 <fopen@plt>
   119e8:	cmp	r0, #0
   119ec:	popne	{r4, r5, r6, pc}
   119f0:	ldrb	r3, [r5]
   119f4:	mov	r1, r4
   119f8:	cmp	r3, #119	; 0x77
   119fc:	ldreq	r0, [pc, #12]	; 11a10 <error@@Base+0x11c>
   11a00:	ldrne	r0, [pc, #12]	; 11a14 <error@@Base+0x120>
   11a04:	bl	1197c <error@@Base+0x88>
   11a08:	muleq	r2, r0, r0
   11a0c:	muleq	r2, r4, r0
   11a10:	andeq	r2, r1, ip, lsl r4
   11a14:	andeq	r2, r1, r2, lsr r4
   11a18:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a1c:	mov	r8, r0
   11a20:	ldr	r0, [r1]
   11a24:	str	r2, [sp]
   11a28:	mov	r7, r1
   11a2c:	mov	r9, r3
   11a30:	bl	11868 <abort@plt+0xf9c>
   11a34:	ldr	r3, [pc, #396]	; 11bc8 <error@@Base+0x2d4>
   11a38:	ldr	r1, [pc, #396]	; 11bcc <error@@Base+0x2d8>
   11a3c:	str	r0, [r3]
   11a40:	mov	r0, #2
   11a44:	bl	10824 <__sysv_signal@plt>
   11a48:	ldr	r1, [pc, #380]	; 11bcc <error@@Base+0x2d8>
   11a4c:	mov	r0, #15
   11a50:	bl	10824 <__sysv_signal@plt>
   11a54:	ldr	r3, [r8]
   11a58:	cmp	r3, #1
   11a5c:	movne	r6, #0
   11a60:	movne	r5, #1
   11a64:	bne	11b88 <error@@Base+0x294>
   11a68:	ldr	r3, [pc, #352]	; 11bd0 <error@@Base+0x2dc>
   11a6c:	ldrb	r6, [r3, #4]
   11a70:	cmp	r6, #0
   11a74:	beq	11b94 <error@@Base+0x2a0>
   11a78:	ldr	r0, [sp]
   11a7c:	bl	118a8 <abort@plt+0xfdc>
   11a80:	ldr	r4, [r7, r5, lsl #2]
   11a84:	lsl	sl, r5, #2
   11a88:	ldrb	r3, [r4]
   11a8c:	cmp	r3, #45	; 0x2d
   11a90:	bne	11bb8 <error@@Base+0x2c4>
   11a94:	ldrb	r3, [r4, #1]
   11a98:	cmp	r3, #0
   11a9c:	str	r3, [sp, #4]
   11aa0:	beq	11bb8 <error@@Base+0x2c4>
   11aa4:	mov	r0, r4
   11aa8:	bl	10854 <strlen@plt>
   11aac:	mov	r1, r4
   11ab0:	mov	r2, r0
   11ab4:	ldr	r0, [pc, #280]	; 11bd4 <error@@Base+0x2e0>
   11ab8:	bl	108c0 <strncmp@plt>
   11abc:	cmp	r0, #0
   11ac0:	beq	11a78 <error@@Base+0x184>
   11ac4:	add	r0, r5, #1
   11ac8:	cmp	r0, fp
   11acc:	addlt	sl, r7, sl
   11ad0:	movge	r1, #0
   11ad4:	ldrlt	r1, [sl, #4]
   11ad8:	cmp	r9, #0
   11adc:	ldr	r3, [sp, #4]
   11ae0:	beq	11ba0 <error@@Base+0x2ac>
   11ae4:	mov	r2, #0
   11ae8:	add	lr, r2, r2, lsl #1
   11aec:	add	ip, r9, lr, lsl #2
   11af0:	ldrb	lr, [r9, lr, lsl #2]
   11af4:	cmp	lr, #0
   11af8:	beq	11ba0 <error@@Base+0x2ac>
   11afc:	cmp	r3, lr
   11b00:	bne	11b40 <error@@Base+0x24c>
   11b04:	ldr	r3, [ip, #4]
   11b08:	cmp	r3, #0
   11b0c:	bne	11b4c <error@@Base+0x258>
   11b10:	ldr	r3, [ip, #8]
   11b14:	cmp	r3, #0
   11b18:	beq	11ba0 <error@@Base+0x2ac>
   11b1c:	ldrb	r2, [r4, #2]
   11b20:	cmp	r2, #0
   11b24:	bne	11ba0 <error@@Base+0x2ac>
   11b28:	ldrb	r2, [r3]
   11b2c:	cmp	r2, #0
   11b30:	bne	11bac <error@@Base+0x2b8>
   11b34:	mov	r2, #1
   11b38:	strb	r2, [r3]
   11b3c:	b	11b80 <error@@Base+0x28c>
   11b40:	add	r2, r2, #1
   11b44:	sxth	r2, r2
   11b48:	b	11ae8 <error@@Base+0x1f4>
   11b4c:	ldrb	r2, [r4, #2]
   11b50:	cmp	r2, #0
   11b54:	cmpeq	r1, #0
   11b58:	beq	11b10 <error@@Base+0x21c>
   11b5c:	ldr	ip, [r3]
   11b60:	cmp	ip, #0
   11b64:	bne	11bac <error@@Base+0x2b8>
   11b68:	cmp	r2, #0
   11b6c:	addne	r1, r4, #2
   11b70:	str	r1, [r3]
   11b74:	ldrb	r3, [r4, #2]
   11b78:	cmp	r3, #0
   11b7c:	sxtheq	r5, r0
   11b80:	add	r5, r5, #1
   11b84:	sxth	r5, r5
   11b88:	ldr	fp, [r8]
   11b8c:	cmp	r5, fp
   11b90:	blt	11a80 <error@@Base+0x18c>
   11b94:	str	r6, [r8]
   11b98:	add	sp, sp, #12
   11b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ba0:	ldr	r0, [pc, #48]	; 11bd8 <error@@Base+0x2e4>
   11ba4:	mov	r1, r4
   11ba8:	bl	1197c <error@@Base+0x88>
   11bac:	mov	r1, r4
   11bb0:	ldr	r0, [pc, #36]	; 11bdc <error@@Base+0x2e8>
   11bb4:	b	11ba8 <error@@Base+0x2b4>
   11bb8:	add	r3, r6, #1
   11bbc:	str	r4, [r7, r6, lsl #2]
   11bc0:	sxth	r6, r3
   11bc4:	b	11b80 <error@@Base+0x28c>
   11bc8:	andeq	r7, r2, r4, lsl r4
   11bcc:	andeq	r1, r1, ip, asr #18
   11bd0:	andeq	r3, r2, r0, lsl #1
   11bd4:	andeq	r2, r1, r6, asr #8
   11bd8:	andeq	r2, r1, ip, asr #8
   11bdc:	andeq	r2, r1, fp, asr r4
   11be0:	push	{r0, r1, r2, lr}
   11be4:	mov	r3, r0
   11be8:	ldr	r2, [pc, #28]	; 11c0c <error@@Base+0x318>
   11bec:	ldr	r0, [pc, #28]	; 11c10 <error@@Base+0x31c>
   11bf0:	str	r1, [sp]
   11bf4:	ldr	r1, [pc, #24]	; 11c14 <error@@Base+0x320>
   11bf8:	ldr	r2, [r2]
   11bfc:	ldr	r0, [r0]
   11c00:	bl	10860 <fprintf@plt>
   11c04:	add	sp, sp, #12
   11c08:	pop	{pc}		; (ldr pc, [sp], #4)
   11c0c:	andeq	r7, r2, r4, lsl r4
   11c10:	andeq	r3, r2, r8, lsl #1
   11c14:	andeq	r2, r1, pc, lsl #8
   11c18:	cmp	r1, #0
   11c1c:	push	{r4, lr}
   11c20:	mov	r4, r0
   11c24:	stm	r2, {r1, r3}
   11c28:	strne	r2, [r1, #4]
   11c2c:	streq	r2, [r0]
   11c30:	cmp	r3, #0
   11c34:	streq	r2, [r0, #4]
   11c38:	ldr	r0, [r0, #8]
   11c3c:	strne	r2, [r3]
   11c40:	cmp	r0, #0
   11c44:	beq	11c54 <error@@Base+0x360>
   11c48:	bl	107dc <free@plt>
   11c4c:	mov	r3, #0
   11c50:	str	r3, [r4, #8]
   11c54:	ldr	r3, [r4, #12]
   11c58:	add	r3, r3, #1
   11c5c:	str	r3, [r4, #12]
   11c60:	pop	{r4, pc}
   11c64:	mov	r3, #0
   11c68:	str	r3, [r0, #4]
   11c6c:	str	r3, [r0]
   11c70:	str	r3, [r0, #8]
   11c74:	str	r3, [r0, #12]
   11c78:	bx	lr
   11c7c:	mov	r2, r1
   11c80:	ldr	r3, [r0]
   11c84:	mov	r1, #0
   11c88:	b	11c18 <error@@Base+0x324>
   11c8c:	mov	r2, r1
   11c90:	mov	r3, #0
   11c94:	ldr	r1, [r0, #4]
   11c98:	b	11c18 <error@@Base+0x324>
   11c9c:	mov	r3, r2
   11ca0:	mov	r2, r1
   11ca4:	ldr	r1, [r3]
   11ca8:	b	11c18 <error@@Base+0x324>
   11cac:	ldr	r3, [r1, #4]
   11cb0:	b	11c18 <error@@Base+0x324>
   11cb4:	ldr	r3, [r1]
   11cb8:	ldr	r2, [r1, #4]
   11cbc:	cmp	r3, #0
   11cc0:	push	{r4, r5, r6, lr}
   11cc4:	mov	r4, r0
   11cc8:	strne	r2, [r3, #4]
   11ccc:	streq	r2, [r0]
   11cd0:	ldr	r2, [r1, #4]
   11cd4:	mov	r5, #0
   11cd8:	cmp	r2, #0
   11cdc:	streq	r3, [r0, #4]
   11ce0:	ldr	r0, [r0, #8]
   11ce4:	strne	r3, [r2]
   11ce8:	cmp	r0, r5
   11cec:	str	r5, [r1, #4]
   11cf0:	str	r5, [r1]
   11cf4:	beq	11d00 <error@@Base+0x40c>
   11cf8:	bl	107dc <free@plt>
   11cfc:	str	r5, [r4, #8]
   11d00:	ldr	r3, [r4, #12]
   11d04:	sub	r3, r3, #1
   11d08:	str	r3, [r4, #12]
   11d0c:	pop	{r4, r5, r6, pc}
   11d10:	ldr	r3, [r0, #8]
   11d14:	cmp	r3, #0
   11d18:	bxne	lr
   11d1c:	ldr	r3, [r0, #12]
   11d20:	cmp	r3, #0
   11d24:	bxeq	lr
   11d28:	push	{r4, lr}
   11d2c:	mov	r1, #4
   11d30:	mov	r4, r0
   11d34:	mov	r0, r3
   11d38:	bl	11930 <error@@Base+0x3c>
   11d3c:	ldr	r3, [r4]
   11d40:	str	r0, [r4, #8]
   11d44:	sub	r0, r0, #4
   11d48:	cmp	r3, #0
   11d4c:	bne	11d54 <error@@Base+0x460>
   11d50:	pop	{r4, pc}
   11d54:	str	r3, [r0, #4]!
   11d58:	ldr	r3, [r3, #4]
   11d5c:	b	11d48 <error@@Base+0x454>
   11d60:	push	{r4, r5, r6, lr}
   11d64:	mov	r5, r0
   11d68:	mov	r6, r1
   11d6c:	ldr	r4, [r5]
   11d70:	cmp	r4, #0
   11d74:	bne	11d7c <error@@Base+0x488>
   11d78:	pop	{r4, r5, r6, pc}
   11d7c:	mov	r0, r5
   11d80:	mov	r1, r4
   11d84:	bl	11cb4 <error@@Base+0x3c0>
   11d88:	mov	r0, r4
   11d8c:	blx	r6
   11d90:	b	11d6c <error@@Base+0x478>
   11d94:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d98:	mov	r7, r0
   11d9c:	ldr	sl, [pc, #248]	; 11e9c <error@@Base+0x5a8>
   11da0:	mov	r9, r1
   11da4:	mov	r6, sl
   11da8:	ldr	r3, [sl]
   11dac:	mov	r4, r9
   11db0:	mov	r5, r7
   11db4:	ldr	fp, [r3, r7, lsl #2]
   11db8:	cmp	r5, r4
   11dbc:	blt	11e08 <error@@Base+0x514>
   11dc0:	ldr	r3, [r6]
   11dc4:	sub	r1, r4, #1
   11dc8:	cmp	r7, r1
   11dcc:	str	fp, [r3, r4, lsl #2]
   11dd0:	bge	11ddc <error@@Base+0x4e8>
   11dd4:	mov	r0, r7
   11dd8:	bl	11d94 <error@@Base+0x4a0>
   11ddc:	add	r7, r5, #1
   11de0:	cmp	r7, r9
   11de4:	blt	11da8 <error@@Base+0x4b4>
   11de8:	add	sp, sp, #12
   11dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11df0:	sub	r4, r4, #1
   11df4:	cmp	r5, r4
   11df8:	sub	r8, r8, #4
   11dfc:	bne	11e0c <error@@Base+0x518>
   11e00:	mov	r2, r4
   11e04:	b	11e80 <error@@Base+0x58c>
   11e08:	lsl	r8, r4, #2
   11e0c:	ldm	r6, {r2, r3}
   11e10:	mov	r0, fp
   11e14:	ldr	r1, [r2, r8]
   11e18:	blx	r3
   11e1c:	cmp	r0, #0
   11e20:	blt	11df0 <error@@Base+0x4fc>
   11e24:	ldr	r2, [r6]
   11e28:	lsl	r1, r5, #2
   11e2c:	add	r8, r5, #1
   11e30:	ldr	r0, [r2, r4, lsl #2]
   11e34:	lsl	r3, r4, #2
   11e38:	str	r0, [r2, r5, lsl #2]
   11e3c:	add	r5, r1, #4
   11e40:	cmp	r8, r4
   11e44:	bge	11e94 <error@@Base+0x5a0>
   11e48:	ldm	r6, {r1, r2}
   11e4c:	mov	r0, fp
   11e50:	str	r3, [sp, #4]
   11e54:	ldr	r1, [r1, r5]
   11e58:	blx	r2
   11e5c:	add	r5, r5, #4
   11e60:	ldr	r3, [sp, #4]
   11e64:	cmp	r0, #0
   11e68:	bgt	11e8c <error@@Base+0x598>
   11e6c:	ldr	r1, [r6]
   11e70:	sub	r2, r4, #1
   11e74:	mov	r4, r8
   11e78:	ldr	r0, [r1, r8, lsl #2]
   11e7c:	str	r0, [r1, r3]
   11e80:	mov	r5, r4
   11e84:	mov	r4, r2
   11e88:	b	11db8 <error@@Base+0x4c4>
   11e8c:	add	r8, r8, #1
   11e90:	b	11e40 <error@@Base+0x54c>
   11e94:	bne	11e6c <error@@Base+0x578>
   11e98:	b	11e00 <error@@Base+0x50c>
   11e9c:	andeq	r3, r2, r4, lsl #2
   11ea0:	cmp	r0, #1
   11ea4:	bxle	lr
   11ea8:	ldr	r3, [pc, #12]	; 11ebc <error@@Base+0x5c8>
   11eac:	stm	r3, {r1, r2}
   11eb0:	sub	r1, r0, #1
   11eb4:	mov	r0, #0
   11eb8:	b	11d94 <error@@Base+0x4a0>
   11ebc:	andeq	r3, r2, r4, lsl #2
   11ec0:	cmp	r1, #0
   11ec4:	beq	120d0 <error@@Base+0x7dc>
   11ec8:	eor	ip, r0, r1
   11ecc:	rsbmi	r1, r1, #0
   11ed0:	subs	r2, r1, #1
   11ed4:	beq	1209c <error@@Base+0x7a8>
   11ed8:	movs	r3, r0
   11edc:	rsbmi	r3, r0, #0
   11ee0:	cmp	r3, r1
   11ee4:	bls	120a8 <error@@Base+0x7b4>
   11ee8:	tst	r1, r2
   11eec:	beq	120b8 <error@@Base+0x7c4>
   11ef0:	clz	r2, r3
   11ef4:	clz	r0, r1
   11ef8:	sub	r2, r0, r2
   11efc:	rsbs	r2, r2, #31
   11f00:	addne	r2, r2, r2, lsl #1
   11f04:	mov	r0, #0
   11f08:	addne	pc, pc, r2, lsl #2
   11f0c:	nop			; (mov r0, r0)
   11f10:	cmp	r3, r1, lsl #31
   11f14:	adc	r0, r0, r0
   11f18:	subcs	r3, r3, r1, lsl #31
   11f1c:	cmp	r3, r1, lsl #30
   11f20:	adc	r0, r0, r0
   11f24:	subcs	r3, r3, r1, lsl #30
   11f28:	cmp	r3, r1, lsl #29
   11f2c:	adc	r0, r0, r0
   11f30:	subcs	r3, r3, r1, lsl #29
   11f34:	cmp	r3, r1, lsl #28
   11f38:	adc	r0, r0, r0
   11f3c:	subcs	r3, r3, r1, lsl #28
   11f40:	cmp	r3, r1, lsl #27
   11f44:	adc	r0, r0, r0
   11f48:	subcs	r3, r3, r1, lsl #27
   11f4c:	cmp	r3, r1, lsl #26
   11f50:	adc	r0, r0, r0
   11f54:	subcs	r3, r3, r1, lsl #26
   11f58:	cmp	r3, r1, lsl #25
   11f5c:	adc	r0, r0, r0
   11f60:	subcs	r3, r3, r1, lsl #25
   11f64:	cmp	r3, r1, lsl #24
   11f68:	adc	r0, r0, r0
   11f6c:	subcs	r3, r3, r1, lsl #24
   11f70:	cmp	r3, r1, lsl #23
   11f74:	adc	r0, r0, r0
   11f78:	subcs	r3, r3, r1, lsl #23
   11f7c:	cmp	r3, r1, lsl #22
   11f80:	adc	r0, r0, r0
   11f84:	subcs	r3, r3, r1, lsl #22
   11f88:	cmp	r3, r1, lsl #21
   11f8c:	adc	r0, r0, r0
   11f90:	subcs	r3, r3, r1, lsl #21
   11f94:	cmp	r3, r1, lsl #20
   11f98:	adc	r0, r0, r0
   11f9c:	subcs	r3, r3, r1, lsl #20
   11fa0:	cmp	r3, r1, lsl #19
   11fa4:	adc	r0, r0, r0
   11fa8:	subcs	r3, r3, r1, lsl #19
   11fac:	cmp	r3, r1, lsl #18
   11fb0:	adc	r0, r0, r0
   11fb4:	subcs	r3, r3, r1, lsl #18
   11fb8:	cmp	r3, r1, lsl #17
   11fbc:	adc	r0, r0, r0
   11fc0:	subcs	r3, r3, r1, lsl #17
   11fc4:	cmp	r3, r1, lsl #16
   11fc8:	adc	r0, r0, r0
   11fcc:	subcs	r3, r3, r1, lsl #16
   11fd0:	cmp	r3, r1, lsl #15
   11fd4:	adc	r0, r0, r0
   11fd8:	subcs	r3, r3, r1, lsl #15
   11fdc:	cmp	r3, r1, lsl #14
   11fe0:	adc	r0, r0, r0
   11fe4:	subcs	r3, r3, r1, lsl #14
   11fe8:	cmp	r3, r1, lsl #13
   11fec:	adc	r0, r0, r0
   11ff0:	subcs	r3, r3, r1, lsl #13
   11ff4:	cmp	r3, r1, lsl #12
   11ff8:	adc	r0, r0, r0
   11ffc:	subcs	r3, r3, r1, lsl #12
   12000:	cmp	r3, r1, lsl #11
   12004:	adc	r0, r0, r0
   12008:	subcs	r3, r3, r1, lsl #11
   1200c:	cmp	r3, r1, lsl #10
   12010:	adc	r0, r0, r0
   12014:	subcs	r3, r3, r1, lsl #10
   12018:	cmp	r3, r1, lsl #9
   1201c:	adc	r0, r0, r0
   12020:	subcs	r3, r3, r1, lsl #9
   12024:	cmp	r3, r1, lsl #8
   12028:	adc	r0, r0, r0
   1202c:	subcs	r3, r3, r1, lsl #8
   12030:	cmp	r3, r1, lsl #7
   12034:	adc	r0, r0, r0
   12038:	subcs	r3, r3, r1, lsl #7
   1203c:	cmp	r3, r1, lsl #6
   12040:	adc	r0, r0, r0
   12044:	subcs	r3, r3, r1, lsl #6
   12048:	cmp	r3, r1, lsl #5
   1204c:	adc	r0, r0, r0
   12050:	subcs	r3, r3, r1, lsl #5
   12054:	cmp	r3, r1, lsl #4
   12058:	adc	r0, r0, r0
   1205c:	subcs	r3, r3, r1, lsl #4
   12060:	cmp	r3, r1, lsl #3
   12064:	adc	r0, r0, r0
   12068:	subcs	r3, r3, r1, lsl #3
   1206c:	cmp	r3, r1, lsl #2
   12070:	adc	r0, r0, r0
   12074:	subcs	r3, r3, r1, lsl #2
   12078:	cmp	r3, r1, lsl #1
   1207c:	adc	r0, r0, r0
   12080:	subcs	r3, r3, r1, lsl #1
   12084:	cmp	r3, r1
   12088:	adc	r0, r0, r0
   1208c:	subcs	r3, r3, r1
   12090:	cmp	ip, #0
   12094:	rsbmi	r0, r0, #0
   12098:	bx	lr
   1209c:	teq	ip, r0
   120a0:	rsbmi	r0, r0, #0
   120a4:	bx	lr
   120a8:	movcc	r0, #0
   120ac:	asreq	r0, ip, #31
   120b0:	orreq	r0, r0, #1
   120b4:	bx	lr
   120b8:	clz	r2, r1
   120bc:	rsb	r2, r2, #31
   120c0:	cmp	ip, #0
   120c4:	lsr	r0, r3, r2
   120c8:	rsbmi	r0, r0, #0
   120cc:	bx	lr
   120d0:	cmp	r0, #0
   120d4:	mvngt	r0, #-2147483648	; 0x80000000
   120d8:	movlt	r0, #-2147483648	; 0x80000000
   120dc:	b	12100 <error@@Base+0x80c>
   120e0:	cmp	r1, #0
   120e4:	beq	120d0 <error@@Base+0x7dc>
   120e8:	push	{r0, r1, lr}
   120ec:	bl	11ec8 <error@@Base+0x5d4>
   120f0:	pop	{r1, r2, lr}
   120f4:	mul	r3, r2, r0
   120f8:	sub	r1, r1, r3
   120fc:	bx	lr
   12100:	push	{r1, lr}
   12104:	mov	r0, #8
   12108:	bl	107ac <raise@plt>
   1210c:	pop	{r1, pc}
   12110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12114:	mov	r7, r0
   12118:	ldr	r6, [pc, #72]	; 12168 <error@@Base+0x874>
   1211c:	ldr	r5, [pc, #72]	; 1216c <error@@Base+0x878>
   12120:	add	r6, pc, r6
   12124:	add	r5, pc, r5
   12128:	sub	r6, r6, r5
   1212c:	mov	r8, r1
   12130:	mov	r9, r2
   12134:	bl	10780 <calloc@plt-0x20>
   12138:	asrs	r6, r6, #2
   1213c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12140:	mov	r4, #0
   12144:	add	r4, r4, #1
   12148:	ldr	r3, [r5], #4
   1214c:	mov	r2, r9
   12150:	mov	r1, r8
   12154:	mov	r0, r7
   12158:	blx	r3
   1215c:	cmp	r6, r4
   12160:	bne	12144 <error@@Base+0x850>
   12164:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12168:	ldrdeq	r0, [r1], -r8
   1216c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   12170:	bx	lr
   12174:	mov	r2, r1
   12178:	mov	r1, r0
   1217c:	mov	r0, #3
   12180:	b	1080c <__xstat@plt>

Disassembly of section .fini:

00012184 <.fini>:
   12184:	push	{r3, lr}
   12188:	pop	{r3, pc}
