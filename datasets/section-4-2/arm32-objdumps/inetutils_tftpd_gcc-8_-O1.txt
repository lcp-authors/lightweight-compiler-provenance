
../repos/inetutils/src/tftpd:     file format elf32-littlearm


Disassembly of section .init:

000111b4 <.init>:
   111b4:	push	{r3, lr}
   111b8:	bl	115b8 <__assert_fail@plt+0x48>
   111bc:	pop	{r3, pc}

Disassembly of section .plt:

000111c0 <fdopen@plt-0x14>:
   111c0:	push	{lr}		; (str lr, [sp, #-4]!)
   111c4:	ldr	lr, [pc, #4]	; 111d0 <fdopen@plt-0x4>
   111c8:	add	lr, pc, lr
   111cc:	ldr	pc, [lr, #8]!
   111d0:	andeq	r9, r1, r0, lsr lr

000111d4 <fdopen@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #102400	; 0x19000
   111dc:	ldr	pc, [ip, #3632]!	; 0xe30

000111e0 <calloc@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #102400	; 0x19000
   111e8:	ldr	pc, [ip, #3624]!	; 0xe28

000111ec <fputs_unlocked@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #102400	; 0x19000
   111f4:	ldr	pc, [ip, #3616]!	; 0xe20

000111f8 <strstr@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #102400	; 0x19000
   11200:	ldr	pc, [ip, #3608]!	; 0xe18

00011204 <getpwnam@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #102400	; 0x19000
   1120c:	ldr	pc, [ip, #3600]!	; 0xe10

00011210 <strcmp@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #102400	; 0x19000
   11218:	ldr	pc, [ip, #3592]!	; 0xe08

0001121c <strtol@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #102400	; 0x19000
   11224:	ldr	pc, [ip, #3584]!	; 0xe00

00011228 <printf@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #102400	; 0x19000
   11230:	ldr	pc, [ip, #3576]!	; 0xdf8

00011234 <read@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #102400	; 0x19000
   1123c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011240 <getuid@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #102400	; 0x19000
   11248:	ldr	pc, [ip, #3560]!	; 0xde8

0001124c <memmove@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #102400	; 0x19000
   11254:	ldr	pc, [ip, #3552]!	; 0xde0

00011258 <strchrnul@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #102400	; 0x19000
   11260:	ldr	pc, [ip, #3544]!	; 0xdd8

00011264 <free@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #102400	; 0x19000
   1126c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011270 <gai_strerror@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #102400	; 0x19000
   11278:	ldr	pc, [ip, #3528]!	; 0xdc8

0001127c <strndup@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #102400	; 0x19000
   11284:	ldr	pc, [ip, #3520]!	; 0xdc0

00011288 <memcpy@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #102400	; 0x19000
   11290:	ldr	pc, [ip, #3512]!	; 0xdb8

00011294 <signal@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #102400	; 0x19000
   1129c:	ldr	pc, [ip, #3504]!	; 0xdb0

000112a0 <fwrite_unlocked@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #102400	; 0x19000
   112a8:	ldr	pc, [ip, #3496]!	; 0xda8

000112ac <sleep@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #102400	; 0x19000
   112b4:	ldr	pc, [ip, #3488]!	; 0xda0

000112b8 <recvfrom@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #102400	; 0x19000
   112c0:	ldr	pc, [ip, #3480]!	; 0xd98

000112c4 <alarm@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #102400	; 0x19000
   112cc:	ldr	pc, [ip, #3472]!	; 0xd90

000112d0 <realloc@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #102400	; 0x19000
   112d8:	ldr	pc, [ip, #3464]!	; 0xd88

000112dc <chdir@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #102400	; 0x19000
   112e4:	ldr	pc, [ip, #3456]!	; 0xd80

000112e8 <strcasecmp@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #102400	; 0x19000
   112f0:	ldr	pc, [ip, #3448]!	; 0xd78

000112f4 <funlockfile@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #102400	; 0x19000
   112fc:	ldr	pc, [ip, #3440]!	; 0xd70

00011300 <fwrite@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #102400	; 0x19000
   11308:	ldr	pc, [ip, #3432]!	; 0xd68

0001130c <ioctl@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #102400	; 0x19000
   11314:	ldr	pc, [ip, #3424]!	; 0xd60

00011318 <chroot@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #102400	; 0x19000
   11320:	ldr	pc, [ip, #3416]!	; 0xd58

00011324 <error@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #102400	; 0x19000
   1132c:	ldr	pc, [ip, #3408]!	; 0xd50

00011330 <open64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #102400	; 0x19000
   11338:	ldr	pc, [ip, #3400]!	; 0xd48

0001133c <getenv@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #102400	; 0x19000
   11344:	ldr	pc, [ip, #3392]!	; 0xd40

00011348 <setgid@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #102400	; 0x19000
   11350:	ldr	pc, [ip, #3384]!	; 0xd38

00011354 <malloc@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #102400	; 0x19000
   1135c:	ldr	pc, [ip, #3376]!	; 0xd30

00011360 <__libc_start_main@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #102400	; 0x19000
   11368:	ldr	pc, [ip, #3368]!	; 0xd28

0001136c <strerror@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #102400	; 0x19000
   11374:	ldr	pc, [ip, #3360]!	; 0xd20

00011378 <__ctype_tolower_loc@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #102400	; 0x19000
   11380:	ldr	pc, [ip, #3352]!	; 0xd18

00011384 <__gmon_start__@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #102400	; 0x19000
   1138c:	ldr	pc, [ip, #3344]!	; 0xd10

00011390 <mempcpy@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #102400	; 0x19000
   11398:	ldr	pc, [ip, #3336]!	; 0xd08

0001139c <__ctype_b_loc@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #102400	; 0x19000
   113a4:	ldr	pc, [ip, #3328]!	; 0xd00

000113a8 <exit@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #102400	; 0x19000
   113b0:	ldr	pc, [ip, #3320]!	; 0xcf8

000113b4 <strlen@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #102400	; 0x19000
   113bc:	ldr	pc, [ip, #3312]!	; 0xcf0

000113c0 <strchr@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #102400	; 0x19000
   113c8:	ldr	pc, [ip, #3304]!	; 0xce8

000113cc <fprintf@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #102400	; 0x19000
   113d4:	ldr	pc, [ip, #3296]!	; 0xce0

000113d8 <__errno_location@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #102400	; 0x19000
   113e0:	ldr	pc, [ip, #3288]!	; 0xcd8

000113e4 <strerror_r@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #102400	; 0x19000
   113ec:	ldr	pc, [ip, #3280]!	; 0xcd0

000113f0 <bind@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #102400	; 0x19000
   113f8:	ldr	pc, [ip, #3272]!	; 0xcc8

000113fc <memset@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #102400	; 0x19000
   11404:	ldr	pc, [ip, #3264]!	; 0xcc0

00011408 <write@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #102400	; 0x19000
   11410:	ldr	pc, [ip, #3256]!	; 0xcb8

00011414 <fileno@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #102400	; 0x19000
   1141c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011420 <memchr@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #102400	; 0x19000
   11428:	ldr	pc, [ip, #3240]!	; 0xca8

0001142c <fclose@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #102400	; 0x19000
   11434:	ldr	pc, [ip, #3232]!	; 0xca0

00011438 <fseeko64@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #102400	; 0x19000
   11440:	ldr	pc, [ip, #3224]!	; 0xc98

00011444 <sendto@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #102400	; 0x19000
   1144c:	ldr	pc, [ip, #3216]!	; 0xc90

00011450 <__overflow@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #102400	; 0x19000
   11458:	ldr	pc, [ip, #3208]!	; 0xc88

0001145c <fork@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #102400	; 0x19000
   11464:	ldr	pc, [ip, #3200]!	; 0xc80

00011468 <getnameinfo@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #102400	; 0x19000
   11470:	ldr	pc, [ip, #3192]!	; 0xc78

00011474 <strrchr@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #102400	; 0x19000
   1147c:	ldr	pc, [ip, #3184]!	; 0xc70

00011480 <vfprintf@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #102400	; 0x19000
   11488:	ldr	pc, [ip, #3176]!	; 0xc68

0001148c <__sigsetjmp@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #102400	; 0x19000
   11494:	ldr	pc, [ip, #3168]!	; 0xc60

00011498 <fputc@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #102400	; 0x19000
   114a0:	ldr	pc, [ip, #3160]!	; 0xc58

000114a4 <syslog@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #102400	; 0x19000
   114ac:	ldr	pc, [ip, #3152]!	; 0xc50

000114b0 <setuid@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #102400	; 0x19000
   114b8:	ldr	pc, [ip, #3144]!	; 0xc48

000114bc <sprintf@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #102400	; 0x19000
   114c4:	ldr	pc, [ip, #3136]!	; 0xc40

000114c8 <openlog@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #102400	; 0x19000
   114d0:	ldr	pc, [ip, #3128]!	; 0xc38

000114d4 <putc@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #102400	; 0x19000
   114dc:	ldr	pc, [ip, #3120]!	; 0xc30

000114e0 <flockfile@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #102400	; 0x19000
   114e8:	ldr	pc, [ip, #3112]!	; 0xc28

000114ec <vsnprintf@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #102400	; 0x19000
   114f4:	ldr	pc, [ip, #3104]!	; 0xc20

000114f8 <qsort@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #102400	; 0x19000
   11500:	ldr	pc, [ip, #3096]!	; 0xc18

00011504 <socket@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #102400	; 0x19000
   1150c:	ldr	pc, [ip, #3088]!	; 0xc10

00011510 <__xstat64@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #102400	; 0x19000
   11518:	ldr	pc, [ip, #3080]!	; 0xc08

0001151c <strncmp@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #102400	; 0x19000
   11524:	ldr	pc, [ip, #3072]!	; 0xc00

00011528 <abort@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #102400	; 0x19000
   11530:	ldr	pc, [ip, #3064]!	; 0xbf8

00011534 <getc@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #102400	; 0x19000
   1153c:	ldr	pc, [ip, #3056]!	; 0xbf0

00011540 <recv@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #102400	; 0x19000
   11548:	ldr	pc, [ip, #3048]!	; 0xbe8

0001154c <siglongjmp@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #102400	; 0x19000
   11554:	ldr	pc, [ip, #3040]!	; 0xbe0

00011558 <close@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #102400	; 0x19000
   11560:	ldr	pc, [ip, #3032]!	; 0xbd8

00011564 <getgrnam@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #102400	; 0x19000
   1156c:	ldr	pc, [ip, #3024]!	; 0xbd0

00011570 <__assert_fail@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #102400	; 0x19000
   11578:	ldr	pc, [ip, #3016]!	; 0xbc8

Disassembly of section .text:

0001157c <argp_parse@@Base-0x1e9c>:
   1157c:	mov	fp, #0
   11580:	mov	lr, #0
   11584:	pop	{r1}		; (ldr r1, [sp], #4)
   11588:	mov	r2, sp
   1158c:	push	{r2}		; (str r2, [sp, #-4]!)
   11590:	push	{r0}		; (str r0, [sp, #-4]!)
   11594:	ldr	ip, [pc, #16]	; 115ac <__assert_fail@plt+0x3c>
   11598:	push	{ip}		; (str ip, [sp, #-4]!)
   1159c:	ldr	r0, [pc, #12]	; 115b0 <__assert_fail@plt+0x40>
   115a0:	ldr	r3, [pc, #12]	; 115b4 <__assert_fail@plt+0x44>
   115a4:	bl	11360 <__libc_start_main@plt>
   115a8:	bl	11528 <abort@plt>
   115ac:	andeq	r9, r1, r4, asr r6
   115b0:	andeq	r2, r1, ip, lsr r4
   115b4:	strdeq	r9, [r1], -r4
   115b8:	ldr	r3, [pc, #20]	; 115d4 <__assert_fail@plt+0x64>
   115bc:	ldr	r2, [pc, #20]	; 115d8 <__assert_fail@plt+0x68>
   115c0:	add	r3, pc, r3
   115c4:	ldr	r2, [r3, r2]
   115c8:	cmp	r2, #0
   115cc:	bxeq	lr
   115d0:	b	11384 <__gmon_start__@plt>
   115d4:	andeq	r9, r1, r8, lsr sl
   115d8:	andeq	r0, r0, r4, asr #2
   115dc:	ldr	r0, [pc, #24]	; 115fc <__assert_fail@plt+0x8c>
   115e0:	ldr	r3, [pc, #24]	; 11600 <__assert_fail@plt+0x90>
   115e4:	cmp	r3, r0
   115e8:	bxeq	lr
   115ec:	ldr	r3, [pc, #16]	; 11604 <__assert_fail@plt+0x94>
   115f0:	cmp	r3, #0
   115f4:	bxeq	lr
   115f8:	bx	r3
   115fc:	andeq	fp, r2, r0, ror #5
   11600:	andeq	fp, r2, r0, ror #5
   11604:	andeq	r0, r0, r0
   11608:	ldr	r0, [pc, #36]	; 11634 <__assert_fail@plt+0xc4>
   1160c:	ldr	r1, [pc, #36]	; 11638 <__assert_fail@plt+0xc8>
   11610:	sub	r1, r1, r0
   11614:	asr	r1, r1, #2
   11618:	add	r1, r1, r1, lsr #31
   1161c:	asrs	r1, r1, #1
   11620:	bxeq	lr
   11624:	ldr	r3, [pc, #16]	; 1163c <__assert_fail@plt+0xcc>
   11628:	cmp	r3, #0
   1162c:	bxeq	lr
   11630:	bx	r3
   11634:	andeq	fp, r2, r0, ror #5
   11638:	andeq	fp, r2, r0, ror #5
   1163c:	andeq	r0, r0, r0
   11640:	push	{r4, lr}
   11644:	ldr	r4, [pc, #24]	; 11664 <__assert_fail@plt+0xf4>
   11648:	ldrb	r3, [r4]
   1164c:	cmp	r3, #0
   11650:	popne	{r4, pc}
   11654:	bl	115dc <__assert_fail@plt+0x6c>
   11658:	mov	r3, #1
   1165c:	strb	r3, [r4]
   11660:	pop	{r4, pc}
   11664:	strdeq	fp, [r2], -r0
   11668:	b	11608 <__assert_fail@plt+0x98>
   1166c:	str	r4, [sp, #-8]!
   11670:	str	lr, [sp, #4]
   11674:	mov	r0, #0
   11678:	bl	113a8 <exit@plt>
   1167c:	strd	r4, [sp, #-16]!
   11680:	str	r6, [sp, #8]
   11684:	str	lr, [sp, #12]
   11688:	mov	r4, r1
   1168c:	sub	r0, r0, #103	; 0x67
   11690:	cmp	r0, #14
   11694:	ldrls	pc, [pc, r0, lsl #2]
   11698:	b	11778 <__assert_fail@plt+0x208>
   1169c:	strdeq	r1, [r1], -ip
   116a0:	andeq	r1, r1, r8, ror r7
   116a4:	andeq	r1, r1, r8, ror r7
   116a8:	andeq	r1, r1, r8, ror r7
   116ac:	andeq	r1, r1, r8, ror r7
   116b0:	ldrdeq	r1, [r1], -r8
   116b4:	andeq	r1, r1, r8, ror r7
   116b8:	andeq	r1, r1, r0, lsr #14
   116bc:	andeq	r1, r1, r8, ror r7
   116c0:	andeq	r1, r1, r8, ror r7
   116c4:	andeq	r1, r1, r8, ror r7
   116c8:	andeq	r1, r1, r8, ror r7
   116cc:	andeq	r1, r1, r8, lsr r7
   116d0:	andeq	r1, r1, r8, ror r7
   116d4:	andeq	r1, r1, r4, asr r7
   116d8:	movw	r3, #45812	; 0xb2f4
   116dc:	movt	r3, #2
   116e0:	mov	r2, #1
   116e4:	str	r2, [r3]
   116e8:	mov	r0, #0
   116ec:	ldrd	r4, [sp]
   116f0:	ldr	r6, [sp, #8]
   116f4:	add	sp, sp, #12
   116f8:	pop	{pc}		; (ldr pc, [sp], #4)
   116fc:	movw	r5, #45812	; 0xb2f4
   11700:	movt	r5, #2
   11704:	ldr	r0, [r5, #4]
   11708:	bl	140f0 <argp_parse@@Base+0xcd8>
   1170c:	mov	r0, r4
   11710:	bl	14bc4 <argp_parse@@Base+0x17ac>
   11714:	str	r0, [r5, #4]
   11718:	mov	r0, #0
   1171c:	b	116ec <__assert_fail@plt+0x17c>
   11720:	movw	r3, #45812	; 0xb2f4
   11724:	movt	r3, #2
   11728:	mov	r2, #1
   1172c:	str	r2, [r3, #8]
   11730:	mov	r0, #0
   11734:	b	116ec <__assert_fail@plt+0x17c>
   11738:	mov	r0, r1
   1173c:	bl	14bc4 <argp_parse@@Base+0x17ac>
   11740:	movw	r3, #45812	; 0xb2f4
   11744:	movt	r3, #2
   11748:	str	r0, [r3, #12]
   1174c:	mov	r0, #0
   11750:	b	116ec <__assert_fail@plt+0x17c>
   11754:	movw	r5, #45812	; 0xb2f4
   11758:	movt	r5, #2
   1175c:	ldr	r0, [r5, #16]
   11760:	bl	140f0 <argp_parse@@Base+0xcd8>
   11764:	mov	r0, r4
   11768:	bl	14bc4 <argp_parse@@Base+0x17ac>
   1176c:	str	r0, [r5, #16]
   11770:	mov	r0, #0
   11774:	b	116ec <__assert_fail@plt+0x17c>
   11778:	mov	r0, #7
   1177c:	b	116ec <__assert_fail@plt+0x17c>
   11780:	strd	r4, [sp, #-16]!
   11784:	str	r6, [sp, #8]
   11788:	str	lr, [sp, #12]
   1178c:	sub	sp, sp, #8
   11790:	movw	r3, #45812	; 0xb2f4
   11794:	movt	r3, #2
   11798:	mov	r2, #1280	; 0x500
   1179c:	strh	r2, [r3, #20]
   117a0:	rev16	r2, r0
   117a4:	strh	r2, [r3, #22]
   117a8:	movw	r3, #45392	; 0xb150
   117ac:	movt	r3, #2
   117b0:	ldr	r3, [r3]
   117b4:	cmp	r0, r3
   117b8:	movne	r2, #0
   117bc:	moveq	r2, #1
   117c0:	orrs	r2, r2, r3, lsr #31
   117c4:	bne	11864 <__assert_fail@plt+0x2f4>
   117c8:	movw	r4, #45392	; 0xb150
   117cc:	movt	r4, #2
   117d0:	ldr	r3, [r4, #8]!
   117d4:	cmp	r3, r0
   117d8:	movne	r2, #0
   117dc:	moveq	r2, #1
   117e0:	orrs	r2, r2, r3, lsr #31
   117e4:	beq	117d0 <__assert_fail@plt+0x260>
   117e8:	cmp	r3, #0
   117ec:	blt	11870 <__assert_fail@plt+0x300>
   117f0:	ldr	r6, [r4, #4]
   117f4:	mov	r0, r6
   117f8:	bl	113b4 <strlen@plt>
   117fc:	mov	r5, r0
   11800:	movw	r4, #45812	; 0xb2f4
   11804:	movt	r4, #2
   11808:	mov	r2, r0
   1180c:	mov	r1, r6
   11810:	add	r0, r4, #24
   11814:	bl	11288 <memcpy@plt>
   11818:	add	r2, r4, r5
   1181c:	mov	r3, #0
   11820:	strb	r3, [r2, #24]
   11824:	add	r5, r5, #5
   11828:	add	r2, r4, #540	; 0x21c
   1182c:	ldr	r1, [r4, #668]	; 0x29c
   11830:	str	r1, [sp, #4]
   11834:	str	r2, [sp]
   11838:	mov	r2, r5
   1183c:	add	r1, r4, #20
   11840:	ldr	r0, [r4, #536]	; 0x218
   11844:	bl	11444 <sendto@plt>
   11848:	cmp	r0, r5
   1184c:	bne	11890 <__assert_fail@plt+0x320>
   11850:	add	sp, sp, #8
   11854:	ldrd	r4, [sp]
   11858:	ldr	r6, [sp, #8]
   1185c:	add	sp, sp, #12
   11860:	pop	{pc}		; (ldr pc, [sp], #4)
   11864:	movw	r4, #45392	; 0xb150
   11868:	movt	r4, #2
   1186c:	b	117e8 <__assert_fail@plt+0x278>
   11870:	sub	r0, r0, #100	; 0x64
   11874:	bl	1136c <strerror@plt>
   11878:	str	r0, [r4, #4]
   1187c:	movw	r3, #45812	; 0xb2f4
   11880:	movt	r3, #2
   11884:	mov	r2, #0
   11888:	strh	r2, [r3, #22]
   1188c:	b	117f0 <__assert_fail@plt+0x280>
   11890:	movw	r1, #38500	; 0x9664
   11894:	movt	r1, #1
   11898:	mov	r0, #3
   1189c:	bl	114a4 <syslog@plt>
   118a0:	b	11850 <__assert_fail@plt+0x2e0>
   118a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   118a8:	strd	r6, [sp, #8]
   118ac:	strd	r8, [sp, #16]
   118b0:	strd	sl, [sp, #24]
   118b4:	str	lr, [sp, #32]
   118b8:	sub	sp, sp, #108	; 0x6c
   118bc:	mov	fp, r0
   118c0:	mov	r8, r1
   118c4:	ldr	r5, [r0]
   118c8:	movw	r1, #38516	; 0x9674
   118cc:	movt	r1, #1
   118d0:	mov	r0, r5
   118d4:	bl	111f8 <strstr@plt>
   118d8:	cmp	r0, #0
   118dc:	movne	r0, #2
   118e0:	bne	11b4c <__assert_fail@plt+0x5dc>
   118e4:	ldrb	r3, [r5]
   118e8:	cmp	r3, #47	; 0x2f
   118ec:	beq	11948 <__assert_fail@plt+0x3d8>
   118f0:	cmp	r8, #1
   118f4:	movne	r0, #2
   118f8:	bne	11b4c <__assert_fail@plt+0x5dc>
   118fc:	mov	r2, #3
   11900:	movw	r1, #38524	; 0x967c
   11904:	movt	r1, #1
   11908:	mov	r0, r5
   1190c:	bl	1151c <strncmp@plt>
   11910:	cmp	r0, #0
   11914:	moveq	r0, #2
   11918:	beq	11b4c <__assert_fail@plt+0x5dc>
   1191c:	movw	r3, #45812	; 0xb2f4
   11920:	movt	r3, #2
   11924:	ldr	r3, [r3, #672]	; 0x2a0
   11928:	cmp	r3, #0
   1192c:	beq	11b70 <__assert_fail@plt+0x600>
   11930:	ldr	r4, [pc, #576]	; 11b78 <__assert_fail@plt+0x608>
   11934:	movw	r7, #45812	; 0xb2f4
   11938:	movt	r7, #2
   1193c:	movw	r9, #38528	; 0x9680
   11940:	movt	r9, #1
   11944:	b	11a80 <__assert_fail@plt+0x510>
   11948:	movw	r3, #45812	; 0xb2f4
   1194c:	movt	r3, #2
   11950:	ldr	r1, [r3, #672]	; 0x2a0
   11954:	cmp	r1, #0
   11958:	beq	119c4 <__assert_fail@plt+0x454>
   1195c:	movw	r3, #45812	; 0xb2f4
   11960:	movt	r3, #2
   11964:	ldr	r4, [r3, #676]	; 0x2a4
   11968:	cmp	r4, #1
   1196c:	beq	119c4 <__assert_fail@plt+0x454>
   11970:	add	r6, r3, #672	; 0x2a0
   11974:	b	11990 <__assert_fail@plt+0x420>
   11978:	ldr	r1, [r6, #8]!
   1197c:	cmp	r1, #0
   11980:	beq	119b4 <__assert_fail@plt+0x444>
   11984:	ldr	r4, [r6, #4]
   11988:	cmp	r4, #1
   1198c:	beq	119c4 <__assert_fail@plt+0x454>
   11990:	mov	r2, r4
   11994:	mov	r0, r5
   11998:	bl	1151c <strncmp@plt>
   1199c:	cmp	r0, #0
   119a0:	bne	11978 <__assert_fail@plt+0x408>
   119a4:	ldrb	r3, [r5, r4]
   119a8:	cmp	r3, #47	; 0x2f
   119ac:	bne	11978 <__assert_fail@plt+0x408>
   119b0:	b	119c4 <__assert_fail@plt+0x454>
   119b4:	ldr	r3, [pc, #444]	; 11b78 <__assert_fail@plt+0x608>
   119b8:	cmp	r6, r3
   119bc:	movne	r0, #2
   119c0:	bne	11b4c <__assert_fail@plt+0x5dc>
   119c4:	mov	r2, sp
   119c8:	mov	r1, r5
   119cc:	mov	r0, #3
   119d0:	bl	11510 <__xstat64@plt>
   119d4:	cmp	r0, #0
   119d8:	blt	11a48 <__assert_fail@plt+0x4d8>
   119dc:	ldr	r3, [sp, #16]
   119e0:	and	r2, r3, #61440	; 0xf000
   119e4:	cmp	r2, #32768	; 0x8000
   119e8:	movne	r0, #1
   119ec:	bne	11b4c <__assert_fail@plt+0x5dc>
   119f0:	cmp	r8, #1
   119f4:	beq	11a60 <__assert_fail@plt+0x4f0>
   119f8:	tst	r3, #2
   119fc:	beq	11b40 <__assert_fail@plt+0x5d0>
   11a00:	movw	r1, #513	; 0x201
   11a04:	mov	r0, r5
   11a08:	bl	11330 <open64@plt>
   11a0c:	cmp	r0, #0
   11a10:	blt	11b30 <__assert_fail@plt+0x5c0>
   11a14:	movw	r1, #38512	; 0x9670
   11a18:	movt	r1, #1
   11a1c:	bl	111d4 <fdopen@plt>
   11a20:	movw	r3, #48684	; 0xbe2c
   11a24:	movt	r3, #2
   11a28:	str	r0, [r3]
   11a2c:	cmp	r0, #0
   11a30:	movne	r0, #0
   11a34:	bne	11b4c <__assert_fail@plt+0x5dc>
   11a38:	bl	113d8 <__errno_location@plt>
   11a3c:	ldr	r8, [r0]
   11a40:	add	r0, r8, #100	; 0x64
   11a44:	b	11b4c <__assert_fail@plt+0x5dc>
   11a48:	bl	113d8 <__errno_location@plt>
   11a4c:	ldr	r3, [r0]
   11a50:	cmp	r3, #2
   11a54:	moveq	r0, #1
   11a58:	movne	r0, #2
   11a5c:	b	11b4c <__assert_fail@plt+0x5dc>
   11a60:	tst	r3, #4
   11a64:	movne	r6, r5
   11a68:	bne	11b10 <__assert_fail@plt+0x5a0>
   11a6c:	mov	r0, #2
   11a70:	b	11b4c <__assert_fail@plt+0x5dc>
   11a74:	ldr	r3, [r4, #8]!
   11a78:	cmp	r3, #0
   11a7c:	beq	11b70 <__assert_fail@plt+0x600>
   11a80:	ldr	r0, [r7, #840]	; 0x348
   11a84:	bl	140f0 <argp_parse@@Base+0xcd8>
   11a88:	ldr	r0, [r4]
   11a8c:	bl	113b4 <strlen@plt>
   11a90:	mov	r6, r0
   11a94:	mov	r0, r5
   11a98:	bl	113b4 <strlen@plt>
   11a9c:	add	r0, r6, r0
   11aa0:	add	r0, r0, #2
   11aa4:	bl	14c90 <argp_parse@@Base+0x1878>
   11aa8:	str	r0, [r7, #840]	; 0x348
   11aac:	cmp	r0, #0
   11ab0:	beq	11b48 <__assert_fail@plt+0x5d8>
   11ab4:	mov	r3, r5
   11ab8:	ldr	r2, [r4]
   11abc:	mov	r1, r9
   11ac0:	bl	114bc <sprintf@plt>
   11ac4:	ldr	r6, [r7, #840]	; 0x348
   11ac8:	mov	r2, sp
   11acc:	mov	r1, r6
   11ad0:	mov	r0, #3
   11ad4:	bl	11510 <__xstat64@plt>
   11ad8:	cmp	r0, #0
   11adc:	bne	11a74 <__assert_fail@plt+0x504>
   11ae0:	ldr	r3, [sp, #16]
   11ae4:	and	r2, r3, #61440	; 0xf000
   11ae8:	cmp	r2, #32768	; 0x8000
   11aec:	bne	11a74 <__assert_fail@plt+0x504>
   11af0:	tst	r3, #4
   11af4:	bne	11b00 <__assert_fail@plt+0x590>
   11af8:	mov	r8, #2
   11afc:	b	11a74 <__assert_fail@plt+0x504>
   11b00:	ldr	r3, [r4]
   11b04:	cmp	r3, #0
   11b08:	beq	11b68 <__assert_fail@plt+0x5f8>
   11b0c:	str	r6, [fp]
   11b10:	mov	r1, #0
   11b14:	mov	r0, r6
   11b18:	bl	11330 <open64@plt>
   11b1c:	cmp	r0, #0
   11b20:	blt	11b30 <__assert_fail@plt+0x5c0>
   11b24:	movw	r1, #41608	; 0xa288
   11b28:	movt	r1, #1
   11b2c:	b	11a1c <__assert_fail@plt+0x4ac>
   11b30:	bl	113d8 <__errno_location@plt>
   11b34:	ldr	r8, [r0]
   11b38:	add	r0, r8, #100	; 0x64
   11b3c:	b	11b4c <__assert_fail@plt+0x5dc>
   11b40:	mov	r0, #2
   11b44:	b	11b4c <__assert_fail@plt+0x5dc>
   11b48:	mov	r0, #12
   11b4c:	add	sp, sp, #108	; 0x6c
   11b50:	ldrd	r4, [sp]
   11b54:	ldrd	r6, [sp, #8]
   11b58:	ldrd	r8, [sp, #16]
   11b5c:	ldrd	sl, [sp, #24]
   11b60:	add	sp, sp, #32
   11b64:	pop	{pc}		; (ldr pc, [sp], #4)
   11b68:	mov	r0, r8
   11b6c:	b	11b4c <__assert_fail@plt+0x5dc>
   11b70:	mov	r0, r8
   11b74:	b	11b4c <__assert_fail@plt+0x5dc>
   11b78:	muleq	r2, r4, r5
   11b7c:	str	r4, [sp, #-8]!
   11b80:	str	lr, [sp, #4]
   11b84:	movw	r2, #48680	; 0xbe28
   11b88:	movt	r2, #2
   11b8c:	ldr	r3, [r2]
   11b90:	add	r3, r3, #5
   11b94:	str	r3, [r2]
   11b98:	cmp	r3, #24
   11b9c:	ble	11ba8 <__assert_fail@plt+0x638>
   11ba0:	mov	r0, #1
   11ba4:	bl	113a8 <exit@plt>
   11ba8:	mov	r1, #1
   11bac:	movw	r0, #48288	; 0xbca0
   11bb0:	movt	r0, #2
   11bb4:	bl	1154c <siglongjmp@plt>
   11bb8:	strd	r4, [sp, #-16]!
   11bbc:	str	r6, [sp, #8]
   11bc0:	str	lr, [sp, #12]
   11bc4:	sub	sp, sp, #40	; 0x28
   11bc8:	str	r0, [sp, #16]
   11bcc:	movw	r1, #7036	; 0x1b7c
   11bd0:	movt	r1, #1
   11bd4:	mov	r0, #14
   11bd8:	bl	11294 <signal@plt>
   11bdc:	bl	12968 <__assert_fail@plt+0x13f8>
   11be0:	str	r0, [sp, #36]	; 0x24
   11be4:	mov	r3, #1
   11be8:	str	r3, [sp, #32]
   11bec:	movw	r3, #48684	; 0xbe2c
   11bf0:	movt	r3, #2
   11bf4:	str	r3, [sp, #20]
   11bf8:	movw	r3, #45812	; 0xb2f4
   11bfc:	movt	r3, #2
   11c00:	str	r3, [sp, #12]
   11c04:	add	r3, r3, #540	; 0x21c
   11c08:	str	r3, [sp, #28]
   11c0c:	ldr	r3, [sp, #16]
   11c10:	ldr	r2, [r3, #16]
   11c14:	add	r1, sp, #36	; 0x24
   11c18:	ldr	r3, [sp, #20]
   11c1c:	ldr	r0, [r3]
   11c20:	bl	12af4 <__assert_fail@plt+0x1584>
   11c24:	subs	r3, r0, #0
   11c28:	str	r3, [sp, #24]
   11c2c:	blt	11d6c <__assert_fail@plt+0x7fc>
   11c30:	ldr	r3, [sp, #36]	; 0x24
   11c34:	mov	r2, #0
   11c38:	strb	r2, [r3]
   11c3c:	mov	r1, #3
   11c40:	strb	r1, [r3, #1]
   11c44:	ldr	r3, [sp, #32]
   11c48:	rev16	r3, r3
   11c4c:	ldr	r1, [sp, #36]	; 0x24
   11c50:	strh	r3, [r1, #2]
   11c54:	movw	r3, #48680	; 0xbe28
   11c58:	movt	r3, #2
   11c5c:	str	r2, [r3]
   11c60:	mov	r1, #14
   11c64:	movw	r0, #48288	; 0xbca0
   11c68:	movt	r0, #2
   11c6c:	bl	1148c <__sigsetjmp@plt>
   11c70:	ldr	r3, [sp, #24]
   11c74:	add	r4, r3, #4
   11c78:	ldr	r0, [sp, #12]
   11c7c:	ldr	r3, [r0, #668]	; 0x29c
   11c80:	str	r3, [sp, #4]
   11c84:	ldr	r3, [sp, #28]
   11c88:	str	r3, [sp]
   11c8c:	mov	r3, #0
   11c90:	mov	r2, r4
   11c94:	ldr	r1, [sp, #36]	; 0x24
   11c98:	ldr	r0, [r0, #536]	; 0x218
   11c9c:	bl	11444 <sendto@plt>
   11ca0:	cmp	r4, r0
   11ca4:	bne	11d80 <__assert_fail@plt+0x810>
   11ca8:	ldr	r3, [sp, #16]
   11cac:	ldr	r1, [r3, #16]
   11cb0:	ldr	r3, [sp, #20]
   11cb4:	ldr	r0, [r3]
   11cb8:	bl	129b4 <__assert_fail@plt+0x1444>
   11cbc:	ldr	r3, [sp, #12]
   11cc0:	add	r6, r3, #844	; 0x34c
   11cc4:	mov	r4, #0
   11cc8:	mov	r0, #5
   11ccc:	bl	112c4 <alarm@plt>
   11cd0:	mov	r3, r4
   11cd4:	mov	r2, #516	; 0x204
   11cd8:	mov	r1, r6
   11cdc:	ldr	r0, [sp, #12]
   11ce0:	ldr	r0, [r0, #536]	; 0x218
   11ce4:	bl	11540 <recv@plt>
   11ce8:	mov	r5, r0
   11cec:	mov	r0, r4
   11cf0:	bl	112c4 <alarm@plt>
   11cf4:	cmp	r5, #0
   11cf8:	blt	11d94 <__assert_fail@plt+0x824>
   11cfc:	ldr	r0, [pc, #224]	; 11de4 <__assert_fail@plt+0x874>
   11d00:	ldrsh	r3, [r0]
   11d04:	rev16	r3, r3
   11d08:	sxth	r2, r3
   11d0c:	strh	r3, [r0]
   11d10:	ldrh	r3, [r0, #2]
   11d14:	rev16	r3, r3
   11d18:	uxth	r1, r3
   11d1c:	strh	r3, [r0, #2]
   11d20:	cmp	r2, #5
   11d24:	beq	11da4 <__assert_fail@plt+0x834>
   11d28:	cmp	r2, #4
   11d2c:	bne	11cc8 <__assert_fail@plt+0x758>
   11d30:	ldr	r3, [sp, #32]
   11d34:	uxth	r3, r3
   11d38:	cmp	r3, r1
   11d3c:	beq	11dc8 <__assert_fail@plt+0x858>
   11d40:	ldr	r3, [sp, #12]
   11d44:	ldr	r0, [r3, #536]	; 0x218
   11d48:	bl	12d50 <__assert_fail@plt+0x17e0>
   11d4c:	ldr	r3, [sp, #32]
   11d50:	sub	r3, r3, #1
   11d54:	ldr	r2, [pc, #136]	; 11de4 <__assert_fail@plt+0x874>
   11d58:	ldrh	r2, [r2, #2]
   11d5c:	uxth	r3, r3
   11d60:	cmp	r2, r3
   11d64:	bne	11cc8 <__assert_fail@plt+0x758>
   11d68:	b	11c70 <__assert_fail@plt+0x700>
   11d6c:	bl	113d8 <__errno_location@plt>
   11d70:	ldr	r0, [r0]
   11d74:	add	r0, r0, #100	; 0x64
   11d78:	bl	11780 <__assert_fail@plt+0x210>
   11d7c:	b	11da4 <__assert_fail@plt+0x834>
   11d80:	movw	r1, #38536	; 0x9688
   11d84:	movt	r1, #1
   11d88:	mov	r0, #3
   11d8c:	bl	114a4 <syslog@plt>
   11d90:	b	11da4 <__assert_fail@plt+0x834>
   11d94:	movw	r1, #38556	; 0x969c
   11d98:	movt	r1, #1
   11d9c:	mov	r0, #3
   11da0:	bl	114a4 <syslog@plt>
   11da4:	movw	r3, #48684	; 0xbe2c
   11da8:	movt	r3, #2
   11dac:	ldr	r0, [r3]
   11db0:	bl	1142c <fclose@plt>
   11db4:	add	sp, sp, #40	; 0x28
   11db8:	ldrd	r4, [sp]
   11dbc:	ldr	r6, [sp, #8]
   11dc0:	add	sp, sp, #12
   11dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc8:	ldr	r3, [sp, #32]
   11dcc:	add	r3, r3, #1
   11dd0:	str	r3, [sp, #32]
   11dd4:	ldr	r3, [sp, #24]
   11dd8:	cmp	r3, #512	; 0x200
   11ddc:	bne	11da4 <__assert_fail@plt+0x834>
   11de0:	b	11c0c <__assert_fail@plt+0x69c>
   11de4:	andeq	fp, r2, r0, asr #12
   11de8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11dec:	strd	r6, [sp, #8]
   11df0:	str	r8, [sp, #16]
   11df4:	str	lr, [sp, #20]
   11df8:	sub	sp, sp, #40	; 0x28
   11dfc:	str	r0, [sp, #12]
   11e00:	movw	r1, #7036	; 0x1b7c
   11e04:	movt	r1, #1
   11e08:	mov	r0, #14
   11e0c:	bl	11294 <signal@plt>
   11e10:	bl	12920 <__assert_fail@plt+0x13b0>
   11e14:	str	r0, [sp, #36]	; 0x24
   11e18:	mov	r3, #0
   11e1c:	str	r3, [sp, #32]
   11e20:	movw	r3, #45812	; 0xb2f4
   11e24:	movt	r3, #2
   11e28:	str	r3, [sp, #28]
   11e2c:	movw	r3, #48680	; 0xbe28
   11e30:	movt	r3, #2
   11e34:	str	r3, [sp, #16]
   11e38:	mov	r3, #0
   11e3c:	str	r3, [sp, #8]
   11e40:	movw	r3, #48288	; 0xbca0
   11e44:	movt	r3, #2
   11e48:	str	r3, [sp, #20]
   11e4c:	movw	r3, #45812	; 0xb2f4
   11e50:	movt	r3, #2
   11e54:	str	r3, [sp, #24]
   11e58:	ldr	r2, [sp, #16]
   11e5c:	ldr	r3, [sp, #8]
   11e60:	str	r3, [r2]
   11e64:	ldr	r2, [pc, #692]	; 12120 <__assert_fail@plt+0xbb0>
   11e68:	mov	r1, #0
   11e6c:	strb	r1, [r2]
   11e70:	mov	r1, #4
   11e74:	strb	r1, [r2, #1]
   11e78:	ldr	r3, [sp, #32]
   11e7c:	rev16	r3, r3
   11e80:	strh	r3, [r2, #2]
   11e84:	ldr	r3, [sp, #32]
   11e88:	add	r3, r3, #1
   11e8c:	str	r3, [sp, #32]
   11e90:	mov	r1, #14
   11e94:	ldr	r0, [sp, #20]
   11e98:	bl	1148c <__sigsetjmp@plt>
   11e9c:	movw	r6, #48684	; 0xbe2c
   11ea0:	movt	r6, #2
   11ea4:	ldr	r7, [sp, #24]
   11ea8:	ldr	r5, [sp, #8]
   11eac:	ldr	r3, [r7, #668]	; 0x29c
   11eb0:	str	r3, [sp, #4]
   11eb4:	ldr	r3, [pc, #616]	; 12124 <__assert_fail@plt+0xbb4>
   11eb8:	str	r3, [sp]
   11ebc:	mov	r3, #0
   11ec0:	mov	r2, #4
   11ec4:	add	r1, r7, #844	; 0x34c
   11ec8:	ldr	r0, [r7, #536]	; 0x218
   11ecc:	bl	11444 <sendto@plt>
   11ed0:	cmp	r0, #4
   11ed4:	bne	11f88 <__assert_fail@plt+0xa18>
   11ed8:	ldr	r3, [sp, #12]
   11edc:	ldr	r1, [r3, #16]
   11ee0:	ldr	r0, [r6]
   11ee4:	bl	12b8c <__assert_fail@plt+0x161c>
   11ee8:	mov	r8, #5
   11eec:	mov	r0, r8
   11ef0:	bl	112c4 <alarm@plt>
   11ef4:	mov	r3, r5
   11ef8:	mov	r2, #516	; 0x204
   11efc:	ldr	r1, [sp, #36]	; 0x24
   11f00:	ldr	r0, [r7, #536]	; 0x218
   11f04:	bl	11540 <recv@plt>
   11f08:	mov	r4, r0
   11f0c:	mov	r0, r5
   11f10:	bl	112c4 <alarm@plt>
   11f14:	cmp	r4, #0
   11f18:	blt	11f9c <__assert_fail@plt+0xa2c>
   11f1c:	ldr	r2, [sp, #36]	; 0x24
   11f20:	ldrsh	r3, [r2]
   11f24:	rev16	r3, r3
   11f28:	strh	r3, [r2]
   11f2c:	ldr	r2, [sp, #36]	; 0x24
   11f30:	ldrh	r3, [r2, #2]
   11f34:	rev16	r3, r3
   11f38:	strh	r3, [r2, #2]
   11f3c:	ldr	r2, [sp, #36]	; 0x24
   11f40:	ldrsh	r3, [r2]
   11f44:	cmp	r3, #5
   11f48:	beq	11fac <__assert_fail@plt+0xa3c>
   11f4c:	cmp	r3, #3
   11f50:	bne	11eec <__assert_fail@plt+0x97c>
   11f54:	ldr	r3, [sp, #32]
   11f58:	ldrh	r2, [r2, #2]
   11f5c:	cmp	r2, r3
   11f60:	beq	11fc4 <__assert_fail@plt+0xa54>
   11f64:	ldr	r0, [r7, #536]	; 0x218
   11f68:	bl	12d50 <__assert_fail@plt+0x17e0>
   11f6c:	ldr	r3, [sp, #32]
   11f70:	ldr	r2, [sp, #36]	; 0x24
   11f74:	ldrh	r2, [r2, #2]
   11f78:	sub	r3, r3, #1
   11f7c:	cmp	r2, r3
   11f80:	bne	11eec <__assert_fail@plt+0x97c>
   11f84:	b	11eac <__assert_fail@plt+0x93c>
   11f88:	movw	r1, #38536	; 0x9688
   11f8c:	movt	r1, #1
   11f90:	mov	r0, #3
   11f94:	bl	114a4 <syslog@plt>
   11f98:	b	11fac <__assert_fail@plt+0xa3c>
   11f9c:	movw	r1, #38556	; 0x969c
   11fa0:	movt	r1, #1
   11fa4:	mov	r0, #3
   11fa8:	bl	114a4 <syslog@plt>
   11fac:	add	sp, sp, #40	; 0x28
   11fb0:	ldrd	r4, [sp]
   11fb4:	ldrd	r6, [sp, #8]
   11fb8:	ldr	r8, [sp, #16]
   11fbc:	add	sp, sp, #20
   11fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11fc4:	sub	r4, r4, #4
   11fc8:	movw	r0, #48684	; 0xbe2c
   11fcc:	movt	r0, #2
   11fd0:	ldr	r3, [sp, #12]
   11fd4:	ldr	r3, [r3, #16]
   11fd8:	mov	r2, r4
   11fdc:	add	r1, sp, #36	; 0x24
   11fe0:	ldr	r0, [r0]
   11fe4:	bl	12cb0 <__assert_fail@plt+0x1740>
   11fe8:	cmp	r4, r0
   11fec:	beq	12018 <__assert_fail@plt+0xaa8>
   11ff0:	cmp	r0, #0
   11ff4:	blt	12004 <__assert_fail@plt+0xa94>
   11ff8:	mov	r0, #3
   11ffc:	bl	11780 <__assert_fail@plt+0x210>
   12000:	b	11fac <__assert_fail@plt+0xa3c>
   12004:	bl	113d8 <__errno_location@plt>
   12008:	ldr	r0, [r0]
   1200c:	add	r0, r0, #100	; 0x64
   12010:	bl	11780 <__assert_fail@plt+0x210>
   12014:	b	11fac <__assert_fail@plt+0xa3c>
   12018:	cmp	r0, #512	; 0x200
   1201c:	beq	11e58 <__assert_fail@plt+0x8e8>
   12020:	movw	r4, #48684	; 0xbe2c
   12024:	movt	r4, #2
   12028:	ldr	r3, [sp, #12]
   1202c:	ldr	r1, [r3, #16]
   12030:	ldr	r0, [r4]
   12034:	bl	12b8c <__assert_fail@plt+0x161c>
   12038:	ldr	r0, [r4]
   1203c:	bl	1142c <fclose@plt>
   12040:	mov	r5, #0
   12044:	ldr	r2, [sp, #28]
   12048:	strb	r5, [r2, #844]	; 0x34c
   1204c:	mov	r3, #4
   12050:	strb	r3, [r2, #845]	; 0x34d
   12054:	ldr	r3, [sp, #32]
   12058:	rev16	r3, r3
   1205c:	ldr	r2, [pc, #188]	; 12120 <__assert_fail@plt+0xbb0>
   12060:	strh	r3, [r2, #2]
   12064:	movw	r4, #45812	; 0xb2f4
   12068:	movt	r4, #2
   1206c:	add	r3, r4, #540	; 0x21c
   12070:	ldr	r2, [r4, #668]	; 0x29c
   12074:	str	r2, [sp, #4]
   12078:	str	r3, [sp]
   1207c:	mov	r3, r5
   12080:	mov	r2, #4
   12084:	add	r1, r4, #844	; 0x34c
   12088:	ldr	r0, [r4, #536]	; 0x218
   1208c:	bl	11444 <sendto@plt>
   12090:	movw	r1, #5740	; 0x166c
   12094:	movt	r1, #1
   12098:	mov	r0, #14
   1209c:	bl	11294 <signal@plt>
   120a0:	mov	r0, #5
   120a4:	bl	112c4 <alarm@plt>
   120a8:	mov	r3, r5
   120ac:	mov	r2, #516	; 0x204
   120b0:	add	r1, r4, #20
   120b4:	ldr	r0, [r4, #536]	; 0x218
   120b8:	bl	11540 <recv@plt>
   120bc:	mov	r4, r0
   120c0:	mov	r0, r5
   120c4:	bl	112c4 <alarm@plt>
   120c8:	cmp	r4, #3
   120cc:	ble	11fac <__assert_fail@plt+0xa3c>
   120d0:	ldr	r3, [sp, #36]	; 0x24
   120d4:	ldrsh	r2, [r3]
   120d8:	cmp	r2, #3
   120dc:	bne	11fac <__assert_fail@plt+0xa3c>
   120e0:	ldr	r2, [sp, #32]
   120e4:	ldrh	r3, [r3, #2]
   120e8:	cmp	r3, r2
   120ec:	bne	11fac <__assert_fail@plt+0xa3c>
   120f0:	movw	r0, #45812	; 0xb2f4
   120f4:	movt	r0, #2
   120f8:	add	r3, r0, #540	; 0x21c
   120fc:	ldr	r2, [r0, #668]	; 0x29c
   12100:	str	r2, [sp, #4]
   12104:	str	r3, [sp]
   12108:	mov	r3, r5
   1210c:	mov	r2, #4
   12110:	add	r1, r0, #844	; 0x34c
   12114:	ldr	r0, [r0, #536]	; 0x218
   12118:	bl	11444 <sendto@plt>
   1211c:	b	11fac <__assert_fail@plt+0xa3c>
   12120:	andeq	fp, r2, r0, asr #12
   12124:	andeq	fp, r2, r0, lsl r5
   12128:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1212c:	strd	r6, [sp, #8]
   12130:	strd	r8, [sp, #16]
   12134:	strd	sl, [sp, #24]
   12138:	str	lr, [sp, #32]
   1213c:	sub	sp, sp, #28
   12140:	mov	r6, r0
   12144:	add	r3, r0, #2
   12148:	str	r3, [sp, #20]
   1214c:	mov	r2, #1
   12150:	ldr	r0, [pc, #724]	; 1242c <__assert_fail@plt+0xebc>
   12154:	add	r1, r0, r1
   12158:	mov	ip, #0
   1215c:	b	12180 <__assert_fail@plt+0xc10>
   12160:	ldrb	r0, [r3]
   12164:	cmp	r0, #0
   12168:	bne	1217c <__assert_fail@plt+0xc0c>
   1216c:	cmp	r2, #0
   12170:	beq	121a4 <__assert_fail@plt+0xc34>
   12174:	add	r5, r3, #1
   12178:	mov	r2, ip
   1217c:	add	r3, r3, #1
   12180:	cmp	r3, r1
   12184:	bcc	12160 <__assert_fail@plt+0xbf0>
   12188:	ldrb	r0, [r3]
   1218c:	cmp	r0, #0
   12190:	beq	1216c <__assert_fail@plt+0xbfc>
   12194:	mov	r0, #4
   12198:	bl	11780 <__assert_fail@plt+0x210>
   1219c:	mov	r0, #1
   121a0:	bl	113a8 <exit@plt>
   121a4:	ldrb	r4, [r5]
   121a8:	cmp	r4, #0
   121ac:	beq	121f4 <__assert_fail@plt+0xc84>
   121b0:	bl	1139c <__ctype_b_loc@plt>
   121b4:	mov	r8, r0
   121b8:	mov	r7, r5
   121bc:	b	121cc <__assert_fail@plt+0xc5c>
   121c0:	ldrb	r4, [r7, #1]!
   121c4:	cmp	r4, #0
   121c8:	beq	121f4 <__assert_fail@plt+0xc84>
   121cc:	ldr	r2, [r8]
   121d0:	lsl	r3, r4, #1
   121d4:	ldrh	r3, [r2, r3]
   121d8:	tst	r3, #256	; 0x100
   121dc:	beq	121c0 <__assert_fail@plt+0xc50>
   121e0:	bl	11378 <__ctype_tolower_loc@plt>
   121e4:	ldr	r3, [r0]
   121e8:	ldr	r3, [r3, r4, lsl #2]
   121ec:	strb	r3, [r7]
   121f0:	b	121c0 <__assert_fail@plt+0xc50>
   121f4:	movw	r3, #45392	; 0xb150
   121f8:	movt	r3, #2
   121fc:	ldr	r0, [r3, #72]	; 0x48
   12200:	cmp	r0, #0
   12204:	beq	1222c <__assert_fail@plt+0xcbc>
   12208:	add	r4, r3, #72	; 0x48
   1220c:	mov	r7, r4
   12210:	mov	r1, r5
   12214:	bl	11210 <strcmp@plt>
   12218:	cmp	r0, #0
   1221c:	beq	123b8 <__assert_fail@plt+0xe48>
   12220:	ldr	r0, [r4, #20]!
   12224:	cmp	r0, #0
   12228:	bne	1220c <__assert_fail@plt+0xc9c>
   1222c:	mov	r0, #4
   12230:	bl	11780 <__assert_fail@plt+0x210>
   12234:	mov	r0, #1
   12238:	bl	113a8 <exit@plt>
   1223c:	ldr	r3, [pc, #492]	; 12430 <__assert_fail@plt+0xec0>
   12240:	ldrh	r2, [r3]
   12244:	cmp	r2, #2
   12248:	beq	12304 <__assert_fail@plt+0xd94>
   1224c:	movw	r5, #38588	; 0x96bc
   12250:	movt	r5, #1
   12254:	movw	r3, #38576	; 0x96b0
   12258:	movt	r3, #1
   1225c:	cmp	r2, #10
   12260:	movne	r5, r3
   12264:	movw	r0, #45812	; 0xb2f4
   12268:	movt	r0, #2
   1226c:	mov	r3, #0
   12270:	str	r3, [sp, #8]
   12274:	str	r3, [sp, #4]
   12278:	str	r3, [sp]
   1227c:	movw	r3, #1025	; 0x401
   12280:	add	r2, r0, #1360	; 0x550
   12284:	ldr	r1, [r0, #668]	; 0x29c
   12288:	add	r0, r0, #540	; 0x21c
   1228c:	bl	11468 <getnameinfo@plt>
   12290:	cmp	r0, #0
   12294:	ldreq	r9, [pc, #408]	; 12434 <__assert_fail@plt+0xec4>
   12298:	bne	12310 <__assert_fail@plt+0xda0>
   1229c:	ldrsh	r2, [r6]
   122a0:	movw	r8, #38604	; 0x96cc
   122a4:	movt	r8, #1
   122a8:	movw	r3, #38612	; 0x96d4
   122ac:	movt	r3, #1
   122b0:	cmp	r2, #2
   122b4:	movne	r8, r3
   122b8:	ldr	sl, [sp, #20]
   122bc:	cmp	r4, #0
   122c0:	beq	12360 <__assert_fail@plt+0xdf0>
   122c4:	movw	r3, #45392	; 0xb150
   122c8:	movt	r3, #2
   122cc:	ldr	r3, [r3]
   122d0:	cmp	r3, #0
   122d4:	blt	12340 <__assert_fail@plt+0xdd0>
   122d8:	cmp	r4, r3
   122dc:	beq	12334 <__assert_fail@plt+0xdc4>
   122e0:	movw	r2, #45392	; 0xb150
   122e4:	movt	r2, #2
   122e8:	ldr	r3, [r2, #8]!
   122ec:	cmp	r3, #0
   122f0:	blt	12340 <__assert_fail@plt+0xdd0>
   122f4:	cmp	r4, r3
   122f8:	bne	122e8 <__assert_fail@plt+0xd78>
   122fc:	ldr	r3, [r2, #4]
   12300:	b	12368 <__assert_fail@plt+0xdf8>
   12304:	movw	r5, #38580	; 0x96b4
   12308:	movt	r5, #1
   1230c:	b	12264 <__assert_fail@plt+0xcf4>
   12310:	bl	11270 <gai_strerror@plt>
   12314:	mov	r2, r0
   12318:	movw	r1, #38628	; 0x96e4
   1231c:	movt	r1, #1
   12320:	mov	r0, #3
   12324:	bl	114a4 <syslog@plt>
   12328:	movw	r9, #38596	; 0x96c4
   1232c:	movt	r9, #1
   12330:	b	1229c <__assert_fail@plt+0xd2c>
   12334:	movw	r2, #45392	; 0xb150
   12338:	movt	r2, #2
   1233c:	b	122fc <__assert_fail@plt+0xd8c>
   12340:	ldr	fp, [pc, #240]	; 12438 <__assert_fail@plt+0xec8>
   12344:	mov	r2, r4
   12348:	movw	r1, #38648	; 0x96f8
   1234c:	movt	r1, #1
   12350:	mov	r0, fp
   12354:	bl	114bc <sprintf@plt>
   12358:	mov	r3, fp
   1235c:	b	12368 <__assert_fail@plt+0xdf8>
   12360:	movw	r3, #38620	; 0x96dc
   12364:	movt	r3, #1
   12368:	str	r3, [sp, #8]
   1236c:	str	sl, [sp, #4]
   12370:	str	r8, [sp]
   12374:	mov	r3, r5
   12378:	mov	r2, r9
   1237c:	movw	r1, #38660	; 0x9704
   12380:	movt	r1, #1
   12384:	mov	r0, #6
   12388:	bl	114a4 <syslog@plt>
   1238c:	b	123e0 <__assert_fail@plt+0xe70>
   12390:	mov	r0, #0
   12394:	bl	113a8 <exit@plt>
   12398:	ldrsh	r3, [r6]
   1239c:	cmp	r3, #2
   123a0:	ldreq	r3, [r7, #12]
   123a4:	ldrne	r3, [r7, #8]
   123a8:	mov	r0, r7
   123ac:	blx	r3
   123b0:	mov	r0, #0
   123b4:	bl	113a8 <exit@plt>
   123b8:	ldr	r3, [r4, #4]
   123bc:	ldrsh	r1, [r6]
   123c0:	add	r0, sp, #20
   123c4:	blx	r3
   123c8:	mov	r4, r0
   123cc:	movw	r3, #45812	; 0xb2f4
   123d0:	movt	r3, #2
   123d4:	ldr	r3, [r3]
   123d8:	cmp	r3, #0
   123dc:	bne	1223c <__assert_fail@plt+0xccc>
   123e0:	cmp	r4, #0
   123e4:	beq	12398 <__assert_fail@plt+0xe28>
   123e8:	movw	r3, #45812	; 0xb2f4
   123ec:	movt	r3, #2
   123f0:	ldr	r3, [r3, #8]
   123f4:	cmp	r3, #0
   123f8:	beq	1241c <__assert_fail@plt+0xeac>
   123fc:	ldr	r3, [sp, #20]
   12400:	ldrb	r2, [r3]
   12404:	subs	r3, r2, #47	; 0x2f
   12408:	movne	r3, #1
   1240c:	cmp	r4, #1
   12410:	movne	r3, #0
   12414:	cmp	r3, #0
   12418:	bne	12390 <__assert_fail@plt+0xe20>
   1241c:	mov	r0, r4
   12420:	bl	11780 <__assert_fail@plt+0x210>
   12424:	mov	r0, #1
   12428:	bl	113a8 <exit@plt>
   1242c:	andeq	fp, r2, r8, lsl #6
   12430:	andeq	fp, r2, r0, lsl r5
   12434:	andeq	fp, r2, r4, asr #16
   12438:	andeq	fp, r2, r8, asr #24
   1243c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12440:	strd	r6, [sp, #8]
   12444:	str	r8, [sp, #16]
   12448:	str	lr, [sp, #20]
   1244c:	sub	sp, sp, #152	; 0x98
   12450:	mov	r7, r0
   12454:	mov	r5, r1
   12458:	movw	r0, #38692	; 0x9724
   1245c:	movt	r0, #1
   12460:	bl	14bc4 <argp_parse@@Base+0x17ac>
   12464:	movw	r3, #45812	; 0xb2f4
   12468:	movt	r3, #2
   1246c:	str	r0, [r3, #16]
   12470:	ldr	r0, [r5]
   12474:	bl	14238 <argp_parse@@Base+0xe20>
   12478:	movw	r3, #49728	; 0xc240
   1247c:	movt	r3, #2
   12480:	movw	r2, #38700	; 0x972c
   12484:	movt	r2, #1
   12488:	str	r2, [r3]
   1248c:	movw	r4, #38724	; 0x9744
   12490:	movt	r4, #1
   12494:	movw	r1, #45720	; 0xb298
   12498:	movt	r1, #2
   1249c:	mov	r0, r4
   124a0:	bl	14004 <argp_parse@@Base+0xbec>
   124a4:	mov	r3, #0
   124a8:	str	r3, [sp, #4]
   124ac:	add	r2, sp, #148	; 0x94
   124b0:	str	r2, [sp]
   124b4:	mov	r2, r5
   124b8:	mov	r1, r7
   124bc:	ldr	r0, [pc, #1108]	; 12918 <__assert_fail@plt+0x13a8>
   124c0:	bl	13418 <argp_parse@@Base>
   124c4:	mov	r2, #88	; 0x58
   124c8:	mov	r1, #9
   124cc:	mov	r0, r4
   124d0:	bl	114c8 <openlog@plt>
   124d4:	ldr	r3, [sp, #148]	; 0x94
   124d8:	cmp	r3, r7
   124dc:	bge	1253c <__assert_fail@plt+0xfcc>
   124e0:	add	r4, r3, #1
   124e4:	add	r5, r5, r3, lsl #2
   124e8:	ldr	r6, [pc, #1068]	; 1291c <__assert_fail@plt+0x13ac>
   124ec:	add	r8, r6, #160	; 0xa0
   124f0:	b	12518 <__assert_fail@plt+0xfa8>
   124f4:	str	r4, [sp, #148]	; 0x94
   124f8:	cmp	r6, r8
   124fc:	movcs	r2, #0
   12500:	movcc	r2, #1
   12504:	cmp	r4, r7
   12508:	movge	r2, #0
   1250c:	add	r4, r4, #1
   12510:	cmp	r2, #0
   12514:	beq	1253c <__assert_fail@plt+0xfcc>
   12518:	ldr	r0, [r5], #4
   1251c:	ldrb	r3, [r0]
   12520:	cmp	r3, #47	; 0x2f
   12524:	bne	124f4 <__assert_fail@plt+0xf84>
   12528:	str	r0, [r6]
   1252c:	bl	113b4 <strlen@plt>
   12530:	str	r0, [r6, #4]
   12534:	add	r6, r6, #8
   12538:	b	124f4 <__assert_fail@plt+0xf84>
   1253c:	mov	r3, #1
   12540:	str	r3, [sp, #144]	; 0x90
   12544:	add	r2, sp, #144	; 0x90
   12548:	movw	r1, #21537	; 0x5421
   1254c:	mov	r0, #0
   12550:	bl	14208 <argp_parse@@Base+0xdf0>
   12554:	cmp	r0, #0
   12558:	blt	125b0 <__assert_fail@plt+0x1040>
   1255c:	movw	r1, #45812	; 0xb2f4
   12560:	movt	r1, #2
   12564:	mov	r3, #128	; 0x80
   12568:	str	r3, [r1, #668]	; 0x29c
   1256c:	add	r3, r1, #540	; 0x21c
   12570:	add	r2, r1, #668	; 0x29c
   12574:	str	r2, [sp, #4]
   12578:	str	r3, [sp]
   1257c:	mov	r3, #0
   12580:	mov	r2, #516	; 0x204
   12584:	add	r1, r1, #20
   12588:	mov	r0, r3
   1258c:	bl	112b8 <recvfrom@plt>
   12590:	subs	r8, r0, #0
   12594:	blt	125c8 <__assert_fail@plt+0x1058>
   12598:	mov	r4, #1
   1259c:	mov	r7, #128	; 0x80
   125a0:	movw	r5, #45812	; 0xb2f4
   125a4:	movt	r5, #2
   125a8:	add	r6, r5, #540	; 0x21c
   125ac:	b	125ec <__assert_fail@plt+0x107c>
   125b0:	movw	r1, #38732	; 0x974c
   125b4:	movt	r1, #1
   125b8:	mov	r0, #3
   125bc:	bl	114a4 <syslog@plt>
   125c0:	mov	r0, #1
   125c4:	bl	113a8 <exit@plt>
   125c8:	movw	r1, #38752	; 0x9760
   125cc:	movt	r1, #1
   125d0:	mov	r0, #3
   125d4:	bl	114a4 <syslog@plt>
   125d8:	mov	r0, #1
   125dc:	bl	113a8 <exit@plt>
   125e0:	add	r4, r0, #1
   125e4:	cmp	r4, #19
   125e8:	bgt	1282c <__assert_fail@plt+0x12bc>
   125ec:	bl	1145c <fork@plt>
   125f0:	cmp	r0, #0
   125f4:	bge	12844 <__assert_fail@plt+0x12d4>
   125f8:	mov	r0, r4
   125fc:	bl	112ac <sleep@plt>
   12600:	str	r7, [sp, #12]
   12604:	add	r3, sp, #12
   12608:	str	r3, [sp, #4]
   1260c:	str	r6, [sp]
   12610:	mov	r3, #0
   12614:	mov	r2, #516	; 0x204
   12618:	add	r1, r5, #20
   1261c:	mov	r0, r3
   12620:	bl	112b8 <recvfrom@plt>
   12624:	cmp	r0, #0
   12628:	ble	125e0 <__assert_fail@plt+0x1070>
   1262c:	ldr	r3, [sp, #12]
   12630:	str	r3, [r5, #668]	; 0x29c
   12634:	mov	r8, r0
   12638:	b	125e0 <__assert_fail@plt+0x1070>
   1263c:	mov	r0, #0
   12640:	bl	113a8 <exit@plt>
   12644:	movw	r1, #38768	; 0x9770
   12648:	movt	r1, #1
   1264c:	mov	r0, #3
   12650:	bl	114a4 <syslog@plt>
   12654:	mov	r0, #1
   12658:	bl	113a8 <exit@plt>
   1265c:	movw	r1, #38780	; 0x977c
   12660:	movt	r1, #1
   12664:	mov	r0, #3
   12668:	bl	114a4 <syslog@plt>
   1266c:	mov	r0, #1
   12670:	bl	113a8 <exit@plt>
   12674:	bl	11240 <getuid@plt>
   12678:	cmp	r0, #0
   1267c:	bne	12724 <__assert_fail@plt+0x11b4>
   12680:	movw	r3, #45812	; 0xb2f4
   12684:	movt	r3, #2
   12688:	ldr	r0, [r3, #16]
   1268c:	bl	11204 <getpwnam@plt>
   12690:	subs	r6, r0, #0
   12694:	beq	126f8 <__assert_fail@plt+0x1188>
   12698:	movw	r3, #45812	; 0xb2f4
   1269c:	movt	r3, #2
   126a0:	ldr	r4, [r3, #4]
   126a4:	cmp	r4, #0
   126a8:	beq	1272c <__assert_fail@plt+0x11bc>
   126ac:	ldrb	r3, [r4]
   126b0:	cmp	r3, #0
   126b4:	moveq	r4, #0
   126b8:	beq	1272c <__assert_fail@plt+0x11bc>
   126bc:	mov	r0, r4
   126c0:	bl	11564 <getgrnam@plt>
   126c4:	subs	r4, r0, #0
   126c8:	bne	1272c <__assert_fail@plt+0x11bc>
   126cc:	movw	r3, #45812	; 0xb2f4
   126d0:	movt	r3, #2
   126d4:	ldr	r2, [r3, #4]
   126d8:	movw	r1, #38812	; 0x979c
   126dc:	movt	r1, #1
   126e0:	mov	r0, #3
   126e4:	bl	114a4 <syslog@plt>
   126e8:	mov	r0, #7
   126ec:	bl	11780 <__assert_fail@plt+0x210>
   126f0:	mov	r0, #1
   126f4:	bl	113a8 <exit@plt>
   126f8:	movw	r3, #45812	; 0xb2f4
   126fc:	movt	r3, #2
   12700:	ldr	r2, [r3, #16]
   12704:	movw	r1, #38792	; 0x9788
   12708:	movt	r1, #1
   1270c:	mov	r0, #3
   12710:	bl	114a4 <syslog@plt>
   12714:	mov	r0, #7
   12718:	bl	11780 <__assert_fail@plt+0x210>
   1271c:	mov	r0, #1
   12720:	bl	113a8 <exit@plt>
   12724:	mov	r4, #0
   12728:	mov	r6, r4
   1272c:	movw	r3, #45812	; 0xb2f4
   12730:	movt	r3, #2
   12734:	ldr	r5, [r3, #12]
   12738:	mov	r0, r5
   1273c:	bl	11318 <chroot@plt>
   12740:	cmp	r0, #0
   12744:	bne	1275c <__assert_fail@plt+0x11ec>
   12748:	movw	r0, #38832	; 0x97b0
   1274c:	movt	r0, #1
   12750:	bl	112dc <chdir@plt>
   12754:	cmp	r0, #0
   12758:	beq	12780 <__assert_fail@plt+0x1210>
   1275c:	mov	r2, r5
   12760:	movw	r1, #38836	; 0x97b4
   12764:	movt	r1, #1
   12768:	mov	r0, #3
   1276c:	bl	114a4 <syslog@plt>
   12770:	mov	r0, #2
   12774:	bl	11780 <__assert_fail@plt+0x210>
   12778:	mov	r0, #1
   1277c:	bl	113a8 <exit@plt>
   12780:	cmp	r6, #0
   12784:	beq	128ec <__assert_fail@plt+0x137c>
   12788:	cmp	r4, #0
   1278c:	beq	127f0 <__assert_fail@plt+0x1280>
   12790:	ldr	r0, [r4, #8]
   12794:	bl	11348 <setgid@plt>
   12798:	cmp	r0, #0
   1279c:	bne	127d0 <__assert_fail@plt+0x1260>
   127a0:	ldr	r0, [r6, #8]
   127a4:	bl	114b0 <setuid@plt>
   127a8:	cmp	r0, #0
   127ac:	beq	128ec <__assert_fail@plt+0x137c>
   127b0:	movw	r1, #38868	; 0x97d4
   127b4:	movt	r1, #1
   127b8:	mov	r0, #3
   127bc:	bl	114a4 <syslog@plt>
   127c0:	mov	r0, #7
   127c4:	bl	11780 <__assert_fail@plt+0x210>
   127c8:	mov	r0, #1
   127cc:	bl	113a8 <exit@plt>
   127d0:	movw	r1, #38856	; 0x97c8
   127d4:	movt	r1, #1
   127d8:	mov	r0, #3
   127dc:	bl	114a4 <syslog@plt>
   127e0:	mov	r0, #7
   127e4:	bl	11780 <__assert_fail@plt+0x210>
   127e8:	mov	r0, #1
   127ec:	bl	113a8 <exit@plt>
   127f0:	ldr	r0, [r6, #12]
   127f4:	bl	11348 <setgid@plt>
   127f8:	cmp	r0, #0
   127fc:	beq	127a0 <__assert_fail@plt+0x1230>
   12800:	movw	r1, #38856	; 0x97c8
   12804:	movt	r1, #1
   12808:	mov	r0, #3
   1280c:	bl	114a4 <syslog@plt>
   12810:	mov	r0, #7
   12814:	bl	11780 <__assert_fail@plt+0x210>
   12818:	mov	r0, #1
   1281c:	bl	113a8 <exit@plt>
   12820:	mov	r1, r8
   12824:	add	r0, r2, #20
   12828:	bl	12128 <__assert_fail@plt+0xbb8>
   1282c:	movw	r1, #38880	; 0x97e0
   12830:	movt	r1, #1
   12834:	mov	r0, #3
   12838:	bl	114a4 <syslog@plt>
   1283c:	mov	r0, #1
   12840:	bl	113a8 <exit@plt>
   12844:	cmp	r0, #0
   12848:	bne	1263c <__assert_fail@plt+0x10cc>
   1284c:	mov	r0, #0
   12850:	bl	112c4 <alarm@plt>
   12854:	mov	r0, #0
   12858:	bl	11558 <close@plt>
   1285c:	mov	r0, #1
   12860:	bl	11558 <close@plt>
   12864:	movw	r4, #45812	; 0xb2f4
   12868:	movt	r4, #2
   1286c:	add	r3, r4, #540	; 0x21c
   12870:	mov	r2, #0
   12874:	mov	r1, #2
   12878:	ldrh	r0, [r3]
   1287c:	bl	11504 <socket@plt>
   12880:	mov	r5, r0
   12884:	str	r0, [r4, #536]	; 0x218
   12888:	cmp	r0, #0
   1288c:	blt	12644 <__assert_fail@plt+0x10d4>
   12890:	mov	r2, #126	; 0x7e
   12894:	mov	r1, #0
   12898:	add	r0, sp, #18
   1289c:	bl	113fc <memset@plt>
   128a0:	movw	r3, #45812	; 0xb2f4
   128a4:	movt	r3, #2
   128a8:	add	r2, r3, #540	; 0x21c
   128ac:	ldrh	r2, [r2]
   128b0:	strh	r2, [sp, #16]
   128b4:	ldr	r2, [r3, #668]	; 0x29c
   128b8:	add	r1, sp, #16
   128bc:	mov	r0, r5
   128c0:	bl	113f0 <bind@plt>
   128c4:	cmp	r0, #0
   128c8:	blt	1265c <__assert_fail@plt+0x10ec>
   128cc:	movw	r3, #45812	; 0xb2f4
   128d0:	movt	r3, #2
   128d4:	ldr	r3, [r3, #12]
   128d8:	cmp	r3, #0
   128dc:	beq	128ec <__assert_fail@plt+0x137c>
   128e0:	ldrb	r3, [r3]
   128e4:	cmp	r3, #0
   128e8:	bne	12674 <__assert_fail@plt+0x1104>
   128ec:	movw	r2, #45812	; 0xb2f4
   128f0:	movt	r2, #2
   128f4:	ldrh	r3, [r2, #20]
   128f8:	rev16	r3, r3
   128fc:	strh	r3, [r2, #20]
   12900:	sub	r3, r3, #1
   12904:	uxth	r3, r3
   12908:	cmp	r3, #1
   1290c:	bls	12820 <__assert_fail@plt+0x12b0>
   12910:	mov	r0, #1
   12914:	bl	113a8 <exit@plt>
   12918:	ldrdeq	fp, [r2], -r4
   1291c:	muleq	r2, r4, r5
   12920:	movw	r3, #48220	; 0xbc5c
   12924:	movt	r3, #2
   12928:	mov	r2, #0
   1292c:	str	r2, [r3]
   12930:	movw	r1, #45728	; 0xb2a0
   12934:	movt	r1, #2
   12938:	mvn	r0, #0
   1293c:	str	r0, [r1]
   12940:	movw	r0, #48688	; 0xbe30
   12944:	movt	r0, #2
   12948:	mvn	r1, #2
   1294c:	str	r1, [r0]
   12950:	str	r2, [r3, #4]
   12954:	mvn	r1, #1
   12958:	str	r1, [r0, #520]	; 0x208
   1295c:	str	r2, [r3, #8]
   12960:	add	r0, r0, #4
   12964:	bx	lr
   12968:	movw	r3, #48220	; 0xbc5c
   1296c:	movt	r3, #2
   12970:	mov	r1, #0
   12974:	str	r1, [r3]
   12978:	movw	r2, #45728	; 0xb2a0
   1297c:	movt	r2, #2
   12980:	mvn	r0, #0
   12984:	str	r0, [r2]
   12988:	movw	r0, #48688	; 0xbe30
   1298c:	movt	r0, #2
   12990:	mvn	r2, #2
   12994:	str	r2, [r0]
   12998:	str	r1, [r3, #4]
   1299c:	mvn	r2, #1
   129a0:	str	r2, [r0, #520]	; 0x208
   129a4:	mov	r2, #1
   129a8:	str	r2, [r3, #8]
   129ac:	add	r0, r0, #4
   129b0:	bx	lr
   129b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   129b8:	strd	r6, [sp, #8]
   129bc:	strd	r8, [sp, #16]
   129c0:	strd	sl, [sp, #24]
   129c4:	str	lr, [sp, #32]
   129c8:	sub	sp, sp, #4
   129cc:	movw	r3, #48220	; 0xbc5c
   129d0:	movt	r3, #2
   129d4:	ldr	r9, [r3, #8]
   129d8:	movw	r3, #48688	; 0xbe30
   129dc:	movt	r3, #2
   129e0:	add	r2, r9, r9, lsl #6
   129e4:	ldr	r3, [r3, r2, lsl #3]
   129e8:	cmn	r3, #2
   129ec:	bne	12ad4 <__assert_fail@plt+0x1564>
   129f0:	mov	r8, r0
   129f4:	movw	r3, #48220	; 0xbc5c
   129f8:	movt	r3, #2
   129fc:	clz	r2, r9
   12a00:	lsr	r2, r2, #5
   12a04:	str	r2, [r3, #8]
   12a08:	add	r6, r9, r9, lsl #6
   12a0c:	ldr	r3, [pc, #220]	; 12af0 <__assert_fail@plt+0x1580>
   12a10:	add	r6, r3, r6, lsl #3
   12a14:	cmp	r1, #0
   12a18:	beq	12a40 <__assert_fail@plt+0x14d0>
   12a1c:	add	fp, r6, #4
   12a20:	add	r6, r6, #516	; 0x204
   12a24:	mov	r4, fp
   12a28:	movw	r5, #48220	; 0xbc5c
   12a2c:	movt	r5, #2
   12a30:	movw	r7, #45728	; 0xb2a0
   12a34:	movt	r7, #2
   12a38:	mov	sl, #1
   12a3c:	b	12a98 <__assert_fail@plt+0x1528>
   12a40:	bl	11414 <fileno@plt>
   12a44:	mov	r2, #512	; 0x200
   12a48:	add	r1, r6, #4
   12a4c:	bl	11234 <read@plt>
   12a50:	movw	r3, #48688	; 0xbe30
   12a54:	movt	r3, #2
   12a58:	add	r9, r9, r9, lsl #6
   12a5c:	str	r0, [r3, r9, lsl #3]
   12a60:	b	12ad4 <__assert_fail@plt+0x1564>
   12a64:	mov	r0, r8
   12a68:	bl	11534 <getc@plt>
   12a6c:	cmn	r0, #1
   12a70:	beq	12ac0 <__assert_fail@plt+0x1550>
   12a74:	cmp	r0, #13
   12a78:	cmpne	r0, #10
   12a7c:	bne	12a8c <__assert_fail@plt+0x151c>
   12a80:	str	r0, [r7]
   12a84:	str	sl, [r5]
   12a88:	mov	r0, #13
   12a8c:	strb	r0, [r4], #1
   12a90:	cmp	r4, r6
   12a94:	beq	12abc <__assert_fail@plt+0x154c>
   12a98:	ldr	r3, [r5]
   12a9c:	cmp	r3, #0
   12aa0:	beq	12a64 <__assert_fail@plt+0x14f4>
   12aa4:	ldr	r0, [r7]
   12aa8:	cmp	r0, #10
   12aac:	movne	r0, #0
   12ab0:	mov	r3, #0
   12ab4:	str	r3, [r5]
   12ab8:	b	12a8c <__assert_fail@plt+0x151c>
   12abc:	mov	r4, r6
   12ac0:	movw	r3, #48688	; 0xbe30
   12ac4:	movt	r3, #2
   12ac8:	add	r9, r9, r9, lsl #6
   12acc:	sub	r4, r4, fp
   12ad0:	str	r4, [r3, r9, lsl #3]
   12ad4:	add	sp, sp, #4
   12ad8:	ldrd	r4, [sp]
   12adc:	ldrd	r6, [sp, #8]
   12ae0:	ldrd	r8, [sp, #16]
   12ae4:	ldrd	sl, [sp, #24]
   12ae8:	add	sp, sp, #32
   12aec:	pop	{pc}		; (ldr pc, [sp], #4)
   12af0:	andeq	fp, r2, r4, lsr lr
   12af4:	strd	r4, [sp, #-16]!
   12af8:	str	r6, [sp, #8]
   12afc:	str	lr, [sp, #12]
   12b00:	mov	r5, r1
   12b04:	movw	ip, #48220	; 0xbc5c
   12b08:	movt	ip, #2
   12b0c:	ldr	r4, [ip, #4]
   12b10:	movw	r3, #48688	; 0xbe30
   12b14:	movt	r3, #2
   12b18:	add	lr, r4, r4, lsl #6
   12b1c:	mvn	r6, #1
   12b20:	str	r6, [r3, lr, lsl #3]
   12b24:	clz	r4, r4
   12b28:	lsr	r4, r4, #5
   12b2c:	str	r4, [ip, #4]
   12b30:	lsl	ip, r4, #6
   12b34:	add	ip, ip, r4
   12b38:	ldr	r3, [r3, ip, lsl #3]
   12b3c:	cmp	r3, r6
   12b40:	beq	12b80 <__assert_fail@plt+0x1610>
   12b44:	lsl	r3, r4, #6
   12b48:	add	r3, r3, r4
   12b4c:	lsl	r3, r3, #3
   12b50:	add	r3, r3, #4
   12b54:	movw	r2, #48688	; 0xbe30
   12b58:	movt	r2, #2
   12b5c:	add	r3, r3, r2
   12b60:	str	r3, [r5]
   12b64:	lsl	r3, r4, #6
   12b68:	add	r4, r3, r4
   12b6c:	ldr	r0, [r2, r4, lsl #3]
   12b70:	ldrd	r4, [sp]
   12b74:	ldr	r6, [sp, #8]
   12b78:	add	sp, sp, #12
   12b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b80:	mov	r1, r2
   12b84:	bl	129b4 <__assert_fail@plt+0x1444>
   12b88:	b	12b44 <__assert_fail@plt+0x15d4>
   12b8c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12b90:	strd	r6, [sp, #8]
   12b94:	strd	r8, [sp, #16]
   12b98:	str	sl, [sp, #24]
   12b9c:	str	lr, [sp, #28]
   12ba0:	sub	sp, sp, #8
   12ba4:	movw	r3, #48220	; 0xbc5c
   12ba8:	movt	r3, #2
   12bac:	ldr	r3, [r3, #8]
   12bb0:	movw	r2, #48688	; 0xbe30
   12bb4:	movt	r2, #2
   12bb8:	add	ip, r3, r3, lsl #6
   12bbc:	ldr	r9, [r2, ip, lsl #3]
   12bc0:	cmn	r9, #1
   12bc4:	movlt	r9, #0
   12bc8:	blt	12c38 <__assert_fail@plt+0x16c8>
   12bcc:	mov	r6, r2
   12bd0:	mvn	lr, #1
   12bd4:	str	lr, [r6, ip, lsl #3]
   12bd8:	add	r6, r6, ip, lsl #3
   12bdc:	movw	r2, #48220	; 0xbc5c
   12be0:	movt	r2, #2
   12be4:	clz	r3, r3
   12be8:	lsr	r3, r3, #5
   12bec:	str	r3, [r2, #8]
   12bf0:	add	r5, r6, #8
   12bf4:	add	r6, r6, #4
   12bf8:	cmp	r9, #0
   12bfc:	ble	12ca8 <__assert_fail@plt+0x1738>
   12c00:	mov	r8, r0
   12c04:	cmp	r1, #0
   12c08:	beq	12c24 <__assert_fail@plt+0x16b4>
   12c0c:	add	r3, r9, #4
   12c10:	add	r6, r6, r3
   12c14:	movw	r7, #45728	; 0xb2a0
   12c18:	movt	r7, #2
   12c1c:	mov	sl, #1
   12c20:	b	12c84 <__assert_fail@plt+0x1714>
   12c24:	bl	11414 <fileno@plt>
   12c28:	mov	r2, r9
   12c2c:	mov	r1, r5
   12c30:	bl	11408 <write@plt>
   12c34:	mov	r9, r0
   12c38:	mov	r0, r9
   12c3c:	add	sp, sp, #8
   12c40:	ldrd	r4, [sp]
   12c44:	ldrd	r6, [sp, #8]
   12c48:	ldrd	r8, [sp, #16]
   12c4c:	ldr	sl, [sp, #24]
   12c50:	add	sp, sp, #28
   12c54:	pop	{pc}		; (ldr pc, [sp], #4)
   12c58:	str	sl, [sp]
   12c5c:	mvn	r2, #0
   12c60:	mvn	r3, #0
   12c64:	mov	r0, r8
   12c68:	bl	11438 <fseeko64@plt>
   12c6c:	mov	r1, r8
   12c70:	mov	r0, r4
   12c74:	bl	114d4 <putc@plt>
   12c78:	str	r4, [r7]
   12c7c:	cmp	r6, r5
   12c80:	beq	12c38 <__assert_fail@plt+0x16c8>
   12c84:	ldrb	r4, [r5], #1
   12c88:	ldr	r3, [r7]
   12c8c:	cmp	r3, #13
   12c90:	bne	12c6c <__assert_fail@plt+0x16fc>
   12c94:	cmp	r4, #10
   12c98:	beq	12c58 <__assert_fail@plt+0x16e8>
   12c9c:	cmp	r4, #0
   12ca0:	bne	12c6c <__assert_fail@plt+0x16fc>
   12ca4:	b	12c78 <__assert_fail@plt+0x1708>
   12ca8:	mvn	r9, #0
   12cac:	b	12c38 <__assert_fail@plt+0x16c8>
   12cb0:	strd	r4, [sp, #-16]!
   12cb4:	str	r6, [sp, #8]
   12cb8:	str	lr, [sp, #12]
   12cbc:	mov	r5, r1
   12cc0:	mov	r4, r2
   12cc4:	movw	lr, #48220	; 0xbc5c
   12cc8:	movt	lr, #2
   12ccc:	ldr	r2, [lr, #4]
   12cd0:	movw	ip, #48688	; 0xbe30
   12cd4:	movt	ip, #2
   12cd8:	add	r6, r2, r2, lsl #6
   12cdc:	str	r4, [ip, r6, lsl #3]
   12ce0:	clz	r2, r2
   12ce4:	lsr	r2, r2, #5
   12ce8:	str	r2, [lr, #4]
   12cec:	lsl	lr, r2, #6
   12cf0:	add	r2, lr, r2
   12cf4:	ldr	r2, [ip, r2, lsl #3]
   12cf8:	cmn	r2, #2
   12cfc:	bne	12d44 <__assert_fail@plt+0x17d4>
   12d00:	movw	r3, #48220	; 0xbc5c
   12d04:	movt	r3, #2
   12d08:	ldr	r1, [r3, #4]
   12d0c:	movw	r3, #48688	; 0xbe30
   12d10:	movt	r3, #2
   12d14:	lsl	r2, r1, #6
   12d18:	add	r0, r2, r1
   12d1c:	mvn	ip, #2
   12d20:	str	ip, [r3, r0, lsl #3]
   12d24:	add	r3, r3, r0, lsl #3
   12d28:	add	r3, r3, #4
   12d2c:	str	r3, [r5]
   12d30:	mov	r0, r4
   12d34:	ldrd	r4, [sp]
   12d38:	ldr	r6, [sp, #8]
   12d3c:	add	sp, sp, #12
   12d40:	pop	{pc}		; (ldr pc, [sp], #4)
   12d44:	mov	r1, r3
   12d48:	bl	12b8c <__assert_fail@plt+0x161c>
   12d4c:	b	12d00 <__assert_fail@plt+0x1790>
   12d50:	strd	r4, [sp, #-20]!	; 0xffffffec
   12d54:	strd	r6, [sp, #8]
   12d58:	str	lr, [sp, #16]
   12d5c:	sub	sp, sp, #668	; 0x29c
   12d60:	mov	r5, r0
   12d64:	mov	r4, #0
   12d68:	movw	r6, #21531	; 0x541b
   12d6c:	mov	r7, #128	; 0x80
   12d70:	add	r2, sp, #660	; 0x294
   12d74:	mov	r1, r6
   12d78:	mov	r0, r5
   12d7c:	bl	14208 <argp_parse@@Base+0xdf0>
   12d80:	ldr	r3, [sp, #660]	; 0x294
   12d84:	cmp	r3, #0
   12d88:	beq	12dbc <__assert_fail@plt+0x184c>
   12d8c:	add	r4, r4, #1
   12d90:	str	r7, [sp, #12]
   12d94:	add	r3, sp, #12
   12d98:	str	r3, [sp, #4]
   12d9c:	add	r3, sp, #16
   12da0:	str	r3, [sp]
   12da4:	mov	r3, #0
   12da8:	mov	r2, #516	; 0x204
   12dac:	add	r1, sp, #144	; 0x90
   12db0:	mov	r0, r5
   12db4:	bl	112b8 <recvfrom@plt>
   12db8:	b	12d70 <__assert_fail@plt+0x1800>
   12dbc:	mov	r0, r4
   12dc0:	add	sp, sp, #668	; 0x29c
   12dc4:	ldrd	r4, [sp]
   12dc8:	ldrd	r6, [sp, #8]
   12dcc:	add	sp, sp, #16
   12dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   12dd4:	ldr	ip, [r0]
   12dd8:	cmp	ip, #0
   12ddc:	beq	12e44 <__assert_fail@plt+0x18d4>
   12de0:	strd	r4, [sp, #-16]!
   12de4:	str	r6, [sp, #8]
   12de8:	str	lr, [sp, #12]
   12dec:	mov	ip, r2
   12df0:	mov	r5, r1
   12df4:	mov	r4, r0
   12df8:	ldr	r2, [r0, #32]
   12dfc:	str	r2, [r1, #36]	; 0x24
   12e00:	ldr	r2, [r0, #24]
   12e04:	str	r2, [r1, #28]
   12e08:	ldr	r2, [r0, #28]
   12e0c:	str	r2, [r1, #32]
   12e10:	ldr	r2, [r0, #12]
   12e14:	str	r2, [r1, #20]
   12e18:	ldr	r6, [r0]
   12e1c:	mov	r2, r1
   12e20:	mov	r1, r3
   12e24:	mov	r0, ip
   12e28:	blx	r6
   12e2c:	ldr	r3, [r5, #36]	; 0x24
   12e30:	str	r3, [r4, #32]
   12e34:	ldrd	r4, [sp]
   12e38:	ldr	r6, [sp, #8]
   12e3c:	add	sp, sp, #12
   12e40:	pop	{pc}		; (ldr pc, [sp], #4)
   12e44:	mov	r0, #7
   12e48:	bx	lr
   12e4c:	strd	r4, [sp, #-16]!
   12e50:	str	r6, [sp, #8]
   12e54:	str	lr, [sp, #12]
   12e58:	ldr	r5, [r0, #16]
   12e5c:	ldr	r3, [r0]
   12e60:	cmp	r3, #0
   12e64:	beq	12e7c <__assert_fail@plt+0x190c>
   12e68:	ldr	r2, [r1, #8]
   12e6c:	add	r2, r2, #1
   12e70:	str	r2, [r1, #8]
   12e74:	mov	r2, #0
   12e78:	b	12e9c <__assert_fail@plt+0x192c>
   12e7c:	ldr	r3, [r0, #4]
   12e80:	cmp	r3, #0
   12e84:	beq	12eec <__assert_fail@plt+0x197c>
   12e88:	ldr	r3, [r1, #8]
   12e8c:	add	r3, r3, #1
   12e90:	str	r3, [r1, #8]
   12e94:	b	12eec <__assert_fail@plt+0x197c>
   12e98:	add	r2, r2, #1
   12e9c:	add	r3, r3, #24
   12ea0:	ldr	r0, [r3, #-20]	; 0xffffffec
   12ea4:	cmp	r0, #0
   12ea8:	bne	12e98 <__assert_fail@plt+0x1928>
   12eac:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12eb0:	cmp	r0, #0
   12eb4:	bne	12e98 <__assert_fail@plt+0x1928>
   12eb8:	ldr	r0, [r3, #-8]
   12ebc:	cmp	r0, #0
   12ec0:	bne	12e98 <__assert_fail@plt+0x1928>
   12ec4:	ldr	r0, [r3, #-4]
   12ec8:	cmp	r0, #0
   12ecc:	bne	12e98 <__assert_fail@plt+0x1928>
   12ed0:	add	r0, r2, r2, lsl #1
   12ed4:	ldr	r3, [r1]
   12ed8:	add	r3, r3, r0
   12edc:	str	r3, [r1]
   12ee0:	ldr	r3, [r1, #4]
   12ee4:	add	r2, r3, r2
   12ee8:	str	r2, [r1, #4]
   12eec:	cmp	r5, #0
   12ef0:	beq	12f24 <__assert_fail@plt+0x19b4>
   12ef4:	ldr	r0, [r5]
   12ef8:	cmp	r0, #0
   12efc:	beq	12f24 <__assert_fail@plt+0x19b4>
   12f00:	mov	r4, r1
   12f04:	mov	r1, r4
   12f08:	bl	12e4c <__assert_fail@plt+0x18dc>
   12f0c:	ldr	r3, [r4, #12]
   12f10:	add	r3, r3, #1
   12f14:	str	r3, [r4, #12]
   12f18:	ldr	r0, [r5, #16]!
   12f1c:	cmp	r0, #0
   12f20:	bne	12f04 <__assert_fail@plt+0x1994>
   12f24:	ldrd	r4, [sp]
   12f28:	ldr	r6, [sp, #8]
   12f2c:	add	sp, sp, #12
   12f30:	pop	{pc}		; (ldr pc, [sp], #4)
   12f34:	cmp	r0, #86	; 0x56
   12f38:	beq	12f44 <__assert_fail@plt+0x19d4>
   12f3c:	mov	r0, #7
   12f40:	bx	lr
   12f44:	str	r4, [sp, #-8]!
   12f48:	str	lr, [sp, #4]
   12f4c:	mov	r4, r2
   12f50:	movw	r3, #48236	; 0xbc6c
   12f54:	movt	r3, #2
   12f58:	ldr	r3, [r3]
   12f5c:	cmp	r3, #0
   12f60:	beq	12f8c <__assert_fail@plt+0x1a1c>
   12f64:	mov	r1, r2
   12f68:	ldr	r0, [r2, #48]	; 0x30
   12f6c:	blx	r3
   12f70:	ldr	r3, [r4, #16]
   12f74:	tst	r3, #32
   12f78:	beq	12fd0 <__assert_fail@plt+0x1a60>
   12f7c:	mov	r0, #0
   12f80:	ldr	r4, [sp]
   12f84:	add	sp, sp, #4
   12f88:	pop	{pc}		; (ldr pc, [sp], #4)
   12f8c:	movw	r3, #49732	; 0xc244
   12f90:	movt	r3, #2
   12f94:	ldr	r2, [r3]
   12f98:	cmp	r2, #0
   12f9c:	beq	12fb4 <__assert_fail@plt+0x1a44>
   12fa0:	movw	r1, #40188	; 0x9cfc
   12fa4:	movt	r1, #1
   12fa8:	ldr	r0, [r4, #48]	; 0x30
   12fac:	bl	113cc <fprintf@plt>
   12fb0:	b	12f70 <__assert_fail@plt+0x1a00>
   12fb4:	movw	r2, #39776	; 0x9b60
   12fb8:	movt	r2, #1
   12fbc:	movw	r1, #38688	; 0x9720
   12fc0:	movt	r1, #1
   12fc4:	mov	r0, r4
   12fc8:	bl	18014 <argp_error@@Base>
   12fcc:	b	12f70 <__assert_fail@plt+0x1a00>
   12fd0:	mov	r0, #0
   12fd4:	bl	113a8 <exit@plt>
   12fd8:	strd	r4, [sp, #-16]!
   12fdc:	str	r6, [sp, #8]
   12fe0:	str	lr, [sp, #12]
   12fe4:	mov	r4, r2
   12fe8:	cmn	r0, #3
   12fec:	beq	130a4 <__assert_fail@plt+0x1b34>
   12ff0:	mov	r5, r1
   12ff4:	ble	13030 <__assert_fail@plt+0x1ac0>
   12ff8:	cmn	r0, #2
   12ffc:	beq	130bc <__assert_fail@plt+0x1b4c>
   13000:	cmp	r0, #63	; 0x3f
   13004:	movne	r0, #7
   13008:	bne	13020 <__assert_fail@plt+0x1ab0>
   1300c:	movw	r2, #634	; 0x27a
   13010:	ldr	r1, [r4, #48]	; 0x30
   13014:	mov	r0, r4
   13018:	bl	17f4c <argp_state_help@@Base>
   1301c:	mov	r0, #0
   13020:	ldrd	r4, [sp]
   13024:	ldr	r6, [sp, #8]
   13028:	add	sp, sp, #12
   1302c:	pop	{pc}		; (ldr pc, [sp], #4)
   13030:	cmn	r0, #4
   13034:	movne	r0, #7
   13038:	bne	13020 <__assert_fail@plt+0x1ab0>
   1303c:	movw	r0, #39812	; 0x9b84
   13040:	movt	r0, #1
   13044:	mov	r2, #10
   13048:	mov	r1, #0
   1304c:	cmp	r5, r1
   13050:	movne	r0, r5
   13054:	bl	1121c <strtol@plt>
   13058:	movw	r3, #48232	; 0xbc68
   1305c:	movt	r3, #2
   13060:	str	r0, [r3]
   13064:	ldr	r2, [r3]
   13068:	sub	r1, r2, #1
   1306c:	str	r1, [r3]
   13070:	cmp	r2, #0
   13074:	ble	13104 <__assert_fail@plt+0x1b94>
   13078:	mov	r5, #1
   1307c:	mov	r4, r3
   13080:	mov	r0, r5
   13084:	bl	112ac <sleep@plt>
   13088:	ldr	r3, [r4]
   1308c:	sub	r2, r3, #1
   13090:	str	r2, [r4]
   13094:	cmp	r3, #0
   13098:	bgt	13080 <__assert_fail@plt+0x1b10>
   1309c:	mov	r0, #0
   130a0:	b	13020 <__assert_fail@plt+0x1ab0>
   130a4:	movw	r2, #513	; 0x201
   130a8:	ldr	r1, [r4, #48]	; 0x30
   130ac:	mov	r0, r4
   130b0:	bl	17f4c <argp_state_help@@Base>
   130b4:	mov	r0, #0
   130b8:	b	13020 <__assert_fail@plt+0x1ab0>
   130bc:	movw	r3, #45796	; 0xb2e4
   130c0:	movt	r3, #2
   130c4:	str	r1, [r3]
   130c8:	mov	r0, r1
   130cc:	bl	1402c <argp_parse@@Base+0xc14>
   130d0:	str	r0, [r4, #40]	; 0x28
   130d4:	movw	r3, #45792	; 0xb2e0
   130d8:	movt	r3, #2
   130dc:	str	r0, [r3]
   130e0:	ldr	r3, [r4, #16]
   130e4:	and	r3, r3, #3
   130e8:	cmp	r3, #1
   130ec:	movne	r0, #0
   130f0:	bne	13020 <__assert_fail@plt+0x1ab0>
   130f4:	ldr	r3, [r4, #8]
   130f8:	str	r5, [r3]
   130fc:	mov	r0, #0
   13100:	b	13020 <__assert_fail@plt+0x1ab0>
   13104:	mov	r0, #0
   13108:	b	13020 <__assert_fail@plt+0x1ab0>
   1310c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13110:	strd	r6, [sp, #8]
   13114:	strd	r8, [sp, #16]
   13118:	strd	sl, [sp, #24]
   1311c:	str	lr, [sp, #32]
   13120:	sub	sp, sp, #36	; 0x24
   13124:	str	r0, [sp, #16]
   13128:	str	r1, [sp, #20]
   1312c:	str	r2, [sp, #24]
   13130:	str	r3, [sp, #8]
   13134:	ldr	r8, [sp, #72]	; 0x48
   13138:	ldr	r6, [r0]
   1313c:	ldr	sl, [r0, #16]
   13140:	cmp	r6, #0
   13144:	beq	13160 <__assert_fail@plt+0x1bf0>
   13148:	mov	r4, r6
   1314c:	movw	r3, #36409	; 0x8e39
   13150:	movt	r3, #14563	; 0x38e3
   13154:	str	r3, [sp, #12]
   13158:	str	sl, [sp, #28]
   1315c:	b	131a4 <__assert_fail@plt+0x1c34>
   13160:	ldr	r3, [r0, #4]
   13164:	cmp	r3, #0
   13168:	bne	13330 <__assert_fail@plt+0x1dc0>
   1316c:	ldr	r0, [sp, #8]
   13170:	str	r6, [sp, #8]
   13174:	b	133b4 <__assert_fail@plt+0x1e44>
   13178:	ldr	r0, [r7, #16]!
   1317c:	cmp	r0, #0
   13180:	beq	13284 <__assert_fail@plt+0x1d14>
   13184:	mov	r1, r9
   13188:	bl	11210 <strcmp@plt>
   1318c:	cmp	r0, #0
   13190:	bne	13178 <__assert_fail@plt+0x1c08>
   13194:	sub	sl, r7, fp
   13198:	cmp	sl, #0
   1319c:	blt	13284 <__assert_fail@plt+0x1d14>
   131a0:	add	r4, r4, #24
   131a4:	ldr	r7, [r4, #4]
   131a8:	cmp	r7, #0
   131ac:	bne	131bc <__assert_fail@plt+0x1c4c>
   131b0:	ldr	r3, [r4]
   131b4:	cmp	r3, #0
   131b8:	beq	13314 <__assert_fail@plt+0x1da4>
   131bc:	ldr	r3, [r4, #12]
   131c0:	and	r2, r3, #4
   131c4:	cmp	r2, #0
   131c8:	moveq	r6, r4
   131cc:	ldr	r5, [r6, #12]
   131d0:	ands	r5, r5, #8
   131d4:	bne	131a0 <__assert_fail@plt+0x1c30>
   131d8:	tst	r3, #8
   131dc:	bne	1325c <__assert_fail@plt+0x1cec>
   131e0:	sub	r3, r7, #1
   131e4:	cmp	r3, #254	; 0xfe
   131e8:	bhi	1325c <__assert_fail@plt+0x1cec>
   131ec:	bl	1139c <__ctype_b_loc@plt>
   131f0:	ldr	r2, [r0]
   131f4:	lsl	r3, r7, #1
   131f8:	ldrh	r3, [r2, r3]
   131fc:	tst	r3, #16384	; 0x4000
   13200:	beq	1325c <__assert_fail@plt+0x1cec>
   13204:	ldr	r3, [r8, #4]
   13208:	add	r2, r3, #1
   1320c:	str	r2, [r8, #4]
   13210:	strb	r7, [r3]
   13214:	ldr	r3, [r6, #8]
   13218:	cmp	r3, #0
   1321c:	beq	13250 <__assert_fail@plt+0x1ce0>
   13220:	ldr	r3, [r8, #4]
   13224:	add	r2, r3, #1
   13228:	str	r2, [r8, #4]
   1322c:	mov	r1, #58	; 0x3a
   13230:	strb	r1, [r3]
   13234:	ldr	r3, [r6, #12]
   13238:	tst	r3, #1
   1323c:	beq	13250 <__assert_fail@plt+0x1ce0>
   13240:	ldr	r3, [r8, #4]
   13244:	add	r2, r3, #1
   13248:	str	r2, [r8, #4]
   1324c:	strb	r1, [r3]
   13250:	ldr	r3, [r8, #4]
   13254:	mov	r2, #0
   13258:	strb	r2, [r3]
   1325c:	ldr	r9, [r4]
   13260:	cmp	r9, #0
   13264:	beq	131a0 <__assert_fail@plt+0x1c30>
   13268:	ldr	r3, [r8]
   1326c:	ldr	fp, [r3, #8]
   13270:	ldr	r0, [fp]
   13274:	cmp	r0, #0
   13278:	beq	13284 <__assert_fail@plt+0x1d14>
   1327c:	mov	r7, fp
   13280:	b	13184 <__assert_fail@plt+0x1c14>
   13284:	ldr	r3, [r8, #8]
   13288:	str	r9, [r3]
   1328c:	ldr	r3, [r6, #8]
   13290:	cmp	r3, #0
   13294:	beq	132ac <__assert_fail@plt+0x1d3c>
   13298:	ldr	r3, [r6, #12]
   1329c:	and	r3, r3, #1
   132a0:	cmp	r3, #0
   132a4:	movne	r5, #2
   132a8:	moveq	r5, #1
   132ac:	ldr	r3, [r8, #8]
   132b0:	str	r5, [r3, #4]
   132b4:	ldr	r3, [r8, #8]
   132b8:	mov	r2, #0
   132bc:	str	r2, [r3, #8]
   132c0:	ldr	r3, [r4, #4]
   132c4:	cmp	r3, r2
   132c8:	ldreq	r3, [r6, #4]
   132cc:	bic	r2, r3, #-16777216	; 0xff000000
   132d0:	ldr	r1, [r8, #8]
   132d4:	ldr	r3, [r8]
   132d8:	ldr	r3, [r3, #48]	; 0x30
   132dc:	ldr	r0, [sp, #8]
   132e0:	sub	r3, r0, r3
   132e4:	asr	r3, r3, #2
   132e8:	ldr	r0, [sp, #12]
   132ec:	mul	r3, r0, r3
   132f0:	add	r3, r3, #1
   132f4:	add	r3, r2, r3, lsl #24
   132f8:	str	r3, [r1, #12]
   132fc:	ldr	r3, [r8, #8]
   13300:	add	r2, r3, #16
   13304:	str	r2, [r8, #8]
   13308:	mov	r2, #0
   1330c:	str	r2, [r3, #16]
   13310:	b	131a0 <__assert_fail@plt+0x1c30>
   13314:	ldr	r3, [r4, #16]
   13318:	cmp	r3, #0
   1331c:	bne	131bc <__assert_fail@plt+0x1c4c>
   13320:	ldr	r3, [r4, #20]
   13324:	cmp	r3, #0
   13328:	bne	131bc <__assert_fail@plt+0x1c4c>
   1332c:	ldr	sl, [sp, #28]
   13330:	ldr	r1, [sp, #16]
   13334:	ldr	r3, [r1, #4]
   13338:	ldr	r2, [sp, #8]
   1333c:	str	r3, [r2]
   13340:	str	r1, [r2, #4]
   13344:	ldr	r3, [r8, #4]
   13348:	str	r3, [r2, #8]
   1334c:	mov	r3, #0
   13350:	str	r3, [r2, #12]
   13354:	ldr	r1, [sp, #20]
   13358:	str	r1, [r2, #16]
   1335c:	ldr	r1, [sp, #24]
   13360:	str	r1, [r2, #20]
   13364:	str	r3, [r2, #24]
   13368:	str	r3, [r2, #32]
   1336c:	str	r3, [r2, #28]
   13370:	cmp	sl, r3
   13374:	beq	133ac <__assert_fail@plt+0x1e3c>
   13378:	ldr	r3, [sl]
   1337c:	cmp	r3, #0
   13380:	beq	13410 <__assert_fail@plt+0x1ea0>
   13384:	mov	r3, #0
   13388:	add	r3, r3, #1
   1338c:	ldr	r2, [sl, r3, lsl #4]
   13390:	cmp	r2, #0
   13394:	bne	13388 <__assert_fail@plt+0x1e18>
   13398:	ldr	r2, [r8, #12]
   1339c:	ldr	r1, [sp, #8]
   133a0:	str	r2, [r1, #28]
   133a4:	add	r3, r2, r3, lsl #2
   133a8:	str	r3, [r8, #12]
   133ac:	ldr	r3, [sp, #8]
   133b0:	add	r0, r3, #36	; 0x24
   133b4:	cmp	sl, #0
   133b8:	beq	133f4 <__assert_fail@plt+0x1e84>
   133bc:	ldr	ip, [sl]
   133c0:	cmp	ip, #0
   133c4:	beq	133f4 <__assert_fail@plt+0x1e84>
   133c8:	mov	r2, #0
   133cc:	add	r4, r2, #1
   133d0:	str	r8, [sp]
   133d4:	mov	r3, r0
   133d8:	ldr	r1, [sp, #8]
   133dc:	mov	r0, ip
   133e0:	bl	1310c <__assert_fail@plt+0x1b9c>
   133e4:	ldr	ip, [sl, r4, lsl #4]
   133e8:	mov	r2, r4
   133ec:	cmp	ip, #0
   133f0:	bne	133cc <__assert_fail@plt+0x1e5c>
   133f4:	add	sp, sp, #36	; 0x24
   133f8:	ldrd	r4, [sp]
   133fc:	ldrd	r6, [sp, #8]
   13400:	ldrd	r8, [sp, #16]
   13404:	ldrd	sl, [sp, #24]
   13408:	add	sp, sp, #32
   1340c:	pop	{pc}		; (ldr pc, [sp], #4)
   13410:	mov	r3, #0
   13414:	b	13398 <__assert_fail@plt+0x1e28>

00013418 <argp_parse@@Base>:
   13418:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1341c:	strd	r6, [sp, #8]
   13420:	strd	r8, [sp, #16]
   13424:	strd	sl, [sp, #24]
   13428:	str	lr, [sp, #32]
   1342c:	add	fp, sp, #32
   13430:	sub	sp, sp, #228	; 0xe4
   13434:	mov	r8, r0
   13438:	str	r1, [fp, #-240]	; 0xffffff10
   1343c:	str	r2, [fp, #-232]	; 0xffffff18
   13440:	mov	r7, r3
   13444:	tst	r3, #1
   13448:	bne	13474 <argp_parse@@Base+0x5c>
   1344c:	movw	r3, #45796	; 0xb2e4
   13450:	movt	r3, #2
   13454:	ldr	r3, [r3]
   13458:	cmp	r3, #0
   1345c:	beq	134cc <argp_parse@@Base+0xb4>
   13460:	movw	r3, #45792	; 0xb2e0
   13464:	movt	r3, #2
   13468:	ldr	r3, [r3]
   1346c:	cmp	r3, #0
   13470:	beq	134e0 <argp_parse@@Base+0xc8>
   13474:	tst	r7, #16
   13478:	beq	134fc <argp_parse@@Base+0xe4>
   1347c:	str	r7, [fp, #-244]	; 0xffffff0c
   13480:	mov	r3, #0
   13484:	str	r3, [fp, #-188]	; 0xffffff44
   13488:	str	r3, [fp, #-184]	; 0xffffff48
   1348c:	str	r3, [fp, #-180]	; 0xffffff4c
   13490:	str	r3, [fp, #-176]	; 0xffffff50
   13494:	str	r3, [fp, #-172]	; 0xffffff54
   13498:	str	r3, [fp, #-168]	; 0xffffff58
   1349c:	str	r3, [fp, #-164]	; 0xffffff5c
   134a0:	ands	r2, r7, #4
   134a4:	str	r2, [fp, #-248]	; 0xffffff08
   134a8:	moveq	r2, #1
   134ac:	movne	r2, r3
   134b0:	str	r2, [fp, #-228]	; 0xffffff1c
   134b4:	str	r3, [fp, #-224]	; 0xffffff20
   134b8:	str	r3, [fp, #-220]	; 0xffffff24
   134bc:	str	r3, [fp, #-216]	; 0xffffff28
   134c0:	cmp	r8, r3
   134c4:	beq	135c8 <argp_parse@@Base+0x1b0>
   134c8:	b	135bc <argp_parse@@Base+0x1a4>
   134cc:	ldr	r2, [r2]
   134d0:	movw	r3, #45796	; 0xb2e4
   134d4:	movt	r3, #2
   134d8:	str	r2, [r3]
   134dc:	b	13460 <argp_parse@@Base+0x48>
   134e0:	ldr	r3, [fp, #-232]	; 0xffffff18
   134e4:	ldr	r0, [r3]
   134e8:	bl	1402c <argp_parse@@Base+0xc14>
   134ec:	movw	r3, #45792	; 0xb2e0
   134f0:	movt	r3, #2
   134f4:	str	r0, [r3]
   134f8:	b	13474 <argp_parse@@Base+0x5c>
   134fc:	sub	sp, sp, #64	; 0x40
   13500:	add	r5, sp, #8
   13504:	sub	sp, sp, #32
   13508:	add	r4, sp, #8
   1350c:	mov	r1, #0
   13510:	str	r1, [r4]
   13514:	str	r1, [r4, #4]
   13518:	str	r1, [r4, #8]
   1351c:	str	r1, [r4, #12]
   13520:	str	r1, [r4, #20]
   13524:	str	r1, [r4, #24]
   13528:	str	r5, [r4, #16]
   1352c:	mov	r2, #64	; 0x40
   13530:	mov	r0, r5
   13534:	bl	113fc <memset@plt>
   13538:	cmp	r8, #0
   1353c:	mov	r0, r5
   13540:	strne	r8, [r0], #16
   13544:	movw	r3, #39496	; 0x9a48
   13548:	movt	r3, #1
   1354c:	str	r3, [r0]
   13550:	movw	r3, #49732	; 0xc244
   13554:	movt	r3, #2
   13558:	ldr	r3, [r3]
   1355c:	cmp	r3, #0
   13560:	beq	13788 <argp_parse@@Base+0x370>
   13564:	add	r2, r0, #32
   13568:	ldr	r3, [pc, #2548]	; 13f64 <argp_parse@@Base+0xb4c>
   1356c:	str	r3, [r0, #16]
   13570:	mov	r3, #0
   13574:	str	r3, [r2]
   13578:	str	r7, [fp, #-244]	; 0xffffff0c
   1357c:	str	r3, [fp, #-188]	; 0xffffff44
   13580:	str	r3, [fp, #-184]	; 0xffffff48
   13584:	str	r3, [fp, #-180]	; 0xffffff4c
   13588:	str	r3, [fp, #-176]	; 0xffffff50
   1358c:	str	r3, [fp, #-172]	; 0xffffff54
   13590:	str	r3, [fp, #-168]	; 0xffffff58
   13594:	str	r3, [fp, #-164]	; 0xffffff5c
   13598:	ands	r2, r7, #4
   1359c:	str	r2, [fp, #-248]	; 0xffffff08
   135a0:	moveq	r2, #1
   135a4:	movne	r2, r3
   135a8:	str	r2, [fp, #-228]	; 0xffffff1c
   135ac:	str	r3, [fp, #-224]	; 0xffffff20
   135b0:	str	r3, [fp, #-220]	; 0xffffff24
   135b4:	str	r3, [fp, #-216]	; 0xffffff28
   135b8:	mov	r8, r4
   135bc:	sub	r1, fp, #228	; 0xe4
   135c0:	mov	r0, r8
   135c4:	bl	12e4c <__assert_fail@plt+0x18dc>
   135c8:	ldr	r4, [fp, #-220]	; 0xffffff24
   135cc:	add	r4, r4, #1
   135d0:	add	r4, r4, r4, lsl #3
   135d4:	lsl	r4, r4, #2
   135d8:	ldr	r3, [fp, #-216]	; 0xffffff28
   135dc:	lsl	r3, r3, #2
   135e0:	str	r3, [fp, #-236]	; 0xffffff14
   135e4:	add	r9, r3, r4
   135e8:	ldr	r5, [fp, #-224]	; 0xffffff20
   135ec:	add	r5, r5, #1
   135f0:	add	r5, r9, r5, lsl #4
   135f4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   135f8:	add	r0, r0, #1
   135fc:	add	r0, r0, r5
   13600:	bl	14c90 <argp_parse@@Base+0x1878>
   13604:	mov	r6, r0
   13608:	str	r0, [fp, #-40]	; 0xffffffd8
   1360c:	cmp	r0, #0
   13610:	moveq	r4, #12
   13614:	beq	13d84 <argp_parse@@Base+0x96c>
   13618:	str	r0, [fp, #-112]	; 0xffffff90
   1361c:	add	r4, r0, r4
   13620:	str	r4, [fp, #-104]	; 0xffffff98
   13624:	add	r9, r0, r9
   13628:	str	r9, [fp, #-152]	; 0xffffff68
   1362c:	add	sl, r0, r5
   13630:	str	sl, [fp, #-156]	; 0xffffff64
   13634:	mov	r3, #1
   13638:	str	r3, [fp, #-196]	; 0xffffff3c
   1363c:	str	r3, [fp, #-192]	; 0xffffff40
   13640:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13644:	strd	r2, [fp, #-148]	; 0xffffff6c
   13648:	ldrd	r2, [fp, #-188]	; 0xffffff44
   1364c:	strd	r2, [fp, #-140]	; 0xffffff74
   13650:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   13654:	strd	r2, [fp, #-132]	; 0xffffff7c
   13658:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1365c:	strd	r2, [fp, #-124]	; 0xffffff84
   13660:	ldr	r3, [fp, #-164]	; 0xffffff5c
   13664:	str	r3, [fp, #-116]	; 0xffffff8c
   13668:	ldr	r2, [fp, #-236]	; 0xffffff14
   1366c:	mov	r1, #0
   13670:	mov	r0, r4
   13674:	bl	113fc <memset@plt>
   13678:	sub	r3, fp, #160	; 0xa0
   1367c:	str	r3, [fp, #-212]	; 0xffffff2c
   13680:	str	sl, [fp, #-208]	; 0xffffff30
   13684:	str	r9, [fp, #-204]	; 0xffffff34
   13688:	str	r4, [fp, #-200]	; 0xffffff38
   1368c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   13690:	tst	r3, #8
   13694:	beq	137a4 <argp_parse@@Base+0x38c>
   13698:	add	sl, sl, #1
   1369c:	str	sl, [fp, #-208]	; 0xffffff30
   136a0:	mov	r3, #45	; 0x2d
   136a4:	strb	r3, [r6, r5]
   136a8:	mov	r3, #0
   136ac:	ldr	r2, [fp, #-208]	; 0xffffff30
   136b0:	strb	r3, [r2]
   136b4:	ldr	r2, [fp, #-204]	; 0xffffff34
   136b8:	str	r3, [r2]
   136bc:	str	r8, [fp, #-160]	; 0xffffff60
   136c0:	cmp	r8, r3
   136c4:	beq	137c4 <argp_parse@@Base+0x3ac>
   136c8:	sub	r3, fp, #212	; 0xd4
   136cc:	str	r3, [sp]
   136d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   136d4:	mov	r2, #0
   136d8:	mov	r1, r2
   136dc:	mov	r0, r8
   136e0:	bl	1310c <__assert_fail@plt+0x1b9c>
   136e4:	str	r0, [fp, #-108]	; 0xffffff94
   136e8:	mov	r2, #0
   136ec:	mov	r3, #0
   136f0:	strd	r2, [fp, #-76]	; 0xffffffb4
   136f4:	strd	r2, [fp, #-68]	; 0xffffffbc
   136f8:	strd	r2, [fp, #-60]	; 0xffffffc4
   136fc:	ldr	r3, [fp, #-160]	; 0xffffff60
   13700:	str	r3, [fp, #-96]	; 0xffffffa0
   13704:	ldr	r3, [fp, #-240]	; 0xffffff10
   13708:	str	r3, [fp, #-92]	; 0xffffffa4
   1370c:	ldr	r3, [fp, #-232]	; 0xffffff18
   13710:	str	r3, [fp, #-88]	; 0xffffffa8
   13714:	str	r7, [fp, #-80]	; 0xffffffb0
   13718:	movw	r3, #45800	; 0xb2e8
   1371c:	movt	r3, #2
   13720:	ldr	r3, [r3]
   13724:	str	r3, [fp, #-52]	; 0xffffffcc
   13728:	movw	r3, #45804	; 0xb2ec
   1372c:	movt	r3, #2
   13730:	ldr	r3, [r3]
   13734:	str	r3, [fp, #-48]	; 0xffffffd0
   13738:	mov	r3, #0
   1373c:	str	r3, [fp, #-84]	; 0xffffffac
   13740:	sub	r3, fp, #160	; 0xa0
   13744:	str	r3, [fp, #-44]	; 0xffffffd4
   13748:	mov	r3, #1
   1374c:	str	r3, [fp, #-100]	; 0xffffff9c
   13750:	ldr	r3, [fp, #-112]	; 0xffffff90
   13754:	ldr	r2, [fp, #-108]	; 0xffffff94
   13758:	cmp	r3, r2
   1375c:	bcs	13870 <argp_parse@@Base+0x458>
   13760:	ldr	r2, [fp, #8]
   13764:	str	r2, [r3, #24]
   13768:	ldr	r5, [fp, #-112]	; 0xffffff90
   1376c:	ldr	r3, [fp, #-108]	; 0xffffff94
   13770:	cmp	r5, r3
   13774:	bcs	13870 <argp_parse@@Base+0x458>
   13778:	mov	r6, #3
   1377c:	movt	r6, #256	; 0x100
   13780:	mov	r7, #0
   13784:	b	1380c <argp_parse@@Base+0x3f4>
   13788:	movw	r3, #48236	; 0xbc6c
   1378c:	movt	r3, #2
   13790:	ldr	r3, [r3]
   13794:	cmp	r3, #0
   13798:	addeq	r2, r0, #16
   1379c:	bne	13564 <argp_parse@@Base+0x14c>
   137a0:	b	13570 <argp_parse@@Base+0x158>
   137a4:	ldr	r3, [fp, #-248]	; 0xffffff08
   137a8:	cmp	r3, #0
   137ac:	beq	136a8 <argp_parse@@Base+0x290>
   137b0:	add	sl, sl, #1
   137b4:	str	sl, [fp, #-208]	; 0xffffff30
   137b8:	mov	r3, #43	; 0x2b
   137bc:	strb	r3, [r6, r5]
   137c0:	b	136a8 <argp_parse@@Base+0x290>
   137c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   137c8:	str	r3, [fp, #-108]	; 0xffffff94
   137cc:	b	136e8 <argp_parse@@Base+0x2d0>
   137d0:	ldr	r3, [r5]
   137d4:	cmp	r3, #0
   137d8:	beq	1382c <argp_parse@@Base+0x414>
   137dc:	mov	r3, r7
   137e0:	mov	r2, r6
   137e4:	sub	r1, fp, #96	; 0x60
   137e8:	mov	r0, r5
   137ec:	bl	12dd4 <__assert_fail@plt+0x1864>
   137f0:	add	r5, r5, #36	; 0x24
   137f4:	ldr	r3, [fp, #-108]	; 0xffffff94
   137f8:	cmp	r5, r3
   137fc:	bcs	13860 <argp_parse@@Base+0x448>
   13800:	cmp	r0, #7
   13804:	cmpne	r0, #0
   13808:	bne	13858 <argp_parse@@Base+0x440>
   1380c:	ldr	r3, [r5, #16]
   13810:	cmp	r3, #0
   13814:	beq	137d0 <argp_parse@@Base+0x3b8>
   13818:	ldr	r2, [r5, #20]
   1381c:	ldr	r3, [r3, #28]
   13820:	ldr	r3, [r3, r2, lsl #2]
   13824:	str	r3, [r5, #24]
   13828:	b	137d0 <argp_parse@@Base+0x3b8>
   1382c:	ldr	r3, [r5, #4]
   13830:	ldr	r3, [r3, #16]
   13834:	cmp	r3, #0
   13838:	beq	137dc <argp_parse@@Base+0x3c4>
   1383c:	ldr	r3, [r3]
   13840:	cmp	r3, #0
   13844:	beq	137dc <argp_parse@@Base+0x3c4>
   13848:	ldr	r3, [r5, #28]
   1384c:	ldr	r2, [r5, #24]
   13850:	str	r2, [r3]
   13854:	b	137dc <argp_parse@@Base+0x3c4>
   13858:	mov	r4, r0
   1385c:	b	13d84 <argp_parse@@Base+0x96c>
   13860:	mov	r4, r0
   13864:	cmp	r0, #7
   13868:	cmpne	r0, #0
   1386c:	bne	13d84 <argp_parse@@Base+0x96c>
   13870:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13874:	tst	r3, #2
   13878:	moveq	r3, #1
   1387c:	streq	r3, [fp, #-144]	; 0xffffff70
   13880:	beq	138ac <argp_parse@@Base+0x494>
   13884:	mov	r2, #0
   13888:	str	r2, [fp, #-144]	; 0xffffff70
   1388c:	tst	r3, #1
   13890:	beq	138ac <argp_parse@@Base+0x494>
   13894:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13898:	sub	r3, r3, #4
   1389c:	str	r3, [fp, #-88]	; 0xffffffa8
   138a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   138a4:	add	r3, r3, #1
   138a8:	str	r3, [fp, #-92]	; 0xffffffa4
   138ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   138b0:	ldr	r2, [fp, #-232]	; 0xffffff18
   138b4:	cmp	r2, r3
   138b8:	beq	138e0 <argp_parse@@Base+0x4c8>
   138bc:	movw	r3, #45792	; 0xb2e0
   138c0:	movt	r3, #2
   138c4:	ldr	r3, [r3]
   138c8:	str	r3, [fp, #-56]	; 0xffffffc8
   138cc:	movw	sl, #39824	; 0x9b90
   138d0:	movt	sl, #1
   138d4:	mov	r9, #6
   138d8:	movt	r9, #256	; 0x100
   138dc:	b	139a8 <argp_parse@@Base+0x590>
   138e0:	ldr	r0, [r2]
   138e4:	cmp	r0, #0
   138e8:	beq	138bc <argp_parse@@Base+0x4a4>
   138ec:	bl	1402c <argp_parse@@Base+0xc14>
   138f0:	str	r0, [fp, #-56]	; 0xffffffc8
   138f4:	b	138cc <argp_parse@@Base+0x4b4>
   138f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   138fc:	str	r3, [fp, #-148]	; 0xffffff6c
   13900:	mvn	r3, #0
   13904:	str	r3, [fp, #-140]	; 0xffffff74
   13908:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1390c:	tst	r3, #64	; 0x40
   13910:	beq	13a2c <argp_parse@@Base+0x614>
   13914:	sub	r3, fp, #148	; 0x94
   13918:	str	r3, [sp, #4]
   1391c:	mov	r3, #0
   13920:	str	r3, [sp]
   13924:	ldr	r3, [fp, #-152]	; 0xffffff68
   13928:	ldr	r2, [fp, #-156]	; 0xffffff64
   1392c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13930:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13934:	bl	141d4 <argp_parse@@Base+0xdbc>
   13938:	mov	r5, r0
   1393c:	ldr	r4, [fp, #-148]	; 0xffffff6c
   13940:	str	r4, [fp, #-84]	; 0xffffffac
   13944:	cmn	r5, #1
   13948:	beq	13a58 <argp_parse@@Base+0x640>
   1394c:	cmp	r5, #63	; 0x3f
   13950:	beq	13a88 <argp_parse@@Base+0x670>
   13954:	cmp	r5, #1
   13958:	beq	13a04 <argp_parse@@Base+0x5ec>
   1395c:	ldr	r4, [fp, #-136]	; 0xffffff78
   13960:	asrs	r3, r5, #24
   13964:	beq	13a98 <argp_parse@@Base+0x680>
   13968:	ands	r1, r5, #8388608	; 0x800000
   1396c:	movne	r1, #-16777216	; 0xff000000
   13970:	bic	r2, r5, #-16777216	; 0xff000000
   13974:	add	r0, r3, r3, lsl #3
   13978:	lsl	r0, r0, #2
   1397c:	sub	r0, r0, #36	; 0x24
   13980:	mov	r3, r4
   13984:	orr	r2, r2, r1
   13988:	sub	r1, fp, #96	; 0x60
   1398c:	ldr	ip, [fp, #-112]	; 0xffffff90
   13990:	add	r0, ip, r0
   13994:	bl	12dd4 <__assert_fail@plt+0x1864>
   13998:	cmp	r0, #7
   1399c:	beq	13c60 <argp_parse@@Base+0x848>
   139a0:	cmp	r0, #0
   139a4:	bne	13ce4 <argp_parse@@Base+0x8cc>
   139a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   139ac:	cmp	r3, #0
   139b0:	beq	139c8 <argp_parse@@Base+0x5b0>
   139b4:	ldr	r2, [fp, #-84]	; 0xffffffac
   139b8:	cmp	r3, r2
   139bc:	movgt	r3, #0
   139c0:	strgt	r3, [fp, #-72]	; 0xffffffb8
   139c4:	ble	139d4 <argp_parse@@Base+0x5bc>
   139c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   139cc:	cmp	r3, #0
   139d0:	bne	138f8 <argp_parse@@Base+0x4e0>
   139d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   139d8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   139dc:	cmp	r3, r2
   139e0:	bge	13f54 <argp_parse@@Base+0xb3c>
   139e4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   139e8:	tst	r2, #4
   139ec:	bne	13f5c <argp_parse@@Base+0xb44>
   139f0:	add	r2, r3, #1
   139f4:	str	r2, [fp, #-84]	; 0xffffffac
   139f8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   139fc:	ldr	r3, [r2, r3, lsl #2]
   13a00:	str	r3, [fp, #-136]	; 0xffffff78
   13a04:	ldr	r7, [fp, #-136]	; 0xffffff78
   13a08:	ldr	r4, [fp, #-84]	; 0xffffffac
   13a0c:	sub	r4, r4, #1
   13a10:	str	r4, [fp, #-84]	; 0xffffffac
   13a14:	ldr	r5, [fp, #-112]	; 0xffffff90
   13a18:	ldr	r3, [fp, #-108]	; 0xffffff94
   13a1c:	cmp	r3, r5
   13a20:	bls	13cdc <argp_parse@@Base+0x8c4>
   13a24:	mov	r6, #0
   13a28:	b	13b58 <argp_parse@@Base+0x740>
   13a2c:	sub	r3, fp, #148	; 0x94
   13a30:	str	r3, [sp, #4]
   13a34:	mov	r3, #0
   13a38:	str	r3, [sp]
   13a3c:	ldr	r3, [fp, #-152]	; 0xffffff68
   13a40:	ldr	r2, [fp, #-156]	; 0xffffff64
   13a44:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13a48:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13a4c:	bl	14178 <argp_parse@@Base+0xd60>
   13a50:	mov	r5, r0
   13a54:	b	1393c <argp_parse@@Base+0x524>
   13a58:	mov	r3, #0
   13a5c:	str	r3, [fp, #-100]	; 0xffffff9c
   13a60:	cmp	r4, #1
   13a64:	ble	139d4 <argp_parse@@Base+0x5bc>
   13a68:	sub	r3, r4, #-1073741823	; 0xc0000001
   13a6c:	mov	r1, sl
   13a70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13a74:	ldr	r0, [r2, r3, lsl #2]
   13a78:	bl	11210 <strcmp@plt>
   13a7c:	cmp	r0, #0
   13a80:	streq	r4, [fp, #-72]	; 0xffffffb8
   13a84:	b	139d4 <argp_parse@@Base+0x5bc>
   13a88:	ldr	r3, [fp, #-140]	; 0xffffff74
   13a8c:	cmn	r3, #1
   13a90:	bne	13f4c <argp_parse@@Base+0xb34>
   13a94:	ldr	r4, [fp, #-136]	; 0xffffff78
   13a98:	mov	r1, r5
   13a9c:	ldr	r0, [fp, #-156]	; 0xffffff64
   13aa0:	bl	113c0 <strchr@plt>
   13aa4:	subs	r1, r0, #0
   13aa8:	beq	13af8 <argp_parse@@Base+0x6e0>
   13aac:	ldr	r0, [fp, #-112]	; 0xffffff90
   13ab0:	ldr	r2, [fp, #-108]	; 0xffffff94
   13ab4:	cmp	r2, r0
   13ab8:	bls	13af8 <argp_parse@@Base+0x6e0>
   13abc:	ldr	r3, [r0, #8]
   13ac0:	cmp	r1, r3
   13ac4:	bcc	13ae0 <argp_parse@@Base+0x6c8>
   13ac8:	add	r0, r0, #36	; 0x24
   13acc:	cmp	r2, r0
   13ad0:	bls	13af8 <argp_parse@@Base+0x6e0>
   13ad4:	ldr	r3, [r0, #8]
   13ad8:	cmp	r1, r3
   13adc:	bcs	13ac8 <argp_parse@@Base+0x6b0>
   13ae0:	mov	r3, r4
   13ae4:	mov	r2, r5
   13ae8:	sub	r1, fp, #96	; 0x60
   13aec:	bl	12dd4 <__assert_fail@plt+0x1864>
   13af0:	cmp	r0, #7
   13af4:	bne	139a0 <argp_parse@@Base+0x588>
   13af8:	ldr	r3, [pc, #1128]	; 13f68 <argp_parse@@Base+0xb50>
   13afc:	mov	r2, r5
   13b00:	movw	r1, #39828	; 0x9b94
   13b04:	movt	r1, #1
   13b08:	sub	r0, fp, #96	; 0x60
   13b0c:	bl	18014 <argp_error@@Base>
   13b10:	b	13b98 <argp_parse@@Base+0x780>
   13b14:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b18:	sub	r3, r3, #1
   13b1c:	str	r3, [fp, #-84]	; 0xffffffac
   13b20:	mov	r3, r6
   13b24:	mov	r2, r9
   13b28:	sub	r1, fp, #96	; 0x60
   13b2c:	mov	r0, r5
   13b30:	bl	12dd4 <__assert_fail@plt+0x1864>
   13b34:	add	r5, r5, #36	; 0x24
   13b38:	ldr	r2, [fp, #-108]	; 0xffffff94
   13b3c:	cmp	r5, r2
   13b40:	movcs	r3, #0
   13b44:	movcc	r3, #1
   13b48:	cmp	r0, #7
   13b4c:	movne	r3, #0
   13b50:	cmp	r3, #0
   13b54:	beq	13c28 <argp_parse@@Base+0x810>
   13b58:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b5c:	add	r3, r3, #1
   13b60:	str	r3, [fp, #-84]	; 0xffffffac
   13b64:	mov	r3, r7
   13b68:	mov	r2, r6
   13b6c:	sub	r1, fp, #96	; 0x60
   13b70:	mov	r0, r5
   13b74:	bl	12dd4 <__assert_fail@plt+0x1864>
   13b78:	cmp	r0, #7
   13b7c:	beq	13b14 <argp_parse@@Base+0x6fc>
   13b80:	add	r5, r5, #36	; 0x24
   13b84:	cmp	r0, #0
   13b88:	beq	13c38 <argp_parse@@Base+0x820>
   13b8c:	cmp	r0, #7
   13b90:	bne	139a0 <argp_parse@@Base+0x588>
   13b94:	mov	r5, #1
   13b98:	add	r5, r5, #1
   13b9c:	bics	r3, r5, #2
   13ba0:	moveq	r3, #1
   13ba4:	movne	r3, #0
   13ba8:	cmp	r3, #0
   13bac:	beq	13ef0 <argp_parse@@Base+0xad8>
   13bb0:	ldr	r3, [fp, #-84]	; 0xffffffac
   13bb4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13bb8:	cmp	r3, r2
   13bbc:	beq	13da4 <argp_parse@@Base+0x98c>
   13bc0:	ldr	r2, [fp, #4]
   13bc4:	cmp	r2, #0
   13bc8:	strne	r3, [r2]
   13bcc:	beq	13ec8 <argp_parse@@Base+0xab0>
   13bd0:	ldr	r5, [fp, #-108]	; 0xffffff94
   13bd4:	sub	r5, r5, #36	; 0x24
   13bd8:	ldr	r3, [fp, #-112]	; 0xffffff90
   13bdc:	cmp	r5, r3
   13be0:	bcc	13f30 <argp_parse@@Base+0xb18>
   13be4:	mov	r6, #4
   13be8:	movt	r6, #256	; 0x100
   13bec:	mov	r7, #0
   13bf0:	mov	r3, r7
   13bf4:	mov	r2, r6
   13bf8:	sub	r1, fp, #96	; 0x60
   13bfc:	mov	r0, r5
   13c00:	bl	12dd4 <__assert_fail@plt+0x1864>
   13c04:	sub	r5, r5, #36	; 0x24
   13c08:	ldr	r3, [fp, #-112]	; 0xffffff90
   13c0c:	cmp	r5, r3
   13c10:	bcc	13f08 <argp_parse@@Base+0xaf0>
   13c14:	cmp	r0, #7
   13c18:	cmpne	r0, #0
   13c1c:	beq	13bf0 <argp_parse@@Base+0x7d8>
   13c20:	mov	r4, r0
   13c24:	b	13f18 <argp_parse@@Base+0xb00>
   13c28:	cmp	r0, #0
   13c2c:	bne	13b8c <argp_parse@@Base+0x774>
   13c30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c34:	str	r3, [fp, #-84]	; 0xffffffac
   13c38:	ldr	r3, [fp, #-84]	; 0xffffffac
   13c3c:	cmp	r4, r3
   13c40:	movge	r3, #1
   13c44:	strge	r3, [fp, #-100]	; 0xffffff9c
   13c48:	bge	139a8 <argp_parse@@Base+0x590>
   13c4c:	sub	r4, r3, r4
   13c50:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13c54:	add	r4, r3, r4
   13c58:	str	r4, [r5, #-24]	; 0xffffffe8
   13c5c:	b	139a8 <argp_parse@@Base+0x590>
   13c60:	ldr	r3, [fp, #-152]	; 0xffffff68
   13c64:	ldr	r2, [r3, #12]
   13c68:	cmp	r2, r5
   13c6c:	beq	13ca4 <argp_parse@@Base+0x88c>
   13c70:	ldr	r2, [r3]
   13c74:	cmp	r2, #0
   13c78:	beq	13cd0 <argp_parse@@Base+0x8b8>
   13c7c:	add	r3, r3, #16
   13c80:	ldr	r2, [r3, #12]
   13c84:	cmp	r5, r2
   13c88:	beq	13ca4 <argp_parse@@Base+0x88c>
   13c8c:	ldr	r2, [r3]
   13c90:	cmp	r2, #0
   13c94:	bne	13c7c <argp_parse@@Base+0x864>
   13c98:	movw	r2, #39820	; 0x9b8c
   13c9c:	movt	r2, #1
   13ca0:	b	13cb8 <argp_parse@@Base+0x8a0>
   13ca4:	ldr	r2, [r3]
   13ca8:	movw	r3, #39820	; 0x9b8c
   13cac:	movt	r3, #1
   13cb0:	cmp	r2, #0
   13cb4:	moveq	r2, r3
   13cb8:	ldr	r3, [pc, #680]	; 13f68 <argp_parse@@Base+0xb50>
   13cbc:	movw	r1, #39836	; 0x9b9c
   13cc0:	movt	r1, #1
   13cc4:	sub	r0, fp, #96	; 0x60
   13cc8:	bl	18014 <argp_error@@Base>
   13ccc:	b	13b98 <argp_parse@@Base+0x780>
   13cd0:	movw	r2, #39820	; 0x9b8c
   13cd4:	movt	r2, #1
   13cd8:	b	13cb8 <argp_parse@@Base+0x8a0>
   13cdc:	mov	r5, #1
   13ce0:	b	13b98 <argp_parse@@Base+0x780>
   13ce4:	mov	r4, r0
   13ce8:	cmp	r4, #7
   13cec:	beq	13ef0 <argp_parse@@Base+0xad8>
   13cf0:	ldr	r5, [fp, #-112]	; 0xffffff90
   13cf4:	ldr	r3, [fp, #-108]	; 0xffffff94
   13cf8:	cmp	r5, r3
   13cfc:	bcs	13d30 <argp_parse@@Base+0x918>
   13d00:	mov	r6, #5
   13d04:	movt	r6, #256	; 0x100
   13d08:	mov	r7, #0
   13d0c:	mov	r3, r7
   13d10:	mov	r2, r6
   13d14:	sub	r1, fp, #96	; 0x60
   13d18:	mov	r0, r5
   13d1c:	bl	12dd4 <__assert_fail@plt+0x1864>
   13d20:	add	r5, r5, #36	; 0x24
   13d24:	ldr	r3, [fp, #-108]	; 0xffffff94
   13d28:	cmp	r5, r3
   13d2c:	bcc	13d0c <argp_parse@@Base+0x8f4>
   13d30:	ldr	r5, [fp, #-108]	; 0xffffff94
   13d34:	sub	r5, r5, #36	; 0x24
   13d38:	ldr	r3, [fp, #-112]	; 0xffffff90
   13d3c:	cmp	r3, r5
   13d40:	bhi	13d74 <argp_parse@@Base+0x95c>
   13d44:	mov	r6, #7
   13d48:	movt	r6, #256	; 0x100
   13d4c:	mov	r7, #0
   13d50:	mov	r3, r7
   13d54:	mov	r2, r6
   13d58:	sub	r1, fp, #96	; 0x60
   13d5c:	mov	r0, r5
   13d60:	bl	12dd4 <__assert_fail@plt+0x1864>
   13d64:	sub	r5, r5, #36	; 0x24
   13d68:	ldr	r3, [fp, #-112]	; 0xffffff90
   13d6c:	cmp	r5, r3
   13d70:	bcs	13d50 <argp_parse@@Base+0x938>
   13d74:	cmp	r4, #7
   13d78:	moveq	r4, #22
   13d7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d80:	bl	140f0 <argp_parse@@Base+0xcd8>
   13d84:	mov	r0, r4
   13d88:	sub	sp, fp, #32
   13d8c:	ldrd	r4, [sp]
   13d90:	ldrd	r6, [sp, #8]
   13d94:	ldrd	r8, [sp, #16]
   13d98:	ldrd	sl, [sp, #24]
   13d9c:	add	sp, sp, #32
   13da0:	pop	{pc}		; (ldr pc, [sp], #4)
   13da4:	ldr	r6, [fp, #-112]	; 0xffffff90
   13da8:	ldr	r5, [fp, #-108]	; 0xffffff94
   13dac:	cmp	r5, r6
   13db0:	bls	13f38 <argp_parse@@Base+0xb20>
   13db4:	mov	r4, #0
   13db8:	mov	r7, #2
   13dbc:	movt	r7, #256	; 0x100
   13dc0:	mov	r8, r4
   13dc4:	mov	r0, r4
   13dc8:	b	13de8 <argp_parse@@Base+0x9d0>
   13dcc:	add	r6, r6, #36	; 0x24
   13dd0:	ldr	r5, [fp, #-108]	; 0xffffff94
   13dd4:	cmp	r6, r5
   13dd8:	bcs	13e24 <argp_parse@@Base+0xa0c>
   13ddc:	cmp	r0, #7
   13de0:	cmpne	r0, #0
   13de4:	bne	13e0c <argp_parse@@Base+0x9f4>
   13de8:	ldr	r3, [r6, #12]
   13dec:	cmp	r3, #0
   13df0:	bne	13dcc <argp_parse@@Base+0x9b4>
   13df4:	mov	r3, r8
   13df8:	mov	r2, r7
   13dfc:	sub	r1, fp, #96	; 0x60
   13e00:	mov	r0, r6
   13e04:	bl	12dd4 <__assert_fail@plt+0x1864>
   13e08:	b	13dcc <argp_parse@@Base+0x9b4>
   13e0c:	mov	r4, r0
   13e10:	sub	r5, r5, #36	; 0x24
   13e14:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e18:	cmp	r3, r5
   13e1c:	bls	13e38 <argp_parse@@Base+0xa20>
   13e20:	b	13e84 <argp_parse@@Base+0xa6c>
   13e24:	mov	r4, r0
   13e28:	sub	r5, r5, #36	; 0x24
   13e2c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e30:	cmp	r3, r5
   13e34:	bhi	13eac <argp_parse@@Base+0xa94>
   13e38:	cmp	r4, #7
   13e3c:	cmpne	r4, #0
   13e40:	bne	13e84 <argp_parse@@Base+0xa6c>
   13e44:	mov	r6, #1
   13e48:	movt	r6, #256	; 0x100
   13e4c:	mov	r7, #0
   13e50:	mov	r3, r7
   13e54:	mov	r2, r6
   13e58:	sub	r1, fp, #96	; 0x60
   13e5c:	mov	r0, r5
   13e60:	bl	12dd4 <__assert_fail@plt+0x1864>
   13e64:	sub	r5, r5, #36	; 0x24
   13e68:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e6c:	cmp	r5, r3
   13e70:	bcc	13ea8 <argp_parse@@Base+0xa90>
   13e74:	cmp	r0, #7
   13e78:	cmpne	r0, #0
   13e7c:	beq	13e50 <argp_parse@@Base+0xa38>
   13e80:	mov	r4, r0
   13e84:	ldr	r3, [fp, #4]
   13e88:	cmp	r3, #0
   13e8c:	beq	13e9c <argp_parse@@Base+0xa84>
   13e90:	ldr	r3, [fp, #-84]	; 0xffffffac
   13e94:	ldr	r2, [fp, #4]
   13e98:	str	r3, [r2]
   13e9c:	cmp	r4, #0
   13ea0:	beq	13bd0 <argp_parse@@Base+0x7b8>
   13ea4:	b	13ce8 <argp_parse@@Base+0x8d0>
   13ea8:	mov	r4, r0
   13eac:	cmp	r4, #7
   13eb0:	bne	13e84 <argp_parse@@Base+0xa6c>
   13eb4:	ldr	r3, [fp, #4]
   13eb8:	cmp	r3, #0
   13ebc:	movne	r4, #0
   13ec0:	bne	13e90 <argp_parse@@Base+0xa78>
   13ec4:	b	13bd0 <argp_parse@@Base+0x7b8>
   13ec8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ecc:	tst	r3, #2
   13ed0:	bne	13ef0 <argp_parse@@Base+0xad8>
   13ed4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13ed8:	cmp	r0, #0
   13edc:	beq	13ef0 <argp_parse@@Base+0xad8>
   13ee0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13ee4:	movw	r1, #39848	; 0x9ba8
   13ee8:	movt	r1, #1
   13eec:	bl	113cc <fprintf@plt>
   13ef0:	mov	r2, #260	; 0x104
   13ef4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ef8:	sub	r0, fp, #96	; 0x60
   13efc:	bl	17f4c <argp_state_help@@Base>
   13f00:	mov	r4, #7
   13f04:	b	13cf0 <argp_parse@@Base+0x8d8>
   13f08:	mov	r4, r0
   13f0c:	cmp	r0, #7
   13f10:	movne	r4, r0
   13f14:	moveq	r4, #0
   13f18:	ldr	r5, [fp, #-108]	; 0xffffff94
   13f1c:	sub	r5, r5, #36	; 0x24
   13f20:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f24:	cmp	r3, r5
   13f28:	bls	13d44 <argp_parse@@Base+0x92c>
   13f2c:	b	13d7c <argp_parse@@Base+0x964>
   13f30:	mov	r4, #0
   13f34:	b	13d7c <argp_parse@@Base+0x964>
   13f38:	sub	r5, r5, #36	; 0x24
   13f3c:	cmp	r5, r6
   13f40:	movcc	r4, #0
   13f44:	bcs	13e44 <argp_parse@@Base+0xa2c>
   13f48:	b	13e84 <argp_parse@@Base+0xa6c>
   13f4c:	mov	r3, #0
   13f50:	b	13ba8 <argp_parse@@Base+0x790>
   13f54:	mov	r3, #1
   13f58:	b	13ba8 <argp_parse@@Base+0x790>
   13f5c:	mov	r3, #1
   13f60:	b	13ba8 <argp_parse@@Base+0x790>
   13f64:	andeq	r9, r1, r4, ror #20
   13f68:	andeq	r9, r1, r0, lsl #21
   13f6c:	cmp	r1, #0
   13f70:	beq	13fbc <argp_parse@@Base+0xba4>
   13f74:	ldr	r2, [r1, #52]	; 0x34
   13f78:	ldr	r3, [r2, #48]	; 0x30
   13f7c:	ldr	r1, [r2, #52]	; 0x34
   13f80:	cmp	r3, r1
   13f84:	bcs	13fc4 <argp_parse@@Base+0xbac>
   13f88:	ldr	r2, [r3, #4]
   13f8c:	cmp	r0, r2
   13f90:	beq	13fac <argp_parse@@Base+0xb94>
   13f94:	add	r3, r3, #36	; 0x24
   13f98:	cmp	r3, r1
   13f9c:	bcs	13fb4 <argp_parse@@Base+0xb9c>
   13fa0:	ldr	r2, [r3, #4]
   13fa4:	cmp	r2, r0
   13fa8:	bne	13f94 <argp_parse@@Base+0xb7c>
   13fac:	ldr	r0, [r3, #24]
   13fb0:	bx	lr
   13fb4:	mov	r0, #0
   13fb8:	bx	lr
   13fbc:	mov	r0, r1
   13fc0:	bx	lr
   13fc4:	mov	r0, #0
   13fc8:	bx	lr
   13fcc:	push	{lr}		; (str lr, [sp, #-4]!)
   13fd0:	sub	sp, sp, #12
   13fd4:	movw	r1, #48240	; 0xbc70
   13fd8:	movt	r1, #2
   13fdc:	ldr	r3, [r1, #4]
   13fe0:	str	r3, [sp]
   13fe4:	movw	r3, #40080	; 0x9c90
   13fe8:	movt	r3, #1
   13fec:	movw	r2, #40096	; 0x9ca0
   13ff0:	movt	r2, #1
   13ff4:	ldr	r1, [r1]
   13ff8:	bl	14610 <argp_parse@@Base+0x11f8>
   13ffc:	add	sp, sp, #12
   14000:	pop	{pc}		; (ldr pc, [sp], #4)
   14004:	movw	r3, #48236	; 0xbc6c
   14008:	movt	r3, #2
   1400c:	movw	r2, #16332	; 0x3fcc
   14010:	movt	r2, #1
   14014:	str	r2, [r3]
   14018:	movw	r3, #48240	; 0xbc70
   1401c:	movt	r3, #2
   14020:	str	r0, [r3]
   14024:	str	r1, [r3, #4]
   14028:	bx	lr
   1402c:	ldrb	r3, [r0]
   14030:	cmp	r3, #47	; 0x2f
   14034:	bne	14044 <argp_parse@@Base+0xc2c>
   14038:	ldrb	r3, [r0, #1]!
   1403c:	cmp	r3, #47	; 0x2f
   14040:	beq	14038 <argp_parse@@Base+0xc20>
   14044:	ldrb	r2, [r0]
   14048:	cmp	r2, #0
   1404c:	bxeq	lr
   14050:	push	{lr}		; (str lr, [sp, #-4]!)
   14054:	mov	r1, r0
   14058:	mov	r3, #0
   1405c:	mov	lr, #1
   14060:	mov	ip, r3
   14064:	b	14080 <argp_parse@@Base+0xc68>
   14068:	cmp	r3, #0
   1406c:	movne	r0, r1
   14070:	movne	r3, ip
   14074:	ldrb	r2, [r1, #1]!
   14078:	cmp	r2, #0
   1407c:	beq	14090 <argp_parse@@Base+0xc78>
   14080:	cmp	r2, #47	; 0x2f
   14084:	moveq	r3, lr
   14088:	bne	14068 <argp_parse@@Base+0xc50>
   1408c:	b	14074 <argp_parse@@Base+0xc5c>
   14090:	pop	{pc}		; (ldr pc, [sp], #4)
   14094:	str	r4, [sp, #-8]!
   14098:	str	lr, [sp, #4]
   1409c:	mov	r4, r0
   140a0:	bl	113b4 <strlen@plt>
   140a4:	cmp	r0, #1
   140a8:	bls	140c8 <argp_parse@@Base+0xcb0>
   140ac:	add	r3, r4, r0
   140b0:	ldrb	r3, [r3, #-1]
   140b4:	cmp	r3, #47	; 0x2f
   140b8:	subeq	r0, r0, #2
   140bc:	addeq	r3, r4, r0
   140c0:	rsbeq	r1, r4, #1
   140c4:	beq	140d4 <argp_parse@@Base+0xcbc>
   140c8:	ldr	r4, [sp]
   140cc:	add	sp, sp, #4
   140d0:	pop	{pc}		; (ldr pc, [sp], #4)
   140d4:	add	r0, r1, r3
   140d8:	cmp	r3, r4
   140dc:	beq	140c8 <argp_parse@@Base+0xcb0>
   140e0:	ldrb	r2, [r3], #-1
   140e4:	cmp	r2, #47	; 0x2f
   140e8:	bne	140c8 <argp_parse@@Base+0xcb0>
   140ec:	b	140d4 <argp_parse@@Base+0xcbc>
   140f0:	strd	r4, [sp, #-12]!
   140f4:	str	lr, [sp, #8]
   140f8:	sub	sp, sp, #12
   140fc:	mov	r5, r0
   14100:	bl	113d8 <__errno_location@plt>
   14104:	mov	r4, r0
   14108:	ldr	r3, [r0]
   1410c:	str	r3, [sp]
   14110:	str	r3, [sp, #4]
   14114:	mov	r3, #0
   14118:	str	r3, [r0]
   1411c:	mov	r0, r5
   14120:	bl	11264 <free@plt>
   14124:	ldr	r3, [r4]
   14128:	clz	r3, r3
   1412c:	lsr	r3, r3, #5
   14130:	add	r2, sp, #8
   14134:	add	r3, r2, r3, lsl #2
   14138:	ldr	r3, [r3, #-8]
   1413c:	str	r3, [r4]
   14140:	add	sp, sp, #12
   14144:	ldrd	r4, [sp]
   14148:	add	sp, sp, #8
   1414c:	pop	{pc}		; (ldr pc, [sp], #4)
   14150:	push	{lr}		; (str lr, [sp, #-4]!)
   14154:	sub	sp, sp, #20
   14158:	mov	ip, #0
   1415c:	str	ip, [sp, #8]
   14160:	str	ip, [sp, #4]
   14164:	ldr	ip, [sp, #24]
   14168:	str	ip, [sp]
   1416c:	bl	18d74 <argp_error@@Base+0xd60>
   14170:	add	sp, sp, #20
   14174:	pop	{pc}		; (ldr pc, [sp], #4)
   14178:	push	{lr}		; (str lr, [sp, #-4]!)
   1417c:	sub	sp, sp, #20
   14180:	mov	ip, #0
   14184:	str	ip, [sp, #12]
   14188:	ldr	lr, [sp, #28]
   1418c:	str	lr, [sp, #8]
   14190:	str	ip, [sp, #4]
   14194:	ldr	ip, [sp, #24]
   14198:	str	ip, [sp]
   1419c:	bl	187b8 <argp_error@@Base+0x7a4>
   141a0:	add	sp, sp, #20
   141a4:	pop	{pc}		; (ldr pc, [sp], #4)
   141a8:	push	{lr}		; (str lr, [sp, #-4]!)
   141ac:	sub	sp, sp, #20
   141b0:	mov	ip, #0
   141b4:	str	ip, [sp, #8]
   141b8:	mov	ip, #1
   141bc:	str	ip, [sp, #4]
   141c0:	ldr	ip, [sp, #24]
   141c4:	str	ip, [sp]
   141c8:	bl	18d74 <argp_error@@Base+0xd60>
   141cc:	add	sp, sp, #20
   141d0:	pop	{pc}		; (ldr pc, [sp], #4)
   141d4:	push	{lr}		; (str lr, [sp, #-4]!)
   141d8:	sub	sp, sp, #20
   141dc:	mov	ip, #0
   141e0:	str	ip, [sp, #12]
   141e4:	ldr	ip, [sp, #28]
   141e8:	str	ip, [sp, #8]
   141ec:	mov	ip, #1
   141f0:	str	ip, [sp, #4]
   141f4:	ldr	ip, [sp, #24]
   141f8:	str	ip, [sp]
   141fc:	bl	187b8 <argp_error@@Base+0x7a4>
   14200:	add	sp, sp, #20
   14204:	pop	{pc}		; (ldr pc, [sp], #4)
   14208:	push	{r1, r2, r3}
   1420c:	push	{lr}		; (str lr, [sp, #-4]!)
   14210:	sub	sp, sp, #8
   14214:	add	r3, sp, #20
   14218:	str	r3, [sp, #4]
   1421c:	ldr	r2, [sp, #16]
   14220:	ldr	r1, [sp, #12]
   14224:	bl	1130c <ioctl@plt>
   14228:	add	sp, sp, #8
   1422c:	pop	{lr}		; (ldr lr, [sp], #4)
   14230:	add	sp, sp, #12
   14234:	bx	lr
   14238:	strd	r4, [sp, #-16]!
   1423c:	str	r6, [sp, #8]
   14240:	str	lr, [sp, #12]
   14244:	subs	r4, r0, #0
   14248:	beq	142e4 <argp_parse@@Base+0xecc>
   1424c:	mov	r1, #47	; 0x2f
   14250:	mov	r0, r4
   14254:	bl	11474 <strrchr@plt>
   14258:	subs	r5, r0, #0
   1425c:	beq	142bc <argp_parse@@Base+0xea4>
   14260:	add	r6, r5, #1
   14264:	sub	r3, r6, r4
   14268:	cmp	r3, #6
   1426c:	ble	142bc <argp_parse@@Base+0xea4>
   14270:	mov	r2, #7
   14274:	movw	r1, #40168	; 0x9ce8
   14278:	movt	r1, #1
   1427c:	sub	r0, r5, #6
   14280:	bl	1151c <strncmp@plt>
   14284:	cmp	r0, #0
   14288:	bne	142bc <argp_parse@@Base+0xea4>
   1428c:	mov	r2, #3
   14290:	movw	r1, #40176	; 0x9cf0
   14294:	movt	r1, #1
   14298:	mov	r0, r6
   1429c:	bl	1151c <strncmp@plt>
   142a0:	cmp	r0, #0
   142a4:	movne	r4, r6
   142a8:	bne	142bc <argp_parse@@Base+0xea4>
   142ac:	add	r4, r5, #4
   142b0:	movw	r3, #45792	; 0xb2e0
   142b4:	movt	r3, #2
   142b8:	str	r4, [r3]
   142bc:	movw	r3, #48248	; 0xbc78
   142c0:	movt	r3, #2
   142c4:	str	r4, [r3]
   142c8:	movw	r3, #45796	; 0xb2e4
   142cc:	movt	r3, #2
   142d0:	str	r4, [r3]
   142d4:	ldrd	r4, [sp]
   142d8:	ldr	r6, [sp, #8]
   142dc:	add	sp, sp, #12
   142e0:	pop	{pc}		; (ldr pc, [sp], #4)
   142e4:	movw	r3, #45800	; 0xb2e8
   142e8:	movt	r3, #2
   142ec:	ldr	r3, [r3]
   142f0:	mov	r2, #55	; 0x37
   142f4:	mov	r1, #1
   142f8:	movw	r0, #40112	; 0x9cb0
   142fc:	movt	r0, #1
   14300:	bl	11300 <fwrite@plt>
   14304:	bl	11528 <abort@plt>
   14308:	strd	r4, [sp, #-16]!
   1430c:	str	r6, [sp, #8]
   14310:	str	lr, [sp, #12]
   14314:	sub	sp, sp, #32
   14318:	mov	r4, r0
   1431c:	ldr	r5, [sp, #48]	; 0x30
   14320:	ldr	r6, [sp, #52]	; 0x34
   14324:	cmp	r1, #0
   14328:	beq	143c4 <argp_parse@@Base+0xfac>
   1432c:	str	r3, [sp]
   14330:	mov	r3, r2
   14334:	mov	r2, r1
   14338:	movw	r1, #40180	; 0x9cf4
   1433c:	movt	r1, #1
   14340:	bl	113cc <fprintf@plt>
   14344:	movw	r3, #2022	; 0x7e6
   14348:	movw	r2, #40200	; 0x9d08
   1434c:	movt	r2, #1
   14350:	movw	r1, #40968	; 0xa008
   14354:	movt	r1, #1
   14358:	mov	r0, r4
   1435c:	bl	113cc <fprintf@plt>
   14360:	mov	r1, r4
   14364:	mov	r0, #10
   14368:	bl	11498 <fputc@plt>
   1436c:	movw	r2, #40204	; 0x9d0c
   14370:	movt	r2, #1
   14374:	movw	r1, #40240	; 0x9d30
   14378:	movt	r1, #1
   1437c:	mov	r0, r4
   14380:	bl	113cc <fprintf@plt>
   14384:	mov	r1, r4
   14388:	mov	r0, #10
   1438c:	bl	11498 <fputc@plt>
   14390:	cmp	r6, #9
   14394:	ldrls	pc, [pc, r6, lsl #2]
   14398:	b	145bc <argp_parse@@Base+0x11a4>
   1439c:	andeq	r4, r1, r8, ror #7
   143a0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143a4:	strdeq	r4, [r1], -ip
   143a8:	andeq	r4, r1, r8, lsl r4
   143ac:	andeq	r4, r1, ip, lsr r4
   143b0:	andeq	r4, r1, r8, ror #8
   143b4:	muleq	r1, ip, r4
   143b8:	ldrdeq	r4, [r1], -r8
   143bc:	andeq	r4, r1, ip, lsl r5
   143c0:	andeq	r4, r1, r8, ror #10
   143c4:	movw	r1, #40192	; 0x9d00
   143c8:	movt	r1, #1
   143cc:	bl	113cc <fprintf@plt>
   143d0:	b	14344 <argp_parse@@Base+0xf2c>
   143d4:	ldr	r2, [r5]
   143d8:	movw	r1, #40412	; 0x9ddc
   143dc:	movt	r1, #1
   143e0:	mov	r0, r4
   143e4:	bl	113cc <fprintf@plt>
   143e8:	add	sp, sp, #32
   143ec:	ldrd	r4, [sp]
   143f0:	ldr	r6, [sp, #8]
   143f4:	add	sp, sp, #12
   143f8:	pop	{pc}		; (ldr pc, [sp], #4)
   143fc:	ldr	r3, [r5, #4]
   14400:	ldr	r2, [r5]
   14404:	movw	r1, #40428	; 0x9dec
   14408:	movt	r1, #1
   1440c:	mov	r0, r4
   14410:	bl	113cc <fprintf@plt>
   14414:	b	143e8 <argp_parse@@Base+0xfd0>
   14418:	ldr	r3, [r5, #8]
   1441c:	str	r3, [sp]
   14420:	ldr	r3, [r5, #4]
   14424:	ldr	r2, [r5]
   14428:	movw	r1, #40452	; 0x9e04
   1442c:	movt	r1, #1
   14430:	mov	r0, r4
   14434:	bl	113cc <fprintf@plt>
   14438:	b	143e8 <argp_parse@@Base+0xfd0>
   1443c:	ldr	r3, [r5, #12]
   14440:	str	r3, [sp, #4]
   14444:	ldr	r3, [r5, #8]
   14448:	str	r3, [sp]
   1444c:	ldr	r3, [r5, #4]
   14450:	ldr	r2, [r5]
   14454:	movw	r1, #40480	; 0x9e20
   14458:	movt	r1, #1
   1445c:	mov	r0, r4
   14460:	bl	113cc <fprintf@plt>
   14464:	b	143e8 <argp_parse@@Base+0xfd0>
   14468:	ldr	r3, [r5, #16]
   1446c:	str	r3, [sp, #8]
   14470:	ldr	r3, [r5, #12]
   14474:	str	r3, [sp, #4]
   14478:	ldr	r3, [r5, #8]
   1447c:	str	r3, [sp]
   14480:	ldr	r3, [r5, #4]
   14484:	ldr	r2, [r5]
   14488:	movw	r1, #40512	; 0x9e40
   1448c:	movt	r1, #1
   14490:	mov	r0, r4
   14494:	bl	113cc <fprintf@plt>
   14498:	b	143e8 <argp_parse@@Base+0xfd0>
   1449c:	ldr	r3, [r5, #20]
   144a0:	str	r3, [sp, #12]
   144a4:	ldr	r3, [r5, #16]
   144a8:	str	r3, [sp, #8]
   144ac:	ldr	r3, [r5, #12]
   144b0:	str	r3, [sp, #4]
   144b4:	ldr	r3, [r5, #8]
   144b8:	str	r3, [sp]
   144bc:	ldr	r3, [r5, #4]
   144c0:	ldr	r2, [r5]
   144c4:	movw	r1, #40548	; 0x9e64
   144c8:	movt	r1, #1
   144cc:	mov	r0, r4
   144d0:	bl	113cc <fprintf@plt>
   144d4:	b	143e8 <argp_parse@@Base+0xfd0>
   144d8:	ldr	r3, [r5, #24]
   144dc:	str	r3, [sp, #16]
   144e0:	ldr	r3, [r5, #20]
   144e4:	str	r3, [sp, #12]
   144e8:	ldr	r3, [r5, #16]
   144ec:	str	r3, [sp, #8]
   144f0:	ldr	r3, [r5, #12]
   144f4:	str	r3, [sp, #4]
   144f8:	ldr	r3, [r5, #8]
   144fc:	str	r3, [sp]
   14500:	ldr	r3, [r5, #4]
   14504:	ldr	r2, [r5]
   14508:	movw	r1, #40588	; 0x9e8c
   1450c:	movt	r1, #1
   14510:	mov	r0, r4
   14514:	bl	113cc <fprintf@plt>
   14518:	b	143e8 <argp_parse@@Base+0xfd0>
   1451c:	ldr	r3, [r5, #28]
   14520:	str	r3, [sp, #20]
   14524:	ldr	r3, [r5, #24]
   14528:	str	r3, [sp, #16]
   1452c:	ldr	r3, [r5, #20]
   14530:	str	r3, [sp, #12]
   14534:	ldr	r3, [r5, #16]
   14538:	str	r3, [sp, #8]
   1453c:	ldr	r3, [r5, #12]
   14540:	str	r3, [sp, #4]
   14544:	ldr	r3, [r5, #8]
   14548:	str	r3, [sp]
   1454c:	ldr	r3, [r5, #4]
   14550:	ldr	r2, [r5]
   14554:	movw	r1, #40632	; 0x9eb8
   14558:	movt	r1, #1
   1455c:	mov	r0, r4
   14560:	bl	113cc <fprintf@plt>
   14564:	b	143e8 <argp_parse@@Base+0xfd0>
   14568:	ldr	r3, [r5, #32]
   1456c:	str	r3, [sp, #24]
   14570:	ldr	r3, [r5, #28]
   14574:	str	r3, [sp, #20]
   14578:	ldr	r3, [r5, #24]
   1457c:	str	r3, [sp, #16]
   14580:	ldr	r3, [r5, #20]
   14584:	str	r3, [sp, #12]
   14588:	ldr	r3, [r5, #16]
   1458c:	str	r3, [sp, #8]
   14590:	ldr	r3, [r5, #12]
   14594:	str	r3, [sp, #4]
   14598:	ldr	r3, [r5, #8]
   1459c:	str	r3, [sp]
   145a0:	ldr	r3, [r5, #4]
   145a4:	ldr	r2, [r5]
   145a8:	movw	r1, #40680	; 0x9ee8
   145ac:	movt	r1, #1
   145b0:	mov	r0, r4
   145b4:	bl	113cc <fprintf@plt>
   145b8:	b	143e8 <argp_parse@@Base+0xfd0>
   145bc:	ldr	r3, [r5, #32]
   145c0:	str	r3, [sp, #24]
   145c4:	ldr	r3, [r5, #28]
   145c8:	str	r3, [sp, #20]
   145cc:	ldr	r3, [r5, #24]
   145d0:	str	r3, [sp, #16]
   145d4:	ldr	r3, [r5, #20]
   145d8:	str	r3, [sp, #12]
   145dc:	ldr	r3, [r5, #16]
   145e0:	str	r3, [sp, #8]
   145e4:	ldr	r3, [r5, #12]
   145e8:	str	r3, [sp, #4]
   145ec:	ldr	r3, [r5, #8]
   145f0:	str	r3, [sp]
   145f4:	ldr	r3, [r5, #4]
   145f8:	ldr	r2, [r5]
   145fc:	movw	r1, #40732	; 0x9f1c
   14600:	movt	r1, #1
   14604:	mov	r0, r4
   14608:	bl	113cc <fprintf@plt>
   1460c:	b	143e8 <argp_parse@@Base+0xfd0>
   14610:	strd	r4, [sp, #-12]!
   14614:	str	lr, [sp, #8]
   14618:	sub	sp, sp, #12
   1461c:	ldr	r5, [sp, #24]
   14620:	ldr	ip, [r5]
   14624:	cmp	ip, #0
   14628:	beq	14660 <argp_parse@@Base+0x1248>
   1462c:	mov	lr, r5
   14630:	mov	ip, #0
   14634:	add	ip, ip, #1
   14638:	ldr	r4, [lr, #4]!
   1463c:	cmp	r4, #0
   14640:	bne	14634 <argp_parse@@Base+0x121c>
   14644:	str	ip, [sp, #4]
   14648:	str	r5, [sp]
   1464c:	bl	14308 <argp_parse@@Base+0xef0>
   14650:	add	sp, sp, #12
   14654:	ldrd	r4, [sp]
   14658:	add	sp, sp, #8
   1465c:	pop	{pc}		; (ldr pc, [sp], #4)
   14660:	mov	ip, #0
   14664:	b	14644 <argp_parse@@Base+0x122c>
   14668:	strd	r4, [sp, #-12]!
   1466c:	str	lr, [sp, #8]
   14670:	sub	sp, sp, #52	; 0x34
   14674:	ldr	r5, [sp, #64]	; 0x40
   14678:	add	r4, sp, #8
   1467c:	mov	ip, #0
   14680:	ldr	lr, [r5], #4
   14684:	str	lr, [r4], #4
   14688:	cmp	lr, #0
   1468c:	beq	1469c <argp_parse@@Base+0x1284>
   14690:	add	ip, ip, #1
   14694:	cmp	ip, #10
   14698:	bne	14680 <argp_parse@@Base+0x1268>
   1469c:	str	ip, [sp, #4]
   146a0:	add	ip, sp, #8
   146a4:	str	ip, [sp]
   146a8:	bl	14308 <argp_parse@@Base+0xef0>
   146ac:	add	sp, sp, #52	; 0x34
   146b0:	ldrd	r4, [sp]
   146b4:	add	sp, sp, #8
   146b8:	pop	{pc}		; (ldr pc, [sp], #4)
   146bc:	push	{r3}		; (str r3, [sp, #-4]!)
   146c0:	push	{lr}		; (str lr, [sp, #-4]!)
   146c4:	sub	sp, sp, #16
   146c8:	add	r3, sp, #24
   146cc:	str	r3, [sp, #12]
   146d0:	str	r3, [sp]
   146d4:	ldr	r3, [sp, #20]
   146d8:	bl	14668 <argp_parse@@Base+0x1250>
   146dc:	add	sp, sp, #16
   146e0:	pop	{lr}		; (ldr lr, [sp], #4)
   146e4:	add	sp, sp, #4
   146e8:	bx	lr
   146ec:	str	r4, [sp, #-8]!
   146f0:	str	lr, [sp, #4]
   146f4:	movw	r3, #45804	; 0xb2ec
   146f8:	movt	r3, #2
   146fc:	ldr	r1, [r3]
   14700:	mov	r0, #10
   14704:	bl	11498 <fputc@plt>
   14708:	movw	r1, #40792	; 0x9f58
   1470c:	movt	r1, #1
   14710:	movw	r0, #40816	; 0x9f70
   14714:	movt	r0, #1
   14718:	bl	11228 <printf@plt>
   1471c:	movw	r2, #40836	; 0x9f84
   14720:	movt	r2, #1
   14724:	movw	r1, #40096	; 0x9ca0
   14728:	movt	r1, #1
   1472c:	movw	r0, #40876	; 0x9fac
   14730:	movt	r0, #1
   14734:	bl	11228 <printf@plt>
   14738:	movw	r1, #40896	; 0x9fc0
   1473c:	movt	r1, #1
   14740:	movw	r0, #40928	; 0x9fe0
   14744:	movt	r0, #1
   14748:	bl	11228 <printf@plt>
   1474c:	ldr	r4, [sp]
   14750:	add	sp, sp, #4
   14754:	pop	{pc}		; (ldr pc, [sp], #4)
   14758:	str	r4, [sp, #-8]!
   1475c:	str	lr, [sp, #4]
   14760:	bl	14c90 <argp_parse@@Base+0x1878>
   14764:	cmp	r0, #0
   14768:	beq	14778 <argp_parse@@Base+0x1360>
   1476c:	ldr	r4, [sp]
   14770:	add	sp, sp, #4
   14774:	pop	{pc}		; (ldr pc, [sp], #4)
   14778:	bl	14bec <argp_parse@@Base+0x17d4>
   1477c:	str	r4, [sp, #-8]!
   14780:	str	lr, [sp, #4]
   14784:	bl	14c90 <argp_parse@@Base+0x1878>
   14788:	cmp	r0, #0
   1478c:	beq	1479c <argp_parse@@Base+0x1384>
   14790:	ldr	r4, [sp]
   14794:	add	sp, sp, #4
   14798:	pop	{pc}		; (ldr pc, [sp], #4)
   1479c:	bl	14bec <argp_parse@@Base+0x17d4>
   147a0:	str	r4, [sp, #-8]!
   147a4:	str	lr, [sp, #4]
   147a8:	bl	14758 <argp_parse@@Base+0x1340>
   147ac:	ldr	r4, [sp]
   147b0:	add	sp, sp, #4
   147b4:	pop	{pc}		; (ldr pc, [sp], #4)
   147b8:	strd	r4, [sp, #-16]!
   147bc:	str	r6, [sp, #8]
   147c0:	str	lr, [sp, #12]
   147c4:	mov	r5, r0
   147c8:	mov	r4, r1
   147cc:	bl	14ccc <argp_parse@@Base+0x18b4>
   147d0:	cmp	r0, #0
   147d4:	beq	147e8 <argp_parse@@Base+0x13d0>
   147d8:	ldrd	r4, [sp]
   147dc:	ldr	r6, [sp, #8]
   147e0:	add	sp, sp, #12
   147e4:	pop	{pc}		; (ldr pc, [sp], #4)
   147e8:	adds	r4, r4, #0
   147ec:	movne	r4, #1
   147f0:	cmp	r5, #0
   147f4:	moveq	r4, #1
   147f8:	cmp	r4, #0
   147fc:	beq	147d8 <argp_parse@@Base+0x13c0>
   14800:	bl	14bec <argp_parse@@Base+0x17d4>
   14804:	str	r4, [sp, #-8]!
   14808:	str	lr, [sp, #4]
   1480c:	cmp	r1, #0
   14810:	orreq	r1, r1, #1
   14814:	bl	14ccc <argp_parse@@Base+0x18b4>
   14818:	cmp	r0, #0
   1481c:	beq	1482c <argp_parse@@Base+0x1414>
   14820:	ldr	r4, [sp]
   14824:	add	sp, sp, #4
   14828:	pop	{pc}		; (ldr pc, [sp], #4)
   1482c:	bl	14bec <argp_parse@@Base+0x17d4>
   14830:	strd	r4, [sp, #-16]!
   14834:	str	r6, [sp, #8]
   14838:	str	lr, [sp, #12]
   1483c:	mov	r4, r0
   14840:	mov	r6, r1
   14844:	mov	r5, r2
   14848:	bl	18e18 <argp_error@@Base+0xe04>
   1484c:	cmp	r0, #0
   14850:	beq	14864 <argp_parse@@Base+0x144c>
   14854:	ldrd	r4, [sp]
   14858:	ldr	r6, [sp, #8]
   1485c:	add	sp, sp, #12
   14860:	pop	{pc}		; (ldr pc, [sp], #4)
   14864:	cmp	r4, #0
   14868:	beq	14878 <argp_parse@@Base+0x1460>
   1486c:	cmp	r6, #0
   14870:	cmpne	r5, #0
   14874:	beq	14854 <argp_parse@@Base+0x143c>
   14878:	bl	14bec <argp_parse@@Base+0x17d4>
   1487c:	str	r4, [sp, #-8]!
   14880:	str	lr, [sp, #4]
   14884:	bl	14830 <argp_parse@@Base+0x1418>
   14888:	ldr	r4, [sp]
   1488c:	add	sp, sp, #4
   14890:	pop	{pc}		; (ldr pc, [sp], #4)
   14894:	str	r4, [sp, #-8]!
   14898:	str	lr, [sp, #4]
   1489c:	mov	ip, r1
   148a0:	mov	r3, r2
   148a4:	cmp	r2, #0
   148a8:	cmpne	r1, #0
   148ac:	moveq	r3, #1
   148b0:	moveq	ip, r3
   148b4:	mov	r2, r3
   148b8:	mov	r1, ip
   148bc:	bl	18e18 <argp_error@@Base+0xe04>
   148c0:	cmp	r0, #0
   148c4:	beq	148d4 <argp_parse@@Base+0x14bc>
   148c8:	ldr	r4, [sp]
   148cc:	add	sp, sp, #4
   148d0:	pop	{pc}		; (ldr pc, [sp], #4)
   148d4:	bl	14bec <argp_parse@@Base+0x17d4>
   148d8:	str	r4, [sp, #-8]!
   148dc:	str	lr, [sp, #4]
   148e0:	mov	r2, r1
   148e4:	mov	r1, r0
   148e8:	mov	r0, #0
   148ec:	bl	14830 <argp_parse@@Base+0x1418>
   148f0:	ldr	r4, [sp]
   148f4:	add	sp, sp, #4
   148f8:	pop	{pc}		; (ldr pc, [sp], #4)
   148fc:	str	r4, [sp, #-8]!
   14900:	str	lr, [sp, #4]
   14904:	mov	r2, r1
   14908:	mov	r1, r0
   1490c:	mov	r0, #0
   14910:	bl	14894 <argp_parse@@Base+0x147c>
   14914:	ldr	r4, [sp]
   14918:	add	sp, sp, #4
   1491c:	pop	{pc}		; (ldr pc, [sp], #4)
   14920:	strd	r4, [sp, #-16]!
   14924:	str	r6, [sp, #8]
   14928:	str	lr, [sp, #12]
   1492c:	mov	r5, r1
   14930:	ldr	r4, [r1]
   14934:	cmp	r0, #0
   14938:	beq	14968 <argp_parse@@Base+0x1550>
   1493c:	lsr	r3, r4, #1
   14940:	add	r3, r3, #1
   14944:	adds	r4, r4, r3
   14948:	bcs	14984 <argp_parse@@Base+0x156c>
   1494c:	mov	r1, r4
   14950:	bl	14830 <argp_parse@@Base+0x1418>
   14954:	str	r4, [r5]
   14958:	ldrd	r4, [sp]
   1495c:	ldr	r6, [sp, #8]
   14960:	add	sp, sp, #12
   14964:	pop	{pc}		; (ldr pc, [sp], #4)
   14968:	cmp	r4, #0
   1496c:	bne	1494c <argp_parse@@Base+0x1534>
   14970:	mov	r4, #64	; 0x40
   14974:	udiv	r4, r4, r2
   14978:	cmp	r2, #64	; 0x40
   1497c:	addhi	r4, r4, #1
   14980:	b	1494c <argp_parse@@Base+0x1534>
   14984:	bl	14bec <argp_parse@@Base+0x17d4>
   14988:	str	r4, [sp, #-8]!
   1498c:	str	lr, [sp, #4]
   14990:	mov	r2, #1
   14994:	bl	14920 <argp_parse@@Base+0x1508>
   14998:	ldr	r4, [sp]
   1499c:	add	sp, sp, #4
   149a0:	pop	{pc}		; (ldr pc, [sp], #4)
   149a4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   149a8:	strd	r6, [sp, #8]
   149ac:	str	r8, [sp, #16]
   149b0:	str	lr, [sp, #20]
   149b4:	mov	r5, r1
   149b8:	ldr	lr, [sp, #24]
   149bc:	ldr	ip, [r1]
   149c0:	asr	r4, ip, #1
   149c4:	adds	r4, ip, r4
   149c8:	movvs	r1, #1
   149cc:	movvc	r1, #0
   149d0:	cmp	r1, #0
   149d4:	mvnne	r4, #-2147483648	; 0x80000000
   149d8:	mvn	r8, r3
   149dc:	lsr	r8, r8, #31
   149e0:	cmp	r3, r4
   149e4:	movge	r1, #0
   149e8:	andlt	r1, r8, #1
   149ec:	cmp	r1, #0
   149f0:	movne	r4, r3
   149f4:	smull	r6, r7, r4, lr
   149f8:	asr	r1, r6, #31
   149fc:	cmp	r1, r7
   14a00:	bne	14a18 <argp_parse@@Base+0x1600>
   14a04:	mov	r1, r6
   14a08:	cmp	r6, #63	; 0x3f
   14a0c:	movle	r1, #64	; 0x40
   14a10:	ble	14a1c <argp_parse@@Base+0x1604>
   14a14:	b	14a28 <argp_parse@@Base+0x1610>
   14a18:	mvn	r1, #-2147483648	; 0x80000000
   14a1c:	sdiv	r4, r1, lr
   14a20:	mls	r6, lr, r4, r1
   14a24:	sub	r1, r1, r6
   14a28:	cmp	r0, #0
   14a2c:	moveq	r6, #0
   14a30:	streq	r6, [r5]
   14a34:	sub	r6, r4, ip
   14a38:	cmp	r6, r2
   14a3c:	bge	14a74 <argp_parse@@Base+0x165c>
   14a40:	adds	r2, ip, r2
   14a44:	mov	r4, r2
   14a48:	bvs	14a90 <argp_parse@@Base+0x1678>
   14a4c:	cmp	r2, r3
   14a50:	movle	r3, #0
   14a54:	andgt	r3, r8, #1
   14a58:	cmp	r3, #0
   14a5c:	bne	14a90 <argp_parse@@Base+0x1678>
   14a60:	smull	r2, r3, r2, lr
   14a64:	asr	ip, r2, #31
   14a68:	mov	r1, r2
   14a6c:	cmp	ip, r3
   14a70:	bne	14a90 <argp_parse@@Base+0x1678>
   14a74:	bl	147b8 <argp_parse@@Base+0x13a0>
   14a78:	str	r4, [r5]
   14a7c:	ldrd	r4, [sp]
   14a80:	ldrd	r6, [sp, #8]
   14a84:	ldr	r8, [sp, #16]
   14a88:	add	sp, sp, #20
   14a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a90:	bl	14bec <argp_parse@@Base+0x17d4>
   14a94:	str	r4, [sp, #-8]!
   14a98:	str	lr, [sp, #4]
   14a9c:	bl	14c1c <argp_parse@@Base+0x1804>
   14aa0:	cmp	r0, #0
   14aa4:	beq	14ab4 <argp_parse@@Base+0x169c>
   14aa8:	ldr	r4, [sp]
   14aac:	add	sp, sp, #4
   14ab0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ab4:	bl	14bec <argp_parse@@Base+0x17d4>
   14ab8:	str	r4, [sp, #-8]!
   14abc:	str	lr, [sp, #4]
   14ac0:	mov	r1, #1
   14ac4:	bl	14a94 <argp_parse@@Base+0x167c>
   14ac8:	ldr	r4, [sp]
   14acc:	add	sp, sp, #4
   14ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad4:	str	r4, [sp, #-8]!
   14ad8:	str	lr, [sp, #4]
   14adc:	bl	14c1c <argp_parse@@Base+0x1804>
   14ae0:	cmp	r0, #0
   14ae4:	beq	14af4 <argp_parse@@Base+0x16dc>
   14ae8:	ldr	r4, [sp]
   14aec:	add	sp, sp, #4
   14af0:	pop	{pc}		; (ldr pc, [sp], #4)
   14af4:	bl	14bec <argp_parse@@Base+0x17d4>
   14af8:	str	r4, [sp, #-8]!
   14afc:	str	lr, [sp, #4]
   14b00:	mov	r1, #1
   14b04:	bl	14ad4 <argp_parse@@Base+0x16bc>
   14b08:	ldr	r4, [sp]
   14b0c:	add	sp, sp, #4
   14b10:	pop	{pc}		; (ldr pc, [sp], #4)
   14b14:	strd	r4, [sp, #-16]!
   14b18:	str	r6, [sp, #8]
   14b1c:	str	lr, [sp, #12]
   14b20:	mov	r5, r0
   14b24:	mov	r4, r1
   14b28:	mov	r0, r1
   14b2c:	bl	14758 <argp_parse@@Base+0x1340>
   14b30:	mov	r2, r4
   14b34:	mov	r1, r5
   14b38:	bl	11288 <memcpy@plt>
   14b3c:	ldrd	r4, [sp]
   14b40:	ldr	r6, [sp, #8]
   14b44:	add	sp, sp, #12
   14b48:	pop	{pc}		; (ldr pc, [sp], #4)
   14b4c:	strd	r4, [sp, #-16]!
   14b50:	str	r6, [sp, #8]
   14b54:	str	lr, [sp, #12]
   14b58:	mov	r5, r0
   14b5c:	mov	r4, r1
   14b60:	mov	r0, r1
   14b64:	bl	1477c <argp_parse@@Base+0x1364>
   14b68:	mov	r2, r4
   14b6c:	mov	r1, r5
   14b70:	bl	11288 <memcpy@plt>
   14b74:	ldrd	r4, [sp]
   14b78:	ldr	r6, [sp, #8]
   14b7c:	add	sp, sp, #12
   14b80:	pop	{pc}		; (ldr pc, [sp], #4)
   14b84:	strd	r4, [sp, #-16]!
   14b88:	str	r6, [sp, #8]
   14b8c:	str	lr, [sp, #12]
   14b90:	mov	r5, r0
   14b94:	mov	r4, r1
   14b98:	add	r0, r1, #1
   14b9c:	bl	1477c <argp_parse@@Base+0x1364>
   14ba0:	mov	r2, #0
   14ba4:	strb	r2, [r0, r4]
   14ba8:	mov	r2, r4
   14bac:	mov	r1, r5
   14bb0:	bl	11288 <memcpy@plt>
   14bb4:	ldrd	r4, [sp]
   14bb8:	ldr	r6, [sp, #8]
   14bbc:	add	sp, sp, #12
   14bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   14bc4:	str	r4, [sp, #-8]!
   14bc8:	str	lr, [sp, #4]
   14bcc:	mov	r4, r0
   14bd0:	bl	113b4 <strlen@plt>
   14bd4:	add	r1, r0, #1
   14bd8:	mov	r0, r4
   14bdc:	bl	14b14 <argp_parse@@Base+0x16fc>
   14be0:	ldr	r4, [sp]
   14be4:	add	sp, sp, #4
   14be8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bec:	str	r4, [sp, #-8]!
   14bf0:	str	lr, [sp, #4]
   14bf4:	movw	r3, #45772	; 0xb2cc
   14bf8:	movt	r3, #2
   14bfc:	ldr	r0, [r3]
   14c00:	movw	r3, #41016	; 0xa038
   14c04:	movt	r3, #1
   14c08:	movw	r2, #38688	; 0x9720
   14c0c:	movt	r2, #1
   14c10:	mov	r1, #0
   14c14:	bl	11324 <error@plt>
   14c18:	bl	11528 <abort@plt>
   14c1c:	strd	r4, [sp, #-16]!
   14c20:	str	r6, [sp, #8]
   14c24:	str	lr, [sp, #12]
   14c28:	cmp	r1, #0
   14c2c:	cmpne	r0, #0
   14c30:	beq	14c6c <argp_parse@@Base+0x1854>
   14c34:	mov	r2, r0
   14c38:	mov	r3, r1
   14c3c:	umull	r4, r5, r0, r1
   14c40:	adds	r1, r5, #0
   14c44:	movne	r1, #1
   14c48:	cmp	r4, #0
   14c4c:	movlt	r1, #1
   14c50:	cmp	r1, #0
   14c54:	beq	14c74 <argp_parse@@Base+0x185c>
   14c58:	bl	113d8 <__errno_location@plt>
   14c5c:	mov	r3, #12
   14c60:	str	r3, [r0]
   14c64:	mov	r0, #0
   14c68:	b	14c80 <argp_parse@@Base+0x1868>
   14c6c:	mov	r3, #1
   14c70:	mov	r2, r3
   14c74:	mov	r1, r3
   14c78:	mov	r0, r2
   14c7c:	bl	111e0 <calloc@plt>
   14c80:	ldrd	r4, [sp]
   14c84:	ldr	r6, [sp, #8]
   14c88:	add	sp, sp, #12
   14c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c90:	str	r4, [sp, #-8]!
   14c94:	str	lr, [sp, #4]
   14c98:	cmp	r0, #0
   14c9c:	beq	14cb8 <argp_parse@@Base+0x18a0>
   14ca0:	bge	14cbc <argp_parse@@Base+0x18a4>
   14ca4:	bl	113d8 <__errno_location@plt>
   14ca8:	mov	r3, #12
   14cac:	str	r3, [r0]
   14cb0:	mov	r0, #0
   14cb4:	b	14cc0 <argp_parse@@Base+0x18a8>
   14cb8:	mov	r0, #1
   14cbc:	bl	11354 <malloc@plt>
   14cc0:	ldr	r4, [sp]
   14cc4:	add	sp, sp, #4
   14cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ccc:	str	r4, [sp, #-8]!
   14cd0:	str	lr, [sp, #4]
   14cd4:	cmp	r0, #0
   14cd8:	beq	14cfc <argp_parse@@Base+0x18e4>
   14cdc:	cmp	r1, #0
   14ce0:	beq	14d08 <argp_parse@@Base+0x18f0>
   14ce4:	cmp	r1, #0
   14ce8:	blt	14d14 <argp_parse@@Base+0x18fc>
   14cec:	bl	112d0 <realloc@plt>
   14cf0:	ldr	r4, [sp]
   14cf4:	add	sp, sp, #4
   14cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cfc:	mov	r0, r1
   14d00:	bl	14c90 <argp_parse@@Base+0x1878>
   14d04:	b	14cf0 <argp_parse@@Base+0x18d8>
   14d08:	bl	140f0 <argp_parse@@Base+0xcd8>
   14d0c:	mov	r0, #0
   14d10:	b	14cf0 <argp_parse@@Base+0x18d8>
   14d14:	bl	113d8 <__errno_location@plt>
   14d18:	mov	r3, #12
   14d1c:	str	r3, [r0]
   14d20:	mov	r0, #0
   14d24:	b	14cf0 <argp_parse@@Base+0x18d8>
   14d28:	ldr	r3, [r0]
   14d2c:	ldr	r2, [r0, #4]
   14d30:	cmp	r2, #0
   14d34:	beq	14d70 <argp_parse@@Base+0x1958>
   14d38:	add	r3, r3, #24
   14d3c:	b	14d4c <argp_parse@@Base+0x1934>
   14d40:	add	r3, r3, #24
   14d44:	subs	r2, r2, #1
   14d48:	beq	14d68 <argp_parse@@Base+0x1950>
   14d4c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   14d50:	cmp	r0, #0
   14d54:	beq	14d40 <argp_parse@@Base+0x1928>
   14d58:	ldr	r1, [r3, #-12]
   14d5c:	tst	r1, #2
   14d60:	bne	14d40 <argp_parse@@Base+0x1928>
   14d64:	bx	lr
   14d68:	mov	r0, #0
   14d6c:	bx	lr
   14d70:	mov	r0, #0
   14d74:	b	14d64 <argp_parse@@Base+0x194c>
   14d78:	ldr	r2, [r0, #8]
   14d7c:	cmp	r2, #0
   14d80:	beq	14d8c <argp_parse@@Base+0x1974>
   14d84:	mov	r0, #0
   14d88:	bx	lr
   14d8c:	ldr	r2, [r1, #8]
   14d90:	cmp	r2, #0
   14d94:	bne	14d84 <argp_parse@@Base+0x196c>
   14d98:	ldr	r2, [r0, #12]
   14d9c:	ldr	r1, [r1, #12]
   14da0:	orr	r2, r2, r1
   14da4:	tst	r2, #16
   14da8:	bne	14d84 <argp_parse@@Base+0x196c>
   14dac:	ldr	r1, [r0, #4]
   14db0:	ldr	r2, [r3]
   14db4:	add	r0, r2, #1
   14db8:	str	r0, [r3]
   14dbc:	strb	r1, [r2]
   14dc0:	b	14d84 <argp_parse@@Base+0x196c>
   14dc4:	str	r4, [sp, #-8]!
   14dc8:	str	lr, [sp, #4]
   14dcc:	mov	r4, r0
   14dd0:	bl	1139c <__ctype_b_loc@plt>
   14dd4:	ldr	r3, [r4]
   14dd8:	ldrb	r2, [r3]
   14ddc:	ldr	ip, [r0]
   14de0:	lsl	r1, r2, #1
   14de4:	ldrh	r1, [ip, r1]
   14de8:	tst	r1, #8192	; 0x2000
   14dec:	beq	14dfc <argp_parse@@Base+0x19e4>
   14df0:	add	r3, r3, #1
   14df4:	str	r3, [r4]
   14df8:	b	14dd4 <argp_parse@@Base+0x19bc>
   14dfc:	subs	ip, r2, #45	; 0x2d
   14e00:	movne	ip, #1
   14e04:	cmp	r2, #0
   14e08:	beq	14e3c <argp_parse@@Base+0x1a24>
   14e0c:	tst	r1, #8
   14e10:	bne	14e3c <argp_parse@@Base+0x1a24>
   14e14:	add	r3, r3, #1
   14e18:	str	r3, [r4]
   14e1c:	ldrb	r2, [r3]
   14e20:	cmp	r2, #0
   14e24:	beq	14e3c <argp_parse@@Base+0x1a24>
   14e28:	ldr	r1, [r0]
   14e2c:	lsl	r2, r2, #1
   14e30:	ldrh	r2, [r1, r2]
   14e34:	tst	r2, #8
   14e38:	beq	14e14 <argp_parse@@Base+0x19fc>
   14e3c:	mov	r0, ip
   14e40:	ldr	r4, [sp]
   14e44:	add	sp, sp, #4
   14e48:	pop	{pc}		; (ldr pc, [sp], #4)
   14e4c:	strd	r4, [sp, #-16]!
   14e50:	str	r6, [sp, #8]
   14e54:	str	lr, [sp, #12]
   14e58:	mov	r5, r0
   14e5c:	ldr	r0, [r0, #12]
   14e60:	cmp	r0, #0
   14e64:	beq	14e7c <argp_parse@@Base+0x1a64>
   14e68:	ldr	r4, [r0, #24]
   14e6c:	bl	140f0 <argp_parse@@Base+0xcd8>
   14e70:	mov	r0, r4
   14e74:	cmp	r4, #0
   14e78:	bne	14e68 <argp_parse@@Base+0x1a50>
   14e7c:	ldr	r3, [r5, #4]
   14e80:	cmp	r3, #0
   14e84:	bne	14ea0 <argp_parse@@Base+0x1a88>
   14e88:	mov	r0, r5
   14e8c:	bl	140f0 <argp_parse@@Base+0xcd8>
   14e90:	ldrd	r4, [sp]
   14e94:	ldr	r6, [sp, #8]
   14e98:	add	sp, sp, #12
   14e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   14ea0:	ldr	r0, [r5]
   14ea4:	bl	140f0 <argp_parse@@Base+0xcd8>
   14ea8:	ldr	r0, [r5, #8]
   14eac:	bl	140f0 <argp_parse@@Base+0xcd8>
   14eb0:	b	14e88 <argp_parse@@Base+0x1a70>
   14eb4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14eb8:	strd	r6, [sp, #8]
   14ebc:	str	r8, [sp, #16]
   14ec0:	str	lr, [sp, #20]
   14ec4:	mov	r6, r1
   14ec8:	ldr	r7, [r0]
   14ecc:	ldr	r3, [r0, #4]
   14ed0:	sub	r8, r3, #1
   14ed4:	cmp	r3, #0
   14ed8:	bne	14f44 <argp_parse@@Base+0x1b2c>
   14edc:	mov	r7, #0
   14ee0:	b	14f1c <argp_parse@@Base+0x1b04>
   14ee4:	sub	r5, r5, #1
   14ee8:	add	r4, r4, #24
   14eec:	cmn	r5, #1
   14ef0:	beq	14f34 <argp_parse@@Base+0x1b1c>
   14ef4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14ef8:	cmp	r0, #0
   14efc:	beq	14ee4 <argp_parse@@Base+0x1acc>
   14f00:	ldr	r3, [r4, #-12]
   14f04:	tst	r3, #2
   14f08:	bne	14ee4 <argp_parse@@Base+0x1acc>
   14f0c:	mov	r1, r6
   14f10:	bl	11210 <strcmp@plt>
   14f14:	cmp	r0, #0
   14f18:	bne	14ee4 <argp_parse@@Base+0x1acc>
   14f1c:	mov	r0, r7
   14f20:	ldrd	r4, [sp]
   14f24:	ldrd	r6, [sp, #8]
   14f28:	ldr	r8, [sp, #16]
   14f2c:	add	sp, sp, #20
   14f30:	pop	{pc}		; (ldr pc, [sp], #4)
   14f34:	add	r7, r7, #28
   14f38:	sub	r8, r8, #1
   14f3c:	cmn	r8, #1
   14f40:	beq	14f60 <argp_parse@@Base+0x1b48>
   14f44:	ldr	r4, [r7]
   14f48:	ldr	r3, [r7, #4]
   14f4c:	sub	r5, r3, #1
   14f50:	cmp	r3, #0
   14f54:	beq	14f34 <argp_parse@@Base+0x1b1c>
   14f58:	add	r4, r4, #24
   14f5c:	b	14ef4 <argp_parse@@Base+0x1adc>
   14f60:	mov	r7, #0
   14f64:	b	14f1c <argp_parse@@Base+0x1b04>
   14f68:	strd	r4, [sp, #-16]!
   14f6c:	str	r6, [sp, #8]
   14f70:	str	lr, [sp, #12]
   14f74:	ldr	r4, [r0, #16]
   14f78:	ldr	r0, [r0, #8]
   14f7c:	cmp	r0, #0
   14f80:	moveq	r5, #0
   14f84:	beq	14f98 <argp_parse@@Base+0x1b80>
   14f88:	mov	r1, #10
   14f8c:	bl	113c0 <strchr@plt>
   14f90:	adds	r5, r0, #0
   14f94:	movne	r5, #1
   14f98:	cmp	r4, #0
   14f9c:	beq	14fc0 <argp_parse@@Base+0x1ba8>
   14fa0:	ldr	r0, [r4]
   14fa4:	cmp	r0, #0
   14fa8:	beq	14fc0 <argp_parse@@Base+0x1ba8>
   14fac:	bl	14f68 <argp_parse@@Base+0x1b50>
   14fb0:	add	r5, r5, r0
   14fb4:	ldr	r0, [r4, #16]!
   14fb8:	cmp	r0, #0
   14fbc:	bne	14fac <argp_parse@@Base+0x1b94>
   14fc0:	mov	r0, r5
   14fc4:	ldrd	r4, [sp]
   14fc8:	ldr	r6, [sp, #8]
   14fcc:	add	sp, sp, #12
   14fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fd4:	strd	r4, [sp, #-16]!
   14fd8:	str	r6, [sp, #8]
   14fdc:	str	lr, [sp, #12]
   14fe0:	mov	r4, r0
   14fe4:	subs	r5, r2, #0
   14fe8:	beq	15020 <argp_parse@@Base+0x1c08>
   14fec:	mov	r6, r1
   14ff0:	ldr	r2, [r5, #20]
   14ff4:	cmp	r2, #0
   14ff8:	beq	15020 <argp_parse@@Base+0x1c08>
   14ffc:	mov	r1, r3
   15000:	mov	r0, r5
   15004:	bl	13f6c <argp_parse@@Base+0xb54>
   15008:	ldr	r3, [r5, #20]
   1500c:	mov	r2, r0
   15010:	mov	r1, r4
   15014:	mov	r0, r6
   15018:	blx	r3
   1501c:	mov	r4, r0
   15020:	mov	r0, r4
   15024:	ldrd	r4, [sp]
   15028:	ldr	r6, [sp, #8]
   1502c:	add	sp, sp, #12
   15030:	pop	{pc}		; (ldr pc, [sp], #4)
   15034:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15038:	strd	r6, [sp, #8]
   1503c:	strd	r8, [sp, #16]
   15040:	strd	sl, [sp, #24]
   15044:	str	lr, [sp, #32]
   15048:	sub	sp, sp, #20
   1504c:	ldr	r4, [r0]
   15050:	ldr	r9, [r0, #8]
   15054:	ldr	r6, [r0, #4]
   15058:	cmp	r6, #0
   1505c:	beq	150b0 <argp_parse@@Base+0x1c98>
   15060:	str	r3, [sp, #12]
   15064:	str	r2, [sp, #8]
   15068:	str	r1, [sp, #4]
   1506c:	mov	fp, r4
   15070:	mov	sl, #0
   15074:	b	15100 <argp_parse@@Base+0x1ce8>
   15078:	and	r3, r5, #4
   1507c:	cmp	r3, #0
   15080:	moveq	fp, r4
   15084:	tst	r5, #2
   15088:	bne	150a8 <argp_parse@@Base+0x1c90>
   1508c:	ldr	r3, [sp, #12]
   15090:	ldr	r2, [sp, #8]
   15094:	mov	r1, fp
   15098:	mov	r0, r4
   1509c:	ldr	ip, [sp, #4]
   150a0:	blx	ip
   150a4:	mov	r7, r0
   150a8:	add	r9, r9, #1
   150ac:	b	150e0 <argp_parse@@Base+0x1cc8>
   150b0:	mov	r7, #0
   150b4:	mov	r0, r7
   150b8:	add	sp, sp, #20
   150bc:	ldrd	r4, [sp]
   150c0:	ldrd	r6, [sp, #8]
   150c4:	ldrd	r8, [sp, #16]
   150c8:	ldrd	sl, [sp, #24]
   150cc:	add	sp, sp, #32
   150d0:	pop	{pc}		; (ldr pc, [sp], #4)
   150d4:	ldrb	r3, [r9]
   150d8:	cmp	r3, r8
   150dc:	beq	15078 <argp_parse@@Base+0x1c60>
   150e0:	add	r4, r4, #24
   150e4:	subs	r6, r6, #1
   150e8:	movne	r3, #1
   150ec:	moveq	r3, #0
   150f0:	cmp	r7, #0
   150f4:	movne	r3, #0
   150f8:	cmp	r3, #0
   150fc:	beq	150b4 <argp_parse@@Base+0x1c9c>
   15100:	ldr	r5, [r4, #12]
   15104:	ands	r7, r5, #8
   15108:	movne	r7, sl
   1510c:	bne	150e0 <argp_parse@@Base+0x1cc8>
   15110:	ldr	r8, [r4, #4]
   15114:	sub	r3, r8, #1
   15118:	cmp	r3, #254	; 0xfe
   1511c:	bhi	150e0 <argp_parse@@Base+0x1cc8>
   15120:	bl	1139c <__ctype_b_loc@plt>
   15124:	ldr	r2, [r0]
   15128:	lsl	r3, r8, #1
   1512c:	ldrh	r3, [r2, r3]
   15130:	tst	r3, #16384	; 0x4000
   15134:	bne	150d4 <argp_parse@@Base+0x1cbc>
   15138:	b	150e0 <argp_parse@@Base+0x1cc8>
   1513c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15140:	strd	r6, [sp, #8]
   15144:	strd	r8, [sp, #16]
   15148:	strd	sl, [sp, #24]
   1514c:	str	lr, [sp, #32]
   15150:	add	fp, sp, #32
   15154:	sub	sp, sp, #20
   15158:	ldr	r5, [r0, #4]
   1515c:	cmp	r5, #0
   15160:	beq	15308 <argp_parse@@Base+0x1ef0>
   15164:	str	r1, [fp, #-48]	; 0xffffffd0
   15168:	mov	r6, r0
   1516c:	ldr	r0, [r0, #8]
   15170:	bl	113b4 <strlen@plt>
   15174:	add	r3, r0, #8
   15178:	bic	r3, r3, #7
   1517c:	sub	sp, sp, r3
   15180:	mov	r8, sp
   15184:	str	r8, [fp, #-40]	; 0xffffffd8
   15188:	ldr	r4, [r6]
   1518c:	movw	r7, #19832	; 0x4d78
   15190:	movt	r7, #1
   15194:	ldr	r2, [r4, #20]
   15198:	sub	r3, fp, #40	; 0x28
   1519c:	ldr	r2, [r2, #24]
   151a0:	mov	r1, r7
   151a4:	mov	r0, r4
   151a8:	bl	15034 <argp_parse@@Base+0x1c1c>
   151ac:	add	r4, r4, #28
   151b0:	subs	r5, r5, #1
   151b4:	bne	15194 <argp_parse@@Base+0x1d7c>
   151b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   151bc:	cmp	r3, r8
   151c0:	bhi	15234 <argp_parse@@Base+0x1e1c>
   151c4:	ldr	r4, [r6]
   151c8:	ldr	r5, [r6, #4]
   151cc:	cmp	r5, #0
   151d0:	beq	15308 <argp_parse@@Base+0x1ef0>
   151d4:	movw	r7, #21760	; 0x5500
   151d8:	movt	r7, #1
   151dc:	ldr	r2, [r4, #20]
   151e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   151e4:	ldr	r2, [r2, #24]
   151e8:	mov	r1, r7
   151ec:	mov	r0, r4
   151f0:	bl	15034 <argp_parse@@Base+0x1c1c>
   151f4:	add	r4, r4, #28
   151f8:	subs	r5, r5, #1
   151fc:	bne	151dc <argp_parse@@Base+0x1dc4>
   15200:	ldr	r7, [r6]
   15204:	ldr	r8, [r6, #4]
   15208:	cmp	r8, #0
   1520c:	beq	15308 <argp_parse@@Base+0x1ef0>
   15210:	add	r7, r7, #28
   15214:	movw	sl, #41228	; 0xa10c
   15218:	movt	sl, #1
   1521c:	movw	r9, #41212	; 0xa0fc
   15220:	movt	r9, #1
   15224:	movw	r3, #41240	; 0xa118
   15228:	movt	r3, #1
   1522c:	str	r3, [fp, #-52]	; 0xffffffcc
   15230:	b	152f0 <argp_parse@@Base+0x1ed8>
   15234:	add	r2, r3, #1
   15238:	str	r2, [fp, #-40]	; 0xffffffd8
   1523c:	mov	r2, #0
   15240:	strb	r2, [r3]
   15244:	mov	r2, r8
   15248:	movw	r1, #41204	; 0xa0f4
   1524c:	movt	r1, #1
   15250:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15254:	bl	19564 <argp_error@@Base+0x1550>
   15258:	b	151c4 <argp_parse@@Base+0x1dac>
   1525c:	tst	r1, #16
   15260:	bne	15294 <argp_parse@@Base+0x1e7c>
   15264:	ldr	r3, [r6, #8]
   15268:	cmp	r3, #0
   1526c:	bne	15280 <argp_parse@@Base+0x1e68>
   15270:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15274:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15278:	bl	19564 <argp_error@@Base+0x1550>
   1527c:	b	15294 <argp_parse@@Base+0x1e7c>
   15280:	tst	r1, #1
   15284:	movne	r1, r9
   15288:	moveq	r1, sl
   1528c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15290:	bl	19564 <argp_error@@Base+0x1550>
   15294:	add	r4, r4, #24
   15298:	subs	r5, r5, #1
   1529c:	beq	152e4 <argp_parse@@Base+0x1ecc>
   152a0:	ldr	r2, [r4]
   152a4:	cmp	r2, #0
   152a8:	beq	15294 <argp_parse@@Base+0x1e7c>
   152ac:	ldr	r1, [r4, #12]
   152b0:	and	r3, r1, #4
   152b4:	cmp	r3, #0
   152b8:	moveq	r6, r4
   152bc:	tst	r1, #2
   152c0:	bne	15294 <argp_parse@@Base+0x1e7c>
   152c4:	ldr	r3, [r4, #8]
   152c8:	ldr	r0, [r6, #12]
   152cc:	orr	r1, r1, r0
   152d0:	cmp	r3, #0
   152d4:	beq	1525c <argp_parse@@Base+0x1e44>
   152d8:	tst	r1, #16
   152dc:	beq	15280 <argp_parse@@Base+0x1e68>
   152e0:	b	15294 <argp_parse@@Base+0x1e7c>
   152e4:	add	r7, r7, #28
   152e8:	subs	r8, r8, #1
   152ec:	beq	15308 <argp_parse@@Base+0x1ef0>
   152f0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   152f4:	ldr	r5, [r7, #-24]	; 0xffffffe8
   152f8:	cmp	r5, #0
   152fc:	beq	152e4 <argp_parse@@Base+0x1ecc>
   15300:	mov	r6, r4
   15304:	b	152a0 <argp_parse@@Base+0x1e88>
   15308:	sub	sp, fp, #32
   1530c:	ldrd	r4, [sp]
   15310:	ldrd	r6, [sp, #8]
   15314:	ldrd	r8, [sp, #16]
   15318:	ldrd	sl, [sp, #24]
   1531c:	add	sp, sp, #32
   15320:	pop	{pc}		; (ldr pc, [sp], #4)
   15324:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15328:	strd	r6, [sp, #8]
   1532c:	str	r8, [sp, #16]
   15330:	str	lr, [sp, #20]
   15334:	mov	r4, r0
   15338:	mov	r5, r1
   1533c:	ldr	r3, [r0, #28]
   15340:	ldr	r2, [r0, #24]
   15344:	sub	r3, r3, r2
   15348:	ldr	r2, [r0, #16]
   1534c:	cmp	r3, r2
   15350:	bhi	1536c <argp_parse@@Base+0x1f54>
   15354:	ldr	r3, [r4, #20]
   15358:	cmp	r3, #0
   1535c:	subge	r5, r5, r3
   15360:	mov	r6, #32
   15364:	mov	r7, #1
   15368:	b	15388 <argp_parse@@Base+0x1f70>
   1536c:	bl	18eec <argp_error@@Base+0xed8>
   15370:	b	15354 <argp_parse@@Base+0x1f3c>
   15374:	ldr	r3, [r4, #28]
   15378:	add	r2, r3, #1
   1537c:	str	r2, [r4, #28]
   15380:	strb	r6, [r3]
   15384:	sub	r5, r5, #1
   15388:	cmp	r5, #0
   1538c:	ble	153b8 <argp_parse@@Base+0x1fa0>
   15390:	ldr	r2, [r4, #28]
   15394:	ldr	r3, [r4, #32]
   15398:	cmp	r2, r3
   1539c:	bcc	15374 <argp_parse@@Base+0x1f5c>
   153a0:	mov	r1, r7
   153a4:	mov	r0, r4
   153a8:	bl	19464 <argp_error@@Base+0x1450>
   153ac:	cmp	r0, #0
   153b0:	bne	15374 <argp_parse@@Base+0x1f5c>
   153b4:	b	15384 <argp_parse@@Base+0x1f6c>
   153b8:	ldrd	r4, [sp]
   153bc:	ldrd	r6, [sp, #8]
   153c0:	ldr	r8, [sp, #16]
   153c4:	add	sp, sp, #20
   153c8:	pop	{pc}		; (ldr pc, [sp], #4)
   153cc:	strd	r4, [sp, #-16]!
   153d0:	str	r6, [sp, #8]
   153d4:	str	lr, [sp, #12]
   153d8:	ldr	r4, [r0, #12]
   153dc:	ands	r4, r4, #8
   153e0:	movne	r4, #0
   153e4:	bne	15414 <argp_parse@@Base+0x1ffc>
   153e8:	ldr	r5, [r0, #4]
   153ec:	sub	r3, r5, #1
   153f0:	cmp	r3, #254	; 0xfe
   153f4:	bhi	15414 <argp_parse@@Base+0x1ffc>
   153f8:	bl	1139c <__ctype_b_loc@plt>
   153fc:	ldr	r2, [r0]
   15400:	lsl	r3, r5, #1
   15404:	ldrh	r3, [r2, r3]
   15408:	and	r3, r3, #16384	; 0x4000
   1540c:	cmp	r3, #0
   15410:	movne	r4, r5
   15414:	mov	r0, r4
   15418:	ldrd	r4, [sp]
   1541c:	ldr	r6, [sp, #8]
   15420:	add	sp, sp, #12
   15424:	pop	{pc}		; (ldr pc, [sp], #4)
   15428:	strd	r4, [sp, #-16]!
   1542c:	str	r6, [sp, #8]
   15430:	str	lr, [sp, #12]
   15434:	mov	r4, r0
   15438:	mov	r5, r1
   1543c:	ldr	r3, [r0, #28]
   15440:	ldr	r2, [r0, #24]
   15444:	sub	r3, r3, r2
   15448:	ldr	r2, [r0, #16]
   1544c:	cmp	r3, r2
   15450:	bhi	154a0 <argp_parse@@Base+0x2088>
   15454:	ldr	r3, [r4, #20]
   15458:	cmp	r3, #0
   1545c:	addge	r5, r5, r3
   15460:	ldr	r3, [r4, #8]
   15464:	cmp	r5, r3
   15468:	bcc	154c0 <argp_parse@@Base+0x20a8>
   1546c:	ldr	r2, [r4, #28]
   15470:	ldr	r3, [r4, #32]
   15474:	cmp	r2, r3
   15478:	bcs	154a8 <argp_parse@@Base+0x2090>
   1547c:	ldr	r3, [r4, #28]
   15480:	add	r2, r3, #1
   15484:	str	r2, [r4, #28]
   15488:	mov	r2, #10
   1548c:	strb	r2, [r3]
   15490:	ldrd	r4, [sp]
   15494:	ldr	r6, [sp, #8]
   15498:	add	sp, sp, #12
   1549c:	pop	{pc}		; (ldr pc, [sp], #4)
   154a0:	bl	18eec <argp_error@@Base+0xed8>
   154a4:	b	15454 <argp_parse@@Base+0x203c>
   154a8:	mov	r1, #1
   154ac:	mov	r0, r4
   154b0:	bl	19464 <argp_error@@Base+0x1450>
   154b4:	cmp	r0, #0
   154b8:	bne	1547c <argp_parse@@Base+0x2064>
   154bc:	b	15490 <argp_parse@@Base+0x2078>
   154c0:	ldr	r2, [r4, #28]
   154c4:	ldr	r3, [r4, #32]
   154c8:	cmp	r2, r3
   154cc:	bcs	154e8 <argp_parse@@Base+0x20d0>
   154d0:	ldr	r3, [r4, #28]
   154d4:	add	r2, r3, #1
   154d8:	str	r2, [r4, #28]
   154dc:	mov	r2, #32
   154e0:	strb	r2, [r3]
   154e4:	b	15490 <argp_parse@@Base+0x2078>
   154e8:	mov	r1, #1
   154ec:	mov	r0, r4
   154f0:	bl	19464 <argp_error@@Base+0x1450>
   154f4:	cmp	r0, #0
   154f8:	bne	154d0 <argp_parse@@Base+0x20b8>
   154fc:	b	15490 <argp_parse@@Base+0x2078>
   15500:	strd	r4, [sp, #-16]!
   15504:	str	r6, [sp, #8]
   15508:	str	lr, [sp, #12]
   1550c:	ldr	r5, [r0, #8]
   15510:	cmp	r5, #0
   15514:	beq	15558 <argp_parse@@Base+0x2140>
   15518:	ldr	r2, [r0, #12]
   1551c:	ldr	r1, [r1, #12]
   15520:	orr	r2, r2, r1
   15524:	tst	r2, #16
   15528:	bne	15564 <argp_parse@@Base+0x214c>
   1552c:	mov	r6, r3
   15530:	mov	r4, r0
   15534:	tst	r2, #1
   15538:	beq	15578 <argp_parse@@Base+0x2160>
   1553c:	mov	r3, r5
   15540:	ldr	r2, [r0, #4]
   15544:	movw	r1, #41248	; 0xa120
   15548:	movt	r1, #1
   1554c:	mov	r0, r6
   15550:	bl	19564 <argp_error@@Base+0x1550>
   15554:	b	15564 <argp_parse@@Base+0x214c>
   15558:	ldr	r5, [r1, #8]
   1555c:	cmp	r5, #0
   15560:	bne	15518 <argp_parse@@Base+0x2100>
   15564:	mov	r0, #0
   15568:	ldrd	r4, [sp]
   1556c:	ldr	r6, [sp, #8]
   15570:	add	sp, sp, #12
   15574:	pop	{pc}		; (ldr pc, [sp], #4)
   15578:	mov	r0, r5
   1557c:	bl	113b4 <strlen@plt>
   15580:	add	r1, r0, #6
   15584:	mov	r0, r6
   15588:	bl	15428 <argp_parse@@Base+0x2010>
   1558c:	mov	r3, r5
   15590:	ldr	r2, [r4, #4]
   15594:	movw	r1, #41260	; 0xa12c
   15598:	movt	r1, #1
   1559c:	mov	r0, r6
   155a0:	bl	19564 <argp_error@@Base+0x1550>
   155a4:	b	15564 <argp_parse@@Base+0x214c>
   155a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   155ac:	strd	r6, [sp, #8]
   155b0:	strd	r8, [sp, #16]
   155b4:	strd	sl, [sp, #24]
   155b8:	str	lr, [sp, #32]
   155bc:	sub	sp, sp, #28
   155c0:	str	r1, [sp, #8]
   155c4:	mov	sl, r2
   155c8:	mov	r4, r3
   155cc:	ldr	r9, [sp, #64]	; 0x40
   155d0:	ldr	r6, [r2]
   155d4:	str	r6, [sp, #20]
   155d8:	ldr	r7, [r0, #16]
   155dc:	ldr	r2, [r0, #8]
   155e0:	mov	ip, r2
   155e4:	str	r2, [sp, #16]
   155e8:	mov	r3, r1
   155ec:	mov	r2, r0
   155f0:	mov	r1, #6
   155f4:	movt	r1, #512	; 0x200
   155f8:	mov	r0, ip
   155fc:	bl	14fd4 <argp_parse@@Base+0x1bbc>
   15600:	cmp	r0, #0
   15604:	str	r0, [sp, #12]
   15608:	beq	15798 <argp_parse@@Base+0x2380>
   1560c:	mov	r1, #10
   15610:	bl	11258 <strchrnul@plt>
   15614:	mov	r5, r0
   15618:	ldrb	r3, [r0]
   1561c:	cmp	r3, #0
   15620:	beq	15768 <argp_parse@@Base+0x2350>
   15624:	ldrb	fp, [r6]
   15628:	cmp	fp, #0
   1562c:	ble	15760 <argp_parse@@Base+0x2348>
   15630:	mov	r6, #0
   15634:	add	r8, r0, #1
   15638:	mov	r1, #10
   1563c:	mov	r0, r8
   15640:	bl	11258 <strchrnul@plt>
   15644:	add	r6, r6, #1
   15648:	cmp	r6, fp
   1564c:	bne	15634 <argp_parse@@Base+0x221c>
   15650:	mov	r5, r0
   15654:	ldr	r3, [sl]
   15658:	add	r3, r3, #1
   1565c:	str	r3, [sl]
   15660:	mov	fp, #1
   15664:	add	r1, r5, #1
   15668:	sub	r1, r1, r8
   1566c:	mov	r0, r9
   15670:	bl	15428 <argp_parse@@Base+0x2010>
   15674:	sub	r6, r5, r8
   15678:	ldr	r3, [r9, #28]
   1567c:	add	r3, r3, r6
   15680:	ldr	r2, [r9, #32]
   15684:	cmp	r2, r3
   15688:	bcs	156a0 <argp_parse@@Base+0x2288>
   1568c:	mov	r1, r6
   15690:	mov	r0, r9
   15694:	bl	19464 <argp_error@@Base+0x1450>
   15698:	cmp	r0, #0
   1569c:	beq	156bc <argp_parse@@Base+0x22a4>
   156a0:	mov	r2, r6
   156a4:	mov	r1, r8
   156a8:	ldr	r0, [r9, #28]
   156ac:	bl	11288 <memcpy@plt>
   156b0:	ldr	r3, [r9, #28]
   156b4:	add	r6, r3, r6
   156b8:	str	r6, [r9, #28]
   156bc:	ldr	r2, [sp, #16]
   156c0:	ldr	r3, [sp, #12]
   156c4:	cmp	r2, r3
   156c8:	bne	15774 <argp_parse@@Base+0x235c>
   156cc:	cmp	r7, #0
   156d0:	beq	1570c <argp_parse@@Base+0x22f4>
   156d4:	ldr	r0, [r7]
   156d8:	cmp	r0, #0
   156dc:	beq	1570c <argp_parse@@Base+0x22f4>
   156e0:	mov	r3, r4
   156e4:	str	r9, [sp]
   156e8:	mov	r2, sl
   156ec:	ldr	r1, [sp, #8]
   156f0:	bl	155a8 <argp_parse@@Base+0x2190>
   156f4:	clz	r3, r0
   156f8:	lsr	r3, r3, #5
   156fc:	ldr	r0, [r7, #16]!
   15700:	cmp	r0, #0
   15704:	bne	156e4 <argp_parse@@Base+0x22cc>
   15708:	mov	r4, r3
   1570c:	cmp	r4, #0
   15710:	moveq	fp, #0
   15714:	cmp	fp, #0
   15718:	beq	1573c <argp_parse@@Base+0x2324>
   1571c:	ldrb	r3, [r5]
   15720:	cmp	r3, #0
   15724:	beq	15780 <argp_parse@@Base+0x2368>
   15728:	ldr	r2, [sp, #20]
   1572c:	ldrb	r3, [r2]
   15730:	add	r3, r3, #1
   15734:	strb	r3, [r2]
   15738:	mov	r4, #0
   1573c:	clz	r0, r4
   15740:	lsr	r0, r0, #5
   15744:	add	sp, sp, #28
   15748:	ldrd	r4, [sp]
   1574c:	ldrd	r6, [sp, #8]
   15750:	ldrd	r8, [sp, #16]
   15754:	ldrd	sl, [sp, #24]
   15758:	add	sp, sp, #32
   1575c:	pop	{pc}		; (ldr pc, [sp], #4)
   15760:	ldr	r8, [sp, #12]
   15764:	b	15654 <argp_parse@@Base+0x223c>
   15768:	ldr	r8, [sp, #12]
   1576c:	mov	fp, #0
   15770:	b	15664 <argp_parse@@Base+0x224c>
   15774:	mov	r0, r3
   15778:	bl	140f0 <argp_parse@@Base+0xcd8>
   1577c:	b	156cc <argp_parse@@Base+0x22b4>
   15780:	ldr	r2, [sp, #20]
   15784:	ldrb	r3, [r2]
   15788:	cmp	r3, #0
   1578c:	movne	r3, #0
   15790:	strbne	r3, [r2]
   15794:	b	1573c <argp_parse@@Base+0x2324>
   15798:	cmp	r7, #0
   1579c:	beq	1573c <argp_parse@@Base+0x2324>
   157a0:	ldr	r5, [sp, #12]
   157a4:	mov	fp, #0
   157a8:	b	156d4 <argp_parse@@Base+0x22bc>
   157ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   157b0:	strd	r6, [sp, #8]
   157b4:	str	r8, [sp, #16]
   157b8:	str	lr, [sp, #20]
   157bc:	mov	r6, r0
   157c0:	mov	r4, r2
   157c4:	ldr	r3, [r2, #16]
   157c8:	mov	r2, r1
   157cc:	mov	r1, #3
   157d0:	movt	r1, #512	; 0x200
   157d4:	bl	14fd4 <argp_parse@@Base+0x1bbc>
   157d8:	subs	r5, r0, #0
   157dc:	beq	158f0 <argp_parse@@Base+0x24d8>
   157e0:	ldrb	r3, [r5]
   157e4:	cmp	r3, #0
   157e8:	beq	158e4 <argp_parse@@Base+0x24cc>
   157ec:	ldr	r3, [r4, #8]
   157f0:	ldr	r3, [r3]
   157f4:	cmp	r3, #0
   157f8:	beq	15824 <argp_parse@@Base+0x240c>
   157fc:	ldr	r7, [r4, #4]
   15800:	ldr	r2, [r7, #28]
   15804:	ldr	r3, [r7, #32]
   15808:	cmp	r2, r3
   1580c:	bcs	15914 <argp_parse@@Base+0x24fc>
   15810:	ldr	r3, [r7, #28]
   15814:	add	r2, r3, #1
   15818:	str	r2, [r7, #28]
   1581c:	mov	r2, #10
   15820:	strb	r2, [r3]
   15824:	movw	r8, #45732	; 0xb2a4
   15828:	movt	r8, #2
   1582c:	ldr	r1, [r8, #24]
   15830:	ldr	r0, [r4, #4]
   15834:	bl	15324 <argp_parse@@Base+0x1f0c>
   15838:	ldr	r7, [r4, #4]
   1583c:	ldr	r8, [r8, #24]
   15840:	ldr	r3, [r7, #28]
   15844:	ldr	r2, [r7, #24]
   15848:	sub	r3, r3, r2
   1584c:	ldr	r2, [r7, #16]
   15850:	cmp	r3, r2
   15854:	bhi	1592c <argp_parse@@Base+0x2514>
   15858:	str	r8, [r7, #4]
   1585c:	ldr	r7, [r4, #4]
   15860:	movw	r3, #45732	; 0xb2a4
   15864:	movt	r3, #2
   15868:	ldr	r8, [r3, #24]
   1586c:	ldr	r3, [r7, #28]
   15870:	ldr	r2, [r7, #24]
   15874:	sub	r3, r3, r2
   15878:	ldr	r2, [r7, #16]
   1587c:	cmp	r3, r2
   15880:	bhi	15938 <argp_parse@@Base+0x2520>
   15884:	str	r8, [r7, #12]
   15888:	mov	r0, r5
   1588c:	bl	113b4 <strlen@plt>
   15890:	subs	r7, r0, #0
   15894:	bne	15944 <argp_parse@@Base+0x252c>
   15898:	ldr	r7, [r4, #4]
   1589c:	ldr	r3, [r7, #28]
   158a0:	ldr	r2, [r7, #24]
   158a4:	sub	r3, r3, r2
   158a8:	ldr	r2, [r7, #16]
   158ac:	cmp	r3, r2
   158b0:	bhi	15990 <argp_parse@@Base+0x2578>
   158b4:	mov	r3, #0
   158b8:	str	r3, [r7, #4]
   158bc:	ldr	r7, [r4, #4]
   158c0:	ldr	r2, [r7, #28]
   158c4:	ldr	r3, [r7, #32]
   158c8:	cmp	r2, r3
   158cc:	bcs	1599c <argp_parse@@Base+0x2584>
   158d0:	ldr	r3, [r7, #28]
   158d4:	add	r2, r3, #1
   158d8:	str	r2, [r7, #28]
   158dc:	mov	r2, #10
   158e0:	strb	r2, [r3]
   158e4:	ldr	r3, [r4, #8]
   158e8:	mov	r2, #1
   158ec:	str	r2, [r3, #4]
   158f0:	cmp	r6, r5
   158f4:	beq	15900 <argp_parse@@Base+0x24e8>
   158f8:	mov	r0, r5
   158fc:	bl	140f0 <argp_parse@@Base+0xcd8>
   15900:	ldrd	r4, [sp]
   15904:	ldrd	r6, [sp, #8]
   15908:	ldr	r8, [sp, #16]
   1590c:	add	sp, sp, #20
   15910:	pop	{pc}		; (ldr pc, [sp], #4)
   15914:	mov	r1, #1
   15918:	mov	r0, r7
   1591c:	bl	19464 <argp_error@@Base+0x1450>
   15920:	cmp	r0, #0
   15924:	bne	15810 <argp_parse@@Base+0x23f8>
   15928:	b	15824 <argp_parse@@Base+0x240c>
   1592c:	mov	r0, r7
   15930:	bl	18eec <argp_error@@Base+0xed8>
   15934:	b	15858 <argp_parse@@Base+0x2440>
   15938:	mov	r0, r7
   1593c:	bl	18eec <argp_error@@Base+0xed8>
   15940:	b	15884 <argp_parse@@Base+0x246c>
   15944:	ldr	r8, [r4, #4]
   15948:	ldr	r3, [r8, #28]
   1594c:	add	r3, r3, r7
   15950:	ldr	r2, [r8, #32]
   15954:	cmp	r2, r3
   15958:	bcs	15970 <argp_parse@@Base+0x2558>
   1595c:	mov	r1, r7
   15960:	mov	r0, r8
   15964:	bl	19464 <argp_error@@Base+0x1450>
   15968:	cmp	r0, #0
   1596c:	beq	15898 <argp_parse@@Base+0x2480>
   15970:	mov	r2, r7
   15974:	mov	r1, r5
   15978:	ldr	r0, [r8, #28]
   1597c:	bl	11288 <memcpy@plt>
   15980:	ldr	r3, [r8, #28]
   15984:	add	r7, r3, r7
   15988:	str	r7, [r8, #28]
   1598c:	b	15898 <argp_parse@@Base+0x2480>
   15990:	mov	r0, r7
   15994:	bl	18eec <argp_error@@Base+0xed8>
   15998:	b	158b4 <argp_parse@@Base+0x249c>
   1599c:	mov	r1, #1
   159a0:	mov	r0, r7
   159a4:	bl	19464 <argp_error@@Base+0x1450>
   159a8:	cmp	r0, #0
   159ac:	bne	158d0 <argp_parse@@Base+0x24b8>
   159b0:	b	158e4 <argp_parse@@Base+0x24cc>
   159b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   159b8:	strd	r6, [sp, #8]
   159bc:	str	r8, [sp, #16]
   159c0:	str	lr, [sp, #20]
   159c4:	mov	r6, r0
   159c8:	mov	r4, r1
   159cc:	ldr	r3, [r1, #12]
   159d0:	cmp	r3, #0
   159d4:	beq	15b08 <argp_parse@@Base+0x26f0>
   159d8:	ldr	r3, [r1, #8]
   159dc:	ldr	r7, [r3]
   159e0:	ldr	r2, [r1]
   159e4:	ldr	r5, [r2, #16]
   159e8:	ldr	r3, [r3, #4]
   159ec:	cmp	r3, #0
   159f0:	cmpne	r7, #0
   159f4:	bne	15aa8 <argp_parse@@Base+0x2690>
   159f8:	cmp	r5, #0
   159fc:	beq	15a80 <argp_parse@@Base+0x2668>
   15a00:	ldr	r0, [r5]
   15a04:	cmp	r0, #0
   15a08:	beq	15a80 <argp_parse@@Base+0x2668>
   15a0c:	ldrb	r3, [r0]
   15a10:	cmp	r3, #0
   15a14:	beq	15a80 <argp_parse@@Base+0x2668>
   15a18:	cmp	r7, #0
   15a1c:	beq	15a4c <argp_parse@@Base+0x2634>
   15a20:	ldr	r3, [r7, #16]
   15a24:	cmp	r3, r5
   15a28:	beq	15a80 <argp_parse@@Base+0x2668>
   15a2c:	cmp	r3, #0
   15a30:	beq	15a4c <argp_parse@@Base+0x2634>
   15a34:	ldr	r3, [r3, #12]
   15a38:	cmp	r3, #0
   15a3c:	cmpne	r5, r3
   15a40:	bne	15a34 <argp_parse@@Base+0x261c>
   15a44:	cmp	r5, r3
   15a48:	beq	15a80 <argp_parse@@Base+0x2668>
   15a4c:	ldr	r3, [r4, #4]
   15a50:	ldr	r7, [r3, #12]
   15a54:	mov	r2, r4
   15a58:	ldr	r1, [r5, #16]
   15a5c:	bl	157ac <argp_parse@@Base+0x2394>
   15a60:	ldr	r5, [r4, #4]
   15a64:	ldr	r3, [r5, #28]
   15a68:	ldr	r2, [r5, #24]
   15a6c:	sub	r3, r3, r2
   15a70:	ldr	r2, [r5, #16]
   15a74:	cmp	r3, r2
   15a78:	bhi	15afc <argp_parse@@Base+0x26e4>
   15a7c:	str	r7, [r5, #12]
   15a80:	mov	r3, #0
   15a84:	str	r3, [r4, #12]
   15a88:	mov	r1, r6
   15a8c:	ldr	r0, [r4, #4]
   15a90:	bl	15324 <argp_parse@@Base+0x1f0c>
   15a94:	ldrd	r4, [sp]
   15a98:	ldrd	r6, [sp, #8]
   15a9c:	ldr	r8, [sp, #16]
   15aa0:	add	sp, sp, #20
   15aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   15aa8:	ldr	r2, [r2, #12]
   15aac:	ldr	r3, [r7, #12]
   15ab0:	cmp	r2, r3
   15ab4:	beq	159f8 <argp_parse@@Base+0x25e0>
   15ab8:	ldr	r8, [r1, #4]
   15abc:	ldr	r2, [r8, #28]
   15ac0:	ldr	r3, [r8, #32]
   15ac4:	cmp	r2, r3
   15ac8:	bcs	15ae4 <argp_parse@@Base+0x26cc>
   15acc:	ldr	r3, [r8, #28]
   15ad0:	add	r2, r3, #1
   15ad4:	str	r2, [r8, #28]
   15ad8:	mov	r2, #10
   15adc:	strb	r2, [r3]
   15ae0:	b	159f8 <argp_parse@@Base+0x25e0>
   15ae4:	mov	r1, #1
   15ae8:	mov	r0, r8
   15aec:	bl	19464 <argp_error@@Base+0x1450>
   15af0:	cmp	r0, #0
   15af4:	bne	15acc <argp_parse@@Base+0x26b4>
   15af8:	b	159f8 <argp_parse@@Base+0x25e0>
   15afc:	mov	r0, r5
   15b00:	bl	18eec <argp_error@@Base+0xed8>
   15b04:	b	15a7c <argp_parse@@Base+0x2664>
   15b08:	ldr	r5, [r1, #4]
   15b0c:	ldr	r3, [r5, #28]
   15b10:	add	r3, r3, #2
   15b14:	ldr	r2, [r5, #32]
   15b18:	cmp	r2, r3
   15b1c:	bcs	15b34 <argp_parse@@Base+0x271c>
   15b20:	mov	r1, #2
   15b24:	mov	r0, r5
   15b28:	bl	19464 <argp_error@@Base+0x1450>
   15b2c:	cmp	r0, #0
   15b30:	beq	15a88 <argp_parse@@Base+0x2670>
   15b34:	ldr	r2, [r5, #28]
   15b38:	movw	r3, #41272	; 0xa138
   15b3c:	movt	r3, #1
   15b40:	ldrh	r3, [r3]
   15b44:	strh	r3, [r2]
   15b48:	ldr	r3, [r5, #28]
   15b4c:	add	r3, r3, #2
   15b50:	str	r3, [r5, #28]
   15b54:	b	15a88 <argp_parse@@Base+0x2670>
   15b58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15b5c:	strd	r6, [sp, #8]
   15b60:	strd	r8, [sp, #16]
   15b64:	strd	sl, [sp, #24]
   15b68:	str	lr, [sp, #32]
   15b6c:	sub	sp, sp, #28
   15b70:	mov	r8, r0
   15b74:	str	r1, [sp, #12]
   15b78:	str	r2, [sp, #8]
   15b7c:	mov	fp, r3
   15b80:	ldr	sl, [sp, #64]	; 0x40
   15b84:	ldr	r4, [sp, #68]	; 0x44
   15b88:	ldr	r6, [r0, #12]
   15b8c:	ldr	r9, [r0, #16]
   15b90:	cmp	r6, #0
   15b94:	beq	16010 <argp_parse@@Base+0x2bf8>
   15b98:	mov	r5, r2
   15b9c:	mov	r1, #11
   15ba0:	mov	r0, r6
   15ba4:	bl	113c0 <strchr@plt>
   15ba8:	cmp	r5, #0
   15bac:	beq	15bec <argp_parse@@Base+0x27d4>
   15bb0:	cmp	r0, #0
   15bb4:	addne	r6, r0, #1
   15bb8:	beq	16058 <argp_parse@@Base+0x2c40>
   15bbc:	ldr	r3, [r8, #20]
   15bc0:	cmp	r3, #0
   15bc4:	beq	16060 <argp_parse@@Base+0x2c48>
   15bc8:	ldr	r1, [sp, #12]
   15bcc:	mov	r0, r8
   15bd0:	bl	13f6c <argp_parse@@Base+0xb54>
   15bd4:	str	r0, [sp, #16]
   15bd8:	ldr	r3, [r8, #20]
   15bdc:	mov	r7, #0
   15be0:	mov	r0, #2
   15be4:	movt	r0, #512	; 0x200
   15be8:	b	15c38 <argp_parse@@Base+0x2820>
   15bec:	cmp	r0, #0
   15bf0:	beq	1607c <argp_parse@@Base+0x2c64>
   15bf4:	sub	r7, r0, r6
   15bf8:	ldr	r3, [r8, #20]
   15bfc:	cmp	r3, #0
   15c00:	beq	15e20 <argp_parse@@Base+0x2a08>
   15c04:	cmp	r7, #0
   15c08:	beq	15c1c <argp_parse@@Base+0x2804>
   15c0c:	mov	r1, r7
   15c10:	mov	r0, r6
   15c14:	bl	1127c <strndup@plt>
   15c18:	mov	r6, r0
   15c1c:	ldr	r1, [sp, #12]
   15c20:	mov	r0, r8
   15c24:	bl	13f6c <argp_parse@@Base+0xb54>
   15c28:	str	r0, [sp, #16]
   15c2c:	ldr	r3, [r8, #20]
   15c30:	mov	r0, #1
   15c34:	movt	r0, #512	; 0x200
   15c38:	ldr	r2, [sp, #16]
   15c3c:	mov	r1, r6
   15c40:	blx	r3
   15c44:	subs	r5, r0, #0
   15c48:	beq	15f2c <argp_parse@@Base+0x2b14>
   15c4c:	cmp	fp, #0
   15c50:	bne	15e30 <argp_parse@@Base+0x2a18>
   15c54:	cmp	r5, r6
   15c58:	movne	r3, #0
   15c5c:	moveq	r3, #1
   15c60:	cmp	r7, #0
   15c64:	moveq	r3, #0
   15c68:	cmp	r3, #0
   15c6c:	beq	15e70 <argp_parse@@Base+0x2a58>
   15c70:	ldr	r3, [r4, #28]
   15c74:	add	r3, r3, r7
   15c78:	ldr	r2, [r4, #32]
   15c7c:	cmp	r2, r3
   15c80:	bcs	15c98 <argp_parse@@Base+0x2880>
   15c84:	mov	r1, r7
   15c88:	mov	r0, r4
   15c8c:	bl	19464 <argp_error@@Base+0x1450>
   15c90:	cmp	r0, #0
   15c94:	beq	15cb4 <argp_parse@@Base+0x289c>
   15c98:	mov	r2, r7
   15c9c:	mov	r1, r6
   15ca0:	ldr	r0, [r4, #28]
   15ca4:	bl	11288 <memcpy@plt>
   15ca8:	ldr	r3, [r4, #28]
   15cac:	add	r3, r3, r7
   15cb0:	str	r3, [r4, #28]
   15cb4:	ldr	r3, [r4, #28]
   15cb8:	ldr	r2, [r4, #24]
   15cbc:	sub	r3, r3, r2
   15cc0:	ldr	r2, [r4, #16]
   15cc4:	cmp	r3, r2
   15cc8:	bhi	15ed0 <argp_parse@@Base+0x2ab8>
   15ccc:	ldr	r3, [r4, #20]
   15cd0:	bic	r3, r3, r3, asr #31
   15cd4:	ldr	r2, [r4, #4]
   15cd8:	cmp	r2, r3
   15cdc:	bcc	15edc <argp_parse@@Base+0x2ac4>
   15ce0:	cmp	r5, r6
   15ce4:	moveq	r5, #1
   15ce8:	bne	15f1c <argp_parse@@Base+0x2b04>
   15cec:	cmp	r6, #0
   15cf0:	cmpne	r7, #0
   15cf4:	beq	15d0c <argp_parse@@Base+0x28f4>
   15cf8:	ldr	r3, [r8, #20]
   15cfc:	cmp	r3, #0
   15d00:	beq	15d90 <argp_parse@@Base+0x2978>
   15d04:	mov	r0, r6
   15d08:	bl	140f0 <argp_parse@@Base+0xcd8>
   15d0c:	ldr	r3, [sp, #8]
   15d10:	cmp	r3, #0
   15d14:	beq	15d90 <argp_parse@@Base+0x2978>
   15d18:	ldr	r3, [r8, #20]
   15d1c:	cmp	r3, #0
   15d20:	beq	15d90 <argp_parse@@Base+0x2978>
   15d24:	ldr	r2, [sp, #16]
   15d28:	mov	r1, #0
   15d2c:	mov	r0, #4
   15d30:	movt	r0, #512	; 0x200
   15d34:	blx	r3
   15d38:	subs	r6, r0, #0
   15d3c:	beq	15d90 <argp_parse@@Base+0x2978>
   15d40:	orrs	r3, fp, r5
   15d44:	bne	15f34 <argp_parse@@Base+0x2b1c>
   15d48:	mov	r0, r6
   15d4c:	bl	113b4 <strlen@plt>
   15d50:	subs	r5, r0, #0
   15d54:	bne	15f74 <argp_parse@@Base+0x2b5c>
   15d58:	mov	r0, r6
   15d5c:	bl	140f0 <argp_parse@@Base+0xcd8>
   15d60:	ldr	r3, [r4, #28]
   15d64:	ldr	r2, [r4, #24]
   15d68:	sub	r3, r3, r2
   15d6c:	ldr	r2, [r4, #16]
   15d70:	cmp	r3, r2
   15d74:	bhi	15fbc <argp_parse@@Base+0x2ba4>
   15d78:	ldr	r3, [r4, #20]
   15d7c:	bic	r3, r3, r3, asr #31
   15d80:	ldr	r2, [r4, #4]
   15d84:	cmp	r2, r3
   15d88:	movcs	r5, #1
   15d8c:	bcc	15fc8 <argp_parse@@Base+0x2bb0>
   15d90:	cmp	r9, #0
   15d94:	beq	15e00 <argp_parse@@Base+0x29e8>
   15d98:	ldr	r0, [r9]
   15d9c:	cmp	r0, #0
   15da0:	beq	15e00 <argp_parse@@Base+0x29e8>
   15da4:	clz	r6, sl
   15da8:	lsr	r6, r6, #5
   15dac:	cmp	sl, #0
   15db0:	cmpne	r5, #0
   15db4:	bne	15e00 <argp_parse@@Base+0x29e8>
   15db8:	orrs	r3, fp, r5
   15dbc:	str	r4, [sp, #4]
   15dc0:	str	sl, [sp]
   15dc4:	movne	r3, #1
   15dc8:	moveq	r3, #0
   15dcc:	ldr	r2, [sp, #8]
   15dd0:	ldr	r1, [sp, #12]
   15dd4:	bl	15b58 <argp_parse@@Base+0x2740>
   15dd8:	orr	r5, r5, r0
   15ddc:	ldr	r0, [r9, #16]
   15de0:	cmp	r0, #0
   15de4:	beq	15e00 <argp_parse@@Base+0x29e8>
   15de8:	add	r9, r9, #16
   15dec:	cmp	r5, #0
   15df0:	movne	r3, r6
   15df4:	moveq	r3, #1
   15df8:	cmp	r3, #0
   15dfc:	bne	15db8 <argp_parse@@Base+0x29a0>
   15e00:	mov	r0, r5
   15e04:	add	sp, sp, #28
   15e08:	ldrd	r4, [sp]
   15e0c:	ldrd	r6, [sp, #8]
   15e10:	ldrd	r8, [sp, #16]
   15e14:	ldrd	sl, [sp, #24]
   15e18:	add	sp, sp, #32
   15e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e20:	mov	r5, r6
   15e24:	mov	r3, #0
   15e28:	str	r3, [sp, #16]
   15e2c:	b	15c4c <argp_parse@@Base+0x2834>
   15e30:	ldr	r2, [r4, #28]
   15e34:	ldr	r3, [r4, #32]
   15e38:	cmp	r2, r3
   15e3c:	bcs	15e58 <argp_parse@@Base+0x2a40>
   15e40:	ldr	r3, [r4, #28]
   15e44:	add	r2, r3, #1
   15e48:	str	r2, [r4, #28]
   15e4c:	mov	r2, #10
   15e50:	strb	r2, [r3]
   15e54:	b	15c54 <argp_parse@@Base+0x283c>
   15e58:	mov	r1, #1
   15e5c:	mov	r0, r4
   15e60:	bl	19464 <argp_error@@Base+0x1450>
   15e64:	cmp	r0, #0
   15e68:	bne	15e40 <argp_parse@@Base+0x2a28>
   15e6c:	b	15c54 <argp_parse@@Base+0x283c>
   15e70:	mov	r0, r5
   15e74:	bl	113b4 <strlen@plt>
   15e78:	subs	r3, r0, #0
   15e7c:	str	r3, [sp, #20]
   15e80:	beq	15cb4 <argp_parse@@Base+0x289c>
   15e84:	ldr	r3, [r4, #28]
   15e88:	mov	r1, r0
   15e8c:	add	r3, r3, r0
   15e90:	ldr	r2, [r4, #32]
   15e94:	cmp	r2, r3
   15e98:	bcs	15eac <argp_parse@@Base+0x2a94>
   15e9c:	mov	r0, r4
   15ea0:	bl	19464 <argp_error@@Base+0x1450>
   15ea4:	cmp	r0, #0
   15ea8:	beq	15cb4 <argp_parse@@Base+0x289c>
   15eac:	ldr	r2, [sp, #20]
   15eb0:	mov	r1, r5
   15eb4:	ldr	r0, [r4, #28]
   15eb8:	bl	11288 <memcpy@plt>
   15ebc:	ldr	r3, [r4, #28]
   15ec0:	ldr	r2, [sp, #20]
   15ec4:	add	r3, r3, r2
   15ec8:	str	r3, [r4, #28]
   15ecc:	b	15cb4 <argp_parse@@Base+0x289c>
   15ed0:	mov	r0, r4
   15ed4:	bl	18eec <argp_error@@Base+0xed8>
   15ed8:	b	15ccc <argp_parse@@Base+0x28b4>
   15edc:	ldr	r2, [r4, #28]
   15ee0:	ldr	r3, [r4, #32]
   15ee4:	cmp	r2, r3
   15ee8:	bcs	15f04 <argp_parse@@Base+0x2aec>
   15eec:	ldr	r3, [r4, #28]
   15ef0:	add	r2, r3, #1
   15ef4:	str	r2, [r4, #28]
   15ef8:	mov	r2, #10
   15efc:	strb	r2, [r3]
   15f00:	b	15ce0 <argp_parse@@Base+0x28c8>
   15f04:	mov	r1, #1
   15f08:	mov	r0, r4
   15f0c:	bl	19464 <argp_error@@Base+0x1450>
   15f10:	cmp	r0, #0
   15f14:	bne	15eec <argp_parse@@Base+0x2ad4>
   15f18:	b	15ce0 <argp_parse@@Base+0x28c8>
   15f1c:	mov	r0, r5
   15f20:	bl	140f0 <argp_parse@@Base+0xcd8>
   15f24:	mov	r5, #1
   15f28:	b	15cec <argp_parse@@Base+0x28d4>
   15f2c:	mov	r5, #0
   15f30:	b	15cec <argp_parse@@Base+0x28d4>
   15f34:	ldr	r2, [r4, #28]
   15f38:	ldr	r3, [r4, #32]
   15f3c:	cmp	r2, r3
   15f40:	bcs	15f5c <argp_parse@@Base+0x2b44>
   15f44:	ldr	r3, [r4, #28]
   15f48:	add	r2, r3, #1
   15f4c:	str	r2, [r4, #28]
   15f50:	mov	r2, #10
   15f54:	strb	r2, [r3]
   15f58:	b	15d48 <argp_parse@@Base+0x2930>
   15f5c:	mov	r1, #1
   15f60:	mov	r0, r4
   15f64:	bl	19464 <argp_error@@Base+0x1450>
   15f68:	cmp	r0, #0
   15f6c:	bne	15f44 <argp_parse@@Base+0x2b2c>
   15f70:	b	15d48 <argp_parse@@Base+0x2930>
   15f74:	ldr	r3, [r4, #28]
   15f78:	add	r3, r3, r5
   15f7c:	ldr	r2, [r4, #32]
   15f80:	cmp	r2, r3
   15f84:	bcs	15f9c <argp_parse@@Base+0x2b84>
   15f88:	mov	r1, r5
   15f8c:	mov	r0, r4
   15f90:	bl	19464 <argp_error@@Base+0x1450>
   15f94:	cmp	r0, #0
   15f98:	beq	15d58 <argp_parse@@Base+0x2940>
   15f9c:	mov	r2, r5
   15fa0:	mov	r1, r6
   15fa4:	ldr	r0, [r4, #28]
   15fa8:	bl	11288 <memcpy@plt>
   15fac:	ldr	r3, [r4, #28]
   15fb0:	add	r5, r3, r5
   15fb4:	str	r5, [r4, #28]
   15fb8:	b	15d58 <argp_parse@@Base+0x2940>
   15fbc:	mov	r0, r4
   15fc0:	bl	18eec <argp_error@@Base+0xed8>
   15fc4:	b	15d78 <argp_parse@@Base+0x2960>
   15fc8:	ldr	r2, [r4, #28]
   15fcc:	ldr	r3, [r4, #32]
   15fd0:	cmp	r2, r3
   15fd4:	bcs	15ff4 <argp_parse@@Base+0x2bdc>
   15fd8:	ldr	r3, [r4, #28]
   15fdc:	add	r2, r3, #1
   15fe0:	str	r2, [r4, #28]
   15fe4:	mov	r2, #10
   15fe8:	strb	r2, [r3]
   15fec:	mov	r5, #1
   15ff0:	b	15d90 <argp_parse@@Base+0x2978>
   15ff4:	mov	r1, #1
   15ff8:	mov	r0, r4
   15ffc:	bl	19464 <argp_error@@Base+0x1450>
   16000:	cmp	r0, #0
   16004:	bne	15fd8 <argp_parse@@Base+0x2bc0>
   16008:	mov	r5, #1
   1600c:	b	15d90 <argp_parse@@Base+0x2978>
   16010:	ldr	r3, [r0, #20]
   16014:	cmp	r3, #0
   16018:	moveq	r5, r6
   1601c:	beq	16064 <argp_parse@@Base+0x2c4c>
   16020:	ldr	r1, [sp, #12]
   16024:	mov	r0, r8
   16028:	bl	13f6c <argp_parse@@Base+0xb54>
   1602c:	str	r0, [sp, #16]
   16030:	ldr	r3, [r8, #20]
   16034:	mov	r7, #0
   16038:	mov	r0, #2
   1603c:	movt	r0, #512	; 0x200
   16040:	mov	r2, #1
   16044:	movt	r2, #512	; 0x200
   16048:	ldr	r1, [sp, #8]
   1604c:	cmp	r1, r7
   16050:	moveq	r0, r2
   16054:	b	15c38 <argp_parse@@Base+0x2820>
   16058:	mov	r6, r0
   1605c:	b	15bbc <argp_parse@@Base+0x27a4>
   16060:	mov	r5, r6
   16064:	cmp	r5, #0
   16068:	streq	r5, [sp, #16]
   1606c:	beq	15d0c <argp_parse@@Base+0x28f4>
   16070:	mov	r7, #0
   16074:	str	r7, [sp, #16]
   16078:	b	15c4c <argp_parse@@Base+0x2834>
   1607c:	ldr	r3, [r8, #20]
   16080:	cmp	r3, #0
   16084:	moveq	r5, r6
   16088:	beq	16064 <argp_parse@@Base+0x2c4c>
   1608c:	ldr	r1, [sp, #12]
   16090:	mov	r0, r8
   16094:	bl	13f6c <argp_parse@@Base+0xb54>
   16098:	str	r0, [sp, #16]
   1609c:	ldr	r3, [r8, #20]
   160a0:	mov	r7, #0
   160a4:	mov	r0, #1
   160a8:	movt	r0, #512	; 0x200
   160ac:	b	15c38 <argp_parse@@Base+0x2820>
   160b0:	ldr	r3, [r0, #12]
   160b4:	ldr	r2, [r1, #12]
   160b8:	cmp	r3, r2
   160bc:	beq	1612c <argp_parse@@Base+0x2d14>
   160c0:	strd	r4, [sp, #-16]!
   160c4:	str	r6, [sp, #8]
   160c8:	str	lr, [sp, #12]
   160cc:	mov	r5, r1
   160d0:	mov	r4, r0
   160d4:	mov	r1, r2
   160d8:	mov	r0, r3
   160dc:	bl	160b0 <argp_parse@@Base+0x2c98>
   160e0:	subs	r3, r0, #0
   160e4:	bne	16118 <argp_parse@@Base+0x2d00>
   160e8:	ldr	r0, [r4, #8]
   160ec:	ldr	r3, [r5, #8]
   160f0:	mvn	r2, r3
   160f4:	lsr	r2, r2, #31
   160f8:	cmp	r2, r0, lsr #31
   160fc:	subne	r3, r0, r3
   16100:	subeq	r3, r3, r0
   16104:	cmp	r3, #0
   16108:	bne	16118 <argp_parse@@Base+0x2d00>
   1610c:	ldr	r3, [r5, #4]
   16110:	ldr	r0, [r4, #4]
   16114:	sub	r3, r3, r0
   16118:	mov	r0, r3
   1611c:	ldrd	r4, [sp]
   16120:	ldr	r6, [sp, #8]
   16124:	add	sp, sp, #12
   16128:	pop	{pc}		; (ldr pc, [sp], #4)
   1612c:	ldr	r2, [r0, #8]
   16130:	ldr	r3, [r1, #8]
   16134:	mvn	ip, r3
   16138:	lsr	ip, ip, #31
   1613c:	cmp	ip, r2, lsr #31
   16140:	subne	r3, r2, r3
   16144:	subeq	r3, r3, r2
   16148:	cmp	r3, #0
   1614c:	bne	1615c <argp_parse@@Base+0x2d44>
   16150:	ldr	r3, [r1, #4]
   16154:	ldr	r0, [r0, #4]
   16158:	sub	r3, r3, r0
   1615c:	mov	r0, r3
   16160:	bx	lr
   16164:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16168:	strd	r6, [sp, #8]
   1616c:	str	r8, [sp, #16]
   16170:	str	lr, [sp, #20]
   16174:	sub	sp, sp, #8
   16178:	ldr	lr, [r0, #16]
   1617c:	cmp	lr, #0
   16180:	movne	r3, lr
   16184:	bne	16194 <argp_parse@@Base+0x2d7c>
   16188:	ldr	ip, [r0, #12]
   1618c:	b	161a4 <argp_parse@@Base+0x2d8c>
   16190:	mov	r3, r2
   16194:	ldr	r2, [r3, #12]
   16198:	cmp	r2, #0
   1619c:	bne	16190 <argp_parse@@Base+0x2d78>
   161a0:	ldr	ip, [r3, #8]
   161a4:	ldr	r5, [r1, #16]
   161a8:	cmp	r5, #0
   161ac:	movne	r3, r5
   161b0:	bne	161c0 <argp_parse@@Base+0x2da8>
   161b4:	ldr	r4, [r1, #12]
   161b8:	b	161d0 <argp_parse@@Base+0x2db8>
   161bc:	mov	r3, r2
   161c0:	ldr	r2, [r3, #12]
   161c4:	cmp	r2, #0
   161c8:	bne	161bc <argp_parse@@Base+0x2da4>
   161cc:	ldr	r4, [r3, #8]
   161d0:	mvn	r3, r4
   161d4:	lsr	r3, r3, #31
   161d8:	cmp	r3, ip, lsr #31
   161dc:	subne	r4, ip, r4
   161e0:	subeq	r4, r4, ip
   161e4:	cmp	r4, #0
   161e8:	bne	16328 <argp_parse@@Base+0x2f10>
   161ec:	adds	r4, r5, #0
   161f0:	movne	r4, #1
   161f4:	cmp	lr, #0
   161f8:	rsbeq	r4, r4, #0
   161fc:	rsbne	r4, r4, #1
   16200:	cmp	r4, #0
   16204:	bne	16328 <argp_parse@@Base+0x2f10>
   16208:	mov	r7, r1
   1620c:	mov	r6, r0
   16210:	cmp	lr, #0
   16214:	beq	16294 <argp_parse@@Base+0x2e7c>
   16218:	ldr	r1, [lr, #20]
   1621c:	ldr	r2, [r5, #20]
   16220:	cmp	r1, r2
   16224:	ble	16250 <argp_parse@@Base+0x2e38>
   16228:	ldr	lr, [lr, #12]
   1622c:	ldr	r3, [lr, #20]
   16230:	cmp	r2, r3
   16234:	blt	16228 <argp_parse@@Base+0x2e10>
   16238:	mov	r1, r5
   1623c:	mov	r0, lr
   16240:	bl	160b0 <argp_parse@@Base+0x2c98>
   16244:	subs	r4, r0, #0
   16248:	moveq	r4, #1
   1624c:	b	16328 <argp_parse@@Base+0x2f10>
   16250:	cmp	r1, r2
   16254:	bge	16280 <argp_parse@@Base+0x2e68>
   16258:	ldr	r5, [r5, #12]
   1625c:	ldr	r3, [r5, #20]
   16260:	cmp	r1, r3
   16264:	blt	16258 <argp_parse@@Base+0x2e40>
   16268:	mov	r1, r5
   1626c:	mov	r0, lr
   16270:	bl	160b0 <argp_parse@@Base+0x2c98>
   16274:	subs	r4, r0, #0
   16278:	mvneq	r4, #0
   1627c:	b	16328 <argp_parse@@Base+0x2f10>
   16280:	mov	r1, r5
   16284:	mov	r0, lr
   16288:	bl	160b0 <argp_parse@@Base+0x2c98>
   1628c:	subs	r4, r0, #0
   16290:	bne	16328 <argp_parse@@Base+0x2f10>
   16294:	ldr	r3, [r6, #12]
   16298:	ldr	r4, [r7, #12]
   1629c:	mvn	r2, r4
   162a0:	lsr	r2, r2, #31
   162a4:	cmp	r2, r3, lsr #31
   162a8:	subne	r4, r3, r4
   162ac:	subeq	r4, r4, r3
   162b0:	cmp	r4, #0
   162b4:	bne	16328 <argp_parse@@Base+0x2f10>
   162b8:	mov	r0, r6
   162bc:	bl	14d28 <argp_parse@@Base+0x1910>
   162c0:	mov	r5, r0
   162c4:	str	r0, [sp]
   162c8:	mov	r0, r7
   162cc:	bl	14d28 <argp_parse@@Base+0x1910>
   162d0:	str	r0, [sp, #4]
   162d4:	ldr	r3, [r6]
   162d8:	ldr	r0, [r3, #12]
   162dc:	ubfx	r0, r0, #3, #1
   162e0:	cmp	r5, #0
   162e4:	moveq	r0, #0
   162e8:	cmp	r0, #0
   162ec:	bne	16344 <argp_parse@@Base+0x2f2c>
   162f0:	ldr	r3, [r7]
   162f4:	ldr	r3, [r3, #12]
   162f8:	tst	r3, #8
   162fc:	beq	1637c <argp_parse@@Base+0x2f64>
   16300:	ldr	r3, [sp, #4]
   16304:	cmp	r3, #0
   16308:	beq	1637c <argp_parse@@Base+0x2f64>
   1630c:	add	r0, sp, #4
   16310:	bl	14dc4 <argp_parse@@Base+0x19ac>
   16314:	adds	r3, r0, #0
   16318:	movne	r3, #1
   1631c:	mov	r0, r4
   16320:	subs	r4, r0, r3
   16324:	beq	1637c <argp_parse@@Base+0x2f64>
   16328:	mov	r0, r4
   1632c:	add	sp, sp, #8
   16330:	ldrd	r4, [sp]
   16334:	ldrd	r6, [sp, #8]
   16338:	ldr	r8, [sp, #16]
   1633c:	add	sp, sp, #20
   16340:	pop	{pc}		; (ldr pc, [sp], #4)
   16344:	mov	r0, sp
   16348:	bl	14dc4 <argp_parse@@Base+0x19ac>
   1634c:	adds	r0, r0, #0
   16350:	movne	r0, #1
   16354:	ldr	r3, [r7]
   16358:	ldr	r3, [r3, #12]
   1635c:	ands	r3, r3, #8
   16360:	beq	16320 <argp_parse@@Base+0x2f08>
   16364:	ldr	r3, [sp, #4]
   16368:	cmp	r3, #0
   1636c:	moveq	r3, r4
   16370:	beq	16320 <argp_parse@@Base+0x2f08>
   16374:	mov	r4, r0
   16378:	b	1630c <argp_parse@@Base+0x2ef4>
   1637c:	ldr	r2, [r6, #20]
   16380:	movw	r4, #21452	; 0x53cc
   16384:	movt	r4, #1
   16388:	mov	r3, #0
   1638c:	ldr	r2, [r2, #24]
   16390:	mov	r1, r4
   16394:	mov	r0, r6
   16398:	bl	15034 <argp_parse@@Base+0x1c1c>
   1639c:	mov	r5, r0
   163a0:	uxtb	r8, r0
   163a4:	ldr	r2, [r7, #20]
   163a8:	mov	r3, #0
   163ac:	ldr	r2, [r2, #24]
   163b0:	mov	r1, r4
   163b4:	mov	r0, r7
   163b8:	bl	15034 <argp_parse@@Base+0x1c1c>
   163bc:	uxtb	r7, r0
   163c0:	cmp	r8, #0
   163c4:	movne	r5, r8
   163c8:	bne	163dc <argp_parse@@Base+0x2fc4>
   163cc:	ldr	r3, [sp]
   163d0:	cmp	r3, #0
   163d4:	ldrbne	r5, [r3]
   163d8:	moveq	r5, #0
   163dc:	cmp	r7, #0
   163e0:	uxtbne	r6, r0
   163e4:	bne	163f8 <argp_parse@@Base+0x2fe0>
   163e8:	ldr	r3, [sp, #4]
   163ec:	cmp	r3, #0
   163f0:	ldrbne	r6, [r3]
   163f4:	moveq	r6, #0
   163f8:	bl	11378 <__ctype_tolower_loc@plt>
   163fc:	ldr	r3, [r0]
   16400:	ldr	r4, [r3, r5, lsl #2]
   16404:	ldr	r3, [r3, r6, lsl #2]
   16408:	subs	r4, r4, r3
   1640c:	bne	16328 <argp_parse@@Base+0x2f10>
   16410:	subs	r4, r6, r5
   16414:	bne	16328 <argp_parse@@Base+0x2f10>
   16418:	adds	r4, r7, #0
   1641c:	movne	r4, #1
   16420:	cmp	r8, #0
   16424:	rsbeq	r4, r4, #0
   16428:	rsbne	r4, r4, #1
   1642c:	cmp	r4, #0
   16430:	bne	16328 <argp_parse@@Base+0x2f10>
   16434:	cmp	r8, #0
   16438:	bne	16328 <argp_parse@@Base+0x2f10>
   1643c:	ldr	r0, [sp]
   16440:	ldr	r1, [sp, #4]
   16444:	adds	r4, r1, #0
   16448:	movne	r4, #1
   1644c:	cmp	r0, #0
   16450:	rsbeq	r4, r4, #0
   16454:	rsbne	r4, r4, #1
   16458:	cmp	r4, #0
   1645c:	bne	16328 <argp_parse@@Base+0x2f10>
   16460:	cmp	r0, #0
   16464:	beq	16328 <argp_parse@@Base+0x2f10>
   16468:	bl	112e8 <strcasecmp@plt>
   1646c:	mov	r4, r0
   16470:	b	16328 <argp_parse@@Base+0x2f10>
   16474:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16478:	strd	r6, [sp, #8]
   1647c:	strd	r8, [sp, #16]
   16480:	strd	sl, [sp, #24]
   16484:	str	lr, [sp, #32]
   16488:	sub	sp, sp, #52	; 0x34
   1648c:	str	r0, [sp, #12]
   16490:	str	r1, [sp, #4]
   16494:	ldr	fp, [r0, #16]
   16498:	ldr	r4, [r0]
   1649c:	mov	r0, #16
   164a0:	bl	14c90 <argp_parse@@Base+0x1878>
   164a4:	subs	sl, r0, #0
   164a8:	beq	164d8 <argp_parse@@Base+0x30c0>
   164ac:	mov	r3, #0
   164b0:	str	r3, [sl, #4]
   164b4:	str	r3, [sl, #12]
   164b8:	cmp	r4, r3
   164bc:	beq	166e4 <argp_parse@@Base+0x32cc>
   164c0:	ldr	r3, [r4, #12]
   164c4:	tst	r3, #4
   164c8:	bne	164f8 <argp_parse@@Base+0x30e0>
   164cc:	add	r5, r4, #24
   164d0:	mov	r6, #0
   164d4:	b	1651c <argp_parse@@Base+0x3104>
   164d8:	movw	r3, #41036	; 0xa04c
   164dc:	movt	r3, #1
   164e0:	movw	r2, #450	; 0x1c2
   164e4:	movw	r1, #41276	; 0xa13c
   164e8:	movt	r1, #1
   164ec:	movw	r0, #41288	; 0xa148
   164f0:	movt	r0, #1
   164f4:	bl	11570 <__assert_fail@plt>
   164f8:	movw	r3, #41036	; 0xa04c
   164fc:	movt	r3, #1
   16500:	mov	r2, #460	; 0x1cc
   16504:	movw	r1, #41276	; 0xa13c
   16508:	movt	r1, #1
   1650c:	movw	r0, #41292	; 0xa14c
   16510:	movt	r0, #1
   16514:	bl	11570 <__assert_fail@plt>
   16518:	add	r5, r5, #24
   1651c:	mov	r3, r5
   16520:	ldr	r2, [r5, #-20]	; 0xffffffec
   16524:	cmp	r2, #0
   16528:	bne	16538 <argp_parse@@Base+0x3120>
   1652c:	ldr	r2, [r5, #-24]	; 0xffffffe8
   16530:	cmp	r2, #0
   16534:	beq	16588 <argp_parse@@Base+0x3170>
   16538:	ldr	r2, [r3, #-12]
   1653c:	tst	r2, #4
   16540:	bne	16550 <argp_parse@@Base+0x3138>
   16544:	ldr	r2, [sl, #4]
   16548:	add	r2, r2, #1
   1654c:	str	r2, [sl, #4]
   16550:	ldr	r2, [r3, #-12]
   16554:	tst	r2, #8
   16558:	bne	16518 <argp_parse@@Base+0x3100>
   1655c:	ldr	r7, [r3, #-20]	; 0xffffffec
   16560:	sub	r3, r7, #1
   16564:	cmp	r3, #254	; 0xfe
   16568:	bhi	16518 <argp_parse@@Base+0x3100>
   1656c:	bl	1139c <__ctype_b_loc@plt>
   16570:	ldr	r3, [r0]
   16574:	lsl	r7, r7, #1
   16578:	ldrh	r3, [r3, r7]
   1657c:	tst	r3, #16384	; 0x4000
   16580:	addne	r6, r6, #1
   16584:	b	16518 <argp_parse@@Base+0x3100>
   16588:	ldr	r2, [r5, #-8]
   1658c:	cmp	r2, #0
   16590:	bne	16538 <argp_parse@@Base+0x3120>
   16594:	ldr	r9, [r5, #-4]
   16598:	cmp	r9, #0
   1659c:	bne	16538 <argp_parse@@Base+0x3120>
   165a0:	ldr	r0, [sl, #4]
   165a4:	rsb	r0, r0, r0, lsl #3
   165a8:	lsl	r0, r0, #2
   165ac:	bl	14c90 <argp_parse@@Base+0x1878>
   165b0:	str	r0, [sl]
   165b4:	add	r0, r6, #1
   165b8:	bl	14c90 <argp_parse@@Base+0x1878>
   165bc:	mov	r5, r0
   165c0:	str	r0, [sl, #8]
   165c4:	ldr	r7, [sl]
   165c8:	cmp	r0, #0
   165cc:	cmpne	r7, #0
   165d0:	beq	165f8 <argp_parse@@Base+0x31e0>
   165d4:	movw	r3, #37449	; 0x9249
   165d8:	movt	r3, #2340	; 0x924
   165dc:	ldr	r2, [sl, #4]
   165e0:	cmp	r2, r3
   165e4:	bhi	16618 <argp_parse@@Base+0x3200>
   165e8:	add	r7, r7, #28
   165ec:	str	fp, [sp, #8]
   165f0:	ldr	fp, [sp, #12]
   165f4:	b	16664 <argp_parse@@Base+0x324c>
   165f8:	movw	r3, #41036	; 0xa04c
   165fc:	movt	r3, #1
   16600:	movw	r2, #474	; 0x1da
   16604:	movw	r1, #41276	; 0xa13c
   16608:	movt	r1, #1
   1660c:	movw	r0, #41308	; 0xa15c
   16610:	movt	r0, #1
   16614:	bl	11570 <__assert_fail@plt>
   16618:	movw	r3, #41036	; 0xa04c
   1661c:	movt	r3, #1
   16620:	mov	r2, #476	; 0x1dc
   16624:	movw	r1, #41276	; 0xa13c
   16628:	movt	r1, #1
   1662c:	movw	r0, #41344	; 0xa180
   16630:	movt	r0, #1
   16634:	bl	11570 <__assert_fail@plt>
   16638:	ldr	r3, [r4, #4]
   1663c:	cmp	r3, #0
   16640:	addeq	r9, r9, #1
   16644:	b	166ac <argp_parse@@Base+0x3294>
   16648:	ldr	r3, [r4, #16]
   1664c:	cmp	r3, #0
   16650:	bne	16a84 <argp_parse@@Base+0x366c>
   16654:	ldr	r3, [r4, #20]
   16658:	cmp	r3, #0
   1665c:	bne	16a84 <argp_parse@@Base+0x366c>
   16660:	add	r7, r7, #28
   16664:	ldr	r3, [r4, #4]
   16668:	cmp	r3, #0
   1666c:	bne	1667c <argp_parse@@Base+0x3264>
   16670:	ldr	r3, [r4]
   16674:	cmp	r3, #0
   16678:	beq	166c0 <argp_parse@@Base+0x32a8>
   1667c:	mov	r8, r7
   16680:	str	r4, [r7, #-28]	; 0xffffffe4
   16684:	mov	r3, #0
   16688:	str	r3, [r7, #-24]	; 0xffffffe8
   1668c:	str	r5, [r7, #-20]	; 0xffffffec
   16690:	ldr	r3, [r4, #20]
   16694:	cmp	r3, #0
   16698:	movne	r9, r3
   1669c:	bne	166ac <argp_parse@@Base+0x3294>
   166a0:	ldr	r3, [r4]
   166a4:	cmp	r3, #0
   166a8:	beq	16638 <argp_parse@@Base+0x3220>
   166ac:	str	r9, [r8, #-16]
   166b0:	ldr	r3, [sp, #4]
   166b4:	str	r3, [r8, #-12]
   166b8:	str	fp, [r8, #-8]
   166bc:	b	16a90 <argp_parse@@Base+0x3678>
   166c0:	ldr	r3, [r4, #16]
   166c4:	cmp	r3, #0
   166c8:	bne	1667c <argp_parse@@Base+0x3264>
   166cc:	ldr	r3, [r4, #20]
   166d0:	cmp	r3, #0
   166d4:	bne	1667c <argp_parse@@Base+0x3264>
   166d8:	ldr	fp, [sp, #8]
   166dc:	mov	r3, #0
   166e0:	strb	r3, [r5]
   166e4:	cmp	fp, #0
   166e8:	beq	16b08 <argp_parse@@Base+0x36f0>
   166ec:	ldr	r3, [fp]
   166f0:	cmp	r3, #0
   166f4:	beq	16b08 <argp_parse@@Base+0x36f0>
   166f8:	movw	r3, #37449	; 0x9249
   166fc:	movt	r3, #2340	; 0x924
   16700:	str	r3, [sp, #32]
   16704:	b	16778 <argp_parse@@Base+0x3360>
   16708:	ldr	r1, [sp, #4]
   1670c:	b	167f0 <argp_parse@@Base+0x33d8>
   16710:	mov	r3, r2
   16714:	ldr	r2, [r3, #24]
   16718:	cmp	r2, #0
   1671c:	bne	16710 <argp_parse@@Base+0x32f8>
   16720:	add	r3, r3, #24
   16724:	ldr	r2, [r5, #12]
   16728:	str	r2, [r3]
   1672c:	mov	r1, #0
   16730:	str	r1, [r5, #12]
   16734:	ldr	r3, [r5, #4]
   16738:	cmp	r3, r1
   1673c:	beq	16764 <argp_parse@@Base+0x334c>
   16740:	ldr	r2, [sl, #4]
   16744:	cmp	r2, r1
   16748:	bne	16810 <argp_parse@@Base+0x33f8>
   1674c:	str	r3, [sl, #4]
   16750:	ldr	r3, [r5]
   16754:	str	r3, [sl]
   16758:	ldr	r3, [r5, #8]
   1675c:	str	r3, [sl, #8]
   16760:	str	r1, [r5, #4]
   16764:	mov	r0, r5
   16768:	bl	14e4c <argp_parse@@Base+0x1a34>
   1676c:	ldr	r3, [fp, #16]!
   16770:	cmp	r3, #0
   16774:	beq	16b08 <argp_parse@@Base+0x36f0>
   16778:	mov	r5, fp
   1677c:	ldr	r6, [fp, #12]
   16780:	cmp	r6, #0
   16784:	bne	16794 <argp_parse@@Base+0x337c>
   16788:	ldr	r3, [fp, #8]
   1678c:	cmp	r3, #0
   16790:	beq	16708 <argp_parse@@Base+0x32f0>
   16794:	ldr	r7, [r5, #8]
   16798:	ldr	r8, [sp, #12]
   1679c:	ldr	r4, [r8, #16]
   167a0:	mov	r0, #28
   167a4:	bl	14c90 <argp_parse@@Base+0x1878>
   167a8:	subs	r1, r0, #0
   167ac:	beq	167f0 <argp_parse@@Base+0x33d8>
   167b0:	str	r6, [r1, #8]
   167b4:	str	r7, [r1]
   167b8:	sub	r4, r5, r4
   167bc:	asr	r4, r4, #4
   167c0:	str	r4, [r1, #4]
   167c4:	ldr	r3, [sp, #4]
   167c8:	str	r3, [r1, #12]
   167cc:	str	r8, [r1, #16]
   167d0:	cmp	r3, #0
   167d4:	ldrne	r3, [r3, #20]
   167d8:	addne	r3, r3, #1
   167dc:	moveq	r3, #0
   167e0:	str	r3, [r1, #20]
   167e4:	ldr	r3, [sl, #12]
   167e8:	str	r3, [r1, #24]
   167ec:	str	r1, [sl, #12]
   167f0:	ldr	r0, [r5]
   167f4:	bl	16474 <argp_parse@@Base+0x305c>
   167f8:	mov	r5, r0
   167fc:	ldr	r3, [sl, #12]
   16800:	cmp	r3, #0
   16804:	bne	16714 <argp_parse@@Base+0x32fc>
   16808:	add	r3, sl, #12
   1680c:	b	16724 <argp_parse@@Base+0x330c>
   16810:	add	r3, r3, r2
   16814:	str	r3, [sp, #24]
   16818:	rsb	r0, r3, r3, lsl #3
   1681c:	lsl	r0, r0, #2
   16820:	bl	14c90 <argp_parse@@Base+0x1878>
   16824:	mov	r4, r0
   16828:	str	r0, [sp, #20]
   1682c:	ldr	r0, [sl, #8]
   16830:	bl	113b4 <strlen@plt>
   16834:	mov	r7, r0
   16838:	ldr	r0, [r5, #8]
   1683c:	bl	113b4 <strlen@plt>
   16840:	add	r0, r7, r0
   16844:	add	r0, r0, #1
   16848:	bl	14c90 <argp_parse@@Base+0x1878>
   1684c:	mov	r9, r0
   16850:	cmp	r4, #0
   16854:	cmpne	r0, #0
   16858:	beq	16924 <argp_parse@@Base+0x350c>
   1685c:	ldr	r3, [sp, #24]
   16860:	ldr	r2, [sp, #32]
   16864:	cmp	r3, r2
   16868:	bhi	16940 <argp_parse@@Base+0x3528>
   1686c:	ldr	r1, [sl]
   16870:	str	r1, [sp, #28]
   16874:	ldr	r4, [sl, #4]
   16878:	rsb	r8, r4, r4, lsl #3
   1687c:	lsl	r8, r8, #2
   16880:	mov	r2, r8
   16884:	ldr	r0, [sp, #20]
   16888:	bl	11390 <mempcpy@plt>
   1688c:	ldr	r3, [r5, #4]
   16890:	str	r3, [sp, #16]
   16894:	rsb	r2, r3, r3, lsl #3
   16898:	lsl	r2, r2, #2
   1689c:	ldr	r1, [r5]
   168a0:	bl	11288 <memcpy@plt>
   168a4:	ldr	r6, [sl, #8]
   168a8:	mov	r2, r7
   168ac:	mov	r1, r6
   168b0:	mov	r0, r9
   168b4:	bl	11288 <memcpy@plt>
   168b8:	cmp	r4, #0
   168bc:	beq	1695c <argp_parse@@Base+0x3544>
   168c0:	ldr	r2, [sp, #20]
   168c4:	ldr	r3, [r2, #8]
   168c8:	sub	r3, r3, r6
   168cc:	add	r3, r9, r3
   168d0:	str	r3, [r2, #8]
   168d4:	add	r2, r2, #28
   168d8:	subs	r4, r4, #1
   168dc:	bne	168c4 <argp_parse@@Base+0x34ac>
   168e0:	ldr	r3, [sp, #20]
   168e4:	add	r4, r3, r8
   168e8:	add	r3, r9, r7
   168ec:	str	r3, [sp, #8]
   168f0:	ldr	r1, [r5, #8]
   168f4:	ldr	r8, [sp, #16]
   168f8:	cmp	r8, #0
   168fc:	beq	16a00 <argp_parse@@Base+0x35e8>
   16900:	add	r4, r4, #28
   16904:	sub	r2, r3, #1
   16908:	str	r2, [sp, #16]
   1690c:	str	r5, [sp, #36]	; 0x24
   16910:	str	fp, [sp, #40]	; 0x28
   16914:	mov	fp, r3
   16918:	str	sl, [sp, #44]	; 0x2c
   1691c:	mov	sl, r1
   16920:	b	169a8 <argp_parse@@Base+0x3590>
   16924:	ldr	r3, [pc, #508]	; 16b28 <argp_parse@@Base+0x3710>
   16928:	movw	r2, #970	; 0x3ca
   1692c:	movw	r1, #41276	; 0xa13c
   16930:	movt	r1, #1
   16934:	movw	r0, #41404	; 0xa1bc
   16938:	movt	r0, #1
   1693c:	bl	11570 <__assert_fail@plt>
   16940:	ldr	r3, [pc, #480]	; 16b28 <argp_parse@@Base+0x3710>
   16944:	mov	r2, #972	; 0x3cc
   16948:	movw	r1, #41276	; 0xa13c
   1694c:	movt	r1, #1
   16950:	movw	r0, #41432	; 0xa1d8
   16954:	movt	r0, #1
   16958:	bl	11570 <__assert_fail@plt>
   1695c:	ldr	r4, [sp, #20]
   16960:	b	168e8 <argp_parse@@Base+0x34d0>
   16964:	ldr	r2, [sp, #8]
   16968:	cmp	r9, r2
   1696c:	bcs	16a08 <argp_parse@@Base+0x35f0>
   16970:	ldrb	r2, [r9]
   16974:	cmp	r2, r3
   16978:	beq	16a0c <argp_parse@@Base+0x35f4>
   1697c:	mov	r2, r9
   16980:	ldr	r1, [sp, #16]
   16984:	cmp	r1, r2
   16988:	beq	16a08 <argp_parse@@Base+0x35f0>
   1698c:	ldrb	r1, [r2, #1]!
   16990:	cmp	r1, r3
   16994:	bne	16980 <argp_parse@@Base+0x3568>
   16998:	b	16a0c <argp_parse@@Base+0x35f4>
   1699c:	add	r4, r4, #28
   169a0:	subs	r8, r8, #1
   169a4:	beq	169c0 <argp_parse@@Base+0x35a8>
   169a8:	str	fp, [r4, #-20]	; 0xffffffec
   169ac:	ldr	r5, [r4, #-24]	; 0xffffffe8
   169b0:	ldr	r6, [r4, #-28]	; 0xffffffe4
   169b4:	cmp	r5, #0
   169b8:	bne	16a2c <argp_parse@@Base+0x3614>
   169bc:	b	1699c <argp_parse@@Base+0x3584>
   169c0:	ldr	r5, [sp, #36]	; 0x24
   169c4:	mov	r3, fp
   169c8:	ldr	fp, [sp, #40]	; 0x28
   169cc:	ldr	sl, [sp, #44]	; 0x2c
   169d0:	mov	r2, #0
   169d4:	strb	r2, [r3]
   169d8:	ldr	r0, [sp, #28]
   169dc:	bl	140f0 <argp_parse@@Base+0xcd8>
   169e0:	ldr	r0, [sl, #8]
   169e4:	bl	140f0 <argp_parse@@Base+0xcd8>
   169e8:	ldr	r3, [sp, #20]
   169ec:	str	r3, [sl]
   169f0:	ldr	r3, [sp, #24]
   169f4:	str	r3, [sl, #4]
   169f8:	str	r9, [sl, #8]
   169fc:	b	16764 <argp_parse@@Base+0x334c>
   16a00:	ldr	r3, [sp, #8]
   16a04:	b	169d0 <argp_parse@@Base+0x35b8>
   16a08:	strb	r3, [fp], #1
   16a0c:	add	sl, sl, #1
   16a10:	b	16a20 <argp_parse@@Base+0x3608>
   16a14:	ldrb	r3, [sl]
   16a18:	cmp	r3, r7
   16a1c:	beq	16964 <argp_parse@@Base+0x354c>
   16a20:	add	r6, r6, #24
   16a24:	subs	r5, r5, #1
   16a28:	beq	1699c <argp_parse@@Base+0x3584>
   16a2c:	ldr	r3, [r6, #12]
   16a30:	tst	r3, #8
   16a34:	bne	16a20 <argp_parse@@Base+0x3608>
   16a38:	ldr	r7, [r6, #4]
   16a3c:	sub	r3, r7, #1
   16a40:	cmp	r3, #254	; 0xfe
   16a44:	bhi	16a20 <argp_parse@@Base+0x3608>
   16a48:	bl	1139c <__ctype_b_loc@plt>
   16a4c:	ldr	r2, [r0]
   16a50:	lsl	r3, r7, #1
   16a54:	ldrh	r3, [r2, r3]
   16a58:	tst	r3, #16384	; 0x4000
   16a5c:	bne	16a14 <argp_parse@@Base+0x35fc>
   16a60:	b	16a20 <argp_parse@@Base+0x3608>
   16a64:	strb	r6, [r5], #1
   16a68:	add	r4, r4, #24
   16a6c:	ldr	r3, [r4, #4]
   16a70:	cmp	r3, #0
   16a74:	bne	16a84 <argp_parse@@Base+0x366c>
   16a78:	ldr	r3, [r4]
   16a7c:	cmp	r3, #0
   16a80:	beq	16648 <argp_parse@@Base+0x3230>
   16a84:	ldr	r3, [r4, #12]
   16a88:	tst	r3, #4
   16a8c:	beq	16660 <argp_parse@@Base+0x3248>
   16a90:	ldr	r3, [r8, #-24]	; 0xffffffe8
   16a94:	add	r3, r3, #1
   16a98:	str	r3, [r8, #-24]	; 0xffffffe8
   16a9c:	ldr	r3, [r4, #12]
   16aa0:	tst	r3, #8
   16aa4:	bne	16a68 <argp_parse@@Base+0x3650>
   16aa8:	ldr	r6, [r4, #4]
   16aac:	sub	r3, r6, #1
   16ab0:	cmp	r3, #254	; 0xfe
   16ab4:	bhi	16a68 <argp_parse@@Base+0x3650>
   16ab8:	bl	1139c <__ctype_b_loc@plt>
   16abc:	ldr	r2, [r0]
   16ac0:	lsl	r3, r6, #1
   16ac4:	ldrh	r3, [r2, r3]
   16ac8:	tst	r3, #16384	; 0x4000
   16acc:	beq	16a68 <argp_parse@@Base+0x3650>
   16ad0:	uxtb	r6, r6
   16ad4:	ldr	r3, [sl, #8]
   16ad8:	cmp	r3, r5
   16adc:	bcs	16a64 <argp_parse@@Base+0x364c>
   16ae0:	ldrb	r2, [r3]
   16ae4:	cmp	r2, r6
   16ae8:	beq	16a68 <argp_parse@@Base+0x3650>
   16aec:	sub	r2, r5, #1
   16af0:	cmp	r3, r2
   16af4:	beq	16a64 <argp_parse@@Base+0x364c>
   16af8:	ldrb	r1, [r3, #1]!
   16afc:	cmp	r1, r6
   16b00:	bne	16af0 <argp_parse@@Base+0x36d8>
   16b04:	b	16a68 <argp_parse@@Base+0x3650>
   16b08:	mov	r0, sl
   16b0c:	add	sp, sp, #52	; 0x34
   16b10:	ldrd	r4, [sp]
   16b14:	ldrd	r6, [sp, #8]
   16b18:	ldrd	r8, [sp, #16]
   16b1c:	ldrd	sl, [sp, #24]
   16b20:	add	sp, sp, #32
   16b24:	pop	{pc}		; (ldr pc, [sp], #4)
   16b28:	andeq	sl, r1, r8, asr r0

00016b2c <argp_failure@@Base>:
   16b2c:	push	{r3}		; (str r3, [sp, #-4]!)
   16b30:	strd	r4, [sp, #-20]!	; 0xffffffec
   16b34:	strd	r6, [sp, #8]
   16b38:	str	lr, [sp, #16]
   16b3c:	sub	sp, sp, #200	; 0xc8
   16b40:	mov	r7, r1
   16b44:	mov	r6, r2
   16b48:	subs	r5, r0, #0
   16b4c:	beq	16ca8 <argp_failure@@Base+0x17c>
   16b50:	ldr	r3, [r5, #16]
   16b54:	tst	r3, #2
   16b58:	bne	16c8c <argp_failure@@Base+0x160>
   16b5c:	ldr	r4, [r5, #44]	; 0x2c
   16b60:	cmp	r4, #0
   16b64:	beq	16c8c <argp_failure@@Base+0x160>
   16b68:	mov	r0, r4
   16b6c:	bl	114e0 <flockfile@plt>
   16b70:	ldr	r0, [r5, #40]	; 0x28
   16b74:	mov	r1, r4
   16b78:	bl	111ec <fputs_unlocked@plt>
   16b7c:	ldr	r3, [sp, #220]	; 0xdc
   16b80:	cmp	r3, #0
   16b84:	beq	16be0 <argp_failure@@Base+0xb4>
   16b88:	add	r3, sp, #224	; 0xe0
   16b8c:	str	r3, [sp]
   16b90:	ldr	r3, [r4, #20]
   16b94:	ldr	r2, [r4, #24]
   16b98:	cmp	r3, r2
   16b9c:	addcc	r2, r3, #1
   16ba0:	strcc	r2, [r4, #20]
   16ba4:	movcc	r2, #58	; 0x3a
   16ba8:	strbcc	r2, [r3]
   16bac:	bcs	16cd4 <argp_failure@@Base+0x1a8>
   16bb0:	ldr	r3, [r4, #20]
   16bb4:	ldr	r2, [r4, #24]
   16bb8:	cmp	r3, r2
   16bbc:	addcc	r2, r3, #1
   16bc0:	strcc	r2, [r4, #20]
   16bc4:	movcc	r2, #32
   16bc8:	strbcc	r2, [r3]
   16bcc:	bcs	16ce4 <argp_failure@@Base+0x1b8>
   16bd0:	ldr	r2, [sp]
   16bd4:	ldr	r1, [sp, #220]	; 0xdc
   16bd8:	mov	r0, r4
   16bdc:	bl	11480 <vfprintf@plt>
   16be0:	cmp	r6, #0
   16be4:	beq	16c48 <argp_failure@@Base+0x11c>
   16be8:	ldr	r3, [r4, #20]
   16bec:	ldr	r2, [r4, #24]
   16bf0:	cmp	r3, r2
   16bf4:	addcc	r2, r3, #1
   16bf8:	strcc	r2, [r4, #20]
   16bfc:	movcc	r2, #58	; 0x3a
   16c00:	strbcc	r2, [r3]
   16c04:	bcs	16cf4 <argp_failure@@Base+0x1c8>
   16c08:	ldr	r3, [r4, #20]
   16c0c:	ldr	r2, [r4, #24]
   16c10:	cmp	r3, r2
   16c14:	addcc	r2, r3, #1
   16c18:	strcc	r2, [r4, #20]
   16c1c:	movcc	r2, #32
   16c20:	strbcc	r2, [r3]
   16c24:	bcs	16d04 <argp_failure@@Base+0x1d8>
   16c28:	mov	r2, #200	; 0xc8
   16c2c:	mov	r1, sp
   16c30:	mov	r0, r6
   16c34:	bl	113e4 <strerror_r@plt>
   16c38:	cmp	r0, #0
   16c3c:	beq	16d14 <argp_failure@@Base+0x1e8>
   16c40:	mov	r1, r4
   16c44:	bl	111ec <fputs_unlocked@plt>
   16c48:	ldr	r3, [r4, #20]
   16c4c:	ldr	r2, [r4, #24]
   16c50:	cmp	r3, r2
   16c54:	addcc	r2, r3, #1
   16c58:	strcc	r2, [r4, #20]
   16c5c:	movcc	r2, #10
   16c60:	strbcc	r2, [r3]
   16c64:	bcs	16d30 <argp_failure@@Base+0x204>
   16c68:	mov	r0, r4
   16c6c:	bl	112f4 <funlockfile@plt>
   16c70:	cmp	r7, #0
   16c74:	beq	16c8c <argp_failure@@Base+0x160>
   16c78:	cmp	r5, #0
   16c7c:	beq	16d40 <argp_failure@@Base+0x214>
   16c80:	ldr	r3, [r5, #16]
   16c84:	tst	r3, #32
   16c88:	beq	16d40 <argp_failure@@Base+0x214>
   16c8c:	add	sp, sp, #200	; 0xc8
   16c90:	ldrd	r4, [sp]
   16c94:	ldrd	r6, [sp, #8]
   16c98:	ldr	lr, [sp, #16]
   16c9c:	add	sp, sp, #20
   16ca0:	add	sp, sp, #4
   16ca4:	bx	lr
   16ca8:	movw	r3, #45800	; 0xb2e8
   16cac:	movt	r3, #2
   16cb0:	ldr	r4, [r3]
   16cb4:	cmp	r4, #0
   16cb8:	beq	16c8c <argp_failure@@Base+0x160>
   16cbc:	mov	r0, r4
   16cc0:	bl	114e0 <flockfile@plt>
   16cc4:	movw	r3, #45792	; 0xb2e0
   16cc8:	movt	r3, #2
   16ccc:	ldr	r0, [r3]
   16cd0:	b	16b74 <argp_failure@@Base+0x48>
   16cd4:	mov	r1, #58	; 0x3a
   16cd8:	mov	r0, r4
   16cdc:	bl	11450 <__overflow@plt>
   16ce0:	b	16bb0 <argp_failure@@Base+0x84>
   16ce4:	mov	r1, #32
   16ce8:	mov	r0, r4
   16cec:	bl	11450 <__overflow@plt>
   16cf0:	b	16bd0 <argp_failure@@Base+0xa4>
   16cf4:	mov	r1, #58	; 0x3a
   16cf8:	mov	r0, r4
   16cfc:	bl	11450 <__overflow@plt>
   16d00:	b	16c08 <argp_failure@@Base+0xdc>
   16d04:	mov	r1, #32
   16d08:	mov	r0, r4
   16d0c:	bl	11450 <__overflow@plt>
   16d10:	b	16c28 <argp_failure@@Base+0xfc>
   16d14:	mov	r0, r6
   16d18:	bl	1136c <strerror@plt>
   16d1c:	movw	r3, #41484	; 0xa20c
   16d20:	movt	r3, #1
   16d24:	cmp	r0, #0
   16d28:	moveq	r0, r3
   16d2c:	b	16c40 <argp_failure@@Base+0x114>
   16d30:	mov	r1, #10
   16d34:	mov	r0, r4
   16d38:	bl	11450 <__overflow@plt>
   16d3c:	b	16c68 <argp_failure@@Base+0x13c>
   16d40:	mov	r0, r7
   16d44:	bl	113a8 <exit@plt>
   16d48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16d4c:	strd	r6, [sp, #8]
   16d50:	strd	r8, [sp, #16]
   16d54:	strd	sl, [sp, #24]
   16d58:	str	lr, [sp, #32]
   16d5c:	add	fp, sp, #32
   16d60:	sub	sp, sp, #124	; 0x7c
   16d64:	str	r0, [fp, #-108]	; 0xffffff94
   16d68:	str	r1, [fp, #-104]	; 0xffffff98
   16d6c:	str	r3, [fp, #-100]	; 0xffffff9c
   16d70:	subs	r3, r2, #0
   16d74:	str	r3, [fp, #-132]	; 0xffffff7c
   16d78:	beq	17d60 <argp_failure@@Base+0x1234>
   16d7c:	mov	r0, r3
   16d80:	bl	114e0 <flockfile@plt>
   16d84:	movw	r3, #45732	; 0xb2a4
   16d88:	movt	r3, #2
   16d8c:	ldr	r9, [r3, #36]	; 0x24
   16d90:	cmp	r9, #0
   16d94:	beq	16e6c <argp_failure@@Base+0x340>
   16d98:	movw	r2, #45732	; 0xb2a4
   16d9c:	movt	r2, #2
   16da0:	mov	r3, #0
   16da4:	ldr	r2, [r2, #32]
   16da8:	mov	r1, r3
   16dac:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16db0:	bl	18e54 <argp_error@@Base+0xe40>
   16db4:	subs	sl, r0, #0
   16db8:	beq	17248 <argp_failure@@Base+0x71c>
   16dbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16dc0:	tst	r3, #11
   16dc4:	moveq	r3, #0
   16dc8:	streq	r3, [fp, #-128]	; 0xffffff80
   16dcc:	bne	17254 <argp_failure@@Base+0x728>
   16dd0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16dd4:	tst	r3, #3
   16dd8:	moveq	r4, #0
   16ddc:	bne	172e4 <argp_failure@@Base+0x7b8>
   16de0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16de4:	tst	r3, #16
   16de8:	bne	17508 <argp_failure@@Base+0x9dc>
   16dec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16df0:	tst	r3, #4
   16df4:	bne	17530 <argp_failure@@Base+0xa04>
   16df8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16dfc:	tst	r3, #8
   16e00:	beq	17cec <argp_failure@@Base+0x11c0>
   16e04:	ldr	r3, [fp, #-128]	; 0xffffff80
   16e08:	ldr	r3, [r3, #4]
   16e0c:	cmp	r3, #0
   16e10:	beq	17cec <argp_failure@@Base+0x11c0>
   16e14:	cmp	r4, #0
   16e18:	bne	17550 <argp_failure@@Base+0xa24>
   16e1c:	mov	r3, #0
   16e20:	str	r3, [fp, #-88]	; 0xffffffa8
   16e24:	str	r3, [fp, #-84]	; 0xffffffac
   16e28:	str	r3, [fp, #-80]	; 0xffffffb0
   16e2c:	ldr	r3, [fp, #-128]	; 0xffffff80
   16e30:	ldr	r9, [r3]
   16e34:	ldr	r3, [r3, #4]
   16e38:	str	r3, [fp, #-116]	; 0xffffff8c
   16e3c:	cmp	r3, #0
   16e40:	beq	17ce8 <argp_failure@@Base+0x11bc>
   16e44:	movw	r3, #45732	; 0xb2a4
   16e48:	movt	r3, #2
   16e4c:	str	r3, [fp, #-96]	; 0xffffffa0
   16e50:	movw	r3, #41800	; 0xa348
   16e54:	movt	r3, #1
   16e58:	str	r3, [fp, #-140]	; 0xffffff74
   16e5c:	movw	r3, #39832	; 0x9b98
   16e60:	movt	r3, #1
   16e64:	str	r3, [fp, #-144]	; 0xffffff70
   16e68:	b	17b68 <argp_failure@@Base+0x103c>
   16e6c:	movw	r0, #41508	; 0xa224
   16e70:	movt	r0, #1
   16e74:	bl	1133c <getenv@plt>
   16e78:	movw	r1, #45732	; 0xb2a4
   16e7c:	movt	r1, #2
   16e80:	ldrd	r2, [r1]
   16e84:	strd	r2, [fp, #-76]	; 0xffffffb4
   16e88:	ldrd	r2, [r1, #8]
   16e8c:	strd	r2, [fp, #-68]	; 0xffffffbc
   16e90:	ldrd	r2, [r1, #16]
   16e94:	strd	r2, [fp, #-60]	; 0xffffffc4
   16e98:	ldrd	r2, [r1, #24]
   16e9c:	strd	r2, [fp, #-52]	; 0xffffffcc
   16ea0:	ldrd	r2, [r1, #32]
   16ea4:	strd	r2, [fp, #-44]	; 0xffffffd4
   16ea8:	subs	r6, r0, #0
   16eac:	beq	16d98 <argp_failure@@Base+0x26c>
   16eb0:	movw	sl, #41036	; 0xa04c
   16eb4:	movt	sl, #1
   16eb8:	add	r8, sl, #168	; 0xa8
   16ebc:	b	17118 <argp_failure@@Base+0x5ec>
   16ec0:	cmp	r0, #45	; 0x2d
   16ec4:	cmpne	r0, #95	; 0x5f
   16ec8:	moveq	r3, #1
   16ecc:	movne	r3, #0
   16ed0:	ubfx	r1, r1, #3, #1
   16ed4:	orrs	r3, r3, r1
   16ed8:	beq	17ec4 <argp_failure@@Base+0x1398>
   16edc:	mov	r4, r6
   16ee0:	ldrb	r3, [r4, #1]!
   16ee4:	lsl	r1, r3, #1
   16ee8:	ldrh	r1, [r2, r1]
   16eec:	ubfx	r1, r1, #3, #1
   16ef0:	cmp	r3, #95	; 0x5f
   16ef4:	cmpne	r3, #45	; 0x2d
   16ef8:	moveq	r3, #1
   16efc:	movne	r3, #0
   16f00:	orrs	r3, r1, r3
   16f04:	bne	16ee0 <argp_failure@@Base+0x3b4>
   16f08:	sub	r7, r4, r6
   16f0c:	ldrb	r3, [r4]
   16f10:	lsl	r1, r3, #1
   16f14:	ldrh	r1, [r2, r1]
   16f18:	tst	r1, #8192	; 0x2000
   16f1c:	beq	16f34 <argp_failure@@Base+0x408>
   16f20:	ldrb	r3, [r4, #1]!
   16f24:	lsl	r1, r3, #1
   16f28:	ldrh	r1, [r2, r1]
   16f2c:	tst	r1, #8192	; 0x2000
   16f30:	bne	16f20 <argp_failure@@Base+0x3f4>
   16f34:	cmp	r3, #44	; 0x2c
   16f38:	cmpne	r3, #0
   16f3c:	beq	16fa0 <argp_failure@@Base+0x474>
   16f40:	cmp	r3, #61	; 0x3d
   16f44:	beq	16f6c <argp_failure@@Base+0x440>
   16f48:	ldrb	r3, [r4]
   16f4c:	lsl	r3, r3, #1
   16f50:	ldrh	r3, [r2, r3]
   16f54:	tst	r3, #2048	; 0x800
   16f58:	streq	r9, [fp, #-96]	; 0xffffffa0
   16f5c:	streq	r9, [fp, #-112]	; 0xffffff90
   16f60:	bne	17004 <argp_failure@@Base+0x4d8>
   16f64:	add	r5, sl, #24
   16f68:	b	170ac <argp_failure@@Base+0x580>
   16f6c:	add	r1, r4, #1
   16f70:	ldrb	r3, [r4, #1]
   16f74:	lsl	r3, r3, #1
   16f78:	ldrh	r3, [r2, r3]
   16f7c:	tst	r3, #8192	; 0x2000
   16f80:	beq	16ffc <argp_failure@@Base+0x4d0>
   16f84:	ldrb	r3, [r1, #1]!
   16f88:	lsl	r3, r3, #1
   16f8c:	ldrh	r3, [r2, r3]
   16f90:	tst	r3, #8192	; 0x2000
   16f94:	bne	16f84 <argp_failure@@Base+0x458>
   16f98:	mov	r4, r1
   16f9c:	b	16f48 <argp_failure@@Base+0x41c>
   16fa0:	cmp	r0, #110	; 0x6e
   16fa4:	movne	r3, #1
   16fa8:	strne	r3, [fp, #-96]	; 0xffffffa0
   16fac:	strne	r3, [fp, #-112]	; 0xffffff90
   16fb0:	bne	16f64 <argp_failure@@Base+0x438>
   16fb4:	ldrb	r3, [r6, #1]
   16fb8:	cmp	r3, #111	; 0x6f
   16fbc:	movne	r3, #1
   16fc0:	strne	r3, [fp, #-96]	; 0xffffffa0
   16fc4:	strne	r3, [fp, #-112]	; 0xffffff90
   16fc8:	bne	16f64 <argp_failure@@Base+0x438>
   16fcc:	ldrb	r3, [r6, #2]
   16fd0:	cmp	r3, #45	; 0x2d
   16fd4:	movne	r3, #1
   16fd8:	strne	r3, [fp, #-96]	; 0xffffffa0
   16fdc:	strne	r3, [fp, #-112]	; 0xffffff90
   16fe0:	bne	16f64 <argp_failure@@Base+0x438>
   16fe4:	add	r6, r6, #3
   16fe8:	sub	r7, r7, #3
   16fec:	str	r9, [fp, #-112]	; 0xffffff90
   16ff0:	mov	r3, #1
   16ff4:	str	r3, [fp, #-96]	; 0xffffffa0
   16ff8:	b	16f64 <argp_failure@@Base+0x438>
   16ffc:	mov	r4, r1
   17000:	b	16f48 <argp_failure@@Base+0x41c>
   17004:	mov	r2, #10
   17008:	mov	r1, #0
   1700c:	mov	r0, r4
   17010:	bl	1121c <strtol@plt>
   17014:	str	r0, [fp, #-112]	; 0xffffff90
   17018:	ldr	r2, [r5]
   1701c:	ldrb	r3, [r4]
   17020:	lsl	r3, r3, #1
   17024:	ldrh	r3, [r2, r3]
   17028:	tst	r3, #2048	; 0x800
   1702c:	beq	17044 <argp_failure@@Base+0x518>
   17030:	ldrb	r3, [r4, #1]!
   17034:	lsl	r3, r3, #1
   17038:	ldrh	r3, [r2, r3]
   1703c:	tst	r3, #2048	; 0x800
   17040:	bne	17030 <argp_failure@@Base+0x504>
   17044:	ldrb	r3, [r4]
   17048:	lsl	r3, r3, #1
   1704c:	ldrh	r3, [r2, r3]
   17050:	tst	r3, #8192	; 0x2000
   17054:	beq	17074 <argp_failure@@Base+0x548>
   17058:	ldrb	r3, [r4, #1]!
   1705c:	lsl	r3, r3, #1
   17060:	ldrh	r3, [r2, r3]
   17064:	tst	r3, #8192	; 0x2000
   17068:	bne	17058 <argp_failure@@Base+0x52c>
   1706c:	str	r9, [fp, #-96]	; 0xffffffa0
   17070:	b	16f64 <argp_failure@@Base+0x438>
   17074:	str	r9, [fp, #-96]	; 0xffffffa0
   17078:	b	16f64 <argp_failure@@Base+0x438>
   1707c:	str	r6, [sp, #4]
   17080:	str	r7, [sp]
   17084:	movw	r3, #41524	; 0xa234
   17088:	movt	r3, #1
   1708c:	mov	r2, #0
   17090:	mov	r1, r2
   17094:	ldr	r0, [fp, #-104]	; 0xffffff98
   17098:	bl	16b2c <argp_failure@@Base>
   1709c:	b	17100 <argp_failure@@Base+0x5d4>
   170a0:	add	r5, r5, #16
   170a4:	cmp	r5, r8
   170a8:	beq	171e8 <argp_failure@@Base+0x6bc>
   170ac:	mov	r0, r5
   170b0:	bl	113b4 <strlen@plt>
   170b4:	cmp	r0, r7
   170b8:	bne	170a0 <argp_failure@@Base+0x574>
   170bc:	mov	r2, r7
   170c0:	mov	r1, r5
   170c4:	mov	r0, r6
   170c8:	bl	1151c <strncmp@plt>
   170cc:	cmp	r0, #0
   170d0:	bne	170a0 <argp_failure@@Base+0x574>
   170d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   170d8:	cmp	r3, #0
   170dc:	beq	170ec <argp_failure@@Base+0x5c0>
   170e0:	ldrb	r3, [r5, #14]
   170e4:	cmp	r3, #0
   170e8:	beq	1707c <argp_failure@@Base+0x550>
   170ec:	ldrb	r3, [r5, #15]
   170f0:	sub	r2, fp, #36	; 0x24
   170f4:	add	r3, r2, r3
   170f8:	ldr	r2, [fp, #-112]	; 0xffffff90
   170fc:	str	r2, [r3, #-40]	; 0xffffffd8
   17100:	cmp	r5, r8
   17104:	beq	171e8 <argp_failure@@Base+0x6bc>
   17108:	ldrb	r3, [r4]
   1710c:	cmp	r3, #44	; 0x2c
   17110:	addeq	r6, r4, #1
   17114:	movne	r6, r4
   17118:	ldrb	r3, [r6]
   1711c:	cmp	r3, #0
   17120:	beq	17178 <argp_failure@@Base+0x64c>
   17124:	bl	1139c <__ctype_b_loc@plt>
   17128:	mov	r5, r0
   1712c:	ldr	r2, [r0]
   17130:	mov	r3, r6
   17134:	mov	r6, r3
   17138:	ldrb	r0, [r3], #1
   1713c:	lsl	r1, r0, #1
   17140:	ldrh	r1, [r2, r1]
   17144:	tst	r1, #8192	; 0x2000
   17148:	bne	17134 <argp_failure@@Base+0x608>
   1714c:	tst	r1, #1024	; 0x400
   17150:	bne	16ec0 <argp_failure@@Base+0x394>
   17154:	cmp	r0, #0
   17158:	beq	17118 <argp_failure@@Base+0x5ec>
   1715c:	str	r6, [sp]
   17160:	movw	r3, #41612	; 0xa28c
   17164:	movt	r3, #1
   17168:	mov	r2, #0
   1716c:	mov	r1, r2
   17170:	ldr	r0, [fp, #-104]	; 0xffffff98
   17174:	bl	16b2c <argp_failure@@Base>
   17178:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1717c:	ldr	r3, [pc, #3488]	; 17f24 <argp_failure@@Base+0x13f8>
   17180:	add	r1, r3, #144	; 0x90
   17184:	add	r3, r3, #16
   17188:	cmp	r3, r1
   1718c:	beq	1720c <argp_failure@@Base+0x6e0>
   17190:	ldrb	r2, [r3, #14]
   17194:	cmp	r2, #0
   17198:	bne	17184 <argp_failure@@Base+0x658>
   1719c:	ldrb	r2, [r3, #15]
   171a0:	cmp	r2, #32
   171a4:	beq	17184 <argp_failure@@Base+0x658>
   171a8:	sub	ip, fp, #36	; 0x24
   171ac:	add	r2, ip, r2
   171b0:	ldr	r2, [r2, #-40]	; 0xffffffd8
   171b4:	cmp	r2, r0
   171b8:	blt	17184 <argp_failure@@Base+0x658>
   171bc:	str	r3, [sp, #4]
   171c0:	movw	r3, #41696	; 0xa2e0
   171c4:	movt	r3, #1
   171c8:	str	r3, [sp]
   171cc:	movw	r3, #41644	; 0xa2ac
   171d0:	movt	r3, #1
   171d4:	mov	r2, #0
   171d8:	mov	r1, r2
   171dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   171e0:	bl	16b2c <argp_failure@@Base>
   171e4:	b	16d98 <argp_failure@@Base+0x26c>
   171e8:	str	r6, [sp, #4]
   171ec:	str	r7, [sp]
   171f0:	movw	r3, #41572	; 0xa264
   171f4:	movt	r3, #1
   171f8:	mov	r2, #0
   171fc:	mov	r1, r2
   17200:	ldr	r0, [fp, #-104]	; 0xffffff98
   17204:	bl	16b2c <argp_failure@@Base>
   17208:	b	17108 <argp_failure@@Base+0x5dc>
   1720c:	movw	r1, #45732	; 0xb2a4
   17210:	movt	r1, #2
   17214:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   17218:	strd	r2, [r1]
   1721c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   17220:	strd	r2, [r1, #8]
   17224:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17228:	strd	r2, [r1, #16]
   1722c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   17230:	strd	r2, [r1, #24]
   17234:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17238:	strd	r2, [r1, #32]
   1723c:	mov	r3, #1
   17240:	str	r3, [r1, #36]	; 0x24
   17244:	b	16d98 <argp_failure@@Base+0x26c>
   17248:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1724c:	bl	112f4 <funlockfile@plt>
   17250:	b	17d60 <argp_failure@@Base+0x1234>
   17254:	mov	r1, #0
   17258:	ldr	r0, [fp, #-108]	; 0xffffff94
   1725c:	bl	16474 <argp_parse@@Base+0x305c>
   17260:	str	r0, [fp, #-128]	; 0xffffff80
   17264:	movw	r1, #39912	; 0x9be8
   17268:	movt	r1, #1
   1726c:	bl	14eb4 <argp_parse@@Base+0x1a9c>
   17270:	cmp	r0, #0
   17274:	mvnne	r3, #0
   17278:	strne	r3, [r0, #12]
   1727c:	movw	r1, #39880	; 0x9bc8
   17280:	movt	r1, #1
   17284:	ldr	r0, [fp, #-128]	; 0xffffff80
   17288:	bl	14eb4 <argp_parse@@Base+0x1a9c>
   1728c:	cmp	r0, #0
   17290:	mvnne	r3, #0
   17294:	strne	r3, [r0, #12]
   17298:	ldr	r0, [fp, #-128]	; 0xffffff80
   1729c:	ldr	r3, [r0, #4]
   172a0:	cmp	r3, #0
   172a4:	beq	16dd0 <argp_failure@@Base+0x2a4>
   172a8:	ldr	r2, [r0]
   172ac:	mov	r3, #0
   172b0:	str	r3, [r2, #24]
   172b4:	add	r3, r3, #1
   172b8:	add	r2, r2, #28
   172bc:	ldr	r1, [r0, #4]
   172c0:	cmp	r3, r1
   172c4:	bcc	172b0 <argp_failure@@Base+0x784>
   172c8:	movw	r3, #24932	; 0x6164
   172cc:	movt	r3, #1
   172d0:	mov	r2, #28
   172d4:	ldr	r0, [fp, #-128]	; 0xffffff80
   172d8:	ldr	r0, [r0]
   172dc:	bl	114f8 <qsort@plt>
   172e0:	b	16dd0 <argp_failure@@Base+0x2a4>
   172e4:	ldr	r0, [fp, #-108]	; 0xffffff94
   172e8:	bl	14f68 <argp_parse@@Base+0x1b50>
   172ec:	mov	r2, r0
   172f0:	add	r3, r0, #7
   172f4:	bic	r3, r3, #7
   172f8:	sub	sp, sp, r3
   172fc:	add	r9, sp, #8
   17300:	mov	r1, #0
   17304:	mov	r0, r9
   17308:	bl	113fc <memset@plt>
   1730c:	mov	r5, #1
   17310:	movw	r4, #45732	; 0xb2a4
   17314:	movt	r4, #2
   17318:	movw	r3, #41720	; 0xa2f8
   1731c:	movt	r3, #1
   17320:	str	r3, [fp, #-116]	; 0xffffff8c
   17324:	movw	r8, #41712	; 0xa2f0
   17328:	movt	r8, #1
   1732c:	str	r9, [fp, #-96]	; 0xffffffa0
   17330:	ldr	r9, [fp, #-128]	; 0xffffff80
   17334:	str	r8, [fp, #-112]	; 0xffffff90
   17338:	ldr	r8, [fp, #-100]	; 0xffffff9c
   1733c:	b	173ec <argp_failure@@Base+0x8c0>
   17340:	mov	r0, sl
   17344:	bl	18eec <argp_error@@Base+0xed8>
   17348:	b	17408 <argp_failure@@Base+0x8dc>
   1734c:	mov	r0, sl
   17350:	bl	18eec <argp_error@@Base+0xed8>
   17354:	b	17454 <argp_failure@@Base+0x928>
   17358:	mov	r1, sl
   1735c:	mov	r0, r9
   17360:	bl	1513c <argp_parse@@Base+0x1d24>
   17364:	orr	r8, r8, #2
   17368:	str	sl, [sp]
   1736c:	mov	r3, #1
   17370:	sub	r2, fp, #76	; 0x4c
   17374:	ldr	r1, [fp, #-104]	; 0xffffff98
   17378:	ldr	r0, [fp, #-108]	; 0xffffff94
   1737c:	bl	155a8 <argp_parse@@Base+0x2190>
   17380:	mov	r6, r0
   17384:	ldr	r3, [sl, #28]
   17388:	ldr	r2, [sl, #24]
   1738c:	sub	r3, r3, r2
   17390:	ldr	r2, [sl, #16]
   17394:	cmp	r3, r2
   17398:	bhi	174cc <argp_failure@@Base+0x9a0>
   1739c:	str	r7, [sl, #12]
   173a0:	ldr	r3, [sl, #28]
   173a4:	ldr	r2, [sl, #24]
   173a8:	sub	r3, r3, r2
   173ac:	ldr	r2, [sl, #16]
   173b0:	cmp	r3, r2
   173b4:	bhi	174d8 <argp_failure@@Base+0x9ac>
   173b8:	str	r5, [sl, #4]
   173bc:	ldr	r2, [sl, #28]
   173c0:	ldr	r3, [sl, #32]
   173c4:	cmp	r2, r3
   173c8:	bcs	174e4 <argp_failure@@Base+0x9b8>
   173cc:	ldr	r3, [sl, #28]
   173d0:	add	r2, r3, #1
   173d4:	str	r2, [sl, #28]
   173d8:	mov	r2, #10
   173dc:	strb	r2, [r3]
   173e0:	mov	r5, #0
   173e4:	cmp	r6, r5
   173e8:	beq	174fc <argp_failure@@Base+0x9d0>
   173ec:	ldr	r6, [r4, #28]
   173f0:	ldr	r3, [sl, #28]
   173f4:	ldr	r2, [sl, #24]
   173f8:	sub	r3, r3, r2
   173fc:	ldr	r2, [sl, #16]
   17400:	cmp	r3, r2
   17404:	bhi	17340 <argp_failure@@Base+0x814>
   17408:	ldr	r7, [sl, #12]
   1740c:	str	r6, [sl, #12]
   17410:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17414:	str	r3, [fp, #-76]	; 0xffffffb4
   17418:	cmp	r5, #0
   1741c:	ldr	r3, [fp, #4]
   17420:	movwne	r2, #41704	; 0xa2e8
   17424:	movtne	r2, #1
   17428:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   1742c:	ldr	r1, [fp, #-112]	; 0xffffff90
   17430:	mov	r0, sl
   17434:	bl	19564 <argp_error@@Base+0x1550>
   17438:	ldr	r6, [r4, #28]
   1743c:	ldr	r3, [sl, #28]
   17440:	ldr	r2, [sl, #24]
   17444:	sub	r3, r3, r2
   17448:	ldr	r2, [sl, #16]
   1744c:	cmp	r3, r2
   17450:	bhi	1734c <argp_failure@@Base+0x820>
   17454:	ldr	r5, [sl, #4]
   17458:	str	r6, [sl, #4]
   1745c:	tst	r8, #2
   17460:	beq	17358 <argp_failure@@Base+0x82c>
   17464:	ldr	r3, [r9, #4]
   17468:	cmp	r3, #0
   1746c:	beq	17368 <argp_failure@@Base+0x83c>
   17470:	ldr	r3, [sl, #28]
   17474:	add	r3, r3, #12
   17478:	ldr	r2, [sl, #32]
   1747c:	cmp	r2, r3
   17480:	bcs	17498 <argp_failure@@Base+0x96c>
   17484:	mov	r1, #12
   17488:	mov	r0, sl
   1748c:	bl	19464 <argp_error@@Base+0x1450>
   17490:	cmp	r0, #0
   17494:	beq	17368 <argp_failure@@Base+0x83c>
   17498:	ldr	r2, [sl, #28]
   1749c:	movw	r3, #41728	; 0xa300
   174a0:	movt	r3, #1
   174a4:	ldr	r0, [r3]
   174a8:	ldr	r1, [r3, #4]
   174ac:	str	r0, [r2]
   174b0:	str	r1, [r2, #4]
   174b4:	ldr	r3, [r3, #8]
   174b8:	str	r3, [r2, #8]
   174bc:	ldr	r3, [sl, #28]
   174c0:	add	r3, r3, #12
   174c4:	str	r3, [sl, #28]
   174c8:	b	17368 <argp_failure@@Base+0x83c>
   174cc:	mov	r0, sl
   174d0:	bl	18eec <argp_error@@Base+0xed8>
   174d4:	b	1739c <argp_failure@@Base+0x870>
   174d8:	mov	r0, sl
   174dc:	bl	18eec <argp_error@@Base+0xed8>
   174e0:	b	173b8 <argp_failure@@Base+0x88c>
   174e4:	mov	r1, #1
   174e8:	mov	r0, sl
   174ec:	bl	19464 <argp_error@@Base+0x1450>
   174f0:	cmp	r0, #0
   174f4:	bne	173cc <argp_failure@@Base+0x8a0>
   174f8:	b	173e0 <argp_failure@@Base+0x8b4>
   174fc:	str	r8, [fp, #-100]	; 0xffffff9c
   17500:	mov	r4, #1
   17504:	b	16de0 <argp_failure@@Base+0x2b4>
   17508:	str	sl, [sp, #4]
   1750c:	mov	r3, #1
   17510:	str	r3, [sp]
   17514:	mov	r3, #0
   17518:	mov	r2, r3
   1751c:	ldr	r1, [fp, #-104]	; 0xffffff98
   17520:	ldr	r0, [fp, #-108]	; 0xffffff94
   17524:	bl	15b58 <argp_parse@@Base+0x2740>
   17528:	orr	r4, r4, r0
   1752c:	b	16dec <argp_failure@@Base+0x2c0>
   17530:	ldr	r3, [fp, #4]
   17534:	mov	r2, r3
   17538:	movw	r1, #41744	; 0xa310
   1753c:	movt	r1, #1
   17540:	mov	r0, sl
   17544:	bl	19564 <argp_error@@Base+0x1550>
   17548:	mov	r4, #1
   1754c:	b	16df8 <argp_failure@@Base+0x2cc>
   17550:	ldr	r2, [sl, #28]
   17554:	ldr	r3, [sl, #32]
   17558:	cmp	r2, r3
   1755c:	bcs	17578 <argp_failure@@Base+0xa4c>
   17560:	ldr	r3, [sl, #28]
   17564:	add	r2, r3, #1
   17568:	str	r2, [sl, #28]
   1756c:	mov	r2, #10
   17570:	strb	r2, [r3]
   17574:	b	16e1c <argp_failure@@Base+0x2f0>
   17578:	mov	r1, #1
   1757c:	mov	r0, sl
   17580:	bl	19464 <argp_error@@Base+0x1450>
   17584:	cmp	r0, #0
   17588:	bne	17560 <argp_failure@@Base+0xa34>
   1758c:	b	16e1c <argp_failure@@Base+0x2f0>
   17590:	mov	r0, sl
   17594:	bl	18eec <argp_error@@Base+0xed8>
   17598:	b	17b88 <argp_failure@@Base+0x105c>
   1759c:	add	r3, r3, #24
   175a0:	subs	r2, r2, #1
   175a4:	beq	175c8 <argp_failure@@Base+0xa9c>
   175a8:	ldr	r1, [r3, #-24]	; 0xffffffe8
   175ac:	cmp	r1, #0
   175b0:	beq	1759c <argp_failure@@Base+0xa70>
   175b4:	ldr	r1, [r3, #-12]
   175b8:	tst	r1, #2
   175bc:	bne	1759c <argp_failure@@Base+0xa70>
   175c0:	mov	r3, #1
   175c4:	str	r3, [fp, #-112]	; 0xffffff90
   175c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   175cc:	ldr	r5, [r3, #8]
   175d0:	ldr	r3, [sl, #28]
   175d4:	ldr	r2, [sl, #24]
   175d8:	sub	r3, r3, r2
   175dc:	ldr	r2, [sl, #16]
   175e0:	cmp	r3, r2
   175e4:	bhi	17604 <argp_failure@@Base+0xad8>
   175e8:	str	r5, [sl, #12]
   175ec:	ldr	r6, [r9, #4]
   175f0:	cmp	r6, #0
   175f4:	beq	17704 <argp_failure@@Base+0xbd8>
   175f8:	mov	r5, r4
   175fc:	str	r9, [fp, #-136]	; 0xffffff78
   17600:	b	17eec <argp_failure@@Base+0x13c0>
   17604:	mov	r0, sl
   17608:	bl	18eec <argp_error@@Base+0xed8>
   1760c:	b	175e8 <argp_failure@@Base+0xabc>
   17610:	tst	r9, #2
   17614:	beq	17620 <argp_failure@@Base+0xaf4>
   17618:	add	r8, r8, #1
   1761c:	b	17ee0 <argp_failure@@Base+0x13b4>
   17620:	sub	r1, fp, #76	; 0x4c
   17624:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17628:	ldr	r0, [r3, #8]
   1762c:	bl	159b4 <argp_parse@@Base+0x259c>
   17630:	ldr	r2, [sl, #28]
   17634:	ldr	r3, [sl, #32]
   17638:	cmp	r2, r3
   1763c:	bcs	176bc <argp_failure@@Base+0xb90>
   17640:	ldr	r3, [sl, #28]
   17644:	add	r2, r3, #1
   17648:	str	r2, [sl, #28]
   1764c:	mov	r2, #45	; 0x2d
   17650:	strb	r2, [r3]
   17654:	ldrb	r7, [r8]
   17658:	ldr	r2, [sl, #28]
   1765c:	ldr	r3, [sl, #32]
   17660:	cmp	r2, r3
   17664:	bcs	176d4 <argp_failure@@Base+0xba8>
   17668:	ldr	r3, [sl, #28]
   1766c:	add	r2, r3, #1
   17670:	str	r2, [sl, #28]
   17674:	strb	r7, [r3]
   17678:	ldr	r3, [fp, #-112]	; 0xffffff90
   1767c:	cmp	r3, #0
   17680:	beq	17694 <argp_failure@@Base+0xb68>
   17684:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17688:	ldr	r3, [r3]
   1768c:	cmp	r3, #0
   17690:	beq	176ec <argp_failure@@Base+0xbc0>
   17694:	ldr	r2, [r4, #8]
   17698:	cmp	r2, #0
   1769c:	beq	17618 <argp_failure@@Base+0xaec>
   176a0:	ldr	r3, [r4, #12]
   176a4:	tst	r3, #1
   176a8:	ldrne	r1, [fp, #-140]	; 0xffffff74
   176ac:	ldreq	r1, [fp, #-144]	; 0xffffff70
   176b0:	mov	r0, sl
   176b4:	bl	19564 <argp_error@@Base+0x1550>
   176b8:	b	17618 <argp_failure@@Base+0xaec>
   176bc:	mov	r1, #1
   176c0:	mov	r0, sl
   176c4:	bl	19464 <argp_error@@Base+0x1450>
   176c8:	cmp	r0, #0
   176cc:	bne	17640 <argp_failure@@Base+0xb14>
   176d0:	b	17654 <argp_failure@@Base+0xb28>
   176d4:	mov	r1, #1
   176d8:	mov	r0, sl
   176dc:	bl	19464 <argp_error@@Base+0x1450>
   176e0:	cmp	r0, #0
   176e4:	bne	17668 <argp_failure@@Base+0xb3c>
   176e8:	b	17678 <argp_failure@@Base+0xb4c>
   176ec:	ldr	r3, [r4, #8]
   176f0:	cmp	r3, #0
   176f4:	movne	r3, #1
   176f8:	strne	r3, [fp, #-80]	; 0xffffffb0
   176fc:	b	17618 <argp_failure@@Base+0xaec>
   17700:	ldr	r9, [fp, #-136]	; 0xffffff78
   17704:	ldr	r3, [r4, #12]
   17708:	tst	r3, #8
   1770c:	beq	177e4 <argp_failure@@Base+0xcb8>
   17710:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17714:	ldr	r5, [r3, #16]
   17718:	ldr	r3, [sl, #28]
   1771c:	ldr	r2, [sl, #24]
   17720:	sub	r3, r3, r2
   17724:	ldr	r2, [sl, #16]
   17728:	cmp	r3, r2
   1772c:	bhi	17748 <argp_failure@@Base+0xc1c>
   17730:	str	r5, [sl, #12]
   17734:	ldr	r6, [r9, #4]
   17738:	cmp	r6, #0
   1773c:	beq	178ac <argp_failure@@Base+0xd80>
   17740:	add	r5, r4, #24
   17744:	b	1777c <argp_failure@@Base+0xc50>
   17748:	mov	r0, sl
   1774c:	bl	18eec <argp_error@@Base+0xed8>
   17750:	b	17730 <argp_failure@@Base+0xc04>
   17754:	mov	r2, r8
   17758:	mov	r1, r7
   1775c:	ldr	r0, [sl, #28]
   17760:	bl	11288 <memcpy@plt>
   17764:	ldr	r3, [sl, #28]
   17768:	add	r8, r3, r8
   1776c:	str	r8, [sl, #28]
   17770:	add	r5, r5, #24
   17774:	subs	r6, r6, #1
   17778:	beq	178ac <argp_failure@@Base+0xd80>
   1777c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17780:	cmp	r3, #0
   17784:	beq	17770 <argp_failure@@Base+0xc44>
   17788:	ldr	r3, [r5, #-12]
   1778c:	tst	r3, #2
   17790:	bne	17770 <argp_failure@@Base+0xc44>
   17794:	sub	r1, fp, #76	; 0x4c
   17798:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1779c:	ldr	r0, [r3, #16]
   177a0:	bl	159b4 <argp_parse@@Base+0x259c>
   177a4:	ldr	r7, [r5, #-24]	; 0xffffffe8
   177a8:	mov	r0, r7
   177ac:	bl	113b4 <strlen@plt>
   177b0:	subs	r8, r0, #0
   177b4:	beq	17770 <argp_failure@@Base+0xc44>
   177b8:	ldr	r3, [sl, #28]
   177bc:	add	r3, r3, r8
   177c0:	ldr	r2, [sl, #32]
   177c4:	cmp	r2, r3
   177c8:	bcs	17754 <argp_failure@@Base+0xc28>
   177cc:	mov	r1, r8
   177d0:	mov	r0, sl
   177d4:	bl	19464 <argp_error@@Base+0x1450>
   177d8:	cmp	r0, #0
   177dc:	beq	17770 <argp_failure@@Base+0xc44>
   177e0:	b	17754 <argp_failure@@Base+0xc28>
   177e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   177e8:	ldr	r5, [r3, #12]
   177ec:	ldr	r3, [sl, #28]
   177f0:	ldr	r2, [sl, #24]
   177f4:	sub	r3, r3, r2
   177f8:	ldr	r2, [sl, #16]
   177fc:	cmp	r3, r2
   17800:	bhi	17830 <argp_failure@@Base+0xd04>
   17804:	str	r5, [sl, #12]
   17808:	ldr	r6, [r9, #4]
   1780c:	cmp	r6, #0
   17810:	beq	178ac <argp_failure@@Base+0xd80>
   17814:	add	r5, r4, #24
   17818:	movw	r8, #41808	; 0xa350
   1781c:	movt	r8, #1
   17820:	movw	r7, #41824	; 0xa360
   17824:	movt	r7, #1
   17828:	str	r7, [fp, #-112]	; 0xffffff90
   1782c:	b	17848 <argp_failure@@Base+0xd1c>
   17830:	mov	r0, sl
   17834:	bl	18eec <argp_error@@Base+0xed8>
   17838:	b	17804 <argp_failure@@Base+0xcd8>
   1783c:	add	r5, r5, #24
   17840:	subs	r6, r6, #1
   17844:	beq	178ac <argp_failure@@Base+0xd80>
   17848:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1784c:	cmp	r3, #0
   17850:	beq	1783c <argp_failure@@Base+0xd10>
   17854:	ldr	r3, [r5, #-12]
   17858:	tst	r3, #2
   1785c:	bne	1783c <argp_failure@@Base+0xd10>
   17860:	sub	r1, fp, #76	; 0x4c
   17864:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17868:	ldr	r0, [r3, #12]
   1786c:	bl	159b4 <argp_parse@@Base+0x259c>
   17870:	ldr	r2, [r5, #-24]	; 0xffffffe8
   17874:	mov	r1, r8
   17878:	mov	r0, sl
   1787c:	bl	19564 <argp_error@@Base+0x1550>
   17880:	ldr	r2, [r4, #8]
   17884:	cmp	r2, #0
   17888:	beq	1783c <argp_failure@@Base+0xd10>
   1788c:	ldr	r3, [r4, #12]
   17890:	tst	r3, #1
   17894:	movwne	r1, #41816	; 0xa358
   17898:	movtne	r1, #1
   1789c:	ldreq	r1, [fp, #-112]	; 0xffffff90
   178a0:	mov	r0, sl
   178a4:	bl	19564 <argp_error@@Base+0x1550>
   178a8:	b	1783c <argp_failure@@Base+0xd10>
   178ac:	ldr	r3, [sl, #28]
   178b0:	ldr	r2, [sl, #24]
   178b4:	sub	r3, r3, r2
   178b8:	ldr	r2, [sl, #16]
   178bc:	cmp	r3, r2
   178c0:	bhi	1792c <argp_failure@@Base+0xe00>
   178c4:	mov	r3, #0
   178c8:	str	r3, [sl, #4]
   178cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   178d0:	cmp	r3, #0
   178d4:	beq	17938 <argp_failure@@Base+0xe0c>
   178d8:	ldr	r3, [r4, #12]
   178dc:	tst	r3, #8
   178e0:	bne	1790c <argp_failure@@Base+0xde0>
   178e4:	ldr	r5, [r4, #4]
   178e8:	sub	r3, r5, #1
   178ec:	cmp	r3, #254	; 0xfe
   178f0:	bhi	1790c <argp_failure@@Base+0xde0>
   178f4:	bl	1139c <__ctype_b_loc@plt>
   178f8:	ldr	r3, [r0]
   178fc:	lsl	r5, r5, #1
   17900:	ldrh	r3, [r3, r5]
   17904:	tst	r3, #16384	; 0x4000
   17908:	bne	17b14 <argp_failure@@Base+0xfe8>
   1790c:	ldr	r3, [r4]
   17910:	cmp	r3, #0
   17914:	bne	17b14 <argp_failure@@Base+0xfe8>
   17918:	sub	r2, fp, #76	; 0x4c
   1791c:	ldr	r1, [r9, #20]
   17920:	ldr	r0, [r4, #16]
   17924:	bl	157ac <argp_parse@@Base+0x2394>
   17928:	b	17b10 <argp_failure@@Base+0xfe4>
   1792c:	mov	r0, sl
   17930:	bl	18eec <argp_error@@Base+0xed8>
   17934:	b	178c4 <argp_failure@@Base+0xd98>
   17938:	ldr	r5, [r4, #16]
   1793c:	ldr	r3, [fp, #-104]	; 0xffffff98
   17940:	ldr	r2, [r9, #20]
   17944:	ldr	r1, [r4, #4]
   17948:	mov	r0, r5
   1794c:	bl	14fd4 <argp_parse@@Base+0x1bbc>
   17950:	subs	r4, r0, #0
   17954:	beq	17acc <argp_failure@@Base+0xfa0>
   17958:	ldrb	r3, [r4]
   1795c:	cmp	r3, #0
   17960:	beq	17ac4 <argp_failure@@Base+0xf98>
   17964:	ldr	r3, [sl, #28]
   17968:	ldr	r2, [sl, #24]
   1796c:	sub	r3, r3, r2
   17970:	ldr	r2, [sl, #16]
   17974:	cmp	r3, r2
   17978:	bhi	17a24 <argp_failure@@Base+0xef8>
   1797c:	ldr	r6, [sl, #20]
   17980:	bic	r6, r6, r6, asr #31
   17984:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17988:	ldr	r7, [r3, #20]
   1798c:	str	r7, [sl, #4]
   17990:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17994:	ldr	r7, [r3, #20]
   17998:	ldr	r3, [sl, #28]
   1799c:	ldr	r2, [sl, #24]
   179a0:	sub	r3, r3, r2
   179a4:	ldr	r2, [sl, #16]
   179a8:	cmp	r3, r2
   179ac:	bhi	17a60 <argp_failure@@Base+0xf34>
   179b0:	str	r7, [sl, #12]
   179b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   179b8:	ldr	r1, [r3, #20]
   179bc:	add	r3, r1, #3
   179c0:	cmp	r6, r3
   179c4:	bhi	17a6c <argp_failure@@Base+0xf40>
   179c8:	cmp	r6, r1
   179cc:	bcc	17aac <argp_failure@@Base+0xf80>
   179d0:	ldr	r3, [sl, #28]
   179d4:	add	r3, r3, #3
   179d8:	ldr	r2, [sl, #32]
   179dc:	cmp	r2, r3
   179e0:	bcs	179f8 <argp_failure@@Base+0xecc>
   179e4:	mov	r1, #3
   179e8:	mov	r0, sl
   179ec:	bl	19464 <argp_error@@Base+0x1450>
   179f0:	cmp	r0, #0
   179f4:	beq	17ab4 <argp_failure@@Base+0xf88>
   179f8:	ldr	r2, [sl, #28]
   179fc:	movw	r3, #41828	; 0xa364
   17a00:	movt	r3, #1
   17a04:	ldrh	r1, [r3]
   17a08:	strh	r1, [r2]
   17a0c:	ldrb	r3, [r3, #2]
   17a10:	strb	r3, [r2, #2]
   17a14:	ldr	r3, [sl, #28]
   17a18:	add	r3, r3, #3
   17a1c:	str	r3, [sl, #28]
   17a20:	b	17ab4 <argp_failure@@Base+0xf88>
   17a24:	mov	r0, sl
   17a28:	bl	18eec <argp_error@@Base+0xed8>
   17a2c:	ldr	r6, [sl, #20]
   17a30:	bic	r6, r6, r6, asr #31
   17a34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a38:	ldr	r7, [r3, #20]
   17a3c:	ldr	r3, [sl, #28]
   17a40:	ldr	r2, [sl, #24]
   17a44:	sub	r3, r3, r2
   17a48:	ldr	r2, [sl, #16]
   17a4c:	cmp	r3, r2
   17a50:	bls	1798c <argp_failure@@Base+0xe60>
   17a54:	mov	r0, sl
   17a58:	bl	18eec <argp_error@@Base+0xed8>
   17a5c:	b	1798c <argp_failure@@Base+0xe60>
   17a60:	mov	r0, sl
   17a64:	bl	18eec <argp_error@@Base+0xed8>
   17a68:	b	179b0 <argp_failure@@Base+0xe84>
   17a6c:	ldr	r2, [sl, #28]
   17a70:	ldr	r3, [sl, #32]
   17a74:	cmp	r2, r3
   17a78:	bcs	17a94 <argp_failure@@Base+0xf68>
   17a7c:	ldr	r3, [sl, #28]
   17a80:	add	r2, r3, #1
   17a84:	str	r2, [sl, #28]
   17a88:	mov	r2, #10
   17a8c:	strb	r2, [r3]
   17a90:	b	17ab4 <argp_failure@@Base+0xf88>
   17a94:	mov	r1, #1
   17a98:	mov	r0, sl
   17a9c:	bl	19464 <argp_error@@Base+0x1450>
   17aa0:	cmp	r0, #0
   17aa4:	bne	17a7c <argp_failure@@Base+0xf50>
   17aa8:	b	17ab4 <argp_failure@@Base+0xf88>
   17aac:	mov	r0, sl
   17ab0:	bl	15324 <argp_parse@@Base+0x1f0c>
   17ab4:	mov	r0, r4
   17ab8:	bl	113b4 <strlen@plt>
   17abc:	subs	r6, r0, #0
   17ac0:	bne	17bec <argp_failure@@Base+0x10c0>
   17ac4:	cmp	r5, r4
   17ac8:	bne	17c34 <argp_failure@@Base+0x1108>
   17acc:	ldr	r3, [sl, #28]
   17ad0:	ldr	r2, [sl, #24]
   17ad4:	sub	r3, r3, r2
   17ad8:	ldr	r2, [sl, #16]
   17adc:	cmp	r3, r2
   17ae0:	bhi	17c40 <argp_failure@@Base+0x1114>
   17ae4:	mov	r3, #0
   17ae8:	str	r3, [sl, #4]
   17aec:	ldr	r2, [sl, #28]
   17af0:	ldr	r3, [sl, #32]
   17af4:	cmp	r2, r3
   17af8:	bcs	17c4c <argp_failure@@Base+0x1120>
   17afc:	ldr	r3, [sl, #28]
   17b00:	add	r2, r3, #1
   17b04:	str	r2, [sl, #28]
   17b08:	mov	r2, #10
   17b0c:	strb	r2, [r3]
   17b10:	str	r9, [fp, #-88]	; 0xffffffa8
   17b14:	ldr	r3, [sl, #28]
   17b18:	ldr	r2, [sl, #24]
   17b1c:	sub	r3, r3, r2
   17b20:	ldr	r2, [sl, #16]
   17b24:	cmp	r3, r2
   17b28:	bhi	17c64 <argp_failure@@Base+0x1138>
   17b2c:	ldr	r3, [fp, #-120]	; 0xffffff88
   17b30:	str	r3, [sl, #4]
   17b34:	ldr	r3, [sl, #28]
   17b38:	ldr	r2, [sl, #24]
   17b3c:	sub	r3, r3, r2
   17b40:	ldr	r2, [sl, #16]
   17b44:	cmp	r3, r2
   17b48:	bhi	17c70 <argp_failure@@Base+0x1144>
   17b4c:	ldr	r3, [fp, #-124]	; 0xffffff84
   17b50:	str	r3, [sl, #12]
   17b54:	add	r9, r9, #28
   17b58:	ldr	r3, [fp, #-116]	; 0xffffff8c
   17b5c:	subs	r3, r3, #1
   17b60:	str	r3, [fp, #-116]	; 0xffffff8c
   17b64:	beq	17c7c <argp_failure@@Base+0x1150>
   17b68:	ldr	r4, [r9]
   17b6c:	ldr	r8, [r9, #8]
   17b70:	ldr	r3, [sl, #28]
   17b74:	ldr	r2, [sl, #24]
   17b78:	sub	r3, r3, r2
   17b7c:	ldr	r2, [sl, #16]
   17b80:	cmp	r3, r2
   17b84:	bhi	17590 <argp_failure@@Base+0xa64>
   17b88:	ldr	r3, [sl, #4]
   17b8c:	str	r3, [fp, #-120]	; 0xffffff88
   17b90:	mov	r3, #0
   17b94:	str	r3, [sl, #4]
   17b98:	ldr	r3, [sl, #12]
   17b9c:	str	r3, [fp, #-124]	; 0xffffff84
   17ba0:	str	r9, [fp, #-76]	; 0xffffffb4
   17ba4:	str	sl, [fp, #-72]	; 0xffffffb8
   17ba8:	sub	r3, fp, #88	; 0x58
   17bac:	str	r3, [fp, #-68]	; 0xffffffbc
   17bb0:	mov	r3, #1
   17bb4:	str	r3, [fp, #-64]	; 0xffffffc0
   17bb8:	ldr	r3, [fp, #-104]	; 0xffffff98
   17bbc:	str	r3, [fp, #-60]	; 0xffffffc4
   17bc0:	ldr	r3, [r4, #12]
   17bc4:	ands	r3, r3, #8
   17bc8:	str	r3, [fp, #-112]	; 0xffffff90
   17bcc:	movne	r3, #0
   17bd0:	strne	r3, [fp, #-112]	; 0xffffff90
   17bd4:	bne	175c8 <argp_failure@@Base+0xa9c>
   17bd8:	ldr	r2, [r9, #4]
   17bdc:	cmp	r2, #0
   17be0:	beq	175c8 <argp_failure@@Base+0xa9c>
   17be4:	add	r3, r4, #24
   17be8:	b	175a8 <argp_failure@@Base+0xa7c>
   17bec:	ldr	r3, [sl, #28]
   17bf0:	add	r3, r3, r6
   17bf4:	ldr	r2, [sl, #32]
   17bf8:	cmp	r2, r3
   17bfc:	bcs	17c14 <argp_failure@@Base+0x10e8>
   17c00:	mov	r1, r6
   17c04:	mov	r0, sl
   17c08:	bl	19464 <argp_error@@Base+0x1450>
   17c0c:	cmp	r0, #0
   17c10:	beq	17ac4 <argp_failure@@Base+0xf98>
   17c14:	mov	r2, r6
   17c18:	mov	r1, r4
   17c1c:	ldr	r0, [sl, #28]
   17c20:	bl	11288 <memcpy@plt>
   17c24:	ldr	r3, [sl, #28]
   17c28:	add	r6, r3, r6
   17c2c:	str	r6, [sl, #28]
   17c30:	b	17ac4 <argp_failure@@Base+0xf98>
   17c34:	mov	r0, r4
   17c38:	bl	140f0 <argp_parse@@Base+0xcd8>
   17c3c:	b	17acc <argp_failure@@Base+0xfa0>
   17c40:	mov	r0, sl
   17c44:	bl	18eec <argp_error@@Base+0xed8>
   17c48:	b	17ae4 <argp_failure@@Base+0xfb8>
   17c4c:	mov	r1, #1
   17c50:	mov	r0, sl
   17c54:	bl	19464 <argp_error@@Base+0x1450>
   17c58:	cmp	r0, #0
   17c5c:	bne	17afc <argp_failure@@Base+0xfd0>
   17c60:	b	17b10 <argp_failure@@Base+0xfe4>
   17c64:	mov	r0, sl
   17c68:	bl	18eec <argp_error@@Base+0xed8>
   17c6c:	b	17b2c <argp_failure@@Base+0x1000>
   17c70:	mov	r0, sl
   17c74:	bl	18eec <argp_error@@Base+0xed8>
   17c78:	b	17b4c <argp_failure@@Base+0x1020>
   17c7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17c80:	cmp	r3, #0
   17c84:	beq	17ce8 <argp_failure@@Base+0x11bc>
   17c88:	movw	r3, #45732	; 0xb2a4
   17c8c:	movt	r3, #2
   17c90:	ldr	r3, [r3, #4]
   17c94:	cmp	r3, #0
   17c98:	beq	17ce8 <argp_failure@@Base+0x11bc>
   17c9c:	ldr	r3, [fp, #-104]	; 0xffffff98
   17ca0:	cmp	r3, #0
   17ca4:	ldrne	r2, [r3]
   17ca8:	ldreq	r2, [fp, #-104]	; 0xffffff98
   17cac:	ldr	r3, [fp, #-104]	; 0xffffff98
   17cb0:	mov	r1, #5
   17cb4:	movt	r1, #512	; 0x200
   17cb8:	movw	r0, #41832	; 0xa368
   17cbc:	movt	r0, #1
   17cc0:	bl	14fd4 <argp_parse@@Base+0x1bbc>
   17cc4:	subs	r4, r0, #0
   17cc8:	beq	17ce8 <argp_failure@@Base+0x11bc>
   17ccc:	ldrb	r3, [r4]
   17cd0:	cmp	r3, #0
   17cd4:	bne	17d7c <argp_failure@@Base+0x1250>
   17cd8:	movw	r3, #41832	; 0xa368
   17cdc:	movt	r3, #1
   17ce0:	cmp	r4, r3
   17ce4:	bne	17e50 <argp_failure@@Base+0x1324>
   17ce8:	mov	r4, #1
   17cec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17cf0:	tst	r3, #32
   17cf4:	bne	17e5c <argp_failure@@Base+0x1330>
   17cf8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17cfc:	tst	r3, #64	; 0x40
   17d00:	beq	17d3c <argp_failure@@Base+0x1210>
   17d04:	movw	r3, #49728	; 0xc240
   17d08:	movt	r3, #2
   17d0c:	ldr	r3, [r3]
   17d10:	cmp	r3, #0
   17d14:	beq	17d3c <argp_failure@@Base+0x1210>
   17d18:	cmp	r4, #0
   17d1c:	bne	17e84 <argp_failure@@Base+0x1358>
   17d20:	movw	r3, #49728	; 0xc240
   17d24:	movt	r3, #2
   17d28:	ldr	r2, [r3]
   17d2c:	movw	r1, #41948	; 0xa3dc
   17d30:	movt	r1, #1
   17d34:	mov	r0, sl
   17d38:	bl	19564 <argp_error@@Base+0x1550>
   17d3c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17d40:	bl	112f4 <funlockfile@plt>
   17d44:	ldr	r3, [fp, #-128]	; 0xffffff80
   17d48:	cmp	r3, #0
   17d4c:	beq	17d58 <argp_failure@@Base+0x122c>
   17d50:	mov	r0, r3
   17d54:	bl	14e4c <argp_parse@@Base+0x1a34>
   17d58:	mov	r0, sl
   17d5c:	bl	19418 <argp_error@@Base+0x1404>
   17d60:	sub	sp, fp, #32
   17d64:	ldrd	r4, [sp]
   17d68:	ldrd	r6, [sp, #8]
   17d6c:	ldrd	r8, [sp, #16]
   17d70:	ldrd	sl, [sp, #24]
   17d74:	add	sp, sp, #32
   17d78:	pop	{pc}		; (ldr pc, [sp], #4)
   17d7c:	ldr	r2, [sl, #28]
   17d80:	ldr	r3, [sl, #32]
   17d84:	cmp	r2, r3
   17d88:	bcs	17dd8 <argp_failure@@Base+0x12ac>
   17d8c:	ldr	r3, [sl, #28]
   17d90:	add	r2, r3, #1
   17d94:	str	r2, [sl, #28]
   17d98:	mov	r2, #10
   17d9c:	strb	r2, [r3]
   17da0:	mov	r0, r4
   17da4:	bl	113b4 <strlen@plt>
   17da8:	subs	r5, r0, #0
   17dac:	bne	17df0 <argp_failure@@Base+0x12c4>
   17db0:	ldr	r2, [sl, #28]
   17db4:	ldr	r3, [sl, #32]
   17db8:	cmp	r2, r3
   17dbc:	bcs	17e38 <argp_failure@@Base+0x130c>
   17dc0:	ldr	r3, [sl, #28]
   17dc4:	add	r2, r3, #1
   17dc8:	str	r2, [sl, #28]
   17dcc:	mov	r2, #10
   17dd0:	strb	r2, [r3]
   17dd4:	b	17cd8 <argp_failure@@Base+0x11ac>
   17dd8:	mov	r1, #1
   17ddc:	mov	r0, sl
   17de0:	bl	19464 <argp_error@@Base+0x1450>
   17de4:	cmp	r0, #0
   17de8:	bne	17d8c <argp_failure@@Base+0x1260>
   17dec:	b	17da0 <argp_failure@@Base+0x1274>
   17df0:	ldr	r3, [sl, #28]
   17df4:	add	r3, r3, r5
   17df8:	ldr	r2, [sl, #32]
   17dfc:	cmp	r2, r3
   17e00:	bcs	17e18 <argp_failure@@Base+0x12ec>
   17e04:	mov	r1, r5
   17e08:	mov	r0, sl
   17e0c:	bl	19464 <argp_error@@Base+0x1450>
   17e10:	cmp	r0, #0
   17e14:	beq	17db0 <argp_failure@@Base+0x1284>
   17e18:	mov	r2, r5
   17e1c:	mov	r1, r4
   17e20:	ldr	r0, [sl, #28]
   17e24:	bl	11288 <memcpy@plt>
   17e28:	ldr	r3, [sl, #28]
   17e2c:	add	r5, r3, r5
   17e30:	str	r5, [sl, #28]
   17e34:	b	17db0 <argp_failure@@Base+0x1284>
   17e38:	mov	r1, #1
   17e3c:	mov	r0, sl
   17e40:	bl	19464 <argp_error@@Base+0x1450>
   17e44:	cmp	r0, #0
   17e48:	bne	17dc0 <argp_failure@@Base+0x1294>
   17e4c:	b	17cd8 <argp_failure@@Base+0x11ac>
   17e50:	mov	r0, r4
   17e54:	bl	140f0 <argp_parse@@Base+0xcd8>
   17e58:	b	17ce8 <argp_failure@@Base+0x11bc>
   17e5c:	str	sl, [sp, #4]
   17e60:	mov	r3, #0
   17e64:	str	r3, [sp]
   17e68:	mov	r3, r4
   17e6c:	mov	r2, #1
   17e70:	ldr	r1, [fp, #-104]	; 0xffffff98
   17e74:	ldr	r0, [fp, #-108]	; 0xffffff94
   17e78:	bl	15b58 <argp_parse@@Base+0x2740>
   17e7c:	orr	r4, r4, r0
   17e80:	b	17cf8 <argp_failure@@Base+0x11cc>
   17e84:	ldr	r2, [sl, #28]
   17e88:	ldr	r3, [sl, #32]
   17e8c:	cmp	r2, r3
   17e90:	bcs	17eac <argp_failure@@Base+0x1380>
   17e94:	ldr	r3, [sl, #28]
   17e98:	add	r2, r3, #1
   17e9c:	str	r2, [sl, #28]
   17ea0:	mov	r2, #10
   17ea4:	strb	r2, [r3]
   17ea8:	b	17d20 <argp_failure@@Base+0x11f4>
   17eac:	mov	r1, #1
   17eb0:	mov	r0, sl
   17eb4:	bl	19464 <argp_error@@Base+0x1450>
   17eb8:	cmp	r0, #0
   17ebc:	bne	17e94 <argp_failure@@Base+0x1368>
   17ec0:	b	17d20 <argp_failure@@Base+0x11f4>
   17ec4:	ldrb	r3, [r6]
   17ec8:	mov	r4, r6
   17ecc:	mov	r7, #0
   17ed0:	b	16f34 <argp_failure@@Base+0x408>
   17ed4:	ldrb	r3, [r8]
   17ed8:	cmp	r3, r7
   17edc:	beq	17610 <argp_failure@@Base+0xae4>
   17ee0:	add	r5, r5, #24
   17ee4:	subs	r6, r6, #1
   17ee8:	beq	17700 <argp_failure@@Base+0xbd4>
   17eec:	ldr	r9, [r5, #12]
   17ef0:	tst	r9, #8
   17ef4:	bne	17ee0 <argp_failure@@Base+0x13b4>
   17ef8:	ldr	r7, [r5, #4]
   17efc:	sub	r3, r7, #1
   17f00:	cmp	r3, #254	; 0xfe
   17f04:	bhi	17ee0 <argp_failure@@Base+0x13b4>
   17f08:	bl	1139c <__ctype_b_loc@plt>
   17f0c:	ldr	r2, [r0]
   17f10:	lsl	r3, r7, #1
   17f14:	ldrh	r3, [r2, r3]
   17f18:	tst	r3, #16384	; 0x4000
   17f1c:	bne	17ed4 <argp_failure@@Base+0x13a8>
   17f20:	b	17ee0 <argp_failure@@Base+0x13b4>
   17f24:	andeq	sl, r1, r4, rrx

00017f28 <argp_help@@Base>:
   17f28:	push	{lr}		; (str lr, [sp, #-4]!)
   17f2c:	sub	sp, sp, #12
   17f30:	str	r3, [sp]
   17f34:	mov	r3, r2
   17f38:	mov	r2, r1
   17f3c:	mov	r1, #0
   17f40:	bl	16d48 <argp_failure@@Base+0x21c>
   17f44:	add	sp, sp, #12
   17f48:	pop	{pc}		; (ldr pc, [sp], #4)

00017f4c <argp_state_help@@Base>:
   17f4c:	strd	r4, [sp, #-12]!
   17f50:	str	lr, [sp, #8]
   17f54:	sub	sp, sp, #12
   17f58:	mov	r5, r2
   17f5c:	subs	r4, r0, #0
   17f60:	beq	17f80 <argp_state_help@@Base+0x34>
   17f64:	ldr	r3, [r4, #16]
   17f68:	tst	r3, #2
   17f6c:	beq	17fc0 <argp_state_help@@Base+0x74>
   17f70:	add	sp, sp, #12
   17f74:	ldrd	r4, [sp]
   17f78:	add	sp, sp, #8
   17f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f80:	cmp	r1, #0
   17f84:	beq	17f70 <argp_state_help@@Base+0x24>
   17f88:	movw	r3, #45792	; 0xb2e0
   17f8c:	movt	r3, #2
   17f90:	ldr	r3, [r3]
   17f94:	str	r3, [sp]
   17f98:	mov	r3, r2
   17f9c:	mov	r2, r1
   17fa0:	mov	r1, #0
   17fa4:	mov	r0, r1
   17fa8:	bl	16d48 <argp_failure@@Base+0x21c>
   17fac:	b	17ffc <argp_state_help@@Base+0xb0>
   17fb0:	movw	r3, #45788	; 0xb2dc
   17fb4:	movt	r3, #2
   17fb8:	ldr	r0, [r3]
   17fbc:	bl	113a8 <exit@plt>
   17fc0:	cmp	r1, #0
   17fc4:	beq	17f70 <argp_state_help@@Base+0x24>
   17fc8:	ldr	r3, [r4, #16]
   17fcc:	tst	r3, #64	; 0x40
   17fd0:	orrne	r5, r5, #128	; 0x80
   17fd4:	ldr	r3, [r4, #40]	; 0x28
   17fd8:	str	r3, [sp]
   17fdc:	mov	r3, r5
   17fe0:	mov	r2, r1
   17fe4:	mov	r1, r4
   17fe8:	ldr	r0, [r4]
   17fec:	bl	16d48 <argp_failure@@Base+0x21c>
   17ff0:	ldr	r3, [r4, #16]
   17ff4:	tst	r3, #32
   17ff8:	bne	17f70 <argp_state_help@@Base+0x24>
   17ffc:	tst	r5, #256	; 0x100
   18000:	bne	17fb0 <argp_state_help@@Base+0x64>
   18004:	tst	r5, #512	; 0x200
   18008:	beq	17f70 <argp_state_help@@Base+0x24>
   1800c:	mov	r0, #0
   18010:	bl	113a8 <exit@plt>

00018014 <argp_error@@Base>:
   18014:	push	{r1, r2, r3}
   18018:	strd	r4, [sp, #-12]!
   1801c:	str	lr, [sp, #8]
   18020:	sub	sp, sp, #8
   18024:	subs	r5, r0, #0
   18028:	beq	18100 <argp_error@@Base+0xec>
   1802c:	ldr	r3, [r5, #16]
   18030:	tst	r3, #2
   18034:	bne	180e8 <argp_error@@Base+0xd4>
   18038:	ldr	r4, [r5, #44]	; 0x2c
   1803c:	cmp	r4, #0
   18040:	beq	180e8 <argp_error@@Base+0xd4>
   18044:	mov	r0, r4
   18048:	bl	114e0 <flockfile@plt>
   1804c:	add	r3, sp, #24
   18050:	str	r3, [sp, #4]
   18054:	ldr	r0, [r5, #40]	; 0x28
   18058:	mov	r1, r4
   1805c:	bl	111ec <fputs_unlocked@plt>
   18060:	ldr	r3, [r4, #20]
   18064:	ldr	r2, [r4, #24]
   18068:	cmp	r3, r2
   1806c:	addcc	r2, r3, #1
   18070:	strcc	r2, [r4, #20]
   18074:	movcc	r2, #58	; 0x3a
   18078:	strbcc	r2, [r3]
   1807c:	bcs	18134 <argp_error@@Base+0x120>
   18080:	ldr	r3, [r4, #20]
   18084:	ldr	r2, [r4, #24]
   18088:	cmp	r3, r2
   1808c:	addcc	r2, r3, #1
   18090:	strcc	r2, [r4, #20]
   18094:	movcc	r2, #32
   18098:	strbcc	r2, [r3]
   1809c:	bcs	18144 <argp_error@@Base+0x130>
   180a0:	ldr	r2, [sp, #4]
   180a4:	ldr	r1, [sp, #20]
   180a8:	mov	r0, r4
   180ac:	bl	11480 <vfprintf@plt>
   180b0:	ldr	r3, [r4, #20]
   180b4:	ldr	r2, [r4, #24]
   180b8:	cmp	r3, r2
   180bc:	addcc	r2, r3, #1
   180c0:	strcc	r2, [r4, #20]
   180c4:	movcc	r2, #10
   180c8:	strbcc	r2, [r3]
   180cc:	bcs	18154 <argp_error@@Base+0x140>
   180d0:	mov	r2, #260	; 0x104
   180d4:	mov	r1, r4
   180d8:	mov	r0, r5
   180dc:	bl	17f4c <argp_state_help@@Base>
   180e0:	mov	r0, r4
   180e4:	bl	112f4 <funlockfile@plt>
   180e8:	add	sp, sp, #8
   180ec:	ldrd	r4, [sp]
   180f0:	ldr	lr, [sp, #8]
   180f4:	add	sp, sp, #12
   180f8:	add	sp, sp, #12
   180fc:	bx	lr
   18100:	movw	r3, #45800	; 0xb2e8
   18104:	movt	r3, #2
   18108:	ldr	r4, [r3]
   1810c:	cmp	r4, #0
   18110:	beq	180e8 <argp_error@@Base+0xd4>
   18114:	mov	r0, r4
   18118:	bl	114e0 <flockfile@plt>
   1811c:	add	r3, sp, #24
   18120:	str	r3, [sp, #4]
   18124:	movw	r3, #45792	; 0xb2e0
   18128:	movt	r3, #2
   1812c:	ldr	r0, [r3]
   18130:	b	18058 <argp_error@@Base+0x44>
   18134:	mov	r1, #58	; 0x3a
   18138:	mov	r0, r4
   1813c:	bl	11450 <__overflow@plt>
   18140:	b	18080 <argp_error@@Base+0x6c>
   18144:	mov	r1, #32
   18148:	mov	r0, r4
   1814c:	bl	11450 <__overflow@plt>
   18150:	b	180a0 <argp_error@@Base+0x8c>
   18154:	mov	r1, #10
   18158:	mov	r0, r4
   1815c:	bl	11450 <__overflow@plt>
   18160:	b	180d0 <argp_error@@Base+0xbc>
   18164:	strd	r4, [sp, #-28]!	; 0xffffffe4
   18168:	strd	r6, [sp, #8]
   1816c:	strd	r8, [sp, #16]
   18170:	str	lr, [sp, #24]
   18174:	ldr	r5, [r1, #28]
   18178:	ldr	r6, [r1, #32]
   1817c:	ldr	r8, [r1]
   18180:	add	r7, r0, r6, lsl #2
   18184:	b	181b4 <argp_error@@Base+0x1a0>
   18188:	add	r3, r0, r5, lsl #2
   1818c:	add	r4, r9, r5
   18190:	add	r4, r0, r4, lsl #2
   18194:	mov	r2, r7
   18198:	ldr	ip, [r3]
   1819c:	ldr	lr, [r2]
   181a0:	str	lr, [r3], #4
   181a4:	str	ip, [r2], #4
   181a8:	cmp	r3, r4
   181ac:	bne	18198 <argp_error@@Base+0x184>
   181b0:	add	r5, r5, r9
   181b4:	cmp	r8, r6
   181b8:	movle	r3, #0
   181bc:	movgt	r3, #1
   181c0:	cmp	r5, r6
   181c4:	movge	r3, #0
   181c8:	cmp	r3, #0
   181cc:	beq	18210 <argp_error@@Base+0x1fc>
   181d0:	sub	r9, r8, r6
   181d4:	sub	r3, r6, r5
   181d8:	cmp	r9, r3
   181dc:	ble	18188 <argp_error@@Base+0x174>
   181e0:	add	r2, r0, r5, lsl #2
   181e4:	sub	r9, r8, r3
   181e8:	add	r3, r0, r9, lsl #2
   181ec:	add	r4, r0, r8, lsl #2
   181f0:	ldr	ip, [r2]
   181f4:	ldr	lr, [r3]
   181f8:	str	lr, [r2], #4
   181fc:	str	ip, [r3], #4
   18200:	cmp	r3, r4
   18204:	bne	181f0 <argp_error@@Base+0x1dc>
   18208:	mov	r8, r9
   1820c:	b	181b4 <argp_error@@Base+0x1a0>
   18210:	ldr	r0, [r1]
   18214:	ldr	r3, [r1, #32]
   18218:	sub	r2, r0, r3
   1821c:	ldr	r3, [r1, #28]
   18220:	add	r3, r3, r2
   18224:	str	r3, [r1, #28]
   18228:	str	r0, [r1, #32]
   1822c:	ldrd	r4, [sp]
   18230:	ldrd	r6, [sp, #8]
   18234:	ldrd	r8, [sp, #16]
   18238:	add	sp, sp, #24
   1823c:	pop	{pc}		; (ldr pc, [sp], #4)
   18240:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18244:	strd	r6, [sp, #8]
   18248:	strd	r8, [sp, #16]
   1824c:	strd	sl, [sp, #24]
   18250:	str	lr, [sp, #32]
   18254:	sub	sp, sp, #52	; 0x34
   18258:	str	r0, [sp, #32]
   1825c:	str	r1, [sp, #20]
   18260:	str	r2, [sp, #28]
   18264:	str	r3, [sp, #16]
   18268:	ldr	fp, [sp, #96]	; 0x60
   1826c:	ldr	r9, [fp, #20]
   18270:	ldrb	r3, [r9]
   18274:	cmp	r3, #0
   18278:	cmpne	r3, #61	; 0x3d
   1827c:	beq	182b4 <argp_error@@Base+0x2a0>
   18280:	mov	r8, r9
   18284:	ldrb	r3, [r8, #1]!
   18288:	cmp	r3, #0
   1828c:	cmpne	r3, #61	; 0x3d
   18290:	bne	18284 <argp_error@@Base+0x270>
   18294:	sub	r7, r8, r9
   18298:	ldr	r5, [sp, #16]
   1829c:	ldr	sl, [r5]
   182a0:	cmp	sl, #0
   182a4:	beq	18778 <argp_error@@Base+0x764>
   182a8:	mov	r4, sl
   182ac:	mov	r6, #0
   182b0:	b	182cc <argp_error@@Base+0x2b8>
   182b4:	mov	r8, r9
   182b8:	b	18294 <argp_error@@Base+0x280>
   182bc:	add	r6, r6, #1
   182c0:	ldr	r4, [r5, #16]!
   182c4:	cmp	r4, #0
   182c8:	beq	1877c <argp_error@@Base+0x768>
   182cc:	str	r5, [sp, #12]
   182d0:	mov	r2, r7
   182d4:	mov	r1, r9
   182d8:	mov	r0, r4
   182dc:	bl	1151c <strncmp@plt>
   182e0:	cmp	r0, #0
   182e4:	bne	182bc <argp_error@@Base+0x2a8>
   182e8:	mov	r0, r4
   182ec:	bl	113b4 <strlen@plt>
   182f0:	cmp	r0, r7
   182f4:	bne	182bc <argp_error@@Base+0x2a8>
   182f8:	cmp	r5, #0
   182fc:	beq	18784 <argp_error@@Base+0x770>
   18300:	ldr	r3, [fp]
   18304:	add	r2, r3, #1
   18308:	str	r2, [fp]
   1830c:	mov	r1, #0
   18310:	str	r1, [fp, #20]
   18314:	ldrb	r1, [r8]
   18318:	cmp	r1, #0
   1831c:	beq	186cc <argp_error@@Base+0x6b8>
   18320:	ldr	r3, [sp, #12]
   18324:	ldr	r3, [r3, #4]
   18328:	cmp	r3, #0
   1832c:	beq	18678 <argp_error@@Base+0x664>
   18330:	add	r8, r8, #1
   18334:	str	r8, [fp, #12]
   18338:	ldr	r3, [sp, #88]	; 0x58
   1833c:	cmp	r3, #0
   18340:	strne	r6, [r3]
   18344:	ldr	r2, [sp, #12]
   18348:	ldr	r3, [r2, #8]
   1834c:	cmp	r3, #0
   18350:	beq	18764 <argp_error@@Base+0x750>
   18354:	ldr	r2, [r2, #12]
   18358:	str	r2, [r3]
   1835c:	mov	r0, #0
   18360:	add	sp, sp, #52	; 0x34
   18364:	ldrd	r4, [sp]
   18368:	ldrd	r6, [sp, #8]
   1836c:	ldrd	r8, [sp, #16]
   18370:	ldrd	sl, [sp, #24]
   18374:	add	sp, sp, #32
   18378:	pop	{pc}		; (ldr pc, [sp], #4)
   1837c:	ldr	r2, [sl, #8]
   18380:	ldr	r3, [r9, #8]
   18384:	cmp	r2, r3
   18388:	bne	18448 <argp_error@@Base+0x434>
   1838c:	ldr	r2, [sl, #12]
   18390:	ldr	r3, [r9, #12]
   18394:	cmp	r2, r3
   18398:	bne	18448 <argp_error@@Base+0x434>
   1839c:	b	18400 <argp_error@@Base+0x3ec>
   183a0:	mov	r0, r6
   183a4:	bl	14c90 <argp_parse@@Base+0x1878>
   183a8:	subs	r3, r0, #0
   183ac:	str	r3, [sp, #24]
   183b0:	beq	18478 <argp_error@@Base+0x464>
   183b4:	mov	r2, r6
   183b8:	mov	r1, #0
   183bc:	ldr	r7, [sp, #24]
   183c0:	mov	r0, r7
   183c4:	bl	113fc <memset@plt>
   183c8:	ldr	r2, [sp, #36]	; 0x24
   183cc:	mov	r1, #1
   183d0:	strb	r1, [r7, r2]
   183d4:	ldr	r3, [sp, #44]	; 0x2c
   183d8:	str	r3, [sp, #40]	; 0x28
   183dc:	b	18468 <argp_error@@Base+0x454>
   183e0:	ldr	r3, [sp, #24]
   183e4:	cmp	r3, #0
   183e8:	moveq	r5, #1
   183ec:	beq	18400 <argp_error@@Base+0x3ec>
   183f0:	mov	r5, #1
   183f4:	b	18468 <argp_error@@Base+0x454>
   183f8:	str	r4, [sp, #36]	; 0x24
   183fc:	mov	sl, r9
   18400:	add	r4, r4, #1
   18404:	ldr	r0, [r9, #16]!
   18408:	cmp	r0, #0
   1840c:	beq	18480 <argp_error@@Base+0x46c>
   18410:	ldr	r2, [sp, #12]
   18414:	ldr	r1, [fp, #20]
   18418:	bl	1151c <strncmp@plt>
   1841c:	cmp	r0, #0
   18420:	bne	18400 <argp_error@@Base+0x3ec>
   18424:	cmp	sl, #0
   18428:	beq	183f8 <argp_error@@Base+0x3e4>
   1842c:	ldr	r3, [sp, #92]	; 0x5c
   18430:	cmp	r3, #0
   18434:	bne	18448 <argp_error@@Base+0x434>
   18438:	ldr	r2, [sl, #4]
   1843c:	ldr	r3, [r9, #4]
   18440:	cmp	r2, r3
   18444:	beq	1837c <argp_error@@Base+0x368>
   18448:	cmp	r5, #0
   1844c:	bne	18400 <argp_error@@Base+0x3ec>
   18450:	ldr	r3, [sp, #100]	; 0x64
   18454:	cmp	r3, #0
   18458:	beq	183e0 <argp_error@@Base+0x3cc>
   1845c:	ldr	r3, [sp, #24]
   18460:	cmp	r3, #0
   18464:	beq	183a0 <argp_error@@Base+0x38c>
   18468:	ldr	r3, [sp, #24]
   1846c:	mov	r2, #1
   18470:	strb	r2, [r3, r4]
   18474:	b	18400 <argp_error@@Base+0x3ec>
   18478:	mov	r5, #1
   1847c:	b	18400 <argp_error@@Base+0x3ec>
   18480:	str	sl, [sp, #12]
   18484:	ldr	r3, [sp, #24]
   18488:	orrs	r3, r3, r5
   1848c:	bne	18504 <argp_error@@Base+0x4f0>
   18490:	ldr	r3, [sp, #12]
   18494:	cmp	r3, #0
   18498:	bne	18670 <argp_error@@Base+0x65c>
   1849c:	ldr	r3, [sp, #92]	; 0x5c
   184a0:	cmp	r3, #0
   184a4:	beq	184d8 <argp_error@@Base+0x4c4>
   184a8:	ldr	r3, [fp]
   184ac:	ldr	r2, [sp, #20]
   184b0:	ldr	r3, [r2, r3, lsl #2]
   184b4:	ldrb	r3, [r3, #1]
   184b8:	cmp	r3, #45	; 0x2d
   184bc:	beq	184d8 <argp_error@@Base+0x4c4>
   184c0:	ldr	r3, [fp, #20]
   184c4:	ldrb	r1, [r3]
   184c8:	ldr	r0, [sp, #28]
   184cc:	bl	113c0 <strchr@plt>
   184d0:	cmp	r0, #0
   184d4:	bne	18770 <argp_error@@Base+0x75c>
   184d8:	ldr	r3, [sp, #100]	; 0x64
   184dc:	cmp	r3, #0
   184e0:	bne	18640 <argp_error@@Base+0x62c>
   184e4:	mov	r2, #0
   184e8:	str	r2, [fp, #20]
   184ec:	ldr	r3, [fp]
   184f0:	add	r3, r3, #1
   184f4:	str	r3, [fp]
   184f8:	str	r2, [fp, #8]
   184fc:	mov	r0, #63	; 0x3f
   18500:	b	18360 <argp_error@@Base+0x34c>
   18504:	ldr	r3, [sp, #100]	; 0x64
   18508:	cmp	r3, #0
   1850c:	beq	18544 <argp_error@@Base+0x530>
   18510:	cmp	r5, #0
   18514:	beq	18580 <argp_error@@Base+0x56c>
   18518:	movw	r0, #45800	; 0xb2e8
   1851c:	movt	r0, #2
   18520:	ldr	r3, [fp, #20]
   18524:	str	r3, [sp]
   18528:	ldr	r3, [sp, #104]	; 0x68
   1852c:	ldr	r2, [sp, #20]
   18530:	ldr	r2, [r2]
   18534:	movw	r1, #41968	; 0xa3f0
   18538:	movt	r1, #1
   1853c:	ldr	r0, [r0]
   18540:	bl	113cc <fprintf@plt>
   18544:	ldr	r3, [sp, #40]	; 0x28
   18548:	cmp	r3, #0
   1854c:	bne	18634 <argp_error@@Base+0x620>
   18550:	ldr	r4, [fp, #20]
   18554:	mov	r0, r4
   18558:	bl	113b4 <strlen@plt>
   1855c:	add	r0, r4, r0
   18560:	str	r0, [fp, #20]
   18564:	ldr	r3, [fp]
   18568:	add	r3, r3, #1
   1856c:	str	r3, [fp]
   18570:	mov	r3, #0
   18574:	str	r3, [fp, #8]
   18578:	mov	r0, #63	; 0x3f
   1857c:	b	18360 <argp_error@@Base+0x34c>
   18580:	movw	r4, #45800	; 0xb2e8
   18584:	movt	r4, #2
   18588:	ldr	r0, [r4]
   1858c:	bl	114e0 <flockfile@plt>
   18590:	ldr	r3, [fp, #20]
   18594:	str	r3, [sp]
   18598:	ldr	r3, [sp, #104]	; 0x68
   1859c:	ldr	r2, [sp, #20]
   185a0:	ldr	r2, [r2]
   185a4:	movw	r1, #42000	; 0xa410
   185a8:	movt	r1, #1
   185ac:	ldr	r0, [r4]
   185b0:	bl	113cc <fprintf@plt>
   185b4:	cmp	r6, #0
   185b8:	ble	18614 <argp_error@@Base+0x600>
   185bc:	ldr	r2, [sp, #24]
   185c0:	sub	r4, r2, #1
   185c4:	sub	r3, r6, #1
   185c8:	add	r8, r2, r3
   185cc:	movw	r7, #42048	; 0xa440
   185d0:	movt	r7, #1
   185d4:	movw	r6, #45800	; 0xb2e8
   185d8:	movt	r6, #2
   185dc:	ldr	r9, [sp, #16]
   185e0:	b	185f0 <argp_error@@Base+0x5dc>
   185e4:	add	r5, r5, #1
   185e8:	cmp	r8, r4
   185ec:	beq	18614 <argp_error@@Base+0x600>
   185f0:	ldrb	r3, [r4, #1]!
   185f4:	cmp	r3, #0
   185f8:	beq	185e4 <argp_error@@Base+0x5d0>
   185fc:	ldr	r3, [r9, r5, lsl #4]
   18600:	ldr	r2, [sp, #104]	; 0x68
   18604:	mov	r1, r7
   18608:	ldr	r0, [r6]
   1860c:	bl	113cc <fprintf@plt>
   18610:	b	185e4 <argp_error@@Base+0x5d0>
   18614:	movw	r4, #45800	; 0xb2e8
   18618:	movt	r4, #2
   1861c:	ldr	r1, [r4]
   18620:	mov	r0, #10
   18624:	bl	11498 <fputc@plt>
   18628:	ldr	r0, [r4]
   1862c:	bl	112f4 <funlockfile@plt>
   18630:	b	18544 <argp_error@@Base+0x530>
   18634:	ldr	r0, [sp, #24]
   18638:	bl	140f0 <argp_parse@@Base+0xcd8>
   1863c:	b	18550 <argp_error@@Base+0x53c>
   18640:	movw	r0, #45800	; 0xb2e8
   18644:	movt	r0, #2
   18648:	ldr	r3, [fp, #20]
   1864c:	str	r3, [sp]
   18650:	ldr	r3, [sp, #104]	; 0x68
   18654:	ldr	r2, [sp, #20]
   18658:	ldr	r2, [r2]
   1865c:	movw	r1, #42056	; 0xa448
   18660:	movt	r1, #1
   18664:	ldr	r0, [r0]
   18668:	bl	113cc <fprintf@plt>
   1866c:	b	184e4 <argp_error@@Base+0x4d0>
   18670:	ldr	r6, [sp, #36]	; 0x24
   18674:	b	18300 <argp_error@@Base+0x2ec>
   18678:	ldr	r3, [sp, #100]	; 0x64
   1867c:	cmp	r3, #0
   18680:	bne	18698 <argp_error@@Base+0x684>
   18684:	ldr	r3, [sp, #12]
   18688:	ldr	r3, [r3, #12]
   1868c:	str	r3, [fp, #8]
   18690:	mov	r0, #63	; 0x3f
   18694:	b	18360 <argp_error@@Base+0x34c>
   18698:	movw	r0, #45800	; 0xb2e8
   1869c:	movt	r0, #2
   186a0:	ldr	r3, [sp, #12]
   186a4:	ldr	r3, [r3]
   186a8:	str	r3, [sp]
   186ac:	ldr	r3, [sp, #104]	; 0x68
   186b0:	ldr	r2, [sp, #20]
   186b4:	ldr	r2, [r2]
   186b8:	movw	r1, #42088	; 0xa468
   186bc:	movt	r1, #1
   186c0:	ldr	r0, [r0]
   186c4:	bl	113cc <fprintf@plt>
   186c8:	b	18684 <argp_error@@Base+0x670>
   186cc:	ldr	r1, [sp, #12]
   186d0:	ldr	r1, [r1, #4]
   186d4:	cmp	r1, #1
   186d8:	bne	18338 <argp_error@@Base+0x324>
   186dc:	ldr	r1, [sp, #32]
   186e0:	cmp	r2, r1
   186e4:	bge	18700 <argp_error@@Base+0x6ec>
   186e8:	add	r3, r3, #2
   186ec:	str	r3, [fp]
   186f0:	ldr	r3, [sp, #20]
   186f4:	ldr	r3, [r3, r2, lsl #2]
   186f8:	str	r3, [fp, #12]
   186fc:	b	18338 <argp_error@@Base+0x324>
   18700:	ldr	r3, [sp, #100]	; 0x64
   18704:	cmp	r3, #0
   18708:	bne	18730 <argp_error@@Base+0x71c>
   1870c:	ldr	r3, [sp, #12]
   18710:	ldr	r3, [r3, #12]
   18714:	str	r3, [fp, #8]
   18718:	ldr	r3, [sp, #28]
   1871c:	ldrb	r3, [r3]
   18720:	cmp	r3, #58	; 0x3a
   18724:	moveq	r0, #58	; 0x3a
   18728:	movne	r0, #63	; 0x3f
   1872c:	b	18360 <argp_error@@Base+0x34c>
   18730:	movw	r0, #45800	; 0xb2e8
   18734:	movt	r0, #2
   18738:	ldr	r3, [sp, #12]
   1873c:	ldr	r3, [r3]
   18740:	str	r3, [sp]
   18744:	ldr	r3, [sp, #104]	; 0x68
   18748:	ldr	r2, [sp, #20]
   1874c:	ldr	r2, [r2]
   18750:	movw	r1, #42136	; 0xa498
   18754:	movt	r1, #1
   18758:	ldr	r0, [r0]
   1875c:	bl	113cc <fprintf@plt>
   18760:	b	1870c <argp_error@@Base+0x6f8>
   18764:	ldr	r3, [sp, #12]
   18768:	ldr	r0, [r3, #12]
   1876c:	b	18360 <argp_error@@Base+0x34c>
   18770:	mvn	r0, #0
   18774:	b	18360 <argp_error@@Base+0x34c>
   18778:	mov	r6, #0
   1877c:	cmp	sl, #0
   18780:	beq	1849c <argp_error@@Base+0x488>
   18784:	ldr	r9, [sp, #16]
   18788:	mvn	r3, #0
   1878c:	str	r3, [sp, #36]	; 0x24
   18790:	mov	r5, #0
   18794:	str	r5, [sp, #40]	; 0x28
   18798:	str	r5, [sp, #24]
   1879c:	mov	r4, r5
   187a0:	mov	r3, #1
   187a4:	str	r3, [sp, #44]	; 0x2c
   187a8:	mov	r0, sl
   187ac:	mov	sl, r5
   187b0:	str	r7, [sp, #12]
   187b4:	b	18410 <argp_error@@Base+0x3fc>
   187b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   187bc:	strd	r6, [sp, #8]
   187c0:	strd	r8, [sp, #16]
   187c4:	strd	sl, [sp, #24]
   187c8:	str	lr, [sp, #32]
   187cc:	sub	sp, sp, #36	; 0x24
   187d0:	str	r3, [sp, #24]
   187d4:	ldr	r4, [sp, #80]	; 0x50
   187d8:	ldr	r8, [r4, #4]
   187dc:	subs	r5, r0, #0
   187e0:	ble	18d1c <argp_error@@Base+0xd08>
   187e4:	mov	r9, r1
   187e8:	mov	r6, r2
   187ec:	mov	r3, #0
   187f0:	str	r3, [r4, #12]
   187f4:	ldr	r3, [r4]
   187f8:	cmp	r3, #0
   187fc:	beq	18820 <argp_error@@Base+0x80c>
   18800:	ldr	r3, [r4, #16]
   18804:	cmp	r3, #0
   18808:	beq	18828 <argp_error@@Base+0x814>
   1880c:	ldrb	r3, [r2]
   18810:	sub	r3, r3, #43	; 0x2b
   18814:	tst	r3, #253	; 0xfd
   18818:	addeq	r6, r2, #1
   1881c:	b	18884 <argp_error@@Base+0x870>
   18820:	mov	r3, #1
   18824:	str	r3, [r4]
   18828:	ldr	r3, [r4]
   1882c:	str	r3, [r4, #32]
   18830:	str	r3, [r4, #28]
   18834:	mov	r3, #0
   18838:	str	r3, [r4, #20]
   1883c:	ldrb	r3, [r6]
   18840:	cmp	r3, #45	; 0x2d
   18844:	moveq	r3, #2
   18848:	streq	r3, [r4, #24]
   1884c:	addeq	r6, r6, #1
   18850:	beq	1887c <argp_error@@Base+0x868>
   18854:	cmp	r3, #43	; 0x2b
   18858:	moveq	r3, #0
   1885c:	streq	r3, [r4, #24]
   18860:	addeq	r6, r6, #1
   18864:	beq	1887c <argp_error@@Base+0x868>
   18868:	ldr	r3, [sp, #84]	; 0x54
   1886c:	cmp	r3, #0
   18870:	beq	18944 <argp_error@@Base+0x930>
   18874:	mov	r3, #0
   18878:	str	r3, [r4, #24]
   1887c:	mov	r3, #1
   18880:	str	r3, [r4, #16]
   18884:	ldrb	r3, [r6]
   18888:	cmp	r3, #58	; 0x3a
   1888c:	moveq	r8, #0
   18890:	ldr	r3, [r4, #20]
   18894:	cmp	r3, #0
   18898:	beq	188a8 <argp_error@@Base+0x894>
   1889c:	ldrb	r3, [r3]
   188a0:	cmp	r3, #0
   188a4:	bne	18a48 <argp_error@@Base+0xa34>
   188a8:	ldr	r3, [r4]
   188ac:	ldr	r2, [r4, #32]
   188b0:	cmp	r2, r3
   188b4:	strgt	r3, [r4, #32]
   188b8:	ldr	r2, [r4, #28]
   188bc:	cmp	r3, r2
   188c0:	strlt	r3, [r4, #28]
   188c4:	ldr	r2, [r4, #24]
   188c8:	cmp	r2, #1
   188cc:	beq	18964 <argp_error@@Base+0x950>
   188d0:	ldr	r7, [r4]
   188d4:	cmp	r7, r5
   188d8:	beq	18924 <argp_error@@Base+0x910>
   188dc:	ldr	sl, [r9, r7, lsl #2]
   188e0:	movw	r1, #39824	; 0x9b90
   188e4:	movt	r1, #1
   188e8:	mov	r0, sl
   188ec:	bl	11210 <strcmp@plt>
   188f0:	cmp	r0, #0
   188f4:	bne	18d2c <argp_error@@Base+0xd18>
   188f8:	add	r7, r7, #1
   188fc:	str	r7, [r4]
   18900:	ldr	r2, [r4, #28]
   18904:	ldr	r3, [r4, #32]
   18908:	cmp	r2, r3
   1890c:	cmpne	r7, r3
   18910:	bne	189e0 <argp_error@@Base+0x9cc>
   18914:	cmp	r2, r3
   18918:	streq	r7, [r4, #28]
   1891c:	str	r5, [r4, #32]
   18920:	str	r5, [r4]
   18924:	ldr	r3, [r4, #28]
   18928:	ldr	r2, [r4, #32]
   1892c:	cmp	r3, r2
   18930:	mvneq	r0, #0
   18934:	beq	18d58 <argp_error@@Base+0xd44>
   18938:	str	r3, [r4]
   1893c:	mvn	r0, #0
   18940:	b	18d58 <argp_error@@Base+0xd44>
   18944:	movw	r0, #42176	; 0xa4c0
   18948:	movt	r0, #1
   1894c:	bl	1133c <getenv@plt>
   18950:	cmp	r0, #0
   18954:	bne	18874 <argp_error@@Base+0x860>
   18958:	mov	r3, #1
   1895c:	str	r3, [r4, #24]
   18960:	b	1887c <argp_error@@Base+0x868>
   18964:	ldr	r2, [r4, #32]
   18968:	ldr	r1, [r4, #28]
   1896c:	cmp	r1, r2
   18970:	cmpne	r3, r2
   18974:	bne	18994 <argp_error@@Base+0x980>
   18978:	cmp	r3, r2
   1897c:	strne	r3, [r4, #28]
   18980:	ldr	r3, [r4]
   18984:	cmp	r5, r3
   18988:	ble	189d8 <argp_error@@Base+0x9c4>
   1898c:	add	r1, r9, r3, lsl #2
   18990:	b	189b4 <argp_error@@Base+0x9a0>
   18994:	mov	r1, r4
   18998:	mov	r0, r9
   1899c:	bl	18164 <argp_error@@Base+0x150>
   189a0:	b	18980 <argp_error@@Base+0x96c>
   189a4:	add	r3, r3, #1
   189a8:	str	r3, [r4]
   189ac:	cmp	r3, r5
   189b0:	beq	189d4 <argp_error@@Base+0x9c0>
   189b4:	ldr	r2, [r1], #4
   189b8:	ldrb	r0, [r2]
   189bc:	cmp	r0, #45	; 0x2d
   189c0:	bne	189a4 <argp_error@@Base+0x990>
   189c4:	ldrb	r2, [r2, #1]
   189c8:	cmp	r2, #0
   189cc:	beq	189a4 <argp_error@@Base+0x990>
   189d0:	b	189d8 <argp_error@@Base+0x9c4>
   189d4:	mov	r3, r5
   189d8:	str	r3, [r4, #32]
   189dc:	b	188d0 <argp_error@@Base+0x8bc>
   189e0:	mov	r1, r4
   189e4:	mov	r0, r9
   189e8:	bl	18164 <argp_error@@Base+0x150>
   189ec:	b	1891c <argp_error@@Base+0x908>
   189f0:	ldrb	r1, [sl, #1]
   189f4:	cmp	r1, #0
   189f8:	beq	18d38 <argp_error@@Base+0xd24>
   189fc:	ldr	r3, [sp, #24]
   18a00:	cmp	r3, #0
   18a04:	beq	18a38 <argp_error@@Base+0xa24>
   18a08:	cmp	r1, #45	; 0x2d
   18a0c:	beq	18ab4 <argp_error@@Base+0xaa0>
   18a10:	ldr	r3, [sp, #76]	; 0x4c
   18a14:	cmp	r3, #0
   18a18:	beq	18a38 <argp_error@@Base+0xa24>
   18a1c:	ldrb	r3, [sl, #2]
   18a20:	cmp	r3, #0
   18a24:	bne	18af8 <argp_error@@Base+0xae4>
   18a28:	mov	r0, r6
   18a2c:	bl	113c0 <strchr@plt>
   18a30:	cmp	r0, #0
   18a34:	beq	18af8 <argp_error@@Base+0xae4>
   18a38:	ldr	r3, [r4]
   18a3c:	ldr	r3, [r9, r3, lsl #2]
   18a40:	add	r3, r3, #1
   18a44:	str	r3, [r4, #20]
   18a48:	ldr	sl, [r4, #20]
   18a4c:	add	fp, sl, #1
   18a50:	str	fp, [r4, #20]
   18a54:	ldrb	r7, [sl]
   18a58:	str	r7, [sp, #28]
   18a5c:	mov	r1, r7
   18a60:	mov	r0, r6
   18a64:	bl	113c0 <strchr@plt>
   18a68:	ldrb	r3, [sl, #1]
   18a6c:	cmp	r3, #0
   18a70:	bne	18a80 <argp_error@@Base+0xa6c>
   18a74:	ldr	r3, [r4]
   18a78:	add	r3, r3, #1
   18a7c:	str	r3, [r4]
   18a80:	sub	r3, r7, #58	; 0x3a
   18a84:	uxtb	r3, r3
   18a88:	cmp	r0, #0
   18a8c:	cmpne	r3, #1
   18a90:	bls	18b44 <argp_error@@Base+0xb30>
   18a94:	ldrb	r3, [r0]
   18a98:	cmp	r3, #87	; 0x57
   18a9c:	beq	18b80 <argp_error@@Base+0xb6c>
   18aa0:	ldrb	r3, [r0, #1]
   18aa4:	cmp	r3, #58	; 0x3a
   18aa8:	beq	18c54 <argp_error@@Base+0xc40>
   18aac:	mov	r0, r7
   18ab0:	b	18d58 <argp_error@@Base+0xd44>
   18ab4:	add	sl, sl, #2
   18ab8:	str	sl, [r4, #20]
   18abc:	movw	r3, #39824	; 0x9b90
   18ac0:	movt	r3, #1
   18ac4:	str	r3, [sp, #16]
   18ac8:	str	r8, [sp, #12]
   18acc:	str	r4, [sp, #8]
   18ad0:	ldr	r3, [sp, #76]	; 0x4c
   18ad4:	str	r3, [sp, #4]
   18ad8:	ldr	r3, [sp, #72]	; 0x48
   18adc:	str	r3, [sp]
   18ae0:	ldr	r3, [sp, #24]
   18ae4:	mov	r2, r6
   18ae8:	mov	r1, r9
   18aec:	mov	r0, r5
   18af0:	bl	18240 <argp_error@@Base+0x22c>
   18af4:	b	18d58 <argp_error@@Base+0xd44>
   18af8:	add	sl, sl, #1
   18afc:	str	sl, [r4, #20]
   18b00:	movw	r3, #42192	; 0xa4d0
   18b04:	movt	r3, #1
   18b08:	str	r3, [sp, #16]
   18b0c:	str	r8, [sp, #12]
   18b10:	str	r4, [sp, #8]
   18b14:	ldr	r3, [sp, #76]	; 0x4c
   18b18:	str	r3, [sp, #4]
   18b1c:	ldr	r3, [sp, #72]	; 0x48
   18b20:	str	r3, [sp]
   18b24:	ldr	r3, [sp, #24]
   18b28:	mov	r2, r6
   18b2c:	mov	r1, r9
   18b30:	mov	r0, r5
   18b34:	bl	18240 <argp_error@@Base+0x22c>
   18b38:	cmn	r0, #1
   18b3c:	bne	18d58 <argp_error@@Base+0xd44>
   18b40:	b	18a38 <argp_error@@Base+0xa24>
   18b44:	cmp	r8, #0
   18b48:	bne	18b5c <argp_error@@Base+0xb48>
   18b4c:	ldr	r3, [sp, #28]
   18b50:	str	r3, [r4, #8]
   18b54:	mov	r0, #63	; 0x3f
   18b58:	b	18d58 <argp_error@@Base+0xd44>
   18b5c:	movw	r0, #45800	; 0xb2e8
   18b60:	movt	r0, #2
   18b64:	ldr	r3, [sp, #28]
   18b68:	ldr	r2, [r9]
   18b6c:	movw	r1, #42196	; 0xa4d4
   18b70:	movt	r1, #1
   18b74:	ldr	r0, [r0]
   18b78:	bl	113cc <fprintf@plt>
   18b7c:	b	18b4c <argp_error@@Base+0xb38>
   18b80:	ldrb	r1, [r0, #1]
   18b84:	ldr	r2, [sp, #24]
   18b88:	cmp	r1, #59	; 0x3b
   18b8c:	movne	r3, #0
   18b90:	moveq	r3, #1
   18b94:	cmp	r2, #0
   18b98:	moveq	r3, #0
   18b9c:	cmp	r3, #0
   18ba0:	beq	18aa0 <argp_error@@Base+0xa8c>
   18ba4:	ldrb	r3, [sl, #1]
   18ba8:	cmp	r3, #0
   18bac:	strne	fp, [r4, #12]
   18bb0:	bne	18bc8 <argp_error@@Base+0xbb4>
   18bb4:	ldr	r3, [r4]
   18bb8:	cmp	r3, r5
   18bbc:	beq	18c10 <argp_error@@Base+0xbfc>
   18bc0:	ldr	r3, [r9, r3, lsl #2]
   18bc4:	str	r3, [r4, #12]
   18bc8:	ldr	r3, [r4, #12]
   18bcc:	str	r3, [r4, #20]
   18bd0:	mov	r2, #0
   18bd4:	str	r2, [r4, #12]
   18bd8:	movw	r3, #42268	; 0xa51c
   18bdc:	movt	r3, #1
   18be0:	str	r3, [sp, #16]
   18be4:	str	r8, [sp, #12]
   18be8:	str	r4, [sp, #8]
   18bec:	str	r2, [sp, #4]
   18bf0:	ldr	r3, [sp, #72]	; 0x48
   18bf4:	str	r3, [sp]
   18bf8:	ldr	r3, [sp, #24]
   18bfc:	mov	r2, r6
   18c00:	mov	r1, r9
   18c04:	mov	r0, r5
   18c08:	bl	18240 <argp_error@@Base+0x22c>
   18c0c:	b	18d58 <argp_error@@Base+0xd44>
   18c10:	cmp	r8, #0
   18c14:	bne	18c30 <argp_error@@Base+0xc1c>
   18c18:	ldr	r3, [sp, #28]
   18c1c:	str	r3, [r4, #8]
   18c20:	ldrb	r0, [r6]
   18c24:	cmp	r0, #58	; 0x3a
   18c28:	movne	r0, #63	; 0x3f
   18c2c:	b	18d58 <argp_error@@Base+0xd44>
   18c30:	movw	r0, #45800	; 0xb2e8
   18c34:	movt	r0, #2
   18c38:	ldr	r3, [sp, #28]
   18c3c:	ldr	r2, [r9]
   18c40:	movw	r1, #42224	; 0xa4f0
   18c44:	movt	r1, #1
   18c48:	ldr	r0, [r0]
   18c4c:	bl	113cc <fprintf@plt>
   18c50:	b	18c18 <argp_error@@Base+0xc04>
   18c54:	ldrb	r3, [r0, #2]
   18c58:	cmp	r3, #58	; 0x3a
   18c5c:	beq	18c88 <argp_error@@Base+0xc74>
   18c60:	ldrb	r3, [sl, #1]
   18c64:	cmp	r3, #0
   18c68:	beq	18cb8 <argp_error@@Base+0xca4>
   18c6c:	str	fp, [r4, #12]
   18c70:	ldr	r3, [r4]
   18c74:	add	r3, r3, #1
   18c78:	str	r3, [r4]
   18c7c:	mov	r3, #0
   18c80:	str	r3, [r4, #20]
   18c84:	b	18aac <argp_error@@Base+0xa98>
   18c88:	ldrb	r3, [sl, #1]
   18c8c:	cmp	r3, #0
   18c90:	moveq	r3, #0
   18c94:	streq	r3, [r4, #12]
   18c98:	beq	18cac <argp_error@@Base+0xc98>
   18c9c:	str	fp, [r4, #12]
   18ca0:	ldr	r3, [r4]
   18ca4:	add	r3, r3, #1
   18ca8:	str	r3, [r4]
   18cac:	mov	r3, #0
   18cb0:	str	r3, [r4, #20]
   18cb4:	b	18aac <argp_error@@Base+0xa98>
   18cb8:	ldr	r3, [r4]
   18cbc:	cmp	r3, r5
   18cc0:	beq	18cd8 <argp_error@@Base+0xcc4>
   18cc4:	add	r2, r3, #1
   18cc8:	str	r2, [r4]
   18ccc:	ldr	r3, [r9, r3, lsl #2]
   18cd0:	str	r3, [r4, #12]
   18cd4:	b	18c7c <argp_error@@Base+0xc68>
   18cd8:	cmp	r8, #0
   18cdc:	bne	18cf8 <argp_error@@Base+0xce4>
   18ce0:	ldr	r3, [sp, #28]
   18ce4:	str	r3, [r4, #8]
   18ce8:	ldrb	r7, [r6]
   18cec:	cmp	r7, #58	; 0x3a
   18cf0:	movne	r7, #63	; 0x3f
   18cf4:	b	18c7c <argp_error@@Base+0xc68>
   18cf8:	movw	r0, #45800	; 0xb2e8
   18cfc:	movt	r0, #2
   18d00:	ldr	r3, [sp, #28]
   18d04:	ldr	r2, [r9]
   18d08:	movw	r1, #42224	; 0xa4f0
   18d0c:	movt	r1, #1
   18d10:	ldr	r0, [r0]
   18d14:	bl	113cc <fprintf@plt>
   18d18:	b	18ce0 <argp_error@@Base+0xccc>
   18d1c:	mvn	r0, #0
   18d20:	b	18d58 <argp_error@@Base+0xd44>
   18d24:	mvn	r0, #0
   18d28:	b	18d58 <argp_error@@Base+0xd44>
   18d2c:	ldrb	r3, [sl]
   18d30:	cmp	r3, #45	; 0x2d
   18d34:	beq	189f0 <argp_error@@Base+0x9dc>
   18d38:	ldr	r3, [r4, #24]
   18d3c:	cmp	r3, #0
   18d40:	beq	18d24 <argp_error@@Base+0xd10>
   18d44:	add	r3, r7, #1
   18d48:	str	r3, [r4]
   18d4c:	ldr	r3, [r9, r7, lsl #2]
   18d50:	str	r3, [r4, #12]
   18d54:	mov	r0, #1
   18d58:	add	sp, sp, #36	; 0x24
   18d5c:	ldrd	r4, [sp]
   18d60:	ldrd	r6, [sp, #8]
   18d64:	ldrd	r8, [sp, #16]
   18d68:	ldrd	sl, [sp, #24]
   18d6c:	add	sp, sp, #32
   18d70:	pop	{pc}		; (ldr pc, [sp], #4)
   18d74:	strd	r4, [sp, #-12]!
   18d78:	str	lr, [sp, #8]
   18d7c:	sub	sp, sp, #20
   18d80:	movw	r4, #48252	; 0xbc7c
   18d84:	movt	r4, #2
   18d88:	movw	r5, #45776	; 0xb2d0
   18d8c:	movt	r5, #2
   18d90:	ldr	ip, [r5]
   18d94:	str	ip, [r4]
   18d98:	ldr	ip, [r5, #4]
   18d9c:	str	ip, [r4, #4]
   18da0:	ldr	ip, [sp, #40]	; 0x28
   18da4:	str	ip, [sp, #12]
   18da8:	str	r4, [sp, #8]
   18dac:	ldr	ip, [sp, #36]	; 0x24
   18db0:	str	ip, [sp, #4]
   18db4:	ldr	ip, [sp, #32]
   18db8:	str	ip, [sp]
   18dbc:	bl	187b8 <argp_error@@Base+0x7a4>
   18dc0:	ldr	r3, [r4]
   18dc4:	str	r3, [r5]
   18dc8:	movw	r3, #49736	; 0xc248
   18dcc:	movt	r3, #2
   18dd0:	ldr	r2, [r4, #12]
   18dd4:	str	r2, [r3]
   18dd8:	ldr	r3, [r4, #8]
   18ddc:	str	r3, [r5, #8]
   18de0:	add	sp, sp, #20
   18de4:	ldrd	r4, [sp]
   18de8:	add	sp, sp, #8
   18dec:	pop	{pc}		; (ldr pc, [sp], #4)
   18df0:	push	{lr}		; (str lr, [sp, #-4]!)
   18df4:	sub	sp, sp, #20
   18df8:	mov	r3, #1
   18dfc:	str	r3, [sp, #8]
   18e00:	mov	r3, #0
   18e04:	str	r3, [sp, #4]
   18e08:	str	r3, [sp]
   18e0c:	bl	18d74 <argp_error@@Base+0xd60>
   18e10:	add	sp, sp, #20
   18e14:	pop	{pc}		; (ldr pc, [sp], #4)
   18e18:	str	r4, [sp, #-8]!
   18e1c:	str	lr, [sp, #4]
   18e20:	umull	r2, r3, r1, r2
   18e24:	cmp	r3, #0
   18e28:	bne	18e40 <argp_error@@Base+0xe2c>
   18e2c:	mov	r1, r2
   18e30:	bl	14ccc <argp_parse@@Base+0x18b4>
   18e34:	ldr	r4, [sp]
   18e38:	add	sp, sp, #4
   18e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   18e40:	bl	113d8 <__errno_location@plt>
   18e44:	mov	r3, #12
   18e48:	str	r3, [r0]
   18e4c:	mov	r0, #0
   18e50:	b	18e34 <argp_error@@Base+0xe20>
   18e54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18e58:	strd	r6, [sp, #8]
   18e5c:	str	r8, [sp, #16]
   18e60:	str	lr, [sp, #20]
   18e64:	mov	r8, r0
   18e68:	mov	r7, r1
   18e6c:	mov	r6, r2
   18e70:	mov	r5, r3
   18e74:	mov	r0, #36	; 0x24
   18e78:	bl	14c90 <argp_parse@@Base+0x1878>
   18e7c:	subs	r4, r0, #0
   18e80:	beq	18ec4 <argp_error@@Base+0xeb0>
   18e84:	str	r8, [r4]
   18e88:	str	r7, [r4, #4]
   18e8c:	str	r6, [r4, #8]
   18e90:	str	r5, [r4, #12]
   18e94:	mov	r3, #0
   18e98:	str	r3, [r4, #20]
   18e9c:	str	r3, [r4, #16]
   18ea0:	mov	r0, #200	; 0xc8
   18ea4:	bl	14c90 <argp_parse@@Base+0x1878>
   18ea8:	mov	r5, r0
   18eac:	str	r0, [r4, #24]
   18eb0:	cmp	r0, #0
   18eb4:	strne	r0, [r4, #28]
   18eb8:	addne	r5, r0, #200	; 0xc8
   18ebc:	strne	r5, [r4, #32]
   18ec0:	beq	18edc <argp_error@@Base+0xec8>
   18ec4:	mov	r0, r4
   18ec8:	ldrd	r4, [sp]
   18ecc:	ldrd	r6, [sp, #8]
   18ed0:	ldr	r8, [sp, #16]
   18ed4:	add	sp, sp, #20
   18ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   18edc:	mov	r0, r4
   18ee0:	bl	140f0 <argp_parse@@Base+0xcd8>
   18ee4:	mov	r4, r5
   18ee8:	b	18ec4 <argp_error@@Base+0xeb0>
   18eec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18ef0:	strd	r6, [sp, #8]
   18ef4:	strd	r8, [sp, #16]
   18ef8:	strd	sl, [sp, #24]
   18efc:	str	lr, [sp, #32]
   18f00:	sub	sp, sp, #20
   18f04:	mov	r4, r0
   18f08:	ldr	r5, [r0, #24]
   18f0c:	ldr	r3, [r0, #16]
   18f10:	add	r5, r5, r3
   18f14:	mov	sl, #32
   18f18:	str	sl, [sp, #8]
   18f1c:	b	19004 <argp_error@@Base+0xff0>
   18f20:	mov	r7, #0
   18f24:	ldr	r0, [r4]
   18f28:	ldr	r3, [r0, #20]
   18f2c:	ldr	r2, [r0, #24]
   18f30:	cmp	r3, r2
   18f34:	addcc	r2, r3, #1
   18f38:	strcc	r2, [r0, #20]
   18f3c:	strbcc	sl, [r3]
   18f40:	bcs	19070 <argp_error@@Base+0x105c>
   18f44:	add	r7, r7, #1
   18f48:	cmp	r6, r7
   18f4c:	bne	18f24 <argp_error@@Base+0xf10>
   18f50:	str	r6, [r4, #20]
   18f54:	ldr	r8, [r4, #28]
   18f58:	sub	fp, r8, r5
   18f5c:	mov	r2, fp
   18f60:	mov	r1, #10
   18f64:	mov	r0, r5
   18f68:	bl	11420 <memchr@plt>
   18f6c:	mov	r6, r0
   18f70:	ldr	r3, [r4, #20]
   18f74:	cmp	r3, #0
   18f78:	movlt	r3, #0
   18f7c:	strlt	r3, [r4, #20]
   18f80:	cmp	r6, #0
   18f84:	beq	1907c <argp_error@@Base+0x1068>
   18f88:	ldr	r0, [r4, #20]
   18f8c:	ldr	r9, [r4, #8]
   18f90:	sub	r3, r6, r5
   18f94:	add	r3, r3, r0
   18f98:	cmp	r3, r9
   18f9c:	movlt	r3, #0
   18fa0:	strlt	r3, [r4, #20]
   18fa4:	addlt	r5, r6, #1
   18fa8:	blt	19004 <argp_error@@Base+0xff0>
   18fac:	sub	r7, r9, #1
   18fb0:	ldr	r3, [r4, #12]
   18fb4:	str	r3, [sp, #4]
   18fb8:	cmp	r3, #0
   18fbc:	bge	190a8 <argp_error@@Base+0x1094>
   18fc0:	cmp	r8, r6
   18fc4:	bls	19138 <argp_error@@Base+0x1124>
   18fc8:	sub	r0, r7, r0
   18fcc:	sub	r2, r8, r6
   18fd0:	mov	r1, r6
   18fd4:	add	r0, r5, r0
   18fd8:	bl	1124c <memmove@plt>
   18fdc:	ldr	r3, [r4, #20]
   18fe0:	sub	r7, r7, r3
   18fe4:	add	r7, r5, r7
   18fe8:	sub	r6, r7, r6
   18fec:	ldr	r3, [r4, #28]
   18ff0:	sub	r6, r3, r6
   18ff4:	str	r6, [r4, #28]
   18ff8:	mov	r3, #0
   18ffc:	str	r3, [r4, #20]
   19000:	add	r5, r5, r9
   19004:	ldr	r8, [r4, #28]
   19008:	cmp	r8, r5
   1900c:	bls	19150 <argp_error@@Base+0x113c>
   19010:	ldr	r3, [r4, #20]
   19014:	cmp	r3, #0
   19018:	bne	18f54 <argp_error@@Base+0xf40>
   1901c:	ldr	r6, [r4, #4]
   19020:	cmp	r6, #0
   19024:	beq	193fc <argp_error@@Base+0x13e8>
   19028:	add	r3, r8, r6
   1902c:	ldr	r2, [r4, #32]
   19030:	cmp	r2, r3
   19034:	bls	18f20 <argp_error@@Base+0xf0c>
   19038:	add	r7, r5, r6
   1903c:	sub	r2, r8, r5
   19040:	mov	r1, r5
   19044:	mov	r0, r7
   19048:	bl	1124c <memmove@plt>
   1904c:	ldr	r3, [r4, #28]
   19050:	add	r3, r3, r6
   19054:	str	r3, [r4, #28]
   19058:	mov	r2, r6
   1905c:	mov	r1, sl
   19060:	mov	r0, r5
   19064:	bl	113fc <memset@plt>
   19068:	mov	r5, r7
   1906c:	b	18f50 <argp_error@@Base+0xf3c>
   19070:	ldr	r1, [sp, #8]
   19074:	bl	11450 <__overflow@plt>
   19078:	b	18f44 <argp_error@@Base+0xf30>
   1907c:	ldr	r3, [r4, #20]
   19080:	add	r3, fp, r3
   19084:	ldr	r7, [r4, #8]
   19088:	cmp	r3, r7
   1908c:	bcc	19130 <argp_error@@Base+0x111c>
   19090:	sub	r7, r7, #1
   19094:	ldr	r3, [r4, #12]
   19098:	str	r3, [sp, #4]
   1909c:	cmp	r3, #0
   190a0:	blt	19138 <argp_error@@Base+0x1124>
   190a4:	mov	r6, r8
   190a8:	ldr	r3, [r4, #20]
   190ac:	rsb	r3, r3, #1
   190b0:	add	r7, r3, r7
   190b4:	adds	r7, r5, r7
   190b8:	bcs	193f4 <argp_error@@Base+0x13e0>
   190bc:	bl	1139c <__ctype_b_loc@plt>
   190c0:	ldr	r0, [r0]
   190c4:	mov	r3, r7
   190c8:	mov	r1, r3
   190cc:	sub	r3, r3, #1
   190d0:	ldrb	r2, [r1]
   190d4:	lsl	r2, r2, #1
   190d8:	ldrh	r2, [r0, r2]
   190dc:	tst	r2, #1
   190e0:	bne	1917c <argp_error@@Base+0x1168>
   190e4:	mov	r1, r3
   190e8:	cmp	r3, r5
   190ec:	bcs	190c8 <argp_error@@Base+0x10b4>
   190f0:	add	r9, r1, #1
   190f4:	cmp	r9, r5
   190f8:	bhi	191b8 <argp_error@@Base+0x11a4>
   190fc:	cmp	r6, r7
   19100:	bhi	19254 <argp_error@@Base+0x1240>
   19104:	cmp	r7, r6
   19108:	beq	19294 <argp_error@@Base+0x1280>
   1910c:	bl	1139c <__ctype_b_loc@plt>
   19110:	ldr	r2, [r0]
   19114:	mov	r9, r7
   19118:	ldrb	r3, [r9, #1]!
   1911c:	lsl	r3, r3, #1
   19120:	ldrh	r3, [r2, r3]
   19124:	tst	r3, #1
   19128:	bne	19118 <argp_error@@Base+0x1104>
   1912c:	b	191bc <argp_error@@Base+0x11a8>
   19130:	str	r3, [r4, #20]
   19134:	b	19150 <argp_error@@Base+0x113c>
   19138:	ldr	r3, [r4, #20]
   1913c:	add	r3, fp, r3
   19140:	str	r3, [r4, #20]
   19144:	sub	r3, r7, r3
   19148:	add	r8, r8, r3
   1914c:	str	r8, [r4, #28]
   19150:	ldr	r3, [r4, #28]
   19154:	ldr	r2, [r4, #24]
   19158:	sub	r3, r3, r2
   1915c:	str	r3, [r4, #16]
   19160:	add	sp, sp, #20
   19164:	ldrd	r4, [sp]
   19168:	ldrd	r6, [sp, #8]
   1916c:	ldrd	r8, [sp, #16]
   19170:	ldrd	sl, [sp, #24]
   19174:	add	sp, sp, #32
   19178:	pop	{pc}		; (ldr pc, [sp], #4)
   1917c:	add	r9, r1, #1
   19180:	cmp	r9, r5
   19184:	bls	190fc <argp_error@@Base+0x10e8>
   19188:	cmp	r5, r1
   1918c:	bhi	191b8 <argp_error@@Base+0x11a4>
   19190:	sub	ip, r5, #1
   19194:	mov	r1, r3
   19198:	cmp	r3, ip
   1919c:	beq	191b8 <argp_error@@Base+0x11a4>
   191a0:	sub	r3, r3, #1
   191a4:	ldrb	r2, [r1]
   191a8:	lsl	r2, r2, #1
   191ac:	ldrh	r2, [r0, r2]
   191b0:	tst	r2, #1
   191b4:	bne	19194 <argp_error@@Base+0x1180>
   191b8:	add	r7, r1, #1
   191bc:	add	r3, fp, #1
   191c0:	add	r3, r5, r3
   191c4:	cmp	r9, r3
   191c8:	beq	192a4 <argp_error@@Base+0x1290>
   191cc:	add	r3, r7, #1
   191d0:	sub	r3, r9, r3
   191d4:	ldr	r2, [sp, #4]
   191d8:	cmp	r3, r2
   191dc:	bge	192b8 <argp_error@@Base+0x12a4>
   191e0:	cmp	r9, r8
   191e4:	bcs	192b8 <argp_error@@Base+0x12a4>
   191e8:	ldr	r3, [r4, #32]
   191ec:	sub	r3, r3, r8
   191f0:	ldr	r2, [sp, #4]
   191f4:	add	r2, r2, #1
   191f8:	cmp	r3, r2
   191fc:	bgt	19360 <argp_error@@Base+0x134c>
   19200:	ldr	r0, [r4, #24]
   19204:	cmp	r0, r7
   19208:	bcs	1921c <argp_error@@Base+0x1208>
   1920c:	ldr	r3, [r4]
   19210:	sub	r2, r7, r0
   19214:	mov	r1, #1
   19218:	bl	112a0 <fwrite_unlocked@plt>
   1921c:	ldr	r0, [r4]
   19220:	ldr	r3, [r0, #20]
   19224:	ldr	r2, [r0, #24]
   19228:	cmp	r3, r2
   1922c:	addcc	r2, r3, #1
   19230:	strcc	r2, [r0, #20]
   19234:	movcc	r2, #10
   19238:	strbcc	r2, [r3]
   1923c:	bcs	193a0 <argp_error@@Base+0x138c>
   19240:	ldr	r8, [r4, #24]
   19244:	sub	r5, r5, r8
   19248:	add	fp, fp, r5
   1924c:	mov	r5, r8
   19250:	b	192c8 <argp_error@@Base+0x12b4>
   19254:	add	r9, r7, #1
   19258:	str	r6, [sp, #12]
   1925c:	mov	r7, r9
   19260:	cmp	r9, r6
   19264:	beq	1928c <argp_error@@Base+0x1278>
   19268:	bl	1139c <__ctype_b_loc@plt>
   1926c:	add	r9, r9, #1
   19270:	ldrb	r3, [r7]
   19274:	ldr	r2, [r0]
   19278:	lsl	r3, r3, #1
   1927c:	ldrh	r3, [r2, r3]
   19280:	tst	r3, #1
   19284:	beq	1925c <argp_error@@Base+0x1248>
   19288:	b	1910c <argp_error@@Base+0x10f8>
   1928c:	ldr	r6, [sp, #12]
   19290:	b	19104 <argp_error@@Base+0x10f0>
   19294:	mov	r3, #0
   19298:	str	r3, [r4, #20]
   1929c:	add	r5, r6, #1
   192a0:	b	19004 <argp_error@@Base+0xff0>
   192a4:	ldr	r3, [r4, #32]
   192a8:	sub	r3, r3, r7
   192ac:	ldr	r2, [sp, #4]
   192b0:	cmp	r3, r2
   192b4:	ble	191e0 <argp_error@@Base+0x11cc>
   192b8:	mov	r3, #10
   192bc:	strb	r3, [r7], #1
   192c0:	mov	r8, r5
   192c4:	mov	r5, r7
   192c8:	ldr	r3, [r4, #12]
   192cc:	sub	r2, r9, r5
   192d0:	cmp	r2, r3
   192d4:	bge	193ac <argp_error@@Base+0x1398>
   192d8:	add	r2, fp, #1
   192dc:	add	r2, r8, r2
   192e0:	cmp	r9, r2
   192e4:	bne	192f8 <argp_error@@Base+0x12e4>
   192e8:	ldr	r2, [r4, #32]
   192ec:	sub	r2, r2, r9
   192f0:	cmp	r3, r2
   192f4:	ble	193ac <argp_error@@Base+0x1398>
   192f8:	cmp	r3, #0
   192fc:	movgt	r6, #0
   19300:	ble	19334 <argp_error@@Base+0x1320>
   19304:	ldr	r0, [r4]
   19308:	ldr	r3, [r0, #20]
   1930c:	ldr	r2, [r0, #24]
   19310:	cmp	r3, r2
   19314:	addcc	r2, r3, #1
   19318:	strcc	r2, [r0, #20]
   1931c:	strbcc	sl, [r3]
   19320:	bcs	193d0 <argp_error@@Base+0x13bc>
   19324:	add	r6, r6, #1
   19328:	ldr	r3, [r4, #12]
   1932c:	cmp	r3, r6
   19330:	bgt	19304 <argp_error@@Base+0x12f0>
   19334:	cmp	r5, r9
   19338:	bcc	193dc <argp_error@@Base+0x13c8>
   1933c:	sub	r9, r9, r8
   19340:	sub	fp, fp, r9
   19344:	add	fp, r5, fp
   19348:	str	fp, [r4, #28]
   1934c:	ldr	r3, [r4, #12]
   19350:	cmp	r3, #0
   19354:	mvneq	r3, #0
   19358:	str	r3, [r4, #20]
   1935c:	b	19004 <argp_error@@Base+0xff0>
   19360:	sub	r8, r8, r9
   19364:	mov	r0, r2
   19368:	mov	r2, r8
   1936c:	mov	r1, r9
   19370:	add	r0, r7, r0
   19374:	bl	1124c <memmove@plt>
   19378:	ldr	r9, [r4, #12]
   1937c:	add	r9, r9, #1
   19380:	add	r9, r7, r9
   19384:	add	r8, r9, r8
   19388:	sub	fp, r8, r5
   1938c:	mov	r3, #10
   19390:	strb	r3, [r7], #1
   19394:	mov	r8, r5
   19398:	mov	r5, r7
   1939c:	b	192c8 <argp_error@@Base+0x12b4>
   193a0:	mov	r1, #10
   193a4:	bl	11450 <__overflow@plt>
   193a8:	b	19240 <argp_error@@Base+0x122c>
   193ac:	cmp	r3, #0
   193b0:	movgt	r3, #0
   193b4:	ble	19334 <argp_error@@Base+0x1320>
   193b8:	strb	sl, [r5], #1
   193bc:	add	r3, r3, #1
   193c0:	ldr	r2, [r4, #12]
   193c4:	cmp	r2, r3
   193c8:	bgt	193b8 <argp_error@@Base+0x13a4>
   193cc:	b	19334 <argp_error@@Base+0x1320>
   193d0:	ldr	r1, [sp, #8]
   193d4:	bl	11450 <__overflow@plt>
   193d8:	b	19324 <argp_error@@Base+0x1310>
   193dc:	add	r2, r8, fp
   193e0:	sub	r2, r2, r9
   193e4:	mov	r1, r9
   193e8:	mov	r0, r5
   193ec:	bl	1124c <memmove@plt>
   193f0:	b	1933c <argp_error@@Base+0x1328>
   193f4:	mov	r1, r7
   193f8:	b	190f0 <argp_error@@Base+0x10dc>
   193fc:	sub	fp, r8, r5
   19400:	mov	r2, fp
   19404:	mov	r1, #10
   19408:	mov	r0, r5
   1940c:	bl	11420 <memchr@plt>
   19410:	mov	r6, r0
   19414:	b	18f80 <argp_error@@Base+0xf6c>
   19418:	str	r4, [sp, #-8]!
   1941c:	str	lr, [sp, #4]
   19420:	mov	r4, r0
   19424:	bl	18eec <argp_error@@Base+0xed8>
   19428:	ldr	r2, [r4, #28]
   1942c:	ldr	r0, [r4, #24]
   19430:	cmp	r2, r0
   19434:	bls	19448 <argp_error@@Base+0x1434>
   19438:	ldr	r3, [r4]
   1943c:	sub	r2, r2, r0
   19440:	mov	r1, #1
   19444:	bl	112a0 <fwrite_unlocked@plt>
   19448:	ldr	r0, [r4, #24]
   1944c:	bl	140f0 <argp_parse@@Base+0xcd8>
   19450:	mov	r0, r4
   19454:	bl	140f0 <argp_parse@@Base+0xcd8>
   19458:	ldr	r4, [sp]
   1945c:	add	sp, sp, #4
   19460:	pop	{pc}		; (ldr pc, [sp], #4)
   19464:	ldr	r3, [r0, #32]
   19468:	ldr	r2, [r0, #28]
   1946c:	sub	r3, r3, r2
   19470:	cmp	r3, r1
   19474:	bcc	19480 <argp_error@@Base+0x146c>
   19478:	mov	r0, #1
   1947c:	bx	lr
   19480:	strd	r4, [sp, #-16]!
   19484:	str	r6, [sp, #8]
   19488:	str	lr, [sp, #12]
   1948c:	mov	r5, r1
   19490:	mov	r4, r0
   19494:	bl	18eec <argp_error@@Base+0xed8>
   19498:	ldr	r0, [r4, #24]
   1949c:	ldr	r2, [r4, #28]
   194a0:	ldr	r3, [r4]
   194a4:	sub	r2, r2, r0
   194a8:	mov	r1, #1
   194ac:	bl	112a0 <fwrite_unlocked@plt>
   194b0:	ldr	r2, [r4, #28]
   194b4:	ldr	r3, [r4, #24]
   194b8:	sub	r1, r2, r3
   194bc:	cmp	r1, r0
   194c0:	bne	19500 <argp_error@@Base+0x14ec>
   194c4:	str	r3, [r4, #28]
   194c8:	mov	r2, #0
   194cc:	str	r2, [r4, #16]
   194d0:	ldr	r1, [r4, #32]
   194d4:	sub	r1, r1, r3
   194d8:	cmp	r1, r5
   194dc:	movcs	r0, #1
   194e0:	bcs	19528 <argp_error@@Base+0x1514>
   194e4:	adds	r5, r1, r5
   194e8:	bcc	19538 <argp_error@@Base+0x1524>
   194ec:	bl	113d8 <__errno_location@plt>
   194f0:	mov	r3, #12
   194f4:	str	r3, [r0]
   194f8:	mov	r0, #0
   194fc:	b	19528 <argp_error@@Base+0x1514>
   19500:	sub	r2, r2, r0
   19504:	str	r2, [r4, #28]
   19508:	ldr	r1, [r4, #16]
   1950c:	sub	r1, r1, r0
   19510:	str	r1, [r4, #16]
   19514:	sub	r2, r2, r3
   19518:	add	r1, r3, r0
   1951c:	mov	r0, r3
   19520:	bl	1124c <memmove@plt>
   19524:	mov	r0, #0
   19528:	ldrd	r4, [sp]
   1952c:	ldr	r6, [sp, #8]
   19530:	add	sp, sp, #12
   19534:	pop	{pc}		; (ldr pc, [sp], #4)
   19538:	mov	r1, r5
   1953c:	mov	r0, r3
   19540:	bl	14ccc <argp_parse@@Base+0x18b4>
   19544:	cmp	r0, #0
   19548:	beq	194ec <argp_error@@Base+0x14d8>
   1954c:	str	r0, [r4, #24]
   19550:	add	r5, r0, r5
   19554:	str	r5, [r4, #32]
   19558:	str	r0, [r4, #28]
   1955c:	mov	r0, #1
   19560:	b	19528 <argp_error@@Base+0x1514>
   19564:	push	{r1, r2, r3}
   19568:	strd	r4, [sp, #-16]!
   1956c:	str	r6, [sp, #8]
   19570:	str	lr, [sp, #12]
   19574:	sub	sp, sp, #12
   19578:	mov	r5, r0
   1957c:	mov	r1, #150	; 0x96
   19580:	add	r6, sp, #32
   19584:	mov	r0, r5
   19588:	bl	19464 <argp_error@@Base+0x1450>
   1958c:	cmp	r0, #0
   19590:	beq	195c4 <argp_error@@Base+0x15b0>
   19594:	str	r6, [sp, #4]
   19598:	ldr	r0, [r5, #28]
   1959c:	ldr	r4, [r5, #32]
   195a0:	sub	r4, r4, r0
   195a4:	mov	r3, r6
   195a8:	ldr	r2, [sp, #28]
   195ac:	mov	r1, r4
   195b0:	bl	114ec <vsnprintf@plt>
   195b4:	cmp	r0, r4
   195b8:	bcc	195e4 <argp_error@@Base+0x15d0>
   195bc:	add	r1, r0, #1
   195c0:	b	19584 <argp_error@@Base+0x1570>
   195c4:	mvn	r0, #0
   195c8:	add	sp, sp, #12
   195cc:	ldrd	r4, [sp]
   195d0:	ldr	r6, [sp, #8]
   195d4:	ldr	lr, [sp, #12]
   195d8:	add	sp, sp, #16
   195dc:	add	sp, sp, #12
   195e0:	bx	lr
   195e4:	ldr	r2, [r5, #28]
   195e8:	add	r3, r2, r0
   195ec:	str	r3, [r5, #28]
   195f0:	b	195c8 <argp_error@@Base+0x15b4>
   195f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195f8:	mov	r7, r0
   195fc:	ldr	r6, [pc, #72]	; 1964c <argp_error@@Base+0x1638>
   19600:	ldr	r5, [pc, #72]	; 19650 <argp_error@@Base+0x163c>
   19604:	add	r6, pc, r6
   19608:	add	r5, pc, r5
   1960c:	sub	r6, r6, r5
   19610:	mov	r8, r1
   19614:	mov	r9, r2
   19618:	bl	111b4 <fdopen@plt-0x20>
   1961c:	asrs	r6, r6, #2
   19620:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19624:	mov	r4, #0
   19628:	add	r4, r4, #1
   1962c:	ldr	r3, [r5], #4
   19630:	mov	r2, r9
   19634:	mov	r1, r8
   19638:	mov	r0, r7
   1963c:	blx	r3
   19640:	cmp	r6, r4
   19644:	bne	19628 <argp_error@@Base+0x1614>
   19648:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1964c:	andeq	r1, r1, r0, lsl #18
   19650:	strdeq	r1, [r1], -r8
   19654:	bx	lr

Disassembly of section .fini:

00019658 <.fini>:
   19658:	push	{r3, lr}
   1965c:	pop	{r3, pc}
