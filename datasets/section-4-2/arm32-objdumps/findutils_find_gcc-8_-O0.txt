
../repos/findutils/find/find:     file format elf32-littlearm


Disassembly of section .init:

00011f40 <.init>:
   11f40:	push	{r3, lr}
   11f44:	bl	12734 <__assert_fail@plt+0x48>
   11f48:	pop	{r3, pc}

Disassembly of section .plt:

00011f4c <pthread_mutex_unlock@plt-0x14>:
   11f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   11f50:	ldr	lr, [pc, #4]	; 11f5c <pthread_mutex_unlock@plt-0x4>
   11f54:	add	lr, pc, lr
   11f58:	ldr	pc, [lr, #8]!
   11f5c:	andeq	sl, r6, r4, lsr #1

00011f60 <pthread_mutex_unlock@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #434176	; 0x6a000
   11f68:	ldr	pc, [ip, #164]!	; 0xa4

00011f6c <fdopen@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #434176	; 0x6a000
   11f74:	ldr	pc, [ip, #156]!	; 0x9c

00011f78 <fstatfs64@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #434176	; 0x6a000
   11f80:	ldr	pc, [ip, #148]!	; 0x94

00011f84 <calloc@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #434176	; 0x6a000
   11f8c:	ldr	pc, [ip, #140]!	; 0x8c

00011f90 <endgrent@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #434176	; 0x6a000
   11f98:	ldr	pc, [ip, #132]!	; 0x84

00011f9c <wctype@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #434176	; 0x6a000
   11fa4:	ldr	pc, [ip, #124]!	; 0x7c

00011fa8 <gnu_dev_major@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #434176	; 0x6a000
   11fb0:	ldr	pc, [ip, #116]!	; 0x74

00011fb4 <raise@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #434176	; 0x6a000
   11fbc:	ldr	pc, [ip, #108]!	; 0x6c

00011fc0 <wcrtomb@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #434176	; 0x6a000
   11fc8:	ldr	pc, [ip, #100]!	; 0x64

00011fcc <gmtime_r@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #434176	; 0x6a000
   11fd4:	ldr	pc, [ip, #92]!	; 0x5c

00011fd8 <getpwnam@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #434176	; 0x6a000
   11fe0:	ldr	pc, [ip, #84]!	; 0x54

00011fe4 <is_selinux_enabled@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #434176	; 0x6a000
   11fec:	ldr	pc, [ip, #76]!	; 0x4c

00011ff0 <iswctype@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #434176	; 0x6a000
   11ff8:	ldr	pc, [ip, #68]!	; 0x44

00011ffc <strcmp@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #434176	; 0x6a000
   12004:	ldr	pc, [ip, #60]!	; 0x3c

00012008 <strtol@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #434176	; 0x6a000
   12010:	ldr	pc, [ip, #52]!	; 0x34

00012014 <getpwuid@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #434176	; 0x6a000
   1201c:	ldr	pc, [ip, #44]!	; 0x2c

00012020 <gnu_dev_makedev@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #434176	; 0x6a000
   12028:	ldr	pc, [ip, #36]!	; 0x24

0001202c <printf@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #434176	; 0x6a000
   12034:	ldr	pc, [ip, #28]!

00012038 <gnu_dev_minor@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #434176	; 0x6a000
   12040:	ldr	pc, [ip, #20]!

00012044 <pthread_mutex_destroy@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #434176	; 0x6a000
   1204c:	ldr	pc, [ip, #12]!

00012050 <mktime@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #434176	; 0x6a000
   12058:	ldr	pc, [ip, #4]!

0001205c <fflush@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #430080	; 0x69000
   12064:	ldr	pc, [ip, #4092]!	; 0xffc

00012068 <unlinkat@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #430080	; 0x69000
   12070:	ldr	pc, [ip, #4084]!	; 0xff4

00012074 <wcwidth@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #430080	; 0x69000
   1207c:	ldr	pc, [ip, #4076]!	; 0xfec

00012080 <lsetfilecon@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #430080	; 0x69000
   12088:	ldr	pc, [ip, #4068]!	; 0xfe4

0001208c <memmove@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #430080	; 0x69000
   12094:	ldr	pc, [ip, #4060]!	; 0xfdc

00012098 <free@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #430080	; 0x69000
   120a0:	ldr	pc, [ip, #4052]!	; 0xfd4

000120a4 <pthread_mutex_lock@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #430080	; 0x69000
   120ac:	ldr	pc, [ip, #4044]!	; 0xfcc

000120b0 <faccessat@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #430080	; 0x69000
   120b8:	ldr	pc, [ip, #4036]!	; 0xfc4

000120bc <ferror@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #430080	; 0x69000
   120c4:	ldr	pc, [ip, #4028]!	; 0xfbc

000120c8 <thrd_exit@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #430080	; 0x69000
   120d0:	ldr	pc, [ip, #4020]!	; 0xfb4

000120d4 <strndup@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #430080	; 0x69000
   120dc:	ldr	pc, [ip, #4012]!	; 0xfac

000120e0 <clock_gettime@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #430080	; 0x69000
   120e8:	ldr	pc, [ip, #4004]!	; 0xfa4

000120ec <_exit@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #430080	; 0x69000
   120f4:	ldr	pc, [ip, #3996]!	; 0xf9c

000120f8 <memcpy@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #430080	; 0x69000
   12100:	ldr	pc, [ip, #3988]!	; 0xf94

00012104 <execvp@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #430080	; 0x69000
   1210c:	ldr	pc, [ip, #3980]!	; 0xf8c

00012110 <tolower@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #430080	; 0x69000
   12118:	ldr	pc, [ip, #3972]!	; 0xf84

0001211c <pthread_mutex_init@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #430080	; 0x69000
   12124:	ldr	pc, [ip, #3964]!	; 0xf7c

00012128 <towlower@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #430080	; 0x69000
   12130:	ldr	pc, [ip, #3956]!	; 0xf74

00012134 <mbsinit@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #430080	; 0x69000
   1213c:	ldr	pc, [ip, #3948]!	; 0xf6c

00012140 <signal@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #430080	; 0x69000
   12148:	ldr	pc, [ip, #3940]!	; 0xf64

0001214c <time@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #430080	; 0x69000
   12154:	ldr	pc, [ip, #3932]!	; 0xf5c

00012158 <memcmp@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #430080	; 0x69000
   12160:	ldr	pc, [ip, #3924]!	; 0xf54

00012164 <uname@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #430080	; 0x69000
   1216c:	ldr	pc, [ip, #3916]!	; 0xf4c

00012170 <ctime@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #430080	; 0x69000
   12178:	ldr	pc, [ip, #3908]!	; 0xf44

0001217c <strdup@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #430080	; 0x69000
   12184:	ldr	pc, [ip, #3900]!	; 0xf3c

00012188 <sysconf@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #430080	; 0x69000
   12190:	ldr	pc, [ip, #3892]!	; 0xf34

00012194 <getrlimit64@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #430080	; 0x69000
   1219c:	ldr	pc, [ip, #3884]!	; 0xf2c

000121a0 <realloc@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #430080	; 0x69000
   121a8:	ldr	pc, [ip, #3876]!	; 0xf24

000121ac <fgetfilecon@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #430080	; 0x69000
   121b4:	ldr	pc, [ip, #3868]!	; 0xf1c

000121b8 <localtime_r@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #430080	; 0x69000
   121c0:	ldr	pc, [ip, #3860]!	; 0xf14

000121c4 <textdomain@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #430080	; 0x69000
   121cc:	ldr	pc, [ip, #3852]!	; 0xf0c

000121d0 <iswcntrl@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #430080	; 0x69000
   121d8:	ldr	pc, [ip, #3844]!	; 0xf04

000121dc <chdir@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #430080	; 0x69000
   121e4:	ldr	pc, [ip, #3836]!	; 0xefc

000121e8 <__fxstatat64@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #430080	; 0x69000
   121f0:	ldr	pc, [ip, #3828]!	; 0xef4

000121f4 <iswprint@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #430080	; 0x69000
   121fc:	ldr	pc, [ip, #3820]!	; 0xeec

00012200 <tzset@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #430080	; 0x69000
   12208:	ldr	pc, [ip, #3812]!	; 0xee4

0001220c <poll@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #430080	; 0x69000
   12214:	ldr	pc, [ip, #3804]!	; 0xedc

00012218 <__fxstat64@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #430080	; 0x69000
   12220:	ldr	pc, [ip, #3796]!	; 0xed4

00012224 <fwrite@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #430080	; 0x69000
   1222c:	ldr	pc, [ip, #3788]!	; 0xecc

00012230 <strcat@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #430080	; 0x69000
   12238:	ldr	pc, [ip, #3780]!	; 0xec4

0001223c <lseek64@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #430080	; 0x69000
   12244:	ldr	pc, [ip, #3772]!	; 0xebc

00012248 <waitpid@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #430080	; 0x69000
   12250:	ldr	pc, [ip, #3764]!	; 0xeb4

00012254 <__ctype_get_mb_cur_max@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #430080	; 0x69000
   1225c:	ldr	pc, [ip, #3756]!	; 0xeac

00012260 <hasmntopt@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #430080	; 0x69000
   12268:	ldr	pc, [ip, #3748]!	; 0xea4

0001226c <strcpy@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #430080	; 0x69000
   12274:	ldr	pc, [ip, #3740]!	; 0xe9c

00012278 <gettimeofday@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #430080	; 0x69000
   12280:	ldr	pc, [ip, #3732]!	; 0xe94

00012284 <__fpending@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #430080	; 0x69000
   1228c:	ldr	pc, [ip, #3724]!	; 0xe8c

00012290 <ferror_unlocked@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #430080	; 0x69000
   12298:	ldr	pc, [ip, #3716]!	; 0xe84

0001229c <mbrtowc@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #430080	; 0x69000
   122a4:	ldr	pc, [ip, #3708]!	; 0xe7c

000122a8 <strtok_r@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #430080	; 0x69000
   122b0:	ldr	pc, [ip, #3700]!	; 0xe74

000122b4 <error@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #430080	; 0x69000
   122bc:	ldr	pc, [ip, #3692]!	; 0xe6c

000122c0 <getmntent@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #430080	; 0x69000
   122c8:	ldr	pc, [ip, #3684]!	; 0xe64

000122cc <opendir@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #430080	; 0x69000
   122d4:	ldr	pc, [ip, #3676]!	; 0xe5c

000122d8 <fnmatch@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #430080	; 0x69000
   122e0:	ldr	pc, [ip, #3668]!	; 0xe54

000122e4 <open64@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #430080	; 0x69000
   122ec:	ldr	pc, [ip, #3660]!	; 0xe4c

000122f0 <getenv@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #430080	; 0x69000
   122f8:	ldr	pc, [ip, #3652]!	; 0xe44

000122fc <lgetfilecon@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #430080	; 0x69000
   12304:	ldr	pc, [ip, #3644]!	; 0xe3c

00012308 <malloc@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #430080	; 0x69000
   12310:	ldr	pc, [ip, #3636]!	; 0xe34

00012314 <__libc_start_main@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #430080	; 0x69000
   1231c:	ldr	pc, [ip, #3628]!	; 0xe2c

00012320 <readlinkat@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #430080	; 0x69000
   12328:	ldr	pc, [ip, #3620]!	; 0xe24

0001232c <strftime@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #430080	; 0x69000
   12334:	ldr	pc, [ip, #3612]!	; 0xe1c

00012338 <__freading@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #430080	; 0x69000
   12340:	ldr	pc, [ip, #3604]!	; 0xe14

00012344 <localtime@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #430080	; 0x69000
   1234c:	ldr	pc, [ip, #3596]!	; 0xe0c

00012350 <modf@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #430080	; 0x69000
   12358:	ldr	pc, [ip, #3588]!	; 0xe04

0001235c <__gmon_start__@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #430080	; 0x69000
   12364:	ldr	pc, [ip, #3580]!	; 0xdfc

00012368 <__ctype_b_loc@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #430080	; 0x69000
   12370:	ldr	pc, [ip, #3572]!	; 0xdf4

00012374 <getcwd@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #430080	; 0x69000
   1237c:	ldr	pc, [ip, #3564]!	; 0xdec

00012380 <exit@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #430080	; 0x69000
   12388:	ldr	pc, [ip, #3556]!	; 0xde4

0001238c <feof@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #430080	; 0x69000
   12394:	ldr	pc, [ip, #3548]!	; 0xddc

00012398 <gettext@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #430080	; 0x69000
   123a0:	ldr	pc, [ip, #3540]!	; 0xdd4

000123a4 <getfilecon@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #430080	; 0x69000
   123ac:	ldr	pc, [ip, #3532]!	; 0xdcc

000123b0 <strtoul@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #430080	; 0x69000
   123b8:	ldr	pc, [ip, #3524]!	; 0xdc4

000123bc <strlen@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #430080	; 0x69000
   123c4:	ldr	pc, [ip, #3516]!	; 0xdbc

000123c8 <strchr@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #430080	; 0x69000
   123d0:	ldr	pc, [ip, #3508]!	; 0xdb4

000123d4 <setenv@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #430080	; 0x69000
   123dc:	ldr	pc, [ip, #3500]!	; 0xdac

000123e0 <openat64@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #430080	; 0x69000
   123e8:	ldr	pc, [ip, #3492]!	; 0xda4

000123ec <memrchr@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #430080	; 0x69000
   123f4:	ldr	pc, [ip, #3484]!	; 0xd9c

000123f8 <fprintf@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #430080	; 0x69000
   12400:	ldr	pc, [ip, #3476]!	; 0xd94

00012404 <__errno_location@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #430080	; 0x69000
   1240c:	ldr	pc, [ip, #3468]!	; 0xd8c

00012410 <iswalnum@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #430080	; 0x69000
   12418:	ldr	pc, [ip, #3460]!	; 0xd84

0001241c <snprintf@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #430080	; 0x69000
   12424:	ldr	pc, [ip, #3452]!	; 0xd7c

00012428 <__cxa_atexit@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #430080	; 0x69000
   12430:	ldr	pc, [ip, #3444]!	; 0xd74

00012434 <memset@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #430080	; 0x69000
   1243c:	ldr	pc, [ip, #3436]!	; 0xd6c

00012440 <bsearch@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #430080	; 0x69000
   12448:	ldr	pc, [ip, #3428]!	; 0xd64

0001244c <putchar@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #430080	; 0x69000
   12454:	ldr	pc, [ip, #3420]!	; 0xd5c

00012458 <strncpy@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #430080	; 0x69000
   12460:	ldr	pc, [ip, #3412]!	; 0xd54

00012464 <pthread_mutexattr_gettype@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #430080	; 0x69000
   1246c:	ldr	pc, [ip, #3404]!	; 0xd4c

00012470 <btowc@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #430080	; 0x69000
   12478:	ldr	pc, [ip, #3396]!	; 0xd44

0001247c <strtod@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #430080	; 0x69000
   12484:	ldr	pc, [ip, #3388]!	; 0xd3c

00012488 <fileno@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #430080	; 0x69000
   12490:	ldr	pc, [ip, #3380]!	; 0xd34

00012494 <difftime@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #430080	; 0x69000
   1249c:	ldr	pc, [ip, #3372]!	; 0xd2c

000124a0 <strtoumax@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #430080	; 0x69000
   124a8:	ldr	pc, [ip, #3364]!	; 0xd24

000124ac <memchr@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #430080	; 0x69000
   124b4:	ldr	pc, [ip, #3356]!	; 0xd1c

000124b8 <setfilecon@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #430080	; 0x69000
   124c0:	ldr	pc, [ip, #3348]!	; 0xd14

000124c4 <access@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #430080	; 0x69000
   124cc:	ldr	pc, [ip, #3340]!	; 0xd0c

000124d0 <fclose@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #430080	; 0x69000
   124d8:	ldr	pc, [ip, #3332]!	; 0xd04

000124dc <strnlen@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #430080	; 0x69000
   124e4:	ldr	pc, [ip, #3324]!	; 0xcfc

000124e8 <fseeko64@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #430080	; 0x69000
   124f0:	ldr	pc, [ip, #3316]!	; 0xcf4

000124f4 <endmntent@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #430080	; 0x69000
   124fc:	ldr	pc, [ip, #3308]!	; 0xcec

00012500 <fcntl64@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #430080	; 0x69000
   12508:	ldr	pc, [ip, #3300]!	; 0xce4

0001250c <rpmatch@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #430080	; 0x69000
   12514:	ldr	pc, [ip, #3292]!	; 0xcdc

00012518 <setlocale@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #430080	; 0x69000
   12520:	ldr	pc, [ip, #3284]!	; 0xcd4

00012524 <fork@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #430080	; 0x69000
   1252c:	ldr	pc, [ip, #3276]!	; 0xccc

00012530 <endpwent@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #430080	; 0x69000
   12538:	ldr	pc, [ip, #3268]!	; 0xcc4

0001253c <toupper@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #430080	; 0x69000
   12544:	ldr	pc, [ip, #3260]!	; 0xcbc

00012548 <strrchr@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #430080	; 0x69000
   12550:	ldr	pc, [ip, #3252]!	; 0xcb4

00012554 <vfprintf@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #430080	; 0x69000
   1255c:	ldr	pc, [ip, #3244]!	; 0xcac

00012560 <nl_langinfo@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #430080	; 0x69000
   12568:	ldr	pc, [ip, #3236]!	; 0xca4

0001256c <fputc@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #430080	; 0x69000
   12574:	ldr	pc, [ip, #3228]!	; 0xc9c

00012578 <sscanf@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #430080	; 0x69000
   12580:	ldr	pc, [ip, #3220]!	; 0xc94

00012584 <localeconv@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #430080	; 0x69000
   1258c:	ldr	pc, [ip, #3212]!	; 0xc8c

00012590 <sprintf@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #430080	; 0x69000
   12598:	ldr	pc, [ip, #3204]!	; 0xc84

0001259c <readdir64@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #430080	; 0x69000
   125a4:	ldr	pc, [ip, #3196]!	; 0xc7c

000125a8 <fdopendir@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #430080	; 0x69000
   125b0:	ldr	pc, [ip, #3188]!	; 0xc74

000125b4 <timegm@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #430080	; 0x69000
   125bc:	ldr	pc, [ip, #3180]!	; 0xc6c

000125c0 <putc@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #430080	; 0x69000
   125c8:	ldr	pc, [ip, #3172]!	; 0xc64

000125cc <dirfd@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #430080	; 0x69000
   125d4:	ldr	pc, [ip, #3164]!	; 0xc5c

000125d8 <fchdir@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #430080	; 0x69000
   125e0:	ldr	pc, [ip, #3156]!	; 0xc54

000125e4 <fopen64@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #430080	; 0x69000
   125ec:	ldr	pc, [ip, #3148]!	; 0xc4c

000125f0 <qsort@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #430080	; 0x69000
   125f8:	ldr	pc, [ip, #3140]!	; 0xc44

000125fc <freecon@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #430080	; 0x69000
   12604:	ldr	pc, [ip, #3132]!	; 0xc3c

00012608 <strpbrk@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #430080	; 0x69000
   12610:	ldr	pc, [ip, #3124]!	; 0xc34

00012614 <setmntent@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #430080	; 0x69000
   1261c:	ldr	pc, [ip, #3116]!	; 0xc2c

00012620 <bindtextdomain@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #430080	; 0x69000
   12628:	ldr	pc, [ip, #3108]!	; 0xc24

0001262c <atof@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #430080	; 0x69000
   12634:	ldr	pc, [ip, #3100]!	; 0xc1c

00012638 <getline@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #430080	; 0x69000
   12640:	ldr	pc, [ip, #3092]!	; 0xc14

00012644 <getdelim@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #430080	; 0x69000
   1264c:	ldr	pc, [ip, #3084]!	; 0xc0c

00012650 <__xstat64@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #430080	; 0x69000
   12658:	ldr	pc, [ip, #3076]!	; 0xc04

0001265c <isatty@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #430080	; 0x69000
   12664:	ldr	pc, [ip, #3068]!	; 0xbfc

00012668 <unsetenv@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #430080	; 0x69000
   12670:	ldr	pc, [ip, #3060]!	; 0xbf4

00012674 <towupper@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #430080	; 0x69000
   1267c:	ldr	pc, [ip, #3052]!	; 0xbec

00012680 <fputs@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #430080	; 0x69000
   12688:	ldr	pc, [ip, #3044]!	; 0xbe4

0001268c <strncmp@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #430080	; 0x69000
   12694:	ldr	pc, [ip, #3036]!	; 0xbdc

00012698 <abort@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #430080	; 0x69000
   126a0:	ldr	pc, [ip, #3028]!	; 0xbd4

000126a4 <close@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #430080	; 0x69000
   126ac:	ldr	pc, [ip, #3020]!	; 0xbcc

000126b0 <__lxstat64@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #430080	; 0x69000
   126b8:	ldr	pc, [ip, #3012]!	; 0xbc4

000126bc <closedir@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #430080	; 0x69000
   126c4:	ldr	pc, [ip, #3004]!	; 0xbbc

000126c8 <getgrgid@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #430080	; 0x69000
   126d0:	ldr	pc, [ip, #2996]!	; 0xbb4

000126d4 <getgrnam@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #430080	; 0x69000
   126dc:	ldr	pc, [ip, #2988]!	; 0xbac

000126e0 <strspn@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #430080	; 0x69000
   126e8:	ldr	pc, [ip, #2980]!	; 0xba4

000126ec <__assert_fail@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #430080	; 0x69000
   126f4:	ldr	pc, [ip, #2972]!	; 0xb9c

Disassembly of section .text:

000126f8 <.text>:
   126f8:	mov	fp, #0
   126fc:	mov	lr, #0
   12700:	pop	{r1}		; (ldr r1, [sp], #4)
   12704:	mov	r2, sp
   12708:	push	{r2}		; (str r2, [sp, #-4]!)
   1270c:	push	{r0}		; (str r0, [sp, #-4]!)
   12710:	ldr	ip, [pc, #16]	; 12728 <__assert_fail@plt+0x3c>
   12714:	push	{ip}		; (str ip, [sp, #-4]!)
   12718:	ldr	r0, [pc, #12]	; 1272c <__assert_fail@plt+0x40>
   1271c:	ldr	r3, [pc, #12]	; 12730 <__assert_fail@plt+0x44>
   12720:	bl	12314 <__libc_start_main@plt>
   12724:	bl	12698 <abort@plt>
   12728:	andeq	r4, r6, r8, ror ip
   1272c:	andeq	r3, r1, r0, asr #27
   12730:	andeq	r4, r6, r8, lsl ip
   12734:	ldr	r3, [pc, #20]	; 12750 <__assert_fail@plt+0x64>
   12738:	ldr	r2, [pc, #20]	; 12754 <__assert_fail@plt+0x68>
   1273c:	add	r3, pc, r3
   12740:	ldr	r2, [r3, r2]
   12744:	cmp	r2, #0
   12748:	bxeq	lr
   1274c:	b	1235c <__gmon_start__@plt>
   12750:			; <UNDEFINED> instruction: 0x000698bc
   12754:	muleq	r0, r4, r2
   12758:	ldr	r0, [pc, #24]	; 12778 <__assert_fail@plt+0x8c>
   1275c:	ldr	r3, [pc, #24]	; 1277c <__assert_fail@plt+0x90>
   12760:	cmp	r3, r0
   12764:	bxeq	lr
   12768:	ldr	r3, [pc, #16]	; 12780 <__assert_fail@plt+0x94>
   1276c:	cmp	r3, #0
   12770:	bxeq	lr
   12774:	bx	r3
   12778:	andeq	ip, r7, r4, lsl r7
   1277c:	andeq	ip, r7, r4, lsl r7
   12780:	andeq	r0, r0, r0
   12784:	ldr	r0, [pc, #36]	; 127b0 <__assert_fail@plt+0xc4>
   12788:	ldr	r1, [pc, #36]	; 127b4 <__assert_fail@plt+0xc8>
   1278c:	sub	r1, r1, r0
   12790:	asr	r1, r1, #2
   12794:	add	r1, r1, r1, lsr #31
   12798:	asrs	r1, r1, #1
   1279c:	bxeq	lr
   127a0:	ldr	r3, [pc, #16]	; 127b8 <__assert_fail@plt+0xcc>
   127a4:	cmp	r3, #0
   127a8:	bxeq	lr
   127ac:	bx	r3
   127b0:	andeq	ip, r7, r4, lsl r7
   127b4:	andeq	ip, r7, r4, lsl r7
   127b8:	andeq	r0, r0, r0
   127bc:	push	{r4, lr}
   127c0:	ldr	r4, [pc, #24]	; 127e0 <__assert_fail@plt+0xf4>
   127c4:	ldrb	r3, [r4]
   127c8:	cmp	r3, #0
   127cc:	popne	{r4, pc}
   127d0:	bl	12758 <__assert_fail@plt+0x6c>
   127d4:	mov	r3, #1
   127d8:	strb	r3, [r4]
   127dc:	pop	{r4, pc}
   127e0:	andeq	ip, r7, r8, lsr r7
   127e4:	b	12784 <__assert_fail@plt+0x98>
   127e8:	str	fp, [sp, #-8]!
   127ec:	str	lr, [sp, #4]
   127f0:	add	fp, sp, #4
   127f4:	movw	r3, #49824	; 0xc2a0
   127f8:	movt	r3, #7
   127fc:	ldr	r3, [r3]
   12800:	and	r3, r3, #512	; 0x200
   12804:	cmp	r3, #0
   12808:	beq	12844 <__assert_fail@plt+0x158>
   1280c:	movw	r3, #49832	; 0xc2a8
   12810:	movt	r3, #7
   12814:	ldr	r3, [r3]
   12818:	cmp	r3, #0
   1281c:	blt	12844 <__assert_fail@plt+0x158>
   12820:	movw	r3, #49832	; 0xc2a8
   12824:	movt	r3, #7
   12828:	ldr	r3, [r3]
   1282c:	mov	r0, r3
   12830:	bl	126a4 <close@plt>
   12834:	movw	r3, #49832	; 0xc2a8
   12838:	movt	r3, #7
   1283c:	mvn	r2, #0
   12840:	str	r2, [r3]
   12844:	nop	{0}
   12848:	sub	sp, fp, #4
   1284c:	ldr	fp, [sp]
   12850:	add	sp, sp, #4
   12854:	pop	{pc}		; (ldr pc, [sp], #4)
   12858:	str	fp, [sp, #-8]!
   1285c:	str	lr, [sp, #4]
   12860:	add	fp, sp, #4
   12864:	sub	sp, sp, #8
   12868:	str	r0, [fp, #-8]
   1286c:	movw	r3, #49824	; 0xc2a0
   12870:	movt	r3, #7
   12874:	ldr	r3, [r3]
   12878:	and	r3, r3, #512	; 0x200
   1287c:	cmp	r3, #0
   12880:	beq	12968 <__assert_fail@plt+0x27c>
   12884:	ldr	r3, [fp, #-8]
   12888:	cmn	r3, #100	; 0x64
   1288c:	beq	128bc <__assert_fail@plt+0x1d0>
   12890:	ldr	r3, [fp, #-8]
   12894:	cmp	r3, #0
   12898:	bge	128bc <__assert_fail@plt+0x1d0>
   1289c:	movw	r3, #21168	; 0x52b0
   128a0:	movt	r3, #6
   128a4:	mov	r2, #107	; 0x6b
   128a8:	movw	r1, #19704	; 0x4cf8
   128ac:	movt	r1, #6
   128b0:	movw	r0, #19716	; 0x4d04
   128b4:	movt	r0, #6
   128b8:	bl	126ec <__assert_fail@plt>
   128bc:	movw	r3, #53280	; 0xd020
   128c0:	movt	r3, #7
   128c4:	ldr	r2, [fp, #-8]
   128c8:	str	r2, [r3, #16]
   128cc:	movw	r3, #49832	; 0xc2a8
   128d0:	movt	r3, #7
   128d4:	ldr	r3, [r3]
   128d8:	cmp	r3, #0
   128dc:	bge	12968 <__assert_fail@plt+0x27c>
   128e0:	ldr	r3, [fp, #-8]
   128e4:	cmn	r3, #100	; 0x64
   128e8:	bne	12900 <__assert_fail@plt+0x214>
   128ec:	movw	r3, #49832	; 0xc2a8
   128f0:	movt	r3, #7
   128f4:	mvn	r2, #99	; 0x63
   128f8:	str	r2, [r3]
   128fc:	b	12968 <__assert_fail@plt+0x27c>
   12900:	ldr	r3, [fp, #-8]
   12904:	cmp	r3, #0
   12908:	blt	12928 <__assert_fail@plt+0x23c>
   1290c:	ldr	r0, [fp, #-8]
   12910:	bl	2b94c <__assert_fail@plt+0x19260>
   12914:	mov	r2, r0
   12918:	movw	r3, #49832	; 0xc2a8
   1291c:	movt	r3, #7
   12920:	str	r2, [r3]
   12924:	b	12968 <__assert_fail@plt+0x27c>
   12928:	movw	r3, #49832	; 0xc2a8
   1292c:	movt	r3, #7
   12930:	ldr	r3, [r3]
   12934:	cmp	r3, #0
   12938:	bge	12968 <__assert_fail@plt+0x27c>
   1293c:	ldr	r3, [fp, #-8]
   12940:	cmp	r3, #0
   12944:	bge	12968 <__assert_fail@plt+0x27c>
   12948:	movw	r3, #21168	; 0x52b0
   1294c:	movt	r3, #6
   12950:	mov	r2, #125	; 0x7d
   12954:	movw	r1, #19704	; 0x4cf8
   12958:	movt	r1, #6
   1295c:	movw	r0, #19752	; 0x4d28
   12960:	movt	r0, #6
   12964:	bl	126ec <__assert_fail@plt>
   12968:	nop	{0}
   1296c:	sub	sp, fp, #4
   12970:	ldr	fp, [sp]
   12974:	add	sp, sp, #4
   12978:	pop	{pc}		; (ldr pc, [sp], #4)
   1297c:	str	fp, [sp, #-8]!
   12980:	str	lr, [sp, #4]
   12984:	add	fp, sp, #4
   12988:	sub	sp, sp, #8
   1298c:	str	r0, [fp, #-8]
   12990:	ldr	r3, [fp, #-8]
   12994:	sub	r3, r3, #1
   12998:	cmp	r3, #13
   1299c:	ldrls	pc, [pc, r3, lsl #2]
   129a0:	b	12a84 <__assert_fail@plt+0x398>
   129a4:	ldrdeq	r2, [r1], -ip
   129a8:	andeq	r2, r1, r8, ror #19
   129ac:	strdeq	r2, [r1], -r4
   129b0:	andeq	r2, r1, r0, lsl #20
   129b4:	andeq	r2, r1, ip, lsl #20
   129b8:	andeq	r2, r1, r8, lsl sl
   129bc:	andeq	r2, r1, r4, lsr #20
   129c0:	andeq	r2, r1, r0, lsr sl
   129c4:	andeq	r2, r1, ip, lsr sl
   129c8:	andeq	r2, r1, r8, asr #20
   129cc:	andeq	r2, r1, r4, asr sl
   129d0:	andeq	r2, r1, r0, ror #20
   129d4:	andeq	r2, r1, ip, ror #20
   129d8:	andeq	r2, r1, r8, ror sl
   129dc:	movw	r3, #19780	; 0x4d44
   129e0:	movt	r3, #6
   129e4:	b	12aa4 <__assert_fail@plt+0x3b8>
   129e8:	movw	r3, #19788	; 0x4d4c
   129ec:	movt	r3, #6
   129f0:	b	12aa4 <__assert_fail@plt+0x3b8>
   129f4:	movw	r3, #19796	; 0x4d54
   129f8:	movt	r3, #6
   129fc:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a00:	movw	r3, #19808	; 0x4d60
   12a04:	movt	r3, #6
   12a08:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a0c:	movw	r3, #19816	; 0x4d68
   12a10:	movt	r3, #6
   12a14:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a18:	movw	r3, #19824	; 0x4d70
   12a1c:	movt	r3, #6
   12a20:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a24:	movw	r3, #19832	; 0x4d78
   12a28:	movt	r3, #6
   12a2c:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a30:	movw	r3, #19840	; 0x4d80
   12a34:	movt	r3, #6
   12a38:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a3c:	movw	r3, #19848	; 0x4d88
   12a40:	movt	r3, #6
   12a44:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a48:	movw	r3, #19860	; 0x4d94
   12a4c:	movt	r3, #6
   12a50:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a54:	movw	r3, #19868	; 0x4d9c
   12a58:	movt	r3, #6
   12a5c:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a60:	movw	r3, #19880	; 0x4da8
   12a64:	movt	r3, #6
   12a68:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a6c:	movw	r3, #19888	; 0x4db0
   12a70:	movt	r3, #6
   12a74:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a78:	movw	r3, #19900	; 0x4dbc
   12a7c:	movt	r3, #6
   12a80:	b	12aa4 <__assert_fail@plt+0x3b8>
   12a84:	ldr	r2, [fp, #-8]
   12a88:	movw	r1, #19908	; 0x4dc4
   12a8c:	movt	r1, #6
   12a90:	movw	r0, #51004	; 0xc73c
   12a94:	movt	r0, #7
   12a98:	bl	12590 <sprintf@plt>
   12a9c:	movw	r3, #51004	; 0xc73c
   12aa0:	movt	r3, #7
   12aa4:	mov	r0, r3
   12aa8:	sub	sp, fp, #4
   12aac:	ldr	fp, [sp]
   12ab0:	add	sp, sp, #4
   12ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ab8:	str	fp, [sp, #-8]!
   12abc:	str	lr, [sp, #4]
   12ac0:	add	fp, sp, #4
   12ac4:	sub	sp, sp, #24
   12ac8:	str	r0, [fp, #-16]
   12acc:	str	r1, [fp, #-20]	; 0xffffffec
   12ad0:	str	r2, [fp, #-24]	; 0xffffffe8
   12ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ad8:	ldrh	r3, [r3, #56]	; 0x38
   12adc:	cmp	r3, #10
   12ae0:	beq	12afc <__assert_fail@plt+0x410>
   12ae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ae8:	ldrh	r3, [r3, #56]	; 0x38
   12aec:	cmp	r3, #11
   12af0:	beq	12afc <__assert_fail@plt+0x410>
   12af4:	mov	r3, #1
   12af8:	b	12b00 <__assert_fail@plt+0x414>
   12afc:	mov	r3, #0
   12b00:	and	r3, r3, #1
   12b04:	uxtb	r2, r3
   12b08:	movw	r3, #53280	; 0xd020
   12b0c:	movt	r3, #7
   12b10:	strb	r2, [r3, #4]
   12b14:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b18:	ldr	r2, [r3, #24]
   12b1c:	movw	r3, #53280	; 0xd020
   12b20:	movt	r3, #7
   12b24:	str	r2, [r3, #12]
   12b28:	ldr	r3, [fp, #-16]
   12b2c:	ldr	r2, [r3, #32]
   12b30:	movw	r3, #53280	; 0xd020
   12b34:	movt	r3, #7
   12b38:	str	r2, [r3, #16]
   12b3c:	bl	19958 <__assert_fail@plt+0x726c>
   12b40:	str	r0, [fp, #-8]
   12b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b48:	ldr	r3, [r3, #28]
   12b4c:	ldr	r2, [fp, #-8]
   12b50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12b54:	mov	r0, r3
   12b58:	bl	1d2ac <__assert_fail@plt+0xabc0>
   12b5c:	movw	r3, #53280	; 0xd020
   12b60:	movt	r3, #7
   12b64:	ldrb	r3, [r3, #24]
   12b68:	cmp	r3, #0
   12b6c:	beq	12b80 <__assert_fail@plt+0x494>
   12b70:	mov	r2, #4
   12b74:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b78:	ldr	r0, [fp, #-16]
   12b7c:	bl	419e8 <__assert_fail@plt+0x2f2fc>
   12b80:	nop	{0}
   12b84:	sub	sp, fp, #4
   12b88:	ldr	fp, [sp]
   12b8c:	add	sp, sp, #4
   12b90:	pop	{pc}		; (ldr pc, [sp], #4)
   12b94:	str	fp, [sp, #-8]!
   12b98:	str	lr, [sp, #4]
   12b9c:	add	fp, sp, #4
   12ba0:	sub	sp, sp, #24
   12ba4:	str	r0, [fp, #-16]
   12ba8:	str	r1, [fp, #-20]	; 0xffffffec
   12bac:	str	r2, [fp, #-24]	; 0xffffffe8
   12bb0:	str	r3, [fp, #-28]	; 0xffffffe4
   12bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bb8:	cmp	r3, #0
   12bbc:	bne	12bdc <__assert_fail@plt+0x4f0>
   12bc0:	movw	r2, #19916	; 0x4dcc
   12bc4:	movt	r2, #6
   12bc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12bcc:	ldr	r0, [fp, #-16]
   12bd0:	bl	3bc98 <__assert_fail@plt+0x295ac>
   12bd4:	mov	r3, r0
   12bd8:	b	12c30 <__assert_fail@plt+0x544>
   12bdc:	ldr	r2, [fp, #-20]	; 0xffffffec
   12be0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12be4:	add	r3, r2, r3
   12be8:	ldrb	r3, [r3]
   12bec:	strb	r3, [fp, #-5]
   12bf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bf8:	add	r3, r2, r3
   12bfc:	mov	r2, #0
   12c00:	strb	r2, [r3]
   12c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   12c08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12c0c:	ldr	r0, [fp, #-16]
   12c10:	bl	3bc98 <__assert_fail@plt+0x295ac>
   12c14:	str	r0, [fp, #-12]
   12c18:	ldr	r2, [fp, #-20]	; 0xffffffec
   12c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c20:	add	r3, r2, r3
   12c24:	ldrb	r2, [fp, #-5]
   12c28:	strb	r2, [r3]
   12c2c:	ldr	r3, [fp, #-12]
   12c30:	mov	r0, r3
   12c34:	sub	sp, fp, #4
   12c38:	ldr	fp, [sp]
   12c3c:	add	sp, sp, #4
   12c40:	pop	{pc}		; (ldr pc, [sp], #4)
   12c44:	strd	r4, [sp, #-16]!
   12c48:	str	fp, [sp, #8]
   12c4c:	str	lr, [sp, #12]
   12c50:	add	fp, sp, #12
   12c54:	sub	sp, sp, #16
   12c58:	str	r0, [fp, #-16]
   12c5c:	ldr	r3, [fp, #-16]
   12c60:	ldr	r3, [r3, #80]	; 0x50
   12c64:	and	r3, r3, #61440	; 0xf000
   12c68:	cmp	r3, #40960	; 0xa000
   12c6c:	bne	12cac <__assert_fail@plt+0x5c0>
   12c70:	movw	r0, #19920	; 0x4dd0
   12c74:	movt	r0, #6
   12c78:	bl	12398 <gettext@plt>
   12c7c:	mov	r4, r0
   12c80:	ldr	r3, [fp, #-16]
   12c84:	ldr	r3, [r3, #28]
   12c88:	mov	r1, r3
   12c8c:	mov	r0, #0
   12c90:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   12c94:	mov	r3, r0
   12c98:	mov	r2, r4
   12c9c:	mov	r1, #0
   12ca0:	mov	r0, #0
   12ca4:	bl	122b4 <error@plt>
   12ca8:	b	12d1c <__assert_fail@plt+0x630>
   12cac:	movw	r0, #20044	; 0x4e4c
   12cb0:	movt	r0, #6
   12cb4:	bl	12398 <gettext@plt>
   12cb8:	mov	r4, r0
   12cbc:	ldr	r3, [fp, #-16]
   12cc0:	ldr	r3, [r3, #28]
   12cc4:	mov	r1, r3
   12cc8:	mov	r0, #0
   12ccc:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   12cd0:	mov	r5, r0
   12cd4:	ldr	r3, [fp, #-16]
   12cd8:	ldr	r3, [r3]
   12cdc:	ldr	r1, [r3, #28]
   12ce0:	ldr	r3, [fp, #-16]
   12ce4:	ldr	r3, [r3]
   12ce8:	ldr	r2, [r3, #40]	; 0x28
   12cec:	movw	r3, #53324	; 0xd04c
   12cf0:	movt	r3, #7
   12cf4:	ldr	r3, [r3, #72]	; 0x48
   12cf8:	mov	r0, #1
   12cfc:	bl	12b94 <__assert_fail@plt+0x4a8>
   12d00:	mov	r3, r0
   12d04:	str	r3, [sp]
   12d08:	mov	r3, r5
   12d0c:	mov	r2, r4
   12d10:	mov	r1, #0
   12d14:	mov	r0, #0
   12d18:	bl	122b4 <error@plt>
   12d1c:	nop	{0}
   12d20:	sub	sp, fp, #12
   12d24:	ldrd	r4, [sp]
   12d28:	ldr	fp, [sp, #8]
   12d2c:	add	sp, sp, #12
   12d30:	pop	{pc}		; (ldr pc, [sp], #4)
   12d34:	str	fp, [sp, #-8]!
   12d38:	str	lr, [sp, #4]
   12d3c:	add	fp, sp, #4
   12d40:	sub	sp, sp, #120	; 0x78
   12d44:	str	r0, [fp, #-120]	; 0xffffff88
   12d48:	movw	r3, #53324	; 0xd04c
   12d4c:	movt	r3, #7
   12d50:	ldr	r3, [r3, #52]	; 0x34
   12d54:	sub	r2, fp, #116	; 0x74
   12d58:	mov	r1, r2
   12d5c:	ldr	r0, [fp, #-120]	; 0xffffff88
   12d60:	blx	r3
   12d64:	str	r0, [fp, #-8]
   12d68:	ldr	r3, [fp, #-8]
   12d6c:	cmp	r3, #0
   12d70:	beq	12d90 <__assert_fail@plt+0x6a4>
   12d74:	bl	12404 <__errno_location@plt>
   12d78:	mov	r3, r0
   12d7c:	ldr	r3, [r3]
   12d80:	cmp	r3, #40	; 0x28
   12d84:	bne	12d90 <__assert_fail@plt+0x6a4>
   12d88:	mov	r3, #1
   12d8c:	b	12d94 <__assert_fail@plt+0x6a8>
   12d90:	mov	r3, #0
   12d94:	and	r3, r3, #1
   12d98:	uxtb	r3, r3
   12d9c:	mov	r0, r3
   12da0:	sub	sp, fp, #4
   12da4:	ldr	fp, [sp]
   12da8:	add	sp, sp, #4
   12dac:	pop	{pc}		; (ldr pc, [sp], #4)
   12db0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12db4:	strd	r6, [sp, #8]
   12db8:	strd	r8, [sp, #16]
   12dbc:	str	fp, [sp, #24]
   12dc0:	str	lr, [sp, #28]
   12dc4:	add	fp, sp, #28
   12dc8:	sub	sp, sp, #144	; 0x90
   12dcc:	str	r0, [fp, #-152]	; 0xffffff68
   12dd0:	str	r1, [fp, #-156]	; 0xffffff64
   12dd4:	movw	r3, #53324	; 0xd04c
   12dd8:	movt	r3, #7
   12ddc:	ldr	r3, [r3, #44]	; 0x2c
   12de0:	and	r3, r3, #4
   12de4:	cmp	r3, #0
   12de8:	beq	12eb4 <__assert_fail@plt+0x7c8>
   12dec:	movw	r3, #50984	; 0xc728
   12df0:	movt	r3, #7
   12df4:	ldr	r6, [r3]
   12df8:	movw	r3, #53324	; 0xd04c
   12dfc:	movt	r3, #7
   12e00:	ldr	r1, [r3, #72]	; 0x48
   12e04:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e08:	ldr	r3, [r3, #28]
   12e0c:	mov	r2, r3
   12e10:	mov	r0, #0
   12e14:	bl	3bc98 <__assert_fail@plt+0x295ac>
   12e18:	mov	r8, r0
   12e1c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e20:	ldrh	r3, [r3, #56]	; 0x38
   12e24:	mov	r0, r3
   12e28:	bl	1297c <__assert_fail@plt+0x290>
   12e2c:	mov	r9, r0
   12e30:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e34:	ldr	r4, [r3, #48]	; 0x30
   12e38:	movw	r3, #49828	; 0xc2a4
   12e3c:	movt	r3, #7
   12e40:	ldr	r5, [r3]
   12e44:	movw	r3, #53324	; 0xd04c
   12e48:	movt	r3, #7
   12e4c:	ldr	r1, [r3, #72]	; 0x48
   12e50:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e54:	ldr	r3, [r3, #28]
   12e58:	mov	r2, r3
   12e5c:	mov	r0, #1
   12e60:	bl	3bc98 <__assert_fail@plt+0x295ac>
   12e64:	mov	r7, r0
   12e68:	movw	r3, #53324	; 0xd04c
   12e6c:	movt	r3, #7
   12e70:	ldr	r1, [r3, #72]	; 0x48
   12e74:	ldr	r3, [fp, #-156]	; 0xffffff64
   12e78:	ldr	r3, [r3, #24]
   12e7c:	mov	r2, r3
   12e80:	mov	r0, #2
   12e84:	bl	3bc98 <__assert_fail@plt+0x295ac>
   12e88:	mov	r3, r0
   12e8c:	str	r3, [sp, #12]
   12e90:	str	r7, [sp, #8]
   12e94:	str	r5, [sp, #4]
   12e98:	str	r4, [sp]
   12e9c:	mov	r3, r9
   12ea0:	mov	r2, r8
   12ea4:	movw	r1, #20120	; 0x4e98
   12ea8:	movt	r1, #6
   12eac:	mov	r0, r6
   12eb0:	bl	123f8 <fprintf@plt>
   12eb4:	ldr	r3, [fp, #-156]	; 0xffffff64
   12eb8:	ldrh	r3, [r3, #56]	; 0x38
   12ebc:	cmp	r3, #6
   12ec0:	bne	12ecc <__assert_fail@plt+0x7e0>
   12ec4:	bl	127e8 <__assert_fail@plt+0xfc>
   12ec8:	b	12efc <__assert_fail@plt+0x810>
   12ecc:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ed0:	ldr	r2, [r3, #48]	; 0x30
   12ed4:	movw	r3, #49828	; 0xc2a4
   12ed8:	movt	r3, #7
   12edc:	ldr	r3, [r3]
   12ee0:	cmp	r2, r3
   12ee4:	bgt	12ef8 <__assert_fail@plt+0x80c>
   12ee8:	ldr	r3, [fp, #-156]	; 0xffffff64
   12eec:	ldr	r3, [r3, #48]	; 0x30
   12ef0:	cmp	r3, #0
   12ef4:	bne	12efc <__assert_fail@plt+0x810>
   12ef8:	bl	127e8 <__assert_fail@plt+0xfc>
   12efc:	ldr	r3, [fp, #-152]	; 0xffffff68
   12f00:	ldr	r3, [r3, #32]
   12f04:	mov	r0, r3
   12f08:	bl	12858 <__assert_fail@plt+0x16c>
   12f0c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f10:	ldr	r2, [r3, #48]	; 0x30
   12f14:	movw	r3, #49828	; 0xc2a4
   12f18:	movt	r3, #7
   12f1c:	str	r2, [r3]
   12f20:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f24:	ldrd	r2, [r3, #160]	; 0xa0
   12f28:	strd	r2, [fp, #-44]	; 0xffffffd4
   12f2c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f30:	ldrh	r3, [r3, #56]	; 0x38
   12f34:	cmp	r3, #7
   12f38:	bne	12f5c <__assert_fail@plt+0x870>
   12f3c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f40:	ldr	r2, [r3, #32]
   12f44:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f48:	ldr	r3, [r3, #28]
   12f4c:	mov	r1, r3
   12f50:	mov	r0, r2
   12f54:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   12f58:	b	134b8 <__assert_fail@plt+0xdcc>
   12f5c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f60:	ldrh	r3, [r3, #56]	; 0x38
   12f64:	cmp	r3, #4
   12f68:	bne	12fa0 <__assert_fail@plt+0x8b4>
   12f6c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f70:	ldr	r2, [r3, #32]
   12f74:	ldr	r3, [fp, #-156]	; 0xffffff64
   12f78:	ldr	r3, [r3, #28]
   12f7c:	mov	r1, r3
   12f80:	mov	r0, r2
   12f84:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   12f88:	movw	r3, #53324	; 0xd04c
   12f8c:	movt	r3, #7
   12f90:	ldrb	r3, [r3]
   12f94:	cmp	r3, #0
   12f98:	beq	130a0 <__assert_fail@plt+0x9b4>
   12f9c:	b	134b8 <__assert_fail@plt+0xdcc>
   12fa0:	ldr	r3, [fp, #-156]	; 0xffffff64
   12fa4:	ldrh	r3, [r3, #56]	; 0x38
   12fa8:	cmp	r3, #2
   12fac:	bne	12fcc <__assert_fail@plt+0x8e0>
   12fb0:	ldr	r0, [fp, #-156]	; 0xffffff64
   12fb4:	bl	12c44 <__assert_fail@plt+0x558>
   12fb8:	movw	r3, #53280	; 0xd020
   12fbc:	movt	r3, #7
   12fc0:	mov	r2, #1
   12fc4:	str	r2, [r3, #28]
   12fc8:	b	134b8 <__assert_fail@plt+0xdcc>
   12fcc:	ldr	r3, [fp, #-156]	; 0xffffff64
   12fd0:	ldrh	r3, [r3, #56]	; 0x38
   12fd4:	cmp	r3, #13
   12fd8:	bne	13010 <__assert_fail@plt+0x924>
   12fdc:	ldr	r3, [fp, #-156]	; 0xffffff64
   12fe0:	ldr	r3, [r3, #24]
   12fe4:	mov	r0, r3
   12fe8:	bl	12d34 <__assert_fail@plt+0x648>
   12fec:	mov	r3, r0
   12ff0:	cmp	r3, #0
   12ff4:	beq	130a0 <__assert_fail@plt+0x9b4>
   12ff8:	ldr	r3, [fp, #-156]	; 0xffffff64
   12ffc:	ldr	r3, [r3, #28]
   13000:	mov	r1, r3
   13004:	mov	r0, #40	; 0x28
   13008:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   1300c:	b	134b8 <__assert_fail@plt+0xdcc>
   13010:	ldr	r3, [fp, #-156]	; 0xffffff64
   13014:	ldrh	r3, [r3, #56]	; 0x38
   13018:	cmp	r3, #10
   1301c:	bne	130a0 <__assert_fail@plt+0x9b4>
   13020:	ldr	r3, [fp, #-156]	; 0xffffff64
   13024:	ldr	r3, [r3, #48]	; 0x30
   13028:	cmp	r3, #0
   1302c:	bne	13050 <__assert_fail@plt+0x964>
   13030:	ldr	r3, [fp, #-156]	; 0xffffff64
   13034:	ldr	r2, [r3, #32]
   13038:	ldr	r3, [fp, #-156]	; 0xffffff64
   1303c:	ldr	r3, [r3, #28]
   13040:	mov	r1, r3
   13044:	mov	r0, r2
   13048:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   1304c:	b	134b8 <__assert_fail@plt+0xdcc>
   13050:	ldr	r3, [fp, #-156]	; 0xffffff64
   13054:	ldr	r3, [r3, #24]
   13058:	mov	r0, r3
   1305c:	bl	12d34 <__assert_fail@plt+0x648>
   13060:	mov	r3, r0
   13064:	cmp	r3, #0
   13068:	beq	13084 <__assert_fail@plt+0x998>
   1306c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13070:	ldr	r3, [r3, #28]
   13074:	mov	r1, r3
   13078:	mov	r0, #40	; 0x28
   1307c:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   13080:	b	134b8 <__assert_fail@plt+0xdcc>
   13084:	ldr	r3, [fp, #-156]	; 0xffffff64
   13088:	ldr	r2, [r3, #32]
   1308c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13090:	ldr	r3, [r3, #28]
   13094:	mov	r1, r3
   13098:	mov	r0, r2
   1309c:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   130a0:	ldr	r3, [fp, #-156]	; 0xffffff64
   130a4:	ldrh	r3, [r3, #56]	; 0x38
   130a8:	cmp	r3, #11
   130ac:	beq	130c0 <__assert_fail@plt+0x9d4>
   130b0:	ldr	r3, [fp, #-156]	; 0xffffff64
   130b4:	ldrh	r3, [r3, #56]	; 0x38
   130b8:	cmp	r3, #10
   130bc:	bne	13154 <__assert_fail@plt+0xa68>
   130c0:	movw	r3, #53280	; 0xd020
   130c4:	movt	r3, #7
   130c8:	ldrb	r3, [r3, #4]
   130cc:	eor	r3, r3, #1
   130d0:	uxtb	r3, r3
   130d4:	cmp	r3, #0
   130d8:	bne	130fc <__assert_fail@plt+0xa10>
   130dc:	movw	r3, #21180	; 0x52bc
   130e0:	movt	r3, #6
   130e4:	mov	r2, #380	; 0x17c
   130e8:	movw	r1, #19704	; 0x4cf8
   130ec:	movt	r1, #6
   130f0:	movw	r0, #20224	; 0x4f00
   130f4:	movt	r0, #6
   130f8:	bl	126ec <__assert_fail@plt>
   130fc:	ldr	r3, [fp, #-156]	; 0xffffff64
   13100:	ldrh	r3, [r3, #56]	; 0x38
   13104:	cmp	r3, #11
   13108:	beq	13140 <__assert_fail@plt+0xa54>
   1310c:	movw	r3, #53280	; 0xd020
   13110:	movt	r3, #7
   13114:	ldr	r3, [r3, #8]
   13118:	cmp	r3, #0
   1311c:	beq	13140 <__assert_fail@plt+0xa54>
   13120:	movw	r3, #21180	; 0x52bc
   13124:	movt	r3, #6
   13128:	movw	r2, #381	; 0x17d
   1312c:	movw	r1, #19704	; 0x4cf8
   13130:	movt	r1, #6
   13134:	movw	r0, #20244	; 0x4f14
   13138:	movt	r0, #6
   1313c:	bl	126ec <__assert_fail@plt>
   13140:	movw	r3, #53280	; 0xd020
   13144:	movt	r3, #7
   13148:	ldr	r3, [r3, #8]
   1314c:	str	r3, [fp, #-144]	; 0xffffff70
   13150:	b	131f4 <__assert_fail@plt+0xb08>
   13154:	movw	r3, #53280	; 0xd020
   13158:	movt	r3, #7
   1315c:	mov	r2, #1
   13160:	strb	r2, [r3, #4]
   13164:	movw	r3, #53280	; 0xd020
   13168:	movt	r3, #7
   1316c:	mov	r2, #1
   13170:	strb	r2, [r3, #5]
   13174:	ldr	r3, [fp, #-156]	; 0xffffff64
   13178:	sub	r0, fp, #140	; 0x8c
   1317c:	add	r3, r3, #64	; 0x40
   13180:	mov	r2, #104	; 0x68
   13184:	mov	r1, r3
   13188:	bl	120f8 <memcpy@plt>
   1318c:	ldr	r3, [fp, #-124]	; 0xffffff84
   13190:	str	r3, [fp, #-144]	; 0xffffff70
   13194:	ldr	r2, [fp, #-144]	; 0xffffff70
   13198:	movw	r3, #53280	; 0xd020
   1319c:	movt	r3, #7
   131a0:	str	r2, [r3, #8]
   131a4:	ldr	r3, [fp, #-144]	; 0xffffff70
   131a8:	cmp	r3, #0
   131ac:	bne	131f4 <__assert_fail@plt+0xb08>
   131b0:	movw	r0, #20292	; 0x4f44
   131b4:	movt	r0, #6
   131b8:	bl	12398 <gettext@plt>
   131bc:	mov	r4, r0
   131c0:	movw	r3, #53324	; 0xd04c
   131c4:	movt	r3, #7
   131c8:	ldr	r1, [r3, #72]	; 0x48
   131cc:	ldr	r3, [fp, #-156]	; 0xffffff64
   131d0:	ldr	r3, [r3, #28]
   131d4:	mov	r2, r3
   131d8:	mov	r0, #0
   131dc:	bl	3bc98 <__assert_fail@plt+0x295ac>
   131e0:	mov	r3, r0
   131e4:	mov	r2, r4
   131e8:	mov	r1, #0
   131ec:	mov	r0, #0
   131f0:	bl	122b4 <error@plt>
   131f4:	ldr	r3, [fp, #-156]	; 0xffffff64
   131f8:	ldr	r2, [r3, #48]	; 0x30
   131fc:	movw	r3, #53280	; 0xd020
   13200:	movt	r3, #7
   13204:	str	r2, [r3]
   13208:	ldr	r3, [fp, #-144]	; 0xffffff70
   1320c:	cmp	r3, #0
   13210:	beq	13250 <__assert_fail@plt+0xb64>
   13214:	ldr	r3, [fp, #-156]	; 0xffffff64
   13218:	ldr	r1, [r3, #28]
   1321c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13220:	add	r2, r3, #168	; 0xa8
   13224:	sub	ip, fp, #140	; 0x8c
   13228:	sub	r0, fp, #144	; 0x90
   1322c:	mov	r3, #0
   13230:	str	r3, [sp]
   13234:	mov	r3, ip
   13238:	bl	1c684 <__assert_fail@plt+0x9f98>
   1323c:	mov	r3, r0
   13240:	eor	r3, r3, #1
   13244:	uxtb	r3, r3
   13248:	cmp	r3, #0
   1324c:	bne	134b4 <__assert_fail@plt+0xdc8>
   13250:	mov	r3, #0
   13254:	str	r3, [fp, #-32]	; 0xffffffe0
   13258:	ldr	r3, [fp, #-144]	; 0xffffff70
   1325c:	and	r3, r3, #61440	; 0xf000
   13260:	cmp	r3, #16384	; 0x4000
   13264:	beq	13298 <__assert_fail@plt+0xbac>
   13268:	ldr	r3, [fp, #-156]	; 0xffffff64
   1326c:	ldrh	r3, [r3, #56]	; 0x38
   13270:	cmp	r3, #1
   13274:	beq	13298 <__assert_fail@plt+0xbac>
   13278:	ldr	r3, [fp, #-156]	; 0xffffff64
   1327c:	ldrh	r3, [r3, #56]	; 0x38
   13280:	cmp	r3, #6
   13284:	beq	13298 <__assert_fail@plt+0xbac>
   13288:	ldr	r3, [fp, #-156]	; 0xffffff64
   1328c:	ldrh	r3, [r3, #56]	; 0x38
   13290:	cmp	r3, #2
   13294:	bne	132a0 <__assert_fail@plt+0xbb4>
   13298:	mov	r3, #1
   1329c:	b	132a4 <__assert_fail@plt+0xbb8>
   132a0:	mov	r3, #0
   132a4:	str	r3, [fp, #-36]	; 0xffffffdc
   132a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   132ac:	cmp	r3, #0
   132b0:	beq	132d8 <__assert_fail@plt+0xbec>
   132b4:	ldr	r3, [fp, #-156]	; 0xffffff64
   132b8:	ldrh	r3, [r3, #56]	; 0x38
   132bc:	cmp	r3, #11
   132c0:	bne	132d8 <__assert_fail@plt+0xbec>
   132c4:	mov	r2, #1
   132c8:	ldr	r1, [fp, #-156]	; 0xffffff64
   132cc:	ldr	r0, [fp, #-152]	; 0xffffff68
   132d0:	bl	419e8 <__assert_fail@plt+0x2f2fc>
   132d4:	b	134b8 <__assert_fail@plt+0xdcc>
   132d8:	movw	r3, #53324	; 0xd04c
   132dc:	movt	r3, #7
   132e0:	ldr	r3, [r3, #4]
   132e4:	cmp	r3, #0
   132e8:	blt	1333c <__assert_fail@plt+0xc50>
   132ec:	ldr	r3, [fp, #-156]	; 0xffffff64
   132f0:	ldr	r2, [r3, #48]	; 0x30
   132f4:	movw	r3, #53324	; 0xd04c
   132f8:	movt	r3, #7
   132fc:	ldr	r3, [r3, #4]
   13300:	cmp	r2, r3
   13304:	blt	1333c <__assert_fail@plt+0xc50>
   13308:	mov	r2, #4
   1330c:	ldr	r1, [fp, #-156]	; 0xffffff64
   13310:	ldr	r0, [fp, #-152]	; 0xffffff68
   13314:	bl	419e8 <__assert_fail@plt+0x2f2fc>
   13318:	ldr	r3, [fp, #-156]	; 0xffffff64
   1331c:	ldr	r2, [r3, #48]	; 0x30
   13320:	movw	r3, #53324	; 0xd04c
   13324:	movt	r3, #7
   13328:	ldr	r3, [r3, #4]
   1332c:	cmp	r2, r3
   13330:	ble	1333c <__assert_fail@plt+0xc50>
   13334:	mov	r3, #1
   13338:	str	r3, [fp, #-32]	; 0xffffffe0
   1333c:	ldr	r3, [fp, #-156]	; 0xffffff64
   13340:	ldrh	r3, [r3, #56]	; 0x38
   13344:	cmp	r3, #1
   13348:	bne	13374 <__assert_fail@plt+0xc88>
   1334c:	movw	r3, #53324	; 0xd04c
   13350:	movt	r3, #7
   13354:	ldrb	r3, [r3]
   13358:	eor	r3, r3, #1
   1335c:	uxtb	r3, r3
   13360:	cmp	r3, #0
   13364:	beq	13374 <__assert_fail@plt+0xc88>
   13368:	mov	r3, #1
   1336c:	str	r3, [fp, #-32]	; 0xffffffe0
   13370:	b	133c8 <__assert_fail@plt+0xcdc>
   13374:	ldr	r3, [fp, #-156]	; 0xffffff64
   13378:	ldrh	r3, [r3, #56]	; 0x38
   1337c:	cmp	r3, #6
   13380:	bne	133a4 <__assert_fail@plt+0xcb8>
   13384:	movw	r3, #53324	; 0xd04c
   13388:	movt	r3, #7
   1338c:	ldrb	r3, [r3]
   13390:	cmp	r3, #0
   13394:	beq	133a4 <__assert_fail@plt+0xcb8>
   13398:	mov	r3, #1
   1339c:	str	r3, [fp, #-32]	; 0xffffffe0
   133a0:	b	133c8 <__assert_fail@plt+0xcdc>
   133a4:	ldr	r3, [fp, #-156]	; 0xffffff64
   133a8:	ldr	r2, [r3, #48]	; 0x30
   133ac:	movw	r3, #53324	; 0xd04c
   133b0:	movt	r3, #7
   133b4:	ldr	r3, [r3, #8]
   133b8:	cmp	r2, r3
   133bc:	bge	133c8 <__assert_fail@plt+0xcdc>
   133c0:	mov	r3, #1
   133c4:	str	r3, [fp, #-32]	; 0xffffffe0
   133c8:	movw	r3, #53324	; 0xd04c
   133cc:	movt	r3, #7
   133d0:	ldr	r3, [r3, #44]	; 0x2c
   133d4:	and	r3, r3, #4
   133d8:	cmp	r3, #0
   133dc:	beq	13470 <__assert_fail@plt+0xd84>
   133e0:	movw	r3, #50984	; 0xc728
   133e4:	movt	r3, #7
   133e8:	ldr	r4, [r3]
   133ec:	movw	r3, #53324	; 0xd04c
   133f0:	movt	r3, #7
   133f4:	ldr	r1, [r3, #72]	; 0x48
   133f8:	ldr	r3, [fp, #-156]	; 0xffffff64
   133fc:	ldr	r3, [r3, #28]
   13400:	mov	r2, r3
   13404:	mov	r0, #0
   13408:	bl	3bc98 <__assert_fail@plt+0x295ac>
   1340c:	mov	r5, r0
   13410:	ldr	r3, [fp, #-156]	; 0xffffff64
   13414:	ldrh	r3, [r3, #56]	; 0x38
   13418:	mov	r0, r3
   1341c:	bl	1297c <__assert_fail@plt+0x290>
   13420:	mov	r1, r0
   13424:	movw	r3, #53280	; 0xd020
   13428:	movt	r3, #7
   1342c:	ldrb	r3, [r3, #4]
   13430:	mov	r2, r3
   13434:	movw	r3, #53280	; 0xd020
   13438:	movt	r3, #7
   1343c:	ldrb	r3, [r3, #5]
   13440:	str	r3, [sp, #12]
   13444:	str	r2, [sp, #8]
   13448:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1344c:	str	r3, [sp, #4]
   13450:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13454:	str	r3, [sp]
   13458:	mov	r3, r1
   1345c:	mov	r2, r5
   13460:	movw	r1, #20336	; 0x4f70
   13464:	movt	r1, #6
   13468:	mov	r0, r4
   1346c:	bl	123f8 <fprintf@plt>
   13470:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13474:	cmp	r3, #0
   13478:	bne	13490 <__assert_fail@plt+0xda4>
   1347c:	sub	r3, fp, #140	; 0x8c
   13480:	mov	r2, r3
   13484:	ldr	r1, [fp, #-156]	; 0xffffff64
   13488:	ldr	r0, [fp, #-152]	; 0xffffff68
   1348c:	bl	12ab8 <__assert_fail@plt+0x3cc>
   13490:	ldr	r3, [fp, #-156]	; 0xffffff64
   13494:	ldrh	r3, [r3, #56]	; 0x38
   13498:	cmp	r3, #6
   1349c:	bne	134b8 <__assert_fail@plt+0xdcc>
   134a0:	movw	r3, #53280	; 0xd020
   134a4:	movt	r3, #7
   134a8:	mov	r2, #0
   134ac:	strb	r2, [r3, #24]
   134b0:	b	134b8 <__assert_fail@plt+0xdcc>
   134b4:	nop	{0}
   134b8:	sub	sp, fp, #28
   134bc:	ldrd	r4, [sp]
   134c0:	ldrd	r6, [sp, #8]
   134c4:	ldrd	r8, [sp, #16]
   134c8:	ldr	fp, [sp, #24]
   134cc:	add	sp, sp, #28
   134d0:	pop	{pc}		; (ldr pc, [sp], #4)
   134d4:	strd	r4, [sp, #-16]!
   134d8:	str	fp, [sp, #8]
   134dc:	str	lr, [sp, #12]
   134e0:	add	fp, sp, #12
   134e4:	sub	sp, sp, #32
   134e8:	str	r0, [fp, #-40]	; 0xffffffd8
   134ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   134f0:	bl	123bc <strlen@plt>
   134f4:	mov	r3, r0
   134f8:	mov	r2, r3
   134fc:	movw	r3, #53280	; 0xd020
   13500:	movt	r3, #7
   13504:	str	r2, [r3, #20]
   13508:	mvn	r0, #99	; 0x63
   1350c:	bl	12858 <__assert_fail@plt+0x16c>
   13510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13514:	str	r3, [fp, #-32]	; 0xffffffe0
   13518:	mov	r3, #0
   1351c:	str	r3, [fp, #-28]	; 0xffffffe4
   13520:	movw	r3, #53324	; 0xd04c
   13524:	movt	r3, #7
   13528:	ldr	r3, [r3, #48]	; 0x30
   1352c:	cmp	r3, #1
   13530:	beq	13548 <__assert_fail@plt+0xe5c>
   13534:	cmp	r3, #0
   13538:	beq	13588 <__assert_fail@plt+0xe9c>
   1353c:	cmp	r3, #2
   13540:	beq	13568 <__assert_fail@plt+0xe7c>
   13544:	b	135a8 <__assert_fail@plt+0xebc>
   13548:	movw	r3, #49824	; 0xc2a0
   1354c:	movt	r3, #7
   13550:	ldr	r3, [r3]
   13554:	orr	r2, r3, #3
   13558:	movw	r3, #49824	; 0xc2a0
   1355c:	movt	r3, #7
   13560:	str	r2, [r3]
   13564:	b	135a8 <__assert_fail@plt+0xebc>
   13568:	movw	r3, #49824	; 0xc2a0
   1356c:	movt	r3, #7
   13570:	ldr	r3, [r3]
   13574:	orr	r2, r3, #17
   13578:	movw	r3, #49824	; 0xc2a0
   1357c:	movt	r3, #7
   13580:	str	r2, [r3]
   13584:	b	135a8 <__assert_fail@plt+0xebc>
   13588:	movw	r3, #49824	; 0xc2a0
   1358c:	movt	r3, #7
   13590:	ldr	r3, [r3]
   13594:	orr	r2, r3, #16
   13598:	movw	r3, #49824	; 0xc2a0
   1359c:	movt	r3, #7
   135a0:	str	r2, [r3]
   135a4:	nop	{0}
   135a8:	movw	r3, #53324	; 0xd04c
   135ac:	movt	r3, #7
   135b0:	ldrb	r3, [r3, #13]
   135b4:	cmp	r3, #0
   135b8:	beq	135d8 <__assert_fail@plt+0xeec>
   135bc:	movw	r3, #49824	; 0xc2a0
   135c0:	movt	r3, #7
   135c4:	ldr	r3, [r3]
   135c8:	orr	r2, r3, #64	; 0x40
   135cc:	movw	r3, #49824	; 0xc2a0
   135d0:	movt	r3, #7
   135d4:	str	r2, [r3]
   135d8:	movw	r3, #49824	; 0xc2a0
   135dc:	movt	r3, #7
   135e0:	ldr	r1, [r3]
   135e4:	sub	r3, fp, #32
   135e8:	mov	r2, #0
   135ec:	mov	r0, r3
   135f0:	bl	40764 <__assert_fail@plt+0x2e078>
   135f4:	str	r0, [fp, #-20]	; 0xffffffec
   135f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135fc:	cmp	r3, #0
   13600:	bne	13654 <__assert_fail@plt+0xf68>
   13604:	bl	12404 <__errno_location@plt>
   13608:	mov	r3, r0
   1360c:	ldr	r4, [r3]
   13610:	movw	r0, #20428	; 0x4fcc
   13614:	movt	r0, #6
   13618:	bl	12398 <gettext@plt>
   1361c:	mov	r5, r0
   13620:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13624:	mov	r0, #0
   13628:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   1362c:	mov	r3, r0
   13630:	mov	r2, r5
   13634:	mov	r1, r4
   13638:	mov	r0, #0
   1363c:	bl	122b4 <error@plt>
   13640:	movw	r3, #53280	; 0xd020
   13644:	movt	r3, #7
   13648:	mov	r2, #1
   1364c:	str	r2, [r3, #28]
   13650:	b	137fc <__assert_fail@plt+0x1110>
   13654:	mov	r3, #-2147483648	; 0x80000000
   13658:	str	r3, [fp, #-16]
   1365c:	b	13718 <__assert_fail@plt+0x102c>
   13660:	movw	r3, #53280	; 0xd020
   13664:	movt	r3, #7
   13668:	ldrb	r3, [r3, #32]
   1366c:	cmp	r3, #0
   13670:	beq	1368c <__assert_fail@plt+0xfa0>
   13674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13678:	ldr	r3, [r3, #48]	; 0x30
   1367c:	ldr	r2, [fp, #-16]
   13680:	cmp	r2, r3
   13684:	beq	1368c <__assert_fail@plt+0xfa0>
   13688:	bl	1bcc0 <__assert_fail@plt+0x95d4>
   1368c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13690:	ldr	r3, [r3, #48]	; 0x30
   13694:	str	r3, [fp, #-16]
   13698:	movw	r3, #53280	; 0xd020
   1369c:	movt	r3, #7
   136a0:	mov	r2, #0
   136a4:	strb	r2, [r3, #40]	; 0x28
   136a8:	movw	r3, #53280	; 0xd020
   136ac:	movt	r3, #7
   136b0:	mov	r2, #0
   136b4:	strb	r2, [r3, #4]
   136b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136bc:	ldr	r3, [r3, #80]	; 0x50
   136c0:	cmp	r3, #0
   136c4:	movne	r3, #1
   136c8:	moveq	r3, #0
   136cc:	uxtb	r2, r3
   136d0:	movw	r3, #53280	; 0xd020
   136d4:	movt	r3, #7
   136d8:	strb	r2, [r3, #5]
   136dc:	movw	r3, #53280	; 0xd020
   136e0:	movt	r3, #7
   136e4:	ldrb	r3, [r3, #5]
   136e8:	cmp	r3, #0
   136ec:	beq	136fc <__assert_fail@plt+0x1010>
   136f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136f4:	ldr	r2, [r3, #80]	; 0x50
   136f8:	b	13700 <__assert_fail@plt+0x1014>
   136fc:	mov	r2, #0
   13700:	movw	r3, #53280	; 0xd020
   13704:	movt	r3, #7
   13708:	str	r2, [r3, #8]
   1370c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13710:	ldr	r0, [fp, #-20]	; 0xffffffec
   13714:	bl	12db0 <__assert_fail@plt+0x6c4>
   13718:	bl	12404 <__errno_location@plt>
   1371c:	mov	r2, r0
   13720:	mov	r3, #0
   13724:	str	r3, [r2]
   13728:	ldr	r0, [fp, #-20]	; 0xffffffec
   1372c:	bl	4123c <__assert_fail@plt+0x2eb50>
   13730:	str	r0, [fp, #-24]	; 0xffffffe8
   13734:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13738:	cmp	r3, #0
   1373c:	bne	13660 <__assert_fail@plt+0xf74>
   13740:	bl	12404 <__errno_location@plt>
   13744:	mov	r3, r0
   13748:	ldr	r3, [r3]
   1374c:	cmp	r3, #0
   13750:	beq	1379c <__assert_fail@plt+0x10b0>
   13754:	bl	12404 <__errno_location@plt>
   13758:	mov	r3, r0
   1375c:	ldr	r4, [r3]
   13760:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13764:	mov	r0, #0
   13768:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   1376c:	mov	r3, r0
   13770:	movw	r2, #20448	; 0x4fe0
   13774:	movt	r2, #6
   13778:	mov	r1, r4
   1377c:	mov	r0, #0
   13780:	bl	122b4 <error@plt>
   13784:	movw	r3, #53280	; 0xd020
   13788:	movt	r3, #7
   1378c:	mov	r2, #1
   13790:	str	r2, [r3, #28]
   13794:	mov	r3, #0
   13798:	b	13800 <__assert_fail@plt+0x1114>
   1379c:	ldr	r0, [fp, #-20]	; 0xffffffec
   137a0:	bl	40cd8 <__assert_fail@plt+0x2e5ec>
   137a4:	mov	r3, r0
   137a8:	cmp	r3, #0
   137ac:	beq	137f4 <__assert_fail@plt+0x1108>
   137b0:	bl	12404 <__errno_location@plt>
   137b4:	mov	r3, r0
   137b8:	ldr	r4, [r3]
   137bc:	movw	r0, #20508	; 0x501c
   137c0:	movt	r0, #6
   137c4:	bl	12398 <gettext@plt>
   137c8:	mov	r2, r0
   137cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   137d0:	mov	r1, r4
   137d4:	mov	r0, #0
   137d8:	bl	122b4 <error@plt>
   137dc:	movw	r3, #53280	; 0xd020
   137e0:	movt	r3, #7
   137e4:	mov	r2, #1
   137e8:	str	r2, [r3, #28]
   137ec:	mov	r3, #0
   137f0:	b	13800 <__assert_fail@plt+0x1114>
   137f4:	mov	r3, #0
   137f8:	str	r3, [fp, #-20]	; 0xffffffec
   137fc:	mov	r3, #1
   13800:	mov	r0, r3
   13804:	sub	sp, fp, #12
   13808:	ldrd	r4, [sp]
   1380c:	ldr	fp, [sp, #8]
   13810:	add	sp, sp, #12
   13814:	pop	{pc}		; (ldr pc, [sp], #4)
   13818:	str	r4, [sp, #-12]!
   1381c:	str	fp, [sp, #4]
   13820:	str	lr, [sp, #8]
   13824:	add	fp, sp, #8
   13828:	sub	sp, sp, #268	; 0x10c
   1382c:	str	r0, [fp, #-264]	; 0xfffffef8
   13830:	str	r1, [fp, #-268]	; 0xfffffef4
   13834:	ldr	r3, [fp, #-264]	; 0xfffffef8
   13838:	cmp	r3, #0
   1383c:	ble	13870 <__assert_fail@plt+0x1184>
   13840:	ldr	r3, [fp, #-268]	; 0xfffffef4
   13844:	ldr	r3, [r3]
   13848:	mov	r1, #1
   1384c:	mov	r0, r3
   13850:	bl	1c87c <__assert_fail@plt+0xa190>
   13854:	mov	r3, r0
   13858:	eor	r3, r3, #1
   1385c:	uxtb	r3, r3
   13860:	cmp	r3, #0
   13864:	beq	13870 <__assert_fail@plt+0x1184>
   13868:	mov	r3, #1
   1386c:	b	13874 <__assert_fail@plt+0x1188>
   13870:	mov	r3, #0
   13874:	strb	r3, [fp, #-26]	; 0xffffffe6
   13878:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   1387c:	and	r3, r3, #1
   13880:	strb	r3, [fp, #-26]	; 0xffffffe6
   13884:	mov	r3, #0
   13888:	str	r3, [fp, #-16]
   1388c:	mov	r3, #0
   13890:	str	r3, [fp, #-20]	; 0xffffffec
   13894:	movw	r3, #53324	; 0xd04c
   13898:	movt	r3, #7
   1389c:	ldr	r3, [r3, #76]	; 0x4c
   138a0:	cmp	r3, #0
   138a4:	beq	13b14 <__assert_fail@plt+0x1428>
   138a8:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   138ac:	cmp	r3, #0
   138b0:	beq	13910 <__assert_fail@plt+0x1224>
   138b4:	movw	r0, #20564	; 0x5054
   138b8:	movt	r0, #6
   138bc:	bl	12398 <gettext@plt>
   138c0:	mov	r4, r0
   138c4:	ldr	r3, [fp, #-268]	; 0xfffffef4
   138c8:	ldr	r3, [r3]
   138cc:	mov	r1, r3
   138d0:	mov	r0, #0
   138d4:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   138d8:	mov	r3, r0
   138dc:	mov	r2, r4
   138e0:	mov	r1, #0
   138e4:	mov	r0, #0
   138e8:	bl	122b4 <error@plt>
   138ec:	movw	r0, #20584	; 0x5068
   138f0:	movt	r0, #6
   138f4:	bl	12398 <gettext@plt>
   138f8:	mov	r3, r0
   138fc:	movw	r2, #20636	; 0x509c
   13900:	movt	r2, #6
   13904:	mov	r1, #0
   13908:	mov	r0, #1
   1390c:	bl	122b4 <error@plt>
   13910:	movw	r3, #53324	; 0xd04c
   13914:	movt	r3, #7
   13918:	ldr	r3, [r3, #76]	; 0x4c
   1391c:	movw	r1, #20640	; 0x50a0
   13920:	movt	r1, #6
   13924:	mov	r0, r3
   13928:	bl	11ffc <strcmp@plt>
   1392c:	mov	r3, r0
   13930:	cmp	r3, #0
   13934:	bne	139a4 <__assert_fail@plt+0x12b8>
   13938:	movw	r3, #53324	; 0xd04c
   1393c:	movt	r3, #7
   13940:	ldrb	r3, [r3, #80]	; 0x50
   13944:	cmp	r3, #0
   13948:	beq	13970 <__assert_fail@plt+0x1284>
   1394c:	movw	r0, #20644	; 0x50a4
   13950:	movt	r0, #6
   13954:	bl	12398 <gettext@plt>
   13958:	mov	r3, r0
   1395c:	movw	r2, #20728	; 0x50f8
   13960:	movt	r2, #6
   13964:	mov	r1, #0
   13968:	mov	r0, #1
   1396c:	bl	122b4 <error@plt>
   13970:	movw	r0, #20732	; 0x50fc
   13974:	movt	r0, #6
   13978:	bl	12398 <gettext@plt>
   1397c:	mov	r3, r0
   13980:	mov	r1, r3
   13984:	mov	r0, #0
   13988:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   1398c:	str	r0, [fp, #-20]	; 0xffffffec
   13990:	movw	r3, #50992	; 0xc730
   13994:	movt	r3, #7
   13998:	ldr	r3, [r3]
   1399c:	str	r3, [fp, #-16]
   139a0:	b	13b04 <__assert_fail@plt+0x1418>
   139a4:	movw	r3, #53324	; 0xd04c
   139a8:	movt	r3, #7
   139ac:	ldr	r3, [r3, #76]	; 0x4c
   139b0:	mov	r1, r3
   139b4:	mov	r0, #0
   139b8:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   139bc:	str	r0, [fp, #-20]	; 0xffffffec
   139c0:	movw	r3, #53324	; 0xd04c
   139c4:	movt	r3, #7
   139c8:	ldr	r3, [r3, #76]	; 0x4c
   139cc:	movw	r1, #20752	; 0x5110
   139d0:	movt	r1, #6
   139d4:	mov	r0, r3
   139d8:	bl	125e4 <fopen64@plt>
   139dc:	str	r0, [fp, #-16]
   139e0:	ldr	r3, [fp, #-16]
   139e4:	cmp	r3, #0
   139e8:	bne	13a18 <__assert_fail@plt+0x132c>
   139ec:	bl	12404 <__errno_location@plt>
   139f0:	mov	r3, r0
   139f4:	ldr	r4, [r3]
   139f8:	movw	r0, #20756	; 0x5114
   139fc:	movt	r0, #6
   13a00:	bl	12398 <gettext@plt>
   13a04:	mov	r2, r0
   13a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a0c:	mov	r1, r4
   13a10:	mov	r0, #1
   13a14:	bl	122b4 <error@plt>
   13a18:	ldr	r0, [fp, #-16]
   13a1c:	bl	12488 <fileno@plt>
   13a20:	str	r0, [fp, #-32]	; 0xffffffe0
   13a24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a28:	cmp	r3, #0
   13a2c:	bge	13a50 <__assert_fail@plt+0x1364>
   13a30:	movw	r3, #21200	; 0x52d0
   13a34:	movt	r3, #6
   13a38:	movw	r2, #610	; 0x262
   13a3c:	movw	r1, #19704	; 0x4cf8
   13a40:	movt	r1, #6
   13a44:	movw	r0, #20784	; 0x5130
   13a48:	movt	r0, #6
   13a4c:	bl	126ec <__assert_fail@plt>
   13a50:	movw	r3, #53324	; 0xd04c
   13a54:	movt	r3, #7
   13a58:	ldrb	r3, [r3, #80]	; 0x50
   13a5c:	cmp	r3, #0
   13a60:	beq	13af8 <__assert_fail@plt+0x140c>
   13a64:	sub	r3, fp, #260	; 0x104
   13a68:	mov	r1, r3
   13a6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a70:	bl	64ca4 <__assert_fail@plt+0x525b8>
   13a74:	mov	r3, r0
   13a78:	cmp	r3, #0
   13a7c:	bne	13af8 <__assert_fail@plt+0x140c>
   13a80:	sub	r3, fp, #156	; 0x9c
   13a84:	mov	r1, r3
   13a88:	mov	r0, #0
   13a8c:	bl	64ca4 <__assert_fail@plt+0x525b8>
   13a90:	mov	r3, r0
   13a94:	cmp	r3, #0
   13a98:	bne	13af8 <__assert_fail@plt+0x140c>
   13a9c:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   13aa0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   13aa4:	cmp	r1, r3
   13aa8:	cmpeq	r0, r2
   13aac:	bne	13af8 <__assert_fail@plt+0x140c>
   13ab0:	sub	r3, fp, #260	; 0x104
   13ab4:	ldrd	r0, [r3]
   13ab8:	ldrd	r2, [fp, #-156]	; 0xffffff64
   13abc:	cmp	r1, r3
   13ac0:	cmpeq	r0, r2
   13ac4:	bne	13af8 <__assert_fail@plt+0x140c>
   13ac8:	movw	r0, #20792	; 0x5138
   13acc:	movt	r0, #6
   13ad0:	bl	12398 <gettext@plt>
   13ad4:	mov	r2, r0
   13ad8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13adc:	str	r3, [sp]
   13ae0:	mov	r3, r2
   13ae4:	movw	r2, #20892	; 0x519c
   13ae8:	movt	r2, #6
   13aec:	mov	r1, #0
   13af0:	mov	r0, #1
   13af4:	bl	122b4 <error@plt>
   13af8:	mov	r1, #1
   13afc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b00:	bl	2b8a0 <__assert_fail@plt+0x191b4>
   13b04:	ldr	r0, [fp, #-16]
   13b08:	bl	2b31c <__assert_fail@plt+0x18c30>
   13b0c:	str	r0, [fp, #-24]	; 0xffffffe8
   13b10:	b	13b50 <__assert_fail@plt+0x1464>
   13b14:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   13b18:	eor	r3, r3, #1
   13b1c:	uxtb	r3, r3
   13b20:	cmp	r3, #0
   13b24:	beq	13b44 <__assert_fail@plt+0x1458>
   13b28:	mov	r3, #46	; 0x2e
   13b2c:	strh	r3, [fp, #-44]	; 0xffffffd4
   13b30:	sub	r3, fp, #44	; 0x2c
   13b34:	mov	r0, r3
   13b38:	bl	134d4 <__assert_fail@plt+0xde8>
   13b3c:	mov	r3, r0
   13b40:	b	13da8 <__assert_fail@plt+0x16bc>
   13b44:	ldr	r0, [fp, #-268]	; 0xfffffef4
   13b48:	bl	2b2a8 <__assert_fail@plt+0x18bbc>
   13b4c:	str	r0, [fp, #-24]	; 0xffffffe8
   13b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b54:	cmp	r3, #0
   13b58:	bne	13b60 <__assert_fail@plt+0x1474>
   13b5c:	bl	3e160 <__assert_fail@plt+0x2ba74>
   13b60:	mov	r3, #1
   13b64:	strb	r3, [fp, #-25]	; 0xffffffe7
   13b68:	sub	r3, fp, #48	; 0x30
   13b6c:	mov	r1, r3
   13b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b74:	bl	2b3a8 <__assert_fail@plt+0x18cbc>
   13b78:	str	r0, [fp, #-36]	; 0xffffffdc
   13b7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13b80:	cmp	r3, #0
   13b84:	bne	13c14 <__assert_fail@plt+0x1528>
   13b88:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13b8c:	cmp	r3, #3
   13b90:	beq	13bf0 <__assert_fail@plt+0x1504>
   13b94:	cmp	r3, #4
   13b98:	beq	13ba8 <__assert_fail@plt+0x14bc>
   13b9c:	cmp	r3, #2
   13ba0:	bne	13bf4 <__assert_fail@plt+0x1508>
   13ba4:	b	13d34 <__assert_fail@plt+0x1648>
   13ba8:	bl	12404 <__errno_location@plt>
   13bac:	mov	r3, r0
   13bb0:	ldr	r4, [r3]
   13bb4:	movw	r0, #20900	; 0x51a4
   13bb8:	movt	r0, #6
   13bbc:	bl	12398 <gettext@plt>
   13bc0:	mov	r2, r0
   13bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bc8:	mov	r1, r4
   13bcc:	mov	r0, #0
   13bd0:	bl	122b4 <error@plt>
   13bd4:	movw	r3, #53280	; 0xd020
   13bd8:	movt	r3, #7
   13bdc:	mov	r2, #1
   13be0:	str	r2, [r3, #28]
   13be4:	mov	r3, #0
   13be8:	strb	r3, [fp, #-25]	; 0xffffffe7
   13bec:	b	13d34 <__assert_fail@plt+0x1648>
   13bf0:	bl	3e160 <__assert_fail@plt+0x2ba74>
   13bf4:	movw	r3, #21200	; 0x52d0
   13bf8:	movt	r3, #6
   13bfc:	movw	r2, #675	; 0x2a3
   13c00:	movw	r1, #19704	; 0x4cf8
   13c04:	movt	r1, #6
   13c08:	movw	r0, #20916	; 0x51b4
   13c0c:	movt	r0, #6
   13c10:	bl	126ec <__assert_fail@plt>
   13c14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13c18:	ldrb	r3, [r3]
   13c1c:	cmp	r3, #0
   13c20:	bne	13cbc <__assert_fail@plt+0x15d0>
   13c24:	movw	r3, #53324	; 0xd04c
   13c28:	movt	r3, #7
   13c2c:	ldr	r3, [r3, #76]	; 0x4c
   13c30:	cmp	r3, #0
   13c34:	bne	13c60 <__assert_fail@plt+0x1574>
   13c38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13c3c:	mov	r0, #0
   13c40:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   13c44:	mov	r3, r0
   13c48:	movw	r2, #20636	; 0x509c
   13c4c:	movt	r2, #6
   13c50:	mov	r1, #2
   13c54:	mov	r0, #0
   13c58:	bl	122b4 <error@plt>
   13c5c:	b	13ca0 <__assert_fail@plt+0x15b4>
   13c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c64:	bl	2b4c4 <__assert_fail@plt+0x18dd8>
   13c68:	str	r0, [fp, #-40]	; 0xffffffd8
   13c6c:	movw	r0, #20956	; 0x51dc
   13c70:	movt	r0, #6
   13c74:	bl	12398 <gettext@plt>
   13c78:	mov	r3, r0
   13c7c:	str	r3, [sp, #4]
   13c80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13c84:	str	r3, [sp]
   13c88:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c8c:	movw	r2, #20988	; 0x51fc
   13c90:	movt	r2, #6
   13c94:	mov	r1, #0
   13c98:	mov	r0, #0
   13c9c:	bl	122b4 <error@plt>
   13ca0:	movw	r3, #53280	; 0xd020
   13ca4:	movt	r3, #7
   13ca8:	mov	r2, #1
   13cac:	str	r2, [r3, #28]
   13cb0:	mov	r3, #0
   13cb4:	strb	r3, [fp, #-25]	; 0xffffffe7
   13cb8:	b	13b68 <__assert_fail@plt+0x147c>
   13cbc:	movw	r3, #53324	; 0xd04c
   13cc0:	movt	r3, #7
   13cc4:	ldr	r3, [r3, #76]	; 0x4c
   13cc8:	cmp	r3, #0
   13ccc:	bne	13ce8 <__assert_fail@plt+0x15fc>
   13cd0:	mov	r1, #1
   13cd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13cd8:	bl	1c87c <__assert_fail@plt+0xa190>
   13cdc:	mov	r3, r0
   13ce0:	cmp	r3, #0
   13ce4:	bne	13d30 <__assert_fail@plt+0x1644>
   13ce8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13cec:	bl	123bc <strlen@plt>
   13cf0:	mov	r3, r0
   13cf4:	mov	r2, r3
   13cf8:	movw	r3, #53280	; 0xd020
   13cfc:	movt	r3, #7
   13d00:	str	r2, [r3, #20]
   13d04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13d08:	bl	134d4 <__assert_fail@plt+0xde8>
   13d0c:	mov	r3, r0
   13d10:	eor	r3, r3, #1
   13d14:	uxtb	r3, r3
   13d18:	cmp	r3, #0
   13d1c:	beq	13b68 <__assert_fail@plt+0x147c>
   13d20:	mov	r3, #0
   13d24:	strb	r3, [fp, #-25]	; 0xffffffe7
   13d28:	nop	{0}
   13d2c:	b	13d34 <__assert_fail@plt+0x1648>
   13d30:	nop	{0}
   13d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d38:	bl	2b518 <__assert_fail@plt+0x18e2c>
   13d3c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13d40:	cmp	r3, #0
   13d44:	beq	13da4 <__assert_fail@plt+0x16b8>
   13d48:	movw	r3, #53324	; 0xd04c
   13d4c:	movt	r3, #7
   13d50:	ldr	r3, [r3, #76]	; 0x4c
   13d54:	cmp	r3, #0
   13d58:	beq	13da4 <__assert_fail@plt+0x16b8>
   13d5c:	ldr	r0, [fp, #-16]
   13d60:	bl	120bc <ferror@plt>
   13d64:	mov	r3, r0
   13d68:	cmp	r3, #0
   13d6c:	bne	13d84 <__assert_fail@plt+0x1698>
   13d70:	ldr	r0, [fp, #-16]
   13d74:	bl	124d0 <fclose@plt>
   13d78:	mov	r3, r0
   13d7c:	cmp	r3, #0
   13d80:	beq	13da4 <__assert_fail@plt+0x16b8>
   13d84:	movw	r0, #21000	; 0x5208
   13d88:	movt	r0, #6
   13d8c:	bl	12398 <gettext@plt>
   13d90:	mov	r2, r0
   13d94:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d98:	mov	r1, #0
   13d9c:	mov	r0, #1
   13da0:	bl	122b4 <error@plt>
   13da4:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13da8:	mov	r0, r3
   13dac:	sub	sp, fp, #8
   13db0:	ldr	r4, [sp]
   13db4:	ldr	fp, [sp, #4]
   13db8:	add	sp, sp, #8
   13dbc:	pop	{pc}		; (ldr pc, [sp], #4)
   13dc0:	str	r4, [sp, #-12]!
   13dc4:	str	fp, [sp, #4]
   13dc8:	str	lr, [sp, #8]
   13dcc:	add	fp, sp, #8
   13dd0:	sub	sp, sp, #20
   13dd4:	str	r0, [fp, #-24]	; 0xffffffe8
   13dd8:	str	r1, [fp, #-28]	; 0xffffffe4
   13ddc:	mov	r3, #0
   13de0:	str	r3, [fp, #-16]
   13de4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13de8:	ldr	r3, [r3]
   13dec:	cmp	r3, #0
   13df0:	beq	13e08 <__assert_fail@plt+0x171c>
   13df4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13df8:	ldr	r3, [r3]
   13dfc:	mov	r0, r3
   13e00:	bl	398cc <__assert_fail@plt+0x271e0>
   13e04:	b	13e14 <__assert_fail@plt+0x1728>
   13e08:	movw	r0, #21020	; 0x521c
   13e0c:	movt	r0, #6
   13e10:	bl	398cc <__assert_fail@plt+0x271e0>
   13e14:	bl	1bdcc <__assert_fail@plt+0x96e0>
   13e18:	movw	r3, #53280	; 0xd020
   13e1c:	movt	r3, #7
   13e20:	mov	r2, #0
   13e24:	strb	r2, [r3, #40]	; 0x28
   13e28:	movw	r3, #53280	; 0xd020
   13e2c:	movt	r3, #7
   13e30:	mov	r2, #0
   13e34:	str	r2, [r3, #28]
   13e38:	movw	r3, #53280	; 0xd020
   13e3c:	movt	r3, #7
   13e40:	mov	r2, #0
   13e44:	strb	r2, [r3, #32]
   13e48:	movw	r3, #53280	; 0xd020
   13e4c:	movt	r3, #7
   13e50:	mvn	r2, #99	; 0x63
   13e54:	str	r2, [r3, #16]
   13e58:	bl	29590 <__assert_fail@plt+0x16ea4>
   13e5c:	mov	r3, r0
   13e60:	cmp	r3, #0
   13e64:	beq	13e6c <__assert_fail@plt+0x1780>
   13e68:	bl	291b8 <__assert_fail@plt+0x16acc>
   13e6c:	movw	r0, #21028	; 0x5224
   13e70:	movt	r0, #6
   13e74:	bl	1d75c <__assert_fail@plt+0xb070>
   13e78:	mov	r2, r0
   13e7c:	movw	r3, #53280	; 0xd020
   13e80:	movt	r3, #7
   13e84:	str	r2, [r3, #36]	; 0x24
   13e88:	movw	r3, #53280	; 0xd020
   13e8c:	movt	r3, #7
   13e90:	ldr	r3, [r3, #36]	; 0x24
   13e94:	cmp	r3, #0
   13e98:	bne	13ec8 <__assert_fail@plt+0x17dc>
   13e9c:	bl	12404 <__errno_location@plt>
   13ea0:	mov	r3, r0
   13ea4:	ldr	r4, [r3]
   13ea8:	movw	r0, #21032	; 0x5228
   13eac:	movt	r0, #6
   13eb0:	bl	12398 <gettext@plt>
   13eb4:	mov	r3, r0
   13eb8:	mov	r2, r3
   13ebc:	mov	r1, r4
   13ec0:	mov	r0, #1
   13ec4:	bl	122b4 <error@plt>
   13ec8:	movw	r0, #53324	; 0xd04c
   13ecc:	movt	r0, #7
   13ed0:	bl	1d070 <__assert_fail@plt+0xa984>
   13ed4:	movw	r1, #19916	; 0x4dcc
   13ed8:	movt	r1, #6
   13edc:	mov	r0, #6
   13ee0:	bl	12518 <setlocale@plt>
   13ee4:	movw	r1, #21076	; 0x5254
   13ee8:	movt	r1, #6
   13eec:	movw	r0, #21100	; 0x526c
   13ef0:	movt	r0, #6
   13ef4:	bl	12620 <bindtextdomain@plt>
   13ef8:	movw	r0, #21100	; 0x526c
   13efc:	movt	r0, #6
   13f00:	bl	121c4 <textdomain@plt>
   13f04:	movw	r0, #47596	; 0xb9ec
   13f08:	movt	r0, #2
   13f0c:	bl	64c7c <__assert_fail@plt+0x52590>
   13f10:	mov	r3, r0
   13f14:	cmp	r3, #0
   13f18:	beq	13f48 <__assert_fail@plt+0x185c>
   13f1c:	bl	12404 <__errno_location@plt>
   13f20:	mov	r3, r0
   13f24:	ldr	r4, [r3]
   13f28:	movw	r0, #21112	; 0x5278
   13f2c:	movt	r0, #6
   13f30:	bl	12398 <gettext@plt>
   13f34:	mov	r3, r0
   13f38:	mov	r2, r3
   13f3c:	mov	r1, r4
   13f40:	mov	r0, #1
   13f44:	bl	122b4 <error@plt>
   13f48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f50:	bl	1cd4c <__assert_fail@plt+0xa660>
   13f54:	str	r0, [fp, #-16]
   13f58:	movw	r3, #53324	; 0xd04c
   13f5c:	movt	r3, #7
   13f60:	ldr	r3, [r3, #44]	; 0x2c
   13f64:	and	r3, r3, #2
   13f68:	cmp	r3, #0
   13f6c:	beq	13f84 <__assert_fail@plt+0x1898>
   13f70:	movw	r3, #53324	; 0xd04c
   13f74:	movt	r3, #7
   13f78:	movw	r2, #50472	; 0xc528
   13f7c:	movt	r2, #1
   13f80:	str	r2, [r3, #52]	; 0x34
   13f84:	movw	r3, #53324	; 0xd04c
   13f88:	movt	r3, #7
   13f8c:	ldr	r3, [r3, #44]	; 0x2c
   13f90:	and	r3, r3, #128	; 0x80
   13f94:	cmp	r3, #0
   13f98:	beq	13fc8 <__assert_fail@plt+0x18dc>
   13f9c:	movw	r3, #50984	; 0xc728
   13fa0:	movt	r3, #7
   13fa4:	ldr	r4, [r3]
   13fa8:	ldr	r0, [pc, #140]	; 1403c <__assert_fail@plt+0x1950>
   13fac:	bl	12170 <ctime@plt>
   13fb0:	mov	r3, r0
   13fb4:	mov	r2, r3
   13fb8:	movw	r1, #21148	; 0x529c
   13fbc:	movt	r1, #6
   13fc0:	mov	r0, r4
   13fc4:	bl	123f8 <fprintf@plt>
   13fc8:	ldr	r2, [fp, #-16]
   13fcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fd4:	bl	19e70 <__assert_fail@plt+0x7784>
   13fd8:	str	r0, [fp, #-20]	; 0xffffffec
   13fdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13fe0:	ldr	r3, [fp, #-16]
   13fe4:	sub	r0, r2, r3
   13fe8:	ldr	r3, [fp, #-16]
   13fec:	lsl	r3, r3, #2
   13ff0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13ff4:	add	r3, r2, r3
   13ff8:	mov	r1, r3
   13ffc:	bl	13818 <__assert_fail@plt+0x112c>
   14000:	mov	r3, r0
   14004:	cmp	r3, #0
   14008:	beq	14018 <__assert_fail@plt+0x192c>
   1400c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14010:	bl	16be0 <__assert_fail@plt+0x44f4>
   14014:	bl	1c14c <__assert_fail@plt+0x9a60>
   14018:	movw	r3, #53280	; 0xd020
   1401c:	movt	r3, #7
   14020:	ldr	r3, [r3, #28]
   14024:	mov	r0, r3
   14028:	sub	sp, fp, #8
   1402c:	ldr	r4, [sp]
   14030:	ldr	fp, [sp, #4]
   14034:	add	sp, sp, #8
   14038:	pop	{pc}		; (ldr pc, [sp], #4)
   1403c:	andeq	sp, r7, r8, rrx
   14040:	push	{fp}		; (str fp, [sp, #-4]!)
   14044:	add	fp, sp, #0
   14048:	sub	sp, sp, #12
   1404c:	str	r0, [fp, #-8]
   14050:	movw	r3, #49824	; 0xc2a0
   14054:	movt	r3, #7
   14058:	ldr	r2, [r3]
   1405c:	ldr	r3, [fp, #-8]
   14060:	str	r2, [r3]
   14064:	mov	r3, #1
   14068:	mov	r0, r3
   1406c:	add	sp, fp, #0
   14070:	pop	{fp}		; (ldr fp, [sp], #4)
   14074:	bx	lr
   14078:	str	fp, [sp, #-8]!
   1407c:	str	lr, [sp, #4]
   14080:	add	fp, sp, #4
   14084:	sub	sp, sp, #24
   14088:	sub	ip, fp, #20
   1408c:	stm	ip, {r0, r1}
   14090:	sub	r1, fp, #28
   14094:	stm	r1, {r2, r3}
   14098:	ldr	r3, [fp, #-20]	; 0xffffffec
   1409c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   140a0:	mov	r1, r2
   140a4:	mov	r0, r3
   140a8:	bl	12494 <difftime@plt>
   140ac:	vmov.f64	d5, d0
   140b0:	ldr	r2, [fp, #-16]
   140b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140b8:	sub	r3, r2, r3
   140bc:	vmov	s15, r3
   140c0:	vcvt.f64.s32	d7, s15
   140c4:	vldr	d6, [pc, #36]	; 140f0 <__assert_fail@plt+0x1a04>
   140c8:	vmul.f64	d7, d7, d6
   140cc:	vadd.f64	d7, d5, d7
   140d0:	vstr	d7, [fp, #-12]
   140d4:	ldrd	r2, [fp, #-12]
   140d8:	vmov	d7, r2, r3
   140dc:	vmov.f64	d0, d7
   140e0:	sub	sp, fp, #4
   140e4:	ldr	fp, [sp]
   140e8:	add	sp, sp, #4
   140ec:	pop	{pc}		; (ldr pc, [sp], #4)
   140f0:	stmda	r6!, {r0, r2, r4, r7, r9, sl, ip, lr, pc}
   140f4:	cdpcc	14, 1, cr2, cr1, cr11, {0}
   140f8:	str	fp, [sp, #-8]!
   140fc:	str	lr, [sp, #4]
   14100:	add	fp, sp, #4
   14104:	sub	sp, sp, #24
   14108:	sub	ip, fp, #20
   1410c:	stm	ip, {r0, r1}
   14110:	sub	r1, fp, #28
   14114:	stm	r1, {r2, r3}
   14118:	ldr	r2, [fp, #-20]	; 0xffffffec
   1411c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14120:	cmp	r2, r3
   14124:	bne	14140 <__assert_fail@plt+0x1a54>
   14128:	ldr	r2, [fp, #-16]
   1412c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14130:	cmp	r2, r3
   14134:	bne	14140 <__assert_fail@plt+0x1a54>
   14138:	mov	r3, #0
   1413c:	b	14174 <__assert_fail@plt+0x1a88>
   14140:	sub	r3, fp, #28
   14144:	ldm	r3, {r2, r3}
   14148:	sub	r1, fp, #20
   1414c:	ldm	r1, {r0, r1}
   14150:	bl	14078 <__assert_fail@plt+0x198c>
   14154:	vstr	d0, [fp, #-12]
   14158:	vldr	d7, [fp, #-12]
   1415c:	vcmpe.f64	d7, #0.0
   14160:	vmrs	APSR_nzcv, fpscr
   14164:	bpl	14170 <__assert_fail@plt+0x1a84>
   14168:	mvn	r3, #0
   1416c:	b	14174 <__assert_fail@plt+0x1a88>
   14170:	mov	r3, #1
   14174:	mov	r0, r3
   14178:	sub	sp, fp, #4
   1417c:	ldr	fp, [sp]
   14180:	add	sp, sp, #4
   14184:	pop	{pc}		; (ldr pc, [sp], #4)
   14188:	str	fp, [sp, #-8]!
   1418c:	str	lr, [sp, #4]
   14190:	add	fp, sp, #4
   14194:	sub	sp, sp, #24
   14198:	sub	ip, fp, #20
   1419c:	stm	ip, {r0, r1}
   141a0:	str	r2, [fp, #-24]	; 0xffffffe8
   141a4:	str	r3, [fp, #-28]	; 0xffffffe4
   141a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141ac:	ldr	r3, [r3, #44]	; 0x2c
   141b0:	cmp	r3, #1
   141b4:	beq	141fc <__assert_fail@plt+0x1b10>
   141b8:	cmp	r3, #0
   141bc:	beq	141cc <__assert_fail@plt+0x1ae0>
   141c0:	cmp	r3, #2
   141c4:	beq	14224 <__assert_fail@plt+0x1b38>
   141c8:	b	14284 <__assert_fail@plt+0x1b98>
   141cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141d0:	add	r3, r3, #48	; 0x30
   141d4:	ldm	r3, {r2, r3}
   141d8:	sub	r1, fp, #20
   141dc:	ldm	r1, {r0, r1}
   141e0:	bl	140f8 <__assert_fail@plt+0x1a0c>
   141e4:	mov	r3, r0
   141e8:	cmp	r3, #0
   141ec:	movgt	r3, #1
   141f0:	movle	r3, #0
   141f4:	uxtb	r3, r3
   141f8:	b	142a4 <__assert_fail@plt+0x1bb8>
   141fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14200:	add	r3, r3, #48	; 0x30
   14204:	ldm	r3, {r2, r3}
   14208:	sub	r1, fp, #20
   1420c:	ldm	r1, {r0, r1}
   14210:	bl	140f8 <__assert_fail@plt+0x1a0c>
   14214:	mov	r3, r0
   14218:	lsr	r3, r3, #31
   1421c:	uxtb	r3, r3
   14220:	b	142a4 <__assert_fail@plt+0x1bb8>
   14224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14228:	add	r3, r3, #48	; 0x30
   1422c:	ldm	r3, {r2, r3}
   14230:	sub	r1, fp, #20
   14234:	ldm	r1, {r0, r1}
   14238:	bl	14078 <__assert_fail@plt+0x198c>
   1423c:	vstr	d0, [fp, #-12]
   14240:	vldr	d7, [fp, #-12]
   14244:	vcmpe.f64	d7, #0.0
   14248:	vmrs	APSR_nzcv, fpscr
   1424c:	ble	14274 <__assert_fail@plt+0x1b88>
   14250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14254:	vmov	s15, r3
   14258:	vcvt.f64.s32	d7, s15
   1425c:	vldr	d6, [fp, #-12]
   14260:	vcmpe.f64	d6, d7
   14264:	vmrs	APSR_nzcv, fpscr
   14268:	bhi	14274 <__assert_fail@plt+0x1b88>
   1426c:	mov	r3, #1
   14270:	b	14278 <__assert_fail@plt+0x1b8c>
   14274:	mov	r3, #0
   14278:	and	r3, r3, #1
   1427c:	uxtb	r3, r3
   14280:	b	142a4 <__assert_fail@plt+0x1bb8>
   14284:	movw	r3, #21968	; 0x55d0
   14288:	movt	r3, #6
   1428c:	mov	r2, #138	; 0x8a
   14290:	movw	r1, #21224	; 0x52e8
   14294:	movt	r1, #6
   14298:	movw	r0, #21232	; 0x52f0
   1429c:	movt	r0, #6
   142a0:	bl	126ec <__assert_fail@plt>
   142a4:	mov	r0, r3
   142a8:	sub	sp, fp, #4
   142ac:	ldr	fp, [sp]
   142b0:	add	sp, sp, #4
   142b4:	pop	{pc}		; (ldr pc, [sp], #4)
   142b8:	str	fp, [sp, #-8]!
   142bc:	str	lr, [sp, #4]
   142c0:	add	fp, sp, #4
   142c4:	sub	sp, sp, #24
   142c8:	str	r0, [fp, #-16]
   142cc:	str	r1, [fp, #-20]	; 0xffffffec
   142d0:	str	r2, [fp, #-24]	; 0xffffffe8
   142d4:	sub	r3, fp, #12
   142d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   142dc:	mov	r0, r3
   142e0:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   142e4:	mov	r3, #60	; 0x3c
   142e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   142ec:	sub	r1, fp, #12
   142f0:	ldm	r1, {r0, r1}
   142f4:	bl	14188 <__assert_fail@plt+0x1a9c>
   142f8:	mov	r3, r0
   142fc:	mov	r0, r3
   14300:	sub	sp, fp, #4
   14304:	ldr	fp, [sp]
   14308:	add	sp, sp, #4
   1430c:	pop	{pc}		; (ldr pc, [sp], #4)
   14310:	str	fp, [sp, #-8]!
   14314:	str	lr, [sp, #4]
   14318:	add	fp, sp, #4
   1431c:	sub	sp, sp, #16
   14320:	str	r0, [fp, #-8]
   14324:	str	r1, [fp, #-12]
   14328:	str	r2, [fp, #-16]
   1432c:	ldr	r3, [fp, #-16]
   14330:	ldr	r3, [r3, #156]	; 0x9c
   14334:	cmp	r3, #0
   14338:	beq	14360 <__assert_fail@plt+0x1c74>
   1433c:	ldr	r3, [fp, #-16]
   14340:	ldr	r3, [r3, #156]	; 0x9c
   14344:	mov	r2, r3
   14348:	ldr	r1, [fp, #-12]
   1434c:	ldr	r0, [fp, #-8]
   14350:	bl	1d2ac <__assert_fail@plt+0xabc0>
   14354:	mov	r3, r0
   14358:	cmp	r3, #0
   1435c:	beq	14380 <__assert_fail@plt+0x1c94>
   14360:	ldr	r3, [fp, #-16]
   14364:	ldr	r3, [r3, #160]	; 0xa0
   14368:	mov	r2, r3
   1436c:	ldr	r1, [fp, #-12]
   14370:	ldr	r0, [fp, #-8]
   14374:	bl	1d2ac <__assert_fail@plt+0xabc0>
   14378:	mov	r3, r0
   1437c:	b	14384 <__assert_fail@plt+0x1c98>
   14380:	mov	r3, #0
   14384:	mov	r0, r3
   14388:	sub	sp, fp, #4
   1438c:	ldr	fp, [sp]
   14390:	add	sp, sp, #4
   14394:	pop	{pc}		; (ldr pc, [sp], #4)
   14398:	str	fp, [sp, #-8]!
   1439c:	str	lr, [sp, #4]
   143a0:	add	fp, sp, #4
   143a4:	sub	sp, sp, #24
   143a8:	str	r0, [fp, #-16]
   143ac:	str	r1, [fp, #-20]	; 0xffffffec
   143b0:	str	r2, [fp, #-24]	; 0xffffffe8
   143b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143b8:	ldr	r3, [r3, #44]	; 0x2c
   143bc:	cmp	r3, #0
   143c0:	beq	143e4 <__assert_fail@plt+0x1cf8>
   143c4:	movw	r3, #21984	; 0x55e0
   143c8:	movt	r3, #6
   143cc:	mov	r2, #166	; 0xa6
   143d0:	movw	r1, #21224	; 0x52e8
   143d4:	movt	r1, #6
   143d8:	movw	r0, #21236	; 0x52f4
   143dc:	movt	r0, #6
   143e0:	bl	126ec <__assert_fail@plt>
   143e4:	sub	r3, fp, #12
   143e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   143ec:	mov	r0, r3
   143f0:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   143f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143f8:	add	r3, r3, #48	; 0x30
   143fc:	ldm	r3, {r2, r3}
   14400:	sub	r1, fp, #12
   14404:	ldm	r1, {r0, r1}
   14408:	bl	140f8 <__assert_fail@plt+0x1a0c>
   1440c:	mov	r3, r0
   14410:	cmp	r3, #0
   14414:	movgt	r3, #1
   14418:	movle	r3, #0
   1441c:	uxtb	r3, r3
   14420:	mov	r0, r3
   14424:	sub	sp, fp, #4
   14428:	ldr	fp, [sp]
   1442c:	add	sp, sp, #4
   14430:	pop	{pc}		; (ldr pc, [sp], #4)
   14434:	str	fp, [sp, #-8]!
   14438:	str	lr, [sp, #4]
   1443c:	add	fp, sp, #4
   14440:	sub	sp, sp, #24
   14444:	str	r0, [fp, #-16]
   14448:	str	r1, [fp, #-20]	; 0xffffffec
   1444c:	str	r2, [fp, #-24]	; 0xffffffe8
   14450:	sub	r3, fp, #12
   14454:	ldr	r1, [fp, #-20]	; 0xffffffec
   14458:	mov	r0, r3
   1445c:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   14460:	movw	r3, #20864	; 0x5180
   14464:	movt	r3, #1
   14468:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1446c:	sub	r1, fp, #12
   14470:	ldm	r1, {r0, r1}
   14474:	bl	14188 <__assert_fail@plt+0x1a9c>
   14478:	mov	r3, r0
   1447c:	mov	r0, r3
   14480:	sub	sp, fp, #4
   14484:	ldr	fp, [sp]
   14488:	add	sp, sp, #4
   1448c:	pop	{pc}		; (ldr pc, [sp], #4)
   14490:	push	{fp}		; (str fp, [sp, #-4]!)
   14494:	add	fp, sp, #0
   14498:	sub	sp, sp, #20
   1449c:	str	r0, [fp, #-8]
   144a0:	str	r1, [fp, #-12]
   144a4:	str	r2, [fp, #-16]
   144a8:	mov	r3, #1
   144ac:	mov	r0, r3
   144b0:	add	sp, fp, #0
   144b4:	pop	{fp}		; (ldr fp, [sp], #4)
   144b8:	bx	lr
   144bc:	str	fp, [sp, #-8]!
   144c0:	str	lr, [sp, #4]
   144c4:	add	fp, sp, #4
   144c8:	sub	sp, sp, #24
   144cc:	str	r0, [fp, #-16]
   144d0:	str	r1, [fp, #-20]	; 0xffffffec
   144d4:	str	r2, [fp, #-24]	; 0xffffffe8
   144d8:	sub	r3, fp, #12
   144dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   144e0:	mov	r0, r3
   144e4:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   144e8:	mov	r3, #60	; 0x3c
   144ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144f0:	sub	r1, fp, #12
   144f4:	ldm	r1, {r0, r1}
   144f8:	bl	14188 <__assert_fail@plt+0x1a9c>
   144fc:	mov	r3, r0
   14500:	mov	r0, r3
   14504:	sub	sp, fp, #4
   14508:	ldr	fp, [sp]
   1450c:	add	sp, sp, #4
   14510:	pop	{pc}		; (ldr pc, [sp], #4)
   14514:	str	fp, [sp, #-8]!
   14518:	str	lr, [sp, #4]
   1451c:	add	fp, sp, #4
   14520:	sub	sp, sp, #24
   14524:	str	r0, [fp, #-16]
   14528:	str	r1, [fp, #-20]	; 0xffffffec
   1452c:	str	r2, [fp, #-24]	; 0xffffffe8
   14530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14534:	ldr	r3, [r3, #44]	; 0x2c
   14538:	cmp	r3, #0
   1453c:	beq	14560 <__assert_fail@plt+0x1e74>
   14540:	movw	r3, #21996	; 0x55ec
   14544:	movt	r3, #6
   14548:	mov	r2, #199	; 0xc7
   1454c:	movw	r1, #21224	; 0x52e8
   14550:	movt	r1, #6
   14554:	movw	r0, #21236	; 0x52f4
   14558:	movt	r0, #6
   1455c:	bl	126ec <__assert_fail@plt>
   14560:	sub	r3, fp, #12
   14564:	ldr	r1, [fp, #-20]	; 0xffffffec
   14568:	mov	r0, r3
   1456c:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   14570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14574:	add	r3, r3, #48	; 0x30
   14578:	ldm	r3, {r2, r3}
   1457c:	sub	r1, fp, #12
   14580:	ldm	r1, {r0, r1}
   14584:	bl	140f8 <__assert_fail@plt+0x1a0c>
   14588:	mov	r3, r0
   1458c:	cmp	r3, #0
   14590:	movgt	r3, #1
   14594:	movle	r3, #0
   14598:	uxtb	r3, r3
   1459c:	mov	r0, r3
   145a0:	sub	sp, fp, #4
   145a4:	ldr	fp, [sp]
   145a8:	add	sp, sp, #4
   145ac:	pop	{pc}		; (ldr pc, [sp], #4)
   145b0:	str	fp, [sp, #-8]!
   145b4:	str	lr, [sp, #4]
   145b8:	add	fp, sp, #4
   145bc:	sub	sp, sp, #16
   145c0:	str	r0, [fp, #-8]
   145c4:	str	r1, [fp, #-12]
   145c8:	str	r2, [fp, #-16]
   145cc:	ldr	r3, [fp, #-16]
   145d0:	ldr	r3, [r3, #156]	; 0x9c
   145d4:	cmp	r3, #0
   145d8:	beq	145f4 <__assert_fail@plt+0x1f08>
   145dc:	ldr	r3, [fp, #-16]
   145e0:	ldr	r3, [r3, #156]	; 0x9c
   145e4:	mov	r2, r3
   145e8:	ldr	r1, [fp, #-12]
   145ec:	ldr	r0, [fp, #-8]
   145f0:	bl	1d2ac <__assert_fail@plt+0xabc0>
   145f4:	ldr	r3, [fp, #-16]
   145f8:	ldr	r3, [r3, #160]	; 0xa0
   145fc:	mov	r2, r3
   14600:	ldr	r1, [fp, #-12]
   14604:	ldr	r0, [fp, #-8]
   14608:	bl	1d2ac <__assert_fail@plt+0xabc0>
   1460c:	mov	r3, r0
   14610:	mov	r0, r3
   14614:	sub	sp, fp, #4
   14618:	ldr	fp, [sp]
   1461c:	add	sp, sp, #4
   14620:	pop	{pc}		; (ldr pc, [sp], #4)
   14624:	str	fp, [sp, #-8]!
   14628:	str	lr, [sp, #4]
   1462c:	add	fp, sp, #4
   14630:	sub	sp, sp, #24
   14634:	str	r0, [fp, #-16]
   14638:	str	r1, [fp, #-20]	; 0xffffffec
   1463c:	str	r2, [fp, #-24]	; 0xffffffe8
   14640:	sub	r3, fp, #12
   14644:	ldr	r1, [fp, #-20]	; 0xffffffec
   14648:	mov	r0, r3
   1464c:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   14650:	movw	r3, #20864	; 0x5180
   14654:	movt	r3, #1
   14658:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1465c:	sub	r1, fp, #12
   14660:	ldm	r1, {r0, r1}
   14664:	bl	14188 <__assert_fail@plt+0x1a9c>
   14668:	mov	r3, r0
   1466c:	mov	r0, r3
   14670:	sub	sp, fp, #4
   14674:	ldr	fp, [sp]
   14678:	add	sp, sp, #4
   1467c:	pop	{pc}		; (ldr pc, [sp], #4)
   14680:	str	fp, [sp, #-8]!
   14684:	str	lr, [sp, #4]
   14688:	add	fp, sp, #4
   1468c:	sub	sp, sp, #8
   14690:	str	r0, [fp, #-8]
   14694:	movw	r3, #53280	; 0xd020
   14698:	movt	r3, #7
   1469c:	ldr	r0, [r3, #16]
   146a0:	movw	r3, #53280	; 0xd020
   146a4:	movt	r3, #7
   146a8:	ldr	r3, [r3, #12]
   146ac:	ldr	r2, [fp, #-8]
   146b0:	mov	r1, r3
   146b4:	bl	12068 <unlinkat@plt>
   146b8:	mov	r3, r0
   146bc:	cmp	r3, #0
   146c0:	moveq	r3, #1
   146c4:	movne	r3, #0
   146c8:	uxtb	r3, r3
   146cc:	mov	r0, r3
   146d0:	sub	sp, fp, #4
   146d4:	ldr	fp, [sp]
   146d8:	add	sp, sp, #4
   146dc:	pop	{pc}		; (ldr pc, [sp], #4)
   146e0:	strd	r4, [sp, #-16]!
   146e4:	str	fp, [sp, #8]
   146e8:	str	lr, [sp, #12]
   146ec:	add	fp, sp, #12
   146f0:	sub	sp, sp, #24
   146f4:	str	r0, [fp, #-24]	; 0xffffffe8
   146f8:	str	r1, [fp, #-28]	; 0xffffffe4
   146fc:	str	r2, [fp, #-32]	; 0xffffffe0
   14700:	movw	r3, #53280	; 0xd020
   14704:	movt	r3, #7
   14708:	ldr	r3, [r3, #12]
   1470c:	movw	r1, #21276	; 0x531c
   14710:	movt	r1, #6
   14714:	mov	r0, r3
   14718:	bl	11ffc <strcmp@plt>
   1471c:	mov	r3, r0
   14720:	cmp	r3, #0
   14724:	beq	14860 <__assert_fail@plt+0x2174>
   14728:	mov	r3, #0
   1472c:	str	r3, [fp, #-16]
   14730:	movw	r3, #53280	; 0xd020
   14734:	movt	r3, #7
   14738:	ldrb	r3, [r3, #4]
   1473c:	cmp	r3, #0
   14740:	beq	14764 <__assert_fail@plt+0x2078>
   14744:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14748:	ldr	r3, [r3, #16]
   1474c:	and	r3, r3, #61440	; 0xf000
   14750:	cmp	r3, #16384	; 0x4000
   14754:	bne	14764 <__assert_fail@plt+0x2078>
   14758:	ldr	r3, [fp, #-16]
   1475c:	orr	r3, r3, #512	; 0x200
   14760:	str	r3, [fp, #-16]
   14764:	ldr	r0, [fp, #-16]
   14768:	bl	14680 <__assert_fail@plt+0x1f94>
   1476c:	mov	r3, r0
   14770:	cmp	r3, #0
   14774:	beq	14780 <__assert_fail@plt+0x2094>
   14778:	mov	r3, #1
   1477c:	b	14864 <__assert_fail@plt+0x2178>
   14780:	bl	12404 <__errno_location@plt>
   14784:	mov	r3, r0
   14788:	ldr	r3, [r3]
   1478c:	cmp	r3, #2
   14790:	bne	147c0 <__assert_fail@plt+0x20d4>
   14794:	movw	r3, #53324	; 0xd04c
   14798:	movt	r3, #7
   1479c:	ldrb	r3, [r3, #14]
   147a0:	cmp	r3, #0
   147a4:	beq	147c0 <__assert_fail@plt+0x20d4>
   147a8:	bl	12404 <__errno_location@plt>
   147ac:	mov	r2, r0
   147b0:	mov	r3, #0
   147b4:	str	r3, [r2]
   147b8:	mov	r3, #1
   147bc:	b	14864 <__assert_fail@plt+0x2178>
   147c0:	bl	12404 <__errno_location@plt>
   147c4:	mov	r3, r0
   147c8:	ldr	r3, [r3]
   147cc:	cmp	r3, #21
   147d0:	bne	1480c <__assert_fail@plt+0x2120>
   147d4:	ldr	r3, [fp, #-16]
   147d8:	and	r3, r3, #512	; 0x200
   147dc:	cmp	r3, #0
   147e0:	bne	1480c <__assert_fail@plt+0x2120>
   147e4:	ldr	r3, [fp, #-16]
   147e8:	orr	r3, r3, #512	; 0x200
   147ec:	str	r3, [fp, #-16]
   147f0:	ldr	r0, [fp, #-16]
   147f4:	bl	14680 <__assert_fail@plt+0x1f94>
   147f8:	mov	r3, r0
   147fc:	cmp	r3, #0
   14800:	beq	1480c <__assert_fail@plt+0x2120>
   14804:	mov	r3, #1
   14808:	b	14864 <__assert_fail@plt+0x2178>
   1480c:	bl	12404 <__errno_location@plt>
   14810:	mov	r3, r0
   14814:	ldr	r4, [r3]
   14818:	movw	r0, #21280	; 0x5320
   1481c:	movt	r0, #6
   14820:	bl	12398 <gettext@plt>
   14824:	mov	r5, r0
   14828:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1482c:	mov	r0, #0
   14830:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   14834:	mov	r3, r0
   14838:	mov	r2, r5
   1483c:	mov	r1, r4
   14840:	mov	r0, #0
   14844:	bl	122b4 <error@plt>
   14848:	movw	r3, #53280	; 0xd020
   1484c:	movt	r3, #7
   14850:	mov	r2, #1
   14854:	str	r2, [r3, #28]
   14858:	mov	r3, #0
   1485c:	b	14864 <__assert_fail@plt+0x2178>
   14860:	mov	r3, #1
   14864:	mov	r0, r3
   14868:	sub	sp, fp, #12
   1486c:	ldrd	r4, [sp]
   14870:	ldr	fp, [sp, #8]
   14874:	add	sp, sp, #12
   14878:	pop	{pc}		; (ldr pc, [sp], #4)
   1487c:	str	r4, [sp, #-12]!
   14880:	str	fp, [sp, #4]
   14884:	str	lr, [sp, #8]
   14888:	add	fp, sp, #8
   1488c:	sub	sp, sp, #36	; 0x24
   14890:	str	r0, [fp, #-32]	; 0xffffffe0
   14894:	str	r1, [fp, #-36]	; 0xffffffdc
   14898:	str	r2, [fp, #-40]	; 0xffffffd8
   1489c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   148a0:	ldr	r3, [r3, #16]
   148a4:	and	r3, r3, #61440	; 0xf000
   148a8:	cmp	r3, #16384	; 0x4000
   148ac:	bne	14afc <__assert_fail@plt+0x2410>
   148b0:	mov	r3, #1
   148b4:	strb	r3, [fp, #-17]	; 0xffffffef
   148b8:	bl	12404 <__errno_location@plt>
   148bc:	mov	r2, r0
   148c0:	mov	r3, #0
   148c4:	str	r3, [r2]
   148c8:	movw	r3, #53280	; 0xd020
   148cc:	movt	r3, #7
   148d0:	ldr	r0, [r3, #16]
   148d4:	movw	r3, #53280	; 0xd020
   148d8:	movt	r3, #7
   148dc:	ldr	r3, [r3, #12]
   148e0:	mov	r2, #18688	; 0x4900
   148e4:	movt	r2, #10
   148e8:	mov	r1, r3
   148ec:	bl	31ab4 <__assert_fail@plt+0x1f3c8>
   148f0:	str	r0, [fp, #-24]	; 0xffffffe8
   148f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148f8:	cmp	r3, #0
   148fc:	bge	14948 <__assert_fail@plt+0x225c>
   14900:	bl	12404 <__errno_location@plt>
   14904:	mov	r3, r0
   14908:	ldr	r4, [r3]
   1490c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14910:	mov	r0, #0
   14914:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   14918:	mov	r3, r0
   1491c:	movw	r2, #21300	; 0x5334
   14920:	movt	r2, #6
   14924:	mov	r1, r4
   14928:	mov	r0, #0
   1492c:	bl	122b4 <error@plt>
   14930:	movw	r3, #53280	; 0xd020
   14934:	movt	r3, #7
   14938:	mov	r2, #1
   1493c:	str	r2, [r3, #28]
   14940:	mov	r3, #0
   14944:	b	14b34 <__assert_fail@plt+0x2448>
   14948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1494c:	bl	125a8 <fdopendir@plt>
   14950:	str	r0, [fp, #-28]	; 0xffffffe4
   14954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14958:	cmp	r3, #0
   1495c:	bne	149b0 <__assert_fail@plt+0x22c4>
   14960:	bl	12404 <__errno_location@plt>
   14964:	mov	r3, r0
   14968:	ldr	r4, [r3]
   1496c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14970:	mov	r0, #0
   14974:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   14978:	mov	r3, r0
   1497c:	movw	r2, #21300	; 0x5334
   14980:	movt	r2, #6
   14984:	mov	r1, r4
   14988:	mov	r0, #0
   1498c:	bl	122b4 <error@plt>
   14990:	movw	r3, #53280	; 0xd020
   14994:	movt	r3, #7
   14998:	mov	r2, #1
   1499c:	str	r2, [r3, #28]
   149a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149a4:	bl	126a4 <close@plt>
   149a8:	mov	r3, #0
   149ac:	b	14b34 <__assert_fail@plt+0x2448>
   149b0:	bl	12404 <__errno_location@plt>
   149b4:	mov	r2, r0
   149b8:	mov	r3, #0
   149bc:	str	r3, [r2]
   149c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   149c4:	bl	1259c <readdir64@plt>
   149c8:	str	r0, [fp, #-16]
   149cc:	b	14a28 <__assert_fail@plt+0x233c>
   149d0:	ldr	r3, [fp, #-16]
   149d4:	ldrb	r3, [r3, #19]
   149d8:	cmp	r3, #46	; 0x2e
   149dc:	bne	14a10 <__assert_fail@plt+0x2324>
   149e0:	ldr	r3, [fp, #-16]
   149e4:	ldrb	r3, [r3, #20]
   149e8:	cmp	r3, #0
   149ec:	beq	14a1c <__assert_fail@plt+0x2330>
   149f0:	ldr	r3, [fp, #-16]
   149f4:	ldrb	r3, [r3, #20]
   149f8:	cmp	r3, #46	; 0x2e
   149fc:	bne	14a10 <__assert_fail@plt+0x2324>
   14a00:	ldr	r3, [fp, #-16]
   14a04:	ldrb	r3, [r3, #21]
   14a08:	cmp	r3, #0
   14a0c:	beq	14a1c <__assert_fail@plt+0x2330>
   14a10:	mov	r3, #0
   14a14:	strb	r3, [fp, #-17]	; 0xffffffef
   14a18:	b	14a34 <__assert_fail@plt+0x2348>
   14a1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a20:	bl	1259c <readdir64@plt>
   14a24:	str	r0, [fp, #-16]
   14a28:	ldr	r3, [fp, #-16]
   14a2c:	cmp	r3, #0
   14a30:	bne	149d0 <__assert_fail@plt+0x22e4>
   14a34:	bl	12404 <__errno_location@plt>
   14a38:	mov	r3, r0
   14a3c:	ldr	r3, [r3]
   14a40:	cmp	r3, #0
   14a44:	beq	14a98 <__assert_fail@plt+0x23ac>
   14a48:	bl	12404 <__errno_location@plt>
   14a4c:	mov	r3, r0
   14a50:	ldr	r4, [r3]
   14a54:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14a58:	mov	r0, #0
   14a5c:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   14a60:	mov	r3, r0
   14a64:	movw	r2, #21300	; 0x5334
   14a68:	movt	r2, #6
   14a6c:	mov	r1, r4
   14a70:	mov	r0, #0
   14a74:	bl	122b4 <error@plt>
   14a78:	movw	r3, #53280	; 0xd020
   14a7c:	movt	r3, #7
   14a80:	mov	r2, #1
   14a84:	str	r2, [r3, #28]
   14a88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a8c:	bl	126bc <closedir@plt>
   14a90:	mov	r3, #0
   14a94:	b	14b34 <__assert_fail@plt+0x2448>
   14a98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14a9c:	bl	126bc <closedir@plt>
   14aa0:	mov	r3, r0
   14aa4:	cmp	r3, #0
   14aa8:	beq	14af4 <__assert_fail@plt+0x2408>
   14aac:	bl	12404 <__errno_location@plt>
   14ab0:	mov	r3, r0
   14ab4:	ldr	r4, [r3]
   14ab8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14abc:	mov	r0, #0
   14ac0:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   14ac4:	mov	r3, r0
   14ac8:	movw	r2, #21300	; 0x5334
   14acc:	movt	r2, #6
   14ad0:	mov	r1, r4
   14ad4:	mov	r0, #0
   14ad8:	bl	122b4 <error@plt>
   14adc:	movw	r3, #53280	; 0xd020
   14ae0:	movt	r3, #7
   14ae4:	mov	r2, #1
   14ae8:	str	r2, [r3, #28]
   14aec:	mov	r3, #0
   14af0:	b	14b34 <__assert_fail@plt+0x2448>
   14af4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   14af8:	b	14b34 <__assert_fail@plt+0x2448>
   14afc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b00:	ldr	r3, [r3, #16]
   14b04:	and	r3, r3, #61440	; 0xf000
   14b08:	cmp	r3, #32768	; 0x8000
   14b0c:	bne	14b30 <__assert_fail@plt+0x2444>
   14b10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b14:	ldrd	r2, [r3, #48]	; 0x30
   14b18:	orr	r3, r2, r3
   14b1c:	cmp	r3, #0
   14b20:	moveq	r3, #1
   14b24:	movne	r3, #0
   14b28:	uxtb	r3, r3
   14b2c:	b	14b34 <__assert_fail@plt+0x2448>
   14b30:	mov	r3, #0
   14b34:	mov	r0, r3
   14b38:	sub	sp, fp, #8
   14b3c:	ldr	r4, [sp]
   14b40:	ldr	fp, [sp, #4]
   14b44:	add	sp, sp, #8
   14b48:	pop	{pc}		; (ldr pc, [sp], #4)
   14b4c:	str	fp, [sp, #-8]!
   14b50:	str	lr, [sp, #4]
   14b54:	add	fp, sp, #4
   14b58:	sub	sp, sp, #16
   14b5c:	str	r0, [fp, #-8]
   14b60:	str	r1, [fp, #-12]
   14b64:	str	r2, [fp, #-16]
   14b68:	ldr	r2, [fp, #-16]
   14b6c:	ldr	r1, [fp, #-12]
   14b70:	ldr	r0, [fp, #-8]
   14b74:	bl	170dc <__assert_fail@plt+0x49f0>
   14b78:	mov	r3, r0
   14b7c:	mov	r0, r3
   14b80:	sub	sp, fp, #4
   14b84:	ldr	fp, [sp]
   14b88:	add	sp, sp, #4
   14b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b90:	str	fp, [sp, #-8]!
   14b94:	str	lr, [sp, #4]
   14b98:	add	fp, sp, #4
   14b9c:	sub	sp, sp, #16
   14ba0:	str	r0, [fp, #-8]
   14ba4:	str	r1, [fp, #-12]
   14ba8:	str	r2, [fp, #-16]
   14bac:	movw	r3, #53280	; 0xd020
   14bb0:	movt	r3, #7
   14bb4:	ldr	r3, [r3, #12]
   14bb8:	ldr	r2, [fp, #-16]
   14bbc:	ldr	r1, [fp, #-12]
   14bc0:	mov	r0, r3
   14bc4:	bl	170dc <__assert_fail@plt+0x49f0>
   14bc8:	mov	r3, r0
   14bcc:	mov	r0, r3
   14bd0:	sub	sp, fp, #4
   14bd4:	ldr	fp, [sp]
   14bd8:	add	sp, sp, #4
   14bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   14be0:	push	{fp}		; (str fp, [sp, #-4]!)
   14be4:	add	fp, sp, #0
   14be8:	sub	sp, sp, #20
   14bec:	str	r0, [fp, #-8]
   14bf0:	str	r1, [fp, #-12]
   14bf4:	str	r2, [fp, #-16]
   14bf8:	mov	r3, #0
   14bfc:	mov	r0, r3
   14c00:	add	sp, fp, #0
   14c04:	pop	{fp}		; (ldr fp, [sp], #4)
   14c08:	bx	lr
   14c0c:	str	fp, [sp, #-8]!
   14c10:	str	lr, [sp, #4]
   14c14:	add	fp, sp, #4
   14c18:	sub	sp, sp, #40	; 0x28
   14c1c:	str	r0, [fp, #-16]
   14c20:	str	r1, [fp, #-20]	; 0xffffffec
   14c24:	str	r2, [fp, #-24]	; 0xffffffe8
   14c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14c2c:	ldr	r3, [r3, #44]	; 0x2c
   14c30:	str	r3, [fp, #-8]
   14c34:	movw	r3, #53280	; 0xd020
   14c38:	movt	r3, #7
   14c3c:	ldr	r0, [r3, #16]
   14c40:	movw	r3, #53280	; 0xd020
   14c44:	movt	r3, #7
   14c48:	ldr	ip, [r3, #12]
   14c4c:	movw	r3, #53324	; 0xd04c
   14c50:	movt	r3, #7
   14c54:	ldr	r2, [r3, #20]
   14c58:	movw	r3, #53324	; 0xd04c
   14c5c:	movt	r3, #7
   14c60:	ldr	r3, [r3, #40]	; 0x28
   14c64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c68:	ldrb	r1, [r1, #32]
   14c6c:	mov	lr, r1
   14c70:	ldr	r1, [fp, #-8]
   14c74:	str	r1, [sp, #12]
   14c78:	str	lr, [sp, #8]
   14c7c:	str	r3, [sp, #4]
   14c80:	str	r2, [sp]
   14c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c88:	mov	r2, ip
   14c8c:	mov	r1, r0
   14c90:	ldr	r0, [fp, #-16]
   14c94:	bl	297d0 <__assert_fail@plt+0x170e4>
   14c98:	mov	r3, #1
   14c9c:	mov	r0, r3
   14ca0:	sub	sp, fp, #4
   14ca4:	ldr	fp, [sp]
   14ca8:	add	sp, sp, #4
   14cac:	pop	{pc}		; (ldr pc, [sp], #4)
   14cb0:	str	fp, [sp, #-8]!
   14cb4:	str	lr, [sp, #4]
   14cb8:	add	fp, sp, #4
   14cbc:	sub	sp, sp, #24
   14cc0:	str	r0, [fp, #-8]
   14cc4:	str	r1, [fp, #-12]
   14cc8:	str	r2, [fp, #-16]
   14ccc:	ldr	r3, [fp, #-16]
   14cd0:	ldr	r0, [r3, #44]	; 0x2c
   14cd4:	ldr	r3, [fp, #-16]
   14cd8:	ldr	r1, [r3, #56]	; 0x38
   14cdc:	ldr	r3, [fp, #-16]
   14ce0:	ldrb	r2, [r3, #52]	; 0x34
   14ce4:	ldr	r3, [fp, #-8]
   14ce8:	str	r3, [sp]
   14cec:	movw	r3, #21304	; 0x5338
   14cf0:	movt	r3, #6
   14cf4:	bl	2a5f0 <__assert_fail@plt+0x17f04>
   14cf8:	mov	r3, #1
   14cfc:	mov	r0, r3
   14d00:	sub	sp, fp, #4
   14d04:	ldr	fp, [sp]
   14d08:	add	sp, sp, #4
   14d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d10:	str	fp, [sp, #-8]!
   14d14:	str	lr, [sp, #4]
   14d18:	add	fp, sp, #4
   14d1c:	sub	sp, sp, #24
   14d20:	str	r0, [fp, #-16]
   14d24:	str	r1, [fp, #-20]	; 0xffffffec
   14d28:	str	r2, [fp, #-24]	; 0xffffffe8
   14d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d30:	ldr	r3, [r3, #44]	; 0x2c
   14d34:	str	r3, [fp, #-8]
   14d38:	ldr	r1, [fp, #-8]
   14d3c:	ldr	r0, [fp, #-16]
   14d40:	bl	12680 <fputs@plt>
   14d44:	ldr	r1, [fp, #-8]
   14d48:	mov	r0, #0
   14d4c:	bl	125c0 <putc@plt>
   14d50:	mov	r3, #1
   14d54:	mov	r0, r3
   14d58:	sub	sp, fp, #4
   14d5c:	ldr	fp, [sp]
   14d60:	add	sp, sp, #4
   14d64:	pop	{pc}		; (ldr pc, [sp], #4)
   14d68:	str	fp, [sp, #-8]!
   14d6c:	str	lr, [sp, #4]
   14d70:	add	fp, sp, #4
   14d74:	sub	sp, sp, #16
   14d78:	str	r0, [fp, #-8]
   14d7c:	str	r1, [fp, #-12]
   14d80:	str	r2, [fp, #-16]
   14d84:	ldr	r1, [fp, #-8]
   14d88:	ldr	r0, [fp, #-12]
   14d8c:	bl	20aa4 <__assert_fail@plt+0xe3b8>
   14d90:	mov	r2, r0
   14d94:	ldr	r3, [fp, #-16]
   14d98:	ldr	r3, [r3, #40]	; 0x28
   14d9c:	mov	r1, r3
   14da0:	mov	r0, r2
   14da4:	bl	11ffc <strcmp@plt>
   14da8:	mov	r3, r0
   14dac:	cmp	r3, #0
   14db0:	bne	14dbc <__assert_fail@plt+0x26d0>
   14db4:	mov	r3, #1
   14db8:	b	14dc0 <__assert_fail@plt+0x26d4>
   14dbc:	mov	r3, #0
   14dc0:	mov	r0, r3
   14dc4:	sub	sp, fp, #4
   14dc8:	ldr	fp, [sp]
   14dcc:	add	sp, sp, #4
   14dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   14dd4:	push	{fp}		; (str fp, [sp, #-4]!)
   14dd8:	add	fp, sp, #0
   14ddc:	sub	sp, sp, #20
   14de0:	str	r0, [fp, #-8]
   14de4:	str	r1, [fp, #-12]
   14de8:	str	r2, [fp, #-16]
   14dec:	ldr	r3, [fp, #-16]
   14df0:	ldr	r3, [r3, #40]	; 0x28
   14df4:	cmp	r3, #1
   14df8:	beq	14e3c <__assert_fail@plt+0x2750>
   14dfc:	cmp	r3, #0
   14e00:	beq	14e10 <__assert_fail@plt+0x2724>
   14e04:	cmp	r3, #2
   14e08:	beq	14e68 <__assert_fail@plt+0x277c>
   14e0c:	b	14ea8 <__assert_fail@plt+0x27bc>
   14e10:	ldr	r3, [fp, #-12]
   14e14:	ldr	r3, [r3, #28]
   14e18:	mov	r0, r3
   14e1c:	mov	r1, #0
   14e20:	ldr	r3, [fp, #-16]
   14e24:	ldrd	r2, [r3, #48]	; 0x30
   14e28:	cmp	r1, r3
   14e2c:	cmpeq	r0, r2
   14e30:	bls	14e94 <__assert_fail@plt+0x27a8>
   14e34:	mov	r3, #1
   14e38:	b	14eac <__assert_fail@plt+0x27c0>
   14e3c:	ldr	r3, [fp, #-12]
   14e40:	ldr	r3, [r3, #28]
   14e44:	mov	r0, r3
   14e48:	mov	r1, #0
   14e4c:	ldr	r3, [fp, #-16]
   14e50:	ldrd	r2, [r3, #48]	; 0x30
   14e54:	cmp	r1, r3
   14e58:	cmpeq	r0, r2
   14e5c:	bcs	14e9c <__assert_fail@plt+0x27b0>
   14e60:	mov	r3, #1
   14e64:	b	14eac <__assert_fail@plt+0x27c0>
   14e68:	ldr	r3, [fp, #-12]
   14e6c:	ldr	r3, [r3, #28]
   14e70:	mov	r0, r3
   14e74:	mov	r1, #0
   14e78:	ldr	r3, [fp, #-16]
   14e7c:	ldrd	r2, [r3, #48]	; 0x30
   14e80:	cmp	r1, r3
   14e84:	cmpeq	r0, r2
   14e88:	bne	14ea4 <__assert_fail@plt+0x27b8>
   14e8c:	mov	r3, #1
   14e90:	b	14eac <__assert_fail@plt+0x27c0>
   14e94:	nop	{0}
   14e98:	b	14ea8 <__assert_fail@plt+0x27bc>
   14e9c:	nop	{0}
   14ea0:	b	14ea8 <__assert_fail@plt+0x27bc>
   14ea4:	nop	{0}
   14ea8:	mov	r3, #0
   14eac:	mov	r0, r3
   14eb0:	add	sp, fp, #0
   14eb4:	pop	{fp}		; (ldr fp, [sp], #4)
   14eb8:	bx	lr
   14ebc:	push	{fp}		; (str fp, [sp, #-4]!)
   14ec0:	add	fp, sp, #0
   14ec4:	sub	sp, sp, #20
   14ec8:	str	r0, [fp, #-8]
   14ecc:	str	r1, [fp, #-12]
   14ed0:	str	r2, [fp, #-16]
   14ed4:	ldr	r3, [fp, #-16]
   14ed8:	ldr	r2, [r3, #40]	; 0x28
   14edc:	ldr	r3, [fp, #-12]
   14ee0:	ldr	r3, [r3, #28]
   14ee4:	cmp	r2, r3
   14ee8:	bne	14ef4 <__assert_fail@plt+0x2808>
   14eec:	mov	r3, #1
   14ef0:	b	14ef8 <__assert_fail@plt+0x280c>
   14ef4:	mov	r3, #0
   14ef8:	mov	r0, r3
   14efc:	add	sp, fp, #0
   14f00:	pop	{fp}		; (ldr fp, [sp], #4)
   14f04:	bx	lr
   14f08:	str	fp, [sp, #-8]!
   14f0c:	str	lr, [sp, #4]
   14f10:	add	fp, sp, #4
   14f14:	sub	sp, sp, #16
   14f18:	str	r0, [fp, #-8]
   14f1c:	str	r1, [fp, #-12]
   14f20:	str	r2, [fp, #-16]
   14f24:	mov	r3, #1
   14f28:	ldr	r2, [fp, #-16]
   14f2c:	ldr	r1, [fp, #-12]
   14f30:	ldr	r0, [fp, #-8]
   14f34:	bl	15274 <__assert_fail@plt+0x2b88>
   14f38:	mov	r3, r0
   14f3c:	mov	r0, r3
   14f40:	sub	sp, fp, #4
   14f44:	ldr	fp, [sp]
   14f48:	add	sp, sp, #4
   14f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   14f50:	str	fp, [sp, #-8]!
   14f54:	str	lr, [sp, #4]
   14f58:	add	fp, sp, #4
   14f5c:	sub	sp, sp, #24
   14f60:	str	r0, [fp, #-16]
   14f64:	str	r1, [fp, #-20]	; 0xffffffec
   14f68:	str	r2, [fp, #-24]	; 0xffffffe8
   14f6c:	ldr	r0, [fp, #-16]
   14f70:	bl	2bc30 <__assert_fail@plt+0x19544>
   14f74:	mov	r3, r0
   14f78:	str	r3, [fp, #-8]
   14f7c:	ldr	r0, [fp, #-8]
   14f80:	bl	2bf00 <__assert_fail@plt+0x19814>
   14f84:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f88:	ldr	r1, [fp, #-8]
   14f8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f90:	bl	122d8 <fnmatch@plt>
   14f94:	mov	r3, r0
   14f98:	cmp	r3, #0
   14f9c:	moveq	r3, #1
   14fa0:	movne	r3, #0
   14fa4:	strb	r3, [fp, #-9]
   14fa8:	ldr	r0, [fp, #-8]
   14fac:	bl	3fe0c <__assert_fail@plt+0x2d720>
   14fb0:	ldrb	r3, [fp, #-9]
   14fb4:	mov	r0, r3
   14fb8:	sub	sp, fp, #4
   14fbc:	ldr	fp, [sp]
   14fc0:	add	sp, sp, #4
   14fc4:	pop	{pc}		; (ldr pc, [sp], #4)
   14fc8:	str	fp, [sp, #-8]!
   14fcc:	str	lr, [sp, #4]
   14fd0:	add	fp, sp, #4
   14fd4:	sub	sp, sp, #16
   14fd8:	str	r0, [fp, #-8]
   14fdc:	str	r1, [fp, #-12]
   14fe0:	str	r2, [fp, #-16]
   14fe4:	ldr	r3, [fp, #-16]
   14fe8:	ldr	r3, [r3, #40]	; 0x28
   14fec:	mov	r2, #16
   14ff0:	mov	r1, r3
   14ff4:	ldr	r0, [fp, #-8]
   14ff8:	bl	14f50 <__assert_fail@plt+0x2864>
   14ffc:	mov	r3, r0
   15000:	mov	r0, r3
   15004:	sub	sp, fp, #4
   15008:	ldr	fp, [sp]
   1500c:	add	sp, sp, #4
   15010:	pop	{pc}		; (ldr pc, [sp], #4)
   15014:	push	{fp}		; (str fp, [sp, #-4]!)
   15018:	add	fp, sp, #0
   1501c:	sub	sp, sp, #20
   15020:	str	r0, [fp, #-8]
   15024:	str	r1, [fp, #-12]
   15028:	str	r2, [fp, #-16]
   1502c:	ldr	r3, [fp, #-16]
   15030:	ldr	r3, [r3, #40]	; 0x28
   15034:	cmp	r3, #1
   15038:	beq	15074 <__assert_fail@plt+0x2988>
   1503c:	cmp	r3, #0
   15040:	beq	15050 <__assert_fail@plt+0x2964>
   15044:	cmp	r3, #2
   15048:	beq	15098 <__assert_fail@plt+0x29ac>
   1504c:	b	150d0 <__assert_fail@plt+0x29e4>
   15050:	ldr	r3, [fp, #-12]
   15054:	ldrd	r0, [r3, #96]	; 0x60
   15058:	ldr	r3, [fp, #-16]
   1505c:	ldrd	r2, [r3, #48]	; 0x30
   15060:	cmp	r1, r3
   15064:	cmpeq	r0, r2
   15068:	bls	150bc <__assert_fail@plt+0x29d0>
   1506c:	mov	r3, #1
   15070:	b	150d4 <__assert_fail@plt+0x29e8>
   15074:	ldr	r3, [fp, #-12]
   15078:	ldrd	r0, [r3, #96]	; 0x60
   1507c:	ldr	r3, [fp, #-16]
   15080:	ldrd	r2, [r3, #48]	; 0x30
   15084:	cmp	r1, r3
   15088:	cmpeq	r0, r2
   1508c:	bcs	150c4 <__assert_fail@plt+0x29d8>
   15090:	mov	r3, #1
   15094:	b	150d4 <__assert_fail@plt+0x29e8>
   15098:	ldr	r3, [fp, #-12]
   1509c:	ldrd	r0, [r3, #96]	; 0x60
   150a0:	ldr	r3, [fp, #-16]
   150a4:	ldrd	r2, [r3, #48]	; 0x30
   150a8:	cmp	r1, r3
   150ac:	cmpeq	r0, r2
   150b0:	bne	150cc <__assert_fail@plt+0x29e0>
   150b4:	mov	r3, #1
   150b8:	b	150d4 <__assert_fail@plt+0x29e8>
   150bc:	nop	{0}
   150c0:	b	150d0 <__assert_fail@plt+0x29e4>
   150c4:	nop	{0}
   150c8:	b	150d0 <__assert_fail@plt+0x29e4>
   150cc:	nop	{0}
   150d0:	mov	r3, #0
   150d4:	mov	r0, r3
   150d8:	add	sp, fp, #0
   150dc:	pop	{fp}		; (ldr fp, [sp], #4)
   150e0:	bx	lr
   150e4:	str	fp, [sp, #-8]!
   150e8:	str	lr, [sp, #4]
   150ec:	add	fp, sp, #4
   150f0:	sub	sp, sp, #16
   150f4:	str	r0, [fp, #-8]
   150f8:	str	r1, [fp, #-12]
   150fc:	str	r2, [fp, #-16]
   15100:	ldr	r3, [fp, #-16]
   15104:	ldr	r3, [r3, #40]	; 0x28
   15108:	mov	r2, #16
   1510c:	ldr	r1, [fp, #-8]
   15110:	mov	r0, r3
   15114:	bl	122d8 <fnmatch@plt>
   15118:	mov	r3, r0
   1511c:	cmp	r3, #0
   15120:	bne	1512c <__assert_fail@plt+0x2a40>
   15124:	mov	r3, #1
   15128:	b	15130 <__assert_fail@plt+0x2a44>
   1512c:	mov	r3, #0
   15130:	mov	r0, r3
   15134:	sub	sp, fp, #4
   15138:	ldr	fp, [sp]
   1513c:	add	sp, sp, #4
   15140:	pop	{pc}		; (ldr pc, [sp], #4)
   15144:	push	{fp}		; (str fp, [sp, #-4]!)
   15148:	add	fp, sp, #0
   1514c:	sub	sp, sp, #20
   15150:	str	r0, [fp, #-8]
   15154:	str	r1, [fp, #-12]
   15158:	str	r2, [fp, #-16]
   1515c:	ldr	r3, [fp, #-16]
   15160:	ldr	r3, [r3, #40]	; 0x28
   15164:	cmp	r3, #1
   15168:	beq	151ac <__assert_fail@plt+0x2ac0>
   1516c:	cmp	r3, #0
   15170:	beq	15180 <__assert_fail@plt+0x2a94>
   15174:	cmp	r3, #2
   15178:	beq	151d8 <__assert_fail@plt+0x2aec>
   1517c:	b	15218 <__assert_fail@plt+0x2b2c>
   15180:	ldr	r3, [fp, #-12]
   15184:	ldr	r3, [r3, #20]
   15188:	mov	r0, r3
   1518c:	mov	r1, #0
   15190:	ldr	r3, [fp, #-16]
   15194:	ldrd	r2, [r3, #48]	; 0x30
   15198:	cmp	r1, r3
   1519c:	cmpeq	r0, r2
   151a0:	bls	15204 <__assert_fail@plt+0x2b18>
   151a4:	mov	r3, #1
   151a8:	b	1521c <__assert_fail@plt+0x2b30>
   151ac:	ldr	r3, [fp, #-12]
   151b0:	ldr	r3, [r3, #20]
   151b4:	mov	r0, r3
   151b8:	mov	r1, #0
   151bc:	ldr	r3, [fp, #-16]
   151c0:	ldrd	r2, [r3, #48]	; 0x30
   151c4:	cmp	r1, r3
   151c8:	cmpeq	r0, r2
   151cc:	bcs	1520c <__assert_fail@plt+0x2b20>
   151d0:	mov	r3, #1
   151d4:	b	1521c <__assert_fail@plt+0x2b30>
   151d8:	ldr	r3, [fp, #-12]
   151dc:	ldr	r3, [r3, #20]
   151e0:	mov	r0, r3
   151e4:	mov	r1, #0
   151e8:	ldr	r3, [fp, #-16]
   151ec:	ldrd	r2, [r3, #48]	; 0x30
   151f0:	cmp	r1, r3
   151f4:	cmpeq	r0, r2
   151f8:	bne	15214 <__assert_fail@plt+0x2b28>
   151fc:	mov	r3, #1
   15200:	b	1521c <__assert_fail@plt+0x2b30>
   15204:	nop	{0}
   15208:	b	15218 <__assert_fail@plt+0x2b2c>
   1520c:	nop	{0}
   15210:	b	15218 <__assert_fail@plt+0x2b2c>
   15214:	nop	{0}
   15218:	mov	r3, #0
   1521c:	mov	r0, r3
   15220:	add	sp, fp, #0
   15224:	pop	{fp}		; (ldr fp, [sp], #4)
   15228:	bx	lr
   1522c:	str	fp, [sp, #-8]!
   15230:	str	lr, [sp, #4]
   15234:	add	fp, sp, #4
   15238:	sub	sp, sp, #16
   1523c:	str	r0, [fp, #-8]
   15240:	str	r1, [fp, #-12]
   15244:	str	r2, [fp, #-16]
   15248:	mov	r3, #0
   1524c:	ldr	r2, [fp, #-16]
   15250:	ldr	r1, [fp, #-12]
   15254:	ldr	r0, [fp, #-8]
   15258:	bl	15274 <__assert_fail@plt+0x2b88>
   1525c:	mov	r3, r0
   15260:	mov	r0, r3
   15264:	sub	sp, fp, #4
   15268:	ldr	fp, [sp]
   1526c:	add	sp, sp, #4
   15270:	pop	{pc}		; (ldr pc, [sp], #4)
   15274:	str	fp, [sp, #-8]!
   15278:	str	lr, [sp, #4]
   1527c:	add	fp, sp, #4
   15280:	sub	sp, sp, #24
   15284:	str	r0, [fp, #-16]
   15288:	str	r1, [fp, #-20]	; 0xffffffec
   1528c:	str	r2, [fp, #-24]	; 0xffffffe8
   15290:	strb	r3, [fp, #-25]	; 0xffffffe7
   15294:	mov	r3, #0
   15298:	strb	r3, [fp, #-5]
   1529c:	ldr	r3, [fp, #-20]	; 0xffffffec
   152a0:	ldr	r3, [r3, #16]
   152a4:	and	r3, r3, #61440	; 0xf000
   152a8:	cmp	r3, #40960	; 0xa000
   152ac:	bne	15358 <__assert_fail@plt+0x2c6c>
   152b0:	movw	r3, #53280	; 0xd020
   152b4:	movt	r3, #7
   152b8:	ldr	r2, [r3, #16]
   152bc:	movw	r3, #53280	; 0xd020
   152c0:	movt	r3, #7
   152c4:	ldr	r3, [r3, #12]
   152c8:	mov	r1, r3
   152cc:	mov	r0, r2
   152d0:	bl	2b250 <__assert_fail@plt+0x18b64>
   152d4:	str	r0, [fp, #-12]
   152d8:	ldr	r3, [fp, #-12]
   152dc:	cmp	r3, #0
   152e0:	beq	15328 <__assert_fail@plt+0x2c3c>
   152e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152e8:	ldr	r0, [r3, #40]	; 0x28
   152ec:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   152f0:	cmp	r3, #0
   152f4:	beq	15300 <__assert_fail@plt+0x2c14>
   152f8:	mov	r3, #16
   152fc:	b	15304 <__assert_fail@plt+0x2c18>
   15300:	mov	r3, #0
   15304:	mov	r2, r3
   15308:	ldr	r1, [fp, #-12]
   1530c:	bl	122d8 <fnmatch@plt>
   15310:	mov	r3, r0
   15314:	cmp	r3, #0
   15318:	bne	15350 <__assert_fail@plt+0x2c64>
   1531c:	mov	r3, #1
   15320:	strb	r3, [fp, #-5]
   15324:	b	15350 <__assert_fail@plt+0x2c64>
   15328:	bl	12404 <__errno_location@plt>
   1532c:	mov	r3, r0
   15330:	ldr	r3, [r3]
   15334:	ldr	r1, [fp, #-16]
   15338:	mov	r0, r3
   1533c:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   15340:	movw	r3, #53280	; 0xd020
   15344:	movt	r3, #7
   15348:	mov	r2, #1
   1534c:	str	r2, [r3, #28]
   15350:	ldr	r0, [fp, #-12]
   15354:	bl	3fe0c <__assert_fail@plt+0x2d720>
   15358:	ldrb	r3, [fp, #-5]
   1535c:	mov	r0, r3
   15360:	sub	sp, fp, #4
   15364:	ldr	fp, [sp]
   15368:	add	sp, sp, #4
   1536c:	pop	{pc}		; (ldr pc, [sp], #4)
   15370:	str	fp, [sp, #-8]!
   15374:	str	lr, [sp, #4]
   15378:	add	fp, sp, #4
   1537c:	sub	sp, sp, #16
   15380:	str	r0, [fp, #-8]
   15384:	str	r1, [fp, #-12]
   15388:	str	r2, [fp, #-16]
   1538c:	ldr	r2, [fp, #-16]
   15390:	ldr	r1, [fp, #-12]
   15394:	ldr	r0, [fp, #-8]
   15398:	bl	14c0c <__assert_fail@plt+0x2520>
   1539c:	mov	r3, r0
   153a0:	mov	r0, r3
   153a4:	sub	sp, fp, #4
   153a8:	ldr	fp, [sp]
   153ac:	add	sp, sp, #4
   153b0:	pop	{pc}		; (ldr pc, [sp], #4)
   153b4:	str	fp, [sp, #-8]!
   153b8:	str	lr, [sp, #4]
   153bc:	add	fp, sp, #4
   153c0:	sub	sp, sp, #24
   153c4:	str	r0, [fp, #-16]
   153c8:	str	r1, [fp, #-20]	; 0xffffffec
   153cc:	str	r2, [fp, #-24]	; 0xffffffe8
   153d0:	sub	r3, fp, #12
   153d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   153d8:	mov	r0, r3
   153dc:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   153e0:	mov	r3, #60	; 0x3c
   153e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   153e8:	sub	r1, fp, #12
   153ec:	ldm	r1, {r0, r1}
   153f0:	bl	14188 <__assert_fail@plt+0x1a9c>
   153f4:	mov	r3, r0
   153f8:	mov	r0, r3
   153fc:	sub	sp, fp, #4
   15400:	ldr	fp, [sp]
   15404:	add	sp, sp, #4
   15408:	pop	{pc}		; (ldr pc, [sp], #4)
   1540c:	str	fp, [sp, #-8]!
   15410:	str	lr, [sp, #4]
   15414:	add	fp, sp, #4
   15418:	sub	sp, sp, #24
   1541c:	str	r0, [fp, #-16]
   15420:	str	r1, [fp, #-20]	; 0xffffffec
   15424:	str	r2, [fp, #-24]	; 0xffffffe8
   15428:	sub	r3, fp, #12
   1542c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15430:	mov	r0, r3
   15434:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   15438:	movw	r3, #20864	; 0x5180
   1543c:	movt	r3, #1
   15440:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15444:	sub	r1, fp, #12
   15448:	ldm	r1, {r0, r1}
   1544c:	bl	14188 <__assert_fail@plt+0x1a9c>
   15450:	mov	r3, r0
   15454:	mov	r0, r3
   15458:	sub	sp, fp, #4
   1545c:	ldr	fp, [sp]
   15460:	add	sp, sp, #4
   15464:	pop	{pc}		; (ldr pc, [sp], #4)
   15468:	str	fp, [sp, #-8]!
   1546c:	str	lr, [sp, #4]
   15470:	add	fp, sp, #4
   15474:	sub	sp, sp, #16
   15478:	str	r0, [fp, #-8]
   1547c:	str	r1, [fp, #-12]
   15480:	str	r2, [fp, #-16]
   15484:	ldr	r3, [fp, #-16]
   15488:	ldr	r3, [r3, #40]	; 0x28
   1548c:	mov	r2, #0
   15490:	mov	r1, r3
   15494:	ldr	r0, [fp, #-8]
   15498:	bl	14f50 <__assert_fail@plt+0x2864>
   1549c:	mov	r3, r0
   154a0:	mov	r0, r3
   154a4:	sub	sp, fp, #4
   154a8:	ldr	fp, [sp]
   154ac:	add	sp, sp, #4
   154b0:	pop	{pc}		; (ldr pc, [sp], #4)
   154b4:	str	fp, [sp, #-8]!
   154b8:	str	lr, [sp, #4]
   154bc:	add	fp, sp, #4
   154c0:	sub	sp, sp, #16
   154c4:	str	r0, [fp, #-8]
   154c8:	str	r1, [fp, #-12]
   154cc:	str	r2, [fp, #-16]
   154d0:	ldr	r3, [fp, #-16]
   154d4:	ldr	r3, [r3, #160]	; 0xa0
   154d8:	mov	r2, r3
   154dc:	ldr	r1, [fp, #-12]
   154e0:	ldr	r0, [fp, #-8]
   154e4:	bl	1d2ac <__assert_fail@plt+0xabc0>
   154e8:	mov	r3, r0
   154ec:	cmp	r3, #0
   154f0:	movne	r3, #1
   154f4:	moveq	r3, #0
   154f8:	uxtb	r3, r3
   154fc:	eor	r3, r3, #1
   15500:	uxtb	r3, r3
   15504:	and	r3, r3, #1
   15508:	uxtb	r3, r3
   1550c:	mov	r0, r3
   15510:	sub	sp, fp, #4
   15514:	ldr	fp, [sp]
   15518:	add	sp, sp, #4
   1551c:	pop	{pc}		; (ldr pc, [sp], #4)
   15520:	str	fp, [sp, #-8]!
   15524:	str	lr, [sp, #4]
   15528:	add	fp, sp, #4
   1552c:	sub	sp, sp, #24
   15530:	str	r0, [fp, #-16]
   15534:	str	r1, [fp, #-20]	; 0xffffffec
   15538:	str	r2, [fp, #-24]	; 0xffffffe8
   1553c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15540:	ldr	r3, [r3, #44]	; 0x2c
   15544:	cmp	r3, #0
   15548:	beq	1556c <__assert_fail@plt+0x2e80>
   1554c:	movw	r3, #22008	; 0x55f8
   15550:	movt	r3, #6
   15554:	movw	r2, #621	; 0x26d
   15558:	movw	r1, #21224	; 0x52e8
   1555c:	movt	r1, #6
   15560:	movw	r0, #21236	; 0x52f4
   15564:	movt	r0, #6
   15568:	bl	126ec <__assert_fail@plt>
   1556c:	sub	r3, fp, #12
   15570:	ldr	r1, [fp, #-20]	; 0xffffffec
   15574:	mov	r0, r3
   15578:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   1557c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15580:	add	r3, r3, #48	; 0x30
   15584:	ldm	r3, {r2, r3}
   15588:	sub	r1, fp, #12
   1558c:	ldm	r1, {r0, r1}
   15590:	bl	140f8 <__assert_fail@plt+0x1a0c>
   15594:	mov	r3, r0
   15598:	cmp	r3, #0
   1559c:	movgt	r3, #1
   155a0:	movle	r3, #0
   155a4:	uxtb	r3, r3
   155a8:	mov	r0, r3
   155ac:	sub	sp, fp, #4
   155b0:	ldr	fp, [sp]
   155b4:	add	sp, sp, #4
   155b8:	pop	{pc}		; (ldr pc, [sp], #4)
   155bc:	str	r4, [sp, #-12]!
   155c0:	str	fp, [sp, #4]
   155c4:	str	lr, [sp, #8]
   155c8:	add	fp, sp, #8
   155cc:	sub	sp, sp, #44	; 0x2c
   155d0:	str	r0, [fp, #-32]	; 0xffffffe0
   155d4:	str	r1, [fp, #-36]	; 0xffffffdc
   155d8:	str	r2, [fp, #-40]	; 0xffffffd8
   155dc:	mov	r3, #0
   155e0:	strb	r3, [fp, #-13]
   155e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   155e8:	ldr	r3, [r3, #44]	; 0x2c
   155ec:	cmp	r3, #0
   155f0:	beq	15614 <__assert_fail@plt+0x2f28>
   155f4:	movw	r3, #22020	; 0x5604
   155f8:	movt	r3, #6
   155fc:	movw	r2, #631	; 0x277
   15600:	movw	r1, #21224	; 0x52e8
   15604:	movt	r1, #6
   15608:	movw	r0, #21236	; 0x52f4
   1560c:	movt	r0, #6
   15610:	bl	126ec <__assert_fail@plt>
   15614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15618:	ldr	r3, [r3, #40]	; 0x28
   1561c:	cmp	r3, #4
   15620:	ldrls	pc, [pc, r3, lsl #2]
   15624:	b	15758 <__assert_fail@plt+0x306c>
   15628:	andeq	r5, r1, r4, ror r6
   1562c:	muleq	r1, r0, r6
   15630:	strdeq	r5, [r1], -ip
   15634:	andeq	r5, r1, r8, lsr #14
   15638:	andeq	r5, r1, ip, lsr r6
   1563c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15640:	ldr	r3, [r3, #40]	; 0x28
   15644:	cmp	r3, #4
   15648:	bne	1566c <__assert_fail@plt+0x2f80>
   1564c:	movw	r3, #22020	; 0x5604
   15650:	movt	r3, #6
   15654:	mov	r2, #636	; 0x27c
   15658:	movw	r1, #21224	; 0x52e8
   1565c:	movt	r1, #6
   15660:	movw	r0, #21308	; 0x533c
   15664:	movt	r0, #6
   15668:	bl	126ec <__assert_fail@plt>
   1566c:	mov	r3, #0
   15670:	b	157b0 <__assert_fail@plt+0x30c4>
   15674:	sub	r3, fp, #24
   15678:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1567c:	mov	r0, r3
   15680:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   15684:	mov	r3, #1
   15688:	strb	r3, [fp, #-13]
   1568c:	b	15758 <__assert_fail@plt+0x306c>
   15690:	sub	r3, fp, #52	; 0x34
   15694:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15698:	mov	r0, r3
   1569c:	bl	3cf0c <__assert_fail@plt+0x2a820>
   156a0:	sub	r1, fp, #24
   156a4:	sub	r3, fp, #52	; 0x34
   156a8:	ldrd	r2, [r3]
   156ac:	strd	r2, [r1]
   156b0:	mov	r3, #1
   156b4:	strb	r3, [fp, #-13]
   156b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   156bc:	cmp	r3, #0
   156c0:	bge	15754 <__assert_fail@plt+0x3068>
   156c4:	movw	r0, #21352	; 0x5368
   156c8:	movt	r0, #6
   156cc:	bl	12398 <gettext@plt>
   156d0:	mov	r4, r0
   156d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   156d8:	mov	r0, #0
   156dc:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   156e0:	mov	r3, r0
   156e4:	mov	r2, r4
   156e8:	mov	r1, #0
   156ec:	mov	r0, #0
   156f0:	bl	122b4 <error@plt>
   156f4:	mov	r3, #0
   156f8:	b	157b0 <__assert_fail@plt+0x30c4>
   156fc:	sub	r3, fp, #52	; 0x34
   15700:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15704:	mov	r0, r3
   15708:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   1570c:	sub	r1, fp, #24
   15710:	sub	r3, fp, #52	; 0x34
   15714:	ldrd	r2, [r3]
   15718:	strd	r2, [r1]
   1571c:	mov	r3, #1
   15720:	strb	r3, [fp, #-13]
   15724:	b	15758 <__assert_fail@plt+0x306c>
   15728:	sub	r3, fp, #52	; 0x34
   1572c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15730:	mov	r0, r3
   15734:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   15738:	sub	r1, fp, #24
   1573c:	sub	r3, fp, #52	; 0x34
   15740:	ldrd	r2, [r3]
   15744:	strd	r2, [r1]
   15748:	mov	r3, #1
   1574c:	strb	r3, [fp, #-13]
   15750:	b	15758 <__assert_fail@plt+0x306c>
   15754:	nop	{0}
   15758:	ldrb	r3, [fp, #-13]
   1575c:	cmp	r3, #0
   15760:	bne	15784 <__assert_fail@plt+0x3098>
   15764:	movw	r3, #22020	; 0x5604
   15768:	movt	r3, #6
   1576c:	movw	r2, #667	; 0x29b
   15770:	movw	r1, #21224	; 0x52e8
   15774:	movt	r1, #6
   15778:	movw	r0, #21400	; 0x5398
   1577c:	movt	r0, #6
   15780:	bl	126ec <__assert_fail@plt>
   15784:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15788:	add	r3, r3, #48	; 0x30
   1578c:	ldm	r3, {r2, r3}
   15790:	sub	r1, fp, #24
   15794:	ldm	r1, {r0, r1}
   15798:	bl	140f8 <__assert_fail@plt+0x1a0c>
   1579c:	mov	r3, r0
   157a0:	cmp	r3, #0
   157a4:	movgt	r3, #1
   157a8:	movle	r3, #0
   157ac:	uxtb	r3, r3
   157b0:	mov	r0, r3
   157b4:	sub	sp, fp, #8
   157b8:	ldr	r4, [sp]
   157bc:	ldr	fp, [sp, #4]
   157c0:	add	sp, sp, #8
   157c4:	pop	{pc}		; (ldr pc, [sp], #4)
   157c8:	str	fp, [sp, #-8]!
   157cc:	str	lr, [sp, #4]
   157d0:	add	fp, sp, #4
   157d4:	sub	sp, sp, #16
   157d8:	str	r0, [fp, #-8]
   157dc:	str	r1, [fp, #-12]
   157e0:	str	r2, [fp, #-16]
   157e4:	ldr	r3, [fp, #-12]
   157e8:	ldr	r3, [r3, #28]
   157ec:	mov	r0, r3
   157f0:	bl	126c8 <getgrgid@plt>
   157f4:	mov	r3, r0
   157f8:	cmp	r3, #0
   157fc:	moveq	r3, #1
   15800:	movne	r3, #0
   15804:	uxtb	r3, r3
   15808:	mov	r0, r3
   1580c:	sub	sp, fp, #4
   15810:	ldr	fp, [sp]
   15814:	add	sp, sp, #4
   15818:	pop	{pc}		; (ldr pc, [sp], #4)
   1581c:	str	fp, [sp, #-8]!
   15820:	str	lr, [sp, #4]
   15824:	add	fp, sp, #4
   15828:	sub	sp, sp, #16
   1582c:	str	r0, [fp, #-8]
   15830:	str	r1, [fp, #-12]
   15834:	str	r2, [fp, #-16]
   15838:	ldr	r3, [fp, #-12]
   1583c:	ldr	r3, [r3, #24]
   15840:	mov	r0, r3
   15844:	bl	12014 <getpwuid@plt>
   15848:	mov	r3, r0
   1584c:	cmp	r3, #0
   15850:	moveq	r3, #1
   15854:	movne	r3, #0
   15858:	uxtb	r3, r3
   1585c:	mov	r0, r3
   15860:	sub	sp, fp, #4
   15864:	ldr	fp, [sp]
   15868:	add	sp, sp, #4
   1586c:	pop	{pc}		; (ldr pc, [sp], #4)
   15870:	str	r4, [sp, #-12]!
   15874:	str	fp, [sp, #4]
   15878:	str	lr, [sp, #8]
   1587c:	add	fp, sp, #8
   15880:	sub	sp, sp, #12
   15884:	str	r0, [fp, #-16]
   15888:	str	r1, [fp, #-20]	; 0xffffffec
   1588c:	movw	r3, #50996	; 0xc734
   15890:	movt	r3, #7
   15894:	ldr	r3, [r3]
   15898:	mov	r0, r3
   1589c:	bl	3fda0 <__assert_fail@plt+0x2d6b4>
   158a0:	movw	r3, #50984	; 0xc728
   158a4:	movt	r3, #7
   158a8:	ldr	r4, [r3]
   158ac:	movw	r0, #21412	; 0x53a4
   158b0:	movt	r0, #6
   158b4:	bl	12398 <gettext@plt>
   158b8:	mov	r1, r0
   158bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   158c0:	ldr	r2, [fp, #-16]
   158c4:	mov	r0, r4
   158c8:	bl	123f8 <fprintf@plt>
   158cc:	mov	r3, r0
   158d0:	cmp	r3, #0
   158d4:	bge	15904 <__assert_fail@plt+0x3218>
   158d8:	bl	12404 <__errno_location@plt>
   158dc:	mov	r3, r0
   158e0:	ldr	r4, [r3]
   158e4:	movw	r0, #21432	; 0x53b8
   158e8:	movt	r0, #6
   158ec:	bl	12398 <gettext@plt>
   158f0:	mov	r3, r0
   158f4:	mov	r2, r3
   158f8:	mov	r1, r4
   158fc:	mov	r0, #1
   15900:	bl	122b4 <error@plt>
   15904:	movw	r3, #50984	; 0xc728
   15908:	movt	r3, #7
   1590c:	ldr	r3, [r3]
   15910:	mov	r0, r3
   15914:	bl	3fda0 <__assert_fail@plt+0x2d6b4>
   15918:	bl	3f268 <__assert_fail@plt+0x2cb7c>
   1591c:	mov	r3, r0
   15920:	mov	r0, r3
   15924:	sub	sp, fp, #8
   15928:	ldr	r4, [sp]
   1592c:	ldr	fp, [sp, #4]
   15930:	add	sp, sp, #8
   15934:	pop	{pc}		; (ldr pc, [sp], #4)
   15938:	str	fp, [sp, #-8]!
   1593c:	str	lr, [sp, #4]
   15940:	add	fp, sp, #4
   15944:	sub	sp, sp, #16
   15948:	str	r0, [fp, #-8]
   1594c:	str	r1, [fp, #-12]
   15950:	str	r2, [fp, #-16]
   15954:	ldr	r3, [fp, #-16]
   15958:	ldr	r3, [r3, #132]	; 0x84
   1595c:	ldr	r3, [r3]
   15960:	ldr	r1, [fp, #-8]
   15964:	mov	r0, r3
   15968:	bl	15870 <__assert_fail@plt+0x3184>
   1596c:	mov	r3, r0
   15970:	cmp	r3, #0
   15974:	beq	15990 <__assert_fail@plt+0x32a4>
   15978:	ldr	r2, [fp, #-16]
   1597c:	ldr	r1, [fp, #-12]
   15980:	ldr	r0, [fp, #-8]
   15984:	bl	170dc <__assert_fail@plt+0x49f0>
   15988:	mov	r3, r0
   1598c:	b	15994 <__assert_fail@plt+0x32a8>
   15990:	mov	r3, #0
   15994:	mov	r0, r3
   15998:	sub	sp, fp, #4
   1599c:	ldr	fp, [sp]
   159a0:	add	sp, sp, #4
   159a4:	pop	{pc}		; (ldr pc, [sp], #4)
   159a8:	str	fp, [sp, #-8]!
   159ac:	str	lr, [sp, #4]
   159b0:	add	fp, sp, #4
   159b4:	sub	sp, sp, #16
   159b8:	str	r0, [fp, #-8]
   159bc:	str	r1, [fp, #-12]
   159c0:	str	r2, [fp, #-16]
   159c4:	ldr	r3, [fp, #-16]
   159c8:	ldr	r3, [r3, #132]	; 0x84
   159cc:	ldr	r3, [r3]
   159d0:	ldr	r1, [fp, #-8]
   159d4:	mov	r0, r3
   159d8:	bl	15870 <__assert_fail@plt+0x3184>
   159dc:	mov	r3, r0
   159e0:	cmp	r3, #0
   159e4:	beq	15a0c <__assert_fail@plt+0x3320>
   159e8:	movw	r3, #53280	; 0xd020
   159ec:	movt	r3, #7
   159f0:	ldr	r3, [r3, #12]
   159f4:	ldr	r2, [fp, #-16]
   159f8:	ldr	r1, [fp, #-12]
   159fc:	mov	r0, r3
   15a00:	bl	170dc <__assert_fail@plt+0x49f0>
   15a04:	mov	r3, r0
   15a08:	b	15a10 <__assert_fail@plt+0x3324>
   15a0c:	mov	r3, #0
   15a10:	mov	r0, r3
   15a14:	sub	sp, fp, #4
   15a18:	ldr	fp, [sp]
   15a1c:	add	sp, sp, #4
   15a20:	pop	{pc}		; (ldr pc, [sp], #4)
   15a24:	push	{fp}		; (str fp, [sp, #-4]!)
   15a28:	add	fp, sp, #0
   15a2c:	sub	sp, sp, #20
   15a30:	str	r0, [fp, #-8]
   15a34:	str	r1, [fp, #-12]
   15a38:	str	r2, [fp, #-16]
   15a3c:	mov	r3, #1
   15a40:	mov	r0, r3
   15a44:	add	sp, fp, #0
   15a48:	pop	{fp}		; (ldr fp, [sp], #4)
   15a4c:	bx	lr
   15a50:	str	fp, [sp, #-8]!
   15a54:	str	lr, [sp, #4]
   15a58:	add	fp, sp, #4
   15a5c:	sub	sp, sp, #16
   15a60:	str	r0, [fp, #-8]
   15a64:	str	r1, [fp, #-12]
   15a68:	str	r2, [fp, #-16]
   15a6c:	ldr	r3, [fp, #-16]
   15a70:	ldr	r3, [r3, #156]	; 0x9c
   15a74:	cmp	r3, #0
   15a78:	beq	15aa8 <__assert_fail@plt+0x33bc>
   15a7c:	ldr	r3, [fp, #-16]
   15a80:	ldr	r3, [r3, #156]	; 0x9c
   15a84:	mov	r2, r3
   15a88:	ldr	r1, [fp, #-12]
   15a8c:	ldr	r0, [fp, #-8]
   15a90:	bl	1d2ac <__assert_fail@plt+0xabc0>
   15a94:	mov	r3, r0
   15a98:	eor	r3, r3, #1
   15a9c:	uxtb	r3, r3
   15aa0:	cmp	r3, #0
   15aa4:	beq	15ac8 <__assert_fail@plt+0x33dc>
   15aa8:	ldr	r3, [fp, #-16]
   15aac:	ldr	r3, [r3, #160]	; 0xa0
   15ab0:	mov	r2, r3
   15ab4:	ldr	r1, [fp, #-12]
   15ab8:	ldr	r0, [fp, #-8]
   15abc:	bl	1d2ac <__assert_fail@plt+0xabc0>
   15ac0:	mov	r3, r0
   15ac4:	b	15acc <__assert_fail@plt+0x33e0>
   15ac8:	mov	r3, #1
   15acc:	mov	r0, r3
   15ad0:	sub	sp, fp, #4
   15ad4:	ldr	fp, [sp]
   15ad8:	add	sp, sp, #4
   15adc:	pop	{pc}		; (ldr pc, [sp], #4)
   15ae0:	str	fp, [sp, #-8]!
   15ae4:	str	lr, [sp, #4]
   15ae8:	add	fp, sp, #4
   15aec:	sub	sp, sp, #16
   15af0:	str	r0, [fp, #-8]
   15af4:	str	r1, [fp, #-12]
   15af8:	str	r2, [fp, #-16]
   15afc:	ldr	r3, [fp, #-16]
   15b00:	ldr	r3, [r3, #40]	; 0x28
   15b04:	mov	r2, #0
   15b08:	ldr	r1, [fp, #-8]
   15b0c:	mov	r0, r3
   15b10:	bl	122d8 <fnmatch@plt>
   15b14:	mov	r3, r0
   15b18:	cmp	r3, #0
   15b1c:	bne	15b28 <__assert_fail@plt+0x343c>
   15b20:	mov	r3, #1
   15b24:	b	15b2c <__assert_fail@plt+0x3440>
   15b28:	mov	r3, #0
   15b2c:	mov	r0, r3
   15b30:	sub	sp, fp, #4
   15b34:	ldr	fp, [sp]
   15b38:	add	sp, sp, #4
   15b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b40:	str	fp, [sp, #-8]!
   15b44:	str	lr, [sp, #4]
   15b48:	add	fp, sp, #4
   15b4c:	sub	sp, sp, #24
   15b50:	str	r0, [fp, #-16]
   15b54:	str	r1, [fp, #-20]	; 0xffffffec
   15b58:	str	r2, [fp, #-24]	; 0xffffffe8
   15b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b60:	ldr	r3, [r3, #16]
   15b64:	str	r3, [fp, #-8]
   15b68:	ldr	r3, [fp, #-8]
   15b6c:	and	r3, r3, #61440	; 0xf000
   15b70:	cmp	r3, #16384	; 0x4000
   15b74:	moveq	r3, #1
   15b78:	movne	r3, #0
   15b7c:	uxtb	r3, r3
   15b80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15b84:	add	r3, r3, #10
   15b88:	lsl	r3, r3, #2
   15b8c:	add	r3, r2, r3
   15b90:	ldr	r3, [r3, #4]
   15b94:	str	r3, [fp, #-12]
   15b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b9c:	ldr	r3, [r3, #40]	; 0x28
   15ba0:	cmp	r3, #1
   15ba4:	beq	15be0 <__assert_fail@plt+0x34f4>
   15ba8:	cmp	r3, #0
   15bac:	beq	15bbc <__assert_fail@plt+0x34d0>
   15bb0:	cmp	r3, #2
   15bb4:	beq	15c14 <__assert_fail@plt+0x3528>
   15bb8:	b	15c34 <__assert_fail@plt+0x3548>
   15bbc:	ldr	r2, [fp, #-8]
   15bc0:	ldr	r3, [fp, #-12]
   15bc4:	and	r3, r3, r2
   15bc8:	ldr	r2, [fp, #-12]
   15bcc:	cmp	r2, r3
   15bd0:	moveq	r3, #1
   15bd4:	movne	r3, #0
   15bd8:	uxtb	r3, r3
   15bdc:	b	15c38 <__assert_fail@plt+0x354c>
   15be0:	ldr	r3, [fp, #-12]
   15be4:	cmp	r3, #0
   15be8:	bne	15bf4 <__assert_fail@plt+0x3508>
   15bec:	mov	r3, #1
   15bf0:	b	15c38 <__assert_fail@plt+0x354c>
   15bf4:	ldr	r2, [fp, #-8]
   15bf8:	ldr	r3, [fp, #-12]
   15bfc:	and	r3, r3, r2
   15c00:	cmp	r3, #0
   15c04:	movne	r3, #1
   15c08:	moveq	r3, #0
   15c0c:	uxtb	r3, r3
   15c10:	b	15c38 <__assert_fail@plt+0x354c>
   15c14:	ldr	r3, [fp, #-8]
   15c18:	ubfx	r3, r3, #0, #12
   15c1c:	ldr	r2, [fp, #-12]
   15c20:	cmp	r2, r3
   15c24:	moveq	r3, #1
   15c28:	movne	r3, #0
   15c2c:	uxtb	r3, r3
   15c30:	b	15c38 <__assert_fail@plt+0x354c>
   15c34:	bl	12698 <abort@plt>
   15c38:	mov	r0, r3
   15c3c:	sub	sp, fp, #4
   15c40:	ldr	fp, [sp]
   15c44:	add	sp, sp, #4
   15c48:	pop	{pc}		; (ldr pc, [sp], #4)
   15c4c:	str	fp, [sp, #-8]!
   15c50:	str	lr, [sp, #4]
   15c54:	add	fp, sp, #4
   15c58:	sub	sp, sp, #16
   15c5c:	str	r0, [fp, #-8]
   15c60:	str	r1, [fp, #-12]
   15c64:	str	r2, [fp, #-16]
   15c68:	movw	r3, #53280	; 0xd020
   15c6c:	movt	r3, #7
   15c70:	ldr	r0, [r3, #16]
   15c74:	movw	r3, #53280	; 0xd020
   15c78:	movt	r3, #7
   15c7c:	ldr	r1, [r3, #12]
   15c80:	mov	r3, #0
   15c84:	mov	r2, #1
   15c88:	bl	120b0 <faccessat@plt>
   15c8c:	mov	r3, r0
   15c90:	cmp	r3, #0
   15c94:	moveq	r3, #1
   15c98:	movne	r3, #0
   15c9c:	uxtb	r3, r3
   15ca0:	mov	r0, r3
   15ca4:	sub	sp, fp, #4
   15ca8:	ldr	fp, [sp]
   15cac:	add	sp, sp, #4
   15cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   15cb4:	str	fp, [sp, #-8]!
   15cb8:	str	lr, [sp, #4]
   15cbc:	add	fp, sp, #4
   15cc0:	sub	sp, sp, #16
   15cc4:	str	r0, [fp, #-8]
   15cc8:	str	r1, [fp, #-12]
   15ccc:	str	r2, [fp, #-16]
   15cd0:	movw	r3, #53280	; 0xd020
   15cd4:	movt	r3, #7
   15cd8:	ldr	r0, [r3, #16]
   15cdc:	movw	r3, #53280	; 0xd020
   15ce0:	movt	r3, #7
   15ce4:	ldr	r1, [r3, #12]
   15ce8:	mov	r3, #0
   15cec:	mov	r2, #4
   15cf0:	bl	120b0 <faccessat@plt>
   15cf4:	mov	r3, r0
   15cf8:	cmp	r3, #0
   15cfc:	moveq	r3, #1
   15d00:	movne	r3, #0
   15d04:	uxtb	r3, r3
   15d08:	mov	r0, r3
   15d0c:	sub	sp, fp, #4
   15d10:	ldr	fp, [sp]
   15d14:	add	sp, sp, #4
   15d18:	pop	{pc}		; (ldr pc, [sp], #4)
   15d1c:	str	fp, [sp, #-8]!
   15d20:	str	lr, [sp, #4]
   15d24:	add	fp, sp, #4
   15d28:	sub	sp, sp, #16
   15d2c:	str	r0, [fp, #-8]
   15d30:	str	r1, [fp, #-12]
   15d34:	str	r2, [fp, #-16]
   15d38:	movw	r3, #53280	; 0xd020
   15d3c:	movt	r3, #7
   15d40:	ldr	r0, [r3, #16]
   15d44:	movw	r3, #53280	; 0xd020
   15d48:	movt	r3, #7
   15d4c:	ldr	r1, [r3, #12]
   15d50:	mov	r3, #0
   15d54:	mov	r2, #2
   15d58:	bl	120b0 <faccessat@plt>
   15d5c:	mov	r3, r0
   15d60:	cmp	r3, #0
   15d64:	moveq	r3, #1
   15d68:	movne	r3, #0
   15d6c:	uxtb	r3, r3
   15d70:	mov	r0, r3
   15d74:	sub	sp, fp, #4
   15d78:	ldr	fp, [sp]
   15d7c:	add	sp, sp, #4
   15d80:	pop	{pc}		; (ldr pc, [sp], #4)
   15d84:	str	fp, [sp, #-8]!
   15d88:	str	lr, [sp, #4]
   15d8c:	add	fp, sp, #4
   15d90:	sub	sp, sp, #24
   15d94:	str	r0, [fp, #-8]
   15d98:	str	r1, [fp, #-12]
   15d9c:	str	r2, [fp, #-16]
   15da0:	ldr	r3, [fp, #-16]
   15da4:	ldr	r0, [r3, #44]	; 0x2c
   15da8:	ldr	r3, [fp, #-16]
   15dac:	ldr	r1, [r3, #56]	; 0x38
   15db0:	ldr	r3, [fp, #-16]
   15db4:	ldrb	r2, [r3, #52]	; 0x34
   15db8:	ldr	r3, [fp, #-8]
   15dbc:	str	r3, [sp]
   15dc0:	movw	r3, #21304	; 0x5338
   15dc4:	movt	r3, #6
   15dc8:	bl	2a5f0 <__assert_fail@plt+0x17f04>
   15dcc:	mov	r3, #1
   15dd0:	mov	r0, r3
   15dd4:	sub	sp, fp, #4
   15dd8:	ldr	fp, [sp]
   15ddc:	add	sp, sp, #4
   15de0:	pop	{pc}		; (ldr pc, [sp], #4)
   15de4:	str	fp, [sp, #-8]!
   15de8:	str	lr, [sp, #4]
   15dec:	add	fp, sp, #4
   15df0:	sub	sp, sp, #16
   15df4:	str	r0, [fp, #-8]
   15df8:	str	r1, [fp, #-12]
   15dfc:	str	r2, [fp, #-16]
   15e00:	ldr	r2, [fp, #-16]
   15e04:	ldr	r1, [fp, #-12]
   15e08:	ldr	r0, [fp, #-8]
   15e0c:	bl	14d10 <__assert_fail@plt+0x2624>
   15e10:	mov	r3, r0
   15e14:	mov	r0, r3
   15e18:	sub	sp, fp, #4
   15e1c:	ldr	fp, [sp]
   15e20:	add	sp, sp, #4
   15e24:	pop	{pc}		; (ldr pc, [sp], #4)
   15e28:	str	fp, [sp, #-8]!
   15e2c:	str	lr, [sp, #4]
   15e30:	add	fp, sp, #4
   15e34:	sub	sp, sp, #16
   15e38:	str	r0, [fp, #-8]
   15e3c:	str	r1, [fp, #-12]
   15e40:	str	r2, [fp, #-16]
   15e44:	movw	r3, #53324	; 0xd04c
   15e48:	movt	r3, #7
   15e4c:	ldrb	r3, [r3]
   15e50:	cmp	r3, #0
   15e54:	beq	15ebc <__assert_fail@plt+0x37d0>
   15e58:	movw	r3, #53280	; 0xd020
   15e5c:	movt	r3, #7
   15e60:	ldrb	r3, [r3, #4]
   15e64:	cmp	r3, #0
   15e68:	bne	15e8c <__assert_fail@plt+0x37a0>
   15e6c:	movw	r3, #22036	; 0x5614
   15e70:	movt	r3, #6
   15e74:	movw	r2, #853	; 0x355
   15e78:	movw	r1, #21224	; 0x52e8
   15e7c:	movt	r1, #6
   15e80:	movw	r0, #21464	; 0x53d8
   15e84:	movt	r0, #6
   15e88:	bl	126ec <__assert_fail@plt>
   15e8c:	ldr	r3, [fp, #-12]
   15e90:	cmp	r3, #0
   15e94:	beq	15ebc <__assert_fail@plt+0x37d0>
   15e98:	ldr	r3, [fp, #-12]
   15e9c:	ldr	r3, [r3, #16]
   15ea0:	and	r3, r3, #61440	; 0xf000
   15ea4:	cmp	r3, #16384	; 0x4000
   15ea8:	bne	15ebc <__assert_fail@plt+0x37d0>
   15eac:	movw	r3, #53280	; 0xd020
   15eb0:	movt	r3, #7
   15eb4:	mov	r2, #1
   15eb8:	strb	r2, [r3, #24]
   15ebc:	mov	r3, #1
   15ec0:	mov	r0, r3
   15ec4:	sub	sp, fp, #4
   15ec8:	ldr	fp, [sp]
   15ecc:	add	sp, sp, #4
   15ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   15ed4:	str	fp, [sp, #-8]!
   15ed8:	str	lr, [sp, #4]
   15edc:	add	fp, sp, #4
   15ee0:	sub	sp, sp, #16
   15ee4:	str	r0, [fp, #-8]
   15ee8:	str	r1, [fp, #-12]
   15eec:	str	r2, [fp, #-16]
   15ef0:	bl	1c14c <__assert_fail@plt+0x9a60>
   15ef4:	movw	r3, #53280	; 0xd020
   15ef8:	movt	r3, #7
   15efc:	ldr	r3, [r3, #28]
   15f00:	mov	r0, r3
   15f04:	bl	12380 <exit@plt>
   15f08:	str	fp, [sp, #-8]!
   15f0c:	str	lr, [sp, #4]
   15f10:	add	fp, sp, #4
   15f14:	sub	sp, sp, #32
   15f18:	str	r0, [fp, #-16]
   15f1c:	str	r1, [fp, #-20]	; 0xffffffec
   15f20:	str	r2, [fp, #-24]	; 0xffffffe8
   15f24:	ldr	r0, [fp, #-16]
   15f28:	bl	123bc <strlen@plt>
   15f2c:	mov	r3, r0
   15f30:	str	r3, [fp, #-8]
   15f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f38:	ldr	r0, [r3, #40]	; 0x28
   15f3c:	mov	r3, #0
   15f40:	str	r3, [sp]
   15f44:	mov	r3, #0
   15f48:	ldr	r2, [fp, #-8]
   15f4c:	ldr	r1, [fp, #-16]
   15f50:	bl	53220 <__assert_fail@plt+0x40b34>
   15f54:	mov	r2, r0
   15f58:	ldr	r3, [fp, #-8]
   15f5c:	cmp	r3, r2
   15f60:	bne	15f6c <__assert_fail@plt+0x3880>
   15f64:	mov	r3, #1
   15f68:	b	15f70 <__assert_fail@plt+0x3884>
   15f6c:	mov	r3, #0
   15f70:	mov	r0, r3
   15f74:	sub	sp, fp, #4
   15f78:	ldr	fp, [sp]
   15f7c:	add	sp, sp, #4
   15f80:	pop	{pc}		; (ldr pc, [sp], #4)
   15f84:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15f88:	strd	r6, [sp, #8]
   15f8c:	str	fp, [sp, #16]
   15f90:	str	lr, [sp, #20]
   15f94:	add	fp, sp, #20
   15f98:	sub	sp, sp, #24
   15f9c:	str	r0, [fp, #-32]	; 0xffffffe0
   15fa0:	str	r1, [fp, #-36]	; 0xffffffdc
   15fa4:	str	r2, [fp, #-40]	; 0xffffffd8
   15fa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15fac:	ldrd	r0, [r3, #48]	; 0x30
   15fb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15fb4:	ldr	r3, [r3, #44]	; 0x2c
   15fb8:	mov	r2, r3
   15fbc:	asr	r3, r2, #31
   15fc0:	bl	6498c <__assert_fail@plt+0x522a0>
   15fc4:	mov	r2, r0
   15fc8:	mov	r3, r1
   15fcc:	mov	r4, r2
   15fd0:	mov	r5, r3
   15fd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15fd8:	ldrd	r0, [r3, #48]	; 0x30
   15fdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15fe0:	ldr	r3, [r3, #44]	; 0x2c
   15fe4:	mov	r2, r3
   15fe8:	asr	r3, r2, #31
   15fec:	bl	6498c <__assert_fail@plt+0x522a0>
   15ff0:	orr	r3, r2, r3
   15ff4:	cmp	r3, #0
   15ff8:	movne	r3, #1
   15ffc:	moveq	r3, #0
   16000:	uxtb	r3, r3
   16004:	uxtb	r2, r3
   16008:	mov	r3, #0
   1600c:	adds	r6, r4, r2
   16010:	adc	r7, r5, r3
   16014:	strd	r6, [fp, #-28]	; 0xffffffe4
   16018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1601c:	ldr	r3, [r3, #40]	; 0x28
   16020:	cmp	r3, #1
   16024:	beq	1605c <__assert_fail@plt+0x3970>
   16028:	cmp	r3, #0
   1602c:	beq	1603c <__assert_fail@plt+0x3950>
   16030:	cmp	r3, #2
   16034:	beq	1607c <__assert_fail@plt+0x3990>
   16038:	b	160b0 <__assert_fail@plt+0x39c4>
   1603c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16040:	ldrd	r2, [r3, #48]	; 0x30
   16044:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   16048:	cmp	r1, r3
   1604c:	cmpeq	r0, r2
   16050:	bls	1609c <__assert_fail@plt+0x39b0>
   16054:	mov	r3, #1
   16058:	b	160b4 <__assert_fail@plt+0x39c8>
   1605c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16060:	ldrd	r2, [r3, #48]	; 0x30
   16064:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   16068:	cmp	r1, r3
   1606c:	cmpeq	r0, r2
   16070:	bcs	160a4 <__assert_fail@plt+0x39b8>
   16074:	mov	r3, #1
   16078:	b	160b4 <__assert_fail@plt+0x39c8>
   1607c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16080:	ldrd	r2, [r3, #48]	; 0x30
   16084:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   16088:	cmp	r1, r3
   1608c:	cmpeq	r0, r2
   16090:	bne	160ac <__assert_fail@plt+0x39c0>
   16094:	mov	r3, #1
   16098:	b	160b4 <__assert_fail@plt+0x39c8>
   1609c:	nop	{0}
   160a0:	b	160b0 <__assert_fail@plt+0x39c4>
   160a4:	nop	{0}
   160a8:	b	160b0 <__assert_fail@plt+0x39c4>
   160ac:	nop	{0}
   160b0:	mov	r3, #0
   160b4:	mov	r0, r3
   160b8:	sub	sp, fp, #20
   160bc:	ldrd	r4, [sp]
   160c0:	ldrd	r6, [sp, #8]
   160c4:	ldr	fp, [sp, #16]
   160c8:	add	sp, sp, #20
   160cc:	pop	{pc}		; (ldr pc, [sp], #4)
   160d0:	str	fp, [sp, #-8]!
   160d4:	str	lr, [sp, #4]
   160d8:	add	fp, sp, #4
   160dc:	sub	sp, sp, #16
   160e0:	str	r0, [fp, #-8]
   160e4:	str	r1, [fp, #-12]
   160e8:	str	r2, [fp, #-16]
   160ec:	ldr	r3, [fp, #-12]
   160f0:	ldrd	r2, [r3, #96]	; 0x60
   160f4:	orrs	r3, r2, r3
   160f8:	beq	16120 <__assert_fail@plt+0x3a34>
   160fc:	ldr	r3, [fp, #-12]
   16100:	ldrd	r0, [r3, #96]	; 0x60
   16104:	ldr	r3, [fp, #-16]
   16108:	ldrd	r2, [r3, #40]	; 0x28
   1610c:	cmp	r1, r3
   16110:	cmpeq	r0, r2
   16114:	beq	16120 <__assert_fail@plt+0x3a34>
   16118:	mov	r3, #0
   1611c:	b	1619c <__assert_fail@plt+0x3ab0>
   16120:	movw	r3, #53280	; 0xd020
   16124:	movt	r3, #7
   16128:	ldr	r3, [r3, #12]
   1612c:	ldr	r2, [fp, #-12]
   16130:	mov	r1, r3
   16134:	ldr	r0, [fp, #-8]
   16138:	bl	1b748 <__assert_fail@plt+0x905c>
   1613c:	mov	r3, r0
   16140:	cmp	r3, #0
   16144:	bne	16198 <__assert_fail@plt+0x3aac>
   16148:	ldr	r3, [fp, #-12]
   1614c:	ldrd	r0, [r3, #96]	; 0x60
   16150:	ldr	r3, [fp, #-16]
   16154:	ldrd	r2, [r3, #40]	; 0x28
   16158:	cmp	r1, r3
   1615c:	cmpeq	r0, r2
   16160:	bne	16188 <__assert_fail@plt+0x3a9c>
   16164:	ldr	r3, [fp, #-12]
   16168:	ldrd	r0, [r3]
   1616c:	ldr	r3, [fp, #-16]
   16170:	ldrd	r2, [r3, #48]	; 0x30
   16174:	cmp	r1, r3
   16178:	cmpeq	r0, r2
   1617c:	bne	16188 <__assert_fail@plt+0x3a9c>
   16180:	mov	r3, #1
   16184:	b	1618c <__assert_fail@plt+0x3aa0>
   16188:	mov	r3, #0
   1618c:	and	r3, r3, #1
   16190:	uxtb	r3, r3
   16194:	b	1619c <__assert_fail@plt+0x3ab0>
   16198:	mov	r3, #0
   1619c:	mov	r0, r3
   161a0:	sub	sp, fp, #4
   161a4:	ldr	fp, [sp]
   161a8:	add	sp, sp, #4
   161ac:	pop	{pc}		; (ldr pc, [sp], #4)
   161b0:	push	{fp}		; (str fp, [sp, #-4]!)
   161b4:	add	fp, sp, #0
   161b8:	sub	sp, sp, #20
   161bc:	str	r0, [fp, #-8]
   161c0:	str	r1, [fp, #-12]
   161c4:	str	r2, [fp, #-16]
   161c8:	mov	r3, #1
   161cc:	mov	r0, r3
   161d0:	add	sp, fp, #0
   161d4:	pop	{fp}		; (ldr fp, [sp], #4)
   161d8:	bx	lr
   161dc:	str	fp, [sp, #-8]!
   161e0:	str	lr, [sp, #4]
   161e4:	add	fp, sp, #4
   161e8:	sub	sp, sp, #24
   161ec:	str	r0, [fp, #-16]
   161f0:	str	r1, [fp, #-20]	; 0xffffffec
   161f4:	str	r2, [fp, #-24]	; 0xffffffe8
   161f8:	mov	r3, #7
   161fc:	str	r3, [fp, #-12]
   16200:	movw	r3, #53280	; 0xd020
   16204:	movt	r3, #7
   16208:	ldrb	r3, [r3, #5]
   1620c:	cmp	r3, #0
   16210:	bne	16234 <__assert_fail@plt+0x3b48>
   16214:	movw	r3, #22048	; 0x5620
   16218:	movt	r3, #6
   1621c:	movw	r2, #977	; 0x3d1
   16220:	movw	r1, #21224	; 0x52e8
   16224:	movt	r1, #6
   16228:	movw	r0, #21480	; 0x53e8
   1622c:	movt	r0, #6
   16230:	bl	126ec <__assert_fail@plt>
   16234:	movw	r3, #53280	; 0xd020
   16238:	movt	r3, #7
   1623c:	ldr	r3, [r3, #8]
   16240:	cmp	r3, #0
   16244:	bne	16250 <__assert_fail@plt+0x3b64>
   16248:	mov	r3, #0
   1624c:	b	16358 <__assert_fail@plt+0x3c6c>
   16250:	movw	r3, #53280	; 0xd020
   16254:	movt	r3, #7
   16258:	ldrb	r3, [r3, #4]
   1625c:	cmp	r3, #0
   16260:	beq	16274 <__assert_fail@plt+0x3b88>
   16264:	ldr	r3, [fp, #-20]	; 0xffffffec
   16268:	ldr	r3, [r3, #16]
   1626c:	str	r3, [fp, #-8]
   16270:	b	16284 <__assert_fail@plt+0x3b98>
   16274:	movw	r3, #53280	; 0xd020
   16278:	movt	r3, #7
   1627c:	ldr	r3, [r3, #8]
   16280:	str	r3, [fp, #-8]
   16284:	ldr	r3, [fp, #-8]
   16288:	and	r3, r3, #61440	; 0xf000
   1628c:	cmp	r3, #24576	; 0x6000
   16290:	beq	162f4 <__assert_fail@plt+0x3c08>
   16294:	cmp	r3, #24576	; 0x6000
   16298:	bhi	162b8 <__assert_fail@plt+0x3bcc>
   1629c:	cmp	r3, #8192	; 0x2000
   162a0:	beq	16300 <__assert_fail@plt+0x3c14>
   162a4:	cmp	r3, #16384	; 0x4000
   162a8:	beq	162dc <__assert_fail@plt+0x3bf0>
   162ac:	cmp	r3, #4096	; 0x1000
   162b0:	beq	16318 <__assert_fail@plt+0x3c2c>
   162b4:	b	16324 <__assert_fail@plt+0x3c38>
   162b8:	cmp	r3, #40960	; 0xa000
   162bc:	beq	162e8 <__assert_fail@plt+0x3bfc>
   162c0:	cmp	r3, #49152	; 0xc000
   162c4:	beq	1630c <__assert_fail@plt+0x3c20>
   162c8:	cmp	r3, #32768	; 0x8000
   162cc:	bne	16324 <__assert_fail@plt+0x3c38>
   162d0:	mov	r3, #3
   162d4:	str	r3, [fp, #-12]
   162d8:	b	16324 <__assert_fail@plt+0x3c38>
   162dc:	mov	r3, #2
   162e0:	str	r3, [fp, #-12]
   162e4:	b	16324 <__assert_fail@plt+0x3c38>
   162e8:	mov	r3, #4
   162ec:	str	r3, [fp, #-12]
   162f0:	b	16324 <__assert_fail@plt+0x3c38>
   162f4:	mov	r3, #0
   162f8:	str	r3, [fp, #-12]
   162fc:	b	16324 <__assert_fail@plt+0x3c38>
   16300:	mov	r3, #1
   16304:	str	r3, [fp, #-12]
   16308:	b	16324 <__assert_fail@plt+0x3c38>
   1630c:	mov	r3, #6
   16310:	str	r3, [fp, #-12]
   16314:	b	16324 <__assert_fail@plt+0x3c38>
   16318:	mov	r3, #5
   1631c:	str	r3, [fp, #-12]
   16320:	nop	{0}
   16324:	ldr	r3, [fp, #-12]
   16328:	cmp	r3, #7
   1632c:	beq	16354 <__assert_fail@plt+0x3c68>
   16330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16334:	ldr	r3, [fp, #-12]
   16338:	add	r3, r2, r3
   1633c:	add	r3, r3, #40	; 0x28
   16340:	ldrb	r3, [r3]
   16344:	cmp	r3, #0
   16348:	beq	16354 <__assert_fail@plt+0x3c68>
   1634c:	mov	r3, #1
   16350:	b	16358 <__assert_fail@plt+0x3c6c>
   16354:	mov	r3, #0
   16358:	mov	r0, r3
   1635c:	sub	sp, fp, #4
   16360:	ldr	fp, [sp]
   16364:	add	sp, sp, #4
   16368:	pop	{pc}		; (ldr pc, [sp], #4)
   1636c:	push	{fp}		; (str fp, [sp, #-4]!)
   16370:	add	fp, sp, #0
   16374:	sub	sp, sp, #20
   16378:	str	r0, [fp, #-8]
   1637c:	str	r1, [fp, #-12]
   16380:	str	r2, [fp, #-16]
   16384:	ldr	r3, [fp, #-16]
   16388:	ldr	r3, [r3, #40]	; 0x28
   1638c:	cmp	r3, #1
   16390:	beq	163d4 <__assert_fail@plt+0x3ce8>
   16394:	cmp	r3, #0
   16398:	beq	163a8 <__assert_fail@plt+0x3cbc>
   1639c:	cmp	r3, #2
   163a0:	beq	16400 <__assert_fail@plt+0x3d14>
   163a4:	b	16440 <__assert_fail@plt+0x3d54>
   163a8:	ldr	r3, [fp, #-12]
   163ac:	ldr	r3, [r3, #24]
   163b0:	mov	r0, r3
   163b4:	mov	r1, #0
   163b8:	ldr	r3, [fp, #-16]
   163bc:	ldrd	r2, [r3, #48]	; 0x30
   163c0:	cmp	r1, r3
   163c4:	cmpeq	r0, r2
   163c8:	bls	1642c <__assert_fail@plt+0x3d40>
   163cc:	mov	r3, #1
   163d0:	b	16444 <__assert_fail@plt+0x3d58>
   163d4:	ldr	r3, [fp, #-12]
   163d8:	ldr	r3, [r3, #24]
   163dc:	mov	r0, r3
   163e0:	mov	r1, #0
   163e4:	ldr	r3, [fp, #-16]
   163e8:	ldrd	r2, [r3, #48]	; 0x30
   163ec:	cmp	r1, r3
   163f0:	cmpeq	r0, r2
   163f4:	bcs	16434 <__assert_fail@plt+0x3d48>
   163f8:	mov	r3, #1
   163fc:	b	16444 <__assert_fail@plt+0x3d58>
   16400:	ldr	r3, [fp, #-12]
   16404:	ldr	r3, [r3, #24]
   16408:	mov	r0, r3
   1640c:	mov	r1, #0
   16410:	ldr	r3, [fp, #-16]
   16414:	ldrd	r2, [r3, #48]	; 0x30
   16418:	cmp	r1, r3
   1641c:	cmpeq	r0, r2
   16420:	bne	1643c <__assert_fail@plt+0x3d50>
   16424:	mov	r3, #1
   16428:	b	16444 <__assert_fail@plt+0x3d58>
   1642c:	nop	{0}
   16430:	b	16440 <__assert_fail@plt+0x3d54>
   16434:	nop	{0}
   16438:	b	16440 <__assert_fail@plt+0x3d54>
   1643c:	nop	{0}
   16440:	mov	r3, #0
   16444:	mov	r0, r3
   16448:	add	sp, fp, #0
   1644c:	pop	{fp}		; (ldr fp, [sp], #4)
   16450:	bx	lr
   16454:	str	fp, [sp, #-8]!
   16458:	str	lr, [sp, #4]
   1645c:	add	fp, sp, #4
   16460:	sub	sp, sp, #40	; 0x28
   16464:	str	r0, [fp, #-32]	; 0xffffffe0
   16468:	str	r1, [fp, #-36]	; 0xffffffdc
   1646c:	str	r2, [fp, #-40]	; 0xffffffd8
   16470:	sub	r3, fp, #20
   16474:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16478:	mov	r0, r3
   1647c:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   16480:	sub	r3, fp, #28
   16484:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16488:	mov	r0, r3
   1648c:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   16490:	sub	r3, fp, #28
   16494:	ldm	r3, {r2, r3}
   16498:	sub	r1, fp, #20
   1649c:	ldm	r1, {r0, r1}
   164a0:	bl	140f8 <__assert_fail@plt+0x1a0c>
   164a4:	mov	r3, r0
   164a8:	cmp	r3, #0
   164ac:	bge	164b8 <__assert_fail@plt+0x3dcc>
   164b0:	mov	r3, #0
   164b4:	b	16520 <__assert_fail@plt+0x3e34>
   164b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   164bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   164c0:	sub	r3, r2, r3
   164c4:	str	r3, [fp, #-12]
   164c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164cc:	ldr	r3, [fp, #-16]
   164d0:	sub	r3, r2, r3
   164d4:	str	r3, [fp, #-8]
   164d8:	ldr	r3, [fp, #-8]
   164dc:	cmp	r3, #0
   164e0:	bge	16504 <__assert_fail@plt+0x3e18>
   164e4:	ldr	r2, [fp, #-8]
   164e8:	mov	r3, #51712	; 0xca00
   164ec:	movt	r3, #15258	; 0x3b9a
   164f0:	add	r3, r2, r3
   164f4:	str	r3, [fp, #-8]
   164f8:	ldr	r3, [fp, #-12]
   164fc:	sub	r3, r3, #1
   16500:	str	r3, [fp, #-12]
   16504:	movw	r3, #20864	; 0x5180
   16508:	movt	r3, #1
   1650c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16510:	sub	r1, fp, #12
   16514:	ldm	r1, {r0, r1}
   16518:	bl	14188 <__assert_fail@plt+0x1a9c>
   1651c:	mov	r3, r0
   16520:	mov	r0, r3
   16524:	sub	sp, fp, #4
   16528:	ldr	fp, [sp]
   1652c:	add	sp, sp, #4
   16530:	pop	{pc}		; (ldr pc, [sp], #4)
   16534:	push	{fp}		; (str fp, [sp, #-4]!)
   16538:	add	fp, sp, #0
   1653c:	sub	sp, sp, #20
   16540:	str	r0, [fp, #-8]
   16544:	str	r1, [fp, #-12]
   16548:	str	r2, [fp, #-16]
   1654c:	ldr	r3, [fp, #-16]
   16550:	ldr	r2, [r3, #40]	; 0x28
   16554:	ldr	r3, [fp, #-12]
   16558:	ldr	r3, [r3, #24]
   1655c:	cmp	r2, r3
   16560:	bne	1656c <__assert_fail@plt+0x3e80>
   16564:	mov	r3, #1
   16568:	b	16570 <__assert_fail@plt+0x3e84>
   1656c:	mov	r3, #0
   16570:	mov	r0, r3
   16574:	add	sp, fp, #0
   16578:	pop	{fp}		; (ldr fp, [sp], #4)
   1657c:	bx	lr
   16580:	str	r4, [sp, #-12]!
   16584:	str	fp, [sp, #4]
   16588:	str	lr, [sp, #8]
   1658c:	add	fp, sp, #8
   16590:	sub	sp, sp, #132	; 0x84
   16594:	str	r0, [fp, #-128]	; 0xffffff80
   16598:	str	r1, [fp, #-132]	; 0xffffff7c
   1659c:	str	r2, [fp, #-136]	; 0xffffff78
   165a0:	bl	1c620 <__assert_fail@plt+0x9f34>
   165a4:	mov	r3, r0
   165a8:	cmp	r3, #0
   165ac:	beq	165c0 <__assert_fail@plt+0x3ed4>
   165b0:	movw	r3, #50316	; 0xc48c
   165b4:	movt	r3, #1
   165b8:	str	r3, [fp, #-16]
   165bc:	b	165cc <__assert_fail@plt+0x3ee0>
   165c0:	movw	r3, #50120	; 0xc3c8
   165c4:	movt	r3, #1
   165c8:	str	r3, [fp, #-16]
   165cc:	sub	r3, fp, #124	; 0x7c
   165d0:	mov	r0, r3
   165d4:	bl	1b728 <__assert_fail@plt+0x903c>
   165d8:	movw	r3, #53280	; 0xd020
   165dc:	movt	r3, #7
   165e0:	ldr	r2, [r3, #12]
   165e4:	sub	r1, fp, #124	; 0x7c
   165e8:	ldr	r3, [fp, #-16]
   165ec:	mov	r0, r2
   165f0:	blx	r3
   165f4:	mov	r3, r0
   165f8:	cmp	r3, #0
   165fc:	beq	16684 <__assert_fail@plt+0x3f98>
   16600:	bl	1c620 <__assert_fail@plt+0x9f34>
   16604:	mov	r3, r0
   16608:	cmp	r3, #0
   1660c:	beq	1663c <__assert_fail@plt+0x3f50>
   16610:	bl	12404 <__errno_location@plt>
   16614:	mov	r3, r0
   16618:	ldr	r3, [r3]
   1661c:	cmp	r3, #2
   16620:	bne	1663c <__assert_fail@plt+0x3f50>
   16624:	ldr	r2, [fp, #-136]	; 0xffffff78
   16628:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1662c:	ldr	r0, [fp, #-128]	; 0xffffff80
   16630:	bl	161dc <__assert_fail@plt+0x3af0>
   16634:	mov	r3, r0
   16638:	b	1669c <__assert_fail@plt+0x3fb0>
   1663c:	bl	12404 <__errno_location@plt>
   16640:	mov	r3, r0
   16644:	ldr	r4, [r3]
   16648:	ldr	r1, [fp, #-128]	; 0xffffff80
   1664c:	mov	r0, #0
   16650:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   16654:	mov	r3, r0
   16658:	movw	r2, #21300	; 0x5334
   1665c:	movt	r2, #6
   16660:	mov	r1, r4
   16664:	mov	r0, #0
   16668:	bl	122b4 <error@plt>
   1666c:	movw	r3, #53280	; 0xd020
   16670:	movt	r3, #7
   16674:	mov	r2, #1
   16678:	str	r2, [r3, #28]
   1667c:	mov	r3, #0
   16680:	b	1669c <__assert_fail@plt+0x3fb0>
   16684:	sub	r3, fp, #124	; 0x7c
   16688:	ldr	r2, [fp, #-136]	; 0xffffff78
   1668c:	mov	r1, r3
   16690:	ldr	r0, [fp, #-128]	; 0xffffff80
   16694:	bl	161dc <__assert_fail@plt+0x3af0>
   16698:	mov	r3, r0
   1669c:	mov	r0, r3
   166a0:	sub	sp, fp, #8
   166a4:	ldr	r4, [sp]
   166a8:	ldr	fp, [sp, #4]
   166ac:	add	sp, sp, #8
   166b0:	pop	{pc}		; (ldr pc, [sp], #4)
   166b4:	strd	r4, [sp, #-16]!
   166b8:	str	fp, [sp, #8]
   166bc:	str	lr, [sp, #12]
   166c0:	add	fp, sp, #12
   166c4:	sub	sp, sp, #24
   166c8:	str	r0, [fp, #-24]	; 0xffffffe8
   166cc:	str	r1, [fp, #-28]	; 0xffffffe4
   166d0:	str	r2, [fp, #-32]	; 0xffffffe0
   166d4:	movw	r3, #53324	; 0xd04c
   166d8:	movt	r3, #7
   166dc:	ldr	r4, [r3, #64]	; 0x40
   166e0:	movw	r3, #53280	; 0xd020
   166e4:	movt	r3, #7
   166e8:	ldr	r0, [r3, #16]
   166ec:	movw	r3, #53280	; 0xd020
   166f0:	movt	r3, #7
   166f4:	ldr	r3, [r3, #12]
   166f8:	sub	r2, fp, #20
   166fc:	mov	r1, r3
   16700:	blx	r4
   16704:	str	r0, [fp, #-16]
   16708:	ldr	r3, [fp, #-16]
   1670c:	cmp	r3, #0
   16710:	bge	16758 <__assert_fail@plt+0x406c>
   16714:	bl	12404 <__errno_location@plt>
   16718:	mov	r3, r0
   1671c:	ldr	r4, [r3]
   16720:	movw	r0, #21496	; 0x53f8
   16724:	movt	r0, #6
   16728:	bl	12398 <gettext@plt>
   1672c:	mov	r5, r0
   16730:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16734:	mov	r0, #0
   16738:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   1673c:	mov	r3, r0
   16740:	mov	r2, r5
   16744:	mov	r1, r4
   16748:	mov	r0, #0
   1674c:	bl	122b4 <error@plt>
   16750:	mov	r3, #0
   16754:	b	167a8 <__assert_fail@plt+0x40bc>
   16758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1675c:	ldr	r3, [r3, #40]	; 0x28
   16760:	ldr	r1, [fp, #-20]	; 0xffffffec
   16764:	mov	r2, #0
   16768:	mov	r0, r3
   1676c:	bl	122d8 <fnmatch@plt>
   16770:	mov	r3, r0
   16774:	cmp	r3, #0
   16778:	moveq	r3, #1
   1677c:	movne	r3, #0
   16780:	uxtb	r3, r3
   16784:	str	r3, [fp, #-16]
   16788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1678c:	mov	r0, r3
   16790:	bl	125fc <freecon@plt>
   16794:	ldr	r3, [fp, #-16]
   16798:	cmp	r3, #0
   1679c:	movne	r3, #1
   167a0:	moveq	r3, #0
   167a4:	uxtb	r3, r3
   167a8:	mov	r0, r3
   167ac:	sub	sp, fp, #12
   167b0:	ldrd	r4, [sp]
   167b4:	ldr	fp, [sp, #8]
   167b8:	add	sp, sp, #12
   167bc:	pop	{pc}		; (ldr pc, [sp], #4)
   167c0:	str	fp, [sp, #-8]!
   167c4:	str	lr, [sp, #4]
   167c8:	add	fp, sp, #4
   167cc:	sub	sp, sp, #16
   167d0:	str	r0, [fp, #-16]
   167d4:	str	r1, [fp, #-20]	; 0xffffffec
   167d8:	ldr	r3, [fp, #-16]
   167dc:	cmp	r3, #0
   167e0:	bne	167ec <__assert_fail@plt+0x4100>
   167e4:	mov	r3, #0
   167e8:	b	1687c <__assert_fail@plt+0x4190>
   167ec:	ldr	r1, [fp, #-16]
   167f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   167f4:	bl	1226c <strcpy@plt>
   167f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   167fc:	bl	123bc <strlen@plt>
   16800:	mov	r3, r0
   16804:	sub	r3, r3, #1
   16808:	str	r3, [fp, #-8]
   1680c:	b	1681c <__assert_fail@plt+0x4130>
   16810:	ldr	r3, [fp, #-8]
   16814:	sub	r3, r3, #1
   16818:	str	r3, [fp, #-8]
   1681c:	ldr	r3, [fp, #-8]
   16820:	cmp	r3, #0
   16824:	blt	16858 <__assert_fail@plt+0x416c>
   16828:	ldr	r3, [fp, #-8]
   1682c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16830:	add	r3, r2, r3
   16834:	ldrb	r3, [r3]
   16838:	cmp	r3, #32
   1683c:	beq	16810 <__assert_fail@plt+0x4124>
   16840:	ldr	r3, [fp, #-8]
   16844:	ldr	r2, [fp, #-20]	; 0xffffffec
   16848:	add	r3, r2, r3
   1684c:	ldrb	r3, [r3]
   16850:	cmp	r3, #9
   16854:	beq	16810 <__assert_fail@plt+0x4124>
   16858:	ldr	r3, [fp, #-8]
   1685c:	add	r3, r3, #1
   16860:	str	r3, [fp, #-8]
   16864:	ldr	r3, [fp, #-8]
   16868:	ldr	r2, [fp, #-20]	; 0xffffffec
   1686c:	add	r3, r2, r3
   16870:	mov	r2, #0
   16874:	strb	r2, [r3]
   16878:	ldr	r3, [fp, #-20]	; 0xffffffec
   1687c:	mov	r0, r3
   16880:	sub	sp, fp, #4
   16884:	ldr	fp, [sp]
   16888:	add	sp, sp, #4
   1688c:	pop	{pc}		; (ldr pc, [sp], #4)
   16890:	str	fp, [sp, #-8]!
   16894:	str	lr, [sp, #4]
   16898:	add	fp, sp, #4
   1689c:	sub	sp, sp, #272	; 0x110
   168a0:	str	r0, [fp, #-272]	; 0xfffffef0
   168a4:	str	r1, [fp, #-276]	; 0xfffffeec
   168a8:	ldr	r3, [fp, #-276]	; 0xfffffeec
   168ac:	str	r3, [fp, #-8]
   168b0:	b	168f0 <__assert_fail@plt+0x4204>
   168b4:	ldr	r3, [fp, #-8]
   168b8:	ldr	r3, [r3, #4]
   168bc:	sub	r2, fp, #264	; 0x108
   168c0:	mov	r1, r2
   168c4:	mov	r0, r3
   168c8:	bl	167c0 <__assert_fail@plt+0x40d4>
   168cc:	mov	r3, r0
   168d0:	mov	r2, r3
   168d4:	movw	r1, #21520	; 0x5410
   168d8:	movt	r1, #6
   168dc:	ldr	r0, [fp, #-272]	; 0xfffffef0
   168e0:	bl	123f8 <fprintf@plt>
   168e4:	ldr	r3, [fp, #-8]
   168e8:	ldr	r3, [r3, #152]	; 0x98
   168ec:	str	r3, [fp, #-8]
   168f0:	ldr	r3, [fp, #-8]
   168f4:	cmp	r3, #0
   168f8:	bne	168b4 <__assert_fail@plt+0x41c8>
   168fc:	ldr	r1, [fp, #-272]	; 0xfffffef0
   16900:	mov	r0, #10
   16904:	bl	1256c <fputc@plt>
   16908:	nop	{0}
   1690c:	sub	sp, fp, #4
   16910:	ldr	fp, [sp]
   16914:	add	sp, sp, #4
   16918:	pop	{pc}		; (ldr pc, [sp], #4)
   1691c:	str	fp, [sp, #-8]!
   16920:	str	lr, [sp, #4]
   16924:	add	fp, sp, #4
   16928:	sub	sp, sp, #16
   1692c:	str	r0, [fp, #-16]
   16930:	str	r1, [fp, #-20]	; 0xffffffec
   16934:	mov	r3, #0
   16938:	str	r3, [fp, #-8]
   1693c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16940:	cmp	r3, #0
   16944:	beq	16a1c <__assert_fail@plt+0x4330>
   16948:	ldr	r3, [fp, #-20]	; 0xffffffec
   1694c:	ldr	r2, [r3]
   16950:	movw	r3, #23120	; 0x5a50
   16954:	movt	r3, #1
   16958:	cmp	r2, r3
   1695c:	beq	16978 <__assert_fail@plt+0x428c>
   16960:	ldr	r3, [fp, #-20]	; 0xffffffec
   16964:	ldr	r2, [r3]
   16968:	movw	r3, #17168	; 0x4310
   1696c:	movt	r3, #1
   16970:	cmp	r2, r3
   16974:	bne	169a0 <__assert_fail@plt+0x42b4>
   16978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1697c:	ldr	r3, [r3, #156]	; 0x9c
   16980:	cmp	r3, #0
   16984:	bne	169a0 <__assert_fail@plt+0x42b4>
   16988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1698c:	ldr	r3, [r3, #160]	; 0xa0
   16990:	mov	r1, r3
   16994:	ldr	r0, [fp, #-16]
   16998:	bl	1691c <__assert_fail@plt+0x4230>
   1699c:	b	16a1c <__assert_fail@plt+0x4330>
   169a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169a4:	ldr	r3, [r3, #156]	; 0x9c
   169a8:	cmp	r3, #0
   169ac:	bne	169c0 <__assert_fail@plt+0x42d4>
   169b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169b4:	ldr	r3, [r3, #160]	; 0xa0
   169b8:	cmp	r3, #0
   169bc:	beq	169c8 <__assert_fail@plt+0x42dc>
   169c0:	mov	r3, #1
   169c4:	str	r3, [fp, #-8]
   169c8:	ldr	r3, [fp, #-8]
   169cc:	cmp	r3, #0
   169d0:	beq	169ec <__assert_fail@plt+0x4300>
   169d4:	ldr	r3, [fp, #-16]
   169d8:	mov	r2, #3
   169dc:	mov	r1, #1
   169e0:	movw	r0, #21528	; 0x5418
   169e4:	movt	r0, #6
   169e8:	bl	12224 <fwrite@plt>
   169ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   169f0:	ldr	r0, [fp, #-16]
   169f4:	bl	16a30 <__assert_fail@plt+0x4344>
   169f8:	ldr	r3, [fp, #-8]
   169fc:	cmp	r3, #0
   16a00:	beq	16a1c <__assert_fail@plt+0x4330>
   16a04:	ldr	r3, [fp, #-16]
   16a08:	mov	r2, #3
   16a0c:	mov	r1, #1
   16a10:	movw	r0, #21532	; 0x541c
   16a14:	movt	r0, #6
   16a18:	bl	12224 <fwrite@plt>
   16a1c:	nop	{0}
   16a20:	sub	sp, fp, #4
   16a24:	ldr	fp, [sp]
   16a28:	add	sp, sp, #4
   16a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a30:	str	fp, [sp, #-8]!
   16a34:	str	lr, [sp, #4]
   16a38:	add	fp, sp, #4
   16a3c:	sub	sp, sp, #24
   16a40:	str	r0, [fp, #-16]
   16a44:	str	r1, [fp, #-20]	; 0xffffffec
   16a48:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a4c:	cmp	r3, #0
   16a50:	beq	16bcc <__assert_fail@plt+0x44e0>
   16a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a58:	ldr	r3, [r3, #156]	; 0x9c
   16a5c:	mov	r1, r3
   16a60:	ldr	r0, [fp, #-16]
   16a64:	bl	1691c <__assert_fail@plt+0x4230>
   16a68:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a6c:	ldrb	r3, [r3, #18]
   16a70:	cmp	r3, #0
   16a74:	beq	16a84 <__assert_fail@plt+0x4398>
   16a78:	movw	r2, #21536	; 0x5420
   16a7c:	movt	r2, #6
   16a80:	b	16a8c <__assert_fail@plt+0x43a0>
   16a84:	movw	r2, #21552	; 0x5430
   16a88:	movt	r2, #6
   16a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a90:	ldrb	r3, [r3, #19]
   16a94:	cmp	r3, #0
   16a98:	beq	16aa8 <__assert_fail@plt+0x43bc>
   16a9c:	movw	r1, #21556	; 0x5434
   16aa0:	movt	r1, #6
   16aa4:	b	16ab0 <__assert_fail@plt+0x43c4>
   16aa8:	movw	r1, #21552	; 0x5430
   16aac:	movt	r1, #6
   16ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ab4:	ldrb	r3, [r3, #20]
   16ab8:	cmp	r3, #0
   16abc:	beq	16acc <__assert_fail@plt+0x43e0>
   16ac0:	movw	r3, #21572	; 0x5444
   16ac4:	movt	r3, #6
   16ac8:	b	16ad4 <__assert_fail@plt+0x43e8>
   16acc:	movw	r3, #21552	; 0x5430
   16ad0:	movt	r3, #6
   16ad4:	str	r3, [sp]
   16ad8:	mov	r3, r1
   16adc:	movw	r1, #21588	; 0x5454
   16ae0:	movt	r1, #6
   16ae4:	ldr	r0, [fp, #-16]
   16ae8:	bl	123f8 <fprintf@plt>
   16aec:	ldr	r1, [fp, #-20]	; 0xffffffec
   16af0:	ldr	r0, [fp, #-16]
   16af4:	bl	18280 <__assert_fail@plt+0x5b94>
   16af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16afc:	vldr	s15, [r3, #28]
   16b00:	vcvt.f64.f32	d7, s15
   16b04:	vmov	r2, r3, d7
   16b08:	movw	r1, #21596	; 0x545c
   16b0c:	movt	r1, #6
   16b10:	ldr	r0, [fp, #-16]
   16b14:	bl	123f8 <fprintf@plt>
   16b18:	movw	r3, #53324	; 0xd04c
   16b1c:	movt	r3, #7
   16b20:	ldr	r3, [r3, #44]	; 0x2c
   16b24:	and	r3, r3, #64	; 0x40
   16b28:	cmp	r3, #0
   16b2c:	beq	16bb8 <__assert_fail@plt+0x44cc>
   16b30:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b34:	ldr	r2, [r3, #168]	; 0xa8
   16b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b3c:	ldr	r3, [r3, #164]	; 0xa4
   16b40:	movw	r1, #21624	; 0x5478
   16b44:	movt	r1, #6
   16b48:	ldr	r0, [fp, #-16]
   16b4c:	bl	123f8 <fprintf@plt>
   16b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b54:	ldr	r3, [r3, #164]	; 0xa4
   16b58:	cmp	r3, #0
   16b5c:	beq	16ba0 <__assert_fail@plt+0x44b4>
   16b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b64:	ldr	r3, [r3, #168]	; 0xa8
   16b68:	vmov	s15, r3
   16b6c:	vcvt.f64.u32	d5, s15
   16b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b74:	ldr	r3, [r3, #164]	; 0xa4
   16b78:	vmov	s15, r3
   16b7c:	vcvt.f64.u32	d6, s15
   16b80:	vdiv.f64	d7, d5, d6
   16b84:	vstr	d7, [fp, #-12]
   16b88:	ldrd	r2, [fp, #-12]
   16b8c:	movw	r1, #21652	; 0x5494
   16b90:	movt	r1, #6
   16b94:	ldr	r0, [fp, #-16]
   16b98:	bl	123f8 <fprintf@plt>
   16b9c:	b	16bb8 <__assert_fail@plt+0x44cc>
   16ba0:	ldr	r3, [fp, #-16]
   16ba4:	mov	r2, #4
   16ba8:	mov	r1, #1
   16bac:	movw	r0, #21660	; 0x549c
   16bb0:	movt	r0, #6
   16bb4:	bl	12224 <fwrite@plt>
   16bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16bbc:	ldr	r3, [r3, #160]	; 0xa0
   16bc0:	mov	r1, r3
   16bc4:	ldr	r0, [fp, #-16]
   16bc8:	bl	1691c <__assert_fail@plt+0x4230>
   16bcc:	nop	{0}
   16bd0:	sub	sp, fp, #4
   16bd4:	ldr	fp, [sp]
   16bd8:	add	sp, sp, #4
   16bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   16be0:	str	fp, [sp, #-8]!
   16be4:	str	lr, [sp, #4]
   16be8:	add	fp, sp, #4
   16bec:	sub	sp, sp, #8
   16bf0:	str	r0, [fp, #-8]
   16bf4:	movw	r3, #53324	; 0xd04c
   16bf8:	movt	r3, #7
   16bfc:	ldr	r3, [r3, #44]	; 0x2c
   16c00:	and	r3, r3, #64	; 0x40
   16c04:	cmp	r3, #0
   16c08:	beq	16c5c <__assert_fail@plt+0x4570>
   16c0c:	movw	r3, #50984	; 0xc728
   16c10:	movt	r3, #7
   16c14:	ldr	r3, [r3]
   16c18:	mov	r2, #42	; 0x2a
   16c1c:	mov	r1, #1
   16c20:	movw	r0, #21668	; 0x54a4
   16c24:	movt	r0, #6
   16c28:	bl	12224 <fwrite@plt>
   16c2c:	movw	r3, #50984	; 0xc728
   16c30:	movt	r3, #7
   16c34:	ldr	r3, [r3]
   16c38:	ldr	r1, [fp, #-8]
   16c3c:	mov	r0, r3
   16c40:	bl	16a30 <__assert_fail@plt+0x4344>
   16c44:	movw	r3, #50984	; 0xc728
   16c48:	movt	r3, #7
   16c4c:	ldr	r3, [r3]
   16c50:	mov	r1, r3
   16c54:	mov	r0, #10
   16c58:	bl	1256c <fputc@plt>
   16c5c:	nop	{0}
   16c60:	sub	sp, fp, #4
   16c64:	ldr	fp, [sp]
   16c68:	add	sp, sp, #4
   16c6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16c70:	str	fp, [sp, #-8]!
   16c74:	str	lr, [sp, #4]
   16c78:	add	fp, sp, #4
   16c7c:	sub	sp, sp, #16
   16c80:	str	r0, [fp, #-16]
   16c84:	ldr	r3, [fp, #-16]
   16c88:	str	r3, [fp, #-8]
   16c8c:	b	16efc <__assert_fail@plt+0x4810>
   16c90:	ldr	r3, [fp, #-8]
   16c94:	ldr	r3, [r3]
   16c98:	cmp	r3, #0
   16c9c:	bne	16cc0 <__assert_fail@plt+0x45d4>
   16ca0:	movw	r3, #22060	; 0x562c
   16ca4:	movt	r3, #6
   16ca8:	movw	r2, #1310	; 0x51e
   16cac:	movw	r1, #21224	; 0x52e8
   16cb0:	movt	r1, #6
   16cb4:	movw	r0, #21712	; 0x54d0
   16cb8:	movt	r0, #6
   16cbc:	bl	126ec <__assert_fail@plt>
   16cc0:	ldr	r3, [fp, #-8]
   16cc4:	ldr	r3, [r3, #172]	; 0xac
   16cc8:	cmp	r3, #0
   16ccc:	bne	16cf0 <__assert_fail@plt+0x4604>
   16cd0:	movw	r3, #22060	; 0x562c
   16cd4:	movt	r3, #6
   16cd8:	movw	r2, #1313	; 0x521
   16cdc:	movw	r1, #21224	; 0x52e8
   16ce0:	movt	r1, #6
   16ce4:	movw	r0, #21736	; 0x54e8
   16ce8:	movt	r0, #6
   16cec:	bl	126ec <__assert_fail@plt>
   16cf0:	ldr	r3, [fp, #-8]
   16cf4:	ldr	r3, [r3, #172]	; 0xac
   16cf8:	ldr	r3, [r3, #12]
   16cfc:	cmp	r3, #0
   16d00:	beq	16d40 <__assert_fail@plt+0x4654>
   16d04:	ldr	r3, [fp, #-8]
   16d08:	ldr	r3, [r3, #172]	; 0xac
   16d0c:	ldr	r2, [r3, #12]
   16d10:	ldr	r3, [fp, #-8]
   16d14:	ldr	r3, [r3]
   16d18:	cmp	r2, r3
   16d1c:	beq	16d40 <__assert_fail@plt+0x4654>
   16d20:	movw	r3, #22060	; 0x562c
   16d24:	movt	r3, #6
   16d28:	movw	r2, #1322	; 0x52a
   16d2c:	movw	r1, #21224	; 0x52e8
   16d30:	movt	r1, #6
   16d34:	movw	r0, #21760	; 0x5500
   16d38:	movt	r0, #6
   16d3c:	bl	126ec <__assert_fail@plt>
   16d40:	ldr	r3, [fp, #-8]
   16d44:	ldr	r3, [r3, #172]	; 0xac
   16d48:	ldr	r3, [r3]
   16d4c:	cmp	r3, #6
   16d50:	ldrls	pc, [pc, r3, lsl #2]
   16d54:	b	16ef0 <__assert_fail@plt+0x4804>
   16d58:	andeq	r6, r1, r4, ror sp
   16d5c:	andeq	r6, r1, ip, ror #28
   16d60:	andeq	r6, r1, r4, ror sp
   16d64:	andeq	r6, r1, ip, ror #28
   16d68:	andeq	r6, r1, ip, ror #28
   16d6c:	andeq	r6, r1, ip, ror #28
   16d70:	ldrdeq	r6, [r1], -ip
   16d74:	ldr	r3, [fp, #-8]
   16d78:	ldr	r3, [r3, #172]	; 0xac
   16d7c:	ldr	r3, [r3]
   16d80:	cmp	r3, #0
   16d84:	bne	16da8 <__assert_fail@plt+0x46bc>
   16d88:	movw	r3, #22060	; 0x562c
   16d8c:	movt	r3, #6
   16d90:	movw	r2, #1338	; 0x53a
   16d94:	movw	r1, #21224	; 0x52e8
   16d98:	movt	r1, #6
   16d9c:	movw	r0, #21804	; 0x552c
   16da0:	movt	r0, #6
   16da4:	bl	126ec <__assert_fail@plt>
   16da8:	ldr	r3, [fp, #-8]
   16dac:	ldr	r3, [r3, #172]	; 0xac
   16db0:	ldr	r3, [r3]
   16db4:	cmp	r3, #2
   16db8:	bne	16edc <__assert_fail@plt+0x47f0>
   16dbc:	movw	r3, #22060	; 0x562c
   16dc0:	movt	r3, #6
   16dc4:	movw	r2, #1339	; 0x53b
   16dc8:	movw	r1, #21224	; 0x52e8
   16dcc:	movt	r1, #6
   16dd0:	movw	r0, #21840	; 0x5550
   16dd4:	movt	r0, #6
   16dd8:	bl	126ec <__assert_fail@plt>
   16ddc:	ldr	r3, [fp, #-8]
   16de0:	ldrb	r3, [r3, #16]
   16de4:	cmp	r3, #0
   16de8:	bne	16e0c <__assert_fail@plt+0x4720>
   16dec:	movw	r3, #22060	; 0x562c
   16df0:	movt	r3, #6
   16df4:	movw	r2, #1343	; 0x53f
   16df8:	movw	r1, #21224	; 0x52e8
   16dfc:	movt	r1, #6
   16e00:	movw	r0, #21888	; 0x5580
   16e04:	movt	r0, #6
   16e08:	bl	126ec <__assert_fail@plt>
   16e0c:	ldr	r3, [fp, #-8]
   16e10:	ldr	r2, [r3]
   16e14:	movw	r3, #24104	; 0x5e28
   16e18:	movt	r3, #1
   16e1c:	cmp	r2, r3
   16e20:	beq	16ee4 <__assert_fail@plt+0x47f8>
   16e24:	ldr	r3, [fp, #-8]
   16e28:	ldr	r2, [r3]
   16e2c:	movw	r3, #24276	; 0x5ed4
   16e30:	movt	r3, #1
   16e34:	cmp	r2, r3
   16e38:	beq	16ee4 <__assert_fail@plt+0x47f8>
   16e3c:	ldr	r3, [fp, #-8]
   16e40:	ldrb	r3, [r3, #17]
   16e44:	cmp	r3, #0
   16e48:	bne	16ee4 <__assert_fail@plt+0x47f8>
   16e4c:	movw	r3, #22060	; 0x562c
   16e50:	movt	r3, #6
   16e54:	movw	r2, #1349	; 0x545
   16e58:	movw	r1, #21224	; 0x52e8
   16e5c:	movt	r1, #6
   16e60:	movw	r0, #21904	; 0x5590
   16e64:	movt	r0, #6
   16e68:	bl	126ec <__assert_fail@plt>
   16e6c:	ldr	r3, [fp, #-8]
   16e70:	ldrb	r3, [r3, #17]
   16e74:	eor	r3, r3, #1
   16e78:	uxtb	r3, r3
   16e7c:	cmp	r3, #0
   16e80:	bne	16ea4 <__assert_fail@plt+0x47b8>
   16e84:	movw	r3, #22060	; 0x562c
   16e88:	movt	r3, #6
   16e8c:	movw	r2, #1363	; 0x553
   16e90:	movw	r1, #21224	; 0x52e8
   16e94:	movt	r1, #6
   16e98:	movw	r0, #21924	; 0x55a4
   16e9c:	movt	r0, #6
   16ea0:	bl	126ec <__assert_fail@plt>
   16ea4:	ldr	r3, [fp, #-8]
   16ea8:	ldrb	r3, [r3, #16]
   16eac:	eor	r3, r3, #1
   16eb0:	uxtb	r3, r3
   16eb4:	cmp	r3, #0
   16eb8:	bne	16eec <__assert_fail@plt+0x4800>
   16ebc:	movw	r3, #22060	; 0x562c
   16ec0:	movt	r3, #6
   16ec4:	movw	r2, #1364	; 0x554
   16ec8:	movw	r1, #21224	; 0x52e8
   16ecc:	movt	r1, #6
   16ed0:	movw	r0, #21948	; 0x55bc
   16ed4:	movt	r0, #6
   16ed8:	bl	126ec <__assert_fail@plt>
   16edc:	nop	{0}
   16ee0:	b	16ef0 <__assert_fail@plt+0x4804>
   16ee4:	nop	{0}
   16ee8:	b	16ef0 <__assert_fail@plt+0x4804>
   16eec:	nop	{0}
   16ef0:	ldr	r3, [fp, #-8]
   16ef4:	ldr	r3, [r3, #152]	; 0x98
   16ef8:	str	r3, [fp, #-8]
   16efc:	ldr	r3, [fp, #-8]
   16f00:	cmp	r3, #0
   16f04:	bne	16c90 <__assert_fail@plt+0x45a4>
   16f08:	nop	{0}
   16f0c:	sub	sp, fp, #4
   16f10:	ldr	fp, [sp]
   16f14:	add	sp, sp, #4
   16f18:	pop	{pc}		; (ldr pc, [sp], #4)
   16f1c:	str	r4, [sp, #-12]!
   16f20:	str	fp, [sp, #4]
   16f24:	str	lr, [sp, #8]
   16f28:	add	fp, sp, #8
   16f2c:	sub	sp, sp, #20
   16f30:	str	r0, [fp, #-16]
   16f34:	str	r1, [fp, #-20]	; 0xffffffec
   16f38:	str	r2, [fp, #-24]	; 0xffffffe8
   16f3c:	mov	r0, #8
   16f40:	bl	3d8ec <__assert_fail@plt+0x2b200>
   16f44:	mov	r3, r0
   16f48:	mov	r2, r3
   16f4c:	ldr	r3, [fp, #-16]
   16f50:	str	r2, [r3, #104]	; 0x68
   16f54:	ldr	r3, [fp, #-16]
   16f58:	ldr	r3, [r3, #104]	; 0x68
   16f5c:	mov	r2, #0
   16f60:	str	r2, [r3, #4]
   16f64:	ldr	r3, [fp, #-16]
   16f68:	ldr	r4, [r3, #104]	; 0x68
   16f6c:	mov	r2, #0
   16f70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f74:	ldr	r0, [fp, #-20]	; 0xffffffec
   16f78:	bl	31ab4 <__assert_fail@plt+0x1f3c8>
   16f7c:	mov	r3, r0
   16f80:	str	r3, [r4]
   16f84:	ldr	r3, [fp, #-16]
   16f88:	ldr	r3, [r3, #104]	; 0x68
   16f8c:	ldr	r3, [r3]
   16f90:	cmp	r3, #0
   16f94:	bge	16fa0 <__assert_fail@plt+0x48b4>
   16f98:	mov	r3, #0
   16f9c:	b	16fbc <__assert_fail@plt+0x48d0>
   16fa0:	ldr	r3, [fp, #-16]
   16fa4:	ldr	r3, [r3, #104]	; 0x68
   16fa8:	ldr	r3, [r3]
   16fac:	mov	r1, #1
   16fb0:	mov	r0, r3
   16fb4:	bl	2b8a0 <__assert_fail@plt+0x191b4>
   16fb8:	mov	r3, #1
   16fbc:	mov	r0, r3
   16fc0:	sub	sp, fp, #8
   16fc4:	ldr	r4, [sp]
   16fc8:	ldr	fp, [sp, #4]
   16fcc:	add	sp, sp, #8
   16fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   16fd4:	str	fp, [sp, #-8]!
   16fd8:	str	lr, [sp, #4]
   16fdc:	add	fp, sp, #4
   16fe0:	sub	sp, sp, #16
   16fe4:	str	r0, [fp, #-16]
   16fe8:	ldr	r3, [fp, #-16]
   16fec:	ldr	r3, [r3, #76]	; 0x4c
   16ff0:	cmp	r3, #0
   16ff4:	bne	170c4 <__assert_fail@plt+0x49d8>
   16ff8:	ldr	r3, [fp, #-16]
   16ffc:	ldr	r3, [r3, #76]	; 0x4c
   17000:	cmp	r3, #0
   17004:	beq	17028 <__assert_fail@plt+0x493c>
   17008:	movw	r3, #22516	; 0x57f4
   1700c:	movt	r3, #6
   17010:	mov	r2, #71	; 0x47
   17014:	movw	r1, #22080	; 0x5640
   17018:	movt	r1, #6
   1701c:	movw	r0, #22088	; 0x5648
   17020:	movt	r0, #6
   17024:	bl	126ec <__assert_fail@plt>
   17028:	movw	r3, #53280	; 0xd020
   1702c:	movt	r3, #7
   17030:	ldr	r3, [r3, #12]
   17034:	mov	r1, #47	; 0x2f
   17038:	mov	r0, r3
   1703c:	bl	123c8 <strchr@plt>
   17040:	mov	r3, r0
   17044:	cmp	r3, #0
   17048:	beq	1709c <__assert_fail@plt+0x49b0>
   1704c:	movw	r3, #53280	; 0xd020
   17050:	movt	r3, #7
   17054:	ldr	r3, [r3, #12]
   17058:	mov	r0, r3
   1705c:	bl	2be34 <__assert_fail@plt+0x19748>
   17060:	mov	r3, r0
   17064:	str	r3, [fp, #-8]
   17068:	movw	r3, #53280	; 0xd020
   1706c:	movt	r3, #7
   17070:	ldr	r3, [r3, #16]
   17074:	ldr	r2, [fp, #-8]
   17078:	mov	r1, r3
   1707c:	ldr	r0, [fp, #-16]
   17080:	bl	16f1c <__assert_fail@plt+0x4830>
   17084:	mov	r3, r0
   17088:	strb	r3, [fp, #-9]
   1708c:	ldr	r0, [fp, #-8]
   17090:	bl	3fe0c <__assert_fail@plt+0x2d720>
   17094:	ldrb	r3, [fp, #-9]
   17098:	b	170c8 <__assert_fail@plt+0x49dc>
   1709c:	movw	r3, #53280	; 0xd020
   170a0:	movt	r3, #7
   170a4:	ldr	r3, [r3, #16]
   170a8:	movw	r2, #22108	; 0x565c
   170ac:	movt	r2, #6
   170b0:	mov	r1, r3
   170b4:	ldr	r0, [fp, #-16]
   170b8:	bl	16f1c <__assert_fail@plt+0x4830>
   170bc:	mov	r3, r0
   170c0:	b	170c8 <__assert_fail@plt+0x49dc>
   170c4:	mov	r3, #1
   170c8:	mov	r0, r3
   170cc:	sub	sp, fp, #4
   170d0:	ldr	fp, [sp]
   170d4:	add	sp, sp, #4
   170d8:	pop	{pc}		; (ldr pc, [sp], #4)
   170dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   170e0:	strd	r6, [sp, #8]
   170e4:	str	fp, [sp, #16]
   170e8:	str	lr, [sp, #20]
   170ec:	add	fp, sp, #20
   170f0:	sub	sp, sp, #72	; 0x48
   170f4:	str	r0, [fp, #-56]	; 0xffffffc8
   170f8:	str	r1, [fp, #-60]	; 0xffffffc4
   170fc:	str	r2, [fp, #-64]	; 0xffffffc0
   17100:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17104:	add	r3, r3, #40	; 0x28
   17108:	str	r3, [fp, #-48]	; 0xffffffd0
   1710c:	mov	r3, #0
   17110:	str	r3, [fp, #-24]	; 0xffffffe8
   17114:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17118:	ldr	r3, [r3]
   1711c:	mov	r0, r3
   17120:	bl	1d388 <__assert_fail@plt+0xac9c>
   17124:	mov	r3, r0
   17128:	strb	r3, [fp, #-49]	; 0xffffffcf
   1712c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   17130:	cmp	r3, #0
   17134:	beq	171f0 <__assert_fail@plt+0x4b04>
   17138:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1713c:	bl	16fd4 <__assert_fail@plt+0x48e8>
   17140:	mov	r3, r0
   17144:	eor	r3, r3, #1
   17148:	uxtb	r3, r3
   1714c:	cmp	r3, #0
   17150:	beq	17190 <__assert_fail@plt+0x4aa4>
   17154:	bl	12404 <__errno_location@plt>
   17158:	mov	r3, r0
   1715c:	ldr	r4, [r3]
   17160:	movw	r0, #22112	; 0x5660
   17164:	movt	r0, #6
   17168:	bl	12398 <gettext@plt>
   1716c:	mov	r5, r0
   17170:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17174:	mov	r0, #0
   17178:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   1717c:	mov	r3, r0
   17180:	mov	r2, r5
   17184:	mov	r1, r4
   17188:	mov	r0, #1
   1718c:	bl	122b4 <error@plt>
   17190:	movw	r3, #53280	; 0xd020
   17194:	movt	r3, #7
   17198:	ldr	r3, [r3, #12]
   1719c:	mov	r0, r3
   171a0:	bl	2bc30 <__assert_fail@plt+0x19544>
   171a4:	mov	r3, r0
   171a8:	str	r3, [fp, #-24]	; 0xffffffe8
   171ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   171b0:	str	r3, [fp, #-28]	; 0xffffffe4
   171b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   171b8:	ldrb	r3, [r3]
   171bc:	cmp	r3, #47	; 0x2f
   171c0:	bne	171d8 <__assert_fail@plt+0x4aec>
   171c4:	mov	r3, #0
   171c8:	str	r3, [fp, #-36]	; 0xffffffdc
   171cc:	mov	r3, #0
   171d0:	str	r3, [fp, #-40]	; 0xffffffd8
   171d4:	b	17244 <__assert_fail@plt+0x4b58>
   171d8:	movw	r3, #22180	; 0x56a4
   171dc:	movt	r3, #6
   171e0:	str	r3, [fp, #-36]	; 0xffffffdc
   171e4:	mov	r3, #2
   171e8:	str	r3, [fp, #-40]	; 0xffffffd8
   171ec:	b	17244 <__assert_fail@plt+0x4b58>
   171f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   171f4:	ldr	r2, [r3, #104]	; 0x68
   171f8:	movw	r3, #51020	; 0xc74c
   171fc:	movt	r3, #7
   17200:	ldr	r3, [r3]
   17204:	cmp	r2, r3
   17208:	beq	1722c <__assert_fail@plt+0x4b40>
   1720c:	movw	r3, #22532	; 0x5804
   17210:	movt	r3, #6
   17214:	mov	r2, #148	; 0x94
   17218:	movw	r1, #22080	; 0x5640
   1721c:	movt	r1, #6
   17220:	movw	r0, #22184	; 0x56a8
   17224:	movt	r0, #6
   17228:	bl	126ec <__assert_fail@plt>
   1722c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17230:	str	r3, [fp, #-28]	; 0xffffffe4
   17234:	mov	r3, #0
   17238:	str	r3, [fp, #-36]	; 0xffffffdc
   1723c:	mov	r3, #0
   17240:	str	r3, [fp, #-40]	; 0xffffffd8
   17244:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17248:	ldrb	r3, [r3]
   1724c:	cmp	r3, #0
   17250:	beq	172cc <__assert_fail@plt+0x4be0>
   17254:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17258:	add	r4, r3, #4
   1725c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17260:	add	r5, r3, #48	; 0x30
   17264:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17268:	bl	123bc <strlen@plt>
   1726c:	mov	r3, r0
   17270:	add	r2, r3, #1
   17274:	mov	r3, #0
   17278:	str	r3, [sp, #8]
   1727c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17280:	str	r3, [sp, #4]
   17284:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17288:	str	r3, [sp]
   1728c:	mov	r3, r2
   17290:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17294:	mov	r1, r5
   17298:	mov	r0, r4
   1729c:	bl	27ea8 <__assert_fail@plt+0x157bc>
   172a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   172a4:	ldr	r3, [r3, #76]	; 0x4c
   172a8:	cmp	r3, #0
   172ac:	beq	172c0 <__assert_fail@plt+0x4bd4>
   172b0:	movw	r3, #53280	; 0xd020
   172b4:	movt	r3, #7
   172b8:	mov	r2, #1
   172bc:	strb	r2, [r3, #32]
   172c0:	mov	r3, #1
   172c4:	strb	r3, [fp, #-29]	; 0xffffffe3
   172c8:	b	1740c <__assert_fail@plt+0x4d20>
   172cc:	mov	r3, #0
   172d0:	str	r3, [fp, #-44]	; 0xffffffd4
   172d4:	b	17374 <__assert_fail@plt+0x4c88>
   172d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   172dc:	add	r4, r3, #4
   172e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   172e4:	add	r5, r3, #48	; 0x30
   172e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   172ec:	ldr	r2, [r3, #92]	; 0x5c
   172f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   172f4:	lsl	r3, r3, #2
   172f8:	add	r3, r2, r3
   172fc:	ldr	r6, [r3]
   17300:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17304:	ldr	r2, [r3, #92]	; 0x5c
   17308:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1730c:	lsl	r3, r3, #2
   17310:	add	r3, r2, r3
   17314:	ldr	r3, [r3]
   17318:	mov	r0, r3
   1731c:	bl	123bc <strlen@plt>
   17320:	mov	r7, r0
   17324:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17328:	bl	123bc <strlen@plt>
   1732c:	mov	r2, r0
   17330:	mov	r3, #0
   17334:	str	r3, [sp, #16]
   17338:	str	r2, [sp, #12]
   1733c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17340:	str	r3, [sp, #8]
   17344:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17348:	str	r3, [sp, #4]
   1734c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17350:	str	r3, [sp]
   17354:	mov	r3, r7
   17358:	mov	r2, r6
   1735c:	mov	r1, r5
   17360:	mov	r0, r4
   17364:	bl	2766c <__assert_fail@plt+0x14f80>
   17368:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1736c:	add	r3, r3, #1
   17370:	str	r3, [fp, #-44]	; 0xffffffd4
   17374:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17378:	ldr	r3, [r3, #96]	; 0x60
   1737c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17380:	cmp	r2, r3
   17384:	blt	172d8 <__assert_fail@plt+0x4bec>
   17388:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1738c:	add	r2, r3, #4
   17390:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17394:	add	r3, r3, #48	; 0x30
   17398:	mov	r1, r3
   1739c:	mov	r0, r2
   173a0:	bl	27c20 <__assert_fail@plt+0x15534>
   173a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   173a8:	ldr	r3, [r3, #108]	; 0x6c
   173ac:	and	r3, r3, #127	; 0x7f
   173b0:	cmp	r3, #0
   173b4:	bne	173e8 <__assert_fail@plt+0x4cfc>
   173b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   173bc:	ldr	r3, [r3, #108]	; 0x6c
   173c0:	asr	r3, r3, #8
   173c4:	uxtb	r3, r3
   173c8:	cmp	r3, #0
   173cc:	bne	173dc <__assert_fail@plt+0x4cf0>
   173d0:	mov	r3, #1
   173d4:	strb	r3, [fp, #-29]	; 0xffffffe3
   173d8:	b	173f0 <__assert_fail@plt+0x4d04>
   173dc:	mov	r3, #0
   173e0:	strb	r3, [fp, #-29]	; 0xffffffe3
   173e4:	b	173f0 <__assert_fail@plt+0x4d04>
   173e8:	mov	r3, #0
   173ec:	strb	r3, [fp, #-29]	; 0xffffffe3
   173f0:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   173f4:	cmp	r3, #0
   173f8:	beq	1740c <__assert_fail@plt+0x4d20>
   173fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17400:	ldr	r3, [r3, #104]	; 0x68
   17404:	mov	r0, r3
   17408:	bl	3c364 <__assert_fail@plt+0x29c78>
   1740c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17410:	cmp	r3, #0
   17414:	beq	1744c <__assert_fail@plt+0x4d60>
   17418:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   1741c:	cmp	r3, #0
   17420:	bne	17444 <__assert_fail@plt+0x4d58>
   17424:	movw	r3, #22532	; 0x5804
   17428:	movt	r3, #6
   1742c:	mov	r2, #208	; 0xd0
   17430:	movw	r1, #22080	; 0x5640
   17434:	movt	r1, #6
   17438:	movw	r0, #22220	; 0x56cc
   1743c:	movt	r0, #6
   17440:	bl	126ec <__assert_fail@plt>
   17444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17448:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1744c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   17450:	mov	r0, r3
   17454:	sub	sp, fp, #20
   17458:	ldrd	r4, [sp]
   1745c:	ldrd	r6, [sp, #8]
   17460:	ldr	fp, [sp, #16]
   17464:	add	sp, sp, #20
   17468:	pop	{pc}		; (ldr pc, [sp], #4)
   1746c:	str	r4, [sp, #-12]!
   17470:	str	fp, [sp, #4]
   17474:	str	lr, [sp, #8]
   17478:	add	fp, sp, #8
   1747c:	sub	sp, sp, #36	; 0x24
   17480:	mov	r3, r0
   17484:	str	r1, [fp, #-36]	; 0xffffffdc
   17488:	strb	r3, [fp, #-29]	; 0xffffffe3
   1748c:	mov	r3, #1
   17490:	strb	r3, [fp, #-13]
   17494:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   17498:	cmp	r3, #0
   1749c:	beq	1755c <__assert_fail@plt+0x4e70>
   174a0:	movw	r3, #22300	; 0x571c
   174a4:	movt	r3, #6
   174a8:	sub	r1, fp, #24
   174ac:	mov	r0, r3
   174b0:	ldrd	r2, [r0]
   174b4:	strd	r2, [r1]
   174b8:	ldrh	r3, [r0, #8]
   174bc:	strh	r3, [r1, #8]
   174c0:	mov	r0, #0
   174c4:	bl	126a4 <close@plt>
   174c8:	mov	r3, r0
   174cc:	cmp	r3, #0
   174d0:	bge	1750c <__assert_fail@plt+0x4e20>
   174d4:	bl	12404 <__errno_location@plt>
   174d8:	mov	r3, r0
   174dc:	ldr	r4, [r3]
   174e0:	movw	r0, #22228	; 0x56d4
   174e4:	movt	r0, #6
   174e8:	bl	12398 <gettext@plt>
   174ec:	mov	r3, r0
   174f0:	mov	r2, r3
   174f4:	mov	r1, r4
   174f8:	mov	r0, #0
   174fc:	bl	122b4 <error@plt>
   17500:	mov	r3, #0
   17504:	strb	r3, [fp, #-13]
   17508:	b	1755c <__assert_fail@plt+0x4e70>
   1750c:	sub	r3, fp, #24
   17510:	mov	r1, #131072	; 0x20000
   17514:	mov	r0, r3
   17518:	bl	2bf8c <__assert_fail@plt+0x198a0>
   1751c:	mov	r3, r0
   17520:	cmp	r3, #0
   17524:	bge	1755c <__assert_fail@plt+0x4e70>
   17528:	bl	12404 <__errno_location@plt>
   1752c:	mov	r3, r0
   17530:	ldr	r4, [r3]
   17534:	sub	r3, fp, #24
   17538:	mov	r1, r3
   1753c:	mov	r0, #0
   17540:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   17544:	mov	r3, r0
   17548:	movw	r2, #22256	; 0x56f0
   1754c:	movt	r2, #6
   17550:	mov	r1, r4
   17554:	mov	r0, #0
   17558:	bl	122b4 <error@plt>
   1755c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17560:	bl	3c300 <__assert_fail@plt+0x29c14>
   17564:	mov	r3, r0
   17568:	cmp	r3, #0
   1756c:	beq	17610 <__assert_fail@plt+0x4f24>
   17570:	bl	12404 <__errno_location@plt>
   17574:	mov	r3, r0
   17578:	ldr	r4, [r3]
   1757c:	movw	r0, #22260	; 0x56f4
   17580:	movt	r0, #6
   17584:	bl	12398 <gettext@plt>
   17588:	mov	r1, r0
   1758c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17590:	ldr	r3, [r3]
   17594:	cmp	r3, #0
   17598:	bge	175b8 <__assert_fail@plt+0x4ecc>
   1759c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175a0:	ldr	r3, [r3, #4]
   175a4:	cmp	r3, #0
   175a8:	beq	175b8 <__assert_fail@plt+0x4ecc>
   175ac:	movw	r3, #22292	; 0x5714
   175b0:	movt	r3, #6
   175b4:	b	175c0 <__assert_fail@plt+0x4ed4>
   175b8:	movw	r3, #22296	; 0x5718
   175bc:	movt	r3, #6
   175c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   175c4:	ldr	r2, [r2]
   175c8:	cmp	r2, #0
   175cc:	bge	175ec <__assert_fail@plt+0x4f00>
   175d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   175d4:	ldr	r2, [r2, #4]
   175d8:	cmp	r2, #0
   175dc:	beq	175ec <__assert_fail@plt+0x4f00>
   175e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   175e4:	ldr	r2, [r2, #4]
   175e8:	b	175f4 <__assert_fail@plt+0x4f08>
   175ec:	movw	r2, #22296	; 0x5718
   175f0:	movt	r2, #6
   175f4:	str	r2, [sp]
   175f8:	mov	r2, r1
   175fc:	mov	r1, r4
   17600:	mov	r0, #0
   17604:	bl	122b4 <error@plt>
   17608:	mov	r3, #0
   1760c:	strb	r3, [fp, #-13]
   17610:	ldrb	r3, [fp, #-13]
   17614:	mov	r0, r3
   17618:	sub	sp, fp, #8
   1761c:	ldr	r4, [sp]
   17620:	ldr	fp, [sp, #4]
   17624:	add	sp, sp, #8
   17628:	pop	{pc}		; (ldr pc, [sp], #4)
   1762c:	strd	r4, [sp, #-16]!
   17630:	str	fp, [sp, #8]
   17634:	str	lr, [sp, #12]
   17638:	add	fp, sp, #12
   1763c:	sub	sp, sp, #40	; 0x28
   17640:	str	r0, [fp, #-32]	; 0xffffffe0
   17644:	str	r1, [fp, #-36]	; 0xffffffdc
   17648:	str	r2, [fp, #-40]	; 0xffffffd8
   1764c:	str	r3, [fp, #-44]	; 0xffffffd4
   17650:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17654:	str	r3, [fp, #-20]	; 0xffffffec
   17658:	movw	r3, #53324	; 0xd04c
   1765c:	movt	r3, #7
   17660:	ldr	r3, [r3, #44]	; 0x2c
   17664:	and	r3, r3, #32
   17668:	cmp	r3, #0
   1766c:	beq	17738 <__assert_fail@plt+0x504c>
   17670:	movw	r3, #50984	; 0xc728
   17674:	movt	r3, #7
   17678:	ldr	r0, [r3]
   1767c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17680:	ldr	r3, [r3, #48]	; 0x30
   17684:	mov	r2, r3
   17688:	mov	r3, #0
   1768c:	subs	r4, r2, #1
   17690:	sbc	r5, r3, #0
   17694:	mov	r2, r4
   17698:	mov	r3, r5
   1769c:	movw	r1, #22312	; 0x5728
   176a0:	movt	r1, #6
   176a4:	bl	123f8 <fprintf@plt>
   176a8:	mov	r3, #0
   176ac:	str	r3, [fp, #-16]
   176b0:	b	17708 <__assert_fail@plt+0x501c>
   176b4:	movw	r3, #50984	; 0xc728
   176b8:	movt	r3, #7
   176bc:	ldr	r4, [r3]
   176c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   176c4:	ldr	r2, [r3, #52]	; 0x34
   176c8:	ldr	r3, [fp, #-16]
   176cc:	lsl	r3, r3, #2
   176d0:	add	r3, r2, r3
   176d4:	ldr	r3, [r3]
   176d8:	mov	r1, r3
   176dc:	mov	r0, #0
   176e0:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   176e4:	mov	r3, r0
   176e8:	mov	r2, r3
   176ec:	movw	r1, #22356	; 0x5754
   176f0:	movt	r1, #6
   176f4:	mov	r0, r4
   176f8:	bl	123f8 <fprintf@plt>
   176fc:	ldr	r3, [fp, #-16]
   17700:	add	r3, r3, #1
   17704:	str	r3, [fp, #-16]
   17708:	ldr	r3, [fp, #-20]	; 0xffffffec
   1770c:	ldr	r3, [r3, #48]	; 0x30
   17710:	sub	r2, r3, #1
   17714:	ldr	r3, [fp, #-16]
   17718:	cmp	r2, r3
   1771c:	bhi	176b4 <__assert_fail@plt+0x4fc8>
   17720:	movw	r3, #50984	; 0xc728
   17724:	movt	r3, #7
   17728:	ldr	r3, [r3]
   1772c:	mov	r1, r3
   17730:	mov	r0, #10
   17734:	bl	1256c <fputc@plt>
   17738:	movw	r3, #50996	; 0xc734
   1773c:	movt	r3, #7
   17740:	ldr	r3, [r3]
   17744:	mov	r0, r3
   17748:	bl	3fda0 <__assert_fail@plt+0x2d6b4>
   1774c:	movw	r3, #50984	; 0xc728
   17750:	movt	r3, #7
   17754:	ldr	r3, [r3]
   17758:	mov	r0, r3
   1775c:	bl	3fda0 <__assert_fail@plt+0x2d6b4>
   17760:	movw	r3, #49836	; 0xc2ac
   17764:	movt	r3, #7
   17768:	ldr	r3, [r3]
   1776c:	cmp	r3, #0
   17770:	beq	17790 <__assert_fail@plt+0x50a4>
   17774:	movw	r3, #49836	; 0xc2ac
   17778:	movt	r3, #7
   1777c:	mov	r2, #0
   17780:	str	r2, [r3]
   17784:	mov	r1, #0
   17788:	mov	r0, #17
   1778c:	bl	12140 <signal@plt>
   17790:	bl	12524 <fork@plt>
   17794:	mov	r3, r0
   17798:	str	r3, [fp, #-24]	; 0xffffffe8
   1779c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177a0:	cmn	r3, #1
   177a4:	bne	177d4 <__assert_fail@plt+0x50e8>
   177a8:	bl	12404 <__errno_location@plt>
   177ac:	mov	r3, r0
   177b0:	ldr	r4, [r3]
   177b4:	movw	r0, #22360	; 0x5758
   177b8:	movt	r0, #6
   177bc:	bl	12398 <gettext@plt>
   177c0:	mov	r3, r0
   177c4:	mov	r2, r3
   177c8:	mov	r1, r4
   177cc:	mov	r0, #1
   177d0:	bl	122b4 <error@plt>
   177d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   177d8:	cmp	r3, #0
   177dc:	bne	17948 <__assert_fail@plt+0x525c>
   177e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   177e4:	ldr	r3, [r3, #104]	; 0x68
   177e8:	cmp	r3, #0
   177ec:	bne	17810 <__assert_fail@plt+0x5124>
   177f0:	movw	r3, #22548	; 0x5814
   177f4:	movt	r3, #6
   177f8:	movw	r2, #321	; 0x141
   177fc:	movw	r1, #22080	; 0x5640
   17800:	movt	r1, #6
   17804:	movw	r0, #22372	; 0x5764
   17808:	movt	r0, #6
   1780c:	bl	126ec <__assert_fail@plt>
   17810:	ldr	r3, [fp, #-20]	; 0xffffffec
   17814:	ldrb	r2, [r3, #100]	; 0x64
   17818:	ldr	r3, [fp, #-20]	; 0xffffffec
   1781c:	ldr	r3, [r3, #104]	; 0x68
   17820:	mov	r1, r3
   17824:	mov	r0, r2
   17828:	bl	1746c <__assert_fail@plt+0x4d80>
   1782c:	mov	r3, r0
   17830:	eor	r3, r3, #1
   17834:	uxtb	r3, r3
   17838:	cmp	r3, #0
   1783c:	beq	17848 <__assert_fail@plt+0x515c>
   17840:	mov	r0, #1
   17844:	bl	120ec <_exit@plt>
   17848:	bl	29590 <__assert_fail@plt+0x16ea4>
   1784c:	mov	r3, r0
   17850:	cmp	r3, #0
   17854:	beq	1785c <__assert_fail@plt+0x5170>
   17858:	bl	295d4 <__assert_fail@plt+0x16ee8>
   1785c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17860:	bl	28734 <__assert_fail@plt+0x16048>
   17864:	mov	r3, r0
   17868:	cmp	r3, #0
   1786c:	beq	17884 <__assert_fail@plt+0x5198>
   17870:	bl	12404 <__errno_location@plt>
   17874:	mov	r2, r0
   17878:	mov	r3, #7
   1787c:	str	r3, [r2]
   17880:	b	17898 <__assert_fail@plt+0x51ac>
   17884:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17888:	ldr	r3, [r3]
   1788c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17890:	mov	r0, r3
   17894:	bl	12104 <execvp@plt>
   17898:	bl	12404 <__errno_location@plt>
   1789c:	mov	r3, r0
   178a0:	ldr	r4, [r3]
   178a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   178a8:	ldr	r3, [r3]
   178ac:	mov	r1, r3
   178b0:	mov	r0, #0
   178b4:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   178b8:	mov	r3, r0
   178bc:	movw	r2, #22256	; 0x56f0
   178c0:	movt	r2, #6
   178c4:	mov	r1, r4
   178c8:	mov	r0, #0
   178cc:	bl	122b4 <error@plt>
   178d0:	mov	r0, #1
   178d4:	bl	120ec <_exit@plt>
   178d8:	bl	12404 <__errno_location@plt>
   178dc:	mov	r3, r0
   178e0:	ldr	r3, [r3]
   178e4:	cmp	r3, #4
   178e8:	beq	17948 <__assert_fail@plt+0x525c>
   178ec:	bl	12404 <__errno_location@plt>
   178f0:	mov	r3, r0
   178f4:	ldr	r4, [r3]
   178f8:	movw	r0, #22400	; 0x5780
   178fc:	movt	r0, #6
   17900:	bl	12398 <gettext@plt>
   17904:	mov	r5, r0
   17908:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1790c:	ldr	r3, [r3]
   17910:	mov	r1, r3
   17914:	mov	r0, #0
   17918:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   1791c:	mov	r3, r0
   17920:	mov	r2, r5
   17924:	mov	r1, r4
   17928:	mov	r0, #0
   1792c:	bl	122b4 <error@plt>
   17930:	movw	r3, #53280	; 0xd020
   17934:	movt	r3, #7
   17938:	mov	r2, #1
   1793c:	str	r2, [r3, #28]
   17940:	mov	r3, #0
   17944:	b	17aa0 <__assert_fail@plt+0x53b4>
   17948:	ldr	r3, [fp, #-20]	; 0xffffffec
   1794c:	add	r3, r3, #108	; 0x6c
   17950:	mov	r2, #0
   17954:	mov	r1, r3
   17958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1795c:	bl	12248 <waitpid@plt>
   17960:	mov	r3, r0
   17964:	cmn	r3, #1
   17968:	beq	178d8 <__assert_fail@plt+0x51ec>
   1796c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17970:	ldr	r3, [r3, #108]	; 0x6c
   17974:	uxtb	r3, r3
   17978:	and	r3, r3, #127	; 0x7f
   1797c:	uxtb	r3, r3
   17980:	add	r3, r3, #1
   17984:	uxtb	r3, r3
   17988:	sxtb	r3, r3
   1798c:	asr	r3, r3, #1
   17990:	sxtb	r3, r3
   17994:	cmp	r3, #0
   17998:	ble	17a1c <__assert_fail@plt+0x5330>
   1799c:	movw	r0, #22424	; 0x5798
   179a0:	movt	r0, #6
   179a4:	bl	12398 <gettext@plt>
   179a8:	mov	r4, r0
   179ac:	movw	r3, #53324	; 0xd04c
   179b0:	movt	r3, #7
   179b4:	ldr	r1, [r3, #72]	; 0x48
   179b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   179bc:	ldr	r3, [r3]
   179c0:	mov	r2, r3
   179c4:	mov	r0, #0
   179c8:	bl	3bc98 <__assert_fail@plt+0x295ac>
   179cc:	mov	r2, r0
   179d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   179d4:	ldr	r3, [r3, #108]	; 0x6c
   179d8:	and	r3, r3, #127	; 0x7f
   179dc:	str	r3, [sp]
   179e0:	mov	r3, r2
   179e4:	mov	r2, r4
   179e8:	mov	r1, #0
   179ec:	mov	r0, #0
   179f0:	bl	122b4 <error@plt>
   179f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   179f8:	ldrb	r3, [r3]
   179fc:	cmp	r3, #0
   17a00:	beq	17a14 <__assert_fail@plt+0x5328>
   17a04:	movw	r3, #53280	; 0xd020
   17a08:	movt	r3, #7
   17a0c:	mov	r2, #1
   17a10:	str	r2, [r3, #28]
   17a14:	mov	r3, #1
   17a18:	b	17aa0 <__assert_fail@plt+0x53b4>
   17a1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a20:	ldr	r3, [r3, #108]	; 0x6c
   17a24:	asr	r3, r3, #8
   17a28:	uxtb	r3, r3
   17a2c:	str	r3, [fp, #-28]	; 0xffffffe4
   17a30:	movw	r3, #53324	; 0xd04c
   17a34:	movt	r3, #7
   17a38:	ldr	r3, [r3, #44]	; 0x2c
   17a3c:	and	r3, r3, #32
   17a40:	cmp	r3, #0
   17a44:	beq	17a68 <__assert_fail@plt+0x537c>
   17a48:	movw	r3, #50984	; 0xc728
   17a4c:	movt	r3, #7
   17a50:	ldr	r0, [r3]
   17a54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17a58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a5c:	movw	r1, #22452	; 0x57b4
   17a60:	movt	r1, #6
   17a64:	bl	123f8 <fprintf@plt>
   17a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17a6c:	cmp	r3, #0
   17a70:	bne	17a7c <__assert_fail@plt+0x5390>
   17a74:	mov	r3, #1
   17a78:	b	17aa0 <__assert_fail@plt+0x53b4>
   17a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a80:	ldrb	r3, [r3]
   17a84:	cmp	r3, #0
   17a88:	beq	17a9c <__assert_fail@plt+0x53b0>
   17a8c:	movw	r3, #53280	; 0xd020
   17a90:	movt	r3, #7
   17a94:	mov	r2, #1
   17a98:	str	r2, [r3, #28]
   17a9c:	mov	r3, #1
   17aa0:	mov	r0, r3
   17aa4:	sub	sp, fp, #12
   17aa8:	ldrd	r4, [sp]
   17aac:	ldr	fp, [sp, #8]
   17ab0:	add	sp, sp, #12
   17ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ab8:	str	fp, [sp, #-8]!
   17abc:	str	lr, [sp, #4]
   17ac0:	add	fp, sp, #4
   17ac4:	sub	sp, sp, #16
   17ac8:	str	r0, [fp, #-16]
   17acc:	mov	r3, r1
   17ad0:	strb	r3, [fp, #-17]	; 0xffffffef
   17ad4:	mov	r3, #0
   17ad8:	str	r3, [fp, #-8]
   17adc:	ldrb	r3, [fp, #-17]	; 0xffffffef
   17ae0:	cmp	r3, #0
   17ae4:	beq	17af4 <__assert_fail@plt+0x5408>
   17ae8:	ldr	r3, [fp, #-8]
   17aec:	orr	r3, r3, #16
   17af0:	str	r3, [fp, #-8]
   17af4:	movw	r3, #51040	; 0xc760
   17af8:	movt	r3, #7
   17afc:	ldr	r3, [r3]
   17b00:	cmp	r3, #0
   17b04:	beq	17b80 <__assert_fail@plt+0x5494>
   17b08:	mov	r3, #0
   17b0c:	str	r3, [fp, #-12]
   17b10:	b	17b60 <__assert_fail@plt+0x5474>
   17b14:	movw	r3, #51036	; 0xc75c
   17b18:	movt	r3, #7
   17b1c:	ldr	r2, [r3]
   17b20:	ldr	r3, [fp, #-12]
   17b24:	lsl	r3, r3, #2
   17b28:	add	r3, r2, r3
   17b2c:	ldr	r3, [r3]
   17b30:	ldr	r2, [fp, #-8]
   17b34:	mov	r1, r3
   17b38:	ldr	r0, [fp, #-16]
   17b3c:	bl	122d8 <fnmatch@plt>
   17b40:	mov	r3, r0
   17b44:	cmp	r3, #0
   17b48:	bne	17b54 <__assert_fail@plt+0x5468>
   17b4c:	mov	r3, #1
   17b50:	b	17ba8 <__assert_fail@plt+0x54bc>
   17b54:	ldr	r3, [fp, #-12]
   17b58:	add	r3, r3, #1
   17b5c:	str	r3, [fp, #-12]
   17b60:	movw	r3, #51040	; 0xc760
   17b64:	movt	r3, #7
   17b68:	ldr	r3, [r3]
   17b6c:	ldr	r2, [fp, #-12]
   17b70:	cmp	r2, r3
   17b74:	bcc	17b14 <__assert_fail@plt+0x5428>
   17b78:	mov	r3, #0
   17b7c:	b	17ba8 <__assert_fail@plt+0x54bc>
   17b80:	ldr	r2, [fp, #-8]
   17b84:	movw	r1, #22556	; 0x581c
   17b88:	movt	r1, #6
   17b8c:	ldr	r0, [fp, #-16]
   17b90:	bl	122d8 <fnmatch@plt>
   17b94:	mov	r3, r0
   17b98:	cmp	r3, #0
   17b9c:	moveq	r3, #1
   17ba0:	movne	r3, #0
   17ba4:	uxtb	r3, r3
   17ba8:	mov	r0, r3
   17bac:	sub	sp, fp, #4
   17bb0:	ldr	fp, [sp]
   17bb4:	add	sp, sp, #4
   17bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   17bbc:	str	fp, [sp, #-8]!
   17bc0:	str	lr, [sp, #4]
   17bc4:	add	fp, sp, #4
   17bc8:	sub	sp, sp, #24
   17bcc:	str	r0, [fp, #-16]
   17bd0:	mov	r3, r1
   17bd4:	str	r2, [fp, #-24]	; 0xffffffe8
   17bd8:	strh	r3, [fp, #-18]	; 0xffffffee
   17bdc:	mov	r3, #0
   17be0:	str	r3, [fp, #-8]
   17be4:	ldr	r3, [fp, #-16]
   17be8:	ldr	r3, [r3]
   17bec:	str	r3, [fp, #-12]
   17bf0:	ldr	r3, [fp, #-16]
   17bf4:	ldr	r3, [r3]
   17bf8:	cmp	r3, #0
   17bfc:	bne	17c20 <__assert_fail@plt+0x5534>
   17c00:	movw	r0, #22560	; 0x5820
   17c04:	movt	r0, #6
   17c08:	bl	12398 <gettext@plt>
   17c0c:	mov	r3, r0
   17c10:	mov	r2, r3
   17c14:	mov	r1, #0
   17c18:	mov	r0, #1
   17c1c:	bl	122b4 <error@plt>
   17c20:	ldr	r3, [fp, #-16]
   17c24:	ldr	r3, [r3]
   17c28:	ldr	r3, [r3, #8]
   17c2c:	cmp	r3, #5
   17c30:	ldrls	pc, [pc, r3, lsl #2]
   17c34:	b	17f28 <__assert_fail@plt+0x583c>
   17c38:	andeq	r7, r1, r0, asr ip
   17c3c:	andeq	r7, r1, r8, ror sp
   17c40:	muleq	r1, ip, sp
   17c44:	andeq	r7, r1, r0, ror ip
   17c48:	ldrdeq	r7, [r1], -ip
   17c4c:	muleq	r1, r4, ip
   17c50:	movw	r0, #22560	; 0x5820
   17c54:	movt	r0, #6
   17c58:	bl	12398 <gettext@plt>
   17c5c:	mov	r3, r0
   17c60:	mov	r2, r3
   17c64:	mov	r1, #0
   17c68:	mov	r0, #1
   17c6c:	bl	122b4 <error@plt>
   17c70:	movw	r0, #22580	; 0x5834
   17c74:	movt	r0, #6
   17c78:	bl	12398 <gettext@plt>
   17c7c:	mov	r2, r0
   17c80:	ldr	r3, [fp, #-12]
   17c84:	ldr	r3, [r3, #4]
   17c88:	mov	r1, #0
   17c8c:	mov	r0, #1
   17c90:	bl	122b4 <error@plt>
   17c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17c98:	cmp	r3, #0
   17c9c:	bne	17cc4 <__assert_fail@plt+0x55d8>
   17ca0:	movw	r0, #22664	; 0x5888
   17ca4:	movt	r0, #6
   17ca8:	bl	12398 <gettext@plt>
   17cac:	mov	r2, r0
   17cb0:	ldr	r3, [fp, #-12]
   17cb4:	ldr	r3, [r3, #4]
   17cb8:	mov	r1, #0
   17cbc:	mov	r0, #1
   17cc0:	bl	122b4 <error@plt>
   17cc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cc8:	ldr	r3, [r3, #8]
   17ccc:	cmp	r3, #2
   17cd0:	beq	17ce4 <__assert_fail@plt+0x55f8>
   17cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17cd8:	ldr	r3, [r3, #8]
   17cdc:	cmp	r3, #3
   17ce0:	bne	17d20 <__assert_fail@plt+0x5634>
   17ce4:	ldr	r3, [fp, #-12]
   17ce8:	ldrb	r3, [r3, #33]	; 0x21
   17cec:	eor	r3, r3, #1
   17cf0:	uxtb	r3, r3
   17cf4:	cmp	r3, #0
   17cf8:	beq	17d20 <__assert_fail@plt+0x5634>
   17cfc:	movw	r0, #22740	; 0x58d4
   17d00:	movt	r0, #6
   17d04:	bl	12398 <gettext@plt>
   17d08:	mov	r2, r0
   17d0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d10:	ldr	r3, [r3, #4]
   17d14:	mov	r1, #0
   17d18:	mov	r0, #1
   17d1c:	bl	122b4 <error@plt>
   17d20:	ldr	r3, [fp, #-16]
   17d24:	ldr	r3, [r3]
   17d28:	ldrb	r3, [r3, #33]	; 0x21
   17d2c:	cmp	r3, #0
   17d30:	beq	17d58 <__assert_fail@plt+0x566c>
   17d34:	movw	r0, #22784	; 0x5900
   17d38:	movt	r0, #6
   17d3c:	bl	12398 <gettext@plt>
   17d40:	mov	r2, r0
   17d44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d48:	ldr	r3, [r3, #4]
   17d4c:	mov	r1, #0
   17d50:	mov	r0, #1
   17d54:	bl	122b4 <error@plt>
   17d58:	movw	r0, #22820	; 0x5924
   17d5c:	movt	r0, #6
   17d60:	bl	12398 <gettext@plt>
   17d64:	mov	r3, r0
   17d68:	mov	r2, r3
   17d6c:	mov	r1, #0
   17d70:	mov	r0, #1
   17d74:	bl	122b4 <error@plt>
   17d78:	ldr	r3, [fp, #-16]
   17d7c:	ldr	r3, [r3]
   17d80:	str	r3, [fp, #-8]
   17d84:	ldr	r3, [fp, #-16]
   17d88:	ldr	r3, [r3]
   17d8c:	ldr	r2, [r3, #152]	; 0x98
   17d90:	ldr	r3, [fp, #-16]
   17d94:	str	r2, [r3]
   17d98:	b	17f48 <__assert_fail@plt+0x585c>
   17d9c:	ldr	r3, [fp, #-16]
   17da0:	ldr	r3, [r3]
   17da4:	str	r3, [fp, #-8]
   17da8:	ldr	r3, [fp, #-16]
   17dac:	ldr	r3, [r3]
   17db0:	ldr	r2, [r3, #152]	; 0x98
   17db4:	ldr	r3, [fp, #-16]
   17db8:	str	r2, [r3]
   17dbc:	ldr	r2, [fp, #-8]
   17dc0:	mov	r1, #4
   17dc4:	ldr	r0, [fp, #-16]
   17dc8:	bl	17bbc <__assert_fail@plt+0x54d0>
   17dcc:	mov	r2, r0
   17dd0:	ldr	r3, [fp, #-8]
   17dd4:	str	r2, [r3, #160]	; 0xa0
   17dd8:	b	17f48 <__assert_fail@plt+0x585c>
   17ddc:	ldr	r3, [fp, #-16]
   17de0:	ldr	r3, [r3]
   17de4:	ldr	r3, [r3, #152]	; 0x98
   17de8:	cmp	r3, #0
   17dec:	beq	17e08 <__assert_fail@plt+0x571c>
   17df0:	ldr	r3, [fp, #-16]
   17df4:	ldr	r3, [r3]
   17df8:	ldr	r3, [r3, #152]	; 0x98
   17dfc:	ldrb	r3, [r3, #33]	; 0x21
   17e00:	cmp	r3, #0
   17e04:	beq	17e2c <__assert_fail@plt+0x5740>
   17e08:	movw	r0, #22864	; 0x5950
   17e0c:	movt	r0, #6
   17e10:	bl	12398 <gettext@plt>
   17e14:	mov	r2, r0
   17e18:	ldr	r3, [fp, #-12]
   17e1c:	ldr	r3, [r3, #4]
   17e20:	mov	r1, #0
   17e24:	mov	r0, #1
   17e28:	bl	122b4 <error@plt>
   17e2c:	ldr	r3, [fp, #-16]
   17e30:	ldr	r3, [r3]
   17e34:	str	r3, [fp, #-24]	; 0xffffffe8
   17e38:	ldr	r3, [fp, #-16]
   17e3c:	ldr	r3, [r3]
   17e40:	ldr	r2, [r3, #152]	; 0x98
   17e44:	ldr	r3, [fp, #-16]
   17e48:	str	r2, [r3]
   17e4c:	ldr	r3, [fp, #-16]
   17e50:	ldr	r3, [r3]
   17e54:	ldr	r3, [r3, #8]
   17e58:	cmp	r3, #5
   17e5c:	bne	17eb8 <__assert_fail@plt+0x57cc>
   17e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e64:	ldrb	r3, [r3, #33]	; 0x21
   17e68:	cmp	r3, #0
   17e6c:	beq	17e98 <__assert_fail@plt+0x57ac>
   17e70:	movw	r0, #22664	; 0x5888
   17e74:	movt	r0, #6
   17e78:	bl	12398 <gettext@plt>
   17e7c:	mov	r2, r0
   17e80:	ldr	r3, [fp, #-16]
   17e84:	ldr	r3, [r3]
   17e88:	ldr	r3, [r3, #4]
   17e8c:	mov	r1, #0
   17e90:	mov	r0, #1
   17e94:	bl	122b4 <error@plt>
   17e98:	movw	r0, #22976	; 0x59c0
   17e9c:	movt	r0, #6
   17ea0:	bl	12398 <gettext@plt>
   17ea4:	mov	r3, r0
   17ea8:	mov	r2, r3
   17eac:	mov	r1, #0
   17eb0:	mov	r0, #1
   17eb4:	bl	122b4 <error@plt>
   17eb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ebc:	mov	r1, #0
   17ec0:	ldr	r0, [fp, #-16]
   17ec4:	bl	17bbc <__assert_fail@plt+0x54d0>
   17ec8:	str	r0, [fp, #-8]
   17ecc:	ldr	r3, [fp, #-16]
   17ed0:	ldr	r3, [r3]
   17ed4:	cmp	r3, #0
   17ed8:	beq	17ef0 <__assert_fail@plt+0x5804>
   17edc:	ldr	r3, [fp, #-16]
   17ee0:	ldr	r3, [r3]
   17ee4:	ldr	r3, [r3, #8]
   17ee8:	cmp	r3, #5
   17eec:	beq	17f10 <__assert_fail@plt+0x5824>
   17ef0:	movw	r0, #23032	; 0x59f8
   17ef4:	movt	r0, #6
   17ef8:	bl	12398 <gettext@plt>
   17efc:	mov	r3, r0
   17f00:	mov	r2, r3
   17f04:	mov	r1, #0
   17f08:	mov	r0, #1
   17f0c:	bl	122b4 <error@plt>
   17f10:	ldr	r3, [fp, #-16]
   17f14:	ldr	r3, [r3]
   17f18:	ldr	r2, [r3, #152]	; 0x98
   17f1c:	ldr	r3, [fp, #-16]
   17f20:	str	r2, [r3]
   17f24:	b	17f48 <__assert_fail@plt+0x585c>
   17f28:	movw	r0, #23116	; 0x5a4c
   17f2c:	movt	r0, #6
   17f30:	bl	12398 <gettext@plt>
   17f34:	mov	r3, r0
   17f38:	mov	r2, r3
   17f3c:	mov	r1, #0
   17f40:	mov	r0, #1
   17f44:	bl	122b4 <error@plt>
   17f48:	ldr	r3, [fp, #-16]
   17f4c:	ldr	r3, [r3]
   17f50:	cmp	r3, #0
   17f54:	bne	17f60 <__assert_fail@plt+0x5874>
   17f58:	ldr	r3, [fp, #-8]
   17f5c:	b	17fc4 <__assert_fail@plt+0x58d8>
   17f60:	ldr	r3, [fp, #-16]
   17f64:	ldr	r3, [r3]
   17f68:	ldr	r3, [r3, #12]
   17f6c:	mov	r2, r3
   17f70:	ldrsh	r3, [fp, #-18]	; 0xffffffee
   17f74:	cmp	r2, r3
   17f78:	ble	17fc0 <__assert_fail@plt+0x58d4>
   17f7c:	ldrsh	r3, [fp, #-18]	; 0xffffffee
   17f80:	mov	r2, r3
   17f84:	ldr	r1, [fp, #-8]
   17f88:	ldr	r0, [fp, #-16]
   17f8c:	bl	17fd8 <__assert_fail@plt+0x58ec>
   17f90:	str	r0, [fp, #-8]
   17f94:	ldr	r3, [fp, #-8]
   17f98:	cmp	r3, #0
   17f9c:	bne	17fc0 <__assert_fail@plt+0x58d4>
   17fa0:	movw	r0, #22560	; 0x5820
   17fa4:	movt	r0, #6
   17fa8:	bl	12398 <gettext@plt>
   17fac:	mov	r3, r0
   17fb0:	mov	r2, r3
   17fb4:	mov	r1, #0
   17fb8:	mov	r0, #1
   17fbc:	bl	122b4 <error@plt>
   17fc0:	ldr	r3, [fp, #-8]
   17fc4:	mov	r0, r3
   17fc8:	sub	sp, fp, #4
   17fcc:	ldr	fp, [sp]
   17fd0:	add	sp, sp, #4
   17fd4:	pop	{pc}		; (ldr pc, [sp], #4)
   17fd8:	str	fp, [sp, #-8]!
   17fdc:	str	lr, [sp, #4]
   17fe0:	add	fp, sp, #4
   17fe4:	sub	sp, sp, #24
   17fe8:	str	r0, [fp, #-16]
   17fec:	str	r1, [fp, #-20]	; 0xffffffec
   17ff0:	mov	r3, r2
   17ff4:	strh	r3, [fp, #-22]	; 0xffffffea
   17ff8:	ldr	r3, [fp, #-16]
   17ffc:	ldr	r3, [r3]
   18000:	cmp	r3, #0
   18004:	beq	1801c <__assert_fail@plt+0x5930>
   18008:	ldr	r3, [fp, #-16]
   1800c:	ldr	r3, [r3]
   18010:	ldr	r3, [r3, #8]
   18014:	cmp	r3, #5
   18018:	bne	18024 <__assert_fail@plt+0x5938>
   1801c:	mov	r3, #0
   18020:	b	18148 <__assert_fail@plt+0x5a5c>
   18024:	ldr	r3, [fp, #-20]	; 0xffffffec
   18028:	str	r3, [fp, #-8]
   1802c:	b	18118 <__assert_fail@plt+0x5a2c>
   18030:	ldr	r3, [fp, #-16]
   18034:	ldr	r3, [r3]
   18038:	ldr	r3, [r3, #8]
   1803c:	cmp	r3, #5
   18040:	ldrls	pc, [pc, r3, lsl #2]
   18044:	b	180f0 <__assert_fail@plt+0x5a04>
   18048:	andeq	r8, r1, r0, rrx
   1804c:	andeq	r8, r1, r0, rrx
   18050:	andeq	r8, r1, r0, rrx
   18054:	andeq	r8, r1, r0, lsl #1
   18058:	andeq	r8, r1, r0, rrx
   1805c:	andeq	r8, r1, r8, ror #1
   18060:	movw	r0, #22560	; 0x5820
   18064:	movt	r0, #6
   18068:	bl	12398 <gettext@plt>
   1806c:	mov	r3, r0
   18070:	mov	r2, r3
   18074:	mov	r1, #0
   18078:	mov	r0, #1
   1807c:	bl	122b4 <error@plt>
   18080:	ldr	r3, [fp, #-16]
   18084:	ldr	r3, [r3]
   18088:	str	r3, [fp, #-12]
   1808c:	ldr	r3, [fp, #-16]
   18090:	ldr	r3, [r3]
   18094:	ldr	r2, [fp, #-8]
   18098:	str	r2, [r3, #156]	; 0x9c
   1809c:	ldr	r3, [fp, #-16]
   180a0:	ldr	r3, [r3]
   180a4:	str	r3, [fp, #-8]
   180a8:	ldr	r3, [fp, #-16]
   180ac:	ldr	r3, [r3]
   180b0:	ldr	r2, [r3, #152]	; 0x98
   180b4:	ldr	r3, [fp, #-16]
   180b8:	str	r2, [r3]
   180bc:	ldr	r3, [fp, #-8]
   180c0:	ldr	r3, [r3, #12]
   180c4:	sxth	r3, r3
   180c8:	ldr	r2, [fp, #-12]
   180cc:	mov	r1, r3
   180d0:	ldr	r0, [fp, #-16]
   180d4:	bl	17bbc <__assert_fail@plt+0x54d0>
   180d8:	mov	r2, r0
   180dc:	ldr	r3, [fp, #-8]
   180e0:	str	r2, [r3, #160]	; 0xa0
   180e4:	b	18118 <__assert_fail@plt+0x5a2c>
   180e8:	ldr	r3, [fp, #-8]
   180ec:	b	18148 <__assert_fail@plt+0x5a5c>
   180f0:	movw	r0, #23152	; 0x5a70
   180f4:	movt	r0, #6
   180f8:	bl	12398 <gettext@plt>
   180fc:	mov	r2, r0
   18100:	ldr	r3, [fp, #-16]
   18104:	ldr	r3, [r3]
   18108:	ldr	r3, [r3, #8]
   1810c:	mov	r1, #0
   18110:	mov	r0, #1
   18114:	bl	122b4 <error@plt>
   18118:	ldr	r3, [fp, #-16]
   1811c:	ldr	r3, [r3]
   18120:	cmp	r3, #0
   18124:	beq	18144 <__assert_fail@plt+0x5a58>
   18128:	ldr	r3, [fp, #-16]
   1812c:	ldr	r3, [r3]
   18130:	ldr	r3, [r3, #12]
   18134:	mov	r2, r3
   18138:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   1813c:	cmp	r2, r3
   18140:	bgt	18030 <__assert_fail@plt+0x5944>
   18144:	ldr	r3, [fp, #-8]
   18148:	mov	r0, r3
   1814c:	sub	sp, fp, #4
   18150:	ldr	fp, [sp]
   18154:	add	sp, sp, #4
   18158:	pop	{pc}		; (ldr pc, [sp], #4)
   1815c:	push	{fp}		; (str fp, [sp, #-4]!)
   18160:	add	fp, sp, #0
   18164:	sub	sp, sp, #12
   18168:	str	r0, [fp, #-8]
   1816c:	ldr	r3, [fp, #-8]
   18170:	ldr	r2, [r3]
   18174:	movw	r3, #21608	; 0x5468
   18178:	movt	r3, #1
   1817c:	cmp	r2, r3
   18180:	beq	181cc <__assert_fail@plt+0x5ae0>
   18184:	ldr	r3, [fp, #-8]
   18188:	ldr	r2, [r3]
   1818c:	movw	r3, #23264	; 0x5ae0
   18190:	movt	r3, #1
   18194:	cmp	r2, r3
   18198:	beq	181cc <__assert_fail@plt+0x5ae0>
   1819c:	ldr	r3, [fp, #-8]
   181a0:	ldr	r2, [r3]
   181a4:	movw	r3, #20424	; 0x4fc8
   181a8:	movt	r3, #1
   181ac:	cmp	r2, r3
   181b0:	beq	181cc <__assert_fail@plt+0x5ae0>
   181b4:	ldr	r3, [fp, #-8]
   181b8:	ldr	r2, [r3]
   181bc:	movw	r3, #20708	; 0x50e4
   181c0:	movt	r3, #1
   181c4:	cmp	r2, r3
   181c8:	bne	181d4 <__assert_fail@plt+0x5ae8>
   181cc:	mov	r3, #1
   181d0:	b	18270 <__assert_fail@plt+0x5b84>
   181d4:	movw	r3, #53324	; 0xd04c
   181d8:	movt	r3, #7
   181dc:	ldrh	r3, [r3, #68]	; 0x44
   181e0:	cmp	r3, #0
   181e4:	beq	1826c <__assert_fail@plt+0x5b80>
   181e8:	ldr	r3, [fp, #-8]
   181ec:	ldr	r2, [r3]
   181f0:	movw	r3, #17168	; 0x4310
   181f4:	movt	r3, #1
   181f8:	cmp	r2, r3
   181fc:	beq	18248 <__assert_fail@plt+0x5b5c>
   18200:	ldr	r3, [fp, #-8]
   18204:	ldr	r2, [r3]
   18208:	movw	r3, #21684	; 0x54b4
   1820c:	movt	r3, #1
   18210:	cmp	r2, r3
   18214:	beq	18248 <__assert_fail@plt+0x5b5c>
   18218:	ldr	r3, [fp, #-8]
   1821c:	ldr	r2, [r3]
   18220:	movw	r3, #17840	; 0x45b0
   18224:	movt	r3, #1
   18228:	cmp	r2, r3
   1822c:	beq	18248 <__assert_fail@plt+0x5b5c>
   18230:	ldr	r3, [fp, #-8]
   18234:	ldr	r2, [r3]
   18238:	movw	r3, #23120	; 0x5a50
   1823c:	movt	r3, #1
   18240:	cmp	r2, r3
   18244:	bne	18250 <__assert_fail@plt+0x5b64>
   18248:	mov	r3, #0
   1824c:	b	18270 <__assert_fail@plt+0x5b84>
   18250:	ldr	r3, [fp, #-8]
   18254:	ldr	r3, [r3, #24]
   18258:	cmp	r3, #0
   1825c:	moveq	r3, #1
   18260:	movne	r3, #0
   18264:	uxtb	r3, r3
   18268:	b	18270 <__assert_fail@plt+0x5b84>
   1826c:	mov	r3, #0
   18270:	mov	r0, r3
   18274:	add	sp, fp, #0
   18278:	pop	{fp}		; (ldr fp, [sp], #4)
   1827c:	bx	lr
   18280:	str	fp, [sp, #-8]!
   18284:	str	lr, [sp, #4]
   18288:	add	fp, sp, #4
   1828c:	sub	sp, sp, #8
   18290:	str	r0, [fp, #-8]
   18294:	str	r1, [fp, #-12]
   18298:	ldr	r3, [fp, #-12]
   1829c:	ldr	r3, [r3, #36]	; 0x24
   182a0:	cmp	r3, #0
   182a4:	beq	182cc <__assert_fail@plt+0x5be0>
   182a8:	ldr	r3, [fp, #-12]
   182ac:	ldr	r2, [r3, #4]
   182b0:	ldr	r3, [fp, #-12]
   182b4:	ldr	r3, [r3, #36]	; 0x24
   182b8:	movw	r1, #23192	; 0x5a98
   182bc:	movt	r1, #6
   182c0:	ldr	r0, [fp, #-8]
   182c4:	bl	123f8 <fprintf@plt>
   182c8:	b	182e0 <__assert_fail@plt+0x5bf4>
   182cc:	ldr	r3, [fp, #-12]
   182d0:	ldr	r3, [r3, #4]
   182d4:	ldr	r1, [fp, #-8]
   182d8:	mov	r0, r3
   182dc:	bl	12680 <fputs@plt>
   182e0:	nop	{0}
   182e4:	sub	sp, fp, #4
   182e8:	ldr	fp, [sp]
   182ec:	add	sp, sp, #4
   182f0:	pop	{pc}		; (ldr pc, [sp], #4)
   182f4:	push	{fp}		; (str fp, [sp, #-4]!)
   182f8:	add	fp, sp, #0
   182fc:	sub	sp, sp, #12
   18300:	str	r0, [fp, #-8]
   18304:	ldr	r3, [fp, #-8]
   18308:	mov	r2, #0
   1830c:	str	r2, [r3, #4]
   18310:	ldr	r3, [fp, #-8]
   18314:	ldr	r2, [r3, #4]
   18318:	ldr	r3, [fp, #-8]
   1831c:	str	r2, [r3]
   18320:	nop	{0}
   18324:	add	sp, fp, #0
   18328:	pop	{fp}		; (ldr fp, [sp], #4)
   1832c:	bx	lr
   18330:	push	{fp}		; (str fp, [sp, #-4]!)
   18334:	add	fp, sp, #0
   18338:	sub	sp, sp, #28
   1833c:	str	r0, [fp, #-16]
   18340:	str	r1, [fp, #-20]	; 0xffffffec
   18344:	str	r2, [fp, #-24]	; 0xffffffe8
   18348:	ldr	r3, [fp, #-16]
   1834c:	str	r3, [fp, #-8]
   18350:	ldr	r3, [fp, #-20]	; 0xffffffec
   18354:	ldr	r2, [r3, #156]	; 0x9c
   18358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1835c:	str	r2, [r3]
   18360:	ldr	r3, [fp, #-8]
   18364:	ldr	r2, [r3]
   18368:	ldr	r3, [fp, #-20]	; 0xffffffec
   1836c:	str	r2, [r3, #156]	; 0x9c
   18370:	ldr	r3, [fp, #-8]
   18374:	ldr	r2, [fp, #-20]	; 0xffffffec
   18378:	str	r2, [r3]
   1837c:	ldr	r3, [fp, #-16]
   18380:	ldr	r3, [r3, #4]
   18384:	cmp	r3, #0
   18388:	bne	1839c <__assert_fail@plt+0x5cb0>
   1838c:	ldr	r3, [fp, #-16]
   18390:	ldr	r2, [r3]
   18394:	ldr	r3, [fp, #-16]
   18398:	str	r2, [r3, #4]
   1839c:	nop	{0}
   183a0:	add	sp, fp, #0
   183a4:	pop	{fp}		; (ldr fp, [sp], #4)
   183a8:	bx	lr
   183ac:	push	{fp}		; (str fp, [sp, #-4]!)
   183b0:	add	fp, sp, #0
   183b4:	sub	sp, sp, #20
   183b8:	str	r0, [fp, #-8]
   183bc:	str	r1, [fp, #-12]
   183c0:	mov	r3, r2
   183c4:	strb	r3, [fp, #-13]
   183c8:	ldr	r3, [fp, #-8]
   183cc:	ldr	r2, [r3, #24]
   183d0:	ldr	r3, [fp, #-12]
   183d4:	ldr	r3, [r3, #24]
   183d8:	cmp	r2, r3
   183dc:	bne	18468 <__assert_fail@plt+0x5d7c>
   183e0:	ldr	r3, [fp, #-8]
   183e4:	vldr	s14, [r3, #28]
   183e8:	ldr	r3, [fp, #-12]
   183ec:	vldr	s15, [r3, #28]
   183f0:	vcmp.f32	s14, s15
   183f4:	vmrs	APSR_nzcv, fpscr
   183f8:	bne	18404 <__assert_fail@plt+0x5d18>
   183fc:	mov	r3, #0
   18400:	b	1848c <__assert_fail@plt+0x5da0>
   18404:	ldrb	r3, [fp, #-13]
   18408:	cmp	r3, #0
   1840c:	beq	1843c <__assert_fail@plt+0x5d50>
   18410:	ldr	r3, [fp, #-8]
   18414:	vldr	s14, [r3, #28]
   18418:	ldr	r3, [fp, #-12]
   1841c:	vldr	s15, [r3, #28]
   18420:	vcmpe.f32	s14, s15
   18424:	vmrs	APSR_nzcv, fpscr
   18428:	bpl	18434 <__assert_fail@plt+0x5d48>
   1842c:	mvn	r3, #0
   18430:	b	1848c <__assert_fail@plt+0x5da0>
   18434:	mov	r3, #1
   18438:	b	1848c <__assert_fail@plt+0x5da0>
   1843c:	ldr	r3, [fp, #-8]
   18440:	vldr	s14, [r3, #28]
   18444:	ldr	r3, [fp, #-12]
   18448:	vldr	s15, [r3, #28]
   1844c:	vcmpe.f32	s14, s15
   18450:	vmrs	APSR_nzcv, fpscr
   18454:	bpl	18460 <__assert_fail@plt+0x5d74>
   18458:	mov	r3, #1
   1845c:	b	1848c <__assert_fail@plt+0x5da0>
   18460:	mvn	r3, #0
   18464:	b	1848c <__assert_fail@plt+0x5da0>
   18468:	ldr	r3, [fp, #-8]
   1846c:	ldr	r2, [r3, #24]
   18470:	ldr	r3, [fp, #-12]
   18474:	ldr	r3, [r3, #24]
   18478:	cmp	r2, r3
   1847c:	bcs	18488 <__assert_fail@plt+0x5d9c>
   18480:	mvn	r3, #0
   18484:	b	1848c <__assert_fail@plt+0x5da0>
   18488:	mov	r3, #1
   1848c:	mov	r0, r3
   18490:	add	sp, fp, #0
   18494:	pop	{fp}		; (ldr fp, [sp], #4)
   18498:	bx	lr
   1849c:	str	fp, [sp, #-8]!
   184a0:	str	lr, [sp, #4]
   184a4:	add	fp, sp, #4
   184a8:	sub	sp, sp, #32
   184ac:	str	r0, [fp, #-32]	; 0xffffffe0
   184b0:	str	r1, [fp, #-36]	; 0xffffffdc
   184b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   184b8:	ldr	r3, [r3]
   184bc:	cmp	r3, #0
   184c0:	beq	186d8 <__assert_fail@plt+0x5fec>
   184c4:	movw	r3, #53324	; 0xd04c
   184c8:	movt	r3, #7
   184cc:	ldr	r3, [r3, #44]	; 0x2c
   184d0:	and	r3, r3, #8
   184d4:	cmp	r3, #0
   184d8:	beq	18520 <__assert_fail@plt+0x5e34>
   184dc:	movw	r3, #50984	; 0xc728
   184e0:	movt	r3, #7
   184e4:	ldr	r3, [r3]
   184e8:	movw	r2, #23200	; 0x5aa0
   184ec:	movt	r2, #6
   184f0:	movw	r1, #23228	; 0x5abc
   184f4:	movt	r1, #6
   184f8:	mov	r0, r3
   184fc:	bl	123f8 <fprintf@plt>
   18500:	movw	r3, #50984	; 0xc728
   18504:	movt	r3, #7
   18508:	ldr	r0, [r3]
   1850c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18510:	ldr	r3, [r3]
   18514:	mov	r2, #2
   18518:	mov	r1, r3
   1851c:	bl	1ae48 <__assert_fail@plt+0x875c>
   18520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18524:	ldr	r3, [r3]
   18528:	mov	r0, r3
   1852c:	bl	199bc <__assert_fail@plt+0x72d0>
   18530:	sub	r3, fp, #24
   18534:	mov	r0, r3
   18538:	bl	182f4 <__assert_fail@plt+0x5c08>
   1853c:	b	18644 <__assert_fail@plt+0x5f58>
   18540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18544:	ldr	r3, [r3]
   18548:	str	r3, [fp, #-12]
   1854c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18550:	ldr	r3, [r3]
   18554:	ldr	r2, [r3, #156]	; 0x9c
   18558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1855c:	str	r2, [r3]
   18560:	ldr	r3, [fp, #-12]
   18564:	mov	r2, #0
   18568:	str	r2, [r3, #156]	; 0x9c
   1856c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18570:	str	r3, [fp, #-8]
   18574:	b	185c4 <__assert_fail@plt+0x5ed8>
   18578:	ldr	r3, [fp, #-8]
   1857c:	ldr	r3, [r3, #12]
   18580:	cmp	r3, #2
   18584:	movne	r3, #1
   18588:	moveq	r3, #0
   1858c:	strb	r3, [fp, #-13]
   18590:	ldr	r3, [fp, #-8]
   18594:	ldr	r0, [r3, #160]	; 0xa0
   18598:	ldr	r3, [fp, #-12]
   1859c:	ldr	r3, [r3, #160]	; 0xa0
   185a0:	ldrb	r2, [fp, #-13]
   185a4:	mov	r1, r3
   185a8:	bl	183ac <__assert_fail@plt+0x5cc0>
   185ac:	mov	r3, r0
   185b0:	cmp	r3, #0
   185b4:	bge	185d4 <__assert_fail@plt+0x5ee8>
   185b8:	ldr	r3, [fp, #-8]
   185bc:	ldr	r3, [r3, #156]	; 0x9c
   185c0:	str	r3, [fp, #-8]
   185c4:	ldr	r3, [fp, #-8]
   185c8:	cmp	r3, #0
   185cc:	bne	18578 <__assert_fail@plt+0x5e8c>
   185d0:	b	185d8 <__assert_fail@plt+0x5eec>
   185d4:	nop	{0}
   185d8:	ldr	r3, [fp, #-8]
   185dc:	cmp	r3, #0
   185e0:	beq	1861c <__assert_fail@plt+0x5f30>
   185e4:	ldr	r3, [fp, #-8]
   185e8:	ldr	r2, [r3, #156]	; 0x9c
   185ec:	ldr	r3, [fp, #-12]
   185f0:	str	r2, [r3, #156]	; 0x9c
   185f4:	ldr	r3, [fp, #-12]
   185f8:	ldr	r3, [r3, #156]	; 0x9c
   185fc:	cmp	r3, #0
   18600:	bne	1860c <__assert_fail@plt+0x5f20>
   18604:	ldr	r3, [fp, #-12]
   18608:	str	r3, [fp, #-20]	; 0xffffffec
   1860c:	ldr	r3, [fp, #-8]
   18610:	ldr	r2, [fp, #-12]
   18614:	str	r2, [r3, #156]	; 0x9c
   18618:	b	18644 <__assert_fail@plt+0x5f58>
   1861c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18620:	ldr	r3, [fp, #-12]
   18624:	str	r2, [r3, #156]	; 0x9c
   18628:	ldr	r3, [fp, #-12]
   1862c:	str	r3, [fp, #-24]	; 0xffffffe8
   18630:	ldr	r3, [fp, #-20]	; 0xffffffec
   18634:	cmp	r3, #0
   18638:	bne	18644 <__assert_fail@plt+0x5f58>
   1863c:	ldr	r3, [fp, #-12]
   18640:	str	r3, [fp, #-20]	; 0xffffffec
   18644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18648:	ldr	r3, [r3]
   1864c:	cmp	r3, #0
   18650:	bne	18540 <__assert_fail@plt+0x5e54>
   18654:	movw	r3, #53324	; 0xd04c
   18658:	movt	r3, #7
   1865c:	ldr	r3, [r3, #44]	; 0x2c
   18660:	and	r3, r3, #8
   18664:	cmp	r3, #0
   18668:	beq	186ac <__assert_fail@plt+0x5fc0>
   1866c:	movw	r3, #50984	; 0xc728
   18670:	movt	r3, #7
   18674:	ldr	r3, [r3]
   18678:	movw	r2, #23236	; 0x5ac4
   1867c:	movt	r2, #6
   18680:	movw	r1, #23228	; 0x5abc
   18684:	movt	r1, #6
   18688:	mov	r0, r3
   1868c:	bl	123f8 <fprintf@plt>
   18690:	movw	r3, #50984	; 0xc728
   18694:	movt	r3, #7
   18698:	ldr	r3, [r3]
   1869c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186a0:	mov	r2, #2
   186a4:	mov	r0, r3
   186a8:	bl	1ae48 <__assert_fail@plt+0x875c>
   186ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186b0:	mov	r0, r3
   186b4:	bl	199bc <__assert_fail@plt+0x72d0>
   186b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   186bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   186c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   186c4:	mov	r0, r3
   186c8:	bl	194f0 <__assert_fail@plt+0x6e04>
   186cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   186d0:	bl	182f4 <__assert_fail@plt+0x5c08>
   186d4:	b	186dc <__assert_fail@plt+0x5ff0>
   186d8:	nop	{0}
   186dc:	sub	sp, fp, #4
   186e0:	ldr	fp, [sp]
   186e4:	add	sp, sp, #4
   186e8:	pop	{pc}		; (ldr pc, [sp], #4)
   186ec:	str	fp, [sp, #-8]!
   186f0:	str	lr, [sp, #4]
   186f4:	add	fp, sp, #4
   186f8:	sub	sp, sp, #24
   186fc:	str	r0, [fp, #-16]
   18700:	str	r1, [fp, #-20]	; 0xffffffec
   18704:	str	r2, [fp, #-24]	; 0xffffffe8
   18708:	str	r3, [fp, #-28]	; 0xffffffe4
   1870c:	movw	r3, #51048	; 0xc768
   18710:	movt	r3, #7
   18714:	movw	r2, #33948	; 0x849c
   18718:	movt	r2, #1
   1871c:	str	r2, [r3]
   18720:	movw	r3, #51048	; 0xc768
   18724:	movt	r3, #7
   18728:	ldr	r3, [r3]
   1872c:	ldr	r1, [fp, #4]
   18730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18734:	blx	r3
   18738:	movw	r3, #51048	; 0xc768
   1873c:	movt	r3, #7
   18740:	ldr	r3, [r3]
   18744:	ldr	r1, [fp, #4]
   18748:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1874c:	blx	r3
   18750:	mov	r3, #0
   18754:	str	r3, [fp, #-8]
   18758:	b	18790 <__assert_fail@plt+0x60a4>
   1875c:	movw	r3, #51048	; 0xc768
   18760:	movt	r3, #7
   18764:	ldr	r3, [r3]
   18768:	ldr	r2, [fp, #-8]
   1876c:	lsl	r2, r2, #3
   18770:	ldr	r1, [fp, #-16]
   18774:	add	r2, r1, r2
   18778:	ldr	r1, [fp, #4]
   1877c:	mov	r0, r2
   18780:	blx	r3
   18784:	ldr	r3, [fp, #-8]
   18788:	add	r3, r3, #1
   1878c:	str	r3, [fp, #-8]
   18790:	ldr	r2, [fp, #-8]
   18794:	ldr	r3, [fp, #-20]	; 0xffffffec
   18798:	cmp	r2, r3
   1879c:	blt	1875c <__assert_fail@plt+0x6070>
   187a0:	nop	{0}
   187a4:	sub	sp, fp, #4
   187a8:	ldr	fp, [sp]
   187ac:	add	sp, sp, #4
   187b0:	pop	{pc}		; (ldr pc, [sp], #4)
   187b4:	str	fp, [sp, #-8]!
   187b8:	str	lr, [sp, #4]
   187bc:	add	fp, sp, #4
   187c0:	sub	sp, sp, #8
   187c4:	str	r0, [fp, #-8]
   187c8:	ldr	r3, [fp, #-8]
   187cc:	cmp	r3, #0
   187d0:	beq	18834 <__assert_fail@plt+0x6148>
   187d4:	ldr	r3, [fp, #-8]
   187d8:	ldrb	r3, [r3, #16]
   187dc:	cmp	r3, #0
   187e0:	bne	1881c <__assert_fail@plt+0x6130>
   187e4:	ldr	r3, [fp, #-8]
   187e8:	ldr	r3, [r3, #156]	; 0x9c
   187ec:	mov	r0, r3
   187f0:	bl	187b4 <__assert_fail@plt+0x60c8>
   187f4:	mov	r3, r0
   187f8:	cmp	r3, #0
   187fc:	bne	1881c <__assert_fail@plt+0x6130>
   18800:	ldr	r3, [fp, #-8]
   18804:	ldr	r3, [r3, #160]	; 0xa0
   18808:	mov	r0, r3
   1880c:	bl	187b4 <__assert_fail@plt+0x60c8>
   18810:	mov	r3, r0
   18814:	cmp	r3, #0
   18818:	beq	18824 <__assert_fail@plt+0x6138>
   1881c:	mov	r3, #1
   18820:	b	18828 <__assert_fail@plt+0x613c>
   18824:	mov	r3, #0
   18828:	and	r3, r3, #1
   1882c:	uxtb	r3, r3
   18830:	b	18838 <__assert_fail@plt+0x614c>
   18834:	mov	r3, #0
   18838:	mov	r0, r3
   1883c:	sub	sp, fp, #4
   18840:	ldr	fp, [sp]
   18844:	add	sp, sp, #4
   18848:	pop	{pc}		; (ldr pc, [sp], #4)
   1884c:	str	fp, [sp, #-8]!
   18850:	str	lr, [sp, #4]
   18854:	add	fp, sp, #4
   18858:	sub	sp, sp, #24
   1885c:	str	r0, [fp, #-24]	; 0xffffffe8
   18860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18864:	cmp	r3, #0
   18868:	beq	188dc <__assert_fail@plt+0x61f0>
   1886c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18870:	ldr	r3, [r3, #156]	; 0x9c
   18874:	mov	r0, r3
   18878:	bl	1884c <__assert_fail@plt+0x6160>
   1887c:	mov	r3, r0
   18880:	str	r3, [fp, #-12]
   18884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18888:	ldr	r3, [r3, #160]	; 0xa0
   1888c:	mov	r0, r3
   18890:	bl	1884c <__assert_fail@plt+0x6160>
   18894:	mov	r3, r0
   18898:	str	r3, [fp, #-16]
   1889c:	ldr	r2, [fp, #-16]
   188a0:	ldr	r3, [fp, #-12]
   188a4:	cmp	r2, r3
   188a8:	movcs	r3, r2
   188ac:	movcc	r3, r3
   188b0:	str	r3, [fp, #-8]
   188b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188b8:	ldr	r3, [r3, #24]
   188bc:	ldr	r2, [fp, #-8]
   188c0:	cmp	r2, r3
   188c4:	bcs	188d4 <__assert_fail@plt+0x61e8>
   188c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   188cc:	ldr	r3, [r3, #24]
   188d0:	str	r3, [fp, #-8]
   188d4:	ldr	r3, [fp, #-8]
   188d8:	b	188e0 <__assert_fail@plt+0x61f4>
   188dc:	mov	r3, #0
   188e0:	mov	r0, r3
   188e4:	sub	sp, fp, #4
   188e8:	ldr	fp, [sp]
   188ec:	add	sp, sp, #4
   188f0:	pop	{pc}		; (ldr pc, [sp], #4)
   188f4:	push	{fp}		; (str fp, [sp, #-4]!)
   188f8:	add	fp, sp, #0
   188fc:	sub	sp, sp, #20
   18900:	str	r0, [fp, #-16]
   18904:	ldr	r3, [fp, #-16]
   18908:	ldr	r3, [r3, #156]	; 0x9c
   1890c:	ldr	r3, [r3, #160]	; 0xa0
   18910:	str	r3, [fp, #-8]
   18914:	ldr	r3, [fp, #-16]
   18918:	ldr	r3, [r3, #156]	; 0x9c
   1891c:	ldr	r2, [fp, #-16]
   18920:	ldr	r2, [r2, #160]	; 0xa0
   18924:	str	r2, [r3, #160]	; 0xa0
   18928:	ldr	r3, [fp, #-16]
   1892c:	ldr	r2, [fp, #-8]
   18930:	str	r2, [r3, #160]	; 0xa0
   18934:	nop	{0}
   18938:	add	sp, fp, #0
   1893c:	pop	{fp}		; (ldr fp, [sp], #4)
   18940:	bx	lr
   18944:	str	fp, [sp, #-8]!
   18948:	str	lr, [sp, #4]
   1894c:	add	fp, sp, #4
   18950:	sub	sp, sp, #48	; 0x30
   18954:	str	r0, [fp, #-40]	; 0xffffffd8
   18958:	mov	r3, #0
   1895c:	str	r3, [fp, #-16]
   18960:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18964:	ldr	r3, [r3, #8]
   18968:	cmp	r3, #3
   1896c:	beq	1897c <__assert_fail@plt+0x6290>
   18970:	movw	r3, #23264	; 0x5ae0
   18974:	movt	r3, #6
   18978:	str	r3, [fp, #-16]
   1897c:	ldr	r3, [fp, #-16]
   18980:	cmp	r3, #0
   18984:	bne	189b4 <__assert_fail@plt+0x62c8>
   18988:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1898c:	ldr	r3, [r3, #156]	; 0x9c
   18990:	cmp	r3, #0
   18994:	beq	189a8 <__assert_fail@plt+0x62bc>
   18998:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1899c:	ldr	r3, [r3, #160]	; 0xa0
   189a0:	cmp	r3, #0
   189a4:	bne	189b4 <__assert_fail@plt+0x62c8>
   189a8:	movw	r3, #23288	; 0x5af8
   189ac:	movt	r3, #6
   189b0:	str	r3, [fp, #-16]
   189b4:	ldr	r3, [fp, #-16]
   189b8:	cmp	r3, #0
   189bc:	bne	189e0 <__assert_fail@plt+0x62f4>
   189c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   189c4:	ldr	r3, [r3, #156]	; 0x9c
   189c8:	ldr	r3, [r3, #160]	; 0xa0
   189cc:	cmp	r3, #0
   189d0:	bne	189e0 <__assert_fail@plt+0x62f4>
   189d4:	movw	r3, #23312	; 0x5b10
   189d8:	movt	r3, #6
   189dc:	str	r3, [fp, #-16]
   189e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   189e4:	add	r3, r3, #160	; 0xa0
   189e8:	str	r3, [fp, #-24]	; 0xffffffe8
   189ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   189f0:	ldr	r3, [r3, #156]	; 0x9c
   189f4:	add	r3, r3, #160	; 0xa0
   189f8:	str	r3, [fp, #-28]	; 0xffffffe4
   189fc:	ldr	r3, [fp, #-16]
   18a00:	cmp	r3, #0
   18a04:	bne	18a30 <__assert_fail@plt+0x6344>
   18a08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a0c:	ldr	r3, [r3]
   18a10:	mov	r0, r3
   18a14:	bl	187b4 <__assert_fail@plt+0x60c8>
   18a18:	mov	r3, r0
   18a1c:	cmp	r3, #0
   18a20:	beq	18a30 <__assert_fail@plt+0x6344>
   18a24:	movw	r3, #23344	; 0x5b30
   18a28:	movt	r3, #6
   18a2c:	str	r3, [fp, #-16]
   18a30:	ldr	r3, [fp, #-16]
   18a34:	cmp	r3, #0
   18a38:	bne	18a64 <__assert_fail@plt+0x6378>
   18a3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a40:	ldr	r3, [r3]
   18a44:	mov	r0, r3
   18a48:	bl	187b4 <__assert_fail@plt+0x60c8>
   18a4c:	mov	r3, r0
   18a50:	cmp	r3, #0
   18a54:	beq	18a64 <__assert_fail@plt+0x6378>
   18a58:	movw	r3, #23376	; 0x5b50
   18a5c:	movt	r3, #6
   18a60:	str	r3, [fp, #-16]
   18a64:	ldr	r3, [fp, #-16]
   18a68:	cmp	r3, #0
   18a6c:	bne	18ab4 <__assert_fail@plt+0x63c8>
   18a70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18a74:	ldr	r3, [r3]
   18a78:	mov	r0, r3
   18a7c:	bl	1884c <__assert_fail@plt+0x6160>
   18a80:	str	r0, [fp, #-8]
   18a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a88:	ldr	r3, [r3]
   18a8c:	mov	r0, r3
   18a90:	bl	1884c <__assert_fail@plt+0x6160>
   18a94:	str	r0, [fp, #-12]
   18a98:	ldr	r2, [fp, #-8]
   18a9c:	ldr	r3, [fp, #-12]
   18aa0:	cmp	r2, r3
   18aa4:	bge	18ab4 <__assert_fail@plt+0x63c8>
   18aa8:	movw	r3, #23408	; 0x5b70
   18aac:	movt	r3, #6
   18ab0:	str	r3, [fp, #-16]
   18ab4:	ldr	r3, [fp, #-16]
   18ab8:	cmp	r3, #0
   18abc:	bne	18c78 <__assert_fail@plt+0x658c>
   18ac0:	ldr	r2, [fp, #-8]
   18ac4:	ldr	r3, [fp, #-12]
   18ac8:	cmp	r2, r3
   18acc:	bne	18c00 <__assert_fail@plt+0x6514>
   18ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ad4:	ldr	r3, [r3]
   18ad8:	ldr	r3, [r3, #28]
   18adc:	str	r3, [fp, #-32]	; 0xffffffe0
   18ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ae4:	ldr	r3, [r3]
   18ae8:	ldr	r3, [r3, #28]
   18aec:	str	r3, [fp, #-36]	; 0xffffffdc
   18af0:	movw	r3, #53324	; 0xd04c
   18af4:	movt	r3, #7
   18af8:	ldr	r3, [r3, #44]	; 0x2c
   18afc:	and	r3, r3, #8
   18b00:	cmp	r3, #0
   18b04:	beq	18b38 <__assert_fail@plt+0x644c>
   18b08:	movw	r3, #50984	; 0xc728
   18b0c:	movt	r3, #7
   18b10:	ldr	r0, [r3]
   18b14:	vldr	s15, [fp, #-32]	; 0xffffffe0
   18b18:	vcvt.f64.f32	d6, s15
   18b1c:	vldr	s15, [fp, #-36]	; 0xffffffdc
   18b20:	vcvt.f64.f32	d7, s15
   18b24:	vstr	d7, [sp]
   18b28:	vmov	r2, r3, d6
   18b2c:	movw	r1, #23424	; 0x5b80
   18b30:	movt	r1, #6
   18b34:	bl	123f8 <fprintf@plt>
   18b38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18b3c:	ldr	r2, [r3]
   18b40:	movw	r3, #23120	; 0x5a50
   18b44:	movt	r3, #1
   18b48:	cmp	r2, r3
   18b4c:	bne	18b90 <__assert_fail@plt+0x64a4>
   18b50:	vldr	s14, [fp, #-36]	; 0xffffffdc
   18b54:	vldr	s15, [fp, #-32]	; 0xffffffe0
   18b58:	vcmpe.f32	s14, s15
   18b5c:	vmrs	APSR_nzcv, fpscr
   18b60:	movmi	r3, #1
   18b64:	movpl	r3, #0
   18b68:	strb	r3, [fp, #-17]	; 0xffffffef
   18b6c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18b70:	eor	r3, r3, #1
   18b74:	uxtb	r3, r3
   18b78:	cmp	r3, #0
   18b7c:	beq	18c08 <__assert_fail@plt+0x651c>
   18b80:	movw	r3, #23452	; 0x5b9c
   18b84:	movt	r3, #6
   18b88:	str	r3, [fp, #-16]
   18b8c:	b	18c08 <__assert_fail@plt+0x651c>
   18b90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18b94:	ldr	r2, [r3]
   18b98:	movw	r3, #17168	; 0x4310
   18b9c:	movt	r3, #1
   18ba0:	cmp	r2, r3
   18ba4:	bne	18be8 <__assert_fail@plt+0x64fc>
   18ba8:	vldr	s14, [fp, #-36]	; 0xffffffdc
   18bac:	vldr	s15, [fp, #-32]	; 0xffffffe0
   18bb0:	vcmpe.f32	s14, s15
   18bb4:	vmrs	APSR_nzcv, fpscr
   18bb8:	movgt	r3, #1
   18bbc:	movle	r3, #0
   18bc0:	strb	r3, [fp, #-17]	; 0xffffffef
   18bc4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18bc8:	eor	r3, r3, #1
   18bcc:	uxtb	r3, r3
   18bd0:	cmp	r3, #0
   18bd4:	beq	18c08 <__assert_fail@plt+0x651c>
   18bd8:	movw	r3, #23496	; 0x5bc8
   18bdc:	movt	r3, #6
   18be0:	str	r3, [fp, #-16]
   18be4:	b	18c08 <__assert_fail@plt+0x651c>
   18be8:	mov	r3, #0
   18bec:	strb	r3, [fp, #-17]	; 0xffffffef
   18bf0:	movw	r3, #23544	; 0x5bf8
   18bf4:	movt	r3, #6
   18bf8:	str	r3, [fp, #-16]
   18bfc:	b	18c08 <__assert_fail@plt+0x651c>
   18c00:	mov	r3, #1
   18c04:	strb	r3, [fp, #-17]	; 0xffffffef
   18c08:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18c0c:	cmp	r3, #0
   18c10:	beq	18c78 <__assert_fail@plt+0x658c>
   18c14:	movw	r3, #53324	; 0xd04c
   18c18:	movt	r3, #7
   18c1c:	ldr	r3, [r3, #44]	; 0x2c
   18c20:	and	r3, r3, #8
   18c24:	cmp	r3, #0
   18c28:	beq	18c68 <__assert_fail@plt+0x657c>
   18c2c:	movw	r3, #50984	; 0xc728
   18c30:	movt	r3, #7
   18c34:	ldr	r3, [r3]
   18c38:	mov	r2, #24
   18c3c:	mov	r1, #1
   18c40:	movw	r0, #23564	; 0x5c0c
   18c44:	movt	r0, #6
   18c48:	bl	12224 <fwrite@plt>
   18c4c:	movw	r3, #50984	; 0xc728
   18c50:	movt	r3, #7
   18c54:	ldr	r3, [r3]
   18c58:	mov	r2, #0
   18c5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18c60:	mov	r0, r3
   18c64:	bl	1ae48 <__assert_fail@plt+0x875c>
   18c68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c6c:	bl	188f4 <__assert_fail@plt+0x6208>
   18c70:	mov	r3, #1
   18c74:	b	18cd0 <__assert_fail@plt+0x65e4>
   18c78:	movw	r3, #53324	; 0xd04c
   18c7c:	movt	r3, #7
   18c80:	ldr	r3, [r3, #44]	; 0x2c
   18c84:	and	r3, r3, #8
   18c88:	cmp	r3, #0
   18c8c:	beq	18ccc <__assert_fail@plt+0x65e0>
   18c90:	movw	r3, #50984	; 0xc728
   18c94:	movt	r3, #7
   18c98:	ldr	r3, [r3]
   18c9c:	ldr	r2, [fp, #-16]
   18ca0:	movw	r1, #23592	; 0x5c28
   18ca4:	movt	r1, #6
   18ca8:	mov	r0, r3
   18cac:	bl	123f8 <fprintf@plt>
   18cb0:	movw	r3, #50984	; 0xc728
   18cb4:	movt	r3, #7
   18cb8:	ldr	r3, [r3]
   18cbc:	mov	r2, #0
   18cc0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18cc4:	mov	r0, r3
   18cc8:	bl	1ae48 <__assert_fail@plt+0x875c>
   18ccc:	mov	r3, #0
   18cd0:	mov	r0, r3
   18cd4:	sub	sp, fp, #4
   18cd8:	ldr	fp, [sp]
   18cdc:	add	sp, sp, #4
   18ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ce4:	str	fp, [sp, #-8]!
   18ce8:	str	lr, [sp, #4]
   18cec:	add	fp, sp, #4
   18cf0:	sub	sp, sp, #16
   18cf4:	str	r0, [fp, #-16]
   18cf8:	ldr	r3, [fp, #-16]
   18cfc:	cmp	r3, #0
   18d00:	beq	18d74 <__assert_fail@plt+0x6688>
   18d04:	mov	r3, #0
   18d08:	strb	r3, [fp, #-5]
   18d0c:	ldr	r0, [fp, #-16]
   18d10:	bl	18944 <__assert_fail@plt+0x6258>
   18d14:	mov	r3, r0
   18d18:	cmp	r3, #0
   18d1c:	bne	18d58 <__assert_fail@plt+0x666c>
   18d20:	ldr	r3, [fp, #-16]
   18d24:	ldr	r3, [r3, #156]	; 0x9c
   18d28:	mov	r0, r3
   18d2c:	bl	18ce4 <__assert_fail@plt+0x65f8>
   18d30:	mov	r3, r0
   18d34:	cmp	r3, #0
   18d38:	bne	18d58 <__assert_fail@plt+0x666c>
   18d3c:	ldr	r3, [fp, #-16]
   18d40:	ldr	r3, [r3, #160]	; 0xa0
   18d44:	mov	r0, r3
   18d48:	bl	18ce4 <__assert_fail@plt+0x65f8>
   18d4c:	mov	r3, r0
   18d50:	cmp	r3, #0
   18d54:	beq	18d60 <__assert_fail@plt+0x6674>
   18d58:	mov	r3, #1
   18d5c:	strb	r3, [fp, #-5]
   18d60:	ldrb	r3, [fp, #-5]
   18d64:	cmp	r3, #0
   18d68:	bne	18d04 <__assert_fail@plt+0x6618>
   18d6c:	ldrb	r3, [fp, #-5]
   18d70:	b	18d78 <__assert_fail@plt+0x668c>
   18d74:	mov	r3, #0
   18d78:	mov	r0, r3
   18d7c:	sub	sp, fp, #4
   18d80:	ldr	fp, [sp]
   18d84:	add	sp, sp, #4
   18d88:	pop	{pc}		; (ldr pc, [sp], #4)
   18d8c:	str	r4, [sp, #-12]!
   18d90:	str	fp, [sp, #4]
   18d94:	str	lr, [sp, #8]
   18d98:	add	fp, sp, #8
   18d9c:	sub	sp, sp, #164	; 0xa4
   18da0:	str	r0, [fp, #-160]	; 0xffffff60
   18da4:	mov	r3, #0
   18da8:	str	r3, [fp, #-60]	; 0xffffffc4
   18dac:	mov	r3, #0
   18db0:	str	r3, [fp, #-56]	; 0xffffffc8
   18db4:	mov	r3, #0
   18db8:	str	r3, [fp, #-68]	; 0xffffffbc
   18dbc:	mov	r3, #0
   18dc0:	str	r3, [fp, #-64]	; 0xffffffc0
   18dc4:	mov	r3, #0
   18dc8:	strb	r3, [fp, #-25]	; 0xffffffe7
   18dcc:	ldr	r3, [fp, #-160]	; 0xffffff60
   18dd0:	cmp	r3, #0
   18dd4:	beq	18de8 <__assert_fail@plt+0x66fc>
   18dd8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18ddc:	ldr	r3, [r3]
   18de0:	cmp	r3, #0
   18de4:	bne	18df0 <__assert_fail@plt+0x6704>
   18de8:	mov	r3, #0
   18dec:	b	19324 <__assert_fail@plt+0x6c38>
   18df0:	mov	r3, #0
   18df4:	str	r3, [fp, #-16]
   18df8:	b	18e20 <__assert_fail@plt+0x6734>
   18dfc:	sub	r2, fp, #156	; 0x9c
   18e00:	ldr	r3, [fp, #-16]
   18e04:	lsl	r3, r3, #3
   18e08:	add	r3, r2, r3
   18e0c:	mov	r0, r3
   18e10:	bl	182f4 <__assert_fail@plt+0x5c08>
   18e14:	ldr	r3, [fp, #-16]
   18e18:	add	r3, r3, #1
   18e1c:	str	r3, [fp, #-16]
   18e20:	ldr	r3, [fp, #-16]
   18e24:	cmp	r3, #10
   18e28:	ble	18dfc <__assert_fail@plt+0x6710>
   18e2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   18e30:	str	r3, [fp, #-24]	; 0xffffffe8
   18e34:	mov	r3, #3
   18e38:	str	r3, [fp, #-32]	; 0xffffffe0
   18e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e40:	ldr	r3, [r3]
   18e44:	str	r3, [fp, #-20]	; 0xffffffec
   18e48:	b	18e70 <__assert_fail@plt+0x6784>
   18e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e50:	add	r3, r3, #156	; 0x9c
   18e54:	str	r3, [fp, #-24]	; 0xffffffe8
   18e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e5c:	ldr	r3, [r3, #12]
   18e60:	str	r3, [fp, #-32]	; 0xffffffe0
   18e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e68:	ldr	r3, [r3, #156]	; 0x9c
   18e6c:	str	r3, [fp, #-20]	; 0xffffffec
   18e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e74:	ldr	r3, [r3, #156]	; 0x9c
   18e78:	cmp	r3, #0
   18e7c:	bne	18e4c <__assert_fail@plt+0x6760>
   18e80:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e84:	ldr	r3, [r3, #8]
   18e88:	cmp	r3, #3
   18e8c:	beq	18ea0 <__assert_fail@plt+0x67b4>
   18e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18e98:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e9c:	bl	1939c <__assert_fail@plt+0x6cb0>
   18ea0:	movw	r3, #53324	; 0xd04c
   18ea4:	movt	r3, #7
   18ea8:	ldr	r3, [r3, #44]	; 0x2c
   18eac:	and	r3, r3, #9
   18eb0:	cmp	r3, #0
   18eb4:	beq	18ef8 <__assert_fail@plt+0x680c>
   18eb8:	movw	r3, #50984	; 0xc728
   18ebc:	movt	r3, #7
   18ec0:	ldr	r3, [r3]
   18ec4:	mov	r2, #22
   18ec8:	mov	r1, #1
   18ecc:	movw	r0, #23628	; 0x5c4c
   18ed0:	movt	r0, #6
   18ed4:	bl	12224 <fwrite@plt>
   18ed8:	movw	r3, #50984	; 0xc728
   18edc:	movt	r3, #7
   18ee0:	ldr	r0, [r3]
   18ee4:	ldr	r3, [fp, #-160]	; 0xffffff60
   18ee8:	ldr	r3, [r3]
   18eec:	mov	r2, #0
   18ef0:	mov	r1, r3
   18ef4:	bl	1ae48 <__assert_fail@plt+0x875c>
   18ef8:	ldr	r3, [fp, #-160]	; 0xffffff60
   18efc:	str	r3, [fp, #-24]	; 0xffffffe8
   18f00:	mov	r3, #0
   18f04:	str	r3, [fp, #-36]	; 0xffffffdc
   18f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f0c:	ldr	r3, [r3]
   18f10:	cmp	r3, #0
   18f14:	beq	192e0 <__assert_fail@plt+0x6bf4>
   18f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f1c:	ldr	r3, [r3]
   18f20:	ldr	r3, [r3, #8]
   18f24:	cmp	r3, #3
   18f28:	bne	192e0 <__assert_fail@plt+0x6bf4>
   18f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f30:	ldr	r3, [r3]
   18f34:	ldr	r3, [r3, #12]
   18f38:	str	r3, [fp, #-36]	; 0xffffffdc
   18f3c:	b	192e0 <__assert_fail@plt+0x6bf4>
   18f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f44:	ldr	r3, [r3, #8]
   18f48:	cmp	r3, #3
   18f4c:	bne	18f78 <__assert_fail@plt+0x688c>
   18f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f54:	ldr	r3, [r3, #12]
   18f58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f5c:	cmp	r2, r3
   18f60:	beq	18f78 <__assert_fail@plt+0x688c>
   18f64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18f70:	bl	1939c <__assert_fail@plt+0x6cb0>
   18f74:	str	r0, [fp, #-20]	; 0xffffffec
   18f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f7c:	ldr	r3, [r3, #160]	; 0xa0
   18f80:	ldr	r3, [r3, #8]
   18f84:	str	r3, [fp, #-40]	; 0xffffffd8
   18f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   18f8c:	ldr	r3, [r3, #160]	; 0xa0
   18f90:	ldr	r3, [r3]
   18f94:	str	r3, [fp, #-44]	; 0xffffffd4
   18f98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f9c:	cmp	r3, #3
   18fa0:	ldrls	pc, [pc, r3, lsl #2]
   18fa4:	b	19264 <__assert_fail@plt+0x6b78>
   18fa8:			; <UNDEFINED> instruction: 0x00018fb8
   18fac:			; <UNDEFINED> instruction: 0x00018fb8
   18fb0:	andeq	r9, r1, r8, lsl r2
   18fb4:	andeq	r9, r1, r0, asr #4
   18fb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18fbc:	cmp	r3, #1
   18fc0:	beq	19284 <__assert_fail@plt+0x6b98>
   18fc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18fc8:	ldr	r3, [r3, #160]	; 0xa0
   18fcc:	ldrb	r3, [r3, #16]
   18fd0:	eor	r3, r3, #1
   18fd4:	uxtb	r3, r3
   18fd8:	cmp	r3, #0
   18fdc:	beq	1928c <__assert_fail@plt+0x6ba0>
   18fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18fe4:	ldr	r3, [r3, #160]	; 0xa0
   18fe8:	mov	r0, r3
   18fec:	bl	1815c <__assert_fail@plt+0x5a70>
   18ff0:	mov	r3, r0
   18ff4:	cmp	r3, #0
   18ff8:	beq	19094 <__assert_fail@plt+0x69a8>
   18ffc:	movw	r3, #53324	; 0xd04c
   19000:	movt	r3, #7
   19004:	ldr	r3, [r3, #44]	; 0x2c
   19008:	and	r3, r3, #8
   1900c:	cmp	r3, #0
   19010:	beq	1907c <__assert_fail@plt+0x6990>
   19014:	movw	r3, #50984	; 0xc728
   19018:	movt	r3, #7
   1901c:	ldr	r0, [r3]
   19020:	movw	r3, #53324	; 0xd04c
   19024:	movt	r3, #7
   19028:	ldrh	r3, [r3, #68]	; 0x44
   1902c:	mov	r2, r3
   19030:	movw	r1, #23652	; 0x5c64
   19034:	movt	r1, #6
   19038:	bl	123f8 <fprintf@plt>
   1903c:	movw	r3, #50984	; 0xc728
   19040:	movt	r3, #7
   19044:	ldr	r2, [r3]
   19048:	ldr	r3, [fp, #-20]	; 0xffffffec
   1904c:	ldr	r3, [r3, #160]	; 0xa0
   19050:	mov	r1, r3
   19054:	mov	r0, r2
   19058:	bl	18280 <__assert_fail@plt+0x5b94>
   1905c:	movw	r3, #50984	; 0xc728
   19060:	movt	r3, #7
   19064:	ldr	r3, [r3]
   19068:	mov	r2, #16
   1906c:	mov	r1, #1
   19070:	movw	r0, #23688	; 0x5c88
   19074:	movt	r0, #6
   19078:	bl	12224 <fwrite@plt>
   1907c:	sub	r3, fp, #68	; 0x44
   19080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19084:	ldr	r1, [fp, #-20]	; 0xffffffec
   19088:	mov	r0, r3
   1908c:	bl	18330 <__assert_fail@plt+0x5c44>
   19090:	b	192e0 <__assert_fail@plt+0x6bf4>
   19094:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19098:	movw	r3, #24328	; 0x5f08
   1909c:	movt	r3, #1
   190a0:	cmp	r2, r3
   190a4:	bne	190c0 <__assert_fail@plt+0x69d4>
   190a8:	sub	r3, fp, #60	; 0x3c
   190ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   190b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   190b4:	mov	r0, r3
   190b8:	bl	18330 <__assert_fail@plt+0x5c44>
   190bc:	b	192e0 <__assert_fail@plt+0x6bf4>
   190c0:	movw	r3, #53324	; 0xd04c
   190c4:	movt	r3, #7
   190c8:	ldrh	r3, [r3, #68]	; 0x44
   190cc:	cmp	r3, #1
   190d0:	bls	19118 <__assert_fail@plt+0x6a2c>
   190d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   190d8:	ldr	r3, [r3, #160]	; 0xa0
   190dc:	ldr	r3, [r3, #24]
   190e0:	cmp	r3, #2
   190e4:	beq	190fc <__assert_fail@plt+0x6a10>
   190e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   190ec:	ldr	r3, [r3, #160]	; 0xa0
   190f0:	ldr	r3, [r3, #24]
   190f4:	cmp	r3, #1
   190f8:	bne	19118 <__assert_fail@plt+0x6a2c>
   190fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19100:	ldr	r3, [r3, #160]	; 0xa0
   19104:	ldrb	r3, [r3, #18]
   19108:	eor	r3, r3, #1
   1910c:	uxtb	r3, r3
   19110:	cmp	r3, #0
   19114:	bne	1912c <__assert_fail@plt+0x6a40>
   19118:	movw	r3, #53324	; 0xd04c
   1911c:	movt	r3, #7
   19120:	ldrh	r3, [r3, #68]	; 0x44
   19124:	cmp	r3, #2
   19128:	bls	19134 <__assert_fail@plt+0x6a48>
   1912c:	mov	r3, #1
   19130:	b	19138 <__assert_fail@plt+0x6a4c>
   19134:	mov	r3, #0
   19138:	strb	r3, [fp, #-45]	; 0xffffffd3
   1913c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   19140:	and	r3, r3, #1
   19144:	strb	r3, [fp, #-45]	; 0xffffffd3
   19148:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1914c:	cmp	r3, #0
   19150:	beq	1928c <__assert_fail@plt+0x6ba0>
   19154:	movw	r3, #53324	; 0xd04c
   19158:	movt	r3, #7
   1915c:	ldr	r3, [r3, #44]	; 0x2c
   19160:	and	r3, r3, #8
   19164:	cmp	r3, #0
   19168:	beq	191ec <__assert_fail@plt+0x6b00>
   1916c:	movw	r3, #50984	; 0xc728
   19170:	movt	r3, #7
   19174:	ldr	r0, [r3]
   19178:	movw	r3, #53324	; 0xd04c
   1917c:	movt	r3, #7
   19180:	ldrh	r3, [r3, #68]	; 0x44
   19184:	mov	r2, r3
   19188:	movw	r1, #23708	; 0x5c9c
   1918c:	movt	r1, #6
   19190:	bl	123f8 <fprintf@plt>
   19194:	movw	r3, #50984	; 0xc728
   19198:	movt	r3, #7
   1919c:	ldr	r2, [r3]
   191a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   191a4:	ldr	r3, [r3, #160]	; 0xa0
   191a8:	mov	r1, r3
   191ac:	mov	r0, r2
   191b0:	bl	18280 <__assert_fail@plt+0x5b94>
   191b4:	movw	r3, #50984	; 0xc728
   191b8:	movt	r3, #7
   191bc:	ldr	r4, [r3]
   191c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   191c4:	ldr	r3, [r3, #160]	; 0xa0
   191c8:	ldr	r3, [r3, #24]
   191cc:	mov	r0, r3
   191d0:	bl	1ac78 <__assert_fail@plt+0x858c>
   191d4:	mov	r3, r0
   191d8:	mov	r2, r3
   191dc:	movw	r1, #23740	; 0x5cbc
   191e0:	movt	r1, #6
   191e4:	mov	r0, r4
   191e8:	bl	123f8 <fprintf@plt>
   191ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   191f0:	ldr	r3, [r3, #160]	; 0xa0
   191f4:	ldr	r3, [r3, #24]
   191f8:	sub	r2, fp, #156	; 0x9c
   191fc:	lsl	r3, r3, #3
   19200:	add	r3, r2, r3
   19204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19208:	ldr	r1, [fp, #-20]	; 0xffffffec
   1920c:	mov	r0, r3
   19210:	bl	18330 <__assert_fail@plt+0x5c44>
   19214:	b	192e0 <__assert_fail@plt+0x6bf4>
   19218:	ldr	r3, [fp, #-20]	; 0xffffffec
   1921c:	ldr	r3, [r3, #160]	; 0xa0
   19220:	add	r2, r3, #160	; 0xa0
   19224:	ldr	r3, [fp, #-20]	; 0xffffffec
   19228:	ldr	r4, [r3, #160]	; 0xa0
   1922c:	mov	r0, r2
   19230:	bl	18d8c <__assert_fail@plt+0x66a0>
   19234:	mov	r3, r0
   19238:	strb	r3, [r4, #16]
   1923c:	b	19290 <__assert_fail@plt+0x6ba4>
   19240:	ldr	r3, [fp, #-20]	; 0xffffffec
   19244:	add	r2, r3, #160	; 0xa0
   19248:	ldr	r3, [fp, #-20]	; 0xffffffec
   1924c:	ldr	r4, [r3, #160]	; 0xa0
   19250:	mov	r0, r2
   19254:	bl	18d8c <__assert_fail@plt+0x66a0>
   19258:	mov	r3, r0
   1925c:	strb	r3, [r4, #16]
   19260:	b	19290 <__assert_fail@plt+0x6ba4>
   19264:	movw	r0, #23116	; 0x5a4c
   19268:	movt	r0, #6
   1926c:	bl	12398 <gettext@plt>
   19270:	mov	r3, r0
   19274:	mov	r2, r3
   19278:	mov	r1, #0
   1927c:	mov	r0, #1
   19280:	bl	122b4 <error@plt>
   19284:	nop	{0}
   19288:	b	19290 <__assert_fail@plt+0x6ba4>
   1928c:	nop	{0}
   19290:	ldr	r3, [fp, #-20]	; 0xffffffec
   19294:	ldr	r3, [r3, #160]	; 0xa0
   19298:	ldrb	r3, [r3, #16]
   1929c:	cmp	r3, #0
   192a0:	beq	192d4 <__assert_fail@plt+0x6be8>
   192a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192a8:	str	r3, [fp, #-52]	; 0xffffffcc
   192ac:	sub	r1, fp, #60	; 0x3c
   192b0:	sub	r2, fp, #68	; 0x44
   192b4:	sub	r0, fp, #156	; 0x9c
   192b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   192bc:	str	r3, [sp]
   192c0:	mov	r3, r1
   192c4:	mov	r1, #11
   192c8:	bl	186ec <__assert_fail@plt+0x6000>
   192cc:	mov	r3, #1
   192d0:	strb	r3, [fp, #-25]	; 0xffffffe7
   192d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   192d8:	add	r3, r3, #156	; 0x9c
   192dc:	str	r3, [fp, #-24]	; 0xffffffe8
   192e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192e4:	ldr	r3, [r3]
   192e8:	str	r3, [fp, #-20]	; 0xffffffec
   192ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   192f0:	cmp	r3, #0
   192f4:	bne	18f40 <__assert_fail@plt+0x6854>
   192f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192fc:	str	r3, [fp, #-52]	; 0xffffffcc
   19300:	sub	r1, fp, #60	; 0x3c
   19304:	sub	r2, fp, #68	; 0x44
   19308:	sub	r0, fp, #156	; 0x9c
   1930c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19310:	str	r3, [sp]
   19314:	mov	r3, r1
   19318:	mov	r1, #11
   1931c:	bl	186ec <__assert_fail@plt+0x6000>
   19320:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   19324:	mov	r0, r3
   19328:	sub	sp, fp, #8
   1932c:	ldr	r4, [sp]
   19330:	ldr	fp, [sp, #4]
   19334:	add	sp, sp, #8
   19338:	pop	{pc}		; (ldr pc, [sp], #4)
   1933c:	push	{fp}		; (str fp, [sp, #-4]!)
   19340:	add	fp, sp, #0
   19344:	sub	sp, sp, #12
   19348:	vstr	s0, [fp, #-8]
   1934c:	vldr	s15, [fp, #-8]
   19350:	vldr	s14, [pc, #64]	; 19398 <__assert_fail@plt+0x6cac>
   19354:	vcmpe.f32	s15, s14
   19358:	vmrs	APSR_nzcv, fpscr
   1935c:	ble	19368 <__assert_fail@plt+0x6c7c>
   19360:	mov	r3, #1065353216	; 0x3f800000
   19364:	b	19384 <__assert_fail@plt+0x6c98>
   19368:	vldr	s15, [fp, #-8]
   1936c:	vcmpe.f32	s15, #0.0
   19370:	vmrs	APSR_nzcv, fpscr
   19374:	bpl	19380 <__assert_fail@plt+0x6c94>
   19378:	mov	r3, #0
   1937c:	b	19384 <__assert_fail@plt+0x6c98>
   19380:	ldr	r3, [fp, #-8]
   19384:	vmov	s15, r3
   19388:	vmov.f32	s0, s15
   1938c:	add	sp, fp, #0
   19390:	pop	{fp}		; (ldr fp, [sp], #4)
   19394:	bx	lr
   19398:	svccc	0x00800000
   1939c:	str	fp, [sp, #-8]!
   193a0:	str	lr, [sp, #4]
   193a4:	add	fp, sp, #4
   193a8:	sub	sp, sp, #24
   193ac:	str	r0, [fp, #-16]
   193b0:	str	r1, [fp, #-20]	; 0xffffffec
   193b4:	str	r2, [fp, #-24]	; 0xffffffe8
   193b8:	mov	r0, #176	; 0xb0
   193bc:	bl	3df0c <__assert_fail@plt+0x2b820>
   193c0:	mov	r3, r0
   193c4:	str	r3, [fp, #-8]
   193c8:	ldr	r3, [fp, #-8]
   193cc:	mov	r2, #3
   193d0:	str	r2, [r3, #8]
   193d4:	ldr	r3, [fp, #-8]
   193d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   193dc:	str	r2, [r3, #12]
   193e0:	ldr	r3, [fp, #-8]
   193e4:	mov	r2, #0
   193e8:	str	r2, [r3, #24]
   193ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   193f0:	cmp	r3, #2
   193f4:	beq	19440 <__assert_fail@plt+0x6d54>
   193f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   193fc:	cmp	r3, #3
   19400:	beq	19480 <__assert_fail@plt+0x6d94>
   19404:	ldr	r3, [fp, #-20]	; 0xffffffec
   19408:	cmp	r3, #1
   1940c:	bne	194c0 <__assert_fail@plt+0x6dd4>
   19410:	ldr	r2, [fp, #-8]
   19414:	movw	r3, #17840	; 0x45b0
   19418:	movt	r3, #1
   1941c:	str	r3, [r2]
   19420:	ldr	r2, [fp, #-8]
   19424:	movw	r3, #23756	; 0x5ccc
   19428:	movt	r3, #6
   1942c:	str	r3, [r2, #4]
   19430:	ldr	r3, [fp, #-8]
   19434:	mov	r2, #1065353216	; 0x3f800000
   19438:	str	r2, [r3, #28]
   1943c:	b	194c0 <__assert_fail@plt+0x6dd4>
   19440:	ldr	r2, [fp, #-8]
   19444:	movw	r3, #23120	; 0x5a50
   19448:	movt	r3, #1
   1944c:	str	r3, [r2]
   19450:	ldr	r2, [fp, #-8]
   19454:	movw	r3, #23760	; 0x5cd0
   19458:	movt	r3, #6
   1945c:	str	r3, [r2, #4]
   19460:	ldr	r3, [fp, #-16]
   19464:	vldr	s15, [r3, #28]
   19468:	vmov.f32	s0, s15
   1946c:	bl	1933c <__assert_fail@plt+0x6c50>
   19470:	vmov.f32	s15, s0
   19474:	ldr	r3, [fp, #-8]
   19478:	vstr	s15, [r3, #28]
   1947c:	b	194c0 <__assert_fail@plt+0x6dd4>
   19480:	ldr	r2, [fp, #-8]
   19484:	movw	r3, #17168	; 0x4310
   19488:	movt	r3, #1
   1948c:	str	r3, [r2]
   19490:	ldr	r2, [fp, #-8]
   19494:	movw	r3, #23764	; 0x5cd4
   19498:	movt	r3, #6
   1949c:	str	r3, [r2, #4]
   194a0:	ldr	r3, [fp, #-16]
   194a4:	vldr	s15, [r3, #28]
   194a8:	vmov.f32	s0, s15
   194ac:	bl	1933c <__assert_fail@plt+0x6c50>
   194b0:	vmov.f32	s15, s0
   194b4:	ldr	r3, [fp, #-8]
   194b8:	vstr	s15, [r3, #28]
   194bc:	nop	{0}
   194c0:	ldr	r3, [fp, #-8]
   194c4:	ldr	r2, [fp, #-16]
   194c8:	str	r2, [r3, #160]	; 0xa0
   194cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194d0:	ldr	r2, [fp, #-8]
   194d4:	str	r2, [r3]
   194d8:	ldr	r3, [fp, #-8]
   194dc:	mov	r0, r3
   194e0:	sub	sp, fp, #4
   194e4:	ldr	fp, [sp]
   194e8:	add	sp, sp, #4
   194ec:	pop	{pc}		; (ldr pc, [sp], #4)
   194f0:	push	{fp}		; (str fp, [sp, #-4]!)
   194f4:	add	fp, sp, #0
   194f8:	sub	sp, sp, #20
   194fc:	str	r0, [fp, #-8]
   19500:	str	r1, [fp, #-12]
   19504:	str	r2, [fp, #-16]
   19508:	ldr	r3, [fp, #-16]
   1950c:	ldr	r2, [r3]
   19510:	ldr	r3, [fp, #-12]
   19514:	str	r2, [r3, #156]	; 0x9c
   19518:	ldr	r3, [fp, #-16]
   1951c:	ldr	r2, [fp, #-8]
   19520:	str	r2, [r3]
   19524:	nop	{0}
   19528:	add	sp, fp, #0
   1952c:	pop	{fp}		; (ldr fp, [sp], #4)
   19530:	bx	lr
   19534:	str	fp, [sp, #-8]!
   19538:	str	lr, [sp, #4]
   1953c:	add	fp, sp, #4
   19540:	sub	sp, sp, #32
   19544:	str	r0, [fp, #-24]	; 0xffffffe8
   19548:	str	r1, [fp, #-28]	; 0xffffffe4
   1954c:	str	r2, [fp, #-32]	; 0xffffffe0
   19550:	str	r3, [fp, #-36]	; 0xffffffdc
   19554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19558:	str	r3, [fp, #-12]
   1955c:	mov	r3, #1
   19560:	str	r3, [fp, #-8]
   19564:	b	1962c <__assert_fail@plt+0x6f40>
   19568:	ldr	r3, [fp, #-8]
   1956c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19570:	mul	r3, r2, r3
   19574:	ldr	r2, [fp, #-12]
   19578:	add	r0, r2, r3
   1957c:	ldr	r3, [fp, #-8]
   19580:	sub	r3, r3, #1
   19584:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19588:	mul	r3, r2, r3
   1958c:	ldr	r2, [fp, #-12]
   19590:	add	r2, r2, r3
   19594:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19598:	mov	r1, r2
   1959c:	blx	r3
   195a0:	str	r0, [fp, #-16]
   195a4:	ldr	r3, [fp, #-16]
   195a8:	cmp	r3, #0
   195ac:	bge	195b8 <__assert_fail@plt+0x6ecc>
   195b0:	mov	r3, #0
   195b4:	b	19640 <__assert_fail@plt+0x6f54>
   195b8:	ldr	r3, [fp, #-8]
   195bc:	sub	r3, r3, #1
   195c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   195c4:	mul	r3, r2, r3
   195c8:	ldr	r2, [fp, #-12]
   195cc:	add	r0, r2, r3
   195d0:	ldr	r3, [fp, #-8]
   195d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   195d8:	mul	r3, r2, r3
   195dc:	ldr	r2, [fp, #-12]
   195e0:	add	r2, r2, r3
   195e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   195e8:	mov	r1, r2
   195ec:	blx	r3
   195f0:	str	r0, [fp, #-16]
   195f4:	ldr	r3, [fp, #-16]
   195f8:	cmp	r3, #0
   195fc:	ble	19620 <__assert_fail@plt+0x6f34>
   19600:	movw	r3, #25160	; 0x6248
   19604:	movt	r3, #6
   19608:	movw	r2, #1013	; 0x3f5
   1960c:	movw	r1, #23768	; 0x5cd8
   19610:	movt	r1, #6
   19614:	movw	r0, #23776	; 0x5ce0
   19618:	movt	r0, #6
   1961c:	bl	126ec <__assert_fail@plt>
   19620:	ldr	r3, [fp, #-8]
   19624:	add	r3, r3, #1
   19628:	str	r3, [fp, #-8]
   1962c:	ldr	r2, [fp, #-8]
   19630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19634:	cmp	r2, r3
   19638:	bcc	19568 <__assert_fail@plt+0x6e7c>
   1963c:	mov	r3, #1
   19640:	mov	r0, r3
   19644:	sub	sp, fp, #4
   19648:	ldr	fp, [sp]
   1964c:	add	sp, sp, #4
   19650:	pop	{pc}		; (ldr pc, [sp], #4)
   19654:	str	fp, [sp, #-8]!
   19658:	str	lr, [sp, #4]
   1965c:	add	fp, sp, #4
   19660:	sub	sp, sp, #24
   19664:	str	r0, [fp, #-24]	; 0xffffffe8
   19668:	str	r1, [fp, #-28]	; 0xffffffe4
   1966c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19670:	str	r3, [fp, #-8]
   19674:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19678:	str	r3, [fp, #-12]
   1967c:	ldr	r3, [fp, #-8]
   19680:	ldr	r3, [r3]
   19684:	str	r3, [fp, #-16]
   19688:	ldr	r3, [fp, #-12]
   1968c:	ldr	r3, [r3]
   19690:	str	r3, [fp, #-20]	; 0xffffffec
   19694:	sub	r1, fp, #20
   19698:	sub	r3, fp, #16
   1969c:	mov	r2, #4
   196a0:	mov	r0, r3
   196a4:	bl	12158 <memcmp@plt>
   196a8:	mov	r3, r0
   196ac:	mov	r0, r3
   196b0:	sub	sp, fp, #4
   196b4:	ldr	fp, [sp]
   196b8:	add	sp, sp, #4
   196bc:	pop	{pc}		; (ldr pc, [sp], #4)
   196c0:	str	fp, [sp, #-8]!
   196c4:	str	lr, [sp, #4]
   196c8:	add	fp, sp, #4
   196cc:	sub	sp, sp, #40	; 0x28
   196d0:	str	r0, [fp, #-32]	; 0xffffffe0
   196d4:	mov	r3, #0
   196d8:	str	r3, [fp, #-8]
   196dc:	mov	r3, #10
   196e0:	str	r3, [fp, #-12]
   196e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   196e8:	ldrb	r3, [r3, #18]
   196ec:	cmp	r3, #0
   196f0:	beq	19700 <__assert_fail@plt+0x7014>
   196f4:	mov	r3, #3
   196f8:	str	r3, [fp, #-8]
   196fc:	b	19740 <__assert_fail@plt+0x7054>
   19700:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19704:	ldrb	r3, [r3, #20]
   19708:	cmp	r3, #0
   1970c:	beq	1971c <__assert_fail@plt+0x7030>
   19710:	mov	r3, #1
   19714:	str	r3, [fp, #-8]
   19718:	b	19740 <__assert_fail@plt+0x7054>
   1971c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19720:	ldrb	r3, [r3, #19]
   19724:	cmp	r3, #0
   19728:	beq	19738 <__assert_fail@plt+0x704c>
   1972c:	mov	r3, #2
   19730:	str	r3, [fp, #-8]
   19734:	b	19740 <__assert_fail@plt+0x7054>
   19738:	mov	r3, #0
   1973c:	str	r3, [fp, #-8]
   19740:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19744:	ldr	r2, [r3]
   19748:	movw	r3, #19276	; 0x4b4c
   1974c:	movt	r3, #1
   19750:	cmp	r2, r3
   19754:	beq	19770 <__assert_fail@plt+0x7084>
   19758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1975c:	ldr	r2, [r3]
   19760:	movw	r3, #19344	; 0x4b90
   19764:	movt	r3, #1
   19768:	cmp	r2, r3
   1976c:	bne	19798 <__assert_fail@plt+0x70ac>
   19770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19774:	ldrb	r3, [r3, #40]	; 0x28
   19778:	cmp	r3, #0
   1977c:	beq	1978c <__assert_fail@plt+0x70a0>
   19780:	mov	r3, #7
   19784:	str	r3, [fp, #-12]
   19788:	b	198c0 <__assert_fail@plt+0x71d4>
   1978c:	mov	r3, #8
   19790:	str	r3, [fp, #-12]
   19794:	b	198c0 <__assert_fail@plt+0x71d4>
   19798:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1979c:	ldr	r2, [r3]
   197a0:	movw	r3, #1812	; 0x714
   197a4:	movt	r3, #2
   197a8:	cmp	r2, r3
   197ac:	bne	197c0 <__assert_fail@plt+0x70d4>
   197b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197b4:	ldr	r3, [r3, #24]
   197b8:	str	r3, [fp, #-12]
   197bc:	b	198c0 <__assert_fail@plt+0x71d4>
   197c0:	movw	r3, #51044	; 0xc764
   197c4:	movt	r3, #7
   197c8:	ldr	r3, [r3]
   197cc:	cmp	r3, #0
   197d0:	bne	19844 <__assert_fail@plt+0x7158>
   197d4:	movw	r3, #38484	; 0x9654
   197d8:	movt	r3, #1
   197dc:	mov	r2, #8
   197e0:	mov	r1, #59	; 0x3b
   197e4:	movw	r0, #49840	; 0xc2b0
   197e8:	movt	r0, #7
   197ec:	bl	125f0 <qsort@plt>
   197f0:	movw	r3, #38484	; 0x9654
   197f4:	movt	r3, #1
   197f8:	mov	r2, #8
   197fc:	mov	r1, #59	; 0x3b
   19800:	movw	r0, #49840	; 0xc2b0
   19804:	movt	r0, #7
   19808:	bl	19534 <__assert_fail@plt+0x6e48>
   1980c:	mov	r3, r0
   19810:	eor	r3, r3, #1
   19814:	uxtb	r3, r3
   19818:	cmp	r3, #0
   1981c:	beq	19834 <__assert_fail@plt+0x7148>
   19820:	movw	r2, #23788	; 0x5cec
   19824:	movt	r2, #6
   19828:	mov	r1, #0
   1982c:	mov	r0, #1
   19830:	bl	122b4 <error@plt>
   19834:	movw	r3, #51044	; 0xc764
   19838:	movt	r3, #7
   1983c:	mov	r2, #1
   19840:	str	r2, [r3]
   19844:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19848:	ldr	r3, [r3]
   1984c:	str	r3, [fp, #-24]	; 0xffffffe8
   19850:	sub	r0, fp, #24
   19854:	movw	r3, #38484	; 0x9654
   19858:	movt	r3, #1
   1985c:	str	r3, [sp]
   19860:	mov	r3, #8
   19864:	mov	r2, #59	; 0x3b
   19868:	movw	r1, #49840	; 0xc2b0
   1986c:	movt	r1, #7
   19870:	bl	12440 <bsearch@plt>
   19874:	str	r0, [fp, #-16]
   19878:	ldr	r3, [fp, #-16]
   1987c:	cmp	r3, #0
   19880:	beq	19894 <__assert_fail@plt+0x71a8>
   19884:	ldr	r3, [fp, #-16]
   19888:	ldr	r3, [r3, #4]
   1988c:	str	r3, [fp, #-12]
   19890:	b	198c0 <__assert_fail@plt+0x71d4>
   19894:	movw	r0, #23824	; 0x5d10
   19898:	movt	r0, #6
   1989c:	bl	12398 <gettext@plt>
   198a0:	mov	r2, r0
   198a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   198a8:	ldr	r3, [r3, #4]
   198ac:	mov	r1, #0
   198b0:	mov	r0, #0
   198b4:	bl	122b4 <error@plt>
   198b8:	mov	r3, #10
   198bc:	str	r3, [fp, #-12]
   198c0:	ldr	r2, [fp, #-12]
   198c4:	ldr	r3, [fp, #-8]
   198c8:	cmp	r2, r3
   198cc:	bls	198d8 <__assert_fail@plt+0x71ec>
   198d0:	ldr	r3, [fp, #-12]
   198d4:	b	198dc <__assert_fail@plt+0x71f0>
   198d8:	ldr	r3, [fp, #-8]
   198dc:	mov	r0, r3
   198e0:	sub	sp, fp, #4
   198e4:	ldr	fp, [sp]
   198e8:	add	sp, sp, #4
   198ec:	pop	{pc}		; (ldr pc, [sp], #4)
   198f0:	str	fp, [sp, #-8]!
   198f4:	str	lr, [sp, #4]
   198f8:	add	fp, sp, #4
   198fc:	sub	sp, sp, #8
   19900:	str	r0, [fp, #-8]
   19904:	ldr	r3, [fp, #-8]
   19908:	cmp	r3, #0
   1990c:	beq	19944 <__assert_fail@plt+0x7258>
   19910:	ldr	r3, [fp, #-8]
   19914:	ldr	r3, [r3, #160]	; 0xa0
   19918:	mov	r0, r3
   1991c:	bl	198f0 <__assert_fail@plt+0x7204>
   19920:	ldr	r3, [fp, #-8]
   19924:	ldr	r3, [r3, #156]	; 0x9c
   19928:	mov	r0, r3
   1992c:	bl	198f0 <__assert_fail@plt+0x7204>
   19930:	ldr	r0, [fp, #-8]
   19934:	bl	196c0 <__assert_fail@plt+0x6fd4>
   19938:	mov	r2, r0
   1993c:	ldr	r3, [fp, #-8]
   19940:	str	r2, [r3, #24]
   19944:	nop	{0}
   19948:	sub	sp, fp, #4
   1994c:	ldr	fp, [sp]
   19950:	add	sp, sp, #4
   19954:	pop	{pc}		; (ldr pc, [sp], #4)
   19958:	push	{fp}		; (str fp, [sp, #-4]!)
   1995c:	add	fp, sp, #0
   19960:	movw	r3, #51028	; 0xc754
   19964:	movt	r3, #7
   19968:	ldr	r3, [r3]
   1996c:	mov	r0, r3
   19970:	add	sp, fp, #0
   19974:	pop	{fp}		; (ldr fp, [sp], #4)
   19978:	bx	lr
   1997c:	push	{fp}		; (str fp, [sp, #-4]!)
   19980:	add	fp, sp, #0
   19984:	sub	sp, sp, #12
   19988:	str	r0, [fp, #-8]
   1998c:	ldr	r3, [fp, #-8]
   19990:	cmp	r3, #0
   19994:	beq	199a4 <__assert_fail@plt+0x72b8>
   19998:	ldr	r3, [fp, #-8]
   1999c:	ldr	r3, [r3, #28]
   199a0:	b	199a8 <__assert_fail@plt+0x72bc>
   199a4:	mov	r3, #1065353216	; 0x3f800000
   199a8:	vmov	s15, r3
   199ac:	vmov.f32	s0, s15
   199b0:	add	sp, fp, #0
   199b4:	pop	{fp}		; (ldr fp, [sp], #4)
   199b8:	bx	lr
   199bc:	str	fp, [sp, #-8]!
   199c0:	str	lr, [sp, #4]
   199c4:	vpush	{d8}
   199c8:	add	fp, sp, #12
   199cc:	sub	sp, sp, #16
   199d0:	str	r0, [fp, #-24]	; 0xffffffe8
   199d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   199d8:	cmp	r3, #0
   199dc:	bne	19a00 <__assert_fail@plt+0x7314>
   199e0:	movw	r3, #25176	; 0x6258
   199e4:	movt	r3, #6
   199e8:	movw	r2, #1156	; 0x484
   199ec:	movw	r1, #23768	; 0x5cd8
   199f0:	movt	r1, #6
   199f4:	movw	r0, #23936	; 0x5d80
   199f8:	movt	r0, #6
   199fc:	bl	126ec <__assert_fail@plt>
   19a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a04:	ldr	r3, [r3, #160]	; 0xa0
   19a08:	cmp	r3, #0
   19a0c:	beq	19a20 <__assert_fail@plt+0x7334>
   19a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a14:	ldr	r3, [r3, #160]	; 0xa0
   19a18:	mov	r0, r3
   19a1c:	bl	199bc <__assert_fail@plt+0x72d0>
   19a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a24:	ldr	r3, [r3, #156]	; 0x9c
   19a28:	cmp	r3, #0
   19a2c:	beq	19a40 <__assert_fail@plt+0x7354>
   19a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a34:	ldr	r3, [r3, #156]	; 0x9c
   19a38:	mov	r0, r3
   19a3c:	bl	199bc <__assert_fail@plt+0x72d0>
   19a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a44:	ldr	r3, [r3, #8]
   19a48:	cmp	r3, #5
   19a4c:	bne	19a70 <__assert_fail@plt+0x7384>
   19a50:	movw	r3, #25176	; 0x6258
   19a54:	movt	r3, #6
   19a58:	movw	r2, #1163	; 0x48b
   19a5c:	movw	r1, #23768	; 0x5cd8
   19a60:	movt	r1, #6
   19a64:	movw	r0, #23948	; 0x5d8c
   19a68:	movt	r0, #6
   19a6c:	bl	126ec <__assert_fail@plt>
   19a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a74:	ldr	r3, [r3, #8]
   19a78:	cmp	r3, #4
   19a7c:	bne	19aa0 <__assert_fail@plt+0x73b4>
   19a80:	movw	r3, #25176	; 0x6258
   19a84:	movt	r3, #6
   19a88:	movw	r2, #1164	; 0x48c
   19a8c:	movw	r1, #23768	; 0x5cd8
   19a90:	movt	r1, #6
   19a94:	movw	r0, #23976	; 0x5da8
   19a98:	movt	r0, #6
   19a9c:	bl	126ec <__assert_fail@plt>
   19aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19aa4:	ldr	r3, [r3, #8]
   19aa8:	cmp	r3, #5
   19aac:	ldrls	pc, [pc, r3, lsl #2]
   19ab0:	b	19d48 <__assert_fail@plt+0x765c>
   19ab4:	andeq	r9, r1, ip, asr #21
   19ab8:	andeq	r9, r1, r8, lsr fp
   19abc:	andeq	r9, r1, r4, lsr #23
   19ac0:	andeq	r9, r1, r4, lsr ip
   19ac4:	andeq	r9, r1, r0, lsr sp
   19ac8:	andeq	r9, r1, r0, lsr sp
   19acc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ad0:	ldr	r3, [r3, #160]	; 0xa0
   19ad4:	cmp	r3, #0
   19ad8:	beq	19afc <__assert_fail@plt+0x7410>
   19adc:	movw	r3, #25176	; 0x6258
   19ae0:	movt	r3, #6
   19ae4:	movw	r2, #1169	; 0x491
   19ae8:	movw	r1, #23768	; 0x5cd8
   19aec:	movt	r1, #6
   19af0:	movw	r0, #24000	; 0x5dc0
   19af4:	movt	r0, #6
   19af8:	bl	126ec <__assert_fail@plt>
   19afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b00:	ldr	r3, [r3, #156]	; 0x9c
   19b04:	cmp	r3, #0
   19b08:	beq	19b2c <__assert_fail@plt+0x7440>
   19b0c:	movw	r3, #25176	; 0x6258
   19b10:	movt	r3, #6
   19b14:	movw	r2, #1170	; 0x492
   19b18:	movw	r1, #23768	; 0x5cd8
   19b1c:	movt	r1, #6
   19b20:	movw	r0, #24024	; 0x5dd8
   19b24:	movt	r0, #6
   19b28:	bl	126ec <__assert_fail@plt>
   19b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b30:	ldr	r3, [r3, #28]
   19b34:	b	19d68 <__assert_fail@plt+0x767c>
   19b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b3c:	ldr	r3, [r3, #160]	; 0xa0
   19b40:	cmp	r3, #0
   19b44:	beq	19b68 <__assert_fail@plt+0x747c>
   19b48:	movw	r3, #25176	; 0x6258
   19b4c:	movt	r3, #6
   19b50:	movw	r2, #1174	; 0x496
   19b54:	movw	r1, #23768	; 0x5cd8
   19b58:	movt	r1, #6
   19b5c:	movw	r0, #24000	; 0x5dc0
   19b60:	movt	r0, #6
   19b64:	bl	126ec <__assert_fail@plt>
   19b68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b6c:	ldr	r3, [r3, #156]	; 0x9c
   19b70:	cmp	r3, #0
   19b74:	beq	19b98 <__assert_fail@plt+0x74ac>
   19b78:	movw	r3, #25176	; 0x6258
   19b7c:	movt	r3, #6
   19b80:	movw	r2, #1175	; 0x497
   19b84:	movw	r1, #23768	; 0x5cd8
   19b88:	movt	r1, #6
   19b8c:	movw	r0, #24024	; 0x5dd8
   19b90:	movt	r0, #6
   19b94:	bl	126ec <__assert_fail@plt>
   19b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b9c:	ldr	r3, [r3, #28]
   19ba0:	b	19d68 <__assert_fail@plt+0x767c>
   19ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ba8:	ldr	r2, [r3]
   19bac:	movw	r3, #21684	; 0x54b4
   19bb0:	movt	r3, #1
   19bb4:	cmp	r2, r3
   19bb8:	beq	19bdc <__assert_fail@plt+0x74f0>
   19bbc:	movw	r3, #25176	; 0x6258
   19bc0:	movt	r3, #6
   19bc4:	movw	r2, #1180	; 0x49c
   19bc8:	movw	r1, #23768	; 0x5cd8
   19bcc:	movt	r1, #6
   19bd0:	movw	r0, #24048	; 0x5df0
   19bd4:	movt	r0, #6
   19bd8:	bl	126ec <__assert_fail@plt>
   19bdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19be0:	ldr	r3, [r3, #156]	; 0x9c
   19be4:	cmp	r3, #0
   19be8:	beq	19c0c <__assert_fail@plt+0x7520>
   19bec:	movw	r3, #25176	; 0x6258
   19bf0:	movt	r3, #6
   19bf4:	movw	r2, #1181	; 0x49d
   19bf8:	movw	r1, #23768	; 0x5cd8
   19bfc:	movt	r1, #6
   19c00:	movw	r0, #24024	; 0x5dd8
   19c04:	movt	r0, #6
   19c08:	bl	126ec <__assert_fail@plt>
   19c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c10:	ldr	r3, [r3, #160]	; 0xa0
   19c14:	vldr	s15, [r3, #28]
   19c18:	vldr	s14, [pc, #356]	; 19d84 <__assert_fail@plt+0x7698>
   19c1c:	vsub.f32	s15, s14, s15
   19c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c24:	vstr	s15, [r3, #28]
   19c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c2c:	ldr	r3, [r3, #28]
   19c30:	b	19d68 <__assert_fail@plt+0x767c>
   19c34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c38:	ldr	r2, [r3]
   19c3c:	movw	r3, #17168	; 0x4310
   19c40:	movt	r3, #1
   19c44:	cmp	r2, r3
   19c48:	bne	19c80 <__assert_fail@plt+0x7594>
   19c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c50:	ldr	r3, [r3, #160]	; 0xa0
   19c54:	mov	r0, r3
   19c58:	bl	1997c <__assert_fail@plt+0x7290>
   19c5c:	vmov.f32	s16, s0
   19c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c64:	ldr	r3, [r3, #156]	; 0x9c
   19c68:	mov	r0, r3
   19c6c:	bl	1997c <__assert_fail@plt+0x7290>
   19c70:	vmov.f32	s15, s0
   19c74:	vmul.f32	s15, s16, s15
   19c78:	vstr	s15, [fp, #-16]
   19c7c:	b	19d10 <__assert_fail@plt+0x7624>
   19c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c84:	ldr	r2, [r3]
   19c88:	movw	r3, #17840	; 0x45b0
   19c8c:	movt	r3, #1
   19c90:	cmp	r2, r3
   19c94:	bne	19ca4 <__assert_fail@plt+0x75b8>
   19c98:	mov	r3, #1065353216	; 0x3f800000
   19c9c:	str	r3, [fp, #-16]
   19ca0:	b	19d10 <__assert_fail@plt+0x7624>
   19ca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ca8:	ldr	r2, [r3]
   19cac:	movw	r3, #23120	; 0x5a50
   19cb0:	movt	r3, #1
   19cb4:	cmp	r2, r3
   19cb8:	bne	19cf0 <__assert_fail@plt+0x7604>
   19cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19cc0:	ldr	r3, [r3, #160]	; 0xa0
   19cc4:	mov	r0, r3
   19cc8:	bl	1997c <__assert_fail@plt+0x7290>
   19ccc:	vmov.f32	s16, s0
   19cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19cd4:	ldr	r3, [r3, #156]	; 0x9c
   19cd8:	mov	r0, r3
   19cdc:	bl	1997c <__assert_fail@plt+0x7290>
   19ce0:	vmov.f32	s15, s0
   19ce4:	vadd.f32	s15, s16, s15
   19ce8:	vstr	s15, [fp, #-16]
   19cec:	b	19d10 <__assert_fail@plt+0x7624>
   19cf0:	movw	r3, #25176	; 0x6258
   19cf4:	movt	r3, #6
   19cf8:	movw	r2, #1204	; 0x4b4
   19cfc:	movw	r1, #23768	; 0x5cd8
   19d00:	movt	r1, #6
   19d04:	movw	r0, #24076	; 0x5e0c
   19d08:	movt	r0, #6
   19d0c:	bl	126ec <__assert_fail@plt>
   19d10:	vldr	s0, [fp, #-16]
   19d14:	bl	1933c <__assert_fail@plt+0x6c50>
   19d18:	vmov.f32	s15, s0
   19d1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d20:	vstr	s15, [r3, #28]
   19d24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d28:	ldr	r3, [r3, #28]
   19d2c:	b	19d68 <__assert_fail@plt+0x767c>
   19d30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d34:	mov	r2, #1065353216	; 0x3f800000
   19d38:	str	r2, [r3, #28]
   19d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d40:	ldr	r3, [r3, #28]
   19d44:	b	19d68 <__assert_fail@plt+0x767c>
   19d48:	movw	r3, #25176	; 0x6258
   19d4c:	movt	r3, #6
   19d50:	mov	r2, #1216	; 0x4c0
   19d54:	movw	r1, #23768	; 0x5cd8
   19d58:	movt	r1, #6
   19d5c:	movw	r0, #24076	; 0x5e0c
   19d60:	movt	r0, #6
   19d64:	bl	126ec <__assert_fail@plt>
   19d68:	vmov	s15, r3
   19d6c:	vmov.f32	s0, s15
   19d70:	sub	sp, fp, #12
   19d74:	vpop	{d8}
   19d78:	ldr	fp, [sp]
   19d7c:	add	sp, sp, #4
   19d80:	pop	{pc}		; (ldr pc, [sp], #4)
   19d84:	svccc	0x00800000
   19d88:	str	fp, [sp, #-8]!
   19d8c:	str	lr, [sp, #4]
   19d90:	add	fp, sp, #4
   19d94:	sub	sp, sp, #8
   19d98:	str	r0, [fp, #-8]
   19d9c:	mov	r3, r1
   19da0:	strb	r3, [fp, #-9]
   19da4:	ldrb	r3, [fp, #-9]
   19da8:	cmp	r3, #0
   19dac:	beq	19de0 <__assert_fail@plt+0x76f4>
   19db0:	ldr	r3, [fp, #-8]
   19db4:	ldr	r3, [r3, #8]
   19db8:	cmp	r3, #3
   19dbc:	beq	19de0 <__assert_fail@plt+0x76f4>
   19dc0:	movw	r3, #25200	; 0x6270
   19dc4:	movt	r3, #6
   19dc8:	movw	r2, #1230	; 0x4ce
   19dcc:	movw	r1, #23768	; 0x5cd8
   19dd0:	movt	r1, #6
   19dd4:	movw	r0, #24080	; 0x5e10
   19dd8:	movt	r0, #6
   19ddc:	bl	126ec <__assert_fail@plt>
   19de0:	ldr	r3, [fp, #-8]
   19de4:	ldr	r3, [r3, #156]	; 0x9c
   19de8:	cmp	r3, #0
   19dec:	beq	19e38 <__assert_fail@plt+0x774c>
   19df0:	ldr	r3, [fp, #-8]
   19df4:	ldr	r3, [r3, #156]	; 0x9c
   19df8:	ldr	r3, [r3, #8]
   19dfc:	cmp	r3, #3
   19e00:	beq	19e24 <__assert_fail@plt+0x7738>
   19e04:	movw	r3, #25200	; 0x6270
   19e08:	movt	r3, #6
   19e0c:	movw	r2, #1235	; 0x4d3
   19e10:	movw	r1, #23768	; 0x5cd8
   19e14:	movt	r1, #6
   19e18:	movw	r0, #24100	; 0x5e24
   19e1c:	movt	r0, #6
   19e20:	bl	126ec <__assert_fail@plt>
   19e24:	ldr	r3, [fp, #-8]
   19e28:	ldr	r3, [r3, #156]	; 0x9c
   19e2c:	mov	r1, #0
   19e30:	mov	r0, r3
   19e34:	bl	19d88 <__assert_fail@plt+0x769c>
   19e38:	ldr	r3, [fp, #-8]
   19e3c:	ldr	r3, [r3, #160]	; 0xa0
   19e40:	cmp	r3, #0
   19e44:	beq	19e5c <__assert_fail@plt+0x7770>
   19e48:	ldr	r3, [fp, #-8]
   19e4c:	ldr	r3, [r3, #160]	; 0xa0
   19e50:	mov	r1, #0
   19e54:	mov	r0, r3
   19e58:	bl	19d88 <__assert_fail@plt+0x769c>
   19e5c:	nop	{0}
   19e60:	sub	sp, fp, #4
   19e64:	ldr	fp, [sp]
   19e68:	add	sp, sp, #4
   19e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   19e70:	str	fp, [sp, #-8]!
   19e74:	str	lr, [sp, #4]
   19e78:	add	fp, sp, #4
   19e7c:	sub	sp, sp, #56	; 0x38
   19e80:	str	r0, [fp, #-40]	; 0xffffffd8
   19e84:	str	r1, [fp, #-44]	; 0xffffffd4
   19e88:	str	r2, [fp, #-48]	; 0xffffffd0
   19e8c:	movw	r3, #51024	; 0xc750
   19e90:	movt	r3, #7
   19e94:	mov	r2, #0
   19e98:	str	r2, [r3]
   19e9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ea0:	lsl	r3, r3, #2
   19ea4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19ea8:	add	r2, r2, r3
   19eac:	movw	r3, #51036	; 0xc75c
   19eb0:	movt	r3, #7
   19eb4:	str	r2, [r3]
   19eb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ebc:	str	r3, [fp, #-36]	; 0xffffffdc
   19ec0:	b	19eec <__assert_fail@plt+0x7800>
   19ec4:	movw	r3, #51040	; 0xc760
   19ec8:	movt	r3, #7
   19ecc:	ldr	r3, [r3]
   19ed0:	add	r2, r3, #1
   19ed4:	movw	r3, #51040	; 0xc760
   19ed8:	movt	r3, #7
   19edc:	str	r2, [r3]
   19ee0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ee4:	add	r3, r3, #1
   19ee8:	str	r3, [fp, #-36]	; 0xffffffdc
   19eec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19ef0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ef4:	cmp	r2, r3
   19ef8:	bge	19f30 <__assert_fail@plt+0x7844>
   19efc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19f00:	lsl	r3, r3, #2
   19f04:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19f08:	add	r3, r2, r3
   19f0c:	ldr	r3, [r3]
   19f10:	mov	r1, #1
   19f14:	mov	r0, r3
   19f18:	bl	1c87c <__assert_fail@plt+0xa190>
   19f1c:	mov	r3, r0
   19f20:	eor	r3, r3, #1
   19f24:	uxtb	r3, r3
   19f28:	cmp	r3, #0
   19f2c:	bne	19ec4 <__assert_fail@plt+0x77d8>
   19f30:	movw	r0, #24132	; 0x5e44
   19f34:	movt	r0, #6
   19f38:	bl	2170c <__assert_fail@plt+0xf020>
   19f3c:	str	r0, [fp, #-8]
   19f40:	movw	r0, #24136	; 0x5e48
   19f44:	movt	r0, #6
   19f48:	bl	2170c <__assert_fail@plt+0xf020>
   19f4c:	str	r0, [fp, #-12]
   19f50:	movw	r0, #24140	; 0x5e4c
   19f54:	movt	r0, #6
   19f58:	bl	2170c <__assert_fail@plt+0xf020>
   19f5c:	str	r0, [fp, #-16]
   19f60:	ldr	r3, [fp, #-8]
   19f64:	cmp	r3, #0
   19f68:	bne	19f8c <__assert_fail@plt+0x78a0>
   19f6c:	movw	r3, #25220	; 0x6284
   19f70:	movt	r3, #6
   19f74:	movw	r2, #1270	; 0x4f6
   19f78:	movw	r1, #23768	; 0x5cd8
   19f7c:	movt	r1, #6
   19f80:	movw	r0, #24148	; 0x5e54
   19f84:	movt	r0, #6
   19f88:	bl	126ec <__assert_fail@plt>
   19f8c:	ldr	r3, [fp, #-12]
   19f90:	cmp	r3, #0
   19f94:	bne	19fb8 <__assert_fail@plt+0x78cc>
   19f98:	movw	r3, #25220	; 0x6284
   19f9c:	movt	r3, #6
   19fa0:	movw	r2, #1271	; 0x4f7
   19fa4:	movw	r1, #23768	; 0x5cd8
   19fa8:	movt	r1, #6
   19fac:	movw	r0, #24168	; 0x5e68
   19fb0:	movt	r0, #6
   19fb4:	bl	126ec <__assert_fail@plt>
   19fb8:	ldr	r3, [fp, #-16]
   19fbc:	cmp	r3, #0
   19fc0:	bne	19fe4 <__assert_fail@plt+0x78f8>
   19fc4:	movw	r3, #25220	; 0x6284
   19fc8:	movt	r3, #6
   19fcc:	movw	r2, #1272	; 0x4f8
   19fd0:	movw	r1, #23768	; 0x5cd8
   19fd4:	movt	r1, #6
   19fd8:	movw	r0, #24188	; 0x5e7c
   19fdc:	movt	r0, #6
   19fe0:	bl	126ec <__assert_fail@plt>
   19fe4:	sub	r3, fp, #40	; 0x28
   19fe8:	mov	r2, r3
   19fec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ff0:	ldr	r0, [fp, #-8]
   19ff4:	bl	23f8c <__assert_fail@plt+0x118a0>
   19ff8:	movw	r3, #51032	; 0xc758
   19ffc:	movt	r3, #7
   1a000:	ldr	r2, [r3]
   1a004:	movw	r3, #24132	; 0x5e44
   1a008:	movt	r3, #6
   1a00c:	str	r3, [r2, #4]
   1a010:	movw	r3, #51024	; 0xc750
   1a014:	movt	r3, #7
   1a018:	ldr	r3, [r3]
   1a01c:	mov	r2, #1
   1a020:	strb	r2, [r3, #33]	; 0x21
   1a024:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a028:	movw	r3, #51032	; 0xc758
   1a02c:	movt	r3, #7
   1a030:	ldr	r2, [r3]
   1a034:	movw	r3, #51024	; 0xc750
   1a038:	movt	r3, #7
   1a03c:	ldr	r3, [r3]
   1a040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a044:	bl	21574 <__assert_fail@plt+0xee88>
   1a048:	movw	r3, #51032	; 0xc758
   1a04c:	movt	r3, #7
   1a050:	ldr	r3, [r3]
   1a054:	mov	r0, r3
   1a058:	bl	16c70 <__assert_fail@plt+0x4584>
   1a05c:	b	1a31c <__assert_fail@plt+0x7c30>
   1a060:	movw	r3, #53280	; 0xd020
   1a064:	movt	r3, #7
   1a068:	mov	r2, #0
   1a06c:	strb	r2, [r3, #40]	; 0x28
   1a070:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a074:	lsl	r3, r3, #2
   1a078:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a07c:	add	r3, r2, r3
   1a080:	ldr	r3, [r3]
   1a084:	mov	r1, #0
   1a088:	mov	r0, r3
   1a08c:	bl	1c87c <__assert_fail@plt+0xa190>
   1a090:	mov	r3, r0
   1a094:	eor	r3, r3, #1
   1a098:	uxtb	r3, r3
   1a09c:	cmp	r3, #0
   1a0a0:	beq	1a138 <__assert_fail@plt+0x7a4c>
   1a0a4:	movw	r0, #24208	; 0x5e90
   1a0a8:	movt	r0, #6
   1a0ac:	bl	12398 <gettext@plt>
   1a0b0:	mov	r1, r0
   1a0b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a0b8:	lsl	r3, r3, #2
   1a0bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a0c0:	add	r3, r2, r3
   1a0c4:	ldr	r3, [r3]
   1a0c8:	mov	r2, r1
   1a0cc:	mov	r1, #0
   1a0d0:	mov	r0, #0
   1a0d4:	bl	122b4 <error@plt>
   1a0d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a0dc:	lsl	r3, r3, #2
   1a0e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a0e4:	add	r3, r2, r3
   1a0e8:	ldr	r3, [r3]
   1a0ec:	mov	r1, #0
   1a0f0:	mov	r0, r3
   1a0f4:	bl	124c4 <access@plt>
   1a0f8:	mov	r3, r0
   1a0fc:	cmp	r3, #0
   1a100:	bne	1a130 <__assert_fail@plt+0x7a44>
   1a104:	movw	r0, #24244	; 0x5eb4
   1a108:	movt	r0, #6
   1a10c:	bl	12398 <gettext@plt>
   1a110:	mov	r2, r0
   1a114:	movw	r3, #51032	; 0xc758
   1a118:	movt	r3, #7
   1a11c:	ldr	r3, [r3]
   1a120:	ldr	r3, [r3, #4]
   1a124:	mov	r1, #0
   1a128:	mov	r0, #0
   1a12c:	bl	122b4 <error@plt>
   1a130:	mov	r0, #1
   1a134:	bl	12380 <exit@plt>
   1a138:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a13c:	lsl	r3, r3, #2
   1a140:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a144:	add	r3, r2, r3
   1a148:	ldr	r3, [r3]
   1a14c:	str	r3, [fp, #-20]	; 0xffffffec
   1a150:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a154:	bl	2170c <__assert_fail@plt+0xf020>
   1a158:	str	r0, [fp, #-24]	; 0xffffffe8
   1a15c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a160:	cmp	r3, #0
   1a164:	bne	1a188 <__assert_fail@plt+0x7a9c>
   1a168:	movw	r0, #24292	; 0x5ee4
   1a16c:	movt	r0, #6
   1a170:	bl	12398 <gettext@plt>
   1a174:	mov	r2, r0
   1a178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a17c:	mov	r1, #0
   1a180:	mov	r0, #1
   1a184:	bl	122b4 <error@plt>
   1a188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a18c:	ldr	r3, [r3]
   1a190:	cmp	r3, #4
   1a194:	beq	1a1a4 <__assert_fail@plt+0x7ab8>
   1a198:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a19c:	add	r3, r3, #1
   1a1a0:	str	r3, [fp, #-36]	; 0xffffffdc
   1a1a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1a8:	str	r3, [fp, #-28]	; 0xffffffe4
   1a1ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a1b0:	ldr	r3, [r3, #8]
   1a1b4:	sub	r2, fp, #36	; 0x24
   1a1b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1c0:	blx	r3
   1a1c4:	mov	r3, r0
   1a1c8:	eor	r3, r3, #1
   1a1cc:	uxtb	r3, r3
   1a1d0:	cmp	r3, #0
   1a1d4:	beq	1a294 <__assert_fail@plt+0x7ba8>
   1a1d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1dc:	lsl	r3, r3, #2
   1a1e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a1e4:	add	r3, r2, r3
   1a1e8:	ldr	r3, [r3]
   1a1ec:	cmp	r3, #0
   1a1f0:	beq	1a274 <__assert_fail@plt+0x7b88>
   1a1f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a1f8:	ldr	r3, [r3]
   1a1fc:	cmp	r3, #4
   1a200:	bne	1a234 <__assert_fail@plt+0x7b48>
   1a204:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a208:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a20c:	cmp	r2, r3
   1a210:	bne	1a234 <__assert_fail@plt+0x7b48>
   1a214:	movw	r0, #24316	; 0x5efc
   1a218:	movt	r0, #6
   1a21c:	bl	12398 <gettext@plt>
   1a220:	mov	r2, r0
   1a224:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a228:	mov	r1, #0
   1a22c:	mov	r0, #1
   1a230:	bl	122b4 <error@plt>
   1a234:	movw	r0, #24340	; 0x5f14
   1a238:	movt	r0, #6
   1a23c:	bl	12398 <gettext@plt>
   1a240:	mov	r1, r0
   1a244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a248:	lsl	r3, r3, #2
   1a24c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a250:	add	r3, r2, r3
   1a254:	ldr	r2, [r3]
   1a258:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a25c:	str	r3, [sp]
   1a260:	mov	r3, r2
   1a264:	mov	r2, r1
   1a268:	mov	r1, #0
   1a26c:	mov	r0, #1
   1a270:	bl	122b4 <error@plt>
   1a274:	movw	r0, #24372	; 0x5f34
   1a278:	movt	r0, #6
   1a27c:	bl	12398 <gettext@plt>
   1a280:	mov	r2, r0
   1a284:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a288:	mov	r1, #0
   1a28c:	mov	r0, #1
   1a290:	bl	122b4 <error@plt>
   1a294:	movw	r3, #51032	; 0xc758
   1a298:	movt	r3, #7
   1a29c:	ldr	r3, [r3]
   1a2a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a2a4:	str	r2, [r3, #4]
   1a2a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a2ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a2b0:	cmp	r2, r3
   1a2b4:	beq	1a2e0 <__assert_fail@plt+0x7bf4>
   1a2b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a2bc:	lsl	r3, r3, #2
   1a2c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a2c4:	add	r2, r2, r3
   1a2c8:	movw	r3, #51032	; 0xc758
   1a2cc:	movt	r3, #7
   1a2d0:	ldr	r3, [r3]
   1a2d4:	ldr	r2, [r2]
   1a2d8:	str	r2, [r3, #36]	; 0x24
   1a2dc:	b	1a2f4 <__assert_fail@plt+0x7c08>
   1a2e0:	movw	r3, #51032	; 0xc758
   1a2e4:	movt	r3, #7
   1a2e8:	ldr	r3, [r3]
   1a2ec:	mov	r2, #0
   1a2f0:	str	r2, [r3, #36]	; 0x24
   1a2f4:	movw	r3, #51032	; 0xc758
   1a2f8:	movt	r3, #7
   1a2fc:	ldr	r3, [r3]
   1a300:	mov	r0, r3
   1a304:	bl	16c70 <__assert_fail@plt+0x4584>
   1a308:	movw	r3, #51024	; 0xc750
   1a30c:	movt	r3, #7
   1a310:	ldr	r3, [r3]
   1a314:	mov	r0, r3
   1a318:	bl	16c70 <__assert_fail@plt+0x4584>
   1a31c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a320:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a324:	cmp	r2, r3
   1a328:	blt	1a060 <__assert_fail@plt+0x7974>
   1a32c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a330:	movw	r3, #51032	; 0xc758
   1a334:	movt	r3, #7
   1a338:	ldr	r2, [r3]
   1a33c:	movw	r3, #51024	; 0xc750
   1a340:	movt	r3, #7
   1a344:	ldr	r3, [r3]
   1a348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a34c:	bl	215b0 <__assert_fail@plt+0xeec4>
   1a350:	movw	r3, #51024	; 0xc750
   1a354:	movt	r3, #7
   1a358:	ldr	r3, [r3]
   1a35c:	ldr	r3, [r3, #152]	; 0x98
   1a360:	cmp	r3, #0
   1a364:	bne	1a410 <__assert_fail@plt+0x7d24>
   1a368:	movw	r3, #51024	; 0xc750
   1a36c:	movt	r3, #7
   1a370:	ldr	r3, [r3]
   1a374:	str	r3, [fp, #-32]	; 0xffffffe0
   1a378:	movw	r3, #51024	; 0xc750
   1a37c:	movt	r3, #7
   1a380:	ldr	r3, [r3]
   1a384:	ldr	r2, [r3, #152]	; 0x98
   1a388:	movw	r3, #51032	; 0xc758
   1a38c:	movt	r3, #7
   1a390:	str	r2, [r3]
   1a394:	movw	r3, #51032	; 0xc758
   1a398:	movt	r3, #7
   1a39c:	ldr	r2, [r3]
   1a3a0:	movw	r3, #51024	; 0xc750
   1a3a4:	movt	r3, #7
   1a3a8:	str	r2, [r3]
   1a3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a3b0:	mov	r0, r3
   1a3b4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1a3b8:	sub	r3, fp, #40	; 0x28
   1a3bc:	mov	r2, r3
   1a3c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a3c4:	ldr	r0, [fp, #-16]
   1a3c8:	bl	24670 <__assert_fail@plt+0x11f84>
   1a3cc:	movw	r3, #51032	; 0xc758
   1a3d0:	movt	r3, #7
   1a3d4:	ldr	r2, [r3]
   1a3d8:	movw	r3, #24400	; 0x5f50
   1a3dc:	movt	r3, #6
   1a3e0:	str	r3, [r2, #4]
   1a3e4:	movw	r3, #51032	; 0xc758
   1a3e8:	movt	r3, #7
   1a3ec:	ldr	r3, [r3]
   1a3f0:	mov	r0, r3
   1a3f4:	bl	16c70 <__assert_fail@plt+0x4584>
   1a3f8:	movw	r3, #51024	; 0xc750
   1a3fc:	movt	r3, #7
   1a400:	ldr	r3, [r3]
   1a404:	mov	r0, r3
   1a408:	bl	16c70 <__assert_fail@plt+0x4584>
   1a40c:	b	1a548 <__assert_fail@plt+0x7e5c>
   1a410:	movw	r3, #51024	; 0xc750
   1a414:	movt	r3, #7
   1a418:	ldr	r3, [r3]
   1a41c:	ldr	r3, [r3, #152]	; 0x98
   1a420:	mov	r0, r3
   1a424:	bl	1c824 <__assert_fail@plt+0xa138>
   1a428:	mov	r3, r0
   1a42c:	eor	r3, r3, #1
   1a430:	uxtb	r3, r3
   1a434:	cmp	r3, #0
   1a438:	beq	1a48c <__assert_fail@plt+0x7da0>
   1a43c:	movw	r3, #51024	; 0xc750
   1a440:	movt	r3, #7
   1a444:	ldr	r3, [r3]
   1a448:	str	r3, [fp, #-32]	; 0xffffffe0
   1a44c:	movw	r3, #51024	; 0xc750
   1a450:	movt	r3, #7
   1a454:	ldr	r3, [r3]
   1a458:	ldr	r2, [r3, #152]	; 0x98
   1a45c:	movw	r3, #51024	; 0xc750
   1a460:	movt	r3, #7
   1a464:	str	r2, [r3]
   1a468:	movw	r3, #51024	; 0xc750
   1a46c:	movt	r3, #7
   1a470:	ldr	r3, [r3]
   1a474:	mov	r0, r3
   1a478:	bl	16c70 <__assert_fail@plt+0x4584>
   1a47c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a480:	mov	r0, r3
   1a484:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1a488:	b	1a548 <__assert_fail@plt+0x7e5c>
   1a48c:	sub	r3, fp, #40	; 0x28
   1a490:	mov	r2, r3
   1a494:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a498:	ldr	r0, [fp, #-12]
   1a49c:	bl	21c5c <__assert_fail@plt+0xf570>
   1a4a0:	movw	r3, #51032	; 0xc758
   1a4a4:	movt	r3, #7
   1a4a8:	ldr	r2, [r3]
   1a4ac:	movw	r3, #24136	; 0x5e48
   1a4b0:	movt	r3, #6
   1a4b4:	str	r3, [r2, #4]
   1a4b8:	movw	r3, #51032	; 0xc758
   1a4bc:	movt	r3, #7
   1a4c0:	ldr	r3, [r3]
   1a4c4:	mov	r2, #1
   1a4c8:	strb	r2, [r3, #33]	; 0x21
   1a4cc:	movw	r3, #51032	; 0xc758
   1a4d0:	movt	r3, #7
   1a4d4:	ldr	r3, [r3]
   1a4d8:	mov	r0, r3
   1a4dc:	bl	16c70 <__assert_fail@plt+0x4584>
   1a4e0:	sub	r3, fp, #40	; 0x28
   1a4e4:	mov	r2, r3
   1a4e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a4ec:	ldr	r0, [fp, #-16]
   1a4f0:	bl	24670 <__assert_fail@plt+0x11f84>
   1a4f4:	movw	r3, #51032	; 0xc758
   1a4f8:	movt	r3, #7
   1a4fc:	ldr	r2, [r3]
   1a500:	movw	r3, #24400	; 0x5f50
   1a504:	movt	r3, #6
   1a508:	str	r3, [r2, #4]
   1a50c:	movw	r3, #51032	; 0xc758
   1a510:	movt	r3, #7
   1a514:	ldr	r3, [r3]
   1a518:	mov	r2, #1
   1a51c:	strb	r2, [r3, #33]	; 0x21
   1a520:	movw	r3, #51032	; 0xc758
   1a524:	movt	r3, #7
   1a528:	ldr	r3, [r3]
   1a52c:	mov	r0, r3
   1a530:	bl	16c70 <__assert_fail@plt+0x4584>
   1a534:	movw	r3, #51024	; 0xc750
   1a538:	movt	r3, #7
   1a53c:	ldr	r3, [r3]
   1a540:	mov	r0, r3
   1a544:	bl	16c70 <__assert_fail@plt+0x4584>
   1a548:	movw	r3, #53324	; 0xd04c
   1a54c:	movt	r3, #7
   1a550:	ldr	r3, [r3, #44]	; 0x2c
   1a554:	and	r3, r3, #9
   1a558:	cmp	r3, #0
   1a55c:	beq	1a5a4 <__assert_fail@plt+0x7eb8>
   1a560:	movw	r3, #50984	; 0xc728
   1a564:	movt	r3, #7
   1a568:	ldr	r3, [r3]
   1a56c:	mov	r2, #16
   1a570:	mov	r1, #1
   1a574:	movw	r0, #24408	; 0x5f58
   1a578:	movt	r0, #6
   1a57c:	bl	12224 <fwrite@plt>
   1a580:	movw	r3, #50984	; 0xc728
   1a584:	movt	r3, #7
   1a588:	ldr	r2, [r3]
   1a58c:	movw	r3, #51024	; 0xc750
   1a590:	movt	r3, #7
   1a594:	ldr	r3, [r3]
   1a598:	mov	r1, r3
   1a59c:	mov	r0, r2
   1a5a0:	bl	16890 <__assert_fail@plt+0x41a4>
   1a5a4:	movw	r3, #51024	; 0xc750
   1a5a8:	movt	r3, #7
   1a5ac:	ldr	r3, [r3]
   1a5b0:	mov	r0, r3
   1a5b4:	bl	2115c <__assert_fail@plt+0xea70>
   1a5b8:	movw	r3, #51024	; 0xc750
   1a5bc:	movt	r3, #7
   1a5c0:	ldr	r3, [r3]
   1a5c4:	mov	r0, r3
   1a5c8:	bl	16c70 <__assert_fail@plt+0x4584>
   1a5cc:	movw	r3, #51024	; 0xc750
   1a5d0:	movt	r3, #7
   1a5d4:	ldr	r3, [r3]
   1a5d8:	str	r3, [fp, #-32]	; 0xffffffe0
   1a5dc:	sub	r3, fp, #32
   1a5e0:	mov	r2, #0
   1a5e4:	mov	r1, #0
   1a5e8:	mov	r0, r3
   1a5ec:	bl	17bbc <__assert_fail@plt+0x54d0>
   1a5f0:	mov	r2, r0
   1a5f4:	movw	r3, #51028	; 0xc754
   1a5f8:	movt	r3, #7
   1a5fc:	str	r2, [r3]
   1a600:	movw	r3, #51028	; 0xc754
   1a604:	movt	r3, #7
   1a608:	ldr	r3, [r3]
   1a60c:	mov	r0, r3
   1a610:	bl	199bc <__assert_fail@plt+0x72d0>
   1a614:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a618:	cmp	r3, #0
   1a61c:	beq	1a6ac <__assert_fail@plt+0x7fc0>
   1a620:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a624:	ldr	r2, [r3]
   1a628:	movw	r3, #17552	; 0x4490
   1a62c:	movt	r3, #1
   1a630:	cmp	r2, r3
   1a634:	bne	1a658 <__assert_fail@plt+0x7f6c>
   1a638:	movw	r0, #24428	; 0x5f6c
   1a63c:	movt	r0, #6
   1a640:	bl	12398 <gettext@plt>
   1a644:	mov	r3, r0
   1a648:	mov	r2, r3
   1a64c:	mov	r1, #0
   1a650:	mov	r0, #1
   1a654:	bl	122b4 <error@plt>
   1a658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a65c:	ldr	r3, [r3, #4]
   1a660:	cmp	r3, #0
   1a664:	beq	1a68c <__assert_fail@plt+0x7fa0>
   1a668:	movw	r0, #24452	; 0x5f84
   1a66c:	movt	r0, #6
   1a670:	bl	12398 <gettext@plt>
   1a674:	mov	r2, r0
   1a678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a67c:	ldr	r3, [r3, #4]
   1a680:	mov	r1, #0
   1a684:	mov	r0, #1
   1a688:	bl	122b4 <error@plt>
   1a68c:	movw	r0, #24484	; 0x5fa4
   1a690:	movt	r0, #6
   1a694:	bl	12398 <gettext@plt>
   1a698:	mov	r3, r0
   1a69c:	mov	r2, r3
   1a6a0:	mov	r1, #0
   1a6a4:	mov	r0, #1
   1a6a8:	bl	122b4 <error@plt>
   1a6ac:	movw	r3, #53324	; 0xd04c
   1a6b0:	movt	r3, #7
   1a6b4:	ldr	r3, [r3, #44]	; 0x2c
   1a6b8:	and	r3, r3, #9
   1a6bc:	cmp	r3, #0
   1a6c0:	beq	1a708 <__assert_fail@plt+0x801c>
   1a6c4:	movw	r3, #50984	; 0xc728
   1a6c8:	movt	r3, #7
   1a6cc:	ldr	r3, [r3]
   1a6d0:	mov	r2, #11
   1a6d4:	mov	r1, #1
   1a6d8:	movw	r0, #24512	; 0x5fc0
   1a6dc:	movt	r0, #6
   1a6e0:	bl	12224 <fwrite@plt>
   1a6e4:	movw	r3, #50984	; 0xc728
   1a6e8:	movt	r3, #7
   1a6ec:	ldr	r0, [r3]
   1a6f0:	movw	r3, #51028	; 0xc754
   1a6f4:	movt	r3, #7
   1a6f8:	ldr	r3, [r3]
   1a6fc:	mov	r2, #0
   1a700:	mov	r1, r3
   1a704:	bl	1ae48 <__assert_fail@plt+0x875c>
   1a708:	movw	r3, #51028	; 0xc754
   1a70c:	movt	r3, #7
   1a710:	ldr	r3, [r3]
   1a714:	mov	r0, r3
   1a718:	bl	198f0 <__assert_fail@plt+0x7204>
   1a71c:	movw	r0, #51028	; 0xc754
   1a720:	movt	r0, #7
   1a724:	bl	18d8c <__assert_fail@plt+0x66a0>
   1a728:	movw	r3, #51028	; 0xc754
   1a72c:	movt	r3, #7
   1a730:	ldr	r3, [r3]
   1a734:	mov	r1, #1
   1a738:	mov	r0, r3
   1a73c:	bl	19d88 <__assert_fail@plt+0x769c>
   1a740:	movw	r3, #51028	; 0xc754
   1a744:	movt	r3, #7
   1a748:	ldr	r3, [r3]
   1a74c:	mov	r0, r3
   1a750:	bl	18ce4 <__assert_fail@plt+0x65f8>
   1a754:	movw	r3, #51028	; 0xc754
   1a758:	movt	r3, #7
   1a75c:	ldr	r3, [r3]
   1a760:	mov	r1, #1
   1a764:	mov	r0, r3
   1a768:	bl	19d88 <__assert_fail@plt+0x769c>
   1a76c:	movw	r3, #53324	; 0xd04c
   1a770:	movt	r3, #7
   1a774:	ldr	r3, [r3, #44]	; 0x2c
   1a778:	and	r3, r3, #9
   1a77c:	cmp	r3, #0
   1a780:	beq	1a824 <__assert_fail@plt+0x8138>
   1a784:	movw	r3, #50984	; 0xc728
   1a788:	movt	r3, #7
   1a78c:	ldr	r3, [r3]
   1a790:	mov	r2, #21
   1a794:	mov	r1, #1
   1a798:	movw	r0, #24524	; 0x5fcc
   1a79c:	movt	r0, #6
   1a7a0:	bl	12224 <fwrite@plt>
   1a7a4:	movw	r3, #50984	; 0xc728
   1a7a8:	movt	r3, #7
   1a7ac:	ldr	r0, [r3]
   1a7b0:	movw	r3, #51028	; 0xc754
   1a7b4:	movt	r3, #7
   1a7b8:	ldr	r3, [r3]
   1a7bc:	mov	r2, #0
   1a7c0:	mov	r1, r3
   1a7c4:	bl	1ae48 <__assert_fail@plt+0x875c>
   1a7c8:	movw	r3, #50984	; 0xc728
   1a7cc:	movt	r3, #7
   1a7d0:	ldr	r3, [r3]
   1a7d4:	mov	r2, #24
   1a7d8:	mov	r1, #1
   1a7dc:	movw	r0, #24548	; 0x5fe4
   1a7e0:	movt	r0, #6
   1a7e4:	bl	12224 <fwrite@plt>
   1a7e8:	movw	r3, #50984	; 0xc728
   1a7ec:	movt	r3, #7
   1a7f0:	ldr	r2, [r3]
   1a7f4:	movw	r3, #51028	; 0xc754
   1a7f8:	movt	r3, #7
   1a7fc:	ldr	r3, [r3]
   1a800:	mov	r1, r3
   1a804:	mov	r0, r2
   1a808:	bl	16a30 <__assert_fail@plt+0x4344>
   1a80c:	movw	r3, #50984	; 0xc728
   1a810:	movt	r3, #7
   1a814:	ldr	r3, [r3]
   1a818:	mov	r1, r3
   1a81c:	mov	r0, #10
   1a820:	bl	1256c <fputc@plt>
   1a824:	movw	r3, #51028	; 0xc754
   1a828:	movt	r3, #7
   1a82c:	ldr	r3, [r3]
   1a830:	mov	r0, r3
   1a834:	sub	sp, fp, #4
   1a838:	ldr	fp, [sp]
   1a83c:	add	sp, sp, #4
   1a840:	pop	{pc}		; (ldr pc, [sp], #4)
   1a844:	push	{fp}		; (str fp, [sp, #-4]!)
   1a848:	add	fp, sp, #0
   1a84c:	sub	sp, sp, #20
   1a850:	str	r0, [fp, #-16]
   1a854:	ldr	r3, [fp, #-16]
   1a858:	add	r3, r3, #164	; 0xa4
   1a85c:	str	r3, [fp, #-8]
   1a860:	ldr	r3, [fp, #-8]
   1a864:	mov	r2, #0
   1a868:	str	r2, [r3, #4]
   1a86c:	ldr	r3, [fp, #-8]
   1a870:	ldr	r2, [r3, #4]
   1a874:	ldr	r3, [fp, #-8]
   1a878:	str	r2, [r3]
   1a87c:	nop	{0}
   1a880:	add	sp, fp, #0
   1a884:	pop	{fp}		; (ldr fp, [sp], #4)
   1a888:	bx	lr
   1a88c:	str	fp, [sp, #-8]!
   1a890:	str	lr, [sp, #4]
   1a894:	add	fp, sp, #4
   1a898:	sub	sp, sp, #16
   1a89c:	str	r0, [fp, #-16]
   1a8a0:	ldr	r0, [fp, #-16]
   1a8a4:	bl	1a8dc <__assert_fail@plt+0x81f0>
   1a8a8:	str	r0, [fp, #-8]
   1a8ac:	ldr	r3, [fp, #-8]
   1a8b0:	cmp	r3, #0
   1a8b4:	beq	1a8c4 <__assert_fail@plt+0x81d8>
   1a8b8:	ldr	r3, [fp, #-8]
   1a8bc:	mov	r2, #0
   1a8c0:	str	r2, [r3, #36]	; 0x24
   1a8c4:	ldr	r3, [fp, #-8]
   1a8c8:	mov	r0, r3
   1a8cc:	sub	sp, fp, #4
   1a8d0:	ldr	fp, [sp]
   1a8d4:	add	sp, sp, #4
   1a8d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a8dc:	str	r4, [sp, #-12]!
   1a8e0:	str	fp, [sp, #4]
   1a8e4:	str	lr, [sp, #8]
   1a8e8:	add	fp, sp, #8
   1a8ec:	sub	sp, sp, #12
   1a8f0:	str	r0, [fp, #-16]
   1a8f4:	ldr	r3, [fp, #-16]
   1a8f8:	ldr	r3, [r3]
   1a8fc:	cmp	r3, #0
   1a900:	bne	1a924 <__assert_fail@plt+0x8238>
   1a904:	movw	r3, #25244	; 0x629c
   1a908:	movt	r3, #6
   1a90c:	movw	r2, #1485	; 0x5cd
   1a910:	movw	r1, #23768	; 0x5cd8
   1a914:	movt	r1, #6
   1a918:	movw	r0, #24576	; 0x6000
   1a91c:	movt	r0, #6
   1a920:	bl	126ec <__assert_fail@plt>
   1a924:	ldr	r3, [fp, #-16]
   1a928:	ldr	r3, [r3]
   1a92c:	cmp	r3, #2
   1a930:	bne	1a954 <__assert_fail@plt+0x8268>
   1a934:	movw	r3, #25244	; 0x629c
   1a938:	movt	r3, #6
   1a93c:	movw	r2, #1486	; 0x5ce
   1a940:	movw	r1, #23768	; 0x5cd8
   1a944:	movt	r1, #6
   1a948:	movw	r0, #24604	; 0x601c
   1a94c:	movt	r0, #6
   1a950:	bl	126ec <__assert_fail@plt>
   1a954:	mov	r0, #176	; 0xb0
   1a958:	bl	3df0c <__assert_fail@plt+0x2b820>
   1a95c:	mov	r3, r0
   1a960:	mov	r4, r3
   1a964:	movw	r3, #51024	; 0xc750
   1a968:	movt	r3, #7
   1a96c:	ldr	r3, [r3]
   1a970:	cmp	r3, #0
   1a974:	bne	1a9a0 <__assert_fail@plt+0x82b4>
   1a978:	movw	r3, #51024	; 0xc750
   1a97c:	movt	r3, #7
   1a980:	str	r4, [r3]
   1a984:	movw	r3, #51024	; 0xc750
   1a988:	movt	r3, #7
   1a98c:	ldr	r2, [r3]
   1a990:	movw	r3, #51032	; 0xc758
   1a994:	movt	r3, #7
   1a998:	str	r2, [r3]
   1a99c:	b	1a9bc <__assert_fail@plt+0x82d0>
   1a9a0:	movw	r3, #51032	; 0xc758
   1a9a4:	movt	r3, #7
   1a9a8:	ldr	r3, [r3]
   1a9ac:	str	r4, [r3, #152]	; 0x98
   1a9b0:	movw	r3, #51032	; 0xc758
   1a9b4:	movt	r3, #7
   1a9b8:	str	r4, [r3]
   1a9bc:	movw	r3, #51032	; 0xc758
   1a9c0:	movt	r3, #7
   1a9c4:	ldr	r3, [r3]
   1a9c8:	ldr	r2, [fp, #-16]
   1a9cc:	str	r2, [r3, #172]	; 0xac
   1a9d0:	movw	r3, #51032	; 0xc758
   1a9d4:	movt	r3, #7
   1a9d8:	ldr	r3, [r3]
   1a9dc:	mov	r2, #0
   1a9e0:	str	r2, [r3, #8]
   1a9e4:	movw	r3, #51032	; 0xc758
   1a9e8:	movt	r3, #7
   1a9ec:	ldr	r3, [r3]
   1a9f0:	mov	r2, #0
   1a9f4:	str	r2, [r3, #12]
   1a9f8:	movw	r3, #51032	; 0xc758
   1a9fc:	movt	r3, #7
   1aa00:	ldr	r3, [r3]
   1aa04:	mov	r2, #1
   1aa08:	strb	r2, [r3, #18]
   1aa0c:	movw	r3, #51032	; 0xc758
   1aa10:	movt	r3, #7
   1aa14:	ldr	r3, [r3]
   1aa18:	mov	r2, #1
   1aa1c:	strb	r2, [r3, #19]
   1aa20:	movw	r3, #51032	; 0xc758
   1aa24:	movt	r3, #7
   1aa28:	ldr	r3, [r3]
   1aa2c:	mov	r2, #10
   1aa30:	str	r2, [r3, #24]
   1aa34:	movw	r3, #51032	; 0xc758
   1aa38:	movt	r3, #7
   1aa3c:	ldr	r2, [r3]
   1aa40:	movw	r3, #24644	; 0x6044
   1aa44:	movt	r3, #6
   1aa48:	str	r3, [r2, #36]	; 0x24
   1aa4c:	movw	r3, #51032	; 0xc758
   1aa50:	movt	r3, #7
   1aa54:	ldr	r2, [r3]
   1aa58:	movw	r3, #53324	; 0xd04c
   1aa5c:	movt	r3, #7
   1aa60:	ldrb	r3, [r3, #15]
   1aa64:	strb	r3, [r2, #32]
   1aa68:	movw	r3, #51032	; 0xc758
   1aa6c:	movt	r3, #7
   1aa70:	ldr	r3, [r3]
   1aa74:	mov	r2, #1065353216	; 0x3f800000
   1aa78:	str	r2, [r3, #28]
   1aa7c:	movw	r3, #51032	; 0xc758
   1aa80:	movt	r3, #7
   1aa84:	ldr	r3, [r3]
   1aa88:	mov	r0, r3
   1aa8c:	bl	1a844 <__assert_fail@plt+0x8158>
   1aa90:	movw	r3, #51032	; 0xc758
   1aa94:	movt	r3, #7
   1aa98:	ldr	r3, [r3]
   1aa9c:	mov	r0, r3
   1aaa0:	sub	sp, fp, #8
   1aaa4:	ldr	r4, [sp]
   1aaa8:	ldr	fp, [sp, #4]
   1aaac:	add	sp, sp, #8
   1aab0:	pop	{pc}		; (ldr pc, [sp], #4)
   1aab4:	str	fp, [sp, #-8]!
   1aab8:	str	lr, [sp, #4]
   1aabc:	add	fp, sp, #4
   1aac0:	sub	sp, sp, #16
   1aac4:	str	r0, [fp, #-16]
   1aac8:	str	r1, [fp, #-20]	; 0xffffffec
   1aacc:	movw	r3, #51052	; 0xc76c
   1aad0:	movt	r3, #7
   1aad4:	ldr	r3, [r3]
   1aad8:	cmp	r3, #0
   1aadc:	bne	1aafc <__assert_fail@plt+0x8410>
   1aae0:	movw	r0, #24676	; 0x6064
   1aae4:	movt	r0, #6
   1aae8:	bl	2170c <__assert_fail@plt+0xf020>
   1aaec:	mov	r2, r0
   1aaf0:	movw	r3, #51052	; 0xc76c
   1aaf4:	movt	r3, #7
   1aaf8:	str	r2, [r3]
   1aafc:	movw	r3, #51052	; 0xc76c
   1ab00:	movt	r3, #7
   1ab04:	ldr	r3, [r3]
   1ab08:	cmp	r3, #0
   1ab0c:	bne	1ab30 <__assert_fail@plt+0x8444>
   1ab10:	movw	r3, #25260	; 0x62ac
   1ab14:	movt	r3, #6
   1ab18:	movw	r2, #1528	; 0x5f8
   1ab1c:	movw	r1, #23768	; 0x5cd8
   1ab20:	movt	r1, #6
   1ab24:	movw	r0, #24680	; 0x6068
   1ab28:	movt	r0, #6
   1ab2c:	bl	126ec <__assert_fail@plt>
   1ab30:	movw	r3, #51032	; 0xc758
   1ab34:	movt	r3, #7
   1ab38:	ldr	r3, [r3]
   1ab3c:	cmp	r3, #0
   1ab40:	beq	1ac38 <__assert_fail@plt+0x854c>
   1ab44:	movw	r3, #51032	; 0xc758
   1ab48:	movt	r3, #7
   1ab4c:	ldr	r3, [r3]
   1ab50:	ldr	r3, [r3, #8]
   1ab54:	cmp	r3, #1
   1ab58:	beq	1ab90 <__assert_fail@plt+0x84a4>
   1ab5c:	cmp	r3, #0
   1ab60:	beq	1ab70 <__assert_fail@plt+0x8484>
   1ab64:	cmp	r3, #5
   1ab68:	beq	1ab90 <__assert_fail@plt+0x84a4>
   1ab6c:	b	1ac3c <__assert_fail@plt+0x8550>
   1ab70:	movw	r0, #24700	; 0x607c
   1ab74:	movt	r0, #6
   1ab78:	bl	12398 <gettext@plt>
   1ab7c:	mov	r3, r0
   1ab80:	mov	r2, r3
   1ab84:	mov	r1, #0
   1ab88:	mov	r0, #1
   1ab8c:	bl	122b4 <error@plt>
   1ab90:	movw	r3, #51052	; 0xc76c
   1ab94:	movt	r3, #7
   1ab98:	ldr	r3, [r3]
   1ab9c:	mov	r0, r3
   1aba0:	bl	1a88c <__assert_fail@plt+0x81a0>
   1aba4:	str	r0, [fp, #-8]
   1aba8:	ldr	r2, [fp, #-8]
   1abac:	movw	r3, #17168	; 0x4310
   1abb0:	movt	r3, #1
   1abb4:	str	r3, [r2]
   1abb8:	ldr	r2, [fp, #-8]
   1abbc:	movw	r3, #23764	; 0x5cd4
   1abc0:	movt	r3, #6
   1abc4:	str	r3, [r2, #4]
   1abc8:	ldr	r3, [fp, #-8]
   1abcc:	mov	r2, #3
   1abd0:	str	r2, [r3, #8]
   1abd4:	ldr	r3, [fp, #-8]
   1abd8:	mov	r2, #3
   1abdc:	str	r2, [r3, #12]
   1abe0:	ldr	r3, [fp, #-8]
   1abe4:	mov	r2, #0
   1abe8:	strb	r2, [r3, #18]
   1abec:	ldr	r3, [fp, #-8]
   1abf0:	mov	r2, #0
   1abf4:	strb	r2, [r3, #19]
   1abf8:	ldr	r3, [fp, #-8]
   1abfc:	mov	r2, #0
   1ac00:	strb	r2, [r3, #20]
   1ac04:	ldr	r3, [fp, #-8]
   1ac08:	mov	r2, #0
   1ac0c:	str	r2, [r3, #36]	; 0x24
   1ac10:	ldr	r3, [fp, #-8]
   1ac14:	mov	r2, #0
   1ac18:	str	r2, [r3, #40]	; 0x28
   1ac1c:	ldr	r3, [fp, #-8]
   1ac20:	mov	r2, #0
   1ac24:	strb	r2, [r3, #16]
   1ac28:	ldr	r3, [fp, #-8]
   1ac2c:	mov	r2, #0
   1ac30:	strb	r2, [r3, #17]
   1ac34:	b	1ac3c <__assert_fail@plt+0x8550>
   1ac38:	nop	{0}
   1ac3c:	ldr	r0, [fp, #-16]
   1ac40:	bl	1a8dc <__assert_fail@plt+0x81f0>
   1ac44:	str	r0, [fp, #-8]
   1ac48:	ldr	r3, [fp, #-8]
   1ac4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac50:	str	r2, [r3, #36]	; 0x24
   1ac54:	ldr	r3, [fp, #-8]
   1ac58:	ldr	r2, [fp, #-16]
   1ac5c:	str	r2, [r3, #172]	; 0xac
   1ac60:	ldr	r3, [fp, #-8]
   1ac64:	mov	r0, r3
   1ac68:	sub	sp, fp, #4
   1ac6c:	ldr	fp, [sp]
   1ac70:	add	sp, sp, #4
   1ac74:	pop	{pc}		; (ldr pc, [sp], #4)
   1ac78:	push	{fp}		; (str fp, [sp, #-4]!)
   1ac7c:	add	fp, sp, #0
   1ac80:	sub	sp, sp, #20
   1ac84:	str	r0, [fp, #-16]
   1ac88:	mov	r3, #11
   1ac8c:	str	r3, [fp, #-12]
   1ac90:	mov	r3, #0
   1ac94:	str	r3, [fp, #-8]
   1ac98:	b	1ace0 <__assert_fail@plt+0x85f4>
   1ac9c:	movw	r3, #50312	; 0xc488
   1aca0:	movt	r3, #7
   1aca4:	ldr	r2, [fp, #-8]
   1aca8:	ldr	r3, [r3, r2, lsl #3]
   1acac:	ldr	r2, [fp, #-16]
   1acb0:	cmp	r2, r3
   1acb4:	bne	1acd4 <__assert_fail@plt+0x85e8>
   1acb8:	movw	r2, #50312	; 0xc488
   1acbc:	movt	r2, #7
   1acc0:	ldr	r3, [fp, #-8]
   1acc4:	lsl	r3, r3, #3
   1acc8:	add	r3, r2, r3
   1accc:	ldr	r3, [r3, #4]
   1acd0:	b	1acf8 <__assert_fail@plt+0x860c>
   1acd4:	ldr	r3, [fp, #-8]
   1acd8:	add	r3, r3, #1
   1acdc:	str	r3, [fp, #-8]
   1ace0:	ldr	r2, [fp, #-8]
   1ace4:	ldr	r3, [fp, #-12]
   1ace8:	cmp	r2, r3
   1acec:	bcc	1ac9c <__assert_fail@plt+0x85b0>
   1acf0:	movw	r3, #24972	; 0x618c
   1acf4:	movt	r3, #6
   1acf8:	mov	r0, r3
   1acfc:	add	sp, fp, #0
   1ad00:	pop	{fp}		; (ldr fp, [sp], #4)
   1ad04:	bx	lr
   1ad08:	push	{fp}		; (str fp, [sp, #-4]!)
   1ad0c:	add	fp, sp, #0
   1ad10:	sub	sp, sp, #20
   1ad14:	mov	r3, r0
   1ad18:	strh	r3, [fp, #-14]
   1ad1c:	mov	r3, #0
   1ad20:	str	r3, [fp, #-8]
   1ad24:	b	1ad58 <__assert_fail@plt+0x866c>
   1ad28:	movw	r3, #50456	; 0xc518
   1ad2c:	movt	r3, #7
   1ad30:	ldr	r2, [fp, #-8]
   1ad34:	lsl	r2, r2, #3
   1ad38:	add	r3, r3, r2
   1ad3c:	ldrsh	r3, [r3]
   1ad40:	ldrsh	r2, [fp, #-14]
   1ad44:	cmp	r2, r3
   1ad48:	beq	1ad7c <__assert_fail@plt+0x8690>
   1ad4c:	ldr	r3, [fp, #-8]
   1ad50:	add	r3, r3, #1
   1ad54:	str	r3, [fp, #-8]
   1ad58:	movw	r3, #50456	; 0xc518
   1ad5c:	movt	r3, #7
   1ad60:	ldr	r2, [fp, #-8]
   1ad64:	lsl	r2, r2, #3
   1ad68:	add	r3, r3, r2
   1ad6c:	ldrsh	r3, [r3]
   1ad70:	cmn	r3, #1
   1ad74:	bne	1ad28 <__assert_fail@plt+0x863c>
   1ad78:	b	1ad80 <__assert_fail@plt+0x8694>
   1ad7c:	nop	{0}
   1ad80:	movw	r2, #50456	; 0xc518
   1ad84:	movt	r2, #7
   1ad88:	ldr	r3, [fp, #-8]
   1ad8c:	lsl	r3, r3, #3
   1ad90:	add	r3, r2, r3
   1ad94:	ldr	r3, [r3, #4]
   1ad98:	mov	r0, r3
   1ad9c:	add	sp, fp, #0
   1ada0:	pop	{fp}		; (ldr fp, [sp], #4)
   1ada4:	bx	lr
   1ada8:	push	{fp}		; (str fp, [sp, #-4]!)
   1adac:	add	fp, sp, #0
   1adb0:	sub	sp, sp, #20
   1adb4:	mov	r3, r0
   1adb8:	strh	r3, [fp, #-14]
   1adbc:	mov	r3, #0
   1adc0:	str	r3, [fp, #-8]
   1adc4:	b	1adf8 <__assert_fail@plt+0x870c>
   1adc8:	movw	r3, #50400	; 0xc4e0
   1adcc:	movt	r3, #7
   1add0:	ldr	r2, [fp, #-8]
   1add4:	lsl	r2, r2, #3
   1add8:	add	r3, r3, r2
   1addc:	ldrsh	r3, [r3]
   1ade0:	ldrsh	r2, [fp, #-14]
   1ade4:	cmp	r2, r3
   1ade8:	beq	1ae1c <__assert_fail@plt+0x8730>
   1adec:	ldr	r3, [fp, #-8]
   1adf0:	add	r3, r3, #1
   1adf4:	str	r3, [fp, #-8]
   1adf8:	movw	r3, #50400	; 0xc4e0
   1adfc:	movt	r3, #7
   1ae00:	ldr	r2, [fp, #-8]
   1ae04:	lsl	r2, r2, #3
   1ae08:	add	r3, r3, r2
   1ae0c:	ldrsh	r3, [r3]
   1ae10:	cmn	r3, #1
   1ae14:	bne	1adc8 <__assert_fail@plt+0x86dc>
   1ae18:	b	1ae20 <__assert_fail@plt+0x8734>
   1ae1c:	nop	{0}
   1ae20:	movw	r2, #50400	; 0xc4e0
   1ae24:	movt	r2, #7
   1ae28:	ldr	r3, [fp, #-8]
   1ae2c:	lsl	r3, r3, #3
   1ae30:	add	r3, r2, r3
   1ae34:	ldr	r3, [r3, #4]
   1ae38:	mov	r0, r3
   1ae3c:	add	sp, fp, #0
   1ae40:	pop	{fp}		; (ldr fp, [sp], #4)
   1ae44:	bx	lr
   1ae48:	str	r4, [sp, #-12]!
   1ae4c:	str	fp, [sp, #4]
   1ae50:	str	lr, [sp, #8]
   1ae54:	add	fp, sp, #8
   1ae58:	sub	sp, sp, #44	; 0x2c
   1ae5c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae60:	str	r1, [fp, #-28]	; 0xffffffe4
   1ae64:	str	r2, [fp, #-32]	; 0xffffffe0
   1ae68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ae6c:	cmp	r3, #0
   1ae70:	beq	1b214 <__assert_fail@plt+0x8b28>
   1ae74:	mov	r3, #0
   1ae78:	str	r3, [fp, #-16]
   1ae7c:	b	1aea4 <__assert_fail@plt+0x87b8>
   1ae80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae84:	mov	r2, #4
   1ae88:	mov	r1, #1
   1ae8c:	movw	r0, #24980	; 0x6194
   1ae90:	movt	r0, #6
   1ae94:	bl	12224 <fwrite@plt>
   1ae98:	ldr	r3, [fp, #-16]
   1ae9c:	add	r3, r3, #1
   1aea0:	str	r3, [fp, #-16]
   1aea4:	ldr	r2, [fp, #-16]
   1aea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aeac:	cmp	r2, r3
   1aeb0:	blt	1ae80 <__assert_fail@plt+0x8794>
   1aeb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aeb8:	mov	r2, #6
   1aebc:	mov	r1, #1
   1aec0:	movw	r0, #24988	; 0x619c
   1aec4:	movt	r0, #6
   1aec8:	bl	12224 <fwrite@plt>
   1aecc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aed4:	bl	18280 <__assert_fail@plt+0x5b94>
   1aed8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aedc:	ldr	r3, [r3, #8]
   1aee0:	sxth	r3, r3
   1aee4:	mov	r0, r3
   1aee8:	bl	1ad08 <__assert_fail@plt+0x861c>
   1aeec:	mov	r4, r0
   1aef0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aef4:	ldr	r3, [r3, #12]
   1aef8:	sxth	r3, r3
   1aefc:	mov	r0, r3
   1af00:	bl	1ada8 <__assert_fail@plt+0x86bc>
   1af04:	mov	r3, r0
   1af08:	mov	r2, r4
   1af0c:	movw	r1, #24996	; 0x61a4
   1af10:	movt	r1, #6
   1af14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af18:	bl	123f8 <fprintf@plt>
   1af1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af20:	ldr	r3, [r3, #24]
   1af24:	mov	r0, r3
   1af28:	bl	1ac78 <__assert_fail@plt+0x858c>
   1af2c:	mov	r2, r0
   1af30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af34:	vldr	s15, [r3, #28]
   1af38:	vcvt.f64.f32	d7, s15
   1af3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af40:	ldrb	r3, [r3, #16]
   1af44:	cmp	r3, #0
   1af48:	beq	1af58 <__assert_fail@plt+0x886c>
   1af4c:	movw	r3, #25016	; 0x61b8
   1af50:	movt	r3, #6
   1af54:	b	1af60 <__assert_fail@plt+0x8874>
   1af58:	movw	r3, #25020	; 0x61bc
   1af5c:	movt	r3, #6
   1af60:	str	r3, [sp, #8]
   1af64:	vstr	d7, [sp]
   1af68:	movw	r1, #25024	; 0x61c0
   1af6c:	movt	r1, #6
   1af70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af74:	bl	123f8 <fprintf@plt>
   1af78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af7c:	ldrb	r3, [r3, #18]
   1af80:	cmp	r3, #0
   1af84:	bne	1afa8 <__assert_fail@plt+0x88bc>
   1af88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af8c:	ldrb	r3, [r3, #19]
   1af90:	cmp	r3, #0
   1af94:	bne	1afa8 <__assert_fail@plt+0x88bc>
   1af98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af9c:	ldrb	r3, [r3, #20]
   1afa0:	cmp	r3, #0
   1afa4:	beq	1b088 <__assert_fail@plt+0x899c>
   1afa8:	mov	r3, #0
   1afac:	str	r3, [fp, #-20]	; 0xffffffec
   1afb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1afb4:	mov	r2, #6
   1afb8:	mov	r1, #1
   1afbc:	movw	r0, #25072	; 0x61f0
   1afc0:	movt	r0, #6
   1afc4:	bl	12224 <fwrite@plt>
   1afc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1afcc:	ldrb	r3, [r3, #18]
   1afd0:	cmp	r3, #0
   1afd4:	beq	1aff8 <__assert_fail@plt+0x890c>
   1afd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1afdc:	mov	r2, #4
   1afe0:	mov	r1, #1
   1afe4:	movw	r0, #25080	; 0x61f8
   1afe8:	movt	r0, #6
   1afec:	bl	12224 <fwrite@plt>
   1aff0:	mov	r3, #1
   1aff4:	str	r3, [fp, #-20]	; 0xffffffec
   1aff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1affc:	ldrb	r3, [r3, #20]
   1b000:	cmp	r3, #0
   1b004:	beq	1b044 <__assert_fail@plt+0x8958>
   1b008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b00c:	cmp	r3, #0
   1b010:	beq	1b020 <__assert_fail@plt+0x8934>
   1b014:	movw	r3, #23756	; 0x5ccc
   1b018:	movt	r3, #6
   1b01c:	b	1b028 <__assert_fail@plt+0x893c>
   1b020:	movw	r3, #25016	; 0x61b8
   1b024:	movt	r3, #6
   1b028:	mov	r2, r3
   1b02c:	movw	r1, #25088	; 0x6200
   1b030:	movt	r1, #6
   1b034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b038:	bl	123f8 <fprintf@plt>
   1b03c:	mov	r3, #1
   1b040:	str	r3, [fp, #-20]	; 0xffffffec
   1b044:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b048:	ldrb	r3, [r3, #19]
   1b04c:	cmp	r3, #0
   1b050:	beq	1b088 <__assert_fail@plt+0x899c>
   1b054:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b058:	cmp	r3, #0
   1b05c:	beq	1b06c <__assert_fail@plt+0x8980>
   1b060:	movw	r3, #23756	; 0x5ccc
   1b064:	movt	r3, #6
   1b068:	b	1b074 <__assert_fail@plt+0x8988>
   1b06c:	movw	r3, #25016	; 0x61b8
   1b070:	movt	r3, #6
   1b074:	mov	r2, r3
   1b078:	movw	r1, #25096	; 0x6208
   1b07c:	movt	r1, #6
   1b080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b084:	bl	123f8 <fprintf@plt>
   1b088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b08c:	mov	r0, #10
   1b090:	bl	1256c <fputc@plt>
   1b094:	mov	r3, #0
   1b098:	str	r3, [fp, #-16]
   1b09c:	b	1b0c4 <__assert_fail@plt+0x89d8>
   1b0a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0a4:	mov	r2, #4
   1b0a8:	mov	r1, #1
   1b0ac:	movw	r0, #24980	; 0x6194
   1b0b0:	movt	r0, #6
   1b0b4:	bl	12224 <fwrite@plt>
   1b0b8:	ldr	r3, [fp, #-16]
   1b0bc:	add	r3, r3, #1
   1b0c0:	str	r3, [fp, #-16]
   1b0c4:	ldr	r2, [fp, #-16]
   1b0c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b0cc:	cmp	r2, r3
   1b0d0:	blt	1b0a0 <__assert_fail@plt+0x89b4>
   1b0d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b0d8:	ldr	r3, [r3, #156]	; 0x9c
   1b0dc:	cmp	r3, #0
   1b0e0:	bne	1b110 <__assert_fail@plt+0x8a24>
   1b0e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b0e8:	ldr	r3, [r3, #160]	; 0xa0
   1b0ec:	cmp	r3, #0
   1b0f0:	bne	1b110 <__assert_fail@plt+0x8a24>
   1b0f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0f8:	mov	r2, #13
   1b0fc:	mov	r1, #1
   1b100:	movw	r0, #25104	; 0x6210
   1b104:	movt	r0, #6
   1b108:	bl	12224 <fwrite@plt>
   1b10c:	b	1b218 <__assert_fail@plt+0x8b2c>
   1b110:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b114:	ldr	r3, [r3, #156]	; 0x9c
   1b118:	cmp	r3, #0
   1b11c:	beq	1b158 <__assert_fail@plt+0x8a6c>
   1b120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b124:	mov	r2, #6
   1b128:	mov	r1, #1
   1b12c:	movw	r0, #25120	; 0x6220
   1b130:	movt	r0, #6
   1b134:	bl	12224 <fwrite@plt>
   1b138:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b13c:	ldr	r1, [r3, #156]	; 0x9c
   1b140:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b144:	add	r3, r3, #1
   1b148:	mov	r2, r3
   1b14c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b150:	bl	1ae48 <__assert_fail@plt+0x875c>
   1b154:	b	1b170 <__assert_fail@plt+0x8a84>
   1b158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b15c:	mov	r2, #9
   1b160:	mov	r1, #1
   1b164:	movw	r0, #25128	; 0x6228
   1b168:	movt	r0, #6
   1b16c:	bl	12224 <fwrite@plt>
   1b170:	mov	r3, #0
   1b174:	str	r3, [fp, #-16]
   1b178:	b	1b1a0 <__assert_fail@plt+0x8ab4>
   1b17c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b180:	mov	r2, #4
   1b184:	mov	r1, #1
   1b188:	movw	r0, #24980	; 0x6194
   1b18c:	movt	r0, #6
   1b190:	bl	12224 <fwrite@plt>
   1b194:	ldr	r3, [fp, #-16]
   1b198:	add	r3, r3, #1
   1b19c:	str	r3, [fp, #-16]
   1b1a0:	ldr	r2, [fp, #-16]
   1b1a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b1a8:	cmp	r2, r3
   1b1ac:	blt	1b17c <__assert_fail@plt+0x8a90>
   1b1b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b1b4:	ldr	r3, [r3, #160]	; 0xa0
   1b1b8:	cmp	r3, #0
   1b1bc:	beq	1b1f8 <__assert_fail@plt+0x8b0c>
   1b1c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b1c4:	mov	r2, #7
   1b1c8:	mov	r1, #1
   1b1cc:	movw	r0, #25140	; 0x6234
   1b1d0:	movt	r0, #6
   1b1d4:	bl	12224 <fwrite@plt>
   1b1d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b1dc:	ldr	r1, [r3, #160]	; 0xa0
   1b1e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b1e4:	add	r3, r3, #1
   1b1e8:	mov	r2, r3
   1b1ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1f0:	bl	1ae48 <__assert_fail@plt+0x875c>
   1b1f4:	b	1b218 <__assert_fail@plt+0x8b2c>
   1b1f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b1fc:	mov	r2, #10
   1b200:	mov	r1, #1
   1b204:	movw	r0, #25148	; 0x623c
   1b208:	movt	r0, #6
   1b20c:	bl	12224 <fwrite@plt>
   1b210:	b	1b218 <__assert_fail@plt+0x8b2c>
   1b214:	nop	{0}
   1b218:	sub	sp, fp, #8
   1b21c:	ldr	r4, [sp]
   1b220:	ldr	fp, [sp, #4]
   1b224:	add	sp, sp, #8
   1b228:	pop	{pc}		; (ldr pc, [sp], #4)
   1b22c:	str	fp, [sp, #-8]!
   1b230:	str	lr, [sp, #4]
   1b234:	add	fp, sp, #4
   1b238:	sub	sp, sp, #24
   1b23c:	str	r0, [fp, #-16]
   1b240:	str	r1, [fp, #-20]	; 0xffffffec
   1b244:	str	r2, [fp, #-24]	; 0xffffffe8
   1b248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b24c:	ldr	r0, [fp, #-16]
   1b250:	bl	1aab4 <__assert_fail@plt+0x83c8>
   1b254:	str	r0, [fp, #-8]
   1b258:	ldr	r3, [fp, #-8]
   1b25c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b260:	str	r2, [r3]
   1b264:	ldr	r3, [fp, #-16]
   1b268:	ldr	r2, [r3, #4]
   1b26c:	ldr	r3, [fp, #-8]
   1b270:	str	r2, [r3, #4]
   1b274:	ldr	r3, [fp, #-8]
   1b278:	mov	r2, #0
   1b27c:	str	r2, [r3, #40]	; 0x28
   1b280:	ldr	r3, [fp, #-8]
   1b284:	mov	r2, #1
   1b288:	str	r2, [r3, #8]
   1b28c:	ldr	r3, [fp, #-8]
   1b290:	mov	r2, #0
   1b294:	str	r2, [r3, #12]
   1b298:	ldr	r3, [fp, #-8]
   1b29c:	mov	r0, r3
   1b2a0:	sub	sp, fp, #4
   1b2a4:	ldr	fp, [sp]
   1b2a8:	add	sp, sp, #4
   1b2ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2b0:	str	fp, [sp, #-8]!
   1b2b4:	str	lr, [sp, #4]
   1b2b8:	add	fp, sp, #4
   1b2bc:	sub	sp, sp, #8
   1b2c0:	str	r0, [fp, #-8]
   1b2c4:	str	r1, [fp, #-12]
   1b2c8:	ldr	r3, [fp, #-8]
   1b2cc:	ldr	r3, [r3, #12]
   1b2d0:	cmp	r3, #0
   1b2d4:	bne	1b2f8 <__assert_fail@plt+0x8c0c>
   1b2d8:	movw	r3, #28608	; 0x6fc0
   1b2dc:	movt	r3, #6
   1b2e0:	mov	r2, #123	; 0x7b
   1b2e4:	movw	r1, #25772	; 0x64ac
   1b2e8:	movt	r1, #6
   1b2ec:	movw	r0, #25780	; 0x64b4
   1b2f0:	movt	r0, #6
   1b2f4:	bl	126ec <__assert_fail@plt>
   1b2f8:	ldr	r3, [fp, #-8]
   1b2fc:	ldr	r3, [r3, #12]
   1b300:	ldr	r2, [fp, #-12]
   1b304:	mov	r1, r3
   1b308:	ldr	r0, [fp, #-8]
   1b30c:	bl	1b22c <__assert_fail@plt+0x8b40>
   1b310:	mov	r3, r0
   1b314:	mov	r0, r3
   1b318:	sub	sp, fp, #4
   1b31c:	ldr	fp, [sp]
   1b320:	add	sp, sp, #4
   1b324:	pop	{pc}		; (ldr pc, [sp], #4)
   1b328:	str	fp, [sp, #-8]!
   1b32c:	str	lr, [sp, #4]
   1b330:	add	fp, sp, #4
   1b334:	sub	sp, sp, #8
   1b338:	str	r0, [fp, #-8]
   1b33c:	mov	r1, #0
   1b340:	ldr	r0, [fp, #-8]
   1b344:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   1b348:	mov	r3, r0
   1b34c:	mov	r0, r3
   1b350:	sub	sp, fp, #4
   1b354:	ldr	fp, [sp]
   1b358:	add	sp, sp, #4
   1b35c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b360:	str	fp, [sp, #-8]!
   1b364:	str	lr, [sp, #4]
   1b368:	add	fp, sp, #4
   1b36c:	sub	sp, sp, #16
   1b370:	str	r0, [fp, #-16]
   1b374:	movw	r0, #25808	; 0x64d0
   1b378:	movt	r0, #6
   1b37c:	bl	12398 <gettext@plt>
   1b380:	mov	r2, r0
   1b384:	movw	r3, #50996	; 0xc734
   1b388:	movt	r3, #7
   1b38c:	ldr	r3, [r3]
   1b390:	mov	r1, r3
   1b394:	mov	r0, r2
   1b398:	bl	12680 <fputs@plt>
   1b39c:	ldr	r3, [fp, #-16]
   1b3a0:	cmp	r3, #0
   1b3a4:	beq	1b438 <__assert_fail@plt+0x8d4c>
   1b3a8:	mov	r3, #0
   1b3ac:	str	r3, [fp, #-8]
   1b3b0:	b	1b428 <__assert_fail@plt+0x8d3c>
   1b3b4:	movw	r3, #50996	; 0xc734
   1b3b8:	movt	r3, #7
   1b3bc:	ldr	r0, [r3]
   1b3c0:	movw	r2, #50512	; 0xc550
   1b3c4:	movt	r2, #7
   1b3c8:	ldr	r1, [fp, #-8]
   1b3cc:	mov	r3, r1
   1b3d0:	lsl	r3, r3, #1
   1b3d4:	add	r3, r3, r1
   1b3d8:	lsl	r3, r3, #2
   1b3dc:	add	r3, r2, r3
   1b3e0:	ldr	ip, [r3]
   1b3e4:	movw	r2, #50512	; 0xc550
   1b3e8:	movt	r2, #7
   1b3ec:	ldr	r1, [fp, #-8]
   1b3f0:	mov	r3, r1
   1b3f4:	lsl	r3, r3, #1
   1b3f8:	add	r3, r3, r1
   1b3fc:	lsl	r3, r3, #2
   1b400:	add	r3, r2, r3
   1b404:	add	r3, r3, #8
   1b408:	ldr	r3, [r3]
   1b40c:	mov	r2, ip
   1b410:	movw	r1, #25836	; 0x64ec
   1b414:	movt	r1, #6
   1b418:	bl	123f8 <fprintf@plt>
   1b41c:	ldr	r3, [fp, #-8]
   1b420:	add	r3, r3, #1
   1b424:	str	r3, [fp, #-8]
   1b428:	ldr	r3, [fp, #-8]
   1b42c:	cmp	r3, #8
   1b430:	bls	1b3b4 <__assert_fail@plt+0x8cc8>
   1b434:	b	1b4bc <__assert_fail@plt+0x8dd0>
   1b438:	mov	r3, #0
   1b43c:	str	r3, [fp, #-8]
   1b440:	b	1b4b0 <__assert_fail@plt+0x8dc4>
   1b444:	movw	r3, #50996	; 0xc734
   1b448:	movt	r3, #7
   1b44c:	ldr	ip, [r3]
   1b450:	ldr	r3, [fp, #-8]
   1b454:	cmp	r3, #0
   1b458:	beq	1b468 <__assert_fail@plt+0x8d7c>
   1b45c:	movw	r2, #25848	; 0x64f8
   1b460:	movt	r2, #6
   1b464:	b	1b470 <__assert_fail@plt+0x8d84>
   1b468:	movw	r2, #25852	; 0x64fc
   1b46c:	movt	r2, #6
   1b470:	movw	r1, #50512	; 0xc550
   1b474:	movt	r1, #7
   1b478:	ldr	r0, [fp, #-8]
   1b47c:	mov	r3, r0
   1b480:	lsl	r3, r3, #1
   1b484:	add	r3, r3, r0
   1b488:	lsl	r3, r3, #2
   1b48c:	add	r3, r1, r3
   1b490:	ldr	r3, [r3]
   1b494:	movw	r1, #25856	; 0x6500
   1b498:	movt	r1, #6
   1b49c:	mov	r0, ip
   1b4a0:	bl	123f8 <fprintf@plt>
   1b4a4:	ldr	r3, [fp, #-8]
   1b4a8:	add	r3, r3, #1
   1b4ac:	str	r3, [fp, #-8]
   1b4b0:	ldr	r3, [fp, #-8]
   1b4b4:	cmp	r3, #8
   1b4b8:	bls	1b444 <__assert_fail@plt+0x8d58>
   1b4bc:	nop	{0}
   1b4c0:	sub	sp, fp, #4
   1b4c4:	ldr	fp, [sp]
   1b4c8:	add	sp, sp, #4
   1b4cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4d0:	str	r4, [sp, #-12]!
   1b4d4:	str	fp, [sp, #4]
   1b4d8:	str	lr, [sp, #8]
   1b4dc:	add	fp, sp, #8
   1b4e0:	sub	sp, sp, #12
   1b4e4:	str	r0, [fp, #-16]
   1b4e8:	ldr	r3, [fp, #-16]
   1b4ec:	cmp	r3, #0
   1b4f0:	beq	1b530 <__assert_fail@plt+0x8e44>
   1b4f4:	movw	r3, #50984	; 0xc728
   1b4f8:	movt	r3, #7
   1b4fc:	ldr	r4, [r3]
   1b500:	movw	r0, #25864	; 0x6508
   1b504:	movt	r0, #6
   1b508:	bl	12398 <gettext@plt>
   1b50c:	mov	r1, r0
   1b510:	movw	r3, #52964	; 0xcee4
   1b514:	movt	r3, #7
   1b518:	ldr	r3, [r3]
   1b51c:	mov	r2, r3
   1b520:	mov	r0, r4
   1b524:	bl	123f8 <fprintf@plt>
   1b528:	ldr	r0, [fp, #-16]
   1b52c:	bl	12380 <exit@plt>
   1b530:	movw	r3, #50996	; 0xc734
   1b534:	movt	r3, #7
   1b538:	ldr	r4, [r3]
   1b53c:	movw	r0, #25904	; 0x6530
   1b540:	movt	r0, #6
   1b544:	bl	12398 <gettext@plt>
   1b548:	mov	r1, r0
   1b54c:	movw	r3, #52964	; 0xcee4
   1b550:	movt	r3, #7
   1b554:	ldr	r3, [r3]
   1b558:	mov	r2, r3
   1b55c:	mov	r0, r4
   1b560:	bl	123f8 <fprintf@plt>
   1b564:	movw	r0, #25980	; 0x657c
   1b568:	movt	r0, #6
   1b56c:	bl	12398 <gettext@plt>
   1b570:	mov	r2, r0
   1b574:	movw	r3, #50996	; 0xc734
   1b578:	movt	r3, #7
   1b57c:	ldr	r3, [r3]
   1b580:	mov	r1, r3
   1b584:	mov	r0, r2
   1b588:	bl	12680 <fputs@plt>
   1b58c:	movw	r0, #26120	; 0x6608
   1b590:	movt	r0, #6
   1b594:	bl	12398 <gettext@plt>
   1b598:	mov	r2, r0
   1b59c:	movw	r3, #50996	; 0xc734
   1b5a0:	movt	r3, #7
   1b5a4:	ldr	r3, [r3]
   1b5a8:	mov	r1, r3
   1b5ac:	mov	r0, r2
   1b5b0:	bl	12680 <fputs@plt>
   1b5b4:	movw	r0, #26328	; 0x66d8
   1b5b8:	movt	r0, #6
   1b5bc:	bl	12398 <gettext@plt>
   1b5c0:	mov	r2, r0
   1b5c4:	movw	r3, #50996	; 0xc734
   1b5c8:	movt	r3, #7
   1b5cc:	ldr	r3, [r3]
   1b5d0:	mov	r1, r3
   1b5d4:	mov	r0, r2
   1b5d8:	bl	12680 <fputs@plt>
   1b5dc:	movw	r0, #26416	; 0x6730
   1b5e0:	movt	r0, #6
   1b5e4:	bl	12398 <gettext@plt>
   1b5e8:	mov	r2, r0
   1b5ec:	movw	r3, #50996	; 0xc734
   1b5f0:	movt	r3, #7
   1b5f4:	ldr	r3, [r3]
   1b5f8:	mov	r1, r3
   1b5fc:	mov	r0, r2
   1b600:	bl	12680 <fputs@plt>
   1b604:	movw	r0, #26624	; 0x6800
   1b608:	movt	r0, #6
   1b60c:	bl	12398 <gettext@plt>
   1b610:	mov	r2, r0
   1b614:	movw	r3, #50996	; 0xc734
   1b618:	movt	r3, #7
   1b61c:	ldr	r3, [r3]
   1b620:	mov	r1, r3
   1b624:	mov	r0, r2
   1b628:	bl	12680 <fputs@plt>
   1b62c:	movw	r0, #27168	; 0x6a20
   1b630:	movt	r0, #6
   1b634:	bl	12398 <gettext@plt>
   1b638:	mov	r2, r0
   1b63c:	movw	r3, #50996	; 0xc734
   1b640:	movt	r3, #7
   1b644:	ldr	r3, [r3]
   1b648:	mov	r1, r3
   1b64c:	mov	r0, r2
   1b650:	bl	12680 <fputs@plt>
   1b654:	movw	r0, #27424	; 0x6b20
   1b658:	movt	r0, #6
   1b65c:	bl	12398 <gettext@plt>
   1b660:	mov	r2, r0
   1b664:	movw	r3, #50996	; 0xc734
   1b668:	movt	r3, #7
   1b66c:	ldr	r3, [r3]
   1b670:	mov	r1, r3
   1b674:	mov	r0, r2
   1b678:	bl	12680 <fputs@plt>
   1b67c:	movw	r0, #27448	; 0x6b38
   1b680:	movt	r0, #6
   1b684:	bl	12398 <gettext@plt>
   1b688:	mov	r2, r0
   1b68c:	movw	r3, #50996	; 0xc734
   1b690:	movt	r3, #7
   1b694:	ldr	r3, [r3]
   1b698:	mov	r1, r3
   1b69c:	mov	r0, r2
   1b6a0:	bl	12680 <fputs@plt>
   1b6a4:	movw	r0, #27508	; 0x6b74
   1b6a8:	movt	r0, #6
   1b6ac:	bl	12398 <gettext@plt>
   1b6b0:	mov	r2, r0
   1b6b4:	movw	r3, #50996	; 0xc734
   1b6b8:	movt	r3, #7
   1b6bc:	ldr	r3, [r3]
   1b6c0:	mov	r1, r3
   1b6c4:	mov	r0, r2
   1b6c8:	bl	12680 <fputs@plt>
   1b6cc:	mov	r0, #0
   1b6d0:	bl	1b360 <__assert_fail@plt+0x8c74>
   1b6d4:	movw	r0, #27580	; 0x6bbc
   1b6d8:	movt	r0, #6
   1b6dc:	bl	12398 <gettext@plt>
   1b6e0:	mov	r2, r0
   1b6e4:	movw	r3, #50996	; 0xc734
   1b6e8:	movt	r3, #7
   1b6ec:	ldr	r3, [r3]
   1b6f0:	mov	r1, r3
   1b6f4:	mov	r0, r2
   1b6f8:	bl	12680 <fputs@plt>
   1b6fc:	movw	r3, #50996	; 0xc734
   1b700:	movt	r3, #7
   1b704:	ldr	r2, [r3]
   1b708:	movw	r3, #52964	; 0xcee4
   1b70c:	movt	r3, #7
   1b710:	ldr	r3, [r3]
   1b714:	mov	r1, r3
   1b718:	mov	r0, r2
   1b71c:	bl	2b1d8 <__assert_fail@plt+0x18aec>
   1b720:	ldr	r0, [fp, #-16]
   1b724:	bl	12380 <exit@plt>
   1b728:	push	{fp}		; (str fp, [sp, #-4]!)
   1b72c:	add	fp, sp, #0
   1b730:	sub	sp, sp, #12
   1b734:	str	r0, [fp, #-8]
   1b738:	nop	{0}
   1b73c:	add	sp, fp, #0
   1b740:	pop	{fp}		; (ldr fp, [sp], #4)
   1b744:	bx	lr
   1b748:	str	r4, [sp, #-12]!
   1b74c:	str	fp, [sp, #4]
   1b750:	str	lr, [sp, #8]
   1b754:	add	fp, sp, #8
   1b758:	sub	sp, sp, #20
   1b75c:	str	r0, [fp, #-16]
   1b760:	str	r1, [fp, #-20]	; 0xffffffec
   1b764:	str	r2, [fp, #-24]	; 0xffffffe8
   1b768:	movw	r3, #53280	; 0xd020
   1b76c:	movt	r3, #7
   1b770:	ldrb	r3, [r3, #4]
   1b774:	eor	r3, r3, #1
   1b778:	uxtb	r3, r3
   1b77c:	cmp	r3, #0
   1b780:	beq	1b864 <__assert_fail@plt+0x9178>
   1b784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b788:	bl	1b728 <__assert_fail@plt+0x903c>
   1b78c:	movw	r3, #53324	; 0xd04c
   1b790:	movt	r3, #7
   1b794:	ldr	r3, [r3, #52]	; 0x34
   1b798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b79c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b7a0:	blx	r3
   1b7a4:	mov	r3, r0
   1b7a8:	cmp	r3, #0
   1b7ac:	bne	1b814 <__assert_fail@plt+0x9128>
   1b7b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b7b4:	ldr	r3, [r3, #16]
   1b7b8:	cmp	r3, #0
   1b7bc:	bne	1b864 <__assert_fail@plt+0x9178>
   1b7c0:	movw	r0, #27648	; 0x6c00
   1b7c4:	movt	r0, #6
   1b7c8:	bl	12398 <gettext@plt>
   1b7cc:	mov	r4, r0
   1b7d0:	movw	r3, #53324	; 0xd04c
   1b7d4:	movt	r3, #7
   1b7d8:	ldr	r3, [r3, #72]	; 0x48
   1b7dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b7e0:	mov	r1, r3
   1b7e4:	mov	r0, #0
   1b7e8:	bl	3bc98 <__assert_fail@plt+0x295ac>
   1b7ec:	mov	r3, r0
   1b7f0:	mov	r2, r4
   1b7f4:	mov	r1, #0
   1b7f8:	mov	r0, #0
   1b7fc:	bl	122b4 <error@plt>
   1b800:	movw	r3, #53280	; 0xd020
   1b804:	movt	r3, #7
   1b808:	mov	r2, #1
   1b80c:	str	r2, [r3, #28]
   1b810:	b	1b864 <__assert_fail@plt+0x9178>
   1b814:	movw	r3, #53324	; 0xd04c
   1b818:	movt	r3, #7
   1b81c:	ldrb	r3, [r3, #14]
   1b820:	eor	r3, r3, #1
   1b824:	uxtb	r3, r3
   1b828:	cmp	r3, #0
   1b82c:	bne	1b844 <__assert_fail@plt+0x9158>
   1b830:	bl	12404 <__errno_location@plt>
   1b834:	mov	r3, r0
   1b838:	ldr	r3, [r3]
   1b83c:	cmp	r3, #2
   1b840:	beq	1b85c <__assert_fail@plt+0x9170>
   1b844:	bl	12404 <__errno_location@plt>
   1b848:	mov	r3, r0
   1b84c:	ldr	r3, [r3]
   1b850:	ldr	r1, [fp, #-16]
   1b854:	mov	r0, r3
   1b858:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   1b85c:	mvn	r3, #0
   1b860:	b	1b89c <__assert_fail@plt+0x91b0>
   1b864:	movw	r3, #53280	; 0xd020
   1b868:	movt	r3, #7
   1b86c:	mov	r2, #1
   1b870:	strb	r2, [r3, #4]
   1b874:	movw	r3, #53280	; 0xd020
   1b878:	movt	r3, #7
   1b87c:	mov	r2, #1
   1b880:	strb	r2, [r3, #5]
   1b884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b888:	ldr	r2, [r3, #16]
   1b88c:	movw	r3, #53280	; 0xd020
   1b890:	movt	r3, #7
   1b894:	str	r2, [r3, #8]
   1b898:	mov	r3, #0
   1b89c:	mov	r0, r3
   1b8a0:	sub	sp, fp, #8
   1b8a4:	ldr	r4, [sp]
   1b8a8:	ldr	fp, [sp, #4]
   1b8ac:	add	sp, sp, #8
   1b8b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8b4:	str	fp, [sp, #-8]!
   1b8b8:	str	lr, [sp, #4]
   1b8bc:	add	fp, sp, #4
   1b8c0:	sub	sp, sp, #24
   1b8c4:	str	r0, [fp, #-16]
   1b8c8:	str	r1, [fp, #-20]	; 0xffffffec
   1b8cc:	str	r2, [fp, #-24]	; 0xffffffe8
   1b8d0:	mov	r3, #0
   1b8d4:	strb	r3, [fp, #-5]
   1b8d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8dc:	ldrb	r3, [r3, #18]
   1b8e0:	cmp	r3, #0
   1b8e4:	beq	1b910 <__assert_fail@plt+0x9224>
   1b8e8:	movw	r3, #53280	; 0xd020
   1b8ec:	movt	r3, #7
   1b8f0:	ldrb	r3, [r3, #4]
   1b8f4:	eor	r3, r3, #1
   1b8f8:	uxtb	r3, r3
   1b8fc:	cmp	r3, #0
   1b900:	beq	1b910 <__assert_fail@plt+0x9224>
   1b904:	mov	r3, #1
   1b908:	strb	r3, [fp, #-5]
   1b90c:	b	1b9ac <__assert_fail@plt+0x92c0>
   1b910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b914:	ldrb	r3, [r3, #19]
   1b918:	cmp	r3, #0
   1b91c:	beq	1b948 <__assert_fail@plt+0x925c>
   1b920:	movw	r3, #53280	; 0xd020
   1b924:	movt	r3, #7
   1b928:	ldrb	r3, [r3, #5]
   1b92c:	eor	r3, r3, #1
   1b930:	uxtb	r3, r3
   1b934:	cmp	r3, #0
   1b938:	beq	1b948 <__assert_fail@plt+0x925c>
   1b93c:	mov	r3, #1
   1b940:	strb	r3, [fp, #-5]
   1b944:	b	1b9ac <__assert_fail@plt+0x92c0>
   1b948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b94c:	ldrb	r3, [r3, #20]
   1b950:	cmp	r3, #0
   1b954:	beq	1b9ac <__assert_fail@plt+0x92c0>
   1b958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b95c:	ldrd	r2, [r3, #96]	; 0x60
   1b960:	orrs	r3, r2, r3
   1b964:	bne	1b974 <__assert_fail@plt+0x9288>
   1b968:	mov	r3, #1
   1b96c:	strb	r3, [fp, #-5]
   1b970:	b	1b9ac <__assert_fail@plt+0x92c0>
   1b974:	movw	r3, #53280	; 0xd020
   1b978:	movt	r3, #7
   1b97c:	ldrb	r3, [r3, #5]
   1b980:	eor	r3, r3, #1
   1b984:	uxtb	r3, r3
   1b988:	cmp	r3, #0
   1b98c:	bne	1b9a4 <__assert_fail@plt+0x92b8>
   1b990:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b994:	ldr	r3, [r3, #16]
   1b998:	and	r3, r3, #61440	; 0xf000
   1b99c:	cmp	r3, #16384	; 0x4000
   1b9a0:	bne	1b9ac <__assert_fail@plt+0x92c0>
   1b9a4:	mov	r3, #1
   1b9a8:	strb	r3, [fp, #-5]
   1b9ac:	ldrb	r3, [fp, #-5]
   1b9b0:	cmp	r3, #0
   1b9b4:	beq	1b9e8 <__assert_fail@plt+0x92fc>
   1b9b8:	movw	r3, #53280	; 0xd020
   1b9bc:	movt	r3, #7
   1b9c0:	ldr	r3, [r3, #12]
   1b9c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b9c8:	mov	r1, r3
   1b9cc:	ldr	r0, [fp, #-16]
   1b9d0:	bl	1b748 <__assert_fail@plt+0x905c>
   1b9d4:	mov	r3, r0
   1b9d8:	cmp	r3, #0
   1b9dc:	beq	1b9e8 <__assert_fail@plt+0x92fc>
   1b9e0:	mvn	r3, #0
   1b9e4:	b	1b9ec <__assert_fail@plt+0x9300>
   1b9e8:	mov	r3, #0
   1b9ec:	mov	r0, r3
   1b9f0:	sub	sp, fp, #4
   1b9f4:	ldr	fp, [sp]
   1b9f8:	add	sp, sp, #4
   1b9fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba00:	str	fp, [sp, #-8]!
   1ba04:	str	lr, [sp, #4]
   1ba08:	add	fp, sp, #4
   1ba0c:	sub	sp, sp, #400	; 0x190
   1ba10:	sub	r3, fp, #404	; 0x194
   1ba14:	mov	r0, r3
   1ba18:	bl	12164 <uname@plt>
   1ba1c:	mov	r3, r0
   1ba20:	cmp	r3, #0
   1ba24:	bne	1bad4 <__assert_fail@plt+0x93e8>
   1ba28:	movw	r3, #9772	; 0x262c
   1ba2c:	movt	r3, #1
   1ba30:	str	r3, [fp, #-8]
   1ba34:	sub	r3, fp, #404	; 0x194
   1ba38:	add	r2, r3, #130	; 0x82
   1ba3c:	ldr	r3, [fp, #-8]
   1ba40:	mov	r0, r2
   1ba44:	blx	r3
   1ba48:	vmov.f64	d7, d0
   1ba4c:	vcvt.f32.f64	s15, d7
   1ba50:	vstr	s15, [fp, #-12]
   1ba54:	sub	r3, fp, #404	; 0x194
   1ba58:	mov	r1, r3
   1ba5c:	movw	r0, #27692	; 0x6c2c
   1ba60:	movt	r0, #6
   1ba64:	bl	11ffc <strcmp@plt>
   1ba68:	mov	r3, r0
   1ba6c:	cmp	r3, #0
   1ba70:	bne	1ba94 <__assert_fail@plt+0x93a8>
   1ba74:	vldr	s15, [fp, #-12]
   1ba78:	vldr	s14, [pc, #108]	; 1baec <__assert_fail@plt+0x9400>
   1ba7c:	vcmpe.f32	s15, s14
   1ba80:	vmrs	APSR_nzcv, fpscr
   1ba84:	movge	r3, #1
   1ba88:	movlt	r3, #0
   1ba8c:	uxtb	r3, r3
   1ba90:	b	1bad8 <__assert_fail@plt+0x93ec>
   1ba94:	sub	r3, fp, #404	; 0x194
   1ba98:	mov	r1, r3
   1ba9c:	movw	r0, #27700	; 0x6c34
   1baa0:	movt	r0, #6
   1baa4:	bl	11ffc <strcmp@plt>
   1baa8:	mov	r3, r0
   1baac:	cmp	r3, #0
   1bab0:	bne	1bad4 <__assert_fail@plt+0x93e8>
   1bab4:	vldr	s15, [fp, #-12]
   1bab8:	vldr	s14, [pc, #48]	; 1baf0 <__assert_fail@plt+0x9404>
   1babc:	vcmpe.f32	s15, s14
   1bac0:	vmrs	APSR_nzcv, fpscr
   1bac4:	movge	r3, #1
   1bac8:	movlt	r3, #0
   1bacc:	uxtb	r3, r3
   1bad0:	b	1bad8 <__assert_fail@plt+0x93ec>
   1bad4:	mov	r3, #1
   1bad8:	mov	r0, r3
   1badc:	sub	sp, fp, #4
   1bae0:	ldr	fp, [sp]
   1bae4:	add	sp, sp, #4
   1bae8:	pop	{pc}		; (ldr pc, [sp], #4)
   1baec:	andmi	ip, ip, sp, asr #25
   1baf0:	submi	r6, r6, r6, ror #12
   1baf4:	str	fp, [sp, #-8]!
   1baf8:	str	lr, [sp, #4]
   1bafc:	add	fp, sp, #4
   1bb00:	sub	sp, sp, #16
   1bb04:	str	r0, [fp, #-16]
   1bb08:	ldr	r3, [fp, #-16]
   1bb0c:	str	r3, [fp, #-8]
   1bb10:	ldr	r3, [fp, #-8]
   1bb14:	add	r2, r3, #4
   1bb18:	ldr	r3, [fp, #-8]
   1bb1c:	add	r3, r3, #48	; 0x30
   1bb20:	mov	r1, r3
   1bb24:	mov	r0, r2
   1bb28:	bl	27c20 <__assert_fail@plt+0x15534>
   1bb2c:	mov	r3, #0
   1bb30:	mov	r0, r3
   1bb34:	sub	sp, fp, #4
   1bb38:	ldr	fp, [sp]
   1bb3c:	add	sp, sp, #4
   1bb40:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb44:	str	fp, [sp, #-8]!
   1bb48:	str	lr, [sp, #4]
   1bb4c:	add	fp, sp, #4
   1bb50:	sub	sp, sp, #8
   1bb54:	str	r0, [fp, #-8]
   1bb58:	ldr	r3, [fp, #-8]
   1bb5c:	ldr	r3, [r3, #104]	; 0x68
   1bb60:	ldr	r2, [fp, #-8]
   1bb64:	movw	r1, #47860	; 0xbaf4
   1bb68:	movt	r1, #1
   1bb6c:	mov	r0, r3
   1bb70:	bl	28804 <__assert_fail@plt+0x16118>
   1bb74:	ldr	r3, [fp, #-8]
   1bb78:	ldr	r2, [r3, #104]	; 0x68
   1bb7c:	movw	r3, #51020	; 0xc74c
   1bb80:	movt	r3, #7
   1bb84:	ldr	r3, [r3]
   1bb88:	cmp	r2, r3
   1bb8c:	beq	1bbbc <__assert_fail@plt+0x94d0>
   1bb90:	ldr	r3, [fp, #-8]
   1bb94:	ldr	r3, [r3, #104]	; 0x68
   1bb98:	mov	r0, r3
   1bb9c:	bl	3c364 <__assert_fail@plt+0x29c78>
   1bba0:	ldr	r3, [fp, #-8]
   1bba4:	ldr	r3, [r3, #104]	; 0x68
   1bba8:	mov	r0, r3
   1bbac:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1bbb0:	ldr	r3, [fp, #-8]
   1bbb4:	mov	r2, #0
   1bbb8:	str	r2, [r3, #104]	; 0x68
   1bbbc:	nop	{0}
   1bbc0:	sub	sp, fp, #4
   1bbc4:	ldr	fp, [sp]
   1bbc8:	add	sp, sp, #4
   1bbcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1bbd0:	str	fp, [sp, #-8]!
   1bbd4:	str	lr, [sp, #4]
   1bbd8:	add	fp, sp, #4
   1bbdc:	sub	sp, sp, #16
   1bbe0:	str	r0, [fp, #-16]
   1bbe4:	ldr	r3, [fp, #-16]
   1bbe8:	cmp	r3, #0
   1bbec:	beq	1bcac <__assert_fail@plt+0x95c0>
   1bbf0:	movw	r3, #53280	; 0xd020
   1bbf4:	movt	r3, #7
   1bbf8:	ldrb	r3, [r3, #32]
   1bbfc:	cmp	r3, #0
   1bc00:	bne	1bc24 <__assert_fail@plt+0x9538>
   1bc04:	movw	r3, #28624	; 0x6fd0
   1bc08:	movt	r3, #6
   1bc0c:	mov	r2, #396	; 0x18c
   1bc10:	movw	r1, #25772	; 0x64ac
   1bc14:	movt	r1, #6
   1bc18:	movw	r0, #27708	; 0x6c3c
   1bc1c:	movt	r0, #6
   1bc20:	bl	126ec <__assert_fail@plt>
   1bc24:	ldr	r3, [fp, #-16]
   1bc28:	ldr	r3, [r3, #156]	; 0x9c
   1bc2c:	mov	r0, r3
   1bc30:	bl	1bbd0 <__assert_fail@plt+0x94e4>
   1bc34:	ldr	r3, [fp, #-16]
   1bc38:	ldr	r2, [r3]
   1bc3c:	movw	r3, #19344	; 0x4b90
   1bc40:	movt	r3, #1
   1bc44:	cmp	r2, r3
   1bc48:	beq	1bc64 <__assert_fail@plt+0x9578>
   1bc4c:	ldr	r3, [fp, #-16]
   1bc50:	ldr	r2, [r3]
   1bc54:	movw	r3, #22952	; 0x59a8
   1bc58:	movt	r3, #1
   1bc5c:	cmp	r2, r3
   1bc60:	bne	1bc98 <__assert_fail@plt+0x95ac>
   1bc64:	ldr	r3, [fp, #-16]
   1bc68:	ldrb	r3, [r3, #40]	; 0x28
   1bc6c:	cmp	r3, #0
   1bc70:	beq	1bc98 <__assert_fail@plt+0x95ac>
   1bc74:	ldr	r3, [fp, #-16]
   1bc78:	add	r3, r3, #40	; 0x28
   1bc7c:	str	r3, [fp, #-8]
   1bc80:	ldr	r3, [fp, #-8]
   1bc84:	ldr	r3, [r3, #76]	; 0x4c
   1bc88:	cmp	r3, #0
   1bc8c:	beq	1bc98 <__assert_fail@plt+0x95ac>
   1bc90:	ldr	r0, [fp, #-8]
   1bc94:	bl	1bb44 <__assert_fail@plt+0x9458>
   1bc98:	ldr	r3, [fp, #-16]
   1bc9c:	ldr	r3, [r3, #160]	; 0xa0
   1bca0:	mov	r0, r3
   1bca4:	bl	1bbd0 <__assert_fail@plt+0x94e4>
   1bca8:	b	1bcb0 <__assert_fail@plt+0x95c4>
   1bcac:	nop	{0}
   1bcb0:	sub	sp, fp, #4
   1bcb4:	ldr	fp, [sp]
   1bcb8:	add	sp, sp, #4
   1bcbc:	pop	{pc}		; (ldr pc, [sp], #4)
   1bcc0:	str	fp, [sp, #-8]!
   1bcc4:	str	lr, [sp, #4]
   1bcc8:	add	fp, sp, #4
   1bccc:	movw	r3, #53280	; 0xd020
   1bcd0:	movt	r3, #7
   1bcd4:	ldrb	r3, [r3, #32]
   1bcd8:	cmp	r3, #0
   1bcdc:	beq	1bd00 <__assert_fail@plt+0x9614>
   1bce0:	bl	19958 <__assert_fail@plt+0x726c>
   1bce4:	mov	r3, r0
   1bce8:	mov	r0, r3
   1bcec:	bl	1bbd0 <__assert_fail@plt+0x94e4>
   1bcf0:	movw	r3, #53280	; 0xd020
   1bcf4:	movt	r3, #7
   1bcf8:	mov	r2, #0
   1bcfc:	strb	r2, [r3, #32]
   1bd00:	nop	{0}
   1bd04:	sub	sp, fp, #4
   1bd08:	ldr	fp, [sp]
   1bd0c:	add	sp, sp, #4
   1bd10:	pop	{pc}		; (ldr pc, [sp], #4)
   1bd14:	str	fp, [sp, #-8]!
   1bd18:	str	lr, [sp, #4]
   1bd1c:	add	fp, sp, #4
   1bd20:	sub	sp, sp, #16
   1bd24:	str	r0, [fp, #-16]
   1bd28:	ldr	r3, [fp, #-16]
   1bd2c:	cmp	r3, #0
   1bd30:	beq	1bdb8 <__assert_fail@plt+0x96cc>
   1bd34:	ldr	r3, [fp, #-16]
   1bd38:	ldr	r3, [r3, #156]	; 0x9c
   1bd3c:	mov	r0, r3
   1bd40:	bl	1bd14 <__assert_fail@plt+0x9628>
   1bd44:	ldr	r3, [fp, #-16]
   1bd48:	ldr	r2, [r3]
   1bd4c:	movw	r3, #19276	; 0x4b4c
   1bd50:	movt	r3, #1
   1bd54:	cmp	r2, r3
   1bd58:	bne	1bda4 <__assert_fail@plt+0x96b8>
   1bd5c:	ldr	r3, [fp, #-16]
   1bd60:	ldrb	r3, [r3, #40]	; 0x28
   1bd64:	cmp	r3, #0
   1bd68:	beq	1bda4 <__assert_fail@plt+0x96b8>
   1bd6c:	ldr	r3, [fp, #-16]
   1bd70:	add	r3, r3, #40	; 0x28
   1bd74:	str	r3, [fp, #-8]
   1bd78:	ldr	r3, [fp, #-8]
   1bd7c:	ldr	r3, [r3, #76]	; 0x4c
   1bd80:	cmp	r3, #0
   1bd84:	beq	1bda4 <__assert_fail@plt+0x96b8>
   1bd88:	ldr	r3, [fp, #-8]
   1bd8c:	add	r2, r3, #4
   1bd90:	ldr	r3, [fp, #-8]
   1bd94:	add	r3, r3, #48	; 0x30
   1bd98:	mov	r1, r3
   1bd9c:	mov	r0, r2
   1bda0:	bl	27c20 <__assert_fail@plt+0x15534>
   1bda4:	ldr	r3, [fp, #-16]
   1bda8:	ldr	r3, [r3, #160]	; 0xa0
   1bdac:	mov	r0, r3
   1bdb0:	bl	1bd14 <__assert_fail@plt+0x9628>
   1bdb4:	b	1bdbc <__assert_fail@plt+0x96d0>
   1bdb8:	nop	{0}
   1bdbc:	sub	sp, fp, #4
   1bdc0:	ldr	fp, [sp]
   1bdc4:	add	sp, sp, #4
   1bdc8:	pop	{pc}		; (ldr pc, [sp], #4)
   1bdcc:	str	r4, [sp, #-12]!
   1bdd0:	str	fp, [sp, #4]
   1bdd4:	str	lr, [sp, #8]
   1bdd8:	add	fp, sp, #8
   1bddc:	sub	sp, sp, #12
   1bde0:	mov	r0, #8
   1bde4:	bl	3d8ec <__assert_fail@plt+0x2b200>
   1bde8:	mov	r3, r0
   1bdec:	mov	r2, r3
   1bdf0:	movw	r3, #51020	; 0xc74c
   1bdf4:	movt	r3, #7
   1bdf8:	str	r2, [r3]
   1bdfc:	movw	r3, #51020	; 0xc74c
   1be00:	movt	r3, #7
   1be04:	ldr	r3, [r3]
   1be08:	mov	r0, r3
   1be0c:	bl	3c264 <__assert_fail@plt+0x29b78>
   1be10:	mov	r3, r0
   1be14:	cmp	r3, #0
   1be18:	beq	1bedc <__assert_fail@plt+0x97f0>
   1be1c:	bl	12404 <__errno_location@plt>
   1be20:	mov	r3, r0
   1be24:	ldr	r4, [r3]
   1be28:	movw	r0, #27736	; 0x6c58
   1be2c:	movt	r0, #6
   1be30:	bl	12398 <gettext@plt>
   1be34:	mov	r1, r0
   1be38:	movw	r3, #51020	; 0xc74c
   1be3c:	movt	r3, #7
   1be40:	ldr	r3, [r3]
   1be44:	ldr	r3, [r3]
   1be48:	cmp	r3, #0
   1be4c:	bge	1be74 <__assert_fail@plt+0x9788>
   1be50:	movw	r3, #51020	; 0xc74c
   1be54:	movt	r3, #7
   1be58:	ldr	r3, [r3]
   1be5c:	ldr	r3, [r3, #4]
   1be60:	cmp	r3, #0
   1be64:	beq	1be74 <__assert_fail@plt+0x9788>
   1be68:	movw	r3, #27784	; 0x6c88
   1be6c:	movt	r3, #6
   1be70:	b	1be7c <__assert_fail@plt+0x9790>
   1be74:	movw	r3, #25852	; 0x64fc
   1be78:	movt	r3, #6
   1be7c:	movw	r2, #51020	; 0xc74c
   1be80:	movt	r2, #7
   1be84:	ldr	r2, [r2]
   1be88:	ldr	r2, [r2]
   1be8c:	cmp	r2, #0
   1be90:	bge	1bec0 <__assert_fail@plt+0x97d4>
   1be94:	movw	r2, #51020	; 0xc74c
   1be98:	movt	r2, #7
   1be9c:	ldr	r2, [r2]
   1bea0:	ldr	r2, [r2, #4]
   1bea4:	cmp	r2, #0
   1bea8:	beq	1bec0 <__assert_fail@plt+0x97d4>
   1beac:	movw	r2, #51020	; 0xc74c
   1beb0:	movt	r2, #7
   1beb4:	ldr	r2, [r2]
   1beb8:	ldr	r2, [r2, #4]
   1bebc:	b	1bec8 <__assert_fail@plt+0x97dc>
   1bec0:	movw	r2, #25852	; 0x64fc
   1bec4:	movt	r2, #6
   1bec8:	str	r2, [sp]
   1becc:	mov	r2, r1
   1bed0:	mov	r1, r4
   1bed4:	mov	r0, #1
   1bed8:	bl	122b4 <error@plt>
   1bedc:	nop	{0}
   1bee0:	sub	sp, fp, #8
   1bee4:	ldr	r4, [sp]
   1bee8:	ldr	fp, [sp, #4]
   1beec:	add	sp, sp, #8
   1bef0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bef4:	str	r4, [sp, #-12]!
   1bef8:	str	fp, [sp, #4]
   1befc:	str	lr, [sp, #8]
   1bf00:	add	fp, sp, #8
   1bf04:	sub	sp, sp, #12
   1bf08:	movw	r3, #51020	; 0xc74c
   1bf0c:	movt	r3, #7
   1bf10:	ldr	r3, [r3]
   1bf14:	mov	r0, r3
   1bf18:	bl	3c300 <__assert_fail@plt+0x29c14>
   1bf1c:	mov	r3, r0
   1bf20:	cmp	r3, #0
   1bf24:	bne	1bf64 <__assert_fail@plt+0x9878>
   1bf28:	movw	r3, #51020	; 0xc74c
   1bf2c:	movt	r3, #7
   1bf30:	ldr	r3, [r3]
   1bf34:	mov	r0, r3
   1bf38:	bl	3c364 <__assert_fail@plt+0x29c78>
   1bf3c:	movw	r3, #51020	; 0xc74c
   1bf40:	movt	r3, #7
   1bf44:	ldr	r3, [r3]
   1bf48:	mov	r0, r3
   1bf4c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1bf50:	movw	r3, #51020	; 0xc74c
   1bf54:	movt	r3, #7
   1bf58:	mov	r2, #0
   1bf5c:	str	r2, [r3]
   1bf60:	b	1c02c <__assert_fail@plt+0x9940>
   1bf64:	bl	12404 <__errno_location@plt>
   1bf68:	mov	r3, r0
   1bf6c:	ldr	r4, [r3]
   1bf70:	movw	r0, #27788	; 0x6c8c
   1bf74:	movt	r0, #6
   1bf78:	bl	12398 <gettext@plt>
   1bf7c:	mov	r1, r0
   1bf80:	movw	r3, #51020	; 0xc74c
   1bf84:	movt	r3, #7
   1bf88:	ldr	r3, [r3]
   1bf8c:	ldr	r3, [r3]
   1bf90:	cmp	r3, #0
   1bf94:	bge	1bfbc <__assert_fail@plt+0x98d0>
   1bf98:	movw	r3, #51020	; 0xc74c
   1bf9c:	movt	r3, #7
   1bfa0:	ldr	r3, [r3]
   1bfa4:	ldr	r3, [r3, #4]
   1bfa8:	cmp	r3, #0
   1bfac:	beq	1bfbc <__assert_fail@plt+0x98d0>
   1bfb0:	movw	r3, #27784	; 0x6c88
   1bfb4:	movt	r3, #6
   1bfb8:	b	1bfc4 <__assert_fail@plt+0x98d8>
   1bfbc:	movw	r3, #25852	; 0x64fc
   1bfc0:	movt	r3, #6
   1bfc4:	movw	r2, #51020	; 0xc74c
   1bfc8:	movt	r2, #7
   1bfcc:	ldr	r2, [r2]
   1bfd0:	ldr	r2, [r2]
   1bfd4:	cmp	r2, #0
   1bfd8:	bge	1c008 <__assert_fail@plt+0x991c>
   1bfdc:	movw	r2, #51020	; 0xc74c
   1bfe0:	movt	r2, #7
   1bfe4:	ldr	r2, [r2]
   1bfe8:	ldr	r2, [r2, #4]
   1bfec:	cmp	r2, #0
   1bff0:	beq	1c008 <__assert_fail@plt+0x991c>
   1bff4:	movw	r2, #51020	; 0xc74c
   1bff8:	movt	r2, #7
   1bffc:	ldr	r2, [r2]
   1c000:	ldr	r2, [r2, #4]
   1c004:	b	1c010 <__assert_fail@plt+0x9924>
   1c008:	movw	r2, #25852	; 0x64fc
   1c00c:	movt	r2, #6
   1c010:	str	r2, [sp]
   1c014:	mov	r2, r1
   1c018:	mov	r1, r4
   1c01c:	mov	r0, #0
   1c020:	bl	122b4 <error@plt>
   1c024:	mov	r0, #1
   1c028:	bl	120ec <_exit@plt>
   1c02c:	sub	sp, fp, #8
   1c030:	ldr	r4, [sp]
   1c034:	ldr	fp, [sp, #4]
   1c038:	add	sp, sp, #8
   1c03c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c040:	str	fp, [sp, #-8]!
   1c044:	str	lr, [sp, #4]
   1c048:	add	fp, sp, #4
   1c04c:	sub	sp, sp, #8
   1c050:	str	r0, [fp, #-8]
   1c054:	str	r1, [fp, #-12]
   1c058:	ldr	r3, [fp, #-8]
   1c05c:	ldr	r3, [r3, #156]	; 0x9c
   1c060:	cmp	r3, #0
   1c064:	beq	1c07c <__assert_fail@plt+0x9990>
   1c068:	ldr	r3, [fp, #-8]
   1c06c:	ldr	r3, [r3, #156]	; 0x9c
   1c070:	ldr	r1, [fp, #-12]
   1c074:	mov	r0, r3
   1c078:	bl	1c040 <__assert_fail@plt+0x9954>
   1c07c:	ldr	r3, [fp, #-12]
   1c080:	ldr	r0, [fp, #-8]
   1c084:	blx	r3
   1c088:	ldr	r3, [fp, #-8]
   1c08c:	ldr	r3, [r3, #160]	; 0xa0
   1c090:	cmp	r3, #0
   1c094:	beq	1c0ac <__assert_fail@plt+0x99c0>
   1c098:	ldr	r3, [fp, #-8]
   1c09c:	ldr	r3, [r3, #160]	; 0xa0
   1c0a0:	ldr	r1, [fp, #-12]
   1c0a4:	mov	r0, r3
   1c0a8:	bl	1c040 <__assert_fail@plt+0x9954>
   1c0ac:	nop	{0}
   1c0b0:	sub	sp, fp, #4
   1c0b4:	ldr	fp, [sp]
   1c0b8:	add	sp, sp, #4
   1c0bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c0c0:	push	{fp}		; (str fp, [sp, #-4]!)
   1c0c4:	add	fp, sp, #0
   1c0c8:	sub	sp, sp, #12
   1c0cc:	str	r0, [fp, #-8]
   1c0d0:	ldr	r3, [fp, #-8]
   1c0d4:	ldr	r2, [r3]
   1c0d8:	movw	r3, #19632	; 0x4cb0
   1c0dc:	movt	r3, #1
   1c0e0:	cmp	r2, r3
   1c0e4:	beq	1c130 <__assert_fail@plt+0x9a44>
   1c0e8:	ldr	r3, [fp, #-8]
   1c0ec:	ldr	r2, [r3]
   1c0f0:	movw	r3, #1812	; 0x714
   1c0f4:	movt	r3, #2
   1c0f8:	cmp	r2, r3
   1c0fc:	beq	1c130 <__assert_fail@plt+0x9a44>
   1c100:	ldr	r3, [fp, #-8]
   1c104:	ldr	r2, [r3]
   1c108:	movw	r3, #19468	; 0x4c0c
   1c10c:	movt	r3, #1
   1c110:	cmp	r2, r3
   1c114:	beq	1c130 <__assert_fail@plt+0x9a44>
   1c118:	ldr	r3, [fp, #-8]
   1c11c:	ldr	r2, [r3]
   1c120:	movw	r3, #19728	; 0x4d10
   1c124:	movt	r3, #1
   1c128:	cmp	r2, r3
   1c12c:	bne	1c13c <__assert_fail@plt+0x9a50>
   1c130:	ldr	r3, [fp, #-8]
   1c134:	mov	r2, #0
   1c138:	str	r2, [r3, #44]	; 0x2c
   1c13c:	nop	{0}
   1c140:	add	sp, fp, #0
   1c144:	pop	{fp}		; (ldr fp, [sp], #4)
   1c148:	bx	lr
   1c14c:	str	fp, [sp, #-8]!
   1c150:	str	lr, [sp, #4]
   1c154:	add	fp, sp, #4
   1c158:	sub	sp, sp, #8
   1c15c:	bl	19958 <__assert_fail@plt+0x726c>
   1c160:	str	r0, [fp, #-8]
   1c164:	ldr	r3, [fp, #-8]
   1c168:	cmp	r3, #0
   1c16c:	beq	1c184 <__assert_fail@plt+0x9a98>
   1c170:	movw	r1, #48404	; 0xbd14
   1c174:	movt	r1, #1
   1c178:	ldr	r0, [fp, #-8]
   1c17c:	bl	1c040 <__assert_fail@plt+0x9954>
   1c180:	bl	1bcc0 <__assert_fail@plt+0x95d4>
   1c184:	movw	r3, #53280	; 0xd020
   1c188:	movt	r3, #7
   1c18c:	ldr	r3, [r3, #36]	; 0x24
   1c190:	mov	r0, r3
   1c194:	bl	1d840 <__assert_fail@plt+0xb154>
   1c198:	ldr	r3, [fp, #-8]
   1c19c:	cmp	r3, #0
   1c1a0:	beq	1c1b4 <__assert_fail@plt+0x9ac8>
   1c1a4:	movw	r1, #49344	; 0xc0c0
   1c1a8:	movt	r1, #1
   1c1ac:	ldr	r0, [fp, #-8]
   1c1b0:	bl	1c040 <__assert_fail@plt+0x9954>
   1c1b4:	bl	1bef4 <__assert_fail@plt+0x9808>
   1c1b8:	bl	29590 <__assert_fail@plt+0x16ea4>
   1c1bc:	mov	r3, r0
   1c1c0:	cmp	r3, #0
   1c1c4:	beq	1c1d0 <__assert_fail@plt+0x9ae4>
   1c1c8:	bl	295d4 <__assert_fail@plt+0x16ee8>
   1c1cc:	bl	2953c <__assert_fail@plt+0x16e50>
   1c1d0:	movw	r3, #50996	; 0xc734
   1c1d4:	movt	r3, #7
   1c1d8:	ldr	r3, [r3]
   1c1dc:	mov	r0, r3
   1c1e0:	bl	3fda0 <__assert_fail@plt+0x2d6b4>
   1c1e4:	mov	r3, r0
   1c1e8:	cmn	r3, #1
   1c1ec:	bne	1c20c <__assert_fail@plt+0x9b20>
   1c1f0:	bl	12404 <__errno_location@plt>
   1c1f4:	mov	r3, r0
   1c1f8:	ldr	r3, [r3]
   1c1fc:	movw	r1, #27836	; 0x6cbc
   1c200:	movt	r1, #6
   1c204:	mov	r0, r3
   1c208:	bl	1d558 <__assert_fail@plt+0xae6c>
   1c20c:	nop	{0}
   1c210:	sub	sp, fp, #4
   1c214:	ldr	fp, [sp]
   1c218:	add	sp, sp, #4
   1c21c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c220:	str	fp, [sp, #-8]!
   1c224:	str	lr, [sp, #4]
   1c228:	add	fp, sp, #4
   1c22c:	sub	sp, sp, #16
   1c230:	str	r0, [fp, #-8]
   1c234:	str	r1, [fp, #-12]
   1c238:	str	r2, [fp, #-16]
   1c23c:	bl	12404 <__errno_location@plt>
   1c240:	mov	r3, r0
   1c244:	ldr	r3, [r3]
   1c248:	cmp	r3, #2
   1c24c:	beq	1c258 <__assert_fail@plt+0x9b6c>
   1c250:	cmp	r3, #20
   1c254:	bne	1c2b4 <__assert_fail@plt+0x9bc8>
   1c258:	movw	r3, #53324	; 0xd04c
   1c25c:	movt	r3, #7
   1c260:	ldr	r3, [r3, #44]	; 0x2c
   1c264:	and	r3, r3, #2
   1c268:	cmp	r3, #0
   1c26c:	beq	1c290 <__assert_fail@plt+0x9ba4>
   1c270:	movw	r3, #50984	; 0xc728
   1c274:	movt	r3, #7
   1c278:	ldr	r3, [r3]
   1c27c:	ldr	r2, [fp, #-8]
   1c280:	movw	r1, #27852	; 0x6ccc
   1c284:	movt	r1, #6
   1c288:	mov	r0, r3
   1c28c:	bl	123f8 <fprintf@plt>
   1c290:	movw	r3, #53280	; 0xd020
   1c294:	movt	r3, #7
   1c298:	ldr	r0, [r3, #16]
   1c29c:	mov	r3, #256	; 0x100
   1c2a0:	ldr	r2, [fp, #-12]
   1c2a4:	ldr	r1, [fp, #-8]
   1c2a8:	bl	64cc4 <__assert_fail@plt+0x525d8>
   1c2ac:	mov	r3, r0
   1c2b0:	b	1c2b8 <__assert_fail@plt+0x9bcc>
   1c2b4:	ldr	r3, [fp, #-16]
   1c2b8:	mov	r0, r3
   1c2bc:	sub	sp, fp, #4
   1c2c0:	ldr	fp, [sp]
   1c2c4:	add	sp, sp, #4
   1c2c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2cc:	str	fp, [sp, #-8]!
   1c2d0:	str	lr, [sp, #4]
   1c2d4:	add	fp, sp, #4
   1c2d8:	sub	sp, sp, #16
   1c2dc:	str	r0, [fp, #-16]
   1c2e0:	str	r1, [fp, #-20]	; 0xffffffec
   1c2e4:	movw	r3, #53280	; 0xd020
   1c2e8:	movt	r3, #7
   1c2ec:	ldr	r3, [r3, #16]
   1c2f0:	cmn	r3, #100	; 0x64
   1c2f4:	beq	1c32c <__assert_fail@plt+0x9c40>
   1c2f8:	movw	r3, #53280	; 0xd020
   1c2fc:	movt	r3, #7
   1c300:	ldr	r3, [r3, #16]
   1c304:	cmp	r3, #0
   1c308:	bge	1c32c <__assert_fail@plt+0x9c40>
   1c30c:	movw	r3, #28656	; 0x6ff0
   1c310:	movt	r3, #6
   1c314:	movw	r2, #605	; 0x25d
   1c318:	movw	r1, #25772	; 0x64ac
   1c31c:	movt	r1, #6
   1c320:	movw	r0, #27912	; 0x6d08
   1c324:	movt	r0, #6
   1c328:	bl	126ec <__assert_fail@plt>
   1c32c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c330:	bl	1b728 <__assert_fail@plt+0x903c>
   1c334:	movw	r3, #53280	; 0xd020
   1c338:	movt	r3, #7
   1c33c:	ldr	r3, [r3]
   1c340:	cmp	r3, #0
   1c344:	bne	1c394 <__assert_fail@plt+0x9ca8>
   1c348:	movw	r3, #53280	; 0xd020
   1c34c:	movt	r3, #7
   1c350:	ldr	r0, [r3, #16]
   1c354:	mov	r3, #0
   1c358:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c35c:	ldr	r1, [fp, #-16]
   1c360:	bl	64cc4 <__assert_fail@plt+0x525d8>
   1c364:	str	r0, [fp, #-8]
   1c368:	ldr	r3, [fp, #-8]
   1c36c:	cmp	r3, #0
   1c370:	bne	1c37c <__assert_fail@plt+0x9c90>
   1c374:	mov	r3, #0
   1c378:	b	1c3b4 <__assert_fail@plt+0x9cc8>
   1c37c:	ldr	r2, [fp, #-8]
   1c380:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c384:	ldr	r0, [fp, #-16]
   1c388:	bl	1c220 <__assert_fail@plt+0x9b34>
   1c38c:	mov	r3, r0
   1c390:	b	1c3b4 <__assert_fail@plt+0x9cc8>
   1c394:	movw	r3, #53280	; 0xd020
   1c398:	movt	r3, #7
   1c39c:	ldr	r0, [r3, #16]
   1c3a0:	mov	r3, #256	; 0x100
   1c3a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c3a8:	ldr	r1, [fp, #-16]
   1c3ac:	bl	64cc4 <__assert_fail@plt+0x525d8>
   1c3b0:	mov	r3, r0
   1c3b4:	mov	r0, r3
   1c3b8:	sub	sp, fp, #4
   1c3bc:	ldr	fp, [sp]
   1c3c0:	add	sp, sp, #4
   1c3c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c3c8:	str	fp, [sp, #-8]!
   1c3cc:	str	lr, [sp, #4]
   1c3d0:	add	fp, sp, #4
   1c3d4:	sub	sp, sp, #16
   1c3d8:	str	r0, [fp, #-16]
   1c3dc:	str	r1, [fp, #-20]	; 0xffffffec
   1c3e0:	movw	r3, #53280	; 0xd020
   1c3e4:	movt	r3, #7
   1c3e8:	ldr	r3, [r3, #16]
   1c3ec:	cmn	r3, #100	; 0x64
   1c3f0:	beq	1c428 <__assert_fail@plt+0x9d3c>
   1c3f4:	movw	r3, #53280	; 0xd020
   1c3f8:	movt	r3, #7
   1c3fc:	ldr	r3, [r3, #16]
   1c400:	cmp	r3, #0
   1c404:	bge	1c428 <__assert_fail@plt+0x9d3c>
   1c408:	movw	r3, #28672	; 0x7000
   1c40c:	movt	r3, #6
   1c410:	mov	r2, #636	; 0x27c
   1c414:	movw	r1, #25772	; 0x64ac
   1c418:	movt	r1, #6
   1c41c:	movw	r0, #27912	; 0x6d08
   1c420:	movt	r0, #6
   1c424:	bl	126ec <__assert_fail@plt>
   1c428:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c42c:	bl	1b728 <__assert_fail@plt+0x903c>
   1c430:	movw	r3, #53280	; 0xd020
   1c434:	movt	r3, #7
   1c438:	ldr	r0, [r3, #16]
   1c43c:	mov	r3, #0
   1c440:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c444:	ldr	r1, [fp, #-16]
   1c448:	bl	64cc4 <__assert_fail@plt+0x525d8>
   1c44c:	str	r0, [fp, #-8]
   1c450:	ldr	r3, [fp, #-8]
   1c454:	cmp	r3, #0
   1c458:	bne	1c464 <__assert_fail@plt+0x9d78>
   1c45c:	mov	r3, #0
   1c460:	b	1c478 <__assert_fail@plt+0x9d8c>
   1c464:	ldr	r2, [fp, #-8]
   1c468:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c46c:	ldr	r0, [fp, #-16]
   1c470:	bl	1c220 <__assert_fail@plt+0x9b34>
   1c474:	mov	r3, r0
   1c478:	mov	r0, r3
   1c47c:	sub	sp, fp, #4
   1c480:	ldr	fp, [sp]
   1c484:	add	sp, sp, #4
   1c488:	pop	{pc}		; (ldr pc, [sp], #4)
   1c48c:	str	fp, [sp, #-8]!
   1c490:	str	lr, [sp, #4]
   1c494:	add	fp, sp, #4
   1c498:	sub	sp, sp, #8
   1c49c:	str	r0, [fp, #-8]
   1c4a0:	str	r1, [fp, #-12]
   1c4a4:	movw	r3, #53280	; 0xd020
   1c4a8:	movt	r3, #7
   1c4ac:	ldr	r3, [r3, #16]
   1c4b0:	cmp	r3, #0
   1c4b4:	bge	1c4ec <__assert_fail@plt+0x9e00>
   1c4b8:	movw	r3, #53280	; 0xd020
   1c4bc:	movt	r3, #7
   1c4c0:	ldr	r3, [r3, #16]
   1c4c4:	cmn	r3, #100	; 0x64
   1c4c8:	beq	1c4ec <__assert_fail@plt+0x9e00>
   1c4cc:	movw	r3, #28688	; 0x7010
   1c4d0:	movt	r3, #6
   1c4d4:	movw	r2, #653	; 0x28d
   1c4d8:	movw	r1, #25772	; 0x64ac
   1c4dc:	movt	r1, #6
   1c4e0:	movw	r0, #27936	; 0x6d20
   1c4e4:	movt	r0, #6
   1c4e8:	bl	126ec <__assert_fail@plt>
   1c4ec:	ldr	r0, [fp, #-12]
   1c4f0:	bl	1b728 <__assert_fail@plt+0x903c>
   1c4f4:	movw	r3, #53280	; 0xd020
   1c4f8:	movt	r3, #7
   1c4fc:	ldr	r0, [r3, #16]
   1c500:	mov	r3, #256	; 0x100
   1c504:	ldr	r2, [fp, #-12]
   1c508:	ldr	r1, [fp, #-8]
   1c50c:	bl	64cc4 <__assert_fail@plt+0x525d8>
   1c510:	mov	r3, r0
   1c514:	mov	r0, r3
   1c518:	sub	sp, fp, #4
   1c51c:	ldr	fp, [sp]
   1c520:	add	sp, sp, #4
   1c524:	pop	{pc}		; (ldr pc, [sp], #4)
   1c528:	strd	r4, [sp, #-16]!
   1c52c:	str	fp, [sp, #8]
   1c530:	str	lr, [sp, #12]
   1c534:	add	fp, sp, #12
   1c538:	sub	sp, sp, #8
   1c53c:	str	r0, [fp, #-16]
   1c540:	str	r1, [fp, #-20]	; 0xffffffec
   1c544:	movw	r3, #51056	; 0xc770
   1c548:	movt	r3, #7
   1c54c:	ldrd	r2, [r3]
   1c550:	adds	r4, r2, #1
   1c554:	adc	r5, r3, #0
   1c558:	movw	r3, #51056	; 0xc770
   1c55c:	movt	r3, #7
   1c560:	strd	r4, [r3]
   1c564:	movw	r3, #50984	; 0xc728
   1c568:	movt	r3, #7
   1c56c:	ldr	r3, [r3]
   1c570:	ldr	r2, [fp, #-16]
   1c574:	movw	r1, #27992	; 0x6d58
   1c578:	movt	r1, #6
   1c57c:	mov	r0, r3
   1c580:	bl	123f8 <fprintf@plt>
   1c584:	movw	r3, #53324	; 0xd04c
   1c588:	movt	r3, #7
   1c58c:	ldr	r3, [r3, #48]	; 0x30
   1c590:	cmp	r3, #1
   1c594:	beq	1c5ac <__assert_fail@plt+0x9ec0>
   1c598:	cmp	r3, #0
   1c59c:	beq	1c5d4 <__assert_fail@plt+0x9ee8>
   1c5a0:	cmp	r3, #2
   1c5a4:	beq	1c5c0 <__assert_fail@plt+0x9ed4>
   1c5a8:	b	1c5e8 <__assert_fail@plt+0x9efc>
   1c5ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c5b0:	ldr	r0, [fp, #-16]
   1c5b4:	bl	1c3c8 <__assert_fail@plt+0x9cdc>
   1c5b8:	mov	r3, r0
   1c5bc:	b	1c608 <__assert_fail@plt+0x9f1c>
   1c5c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c5c4:	ldr	r0, [fp, #-16]
   1c5c8:	bl	1c2cc <__assert_fail@plt+0x9be0>
   1c5cc:	mov	r3, r0
   1c5d0:	b	1c608 <__assert_fail@plt+0x9f1c>
   1c5d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c5d8:	ldr	r0, [fp, #-16]
   1c5dc:	bl	1c48c <__assert_fail@plt+0x9da0>
   1c5e0:	mov	r3, r0
   1c5e4:	b	1c608 <__assert_fail@plt+0x9f1c>
   1c5e8:	movw	r3, #28704	; 0x7020
   1c5ec:	movt	r3, #6
   1c5f0:	movw	r2, #677	; 0x2a5
   1c5f4:	movw	r1, #25772	; 0x64ac
   1c5f8:	movt	r1, #6
   1c5fc:	movw	r0, #28012	; 0x6d6c
   1c600:	movt	r0, #6
   1c604:	bl	126ec <__assert_fail@plt>
   1c608:	mov	r0, r3
   1c60c:	sub	sp, fp, #12
   1c610:	ldrd	r4, [sp]
   1c614:	ldr	fp, [sp, #8]
   1c618:	add	sp, sp, #12
   1c61c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c620:	push	{fp}		; (str fp, [sp, #-4]!)
   1c624:	add	fp, sp, #0
   1c628:	movw	r3, #53324	; 0xd04c
   1c62c:	movt	r3, #7
   1c630:	ldr	r3, [r3, #48]	; 0x30
   1c634:	cmp	r3, #1
   1c638:	beq	1c648 <__assert_fail@plt+0x9f5c>
   1c63c:	cmp	r3, #2
   1c640:	beq	1c650 <__assert_fail@plt+0x9f64>
   1c644:	b	1c670 <__assert_fail@plt+0x9f84>
   1c648:	mov	r3, #1
   1c64c:	b	1c674 <__assert_fail@plt+0x9f88>
   1c650:	movw	r3, #53280	; 0xd020
   1c654:	movt	r3, #7
   1c658:	ldr	r3, [r3]
   1c65c:	cmp	r3, #0
   1c660:	moveq	r3, #1
   1c664:	movne	r3, #0
   1c668:	uxtb	r3, r3
   1c66c:	b	1c674 <__assert_fail@plt+0x9f88>
   1c670:	mov	r3, #0
   1c674:	mov	r0, r3
   1c678:	add	sp, fp, #0
   1c67c:	pop	{fp}		; (ldr fp, [sp], #4)
   1c680:	bx	lr
   1c684:	str	fp, [sp, #-8]!
   1c688:	str	lr, [sp, #4]
   1c68c:	add	fp, sp, #4
   1c690:	sub	sp, sp, #16
   1c694:	str	r0, [fp, #-8]
   1c698:	str	r1, [fp, #-12]
   1c69c:	str	r2, [fp, #-16]
   1c6a0:	str	r3, [fp, #-20]	; 0xffffffec
   1c6a4:	ldr	r3, [fp, #-8]
   1c6a8:	ldr	r3, [r3]
   1c6ac:	cmp	r3, #0
   1c6b0:	beq	1c774 <__assert_fail@plt+0xa088>
   1c6b4:	ldr	r3, [fp, #-8]
   1c6b8:	ldr	r3, [r3]
   1c6bc:	and	r3, r3, #61440	; 0xf000
   1c6c0:	cmp	r3, #40960	; 0xa000
   1c6c4:	bne	1c738 <__assert_fail@plt+0xa04c>
   1c6c8:	bl	1c620 <__assert_fail@plt+0x9f34>
   1c6cc:	mov	r3, r0
   1c6d0:	cmp	r3, #0
   1c6d4:	beq	1c738 <__assert_fail@plt+0xa04c>
   1c6d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c6dc:	ldr	r1, [fp, #-16]
   1c6e0:	ldr	r0, [fp, #-12]
   1c6e4:	bl	1b748 <__assert_fail@plt+0x905c>
   1c6e8:	mov	r3, r0
   1c6ec:	cmp	r3, #0
   1c6f0:	beq	1c6fc <__assert_fail@plt+0xa010>
   1c6f4:	mov	r3, #0
   1c6f8:	b	1c810 <__assert_fail@plt+0xa124>
   1c6fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c700:	ldr	r2, [r3, #16]
   1c704:	movw	r3, #53280	; 0xd020
   1c708:	movt	r3, #7
   1c70c:	str	r2, [r3, #8]
   1c710:	movw	r3, #53280	; 0xd020
   1c714:	movt	r3, #7
   1c718:	ldr	r2, [r3, #8]
   1c71c:	ldr	r3, [fp, #-8]
   1c720:	str	r2, [r3]
   1c724:	movw	r3, #53280	; 0xd020
   1c728:	movt	r3, #7
   1c72c:	mov	r2, #1
   1c730:	strb	r2, [r3, #5]
   1c734:	b	1c80c <__assert_fail@plt+0xa120>
   1c738:	movw	r3, #53280	; 0xd020
   1c73c:	movt	r3, #7
   1c740:	mov	r2, #1
   1c744:	strb	r2, [r3, #5]
   1c748:	ldr	r3, [fp, #-8]
   1c74c:	ldr	r2, [r3]
   1c750:	movw	r3, #53280	; 0xd020
   1c754:	movt	r3, #7
   1c758:	str	r2, [r3, #8]
   1c75c:	movw	r3, #53280	; 0xd020
   1c760:	movt	r3, #7
   1c764:	ldr	r2, [r3, #8]
   1c768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c76c:	str	r2, [r3, #16]
   1c770:	b	1c80c <__assert_fail@plt+0xa120>
   1c774:	ldrb	r3, [fp, #4]
   1c778:	cmp	r3, #0
   1c77c:	beq	1c7b4 <__assert_fail@plt+0xa0c8>
   1c780:	movw	r3, #53280	; 0xd020
   1c784:	movt	r3, #7
   1c788:	mov	r2, #0
   1c78c:	strb	r2, [r3, #4]
   1c790:	movw	r3, #53280	; 0xd020
   1c794:	movt	r3, #7
   1c798:	mov	r2, #0
   1c79c:	strb	r2, [r3, #5]
   1c7a0:	movw	r3, #53280	; 0xd020
   1c7a4:	movt	r3, #7
   1c7a8:	mov	r2, #0
   1c7ac:	str	r2, [r3, #8]
   1c7b0:	b	1c80c <__assert_fail@plt+0xa120>
   1c7b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c7b8:	ldr	r1, [fp, #-16]
   1c7bc:	ldr	r0, [fp, #-12]
   1c7c0:	bl	1b748 <__assert_fail@plt+0x905c>
   1c7c4:	mov	r3, r0
   1c7c8:	cmp	r3, #0
   1c7cc:	beq	1c7d8 <__assert_fail@plt+0xa0ec>
   1c7d0:	mov	r3, #0
   1c7d4:	b	1c810 <__assert_fail@plt+0xa124>
   1c7d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c7dc:	ldr	r2, [r3, #16]
   1c7e0:	ldr	r3, [fp, #-8]
   1c7e4:	str	r2, [r3]
   1c7e8:	ldr	r3, [fp, #-8]
   1c7ec:	ldr	r2, [r3]
   1c7f0:	movw	r3, #53280	; 0xd020
   1c7f4:	movt	r3, #7
   1c7f8:	str	r2, [r3, #8]
   1c7fc:	movw	r3, #53280	; 0xd020
   1c800:	movt	r3, #7
   1c804:	mov	r2, #1
   1c808:	strb	r2, [r3, #5]
   1c80c:	mov	r3, #1
   1c810:	mov	r0, r3
   1c814:	sub	sp, fp, #4
   1c818:	ldr	fp, [sp]
   1c81c:	add	sp, sp, #4
   1c820:	pop	{pc}		; (ldr pc, [sp], #4)
   1c824:	push	{fp}		; (str fp, [sp, #-4]!)
   1c828:	add	fp, sp, #0
   1c82c:	sub	sp, sp, #12
   1c830:	str	r0, [fp, #-8]
   1c834:	b	1c85c <__assert_fail@plt+0xa170>
   1c838:	ldr	r3, [fp, #-8]
   1c83c:	ldrb	r3, [r3, #17]
   1c840:	cmp	r3, #0
   1c844:	beq	1c850 <__assert_fail@plt+0xa164>
   1c848:	mov	r3, #0
   1c84c:	b	1c86c <__assert_fail@plt+0xa180>
   1c850:	ldr	r3, [fp, #-8]
   1c854:	ldr	r3, [r3, #152]	; 0x98
   1c858:	str	r3, [fp, #-8]
   1c85c:	ldr	r3, [fp, #-8]
   1c860:	cmp	r3, #0
   1c864:	bne	1c838 <__assert_fail@plt+0xa14c>
   1c868:	mov	r3, #1
   1c86c:	mov	r0, r3
   1c870:	add	sp, fp, #0
   1c874:	pop	{fp}		; (ldr fp, [sp], #4)
   1c878:	bx	lr
   1c87c:	push	{fp}		; (str fp, [sp, #-4]!)
   1c880:	add	fp, sp, #0
   1c884:	sub	sp, sp, #12
   1c888:	str	r0, [fp, #-8]
   1c88c:	mov	r3, r1
   1c890:	strb	r3, [fp, #-9]
   1c894:	ldr	r3, [fp, #-8]
   1c898:	ldrb	r3, [r3]
   1c89c:	sub	r3, r3, #33	; 0x21
   1c8a0:	cmp	r3, #12
   1c8a4:	ldrls	pc, [pc, r3, lsl #2]
   1c8a8:	b	1c96c <__assert_fail@plt+0xa280>
   1c8ac:	andeq	ip, r1, r8, asr #18
   1c8b0:	andeq	ip, r1, ip, ror #18
   1c8b4:	andeq	ip, r1, ip, ror #18
   1c8b8:	andeq	ip, r1, ip, ror #18
   1c8bc:	andeq	ip, r1, ip, ror #18
   1c8c0:	andeq	ip, r1, ip, ror #18
   1c8c4:	andeq	ip, r1, ip, ror #18
   1c8c8:	andeq	ip, r1, r8, asr #18
   1c8cc:	andeq	ip, r1, r4, lsl #18
   1c8d0:	andeq	ip, r1, ip, ror #18
   1c8d4:	andeq	ip, r1, ip, ror #18
   1c8d8:	andeq	ip, r1, r4, lsl #18
   1c8dc:	andeq	ip, r1, r0, ror #17
   1c8e0:	ldr	r3, [fp, #-8]
   1c8e4:	add	r3, r3, #1
   1c8e8:	ldrb	r3, [r3]
   1c8ec:	cmp	r3, #0
   1c8f0:	beq	1c8fc <__assert_fail@plt+0xa210>
   1c8f4:	mov	r3, #1
   1c8f8:	b	1c970 <__assert_fail@plt+0xa284>
   1c8fc:	mov	r3, #0
   1c900:	b	1c970 <__assert_fail@plt+0xa284>
   1c904:	ldr	r3, [fp, #-8]
   1c908:	add	r3, r3, #1
   1c90c:	ldrb	r3, [r3]
   1c910:	cmp	r3, #0
   1c914:	beq	1c920 <__assert_fail@plt+0xa234>
   1c918:	mov	r3, #0
   1c91c:	b	1c970 <__assert_fail@plt+0xa284>
   1c920:	ldrb	r3, [fp, #-9]
   1c924:	cmp	r3, #0
   1c928:	movne	r3, #1
   1c92c:	moveq	r3, #0
   1c930:	uxtb	r3, r3
   1c934:	eor	r3, r3, #1
   1c938:	uxtb	r3, r3
   1c93c:	and	r3, r3, #1
   1c940:	uxtb	r3, r3
   1c944:	b	1c970 <__assert_fail@plt+0xa284>
   1c948:	ldr	r3, [fp, #-8]
   1c94c:	add	r3, r3, #1
   1c950:	ldrb	r3, [r3]
   1c954:	cmp	r3, #0
   1c958:	beq	1c964 <__assert_fail@plt+0xa278>
   1c95c:	mov	r3, #0
   1c960:	b	1c970 <__assert_fail@plt+0xa284>
   1c964:	mov	r3, #1
   1c968:	b	1c970 <__assert_fail@plt+0xa284>
   1c96c:	mov	r3, #0
   1c970:	mov	r0, r3
   1c974:	add	sp, fp, #0
   1c978:	pop	{fp}		; (ldr fp, [sp], #4)
   1c97c:	bx	lr
   1c980:	str	r4, [sp, #-12]!
   1c984:	str	fp, [sp, #4]
   1c988:	str	lr, [sp, #8]
   1c98c:	add	fp, sp, #8
   1c990:	sub	sp, sp, #36	; 0x24
   1c994:	str	r0, [fp, #-40]	; 0xffffffd8
   1c998:	mov	r3, #0
   1c99c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c9a0:	mov	r3, #44	; 0x2c
   1c9a4:	strh	r3, [fp, #-32]	; 0xffffffe0
   1c9a8:	mov	r3, #1
   1c9ac:	strb	r3, [fp, #-17]	; 0xffffffef
   1c9b0:	sub	r2, fp, #28
   1c9b4:	sub	r3, fp, #32
   1c9b8:	mov	r1, r3
   1c9bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9c0:	bl	122a8 <strtok_r@plt>
   1c9c4:	str	r0, [fp, #-16]
   1c9c8:	b	1cae0 <__assert_fail@plt+0xa3f4>
   1c9cc:	mov	r3, #0
   1c9d0:	strb	r3, [fp, #-17]	; 0xffffffef
   1c9d4:	mov	r3, #0
   1c9d8:	str	r3, [fp, #-24]	; 0xffffffe8
   1c9dc:	b	1ca70 <__assert_fail@plt+0xa384>
   1c9e0:	movw	r2, #50512	; 0xc550
   1c9e4:	movt	r2, #7
   1c9e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9ec:	mov	r3, r1
   1c9f0:	lsl	r3, r3, #1
   1c9f4:	add	r3, r3, r1
   1c9f8:	lsl	r3, r3, #2
   1c9fc:	add	r3, r2, r3
   1ca00:	ldr	r3, [r3]
   1ca04:	ldr	r1, [fp, #-16]
   1ca08:	mov	r0, r3
   1ca0c:	bl	11ffc <strcmp@plt>
   1ca10:	mov	r3, r0
   1ca14:	cmp	r3, #0
   1ca18:	bne	1ca64 <__assert_fail@plt+0xa378>
   1ca1c:	movw	r3, #53324	; 0xd04c
   1ca20:	movt	r3, #7
   1ca24:	ldr	r0, [r3, #44]	; 0x2c
   1ca28:	movw	r2, #50512	; 0xc550
   1ca2c:	movt	r2, #7
   1ca30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca34:	mov	r3, r1
   1ca38:	lsl	r3, r3, #1
   1ca3c:	add	r3, r3, r1
   1ca40:	lsl	r3, r3, #2
   1ca44:	add	r3, r2, r3
   1ca48:	add	r3, r3, #4
   1ca4c:	ldr	r3, [r3]
   1ca50:	orr	r2, r0, r3
   1ca54:	movw	r3, #53324	; 0xd04c
   1ca58:	movt	r3, #7
   1ca5c:	str	r2, [r3, #44]	; 0x2c
   1ca60:	b	1ca7c <__assert_fail@plt+0xa390>
   1ca64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca68:	add	r3, r3, #1
   1ca6c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ca70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca74:	cmp	r3, #8
   1ca78:	bls	1c9e0 <__assert_fail@plt+0xa2f4>
   1ca7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca80:	cmp	r3, #8
   1ca84:	bls	1cac8 <__assert_fail@plt+0xa3dc>
   1ca88:	movw	r0, #28016	; 0x6d70
   1ca8c:	movt	r0, #6
   1ca90:	bl	12398 <gettext@plt>
   1ca94:	mov	r4, r0
   1ca98:	movw	r3, #53324	; 0xd04c
   1ca9c:	movt	r3, #7
   1caa0:	ldr	r3, [r3, #72]	; 0x48
   1caa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1caa8:	mov	r1, r3
   1caac:	mov	r0, #0
   1cab0:	bl	3bc98 <__assert_fail@plt+0x295ac>
   1cab4:	mov	r3, r0
   1cab8:	mov	r2, r4
   1cabc:	mov	r1, #0
   1cac0:	mov	r0, #0
   1cac4:	bl	122b4 <error@plt>
   1cac8:	sub	r2, fp, #28
   1cacc:	sub	r3, fp, #32
   1cad0:	mov	r1, r3
   1cad4:	mov	r0, #0
   1cad8:	bl	122a8 <strtok_r@plt>
   1cadc:	str	r0, [fp, #-16]
   1cae0:	ldr	r3, [fp, #-16]
   1cae4:	cmp	r3, #0
   1cae8:	bne	1c9cc <__assert_fail@plt+0xa2e0>
   1caec:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1caf0:	cmp	r3, #0
   1caf4:	beq	1cb20 <__assert_fail@plt+0xa434>
   1caf8:	movw	r0, #28052	; 0x6d94
   1cafc:	movt	r0, #6
   1cb00:	bl	12398 <gettext@plt>
   1cb04:	mov	r3, r0
   1cb08:	mov	r2, r3
   1cb0c:	mov	r1, #0
   1cb10:	mov	r0, #0
   1cb14:	bl	122b4 <error@plt>
   1cb18:	mov	r0, #1
   1cb1c:	bl	1b4d0 <__assert_fail@plt+0x8de4>
   1cb20:	movw	r3, #53324	; 0xd04c
   1cb24:	movt	r3, #7
   1cb28:	ldr	r3, [r3, #44]	; 0x2c
   1cb2c:	and	r3, r3, #16
   1cb30:	cmp	r3, #0
   1cb34:	beq	1cb48 <__assert_fail@plt+0xa45c>
   1cb38:	mov	r0, #1
   1cb3c:	bl	1b360 <__assert_fail@plt+0x8c74>
   1cb40:	mov	r0, #0
   1cb44:	bl	12380 <exit@plt>
   1cb48:	nop	{0}
   1cb4c:	sub	sp, fp, #8
   1cb50:	ldr	r4, [sp]
   1cb54:	ldr	fp, [sp, #4]
   1cb58:	add	sp, sp, #8
   1cb5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb60:	str	r4, [sp, #-12]!
   1cb64:	str	fp, [sp, #4]
   1cb68:	str	lr, [sp, #8]
   1cb6c:	add	fp, sp, #8
   1cb70:	sub	sp, sp, #28
   1cb74:	str	r0, [fp, #-32]	; 0xffffffe0
   1cb78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cb7c:	ldrb	r3, [r3]
   1cb80:	cmp	r3, #0
   1cb84:	bne	1cba8 <__assert_fail@plt+0xa4bc>
   1cb88:	movw	r0, #28088	; 0x6db8
   1cb8c:	movt	r0, #6
   1cb90:	bl	12398 <gettext@plt>
   1cb94:	mov	r3, r0
   1cb98:	mov	r2, r3
   1cb9c:	mov	r1, #0
   1cba0:	mov	r0, #1
   1cba4:	bl	122b4 <error@plt>
   1cba8:	bl	12368 <__ctype_b_loc@plt>
   1cbac:	mov	r3, r0
   1cbb0:	ldr	r2, [r3]
   1cbb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbb8:	ldrb	r3, [r3]
   1cbbc:	lsl	r3, r3, #1
   1cbc0:	add	r3, r2, r3
   1cbc4:	ldrh	r3, [r3]
   1cbc8:	and	r3, r3, #2048	; 0x800
   1cbcc:	cmp	r3, #0
   1cbd0:	bne	1cbf4 <__assert_fail@plt+0xa508>
   1cbd4:	movw	r0, #28152	; 0x6df8
   1cbd8:	movt	r0, #6
   1cbdc:	bl	12398 <gettext@plt>
   1cbe0:	mov	r3, r0
   1cbe4:	mov	r2, r3
   1cbe8:	mov	r1, #0
   1cbec:	mov	r0, #1
   1cbf0:	bl	122b4 <error@plt>
   1cbf4:	bl	12404 <__errno_location@plt>
   1cbf8:	mov	r3, r0
   1cbfc:	ldr	r3, [r3]
   1cc00:	str	r3, [fp, #-16]
   1cc04:	bl	12404 <__errno_location@plt>
   1cc08:	mov	r2, r0
   1cc0c:	mov	r3, #0
   1cc10:	str	r3, [r2]
   1cc14:	sub	r3, fp, #24
   1cc18:	mov	r2, #10
   1cc1c:	mov	r1, r3
   1cc20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cc24:	bl	123b0 <strtoul@plt>
   1cc28:	str	r0, [fp, #-20]	; 0xffffffec
   1cc2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc30:	cmp	r3, #0
   1cc34:	bne	1cc68 <__assert_fail@plt+0xa57c>
   1cc38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cc40:	cmp	r2, r3
   1cc44:	bne	1cc68 <__assert_fail@plt+0xa57c>
   1cc48:	movw	r0, #28152	; 0x6df8
   1cc4c:	movt	r0, #6
   1cc50:	bl	12398 <gettext@plt>
   1cc54:	mov	r3, r0
   1cc58:	mov	r2, r3
   1cc5c:	mov	r1, #0
   1cc60:	mov	r0, #1
   1cc64:	bl	122b4 <error@plt>
   1cc68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc6c:	ldrb	r3, [r3]
   1cc70:	cmp	r3, #0
   1cc74:	beq	1cc98 <__assert_fail@plt+0xa5ac>
   1cc78:	movw	r0, #28208	; 0x6e30
   1cc7c:	movt	r0, #6
   1cc80:	bl	12398 <gettext@plt>
   1cc84:	mov	r2, r0
   1cc88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cc8c:	mov	r1, #0
   1cc90:	mov	r0, #1
   1cc94:	bl	122b4 <error@plt>
   1cc98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc9c:	cmn	r3, #1
   1cca0:	bne	1cce4 <__assert_fail@plt+0xa5f8>
   1cca4:	bl	12404 <__errno_location@plt>
   1cca8:	mov	r3, r0
   1ccac:	ldr	r3, [r3]
   1ccb0:	cmp	r3, #0
   1ccb4:	beq	1cce4 <__assert_fail@plt+0xa5f8>
   1ccb8:	bl	12404 <__errno_location@plt>
   1ccbc:	mov	r3, r0
   1ccc0:	ldr	r4, [r3]
   1ccc4:	movw	r0, #28208	; 0x6e30
   1ccc8:	movt	r0, #6
   1cccc:	bl	12398 <gettext@plt>
   1ccd0:	mov	r2, r0
   1ccd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccd8:	mov	r1, r4
   1ccdc:	mov	r0, #1
   1cce0:	bl	122b4 <error@plt>
   1cce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cce8:	cmp	r3, #65536	; 0x10000
   1ccec:	bcc	1cd10 <__assert_fail@plt+0xa624>
   1ccf0:	movw	r0, #28240	; 0x6e50
   1ccf4:	movt	r0, #6
   1ccf8:	bl	12398 <gettext@plt>
   1ccfc:	mov	r2, r0
   1cd00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd04:	mov	r1, #0
   1cd08:	mov	r0, #1
   1cd0c:	bl	122b4 <error@plt>
   1cd10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd14:	uxth	r2, r3
   1cd18:	movw	r3, #53324	; 0xd04c
   1cd1c:	movt	r3, #7
   1cd20:	strh	r2, [r3, #68]	; 0x44
   1cd24:	bl	12404 <__errno_location@plt>
   1cd28:	mov	r2, r0
   1cd2c:	ldr	r3, [fp, #-16]
   1cd30:	str	r3, [r2]
   1cd34:	nop	{0}
   1cd38:	sub	sp, fp, #8
   1cd3c:	ldr	r4, [sp]
   1cd40:	ldr	fp, [sp, #4]
   1cd44:	add	sp, sp, #8
   1cd48:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd4c:	str	fp, [sp, #-8]!
   1cd50:	str	lr, [sp, #4]
   1cd54:	add	fp, sp, #4
   1cd58:	sub	sp, sp, #16
   1cd5c:	str	r0, [fp, #-16]
   1cd60:	str	r1, [fp, #-20]	; 0xffffffec
   1cd64:	mov	r3, #1
   1cd68:	str	r3, [fp, #-8]
   1cd6c:	b	1cf70 <__assert_fail@plt+0xa884>
   1cd70:	ldr	r3, [fp, #-8]
   1cd74:	lsl	r3, r3, #2
   1cd78:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cd7c:	add	r3, r2, r3
   1cd80:	ldr	r3, [r3]
   1cd84:	mov	r1, r3
   1cd88:	movw	r0, #28344	; 0x6eb8
   1cd8c:	movt	r0, #6
   1cd90:	bl	11ffc <strcmp@plt>
   1cd94:	mov	r3, r0
   1cd98:	cmp	r3, #0
   1cd9c:	bne	1cdac <__assert_fail@plt+0xa6c0>
   1cda0:	mov	r0, #2
   1cda4:	bl	21450 <__assert_fail@plt+0xed64>
   1cda8:	b	1cf64 <__assert_fail@plt+0xa878>
   1cdac:	ldr	r3, [fp, #-8]
   1cdb0:	lsl	r3, r3, #2
   1cdb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cdb8:	add	r3, r2, r3
   1cdbc:	ldr	r3, [r3]
   1cdc0:	mov	r1, r3
   1cdc4:	movw	r0, #28348	; 0x6ebc
   1cdc8:	movt	r0, #6
   1cdcc:	bl	11ffc <strcmp@plt>
   1cdd0:	mov	r3, r0
   1cdd4:	cmp	r3, #0
   1cdd8:	bne	1cde8 <__assert_fail@plt+0xa6fc>
   1cddc:	mov	r0, #1
   1cde0:	bl	21450 <__assert_fail@plt+0xed64>
   1cde4:	b	1cf64 <__assert_fail@plt+0xa878>
   1cde8:	ldr	r3, [fp, #-8]
   1cdec:	lsl	r3, r3, #2
   1cdf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cdf4:	add	r3, r2, r3
   1cdf8:	ldr	r3, [r3]
   1cdfc:	mov	r1, r3
   1ce00:	movw	r0, #28352	; 0x6ec0
   1ce04:	movt	r0, #6
   1ce08:	bl	11ffc <strcmp@plt>
   1ce0c:	mov	r3, r0
   1ce10:	cmp	r3, #0
   1ce14:	bne	1ce24 <__assert_fail@plt+0xa738>
   1ce18:	mov	r0, #0
   1ce1c:	bl	21450 <__assert_fail@plt+0xed64>
   1ce20:	b	1cf64 <__assert_fail@plt+0xa878>
   1ce24:	ldr	r3, [fp, #-8]
   1ce28:	lsl	r3, r3, #2
   1ce2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ce30:	add	r3, r2, r3
   1ce34:	ldr	r3, [r3]
   1ce38:	mov	r1, r3
   1ce3c:	movw	r0, #28356	; 0x6ec4
   1ce40:	movt	r0, #6
   1ce44:	bl	11ffc <strcmp@plt>
   1ce48:	mov	r3, r0
   1ce4c:	cmp	r3, #0
   1ce50:	bne	1ce64 <__assert_fail@plt+0xa778>
   1ce54:	ldr	r3, [fp, #-8]
   1ce58:	add	r3, r3, #1
   1ce5c:	str	r3, [fp, #-12]
   1ce60:	b	1cf88 <__assert_fail@plt+0xa89c>
   1ce64:	ldr	r3, [fp, #-8]
   1ce68:	lsl	r3, r3, #2
   1ce6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ce70:	add	r3, r2, r3
   1ce74:	ldr	r3, [r3]
   1ce78:	mov	r1, r3
   1ce7c:	movw	r0, #28360	; 0x6ec8
   1ce80:	movt	r0, #6
   1ce84:	bl	11ffc <strcmp@plt>
   1ce88:	mov	r3, r0
   1ce8c:	cmp	r3, #0
   1ce90:	bne	1cf00 <__assert_fail@plt+0xa814>
   1ce94:	ldr	r3, [fp, #-8]
   1ce98:	add	r3, r3, #1
   1ce9c:	ldr	r2, [fp, #-16]
   1cea0:	cmp	r2, r3
   1cea4:	bgt	1ced0 <__assert_fail@plt+0xa7e4>
   1cea8:	movw	r0, #28364	; 0x6ecc
   1ceac:	movt	r0, #6
   1ceb0:	bl	12398 <gettext@plt>
   1ceb4:	mov	r3, r0
   1ceb8:	mov	r2, r3
   1cebc:	mov	r1, #0
   1cec0:	mov	r0, #0
   1cec4:	bl	122b4 <error@plt>
   1cec8:	mov	r0, #1
   1cecc:	bl	1b4d0 <__assert_fail@plt+0x8de4>
   1ced0:	ldr	r3, [fp, #-8]
   1ced4:	add	r3, r3, #1
   1ced8:	lsl	r3, r3, #2
   1cedc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cee0:	add	r3, r2, r3
   1cee4:	ldr	r3, [r3]
   1cee8:	mov	r0, r3
   1ceec:	bl	1c980 <__assert_fail@plt+0xa294>
   1cef0:	ldr	r3, [fp, #-8]
   1cef4:	add	r3, r3, #1
   1cef8:	str	r3, [fp, #-8]
   1cefc:	b	1cf64 <__assert_fail@plt+0xa878>
   1cf00:	ldr	r3, [fp, #-8]
   1cf04:	lsl	r3, r3, #2
   1cf08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cf0c:	add	r3, r2, r3
   1cf10:	ldr	r3, [r3]
   1cf14:	mov	r2, #2
   1cf18:	mov	r1, r3
   1cf1c:	movw	r0, #28404	; 0x6ef4
   1cf20:	movt	r0, #6
   1cf24:	bl	1268c <strncmp@plt>
   1cf28:	mov	r3, r0
   1cf2c:	cmp	r3, #0
   1cf30:	bne	1cf58 <__assert_fail@plt+0xa86c>
   1cf34:	ldr	r3, [fp, #-8]
   1cf38:	lsl	r3, r3, #2
   1cf3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cf40:	add	r3, r2, r3
   1cf44:	ldr	r3, [r3]
   1cf48:	add	r3, r3, #2
   1cf4c:	mov	r0, r3
   1cf50:	bl	1cb60 <__assert_fail@plt+0xa474>
   1cf54:	b	1cf64 <__assert_fail@plt+0xa878>
   1cf58:	ldr	r3, [fp, #-8]
   1cf5c:	str	r3, [fp, #-12]
   1cf60:	b	1cf88 <__assert_fail@plt+0xa89c>
   1cf64:	ldr	r3, [fp, #-8]
   1cf68:	add	r3, r3, #1
   1cf6c:	str	r3, [fp, #-8]
   1cf70:	ldr	r3, [fp, #-8]
   1cf74:	str	r3, [fp, #-12]
   1cf78:	ldr	r2, [fp, #-12]
   1cf7c:	ldr	r3, [fp, #-16]
   1cf80:	cmp	r2, r3
   1cf84:	blt	1cd70 <__assert_fail@plt+0xa684>
   1cf88:	ldr	r3, [fp, #-12]
   1cf8c:	mov	r0, r3
   1cf90:	sub	sp, fp, #4
   1cf94:	ldr	fp, [sp]
   1cf98:	add	sp, sp, #4
   1cf9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cfa0:	str	fp, [sp, #-8]!
   1cfa4:	str	lr, [sp, #4]
   1cfa8:	add	fp, sp, #4
   1cfac:	sub	sp, sp, #32
   1cfb0:	str	r0, [fp, #-32]	; 0xffffffe0
   1cfb4:	sub	r3, fp, #24
   1cfb8:	mov	r1, #0
   1cfbc:	mov	r0, r3
   1cfc0:	bl	12278 <gettimeofday@plt>
   1cfc4:	mov	r3, r0
   1cfc8:	cmp	r3, #0
   1cfcc:	bne	1d000 <__assert_fail@plt+0xa914>
   1cfd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfd4:	str	r3, [fp, #-16]
   1cfd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfdc:	mov	r2, #1000	; 0x3e8
   1cfe0:	mul	r3, r2, r3
   1cfe4:	str	r3, [fp, #-12]
   1cfe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cfec:	mov	r1, r3
   1cff0:	sub	r3, fp, #16
   1cff4:	ldrd	r2, [r3]
   1cff8:	strd	r2, [r1]
   1cffc:	b	1d05c <__assert_fail@plt+0xa970>
   1d000:	mov	r0, #0
   1d004:	bl	1214c <time@plt>
   1d008:	str	r0, [fp, #-8]
   1d00c:	ldr	r3, [fp, #-8]
   1d010:	cmn	r3, #1
   1d014:	bne	1d038 <__assert_fail@plt+0xa94c>
   1d018:	movw	r3, #28716	; 0x702c
   1d01c:	movt	r3, #6
   1d020:	movw	r2, #978	; 0x3d2
   1d024:	movw	r1, #25772	; 0x64ac
   1d028:	movt	r1, #6
   1d02c:	movw	r0, #28408	; 0x6ef8
   1d030:	movt	r0, #6
   1d034:	bl	126ec <__assert_fail@plt>
   1d038:	ldr	r3, [fp, #-8]
   1d03c:	str	r3, [fp, #-16]
   1d040:	mov	r3, #0
   1d044:	str	r3, [fp, #-12]
   1d048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d04c:	mov	r1, r3
   1d050:	sub	r3, fp, #16
   1d054:	ldrd	r2, [r3]
   1d058:	strd	r2, [r1]
   1d05c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d060:	sub	sp, fp, #4
   1d064:	ldr	fp, [sp]
   1d068:	add	sp, sp, #4
   1d06c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d070:	str	r4, [sp, #-12]!
   1d074:	str	fp, [sp, #4]
   1d078:	str	lr, [sp, #8]
   1d07c:	add	fp, sp, #8
   1d080:	sub	sp, sp, #20
   1d084:	str	r0, [fp, #-16]
   1d088:	movw	r0, #28424	; 0x6f08
   1d08c:	movt	r0, #6
   1d090:	bl	122f0 <getenv@plt>
   1d094:	mov	r3, r0
   1d098:	cmp	r3, #0
   1d09c:	beq	1d0b0 <__assert_fail@plt+0xa9c4>
   1d0a0:	ldr	r3, [fp, #-16]
   1d0a4:	mov	r2, #1
   1d0a8:	strb	r2, [r3, #17]
   1d0ac:	b	1d0bc <__assert_fail@plt+0xa9d0>
   1d0b0:	ldr	r3, [fp, #-16]
   1d0b4:	mov	r2, #0
   1d0b8:	strb	r2, [r3, #17]
   1d0bc:	bl	1ba00 <__assert_fail@plt+0x9314>
   1d0c0:	mov	r3, r0
   1d0c4:	mov	r2, r3
   1d0c8:	ldr	r3, [fp, #-16]
   1d0cc:	strb	r2, [r3, #56]	; 0x38
   1d0d0:	ldr	r3, [fp, #-16]
   1d0d4:	mov	r2, #0
   1d0d8:	str	r2, [r3, #60]	; 0x3c
   1d0dc:	mov	r0, #0
   1d0e0:	bl	1265c <isatty@plt>
   1d0e4:	mov	r3, r0
   1d0e8:	cmp	r3, #0
   1d0ec:	beq	1d10c <__assert_fail@plt+0xaa20>
   1d0f0:	ldr	r3, [fp, #-16]
   1d0f4:	mov	r2, #1
   1d0f8:	strb	r2, [r3, #16]
   1d0fc:	ldr	r3, [fp, #-16]
   1d100:	mov	r2, #0
   1d104:	strb	r2, [r3, #15]
   1d108:	b	1d124 <__assert_fail@plt+0xaa38>
   1d10c:	ldr	r3, [fp, #-16]
   1d110:	mov	r2, #0
   1d114:	strb	r2, [r3, #16]
   1d118:	ldr	r3, [fp, #-16]
   1d11c:	mov	r2, #0
   1d120:	strb	r2, [r3, #15]
   1d124:	ldr	r3, [fp, #-16]
   1d128:	ldrb	r3, [r3, #17]
   1d12c:	cmp	r3, #0
   1d130:	beq	1d140 <__assert_fail@plt+0xaa54>
   1d134:	ldr	r3, [fp, #-16]
   1d138:	mov	r2, #0
   1d13c:	strb	r2, [r3, #16]
   1d140:	ldr	r3, [fp, #-16]
   1d144:	mov	r2, #1
   1d148:	strb	r2, [r3]
   1d14c:	ldr	r3, [fp, #-16]
   1d150:	mov	r2, #0
   1d154:	strb	r2, [r3, #1]
   1d158:	ldr	r3, [fp, #-16]
   1d15c:	mvn	r2, #0
   1d160:	str	r2, [r3, #8]
   1d164:	ldr	r3, [fp, #-16]
   1d168:	ldr	r2, [r3, #8]
   1d16c:	ldr	r3, [fp, #-16]
   1d170:	str	r2, [r3, #4]
   1d174:	ldr	r4, [fp, #-16]
   1d178:	sub	r3, fp, #28
   1d17c:	mov	r0, r3
   1d180:	bl	1cfa0 <__assert_fail@plt+0xa8b4>
   1d184:	add	r1, r4, #20
   1d188:	sub	r3, fp, #28
   1d18c:	ldrd	r2, [r3]
   1d190:	strd	r2, [r1]
   1d194:	ldr	r3, [fp, #-16]
   1d198:	ldr	r3, [r3, #20]
   1d19c:	sub	r3, r3, #86016	; 0x15000
   1d1a0:	sub	r3, r3, #384	; 0x180
   1d1a4:	ldr	r2, [fp, #-16]
   1d1a8:	str	r3, [r2, #28]
   1d1ac:	ldr	r3, [fp, #-16]
   1d1b0:	ldr	r2, [r3, #24]
   1d1b4:	ldr	r3, [fp, #-16]
   1d1b8:	str	r2, [r3, #32]
   1d1bc:	ldr	r3, [fp, #-16]
   1d1c0:	mov	r2, #0
   1d1c4:	strb	r2, [r3, #36]	; 0x24
   1d1c8:	ldr	r3, [fp, #-16]
   1d1cc:	mov	r2, #0
   1d1d0:	strb	r2, [r3, #13]
   1d1d4:	ldr	r3, [fp, #-16]
   1d1d8:	mov	r2, #0
   1d1dc:	strb	r2, [r3, #14]
   1d1e0:	ldr	r3, [fp, #-16]
   1d1e4:	ldrb	r3, [r3, #17]
   1d1e8:	cmp	r3, #0
   1d1ec:	beq	1d200 <__assert_fail@plt+0xab14>
   1d1f0:	ldr	r3, [fp, #-16]
   1d1f4:	mov	r2, #512	; 0x200
   1d1f8:	str	r2, [r3, #40]	; 0x28
   1d1fc:	b	1d20c <__assert_fail@plt+0xab20>
   1d200:	ldr	r3, [fp, #-16]
   1d204:	mov	r2, #1024	; 0x400
   1d208:	str	r2, [r3, #40]	; 0x28
   1d20c:	ldr	r3, [fp, #-16]
   1d210:	mov	r2, #0
   1d214:	str	r2, [r3, #44]	; 0x2c
   1d218:	ldr	r3, [fp, #-16]
   1d21c:	mov	r2, #2
   1d220:	strh	r2, [r3, #68]	; 0x44
   1d224:	movw	r0, #28440	; 0x6f18
   1d228:	movt	r0, #6
   1d22c:	bl	122f0 <getenv@plt>
   1d230:	mov	r3, r0
   1d234:	cmp	r3, #0
   1d238:	beq	1d25c <__assert_fail@plt+0xab70>
   1d23c:	movw	r0, #28456	; 0x6f28
   1d240:	movt	r0, #6
   1d244:	bl	12398 <gettext@plt>
   1d248:	mov	r3, r0
   1d24c:	mov	r2, r3
   1d250:	mov	r1, #0
   1d254:	mov	r0, #1
   1d258:	bl	122b4 <error@plt>
   1d25c:	ldr	r3, [fp, #-16]
   1d260:	mov	r2, #0
   1d264:	strb	r2, [r3, #12]
   1d268:	mov	r0, #0
   1d26c:	bl	21450 <__assert_fail@plt+0xed64>
   1d270:	ldr	r3, [fp, #-16]
   1d274:	mov	r2, #8
   1d278:	str	r2, [r3, #72]	; 0x48
   1d27c:	ldr	r3, [fp, #-16]
   1d280:	mov	r2, #0
   1d284:	str	r2, [r3, #76]	; 0x4c
   1d288:	ldr	r3, [fp, #-16]
   1d28c:	mov	r2, #0
   1d290:	strb	r2, [r3, #80]	; 0x50
   1d294:	nop	{0}
   1d298:	sub	sp, fp, #8
   1d29c:	ldr	r4, [sp]
   1d2a0:	ldr	fp, [sp, #4]
   1d2a4:	add	sp, sp, #8
   1d2a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2ac:	str	fp, [sp, #-8]!
   1d2b0:	str	lr, [sp, #4]
   1d2b4:	add	fp, sp, #4
   1d2b8:	sub	sp, sp, #16
   1d2bc:	str	r0, [fp, #-8]
   1d2c0:	str	r1, [fp, #-12]
   1d2c4:	str	r2, [fp, #-16]
   1d2c8:	ldr	r3, [fp, #-16]
   1d2cc:	ldr	r3, [r3, #164]	; 0xa4
   1d2d0:	add	r2, r3, #1
   1d2d4:	ldr	r3, [fp, #-16]
   1d2d8:	str	r2, [r3, #164]	; 0xa4
   1d2dc:	ldr	r3, [fp, #-16]
   1d2e0:	ldrb	r3, [r3, #18]
   1d2e4:	cmp	r3, #0
   1d2e8:	bne	1d30c <__assert_fail@plt+0xac20>
   1d2ec:	ldr	r3, [fp, #-16]
   1d2f0:	ldrb	r3, [r3, #19]
   1d2f4:	cmp	r3, #0
   1d2f8:	bne	1d30c <__assert_fail@plt+0xac20>
   1d2fc:	ldr	r3, [fp, #-16]
   1d300:	ldrb	r3, [r3, #20]
   1d304:	cmp	r3, #0
   1d308:	beq	1d330 <__assert_fail@plt+0xac44>
   1d30c:	ldr	r2, [fp, #-16]
   1d310:	ldr	r1, [fp, #-12]
   1d314:	ldr	r0, [fp, #-8]
   1d318:	bl	1b8b4 <__assert_fail@plt+0x91c8>
   1d31c:	mov	r3, r0
   1d320:	cmp	r3, #0
   1d324:	beq	1d330 <__assert_fail@plt+0xac44>
   1d328:	mov	r3, #0
   1d32c:	b	1d374 <__assert_fail@plt+0xac88>
   1d330:	ldr	r3, [fp, #-16]
   1d334:	ldr	r3, [r3]
   1d338:	ldr	r2, [fp, #-16]
   1d33c:	ldr	r1, [fp, #-12]
   1d340:	ldr	r0, [fp, #-8]
   1d344:	blx	r3
   1d348:	mov	r3, r0
   1d34c:	cmp	r3, #0
   1d350:	beq	1d370 <__assert_fail@plt+0xac84>
   1d354:	ldr	r3, [fp, #-16]
   1d358:	ldr	r3, [r3, #168]	; 0xa8
   1d35c:	add	r2, r3, #1
   1d360:	ldr	r3, [fp, #-16]
   1d364:	str	r2, [r3, #168]	; 0xa8
   1d368:	mov	r3, #1
   1d36c:	b	1d374 <__assert_fail@plt+0xac88>
   1d370:	mov	r3, #0
   1d374:	mov	r0, r3
   1d378:	sub	sp, fp, #4
   1d37c:	ldr	fp, [sp]
   1d380:	add	sp, sp, #4
   1d384:	pop	{pc}		; (ldr pc, [sp], #4)
   1d388:	push	{fp}		; (str fp, [sp, #-4]!)
   1d38c:	add	fp, sp, #0
   1d390:	sub	sp, sp, #12
   1d394:	str	r0, [fp, #-8]
   1d398:	ldr	r2, [fp, #-8]
   1d39c:	movw	r3, #19344	; 0x4b90
   1d3a0:	movt	r3, #1
   1d3a4:	cmp	r2, r3
   1d3a8:	beq	1d3c0 <__assert_fail@plt+0xacd4>
   1d3ac:	ldr	r2, [fp, #-8]
   1d3b0:	movw	r3, #22952	; 0x59a8
   1d3b4:	movt	r3, #1
   1d3b8:	cmp	r2, r3
   1d3bc:	bne	1d3c8 <__assert_fail@plt+0xacdc>
   1d3c0:	mov	r3, #1
   1d3c4:	b	1d3cc <__assert_fail@plt+0xace0>
   1d3c8:	mov	r3, #0
   1d3cc:	and	r3, r3, #1
   1d3d0:	uxtb	r3, r3
   1d3d4:	mov	r0, r3
   1d3d8:	add	sp, fp, #0
   1d3dc:	pop	{fp}		; (ldr fp, [sp], #4)
   1d3e0:	bx	lr
   1d3e4:	str	fp, [sp, #-8]!
   1d3e8:	str	lr, [sp, #4]
   1d3ec:	add	fp, sp, #4
   1d3f0:	sub	sp, sp, #8
   1d3f4:	str	r0, [fp, #-8]
   1d3f8:	str	r1, [fp, #-12]
   1d3fc:	movw	r3, #53324	; 0xd04c
   1d400:	movt	r3, #7
   1d404:	ldr	r3, [r3, #72]	; 0x48
   1d408:	ldr	r2, [fp, #-12]
   1d40c:	mov	r1, r3
   1d410:	ldr	r0, [fp, #-8]
   1d414:	bl	3bc98 <__assert_fail@plt+0x295ac>
   1d418:	mov	r3, r0
   1d41c:	mov	r0, r3
   1d420:	sub	sp, fp, #4
   1d424:	ldr	fp, [sp]
   1d428:	add	sp, sp, #4
   1d42c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d430:	str	fp, [sp, #-8]!
   1d434:	str	lr, [sp, #4]
   1d438:	add	fp, sp, #4
   1d43c:	sub	sp, sp, #16
   1d440:	str	r0, [fp, #-8]
   1d444:	str	r1, [fp, #-12]
   1d448:	str	r3, [fp, #-20]	; 0xffffffec
   1d44c:	mov	r3, r2
   1d450:	strb	r3, [fp, #-13]
   1d454:	ldrb	r3, [fp, #-13]
   1d458:	eor	r3, r3, #1
   1d45c:	uxtb	r3, r3
   1d460:	cmp	r3, #0
   1d464:	bne	1d484 <__assert_fail@plt+0xad98>
   1d468:	movw	r3, #53280	; 0xd020
   1d46c:	movt	r3, #7
   1d470:	ldrb	r3, [r3, #40]	; 0x28
   1d474:	eor	r3, r3, #1
   1d478:	uxtb	r3, r3
   1d47c:	cmp	r3, #0
   1d480:	beq	1d4b8 <__assert_fail@plt+0xadcc>
   1d484:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d488:	mov	r0, #0
   1d48c:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   1d490:	mov	r3, r0
   1d494:	movw	r2, #28604	; 0x6fbc
   1d498:	movt	r2, #6
   1d49c:	ldr	r1, [fp, #-12]
   1d4a0:	ldr	r0, [fp, #-8]
   1d4a4:	bl	122b4 <error@plt>
   1d4a8:	movw	r3, #53280	; 0xd020
   1d4ac:	movt	r3, #7
   1d4b0:	mov	r2, #1
   1d4b4:	str	r2, [r3, #28]
   1d4b8:	ldrb	r3, [fp, #-13]
   1d4bc:	cmp	r3, #0
   1d4c0:	beq	1d4d4 <__assert_fail@plt+0xade8>
   1d4c4:	movw	r3, #53280	; 0xd020
   1d4c8:	movt	r3, #7
   1d4cc:	mov	r2, #1
   1d4d0:	strb	r2, [r3, #40]	; 0x28
   1d4d4:	nop	{0}
   1d4d8:	sub	sp, fp, #4
   1d4dc:	ldr	fp, [sp]
   1d4e0:	add	sp, sp, #4
   1d4e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1d4e8:	str	fp, [sp, #-8]!
   1d4ec:	str	lr, [sp, #4]
   1d4f0:	add	fp, sp, #4
   1d4f4:	sub	sp, sp, #8
   1d4f8:	str	r0, [fp, #-8]
   1d4fc:	str	r1, [fp, #-12]
   1d500:	ldr	r3, [fp, #-12]
   1d504:	mov	r2, #1
   1d508:	ldr	r1, [fp, #-8]
   1d50c:	mov	r0, #0
   1d510:	bl	1d430 <__assert_fail@plt+0xad44>
   1d514:	nop	{0}
   1d518:	sub	sp, fp, #4
   1d51c:	ldr	fp, [sp]
   1d520:	add	sp, sp, #4
   1d524:	pop	{pc}		; (ldr pc, [sp], #4)
   1d528:	str	fp, [sp, #-8]!
   1d52c:	str	lr, [sp, #4]
   1d530:	add	fp, sp, #4
   1d534:	sub	sp, sp, #8
   1d538:	str	r0, [fp, #-8]
   1d53c:	str	r1, [fp, #-12]
   1d540:	ldr	r3, [fp, #-12]
   1d544:	mov	r2, #1
   1d548:	ldr	r1, [fp, #-8]
   1d54c:	mov	r0, #1
   1d550:	bl	1d430 <__assert_fail@plt+0xad44>
   1d554:	bl	12698 <abort@plt>
   1d558:	str	fp, [sp, #-8]!
   1d55c:	str	lr, [sp, #4]
   1d560:	add	fp, sp, #4
   1d564:	sub	sp, sp, #8
   1d568:	str	r0, [fp, #-8]
   1d56c:	str	r1, [fp, #-12]
   1d570:	ldr	r3, [fp, #-12]
   1d574:	mov	r2, #0
   1d578:	ldr	r1, [fp, #-8]
   1d57c:	mov	r0, #0
   1d580:	bl	1d430 <__assert_fail@plt+0xad44>
   1d584:	nop	{0}
   1d588:	sub	sp, fp, #4
   1d58c:	ldr	fp, [sp]
   1d590:	add	sp, sp, #4
   1d594:	pop	{pc}		; (ldr pc, [sp], #4)
   1d598:	str	fp, [sp, #-8]!
   1d59c:	str	lr, [sp, #4]
   1d5a0:	add	fp, sp, #4
   1d5a4:	sub	sp, sp, #8
   1d5a8:	str	r0, [fp, #-8]
   1d5ac:	str	r1, [fp, #-12]
   1d5b0:	movw	r3, #53280	; 0xd020
   1d5b4:	movt	r3, #7
   1d5b8:	mov	r2, #0
   1d5bc:	strb	r2, [r3, #40]	; 0x28
   1d5c0:	ldr	r3, [fp, #-12]
   1d5c4:	mov	r2, #0
   1d5c8:	ldr	r1, [fp, #-8]
   1d5cc:	mov	r0, #1
   1d5d0:	bl	1d430 <__assert_fail@plt+0xad44>
   1d5d4:	bl	12698 <abort@plt>
   1d5d8:	push	{fp}		; (str fp, [sp, #-4]!)
   1d5dc:	add	fp, sp, #0
   1d5e0:	sub	sp, sp, #20
   1d5e4:	str	r0, [fp, #-16]
   1d5e8:	str	r1, [fp, #-20]	; 0xffffffec
   1d5ec:	ldr	r3, [fp, #-16]
   1d5f0:	str	r3, [fp, #-8]
   1d5f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d5f8:	str	r3, [fp, #-12]
   1d5fc:	ldr	r3, [fp, #-8]
   1d600:	ldrd	r0, [r3, #8]
   1d604:	ldr	r3, [fp, #-12]
   1d608:	ldrd	r2, [r3, #8]
   1d60c:	cmp	r1, r3
   1d610:	cmpeq	r0, r2
   1d614:	bne	1d63c <__assert_fail@plt+0xaf50>
   1d618:	ldr	r3, [fp, #-8]
   1d61c:	ldrd	r0, [r3]
   1d620:	ldr	r3, [fp, #-12]
   1d624:	ldrd	r2, [r3]
   1d628:	cmp	r1, r3
   1d62c:	cmpeq	r0, r2
   1d630:	bne	1d63c <__assert_fail@plt+0xaf50>
   1d634:	mov	r3, #1
   1d638:	b	1d640 <__assert_fail@plt+0xaf54>
   1d63c:	mov	r3, #0
   1d640:	and	r3, r3, #1
   1d644:	uxtb	r3, r3
   1d648:	mov	r0, r3
   1d64c:	add	sp, fp, #0
   1d650:	pop	{fp}		; (ldr fp, [sp], #4)
   1d654:	bx	lr
   1d658:	str	fp, [sp, #-8]!
   1d65c:	str	lr, [sp, #4]
   1d660:	add	fp, sp, #4
   1d664:	sub	sp, sp, #16
   1d668:	str	r0, [fp, #-16]
   1d66c:	ldr	r3, [fp, #-16]
   1d670:	str	r3, [fp, #-8]
   1d674:	ldr	r3, [fp, #-8]
   1d678:	ldr	r3, [r3, #20]
   1d67c:	cmp	r3, #0
   1d680:	beq	1d6c0 <__assert_fail@plt+0xafd4>
   1d684:	ldr	r3, [fp, #-8]
   1d688:	ldr	r3, [r3, #20]
   1d68c:	mov	r0, r3
   1d690:	bl	124d0 <fclose@plt>
   1d694:	mov	r3, r0
   1d698:	cmp	r3, #0
   1d69c:	beq	1d6c0 <__assert_fail@plt+0xafd4>
   1d6a0:	bl	12404 <__errno_location@plt>
   1d6a4:	mov	r3, r0
   1d6a8:	ldr	r2, [r3]
   1d6ac:	ldr	r3, [fp, #-8]
   1d6b0:	ldr	r3, [r3, #16]
   1d6b4:	mov	r1, r3
   1d6b8:	mov	r0, r2
   1d6bc:	bl	1d598 <__assert_fail@plt+0xaeac>
   1d6c0:	ldr	r3, [fp, #-8]
   1d6c4:	ldr	r3, [r3, #16]
   1d6c8:	mov	r0, r3
   1d6cc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1d6d0:	ldr	r0, [fp, #-8]
   1d6d4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1d6d8:	nop	{0}
   1d6dc:	sub	sp, fp, #4
   1d6e0:	ldr	fp, [sp]
   1d6e4:	add	sp, sp, #4
   1d6e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1d6ec:	strd	r4, [sp, #-16]!
   1d6f0:	str	fp, [sp, #8]
   1d6f4:	str	lr, [sp, #12]
   1d6f8:	add	fp, sp, #12
   1d6fc:	sub	sp, sp, #16
   1d700:	str	r0, [fp, #-24]	; 0xffffffe8
   1d704:	str	r1, [fp, #-28]	; 0xffffffe4
   1d708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d70c:	str	r3, [fp, #-16]
   1d710:	ldr	r3, [fp, #-16]
   1d714:	ldrd	r0, [r3]
   1d718:	ldr	r3, [fp, #-16]
   1d71c:	ldrd	r2, [r3, #8]
   1d720:	eor	r4, r0, r2
   1d724:	eor	r5, r1, r3
   1d728:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d72c:	mov	r2, r3
   1d730:	mov	r3, #0
   1d734:	mov	r0, r4
   1d738:	mov	r1, r5
   1d73c:	bl	64a60 <__assert_fail@plt+0x52374>
   1d740:	mov	r3, r2
   1d744:	mov	r0, r3
   1d748:	sub	sp, fp, #12
   1d74c:	ldrd	r4, [sp]
   1d750:	ldr	fp, [sp, #8]
   1d754:	add	sp, sp, #12
   1d758:	pop	{pc}		; (ldr pc, [sp], #4)
   1d75c:	str	fp, [sp, #-8]!
   1d760:	str	lr, [sp, #4]
   1d764:	add	fp, sp, #4
   1d768:	sub	sp, sp, #24
   1d76c:	str	r0, [fp, #-16]
   1d770:	mov	r0, #8
   1d774:	bl	43510 <__assert_fail@plt+0x30e24>
   1d778:	mov	r3, r0
   1d77c:	str	r3, [fp, #-8]
   1d780:	ldr	r3, [fp, #-8]
   1d784:	cmp	r3, #0
   1d788:	beq	1d828 <__assert_fail@plt+0xb13c>
   1d78c:	ldr	r0, [fp, #-16]
   1d790:	bl	1217c <strdup@plt>
   1d794:	mov	r3, r0
   1d798:	mov	r2, r3
   1d79c:	ldr	r3, [fp, #-8]
   1d7a0:	str	r2, [r3]
   1d7a4:	ldr	r3, [fp, #-8]
   1d7a8:	ldr	r3, [r3]
   1d7ac:	cmp	r3, #0
   1d7b0:	beq	1d820 <__assert_fail@plt+0xb134>
   1d7b4:	movw	r3, #54872	; 0xd658
   1d7b8:	movt	r3, #1
   1d7bc:	str	r3, [sp]
   1d7c0:	movw	r3, #54744	; 0xd5d8
   1d7c4:	movt	r3, #1
   1d7c8:	movw	r2, #55020	; 0xd6ec
   1d7cc:	movt	r2, #1
   1d7d0:	mov	r1, #0
   1d7d4:	mov	r0, #11
   1d7d8:	bl	2d0b4 <__assert_fail@plt+0x1a9c8>
   1d7dc:	mov	r3, r0
   1d7e0:	mov	r2, r3
   1d7e4:	ldr	r3, [fp, #-8]
   1d7e8:	str	r2, [r3, #4]
   1d7ec:	ldr	r3, [fp, #-8]
   1d7f0:	ldr	r3, [r3, #4]
   1d7f4:	cmp	r3, #0
   1d7f8:	beq	1d804 <__assert_fail@plt+0xb118>
   1d7fc:	ldr	r3, [fp, #-8]
   1d800:	b	1d82c <__assert_fail@plt+0xb140>
   1d804:	ldr	r3, [fp, #-8]
   1d808:	ldr	r3, [r3]
   1d80c:	mov	r0, r3
   1d810:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1d814:	ldr	r0, [fp, #-8]
   1d818:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1d81c:	b	1d828 <__assert_fail@plt+0xb13c>
   1d820:	ldr	r0, [fp, #-8]
   1d824:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1d828:	mov	r3, #0
   1d82c:	mov	r0, r3
   1d830:	sub	sp, fp, #4
   1d834:	ldr	fp, [sp]
   1d838:	add	sp, sp, #4
   1d83c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d840:	str	fp, [sp, #-8]!
   1d844:	str	lr, [sp, #4]
   1d848:	add	fp, sp, #4
   1d84c:	sub	sp, sp, #16
   1d850:	str	r0, [fp, #-16]
   1d854:	ldr	r3, [fp, #-16]
   1d858:	str	r3, [fp, #-8]
   1d85c:	ldr	r3, [fp, #-8]
   1d860:	ldr	r3, [r3]
   1d864:	mov	r0, r3
   1d868:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1d86c:	ldr	r3, [fp, #-8]
   1d870:	ldr	r3, [r3, #4]
   1d874:	mov	r0, r3
   1d878:	bl	2d3a8 <__assert_fail@plt+0x1acbc>
   1d87c:	nop	{0}
   1d880:	sub	sp, fp, #4
   1d884:	ldr	fp, [sp]
   1d888:	add	sp, sp, #4
   1d88c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d890:	str	fp, [sp, #-8]!
   1d894:	str	lr, [sp, #4]
   1d898:	add	fp, sp, #4
   1d89c:	sub	sp, sp, #136	; 0x88
   1d8a0:	str	r0, [fp, #-136]	; 0xffffff78
   1d8a4:	str	r1, [fp, #-140]	; 0xffffff74
   1d8a8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d8ac:	str	r3, [fp, #-8]
   1d8b0:	mov	r0, #24
   1d8b4:	bl	43510 <__assert_fail@plt+0x30e24>
   1d8b8:	mov	r3, r0
   1d8bc:	str	r3, [fp, #-12]
   1d8c0:	ldr	r3, [fp, #-12]
   1d8c4:	cmp	r3, #0
   1d8c8:	bne	1d8d4 <__assert_fail@plt+0xb1e8>
   1d8cc:	mov	r3, #0
   1d8d0:	b	1da6c <__assert_fail@plt+0xb380>
   1d8d4:	ldr	r0, [fp, #-140]	; 0xffffff74
   1d8d8:	bl	1217c <strdup@plt>
   1d8dc:	mov	r3, r0
   1d8e0:	mov	r2, r3
   1d8e4:	ldr	r3, [fp, #-12]
   1d8e8:	str	r2, [r3, #16]
   1d8ec:	ldr	r3, [fp, #-12]
   1d8f0:	ldr	r3, [r3, #16]
   1d8f4:	cmp	r3, #0
   1d8f8:	bne	1d90c <__assert_fail@plt+0xb220>
   1d8fc:	ldr	r0, [fp, #-12]
   1d900:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1d904:	mov	r3, #0
   1d908:	b	1da6c <__assert_fail@plt+0xb380>
   1d90c:	ldr	r3, [fp, #-8]
   1d910:	ldr	r3, [r3]
   1d914:	mov	r1, r3
   1d918:	ldr	r0, [fp, #-140]	; 0xffffff74
   1d91c:	bl	2c37c <__assert_fail@plt+0x19c90>
   1d920:	mov	r2, r0
   1d924:	ldr	r3, [fp, #-12]
   1d928:	str	r2, [r3, #20]
   1d92c:	ldr	r3, [fp, #-12]
   1d930:	ldr	r3, [r3, #20]
   1d934:	cmp	r3, #0
   1d938:	bne	1d94c <__assert_fail@plt+0xb260>
   1d93c:	ldr	r0, [fp, #-12]
   1d940:	bl	1d658 <__assert_fail@plt+0xaf6c>
   1d944:	mov	r3, #0
   1d948:	b	1da6c <__assert_fail@plt+0xb380>
   1d94c:	ldr	r3, [fp, #-12]
   1d950:	ldr	r3, [r3, #20]
   1d954:	mov	r0, r3
   1d958:	bl	12488 <fileno@plt>
   1d95c:	str	r0, [fp, #-16]
   1d960:	ldr	r3, [fp, #-16]
   1d964:	cmp	r3, #0
   1d968:	bge	1d98c <__assert_fail@plt+0xb2a0>
   1d96c:	movw	r3, #28740	; 0x7044
   1d970:	movt	r3, #6
   1d974:	mov	r2, #166	; 0xa6
   1d978:	movw	r1, #28720	; 0x7030
   1d97c:	movt	r1, #6
   1d980:	movw	r0, #28732	; 0x703c
   1d984:	movt	r0, #6
   1d988:	bl	126ec <__assert_fail@plt>
   1d98c:	mov	r1, #1
   1d990:	ldr	r0, [fp, #-16]
   1d994:	bl	2b8a0 <__assert_fail@plt+0x191b4>
   1d998:	sub	r3, fp, #132	; 0x84
   1d99c:	mov	r1, r3
   1d9a0:	ldr	r0, [fp, #-16]
   1d9a4:	bl	64ca4 <__assert_fail@plt+0x525b8>
   1d9a8:	mov	r3, r0
   1d9ac:	cmp	r3, #0
   1d9b0:	bge	1d9c4 <__assert_fail@plt+0xb2d8>
   1d9b4:	ldr	r0, [fp, #-12]
   1d9b8:	bl	1d658 <__assert_fail@plt+0xaf6c>
   1d9bc:	mov	r3, #0
   1d9c0:	b	1da6c <__assert_fail@plt+0xb380>
   1d9c4:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   1d9c8:	ldr	r1, [fp, #-12]
   1d9cc:	strd	r2, [r1]
   1d9d0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d9d4:	ldr	r1, [fp, #-12]
   1d9d8:	strd	r2, [r1, #8]
   1d9dc:	ldr	r3, [fp, #-8]
   1d9e0:	ldr	r3, [r3, #4]
   1d9e4:	ldr	r1, [fp, #-12]
   1d9e8:	mov	r0, r3
   1d9ec:	bl	2c810 <__assert_fail@plt+0x1a124>
   1d9f0:	str	r0, [fp, #-20]	; 0xffffffec
   1d9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9f8:	cmp	r3, #0
   1d9fc:	beq	1da14 <__assert_fail@plt+0xb328>
   1da00:	ldr	r0, [fp, #-12]
   1da04:	bl	1d658 <__assert_fail@plt+0xaf6c>
   1da08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da0c:	ldr	r3, [r3, #20]
   1da10:	b	1da6c <__assert_fail@plt+0xb380>
   1da14:	ldr	r3, [fp, #-8]
   1da18:	ldr	r3, [r3, #4]
   1da1c:	ldr	r1, [fp, #-12]
   1da20:	mov	r0, r3
   1da24:	bl	2de60 <__assert_fail@plt+0x1b774>
   1da28:	mov	r3, r0
   1da2c:	cmp	r3, #0
   1da30:	beq	1da40 <__assert_fail@plt+0xb354>
   1da34:	ldr	r3, [fp, #-12]
   1da38:	ldr	r3, [r3, #20]
   1da3c:	b	1da6c <__assert_fail@plt+0xb380>
   1da40:	bl	12404 <__errno_location@plt>
   1da44:	mov	r3, r0
   1da48:	ldr	r3, [r3]
   1da4c:	str	r3, [fp, #-24]	; 0xffffffe8
   1da50:	ldr	r0, [fp, #-12]
   1da54:	bl	1d658 <__assert_fail@plt+0xaf6c>
   1da58:	bl	12404 <__errno_location@plt>
   1da5c:	mov	r2, r0
   1da60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da64:	str	r3, [r2]
   1da68:	mov	r3, #0
   1da6c:	mov	r0, r3
   1da70:	sub	sp, fp, #4
   1da74:	ldr	fp, [sp]
   1da78:	add	sp, sp, #4
   1da7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1da80:	str	r4, [sp, #-12]!
   1da84:	str	fp, [sp, #4]
   1da88:	str	lr, [sp, #8]
   1da8c:	add	fp, sp, #8
   1da90:	sub	sp, sp, #28
   1da94:	str	r0, [fp, #-24]	; 0xffffffe8
   1da98:	str	r1, [fp, #-28]	; 0xffffffe4
   1da9c:	str	r2, [fp, #-32]	; 0xffffffe0
   1daa0:	str	r3, [fp, #-36]	; 0xffffffdc
   1daa4:	mov	r3, #0
   1daa8:	str	r3, [fp, #-16]
   1daac:	ldrb	r3, [fp, #4]
   1dab0:	cmp	r3, #123	; 0x7b
   1dab4:	bne	1dad8 <__assert_fail@plt+0xb3ec>
   1dab8:	movw	r3, #29864	; 0x74a8
   1dabc:	movt	r3, #6
   1dac0:	mov	r2, #78	; 0x4e
   1dac4:	movw	r1, #28756	; 0x7054
   1dac8:	movt	r1, #6
   1dacc:	movw	r0, #28764	; 0x705c
   1dad0:	movt	r0, #6
   1dad4:	bl	126ec <__assert_fail@plt>
   1dad8:	ldrb	r3, [fp, #4]
   1dadc:	cmp	r3, #91	; 0x5b
   1dae0:	bne	1db04 <__assert_fail@plt+0xb418>
   1dae4:	movw	r3, #29864	; 0x74a8
   1dae8:	movt	r3, #6
   1daec:	mov	r2, #79	; 0x4f
   1daf0:	movw	r1, #28756	; 0x7054
   1daf4:	movt	r1, #6
   1daf8:	movw	r0, #28784	; 0x7070
   1dafc:	movt	r0, #6
   1db00:	bl	126ec <__assert_fail@plt>
   1db04:	ldrb	r3, [fp, #4]
   1db08:	cmp	r3, #40	; 0x28
   1db0c:	bne	1db30 <__assert_fail@plt+0xb444>
   1db10:	movw	r3, #29864	; 0x74a8
   1db14:	movt	r3, #6
   1db18:	mov	r2, #80	; 0x50
   1db1c:	movw	r1, #28756	; 0x7054
   1db20:	movt	r1, #6
   1db24:	movw	r0, #28804	; 0x7084
   1db28:	movt	r0, #6
   1db2c:	bl	126ec <__assert_fail@plt>
   1db30:	mov	r0, #20
   1db34:	bl	3d8ec <__assert_fail@plt+0x2b200>
   1db38:	mov	r3, r0
   1db3c:	mov	r2, r3
   1db40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db44:	str	r2, [r3]
   1db48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db4c:	ldr	r3, [r3]
   1db50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1db54:	str	r2, [r3]
   1db58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db5c:	ldr	r3, [r3]
   1db60:	ldrb	r2, [fp, #4]
   1db64:	strb	r2, [r3, #4]
   1db68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db6c:	ldr	r3, [r3]
   1db70:	ldrb	r2, [fp, #8]
   1db74:	strb	r2, [r3, #5]
   1db78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db7c:	ldr	r3, [r3]
   1db80:	mov	r2, #0
   1db84:	str	r2, [r3, #16]
   1db88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db8c:	ldr	r3, [r3]
   1db90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1db94:	str	r2, [r3, #12]
   1db98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db9c:	add	r2, r3, #2
   1dba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dba4:	ldr	r4, [r3]
   1dba8:	mov	r0, r2
   1dbac:	bl	3d8ec <__assert_fail@plt+0x2b200>
   1dbb0:	mov	r3, r0
   1dbb4:	str	r3, [r4, #8]
   1dbb8:	ldr	r3, [r4, #8]
   1dbbc:	str	r3, [fp, #-20]	; 0xffffffec
   1dbc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbc4:	mov	r2, r3
   1dbc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dbcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dbd0:	bl	12458 <strncpy@plt>
   1dbd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dbdc:	add	r3, r2, r3
   1dbe0:	str	r3, [fp, #-20]	; 0xffffffec
   1dbe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dbe8:	cmp	r3, #0
   1dbec:	beq	1dbfc <__assert_fail@plt+0xb510>
   1dbf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dbf4:	cmp	r3, #1
   1dbf8:	bne	1dc90 <__assert_fail@plt+0xb5a4>
   1dbfc:	ldrb	r3, [fp, #4]
   1dc00:	cmp	r3, #0
   1dc04:	beq	1dc28 <__assert_fail@plt+0xb53c>
   1dc08:	movw	r3, #29864	; 0x74a8
   1dc0c:	movt	r3, #6
   1dc10:	mov	r2, #97	; 0x61
   1dc14:	movw	r1, #28756	; 0x7054
   1dc18:	movt	r1, #6
   1dc1c:	movw	r0, #28824	; 0x7098
   1dc20:	movt	r0, #6
   1dc24:	bl	126ec <__assert_fail@plt>
   1dc28:	ldrb	r3, [fp, #8]
   1dc2c:	cmp	r3, #0
   1dc30:	beq	1dc54 <__assert_fail@plt+0xb568>
   1dc34:	movw	r3, #29864	; 0x74a8
   1dc38:	movt	r3, #6
   1dc3c:	mov	r2, #98	; 0x62
   1dc40:	movw	r1, #28756	; 0x7054
   1dc44:	movt	r1, #6
   1dc48:	movw	r0, #28844	; 0x70ac
   1dc4c:	movt	r0, #6
   1dc50:	bl	126ec <__assert_fail@plt>
   1dc54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc58:	mov	r2, #0
   1dc5c:	strb	r2, [r3]
   1dc60:	ldr	r3, [fp, #12]
   1dc64:	ldr	r3, [r3, #24]
   1dc68:	ldr	r2, [fp, #-16]
   1dc6c:	cmp	r2, r3
   1dc70:	bls	1dc80 <__assert_fail@plt+0xb594>
   1dc74:	ldr	r3, [fp, #12]
   1dc78:	mov	r2, #0
   1dc7c:	str	r2, [r3, #24]
   1dc80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc84:	ldr	r3, [r3]
   1dc88:	add	r3, r3, #16
   1dc8c:	b	1e03c <__assert_fail@plt+0xb950>
   1dc90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc94:	cmp	r3, #2
   1dc98:	beq	1dcbc <__assert_fail@plt+0xb5d0>
   1dc9c:	movw	r3, #29864	; 0x74a8
   1dca0:	movt	r3, #6
   1dca4:	mov	r2, #105	; 0x69
   1dca8:	movw	r1, #28756	; 0x7054
   1dcac:	movt	r1, #6
   1dcb0:	movw	r0, #28868	; 0x70c4
   1dcb4:	movt	r0, #6
   1dcb8:	bl	126ec <__assert_fail@plt>
   1dcbc:	ldrb	r3, [fp, #4]
   1dcc0:	sub	r3, r3, #37	; 0x25
   1dcc4:	cmp	r3, #84	; 0x54
   1dcc8:	ldrls	pc, [pc, r3, lsl #2]
   1dccc:	b	1e004 <__assert_fail@plt+0xb918>
   1dcd0:	andeq	sp, r1, r4, lsr #28
   1dcd4:	andeq	lr, r1, r4
   1dcd8:	andeq	lr, r1, r4
   1dcdc:	andeq	lr, r1, r4
   1dce0:	andeq	lr, r1, r4
   1dce4:	andeq	lr, r1, r4
   1dce8:	andeq	lr, r1, r4
   1dcec:	andeq	lr, r1, r4
   1dcf0:	andeq	lr, r1, r4
   1dcf4:	andeq	lr, r1, r4
   1dcf8:	andeq	lr, r1, r4
   1dcfc:	andeq	lr, r1, r4
   1dd00:	andeq	lr, r1, r4
   1dd04:	andeq	lr, r1, r4
   1dd08:	andeq	lr, r1, r4
   1dd0c:	andeq	lr, r1, r4
   1dd10:	andeq	lr, r1, r4
   1dd14:	andeq	lr, r1, r4
   1dd18:	andeq	lr, r1, r4
   1dd1c:	andeq	lr, r1, r4
   1dd20:	andeq	lr, r1, r4
   1dd24:	andeq	lr, r1, r4
   1dd28:	andeq	lr, r1, r4
   1dd2c:	andeq	lr, r1, r4
   1dd30:	andeq	lr, r1, r4
   1dd34:	andeq	lr, r1, r4
   1dd38:	andeq	lr, r1, r4
   1dd3c:	andeq	lr, r1, r4
   1dd40:	andeq	sp, r1, r0, asr #29
   1dd44:	andeq	sp, r1, r0, asr #29
   1dd48:	andeq	sp, r1, r0, asr #29
   1dd4c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1dd50:	andeq	lr, r1, r4
   1dd54:	andeq	sp, r1, r0, asr #29
   1dd58:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1dd5c:	andeq	sp, r1, ip, ror pc
   1dd60:	andeq	lr, r1, r4
   1dd64:	andeq	lr, r1, r4
   1dd68:	andeq	lr, r1, r4
   1dd6c:	andeq	lr, r1, r4
   1dd70:	andeq	sp, r1, r0, asr #29
   1dd74:	andeq	lr, r1, r4
   1dd78:	andeq	lr, r1, r4
   1dd7c:	andeq	sp, r1, r4, asr #30
   1dd80:	andeq	lr, r1, r4
   1dd84:	andeq	lr, r1, r4
   1dd88:	andeq	sp, r1, ip, ror #29
   1dd8c:	andeq	sp, r1, r0, asr #29
   1dd90:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1dd94:	andeq	lr, r1, r4
   1dd98:	andeq	lr, r1, r4
   1dd9c:	andeq	lr, r1, r4
   1dda0:	andeq	sp, r1, r8, lsl pc
   1dda4:	andeq	sp, r1, ip, asr pc
   1dda8:	andeq	lr, r1, r4
   1ddac:	andeq	lr, r1, r4
   1ddb0:	andeq	lr, r1, r4
   1ddb4:	andeq	lr, r1, r4
   1ddb8:	andeq	lr, r1, r4
   1ddbc:	andeq	lr, r1, r4
   1ddc0:	andeq	sp, r1, r0, asr #29
   1ddc4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ddc8:	andeq	sp, r1, r0, asr #29
   1ddcc:	andeq	sp, r1, r0, asr #31
   1ddd0:	andeq	lr, r1, r4
   1ddd4:	andeq	sp, r1, r4, asr #30
   1ddd8:	andeq	sp, r1, r0, asr #29
   1dddc:	andeq	sp, r1, r4, asr #30
   1dde0:	muleq	r1, r4, lr
   1dde4:	andeq	lr, r1, r4
   1dde8:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ddec:	andeq	sp, r1, ip, lsr lr
   1ddf0:	ldrdeq	sp, [r1], -r8
   1ddf4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ddf8:	andeq	lr, r1, r4
   1ddfc:	andeq	sp, r1, r4, asr #30
   1de00:	andeq	lr, r1, r4
   1de04:	andeq	lr, r1, r4
   1de08:	andeq	sp, r1, r0, asr #29
   1de0c:	andeq	sp, r1, r0, asr #29
   1de10:	andeq	sp, r1, r0, asr #29
   1de14:	andeq	lr, r1, r4
   1de18:	andeq	lr, r1, r4
   1de1c:	andeq	lr, r1, r4
   1de20:	andeq	sp, r1, r8, ror #28
   1de24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de28:	add	r2, r3, #1
   1de2c:	str	r2, [fp, #-20]	; 0xffffffec
   1de30:	mov	r2, #37	; 0x25
   1de34:	strb	r2, [r3]
   1de38:	b	1e004 <__assert_fail@plt+0xb918>
   1de3c:	ldr	r3, [fp, #12]
   1de40:	mov	r2, #1
   1de44:	strb	r2, [r3, #18]
   1de48:	mov	r3, #4
   1de4c:	str	r3, [fp, #-16]
   1de50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de54:	add	r2, r3, #1
   1de58:	str	r2, [fp, #-20]	; 0xffffffec
   1de5c:	mov	r2, #115	; 0x73
   1de60:	strb	r2, [r3]
   1de64:	b	1e004 <__assert_fail@plt+0xb918>
   1de68:	ldr	r3, [fp, #12]
   1de6c:	mov	r2, #1
   1de70:	strb	r2, [r3, #19]
   1de74:	mov	r3, #2
   1de78:	str	r3, [fp, #-16]
   1de7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de80:	add	r2, r3, #1
   1de84:	str	r2, [fp, #-20]	; 0xffffffec
   1de88:	mov	r2, #115	; 0x73
   1de8c:	strb	r2, [r3]
   1de90:	b	1e004 <__assert_fail@plt+0xb918>
   1de94:	ldr	r3, [fp, #12]
   1de98:	mov	r2, #1
   1de9c:	strb	r2, [r3, #20]
   1dea0:	mov	r3, #1
   1dea4:	str	r3, [fp, #-16]
   1dea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1deac:	add	r2, r3, #1
   1deb0:	str	r2, [fp, #-20]	; 0xffffffec
   1deb4:	mov	r2, #115	; 0x73
   1deb8:	strb	r2, [r3]
   1debc:	b	1e004 <__assert_fail@plt+0xb918>
   1dec0:	ldr	r3, [fp, #12]
   1dec4:	mov	r2, #1
   1dec8:	strb	r2, [r3, #18]
   1decc:	mov	r3, #3
   1ded0:	str	r3, [fp, #-16]
   1ded4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ded8:	add	r2, r3, #1
   1dedc:	str	r2, [fp, #-20]	; 0xffffffec
   1dee0:	mov	r2, #115	; 0x73
   1dee4:	strb	r2, [r3]
   1dee8:	b	1e004 <__assert_fail@plt+0xb918>
   1deec:	ldr	r3, [fp, #12]
   1def0:	mov	r2, #1
   1def4:	strb	r2, [r3, #18]
   1def8:	mov	r3, #3
   1defc:	str	r3, [fp, #-16]
   1df00:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df04:	add	r2, r3, #1
   1df08:	str	r2, [fp, #-20]	; 0xffffffec
   1df0c:	mov	r2, #103	; 0x67
   1df10:	strb	r2, [r3]
   1df14:	b	1e004 <__assert_fail@plt+0xb918>
   1df18:	ldr	r3, [fp, #12]
   1df1c:	mov	r2, #1
   1df20:	strb	r2, [r3, #18]
   1df24:	mov	r3, #2
   1df28:	str	r3, [fp, #-16]
   1df2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df30:	add	r2, r3, #1
   1df34:	str	r2, [fp, #-20]	; 0xffffffec
   1df38:	mov	r2, #115	; 0x73
   1df3c:	strb	r2, [r3]
   1df40:	b	1e004 <__assert_fail@plt+0xb918>
   1df44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df48:	add	r2, r3, #1
   1df4c:	str	r2, [fp, #-20]	; 0xffffffec
   1df50:	mov	r2, #115	; 0x73
   1df54:	strb	r2, [r3]
   1df58:	b	1e004 <__assert_fail@plt+0xb918>
   1df5c:	mov	r3, #5
   1df60:	str	r3, [fp, #-16]
   1df64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df68:	add	r2, r3, #1
   1df6c:	str	r2, [fp, #-20]	; 0xffffffec
   1df70:	mov	r2, #115	; 0x73
   1df74:	strb	r2, [r3]
   1df78:	b	1e004 <__assert_fail@plt+0xb918>
   1df7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df80:	add	r2, r3, #1
   1df84:	str	r2, [fp, #-20]	; 0xffffffec
   1df88:	mov	r2, #115	; 0x73
   1df8c:	strb	r2, [r3]
   1df90:	b	1e004 <__assert_fail@plt+0xb918>
   1df94:	ldr	r3, [fp, #12]
   1df98:	mov	r2, #1
   1df9c:	strb	r2, [r3, #18]
   1dfa0:	mov	r3, #3
   1dfa4:	str	r3, [fp, #-16]
   1dfa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfac:	add	r2, r3, #1
   1dfb0:	str	r2, [fp, #-20]	; 0xffffffec
   1dfb4:	mov	r2, #115	; 0x73
   1dfb8:	strb	r2, [r3]
   1dfbc:	b	1e004 <__assert_fail@plt+0xb918>
   1dfc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfc4:	add	r2, r3, #1
   1dfc8:	str	r2, [fp, #-20]	; 0xffffffec
   1dfcc:	mov	r2, #100	; 0x64
   1dfd0:	strb	r2, [r3]
   1dfd4:	b	1e004 <__assert_fail@plt+0xb918>
   1dfd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfdc:	add	r2, r3, #1
   1dfe0:	str	r2, [fp, #-20]	; 0xffffffec
   1dfe4:	mov	r2, #111	; 0x6f
   1dfe8:	strb	r2, [r3]
   1dfec:	ldr	r3, [fp, #12]
   1dff0:	mov	r2, #1
   1dff4:	strb	r2, [r3, #18]
   1dff8:	mov	r3, #3
   1dffc:	str	r3, [fp, #-16]
   1e000:	nop	{0}
   1e004:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e008:	mov	r2, #0
   1e00c:	strb	r2, [r3]
   1e010:	ldr	r3, [fp, #12]
   1e014:	ldr	r3, [r3, #24]
   1e018:	ldr	r2, [fp, #-16]
   1e01c:	cmp	r2, r3
   1e020:	bls	1e030 <__assert_fail@plt+0xb944>
   1e024:	ldr	r3, [fp, #12]
   1e028:	ldr	r2, [fp, #-16]
   1e02c:	str	r2, [r3, #24]
   1e030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e034:	ldr	r3, [r3]
   1e038:	add	r3, r3, #16
   1e03c:	mov	r0, r3
   1e040:	sub	sp, fp, #8
   1e044:	ldr	r4, [sp]
   1e048:	ldr	fp, [sp, #4]
   1e04c:	add	sp, sp, #8
   1e050:	pop	{pc}		; (ldr pc, [sp], #4)
   1e054:	push	{fp}		; (str fp, [sp, #-4]!)
   1e058:	add	fp, sp, #0
   1e05c:	sub	sp, sp, #12
   1e060:	mov	r3, r0
   1e064:	strb	r3, [fp, #-5]
   1e068:	ldrb	r3, [fp, #-5]
   1e06c:	cmp	r3, #47	; 0x2f
   1e070:	bls	1e088 <__assert_fail@plt+0xb99c>
   1e074:	ldrb	r3, [fp, #-5]
   1e078:	cmp	r3, #55	; 0x37
   1e07c:	bhi	1e088 <__assert_fail@plt+0xb99c>
   1e080:	mov	r3, #1
   1e084:	b	1e08c <__assert_fail@plt+0xb9a0>
   1e088:	mov	r3, #0
   1e08c:	and	r3, r3, #1
   1e090:	uxtb	r3, r3
   1e094:	mov	r0, r3
   1e098:	add	sp, fp, #0
   1e09c:	pop	{fp}		; (ldr fp, [sp], #4)
   1e0a0:	bx	lr
   1e0a4:	strd	r4, [sp, #-16]!
   1e0a8:	str	fp, [sp, #8]
   1e0ac:	str	lr, [sp, #12]
   1e0b0:	add	fp, sp, #12
   1e0b4:	sub	sp, sp, #16
   1e0b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e0bc:	str	r1, [fp, #-28]	; 0xffffffe4
   1e0c0:	mov	r3, #0
   1e0c4:	str	r3, [fp, #-16]
   1e0c8:	mov	r5, #0
   1e0cc:	mov	r4, r5
   1e0d0:	b	1e100 <__assert_fail@plt+0xba14>
   1e0d4:	lsl	r3, r5, #3
   1e0d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0dc:	ldr	r2, [fp, #-16]
   1e0e0:	add	r2, r1, r2
   1e0e4:	ldrb	r2, [r2]
   1e0e8:	add	r3, r3, r2
   1e0ec:	sub	r5, r3, #48	; 0x30
   1e0f0:	add	r4, r4, #1
   1e0f4:	ldr	r3, [fp, #-16]
   1e0f8:	add	r3, r3, #1
   1e0fc:	str	r3, [fp, #-16]
   1e100:	cmp	r4, #2
   1e104:	bgt	1e12c <__assert_fail@plt+0xba40>
   1e108:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e10c:	ldr	r3, [fp, #-16]
   1e110:	add	r3, r2, r3
   1e114:	ldrb	r3, [r3]
   1e118:	mov	r0, r3
   1e11c:	bl	1e054 <__assert_fail@plt+0xb968>
   1e120:	mov	r3, r0
   1e124:	cmp	r3, #0
   1e128:	bne	1e0d4 <__assert_fail@plt+0xb9e8>
   1e12c:	ldr	r3, [fp, #-16]
   1e130:	sub	r3, r3, #1
   1e134:	str	r3, [fp, #-16]
   1e138:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e13c:	ldr	r2, [fp, #-16]
   1e140:	str	r2, [r3]
   1e144:	uxtb	r3, r5
   1e148:	mov	r0, r3
   1e14c:	sub	sp, fp, #12
   1e150:	ldrd	r4, [sp]
   1e154:	ldr	fp, [sp, #8]
   1e158:	add	sp, sp, #12
   1e15c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e160:	push	{fp}		; (str fp, [sp, #-4]!)
   1e164:	add	fp, sp, #0
   1e168:	sub	sp, sp, #20
   1e16c:	mov	r3, r0
   1e170:	strb	r3, [fp, #-13]
   1e174:	mov	r3, #0
   1e178:	strb	r3, [fp, #-5]
   1e17c:	ldrb	r3, [fp, #-13]
   1e180:	sub	r3, r3, #92	; 0x5c
   1e184:	cmp	r3, #26
   1e188:	ldrls	pc, [pc, r3, lsl #2]
   1e18c:	b	1e25c <__assert_fail@plt+0xbb70>
   1e190:	andeq	lr, r1, r0, asr r2
   1e194:	andeq	lr, r1, ip, asr r2
   1e198:	andeq	lr, r1, ip, asr r2
   1e19c:	andeq	lr, r1, ip, asr r2
   1e1a0:	andeq	lr, r1, ip, asr r2
   1e1a4:	strdeq	lr, [r1], -ip
   1e1a8:	andeq	lr, r1, r8, lsl #4
   1e1ac:	andeq	lr, r1, ip, asr r2
   1e1b0:	andeq	lr, r1, ip, asr r2
   1e1b4:	andeq	lr, r1, ip, asr r2
   1e1b8:	andeq	lr, r1, r4, lsl r2
   1e1bc:	andeq	lr, r1, ip, asr r2
   1e1c0:	andeq	lr, r1, ip, asr r2
   1e1c4:	andeq	lr, r1, ip, asr r2
   1e1c8:	andeq	lr, r1, ip, asr r2
   1e1cc:	andeq	lr, r1, ip, asr r2
   1e1d0:	andeq	lr, r1, ip, asr r2
   1e1d4:	andeq	lr, r1, ip, asr r2
   1e1d8:	andeq	lr, r1, r0, lsr #4
   1e1dc:	andeq	lr, r1, ip, asr r2
   1e1e0:	andeq	lr, r1, ip, asr r2
   1e1e4:	andeq	lr, r1, ip, asr r2
   1e1e8:	andeq	lr, r1, ip, lsr #4
   1e1ec:	andeq	lr, r1, ip, asr r2
   1e1f0:	andeq	lr, r1, r8, lsr r2
   1e1f4:	andeq	lr, r1, ip, asr r2
   1e1f8:	andeq	lr, r1, r4, asr #4
   1e1fc:	mov	r3, #7
   1e200:	strb	r3, [fp, #-5]
   1e204:	b	1e25c <__assert_fail@plt+0xbb70>
   1e208:	mov	r3, #8
   1e20c:	strb	r3, [fp, #-5]
   1e210:	b	1e25c <__assert_fail@plt+0xbb70>
   1e214:	mov	r3, #12
   1e218:	strb	r3, [fp, #-5]
   1e21c:	b	1e25c <__assert_fail@plt+0xbb70>
   1e220:	mov	r3, #10
   1e224:	strb	r3, [fp, #-5]
   1e228:	b	1e25c <__assert_fail@plt+0xbb70>
   1e22c:	mov	r3, #13
   1e230:	strb	r3, [fp, #-5]
   1e234:	b	1e25c <__assert_fail@plt+0xbb70>
   1e238:	mov	r3, #9
   1e23c:	strb	r3, [fp, #-5]
   1e240:	b	1e25c <__assert_fail@plt+0xbb70>
   1e244:	mov	r3, #11
   1e248:	strb	r3, [fp, #-5]
   1e24c:	b	1e25c <__assert_fail@plt+0xbb70>
   1e250:	mov	r3, #92	; 0x5c
   1e254:	strb	r3, [fp, #-5]
   1e258:	nop	{0}
   1e25c:	ldrb	r3, [fp, #-5]
   1e260:	mov	r0, r3
   1e264:	add	sp, fp, #0
   1e268:	pop	{fp}		; (ldr fp, [sp], #4)
   1e26c:	bx	lr
   1e270:	str	fp, [sp, #-8]!
   1e274:	str	lr, [sp, #4]
   1e278:	add	fp, sp, #4
   1e27c:	sub	sp, sp, #16
   1e280:	str	r0, [fp, #-16]
   1e284:	mov	r3, #0
   1e288:	str	r3, [fp, #-8]
   1e28c:	ldr	r3, [fp, #-8]
   1e290:	add	r3, r3, #1
   1e294:	str	r3, [fp, #-8]
   1e298:	ldr	r2, [fp, #-16]
   1e29c:	ldr	r3, [fp, #-8]
   1e2a0:	add	r3, r2, r3
   1e2a4:	ldrb	r3, [r3]
   1e2a8:	cmp	r3, #0
   1e2ac:	beq	1e2ec <__assert_fail@plt+0xbc00>
   1e2b0:	ldr	r2, [fp, #-16]
   1e2b4:	ldr	r3, [fp, #-8]
   1e2b8:	add	r3, r2, r3
   1e2bc:	ldrb	r3, [r3]
   1e2c0:	mov	r1, r3
   1e2c4:	movw	r0, #28888	; 0x70d8
   1e2c8:	movt	r0, #6
   1e2cc:	bl	123c8 <strchr@plt>
   1e2d0:	mov	r3, r0
   1e2d4:	cmp	r3, #0
   1e2d8:	bne	1e28c <__assert_fail@plt+0xbba0>
   1e2dc:	b	1e2ec <__assert_fail@plt+0xbc00>
   1e2e0:	ldr	r3, [fp, #-8]
   1e2e4:	add	r3, r3, #1
   1e2e8:	str	r3, [fp, #-8]
   1e2ec:	bl	12368 <__ctype_b_loc@plt>
   1e2f0:	mov	r3, r0
   1e2f4:	ldr	r2, [r3]
   1e2f8:	ldr	r1, [fp, #-16]
   1e2fc:	ldr	r3, [fp, #-8]
   1e300:	add	r3, r1, r3
   1e304:	ldrb	r3, [r3]
   1e308:	lsl	r3, r3, #1
   1e30c:	add	r3, r2, r3
   1e310:	ldrh	r3, [r3]
   1e314:	and	r3, r3, #2048	; 0x800
   1e318:	cmp	r3, #0
   1e31c:	bne	1e2e0 <__assert_fail@plt+0xbbf4>
   1e320:	ldr	r2, [fp, #-16]
   1e324:	ldr	r3, [fp, #-8]
   1e328:	add	r3, r2, r3
   1e32c:	ldrb	r3, [r3]
   1e330:	cmp	r3, #46	; 0x2e
   1e334:	bne	1e388 <__assert_fail@plt+0xbc9c>
   1e338:	ldr	r3, [fp, #-8]
   1e33c:	add	r3, r3, #1
   1e340:	str	r3, [fp, #-8]
   1e344:	b	1e354 <__assert_fail@plt+0xbc68>
   1e348:	ldr	r3, [fp, #-8]
   1e34c:	add	r3, r3, #1
   1e350:	str	r3, [fp, #-8]
   1e354:	bl	12368 <__ctype_b_loc@plt>
   1e358:	mov	r3, r0
   1e35c:	ldr	r2, [r3]
   1e360:	ldr	r1, [fp, #-16]
   1e364:	ldr	r3, [fp, #-8]
   1e368:	add	r3, r1, r3
   1e36c:	ldrb	r3, [r3]
   1e370:	lsl	r3, r3, #1
   1e374:	add	r3, r2, r3
   1e378:	ldrh	r3, [r3]
   1e37c:	and	r3, r3, #2048	; 0x800
   1e380:	cmp	r3, #0
   1e384:	bne	1e348 <__assert_fail@plt+0xbc5c>
   1e388:	ldr	r3, [fp, #-8]
   1e38c:	mov	r0, r3
   1e390:	sub	sp, fp, #4
   1e394:	ldr	fp, [sp]
   1e398:	add	sp, sp, #4
   1e39c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3a0:	str	fp, [sp, #-8]!
   1e3a4:	str	lr, [sp, #4]
   1e3a8:	add	fp, sp, #4
   1e3ac:	sub	sp, sp, #8
   1e3b0:	mov	r3, r0
   1e3b4:	strb	r3, [fp, #-5]
   1e3b8:	ldrb	r3, [fp, #-5]
   1e3bc:	mov	r1, r3
   1e3c0:	movw	r0, #28896	; 0x70e0
   1e3c4:	movt	r0, #6
   1e3c8:	bl	123c8 <strchr@plt>
   1e3cc:	mov	r3, r0
   1e3d0:	cmp	r3, #0
   1e3d4:	beq	1e3e0 <__assert_fail@plt+0xbcf4>
   1e3d8:	mov	r3, #1
   1e3dc:	b	1e40c <__assert_fail@plt+0xbd20>
   1e3e0:	ldrb	r3, [fp, #-5]
   1e3e4:	mov	r1, r3
   1e3e8:	movw	r0, #28928	; 0x7100
   1e3ec:	movt	r0, #6
   1e3f0:	bl	123c8 <strchr@plt>
   1e3f4:	mov	r3, r0
   1e3f8:	cmp	r3, #0
   1e3fc:	beq	1e408 <__assert_fail@plt+0xbd1c>
   1e400:	mov	r3, #2
   1e404:	b	1e40c <__assert_fail@plt+0xbd20>
   1e408:	mov	r3, #0
   1e40c:	mov	r0, r3
   1e410:	sub	sp, fp, #4
   1e414:	ldr	fp, [sp]
   1e418:	add	sp, sp, #4
   1e41c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e420:	str	fp, [sp, #-8]!
   1e424:	str	lr, [sp, #4]
   1e428:	add	fp, sp, #4
   1e42c:	sub	sp, sp, #64	; 0x40
   1e430:	str	r0, [fp, #-40]	; 0xffffffd8
   1e434:	str	r1, [fp, #-44]	; 0xffffffd4
   1e438:	str	r2, [fp, #-48]	; 0xffffffd0
   1e43c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e440:	str	r3, [fp, #-8]
   1e444:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e448:	movw	r1, #1812	; 0x714
   1e44c:	movt	r1, #2
   1e450:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e454:	bl	1b22c <__assert_fail@plt+0x8b40>
   1e458:	str	r0, [fp, #-28]	; 0xffffffe4
   1e45c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e460:	mov	r2, #1
   1e464:	strb	r2, [r3, #17]
   1e468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e46c:	ldrb	r2, [r3, #17]
   1e470:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e474:	strb	r2, [r3, #16]
   1e478:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e47c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e480:	add	r3, r3, #40	; 0x28
   1e484:	ldrd	r0, [r2]
   1e488:	strd	r0, [r3]
   1e48c:	ldrd	r0, [r2, #8]
   1e490:	strd	r0, [r3, #8]
   1e494:	ldr	r2, [r2, #16]
   1e498:	str	r2, [r3, #16]
   1e49c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4a0:	mov	r2, #0
   1e4a4:	strb	r2, [r3, #19]
   1e4a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4ac:	mov	r2, #0
   1e4b0:	strb	r2, [r3, #18]
   1e4b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4b8:	mov	r2, #0
   1e4bc:	str	r2, [r3, #24]
   1e4c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4c4:	add	r3, r3, #40	; 0x28
   1e4c8:	str	r3, [fp, #-16]
   1e4cc:	ldr	r3, [fp, #-16]
   1e4d0:	mov	r2, #0
   1e4d4:	str	r2, [r3]
   1e4d8:	ldr	r3, [fp, #-8]
   1e4dc:	str	r3, [fp, #-12]
   1e4e0:	b	1e960 <__assert_fail@plt+0xc274>
   1e4e4:	ldr	r3, [fp, #-12]
   1e4e8:	ldrb	r3, [r3]
   1e4ec:	cmp	r3, #92	; 0x5c
   1e4f0:	bne	1e570 <__assert_fail@plt+0xbe84>
   1e4f4:	ldr	r3, [fp, #-12]
   1e4f8:	add	r3, r3, #1
   1e4fc:	ldrb	r3, [r3]
   1e500:	cmp	r3, #99	; 0x63
   1e504:	bne	1e570 <__assert_fail@plt+0xbe84>
   1e508:	ldr	r2, [fp, #-12]
   1e50c:	ldr	r3, [fp, #-8]
   1e510:	sub	r2, r2, r3
   1e514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e518:	str	r3, [sp, #8]
   1e51c:	mov	r3, #0
   1e520:	str	r3, [sp, #4]
   1e524:	mov	r3, #0
   1e528:	str	r3, [sp]
   1e52c:	mov	r3, #1
   1e530:	ldr	r1, [fp, #-8]
   1e534:	ldr	r0, [fp, #-16]
   1e538:	bl	1da80 <__assert_fail@plt+0xb394>
   1e53c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e540:	ldrb	r3, [r3, #18]
   1e544:	cmp	r3, #0
   1e548:	beq	1e568 <__assert_fail@plt+0xbe7c>
   1e54c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e550:	ldr	r3, [r3, #24]
   1e554:	cmp	r3, #2
   1e558:	bhi	1e568 <__assert_fail@plt+0xbe7c>
   1e55c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e560:	mov	r2, #3
   1e564:	str	r2, [r3, #24]
   1e568:	mov	r3, #1
   1e56c:	b	1e9b8 <__assert_fail@plt+0xc2cc>
   1e570:	ldr	r3, [fp, #-12]
   1e574:	ldrb	r3, [r3]
   1e578:	cmp	r3, #92	; 0x5c
   1e57c:	bne	1e720 <__assert_fail@plt+0xc034>
   1e580:	mov	r3, #1
   1e584:	str	r3, [fp, #-20]	; 0xffffffec
   1e588:	ldr	r2, [fp, #-12]
   1e58c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e590:	add	r3, r2, r3
   1e594:	ldrb	r3, [r3]
   1e598:	cmp	r3, #0
   1e59c:	bne	1e5d0 <__assert_fail@plt+0xbee4>
   1e5a0:	movw	r0, #28936	; 0x7108
   1e5a4:	movt	r0, #6
   1e5a8:	bl	12398 <gettext@plt>
   1e5ac:	mov	r3, r0
   1e5b0:	mov	r2, r3
   1e5b4:	mov	r1, #0
   1e5b8:	mov	r0, #0
   1e5bc:	bl	122b4 <error@plt>
   1e5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e5c4:	sub	r3, r3, #1
   1e5c8:	str	r3, [fp, #-20]	; 0xffffffec
   1e5cc:	b	1e6bc <__assert_fail@plt+0xbfd0>
   1e5d0:	ldr	r2, [fp, #-12]
   1e5d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e5d8:	add	r3, r2, r3
   1e5dc:	ldrb	r3, [r3]
   1e5e0:	mov	r0, r3
   1e5e4:	bl	1e054 <__assert_fail@plt+0xb968>
   1e5e8:	mov	r3, r0
   1e5ec:	cmp	r3, #0
   1e5f0:	beq	1e63c <__assert_fail@plt+0xbf50>
   1e5f4:	mov	r3, #0
   1e5f8:	str	r3, [fp, #-36]	; 0xffffffdc
   1e5fc:	ldr	r2, [fp, #-12]
   1e600:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e604:	add	r3, r2, r3
   1e608:	sub	r2, fp, #36	; 0x24
   1e60c:	mov	r1, r2
   1e610:	mov	r0, r3
   1e614:	bl	1e0a4 <__assert_fail@plt+0xb9b8>
   1e618:	mov	r3, r0
   1e61c:	mov	r2, r3
   1e620:	ldr	r3, [fp, #-12]
   1e624:	strb	r2, [r3]
   1e628:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e62c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e630:	add	r3, r2, r3
   1e634:	str	r3, [fp, #-20]	; 0xffffffec
   1e638:	b	1e6bc <__assert_fail@plt+0xbfd0>
   1e63c:	ldr	r2, [fp, #-12]
   1e640:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e644:	add	r3, r2, r3
   1e648:	ldrb	r3, [r3]
   1e64c:	mov	r0, r3
   1e650:	bl	1e160 <__assert_fail@plt+0xba74>
   1e654:	mov	r3, r0
   1e658:	strb	r3, [fp, #-29]	; 0xffffffe3
   1e65c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1e660:	cmp	r3, #0
   1e664:	beq	1e678 <__assert_fail@plt+0xbf8c>
   1e668:	ldr	r3, [fp, #-12]
   1e66c:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   1e670:	strb	r2, [r3]
   1e674:	b	1e6bc <__assert_fail@plt+0xbfd0>
   1e678:	movw	r0, #28984	; 0x7138
   1e67c:	movt	r0, #6
   1e680:	bl	12398 <gettext@plt>
   1e684:	mov	r1, r0
   1e688:	ldr	r2, [fp, #-12]
   1e68c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e690:	add	r3, r2, r3
   1e694:	ldrb	r3, [r3]
   1e698:	mov	r2, r1
   1e69c:	mov	r1, #0
   1e6a0:	mov	r0, #0
   1e6a4:	bl	122b4 <error@plt>
   1e6a8:	ldr	r2, [fp, #-12]
   1e6ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e6b0:	add	r3, r2, r3
   1e6b4:	str	r3, [fp, #-12]
   1e6b8:	b	1e954 <__assert_fail@plt+0xc268>
   1e6bc:	ldr	r2, [fp, #-12]
   1e6c0:	ldr	r3, [fp, #-8]
   1e6c4:	sub	r3, r2, r3
   1e6c8:	add	r2, r3, #1
   1e6cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e6d0:	str	r3, [sp, #8]
   1e6d4:	mov	r3, #0
   1e6d8:	str	r3, [sp, #4]
   1e6dc:	mov	r3, #0
   1e6e0:	str	r3, [sp]
   1e6e4:	mov	r3, #0
   1e6e8:	ldr	r1, [fp, #-8]
   1e6ec:	ldr	r0, [fp, #-16]
   1e6f0:	bl	1da80 <__assert_fail@plt+0xb394>
   1e6f4:	str	r0, [fp, #-16]
   1e6f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e6fc:	add	r3, r3, #1
   1e700:	ldr	r2, [fp, #-12]
   1e704:	add	r3, r2, r3
   1e708:	str	r3, [fp, #-8]
   1e70c:	ldr	r2, [fp, #-12]
   1e710:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e714:	add	r3, r2, r3
   1e718:	str	r3, [fp, #-12]
   1e71c:	b	1e954 <__assert_fail@plt+0xc268>
   1e720:	ldr	r3, [fp, #-12]
   1e724:	ldrb	r3, [r3]
   1e728:	cmp	r3, #37	; 0x25
   1e72c:	bne	1e954 <__assert_fail@plt+0xc268>
   1e730:	ldr	r3, [fp, #-12]
   1e734:	add	r3, r3, #1
   1e738:	ldrb	r3, [r3]
   1e73c:	cmp	r3, #0
   1e740:	bne	1e764 <__assert_fail@plt+0xc078>
   1e744:	movw	r0, #29020	; 0x715c
   1e748:	movt	r0, #6
   1e74c:	bl	12398 <gettext@plt>
   1e750:	mov	r2, r0
   1e754:	ldr	r3, [fp, #-12]
   1e758:	mov	r1, #0
   1e75c:	mov	r0, #1
   1e760:	bl	122b4 <error@plt>
   1e764:	ldr	r3, [fp, #-12]
   1e768:	add	r3, r3, #1
   1e76c:	ldrb	r3, [r3]
   1e770:	cmp	r3, #37	; 0x25
   1e774:	bne	1e784 <__assert_fail@plt+0xc098>
   1e778:	mov	r3, #1
   1e77c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e780:	b	1e790 <__assert_fail@plt+0xc0a4>
   1e784:	ldr	r0, [fp, #-12]
   1e788:	bl	1e270 <__assert_fail@plt+0xbb84>
   1e78c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e790:	ldr	r2, [fp, #-12]
   1e794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e798:	add	r3, r2, r3
   1e79c:	str	r3, [fp, #-12]
   1e7a0:	ldr	r3, [fp, #-12]
   1e7a4:	ldrb	r3, [r3]
   1e7a8:	mov	r0, r3
   1e7ac:	bl	1e3a0 <__assert_fail@plt+0xbcb4>
   1e7b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7b8:	cmp	r3, #0
   1e7bc:	beq	1e858 <__assert_fail@plt+0xc16c>
   1e7c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7c4:	sub	r3, r3, #1
   1e7c8:	ldr	r2, [fp, #-12]
   1e7cc:	add	r3, r2, r3
   1e7d0:	ldrb	r3, [r3]
   1e7d4:	cmp	r3, #0
   1e7d8:	beq	1e858 <__assert_fail@plt+0xc16c>
   1e7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7e0:	cmp	r3, #2
   1e7e4:	bne	1e7f8 <__assert_fail@plt+0xc10c>
   1e7e8:	ldr	r3, [fp, #-12]
   1e7ec:	add	r3, r3, #1
   1e7f0:	ldrb	r3, [r3]
   1e7f4:	b	1e7fc <__assert_fail@plt+0xc110>
   1e7f8:	mov	r3, #0
   1e7fc:	strb	r3, [fp, #-30]	; 0xffffffe2
   1e800:	ldr	r2, [fp, #-12]
   1e804:	ldr	r3, [fp, #-8]
   1e808:	sub	r1, r2, r3
   1e80c:	ldr	r3, [fp, #-12]
   1e810:	ldrb	r3, [r3]
   1e814:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e818:	str	r2, [sp, #8]
   1e81c:	ldrb	r2, [fp, #-30]	; 0xffffffe2
   1e820:	str	r2, [sp, #4]
   1e824:	str	r3, [sp]
   1e828:	mov	r3, #2
   1e82c:	mov	r2, r1
   1e830:	ldr	r1, [fp, #-8]
   1e834:	ldr	r0, [fp, #-16]
   1e838:	bl	1da80 <__assert_fail@plt+0xb394>
   1e83c:	str	r0, [fp, #-16]
   1e840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e844:	sub	r3, r3, #1
   1e848:	ldr	r2, [fp, #-12]
   1e84c:	add	r3, r2, r3
   1e850:	str	r3, [fp, #-12]
   1e854:	b	1e948 <__assert_fail@plt+0xc25c>
   1e858:	ldr	r3, [fp, #-12]
   1e85c:	ldrb	r3, [r3]
   1e860:	mov	r1, r3
   1e864:	movw	r0, #29056	; 0x7180
   1e868:	movt	r0, #6
   1e86c:	bl	123c8 <strchr@plt>
   1e870:	mov	r3, r0
   1e874:	cmp	r3, #0
   1e878:	beq	1e8a0 <__assert_fail@plt+0xc1b4>
   1e87c:	movw	r0, #29060	; 0x7184
   1e880:	movt	r0, #6
   1e884:	bl	12398 <gettext@plt>
   1e888:	mov	r2, r0
   1e88c:	ldr	r3, [fp, #-12]
   1e890:	ldrb	r3, [r3]
   1e894:	mov	r1, #0
   1e898:	mov	r0, #1
   1e89c:	bl	122b4 <error@plt>
   1e8a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e8a4:	cmp	r3, #2
   1e8a8:	bne	1e8e8 <__assert_fail@plt+0xc1fc>
   1e8ac:	ldr	r3, [fp, #-12]
   1e8b0:	add	r3, r3, #1
   1e8b4:	ldrb	r3, [r3]
   1e8b8:	cmp	r3, #0
   1e8bc:	bne	1e8e8 <__assert_fail@plt+0xc1fc>
   1e8c0:	movw	r0, #29124	; 0x71c4
   1e8c4:	movt	r0, #6
   1e8c8:	bl	12398 <gettext@plt>
   1e8cc:	mov	r2, r0
   1e8d0:	ldr	r3, [fp, #-12]
   1e8d4:	ldrb	r3, [r3]
   1e8d8:	mov	r1, #0
   1e8dc:	mov	r0, #0
   1e8e0:	bl	122b4 <error@plt>
   1e8e4:	b	1e90c <__assert_fail@plt+0xc220>
   1e8e8:	movw	r0, #29200	; 0x7210
   1e8ec:	movt	r0, #6
   1e8f0:	bl	12398 <gettext@plt>
   1e8f4:	mov	r2, r0
   1e8f8:	ldr	r3, [fp, #-12]
   1e8fc:	ldrb	r3, [r3]
   1e900:	mov	r1, #0
   1e904:	mov	r0, #0
   1e908:	bl	122b4 <error@plt>
   1e90c:	ldr	r3, [fp, #-12]
   1e910:	add	r2, r3, #1
   1e914:	ldr	r3, [fp, #-8]
   1e918:	sub	r2, r2, r3
   1e91c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e920:	str	r3, [sp, #8]
   1e924:	mov	r3, #0
   1e928:	str	r3, [sp, #4]
   1e92c:	mov	r3, #0
   1e930:	str	r3, [sp]
   1e934:	mov	r3, #0
   1e938:	ldr	r1, [fp, #-8]
   1e93c:	ldr	r0, [fp, #-16]
   1e940:	bl	1da80 <__assert_fail@plt+0xb394>
   1e944:	str	r0, [fp, #-16]
   1e948:	ldr	r3, [fp, #-12]
   1e94c:	add	r3, r3, #1
   1e950:	str	r3, [fp, #-8]
   1e954:	ldr	r3, [fp, #-12]
   1e958:	add	r3, r3, #1
   1e95c:	str	r3, [fp, #-12]
   1e960:	ldr	r3, [fp, #-12]
   1e964:	ldrb	r3, [r3]
   1e968:	cmp	r3, #0
   1e96c:	bne	1e4e4 <__assert_fail@plt+0xbdf8>
   1e970:	ldr	r2, [fp, #-12]
   1e974:	ldr	r3, [fp, #-8]
   1e978:	cmp	r2, r3
   1e97c:	bls	1e9b4 <__assert_fail@plt+0xc2c8>
   1e980:	ldr	r2, [fp, #-12]
   1e984:	ldr	r3, [fp, #-8]
   1e988:	sub	r2, r2, r3
   1e98c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e990:	str	r3, [sp, #8]
   1e994:	mov	r3, #0
   1e998:	str	r3, [sp, #4]
   1e99c:	mov	r3, #0
   1e9a0:	str	r3, [sp]
   1e9a4:	mov	r3, #0
   1e9a8:	ldr	r1, [fp, #-8]
   1e9ac:	ldr	r0, [fp, #-16]
   1e9b0:	bl	1da80 <__assert_fail@plt+0xb394>
   1e9b4:	mov	r3, #1
   1e9b8:	mov	r0, r3
   1e9bc:	sub	sp, fp, #4
   1e9c0:	ldr	fp, [sp]
   1e9c4:	add	sp, sp, #4
   1e9c8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e9cc:	str	fp, [sp, #-8]!
   1e9d0:	str	lr, [sp, #4]
   1e9d4:	add	fp, sp, #4
   1e9d8:	sub	sp, sp, #24
   1e9dc:	str	r0, [fp, #-16]
   1e9e0:	str	r1, [fp, #-20]	; 0xffffffec
   1e9e4:	str	r2, [fp, #-24]	; 0xffffffe8
   1e9e8:	str	r3, [fp, #-28]	; 0xffffffe4
   1e9ec:	mov	r3, #0
   1e9f0:	strb	r3, [fp, #-5]
   1e9f4:	mov	r3, #0
   1e9f8:	str	r3, [fp, #-12]
   1e9fc:	b	1eb1c <__assert_fail@plt+0xc430>
   1ea00:	ldr	r2, [fp, #-16]
   1ea04:	ldr	r3, [fp, #-12]
   1ea08:	add	r3, r2, r3
   1ea0c:	ldrb	r2, [r3]
   1ea10:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ea14:	ldr	r3, [fp, #-12]
   1ea18:	add	r3, r1, r3
   1ea1c:	ldrb	r3, [r3]
   1ea20:	cmp	r2, r3
   1ea24:	beq	1eb10 <__assert_fail@plt+0xc424>
   1ea28:	bl	12368 <__ctype_b_loc@plt>
   1ea2c:	mov	r3, r0
   1ea30:	ldr	r2, [r3]
   1ea34:	ldr	r1, [fp, #-16]
   1ea38:	ldr	r3, [fp, #-12]
   1ea3c:	add	r3, r1, r3
   1ea40:	ldrb	r3, [r3]
   1ea44:	lsl	r3, r3, #1
   1ea48:	add	r3, r2, r3
   1ea4c:	ldrh	r3, [r3]
   1ea50:	and	r3, r3, #2048	; 0x800
   1ea54:	cmp	r3, #0
   1ea58:	beq	1ea90 <__assert_fail@plt+0xc3a4>
   1ea5c:	bl	12368 <__ctype_b_loc@plt>
   1ea60:	mov	r3, r0
   1ea64:	ldr	r2, [r3]
   1ea68:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ea6c:	ldr	r3, [fp, #-12]
   1ea70:	add	r3, r1, r3
   1ea74:	ldrb	r3, [r3]
   1ea78:	lsl	r3, r3, #1
   1ea7c:	add	r3, r2, r3
   1ea80:	ldrh	r3, [r3]
   1ea84:	and	r3, r3, #2048	; 0x800
   1ea88:	cmp	r3, #0
   1ea8c:	bne	1ea98 <__assert_fail@plt+0xc3ac>
   1ea90:	mov	r3, #0
   1ea94:	b	1eb88 <__assert_fail@plt+0xc49c>
   1ea98:	ldrb	r3, [fp, #-5]
   1ea9c:	eor	r3, r3, #1
   1eaa0:	uxtb	r3, r3
   1eaa4:	cmp	r3, #0
   1eaa8:	beq	1ead0 <__assert_fail@plt+0xc3e4>
   1eaac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eab0:	ldr	r2, [fp, #-12]
   1eab4:	str	r2, [r3]
   1eab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eabc:	mov	r2, #1
   1eac0:	str	r2, [r3]
   1eac4:	mov	r3, #1
   1eac8:	strb	r3, [fp, #-5]
   1eacc:	b	1eb10 <__assert_fail@plt+0xc424>
   1ead0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ead4:	ldr	r3, [r3]
   1ead8:	ldr	r2, [fp, #-12]
   1eadc:	sub	r2, r2, r3
   1eae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eae4:	ldr	r3, [r3]
   1eae8:	cmp	r2, r3
   1eaec:	bne	1eb08 <__assert_fail@plt+0xc41c>
   1eaf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eaf4:	ldr	r3, [r3]
   1eaf8:	add	r2, r3, #1
   1eafc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1eb00:	str	r2, [r3]
   1eb04:	b	1eb10 <__assert_fail@plt+0xc424>
   1eb08:	mov	r3, #0
   1eb0c:	b	1eb88 <__assert_fail@plt+0xc49c>
   1eb10:	ldr	r3, [fp, #-12]
   1eb14:	add	r3, r3, #1
   1eb18:	str	r3, [fp, #-12]
   1eb1c:	ldr	r2, [fp, #-16]
   1eb20:	ldr	r3, [fp, #-12]
   1eb24:	add	r3, r2, r3
   1eb28:	ldrb	r3, [r3]
   1eb2c:	cmp	r3, #0
   1eb30:	beq	1eb4c <__assert_fail@plt+0xc460>
   1eb34:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eb38:	ldr	r3, [fp, #-12]
   1eb3c:	add	r3, r2, r3
   1eb40:	ldrb	r3, [r3]
   1eb44:	cmp	r3, #0
   1eb48:	bne	1ea00 <__assert_fail@plt+0xc314>
   1eb4c:	ldr	r2, [fp, #-16]
   1eb50:	ldr	r3, [fp, #-12]
   1eb54:	add	r3, r2, r3
   1eb58:	ldrb	r3, [r3]
   1eb5c:	cmp	r3, #0
   1eb60:	bne	1eb7c <__assert_fail@plt+0xc490>
   1eb64:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eb68:	ldr	r3, [fp, #-12]
   1eb6c:	add	r3, r2, r3
   1eb70:	ldrb	r3, [r3]
   1eb74:	cmp	r3, #0
   1eb78:	beq	1eb84 <__assert_fail@plt+0xc498>
   1eb7c:	mov	r3, #0
   1eb80:	b	1eb88 <__assert_fail@plt+0xc49c>
   1eb84:	mov	r3, #1
   1eb88:	mov	r0, r3
   1eb8c:	sub	sp, fp, #4
   1eb90:	ldr	fp, [sp]
   1eb94:	add	sp, sp, #4
   1eb98:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb9c:	str	r4, [sp, #-12]!
   1eba0:	str	fp, [sp, #4]
   1eba4:	str	lr, [sp, #8]
   1eba8:	add	fp, sp, #8
   1ebac:	sub	sp, sp, #100	; 0x64
   1ebb0:	str	r0, [fp, #-96]	; 0xffffffa0
   1ebb4:	str	r1, [fp, #-100]	; 0xffffff9c
   1ebb8:	str	r2, [fp, #-104]	; 0xffffff98
   1ebbc:	str	r3, [fp, #-108]	; 0xffffff94
   1ebc0:	mov	r3, #0
   1ebc4:	str	r3, [fp, #-16]
   1ebc8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ebcc:	bl	123bc <strlen@plt>
   1ebd0:	mov	r3, r0
   1ebd4:	add	r3, r3, #2
   1ebd8:	mov	r0, r3
   1ebdc:	bl	3d8ec <__assert_fail@plt+0x2b200>
   1ebe0:	mov	r3, r0
   1ebe4:	str	r3, [fp, #-16]
   1ebe8:	ldr	r3, [fp, #-16]
   1ebec:	mov	r2, #95	; 0x5f
   1ebf0:	strb	r2, [r3]
   1ebf4:	ldr	r3, [fp, #-16]
   1ebf8:	add	r4, r3, #1
   1ebfc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ec00:	bl	123bc <strlen@plt>
   1ec04:	mov	r3, r0
   1ec08:	add	r3, r3, #1
   1ec0c:	mov	r2, r3
   1ec10:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1ec14:	mov	r0, r4
   1ec18:	bl	120f8 <memcpy@plt>
   1ec1c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1ec20:	sub	r3, fp, #80	; 0x50
   1ec24:	ldrd	r0, [r2]
   1ec28:	strd	r0, [r3]
   1ec2c:	ldrd	r0, [r2, #8]
   1ec30:	strd	r0, [r3, #8]
   1ec34:	ldrd	r0, [r2, #16]
   1ec38:	strd	r0, [r3, #16]
   1ec3c:	ldrd	r0, [r2, #24]
   1ec40:	strd	r0, [r3, #24]
   1ec44:	ldrd	r0, [r2, #32]
   1ec48:	strd	r0, [r3, #32]
   1ec4c:	ldr	r2, [r2, #40]	; 0x28
   1ec50:	str	r2, [r3, #40]	; 0x28
   1ec54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ec58:	cmp	r3, #10
   1ec5c:	ble	1ec70 <__assert_fail@plt+0xc584>
   1ec60:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ec64:	sub	r3, r3, #11
   1ec68:	str	r3, [fp, #-80]	; 0xffffffb0
   1ec6c:	b	1ec7c <__assert_fail@plt+0xc590>
   1ec70:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ec74:	add	r3, r3, #11
   1ec78:	str	r3, [fp, #-80]	; 0xffffffb0
   1ec7c:	movw	r3, #51064	; 0xc778
   1ec80:	movt	r3, #7
   1ec84:	ldr	r3, [r3]
   1ec88:	cmp	r3, #0
   1ec8c:	bne	1ecc8 <__assert_fail@plt+0xc5dc>
   1ec90:	movw	r3, #51068	; 0xc77c
   1ec94:	movt	r3, #7
   1ec98:	mov	r2, #1
   1ec9c:	str	r2, [r3]
   1eca0:	movw	r3, #51068	; 0xc77c
   1eca4:	movt	r3, #7
   1eca8:	ldr	r3, [r3]
   1ecac:	mov	r0, r3
   1ecb0:	bl	3d8ec <__assert_fail@plt+0x2b200>
   1ecb4:	mov	r3, r0
   1ecb8:	mov	r2, r3
   1ecbc:	movw	r3, #51064	; 0xc778
   1ecc0:	movt	r3, #7
   1ecc4:	str	r2, [r3]
   1ecc8:	movw	r3, #51064	; 0xc778
   1eccc:	movt	r3, #7
   1ecd0:	ldr	r0, [r3]
   1ecd4:	movw	r3, #51068	; 0xc77c
   1ecd8:	movt	r3, #7
   1ecdc:	ldr	r1, [r3]
   1ece0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ece4:	ldr	r2, [fp, #-16]
   1ece8:	bl	1232c <strftime@plt>
   1ecec:	str	r0, [fp, #-20]	; 0xffffffec
   1ecf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ecf4:	cmp	r3, #0
   1ecf8:	beq	1ef04 <__assert_fail@plt+0xc818>
   1ecfc:	movw	r3, #51068	; 0xc77c
   1ed00:	movt	r3, #7
   1ed04:	ldr	r3, [r3]
   1ed08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ed0c:	cmp	r2, r3
   1ed10:	bcs	1ef04 <__assert_fail@plt+0xc818>
   1ed14:	mov	r3, #0
   1ed18:	str	r3, [fp, #-84]	; 0xffffffac
   1ed1c:	mov	r3, #0
   1ed20:	str	r3, [fp, #-88]	; 0xffffffa8
   1ed24:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ed28:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ed2c:	add	r3, r2, r3
   1ed30:	add	r3, r3, #1
   1ed34:	str	r3, [fp, #-24]	; 0xffffffe8
   1ed38:	movw	r3, #51064	; 0xc778
   1ed3c:	movt	r3, #7
   1ed40:	ldr	r3, [r3]
   1ed44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ed48:	mov	r0, r3
   1ed4c:	bl	3d9a0 <__assert_fail@plt+0x2b2b4>
   1ed50:	mov	r2, r0
   1ed54:	movw	r3, #51064	; 0xc778
   1ed58:	movt	r3, #7
   1ed5c:	str	r2, [r3]
   1ed60:	movw	r3, #51068	; 0xc77c
   1ed64:	movt	r3, #7
   1ed68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed6c:	str	r2, [r3]
   1ed70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed74:	bl	3d8ec <__assert_fail@plt+0x2b200>
   1ed78:	mov	r3, r0
   1ed7c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ed80:	movw	r3, #51068	; 0xc77c
   1ed84:	movt	r3, #7
   1ed88:	ldr	r1, [r3]
   1ed8c:	sub	r3, fp, #80	; 0x50
   1ed90:	ldr	r2, [fp, #-16]
   1ed94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ed98:	bl	1232c <strftime@plt>
   1ed9c:	movw	r3, #51064	; 0xc778
   1eda0:	movt	r3, #7
   1eda4:	ldr	r0, [r3]
   1eda8:	sub	r3, fp, #88	; 0x58
   1edac:	sub	r2, fp, #84	; 0x54
   1edb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1edb4:	bl	1e9cc <__assert_fail@plt+0xc2e0>
   1edb8:	mov	r3, r0
   1edbc:	cmp	r3, #0
   1edc0:	beq	1eee0 <__assert_fail@plt+0xc7f4>
   1edc4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1edc8:	cmp	r3, #2
   1edcc:	bne	1eee0 <__assert_fail@plt+0xc7f4>
   1edd0:	bl	12368 <__ctype_b_loc@plt>
   1edd4:	mov	r3, r0
   1edd8:	ldr	r2, [r3]
   1eddc:	movw	r3, #51064	; 0xc778
   1ede0:	movt	r3, #7
   1ede4:	ldr	r1, [r3]
   1ede8:	ldr	r0, [fp, #-84]	; 0xffffffac
   1edec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1edf0:	add	r3, r0, r3
   1edf4:	add	r3, r1, r3
   1edf8:	ldrb	r3, [r3]
   1edfc:	lsl	r3, r3, #1
   1ee00:	add	r3, r2, r3
   1ee04:	ldrh	r3, [r3]
   1ee08:	and	r3, r3, #2048	; 0x800
   1ee0c:	cmp	r3, #0
   1ee10:	bne	1eee0 <__assert_fail@plt+0xc7f4>
   1ee14:	ldr	r2, [fp, #-84]	; 0xffffffac
   1ee18:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1ee1c:	add	r3, r2, r3
   1ee20:	str	r3, [fp, #-32]	; 0xffffffe0
   1ee24:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ee28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ee2c:	sub	r3, r2, r3
   1ee30:	add	r3, r3, #1
   1ee34:	str	r3, [fp, #-36]	; 0xffffffdc
   1ee38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ee3c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ee40:	add	r2, r2, r3
   1ee44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ee48:	add	r3, r2, r3
   1ee4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ee50:	cmp	r2, r3
   1ee54:	beq	1ee78 <__assert_fail@plt+0xc78c>
   1ee58:	movw	r3, #29880	; 0x74b8
   1ee5c:	movt	r3, #6
   1ee60:	movw	r2, #549	; 0x225
   1ee64:	movw	r1, #28756	; 0x7054
   1ee68:	movt	r1, #6
   1ee6c:	movw	r0, #29248	; 0x7240
   1ee70:	movt	r0, #6
   1ee74:	bl	126ec <__assert_fail@plt>
   1ee78:	movw	r3, #51064	; 0xc778
   1ee7c:	movt	r3, #7
   1ee80:	ldr	r2, [r3]
   1ee84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ee88:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ee8c:	add	r3, r1, r3
   1ee90:	add	r0, r2, r3
   1ee94:	movw	r3, #51064	; 0xc778
   1ee98:	movt	r3, #7
   1ee9c:	ldr	r2, [r3]
   1eea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1eea4:	add	r3, r2, r3
   1eea8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1eeac:	mov	r1, r3
   1eeb0:	bl	1208c <memmove@plt>
   1eeb4:	movw	r3, #51064	; 0xc778
   1eeb8:	movt	r3, #7
   1eebc:	ldr	r2, [r3]
   1eec0:	ldr	r1, [fp, #-84]	; 0xffffffac
   1eec4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1eec8:	add	r3, r1, r3
   1eecc:	add	r3, r2, r3
   1eed0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1eed4:	ldr	r1, [fp, #-104]	; 0xffffff98
   1eed8:	mov	r0, r3
   1eedc:	bl	120f8 <memcpy@plt>
   1eee0:	ldr	r0, [fp, #-16]
   1eee4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1eee8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eeec:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1eef0:	movw	r3, #51064	; 0xc778
   1eef4:	movt	r3, #7
   1eef8:	ldr	r3, [r3]
   1eefc:	add	r3, r3, #1
   1ef00:	b	1ef38 <__assert_fail@plt+0xc84c>
   1ef04:	movw	r3, #51064	; 0xc778
   1ef08:	movt	r3, #7
   1ef0c:	ldr	r3, [r3]
   1ef10:	mov	r2, #1
   1ef14:	movw	r1, #51068	; 0xc77c
   1ef18:	movt	r1, #7
   1ef1c:	mov	r0, r3
   1ef20:	bl	3dbdc <__assert_fail@plt+0x2b4f0>
   1ef24:	mov	r2, r0
   1ef28:	movw	r3, #51064	; 0xc778
   1ef2c:	movt	r3, #7
   1ef30:	str	r2, [r3]
   1ef34:	b	1ecc8 <__assert_fail@plt+0xc5dc>
   1ef38:	mov	r0, r3
   1ef3c:	sub	sp, fp, #8
   1ef40:	ldr	r4, [sp]
   1ef44:	ldr	fp, [sp, #4]
   1ef48:	add	sp, sp, #8
   1ef4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ef50:	str	fp, [sp, #-8]!
   1ef54:	str	lr, [sp, #4]
   1ef58:	add	fp, sp, #4
   1ef5c:	sub	sp, sp, #120	; 0x78
   1ef60:	sub	r3, fp, #100	; 0x64
   1ef64:	stm	r3, {r0, r1}
   1ef68:	str	r2, [fp, #-104]	; 0xffffff98
   1ef6c:	mov	r3, #0
   1ef70:	str	r3, [fp, #-8]
   1ef74:	mov	r3, #0
   1ef78:	str	r3, [fp, #-12]
   1ef7c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ef80:	cmp	r3, #43	; 0x2b
   1ef84:	bne	1efb4 <__assert_fail@plt+0xc8c8>
   1ef88:	movw	r3, #29300	; 0x7274
   1ef8c:	movt	r3, #6
   1ef90:	sub	r1, fp, #92	; 0x5c
   1ef94:	mov	r0, r3
   1ef98:	ldrd	r2, [r0]
   1ef9c:	strd	r2, [r1]
   1efa0:	ldr	r3, [r0, #8]
   1efa4:	str	r3, [r1, #8]
   1efa8:	mov	r3, #1
   1efac:	str	r3, [fp, #-12]
   1efb0:	b	1f060 <__assert_fail@plt+0xc974>
   1efb4:	mov	r3, #37	; 0x25
   1efb8:	strb	r3, [fp, #-92]	; 0xffffffa4
   1efbc:	ldr	r3, [fp, #-104]	; 0xffffff98
   1efc0:	uxtb	r3, r3
   1efc4:	strb	r3, [fp, #-91]	; 0xffffffa5
   1efc8:	mov	r3, #0
   1efcc:	strb	r3, [fp, #-90]	; 0xffffffa6
   1efd0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1efd4:	sub	r3, r3, #64	; 0x40
   1efd8:	cmp	r3, #24
   1efdc:	ldrls	pc, [pc, r3, lsl #2]
   1efe0:	b	1f054 <__assert_fail@plt+0xc968>
   1efe4:	andeq	pc, r1, r8, asr #32
   1efe8:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1efec:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1eff0:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1eff4:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1eff8:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1effc:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f000:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f004:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f008:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f00c:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f010:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f014:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f018:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f01c:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f020:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f024:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f028:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f02c:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f030:	andeq	pc, r1, r8, asr #32
   1f034:	andeq	pc, r1, r8, asr #32
   1f038:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f03c:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f040:	andeq	pc, r1, r4, asr r0	; <UNPREDICTABLE>
   1f044:	andeq	pc, r1, r8, asr #32
   1f048:	mov	r3, #1
   1f04c:	str	r3, [fp, #-12]
   1f050:	b	1f060 <__assert_fail@plt+0xc974>
   1f054:	mov	r3, #0
   1f058:	str	r3, [fp, #-12]
   1f05c:	nop	{0}
   1f060:	ldr	r3, [fp, #-12]
   1f064:	cmp	r3, #0
   1f068:	beq	1f0b4 <__assert_fail@plt+0xc9c8>
   1f06c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1f070:	sub	r0, fp, #80	; 0x50
   1f074:	movw	r2, #29312	; 0x7280
   1f078:	movt	r2, #6
   1f07c:	mov	r1, #32
   1f080:	bl	1241c <snprintf@plt>
   1f084:	str	r0, [fp, #-8]
   1f088:	ldr	r3, [fp, #-8]
   1f08c:	cmp	r3, #31
   1f090:	ble	1f0c4 <__assert_fail@plt+0xc9d8>
   1f094:	movw	r3, #29896	; 0x74c8
   1f098:	movt	r3, #6
   1f09c:	movw	r2, #665	; 0x299
   1f0a0:	movw	r1, #28756	; 0x7054
   1f0a4:	movt	r1, #6
   1f0a8:	movw	r0, #29320	; 0x7288
   1f0ac:	movt	r0, #6
   1f0b0:	bl	126ec <__assert_fail@plt>
   1f0b4:	mov	r3, #0
   1f0b8:	str	r3, [fp, #-8]
   1f0bc:	mov	r3, #0
   1f0c0:	strb	r3, [fp, #-80]	; 0xffffffb0
   1f0c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1f0c8:	cmp	r3, #64	; 0x40
   1f0cc:	beq	1f118 <__assert_fail@plt+0xca2c>
   1f0d0:	sub	r3, fp, #100	; 0x64
   1f0d4:	mov	r0, r3
   1f0d8:	bl	12344 <localtime@plt>
   1f0dc:	str	r0, [fp, #-20]	; 0xffffffec
   1f0e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f0e4:	cmp	r3, #0
   1f0e8:	beq	1f118 <__assert_fail@plt+0xca2c>
   1f0ec:	ldr	r3, [fp, #-8]
   1f0f0:	sub	r2, fp, #80	; 0x50
   1f0f4:	sub	r0, fp, #92	; 0x5c
   1f0f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f0fc:	bl	1eb9c <__assert_fail@plt+0xc4b0>
   1f100:	str	r0, [fp, #-24]	; 0xffffffe8
   1f104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f108:	cmp	r3, #0
   1f10c:	beq	1f118 <__assert_fail@plt+0xca2c>
   1f110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f114:	b	1f308 <__assert_fail@plt+0xcc1c>
   1f118:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f11c:	mov	r2, r3
   1f120:	asr	r3, r2, #31
   1f124:	strd	r2, [fp, #-36]	; 0xffffffdc
   1f128:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f12c:	cmp	r3, #0
   1f130:	bge	1f144 <__assert_fail@plt+0xca58>
   1f134:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1f138:	rsbs	r0, r2, #0
   1f13c:	rsc	r1, r3, #0
   1f140:	b	1f148 <__assert_fail@plt+0xca5c>
   1f144:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1f148:	ldr	ip, [pc, #460]	; 1f31c <__assert_fail@plt+0xcc30>
   1f14c:	mov	r2, #1
   1f150:	mov	r3, #0
   1f154:	strd	r2, [sp, #8]
   1f158:	mov	r2, #1
   1f15c:	mov	r3, #0
   1f160:	strd	r2, [sp]
   1f164:	mov	r3, #0
   1f168:	mov	r2, ip
   1f16c:	bl	2e30c <__assert_fail@plt+0x1bc20>
   1f170:	str	r0, [fp, #-16]
   1f174:	ldr	r2, [fp, #-16]
   1f178:	movw	r3, #51072	; 0xc780
   1f17c:	movt	r3, #7
   1f180:	cmp	r2, r3
   1f184:	bhi	1f1a8 <__assert_fail@plt+0xcabc>
   1f188:	movw	r3, #29896	; 0x74c8
   1f18c:	movt	r3, #6
   1f190:	movw	r2, #697	; 0x2b9
   1f194:	movw	r1, #28756	; 0x7054
   1f198:	movt	r1, #6
   1f19c:	movw	r0, #29348	; 0x72a4
   1f1a0:	movt	r0, #6
   1f1a4:	bl	126ec <__assert_fail@plt>
   1f1a8:	ldr	r2, [pc, #368]	; 1f320 <__assert_fail@plt+0xcc34>
   1f1ac:	ldr	r3, [fp, #-16]
   1f1b0:	cmp	r3, r2
   1f1b4:	bcc	1f1d8 <__assert_fail@plt+0xcaec>
   1f1b8:	movw	r3, #29896	; 0x74c8
   1f1bc:	movt	r3, #6
   1f1c0:	movw	r2, #698	; 0x2ba
   1f1c4:	movw	r1, #28756	; 0x7054
   1f1c8:	movt	r1, #6
   1f1cc:	movw	r0, #29356	; 0x72ac
   1f1d0:	movt	r0, #6
   1f1d4:	bl	126ec <__assert_fail@plt>
   1f1d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1f1dc:	cmp	r3, #0
   1f1e0:	bge	1f1fc <__assert_fail@plt+0xcb10>
   1f1e4:	ldr	r3, [fp, #-16]
   1f1e8:	sub	r3, r3, #1
   1f1ec:	str	r3, [fp, #-16]
   1f1f0:	ldr	r3, [fp, #-16]
   1f1f4:	mov	r2, #45	; 0x2d
   1f1f8:	strb	r2, [r3]
   1f1fc:	ldr	r3, [fp, #-12]
   1f200:	cmp	r3, #0
   1f204:	beq	1f304 <__assert_fail@plt+0xcc18>
   1f208:	ldr	r0, [fp, #-16]
   1f20c:	bl	123bc <strlen@plt>
   1f210:	str	r0, [fp, #-40]	; 0xffffffd8
   1f214:	ldr	r2, [fp, #-16]
   1f218:	movw	r3, #51072	; 0xc780
   1f21c:	movt	r3, #7
   1f220:	sub	r3, r2, r3
   1f224:	mov	r2, r3
   1f228:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f22c:	add	r3, r3, r2
   1f230:	str	r3, [fp, #-44]	; 0xffffffd4
   1f234:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f238:	movw	r2, #790	; 0x316
   1f23c:	cmp	r3, r2
   1f240:	bls	1f264 <__assert_fail@plt+0xcb78>
   1f244:	movw	r3, #29896	; 0x74c8
   1f248:	movt	r3, #6
   1f24c:	movw	r2, #711	; 0x2c7
   1f250:	movw	r1, #28756	; 0x7054
   1f254:	movt	r1, #6
   1f258:	movw	r0, #29384	; 0x72c8
   1f25c:	movt	r0, #6
   1f260:	bl	126ec <__assert_fail@plt>
   1f264:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1f268:	rsb	r3, r3, #788	; 0x314
   1f26c:	add	r3, r3, #2
   1f270:	str	r3, [fp, #-48]	; 0xffffffd0
   1f274:	sub	r3, fp, #80	; 0x50
   1f278:	mov	r0, r3
   1f27c:	bl	123bc <strlen@plt>
   1f280:	mov	r2, r0
   1f284:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f288:	cmp	r3, r2
   1f28c:	bhi	1f2b8 <__assert_fail@plt+0xcbcc>
   1f290:	sub	r3, fp, #80	; 0x50
   1f294:	str	r3, [sp, #4]
   1f298:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f29c:	str	r3, [sp]
   1f2a0:	ldr	r3, [fp, #-8]
   1f2a4:	movw	r2, #29404	; 0x72dc
   1f2a8:	movt	r2, #6
   1f2ac:	mov	r1, #0
   1f2b0:	mov	r0, #0
   1f2b4:	bl	122b4 <error@plt>
   1f2b8:	sub	r3, fp, #80	; 0x50
   1f2bc:	mov	r0, r3
   1f2c0:	bl	123bc <strlen@plt>
   1f2c4:	mov	r2, r0
   1f2c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f2cc:	cmp	r3, r2
   1f2d0:	bhi	1f2f4 <__assert_fail@plt+0xcc08>
   1f2d4:	movw	r3, #29896	; 0x74c8
   1f2d8:	movt	r3, #6
   1f2dc:	mov	r2, #720	; 0x2d0
   1f2e0:	movw	r1, #28756	; 0x7054
   1f2e4:	movt	r1, #6
   1f2e8:	movw	r0, #29452	; 0x730c
   1f2ec:	movt	r0, #6
   1f2f0:	bl	126ec <__assert_fail@plt>
   1f2f4:	sub	r3, fp, #80	; 0x50
   1f2f8:	mov	r1, r3
   1f2fc:	ldr	r0, [fp, #-16]
   1f300:	bl	12230 <strcat@plt>
   1f304:	ldr	r3, [fp, #-16]
   1f308:	mov	r0, r3
   1f30c:	sub	sp, fp, #4
   1f310:	ldr	fp, [sp]
   1f314:	add	sp, sp, #4
   1f318:	pop	{pc}		; (ldr pc, [sp], #4)
   1f31c:	andeq	ip, r7, r1, lsl #15
   1f320:	muleq	r7, r7, sl
   1f324:	strd	r4, [sp, #-16]!
   1f328:	str	fp, [sp, #8]
   1f32c:	str	lr, [sp, #12]
   1f330:	add	fp, sp, #12
   1f334:	sub	sp, sp, #48	; 0x30
   1f338:	sub	r3, fp, #28
   1f33c:	stm	r3, {r0, r1}
   1f340:	sub	r3, fp, #28
   1f344:	mov	r0, r3
   1f348:	bl	12344 <localtime@plt>
   1f34c:	str	r0, [fp, #-16]
   1f350:	ldr	r3, [fp, #-16]
   1f354:	cmp	r3, #0
   1f358:	beq	1f5ac <__assert_fail@plt+0xcec0>
   1f35c:	ldr	r3, [fp, #-16]
   1f360:	ldr	r3, [r3, #24]
   1f364:	cmp	r3, #0
   1f368:	bge	1f38c <__assert_fail@plt+0xcca0>
   1f36c:	movw	r3, #29908	; 0x74d4
   1f370:	movt	r3, #6
   1f374:	movw	r2, #749	; 0x2ed
   1f378:	movw	r1, #28756	; 0x7054
   1f37c:	movt	r1, #6
   1f380:	movw	r0, #29556	; 0x7374
   1f384:	movt	r0, #6
   1f388:	bl	126ec <__assert_fail@plt>
   1f38c:	ldr	r3, [fp, #-16]
   1f390:	ldr	r3, [r3, #24]
   1f394:	cmp	r3, #6
   1f398:	ble	1f3bc <__assert_fail@plt+0xccd0>
   1f39c:	movw	r3, #29908	; 0x74d4
   1f3a0:	movt	r3, #6
   1f3a4:	movw	r2, #750	; 0x2ee
   1f3a8:	movw	r1, #28756	; 0x7054
   1f3ac:	movt	r1, #6
   1f3b0:	movw	r0, #29576	; 0x7388
   1f3b4:	movt	r0, #6
   1f3b8:	bl	126ec <__assert_fail@plt>
   1f3bc:	ldr	r3, [fp, #-16]
   1f3c0:	ldr	r3, [r3, #16]
   1f3c4:	cmp	r3, #0
   1f3c8:	bge	1f3ec <__assert_fail@plt+0xcd00>
   1f3cc:	movw	r3, #29908	; 0x74d4
   1f3d0:	movt	r3, #6
   1f3d4:	movw	r2, #751	; 0x2ef
   1f3d8:	movw	r1, #28756	; 0x7054
   1f3dc:	movt	r1, #6
   1f3e0:	movw	r0, #29596	; 0x739c
   1f3e4:	movt	r0, #6
   1f3e8:	bl	126ec <__assert_fail@plt>
   1f3ec:	ldr	r3, [fp, #-16]
   1f3f0:	ldr	r3, [r3, #16]
   1f3f4:	cmp	r3, #11
   1f3f8:	ble	1f41c <__assert_fail@plt+0xcd30>
   1f3fc:	movw	r3, #29908	; 0x74d4
   1f400:	movt	r3, #6
   1f404:	mov	r2, #752	; 0x2f0
   1f408:	movw	r1, #28756	; 0x7054
   1f40c:	movt	r1, #6
   1f410:	movw	r0, #29616	; 0x73b0
   1f414:	movt	r0, #6
   1f418:	bl	126ec <__assert_fail@plt>
   1f41c:	ldr	r3, [fp, #-16]
   1f420:	ldr	r3, [r3, #8]
   1f424:	cmp	r3, #0
   1f428:	bge	1f44c <__assert_fail@plt+0xcd60>
   1f42c:	movw	r3, #29908	; 0x74d4
   1f430:	movt	r3, #6
   1f434:	movw	r2, #753	; 0x2f1
   1f438:	movw	r1, #28756	; 0x7054
   1f43c:	movt	r1, #6
   1f440:	movw	r0, #29636	; 0x73c4
   1f444:	movt	r0, #6
   1f448:	bl	126ec <__assert_fail@plt>
   1f44c:	ldr	r3, [fp, #-16]
   1f450:	ldr	r3, [r3, #8]
   1f454:	cmp	r3, #23
   1f458:	ble	1f47c <__assert_fail@plt+0xcd90>
   1f45c:	movw	r3, #29908	; 0x74d4
   1f460:	movt	r3, #6
   1f464:	movw	r2, #754	; 0x2f2
   1f468:	movw	r1, #28756	; 0x7054
   1f46c:	movt	r1, #6
   1f470:	movw	r0, #29656	; 0x73d8
   1f474:	movt	r0, #6
   1f478:	bl	126ec <__assert_fail@plt>
   1f47c:	ldr	r3, [fp, #-16]
   1f480:	ldr	r3, [r3, #4]
   1f484:	cmp	r3, #59	; 0x3b
   1f488:	ble	1f4ac <__assert_fail@plt+0xcdc0>
   1f48c:	movw	r3, #29908	; 0x74d4
   1f490:	movt	r3, #6
   1f494:	movw	r2, #755	; 0x2f3
   1f498:	movw	r1, #28756	; 0x7054
   1f49c:	movt	r1, #6
   1f4a0:	movw	r0, #29676	; 0x73ec
   1f4a4:	movt	r0, #6
   1f4a8:	bl	126ec <__assert_fail@plt>
   1f4ac:	ldr	r3, [fp, #-16]
   1f4b0:	ldr	r3, [r3]
   1f4b4:	cmp	r3, #61	; 0x3d
   1f4b8:	ble	1f4dc <__assert_fail@plt+0xcdf0>
   1f4bc:	movw	r3, #29908	; 0x74d4
   1f4c0:	movt	r3, #6
   1f4c4:	mov	r2, #756	; 0x2f4
   1f4c8:	movw	r1, #28756	; 0x7054
   1f4cc:	movt	r1, #6
   1f4d0:	movw	r0, #29696	; 0x7400
   1f4d4:	movt	r0, #6
   1f4d8:	bl	126ec <__assert_fail@plt>
   1f4dc:	ldr	r3, [fp, #-16]
   1f4e0:	ldr	r2, [r3, #24]
   1f4e4:	movw	r3, #50620	; 0xc5bc
   1f4e8:	movt	r3, #7
   1f4ec:	ldr	r5, [r3, r2, lsl #2]
   1f4f0:	ldr	r3, [fp, #-16]
   1f4f4:	ldr	r2, [r3, #16]
   1f4f8:	movw	r3, #50648	; 0xc5d8
   1f4fc:	movt	r3, #7
   1f500:	ldr	r2, [r3, r2, lsl #2]
   1f504:	ldr	r3, [fp, #-16]
   1f508:	ldr	r1, [r3, #12]
   1f50c:	ldr	r3, [fp, #-16]
   1f510:	ldr	r0, [r3, #8]
   1f514:	ldr	r3, [fp, #-16]
   1f518:	ldr	ip, [r3, #4]
   1f51c:	ldr	r3, [fp, #-16]
   1f520:	ldr	lr, [r3]
   1f524:	ldr	r4, [fp, #-24]	; 0xffffffe8
   1f528:	ldr	r3, [fp, #-16]
   1f52c:	ldr	r3, [r3, #20]
   1f530:	add	r3, r3, #1888	; 0x760
   1f534:	add	r3, r3, #12
   1f538:	str	r3, [sp, #24]
   1f53c:	str	r4, [sp, #20]
   1f540:	str	lr, [sp, #16]
   1f544:	str	ip, [sp, #12]
   1f548:	str	r0, [sp, #8]
   1f54c:	str	r1, [sp, #4]
   1f550:	str	r2, [sp]
   1f554:	mov	r3, r5
   1f558:	movw	r2, #29716	; 0x7414
   1f55c:	movt	r2, #6
   1f560:	mov	r1, #1024	; 0x400
   1f564:	movw	r0, #51864	; 0xca98
   1f568:	movt	r0, #7
   1f56c:	bl	1241c <snprintf@plt>
   1f570:	str	r0, [fp, #-20]	; 0xffffffec
   1f574:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f578:	cmp	r3, #1024	; 0x400
   1f57c:	blt	1f5a0 <__assert_fail@plt+0xceb4>
   1f580:	movw	r3, #29908	; 0x74d4
   1f584:	movt	r3, #6
   1f588:	movw	r2, #770	; 0x302
   1f58c:	movw	r1, #28756	; 0x7054
   1f590:	movt	r1, #6
   1f594:	movw	r0, #29756	; 0x743c
   1f598:	movt	r0, #6
   1f59c:	bl	126ec <__assert_fail@plt>
   1f5a0:	movw	r3, #51864	; 0xca98
   1f5a4:	movt	r3, #7
   1f5a8:	b	1f5c0 <__assert_fail@plt+0xced4>
   1f5ac:	mov	r2, #64	; 0x40
   1f5b0:	sub	r3, fp, #28
   1f5b4:	ldm	r3, {r0, r1}
   1f5b8:	bl	1ef50 <__assert_fail@plt+0xc864>
   1f5bc:	mov	r3, r0
   1f5c0:	mov	r0, r3
   1f5c4:	sub	sp, fp, #12
   1f5c8:	ldrd	r4, [sp]
   1f5cc:	ldr	fp, [sp, #8]
   1f5d0:	add	sp, sp, #12
   1f5d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1f5d8:	str	fp, [sp, #-8]!
   1f5dc:	str	lr, [sp, #4]
   1f5e0:	add	fp, sp, #4
   1f5e4:	sub	sp, sp, #16
   1f5e8:	str	r0, [fp, #-16]
   1f5ec:	ldr	r3, [fp, #-16]
   1f5f0:	ldrd	r2, [r3, #48]	; 0x30
   1f5f4:	orrs	r3, r2, r3
   1f5f8:	bne	1f638 <__assert_fail@plt+0xcf4c>
   1f5fc:	ldr	r3, [fp, #-16]
   1f600:	ldrd	r2, [r3, #64]	; 0x40
   1f604:	orrs	r3, r2, r3
   1f608:	bne	1f614 <__assert_fail@plt+0xcf28>
   1f60c:	vldr	d7, [pc, #124]	; 1f690 <__assert_fail@plt+0xcfa4>
   1f610:	b	1f67c <__assert_fail@plt+0xcf90>
   1f614:	ldr	r3, [fp, #-16]
   1f618:	ldrd	r2, [r3, #64]	; 0x40
   1f61c:	cmp	r2, #0
   1f620:	sbcs	r3, r3, #0
   1f624:	bge	1f630 <__assert_fail@plt+0xcf44>
   1f628:	vldr	d7, [pc, #104]	; 1f698 <__assert_fail@plt+0xcfac>
   1f62c:	b	1f67c <__assert_fail@plt+0xcf90>
   1f630:	vldr	d7, [pc, #104]	; 1f6a0 <__assert_fail@plt+0xcfb4>
   1f634:	b	1f67c <__assert_fail@plt+0xcf90>
   1f638:	ldr	r3, [fp, #-16]
   1f63c:	ldrd	r2, [r3, #64]	; 0x40
   1f640:	mov	r0, r2
   1f644:	mov	r1, r3
   1f648:	bl	6492c <__assert_fail@plt+0x52240>
   1f64c:	vmov	d6, r0, r1
   1f650:	vldr	d7, [pc, #80]	; 1f6a8 <__assert_fail@plt+0xcfbc>
   1f654:	vmul.f64	d7, d6, d7
   1f658:	vstr	d7, [fp, #-12]
   1f65c:	ldr	r3, [fp, #-16]
   1f660:	ldrd	r2, [r3, #48]	; 0x30
   1f664:	mov	r0, r2
   1f668:	mov	r1, r3
   1f66c:	bl	6492c <__assert_fail@plt+0x52240>
   1f670:	vmov	d5, r0, r1
   1f674:	vldr	d6, [fp, #-12]
   1f678:	vdiv.f64	d7, d6, d5
   1f67c:	vmov.f64	d0, d7
   1f680:	sub	sp, fp, #4
   1f684:	ldr	fp, [sp]
   1f688:	add	sp, sp, #4
   1f68c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f690:	andeq	r0, r0, r0
   1f694:	svccc	0x00f00000	; IMB
   1f698:	andeq	r0, r0, r0
   1f69c:			; <UNDEFINED> instruction: 0xfff00000	; IMB
   1f6a0:	andeq	r0, r0, r0
   1f6a4:	svcvc	0x00f00000	; IMB
   1f6a8:	andeq	r0, r0, r0
   1f6ac:	addmi	r0, r0, r0
   1f6b0:	push	{r1, r2, r3}
   1f6b4:	str	fp, [sp, #-8]!
   1f6b8:	str	lr, [sp, #4]
   1f6bc:	add	fp, sp, #4
   1f6c0:	sub	sp, sp, #20
   1f6c4:	str	r0, [fp, #-20]	; 0xffffffec
   1f6c8:	add	r3, fp, #8
   1f6cc:	str	r3, [fp, #-16]
   1f6d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6d4:	ldr	r3, [r3, #4]
   1f6d8:	ldr	r2, [fp, #-16]
   1f6dc:	ldr	r1, [fp, #4]
   1f6e0:	mov	r0, r3
   1f6e4:	bl	12554 <vfprintf@plt>
   1f6e8:	str	r0, [fp, #-12]
   1f6ec:	ldr	r3, [fp, #-12]
   1f6f0:	cmp	r3, #0
   1f6f4:	bge	1f718 <__assert_fail@plt+0xd02c>
   1f6f8:	bl	12404 <__errno_location@plt>
   1f6fc:	mov	r3, r0
   1f700:	ldr	r2, [r3]
   1f704:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f708:	ldr	r3, [r3, #8]
   1f70c:	mov	r1, r3
   1f710:	mov	r0, r2
   1f714:	bl	1d558 <__assert_fail@plt+0xae6c>
   1f718:	nop	{0}
   1f71c:	sub	sp, fp, #4
   1f720:	ldr	fp, [sp]
   1f724:	ldr	lr, [sp, #4]
   1f728:	add	sp, sp, #8
   1f72c:	add	sp, sp, #12
   1f730:	bx	lr
   1f734:	str	fp, [sp, #-8]!
   1f738:	str	lr, [sp, #4]
   1f73c:	add	fp, sp, #4
   1f740:	sub	sp, sp, #32
   1f744:	str	r0, [fp, #-16]
   1f748:	str	r1, [fp, #-20]	; 0xffffffec
   1f74c:	str	r2, [fp, #-24]	; 0xffffffe8
   1f750:	ldr	r3, [fp, #-16]
   1f754:	ldr	r0, [r3, #4]
   1f758:	ldr	r3, [fp, #-16]
   1f75c:	ldr	r1, [r3, #16]
   1f760:	ldr	r3, [fp, #-16]
   1f764:	ldrb	r2, [r3, #12]
   1f768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f76c:	str	r3, [sp]
   1f770:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f774:	bl	2a5f0 <__assert_fail@plt+0x17f04>
   1f778:	str	r0, [fp, #-8]
   1f77c:	ldr	r3, [fp, #-8]
   1f780:	cmp	r3, #0
   1f784:	bge	1f7a8 <__assert_fail@plt+0xd0bc>
   1f788:	bl	12404 <__errno_location@plt>
   1f78c:	mov	r3, r0
   1f790:	ldr	r2, [r3]
   1f794:	ldr	r3, [fp, #-16]
   1f798:	ldr	r3, [r3, #8]
   1f79c:	mov	r1, r3
   1f7a0:	mov	r0, r2
   1f7a4:	bl	1d558 <__assert_fail@plt+0xae6c>
   1f7a8:	nop	{0}
   1f7ac:	sub	sp, fp, #4
   1f7b0:	ldr	fp, [sp]
   1f7b4:	add	sp, sp, #4
   1f7b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1f7bc:	str	fp, [sp, #-8]!
   1f7c0:	str	lr, [sp, #4]
   1f7c4:	add	fp, sp, #4
   1f7c8:	sub	sp, sp, #24
   1f7cc:	str	r0, [fp, #-16]
   1f7d0:	str	r1, [fp, #-20]	; 0xffffffec
   1f7d4:	str	r2, [fp, #-24]	; 0xffffffe8
   1f7d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1f7dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f7e0:	ldr	r3, [r3, #4]
   1f7e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f7e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f7ec:	ldr	r0, [fp, #-16]
   1f7f0:	bl	12224 <fwrite@plt>
   1f7f4:	str	r0, [fp, #-8]
   1f7f8:	ldr	r2, [fp, #-8]
   1f7fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f800:	cmp	r2, r3
   1f804:	bcs	1f828 <__assert_fail@plt+0xd13c>
   1f808:	bl	12404 <__errno_location@plt>
   1f80c:	mov	r3, r0
   1f810:	ldr	r2, [r3]
   1f814:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f818:	ldr	r3, [r3, #8]
   1f81c:	mov	r1, r3
   1f820:	mov	r0, r2
   1f824:	bl	1d558 <__assert_fail@plt+0xae6c>
   1f828:	nop	{0}
   1f82c:	sub	sp, fp, #4
   1f830:	ldr	fp, [sp]
   1f834:	add	sp, sp, #4
   1f838:	pop	{pc}		; (ldr pc, [sp], #4)
   1f83c:	str	fp, [sp, #-8]!
   1f840:	str	lr, [sp, #4]
   1f844:	add	fp, sp, #4
   1f848:	sub	sp, sp, #8
   1f84c:	str	r0, [fp, #-8]
   1f850:	ldr	r3, [fp, #-8]
   1f854:	ldr	r3, [r3, #4]
   1f858:	mov	r0, r3
   1f85c:	bl	3fda0 <__assert_fail@plt+0x2d6b4>
   1f860:	mov	r3, r0
   1f864:	cmp	r3, #0
   1f868:	beq	1f88c <__assert_fail@plt+0xd1a0>
   1f86c:	bl	12404 <__errno_location@plt>
   1f870:	mov	r3, r0
   1f874:	ldr	r2, [r3]
   1f878:	ldr	r3, [fp, #-8]
   1f87c:	ldr	r3, [r3, #8]
   1f880:	mov	r1, r3
   1f884:	mov	r0, r2
   1f888:	bl	1d558 <__assert_fail@plt+0xae6c>
   1f88c:	nop	{0}
   1f890:	sub	sp, fp, #4
   1f894:	ldr	fp, [sp]
   1f898:	add	sp, sp, #4
   1f89c:	pop	{pc}		; (ldr pc, [sp], #4)
   1f8a0:	push	{fp}		; (str fp, [sp, #-4]!)
   1f8a4:	add	fp, sp, #0
   1f8a8:	sub	sp, sp, #12
   1f8ac:	str	r0, [fp, #-8]
   1f8b0:	ldr	r3, [fp, #-8]
   1f8b4:	cmp	r3, #32768	; 0x8000
   1f8b8:	bne	1f8c8 <__assert_fail@plt+0xd1dc>
   1f8bc:	movw	r3, #29776	; 0x7450
   1f8c0:	movt	r3, #6
   1f8c4:	b	1f960 <__assert_fail@plt+0xd274>
   1f8c8:	ldr	r3, [fp, #-8]
   1f8cc:	cmp	r3, #16384	; 0x4000
   1f8d0:	bne	1f8e0 <__assert_fail@plt+0xd1f4>
   1f8d4:	movw	r3, #29780	; 0x7454
   1f8d8:	movt	r3, #6
   1f8dc:	b	1f960 <__assert_fail@plt+0xd274>
   1f8e0:	ldr	r3, [fp, #-8]
   1f8e4:	cmp	r3, #40960	; 0xa000
   1f8e8:	bne	1f8f8 <__assert_fail@plt+0xd20c>
   1f8ec:	movw	r3, #29784	; 0x7458
   1f8f0:	movt	r3, #6
   1f8f4:	b	1f960 <__assert_fail@plt+0xd274>
   1f8f8:	ldr	r3, [fp, #-8]
   1f8fc:	cmp	r3, #49152	; 0xc000
   1f900:	bne	1f910 <__assert_fail@plt+0xd224>
   1f904:	movw	r3, #29788	; 0x745c
   1f908:	movt	r3, #6
   1f90c:	b	1f960 <__assert_fail@plt+0xd274>
   1f910:	ldr	r3, [fp, #-8]
   1f914:	cmp	r3, #24576	; 0x6000
   1f918:	bne	1f928 <__assert_fail@plt+0xd23c>
   1f91c:	movw	r3, #29792	; 0x7460
   1f920:	movt	r3, #6
   1f924:	b	1f960 <__assert_fail@plt+0xd274>
   1f928:	ldr	r3, [fp, #-8]
   1f92c:	cmp	r3, #8192	; 0x2000
   1f930:	bne	1f940 <__assert_fail@plt+0xd254>
   1f934:	movw	r3, #29796	; 0x7464
   1f938:	movt	r3, #6
   1f93c:	b	1f960 <__assert_fail@plt+0xd274>
   1f940:	ldr	r3, [fp, #-8]
   1f944:	cmp	r3, #4096	; 0x1000
   1f948:	bne	1f958 <__assert_fail@plt+0xd26c>
   1f94c:	movw	r3, #29800	; 0x7468
   1f950:	movt	r3, #6
   1f954:	b	1f960 <__assert_fail@plt+0xd274>
   1f958:	movw	r3, #29804	; 0x746c
   1f95c:	movt	r3, #6
   1f960:	mov	r0, r3
   1f964:	add	sp, fp, #0
   1f968:	pop	{fp}		; (ldr fp, [sp], #4)
   1f96c:	bx	lr
   1f970:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1f974:	strd	r6, [sp, #8]
   1f978:	str	fp, [sp, #16]
   1f97c:	str	lr, [sp, #20]
   1f980:	add	fp, sp, #20
   1f984:	sub	sp, sp, #880	; 0x370
   1f988:	str	r0, [fp, #-872]	; 0xfffffc98
   1f98c:	str	r1, [fp, #-876]	; 0xfffffc94
   1f990:	str	r2, [fp, #-880]	; 0xfffffc90
   1f994:	str	r3, [fp, #-884]	; 0xfffffc8c
   1f998:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f99c:	ldr	r3, [r3]
   1f9a0:	cmp	r3, #1
   1f9a4:	beq	1f9e0 <__assert_fail@plt+0xd2f4>
   1f9a8:	cmp	r3, #0
   1f9ac:	beq	1f9bc <__assert_fail@plt+0xd2d0>
   1f9b0:	cmp	r3, #2
   1f9b4:	beq	1fa0c <__assert_fail@plt+0xd320>
   1f9b8:	b	206f8 <__assert_fail@plt+0xe00c>
   1f9bc:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f9c0:	ldr	r0, [r3, #8]
   1f9c4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f9c8:	ldr	r3, [r3, #12]
   1f9cc:	mov	r2, r3
   1f9d0:	ldr	r3, [fp, #-872]	; 0xfffffc98
   1f9d4:	mov	r1, #1
   1f9d8:	bl	1f7bc <__assert_fail@plt+0xd0d0>
   1f9dc:	b	206f8 <__assert_fail@plt+0xe00c>
   1f9e0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f9e4:	ldr	r0, [r3, #8]
   1f9e8:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1f9ec:	ldr	r3, [r3, #12]
   1f9f0:	mov	r2, r3
   1f9f4:	ldr	r3, [fp, #-872]	; 0xfffffc98
   1f9f8:	mov	r1, #1
   1f9fc:	bl	1f7bc <__assert_fail@plt+0xd0d0>
   1fa00:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fa04:	bl	1f83c <__assert_fail@plt+0xd150>
   1fa08:	b	206f8 <__assert_fail@plt+0xe00c>
   1fa0c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fa10:	ldrb	r3, [r3, #4]
   1fa14:	cmp	r3, #121	; 0x79
   1fa18:	ldrls	pc, [pc, r3, lsl #2]
   1fa1c:	b	206f4 <__assert_fail@plt+0xe008>
   1fa20:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1fa24:	strdeq	r0, [r2], -r4
   1fa28:	strdeq	r0, [r2], -r4
   1fa2c:	strdeq	r0, [r2], -r4
   1fa30:	strdeq	r0, [r2], -r4
   1fa34:	strdeq	r0, [r2], -r4
   1fa38:	strdeq	r0, [r2], -r4
   1fa3c:	strdeq	r0, [r2], -r4
   1fa40:	strdeq	r0, [r2], -r4
   1fa44:	strdeq	r0, [r2], -r4
   1fa48:	strdeq	r0, [r2], -r4
   1fa4c:	strdeq	r0, [r2], -r4
   1fa50:	strdeq	r0, [r2], -r4
   1fa54:	strdeq	r0, [r2], -r4
   1fa58:	strdeq	r0, [r2], -r4
   1fa5c:	strdeq	r0, [r2], -r4
   1fa60:	strdeq	r0, [r2], -r4
   1fa64:	strdeq	r0, [r2], -r4
   1fa68:	strdeq	r0, [r2], -r4
   1fa6c:	strdeq	r0, [r2], -r4
   1fa70:	strdeq	r0, [r2], -r4
   1fa74:	strdeq	r0, [r2], -r4
   1fa78:	strdeq	r0, [r2], -r4
   1fa7c:	strdeq	r0, [r2], -r4
   1fa80:	strdeq	r0, [r2], -r4
   1fa84:	strdeq	r0, [r2], -r4
   1fa88:	strdeq	r0, [r2], -r4
   1fa8c:	strdeq	r0, [r2], -r4
   1fa90:	strdeq	r0, [r2], -r4
   1fa94:	strdeq	r0, [r2], -r4
   1fa98:	strdeq	r0, [r2], -r4
   1fa9c:	strdeq	r0, [r2], -r4
   1faa0:	strdeq	r0, [r2], -r4
   1faa4:	strdeq	r0, [r2], -r4
   1faa8:	strdeq	r0, [r2], -r4
   1faac:	strdeq	r0, [r2], -r4
   1fab0:	strdeq	r0, [r2], -r4
   1fab4:	andeq	r0, r2, ip, lsr #13
   1fab8:	strdeq	r0, [r2], -r4
   1fabc:	strdeq	r0, [r2], -r4
   1fac0:	strdeq	r0, [r2], -r4
   1fac4:	strdeq	r0, [r2], -r4
   1fac8:	strdeq	r0, [r2], -r4
   1facc:	strdeq	r0, [r2], -r4
   1fad0:	strdeq	r0, [r2], -r4
   1fad4:	strdeq	r0, [r2], -r4
   1fad8:	strdeq	r0, [r2], -r4
   1fadc:	strdeq	r0, [r2], -r4
   1fae0:	strdeq	r0, [r2], -r4
   1fae4:	strdeq	r0, [r2], -r4
   1fae8:	strdeq	r0, [r2], -r4
   1faec:	strdeq	r0, [r2], -r4
   1faf0:	strdeq	r0, [r2], -r4
   1faf4:	strdeq	r0, [r2], -r4
   1faf8:	strdeq	r0, [r2], -r4
   1fafc:	strdeq	r0, [r2], -r4
   1fb00:	strdeq	r0, [r2], -r4
   1fb04:	strdeq	r0, [r2], -r4
   1fb08:	strdeq	r0, [r2], -r4
   1fb0c:	strdeq	r0, [r2], -r4
   1fb10:	strdeq	r0, [r2], -r4
   1fb14:	strdeq	r0, [r2], -r4
   1fb18:	strdeq	r0, [r2], -r4
   1fb1c:	strdeq	r0, [r2], -r4
   1fb20:	strdeq	r0, [r2], -r4
   1fb24:	strdeq	r0, [r2], -r4
   1fb28:	strdeq	r0, [r2], -r4
   1fb2c:	strdeq	r0, [r2], -r4
   1fb30:	andeq	pc, r1, r4, lsl #26
   1fb34:	strdeq	r0, [r2], -r4
   1fb38:	andeq	pc, r1, r8, lsl #27
   1fb3c:	andeq	pc, r1, r0, lsl lr	; <UNPREDICTABLE>
   1fb40:	andeq	pc, r1, ip, ror #30
   1fb44:	strdeq	r0, [r2], -r4
   1fb48:	strdeq	r0, [r2], -r4
   1fb4c:	strdeq	r0, [r2], -r4
   1fb50:	strdeq	r0, [r2], -r4
   1fb54:	andeq	r0, r2, r4, ror #2
   1fb58:	strdeq	r0, [r2], -r4
   1fb5c:	strdeq	r0, [r2], -r4
   1fb60:	andeq	r0, r2, r0, asr #4
   1fb64:	strdeq	r0, [r2], -r4
   1fb68:	strdeq	r0, [r2], -r4
   1fb6c:	andeq	r0, r2, r8, lsl r3
   1fb70:	strdeq	r0, [r2], -r4
   1fb74:	ldrdeq	r0, [r2], -r4
   1fb78:	strdeq	r0, [r2], -r4
   1fb7c:	strdeq	r0, [r2], -r4
   1fb80:	strdeq	r0, [r2], -r4
   1fb84:	andeq	r0, r2, ip, lsr #8
   1fb88:	ldrdeq	r0, [r2], -r8
   1fb8c:	strdeq	r0, [r2], -r4
   1fb90:	strdeq	r0, [r2], -r4
   1fb94:	strdeq	r0, [r2], -r4
   1fb98:	strdeq	r0, [r2], -r4
   1fb9c:	strdeq	r0, [r2], -r4
   1fba0:	strdeq	r0, [r2], -r4
   1fba4:	andeq	pc, r1, r8, lsl #24
   1fba8:	andeq	pc, r1, r4, asr #24
   1fbac:	andeq	pc, r1, r4, lsr #25
   1fbb0:	andeq	pc, r1, r0, ror #25
   1fbb4:	strdeq	r0, [r2], -r4
   1fbb8:	andeq	pc, r1, r4, asr sp	; <UNPREDICTABLE>
   1fbbc:			; <UNDEFINED> instruction: 0x0001fdb4
   1fbc0:	andeq	pc, r1, r8, ror #28
   1fbc4:	andeq	pc, r1, ip, ror #31
   1fbc8:	strdeq	r0, [r2], -r4
   1fbcc:	andeq	r0, r2, ip, lsr r0
   1fbd0:	muleq	r2, ip, r0
   1fbd4:	muleq	r2, r8, r1
   1fbd8:	andeq	r0, r2, ip, asr #3
   1fbdc:	strdeq	r0, [r2], -r4
   1fbe0:	andeq	r0, r2, r4, lsr #4
   1fbe4:	strdeq	r0, [r2], -r4
   1fbe8:	strdeq	r0, [r2], -r4
   1fbec:			; <UNDEFINED> instruction: 0x000202b8
   1fbf0:	andeq	r0, r2, ip, lsr r3
   1fbf4:	andeq	r0, r2, r8, ror r3
   1fbf8:	strdeq	r0, [r2], -r4
   1fbfc:	strdeq	r0, [r2], -r4
   1fc00:	strdeq	r0, [r2], -r4
   1fc04:	andeq	r0, r2, r4, lsr #11
   1fc08:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fc0c:	ldr	r4, [r3, #8]
   1fc10:	sub	r3, fp, #88	; 0x58
   1fc14:	ldr	r1, [fp, #-884]	; 0xfffffc8c
   1fc18:	mov	r0, r3
   1fc1c:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   1fc20:	sub	r3, fp, #88	; 0x58
   1fc24:	ldm	r3, {r0, r1}
   1fc28:	bl	1f324 <__assert_fail@plt+0xcc38>
   1fc2c:	mov	r3, r0
   1fc30:	mov	r2, r3
   1fc34:	mov	r1, r4
   1fc38:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fc3c:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1fc40:	b	206f4 <__assert_fail@plt+0xe008>
   1fc44:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fc48:	ldr	r4, [r3, #8]
   1fc4c:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1fc50:	ldrd	r2, [r3, #64]	; 0x40
   1fc54:	mov	r6, r2
   1fc58:	mov	r7, r3
   1fc5c:	sub	r1, fp, #740	; 0x2e4
   1fc60:	mov	r2, #512	; 0x200
   1fc64:	mov	r3, #0
   1fc68:	strd	r2, [sp, #8]
   1fc6c:	mov	r2, #512	; 0x200
   1fc70:	mov	r3, #0
   1fc74:	strd	r2, [sp]
   1fc78:	mov	r3, #0
   1fc7c:	mov	r2, r1
   1fc80:	mov	r0, r6
   1fc84:	mov	r1, r7
   1fc88:	bl	2e30c <__assert_fail@plt+0x1bc20>
   1fc8c:	mov	r3, r0
   1fc90:	mov	r2, r3
   1fc94:	mov	r1, r4
   1fc98:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fc9c:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1fca0:	b	206f4 <__assert_fail@plt+0xe008>
   1fca4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fca8:	ldr	r4, [r3, #8]
   1fcac:	sub	r3, fp, #80	; 0x50
   1fcb0:	ldr	r1, [fp, #-884]	; 0xfffffc8c
   1fcb4:	mov	r0, r3
   1fcb8:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   1fcbc:	sub	r3, fp, #80	; 0x50
   1fcc0:	ldm	r3, {r0, r1}
   1fcc4:	bl	1f324 <__assert_fail@plt+0xcc38>
   1fcc8:	mov	r3, r0
   1fccc:	mov	r2, r3
   1fcd0:	mov	r1, r4
   1fcd4:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fcd8:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1fcdc:	b	206f4 <__assert_fail@plt+0xe008>
   1fce0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fce4:	ldr	r1, [r3, #8]
   1fce8:	movw	r3, #53280	; 0xd020
   1fcec:	movt	r3, #7
   1fcf0:	ldr	r3, [r3]
   1fcf4:	mov	r2, r3
   1fcf8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fcfc:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1fd00:	b	206f4 <__assert_fail@plt+0xe008>
   1fd04:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fd08:	ldr	r4, [r3, #8]
   1fd0c:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1fd10:	ldrd	r0, [r3]
   1fd14:	sub	ip, fp, #740	; 0x2e4
   1fd18:	mov	r2, #1
   1fd1c:	mov	r3, #0
   1fd20:	strd	r2, [sp, #8]
   1fd24:	mov	r2, #1
   1fd28:	mov	r3, #0
   1fd2c:	strd	r2, [sp]
   1fd30:	mov	r3, #0
   1fd34:	mov	r2, ip
   1fd38:	bl	2e30c <__assert_fail@plt+0x1bc20>
   1fd3c:	mov	r3, r0
   1fd40:	mov	r2, r3
   1fd44:	mov	r1, r4
   1fd48:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fd4c:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1fd50:	b	206f4 <__assert_fail@plt+0xe008>
   1fd54:	ldr	r0, [fp, #-880]	; 0xfffffc90
   1fd58:	bl	2bc30 <__assert_fail@plt+0x19544>
   1fd5c:	mov	r3, r0
   1fd60:	str	r3, [fp, #-36]	; 0xffffffdc
   1fd64:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fd68:	ldr	r3, [r3, #8]
   1fd6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fd70:	mov	r1, r3
   1fd74:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fd78:	bl	1f734 <__assert_fail@plt+0xd048>
   1fd7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fd80:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1fd84:	b	206f4 <__assert_fail@plt+0xe008>
   1fd88:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fd8c:	ldr	r4, [r3, #8]
   1fd90:	ldr	r1, [fp, #-880]	; 0xfffffc90
   1fd94:	ldr	r0, [fp, #-884]	; 0xfffffc8c
   1fd98:	bl	20aa4 <__assert_fail@plt+0xe3b8>
   1fd9c:	mov	r3, r0
   1fda0:	mov	r2, r3
   1fda4:	mov	r1, r4
   1fda8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fdac:	bl	1f734 <__assert_fail@plt+0xd048>
   1fdb0:	b	206f4 <__assert_fail@plt+0xe008>
   1fdb4:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1fdb8:	ldr	r3, [r3, #28]
   1fdbc:	mov	r0, r3
   1fdc0:	bl	126c8 <getgrgid@plt>
   1fdc4:	str	r0, [fp, #-40]	; 0xffffffd8
   1fdc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fdcc:	cmp	r3, #0
   1fdd0:	beq	1fe10 <__assert_fail@plt+0xd724>
   1fdd4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fdd8:	ldr	r3, [r3, #8]
   1fddc:	ldr	r2, [fp, #-876]	; 0xfffffc94
   1fde0:	ldr	r2, [r2, #12]
   1fde4:	add	r3, r3, r2
   1fde8:	mov	r2, #115	; 0x73
   1fdec:	strb	r2, [r3]
   1fdf0:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fdf4:	ldr	r1, [r3, #8]
   1fdf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fdfc:	ldr	r3, [r3]
   1fe00:	mov	r2, r3
   1fe04:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fe08:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1fe0c:	b	206f4 <__assert_fail@plt+0xe008>
   1fe10:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fe14:	ldr	r4, [r3, #8]
   1fe18:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1fe1c:	ldr	r3, [r3, #28]
   1fe20:	mov	r0, r3
   1fe24:	mov	r1, #0
   1fe28:	sub	ip, fp, #740	; 0x2e4
   1fe2c:	mov	r2, #1
   1fe30:	mov	r3, #0
   1fe34:	strd	r2, [sp, #8]
   1fe38:	mov	r2, #1
   1fe3c:	mov	r3, #0
   1fe40:	strd	r2, [sp]
   1fe44:	mov	r3, #0
   1fe48:	mov	r2, ip
   1fe4c:	bl	2e30c <__assert_fail@plt+0x1bc20>
   1fe50:	mov	r3, r0
   1fe54:	mov	r2, r3
   1fe58:	mov	r1, r4
   1fe5c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1fe60:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1fe64:	b	206f4 <__assert_fail@plt+0xe008>
   1fe68:	ldr	r0, [fp, #-880]	; 0xfffffc90
   1fe6c:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   1fe70:	mov	r3, r0
   1fe74:	str	r3, [fp, #-44]	; 0xffffffd4
   1fe78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1fe7c:	bl	123bc <strlen@plt>
   1fe80:	mov	r3, r0
   1fe84:	sub	r3, r3, #1
   1fe88:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1fe8c:	add	r3, r2, r3
   1fe90:	str	r3, [fp, #-28]	; 0xffffffe4
   1fe94:	b	1feb4 <__assert_fail@plt+0xd7c8>
   1fe98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe9c:	ldrb	r3, [r3]
   1fea0:	cmp	r3, #47	; 0x2f
   1fea4:	bne	1fec8 <__assert_fail@plt+0xd7dc>
   1fea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1feac:	sub	r3, r3, #1
   1feb0:	str	r3, [fp, #-28]	; 0xffffffe4
   1feb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1feb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1febc:	cmp	r2, r3
   1fec0:	bls	1fe98 <__assert_fail@plt+0xd7ac>
   1fec4:	b	1fecc <__assert_fail@plt+0xd7e0>
   1fec8:	nop	{0}
   1fecc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1fed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fed4:	cmp	r2, r3
   1fed8:	bcs	1ff00 <__assert_fail@plt+0xd814>
   1fedc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fee0:	add	r3, r3, #1
   1fee4:	ldrb	r3, [r3]
   1fee8:	cmp	r3, #47	; 0x2f
   1feec:	bne	1ff00 <__assert_fail@plt+0xd814>
   1fef0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fef4:	add	r3, r3, #1
   1fef8:	mov	r2, #0
   1fefc:	strb	r2, [r3]
   1ff00:	mov	r1, #47	; 0x2f
   1ff04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ff08:	bl	12548 <strrchr@plt>
   1ff0c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ff10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff14:	cmp	r3, #0
   1ff18:	bne	1ff3c <__assert_fail@plt+0xd850>
   1ff1c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ff20:	ldr	r3, [r3, #8]
   1ff24:	movw	r2, #29808	; 0x7470
   1ff28:	movt	r2, #6
   1ff2c:	mov	r1, r3
   1ff30:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ff34:	bl	1f734 <__assert_fail@plt+0xd048>
   1ff38:	b	1ff60 <__assert_fail@plt+0xd874>
   1ff3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff40:	mov	r2, #0
   1ff44:	strb	r2, [r3]
   1ff48:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ff4c:	ldr	r3, [r3, #8]
   1ff50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ff54:	mov	r1, r3
   1ff58:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ff5c:	bl	1f734 <__assert_fail@plt+0xd048>
   1ff60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ff64:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1ff68:	b	206f4 <__assert_fail@plt+0xe008>
   1ff6c:	movw	r3, #53280	; 0xd020
   1ff70:	movt	r3, #7
   1ff74:	ldr	r3, [r3, #20]
   1ff78:	add	r3, r3, #1
   1ff7c:	mov	r0, r3
   1ff80:	bl	3d8ec <__assert_fail@plt+0x2b200>
   1ff84:	mov	r3, r0
   1ff88:	str	r3, [fp, #-48]	; 0xffffffd0
   1ff8c:	movw	r3, #53280	; 0xd020
   1ff90:	movt	r3, #7
   1ff94:	ldr	r3, [r3, #20]
   1ff98:	mov	r2, r3
   1ff9c:	ldr	r1, [fp, #-880]	; 0xfffffc90
   1ffa0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ffa4:	bl	120f8 <memcpy@plt>
   1ffa8:	movw	r3, #53280	; 0xd020
   1ffac:	movt	r3, #7
   1ffb0:	ldr	r3, [r3, #20]
   1ffb4:	mov	r2, r3
   1ffb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ffbc:	add	r3, r3, r2
   1ffc0:	mov	r2, #0
   1ffc4:	strb	r2, [r3]
   1ffc8:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1ffcc:	ldr	r3, [r3, #8]
   1ffd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ffd4:	mov	r1, r3
   1ffd8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   1ffdc:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   1ffe0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ffe4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   1ffe8:	b	206f4 <__assert_fail@plt+0xe008>
   1ffec:	ldr	r3, [fp, #-876]	; 0xfffffc94
   1fff0:	ldr	r4, [r3, #8]
   1fff4:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   1fff8:	ldrd	r0, [r3, #96]	; 0x60
   1fffc:	sub	ip, fp, #740	; 0x2e4
   20000:	mov	r2, #1
   20004:	mov	r3, #0
   20008:	strd	r2, [sp, #8]
   2000c:	mov	r2, #1
   20010:	mov	r3, #0
   20014:	strd	r2, [sp]
   20018:	mov	r3, #0
   2001c:	mov	r2, ip
   20020:	bl	2e30c <__assert_fail@plt+0x1bc20>
   20024:	mov	r3, r0
   20028:	mov	r2, r3
   2002c:	mov	r1, r4
   20030:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20034:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20038:	b	206f4 <__assert_fail@plt+0xe008>
   2003c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20040:	ldr	r4, [r3, #8]
   20044:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   20048:	ldrd	r2, [r3, #64]	; 0x40
   2004c:	mov	r6, r2
   20050:	mov	r7, r3
   20054:	sub	r1, fp, #740	; 0x2e4
   20058:	mov	r2, #1024	; 0x400
   2005c:	mov	r3, #0
   20060:	strd	r2, [sp, #8]
   20064:	mov	r2, #512	; 0x200
   20068:	mov	r3, #0
   2006c:	strd	r2, [sp]
   20070:	mov	r3, #0
   20074:	mov	r2, r1
   20078:	mov	r0, r6
   2007c:	mov	r1, r7
   20080:	bl	2e30c <__assert_fail@plt+0x1bc20>
   20084:	mov	r3, r0
   20088:	mov	r2, r3
   2008c:	mov	r1, r4
   20090:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20094:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20098:	b	206f4 <__assert_fail@plt+0xe008>
   2009c:	mov	r3, #0
   200a0:	str	r3, [fp, #-32]	; 0xffffffe0
   200a4:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   200a8:	ldr	r3, [r3, #16]
   200ac:	and	r3, r3, #61440	; 0xf000
   200b0:	cmp	r3, #40960	; 0xa000
   200b4:	bne	20114 <__assert_fail@plt+0xda28>
   200b8:	movw	r3, #53280	; 0xd020
   200bc:	movt	r3, #7
   200c0:	ldr	r2, [r3, #16]
   200c4:	movw	r3, #53280	; 0xd020
   200c8:	movt	r3, #7
   200cc:	ldr	r3, [r3, #12]
   200d0:	mov	r1, r3
   200d4:	mov	r0, r2
   200d8:	bl	2b250 <__assert_fail@plt+0x18b64>
   200dc:	str	r0, [fp, #-32]	; 0xffffffe0
   200e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   200e4:	cmp	r3, #0
   200e8:	bne	20114 <__assert_fail@plt+0xda28>
   200ec:	bl	12404 <__errno_location@plt>
   200f0:	mov	r3, r0
   200f4:	ldr	r3, [r3]
   200f8:	ldr	r1, [fp, #-880]	; 0xfffffc90
   200fc:	mov	r0, r3
   20100:	bl	1d4e8 <__assert_fail@plt+0xadfc>
   20104:	movw	r3, #53280	; 0xd020
   20108:	movt	r3, #7
   2010c:	mov	r2, #1
   20110:	str	r2, [r3, #28]
   20114:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20118:	cmp	r3, #0
   2011c:	beq	2013c <__assert_fail@plt+0xda50>
   20120:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20124:	ldr	r3, [r3, #8]
   20128:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2012c:	mov	r1, r3
   20130:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20134:	bl	1f734 <__assert_fail@plt+0xd048>
   20138:	b	20158 <__assert_fail@plt+0xda6c>
   2013c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20140:	ldr	r3, [r3, #8]
   20144:	movw	r2, #29812	; 0x7474
   20148:	movt	r2, #6
   2014c:	mov	r1, r3
   20150:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20154:	bl	1f734 <__assert_fail@plt+0xd048>
   20158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2015c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   20160:	b	206f4 <__assert_fail@plt+0xe008>
   20164:	sub	r3, fp, #756	; 0x2f4
   20168:	mov	r1, r3
   2016c:	ldr	r0, [fp, #-884]	; 0xfffffc8c
   20170:	bl	2c33c <__assert_fail@plt+0x19c50>
   20174:	mov	r3, #0
   20178:	strb	r3, [fp, #-746]	; 0xfffffd16
   2017c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20180:	ldr	r3, [r3, #8]
   20184:	sub	r2, fp, #756	; 0x2f4
   20188:	mov	r1, r3
   2018c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20190:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20194:	b	206f4 <__assert_fail@plt+0xe008>
   20198:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   2019c:	ldr	r3, [r3, #16]
   201a0:	str	r3, [fp, #-52]	; 0xffffffcc
   201a4:	mov	r3, #1
   201a8:	strb	r3, [fp, #-53]	; 0xffffffcb
   201ac:	ldr	r3, [fp, #-876]	; 0xfffffc94
   201b0:	ldr	r1, [r3, #8]
   201b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   201b8:	ubfx	r3, r3, #0, #12
   201bc:	mov	r2, r3
   201c0:	ldr	r0, [fp, #-872]	; 0xfffffc98
   201c4:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   201c8:	b	206f4 <__assert_fail@plt+0xe008>
   201cc:	ldr	r3, [fp, #-876]	; 0xfffffc94
   201d0:	ldr	r4, [r3, #8]
   201d4:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   201d8:	ldr	r3, [r3, #20]
   201dc:	mov	r0, r3
   201e0:	mov	r1, #0
   201e4:	sub	ip, fp, #740	; 0x2e4
   201e8:	mov	r2, #1
   201ec:	mov	r3, #0
   201f0:	strd	r2, [sp, #8]
   201f4:	mov	r2, #1
   201f8:	mov	r3, #0
   201fc:	strd	r2, [sp]
   20200:	mov	r3, #0
   20204:	mov	r2, ip
   20208:	bl	2e30c <__assert_fail@plt+0x1bc20>
   2020c:	mov	r3, r0
   20210:	mov	r2, r3
   20214:	mov	r1, r4
   20218:	ldr	r0, [fp, #-872]	; 0xfffffc98
   2021c:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20220:	b	206f4 <__assert_fail@plt+0xe008>
   20224:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20228:	ldr	r3, [r3, #8]
   2022c:	ldr	r2, [fp, #-880]	; 0xfffffc90
   20230:	mov	r1, r3
   20234:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20238:	bl	1f734 <__assert_fail@plt+0xd048>
   2023c:	b	206f4 <__assert_fail@plt+0xe008>
   20240:	movw	r3, #53280	; 0xd020
   20244:	movt	r3, #7
   20248:	ldr	r3, [r3]
   2024c:	cmp	r3, #0
   20250:	ble	20290 <__assert_fail@plt+0xdba4>
   20254:	movw	r3, #53280	; 0xd020
   20258:	movt	r3, #7
   2025c:	ldr	r3, [r3, #20]
   20260:	mov	r2, r3
   20264:	ldr	r3, [fp, #-880]	; 0xfffffc90
   20268:	add	r3, r3, r2
   2026c:	str	r3, [fp, #-24]	; 0xffffffe8
   20270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20274:	ldrb	r3, [r3]
   20278:	cmp	r3, #47	; 0x2f
   2027c:	bne	2029c <__assert_fail@plt+0xdbb0>
   20280:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20284:	add	r3, r3, #1
   20288:	str	r3, [fp, #-24]	; 0xffffffe8
   2028c:	b	2029c <__assert_fail@plt+0xdbb0>
   20290:	movw	r3, #29812	; 0x7474
   20294:	movt	r3, #6
   20298:	str	r3, [fp, #-24]	; 0xffffffe8
   2029c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   202a0:	ldr	r3, [r3, #8]
   202a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   202a8:	mov	r1, r3
   202ac:	ldr	r0, [fp, #-872]	; 0xfffffc98
   202b0:	bl	1f734 <__assert_fail@plt+0xd048>
   202b4:	b	206f4 <__assert_fail@plt+0xe008>
   202b8:	ldr	r3, [fp, #-876]	; 0xfffffc94
   202bc:	ldr	r4, [r3, #8]
   202c0:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   202c4:	ldrd	r2, [r3, #48]	; 0x30
   202c8:	mov	r6, r2
   202cc:	mov	r7, r3
   202d0:	sub	r1, fp, #740	; 0x2e4
   202d4:	mov	r2, #1
   202d8:	mov	r3, #0
   202dc:	strd	r2, [sp, #8]
   202e0:	mov	r2, #1
   202e4:	mov	r3, #0
   202e8:	strd	r2, [sp]
   202ec:	mov	r3, #0
   202f0:	mov	r2, r1
   202f4:	mov	r0, r6
   202f8:	mov	r1, r7
   202fc:	bl	2e30c <__assert_fail@plt+0x1bc20>
   20300:	mov	r3, r0
   20304:	mov	r2, r3
   20308:	mov	r1, r4
   2030c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20310:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20314:	b	206f4 <__assert_fail@plt+0xe008>
   20318:	ldr	r3, [fp, #-876]	; 0xfffffc94
   2031c:	ldr	r4, [r3, #8]
   20320:	ldr	r0, [fp, #-884]	; 0xfffffc8c
   20324:	bl	1f5d8 <__assert_fail@plt+0xceec>
   20328:	vmov	r2, r3, d0
   2032c:	mov	r1, r4
   20330:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20334:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20338:	b	206f4 <__assert_fail@plt+0xe008>
   2033c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20340:	ldr	r4, [r3, #8]
   20344:	sub	r3, fp, #72	; 0x48
   20348:	ldr	r1, [fp, #-884]	; 0xfffffc8c
   2034c:	mov	r0, r3
   20350:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   20354:	sub	r3, fp, #72	; 0x48
   20358:	ldm	r3, {r0, r1}
   2035c:	bl	1f324 <__assert_fail@plt+0xcc38>
   20360:	mov	r3, r0
   20364:	mov	r2, r3
   20368:	mov	r1, r4
   2036c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20370:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20374:	b	206f4 <__assert_fail@plt+0xe008>
   20378:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   2037c:	ldr	r3, [r3, #24]
   20380:	mov	r0, r3
   20384:	bl	12014 <getpwuid@plt>
   20388:	str	r0, [fp, #-60]	; 0xffffffc4
   2038c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20390:	cmp	r3, #0
   20394:	beq	203d4 <__assert_fail@plt+0xdce8>
   20398:	ldr	r3, [fp, #-876]	; 0xfffffc94
   2039c:	ldr	r3, [r3, #8]
   203a0:	ldr	r2, [fp, #-876]	; 0xfffffc94
   203a4:	ldr	r2, [r2, #12]
   203a8:	add	r3, r3, r2
   203ac:	mov	r2, #115	; 0x73
   203b0:	strb	r2, [r3]
   203b4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   203b8:	ldr	r1, [r3, #8]
   203bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   203c0:	ldr	r3, [r3]
   203c4:	mov	r2, r3
   203c8:	ldr	r0, [fp, #-872]	; 0xfffffc98
   203cc:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   203d0:	b	206f4 <__assert_fail@plt+0xe008>
   203d4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   203d8:	ldr	r4, [r3, #8]
   203dc:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   203e0:	ldr	r3, [r3, #24]
   203e4:	mov	r0, r3
   203e8:	mov	r1, #0
   203ec:	sub	ip, fp, #740	; 0x2e4
   203f0:	mov	r2, #1
   203f4:	mov	r3, #0
   203f8:	strd	r2, [sp, #8]
   203fc:	mov	r2, #1
   20400:	mov	r3, #0
   20404:	strd	r2, [sp]
   20408:	mov	r3, #0
   2040c:	mov	r2, ip
   20410:	bl	2e30c <__assert_fail@plt+0x1bc20>
   20414:	mov	r3, r0
   20418:	mov	r2, r3
   2041c:	mov	r1, r4
   20420:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20424:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20428:	b	206f4 <__assert_fail@plt+0xe008>
   2042c:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   20430:	ldr	r3, [r3, #16]
   20434:	and	r3, r3, #61440	; 0xf000
   20438:	cmp	r3, #40960	; 0xa000
   2043c:	bne	20570 <__assert_fail@plt+0xde84>
   20440:	movw	r3, #53280	; 0xd020
   20444:	movt	r3, #7
   20448:	ldr	r0, [r3, #16]
   2044c:	movw	r3, #53280	; 0xd020
   20450:	movt	r3, #7
   20454:	ldr	r1, [r3, #12]
   20458:	sub	r2, fp, #868	; 0x364
   2045c:	mov	r3, #0
   20460:	bl	64cc4 <__assert_fail@plt+0x525d8>
   20464:	mov	r3, r0
   20468:	cmp	r3, #0
   2046c:	beq	2053c <__assert_fail@plt+0xde50>
   20470:	bl	12404 <__errno_location@plt>
   20474:	mov	r3, r0
   20478:	ldr	r3, [r3]
   2047c:	cmp	r3, #2
   20480:	beq	20498 <__assert_fail@plt+0xddac>
   20484:	bl	12404 <__errno_location@plt>
   20488:	mov	r3, r0
   2048c:	ldr	r3, [r3]
   20490:	cmp	r3, #20
   20494:	bne	204b8 <__assert_fail@plt+0xddcc>
   20498:	ldr	r3, [fp, #-876]	; 0xfffffc94
   2049c:	ldr	r3, [r3, #8]
   204a0:	movw	r2, #29816	; 0x7478
   204a4:	movt	r2, #6
   204a8:	mov	r1, r3
   204ac:	ldr	r0, [fp, #-872]	; 0xfffffc98
   204b0:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   204b4:	b	206f4 <__assert_fail@plt+0xe008>
   204b8:	bl	12404 <__errno_location@plt>
   204bc:	mov	r3, r0
   204c0:	ldr	r3, [r3]
   204c4:	cmp	r3, #40	; 0x28
   204c8:	bne	204ec <__assert_fail@plt+0xde00>
   204cc:	ldr	r3, [fp, #-876]	; 0xfffffc94
   204d0:	ldr	r3, [r3, #8]
   204d4:	movw	r2, #29820	; 0x747c
   204d8:	movt	r2, #6
   204dc:	mov	r1, r3
   204e0:	ldr	r0, [fp, #-872]	; 0xfffffc98
   204e4:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   204e8:	b	2056c <__assert_fail@plt+0xde80>
   204ec:	ldr	r3, [fp, #-876]	; 0xfffffc94
   204f0:	ldr	r3, [r3, #8]
   204f4:	movw	r2, #29824	; 0x7480
   204f8:	movt	r2, #6
   204fc:	mov	r1, r3
   20500:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20504:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20508:	bl	12404 <__errno_location@plt>
   2050c:	mov	r3, r0
   20510:	ldr	r4, [r3]
   20514:	ldr	r1, [fp, #-880]	; 0xfffffc90
   20518:	mov	r0, #0
   2051c:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   20520:	mov	r3, r0
   20524:	movw	r2, #29828	; 0x7484
   20528:	movt	r2, #6
   2052c:	mov	r1, r4
   20530:	mov	r0, #0
   20534:	bl	122b4 <error@plt>
   20538:	b	2056c <__assert_fail@plt+0xde80>
   2053c:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20540:	ldr	r4, [r3, #8]
   20544:	ldr	r3, [fp, #-852]	; 0xfffffcac
   20548:	and	r3, r3, #61440	; 0xf000
   2054c:	mov	r0, r3
   20550:	bl	1f8a0 <__assert_fail@plt+0xd1b4>
   20554:	mov	r3, r0
   20558:	mov	r2, r3
   2055c:	mov	r1, r4
   20560:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20564:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20568:	b	206f4 <__assert_fail@plt+0xe008>
   2056c:	b	206f4 <__assert_fail@plt+0xe008>
   20570:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20574:	ldr	r4, [r3, #8]
   20578:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   2057c:	ldr	r3, [r3, #16]
   20580:	and	r3, r3, #61440	; 0xf000
   20584:	mov	r0, r3
   20588:	bl	1f8a0 <__assert_fail@plt+0xd1b4>
   2058c:	mov	r3, r0
   20590:	mov	r2, r3
   20594:	mov	r1, r4
   20598:	ldr	r0, [fp, #-872]	; 0xfffffc98
   2059c:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   205a0:	b	206f4 <__assert_fail@plt+0xe008>
   205a4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   205a8:	ldr	r4, [r3, #8]
   205ac:	ldr	r3, [fp, #-884]	; 0xfffffc8c
   205b0:	ldr	r3, [r3, #16]
   205b4:	and	r3, r3, #61440	; 0xf000
   205b8:	mov	r0, r3
   205bc:	bl	1f8a0 <__assert_fail@plt+0xd1b4>
   205c0:	mov	r3, r0
   205c4:	mov	r2, r3
   205c8:	mov	r1, r4
   205cc:	ldr	r0, [fp, #-872]	; 0xfffffc98
   205d0:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   205d4:	b	206f4 <__assert_fail@plt+0xe008>
   205d8:	movw	r3, #53324	; 0xd04c
   205dc:	movt	r3, #7
   205e0:	ldr	r4, [r3, #64]	; 0x40
   205e4:	movw	r3, #53280	; 0xd020
   205e8:	movt	r3, #7
   205ec:	ldr	r0, [r3, #16]
   205f0:	movw	r3, #53280	; 0xd020
   205f4:	movt	r3, #7
   205f8:	ldr	r3, [r3, #12]
   205fc:	sub	r2, fp, #760	; 0x2f8
   20600:	mov	r1, r3
   20604:	blx	r4
   20608:	str	r0, [fp, #-64]	; 0xffffffc0
   2060c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20610:	cmp	r3, #0
   20614:	bge	20684 <__assert_fail@plt+0xdf98>
   20618:	ldr	r3, [fp, #-876]	; 0xfffffc94
   2061c:	ldr	r3, [r3, #8]
   20620:	movw	r2, #29812	; 0x7474
   20624:	movt	r2, #6
   20628:	mov	r1, r3
   2062c:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20630:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20634:	bl	12404 <__errno_location@plt>
   20638:	mov	r3, r0
   2063c:	ldr	r4, [r3]
   20640:	movw	r0, #29832	; 0x7488
   20644:	movt	r0, #6
   20648:	bl	12398 <gettext@plt>
   2064c:	mov	r5, r0
   20650:	ldr	r1, [fp, #-880]	; 0xfffffc90
   20654:	mov	r0, #0
   20658:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   2065c:	mov	r3, r0
   20660:	mov	r2, r5
   20664:	mov	r1, r4
   20668:	mov	r0, #0
   2066c:	bl	122b4 <error@plt>
   20670:	movw	r3, #53280	; 0xd020
   20674:	movt	r3, #7
   20678:	mov	r2, #1
   2067c:	str	r2, [r3, #28]
   20680:	b	206f4 <__assert_fail@plt+0xe008>
   20684:	ldr	r3, [fp, #-876]	; 0xfffffc94
   20688:	ldr	r3, [r3, #8]
   2068c:	ldr	r2, [fp, #-760]	; 0xfffffd08
   20690:	mov	r1, r3
   20694:	ldr	r0, [fp, #-872]	; 0xfffffc98
   20698:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   2069c:	ldr	r3, [fp, #-760]	; 0xfffffd08
   206a0:	mov	r0, r3
   206a4:	bl	125fc <freecon@plt>
   206a8:	b	206f4 <__assert_fail@plt+0xe008>
   206ac:	ldr	r3, [fp, #-876]	; 0xfffffc94
   206b0:	ldr	r0, [r3, #8]
   206b4:	ldr	r3, [fp, #-876]	; 0xfffffc94
   206b8:	ldr	r3, [r3, #12]
   206bc:	mov	r2, r3
   206c0:	ldr	r3, [fp, #-872]	; 0xfffffc98
   206c4:	mov	r1, #1
   206c8:	bl	1f7bc <__assert_fail@plt+0xd0d0>
   206cc:	b	206f4 <__assert_fail@plt+0xe008>
   206d0:	movw	r0, #29020	; 0x715c
   206d4:	movt	r0, #6
   206d8:	bl	12398 <gettext@plt>
   206dc:	mov	r2, r0
   206e0:	movw	r3, #29856	; 0x74a0
   206e4:	movt	r3, #6
   206e8:	mov	r1, #0
   206ec:	mov	r0, #1
   206f0:	bl	122b4 <error@plt>
   206f4:	nop	{0}
   206f8:	nop	{0}
   206fc:	sub	sp, fp, #20
   20700:	ldrd	r4, [sp]
   20704:	ldrd	r6, [sp, #8]
   20708:	ldr	fp, [sp, #16]
   2070c:	add	sp, sp, #20
   20710:	pop	{pc}		; (ldr pc, [sp], #4)
   20714:	str	r4, [sp, #-12]!
   20718:	str	fp, [sp, #4]
   2071c:	str	lr, [sp, #8]
   20720:	add	fp, sp, #8
   20724:	sub	sp, sp, #52	; 0x34
   20728:	str	r0, [fp, #-40]	; 0xffffffd8
   2072c:	str	r1, [fp, #-44]	; 0xffffffd4
   20730:	str	r2, [fp, #-48]	; 0xffffffd0
   20734:	ldr	r3, [fp, #-48]	; 0xffffffd0
   20738:	add	r3, r3, #40	; 0x28
   2073c:	str	r3, [fp, #-24]	; 0xffffffe8
   20740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20744:	ldr	r3, [r3]
   20748:	str	r3, [fp, #-16]
   2074c:	b	2094c <__assert_fail@plt+0xe260>
   20750:	ldr	r3, [fp, #-16]
   20754:	ldr	r3, [r3]
   20758:	cmp	r3, #2
   2075c:	bne	2092c <__assert_fail@plt+0xe240>
   20760:	ldr	r3, [fp, #-16]
   20764:	ldrb	r3, [r3, #5]
   20768:	cmp	r3, #0
   2076c:	beq	2092c <__assert_fail@plt+0xe240>
   20770:	mov	r3, #0
   20774:	str	r3, [fp, #-20]	; 0xffffffec
   20778:	ldr	r3, [fp, #-16]
   2077c:	ldrb	r3, [r3, #4]
   20780:	sub	r3, r3, #65	; 0x41
   20784:	cmp	r3, #19
   20788:	ldrls	pc, [pc, r3, lsl #2]
   2078c:	b	208a8 <__assert_fail@plt+0xe1bc>
   20790:	andeq	r0, r2, r0, ror #15
   20794:	strdeq	r0, [r2], -ip
   20798:	andeq	r0, r2, r0, asr r8
   2079c:	andeq	r0, r2, r8, lsr #17
   207a0:	andeq	r0, r2, r8, lsr #17
   207a4:	andeq	r0, r2, r8, lsr #17
   207a8:	andeq	r0, r2, r8, lsr #17
   207ac:	andeq	r0, r2, r8, lsr #17
   207b0:	andeq	r0, r2, r8, lsr #17
   207b4:	andeq	r0, r2, r8, lsr #17
   207b8:	andeq	r0, r2, r8, lsr #17
   207bc:	andeq	r0, r2, r8, lsr #17
   207c0:	andeq	r0, r2, r8, lsr #17
   207c4:	andeq	r0, r2, r8, lsr #17
   207c8:	andeq	r0, r2, r8, lsr #17
   207cc:	andeq	r0, r2, r8, lsr #17
   207d0:	andeq	r0, r2, r8, lsr #17
   207d4:	andeq	r0, r2, r8, lsr #17
   207d8:	andeq	r0, r2, r8, lsr #17
   207dc:	andeq	r0, r2, ip, ror r8
   207e0:	sub	r3, fp, #32
   207e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   207e8:	mov	r0, r3
   207ec:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   207f0:	mov	r3, #1
   207f4:	str	r3, [fp, #-20]	; 0xffffffec
   207f8:	b	208c8 <__assert_fail@plt+0xe1dc>
   207fc:	sub	r3, fp, #60	; 0x3c
   20800:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20804:	mov	r0, r3
   20808:	bl	3cf0c <__assert_fail@plt+0x2a820>
   2080c:	sub	r1, fp, #32
   20810:	sub	r3, fp, #60	; 0x3c
   20814:	ldrd	r2, [r3]
   20818:	strd	r2, [r1]
   2081c:	ldr	r3, [fp, #-16]
   20820:	ldrb	r3, [r3, #5]
   20824:	cmp	r3, #64	; 0x40
   20828:	bne	20838 <__assert_fail@plt+0xe14c>
   2082c:	mov	r3, #1
   20830:	str	r3, [fp, #-20]	; 0xffffffec
   20834:	b	208c8 <__assert_fail@plt+0xe1dc>
   20838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2083c:	mvn	r3, r3
   20840:	lsr	r3, r3, #31
   20844:	uxtb	r3, r3
   20848:	str	r3, [fp, #-20]	; 0xffffffec
   2084c:	b	208c8 <__assert_fail@plt+0xe1dc>
   20850:	sub	r3, fp, #60	; 0x3c
   20854:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20858:	mov	r0, r3
   2085c:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   20860:	sub	r1, fp, #32
   20864:	sub	r3, fp, #60	; 0x3c
   20868:	ldrd	r2, [r3]
   2086c:	strd	r2, [r1]
   20870:	mov	r3, #1
   20874:	str	r3, [fp, #-20]	; 0xffffffec
   20878:	b	208c8 <__assert_fail@plt+0xe1dc>
   2087c:	sub	r3, fp, #60	; 0x3c
   20880:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20884:	mov	r0, r3
   20888:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   2088c:	sub	r1, fp, #32
   20890:	sub	r3, fp, #60	; 0x3c
   20894:	ldrd	r2, [r3]
   20898:	strd	r2, [r1]
   2089c:	mov	r3, #1
   208a0:	str	r3, [fp, #-20]	; 0xffffffec
   208a4:	b	208c8 <__assert_fail@plt+0xe1dc>
   208a8:	movw	r3, #29924	; 0x74e4
   208ac:	movt	r3, #6
   208b0:	movw	r2, #1304	; 0x518
   208b4:	movw	r1, #28756	; 0x7054
   208b8:	movt	r1, #6
   208bc:	movw	r0, #29860	; 0x74a4
   208c0:	movt	r0, #6
   208c4:	bl	126ec <__assert_fail@plt>
   208c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   208cc:	cmp	r3, #0
   208d0:	beq	2090c <__assert_fail@plt+0xe220>
   208d4:	ldr	r3, [fp, #-16]
   208d8:	ldr	r4, [r3, #8]
   208dc:	ldr	r3, [fp, #-16]
   208e0:	ldrb	r3, [r3, #5]
   208e4:	mov	r2, r3
   208e8:	sub	r3, fp, #32
   208ec:	ldm	r3, {r0, r1}
   208f0:	bl	1ef50 <__assert_fail@plt+0xc864>
   208f4:	mov	r3, r0
   208f8:	mov	r2, r3
   208fc:	mov	r1, r4
   20900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20904:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20908:	b	20940 <__assert_fail@plt+0xe254>
   2090c:	ldr	r3, [fp, #-16]
   20910:	ldr	r3, [r3, #8]
   20914:	movw	r2, #29812	; 0x7474
   20918:	movt	r2, #6
   2091c:	mov	r1, r3
   20920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20924:	bl	1f6b0 <__assert_fail@plt+0xcfc4>
   20928:	b	20940 <__assert_fail@plt+0xe254>
   2092c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20930:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20934:	ldr	r1, [fp, #-16]
   20938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2093c:	bl	1f970 <__assert_fail@plt+0xd284>
   20940:	ldr	r3, [fp, #-16]
   20944:	ldr	r3, [r3, #16]
   20948:	str	r3, [fp, #-16]
   2094c:	ldr	r3, [fp, #-16]
   20950:	cmp	r3, #0
   20954:	bne	20750 <__assert_fail@plt+0xe064>
   20958:	mov	r3, #1
   2095c:	mov	r0, r3
   20960:	sub	sp, fp, #8
   20964:	ldr	r4, [sp]
   20968:	ldr	fp, [sp, #4]
   2096c:	add	sp, sp, #8
   20970:	pop	{pc}		; (ldr pc, [sp], #4)
   20974:	str	fp, [sp, #-8]!
   20978:	str	lr, [sp, #4]
   2097c:	add	fp, sp, #4
   20980:	sub	sp, sp, #16
   20984:	str	r0, [fp, #-16]
   20988:	b	209a8 <__assert_fail@plt+0xe2bc>
   2098c:	ldr	r3, [fp, #-16]
   20990:	ldr	r3, [r3, #28]
   20994:	str	r3, [fp, #-8]
   20998:	ldr	r0, [fp, #-16]
   2099c:	bl	44660 <__assert_fail@plt+0x31f74>
   209a0:	ldr	r3, [fp, #-8]
   209a4:	str	r3, [fp, #-16]
   209a8:	ldr	r3, [fp, #-16]
   209ac:	cmp	r3, #0
   209b0:	bne	2098c <__assert_fail@plt+0xe2a0>
   209b4:	nop	{0}
   209b8:	sub	sp, fp, #4
   209bc:	ldr	fp, [sp]
   209c0:	add	sp, sp, #4
   209c4:	pop	{pc}		; (ldr pc, [sp], #4)
   209c8:	str	fp, [sp, #-8]!
   209cc:	str	lr, [sp, #4]
   209d0:	add	fp, sp, #4
   209d4:	sub	sp, sp, #8
   209d8:	mov	r3, r0
   209dc:	strb	r3, [fp, #-5]
   209e0:	movw	r3, #52888	; 0xce98
   209e4:	movt	r3, #7
   209e8:	ldr	r3, [r3]
   209ec:	cmp	r3, #0
   209f0:	beq	20a40 <__assert_fail@plt+0xe354>
   209f4:	movw	r3, #52892	; 0xce9c
   209f8:	movt	r3, #7
   209fc:	ldrb	r3, [r3]
   20a00:	eor	r3, r3, #1
   20a04:	uxtb	r3, r3
   20a08:	cmp	r3, #0
   20a0c:	beq	20a40 <__assert_fail@plt+0xe354>
   20a10:	ldrb	r3, [fp, #-5]
   20a14:	cmp	r3, #0
   20a18:	beq	20a40 <__assert_fail@plt+0xe354>
   20a1c:	movw	r3, #52888	; 0xce98
   20a20:	movt	r3, #7
   20a24:	ldr	r3, [r3]
   20a28:	mov	r0, r3
   20a2c:	bl	20974 <__assert_fail@plt+0xe288>
   20a30:	movw	r3, #52888	; 0xce98
   20a34:	movt	r3, #7
   20a38:	mov	r2, #0
   20a3c:	str	r2, [r3]
   20a40:	movw	r3, #52888	; 0xce98
   20a44:	movt	r3, #7
   20a48:	ldr	r3, [r3]
   20a4c:	cmp	r3, #0
   20a50:	bne	20a84 <__assert_fail@plt+0xe398>
   20a54:	ldrb	r3, [fp, #-5]
   20a58:	mov	r0, r3
   20a5c:	bl	438d0 <__assert_fail@plt+0x311e4>
   20a60:	mov	r3, r0
   20a64:	mov	r2, r3
   20a68:	movw	r3, #52888	; 0xce98
   20a6c:	movt	r3, #7
   20a70:	str	r2, [r3]
   20a74:	movw	r3, #52892	; 0xce9c
   20a78:	movt	r3, #7
   20a7c:	ldrb	r2, [fp, #-5]
   20a80:	strb	r2, [r3]
   20a84:	movw	r3, #52888	; 0xce98
   20a88:	movt	r3, #7
   20a8c:	ldr	r3, [r3]
   20a90:	mov	r0, r3
   20a94:	sub	sp, fp, #4
   20a98:	ldr	fp, [sp]
   20a9c:	add	sp, sp, #4
   20aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   20aa4:	str	fp, [sp, #-8]!
   20aa8:	str	lr, [sp, #4]
   20aac:	add	fp, sp, #4
   20ab0:	sub	sp, sp, #8
   20ab4:	str	r0, [fp, #-8]
   20ab8:	str	r1, [fp, #-12]
   20abc:	movw	r3, #52896	; 0xcea0
   20ac0:	movt	r3, #7
   20ac4:	ldr	r3, [r3]
   20ac8:	cmp	r3, #0
   20acc:	beq	20b28 <__assert_fail@plt+0xe43c>
   20ad0:	movw	r3, #52900	; 0xcea4
   20ad4:	movt	r3, #7
   20ad8:	ldrb	r3, [r3]
   20adc:	cmp	r3, #0
   20ae0:	beq	20b14 <__assert_fail@plt+0xe428>
   20ae4:	ldr	r3, [fp, #-8]
   20ae8:	ldrd	r0, [r3]
   20aec:	movw	r3, #52904	; 0xcea8
   20af0:	movt	r3, #7
   20af4:	ldrd	r2, [r3]
   20af8:	cmp	r1, r3
   20afc:	cmpeq	r0, r2
   20b00:	bne	20b14 <__assert_fail@plt+0xe428>
   20b04:	movw	r3, #52896	; 0xcea0
   20b08:	movt	r3, #7
   20b0c:	ldr	r3, [r3]
   20b10:	b	20b6c <__assert_fail@plt+0xe480>
   20b14:	movw	r3, #52896	; 0xcea0
   20b18:	movt	r3, #7
   20b1c:	ldr	r3, [r3]
   20b20:	mov	r0, r3
   20b24:	bl	3fe0c <__assert_fail@plt+0x2d720>
   20b28:	ldr	r3, [fp, #-8]
   20b2c:	ldrd	r0, [r3]
   20b30:	movw	r3, #52904	; 0xcea8
   20b34:	movt	r3, #7
   20b38:	strd	r0, [r3]
   20b3c:	movw	r2, #52900	; 0xcea4
   20b40:	movt	r2, #7
   20b44:	ldr	r1, [fp, #-12]
   20b48:	ldr	r0, [fp, #-8]
   20b4c:	bl	20cdc <__assert_fail@plt+0xe5f0>
   20b50:	mov	r2, r0
   20b54:	movw	r3, #52896	; 0xcea0
   20b58:	movt	r3, #7
   20b5c:	str	r2, [r3]
   20b60:	movw	r3, #52896	; 0xcea0
   20b64:	movt	r3, #7
   20b68:	ldr	r3, [r3]
   20b6c:	mov	r0, r3
   20b70:	sub	sp, fp, #4
   20b74:	ldr	fp, [sp]
   20b78:	add	sp, sp, #4
   20b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   20b80:	str	fp, [sp, #-8]!
   20b84:	str	lr, [sp, #4]
   20b88:	add	fp, sp, #4
   20b8c:	sub	sp, sp, #16
   20b90:	str	r0, [fp, #-16]
   20b94:	ldr	r1, [fp, #-16]
   20b98:	movw	r0, #29940	; 0x74f4
   20b9c:	movt	r0, #6
   20ba0:	bl	11ffc <strcmp@plt>
   20ba4:	mov	r3, r0
   20ba8:	cmp	r3, #0
   20bac:	bne	20bb8 <__assert_fail@plt+0xe4cc>
   20bb0:	mov	r3, #1
   20bb4:	b	20c2c <__assert_fail@plt+0xe540>
   20bb8:	mov	r0, #0
   20bbc:	bl	209c8 <__assert_fail@plt+0xe2dc>
   20bc0:	str	r0, [fp, #-12]
   20bc4:	ldr	r3, [fp, #-12]
   20bc8:	cmp	r3, #0
   20bcc:	beq	20c20 <__assert_fail@plt+0xe534>
   20bd0:	ldr	r3, [fp, #-12]
   20bd4:	str	r3, [fp, #-8]
   20bd8:	b	20c10 <__assert_fail@plt+0xe524>
   20bdc:	ldr	r3, [fp, #-8]
   20be0:	ldr	r3, [r3, #12]
   20be4:	mov	r1, r3
   20be8:	ldr	r0, [fp, #-16]
   20bec:	bl	11ffc <strcmp@plt>
   20bf0:	mov	r3, r0
   20bf4:	cmp	r3, #0
   20bf8:	bne	20c04 <__assert_fail@plt+0xe518>
   20bfc:	mov	r3, #1
   20c00:	b	20c2c <__assert_fail@plt+0xe540>
   20c04:	ldr	r3, [fp, #-8]
   20c08:	ldr	r3, [r3, #28]
   20c0c:	str	r3, [fp, #-8]
   20c10:	ldr	r3, [fp, #-8]
   20c14:	cmp	r3, #0
   20c18:	bne	20bdc <__assert_fail@plt+0xe4f0>
   20c1c:	b	20c28 <__assert_fail@plt+0xe53c>
   20c20:	mov	r3, #1
   20c24:	b	20c2c <__assert_fail@plt+0xe540>
   20c28:	mov	r3, #0
   20c2c:	mov	r0, r3
   20c30:	sub	sp, fp, #4
   20c34:	ldr	fp, [sp]
   20c38:	add	sp, sp, #4
   20c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   20c40:	str	fp, [sp, #-8]!
   20c44:	str	lr, [sp, #4]
   20c48:	add	fp, sp, #4
   20c4c:	sub	sp, sp, #112	; 0x70
   20c50:	str	r0, [fp, #-112]	; 0xffffff90
   20c54:	ldr	r3, [fp, #-112]	; 0xffffff90
   20c58:	ldrd	r2, [r3, #16]
   20c5c:	mvn	r0, #0
   20c60:	mvn	r1, #0
   20c64:	cmp	r3, r1
   20c68:	cmpeq	r2, r0
   20c6c:	bne	20cc4 <__assert_fail@plt+0xe5d8>
   20c70:	sub	r3, fp, #108	; 0x6c
   20c74:	mov	r0, r3
   20c78:	bl	1b728 <__assert_fail@plt+0x903c>
   20c7c:	movw	r3, #53324	; 0xd04c
   20c80:	movt	r3, #7
   20c84:	ldr	r3, [r3, #52]	; 0x34
   20c88:	ldr	r2, [fp, #-112]	; 0xffffff90
   20c8c:	ldr	r2, [r2, #4]
   20c90:	sub	r1, fp, #108	; 0x6c
   20c94:	mov	r0, r2
   20c98:	blx	r3
   20c9c:	mov	r3, r0
   20ca0:	cmp	r3, #0
   20ca4:	bne	20cbc <__assert_fail@plt+0xe5d0>
   20ca8:	ldrd	r2, [fp, #-108]	; 0xffffff94
   20cac:	ldr	r1, [fp, #-112]	; 0xffffff90
   20cb0:	strd	r2, [r1, #16]
   20cb4:	mov	r3, #0
   20cb8:	b	20cc8 <__assert_fail@plt+0xe5dc>
   20cbc:	mvn	r3, #0
   20cc0:	b	20cc8 <__assert_fail@plt+0xe5dc>
   20cc4:	mov	r3, #0
   20cc8:	mov	r0, r3
   20ccc:	sub	sp, fp, #4
   20cd0:	ldr	fp, [sp]
   20cd4:	add	sp, sp, #4
   20cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   20cdc:	str	fp, [sp, #-8]!
   20ce0:	str	lr, [sp, #4]
   20ce4:	add	fp, sp, #4
   20ce8:	sub	sp, sp, #32
   20cec:	str	r0, [fp, #-24]	; 0xffffffe8
   20cf0:	str	r1, [fp, #-28]	; 0xffffffe4
   20cf4:	str	r2, [fp, #-32]	; 0xffffffe0
   20cf8:	mov	r3, #0
   20cfc:	str	r3, [fp, #-12]
   20d00:	mov	r0, #1
   20d04:	bl	209c8 <__assert_fail@plt+0xe2dc>
   20d08:	str	r0, [fp, #-20]	; 0xffffffec
   20d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d10:	cmp	r3, #0
   20d14:	bne	20d38 <__assert_fail@plt+0xe64c>
   20d18:	movw	r0, #29944	; 0x74f8
   20d1c:	movt	r0, #6
   20d20:	bl	12398 <gettext@plt>
   20d24:	mov	r3, r0
   20d28:	mov	r2, r3
   20d2c:	mov	r1, #0
   20d30:	mov	r0, #1
   20d34:	bl	122b4 <error@plt>
   20d38:	mov	r3, #0
   20d3c:	str	r3, [fp, #-16]
   20d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d44:	str	r3, [fp, #-8]
   20d48:	b	20dbc <__assert_fail@plt+0xe6d0>
   20d4c:	ldr	r3, [fp, #-8]
   20d50:	ldr	r3, [r3, #12]
   20d54:	movw	r1, #29984	; 0x7520
   20d58:	movt	r1, #6
   20d5c:	mov	r0, r3
   20d60:	bl	11ffc <strcmp@plt>
   20d64:	mov	r3, r0
   20d68:	cmp	r3, #0
   20d6c:	beq	20dac <__assert_fail@plt+0xe6c0>
   20d70:	ldr	r0, [fp, #-8]
   20d74:	bl	20c40 <__assert_fail@plt+0xe554>
   20d78:	mov	r3, r0
   20d7c:	cmp	r3, #0
   20d80:	bne	20db0 <__assert_fail@plt+0xe6c4>
   20d84:	ldr	r3, [fp, #-8]
   20d88:	ldrd	r0, [r3, #16]
   20d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20d90:	ldrd	r2, [r3]
   20d94:	cmp	r1, r3
   20d98:	cmpeq	r0, r2
   20d9c:	bne	20db0 <__assert_fail@plt+0xe6c4>
   20da0:	ldr	r3, [fp, #-8]
   20da4:	str	r3, [fp, #-12]
   20da8:	b	20db0 <__assert_fail@plt+0xe6c4>
   20dac:	nop	{0}
   20db0:	ldr	r3, [fp, #-8]
   20db4:	ldr	r3, [r3, #28]
   20db8:	str	r3, [fp, #-8]
   20dbc:	ldr	r3, [fp, #-8]
   20dc0:	cmp	r3, #0
   20dc4:	bne	20d4c <__assert_fail@plt+0xe660>
   20dc8:	ldr	r3, [fp, #-12]
   20dcc:	cmp	r3, #0
   20dd0:	beq	20dec <__assert_fail@plt+0xe700>
   20dd4:	ldr	r3, [fp, #-12]
   20dd8:	ldr	r3, [r3, #12]
   20ddc:	mov	r0, r3
   20de0:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   20de4:	mov	r3, r0
   20de8:	str	r3, [fp, #-16]
   20dec:	ldr	r3, [fp, #-16]
   20df0:	cmp	r3, #0
   20df4:	movne	r3, #1
   20df8:	moveq	r3, #0
   20dfc:	uxtb	r2, r3
   20e00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20e04:	strb	r2, [r3]
   20e08:	ldr	r3, [fp, #-16]
   20e0c:	cmp	r3, #0
   20e10:	bne	20e34 <__assert_fail@plt+0xe748>
   20e14:	movw	r0, #29992	; 0x7528
   20e18:	movt	r0, #6
   20e1c:	bl	12398 <gettext@plt>
   20e20:	mov	r3, r0
   20e24:	mov	r0, r3
   20e28:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   20e2c:	mov	r3, r0
   20e30:	b	20e38 <__assert_fail@plt+0xe74c>
   20e34:	ldr	r3, [fp, #-16]
   20e38:	mov	r0, r3
   20e3c:	sub	sp, fp, #4
   20e40:	ldr	fp, [sp]
   20e44:	add	sp, sp, #4
   20e48:	pop	{pc}		; (ldr pc, [sp], #4)
   20e4c:	str	fp, [sp, #-8]!
   20e50:	str	lr, [sp, #4]
   20e54:	add	fp, sp, #4
   20e58:	sub	sp, sp, #32
   20e5c:	str	r0, [fp, #-32]	; 0xffffffe0
   20e60:	mov	r3, #0
   20e64:	str	r3, [fp, #-28]	; 0xffffffe4
   20e68:	mov	r3, #0
   20e6c:	str	r3, [fp, #-8]
   20e70:	mov	r3, #0
   20e74:	str	r3, [fp, #-16]
   20e78:	mov	r0, #0
   20e7c:	bl	438d0 <__assert_fail@plt+0x311e4>
   20e80:	mov	r3, r0
   20e84:	str	r3, [fp, #-20]	; 0xffffffec
   20e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   20e8c:	str	r3, [fp, #-12]
   20e90:	b	20f24 <__assert_fail@plt+0xe838>
   20e94:	ldr	r3, [fp, #-8]
   20e98:	add	r3, r3, #1
   20e9c:	lsl	r3, r3, #3
   20ea0:	sub	r2, fp, #28
   20ea4:	mov	r1, r3
   20ea8:	ldr	r0, [fp, #-16]
   20eac:	bl	28b00 <__assert_fail@plt+0x16414>
   20eb0:	str	r0, [fp, #-24]	; 0xffffffe8
   20eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20eb8:	cmp	r3, #0
   20ebc:	beq	20f08 <__assert_fail@plt+0xe81c>
   20ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20ec4:	str	r3, [fp, #-16]
   20ec8:	ldr	r0, [fp, #-12]
   20ecc:	bl	20c40 <__assert_fail@plt+0xe554>
   20ed0:	mov	r3, r0
   20ed4:	cmp	r3, #0
   20ed8:	bne	20f18 <__assert_fail@plt+0xe82c>
   20edc:	ldr	r3, [fp, #-8]
   20ee0:	lsl	r3, r3, #3
   20ee4:	ldr	r2, [fp, #-16]
   20ee8:	add	r1, r2, r3
   20eec:	ldr	r3, [fp, #-12]
   20ef0:	ldrd	r2, [r3, #16]
   20ef4:	strd	r2, [r1]
   20ef8:	ldr	r3, [fp, #-8]
   20efc:	add	r3, r3, #1
   20f00:	str	r3, [fp, #-8]
   20f04:	b	20f18 <__assert_fail@plt+0xe82c>
   20f08:	ldr	r0, [fp, #-16]
   20f0c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   20f10:	mov	r3, #0
   20f14:	str	r3, [fp, #-16]
   20f18:	ldr	r3, [fp, #-12]
   20f1c:	ldr	r3, [r3, #28]
   20f20:	str	r3, [fp, #-12]
   20f24:	ldr	r3, [fp, #-12]
   20f28:	cmp	r3, #0
   20f2c:	bne	20e94 <__assert_fail@plt+0xe7a8>
   20f30:	ldr	r0, [fp, #-20]	; 0xffffffec
   20f34:	bl	20974 <__assert_fail@plt+0xe288>
   20f38:	ldr	r3, [fp, #-16]
   20f3c:	cmp	r3, #0
   20f40:	beq	20f50 <__assert_fail@plt+0xe864>
   20f44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20f48:	ldr	r2, [fp, #-8]
   20f4c:	str	r2, [r3]
   20f50:	ldr	r3, [fp, #-16]
   20f54:	mov	r0, r3
   20f58:	sub	sp, fp, #4
   20f5c:	ldr	fp, [sp]
   20f60:	add	sp, sp, #4
   20f64:	pop	{pc}		; (ldr pc, [sp], #4)
   20f68:	str	fp, [sp, #-8]!
   20f6c:	str	lr, [sp, #4]
   20f70:	add	fp, sp, #4
   20f74:	sub	sp, sp, #16
   20f78:	str	r0, [fp, #-8]
   20f7c:	str	r1, [fp, #-12]
   20f80:	str	r2, [fp, #-16]
   20f84:	str	r3, [fp, #-20]	; 0xffffffec
   20f88:	bl	12404 <__errno_location@plt>
   20f8c:	mov	r3, r0
   20f90:	ldr	r3, [r3]
   20f94:	cmp	r3, #2
   20f98:	beq	20fa4 <__assert_fail@plt+0xe8b8>
   20f9c:	cmp	r3, #20
   20fa0:	bne	20ff4 <__assert_fail@plt+0xe908>
   20fa4:	movw	r3, #53324	; 0xd04c
   20fa8:	movt	r3, #7
   20fac:	ldr	r3, [r3, #44]	; 0x2c
   20fb0:	and	r3, r3, #2
   20fb4:	cmp	r3, #0
   20fb8:	beq	20fdc <__assert_fail@plt+0xe8f0>
   20fbc:	movw	r3, #50984	; 0xc728
   20fc0:	movt	r3, #7
   20fc4:	ldr	r3, [r3]
   20fc8:	ldr	r2, [fp, #-12]
   20fcc:	movw	r1, #32112	; 0x7d70
   20fd0:	movt	r1, #6
   20fd4:	mov	r0, r3
   20fd8:	bl	123f8 <fprintf@plt>
   20fdc:	ldr	r2, [fp, #-16]
   20fe0:	ldr	r1, [fp, #-12]
   20fe4:	ldr	r0, [fp, #-8]
   20fe8:	bl	3c63c <__assert_fail@plt+0x29f50>
   20fec:	mov	r3, r0
   20ff0:	b	20ff8 <__assert_fail@plt+0xe90c>
   20ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   20ff8:	mov	r0, r3
   20ffc:	sub	sp, fp, #4
   21000:	ldr	fp, [sp]
   21004:	add	sp, sp, #4
   21008:	pop	{pc}		; (ldr pc, [sp], #4)
   2100c:	str	fp, [sp, #-8]!
   21010:	str	lr, [sp, #4]
   21014:	add	fp, sp, #4
   21018:	sub	sp, sp, #24
   2101c:	str	r0, [fp, #-16]
   21020:	str	r1, [fp, #-20]	; 0xffffffec
   21024:	str	r2, [fp, #-24]	; 0xffffffe8
   21028:	movw	r3, #53280	; 0xd020
   2102c:	movt	r3, #7
   21030:	ldr	r3, [r3]
   21034:	cmp	r3, #0
   21038:	bne	21080 <__assert_fail@plt+0xe994>
   2103c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21040:	ldr	r1, [fp, #-20]	; 0xffffffec
   21044:	ldr	r0, [fp, #-16]
   21048:	bl	3c3bc <__assert_fail@plt+0x29cd0>
   2104c:	str	r0, [fp, #-8]
   21050:	ldr	r3, [fp, #-8]
   21054:	cmp	r3, #0
   21058:	bne	21064 <__assert_fail@plt+0xe978>
   2105c:	mov	r3, #0
   21060:	b	21094 <__assert_fail@plt+0xe9a8>
   21064:	ldr	r3, [fp, #-8]
   21068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2106c:	ldr	r1, [fp, #-20]	; 0xffffffec
   21070:	ldr	r0, [fp, #-16]
   21074:	bl	20f68 <__assert_fail@plt+0xe87c>
   21078:	mov	r3, r0
   2107c:	b	21094 <__assert_fail@plt+0xe9a8>
   21080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21084:	ldr	r1, [fp, #-20]	; 0xffffffec
   21088:	ldr	r0, [fp, #-16]
   2108c:	bl	3c63c <__assert_fail@plt+0x29f50>
   21090:	mov	r3, r0
   21094:	mov	r0, r3
   21098:	sub	sp, fp, #4
   2109c:	ldr	fp, [sp]
   210a0:	add	sp, sp, #4
   210a4:	pop	{pc}		; (ldr pc, [sp], #4)
   210a8:	str	fp, [sp, #-8]!
   210ac:	str	lr, [sp, #4]
   210b0:	add	fp, sp, #4
   210b4:	sub	sp, sp, #24
   210b8:	str	r0, [fp, #-16]
   210bc:	str	r1, [fp, #-20]	; 0xffffffec
   210c0:	str	r2, [fp, #-24]	; 0xffffffe8
   210c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   210c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   210cc:	ldr	r0, [fp, #-16]
   210d0:	bl	3c3bc <__assert_fail@plt+0x29cd0>
   210d4:	str	r0, [fp, #-8]
   210d8:	ldr	r3, [fp, #-8]
   210dc:	cmp	r3, #0
   210e0:	bne	210ec <__assert_fail@plt+0xea00>
   210e4:	mov	r3, #0
   210e8:	b	21104 <__assert_fail@plt+0xea18>
   210ec:	ldr	r3, [fp, #-8]
   210f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   210f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   210f8:	ldr	r0, [fp, #-16]
   210fc:	bl	20f68 <__assert_fail@plt+0xe87c>
   21100:	mov	r3, r0
   21104:	mov	r0, r3
   21108:	sub	sp, fp, #4
   2110c:	ldr	fp, [sp]
   21110:	add	sp, sp, #4
   21114:	pop	{pc}		; (ldr pc, [sp], #4)
   21118:	str	fp, [sp, #-8]!
   2111c:	str	lr, [sp, #4]
   21120:	add	fp, sp, #4
   21124:	sub	sp, sp, #16
   21128:	str	r0, [fp, #-8]
   2112c:	str	r1, [fp, #-12]
   21130:	str	r2, [fp, #-16]
   21134:	ldr	r2, [fp, #-16]
   21138:	ldr	r1, [fp, #-12]
   2113c:	ldr	r0, [fp, #-8]
   21140:	bl	3c63c <__assert_fail@plt+0x29f50>
   21144:	mov	r3, r0
   21148:	mov	r0, r3
   2114c:	sub	sp, fp, #4
   21150:	ldr	fp, [sp]
   21154:	add	sp, sp, #4
   21158:	pop	{pc}		; (ldr pc, [sp], #4)
   2115c:	str	fp, [sp, #-8]!
   21160:	str	lr, [sp, #4]
   21164:	add	fp, sp, #4
   21168:	sub	sp, sp, #16
   2116c:	str	r0, [fp, #-16]
   21170:	mov	r3, #0
   21174:	str	r3, [fp, #-8]
   21178:	b	211d4 <__assert_fail@plt+0xeae8>
   2117c:	ldr	r3, [fp, #-16]
   21180:	ldr	r2, [r3]
   21184:	movw	r3, #18144	; 0x46e0
   21188:	movt	r3, #1
   2118c:	cmp	r2, r3
   21190:	bne	211a4 <__assert_fail@plt+0xeab8>
   21194:	ldr	r3, [fp, #-8]
   21198:	orr	r3, r3, #1
   2119c:	str	r3, [fp, #-8]
   211a0:	b	211c8 <__assert_fail@plt+0xeadc>
   211a4:	ldr	r3, [fp, #-16]
   211a8:	ldr	r2, [r3]
   211ac:	movw	r3, #24104	; 0x5e28
   211b0:	movt	r3, #1
   211b4:	cmp	r2, r3
   211b8:	bne	211c8 <__assert_fail@plt+0xeadc>
   211bc:	ldr	r3, [fp, #-8]
   211c0:	orr	r3, r3, #2
   211c4:	str	r3, [fp, #-8]
   211c8:	ldr	r3, [fp, #-16]
   211cc:	ldr	r3, [r3, #152]	; 0x98
   211d0:	str	r3, [fp, #-16]
   211d4:	ldr	r3, [fp, #-16]
   211d8:	cmp	r3, #0
   211dc:	bne	2117c <__assert_fail@plt+0xea90>
   211e0:	ldr	r3, [fp, #-8]
   211e4:	and	r3, r3, #2
   211e8:	cmp	r3, #0
   211ec:	beq	2123c <__assert_fail@plt+0xeb50>
   211f0:	ldr	r3, [fp, #-8]
   211f4:	and	r3, r3, #1
   211f8:	cmp	r3, #0
   211fc:	beq	2123c <__assert_fail@plt+0xeb50>
   21200:	movw	r3, #53324	; 0xd04c
   21204:	movt	r3, #7
   21208:	ldrb	r3, [r3, #1]
   2120c:	eor	r3, r3, #1
   21210:	uxtb	r3, r3
   21214:	cmp	r3, #0
   21218:	beq	2123c <__assert_fail@plt+0xeb50>
   2121c:	movw	r0, #32192	; 0x7dc0
   21220:	movt	r0, #6
   21224:	bl	12398 <gettext@plt>
   21228:	mov	r3, r0
   2122c:	mov	r2, r3
   21230:	mov	r1, #0
   21234:	mov	r0, #1
   21238:	bl	122b4 <error@plt>
   2123c:	nop	{0}
   21240:	sub	sp, fp, #4
   21244:	ldr	fp, [sp]
   21248:	add	sp, sp, #4
   2124c:	pop	{pc}		; (ldr pc, [sp], #4)
   21250:	push	{fp}		; (str fp, [sp, #-4]!)
   21254:	add	fp, sp, #0
   21258:	sub	sp, sp, #12
   2125c:	movw	r3, #52916	; 0xceb4
   21260:	movt	r3, #7
   21264:	ldr	r3, [r3]
   21268:	cmp	r3, #0
   2126c:	bne	212e4 <__assert_fail@plt+0xebf8>
   21270:	mov	r3, #0
   21274:	str	r3, [fp, #-8]
   21278:	b	212c4 <__assert_fail@plt+0xebd8>
   2127c:	movw	r3, #30720	; 0x7800
   21280:	movt	r3, #6
   21284:	ldr	r2, [fp, #-8]
   21288:	ldr	r3, [r3, r2, lsl #4]
   2128c:	cmp	r3, #1
   21290:	bne	212b8 <__assert_fail@plt+0xebcc>
   21294:	ldr	r3, [fp, #-8]
   21298:	lsl	r2, r3, #4
   2129c:	movw	r3, #30720	; 0x7800
   212a0:	movt	r3, #6
   212a4:	add	r2, r2, r3
   212a8:	movw	r3, #52916	; 0xceb4
   212ac:	movt	r3, #7
   212b0:	str	r2, [r3]
   212b4:	b	212e4 <__assert_fail@plt+0xebf8>
   212b8:	ldr	r3, [fp, #-8]
   212bc:	add	r3, r3, #1
   212c0:	str	r3, [fp, #-8]
   212c4:	movw	r2, #30720	; 0x7800
   212c8:	movt	r2, #6
   212cc:	ldr	r3, [fp, #-8]
   212d0:	lsl	r3, r3, #4
   212d4:	add	r3, r2, r3
   212d8:	ldr	r3, [r3, #4]
   212dc:	cmp	r3, #0
   212e0:	bne	2127c <__assert_fail@plt+0xeb90>
   212e4:	movw	r3, #52916	; 0xceb4
   212e8:	movt	r3, #7
   212ec:	ldr	r3, [r3]
   212f0:	mov	r0, r3
   212f4:	add	sp, fp, #0
   212f8:	pop	{fp}		; (ldr fp, [sp], #4)
   212fc:	bx	lr
   21300:	str	r4, [sp, #-12]!
   21304:	str	fp, [sp, #4]
   21308:	str	lr, [sp, #8]
   2130c:	add	fp, sp, #8
   21310:	sub	sp, sp, #28
   21314:	str	r0, [fp, #-16]
   21318:	mov	r3, r1
   2131c:	str	r2, [fp, #-24]	; 0xffffffe8
   21320:	strb	r3, [fp, #-17]	; 0xffffffef
   21324:	ldrb	r3, [fp, #-17]	; 0xffffffef
   21328:	cmp	r3, #97	; 0x61
   2132c:	beq	21358 <__assert_fail@plt+0xec6c>
   21330:	cmp	r3, #97	; 0x61
   21334:	bgt	21344 <__assert_fail@plt+0xec58>
   21338:	cmp	r3, #66	; 0x42
   2133c:	beq	21384 <__assert_fail@plt+0xec98>
   21340:	b	21418 <__assert_fail@plt+0xed2c>
   21344:	cmp	r3, #99	; 0x63
   21348:	beq	213c0 <__assert_fail@plt+0xecd4>
   2134c:	cmp	r3, #109	; 0x6d
   21350:	beq	213ec <__assert_fail@plt+0xed00>
   21354:	b	21418 <__assert_fail@plt+0xed2c>
   21358:	ldr	r4, [fp, #-24]	; 0xffffffe8
   2135c:	sub	r3, fp, #36	; 0x24
   21360:	ldr	r1, [fp, #-16]
   21364:	mov	r0, r3
   21368:	bl	3ce58 <__assert_fail@plt+0x2a76c>
   2136c:	mov	r1, r4
   21370:	sub	r3, fp, #36	; 0x24
   21374:	ldrd	r2, [r3]
   21378:	strd	r2, [r1]
   2137c:	mov	r3, #1
   21380:	b	21438 <__assert_fail@plt+0xed4c>
   21384:	ldr	r4, [fp, #-24]	; 0xffffffe8
   21388:	sub	r3, fp, #36	; 0x24
   2138c:	ldr	r1, [fp, #-16]
   21390:	mov	r0, r3
   21394:	bl	3cf0c <__assert_fail@plt+0x2a820>
   21398:	mov	r1, r4
   2139c:	sub	r3, fp, #36	; 0x24
   213a0:	ldrd	r2, [r3]
   213a4:	strd	r2, [r1]
   213a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   213ac:	ldr	r3, [r3, #4]
   213b0:	mvn	r3, r3
   213b4:	lsr	r3, r3, #31
   213b8:	uxtb	r3, r3
   213bc:	b	21438 <__assert_fail@plt+0xed4c>
   213c0:	ldr	r4, [fp, #-24]	; 0xffffffe8
   213c4:	sub	r3, fp, #36	; 0x24
   213c8:	ldr	r1, [fp, #-16]
   213cc:	mov	r0, r3
   213d0:	bl	3ce94 <__assert_fail@plt+0x2a7a8>
   213d4:	mov	r1, r4
   213d8:	sub	r3, fp, #36	; 0x24
   213dc:	ldrd	r2, [r3]
   213e0:	strd	r2, [r1]
   213e4:	mov	r3, #1
   213e8:	b	21438 <__assert_fail@plt+0xed4c>
   213ec:	ldr	r4, [fp, #-24]	; 0xffffffe8
   213f0:	sub	r3, fp, #36	; 0x24
   213f4:	ldr	r1, [fp, #-16]
   213f8:	mov	r0, r3
   213fc:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   21400:	mov	r1, r4
   21404:	sub	r3, fp, #36	; 0x24
   21408:	ldrd	r2, [r3]
   2140c:	strd	r2, [r1]
   21410:	mov	r3, #1
   21414:	b	21438 <__assert_fail@plt+0xed4c>
   21418:	movw	r3, #36168	; 0x8d48
   2141c:	movt	r3, #6
   21420:	movw	r2, #498	; 0x1f2
   21424:	movw	r1, #32364	; 0x7e6c
   21428:	movt	r1, #6
   2142c:	movw	r0, #32376	; 0x7e78
   21430:	movt	r0, #6
   21434:	bl	126ec <__assert_fail@plt>
   21438:	mov	r0, r3
   2143c:	sub	sp, fp, #8
   21440:	ldr	r4, [sp]
   21444:	ldr	fp, [sp, #4]
   21448:	add	sp, sp, #8
   2144c:	pop	{pc}		; (ldr pc, [sp], #4)
   21450:	push	{fp}		; (str fp, [sp, #-4]!)
   21454:	add	fp, sp, #0
   21458:	sub	sp, sp, #12
   2145c:	str	r0, [fp, #-8]
   21460:	ldr	r3, [fp, #-8]
   21464:	cmp	r3, #1
   21468:	beq	21488 <__assert_fail@plt+0xed9c>
   2146c:	ldr	r3, [fp, #-8]
   21470:	cmp	r3, #0
   21474:	beq	214c4 <__assert_fail@plt+0xedd8>
   21478:	ldr	r3, [fp, #-8]
   2147c:	cmp	r3, #2
   21480:	beq	214f0 <__assert_fail@plt+0xee04>
   21484:	b	21528 <__assert_fail@plt+0xee3c>
   21488:	movw	r3, #53324	; 0xd04c
   2148c:	movt	r3, #7
   21490:	movw	r2, #50120	; 0xc3c8
   21494:	movt	r2, #1
   21498:	str	r2, [r3, #52]	; 0x34
   2149c:	movw	r3, #53324	; 0xd04c
   214a0:	movt	r3, #7
   214a4:	movw	r2, #4264	; 0x10a8
   214a8:	movt	r2, #2
   214ac:	str	r2, [r3, #64]	; 0x40
   214b0:	movw	r3, #53324	; 0xd04c
   214b4:	movt	r3, #7
   214b8:	mov	r2, #1
   214bc:	strb	r2, [r3, #12]
   214c0:	b	21528 <__assert_fail@plt+0xee3c>
   214c4:	movw	r3, #53324	; 0xd04c
   214c8:	movt	r3, #7
   214cc:	movw	r2, #50316	; 0xc48c
   214d0:	movt	r2, #1
   214d4:	str	r2, [r3, #52]	; 0x34
   214d8:	movw	r3, #53324	; 0xd04c
   214dc:	movt	r3, #7
   214e0:	movw	r2, #4376	; 0x1118
   214e4:	movt	r2, #2
   214e8:	str	r2, [r3, #64]	; 0x40
   214ec:	b	21528 <__assert_fail@plt+0xee3c>
   214f0:	movw	r3, #53324	; 0xd04c
   214f4:	movt	r3, #7
   214f8:	movw	r2, #49868	; 0xc2cc
   214fc:	movt	r2, #1
   21500:	str	r2, [r3, #52]	; 0x34
   21504:	movw	r3, #53324	; 0xd04c
   21508:	movt	r3, #7
   2150c:	movw	r2, #4108	; 0x100c
   21510:	movt	r2, #2
   21514:	str	r2, [r3, #64]	; 0x40
   21518:	movw	r3, #53324	; 0xd04c
   2151c:	movt	r3, #7
   21520:	mov	r2, #1
   21524:	strb	r2, [r3, #12]
   21528:	movw	r3, #53324	; 0xd04c
   2152c:	movt	r3, #7
   21530:	ldr	r2, [fp, #-8]
   21534:	str	r2, [r3, #48]	; 0x30
   21538:	movw	r3, #53324	; 0xd04c
   2153c:	movt	r3, #7
   21540:	ldr	r3, [r3, #44]	; 0x2c
   21544:	and	r3, r3, #2
   21548:	cmp	r3, #0
   2154c:	beq	21564 <__assert_fail@plt+0xee78>
   21550:	movw	r3, #53324	; 0xd04c
   21554:	movt	r3, #7
   21558:	movw	r2, #50472	; 0xc528
   2155c:	movt	r2, #1
   21560:	str	r2, [r3, #52]	; 0x34
   21564:	nop	{0}
   21568:	add	sp, fp, #0
   2156c:	pop	{fp}		; (ldr fp, [sp], #4)
   21570:	bx	lr
   21574:	push	{fp}		; (str fp, [sp, #-4]!)
   21578:	add	fp, sp, #0
   2157c:	sub	sp, sp, #20
   21580:	str	r0, [fp, #-8]
   21584:	str	r1, [fp, #-12]
   21588:	str	r2, [fp, #-16]
   2158c:	str	r3, [fp, #-20]	; 0xffffffec
   21590:	movw	r3, #52912	; 0xceb0
   21594:	movt	r3, #7
   21598:	mov	r2, #0
   2159c:	str	r2, [r3]
   215a0:	nop	{0}
   215a4:	add	sp, fp, #0
   215a8:	pop	{fp}		; (ldr fp, [sp], #4)
   215ac:	bx	lr
   215b0:	push	{fp}		; (str fp, [sp, #-4]!)
   215b4:	add	fp, sp, #0
   215b8:	sub	sp, sp, #20
   215bc:	str	r0, [fp, #-8]
   215c0:	str	r1, [fp, #-12]
   215c4:	str	r2, [fp, #-16]
   215c8:	str	r3, [fp, #-20]	; 0xffffffec
   215cc:	nop	{0}
   215d0:	add	sp, fp, #0
   215d4:	pop	{fp}		; (ldr fp, [sp], #4)
   215d8:	bx	lr
   215dc:	push	{fp}		; (str fp, [sp, #-4]!)
   215e0:	add	fp, sp, #0
   215e4:	movw	r3, #53324	; 0xd04c
   215e8:	movt	r3, #7
   215ec:	ldrb	r3, [r3, #17]
   215f0:	cmp	r3, #0
   215f4:	beq	21600 <__assert_fail@plt+0xef14>
   215f8:	mov	r3, #0
   215fc:	b	2160c <__assert_fail@plt+0xef20>
   21600:	movw	r3, #53324	; 0xd04c
   21604:	movt	r3, #7
   21608:	ldrb	r3, [r3, #16]
   2160c:	mov	r0, r3
   21610:	add	sp, fp, #0
   21614:	pop	{fp}		; (ldr fp, [sp], #4)
   21618:	bx	lr
   2161c:	str	fp, [sp, #-8]!
   21620:	str	lr, [sp, #4]
   21624:	add	fp, sp, #4
   21628:	sub	sp, sp, #16
   2162c:	str	r0, [fp, #-8]
   21630:	str	r1, [fp, #-12]
   21634:	ldr	r3, [fp, #-12]
   21638:	ldr	r3, [r3]
   2163c:	cmp	r3, #2
   21640:	beq	216f4 <__assert_fail@plt+0xf008>
   21644:	ldr	r3, [fp, #-12]
   21648:	ldr	r3, [r3]
   2164c:	cmp	r3, #1
   21650:	bne	2165c <__assert_fail@plt+0xef70>
   21654:	mov	r3, #0
   21658:	b	216f8 <__assert_fail@plt+0xf00c>
   2165c:	ldr	r3, [fp, #-12]
   21660:	ldr	r3, [r3]
   21664:	cmp	r3, #0
   21668:	bne	216d0 <__assert_fail@plt+0xefe4>
   2166c:	movw	r3, #52912	; 0xceb0
   21670:	movt	r3, #7
   21674:	ldr	r3, [r3]
   21678:	cmp	r3, #0
   2167c:	beq	216f4 <__assert_fail@plt+0xf008>
   21680:	bl	215dc <__assert_fail@plt+0xeef0>
   21684:	mov	r3, r0
   21688:	cmp	r3, #0
   2168c:	beq	216f4 <__assert_fail@plt+0xf008>
   21690:	movw	r0, #32380	; 0x7e7c
   21694:	movt	r0, #6
   21698:	bl	12398 <gettext@plt>
   2169c:	mov	r1, r0
   216a0:	movw	r3, #52912	; 0xceb0
   216a4:	movt	r3, #7
   216a8:	ldr	r3, [r3]
   216ac:	ldr	r2, [fp, #-8]
   216b0:	str	r2, [sp, #4]
   216b4:	str	r3, [sp]
   216b8:	ldr	r3, [fp, #-8]
   216bc:	mov	r2, r1
   216c0:	mov	r1, #0
   216c4:	mov	r0, #0
   216c8:	bl	122b4 <error@plt>
   216cc:	b	216f4 <__assert_fail@plt+0xf008>
   216d0:	movw	r3, #52912	; 0xceb0
   216d4:	movt	r3, #7
   216d8:	ldr	r3, [r3]
   216dc:	cmp	r3, #0
   216e0:	bne	216f4 <__assert_fail@plt+0xf008>
   216e4:	movw	r3, #52912	; 0xceb0
   216e8:	movt	r3, #7
   216ec:	ldr	r2, [fp, #-8]
   216f0:	str	r2, [r3]
   216f4:	ldr	r3, [fp, #-12]
   216f8:	mov	r0, r3
   216fc:	sub	sp, fp, #4
   21700:	ldr	fp, [sp]
   21704:	add	sp, sp, #4
   21708:	pop	{pc}		; (ldr pc, [sp], #4)
   2170c:	str	fp, [sp, #-8]!
   21710:	str	lr, [sp, #4]
   21714:	add	fp, sp, #4
   21718:	sub	sp, sp, #16
   2171c:	str	r0, [fp, #-16]
   21720:	ldr	r3, [fp, #-16]
   21724:	str	r3, [fp, #-12]
   21728:	mov	r2, #6
   2172c:	ldr	r1, [fp, #-16]
   21730:	movw	r0, #32628	; 0x7f74
   21734:	movt	r0, #6
   21738:	bl	1268c <strncmp@plt>
   2173c:	mov	r3, r0
   21740:	cmp	r3, #0
   21744:	bne	21774 <__assert_fail@plt+0xf088>
   21748:	ldr	r0, [fp, #-16]
   2174c:	bl	123bc <strlen@plt>
   21750:	mov	r3, r0
   21754:	cmp	r3, #8
   21758:	bne	21774 <__assert_fail@plt+0xf088>
   2175c:	movw	r1, #30008	; 0x7538
   21760:	movt	r1, #6
   21764:	ldr	r0, [fp, #-12]
   21768:	bl	2161c <__assert_fail@plt+0xef30>
   2176c:	mov	r3, r0
   21770:	b	21824 <__assert_fail@plt+0xf138>
   21774:	ldr	r3, [fp, #-16]
   21778:	ldrb	r3, [r3]
   2177c:	cmp	r3, #45	; 0x2d
   21780:	bne	21790 <__assert_fail@plt+0xf0a4>
   21784:	ldr	r3, [fp, #-16]
   21788:	add	r3, r3, #1
   2178c:	str	r3, [fp, #-16]
   21790:	mov	r3, #0
   21794:	str	r3, [fp, #-8]
   21798:	b	21800 <__assert_fail@plt+0xf114>
   2179c:	movw	r2, #30720	; 0x7800
   217a0:	movt	r2, #6
   217a4:	ldr	r3, [fp, #-8]
   217a8:	lsl	r3, r3, #4
   217ac:	add	r3, r2, r3
   217b0:	ldr	r3, [r3, #4]
   217b4:	ldr	r1, [fp, #-16]
   217b8:	mov	r0, r3
   217bc:	bl	11ffc <strcmp@plt>
   217c0:	mov	r3, r0
   217c4:	cmp	r3, #0
   217c8:	bne	217f4 <__assert_fail@plt+0xf108>
   217cc:	ldr	r3, [fp, #-8]
   217d0:	lsl	r2, r3, #4
   217d4:	movw	r3, #30720	; 0x7800
   217d8:	movt	r3, #6
   217dc:	add	r3, r2, r3
   217e0:	mov	r1, r3
   217e4:	ldr	r0, [fp, #-12]
   217e8:	bl	2161c <__assert_fail@plt+0xef30>
   217ec:	mov	r3, r0
   217f0:	b	21824 <__assert_fail@plt+0xf138>
   217f4:	ldr	r3, [fp, #-8]
   217f8:	add	r3, r3, #1
   217fc:	str	r3, [fp, #-8]
   21800:	movw	r2, #30720	; 0x7800
   21804:	movt	r2, #6
   21808:	ldr	r3, [fp, #-8]
   2180c:	lsl	r3, r3, #4
   21810:	add	r3, r2, r3
   21814:	ldr	r3, [r3, #4]
   21818:	cmp	r3, #0
   2181c:	bne	2179c <__assert_fail@plt+0xf0b0>
   21820:	mov	r3, #0
   21824:	mov	r0, r3
   21828:	sub	sp, fp, #4
   2182c:	ldr	fp, [sp]
   21830:	add	sp, sp, #4
   21834:	pop	{pc}		; (ldr pc, [sp], #4)
   21838:	push	{fp}		; (str fp, [sp, #-4]!)
   2183c:	add	fp, sp, #0
   21840:	sub	sp, sp, #12
   21844:	vstr	s0, [fp, #-8]
   21848:	vldr	s15, [fp, #-8]
   2184c:	vldr	s14, [pc, #112]	; 218c4 <__assert_fail@plt+0xf1d8>
   21850:	vcmpe.f32	s15, s14
   21854:	vmrs	APSR_nzcv, fpscr
   21858:	bpl	21868 <__assert_fail@plt+0xf17c>
   2185c:	movw	r3, #55050	; 0xd70a
   21860:	movt	r3, #15395	; 0x3c23
   21864:	b	218b0 <__assert_fail@plt+0xf1c4>
   21868:	vldr	s15, [fp, #-8]
   2186c:	vldr	s14, [pc, #84]	; 218c8 <__assert_fail@plt+0xf1dc>
   21870:	vcmpe.f32	s15, s14
   21874:	vmrs	APSR_nzcv, fpscr
   21878:	bpl	21888 <__assert_fail@plt+0xf19c>
   2187c:	movw	r3, #39322	; 0x999a
   21880:	movt	r3, #16025	; 0x3e99
   21884:	b	218b0 <__assert_fail@plt+0xf1c4>
   21888:	vldr	s15, [fp, #-8]
   2188c:	vldr	s14, [pc, #56]	; 218cc <__assert_fail@plt+0xf1e0>
   21890:	vcmpe.f32	s15, s14
   21894:	vmrs	APSR_nzcv, fpscr
   21898:	ble	218a8 <__assert_fail@plt+0xf1bc>
   2189c:	movw	r3, #39322	; 0x999a
   218a0:	movt	r3, #16025	; 0x3e99
   218a4:	b	218b0 <__assert_fail@plt+0xf1c4>
   218a8:	movw	r3, #44564	; 0xae14
   218ac:	movt	r3, #16071	; 0x3ec7
   218b0:	vmov	s15, r3
   218b4:	vmov.f32	s0, s15
   218b8:	add	sp, fp, #0
   218bc:	pop	{fp}		; (ldr fp, [sp], #4)
   218c0:	bx	lr
   218c4:	stclcc	12, cr12, [ip, #820]	; 0x334
   218c8:	svccc	0x00800000
   218cc:	sbcmi	r0, r8, #0
   218d0:	str	fp, [sp, #-8]!
   218d4:	str	lr, [sp, #4]
   218d8:	add	fp, sp, #4
   218dc:	sub	sp, sp, #16
   218e0:	str	r0, [fp, #-16]
   218e4:	movw	r3, #53324	; 0xd04c
   218e8:	movt	r3, #7
   218ec:	ldr	r2, [r3, #28]
   218f0:	ldr	r3, [fp, #-16]
   218f4:	sub	r3, r2, r3
   218f8:	movw	r2, #17671	; 0x4507
   218fc:	movt	r2, #49710	; 0xc22e
   21900:	smull	r1, r2, r2, r3
   21904:	add	r2, r2, r3
   21908:	asr	r2, r2, #16
   2190c:	asr	r3, r3, #31
   21910:	sub	r3, r2, r3
   21914:	str	r3, [fp, #-8]
   21918:	ldr	r3, [fp, #-8]
   2191c:	vmov	s15, r3
   21920:	vcvt.f32.s32	s15, s15
   21924:	vmov.f32	s0, s15
   21928:	bl	21838 <__assert_fail@plt+0xf14c>
   2192c:	vmov.f32	s15, s0
   21930:	vmov.f32	s0, s15
   21934:	sub	sp, fp, #4
   21938:	ldr	fp, [sp]
   2193c:	add	sp, sp, #4
   21940:	pop	{pc}		; (ldr pc, [sp], #4)
   21944:	push	{fp}		; (str fp, [sp, #-4]!)
   21948:	add	fp, sp, #0
   2194c:	sub	sp, sp, #20
   21950:	str	r0, [fp, #-8]
   21954:	str	r1, [fp, #-12]
   21958:	str	r2, [fp, #-16]
   2195c:	ldr	r3, [fp, #-8]
   21960:	cmp	r3, #0
   21964:	beq	21988 <__assert_fail@plt+0xf29c>
   21968:	ldr	r3, [fp, #-12]
   2196c:	ldr	r3, [r3]
   21970:	lsl	r3, r3, #2
   21974:	ldr	r2, [fp, #-8]
   21978:	add	r3, r2, r3
   2197c:	ldr	r3, [r3]
   21980:	cmp	r3, #0
   21984:	bne	2199c <__assert_fail@plt+0xf2b0>
   21988:	ldr	r3, [fp, #-16]
   2198c:	mov	r2, #0
   21990:	str	r2, [r3]
   21994:	mov	r3, #0
   21998:	b	219d4 <__assert_fail@plt+0xf2e8>
   2199c:	ldr	r3, [fp, #-12]
   219a0:	ldr	r3, [r3]
   219a4:	lsl	r3, r3, #2
   219a8:	ldr	r2, [fp, #-8]
   219ac:	add	r3, r2, r3
   219b0:	ldr	r2, [r3]
   219b4:	ldr	r3, [fp, #-16]
   219b8:	str	r2, [r3]
   219bc:	ldr	r3, [fp, #-12]
   219c0:	ldr	r3, [r3]
   219c4:	add	r2, r3, #1
   219c8:	ldr	r3, [fp, #-12]
   219cc:	str	r2, [r3]
   219d0:	mov	r3, #1
   219d4:	mov	r0, r3
   219d8:	add	sp, fp, #0
   219dc:	pop	{fp}		; (ldr fp, [sp], #4)
   219e0:	bx	lr
   219e4:	str	fp, [sp, #-8]!
   219e8:	str	lr, [sp, #4]
   219ec:	add	fp, sp, #4
   219f0:	sub	sp, sp, #24
   219f4:	str	r0, [fp, #-16]
   219f8:	str	r1, [fp, #-20]	; 0xffffffec
   219fc:	str	r2, [fp, #-24]	; 0xffffffe8
   21a00:	sub	r3, fp, #12
   21a04:	mov	r2, r3
   21a08:	ldr	r1, [fp, #-20]	; 0xffffffec
   21a0c:	ldr	r0, [fp, #-16]
   21a10:	bl	21944 <__assert_fail@plt+0xf258>
   21a14:	mov	r3, r0
   21a18:	strb	r3, [fp, #-5]
   21a1c:	ldr	r2, [fp, #-12]
   21a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21a24:	str	r2, [r3]
   21a28:	ldrb	r3, [fp, #-5]
   21a2c:	mov	r0, r3
   21a30:	sub	sp, fp, #4
   21a34:	ldr	fp, [sp]
   21a38:	add	sp, sp, #4
   21a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   21a40:	str	fp, [sp, #-8]!
   21a44:	str	lr, [sp, #4]
   21a48:	add	fp, sp, #4
   21a4c:	sub	sp, sp, #24
   21a50:	str	r0, [fp, #-16]
   21a54:	str	r1, [fp, #-20]	; 0xffffffec
   21a58:	str	r2, [fp, #-24]	; 0xffffffe8
   21a5c:	str	r3, [fp, #-28]	; 0xffffffe4
   21a60:	sub	r3, fp, #8
   21a64:	mov	r2, r3
   21a68:	ldr	r1, [fp, #-20]	; 0xffffffec
   21a6c:	ldr	r0, [fp, #-16]
   21a70:	bl	219e4 <__assert_fail@plt+0xf2f8>
   21a74:	mov	r3, r0
   21a78:	cmp	r3, #0
   21a7c:	beq	21ad8 <__assert_fail@plt+0xf3ec>
   21a80:	ldr	r2, [fp, #-8]
   21a84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a88:	str	r2, [r3]
   21a8c:	movw	r3, #53324	; 0xd04c
   21a90:	movt	r3, #7
   21a94:	ldr	r3, [r3, #52]	; 0x34
   21a98:	ldr	r2, [fp, #-8]
   21a9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21aa0:	mov	r0, r2
   21aa4:	blx	r3
   21aa8:	mov	r3, r0
   21aac:	cmp	r3, #0
   21ab0:	beq	21ad0 <__assert_fail@plt+0xf3e4>
   21ab4:	bl	12404 <__errno_location@plt>
   21ab8:	mov	r3, r0
   21abc:	ldr	r3, [r3]
   21ac0:	ldr	r2, [fp, #-8]
   21ac4:	mov	r1, r2
   21ac8:	mov	r0, r3
   21acc:	bl	1d528 <__assert_fail@plt+0xae3c>
   21ad0:	mov	r3, #1
   21ad4:	b	21ae8 <__assert_fail@plt+0xf3fc>
   21ad8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21adc:	mov	r2, #0
   21ae0:	str	r2, [r3]
   21ae4:	mov	r3, #0
   21ae8:	mov	r0, r3
   21aec:	sub	sp, fp, #4
   21af0:	ldr	fp, [sp]
   21af4:	add	sp, sp, #4
   21af8:	pop	{pc}		; (ldr pc, [sp], #4)
   21afc:	str	fp, [sp, #-8]!
   21b00:	str	lr, [sp, #4]
   21b04:	add	fp, sp, #4
   21b08:	sub	sp, sp, #24
   21b0c:	str	r0, [fp, #-16]
   21b10:	str	r1, [fp, #-20]	; 0xffffffec
   21b14:	str	r2, [fp, #-24]	; 0xffffffe8
   21b18:	ldr	r0, [fp, #-16]
   21b1c:	bl	1a88c <__assert_fail@plt+0x81a0>
   21b20:	str	r0, [fp, #-8]
   21b24:	ldr	r2, [fp, #-8]
   21b28:	movw	r3, #17168	; 0x4310
   21b2c:	movt	r3, #1
   21b30:	str	r3, [r2]
   21b34:	ldr	r3, [fp, #-8]
   21b38:	mov	r2, #3
   21b3c:	str	r2, [r3, #8]
   21b40:	ldr	r3, [fp, #-8]
   21b44:	mov	r2, #3
   21b48:	str	r2, [r3, #12]
   21b4c:	ldr	r3, [fp, #-8]
   21b50:	mov	r2, #0
   21b54:	strb	r2, [r3, #19]
   21b58:	ldr	r3, [fp, #-8]
   21b5c:	ldrb	r2, [r3, #19]
   21b60:	ldr	r3, [fp, #-8]
   21b64:	strb	r2, [r3, #18]
   21b68:	mov	r3, #1
   21b6c:	mov	r0, r3
   21b70:	sub	sp, fp, #4
   21b74:	ldr	fp, [sp]
   21b78:	add	sp, sp, #4
   21b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   21b80:	str	r4, [sp, #-12]!
   21b84:	str	fp, [sp, #4]
   21b88:	str	lr, [sp, #8]
   21b8c:	add	fp, sp, #8
   21b90:	sub	sp, sp, #148	; 0x94
   21b94:	str	r0, [fp, #-136]	; 0xffffff78
   21b98:	str	r1, [fp, #-140]	; 0xffffff74
   21b9c:	str	r2, [fp, #-144]	; 0xffffff70
   21ba0:	sub	r3, fp, #124	; 0x7c
   21ba4:	mov	r0, r3
   21ba8:	bl	1b728 <__assert_fail@plt+0x903c>
   21bac:	sub	r3, fp, #128	; 0x80
   21bb0:	sub	r2, fp, #124	; 0x7c
   21bb4:	ldr	r1, [fp, #-144]	; 0xffffff70
   21bb8:	ldr	r0, [fp, #-140]	; 0xffffff74
   21bbc:	bl	21a40 <__assert_fail@plt+0xf354>
   21bc0:	mov	r3, r0
   21bc4:	cmp	r3, #0
   21bc8:	beq	21c40 <__assert_fail@plt+0xf554>
   21bcc:	ldr	r3, [fp, #-128]	; 0xffffff80
   21bd0:	mov	r1, r3
   21bd4:	ldr	r0, [fp, #-136]	; 0xffffff78
   21bd8:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   21bdc:	str	r0, [fp, #-16]
   21be0:	ldr	r3, [fp, #-16]
   21be4:	mov	r2, #0
   21be8:	str	r2, [r3, #40]	; 0x28
   21bec:	ldr	r4, [fp, #-16]
   21bf0:	sub	r3, fp, #156	; 0x9c
   21bf4:	sub	r2, fp, #124	; 0x7c
   21bf8:	mov	r1, r2
   21bfc:	mov	r0, r3
   21c00:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   21c04:	add	r1, r4, #48	; 0x30
   21c08:	sub	r3, fp, #156	; 0x9c
   21c0c:	ldrd	r2, [r3]
   21c10:	strd	r2, [r1]
   21c14:	ldr	r3, [fp, #-16]
   21c18:	mov	r2, #0
   21c1c:	str	r2, [r3, #44]	; 0x2c
   21c20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21c24:	mov	r0, r3
   21c28:	bl	218d0 <__assert_fail@plt+0xf1e4>
   21c2c:	vmov.f32	s15, s0
   21c30:	ldr	r3, [fp, #-16]
   21c34:	vstr	s15, [r3, #28]
   21c38:	mov	r3, #1
   21c3c:	b	21c44 <__assert_fail@plt+0xf558>
   21c40:	mov	r3, #0
   21c44:	mov	r0, r3
   21c48:	sub	sp, fp, #8
   21c4c:	ldr	r4, [sp]
   21c50:	ldr	fp, [sp, #4]
   21c54:	add	sp, sp, #8
   21c58:	pop	{pc}		; (ldr pc, [sp], #4)
   21c5c:	str	fp, [sp, #-8]!
   21c60:	str	lr, [sp, #4]
   21c64:	add	fp, sp, #4
   21c68:	sub	sp, sp, #24
   21c6c:	str	r0, [fp, #-16]
   21c70:	str	r1, [fp, #-20]	; 0xffffffec
   21c74:	str	r2, [fp, #-24]	; 0xffffffe8
   21c78:	ldr	r0, [fp, #-16]
   21c7c:	bl	1a88c <__assert_fail@plt+0x81a0>
   21c80:	str	r0, [fp, #-8]
   21c84:	ldr	r2, [fp, #-8]
   21c88:	movw	r3, #17552	; 0x4490
   21c8c:	movt	r3, #1
   21c90:	str	r3, [r2]
   21c94:	ldr	r3, [fp, #-8]
   21c98:	mov	r2, #5
   21c9c:	str	r2, [r3, #8]
   21ca0:	ldr	r3, [fp, #-8]
   21ca4:	mov	r2, #0
   21ca8:	str	r2, [r3, #12]
   21cac:	ldr	r3, [fp, #-8]
   21cb0:	mov	r2, #0
   21cb4:	strb	r2, [r3, #19]
   21cb8:	ldr	r3, [fp, #-8]
   21cbc:	ldrb	r2, [r3, #19]
   21cc0:	ldr	r3, [fp, #-8]
   21cc4:	strb	r2, [r3, #18]
   21cc8:	mov	r3, #1
   21ccc:	mov	r0, r3
   21cd0:	sub	sp, fp, #4
   21cd4:	ldr	fp, [sp]
   21cd8:	add	sp, sp, #4
   21cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   21ce0:	str	r4, [sp, #-12]!
   21ce4:	str	fp, [sp, #4]
   21ce8:	str	lr, [sp, #8]
   21cec:	add	fp, sp, #8
   21cf0:	sub	sp, sp, #148	; 0x94
   21cf4:	str	r0, [fp, #-136]	; 0xffffff78
   21cf8:	str	r1, [fp, #-140]	; 0xffffff74
   21cfc:	str	r2, [fp, #-144]	; 0xffffff70
   21d00:	sub	r3, fp, #124	; 0x7c
   21d04:	mov	r0, r3
   21d08:	bl	1b728 <__assert_fail@plt+0x903c>
   21d0c:	sub	r3, fp, #128	; 0x80
   21d10:	sub	r2, fp, #124	; 0x7c
   21d14:	ldr	r1, [fp, #-144]	; 0xffffff70
   21d18:	ldr	r0, [fp, #-140]	; 0xffffff74
   21d1c:	bl	21a40 <__assert_fail@plt+0xf354>
   21d20:	mov	r3, r0
   21d24:	cmp	r3, #0
   21d28:	beq	21da0 <__assert_fail@plt+0xf6b4>
   21d2c:	ldr	r3, [fp, #-128]	; 0xffffff80
   21d30:	mov	r1, r3
   21d34:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d38:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   21d3c:	str	r0, [fp, #-16]
   21d40:	ldr	r3, [fp, #-16]
   21d44:	mov	r2, #2
   21d48:	str	r2, [r3, #40]	; 0x28
   21d4c:	ldr	r4, [fp, #-16]
   21d50:	sub	r3, fp, #156	; 0x9c
   21d54:	sub	r2, fp, #124	; 0x7c
   21d58:	mov	r1, r2
   21d5c:	mov	r0, r3
   21d60:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   21d64:	add	r1, r4, #48	; 0x30
   21d68:	sub	r3, fp, #156	; 0x9c
   21d6c:	ldrd	r2, [r3]
   21d70:	strd	r2, [r1]
   21d74:	ldr	r3, [fp, #-16]
   21d78:	mov	r2, #0
   21d7c:	str	r2, [r3, #44]	; 0x2c
   21d80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   21d84:	mov	r0, r3
   21d88:	bl	218d0 <__assert_fail@plt+0xf1e4>
   21d8c:	vmov.f32	s15, s0
   21d90:	ldr	r3, [fp, #-16]
   21d94:	vstr	s15, [r3, #28]
   21d98:	mov	r3, #1
   21d9c:	b	21da4 <__assert_fail@plt+0xf6b8>
   21da0:	mov	r3, #0
   21da4:	mov	r0, r3
   21da8:	sub	sp, fp, #8
   21dac:	ldr	r4, [sp]
   21db0:	ldr	fp, [sp, #4]
   21db4:	add	sp, sp, #8
   21db8:	pop	{pc}		; (ldr pc, [sp], #4)
   21dbc:	str	fp, [sp, #-8]!
   21dc0:	str	lr, [sp, #4]
   21dc4:	add	fp, sp, #4
   21dc8:	sub	sp, sp, #24
   21dcc:	str	r0, [fp, #-16]
   21dd0:	str	r1, [fp, #-20]	; 0xffffffec
   21dd4:	str	r2, [fp, #-24]	; 0xffffffe8
   21dd8:	ldr	r0, [fp, #-16]
   21ddc:	bl	1a88c <__assert_fail@plt+0x81a0>
   21de0:	str	r0, [fp, #-8]
   21de4:	ldr	r2, [fp, #-8]
   21de8:	movw	r3, #17840	; 0x45b0
   21dec:	movt	r3, #1
   21df0:	str	r3, [r2]
   21df4:	ldr	r3, [fp, #-8]
   21df8:	mov	r2, #3
   21dfc:	str	r2, [r3, #8]
   21e00:	ldr	r3, [fp, #-8]
   21e04:	mov	r2, #1
   21e08:	str	r2, [r3, #12]
   21e0c:	ldr	r3, [fp, #-8]
   21e10:	mov	r2, #0
   21e14:	strb	r2, [r3, #19]
   21e18:	ldr	r3, [fp, #-8]
   21e1c:	ldrb	r2, [r3, #19]
   21e20:	ldr	r3, [fp, #-8]
   21e24:	strb	r2, [r3, #18]
   21e28:	ldr	r3, [fp, #-8]
   21e2c:	mov	r2, #1065353216	; 0x3f800000
   21e30:	str	r2, [r3, #28]
   21e34:	mov	r3, #1
   21e38:	mov	r0, r3
   21e3c:	sub	sp, fp, #4
   21e40:	ldr	fp, [sp]
   21e44:	add	sp, sp, #4
   21e48:	pop	{pc}		; (ldr pc, [sp], #4)
   21e4c:	str	fp, [sp, #-8]!
   21e50:	str	lr, [sp, #4]
   21e54:	add	fp, sp, #4
   21e58:	sub	sp, sp, #24
   21e5c:	str	r0, [fp, #-16]
   21e60:	str	r1, [fp, #-20]	; 0xffffffec
   21e64:	str	r2, [fp, #-24]	; 0xffffffe8
   21e68:	movw	r3, #53324	; 0xd04c
   21e6c:	movt	r3, #7
   21e70:	ldrb	r3, [r3, #36]	; 0x24
   21e74:	eor	r3, r3, #1
   21e78:	uxtb	r3, r3
   21e7c:	cmp	r3, #0
   21e80:	beq	21f6c <__assert_fail@plt+0xf880>
   21e84:	movw	r3, #53324	; 0xd04c
   21e88:	movt	r3, #7
   21e8c:	ldr	r3, [r3, #28]
   21e90:	add	r3, r3, #86016	; 0x15000
   21e94:	add	r3, r3, #384	; 0x180
   21e98:	movw	r2, #53324	; 0xd04c
   21e9c:	movt	r2, #7
   21ea0:	str	r3, [r2, #28]
   21ea4:	movw	r3, #53324	; 0xd04c
   21ea8:	movt	r3, #7
   21eac:	mov	r2, #0
   21eb0:	str	r2, [r3, #32]
   21eb4:	ldr	r0, [pc, #200]	; 21f84 <__assert_fail@plt+0xf898>
   21eb8:	bl	12344 <localtime@plt>
   21ebc:	str	r0, [fp, #-8]
   21ec0:	movw	r3, #53324	; 0xd04c
   21ec4:	movt	r3, #7
   21ec8:	ldr	r0, [r3, #28]
   21ecc:	ldr	r3, [fp, #-8]
   21ed0:	cmp	r3, #0
   21ed4:	beq	21f14 <__assert_fail@plt+0xf828>
   21ed8:	ldr	r3, [fp, #-8]
   21edc:	ldr	r1, [r3]
   21ee0:	ldr	r3, [fp, #-8]
   21ee4:	ldr	r2, [r3, #4]
   21ee8:	mov	r3, r2
   21eec:	lsl	r3, r3, #4
   21ef0:	sub	r3, r3, r2
   21ef4:	lsl	r3, r3, #2
   21ef8:	add	r2, r1, r3
   21efc:	ldr	r3, [fp, #-8]
   21f00:	ldr	r3, [r3, #8]
   21f04:	mov	r1, #3600	; 0xe10
   21f08:	mul	r3, r1, r3
   21f0c:	add	r3, r2, r3
   21f10:	b	21f4c <__assert_fail@plt+0xf860>
   21f14:	movw	r3, #53324	; 0xd04c
   21f18:	movt	r3, #7
   21f1c:	ldr	r2, [r3, #28]
   21f20:	movw	r3, #17671	; 0x4507
   21f24:	movt	r3, #49710	; 0xc22e
   21f28:	smull	r1, r3, r3, r2
   21f2c:	add	r3, r3, r2
   21f30:	asr	r1, r3, #16
   21f34:	asr	r3, r2, #31
   21f38:	sub	r3, r1, r3
   21f3c:	movw	r1, #20864	; 0x5180
   21f40:	movt	r1, #1
   21f44:	mul	r3, r1, r3
   21f48:	sub	r3, r2, r3
   21f4c:	sub	r2, r0, r3
   21f50:	movw	r3, #53324	; 0xd04c
   21f54:	movt	r3, #7
   21f58:	str	r2, [r3, #28]
   21f5c:	movw	r3, #53324	; 0xd04c
   21f60:	movt	r3, #7
   21f64:	mov	r2, #1
   21f68:	strb	r2, [r3, #36]	; 0x24
   21f6c:	mov	r3, #1
   21f70:	mov	r0, r3
   21f74:	sub	sp, fp, #4
   21f78:	ldr	fp, [sp]
   21f7c:	add	sp, sp, #4
   21f80:	pop	{pc}		; (ldr pc, [sp], #4)
   21f84:	andeq	sp, r7, r8, rrx
   21f88:	str	fp, [sp, #-8]!
   21f8c:	str	lr, [sp, #4]
   21f90:	add	fp, sp, #4
   21f94:	sub	sp, sp, #24
   21f98:	str	r0, [fp, #-16]
   21f9c:	str	r1, [fp, #-20]	; 0xffffffec
   21fa0:	str	r2, [fp, #-24]	; 0xffffffe8
   21fa4:	ldr	r0, [fp, #-16]
   21fa8:	bl	1b328 <__assert_fail@plt+0x8c3c>
   21fac:	str	r0, [fp, #-8]
   21fb0:	ldr	r3, [fp, #-8]
   21fb4:	mov	r2, #1
   21fb8:	strb	r2, [r3, #17]
   21fbc:	ldr	r3, [fp, #-8]
   21fc0:	ldrb	r2, [r3, #17]
   21fc4:	ldr	r3, [fp, #-8]
   21fc8:	strb	r2, [r3, #16]
   21fcc:	movw	r3, #53324	; 0xd04c
   21fd0:	movt	r3, #7
   21fd4:	mov	r2, #0
   21fd8:	strb	r2, [r3]
   21fdc:	ldr	r3, [fp, #-8]
   21fe0:	mov	r2, #0
   21fe4:	strb	r2, [r3, #19]
   21fe8:	ldr	r3, [fp, #-8]
   21fec:	ldrb	r2, [r3, #19]
   21ff0:	ldr	r3, [fp, #-8]
   21ff4:	strb	r2, [r3, #18]
   21ff8:	ldr	r3, [fp, #-8]
   21ffc:	mov	r2, #1065353216	; 0x3f800000
   22000:	str	r2, [r3, #28]
   22004:	mov	r3, #1
   22008:	mov	r0, r3
   2200c:	sub	sp, fp, #4
   22010:	ldr	fp, [sp]
   22014:	add	sp, sp, #4
   22018:	pop	{pc}		; (ldr pc, [sp], #4)
   2201c:	str	fp, [sp, #-8]!
   22020:	str	lr, [sp, #4]
   22024:	add	fp, sp, #4
   22028:	sub	sp, sp, #16
   2202c:	str	r0, [fp, #-8]
   22030:	str	r1, [fp, #-12]
   22034:	str	r2, [fp, #-16]
   22038:	movw	r3, #53324	; 0xd04c
   2203c:	movt	r3, #7
   22040:	mov	r2, #0
   22044:	strb	r2, [r3]
   22048:	movw	r3, #53324	; 0xd04c
   2204c:	movt	r3, #7
   22050:	mov	r2, #1
   22054:	strb	r2, [r3, #1]
   22058:	ldr	r2, [fp, #-16]
   2205c:	ldr	r1, [fp, #-12]
   22060:	ldr	r0, [fp, #-8]
   22064:	bl	25444 <__assert_fail@plt+0x12d58>
   22068:	mov	r3, r0
   2206c:	mov	r0, r3
   22070:	sub	sp, fp, #4
   22074:	ldr	fp, [sp]
   22078:	add	sp, sp, #4
   2207c:	pop	{pc}		; (ldr pc, [sp], #4)
   22080:	str	fp, [sp, #-8]!
   22084:	str	lr, [sp, #4]
   22088:	add	fp, sp, #4
   2208c:	sub	sp, sp, #16
   22090:	str	r0, [fp, #-8]
   22094:	str	r1, [fp, #-12]
   22098:	str	r2, [fp, #-16]
   2209c:	bl	215dc <__assert_fail@plt+0xeef0>
   220a0:	mov	r3, r0
   220a4:	cmp	r3, #0
   220a8:	beq	220cc <__assert_fail@plt+0xf9e0>
   220ac:	movw	r0, #32636	; 0x7f7c
   220b0:	movt	r0, #6
   220b4:	bl	12398 <gettext@plt>
   220b8:	mov	r3, r0
   220bc:	mov	r2, r3
   220c0:	mov	r1, #0
   220c4:	mov	r0, #0
   220c8:	bl	122b4 <error@plt>
   220cc:	ldr	r2, [fp, #-16]
   220d0:	ldr	r1, [fp, #-12]
   220d4:	ldr	r0, [fp, #-8]
   220d8:	bl	2201c <__assert_fail@plt+0xf930>
   220dc:	mov	r3, r0
   220e0:	mov	r0, r3
   220e4:	sub	sp, fp, #4
   220e8:	ldr	fp, [sp]
   220ec:	add	sp, sp, #4
   220f0:	pop	{pc}		; (ldr pc, [sp], #4)
   220f4:	str	fp, [sp, #-8]!
   220f8:	str	lr, [sp, #4]
   220fc:	add	fp, sp, #4
   22100:	sub	sp, sp, #24
   22104:	str	r0, [fp, #-16]
   22108:	str	r1, [fp, #-20]	; 0xffffffec
   2210c:	str	r2, [fp, #-24]	; 0xffffffe8
   22110:	ldr	r0, [fp, #-16]
   22114:	bl	1b328 <__assert_fail@plt+0x8c3c>
   22118:	str	r0, [fp, #-8]
   2211c:	ldr	r3, [fp, #-8]
   22120:	movw	r2, #55050	; 0xd70a
   22124:	movt	r2, #15395	; 0x3c23
   22128:	str	r2, [r3, #28]
   2212c:	mov	r3, #1
   22130:	mov	r0, r3
   22134:	sub	sp, fp, #4
   22138:	ldr	fp, [sp]
   2213c:	add	sp, sp, #4
   22140:	pop	{pc}		; (ldr pc, [sp], #4)
   22144:	str	fp, [sp, #-8]!
   22148:	str	lr, [sp, #4]
   2214c:	add	fp, sp, #4
   22150:	sub	sp, sp, #16
   22154:	str	r0, [fp, #-8]
   22158:	str	r1, [fp, #-12]
   2215c:	str	r2, [fp, #-16]
   22160:	ldr	r3, [fp, #-16]
   22164:	ldr	r2, [fp, #-12]
   22168:	ldr	r1, [fp, #-8]
   2216c:	movw	r0, #32752	; 0x7ff0
   22170:	movt	r0, #6
   22174:	bl	26368 <__assert_fail@plt+0x13c7c>
   22178:	mov	r3, r0
   2217c:	mov	r0, r3
   22180:	sub	sp, fp, #4
   22184:	ldr	fp, [sp]
   22188:	add	sp, sp, #4
   2218c:	pop	{pc}		; (ldr pc, [sp], #4)
   22190:	str	fp, [sp, #-8]!
   22194:	str	lr, [sp, #4]
   22198:	add	fp, sp, #4
   2219c:	sub	sp, sp, #16
   221a0:	str	r0, [fp, #-8]
   221a4:	str	r1, [fp, #-12]
   221a8:	str	r2, [fp, #-16]
   221ac:	ldr	r3, [fp, #-16]
   221b0:	ldr	r2, [fp, #-12]
   221b4:	ldr	r1, [fp, #-8]
   221b8:	movw	r0, #32760	; 0x7ff8
   221bc:	movt	r0, #6
   221c0:	bl	26368 <__assert_fail@plt+0x13c7c>
   221c4:	mov	r3, r0
   221c8:	mov	r0, r3
   221cc:	sub	sp, fp, #4
   221d0:	ldr	fp, [sp]
   221d4:	add	sp, sp, #4
   221d8:	pop	{pc}		; (ldr pc, [sp], #4)
   221dc:	str	fp, [sp, #-8]!
   221e0:	str	lr, [sp, #4]
   221e4:	add	fp, sp, #4
   221e8:	sub	sp, sp, #8
   221ec:	movw	r0, #30660	; 0x77c4
   221f0:	movt	r0, #6
   221f4:	bl	2170c <__assert_fail@plt+0xf020>
   221f8:	str	r0, [fp, #-8]
   221fc:	ldr	r0, [fp, #-8]
   22200:	bl	1b328 <__assert_fail@plt+0x8c3c>
   22204:	str	r0, [fp, #-12]
   22208:	ldr	r3, [fp, #-12]
   2220c:	mov	r2, #0
   22210:	strb	r2, [r3, #19]
   22214:	ldr	r3, [fp, #-12]
   22218:	ldrb	r2, [r3, #19]
   2221c:	ldr	r3, [fp, #-12]
   22220:	strb	r2, [r3, #18]
   22224:	ldr	r3, [fp, #-12]
   22228:	mov	r2, #0
   2222c:	strb	r2, [r3, #17]
   22230:	ldr	r3, [fp, #-12]
   22234:	ldrb	r2, [r3, #17]
   22238:	ldr	r3, [fp, #-12]
   2223c:	strb	r2, [r3, #16]
   22240:	ldr	r3, [fp, #-12]
   22244:	mov	r2, #0
   22248:	str	r2, [r3, #28]
   2224c:	mov	r3, #1
   22250:	mov	r0, r3
   22254:	sub	sp, fp, #4
   22258:	ldr	fp, [sp]
   2225c:	add	sp, sp, #4
   22260:	pop	{pc}		; (ldr pc, [sp], #4)
   22264:	str	fp, [sp, #-8]!
   22268:	str	lr, [sp, #4]
   2226c:	add	fp, sp, #4
   22270:	sub	sp, sp, #16
   22274:	str	r0, [fp, #-8]
   22278:	str	r1, [fp, #-12]
   2227c:	str	r2, [fp, #-16]
   22280:	bl	221dc <__assert_fail@plt+0xfaf0>
   22284:	mov	r3, r0
   22288:	mov	r0, r3
   2228c:	sub	sp, fp, #4
   22290:	ldr	fp, [sp]
   22294:	add	sp, sp, #4
   22298:	pop	{pc}		; (ldr pc, [sp], #4)
   2229c:	str	fp, [sp, #-8]!
   222a0:	str	lr, [sp, #4]
   222a4:	add	fp, sp, #4
   222a8:	sub	sp, sp, #24
   222ac:	str	r0, [fp, #-16]
   222b0:	str	r1, [fp, #-20]	; 0xffffffec
   222b4:	str	r2, [fp, #-24]	; 0xffffffe8
   222b8:	sub	r3, fp, #8
   222bc:	mov	r2, r3
   222c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   222c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   222c8:	bl	219e4 <__assert_fail@plt+0xf2f8>
   222cc:	mov	r3, r0
   222d0:	cmp	r3, #0
   222d4:	beq	222f0 <__assert_fail@plt+0xfc04>
   222d8:	ldr	r2, [fp, #-8]
   222dc:	movw	r3, #53324	; 0xd04c
   222e0:	movt	r3, #7
   222e4:	str	r2, [r3, #76]	; 0x4c
   222e8:	mov	r3, #1
   222ec:	b	222f4 <__assert_fail@plt+0xfc08>
   222f0:	mov	r3, #0
   222f4:	mov	r0, r3
   222f8:	sub	sp, fp, #4
   222fc:	ldr	fp, [sp]
   22300:	add	sp, sp, #4
   22304:	pop	{pc}		; (ldr pc, [sp], #4)
   22308:	str	fp, [sp, #-8]!
   2230c:	str	lr, [sp, #4]
   22310:	add	fp, sp, #4
   22314:	sub	sp, sp, #16
   22318:	str	r0, [fp, #-16]
   2231c:	str	r1, [fp, #-20]	; 0xffffffec
   22320:	ldr	r0, [fp, #-16]
   22324:	bl	1b328 <__assert_fail@plt+0x8c3c>
   22328:	str	r0, [fp, #-8]
   2232c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22330:	cmp	r3, #0
   22334:	beq	22350 <__assert_fail@plt+0xfc64>
   22338:	ldr	r3, [fp, #-8]
   2233c:	add	r3, r3, #40	; 0x28
   22340:	mov	r1, r3
   22344:	ldr	r0, [fp, #-20]	; 0xffffffec
   22348:	bl	27474 <__assert_fail@plt+0x14d88>
   2234c:	b	22360 <__assert_fail@plt+0xfc74>
   22350:	ldr	r3, [fp, #-8]
   22354:	add	r3, r3, #40	; 0x28
   22358:	mov	r0, r3
   2235c:	bl	275d4 <__assert_fail@plt+0x14ee8>
   22360:	ldr	r3, [fp, #-8]
   22364:	mov	r2, #1
   22368:	strb	r2, [r3, #17]
   2236c:	ldr	r3, [fp, #-8]
   22370:	ldrb	r2, [r3, #17]
   22374:	ldr	r3, [fp, #-8]
   22378:	strb	r2, [r3, #16]
   2237c:	ldr	r3, [fp, #-8]
   22380:	mov	r2, #1065353216	; 0x3f800000
   22384:	str	r2, [r3, #28]
   22388:	mov	r3, #1
   2238c:	mov	r0, r3
   22390:	sub	sp, fp, #4
   22394:	ldr	fp, [sp]
   22398:	add	sp, sp, #4
   2239c:	pop	{pc}		; (ldr pc, [sp], #4)
   223a0:	str	fp, [sp, #-8]!
   223a4:	str	lr, [sp, #4]
   223a8:	add	fp, sp, #4
   223ac:	sub	sp, sp, #24
   223b0:	str	r0, [fp, #-16]
   223b4:	str	r1, [fp, #-20]	; 0xffffffec
   223b8:	str	r2, [fp, #-24]	; 0xffffffe8
   223bc:	sub	r3, fp, #8
   223c0:	mov	r2, r3
   223c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   223c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   223cc:	bl	219e4 <__assert_fail@plt+0xf2f8>
   223d0:	mov	r3, r0
   223d4:	cmp	r3, #0
   223d8:	beq	22414 <__assert_fail@plt+0xfd28>
   223dc:	ldr	r3, [fp, #-8]
   223e0:	mov	r1, r3
   223e4:	ldr	r0, [fp, #-16]
   223e8:	bl	22308 <__assert_fail@plt+0xfc1c>
   223ec:	mov	r3, r0
   223f0:	cmp	r3, #0
   223f4:	beq	22400 <__assert_fail@plt+0xfd14>
   223f8:	mov	r3, #1
   223fc:	b	22418 <__assert_fail@plt+0xfd2c>
   22400:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22404:	ldr	r3, [r3]
   22408:	sub	r2, r3, #1
   2240c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22410:	str	r2, [r3]
   22414:	mov	r3, #0
   22418:	mov	r0, r3
   2241c:	sub	sp, fp, #4
   22420:	ldr	fp, [sp]
   22424:	add	sp, sp, #4
   22428:	pop	{pc}		; (ldr pc, [sp], #4)
   2242c:	str	fp, [sp, #-8]!
   22430:	str	lr, [sp, #4]
   22434:	add	fp, sp, #4
   22438:	sub	sp, sp, #16
   2243c:	str	r0, [fp, #-8]
   22440:	str	r1, [fp, #-12]
   22444:	str	r2, [fp, #-16]
   22448:	mov	r0, #1
   2244c:	bl	21450 <__assert_fail@plt+0xed64>
   22450:	ldr	r2, [fp, #-16]
   22454:	ldr	r1, [fp, #-12]
   22458:	ldr	r0, [fp, #-8]
   2245c:	bl	25444 <__assert_fail@plt+0x12d58>
   22460:	mov	r3, r0
   22464:	mov	r0, r3
   22468:	sub	sp, fp, #4
   2246c:	ldr	fp, [sp]
   22470:	add	sp, sp, #4
   22474:	pop	{pc}		; (ldr pc, [sp], #4)
   22478:	str	fp, [sp, #-8]!
   2247c:	str	lr, [sp, #4]
   22480:	add	fp, sp, #4
   22484:	sub	sp, sp, #24
   22488:	str	r0, [fp, #-16]
   2248c:	str	r1, [fp, #-20]	; 0xffffffec
   22490:	str	r2, [fp, #-24]	; 0xffffffe8
   22494:	sub	r3, fp, #12
   22498:	mov	r2, r3
   2249c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   224a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   224a4:	bl	219e4 <__assert_fail@plt+0xf2f8>
   224a8:	mov	r3, r0
   224ac:	cmp	r3, #0
   224b0:	beq	2252c <__assert_fail@plt+0xfe40>
   224b4:	ldr	r3, [fp, #-12]
   224b8:	mov	r1, r3
   224bc:	ldr	r0, [fp, #-16]
   224c0:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   224c4:	str	r0, [fp, #-8]
   224c8:	ldr	r2, [fp, #-12]
   224cc:	ldr	r3, [fp, #-8]
   224d0:	add	r3, r3, #40	; 0x28
   224d4:	mov	r1, r3
   224d8:	mov	r0, r2
   224dc:	bl	27474 <__assert_fail@plt+0x14d88>
   224e0:	ldr	r3, [fp, #-8]
   224e4:	mov	r2, #1
   224e8:	strb	r2, [r3, #17]
   224ec:	ldr	r3, [fp, #-8]
   224f0:	ldrb	r2, [r3, #17]
   224f4:	ldr	r3, [fp, #-8]
   224f8:	strb	r2, [r3, #16]
   224fc:	ldr	r3, [fp, #-8]
   22500:	mov	r2, #0
   22504:	strb	r2, [r3, #19]
   22508:	ldr	r3, [fp, #-8]
   2250c:	ldrb	r2, [r3, #19]
   22510:	ldr	r3, [fp, #-8]
   22514:	strb	r2, [r3, #18]
   22518:	ldr	r3, [fp, #-8]
   2251c:	mov	r2, #1065353216	; 0x3f800000
   22520:	str	r2, [r3, #28]
   22524:	mov	r3, #1
   22528:	b	22530 <__assert_fail@plt+0xfe44>
   2252c:	mov	r3, #0
   22530:	mov	r0, r3
   22534:	sub	sp, fp, #4
   22538:	ldr	fp, [sp]
   2253c:	add	sp, sp, #4
   22540:	pop	{pc}		; (ldr pc, [sp], #4)
   22544:	str	fp, [sp, #-8]!
   22548:	str	lr, [sp, #4]
   2254c:	add	fp, sp, #4
   22550:	sub	sp, sp, #16
   22554:	str	r0, [fp, #-16]
   22558:	str	r1, [fp, #-20]	; 0xffffffec
   2255c:	ldr	r1, [fp, #-20]	; 0xffffffec
   22560:	ldr	r0, [fp, #-16]
   22564:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   22568:	str	r0, [fp, #-8]
   2256c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22570:	cmp	r3, #0
   22574:	beq	22590 <__assert_fail@plt+0xfea4>
   22578:	ldr	r3, [fp, #-8]
   2257c:	add	r3, r3, #40	; 0x28
   22580:	mov	r1, r3
   22584:	ldr	r0, [fp, #-20]	; 0xffffffec
   22588:	bl	27474 <__assert_fail@plt+0x14d88>
   2258c:	b	225a0 <__assert_fail@plt+0xfeb4>
   22590:	ldr	r3, [fp, #-8]
   22594:	add	r3, r3, #40	; 0x28
   22598:	mov	r0, r3
   2259c:	bl	275d4 <__assert_fail@plt+0x14ee8>
   225a0:	ldr	r3, [fp, #-8]
   225a4:	mov	r2, #1
   225a8:	strb	r2, [r3, #17]
   225ac:	ldr	r3, [fp, #-8]
   225b0:	ldrb	r2, [r3, #17]
   225b4:	ldr	r3, [fp, #-8]
   225b8:	strb	r2, [r3, #16]
   225bc:	ldr	r3, [fp, #-8]
   225c0:	mov	r2, #0
   225c4:	strb	r2, [r3, #19]
   225c8:	ldr	r3, [fp, #-8]
   225cc:	ldrb	r2, [r3, #19]
   225d0:	ldr	r3, [fp, #-8]
   225d4:	strb	r2, [r3, #18]
   225d8:	ldr	r3, [fp, #-8]
   225dc:	mov	r2, #1065353216	; 0x3f800000
   225e0:	str	r2, [r3, #28]
   225e4:	mov	r3, #1
   225e8:	mov	r0, r3
   225ec:	sub	sp, fp, #4
   225f0:	ldr	fp, [sp]
   225f4:	add	sp, sp, #4
   225f8:	pop	{pc}		; (ldr pc, [sp], #4)
   225fc:	str	fp, [sp, #-8]!
   22600:	str	lr, [sp, #4]
   22604:	add	fp, sp, #4
   22608:	sub	sp, sp, #24
   2260c:	str	r0, [fp, #-16]
   22610:	str	r1, [fp, #-20]	; 0xffffffec
   22614:	str	r2, [fp, #-24]	; 0xffffffe8
   22618:	sub	r3, fp, #8
   2261c:	mov	r2, r3
   22620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22624:	ldr	r0, [fp, #-20]	; 0xffffffec
   22628:	bl	219e4 <__assert_fail@plt+0xf2f8>
   2262c:	mov	r3, r0
   22630:	cmp	r3, #0
   22634:	beq	22670 <__assert_fail@plt+0xff84>
   22638:	ldr	r3, [fp, #-8]
   2263c:	mov	r1, r3
   22640:	ldr	r0, [fp, #-16]
   22644:	bl	22544 <__assert_fail@plt+0xfe58>
   22648:	mov	r3, r0
   2264c:	cmp	r3, #0
   22650:	beq	2265c <__assert_fail@plt+0xff70>
   22654:	mov	r3, #1
   22658:	b	22674 <__assert_fail@plt+0xff88>
   2265c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22660:	ldr	r3, [r3]
   22664:	sub	r2, r3, #1
   22668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2266c:	str	r2, [r3]
   22670:	mov	r3, #0
   22674:	mov	r0, r3
   22678:	sub	sp, fp, #4
   2267c:	ldr	fp, [sp]
   22680:	add	sp, sp, #4
   22684:	pop	{pc}		; (ldr pc, [sp], #4)
   22688:	str	fp, [sp, #-8]!
   2268c:	str	lr, [sp, #4]
   22690:	add	fp, sp, #4
   22694:	sub	sp, sp, #120	; 0x78
   22698:	str	r0, [fp, #-120]	; 0xffffff88
   2269c:	movw	r3, #32772	; 0x8004
   226a0:	movt	r3, #6
   226a4:	str	r3, [fp, #-8]
   226a8:	sub	r3, fp, #116	; 0x74
   226ac:	mov	r1, r3
   226b0:	ldr	r0, [fp, #-8]
   226b4:	bl	64c94 <__assert_fail@plt+0x525a8>
   226b8:	mov	r3, r0
   226bc:	cmp	r3, #0
   226c0:	bne	22708 <__assert_fail@plt+0x1001c>
   226c4:	sub	r3, fp, #116	; 0x74
   226c8:	ldr	r1, [fp, #-8]
   226cc:	mov	r0, r3
   226d0:	bl	20aa4 <__assert_fail@plt+0xe3b8>
   226d4:	str	r0, [fp, #-12]
   226d8:	ldr	r1, [fp, #-12]
   226dc:	ldr	r0, [fp, #-120]	; 0xffffff88
   226e0:	bl	11ffc <strcmp@plt>
   226e4:	mov	r3, r0
   226e8:	cmp	r3, #0
   226ec:	bne	226fc <__assert_fail@plt+0x10010>
   226f0:	movw	r3, #13107	; 0x3333
   226f4:	movt	r3, #16179	; 0x3f33
   226f8:	b	2270c <__assert_fail@plt+0x10020>
   226fc:	movw	r3, #39322	; 0x999a
   22700:	movt	r3, #16025	; 0x3e99
   22704:	b	2270c <__assert_fail@plt+0x10020>
   22708:	mov	r3, #1065353216	; 0x3f800000
   2270c:	vmov	s15, r3
   22710:	vmov.f32	s0, s15
   22714:	sub	sp, fp, #4
   22718:	ldr	fp, [sp]
   2271c:	add	sp, sp, #4
   22720:	pop	{pc}		; (ldr pc, [sp], #4)
   22724:	str	fp, [sp, #-8]!
   22728:	str	lr, [sp, #4]
   2272c:	add	fp, sp, #4
   22730:	sub	sp, sp, #24
   22734:	str	r0, [fp, #-16]
   22738:	str	r1, [fp, #-20]	; 0xffffffec
   2273c:	str	r2, [fp, #-24]	; 0xffffffe8
   22740:	sub	r3, fp, #12
   22744:	mov	r2, r3
   22748:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2274c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22750:	bl	219e4 <__assert_fail@plt+0xf2f8>
   22754:	mov	r3, r0
   22758:	cmp	r3, #0
   2275c:	beq	22810 <__assert_fail@plt+0x10124>
   22760:	movw	r3, #53324	; 0xd04c
   22764:	movt	r3, #7
   22768:	ldrh	r3, [r3, #68]	; 0x44
   2276c:	cmp	r3, #1
   22770:	bls	2278c <__assert_fail@plt+0x100a0>
   22774:	ldr	r3, [fp, #-12]
   22778:	mov	r0, r3
   2277c:	bl	20b80 <__assert_fail@plt+0xe494>
   22780:	mov	r3, r0
   22784:	cmp	r3, #0
   22788:	beq	227cc <__assert_fail@plt+0x100e0>
   2278c:	ldr	r3, [fp, #-12]
   22790:	mov	r1, r3
   22794:	ldr	r0, [fp, #-16]
   22798:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   2279c:	str	r0, [fp, #-8]
   227a0:	ldr	r2, [fp, #-12]
   227a4:	ldr	r3, [fp, #-8]
   227a8:	str	r2, [r3, #40]	; 0x28
   227ac:	ldr	r3, [fp, #-12]
   227b0:	mov	r0, r3
   227b4:	bl	22688 <__assert_fail@plt+0xff9c>
   227b8:	vmov.f32	s15, s0
   227bc:	ldr	r3, [fp, #-8]
   227c0:	vstr	s15, [r3, #28]
   227c4:	mov	r3, #1
   227c8:	b	22814 <__assert_fail@plt+0x10128>
   227cc:	movw	r3, #53324	; 0xd04c
   227d0:	movt	r3, #7
   227d4:	ldr	r3, [r3, #44]	; 0x2c
   227d8:	and	r3, r3, #8
   227dc:	cmp	r3, #0
   227e0:	beq	22804 <__assert_fail@plt+0x10118>
   227e4:	movw	r3, #50984	; 0xc728
   227e8:	movt	r3, #7
   227ec:	ldr	r3, [r3]
   227f0:	ldr	r2, [fp, #-12]
   227f4:	movw	r1, #32776	; 0x8008
   227f8:	movt	r1, #6
   227fc:	mov	r0, r3
   22800:	bl	123f8 <fprintf@plt>
   22804:	bl	221dc <__assert_fail@plt+0xfaf0>
   22808:	mov	r3, r0
   2280c:	b	22814 <__assert_fail@plt+0x10128>
   22810:	mov	r3, #0
   22814:	mov	r0, r3
   22818:	sub	sp, fp, #4
   2281c:	ldr	fp, [sp]
   22820:	add	sp, sp, #4
   22824:	pop	{pc}		; (ldr pc, [sp], #4)
   22828:	str	fp, [sp, #-8]!
   2282c:	str	lr, [sp, #4]
   22830:	add	fp, sp, #4
   22834:	sub	sp, sp, #24
   22838:	str	r0, [fp, #-16]
   2283c:	str	r1, [fp, #-20]	; 0xffffffec
   22840:	str	r2, [fp, #-24]	; 0xffffffe8
   22844:	ldr	r2, [fp, #-16]
   22848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2284c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22850:	bl	272b8 <__assert_fail@plt+0x14bcc>
   22854:	str	r0, [fp, #-8]
   22858:	ldr	r3, [fp, #-8]
   2285c:	cmp	r3, #0
   22860:	beq	2289c <__assert_fail@plt+0x101b0>
   22864:	ldr	r3, [fp, #-8]
   22868:	ldrd	r2, [r3, #48]	; 0x30
   2286c:	cmp	r3, #0
   22870:	cmpeq	r2, #99	; 0x63
   22874:	bhi	22884 <__assert_fail@plt+0x10198>
   22878:	movw	r2, #28836	; 0x70a4
   2287c:	movt	r2, #16253	; 0x3f7d
   22880:	b	2288c <__assert_fail@plt+0x101a0>
   22884:	movw	r2, #52429	; 0xcccd
   22888:	movt	r2, #15948	; 0x3e4c
   2288c:	ldr	r3, [fp, #-8]
   22890:	str	r2, [r3, #28]
   22894:	mov	r3, #1
   22898:	b	228b4 <__assert_fail@plt+0x101c8>
   2289c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   228a0:	ldr	r3, [r3]
   228a4:	sub	r2, r3, #1
   228a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   228ac:	str	r2, [r3]
   228b0:	mov	r3, #0
   228b4:	mov	r0, r3
   228b8:	sub	sp, fp, #4
   228bc:	ldr	fp, [sp]
   228c0:	add	sp, sp, #4
   228c4:	pop	{pc}		; (ldr pc, [sp], #4)
   228c8:	strd	r4, [sp, #-16]!
   228cc:	str	fp, [sp, #8]
   228d0:	str	lr, [sp, #12]
   228d4:	add	fp, sp, #12
   228d8:	sub	sp, sp, #48	; 0x30
   228dc:	str	r0, [fp, #-40]	; 0xffffffd8
   228e0:	str	r1, [fp, #-44]	; 0xffffffd4
   228e4:	str	r2, [fp, #-48]	; 0xffffffd0
   228e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   228ec:	ldr	r3, [r3]
   228f0:	str	r3, [fp, #-20]	; 0xffffffec
   228f4:	sub	r3, fp, #36	; 0x24
   228f8:	mov	r2, r3
   228fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   22900:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22904:	bl	219e4 <__assert_fail@plt+0xf2f8>
   22908:	mov	r3, r0
   2290c:	cmp	r3, #0
   22910:	beq	22ae4 <__assert_fail@plt+0x103f8>
   22914:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22918:	mov	r0, r3
   2291c:	bl	126d4 <getgrnam@plt>
   22920:	str	r0, [fp, #-24]	; 0xffffffe8
   22924:	bl	11f90 <endgrent@plt>
   22928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2292c:	cmp	r3, #0
   22930:	beq	22944 <__assert_fail@plt+0x10258>
   22934:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22938:	ldr	r3, [r3, #8]
   2293c:	str	r3, [fp, #-16]
   22940:	b	22a8c <__assert_fail@plt+0x103a0>
   22944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22948:	movw	r1, #32828	; 0x803c
   2294c:	movt	r1, #6
   22950:	mov	r0, r3
   22954:	bl	126e0 <strspn@plt>
   22958:	mov	r3, r0
   2295c:	str	r3, [fp, #-28]	; 0xffffffe4
   22960:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22964:	cmp	r3, #0
   22968:	beq	22a1c <__assert_fail@plt+0x10330>
   2296c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22970:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22974:	add	r3, r2, r3
   22978:	ldrb	r3, [r3]
   2297c:	cmp	r3, #0
   22980:	bne	229ac <__assert_fail@plt+0x102c0>
   22984:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22988:	movw	r3, #53324	; 0xd04c
   2298c:	movt	r3, #7
   22990:	ldr	r3, [r3, #72]	; 0x48
   22994:	mov	r1, r3
   22998:	mov	r0, r2
   2299c:	bl	2aeec <__assert_fail@plt+0x18800>
   229a0:	mov	r3, r0
   229a4:	str	r3, [fp, #-16]
   229a8:	b	22a8c <__assert_fail@plt+0x103a0>
   229ac:	movw	r0, #32840	; 0x8048
   229b0:	movt	r0, #6
   229b4:	bl	12398 <gettext@plt>
   229b8:	mov	r4, r0
   229bc:	movw	r3, #53324	; 0xd04c
   229c0:	movt	r3, #7
   229c4:	ldr	r3, [r3, #72]	; 0x48
   229c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   229cc:	mov	r1, r3
   229d0:	mov	r0, #0
   229d4:	bl	3bc98 <__assert_fail@plt+0x295ac>
   229d8:	mov	r5, r0
   229dc:	movw	r3, #53324	; 0xd04c
   229e0:	movt	r3, #7
   229e4:	ldr	r1, [r3, #72]	; 0x48
   229e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   229ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   229f0:	add	r3, r2, r3
   229f4:	mov	r2, r3
   229f8:	mov	r0, #1
   229fc:	bl	3bc98 <__assert_fail@plt+0x295ac>
   22a00:	mov	r3, r0
   22a04:	str	r3, [sp]
   22a08:	mov	r3, r5
   22a0c:	mov	r2, r4
   22a10:	mov	r1, #0
   22a14:	mov	r0, #1
   22a18:	bl	122b4 <error@plt>
   22a1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22a20:	ldrb	r3, [r3]
   22a24:	cmp	r3, #0
   22a28:	beq	22a6c <__assert_fail@plt+0x10380>
   22a2c:	movw	r0, #32968	; 0x80c8
   22a30:	movt	r0, #6
   22a34:	bl	12398 <gettext@plt>
   22a38:	mov	r4, r0
   22a3c:	movw	r3, #53324	; 0xd04c
   22a40:	movt	r3, #7
   22a44:	ldr	r3, [r3, #72]	; 0x48
   22a48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22a4c:	mov	r1, r3
   22a50:	mov	r0, #0
   22a54:	bl	3bc98 <__assert_fail@plt+0x295ac>
   22a58:	mov	r3, r0
   22a5c:	mov	r2, r4
   22a60:	mov	r1, #0
   22a64:	mov	r0, #1
   22a68:	bl	122b4 <error@plt>
   22a6c:	movw	r0, #33008	; 0x80f0
   22a70:	movt	r0, #6
   22a74:	bl	12398 <gettext@plt>
   22a78:	mov	r3, r0
   22a7c:	mov	r2, r3
   22a80:	mov	r1, #0
   22a84:	mov	r0, #1
   22a88:	bl	122b4 <error@plt>
   22a8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22a90:	mov	r1, r3
   22a94:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22a98:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   22a9c:	str	r0, [fp, #-32]	; 0xffffffe0
   22aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22aa4:	ldr	r2, [fp, #-16]
   22aa8:	str	r2, [r3, #40]	; 0x28
   22aac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22ab0:	ldrd	r2, [r3, #48]	; 0x30
   22ab4:	cmp	r3, #0
   22ab8:	cmpeq	r2, #99	; 0x63
   22abc:	bhi	22acc <__assert_fail@plt+0x103e0>
   22ac0:	movw	r2, #28836	; 0x70a4
   22ac4:	movt	r2, #16253	; 0x3f7d
   22ac8:	b	22ad4 <__assert_fail@plt+0x103e8>
   22acc:	movw	r2, #52429	; 0xcccd
   22ad0:	movt	r2, #15948	; 0x3e4c
   22ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22ad8:	str	r2, [r3, #28]
   22adc:	mov	r3, #1
   22ae0:	b	22ae8 <__assert_fail@plt+0x103fc>
   22ae4:	mov	r3, #0
   22ae8:	mov	r0, r3
   22aec:	sub	sp, fp, #12
   22af0:	ldrd	r4, [sp]
   22af4:	ldr	fp, [sp, #8]
   22af8:	add	sp, sp, #12
   22afc:	pop	{pc}		; (ldr pc, [sp], #4)
   22b00:	str	fp, [sp, #-8]!
   22b04:	str	lr, [sp, #4]
   22b08:	add	fp, sp, #4
   22b0c:	sub	sp, sp, #16
   22b10:	str	r0, [fp, #-8]
   22b14:	str	r1, [fp, #-12]
   22b18:	str	r2, [fp, #-16]
   22b1c:	mov	r0, #0
   22b20:	bl	1b4d0 <__assert_fail@plt+0x8de4>
   22b24:	str	fp, [sp, #-8]!
   22b28:	str	lr, [sp, #4]
   22b2c:	add	fp, sp, #4
   22b30:	sub	sp, sp, #8
   22b34:	str	r0, [fp, #-8]
   22b38:	str	r1, [fp, #-12]
   22b3c:	movw	r1, #33064	; 0x8128
   22b40:	movt	r1, #6
   22b44:	ldr	r0, [fp, #-8]
   22b48:	bl	12608 <strpbrk@plt>
   22b4c:	mov	r3, r0
   22b50:	cmp	r3, #0
   22b54:	bne	22b7c <__assert_fail@plt+0x10490>
   22b58:	ldr	r3, [fp, #-12]
   22b5c:	cmp	r3, #0
   22b60:	beq	22b88 <__assert_fail@plt+0x1049c>
   22b64:	mov	r1, #46	; 0x2e
   22b68:	ldr	r0, [fp, #-8]
   22b6c:	bl	123c8 <strchr@plt>
   22b70:	mov	r3, r0
   22b74:	cmp	r3, #0
   22b78:	beq	22b88 <__assert_fail@plt+0x1049c>
   22b7c:	movw	r3, #52429	; 0xcccd
   22b80:	movt	r3, #16204	; 0x3f4c
   22b84:	b	22b90 <__assert_fail@plt+0x104a4>
   22b88:	movw	r3, #52429	; 0xcccd
   22b8c:	movt	r3, #15820	; 0x3dcc
   22b90:	vmov	s15, r3
   22b94:	vmov.f32	s0, s15
   22b98:	sub	sp, fp, #4
   22b9c:	ldr	fp, [sp]
   22ba0:	add	sp, sp, #4
   22ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   22ba8:	str	fp, [sp, #-8]!
   22bac:	str	lr, [sp, #4]
   22bb0:	add	fp, sp, #4
   22bb4:	sub	sp, sp, #24
   22bb8:	str	r0, [fp, #-16]
   22bbc:	str	r1, [fp, #-20]	; 0xffffffec
   22bc0:	str	r2, [fp, #-24]	; 0xffffffe8
   22bc4:	sub	r3, fp, #12
   22bc8:	mov	r2, r3
   22bcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22bd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   22bd4:	bl	219e4 <__assert_fail@plt+0xf2f8>
   22bd8:	mov	r3, r0
   22bdc:	cmp	r3, #0
   22be0:	beq	22c30 <__assert_fail@plt+0x10544>
   22be4:	ldr	r3, [fp, #-12]
   22be8:	mov	r1, r3
   22bec:	ldr	r0, [fp, #-16]
   22bf0:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   22bf4:	str	r0, [fp, #-8]
   22bf8:	ldr	r2, [fp, #-12]
   22bfc:	ldr	r3, [fp, #-8]
   22c00:	str	r2, [r3, #40]	; 0x28
   22c04:	ldr	r3, [fp, #-12]
   22c08:	mov	r1, #0
   22c0c:	mov	r0, r3
   22c10:	bl	22b24 <__assert_fail@plt+0x10438>
   22c14:	vmov.f32	s14, s0
   22c18:	vldr	s15, [pc, #40]	; 22c48 <__assert_fail@plt+0x1055c>
   22c1c:	vmul.f32	s15, s14, s15
   22c20:	ldr	r3, [fp, #-8]
   22c24:	vstr	s15, [r3, #28]
   22c28:	mov	r3, #1
   22c2c:	b	22c34 <__assert_fail@plt+0x10548>
   22c30:	mov	r3, #0
   22c34:	mov	r0, r3
   22c38:	sub	sp, fp, #4
   22c3c:	ldr	fp, [sp]
   22c40:	add	sp, sp, #4
   22c44:	pop	{pc}		; (ldr pc, [sp], #4)
   22c48:	stclcc	12, cr12, [ip, #820]	; 0x334
   22c4c:	str	fp, [sp, #-8]!
   22c50:	str	lr, [sp, #4]
   22c54:	add	fp, sp, #4
   22c58:	movw	r3, #52920	; 0xceb8
   22c5c:	movt	r3, #7
   22c60:	ldrb	r3, [r3]
   22c64:	eor	r3, r3, #1
   22c68:	uxtb	r3, r3
   22c6c:	cmp	r3, #0
   22c70:	beq	22d10 <__assert_fail@plt+0x10624>
   22c74:	mov	r2, #0
   22c78:	movw	r1, #33068	; 0x812c
   22c7c:	movt	r1, #6
   22c80:	movw	r0, #33068	; 0x812c
   22c84:	movt	r0, #6
   22c88:	bl	122d8 <fnmatch@plt>
   22c8c:	mov	r3, r0
   22c90:	cmp	r3, #0
   22c94:	bne	22ce0 <__assert_fail@plt+0x105f4>
   22c98:	mov	r2, #0
   22c9c:	movw	r1, #33068	; 0x812c
   22ca0:	movt	r1, #6
   22ca4:	movw	r0, #33072	; 0x8130
   22ca8:	movt	r0, #6
   22cac:	bl	122d8 <fnmatch@plt>
   22cb0:	mov	r3, r0
   22cb4:	cmp	r3, #0
   22cb8:	beq	22ce0 <__assert_fail@plt+0x105f4>
   22cbc:	mov	r2, #16
   22cc0:	movw	r1, #33068	; 0x812c
   22cc4:	movt	r1, #6
   22cc8:	movw	r0, #33072	; 0x8130
   22ccc:	movt	r0, #6
   22cd0:	bl	122d8 <fnmatch@plt>
   22cd4:	mov	r3, r0
   22cd8:	cmp	r3, #0
   22cdc:	beq	22d00 <__assert_fail@plt+0x10614>
   22ce0:	movw	r0, #33076	; 0x8134
   22ce4:	movt	r0, #6
   22ce8:	bl	12398 <gettext@plt>
   22cec:	mov	r3, r0
   22cf0:	mov	r2, r3
   22cf4:	mov	r1, #0
   22cf8:	mov	r0, #1
   22cfc:	bl	122b4 <error@plt>
   22d00:	movw	r3, #52920	; 0xceb8
   22d04:	movt	r3, #7
   22d08:	mov	r2, #1
   22d0c:	strb	r2, [r3]
   22d10:	movw	r3, #52920	; 0xceb8
   22d14:	movt	r3, #7
   22d18:	ldrb	r3, [r3]
   22d1c:	mov	r0, r3
   22d20:	sub	sp, fp, #4
   22d24:	ldr	fp, [sp]
   22d28:	add	sp, sp, #4
   22d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   22d30:	strd	r4, [sp, #-20]!	; 0xffffffec
   22d34:	str	r6, [sp, #8]
   22d38:	str	fp, [sp, #12]
   22d3c:	str	lr, [sp, #16]
   22d40:	add	fp, sp, #16
   22d44:	sub	sp, sp, #28
   22d48:	str	r0, [fp, #-24]	; 0xffffffe8
   22d4c:	str	r1, [fp, #-28]	; 0xffffffe4
   22d50:	str	r2, [fp, #-32]	; 0xffffffe0
   22d54:	bl	215dc <__assert_fail@plt+0xeef0>
   22d58:	mov	r3, r0
   22d5c:	cmp	r3, #0
   22d60:	beq	22ddc <__assert_fail@plt+0x106f0>
   22d64:	mov	r1, #47	; 0x2f
   22d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22d6c:	bl	123c8 <strchr@plt>
   22d70:	mov	r3, r0
   22d74:	cmp	r3, #0
   22d78:	beq	22ddc <__assert_fail@plt+0x106f0>
   22d7c:	movw	r0, #33132	; 0x816c
   22d80:	movt	r0, #6
   22d84:	bl	12398 <gettext@plt>
   22d88:	mov	r5, r0
   22d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22d90:	mov	r0, #0
   22d94:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   22d98:	mov	r6, r0
   22d9c:	movw	r1, #32772	; 0x8004
   22da0:	movt	r1, #6
   22da4:	mov	r0, #1
   22da8:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   22dac:	mov	r4, r0
   22db0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22db4:	mov	r0, #2
   22db8:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   22dbc:	mov	r3, r0
   22dc0:	str	r3, [sp, #4]
   22dc4:	str	r4, [sp]
   22dc8:	mov	r3, r6
   22dcc:	mov	r2, r5
   22dd0:	mov	r1, #0
   22dd4:	mov	r0, #0
   22dd8:	bl	122b4 <error@plt>
   22ddc:	mov	r3, #1
   22de0:	mov	r0, r3
   22de4:	sub	sp, fp, #16
   22de8:	ldrd	r4, [sp]
   22dec:	ldr	r6, [sp, #8]
   22df0:	ldr	fp, [sp, #12]
   22df4:	add	sp, sp, #16
   22df8:	pop	{pc}		; (ldr pc, [sp], #4)
   22dfc:	str	fp, [sp, #-8]!
   22e00:	str	lr, [sp, #4]
   22e04:	add	fp, sp, #4
   22e08:	sub	sp, sp, #24
   22e0c:	str	r0, [fp, #-16]
   22e10:	str	r1, [fp, #-20]	; 0xffffffec
   22e14:	str	r2, [fp, #-24]	; 0xffffffe8
   22e18:	bl	22c4c <__assert_fail@plt+0x10560>
   22e1c:	sub	r3, fp, #12
   22e20:	mov	r2, r3
   22e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e2c:	bl	219e4 <__assert_fail@plt+0xf2f8>
   22e30:	mov	r3, r0
   22e34:	cmp	r3, #0
   22e38:	beq	22ec4 <__assert_fail@plt+0x107d8>
   22e3c:	ldr	r3, [fp, #-12]
   22e40:	mov	r2, r3
   22e44:	movw	r1, #33312	; 0x8220
   22e48:	movt	r1, #6
   22e4c:	movw	r0, #33324	; 0x822c
   22e50:	movt	r0, #6
   22e54:	bl	22d30 <__assert_fail@plt+0x10644>
   22e58:	mov	r3, r0
   22e5c:	cmp	r3, #0
   22e60:	beq	22ec4 <__assert_fail@plt+0x107d8>
   22e64:	ldr	r3, [fp, #-12]
   22e68:	mov	r1, r3
   22e6c:	ldr	r0, [fp, #-16]
   22e70:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   22e74:	str	r0, [fp, #-8]
   22e78:	ldr	r3, [fp, #-8]
   22e7c:	mov	r2, #0
   22e80:	strb	r2, [r3, #19]
   22e84:	ldr	r3, [fp, #-8]
   22e88:	ldrb	r2, [r3, #19]
   22e8c:	ldr	r3, [fp, #-8]
   22e90:	strb	r2, [r3, #18]
   22e94:	ldr	r2, [fp, #-12]
   22e98:	ldr	r3, [fp, #-8]
   22e9c:	str	r2, [r3, #40]	; 0x28
   22ea0:	ldr	r3, [fp, #-12]
   22ea4:	mov	r1, #0
   22ea8:	mov	r0, r3
   22eac:	bl	22b24 <__assert_fail@plt+0x10438>
   22eb0:	vmov.f32	s15, s0
   22eb4:	ldr	r3, [fp, #-8]
   22eb8:	vstr	s15, [r3, #28]
   22ebc:	mov	r3, #1
   22ec0:	b	22ec8 <__assert_fail@plt+0x107dc>
   22ec4:	mov	r3, #0
   22ec8:	mov	r0, r3
   22ecc:	sub	sp, fp, #4
   22ed0:	ldr	fp, [sp]
   22ed4:	add	sp, sp, #4
   22ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   22edc:	str	fp, [sp, #-8]!
   22ee0:	str	lr, [sp, #4]
   22ee4:	add	fp, sp, #4
   22ee8:	sub	sp, sp, #24
   22eec:	str	r0, [fp, #-16]
   22ef0:	str	r1, [fp, #-20]	; 0xffffffec
   22ef4:	str	r2, [fp, #-24]	; 0xffffffe8
   22ef8:	ldr	r2, [fp, #-16]
   22efc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   22f04:	bl	272b8 <__assert_fail@plt+0x14bcc>
   22f08:	str	r0, [fp, #-8]
   22f0c:	ldr	r3, [fp, #-8]
   22f10:	cmp	r3, #0
   22f14:	beq	22f54 <__assert_fail@plt+0x10868>
   22f18:	ldr	r3, [fp, #-8]
   22f1c:	movw	r2, #14269	; 0x37bd
   22f20:	movt	r2, #13702	; 0x3586
   22f24:	str	r2, [r3, #28]
   22f28:	ldr	r3, [fp, #-8]
   22f2c:	mov	r2, #1
   22f30:	strb	r2, [r3, #20]
   22f34:	ldr	r3, [fp, #-8]
   22f38:	mov	r2, #0
   22f3c:	strb	r2, [r3, #18]
   22f40:	ldr	r3, [fp, #-8]
   22f44:	mov	r2, #0
   22f48:	strb	r2, [r3, #19]
   22f4c:	mov	r3, #1
   22f50:	b	22f6c <__assert_fail@plt+0x10880>
   22f54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22f58:	ldr	r3, [r3]
   22f5c:	sub	r2, r3, #1
   22f60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22f64:	str	r2, [r3]
   22f68:	mov	r3, #0
   22f6c:	mov	r0, r3
   22f70:	sub	sp, fp, #4
   22f74:	ldr	fp, [sp]
   22f78:	add	sp, sp, #4
   22f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   22f80:	str	fp, [sp, #-8]!
   22f84:	str	lr, [sp, #4]
   22f88:	add	fp, sp, #4
   22f8c:	sub	sp, sp, #16
   22f90:	str	r0, [fp, #-8]
   22f94:	str	r1, [fp, #-12]
   22f98:	str	r2, [fp, #-16]
   22f9c:	movw	r3, #53324	; 0xd04c
   22fa0:	movt	r3, #7
   22fa4:	ldr	r3, [r3, #60]	; 0x3c
   22fa8:	orr	r3, r3, #4194304	; 0x400000
   22fac:	ldr	r2, [fp, #-8]
   22fb0:	ldr	r1, [fp, #-16]
   22fb4:	ldr	r0, [fp, #-12]
   22fb8:	bl	24a9c <__assert_fail@plt+0x123b0>
   22fbc:	mov	r3, r0
   22fc0:	mov	r0, r3
   22fc4:	sub	sp, fp, #4
   22fc8:	ldr	fp, [sp]
   22fcc:	add	sp, sp, #4
   22fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   22fd4:	str	fp, [sp, #-8]!
   22fd8:	str	lr, [sp, #4]
   22fdc:	add	fp, sp, #4
   22fe0:	sub	sp, sp, #24
   22fe4:	str	r0, [fp, #-16]
   22fe8:	str	r1, [fp, #-20]	; 0xffffffec
   22fec:	str	r2, [fp, #-24]	; 0xffffffe8
   22ff0:	ldr	r2, [fp, #-16]
   22ff4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22ff8:	ldr	r0, [fp, #-20]	; 0xffffffec
   22ffc:	bl	272b8 <__assert_fail@plt+0x14bcc>
   23000:	str	r0, [fp, #-8]
   23004:	ldr	r3, [fp, #-8]
   23008:	cmp	r3, #0
   2300c:	beq	23078 <__assert_fail@plt+0x1098c>
   23010:	ldr	r3, [fp, #-8]
   23014:	ldrd	r2, [r3, #48]	; 0x30
   23018:	cmp	r3, #0
   2301c:	cmpeq	r2, #1
   23020:	bne	23038 <__assert_fail@plt+0x1094c>
   23024:	ldr	r3, [fp, #-8]
   23028:	movw	r2, #28836	; 0x70a4
   2302c:	movt	r2, #16253	; 0x3f7d
   23030:	str	r2, [r3, #28]
   23034:	b	23070 <__assert_fail@plt+0x10984>
   23038:	ldr	r3, [fp, #-8]
   2303c:	ldrd	r2, [r3, #48]	; 0x30
   23040:	cmp	r3, #0
   23044:	cmpeq	r2, #2
   23048:	bne	23060 <__assert_fail@plt+0x10974>
   2304c:	ldr	r3, [fp, #-8]
   23050:	movw	r2, #55050	; 0xd70a
   23054:	movt	r2, #15395	; 0x3c23
   23058:	str	r2, [r3, #28]
   2305c:	b	23070 <__assert_fail@plt+0x10984>
   23060:	ldr	r3, [fp, #-8]
   23064:	movw	r2, #4719	; 0x126f
   23068:	movt	r2, #14979	; 0x3a83
   2306c:	str	r2, [r3, #28]
   23070:	mov	r3, #1
   23074:	b	23090 <__assert_fail@plt+0x109a4>
   23078:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2307c:	ldr	r3, [r3]
   23080:	sub	r2, r3, #1
   23084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23088:	str	r2, [r3]
   2308c:	mov	r3, #0
   23090:	mov	r0, r3
   23094:	sub	sp, fp, #4
   23098:	ldr	fp, [sp]
   2309c:	add	sp, sp, #4
   230a0:	pop	{pc}		; (ldr pc, [sp], #4)
   230a4:	str	fp, [sp, #-8]!
   230a8:	str	lr, [sp, #4]
   230ac:	add	fp, sp, #4
   230b0:	sub	sp, sp, #24
   230b4:	str	r0, [fp, #-16]
   230b8:	str	r1, [fp, #-20]	; 0xffffffec
   230bc:	str	r2, [fp, #-24]	; 0xffffffe8
   230c0:	bl	22c4c <__assert_fail@plt+0x10560>
   230c4:	sub	r3, fp, #12
   230c8:	mov	r2, r3
   230cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   230d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   230d4:	bl	219e4 <__assert_fail@plt+0xf2f8>
   230d8:	mov	r3, r0
   230dc:	cmp	r3, #0
   230e0:	beq	23130 <__assert_fail@plt+0x10a44>
   230e4:	ldr	r3, [fp, #-12]
   230e8:	mov	r1, r3
   230ec:	ldr	r0, [fp, #-16]
   230f0:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   230f4:	str	r0, [fp, #-8]
   230f8:	ldr	r2, [fp, #-12]
   230fc:	ldr	r3, [fp, #-8]
   23100:	str	r2, [r3, #40]	; 0x28
   23104:	ldr	r3, [fp, #-12]
   23108:	mov	r1, #0
   2310c:	mov	r0, r3
   23110:	bl	22b24 <__assert_fail@plt+0x10438>
   23114:	vmov.f32	s14, s0
   23118:	vldr	s15, [pc, #40]	; 23148 <__assert_fail@plt+0x10a5c>
   2311c:	vmul.f32	s15, s14, s15
   23120:	ldr	r3, [fp, #-8]
   23124:	vstr	s15, [r3, #28]
   23128:	mov	r3, #1
   2312c:	b	23134 <__assert_fail@plt+0x10a48>
   23130:	mov	r3, #0
   23134:	mov	r0, r3
   23138:	sub	sp, fp, #4
   2313c:	ldr	fp, [sp]
   23140:	add	sp, sp, #4
   23144:	pop	{pc}		; (ldr pc, [sp], #4)
   23148:	stclcc	12, cr12, [ip, #820]	; 0x334
   2314c:	str	fp, [sp, #-8]!
   23150:	str	lr, [sp, #4]
   23154:	add	fp, sp, #4
   23158:	sub	sp, sp, #16
   2315c:	str	r0, [fp, #-8]
   23160:	str	r1, [fp, #-12]
   23164:	str	r2, [fp, #-16]
   23168:	mov	r1, #0
   2316c:	ldr	r0, [fp, #-8]
   23170:	bl	22308 <__assert_fail@plt+0xfc1c>
   23174:	mov	r3, r0
   23178:	mov	r0, r3
   2317c:	sub	sp, fp, #4
   23180:	ldr	fp, [sp]
   23184:	add	sp, sp, #4
   23188:	pop	{pc}		; (ldr pc, [sp], #4)
   2318c:	str	r4, [sp, #-12]!
   23190:	str	fp, [sp, #4]
   23194:	str	lr, [sp, #8]
   23198:	add	fp, sp, #8
   2319c:	sub	sp, sp, #44	; 0x2c
   231a0:	str	r0, [fp, #-32]	; 0xffffffe0
   231a4:	str	r1, [fp, #-36]	; 0xffffffdc
   231a8:	str	r2, [fp, #-40]	; 0xffffffd8
   231ac:	str	r3, [fp, #-44]	; 0xffffffd4
   231b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   231b4:	ldr	r3, [r3]
   231b8:	sub	r3, r3, #-1073741823	; 0xc0000001
   231bc:	lsl	r3, r3, #2
   231c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   231c4:	add	r3, r2, r3
   231c8:	ldr	r3, [r3]
   231cc:	str	r3, [fp, #-16]
   231d0:	sub	r3, fp, #24
   231d4:	mov	r2, r3
   231d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   231dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   231e0:	bl	219e4 <__assert_fail@plt+0xf2f8>
   231e4:	mov	r3, r0
   231e8:	cmp	r3, #0
   231ec:	beq	232c8 <__assert_fail@plt+0x10bdc>
   231f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   231f4:	movw	r1, #32828	; 0x803c
   231f8:	movt	r1, #6
   231fc:	mov	r0, r3
   23200:	bl	126e0 <strspn@plt>
   23204:	mov	r3, r0
   23208:	str	r3, [fp, #-20]	; 0xffffffec
   2320c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23210:	cmp	r3, #0
   23214:	ble	23280 <__assert_fail@plt+0x10b94>
   23218:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2321c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23220:	add	r3, r2, r3
   23224:	ldrb	r3, [r3]
   23228:	cmp	r3, #0
   2322c:	bne	23280 <__assert_fail@plt+0x10b94>
   23230:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23234:	movw	r3, #53324	; 0xd04c
   23238:	movt	r3, #7
   2323c:	ldr	r3, [r3, #72]	; 0x48
   23240:	mov	r1, r3
   23244:	mov	r0, r2
   23248:	bl	2aeec <__assert_fail@plt+0x18800>
   2324c:	mov	r2, r0
   23250:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23254:	str	r2, [r3]
   23258:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2325c:	ldr	r3, [r3]
   23260:	cmp	r3, #0
   23264:	blt	23280 <__assert_fail@plt+0x10b94>
   23268:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2326c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23274:	bl	25444 <__assert_fail@plt+0x12d58>
   23278:	mov	r3, r0
   2327c:	b	232cc <__assert_fail@plt+0x10be0>
   23280:	movw	r0, #33332	; 0x8234
   23284:	movt	r0, #6
   23288:	bl	12398 <gettext@plt>
   2328c:	mov	r4, r0
   23290:	movw	r3, #53324	; 0xd04c
   23294:	movt	r3, #7
   23298:	ldr	r3, [r3, #72]	; 0x48
   2329c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   232a0:	mov	r1, r3
   232a4:	mov	r0, #0
   232a8:	bl	3bc98 <__assert_fail@plt+0x295ac>
   232ac:	mov	r3, r0
   232b0:	str	r3, [sp]
   232b4:	ldr	r3, [fp, #-16]
   232b8:	mov	r2, r4
   232bc:	mov	r1, #0
   232c0:	mov	r0, #1
   232c4:	bl	122b4 <error@plt>
   232c8:	mov	r3, #0
   232cc:	mov	r0, r3
   232d0:	sub	sp, fp, #8
   232d4:	ldr	r4, [sp]
   232d8:	ldr	fp, [sp, #4]
   232dc:	add	sp, sp, #8
   232e0:	pop	{pc}		; (ldr pc, [sp], #4)
   232e4:	str	fp, [sp, #-8]!
   232e8:	str	lr, [sp, #4]
   232ec:	add	fp, sp, #4
   232f0:	sub	sp, sp, #16
   232f4:	str	r0, [fp, #-8]
   232f8:	str	r1, [fp, #-12]
   232fc:	str	r2, [fp, #-16]
   23300:	ldr	r3, [pc, #36]	; 2332c <__assert_fail@plt+0x10c40>
   23304:	ldr	r2, [fp, #-16]
   23308:	ldr	r1, [fp, #-12]
   2330c:	ldr	r0, [fp, #-8]
   23310:	bl	2318c <__assert_fail@plt+0x10aa0>
   23314:	mov	r3, r0
   23318:	mov	r0, r3
   2331c:	sub	sp, fp, #4
   23320:	ldr	fp, [sp]
   23324:	add	sp, sp, #4
   23328:	pop	{pc}		; (ldr pc, [sp], #4)
   2332c:	andeq	sp, r7, r0, asr r0
   23330:	str	fp, [sp, #-8]!
   23334:	str	lr, [sp, #4]
   23338:	add	fp, sp, #4
   2333c:	sub	sp, sp, #16
   23340:	str	r0, [fp, #-8]
   23344:	str	r1, [fp, #-12]
   23348:	str	r2, [fp, #-16]
   2334c:	ldr	r3, [pc, #36]	; 23378 <__assert_fail@plt+0x10c8c>
   23350:	ldr	r2, [fp, #-16]
   23354:	ldr	r1, [fp, #-12]
   23358:	ldr	r0, [fp, #-8]
   2335c:	bl	2318c <__assert_fail@plt+0x10aa0>
   23360:	mov	r3, r0
   23364:	mov	r0, r3
   23368:	sub	sp, fp, #4
   2336c:	ldr	fp, [sp]
   23370:	add	sp, sp, #4
   23374:	pop	{pc}		; (ldr pc, [sp], #4)
   23378:	andeq	sp, r7, r4, asr r0
   2337c:	str	fp, [sp, #-8]!
   23380:	str	lr, [sp, #4]
   23384:	add	fp, sp, #4
   23388:	sub	sp, sp, #64	; 0x40
   2338c:	str	r0, [fp, #-48]	; 0xffffffd0
   23390:	str	r1, [fp, #-52]	; 0xffffffcc
   23394:	str	r2, [fp, #-56]	; 0xffffffc8
   23398:	str	r3, [fp, #-60]	; 0xffffffc4
   2339c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   233a0:	ldr	r3, [r3]
   233a4:	str	r3, [fp, #-8]
   233a8:	sub	r3, fp, #16
   233ac:	mov	r2, r3
   233b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   233b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   233b8:	bl	219e4 <__assert_fail@plt+0xf2f8>
   233bc:	mov	r3, r0
   233c0:	cmp	r3, #0
   233c4:	beq	23484 <__assert_fail@plt+0x10d98>
   233c8:	movw	r3, #53324	; 0xd04c
   233cc:	movt	r3, #7
   233d0:	sub	r1, fp, #40	; 0x28
   233d4:	add	r3, r3, #28
   233d8:	ldrd	r2, [r3]
   233dc:	strd	r2, [r1]
   233e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   233e4:	str	r3, [fp, #-32]	; 0xffffffe0
   233e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   233ec:	add	r3, r3, #86016	; 0x15000
   233f0:	add	r3, r3, #384	; 0x180
   233f4:	str	r3, [fp, #-40]	; 0xffffffd8
   233f8:	ldr	r0, [fp, #-16]
   233fc:	sub	r1, fp, #32
   23400:	movw	r3, #33396	; 0x8274
   23404:	movt	r3, #6
   23408:	str	r3, [sp]
   2340c:	vldr	d0, [pc, #140]	; 234a0 <__assert_fail@plt+0x10db4>
   23410:	sub	r3, fp, #40	; 0x28
   23414:	ldm	r3, {r2, r3}
   23418:	bl	26b94 <__assert_fail@plt+0x144a8>
   2341c:	mov	r3, r0
   23420:	cmp	r3, #0
   23424:	beq	23478 <__assert_fail@plt+0x10d8c>
   23428:	ldr	r3, [fp, #-16]
   2342c:	mov	r1, r3
   23430:	ldr	r0, [fp, #-48]	; 0xffffffd0
   23434:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   23438:	str	r0, [fp, #-12]
   2343c:	ldr	r3, [fp, #-12]
   23440:	add	r1, r3, #40	; 0x28
   23444:	sub	r0, fp, #32
   23448:	ldrd	r2, [r0]
   2344c:	strd	r2, [r1]
   23450:	ldrd	r2, [r0, #8]
   23454:	strd	r2, [r1, #8]
   23458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2345c:	mov	r0, r3
   23460:	bl	218d0 <__assert_fail@plt+0xf1e4>
   23464:	vmov.f32	s15, s0
   23468:	ldr	r3, [fp, #-12]
   2346c:	vstr	s15, [r3, #28]
   23470:	mov	r3, #1
   23474:	b	23488 <__assert_fail@plt+0x10d9c>
   23478:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2347c:	ldr	r2, [fp, #-8]
   23480:	str	r2, [r3]
   23484:	mov	r3, #0
   23488:	mov	r0, r3
   2348c:	sub	sp, fp, #4
   23490:	ldr	fp, [sp]
   23494:	add	sp, sp, #4
   23498:	pop	{pc}		; (ldr pc, [sp], #4)
   2349c:	nop	{0}
   234a0:	andeq	r0, r0, r0
   234a4:	submi	r0, lr, r0
   234a8:	str	fp, [sp, #-8]!
   234ac:	str	lr, [sp, #4]
   234b0:	add	fp, sp, #4
   234b4:	sub	sp, sp, #16
   234b8:	str	r0, [fp, #-8]
   234bc:	str	r1, [fp, #-12]
   234c0:	str	r2, [fp, #-16]
   234c4:	mov	r3, #0
   234c8:	ldr	r2, [fp, #-16]
   234cc:	ldr	r1, [fp, #-12]
   234d0:	ldr	r0, [fp, #-8]
   234d4:	bl	2337c <__assert_fail@plt+0x10c90>
   234d8:	mov	r3, r0
   234dc:	mov	r0, r3
   234e0:	sub	sp, fp, #4
   234e4:	ldr	fp, [sp]
   234e8:	add	sp, sp, #4
   234ec:	pop	{pc}		; (ldr pc, [sp], #4)
   234f0:	str	fp, [sp, #-8]!
   234f4:	str	lr, [sp, #4]
   234f8:	add	fp, sp, #4
   234fc:	sub	sp, sp, #16
   23500:	str	r0, [fp, #-8]
   23504:	str	r1, [fp, #-12]
   23508:	str	r2, [fp, #-16]
   2350c:	mov	r3, #2
   23510:	ldr	r2, [fp, #-16]
   23514:	ldr	r1, [fp, #-12]
   23518:	ldr	r0, [fp, #-8]
   2351c:	bl	2337c <__assert_fail@plt+0x10c90>
   23520:	mov	r3, r0
   23524:	mov	r0, r3
   23528:	sub	sp, fp, #4
   2352c:	ldr	fp, [sp]
   23530:	add	sp, sp, #4
   23534:	pop	{pc}		; (ldr pc, [sp], #4)
   23538:	str	fp, [sp, #-8]!
   2353c:	str	lr, [sp, #4]
   23540:	add	fp, sp, #4
   23544:	sub	sp, sp, #16
   23548:	str	r0, [fp, #-8]
   2354c:	str	r1, [fp, #-12]
   23550:	str	r2, [fp, #-16]
   23554:	mov	r3, #3
   23558:	ldr	r2, [fp, #-16]
   2355c:	ldr	r1, [fp, #-12]
   23560:	ldr	r0, [fp, #-8]
   23564:	bl	2337c <__assert_fail@plt+0x10c90>
   23568:	mov	r3, r0
   2356c:	mov	r0, r3
   23570:	sub	sp, fp, #4
   23574:	ldr	fp, [sp]
   23578:	add	sp, sp, #4
   2357c:	pop	{pc}		; (ldr pc, [sp], #4)
   23580:	str	fp, [sp, #-8]!
   23584:	str	lr, [sp, #4]
   23588:	add	fp, sp, #4
   2358c:	sub	sp, sp, #32
   23590:	str	r0, [fp, #-24]	; 0xffffffe8
   23594:	str	r1, [fp, #-28]	; 0xffffffe4
   23598:	str	r2, [fp, #-32]	; 0xffffffe0
   2359c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   235a0:	ldr	r3, [r3]
   235a4:	str	r3, [fp, #-8]
   235a8:	sub	r3, fp, #16
   235ac:	mov	r2, r3
   235b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   235b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   235b8:	bl	219e4 <__assert_fail@plt+0xf2f8>
   235bc:	mov	r3, r0
   235c0:	cmp	r3, #0
   235c4:	beq	23660 <__assert_fail@plt+0x10f74>
   235c8:	bl	22c4c <__assert_fail@plt+0x10560>
   235cc:	ldr	r3, [fp, #-16]
   235d0:	mov	r2, r3
   235d4:	movw	r1, #33468	; 0x82bc
   235d8:	movt	r1, #6
   235dc:	movw	r0, #33480	; 0x82c8
   235e0:	movt	r0, #6
   235e4:	bl	22d30 <__assert_fail@plt+0x10644>
   235e8:	mov	r3, r0
   235ec:	cmp	r3, #0
   235f0:	beq	23654 <__assert_fail@plt+0x10f68>
   235f4:	ldr	r3, [fp, #-16]
   235f8:	mov	r1, r3
   235fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   23600:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   23604:	str	r0, [fp, #-12]
   23608:	ldr	r3, [fp, #-12]
   2360c:	mov	r2, #0
   23610:	strb	r2, [r3, #19]
   23614:	ldr	r3, [fp, #-12]
   23618:	ldrb	r2, [r3, #19]
   2361c:	ldr	r3, [fp, #-12]
   23620:	strb	r2, [r3, #18]
   23624:	ldr	r2, [fp, #-16]
   23628:	ldr	r3, [fp, #-12]
   2362c:	str	r2, [r3, #40]	; 0x28
   23630:	ldr	r3, [fp, #-16]
   23634:	mov	r1, #0
   23638:	mov	r0, r3
   2363c:	bl	22b24 <__assert_fail@plt+0x10438>
   23640:	vmov.f32	s15, s0
   23644:	ldr	r3, [fp, #-12]
   23648:	vstr	s15, [r3, #28]
   2364c:	mov	r3, #1
   23650:	b	23664 <__assert_fail@plt+0x10f78>
   23654:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23658:	ldr	r2, [fp, #-8]
   2365c:	str	r2, [r3]
   23660:	mov	r3, #0
   23664:	mov	r0, r3
   23668:	sub	sp, fp, #4
   2366c:	ldr	fp, [sp]
   23670:	add	sp, sp, #4
   23674:	pop	{pc}		; (ldr pc, [sp], #4)
   23678:	str	fp, [sp, #-8]!
   2367c:	str	lr, [sp, #4]
   23680:	add	fp, sp, #4
   23684:	sub	sp, sp, #24
   23688:	str	r0, [fp, #-16]
   2368c:	str	r1, [fp, #-20]	; 0xffffffec
   23690:	str	r2, [fp, #-24]	; 0xffffffe8
   23694:	mov	r1, #0
   23698:	ldr	r0, [fp, #-16]
   2369c:	bl	1aab4 <__assert_fail@plt+0x83c8>
   236a0:	str	r0, [fp, #-8]
   236a4:	ldr	r2, [fp, #-8]
   236a8:	movw	r3, #21684	; 0x54b4
   236ac:	movt	r3, #1
   236b0:	str	r3, [r2]
   236b4:	ldr	r3, [fp, #-8]
   236b8:	mov	r2, #2
   236bc:	str	r2, [r3, #8]
   236c0:	ldr	r3, [fp, #-8]
   236c4:	mov	r2, #4
   236c8:	str	r2, [r3, #12]
   236cc:	ldr	r3, [fp, #-8]
   236d0:	mov	r2, #0
   236d4:	strb	r2, [r3, #19]
   236d8:	ldr	r3, [fp, #-8]
   236dc:	ldrb	r2, [r3, #19]
   236e0:	ldr	r3, [fp, #-8]
   236e4:	strb	r2, [r3, #18]
   236e8:	mov	r3, #1
   236ec:	mov	r0, r3
   236f0:	sub	sp, fp, #4
   236f4:	ldr	fp, [sp]
   236f8:	add	sp, sp, #4
   236fc:	pop	{pc}		; (ldr pc, [sp], #4)
   23700:	str	r4, [sp, #-12]!
   23704:	str	fp, [sp, #4]
   23708:	str	lr, [sp, #8]
   2370c:	add	fp, sp, #8
   23710:	sub	sp, sp, #148	; 0x94
   23714:	str	r0, [fp, #-136]	; 0xffffff78
   23718:	str	r1, [fp, #-140]	; 0xffffff74
   2371c:	str	r2, [fp, #-144]	; 0xffffff70
   23720:	sub	r3, fp, #124	; 0x7c
   23724:	mov	r0, r3
   23728:	bl	1b728 <__assert_fail@plt+0x903c>
   2372c:	sub	r3, fp, #128	; 0x80
   23730:	sub	r2, fp, #124	; 0x7c
   23734:	ldr	r1, [fp, #-144]	; 0xffffff70
   23738:	ldr	r0, [fp, #-140]	; 0xffffff74
   2373c:	bl	21a40 <__assert_fail@plt+0xf354>
   23740:	mov	r3, r0
   23744:	cmp	r3, #0
   23748:	beq	237c0 <__assert_fail@plt+0x110d4>
   2374c:	ldr	r3, [fp, #-128]	; 0xffffff80
   23750:	mov	r1, r3
   23754:	ldr	r0, [fp, #-136]	; 0xffffff78
   23758:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   2375c:	str	r0, [fp, #-16]
   23760:	ldr	r4, [fp, #-16]
   23764:	sub	r3, fp, #156	; 0x9c
   23768:	sub	r2, fp, #124	; 0x7c
   2376c:	mov	r1, r2
   23770:	mov	r0, r3
   23774:	bl	3ced0 <__assert_fail@plt+0x2a7e4>
   23778:	add	r1, r4, #48	; 0x30
   2377c:	sub	r3, fp, #156	; 0x9c
   23780:	ldrd	r2, [r3]
   23784:	strd	r2, [r1]
   23788:	ldr	r3, [fp, #-16]
   2378c:	mov	r2, #3
   23790:	str	r2, [r3, #40]	; 0x28
   23794:	ldr	r3, [fp, #-16]
   23798:	mov	r2, #0
   2379c:	str	r2, [r3, #44]	; 0x2c
   237a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   237a4:	mov	r0, r3
   237a8:	bl	218d0 <__assert_fail@plt+0xf1e4>
   237ac:	vmov.f32	s15, s0
   237b0:	ldr	r3, [fp, #-16]
   237b4:	vstr	s15, [r3, #28]
   237b8:	mov	r3, #1
   237bc:	b	237c4 <__assert_fail@plt+0x110d8>
   237c0:	mov	r3, #0
   237c4:	mov	r0, r3
   237c8:	sub	sp, fp, #8
   237cc:	ldr	r4, [sp]
   237d0:	ldr	fp, [sp, #4]
   237d4:	add	sp, sp, #8
   237d8:	pop	{pc}		; (ldr pc, [sp], #4)
   237dc:	str	r4, [sp, #-12]!
   237e0:	str	fp, [sp, #4]
   237e4:	str	lr, [sp, #8]
   237e8:	add	fp, sp, #8
   237ec:	sub	sp, sp, #140	; 0x8c
   237f0:	str	r0, [fp, #-136]	; 0xffffff78
   237f4:	str	r1, [fp, #-140]	; 0xffffff74
   237f8:	str	r2, [fp, #-144]	; 0xffffff70
   237fc:	ldr	r3, [fp, #-140]	; 0xffffff74
   23800:	cmp	r3, #0
   23804:	beq	23828 <__assert_fail@plt+0x1113c>
   23808:	ldr	r3, [fp, #-144]	; 0xffffff70
   2380c:	ldr	r3, [r3]
   23810:	lsl	r3, r3, #2
   23814:	ldr	r2, [fp, #-140]	; 0xffffff74
   23818:	add	r3, r2, r3
   2381c:	ldr	r3, [r3]
   23820:	cmp	r3, #0
   23824:	bne	23830 <__assert_fail@plt+0x11144>
   23828:	mov	r3, #0
   2382c:	b	23d8c <__assert_fail@plt+0x116a0>
   23830:	ldr	r3, [fp, #-144]	; 0xffffff70
   23834:	ldr	r3, [r3]
   23838:	lsl	r3, r3, #2
   2383c:	ldr	r2, [fp, #-140]	; 0xffffff74
   23840:	add	r3, r2, r3
   23844:	ldr	r3, [r3]
   23848:	mov	r0, r3
   2384c:	bl	123bc <strlen@plt>
   23850:	mov	r3, r0
   23854:	cmp	r3, #8
   23858:	beq	23864 <__assert_fail@plt+0x11178>
   2385c:	mov	r3, #0
   23860:	b	23d8c <__assert_fail@plt+0x116a0>
   23864:	movw	r3, #33840	; 0x8430
   23868:	movt	r3, #6
   2386c:	sub	r2, fp, #28
   23870:	ldr	r1, [r3]
   23874:	str	r1, [r2]
   23878:	ldrh	r3, [r3, #4]
   2387c:	strh	r3, [r2, #4]
   23880:	ldr	r3, [fp, #-144]	; 0xffffff70
   23884:	ldr	r3, [r3]
   23888:	lsl	r3, r3, #2
   2388c:	ldr	r2, [fp, #-140]	; 0xffffff74
   23890:	add	r3, r2, r3
   23894:	ldr	r3, [r3]
   23898:	mov	r2, #6
   2389c:	mov	r1, r3
   238a0:	movw	r0, #32628	; 0x7f74
   238a4:	movt	r0, #6
   238a8:	bl	1268c <strncmp@plt>
   238ac:	mov	r3, r0
   238b0:	cmp	r3, #0
   238b4:	beq	238d8 <__assert_fail@plt+0x111ec>
   238b8:	movw	r3, #36184	; 0x8d58
   238bc:	movt	r3, #6
   238c0:	movw	r2, #1555	; 0x613
   238c4:	movw	r1, #32364	; 0x7e6c
   238c8:	movt	r1, #6
   238cc:	movw	r0, #33488	; 0x82d0
   238d0:	movt	r0, #6
   238d4:	bl	126ec <__assert_fail@plt>
   238d8:	ldr	r3, [fp, #-144]	; 0xffffff70
   238dc:	ldr	r3, [r3]
   238e0:	lsl	r3, r3, #2
   238e4:	ldr	r2, [fp, #-140]	; 0xffffff74
   238e8:	add	r3, r2, r3
   238ec:	ldr	r3, [r3]
   238f0:	ldrb	r3, [r3, #6]
   238f4:	strb	r3, [fp, #-13]
   238f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   238fc:	ldr	r3, [r3]
   23900:	lsl	r3, r3, #2
   23904:	ldr	r2, [fp, #-140]	; 0xffffff74
   23908:	add	r3, r2, r3
   2390c:	ldr	r3, [r3]
   23910:	ldrb	r3, [r3, #7]
   23914:	strb	r3, [fp, #-14]
   23918:	ldrb	r3, [fp, #-13]
   2391c:	cmp	r3, #66	; 0x42
   23920:	beq	23930 <__assert_fail@plt+0x11244>
   23924:	ldrb	r3, [fp, #-14]
   23928:	cmp	r3, #66	; 0x42
   2392c:	bne	23958 <__assert_fail@plt+0x1126c>
   23930:	movw	r0, #33532	; 0x82fc
   23934:	movt	r0, #6
   23938:	bl	12398 <gettext@plt>
   2393c:	mov	r3, r0
   23940:	mov	r2, r3
   23944:	mov	r1, #0
   23948:	mov	r0, #0
   2394c:	bl	122b4 <error@plt>
   23950:	mov	r3, #0
   23954:	b	23d8c <__assert_fail@plt+0x116a0>
   23958:	ldrb	r3, [fp, #-13]
   2395c:	cmp	r3, #116	; 0x74
   23960:	beq	239a4 <__assert_fail@plt+0x112b8>
   23964:	ldrb	r2, [fp, #-13]
   23968:	sub	r3, fp, #28
   2396c:	mov	r1, r2
   23970:	mov	r0, r3
   23974:	bl	123c8 <strchr@plt>
   23978:	mov	r3, r0
   2397c:	cmp	r3, #0
   23980:	beq	239a4 <__assert_fail@plt+0x112b8>
   23984:	ldrb	r2, [fp, #-14]
   23988:	sub	r3, fp, #28
   2398c:	mov	r1, r2
   23990:	mov	r0, r3
   23994:	bl	123c8 <strchr@plt>
   23998:	mov	r3, r0
   2399c:	cmp	r3, #0
   239a0:	bne	239ac <__assert_fail@plt+0x112c0>
   239a4:	mov	r3, #0
   239a8:	b	23d8c <__assert_fail@plt+0x116a0>
   239ac:	ldr	r3, [fp, #-144]	; 0xffffff70
   239b0:	ldr	r3, [r3]
   239b4:	add	r3, r3, #1
   239b8:	lsl	r3, r3, #2
   239bc:	ldr	r2, [fp, #-140]	; 0xffffff74
   239c0:	add	r3, r2, r3
   239c4:	ldr	r3, [r3]
   239c8:	cmp	r3, #0
   239cc:	bne	23a24 <__assert_fail@plt+0x11338>
   239d0:	movw	r0, #33604	; 0x8344
   239d4:	movt	r0, #6
   239d8:	bl	12398 <gettext@plt>
   239dc:	mov	r4, r0
   239e0:	movw	r3, #53324	; 0xd04c
   239e4:	movt	r3, #7
   239e8:	ldr	r1, [r3, #72]	; 0x48
   239ec:	ldr	r3, [fp, #-144]	; 0xffffff70
   239f0:	ldr	r3, [r3]
   239f4:	lsl	r3, r3, #2
   239f8:	ldr	r2, [fp, #-140]	; 0xffffff74
   239fc:	add	r3, r2, r3
   23a00:	ldr	r3, [r3]
   23a04:	mov	r2, r3
   23a08:	mov	r0, #0
   23a0c:	bl	3bc98 <__assert_fail@plt+0x295ac>
   23a10:	mov	r3, r0
   23a14:	mov	r2, r4
   23a18:	mov	r1, #0
   23a1c:	mov	r0, #1
   23a20:	bl	122b4 <error@plt>
   23a24:	ldr	r3, [fp, #-144]	; 0xffffff70
   23a28:	ldr	r3, [r3]
   23a2c:	add	r2, r3, #1
   23a30:	ldr	r3, [fp, #-144]	; 0xffffff70
   23a34:	str	r2, [r3]
   23a38:	ldr	r3, [fp, #-144]	; 0xffffff70
   23a3c:	ldr	r3, [r3]
   23a40:	lsl	r3, r3, #2
   23a44:	ldr	r2, [fp, #-140]	; 0xffffff74
   23a48:	add	r3, r2, r3
   23a4c:	ldr	r3, [r3]
   23a50:	mov	r1, r3
   23a54:	ldr	r0, [fp, #-136]	; 0xffffff78
   23a58:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   23a5c:	str	r0, [fp, #-20]	; 0xffffffec
   23a60:	ldrb	r3, [fp, #-13]
   23a64:	cmp	r3, #97	; 0x61
   23a68:	beq	23a94 <__assert_fail@plt+0x113a8>
   23a6c:	cmp	r3, #97	; 0x61
   23a70:	bgt	23a80 <__assert_fail@plt+0x11394>
   23a74:	cmp	r3, #66	; 0x42
   23a78:	beq	23aa4 <__assert_fail@plt+0x113b8>
   23a7c:	b	23ad4 <__assert_fail@plt+0x113e8>
   23a80:	cmp	r3, #99	; 0x63
   23a84:	beq	23ab4 <__assert_fail@plt+0x113c8>
   23a88:	cmp	r3, #109	; 0x6d
   23a8c:	beq	23ac4 <__assert_fail@plt+0x113d8>
   23a90:	b	23ad4 <__assert_fail@plt+0x113e8>
   23a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   23a98:	mov	r2, #0
   23a9c:	str	r2, [r3, #40]	; 0x28
   23aa0:	b	23b34 <__assert_fail@plt+0x11448>
   23aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23aa8:	mov	r2, #1
   23aac:	str	r2, [r3, #40]	; 0x28
   23ab0:	b	23b34 <__assert_fail@plt+0x11448>
   23ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ab8:	mov	r2, #2
   23abc:	str	r2, [r3, #40]	; 0x28
   23ac0:	b	23b34 <__assert_fail@plt+0x11448>
   23ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ac8:	mov	r2, #3
   23acc:	str	r2, [r3, #40]	; 0x28
   23ad0:	b	23b34 <__assert_fail@plt+0x11448>
   23ad4:	ldrb	r2, [fp, #-13]
   23ad8:	sub	r3, fp, #28
   23adc:	mov	r1, r2
   23ae0:	mov	r0, r3
   23ae4:	bl	123c8 <strchr@plt>
   23ae8:	mov	r3, r0
   23aec:	cmp	r3, #0
   23af0:	bne	23b14 <__assert_fail@plt+0x11428>
   23af4:	movw	r3, #36184	; 0x8d58
   23af8:	movt	r3, #6
   23afc:	movw	r2, #1611	; 0x64b
   23b00:	movw	r1, #32364	; 0x7e6c
   23b04:	movt	r1, #6
   23b08:	movw	r0, #33636	; 0x8364
   23b0c:	movt	r0, #6
   23b10:	bl	126ec <__assert_fail@plt>
   23b14:	movw	r3, #36184	; 0x8d58
   23b18:	movt	r3, #6
   23b1c:	movw	r2, #1612	; 0x64c
   23b20:	movw	r1, #32364	; 0x7e6c
   23b24:	movt	r1, #6
   23b28:	movw	r0, #32376	; 0x7e78
   23b2c:	movt	r0, #6
   23b30:	bl	126ec <__assert_fail@plt>
   23b34:	ldrb	r3, [fp, #-14]
   23b38:	cmp	r3, #116	; 0x74
   23b3c:	bne	23bd4 <__assert_fail@plt+0x114e8>
   23b40:	ldr	r3, [fp, #-20]	; 0xffffffec
   23b44:	add	r0, r3, #48	; 0x30
   23b48:	ldr	r3, [fp, #-144]	; 0xffffff70
   23b4c:	ldr	r3, [r3]
   23b50:	lsl	r3, r3, #2
   23b54:	ldr	r2, [fp, #-140]	; 0xffffff74
   23b58:	add	r3, r2, r3
   23b5c:	ldr	r3, [r3]
   23b60:	ldr	r2, [pc, #572]	; 23da4 <__assert_fail@plt+0x116b8>
   23b64:	mov	r1, r3
   23b68:	bl	39834 <__assert_fail@plt+0x27148>
   23b6c:	mov	r3, r0
   23b70:	eor	r3, r3, #1
   23b74:	uxtb	r3, r3
   23b78:	cmp	r3, #0
   23b7c:	beq	23cb4 <__assert_fail@plt+0x115c8>
   23b80:	movw	r0, #33660	; 0x837c
   23b84:	movt	r0, #6
   23b88:	bl	12398 <gettext@plt>
   23b8c:	mov	r4, r0
   23b90:	movw	r3, #53324	; 0xd04c
   23b94:	movt	r3, #7
   23b98:	ldr	r1, [r3, #72]	; 0x48
   23b9c:	ldr	r3, [fp, #-144]	; 0xffffff70
   23ba0:	ldr	r3, [r3]
   23ba4:	lsl	r3, r3, #2
   23ba8:	ldr	r2, [fp, #-140]	; 0xffffff74
   23bac:	add	r3, r2, r3
   23bb0:	ldr	r3, [r3]
   23bb4:	mov	r2, r3
   23bb8:	mov	r0, #0
   23bbc:	bl	3bc98 <__assert_fail@plt+0x295ac>
   23bc0:	mov	r3, r0
   23bc4:	mov	r2, r4
   23bc8:	mov	r1, #0
   23bcc:	mov	r0, #1
   23bd0:	bl	122b4 <error@plt>
   23bd4:	sub	r3, fp, #132	; 0x84
   23bd8:	mov	r0, r3
   23bdc:	bl	1b728 <__assert_fail@plt+0x903c>
   23be0:	movw	r3, #53324	; 0xd04c
   23be4:	movt	r3, #7
   23be8:	ldr	r3, [r3, #52]	; 0x34
   23bec:	ldr	r2, [fp, #-144]	; 0xffffff70
   23bf0:	ldr	r2, [r2]
   23bf4:	lsl	r2, r2, #2
   23bf8:	ldr	r1, [fp, #-140]	; 0xffffff74
   23bfc:	add	r2, r1, r2
   23c00:	ldr	r2, [r2]
   23c04:	sub	r1, fp, #132	; 0x84
   23c08:	mov	r0, r2
   23c0c:	blx	r3
   23c10:	mov	r3, r0
   23c14:	cmp	r3, #0
   23c18:	beq	23c48 <__assert_fail@plt+0x1155c>
   23c1c:	bl	12404 <__errno_location@plt>
   23c20:	mov	r3, r0
   23c24:	ldr	r0, [r3]
   23c28:	ldr	r3, [fp, #-144]	; 0xffffff70
   23c2c:	ldr	r3, [r3]
   23c30:	lsl	r3, r3, #2
   23c34:	ldr	r2, [fp, #-140]	; 0xffffff74
   23c38:	add	r3, r2, r3
   23c3c:	ldr	r3, [r3]
   23c40:	mov	r1, r3
   23c44:	bl	1d528 <__assert_fail@plt+0xae3c>
   23c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   23c4c:	add	r2, r3, #48	; 0x30
   23c50:	ldrb	r1, [fp, #-14]
   23c54:	sub	r3, fp, #132	; 0x84
   23c58:	mov	r0, r3
   23c5c:	bl	21300 <__assert_fail@plt+0xec14>
   23c60:	mov	r3, r0
   23c64:	cmp	r3, #0
   23c68:	bne	23cb4 <__assert_fail@plt+0x115c8>
   23c6c:	movw	r0, #33720	; 0x83b8
   23c70:	movt	r0, #6
   23c74:	bl	12398 <gettext@plt>
   23c78:	mov	r4, r0
   23c7c:	ldr	r3, [fp, #-144]	; 0xffffff70
   23c80:	ldr	r3, [r3]
   23c84:	lsl	r3, r3, #2
   23c88:	ldr	r2, [fp, #-140]	; 0xffffff74
   23c8c:	add	r3, r2, r3
   23c90:	ldr	r3, [r3]
   23c94:	mov	r1, r3
   23c98:	mov	r0, #0
   23c9c:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   23ca0:	mov	r3, r0
   23ca4:	mov	r2, r4
   23ca8:	mov	r1, #0
   23cac:	mov	r0, #1
   23cb0:	bl	122b4 <error@plt>
   23cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23cb8:	mov	r2, #0
   23cbc:	str	r2, [r3, #44]	; 0x2c
   23cc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   23cc4:	ldr	r3, [r3, #48]	; 0x30
   23cc8:	mov	r0, r3
   23ccc:	bl	218d0 <__assert_fail@plt+0xf1e4>
   23cd0:	vmov.f32	s15, s0
   23cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23cd8:	vstr	s15, [r3, #28]
   23cdc:	ldr	r3, [fp, #-144]	; 0xffffff70
   23ce0:	ldr	r3, [r3]
   23ce4:	add	r2, r3, #1
   23ce8:	ldr	r3, [fp, #-144]	; 0xffffff70
   23cec:	str	r2, [r3]
   23cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   23cf4:	ldr	r3, [r3]
   23cf8:	cmp	r3, #0
   23cfc:	bne	23d20 <__assert_fail@plt+0x11634>
   23d00:	movw	r3, #36184	; 0x8d58
   23d04:	movt	r3, #6
   23d08:	movw	r2, #1647	; 0x66f
   23d0c:	movw	r1, #32364	; 0x7e6c
   23d10:	movt	r1, #6
   23d14:	movw	r0, #33756	; 0x83dc
   23d18:	movt	r0, #6
   23d1c:	bl	126ec <__assert_fail@plt>
   23d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   23d24:	ldr	r2, [r3]
   23d28:	movw	r3, #21948	; 0x55bc
   23d2c:	movt	r3, #1
   23d30:	cmp	r2, r3
   23d34:	beq	23d58 <__assert_fail@plt+0x1166c>
   23d38:	movw	r3, #36184	; 0x8d58
   23d3c:	movt	r3, #6
   23d40:	mov	r2, #1648	; 0x670
   23d44:	movw	r1, #32364	; 0x7e6c
   23d48:	movt	r1, #6
   23d4c:	movw	r0, #33784	; 0x83f8
   23d50:	movt	r0, #6
   23d54:	bl	126ec <__assert_fail@plt>
   23d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   23d5c:	ldrb	r3, [r3, #18]
   23d60:	cmp	r3, #0
   23d64:	bne	23d88 <__assert_fail@plt+0x1169c>
   23d68:	movw	r3, #36184	; 0x8d58
   23d6c:	movt	r3, #6
   23d70:	movw	r2, #1649	; 0x671
   23d74:	movw	r1, #32364	; 0x7e6c
   23d78:	movt	r1, #6
   23d7c:	movw	r0, #33820	; 0x841c
   23d80:	movt	r0, #6
   23d84:	bl	126ec <__assert_fail@plt>
   23d88:	mov	r3, #1
   23d8c:	mov	r0, r3
   23d90:	sub	sp, fp, #8
   23d94:	ldr	r4, [sp]
   23d98:	ldr	fp, [sp, #4]
   23d9c:	add	sp, sp, #8
   23da0:	pop	{pc}		; (ldr pc, [sp], #4)
   23da4:	andeq	sp, r7, r0, rrx
   23da8:	str	fp, [sp, #-8]!
   23dac:	str	lr, [sp, #4]
   23db0:	add	fp, sp, #4
   23db4:	sub	sp, sp, #16
   23db8:	str	r0, [fp, #-8]
   23dbc:	str	r1, [fp, #-12]
   23dc0:	str	r2, [fp, #-16]
   23dc4:	movw	r3, #53324	; 0xd04c
   23dc8:	movt	r3, #7
   23dcc:	mov	r2, #1
   23dd0:	strb	r2, [r3, #12]
   23dd4:	ldr	r2, [fp, #-16]
   23dd8:	ldr	r1, [fp, #-12]
   23ddc:	ldr	r0, [fp, #-8]
   23de0:	bl	25444 <__assert_fail@plt+0x12d58>
   23de4:	mov	r3, r0
   23de8:	mov	r0, r3
   23dec:	sub	sp, fp, #4
   23df0:	ldr	fp, [sp]
   23df4:	add	sp, sp, #4
   23df8:	pop	{pc}		; (ldr pc, [sp], #4)
   23dfc:	str	fp, [sp, #-8]!
   23e00:	str	lr, [sp, #4]
   23e04:	add	fp, sp, #4
   23e08:	sub	sp, sp, #24
   23e0c:	str	r0, [fp, #-16]
   23e10:	str	r1, [fp, #-20]	; 0xffffffec
   23e14:	str	r2, [fp, #-24]	; 0xffffffe8
   23e18:	mov	r1, #0
   23e1c:	ldr	r0, [fp, #-16]
   23e20:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   23e24:	str	r0, [fp, #-8]
   23e28:	ldr	r3, [fp, #-8]
   23e2c:	movw	r2, #46871	; 0xb717
   23e30:	movt	r2, #14545	; 0x38d1
   23e34:	str	r2, [r3, #28]
   23e38:	mov	r3, #1
   23e3c:	mov	r0, r3
   23e40:	sub	sp, fp, #4
   23e44:	ldr	fp, [sp]
   23e48:	add	sp, sp, #4
   23e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   23e50:	str	fp, [sp, #-8]!
   23e54:	str	lr, [sp, #4]
   23e58:	add	fp, sp, #4
   23e5c:	sub	sp, sp, #24
   23e60:	str	r0, [fp, #-16]
   23e64:	str	r1, [fp, #-20]	; 0xffffffec
   23e68:	str	r2, [fp, #-24]	; 0xffffffe8
   23e6c:	ldr	r0, [fp, #-16]
   23e70:	bl	1b328 <__assert_fail@plt+0x8c3c>
   23e74:	str	r0, [fp, #-8]
   23e78:	ldr	r3, [fp, #-8]
   23e7c:	movw	r2, #4719	; 0x126f
   23e80:	movt	r2, #14979	; 0x3a83
   23e84:	str	r2, [r3, #28]
   23e88:	mov	r3, #1
   23e8c:	mov	r0, r3
   23e90:	sub	sp, fp, #4
   23e94:	ldr	fp, [sp]
   23e98:	add	sp, sp, #4
   23e9c:	pop	{pc}		; (ldr pc, [sp], #4)
   23ea0:	str	fp, [sp, #-8]!
   23ea4:	str	lr, [sp, #4]
   23ea8:	add	fp, sp, #4
   23eac:	sub	sp, sp, #16
   23eb0:	str	r0, [fp, #-8]
   23eb4:	str	r1, [fp, #-12]
   23eb8:	str	r2, [fp, #-16]
   23ebc:	movw	r3, #53324	; 0xd04c
   23ec0:	movt	r3, #7
   23ec4:	mov	r2, #0
   23ec8:	strb	r2, [r3, #16]
   23ecc:	ldr	r2, [fp, #-16]
   23ed0:	ldr	r1, [fp, #-12]
   23ed4:	ldr	r0, [fp, #-8]
   23ed8:	bl	25444 <__assert_fail@plt+0x12d58>
   23edc:	mov	r3, r0
   23ee0:	mov	r0, r3
   23ee4:	sub	sp, fp, #4
   23ee8:	ldr	fp, [sp]
   23eec:	add	sp, sp, #4
   23ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   23ef4:	str	fp, [sp, #-8]!
   23ef8:	str	lr, [sp, #4]
   23efc:	add	fp, sp, #4
   23f00:	sub	sp, sp, #16
   23f04:	str	r0, [fp, #-8]
   23f08:	str	r1, [fp, #-12]
   23f0c:	str	r2, [fp, #-16]
   23f10:	ldr	r3, [fp, #-16]
   23f14:	ldr	r2, [fp, #-12]
   23f18:	ldr	r1, [fp, #-8]
   23f1c:	movw	r0, #33848	; 0x8438
   23f20:	movt	r0, #6
   23f24:	bl	26368 <__assert_fail@plt+0x13c7c>
   23f28:	mov	r3, r0
   23f2c:	mov	r0, r3
   23f30:	sub	sp, fp, #4
   23f34:	ldr	fp, [sp]
   23f38:	add	sp, sp, #4
   23f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   23f40:	str	fp, [sp, #-8]!
   23f44:	str	lr, [sp, #4]
   23f48:	add	fp, sp, #4
   23f4c:	sub	sp, sp, #16
   23f50:	str	r0, [fp, #-8]
   23f54:	str	r1, [fp, #-12]
   23f58:	str	r2, [fp, #-16]
   23f5c:	ldr	r3, [fp, #-16]
   23f60:	ldr	r2, [fp, #-12]
   23f64:	ldr	r1, [fp, #-8]
   23f68:	movw	r0, #33852	; 0x843c
   23f6c:	movt	r0, #6
   23f70:	bl	26368 <__assert_fail@plt+0x13c7c>
   23f74:	mov	r3, r0
   23f78:	mov	r0, r3
   23f7c:	sub	sp, fp, #4
   23f80:	ldr	fp, [sp]
   23f84:	add	sp, sp, #4
   23f88:	pop	{pc}		; (ldr pc, [sp], #4)
   23f8c:	str	fp, [sp, #-8]!
   23f90:	str	lr, [sp, #4]
   23f94:	add	fp, sp, #4
   23f98:	sub	sp, sp, #24
   23f9c:	str	r0, [fp, #-16]
   23fa0:	str	r1, [fp, #-20]	; 0xffffffec
   23fa4:	str	r2, [fp, #-24]	; 0xffffffe8
   23fa8:	mov	r1, #0
   23fac:	ldr	r0, [fp, #-16]
   23fb0:	bl	1aab4 <__assert_fail@plt+0x83c8>
   23fb4:	str	r0, [fp, #-8]
   23fb8:	ldr	r2, [fp, #-8]
   23fbc:	movw	r3, #23076	; 0x5a24
   23fc0:	movt	r3, #1
   23fc4:	str	r3, [r2]
   23fc8:	ldr	r3, [fp, #-8]
   23fcc:	mov	r2, #4
   23fd0:	str	r2, [r3, #8]
   23fd4:	ldr	r3, [fp, #-8]
   23fd8:	mov	r2, #0
   23fdc:	str	r2, [r3, #12]
   23fe0:	ldr	r3, [fp, #-8]
   23fe4:	mov	r2, #0
   23fe8:	strb	r2, [r3, #19]
   23fec:	ldr	r3, [fp, #-8]
   23ff0:	ldrb	r2, [r3, #19]
   23ff4:	ldr	r3, [fp, #-8]
   23ff8:	strb	r2, [r3, #18]
   23ffc:	mov	r3, #1
   24000:	mov	r0, r3
   24004:	sub	sp, fp, #4
   24008:	ldr	fp, [sp]
   2400c:	add	sp, sp, #4
   24010:	pop	{pc}		; (ldr pc, [sp], #4)
   24014:	str	fp, [sp, #-8]!
   24018:	str	lr, [sp, #4]
   2401c:	add	fp, sp, #4
   24020:	sub	sp, sp, #24
   24024:	str	r0, [fp, #-16]
   24028:	str	r1, [fp, #-20]	; 0xffffffec
   2402c:	str	r2, [fp, #-24]	; 0xffffffe8
   24030:	ldr	r0, [fp, #-16]
   24034:	bl	1a88c <__assert_fail@plt+0x81a0>
   24038:	str	r0, [fp, #-8]
   2403c:	ldr	r2, [fp, #-8]
   24040:	movw	r3, #23120	; 0x5a50
   24044:	movt	r3, #1
   24048:	str	r3, [r2]
   2404c:	ldr	r3, [fp, #-8]
   24050:	mov	r2, #3
   24054:	str	r2, [r3, #8]
   24058:	ldr	r3, [fp, #-8]
   2405c:	mov	r2, #2
   24060:	str	r2, [r3, #12]
   24064:	ldr	r3, [fp, #-8]
   24068:	mov	r2, #0
   2406c:	strb	r2, [r3, #19]
   24070:	ldr	r3, [fp, #-8]
   24074:	ldrb	r2, [r3, #19]
   24078:	ldr	r3, [fp, #-8]
   2407c:	strb	r2, [r3, #18]
   24080:	mov	r3, #1
   24084:	mov	r0, r3
   24088:	sub	sp, fp, #4
   2408c:	ldr	fp, [sp]
   24090:	add	sp, sp, #4
   24094:	pop	{pc}		; (ldr pc, [sp], #4)
   24098:	str	fp, [sp, #-8]!
   2409c:	str	lr, [sp, #4]
   240a0:	add	fp, sp, #4
   240a4:	sub	sp, sp, #16
   240a8:	str	r0, [fp, #-16]
   240ac:	mov	r3, r1
   240b0:	strb	r3, [fp, #-17]	; 0xffffffef
   240b4:	mov	r1, #47	; 0x2f
   240b8:	ldr	r0, [fp, #-16]
   240bc:	bl	12548 <strrchr@plt>
   240c0:	str	r0, [fp, #-8]
   240c4:	ldr	r3, [fp, #-8]
   240c8:	cmp	r3, #0
   240cc:	beq	24110 <__assert_fail@plt+0x11a24>
   240d0:	ldr	r3, [fp, #-8]
   240d4:	add	r3, r3, #1
   240d8:	ldrb	r3, [r3]
   240dc:	cmp	r3, #0
   240e0:	bne	24110 <__assert_fail@plt+0x11a24>
   240e4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   240e8:	mov	r1, r3
   240ec:	ldr	r0, [fp, #-16]
   240f0:	bl	17ab8 <__assert_fail@plt+0x53cc>
   240f4:	mov	r3, r0
   240f8:	cmp	r3, #0
   240fc:	beq	24108 <__assert_fail@plt+0x11a1c>
   24100:	mov	r3, #1
   24104:	b	24114 <__assert_fail@plt+0x11a28>
   24108:	mov	r3, #0
   2410c:	b	24114 <__assert_fail@plt+0x11a28>
   24110:	mov	r3, #1
   24114:	mov	r0, r3
   24118:	sub	sp, fp, #4
   2411c:	ldr	fp, [sp]
   24120:	add	sp, sp, #4
   24124:	pop	{pc}		; (ldr pc, [sp], #4)
   24128:	str	fp, [sp, #-8]!
   2412c:	str	lr, [sp, #4]
   24130:	add	fp, sp, #4
   24134:	sub	sp, sp, #40	; 0x28
   24138:	str	r0, [fp, #-24]	; 0xffffffe8
   2413c:	str	r1, [fp, #-28]	; 0xffffffe4
   24140:	str	r2, [fp, #-32]	; 0xffffffe0
   24144:	str	r3, [fp, #-36]	; 0xffffffdc
   24148:	mov	r3, #0
   2414c:	strb	r3, [fp, #-5]
   24150:	ldr	r2, [fp, #4]
   24154:	movw	r3, #20708	; 0x50e4
   24158:	movt	r3, #1
   2415c:	cmp	r2, r3
   24160:	bne	2416c <__assert_fail@plt+0x11a80>
   24164:	mov	r3, #1
   24168:	strb	r3, [fp, #-5]
   2416c:	bl	22c4c <__assert_fail@plt+0x10560>
   24170:	sub	r3, fp, #16
   24174:	mov	r2, r3
   24178:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2417c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24180:	bl	219e4 <__assert_fail@plt+0xf2f8>
   24184:	mov	r3, r0
   24188:	cmp	r3, #0
   2418c:	beq	24270 <__assert_fail@plt+0x11b84>
   24190:	ldr	r3, [fp, #-16]
   24194:	mov	r2, r3
   24198:	ldr	r1, [fp, #4]
   2419c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   241a0:	bl	1b22c <__assert_fail@plt+0x8b40>
   241a4:	str	r0, [fp, #-12]
   241a8:	ldr	r3, [fp, #-12]
   241ac:	mov	r2, #0
   241b0:	strb	r2, [r3, #19]
   241b4:	ldr	r3, [fp, #-12]
   241b8:	ldrb	r2, [r3, #19]
   241bc:	ldr	r3, [fp, #-12]
   241c0:	strb	r2, [r3, #18]
   241c4:	ldr	r2, [fp, #-16]
   241c8:	ldr	r3, [fp, #-12]
   241cc:	str	r2, [r3, #40]	; 0x28
   241d0:	ldr	r3, [fp, #-16]
   241d4:	mov	r1, #0
   241d8:	mov	r0, r3
   241dc:	bl	22b24 <__assert_fail@plt+0x10438>
   241e0:	vmov.f32	s15, s0
   241e4:	ldr	r3, [fp, #-12]
   241e8:	vstr	s15, [r3, #28]
   241ec:	movw	r3, #53324	; 0xd04c
   241f0:	movt	r3, #7
   241f4:	ldrb	r3, [r3, #17]
   241f8:	eor	r3, r3, #1
   241fc:	uxtb	r3, r3
   24200:	cmp	r3, #0
   24204:	beq	24268 <__assert_fail@plt+0x11b7c>
   24208:	ldr	r3, [fp, #-16]
   2420c:	ldrb	r2, [fp, #-5]
   24210:	mov	r1, r2
   24214:	mov	r0, r3
   24218:	bl	24098 <__assert_fail@plt+0x119ac>
   2421c:	mov	r3, r0
   24220:	eor	r3, r3, #1
   24224:	uxtb	r3, r3
   24228:	cmp	r3, #0
   2422c:	beq	24268 <__assert_fail@plt+0x11b7c>
   24230:	movw	r0, #33860	; 0x8444
   24234:	movt	r0, #6
   24238:	bl	12398 <gettext@plt>
   2423c:	mov	r2, r0
   24240:	ldr	r3, [fp, #-16]
   24244:	str	r3, [sp]
   24248:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2424c:	mov	r1, #0
   24250:	mov	r0, #0
   24254:	bl	122b4 <error@plt>
   24258:	ldr	r3, [fp, #-12]
   2425c:	movw	r2, #52343	; 0xcc77
   24260:	movt	r2, #12843	; 0x322b
   24264:	str	r2, [r3, #28]
   24268:	mov	r3, #1
   2426c:	b	24274 <__assert_fail@plt+0x11b88>
   24270:	mov	r3, #0
   24274:	mov	r0, r3
   24278:	sub	sp, fp, #4
   2427c:	ldr	fp, [sp]
   24280:	add	sp, sp, #4
   24284:	pop	{pc}		; (ldr pc, [sp], #4)
   24288:	str	fp, [sp, #-8]!
   2428c:	str	lr, [sp, #4]
   24290:	add	fp, sp, #4
   24294:	sub	sp, sp, #24
   24298:	str	r0, [fp, #-8]
   2429c:	str	r1, [fp, #-12]
   242a0:	str	r2, [fp, #-16]
   242a4:	movw	r3, #23264	; 0x5ae0
   242a8:	movt	r3, #1
   242ac:	str	r3, [sp]
   242b0:	movw	r3, #30484	; 0x7714
   242b4:	movt	r3, #6
   242b8:	ldr	r2, [fp, #-16]
   242bc:	ldr	r1, [fp, #-12]
   242c0:	ldr	r0, [fp, #-8]
   242c4:	bl	24128 <__assert_fail@plt+0x11a3c>
   242c8:	mov	r3, r0
   242cc:	mov	r0, r3
   242d0:	sub	sp, fp, #4
   242d4:	ldr	fp, [sp]
   242d8:	add	sp, sp, #4
   242dc:	pop	{pc}		; (ldr pc, [sp], #4)
   242e0:	str	fp, [sp, #-8]!
   242e4:	str	lr, [sp, #4]
   242e8:	add	fp, sp, #4
   242ec:	sub	sp, sp, #24
   242f0:	str	r0, [fp, #-8]
   242f4:	str	r1, [fp, #-12]
   242f8:	str	r2, [fp, #-16]
   242fc:	movw	r3, #23264	; 0x5ae0
   24300:	movt	r3, #1
   24304:	str	r3, [sp]
   24308:	movw	r3, #30620	; 0x779c
   2430c:	movt	r3, #6
   24310:	ldr	r2, [fp, #-16]
   24314:	ldr	r1, [fp, #-12]
   24318:	ldr	r0, [fp, #-8]
   2431c:	bl	24128 <__assert_fail@plt+0x11a3c>
   24320:	mov	r3, r0
   24324:	mov	r0, r3
   24328:	sub	sp, fp, #4
   2432c:	ldr	fp, [sp]
   24330:	add	sp, sp, #4
   24334:	pop	{pc}		; (ldr pc, [sp], #4)
   24338:	str	fp, [sp, #-8]!
   2433c:	str	lr, [sp, #4]
   24340:	add	fp, sp, #4
   24344:	sub	sp, sp, #24
   24348:	str	r0, [fp, #-8]
   2434c:	str	r1, [fp, #-12]
   24350:	str	r2, [fp, #-16]
   24354:	movw	r3, #20708	; 0x50e4
   24358:	movt	r3, #1
   2435c:	str	r3, [sp]
   24360:	movw	r3, #30288	; 0x7650
   24364:	movt	r3, #6
   24368:	ldr	r2, [fp, #-16]
   2436c:	ldr	r1, [fp, #-12]
   24370:	ldr	r0, [fp, #-8]
   24374:	bl	24128 <__assert_fail@plt+0x11a3c>
   24378:	mov	r3, r0
   2437c:	mov	r0, r3
   24380:	sub	sp, fp, #4
   24384:	ldr	fp, [sp]
   24388:	add	sp, sp, #4
   2438c:	pop	{pc}		; (ldr pc, [sp], #4)
   24390:	str	fp, [sp, #-8]!
   24394:	str	lr, [sp, #4]
   24398:	add	fp, sp, #4
   2439c:	sub	sp, sp, #24
   243a0:	str	r0, [fp, #-8]
   243a4:	str	r1, [fp, #-12]
   243a8:	str	r2, [fp, #-16]
   243ac:	movw	r3, #20708	; 0x50e4
   243b0:	movt	r3, #1
   243b4:	str	r3, [sp]
   243b8:	movw	r3, #30304	; 0x7660
   243bc:	movt	r3, #6
   243c0:	ldr	r2, [fp, #-16]
   243c4:	ldr	r1, [fp, #-12]
   243c8:	ldr	r0, [fp, #-8]
   243cc:	bl	24128 <__assert_fail@plt+0x11a3c>
   243d0:	mov	r3, r0
   243d4:	mov	r0, r3
   243d8:	sub	sp, fp, #4
   243dc:	ldr	fp, [sp]
   243e0:	add	sp, sp, #4
   243e4:	pop	{pc}		; (ldr pc, [sp], #4)
   243e8:	str	r4, [sp, #-12]!
   243ec:	str	fp, [sp, #4]
   243f0:	str	lr, [sp, #8]
   243f4:	add	fp, sp, #8
   243f8:	sub	sp, sp, #60	; 0x3c
   243fc:	str	r0, [fp, #-48]	; 0xffffffd0
   24400:	str	r1, [fp, #-52]	; 0xffffffcc
   24404:	str	r2, [fp, #-56]	; 0xffffffc8
   24408:	mov	r3, #0
   2440c:	str	r3, [fp, #-20]	; 0xffffffec
   24410:	mov	r3, #2
   24414:	str	r3, [fp, #-24]	; 0xffffffe8
   24418:	sub	r3, fp, #44	; 0x2c
   2441c:	mov	r2, r3
   24420:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24424:	ldr	r0, [fp, #-52]	; 0xffffffcc
   24428:	bl	219e4 <__assert_fail@plt+0xf2f8>
   2442c:	mov	r3, r0
   24430:	eor	r3, r3, #1
   24434:	uxtb	r3, r3
   24438:	cmp	r3, #0
   2443c:	beq	24448 <__assert_fail@plt+0x11d5c>
   24440:	mov	r3, #0
   24444:	b	24658 <__assert_fail@plt+0x11f6c>
   24448:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2444c:	ldrb	r3, [r3]
   24450:	cmp	r3, #45	; 0x2d
   24454:	beq	24464 <__assert_fail@plt+0x11d78>
   24458:	cmp	r3, #47	; 0x2f
   2445c:	beq	24484 <__assert_fail@plt+0x11d98>
   24460:	b	244a4 <__assert_fail@plt+0x11db8>
   24464:	mov	r3, #1
   24468:	str	r3, [fp, #-20]	; 0xffffffec
   2446c:	mov	r3, #0
   24470:	str	r3, [fp, #-24]	; 0xffffffe8
   24474:	movw	r3, #52429	; 0xcccd
   24478:	movt	r3, #15948	; 0x3e4c
   2447c:	str	r3, [fp, #-16]
   24480:	b	244c4 <__assert_fail@plt+0x11dd8>
   24484:	mov	r3, #1
   24488:	str	r3, [fp, #-20]	; 0xffffffec
   2448c:	mov	r3, #1
   24490:	str	r3, [fp, #-24]	; 0xffffffe8
   24494:	movw	r3, #39322	; 0x999a
   24498:	movt	r3, #16025	; 0x3e99
   2449c:	str	r3, [fp, #-16]
   244a0:	b	244c4 <__assert_fail@plt+0x11dd8>
   244a4:	mov	r3, #0
   244a8:	str	r3, [fp, #-20]	; 0xffffffec
   244ac:	mov	r3, #2
   244b0:	str	r3, [fp, #-24]	; 0xffffffe8
   244b4:	movw	r3, #55050	; 0xd70a
   244b8:	movt	r3, #15395	; 0x3c23
   244bc:	str	r3, [fp, #-16]
   244c0:	nop	{0}
   244c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   244c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   244cc:	add	r3, r2, r3
   244d0:	mov	r0, r3
   244d4:	bl	31130 <__assert_fail@plt+0x1ea44>
   244d8:	mov	r3, r0
   244dc:	str	r3, [fp, #-28]	; 0xffffffe4
   244e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   244e4:	cmp	r3, #0
   244e8:	beq	24524 <__assert_fail@plt+0x11e38>
   244ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   244f0:	ldrb	r3, [r3]
   244f4:	cmp	r3, #43	; 0x2b
   244f8:	bne	24564 <__assert_fail@plt+0x11e78>
   244fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24500:	add	r3, r3, #1
   24504:	ldrb	r3, [r3]
   24508:	cmp	r3, #47	; 0x2f
   2450c:	bls	24564 <__assert_fail@plt+0x11e78>
   24510:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24514:	add	r3, r3, #1
   24518:	ldrb	r3, [r3]
   2451c:	cmp	r3, #55	; 0x37
   24520:	bhi	24564 <__assert_fail@plt+0x11e78>
   24524:	movw	r0, #33924	; 0x8484
   24528:	movt	r0, #6
   2452c:	bl	12398 <gettext@plt>
   24530:	mov	r4, r0
   24534:	movw	r3, #53324	; 0xd04c
   24538:	movt	r3, #7
   2453c:	ldr	r3, [r3, #72]	; 0x48
   24540:	ldr	r2, [fp, #-44]	; 0xffffffd4
   24544:	mov	r1, r3
   24548:	mov	r0, #0
   2454c:	bl	3bc98 <__assert_fail@plt+0x295ac>
   24550:	mov	r3, r0
   24554:	mov	r2, r4
   24558:	mov	r1, #0
   2455c:	mov	r0, #1
   24560:	bl	122b4 <error@plt>
   24564:	mov	r3, #0
   24568:	str	r3, [sp]
   2456c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24570:	mov	r2, #0
   24574:	mov	r1, #0
   24578:	mov	r0, #0
   2457c:	bl	31798 <__assert_fail@plt+0x1f0ac>
   24580:	mov	r3, r0
   24584:	str	r3, [fp, #-40]	; 0xffffffd8
   24588:	mov	r3, #0
   2458c:	str	r3, [sp]
   24590:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24594:	mov	r2, #0
   24598:	mov	r1, #1
   2459c:	mov	r0, #0
   245a0:	bl	31798 <__assert_fail@plt+0x1f0ac>
   245a4:	mov	r3, r0
   245a8:	str	r3, [fp, #-36]	; 0xffffffdc
   245ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   245b0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   245b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   245b8:	ldrb	r3, [r3]
   245bc:	cmp	r3, #47	; 0x2f
   245c0:	bne	24610 <__assert_fail@plt+0x11f24>
   245c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   245c8:	cmp	r3, #0
   245cc:	bne	24610 <__assert_fail@plt+0x11f24>
   245d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   245d4:	cmp	r3, #0
   245d8:	bne	24610 <__assert_fail@plt+0x11f24>
   245dc:	movw	r0, #33940	; 0x8494
   245e0:	movt	r0, #6
   245e4:	bl	12398 <gettext@plt>
   245e8:	mov	r2, r0
   245ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   245f0:	mov	r1, #0
   245f4:	mov	r0, #0
   245f8:	bl	122b4 <error@plt>
   245fc:	mov	r3, #0
   24600:	str	r3, [fp, #-24]	; 0xffffffe8
   24604:	movw	r3, #42048	; 0xa440
   24608:	movt	r3, #16255	; 0x3f7f
   2460c:	str	r3, [fp, #-16]
   24610:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24614:	mov	r1, r3
   24618:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2461c:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   24620:	str	r0, [fp, #-32]	; 0xffffffe0
   24624:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24628:	ldr	r2, [fp, #-16]
   2462c:	str	r2, [r3, #28]
   24630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24638:	str	r2, [r3, #40]	; 0x28
   2463c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24640:	add	r3, r3, #44	; 0x2c
   24644:	sub	r1, fp, #40	; 0x28
   24648:	mov	r2, #8
   2464c:	mov	r0, r3
   24650:	bl	120f8 <memcpy@plt>
   24654:	mov	r3, #1
   24658:	mov	r0, r3
   2465c:	sub	sp, fp, #8
   24660:	ldr	r4, [sp]
   24664:	ldr	fp, [sp, #4]
   24668:	add	sp, sp, #8
   2466c:	pop	{pc}		; (ldr pc, [sp], #4)
   24670:	str	fp, [sp, #-8]!
   24674:	str	lr, [sp, #4]
   24678:	add	fp, sp, #4
   2467c:	sub	sp, sp, #24
   24680:	str	r0, [fp, #-16]
   24684:	str	r1, [fp, #-20]	; 0xffffffec
   24688:	str	r2, [fp, #-24]	; 0xffffffe8
   2468c:	ldr	r0, [fp, #-16]
   24690:	bl	1b328 <__assert_fail@plt+0x8c3c>
   24694:	str	r0, [fp, #-8]
   24698:	ldr	r3, [fp, #-8]
   2469c:	mov	r2, #1
   246a0:	strb	r2, [r3, #17]
   246a4:	ldr	r3, [fp, #-8]
   246a8:	ldrb	r2, [r3, #17]
   246ac:	ldr	r3, [fp, #-8]
   246b0:	strb	r2, [r3, #16]
   246b4:	ldr	r3, [fp, #-8]
   246b8:	mov	r2, #0
   246bc:	strb	r2, [r3, #19]
   246c0:	ldr	r3, [fp, #-8]
   246c4:	ldrb	r2, [r3, #19]
   246c8:	ldr	r3, [fp, #-8]
   246cc:	strb	r2, [r3, #18]
   246d0:	ldr	r3, [fp, #-8]
   246d4:	add	r3, r3, #40	; 0x28
   246d8:	mov	r0, r3
   246dc:	bl	275d4 <__assert_fail@plt+0x14ee8>
   246e0:	mov	r3, #1
   246e4:	mov	r0, r3
   246e8:	sub	sp, fp, #4
   246ec:	ldr	fp, [sp]
   246f0:	add	sp, sp, #4
   246f4:	pop	{pc}		; (ldr pc, [sp], #4)
   246f8:	str	fp, [sp, #-8]!
   246fc:	str	lr, [sp, #4]
   24700:	add	fp, sp, #4
   24704:	sub	sp, sp, #16
   24708:	str	r0, [fp, #-8]
   2470c:	str	r1, [fp, #-12]
   24710:	str	r2, [fp, #-16]
   24714:	mov	r1, #0
   24718:	ldr	r0, [fp, #-8]
   2471c:	bl	22544 <__assert_fail@plt+0xfe58>
   24720:	mov	r3, r0
   24724:	mov	r0, r3
   24728:	sub	sp, fp, #4
   2472c:	ldr	fp, [sp]
   24730:	add	sp, sp, #4
   24734:	pop	{pc}		; (ldr pc, [sp], #4)
   24738:	str	fp, [sp, #-8]!
   2473c:	str	lr, [sp, #4]
   24740:	add	fp, sp, #4
   24744:	sub	sp, sp, #48	; 0x30
   24748:	str	r0, [fp, #-40]	; 0xffffffd8
   2474c:	str	r1, [fp, #-44]	; 0xffffffd4
   24750:	str	r2, [fp, #-48]	; 0xffffffd0
   24754:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24758:	ldr	r3, [r3]
   2475c:	str	r3, [fp, #-8]
   24760:	sub	r3, fp, #12
   24764:	mov	r2, r3
   24768:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2476c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24770:	bl	21944 <__assert_fail@plt+0xf258>
   24774:	mov	r3, r0
   24778:	cmp	r3, #0
   2477c:	beq	247c8 <__assert_fail@plt+0x120dc>
   24780:	sub	r3, fp, #32
   24784:	mov	r0, r3
   24788:	bl	275d4 <__assert_fail@plt+0x14ee8>
   2478c:	ldr	r2, [fp, #-12]
   24790:	sub	r3, fp, #32
   24794:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24798:	mov	r0, r3
   2479c:	bl	1e420 <__assert_fail@plt+0xbd34>
   247a0:	mov	r3, r0
   247a4:	cmp	r3, #0
   247a8:	beq	247b4 <__assert_fail@plt+0x120c8>
   247ac:	mov	r3, #1
   247b0:	b	247cc <__assert_fail@plt+0x120e0>
   247b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   247b8:	ldr	r2, [fp, #-8]
   247bc:	str	r2, [r3]
   247c0:	mov	r3, #0
   247c4:	b	247cc <__assert_fail@plt+0x120e0>
   247c8:	mov	r3, #0
   247cc:	mov	r0, r3
   247d0:	sub	sp, fp, #4
   247d4:	ldr	fp, [sp]
   247d8:	add	sp, sp, #4
   247dc:	pop	{pc}		; (ldr pc, [sp], #4)
   247e0:	str	fp, [sp, #-8]!
   247e4:	str	lr, [sp, #4]
   247e8:	add	fp, sp, #4
   247ec:	sub	sp, sp, #48	; 0x30
   247f0:	str	r0, [fp, #-40]	; 0xffffffd8
   247f4:	str	r1, [fp, #-44]	; 0xffffffd4
   247f8:	str	r2, [fp, #-48]	; 0xffffffd0
   247fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24800:	ldr	r3, [r3]
   24804:	str	r3, [fp, #-8]
   24808:	sub	r3, fp, #12
   2480c:	mov	r2, r3
   24810:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24814:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24818:	bl	219e4 <__assert_fail@plt+0xf2f8>
   2481c:	mov	r3, r0
   24820:	cmp	r3, #0
   24824:	beq	24890 <__assert_fail@plt+0x121a4>
   24828:	sub	r3, fp, #16
   2482c:	mov	r2, r3
   24830:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24834:	ldr	r0, [fp, #-44]	; 0xffffffd4
   24838:	bl	21944 <__assert_fail@plt+0xf258>
   2483c:	mov	r3, r0
   24840:	cmp	r3, #0
   24844:	beq	24890 <__assert_fail@plt+0x121a4>
   24848:	ldr	r3, [fp, #-12]
   2484c:	sub	r2, fp, #36	; 0x24
   24850:	mov	r1, r2
   24854:	mov	r0, r3
   24858:	bl	27474 <__assert_fail@plt+0x14d88>
   2485c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24860:	ldr	r3, [r3]
   24864:	str	r3, [fp, #-8]
   24868:	ldr	r2, [fp, #-16]
   2486c:	sub	r3, fp, #36	; 0x24
   24870:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24874:	mov	r0, r3
   24878:	bl	1e420 <__assert_fail@plt+0xbd34>
   2487c:	mov	r3, r0
   24880:	cmp	r3, #0
   24884:	beq	24890 <__assert_fail@plt+0x121a4>
   24888:	mov	r3, #1
   2488c:	b	248a0 <__assert_fail@plt+0x121b4>
   24890:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24894:	ldr	r2, [fp, #-8]
   24898:	str	r2, [r3]
   2489c:	mov	r3, #0
   248a0:	mov	r0, r3
   248a4:	sub	sp, fp, #4
   248a8:	ldr	fp, [sp]
   248ac:	add	sp, sp, #4
   248b0:	pop	{pc}		; (ldr pc, [sp], #4)
   248b4:	str	fp, [sp, #-8]!
   248b8:	str	lr, [sp, #4]
   248bc:	add	fp, sp, #4
   248c0:	sub	sp, sp, #24
   248c4:	str	r0, [fp, #-16]
   248c8:	str	r1, [fp, #-20]	; 0xffffffec
   248cc:	str	r2, [fp, #-24]	; 0xffffffe8
   248d0:	ldr	r0, [fp, #-16]
   248d4:	bl	1b328 <__assert_fail@plt+0x8c3c>
   248d8:	str	r0, [fp, #-8]
   248dc:	movw	r3, #53324	; 0xd04c
   248e0:	movt	r3, #7
   248e4:	ldrb	r3, [r3]
   248e8:	eor	r3, r3, #1
   248ec:	uxtb	r3, r3
   248f0:	cmp	r3, #0
   248f4:	beq	24914 <__assert_fail@plt+0x12228>
   248f8:	ldr	r3, [fp, #-8]
   248fc:	mov	r2, #0
   24900:	strb	r2, [r3, #19]
   24904:	ldr	r3, [fp, #-8]
   24908:	ldrb	r2, [r3, #19]
   2490c:	ldr	r3, [fp, #-8]
   24910:	strb	r2, [r3, #18]
   24914:	ldr	r3, [fp, #-8]
   24918:	mov	r2, #1
   2491c:	strb	r2, [r3, #16]
   24920:	ldr	r3, [fp, #-8]
   24924:	mov	r2, #0
   24928:	strb	r2, [r3, #17]
   2492c:	mov	r3, #1
   24930:	mov	r0, r3
   24934:	sub	sp, fp, #4
   24938:	ldr	fp, [sp]
   2493c:	add	sp, sp, #4
   24940:	pop	{pc}		; (ldr pc, [sp], #4)
   24944:	str	fp, [sp, #-8]!
   24948:	str	lr, [sp, #4]
   2494c:	add	fp, sp, #4
   24950:	sub	sp, sp, #24
   24954:	str	r0, [fp, #-16]
   24958:	str	r1, [fp, #-20]	; 0xffffffec
   2495c:	str	r2, [fp, #-24]	; 0xffffffe8
   24960:	ldr	r0, [fp, #-16]
   24964:	bl	1b328 <__assert_fail@plt+0x8c3c>
   24968:	str	r0, [fp, #-8]
   2496c:	ldr	r3, [fp, #-8]
   24970:	mov	r2, #0
   24974:	strb	r2, [r3, #19]
   24978:	ldr	r3, [fp, #-8]
   2497c:	ldrb	r2, [r3, #19]
   24980:	ldr	r3, [fp, #-8]
   24984:	strb	r2, [r3, #18]
   24988:	ldr	r3, [fp, #-8]
   2498c:	mov	r2, #1
   24990:	strb	r2, [r3, #16]
   24994:	ldr	r3, [fp, #-8]
   24998:	mov	r2, #0
   2499c:	strb	r2, [r3, #17]
   249a0:	ldr	r3, [fp, #-8]
   249a4:	mov	r2, #1065353216	; 0x3f800000
   249a8:	str	r2, [r3, #28]
   249ac:	mov	r3, #1
   249b0:	mov	r0, r3
   249b4:	sub	sp, fp, #4
   249b8:	ldr	fp, [sp]
   249bc:	add	sp, sp, #4
   249c0:	pop	{pc}		; (ldr pc, [sp], #4)
   249c4:	str	fp, [sp, #-8]!
   249c8:	str	lr, [sp, #4]
   249cc:	add	fp, sp, #4
   249d0:	sub	sp, sp, #24
   249d4:	str	r0, [fp, #-16]
   249d8:	str	r1, [fp, #-20]	; 0xffffffec
   249dc:	str	r2, [fp, #-24]	; 0xffffffe8
   249e0:	sub	r3, fp, #8
   249e4:	mov	r2, r3
   249e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   249ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   249f0:	bl	219e4 <__assert_fail@plt+0xf2f8>
   249f4:	mov	r3, r0
   249f8:	cmp	r3, #0
   249fc:	beq	24a34 <__assert_fail@plt+0x12348>
   24a00:	ldr	r3, [fp, #-8]
   24a04:	mov	r0, r3
   24a08:	bl	2aab8 <__assert_fail@plt+0x183cc>
   24a0c:	mov	r2, r0
   24a10:	movw	r3, #53324	; 0xd04c
   24a14:	movt	r3, #7
   24a18:	str	r2, [r3, #60]	; 0x3c
   24a1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24a20:	ldr	r1, [fp, #-20]	; 0xffffffec
   24a24:	ldr	r0, [fp, #-16]
   24a28:	bl	25444 <__assert_fail@plt+0x12d58>
   24a2c:	mov	r3, r0
   24a30:	b	24a38 <__assert_fail@plt+0x1234c>
   24a34:	mov	r3, #0
   24a38:	mov	r0, r3
   24a3c:	sub	sp, fp, #4
   24a40:	ldr	fp, [sp]
   24a44:	add	sp, sp, #4
   24a48:	pop	{pc}		; (ldr pc, [sp], #4)
   24a4c:	str	fp, [sp, #-8]!
   24a50:	str	lr, [sp, #4]
   24a54:	add	fp, sp, #4
   24a58:	sub	sp, sp, #16
   24a5c:	str	r0, [fp, #-8]
   24a60:	str	r1, [fp, #-12]
   24a64:	str	r2, [fp, #-16]
   24a68:	movw	r3, #53324	; 0xd04c
   24a6c:	movt	r3, #7
   24a70:	ldr	r3, [r3, #60]	; 0x3c
   24a74:	ldr	r2, [fp, #-8]
   24a78:	ldr	r1, [fp, #-16]
   24a7c:	ldr	r0, [fp, #-12]
   24a80:	bl	24a9c <__assert_fail@plt+0x123b0>
   24a84:	mov	r3, r0
   24a88:	mov	r0, r3
   24a8c:	sub	sp, fp, #4
   24a90:	ldr	fp, [sp]
   24a94:	add	sp, sp, #4
   24a98:	pop	{pc}		; (ldr pc, [sp], #4)
   24a9c:	str	r4, [sp, #-12]!
   24aa0:	str	fp, [sp, #4]
   24aa4:	str	lr, [sp, #8]
   24aa8:	add	fp, sp, #8
   24aac:	sub	sp, sp, #44	; 0x2c
   24ab0:	str	r0, [fp, #-32]	; 0xffffffe0
   24ab4:	str	r1, [fp, #-36]	; 0xffffffdc
   24ab8:	str	r2, [fp, #-40]	; 0xffffffd8
   24abc:	str	r3, [fp, #-44]	; 0xffffffd4
   24ac0:	sub	r3, fp, #28
   24ac4:	mov	r2, r3
   24ac8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24acc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ad0:	bl	219e4 <__assert_fail@plt+0xf2f8>
   24ad4:	mov	r3, r0
   24ad8:	cmp	r3, #0
   24adc:	beq	24c18 <__assert_fail@plt+0x1252c>
   24ae0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24ae4:	mov	r2, r3
   24ae8:	movw	r1, #24328	; 0x5f08
   24aec:	movt	r1, #1
   24af0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   24af4:	bl	1b22c <__assert_fail@plt+0x8b40>
   24af8:	str	r0, [fp, #-16]
   24afc:	ldr	r3, [fp, #-16]
   24b00:	mov	r2, #0
   24b04:	strb	r2, [r3, #19]
   24b08:	ldr	r3, [fp, #-16]
   24b0c:	ldrb	r2, [r3, #19]
   24b10:	ldr	r3, [fp, #-16]
   24b14:	strb	r2, [r3, #18]
   24b18:	mov	r0, #32
   24b1c:	bl	3d8ec <__assert_fail@plt+0x2b200>
   24b20:	mov	r3, r0
   24b24:	str	r3, [fp, #-20]	; 0xffffffec
   24b28:	ldr	r3, [fp, #-16]
   24b2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24b30:	str	r2, [r3, #40]	; 0x28
   24b34:	ldr	r3, [fp, #-20]	; 0xffffffec
   24b38:	mov	r2, #100	; 0x64
   24b3c:	str	r2, [r3, #4]
   24b40:	ldr	r3, [fp, #-20]	; 0xffffffec
   24b44:	ldr	r3, [r3, #4]
   24b48:	mov	r0, r3
   24b4c:	bl	3d8ec <__assert_fail@plt+0x2b200>
   24b50:	mov	r3, r0
   24b54:	mov	r2, r3
   24b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   24b5c:	str	r2, [r3]
   24b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   24b64:	mov	r2, #0
   24b68:	str	r2, [r3, #16]
   24b6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24b70:	mov	r0, r3
   24b74:	bl	49e98 <__assert_fail@plt+0x377ac>
   24b78:	ldr	r2, [fp, #-44]	; 0xffffffd4
   24b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24b80:	str	r2, [r3, #12]
   24b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   24b88:	mov	r2, #0
   24b8c:	str	r2, [r3, #20]
   24b90:	ldr	r4, [fp, #-28]	; 0xffffffe4
   24b94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24b98:	mov	r0, r3
   24b9c:	bl	123bc <strlen@plt>
   24ba0:	mov	r3, r0
   24ba4:	ldr	r2, [fp, #-20]	; 0xffffffec
   24ba8:	mov	r1, r3
   24bac:	mov	r0, r4
   24bb0:	bl	49dcc <__assert_fail@plt+0x376e0>
   24bb4:	str	r0, [fp, #-24]	; 0xffffffe8
   24bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24bbc:	cmp	r3, #0
   24bc0:	beq	24bf4 <__assert_fail@plt+0x12508>
   24bc4:	movw	r0, #34168	; 0x8578
   24bc8:	movt	r0, #6
   24bcc:	bl	12398 <gettext@plt>
   24bd0:	mov	r1, r0
   24bd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   24bd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24bdc:	str	r3, [sp]
   24be0:	mov	r3, r2
   24be4:	mov	r2, r1
   24be8:	mov	r1, #0
   24bec:	mov	r0, #1
   24bf0:	bl	122b4 <error@plt>
   24bf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24bf8:	mov	r1, #1
   24bfc:	mov	r0, r3
   24c00:	bl	22b24 <__assert_fail@plt+0x10438>
   24c04:	vmov.f32	s15, s0
   24c08:	ldr	r3, [fp, #-16]
   24c0c:	vstr	s15, [r3, #28]
   24c10:	mov	r3, #1
   24c14:	b	24c1c <__assert_fail@plt+0x12530>
   24c18:	mov	r3, #0
   24c1c:	mov	r0, r3
   24c20:	sub	sp, fp, #8
   24c24:	ldr	r4, [sp]
   24c28:	ldr	fp, [sp, #4]
   24c2c:	add	sp, sp, #8
   24c30:	pop	{pc}		; (ldr pc, [sp], #4)
   24c34:	str	fp, [sp, #-8]!
   24c38:	str	lr, [sp, #4]
   24c3c:	add	fp, sp, #4
   24c40:	sub	sp, sp, #64	; 0x40
   24c44:	str	r0, [fp, #-48]	; 0xffffffd0
   24c48:	str	r1, [fp, #-52]	; 0xffffffcc
   24c4c:	str	r2, [fp, #-56]	; 0xffffffc8
   24c50:	mov	r3, #512	; 0x200
   24c54:	str	r3, [fp, #-12]
   24c58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24c5c:	cmp	r3, #0
   24c60:	beq	24c84 <__assert_fail@plt+0x12598>
   24c64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24c68:	ldr	r3, [r3]
   24c6c:	lsl	r3, r3, #2
   24c70:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24c74:	add	r3, r2, r3
   24c78:	ldr	r3, [r3]
   24c7c:	cmp	r3, #0
   24c80:	bne	24c8c <__assert_fail@plt+0x125a0>
   24c84:	mov	r3, #0
   24c88:	b	250f0 <__assert_fail@plt+0x12a04>
   24c8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24c90:	ldr	r3, [r3]
   24c94:	lsl	r3, r3, #2
   24c98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24c9c:	add	r3, r2, r3
   24ca0:	ldr	r3, [r3]
   24ca4:	str	r3, [fp, #-16]
   24ca8:	ldr	r0, [fp, #-16]
   24cac:	bl	123bc <strlen@plt>
   24cb0:	mov	r3, r0
   24cb4:	str	r3, [fp, #-20]	; 0xffffffec
   24cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   24cbc:	cmp	r3, #0
   24cc0:	bne	24ce4 <__assert_fail@plt+0x125f8>
   24cc4:	movw	r0, #34216	; 0x85a8
   24cc8:	movt	r0, #6
   24ccc:	bl	12398 <gettext@plt>
   24cd0:	mov	r3, r0
   24cd4:	mov	r2, r3
   24cd8:	mov	r1, #0
   24cdc:	mov	r0, #1
   24ce0:	bl	122b4 <error@plt>
   24ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   24ce8:	sub	r3, r3, #1
   24cec:	ldr	r2, [fp, #-16]
   24cf0:	add	r3, r2, r3
   24cf4:	ldrb	r3, [r3]
   24cf8:	strb	r3, [fp, #-5]
   24cfc:	ldrb	r3, [fp, #-5]
   24d00:	sub	r3, r3, #48	; 0x30
   24d04:	cmp	r3, #71	; 0x47
   24d08:	ldrls	pc, [pc, r3, lsl #2]
   24d0c:	b	24f14 <__assert_fail@plt+0x12828>
   24d10:	andeq	r4, r2, r8, lsl #30
   24d14:	andeq	r4, r2, r8, lsl #30
   24d18:	andeq	r4, r2, r8, lsl #30
   24d1c:	andeq	r4, r2, r8, lsl #30
   24d20:	andeq	r4, r2, r8, lsl #30
   24d24:	andeq	r4, r2, r8, lsl #30
   24d28:	andeq	r4, r2, r8, lsl #30
   24d2c:	andeq	r4, r2, r8, lsl #30
   24d30:	andeq	r4, r2, r8, lsl #30
   24d34:	andeq	r4, r2, r8, lsl #30
   24d38:	andeq	r4, r2, r4, lsl pc
   24d3c:	andeq	r4, r2, r4, lsl pc
   24d40:	andeq	r4, r2, r4, lsl pc
   24d44:	andeq	r4, r2, r4, lsl pc
   24d48:	andeq	r4, r2, r4, lsl pc
   24d4c:	andeq	r4, r2, r4, lsl pc
   24d50:	andeq	r4, r2, r4, lsl pc
   24d54:	andeq	r4, r2, r4, lsl pc
   24d58:	andeq	r4, r2, r4, lsl pc
   24d5c:	andeq	r4, r2, r4, lsl pc
   24d60:	andeq	r4, r2, r4, lsl pc
   24d64:	andeq	r4, r2, r4, lsl pc
   24d68:	andeq	r4, r2, r4, lsl pc
   24d6c:	andeq	r4, r2, r0, asr #29
   24d70:	andeq	r4, r2, r4, lsl pc
   24d74:	andeq	r4, r2, r4, lsl pc
   24d78:	andeq	r4, r2, r4, lsl pc
   24d7c:	andeq	r4, r2, r4, lsl pc
   24d80:	andeq	r4, r2, r4, lsl pc
   24d84:	muleq	r2, ip, lr
   24d88:	andeq	r4, r2, r4, lsl pc
   24d8c:	andeq	r4, r2, r4, lsl pc
   24d90:	andeq	r4, r2, r4, lsl pc
   24d94:	andeq	r4, r2, r4, lsl pc
   24d98:	andeq	r4, r2, r4, lsl pc
   24d9c:	andeq	r4, r2, r4, lsl pc
   24da0:	andeq	r4, r2, r4, lsl pc
   24da4:	andeq	r4, r2, r4, lsl pc
   24da8:	andeq	r4, r2, r4, lsl pc
   24dac:	andeq	r4, r2, r4, lsl pc
   24db0:	andeq	r4, r2, r4, lsl pc
   24db4:	andeq	r4, r2, r4, lsl pc
   24db8:	andeq	r4, r2, r4, lsl pc
   24dbc:	andeq	r4, r2, r4, lsl pc
   24dc0:	andeq	r4, r2, r4, lsl pc
   24dc4:	andeq	r4, r2, r4, lsl pc
   24dc8:	andeq	r4, r2, r4, lsl pc
   24dcc:	andeq	r4, r2, r4, lsl pc
   24dd0:	andeq	r4, r2, r4, lsl pc
   24dd4:	andeq	r4, r2, r4, lsl pc
   24dd8:	andeq	r4, r2, r0, lsr lr
   24ddc:	andeq	r4, r2, r4, asr lr
   24de0:	andeq	r4, r2, r4, lsl pc
   24de4:	andeq	r4, r2, r4, lsl pc
   24de8:	andeq	r4, r2, r4, lsl pc
   24dec:	andeq	r4, r2, r4, lsl pc
   24df0:	andeq	r4, r2, r4, lsl pc
   24df4:	andeq	r4, r2, r4, lsl pc
   24df8:	andeq	r4, r2, r4, lsl pc
   24dfc:	andeq	r4, r2, r8, ror lr
   24e00:	andeq	r4, r2, r4, lsl pc
   24e04:	andeq	r4, r2, r4, lsl pc
   24e08:	andeq	r4, r2, r4, lsl pc
   24e0c:	andeq	r4, r2, r4, lsl pc
   24e10:	andeq	r4, r2, r4, lsl pc
   24e14:	andeq	r4, r2, r4, lsl pc
   24e18:	andeq	r4, r2, r4, lsl pc
   24e1c:	andeq	r4, r2, r4, lsl pc
   24e20:	andeq	r4, r2, r4, lsl pc
   24e24:	andeq	r4, r2, r4, lsl pc
   24e28:	andeq	r4, r2, r4, lsl pc
   24e2c:	andeq	r4, r2, r4, ror #29
   24e30:	mov	r3, #512	; 0x200
   24e34:	str	r3, [fp, #-12]
   24e38:	ldr	r3, [fp, #-20]	; 0xffffffec
   24e3c:	sub	r3, r3, #1
   24e40:	ldr	r2, [fp, #-16]
   24e44:	add	r3, r2, r3
   24e48:	mov	r2, #0
   24e4c:	strb	r2, [r3]
   24e50:	b	24f5c <__assert_fail@plt+0x12870>
   24e54:	mov	r3, #1
   24e58:	str	r3, [fp, #-12]
   24e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24e60:	sub	r3, r3, #1
   24e64:	ldr	r2, [fp, #-16]
   24e68:	add	r3, r2, r3
   24e6c:	mov	r2, #0
   24e70:	strb	r2, [r3]
   24e74:	b	24f5c <__assert_fail@plt+0x12870>
   24e78:	mov	r3, #1024	; 0x400
   24e7c:	str	r3, [fp, #-12]
   24e80:	ldr	r3, [fp, #-20]	; 0xffffffec
   24e84:	sub	r3, r3, #1
   24e88:	ldr	r2, [fp, #-16]
   24e8c:	add	r3, r2, r3
   24e90:	mov	r2, #0
   24e94:	strb	r2, [r3]
   24e98:	b	24f5c <__assert_fail@plt+0x12870>
   24e9c:	mov	r3, #1048576	; 0x100000
   24ea0:	str	r3, [fp, #-12]
   24ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   24ea8:	sub	r3, r3, #1
   24eac:	ldr	r2, [fp, #-16]
   24eb0:	add	r3, r2, r3
   24eb4:	mov	r2, #0
   24eb8:	strb	r2, [r3]
   24ebc:	b	24f5c <__assert_fail@plt+0x12870>
   24ec0:	mov	r3, #1073741824	; 0x40000000
   24ec4:	str	r3, [fp, #-12]
   24ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   24ecc:	sub	r3, r3, #1
   24ed0:	ldr	r2, [fp, #-16]
   24ed4:	add	r3, r2, r3
   24ed8:	mov	r2, #0
   24edc:	strb	r2, [r3]
   24ee0:	b	24f5c <__assert_fail@plt+0x12870>
   24ee4:	mov	r3, #2
   24ee8:	str	r3, [fp, #-12]
   24eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   24ef0:	sub	r3, r3, #1
   24ef4:	ldr	r2, [fp, #-16]
   24ef8:	add	r3, r2, r3
   24efc:	mov	r2, #0
   24f00:	strb	r2, [r3]
   24f04:	b	24f5c <__assert_fail@plt+0x12870>
   24f08:	mov	r3, #0
   24f0c:	strb	r3, [fp, #-5]
   24f10:	b	24f5c <__assert_fail@plt+0x12870>
   24f14:	movw	r0, #34248	; 0x85c8
   24f18:	movt	r0, #6
   24f1c:	bl	12398 <gettext@plt>
   24f20:	mov	r1, r0
   24f24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   24f28:	ldr	r3, [r3]
   24f2c:	lsl	r3, r3, #2
   24f30:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24f34:	add	r3, r2, r3
   24f38:	ldr	r2, [r3]
   24f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   24f40:	sub	r3, r3, #1
   24f44:	add	r3, r2, r3
   24f48:	ldrb	r3, [r3]
   24f4c:	mov	r2, r1
   24f50:	mov	r1, #0
   24f54:	mov	r0, #1
   24f58:	bl	122b4 <error@plt>
   24f5c:	sub	r2, fp, #40	; 0x28
   24f60:	sub	r3, fp, #36	; 0x24
   24f64:	mov	r1, r3
   24f68:	ldr	r0, [fp, #-16]
   24f6c:	bl	27208 <__assert_fail@plt+0x14b1c>
   24f70:	mov	r3, r0
   24f74:	eor	r3, r3, #1
   24f78:	uxtb	r3, r3
   24f7c:	cmp	r3, #0
   24f80:	beq	24fbc <__assert_fail@plt+0x128d0>
   24f84:	ldrb	r3, [fp, #-5]
   24f88:	strb	r3, [fp, #-44]	; 0xffffffd4
   24f8c:	mov	r3, #0
   24f90:	strb	r3, [fp, #-43]	; 0xffffffd5
   24f94:	movw	r0, #34272	; 0x85e0
   24f98:	movt	r0, #6
   24f9c:	bl	12398 <gettext@plt>
   24fa0:	mov	r2, r0
   24fa4:	sub	r3, fp, #44	; 0x2c
   24fa8:	str	r3, [sp]
   24fac:	ldr	r3, [fp, #-16]
   24fb0:	mov	r1, #0
   24fb4:	mov	r0, #1
   24fb8:	bl	122b4 <error@plt>
   24fbc:	ldr	r1, [fp, #-16]
   24fc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24fc4:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   24fc8:	str	r0, [fp, #-24]	; 0xffffffe8
   24fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24fd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24fd4:	str	r2, [r3, #40]	; 0x28
   24fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24fdc:	ldr	r2, [fp, #-12]
   24fe0:	str	r2, [r3, #44]	; 0x2c
   24fe4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   24fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24fec:	strd	r2, [r1, #48]	; 0x30
   24ff0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24ff4:	mov	r2, #1
   24ff8:	strb	r2, [r3, #18]
   24ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25000:	mov	r2, #0
   25004:	strb	r2, [r3, #19]
   25008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2500c:	cmp	r3, #0
   25010:	bne	25068 <__assert_fail@plt+0x1297c>
   25014:	ldr	r3, [fp, #-12]
   25018:	mov	r0, r3
   2501c:	asr	r1, r0, #31
   25020:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   25024:	mul	lr, r2, r1
   25028:	mul	ip, r0, r3
   2502c:	add	ip, lr, ip
   25030:	umull	r2, r3, r0, r2
   25034:	add	r1, ip, r3
   25038:	mov	r3, r1
   2503c:	cmp	r3, #0
   25040:	cmpeq	r2, #20480	; 0x5000
   25044:	bls	25054 <__assert_fail@plt+0x12968>
   25048:	movw	r2, #52429	; 0xcccd
   2504c:	movt	r2, #15820	; 0x3dcc
   25050:	b	2505c <__assert_fail@plt+0x12970>
   25054:	movw	r2, #26214	; 0x6666
   25058:	movt	r2, #16230	; 0x3f66
   2505c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25060:	str	r2, [r3, #28]
   25064:	b	250d8 <__assert_fail@plt+0x129ec>
   25068:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2506c:	cmp	r3, #1
   25070:	bne	250c8 <__assert_fail@plt+0x129dc>
   25074:	ldr	r3, [fp, #-12]
   25078:	mov	r0, r3
   2507c:	asr	r1, r0, #31
   25080:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   25084:	mul	lr, r2, r1
   25088:	mul	ip, r0, r3
   2508c:	add	ip, lr, ip
   25090:	umull	r2, r3, r0, r2
   25094:	add	r1, ip, r3
   25098:	mov	r3, r1
   2509c:	cmp	r3, #0
   250a0:	cmpeq	r2, #20480	; 0x5000
   250a4:	bls	250b4 <__assert_fail@plt+0x129c8>
   250a8:	movw	r2, #26214	; 0x6666
   250ac:	movt	r2, #16230	; 0x3f66
   250b0:	b	250bc <__assert_fail@plt+0x129d0>
   250b4:	movw	r2, #52429	; 0xcccd
   250b8:	movt	r2, #15820	; 0x3dcc
   250bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   250c0:	str	r2, [r3, #28]
   250c4:	b	250d8 <__assert_fail@plt+0x129ec>
   250c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   250cc:	movw	r2, #55050	; 0xd70a
   250d0:	movt	r2, #15395	; 0x3c23
   250d4:	str	r2, [r3, #28]
   250d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   250dc:	ldr	r3, [r3]
   250e0:	add	r2, r3, #1
   250e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   250e8:	str	r2, [r3]
   250ec:	mov	r3, #1
   250f0:	mov	r0, r3
   250f4:	sub	sp, fp, #4
   250f8:	ldr	fp, [sp]
   250fc:	add	sp, sp, #4
   25100:	pop	{pc}		; (ldr pc, [sp], #4)
   25104:	str	fp, [sp, #-8]!
   25108:	str	lr, [sp, #4]
   2510c:	add	fp, sp, #4
   25110:	sub	sp, sp, #248	; 0xf8
   25114:	str	r0, [fp, #-240]	; 0xffffff10
   25118:	str	r1, [fp, #-244]	; 0xffffff0c
   2511c:	str	r2, [fp, #-248]	; 0xffffff08
   25120:	sub	r3, fp, #124	; 0x7c
   25124:	mov	r0, r3
   25128:	bl	1b728 <__assert_fail@plt+0x903c>
   2512c:	sub	r3, fp, #232	; 0xe8
   25130:	sub	r2, fp, #124	; 0x7c
   25134:	ldr	r1, [fp, #-248]	; 0xffffff08
   25138:	ldr	r0, [fp, #-244]	; 0xffffff0c
   2513c:	bl	21a40 <__assert_fail@plt+0xf354>
   25140:	mov	r3, r0
   25144:	eor	r3, r3, #1
   25148:	uxtb	r3, r3
   2514c:	cmp	r3, #0
   25150:	beq	2515c <__assert_fail@plt+0x12a70>
   25154:	mov	r3, #0
   25158:	b	253c8 <__assert_fail@plt+0x12cdc>
   2515c:	sub	r3, fp, #228	; 0xe4
   25160:	mov	r0, r3
   25164:	bl	1b728 <__assert_fail@plt+0x903c>
   25168:	mvn	r3, #2
   2516c:	str	r3, [fp, #-8]
   25170:	mov	r3, #0
   25174:	str	r3, [fp, #-12]
   25178:	movw	r3, #53324	; 0xd04c
   2517c:	movt	r3, #7
   25180:	ldr	r3, [r3, #48]	; 0x30
   25184:	cmp	r3, #0
   25188:	bne	251e0 <__assert_fail@plt+0x12af4>
   2518c:	movw	r3, #53324	; 0xd04c
   25190:	movt	r3, #7
   25194:	ldrb	r3, [r3, #56]	; 0x38
   25198:	cmp	r3, #0
   2519c:	beq	251b8 <__assert_fail@plt+0x12acc>
   251a0:	ldr	r3, [fp, #-12]
   251a4:	orr	r3, r3, #32768	; 0x8000
   251a8:	str	r3, [fp, #-12]
   251ac:	mvn	r3, #0
   251b0:	str	r3, [fp, #-8]
   251b4:	b	251e8 <__assert_fail@plt+0x12afc>
   251b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   251bc:	and	r3, r3, #61440	; 0xf000
   251c0:	cmp	r3, #40960	; 0xa000
   251c4:	bne	251d4 <__assert_fail@plt+0x12ae8>
   251c8:	mvn	r3, #1
   251cc:	str	r3, [fp, #-8]
   251d0:	b	251e8 <__assert_fail@plt+0x12afc>
   251d4:	mvn	r3, #0
   251d8:	str	r3, [fp, #-8]
   251dc:	b	251e8 <__assert_fail@plt+0x12afc>
   251e0:	mvn	r3, #0
   251e4:	str	r3, [fp, #-8]
   251e8:	ldr	r3, [fp, #-8]
   251ec:	cmn	r3, #3
   251f0:	bne	25214 <__assert_fail@plt+0x12b28>
   251f4:	movw	r3, #36200	; 0x8d68
   251f8:	movt	r3, #6
   251fc:	movw	r2, #2239	; 0x8bf
   25200:	movw	r1, #32364	; 0x7e6c
   25204:	movt	r1, #6
   25208:	movw	r0, #34308	; 0x8604
   2520c:	movt	r0, #6
   25210:	bl	126ec <__assert_fail@plt>
   25214:	ldr	r3, [fp, #-8]
   25218:	cmn	r3, #1
   2521c:	bne	25364 <__assert_fail@plt+0x12c78>
   25220:	ldr	r3, [fp, #-232]	; 0xffffff18
   25224:	ldr	r1, [fp, #-12]
   25228:	mov	r0, r3
   2522c:	bl	2943c <__assert_fail@plt+0x16d50>
   25230:	str	r0, [fp, #-8]
   25234:	ldr	r3, [fp, #-8]
   25238:	cmp	r3, #0
   2523c:	blt	25364 <__assert_fail@plt+0x12c78>
   25240:	sub	r3, fp, #228	; 0xe4
   25244:	mov	r1, r3
   25248:	ldr	r0, [fp, #-8]
   2524c:	bl	64ca4 <__assert_fail@plt+0x525b8>
   25250:	mov	r3, r0
   25254:	cmp	r3, #0
   25258:	beq	25278 <__assert_fail@plt+0x12b8c>
   2525c:	bl	12404 <__errno_location@plt>
   25260:	mov	r3, r0
   25264:	ldr	r3, [r3]
   25268:	ldr	r2, [fp, #-232]	; 0xffffff18
   2526c:	mov	r1, r2
   25270:	mov	r0, r3
   25274:	bl	1d528 <__assert_fail@plt+0xae3c>
   25278:	movw	r3, #53324	; 0xd04c
   2527c:	movt	r3, #7
   25280:	ldr	r3, [r3, #52]	; 0x34
   25284:	ldr	r2, [fp, #-232]	; 0xffffff18
   25288:	sub	r1, fp, #124	; 0x7c
   2528c:	mov	r0, r2
   25290:	blx	r3
   25294:	mov	r3, r0
   25298:	cmp	r3, #0
   2529c:	beq	252bc <__assert_fail@plt+0x12bd0>
   252a0:	bl	12404 <__errno_location@plt>
   252a4:	mov	r3, r0
   252a8:	ldr	r3, [r3]
   252ac:	ldr	r2, [fp, #-232]	; 0xffffff18
   252b0:	mov	r1, r2
   252b4:	mov	r0, r3
   252b8:	bl	1d528 <__assert_fail@plt+0xae3c>
   252bc:	movw	r3, #53324	; 0xd04c
   252c0:	movt	r3, #7
   252c4:	ldr	r3, [r3, #48]	; 0x30
   252c8:	cmp	r3, #0
   252cc:	bne	25350 <__assert_fail@plt+0x12c64>
   252d0:	movw	r3, #53324	; 0xd04c
   252d4:	movt	r3, #7
   252d8:	ldrb	r3, [r3, #56]	; 0x38
   252dc:	eor	r3, r3, #1
   252e0:	uxtb	r3, r3
   252e4:	cmp	r3, #0
   252e8:	beq	25350 <__assert_fail@plt+0x12c64>
   252ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   252f0:	and	r3, r3, #61440	; 0xf000
   252f4:	cmp	r3, #40960	; 0xa000
   252f8:	bne	25310 <__assert_fail@plt+0x12c24>
   252fc:	ldr	r0, [fp, #-8]
   25300:	bl	126a4 <close@plt>
   25304:	mvn	r3, #0
   25308:	str	r3, [fp, #-8]
   2530c:	b	25364 <__assert_fail@plt+0x12c78>
   25310:	ldrd	r0, [fp, #-124]	; 0xffffff84
   25314:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   25318:	cmp	r1, r3
   2531c:	cmpeq	r0, r2
   25320:	bne	25338 <__assert_fail@plt+0x12c4c>
   25324:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   25328:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   2532c:	cmp	r1, r3
   25330:	cmpeq	r0, r2
   25334:	beq	2534c <__assert_fail@plt+0x12c60>
   25338:	ldr	r0, [fp, #-8]
   2533c:	bl	126a4 <close@plt>
   25340:	mvn	r3, #0
   25344:	str	r3, [fp, #-8]
   25348:	b	25364 <__assert_fail@plt+0x12c78>
   2534c:	b	25364 <__assert_fail@plt+0x12c78>
   25350:	sub	r3, fp, #124	; 0x7c
   25354:	sub	r1, fp, #228	; 0xe4
   25358:	mov	r2, #104	; 0x68
   2535c:	mov	r0, r3
   25360:	bl	120f8 <memcpy@plt>
   25364:	ldr	r3, [fp, #-232]	; 0xffffff18
   25368:	mov	r1, r3
   2536c:	ldr	r0, [fp, #-240]	; 0xffffff10
   25370:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   25374:	str	r0, [fp, #-16]
   25378:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   2537c:	ldr	r1, [fp, #-16]
   25380:	strd	r2, [r1, #40]	; 0x28
   25384:	ldrd	r2, [fp, #-124]	; 0xffffff84
   25388:	ldr	r1, [fp, #-16]
   2538c:	strd	r2, [r1, #48]	; 0x30
   25390:	ldr	r3, [fp, #-16]
   25394:	ldr	r2, [fp, #-8]
   25398:	str	r2, [r3, #56]	; 0x38
   2539c:	ldr	r3, [fp, #-16]
   253a0:	mov	r2, #0
   253a4:	strb	r2, [r3, #19]
   253a8:	ldr	r3, [fp, #-16]
   253ac:	mov	r2, #1
   253b0:	strb	r2, [r3, #18]
   253b4:	ldr	r3, [fp, #-16]
   253b8:	movw	r2, #55050	; 0xd70a
   253bc:	movt	r2, #15395	; 0x3c23
   253c0:	str	r2, [r3, #28]
   253c4:	mov	r3, #1
   253c8:	mov	r0, r3
   253cc:	sub	sp, fp, #4
   253d0:	ldr	fp, [sp]
   253d4:	add	sp, sp, #4
   253d8:	pop	{pc}		; (ldr pc, [sp], #4)
   253dc:	str	fp, [sp, #-8]!
   253e0:	str	lr, [sp, #4]
   253e4:	add	fp, sp, #4
   253e8:	sub	sp, sp, #24
   253ec:	str	r0, [fp, #-16]
   253f0:	str	r1, [fp, #-20]	; 0xffffffec
   253f4:	str	r2, [fp, #-24]	; 0xffffffe8
   253f8:	ldr	r0, [fp, #-16]
   253fc:	bl	1b328 <__assert_fail@plt+0x8c3c>
   25400:	str	r0, [fp, #-8]
   25404:	ldr	r3, [fp, #-8]
   25408:	mov	r2, #0
   2540c:	strb	r2, [r3, #19]
   25410:	ldr	r3, [fp, #-8]
   25414:	ldrb	r2, [r3, #19]
   25418:	ldr	r3, [fp, #-8]
   2541c:	strb	r2, [r3, #18]
   25420:	ldr	r3, [fp, #-8]
   25424:	mov	r2, #1065353216	; 0x3f800000
   25428:	str	r2, [r3, #28]
   2542c:	mov	r3, #1
   25430:	mov	r0, r3
   25434:	sub	sp, fp, #4
   25438:	ldr	fp, [sp]
   2543c:	add	sp, sp, #4
   25440:	pop	{pc}		; (ldr pc, [sp], #4)
   25444:	str	fp, [sp, #-8]!
   25448:	str	lr, [sp, #4]
   2544c:	add	fp, sp, #4
   25450:	sub	sp, sp, #16
   25454:	str	r0, [fp, #-8]
   25458:	str	r1, [fp, #-12]
   2545c:	str	r2, [fp, #-16]
   25460:	bl	21250 <__assert_fail@plt+0xeb64>
   25464:	mov	r3, r0
   25468:	ldr	r2, [fp, #-16]
   2546c:	ldr	r1, [fp, #-12]
   25470:	mov	r0, r3
   25474:	bl	253dc <__assert_fail@plt+0x12cf0>
   25478:	mov	r3, r0
   2547c:	mov	r0, r3
   25480:	sub	sp, fp, #4
   25484:	ldr	fp, [sp]
   25488:	add	sp, sp, #4
   2548c:	pop	{pc}		; (ldr pc, [sp], #4)
   25490:	str	fp, [sp, #-8]!
   25494:	str	lr, [sp, #4]
   25498:	add	fp, sp, #4
   2549c:	sub	sp, sp, #24
   254a0:	str	r0, [fp, #-16]
   254a4:	str	r1, [fp, #-20]	; 0xffffffec
   254a8:	str	r2, [fp, #-24]	; 0xffffffe8
   254ac:	ldr	r0, [fp, #-16]
   254b0:	bl	1b328 <__assert_fail@plt+0x8c3c>
   254b4:	str	r0, [fp, #-8]
   254b8:	ldr	r3, [fp, #-8]
   254bc:	mov	r2, #0
   254c0:	strb	r2, [r3, #19]
   254c4:	ldr	r3, [fp, #-8]
   254c8:	ldrb	r2, [r3, #19]
   254cc:	ldr	r3, [fp, #-8]
   254d0:	strb	r2, [r3, #18]
   254d4:	ldr	r3, [fp, #-8]
   254d8:	mov	r2, #0
   254dc:	strb	r2, [r3, #17]
   254e0:	ldr	r3, [fp, #-8]
   254e4:	ldrb	r2, [r3, #17]
   254e8:	ldr	r3, [fp, #-8]
   254ec:	strb	r2, [r3, #16]
   254f0:	ldr	r3, [fp, #-8]
   254f4:	ldr	r2, [r3]
   254f8:	movw	r3, #23628	; 0x5c4c
   254fc:	movt	r3, #1
   25500:	cmp	r2, r3
   25504:	bne	2551c <__assert_fail@plt+0x12e30>
   25508:	ldr	r3, [fp, #-8]
   2550c:	movw	r2, #52429	; 0xcccd
   25510:	movt	r2, #15948	; 0x3e4c
   25514:	str	r2, [r3, #28]
   25518:	b	2552c <__assert_fail@plt+0x12e40>
   2551c:	ldr	r3, [fp, #-8]
   25520:	movw	r2, #26214	; 0x6666
   25524:	movt	r2, #16230	; 0x3f66
   25528:	str	r2, [r3, #28]
   2552c:	mov	r3, #1
   25530:	mov	r0, r3
   25534:	sub	sp, fp, #4
   25538:	ldr	fp, [sp]
   2553c:	add	sp, sp, #4
   25540:	pop	{pc}		; (ldr pc, [sp], #4)
   25544:	str	fp, [sp, #-8]!
   25548:	str	lr, [sp, #4]
   2554c:	add	fp, sp, #4
   25550:	sub	sp, sp, #16
   25554:	str	r0, [fp, #-8]
   25558:	str	r1, [fp, #-12]
   2555c:	str	r2, [fp, #-16]
   25560:	movw	r3, #25052	; 0x61dc
   25564:	movt	r3, #1
   25568:	ldr	r2, [fp, #-8]
   2556c:	ldr	r1, [fp, #-16]
   25570:	ldr	r0, [fp, #-12]
   25574:	bl	25d34 <__assert_fail@plt+0x13648>
   25578:	mov	r3, r0
   2557c:	mov	r0, r3
   25580:	sub	sp, fp, #4
   25584:	ldr	fp, [sp]
   25588:	add	sp, sp, #4
   2558c:	pop	{pc}		; (ldr pc, [sp], #4)
   25590:	str	fp, [sp, #-8]!
   25594:	str	lr, [sp, #4]
   25598:	add	fp, sp, #4
   2559c:	sub	sp, sp, #24
   255a0:	str	r0, [fp, #-16]
   255a4:	str	r1, [fp, #-20]	; 0xffffffec
   255a8:	str	r2, [fp, #-24]	; 0xffffffe8
   255ac:	ldr	r2, [fp, #-16]
   255b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   255b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   255b8:	bl	272b8 <__assert_fail@plt+0x14bcc>
   255bc:	str	r0, [fp, #-8]
   255c0:	ldr	r3, [fp, #-8]
   255c4:	cmp	r3, #0
   255c8:	beq	25604 <__assert_fail@plt+0x12f18>
   255cc:	ldr	r3, [fp, #-8]
   255d0:	ldrd	r2, [r3, #48]	; 0x30
   255d4:	cmp	r3, #0
   255d8:	cmpeq	r2, #99	; 0x63
   255dc:	bhi	255ec <__assert_fail@plt+0x12f00>
   255e0:	movw	r2, #28836	; 0x70a4
   255e4:	movt	r2, #16253	; 0x3f7d
   255e8:	b	255f4 <__assert_fail@plt+0x12f08>
   255ec:	movw	r2, #52429	; 0xcccd
   255f0:	movt	r2, #15948	; 0x3e4c
   255f4:	ldr	r3, [fp, #-8]
   255f8:	str	r2, [r3, #28]
   255fc:	mov	r3, #1
   25600:	b	2561c <__assert_fail@plt+0x12f30>
   25604:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25608:	ldr	r3, [r3]
   2560c:	sub	r2, r3, #1
   25610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25614:	str	r2, [r3]
   25618:	mov	r3, #0
   2561c:	mov	r0, r3
   25620:	sub	sp, fp, #4
   25624:	ldr	fp, [sp]
   25628:	add	sp, sp, #4
   2562c:	pop	{pc}		; (ldr pc, [sp], #4)
   25630:	str	fp, [sp, #-8]!
   25634:	str	lr, [sp, #4]
   25638:	add	fp, sp, #4
   2563c:	sub	sp, sp, #64	; 0x40
   25640:	str	r0, [fp, #-48]	; 0xffffffd0
   25644:	str	r1, [fp, #-52]	; 0xffffffcc
   25648:	str	r2, [fp, #-56]	; 0xffffffc8
   2564c:	movw	r3, #34320	; 0x8610
   25650:	movt	r3, #6
   25654:	str	r3, [fp, #-8]
   25658:	sub	r3, fp, #32
   2565c:	mov	r2, r3
   25660:	ldr	r1, [fp, #-56]	; 0xffffffc8
   25664:	ldr	r0, [fp, #-52]	; 0xffffffcc
   25668:	bl	219e4 <__assert_fail@plt+0xf2f8>
   2566c:	mov	r3, r0
   25670:	cmp	r3, #0
   25674:	beq	25748 <__assert_fail@plt+0x1305c>
   25678:	mov	r3, #0
   2567c:	str	r3, [fp, #-40]	; 0xffffffd8
   25680:	mov	r3, #0
   25684:	str	r3, [fp, #-36]	; 0xffffffdc
   25688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2568c:	sub	r1, fp, #28
   25690:	ldr	r3, [fp, #-8]
   25694:	str	r3, [sp]
   25698:	vldr	d0, [pc, #192]	; 25760 <__assert_fail@plt+0x13074>
   2569c:	sub	r3, fp, #40	; 0x28
   256a0:	ldm	r3, {r2, r3}
   256a4:	bl	26b94 <__assert_fail@plt+0x144a8>
   256a8:	mov	r3, r0
   256ac:	cmp	r3, #0
   256b0:	beq	25728 <__assert_fail@plt+0x1303c>
   256b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   256b8:	mov	r1, r3
   256bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   256c0:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   256c4:	str	r0, [fp, #-12]
   256c8:	ldr	r3, [fp, #-12]
   256cc:	add	r1, r3, #40	; 0x28
   256d0:	sub	r0, fp, #28
   256d4:	ldrd	r2, [r0]
   256d8:	strd	r2, [r1]
   256dc:	ldrd	r2, [r0, #8]
   256e0:	strd	r2, [r1, #8]
   256e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   256e8:	movw	r2, #17671	; 0x4507
   256ec:	movt	r2, #49710	; 0xc22e
   256f0:	smull	r1, r2, r2, r3
   256f4:	add	r2, r2, r3
   256f8:	asr	r2, r2, #16
   256fc:	asr	r3, r3, #31
   25700:	sub	r3, r2, r3
   25704:	vmov	s15, r3
   25708:	vcvt.f32.s32	s15, s15
   2570c:	vmov.f32	s0, s15
   25710:	bl	21838 <__assert_fail@plt+0xf14c>
   25714:	vmov.f32	s15, s0
   25718:	ldr	r3, [fp, #-12]
   2571c:	vstr	s15, [r3, #28]
   25720:	mov	r3, #1
   25724:	b	2574c <__assert_fail@plt+0x13060>
   25728:	movw	r0, #34388	; 0x8654
   2572c:	movt	r0, #6
   25730:	bl	12398 <gettext@plt>
   25734:	mov	r2, r0
   25738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2573c:	mov	r1, #0
   25740:	mov	r0, #1
   25744:	bl	122b4 <error@plt>
   25748:	mov	r3, #0
   2574c:	mov	r0, r3
   25750:	sub	sp, fp, #4
   25754:	ldr	fp, [sp]
   25758:	add	sp, sp, #4
   2575c:	pop	{pc}		; (ldr pc, [sp], #4)
   25760:	andeq	r0, r0, r0
   25764:	rscsmi	r1, r5, r0, lsl #16
   25768:	str	r4, [sp, #-12]!
   2576c:	str	fp, [sp, #4]
   25770:	str	lr, [sp, #8]
   25774:	add	fp, sp, #8
   25778:	sub	sp, sp, #44	; 0x2c
   2577c:	str	r0, [fp, #-40]	; 0xffffffd8
   25780:	str	r1, [fp, #-44]	; 0xffffffd4
   25784:	str	r2, [fp, #-48]	; 0xffffffd0
   25788:	sub	r3, fp, #32
   2578c:	mov	r2, r3
   25790:	ldr	r1, [fp, #-48]	; 0xffffffd0
   25794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   25798:	bl	219e4 <__assert_fail@plt+0xf2f8>
   2579c:	mov	r3, r0
   257a0:	cmp	r3, #0
   257a4:	beq	25900 <__assert_fail@plt+0x13214>
   257a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   257ac:	mov	r0, r3
   257b0:	bl	11fd8 <getpwnam@plt>
   257b4:	str	r0, [fp, #-20]	; 0xffffffec
   257b8:	bl	12530 <endpwent@plt>
   257bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   257c0:	cmp	r3, #0
   257c4:	beq	257d8 <__assert_fail@plt+0x130ec>
   257c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   257cc:	ldr	r3, [r3, #8]
   257d0:	str	r3, [fp, #-16]
   257d4:	b	258ac <__assert_fail@plt+0x131c0>
   257d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   257dc:	movw	r1, #32828	; 0x803c
   257e0:	movt	r1, #6
   257e4:	mov	r0, r3
   257e8:	bl	126e0 <strspn@plt>
   257ec:	str	r0, [fp, #-24]	; 0xffffffe8
   257f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   257f4:	cmp	r3, #0
   257f8:	beq	2583c <__assert_fail@plt+0x13150>
   257fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25804:	add	r3, r2, r3
   25808:	ldrb	r3, [r3]
   2580c:	cmp	r3, #0
   25810:	bne	2583c <__assert_fail@plt+0x13150>
   25814:	ldr	r2, [fp, #-32]	; 0xffffffe0
   25818:	movw	r3, #53324	; 0xd04c
   2581c:	movt	r3, #7
   25820:	ldr	r3, [r3, #72]	; 0x48
   25824:	mov	r1, r3
   25828:	mov	r0, r2
   2582c:	bl	2aeec <__assert_fail@plt+0x18800>
   25830:	mov	r3, r0
   25834:	str	r3, [fp, #-16]
   25838:	b	258ac <__assert_fail@plt+0x131c0>
   2583c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25840:	ldrb	r3, [r3]
   25844:	cmp	r3, #0
   25848:	beq	2588c <__assert_fail@plt+0x131a0>
   2584c:	movw	r0, #34420	; 0x8674
   25850:	movt	r0, #6
   25854:	bl	12398 <gettext@plt>
   25858:	mov	r4, r0
   2585c:	movw	r3, #53324	; 0xd04c
   25860:	movt	r3, #7
   25864:	ldr	r3, [r3, #72]	; 0x48
   25868:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2586c:	mov	r1, r3
   25870:	mov	r0, #0
   25874:	bl	3bc98 <__assert_fail@plt+0x295ac>
   25878:	mov	r3, r0
   2587c:	mov	r2, r4
   25880:	mov	r1, #0
   25884:	mov	r0, #1
   25888:	bl	122b4 <error@plt>
   2588c:	movw	r0, #34456	; 0x8698
   25890:	movt	r0, #6
   25894:	bl	12398 <gettext@plt>
   25898:	mov	r3, r0
   2589c:	mov	r2, r3
   258a0:	mov	r1, #0
   258a4:	mov	r0, #1
   258a8:	bl	122b4 <error@plt>
   258ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   258b0:	mov	r1, r3
   258b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   258b8:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   258bc:	str	r0, [fp, #-28]	; 0xffffffe4
   258c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   258c4:	ldr	r2, [fp, #-16]
   258c8:	str	r2, [r3, #40]	; 0x28
   258cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   258d0:	ldr	r3, [r3, #40]	; 0x28
   258d4:	cmp	r3, #99	; 0x63
   258d8:	bhi	258e8 <__assert_fail@plt+0x131fc>
   258dc:	movw	r2, #28836	; 0x70a4
   258e0:	movt	r2, #16253	; 0x3f7d
   258e4:	b	258f0 <__assert_fail@plt+0x13204>
   258e8:	movw	r2, #52429	; 0xcccd
   258ec:	movt	r2, #15948	; 0x3e4c
   258f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   258f4:	str	r2, [r3, #28]
   258f8:	mov	r3, #1
   258fc:	b	25904 <__assert_fail@plt+0x13218>
   25900:	mov	r3, #0
   25904:	mov	r0, r3
   25908:	sub	sp, fp, #8
   2590c:	ldr	r4, [sp]
   25910:	ldr	fp, [sp, #4]
   25914:	add	sp, sp, #8
   25918:	pop	{pc}		; (ldr pc, [sp], #4)
   2591c:	str	fp, [sp, #-8]!
   25920:	str	lr, [sp, #4]
   25924:	add	fp, sp, #4
   25928:	sub	sp, sp, #24
   2592c:	str	r0, [fp, #-16]
   25930:	str	r1, [fp, #-20]	; 0xffffffec
   25934:	str	r2, [fp, #-24]	; 0xffffffe8
   25938:	mov	r3, #0
   2593c:	strb	r3, [fp, #-5]
   25940:	movw	r0, #34500	; 0x86c4
   25944:	movt	r0, #6
   25948:	bl	29688 <__assert_fail@plt+0x16f9c>
   2594c:	movw	r0, #34508	; 0x86cc
   25950:	movt	r0, #6
   25954:	bl	12398 <gettext@plt>
   25958:	mov	r3, r0
   2595c:	mov	r0, r3
   25960:	bl	1202c <printf@plt>
   25964:	movw	r0, #34528	; 0x86e0
   25968:	movt	r0, #6
   2596c:	bl	1202c <printf@plt>
   25970:	mov	r3, #1
   25974:	strb	r3, [fp, #-5]
   25978:	movw	r3, #53324	; 0xd04c
   2597c:	movt	r3, #7
   25980:	ldrb	r3, [r3, #56]	; 0x38
   25984:	cmp	r3, #0
   25988:	beq	25998 <__assert_fail@plt+0x132ac>
   2598c:	movw	r3, #34536	; 0x86e8
   25990:	movt	r3, #6
   25994:	b	259a0 <__assert_fail@plt+0x132b4>
   25998:	movw	r3, #34544	; 0x86f0
   2599c:	movt	r3, #6
   259a0:	mov	r1, r3
   259a4:	movw	r0, #34556	; 0x86fc
   259a8:	movt	r0, #6
   259ac:	bl	1202c <printf@plt>
   259b0:	mov	r3, #1
   259b4:	strb	r3, [fp, #-5]
   259b8:	movw	r0, #34572	; 0x870c
   259bc:	movt	r0, #6
   259c0:	bl	1202c <printf@plt>
   259c4:	mov	r3, #1
   259c8:	strb	r3, [fp, #-5]
   259cc:	bl	11fe4 <is_selinux_enabled@plt>
   259d0:	mov	r3, r0
   259d4:	cmp	r3, #0
   259d8:	ble	259f0 <__assert_fail@plt+0x13304>
   259dc:	movw	r0, #34592	; 0x8720
   259e0:	movt	r0, #6
   259e4:	bl	1202c <printf@plt>
   259e8:	mov	r3, #1
   259ec:	strb	r3, [fp, #-5]
   259f0:	mov	r3, #0
   259f4:	str	r3, [fp, #-12]
   259f8:	sub	r3, fp, #12
   259fc:	mov	r0, r3
   25a00:	bl	14040 <__assert_fail@plt+0x1954>
   25a04:	mov	r3, r0
   25a08:	cmp	r3, #0
   25a0c:	beq	25a4c <__assert_fail@plt+0x13360>
   25a10:	movw	r0, #34604	; 0x872c
   25a14:	movt	r0, #6
   25a18:	bl	1202c <printf@plt>
   25a1c:	mov	r3, #1
   25a20:	strb	r3, [fp, #-5]
   25a24:	ldr	r3, [fp, #-12]
   25a28:	and	r3, r3, #512	; 0x200
   25a2c:	cmp	r3, #0
   25a30:	beq	25a40 <__assert_fail@plt+0x13354>
   25a34:	movw	r0, #34612	; 0x8734
   25a38:	movt	r0, #6
   25a3c:	bl	1202c <printf@plt>
   25a40:	movw	r0, #34624	; 0x8740
   25a44:	movt	r0, #6
   25a48:	bl	1202c <printf@plt>
   25a4c:	movw	r3, #53324	; 0xd04c
   25a50:	movt	r3, #7
   25a54:	ldrh	r3, [r3, #68]	; 0x44
   25a58:	mov	r1, r3
   25a5c:	movw	r0, #34628	; 0x8744
   25a60:	movt	r0, #6
   25a64:	bl	1202c <printf@plt>
   25a68:	mov	r3, #1
   25a6c:	strb	r3, [fp, #-5]
   25a70:	ldrb	r3, [fp, #-5]
   25a74:	eor	r3, r3, #1
   25a78:	uxtb	r3, r3
   25a7c:	cmp	r3, #0
   25a80:	beq	25a90 <__assert_fail@plt+0x133a4>
   25a84:	movw	r0, #34644	; 0x8754
   25a88:	movt	r0, #6
   25a8c:	bl	1202c <printf@plt>
   25a90:	mov	r0, #10
   25a94:	bl	1244c <putchar@plt>
   25a98:	mov	r0, #0
   25a9c:	bl	12380 <exit@plt>
   25aa0:	str	fp, [sp, #-8]!
   25aa4:	str	lr, [sp, #4]
   25aa8:	add	fp, sp, #4
   25aac:	sub	sp, sp, #24
   25ab0:	str	r0, [fp, #-16]
   25ab4:	str	r1, [fp, #-20]	; 0xffffffec
   25ab8:	str	r2, [fp, #-24]	; 0xffffffe8
   25abc:	ldr	r3, [fp, #-20]	; 0xffffffec
   25ac0:	cmp	r3, #0
   25ac4:	beq	25ae8 <__assert_fail@plt+0x133fc>
   25ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25acc:	ldr	r3, [r3]
   25ad0:	lsl	r3, r3, #2
   25ad4:	ldr	r2, [fp, #-20]	; 0xffffffec
   25ad8:	add	r3, r2, r3
   25adc:	ldr	r3, [r3]
   25ae0:	cmp	r3, #0
   25ae4:	bne	25af0 <__assert_fail@plt+0x13404>
   25ae8:	mov	r3, #0
   25aec:	b	25b84 <__assert_fail@plt+0x13498>
   25af0:	bl	11fe4 <is_selinux_enabled@plt>
   25af4:	mov	r3, r0
   25af8:	cmp	r3, #0
   25afc:	bgt	25b20 <__assert_fail@plt+0x13434>
   25b00:	movw	r0, #34652	; 0x875c
   25b04:	movt	r0, #6
   25b08:	bl	12398 <gettext@plt>
   25b0c:	mov	r3, r0
   25b10:	mov	r2, r3
   25b14:	mov	r1, #0
   25b18:	mov	r0, #1
   25b1c:	bl	122b4 <error@plt>
   25b20:	mov	r1, #0
   25b24:	ldr	r0, [fp, #-16]
   25b28:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   25b2c:	str	r0, [fp, #-8]
   25b30:	ldr	r3, [fp, #-8]
   25b34:	movw	r2, #55050	; 0xd70a
   25b38:	movt	r2, #15395	; 0x3c23
   25b3c:	str	r2, [r3, #28]
   25b40:	ldr	r3, [fp, #-8]
   25b44:	mov	r2, #0
   25b48:	strb	r2, [r3, #18]
   25b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b50:	ldr	r3, [r3]
   25b54:	lsl	r3, r3, #2
   25b58:	ldr	r2, [fp, #-20]	; 0xffffffec
   25b5c:	add	r3, r2, r3
   25b60:	ldr	r2, [r3]
   25b64:	ldr	r3, [fp, #-8]
   25b68:	str	r2, [r3, #40]	; 0x28
   25b6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b70:	ldr	r3, [r3]
   25b74:	add	r2, r3, #1
   25b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b7c:	str	r2, [r3]
   25b80:	mov	r3, #1
   25b84:	mov	r0, r3
   25b88:	sub	sp, fp, #4
   25b8c:	ldr	fp, [sp]
   25b90:	add	sp, sp, #4
   25b94:	pop	{pc}		; (ldr pc, [sp], #4)
   25b98:	str	fp, [sp, #-8]!
   25b9c:	str	lr, [sp, #4]
   25ba0:	add	fp, sp, #4
   25ba4:	sub	sp, sp, #16
   25ba8:	str	r0, [fp, #-8]
   25bac:	str	r1, [fp, #-12]
   25bb0:	str	r2, [fp, #-16]
   25bb4:	movw	r3, #53324	; 0xd04c
   25bb8:	movt	r3, #7
   25bbc:	mov	r2, #1
   25bc0:	strb	r2, [r3, #13]
   25bc4:	ldr	r2, [fp, #-16]
   25bc8:	ldr	r1, [fp, #-12]
   25bcc:	ldr	r0, [fp, #-8]
   25bd0:	bl	25444 <__assert_fail@plt+0x12d58>
   25bd4:	mov	r3, r0
   25bd8:	mov	r0, r3
   25bdc:	sub	sp, fp, #4
   25be0:	ldr	fp, [sp]
   25be4:	add	sp, sp, #4
   25be8:	pop	{pc}		; (ldr pc, [sp], #4)
   25bec:	str	fp, [sp, #-8]!
   25bf0:	str	lr, [sp, #4]
   25bf4:	add	fp, sp, #4
   25bf8:	sub	sp, sp, #16
   25bfc:	str	r0, [fp, #-8]
   25c00:	str	r1, [fp, #-12]
   25c04:	str	r2, [fp, #-16]
   25c08:	movw	r3, #53324	; 0xd04c
   25c0c:	movt	r3, #7
   25c10:	mov	r2, #1
   25c14:	strb	r2, [r3, #14]
   25c18:	ldr	r2, [fp, #-16]
   25c1c:	ldr	r1, [fp, #-12]
   25c20:	ldr	r0, [fp, #-8]
   25c24:	bl	25444 <__assert_fail@plt+0x12d58>
   25c28:	mov	r3, r0
   25c2c:	mov	r0, r3
   25c30:	sub	sp, fp, #4
   25c34:	ldr	fp, [sp]
   25c38:	add	sp, sp, #4
   25c3c:	pop	{pc}		; (ldr pc, [sp], #4)
   25c40:	str	fp, [sp, #-8]!
   25c44:	str	lr, [sp, #4]
   25c48:	add	fp, sp, #4
   25c4c:	sub	sp, sp, #16
   25c50:	str	r0, [fp, #-8]
   25c54:	str	r1, [fp, #-12]
   25c58:	str	r2, [fp, #-16]
   25c5c:	movw	r3, #53324	; 0xd04c
   25c60:	movt	r3, #7
   25c64:	mov	r2, #0
   25c68:	strb	r2, [r3, #14]
   25c6c:	ldr	r2, [fp, #-16]
   25c70:	ldr	r1, [fp, #-12]
   25c74:	ldr	r0, [fp, #-8]
   25c78:	bl	25444 <__assert_fail@plt+0x12d58>
   25c7c:	mov	r3, r0
   25c80:	mov	r0, r3
   25c84:	sub	sp, fp, #4
   25c88:	ldr	fp, [sp]
   25c8c:	add	sp, sp, #4
   25c90:	pop	{pc}		; (ldr pc, [sp], #4)
   25c94:	str	fp, [sp, #-8]!
   25c98:	str	lr, [sp, #4]
   25c9c:	add	fp, sp, #4
   25ca0:	sub	sp, sp, #16
   25ca4:	str	r0, [fp, #-8]
   25ca8:	str	r1, [fp, #-12]
   25cac:	str	r2, [fp, #-16]
   25cb0:	movw	r3, #53324	; 0xd04c
   25cb4:	movt	r3, #7
   25cb8:	mov	r2, #1
   25cbc:	strb	r2, [r3, #16]
   25cc0:	ldr	r2, [fp, #-16]
   25cc4:	ldr	r1, [fp, #-12]
   25cc8:	ldr	r0, [fp, #-8]
   25ccc:	bl	25444 <__assert_fail@plt+0x12d58>
   25cd0:	mov	r3, r0
   25cd4:	mov	r0, r3
   25cd8:	sub	sp, fp, #4
   25cdc:	ldr	fp, [sp]
   25ce0:	add	sp, sp, #4
   25ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   25ce8:	str	fp, [sp, #-8]!
   25cec:	str	lr, [sp, #4]
   25cf0:	add	fp, sp, #4
   25cf4:	sub	sp, sp, #16
   25cf8:	str	r0, [fp, #-8]
   25cfc:	str	r1, [fp, #-12]
   25d00:	str	r2, [fp, #-16]
   25d04:	movw	r3, #25984	; 0x6580
   25d08:	movt	r3, #1
   25d0c:	ldr	r2, [fp, #-8]
   25d10:	ldr	r1, [fp, #-16]
   25d14:	ldr	r0, [fp, #-12]
   25d18:	bl	25d34 <__assert_fail@plt+0x13648>
   25d1c:	mov	r3, r0
   25d20:	mov	r0, r3
   25d24:	sub	sp, fp, #4
   25d28:	ldr	fp, [sp]
   25d2c:	add	sp, sp, #4
   25d30:	pop	{pc}		; (ldr pc, [sp], #4)
   25d34:	str	fp, [sp, #-8]!
   25d38:	str	lr, [sp, #4]
   25d3c:	add	fp, sp, #4
   25d40:	sub	sp, sp, #48	; 0x30
   25d44:	str	r0, [fp, #-32]	; 0xffffffe0
   25d48:	str	r1, [fp, #-36]	; 0xffffffdc
   25d4c:	str	r2, [fp, #-40]	; 0xffffffd8
   25d50:	str	r3, [fp, #-44]	; 0xffffffd4
   25d54:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25d58:	movw	r3, #25984	; 0x6580
   25d5c:	movt	r3, #1
   25d60:	cmp	r2, r3
   25d64:	bne	25d74 <__assert_fail@plt+0x13688>
   25d68:	movw	r3, #34704	; 0x8790
   25d6c:	movt	r3, #6
   25d70:	b	25d7c <__assert_fail@plt+0x13690>
   25d74:	movw	r3, #34712	; 0x8798
   25d78:	movt	r3, #6
   25d7c:	str	r3, [fp, #-16]
   25d80:	sub	r3, fp, #24
   25d84:	mov	r2, r3
   25d88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25d90:	bl	219e4 <__assert_fail@plt+0xf2f8>
   25d94:	mov	r3, r0
   25d98:	eor	r3, r3, #1
   25d9c:	uxtb	r3, r3
   25da0:	cmp	r3, #0
   25da4:	beq	25db0 <__assert_fail@plt+0x136c4>
   25da8:	mov	r3, #0
   25dac:	b	26160 <__assert_fail@plt+0x13a74>
   25db0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25db4:	ldrb	r3, [r3]
   25db8:	cmp	r3, #0
   25dbc:	bne	25de0 <__assert_fail@plt+0x136f4>
   25dc0:	movw	r0, #34720	; 0x87a0
   25dc4:	movt	r0, #6
   25dc8:	bl	12398 <gettext@plt>
   25dcc:	mov	r2, r0
   25dd0:	ldr	r3, [fp, #-16]
   25dd4:	mov	r1, #0
   25dd8:	mov	r0, #1
   25ddc:	bl	122b4 <error@plt>
   25de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25de4:	mov	r2, r3
   25de8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   25dec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   25df0:	bl	1b22c <__assert_fail@plt+0x8b40>
   25df4:	str	r0, [fp, #-20]	; 0xffffffec
   25df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   25dfc:	mov	r2, #0
   25e00:	str	r2, [r3, #28]
   25e04:	ldr	r2, [fp, #-44]	; 0xffffffd4
   25e08:	movw	r3, #25984	; 0x6580
   25e0c:	movt	r3, #1
   25e10:	cmp	r2, r3
   25e14:	bne	25e34 <__assert_fail@plt+0x13748>
   25e18:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e1c:	mov	r2, #1
   25e20:	strb	r2, [r3, #18]
   25e24:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e28:	mov	r2, #0
   25e2c:	strb	r2, [r3, #19]
   25e30:	b	2614c <__assert_fail@plt+0x13a60>
   25e34:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e38:	mov	r2, #0
   25e3c:	strb	r2, [r3, #18]
   25e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   25e44:	mov	r2, #1
   25e48:	strb	r2, [r3, #19]
   25e4c:	b	2614c <__assert_fail@plt+0x13a60>
   25e50:	movw	r3, #55050	; 0xd70a
   25e54:	movt	r3, #15395	; 0x3c23
   25e58:	str	r3, [fp, #-12]
   25e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e60:	ldrb	r3, [r3]
   25e64:	sub	r3, r3, #68	; 0x44
   25e68:	cmp	r3, #47	; 0x2f
   25e6c:	ldrls	pc, [pc, r3, lsl #2]
   25e70:	b	26010 <__assert_fail@plt+0x13924>
   25e74:	ldrdeq	r5, [r2], -ip
   25e78:	andeq	r6, r2, r0, lsl r0
   25e7c:	andeq	r6, r2, r0, lsl r0
   25e80:	andeq	r6, r2, r0, lsl r0
   25e84:	andeq	r6, r2, r0, lsl r0
   25e88:	andeq	r6, r2, r0, lsl r0
   25e8c:	andeq	r6, r2, r0, lsl r0
   25e90:	andeq	r6, r2, r0, lsl r0
   25e94:	andeq	r6, r2, r0, lsl r0
   25e98:	andeq	r6, r2, r0, lsl r0
   25e9c:	andeq	r6, r2, r0, lsl r0
   25ea0:	andeq	r6, r2, r0, lsl r0
   25ea4:	andeq	r6, r2, r0, lsl r0
   25ea8:	andeq	r6, r2, r0, lsl r0
   25eac:	andeq	r6, r2, r0, lsl r0
   25eb0:	andeq	r6, r2, r0, lsl r0
   25eb4:	andeq	r6, r2, r0, lsl r0
   25eb8:	andeq	r6, r2, r0, lsl r0
   25ebc:	andeq	r6, r2, r0, lsl r0
   25ec0:	andeq	r6, r2, r0, lsl r0
   25ec4:	andeq	r6, r2, r0, lsl r0
   25ec8:	andeq	r6, r2, r0, lsl r0
   25ecc:	andeq	r6, r2, r0, lsl r0
   25ed0:	andeq	r6, r2, r0, lsl r0
   25ed4:	andeq	r6, r2, r0, lsl r0
   25ed8:	andeq	r6, r2, r0, lsl r0
   25edc:	andeq	r6, r2, r0, lsl r0
   25ee0:	andeq	r6, r2, r0, lsl r0
   25ee4:	andeq	r6, r2, r0, lsl r0
   25ee8:	andeq	r6, r2, r0, lsl r0
   25eec:	andeq	r5, r2, r4, lsr pc
   25ef0:	andeq	r5, r2, ip, asr #30
   25ef4:	andeq	r5, r2, r4, ror #30
   25ef8:	andeq	r6, r2, r0, lsl r0
   25efc:	andeq	r5, r2, ip, ror pc
   25f00:	andeq	r6, r2, r0, lsl r0
   25f04:	andeq	r6, r2, r0, lsl r0
   25f08:	andeq	r6, r2, r0, lsl r0
   25f0c:	andeq	r6, r2, r0, lsl r0
   25f10:	andeq	r6, r2, r0, lsl r0
   25f14:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   25f18:	andeq	r6, r2, r0, lsl r0
   25f1c:	andeq	r6, r2, r0, lsl r0
   25f20:	andeq	r6, r2, r0, lsl r0
   25f24:	andeq	r5, r2, ip, lsr #31
   25f28:	andeq	r6, r2, r0, lsl r0
   25f2c:	andeq	r6, r2, r0, lsl r0
   25f30:	andeq	r5, r2, r4, asr #31
   25f34:	mov	r3, #0
   25f38:	str	r3, [fp, #-8]
   25f3c:	movw	r3, #51372	; 0xc8ac
   25f40:	movt	r3, #14952	; 0x3a68
   25f44:	str	r3, [fp, #-12]
   25f48:	b	26044 <__assert_fail@plt+0x13958>
   25f4c:	mov	r3, #1
   25f50:	str	r3, [fp, #-8]
   25f54:	movw	r3, #17012	; 0x4274
   25f58:	movt	r3, #14824	; 0x39e8
   25f5c:	str	r3, [fp, #-12]
   25f60:	b	26044 <__assert_fail@plt+0x13958>
   25f64:	mov	r3, #2
   25f68:	str	r3, [fp, #-8]
   25f6c:	movw	r3, #54107	; 0xd35b
   25f70:	movt	r3, #15804	; 0x3dbc
   25f74:	str	r3, [fp, #-12]
   25f78:	b	26044 <__assert_fail@plt+0x13958>
   25f7c:	mov	r3, #3
   25f80:	str	r3, [fp, #-8]
   25f84:	mov	r3, #0
   25f88:	movt	r3, #16224	; 0x3f60
   25f8c:	str	r3, [fp, #-12]
   25f90:	b	26044 <__assert_fail@plt+0x13958>
   25f94:	mov	r3, #4
   25f98:	str	r3, [fp, #-8]
   25f9c:	movw	r3, #50541	; 0xc56d
   25fa0:	movt	r3, #15614	; 0x3cfe
   25fa4:	str	r3, [fp, #-12]
   25fa8:	b	26044 <__assert_fail@plt+0x13958>
   25fac:	mov	r3, #5
   25fb0:	str	r3, [fp, #-8]
   25fb4:	movw	r3, #30814	; 0x785e
   25fb8:	movt	r3, #14077	; 0x36fd
   25fbc:	str	r3, [fp, #-12]
   25fc0:	b	26044 <__assert_fail@plt+0x13958>
   25fc4:	mov	r3, #6
   25fc8:	str	r3, [fp, #-8]
   25fcc:	movw	r3, #24829	; 0x60fd
   25fd0:	movt	r3, #14213	; 0x3785
   25fd4:	str	r3, [fp, #-12]
   25fd8:	b	26044 <__assert_fail@plt+0x13958>
   25fdc:	mov	r3, #0
   25fe0:	str	r3, [fp, #-8]
   25fe4:	movw	r0, #34772	; 0x87d4
   25fe8:	movt	r0, #6
   25fec:	bl	12398 <gettext@plt>
   25ff0:	mov	r2, r0
   25ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ff8:	ldrb	r3, [r3]
   25ffc:	str	r3, [sp]
   26000:	ldr	r3, [fp, #-16]
   26004:	mov	r1, #0
   26008:	mov	r0, #1
   2600c:	bl	122b4 <error@plt>
   26010:	mov	r3, #0
   26014:	str	r3, [fp, #-8]
   26018:	movw	r0, #34876	; 0x883c
   2601c:	movt	r0, #6
   26020:	bl	12398 <gettext@plt>
   26024:	mov	r2, r0
   26028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2602c:	ldrb	r3, [r3]
   26030:	str	r3, [sp]
   26034:	ldr	r3, [fp, #-16]
   26038:	mov	r1, #0
   2603c:	mov	r0, #1
   26040:	bl	122b4 <error@plt>
   26044:	ldr	r2, [fp, #-20]	; 0xffffffec
   26048:	ldr	r3, [fp, #-8]
   2604c:	add	r3, r2, r3
   26050:	add	r3, r3, #40	; 0x28
   26054:	ldrb	r3, [r3]
   26058:	cmp	r3, #0
   2605c:	beq	26094 <__assert_fail@plt+0x139a8>
   26060:	movw	r0, #34904	; 0x8858
   26064:	movt	r0, #6
   26068:	bl	12398 <gettext@plt>
   2606c:	mov	r2, r0
   26070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26074:	ldrb	r3, [r3]
   26078:	mov	r1, r3
   2607c:	ldr	r3, [fp, #-16]
   26080:	str	r3, [sp]
   26084:	mov	r3, r1
   26088:	mov	r1, #0
   2608c:	mov	r0, #1
   26090:	bl	122b4 <error@plt>
   26094:	ldr	r3, [fp, #-20]	; 0xffffffec
   26098:	vldr	s14, [r3, #28]
   2609c:	vldr	s15, [fp, #-12]
   260a0:	vadd.f32	s15, s14, s15
   260a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   260a8:	vstr	s15, [r3, #28]
   260ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   260b0:	ldr	r3, [fp, #-8]
   260b4:	add	r3, r2, r3
   260b8:	add	r3, r3, #40	; 0x28
   260bc:	mov	r2, #1
   260c0:	strb	r2, [r3]
   260c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   260c8:	add	r3, r3, #1
   260cc:	str	r3, [fp, #-24]	; 0xffffffe8
   260d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   260d4:	ldrb	r3, [r3]
   260d8:	cmp	r3, #0
   260dc:	beq	2614c <__assert_fail@plt+0x13a60>
   260e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   260e4:	ldrb	r3, [r3]
   260e8:	cmp	r3, #44	; 0x2c
   260ec:	beq	26110 <__assert_fail@plt+0x13a24>
   260f0:	movw	r0, #34960	; 0x8890
   260f4:	movt	r0, #6
   260f8:	bl	12398 <gettext@plt>
   260fc:	mov	r2, r0
   26100:	ldr	r3, [fp, #-16]
   26104:	mov	r1, #0
   26108:	mov	r0, #1
   2610c:	bl	122b4 <error@plt>
   26110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26114:	add	r3, r3, #1
   26118:	str	r3, [fp, #-24]	; 0xffffffe8
   2611c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26120:	ldrb	r3, [r3]
   26124:	cmp	r3, #0
   26128:	bne	2614c <__assert_fail@plt+0x13a60>
   2612c:	movw	r0, #35012	; 0x88c4
   26130:	movt	r0, #6
   26134:	bl	12398 <gettext@plt>
   26138:	mov	r2, r0
   2613c:	ldr	r3, [fp, #-16]
   26140:	mov	r1, #0
   26144:	mov	r0, #1
   26148:	bl	122b4 <error@plt>
   2614c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26150:	ldrb	r3, [r3]
   26154:	cmp	r3, #0
   26158:	bne	25e50 <__assert_fail@plt+0x13764>
   2615c:	mov	r3, #1
   26160:	mov	r0, r3
   26164:	sub	sp, fp, #4
   26168:	ldr	fp, [sp]
   2616c:	add	sp, sp, #4
   26170:	pop	{pc}		; (ldr pc, [sp], #4)
   26174:	str	fp, [sp, #-8]!
   26178:	str	lr, [sp, #4]
   2617c:	add	fp, sp, #4
   26180:	sub	sp, sp, #16
   26184:	str	r0, [fp, #-16]
   26188:	ldr	r0, [fp, #-16]
   2618c:	bl	12488 <fileno@plt>
   26190:	str	r0, [fp, #-8]
   26194:	ldr	r3, [fp, #-8]
   26198:	cmn	r3, #1
   2619c:	bne	261a8 <__assert_fail@plt+0x13abc>
   261a0:	mov	r3, #0
   261a4:	b	261c4 <__assert_fail@plt+0x13ad8>
   261a8:	ldr	r0, [fp, #-8]
   261ac:	bl	1265c <isatty@plt>
   261b0:	mov	r3, r0
   261b4:	cmp	r3, #0
   261b8:	movne	r3, #1
   261bc:	moveq	r3, #0
   261c0:	uxtb	r3, r3
   261c4:	mov	r0, r3
   261c8:	sub	sp, fp, #4
   261cc:	ldr	fp, [sp]
   261d0:	add	sp, sp, #4
   261d4:	pop	{pc}		; (ldr pc, [sp], #4)
   261d8:	str	r4, [sp, #-12]!
   261dc:	str	fp, [sp, #4]
   261e0:	str	lr, [sp, #8]
   261e4:	add	fp, sp, #8
   261e8:	sub	sp, sp, #44	; 0x2c
   261ec:	str	r0, [fp, #-40]	; 0xffffffd8
   261f0:	movw	r0, #35092	; 0x8914
   261f4:	movt	r0, #6
   261f8:	bl	122f0 <getenv@plt>
   261fc:	str	r0, [fp, #-16]
   26200:	movw	r3, #35100	; 0x891c
   26204:	movt	r3, #6
   26208:	str	r3, [fp, #-20]	; 0xffffffec
   2620c:	ldr	r3, [fp, #-16]
   26210:	cmp	r3, #0
   26214:	beq	26350 <__assert_fail@plt+0x13c64>
   26218:	sub	r2, fp, #28
   2621c:	sub	r3, fp, #32
   26220:	str	r3, [sp]
   26224:	mov	r3, r2
   26228:	mov	r2, #1
   2622c:	ldr	r1, [fp, #-20]	; 0xffffffec
   26230:	ldr	r0, [fp, #-16]
   26234:	bl	2b0f4 <__assert_fail@plt+0x18a08>
   26238:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2623c:	cmp	r3, #0
   26240:	beq	26268 <__assert_fail@plt+0x13b7c>
   26244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26248:	cmp	r3, #1
   2624c:	bne	26288 <__assert_fail@plt+0x13b9c>
   26250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26254:	ldr	r2, [fp, #-16]
   26258:	add	r3, r2, r3
   2625c:	ldrb	r3, [r3]
   26260:	cmp	r3, #46	; 0x2e
   26264:	bne	26288 <__assert_fail@plt+0x13b9c>
   26268:	movw	r0, #35104	; 0x8920
   2626c:	movt	r0, #6
   26270:	bl	12398 <gettext@plt>
   26274:	mov	r2, r0
   26278:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2627c:	mov	r1, #0
   26280:	mov	r0, #1
   26284:	bl	122b4 <error@plt>
   26288:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2628c:	ldr	r2, [fp, #-16]
   26290:	add	r3, r2, r3
   26294:	ldrb	r3, [r3]
   26298:	cmp	r3, #47	; 0x2f
   2629c:	beq	26320 <__assert_fail@plt+0x13c34>
   262a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   262a4:	ldr	r2, [fp, #-16]
   262a8:	add	r3, r2, r3
   262ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   262b0:	mov	r1, r2
   262b4:	mov	r0, r3
   262b8:	bl	120d4 <strndup@plt>
   262bc:	mov	r3, r0
   262c0:	str	r3, [fp, #-24]	; 0xffffffe8
   262c4:	movw	r0, #35356	; 0x8a1c
   262c8:	movt	r0, #6
   262cc:	bl	12398 <gettext@plt>
   262d0:	mov	r4, r0
   262d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   262d8:	cmp	r3, #0
   262dc:	bne	262f0 <__assert_fail@plt+0x13c04>
   262e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   262e4:	ldr	r2, [fp, #-16]
   262e8:	add	r3, r2, r3
   262ec:	b	262f4 <__assert_fail@plt+0x13c08>
   262f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   262f4:	mov	r1, r3
   262f8:	mov	r0, #0
   262fc:	bl	1d3e4 <__assert_fail@plt+0xacf8>
   26300:	mov	r2, r0
   26304:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26308:	str	r3, [sp]
   2630c:	mov	r3, r2
   26310:	mov	r2, r4
   26314:	mov	r1, #0
   26318:	mov	r0, #1
   2631c:	bl	122b4 <error@plt>
   26320:	sub	r2, fp, #28
   26324:	sub	r3, fp, #32
   26328:	str	r3, [sp]
   2632c:	mov	r3, r2
   26330:	mov	r2, #0
   26334:	ldr	r1, [fp, #-20]	; 0xffffffec
   26338:	ldr	r0, [fp, #-16]
   2633c:	bl	2b0f4 <__assert_fail@plt+0x18a08>
   26340:	mov	r3, r0
   26344:	cmp	r3, #0
   26348:	bne	26238 <__assert_fail@plt+0x13b4c>
   2634c:	b	26354 <__assert_fail@plt+0x13c68>
   26350:	nop	{0}
   26354:	sub	sp, fp, #8
   26358:	ldr	r4, [sp]
   2635c:	ldr	fp, [sp, #4]
   26360:	add	sp, sp, #8
   26364:	pop	{pc}		; (ldr pc, [sp], #4)
   26368:	strd	r4, [sp, #-20]!	; 0xffffffec
   2636c:	str	r6, [sp, #8]
   26370:	str	fp, [sp, #12]
   26374:	str	lr, [sp, #16]
   26378:	add	fp, sp, #16
   2637c:	sub	sp, sp, #108	; 0x6c
   26380:	str	r0, [fp, #-96]	; 0xffffffa0
   26384:	str	r1, [fp, #-100]	; 0xffffff9c
   26388:	str	r2, [fp, #-104]	; 0xffffff98
   2638c:	str	r3, [fp, #-108]	; 0xffffff94
   26390:	ldr	r3, [fp, #-100]	; 0xffffff9c
   26394:	ldr	r3, [r3, #12]
   26398:	str	r3, [fp, #-52]	; 0xffffffcc
   2639c:	ldr	r3, [fp, #-104]	; 0xffffff98
   263a0:	cmp	r3, #0
   263a4:	beq	263c8 <__assert_fail@plt+0x13cdc>
   263a8:	ldr	r3, [fp, #-108]	; 0xffffff94
   263ac:	ldr	r3, [r3]
   263b0:	lsl	r3, r3, #2
   263b4:	ldr	r2, [fp, #-104]	; 0xffffff98
   263b8:	add	r3, r2, r3
   263bc:	ldr	r3, [r3]
   263c0:	cmp	r3, #0
   263c4:	bne	263d0 <__assert_fail@plt+0x13ce4>
   263c8:	mov	r3, #0
   263cc:	b	26b78 <__assert_fail@plt+0x1448c>
   263d0:	movw	r2, #35524	; 0x8ac4
   263d4:	movt	r2, #6
   263d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   263dc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   263e0:	bl	1b22c <__assert_fail@plt+0x8b40>
   263e4:	str	r0, [fp, #-56]	; 0xffffffc8
   263e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   263ec:	mov	r2, #1
   263f0:	strb	r2, [r3, #17]
   263f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   263f8:	ldrb	r2, [r3, #17]
   263fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26400:	strb	r2, [r3, #16]
   26404:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26408:	mov	r2, #0
   2640c:	strb	r2, [r3, #18]
   26410:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26414:	ldrb	r2, [r3, #18]
   26418:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2641c:	strb	r2, [r3, #19]
   26420:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26424:	add	r3, r3, #40	; 0x28
   26428:	str	r3, [fp, #-60]	; 0xffffffc4
   2642c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26430:	mov	r2, #0
   26434:	str	r2, [r3, #104]	; 0x68
   26438:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2643c:	movw	r3, #22952	; 0x59a8
   26440:	movt	r3, #1
   26444:	cmp	r2, r3
   26448:	beq	26478 <__assert_fail@plt+0x13d8c>
   2644c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26450:	movw	r3, #22840	; 0x5938
   26454:	movt	r3, #1
   26458:	cmp	r2, r3
   2645c:	beq	26478 <__assert_fail@plt+0x13d8c>
   26460:	mov	r3, #1
   26464:	strb	r3, [fp, #-33]	; 0xffffffdf
   26468:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2646c:	mov	r2, #0
   26470:	strb	r2, [r3, #100]	; 0x64
   26474:	b	2649c <__assert_fail@plt+0x13db0>
   26478:	mov	r3, #0
   2647c:	strb	r3, [fp, #-33]	; 0xffffffdf
   26480:	movw	r3, #53324	; 0xd04c
   26484:	movt	r3, #7
   26488:	mov	r2, #1
   2648c:	strb	r2, [r3, #80]	; 0x50
   26490:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26494:	mov	r2, #1
   26498:	strb	r2, [r3, #100]	; 0x64
   2649c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   264a0:	movw	r3, #19344	; 0x4b90
   264a4:	movt	r3, #1
   264a8:	cmp	r2, r3
   264ac:	beq	264c4 <__assert_fail@plt+0x13dd8>
   264b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   264b4:	movw	r3, #22952	; 0x59a8
   264b8:	movt	r3, #1
   264bc:	cmp	r2, r3
   264c0:	bne	264ec <__assert_fail@plt+0x13e00>
   264c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   264c8:	mov	r2, #0
   264cc:	str	r2, [r3, #104]	; 0x68
   264d0:	movw	r3, #53324	; 0xd04c
   264d4:	movt	r3, #7
   264d8:	mov	r2, #0
   264dc:	strb	r2, [r3, #14]
   264e0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   264e4:	bl	261d8 <__assert_fail@plt+0x13aec>
   264e8:	b	26534 <__assert_fail@plt+0x13e48>
   264ec:	movw	r3, #51020	; 0xc74c
   264f0:	movt	r3, #7
   264f4:	ldr	r3, [r3]
   264f8:	cmp	r3, #0
   264fc:	bne	26520 <__assert_fail@plt+0x13e34>
   26500:	movw	r3, #36216	; 0x8d78
   26504:	movt	r3, #6
   26508:	movw	r2, #2937	; 0xb79
   2650c:	movw	r1, #32364	; 0x7e6c
   26510:	movt	r1, #6
   26514:	movw	r0, #35548	; 0x8adc
   26518:	movt	r0, #6
   2651c:	bl	126ec <__assert_fail@plt>
   26520:	movw	r3, #51020	; 0xc74c
   26524:	movt	r3, #7
   26528:	ldr	r2, [r3]
   2652c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26530:	str	r2, [r3, #104]	; 0x68
   26534:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26538:	mov	r2, #0
   2653c:	strb	r2, [r3, #40]	; 0x28
   26540:	ldr	r3, [fp, #-108]	; 0xffffff94
   26544:	ldr	r3, [r3]
   26548:	str	r3, [fp, #-64]	; 0xffffffc0
   2654c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26550:	str	r3, [fp, #-24]	; 0xffffffe8
   26554:	mov	r3, #0
   26558:	str	r3, [fp, #-32]	; 0xffffffe0
   2655c:	mov	r3, #0
   26560:	str	r3, [fp, #-40]	; 0xffffffd8
   26564:	mov	r3, #0
   26568:	str	r3, [fp, #-44]	; 0xffffffd4
   2656c:	b	266a0 <__assert_fail@plt+0x13fb4>
   26570:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   26574:	cmp	r3, #0
   26578:	beq	265dc <__assert_fail@plt+0x13ef0>
   2657c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26580:	lsl	r3, r3, #2
   26584:	ldr	r2, [fp, #-104]	; 0xffffff98
   26588:	add	r3, r2, r3
   2658c:	ldr	r3, [r3]
   26590:	ldrb	r3, [r3]
   26594:	cmp	r3, #43	; 0x2b
   26598:	bne	265dc <__assert_fail@plt+0x13ef0>
   2659c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   265a0:	lsl	r3, r3, #2
   265a4:	ldr	r2, [fp, #-104]	; 0xffffff98
   265a8:	add	r3, r2, r3
   265ac:	ldr	r3, [r3]
   265b0:	add	r3, r3, #1
   265b4:	ldrb	r3, [r3]
   265b8:	cmp	r3, #0
   265bc:	bne	265dc <__assert_fail@plt+0x13ef0>
   265c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   265c4:	cmp	r3, #0
   265c8:	beq	265dc <__assert_fail@plt+0x13ef0>
   265cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   265d0:	mov	r2, #1
   265d4:	strb	r2, [r3, #40]	; 0x28
   265d8:	b	26700 <__assert_fail@plt+0x14014>
   265dc:	mov	r3, #0
   265e0:	str	r3, [fp, #-32]	; 0xffffffe0
   265e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   265e8:	lsl	r3, r3, #2
   265ec:	ldr	r2, [fp, #-104]	; 0xffffff98
   265f0:	add	r3, r2, r3
   265f4:	ldr	r3, [r3]
   265f8:	movw	r1, #35568	; 0x8af0
   265fc:	movt	r1, #6
   26600:	mov	r0, r3
   26604:	bl	301c0 <__assert_fail@plt+0x1dad4>
   26608:	mov	r3, r0
   2660c:	cmp	r3, #0
   26610:	beq	26694 <__assert_fail@plt+0x13fa8>
   26614:	mov	r3, #1
   26618:	str	r3, [fp, #-32]	; 0xffffffe0
   2661c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26620:	lsl	r3, r3, #2
   26624:	ldr	r2, [fp, #-104]	; 0xffffff98
   26628:	add	r3, r2, r3
   2662c:	ldr	r3, [r3]
   26630:	str	r3, [fp, #-44]	; 0xffffffd4
   26634:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26638:	add	r3, r3, #1
   2663c:	str	r3, [fp, #-40]	; 0xffffffd8
   26640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26644:	cmp	r3, #0
   26648:	bne	26694 <__assert_fail@plt+0x13fa8>
   2664c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26650:	movw	r3, #19344	; 0x4b90
   26654:	movt	r3, #1
   26658:	cmp	r2, r3
   2665c:	beq	26674 <__assert_fail@plt+0x13f88>
   26660:	ldr	r2, [fp, #-52]	; 0xffffffcc
   26664:	movw	r3, #22952	; 0x59a8
   26668:	movt	r3, #1
   2666c:	cmp	r2, r3
   26670:	bne	26694 <__assert_fail@plt+0x13fa8>
   26674:	movw	r0, #35572	; 0x8af4
   26678:	movt	r0, #6
   2667c:	bl	12398 <gettext@plt>
   26680:	mov	r3, r0
   26684:	mov	r2, r3
   26688:	mov	r1, #0
   2668c:	mov	r0, #1
   26690:	bl	122b4 <error@plt>
   26694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26698:	add	r3, r3, #1
   2669c:	str	r3, [fp, #-24]	; 0xffffffe8
   266a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   266a4:	lsl	r3, r3, #2
   266a8:	ldr	r2, [fp, #-104]	; 0xffffff98
   266ac:	add	r3, r2, r3
   266b0:	ldr	r3, [r3]
   266b4:	cmp	r3, #0
   266b8:	beq	26700 <__assert_fail@plt+0x14014>
   266bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   266c0:	lsl	r3, r3, #2
   266c4:	ldr	r2, [fp, #-104]	; 0xffffff98
   266c8:	add	r3, r2, r3
   266cc:	ldr	r3, [r3]
   266d0:	ldrb	r3, [r3]
   266d4:	cmp	r3, #59	; 0x3b
   266d8:	bne	26570 <__assert_fail@plt+0x13e84>
   266dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   266e0:	lsl	r3, r3, #2
   266e4:	ldr	r2, [fp, #-104]	; 0xffffff98
   266e8:	add	r3, r2, r3
   266ec:	ldr	r3, [r3]
   266f0:	add	r3, r3, #1
   266f4:	ldrb	r3, [r3]
   266f8:	cmp	r3, #0
   266fc:	bne	26570 <__assert_fail@plt+0x13e84>
   26700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26704:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26708:	cmp	r2, r3
   2670c:	beq	2672c <__assert_fail@plt+0x14040>
   26710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26714:	lsl	r3, r3, #2
   26718:	ldr	r2, [fp, #-104]	; 0xffffff98
   2671c:	add	r3, r2, r3
   26720:	ldr	r3, [r3]
   26724:	cmp	r3, #0
   26728:	bne	26748 <__assert_fail@plt+0x1405c>
   2672c:	ldr	r3, [fp, #-108]	; 0xffffff94
   26730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26734:	str	r2, [r3]
   26738:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2673c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   26740:	mov	r3, #0
   26744:	b	26b78 <__assert_fail@plt+0x1448c>
   26748:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2674c:	ldrb	r3, [r3, #40]	; 0x28
   26750:	cmp	r3, #0
   26754:	beq	268a4 <__assert_fail@plt+0x141b8>
   26758:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2675c:	movw	r3, #19344	; 0x4b90
   26760:	movt	r3, #1
   26764:	cmp	r2, r3
   26768:	bne	2677c <__assert_fail@plt+0x14090>
   2676c:	movw	r3, #35688	; 0x8b68
   26770:	movt	r3, #6
   26774:	str	r3, [fp, #-48]	; 0xffffffd0
   26778:	b	26788 <__assert_fail@plt+0x1409c>
   2677c:	movw	r3, #35692	; 0x8b6c
   26780:	movt	r3, #6
   26784:	str	r3, [fp, #-48]	; 0xffffffd0
   26788:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2678c:	cmp	r3, #1
   26790:	ble	267b4 <__assert_fail@plt+0x140c8>
   26794:	movw	r0, #35696	; 0x8b70
   26798:	movt	r0, #6
   2679c:	bl	12398 <gettext@plt>
   267a0:	mov	r2, r0
   267a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   267a8:	mov	r1, #0
   267ac:	mov	r0, #1
   267b0:	bl	122b4 <error@plt>
   267b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   267b8:	bl	123bc <strlen@plt>
   267bc:	mov	r3, r0
   267c0:	cmp	r3, #2
   267c4:	beq	268a4 <__assert_fail@plt+0x141b8>
   267c8:	sub	r0, fp, #92	; 0x5c
   267cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   267d0:	movw	r2, #35752	; 0x8ba8
   267d4:	movt	r2, #6
   267d8:	mov	r1, #19
   267dc:	bl	1241c <snprintf@plt>
   267e0:	mov	r3, r0
   267e4:	str	r3, [fp, #-68]	; 0xffffffbc
   267e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   267ec:	cmp	r3, #19
   267f0:	bls	26814 <__assert_fail@plt+0x14128>
   267f4:	movw	r3, #36216	; 0x8d78
   267f8:	movt	r3, #6
   267fc:	movw	r2, #3014	; 0xbc6
   26800:	movw	r1, #32364	; 0x7e6c
   26804:	movt	r1, #6
   26808:	movw	r0, #35772	; 0x8bbc
   2680c:	movt	r0, #6
   26810:	bl	126ec <__assert_fail@plt>
   26814:	movw	r0, #35796	; 0x8bd4
   26818:	movt	r0, #6
   2681c:	bl	12398 <gettext@plt>
   26820:	mov	r5, r0
   26824:	movw	r3, #53324	; 0xd04c
   26828:	movt	r3, #7
   2682c:	ldr	r3, [r3, #72]	; 0x48
   26830:	sub	r2, fp, #92	; 0x5c
   26834:	mov	r1, r3
   26838:	mov	r0, #0
   2683c:	bl	3bc98 <__assert_fail@plt+0x295ac>
   26840:	mov	r6, r0
   26844:	movw	r3, #53324	; 0xd04c
   26848:	movt	r3, #7
   2684c:	ldr	r3, [r3, #72]	; 0x48
   26850:	movw	r2, #35568	; 0x8af0
   26854:	movt	r2, #6
   26858:	mov	r1, r3
   2685c:	mov	r0, #1
   26860:	bl	3bc98 <__assert_fail@plt+0x295ac>
   26864:	mov	r4, r0
   26868:	movw	r3, #53324	; 0xd04c
   2686c:	movt	r3, #7
   26870:	ldr	r3, [r3, #72]	; 0x48
   26874:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26878:	mov	r1, r3
   2687c:	mov	r0, #2
   26880:	bl	3bc98 <__assert_fail@plt+0x295ac>
   26884:	mov	r3, r0
   26888:	str	r3, [sp, #4]
   2688c:	str	r4, [sp]
   26890:	mov	r3, r6
   26894:	mov	r2, r5
   26898:	mov	r1, #0
   2689c:	mov	r0, #1
   268a0:	bl	122b4 <error@plt>
   268a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   268a8:	add	r3, r3, #4
   268ac:	mov	r1, #2048	; 0x800
   268b0:	mov	r0, r3
   268b4:	bl	2831c <__assert_fail@plt+0x15c30>
   268b8:	str	r0, [fp, #-72]	; 0xffffffb8
   268bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   268c0:	cmp	r3, #0
   268c4:	beq	268f4 <__assert_fail@plt+0x14208>
   268c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   268cc:	cmp	r3, #2
   268d0:	bhi	268f8 <__assert_fail@plt+0x1420c>
   268d4:	movw	r0, #35856	; 0x8c10
   268d8:	movt	r0, #6
   268dc:	bl	12398 <gettext@plt>
   268e0:	mov	r3, r0
   268e4:	mov	r2, r3
   268e8:	mov	r1, #0
   268ec:	mov	r0, #1
   268f0:	bl	122b4 <error@plt>
   268f4:	nop	{0}
   268f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   268fc:	add	r3, r3, #4
   26900:	mov	r0, r3
   26904:	bl	28490 <__assert_fail@plt+0x15da4>
   26908:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2690c:	movw	r3, #30252	; 0x762c
   26910:	movt	r3, #1
   26914:	str	r3, [r2, #36]	; 0x24
   26918:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2691c:	ldrb	r3, [r3, #40]	; 0x28
   26920:	cmp	r3, #0
   26924:	beq	26a40 <__assert_fail@plt+0x14354>
   26928:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2692c:	mov	r2, #0
   26930:	str	r2, [r3, #92]	; 0x5c
   26934:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26938:	mov	r2, #0
   2693c:	str	r2, [r3, #28]
   26940:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26944:	mov	r2, #0
   26948:	str	r2, [r3, #24]
   2694c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26950:	mov	r2, #0
   26954:	str	r2, [r3, #40]	; 0x28
   26958:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2695c:	mov	r2, #0
   26960:	str	r2, [r3, #44]	; 0x2c
   26964:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26968:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2696c:	sub	r3, r2, r3
   26970:	sub	r3, r3, #1
   26974:	mov	r2, r3
   26978:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2697c:	str	r2, [r3, #32]
   26980:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26984:	add	r0, r3, #4
   26988:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2698c:	add	r3, r3, #48	; 0x30
   26990:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26994:	mov	r1, r3
   26998:	bl	28504 <__assert_fail@plt+0x15e18>
   2699c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   269a0:	str	r3, [fp, #-28]	; 0xffffffe4
   269a4:	b	26a28 <__assert_fail@plt+0x1433c>
   269a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   269ac:	add	r4, r3, #4
   269b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   269b4:	add	r5, r3, #48	; 0x30
   269b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   269bc:	lsl	r3, r3, #2
   269c0:	ldr	r2, [fp, #-104]	; 0xffffff98
   269c4:	add	r3, r2, r3
   269c8:	ldr	r6, [r3]
   269cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   269d0:	lsl	r3, r3, #2
   269d4:	ldr	r2, [fp, #-104]	; 0xffffff98
   269d8:	add	r3, r2, r3
   269dc:	ldr	r3, [r3]
   269e0:	mov	r0, r3
   269e4:	bl	123bc <strlen@plt>
   269e8:	mov	r3, r0
   269ec:	add	r2, r3, #1
   269f0:	mov	r3, #1
   269f4:	str	r3, [sp, #8]
   269f8:	mov	r3, #0
   269fc:	str	r3, [sp, #4]
   26a00:	mov	r3, #0
   26a04:	str	r3, [sp]
   26a08:	mov	r3, r2
   26a0c:	mov	r2, r6
   26a10:	mov	r1, r5
   26a14:	mov	r0, r4
   26a18:	bl	27ea8 <__assert_fail@plt+0x157bc>
   26a1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26a20:	add	r3, r3, #1
   26a24:	str	r3, [fp, #-28]	; 0xffffffe4
   26a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26a2c:	sub	r3, r3, #1
   26a30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26a34:	cmp	r2, r3
   26a38:	blt	269a8 <__assert_fail@plt+0x142bc>
   26a3c:	b	26b38 <__assert_fail@plt+0x1444c>
   26a40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26a44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26a48:	sub	r2, r2, r3
   26a4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26a50:	str	r2, [r3, #96]	; 0x60
   26a54:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26a58:	movw	r3, #35568	; 0x8af0
   26a5c:	movt	r3, #6
   26a60:	str	r3, [r2, #28]
   26a64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26a68:	ldr	r3, [r3, #28]
   26a6c:	mov	r0, r3
   26a70:	bl	123bc <strlen@plt>
   26a74:	mov	r2, r0
   26a78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26a7c:	str	r2, [r3, #24]
   26a80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26a84:	mov	r2, #0
   26a88:	str	r2, [r3, #40]	; 0x28
   26a8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26a90:	mov	r2, #0
   26a94:	str	r2, [r3, #44]	; 0x2c
   26a98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26a9c:	ldr	r3, [r3, #96]	; 0x60
   26aa0:	lsl	r3, r3, #2
   26aa4:	mov	r0, r3
   26aa8:	bl	3d8ec <__assert_fail@plt+0x2b200>
   26aac:	mov	r3, r0
   26ab0:	mov	r2, r3
   26ab4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ab8:	str	r2, [r3, #92]	; 0x5c
   26abc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ac0:	add	r0, r3, #4
   26ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ac8:	add	r3, r3, #48	; 0x30
   26acc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   26ad0:	mov	r1, r3
   26ad4:	bl	28504 <__assert_fail@plt+0x15e18>
   26ad8:	mov	r3, #0
   26adc:	str	r3, [fp, #-28]	; 0xffffffe4
   26ae0:	b	26b24 <__assert_fail@plt+0x14438>
   26ae4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26ae8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   26aec:	add	r3, r2, r3
   26af0:	lsl	r3, r3, #2
   26af4:	ldr	r2, [fp, #-104]	; 0xffffff98
   26af8:	add	r2, r2, r3
   26afc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26b00:	ldr	r1, [r3, #92]	; 0x5c
   26b04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26b08:	lsl	r3, r3, #2
   26b0c:	add	r3, r1, r3
   26b10:	ldr	r2, [r2]
   26b14:	str	r2, [r3]
   26b18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26b1c:	add	r3, r3, #1
   26b20:	str	r3, [fp, #-28]	; 0xffffffe4
   26b24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26b28:	ldr	r3, [r3, #96]	; 0x60
   26b2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26b30:	cmp	r2, r3
   26b34:	blt	26ae4 <__assert_fail@plt+0x143f8>
   26b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b3c:	lsl	r3, r3, #2
   26b40:	ldr	r2, [fp, #-104]	; 0xffffff98
   26b44:	add	r3, r2, r3
   26b48:	ldr	r3, [r3]
   26b4c:	cmp	r3, #0
   26b50:	bne	26b64 <__assert_fail@plt+0x14478>
   26b54:	ldr	r3, [fp, #-108]	; 0xffffff94
   26b58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26b5c:	str	r2, [r3]
   26b60:	b	26b74 <__assert_fail@plt+0x14488>
   26b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26b68:	add	r2, r3, #1
   26b6c:	ldr	r3, [fp, #-108]	; 0xffffff94
   26b70:	str	r2, [r3]
   26b74:	mov	r3, #1
   26b78:	mov	r0, r3
   26b7c:	sub	sp, fp, #16
   26b80:	ldrd	r4, [sp]
   26b84:	ldr	r6, [sp, #8]
   26b88:	ldr	fp, [sp, #12]
   26b8c:	add	sp, sp, #16
   26b90:	pop	{pc}		; (ldr pc, [sp], #4)
   26b94:	str	fp, [sp, #-8]!
   26b98:	str	lr, [sp, #4]
   26b9c:	add	fp, sp, #4
   26ba0:	sub	sp, sp, #48	; 0x30
   26ba4:	str	r0, [fp, #-32]	; 0xffffffe0
   26ba8:	str	r1, [fp, #-36]	; 0xffffffdc
   26bac:	sub	r1, fp, #44	; 0x2c
   26bb0:	stm	r1, {r2, r3}
   26bb4:	vstr	d0, [fp, #-52]	; 0xffffffcc
   26bb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26bbc:	add	r2, r3, #4
   26bc0:	sub	r3, fp, #32
   26bc4:	mov	r1, r2
   26bc8:	mov	r0, r3
   26bcc:	bl	27168 <__assert_fail@plt+0x14a7c>
   26bd0:	mov	r3, r0
   26bd4:	cmp	r3, #0
   26bd8:	beq	26db4 <__assert_fail@plt+0x146c8>
   26bdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26be0:	ldr	r3, [r3, #4]
   26be4:	cmp	r3, #1
   26be8:	beq	26bfc <__assert_fail@plt+0x14510>
   26bec:	cmp	r3, #0
   26bf0:	beq	26c0c <__assert_fail@plt+0x14520>
   26bf4:	cmp	r3, #2
   26bf8:	b	26c1c <__assert_fail@plt+0x14530>
   26bfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26c00:	mov	r2, #0
   26c04:	str	r2, [r3, #4]
   26c08:	b	26c1c <__assert_fail@plt+0x14530>
   26c0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26c10:	mov	r2, #1
   26c14:	str	r2, [r3, #4]
   26c18:	nop	{0}
   26c1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   26c20:	sub	r2, fp, #20
   26c24:	movw	r3, #9340	; 0x247c
   26c28:	movt	r3, #1
   26c2c:	mov	r1, #0
   26c30:	bl	3e1a4 <__assert_fail@plt+0x2bab8>
   26c34:	mov	r3, r0
   26c38:	cmp	r3, #0
   26c3c:	beq	26dac <__assert_fail@plt+0x146c0>
   26c40:	vldr	d6, [fp, #-20]	; 0xffffffec
   26c44:	vldr	d7, [fp, #-52]	; 0xffffffcc
   26c48:	vmul.f64	d7, d6, d7
   26c4c:	sub	r3, fp, #28
   26c50:	mov	r0, r3
   26c54:	vmov.f64	d0, d7
   26c58:	bl	12350 <modf@plt>
   26c5c:	vstr	d0, [fp, #-12]
   26c60:	vldr	d7, [fp, #-12]
   26c64:	vldr	d6, [pc, #356]	; 26dd0 <__assert_fail@plt+0x146e4>
   26c68:	vmul.f64	d7, d7, d6
   26c6c:	vstr	d7, [fp, #-12]
   26c70:	movw	r3, #36232	; 0x8d88
   26c74:	movt	r3, #6
   26c78:	ldr	r3, [r3]
   26c7c:	vmov	s15, r3
   26c80:	vcvt.f64.s32	d7, s15
   26c84:	vldr	d6, [fp, #-12]
   26c88:	vcmpe.f64	d6, d7
   26c8c:	vmrs	APSR_nzcv, fpscr
   26c90:	bmi	26cb4 <__assert_fail@plt+0x145c8>
   26c94:	movw	r3, #36236	; 0x8d8c
   26c98:	movt	r3, #6
   26c9c:	movw	r2, #3149	; 0xc4d
   26ca0:	movw	r1, #32364	; 0x7e6c
   26ca4:	movt	r1, #6
   26ca8:	movw	r0, #35900	; 0x8c3c
   26cac:	movt	r0, #6
   26cb0:	bl	126ec <__assert_fail@plt>
   26cb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26cb8:	vmov	s15, r3
   26cbc:	vcvt.f64.s32	d6, s15
   26cc0:	vldr	d7, [fp, #-28]	; 0xffffffe4
   26cc4:	vsub.f64	d7, d6, d7
   26cc8:	vcvt.s32.f64	s15, d7
   26ccc:	vmov	r2, s15
   26cd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26cd4:	str	r2, [r3, #8]
   26cd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   26cdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26ce0:	ldr	r3, [r3, #8]
   26ce4:	cmp	r2, r3
   26ce8:	movlt	r3, #1
   26cec:	movge	r3, #0
   26cf0:	uxtb	r2, r3
   26cf4:	vldr	d7, [fp, #-28]	; 0xffffffe4
   26cf8:	vcmpe.f64	d7, #0.0
   26cfc:	vmrs	APSR_nzcv, fpscr
   26d00:	movmi	r3, #1
   26d04:	movpl	r3, #0
   26d08:	uxtb	r3, r3
   26d0c:	eor	r3, r3, r2
   26d10:	uxtb	r3, r3
   26d14:	cmp	r3, #0
   26d18:	beq	26d30 <__assert_fail@plt+0x14644>
   26d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26d20:	ldr	r2, [fp, #4]
   26d24:	mov	r1, #0
   26d28:	mov	r0, #1
   26d2c:	bl	122b4 <error@plt>
   26d30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26d34:	vmov	s15, r3
   26d38:	vcvt.f64.s32	d6, s15
   26d3c:	vldr	d7, [fp, #-12]
   26d40:	vsub.f64	d7, d6, d7
   26d44:	vcvt.s32.f64	s15, d7
   26d48:	vmov	r2, s15
   26d4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26d50:	str	r2, [r3, #12]
   26d54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26d58:	vmov	s15, r3
   26d5c:	vcvt.f64.s32	d7, s15
   26d60:	vldr	d6, [fp, #-12]
   26d64:	vcmpe.f64	d6, d7
   26d68:	vmrs	APSR_nzcv, fpscr
   26d6c:	ble	26da4 <__assert_fail@plt+0x146b8>
   26d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26d74:	ldr	r2, [r3, #12]
   26d78:	movw	r3, #36232	; 0x8d88
   26d7c:	movt	r3, #6
   26d80:	ldr	r3, [r3]
   26d84:	add	r2, r2, r3
   26d88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26d8c:	str	r2, [r3, #12]
   26d90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26d94:	ldr	r3, [r3, #8]
   26d98:	sub	r2, r3, #1
   26d9c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26da0:	str	r2, [r3, #8]
   26da4:	mov	r3, #1
   26da8:	b	26db8 <__assert_fail@plt+0x146cc>
   26dac:	mov	r3, #0
   26db0:	b	26db8 <__assert_fail@plt+0x146cc>
   26db4:	mov	r3, #0
   26db8:	mov	r0, r3
   26dbc:	sub	sp, fp, #4
   26dc0:	ldr	fp, [sp]
   26dc4:	add	sp, sp, #4
   26dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   26dcc:	nop	{0}
   26dd0:	andeq	r0, r0, r0
   26dd4:	bicmi	ip, sp, r5, ror #26
   26dd8:	strd	r4, [sp, #-20]!	; 0xffffffec
   26ddc:	str	r6, [sp, #8]
   26de0:	str	fp, [sp, #12]
   26de4:	str	lr, [sp, #16]
   26de8:	add	fp, sp, #16
   26dec:	sub	sp, sp, #92	; 0x5c
   26df0:	str	r0, [fp, #-88]	; 0xffffffa8
   26df4:	str	r1, [fp, #-92]	; 0xffffffa4
   26df8:	str	r2, [fp, #-96]	; 0xffffffa0
   26dfc:	movw	r0, #34320	; 0x8610
   26e00:	movt	r0, #6
   26e04:	bl	12398 <gettext@plt>
   26e08:	str	r0, [fp, #-24]	; 0xffffffe8
   26e0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26e10:	ldr	r3, [r3]
   26e14:	str	r3, [fp, #-28]	; 0xffffffe4
   26e18:	sub	r3, fp, #72	; 0x48
   26e1c:	mov	r2, r3
   26e20:	ldr	r1, [fp, #-96]	; 0xffffffa0
   26e24:	ldr	r0, [fp, #-92]	; 0xffffffa4
   26e28:	bl	219e4 <__assert_fail@plt+0xf2f8>
   26e2c:	mov	r3, r0
   26e30:	eor	r3, r3, #1
   26e34:	uxtb	r3, r3
   26e38:	cmp	r3, #0
   26e3c:	beq	26e48 <__assert_fail@plt+0x1475c>
   26e40:	mov	r3, #0
   26e44:	b	27144 <__assert_fail@plt+0x14a58>
   26e48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   26e4c:	str	r3, [fp, #-32]	; 0xffffffe0
   26e50:	movw	r3, #53324	; 0xd04c
   26e54:	movt	r3, #7
   26e58:	sub	r1, fp, #80	; 0x50
   26e5c:	add	r3, r3, #28
   26e60:	ldrd	r2, [r3]
   26e64:	strd	r2, [r1]
   26e68:	sub	r2, fp, #68	; 0x44
   26e6c:	sub	r3, fp, #72	; 0x48
   26e70:	mov	r1, r2
   26e74:	mov	r0, r3
   26e78:	bl	27168 <__assert_fail@plt+0x14a7c>
   26e7c:	mov	r3, r0
   26e80:	cmp	r3, #0
   26e84:	beq	26f00 <__assert_fail@plt+0x14814>
   26e88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26e8c:	cmp	r3, #1
   26e90:	bne	26f00 <__assert_fail@plt+0x14814>
   26e94:	ldr	r2, [fp, #-80]	; 0xffffffb0
   26e98:	movw	r3, #20863	; 0x517f
   26e9c:	movt	r3, #1
   26ea0:	add	r3, r2, r3
   26ea4:	mov	r2, r3
   26ea8:	asr	r3, r2, #31
   26eac:	strd	r2, [fp, #-44]	; 0xffffffd4
   26eb0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   26eb4:	movw	r3, #20863	; 0x517f
   26eb8:	movt	r3, #1
   26ebc:	add	r3, r2, r3
   26ec0:	str	r3, [fp, #-80]	; 0xffffffb0
   26ec4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   26ec8:	mov	r2, r3
   26ecc:	asr	r3, r2, #31
   26ed0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   26ed4:	cmp	r1, r3
   26ed8:	cmpeq	r0, r2
   26edc:	beq	26f00 <__assert_fail@plt+0x14814>
   26ee0:	movw	r0, #35928	; 0x8c58
   26ee4:	movt	r0, #6
   26ee8:	bl	12398 <gettext@plt>
   26eec:	mov	r3, r0
   26ef0:	mov	r2, r3
   26ef4:	mov	r1, #0
   26ef8:	mov	r0, #1
   26efc:	bl	122b4 <error@plt>
   26f00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26f04:	str	r3, [fp, #-72]	; 0xffffffb8
   26f08:	ldr	r0, [fp, #-72]	; 0xffffffb8
   26f0c:	sub	r1, fp, #64	; 0x40
   26f10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26f14:	str	r3, [sp]
   26f18:	vldr	d0, [pc, #576]	; 27160 <__assert_fail@plt+0x14a74>
   26f1c:	sub	r3, fp, #80	; 0x50
   26f20:	ldm	r3, {r2, r3}
   26f24:	bl	26b94 <__assert_fail@plt+0x144a8>
   26f28:	mov	r3, r0
   26f2c:	eor	r3, r3, #1
   26f30:	uxtb	r3, r3
   26f34:	cmp	r3, #0
   26f38:	beq	26f50 <__assert_fail@plt+0x14864>
   26f3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   26f40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26f44:	str	r2, [r3]
   26f48:	mov	r3, #0
   26f4c:	b	27144 <__assert_fail@plt+0x14a58>
   26f50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   26f54:	ldr	r0, [fp, #-88]	; 0xffffffa8
   26f58:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   26f5c:	str	r0, [fp, #-48]	; 0xffffffd0
   26f60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26f64:	add	r1, r3, #40	; 0x28
   26f68:	sub	r0, fp, #64	; 0x40
   26f6c:	ldrd	r2, [r0]
   26f70:	strd	r2, [r1]
   26f74:	ldrd	r2, [r0, #8]
   26f78:	strd	r2, [r1, #8]
   26f7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   26f80:	mov	r0, r3
   26f84:	bl	218d0 <__assert_fail@plt+0xf1e4>
   26f88:	vmov.f32	s15, s0
   26f8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26f90:	vstr	s15, [r3, #28]
   26f94:	movw	r3, #53324	; 0xd04c
   26f98:	movt	r3, #7
   26f9c:	ldr	r3, [r3, #44]	; 0x2c
   26fa0:	and	r3, r3, #1
   26fa4:	cmp	r3, #0
   26fa8:	beq	27140 <__assert_fail@plt+0x14a54>
   26fac:	movw	r3, #50984	; 0xc728
   26fb0:	movt	r3, #7
   26fb4:	ldr	r0, [r3]
   26fb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26fbc:	ldr	r3, [r3, #4]
   26fc0:	mov	r2, r3
   26fc4:	movw	r1, #35992	; 0x8c98
   26fc8:	movt	r1, #6
   26fcc:	bl	123f8 <fprintf@plt>
   26fd0:	movw	r3, #50984	; 0xc728
   26fd4:	movt	r3, #7
   26fd8:	ldr	r0, [r3]
   26fdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26fe0:	cmp	r3, #0
   26fe4:	beq	27024 <__assert_fail@plt+0x14938>
   26fe8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26fec:	cmp	r3, #1
   26ff0:	beq	27018 <__assert_fail@plt+0x1492c>
   26ff4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26ff8:	cmp	r3, #2
   26ffc:	bne	2700c <__assert_fail@plt+0x14920>
   27000:	movw	r2, #36008	; 0x8ca8
   27004:	movt	r2, #6
   27008:	b	2702c <__assert_fail@plt+0x14940>
   2700c:	movw	r2, #36012	; 0x8cac
   27010:	movt	r2, #6
   27014:	b	2702c <__assert_fail@plt+0x14940>
   27018:	movw	r2, #36016	; 0x8cb0
   2701c:	movt	r2, #6
   27020:	b	2702c <__assert_fail@plt+0x14940>
   27024:	movw	r2, #36020	; 0x8cb4
   27028:	movt	r2, #6
   2702c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27030:	cmp	r3, #0
   27034:	beq	27074 <__assert_fail@plt+0x14988>
   27038:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2703c:	cmp	r3, #1
   27040:	beq	27068 <__assert_fail@plt+0x1497c>
   27044:	ldr	r3, [fp, #-60]	; 0xffffffc4
   27048:	cmp	r3, #2
   2704c:	bne	2705c <__assert_fail@plt+0x14970>
   27050:	movw	r3, #36024	; 0x8cb8
   27054:	movt	r3, #6
   27058:	b	2707c <__assert_fail@plt+0x14990>
   2705c:	movw	r3, #36028	; 0x8cbc
   27060:	movt	r3, #6
   27064:	b	2707c <__assert_fail@plt+0x14990>
   27068:	movw	r3, #36032	; 0x8cc0
   2706c:	movt	r3, #6
   27070:	b	2707c <__assert_fail@plt+0x14990>
   27074:	movw	r3, #36036	; 0x8cc4
   27078:	movt	r3, #6
   2707c:	movw	r1, #36040	; 0x8cc8
   27080:	movt	r1, #6
   27084:	bl	123f8 <fprintf@plt>
   27088:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2708c:	ldr	r3, [r3, #48]	; 0x30
   27090:	str	r3, [fp, #-84]	; 0xffffffac
   27094:	movw	r3, #50984	; 0xc728
   27098:	movt	r3, #7
   2709c:	ldr	r6, [r3]
   270a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   270a4:	ldr	r3, [r3, #48]	; 0x30
   270a8:	mov	r4, r3
   270ac:	asr	r5, r4, #31
   270b0:	sub	r3, fp, #84	; 0x54
   270b4:	mov	r0, r3
   270b8:	bl	12170 <ctime@plt>
   270bc:	mov	r3, r0
   270c0:	str	r3, [sp]
   270c4:	mov	r2, r4
   270c8:	mov	r3, r5
   270cc:	movw	r1, #36064	; 0x8ce0
   270d0:	movt	r1, #6
   270d4:	mov	r0, r6
   270d8:	bl	123f8 <fprintf@plt>
   270dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   270e0:	cmp	r3, #2
   270e4:	bne	27140 <__assert_fail@plt+0x14a54>
   270e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   270ec:	ldr	r3, [r3, #48]	; 0x30
   270f0:	add	r3, r3, #86016	; 0x15000
   270f4:	add	r3, r3, #384	; 0x180
   270f8:	str	r3, [fp, #-84]	; 0xffffffac
   270fc:	movw	r3, #50984	; 0xc728
   27100:	movt	r3, #7
   27104:	ldr	r6, [r3]
   27108:	ldr	r3, [fp, #-84]	; 0xffffffac
   2710c:	mov	r4, r3
   27110:	asr	r5, r4, #31
   27114:	sub	r3, fp, #84	; 0x54
   27118:	mov	r0, r3
   2711c:	bl	12170 <ctime@plt>
   27120:	mov	r3, r0
   27124:	str	r3, [sp]
   27128:	mov	r2, r4
   2712c:	mov	r3, r5
   27130:	movw	r1, #36072	; 0x8ce8
   27134:	movt	r1, #6
   27138:	mov	r0, r6
   2713c:	bl	123f8 <fprintf@plt>
   27140:	mov	r3, #1
   27144:	mov	r0, r3
   27148:	sub	sp, fp, #16
   2714c:	ldrd	r4, [sp]
   27150:	ldr	r6, [sp, #8]
   27154:	ldr	fp, [sp, #12]
   27158:	add	sp, sp, #16
   2715c:	pop	{pc}		; (ldr pc, [sp], #4)
   27160:	andeq	r0, r0, r0
   27164:	rscsmi	r1, r5, r0, lsl #16
   27168:	push	{fp}		; (str fp, [sp, #-4]!)
   2716c:	add	fp, sp, #0
   27170:	sub	sp, sp, #12
   27174:	str	r0, [fp, #-8]
   27178:	str	r1, [fp, #-12]
   2717c:	ldr	r3, [fp, #-8]
   27180:	ldr	r3, [r3]
   27184:	ldrb	r3, [r3]
   27188:	cmp	r3, #43	; 0x2b
   2718c:	beq	2719c <__assert_fail@plt+0x14ab0>
   27190:	cmp	r3, #45	; 0x2d
   27194:	beq	271c0 <__assert_fail@plt+0x14ad4>
   27198:	b	271e4 <__assert_fail@plt+0x14af8>
   2719c:	ldr	r3, [fp, #-12]
   271a0:	mov	r2, #0
   271a4:	str	r2, [r3]
   271a8:	ldr	r3, [fp, #-8]
   271ac:	ldr	r3, [r3]
   271b0:	add	r2, r3, #1
   271b4:	ldr	r3, [fp, #-8]
   271b8:	str	r2, [r3]
   271bc:	b	271f4 <__assert_fail@plt+0x14b08>
   271c0:	ldr	r3, [fp, #-12]
   271c4:	mov	r2, #1
   271c8:	str	r2, [r3]
   271cc:	ldr	r3, [fp, #-8]
   271d0:	ldr	r3, [r3]
   271d4:	add	r2, r3, #1
   271d8:	ldr	r3, [fp, #-8]
   271dc:	str	r2, [r3]
   271e0:	b	271f4 <__assert_fail@plt+0x14b08>
   271e4:	ldr	r3, [fp, #-12]
   271e8:	mov	r2, #2
   271ec:	str	r2, [r3]
   271f0:	nop	{0}
   271f4:	mov	r3, #1
   271f8:	mov	r0, r3
   271fc:	add	sp, fp, #0
   27200:	pop	{fp}		; (ldr fp, [sp], #4)
   27204:	bx	lr
   27208:	str	fp, [sp, #-8]!
   2720c:	str	lr, [sp, #4]
   27210:	add	fp, sp, #4
   27214:	sub	sp, sp, #32
   27218:	str	r0, [fp, #-16]
   2721c:	str	r1, [fp, #-20]	; 0xffffffec
   27220:	str	r2, [fp, #-24]	; 0xffffffe8
   27224:	ldr	r3, [fp, #-16]
   27228:	cmp	r3, #0
   2722c:	bne	27238 <__assert_fail@plt+0x14b4c>
   27230:	mov	r3, #0
   27234:	b	272a4 <__assert_fail@plt+0x14bb8>
   27238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2723c:	cmp	r3, #0
   27240:	beq	27270 <__assert_fail@plt+0x14b84>
   27244:	sub	r3, fp, #16
   27248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2724c:	mov	r0, r3
   27250:	bl	27168 <__assert_fail@plt+0x14a7c>
   27254:	mov	r3, r0
   27258:	eor	r3, r3, #1
   2725c:	uxtb	r3, r3
   27260:	cmp	r3, #0
   27264:	beq	27270 <__assert_fail@plt+0x14b84>
   27268:	mov	r3, #0
   2726c:	b	272a4 <__assert_fail@plt+0x14bb8>
   27270:	ldr	r0, [fp, #-16]
   27274:	sub	r1, fp, #8
   27278:	movw	r3, #35692	; 0x8b6c
   2727c:	movt	r3, #6
   27280:	str	r3, [sp]
   27284:	ldr	r3, [fp, #-20]	; 0xffffffec
   27288:	mov	r2, #10
   2728c:	bl	3ec14 <__assert_fail@plt+0x2c528>
   27290:	mov	r3, r0
   27294:	cmp	r3, #0
   27298:	moveq	r3, #1
   2729c:	movne	r3, #0
   272a0:	uxtb	r3, r3
   272a4:	mov	r0, r3
   272a8:	sub	sp, fp, #4
   272ac:	ldr	fp, [sp]
   272b0:	add	sp, sp, #4
   272b4:	pop	{pc}		; (ldr pc, [sp], #4)
   272b8:	str	fp, [sp, #-8]!
   272bc:	str	lr, [sp, #4]
   272c0:	add	fp, sp, #4
   272c4:	sub	sp, sp, #40	; 0x28
   272c8:	str	r0, [fp, #-32]	; 0xffffffe0
   272cc:	str	r1, [fp, #-36]	; 0xffffffdc
   272d0:	str	r2, [fp, #-40]	; 0xffffffd8
   272d4:	sub	r3, fp, #12
   272d8:	mov	r2, r3
   272dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   272e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   272e4:	bl	219e4 <__assert_fail@plt+0xf2f8>
   272e8:	mov	r3, r0
   272ec:	cmp	r3, #0
   272f0:	beq	2745c <__assert_fail@plt+0x14d70>
   272f4:	ldr	r3, [fp, #-12]
   272f8:	sub	r2, fp, #24
   272fc:	sub	r1, fp, #20
   27300:	mov	r0, r3
   27304:	bl	27208 <__assert_fail@plt+0x14b1c>
   27308:	mov	r3, r0
   2730c:	cmp	r3, #0
   27310:	beq	2745c <__assert_fail@plt+0x14d70>
   27314:	ldr	r3, [fp, #-12]
   27318:	mov	r1, r3
   2731c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27320:	bl	1b2b0 <__assert_fail@plt+0x8bc4>
   27324:	str	r0, [fp, #-8]
   27328:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2732c:	ldr	r3, [fp, #-8]
   27330:	str	r2, [r3, #40]	; 0x28
   27334:	ldrd	r2, [fp, #-20]	; 0xffffffec
   27338:	ldr	r1, [fp, #-8]
   2733c:	strd	r2, [r1, #48]	; 0x30
   27340:	movw	r3, #53324	; 0xd04c
   27344:	movt	r3, #7
   27348:	ldr	r3, [r3, #44]	; 0x2c
   2734c:	and	r3, r3, #1
   27350:	cmp	r3, #0
   27354:	beq	27454 <__assert_fail@plt+0x14d68>
   27358:	movw	r3, #50984	; 0xc728
   2735c:	movt	r3, #7
   27360:	ldr	r0, [r3]
   27364:	ldr	r3, [fp, #-8]
   27368:	ldr	r3, [r3, #4]
   2736c:	mov	r2, r3
   27370:	movw	r1, #35992	; 0x8c98
   27374:	movt	r1, #6
   27378:	bl	123f8 <fprintf@plt>
   2737c:	movw	r3, #50984	; 0xc728
   27380:	movt	r3, #7
   27384:	ldr	r0, [r3]
   27388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2738c:	cmp	r3, #0
   27390:	beq	273d0 <__assert_fail@plt+0x14ce4>
   27394:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27398:	cmp	r3, #1
   2739c:	beq	273c4 <__assert_fail@plt+0x14cd8>
   273a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   273a4:	cmp	r3, #2
   273a8:	bne	273b8 <__assert_fail@plt+0x14ccc>
   273ac:	movw	r2, #36008	; 0x8ca8
   273b0:	movt	r2, #6
   273b4:	b	273d8 <__assert_fail@plt+0x14cec>
   273b8:	movw	r2, #36012	; 0x8cac
   273bc:	movt	r2, #6
   273c0:	b	273d8 <__assert_fail@plt+0x14cec>
   273c4:	movw	r2, #36016	; 0x8cb0
   273c8:	movt	r2, #6
   273cc:	b	273d8 <__assert_fail@plt+0x14cec>
   273d0:	movw	r2, #36020	; 0x8cb4
   273d4:	movt	r2, #6
   273d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   273dc:	cmp	r3, #0
   273e0:	beq	27420 <__assert_fail@plt+0x14d34>
   273e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   273e8:	cmp	r3, #1
   273ec:	beq	27414 <__assert_fail@plt+0x14d28>
   273f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   273f4:	cmp	r3, #2
   273f8:	bne	27408 <__assert_fail@plt+0x14d1c>
   273fc:	movw	r3, #36100	; 0x8d04
   27400:	movt	r3, #6
   27404:	b	27428 <__assert_fail@plt+0x14d3c>
   27408:	movw	r3, #36028	; 0x8cbc
   2740c:	movt	r3, #6
   27410:	b	27428 <__assert_fail@plt+0x14d3c>
   27414:	movw	r3, #36032	; 0x8cc0
   27418:	movt	r3, #6
   2741c:	b	27428 <__assert_fail@plt+0x14d3c>
   27420:	movw	r3, #36036	; 0x8cc4
   27424:	movt	r3, #6
   27428:	movw	r1, #36040	; 0x8cc8
   2742c:	movt	r1, #6
   27430:	bl	123f8 <fprintf@plt>
   27434:	movw	r3, #50984	; 0xc728
   27438:	movt	r3, #7
   2743c:	ldr	r0, [r3]
   27440:	ldr	r3, [fp, #-8]
   27444:	ldrd	r2, [r3, #48]	; 0x30
   27448:	movw	r1, #36104	; 0x8d08
   2744c:	movt	r1, #6
   27450:	bl	123f8 <fprintf@plt>
   27454:	ldr	r3, [fp, #-8]
   27458:	b	27460 <__assert_fail@plt+0x14d74>
   2745c:	mov	r3, #0
   27460:	mov	r0, r3
   27464:	sub	sp, fp, #4
   27468:	ldr	fp, [sp]
   2746c:	add	sp, sp, #4
   27470:	pop	{pc}		; (ldr pc, [sp], #4)
   27474:	str	fp, [sp, #-8]!
   27478:	str	lr, [sp, #4]
   2747c:	add	fp, sp, #4
   27480:	sub	sp, sp, #8
   27484:	str	r0, [fp, #-8]
   27488:	str	r1, [fp, #-12]
   2748c:	ldr	r3, [fp, #-12]
   27490:	mov	r2, #0
   27494:	str	r2, [r3]
   27498:	mov	r0, #0
   2749c:	bl	399f4 <__assert_fail@plt+0x27308>
   274a0:	mov	r3, r0
   274a4:	mov	r2, r3
   274a8:	ldr	r3, [fp, #-12]
   274ac:	str	r2, [r3, #16]
   274b0:	movw	r1, #36112	; 0x8d10
   274b4:	movt	r1, #6
   274b8:	ldr	r0, [fp, #-8]
   274bc:	bl	11ffc <strcmp@plt>
   274c0:	mov	r3, r0
   274c4:	cmp	r3, #0
   274c8:	bne	274fc <__assert_fail@plt+0x14e10>
   274cc:	movw	r3, #50984	; 0xc728
   274d0:	movt	r3, #7
   274d4:	ldr	r2, [r3]
   274d8:	ldr	r3, [fp, #-12]
   274dc:	str	r2, [r3, #4]
   274e0:	movw	r0, #36124	; 0x8d1c
   274e4:	movt	r0, #6
   274e8:	bl	12398 <gettext@plt>
   274ec:	mov	r2, r0
   274f0:	ldr	r3, [fp, #-12]
   274f4:	str	r2, [r3, #8]
   274f8:	b	275a0 <__assert_fail@plt+0x14eb4>
   274fc:	movw	r1, #36140	; 0x8d2c
   27500:	movt	r1, #6
   27504:	ldr	r0, [fp, #-8]
   27508:	bl	11ffc <strcmp@plt>
   2750c:	mov	r3, r0
   27510:	cmp	r3, #0
   27514:	bne	27548 <__assert_fail@plt+0x14e5c>
   27518:	movw	r3, #50996	; 0xc734
   2751c:	movt	r3, #7
   27520:	ldr	r2, [r3]
   27524:	ldr	r3, [fp, #-12]
   27528:	str	r2, [r3, #4]
   2752c:	movw	r0, #36152	; 0x8d38
   27530:	movt	r0, #6
   27534:	bl	12398 <gettext@plt>
   27538:	mov	r2, r0
   2753c:	ldr	r3, [fp, #-12]
   27540:	str	r2, [r3, #8]
   27544:	b	275a0 <__assert_fail@plt+0x14eb4>
   27548:	movw	r3, #53280	; 0xd020
   2754c:	movt	r3, #7
   27550:	ldr	r3, [r3, #36]	; 0x24
   27554:	ldr	r1, [fp, #-8]
   27558:	mov	r0, r3
   2755c:	bl	1d890 <__assert_fail@plt+0xb1a4>
   27560:	mov	r2, r0
   27564:	ldr	r3, [fp, #-12]
   27568:	str	r2, [r3, #4]
   2756c:	ldr	r3, [fp, #-12]
   27570:	ldr	r2, [fp, #-8]
   27574:	str	r2, [r3, #8]
   27578:	ldr	r3, [fp, #-12]
   2757c:	ldr	r3, [r3, #4]
   27580:	cmp	r3, #0
   27584:	bne	275a0 <__assert_fail@plt+0x14eb4>
   27588:	bl	12404 <__errno_location@plt>
   2758c:	mov	r3, r0
   27590:	ldr	r3, [r3]
   27594:	ldr	r1, [fp, #-8]
   27598:	mov	r0, r3
   2759c:	bl	1d598 <__assert_fail@plt+0xaeac>
   275a0:	ldr	r3, [fp, #-12]
   275a4:	ldr	r3, [r3, #4]
   275a8:	mov	r0, r3
   275ac:	bl	26174 <__assert_fail@plt+0x13a88>
   275b0:	mov	r3, r0
   275b4:	mov	r2, r3
   275b8:	ldr	r3, [fp, #-12]
   275bc:	strb	r2, [r3, #12]
   275c0:	nop	{0}
   275c4:	sub	sp, fp, #4
   275c8:	ldr	fp, [sp]
   275cc:	add	sp, sp, #4
   275d0:	pop	{pc}		; (ldr pc, [sp], #4)
   275d4:	str	fp, [sp, #-8]!
   275d8:	str	lr, [sp, #4]
   275dc:	add	fp, sp, #4
   275e0:	sub	sp, sp, #8
   275e4:	str	r0, [fp, #-8]
   275e8:	ldr	r1, [fp, #-8]
   275ec:	movw	r0, #36140	; 0x8d2c
   275f0:	movt	r0, #6
   275f4:	bl	27474 <__assert_fail@plt+0x14d88>
   275f8:	nop	{0}
   275fc:	sub	sp, fp, #4
   27600:	ldr	fp, [sp]
   27604:	add	sp, sp, #4
   27608:	pop	{pc}		; (ldr pc, [sp], #4)
   2760c:	str	fp, [sp, #-8]!
   27610:	str	lr, [sp, #4]
   27614:	add	fp, sp, #4
   27618:	sub	sp, sp, #24
   2761c:	str	r0, [fp, #-8]
   27620:	str	r1, [fp, #-12]
   27624:	movw	r3, #50696	; 0xc608
   27628:	movt	r3, #7
   2762c:	ldr	r2, [r3]
   27630:	mov	r3, #0
   27634:	str	r3, [sp, #8]
   27638:	mov	r3, #0
   2763c:	str	r3, [sp, #4]
   27640:	mov	r3, #0
   27644:	str	r3, [sp]
   27648:	mov	r3, #0
   2764c:	ldr	r1, [fp, #-12]
   27650:	ldr	r0, [fp, #-8]
   27654:	bl	27ea8 <__assert_fail@plt+0x157bc>
   27658:	nop	{0}
   2765c:	sub	sp, fp, #4
   27660:	ldr	fp, [sp]
   27664:	add	sp, sp, #4
   27668:	pop	{pc}		; (ldr pc, [sp], #4)
   2766c:	str	fp, [sp, #-8]!
   27670:	str	lr, [sp, #4]
   27674:	add	fp, sp, #4
   27678:	sub	sp, sp, #48	; 0x30
   2767c:	str	r0, [fp, #-24]	; 0xffffffe8
   27680:	str	r1, [fp, #-28]	; 0xffffffe4
   27684:	str	r2, [fp, #-32]	; 0xffffffe0
   27688:	str	r3, [fp, #-36]	; 0xffffffdc
   2768c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27690:	ldr	r3, [r3, #12]
   27694:	sub	r3, r3, #1
   27698:	str	r3, [fp, #-12]
   2769c:	movw	r3, #52924	; 0xcebc
   276a0:	movt	r3, #7
   276a4:	ldr	r3, [r3]
   276a8:	cmp	r3, #0
   276ac:	bne	276d8 <__assert_fail@plt+0x14fec>
   276b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   276b4:	ldr	r3, [r3, #12]
   276b8:	add	r3, r3, #1
   276bc:	mov	r0, r3
   276c0:	bl	3d8ec <__assert_fail@plt+0x2b200>
   276c4:	mov	r3, r0
   276c8:	mov	r2, r3
   276cc:	movw	r3, #52924	; 0xcebc
   276d0:	movt	r3, #7
   276d4:	str	r2, [r3]
   276d8:	movw	r3, #52924	; 0xcebc
   276dc:	movt	r3, #7
   276e0:	ldr	r3, [r3]
   276e4:	str	r3, [fp, #-8]
   276e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   276ec:	ldr	r3, [r3, #24]
   276f0:	mov	r1, r3
   276f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   276f8:	bl	301c0 <__assert_fail@plt+0x1dad4>
   276fc:	str	r0, [fp, #-20]	; 0xffffffec
   27700:	ldr	r3, [fp, #-20]	; 0xffffffec
   27704:	cmp	r3, #0
   27708:	beq	27720 <__assert_fail@plt+0x15034>
   2770c:	ldr	r2, [fp, #-20]	; 0xffffffec
   27710:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27714:	sub	r3, r2, r3
   27718:	str	r3, [fp, #-16]
   2771c:	b	27728 <__assert_fail@plt+0x1503c>
   27720:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27724:	str	r3, [fp, #-16]
   27728:	ldr	r2, [fp, #-12]
   2772c:	ldr	r3, [fp, #-16]
   27730:	cmp	r2, r3
   27734:	bls	27844 <__assert_fail@plt+0x15158>
   27738:	ldr	r2, [fp, #-12]
   2773c:	ldr	r3, [fp, #-16]
   27740:	sub	r3, r2, r3
   27744:	str	r3, [fp, #-12]
   27748:	ldr	r2, [fp, #-16]
   2774c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   27750:	ldr	r0, [fp, #-8]
   27754:	bl	12458 <strncpy@plt>
   27758:	ldr	r2, [fp, #-8]
   2775c:	ldr	r3, [fp, #-16]
   27760:	add	r3, r2, r3
   27764:	str	r3, [fp, #-8]
   27768:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2776c:	ldr	r3, [fp, #-16]
   27770:	add	r3, r2, r3
   27774:	str	r3, [fp, #-32]	; 0xffffffe0
   27778:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2777c:	ldr	r3, [fp, #-16]
   27780:	sub	r3, r2, r3
   27784:	str	r3, [fp, #-36]	; 0xffffffdc
   27788:	ldr	r3, [fp, #-20]	; 0xffffffec
   2778c:	cmp	r3, #0
   27790:	beq	27830 <__assert_fail@plt+0x15144>
   27794:	ldr	r2, [fp, #16]
   27798:	ldr	r3, [fp, #8]
   2779c:	add	r3, r2, r3
   277a0:	ldr	r2, [fp, #-12]
   277a4:	cmp	r2, r3
   277a8:	bls	2784c <__assert_fail@plt+0x15160>
   277ac:	ldr	r2, [fp, #16]
   277b0:	ldr	r3, [fp, #8]
   277b4:	add	r3, r2, r3
   277b8:	ldr	r2, [fp, #-12]
   277bc:	sub	r3, r2, r3
   277c0:	str	r3, [fp, #-12]
   277c4:	ldr	r3, [fp, #4]
   277c8:	cmp	r3, #0
   277cc:	beq	277ec <__assert_fail@plt+0x15100>
   277d0:	ldr	r1, [fp, #4]
   277d4:	ldr	r0, [fp, #-8]
   277d8:	bl	1226c <strcpy@plt>
   277dc:	ldr	r2, [fp, #-8]
   277e0:	ldr	r3, [fp, #8]
   277e4:	add	r3, r2, r3
   277e8:	str	r3, [fp, #-8]
   277ec:	ldr	r1, [fp, #12]
   277f0:	ldr	r0, [fp, #-8]
   277f4:	bl	1226c <strcpy@plt>
   277f8:	ldr	r2, [fp, #-8]
   277fc:	ldr	r3, [fp, #16]
   27800:	add	r3, r2, r3
   27804:	str	r3, [fp, #-8]
   27808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2780c:	ldr	r3, [r3, #20]
   27810:	ldr	r2, [fp, #-32]	; 0xffffffe0
   27814:	add	r3, r2, r3
   27818:	str	r3, [fp, #-32]	; 0xffffffe0
   2781c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27820:	ldr	r3, [r3, #20]
   27824:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27828:	sub	r3, r2, r3
   2782c:	str	r3, [fp, #-36]	; 0xffffffdc
   27830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27834:	ldrb	r3, [r3]
   27838:	cmp	r3, #0
   2783c:	bne	276e8 <__assert_fail@plt+0x14ffc>
   27840:	b	27850 <__assert_fail@plt+0x15164>
   27844:	nop	{0}
   27848:	b	27850 <__assert_fail@plt+0x15164>
   2784c:	nop	{0}
   27850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27854:	ldrb	r3, [r3]
   27858:	cmp	r3, #0
   2785c:	beq	27880 <__assert_fail@plt+0x15194>
   27860:	movw	r0, #36272	; 0x8db0
   27864:	movt	r0, #6
   27868:	bl	12398 <gettext@plt>
   2786c:	mov	r3, r0
   27870:	mov	r2, r3
   27874:	mov	r1, #0
   27878:	mov	r0, #1
   2787c:	bl	122b4 <error@plt>
   27880:	ldr	r3, [fp, #-8]
   27884:	add	r2, r3, #1
   27888:	str	r2, [fp, #-8]
   2788c:	mov	r2, #0
   27890:	strb	r2, [r3]
   27894:	movw	r3, #52924	; 0xcebc
   27898:	movt	r3, #7
   2789c:	ldr	r1, [r3]
   278a0:	movw	r3, #52924	; 0xcebc
   278a4:	movt	r3, #7
   278a8:	ldr	r3, [r3]
   278ac:	ldr	r2, [fp, #-8]
   278b0:	sub	r3, r2, r3
   278b4:	mov	r2, r3
   278b8:	ldr	r3, [fp, #20]
   278bc:	str	r3, [sp, #8]
   278c0:	mov	r3, #0
   278c4:	str	r3, [sp, #4]
   278c8:	mov	r3, #0
   278cc:	str	r3, [sp]
   278d0:	mov	r3, r2
   278d4:	mov	r2, r1
   278d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   278dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   278e0:	bl	27ea8 <__assert_fail@plt+0x157bc>
   278e4:	nop	{0}
   278e8:	sub	sp, fp, #4
   278ec:	ldr	fp, [sp]
   278f0:	add	sp, sp, #4
   278f4:	pop	{pc}		; (ldr pc, [sp], #4)
   278f8:	push	{fp}		; (str fp, [sp, #-4]!)
   278fc:	add	fp, sp, #0
   27900:	sub	sp, sp, #28
   27904:	str	r0, [fp, #-16]
   27908:	str	r1, [fp, #-20]	; 0xffffffec
   2790c:	str	r3, [fp, #-28]	; 0xffffffe4
   27910:	mov	r3, r2
   27914:	strb	r3, [fp, #-21]	; 0xffffffeb
   27918:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2791c:	cmp	r3, #0
   27920:	beq	27948 <__assert_fail@plt+0x1525c>
   27924:	ldr	r3, [fp, #-20]	; 0xffffffec
   27928:	ldr	r3, [r3, #36]	; 0x24
   2792c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27930:	cmp	r2, r3
   27934:	bls	27978 <__assert_fail@plt+0x1528c>
   27938:	ldr	r3, [fp, #-20]	; 0xffffffec
   2793c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27940:	str	r2, [r3, #36]	; 0x24
   27944:	b	27978 <__assert_fail@plt+0x1528c>
   27948:	ldr	r3, [fp, #-20]	; 0xffffffec
   2794c:	ldr	r3, [r3, #40]	; 0x28
   27950:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27954:	cmp	r2, r3
   27958:	bcc	2796c <__assert_fail@plt+0x15280>
   2795c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27960:	ldr	r3, [r3, #40]	; 0x28
   27964:	cmp	r3, #0
   27968:	bne	27978 <__assert_fail@plt+0x1528c>
   2796c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27970:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27974:	str	r2, [r3, #40]	; 0x28
   27978:	ldr	r3, [fp, #-20]	; 0xffffffec
   2797c:	ldr	r3, [r3, #36]	; 0x24
   27980:	cmp	r3, #0
   27984:	beq	279a0 <__assert_fail@plt+0x152b4>
   27988:	ldr	r3, [fp, #-20]	; 0xffffffec
   2798c:	ldr	r2, [r3, #40]	; 0x28
   27990:	ldr	r3, [fp, #-20]	; 0xffffffec
   27994:	ldr	r3, [r3, #36]	; 0x24
   27998:	cmp	r2, r3
   2799c:	bhi	279d8 <__assert_fail@plt+0x152ec>
   279a0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   279a4:	cmp	r3, #0
   279a8:	beq	279c8 <__assert_fail@plt+0x152dc>
   279ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   279b0:	cmn	r3, #1
   279b4:	beq	27a60 <__assert_fail@plt+0x15374>
   279b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   279bc:	add	r3, r3, #1
   279c0:	str	r3, [fp, #-28]	; 0xffffffe4
   279c4:	b	27a60 <__assert_fail@plt+0x15374>
   279c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   279cc:	lsr	r3, r3, #1
   279d0:	str	r3, [fp, #-28]	; 0xffffffe4
   279d4:	b	27a60 <__assert_fail@plt+0x15374>
   279d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   279dc:	ldr	r2, [r3, #40]	; 0x28
   279e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   279e4:	ldr	r3, [r3, #36]	; 0x24
   279e8:	sub	r3, r2, r3
   279ec:	lsr	r3, r3, #1
   279f0:	str	r3, [fp, #-8]
   279f4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   279f8:	cmp	r3, #0
   279fc:	beq	27a30 <__assert_fail@plt+0x15344>
   27a00:	ldr	r3, [fp, #-8]
   27a04:	cmp	r3, #0
   27a08:	beq	27a20 <__assert_fail@plt+0x15334>
   27a0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27a10:	ldr	r3, [fp, #-8]
   27a14:	add	r3, r2, r3
   27a18:	str	r3, [fp, #-28]	; 0xffffffe4
   27a1c:	b	27a64 <__assert_fail@plt+0x15378>
   27a20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27a24:	add	r3, r3, #1
   27a28:	str	r3, [fp, #-28]	; 0xffffffe4
   27a2c:	b	27a64 <__assert_fail@plt+0x15378>
   27a30:	ldr	r3, [fp, #-8]
   27a34:	cmp	r3, #0
   27a38:	beq	27a50 <__assert_fail@plt+0x15364>
   27a3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27a40:	ldr	r3, [fp, #-8]
   27a44:	sub	r3, r2, r3
   27a48:	str	r3, [fp, #-28]	; 0xffffffe4
   27a4c:	b	27a64 <__assert_fail@plt+0x15378>
   27a50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27a54:	sub	r3, r3, #1
   27a58:	str	r3, [fp, #-28]	; 0xffffffe4
   27a5c:	b	27a64 <__assert_fail@plt+0x15378>
   27a60:	nop	{0}
   27a64:	ldr	r3, [fp, #-16]
   27a68:	ldr	r3, [r3, #28]
   27a6c:	cmp	r3, #0
   27a70:	beq	27a9c <__assert_fail@plt+0x153b0>
   27a74:	ldr	r3, [fp, #-16]
   27a78:	ldr	r3, [r3, #28]
   27a7c:	add	r3, r3, #1
   27a80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27a84:	cmp	r2, r3
   27a88:	bhi	27a9c <__assert_fail@plt+0x153b0>
   27a8c:	ldr	r3, [fp, #-16]
   27a90:	ldr	r3, [r3, #28]
   27a94:	add	r3, r3, #1
   27a98:	str	r3, [fp, #-28]	; 0xffffffe4
   27a9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27aa0:	cmp	r3, #0
   27aa4:	bne	27ab0 <__assert_fail@plt+0x153c4>
   27aa8:	mov	r3, #1
   27aac:	str	r3, [fp, #-28]	; 0xffffffe4
   27ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27ab4:	mov	r0, r3
   27ab8:	add	sp, fp, #0
   27abc:	pop	{fp}		; (ldr fp, [sp], #4)
   27ac0:	bx	lr
   27ac4:	str	fp, [sp, #-8]!
   27ac8:	str	lr, [sp, #4]
   27acc:	add	fp, sp, #4
   27ad0:	sub	sp, sp, #24
   27ad4:	str	r0, [fp, #-16]
   27ad8:	str	r1, [fp, #-20]	; 0xffffffec
   27adc:	str	r2, [fp, #-24]	; 0xffffffe8
   27ae0:	str	r3, [fp, #-28]	; 0xffffffe4
   27ae4:	mov	r3, #0
   27ae8:	str	r3, [fp, #-8]
   27aec:	mov	r3, #0
   27af0:	str	r3, [fp, #-12]
   27af4:	b	27b34 <__assert_fail@plt+0x15448>
   27af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   27afc:	ldr	r2, [r3, #4]
   27b00:	ldr	r3, [fp, #-12]
   27b04:	add	r1, r3, #1
   27b08:	str	r1, [fp, #-12]
   27b0c:	lsl	r3, r3, #2
   27b10:	add	r2, r2, r3
   27b14:	ldr	r3, [fp, #-8]
   27b18:	add	r1, r3, #1
   27b1c:	str	r1, [fp, #-8]
   27b20:	lsl	r3, r3, #2
   27b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27b28:	add	r3, r1, r3
   27b2c:	ldr	r2, [r2]
   27b30:	str	r2, [r3]
   27b34:	ldr	r3, [fp, #-16]
   27b38:	ldr	r3, [r3, #28]
   27b3c:	ldr	r2, [fp, #-12]
   27b40:	cmp	r2, r3
   27b44:	bcc	27af8 <__assert_fail@plt+0x1540c>
   27b48:	ldr	r2, [fp, #-12]
   27b4c:	ldr	r3, [fp, #4]
   27b50:	add	r3, r2, r3
   27b54:	str	r3, [fp, #-12]
   27b58:	b	27b98 <__assert_fail@plt+0x154ac>
   27b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b60:	ldr	r2, [r3, #4]
   27b64:	ldr	r3, [fp, #-12]
   27b68:	add	r1, r3, #1
   27b6c:	str	r1, [fp, #-12]
   27b70:	lsl	r3, r3, #2
   27b74:	add	r2, r2, r3
   27b78:	ldr	r3, [fp, #-8]
   27b7c:	add	r1, r3, #1
   27b80:	str	r1, [fp, #-8]
   27b84:	lsl	r3, r3, #2
   27b88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   27b8c:	add	r3, r1, r3
   27b90:	ldr	r2, [r2]
   27b94:	str	r2, [r3]
   27b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b9c:	ldr	r3, [r3]
   27ba0:	ldr	r2, [fp, #-12]
   27ba4:	cmp	r2, r3
   27ba8:	bcs	27bbc <__assert_fail@plt+0x154d0>
   27bac:	ldr	r2, [fp, #-8]
   27bb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27bb4:	cmp	r2, r3
   27bb8:	bcc	27b5c <__assert_fail@plt+0x15470>
   27bbc:	ldr	r3, [fp, #-16]
   27bc0:	ldr	r3, [r3, #28]
   27bc4:	ldr	r2, [fp, #-8]
   27bc8:	cmp	r2, r3
   27bcc:	bcs	27bf0 <__assert_fail@plt+0x15504>
   27bd0:	movw	r3, #36752	; 0x8f90
   27bd4:	movt	r3, #6
   27bd8:	mov	r2, #242	; 0xf2
   27bdc:	movw	r1, #36292	; 0x8dc4
   27be0:	movt	r1, #6
   27be4:	movw	r0, #36304	; 0x8dd0
   27be8:	movt	r0, #6
   27bec:	bl	126ec <__assert_fail@plt>
   27bf0:	ldr	r3, [fp, #-8]
   27bf4:	lsl	r3, r3, #2
   27bf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27bfc:	add	r3, r2, r3
   27c00:	mov	r2, #0
   27c04:	str	r2, [r3]
   27c08:	ldr	r3, [fp, #-8]
   27c0c:	mov	r0, r3
   27c10:	sub	sp, fp, #4
   27c14:	ldr	fp, [sp]
   27c18:	add	sp, sp, #4
   27c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   27c20:	str	r4, [sp, #-12]!
   27c24:	str	fp, [sp, #4]
   27c28:	str	lr, [sp, #8]
   27c2c:	add	fp, sp, #8
   27c30:	sub	sp, sp, #36	; 0x24
   27c34:	str	r0, [fp, #-32]	; 0xffffffe0
   27c38:	str	r1, [fp, #-36]	; 0xffffffdc
   27c3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27c44:	bl	2760c <__assert_fail@plt+0x14f20>
   27c48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c4c:	ldr	r3, [r3]
   27c50:	cmp	r3, #0
   27c54:	bne	27c78 <__assert_fail@plt+0x1558c>
   27c58:	movw	r3, #36764	; 0x8f9c
   27c5c:	movt	r3, #6
   27c60:	movw	r2, #261	; 0x105
   27c64:	movw	r1, #36292	; 0x8dc4
   27c68:	movt	r1, #6
   27c6c:	movw	r0, #36336	; 0x8df0
   27c70:	movt	r0, #6
   27c74:	bl	126ec <__assert_fail@plt>
   27c78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c7c:	ldr	r2, [r3, #4]
   27c80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c84:	ldr	r3, [r3]
   27c88:	sub	r3, r3, #-1073741823	; 0xc0000001
   27c8c:	lsl	r3, r3, #2
   27c90:	add	r3, r2, r3
   27c94:	ldr	r3, [r3]
   27c98:	cmp	r3, #0
   27c9c:	beq	27cc0 <__assert_fail@plt+0x155d4>
   27ca0:	movw	r3, #36764	; 0x8f9c
   27ca4:	movt	r3, #6
   27ca8:	movw	r2, #262	; 0x106
   27cac:	movw	r1, #36292	; 0x8dc4
   27cb0:	movt	r1, #6
   27cb4:	movw	r0, #36356	; 0x8e04
   27cb8:	movt	r0, #6
   27cbc:	bl	126ec <__assert_fail@plt>
   27cc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27cc4:	ldr	r3, [r3]
   27cc8:	add	r3, r3, #1
   27ccc:	lsl	r3, r3, #2
   27cd0:	mov	r0, r3
   27cd4:	bl	3d8ec <__assert_fail@plt+0x2b200>
   27cd8:	mov	r3, r0
   27cdc:	str	r3, [fp, #-24]	; 0xffffffe8
   27ce0:	mov	r3, #0
   27ce4:	str	r3, [fp, #-20]	; 0xffffffec
   27ce8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27cec:	ldr	r3, [r3]
   27cf0:	str	r3, [fp, #-16]
   27cf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27cf8:	str	r3, [sp]
   27cfc:	ldr	r3, [fp, #-16]
   27d00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27d04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27d0c:	bl	27ac4 <__assert_fail@plt+0x153d8>
   27d10:	str	r0, [fp, #-28]	; 0xffffffe4
   27d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27d18:	ldr	r4, [r3, #32]
   27d1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27d20:	ldr	r1, [r3, #24]
   27d24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27d30:	blx	r4
   27d34:	mov	r3, r0
   27d38:	cmp	r3, #0
   27d3c:	beq	27d78 <__assert_fail@plt+0x1568c>
   27d40:	ldr	r3, [fp, #-16]
   27d44:	mov	r2, #1
   27d48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27d50:	bl	278f8 <__assert_fail@plt+0x1520c>
   27d54:	str	r0, [fp, #-16]
   27d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27d5c:	ldr	r3, [r3, #28]
   27d60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27d64:	sub	r3, r2, r3
   27d68:	ldr	r2, [fp, #-20]	; 0xffffffec
   27d6c:	add	r3, r2, r3
   27d70:	str	r3, [fp, #-20]	; 0xffffffec
   27d74:	b	27dc8 <__assert_fail@plt+0x156dc>
   27d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27d7c:	ldr	r3, [r3, #28]
   27d80:	add	r3, r3, #1
   27d84:	ldr	r2, [fp, #-16]
   27d88:	cmp	r2, r3
   27d8c:	bhi	27db0 <__assert_fail@plt+0x156c4>
   27d90:	movw	r0, #36400	; 0x8e30
   27d94:	movt	r0, #6
   27d98:	bl	12398 <gettext@plt>
   27d9c:	mov	r3, r0
   27da0:	mov	r2, r3
   27da4:	mov	r1, #0
   27da8:	mov	r0, #1
   27dac:	bl	122b4 <error@plt>
   27db0:	ldr	r3, [fp, #-16]
   27db4:	mov	r2, #0
   27db8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27dc0:	bl	278f8 <__assert_fail@plt+0x1520c>
   27dc4:	str	r0, [fp, #-16]
   27dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   27dcc:	add	r2, r3, #1
   27dd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27dd4:	ldr	r1, [r3]
   27dd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27ddc:	ldr	r3, [r3, #28]
   27de0:	sub	r3, r1, r3
   27de4:	cmp	r2, r3
   27de8:	bcc	27cf4 <__assert_fail@plt+0x15608>
   27dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27df0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   27df4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27dfc:	bl	28618 <__assert_fail@plt+0x15f2c>
   27e00:	nop	{0}
   27e04:	sub	sp, fp, #8
   27e08:	ldr	r4, [sp]
   27e0c:	ldr	fp, [sp, #4]
   27e10:	add	sp, sp, #8
   27e14:	pop	{pc}		; (ldr pc, [sp], #4)
   27e18:	push	{fp}		; (str fp, [sp, #-4]!)
   27e1c:	add	fp, sp, #0
   27e20:	sub	sp, sp, #20
   27e24:	str	r0, [fp, #-8]
   27e28:	str	r1, [fp, #-12]
   27e2c:	str	r2, [fp, #-16]
   27e30:	ldr	r3, [fp, #-8]
   27e34:	cmp	r3, #0
   27e38:	bne	27e78 <__assert_fail@plt+0x1578c>
   27e3c:	ldr	r3, [fp, #-12]
   27e40:	ldr	r3, [r3, #40]	; 0x28
   27e44:	cmp	r3, #0
   27e48:	beq	27e78 <__assert_fail@plt+0x1578c>
   27e4c:	ldr	r3, [fp, #-16]
   27e50:	ldr	r2, [r3]
   27e54:	ldr	r3, [fp, #-12]
   27e58:	ldr	r3, [r3, #28]
   27e5c:	sub	r2, r2, r3
   27e60:	ldr	r3, [fp, #-12]
   27e64:	ldr	r3, [r3, #40]	; 0x28
   27e68:	cmp	r2, r3
   27e6c:	bne	27e78 <__assert_fail@plt+0x1578c>
   27e70:	mov	r3, #1
   27e74:	b	27e98 <__assert_fail@plt+0x157ac>
   27e78:	ldr	r3, [fp, #-16]
   27e7c:	ldr	r2, [r3]
   27e80:	ldr	r3, [fp, #-12]
   27e84:	ldr	r3, [r3, #16]
   27e88:	cmp	r2, r3
   27e8c:	moveq	r3, #1
   27e90:	movne	r3, #0
   27e94:	uxtb	r3, r3
   27e98:	mov	r0, r3
   27e9c:	add	sp, fp, #0
   27ea0:	pop	{fp}		; (ldr fp, [sp], #4)
   27ea4:	bx	lr
   27ea8:	str	fp, [sp, #-8]!
   27eac:	str	lr, [sp, #4]
   27eb0:	add	fp, sp, #4
   27eb4:	sub	sp, sp, #24
   27eb8:	str	r0, [fp, #-16]
   27ebc:	str	r1, [fp, #-20]	; 0xffffffec
   27ec0:	str	r2, [fp, #-24]	; 0xffffffe8
   27ec4:	str	r3, [fp, #-28]	; 0xffffffe4
   27ec8:	movw	r3, #50696	; 0xc608
   27ecc:	movt	r3, #7
   27ed0:	ldr	r3, [r3]
   27ed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27ed8:	cmp	r2, r3
   27edc:	moveq	r3, #1
   27ee0:	movne	r3, #0
   27ee4:	uxtb	r3, r3
   27ee8:	str	r3, [fp, #-8]
   27eec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27ef0:	cmp	r3, #0
   27ef4:	bne	27f18 <__assert_fail@plt+0x1582c>
   27ef8:	movw	r3, #36776	; 0x8fa8
   27efc:	movt	r3, #6
   27f00:	movw	r2, #341	; 0x155
   27f04:	movw	r1, #36292	; 0x8dc4
   27f08:	movt	r1, #6
   27f0c:	movw	r0, #36452	; 0x8e64
   27f10:	movt	r0, #6
   27f14:	bl	126ec <__assert_fail@plt>
   27f18:	ldr	r3, [fp, #-8]
   27f1c:	cmp	r3, #0
   27f20:	bne	28024 <__assert_fail@plt+0x15938>
   27f24:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f28:	ldr	r2, [r3, #16]
   27f2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27f30:	add	r2, r2, r3
   27f34:	ldr	r3, [fp, #8]
   27f38:	add	r2, r2, r3
   27f3c:	ldr	r3, [fp, #-16]
   27f40:	ldr	r3, [r3, #12]
   27f44:	cmp	r2, r3
   27f48:	bls	27ffc <__assert_fail@plt+0x15910>
   27f4c:	ldr	r3, [fp, #12]
   27f50:	cmp	r3, #0
   27f54:	bne	27f70 <__assert_fail@plt+0x15884>
   27f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f5c:	ldr	r2, [r3]
   27f60:	ldr	r3, [fp, #-16]
   27f64:	ldr	r3, [r3, #28]
   27f68:	cmp	r2, r3
   27f6c:	bne	27f90 <__assert_fail@plt+0x158a4>
   27f70:	movw	r0, #36464	; 0x8e70
   27f74:	movt	r0, #6
   27f78:	bl	12398 <gettext@plt>
   27f7c:	mov	r3, r0
   27f80:	mov	r2, r3
   27f84:	mov	r1, #0
   27f88:	mov	r0, #1
   27f8c:	bl	122b4 <error@plt>
   27f90:	ldr	r3, [fp, #-16]
   27f94:	ldr	r3, [r3, #24]
   27f98:	cmp	r3, #0
   27f9c:	bne	27fd0 <__assert_fail@plt+0x158e4>
   27fa0:	ldr	r3, [fp, #-16]
   27fa4:	ldr	r3, [r3]
   27fa8:	cmp	r3, #0
   27fac:	beq	27ff0 <__assert_fail@plt+0x15904>
   27fb0:	ldr	r3, [fp, #-16]
   27fb4:	ldr	r3, [r3, #36]	; 0x24
   27fb8:	cmp	r3, #0
   27fbc:	bne	27fd0 <__assert_fail@plt+0x158e4>
   27fc0:	ldr	r3, [fp, #-16]
   27fc4:	ldr	r3, [r3, #40]	; 0x28
   27fc8:	cmp	r3, #0
   27fcc:	beq	27ff0 <__assert_fail@plt+0x15904>
   27fd0:	movw	r0, #36524	; 0x8eac
   27fd4:	movt	r0, #6
   27fd8:	bl	12398 <gettext@plt>
   27fdc:	mov	r3, r0
   27fe0:	mov	r2, r3
   27fe4:	mov	r1, #0
   27fe8:	mov	r0, #1
   27fec:	bl	122b4 <error@plt>
   27ff0:	ldr	r1, [fp, #-20]	; 0xffffffec
   27ff4:	ldr	r0, [fp, #-16]
   27ff8:	bl	27c20 <__assert_fail@plt+0x15534>
   27ffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   28000:	ldr	r1, [fp, #-16]
   28004:	ldr	r0, [fp, #12]
   28008:	bl	27e18 <__assert_fail@plt+0x1572c>
   2800c:	mov	r3, r0
   28010:	cmp	r3, #0
   28014:	beq	28024 <__assert_fail@plt+0x15938>
   28018:	ldr	r1, [fp, #-20]	; 0xffffffec
   2801c:	ldr	r0, [fp, #-16]
   28020:	bl	27c20 <__assert_fail@plt+0x15534>
   28024:	ldr	r3, [fp, #12]
   28028:	cmp	r3, #0
   2802c:	bne	2803c <__assert_fail@plt+0x15950>
   28030:	ldr	r3, [fp, #-20]	; 0xffffffec
   28034:	mov	r2, #1
   28038:	str	r2, [r3, #28]
   2803c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28040:	ldr	r2, [r3]
   28044:	ldr	r3, [fp, #-20]	; 0xffffffec
   28048:	ldr	r3, [r3, #8]
   2804c:	cmp	r2, r3
   28050:	bcc	280d8 <__assert_fail@plt+0x159ec>
   28054:	ldr	r3, [fp, #-20]	; 0xffffffec
   28058:	ldr	r3, [r3, #4]
   2805c:	cmp	r3, #0
   28060:	bne	28098 <__assert_fail@plt+0x159ac>
   28064:	ldr	r3, [fp, #-20]	; 0xffffffec
   28068:	mov	r2, #64	; 0x40
   2806c:	str	r2, [r3, #8]
   28070:	ldr	r3, [fp, #-20]	; 0xffffffec
   28074:	ldr	r3, [r3, #8]
   28078:	lsl	r3, r3, #2
   2807c:	mov	r0, r3
   28080:	bl	3d8ec <__assert_fail@plt+0x2b200>
   28084:	mov	r3, r0
   28088:	mov	r2, r3
   2808c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28090:	str	r2, [r3, #4]
   28094:	b	280d8 <__assert_fail@plt+0x159ec>
   28098:	ldr	r3, [fp, #-20]	; 0xffffffec
   2809c:	ldr	r3, [r3, #8]
   280a0:	lsl	r2, r3, #1
   280a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   280a8:	str	r2, [r3, #8]
   280ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   280b0:	ldr	r2, [r3, #4]
   280b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   280b8:	ldr	r3, [r3, #8]
   280bc:	lsl	r3, r3, #2
   280c0:	mov	r1, r3
   280c4:	mov	r0, r2
   280c8:	bl	3d9a0 <__assert_fail@plt+0x2b2b4>
   280cc:	mov	r2, r0
   280d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   280d4:	str	r2, [r3, #4]
   280d8:	ldr	r3, [fp, #-8]
   280dc:	cmp	r3, #0
   280e0:	beq	28114 <__assert_fail@plt+0x15a28>
   280e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   280e8:	ldr	r2, [r3, #4]
   280ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   280f0:	ldr	r3, [r3]
   280f4:	add	r0, r3, #1
   280f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   280fc:	str	r0, [r1]
   28100:	lsl	r3, r3, #2
   28104:	add	r3, r2, r3
   28108:	mov	r2, #0
   2810c:	str	r2, [r3]
   28110:	b	281f4 <__assert_fail@plt+0x15b08>
   28114:	ldr	r3, [fp, #-20]	; 0xffffffec
   28118:	ldr	r1, [r3, #12]
   2811c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28120:	ldr	r2, [r3, #16]
   28124:	ldr	r3, [fp, #-20]	; 0xffffffec
   28128:	ldr	r0, [r3, #4]
   2812c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28130:	ldr	r3, [r3]
   28134:	add	lr, r3, #1
   28138:	ldr	ip, [fp, #-20]	; 0xffffffec
   2813c:	str	lr, [ip]
   28140:	lsl	r3, r3, #2
   28144:	add	r3, r0, r3
   28148:	add	r2, r1, r2
   2814c:	str	r2, [r3]
   28150:	ldr	r3, [fp, #4]
   28154:	cmp	r3, #0
   28158:	beq	28194 <__assert_fail@plt+0x15aa8>
   2815c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28160:	ldr	r2, [r3, #12]
   28164:	ldr	r3, [fp, #-20]	; 0xffffffec
   28168:	ldr	r3, [r3, #16]
   2816c:	add	r3, r2, r3
   28170:	ldr	r1, [fp, #4]
   28174:	mov	r0, r3
   28178:	bl	1226c <strcpy@plt>
   2817c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28180:	ldr	r2, [r3, #16]
   28184:	ldr	r3, [fp, #8]
   28188:	add	r2, r2, r3
   2818c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28190:	str	r2, [r3, #16]
   28194:	ldr	r3, [fp, #-20]	; 0xffffffec
   28198:	ldr	r2, [r3, #12]
   2819c:	ldr	r3, [fp, #-20]	; 0xffffffec
   281a0:	ldr	r3, [r3, #16]
   281a4:	add	r3, r2, r3
   281a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   281ac:	mov	r0, r3
   281b0:	bl	1226c <strcpy@plt>
   281b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   281b8:	ldr	r2, [r3, #16]
   281bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281c0:	add	r2, r2, r3
   281c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   281c8:	str	r2, [r3, #16]
   281cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   281d0:	ldr	r1, [fp, #-16]
   281d4:	ldr	r0, [fp, #12]
   281d8:	bl	27e18 <__assert_fail@plt+0x1572c>
   281dc:	mov	r3, r0
   281e0:	cmp	r3, #0
   281e4:	beq	281f4 <__assert_fail@plt+0x15b08>
   281e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   281ec:	ldr	r0, [fp, #-16]
   281f0:	bl	27c20 <__assert_fail@plt+0x15534>
   281f4:	ldr	r3, [fp, #12]
   281f8:	cmp	r3, #0
   281fc:	beq	28210 <__assert_fail@plt+0x15b24>
   28200:	ldr	r3, [fp, #-20]	; 0xffffffec
   28204:	ldr	r2, [r3, #16]
   28208:	ldr	r3, [fp, #-20]	; 0xffffffec
   2820c:	str	r2, [r3, #20]
   28210:	nop	{0}
   28214:	sub	sp, fp, #4
   28218:	ldr	fp, [sp]
   2821c:	add	sp, sp, #4
   28220:	pop	{pc}		; (ldr pc, [sp], #4)
   28224:	str	fp, [sp, #-8]!
   28228:	str	lr, [sp, #4]
   2822c:	add	fp, sp, #4
   28230:	sub	sp, sp, #8
   28234:	mov	r0, #0
   28238:	bl	12188 <sysconf@plt>
   2823c:	str	r0, [fp, #-8]
   28240:	ldr	r3, [fp, #-8]
   28244:	cmp	r3, #0
   28248:	ble	28254 <__assert_fail@plt+0x15b68>
   2824c:	ldr	r3, [fp, #-8]
   28250:	b	28258 <__assert_fail@plt+0x15b6c>
   28254:	mvn	r3, #-2147483648	; 0x80000000
   28258:	mov	r0, r3
   2825c:	sub	sp, fp, #4
   28260:	ldr	fp, [sp]
   28264:	add	sp, sp, #4
   28268:	pop	{pc}		; (ldr pc, [sp], #4)
   2826c:	push	{fp}		; (str fp, [sp, #-4]!)
   28270:	add	fp, sp, #0
   28274:	sub	sp, sp, #20
   28278:	str	r0, [fp, #-8]
   2827c:	str	r1, [fp, #-12]
   28280:	str	r2, [fp, #-16]
   28284:	str	r3, [fp, #-20]	; 0xffffffec
   28288:	mov	r3, #0
   2828c:	mov	r0, r3
   28290:	add	sp, fp, #0
   28294:	pop	{fp}		; (ldr fp, [sp], #4)
   28298:	bx	lr
   2829c:	str	fp, [sp, #-8]!
   282a0:	str	lr, [sp, #4]
   282a4:	add	fp, sp, #4
   282a8:	sub	sp, sp, #8
   282ac:	mov	r3, #0
   282b0:	str	r3, [fp, #-8]
   282b4:	movw	r3, #50972	; 0xc71c
   282b8:	movt	r3, #7
   282bc:	ldr	r3, [r3]
   282c0:	str	r3, [fp, #-12]
   282c4:	b	282f4 <__assert_fail@plt+0x15c08>
   282c8:	ldr	r3, [fp, #-12]
   282cc:	add	r2, r3, #4
   282d0:	str	r2, [fp, #-12]
   282d4:	ldr	r3, [r3]
   282d8:	mov	r0, r3
   282dc:	bl	123bc <strlen@plt>
   282e0:	mov	r3, r0
   282e4:	add	r3, r3, #1
   282e8:	ldr	r2, [fp, #-8]
   282ec:	add	r3, r2, r3
   282f0:	str	r3, [fp, #-8]
   282f4:	ldr	r3, [fp, #-12]
   282f8:	ldr	r3, [r3]
   282fc:	cmp	r3, #0
   28300:	bne	282c8 <__assert_fail@plt+0x15bdc>
   28304:	ldr	r3, [fp, #-8]
   28308:	mov	r0, r3
   2830c:	sub	sp, fp, #4
   28310:	ldr	fp, [sp]
   28314:	add	sp, sp, #4
   28318:	pop	{pc}		; (ldr pc, [sp], #4)
   2831c:	str	fp, [sp, #-8]!
   28320:	str	lr, [sp, #4]
   28324:	add	fp, sp, #4
   28328:	sub	sp, sp, #16
   2832c:	str	r0, [fp, #-16]
   28330:	str	r1, [fp, #-20]	; 0xffffffec
   28334:	bl	2829c <__assert_fail@plt+0x15bb0>
   28338:	str	r0, [fp, #-8]
   2833c:	ldr	r3, [fp, #-16]
   28340:	mov	r2, #4096	; 0x1000
   28344:	str	r2, [r3, #8]
   28348:	bl	28224 <__assert_fail@plt+0x15b38>
   2834c:	mov	r2, r0
   28350:	ldr	r3, [fp, #-16]
   28354:	str	r2, [r3, #4]
   28358:	ldr	r3, [fp, #-16]
   2835c:	mov	r2, #0
   28360:	str	r2, [r3]
   28364:	ldr	r3, [fp, #-16]
   28368:	ldr	r3, [r3, #4]
   2836c:	ldr	r2, [fp, #-8]
   28370:	cmp	r2, r3
   28374:	bls	28380 <__assert_fail@plt+0x15c94>
   28378:	mov	r3, #1
   2837c:	b	2847c <__assert_fail@plt+0x15d90>
   28380:	ldr	r2, [fp, #-20]	; 0xffffffec
   28384:	ldr	r3, [fp, #-8]
   28388:	add	r2, r2, r3
   2838c:	ldr	r3, [fp, #-16]
   28390:	ldr	r3, [r3, #4]
   28394:	cmp	r2, r3
   28398:	bcc	283a4 <__assert_fail@plt+0x15cb8>
   2839c:	mov	r3, #2
   283a0:	b	2847c <__assert_fail@plt+0x15d90>
   283a4:	ldr	r3, [fp, #-16]
   283a8:	ldr	r2, [r3, #4]
   283ac:	ldr	r3, [fp, #-8]
   283b0:	sub	r2, r2, r3
   283b4:	ldr	r3, [fp, #-16]
   283b8:	str	r2, [r3, #4]
   283bc:	ldr	r3, [fp, #-16]
   283c0:	ldr	r2, [r3, #4]
   283c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   283c8:	sub	r2, r2, r3
   283cc:	ldr	r3, [fp, #-16]
   283d0:	str	r2, [r3, #4]
   283d4:	ldr	r3, [fp, #-16]
   283d8:	ldr	r3, [r3, #4]
   283dc:	lsr	r3, r3, #2
   283e0:	sub	r2, r3, #2
   283e4:	ldr	r3, [fp, #-16]
   283e8:	str	r2, [r3, #16]
   283ec:	ldr	r3, [fp, #-16]
   283f0:	ldr	r3, [r3, #16]
   283f4:	cmp	r3, #0
   283f8:	bne	2841c <__assert_fail@plt+0x15d30>
   283fc:	movw	r3, #36788	; 0x8fb4
   28400:	movt	r3, #6
   28404:	movw	r2, #518	; 0x206
   28408:	movw	r1, #36292	; 0x8dc4
   2840c:	movt	r1, #6
   28410:	movw	r0, #36548	; 0x8ec4
   28414:	movt	r0, #6
   28418:	bl	126ec <__assert_fail@plt>
   2841c:	ldr	r3, [fp, #-16]
   28420:	mov	r2, #0
   28424:	str	r2, [r3, #20]
   28428:	ldr	r3, [fp, #-16]
   2842c:	mov	r2, #0
   28430:	str	r2, [r3, #24]
   28434:	ldr	r3, [fp, #-16]
   28438:	mov	r2, #0
   2843c:	str	r2, [r3, #28]
   28440:	ldr	r2, [fp, #-16]
   28444:	movw	r3, #33388	; 0x826c
   28448:	movt	r3, #2
   2844c:	str	r3, [r2, #32]
   28450:	ldr	r3, [fp, #-16]
   28454:	mov	r2, #0
   28458:	str	r2, [r3, #36]	; 0x24
   2845c:	ldr	r3, [fp, #-16]
   28460:	mov	r2, #0
   28464:	str	r2, [r3, #40]	; 0x28
   28468:	ldr	r3, [fp, #-16]
   2846c:	ldr	r2, [r3, #4]
   28470:	ldr	r3, [fp, #-16]
   28474:	str	r2, [r3, #12]
   28478:	mov	r3, #0
   2847c:	mov	r0, r3
   28480:	sub	sp, fp, #4
   28484:	ldr	fp, [sp]
   28488:	add	sp, sp, #4
   2848c:	pop	{pc}		; (ldr pc, [sp], #4)
   28490:	push	{fp}		; (str fp, [sp, #-4]!)
   28494:	add	fp, sp, #0
   28498:	sub	sp, sp, #12
   2849c:	str	r0, [fp, #-8]
   284a0:	ldr	r3, [fp, #-8]
   284a4:	ldr	r3, [r3, #4]
   284a8:	cmp	r3, #131072	; 0x20000
   284ac:	bcs	284c4 <__assert_fail@plt+0x15dd8>
   284b0:	ldr	r3, [fp, #-8]
   284b4:	ldr	r2, [r3, #4]
   284b8:	ldr	r3, [fp, #-8]
   284bc:	str	r2, [r3, #12]
   284c0:	b	284f4 <__assert_fail@plt+0x15e08>
   284c4:	ldr	r3, [fp, #-8]
   284c8:	ldr	r3, [r3, #8]
   284cc:	cmp	r3, #131072	; 0x20000
   284d0:	bls	284e8 <__assert_fail@plt+0x15dfc>
   284d4:	ldr	r3, [fp, #-8]
   284d8:	ldr	r2, [r3, #8]
   284dc:	ldr	r3, [fp, #-8]
   284e0:	str	r2, [r3, #12]
   284e4:	b	284f4 <__assert_fail@plt+0x15e08>
   284e8:	ldr	r3, [fp, #-8]
   284ec:	mov	r2, #131072	; 0x20000
   284f0:	str	r2, [r3, #12]
   284f4:	nop	{0}
   284f8:	add	sp, fp, #0
   284fc:	pop	{fp}		; (ldr fp, [sp], #4)
   28500:	bx	lr
   28504:	str	fp, [sp, #-8]!
   28508:	str	lr, [sp, #4]
   2850c:	add	fp, sp, #4
   28510:	sub	sp, sp, #16
   28514:	str	r0, [fp, #-8]
   28518:	str	r1, [fp, #-12]
   2851c:	str	r2, [fp, #-16]
   28520:	ldr	r3, [fp, #-12]
   28524:	mov	r2, #0
   28528:	str	r2, [r3]
   2852c:	ldr	r3, [fp, #-12]
   28530:	mov	r2, #0
   28534:	str	r2, [r3, #16]
   28538:	ldr	r3, [fp, #-12]
   2853c:	mov	r2, #0
   28540:	str	r2, [r3, #4]
   28544:	ldr	r3, [fp, #-12]
   28548:	mov	r2, #0
   2854c:	str	r2, [r3, #8]
   28550:	ldr	r3, [fp, #-12]
   28554:	mov	r2, #0
   28558:	str	r2, [r3, #36]	; 0x24
   2855c:	ldr	r3, [fp, #-12]
   28560:	mov	r2, #0
   28564:	str	r2, [r3, #40]	; 0x28
   28568:	ldr	r3, [fp, #-8]
   2856c:	ldr	r2, [r3, #12]
   28570:	movw	r3, #63487	; 0xf7ff
   28574:	movt	r3, #32767	; 0x7fff
   28578:	cmp	r2, r3
   2857c:	bls	285a0 <__assert_fail@plt+0x15eb4>
   28580:	movw	r3, #36808	; 0x8fc8
   28584:	movt	r3, #6
   28588:	mov	r2, #572	; 0x23c
   2858c:	movw	r1, #36292	; 0x8dc4
   28590:	movt	r1, #6
   28594:	movw	r0, #36572	; 0x8edc
   28598:	movt	r0, #6
   2859c:	bl	126ec <__assert_fail@plt>
   285a0:	ldr	r3, [fp, #-8]
   285a4:	ldr	r3, [r3, #12]
   285a8:	add	r3, r3, #1
   285ac:	mov	r0, r3
   285b0:	bl	3d8ec <__assert_fail@plt+0x2b200>
   285b4:	mov	r3, r0
   285b8:	mov	r2, r3
   285bc:	ldr	r3, [fp, #-12]
   285c0:	str	r2, [r3, #12]
   285c4:	ldr	r3, [fp, #-12]
   285c8:	mov	r2, #0
   285cc:	str	r2, [r3, #20]
   285d0:	ldr	r3, [fp, #-12]
   285d4:	ldr	r2, [r3, #20]
   285d8:	ldr	r3, [fp, #-12]
   285dc:	str	r2, [r3, #16]
   285e0:	ldr	r3, [fp, #-12]
   285e4:	mov	r2, #0
   285e8:	str	r2, [r3, #28]
   285ec:	ldr	r3, [fp, #-12]
   285f0:	mvn	r2, #0
   285f4:	str	r2, [r3, #32]
   285f8:	ldr	r3, [fp, #-12]
   285fc:	ldr	r2, [fp, #-16]
   28600:	str	r2, [r3, #24]
   28604:	nop	{0}
   28608:	sub	sp, fp, #4
   2860c:	ldr	fp, [sp]
   28610:	add	sp, sp, #4
   28614:	pop	{pc}		; (ldr pc, [sp], #4)
   28618:	push	{fp}		; (str fp, [sp, #-4]!)
   2861c:	add	fp, sp, #0
   28620:	sub	sp, sp, #12
   28624:	str	r0, [fp, #-8]
   28628:	str	r1, [fp, #-12]
   2862c:	ldr	r3, [fp, #-8]
   28630:	ldr	r2, [r3, #28]
   28634:	ldr	r3, [fp, #-12]
   28638:	str	r2, [r3]
   2863c:	ldr	r3, [fp, #-12]
   28640:	ldr	r2, [r3, #20]
   28644:	ldr	r3, [fp, #-12]
   28648:	str	r2, [r3, #16]
   2864c:	ldr	r3, [fp, #-12]
   28650:	mov	r2, #0
   28654:	str	r2, [r3, #28]
   28658:	ldr	r3, [fp, #-12]
   2865c:	mvn	r2, #0
   28660:	str	r2, [r3, #32]
   28664:	nop	{0}
   28668:	add	sp, fp, #0
   2866c:	pop	{fp}		; (ldr fp, [sp], #4)
   28670:	bx	lr
   28674:	str	r4, [sp, #-12]!
   28678:	str	fp, [sp, #4]
   2867c:	str	lr, [sp, #8]
   28680:	add	fp, sp, #8
   28684:	sub	sp, sp, #36	; 0x24
   28688:	str	r0, [fp, #-32]	; 0xffffffe0
   2868c:	str	r1, [fp, #-36]	; 0xffffffdc
   28690:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28694:	bl	122f0 <getenv@plt>
   28698:	str	r0, [fp, #-16]
   2869c:	ldr	r3, [fp, #-16]
   286a0:	cmp	r3, #0
   286a4:	beq	28718 <__assert_fail@plt+0x1602c>
   286a8:	sub	r2, fp, #24
   286ac:	sub	r1, fp, #20
   286b0:	mov	r3, #0
   286b4:	str	r3, [sp]
   286b8:	mov	r3, r2
   286bc:	mov	r2, #10
   286c0:	ldr	r0, [fp, #-16]
   286c4:	bl	3e384 <__assert_fail@plt+0x2bc98>
   286c8:	mov	r3, r0
   286cc:	cmp	r3, #0
   286d0:	bne	286ec <__assert_fail@plt+0x16000>
   286d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   286d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   286dc:	cmp	r2, r3
   286e0:	bls	28718 <__assert_fail@plt+0x1602c>
   286e4:	mov	r3, #1
   286e8:	b	2871c <__assert_fail@plt+0x16030>
   286ec:	bl	12404 <__errno_location@plt>
   286f0:	mov	r3, r0
   286f4:	ldr	r4, [r3]
   286f8:	movw	r0, #36608	; 0x8f00
   286fc:	movt	r0, #6
   28700:	bl	12398 <gettext@plt>
   28704:	mov	r2, r0
   28708:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2870c:	mov	r1, r4
   28710:	mov	r0, #1
   28714:	bl	122b4 <error@plt>
   28718:	mov	r3, #0
   2871c:	mov	r0, r3
   28720:	sub	sp, fp, #8
   28724:	ldr	r4, [sp]
   28728:	ldr	fp, [sp, #4]
   2872c:	add	sp, sp, #8
   28730:	pop	{pc}		; (ldr pc, [sp], #4)
   28734:	str	fp, [sp, #-8]!
   28738:	str	lr, [sp, #4]
   2873c:	add	fp, sp, #4
   28740:	sub	sp, sp, #16
   28744:	str	r0, [fp, #-16]
   28748:	mov	r3, #0
   2874c:	str	r3, [fp, #-12]
   28750:	ldr	r3, [fp, #-12]
   28754:	str	r3, [fp, #-8]
   28758:	b	28794 <__assert_fail@plt+0x160a8>
   2875c:	ldr	r3, [fp, #-12]
   28760:	add	r3, r3, #1
   28764:	str	r3, [fp, #-12]
   28768:	ldr	r3, [fp, #-16]
   2876c:	ldr	r3, [r3]
   28770:	mov	r0, r3
   28774:	bl	123bc <strlen@plt>
   28778:	mov	r2, r0
   2877c:	ldr	r3, [fp, #-8]
   28780:	add	r3, r3, r2
   28784:	str	r3, [fp, #-8]
   28788:	ldr	r3, [fp, #-16]
   2878c:	add	r3, r3, #4
   28790:	str	r3, [fp, #-16]
   28794:	ldr	r3, [fp, #-16]
   28798:	ldr	r3, [r3]
   2879c:	cmp	r3, #0
   287a0:	bne	2875c <__assert_fail@plt+0x16070>
   287a4:	ldr	r1, [fp, #-12]
   287a8:	movw	r0, #36672	; 0x8f40
   287ac:	movt	r0, #6
   287b0:	bl	28674 <__assert_fail@plt+0x15f88>
   287b4:	mov	r3, r0
   287b8:	cmp	r3, #0
   287bc:	bne	287dc <__assert_fail@plt+0x160f0>
   287c0:	ldr	r1, [fp, #-8]
   287c4:	movw	r0, #36712	; 0x8f68
   287c8:	movt	r0, #6
   287cc:	bl	28674 <__assert_fail@plt+0x15f88>
   287d0:	mov	r3, r0
   287d4:	cmp	r3, #0
   287d8:	beq	287e4 <__assert_fail@plt+0x160f8>
   287dc:	mov	r3, #1
   287e0:	b	287e8 <__assert_fail@plt+0x160fc>
   287e4:	mov	r3, #0
   287e8:	and	r3, r3, #1
   287ec:	uxtb	r3, r3
   287f0:	mov	r0, r3
   287f4:	sub	sp, fp, #4
   287f8:	ldr	fp, [sp]
   287fc:	add	sp, sp, #4
   28800:	pop	{pc}		; (ldr pc, [sp], #4)
   28804:	str	fp, [sp, #-8]!
   28808:	str	lr, [sp, #4]
   2880c:	add	fp, sp, #4
   28810:	sub	sp, sp, #32
   28814:	str	r0, [fp, #-24]	; 0xffffffe8
   28818:	str	r1, [fp, #-28]	; 0xffffffe4
   2881c:	str	r2, [fp, #-32]	; 0xffffffe0
   28820:	mvn	r3, #0
   28824:	str	r3, [fp, #-8]
   28828:	mov	r3, #0
   2882c:	str	r3, [fp, #-12]
   28830:	sub	r3, fp, #20
   28834:	mov	r0, r3
   28838:	bl	3c264 <__assert_fail@plt+0x29b78>
   2883c:	mov	r3, r0
   28840:	cmp	r3, #0
   28844:	bne	288f0 <__assert_fail@plt+0x16204>
   28848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2884c:	bl	3c300 <__assert_fail@plt+0x29c14>
   28850:	mov	r3, r0
   28854:	cmp	r3, #0
   28858:	bne	288ac <__assert_fail@plt+0x161c0>
   2885c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28860:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28864:	blx	r3
   28868:	str	r0, [fp, #-8]
   2886c:	ldr	r3, [fp, #-8]
   28870:	cmp	r3, #0
   28874:	bge	28888 <__assert_fail@plt+0x1619c>
   28878:	bl	12404 <__errno_location@plt>
   2887c:	mov	r3, r0
   28880:	ldr	r3, [r3]
   28884:	b	2888c <__assert_fail@plt+0x161a0>
   28888:	mov	r3, #0
   2888c:	str	r3, [fp, #-12]
   28890:	sub	r3, fp, #20
   28894:	mov	r0, r3
   28898:	bl	3c300 <__assert_fail@plt+0x29c14>
   2889c:	mov	r3, r0
   288a0:	cmp	r3, #0
   288a4:	beq	288d4 <__assert_fail@plt+0x161e8>
   288a8:	b	288c0 <__assert_fail@plt+0x161d4>
   288ac:	bl	12404 <__errno_location@plt>
   288b0:	mov	r3, r0
   288b4:	ldr	r3, [r3]
   288b8:	mov	r0, r3
   288bc:	bl	31a6c <__assert_fail@plt+0x1f380>
   288c0:	bl	12404 <__errno_location@plt>
   288c4:	mov	r3, r0
   288c8:	ldr	r3, [r3]
   288cc:	mov	r0, r3
   288d0:	bl	31a6c <__assert_fail@plt+0x1f380>
   288d4:	sub	r3, fp, #20
   288d8:	mov	r0, r3
   288dc:	bl	3c364 <__assert_fail@plt+0x29c78>
   288e0:	ldr	r3, [fp, #-12]
   288e4:	cmp	r3, #0
   288e8:	beq	28914 <__assert_fail@plt+0x16228>
   288ec:	b	28904 <__assert_fail@plt+0x16218>
   288f0:	bl	12404 <__errno_location@plt>
   288f4:	mov	r3, r0
   288f8:	ldr	r3, [r3]
   288fc:	mov	r0, r3
   28900:	bl	31a24 <__assert_fail@plt+0x1f338>
   28904:	bl	12404 <__errno_location@plt>
   28908:	mov	r2, r0
   2890c:	ldr	r3, [fp, #-12]
   28910:	str	r3, [r2]
   28914:	ldr	r3, [fp, #-8]
   28918:	mov	r0, r3
   2891c:	sub	sp, fp, #4
   28920:	ldr	fp, [sp]
   28924:	add	sp, sp, #4
   28928:	pop	{pc}		; (ldr pc, [sp], #4)
   2892c:	str	fp, [sp, #-8]!
   28930:	str	lr, [sp, #4]
   28934:	add	fp, sp, #4
   28938:	sub	sp, sp, #32
   2893c:	str	r0, [fp, #-24]	; 0xffffffe8
   28940:	str	r1, [fp, #-28]	; 0xffffffe4
   28944:	str	r2, [fp, #-32]	; 0xffffffe0
   28948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2894c:	cmn	r3, #100	; 0x64
   28950:	bne	28968 <__assert_fail@plt+0x1627c>
   28954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28958:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2895c:	blx	r3
   28960:	mov	r3, r0
   28964:	b	28a68 <__assert_fail@plt+0x1637c>
   28968:	sub	r3, fp, #20
   2896c:	mov	r0, r3
   28970:	bl	3c264 <__assert_fail@plt+0x29b78>
   28974:	mov	r3, r0
   28978:	cmp	r3, #0
   2897c:	beq	28994 <__assert_fail@plt+0x162a8>
   28980:	bl	12404 <__errno_location@plt>
   28984:	mov	r3, r0
   28988:	ldr	r3, [r3]
   2898c:	mov	r0, r3
   28990:	bl	31a24 <__assert_fail@plt+0x1f338>
   28994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28998:	bl	125d8 <fchdir@plt>
   2899c:	mov	r3, r0
   289a0:	cmp	r3, #0
   289a4:	beq	289dc <__assert_fail@plt+0x162f0>
   289a8:	bl	12404 <__errno_location@plt>
   289ac:	mov	r3, r0
   289b0:	ldr	r3, [r3]
   289b4:	str	r3, [fp, #-8]
   289b8:	sub	r3, fp, #20
   289bc:	mov	r0, r3
   289c0:	bl	3c364 <__assert_fail@plt+0x29c78>
   289c4:	bl	12404 <__errno_location@plt>
   289c8:	mov	r2, r0
   289cc:	ldr	r3, [fp, #-8]
   289d0:	str	r3, [r2]
   289d4:	mvn	r3, #0
   289d8:	b	28a68 <__assert_fail@plt+0x1637c>
   289dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   289e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   289e4:	blx	r3
   289e8:	str	r0, [fp, #-12]
   289ec:	ldr	r3, [fp, #-12]
   289f0:	cmp	r3, #0
   289f4:	bge	28a08 <__assert_fail@plt+0x1631c>
   289f8:	bl	12404 <__errno_location@plt>
   289fc:	mov	r3, r0
   28a00:	ldr	r3, [r3]
   28a04:	b	28a0c <__assert_fail@plt+0x16320>
   28a08:	mov	r3, #0
   28a0c:	str	r3, [fp, #-8]
   28a10:	sub	r3, fp, #20
   28a14:	mov	r0, r3
   28a18:	bl	3c300 <__assert_fail@plt+0x29c14>
   28a1c:	mov	r3, r0
   28a20:	cmp	r3, #0
   28a24:	beq	28a3c <__assert_fail@plt+0x16350>
   28a28:	bl	12404 <__errno_location@plt>
   28a2c:	mov	r3, r0
   28a30:	ldr	r3, [r3]
   28a34:	mov	r0, r3
   28a38:	bl	31a6c <__assert_fail@plt+0x1f380>
   28a3c:	sub	r3, fp, #20
   28a40:	mov	r0, r3
   28a44:	bl	3c364 <__assert_fail@plt+0x29c78>
   28a48:	ldr	r3, [fp, #-8]
   28a4c:	cmp	r3, #0
   28a50:	beq	28a64 <__assert_fail@plt+0x16378>
   28a54:	bl	12404 <__errno_location@plt>
   28a58:	mov	r2, r0
   28a5c:	ldr	r3, [fp, #-8]
   28a60:	str	r3, [r2]
   28a64:	ldr	r3, [fp, #-12]
   28a68:	mov	r0, r3
   28a6c:	sub	sp, fp, #4
   28a70:	ldr	fp, [sp]
   28a74:	add	sp, sp, #4
   28a78:	pop	{pc}		; (ldr pc, [sp], #4)
   28a7c:	push	{fp}		; (str fp, [sp, #-4]!)
   28a80:	add	fp, sp, #0
   28a84:	sub	sp, sp, #20
   28a88:	str	r0, [fp, #-16]
   28a8c:	str	r1, [fp, #-20]	; 0xffffffec
   28a90:	ldr	r3, [fp, #-16]
   28a94:	cmp	r3, #0
   28a98:	bne	28aa8 <__assert_fail@plt+0x163bc>
   28a9c:	mov	r3, #16
   28aa0:	str	r3, [fp, #-8]
   28aa4:	b	28adc <__assert_fail@plt+0x163f0>
   28aa8:	ldr	r3, [fp, #-16]
   28aac:	str	r3, [fp, #-8]
   28ab0:	b	28adc <__assert_fail@plt+0x163f0>
   28ab4:	ldr	r3, [fp, #-8]
   28ab8:	lsl	r3, r3, #1
   28abc:	ldr	r2, [fp, #-8]
   28ac0:	cmp	r2, r3
   28ac4:	bls	28ad0 <__assert_fail@plt+0x163e4>
   28ac8:	ldr	r3, [fp, #-20]	; 0xffffffec
   28acc:	b	28af0 <__assert_fail@plt+0x16404>
   28ad0:	ldr	r3, [fp, #-8]
   28ad4:	lsl	r3, r3, #1
   28ad8:	str	r3, [fp, #-8]
   28adc:	ldr	r2, [fp, #-8]
   28ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   28ae4:	cmp	r2, r3
   28ae8:	bcc	28ab4 <__assert_fail@plt+0x163c8>
   28aec:	ldr	r3, [fp, #-8]
   28af0:	mov	r0, r3
   28af4:	add	sp, fp, #0
   28af8:	pop	{fp}		; (ldr fp, [sp], #4)
   28afc:	bx	lr
   28b00:	str	fp, [sp, #-8]!
   28b04:	str	lr, [sp, #4]
   28b08:	add	fp, sp, #4
   28b0c:	sub	sp, sp, #32
   28b10:	str	r0, [fp, #-24]	; 0xffffffe8
   28b14:	str	r1, [fp, #-28]	; 0xffffffe4
   28b18:	str	r2, [fp, #-32]	; 0xffffffe0
   28b1c:	bl	12404 <__errno_location@plt>
   28b20:	mov	r3, r0
   28b24:	ldr	r3, [r3]
   28b28:	str	r3, [fp, #-8]
   28b2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28b30:	cmp	r3, #0
   28b34:	bne	28b58 <__assert_fail@plt+0x1646c>
   28b38:	movw	r3, #36868	; 0x9004
   28b3c:	movt	r3, #6
   28b40:	mov	r2, #71	; 0x47
   28b44:	movw	r1, #36824	; 0x8fd8
   28b48:	movt	r1, #6
   28b4c:	movw	r0, #36836	; 0x8fe4
   28b50:	movt	r0, #6
   28b54:	bl	126ec <__assert_fail@plt>
   28b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b5c:	ldr	r3, [r3]
   28b60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   28b64:	mov	r0, r3
   28b68:	bl	28a7c <__assert_fail@plt+0x16390>
   28b6c:	str	r0, [fp, #-16]
   28b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28b74:	ldr	r3, [r3]
   28b78:	cmp	r3, #0
   28b7c:	bne	28bcc <__assert_fail@plt+0x164e0>
   28b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28b84:	cmp	r3, #0
   28b88:	beq	28bac <__assert_fail@plt+0x164c0>
   28b8c:	movw	r3, #36868	; 0x9004
   28b90:	movt	r3, #6
   28b94:	mov	r2, #79	; 0x4f
   28b98:	movw	r1, #36824	; 0x8fd8
   28b9c:	movt	r1, #6
   28ba0:	movw	r0, #36848	; 0x8ff0
   28ba4:	movt	r0, #6
   28ba8:	bl	126ec <__assert_fail@plt>
   28bac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28bb0:	ldr	r2, [fp, #-16]
   28bb4:	str	r2, [r3]
   28bb8:	ldr	r0, [fp, #-16]
   28bbc:	bl	43510 <__assert_fail@plt+0x30e24>
   28bc0:	mov	r3, r0
   28bc4:	str	r3, [fp, #-12]
   28bc8:	b	28c24 <__assert_fail@plt+0x16538>
   28bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28bd0:	ldr	r3, [r3]
   28bd4:	ldr	r2, [fp, #-16]
   28bd8:	cmp	r2, r3
   28bdc:	beq	28c1c <__assert_fail@plt+0x16530>
   28be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28be4:	ldr	r2, [fp, #-16]
   28be8:	str	r2, [r3]
   28bec:	ldr	r1, [fp, #-16]
   28bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28bf4:	bl	446e8 <__assert_fail@plt+0x31ffc>
   28bf8:	str	r0, [fp, #-12]
   28bfc:	ldr	r3, [fp, #-12]
   28c00:	cmp	r3, #0
   28c04:	bne	28c24 <__assert_fail@plt+0x16538>
   28c08:	bl	12404 <__errno_location@plt>
   28c0c:	mov	r3, r0
   28c10:	ldr	r3, [r3]
   28c14:	str	r3, [fp, #-8]
   28c18:	b	28c24 <__assert_fail@plt+0x16538>
   28c1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28c20:	str	r3, [fp, #-12]
   28c24:	ldr	r3, [fp, #-12]
   28c28:	cmp	r3, #0
   28c2c:	beq	28c40 <__assert_fail@plt+0x16554>
   28c30:	bl	12404 <__errno_location@plt>
   28c34:	mov	r2, r0
   28c38:	ldr	r3, [fp, #-8]
   28c3c:	str	r3, [r2]
   28c40:	ldr	r3, [fp, #-12]
   28c44:	mov	r0, r3
   28c48:	sub	sp, fp, #4
   28c4c:	ldr	fp, [sp]
   28c50:	add	sp, sp, #4
   28c54:	pop	{pc}		; (ldr pc, [sp], #4)
   28c58:	str	fp, [sp, #-8]!
   28c5c:	str	lr, [sp, #4]
   28c60:	add	fp, sp, #4
   28c64:	sub	sp, sp, #24
   28c68:	str	r0, [fp, #-16]
   28c6c:	str	r1, [fp, #-20]	; 0xffffffec
   28c70:	str	r2, [fp, #-24]	; 0xffffffe8
   28c74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28c78:	ldr	r1, [fp, #-20]	; 0xffffffec
   28c7c:	ldr	r0, [fp, #-16]
   28c80:	bl	28b00 <__assert_fail@plt+0x16414>
   28c84:	str	r0, [fp, #-8]
   28c88:	ldr	r3, [fp, #-8]
   28c8c:	cmp	r3, #0
   28c90:	bne	28ca0 <__assert_fail@plt+0x165b4>
   28c94:	ldr	r0, [fp, #-16]
   28c98:	bl	3fe0c <__assert_fail@plt+0x2d720>
   28c9c:	bl	3e160 <__assert_fail@plt+0x2ba74>
   28ca0:	ldr	r3, [fp, #-8]
   28ca4:	mov	r0, r3
   28ca8:	sub	sp, fp, #4
   28cac:	ldr	fp, [sp]
   28cb0:	add	sp, sp, #4
   28cb4:	pop	{pc}		; (ldr pc, [sp], #4)
   28cb8:	str	r4, [sp, #-12]!
   28cbc:	str	fp, [sp, #4]
   28cc0:	str	lr, [sp, #8]
   28cc4:	add	fp, sp, #8
   28cc8:	sub	sp, sp, #28
   28ccc:	movw	r3, #36880	; 0x9010
   28cd0:	movt	r3, #6
   28cd4:	str	r3, [fp, #-24]	; 0xffffffe8
   28cd8:	mvn	r3, #0
   28cdc:	str	r3, [fp, #-16]
   28ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   28ce4:	bl	2bb3c <__assert_fail@plt+0x19450>
   28ce8:	str	r0, [fp, #-28]	; 0xffffffe4
   28cec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28cf0:	cmp	r3, #0
   28cf4:	beq	28e18 <__assert_fail@plt+0x1672c>
   28cf8:	mov	r3, #0
   28cfc:	str	r3, [fp, #-20]	; 0xffffffec
   28d00:	bl	12404 <__errno_location@plt>
   28d04:	mov	r2, r0
   28d08:	mov	r3, #0
   28d0c:	str	r3, [r2]
   28d10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28d14:	bl	1259c <readdir64@plt>
   28d18:	str	r0, [fp, #-32]	; 0xffffffe0
   28d1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28d20:	cmp	r3, #0
   28d24:	bne	28d7c <__assert_fail@plt+0x16690>
   28d28:	bl	12404 <__errno_location@plt>
   28d2c:	mov	r3, r0
   28d30:	ldr	r3, [r3]
   28d34:	cmp	r3, #0
   28d38:	beq	28df8 <__assert_fail@plt+0x1670c>
   28d3c:	bl	12404 <__errno_location@plt>
   28d40:	mov	r3, r0
   28d44:	ldr	r4, [r3]
   28d48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28d4c:	mov	r1, #8
   28d50:	mov	r0, #0
   28d54:	bl	3bc98 <__assert_fail@plt+0x295ac>
   28d58:	mov	r3, r0
   28d5c:	movw	r2, #36896	; 0x9020
   28d60:	movt	r2, #6
   28d64:	mov	r1, r4
   28d68:	mov	r0, #0
   28d6c:	bl	122b4 <error@plt>
   28d70:	mov	r3, #0
   28d74:	str	r3, [fp, #-20]	; 0xffffffec
   28d78:	b	28df8 <__assert_fail@plt+0x1670c>
   28d7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28d80:	ldrb	r3, [r3, #19]
   28d84:	cmp	r3, #46	; 0x2e
   28d88:	bne	28dbc <__assert_fail@plt+0x166d0>
   28d8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28d90:	ldrb	r3, [r3, #20]
   28d94:	cmp	r3, #0
   28d98:	beq	28d00 <__assert_fail@plt+0x16614>
   28d9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28da0:	ldrb	r3, [r3, #20]
   28da4:	cmp	r3, #46	; 0x2e
   28da8:	bne	28dbc <__assert_fail@plt+0x166d0>
   28dac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28db0:	ldrb	r3, [r3, #21]
   28db4:	cmp	r3, #0
   28db8:	beq	28d00 <__assert_fail@plt+0x16614>
   28dbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28dc0:	add	r3, r3, #19
   28dc4:	mov	r1, #0
   28dc8:	mov	r0, r3
   28dcc:	bl	2aeec <__assert_fail@plt+0x18800>
   28dd0:	str	r0, [fp, #-36]	; 0xffffffdc
   28dd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28dd8:	ldr	r3, [fp, #-16]
   28ddc:	cmp	r2, r3
   28de0:	ble	28dec <__assert_fail@plt+0x16700>
   28de4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28de8:	str	r3, [fp, #-16]
   28dec:	mov	r3, #1
   28df0:	str	r3, [fp, #-20]	; 0xffffffec
   28df4:	b	28d00 <__assert_fail@plt+0x16614>
   28df8:	nop	{0}
   28dfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   28e00:	bl	126bc <closedir@plt>
   28e04:	ldr	r3, [fp, #-20]	; 0xffffffec
   28e08:	cmp	r3, #0
   28e0c:	beq	28e18 <__assert_fail@plt+0x1672c>
   28e10:	ldr	r3, [fp, #-16]
   28e14:	b	28e1c <__assert_fail@plt+0x16730>
   28e18:	mvn	r3, #0
   28e1c:	mov	r0, r3
   28e20:	sub	sp, fp, #8
   28e24:	ldr	r4, [sp]
   28e28:	ldr	fp, [sp, #4]
   28e2c:	add	sp, sp, #8
   28e30:	pop	{pc}		; (ldr pc, [sp], #4)
   28e34:	str	fp, [sp, #-8]!
   28e38:	str	lr, [sp, #4]
   28e3c:	add	fp, sp, #4
   28e40:	sub	sp, sp, #24
   28e44:	bl	28cb8 <__assert_fail@plt+0x165cc>
   28e48:	str	r0, [fp, #-8]
   28e4c:	ldr	r3, [fp, #-8]
   28e50:	cmp	r3, #0
   28e54:	blt	28e60 <__assert_fail@plt+0x16774>
   28e58:	ldr	r3, [fp, #-8]
   28e5c:	b	28ecc <__assert_fail@plt+0x167e0>
   28e60:	mov	r0, #4
   28e64:	bl	12188 <sysconf@plt>
   28e68:	str	r0, [fp, #-8]
   28e6c:	ldr	r3, [fp, #-8]
   28e70:	cmn	r3, #1
   28e74:	bne	28e80 <__assert_fail@plt+0x16794>
   28e78:	mov	r3, #20
   28e7c:	str	r3, [fp, #-8]
   28e80:	sub	r3, fp, #28
   28e84:	mov	r1, r3
   28e88:	mov	r0, #7
   28e8c:	bl	12194 <getrlimit64@plt>
   28e90:	mov	r3, r0
   28e94:	cmp	r3, #0
   28e98:	bne	28ec8 <__assert_fail@plt+0x167dc>
   28e9c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   28ea0:	mvn	r0, #0
   28ea4:	mvn	r1, #0
   28ea8:	cmp	r3, r1
   28eac:	cmpeq	r2, r0
   28eb0:	bne	28ebc <__assert_fail@plt+0x167d0>
   28eb4:	ldr	r3, [fp, #-8]
   28eb8:	b	28ecc <__assert_fail@plt+0x167e0>
   28ebc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   28ec0:	mov	r3, r2
   28ec4:	b	28ecc <__assert_fail@plt+0x167e0>
   28ec8:	ldr	r3, [fp, #-8]
   28ecc:	mov	r0, r3
   28ed0:	sub	sp, fp, #4
   28ed4:	ldr	fp, [sp]
   28ed8:	add	sp, sp, #4
   28edc:	pop	{pc}		; (ldr pc, [sp], #4)
   28ee0:	str	fp, [sp, #-8]!
   28ee4:	str	lr, [sp, #4]
   28ee8:	add	fp, sp, #4
   28eec:	sub	sp, sp, #544	; 0x220
   28ef0:	str	r0, [fp, #-536]	; 0xfffffde8
   28ef4:	str	r1, [fp, #-540]	; 0xfffffde4
   28ef8:	str	r2, [fp, #-544]	; 0xfffffde0
   28efc:	str	r3, [fp, #-548]	; 0xfffffddc
   28f00:	mov	r3, #0
   28f04:	str	r3, [fp, #-20]	; 0xffffffec
   28f08:	b	2907c <__assert_fail@plt+0x16990>
   28f0c:	ldr	r2, [fp, #-540]	; 0xfffffde4
   28f10:	ldr	r3, [fp, #-536]	; 0xfffffde8
   28f14:	sub	r3, r2, r3
   28f18:	str	r3, [fp, #-12]
   28f1c:	ldr	r3, [fp, #-12]
   28f20:	cmp	r3, #64	; 0x40
   28f24:	ble	28f30 <__assert_fail@plt+0x16844>
   28f28:	mov	r3, #64	; 0x40
   28f2c:	str	r3, [fp, #-12]
   28f30:	mov	r3, #0
   28f34:	str	r3, [fp, #-8]
   28f38:	b	28fa8 <__assert_fail@plt+0x168bc>
   28f3c:	sub	r3, fp, #4
   28f40:	sub	r2, r3, #528	; 0x210
   28f44:	ldr	r3, [fp, #-8]
   28f48:	lsl	r3, r3, #3
   28f4c:	add	r3, r2, r3
   28f50:	add	r3, r3, #4
   28f54:	mov	r2, #5
   28f58:	strh	r2, [r3]
   28f5c:	sub	r3, fp, #4
   28f60:	sub	r2, r3, #528	; 0x210
   28f64:	ldr	r3, [fp, #-8]
   28f68:	lsl	r3, r3, #3
   28f6c:	add	r3, r2, r3
   28f70:	add	r3, r3, #6
   28f74:	mov	r2, #0
   28f78:	strh	r2, [r3]
   28f7c:	ldr	r2, [fp, #-536]	; 0xfffffde8
   28f80:	ldr	r3, [fp, #-8]
   28f84:	add	r2, r2, r3
   28f88:	ldr	r3, [fp, #-8]
   28f8c:	lsl	r3, r3, #3
   28f90:	sub	r1, fp, #4
   28f94:	add	r3, r1, r3
   28f98:	str	r2, [r3, #-528]	; 0xfffffdf0
   28f9c:	ldr	r3, [fp, #-8]
   28fa0:	add	r3, r3, #1
   28fa4:	str	r3, [fp, #-8]
   28fa8:	ldr	r2, [fp, #-8]
   28fac:	ldr	r3, [fp, #-12]
   28fb0:	cmp	r2, r3
   28fb4:	blt	28f3c <__assert_fail@plt+0x16850>
   28fb8:	ldr	r1, [fp, #-12]
   28fbc:	sub	r3, fp, #532	; 0x214
   28fc0:	mov	r2, #0
   28fc4:	mov	r0, r3
   28fc8:	bl	1220c <poll@plt>
   28fcc:	str	r0, [fp, #-20]	; 0xffffffec
   28fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   28fd4:	cmn	r3, #1
   28fd8:	bne	28fe4 <__assert_fail@plt+0x168f8>
   28fdc:	mvn	r3, #0
   28fe0:	b	29090 <__assert_fail@plt+0x169a4>
   28fe4:	mov	r3, #0
   28fe8:	str	r3, [fp, #-16]
   28fec:	b	2905c <__assert_fail@plt+0x16970>
   28ff0:	sub	r3, fp, #4
   28ff4:	sub	r2, r3, #528	; 0x210
   28ff8:	ldr	r3, [fp, #-16]
   28ffc:	lsl	r3, r3, #3
   29000:	add	r3, r2, r3
   29004:	add	r3, r3, #6
   29008:	ldrsh	r3, [r3]
   2900c:	cmp	r3, #32
   29010:	beq	29050 <__assert_fail@plt+0x16964>
   29014:	ldr	r3, [fp, #-16]
   29018:	lsl	r3, r3, #3
   2901c:	sub	r2, fp, #4
   29020:	add	r3, r2, r3
   29024:	ldr	r2, [r3, #-528]	; 0xfffffdf0
   29028:	ldr	r3, [fp, #-544]	; 0xfffffde0
   2902c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   29030:	mov	r0, r2
   29034:	blx	r3
   29038:	str	r0, [fp, #-20]	; 0xffffffec
   2903c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29040:	cmp	r3, #0
   29044:	beq	29050 <__assert_fail@plt+0x16964>
   29048:	ldr	r3, [fp, #-20]	; 0xffffffec
   2904c:	b	29090 <__assert_fail@plt+0x169a4>
   29050:	ldr	r3, [fp, #-16]
   29054:	add	r3, r3, #1
   29058:	str	r3, [fp, #-16]
   2905c:	ldr	r2, [fp, #-16]
   29060:	ldr	r3, [fp, #-12]
   29064:	cmp	r2, r3
   29068:	blt	28ff0 <__assert_fail@plt+0x16904>
   2906c:	ldr	r2, [fp, #-536]	; 0xfffffde8
   29070:	ldr	r3, [fp, #-12]
   29074:	add	r3, r2, r3
   29078:	str	r3, [fp, #-536]	; 0xfffffde8
   2907c:	ldr	r2, [fp, #-536]	; 0xfffffde8
   29080:	ldr	r3, [fp, #-540]	; 0xfffffde4
   29084:	cmp	r2, r3
   29088:	blt	28f0c <__assert_fail@plt+0x16820>
   2908c:	mov	r3, #0
   29090:	mov	r0, r3
   29094:	sub	sp, fp, #4
   29098:	ldr	fp, [sp]
   2909c:	add	sp, sp, #4
   290a0:	pop	{pc}		; (ldr pc, [sp], #4)
   290a4:	str	fp, [sp, #-8]!
   290a8:	str	lr, [sp, #4]
   290ac:	add	fp, sp, #4
   290b0:	sub	sp, sp, #16
   290b4:	str	r0, [fp, #-16]
   290b8:	mov	r1, #1
   290bc:	ldr	r0, [fp, #-16]
   290c0:	bl	3f968 <__assert_fail@plt+0x2d27c>
   290c4:	str	r0, [fp, #-8]
   290c8:	ldr	r3, [fp, #-8]
   290cc:	and	r3, r3, #1
   290d0:	mov	r0, r3
   290d4:	sub	sp, fp, #4
   290d8:	ldr	fp, [sp]
   290dc:	add	sp, sp, #4
   290e0:	pop	{pc}		; (ldr pc, [sp], #4)
   290e4:	str	fp, [sp, #-8]!
   290e8:	str	lr, [sp, #4]
   290ec:	add	fp, sp, #4
   290f0:	sub	sp, sp, #16
   290f4:	str	r0, [fp, #-16]
   290f8:	str	r1, [fp, #-20]	; 0xffffffec
   290fc:	ldr	r0, [fp, #-16]
   29100:	bl	290a4 <__assert_fail@plt+0x169b8>
   29104:	mov	r3, r0
   29108:	cmp	r3, #0
   2910c:	beq	29118 <__assert_fail@plt+0x16a2c>
   29110:	mov	r3, #0
   29114:	b	291a4 <__assert_fail@plt+0x16ab8>
   29118:	ldr	r3, [fp, #-20]	; 0xffffffec
   2911c:	str	r3, [fp, #-8]
   29120:	ldr	r3, [fp, #-8]
   29124:	ldr	r0, [r3]
   29128:	ldr	r3, [fp, #-8]
   2912c:	ldr	r3, [r3, #4]
   29130:	add	r3, r3, #1
   29134:	lsl	r1, r3, #2
   29138:	ldr	r3, [fp, #-8]
   2913c:	add	r3, r3, #8
   29140:	mov	r2, r3
   29144:	bl	28b00 <__assert_fail@plt+0x16414>
   29148:	str	r0, [fp, #-12]
   2914c:	ldr	r3, [fp, #-12]
   29150:	cmp	r3, #0
   29154:	beq	291a0 <__assert_fail@plt+0x16ab4>
   29158:	ldr	r3, [fp, #-8]
   2915c:	ldr	r2, [fp, #-12]
   29160:	str	r2, [r3]
   29164:	ldr	r3, [fp, #-8]
   29168:	ldr	r2, [r3]
   2916c:	ldr	r3, [fp, #-8]
   29170:	ldr	r3, [r3, #4]
   29174:	lsl	r3, r3, #2
   29178:	add	r3, r2, r3
   2917c:	ldr	r2, [fp, #-16]
   29180:	str	r2, [r3]
   29184:	ldr	r3, [fp, #-8]
   29188:	ldr	r3, [r3, #4]
   2918c:	add	r2, r3, #1
   29190:	ldr	r3, [fp, #-8]
   29194:	str	r2, [r3, #4]
   29198:	mov	r3, #0
   2919c:	b	291a4 <__assert_fail@plt+0x16ab8>
   291a0:	mvn	r3, #0
   291a4:	mov	r0, r3
   291a8:	sub	sp, fp, #4
   291ac:	ldr	fp, [sp]
   291b0:	add	sp, sp, #4
   291b4:	pop	{pc}		; (ldr pc, [sp], #4)
   291b8:	str	fp, [sp, #-8]!
   291bc:	str	lr, [sp, #4]
   291c0:	add	fp, sp, #4
   291c4:	sub	sp, sp, #16
   291c8:	bl	28e34 <__assert_fail@plt+0x16748>
   291cc:	str	r0, [fp, #-8]
   291d0:	mov	r3, #0
   291d4:	str	r3, [fp, #-20]	; 0xffffffec
   291d8:	mov	r3, #0
   291dc:	str	r3, [fp, #-12]
   291e0:	ldr	r3, [fp, #-12]
   291e4:	str	r3, [fp, #-16]
   291e8:	ldr	r3, [fp, #-8]
   291ec:	cmn	r3, #-2147483647	; 0x80000001
   291f0:	beq	29200 <__assert_fail@plt+0x16b14>
   291f4:	ldr	r3, [fp, #-8]
   291f8:	add	r3, r3, #1
   291fc:	str	r3, [fp, #-8]
   29200:	sub	r3, fp, #20
   29204:	movw	r2, #37092	; 0x90e4
   29208:	movt	r2, #2
   2920c:	ldr	r1, [fp, #-8]
   29210:	mov	r0, #0
   29214:	bl	28ee0 <__assert_fail@plt+0x167f4>
   29218:	ldr	r2, [fp, #-20]	; 0xffffffec
   2921c:	movw	r3, #52928	; 0xcec0
   29220:	movt	r3, #7
   29224:	str	r2, [r3]
   29228:	ldr	r2, [fp, #-16]
   2922c:	movw	r3, #52932	; 0xcec4
   29230:	movt	r3, #7
   29234:	str	r2, [r3]
   29238:	nop	{0}
   2923c:	sub	sp, fp, #4
   29240:	ldr	fp, [sp]
   29244:	add	sp, sp, #4
   29248:	pop	{pc}		; (ldr pc, [sp], #4)
   2924c:	str	fp, [sp, #-8]!
   29250:	str	lr, [sp, #4]
   29254:	add	fp, sp, #4
   29258:	sub	sp, sp, #16
   2925c:	str	r0, [fp, #-16]
   29260:	str	r1, [fp, #-20]	; 0xffffffec
   29264:	ldr	r0, [fp, #-16]
   29268:	bl	290a4 <__assert_fail@plt+0x169b8>
   2926c:	mov	r3, r0
   29270:	cmp	r3, #0
   29274:	bne	29328 <__assert_fail@plt+0x16c3c>
   29278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2927c:	str	r3, [fp, #-8]
   29280:	b	292f4 <__assert_fail@plt+0x16c08>
   29284:	ldr	r3, [fp, #-8]
   29288:	ldr	r2, [r3]
   2928c:	ldr	r3, [fp, #-8]
   29290:	ldr	r3, [r3, #8]
   29294:	lsl	r3, r3, #2
   29298:	add	r3, r2, r3
   2929c:	ldr	r3, [r3]
   292a0:	ldr	r2, [fp, #-16]
   292a4:	cmp	r2, r3
   292a8:	ble	292c4 <__assert_fail@plt+0x16bd8>
   292ac:	ldr	r3, [fp, #-8]
   292b0:	ldr	r3, [r3, #8]
   292b4:	add	r2, r3, #1
   292b8:	ldr	r3, [fp, #-8]
   292bc:	str	r2, [r3, #8]
   292c0:	b	292f4 <__assert_fail@plt+0x16c08>
   292c4:	ldr	r3, [fp, #-8]
   292c8:	ldr	r2, [r3]
   292cc:	ldr	r3, [fp, #-8]
   292d0:	ldr	r3, [r3, #8]
   292d4:	lsl	r3, r3, #2
   292d8:	add	r3, r2, r3
   292dc:	ldr	r3, [r3]
   292e0:	ldr	r2, [fp, #-16]
   292e4:	cmp	r2, r3
   292e8:	bne	29310 <__assert_fail@plt+0x16c24>
   292ec:	mov	r3, #0
   292f0:	b	2932c <__assert_fail@plt+0x16c40>
   292f4:	ldr	r3, [fp, #-8]
   292f8:	ldr	r2, [r3, #8]
   292fc:	ldr	r3, [fp, #-8]
   29300:	ldr	r3, [r3, #4]
   29304:	cmp	r2, r3
   29308:	bcc	29284 <__assert_fail@plt+0x16b98>
   2930c:	b	29314 <__assert_fail@plt+0x16c28>
   29310:	nop	{0}
   29314:	ldr	r3, [fp, #-8]
   29318:	ldr	r2, [fp, #-16]
   2931c:	str	r2, [r3, #12]
   29320:	mvn	r3, #0
   29324:	b	2932c <__assert_fail@plt+0x16c40>
   29328:	mov	r3, #0
   2932c:	mov	r0, r3
   29330:	sub	sp, fp, #4
   29334:	ldr	fp, [sp]
   29338:	add	sp, sp, #4
   2933c:	pop	{pc}		; (ldr pc, [sp], #4)
   29340:	str	fp, [sp, #-8]!
   29344:	str	lr, [sp, #4]
   29348:	add	fp, sp, #4
   2934c:	sub	sp, sp, #32
   29350:	str	r0, [fp, #-32]	; 0xffffffe0
   29354:	str	r1, [fp, #-36]	; 0xffffffdc
   29358:	bl	28e34 <__assert_fail@plt+0x16748>
   2935c:	str	r0, [fp, #-8]
   29360:	ldr	r3, [fp, #-8]
   29364:	cmn	r3, #-2147483647	; 0x80000001
   29368:	beq	29378 <__assert_fail@plt+0x16c8c>
   2936c:	ldr	r3, [fp, #-8]
   29370:	add	r3, r3, #1
   29374:	str	r3, [fp, #-8]
   29378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2937c:	str	r3, [fp, #-24]	; 0xffffffe8
   29380:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29384:	str	r3, [fp, #-20]	; 0xffffffec
   29388:	mov	r3, #0
   2938c:	str	r3, [fp, #-16]
   29390:	mvn	r3, #0
   29394:	str	r3, [fp, #-12]
   29398:	sub	r3, fp, #24
   2939c:	movw	r2, #37452	; 0x924c
   293a0:	movt	r2, #2
   293a4:	ldr	r1, [fp, #-8]
   293a8:	mov	r0, #0
   293ac:	bl	28ee0 <__assert_fail@plt+0x167f4>
   293b0:	ldr	r3, [fp, #-12]
   293b4:	mov	r0, r3
   293b8:	sub	sp, fp, #4
   293bc:	ldr	fp, [sp]
   293c0:	add	sp, sp, #4
   293c4:	pop	{pc}		; (ldr pc, [sp], #4)
   293c8:	str	fp, [sp, #-8]!
   293cc:	str	lr, [sp, #4]
   293d0:	add	fp, sp, #4
   293d4:	sub	sp, sp, #8
   293d8:	mov	r3, #0
   293dc:	strb	r3, [fp, #-5]
   293e0:	mov	r1, #524288	; 0x80000
   293e4:	movw	r0, #36900	; 0x9024
   293e8:	movt	r0, #6
   293ec:	bl	2bf8c <__assert_fail@plt+0x198a0>
   293f0:	str	r0, [fp, #-12]
   293f4:	ldr	r3, [fp, #-12]
   293f8:	cmp	r3, #0
   293fc:	blt	29424 <__assert_fail@plt+0x16d38>
   29400:	ldr	r0, [fp, #-12]
   29404:	bl	290a4 <__assert_fail@plt+0x169b8>
   29408:	mov	r3, r0
   2940c:	cmp	r3, #0
   29410:	movne	r3, #1
   29414:	moveq	r3, #0
   29418:	strb	r3, [fp, #-5]
   2941c:	ldr	r0, [fp, #-12]
   29420:	bl	126a4 <close@plt>
   29424:	ldrb	r3, [fp, #-5]
   29428:	mov	r0, r3
   2942c:	sub	sp, fp, #4
   29430:	ldr	fp, [sp]
   29434:	add	sp, sp, #4
   29438:	pop	{pc}		; (ldr pc, [sp], #4)
   2943c:	push	{r1, r2, r3}
   29440:	str	fp, [sp, #-8]!
   29444:	str	lr, [sp, #4]
   29448:	add	fp, sp, #4
   2944c:	sub	sp, sp, #28
   29450:	str	r0, [fp, #-28]	; 0xffffffe4
   29454:	mov	r3, #0
   29458:	str	r3, [fp, #-12]
   2945c:	ldr	r3, [fp, #4]
   29460:	and	r3, r3, #64	; 0x40
   29464:	cmp	r3, #0
   29468:	beq	29488 <__assert_fail@plt+0x16d9c>
   2946c:	add	r3, fp, #8
   29470:	str	r3, [fp, #-20]	; 0xffffffec
   29474:	ldr	r3, [fp, #-20]	; 0xffffffec
   29478:	add	r2, r3, #4
   2947c:	str	r2, [fp, #-20]	; 0xffffffec
   29480:	ldr	r3, [r3]
   29484:	str	r3, [fp, #-12]
   29488:	movw	r3, #52936	; 0xcec8
   2948c:	movt	r3, #7
   29490:	ldrb	r3, [r3]
   29494:	eor	r3, r3, #1
   29498:	uxtb	r3, r3
   2949c:	cmp	r3, #0
   294a0:	beq	294cc <__assert_fail@plt+0x16de0>
   294a4:	bl	293c8 <__assert_fail@plt+0x16cdc>
   294a8:	mov	r3, r0
   294ac:	mov	r2, r3
   294b0:	movw	r3, #52937	; 0xcec9
   294b4:	movt	r3, #7
   294b8:	strb	r2, [r3]
   294bc:	movw	r3, #52936	; 0xcec8
   294c0:	movt	r3, #7
   294c4:	mov	r2, #1
   294c8:	strb	r2, [r3]
   294cc:	ldr	r3, [fp, #4]
   294d0:	orr	r3, r3, #524288	; 0x80000
   294d4:	ldr	r2, [fp, #-12]
   294d8:	mov	r1, r3
   294dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   294e0:	bl	2bf8c <__assert_fail@plt+0x198a0>
   294e4:	str	r0, [fp, #-16]
   294e8:	ldr	r3, [fp, #-16]
   294ec:	cmp	r3, #0
   294f0:	blt	2951c <__assert_fail@plt+0x16e30>
   294f4:	movw	r3, #52937	; 0xcec9
   294f8:	movt	r3, #7
   294fc:	ldrb	r3, [r3]
   29500:	eor	r3, r3, #1
   29504:	uxtb	r3, r3
   29508:	cmp	r3, #0
   2950c:	beq	2951c <__assert_fail@plt+0x16e30>
   29510:	mov	r1, #1
   29514:	ldr	r0, [fp, #-16]
   29518:	bl	2b8a0 <__assert_fail@plt+0x191b4>
   2951c:	ldr	r3, [fp, #-16]
   29520:	mov	r0, r3
   29524:	sub	sp, fp, #4
   29528:	ldr	fp, [sp]
   2952c:	ldr	lr, [sp, #4]
   29530:	add	sp, sp, #8
   29534:	add	sp, sp, #12
   29538:	bx	lr
   2953c:	str	fp, [sp, #-8]!
   29540:	str	lr, [sp, #4]
   29544:	add	fp, sp, #4
   29548:	movw	r3, #52928	; 0xcec0
   2954c:	movt	r3, #7
   29550:	ldr	r3, [r3]
   29554:	mov	r0, r3
   29558:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2955c:	movw	r3, #52928	; 0xcec0
   29560:	movt	r3, #7
   29564:	mov	r2, #0
   29568:	str	r2, [r3]
   2956c:	movw	r3, #52932	; 0xcec4
   29570:	movt	r3, #7
   29574:	mov	r2, #0
   29578:	str	r2, [r3]
   2957c:	nop	{0}
   29580:	sub	sp, fp, #4
   29584:	ldr	fp, [sp]
   29588:	add	sp, sp, #4
   2958c:	pop	{pc}		; (ldr pc, [sp], #4)
   29590:	str	fp, [sp, #-8]!
   29594:	str	lr, [sp, #4]
   29598:	add	fp, sp, #4
   2959c:	movw	r0, #36904	; 0x9028
   295a0:	movt	r0, #6
   295a4:	bl	122f0 <getenv@plt>
   295a8:	mov	r3, r0
   295ac:	cmp	r3, #0
   295b0:	beq	295bc <__assert_fail@plt+0x16ed0>
   295b4:	mov	r3, #1
   295b8:	b	295c0 <__assert_fail@plt+0x16ed4>
   295bc:	mov	r3, #0
   295c0:	mov	r0, r3
   295c4:	sub	sp, fp, #4
   295c8:	ldr	fp, [sp]
   295cc:	add	sp, sp, #4
   295d0:	pop	{pc}		; (ldr pc, [sp], #4)
   295d4:	str	fp, [sp, #-8]!
   295d8:	str	lr, [sp, #4]
   295dc:	add	fp, sp, #4
   295e0:	sub	sp, sp, #8
   295e4:	mov	r3, #1
   295e8:	str	r3, [fp, #-8]
   295ec:	movw	r3, #52928	; 0xcec0
   295f0:	movt	r3, #7
   295f4:	ldr	r2, [r3]
   295f8:	movw	r3, #52932	; 0xcec4
   295fc:	movt	r3, #7
   29600:	ldr	r3, [r3]
   29604:	mov	r1, r3
   29608:	mov	r0, r2
   2960c:	bl	29340 <__assert_fail@plt+0x16c54>
   29610:	str	r0, [fp, #-12]
   29614:	ldr	r3, [fp, #-12]
   29618:	cmp	r3, #0
   2961c:	blt	29648 <__assert_fail@plt+0x16f5c>
   29620:	mov	r3, #0
   29624:	str	r3, [fp, #-8]
   29628:	movw	r0, #36932	; 0x9044
   2962c:	movt	r0, #6
   29630:	bl	12398 <gettext@plt>
   29634:	mov	r2, r0
   29638:	ldr	r3, [fp, #-12]
   2963c:	mov	r1, #0
   29640:	mov	r0, #0
   29644:	bl	122b4 <error@plt>
   29648:	ldr	r3, [fp, #-8]
   2964c:	cmp	r3, #0
   29650:	bne	29674 <__assert_fail@plt+0x16f88>
   29654:	movw	r3, #37108	; 0x90f4
   29658:	movt	r3, #6
   2965c:	mov	r2, #396	; 0x18c
   29660:	movw	r1, #37084	; 0x90dc
   29664:	movt	r1, #6
   29668:	movw	r0, #37096	; 0x90e8
   2966c:	movt	r0, #6
   29670:	bl	126ec <__assert_fail@plt>
   29674:	nop	{0}
   29678:	sub	sp, fp, #4
   2967c:	ldr	fp, [sp]
   29680:	add	sp, sp, #4
   29684:	pop	{pc}		; (ldr pc, [sp], #4)
   29688:	strd	r4, [sp, #-24]!	; 0xffffffe8
   2968c:	strd	r6, [sp, #8]
   29690:	str	fp, [sp, #16]
   29694:	str	lr, [sp, #20]
   29698:	add	fp, sp, #20
   2969c:	sub	sp, sp, #24
   296a0:	str	r0, [fp, #-24]	; 0xffffffe8
   296a4:	movw	r3, #50984	; 0xc728
   296a8:	movt	r3, #7
   296ac:	ldr	r3, [r3]
   296b0:	mov	r0, r3
   296b4:	bl	3fda0 <__assert_fail@plt+0x2d6b4>
   296b8:	movw	r3, #50996	; 0xc734
   296bc:	movt	r3, #7
   296c0:	ldr	r4, [r3]
   296c4:	movw	r3, #50700	; 0xc60c
   296c8:	movt	r3, #7
   296cc:	ldr	r5, [r3]
   296d0:	movw	r0, #37152	; 0x9120
   296d4:	movt	r0, #6
   296d8:	bl	12398 <gettext@plt>
   296dc:	mov	r6, r0
   296e0:	movw	r0, #37168	; 0x9130
   296e4:	movt	r0, #6
   296e8:	bl	12398 <gettext@plt>
   296ec:	mov	r7, r0
   296f0:	movw	r0, #37184	; 0x9140
   296f4:	movt	r0, #6
   296f8:	bl	12398 <gettext@plt>
   296fc:	mov	r2, r0
   29700:	mov	r3, #0
   29704:	str	r3, [sp, #12]
   29708:	str	r2, [sp, #8]
   2970c:	str	r7, [sp, #4]
   29710:	str	r6, [sp]
   29714:	mov	r3, r5
   29718:	movw	r2, #37200	; 0x9150
   2971c:	movt	r2, #6
   29720:	ldr	r1, [fp, #-24]	; 0xffffffe8
   29724:	mov	r0, r4
   29728:	bl	3d76c <__assert_fail@plt+0x2b080>
   2972c:	nop	{0}
   29730:	sub	sp, fp, #20
   29734:	ldrd	r4, [sp]
   29738:	ldrd	r6, [sp, #8]
   2973c:	ldr	fp, [sp, #16]
   29740:	add	sp, sp, #20
   29744:	pop	{pc}		; (ldr pc, [sp], #4)
   29748:	str	fp, [sp, #-8]!
   2974c:	str	lr, [sp, #4]
   29750:	add	fp, sp, #4
   29754:	sub	sp, sp, #24
   29758:	str	r0, [fp, #-16]
   2975c:	str	r1, [fp, #-20]	; 0xffffffec
   29760:	str	r2, [fp, #-24]	; 0xffffffe8
   29764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29768:	ldr	r2, [r3]
   2976c:	ldr	r3, [fp, #-20]	; 0xffffffec
   29770:	movw	r1, #37216	; 0x9160
   29774:	movt	r1, #6
   29778:	ldr	r0, [fp, #-16]
   2977c:	bl	123f8 <fprintf@plt>
   29780:	str	r0, [fp, #-8]
   29784:	ldr	r3, [fp, #-8]
   29788:	cmp	r3, #0
   2978c:	blt	297b8 <__assert_fail@plt+0x170cc>
   29790:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29794:	ldr	r3, [r3]
   29798:	ldr	r2, [fp, #-8]
   2979c:	cmp	r2, r3
   297a0:	ble	297b0 <__assert_fail@plt+0x170c4>
   297a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   297a8:	ldr	r2, [fp, #-8]
   297ac:	str	r2, [r3]
   297b0:	mov	r3, #1
   297b4:	b	297bc <__assert_fail@plt+0x170d0>
   297b8:	mov	r3, #0
   297bc:	mov	r0, r3
   297c0:	sub	sp, fp, #4
   297c4:	ldr	fp, [sp]
   297c8:	add	sp, sp, #4
   297cc:	pop	{pc}		; (ldr pc, [sp], #4)
   297d0:	str	r4, [sp, #-20]!	; 0xffffffec
   297d4:	strd	r6, [sp, #4]
   297d8:	str	fp, [sp, #12]
   297dc:	str	lr, [sp, #16]
   297e0:	add	fp, sp, #16
   297e4:	sub	sp, sp, #1020	; 0x3fc
   297e8:	str	r0, [fp, #-1008]	; 0xfffffc10
   297ec:	str	r1, [fp, #-1012]	; 0xfffffc0c
   297f0:	str	r2, [fp, #-1016]	; 0xfffffc08
   297f4:	str	r3, [fp, #-1020]	; 0xfffffc04
   297f8:	mov	r3, #1
   297fc:	strb	r3, [fp, #-21]	; 0xffffffeb
   29800:	mov	r3, #0
   29804:	str	r3, [fp, #-28]	; 0xffffffe4
   29808:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   2980c:	ldr	r3, [r3, #16]
   29810:	sub	r2, fp, #96	; 0x60
   29814:	mov	r1, r2
   29818:	mov	r0, r3
   2981c:	bl	2c0e0 <__assert_fail@plt+0x199f4>
   29820:	movw	r3, #50704	; 0xc610
   29824:	movt	r3, #7
   29828:	ldr	r4, [r3]
   2982c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29830:	ldrd	r0, [r3, #96]	; 0x60
   29834:	sub	ip, fp, #748	; 0x2ec
   29838:	mov	r2, #1
   2983c:	mov	r3, #0
   29840:	strd	r2, [sp, #8]
   29844:	mov	r2, #1
   29848:	mov	r3, #0
   2984c:	strd	r2, [sp]
   29850:	mov	r3, #0
   29854:	mov	r2, ip
   29858:	bl	2e30c <__assert_fail@plt+0x1bc20>
   2985c:	mov	r3, r0
   29860:	mov	r2, r4
   29864:	movw	r1, #37224	; 0x9168
   29868:	movt	r1, #6
   2986c:	ldr	r0, [fp, #16]
   29870:	bl	123f8 <fprintf@plt>
   29874:	str	r0, [fp, #-40]	; 0xffffffd8
   29878:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2987c:	cmp	r3, #0
   29880:	bge	29898 <__assert_fail@plt+0x171ac>
   29884:	mov	r3, #0
   29888:	strb	r3, [fp, #-21]	; 0xffffffeb
   2988c:	mov	r3, #100	; 0x64
   29890:	str	r3, [fp, #-28]	; 0xffffffe4
   29894:	b	298c0 <__assert_fail@plt+0x171d4>
   29898:	movw	r3, #50704	; 0xc610
   2989c:	movt	r3, #7
   298a0:	ldr	r3, [r3]
   298a4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   298a8:	cmp	r2, r3
   298ac:	ble	298c0 <__assert_fail@plt+0x171d4>
   298b0:	movw	r3, #50704	; 0xc610
   298b4:	movt	r3, #7
   298b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   298bc:	str	r2, [r3]
   298c0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   298c4:	cmp	r3, #0
   298c8:	beq	299a8 <__assert_fail@plt+0x172bc>
   298cc:	ldr	r1, [fp, #16]
   298d0:	mov	r0, #32
   298d4:	bl	125c0 <putc@plt>
   298d8:	mov	r3, r0
   298dc:	cmn	r3, #1
   298e0:	bne	298f4 <__assert_fail@plt+0x17208>
   298e4:	mov	r3, #0
   298e8:	strb	r3, [fp, #-21]	; 0xffffffeb
   298ec:	mov	r3, #150	; 0x96
   298f0:	str	r3, [fp, #-28]	; 0xffffffe4
   298f4:	movw	r3, #50708	; 0xc614
   298f8:	movt	r3, #7
   298fc:	ldr	r4, [r3]
   29900:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29904:	ldrd	r2, [r3, #64]	; 0x40
   29908:	mov	r6, r2
   2990c:	mov	r7, r3
   29910:	ldr	r3, [fp, #8]
   29914:	mov	r2, r3
   29918:	asr	r3, r2, #31
   2991c:	sub	r1, fp, #748	; 0x2ec
   29920:	strd	r2, [sp, #8]
   29924:	mov	r2, #512	; 0x200
   29928:	mov	r3, #0
   2992c:	strd	r2, [sp]
   29930:	mov	r3, #0
   29934:	mov	r2, r1
   29938:	mov	r0, r6
   2993c:	mov	r1, r7
   29940:	bl	2e30c <__assert_fail@plt+0x1bc20>
   29944:	mov	r3, r0
   29948:	mov	r2, r4
   2994c:	movw	r1, #37224	; 0x9168
   29950:	movt	r1, #6
   29954:	ldr	r0, [fp, #16]
   29958:	bl	123f8 <fprintf@plt>
   2995c:	str	r0, [fp, #-40]	; 0xffffffd8
   29960:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29964:	cmp	r3, #0
   29968:	bge	29980 <__assert_fail@plt+0x17294>
   2996c:	mov	r3, #0
   29970:	strb	r3, [fp, #-21]	; 0xffffffeb
   29974:	mov	r3, #200	; 0xc8
   29978:	str	r3, [fp, #-28]	; 0xffffffe4
   2997c:	b	299a8 <__assert_fail@plt+0x172bc>
   29980:	movw	r3, #50708	; 0xc614
   29984:	movt	r3, #7
   29988:	ldr	r3, [r3]
   2998c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29990:	cmp	r2, r3
   29994:	ble	299a8 <__assert_fail@plt+0x172bc>
   29998:	movw	r3, #50708	; 0xc614
   2999c:	movt	r3, #7
   299a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   299a4:	str	r2, [r3]
   299a8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   299ac:	cmp	r3, #0
   299b0:	beq	299dc <__assert_fail@plt+0x172f0>
   299b4:	ldr	r1, [fp, #16]
   299b8:	mov	r0, #32
   299bc:	bl	125c0 <putc@plt>
   299c0:	mov	r3, r0
   299c4:	cmn	r3, #1
   299c8:	bne	299dc <__assert_fail@plt+0x172f0>
   299cc:	mov	r3, #0
   299d0:	strb	r3, [fp, #-21]	; 0xffffffeb
   299d4:	mov	r3, #250	; 0xfa
   299d8:	str	r3, [fp, #-28]	; 0xffffffe4
   299dc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   299e0:	cmp	r3, #0
   299e4:	beq	29a14 <__assert_fail@plt+0x17328>
   299e8:	sub	r3, fp, #96	; 0x60
   299ec:	ldr	r1, [fp, #16]
   299f0:	mov	r0, r3
   299f4:	bl	12680 <fputs@plt>
   299f8:	mov	r3, r0
   299fc:	cmp	r3, #0
   29a00:	bge	29a14 <__assert_fail@plt+0x17328>
   29a04:	mov	r3, #0
   29a08:	strb	r3, [fp, #-21]	; 0xffffffeb
   29a0c:	movw	r3, #275	; 0x113
   29a10:	str	r3, [fp, #-28]	; 0xffffffe4
   29a14:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29a18:	cmp	r3, #0
   29a1c:	beq	29a90 <__assert_fail@plt+0x173a4>
   29a20:	movw	r3, #50712	; 0xc618
   29a24:	movt	r3, #7
   29a28:	ldr	r2, [r3]
   29a2c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29a30:	ldr	r3, [r3, #20]
   29a34:	movw	r1, #37216	; 0x9160
   29a38:	movt	r1, #6
   29a3c:	ldr	r0, [fp, #16]
   29a40:	bl	123f8 <fprintf@plt>
   29a44:	str	r0, [fp, #-40]	; 0xffffffd8
   29a48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29a4c:	cmp	r3, #0
   29a50:	bge	29a68 <__assert_fail@plt+0x1737c>
   29a54:	mov	r3, #0
   29a58:	strb	r3, [fp, #-21]	; 0xffffffeb
   29a5c:	mov	r3, #300	; 0x12c
   29a60:	str	r3, [fp, #-28]	; 0xffffffe4
   29a64:	b	29a90 <__assert_fail@plt+0x173a4>
   29a68:	movw	r3, #50712	; 0xc618
   29a6c:	movt	r3, #7
   29a70:	ldr	r3, [r3]
   29a74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29a78:	cmp	r2, r3
   29a7c:	ble	29a90 <__assert_fail@plt+0x173a4>
   29a80:	movw	r3, #50712	; 0xc618
   29a84:	movt	r3, #7
   29a88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29a8c:	str	r2, [r3]
   29a90:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29a94:	cmp	r3, #0
   29a98:	beq	29be4 <__assert_fail@plt+0x174f8>
   29a9c:	ldr	r1, [fp, #16]
   29aa0:	mov	r0, #32
   29aa4:	bl	125c0 <putc@plt>
   29aa8:	mov	r3, r0
   29aac:	cmn	r3, #1
   29ab0:	bne	29ac4 <__assert_fail@plt+0x173d8>
   29ab4:	mov	r3, #0
   29ab8:	strb	r3, [fp, #-21]	; 0xffffffeb
   29abc:	mov	r3, #250	; 0xfa
   29ac0:	str	r3, [fp, #-28]	; 0xffffffe4
   29ac4:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29ac8:	ldr	r3, [r3, #24]
   29acc:	mov	r0, r3
   29ad0:	bl	2f18c <__assert_fail@plt+0x1caa0>
   29ad4:	str	r0, [fp, #-44]	; 0xffffffd4
   29ad8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29adc:	cmp	r3, #0
   29ae0:	beq	29b6c <__assert_fail@plt+0x17480>
   29ae4:	mov	r1, #0
   29ae8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   29aec:	bl	30978 <__assert_fail@plt+0x1e28c>
   29af0:	str	r0, [fp, #-48]	; 0xffffffd0
   29af4:	movw	r3, #50716	; 0xc61c
   29af8:	movt	r3, #7
   29afc:	ldr	r3, [r3]
   29b00:	ldr	r2, [fp, #-48]	; 0xffffffd0
   29b04:	cmp	r2, r3
   29b08:	ble	29b1c <__assert_fail@plt+0x17430>
   29b0c:	movw	r3, #50716	; 0xc61c
   29b10:	movt	r3, #7
   29b14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   29b18:	str	r2, [r3]
   29b1c:	movw	r3, #50716	; 0xc61c
   29b20:	movt	r3, #7
   29b24:	ldr	r2, [r3]
   29b28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29b2c:	movw	r1, #37228	; 0x916c
   29b30:	movt	r1, #6
   29b34:	ldr	r0, [fp, #16]
   29b38:	bl	123f8 <fprintf@plt>
   29b3c:	mov	r3, r0
   29b40:	mvn	r3, r3
   29b44:	lsr	r3, r3, #31
   29b48:	strb	r3, [fp, #-21]	; 0xffffffeb
   29b4c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29b50:	eor	r3, r3, #1
   29b54:	uxtb	r3, r3
   29b58:	cmp	r3, #0
   29b5c:	beq	29be4 <__assert_fail@plt+0x174f8>
   29b60:	mov	r3, #400	; 0x190
   29b64:	str	r3, [fp, #-28]	; 0xffffffe4
   29b68:	b	29be4 <__assert_fail@plt+0x174f8>
   29b6c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29b70:	ldr	r3, [r3, #24]
   29b74:	mov	r2, r3
   29b78:	movw	r1, #37236	; 0x9174
   29b7c:	movt	r1, #6
   29b80:	ldr	r0, [fp, #16]
   29b84:	bl	123f8 <fprintf@plt>
   29b88:	str	r0, [fp, #-40]	; 0xffffffd8
   29b8c:	movw	r3, #50716	; 0xc61c
   29b90:	movt	r3, #7
   29b94:	ldr	r3, [r3]
   29b98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29b9c:	cmp	r2, r3
   29ba0:	ble	29bb4 <__assert_fail@plt+0x174c8>
   29ba4:	movw	r3, #50716	; 0xc61c
   29ba8:	movt	r3, #7
   29bac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29bb0:	str	r2, [r3]
   29bb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29bb8:	cmp	r3, #0
   29bbc:	movgt	r3, #1
   29bc0:	movle	r3, #0
   29bc4:	strb	r3, [fp, #-21]	; 0xffffffeb
   29bc8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29bcc:	eor	r3, r3, #1
   29bd0:	uxtb	r3, r3
   29bd4:	cmp	r3, #0
   29bd8:	beq	29be4 <__assert_fail@plt+0x174f8>
   29bdc:	movw	r3, #450	; 0x1c2
   29be0:	str	r3, [fp, #-28]	; 0xffffffe4
   29be4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29be8:	cmp	r3, #0
   29bec:	beq	29d4c <__assert_fail@plt+0x17660>
   29bf0:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29bf4:	ldr	r3, [r3, #28]
   29bf8:	mov	r0, r3
   29bfc:	bl	2f480 <__assert_fail@plt+0x1cd94>
   29c00:	str	r0, [fp, #-52]	; 0xffffffcc
   29c04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29c08:	cmp	r3, #0
   29c0c:	beq	29c98 <__assert_fail@plt+0x175ac>
   29c10:	mov	r1, #0
   29c14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29c18:	bl	30978 <__assert_fail@plt+0x1e28c>
   29c1c:	str	r0, [fp, #-56]	; 0xffffffc8
   29c20:	movw	r3, #50720	; 0xc620
   29c24:	movt	r3, #7
   29c28:	ldr	r3, [r3]
   29c2c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   29c30:	cmp	r2, r3
   29c34:	ble	29c48 <__assert_fail@plt+0x1755c>
   29c38:	movw	r3, #50720	; 0xc620
   29c3c:	movt	r3, #7
   29c40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   29c44:	str	r2, [r3]
   29c48:	movw	r3, #50720	; 0xc620
   29c4c:	movt	r3, #7
   29c50:	ldr	r2, [r3]
   29c54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29c58:	movw	r1, #37228	; 0x916c
   29c5c:	movt	r1, #6
   29c60:	ldr	r0, [fp, #16]
   29c64:	bl	123f8 <fprintf@plt>
   29c68:	mov	r3, r0
   29c6c:	mvn	r3, r3
   29c70:	lsr	r3, r3, #31
   29c74:	strb	r3, [fp, #-21]	; 0xffffffeb
   29c78:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29c7c:	eor	r3, r3, #1
   29c80:	uxtb	r3, r3
   29c84:	cmp	r3, #0
   29c88:	beq	29d4c <__assert_fail@plt+0x17660>
   29c8c:	mov	r3, #500	; 0x1f4
   29c90:	str	r3, [fp, #-28]	; 0xffffffe4
   29c94:	b	29d4c <__assert_fail@plt+0x17660>
   29c98:	movw	r3, #50720	; 0xc620
   29c9c:	movt	r3, #7
   29ca0:	ldr	r2, [r3]
   29ca4:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29ca8:	ldr	r3, [r3, #28]
   29cac:	movw	r1, #37244	; 0x917c
   29cb0:	movt	r1, #6
   29cb4:	ldr	r0, [fp, #16]
   29cb8:	bl	123f8 <fprintf@plt>
   29cbc:	str	r0, [fp, #-40]	; 0xffffffd8
   29cc0:	movw	r3, #50720	; 0xc620
   29cc4:	movt	r3, #7
   29cc8:	ldr	r3, [r3]
   29ccc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29cd0:	cmp	r2, r3
   29cd4:	ble	29ce8 <__assert_fail@plt+0x175fc>
   29cd8:	movw	r3, #50720	; 0xc620
   29cdc:	movt	r3, #7
   29ce0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29ce4:	str	r2, [r3]
   29ce8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29cec:	mvn	r3, r3
   29cf0:	lsr	r3, r3, #31
   29cf4:	strb	r3, [fp, #-21]	; 0xffffffeb
   29cf8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29cfc:	cmp	r3, #0
   29d00:	beq	29d30 <__assert_fail@plt+0x17644>
   29d04:	ldr	r1, [fp, #16]
   29d08:	mov	r0, #32
   29d0c:	bl	125c0 <putc@plt>
   29d10:	mov	r3, r0
   29d14:	cmn	r3, #1
   29d18:	bne	29d4c <__assert_fail@plt+0x17660>
   29d1c:	mov	r3, #0
   29d20:	strb	r3, [fp, #-21]	; 0xffffffeb
   29d24:	movw	r3, #525	; 0x20d
   29d28:	str	r3, [fp, #-28]	; 0xffffffe4
   29d2c:	b	29d4c <__assert_fail@plt+0x17660>
   29d30:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29d34:	eor	r3, r3, #1
   29d38:	uxtb	r3, r3
   29d3c:	cmp	r3, #0
   29d40:	beq	29d4c <__assert_fail@plt+0x17660>
   29d44:	movw	r3, #550	; 0x226
   29d48:	str	r3, [fp, #-28]	; 0xffffffe4
   29d4c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29d50:	cmp	r3, #0
   29d54:	beq	29f40 <__assert_fail@plt+0x17854>
   29d58:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29d5c:	ldr	r3, [r3, #16]
   29d60:	and	r3, r3, #61440	; 0xf000
   29d64:	cmp	r3, #8192	; 0x2000
   29d68:	beq	29d80 <__assert_fail@plt+0x17694>
   29d6c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29d70:	ldr	r3, [r3, #16]
   29d74:	and	r3, r3, #61440	; 0xf000
   29d78:	cmp	r3, #24576	; 0x6000
   29d7c:	bne	29e68 <__assert_fail@plt+0x1777c>
   29d80:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29d84:	ldrd	r2, [r3, #32]
   29d88:	mov	r0, r2
   29d8c:	mov	r1, r3
   29d90:	bl	11fa8 <gnu_dev_major@plt>
   29d94:	mov	r3, r0
   29d98:	movw	r2, #50724	; 0xc624
   29d9c:	movt	r2, #7
   29da0:	mov	r1, r3
   29da4:	ldr	r0, [fp, #16]
   29da8:	bl	29748 <__assert_fail@plt+0x1705c>
   29dac:	mov	r3, r0
   29db0:	eor	r3, r3, #1
   29db4:	uxtb	r3, r3
   29db8:	cmp	r3, #0
   29dbc:	beq	29dd0 <__assert_fail@plt+0x176e4>
   29dc0:	mov	r3, #0
   29dc4:	strb	r3, [fp, #-21]	; 0xffffffeb
   29dc8:	mov	r3, #600	; 0x258
   29dcc:	str	r3, [fp, #-28]	; 0xffffffe4
   29dd0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29dd4:	cmp	r3, #0
   29dd8:	beq	29e08 <__assert_fail@plt+0x1771c>
   29ddc:	movw	r1, #37252	; 0x9184
   29de0:	movt	r1, #6
   29de4:	ldr	r0, [fp, #16]
   29de8:	bl	123f8 <fprintf@plt>
   29dec:	mov	r3, r0
   29df0:	cmp	r3, #0
   29df4:	bge	29e08 <__assert_fail@plt+0x1771c>
   29df8:	mov	r3, #0
   29dfc:	strb	r3, [fp, #-21]	; 0xffffffeb
   29e00:	movw	r3, #625	; 0x271
   29e04:	str	r3, [fp, #-28]	; 0xffffffe4
   29e08:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29e0c:	cmp	r3, #0
   29e10:	beq	29f3c <__assert_fail@plt+0x17850>
   29e14:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29e18:	ldrd	r2, [r3, #32]
   29e1c:	mov	r0, r2
   29e20:	mov	r1, r3
   29e24:	bl	12038 <gnu_dev_minor@plt>
   29e28:	mov	r3, r0
   29e2c:	movw	r2, #50728	; 0xc628
   29e30:	movt	r2, #7
   29e34:	mov	r1, r3
   29e38:	ldr	r0, [fp, #16]
   29e3c:	bl	29748 <__assert_fail@plt+0x1705c>
   29e40:	mov	r3, r0
   29e44:	eor	r3, r3, #1
   29e48:	uxtb	r3, r3
   29e4c:	cmp	r3, #0
   29e50:	beq	29f3c <__assert_fail@plt+0x17850>
   29e54:	mov	r3, #0
   29e58:	strb	r3, [fp, #-21]	; 0xffffffeb
   29e5c:	movw	r3, #650	; 0x28a
   29e60:	str	r3, [fp, #-28]	; 0xffffffe4
   29e64:	b	29f3c <__assert_fail@plt+0x17850>
   29e68:	ldr	r3, [fp, #8]
   29e6c:	cmp	r3, #0
   29e70:	bge	29e7c <__assert_fail@plt+0x17790>
   29e74:	ldr	r3, [fp, #8]
   29e78:	b	29e80 <__assert_fail@plt+0x17794>
   29e7c:	mov	r3, #1
   29e80:	str	r3, [fp, #-60]	; 0xffffffc4
   29e84:	movw	r3, #50732	; 0xc62c
   29e88:	movt	r3, #7
   29e8c:	ldr	r4, [r3]
   29e90:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29e94:	ldrd	r2, [r3, #48]	; 0x30
   29e98:	mov	r6, r2
   29e9c:	mov	r7, r3
   29ea0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   29ea4:	mov	r2, r3
   29ea8:	asr	r3, r2, #31
   29eac:	sub	r1, fp, #748	; 0x2ec
   29eb0:	strd	r2, [sp, #8]
   29eb4:	mov	r2, #1
   29eb8:	mov	r3, #0
   29ebc:	strd	r2, [sp]
   29ec0:	mov	r3, #0
   29ec4:	mov	r2, r1
   29ec8:	mov	r0, r6
   29ecc:	mov	r1, r7
   29ed0:	bl	2e30c <__assert_fail@plt+0x1bc20>
   29ed4:	mov	r3, r0
   29ed8:	mov	r2, r4
   29edc:	movw	r1, #37224	; 0x9168
   29ee0:	movt	r1, #6
   29ee4:	ldr	r0, [fp, #16]
   29ee8:	bl	123f8 <fprintf@plt>
   29eec:	str	r0, [fp, #-40]	; 0xffffffd8
   29ef0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29ef4:	cmp	r3, #0
   29ef8:	bge	29f10 <__assert_fail@plt+0x17824>
   29efc:	mov	r3, #0
   29f00:	strb	r3, [fp, #-21]	; 0xffffffeb
   29f04:	mov	r3, #800	; 0x320
   29f08:	str	r3, [fp, #-28]	; 0xffffffe4
   29f0c:	b	29f40 <__assert_fail@plt+0x17854>
   29f10:	movw	r3, #50732	; 0xc62c
   29f14:	movt	r3, #7
   29f18:	ldr	r3, [r3]
   29f1c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29f20:	cmp	r2, r3
   29f24:	ble	29f40 <__assert_fail@plt+0x17854>
   29f28:	movw	r3, #50732	; 0xc62c
   29f2c:	movt	r3, #7
   29f30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29f34:	str	r2, [r3]
   29f38:	b	29f40 <__assert_fail@plt+0x17854>
   29f3c:	nop	{0}
   29f40:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29f44:	cmp	r3, #0
   29f48:	beq	29f74 <__assert_fail@plt+0x17888>
   29f4c:	ldr	r1, [fp, #16]
   29f50:	mov	r0, #32
   29f54:	bl	125c0 <putc@plt>
   29f58:	mov	r3, r0
   29f5c:	cmn	r3, #1
   29f60:	bne	29f74 <__assert_fail@plt+0x17888>
   29f64:	mov	r3, #0
   29f68:	strb	r3, [fp, #-21]	; 0xffffffeb
   29f6c:	movw	r3, #850	; 0x352
   29f70:	str	r3, [fp, #-28]	; 0xffffffe4
   29f74:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   29f78:	cmp	r3, #0
   29f7c:	beq	2a1b0 <__assert_fail@plt+0x17ac4>
   29f80:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29f84:	add	r3, r3, #80	; 0x50
   29f88:	mov	r0, r3
   29f8c:	bl	12344 <localtime@plt>
   29f90:	str	r0, [fp, #-64]	; 0xffffffc0
   29f94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   29f98:	cmp	r3, #0
   29f9c:	beq	2a088 <__assert_fail@plt+0x1799c>
   29fa0:	sub	r3, fp, #1004	; 0x3ec
   29fa4:	str	r3, [fp, #-32]	; 0xffffffe0
   29fa8:	mov	r3, #256	; 0x100
   29fac:	str	r3, [fp, #-36]	; 0xffffffdc
   29fb0:	ldr	r3, [fp, #4]
   29fb4:	sub	r3, r3, #15532032	; 0xed0000
   29fb8:	sub	r3, r3, #19968	; 0x4e00
   29fbc:	ldr	r2, [fp, #-1020]	; 0xfffffc04
   29fc0:	ldr	r2, [r2, #80]	; 0x50
   29fc4:	cmp	r3, r2
   29fc8:	bgt	29ff0 <__assert_fail@plt+0x17904>
   29fcc:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   29fd0:	ldr	r2, [r3, #80]	; 0x50
   29fd4:	ldr	r3, [fp, #4]
   29fd8:	add	r3, r3, #3600	; 0xe10
   29fdc:	cmp	r2, r3
   29fe0:	bgt	29ff0 <__assert_fail@plt+0x17904>
   29fe4:	movw	r3, #37256	; 0x9188
   29fe8:	movt	r3, #6
   29fec:	b	29ff8 <__assert_fail@plt+0x1790c>
   29ff0:	movw	r3, #37268	; 0x9194
   29ff4:	movt	r3, #6
   29ff8:	str	r3, [fp, #-68]	; 0xffffffbc
   29ffc:	b	2a034 <__assert_fail@plt+0x17948>
   2a000:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a004:	lsl	r3, r3, #1
   2a008:	str	r3, [fp, #-36]	; 0xffffffdc
   2a00c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a010:	add	r3, r3, #7
   2a014:	lsr	r3, r3, #3
   2a018:	lsl	r3, r3, #3
   2a01c:	sub	sp, sp, r3
   2a020:	add	r3, sp, #16
   2a024:	add	r3, r3, #7
   2a028:	lsr	r3, r3, #3
   2a02c:	lsl	r3, r3, #3
   2a030:	str	r3, [fp, #-32]	; 0xffffffe0
   2a034:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2a038:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a03c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2a040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a044:	bl	1232c <strftime@plt>
   2a048:	mov	r3, r0
   2a04c:	cmp	r3, #0
   2a050:	beq	2a000 <__assert_fail@plt+0x17914>
   2a054:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a058:	movw	r1, #37280	; 0x91a0
   2a05c:	movt	r1, #6
   2a060:	ldr	r0, [fp, #16]
   2a064:	bl	123f8 <fprintf@plt>
   2a068:	mov	r3, r0
   2a06c:	cmp	r3, #0
   2a070:	bge	2a1b0 <__assert_fail@plt+0x17ac4>
   2a074:	mov	r3, #0
   2a078:	strb	r3, [fp, #-21]	; 0xffffffeb
   2a07c:	mov	r3, #900	; 0x384
   2a080:	str	r3, [fp, #-28]	; 0xffffffe4
   2a084:	b	2a1b0 <__assert_fail@plt+0x17ac4>
   2a088:	mov	r3, #12
   2a08c:	str	r3, [fp, #-72]	; 0xffffffb8
   2a090:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   2a094:	ldr	r3, [r3, #80]	; 0x50
   2a098:	cmp	r3, #0
   2a09c:	bge	2a144 <__assert_fail@plt+0x17a58>
   2a0a0:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   2a0a4:	ldr	r3, [r3, #80]	; 0x50
   2a0a8:	mov	r2, r3
   2a0ac:	asr	r3, r2, #31
   2a0b0:	rsbs	r0, r2, #0
   2a0b4:	rsc	r1, r3, #0
   2a0b8:	sub	ip, fp, #748	; 0x2ec
   2a0bc:	mov	r2, #1
   2a0c0:	mov	r3, #0
   2a0c4:	strd	r2, [sp, #8]
   2a0c8:	mov	r2, #1
   2a0cc:	mov	r3, #0
   2a0d0:	strd	r2, [sp]
   2a0d4:	mov	r3, #0
   2a0d8:	mov	r2, ip
   2a0dc:	bl	2e30c <__assert_fail@plt+0x1bc20>
   2a0e0:	str	r0, [fp, #-76]	; 0xffffffb4
   2a0e4:	ldr	r4, [fp, #-72]	; 0xffffffb8
   2a0e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2a0ec:	bl	123bc <strlen@plt>
   2a0f0:	mov	r3, r0
   2a0f4:	sub	r3, r4, r3
   2a0f8:	str	r3, [fp, #-80]	; 0xffffffb0
   2a0fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2a100:	bic	r2, r3, r3, asr #31
   2a104:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2a108:	str	r3, [sp]
   2a10c:	movw	r3, #37284	; 0x91a4
   2a110:	movt	r3, #6
   2a114:	movw	r1, #37288	; 0x91a8
   2a118:	movt	r1, #6
   2a11c:	ldr	r0, [fp, #16]
   2a120:	bl	123f8 <fprintf@plt>
   2a124:	mov	r3, r0
   2a128:	cmp	r3, #0
   2a12c:	bge	2a1b0 <__assert_fail@plt+0x17ac4>
   2a130:	mov	r3, #0
   2a134:	strb	r3, [fp, #-21]	; 0xffffffeb
   2a138:	mov	r3, #1000	; 0x3e8
   2a13c:	str	r3, [fp, #-28]	; 0xffffffe4
   2a140:	b	2a1b0 <__assert_fail@plt+0x17ac4>
   2a144:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   2a148:	ldr	r3, [r3, #80]	; 0x50
   2a14c:	mov	r0, r3
   2a150:	asr	r1, r0, #31
   2a154:	sub	ip, fp, #748	; 0x2ec
   2a158:	mov	r2, #1
   2a15c:	mov	r3, #0
   2a160:	strd	r2, [sp, #8]
   2a164:	mov	r2, #1
   2a168:	mov	r3, #0
   2a16c:	strd	r2, [sp]
   2a170:	mov	r3, #0
   2a174:	mov	r2, ip
   2a178:	bl	2e30c <__assert_fail@plt+0x1bc20>
   2a17c:	mov	r3, r0
   2a180:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2a184:	movw	r1, #37296	; 0x91b0
   2a188:	movt	r1, #6
   2a18c:	ldr	r0, [fp, #16]
   2a190:	bl	123f8 <fprintf@plt>
   2a194:	mov	r3, r0
   2a198:	cmp	r3, #0
   2a19c:	bge	2a1b0 <__assert_fail@plt+0x17ac4>
   2a1a0:	mov	r3, #0
   2a1a4:	strb	r3, [fp, #-21]	; 0xffffffeb
   2a1a8:	movw	r3, #1100	; 0x44c
   2a1ac:	str	r3, [fp, #-28]	; 0xffffffe4
   2a1b0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a1b4:	cmp	r3, #0
   2a1b8:	beq	2a1f0 <__assert_fail@plt+0x17b04>
   2a1bc:	ldr	r2, [fp, #12]
   2a1c0:	ldr	r1, [fp, #16]
   2a1c4:	ldr	r0, [fp, #-1008]	; 0xfffffc10
   2a1c8:	bl	2a59c <__assert_fail@plt+0x17eb0>
   2a1cc:	mov	r3, r0
   2a1d0:	strb	r3, [fp, #-21]	; 0xffffffeb
   2a1d4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a1d8:	eor	r3, r3, #1
   2a1dc:	uxtb	r3, r3
   2a1e0:	cmp	r3, #0
   2a1e4:	beq	2a1f0 <__assert_fail@plt+0x17b04>
   2a1e8:	mov	r3, #1200	; 0x4b0
   2a1ec:	str	r3, [fp, #-28]	; 0xffffffe4
   2a1f0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a1f4:	cmp	r3, #0
   2a1f8:	beq	2a30c <__assert_fail@plt+0x17c20>
   2a1fc:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   2a200:	ldr	r3, [r3, #16]
   2a204:	and	r3, r3, #61440	; 0xf000
   2a208:	cmp	r3, #40960	; 0xa000
   2a20c:	bne	2a2c4 <__assert_fail@plt+0x17bd8>
   2a210:	ldr	r1, [fp, #-1016]	; 0xfffffc08
   2a214:	ldr	r0, [fp, #-1012]	; 0xfffffc0c
   2a218:	bl	2b250 <__assert_fail@plt+0x18b64>
   2a21c:	str	r0, [fp, #-84]	; 0xffffffac
   2a220:	ldr	r3, [fp, #-84]	; 0xffffffac
   2a224:	cmp	r3, #0
   2a228:	beq	2a29c <__assert_fail@plt+0x17bb0>
   2a22c:	ldr	r1, [fp, #16]
   2a230:	movw	r0, #37304	; 0x91b8
   2a234:	movt	r0, #6
   2a238:	bl	12680 <fputs@plt>
   2a23c:	mov	r3, r0
   2a240:	cmp	r3, #0
   2a244:	bge	2a258 <__assert_fail@plt+0x17b6c>
   2a248:	mov	r3, #0
   2a24c:	strb	r3, [fp, #-21]	; 0xffffffeb
   2a250:	movw	r3, #1300	; 0x514
   2a254:	str	r3, [fp, #-28]	; 0xffffffe4
   2a258:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a25c:	cmp	r3, #0
   2a260:	beq	2a2bc <__assert_fail@plt+0x17bd0>
   2a264:	ldr	r2, [fp, #12]
   2a268:	ldr	r1, [fp, #16]
   2a26c:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a270:	bl	2a59c <__assert_fail@plt+0x17eb0>
   2a274:	mov	r3, r0
   2a278:	strb	r3, [fp, #-21]	; 0xffffffeb
   2a27c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a280:	eor	r3, r3, #1
   2a284:	uxtb	r3, r3
   2a288:	cmp	r3, #0
   2a28c:	beq	2a2bc <__assert_fail@plt+0x17bd0>
   2a290:	movw	r3, #1350	; 0x546
   2a294:	str	r3, [fp, #-28]	; 0xffffffe4
   2a298:	b	2a2bc <__assert_fail@plt+0x17bd0>
   2a29c:	bl	12404 <__errno_location@plt>
   2a2a0:	mov	r3, r0
   2a2a4:	ldr	r1, [r3]
   2a2a8:	ldr	r3, [fp, #-1008]	; 0xfffffc10
   2a2ac:	movw	r2, #37312	; 0x91c0
   2a2b0:	movt	r2, #6
   2a2b4:	mov	r0, #0
   2a2b8:	bl	122b4 <error@plt>
   2a2bc:	ldr	r0, [fp, #-84]	; 0xffffffac
   2a2c0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2a2c4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a2c8:	cmp	r3, #0
   2a2cc:	beq	2a30c <__assert_fail@plt+0x17c20>
   2a2d0:	ldr	r1, [fp, #16]
   2a2d4:	mov	r0, #10
   2a2d8:	bl	125c0 <putc@plt>
   2a2dc:	mov	r3, r0
   2a2e0:	cmn	r3, #1
   2a2e4:	bne	2a30c <__assert_fail@plt+0x17c20>
   2a2e8:	mov	r3, #0
   2a2ec:	strb	r3, [fp, #-21]	; 0xffffffeb
   2a2f0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a2f4:	eor	r3, r3, #1
   2a2f8:	uxtb	r3, r3
   2a2fc:	cmp	r3, #0
   2a300:	beq	2a30c <__assert_fail@plt+0x17c20>
   2a304:	movw	r3, #1400	; 0x578
   2a308:	str	r3, [fp, #-28]	; 0xffffffe4
   2a30c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2a310:	eor	r3, r3, #1
   2a314:	uxtb	r3, r3
   2a318:	cmp	r3, #0
   2a31c:	beq	2a34c <__assert_fail@plt+0x17c60>
   2a320:	bl	12404 <__errno_location@plt>
   2a324:	mov	r3, r0
   2a328:	ldr	r4, [r3]
   2a32c:	movw	r0, #37316	; 0x91c4
   2a330:	movt	r0, #6
   2a334:	bl	12398 <gettext@plt>
   2a338:	mov	r2, r0
   2a33c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a340:	mov	r1, r4
   2a344:	mov	r0, #1
   2a348:	bl	122b4 <error@plt>
   2a34c:	nop	{0}
   2a350:	sub	sp, fp, #16
   2a354:	ldr	r4, [sp]
   2a358:	ldrd	r6, [sp, #4]
   2a35c:	ldr	fp, [sp, #12]
   2a360:	add	sp, sp, #16
   2a364:	pop	{pc}		; (ldr pc, [sp], #4)
   2a368:	str	fp, [sp, #-8]!
   2a36c:	str	lr, [sp, #4]
   2a370:	add	fp, sp, #4
   2a374:	sub	sp, sp, #8
   2a378:	str	r0, [fp, #-8]
   2a37c:	str	r1, [fp, #-12]
   2a380:	ldr	r2, [fp, #-8]
   2a384:	movw	r1, #37312	; 0x91c0
   2a388:	movt	r1, #6
   2a38c:	ldr	r0, [fp, #-12]
   2a390:	bl	123f8 <fprintf@plt>
   2a394:	mov	r3, r0
   2a398:	mvn	r3, r3
   2a39c:	lsr	r3, r3, #31
   2a3a0:	uxtb	r3, r3
   2a3a4:	mov	r0, r3
   2a3a8:	sub	sp, fp, #4
   2a3ac:	ldr	fp, [sp]
   2a3b0:	add	sp, sp, #4
   2a3b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2a3b8:	strd	r4, [sp, #-16]!
   2a3bc:	str	fp, [sp, #8]
   2a3c0:	str	lr, [sp, #12]
   2a3c4:	add	fp, sp, #12
   2a3c8:	sub	sp, sp, #16
   2a3cc:	mov	r5, r0
   2a3d0:	str	r1, [fp, #-24]	; 0xffffffe8
   2a3d4:	b	2a56c <__assert_fail@plt+0x17e80>
   2a3d8:	mvn	r3, #0
   2a3dc:	str	r3, [fp, #-16]
   2a3e0:	mov	r3, r4
   2a3e4:	cmp	r3, #12
   2a3e8:	beq	2a4b4 <__assert_fail@plt+0x17dc8>
   2a3ec:	cmp	r3, #12
   2a3f0:	bgt	2a410 <__assert_fail@plt+0x17d24>
   2a3f4:	cmp	r3, #9
   2a3f8:	beq	2a49c <__assert_fail@plt+0x17db0>
   2a3fc:	cmp	r3, #10
   2a400:	beq	2a454 <__assert_fail@plt+0x17d68>
   2a404:	cmp	r3, #8
   2a408:	beq	2a46c <__assert_fail@plt+0x17d80>
   2a40c:	b	2a4fc <__assert_fail@plt+0x17e10>
   2a410:	cmp	r3, #32
   2a414:	beq	2a4cc <__assert_fail@plt+0x17de0>
   2a418:	cmp	r3, #32
   2a41c:	bgt	2a42c <__assert_fail@plt+0x17d40>
   2a420:	cmp	r3, #13
   2a424:	beq	2a484 <__assert_fail@plt+0x17d98>
   2a428:	b	2a4fc <__assert_fail@plt+0x17e10>
   2a42c:	cmp	r3, #34	; 0x22
   2a430:	beq	2a4e4 <__assert_fail@plt+0x17df8>
   2a434:	cmp	r3, #92	; 0x5c
   2a438:	bne	2a4fc <__assert_fail@plt+0x17e10>
   2a43c:	movw	r1, #37356	; 0x91ec
   2a440:	movt	r1, #6
   2a444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a448:	bl	123f8 <fprintf@plt>
   2a44c:	str	r0, [fp, #-16]
   2a450:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a454:	movw	r1, #37360	; 0x91f0
   2a458:	movt	r1, #6
   2a45c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a460:	bl	123f8 <fprintf@plt>
   2a464:	str	r0, [fp, #-16]
   2a468:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a46c:	movw	r1, #37364	; 0x91f4
   2a470:	movt	r1, #6
   2a474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a478:	bl	123f8 <fprintf@plt>
   2a47c:	str	r0, [fp, #-16]
   2a480:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a484:	movw	r1, #37368	; 0x91f8
   2a488:	movt	r1, #6
   2a48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a490:	bl	123f8 <fprintf@plt>
   2a494:	str	r0, [fp, #-16]
   2a498:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a49c:	movw	r1, #37372	; 0x91fc
   2a4a0:	movt	r1, #6
   2a4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a4a8:	bl	123f8 <fprintf@plt>
   2a4ac:	str	r0, [fp, #-16]
   2a4b0:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a4b4:	movw	r1, #37376	; 0x9200
   2a4b8:	movt	r1, #6
   2a4bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a4c0:	bl	123f8 <fprintf@plt>
   2a4c4:	str	r0, [fp, #-16]
   2a4c8:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a4cc:	movw	r1, #37380	; 0x9204
   2a4d0:	movt	r1, #6
   2a4d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a4d8:	bl	123f8 <fprintf@plt>
   2a4dc:	str	r0, [fp, #-16]
   2a4e0:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a4e4:	movw	r1, #37384	; 0x9208
   2a4e8:	movt	r1, #6
   2a4ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a4f0:	bl	123f8 <fprintf@plt>
   2a4f4:	str	r0, [fp, #-16]
   2a4f8:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a4fc:	cmp	r4, #32
   2a500:	bls	2a53c <__assert_fail@plt+0x17e50>
   2a504:	cmp	r4, #126	; 0x7e
   2a508:	bhi	2a53c <__assert_fail@plt+0x17e50>
   2a50c:	mov	r3, r4
   2a510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a514:	mov	r0, r3
   2a518:	bl	125c0 <putc@plt>
   2a51c:	mov	r3, r0
   2a520:	cmn	r3, #1
   2a524:	bne	2a530 <__assert_fail@plt+0x17e44>
   2a528:	mov	r3, #0
   2a52c:	b	2a584 <__assert_fail@plt+0x17e98>
   2a530:	mov	r3, #1
   2a534:	str	r3, [fp, #-16]
   2a538:	b	2a558 <__assert_fail@plt+0x17e6c>
   2a53c:	mov	r3, r4
   2a540:	mov	r2, r3
   2a544:	movw	r1, #37388	; 0x920c
   2a548:	movt	r1, #6
   2a54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a550:	bl	123f8 <fprintf@plt>
   2a554:	str	r0, [fp, #-16]
   2a558:	ldr	r3, [fp, #-16]
   2a55c:	cmp	r3, #0
   2a560:	bge	2a56c <__assert_fail@plt+0x17e80>
   2a564:	mov	r3, #0
   2a568:	b	2a584 <__assert_fail@plt+0x17e98>
   2a56c:	mov	r3, r5
   2a570:	add	r5, r3, #1
   2a574:	ldrb	r4, [r3]
   2a578:	cmp	r4, #0
   2a57c:	bne	2a3d8 <__assert_fail@plt+0x17cec>
   2a580:	mov	r3, #1
   2a584:	mov	r0, r3
   2a588:	sub	sp, fp, #12
   2a58c:	ldrd	r4, [sp]
   2a590:	ldr	fp, [sp, #8]
   2a594:	add	sp, sp, #12
   2a598:	pop	{pc}		; (ldr pc, [sp], #4)
   2a59c:	str	fp, [sp, #-8]!
   2a5a0:	str	lr, [sp, #4]
   2a5a4:	add	fp, sp, #4
   2a5a8:	sub	sp, sp, #8
   2a5ac:	str	r1, [fp, #-8]
   2a5b0:	str	r2, [fp, #-12]
   2a5b4:	ldr	r3, [fp, #-12]
   2a5b8:	cmp	r3, #0
   2a5bc:	beq	2a5d0 <__assert_fail@plt+0x17ee4>
   2a5c0:	ldr	r1, [fp, #-8]
   2a5c4:	bl	2a368 <__assert_fail@plt+0x17c7c>
   2a5c8:	mov	r3, r0
   2a5cc:	b	2a5dc <__assert_fail@plt+0x17ef0>
   2a5d0:	ldr	r1, [fp, #-8]
   2a5d4:	bl	2a3b8 <__assert_fail@plt+0x17ccc>
   2a5d8:	mov	r3, r0
   2a5dc:	mov	r0, r3
   2a5e0:	sub	sp, fp, #4
   2a5e4:	ldr	fp, [sp]
   2a5e8:	add	sp, sp, #4
   2a5ec:	pop	{pc}		; (ldr pc, [sp], #4)
   2a5f0:	str	fp, [sp, #-8]!
   2a5f4:	str	lr, [sp, #4]
   2a5f8:	add	fp, sp, #4
   2a5fc:	sub	sp, sp, #8192	; 0x2000
   2a600:	sub	sp, sp, #40	; 0x28
   2a604:	sub	ip, fp, #8192	; 0x2000
   2a608:	sub	ip, ip, #4
   2a60c:	str	r0, [ip, #-20]	; 0xffffffec
   2a610:	sub	r0, fp, #8192	; 0x2000
   2a614:	sub	r0, r0, #4
   2a618:	str	r1, [r0, #-24]	; 0xffffffe8
   2a61c:	mov	r1, r2
   2a620:	sub	r2, fp, #8192	; 0x2000
   2a624:	sub	r2, r2, #4
   2a628:	str	r3, [r2, #-32]	; 0xffffffe0
   2a62c:	sub	r3, fp, #8192	; 0x2000
   2a630:	sub	r3, r3, #4
   2a634:	mov	r2, r1
   2a638:	strb	r2, [r3, #-25]	; 0xffffffe7
   2a63c:	sub	r3, fp, #8192	; 0x2000
   2a640:	sub	r3, r3, #4
   2a644:	ldrb	r3, [r3, #-25]	; 0xffffffe7
   2a648:	cmp	r3, #0
   2a64c:	beq	2a758 <__assert_fail@plt+0x1806c>
   2a650:	sub	r0, fp, #8192	; 0x2000
   2a654:	sub	r0, r0, #4
   2a658:	sub	r0, r0, #12
   2a65c:	sub	r3, fp, #8192	; 0x2000
   2a660:	sub	r3, r3, #4
   2a664:	ldr	r3, [r3, #-24]	; 0xffffffe8
   2a668:	str	r3, [sp]
   2a66c:	mvn	r3, #0
   2a670:	ldr	r2, [fp, #4]
   2a674:	mov	r1, #8192	; 0x2000
   2a678:	bl	3b510 <__assert_fail@plt+0x28e24>
   2a67c:	str	r0, [fp, #-16]
   2a680:	ldr	r3, [fp, #-16]
   2a684:	cmp	r3, #8192	; 0x2000
   2a688:	bcs	2a6a0 <__assert_fail@plt+0x17fb4>
   2a68c:	sub	r3, fp, #8192	; 0x2000
   2a690:	sub	r3, r3, #4
   2a694:	sub	r3, r3, #12
   2a698:	str	r3, [fp, #-12]
   2a69c:	b	2a6e0 <__assert_fail@plt+0x17ff4>
   2a6a0:	ldr	r3, [fp, #-16]
   2a6a4:	add	r3, r3, #1
   2a6a8:	mov	r0, r3
   2a6ac:	bl	3d8ec <__assert_fail@plt+0x2b200>
   2a6b0:	mov	r3, r0
   2a6b4:	str	r3, [fp, #-12]
   2a6b8:	ldr	r3, [fp, #-16]
   2a6bc:	add	r1, r3, #1
   2a6c0:	sub	r3, fp, #8192	; 0x2000
   2a6c4:	sub	r3, r3, #4
   2a6c8:	ldr	r3, [r3, #-24]	; 0xffffffe8
   2a6cc:	str	r3, [sp]
   2a6d0:	mvn	r3, #0
   2a6d4:	ldr	r2, [fp, #4]
   2a6d8:	ldr	r0, [fp, #-12]
   2a6dc:	bl	3b510 <__assert_fail@plt+0x28e24>
   2a6e0:	ldr	r1, [fp, #-16]
   2a6e4:	ldr	r0, [fp, #-12]
   2a6e8:	bl	2a874 <__assert_fail@plt+0x18188>
   2a6ec:	str	r0, [fp, #-16]
   2a6f0:	ldr	r2, [fp, #-12]
   2a6f4:	ldr	r3, [fp, #-16]
   2a6f8:	add	r3, r2, r3
   2a6fc:	mov	r2, #0
   2a700:	strb	r2, [r3]
   2a704:	sub	r3, fp, #8192	; 0x2000
   2a708:	sub	r3, r3, #4
   2a70c:	mov	r1, r3
   2a710:	sub	r3, fp, #8192	; 0x2000
   2a714:	sub	r3, r3, #4
   2a718:	ldr	r2, [fp, #-12]
   2a71c:	ldr	r1, [r1, #-32]	; 0xffffffe0
   2a720:	ldr	r0, [r3, #-20]	; 0xffffffec
   2a724:	bl	123f8 <fprintf@plt>
   2a728:	str	r0, [fp, #-8]
   2a72c:	sub	r3, fp, #8192	; 0x2000
   2a730:	sub	r3, r3, #4
   2a734:	sub	r3, r3, #12
   2a738:	ldr	r2, [fp, #-12]
   2a73c:	cmp	r2, r3
   2a740:	beq	2a780 <__assert_fail@plt+0x18094>
   2a744:	ldr	r0, [fp, #-12]
   2a748:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2a74c:	mov	r3, #0
   2a750:	str	r3, [fp, #-12]
   2a754:	b	2a780 <__assert_fail@plt+0x18094>
   2a758:	sub	r3, fp, #8192	; 0x2000
   2a75c:	sub	r3, r3, #4
   2a760:	mov	r1, r3
   2a764:	sub	r3, fp, #8192	; 0x2000
   2a768:	sub	r3, r3, #4
   2a76c:	ldr	r2, [fp, #4]
   2a770:	ldr	r1, [r1, #-32]	; 0xffffffe0
   2a774:	ldr	r0, [r3, #-20]	; 0xffffffec
   2a778:	bl	123f8 <fprintf@plt>
   2a77c:	str	r0, [fp, #-8]
   2a780:	ldr	r3, [fp, #-8]
   2a784:	mov	r0, r3
   2a788:	sub	sp, fp, #4
   2a78c:	ldr	fp, [sp]
   2a790:	add	sp, sp, #4
   2a794:	pop	{pc}		; (ldr pc, [sp], #4)
   2a798:	push	{fp}		; (str fp, [sp, #-4]!)
   2a79c:	add	fp, sp, #0
   2a7a0:	sub	sp, sp, #12
   2a7a4:	mov	r3, r0
   2a7a8:	strb	r3, [fp, #-5]
   2a7ac:	ldrb	r3, [fp, #-5]
   2a7b0:	mov	r0, r3
   2a7b4:	add	sp, fp, #0
   2a7b8:	pop	{fp}		; (ldr fp, [sp], #4)
   2a7bc:	bx	lr
   2a7c0:	str	r4, [sp, #-12]!
   2a7c4:	str	fp, [sp, #4]
   2a7c8:	str	lr, [sp, #8]
   2a7cc:	add	fp, sp, #8
   2a7d0:	sub	sp, sp, #20
   2a7d4:	str	r0, [fp, #-24]	; 0xffffffe8
   2a7d8:	str	r1, [fp, #-28]	; 0xffffffe4
   2a7dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a7e0:	str	r3, [fp, #-16]
   2a7e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a7e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a7ec:	add	r3, r2, r3
   2a7f0:	str	r3, [fp, #-20]	; 0xffffffec
   2a7f4:	b	2a848 <__assert_fail@plt+0x1815c>
   2a7f8:	bl	12368 <__ctype_b_loc@plt>
   2a7fc:	mov	r3, r0
   2a800:	ldr	r4, [r3]
   2a804:	ldr	r3, [fp, #-16]
   2a808:	ldrb	r3, [r3]
   2a80c:	mov	r0, r3
   2a810:	bl	2a798 <__assert_fail@plt+0x180ac>
   2a814:	mov	r3, r0
   2a818:	lsl	r3, r3, #1
   2a81c:	add	r3, r4, r3
   2a820:	ldrh	r3, [r3]
   2a824:	and	r3, r3, #16384	; 0x4000
   2a828:	cmp	r3, #0
   2a82c:	bne	2a83c <__assert_fail@plt+0x18150>
   2a830:	ldr	r3, [fp, #-16]
   2a834:	mov	r2, #63	; 0x3f
   2a838:	strb	r2, [r3]
   2a83c:	ldr	r3, [fp, #-16]
   2a840:	add	r3, r3, #1
   2a844:	str	r3, [fp, #-16]
   2a848:	ldr	r2, [fp, #-16]
   2a84c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a850:	cmp	r2, r3
   2a854:	bcc	2a7f8 <__assert_fail@plt+0x1810c>
   2a858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a85c:	mov	r0, r3
   2a860:	sub	sp, fp, #8
   2a864:	ldr	r4, [sp]
   2a868:	ldr	fp, [sp, #4]
   2a86c:	add	sp, sp, #8
   2a870:	pop	{pc}		; (ldr pc, [sp], #4)
   2a874:	str	fp, [sp, #-8]!
   2a878:	str	lr, [sp, #4]
   2a87c:	add	fp, sp, #4
   2a880:	sub	sp, sp, #40	; 0x28
   2a884:	str	r0, [fp, #-40]	; 0xffffffd8
   2a888:	str	r1, [fp, #-44]	; 0xffffffd4
   2a88c:	bl	12254 <__ctype_get_mb_cur_max@plt>
   2a890:	mov	r3, r0
   2a894:	cmp	r3, #1
   2a898:	bhi	2a8b0 <__assert_fail@plt+0x181c4>
   2a89c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a8a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a8a4:	bl	2a7c0 <__assert_fail@plt+0x180d4>
   2a8a8:	mov	r3, r0
   2a8ac:	b	2aaa4 <__assert_fail@plt+0x183b8>
   2a8b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a8b4:	str	r3, [fp, #-8]
   2a8b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a8bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a8c0:	add	r3, r2, r3
   2a8c4:	str	r3, [fp, #-20]	; 0xffffffec
   2a8c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a8cc:	str	r3, [fp, #-12]
   2a8d0:	b	2aa80 <__assert_fail@plt+0x18394>
   2a8d4:	ldr	r3, [fp, #-8]
   2a8d8:	ldrb	r3, [r3]
   2a8dc:	cmp	r3, #63	; 0x3f
   2a8e0:	bgt	2a8fc <__assert_fail@plt+0x18210>
   2a8e4:	cmp	r3, #37	; 0x25
   2a8e8:	bge	2a918 <__assert_fail@plt+0x1822c>
   2a8ec:	sub	r3, r3, #32
   2a8f0:	cmp	r3, #3
   2a8f4:	bhi	2a93c <__assert_fail@plt+0x18250>
   2a8f8:	b	2a918 <__assert_fail@plt+0x1822c>
   2a8fc:	cmp	r3, #65	; 0x41
   2a900:	blt	2a93c <__assert_fail@plt+0x18250>
   2a904:	cmp	r3, #95	; 0x5f
   2a908:	ble	2a918 <__assert_fail@plt+0x1822c>
   2a90c:	sub	r3, r3, #97	; 0x61
   2a910:	cmp	r3, #29
   2a914:	bhi	2a93c <__assert_fail@plt+0x18250>
   2a918:	ldr	r2, [fp, #-8]
   2a91c:	add	r3, r2, #1
   2a920:	str	r3, [fp, #-8]
   2a924:	ldr	r3, [fp, #-12]
   2a928:	add	r1, r3, #1
   2a92c:	str	r1, [fp, #-12]
   2a930:	ldrb	r2, [r2]
   2a934:	strb	r2, [r3]
   2a938:	b	2aa80 <__assert_fail@plt+0x18394>
   2a93c:	sub	r3, fp, #32
   2a940:	mov	r2, #8
   2a944:	mov	r1, #0
   2a948:	mov	r0, r3
   2a94c:	bl	12434 <memset@plt>
   2a950:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a954:	ldr	r3, [fp, #-8]
   2a958:	sub	r3, r2, r3
   2a95c:	mov	r2, r3
   2a960:	sub	r3, fp, #32
   2a964:	sub	r0, fp, #36	; 0x24
   2a968:	ldr	r1, [fp, #-8]
   2a96c:	bl	435a0 <__assert_fail@plt+0x30eb4>
   2a970:	str	r0, [fp, #-16]
   2a974:	ldr	r3, [fp, #-16]
   2a978:	cmn	r3, #1
   2a97c:	bne	2a9a4 <__assert_fail@plt+0x182b8>
   2a980:	ldr	r3, [fp, #-8]
   2a984:	add	r3, r3, #1
   2a988:	str	r3, [fp, #-8]
   2a98c:	ldr	r3, [fp, #-12]
   2a990:	add	r2, r3, #1
   2a994:	str	r2, [fp, #-12]
   2a998:	mov	r2, #63	; 0x3f
   2a99c:	strb	r2, [r3]
   2a9a0:	b	2aa7c <__assert_fail@plt+0x18390>
   2a9a4:	ldr	r3, [fp, #-16]
   2a9a8:	cmn	r3, #2
   2a9ac:	bne	2a9d0 <__assert_fail@plt+0x182e4>
   2a9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a9b4:	str	r3, [fp, #-8]
   2a9b8:	ldr	r3, [fp, #-12]
   2a9bc:	add	r2, r3, #1
   2a9c0:	str	r2, [fp, #-12]
   2a9c4:	mov	r2, #63	; 0x3f
   2a9c8:	strb	r2, [r3]
   2a9cc:	b	2aa7c <__assert_fail@plt+0x18390>
   2a9d0:	ldr	r3, [fp, #-16]
   2a9d4:	cmp	r3, #0
   2a9d8:	bne	2a9e4 <__assert_fail@plt+0x182f8>
   2a9dc:	mov	r3, #1
   2a9e0:	str	r3, [fp, #-16]
   2a9e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a9e8:	mov	r0, r3
   2a9ec:	bl	12074 <wcwidth@plt>
   2a9f0:	str	r0, [fp, #-24]	; 0xffffffe8
   2a9f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a9f8:	cmp	r3, #0
   2a9fc:	blt	2aa40 <__assert_fail@plt+0x18354>
   2aa00:	b	2aa30 <__assert_fail@plt+0x18344>
   2aa04:	ldr	r2, [fp, #-8]
   2aa08:	add	r3, r2, #1
   2aa0c:	str	r3, [fp, #-8]
   2aa10:	ldr	r3, [fp, #-12]
   2aa14:	add	r1, r3, #1
   2aa18:	str	r1, [fp, #-12]
   2aa1c:	ldrb	r2, [r2]
   2aa20:	strb	r2, [r3]
   2aa24:	ldr	r3, [fp, #-16]
   2aa28:	sub	r3, r3, #1
   2aa2c:	str	r3, [fp, #-16]
   2aa30:	ldr	r3, [fp, #-16]
   2aa34:	cmp	r3, #0
   2aa38:	bne	2aa04 <__assert_fail@plt+0x18318>
   2aa3c:	b	2aa64 <__assert_fail@plt+0x18378>
   2aa40:	ldr	r2, [fp, #-8]
   2aa44:	ldr	r3, [fp, #-16]
   2aa48:	add	r3, r2, r3
   2aa4c:	str	r3, [fp, #-8]
   2aa50:	ldr	r3, [fp, #-12]
   2aa54:	add	r2, r3, #1
   2aa58:	str	r2, [fp, #-12]
   2aa5c:	mov	r2, #63	; 0x3f
   2aa60:	strb	r2, [r3]
   2aa64:	sub	r3, fp, #32
   2aa68:	mov	r0, r3
   2aa6c:	bl	12134 <mbsinit@plt>
   2aa70:	mov	r3, r0
   2aa74:	cmp	r3, #0
   2aa78:	beq	2a950 <__assert_fail@plt+0x18264>
   2aa7c:	nop	{0}
   2aa80:	ldr	r2, [fp, #-8]
   2aa84:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aa88:	cmp	r2, r3
   2aa8c:	bcc	2a8d4 <__assert_fail@plt+0x181e8>
   2aa90:	ldr	r2, [fp, #-12]
   2aa94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2aa98:	sub	r3, r2, r3
   2aa9c:	str	r3, [fp, #-44]	; 0xffffffd4
   2aaa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2aaa4:	mov	r0, r3
   2aaa8:	sub	sp, fp, #4
   2aaac:	ldr	fp, [sp]
   2aab0:	add	sp, sp, #4
   2aab4:	pop	{pc}		; (ldr pc, [sp], #4)
   2aab8:	str	r4, [sp, #-12]!
   2aabc:	str	fp, [sp, #4]
   2aac0:	str	lr, [sp, #8]
   2aac4:	add	fp, sp, #8
   2aac8:	sub	sp, sp, #36	; 0x24
   2aacc:	str	r0, [fp, #-32]	; 0xffffffe0
   2aad0:	mov	r3, #0
   2aad4:	str	r3, [fp, #-20]	; 0xffffffec
   2aad8:	mov	r3, #0
   2aadc:	str	r3, [fp, #-16]
   2aae0:	b	2aba4 <__assert_fail@plt+0x184b8>
   2aae4:	movw	r2, #50736	; 0xc630
   2aae8:	movt	r2, #7
   2aaec:	ldr	r1, [fp, #-16]
   2aaf0:	mov	r3, r1
   2aaf4:	lsl	r3, r3, #1
   2aaf8:	add	r3, r3, r1
   2aafc:	lsl	r3, r3, #2
   2ab00:	add	r3, r2, r3
   2ab04:	ldr	r3, [r3]
   2ab08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ab0c:	mov	r0, r3
   2ab10:	bl	11ffc <strcmp@plt>
   2ab14:	mov	r3, r0
   2ab18:	cmp	r3, #0
   2ab1c:	bne	2ab4c <__assert_fail@plt+0x18460>
   2ab20:	movw	r2, #50736	; 0xc630
   2ab24:	movt	r2, #7
   2ab28:	ldr	r1, [fp, #-16]
   2ab2c:	mov	r3, r1
   2ab30:	lsl	r3, r3, #1
   2ab34:	add	r3, r3, r1
   2ab38:	lsl	r3, r3, #2
   2ab3c:	add	r3, r2, r3
   2ab40:	add	r3, r3, #8
   2ab44:	ldr	r3, [r3]
   2ab48:	b	2acb8 <__assert_fail@plt+0x185cc>
   2ab4c:	movw	r2, #50736	; 0xc630
   2ab50:	movt	r2, #7
   2ab54:	ldr	r1, [fp, #-16]
   2ab58:	mov	r3, r1
   2ab5c:	lsl	r3, r3, #1
   2ab60:	add	r3, r3, r1
   2ab64:	lsl	r3, r3, #2
   2ab68:	add	r3, r2, r3
   2ab6c:	ldr	r3, [r3]
   2ab70:	mov	r0, r3
   2ab74:	bl	3c22c <__assert_fail@plt+0x29b40>
   2ab78:	mov	r3, r0
   2ab7c:	mov	r0, r3
   2ab80:	bl	123bc <strlen@plt>
   2ab84:	mov	r3, r0
   2ab88:	add	r3, r3, #2
   2ab8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ab90:	add	r3, r2, r3
   2ab94:	str	r3, [fp, #-20]	; 0xffffffec
   2ab98:	ldr	r3, [fp, #-16]
   2ab9c:	add	r3, r3, #1
   2aba0:	str	r3, [fp, #-16]
   2aba4:	ldr	r3, [fp, #-16]
   2aba8:	cmp	r3, #12
   2abac:	bls	2aae4 <__assert_fail@plt+0x183f8>
   2abb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2abb4:	add	r3, r3, #1
   2abb8:	mov	r0, r3
   2abbc:	bl	3d8ec <__assert_fail@plt+0x2b200>
   2abc0:	mov	r3, r0
   2abc4:	str	r3, [fp, #-28]	; 0xffffffe4
   2abc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2abcc:	str	r3, [fp, #-24]	; 0xffffffe8
   2abd0:	mov	r3, #0
   2abd4:	str	r3, [fp, #-16]
   2abd8:	b	2ac74 <__assert_fail@plt+0x18588>
   2abdc:	ldr	r3, [fp, #-16]
   2abe0:	cmp	r3, #0
   2abe4:	beq	2ac10 <__assert_fail@plt+0x18524>
   2abe8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2abec:	movw	r3, #37532	; 0x929c
   2abf0:	movt	r3, #6
   2abf4:	ldrh	r1, [r3]
   2abf8:	strh	r1, [r2]
   2abfc:	ldrb	r3, [r3, #2]
   2ac00:	strb	r3, [r2, #2]
   2ac04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac08:	add	r3, r3, #2
   2ac0c:	str	r3, [fp, #-24]	; 0xffffffe8
   2ac10:	movw	r2, #50736	; 0xc630
   2ac14:	movt	r2, #7
   2ac18:	ldr	r1, [fp, #-16]
   2ac1c:	mov	r3, r1
   2ac20:	lsl	r3, r3, #1
   2ac24:	add	r3, r3, r1
   2ac28:	lsl	r3, r3, #2
   2ac2c:	add	r3, r2, r3
   2ac30:	ldr	r3, [r3]
   2ac34:	mov	r0, r3
   2ac38:	bl	3c22c <__assert_fail@plt+0x29b40>
   2ac3c:	mov	r3, r0
   2ac40:	mov	r2, r3
   2ac44:	movw	r1, #37536	; 0x92a0
   2ac48:	movt	r1, #6
   2ac4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ac50:	bl	12590 <sprintf@plt>
   2ac54:	mov	r3, r0
   2ac58:	mov	r2, r3
   2ac5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ac60:	add	r3, r3, r2
   2ac64:	str	r3, [fp, #-24]	; 0xffffffe8
   2ac68:	ldr	r3, [fp, #-16]
   2ac6c:	add	r3, r3, #1
   2ac70:	str	r3, [fp, #-16]
   2ac74:	ldr	r3, [fp, #-16]
   2ac78:	cmp	r3, #12
   2ac7c:	bls	2abdc <__assert_fail@plt+0x184f0>
   2ac80:	movw	r0, #37540	; 0x92a4
   2ac84:	movt	r0, #6
   2ac88:	bl	12398 <gettext@plt>
   2ac8c:	mov	r4, r0
   2ac90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ac94:	bl	3c22c <__assert_fail@plt+0x29b40>
   2ac98:	mov	r2, r0
   2ac9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2aca0:	str	r3, [sp]
   2aca4:	mov	r3, r2
   2aca8:	mov	r2, r4
   2acac:	mov	r1, #0
   2acb0:	mov	r0, #1
   2acb4:	bl	122b4 <error@plt>
   2acb8:	mov	r0, r3
   2acbc:	sub	sp, fp, #8
   2acc0:	ldr	r4, [sp]
   2acc4:	ldr	fp, [sp, #4]
   2acc8:	add	sp, sp, #8
   2accc:	pop	{pc}		; (ldr pc, [sp], #4)
   2acd0:	push	{fp}		; (str fp, [sp, #-4]!)
   2acd4:	add	fp, sp, #0
   2acd8:	sub	sp, sp, #12
   2acdc:	str	r0, [fp, #-8]
   2ace0:	ldr	r3, [fp, #-8]
   2ace4:	cmp	r3, #12
   2ace8:	bhi	2ad14 <__assert_fail@plt+0x18628>
   2acec:	movw	r2, #50736	; 0xc630
   2acf0:	movt	r2, #7
   2acf4:	ldr	r1, [fp, #-8]
   2acf8:	mov	r3, r1
   2acfc:	lsl	r3, r3, #1
   2ad00:	add	r3, r3, r1
   2ad04:	lsl	r3, r3, #2
   2ad08:	add	r3, r2, r3
   2ad0c:	ldr	r3, [r3]
   2ad10:	b	2ad18 <__assert_fail@plt+0x1862c>
   2ad14:	mov	r3, #0
   2ad18:	mov	r0, r3
   2ad1c:	add	sp, fp, #0
   2ad20:	pop	{fp}		; (ldr fp, [sp], #4)
   2ad24:	bx	lr
   2ad28:	push	{fp}		; (str fp, [sp, #-4]!)
   2ad2c:	add	fp, sp, #0
   2ad30:	sub	sp, sp, #12
   2ad34:	str	r0, [fp, #-8]
   2ad38:	ldr	r3, [fp, #-8]
   2ad3c:	cmp	r3, #12
   2ad40:	bhi	2ad70 <__assert_fail@plt+0x18684>
   2ad44:	movw	r2, #50736	; 0xc630
   2ad48:	movt	r2, #7
   2ad4c:	ldr	r1, [fp, #-8]
   2ad50:	mov	r3, r1
   2ad54:	lsl	r3, r3, #1
   2ad58:	add	r3, r3, r1
   2ad5c:	lsl	r3, r3, #2
   2ad60:	add	r3, r2, r3
   2ad64:	add	r3, r3, #8
   2ad68:	ldr	r3, [r3]
   2ad6c:	b	2ad74 <__assert_fail@plt+0x18688>
   2ad70:	mvn	r3, #0
   2ad74:	mov	r0, r3
   2ad78:	add	sp, fp, #0
   2ad7c:	pop	{fp}		; (ldr fp, [sp], #4)
   2ad80:	bx	lr
   2ad84:	push	{fp}		; (str fp, [sp, #-4]!)
   2ad88:	add	fp, sp, #0
   2ad8c:	sub	sp, sp, #12
   2ad90:	str	r0, [fp, #-8]
   2ad94:	ldr	r3, [fp, #-8]
   2ad98:	cmp	r3, #12
   2ad9c:	bhi	2adcc <__assert_fail@plt+0x186e0>
   2ada0:	movw	r2, #50736	; 0xc630
   2ada4:	movt	r2, #7
   2ada8:	ldr	r1, [fp, #-8]
   2adac:	mov	r3, r1
   2adb0:	lsl	r3, r3, #1
   2adb4:	add	r3, r3, r1
   2adb8:	lsl	r3, r3, #2
   2adbc:	add	r3, r2, r3
   2adc0:	add	r3, r3, #4
   2adc4:	ldr	r3, [r3]
   2adc8:	b	2add0 <__assert_fail@plt+0x186e4>
   2adcc:	mov	r3, #0
   2add0:	mov	r0, r3
   2add4:	add	sp, fp, #0
   2add8:	pop	{fp}		; (ldr fp, [sp], #4)
   2addc:	bx	lr
   2ade0:	push	{fp}		; (str fp, [sp, #-4]!)
   2ade4:	add	fp, sp, #0
   2ade8:	sub	sp, sp, #20
   2adec:	str	r0, [fp, #-16]
   2adf0:	str	r1, [fp, #-20]	; 0xffffffec
   2adf4:	ldr	r3, [fp, #-16]
   2adf8:	cmp	r3, #12
   2adfc:	bls	2ae08 <__assert_fail@plt+0x1871c>
   2ae00:	mvn	r3, #0
   2ae04:	b	2aedc <__assert_fail@plt+0x187f0>
   2ae08:	movw	r2, #50736	; 0xc630
   2ae0c:	movt	r2, #7
   2ae10:	ldr	r1, [fp, #-16]
   2ae14:	mov	r3, r1
   2ae18:	lsl	r3, r3, #1
   2ae1c:	add	r3, r3, r1
   2ae20:	lsl	r3, r3, #2
   2ae24:	add	r3, r2, r3
   2ae28:	add	r3, r3, #8
   2ae2c:	ldr	r3, [r3]
   2ae30:	str	r3, [fp, #-12]
   2ae34:	mov	r3, #0
   2ae38:	str	r3, [fp, #-8]
   2ae3c:	b	2aec8 <__assert_fail@plt+0x187dc>
   2ae40:	movw	r2, #50736	; 0xc630
   2ae44:	movt	r2, #7
   2ae48:	ldr	r1, [fp, #-8]
   2ae4c:	mov	r3, r1
   2ae50:	lsl	r3, r3, #1
   2ae54:	add	r3, r3, r1
   2ae58:	lsl	r3, r3, #2
   2ae5c:	add	r3, r2, r3
   2ae60:	add	r3, r3, #4
   2ae64:	ldr	r3, [r3]
   2ae68:	mov	r2, r3
   2ae6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae70:	and	r3, r3, r2
   2ae74:	cmp	r3, #0
   2ae78:	beq	2aeb8 <__assert_fail@plt+0x187cc>
   2ae7c:	movw	r2, #50736	; 0xc630
   2ae80:	movt	r2, #7
   2ae84:	ldr	r1, [fp, #-8]
   2ae88:	mov	r3, r1
   2ae8c:	lsl	r3, r3, #1
   2ae90:	add	r3, r3, r1
   2ae94:	lsl	r3, r3, #2
   2ae98:	add	r3, r2, r3
   2ae9c:	add	r3, r3, #8
   2aea0:	ldr	r3, [r3]
   2aea4:	ldr	r2, [fp, #-12]
   2aea8:	cmp	r2, r3
   2aeac:	bne	2aebc <__assert_fail@plt+0x187d0>
   2aeb0:	ldr	r3, [fp, #-8]
   2aeb4:	b	2aedc <__assert_fail@plt+0x187f0>
   2aeb8:	nop	{0}
   2aebc:	ldr	r3, [fp, #-8]
   2aec0:	add	r3, r3, #1
   2aec4:	str	r3, [fp, #-8]
   2aec8:	ldr	r2, [fp, #-8]
   2aecc:	ldr	r3, [fp, #-16]
   2aed0:	cmp	r2, r3
   2aed4:	bcc	2ae40 <__assert_fail@plt+0x18754>
   2aed8:	mvn	r3, #0
   2aedc:	mov	r0, r3
   2aee0:	add	sp, fp, #0
   2aee4:	pop	{fp}		; (ldr fp, [sp], #4)
   2aee8:	bx	lr
   2aeec:	strd	r4, [sp, #-20]!	; 0xffffffec
   2aef0:	str	r6, [sp, #8]
   2aef4:	str	fp, [sp, #12]
   2aef8:	str	lr, [sp, #16]
   2aefc:	add	fp, sp, #16
   2af00:	sub	sp, sp, #28
   2af04:	str	r0, [fp, #-32]	; 0xffffffe0
   2af08:	str	r1, [fp, #-36]	; 0xffffffdc
   2af0c:	bl	12404 <__errno_location@plt>
   2af10:	mov	r2, r0
   2af14:	mov	r3, #0
   2af18:	str	r3, [r2]
   2af1c:	sub	r3, fp, #28
   2af20:	mov	r2, #10
   2af24:	mov	r1, r3
   2af28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2af2c:	bl	12008 <strtol@plt>
   2af30:	str	r0, [fp, #-24]	; 0xffffffe8
   2af34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af38:	cmn	r3, #-2147483647	; 0x80000001
   2af3c:	beq	2af4c <__assert_fail@plt+0x18860>
   2af40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2af44:	cmp	r3, #-2147483648	; 0x80000000
   2af48:	bne	2afa0 <__assert_fail@plt+0x188b4>
   2af4c:	bl	12404 <__errno_location@plt>
   2af50:	mov	r3, r0
   2af54:	ldr	r3, [r3]
   2af58:	cmp	r3, #34	; 0x22
   2af5c:	bne	2af80 <__assert_fail@plt+0x18894>
   2af60:	bl	12404 <__errno_location@plt>
   2af64:	mov	r3, r0
   2af68:	ldr	r1, [r3]
   2af6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2af70:	movw	r2, #37596	; 0x92dc
   2af74:	movt	r2, #6
   2af78:	mov	r0, #1
   2af7c:	bl	122b4 <error@plt>
   2af80:	bl	12404 <__errno_location@plt>
   2af84:	mov	r3, r0
   2af88:	ldr	r1, [r3]
   2af8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2af90:	movw	r2, #37596	; 0x92dc
   2af94:	movt	r2, #6
   2af98:	mov	r0, #1
   2af9c:	bl	122b4 <error@plt>
   2afa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2afa4:	ldrb	r3, [r3]
   2afa8:	cmp	r3, #0
   2afac:	beq	2b010 <__assert_fail@plt+0x18924>
   2afb0:	bl	12404 <__errno_location@plt>
   2afb4:	mov	r3, r0
   2afb8:	ldr	r4, [r3]
   2afbc:	movw	r0, #37600	; 0x92e0
   2afc0:	movt	r0, #6
   2afc4:	bl	12398 <gettext@plt>
   2afc8:	mov	r5, r0
   2afcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2afd0:	mov	r2, r3
   2afd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2afd8:	mov	r0, #0
   2afdc:	bl	3bc98 <__assert_fail@plt+0x295ac>
   2afe0:	mov	r6, r0
   2afe4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2afe8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2afec:	mov	r0, #1
   2aff0:	bl	3bc98 <__assert_fail@plt+0x295ac>
   2aff4:	mov	r3, r0
   2aff8:	str	r3, [sp]
   2affc:	mov	r3, r6
   2b000:	mov	r2, r5
   2b004:	mov	r1, r4
   2b008:	mov	r0, #1
   2b00c:	bl	122b4 <error@plt>
   2b010:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b014:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b018:	cmp	r2, r3
   2b01c:	bne	2b060 <__assert_fail@plt+0x18974>
   2b020:	bl	12404 <__errno_location@plt>
   2b024:	mov	r3, r0
   2b028:	ldr	r4, [r3]
   2b02c:	movw	r0, #37628	; 0x92fc
   2b030:	movt	r0, #6
   2b034:	bl	12398 <gettext@plt>
   2b038:	mov	r5, r0
   2b03c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2b040:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2b044:	mov	r0, #0
   2b048:	bl	3bc98 <__assert_fail@plt+0x295ac>
   2b04c:	mov	r3, r0
   2b050:	mov	r2, r5
   2b054:	mov	r1, r4
   2b058:	mov	r0, #1
   2b05c:	bl	122b4 <error@plt>
   2b060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b064:	mov	r0, r3
   2b068:	sub	sp, fp, #16
   2b06c:	ldrd	r4, [sp]
   2b070:	ldr	r6, [sp, #8]
   2b074:	ldr	fp, [sp, #12]
   2b078:	add	sp, sp, #16
   2b07c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b080:	str	fp, [sp, #-8]!
   2b084:	str	lr, [sp, #4]
   2b088:	add	fp, sp, #4
   2b08c:	sub	sp, sp, #16
   2b090:	str	r0, [fp, #-16]
   2b094:	str	r1, [fp, #-20]	; 0xffffffec
   2b098:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b09c:	ldrb	r3, [r3]
   2b0a0:	cmp	r3, #0
   2b0a4:	beq	2b0d4 <__assert_fail@plt+0x189e8>
   2b0a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b0ac:	ldr	r0, [fp, #-16]
   2b0b0:	bl	12608 <strpbrk@plt>
   2b0b4:	str	r0, [fp, #-8]
   2b0b8:	ldr	r3, [fp, #-8]
   2b0bc:	cmp	r3, #0
   2b0c0:	beq	2b0d4 <__assert_fail@plt+0x189e8>
   2b0c4:	ldr	r2, [fp, #-8]
   2b0c8:	ldr	r3, [fp, #-16]
   2b0cc:	sub	r3, r2, r3
   2b0d0:	b	2b0e0 <__assert_fail@plt+0x189f4>
   2b0d4:	ldr	r0, [fp, #-16]
   2b0d8:	bl	123bc <strlen@plt>
   2b0dc:	mov	r3, r0
   2b0e0:	mov	r0, r3
   2b0e4:	sub	sp, fp, #4
   2b0e8:	ldr	fp, [sp]
   2b0ec:	add	sp, sp, #4
   2b0f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b0f4:	str	fp, [sp, #-8]!
   2b0f8:	str	lr, [sp, #4]
   2b0fc:	add	fp, sp, #4
   2b100:	sub	sp, sp, #16
   2b104:	str	r0, [fp, #-8]
   2b108:	str	r1, [fp, #-12]
   2b10c:	str	r3, [fp, #-20]	; 0xffffffec
   2b110:	mov	r3, r2
   2b114:	strb	r3, [fp, #-13]
   2b118:	ldrb	r3, [fp, #-13]
   2b11c:	cmp	r3, #0
   2b120:	beq	2b140 <__assert_fail@plt+0x18a54>
   2b124:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b128:	mov	r2, #0
   2b12c:	str	r2, [r3]
   2b130:	ldr	r3, [fp, #4]
   2b134:	mov	r2, #0
   2b138:	str	r2, [r3]
   2b13c:	b	2b198 <__assert_fail@plt+0x18aac>
   2b140:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b144:	ldr	r2, [r3]
   2b148:	ldr	r3, [fp, #4]
   2b14c:	ldr	r3, [r3]
   2b150:	add	r2, r2, r3
   2b154:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b158:	str	r2, [r3]
   2b15c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b160:	ldr	r3, [r3]
   2b164:	ldr	r2, [fp, #-8]
   2b168:	add	r3, r2, r3
   2b16c:	ldrb	r3, [r3]
   2b170:	cmp	r3, #0
   2b174:	beq	2b190 <__assert_fail@plt+0x18aa4>
   2b178:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b17c:	ldr	r3, [r3]
   2b180:	add	r2, r3, #1
   2b184:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b188:	str	r2, [r3]
   2b18c:	b	2b198 <__assert_fail@plt+0x18aac>
   2b190:	mov	r3, #0
   2b194:	b	2b1c4 <__assert_fail@plt+0x18ad8>
   2b198:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b19c:	ldr	r3, [r3]
   2b1a0:	ldr	r2, [fp, #-8]
   2b1a4:	add	r3, r2, r3
   2b1a8:	ldr	r1, [fp, #-12]
   2b1ac:	mov	r0, r3
   2b1b0:	bl	2b080 <__assert_fail@plt+0x18994>
   2b1b4:	mov	r2, r0
   2b1b8:	ldr	r3, [fp, #4]
   2b1bc:	str	r2, [r3]
   2b1c0:	mov	r3, #1
   2b1c4:	mov	r0, r3
   2b1c8:	sub	sp, fp, #4
   2b1cc:	ldr	fp, [sp]
   2b1d0:	add	sp, sp, #4
   2b1d4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b1d8:	str	fp, [sp, #-8]!
   2b1dc:	str	lr, [sp, #4]
   2b1e0:	add	fp, sp, #4
   2b1e4:	sub	sp, sp, #24
   2b1e8:	str	r0, [fp, #-8]
   2b1ec:	str	r1, [fp, #-12]
   2b1f0:	movw	r0, #37652	; 0x9314
   2b1f4:	movt	r0, #6
   2b1f8:	bl	12398 <gettext@plt>
   2b1fc:	mov	r1, r0
   2b200:	movw	r3, #37900	; 0x940c
   2b204:	movt	r3, #6
   2b208:	str	r3, [sp, #8]
   2b20c:	movw	r3, #37924	; 0x9424
   2b210:	movt	r3, #6
   2b214:	str	r3, [sp, #4]
   2b218:	movw	r3, #37972	; 0x9454
   2b21c:	movt	r3, #6
   2b220:	str	r3, [sp]
   2b224:	ldr	r3, [fp, #-12]
   2b228:	movw	r2, #37860	; 0x93e4
   2b22c:	movt	r2, #6
   2b230:	ldr	r0, [fp, #-8]
   2b234:	bl	123f8 <fprintf@plt>
   2b238:	mov	r3, r0
   2b23c:	mov	r0, r3
   2b240:	sub	sp, fp, #4
   2b244:	ldr	fp, [sp]
   2b248:	add	sp, sp, #4
   2b24c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b250:	str	fp, [sp, #-8]!
   2b254:	str	lr, [sp, #4]
   2b258:	add	fp, sp, #4
   2b25c:	sub	sp, sp, #16
   2b260:	str	r0, [fp, #-8]
   2b264:	str	r1, [fp, #-12]
   2b268:	movw	r3, #8992	; 0x2320
   2b26c:	movt	r3, #1
   2b270:	str	r3, [sp, #4]
   2b274:	mov	r3, #0
   2b278:	str	r3, [sp]
   2b27c:	mov	r3, #0
   2b280:	mov	r2, #0
   2b284:	ldr	r1, [fp, #-12]
   2b288:	ldr	r0, [fp, #-8]
   2b28c:	bl	2b838 <__assert_fail@plt+0x1914c>
   2b290:	mov	r3, r0
   2b294:	mov	r0, r3
   2b298:	sub	sp, fp, #4
   2b29c:	ldr	fp, [sp]
   2b2a0:	add	sp, sp, #4
   2b2a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b2a8:	str	fp, [sp, #-8]!
   2b2ac:	str	lr, [sp, #4]
   2b2b0:	add	fp, sp, #4
   2b2b4:	sub	sp, sp, #16
   2b2b8:	str	r0, [fp, #-16]
   2b2bc:	mov	r0, #24
   2b2c0:	bl	43510 <__assert_fail@plt+0x30e24>
   2b2c4:	mov	r3, r0
   2b2c8:	str	r3, [fp, #-8]
   2b2cc:	ldr	r3, [fp, #-8]
   2b2d0:	cmp	r3, #0
   2b2d4:	bne	2b2e0 <__assert_fail@plt+0x18bf4>
   2b2d8:	mov	r3, #0
   2b2dc:	b	2b308 <__assert_fail@plt+0x18c1c>
   2b2e0:	ldr	r3, [fp, #-8]
   2b2e4:	mov	r2, #0
   2b2e8:	str	r2, [r3]
   2b2ec:	ldr	r3, [fp, #-8]
   2b2f0:	ldr	r2, [fp, #-16]
   2b2f4:	str	r2, [r3, #16]
   2b2f8:	ldr	r3, [fp, #-8]
   2b2fc:	ldr	r2, [fp, #-16]
   2b300:	str	r2, [r3, #20]
   2b304:	ldr	r3, [fp, #-8]
   2b308:	mov	r0, r3
   2b30c:	sub	sp, fp, #4
   2b310:	ldr	fp, [sp]
   2b314:	add	sp, sp, #4
   2b318:	pop	{pc}		; (ldr pc, [sp], #4)
   2b31c:	str	fp, [sp, #-8]!
   2b320:	str	lr, [sp, #4]
   2b324:	add	fp, sp, #4
   2b328:	sub	sp, sp, #16
   2b32c:	str	r0, [fp, #-16]
   2b330:	mov	r0, #24
   2b334:	bl	43510 <__assert_fail@plt+0x30e24>
   2b338:	mov	r3, r0
   2b33c:	str	r3, [fp, #-8]
   2b340:	ldr	r3, [fp, #-8]
   2b344:	cmp	r3, #0
   2b348:	bne	2b354 <__assert_fail@plt+0x18c68>
   2b34c:	mov	r3, #0
   2b350:	b	2b394 <__assert_fail@plt+0x18ca8>
   2b354:	ldr	r3, [fp, #-8]
   2b358:	ldr	r2, [fp, #-16]
   2b35c:	str	r2, [r3]
   2b360:	ldr	r3, [fp, #-8]
   2b364:	mov	r2, #0
   2b368:	str	r2, [r3, #8]
   2b36c:	ldr	r3, [fp, #-8]
   2b370:	mov	r2, #0
   2b374:	str	r2, [r3, #12]
   2b378:	ldr	r3, [fp, #-8]
   2b37c:	mov	r2, #0
   2b380:	str	r2, [r3, #4]
   2b384:	ldr	r3, [fp, #-8]
   2b388:	mov	r2, #0
   2b38c:	str	r2, [r3, #16]
   2b390:	ldr	r3, [fp, #-8]
   2b394:	mov	r0, r3
   2b398:	sub	sp, fp, #4
   2b39c:	ldr	fp, [sp]
   2b3a0:	add	sp, sp, #4
   2b3a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b3a8:	str	fp, [sp, #-8]!
   2b3ac:	str	lr, [sp, #4]
   2b3b0:	add	fp, sp, #4
   2b3b4:	sub	sp, sp, #16
   2b3b8:	str	r0, [fp, #-16]
   2b3bc:	str	r1, [fp, #-20]	; 0xffffffec
   2b3c0:	ldr	r3, [fp, #-16]
   2b3c4:	ldr	r3, [r3]
   2b3c8:	cmp	r3, #0
   2b3cc:	beq	2b464 <__assert_fail@plt+0x18d78>
   2b3d0:	ldr	r3, [fp, #-16]
   2b3d4:	add	r0, r3, #8
   2b3d8:	ldr	r3, [fp, #-16]
   2b3dc:	add	r1, r3, #12
   2b3e0:	ldr	r3, [fp, #-16]
   2b3e4:	ldr	r3, [r3]
   2b3e8:	mov	r2, #0
   2b3ec:	bl	12644 <getdelim@plt>
   2b3f0:	str	r0, [fp, #-8]
   2b3f4:	ldr	r3, [fp, #-8]
   2b3f8:	cmp	r3, #0
   2b3fc:	bge	2b438 <__assert_fail@plt+0x18d4c>
   2b400:	ldr	r3, [fp, #-16]
   2b404:	ldr	r3, [r3]
   2b408:	mov	r0, r3
   2b40c:	bl	1238c <feof@plt>
   2b410:	mov	r3, r0
   2b414:	cmp	r3, #0
   2b418:	beq	2b424 <__assert_fail@plt+0x18d38>
   2b41c:	mov	r2, #2
   2b420:	b	2b428 <__assert_fail@plt+0x18d3c>
   2b424:	mov	r2, #4
   2b428:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b42c:	str	r2, [r3]
   2b430:	mov	r3, #0
   2b434:	b	2b4b0 <__assert_fail@plt+0x18dc4>
   2b438:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b43c:	mov	r2, #1
   2b440:	str	r2, [r3]
   2b444:	ldr	r3, [fp, #-16]
   2b448:	ldr	r3, [r3, #4]
   2b44c:	add	r2, r3, #1
   2b450:	ldr	r3, [fp, #-16]
   2b454:	str	r2, [r3, #4]
   2b458:	ldr	r3, [fp, #-16]
   2b45c:	ldr	r3, [r3, #8]
   2b460:	b	2b4b0 <__assert_fail@plt+0x18dc4>
   2b464:	ldr	r3, [fp, #-16]
   2b468:	ldr	r3, [r3, #20]
   2b46c:	ldr	r3, [r3]
   2b470:	cmp	r3, #0
   2b474:	bne	2b48c <__assert_fail@plt+0x18da0>
   2b478:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b47c:	mov	r2, #2
   2b480:	str	r2, [r3]
   2b484:	mov	r3, #0
   2b488:	b	2b4b0 <__assert_fail@plt+0x18dc4>
   2b48c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b490:	mov	r2, #1
   2b494:	str	r2, [r3]
   2b498:	ldr	r3, [fp, #-16]
   2b49c:	ldr	r3, [r3, #20]
   2b4a0:	add	r1, r3, #4
   2b4a4:	ldr	r2, [fp, #-16]
   2b4a8:	str	r1, [r2, #20]
   2b4ac:	ldr	r3, [r3]
   2b4b0:	mov	r0, r3
   2b4b4:	sub	sp, fp, #4
   2b4b8:	ldr	fp, [sp]
   2b4bc:	add	sp, sp, #4
   2b4c0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b4c4:	push	{fp}		; (str fp, [sp, #-4]!)
   2b4c8:	add	fp, sp, #0
   2b4cc:	sub	sp, sp, #12
   2b4d0:	str	r0, [fp, #-8]
   2b4d4:	ldr	r3, [fp, #-8]
   2b4d8:	ldr	r3, [r3]
   2b4dc:	cmp	r3, #0
   2b4e0:	beq	2b4f0 <__assert_fail@plt+0x18e04>
   2b4e4:	ldr	r3, [fp, #-8]
   2b4e8:	ldr	r3, [r3, #4]
   2b4ec:	b	2b508 <__assert_fail@plt+0x18e1c>
   2b4f0:	ldr	r3, [fp, #-8]
   2b4f4:	ldr	r2, [r3, #20]
   2b4f8:	ldr	r3, [fp, #-8]
   2b4fc:	ldr	r3, [r3, #16]
   2b500:	sub	r3, r2, r3
   2b504:	asr	r3, r3, #2
   2b508:	mov	r0, r3
   2b50c:	add	sp, fp, #0
   2b510:	pop	{fp}		; (ldr fp, [sp], #4)
   2b514:	bx	lr
   2b518:	str	fp, [sp, #-8]!
   2b51c:	str	lr, [sp, #4]
   2b520:	add	fp, sp, #4
   2b524:	sub	sp, sp, #8
   2b528:	str	r0, [fp, #-8]
   2b52c:	ldr	r3, [fp, #-8]
   2b530:	ldr	r3, [r3]
   2b534:	cmp	r3, #0
   2b538:	beq	2b54c <__assert_fail@plt+0x18e60>
   2b53c:	ldr	r3, [fp, #-8]
   2b540:	ldr	r3, [r3, #8]
   2b544:	mov	r0, r3
   2b548:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2b54c:	ldr	r0, [fp, #-8]
   2b550:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2b554:	nop	{0}
   2b558:	sub	sp, fp, #4
   2b55c:	ldr	fp, [sp]
   2b560:	add	sp, sp, #4
   2b564:	pop	{pc}		; (ldr pc, [sp], #4)
   2b568:	str	r4, [sp, #-12]!
   2b56c:	str	fp, [sp, #4]
   2b570:	str	lr, [sp, #8]
   2b574:	add	fp, sp, #8
   2b578:	sub	sp, sp, #52	; 0x34
   2b57c:	str	r0, [fp, #-48]	; 0xffffffd0
   2b580:	str	r1, [fp, #-52]	; 0xffffffcc
   2b584:	str	r2, [fp, #-56]	; 0xffffffc8
   2b588:	str	r3, [fp, #-60]	; 0xffffffc4
   2b58c:	ldr	r3, [fp, #4]
   2b590:	cmp	r3, #0
   2b594:	bne	2b5a4 <__assert_fail@plt+0x18eb8>
   2b598:	movw	r3, #47968	; 0xbb60
   2b59c:	movt	r3, #6
   2b5a0:	str	r3, [fp, #4]
   2b5a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b5a8:	cmp	r3, #0
   2b5ac:	bne	2b5c0 <__assert_fail@plt+0x18ed4>
   2b5b0:	ldr	r3, [fp, #12]
   2b5b4:	str	r3, [fp, #-56]	; 0xffffffc8
   2b5b8:	mov	r3, #1024	; 0x400
   2b5bc:	str	r3, [fp, #-60]	; 0xffffffc4
   2b5c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b5c4:	str	r3, [fp, #-16]
   2b5c8:	mvn	r3, #-2147483648	; 0x80000000
   2b5cc:	str	r3, [fp, #-24]	; 0xffffffe8
   2b5d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b5d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2b5d8:	cmp	r2, r3
   2b5dc:	movcc	r3, r2
   2b5e0:	movcs	r3, r3
   2b5e4:	str	r3, [fp, #-20]	; 0xffffffec
   2b5e8:	b	2b7d4 <__assert_fail@plt+0x190e8>
   2b5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b5f0:	ldr	r4, [fp, #8]
   2b5f4:	ldr	r2, [fp, #-16]
   2b5f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2b5fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2b600:	blx	r4
   2b604:	str	r0, [fp, #-28]	; 0xffffffe4
   2b608:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b60c:	cmp	r3, #0
   2b610:	bge	2b65c <__assert_fail@plt+0x18f70>
   2b614:	ldr	r2, [fp, #-16]
   2b618:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b61c:	cmp	r2, r3
   2b620:	beq	2b654 <__assert_fail@plt+0x18f68>
   2b624:	bl	12404 <__errno_location@plt>
   2b628:	mov	r3, r0
   2b62c:	ldr	r3, [r3]
   2b630:	str	r3, [fp, #-32]	; 0xffffffe0
   2b634:	ldr	r3, [fp, #4]
   2b638:	ldr	r3, [r3, #8]
   2b63c:	ldr	r0, [fp, #-16]
   2b640:	blx	r3
   2b644:	bl	12404 <__errno_location@plt>
   2b648:	mov	r2, r0
   2b64c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b650:	str	r3, [r2]
   2b654:	mov	r3, #0
   2b658:	b	2b820 <__assert_fail@plt+0x19134>
   2b65c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b660:	str	r3, [fp, #-36]	; 0xffffffdc
   2b664:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b66c:	cmp	r2, r3
   2b670:	bge	2b754 <__assert_fail@plt+0x19068>
   2b674:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b678:	add	r2, r3, #1
   2b67c:	str	r2, [fp, #-36]	; 0xffffffdc
   2b680:	mov	r2, r3
   2b684:	ldr	r3, [fp, #-16]
   2b688:	add	r3, r3, r2
   2b68c:	mov	r2, #0
   2b690:	strb	r2, [r3]
   2b694:	ldr	r2, [fp, #-16]
   2b698:	ldr	r3, [fp, #12]
   2b69c:	cmp	r2, r3
   2b6a0:	bne	2b6ec <__assert_fail@plt+0x19000>
   2b6a4:	ldr	r3, [fp, #4]
   2b6a8:	ldr	r3, [r3]
   2b6ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b6b0:	mov	r0, r2
   2b6b4:	blx	r3
   2b6b8:	str	r0, [fp, #-40]	; 0xffffffd8
   2b6bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b6c0:	str	r3, [fp, #-20]	; 0xffffffec
   2b6c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b6c8:	cmp	r3, #0
   2b6cc:	beq	2b7e4 <__assert_fail@plt+0x190f8>
   2b6d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b6d4:	mov	r2, r3
   2b6d8:	ldr	r1, [fp, #-16]
   2b6dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b6e0:	bl	120f8 <memcpy@plt>
   2b6e4:	mov	r3, r0
   2b6e8:	b	2b820 <__assert_fail@plt+0x19134>
   2b6ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b6f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b6f4:	cmp	r2, r3
   2b6f8:	bge	2b74c <__assert_fail@plt+0x19060>
   2b6fc:	ldr	r2, [fp, #-16]
   2b700:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b704:	cmp	r2, r3
   2b708:	beq	2b74c <__assert_fail@plt+0x19060>
   2b70c:	ldr	r3, [fp, #4]
   2b710:	ldr	r3, [r3, #4]
   2b714:	cmp	r3, #0
   2b718:	beq	2b74c <__assert_fail@plt+0x19060>
   2b71c:	ldr	r3, [fp, #4]
   2b720:	ldr	r3, [r3, #4]
   2b724:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b728:	mov	r1, r2
   2b72c:	ldr	r0, [fp, #-16]
   2b730:	blx	r3
   2b734:	str	r0, [fp, #-44]	; 0xffffffd4
   2b738:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b73c:	cmp	r3, #0
   2b740:	beq	2b74c <__assert_fail@plt+0x19060>
   2b744:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b748:	b	2b820 <__assert_fail@plt+0x19134>
   2b74c:	ldr	r3, [fp, #-16]
   2b750:	b	2b820 <__assert_fail@plt+0x19134>
   2b754:	ldr	r2, [fp, #-16]
   2b758:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2b75c:	cmp	r2, r3
   2b760:	beq	2b774 <__assert_fail@plt+0x19088>
   2b764:	ldr	r3, [fp, #4]
   2b768:	ldr	r3, [r3, #8]
   2b76c:	ldr	r0, [fp, #-16]
   2b770:	blx	r3
   2b774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b778:	lsr	r2, r3, #31
   2b77c:	add	r3, r2, r3
   2b780:	asr	r3, r3, #1
   2b784:	mov	r2, r3
   2b788:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b78c:	cmp	r3, r2
   2b790:	blt	2b7ac <__assert_fail@plt+0x190c0>
   2b794:	bl	12404 <__errno_location@plt>
   2b798:	mov	r2, r0
   2b79c:	mov	r3, #36	; 0x24
   2b7a0:	str	r3, [r2]
   2b7a4:	mov	r3, #0
   2b7a8:	b	2b820 <__assert_fail@plt+0x19134>
   2b7ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b7b0:	lsl	r3, r3, #1
   2b7b4:	add	r3, r3, #1
   2b7b8:	str	r3, [fp, #-20]	; 0xffffffec
   2b7bc:	ldr	r3, [fp, #4]
   2b7c0:	ldr	r3, [r3]
   2b7c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b7c8:	mov	r0, r2
   2b7cc:	blx	r3
   2b7d0:	str	r0, [fp, #-16]
   2b7d4:	ldr	r3, [fp, #-16]
   2b7d8:	cmp	r3, #0
   2b7dc:	bne	2b5ec <__assert_fail@plt+0x18f00>
   2b7e0:	b	2b7e8 <__assert_fail@plt+0x190fc>
   2b7e4:	nop	{0}
   2b7e8:	ldr	r3, [fp, #4]
   2b7ec:	ldr	r3, [r3, #12]
   2b7f0:	cmp	r3, #0
   2b7f4:	beq	2b80c <__assert_fail@plt+0x19120>
   2b7f8:	ldr	r3, [fp, #4]
   2b7fc:	ldr	r3, [r3, #12]
   2b800:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b804:	mov	r0, r2
   2b808:	blx	r3
   2b80c:	bl	12404 <__errno_location@plt>
   2b810:	mov	r2, r0
   2b814:	mov	r3, #12
   2b818:	str	r3, [r2]
   2b81c:	mov	r3, #0
   2b820:	mov	r0, r3
   2b824:	sub	sp, fp, #8
   2b828:	ldr	r4, [sp]
   2b82c:	ldr	fp, [sp, #4]
   2b830:	add	sp, sp, #8
   2b834:	pop	{pc}		; (ldr pc, [sp], #4)
   2b838:	str	fp, [sp, #-8]!
   2b83c:	str	lr, [sp, #4]
   2b840:	add	fp, sp, #4
   2b844:	sub	sp, sp, #1056	; 0x420
   2b848:	str	r0, [fp, #-1032]	; 0xfffffbf8
   2b84c:	str	r1, [fp, #-1036]	; 0xfffffbf4
   2b850:	str	r2, [fp, #-1040]	; 0xfffffbf0
   2b854:	str	r3, [fp, #-1044]	; 0xfffffbec
   2b858:	sub	r3, fp, #1024	; 0x400
   2b85c:	sub	r3, r3, #4
   2b860:	str	r3, [sp, #8]
   2b864:	ldr	r3, [fp, #8]
   2b868:	str	r3, [sp, #4]
   2b86c:	ldr	r3, [fp, #4]
   2b870:	str	r3, [sp]
   2b874:	ldr	r3, [fp, #-1044]	; 0xfffffbec
   2b878:	ldr	r2, [fp, #-1040]	; 0xfffffbf0
   2b87c:	ldr	r1, [fp, #-1036]	; 0xfffffbf4
   2b880:	ldr	r0, [fp, #-1032]	; 0xfffffbf8
   2b884:	bl	2b568 <__assert_fail@plt+0x18e7c>
   2b888:	mov	r3, r0
   2b88c:	mov	r0, r3
   2b890:	sub	sp, fp, #4
   2b894:	ldr	fp, [sp]
   2b898:	add	sp, sp, #4
   2b89c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b8a0:	str	fp, [sp, #-8]!
   2b8a4:	str	lr, [sp, #4]
   2b8a8:	add	fp, sp, #4
   2b8ac:	sub	sp, sp, #16
   2b8b0:	str	r0, [fp, #-16]
   2b8b4:	mov	r3, r1
   2b8b8:	strb	r3, [fp, #-17]	; 0xffffffef
   2b8bc:	mov	r2, #0
   2b8c0:	mov	r1, #1
   2b8c4:	ldr	r0, [fp, #-16]
   2b8c8:	bl	3f968 <__assert_fail@plt+0x2d27c>
   2b8cc:	str	r0, [fp, #-8]
   2b8d0:	ldr	r3, [fp, #-8]
   2b8d4:	cmp	r3, #0
   2b8d8:	blt	2b934 <__assert_fail@plt+0x19248>
   2b8dc:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2b8e0:	cmp	r3, #0
   2b8e4:	beq	2b8f4 <__assert_fail@plt+0x19208>
   2b8e8:	ldr	r3, [fp, #-8]
   2b8ec:	orr	r3, r3, #1
   2b8f0:	b	2b8fc <__assert_fail@plt+0x19210>
   2b8f4:	ldr	r3, [fp, #-8]
   2b8f8:	bic	r3, r3, #1
   2b8fc:	str	r3, [fp, #-12]
   2b900:	ldr	r2, [fp, #-8]
   2b904:	ldr	r3, [fp, #-12]
   2b908:	cmp	r2, r3
   2b90c:	beq	2b92c <__assert_fail@plt+0x19240>
   2b910:	ldr	r2, [fp, #-12]
   2b914:	mov	r1, #2
   2b918:	ldr	r0, [fp, #-16]
   2b91c:	bl	3f968 <__assert_fail@plt+0x2d27c>
   2b920:	mov	r3, r0
   2b924:	cmn	r3, #1
   2b928:	beq	2b934 <__assert_fail@plt+0x19248>
   2b92c:	mov	r3, #0
   2b930:	b	2b938 <__assert_fail@plt+0x1924c>
   2b934:	mvn	r3, #0
   2b938:	mov	r0, r3
   2b93c:	sub	sp, fp, #4
   2b940:	ldr	fp, [sp]
   2b944:	add	sp, sp, #4
   2b948:	pop	{pc}		; (ldr pc, [sp], #4)
   2b94c:	str	fp, [sp, #-8]!
   2b950:	str	lr, [sp, #4]
   2b954:	add	fp, sp, #4
   2b958:	sub	sp, sp, #8
   2b95c:	str	r0, [fp, #-8]
   2b960:	mov	r2, #0
   2b964:	movw	r1, #1030	; 0x406
   2b968:	ldr	r0, [fp, #-8]
   2b96c:	bl	3f968 <__assert_fail@plt+0x2d27c>
   2b970:	mov	r3, r0
   2b974:	mov	r0, r3
   2b978:	sub	sp, fp, #4
   2b97c:	ldr	fp, [sp]
   2b980:	add	sp, sp, #4
   2b984:	pop	{pc}		; (ldr pc, [sp], #4)
   2b988:	push	{fp}		; (str fp, [sp, #-4]!)
   2b98c:	add	fp, sp, #0
   2b990:	sub	sp, sp, #12
   2b994:	str	r0, [fp, #-8]
   2b998:	movw	r3, #52940	; 0xcecc
   2b99c:	movt	r3, #7
   2b9a0:	ldr	r2, [fp, #-8]
   2b9a4:	str	r2, [r3]
   2b9a8:	nop	{0}
   2b9ac:	add	sp, fp, #0
   2b9b0:	pop	{fp}		; (ldr fp, [sp], #4)
   2b9b4:	bx	lr
   2b9b8:	push	{fp}		; (str fp, [sp, #-4]!)
   2b9bc:	add	fp, sp, #0
   2b9c0:	sub	sp, sp, #12
   2b9c4:	mov	r3, r0
   2b9c8:	strb	r3, [fp, #-5]
   2b9cc:	movw	r3, #52944	; 0xced0
   2b9d0:	movt	r3, #7
   2b9d4:	ldrb	r2, [fp, #-5]
   2b9d8:	strb	r2, [r3]
   2b9dc:	nop	{0}
   2b9e0:	add	sp, fp, #0
   2b9e4:	pop	{fp}		; (ldr fp, [sp], #4)
   2b9e8:	bx	lr
   2b9ec:	str	r4, [sp, #-12]!
   2b9f0:	str	fp, [sp, #4]
   2b9f4:	str	lr, [sp, #8]
   2b9f8:	add	fp, sp, #8
   2b9fc:	sub	sp, sp, #20
   2ba00:	movw	r3, #50996	; 0xc734
   2ba04:	movt	r3, #7
   2ba08:	ldr	r3, [r3]
   2ba0c:	mov	r0, r3
   2ba10:	bl	606f4 <__assert_fail@plt+0x4e008>
   2ba14:	mov	r3, r0
   2ba18:	cmp	r3, #0
   2ba1c:	beq	2baf0 <__assert_fail@plt+0x19404>
   2ba20:	movw	r3, #52944	; 0xced0
   2ba24:	movt	r3, #7
   2ba28:	ldrb	r3, [r3]
   2ba2c:	eor	r3, r3, #1
   2ba30:	uxtb	r3, r3
   2ba34:	cmp	r3, #0
   2ba38:	bne	2ba50 <__assert_fail@plt+0x19364>
   2ba3c:	bl	12404 <__errno_location@plt>
   2ba40:	mov	r3, r0
   2ba44:	ldr	r3, [r3]
   2ba48:	cmp	r3, #32
   2ba4c:	beq	2baf0 <__assert_fail@plt+0x19404>
   2ba50:	movw	r0, #37988	; 0x9464
   2ba54:	movt	r0, #6
   2ba58:	bl	12398 <gettext@plt>
   2ba5c:	str	r0, [fp, #-16]
   2ba60:	movw	r3, #52940	; 0xcecc
   2ba64:	movt	r3, #7
   2ba68:	ldr	r3, [r3]
   2ba6c:	cmp	r3, #0
   2ba70:	beq	2babc <__assert_fail@plt+0x193d0>
   2ba74:	bl	12404 <__errno_location@plt>
   2ba78:	mov	r3, r0
   2ba7c:	ldr	r4, [r3]
   2ba80:	movw	r3, #52940	; 0xcecc
   2ba84:	movt	r3, #7
   2ba88:	ldr	r3, [r3]
   2ba8c:	mov	r0, r3
   2ba90:	bl	3beb8 <__assert_fail@plt+0x297cc>
   2ba94:	mov	r2, r0
   2ba98:	ldr	r3, [fp, #-16]
   2ba9c:	str	r3, [sp]
   2baa0:	mov	r3, r2
   2baa4:	movw	r2, #38000	; 0x9470
   2baa8:	movt	r2, #6
   2baac:	mov	r1, r4
   2bab0:	mov	r0, #0
   2bab4:	bl	122b4 <error@plt>
   2bab8:	b	2badc <__assert_fail@plt+0x193f0>
   2babc:	bl	12404 <__errno_location@plt>
   2bac0:	mov	r3, r0
   2bac4:	ldr	r1, [r3]
   2bac8:	ldr	r3, [fp, #-16]
   2bacc:	movw	r2, #38008	; 0x9478
   2bad0:	movt	r2, #6
   2bad4:	mov	r0, #0
   2bad8:	bl	122b4 <error@plt>
   2badc:	movw	r3, #50892	; 0xc6cc
   2bae0:	movt	r3, #7
   2bae4:	ldr	r3, [r3]
   2bae8:	mov	r0, r3
   2baec:	bl	120ec <_exit@plt>
   2baf0:	movw	r3, #50984	; 0xc728
   2baf4:	movt	r3, #7
   2baf8:	ldr	r3, [r3]
   2bafc:	mov	r0, r3
   2bb00:	bl	606f4 <__assert_fail@plt+0x4e008>
   2bb04:	mov	r3, r0
   2bb08:	cmp	r3, #0
   2bb0c:	beq	2bb24 <__assert_fail@plt+0x19438>
   2bb10:	movw	r3, #50892	; 0xc6cc
   2bb14:	movt	r3, #7
   2bb18:	ldr	r3, [r3]
   2bb1c:	mov	r0, r3
   2bb20:	bl	120ec <_exit@plt>
   2bb24:	nop	{0}
   2bb28:	sub	sp, fp, #8
   2bb2c:	ldr	r4, [sp]
   2bb30:	ldr	fp, [sp, #4]
   2bb34:	add	sp, sp, #8
   2bb38:	pop	{pc}		; (ldr pc, [sp], #4)
   2bb3c:	str	fp, [sp, #-8]!
   2bb40:	str	lr, [sp, #4]
   2bb44:	add	fp, sp, #4
   2bb48:	sub	sp, sp, #32
   2bb4c:	str	r0, [fp, #-32]	; 0xffffffe0
   2bb50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2bb54:	bl	122cc <opendir@plt>
   2bb58:	str	r0, [fp, #-8]
   2bb5c:	ldr	r3, [fp, #-8]
   2bb60:	cmp	r3, #0
   2bb64:	beq	2bc18 <__assert_fail@plt+0x1952c>
   2bb68:	ldr	r0, [fp, #-8]
   2bb6c:	bl	125cc <dirfd@plt>
   2bb70:	str	r0, [fp, #-20]	; 0xffffffec
   2bb74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb78:	cmp	r3, #0
   2bb7c:	blt	2bc18 <__assert_fail@plt+0x1952c>
   2bb80:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb84:	cmp	r3, #2
   2bb88:	bgt	2bc18 <__assert_fail@plt+0x1952c>
   2bb8c:	mov	r2, #3
   2bb90:	movw	r1, #1030	; 0x406
   2bb94:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bb98:	bl	3f968 <__assert_fail@plt+0x2d27c>
   2bb9c:	str	r0, [fp, #-24]	; 0xffffffe8
   2bba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bba4:	cmp	r3, #0
   2bba8:	bge	2bbc8 <__assert_fail@plt+0x194dc>
   2bbac:	bl	12404 <__errno_location@plt>
   2bbb0:	mov	r3, r0
   2bbb4:	ldr	r3, [r3]
   2bbb8:	str	r3, [fp, #-16]
   2bbbc:	mov	r3, #0
   2bbc0:	str	r3, [fp, #-12]
   2bbc4:	b	2bbf8 <__assert_fail@plt+0x1950c>
   2bbc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bbcc:	bl	125a8 <fdopendir@plt>
   2bbd0:	str	r0, [fp, #-12]
   2bbd4:	bl	12404 <__errno_location@plt>
   2bbd8:	mov	r3, r0
   2bbdc:	ldr	r3, [r3]
   2bbe0:	str	r3, [fp, #-16]
   2bbe4:	ldr	r3, [fp, #-12]
   2bbe8:	cmp	r3, #0
   2bbec:	bne	2bbf8 <__assert_fail@plt+0x1950c>
   2bbf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bbf4:	bl	126a4 <close@plt>
   2bbf8:	ldr	r0, [fp, #-8]
   2bbfc:	bl	126bc <closedir@plt>
   2bc00:	bl	12404 <__errno_location@plt>
   2bc04:	mov	r2, r0
   2bc08:	ldr	r3, [fp, #-16]
   2bc0c:	str	r3, [r2]
   2bc10:	ldr	r3, [fp, #-12]
   2bc14:	str	r3, [fp, #-8]
   2bc18:	ldr	r3, [fp, #-8]
   2bc1c:	mov	r0, r3
   2bc20:	sub	sp, fp, #4
   2bc24:	ldr	fp, [sp]
   2bc28:	add	sp, sp, #4
   2bc2c:	pop	{pc}		; (ldr pc, [sp], #4)
   2bc30:	str	fp, [sp, #-8]!
   2bc34:	str	lr, [sp, #4]
   2bc38:	add	fp, sp, #4
   2bc3c:	sub	sp, sp, #24
   2bc40:	str	r0, [fp, #-24]	; 0xffffffe8
   2bc44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bc48:	bl	5fc9c <__assert_fail@plt+0x4d5b0>
   2bc4c:	str	r0, [fp, #-8]
   2bc50:	ldr	r3, [fp, #-8]
   2bc54:	ldrb	r3, [r3]
   2bc58:	cmp	r3, #0
   2bc5c:	beq	2bcac <__assert_fail@plt+0x195c0>
   2bc60:	ldr	r0, [fp, #-8]
   2bc64:	bl	5fd50 <__assert_fail@plt+0x4d664>
   2bc68:	mov	r3, r0
   2bc6c:	str	r3, [fp, #-12]
   2bc70:	ldr	r3, [fp, #-12]
   2bc74:	ldr	r2, [fp, #-8]
   2bc78:	add	r3, r2, r3
   2bc7c:	ldrb	r3, [r3]
   2bc80:	cmp	r3, #47	; 0x2f
   2bc84:	moveq	r3, #1
   2bc88:	movne	r3, #0
   2bc8c:	uxtb	r3, r3
   2bc90:	mov	r2, r3
   2bc94:	ldr	r3, [fp, #-12]
   2bc98:	add	r3, r3, r2
   2bc9c:	str	r3, [fp, #-12]
   2bca0:	mov	r3, #0
   2bca4:	str	r3, [fp, #-16]
   2bca8:	b	2bccc <__assert_fail@plt+0x195e0>
   2bcac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bcb0:	str	r3, [fp, #-8]
   2bcb4:	ldr	r0, [fp, #-8]
   2bcb8:	bl	5fd50 <__assert_fail@plt+0x4d664>
   2bcbc:	mov	r3, r0
   2bcc0:	str	r3, [fp, #-12]
   2bcc4:	mov	r3, #0
   2bcc8:	str	r3, [fp, #-16]
   2bccc:	ldr	r2, [fp, #-16]
   2bcd0:	ldr	r3, [fp, #-12]
   2bcd4:	add	r3, r2, r3
   2bcd8:	add	r3, r3, #1
   2bcdc:	mov	r0, r3
   2bce0:	bl	3d92c <__assert_fail@plt+0x2b240>
   2bce4:	mov	r3, r0
   2bce8:	str	r3, [fp, #-20]	; 0xffffffec
   2bcec:	ldr	r3, [fp, #-16]
   2bcf0:	cmp	r3, #0
   2bcf4:	beq	2bd14 <__assert_fail@plt+0x19628>
   2bcf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcfc:	mov	r2, #46	; 0x2e
   2bd00:	strb	r2, [r3]
   2bd04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd08:	add	r3, r3, #1
   2bd0c:	mov	r2, #47	; 0x2f
   2bd10:	strb	r2, [r3]
   2bd14:	ldr	r3, [fp, #-16]
   2bd18:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bd1c:	add	r3, r2, r3
   2bd20:	ldr	r2, [fp, #-12]
   2bd24:	ldr	r1, [fp, #-8]
   2bd28:	mov	r0, r3
   2bd2c:	bl	120f8 <memcpy@plt>
   2bd30:	ldr	r2, [fp, #-16]
   2bd34:	ldr	r3, [fp, #-12]
   2bd38:	add	r3, r2, r3
   2bd3c:	mov	r2, r3
   2bd40:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd44:	add	r3, r3, r2
   2bd48:	mov	r2, #0
   2bd4c:	strb	r2, [r3]
   2bd50:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd54:	mov	r0, r3
   2bd58:	sub	sp, fp, #4
   2bd5c:	ldr	fp, [sp]
   2bd60:	add	sp, sp, #4
   2bd64:	pop	{pc}		; (ldr pc, [sp], #4)
   2bd68:	str	fp, [sp, #-8]!
   2bd6c:	str	lr, [sp, #4]
   2bd70:	add	fp, sp, #4
   2bd74:	sub	sp, sp, #16
   2bd78:	str	r0, [fp, #-16]
   2bd7c:	mov	r3, #0
   2bd80:	str	r3, [fp, #-12]
   2bd84:	ldr	r3, [fp, #-12]
   2bd88:	cmp	r3, #0
   2bd8c:	bne	2bdb0 <__assert_fail@plt+0x196c4>
   2bd90:	ldr	r3, [fp, #-16]
   2bd94:	ldrb	r3, [r3]
   2bd98:	cmp	r3, #47	; 0x2f
   2bd9c:	bne	2bda8 <__assert_fail@plt+0x196bc>
   2bda0:	mov	r3, #1
   2bda4:	b	2bdb4 <__assert_fail@plt+0x196c8>
   2bda8:	mov	r3, #0
   2bdac:	b	2bdb4 <__assert_fail@plt+0x196c8>
   2bdb0:	mov	r3, #0
   2bdb4:	ldr	r2, [fp, #-12]
   2bdb8:	add	r3, r2, r3
   2bdbc:	str	r3, [fp, #-12]
   2bdc0:	ldr	r0, [fp, #-16]
   2bdc4:	bl	5fc9c <__assert_fail@plt+0x4d5b0>
   2bdc8:	mov	r2, r0
   2bdcc:	ldr	r3, [fp, #-16]
   2bdd0:	sub	r3, r2, r3
   2bdd4:	str	r3, [fp, #-8]
   2bdd8:	b	2be04 <__assert_fail@plt+0x19718>
   2bddc:	ldr	r3, [fp, #-8]
   2bde0:	sub	r3, r3, #1
   2bde4:	ldr	r2, [fp, #-16]
   2bde8:	add	r3, r2, r3
   2bdec:	ldrb	r3, [r3]
   2bdf0:	cmp	r3, #47	; 0x2f
   2bdf4:	bne	2be18 <__assert_fail@plt+0x1972c>
   2bdf8:	ldr	r3, [fp, #-8]
   2bdfc:	sub	r3, r3, #1
   2be00:	str	r3, [fp, #-8]
   2be04:	ldr	r2, [fp, #-12]
   2be08:	ldr	r3, [fp, #-8]
   2be0c:	cmp	r2, r3
   2be10:	bcc	2bddc <__assert_fail@plt+0x196f0>
   2be14:	b	2be1c <__assert_fail@plt+0x19730>
   2be18:	nop	{0}
   2be1c:	ldr	r3, [fp, #-8]
   2be20:	mov	r0, r3
   2be24:	sub	sp, fp, #4
   2be28:	ldr	fp, [sp]
   2be2c:	add	sp, sp, #4
   2be30:	pop	{pc}		; (ldr pc, [sp], #4)
   2be34:	str	fp, [sp, #-8]!
   2be38:	str	lr, [sp, #4]
   2be3c:	add	fp, sp, #4
   2be40:	sub	sp, sp, #24
   2be44:	str	r0, [fp, #-24]	; 0xffffffe8
   2be48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2be4c:	bl	2bd68 <__assert_fail@plt+0x1967c>
   2be50:	str	r0, [fp, #-8]
   2be54:	ldr	r3, [fp, #-8]
   2be58:	cmp	r3, #0
   2be5c:	moveq	r3, #1
   2be60:	movne	r3, #0
   2be64:	strb	r3, [fp, #-9]
   2be68:	ldrb	r2, [fp, #-9]
   2be6c:	ldr	r3, [fp, #-8]
   2be70:	add	r3, r2, r3
   2be74:	add	r3, r3, #1
   2be78:	mov	r0, r3
   2be7c:	bl	43510 <__assert_fail@plt+0x30e24>
   2be80:	mov	r3, r0
   2be84:	str	r3, [fp, #-16]
   2be88:	ldr	r3, [fp, #-16]
   2be8c:	cmp	r3, #0
   2be90:	bne	2be9c <__assert_fail@plt+0x197b0>
   2be94:	mov	r3, #0
   2be98:	b	2beec <__assert_fail@plt+0x19800>
   2be9c:	ldr	r2, [fp, #-8]
   2bea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bea4:	ldr	r0, [fp, #-16]
   2bea8:	bl	120f8 <memcpy@plt>
   2beac:	ldrb	r3, [fp, #-9]
   2beb0:	cmp	r3, #0
   2beb4:	beq	2bed4 <__assert_fail@plt+0x197e8>
   2beb8:	ldr	r3, [fp, #-8]
   2bebc:	add	r2, r3, #1
   2bec0:	str	r2, [fp, #-8]
   2bec4:	ldr	r2, [fp, #-16]
   2bec8:	add	r3, r2, r3
   2becc:	mov	r2, #46	; 0x2e
   2bed0:	strb	r2, [r3]
   2bed4:	ldr	r2, [fp, #-16]
   2bed8:	ldr	r3, [fp, #-8]
   2bedc:	add	r3, r2, r3
   2bee0:	mov	r2, #0
   2bee4:	strb	r2, [r3]
   2bee8:	ldr	r3, [fp, #-16]
   2beec:	mov	r0, r3
   2bef0:	sub	sp, fp, #4
   2bef4:	ldr	fp, [sp]
   2bef8:	add	sp, sp, #4
   2befc:	pop	{pc}		; (ldr pc, [sp], #4)
   2bf00:	str	fp, [sp, #-8]!
   2bf04:	str	lr, [sp, #4]
   2bf08:	add	fp, sp, #4
   2bf0c:	sub	sp, sp, #24
   2bf10:	str	r0, [fp, #-24]	; 0xffffffe8
   2bf14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2bf18:	bl	5fc9c <__assert_fail@plt+0x4d5b0>
   2bf1c:	str	r0, [fp, #-8]
   2bf20:	ldr	r3, [fp, #-8]
   2bf24:	ldrb	r3, [r3]
   2bf28:	cmp	r3, #0
   2bf2c:	bne	2bf38 <__assert_fail@plt+0x1984c>
   2bf30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bf34:	str	r3, [fp, #-8]
   2bf38:	ldr	r0, [fp, #-8]
   2bf3c:	bl	5fd50 <__assert_fail@plt+0x4d664>
   2bf40:	mov	r2, r0
   2bf44:	ldr	r3, [fp, #-8]
   2bf48:	add	r3, r3, r2
   2bf4c:	str	r3, [fp, #-12]
   2bf50:	ldr	r3, [fp, #-12]
   2bf54:	ldrb	r3, [r3]
   2bf58:	cmp	r3, #0
   2bf5c:	movne	r3, #1
   2bf60:	moveq	r3, #0
   2bf64:	strb	r3, [fp, #-13]
   2bf68:	ldr	r3, [fp, #-12]
   2bf6c:	mov	r2, #0
   2bf70:	strb	r2, [r3]
   2bf74:	ldrb	r3, [fp, #-13]
   2bf78:	mov	r0, r3
   2bf7c:	sub	sp, fp, #4
   2bf80:	ldr	fp, [sp]
   2bf84:	add	sp, sp, #4
   2bf88:	pop	{pc}		; (ldr pc, [sp], #4)
   2bf8c:	push	{r1, r2, r3}
   2bf90:	str	fp, [sp, #-8]!
   2bf94:	str	lr, [sp, #4]
   2bf98:	add	fp, sp, #4
   2bf9c:	sub	sp, sp, #20
   2bfa0:	str	r0, [fp, #-20]	; 0xffffffec
   2bfa4:	mov	r3, #0
   2bfa8:	str	r3, [fp, #-12]
   2bfac:	ldr	r3, [fp, #4]
   2bfb0:	and	r3, r3, #64	; 0x40
   2bfb4:	cmp	r3, #0
   2bfb8:	beq	2bfd8 <__assert_fail@plt+0x198ec>
   2bfbc:	add	r3, fp, #8
   2bfc0:	str	r3, [fp, #-16]
   2bfc4:	ldr	r3, [fp, #-16]
   2bfc8:	add	r2, r3, #4
   2bfcc:	str	r2, [fp, #-16]
   2bfd0:	ldr	r3, [r3]
   2bfd4:	str	r3, [fp, #-12]
   2bfd8:	ldr	r2, [fp, #-12]
   2bfdc:	ldr	r1, [fp, #4]
   2bfe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2bfe4:	bl	122e4 <open64@plt>
   2bfe8:	mov	r3, r0
   2bfec:	mov	r0, r3
   2bff0:	bl	3d01c <__assert_fail@plt+0x2a930>
   2bff4:	mov	r3, r0
   2bff8:	mov	r0, r3
   2bffc:	sub	sp, fp, #4
   2c000:	ldr	fp, [sp]
   2c004:	ldr	lr, [sp, #4]
   2c008:	add	sp, sp, #8
   2c00c:	add	sp, sp, #12
   2c010:	bx	lr
   2c014:	push	{fp}		; (str fp, [sp, #-4]!)
   2c018:	add	fp, sp, #0
   2c01c:	sub	sp, sp, #12
   2c020:	str	r0, [fp, #-8]
   2c024:	ldr	r3, [fp, #-8]
   2c028:	and	r3, r3, #61440	; 0xf000
   2c02c:	cmp	r3, #32768	; 0x8000
   2c030:	bne	2c03c <__assert_fail@plt+0x19950>
   2c034:	mov	r3, #45	; 0x2d
   2c038:	b	2c0d0 <__assert_fail@plt+0x199e4>
   2c03c:	ldr	r3, [fp, #-8]
   2c040:	and	r3, r3, #61440	; 0xf000
   2c044:	cmp	r3, #16384	; 0x4000
   2c048:	bne	2c054 <__assert_fail@plt+0x19968>
   2c04c:	mov	r3, #100	; 0x64
   2c050:	b	2c0d0 <__assert_fail@plt+0x199e4>
   2c054:	ldr	r3, [fp, #-8]
   2c058:	and	r3, r3, #61440	; 0xf000
   2c05c:	cmp	r3, #24576	; 0x6000
   2c060:	bne	2c06c <__assert_fail@plt+0x19980>
   2c064:	mov	r3, #98	; 0x62
   2c068:	b	2c0d0 <__assert_fail@plt+0x199e4>
   2c06c:	ldr	r3, [fp, #-8]
   2c070:	and	r3, r3, #61440	; 0xf000
   2c074:	cmp	r3, #8192	; 0x2000
   2c078:	bne	2c084 <__assert_fail@plt+0x19998>
   2c07c:	mov	r3, #99	; 0x63
   2c080:	b	2c0d0 <__assert_fail@plt+0x199e4>
   2c084:	ldr	r3, [fp, #-8]
   2c088:	and	r3, r3, #61440	; 0xf000
   2c08c:	cmp	r3, #40960	; 0xa000
   2c090:	bne	2c09c <__assert_fail@plt+0x199b0>
   2c094:	mov	r3, #108	; 0x6c
   2c098:	b	2c0d0 <__assert_fail@plt+0x199e4>
   2c09c:	ldr	r3, [fp, #-8]
   2c0a0:	and	r3, r3, #61440	; 0xf000
   2c0a4:	cmp	r3, #4096	; 0x1000
   2c0a8:	bne	2c0b4 <__assert_fail@plt+0x199c8>
   2c0ac:	mov	r3, #112	; 0x70
   2c0b0:	b	2c0d0 <__assert_fail@plt+0x199e4>
   2c0b4:	ldr	r3, [fp, #-8]
   2c0b8:	and	r3, r3, #61440	; 0xf000
   2c0bc:	cmp	r3, #49152	; 0xc000
   2c0c0:	bne	2c0cc <__assert_fail@plt+0x199e0>
   2c0c4:	mov	r3, #115	; 0x73
   2c0c8:	b	2c0d0 <__assert_fail@plt+0x199e4>
   2c0cc:	mov	r3, #63	; 0x3f
   2c0d0:	mov	r0, r3
   2c0d4:	add	sp, fp, #0
   2c0d8:	pop	{fp}		; (ldr fp, [sp], #4)
   2c0dc:	bx	lr
   2c0e0:	str	fp, [sp, #-8]!
   2c0e4:	str	lr, [sp, #4]
   2c0e8:	add	fp, sp, #4
   2c0ec:	sub	sp, sp, #8
   2c0f0:	str	r0, [fp, #-8]
   2c0f4:	str	r1, [fp, #-12]
   2c0f8:	ldr	r0, [fp, #-8]
   2c0fc:	bl	2c014 <__assert_fail@plt+0x19928>
   2c100:	mov	r3, r0
   2c104:	mov	r2, r3
   2c108:	ldr	r3, [fp, #-12]
   2c10c:	strb	r2, [r3]
   2c110:	ldr	r3, [fp, #-8]
   2c114:	and	r3, r3, #256	; 0x100
   2c118:	cmp	r3, #0
   2c11c:	beq	2c128 <__assert_fail@plt+0x19a3c>
   2c120:	mov	r2, #114	; 0x72
   2c124:	b	2c12c <__assert_fail@plt+0x19a40>
   2c128:	mov	r2, #45	; 0x2d
   2c12c:	ldr	r3, [fp, #-12]
   2c130:	add	r3, r3, #1
   2c134:	strb	r2, [r3]
   2c138:	ldr	r3, [fp, #-8]
   2c13c:	and	r3, r3, #128	; 0x80
   2c140:	cmp	r3, #0
   2c144:	beq	2c150 <__assert_fail@plt+0x19a64>
   2c148:	mov	r2, #119	; 0x77
   2c14c:	b	2c154 <__assert_fail@plt+0x19a68>
   2c150:	mov	r2, #45	; 0x2d
   2c154:	ldr	r3, [fp, #-12]
   2c158:	add	r3, r3, #2
   2c15c:	strb	r2, [r3]
   2c160:	ldr	r3, [fp, #-8]
   2c164:	and	r3, r3, #2048	; 0x800
   2c168:	cmp	r3, #0
   2c16c:	beq	2c190 <__assert_fail@plt+0x19aa4>
   2c170:	ldr	r3, [fp, #-8]
   2c174:	and	r3, r3, #64	; 0x40
   2c178:	cmp	r3, #0
   2c17c:	beq	2c188 <__assert_fail@plt+0x19a9c>
   2c180:	mov	r3, #115	; 0x73
   2c184:	b	2c1ac <__assert_fail@plt+0x19ac0>
   2c188:	mov	r3, #83	; 0x53
   2c18c:	b	2c1ac <__assert_fail@plt+0x19ac0>
   2c190:	ldr	r3, [fp, #-8]
   2c194:	and	r3, r3, #64	; 0x40
   2c198:	cmp	r3, #0
   2c19c:	beq	2c1a8 <__assert_fail@plt+0x19abc>
   2c1a0:	mov	r3, #120	; 0x78
   2c1a4:	b	2c1ac <__assert_fail@plt+0x19ac0>
   2c1a8:	mov	r3, #45	; 0x2d
   2c1ac:	ldr	r2, [fp, #-12]
   2c1b0:	add	r2, r2, #3
   2c1b4:	strb	r3, [r2]
   2c1b8:	ldr	r3, [fp, #-8]
   2c1bc:	and	r3, r3, #32
   2c1c0:	cmp	r3, #0
   2c1c4:	beq	2c1d0 <__assert_fail@plt+0x19ae4>
   2c1c8:	mov	r2, #114	; 0x72
   2c1cc:	b	2c1d4 <__assert_fail@plt+0x19ae8>
   2c1d0:	mov	r2, #45	; 0x2d
   2c1d4:	ldr	r3, [fp, #-12]
   2c1d8:	add	r3, r3, #4
   2c1dc:	strb	r2, [r3]
   2c1e0:	ldr	r3, [fp, #-8]
   2c1e4:	and	r3, r3, #16
   2c1e8:	cmp	r3, #0
   2c1ec:	beq	2c1f8 <__assert_fail@plt+0x19b0c>
   2c1f0:	mov	r2, #119	; 0x77
   2c1f4:	b	2c1fc <__assert_fail@plt+0x19b10>
   2c1f8:	mov	r2, #45	; 0x2d
   2c1fc:	ldr	r3, [fp, #-12]
   2c200:	add	r3, r3, #5
   2c204:	strb	r2, [r3]
   2c208:	ldr	r3, [fp, #-8]
   2c20c:	and	r3, r3, #1024	; 0x400
   2c210:	cmp	r3, #0
   2c214:	beq	2c238 <__assert_fail@plt+0x19b4c>
   2c218:	ldr	r3, [fp, #-8]
   2c21c:	and	r3, r3, #8
   2c220:	cmp	r3, #0
   2c224:	beq	2c230 <__assert_fail@plt+0x19b44>
   2c228:	mov	r3, #115	; 0x73
   2c22c:	b	2c254 <__assert_fail@plt+0x19b68>
   2c230:	mov	r3, #83	; 0x53
   2c234:	b	2c254 <__assert_fail@plt+0x19b68>
   2c238:	ldr	r3, [fp, #-8]
   2c23c:	and	r3, r3, #8
   2c240:	cmp	r3, #0
   2c244:	beq	2c250 <__assert_fail@plt+0x19b64>
   2c248:	mov	r3, #120	; 0x78
   2c24c:	b	2c254 <__assert_fail@plt+0x19b68>
   2c250:	mov	r3, #45	; 0x2d
   2c254:	ldr	r2, [fp, #-12]
   2c258:	add	r2, r2, #6
   2c25c:	strb	r3, [r2]
   2c260:	ldr	r3, [fp, #-8]
   2c264:	and	r3, r3, #4
   2c268:	cmp	r3, #0
   2c26c:	beq	2c278 <__assert_fail@plt+0x19b8c>
   2c270:	mov	r2, #114	; 0x72
   2c274:	b	2c27c <__assert_fail@plt+0x19b90>
   2c278:	mov	r2, #45	; 0x2d
   2c27c:	ldr	r3, [fp, #-12]
   2c280:	add	r3, r3, #7
   2c284:	strb	r2, [r3]
   2c288:	ldr	r3, [fp, #-8]
   2c28c:	and	r3, r3, #2
   2c290:	cmp	r3, #0
   2c294:	beq	2c2a0 <__assert_fail@plt+0x19bb4>
   2c298:	mov	r2, #119	; 0x77
   2c29c:	b	2c2a4 <__assert_fail@plt+0x19bb8>
   2c2a0:	mov	r2, #45	; 0x2d
   2c2a4:	ldr	r3, [fp, #-12]
   2c2a8:	add	r3, r3, #8
   2c2ac:	strb	r2, [r3]
   2c2b0:	ldr	r3, [fp, #-8]
   2c2b4:	and	r3, r3, #512	; 0x200
   2c2b8:	cmp	r3, #0
   2c2bc:	beq	2c2e0 <__assert_fail@plt+0x19bf4>
   2c2c0:	ldr	r3, [fp, #-8]
   2c2c4:	and	r3, r3, #1
   2c2c8:	cmp	r3, #0
   2c2cc:	beq	2c2d8 <__assert_fail@plt+0x19bec>
   2c2d0:	mov	r3, #116	; 0x74
   2c2d4:	b	2c2fc <__assert_fail@plt+0x19c10>
   2c2d8:	mov	r3, #84	; 0x54
   2c2dc:	b	2c2fc <__assert_fail@plt+0x19c10>
   2c2e0:	ldr	r3, [fp, #-8]
   2c2e4:	and	r3, r3, #1
   2c2e8:	cmp	r3, #0
   2c2ec:	beq	2c2f8 <__assert_fail@plt+0x19c0c>
   2c2f0:	mov	r3, #120	; 0x78
   2c2f4:	b	2c2fc <__assert_fail@plt+0x19c10>
   2c2f8:	mov	r3, #45	; 0x2d
   2c2fc:	ldr	r2, [fp, #-12]
   2c300:	add	r2, r2, #9
   2c304:	strb	r3, [r2]
   2c308:	ldr	r3, [fp, #-12]
   2c30c:	add	r3, r3, #10
   2c310:	mov	r2, #32
   2c314:	strb	r2, [r3]
   2c318:	ldr	r3, [fp, #-12]
   2c31c:	add	r3, r3, #11
   2c320:	mov	r2, #0
   2c324:	strb	r2, [r3]
   2c328:	nop	{0}
   2c32c:	sub	sp, fp, #4
   2c330:	ldr	fp, [sp]
   2c334:	add	sp, sp, #4
   2c338:	pop	{pc}		; (ldr pc, [sp], #4)
   2c33c:	str	fp, [sp, #-8]!
   2c340:	str	lr, [sp, #4]
   2c344:	add	fp, sp, #4
   2c348:	sub	sp, sp, #8
   2c34c:	str	r0, [fp, #-8]
   2c350:	str	r1, [fp, #-12]
   2c354:	ldr	r3, [fp, #-8]
   2c358:	ldr	r3, [r3, #16]
   2c35c:	ldr	r1, [fp, #-12]
   2c360:	mov	r0, r3
   2c364:	bl	2c0e0 <__assert_fail@plt+0x199f4>
   2c368:	nop	{0}
   2c36c:	sub	sp, fp, #4
   2c370:	ldr	fp, [sp]
   2c374:	add	sp, sp, #4
   2c378:	pop	{pc}		; (ldr pc, [sp], #4)
   2c37c:	str	fp, [sp, #-8]!
   2c380:	str	lr, [sp, #4]
   2c384:	add	fp, sp, #4
   2c388:	sub	sp, sp, #32
   2c38c:	str	r0, [fp, #-32]	; 0xffffffe0
   2c390:	str	r1, [fp, #-36]	; 0xffffffdc
   2c394:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c398:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c39c:	bl	125e4 <fopen64@plt>
   2c3a0:	str	r0, [fp, #-8]
   2c3a4:	ldr	r3, [fp, #-8]
   2c3a8:	cmp	r3, #0
   2c3ac:	beq	2c47c <__assert_fail@plt+0x19d90>
   2c3b0:	ldr	r0, [fp, #-8]
   2c3b4:	bl	12488 <fileno@plt>
   2c3b8:	str	r0, [fp, #-12]
   2c3bc:	ldr	r3, [fp, #-12]
   2c3c0:	cmp	r3, #0
   2c3c4:	blt	2c47c <__assert_fail@plt+0x19d90>
   2c3c8:	ldr	r3, [fp, #-12]
   2c3cc:	cmp	r3, #2
   2c3d0:	bgt	2c47c <__assert_fail@plt+0x19d90>
   2c3d4:	ldr	r0, [fp, #-12]
   2c3d8:	bl	3cfe0 <__assert_fail@plt+0x2a8f4>
   2c3dc:	str	r0, [fp, #-16]
   2c3e0:	ldr	r3, [fp, #-16]
   2c3e4:	cmp	r3, #0
   2c3e8:	bge	2c41c <__assert_fail@plt+0x19d30>
   2c3ec:	bl	12404 <__errno_location@plt>
   2c3f0:	mov	r3, r0
   2c3f4:	ldr	r3, [r3]
   2c3f8:	str	r3, [fp, #-20]	; 0xffffffec
   2c3fc:	ldr	r0, [fp, #-8]
   2c400:	bl	124d0 <fclose@plt>
   2c404:	bl	12404 <__errno_location@plt>
   2c408:	mov	r2, r0
   2c40c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c410:	str	r3, [r2]
   2c414:	mov	r3, #0
   2c418:	b	2c480 <__assert_fail@plt+0x19d94>
   2c41c:	ldr	r0, [fp, #-8]
   2c420:	bl	124d0 <fclose@plt>
   2c424:	mov	r3, r0
   2c428:	cmp	r3, #0
   2c42c:	bne	2c44c <__assert_fail@plt+0x19d60>
   2c430:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2c434:	ldr	r0, [fp, #-16]
   2c438:	bl	11f6c <fdopen@plt>
   2c43c:	str	r0, [fp, #-8]
   2c440:	ldr	r3, [fp, #-8]
   2c444:	cmp	r3, #0
   2c448:	bne	2c47c <__assert_fail@plt+0x19d90>
   2c44c:	bl	12404 <__errno_location@plt>
   2c450:	mov	r3, r0
   2c454:	ldr	r3, [r3]
   2c458:	str	r3, [fp, #-24]	; 0xffffffe8
   2c45c:	ldr	r0, [fp, #-16]
   2c460:	bl	126a4 <close@plt>
   2c464:	bl	12404 <__errno_location@plt>
   2c468:	mov	r2, r0
   2c46c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c470:	str	r3, [r2]
   2c474:	mov	r3, #0
   2c478:	b	2c480 <__assert_fail@plt+0x19d94>
   2c47c:	ldr	r3, [fp, #-8]
   2c480:	mov	r0, r3
   2c484:	sub	sp, fp, #4
   2c488:	ldr	fp, [sp]
   2c48c:	add	sp, sp, #4
   2c490:	pop	{pc}		; (ldr pc, [sp], #4)
   2c494:	andeq	r0, r0, r0
   2c498:	push	{fp}		; (str fp, [sp, #-4]!)
   2c49c:	add	fp, sp, #0
   2c4a0:	sub	sp, sp, #12
   2c4a4:	str	r0, [fp, #-8]
   2c4a8:	ldr	r3, [fp, #-8]
   2c4ac:	ldr	r3, [r3, #8]
   2c4b0:	mov	r0, r3
   2c4b4:	add	sp, fp, #0
   2c4b8:	pop	{fp}		; (ldr fp, [sp], #4)
   2c4bc:	bx	lr
   2c4c0:	push	{fp}		; (str fp, [sp, #-4]!)
   2c4c4:	add	fp, sp, #0
   2c4c8:	sub	sp, sp, #12
   2c4cc:	str	r0, [fp, #-8]
   2c4d0:	ldr	r3, [fp, #-8]
   2c4d4:	ldr	r3, [r3, #12]
   2c4d8:	mov	r0, r3
   2c4dc:	add	sp, fp, #0
   2c4e0:	pop	{fp}		; (ldr fp, [sp], #4)
   2c4e4:	bx	lr
   2c4e8:	push	{fp}		; (str fp, [sp, #-4]!)
   2c4ec:	add	fp, sp, #0
   2c4f0:	sub	sp, sp, #12
   2c4f4:	str	r0, [fp, #-8]
   2c4f8:	ldr	r3, [fp, #-8]
   2c4fc:	ldr	r3, [r3, #16]
   2c500:	mov	r0, r3
   2c504:	add	sp, fp, #0
   2c508:	pop	{fp}		; (ldr fp, [sp], #4)
   2c50c:	bx	lr
   2c510:	push	{fp}		; (str fp, [sp, #-4]!)
   2c514:	add	fp, sp, #0
   2c518:	sub	sp, sp, #28
   2c51c:	str	r0, [fp, #-24]	; 0xffffffe8
   2c520:	mov	r3, #0
   2c524:	str	r3, [fp, #-12]
   2c528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c52c:	ldr	r3, [r3]
   2c530:	str	r3, [fp, #-8]
   2c534:	b	2c5a4 <__assert_fail@plt+0x19eb8>
   2c538:	ldr	r3, [fp, #-8]
   2c53c:	ldr	r3, [r3]
   2c540:	cmp	r3, #0
   2c544:	beq	2c598 <__assert_fail@plt+0x19eac>
   2c548:	ldr	r3, [fp, #-8]
   2c54c:	str	r3, [fp, #-16]
   2c550:	mov	r3, #1
   2c554:	str	r3, [fp, #-20]	; 0xffffffec
   2c558:	b	2c568 <__assert_fail@plt+0x19e7c>
   2c55c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c560:	add	r3, r3, #1
   2c564:	str	r3, [fp, #-20]	; 0xffffffec
   2c568:	ldr	r3, [fp, #-16]
   2c56c:	ldr	r3, [r3, #4]
   2c570:	str	r3, [fp, #-16]
   2c574:	ldr	r3, [fp, #-16]
   2c578:	cmp	r3, #0
   2c57c:	bne	2c55c <__assert_fail@plt+0x19e70>
   2c580:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c584:	ldr	r3, [fp, #-12]
   2c588:	cmp	r2, r3
   2c58c:	bls	2c598 <__assert_fail@plt+0x19eac>
   2c590:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c594:	str	r3, [fp, #-12]
   2c598:	ldr	r3, [fp, #-8]
   2c59c:	add	r3, r3, #8
   2c5a0:	str	r3, [fp, #-8]
   2c5a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c5a8:	ldr	r3, [r3, #4]
   2c5ac:	ldr	r2, [fp, #-8]
   2c5b0:	cmp	r2, r3
   2c5b4:	bcc	2c538 <__assert_fail@plt+0x19e4c>
   2c5b8:	ldr	r3, [fp, #-12]
   2c5bc:	mov	r0, r3
   2c5c0:	add	sp, fp, #0
   2c5c4:	pop	{fp}		; (ldr fp, [sp], #4)
   2c5c8:	bx	lr
   2c5cc:	push	{fp}		; (str fp, [sp, #-4]!)
   2c5d0:	add	fp, sp, #0
   2c5d4:	sub	sp, sp, #28
   2c5d8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c5dc:	mov	r3, #0
   2c5e0:	str	r3, [fp, #-12]
   2c5e4:	mov	r3, #0
   2c5e8:	str	r3, [fp, #-16]
   2c5ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c5f0:	ldr	r3, [r3]
   2c5f4:	str	r3, [fp, #-8]
   2c5f8:	b	2c660 <__assert_fail@plt+0x19f74>
   2c5fc:	ldr	r3, [fp, #-8]
   2c600:	ldr	r3, [r3]
   2c604:	cmp	r3, #0
   2c608:	beq	2c654 <__assert_fail@plt+0x19f68>
   2c60c:	ldr	r3, [fp, #-8]
   2c610:	str	r3, [fp, #-20]	; 0xffffffec
   2c614:	ldr	r3, [fp, #-12]
   2c618:	add	r3, r3, #1
   2c61c:	str	r3, [fp, #-12]
   2c620:	ldr	r3, [fp, #-16]
   2c624:	add	r3, r3, #1
   2c628:	str	r3, [fp, #-16]
   2c62c:	b	2c63c <__assert_fail@plt+0x19f50>
   2c630:	ldr	r3, [fp, #-16]
   2c634:	add	r3, r3, #1
   2c638:	str	r3, [fp, #-16]
   2c63c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c640:	ldr	r3, [r3, #4]
   2c644:	str	r3, [fp, #-20]	; 0xffffffec
   2c648:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c64c:	cmp	r3, #0
   2c650:	bne	2c630 <__assert_fail@plt+0x19f44>
   2c654:	ldr	r3, [fp, #-8]
   2c658:	add	r3, r3, #8
   2c65c:	str	r3, [fp, #-8]
   2c660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c664:	ldr	r3, [r3, #4]
   2c668:	ldr	r2, [fp, #-8]
   2c66c:	cmp	r2, r3
   2c670:	bcc	2c5fc <__assert_fail@plt+0x19f10>
   2c674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c678:	ldr	r3, [r3, #12]
   2c67c:	ldr	r2, [fp, #-12]
   2c680:	cmp	r2, r3
   2c684:	bne	2c6a4 <__assert_fail@plt+0x19fb8>
   2c688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c68c:	ldr	r3, [r3, #16]
   2c690:	ldr	r2, [fp, #-16]
   2c694:	cmp	r2, r3
   2c698:	bne	2c6a4 <__assert_fail@plt+0x19fb8>
   2c69c:	mov	r3, #1
   2c6a0:	b	2c6a8 <__assert_fail@plt+0x19fbc>
   2c6a4:	mov	r3, #0
   2c6a8:	mov	r0, r3
   2c6ac:	add	sp, fp, #0
   2c6b0:	pop	{fp}		; (ldr fp, [sp], #4)
   2c6b4:	bx	lr
   2c6b8:	str	fp, [sp, #-8]!
   2c6bc:	str	lr, [sp, #4]
   2c6c0:	add	fp, sp, #4
   2c6c4:	sub	sp, sp, #32
   2c6c8:	str	r0, [fp, #-24]	; 0xffffffe8
   2c6cc:	str	r1, [fp, #-28]	; 0xffffffe4
   2c6d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c6d4:	bl	2c4e8 <__assert_fail@plt+0x19dfc>
   2c6d8:	str	r0, [fp, #-8]
   2c6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c6e0:	bl	2c498 <__assert_fail@plt+0x19dac>
   2c6e4:	str	r0, [fp, #-12]
   2c6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c6ec:	bl	2c4c0 <__assert_fail@plt+0x19dd4>
   2c6f0:	str	r0, [fp, #-16]
   2c6f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2c6f8:	bl	2c510 <__assert_fail@plt+0x19e24>
   2c6fc:	str	r0, [fp, #-20]	; 0xffffffec
   2c700:	ldr	r2, [fp, #-8]
   2c704:	movw	r1, #38032	; 0x9490
   2c708:	movt	r1, #6
   2c70c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c710:	bl	123f8 <fprintf@plt>
   2c714:	ldr	r2, [fp, #-12]
   2c718:	movw	r1, #38056	; 0x94a8
   2c71c:	movt	r1, #6
   2c720:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c724:	bl	123f8 <fprintf@plt>
   2c728:	ldr	r3, [fp, #-16]
   2c72c:	vmov	s15, r3
   2c730:	vcvt.f64.u32	d7, s15
   2c734:	vldr	d6, [pc, #84]	; 2c790 <__assert_fail@plt+0x1a0a4>
   2c738:	vmul.f64	d5, d7, d6
   2c73c:	ldr	r3, [fp, #-12]
   2c740:	vmov	s15, r3
   2c744:	vcvt.f64.u32	d6, s15
   2c748:	vdiv.f64	d7, d5, d6
   2c74c:	vstr	d7, [sp]
   2c750:	ldr	r2, [fp, #-16]
   2c754:	movw	r1, #38080	; 0x94c0
   2c758:	movt	r1, #6
   2c75c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c760:	bl	123f8 <fprintf@plt>
   2c764:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c768:	movw	r1, #38116	; 0x94e4
   2c76c:	movt	r1, #6
   2c770:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2c774:	bl	123f8 <fprintf@plt>
   2c778:	nop	{0}
   2c77c:	sub	sp, fp, #4
   2c780:	ldr	fp, [sp]
   2c784:	add	sp, sp, #4
   2c788:	pop	{pc}		; (ldr pc, [sp], #4)
   2c78c:	nop	{0}
   2c790:	andeq	r0, r0, r0
   2c794:	subsmi	r0, r9, r0
   2c798:	str	fp, [sp, #-8]!
   2c79c:	str	lr, [sp, #4]
   2c7a0:	add	fp, sp, #4
   2c7a4:	sub	sp, sp, #16
   2c7a8:	str	r0, [fp, #-16]
   2c7ac:	str	r1, [fp, #-20]	; 0xffffffec
   2c7b0:	ldr	r3, [fp, #-16]
   2c7b4:	ldr	r3, [r3, #24]
   2c7b8:	ldr	r2, [fp, #-16]
   2c7bc:	ldr	r2, [r2, #8]
   2c7c0:	mov	r1, r2
   2c7c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c7c8:	blx	r3
   2c7cc:	str	r0, [fp, #-8]
   2c7d0:	ldr	r3, [fp, #-16]
   2c7d4:	ldr	r3, [r3, #8]
   2c7d8:	ldr	r2, [fp, #-8]
   2c7dc:	cmp	r2, r3
   2c7e0:	bcc	2c7e8 <__assert_fail@plt+0x1a0fc>
   2c7e4:	bl	12698 <abort@plt>
   2c7e8:	ldr	r3, [fp, #-16]
   2c7ec:	ldr	r2, [r3]
   2c7f0:	ldr	r3, [fp, #-8]
   2c7f4:	lsl	r3, r3, #3
   2c7f8:	add	r3, r2, r3
   2c7fc:	mov	r0, r3
   2c800:	sub	sp, fp, #4
   2c804:	ldr	fp, [sp]
   2c808:	add	sp, sp, #4
   2c80c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c810:	str	fp, [sp, #-8]!
   2c814:	str	lr, [sp, #4]
   2c818:	add	fp, sp, #4
   2c81c:	sub	sp, sp, #16
   2c820:	str	r0, [fp, #-16]
   2c824:	str	r1, [fp, #-20]	; 0xffffffec
   2c828:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c82c:	ldr	r0, [fp, #-16]
   2c830:	bl	2c798 <__assert_fail@plt+0x1a0ac>
   2c834:	str	r0, [fp, #-12]
   2c838:	ldr	r3, [fp, #-12]
   2c83c:	ldr	r3, [r3]
   2c840:	cmp	r3, #0
   2c844:	bne	2c850 <__assert_fail@plt+0x1a164>
   2c848:	mov	r3, #0
   2c84c:	b	2c8c0 <__assert_fail@plt+0x1a1d4>
   2c850:	ldr	r3, [fp, #-12]
   2c854:	str	r3, [fp, #-8]
   2c858:	b	2c8b0 <__assert_fail@plt+0x1a1c4>
   2c85c:	ldr	r3, [fp, #-8]
   2c860:	ldr	r3, [r3]
   2c864:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c868:	cmp	r2, r3
   2c86c:	beq	2c898 <__assert_fail@plt+0x1a1ac>
   2c870:	ldr	r3, [fp, #-16]
   2c874:	ldr	r3, [r3, #28]
   2c878:	ldr	r2, [fp, #-8]
   2c87c:	ldr	r2, [r2]
   2c880:	mov	r1, r2
   2c884:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c888:	blx	r3
   2c88c:	mov	r3, r0
   2c890:	cmp	r3, #0
   2c894:	beq	2c8a4 <__assert_fail@plt+0x1a1b8>
   2c898:	ldr	r3, [fp, #-8]
   2c89c:	ldr	r3, [r3]
   2c8a0:	b	2c8c0 <__assert_fail@plt+0x1a1d4>
   2c8a4:	ldr	r3, [fp, #-8]
   2c8a8:	ldr	r3, [r3, #4]
   2c8ac:	str	r3, [fp, #-8]
   2c8b0:	ldr	r3, [fp, #-8]
   2c8b4:	cmp	r3, #0
   2c8b8:	bne	2c85c <__assert_fail@plt+0x1a170>
   2c8bc:	mov	r3, #0
   2c8c0:	mov	r0, r3
   2c8c4:	sub	sp, fp, #4
   2c8c8:	ldr	fp, [sp]
   2c8cc:	add	sp, sp, #4
   2c8d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c8d4:	str	fp, [sp, #-8]!
   2c8d8:	str	lr, [sp, #4]
   2c8dc:	add	fp, sp, #4
   2c8e0:	sub	sp, sp, #16
   2c8e4:	str	r0, [fp, #-16]
   2c8e8:	ldr	r3, [fp, #-16]
   2c8ec:	ldr	r3, [r3, #16]
   2c8f0:	cmp	r3, #0
   2c8f4:	bne	2c900 <__assert_fail@plt+0x1a214>
   2c8f8:	mov	r3, #0
   2c8fc:	b	2c950 <__assert_fail@plt+0x1a264>
   2c900:	ldr	r3, [fp, #-16]
   2c904:	ldr	r3, [r3]
   2c908:	str	r3, [fp, #-8]
   2c90c:	ldr	r3, [fp, #-16]
   2c910:	ldr	r3, [r3, #4]
   2c914:	ldr	r2, [fp, #-8]
   2c918:	cmp	r2, r3
   2c91c:	bcc	2c924 <__assert_fail@plt+0x1a238>
   2c920:	bl	12698 <abort@plt>
   2c924:	ldr	r3, [fp, #-8]
   2c928:	ldr	r3, [r3]
   2c92c:	cmp	r3, #0
   2c930:	beq	2c940 <__assert_fail@plt+0x1a254>
   2c934:	ldr	r3, [fp, #-8]
   2c938:	ldr	r3, [r3]
   2c93c:	b	2c950 <__assert_fail@plt+0x1a264>
   2c940:	ldr	r3, [fp, #-8]
   2c944:	add	r3, r3, #8
   2c948:	str	r3, [fp, #-8]
   2c94c:	b	2c90c <__assert_fail@plt+0x1a220>
   2c950:	mov	r0, r3
   2c954:	sub	sp, fp, #4
   2c958:	ldr	fp, [sp]
   2c95c:	add	sp, sp, #4
   2c960:	pop	{pc}		; (ldr pc, [sp], #4)
   2c964:	str	fp, [sp, #-8]!
   2c968:	str	lr, [sp, #4]
   2c96c:	add	fp, sp, #4
   2c970:	sub	sp, sp, #16
   2c974:	str	r0, [fp, #-16]
   2c978:	str	r1, [fp, #-20]	; 0xffffffec
   2c97c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c980:	ldr	r0, [fp, #-16]
   2c984:	bl	2c798 <__assert_fail@plt+0x1a0ac>
   2c988:	str	r0, [fp, #-8]
   2c98c:	ldr	r3, [fp, #-8]
   2c990:	str	r3, [fp, #-12]
   2c994:	ldr	r3, [fp, #-12]
   2c998:	ldr	r3, [r3]
   2c99c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c9a0:	cmp	r2, r3
   2c9a4:	bne	2c9c8 <__assert_fail@plt+0x1a2dc>
   2c9a8:	ldr	r3, [fp, #-12]
   2c9ac:	ldr	r3, [r3, #4]
   2c9b0:	cmp	r3, #0
   2c9b4:	beq	2c9c8 <__assert_fail@plt+0x1a2dc>
   2c9b8:	ldr	r3, [fp, #-12]
   2c9bc:	ldr	r3, [r3, #4]
   2c9c0:	ldr	r3, [r3]
   2c9c4:	b	2ca24 <__assert_fail@plt+0x1a338>
   2c9c8:	ldr	r3, [fp, #-12]
   2c9cc:	ldr	r3, [r3, #4]
   2c9d0:	str	r3, [fp, #-12]
   2c9d4:	ldr	r3, [fp, #-12]
   2c9d8:	cmp	r3, #0
   2c9dc:	bne	2c994 <__assert_fail@plt+0x1a2a8>
   2c9e0:	b	2ca00 <__assert_fail@plt+0x1a314>
   2c9e4:	ldr	r3, [fp, #-8]
   2c9e8:	ldr	r3, [r3]
   2c9ec:	cmp	r3, #0
   2c9f0:	beq	2ca00 <__assert_fail@plt+0x1a314>
   2c9f4:	ldr	r3, [fp, #-8]
   2c9f8:	ldr	r3, [r3]
   2c9fc:	b	2ca24 <__assert_fail@plt+0x1a338>
   2ca00:	ldr	r3, [fp, #-8]
   2ca04:	add	r3, r3, #8
   2ca08:	str	r3, [fp, #-8]
   2ca0c:	ldr	r3, [fp, #-16]
   2ca10:	ldr	r3, [r3, #4]
   2ca14:	ldr	r2, [fp, #-8]
   2ca18:	cmp	r2, r3
   2ca1c:	bcc	2c9e4 <__assert_fail@plt+0x1a2f8>
   2ca20:	mov	r3, #0
   2ca24:	mov	r0, r3
   2ca28:	sub	sp, fp, #4
   2ca2c:	ldr	fp, [sp]
   2ca30:	add	sp, sp, #4
   2ca34:	pop	{pc}		; (ldr pc, [sp], #4)
   2ca38:	push	{fp}		; (str fp, [sp, #-4]!)
   2ca3c:	add	fp, sp, #0
   2ca40:	sub	sp, sp, #36	; 0x24
   2ca44:	str	r0, [fp, #-24]	; 0xffffffe8
   2ca48:	str	r1, [fp, #-28]	; 0xffffffe4
   2ca4c:	str	r2, [fp, #-32]	; 0xffffffe0
   2ca50:	mov	r3, #0
   2ca54:	str	r3, [fp, #-8]
   2ca58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca5c:	ldr	r3, [r3]
   2ca60:	str	r3, [fp, #-12]
   2ca64:	b	2cae4 <__assert_fail@plt+0x1a3f8>
   2ca68:	ldr	r3, [fp, #-12]
   2ca6c:	ldr	r3, [r3]
   2ca70:	cmp	r3, #0
   2ca74:	beq	2cad8 <__assert_fail@plt+0x1a3ec>
   2ca78:	ldr	r3, [fp, #-12]
   2ca7c:	str	r3, [fp, #-16]
   2ca80:	b	2cacc <__assert_fail@plt+0x1a3e0>
   2ca84:	ldr	r2, [fp, #-8]
   2ca88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca8c:	cmp	r2, r3
   2ca90:	bcc	2ca9c <__assert_fail@plt+0x1a3b0>
   2ca94:	ldr	r3, [fp, #-8]
   2ca98:	b	2cafc <__assert_fail@plt+0x1a410>
   2ca9c:	ldr	r3, [fp, #-8]
   2caa0:	add	r2, r3, #1
   2caa4:	str	r2, [fp, #-8]
   2caa8:	lsl	r3, r3, #2
   2caac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2cab0:	add	r3, r2, r3
   2cab4:	ldr	r2, [fp, #-16]
   2cab8:	ldr	r2, [r2]
   2cabc:	str	r2, [r3]
   2cac0:	ldr	r3, [fp, #-16]
   2cac4:	ldr	r3, [r3, #4]
   2cac8:	str	r3, [fp, #-16]
   2cacc:	ldr	r3, [fp, #-16]
   2cad0:	cmp	r3, #0
   2cad4:	bne	2ca84 <__assert_fail@plt+0x1a398>
   2cad8:	ldr	r3, [fp, #-12]
   2cadc:	add	r3, r3, #8
   2cae0:	str	r3, [fp, #-12]
   2cae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cae8:	ldr	r3, [r3, #4]
   2caec:	ldr	r2, [fp, #-12]
   2caf0:	cmp	r2, r3
   2caf4:	bcc	2ca68 <__assert_fail@plt+0x1a37c>
   2caf8:	ldr	r3, [fp, #-8]
   2cafc:	mov	r0, r3
   2cb00:	add	sp, fp, #0
   2cb04:	pop	{fp}		; (ldr fp, [sp], #4)
   2cb08:	bx	lr
   2cb0c:	str	fp, [sp, #-8]!
   2cb10:	str	lr, [sp, #4]
   2cb14:	add	fp, sp, #4
   2cb18:	sub	sp, sp, #32
   2cb1c:	str	r0, [fp, #-24]	; 0xffffffe8
   2cb20:	str	r1, [fp, #-28]	; 0xffffffe4
   2cb24:	str	r2, [fp, #-32]	; 0xffffffe0
   2cb28:	mov	r3, #0
   2cb2c:	str	r3, [fp, #-8]
   2cb30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cb34:	ldr	r3, [r3]
   2cb38:	str	r3, [fp, #-12]
   2cb3c:	b	2cbc0 <__assert_fail@plt+0x1a4d4>
   2cb40:	ldr	r3, [fp, #-12]
   2cb44:	ldr	r3, [r3]
   2cb48:	cmp	r3, #0
   2cb4c:	beq	2cbb4 <__assert_fail@plt+0x1a4c8>
   2cb50:	ldr	r3, [fp, #-12]
   2cb54:	str	r3, [fp, #-16]
   2cb58:	b	2cba8 <__assert_fail@plt+0x1a4bc>
   2cb5c:	ldr	r3, [fp, #-16]
   2cb60:	ldr	r2, [r3]
   2cb64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2cb68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cb6c:	mov	r0, r2
   2cb70:	blx	r3
   2cb74:	mov	r3, r0
   2cb78:	eor	r3, r3, #1
   2cb7c:	uxtb	r3, r3
   2cb80:	cmp	r3, #0
   2cb84:	beq	2cb90 <__assert_fail@plt+0x1a4a4>
   2cb88:	ldr	r3, [fp, #-8]
   2cb8c:	b	2cbd8 <__assert_fail@plt+0x1a4ec>
   2cb90:	ldr	r3, [fp, #-8]
   2cb94:	add	r3, r3, #1
   2cb98:	str	r3, [fp, #-8]
   2cb9c:	ldr	r3, [fp, #-16]
   2cba0:	ldr	r3, [r3, #4]
   2cba4:	str	r3, [fp, #-16]
   2cba8:	ldr	r3, [fp, #-16]
   2cbac:	cmp	r3, #0
   2cbb0:	bne	2cb5c <__assert_fail@plt+0x1a470>
   2cbb4:	ldr	r3, [fp, #-12]
   2cbb8:	add	r3, r3, #8
   2cbbc:	str	r3, [fp, #-12]
   2cbc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2cbc4:	ldr	r3, [r3, #4]
   2cbc8:	ldr	r2, [fp, #-12]
   2cbcc:	cmp	r2, r3
   2cbd0:	bcc	2cb40 <__assert_fail@plt+0x1a454>
   2cbd4:	ldr	r3, [fp, #-8]
   2cbd8:	mov	r0, r3
   2cbdc:	sub	sp, fp, #4
   2cbe0:	ldr	fp, [sp]
   2cbe4:	add	sp, sp, #4
   2cbe8:	pop	{pc}		; (ldr pc, [sp], #4)
   2cbec:	push	{fp}		; (str fp, [sp, #-4]!)
   2cbf0:	add	fp, sp, #0
   2cbf4:	sub	sp, sp, #20
   2cbf8:	str	r0, [fp, #-16]
   2cbfc:	str	r1, [fp, #-20]	; 0xffffffec
   2cc00:	mov	r3, #0
   2cc04:	str	r3, [fp, #-8]
   2cc08:	b	2cc48 <__assert_fail@plt+0x1a55c>
   2cc0c:	ldr	r2, [fp, #-8]
   2cc10:	mov	r3, r2
   2cc14:	lsl	r3, r3, #5
   2cc18:	sub	r2, r3, r2
   2cc1c:	ldrb	r3, [fp, #-9]
   2cc20:	add	r3, r2, r3
   2cc24:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cc28:	udiv	r2, r3, r2
   2cc2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2cc30:	mul	r2, r1, r2
   2cc34:	sub	r3, r3, r2
   2cc38:	str	r3, [fp, #-8]
   2cc3c:	ldr	r3, [fp, #-16]
   2cc40:	add	r3, r3, #1
   2cc44:	str	r3, [fp, #-16]
   2cc48:	ldr	r3, [fp, #-16]
   2cc4c:	ldrb	r3, [r3]
   2cc50:	strb	r3, [fp, #-9]
   2cc54:	ldrb	r3, [fp, #-9]
   2cc58:	cmp	r3, #0
   2cc5c:	bne	2cc0c <__assert_fail@plt+0x1a520>
   2cc60:	ldr	r3, [fp, #-8]
   2cc64:	mov	r0, r3
   2cc68:	add	sp, fp, #0
   2cc6c:	pop	{fp}		; (ldr fp, [sp], #4)
   2cc70:	bx	lr
   2cc74:	push	{fp}		; (str fp, [sp, #-4]!)
   2cc78:	add	fp, sp, #0
   2cc7c:	sub	sp, sp, #20
   2cc80:	str	r0, [fp, #-16]
   2cc84:	mov	r3, #3
   2cc88:	str	r3, [fp, #-8]
   2cc8c:	ldr	r3, [fp, #-8]
   2cc90:	ldr	r2, [fp, #-8]
   2cc94:	mul	r3, r2, r3
   2cc98:	str	r3, [fp, #-12]
   2cc9c:	b	2cccc <__assert_fail@plt+0x1a5e0>
   2cca0:	ldr	r3, [fp, #-8]
   2cca4:	add	r3, r3, #1
   2cca8:	str	r3, [fp, #-8]
   2ccac:	ldr	r3, [fp, #-8]
   2ccb0:	lsl	r3, r3, #2
   2ccb4:	ldr	r2, [fp, #-12]
   2ccb8:	add	r3, r2, r3
   2ccbc:	str	r3, [fp, #-12]
   2ccc0:	ldr	r3, [fp, #-8]
   2ccc4:	add	r3, r3, #1
   2ccc8:	str	r3, [fp, #-8]
   2cccc:	ldr	r2, [fp, #-12]
   2ccd0:	ldr	r3, [fp, #-16]
   2ccd4:	cmp	r2, r3
   2ccd8:	bcs	2ccfc <__assert_fail@plt+0x1a610>
   2ccdc:	ldr	r3, [fp, #-16]
   2cce0:	ldr	r2, [fp, #-8]
   2cce4:	udiv	r2, r3, r2
   2cce8:	ldr	r1, [fp, #-8]
   2ccec:	mul	r2, r1, r2
   2ccf0:	sub	r3, r3, r2
   2ccf4:	cmp	r3, #0
   2ccf8:	bne	2cca0 <__assert_fail@plt+0x1a5b4>
   2ccfc:	ldr	r3, [fp, #-16]
   2cd00:	ldr	r2, [fp, #-8]
   2cd04:	udiv	r2, r3, r2
   2cd08:	ldr	r1, [fp, #-8]
   2cd0c:	mul	r2, r1, r2
   2cd10:	sub	r3, r3, r2
   2cd14:	cmp	r3, #0
   2cd18:	movne	r3, #1
   2cd1c:	moveq	r3, #0
   2cd20:	uxtb	r3, r3
   2cd24:	mov	r0, r3
   2cd28:	add	sp, fp, #0
   2cd2c:	pop	{fp}		; (ldr fp, [sp], #4)
   2cd30:	bx	lr
   2cd34:	str	fp, [sp, #-8]!
   2cd38:	str	lr, [sp, #4]
   2cd3c:	add	fp, sp, #4
   2cd40:	sub	sp, sp, #8
   2cd44:	str	r0, [fp, #-8]
   2cd48:	ldr	r3, [fp, #-8]
   2cd4c:	cmp	r3, #9
   2cd50:	bhi	2cd5c <__assert_fail@plt+0x1a670>
   2cd54:	mov	r3, #10
   2cd58:	str	r3, [fp, #-8]
   2cd5c:	ldr	r3, [fp, #-8]
   2cd60:	orr	r3, r3, #1
   2cd64:	str	r3, [fp, #-8]
   2cd68:	b	2cd78 <__assert_fail@plt+0x1a68c>
   2cd6c:	ldr	r3, [fp, #-8]
   2cd70:	add	r3, r3, #2
   2cd74:	str	r3, [fp, #-8]
   2cd78:	ldr	r3, [fp, #-8]
   2cd7c:	cmn	r3, #1
   2cd80:	beq	2cda0 <__assert_fail@plt+0x1a6b4>
   2cd84:	ldr	r0, [fp, #-8]
   2cd88:	bl	2cc74 <__assert_fail@plt+0x1a588>
   2cd8c:	mov	r3, r0
   2cd90:	eor	r3, r3, #1
   2cd94:	uxtb	r3, r3
   2cd98:	cmp	r3, #0
   2cd9c:	bne	2cd6c <__assert_fail@plt+0x1a680>
   2cda0:	ldr	r3, [fp, #-8]
   2cda4:	mov	r0, r3
   2cda8:	sub	sp, fp, #4
   2cdac:	ldr	fp, [sp]
   2cdb0:	add	sp, sp, #4
   2cdb4:	pop	{pc}		; (ldr pc, [sp], #4)
   2cdb8:	push	{fp}		; (str fp, [sp, #-4]!)
   2cdbc:	add	fp, sp, #0
   2cdc0:	sub	sp, sp, #12
   2cdc4:	str	r0, [fp, #-8]
   2cdc8:	ldr	r3, [fp, #-8]
   2cdcc:	movw	r2, #38012	; 0x947c
   2cdd0:	movt	r2, #6
   2cdd4:	ldrd	r0, [r2]
   2cdd8:	strd	r0, [r3]
   2cddc:	ldrd	r0, [r2, #8]
   2cde0:	strd	r0, [r3, #8]
   2cde4:	ldr	r2, [r2, #16]
   2cde8:	str	r2, [r3, #16]
   2cdec:	nop	{0}
   2cdf0:	add	sp, fp, #0
   2cdf4:	pop	{fp}		; (ldr fp, [sp], #4)
   2cdf8:	bx	lr
   2cdfc:	str	fp, [sp, #-8]!
   2ce00:	str	lr, [sp, #4]
   2ce04:	add	fp, sp, #4
   2ce08:	sub	sp, sp, #16
   2ce0c:	str	r0, [fp, #-16]
   2ce10:	str	r1, [fp, #-20]	; 0xffffffec
   2ce14:	ldr	r3, [fp, #-16]
   2ce18:	mov	r1, #3
   2ce1c:	mov	r0, r3
   2ce20:	bl	5ffa0 <__assert_fail@plt+0x4d8b4>
   2ce24:	str	r0, [fp, #-8]
   2ce28:	ldr	r3, [fp, #-8]
   2ce2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ce30:	udiv	r2, r3, r2
   2ce34:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ce38:	mul	r2, r1, r2
   2ce3c:	sub	r3, r3, r2
   2ce40:	mov	r0, r3
   2ce44:	sub	sp, fp, #4
   2ce48:	ldr	fp, [sp]
   2ce4c:	add	sp, sp, #4
   2ce50:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce54:	push	{fp}		; (str fp, [sp, #-4]!)
   2ce58:	add	fp, sp, #0
   2ce5c:	sub	sp, sp, #12
   2ce60:	str	r0, [fp, #-8]
   2ce64:	str	r1, [fp, #-12]
   2ce68:	ldr	r2, [fp, #-8]
   2ce6c:	ldr	r3, [fp, #-12]
   2ce70:	cmp	r2, r3
   2ce74:	moveq	r3, #1
   2ce78:	movne	r3, #0
   2ce7c:	uxtb	r3, r3
   2ce80:	mov	r0, r3
   2ce84:	add	sp, fp, #0
   2ce88:	pop	{fp}		; (ldr fp, [sp], #4)
   2ce8c:	bx	lr
   2ce90:	push	{fp}		; (str fp, [sp, #-4]!)
   2ce94:	add	fp, sp, #0
   2ce98:	sub	sp, sp, #20
   2ce9c:	str	r0, [fp, #-16]
   2cea0:	ldr	r3, [fp, #-16]
   2cea4:	ldr	r3, [r3, #20]
   2cea8:	str	r3, [fp, #-8]
   2ceac:	ldr	r2, [fp, #-8]
   2ceb0:	movw	r3, #38012	; 0x947c
   2ceb4:	movt	r3, #6
   2ceb8:	cmp	r2, r3
   2cebc:	bne	2cec8 <__assert_fail@plt+0x1a7dc>
   2cec0:	mov	r3, #1
   2cec4:	b	2cfbc <__assert_fail@plt+0x1a8d0>
   2cec8:	movw	r3, #52429	; 0xcccd
   2cecc:	movt	r3, #15820	; 0x3dcc
   2ced0:	str	r3, [fp, #-12]
   2ced4:	ldr	r3, [fp, #-8]
   2ced8:	vldr	s15, [r3, #8]
   2cedc:	vldr	s14, [fp, #-12]
   2cee0:	vcmpe.f32	s14, s15
   2cee4:	vmrs	APSR_nzcv, fpscr
   2cee8:	bpl	2cfa8 <__assert_fail@plt+0x1a8bc>
   2ceec:	ldr	r3, [fp, #-8]
   2cef0:	vldr	s14, [r3, #8]
   2cef4:	vldr	s13, [pc, #208]	; 2cfcc <__assert_fail@plt+0x1a8e0>
   2cef8:	vldr	s15, [fp, #-12]
   2cefc:	vsub.f32	s15, s13, s15
   2cf00:	vcmpe.f32	s14, s15
   2cf04:	vmrs	APSR_nzcv, fpscr
   2cf08:	bpl	2cfa8 <__assert_fail@plt+0x1a8bc>
   2cf0c:	vldr	s15, [fp, #-12]
   2cf10:	vldr	s14, [pc, #180]	; 2cfcc <__assert_fail@plt+0x1a8e0>
   2cf14:	vadd.f32	s14, s15, s14
   2cf18:	ldr	r3, [fp, #-8]
   2cf1c:	vldr	s15, [r3, #12]
   2cf20:	vcmpe.f32	s14, s15
   2cf24:	vmrs	APSR_nzcv, fpscr
   2cf28:	bpl	2cfa8 <__assert_fail@plt+0x1a8bc>
   2cf2c:	ldr	r3, [fp, #-8]
   2cf30:	vldr	s15, [r3]
   2cf34:	vcmpe.f32	s15, #0.0
   2cf38:	vmrs	APSR_nzcv, fpscr
   2cf3c:	blt	2cfa8 <__assert_fail@plt+0x1a8bc>
   2cf40:	ldr	r3, [fp, #-8]
   2cf44:	vldr	s14, [r3]
   2cf48:	vldr	s15, [fp, #-12]
   2cf4c:	vadd.f32	s14, s14, s15
   2cf50:	ldr	r3, [fp, #-8]
   2cf54:	vldr	s15, [r3, #4]
   2cf58:	vcmpe.f32	s14, s15
   2cf5c:	vmrs	APSR_nzcv, fpscr
   2cf60:	bpl	2cfa8 <__assert_fail@plt+0x1a8bc>
   2cf64:	ldr	r3, [fp, #-8]
   2cf68:	vldr	s15, [r3, #4]
   2cf6c:	vldr	s14, [pc, #88]	; 2cfcc <__assert_fail@plt+0x1a8e0>
   2cf70:	vcmpe.f32	s15, s14
   2cf74:	vmrs	APSR_nzcv, fpscr
   2cf78:	bhi	2cfa8 <__assert_fail@plt+0x1a8bc>
   2cf7c:	ldr	r3, [fp, #-8]
   2cf80:	vldr	s14, [r3]
   2cf84:	vldr	s15, [fp, #-12]
   2cf88:	vadd.f32	s14, s14, s15
   2cf8c:	ldr	r3, [fp, #-8]
   2cf90:	vldr	s15, [r3, #8]
   2cf94:	vcmpe.f32	s14, s15
   2cf98:	vmrs	APSR_nzcv, fpscr
   2cf9c:	bpl	2cfa8 <__assert_fail@plt+0x1a8bc>
   2cfa0:	mov	r3, #1
   2cfa4:	b	2cfbc <__assert_fail@plt+0x1a8d0>
   2cfa8:	ldr	r2, [fp, #-16]
   2cfac:	movw	r3, #38012	; 0x947c
   2cfb0:	movt	r3, #6
   2cfb4:	str	r3, [r2, #20]
   2cfb8:	mov	r3, #0
   2cfbc:	mov	r0, r3
   2cfc0:	add	sp, fp, #0
   2cfc4:	pop	{fp}		; (ldr fp, [sp], #4)
   2cfc8:	bx	lr
   2cfcc:	svccc	0x00800000
   2cfd0:	str	fp, [sp, #-8]!
   2cfd4:	str	lr, [sp, #4]
   2cfd8:	add	fp, sp, #4
   2cfdc:	sub	sp, sp, #16
   2cfe0:	str	r0, [fp, #-16]
   2cfe4:	str	r1, [fp, #-20]	; 0xffffffec
   2cfe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cfec:	ldrb	r3, [r3, #16]
   2cff0:	eor	r3, r3, #1
   2cff4:	uxtb	r3, r3
   2cff8:	cmp	r3, #0
   2cffc:	beq	2d048 <__assert_fail@plt+0x1a95c>
   2d000:	ldr	r3, [fp, #-16]
   2d004:	vmov	s15, r3
   2d008:	vcvt.f32.u32	s13, s15
   2d00c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d010:	vldr	s14, [r3, #8]
   2d014:	vdiv.f32	s15, s13, s14
   2d018:	vstr	s15, [fp, #-8]
   2d01c:	vldr	s15, [fp, #-8]
   2d020:	vldr	s14, [pc, #136]	; 2d0b0 <__assert_fail@plt+0x1a9c4>
   2d024:	vcmpe.f32	s15, s14
   2d028:	vmrs	APSR_nzcv, fpscr
   2d02c:	blt	2d038 <__assert_fail@plt+0x1a94c>
   2d030:	mov	r3, #0
   2d034:	b	2d09c <__assert_fail@plt+0x1a9b0>
   2d038:	vldr	s15, [fp, #-8]
   2d03c:	vcvt.u32.f32	s15, s15
   2d040:	vmov	r3, s15
   2d044:	str	r3, [fp, #-16]
   2d048:	ldr	r0, [fp, #-16]
   2d04c:	bl	2cd34 <__assert_fail@plt+0x1a648>
   2d050:	str	r0, [fp, #-16]
   2d054:	mov	r3, #0
   2d058:	ldr	r2, [fp, #-16]
   2d05c:	lsl	r2, r2, #2
   2d060:	ldr	r1, [fp, #-16]
   2d064:	lsr	r1, r1, #30
   2d068:	cmp	r1, #0
   2d06c:	beq	2d074 <__assert_fail@plt+0x1a988>
   2d070:	mov	r3, #1
   2d074:	cmp	r2, #0
   2d078:	bge	2d080 <__assert_fail@plt+0x1a994>
   2d07c:	mov	r3, #1
   2d080:	and	r3, r3, #1
   2d084:	uxtb	r3, r3
   2d088:	cmp	r3, #0
   2d08c:	beq	2d098 <__assert_fail@plt+0x1a9ac>
   2d090:	mov	r3, #0
   2d094:	b	2d09c <__assert_fail@plt+0x1a9b0>
   2d098:	ldr	r3, [fp, #-16]
   2d09c:	mov	r0, r3
   2d0a0:	sub	sp, fp, #4
   2d0a4:	ldr	fp, [sp]
   2d0a8:	add	sp, sp, #4
   2d0ac:	pop	{pc}		; (ldr pc, [sp], #4)
   2d0b0:	svcmi	0x00800000
   2d0b4:	str	fp, [sp, #-8]!
   2d0b8:	str	lr, [sp, #4]
   2d0bc:	add	fp, sp, #4
   2d0c0:	sub	sp, sp, #24
   2d0c4:	str	r0, [fp, #-16]
   2d0c8:	str	r1, [fp, #-20]	; 0xffffffec
   2d0cc:	str	r2, [fp, #-24]	; 0xffffffe8
   2d0d0:	str	r3, [fp, #-28]	; 0xffffffe4
   2d0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d0d8:	cmp	r3, #0
   2d0dc:	bne	2d0ec <__assert_fail@plt+0x1aa00>
   2d0e0:	movw	r3, #52732	; 0xcdfc
   2d0e4:	movt	r3, #2
   2d0e8:	str	r3, [fp, #-24]	; 0xffffffe8
   2d0ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d0f0:	cmp	r3, #0
   2d0f4:	bne	2d104 <__assert_fail@plt+0x1aa18>
   2d0f8:	movw	r3, #52820	; 0xce54
   2d0fc:	movt	r3, #2
   2d100:	str	r3, [fp, #-28]	; 0xffffffe4
   2d104:	mov	r0, #40	; 0x28
   2d108:	bl	43510 <__assert_fail@plt+0x30e24>
   2d10c:	mov	r3, r0
   2d110:	str	r3, [fp, #-8]
   2d114:	ldr	r3, [fp, #-8]
   2d118:	cmp	r3, #0
   2d11c:	bne	2d128 <__assert_fail@plt+0x1aa3c>
   2d120:	mov	r3, #0
   2d124:	b	2d254 <__assert_fail@plt+0x1ab68>
   2d128:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d12c:	cmp	r3, #0
   2d130:	bne	2d140 <__assert_fail@plt+0x1aa54>
   2d134:	movw	r3, #38012	; 0x947c
   2d138:	movt	r3, #6
   2d13c:	str	r3, [fp, #-20]	; 0xffffffec
   2d140:	ldr	r3, [fp, #-8]
   2d144:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d148:	str	r2, [r3, #20]
   2d14c:	ldr	r0, [fp, #-8]
   2d150:	bl	2ce90 <__assert_fail@plt+0x1a7a4>
   2d154:	mov	r3, r0
   2d158:	eor	r3, r3, #1
   2d15c:	uxtb	r3, r3
   2d160:	cmp	r3, #0
   2d164:	bne	2d234 <__assert_fail@plt+0x1ab48>
   2d168:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d16c:	ldr	r0, [fp, #-16]
   2d170:	bl	2cfd0 <__assert_fail@plt+0x1a8e4>
   2d174:	mov	r2, r0
   2d178:	ldr	r3, [fp, #-8]
   2d17c:	str	r2, [r3, #8]
   2d180:	ldr	r3, [fp, #-8]
   2d184:	ldr	r3, [r3, #8]
   2d188:	cmp	r3, #0
   2d18c:	beq	2d23c <__assert_fail@plt+0x1ab50>
   2d190:	ldr	r3, [fp, #-8]
   2d194:	ldr	r3, [r3, #8]
   2d198:	mov	r1, #8
   2d19c:	mov	r0, r3
   2d1a0:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   2d1a4:	mov	r3, r0
   2d1a8:	mov	r2, r3
   2d1ac:	ldr	r3, [fp, #-8]
   2d1b0:	str	r2, [r3]
   2d1b4:	ldr	r3, [fp, #-8]
   2d1b8:	ldr	r3, [r3]
   2d1bc:	cmp	r3, #0
   2d1c0:	beq	2d244 <__assert_fail@plt+0x1ab58>
   2d1c4:	ldr	r3, [fp, #-8]
   2d1c8:	ldr	r2, [r3]
   2d1cc:	ldr	r3, [fp, #-8]
   2d1d0:	ldr	r3, [r3, #8]
   2d1d4:	lsl	r3, r3, #3
   2d1d8:	add	r2, r2, r3
   2d1dc:	ldr	r3, [fp, #-8]
   2d1e0:	str	r2, [r3, #4]
   2d1e4:	ldr	r3, [fp, #-8]
   2d1e8:	mov	r2, #0
   2d1ec:	str	r2, [r3, #12]
   2d1f0:	ldr	r3, [fp, #-8]
   2d1f4:	mov	r2, #0
   2d1f8:	str	r2, [r3, #16]
   2d1fc:	ldr	r3, [fp, #-8]
   2d200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d204:	str	r2, [r3, #24]
   2d208:	ldr	r3, [fp, #-8]
   2d20c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d210:	str	r2, [r3, #28]
   2d214:	ldr	r3, [fp, #-8]
   2d218:	ldr	r2, [fp, #4]
   2d21c:	str	r2, [r3, #32]
   2d220:	ldr	r3, [fp, #-8]
   2d224:	mov	r2, #0
   2d228:	str	r2, [r3, #36]	; 0x24
   2d22c:	ldr	r3, [fp, #-8]
   2d230:	b	2d254 <__assert_fail@plt+0x1ab68>
   2d234:	nop	{0}
   2d238:	b	2d248 <__assert_fail@plt+0x1ab5c>
   2d23c:	nop	{0}
   2d240:	b	2d248 <__assert_fail@plt+0x1ab5c>
   2d244:	nop	{0}
   2d248:	ldr	r0, [fp, #-8]
   2d24c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2d250:	mov	r3, #0
   2d254:	mov	r0, r3
   2d258:	sub	sp, fp, #4
   2d25c:	ldr	fp, [sp]
   2d260:	add	sp, sp, #4
   2d264:	pop	{pc}		; (ldr pc, [sp], #4)
   2d268:	str	fp, [sp, #-8]!
   2d26c:	str	lr, [sp, #4]
   2d270:	add	fp, sp, #4
   2d274:	sub	sp, sp, #24
   2d278:	str	r0, [fp, #-24]	; 0xffffffe8
   2d27c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d280:	ldr	r3, [r3]
   2d284:	str	r3, [fp, #-8]
   2d288:	b	2d368 <__assert_fail@plt+0x1ac7c>
   2d28c:	ldr	r3, [fp, #-8]
   2d290:	ldr	r3, [r3]
   2d294:	cmp	r3, #0
   2d298:	beq	2d35c <__assert_fail@plt+0x1ac70>
   2d29c:	ldr	r3, [fp, #-8]
   2d2a0:	ldr	r3, [r3, #4]
   2d2a4:	str	r3, [fp, #-12]
   2d2a8:	b	2d310 <__assert_fail@plt+0x1ac24>
   2d2ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d2b0:	ldr	r3, [r3, #32]
   2d2b4:	cmp	r3, #0
   2d2b8:	beq	2d2d4 <__assert_fail@plt+0x1abe8>
   2d2bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d2c0:	ldr	r3, [r3, #32]
   2d2c4:	ldr	r2, [fp, #-12]
   2d2c8:	ldr	r2, [r2]
   2d2cc:	mov	r0, r2
   2d2d0:	blx	r3
   2d2d4:	ldr	r3, [fp, #-12]
   2d2d8:	mov	r2, #0
   2d2dc:	str	r2, [r3]
   2d2e0:	ldr	r3, [fp, #-12]
   2d2e4:	ldr	r3, [r3, #4]
   2d2e8:	str	r3, [fp, #-16]
   2d2ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d2f0:	ldr	r2, [r3, #36]	; 0x24
   2d2f4:	ldr	r3, [fp, #-12]
   2d2f8:	str	r2, [r3, #4]
   2d2fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d300:	ldr	r2, [fp, #-12]
   2d304:	str	r2, [r3, #36]	; 0x24
   2d308:	ldr	r3, [fp, #-16]
   2d30c:	str	r3, [fp, #-12]
   2d310:	ldr	r3, [fp, #-12]
   2d314:	cmp	r3, #0
   2d318:	bne	2d2ac <__assert_fail@plt+0x1abc0>
   2d31c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d320:	ldr	r3, [r3, #32]
   2d324:	cmp	r3, #0
   2d328:	beq	2d344 <__assert_fail@plt+0x1ac58>
   2d32c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d330:	ldr	r3, [r3, #32]
   2d334:	ldr	r2, [fp, #-8]
   2d338:	ldr	r2, [r2]
   2d33c:	mov	r0, r2
   2d340:	blx	r3
   2d344:	ldr	r3, [fp, #-8]
   2d348:	mov	r2, #0
   2d34c:	str	r2, [r3]
   2d350:	ldr	r3, [fp, #-8]
   2d354:	mov	r2, #0
   2d358:	str	r2, [r3, #4]
   2d35c:	ldr	r3, [fp, #-8]
   2d360:	add	r3, r3, #8
   2d364:	str	r3, [fp, #-8]
   2d368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d36c:	ldr	r3, [r3, #4]
   2d370:	ldr	r2, [fp, #-8]
   2d374:	cmp	r2, r3
   2d378:	bcc	2d28c <__assert_fail@plt+0x1aba0>
   2d37c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d380:	mov	r2, #0
   2d384:	str	r2, [r3, #12]
   2d388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d38c:	mov	r2, #0
   2d390:	str	r2, [r3, #16]
   2d394:	nop	{0}
   2d398:	sub	sp, fp, #4
   2d39c:	ldr	fp, [sp]
   2d3a0:	add	sp, sp, #4
   2d3a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2d3a8:	str	fp, [sp, #-8]!
   2d3ac:	str	lr, [sp, #4]
   2d3b0:	add	fp, sp, #4
   2d3b4:	sub	sp, sp, #24
   2d3b8:	str	r0, [fp, #-24]	; 0xffffffe8
   2d3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d3c0:	ldr	r3, [r3, #32]
   2d3c4:	cmp	r3, #0
   2d3c8:	beq	2d458 <__assert_fail@plt+0x1ad6c>
   2d3cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d3d0:	ldr	r3, [r3, #16]
   2d3d4:	cmp	r3, #0
   2d3d8:	beq	2d458 <__assert_fail@plt+0x1ad6c>
   2d3dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d3e0:	ldr	r3, [r3]
   2d3e4:	str	r3, [fp, #-8]
   2d3e8:	b	2d444 <__assert_fail@plt+0x1ad58>
   2d3ec:	ldr	r3, [fp, #-8]
   2d3f0:	ldr	r3, [r3]
   2d3f4:	cmp	r3, #0
   2d3f8:	beq	2d438 <__assert_fail@plt+0x1ad4c>
   2d3fc:	ldr	r3, [fp, #-8]
   2d400:	str	r3, [fp, #-12]
   2d404:	b	2d42c <__assert_fail@plt+0x1ad40>
   2d408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d40c:	ldr	r3, [r3, #32]
   2d410:	ldr	r2, [fp, #-12]
   2d414:	ldr	r2, [r2]
   2d418:	mov	r0, r2
   2d41c:	blx	r3
   2d420:	ldr	r3, [fp, #-12]
   2d424:	ldr	r3, [r3, #4]
   2d428:	str	r3, [fp, #-12]
   2d42c:	ldr	r3, [fp, #-12]
   2d430:	cmp	r3, #0
   2d434:	bne	2d408 <__assert_fail@plt+0x1ad1c>
   2d438:	ldr	r3, [fp, #-8]
   2d43c:	add	r3, r3, #8
   2d440:	str	r3, [fp, #-8]
   2d444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d448:	ldr	r3, [r3, #4]
   2d44c:	ldr	r2, [fp, #-8]
   2d450:	cmp	r2, r3
   2d454:	bcc	2d3ec <__assert_fail@plt+0x1ad00>
   2d458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d45c:	ldr	r3, [r3]
   2d460:	str	r3, [fp, #-8]
   2d464:	b	2d4ac <__assert_fail@plt+0x1adc0>
   2d468:	ldr	r3, [fp, #-8]
   2d46c:	ldr	r3, [r3, #4]
   2d470:	str	r3, [fp, #-12]
   2d474:	b	2d494 <__assert_fail@plt+0x1ada8>
   2d478:	ldr	r3, [fp, #-12]
   2d47c:	ldr	r3, [r3, #4]
   2d480:	str	r3, [fp, #-16]
   2d484:	ldr	r0, [fp, #-12]
   2d488:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2d48c:	ldr	r3, [fp, #-16]
   2d490:	str	r3, [fp, #-12]
   2d494:	ldr	r3, [fp, #-12]
   2d498:	cmp	r3, #0
   2d49c:	bne	2d478 <__assert_fail@plt+0x1ad8c>
   2d4a0:	ldr	r3, [fp, #-8]
   2d4a4:	add	r3, r3, #8
   2d4a8:	str	r3, [fp, #-8]
   2d4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4b0:	ldr	r3, [r3, #4]
   2d4b4:	ldr	r2, [fp, #-8]
   2d4b8:	cmp	r2, r3
   2d4bc:	bcc	2d468 <__assert_fail@plt+0x1ad7c>
   2d4c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4c4:	ldr	r3, [r3, #36]	; 0x24
   2d4c8:	str	r3, [fp, #-12]
   2d4cc:	b	2d4ec <__assert_fail@plt+0x1ae00>
   2d4d0:	ldr	r3, [fp, #-12]
   2d4d4:	ldr	r3, [r3, #4]
   2d4d8:	str	r3, [fp, #-16]
   2d4dc:	ldr	r0, [fp, #-12]
   2d4e0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2d4e4:	ldr	r3, [fp, #-16]
   2d4e8:	str	r3, [fp, #-12]
   2d4ec:	ldr	r3, [fp, #-12]
   2d4f0:	cmp	r3, #0
   2d4f4:	bne	2d4d0 <__assert_fail@plt+0x1ade4>
   2d4f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4fc:	ldr	r3, [r3]
   2d500:	mov	r0, r3
   2d504:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2d508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d50c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2d510:	nop	{0}
   2d514:	sub	sp, fp, #4
   2d518:	ldr	fp, [sp]
   2d51c:	add	sp, sp, #4
   2d520:	pop	{pc}		; (ldr pc, [sp], #4)
   2d524:	str	fp, [sp, #-8]!
   2d528:	str	lr, [sp, #4]
   2d52c:	add	fp, sp, #4
   2d530:	sub	sp, sp, #16
   2d534:	str	r0, [fp, #-16]
   2d538:	ldr	r3, [fp, #-16]
   2d53c:	ldr	r3, [r3, #36]	; 0x24
   2d540:	cmp	r3, #0
   2d544:	beq	2d568 <__assert_fail@plt+0x1ae7c>
   2d548:	ldr	r3, [fp, #-16]
   2d54c:	ldr	r3, [r3, #36]	; 0x24
   2d550:	str	r3, [fp, #-8]
   2d554:	ldr	r3, [fp, #-8]
   2d558:	ldr	r2, [r3, #4]
   2d55c:	ldr	r3, [fp, #-16]
   2d560:	str	r2, [r3, #36]	; 0x24
   2d564:	b	2d578 <__assert_fail@plt+0x1ae8c>
   2d568:	mov	r0, #8
   2d56c:	bl	43510 <__assert_fail@plt+0x30e24>
   2d570:	mov	r3, r0
   2d574:	str	r3, [fp, #-8]
   2d578:	ldr	r3, [fp, #-8]
   2d57c:	mov	r0, r3
   2d580:	sub	sp, fp, #4
   2d584:	ldr	fp, [sp]
   2d588:	add	sp, sp, #4
   2d58c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d590:	push	{fp}		; (str fp, [sp, #-4]!)
   2d594:	add	fp, sp, #0
   2d598:	sub	sp, sp, #12
   2d59c:	str	r0, [fp, #-8]
   2d5a0:	str	r1, [fp, #-12]
   2d5a4:	ldr	r3, [fp, #-12]
   2d5a8:	mov	r2, #0
   2d5ac:	str	r2, [r3]
   2d5b0:	ldr	r3, [fp, #-8]
   2d5b4:	ldr	r2, [r3, #36]	; 0x24
   2d5b8:	ldr	r3, [fp, #-12]
   2d5bc:	str	r2, [r3, #4]
   2d5c0:	ldr	r3, [fp, #-8]
   2d5c4:	ldr	r2, [fp, #-12]
   2d5c8:	str	r2, [r3, #36]	; 0x24
   2d5cc:	nop	{0}
   2d5d0:	add	sp, fp, #0
   2d5d4:	pop	{fp}		; (ldr fp, [sp], #4)
   2d5d8:	bx	lr
   2d5dc:	str	fp, [sp, #-8]!
   2d5e0:	str	lr, [sp, #4]
   2d5e4:	add	fp, sp, #4
   2d5e8:	sub	sp, sp, #40	; 0x28
   2d5ec:	str	r0, [fp, #-32]	; 0xffffffe0
   2d5f0:	str	r1, [fp, #-36]	; 0xffffffdc
   2d5f4:	str	r2, [fp, #-40]	; 0xffffffd8
   2d5f8:	strb	r3, [fp, #-41]	; 0xffffffd7
   2d5fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d600:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d604:	bl	2c798 <__assert_fail@plt+0x1a0ac>
   2d608:	str	r0, [fp, #-12]
   2d60c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d610:	ldr	r2, [fp, #-12]
   2d614:	str	r2, [r3]
   2d618:	ldr	r3, [fp, #-12]
   2d61c:	ldr	r3, [r3]
   2d620:	cmp	r3, #0
   2d624:	bne	2d630 <__assert_fail@plt+0x1af44>
   2d628:	mov	r3, #0
   2d62c:	b	2d794 <__assert_fail@plt+0x1b0a8>
   2d630:	ldr	r3, [fp, #-12]
   2d634:	ldr	r3, [r3]
   2d638:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d63c:	cmp	r2, r3
   2d640:	beq	2d66c <__assert_fail@plt+0x1af80>
   2d644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d648:	ldr	r3, [r3, #28]
   2d64c:	ldr	r2, [fp, #-12]
   2d650:	ldr	r2, [r2]
   2d654:	mov	r1, r2
   2d658:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d65c:	blx	r3
   2d660:	mov	r3, r0
   2d664:	cmp	r3, #0
   2d668:	beq	2d6d8 <__assert_fail@plt+0x1afec>
   2d66c:	ldr	r3, [fp, #-12]
   2d670:	ldr	r3, [r3]
   2d674:	str	r3, [fp, #-24]	; 0xffffffe8
   2d678:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2d67c:	cmp	r3, #0
   2d680:	beq	2d6d0 <__assert_fail@plt+0x1afe4>
   2d684:	ldr	r3, [fp, #-12]
   2d688:	ldr	r3, [r3, #4]
   2d68c:	cmp	r3, #0
   2d690:	beq	2d6c4 <__assert_fail@plt+0x1afd8>
   2d694:	ldr	r3, [fp, #-12]
   2d698:	ldr	r3, [r3, #4]
   2d69c:	str	r3, [fp, #-28]	; 0xffffffe4
   2d6a0:	ldr	r2, [fp, #-12]
   2d6a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d6a8:	mov	r1, r2
   2d6ac:	ldrd	r2, [r3]
   2d6b0:	strd	r2, [r1]
   2d6b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d6b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d6bc:	bl	2d590 <__assert_fail@plt+0x1aea4>
   2d6c0:	b	2d6d0 <__assert_fail@plt+0x1afe4>
   2d6c4:	ldr	r3, [fp, #-12]
   2d6c8:	mov	r2, #0
   2d6cc:	str	r2, [r3]
   2d6d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d6d4:	b	2d794 <__assert_fail@plt+0x1b0a8>
   2d6d8:	ldr	r3, [fp, #-12]
   2d6dc:	str	r3, [fp, #-8]
   2d6e0:	b	2d780 <__assert_fail@plt+0x1b094>
   2d6e4:	ldr	r3, [fp, #-8]
   2d6e8:	ldr	r3, [r3, #4]
   2d6ec:	ldr	r3, [r3]
   2d6f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2d6f4:	cmp	r2, r3
   2d6f8:	beq	2d728 <__assert_fail@plt+0x1b03c>
   2d6fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d700:	ldr	r3, [r3, #28]
   2d704:	ldr	r2, [fp, #-8]
   2d708:	ldr	r2, [r2, #4]
   2d70c:	ldr	r2, [r2]
   2d710:	mov	r1, r2
   2d714:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2d718:	blx	r3
   2d71c:	mov	r3, r0
   2d720:	cmp	r3, #0
   2d724:	beq	2d774 <__assert_fail@plt+0x1b088>
   2d728:	ldr	r3, [fp, #-8]
   2d72c:	ldr	r3, [r3, #4]
   2d730:	ldr	r3, [r3]
   2d734:	str	r3, [fp, #-16]
   2d738:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   2d73c:	cmp	r3, #0
   2d740:	beq	2d76c <__assert_fail@plt+0x1b080>
   2d744:	ldr	r3, [fp, #-8]
   2d748:	ldr	r3, [r3, #4]
   2d74c:	str	r3, [fp, #-20]	; 0xffffffec
   2d750:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d754:	ldr	r2, [r3, #4]
   2d758:	ldr	r3, [fp, #-8]
   2d75c:	str	r2, [r3, #4]
   2d760:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d764:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d768:	bl	2d590 <__assert_fail@plt+0x1aea4>
   2d76c:	ldr	r3, [fp, #-16]
   2d770:	b	2d794 <__assert_fail@plt+0x1b0a8>
   2d774:	ldr	r3, [fp, #-8]
   2d778:	ldr	r3, [r3, #4]
   2d77c:	str	r3, [fp, #-8]
   2d780:	ldr	r3, [fp, #-8]
   2d784:	ldr	r3, [r3, #4]
   2d788:	cmp	r3, #0
   2d78c:	bne	2d6e4 <__assert_fail@plt+0x1aff8>
   2d790:	mov	r3, #0
   2d794:	mov	r0, r3
   2d798:	sub	sp, fp, #4
   2d79c:	ldr	fp, [sp]
   2d7a0:	add	sp, sp, #4
   2d7a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2d7a8:	str	fp, [sp, #-8]!
   2d7ac:	str	lr, [sp, #4]
   2d7b0:	add	fp, sp, #4
   2d7b4:	sub	sp, sp, #40	; 0x28
   2d7b8:	str	r0, [fp, #-32]	; 0xffffffe0
   2d7bc:	str	r1, [fp, #-36]	; 0xffffffdc
   2d7c0:	mov	r3, r2
   2d7c4:	strb	r3, [fp, #-37]	; 0xffffffdb
   2d7c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d7cc:	ldr	r3, [r3]
   2d7d0:	str	r3, [fp, #-8]
   2d7d4:	b	2d974 <__assert_fail@plt+0x1b288>
   2d7d8:	ldr	r3, [fp, #-8]
   2d7dc:	ldr	r3, [r3]
   2d7e0:	cmp	r3, #0
   2d7e4:	beq	2d968 <__assert_fail@plt+0x1b27c>
   2d7e8:	ldr	r3, [fp, #-8]
   2d7ec:	ldr	r3, [r3, #4]
   2d7f0:	str	r3, [fp, #-12]
   2d7f4:	b	2d884 <__assert_fail@plt+0x1b198>
   2d7f8:	ldr	r3, [fp, #-12]
   2d7fc:	ldr	r3, [r3]
   2d800:	str	r3, [fp, #-16]
   2d804:	ldr	r1, [fp, #-16]
   2d808:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d80c:	bl	2c798 <__assert_fail@plt+0x1a0ac>
   2d810:	str	r0, [fp, #-20]	; 0xffffffec
   2d814:	ldr	r3, [fp, #-12]
   2d818:	ldr	r3, [r3, #4]
   2d81c:	str	r3, [fp, #-24]	; 0xffffffe8
   2d820:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d824:	ldr	r3, [r3]
   2d828:	cmp	r3, #0
   2d82c:	beq	2d850 <__assert_fail@plt+0x1b164>
   2d830:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d834:	ldr	r2, [r3, #4]
   2d838:	ldr	r3, [fp, #-12]
   2d83c:	str	r2, [r3, #4]
   2d840:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d844:	ldr	r2, [fp, #-12]
   2d848:	str	r2, [r3, #4]
   2d84c:	b	2d87c <__assert_fail@plt+0x1b190>
   2d850:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d854:	ldr	r2, [fp, #-16]
   2d858:	str	r2, [r3]
   2d85c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d860:	ldr	r3, [r3, #12]
   2d864:	add	r2, r3, #1
   2d868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d86c:	str	r2, [r3, #12]
   2d870:	ldr	r1, [fp, #-12]
   2d874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d878:	bl	2d590 <__assert_fail@plt+0x1aea4>
   2d87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d880:	str	r3, [fp, #-12]
   2d884:	ldr	r3, [fp, #-12]
   2d888:	cmp	r3, #0
   2d88c:	bne	2d7f8 <__assert_fail@plt+0x1b10c>
   2d890:	ldr	r3, [fp, #-8]
   2d894:	ldr	r3, [r3]
   2d898:	str	r3, [fp, #-16]
   2d89c:	ldr	r3, [fp, #-8]
   2d8a0:	mov	r2, #0
   2d8a4:	str	r2, [r3, #4]
   2d8a8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   2d8ac:	cmp	r3, #0
   2d8b0:	bne	2d964 <__assert_fail@plt+0x1b278>
   2d8b4:	ldr	r1, [fp, #-16]
   2d8b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d8bc:	bl	2c798 <__assert_fail@plt+0x1a0ac>
   2d8c0:	str	r0, [fp, #-20]	; 0xffffffec
   2d8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d8c8:	ldr	r3, [r3]
   2d8cc:	cmp	r3, #0
   2d8d0:	beq	2d920 <__assert_fail@plt+0x1b234>
   2d8d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d8d8:	bl	2d524 <__assert_fail@plt+0x1ae38>
   2d8dc:	str	r0, [fp, #-28]	; 0xffffffe4
   2d8e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d8e4:	cmp	r3, #0
   2d8e8:	bne	2d8f4 <__assert_fail@plt+0x1b208>
   2d8ec:	mov	r3, #0
   2d8f0:	b	2d98c <__assert_fail@plt+0x1b2a0>
   2d8f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d8f8:	ldr	r2, [fp, #-16]
   2d8fc:	str	r2, [r3]
   2d900:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d904:	ldr	r2, [r3, #4]
   2d908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d90c:	str	r2, [r3, #4]
   2d910:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d914:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d918:	str	r2, [r3, #4]
   2d91c:	b	2d940 <__assert_fail@plt+0x1b254>
   2d920:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d924:	ldr	r2, [fp, #-16]
   2d928:	str	r2, [r3]
   2d92c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d930:	ldr	r3, [r3, #12]
   2d934:	add	r2, r3, #1
   2d938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d93c:	str	r2, [r3, #12]
   2d940:	ldr	r3, [fp, #-8]
   2d944:	mov	r2, #0
   2d948:	str	r2, [r3]
   2d94c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d950:	ldr	r3, [r3, #12]
   2d954:	sub	r2, r3, #1
   2d958:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d95c:	str	r2, [r3, #12]
   2d960:	b	2d968 <__assert_fail@plt+0x1b27c>
   2d964:	nop	{0}
   2d968:	ldr	r3, [fp, #-8]
   2d96c:	add	r3, r3, #8
   2d970:	str	r3, [fp, #-8]
   2d974:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d978:	ldr	r3, [r3, #4]
   2d97c:	ldr	r2, [fp, #-8]
   2d980:	cmp	r2, r3
   2d984:	bcc	2d7d8 <__assert_fail@plt+0x1b0ec>
   2d988:	mov	r3, #1
   2d98c:	mov	r0, r3
   2d990:	sub	sp, fp, #4
   2d994:	ldr	fp, [sp]
   2d998:	add	sp, sp, #4
   2d99c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d9a0:	str	fp, [sp, #-8]!
   2d9a4:	str	lr, [sp, #4]
   2d9a8:	add	fp, sp, #4
   2d9ac:	sub	sp, sp, #56	; 0x38
   2d9b0:	str	r0, [fp, #-56]	; 0xffffffc8
   2d9b4:	str	r1, [fp, #-60]	; 0xffffffc4
   2d9b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d9bc:	ldr	r3, [r3, #20]
   2d9c0:	mov	r1, r3
   2d9c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2d9c8:	bl	2cfd0 <__assert_fail@plt+0x1a8e4>
   2d9cc:	str	r0, [fp, #-8]
   2d9d0:	ldr	r3, [fp, #-8]
   2d9d4:	cmp	r3, #0
   2d9d8:	bne	2d9e4 <__assert_fail@plt+0x1b2f8>
   2d9dc:	mov	r3, #0
   2d9e0:	b	2dbc0 <__assert_fail@plt+0x1b4d4>
   2d9e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2d9e8:	ldr	r3, [r3, #8]
   2d9ec:	ldr	r2, [fp, #-8]
   2d9f0:	cmp	r2, r3
   2d9f4:	bne	2da00 <__assert_fail@plt+0x1b314>
   2d9f8:	mov	r3, #1
   2d9fc:	b	2dbc0 <__assert_fail@plt+0x1b4d4>
   2da00:	sub	r3, fp, #52	; 0x34
   2da04:	str	r3, [fp, #-12]
   2da08:	mov	r1, #8
   2da0c:	ldr	r0, [fp, #-8]
   2da10:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   2da14:	mov	r3, r0
   2da18:	mov	r2, r3
   2da1c:	ldr	r3, [fp, #-12]
   2da20:	str	r2, [r3]
   2da24:	ldr	r3, [fp, #-12]
   2da28:	ldr	r3, [r3]
   2da2c:	cmp	r3, #0
   2da30:	bne	2da3c <__assert_fail@plt+0x1b350>
   2da34:	mov	r3, #0
   2da38:	b	2dbc0 <__assert_fail@plt+0x1b4d4>
   2da3c:	ldr	r3, [fp, #-12]
   2da40:	ldr	r2, [fp, #-8]
   2da44:	str	r2, [r3, #8]
   2da48:	ldr	r3, [fp, #-12]
   2da4c:	ldr	r2, [r3]
   2da50:	ldr	r3, [fp, #-8]
   2da54:	lsl	r3, r3, #3
   2da58:	add	r2, r2, r3
   2da5c:	ldr	r3, [fp, #-12]
   2da60:	str	r2, [r3, #4]
   2da64:	ldr	r3, [fp, #-12]
   2da68:	mov	r2, #0
   2da6c:	str	r2, [r3, #12]
   2da70:	ldr	r3, [fp, #-12]
   2da74:	mov	r2, #0
   2da78:	str	r2, [r3, #16]
   2da7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2da80:	ldr	r2, [r3, #20]
   2da84:	ldr	r3, [fp, #-12]
   2da88:	str	r2, [r3, #20]
   2da8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2da90:	ldr	r2, [r3, #24]
   2da94:	ldr	r3, [fp, #-12]
   2da98:	str	r2, [r3, #24]
   2da9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2daa0:	ldr	r2, [r3, #28]
   2daa4:	ldr	r3, [fp, #-12]
   2daa8:	str	r2, [r3, #28]
   2daac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dab0:	ldr	r2, [r3, #32]
   2dab4:	ldr	r3, [fp, #-12]
   2dab8:	str	r2, [r3, #32]
   2dabc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2dac0:	ldr	r2, [r3, #36]	; 0x24
   2dac4:	ldr	r3, [fp, #-12]
   2dac8:	str	r2, [r3, #36]	; 0x24
   2dacc:	mov	r2, #0
   2dad0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2dad4:	ldr	r0, [fp, #-12]
   2dad8:	bl	2d7a8 <__assert_fail@plt+0x1b0bc>
   2dadc:	mov	r3, r0
   2dae0:	cmp	r3, #0
   2dae4:	beq	2db50 <__assert_fail@plt+0x1b464>
   2dae8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2daec:	ldr	r3, [r3]
   2daf0:	mov	r0, r3
   2daf4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2daf8:	ldr	r3, [fp, #-12]
   2dafc:	ldr	r2, [r3]
   2db00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db04:	str	r2, [r3]
   2db08:	ldr	r3, [fp, #-12]
   2db0c:	ldr	r2, [r3, #4]
   2db10:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db14:	str	r2, [r3, #4]
   2db18:	ldr	r3, [fp, #-12]
   2db1c:	ldr	r2, [r3, #8]
   2db20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db24:	str	r2, [r3, #8]
   2db28:	ldr	r3, [fp, #-12]
   2db2c:	ldr	r2, [r3, #12]
   2db30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db34:	str	r2, [r3, #12]
   2db38:	ldr	r3, [fp, #-12]
   2db3c:	ldr	r2, [r3, #36]	; 0x24
   2db40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db44:	str	r2, [r3, #36]	; 0x24
   2db48:	mov	r3, #1
   2db4c:	b	2dbc0 <__assert_fail@plt+0x1b4d4>
   2db50:	ldr	r3, [fp, #-12]
   2db54:	ldr	r2, [r3, #36]	; 0x24
   2db58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2db5c:	str	r2, [r3, #36]	; 0x24
   2db60:	mov	r2, #1
   2db64:	ldr	r1, [fp, #-12]
   2db68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2db6c:	bl	2d7a8 <__assert_fail@plt+0x1b0bc>
   2db70:	mov	r3, r0
   2db74:	eor	r3, r3, #1
   2db78:	uxtb	r3, r3
   2db7c:	cmp	r3, #0
   2db80:	bne	2dba8 <__assert_fail@plt+0x1b4bc>
   2db84:	mov	r2, #0
   2db88:	ldr	r1, [fp, #-12]
   2db8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2db90:	bl	2d7a8 <__assert_fail@plt+0x1b0bc>
   2db94:	mov	r3, r0
   2db98:	eor	r3, r3, #1
   2db9c:	uxtb	r3, r3
   2dba0:	cmp	r3, #0
   2dba4:	beq	2dbac <__assert_fail@plt+0x1b4c0>
   2dba8:	bl	12698 <abort@plt>
   2dbac:	ldr	r3, [fp, #-12]
   2dbb0:	ldr	r3, [r3]
   2dbb4:	mov	r0, r3
   2dbb8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2dbbc:	mov	r3, #0
   2dbc0:	mov	r0, r3
   2dbc4:	sub	sp, fp, #4
   2dbc8:	ldr	fp, [sp]
   2dbcc:	add	sp, sp, #4
   2dbd0:	pop	{pc}		; (ldr pc, [sp], #4)
   2dbd4:	str	fp, [sp, #-8]!
   2dbd8:	str	lr, [sp, #4]
   2dbdc:	add	fp, sp, #4
   2dbe0:	sub	sp, sp, #40	; 0x28
   2dbe4:	str	r0, [fp, #-32]	; 0xffffffe0
   2dbe8:	str	r1, [fp, #-36]	; 0xffffffdc
   2dbec:	str	r2, [fp, #-40]	; 0xffffffd8
   2dbf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2dbf4:	cmp	r3, #0
   2dbf8:	bne	2dc00 <__assert_fail@plt+0x1b514>
   2dbfc:	bl	12698 <abort@plt>
   2dc00:	sub	r2, fp, #24
   2dc04:	mov	r3, #0
   2dc08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2dc0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dc10:	bl	2d5dc <__assert_fail@plt+0x1aef0>
   2dc14:	str	r0, [fp, #-8]
   2dc18:	ldr	r3, [fp, #-8]
   2dc1c:	cmp	r3, #0
   2dc20:	beq	2dc44 <__assert_fail@plt+0x1b558>
   2dc24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dc28:	cmp	r3, #0
   2dc2c:	beq	2dc3c <__assert_fail@plt+0x1b550>
   2dc30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dc34:	ldr	r2, [fp, #-8]
   2dc38:	str	r2, [r3]
   2dc3c:	mov	r3, #0
   2dc40:	b	2de48 <__assert_fail@plt+0x1b75c>
   2dc44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dc48:	ldr	r3, [r3, #12]
   2dc4c:	vmov	s15, r3
   2dc50:	vcvt.f32.u32	s14, s15
   2dc54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dc58:	ldr	r3, [r3, #20]
   2dc5c:	vldr	s13, [r3, #8]
   2dc60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dc64:	ldr	r3, [r3, #8]
   2dc68:	vmov	s15, r3
   2dc6c:	vcvt.f32.u32	s15, s15
   2dc70:	vmul.f32	s15, s13, s15
   2dc74:	vcmpe.f32	s14, s15
   2dc78:	vmrs	APSR_nzcv, fpscr
   2dc7c:	ble	2dd9c <__assert_fail@plt+0x1b6b0>
   2dc80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dc84:	bl	2ce90 <__assert_fail@plt+0x1a7a4>
   2dc88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dc8c:	ldr	r3, [r3, #12]
   2dc90:	vmov	s15, r3
   2dc94:	vcvt.f32.u32	s14, s15
   2dc98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dc9c:	ldr	r3, [r3, #20]
   2dca0:	vldr	s13, [r3, #8]
   2dca4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dca8:	ldr	r3, [r3, #8]
   2dcac:	vmov	s15, r3
   2dcb0:	vcvt.f32.u32	s15, s15
   2dcb4:	vmul.f32	s15, s13, s15
   2dcb8:	vcmpe.f32	s14, s15
   2dcbc:	vmrs	APSR_nzcv, fpscr
   2dcc0:	ble	2dd9c <__assert_fail@plt+0x1b6b0>
   2dcc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dcc8:	ldr	r3, [r3, #20]
   2dccc:	str	r3, [fp, #-12]
   2dcd0:	ldr	r3, [fp, #-12]
   2dcd4:	ldrb	r3, [r3, #16]
   2dcd8:	cmp	r3, #0
   2dcdc:	beq	2dd00 <__assert_fail@plt+0x1b614>
   2dce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dce4:	ldr	r3, [r3, #8]
   2dce8:	vmov	s15, r3
   2dcec:	vcvt.f32.u32	s14, s15
   2dcf0:	ldr	r3, [fp, #-12]
   2dcf4:	vldr	s15, [r3, #12]
   2dcf8:	vmul.f32	s15, s14, s15
   2dcfc:	b	2dd28 <__assert_fail@plt+0x1b63c>
   2dd00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dd04:	ldr	r3, [r3, #8]
   2dd08:	vmov	s15, r3
   2dd0c:	vcvt.f32.u32	s14, s15
   2dd10:	ldr	r3, [fp, #-12]
   2dd14:	vldr	s15, [r3, #12]
   2dd18:	vmul.f32	s14, s14, s15
   2dd1c:	ldr	r3, [fp, #-12]
   2dd20:	vldr	s15, [r3, #8]
   2dd24:	vmul.f32	s15, s14, s15
   2dd28:	vstr	s15, [fp, #-16]
   2dd2c:	vldr	s15, [fp, #-16]
   2dd30:	vldr	s14, [pc, #292]	; 2de5c <__assert_fail@plt+0x1b770>
   2dd34:	vcmpe.f32	s15, s14
   2dd38:	vmrs	APSR_nzcv, fpscr
   2dd3c:	blt	2dd48 <__assert_fail@plt+0x1b65c>
   2dd40:	mvn	r3, #0
   2dd44:	b	2de48 <__assert_fail@plt+0x1b75c>
   2dd48:	vldr	s15, [fp, #-16]
   2dd4c:	vcvt.u32.f32	s15, s15
   2dd50:	vmov	r1, s15
   2dd54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dd58:	bl	2d9a0 <__assert_fail@plt+0x1b2b4>
   2dd5c:	mov	r3, r0
   2dd60:	eor	r3, r3, #1
   2dd64:	uxtb	r3, r3
   2dd68:	cmp	r3, #0
   2dd6c:	beq	2dd78 <__assert_fail@plt+0x1b68c>
   2dd70:	mvn	r3, #0
   2dd74:	b	2de48 <__assert_fail@plt+0x1b75c>
   2dd78:	sub	r2, fp, #24
   2dd7c:	mov	r3, #0
   2dd80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2dd84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dd88:	bl	2d5dc <__assert_fail@plt+0x1aef0>
   2dd8c:	mov	r3, r0
   2dd90:	cmp	r3, #0
   2dd94:	beq	2dd9c <__assert_fail@plt+0x1b6b0>
   2dd98:	bl	12698 <abort@plt>
   2dd9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dda0:	ldr	r3, [r3]
   2dda4:	cmp	r3, #0
   2dda8:	beq	2de10 <__assert_fail@plt+0x1b724>
   2ddac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ddb0:	bl	2d524 <__assert_fail@plt+0x1ae38>
   2ddb4:	str	r0, [fp, #-20]	; 0xffffffec
   2ddb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ddbc:	cmp	r3, #0
   2ddc0:	bne	2ddcc <__assert_fail@plt+0x1b6e0>
   2ddc4:	mvn	r3, #0
   2ddc8:	b	2de48 <__assert_fail@plt+0x1b75c>
   2ddcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ddd0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ddd4:	str	r2, [r3]
   2ddd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2dddc:	ldr	r2, [r3, #4]
   2dde0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dde4:	str	r2, [r3, #4]
   2dde8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ddec:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ddf0:	str	r2, [r3, #4]
   2ddf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ddf8:	ldr	r3, [r3, #16]
   2ddfc:	add	r2, r3, #1
   2de00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de04:	str	r2, [r3, #16]
   2de08:	mov	r3, #1
   2de0c:	b	2de48 <__assert_fail@plt+0x1b75c>
   2de10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2de14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2de18:	str	r2, [r3]
   2de1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de20:	ldr	r3, [r3, #16]
   2de24:	add	r2, r3, #1
   2de28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de2c:	str	r2, [r3, #16]
   2de30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de34:	ldr	r3, [r3, #12]
   2de38:	add	r2, r3, #1
   2de3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2de40:	str	r2, [r3, #12]
   2de44:	mov	r3, #1
   2de48:	mov	r0, r3
   2de4c:	sub	sp, fp, #4
   2de50:	ldr	fp, [sp]
   2de54:	add	sp, sp, #4
   2de58:	pop	{pc}		; (ldr pc, [sp], #4)
   2de5c:	svcmi	0x00800000
   2de60:	str	fp, [sp, #-8]!
   2de64:	str	lr, [sp, #4]
   2de68:	add	fp, sp, #4
   2de6c:	sub	sp, sp, #16
   2de70:	str	r0, [fp, #-16]
   2de74:	str	r1, [fp, #-20]	; 0xffffffec
   2de78:	sub	r3, fp, #12
   2de7c:	mov	r2, r3
   2de80:	ldr	r1, [fp, #-20]	; 0xffffffec
   2de84:	ldr	r0, [fp, #-16]
   2de88:	bl	2dbd4 <__assert_fail@plt+0x1b4e8>
   2de8c:	str	r0, [fp, #-8]
   2de90:	ldr	r3, [fp, #-8]
   2de94:	cmn	r3, #1
   2de98:	beq	2deb8 <__assert_fail@plt+0x1b7cc>
   2de9c:	ldr	r3, [fp, #-8]
   2dea0:	cmp	r3, #0
   2dea4:	bne	2deb0 <__assert_fail@plt+0x1b7c4>
   2dea8:	ldr	r3, [fp, #-12]
   2deac:	b	2debc <__assert_fail@plt+0x1b7d0>
   2deb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2deb4:	b	2debc <__assert_fail@plt+0x1b7d0>
   2deb8:	mov	r3, #0
   2debc:	mov	r0, r3
   2dec0:	sub	sp, fp, #4
   2dec4:	ldr	fp, [sp]
   2dec8:	add	sp, sp, #4
   2decc:	pop	{pc}		; (ldr pc, [sp], #4)
   2ded0:	str	fp, [sp, #-8]!
   2ded4:	str	lr, [sp, #4]
   2ded8:	add	fp, sp, #4
   2dedc:	sub	sp, sp, #32
   2dee0:	str	r0, [fp, #-32]	; 0xffffffe0
   2dee4:	str	r1, [fp, #-36]	; 0xffffffdc
   2dee8:	sub	r2, fp, #28
   2deec:	mov	r3, #1
   2def0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2def4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2def8:	bl	2d5dc <__assert_fail@plt+0x1aef0>
   2defc:	str	r0, [fp, #-12]
   2df00:	ldr	r3, [fp, #-12]
   2df04:	cmp	r3, #0
   2df08:	bne	2df14 <__assert_fail@plt+0x1b828>
   2df0c:	mov	r3, #0
   2df10:	b	2e0a4 <__assert_fail@plt+0x1b9b8>
   2df14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df18:	ldr	r3, [r3, #16]
   2df1c:	sub	r2, r3, #1
   2df20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df24:	str	r2, [r3, #16]
   2df28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2df2c:	ldr	r3, [r3]
   2df30:	cmp	r3, #0
   2df34:	bne	2e0a0 <__assert_fail@plt+0x1b9b4>
   2df38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df3c:	ldr	r3, [r3, #12]
   2df40:	sub	r2, r3, #1
   2df44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df48:	str	r2, [r3, #12]
   2df4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df50:	ldr	r3, [r3, #12]
   2df54:	vmov	s15, r3
   2df58:	vcvt.f32.u32	s14, s15
   2df5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df60:	ldr	r3, [r3, #20]
   2df64:	vldr	s13, [r3]
   2df68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df6c:	ldr	r3, [r3, #8]
   2df70:	vmov	s15, r3
   2df74:	vcvt.f32.u32	s15, s15
   2df78:	vmul.f32	s15, s13, s15
   2df7c:	vcmpe.f32	s14, s15
   2df80:	vmrs	APSR_nzcv, fpscr
   2df84:	bpl	2e0a0 <__assert_fail@plt+0x1b9b4>
   2df88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2df8c:	bl	2ce90 <__assert_fail@plt+0x1a7a4>
   2df90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df94:	ldr	r3, [r3, #12]
   2df98:	vmov	s15, r3
   2df9c:	vcvt.f32.u32	s14, s15
   2dfa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dfa4:	ldr	r3, [r3, #20]
   2dfa8:	vldr	s13, [r3]
   2dfac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dfb0:	ldr	r3, [r3, #8]
   2dfb4:	vmov	s15, r3
   2dfb8:	vcvt.f32.u32	s15, s15
   2dfbc:	vmul.f32	s15, s13, s15
   2dfc0:	vcmpe.f32	s14, s15
   2dfc4:	vmrs	APSR_nzcv, fpscr
   2dfc8:	bpl	2e0a0 <__assert_fail@plt+0x1b9b4>
   2dfcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dfd0:	ldr	r3, [r3, #20]
   2dfd4:	str	r3, [fp, #-16]
   2dfd8:	ldr	r3, [fp, #-16]
   2dfdc:	ldrb	r3, [r3, #16]
   2dfe0:	cmp	r3, #0
   2dfe4:	beq	2e00c <__assert_fail@plt+0x1b920>
   2dfe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dfec:	ldr	r3, [r3, #8]
   2dff0:	vmov	s15, r3
   2dff4:	vcvt.f32.u32	s14, s15
   2dff8:	ldr	r3, [fp, #-16]
   2dffc:	vldr	s15, [r3, #4]
   2e000:	vmul.f32	s15, s14, s15
   2e004:	vcvt.u32.f32	s15, s15
   2e008:	b	2e038 <__assert_fail@plt+0x1b94c>
   2e00c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e010:	ldr	r3, [r3, #8]
   2e014:	vmov	s15, r3
   2e018:	vcvt.f32.u32	s14, s15
   2e01c:	ldr	r3, [fp, #-16]
   2e020:	vldr	s15, [r3, #4]
   2e024:	vmul.f32	s14, s14, s15
   2e028:	ldr	r3, [fp, #-16]
   2e02c:	vldr	s15, [r3, #8]
   2e030:	vmul.f32	s15, s14, s15
   2e034:	vcvt.u32.f32	s15, s15
   2e038:	vstr	s15, [fp, #-20]	; 0xffffffec
   2e03c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e044:	bl	2d9a0 <__assert_fail@plt+0x1b2b4>
   2e048:	mov	r3, r0
   2e04c:	eor	r3, r3, #1
   2e050:	uxtb	r3, r3
   2e054:	cmp	r3, #0
   2e058:	beq	2e0a0 <__assert_fail@plt+0x1b9b4>
   2e05c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e060:	ldr	r3, [r3, #36]	; 0x24
   2e064:	str	r3, [fp, #-8]
   2e068:	b	2e088 <__assert_fail@plt+0x1b99c>
   2e06c:	ldr	r3, [fp, #-8]
   2e070:	ldr	r3, [r3, #4]
   2e074:	str	r3, [fp, #-24]	; 0xffffffe8
   2e078:	ldr	r0, [fp, #-8]
   2e07c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   2e080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e084:	str	r3, [fp, #-8]
   2e088:	ldr	r3, [fp, #-8]
   2e08c:	cmp	r3, #0
   2e090:	bne	2e06c <__assert_fail@plt+0x1b980>
   2e094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e098:	mov	r2, #0
   2e09c:	str	r2, [r3, #36]	; 0x24
   2e0a0:	ldr	r3, [fp, #-12]
   2e0a4:	mov	r0, r3
   2e0a8:	sub	sp, fp, #4
   2e0ac:	ldr	fp, [sp]
   2e0b0:	add	sp, sp, #4
   2e0b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e0b8:	str	fp, [sp, #-8]!
   2e0bc:	str	lr, [sp, #4]
   2e0c0:	add	fp, sp, #4
   2e0c4:	sub	sp, sp, #8
   2e0c8:	str	r0, [fp, #-8]
   2e0cc:	str	r1, [fp, #-12]
   2e0d0:	ldr	r1, [fp, #-12]
   2e0d4:	ldr	r0, [fp, #-8]
   2e0d8:	bl	2ded0 <__assert_fail@plt+0x1b7e4>
   2e0dc:	mov	r3, r0
   2e0e0:	mov	r0, r3
   2e0e4:	sub	sp, fp, #4
   2e0e8:	ldr	fp, [sp]
   2e0ec:	add	sp, sp, #4
   2e0f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e0f4:	andeq	r0, r0, r0
   2e0f8:	strd	r4, [sp, #-16]!
   2e0fc:	str	fp, [sp, #8]
   2e100:	str	lr, [sp, #12]
   2e104:	add	fp, sp, #12
   2e108:	sub	sp, sp, #24
   2e10c:	str	r0, [fp, #-24]	; 0xffffffe8
   2e110:	vstr	d0, [fp, #-36]	; 0xffffffdc
   2e114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e118:	cmp	r3, #1
   2e11c:	beq	2e1a8 <__assert_fail@plt+0x1babc>
   2e120:	vldr	d7, [fp, #-36]	; 0xffffffdc
   2e124:	vldr	d6, [pc, #156]	; 2e1c8 <__assert_fail@plt+0x1badc>
   2e128:	vcmpe.f64	d7, d6
   2e12c:	vmrs	APSR_nzcv, fpscr
   2e130:	bpl	2e1a8 <__assert_fail@plt+0x1babc>
   2e134:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   2e138:	bl	64ab0 <__assert_fail@plt+0x523c4>
   2e13c:	mov	r2, r0
   2e140:	mov	r3, r1
   2e144:	strd	r2, [fp, #-20]	; 0xffffffec
   2e148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e14c:	cmp	r3, #0
   2e150:	bne	2e178 <__assert_fail@plt+0x1ba8c>
   2e154:	ldrd	r0, [fp, #-20]	; 0xffffffec
   2e158:	bl	64918 <__assert_fail@plt+0x5222c>
   2e15c:	vmov	d6, r0, r1
   2e160:	vldr	d7, [fp, #-36]	; 0xffffffdc
   2e164:	vcmp.f64	d7, d6
   2e168:	vmrs	APSR_nzcv, fpscr
   2e16c:	beq	2e178 <__assert_fail@plt+0x1ba8c>
   2e170:	mov	r3, #1
   2e174:	b	2e17c <__assert_fail@plt+0x1ba90>
   2e178:	mov	r3, #0
   2e17c:	mov	r0, r3
   2e180:	asr	r1, r0, #31
   2e184:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2e188:	adds	r4, r0, r2
   2e18c:	adc	r5, r1, r3
   2e190:	mov	r0, r4
   2e194:	mov	r1, r5
   2e198:	bl	64918 <__assert_fail@plt+0x5222c>
   2e19c:	mov	r2, r0
   2e1a0:	mov	r3, r1
   2e1a4:	strd	r2, [fp, #-36]	; 0xffffffdc
   2e1a8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   2e1ac:	vmov	d7, r2, r3
   2e1b0:	vmov.f64	d0, d7
   2e1b4:	sub	sp, fp, #12
   2e1b8:	ldrd	r4, [sp]
   2e1bc:	ldr	fp, [sp, #8]
   2e1c0:	add	sp, sp, #12
   2e1c4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e1c8:	andeq	r0, r0, r0
   2e1cc:	mvnsmi	r0, #0
   2e1d0:	str	r4, [sp, #-12]!
   2e1d4:	str	fp, [sp, #4]
   2e1d8:	str	lr, [sp, #8]
   2e1dc:	add	fp, sp, #8
   2e1e0:	sub	sp, sp, #76	; 0x4c
   2e1e4:	str	r0, [fp, #-72]	; 0xffffffb8
   2e1e8:	str	r1, [fp, #-76]	; 0xffffffb4
   2e1ec:	str	r2, [fp, #-80]	; 0xffffffb0
   2e1f0:	str	r3, [fp, #-84]	; 0xffffffac
   2e1f4:	mvn	r3, #0
   2e1f8:	str	r3, [fp, #-16]
   2e1fc:	ldr	r0, [fp, #-84]	; 0xffffffac
   2e200:	bl	123bc <strlen@plt>
   2e204:	str	r0, [fp, #-24]	; 0xffffffe8
   2e208:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2e20c:	str	r3, [fp, #-20]	; 0xffffffec
   2e210:	sub	r3, fp, #68	; 0x44
   2e214:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2e218:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2e21c:	mov	r0, r3
   2e220:	bl	120f8 <memcpy@plt>
   2e224:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2e228:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2e22c:	add	r4, r2, r3
   2e230:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e234:	ldrb	r3, [r3]
   2e238:	strb	r3, [fp, #-25]	; 0xffffffe7
   2e23c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2e240:	cmp	r3, #0
   2e244:	beq	2e270 <__assert_fail@plt+0x1bb84>
   2e248:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2e24c:	cmp	r3, #255	; 0xff
   2e250:	beq	2e25c <__assert_fail@plt+0x1bb70>
   2e254:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2e258:	b	2e260 <__assert_fail@plt+0x1bb74>
   2e25c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e260:	str	r3, [fp, #-16]
   2e264:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2e268:	add	r3, r3, #1
   2e26c:	str	r3, [fp, #-80]	; 0xffffffb0
   2e270:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e274:	ldr	r3, [fp, #-16]
   2e278:	cmp	r2, r3
   2e27c:	bcs	2e288 <__assert_fail@plt+0x1bb9c>
   2e280:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e284:	str	r3, [fp, #-16]
   2e288:	ldr	r3, [fp, #-16]
   2e28c:	rsb	r3, r3, #0
   2e290:	add	r4, r4, r3
   2e294:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e298:	ldr	r3, [fp, #-16]
   2e29c:	sub	r3, r2, r3
   2e2a0:	str	r3, [fp, #-20]	; 0xffffffec
   2e2a4:	sub	r2, fp, #68	; 0x44
   2e2a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e2ac:	add	r3, r2, r3
   2e2b0:	ldr	r2, [fp, #-16]
   2e2b4:	mov	r1, r3
   2e2b8:	mov	r0, r4
   2e2bc:	bl	120f8 <memcpy@plt>
   2e2c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e2c4:	cmp	r3, #0
   2e2c8:	bne	2e2d4 <__assert_fail@plt+0x1bbe8>
   2e2cc:	mov	r3, r4
   2e2d0:	b	2e2f4 <__assert_fail@plt+0x1bc08>
   2e2d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e2d8:	rsb	r3, r3, #0
   2e2dc:	add	r4, r4, r3
   2e2e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e2e4:	ldr	r1, [fp, #-84]	; 0xffffffac
   2e2e8:	mov	r0, r4
   2e2ec:	bl	120f8 <memcpy@plt>
   2e2f0:	b	2e230 <__assert_fail@plt+0x1bb44>
   2e2f4:	mov	r0, r3
   2e2f8:	sub	sp, fp, #8
   2e2fc:	ldr	r4, [sp]
   2e300:	ldr	fp, [sp, #4]
   2e304:	add	sp, sp, #8
   2e308:	pop	{pc}		; (ldr pc, [sp], #4)
   2e30c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   2e310:	strd	r6, [sp, #8]
   2e314:	strd	r8, [sp, #16]
   2e318:	str	fp, [sp, #24]
   2e31c:	str	lr, [sp, #28]
   2e320:	vpush	{d8}
   2e324:	add	fp, sp, #36	; 0x24
   2e328:	sub	sp, sp, #208	; 0xd0
   2e32c:	strd	r0, [fp, #-204]	; 0xffffff34
   2e330:	str	r2, [fp, #-208]	; 0xffffff30
   2e334:	str	r3, [fp, #-212]	; 0xffffff2c
   2e338:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2e33c:	and	r3, r3, #3
   2e340:	str	r3, [fp, #-112]	; 0xffffff90
   2e344:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2e348:	and	r3, r3, #32
   2e34c:	cmp	r3, #0
   2e350:	beq	2e35c <__assert_fail@plt+0x1bc70>
   2e354:	mov	r3, #1024	; 0x400
   2e358:	b	2e360 <__assert_fail@plt+0x1bc74>
   2e35c:	mov	r3, #1000	; 0x3e8
   2e360:	str	r3, [fp, #-116]	; 0xffffff8c
   2e364:	mvn	r3, #0
   2e368:	str	r3, [fp, #-52]	; 0xffffffcc
   2e36c:	mov	r3, #8
   2e370:	str	r3, [fp, #-120]	; 0xffffff88
   2e374:	movw	r3, #38152	; 0x9508
   2e378:	movt	r3, #6
   2e37c:	str	r3, [fp, #-72]	; 0xffffffb8
   2e380:	mov	r3, #1
   2e384:	str	r3, [fp, #-76]	; 0xffffffb4
   2e388:	movw	r3, #38156	; 0x950c
   2e38c:	movt	r3, #6
   2e390:	str	r3, [fp, #-124]	; 0xffffff84
   2e394:	movw	r3, #38156	; 0x950c
   2e398:	movt	r3, #6
   2e39c:	str	r3, [fp, #-80]	; 0xffffffb0
   2e3a0:	bl	12584 <localeconv@plt>
   2e3a4:	str	r0, [fp, #-128]	; 0xffffff80
   2e3a8:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e3ac:	ldr	r3, [r3]
   2e3b0:	mov	r0, r3
   2e3b4:	bl	123bc <strlen@plt>
   2e3b8:	str	r0, [fp, #-132]	; 0xffffff7c
   2e3bc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2e3c0:	cmp	r3, #0
   2e3c4:	beq	2e3e8 <__assert_fail@plt+0x1bcfc>
   2e3c8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2e3cc:	cmp	r3, #16
   2e3d0:	bhi	2e3e8 <__assert_fail@plt+0x1bcfc>
   2e3d4:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e3d8:	ldr	r3, [r3]
   2e3dc:	str	r3, [fp, #-72]	; 0xffffffb8
   2e3e0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2e3e4:	str	r3, [fp, #-76]	; 0xffffffb4
   2e3e8:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e3ec:	ldr	r3, [r3, #8]
   2e3f0:	str	r3, [fp, #-124]	; 0xffffff84
   2e3f4:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e3f8:	ldr	r3, [r3, #4]
   2e3fc:	mov	r0, r3
   2e400:	bl	123bc <strlen@plt>
   2e404:	mov	r3, r0
   2e408:	cmp	r3, #16
   2e40c:	bhi	2e41c <__assert_fail@plt+0x1bd30>
   2e410:	ldr	r3, [fp, #-128]	; 0xffffff80
   2e414:	ldr	r3, [r3, #4]
   2e418:	str	r3, [fp, #-80]	; 0xffffffb0
   2e41c:	ldr	r3, [fp, #-208]	; 0xffffff30
   2e420:	add	r3, r3, #644	; 0x284
   2e424:	add	r3, r3, #3
   2e428:	str	r3, [fp, #-60]	; 0xffffffc4
   2e42c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e430:	str	r3, [fp, #-56]	; 0xffffffc8
   2e434:	ldrd	r0, [fp, #12]
   2e438:	ldrd	r2, [fp, #4]
   2e43c:	cmp	r1, r3
   2e440:	cmpeq	r0, r2
   2e444:	bhi	2e4ec <__assert_fail@plt+0x1be00>
   2e448:	ldrd	r0, [fp, #4]
   2e44c:	ldrd	r2, [fp, #12]
   2e450:	bl	64a60 <__assert_fail@plt+0x52374>
   2e454:	orrs	r3, r2, r3
   2e458:	bne	2e630 <__assert_fail@plt+0x1bf44>
   2e45c:	ldrd	r2, [fp, #12]
   2e460:	ldrd	r0, [fp, #4]
   2e464:	bl	64a60 <__assert_fail@plt+0x52374>
   2e468:	mov	r2, r0
   2e46c:	mov	r3, r1
   2e470:	strd	r2, [fp, #-140]	; 0xffffff74
   2e474:	ldr	r3, [fp, #-200]	; 0xffffff38
   2e478:	ldr	r2, [fp, #-140]	; 0xffffff74
   2e47c:	mul	r2, r2, r3
   2e480:	ldr	r3, [fp, #-136]	; 0xffffff78
   2e484:	ldr	r1, [fp, #-204]	; 0xffffff34
   2e488:	mul	r3, r1, r3
   2e48c:	add	r1, r2, r3
   2e490:	ldr	r2, [fp, #-204]	; 0xffffff34
   2e494:	ldr	r3, [fp, #-140]	; 0xffffff74
   2e498:	umull	r2, r3, r2, r3
   2e49c:	add	r1, r1, r3
   2e4a0:	mov	r3, r1
   2e4a4:	strd	r2, [fp, #-44]	; 0xffffffd4
   2e4a8:	strd	r2, [fp, #-44]	; 0xffffffd4
   2e4ac:	ldrd	r2, [fp, #-140]	; 0xffffff74
   2e4b0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2e4b4:	bl	64a60 <__assert_fail@plt+0x52374>
   2e4b8:	mov	r2, r0
   2e4bc:	mov	r3, r1
   2e4c0:	mov	r0, r2
   2e4c4:	mov	r1, r3
   2e4c8:	ldrd	r2, [fp, #-204]	; 0xffffff34
   2e4cc:	cmp	r3, r1
   2e4d0:	cmpeq	r2, r0
   2e4d4:	bne	2e630 <__assert_fail@plt+0x1bf44>
   2e4d8:	mov	r3, #0
   2e4dc:	str	r3, [fp, #-48]	; 0xffffffd0
   2e4e0:	mov	r3, #0
   2e4e4:	str	r3, [fp, #-68]	; 0xffffffbc
   2e4e8:	b	2e858 <__assert_fail@plt+0x1c16c>
   2e4ec:	ldrd	r2, [fp, #4]
   2e4f0:	orrs	r3, r2, r3
   2e4f4:	beq	2e630 <__assert_fail@plt+0x1bf44>
   2e4f8:	ldrd	r0, [fp, #12]
   2e4fc:	ldrd	r2, [fp, #4]
   2e500:	bl	64a60 <__assert_fail@plt+0x52374>
   2e504:	orrs	r3, r2, r3
   2e508:	bne	2e630 <__assert_fail@plt+0x1bf44>
   2e50c:	ldrd	r2, [fp, #4]
   2e510:	ldrd	r0, [fp, #12]
   2e514:	bl	64a60 <__assert_fail@plt+0x52374>
   2e518:	mov	r2, r0
   2e51c:	mov	r3, r1
   2e520:	strd	r2, [fp, #-148]	; 0xffffff6c
   2e524:	ldrd	r0, [fp, #-204]	; 0xffffff34
   2e528:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2e52c:	bl	64a60 <__assert_fail@plt+0x52374>
   2e530:	mov	r4, r2
   2e534:	mov	r5, r3
   2e538:	mov	r2, r4
   2e53c:	mov	r3, r5
   2e540:	mov	r0, #0
   2e544:	mov	r1, #0
   2e548:	lsl	r1, r3, #2
   2e54c:	orr	r1, r1, r2, lsr #30
   2e550:	lsl	r0, r2, #2
   2e554:	mov	r2, r0
   2e558:	mov	r3, r1
   2e55c:	adds	r2, r2, r4
   2e560:	adc	r3, r3, r5
   2e564:	adds	r1, r2, r2
   2e568:	str	r1, [fp, #-220]	; 0xffffff24
   2e56c:	adc	r3, r3, r3
   2e570:	str	r3, [fp, #-216]	; 0xffffff28
   2e574:	ldrd	r2, [fp, #-220]	; 0xffffff24
   2e578:	strd	r2, [fp, #-156]	; 0xffffff64
   2e57c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   2e580:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2e584:	bl	64a60 <__assert_fail@plt+0x52374>
   2e588:	adds	r1, r2, r2
   2e58c:	str	r1, [fp, #-228]	; 0xffffff1c
   2e590:	adc	r3, r3, r3
   2e594:	str	r3, [fp, #-224]	; 0xffffff20
   2e598:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   2e59c:	strd	r2, [fp, #-164]	; 0xffffff5c
   2e5a0:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2e5a4:	ldrd	r0, [fp, #-204]	; 0xffffff34
   2e5a8:	bl	64a60 <__assert_fail@plt+0x52374>
   2e5ac:	mov	r2, r0
   2e5b0:	mov	r3, r1
   2e5b4:	strd	r2, [fp, #-44]	; 0xffffffd4
   2e5b8:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2e5bc:	ldrd	r0, [fp, #-156]	; 0xffffff64
   2e5c0:	bl	64a60 <__assert_fail@plt+0x52374>
   2e5c4:	mov	r2, r0
   2e5c8:	mov	r3, r1
   2e5cc:	mov	r3, r2
   2e5d0:	str	r3, [fp, #-48]	; 0xffffffd0
   2e5d4:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   2e5d8:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   2e5dc:	cmp	r1, r3
   2e5e0:	cmpeq	r0, r2
   2e5e4:	bcs	2e608 <__assert_fail@plt+0x1bf1c>
   2e5e8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2e5ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   2e5f0:	orr	r3, r2, r3
   2e5f4:	cmp	r3, #0
   2e5f8:	movne	r3, #1
   2e5fc:	moveq	r3, #0
   2e600:	uxtb	r3, r3
   2e604:	b	2e628 <__assert_fail@plt+0x1bf3c>
   2e608:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   2e60c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   2e610:	cmp	r1, r3
   2e614:	cmpeq	r0, r2
   2e618:	bcs	2e624 <__assert_fail@plt+0x1bf38>
   2e61c:	mov	r3, #3
   2e620:	b	2e628 <__assert_fail@plt+0x1bf3c>
   2e624:	mov	r3, #2
   2e628:	str	r3, [fp, #-68]	; 0xffffffbc
   2e62c:	b	2e858 <__assert_fail@plt+0x1c16c>
   2e630:	ldrd	r0, [fp, #12]
   2e634:	bl	64918 <__assert_fail@plt+0x5222c>
   2e638:	mov	r2, r0
   2e63c:	mov	r3, r1
   2e640:	strd	r2, [fp, #-172]	; 0xffffff54
   2e644:	ldrd	r0, [fp, #-204]	; 0xffffff34
   2e648:	bl	64918 <__assert_fail@plt+0x5222c>
   2e64c:	vmov	d8, r0, r1
   2e650:	ldrd	r0, [fp, #4]
   2e654:	bl	64918 <__assert_fail@plt+0x5222c>
   2e658:	vmov	d5, r0, r1
   2e65c:	vldr	d6, [fp, #-172]	; 0xffffff54
   2e660:	vdiv.f64	d7, d5, d6
   2e664:	vmul.f64	d7, d8, d7
   2e668:	vstr	d7, [fp, #-180]	; 0xffffff4c
   2e66c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2e670:	and	r3, r3, #16
   2e674:	cmp	r3, #0
   2e678:	bne	2e6b4 <__assert_fail@plt+0x1bfc8>
   2e67c:	vldr	d0, [fp, #-180]	; 0xffffff4c
   2e680:	ldr	r0, [fp, #-112]	; 0xffffff90
   2e684:	bl	2e0f8 <__assert_fail@plt+0x1ba0c>
   2e688:	vmov	r2, r3, d0
   2e68c:	movw	r1, #38160	; 0x9510
   2e690:	movt	r1, #6
   2e694:	ldr	r0, [fp, #-208]	; 0xffffff30
   2e698:	bl	12590 <sprintf@plt>
   2e69c:	ldr	r0, [fp, #-208]	; 0xffffff30
   2e6a0:	bl	123bc <strlen@plt>
   2e6a4:	str	r0, [fp, #-84]	; 0xffffffac
   2e6a8:	mov	r3, #0
   2e6ac:	str	r3, [fp, #-88]	; 0xffffffa8
   2e6b0:	b	2e818 <__assert_fail@plt+0x1c12c>
   2e6b4:	mov	r2, #0
   2e6b8:	mov	r3, #0
   2e6bc:	movt	r3, #16368	; 0x3ff0
   2e6c0:	strd	r2, [fp, #-100]	; 0xffffff9c
   2e6c4:	mov	r3, #0
   2e6c8:	str	r3, [fp, #-52]	; 0xffffffcc
   2e6cc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e6d0:	vmov	s15, r3
   2e6d4:	vcvt.f64.u32	d7, s15
   2e6d8:	vldr	d6, [fp, #-100]	; 0xffffff9c
   2e6dc:	vmul.f64	d7, d6, d7
   2e6e0:	vstr	d7, [fp, #-100]	; 0xffffff9c
   2e6e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e6e8:	add	r3, r3, #1
   2e6ec:	str	r3, [fp, #-52]	; 0xffffffcc
   2e6f0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e6f4:	vmov	s15, r3
   2e6f8:	vcvt.f64.u32	d6, s15
   2e6fc:	vldr	d7, [fp, #-100]	; 0xffffff9c
   2e700:	vmul.f64	d7, d6, d7
   2e704:	vldr	d6, [fp, #-180]	; 0xffffff4c
   2e708:	vcmpe.f64	d6, d7
   2e70c:	vmrs	APSR_nzcv, fpscr
   2e710:	blt	2e724 <__assert_fail@plt+0x1c038>
   2e714:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e718:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e71c:	cmp	r2, r3
   2e720:	blt	2e6cc <__assert_fail@plt+0x1bfe0>
   2e724:	vldr	d5, [fp, #-180]	; 0xffffff4c
   2e728:	vldr	d6, [fp, #-100]	; 0xffffff9c
   2e72c:	vdiv.f64	d7, d5, d6
   2e730:	vstr	d7, [fp, #-180]	; 0xffffff4c
   2e734:	vldr	d0, [fp, #-180]	; 0xffffff4c
   2e738:	ldr	r0, [fp, #-112]	; 0xffffff90
   2e73c:	bl	2e0f8 <__assert_fail@plt+0x1ba0c>
   2e740:	vmov	r2, r3, d0
   2e744:	movw	r1, #38168	; 0x9518
   2e748:	movt	r1, #6
   2e74c:	ldr	r0, [fp, #-208]	; 0xffffff30
   2e750:	bl	12590 <sprintf@plt>
   2e754:	ldr	r0, [fp, #-208]	; 0xffffff30
   2e758:	bl	123bc <strlen@plt>
   2e75c:	str	r0, [fp, #-84]	; 0xffffffac
   2e760:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2e764:	add	r3, r3, #1
   2e768:	str	r3, [fp, #-88]	; 0xffffffa8
   2e76c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2e770:	and	r3, r3, #32
   2e774:	cmp	r3, #0
   2e778:	moveq	r3, #1
   2e77c:	movne	r3, #0
   2e780:	uxtb	r3, r3
   2e784:	mov	r2, r3
   2e788:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2e78c:	add	r3, r2, r3
   2e790:	add	r3, r3, #1
   2e794:	ldr	r2, [fp, #-84]	; 0xffffffac
   2e798:	cmp	r2, r3
   2e79c:	bhi	2e7cc <__assert_fail@plt+0x1c0e0>
   2e7a0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2e7a4:	and	r3, r3, #8
   2e7a8:	cmp	r3, #0
   2e7ac:	beq	2e818 <__assert_fail@plt+0x1c12c>
   2e7b0:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e7b4:	sub	r3, r3, #1
   2e7b8:	ldr	r2, [fp, #-208]	; 0xffffff30
   2e7bc:	add	r3, r2, r3
   2e7c0:	ldrb	r3, [r3]
   2e7c4:	cmp	r3, #48	; 0x30
   2e7c8:	bne	2e818 <__assert_fail@plt+0x1c12c>
   2e7cc:	vldr	d7, [fp, #-180]	; 0xffffff4c
   2e7d0:	vldr	d6, [pc, #928]	; 2eb78 <__assert_fail@plt+0x1c48c>
   2e7d4:	vmul.f64	d7, d7, d6
   2e7d8:	vmov.f64	d0, d7
   2e7dc:	ldr	r0, [fp, #-112]	; 0xffffff90
   2e7e0:	bl	2e0f8 <__assert_fail@plt+0x1ba0c>
   2e7e4:	vmov.f64	d6, d0
   2e7e8:	vldr	d7, [pc, #904]	; 2eb78 <__assert_fail@plt+0x1c48c>
   2e7ec:	vdiv.f64	d5, d6, d7
   2e7f0:	vmov	r2, r3, d5
   2e7f4:	movw	r1, #38160	; 0x9510
   2e7f8:	movt	r1, #6
   2e7fc:	ldr	r0, [fp, #-208]	; 0xffffff30
   2e800:	bl	12590 <sprintf@plt>
   2e804:	ldr	r0, [fp, #-208]	; 0xffffff30
   2e808:	bl	123bc <strlen@plt>
   2e80c:	str	r0, [fp, #-84]	; 0xffffffac
   2e810:	mov	r3, #0
   2e814:	str	r3, [fp, #-88]	; 0xffffffa8
   2e818:	ldr	r3, [fp, #-84]	; 0xffffffac
   2e81c:	rsb	r3, r3, #0
   2e820:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2e824:	add	r3, r2, r3
   2e828:	str	r3, [fp, #-56]	; 0xffffffc8
   2e82c:	ldr	r2, [fp, #-84]	; 0xffffffac
   2e830:	ldr	r1, [fp, #-208]	; 0xffffff30
   2e834:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2e838:	bl	1208c <memmove@plt>
   2e83c:	ldr	r2, [fp, #-84]	; 0xffffffac
   2e840:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2e844:	sub	r3, r2, r3
   2e848:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2e84c:	add	r3, r2, r3
   2e850:	str	r3, [fp, #-64]	; 0xffffffc0
   2e854:	b	2ecc0 <__assert_fail@plt+0x1c5d4>
   2e858:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2e85c:	and	r3, r3, #16
   2e860:	cmp	r3, #0
   2e864:	beq	2eae8 <__assert_fail@plt+0x1c3fc>
   2e868:	mov	r3, #0
   2e86c:	str	r3, [fp, #-52]	; 0xffffffcc
   2e870:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e874:	mov	r2, r3
   2e878:	mov	r3, #0
   2e87c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2e880:	cmp	r1, r3
   2e884:	cmpeq	r0, r2
   2e888:	bcc	2eae8 <__assert_fail@plt+0x1c3fc>
   2e88c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e890:	mov	r2, r3
   2e894:	mov	r3, #0
   2e898:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2e89c:	bl	64a60 <__assert_fail@plt+0x52374>
   2e8a0:	mov	r3, r2
   2e8a4:	lsl	r3, r3, #2
   2e8a8:	add	r3, r3, r2
   2e8ac:	lsl	r3, r3, #1
   2e8b0:	mov	r2, r3
   2e8b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e8b8:	add	r3, r2, r3
   2e8bc:	str	r3, [fp, #-184]	; 0xffffff48
   2e8c0:	ldr	r3, [fp, #-184]	; 0xffffff48
   2e8c4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e8c8:	udiv	r2, r3, r2
   2e8cc:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2e8d0:	mul	r2, r1, r2
   2e8d4:	sub	r3, r3, r2
   2e8d8:	lsl	r3, r3, #1
   2e8dc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2e8e0:	asr	r2, r2, #1
   2e8e4:	add	r3, r3, r2
   2e8e8:	str	r3, [fp, #-188]	; 0xffffff44
   2e8ec:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e8f0:	mov	r2, r3
   2e8f4:	mov	r3, #0
   2e8f8:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2e8fc:	bl	64a60 <__assert_fail@plt+0x52374>
   2e900:	mov	r2, r0
   2e904:	mov	r3, r1
   2e908:	strd	r2, [fp, #-44]	; 0xffffffd4
   2e90c:	ldr	r2, [fp, #-184]	; 0xffffff48
   2e910:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e914:	udiv	r3, r2, r3
   2e918:	str	r3, [fp, #-48]	; 0xffffffd0
   2e91c:	ldr	r2, [fp, #-188]	; 0xffffff44
   2e920:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e924:	cmp	r2, r3
   2e928:	bcs	2e94c <__assert_fail@plt+0x1c260>
   2e92c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2e930:	ldr	r3, [fp, #-188]	; 0xffffff44
   2e934:	add	r3, r2, r3
   2e938:	cmp	r3, #0
   2e93c:	movne	r3, #1
   2e940:	moveq	r3, #0
   2e944:	uxtb	r3, r3
   2e948:	b	2e970 <__assert_fail@plt+0x1c284>
   2e94c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2e950:	ldr	r3, [fp, #-188]	; 0xffffff44
   2e954:	add	r3, r2, r3
   2e958:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2e95c:	cmp	r2, r3
   2e960:	bcs	2e96c <__assert_fail@plt+0x1c280>
   2e964:	mov	r3, #3
   2e968:	b	2e970 <__assert_fail@plt+0x1c284>
   2e96c:	mov	r3, #2
   2e970:	str	r3, [fp, #-68]	; 0xffffffbc
   2e974:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e978:	add	r3, r3, #1
   2e97c:	str	r3, [fp, #-52]	; 0xffffffcc
   2e980:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2e984:	mov	r2, r3
   2e988:	mov	r3, #0
   2e98c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2e990:	cmp	r1, r3
   2e994:	cmpeq	r0, r2
   2e998:	bcc	2e9ac <__assert_fail@plt+0x1c2c0>
   2e99c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2e9a0:	ldr	r3, [fp, #-120]	; 0xffffff88
   2e9a4:	cmp	r2, r3
   2e9a8:	blt	2e88c <__assert_fail@plt+0x1c1a0>
   2e9ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2e9b0:	cmp	r3, #0
   2e9b4:	cmpeq	r2, #9
   2e9b8:	bhi	2eae8 <__assert_fail@plt+0x1c3fc>
   2e9bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e9c0:	cmp	r3, #1
   2e9c4:	bne	2e9ec <__assert_fail@plt+0x1c300>
   2e9c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e9cc:	and	r2, r3, #1
   2e9d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2e9d4:	add	r3, r2, r3
   2e9d8:	cmp	r3, #2
   2e9dc:	movgt	r3, #1
   2e9e0:	movle	r3, #0
   2e9e4:	uxtb	r3, r3
   2e9e8:	b	2ea18 <__assert_fail@plt+0x1c32c>
   2e9ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   2e9f0:	cmp	r3, #0
   2e9f4:	bne	2ea0c <__assert_fail@plt+0x1c320>
   2e9f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2e9fc:	cmp	r3, #0
   2ea00:	ble	2ea0c <__assert_fail@plt+0x1c320>
   2ea04:	mov	r3, #1
   2ea08:	b	2ea10 <__assert_fail@plt+0x1c324>
   2ea0c:	mov	r3, #0
   2ea10:	and	r3, r3, #1
   2ea14:	uxtb	r3, r3
   2ea18:	cmp	r3, #0
   2ea1c:	beq	2ea64 <__assert_fail@plt+0x1c378>
   2ea20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ea24:	add	r3, r3, #1
   2ea28:	str	r3, [fp, #-48]	; 0xffffffd0
   2ea2c:	mov	r3, #0
   2ea30:	str	r3, [fp, #-68]	; 0xffffffbc
   2ea34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ea38:	cmp	r3, #10
   2ea3c:	bne	2ea64 <__assert_fail@plt+0x1c378>
   2ea40:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2ea44:	adds	r1, r2, #1
   2ea48:	str	r1, [fp, #-236]	; 0xffffff14
   2ea4c:	adc	r3, r3, #0
   2ea50:	str	r3, [fp, #-232]	; 0xffffff18
   2ea54:	ldrd	r2, [fp, #-236]	; 0xffffff14
   2ea58:	strd	r2, [fp, #-44]	; 0xffffffd4
   2ea5c:	mov	r3, #0
   2ea60:	str	r3, [fp, #-48]	; 0xffffffd0
   2ea64:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2ea68:	cmp	r3, #0
   2ea6c:	cmpeq	r2, #9
   2ea70:	bhi	2eae8 <__assert_fail@plt+0x1c3fc>
   2ea74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ea78:	cmp	r3, #0
   2ea7c:	bne	2ea90 <__assert_fail@plt+0x1c3a4>
   2ea80:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ea84:	and	r3, r3, #8
   2ea88:	cmp	r3, #0
   2ea8c:	bne	2eae8 <__assert_fail@plt+0x1c3fc>
   2ea90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ea94:	uxtb	r3, r3
   2ea98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2ea9c:	sub	r2, r2, #1
   2eaa0:	str	r2, [fp, #-56]	; 0xffffffc8
   2eaa4:	add	r3, r3, #48	; 0x30
   2eaa8:	uxtb	r2, r3
   2eaac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2eab0:	strb	r2, [r3]
   2eab4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2eab8:	rsb	r3, r3, #0
   2eabc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2eac0:	add	r3, r2, r3
   2eac4:	str	r3, [fp, #-56]	; 0xffffffc8
   2eac8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2eacc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2ead0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ead4:	bl	120f8 <memcpy@plt>
   2ead8:	mov	r3, #0
   2eadc:	str	r3, [fp, #-68]	; 0xffffffbc
   2eae0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2eae4:	str	r3, [fp, #-48]	; 0xffffffd0
   2eae8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eaec:	cmp	r3, #1
   2eaf0:	bne	2eb50 <__assert_fail@plt+0x1c464>
   2eaf4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2eaf8:	mov	r2, r3
   2eafc:	asr	r3, r2, #31
   2eb00:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2eb04:	mov	r4, #1
   2eb08:	mov	r5, #0
   2eb0c:	and	r8, r0, r4
   2eb10:	and	r9, r1, r5
   2eb14:	adds	r6, r2, r8
   2eb18:	adc	r7, r3, r9
   2eb1c:	orr	r3, r6, r7
   2eb20:	cmp	r3, #0
   2eb24:	movne	r3, #1
   2eb28:	moveq	r3, #0
   2eb2c:	uxtb	r3, r3
   2eb30:	mov	r2, r3
   2eb34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eb38:	add	r3, r2, r3
   2eb3c:	cmp	r3, #5
   2eb40:	movgt	r3, #1
   2eb44:	movle	r3, #0
   2eb48:	uxtb	r3, r3
   2eb4c:	b	2eb8c <__assert_fail@plt+0x1c4a0>
   2eb50:	ldr	r3, [fp, #-112]	; 0xffffff90
   2eb54:	cmp	r3, #0
   2eb58:	bne	2eb80 <__assert_fail@plt+0x1c494>
   2eb5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2eb60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2eb64:	add	r3, r2, r3
   2eb68:	cmp	r3, #0
   2eb6c:	ble	2eb80 <__assert_fail@plt+0x1c494>
   2eb70:	mov	r3, #1
   2eb74:	b	2eb84 <__assert_fail@plt+0x1c498>
   2eb78:	andeq	r0, r0, r0
   2eb7c:	eormi	r0, r4, r0
   2eb80:	mov	r3, #0
   2eb84:	and	r3, r3, #1
   2eb88:	uxtb	r3, r3
   2eb8c:	cmp	r3, #0
   2eb90:	beq	2ec50 <__assert_fail@plt+0x1c564>
   2eb94:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2eb98:	adds	r1, r2, #1
   2eb9c:	str	r1, [fp, #-244]	; 0xffffff0c
   2eba0:	adc	r3, r3, #0
   2eba4:	str	r3, [fp, #-240]	; 0xffffff10
   2eba8:	ldrd	r2, [fp, #-244]	; 0xffffff0c
   2ebac:	strd	r2, [fp, #-44]	; 0xffffffd4
   2ebb0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ebb4:	and	r3, r3, #16
   2ebb8:	cmp	r3, #0
   2ebbc:	beq	2ec50 <__assert_fail@plt+0x1c564>
   2ebc0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2ebc4:	mov	r2, r3
   2ebc8:	mov	r3, #0
   2ebcc:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2ebd0:	cmp	r1, r3
   2ebd4:	cmpeq	r0, r2
   2ebd8:	bne	2ec50 <__assert_fail@plt+0x1c564>
   2ebdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ebe0:	ldr	r3, [fp, #-120]	; 0xffffff88
   2ebe4:	cmp	r2, r3
   2ebe8:	bge	2ec50 <__assert_fail@plt+0x1c564>
   2ebec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ebf0:	add	r3, r3, #1
   2ebf4:	str	r3, [fp, #-52]	; 0xffffffcc
   2ebf8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ebfc:	and	r3, r3, #8
   2ec00:	cmp	r3, #0
   2ec04:	bne	2ec44 <__assert_fail@plt+0x1c558>
   2ec08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ec0c:	sub	r3, r3, #1
   2ec10:	str	r3, [fp, #-56]	; 0xffffffc8
   2ec14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ec18:	mov	r2, #48	; 0x30
   2ec1c:	strb	r2, [r3]
   2ec20:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ec24:	rsb	r3, r3, #0
   2ec28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2ec2c:	add	r3, r2, r3
   2ec30:	str	r3, [fp, #-56]	; 0xffffffc8
   2ec34:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2ec38:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2ec3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ec40:	bl	120f8 <memcpy@plt>
   2ec44:	mov	r2, #1
   2ec48:	mov	r3, #0
   2ec4c:	strd	r2, [fp, #-44]	; 0xffffffd4
   2ec50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ec54:	str	r3, [fp, #-64]	; 0xffffffc0
   2ec58:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2ec5c:	mov	r2, #10
   2ec60:	mov	r3, #0
   2ec64:	bl	64a60 <__assert_fail@plt+0x52374>
   2ec68:	mov	r3, r2
   2ec6c:	str	r3, [fp, #-192]	; 0xffffff40
   2ec70:	ldr	r3, [fp, #-192]	; 0xffffff40
   2ec74:	uxtb	r3, r3
   2ec78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2ec7c:	sub	r2, r2, #1
   2ec80:	str	r2, [fp, #-56]	; 0xffffffc8
   2ec84:	add	r3, r3, #48	; 0x30
   2ec88:	uxtb	r2, r3
   2ec8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ec90:	strb	r2, [r3]
   2ec94:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   2ec98:	mov	r2, #10
   2ec9c:	mov	r3, #0
   2eca0:	bl	64a60 <__assert_fail@plt+0x52374>
   2eca4:	mov	r2, r0
   2eca8:	mov	r3, r1
   2ecac:	strd	r2, [fp, #-44]	; 0xffffffd4
   2ecb0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   2ecb4:	orrs	r3, r2, r3
   2ecb8:	bne	2ec58 <__assert_fail@plt+0x1c56c>
   2ecbc:	nop	{0}
   2ecc0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ecc4:	and	r3, r3, #4
   2ecc8:	cmp	r3, #0
   2eccc:	beq	2ecf4 <__assert_fail@plt+0x1c608>
   2ecd0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2ecd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ecd8:	sub	r3, r2, r3
   2ecdc:	mov	r1, r3
   2ece0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2ece4:	ldr	r2, [fp, #-124]	; 0xffffff84
   2ece8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ecec:	bl	2e1d0 <__assert_fail@plt+0x1bae4>
   2ecf0:	str	r0, [fp, #-56]	; 0xffffffc8
   2ecf4:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ecf8:	and	r3, r3, #128	; 0x80
   2ecfc:	cmp	r3, #0
   2ed00:	beq	2ee80 <__assert_fail@plt+0x1c794>
   2ed04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ed08:	cmp	r3, #0
   2ed0c:	bge	2ed98 <__assert_fail@plt+0x1c6ac>
   2ed10:	mov	r3, #0
   2ed14:	str	r3, [fp, #-52]	; 0xffffffcc
   2ed18:	mov	r2, #1
   2ed1c:	mov	r3, #0
   2ed20:	strd	r2, [fp, #-108]	; 0xffffff94
   2ed24:	b	2ed7c <__assert_fail@plt+0x1c690>
   2ed28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ed2c:	add	r3, r3, #1
   2ed30:	str	r3, [fp, #-52]	; 0xffffffcc
   2ed34:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ed38:	ldr	r3, [fp, #-120]	; 0xffffff88
   2ed3c:	cmp	r2, r3
   2ed40:	beq	2ed94 <__assert_fail@plt+0x1c6a8>
   2ed44:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2ed48:	mov	r2, r3
   2ed4c:	mov	r3, #0
   2ed50:	ldr	r1, [fp, #-104]	; 0xffffff98
   2ed54:	mul	r0, r2, r1
   2ed58:	ldr	r1, [fp, #-108]	; 0xffffff94
   2ed5c:	mul	r1, r3, r1
   2ed60:	add	r1, r0, r1
   2ed64:	ldr	r0, [fp, #-108]	; 0xffffff94
   2ed68:	umull	r2, r3, r0, r2
   2ed6c:	add	r1, r1, r3
   2ed70:	mov	r3, r1
   2ed74:	strd	r2, [fp, #-108]	; 0xffffff94
   2ed78:	strd	r2, [fp, #-108]	; 0xffffff94
   2ed7c:	ldrd	r0, [fp, #-108]	; 0xffffff94
   2ed80:	ldrd	r2, [fp, #12]
   2ed84:	cmp	r1, r3
   2ed88:	cmpeq	r0, r2
   2ed8c:	bcc	2ed28 <__assert_fail@plt+0x1c63c>
   2ed90:	b	2ed98 <__assert_fail@plt+0x1c6ac>
   2ed94:	nop	{0}
   2ed98:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ed9c:	and	r2, r3, #256	; 0x100
   2eda0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eda4:	orr	r3, r2, r3
   2eda8:	cmp	r3, #0
   2edac:	beq	2edd4 <__assert_fail@plt+0x1c6e8>
   2edb0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2edb4:	and	r3, r3, #64	; 0x40
   2edb8:	cmp	r3, #0
   2edbc:	beq	2edd4 <__assert_fail@plt+0x1c6e8>
   2edc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2edc4:	add	r2, r3, #1
   2edc8:	str	r2, [fp, #-60]	; 0xffffffc4
   2edcc:	mov	r2, #32
   2edd0:	strb	r2, [r3]
   2edd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2edd8:	cmp	r3, #0
   2eddc:	beq	2ee2c <__assert_fail@plt+0x1c740>
   2ede0:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ede4:	and	r3, r3, #32
   2ede8:	cmp	r3, #0
   2edec:	bne	2edfc <__assert_fail@plt+0x1c710>
   2edf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2edf4:	cmp	r3, #1
   2edf8:	beq	2ee14 <__assert_fail@plt+0x1c728>
   2edfc:	movw	r3, #38140	; 0x94fc
   2ee00:	movt	r3, #6
   2ee04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2ee08:	add	r3, r3, r2
   2ee0c:	ldrb	r1, [r3]
   2ee10:	b	2ee18 <__assert_fail@plt+0x1c72c>
   2ee14:	mov	r1, #107	; 0x6b
   2ee18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ee1c:	add	r2, r3, #1
   2ee20:	str	r2, [fp, #-60]	; 0xffffffc4
   2ee24:	mov	r2, r1
   2ee28:	strb	r2, [r3]
   2ee2c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ee30:	and	r3, r3, #256	; 0x100
   2ee34:	cmp	r3, #0
   2ee38:	beq	2ee80 <__assert_fail@plt+0x1c794>
   2ee3c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2ee40:	and	r3, r3, #32
   2ee44:	cmp	r3, #0
   2ee48:	beq	2ee6c <__assert_fail@plt+0x1c780>
   2ee4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ee50:	cmp	r3, #0
   2ee54:	beq	2ee6c <__assert_fail@plt+0x1c780>
   2ee58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ee5c:	add	r2, r3, #1
   2ee60:	str	r2, [fp, #-60]	; 0xffffffc4
   2ee64:	mov	r2, #105	; 0x69
   2ee68:	strb	r2, [r3]
   2ee6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ee70:	add	r2, r3, #1
   2ee74:	str	r2, [fp, #-60]	; 0xffffffc4
   2ee78:	mov	r2, #66	; 0x42
   2ee7c:	strb	r2, [r3]
   2ee80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2ee84:	mov	r2, #0
   2ee88:	strb	r2, [r3]
   2ee8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2ee90:	mov	r0, r3
   2ee94:	sub	sp, fp, #36	; 0x24
   2ee98:	vpop	{d8}
   2ee9c:	ldrd	r4, [sp]
   2eea0:	ldrd	r6, [sp, #8]
   2eea4:	ldrd	r8, [sp, #16]
   2eea8:	ldr	fp, [sp, #24]
   2eeac:	add	sp, sp, #28
   2eeb0:	pop	{pc}		; (ldr pc, [sp], #4)
   2eeb4:	str	fp, [sp, #-8]!
   2eeb8:	str	lr, [sp, #4]
   2eebc:	add	fp, sp, #4
   2eec0:	movw	r0, #38216	; 0x9548
   2eec4:	movt	r0, #6
   2eec8:	bl	122f0 <getenv@plt>
   2eecc:	mov	r3, r0
   2eed0:	cmp	r3, #0
   2eed4:	beq	2eee4 <__assert_fail@plt+0x1c7f8>
   2eed8:	mov	r2, #512	; 0x200
   2eedc:	mov	r3, #0
   2eee0:	b	2eeec <__assert_fail@plt+0x1c800>
   2eee4:	mov	r2, #1024	; 0x400
   2eee8:	mov	r3, #0
   2eeec:	mov	r0, r2
   2eef0:	mov	r1, r3
   2eef4:	sub	sp, fp, #4
   2eef8:	ldr	fp, [sp]
   2eefc:	add	sp, sp, #4
   2ef00:	pop	{pc}		; (ldr pc, [sp], #4)
   2ef04:	str	fp, [sp, #-8]!
   2ef08:	str	lr, [sp, #4]
   2ef0c:	add	fp, sp, #4
   2ef10:	sub	sp, sp, #40	; 0x28
   2ef14:	str	r0, [fp, #-24]	; 0xffffffe8
   2ef18:	str	r1, [fp, #-28]	; 0xffffffe4
   2ef1c:	str	r2, [fp, #-32]	; 0xffffffe0
   2ef20:	mov	r3, #0
   2ef24:	str	r3, [fp, #-8]
   2ef28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef2c:	cmp	r3, #0
   2ef30:	bne	2ef84 <__assert_fail@plt+0x1c898>
   2ef34:	movw	r0, #38232	; 0x9558
   2ef38:	movt	r0, #6
   2ef3c:	bl	122f0 <getenv@plt>
   2ef40:	str	r0, [fp, #-24]	; 0xffffffe8
   2ef44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef48:	cmp	r3, #0
   2ef4c:	bne	2ef84 <__assert_fail@plt+0x1c898>
   2ef50:	movw	r0, #38244	; 0x9564
   2ef54:	movt	r0, #6
   2ef58:	bl	122f0 <getenv@plt>
   2ef5c:	str	r0, [fp, #-24]	; 0xffffffe8
   2ef60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef64:	cmp	r3, #0
   2ef68:	bne	2ef84 <__assert_fail@plt+0x1c898>
   2ef6c:	bl	2eeb4 <__assert_fail@plt+0x1c7c8>
   2ef70:	mov	r2, r0
   2ef74:	mov	r3, r1
   2ef78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ef7c:	strd	r2, [r1]
   2ef80:	b	2f0f4 <__assert_fail@plt+0x1ca08>
   2ef84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef88:	ldrb	r3, [r3]
   2ef8c:	cmp	r3, #39	; 0x27
   2ef90:	bne	2efac <__assert_fail@plt+0x1c8c0>
   2ef94:	ldr	r3, [fp, #-8]
   2ef98:	orr	r3, r3, #4
   2ef9c:	str	r3, [fp, #-8]
   2efa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2efa4:	add	r3, r3, #1
   2efa8:	str	r3, [fp, #-24]	; 0xffffffe8
   2efac:	mov	r3, #4
   2efb0:	movw	r2, #38208	; 0x9540
   2efb4:	movt	r2, #6
   2efb8:	movw	r1, #38196	; 0x9534
   2efbc:	movt	r1, #6
   2efc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efc4:	bl	5f62c <__assert_fail@plt+0x4cf40>
   2efc8:	str	r0, [fp, #-12]
   2efcc:	ldr	r3, [fp, #-12]
   2efd0:	cmp	r3, #0
   2efd4:	blt	2f008 <__assert_fail@plt+0x1c91c>
   2efd8:	movw	r3, #38208	; 0x9540
   2efdc:	movt	r3, #6
   2efe0:	ldr	r2, [fp, #-12]
   2efe4:	ldr	r3, [r3, r2, lsl #2]
   2efe8:	ldr	r2, [fp, #-8]
   2efec:	orr	r3, r2, r3
   2eff0:	str	r3, [fp, #-8]
   2eff4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eff8:	mov	r2, #1
   2effc:	mov	r3, #0
   2f000:	strd	r2, [r1]
   2f004:	b	2f0f4 <__assert_fail@plt+0x1ca08>
   2f008:	sub	r1, fp, #20
   2f00c:	movw	r3, #38256	; 0x9570
   2f010:	movt	r3, #6
   2f014:	str	r3, [sp]
   2f018:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f01c:	mov	r2, #0
   2f020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f024:	bl	3ec14 <__assert_fail@plt+0x2c528>
   2f028:	str	r0, [fp, #-16]
   2f02c:	ldr	r3, [fp, #-16]
   2f030:	cmp	r3, #0
   2f034:	beq	2f0cc <__assert_fail@plt+0x1c9e0>
   2f038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f03c:	mov	r2, #0
   2f040:	str	r2, [r3]
   2f044:	ldr	r3, [fp, #-16]
   2f048:	b	2f104 <__assert_fail@plt+0x1ca18>
   2f04c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f050:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f054:	cmp	r2, r3
   2f058:	bne	2f0c0 <__assert_fail@plt+0x1c9d4>
   2f05c:	ldr	r3, [fp, #-8]
   2f060:	orr	r3, r3, #128	; 0x80
   2f064:	str	r3, [fp, #-8]
   2f068:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f06c:	sub	r3, r3, #1
   2f070:	ldrb	r3, [r3]
   2f074:	cmp	r3, #66	; 0x42
   2f078:	bne	2f088 <__assert_fail@plt+0x1c99c>
   2f07c:	ldr	r3, [fp, #-8]
   2f080:	orr	r3, r3, #256	; 0x100
   2f084:	str	r3, [fp, #-8]
   2f088:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f08c:	sub	r3, r3, #1
   2f090:	ldrb	r3, [r3]
   2f094:	cmp	r3, #66	; 0x42
   2f098:	bne	2f0b0 <__assert_fail@plt+0x1c9c4>
   2f09c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f0a0:	sub	r3, r3, #2
   2f0a4:	ldrb	r3, [r3]
   2f0a8:	cmp	r3, #105	; 0x69
   2f0ac:	bne	2f0f0 <__assert_fail@plt+0x1ca04>
   2f0b0:	ldr	r3, [fp, #-8]
   2f0b4:	orr	r3, r3, #32
   2f0b8:	str	r3, [fp, #-8]
   2f0bc:	b	2f0f0 <__assert_fail@plt+0x1ca04>
   2f0c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f0c4:	add	r3, r3, #1
   2f0c8:	str	r3, [fp, #-24]	; 0xffffffe8
   2f0cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f0d0:	ldrb	r3, [r3]
   2f0d4:	cmp	r3, #47	; 0x2f
   2f0d8:	bls	2f04c <__assert_fail@plt+0x1c960>
   2f0dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f0e0:	ldrb	r3, [r3]
   2f0e4:	cmp	r3, #57	; 0x39
   2f0e8:	bhi	2f04c <__assert_fail@plt+0x1c960>
   2f0ec:	b	2f0f4 <__assert_fail@plt+0x1ca08>
   2f0f0:	nop	{0}
   2f0f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f0f8:	ldr	r2, [fp, #-8]
   2f0fc:	str	r2, [r3]
   2f100:	mov	r3, #0
   2f104:	mov	r0, r3
   2f108:	sub	sp, fp, #4
   2f10c:	ldr	fp, [sp]
   2f110:	add	sp, sp, #4
   2f114:	pop	{pc}		; (ldr pc, [sp], #4)
   2f118:	str	fp, [sp, #-8]!
   2f11c:	str	lr, [sp, #4]
   2f120:	add	fp, sp, #4
   2f124:	sub	sp, sp, #24
   2f128:	str	r0, [fp, #-16]
   2f12c:	str	r1, [fp, #-20]	; 0xffffffec
   2f130:	str	r2, [fp, #-24]	; 0xffffffe8
   2f134:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f138:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f13c:	ldr	r0, [fp, #-16]
   2f140:	bl	2ef04 <__assert_fail@plt+0x1c818>
   2f144:	str	r0, [fp, #-8]
   2f148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f14c:	ldrd	r2, [r3]
   2f150:	orrs	r3, r2, r3
   2f154:	bne	2f174 <__assert_fail@plt+0x1ca88>
   2f158:	bl	2eeb4 <__assert_fail@plt+0x1c7c8>
   2f15c:	mov	r2, r0
   2f160:	mov	r3, r1
   2f164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f168:	strd	r2, [r1]
   2f16c:	mov	r3, #4
   2f170:	str	r3, [fp, #-8]
   2f174:	ldr	r3, [fp, #-8]
   2f178:	mov	r0, r3
   2f17c:	sub	sp, fp, #4
   2f180:	ldr	fp, [sp]
   2f184:	add	sp, sp, #4
   2f188:	pop	{pc}		; (ldr pc, [sp], #4)
   2f18c:	str	fp, [sp, #-8]!
   2f190:	str	lr, [sp, #4]
   2f194:	add	fp, sp, #4
   2f198:	sub	sp, sp, #24
   2f19c:	str	r0, [fp, #-24]	; 0xffffffe8
   2f1a0:	mov	r3, #0
   2f1a4:	str	r3, [fp, #-12]
   2f1a8:	movw	r3, #52948	; 0xced4
   2f1ac:	movt	r3, #7
   2f1b0:	ldr	r3, [r3]
   2f1b4:	str	r3, [fp, #-8]
   2f1b8:	b	2f1e8 <__assert_fail@plt+0x1cafc>
   2f1bc:	ldr	r3, [fp, #-8]
   2f1c0:	ldr	r3, [r3]
   2f1c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f1c8:	cmp	r2, r3
   2f1cc:	bne	2f1dc <__assert_fail@plt+0x1caf0>
   2f1d0:	ldr	r3, [fp, #-8]
   2f1d4:	str	r3, [fp, #-12]
   2f1d8:	b	2f1f4 <__assert_fail@plt+0x1cb08>
   2f1dc:	ldr	r3, [fp, #-8]
   2f1e0:	ldr	r3, [r3, #4]
   2f1e4:	str	r3, [fp, #-8]
   2f1e8:	ldr	r3, [fp, #-8]
   2f1ec:	cmp	r3, #0
   2f1f0:	bne	2f1bc <__assert_fail@plt+0x1cad0>
   2f1f4:	ldr	r3, [fp, #-12]
   2f1f8:	cmp	r3, #0
   2f1fc:	bne	2f298 <__assert_fail@plt+0x1cbac>
   2f200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f204:	bl	12014 <getpwuid@plt>
   2f208:	str	r0, [fp, #-16]
   2f20c:	ldr	r3, [fp, #-16]
   2f210:	cmp	r3, #0
   2f214:	beq	2f224 <__assert_fail@plt+0x1cb38>
   2f218:	ldr	r3, [fp, #-16]
   2f21c:	ldr	r3, [r3]
   2f220:	b	2f22c <__assert_fail@plt+0x1cb40>
   2f224:	movw	r3, #38276	; 0x9584
   2f228:	movt	r3, #6
   2f22c:	str	r3, [fp, #-20]	; 0xffffffec
   2f230:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f234:	bl	123bc <strlen@plt>
   2f238:	mov	r3, r0
   2f23c:	add	r3, r3, #12
   2f240:	bic	r3, r3, #3
   2f244:	mov	r0, r3
   2f248:	bl	3d8ec <__assert_fail@plt+0x2b200>
   2f24c:	mov	r3, r0
   2f250:	str	r3, [fp, #-12]
   2f254:	ldr	r3, [fp, #-12]
   2f258:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f25c:	str	r2, [r3]
   2f260:	ldr	r3, [fp, #-12]
   2f264:	add	r3, r3, #8
   2f268:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f26c:	mov	r0, r3
   2f270:	bl	1226c <strcpy@plt>
   2f274:	movw	r3, #52948	; 0xced4
   2f278:	movt	r3, #7
   2f27c:	ldr	r2, [r3]
   2f280:	ldr	r3, [fp, #-12]
   2f284:	str	r2, [r3, #4]
   2f288:	movw	r3, #52948	; 0xced4
   2f28c:	movt	r3, #7
   2f290:	ldr	r2, [fp, #-12]
   2f294:	str	r2, [r3]
   2f298:	ldr	r3, [fp, #-12]
   2f29c:	ldrb	r3, [r3, #8]
   2f2a0:	cmp	r3, #0
   2f2a4:	beq	2f2b4 <__assert_fail@plt+0x1cbc8>
   2f2a8:	ldr	r3, [fp, #-12]
   2f2ac:	add	r3, r3, #8
   2f2b0:	b	2f2b8 <__assert_fail@plt+0x1cbcc>
   2f2b4:	mov	r3, #0
   2f2b8:	mov	r0, r3
   2f2bc:	sub	sp, fp, #4
   2f2c0:	ldr	fp, [sp]
   2f2c4:	add	sp, sp, #4
   2f2c8:	pop	{pc}		; (ldr pc, [sp], #4)
   2f2cc:	str	fp, [sp, #-8]!
   2f2d0:	str	lr, [sp, #4]
   2f2d4:	add	fp, sp, #4
   2f2d8:	sub	sp, sp, #16
   2f2dc:	str	r0, [fp, #-16]
   2f2e0:	movw	r3, #52948	; 0xced4
   2f2e4:	movt	r3, #7
   2f2e8:	ldr	r3, [r3]
   2f2ec:	str	r3, [fp, #-8]
   2f2f0:	b	2f340 <__assert_fail@plt+0x1cc54>
   2f2f4:	ldr	r3, [fp, #-8]
   2f2f8:	ldrb	r2, [r3, #8]
   2f2fc:	ldr	r3, [fp, #-16]
   2f300:	ldrb	r3, [r3]
   2f304:	cmp	r2, r3
   2f308:	bne	2f334 <__assert_fail@plt+0x1cc48>
   2f30c:	ldr	r3, [fp, #-8]
   2f310:	add	r3, r3, #8
   2f314:	ldr	r1, [fp, #-16]
   2f318:	mov	r0, r3
   2f31c:	bl	11ffc <strcmp@plt>
   2f320:	mov	r3, r0
   2f324:	cmp	r3, #0
   2f328:	bne	2f334 <__assert_fail@plt+0x1cc48>
   2f32c:	ldr	r3, [fp, #-8]
   2f330:	b	2f46c <__assert_fail@plt+0x1cd80>
   2f334:	ldr	r3, [fp, #-8]
   2f338:	ldr	r3, [r3, #4]
   2f33c:	str	r3, [fp, #-8]
   2f340:	ldr	r3, [fp, #-8]
   2f344:	cmp	r3, #0
   2f348:	bne	2f2f4 <__assert_fail@plt+0x1cc08>
   2f34c:	movw	r3, #52952	; 0xced8
   2f350:	movt	r3, #7
   2f354:	ldr	r3, [r3]
   2f358:	str	r3, [fp, #-8]
   2f35c:	b	2f3ac <__assert_fail@plt+0x1ccc0>
   2f360:	ldr	r3, [fp, #-8]
   2f364:	ldrb	r2, [r3, #8]
   2f368:	ldr	r3, [fp, #-16]
   2f36c:	ldrb	r3, [r3]
   2f370:	cmp	r2, r3
   2f374:	bne	2f3a0 <__assert_fail@plt+0x1ccb4>
   2f378:	ldr	r3, [fp, #-8]
   2f37c:	add	r3, r3, #8
   2f380:	ldr	r1, [fp, #-16]
   2f384:	mov	r0, r3
   2f388:	bl	11ffc <strcmp@plt>
   2f38c:	mov	r3, r0
   2f390:	cmp	r3, #0
   2f394:	bne	2f3a0 <__assert_fail@plt+0x1ccb4>
   2f398:	mov	r3, #0
   2f39c:	b	2f46c <__assert_fail@plt+0x1cd80>
   2f3a0:	ldr	r3, [fp, #-8]
   2f3a4:	ldr	r3, [r3, #4]
   2f3a8:	str	r3, [fp, #-8]
   2f3ac:	ldr	r3, [fp, #-8]
   2f3b0:	cmp	r3, #0
   2f3b4:	bne	2f360 <__assert_fail@plt+0x1cc74>
   2f3b8:	ldr	r0, [fp, #-16]
   2f3bc:	bl	11fd8 <getpwnam@plt>
   2f3c0:	str	r0, [fp, #-12]
   2f3c4:	ldr	r0, [fp, #-16]
   2f3c8:	bl	123bc <strlen@plt>
   2f3cc:	mov	r3, r0
   2f3d0:	add	r3, r3, #12
   2f3d4:	bic	r3, r3, #3
   2f3d8:	mov	r0, r3
   2f3dc:	bl	3d8ec <__assert_fail@plt+0x2b200>
   2f3e0:	mov	r3, r0
   2f3e4:	str	r3, [fp, #-8]
   2f3e8:	ldr	r3, [fp, #-8]
   2f3ec:	add	r3, r3, #8
   2f3f0:	ldr	r1, [fp, #-16]
   2f3f4:	mov	r0, r3
   2f3f8:	bl	1226c <strcpy@plt>
   2f3fc:	ldr	r3, [fp, #-12]
   2f400:	cmp	r3, #0
   2f404:	beq	2f444 <__assert_fail@plt+0x1cd58>
   2f408:	ldr	r3, [fp, #-12]
   2f40c:	ldr	r2, [r3, #8]
   2f410:	ldr	r3, [fp, #-8]
   2f414:	str	r2, [r3]
   2f418:	movw	r3, #52948	; 0xced4
   2f41c:	movt	r3, #7
   2f420:	ldr	r2, [r3]
   2f424:	ldr	r3, [fp, #-8]
   2f428:	str	r2, [r3, #4]
   2f42c:	movw	r3, #52948	; 0xced4
   2f430:	movt	r3, #7
   2f434:	ldr	r2, [fp, #-8]
   2f438:	str	r2, [r3]
   2f43c:	ldr	r3, [fp, #-8]
   2f440:	b	2f46c <__assert_fail@plt+0x1cd80>
   2f444:	movw	r3, #52952	; 0xced8
   2f448:	movt	r3, #7
   2f44c:	ldr	r2, [r3]
   2f450:	ldr	r3, [fp, #-8]
   2f454:	str	r2, [r3, #4]
   2f458:	movw	r3, #52952	; 0xced8
   2f45c:	movt	r3, #7
   2f460:	ldr	r2, [fp, #-8]
   2f464:	str	r2, [r3]
   2f468:	mov	r3, #0
   2f46c:	mov	r0, r3
   2f470:	sub	sp, fp, #4
   2f474:	ldr	fp, [sp]
   2f478:	add	sp, sp, #4
   2f47c:	pop	{pc}		; (ldr pc, [sp], #4)
   2f480:	str	fp, [sp, #-8]!
   2f484:	str	lr, [sp, #4]
   2f488:	add	fp, sp, #4
   2f48c:	sub	sp, sp, #24
   2f490:	str	r0, [fp, #-24]	; 0xffffffe8
   2f494:	mov	r3, #0
   2f498:	str	r3, [fp, #-12]
   2f49c:	movw	r3, #52956	; 0xcedc
   2f4a0:	movt	r3, #7
   2f4a4:	ldr	r3, [r3]
   2f4a8:	str	r3, [fp, #-8]
   2f4ac:	b	2f4dc <__assert_fail@plt+0x1cdf0>
   2f4b0:	ldr	r3, [fp, #-8]
   2f4b4:	ldr	r3, [r3]
   2f4b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f4bc:	cmp	r2, r3
   2f4c0:	bne	2f4d0 <__assert_fail@plt+0x1cde4>
   2f4c4:	ldr	r3, [fp, #-8]
   2f4c8:	str	r3, [fp, #-12]
   2f4cc:	b	2f4e8 <__assert_fail@plt+0x1cdfc>
   2f4d0:	ldr	r3, [fp, #-8]
   2f4d4:	ldr	r3, [r3, #4]
   2f4d8:	str	r3, [fp, #-8]
   2f4dc:	ldr	r3, [fp, #-8]
   2f4e0:	cmp	r3, #0
   2f4e4:	bne	2f4b0 <__assert_fail@plt+0x1cdc4>
   2f4e8:	ldr	r3, [fp, #-12]
   2f4ec:	cmp	r3, #0
   2f4f0:	bne	2f58c <__assert_fail@plt+0x1cea0>
   2f4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4f8:	bl	126c8 <getgrgid@plt>
   2f4fc:	str	r0, [fp, #-16]
   2f500:	ldr	r3, [fp, #-16]
   2f504:	cmp	r3, #0
   2f508:	beq	2f518 <__assert_fail@plt+0x1ce2c>
   2f50c:	ldr	r3, [fp, #-16]
   2f510:	ldr	r3, [r3]
   2f514:	b	2f520 <__assert_fail@plt+0x1ce34>
   2f518:	movw	r3, #38276	; 0x9584
   2f51c:	movt	r3, #6
   2f520:	str	r3, [fp, #-20]	; 0xffffffec
   2f524:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f528:	bl	123bc <strlen@plt>
   2f52c:	mov	r3, r0
   2f530:	add	r3, r3, #12
   2f534:	bic	r3, r3, #3
   2f538:	mov	r0, r3
   2f53c:	bl	3d8ec <__assert_fail@plt+0x2b200>
   2f540:	mov	r3, r0
   2f544:	str	r3, [fp, #-12]
   2f548:	ldr	r3, [fp, #-12]
   2f54c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f550:	str	r2, [r3]
   2f554:	ldr	r3, [fp, #-12]
   2f558:	add	r3, r3, #8
   2f55c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f560:	mov	r0, r3
   2f564:	bl	1226c <strcpy@plt>
   2f568:	movw	r3, #52956	; 0xcedc
   2f56c:	movt	r3, #7
   2f570:	ldr	r2, [r3]
   2f574:	ldr	r3, [fp, #-12]
   2f578:	str	r2, [r3, #4]
   2f57c:	movw	r3, #52956	; 0xcedc
   2f580:	movt	r3, #7
   2f584:	ldr	r2, [fp, #-12]
   2f588:	str	r2, [r3]
   2f58c:	ldr	r3, [fp, #-12]
   2f590:	ldrb	r3, [r3, #8]
   2f594:	cmp	r3, #0
   2f598:	beq	2f5a8 <__assert_fail@plt+0x1cebc>
   2f59c:	ldr	r3, [fp, #-12]
   2f5a0:	add	r3, r3, #8
   2f5a4:	b	2f5ac <__assert_fail@plt+0x1cec0>
   2f5a8:	mov	r3, #0
   2f5ac:	mov	r0, r3
   2f5b0:	sub	sp, fp, #4
   2f5b4:	ldr	fp, [sp]
   2f5b8:	add	sp, sp, #4
   2f5bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2f5c0:	str	fp, [sp, #-8]!
   2f5c4:	str	lr, [sp, #4]
   2f5c8:	add	fp, sp, #4
   2f5cc:	sub	sp, sp, #16
   2f5d0:	str	r0, [fp, #-16]
   2f5d4:	movw	r3, #52956	; 0xcedc
   2f5d8:	movt	r3, #7
   2f5dc:	ldr	r3, [r3]
   2f5e0:	str	r3, [fp, #-8]
   2f5e4:	b	2f634 <__assert_fail@plt+0x1cf48>
   2f5e8:	ldr	r3, [fp, #-8]
   2f5ec:	ldrb	r2, [r3, #8]
   2f5f0:	ldr	r3, [fp, #-16]
   2f5f4:	ldrb	r3, [r3]
   2f5f8:	cmp	r2, r3
   2f5fc:	bne	2f628 <__assert_fail@plt+0x1cf3c>
   2f600:	ldr	r3, [fp, #-8]
   2f604:	add	r3, r3, #8
   2f608:	ldr	r1, [fp, #-16]
   2f60c:	mov	r0, r3
   2f610:	bl	11ffc <strcmp@plt>
   2f614:	mov	r3, r0
   2f618:	cmp	r3, #0
   2f61c:	bne	2f628 <__assert_fail@plt+0x1cf3c>
   2f620:	ldr	r3, [fp, #-8]
   2f624:	b	2f760 <__assert_fail@plt+0x1d074>
   2f628:	ldr	r3, [fp, #-8]
   2f62c:	ldr	r3, [r3, #4]
   2f630:	str	r3, [fp, #-8]
   2f634:	ldr	r3, [fp, #-8]
   2f638:	cmp	r3, #0
   2f63c:	bne	2f5e8 <__assert_fail@plt+0x1cefc>
   2f640:	movw	r3, #52960	; 0xcee0
   2f644:	movt	r3, #7
   2f648:	ldr	r3, [r3]
   2f64c:	str	r3, [fp, #-8]
   2f650:	b	2f6a0 <__assert_fail@plt+0x1cfb4>
   2f654:	ldr	r3, [fp, #-8]
   2f658:	ldrb	r2, [r3, #8]
   2f65c:	ldr	r3, [fp, #-16]
   2f660:	ldrb	r3, [r3]
   2f664:	cmp	r2, r3
   2f668:	bne	2f694 <__assert_fail@plt+0x1cfa8>
   2f66c:	ldr	r3, [fp, #-8]
   2f670:	add	r3, r3, #8
   2f674:	ldr	r1, [fp, #-16]
   2f678:	mov	r0, r3
   2f67c:	bl	11ffc <strcmp@plt>
   2f680:	mov	r3, r0
   2f684:	cmp	r3, #0
   2f688:	bne	2f694 <__assert_fail@plt+0x1cfa8>
   2f68c:	mov	r3, #0
   2f690:	b	2f760 <__assert_fail@plt+0x1d074>
   2f694:	ldr	r3, [fp, #-8]
   2f698:	ldr	r3, [r3, #4]
   2f69c:	str	r3, [fp, #-8]
   2f6a0:	ldr	r3, [fp, #-8]
   2f6a4:	cmp	r3, #0
   2f6a8:	bne	2f654 <__assert_fail@plt+0x1cf68>
   2f6ac:	ldr	r0, [fp, #-16]
   2f6b0:	bl	126d4 <getgrnam@plt>
   2f6b4:	str	r0, [fp, #-12]
   2f6b8:	ldr	r0, [fp, #-16]
   2f6bc:	bl	123bc <strlen@plt>
   2f6c0:	mov	r3, r0
   2f6c4:	add	r3, r3, #12
   2f6c8:	bic	r3, r3, #3
   2f6cc:	mov	r0, r3
   2f6d0:	bl	3d8ec <__assert_fail@plt+0x2b200>
   2f6d4:	mov	r3, r0
   2f6d8:	str	r3, [fp, #-8]
   2f6dc:	ldr	r3, [fp, #-8]
   2f6e0:	add	r3, r3, #8
   2f6e4:	ldr	r1, [fp, #-16]
   2f6e8:	mov	r0, r3
   2f6ec:	bl	1226c <strcpy@plt>
   2f6f0:	ldr	r3, [fp, #-12]
   2f6f4:	cmp	r3, #0
   2f6f8:	beq	2f738 <__assert_fail@plt+0x1d04c>
   2f6fc:	ldr	r3, [fp, #-12]
   2f700:	ldr	r2, [r3, #8]
   2f704:	ldr	r3, [fp, #-8]
   2f708:	str	r2, [r3]
   2f70c:	movw	r3, #52956	; 0xcedc
   2f710:	movt	r3, #7
   2f714:	ldr	r2, [r3]
   2f718:	ldr	r3, [fp, #-8]
   2f71c:	str	r2, [r3, #4]
   2f720:	movw	r3, #52956	; 0xcedc
   2f724:	movt	r3, #7
   2f728:	ldr	r2, [fp, #-8]
   2f72c:	str	r2, [r3]
   2f730:	ldr	r3, [fp, #-8]
   2f734:	b	2f760 <__assert_fail@plt+0x1d074>
   2f738:	movw	r3, #52960	; 0xcee0
   2f73c:	movt	r3, #7
   2f740:	ldr	r2, [r3]
   2f744:	ldr	r3, [fp, #-8]
   2f748:	str	r2, [r3, #4]
   2f74c:	movw	r3, #52960	; 0xcee0
   2f750:	movt	r3, #7
   2f754:	ldr	r2, [fp, #-8]
   2f758:	str	r2, [r3]
   2f75c:	mov	r3, #0
   2f760:	mov	r0, r3
   2f764:	sub	sp, fp, #4
   2f768:	ldr	fp, [sp]
   2f76c:	add	sp, sp, #4
   2f770:	pop	{pc}		; (ldr pc, [sp], #4)
   2f774:	str	fp, [sp, #-8]!
   2f778:	str	lr, [sp, #4]
   2f77c:	add	fp, sp, #4
   2f780:	sub	sp, sp, #48	; 0x30
   2f784:	str	r0, [fp, #-40]	; 0xffffffd8
   2f788:	str	r1, [fp, #-44]	; 0xffffffd4
   2f78c:	str	r2, [fp, #-48]	; 0xffffffd0
   2f790:	str	r3, [fp, #-52]	; 0xffffffcc
   2f794:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f798:	str	r3, [fp, #-28]	; 0xffffffe4
   2f79c:	mov	r3, #0
   2f7a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f7a4:	lsl	r2, r2, #2
   2f7a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f7ac:	lsr	r1, r1, #30
   2f7b0:	cmp	r1, #0
   2f7b4:	beq	2f7bc <__assert_fail@plt+0x1d0d0>
   2f7b8:	mov	r3, #1
   2f7bc:	cmp	r2, #0
   2f7c0:	bge	2f7c8 <__assert_fail@plt+0x1d0dc>
   2f7c4:	mov	r3, #1
   2f7c8:	and	r3, r3, #1
   2f7cc:	uxtb	r3, r3
   2f7d0:	eor	r3, r3, #1
   2f7d4:	uxtb	r3, r3
   2f7d8:	cmp	r3, #0
   2f7dc:	beq	2f844 <__assert_fail@plt+0x1d158>
   2f7e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f7e4:	lsl	r3, r3, #2
   2f7e8:	cmp	r3, #4016	; 0xfb0
   2f7ec:	bhi	2f82c <__assert_fail@plt+0x1d140>
   2f7f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f7f4:	add	r3, r3, #4
   2f7f8:	lsl	r3, r3, #2
   2f7fc:	sub	r3, r3, #1
   2f800:	add	r3, r3, #7
   2f804:	lsr	r3, r3, #3
   2f808:	lsl	r3, r3, #3
   2f80c:	sub	sp, sp, r3
   2f810:	mov	r3, sp
   2f814:	add	r3, r3, #7
   2f818:	lsr	r3, r3, #3
   2f81c:	lsl	r3, r3, #3
   2f820:	add	r3, r3, #15
   2f824:	bic	r3, r3, #15
   2f828:	b	2f848 <__assert_fail@plt+0x1d15c>
   2f82c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f830:	lsl	r3, r3, #2
   2f834:	mov	r0, r3
   2f838:	bl	613c8 <__assert_fail@plt+0x4ecdc>
   2f83c:	mov	r3, r0
   2f840:	b	2f848 <__assert_fail@plt+0x1d15c>
   2f844:	mov	r3, #0
   2f848:	str	r3, [fp, #-32]	; 0xffffffe0
   2f84c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f850:	cmp	r3, #0
   2f854:	bne	2f860 <__assert_fail@plt+0x1d174>
   2f858:	mov	r3, #0
   2f85c:	b	2fa54 <__assert_fail@plt+0x1d368>
   2f860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f864:	add	r3, r3, #4
   2f868:	mov	r2, #1
   2f86c:	str	r2, [r3]
   2f870:	mov	r3, #0
   2f874:	str	r3, [fp, #-12]
   2f878:	mov	r3, #2
   2f87c:	str	r3, [fp, #-8]
   2f880:	b	2f940 <__assert_fail@plt+0x1d254>
   2f884:	ldr	r3, [fp, #-8]
   2f888:	sub	r3, r3, #1
   2f88c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2f890:	add	r3, r2, r3
   2f894:	ldrb	r3, [r3]
   2f898:	strb	r3, [fp, #-33]	; 0xffffffdf
   2f89c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2f8a0:	ldr	r3, [fp, #-12]
   2f8a4:	add	r3, r2, r3
   2f8a8:	ldrb	r3, [r3]
   2f8ac:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   2f8b0:	cmp	r2, r3
   2f8b4:	bne	2f8e8 <__assert_fail@plt+0x1d1fc>
   2f8b8:	ldr	r3, [fp, #-12]
   2f8bc:	add	r3, r3, #1
   2f8c0:	str	r3, [fp, #-12]
   2f8c4:	ldr	r3, [fp, #-8]
   2f8c8:	lsl	r3, r3, #2
   2f8cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f8d0:	add	r3, r2, r3
   2f8d4:	ldr	r1, [fp, #-8]
   2f8d8:	ldr	r2, [fp, #-12]
   2f8dc:	sub	r2, r1, r2
   2f8e0:	str	r2, [r3]
   2f8e4:	b	2f934 <__assert_fail@plt+0x1d248>
   2f8e8:	ldr	r3, [fp, #-12]
   2f8ec:	cmp	r3, #0
   2f8f0:	bne	2f910 <__assert_fail@plt+0x1d224>
   2f8f4:	ldr	r3, [fp, #-8]
   2f8f8:	lsl	r3, r3, #2
   2f8fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f900:	add	r3, r2, r3
   2f904:	ldr	r2, [fp, #-8]
   2f908:	str	r2, [r3]
   2f90c:	b	2f934 <__assert_fail@plt+0x1d248>
   2f910:	ldr	r3, [fp, #-12]
   2f914:	lsl	r3, r3, #2
   2f918:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f91c:	add	r3, r2, r3
   2f920:	ldr	r3, [r3]
   2f924:	ldr	r2, [fp, #-12]
   2f928:	sub	r3, r2, r3
   2f92c:	str	r3, [fp, #-12]
   2f930:	b	2f89c <__assert_fail@plt+0x1d1b0>
   2f934:	ldr	r3, [fp, #-8]
   2f938:	add	r3, r3, #1
   2f93c:	str	r3, [fp, #-8]
   2f940:	ldr	r2, [fp, #-8]
   2f944:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f948:	cmp	r2, r3
   2f94c:	bcc	2f884 <__assert_fail@plt+0x1d198>
   2f950:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f954:	mov	r2, #0
   2f958:	str	r2, [r3]
   2f95c:	mov	r3, #0
   2f960:	str	r3, [fp, #-16]
   2f964:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f968:	str	r3, [fp, #-20]	; 0xffffffec
   2f96c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f970:	str	r3, [fp, #-24]	; 0xffffffe8
   2f974:	b	2fa38 <__assert_fail@plt+0x1d34c>
   2f978:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2f97c:	ldr	r3, [fp, #-16]
   2f980:	add	r3, r2, r3
   2f984:	ldrb	r2, [r3]
   2f988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f98c:	ldrb	r3, [r3]
   2f990:	cmp	r2, r3
   2f994:	bne	2f9d0 <__assert_fail@plt+0x1d2e4>
   2f998:	ldr	r3, [fp, #-16]
   2f99c:	add	r3, r3, #1
   2f9a0:	str	r3, [fp, #-16]
   2f9a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f9a8:	add	r3, r3, #1
   2f9ac:	str	r3, [fp, #-24]	; 0xffffffe8
   2f9b0:	ldr	r2, [fp, #-16]
   2f9b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9b8:	cmp	r2, r3
   2f9bc:	bne	2fa38 <__assert_fail@plt+0x1d34c>
   2f9c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f9c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f9c8:	str	r2, [r3]
   2f9cc:	b	2fa48 <__assert_fail@plt+0x1d35c>
   2f9d0:	ldr	r3, [fp, #-16]
   2f9d4:	cmp	r3, #0
   2f9d8:	beq	2fa20 <__assert_fail@plt+0x1d334>
   2f9dc:	ldr	r3, [fp, #-16]
   2f9e0:	lsl	r3, r3, #2
   2f9e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f9e8:	add	r3, r2, r3
   2f9ec:	ldr	r3, [r3]
   2f9f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f9f4:	add	r3, r2, r3
   2f9f8:	str	r3, [fp, #-20]	; 0xffffffec
   2f9fc:	ldr	r3, [fp, #-16]
   2fa00:	lsl	r3, r3, #2
   2fa04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2fa08:	add	r3, r2, r3
   2fa0c:	ldr	r3, [r3]
   2fa10:	ldr	r2, [fp, #-16]
   2fa14:	sub	r3, r2, r3
   2fa18:	str	r3, [fp, #-16]
   2fa1c:	b	2fa38 <__assert_fail@plt+0x1d34c>
   2fa20:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fa24:	add	r3, r3, #1
   2fa28:	str	r3, [fp, #-20]	; 0xffffffec
   2fa2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fa30:	add	r3, r3, #1
   2fa34:	str	r3, [fp, #-24]	; 0xffffffe8
   2fa38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fa3c:	ldrb	r3, [r3]
   2fa40:	cmp	r3, #0
   2fa44:	bne	2f978 <__assert_fail@plt+0x1d28c>
   2fa48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fa4c:	bl	614f4 <__assert_fail@plt+0x4ee08>
   2fa50:	mov	r3, #1
   2fa54:	mov	r0, r3
   2fa58:	sub	sp, fp, #4
   2fa5c:	ldr	fp, [sp]
   2fa60:	add	sp, sp, #4
   2fa64:	pop	{pc}		; (ldr pc, [sp], #4)
   2fa68:	str	fp, [sp, #-8]!
   2fa6c:	str	lr, [sp, #4]
   2fa70:	add	fp, sp, #4
   2fa74:	sub	sp, sp, #176	; 0xb0
   2fa78:	str	r0, [fp, #-168]	; 0xffffff58
   2fa7c:	str	r1, [fp, #-172]	; 0xffffff54
   2fa80:	str	r2, [fp, #-176]	; 0xffffff50
   2fa84:	ldr	r0, [fp, #-172]	; 0xffffff54
   2fa88:	bl	616f0 <__assert_fail@plt+0x4f004>
   2fa8c:	str	r0, [fp, #-28]	; 0xffffffe4
   2fa90:	mov	ip, #0
   2fa94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fa98:	mov	r2, #44	; 0x2c
   2fa9c:	umull	r0, r1, r3, r2
   2faa0:	mov	r2, #0
   2faa4:	mov	r3, #0
   2faa8:	mov	r2, r1
   2faac:	mov	r3, #0
   2fab0:	cmp	r2, #0
   2fab4:	beq	2fabc <__assert_fail@plt+0x1d3d0>
   2fab8:	mov	ip, #1
   2fabc:	cmp	r0, #0
   2fac0:	bge	2fac8 <__assert_fail@plt+0x1d3dc>
   2fac4:	mov	ip, #1
   2fac8:	mov	r3, ip
   2facc:	and	r3, r3, #1
   2fad0:	uxtb	r3, r3
   2fad4:	cmp	r3, #0
   2fad8:	bne	2fb48 <__assert_fail@plt+0x1d45c>
   2fadc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fae0:	mov	r2, #44	; 0x2c
   2fae4:	mul	r3, r2, r3
   2fae8:	cmp	r3, #4016	; 0xfb0
   2faec:	bhi	2fb2c <__assert_fail@plt+0x1d440>
   2faf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2faf4:	mov	r2, #44	; 0x2c
   2faf8:	mul	r3, r2, r3
   2fafc:	add	r3, r3, #15
   2fb00:	add	r3, r3, #7
   2fb04:	lsr	r3, r3, #3
   2fb08:	lsl	r3, r3, #3
   2fb0c:	sub	sp, sp, r3
   2fb10:	mov	r3, sp
   2fb14:	add	r3, r3, #7
   2fb18:	lsr	r3, r3, #3
   2fb1c:	lsl	r3, r3, #3
   2fb20:	add	r3, r3, #15
   2fb24:	bic	r3, r3, #15
   2fb28:	b	2fb4c <__assert_fail@plt+0x1d460>
   2fb2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fb30:	mov	r2, #44	; 0x2c
   2fb34:	mul	r3, r2, r3
   2fb38:	mov	r0, r3
   2fb3c:	bl	613c8 <__assert_fail@plt+0x4ecdc>
   2fb40:	mov	r3, r0
   2fb44:	b	2fb4c <__assert_fail@plt+0x1d460>
   2fb48:	mov	r3, #0
   2fb4c:	str	r3, [fp, #-32]	; 0xffffffe0
   2fb50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fb54:	cmp	r3, #0
   2fb58:	bne	2fb64 <__assert_fail@plt+0x1d478>
   2fb5c:	mov	r3, #0
   2fb60:	b	301ac <__assert_fail@plt+0x1dac0>
   2fb64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fb68:	str	r3, [fp, #-36]	; 0xffffffdc
   2fb6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2fb70:	mov	r3, r2
   2fb74:	lsl	r3, r3, #2
   2fb78:	add	r3, r3, r2
   2fb7c:	lsl	r3, r3, #3
   2fb80:	mov	r2, r3
   2fb84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fb88:	add	r3, r3, r2
   2fb8c:	str	r3, [fp, #-40]	; 0xffffffd8
   2fb90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2fb94:	str	r3, [fp, #-44]	; 0xffffffd4
   2fb98:	mov	r3, #0
   2fb9c:	str	r3, [fp, #-8]
   2fba0:	ldr	r3, [fp, #-172]	; 0xffffff54
   2fba4:	str	r3, [fp, #-88]	; 0xffffffa8
   2fba8:	mov	r3, #0
   2fbac:	strb	r3, [fp, #-104]	; 0xffffff98
   2fbb0:	sub	r3, fp, #104	; 0x68
   2fbb4:	add	r3, r3, #4
   2fbb8:	mov	r2, #8
   2fbbc:	mov	r1, #0
   2fbc0:	mov	r0, r3
   2fbc4:	bl	12434 <memset@plt>
   2fbc8:	mov	r3, #0
   2fbcc:	strb	r3, [fp, #-92]	; 0xffffffa4
   2fbd0:	b	2fc2c <__assert_fail@plt+0x1d540>
   2fbd4:	ldr	r2, [fp, #-8]
   2fbd8:	mov	r3, r2
   2fbdc:	lsl	r3, r3, #2
   2fbe0:	add	r3, r3, r2
   2fbe4:	lsl	r3, r3, #3
   2fbe8:	mov	r2, r3
   2fbec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fbf0:	add	r2, r3, r2
   2fbf4:	sub	r3, fp, #104	; 0x68
   2fbf8:	add	r3, r3, #16
   2fbfc:	mov	r1, r3
   2fc00:	mov	r0, r2
   2fc04:	bl	615c8 <__assert_fail@plt+0x4eedc>
   2fc08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2fc0c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2fc10:	add	r3, r2, r3
   2fc14:	str	r3, [fp, #-88]	; 0xffffffa8
   2fc18:	mov	r3, #0
   2fc1c:	strb	r3, [fp, #-92]	; 0xffffffa4
   2fc20:	ldr	r3, [fp, #-8]
   2fc24:	add	r3, r3, #1
   2fc28:	str	r3, [fp, #-8]
   2fc2c:	sub	r3, fp, #104	; 0x68
   2fc30:	mov	r0, r3
   2fc34:	bl	30d1c <__assert_fail@plt+0x1e630>
   2fc38:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   2fc3c:	eor	r3, r3, #1
   2fc40:	uxtb	r3, r3
   2fc44:	cmp	r3, #0
   2fc48:	bne	2fc58 <__assert_fail@plt+0x1d56c>
   2fc4c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2fc50:	cmp	r3, #0
   2fc54:	beq	2fc60 <__assert_fail@plt+0x1d574>
   2fc58:	mov	r3, #1
   2fc5c:	b	2fc64 <__assert_fail@plt+0x1d578>
   2fc60:	mov	r3, #0
   2fc64:	cmp	r3, #0
   2fc68:	bne	2fbd4 <__assert_fail@plt+0x1d4e8>
   2fc6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fc70:	add	r3, r3, #4
   2fc74:	mov	r2, #1
   2fc78:	str	r2, [r3]
   2fc7c:	mov	r3, #0
   2fc80:	str	r3, [fp, #-16]
   2fc84:	mov	r3, #2
   2fc88:	str	r3, [fp, #-12]
   2fc8c:	b	2fe50 <__assert_fail@plt+0x1d764>
   2fc90:	ldr	r2, [fp, #-12]
   2fc94:	mov	r3, r2
   2fc98:	lsl	r3, r3, #2
   2fc9c:	add	r3, r3, r2
   2fca0:	lsl	r3, r3, #3
   2fca4:	sub	r3, r3, #40	; 0x28
   2fca8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2fcac:	add	r3, r2, r3
   2fcb0:	str	r3, [fp, #-48]	; 0xffffffd0
   2fcb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fcb8:	ldrb	r3, [r3, #8]
   2fcbc:	cmp	r3, #0
   2fcc0:	beq	2fd30 <__assert_fail@plt+0x1d644>
   2fcc4:	ldr	r2, [fp, #-16]
   2fcc8:	mov	r3, r2
   2fccc:	lsl	r3, r3, #2
   2fcd0:	add	r3, r3, r2
   2fcd4:	lsl	r3, r3, #3
   2fcd8:	mov	r2, r3
   2fcdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fce0:	add	r3, r3, r2
   2fce4:	ldrb	r3, [r3, #8]
   2fce8:	cmp	r3, #0
   2fcec:	beq	2fd30 <__assert_fail@plt+0x1d644>
   2fcf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fcf4:	ldr	r1, [r3, #12]
   2fcf8:	ldr	r2, [fp, #-16]
   2fcfc:	mov	r3, r2
   2fd00:	lsl	r3, r3, #2
   2fd04:	add	r3, r3, r2
   2fd08:	lsl	r3, r3, #3
   2fd0c:	mov	r2, r3
   2fd10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fd14:	add	r3, r3, r2
   2fd18:	ldr	r3, [r3, #12]
   2fd1c:	cmp	r1, r3
   2fd20:	moveq	r3, #1
   2fd24:	movne	r3, #0
   2fd28:	uxtb	r3, r3
   2fd2c:	b	2fdc0 <__assert_fail@plt+0x1d6d4>
   2fd30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fd34:	ldr	r1, [r3, #4]
   2fd38:	ldr	r2, [fp, #-16]
   2fd3c:	mov	r3, r2
   2fd40:	lsl	r3, r3, #2
   2fd44:	add	r3, r3, r2
   2fd48:	lsl	r3, r3, #3
   2fd4c:	mov	r2, r3
   2fd50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fd54:	add	r3, r3, r2
   2fd58:	ldr	r3, [r3, #4]
   2fd5c:	cmp	r1, r3
   2fd60:	bne	2fdb4 <__assert_fail@plt+0x1d6c8>
   2fd64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fd68:	ldr	r0, [r3]
   2fd6c:	ldr	r2, [fp, #-16]
   2fd70:	mov	r3, r2
   2fd74:	lsl	r3, r3, #2
   2fd78:	add	r3, r3, r2
   2fd7c:	lsl	r3, r3, #3
   2fd80:	mov	r2, r3
   2fd84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fd88:	add	r3, r3, r2
   2fd8c:	ldr	r1, [r3]
   2fd90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2fd94:	ldr	r3, [r3, #4]
   2fd98:	mov	r2, r3
   2fd9c:	bl	12158 <memcmp@plt>
   2fda0:	mov	r3, r0
   2fda4:	cmp	r3, #0
   2fda8:	bne	2fdb4 <__assert_fail@plt+0x1d6c8>
   2fdac:	mov	r3, #1
   2fdb0:	b	2fdb8 <__assert_fail@plt+0x1d6cc>
   2fdb4:	mov	r3, #0
   2fdb8:	and	r3, r3, #1
   2fdbc:	uxtb	r3, r3
   2fdc0:	cmp	r3, #0
   2fdc4:	beq	2fdf8 <__assert_fail@plt+0x1d70c>
   2fdc8:	ldr	r3, [fp, #-16]
   2fdcc:	add	r3, r3, #1
   2fdd0:	str	r3, [fp, #-16]
   2fdd4:	ldr	r3, [fp, #-12]
   2fdd8:	lsl	r3, r3, #2
   2fddc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fde0:	add	r3, r2, r3
   2fde4:	ldr	r1, [fp, #-12]
   2fde8:	ldr	r2, [fp, #-16]
   2fdec:	sub	r2, r1, r2
   2fdf0:	str	r2, [r3]
   2fdf4:	b	2fe44 <__assert_fail@plt+0x1d758>
   2fdf8:	ldr	r3, [fp, #-16]
   2fdfc:	cmp	r3, #0
   2fe00:	bne	2fe20 <__assert_fail@plt+0x1d734>
   2fe04:	ldr	r3, [fp, #-12]
   2fe08:	lsl	r3, r3, #2
   2fe0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fe10:	add	r3, r2, r3
   2fe14:	ldr	r2, [fp, #-12]
   2fe18:	str	r2, [r3]
   2fe1c:	b	2fe44 <__assert_fail@plt+0x1d758>
   2fe20:	ldr	r3, [fp, #-16]
   2fe24:	lsl	r3, r3, #2
   2fe28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2fe2c:	add	r3, r2, r3
   2fe30:	ldr	r3, [r3]
   2fe34:	ldr	r2, [fp, #-16]
   2fe38:	sub	r3, r2, r3
   2fe3c:	str	r3, [fp, #-16]
   2fe40:	b	2fcb4 <__assert_fail@plt+0x1d5c8>
   2fe44:	ldr	r3, [fp, #-12]
   2fe48:	add	r3, r3, #1
   2fe4c:	str	r3, [fp, #-12]
   2fe50:	ldr	r2, [fp, #-12]
   2fe54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fe58:	cmp	r2, r3
   2fe5c:	bcc	2fc90 <__assert_fail@plt+0x1d5a4>
   2fe60:	ldr	r3, [fp, #-176]	; 0xffffff50
   2fe64:	mov	r2, #0
   2fe68:	str	r2, [r3]
   2fe6c:	mov	r3, #0
   2fe70:	str	r3, [fp, #-20]	; 0xffffffec
   2fe74:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fe78:	str	r3, [fp, #-144]	; 0xffffff70
   2fe7c:	mov	r3, #0
   2fe80:	strb	r3, [fp, #-160]	; 0xffffff60
   2fe84:	sub	r3, fp, #160	; 0xa0
   2fe88:	add	r3, r3, #4
   2fe8c:	mov	r2, #8
   2fe90:	mov	r1, #0
   2fe94:	mov	r0, r3
   2fe98:	bl	12434 <memset@plt>
   2fe9c:	mov	r3, #0
   2fea0:	strb	r3, [fp, #-148]	; 0xffffff6c
   2fea4:	ldr	r3, [fp, #-168]	; 0xffffff58
   2fea8:	str	r3, [fp, #-88]	; 0xffffffa8
   2feac:	mov	r3, #0
   2feb0:	strb	r3, [fp, #-104]	; 0xffffff98
   2feb4:	sub	r3, fp, #104	; 0x68
   2feb8:	add	r3, r3, #4
   2febc:	mov	r2, #8
   2fec0:	mov	r1, #0
   2fec4:	mov	r0, r3
   2fec8:	bl	12434 <memset@plt>
   2fecc:	mov	r3, #0
   2fed0:	strb	r3, [fp, #-92]	; 0xffffffa4
   2fed4:	b	30160 <__assert_fail@plt+0x1da74>
   2fed8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fedc:	mov	r3, r2
   2fee0:	lsl	r3, r3, #2
   2fee4:	add	r3, r3, r2
   2fee8:	lsl	r3, r3, #3
   2feec:	mov	r2, r3
   2fef0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fef4:	add	r3, r3, r2
   2fef8:	ldrb	r3, [r3, #8]
   2fefc:	cmp	r3, #0
   2ff00:	beq	2ff4c <__assert_fail@plt+0x1d860>
   2ff04:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   2ff08:	cmp	r3, #0
   2ff0c:	beq	2ff4c <__assert_fail@plt+0x1d860>
   2ff10:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ff14:	mov	r3, r2
   2ff18:	lsl	r3, r3, #2
   2ff1c:	add	r3, r3, r2
   2ff20:	lsl	r3, r3, #3
   2ff24:	mov	r2, r3
   2ff28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ff2c:	add	r3, r3, r2
   2ff30:	ldr	r2, [r3, #12]
   2ff34:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ff38:	cmp	r2, r3
   2ff3c:	moveq	r3, #1
   2ff40:	movne	r3, #0
   2ff44:	uxtb	r3, r3
   2ff48:	b	2fff0 <__assert_fail@plt+0x1d904>
   2ff4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ff50:	mov	r3, r2
   2ff54:	lsl	r3, r3, #2
   2ff58:	add	r3, r3, r2
   2ff5c:	lsl	r3, r3, #3
   2ff60:	mov	r2, r3
   2ff64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ff68:	add	r3, r3, r2
   2ff6c:	ldr	r2, [r3, #4]
   2ff70:	ldr	r3, [fp, #-84]	; 0xffffffac
   2ff74:	cmp	r2, r3
   2ff78:	bne	2ffe4 <__assert_fail@plt+0x1d8f8>
   2ff7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ff80:	mov	r3, r2
   2ff84:	lsl	r3, r3, #2
   2ff88:	add	r3, r3, r2
   2ff8c:	lsl	r3, r3, #3
   2ff90:	mov	r2, r3
   2ff94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ff98:	add	r3, r3, r2
   2ff9c:	ldr	r0, [r3]
   2ffa0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2ffa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ffa8:	mov	r3, r2
   2ffac:	lsl	r3, r3, #2
   2ffb0:	add	r3, r3, r2
   2ffb4:	lsl	r3, r3, #3
   2ffb8:	mov	r2, r3
   2ffbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ffc0:	add	r3, r3, r2
   2ffc4:	ldr	r3, [r3, #4]
   2ffc8:	mov	r2, r3
   2ffcc:	bl	12158 <memcmp@plt>
   2ffd0:	mov	r3, r0
   2ffd4:	cmp	r3, #0
   2ffd8:	bne	2ffe4 <__assert_fail@plt+0x1d8f8>
   2ffdc:	mov	r3, #1
   2ffe0:	b	2ffe8 <__assert_fail@plt+0x1d8fc>
   2ffe4:	mov	r3, #0
   2ffe8:	and	r3, r3, #1
   2ffec:	uxtb	r3, r3
   2fff0:	cmp	r3, #0
   2fff4:	beq	3003c <__assert_fail@plt+0x1d950>
   2fff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fffc:	add	r3, r3, #1
   30000:	str	r3, [fp, #-20]	; 0xffffffec
   30004:	ldr	r2, [fp, #-88]	; 0xffffffa8
   30008:	ldr	r3, [fp, #-84]	; 0xffffffac
   3000c:	add	r3, r2, r3
   30010:	str	r3, [fp, #-88]	; 0xffffffa8
   30014:	mov	r3, #0
   30018:	strb	r3, [fp, #-92]	; 0xffffffa4
   3001c:	ldr	r2, [fp, #-20]	; 0xffffffec
   30020:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30024:	cmp	r2, r3
   30028:	bne	30160 <__assert_fail@plt+0x1da74>
   3002c:	ldr	r2, [fp, #-144]	; 0xffffff70
   30030:	ldr	r3, [fp, #-176]	; 0xffffff50
   30034:	str	r2, [r3]
   30038:	b	301a0 <__assert_fail@plt+0x1dab4>
   3003c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30040:	cmp	r3, #0
   30044:	beq	300ec <__assert_fail@plt+0x1da00>
   30048:	ldr	r3, [fp, #-20]	; 0xffffffec
   3004c:	lsl	r3, r3, #2
   30050:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30054:	add	r3, r2, r3
   30058:	ldr	r3, [r3]
   3005c:	str	r3, [fp, #-24]	; 0xffffffe8
   30060:	ldr	r2, [fp, #-20]	; 0xffffffec
   30064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30068:	sub	r3, r2, r3
   3006c:	str	r3, [fp, #-20]	; 0xffffffec
   30070:	b	300dc <__assert_fail@plt+0x1d9f0>
   30074:	sub	r3, fp, #160	; 0xa0
   30078:	mov	r0, r3
   3007c:	bl	30d1c <__assert_fail@plt+0x1e630>
   30080:	ldrb	r3, [fp, #-136]	; 0xffffff78
   30084:	eor	r3, r3, #1
   30088:	uxtb	r3, r3
   3008c:	cmp	r3, #0
   30090:	bne	300a0 <__assert_fail@plt+0x1d9b4>
   30094:	ldr	r3, [fp, #-132]	; 0xffffff7c
   30098:	cmp	r3, #0
   3009c:	beq	300a8 <__assert_fail@plt+0x1d9bc>
   300a0:	mov	r3, #1
   300a4:	b	300ac <__assert_fail@plt+0x1d9c0>
   300a8:	mov	r3, #0
   300ac:	cmp	r3, #0
   300b0:	bne	300b8 <__assert_fail@plt+0x1d9cc>
   300b4:	bl	12698 <abort@plt>
   300b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   300bc:	ldr	r3, [fp, #-140]	; 0xffffff74
   300c0:	add	r3, r2, r3
   300c4:	str	r3, [fp, #-144]	; 0xffffff70
   300c8:	mov	r3, #0
   300cc:	strb	r3, [fp, #-148]	; 0xffffff6c
   300d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   300d4:	sub	r3, r3, #1
   300d8:	str	r3, [fp, #-24]	; 0xffffffe8
   300dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   300e0:	cmp	r3, #0
   300e4:	bne	30074 <__assert_fail@plt+0x1d988>
   300e8:	b	30160 <__assert_fail@plt+0x1da74>
   300ec:	sub	r3, fp, #160	; 0xa0
   300f0:	mov	r0, r3
   300f4:	bl	30d1c <__assert_fail@plt+0x1e630>
   300f8:	ldrb	r3, [fp, #-136]	; 0xffffff78
   300fc:	eor	r3, r3, #1
   30100:	uxtb	r3, r3
   30104:	cmp	r3, #0
   30108:	bne	30118 <__assert_fail@plt+0x1da2c>
   3010c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   30110:	cmp	r3, #0
   30114:	beq	30120 <__assert_fail@plt+0x1da34>
   30118:	mov	r3, #1
   3011c:	b	30124 <__assert_fail@plt+0x1da38>
   30120:	mov	r3, #0
   30124:	cmp	r3, #0
   30128:	bne	30130 <__assert_fail@plt+0x1da44>
   3012c:	bl	12698 <abort@plt>
   30130:	ldr	r2, [fp, #-144]	; 0xffffff70
   30134:	ldr	r3, [fp, #-140]	; 0xffffff74
   30138:	add	r3, r2, r3
   3013c:	str	r3, [fp, #-144]	; 0xffffff70
   30140:	mov	r3, #0
   30144:	strb	r3, [fp, #-148]	; 0xffffff6c
   30148:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3014c:	ldr	r3, [fp, #-84]	; 0xffffffac
   30150:	add	r3, r2, r3
   30154:	str	r3, [fp, #-88]	; 0xffffffa8
   30158:	mov	r3, #0
   3015c:	strb	r3, [fp, #-92]	; 0xffffffa4
   30160:	sub	r3, fp, #104	; 0x68
   30164:	mov	r0, r3
   30168:	bl	30d1c <__assert_fail@plt+0x1e630>
   3016c:	ldrb	r3, [fp, #-80]	; 0xffffffb0
   30170:	eor	r3, r3, #1
   30174:	uxtb	r3, r3
   30178:	cmp	r3, #0
   3017c:	bne	3018c <__assert_fail@plt+0x1daa0>
   30180:	ldr	r3, [fp, #-76]	; 0xffffffb4
   30184:	cmp	r3, #0
   30188:	beq	30194 <__assert_fail@plt+0x1daa8>
   3018c:	mov	r3, #1
   30190:	b	30198 <__assert_fail@plt+0x1daac>
   30194:	mov	r3, #0
   30198:	cmp	r3, #0
   3019c:	bne	2fed8 <__assert_fail@plt+0x1d7ec>
   301a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   301a4:	bl	614f4 <__assert_fail@plt+0x4ee08>
   301a8:	mov	r3, #1
   301ac:	mov	r0, r3
   301b0:	sub	sp, fp, #4
   301b4:	ldr	fp, [sp]
   301b8:	add	sp, sp, #4
   301bc:	pop	{pc}		; (ldr pc, [sp], #4)
   301c0:	str	r4, [sp, #-12]!
   301c4:	str	fp, [sp, #4]
   301c8:	str	lr, [sp, #8]
   301cc:	add	fp, sp, #8
   301d0:	sub	sp, sp, #356	; 0x164
   301d4:	str	r0, [fp, #-360]	; 0xfffffe98
   301d8:	str	r1, [fp, #-364]	; 0xfffffe94
   301dc:	bl	12254 <__ctype_get_mb_cur_max@plt>
   301e0:	mov	r3, r0
   301e4:	cmp	r3, #1
   301e8:	bls	30750 <__assert_fail@plt+0x1e064>
   301ec:	ldr	r3, [fp, #-364]	; 0xfffffe94
   301f0:	str	r3, [fp, #-336]	; 0xfffffeb0
   301f4:	mov	r3, #0
   301f8:	strb	r3, [fp, #-352]	; 0xfffffea0
   301fc:	sub	r3, fp, #352	; 0x160
   30200:	add	r3, r3, #4
   30204:	mov	r2, #8
   30208:	mov	r1, #0
   3020c:	mov	r0, r3
   30210:	bl	12434 <memset@plt>
   30214:	mov	r3, #0
   30218:	strb	r3, [fp, #-340]	; 0xfffffeac
   3021c:	sub	r3, fp, #352	; 0x160
   30220:	mov	r0, r3
   30224:	bl	30d1c <__assert_fail@plt+0x1e630>
   30228:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   3022c:	eor	r3, r3, #1
   30230:	uxtb	r3, r3
   30234:	cmp	r3, #0
   30238:	bne	30248 <__assert_fail@plt+0x1db5c>
   3023c:	ldr	r3, [fp, #-324]	; 0xfffffebc
   30240:	cmp	r3, #0
   30244:	beq	30250 <__assert_fail@plt+0x1db64>
   30248:	mov	r3, #1
   3024c:	b	30254 <__assert_fail@plt+0x1db68>
   30250:	mov	r3, #0
   30254:	cmp	r3, #0
   30258:	beq	30748 <__assert_fail@plt+0x1e05c>
   3025c:	mov	r3, #1
   30260:	strb	r3, [fp, #-13]
   30264:	mov	r3, #0
   30268:	str	r3, [fp, #-20]	; 0xffffffec
   3026c:	mov	r3, #0
   30270:	str	r3, [fp, #-24]	; 0xffffffe8
   30274:	mov	r3, #0
   30278:	str	r3, [fp, #-28]	; 0xffffffe4
   3027c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   30280:	str	r3, [fp, #-280]	; 0xfffffee8
   30284:	mov	r3, #0
   30288:	strb	r3, [fp, #-296]	; 0xfffffed8
   3028c:	sub	r3, fp, #296	; 0x128
   30290:	add	r3, r3, #4
   30294:	mov	r2, #8
   30298:	mov	r1, #0
   3029c:	mov	r0, r3
   302a0:	bl	12434 <memset@plt>
   302a4:	mov	r3, #0
   302a8:	strb	r3, [fp, #-284]	; 0xfffffee4
   302ac:	ldr	r3, [fp, #-360]	; 0xfffffe98
   302b0:	str	r3, [fp, #-224]	; 0xffffff20
   302b4:	mov	r3, #0
   302b8:	strb	r3, [fp, #-240]	; 0xffffff10
   302bc:	sub	r3, fp, #240	; 0xf0
   302c0:	add	r3, r3, #4
   302c4:	mov	r2, #8
   302c8:	mov	r1, #0
   302cc:	mov	r0, r3
   302d0:	bl	12434 <memset@plt>
   302d4:	mov	r3, #0
   302d8:	strb	r3, [fp, #-228]	; 0xffffff1c
   302dc:	sub	r3, fp, #240	; 0xf0
   302e0:	mov	r0, r3
   302e4:	bl	30d1c <__assert_fail@plt+0x1e630>
   302e8:	ldrb	r3, [fp, #-216]	; 0xffffff28
   302ec:	eor	r3, r3, #1
   302f0:	uxtb	r3, r3
   302f4:	cmp	r3, #0
   302f8:	bne	30308 <__assert_fail@plt+0x1dc1c>
   302fc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   30300:	cmp	r3, #0
   30304:	beq	30310 <__assert_fail@plt+0x1dc24>
   30308:	mov	r3, #1
   3030c:	b	30314 <__assert_fail@plt+0x1dc28>
   30310:	mov	r3, #0
   30314:	cmp	r3, #0
   30318:	bne	30324 <__assert_fail@plt+0x1dc38>
   3031c:	mov	r3, #0
   30320:	b	30960 <__assert_fail@plt+0x1e274>
   30324:	ldrb	r3, [fp, #-13]
   30328:	cmp	r3, #0
   3032c:	beq	3045c <__assert_fail@plt+0x1dd70>
   30330:	ldr	r3, [fp, #-20]	; 0xffffffec
   30334:	cmp	r3, #9
   30338:	bls	3045c <__assert_fail@plt+0x1dd70>
   3033c:	ldr	r2, [fp, #-20]	; 0xffffffec
   30340:	mov	r3, r2
   30344:	lsl	r3, r3, #2
   30348:	add	r3, r3, r2
   3034c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30350:	cmp	r2, r3
   30354:	bcc	3045c <__assert_fail@plt+0x1dd70>
   30358:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3035c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30360:	sub	r3, r2, r3
   30364:	str	r3, [fp, #-32]	; 0xffffffe0
   30368:	b	30390 <__assert_fail@plt+0x1dca4>
   3036c:	ldr	r2, [fp, #-280]	; 0xfffffee8
   30370:	ldr	r3, [fp, #-276]	; 0xfffffeec
   30374:	add	r3, r2, r3
   30378:	str	r3, [fp, #-280]	; 0xfffffee8
   3037c:	mov	r3, #0
   30380:	strb	r3, [fp, #-284]	; 0xfffffee4
   30384:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30388:	sub	r3, r3, #1
   3038c:	str	r3, [fp, #-32]	; 0xffffffe0
   30390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30394:	cmp	r3, #0
   30398:	beq	303dc <__assert_fail@plt+0x1dcf0>
   3039c:	sub	r3, fp, #296	; 0x128
   303a0:	mov	r0, r3
   303a4:	bl	30d1c <__assert_fail@plt+0x1e630>
   303a8:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   303ac:	eor	r3, r3, #1
   303b0:	uxtb	r3, r3
   303b4:	cmp	r3, #0
   303b8:	bne	303c8 <__assert_fail@plt+0x1dcdc>
   303bc:	ldr	r3, [fp, #-268]	; 0xfffffef4
   303c0:	cmp	r3, #0
   303c4:	beq	303d0 <__assert_fail@plt+0x1dce4>
   303c8:	mov	r3, #1
   303cc:	b	303d4 <__assert_fail@plt+0x1dce8>
   303d0:	mov	r3, #0
   303d4:	cmp	r3, #0
   303d8:	bne	3036c <__assert_fail@plt+0x1dc80>
   303dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   303e0:	str	r3, [fp, #-28]	; 0xffffffe4
   303e4:	sub	r3, fp, #296	; 0x128
   303e8:	mov	r0, r3
   303ec:	bl	30d1c <__assert_fail@plt+0x1e630>
   303f0:	ldrb	r3, [fp, #-272]	; 0xfffffef0
   303f4:	eor	r3, r3, #1
   303f8:	uxtb	r3, r3
   303fc:	cmp	r3, #0
   30400:	bne	30410 <__assert_fail@plt+0x1dd24>
   30404:	ldr	r3, [fp, #-268]	; 0xfffffef4
   30408:	cmp	r3, #0
   3040c:	beq	30418 <__assert_fail@plt+0x1dd2c>
   30410:	mov	r3, #1
   30414:	b	3041c <__assert_fail@plt+0x1dd30>
   30418:	mov	r3, #0
   3041c:	cmp	r3, #0
   30420:	bne	3045c <__assert_fail@plt+0x1dd70>
   30424:	sub	r3, fp, #68	; 0x44
   30428:	mov	r2, r3
   3042c:	ldr	r1, [fp, #-364]	; 0xfffffe94
   30430:	ldr	r0, [fp, #-360]	; 0xfffffe98
   30434:	bl	2fa68 <__assert_fail@plt+0x1d37c>
   30438:	mov	r3, r0
   3043c:	strb	r3, [fp, #-61]	; 0xffffffc3
   30440:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   30444:	cmp	r3, #0
   30448:	beq	30454 <__assert_fail@plt+0x1dd68>
   3044c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   30450:	b	30960 <__assert_fail@plt+0x1e274>
   30454:	mov	r3, #0
   30458:	strb	r3, [fp, #-13]
   3045c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30460:	add	r3, r3, #1
   30464:	str	r3, [fp, #-20]	; 0xffffffec
   30468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3046c:	add	r3, r3, #1
   30470:	str	r3, [fp, #-24]	; 0xffffffe8
   30474:	ldrb	r3, [fp, #-216]	; 0xffffff28
   30478:	cmp	r3, #0
   3047c:	beq	304a8 <__assert_fail@plt+0x1ddbc>
   30480:	ldrb	r3, [fp, #-328]	; 0xfffffeb8
   30484:	cmp	r3, #0
   30488:	beq	304a8 <__assert_fail@plt+0x1ddbc>
   3048c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   30490:	ldr	r3, [fp, #-324]	; 0xfffffebc
   30494:	cmp	r2, r3
   30498:	moveq	r3, #1
   3049c:	movne	r3, #0
   304a0:	uxtb	r3, r3
   304a4:	b	304ec <__assert_fail@plt+0x1de00>
   304a8:	ldr	r2, [fp, #-220]	; 0xffffff24
   304ac:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   304b0:	cmp	r2, r3
   304b4:	bne	304e0 <__assert_fail@plt+0x1ddf4>
   304b8:	ldr	r3, [fp, #-224]	; 0xffffff20
   304bc:	ldr	r1, [fp, #-336]	; 0xfffffeb0
   304c0:	ldr	r2, [fp, #-220]	; 0xffffff24
   304c4:	mov	r0, r3
   304c8:	bl	12158 <memcmp@plt>
   304cc:	mov	r3, r0
   304d0:	cmp	r3, #0
   304d4:	bne	304e0 <__assert_fail@plt+0x1ddf4>
   304d8:	mov	r3, #1
   304dc:	b	304e4 <__assert_fail@plt+0x1ddf8>
   304e0:	mov	r3, #0
   304e4:	and	r3, r3, #1
   304e8:	uxtb	r3, r3
   304ec:	cmp	r3, #0
   304f0:	beq	3072c <__assert_fail@plt+0x1e040>
   304f4:	sub	r3, fp, #184	; 0xb8
   304f8:	sub	r2, fp, #240	; 0xf0
   304fc:	ldrd	r0, [r2]
   30500:	strd	r0, [r3]
   30504:	ldrd	r0, [r2, #8]
   30508:	strd	r0, [r3, #8]
   3050c:	ldrd	r0, [r2, #16]
   30510:	strd	r0, [r3, #16]
   30514:	ldrd	r0, [r2, #24]
   30518:	strd	r0, [r3, #24]
   3051c:	ldrd	r0, [r2, #32]
   30520:	strd	r0, [r3, #32]
   30524:	ldrd	r0, [r2, #40]	; 0x28
   30528:	strd	r0, [r3, #40]	; 0x28
   3052c:	ldrd	r0, [r2, #48]	; 0x30
   30530:	strd	r0, [r3, #48]	; 0x30
   30534:	ldr	r2, [fp, #-168]	; 0xffffff58
   30538:	ldr	r3, [fp, #-164]	; 0xffffff5c
   3053c:	add	r3, r2, r3
   30540:	str	r3, [fp, #-168]	; 0xffffff58
   30544:	mov	r3, #0
   30548:	strb	r3, [fp, #-172]	; 0xffffff54
   3054c:	ldr	r3, [fp, #-364]	; 0xfffffe94
   30550:	str	r3, [fp, #-112]	; 0xffffff90
   30554:	mov	r3, #0
   30558:	strb	r3, [fp, #-128]	; 0xffffff80
   3055c:	sub	r3, fp, #128	; 0x80
   30560:	add	r3, r3, #4
   30564:	mov	r2, #8
   30568:	mov	r1, #0
   3056c:	mov	r0, r3
   30570:	bl	12434 <memset@plt>
   30574:	mov	r3, #0
   30578:	strb	r3, [fp, #-116]	; 0xffffff8c
   3057c:	sub	r3, fp, #128	; 0x80
   30580:	mov	r0, r3
   30584:	bl	30d1c <__assert_fail@plt+0x1e630>
   30588:	ldrb	r3, [fp, #-104]	; 0xffffff98
   3058c:	eor	r3, r3, #1
   30590:	uxtb	r3, r3
   30594:	cmp	r3, #0
   30598:	bne	305a8 <__assert_fail@plt+0x1debc>
   3059c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   305a0:	cmp	r3, #0
   305a4:	beq	305b0 <__assert_fail@plt+0x1dec4>
   305a8:	mov	r3, #1
   305ac:	b	305b4 <__assert_fail@plt+0x1dec8>
   305b0:	mov	r3, #0
   305b4:	cmp	r3, #0
   305b8:	bne	305c0 <__assert_fail@plt+0x1ded4>
   305bc:	bl	12698 <abort@plt>
   305c0:	ldr	r2, [fp, #-112]	; 0xffffff90
   305c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   305c8:	add	r3, r2, r3
   305cc:	str	r3, [fp, #-112]	; 0xffffff90
   305d0:	mov	r3, #0
   305d4:	strb	r3, [fp, #-116]	; 0xffffff8c
   305d8:	sub	r3, fp, #128	; 0x80
   305dc:	mov	r0, r3
   305e0:	bl	30d1c <__assert_fail@plt+0x1e630>
   305e4:	ldrb	r3, [fp, #-104]	; 0xffffff98
   305e8:	eor	r3, r3, #1
   305ec:	uxtb	r3, r3
   305f0:	cmp	r3, #0
   305f4:	bne	30604 <__assert_fail@plt+0x1df18>
   305f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   305fc:	cmp	r3, #0
   30600:	beq	3060c <__assert_fail@plt+0x1df20>
   30604:	mov	r3, #1
   30608:	b	30610 <__assert_fail@plt+0x1df24>
   3060c:	mov	r3, #0
   30610:	cmp	r3, #0
   30614:	bne	30620 <__assert_fail@plt+0x1df34>
   30618:	ldr	r3, [fp, #-224]	; 0xffffff20
   3061c:	b	30960 <__assert_fail@plt+0x1e274>
   30620:	sub	r3, fp, #184	; 0xb8
   30624:	mov	r0, r3
   30628:	bl	30d1c <__assert_fail@plt+0x1e630>
   3062c:	ldrb	r3, [fp, #-160]	; 0xffffff60
   30630:	eor	r3, r3, #1
   30634:	uxtb	r3, r3
   30638:	cmp	r3, #0
   3063c:	bne	3064c <__assert_fail@plt+0x1df60>
   30640:	ldr	r3, [fp, #-156]	; 0xffffff64
   30644:	cmp	r3, #0
   30648:	beq	30654 <__assert_fail@plt+0x1df68>
   3064c:	mov	r3, #1
   30650:	b	30658 <__assert_fail@plt+0x1df6c>
   30654:	mov	r3, #0
   30658:	cmp	r3, #0
   3065c:	bne	30668 <__assert_fail@plt+0x1df7c>
   30660:	mov	r3, #0
   30664:	b	30960 <__assert_fail@plt+0x1e274>
   30668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3066c:	add	r3, r3, #1
   30670:	str	r3, [fp, #-24]	; 0xffffffe8
   30674:	ldrb	r3, [fp, #-160]	; 0xffffff60
   30678:	cmp	r3, #0
   3067c:	beq	306a8 <__assert_fail@plt+0x1dfbc>
   30680:	ldrb	r3, [fp, #-104]	; 0xffffff98
   30684:	cmp	r3, #0
   30688:	beq	306a8 <__assert_fail@plt+0x1dfbc>
   3068c:	ldr	r2, [fp, #-156]	; 0xffffff64
   30690:	ldr	r3, [fp, #-100]	; 0xffffff9c
   30694:	cmp	r2, r3
   30698:	movne	r3, #1
   3069c:	moveq	r3, #0
   306a0:	uxtb	r3, r3
   306a4:	b	306ec <__assert_fail@plt+0x1e000>
   306a8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   306ac:	ldr	r3, [fp, #-108]	; 0xffffff94
   306b0:	cmp	r2, r3
   306b4:	bne	306d8 <__assert_fail@plt+0x1dfec>
   306b8:	ldr	r3, [fp, #-168]	; 0xffffff58
   306bc:	ldr	r1, [fp, #-112]	; 0xffffff90
   306c0:	ldr	r2, [fp, #-164]	; 0xffffff5c
   306c4:	mov	r0, r3
   306c8:	bl	12158 <memcmp@plt>
   306cc:	mov	r3, r0
   306d0:	cmp	r3, #0
   306d4:	beq	306e0 <__assert_fail@plt+0x1dff4>
   306d8:	mov	r3, #1
   306dc:	b	306e4 <__assert_fail@plt+0x1dff8>
   306e0:	mov	r3, #0
   306e4:	and	r3, r3, #1
   306e8:	uxtb	r3, r3
   306ec:	cmp	r3, #0
   306f0:	bne	30728 <__assert_fail@plt+0x1e03c>
   306f4:	ldr	r2, [fp, #-168]	; 0xffffff58
   306f8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   306fc:	add	r3, r2, r3
   30700:	str	r3, [fp, #-168]	; 0xffffff58
   30704:	mov	r3, #0
   30708:	strb	r3, [fp, #-172]	; 0xffffff54
   3070c:	ldr	r2, [fp, #-112]	; 0xffffff90
   30710:	ldr	r3, [fp, #-108]	; 0xffffff94
   30714:	add	r3, r2, r3
   30718:	str	r3, [fp, #-112]	; 0xffffff90
   3071c:	mov	r3, #0
   30720:	strb	r3, [fp, #-116]	; 0xffffff8c
   30724:	b	305d8 <__assert_fail@plt+0x1deec>
   30728:	nop	{0}
   3072c:	ldr	r2, [fp, #-224]	; 0xffffff20
   30730:	ldr	r3, [fp, #-220]	; 0xffffff24
   30734:	add	r3, r2, r3
   30738:	str	r3, [fp, #-224]	; 0xffffff20
   3073c:	mov	r3, #0
   30740:	strb	r3, [fp, #-228]	; 0xffffff1c
   30744:	b	302dc <__assert_fail@plt+0x1dbf0>
   30748:	ldr	r3, [fp, #-360]	; 0xfffffe98
   3074c:	b	30960 <__assert_fail@plt+0x1e274>
   30750:	ldr	r3, [fp, #-364]	; 0xfffffe94
   30754:	ldrb	r3, [r3]
   30758:	cmp	r3, #0
   3075c:	beq	3095c <__assert_fail@plt+0x1e270>
   30760:	mov	r3, #1
   30764:	strb	r3, [fp, #-33]	; 0xffffffdf
   30768:	mov	r3, #0
   3076c:	str	r3, [fp, #-40]	; 0xffffffd8
   30770:	mov	r3, #0
   30774:	str	r3, [fp, #-44]	; 0xffffffd4
   30778:	mov	r3, #0
   3077c:	str	r3, [fp, #-48]	; 0xffffffd0
   30780:	ldr	r3, [fp, #-364]	; 0xfffffe94
   30784:	str	r3, [fp, #-52]	; 0xffffffcc
   30788:	ldr	r3, [fp, #-364]	; 0xfffffe94
   3078c:	add	r2, r3, #1
   30790:	str	r2, [fp, #-364]	; 0xfffffe94
   30794:	ldrb	r3, [r3]
   30798:	strb	r3, [fp, #-62]	; 0xffffffc2
   3079c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   307a0:	ldrb	r3, [r3]
   307a4:	cmp	r3, #0
   307a8:	bne	307b4 <__assert_fail@plt+0x1e0c8>
   307ac:	mov	r3, #0
   307b0:	b	30960 <__assert_fail@plt+0x1e274>
   307b4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   307b8:	cmp	r3, #0
   307bc:	beq	30898 <__assert_fail@plt+0x1e1ac>
   307c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   307c4:	cmp	r3, #9
   307c8:	bls	30898 <__assert_fail@plt+0x1e1ac>
   307cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   307d0:	mov	r3, r2
   307d4:	lsl	r3, r3, #2
   307d8:	add	r3, r3, r2
   307dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   307e0:	cmp	r2, r3
   307e4:	bcc	30898 <__assert_fail@plt+0x1e1ac>
   307e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   307ec:	cmp	r3, #0
   307f0:	beq	3083c <__assert_fail@plt+0x1e150>
   307f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   307f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   307fc:	sub	r3, r2, r3
   30800:	mov	r1, r3
   30804:	ldr	r0, [fp, #-52]	; 0xffffffcc
   30808:	bl	124dc <strnlen@plt>
   3080c:	mov	r2, r0
   30810:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30814:	add	r3, r3, r2
   30818:	str	r3, [fp, #-52]	; 0xffffffcc
   3081c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30820:	ldrb	r3, [r3]
   30824:	cmp	r3, #0
   30828:	bne	30834 <__assert_fail@plt+0x1e148>
   3082c:	mov	r3, #0
   30830:	str	r3, [fp, #-52]	; 0xffffffcc
   30834:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30838:	str	r3, [fp, #-48]	; 0xffffffd0
   3083c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30840:	cmp	r3, #0
   30844:	bne	30898 <__assert_fail@plt+0x1e1ac>
   30848:	ldr	r3, [fp, #-364]	; 0xfffffe94
   3084c:	sub	r4, r3, #1
   30850:	ldr	r3, [fp, #-364]	; 0xfffffe94
   30854:	sub	r3, r3, #1
   30858:	mov	r0, r3
   3085c:	bl	123bc <strlen@plt>
   30860:	mov	r2, r0
   30864:	sub	r3, fp, #72	; 0x48
   30868:	mov	r1, r4
   3086c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   30870:	bl	2f774 <__assert_fail@plt+0x1d088>
   30874:	mov	r3, r0
   30878:	strb	r3, [fp, #-63]	; 0xffffffc1
   3087c:	ldrb	r3, [fp, #-63]	; 0xffffffc1
   30880:	cmp	r3, #0
   30884:	beq	30890 <__assert_fail@plt+0x1e1a4>
   30888:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3088c:	b	30960 <__assert_fail@plt+0x1e274>
   30890:	mov	r3, #0
   30894:	strb	r3, [fp, #-33]	; 0xffffffdf
   30898:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3089c:	add	r3, r3, #1
   308a0:	str	r3, [fp, #-40]	; 0xffffffd8
   308a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   308a8:	add	r3, r3, #1
   308ac:	str	r3, [fp, #-44]	; 0xffffffd4
   308b0:	ldr	r3, [fp, #-360]	; 0xfffffe98
   308b4:	ldrb	r3, [r3]
   308b8:	ldrb	r2, [fp, #-62]	; 0xffffffc2
   308bc:	cmp	r2, r3
   308c0:	bne	3094c <__assert_fail@plt+0x1e260>
   308c4:	ldr	r3, [fp, #-360]	; 0xfffffe98
   308c8:	add	r3, r3, #1
   308cc:	str	r3, [fp, #-56]	; 0xffffffc8
   308d0:	ldr	r3, [fp, #-364]	; 0xfffffe94
   308d4:	str	r3, [fp, #-60]	; 0xffffffc4
   308d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   308dc:	ldrb	r3, [r3]
   308e0:	cmp	r3, #0
   308e4:	bne	308f0 <__assert_fail@plt+0x1e204>
   308e8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   308ec:	b	30960 <__assert_fail@plt+0x1e274>
   308f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   308f4:	ldrb	r3, [r3]
   308f8:	cmp	r3, #0
   308fc:	bne	30908 <__assert_fail@plt+0x1e21c>
   30900:	mov	r3, #0
   30904:	b	30960 <__assert_fail@plt+0x1e274>
   30908:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3090c:	add	r3, r3, #1
   30910:	str	r3, [fp, #-44]	; 0xffffffd4
   30914:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30918:	ldrb	r2, [r3]
   3091c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   30920:	ldrb	r3, [r3]
   30924:	cmp	r2, r3
   30928:	bne	30948 <__assert_fail@plt+0x1e25c>
   3092c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30930:	add	r3, r3, #1
   30934:	str	r3, [fp, #-56]	; 0xffffffc8
   30938:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3093c:	add	r3, r3, #1
   30940:	str	r3, [fp, #-60]	; 0xffffffc4
   30944:	b	308d8 <__assert_fail@plt+0x1e1ec>
   30948:	nop	{0}
   3094c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   30950:	add	r3, r3, #1
   30954:	str	r3, [fp, #-360]	; 0xfffffe98
   30958:	b	3079c <__assert_fail@plt+0x1e0b0>
   3095c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   30960:	mov	r0, r3
   30964:	sub	sp, fp, #8
   30968:	ldr	r4, [sp]
   3096c:	ldr	fp, [sp, #4]
   30970:	add	sp, sp, #8
   30974:	pop	{pc}		; (ldr pc, [sp], #4)
   30978:	str	fp, [sp, #-8]!
   3097c:	str	lr, [sp, #4]
   30980:	add	fp, sp, #4
   30984:	sub	sp, sp, #8
   30988:	str	r0, [fp, #-8]
   3098c:	str	r1, [fp, #-12]
   30990:	ldr	r0, [fp, #-8]
   30994:	bl	123bc <strlen@plt>
   30998:	mov	r3, r0
   3099c:	ldr	r2, [fp, #-12]
   309a0:	mov	r1, r3
   309a4:	ldr	r0, [fp, #-8]
   309a8:	bl	309c4 <__assert_fail@plt+0x1e2d8>
   309ac:	mov	r3, r0
   309b0:	mov	r0, r3
   309b4:	sub	sp, fp, #4
   309b8:	ldr	fp, [sp]
   309bc:	add	sp, sp, #4
   309c0:	pop	{pc}		; (ldr pc, [sp], #4)
   309c4:	str	fp, [sp, #-8]!
   309c8:	str	lr, [sp, #4]
   309cc:	add	fp, sp, #4
   309d0:	sub	sp, sp, #56	; 0x38
   309d4:	str	r0, [fp, #-48]	; 0xffffffd0
   309d8:	str	r1, [fp, #-52]	; 0xffffffcc
   309dc:	str	r2, [fp, #-56]	; 0xffffffc8
   309e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   309e4:	str	r3, [fp, #-8]
   309e8:	ldr	r2, [fp, #-8]
   309ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   309f0:	add	r3, r2, r3
   309f4:	str	r3, [fp, #-20]	; 0xffffffec
   309f8:	mov	r3, #0
   309fc:	str	r3, [fp, #-12]
   30a00:	bl	12254 <__ctype_get_mb_cur_max@plt>
   30a04:	mov	r3, r0
   30a08:	cmp	r3, #1
   30a0c:	bls	30cd0 <__assert_fail@plt+0x1e5e4>
   30a10:	b	30c04 <__assert_fail@plt+0x1e518>
   30a14:	ldr	r3, [fp, #-8]
   30a18:	ldrb	r3, [r3]
   30a1c:	cmp	r3, #63	; 0x3f
   30a20:	bgt	30a3c <__assert_fail@plt+0x1e350>
   30a24:	cmp	r3, #37	; 0x25
   30a28:	bge	30a58 <__assert_fail@plt+0x1e36c>
   30a2c:	sub	r3, r3, #32
   30a30:	cmp	r3, #3
   30a34:	bhi	30a74 <__assert_fail@plt+0x1e388>
   30a38:	b	30a58 <__assert_fail@plt+0x1e36c>
   30a3c:	cmp	r3, #65	; 0x41
   30a40:	blt	30a74 <__assert_fail@plt+0x1e388>
   30a44:	cmp	r3, #95	; 0x5f
   30a48:	ble	30a58 <__assert_fail@plt+0x1e36c>
   30a4c:	sub	r3, r3, #97	; 0x61
   30a50:	cmp	r3, #29
   30a54:	bhi	30a74 <__assert_fail@plt+0x1e388>
   30a58:	ldr	r3, [fp, #-8]
   30a5c:	add	r3, r3, #1
   30a60:	str	r3, [fp, #-8]
   30a64:	ldr	r3, [fp, #-12]
   30a68:	add	r3, r3, #1
   30a6c:	str	r3, [fp, #-12]
   30a70:	b	30c04 <__assert_fail@plt+0x1e518>
   30a74:	sub	r3, fp, #36	; 0x24
   30a78:	mov	r2, #8
   30a7c:	mov	r1, #0
   30a80:	mov	r0, r3
   30a84:	bl	12434 <memset@plt>
   30a88:	ldr	r2, [fp, #-20]	; 0xffffffec
   30a8c:	ldr	r3, [fp, #-8]
   30a90:	sub	r3, r2, r3
   30a94:	mov	r2, r3
   30a98:	sub	r3, fp, #36	; 0x24
   30a9c:	sub	r0, fp, #40	; 0x28
   30aa0:	ldr	r1, [fp, #-8]
   30aa4:	bl	435a0 <__assert_fail@plt+0x30eb4>
   30aa8:	str	r0, [fp, #-16]
   30aac:	ldr	r3, [fp, #-16]
   30ab0:	cmn	r3, #1
   30ab4:	bne	30aec <__assert_fail@plt+0x1e400>
   30ab8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30abc:	and	r3, r3, #1
   30ac0:	cmp	r3, #0
   30ac4:	bne	30ae4 <__assert_fail@plt+0x1e3f8>
   30ac8:	ldr	r3, [fp, #-8]
   30acc:	add	r3, r3, #1
   30ad0:	str	r3, [fp, #-8]
   30ad4:	ldr	r3, [fp, #-12]
   30ad8:	add	r3, r3, #1
   30adc:	str	r3, [fp, #-12]
   30ae0:	b	30c00 <__assert_fail@plt+0x1e514>
   30ae4:	mvn	r3, #0
   30ae8:	b	30d08 <__assert_fail@plt+0x1e61c>
   30aec:	ldr	r3, [fp, #-16]
   30af0:	cmn	r3, #2
   30af4:	bne	30b2c <__assert_fail@plt+0x1e440>
   30af8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30afc:	and	r3, r3, #1
   30b00:	cmp	r3, #0
   30b04:	bne	30b24 <__assert_fail@plt+0x1e438>
   30b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   30b0c:	str	r3, [fp, #-8]
   30b10:	ldr	r3, [fp, #-12]
   30b14:	add	r3, r3, #1
   30b18:	str	r3, [fp, #-12]
   30b1c:	nop	{0}
   30b20:	b	30c00 <__assert_fail@plt+0x1e514>
   30b24:	mvn	r3, #0
   30b28:	b	30d08 <__assert_fail@plt+0x1e61c>
   30b2c:	ldr	r3, [fp, #-16]
   30b30:	cmp	r3, #0
   30b34:	bne	30b40 <__assert_fail@plt+0x1e454>
   30b38:	mov	r3, #1
   30b3c:	str	r3, [fp, #-16]
   30b40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30b44:	mov	r0, r3
   30b48:	bl	12074 <wcwidth@plt>
   30b4c:	str	r0, [fp, #-24]	; 0xffffffe8
   30b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30b54:	cmp	r3, #0
   30b58:	blt	30b8c <__assert_fail@plt+0x1e4a0>
   30b5c:	ldr	r2, [fp, #-12]
   30b60:	movw	r3, #65535	; 0xffff
   30b64:	movt	r3, #32767	; 0x7fff
   30b68:	sub	r3, r3, r2
   30b6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30b70:	cmp	r2, r3
   30b74:	bgt	30ce8 <__assert_fail@plt+0x1e5fc>
   30b78:	ldr	r2, [fp, #-12]
   30b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30b80:	add	r3, r2, r3
   30b84:	str	r3, [fp, #-12]
   30b88:	b	30bd8 <__assert_fail@plt+0x1e4ec>
   30b8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30b90:	and	r3, r3, #2
   30b94:	cmp	r3, #0
   30b98:	bne	30bd0 <__assert_fail@plt+0x1e4e4>
   30b9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30ba0:	mov	r0, r3
   30ba4:	bl	121d0 <iswcntrl@plt>
   30ba8:	mov	r3, r0
   30bac:	cmp	r3, #0
   30bb0:	bne	30bd8 <__assert_fail@plt+0x1e4ec>
   30bb4:	ldr	r3, [fp, #-12]
   30bb8:	cmn	r3, #-2147483647	; 0x80000001
   30bbc:	beq	30cf0 <__assert_fail@plt+0x1e604>
   30bc0:	ldr	r3, [fp, #-12]
   30bc4:	add	r3, r3, #1
   30bc8:	str	r3, [fp, #-12]
   30bcc:	b	30bd8 <__assert_fail@plt+0x1e4ec>
   30bd0:	mvn	r3, #0
   30bd4:	b	30d08 <__assert_fail@plt+0x1e61c>
   30bd8:	ldr	r2, [fp, #-8]
   30bdc:	ldr	r3, [fp, #-16]
   30be0:	add	r3, r2, r3
   30be4:	str	r3, [fp, #-8]
   30be8:	sub	r3, fp, #36	; 0x24
   30bec:	mov	r0, r3
   30bf0:	bl	12134 <mbsinit@plt>
   30bf4:	mov	r3, r0
   30bf8:	cmp	r3, #0
   30bfc:	beq	30a88 <__assert_fail@plt+0x1e39c>
   30c00:	nop	{0}
   30c04:	ldr	r2, [fp, #-8]
   30c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   30c0c:	cmp	r2, r3
   30c10:	bcc	30a14 <__assert_fail@plt+0x1e328>
   30c14:	ldr	r3, [fp, #-12]
   30c18:	b	30d08 <__assert_fail@plt+0x1e61c>
   30c1c:	ldr	r3, [fp, #-8]
   30c20:	add	r2, r3, #1
   30c24:	str	r2, [fp, #-8]
   30c28:	ldrb	r3, [r3]
   30c2c:	strb	r3, [fp, #-25]	; 0xffffffe7
   30c30:	bl	12368 <__ctype_b_loc@plt>
   30c34:	mov	r3, r0
   30c38:	ldr	r2, [r3]
   30c3c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   30c40:	lsl	r3, r3, #1
   30c44:	add	r3, r2, r3
   30c48:	ldrh	r3, [r3]
   30c4c:	and	r3, r3, #16384	; 0x4000
   30c50:	cmp	r3, #0
   30c54:	beq	30c74 <__assert_fail@plt+0x1e588>
   30c58:	ldr	r3, [fp, #-12]
   30c5c:	cmn	r3, #-2147483647	; 0x80000001
   30c60:	beq	30cf8 <__assert_fail@plt+0x1e60c>
   30c64:	ldr	r3, [fp, #-12]
   30c68:	add	r3, r3, #1
   30c6c:	str	r3, [fp, #-12]
   30c70:	b	30cd0 <__assert_fail@plt+0x1e5e4>
   30c74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   30c78:	and	r3, r3, #2
   30c7c:	cmp	r3, #0
   30c80:	bne	30cc8 <__assert_fail@plt+0x1e5dc>
   30c84:	bl	12368 <__ctype_b_loc@plt>
   30c88:	mov	r3, r0
   30c8c:	ldr	r2, [r3]
   30c90:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   30c94:	lsl	r3, r3, #1
   30c98:	add	r3, r2, r3
   30c9c:	ldrh	r3, [r3]
   30ca0:	and	r3, r3, #2
   30ca4:	cmp	r3, #0
   30ca8:	bne	30cd0 <__assert_fail@plt+0x1e5e4>
   30cac:	ldr	r3, [fp, #-12]
   30cb0:	cmn	r3, #-2147483647	; 0x80000001
   30cb4:	beq	30d00 <__assert_fail@plt+0x1e614>
   30cb8:	ldr	r3, [fp, #-12]
   30cbc:	add	r3, r3, #1
   30cc0:	str	r3, [fp, #-12]
   30cc4:	b	30cd0 <__assert_fail@plt+0x1e5e4>
   30cc8:	mvn	r3, #0
   30ccc:	b	30d08 <__assert_fail@plt+0x1e61c>
   30cd0:	ldr	r2, [fp, #-8]
   30cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   30cd8:	cmp	r2, r3
   30cdc:	bcc	30c1c <__assert_fail@plt+0x1e530>
   30ce0:	ldr	r3, [fp, #-12]
   30ce4:	b	30d08 <__assert_fail@plt+0x1e61c>
   30ce8:	nop	{0}
   30cec:	b	30d04 <__assert_fail@plt+0x1e618>
   30cf0:	nop	{0}
   30cf4:	b	30d04 <__assert_fail@plt+0x1e618>
   30cf8:	nop	{0}
   30cfc:	b	30d04 <__assert_fail@plt+0x1e618>
   30d00:	nop	{0}
   30d04:	mvn	r3, #-2147483648	; 0x80000000
   30d08:	mov	r0, r3
   30d0c:	sub	sp, fp, #4
   30d10:	ldr	fp, [sp]
   30d14:	add	sp, sp, #4
   30d18:	pop	{pc}		; (ldr pc, [sp], #4)
   30d1c:	strd	r4, [sp, #-20]!	; 0xffffffec
   30d20:	str	r6, [sp, #8]
   30d24:	str	fp, [sp, #12]
   30d28:	str	lr, [sp, #16]
   30d2c:	add	fp, sp, #16
   30d30:	sub	sp, sp, #12
   30d34:	str	r0, [fp, #-24]	; 0xffffffe8
   30d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d3c:	ldrb	r3, [r3, #12]
   30d40:	cmp	r3, #0
   30d44:	bne	30f78 <__assert_fail@plt+0x1e88c>
   30d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d4c:	ldrb	r3, [r3]
   30d50:	cmp	r3, #0
   30d54:	bne	30df8 <__assert_fail@plt+0x1e70c>
   30d58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d5c:	ldr	r3, [r3, #16]
   30d60:	ldrb	r3, [r3]
   30d64:	mov	r0, r3
   30d68:	bl	61690 <__assert_fail@plt+0x4efa4>
   30d6c:	mov	r3, r0
   30d70:	cmp	r3, #0
   30d74:	beq	30dac <__assert_fail@plt+0x1e6c0>
   30d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d7c:	mov	r2, #1
   30d80:	str	r2, [r3, #20]
   30d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d88:	ldr	r3, [r3, #16]
   30d8c:	ldrb	r3, [r3]
   30d90:	mov	r2, r3
   30d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30d98:	str	r2, [r3, #28]
   30d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30da0:	mov	r2, #1
   30da4:	strb	r2, [r3, #24]
   30da8:	b	30f68 <__assert_fail@plt+0x1e87c>
   30dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30db0:	add	r3, r3, #4
   30db4:	mov	r0, r3
   30db8:	bl	12134 <mbsinit@plt>
   30dbc:	mov	r3, r0
   30dc0:	cmp	r3, #0
   30dc4:	bne	30de8 <__assert_fail@plt+0x1e6fc>
   30dc8:	movw	r3, #38360	; 0x95d8
   30dcc:	movt	r3, #6
   30dd0:	mov	r2, #143	; 0x8f
   30dd4:	movw	r1, #38280	; 0x9588
   30dd8:	movt	r1, #6
   30ddc:	movw	r0, #38292	; 0x9594
   30de0:	movt	r0, #6
   30de4:	bl	126ec <__assert_fail@plt>
   30de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30dec:	mov	r2, #1
   30df0:	strb	r2, [r3]
   30df4:	b	30dfc <__assert_fail@plt+0x1e710>
   30df8:	nop	{0}
   30dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e00:	add	r4, r3, #28
   30e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e08:	ldr	r5, [r3, #16]
   30e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e10:	ldr	r6, [r3, #16]
   30e14:	bl	12254 <__ctype_get_mb_cur_max@plt>
   30e18:	mov	r3, r0
   30e1c:	mov	r1, r3
   30e20:	mov	r0, r6
   30e24:	bl	3cf7c <__assert_fail@plt+0x2a890>
   30e28:	mov	r2, r0
   30e2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e30:	add	r3, r3, #4
   30e34:	mov	r1, r5
   30e38:	mov	r0, r4
   30e3c:	bl	435a0 <__assert_fail@plt+0x30eb4>
   30e40:	mov	r2, r0
   30e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e48:	str	r2, [r3, #20]
   30e4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e50:	ldr	r3, [r3, #20]
   30e54:	cmn	r3, #1
   30e58:	bne	30e78 <__assert_fail@plt+0x1e78c>
   30e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e60:	mov	r2, #1
   30e64:	str	r2, [r3, #20]
   30e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e6c:	mov	r2, #0
   30e70:	strb	r2, [r3, #24]
   30e74:	b	30f68 <__assert_fail@plt+0x1e87c>
   30e78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e7c:	ldr	r3, [r3, #20]
   30e80:	cmn	r3, #2
   30e84:	bne	30eb4 <__assert_fail@plt+0x1e7c8>
   30e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30e8c:	ldr	r3, [r3, #16]
   30e90:	mov	r0, r3
   30e94:	bl	123bc <strlen@plt>
   30e98:	mov	r2, r0
   30e9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ea0:	str	r2, [r3, #20]
   30ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ea8:	mov	r2, #0
   30eac:	strb	r2, [r3, #24]
   30eb0:	b	30f68 <__assert_fail@plt+0x1e87c>
   30eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30eb8:	ldr	r3, [r3, #20]
   30ebc:	cmp	r3, #0
   30ec0:	bne	30f34 <__assert_fail@plt+0x1e848>
   30ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ec8:	mov	r2, #1
   30ecc:	str	r2, [r3, #20]
   30ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30ed4:	ldr	r3, [r3, #16]
   30ed8:	ldrb	r3, [r3]
   30edc:	cmp	r3, #0
   30ee0:	beq	30f04 <__assert_fail@plt+0x1e818>
   30ee4:	movw	r3, #38360	; 0x95d8
   30ee8:	movt	r3, #6
   30eec:	mov	r2, #171	; 0xab
   30ef0:	movw	r1, #38280	; 0x9588
   30ef4:	movt	r1, #6
   30ef8:	movw	r0, #38316	; 0x95ac
   30efc:	movt	r0, #6
   30f00:	bl	126ec <__assert_fail@plt>
   30f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f08:	ldr	r3, [r3, #28]
   30f0c:	cmp	r3, #0
   30f10:	beq	30f34 <__assert_fail@plt+0x1e848>
   30f14:	movw	r3, #38360	; 0x95d8
   30f18:	movt	r3, #6
   30f1c:	mov	r2, #172	; 0xac
   30f20:	movw	r1, #38280	; 0x9588
   30f24:	movt	r1, #6
   30f28:	movw	r0, #38340	; 0x95c4
   30f2c:	movt	r0, #6
   30f30:	bl	126ec <__assert_fail@plt>
   30f34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f38:	mov	r2, #1
   30f3c:	strb	r2, [r3, #24]
   30f40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f44:	add	r3, r3, #4
   30f48:	mov	r0, r3
   30f4c:	bl	12134 <mbsinit@plt>
   30f50:	mov	r3, r0
   30f54:	cmp	r3, #0
   30f58:	beq	30f68 <__assert_fail@plt+0x1e87c>
   30f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f60:	mov	r2, #0
   30f64:	strb	r2, [r3]
   30f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f6c:	mov	r2, #1
   30f70:	strb	r2, [r3, #12]
   30f74:	b	30f7c <__assert_fail@plt+0x1e890>
   30f78:	nop	{0}
   30f7c:	sub	sp, fp, #16
   30f80:	ldrd	r4, [sp]
   30f84:	ldr	r6, [sp, #8]
   30f88:	ldr	fp, [sp, #12]
   30f8c:	add	sp, sp, #16
   30f90:	pop	{pc}		; (ldr pc, [sp], #4)
   30f94:	push	{fp}		; (str fp, [sp, #-4]!)
   30f98:	add	fp, sp, #0
   30f9c:	sub	sp, sp, #12
   30fa0:	str	r0, [fp, #-8]
   30fa4:	str	r1, [fp, #-12]
   30fa8:	ldr	r3, [fp, #-8]
   30fac:	ldr	r2, [r3, #16]
   30fb0:	ldr	r3, [fp, #-12]
   30fb4:	add	r2, r2, r3
   30fb8:	ldr	r3, [fp, #-8]
   30fbc:	str	r2, [r3, #16]
   30fc0:	nop	{0}
   30fc4:	add	sp, fp, #0
   30fc8:	pop	{fp}		; (ldr fp, [sp], #4)
   30fcc:	bx	lr
   30fd0:	str	fp, [sp, #-8]!
   30fd4:	str	lr, [sp, #4]
   30fd8:	add	fp, sp, #4
   30fdc:	sub	sp, sp, #8
   30fe0:	str	r0, [fp, #-8]
   30fe4:	str	r1, [fp, #-12]
   30fe8:	ldr	r3, [fp, #-12]
   30fec:	ldrb	r2, [r3]
   30ff0:	ldr	r3, [fp, #-8]
   30ff4:	strb	r2, [r3]
   30ff8:	ldr	r3, [fp, #-8]
   30ffc:	ldrb	r3, [r3]
   31000:	cmp	r3, #0
   31004:	beq	31028 <__assert_fail@plt+0x1e93c>
   31008:	ldr	r3, [fp, #-8]
   3100c:	add	r0, r3, #4
   31010:	ldr	r3, [fp, #-12]
   31014:	add	r3, r3, #4
   31018:	mov	r2, #8
   3101c:	mov	r1, r3
   31020:	bl	120f8 <memcpy@plt>
   31024:	b	31040 <__assert_fail@plt+0x1e954>
   31028:	ldr	r3, [fp, #-8]
   3102c:	add	r3, r3, #4
   31030:	mov	r2, #8
   31034:	mov	r1, #0
   31038:	mov	r0, r3
   3103c:	bl	12434 <memset@plt>
   31040:	ldr	r3, [fp, #-12]
   31044:	ldrb	r2, [r3, #12]
   31048:	ldr	r3, [fp, #-8]
   3104c:	strb	r2, [r3, #12]
   31050:	ldr	r3, [fp, #-8]
   31054:	add	r2, r3, #16
   31058:	ldr	r3, [fp, #-12]
   3105c:	add	r3, r3, #16
   31060:	mov	r1, r3
   31064:	mov	r0, r2
   31068:	bl	615c8 <__assert_fail@plt+0x4eedc>
   3106c:	nop	{0}
   31070:	sub	sp, fp, #4
   31074:	ldr	fp, [sp]
   31078:	add	sp, sp, #4
   3107c:	pop	{pc}		; (ldr pc, [sp], #4)
   31080:	push	{fp}		; (str fp, [sp, #-4]!)
   31084:	add	fp, sp, #0
   31088:	sub	sp, sp, #12
   3108c:	str	r0, [fp, #-8]
   31090:	ldr	r3, [fp, #-8]
   31094:	mov	r0, r3
   31098:	add	sp, fp, #0
   3109c:	pop	{fp}		; (ldr fp, [sp], #4)
   310a0:	bx	lr
   310a4:	str	fp, [sp, #-8]!
   310a8:	str	lr, [sp, #4]
   310ac:	add	fp, sp, #4
   310b0:	sub	sp, sp, #16
   310b4:	str	r0, [fp, #-16]
   310b8:	str	r1, [fp, #-20]	; 0xffffffec
   310bc:	mov	r0, #32
   310c0:	bl	3d8ec <__assert_fail@plt+0x2b200>
   310c4:	mov	r3, r0
   310c8:	str	r3, [fp, #-8]
   310cc:	ldr	r3, [fp, #-8]
   310d0:	mov	r2, #61	; 0x3d
   310d4:	strb	r2, [r3]
   310d8:	ldr	r3, [fp, #-8]
   310dc:	mov	r2, #1
   310e0:	strb	r2, [r3, #1]
   310e4:	ldr	r3, [fp, #-8]
   310e8:	movw	r2, #4095	; 0xfff
   310ec:	str	r2, [r3, #4]
   310f0:	ldr	r3, [fp, #-8]
   310f4:	ldr	r2, [fp, #-16]
   310f8:	str	r2, [r3, #8]
   310fc:	ldr	r3, [fp, #-8]
   31100:	ldr	r2, [fp, #-20]	; 0xffffffec
   31104:	str	r2, [r3, #12]
   31108:	ldr	r3, [fp, #-8]
   3110c:	add	r3, r3, #16
   31110:	mov	r2, #0
   31114:	strb	r2, [r3, #1]
   31118:	ldr	r3, [fp, #-8]
   3111c:	mov	r0, r3
   31120:	sub	sp, fp, #4
   31124:	ldr	fp, [sp]
   31128:	add	sp, sp, #4
   3112c:	pop	{pc}		; (ldr pc, [sp], #4)
   31130:	str	fp, [sp, #-8]!
   31134:	str	lr, [sp, #4]
   31138:	add	fp, sp, #4
   3113c:	sub	sp, sp, #64	; 0x40
   31140:	str	r0, [fp, #-64]	; 0xffffffc0
   31144:	mov	r3, #0
   31148:	str	r3, [fp, #-8]
   3114c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   31150:	ldrb	r3, [r3]
   31154:	cmp	r3, #47	; 0x2f
   31158:	bls	3123c <__assert_fail@plt+0x1eb50>
   3115c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   31160:	ldrb	r3, [r3]
   31164:	cmp	r3, #55	; 0x37
   31168:	bhi	3123c <__assert_fail@plt+0x1eb50>
   3116c:	mov	r3, #0
   31170:	str	r3, [fp, #-16]
   31174:	ldr	r3, [fp, #-64]	; 0xffffffc0
   31178:	str	r3, [fp, #-12]
   3117c:	ldr	r3, [fp, #-16]
   31180:	lsl	r2, r3, #3
   31184:	ldr	r3, [fp, #-12]
   31188:	add	r1, r3, #1
   3118c:	str	r1, [fp, #-12]
   31190:	ldrb	r3, [r3]
   31194:	add	r3, r2, r3
   31198:	sub	r3, r3, #48	; 0x30
   3119c:	str	r3, [fp, #-16]
   311a0:	ldr	r3, [fp, #-16]
   311a4:	cmp	r3, #4096	; 0x1000
   311a8:	bcc	311b4 <__assert_fail@plt+0x1eac8>
   311ac:	mov	r3, #0
   311b0:	b	31724 <__assert_fail@plt+0x1f038>
   311b4:	ldr	r3, [fp, #-12]
   311b8:	ldrb	r3, [r3]
   311bc:	cmp	r3, #47	; 0x2f
   311c0:	bls	311d4 <__assert_fail@plt+0x1eae8>
   311c4:	ldr	r3, [fp, #-12]
   311c8:	ldrb	r3, [r3]
   311cc:	cmp	r3, #55	; 0x37
   311d0:	bls	3117c <__assert_fail@plt+0x1ea90>
   311d4:	ldr	r3, [fp, #-12]
   311d8:	ldrb	r3, [r3]
   311dc:	cmp	r3, #0
   311e0:	beq	311ec <__assert_fail@plt+0x1eb00>
   311e4:	mov	r3, #0
   311e8:	b	31724 <__assert_fail@plt+0x1f038>
   311ec:	ldr	r0, [fp, #-16]
   311f0:	bl	31080 <__assert_fail@plt+0x1e994>
   311f4:	str	r0, [fp, #-44]	; 0xffffffd4
   311f8:	ldr	r2, [fp, #-12]
   311fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   31200:	sub	r3, r2, r3
   31204:	cmp	r3, #4
   31208:	bgt	31220 <__assert_fail@plt+0x1eb34>
   3120c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31210:	and	r3, r3, #3072	; 0xc00
   31214:	mvn	r3, r3, lsr #10
   31218:	mvn	r3, r3, lsl #10
   3121c:	b	31224 <__assert_fail@plt+0x1eb38>
   31220:	movw	r3, #4095	; 0xfff
   31224:	str	r3, [fp, #-48]	; 0xffffffd0
   31228:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3122c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   31230:	bl	310a4 <__assert_fail@plt+0x1e9b8>
   31234:	mov	r3, r0
   31238:	b	31724 <__assert_fail@plt+0x1f038>
   3123c:	mov	r3, #1
   31240:	str	r3, [fp, #-20]	; 0xffffffec
   31244:	ldr	r3, [fp, #-64]	; 0xffffffc0
   31248:	str	r3, [fp, #-12]
   3124c:	b	312a8 <__assert_fail@plt+0x1ebbc>
   31250:	ldr	r3, [fp, #-12]
   31254:	ldrb	r3, [r3]
   31258:	cmp	r3, #61	; 0x3d
   3125c:	beq	31280 <__assert_fail@plt+0x1eb94>
   31260:	ldr	r3, [fp, #-12]
   31264:	ldrb	r3, [r3]
   31268:	cmp	r3, #43	; 0x2b
   3126c:	beq	31280 <__assert_fail@plt+0x1eb94>
   31270:	ldr	r3, [fp, #-12]
   31274:	ldrb	r3, [r3]
   31278:	cmp	r3, #45	; 0x2d
   3127c:	bne	31288 <__assert_fail@plt+0x1eb9c>
   31280:	mov	r3, #1
   31284:	b	3128c <__assert_fail@plt+0x1eba0>
   31288:	mov	r3, #0
   3128c:	mov	r2, r3
   31290:	ldr	r3, [fp, #-20]	; 0xffffffec
   31294:	add	r3, r3, r2
   31298:	str	r3, [fp, #-20]	; 0xffffffec
   3129c:	ldr	r3, [fp, #-12]
   312a0:	add	r3, r3, #1
   312a4:	str	r3, [fp, #-12]
   312a8:	ldr	r3, [fp, #-12]
   312ac:	ldrb	r3, [r3]
   312b0:	cmp	r3, #0
   312b4:	bne	31250 <__assert_fail@plt+0x1eb64>
   312b8:	mov	r1, #16
   312bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   312c0:	bl	3db1c <__assert_fail@plt+0x2b430>
   312c4:	mov	r3, r0
   312c8:	str	r3, [fp, #-52]	; 0xffffffcc
   312cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   312d0:	str	r3, [fp, #-12]
   312d4:	mov	r3, #0
   312d8:	str	r3, [fp, #-24]	; 0xffffffe8
   312dc:	ldr	r3, [fp, #-12]
   312e0:	ldrb	r3, [r3]
   312e4:	cmp	r3, #97	; 0x61
   312e8:	beq	31364 <__assert_fail@plt+0x1ec78>
   312ec:	cmp	r3, #97	; 0x61
   312f0:	bgt	31310 <__assert_fail@plt+0x1ec24>
   312f4:	cmp	r3, #45	; 0x2d
   312f8:	beq	31388 <__assert_fail@plt+0x1ec9c>
   312fc:	cmp	r3, #61	; 0x3d
   31300:	beq	31388 <__assert_fail@plt+0x1ec9c>
   31304:	cmp	r3, #43	; 0x2b
   31308:	beq	31388 <__assert_fail@plt+0x1ec9c>
   3130c:	b	31718 <__assert_fail@plt+0x1f02c>
   31310:	cmp	r3, #111	; 0x6f
   31314:	beq	31350 <__assert_fail@plt+0x1ec64>
   31318:	cmp	r3, #117	; 0x75
   3131c:	beq	3132c <__assert_fail@plt+0x1ec40>
   31320:	cmp	r3, #103	; 0x67
   31324:	beq	3133c <__assert_fail@plt+0x1ec50>
   31328:	b	31718 <__assert_fail@plt+0x1f02c>
   3132c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31330:	orr	r3, r3, #2496	; 0x9c0
   31334:	str	r3, [fp, #-24]	; 0xffffffe8
   31338:	b	31374 <__assert_fail@plt+0x1ec88>
   3133c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31340:	orr	r3, r3, #1072	; 0x430
   31344:	orr	r3, r3, #8
   31348:	str	r3, [fp, #-24]	; 0xffffffe8
   3134c:	b	31374 <__assert_fail@plt+0x1ec88>
   31350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31354:	orr	r3, r3, #516	; 0x204
   31358:	orr	r3, r3, #3
   3135c:	str	r3, [fp, #-24]	; 0xffffffe8
   31360:	b	31374 <__assert_fail@plt+0x1ec88>
   31364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31368:	mvn	r3, r3, lsr #12
   3136c:	mvn	r3, r3, lsl #12
   31370:	str	r3, [fp, #-24]	; 0xffffffe8
   31374:	ldr	r3, [fp, #-12]
   31378:	add	r3, r3, #1
   3137c:	str	r3, [fp, #-12]
   31380:	b	312dc <__assert_fail@plt+0x1ebf0>
   31384:	nop	{0}
   31388:	ldr	r3, [fp, #-12]
   3138c:	add	r2, r3, #1
   31390:	str	r2, [fp, #-12]
   31394:	ldrb	r3, [r3]
   31398:	strb	r3, [fp, #-53]	; 0xffffffcb
   3139c:	mov	r3, #0
   313a0:	str	r3, [fp, #-32]	; 0xffffffe0
   313a4:	mov	r3, #3
   313a8:	strb	r3, [fp, #-33]	; 0xffffffdf
   313ac:	ldr	r3, [fp, #-12]
   313b0:	ldrb	r3, [r3]
   313b4:	cmp	r3, #103	; 0x67
   313b8:	beq	314ac <__assert_fail@plt+0x1edc0>
   313bc:	cmp	r3, #103	; 0x67
   313c0:	bgt	313d4 <__assert_fail@plt+0x1ece8>
   313c4:	sub	r3, r3, #48	; 0x30
   313c8:	cmp	r3, #7
   313cc:	bhi	314dc <__assert_fail@plt+0x1edf0>
   313d0:	b	313e8 <__assert_fail@plt+0x1ecfc>
   313d4:	cmp	r3, #111	; 0x6f
   313d8:	beq	314c4 <__assert_fail@plt+0x1edd8>
   313dc:	cmp	r3, #117	; 0x75
   313e0:	beq	31494 <__assert_fail@plt+0x1eda8>
   313e4:	b	314dc <__assert_fail@plt+0x1edf0>
   313e8:	mov	r3, #0
   313ec:	str	r3, [fp, #-40]	; 0xffffffd8
   313f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   313f4:	lsl	r2, r3, #3
   313f8:	ldr	r3, [fp, #-12]
   313fc:	add	r1, r3, #1
   31400:	str	r1, [fp, #-12]
   31404:	ldrb	r3, [r3]
   31408:	add	r3, r2, r3
   3140c:	sub	r3, r3, #48	; 0x30
   31410:	str	r3, [fp, #-40]	; 0xffffffd8
   31414:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31418:	cmp	r3, #4096	; 0x1000
   3141c:	bcs	31704 <__assert_fail@plt+0x1f018>
   31420:	ldr	r3, [fp, #-12]
   31424:	ldrb	r3, [r3]
   31428:	cmp	r3, #47	; 0x2f
   3142c:	bls	31440 <__assert_fail@plt+0x1ed54>
   31430:	ldr	r3, [fp, #-12]
   31434:	ldrb	r3, [r3]
   31438:	cmp	r3, #55	; 0x37
   3143c:	bls	313f0 <__assert_fail@plt+0x1ed04>
   31440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31444:	cmp	r3, #0
   31448:	bne	3170c <__assert_fail@plt+0x1f020>
   3144c:	ldr	r3, [fp, #-12]
   31450:	ldrb	r3, [r3]
   31454:	cmp	r3, #0
   31458:	beq	3146c <__assert_fail@plt+0x1ed80>
   3145c:	ldr	r3, [fp, #-12]
   31460:	ldrb	r3, [r3]
   31464:	cmp	r3, #44	; 0x2c
   31468:	bne	3170c <__assert_fail@plt+0x1f020>
   3146c:	movw	r3, #4095	; 0xfff
   31470:	str	r3, [fp, #-32]	; 0xffffffe0
   31474:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31478:	str	r3, [fp, #-24]	; 0xffffffe8
   3147c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31480:	bl	31080 <__assert_fail@plt+0x1e994>
   31484:	str	r0, [fp, #-28]	; 0xffffffe4
   31488:	mov	r3, #1
   3148c:	strb	r3, [fp, #-33]	; 0xffffffdf
   31490:	b	315f8 <__assert_fail@plt+0x1ef0c>
   31494:	mov	r3, #448	; 0x1c0
   31498:	str	r3, [fp, #-28]	; 0xffffffe4
   3149c:	ldr	r3, [fp, #-12]
   314a0:	add	r3, r3, #1
   314a4:	str	r3, [fp, #-12]
   314a8:	b	315f8 <__assert_fail@plt+0x1ef0c>
   314ac:	mov	r3, #56	; 0x38
   314b0:	str	r3, [fp, #-28]	; 0xffffffe4
   314b4:	ldr	r3, [fp, #-12]
   314b8:	add	r3, r3, #1
   314bc:	str	r3, [fp, #-12]
   314c0:	b	315f8 <__assert_fail@plt+0x1ef0c>
   314c4:	mov	r3, #7
   314c8:	str	r3, [fp, #-28]	; 0xffffffe4
   314cc:	ldr	r3, [fp, #-12]
   314d0:	add	r3, r3, #1
   314d4:	str	r3, [fp, #-12]
   314d8:	b	315f8 <__assert_fail@plt+0x1ef0c>
   314dc:	mov	r3, #0
   314e0:	str	r3, [fp, #-28]	; 0xffffffe4
   314e4:	mov	r3, #1
   314e8:	strb	r3, [fp, #-33]	; 0xffffffdf
   314ec:	ldr	r3, [fp, #-12]
   314f0:	ldrb	r3, [r3]
   314f4:	sub	r3, r3, #88	; 0x58
   314f8:	cmp	r3, #32
   314fc:	ldrls	pc, [pc, r3, lsl #2]
   31500:	b	315f4 <__assert_fail@plt+0x1ef08>
   31504:			; <UNDEFINED> instruction: 0x000315b8
   31508:	strdeq	r1, [r3], -r4
   3150c:	strdeq	r1, [r3], -r4
   31510:	strdeq	r1, [r3], -r4
   31514:	strdeq	r1, [r3], -r4
   31518:	strdeq	r1, [r3], -r4
   3151c:	strdeq	r1, [r3], -r4
   31520:	strdeq	r1, [r3], -r4
   31524:	strdeq	r1, [r3], -r4
   31528:	strdeq	r1, [r3], -r4
   3152c:	strdeq	r1, [r3], -r4
   31530:	strdeq	r1, [r3], -r4
   31534:	strdeq	r1, [r3], -r4
   31538:	strdeq	r1, [r3], -r4
   3153c:	strdeq	r1, [r3], -r4
   31540:	strdeq	r1, [r3], -r4
   31544:	strdeq	r1, [r3], -r4
   31548:	strdeq	r1, [r3], -r4
   3154c:	strdeq	r1, [r3], -r4
   31550:	strdeq	r1, [r3], -r4
   31554:	strdeq	r1, [r3], -r4
   31558:	strdeq	r1, [r3], -r4
   3155c:	strdeq	r1, [r3], -r4
   31560:	strdeq	r1, [r3], -r4
   31564:	strdeq	r1, [r3], -r4
   31568:	strdeq	r1, [r3], -r4
   3156c:	andeq	r1, r3, r8, lsl #11
   31570:	andeq	r1, r3, r4, asr #11
   31574:	ldrdeq	r1, [r3], -r4
   31578:	strdeq	r1, [r3], -r4
   3157c:	strdeq	r1, [r3], -r4
   31580:	muleq	r3, r8, r5
   31584:	andeq	r1, r3, r8, lsr #11
   31588:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3158c:	orr	r3, r3, #292	; 0x124
   31590:	str	r3, [fp, #-28]	; 0xffffffe4
   31594:	b	315e4 <__assert_fail@plt+0x1eef8>
   31598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3159c:	orr	r3, r3, #146	; 0x92
   315a0:	str	r3, [fp, #-28]	; 0xffffffe4
   315a4:	b	315e4 <__assert_fail@plt+0x1eef8>
   315a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   315ac:	orr	r3, r3, #73	; 0x49
   315b0:	str	r3, [fp, #-28]	; 0xffffffe4
   315b4:	b	315e4 <__assert_fail@plt+0x1eef8>
   315b8:	mov	r3, #2
   315bc:	strb	r3, [fp, #-33]	; 0xffffffdf
   315c0:	b	315e4 <__assert_fail@plt+0x1eef8>
   315c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   315c8:	orr	r3, r3, #3072	; 0xc00
   315cc:	str	r3, [fp, #-28]	; 0xffffffe4
   315d0:	b	315e4 <__assert_fail@plt+0x1eef8>
   315d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   315d8:	orr	r3, r3, #512	; 0x200
   315dc:	str	r3, [fp, #-28]	; 0xffffffe4
   315e0:	nop	{0}
   315e4:	ldr	r3, [fp, #-12]
   315e8:	add	r3, r3, #1
   315ec:	str	r3, [fp, #-12]
   315f0:	b	314ec <__assert_fail@plt+0x1ee00>
   315f4:	nop	{0}
   315f8:	ldr	r3, [fp, #-8]
   315fc:	add	r2, r3, #1
   31600:	str	r2, [fp, #-8]
   31604:	lsl	r3, r3, #4
   31608:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3160c:	add	r3, r2, r3
   31610:	str	r3, [fp, #-60]	; 0xffffffc4
   31614:	ldr	r3, [fp, #-60]	; 0xffffffc4
   31618:	ldrb	r2, [fp, #-53]	; 0xffffffcb
   3161c:	strb	r2, [r3]
   31620:	ldr	r3, [fp, #-60]	; 0xffffffc4
   31624:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   31628:	strb	r2, [r3, #1]
   3162c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   31630:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31634:	str	r2, [r3, #4]
   31638:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3163c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31640:	str	r2, [r3, #8]
   31644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31648:	cmp	r3, #0
   3164c:	bne	31674 <__assert_fail@plt+0x1ef88>
   31650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31654:	cmp	r3, #0
   31658:	beq	3166c <__assert_fail@plt+0x1ef80>
   3165c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31660:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31664:	and	r3, r3, r2
   31668:	b	31678 <__assert_fail@plt+0x1ef8c>
   3166c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31670:	b	31678 <__assert_fail@plt+0x1ef8c>
   31674:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31678:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3167c:	str	r3, [r2, #12]
   31680:	ldr	r3, [fp, #-12]
   31684:	ldrb	r3, [r3]
   31688:	cmp	r3, #61	; 0x3d
   3168c:	beq	31384 <__assert_fail@plt+0x1ec98>
   31690:	ldr	r3, [fp, #-12]
   31694:	ldrb	r3, [r3]
   31698:	cmp	r3, #43	; 0x2b
   3169c:	beq	31384 <__assert_fail@plt+0x1ec98>
   316a0:	ldr	r3, [fp, #-12]
   316a4:	ldrb	r3, [r3]
   316a8:	cmp	r3, #45	; 0x2d
   316ac:	beq	31384 <__assert_fail@plt+0x1ec98>
   316b0:	ldr	r3, [fp, #-12]
   316b4:	ldrb	r3, [r3]
   316b8:	cmp	r3, #44	; 0x2c
   316bc:	bne	316d0 <__assert_fail@plt+0x1efe4>
   316c0:	ldr	r3, [fp, #-12]
   316c4:	add	r3, r3, #1
   316c8:	str	r3, [fp, #-12]
   316cc:	b	312d4 <__assert_fail@plt+0x1ebe8>
   316d0:	nop	{0}
   316d4:	ldr	r3, [fp, #-12]
   316d8:	ldrb	r3, [r3]
   316dc:	cmp	r3, #0
   316e0:	bne	31714 <__assert_fail@plt+0x1f028>
   316e4:	ldr	r3, [fp, #-8]
   316e8:	lsl	r3, r3, #4
   316ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   316f0:	add	r3, r2, r3
   316f4:	mov	r2, #0
   316f8:	strb	r2, [r3, #1]
   316fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31700:	b	31724 <__assert_fail@plt+0x1f038>
   31704:	nop	{0}
   31708:	b	31718 <__assert_fail@plt+0x1f02c>
   3170c:	nop	{0}
   31710:	b	31718 <__assert_fail@plt+0x1f02c>
   31714:	nop	{0}
   31718:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3171c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   31720:	mov	r3, #0
   31724:	mov	r0, r3
   31728:	sub	sp, fp, #4
   3172c:	ldr	fp, [sp]
   31730:	add	sp, sp, #4
   31734:	pop	{pc}		; (ldr pc, [sp], #4)
   31738:	str	fp, [sp, #-8]!
   3173c:	str	lr, [sp, #4]
   31740:	add	fp, sp, #4
   31744:	sub	sp, sp, #112	; 0x70
   31748:	str	r0, [fp, #-112]	; 0xffffff90
   3174c:	sub	r3, fp, #108	; 0x6c
   31750:	mov	r1, r3
   31754:	ldr	r0, [fp, #-112]	; 0xffffff90
   31758:	bl	64c94 <__assert_fail@plt+0x525a8>
   3175c:	mov	r3, r0
   31760:	cmp	r3, #0
   31764:	beq	31770 <__assert_fail@plt+0x1f084>
   31768:	mov	r3, #0
   3176c:	b	31784 <__assert_fail@plt+0x1f098>
   31770:	ldr	r3, [fp, #-92]	; 0xffffffa4
   31774:	movw	r1, #4095	; 0xfff
   31778:	mov	r0, r3
   3177c:	bl	310a4 <__assert_fail@plt+0x1e9b8>
   31780:	mov	r3, r0
   31784:	mov	r0, r3
   31788:	sub	sp, fp, #4
   3178c:	ldr	fp, [sp]
   31790:	add	sp, sp, #4
   31794:	pop	{pc}		; (ldr pc, [sp], #4)
   31798:	push	{fp}		; (str fp, [sp, #-4]!)
   3179c:	add	fp, sp, #0
   317a0:	sub	sp, sp, #44	; 0x2c
   317a4:	str	r0, [fp, #-32]	; 0xffffffe0
   317a8:	str	r2, [fp, #-40]	; 0xffffffd8
   317ac:	str	r3, [fp, #-44]	; 0xffffffd4
   317b0:	mov	r3, r1
   317b4:	strb	r3, [fp, #-33]	; 0xffffffdf
   317b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   317bc:	ubfx	r3, r3, #0, #12
   317c0:	str	r3, [fp, #-8]
   317c4:	mov	r3, #0
   317c8:	str	r3, [fp, #-12]
   317cc:	b	319e8 <__assert_fail@plt+0x1f2fc>
   317d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   317d4:	ldr	r3, [r3, #4]
   317d8:	str	r3, [fp, #-20]	; 0xffffffec
   317dc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   317e0:	cmp	r3, #0
   317e4:	beq	317f0 <__assert_fail@plt+0x1f104>
   317e8:	mov	r2, #3072	; 0xc00
   317ec:	b	317f4 <__assert_fail@plt+0x1f108>
   317f0:	mov	r2, #0
   317f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   317f8:	ldr	r3, [r3, #12]
   317fc:	mvn	r3, r3
   31800:	and	r3, r3, r2
   31804:	str	r3, [fp, #-24]	; 0xffffffe8
   31808:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3180c:	ldr	r3, [r3, #8]
   31810:	str	r3, [fp, #-16]
   31814:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31818:	ldrb	r3, [r3, #1]
   3181c:	cmp	r3, #2
   31820:	beq	318b4 <__assert_fail@plt+0x1f1c8>
   31824:	cmp	r3, #3
   31828:	beq	31834 <__assert_fail@plt+0x1f148>
   3182c:	cmp	r3, #1
   31830:	b	318dc <__assert_fail@plt+0x1f1f0>
   31834:	ldr	r2, [fp, #-16]
   31838:	ldr	r3, [fp, #-8]
   3183c:	and	r3, r3, r2
   31840:	str	r3, [fp, #-16]
   31844:	ldr	r3, [fp, #-16]
   31848:	and	r3, r3, #292	; 0x124
   3184c:	cmp	r3, #0
   31850:	beq	3185c <__assert_fail@plt+0x1f170>
   31854:	mov	r2, #292	; 0x124
   31858:	b	31860 <__assert_fail@plt+0x1f174>
   3185c:	mov	r2, #0
   31860:	ldr	r3, [fp, #-16]
   31864:	and	r3, r3, #146	; 0x92
   31868:	cmp	r3, #0
   3186c:	beq	31878 <__assert_fail@plt+0x1f18c>
   31870:	mov	r3, #146	; 0x92
   31874:	b	3187c <__assert_fail@plt+0x1f190>
   31878:	mov	r3, #0
   3187c:	orr	r3, r2, r3
   31880:	ldr	r2, [fp, #-16]
   31884:	and	r2, r2, #73	; 0x49
   31888:	cmp	r2, #0
   3188c:	beq	31898 <__assert_fail@plt+0x1f1ac>
   31890:	mov	r2, #73	; 0x49
   31894:	b	3189c <__assert_fail@plt+0x1f1b0>
   31898:	mov	r2, #0
   3189c:	orr	r3, r2, r3
   318a0:	mov	r2, r3
   318a4:	ldr	r3, [fp, #-16]
   318a8:	orr	r3, r3, r2
   318ac:	str	r3, [fp, #-16]
   318b0:	b	318dc <__assert_fail@plt+0x1f1f0>
   318b4:	ldr	r3, [fp, #-8]
   318b8:	and	r2, r3, #73	; 0x49
   318bc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   318c0:	orr	r3, r2, r3
   318c4:	cmp	r3, #0
   318c8:	beq	318d8 <__assert_fail@plt+0x1f1ec>
   318cc:	ldr	r3, [fp, #-16]
   318d0:	orr	r3, r3, #73	; 0x49
   318d4:	str	r3, [fp, #-16]
   318d8:	nop	{0}
   318dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   318e0:	cmp	r3, #0
   318e4:	bne	318f4 <__assert_fail@plt+0x1f208>
   318e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   318ec:	mvn	r3, r3
   318f0:	b	318f8 <__assert_fail@plt+0x1f20c>
   318f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   318f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   318fc:	mvn	r2, r2
   31900:	and	r3, r3, r2
   31904:	ldr	r2, [fp, #-16]
   31908:	and	r3, r3, r2
   3190c:	str	r3, [fp, #-16]
   31910:	ldr	r3, [fp, #-44]	; 0xffffffd4
   31914:	ldrb	r3, [r3]
   31918:	cmp	r3, #45	; 0x2d
   3191c:	beq	319b4 <__assert_fail@plt+0x1f2c8>
   31920:	cmp	r3, #61	; 0x3d
   31924:	beq	31934 <__assert_fail@plt+0x1f248>
   31928:	cmp	r3, #43	; 0x2b
   3192c:	beq	31990 <__assert_fail@plt+0x1f2a4>
   31930:	b	319dc <__assert_fail@plt+0x1f2f0>
   31934:	ldr	r3, [fp, #-20]	; 0xffffffec
   31938:	cmp	r3, #0
   3193c:	beq	3194c <__assert_fail@plt+0x1f260>
   31940:	ldr	r3, [fp, #-20]	; 0xffffffec
   31944:	mvn	r3, r3
   31948:	b	31950 <__assert_fail@plt+0x1f264>
   3194c:	mov	r3, #0
   31950:	ldr	r2, [fp, #-24]	; 0xffffffe8
   31954:	orr	r3, r3, r2
   31958:	str	r3, [fp, #-28]	; 0xffffffe4
   3195c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31960:	mvn	r3, r3
   31964:	ubfx	r3, r3, #0, #12
   31968:	ldr	r2, [fp, #-12]
   3196c:	orr	r3, r2, r3
   31970:	str	r3, [fp, #-12]
   31974:	ldr	r2, [fp, #-8]
   31978:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3197c:	and	r3, r3, r2
   31980:	ldr	r2, [fp, #-16]
   31984:	orr	r3, r2, r3
   31988:	str	r3, [fp, #-8]
   3198c:	b	319dc <__assert_fail@plt+0x1f2f0>
   31990:	ldr	r2, [fp, #-12]
   31994:	ldr	r3, [fp, #-16]
   31998:	orr	r3, r2, r3
   3199c:	str	r3, [fp, #-12]
   319a0:	ldr	r2, [fp, #-8]
   319a4:	ldr	r3, [fp, #-16]
   319a8:	orr	r3, r2, r3
   319ac:	str	r3, [fp, #-8]
   319b0:	b	319dc <__assert_fail@plt+0x1f2f0>
   319b4:	ldr	r2, [fp, #-12]
   319b8:	ldr	r3, [fp, #-16]
   319bc:	orr	r3, r2, r3
   319c0:	str	r3, [fp, #-12]
   319c4:	ldr	r3, [fp, #-16]
   319c8:	mvn	r3, r3
   319cc:	ldr	r2, [fp, #-8]
   319d0:	and	r3, r3, r2
   319d4:	str	r3, [fp, #-8]
   319d8:	nop	{0}
   319dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   319e0:	add	r3, r3, #16
   319e4:	str	r3, [fp, #-44]	; 0xffffffd4
   319e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   319ec:	ldrb	r3, [r3, #1]
   319f0:	cmp	r3, #0
   319f4:	bne	317d0 <__assert_fail@plt+0x1f0e4>
   319f8:	ldr	r3, [fp, #4]
   319fc:	cmp	r3, #0
   31a00:	beq	31a10 <__assert_fail@plt+0x1f324>
   31a04:	ldr	r3, [fp, #4]
   31a08:	ldr	r2, [fp, #-12]
   31a0c:	str	r2, [r3]
   31a10:	ldr	r3, [fp, #-8]
   31a14:	mov	r0, r3
   31a18:	add	sp, fp, #0
   31a1c:	pop	{fp}		; (ldr fp, [sp], #4)
   31a20:	bx	lr
   31a24:	str	r4, [sp, #-12]!
   31a28:	str	fp, [sp, #4]
   31a2c:	str	lr, [sp, #8]
   31a30:	add	fp, sp, #8
   31a34:	sub	sp, sp, #12
   31a38:	str	r0, [fp, #-16]
   31a3c:	movw	r3, #50892	; 0xc6cc
   31a40:	movt	r3, #7
   31a44:	ldr	r4, [r3]
   31a48:	movw	r0, #38380	; 0x95ec
   31a4c:	movt	r0, #6
   31a50:	bl	12398 <gettext@plt>
   31a54:	mov	r3, r0
   31a58:	mov	r2, r3
   31a5c:	ldr	r1, [fp, #-16]
   31a60:	mov	r0, r4
   31a64:	bl	122b4 <error@plt>
   31a68:	bl	12698 <abort@plt>
   31a6c:	str	r4, [sp, #-12]!
   31a70:	str	fp, [sp, #4]
   31a74:	str	lr, [sp, #8]
   31a78:	add	fp, sp, #8
   31a7c:	sub	sp, sp, #12
   31a80:	str	r0, [fp, #-16]
   31a84:	movw	r3, #50892	; 0xc6cc
   31a88:	movt	r3, #7
   31a8c:	ldr	r4, [r3]
   31a90:	movw	r0, #38424	; 0x9618
   31a94:	movt	r0, #6
   31a98:	bl	12398 <gettext@plt>
   31a9c:	mov	r3, r0
   31aa0:	mov	r2, r3
   31aa4:	ldr	r1, [fp, #-16]
   31aa8:	mov	r0, r4
   31aac:	bl	122b4 <error@plt>
   31ab0:	bl	12698 <abort@plt>
   31ab4:	push	{r2, r3}
   31ab8:	str	fp, [sp, #-8]!
   31abc:	str	lr, [sp, #4]
   31ac0:	add	fp, sp, #4
   31ac4:	sub	sp, sp, #16
   31ac8:	str	r0, [fp, #-16]
   31acc:	str	r1, [fp, #-20]	; 0xffffffec
   31ad0:	mov	r3, #0
   31ad4:	str	r3, [fp, #-8]
   31ad8:	ldr	r3, [fp, #4]
   31adc:	and	r3, r3, #64	; 0x40
   31ae0:	cmp	r3, #0
   31ae4:	beq	31b04 <__assert_fail@plt+0x1f418>
   31ae8:	add	r3, fp, #8
   31aec:	str	r3, [fp, #-12]
   31af0:	ldr	r3, [fp, #-12]
   31af4:	add	r2, r3, #4
   31af8:	str	r2, [fp, #-12]
   31afc:	ldr	r3, [r3]
   31b00:	str	r3, [fp, #-8]
   31b04:	ldr	r3, [fp, #-8]
   31b08:	ldr	r2, [fp, #4]
   31b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31b10:	ldr	r0, [fp, #-16]
   31b14:	bl	123e0 <openat64@plt>
   31b18:	mov	r3, r0
   31b1c:	mov	r0, r3
   31b20:	bl	3d01c <__assert_fail@plt+0x2a930>
   31b24:	mov	r3, r0
   31b28:	mov	r0, r3
   31b2c:	sub	sp, fp, #4
   31b30:	ldr	fp, [sp]
   31b34:	ldr	lr, [sp, #4]
   31b38:	add	sp, sp, #8
   31b3c:	add	sp, sp, #8
   31b40:	bx	lr
   31b44:	andeq	r0, r0, r0
   31b48:	push	{fp}		; (str fp, [sp, #-4]!)
   31b4c:	add	fp, sp, #0
   31b50:	sub	sp, sp, #12
   31b54:	strd	r0, [fp, #-12]
   31b58:	ldrd	r2, [fp, #-12]
   31b5c:	mov	r0, #-2147483648	; 0x80000000
   31b60:	mvn	r1, #0
   31b64:	cmp	r2, r0
   31b68:	sbcs	r3, r3, r1
   31b6c:	blt	31b88 <__assert_fail@plt+0x1f49c>
   31b70:	ldrd	r2, [fp, #-12]
   31b74:	mvn	r0, #-2147483648	; 0x80000000
   31b78:	mov	r1, #0
   31b7c:	cmp	r0, r2
   31b80:	sbcs	r3, r1, r3
   31b84:	bge	31b90 <__assert_fail@plt+0x1f4a4>
   31b88:	mov	r3, #1
   31b8c:	b	31b94 <__assert_fail@plt+0x1f4a8>
   31b90:	mov	r3, #0
   31b94:	and	r3, r3, #1
   31b98:	uxtb	r3, r3
   31b9c:	mov	r0, r3
   31ba0:	add	sp, fp, #0
   31ba4:	pop	{fp}		; (ldr fp, [sp], #4)
   31ba8:	bx	lr
   31bac:	push	{fp}		; (str fp, [sp, #-4]!)
   31bb0:	add	fp, sp, #0
   31bb4:	sub	sp, sp, #12
   31bb8:	mov	r3, r0
   31bbc:	strb	r3, [fp, #-5]
   31bc0:	ldrb	r3, [fp, #-5]
   31bc4:	mov	r0, r3
   31bc8:	add	sp, fp, #0
   31bcc:	pop	{fp}		; (ldr fp, [sp], #4)
   31bd0:	bx	lr
   31bd4:	push	{r0, r1, r2, r3}
   31bd8:	str	fp, [sp, #-8]!
   31bdc:	str	lr, [sp, #4]
   31be0:	add	fp, sp, #4
   31be4:	sub	sp, sp, #8
   31be8:	movw	r3, #50984	; 0xc728
   31bec:	movt	r3, #7
   31bf0:	ldr	r3, [r3]
   31bf4:	mov	r2, #6
   31bf8:	mov	r1, #1
   31bfc:	movw	r0, #38472	; 0x9648
   31c00:	movt	r0, #6
   31c04:	bl	12224 <fwrite@plt>
   31c08:	add	r3, fp, #8
   31c0c:	str	r3, [fp, #-8]
   31c10:	movw	r3, #50984	; 0xc728
   31c14:	movt	r3, #7
   31c18:	ldr	r3, [r3]
   31c1c:	ldr	r2, [fp, #-8]
   31c20:	ldr	r1, [fp, #4]
   31c24:	mov	r0, r3
   31c28:	bl	12554 <vfprintf@plt>
   31c2c:	nop	{0}
   31c30:	sub	sp, fp, #4
   31c34:	ldr	fp, [sp]
   31c38:	ldr	lr, [sp, #4]
   31c3c:	add	sp, sp, #8
   31c40:	add	sp, sp, #16
   31c44:	bx	lr
   31c48:	push	{fp}		; (str fp, [sp, #-4]!)
   31c4c:	add	fp, sp, #0
   31c50:	sub	sp, sp, #12
   31c54:	str	r0, [fp, #-8]
   31c58:	mov	r3, #0
   31c5c:	mov	r0, r3
   31c60:	add	sp, fp, #0
   31c64:	pop	{fp}		; (ldr fp, [sp], #4)
   31c68:	bx	lr
   31c6c:	sub	sp, sp, #8
   31c70:	str	fp, [sp, #-8]!
   31c74:	str	lr, [sp, #4]
   31c78:	add	fp, sp, #4
   31c7c:	sub	sp, sp, #8
   31c80:	str	r0, [fp, #-8]
   31c84:	add	r1, fp, #4
   31c88:	stm	r1, {r2, r3}
   31c8c:	ldr	r3, [fp, #-8]
   31c90:	ldr	r3, [r3, #156]	; 0x9c
   31c94:	cmp	r3, #0
   31c98:	beq	31d14 <__assert_fail@plt+0x1f628>
   31c9c:	ldr	r3, [fp, #-8]
   31ca0:	ldr	r3, [r3, #48]	; 0x30
   31ca4:	cmp	r3, #0
   31ca8:	bne	31d14 <__assert_fail@plt+0x1f628>
   31cac:	ldr	r3, [fp, #-8]
   31cb0:	ldrb	r3, [r3, #153]	; 0x99
   31cb4:	eor	r3, r3, #1
   31cb8:	uxtb	r3, r3
   31cbc:	cmp	r3, #0
   31cc0:	beq	31d14 <__assert_fail@plt+0x1f628>
   31cc4:	ldr	r3, [fp, #-8]
   31cc8:	ldr	r3, [r3, #172]	; 0xac
   31ccc:	cmp	r3, #0
   31cd0:	bne	31ce0 <__assert_fail@plt+0x1f5f4>
   31cd4:	ldr	r3, [fp, #20]
   31cd8:	cmp	r3, #2
   31cdc:	ble	31d14 <__assert_fail@plt+0x1f628>
   31ce0:	ldr	r3, [fp, #-8]
   31ce4:	mov	r2, #1
   31ce8:	strb	r2, [r3, #180]	; 0xb4
   31cec:	ldr	r3, [fp, #-8]
   31cf0:	add	r3, r3, #32
   31cf4:	add	r2, fp, #4
   31cf8:	ldrd	r0, [r2]
   31cfc:	strd	r0, [r3]
   31d00:	ldrd	r0, [r2, #8]
   31d04:	strd	r0, [r3, #8]
   31d08:	ldrd	r0, [r2, #16]
   31d0c:	strd	r0, [r3, #16]
   31d10:	b	31e50 <__assert_fail@plt+0x1f764>
   31d14:	ldr	r3, [fp, #20]
   31d18:	cmp	r3, #4
   31d1c:	ble	31db4 <__assert_fail@plt+0x1f6c8>
   31d20:	ldr	r3, [fp, #-8]
   31d24:	ldr	r3, [r3, #156]	; 0x9c
   31d28:	add	r2, r3, #1
   31d2c:	ldr	r3, [fp, #-8]
   31d30:	str	r2, [r3, #156]	; 0x9c
   31d34:	ldrd	r0, [fp, #12]
   31d38:	mov	r2, #100	; 0x64
   31d3c:	mov	r3, #0
   31d40:	bl	6498c <__assert_fail@plt+0x522a0>
   31d44:	ldr	r1, [fp, #-8]
   31d48:	strd	r2, [r1, #64]	; 0x40
   31d4c:	ldrd	r0, [fp, #12]
   31d50:	mov	r2, #100	; 0x64
   31d54:	mov	r3, #0
   31d58:	bl	6498c <__assert_fail@plt+0x522a0>
   31d5c:	mov	r2, r0
   31d60:	mov	r3, r1
   31d64:	mov	r0, r2
   31d68:	mov	r1, r3
   31d6c:	mov	r2, #100	; 0x64
   31d70:	mov	r3, #0
   31d74:	bl	6498c <__assert_fail@plt+0x522a0>
   31d78:	ldr	r1, [fp, #-8]
   31d7c:	strd	r2, [r1, #56]	; 0x38
   31d80:	ldrd	r0, [fp, #12]
   31d84:	movw	r2, #10000	; 0x2710
   31d88:	mov	r3, #0
   31d8c:	bl	6498c <__assert_fail@plt+0x522a0>
   31d90:	mov	r2, r0
   31d94:	mov	r3, r1
   31d98:	ldr	r1, [fp, #-8]
   31d9c:	strd	r2, [r1, #40]	; 0x28
   31da0:	ldr	r3, [fp, #20]
   31da4:	sub	r2, r3, #4
   31da8:	ldr	r3, [fp, #-8]
   31dac:	str	r2, [r3, #48]	; 0x30
   31db0:	b	31e50 <__assert_fail@plt+0x1f764>
   31db4:	ldr	r3, [fp, #-8]
   31db8:	ldr	r3, [r3, #172]	; 0xac
   31dbc:	add	r2, r3, #1
   31dc0:	ldr	r3, [fp, #-8]
   31dc4:	str	r2, [r3, #172]	; 0xac
   31dc8:	ldr	r3, [fp, #20]
   31dcc:	cmp	r3, #2
   31dd0:	bgt	31df4 <__assert_fail@plt+0x1f708>
   31dd4:	ldrd	r2, [fp, #12]
   31dd8:	ldr	r1, [fp, #-8]
   31ddc:	strd	r2, [r1, #72]	; 0x48
   31de0:	ldr	r1, [fp, #-8]
   31de4:	mov	r2, #0
   31de8:	mov	r3, #0
   31dec:	strd	r2, [r1, #80]	; 0x50
   31df0:	b	31e2c <__assert_fail@plt+0x1f740>
   31df4:	ldrd	r0, [fp, #12]
   31df8:	mov	r2, #100	; 0x64
   31dfc:	mov	r3, #0
   31e00:	bl	6498c <__assert_fail@plt+0x522a0>
   31e04:	mov	r2, r0
   31e08:	mov	r3, r1
   31e0c:	ldr	r1, [fp, #-8]
   31e10:	strd	r2, [r1, #72]	; 0x48
   31e14:	ldrd	r0, [fp, #12]
   31e18:	mov	r2, #100	; 0x64
   31e1c:	mov	r3, #0
   31e20:	bl	6498c <__assert_fail@plt+0x522a0>
   31e24:	ldr	r1, [fp, #-8]
   31e28:	strd	r2, [r1, #80]	; 0x50
   31e2c:	ldr	r3, [fp, #-8]
   31e30:	mov	r2, #0
   31e34:	str	r2, [r3, #88]	; 0x58
   31e38:	ldr	r3, [fp, #-8]
   31e3c:	mov	r2, #0
   31e40:	str	r2, [r3, #92]	; 0x5c
   31e44:	ldr	r3, [fp, #-8]
   31e48:	mov	r2, #2
   31e4c:	str	r2, [r3, #28]
   31e50:	nop	{0}
   31e54:	sub	sp, fp, #4
   31e58:	ldr	fp, [sp]
   31e5c:	ldr	lr, [sp, #4]
   31e60:	add	sp, sp, #8
   31e64:	add	sp, sp, #8
   31e68:	bx	lr
   31e6c:	sub	sp, sp, #8
   31e70:	strd	r4, [sp, #-28]!	; 0xffffffe4
   31e74:	strd	r6, [sp, #8]
   31e78:	strd	r8, [sp, #16]
   31e7c:	str	fp, [sp, #24]
   31e80:	add	fp, sp, #24
   31e84:	sub	sp, sp, #44	; 0x2c
   31e88:	str	r0, [fp, #-32]	; 0xffffffe0
   31e8c:	add	r1, fp, #4
   31e90:	stm	r1, {r2, r3}
   31e94:	ldr	r3, [fp, #60]	; 0x3c
   31e98:	cmp	r3, #0
   31e9c:	bge	320e8 <__assert_fail@plt+0x1f9fc>
   31ea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ea4:	ldr	r2, [r3, #144]	; 0x90
   31ea8:	ldr	r3, [fp, #52]	; 0x34
   31eac:	mov	ip, #0
   31eb0:	subs	r3, r2, r3
   31eb4:	bvc	31ebc <__assert_fail@plt+0x1f7d0>
   31eb8:	mov	ip, #1
   31ebc:	mov	r2, r3
   31ec0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ec4:	str	r2, [r3, #144]	; 0x90
   31ec8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31ecc:	ldrd	r0, [r3, #136]	; 0x88
   31ed0:	ldrd	r2, [fp, #44]	; 0x2c
   31ed4:	mov	r4, #0
   31ed8:	mov	r5, #0
   31edc:	strd	r4, [fp, #-44]	; 0xffffffd4
   31ee0:	subs	r4, r0, r2
   31ee4:	sbcs	r5, r1, r3
   31ee8:	bvc	31ef8 <__assert_fail@plt+0x1f80c>
   31eec:	mov	r2, #1
   31ef0:	mov	r3, #0
   31ef4:	strd	r2, [fp, #-44]	; 0xffffffd4
   31ef8:	mov	r2, r4
   31efc:	mov	r3, r5
   31f00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f04:	strd	r2, [r1, #136]	; 0x88
   31f08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31f0c:	ldrd	r0, [r3, #128]	; 0x80
   31f10:	ldrd	r2, [fp, #36]	; 0x24
   31f14:	mov	r4, #0
   31f18:	mov	r5, #0
   31f1c:	strd	r4, [fp, #-52]	; 0xffffffcc
   31f20:	subs	r4, r0, r2
   31f24:	sbcs	r5, r1, r3
   31f28:	bvc	31f38 <__assert_fail@plt+0x1f84c>
   31f2c:	mov	r2, #1
   31f30:	mov	r3, #0
   31f34:	strd	r2, [fp, #-52]	; 0xffffffcc
   31f38:	mov	r2, r4
   31f3c:	mov	r3, r5
   31f40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f44:	strd	r2, [r1, #128]	; 0x80
   31f48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31f4c:	ldrd	r0, [r3, #120]	; 0x78
   31f50:	ldrd	r2, [fp, #28]
   31f54:	mov	r4, #0
   31f58:	mov	r5, #0
   31f5c:	strd	r4, [fp, #-60]	; 0xffffffc4
   31f60:	subs	r4, r0, r2
   31f64:	sbcs	r5, r1, r3
   31f68:	bvc	31f78 <__assert_fail@plt+0x1f88c>
   31f6c:	mov	r2, #1
   31f70:	mov	r3, #0
   31f74:	strd	r2, [fp, #-60]	; 0xffffffc4
   31f78:	mov	r2, r4
   31f7c:	mov	r3, r5
   31f80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31f84:	strd	r2, [r1, #120]	; 0x78
   31f88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31f8c:	ldrd	r0, [r3, #112]	; 0x70
   31f90:	ldrd	r2, [fp, #20]
   31f94:	mov	r4, #0
   31f98:	mov	r5, #0
   31f9c:	strd	r4, [fp, #-68]	; 0xffffffbc
   31fa0:	subs	r4, r0, r2
   31fa4:	sbcs	r5, r1, r3
   31fa8:	bvc	31fb8 <__assert_fail@plt+0x1f8cc>
   31fac:	mov	r2, #1
   31fb0:	mov	r3, #0
   31fb4:	strd	r2, [fp, #-68]	; 0xffffffbc
   31fb8:	mov	r2, r4
   31fbc:	mov	r3, r5
   31fc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31fc4:	strd	r2, [r1, #112]	; 0x70
   31fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31fcc:	ldrd	r0, [r3, #104]	; 0x68
   31fd0:	ldrd	r2, [fp, #12]
   31fd4:	mov	r8, #0
   31fd8:	mov	r9, #0
   31fdc:	subs	r4, r0, r2
   31fe0:	sbcs	r5, r1, r3
   31fe4:	bvc	31ff0 <__assert_fail@plt+0x1f904>
   31fe8:	mov	r8, #1
   31fec:	mov	r9, #0
   31ff0:	mov	r2, r4
   31ff4:	mov	r3, r5
   31ff8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   31ffc:	strd	r2, [r1, #104]	; 0x68
   32000:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32004:	ldrd	r0, [r3, #96]	; 0x60
   32008:	ldrd	r2, [fp, #4]
   3200c:	mov	r6, #0
   32010:	mov	r7, #0
   32014:	subs	r4, r0, r2
   32018:	sbcs	r5, r1, r3
   3201c:	bvc	32028 <__assert_fail@plt+0x1f93c>
   32020:	mov	r6, #1
   32024:	mov	r7, #0
   32028:	mov	r2, r4
   3202c:	mov	r3, r5
   32030:	mov	r0, r2
   32034:	mov	r1, r3
   32038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3203c:	strd	r0, [r3, #96]	; 0x60
   32040:	mov	r3, ip
   32044:	and	r3, r3, #1
   32048:	uxtb	r2, r3
   3204c:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   32050:	mov	r3, r0
   32054:	and	r3, r3, #1
   32058:	uxtb	r3, r3
   3205c:	orr	r3, r2, r3
   32060:	uxtb	r2, r3
   32064:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   32068:	mov	r3, r0
   3206c:	and	r3, r3, #1
   32070:	uxtb	r3, r3
   32074:	orr	r3, r2, r3
   32078:	uxtb	r2, r3
   3207c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   32080:	mov	r3, r0
   32084:	and	r3, r3, #1
   32088:	uxtb	r3, r3
   3208c:	orr	r3, r2, r3
   32090:	uxtb	r2, r3
   32094:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   32098:	mov	r3, r0
   3209c:	and	r3, r3, #1
   320a0:	uxtb	r3, r3
   320a4:	orr	r3, r2, r3
   320a8:	uxtb	r2, r3
   320ac:	mov	r0, r8
   320b0:	mov	r1, r9
   320b4:	mov	r3, r0
   320b8:	and	r3, r3, #1
   320bc:	uxtb	r3, r3
   320c0:	orr	r3, r2, r3
   320c4:	uxtb	r2, r3
   320c8:	mov	r0, r6
   320cc:	mov	r1, r7
   320d0:	mov	r3, r0
   320d4:	and	r3, r3, #1
   320d8:	uxtb	r3, r3
   320dc:	orr	r3, r2, r3
   320e0:	uxtb	r3, r3
   320e4:	b	3232c <__assert_fail@plt+0x1fc40>
   320e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   320ec:	ldr	r2, [r3, #144]	; 0x90
   320f0:	ldr	r3, [fp, #52]	; 0x34
   320f4:	mov	ip, #0
   320f8:	adds	r3, r2, r3
   320fc:	bvc	32104 <__assert_fail@plt+0x1fa18>
   32100:	mov	ip, #1
   32104:	mov	r2, r3
   32108:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3210c:	str	r2, [r3, #144]	; 0x90
   32110:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32114:	ldrd	r0, [r3, #136]	; 0x88
   32118:	ldrd	r2, [fp, #44]	; 0x2c
   3211c:	mov	r4, #0
   32120:	mov	r5, #0
   32124:	strd	r4, [fp, #-44]	; 0xffffffd4
   32128:	adds	r4, r0, r2
   3212c:	adcs	r5, r1, r3
   32130:	bvc	32140 <__assert_fail@plt+0x1fa54>
   32134:	mov	r2, #1
   32138:	mov	r3, #0
   3213c:	strd	r2, [fp, #-44]	; 0xffffffd4
   32140:	mov	r2, r4
   32144:	mov	r3, r5
   32148:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3214c:	strd	r2, [r1, #136]	; 0x88
   32150:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32154:	ldrd	r0, [r3, #128]	; 0x80
   32158:	ldrd	r2, [fp, #36]	; 0x24
   3215c:	mov	r4, #0
   32160:	mov	r5, #0
   32164:	strd	r4, [fp, #-52]	; 0xffffffcc
   32168:	adds	r4, r0, r2
   3216c:	adcs	r5, r1, r3
   32170:	bvc	32180 <__assert_fail@plt+0x1fa94>
   32174:	mov	r2, #1
   32178:	mov	r3, #0
   3217c:	strd	r2, [fp, #-52]	; 0xffffffcc
   32180:	mov	r2, r4
   32184:	mov	r3, r5
   32188:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3218c:	strd	r2, [r1, #128]	; 0x80
   32190:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32194:	ldrd	r0, [r3, #120]	; 0x78
   32198:	ldrd	r2, [fp, #28]
   3219c:	mov	r4, #0
   321a0:	mov	r5, #0
   321a4:	strd	r4, [fp, #-60]	; 0xffffffc4
   321a8:	adds	r4, r0, r2
   321ac:	adcs	r5, r1, r3
   321b0:	bvc	321c0 <__assert_fail@plt+0x1fad4>
   321b4:	mov	r2, #1
   321b8:	mov	r3, #0
   321bc:	strd	r2, [fp, #-60]	; 0xffffffc4
   321c0:	mov	r2, r4
   321c4:	mov	r3, r5
   321c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   321cc:	strd	r2, [r1, #120]	; 0x78
   321d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   321d4:	ldrd	r0, [r3, #112]	; 0x70
   321d8:	ldrd	r2, [fp, #20]
   321dc:	mov	r4, #0
   321e0:	mov	r5, #0
   321e4:	strd	r4, [fp, #-68]	; 0xffffffbc
   321e8:	adds	r4, r0, r2
   321ec:	adcs	r5, r1, r3
   321f0:	bvc	32200 <__assert_fail@plt+0x1fb14>
   321f4:	mov	r2, #1
   321f8:	mov	r3, #0
   321fc:	strd	r2, [fp, #-68]	; 0xffffffbc
   32200:	mov	r2, r4
   32204:	mov	r3, r5
   32208:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3220c:	strd	r2, [r1, #112]	; 0x70
   32210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32214:	ldrd	r0, [r3, #104]	; 0x68
   32218:	ldrd	r2, [fp, #12]
   3221c:	mov	r8, #0
   32220:	mov	r9, #0
   32224:	adds	r4, r0, r2
   32228:	adcs	r5, r1, r3
   3222c:	bvc	32238 <__assert_fail@plt+0x1fb4c>
   32230:	mov	r8, #1
   32234:	mov	r9, #0
   32238:	mov	r2, r4
   3223c:	mov	r3, r5
   32240:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32244:	strd	r2, [r1, #104]	; 0x68
   32248:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3224c:	ldrd	r0, [r3, #96]	; 0x60
   32250:	ldrd	r2, [fp, #4]
   32254:	mov	r6, #0
   32258:	mov	r7, #0
   3225c:	adds	r4, r0, r2
   32260:	adcs	r5, r1, r3
   32264:	bvc	32270 <__assert_fail@plt+0x1fb84>
   32268:	mov	r6, #1
   3226c:	mov	r7, #0
   32270:	mov	r2, r4
   32274:	mov	r3, r5
   32278:	mov	r0, r2
   3227c:	mov	r1, r3
   32280:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32284:	strd	r0, [r3, #96]	; 0x60
   32288:	mov	r3, ip
   3228c:	and	r3, r3, #1
   32290:	uxtb	r2, r3
   32294:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   32298:	mov	r3, r0
   3229c:	and	r3, r3, #1
   322a0:	uxtb	r3, r3
   322a4:	orr	r3, r2, r3
   322a8:	uxtb	r2, r3
   322ac:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   322b0:	mov	r3, r0
   322b4:	and	r3, r3, #1
   322b8:	uxtb	r3, r3
   322bc:	orr	r3, r2, r3
   322c0:	uxtb	r2, r3
   322c4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   322c8:	mov	r3, r0
   322cc:	and	r3, r3, #1
   322d0:	uxtb	r3, r3
   322d4:	orr	r3, r2, r3
   322d8:	uxtb	r2, r3
   322dc:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   322e0:	mov	r3, r0
   322e4:	and	r3, r3, #1
   322e8:	uxtb	r3, r3
   322ec:	orr	r3, r2, r3
   322f0:	uxtb	r2, r3
   322f4:	mov	r0, r8
   322f8:	mov	r1, r9
   322fc:	mov	r3, r0
   32300:	and	r3, r3, #1
   32304:	uxtb	r3, r3
   32308:	orr	r3, r2, r3
   3230c:	uxtb	r2, r3
   32310:	mov	r0, r6
   32314:	mov	r1, r7
   32318:	mov	r3, r0
   3231c:	and	r3, r3, #1
   32320:	uxtb	r3, r3
   32324:	orr	r3, r2, r3
   32328:	uxtb	r3, r3
   3232c:	cmp	r3, #0
   32330:	beq	3233c <__assert_fail@plt+0x1fc50>
   32334:	mov	r3, #0
   32338:	b	3234c <__assert_fail@plt+0x1fc60>
   3233c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32340:	mov	r2, #1
   32344:	strb	r2, [r3, #153]	; 0x99
   32348:	mov	r3, #1
   3234c:	mov	r0, r3
   32350:	sub	sp, fp, #24
   32354:	ldrd	r4, [sp]
   32358:	ldrd	r6, [sp, #8]
   3235c:	ldrd	r8, [sp, #16]
   32360:	ldr	fp, [sp, #24]
   32364:	add	sp, sp, #28
   32368:	add	sp, sp, #8
   3236c:	bx	lr
   32370:	push	{fp}		; (str fp, [sp, #-4]!)
   32374:	add	fp, sp, #0
   32378:	sub	sp, sp, #20
   3237c:	str	r0, [fp, #-8]
   32380:	strd	r2, [fp, #-20]	; 0xffffffec
   32384:	ldr	r1, [fp, #-8]
   32388:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3238c:	strd	r2, [r1, #72]	; 0x48
   32390:	ldr	r1, [fp, #-8]
   32394:	ldrd	r2, [fp, #4]
   32398:	strd	r2, [r1, #80]	; 0x50
   3239c:	ldr	r3, [fp, #-8]
   323a0:	ldr	r2, [fp, #12]
   323a4:	str	r2, [r3, #88]	; 0x58
   323a8:	ldr	r3, [fp, #-8]
   323ac:	ldr	r2, [fp, #16]
   323b0:	str	r2, [r3, #92]	; 0x5c
   323b4:	nop	{0}
   323b8:	add	sp, fp, #0
   323bc:	pop	{fp}		; (ldr fp, [sp], #4)
   323c0:	bx	lr
   323c4:	strd	r4, [sp, #-16]!
   323c8:	str	fp, [sp, #8]
   323cc:	str	lr, [sp, #12]
   323d0:	add	fp, sp, #12
   323d4:	sub	sp, sp, #32
   323d8:	str	r0, [fp, #-24]	; 0xffffffe8
   323dc:	str	r1, [fp, #-28]	; 0xffffffe4
   323e0:	str	r2, [fp, #-32]	; 0xffffffe0
   323e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   323e8:	ldrb	r3, [r3, #187]	; 0xbb
   323ec:	cmp	r3, #0
   323f0:	beq	32490 <__assert_fail@plt+0x1fda4>
   323f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   323f8:	ldrd	r2, [r3, #8]
   323fc:	mvn	r0, #0
   32400:	mvn	r1, #0
   32404:	cmp	r2, r0
   32408:	sbcs	r3, r3, r1
   3240c:	blt	32464 <__assert_fail@plt+0x1fd78>
   32410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32414:	ldrd	r2, [r3, #8]
   32418:	cmp	r2, #13
   3241c:	sbcs	r3, r3, #0
   32420:	bge	32464 <__assert_fail@plt+0x1fd78>
   32424:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3242c:	ldrd	r2, [r3, #8]
   32430:	adds	r4, r2, #1
   32434:	adc	r5, r3, #0
   32438:	mov	r3, #11
   3243c:	mul	r2, r3, r4
   32440:	movw	r3, #45420	; 0xb16c
   32444:	movt	r3, #6
   32448:	add	r3, r2, r3
   3244c:	movw	r2, #38480	; 0x9650
   32450:	movt	r2, #6
   32454:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32458:	bl	1241c <snprintf@plt>
   3245c:	mov	r3, r0
   32460:	b	32488 <__assert_fail@plt+0x1fd9c>
   32464:	ldr	r1, [fp, #-32]	; 0xffffffe0
   32468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3246c:	ldrd	r2, [r3, #8]
   32470:	strd	r2, [sp]
   32474:	movw	r2, #38484	; 0x9654
   32478:	movt	r2, #6
   3247c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   32480:	bl	1241c <snprintf@plt>
   32484:	mov	r3, r0
   32488:	str	r3, [fp, #-16]
   3248c:	b	324a4 <__assert_fail@plt+0x1fdb8>
   32490:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32494:	mov	r2, #0
   32498:	strb	r2, [r3]
   3249c:	mov	r3, #0
   324a0:	str	r3, [fp, #-16]
   324a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   324a8:	ldr	r3, [r3, #16]
   324ac:	cmp	r3, #0
   324b0:	blt	32544 <__assert_fail@plt+0x1fe58>
   324b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   324b8:	ldr	r3, [r3, #16]
   324bc:	cmp	r3, #6
   324c0:	bgt	32544 <__assert_fail@plt+0x1fe58>
   324c4:	ldr	r3, [fp, #-16]
   324c8:	cmp	r3, #0
   324cc:	blt	32544 <__assert_fail@plt+0x1fe58>
   324d0:	ldr	r2, [fp, #-16]
   324d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   324d8:	cmp	r2, r3
   324dc:	bge	32544 <__assert_fail@plt+0x1fe58>
   324e0:	ldr	r3, [fp, #-16]
   324e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   324e8:	add	r0, r2, r3
   324ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   324f0:	ldr	r3, [fp, #-16]
   324f4:	sub	r3, r2, r3
   324f8:	mov	ip, r3
   324fc:	ldr	r3, [fp, #-16]
   32500:	cmp	r3, #0
   32504:	moveq	r3, #1
   32508:	movne	r3, #0
   3250c:	uxtb	r3, r3
   32510:	mov	r2, r3
   32514:	movw	r3, #38492	; 0x965c
   32518:	movt	r3, #6
   3251c:	add	r1, r2, r3
   32520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32524:	ldr	r3, [r3, #16]
   32528:	lsl	r2, r3, #2
   3252c:	movw	r3, #45576	; 0xb208
   32530:	movt	r3, #6
   32534:	add	r3, r2, r3
   32538:	mov	r2, r1
   3253c:	mov	r1, ip
   32540:	bl	1241c <snprintf@plt>
   32544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32548:	mov	r0, r3
   3254c:	sub	sp, fp, #12
   32550:	ldrd	r4, [sp]
   32554:	ldr	fp, [sp, #8]
   32558:	add	sp, sp, #12
   3255c:	pop	{pc}		; (ldr pc, [sp], #4)
   32560:	str	fp, [sp, #-8]!
   32564:	str	lr, [sp, #4]
   32568:	add	fp, sp, #4
   3256c:	sub	sp, sp, #32
   32570:	str	r0, [fp, #-32]	; 0xffffffe0
   32574:	str	r1, [fp, #-36]	; 0xffffffdc
   32578:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3257c:	str	r3, [fp, #-8]
   32580:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32584:	cmp	r3, #0
   32588:	bge	32594 <__assert_fail@plt+0x1fea8>
   3258c:	mov	r3, #45	; 0x2d
   32590:	b	32598 <__assert_fail@plt+0x1feac>
   32594:	mov	r3, #43	; 0x2b
   32598:	strb	r3, [fp, #-9]
   3259c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   325a0:	movw	r2, #46021	; 0xb3c5
   325a4:	movt	r2, #37282	; 0x91a2
   325a8:	smull	r1, r2, r2, r3
   325ac:	add	r2, r2, r3
   325b0:	asr	r2, r2, #11
   325b4:	asr	r3, r3, #31
   325b8:	sub	r3, r2, r3
   325bc:	cmp	r3, #0
   325c0:	rsblt	r3, r3, #0
   325c4:	str	r3, [fp, #-16]
   325c8:	ldrb	r2, [fp, #-9]
   325cc:	ldr	r3, [fp, #-16]
   325d0:	movw	r1, #38496	; 0x9660
   325d4:	movt	r1, #6
   325d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   325dc:	bl	12590 <sprintf@plt>
   325e0:	mov	r3, r0
   325e4:	mov	r2, r3
   325e8:	ldr	r3, [fp, #-8]
   325ec:	add	r3, r3, r2
   325f0:	str	r3, [fp, #-8]
   325f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   325f8:	movw	r2, #46021	; 0xb3c5
   325fc:	movt	r2, #37282	; 0x91a2
   32600:	smull	r1, r2, r2, r3
   32604:	add	r2, r2, r3
   32608:	asr	r1, r2, #11
   3260c:	asr	r2, r3, #31
   32610:	sub	r2, r1, r2
   32614:	mov	r1, #3600	; 0xe10
   32618:	mul	r2, r1, r2
   3261c:	sub	r2, r3, r2
   32620:	eor	r3, r2, r2, asr #31
   32624:	sub	r3, r3, r2, asr #31
   32628:	str	r3, [fp, #-20]	; 0xffffffec
   3262c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32630:	cmp	r3, #0
   32634:	beq	327dc <__assert_fail@plt+0x200f0>
   32638:	ldr	r3, [fp, #-20]	; 0xffffffec
   3263c:	movw	r2, #34953	; 0x8889
   32640:	movt	r2, #34952	; 0x8888
   32644:	smull	r1, r2, r2, r3
   32648:	add	r2, r2, r3
   3264c:	asr	r2, r2, #5
   32650:	asr	r3, r3, #31
   32654:	sub	r3, r2, r3
   32658:	str	r3, [fp, #-24]	; 0xffffffe8
   3265c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32660:	movw	r3, #34953	; 0x8889
   32664:	movt	r3, #34952	; 0x8888
   32668:	smull	r1, r3, r3, r2
   3266c:	add	r3, r3, r2
   32670:	asr	r1, r3, #5
   32674:	asr	r3, r2, #31
   32678:	sub	r1, r1, r3
   3267c:	mov	r3, r1
   32680:	lsl	r3, r3, #4
   32684:	sub	r3, r3, r1
   32688:	lsl	r3, r3, #2
   3268c:	sub	r3, r2, r3
   32690:	str	r3, [fp, #-28]	; 0xffffffe4
   32694:	ldr	r3, [fp, #-8]
   32698:	add	r2, r3, #1
   3269c:	str	r2, [fp, #-8]
   326a0:	mov	r2, #58	; 0x3a
   326a4:	strb	r2, [r3]
   326a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   326ac:	movw	r3, #26215	; 0x6667
   326b0:	movt	r3, #26214	; 0x6666
   326b4:	smull	r1, r3, r3, r2
   326b8:	asr	r1, r3, #2
   326bc:	asr	r3, r2, #31
   326c0:	sub	r3, r1, r3
   326c4:	uxtb	r2, r3
   326c8:	ldr	r3, [fp, #-8]
   326cc:	add	r1, r3, #1
   326d0:	str	r1, [fp, #-8]
   326d4:	add	r2, r2, #48	; 0x30
   326d8:	uxtb	r2, r2
   326dc:	strb	r2, [r3]
   326e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   326e4:	movw	r3, #26215	; 0x6667
   326e8:	movt	r3, #26214	; 0x6666
   326ec:	smull	r1, r3, r3, r2
   326f0:	asr	r1, r3, #2
   326f4:	asr	r3, r2, #31
   326f8:	sub	r1, r1, r3
   326fc:	mov	r3, r1
   32700:	lsl	r3, r3, #2
   32704:	add	r3, r3, r1
   32708:	lsl	r3, r3, #1
   3270c:	sub	r1, r2, r3
   32710:	uxtb	r2, r1
   32714:	ldr	r3, [fp, #-8]
   32718:	add	r1, r3, #1
   3271c:	str	r1, [fp, #-8]
   32720:	add	r2, r2, #48	; 0x30
   32724:	uxtb	r2, r2
   32728:	strb	r2, [r3]
   3272c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32730:	cmp	r3, #0
   32734:	beq	327d0 <__assert_fail@plt+0x200e4>
   32738:	ldr	r3, [fp, #-8]
   3273c:	add	r2, r3, #1
   32740:	str	r2, [fp, #-8]
   32744:	mov	r2, #58	; 0x3a
   32748:	strb	r2, [r3]
   3274c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32750:	movw	r3, #26215	; 0x6667
   32754:	movt	r3, #26214	; 0x6666
   32758:	smull	r1, r3, r3, r2
   3275c:	asr	r1, r3, #2
   32760:	asr	r3, r2, #31
   32764:	sub	r3, r1, r3
   32768:	uxtb	r2, r3
   3276c:	ldr	r3, [fp, #-8]
   32770:	add	r1, r3, #1
   32774:	str	r1, [fp, #-8]
   32778:	add	r2, r2, #48	; 0x30
   3277c:	uxtb	r2, r2
   32780:	strb	r2, [r3]
   32784:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32788:	movw	r3, #26215	; 0x6667
   3278c:	movt	r3, #26214	; 0x6666
   32790:	smull	r1, r3, r3, r2
   32794:	asr	r1, r3, #2
   32798:	asr	r3, r2, #31
   3279c:	sub	r1, r1, r3
   327a0:	mov	r3, r1
   327a4:	lsl	r3, r3, #2
   327a8:	add	r3, r3, r1
   327ac:	lsl	r3, r3, #1
   327b0:	sub	r1, r2, r3
   327b4:	uxtb	r2, r1
   327b8:	ldr	r3, [fp, #-8]
   327bc:	add	r1, r3, #1
   327c0:	str	r1, [fp, #-8]
   327c4:	add	r2, r2, #48	; 0x30
   327c8:	uxtb	r2, r2
   327cc:	strb	r2, [r3]
   327d0:	ldr	r3, [fp, #-8]
   327d4:	mov	r2, #0
   327d8:	strb	r2, [r3]
   327dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   327e0:	mov	r0, r3
   327e4:	sub	sp, fp, #4
   327e8:	ldr	fp, [sp]
   327ec:	add	sp, sp, #4
   327f0:	pop	{pc}		; (ldr pc, [sp], #4)
   327f4:	strd	r4, [sp, #-16]!
   327f8:	str	fp, [sp, #8]
   327fc:	str	lr, [sp, #12]
   32800:	add	fp, sp, #12
   32804:	sub	sp, sp, #184	; 0xb8
   32808:	str	r0, [fp, #-176]	; 0xffffff50
   3280c:	str	r1, [fp, #-180]	; 0xffffff4c
   32810:	mov	r3, #0
   32814:	strb	r3, [fp, #-13]
   32818:	ldr	r0, [fp, #-180]	; 0xffffff4c
   3281c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   32820:	mov	r3, r0
   32824:	eor	r3, r3, #1
   32828:	uxtb	r3, r3
   3282c:	cmp	r3, #0
   32830:	bne	32ccc <__assert_fail@plt+0x205e0>
   32834:	movw	r0, #38504	; 0x9668
   32838:	movt	r0, #6
   3283c:	bl	12398 <gettext@plt>
   32840:	mov	r3, r0
   32844:	ldr	r1, [fp, #-176]	; 0xffffff50
   32848:	mov	r0, r3
   3284c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   32850:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32854:	ldr	r3, [r3, #156]	; 0x9c
   32858:	cmp	r3, #0
   3285c:	beq	328d0 <__assert_fail@plt+0x201e4>
   32860:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32864:	ldrb	r3, [r3, #181]	; 0xb5
   32868:	eor	r3, r3, #1
   3286c:	uxtb	r3, r3
   32870:	cmp	r3, #0
   32874:	beq	328d0 <__assert_fail@plt+0x201e4>
   32878:	movw	r3, #50984	; 0xc728
   3287c:	movt	r3, #7
   32880:	ldr	ip, [r3]
   32884:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32888:	ldrd	r4, [r3, #40]	; 0x28
   3288c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32890:	ldrd	r2, [r3, #56]	; 0x38
   32894:	ldr	r1, [fp, #-180]	; 0xffffff4c
   32898:	ldrd	r0, [r1, #64]	; 0x40
   3289c:	strd	r0, [sp, #8]
   328a0:	strd	r2, [sp]
   328a4:	mov	r2, r4
   328a8:	mov	r3, r5
   328ac:	movw	r1, #38524	; 0x967c
   328b0:	movt	r1, #6
   328b4:	mov	r0, ip
   328b8:	bl	123f8 <fprintf@plt>
   328bc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   328c0:	mov	r2, #1
   328c4:	strb	r2, [r3, #181]	; 0xb5
   328c8:	mov	r3, #1
   328cc:	strb	r3, [fp, #-13]
   328d0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   328d4:	ldrb	r2, [r3, #180]	; 0xb4
   328d8:	ldr	r3, [fp, #-180]	; 0xffffff4c
   328dc:	ldrb	r3, [r3, #186]	; 0xba
   328e0:	cmp	r2, r3
   328e4:	beq	32950 <__assert_fail@plt+0x20264>
   328e8:	ldrb	r3, [fp, #-13]
   328ec:	cmp	r3, #0
   328f0:	beq	3290c <__assert_fail@plt+0x20220>
   328f4:	movw	r3, #50984	; 0xc728
   328f8:	movt	r3, #7
   328fc:	ldr	r3, [r3]
   32900:	mov	r1, r3
   32904:	mov	r0, #32
   32908:	bl	1256c <fputc@plt>
   3290c:	movw	r3, #50984	; 0xc728
   32910:	movt	r3, #7
   32914:	ldr	r4, [r3]
   32918:	movw	r0, #38556	; 0x969c
   3291c:	movt	r0, #6
   32920:	bl	12398 <gettext@plt>
   32924:	mov	r1, r0
   32928:	ldr	r3, [fp, #-180]	; 0xffffff4c
   3292c:	ldrd	r2, [r3, #40]	; 0x28
   32930:	mov	r0, r4
   32934:	bl	123f8 <fprintf@plt>
   32938:	ldr	r3, [fp, #-180]	; 0xffffff4c
   3293c:	ldrb	r2, [r3, #180]	; 0xb4
   32940:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32944:	strb	r2, [r3, #186]	; 0xba
   32948:	mov	r3, #1
   3294c:	strb	r3, [fp, #-13]
   32950:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32954:	ldr	r3, [r3, #172]	; 0xac
   32958:	cmp	r3, #0
   3295c:	beq	32a64 <__assert_fail@plt+0x20378>
   32960:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32964:	ldrb	r3, [r3, #184]	; 0xb8
   32968:	eor	r3, r3, #1
   3296c:	uxtb	r3, r3
   32970:	cmp	r3, #0
   32974:	beq	32a64 <__assert_fail@plt+0x20378>
   32978:	ldr	r3, [fp, #-180]	; 0xffffff4c
   3297c:	ldr	r3, [r3, #88]	; 0x58
   32980:	mov	r2, r3
   32984:	asr	r3, r2, #31
   32988:	strd	r2, [fp, #-28]	; 0xffffffe4
   3298c:	movw	r3, #50984	; 0xc728
   32990:	movt	r3, #7
   32994:	ldr	ip, [r3]
   32998:	ldrb	r3, [fp, #-13]
   3299c:	eor	r3, r3, #1
   329a0:	uxtb	r3, r3
   329a4:	mov	r2, r3
   329a8:	movw	r3, #38572	; 0x96ac
   329ac:	movt	r3, #6
   329b0:	add	lr, r2, r3
   329b4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   329b8:	ldrd	r4, [r3, #72]	; 0x48
   329bc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   329c0:	ldrd	r2, [r3, #80]	; 0x50
   329c4:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   329c8:	strd	r0, [sp, #8]
   329cc:	strd	r2, [sp]
   329d0:	mov	r2, r4
   329d4:	mov	r3, r5
   329d8:	mov	r1, lr
   329dc:	mov	r0, ip
   329e0:	bl	123f8 <fprintf@plt>
   329e4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   329e8:	ldr	r3, [r3, #92]	; 0x5c
   329ec:	cmp	r3, #0
   329f0:	beq	32a20 <__assert_fail@plt+0x20334>
   329f4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   329f8:	ldr	r3, [r3, #92]	; 0x5c
   329fc:	str	r3, [fp, #-32]	; 0xffffffe0
   32a00:	movw	r3, #50984	; 0xc728
   32a04:	movt	r3, #7
   32a08:	ldr	r3, [r3]
   32a0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32a10:	movw	r1, #38596	; 0x96c4
   32a14:	movt	r1, #6
   32a18:	mov	r0, r3
   32a1c:	bl	123f8 <fprintf@plt>
   32a20:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32a24:	ldr	r3, [r3, #28]
   32a28:	cmp	r3, #1
   32a2c:	bne	32a50 <__assert_fail@plt+0x20364>
   32a30:	movw	r3, #50984	; 0xc728
   32a34:	movt	r3, #7
   32a38:	ldr	r3, [r3]
   32a3c:	mov	r2, #2
   32a40:	mov	r1, #1
   32a44:	movw	r0, #38604	; 0x96cc
   32a48:	movt	r0, #6
   32a4c:	bl	12224 <fwrite@plt>
   32a50:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32a54:	mov	r2, #1
   32a58:	strb	r2, [r3, #184]	; 0xb8
   32a5c:	mov	r3, #1
   32a60:	strb	r3, [fp, #-13]
   32a64:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32a68:	ldr	r3, [r3, #160]	; 0xa0
   32a6c:	cmp	r3, #0
   32a70:	beq	32b1c <__assert_fail@plt+0x20430>
   32a74:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32a78:	ldrb	r3, [r3, #182]	; 0xb6
   32a7c:	eor	r3, r3, #1
   32a80:	uxtb	r3, r3
   32a84:	cmp	r3, #0
   32a88:	beq	32b1c <__assert_fail@plt+0x20430>
   32a8c:	ldrb	r3, [fp, #-13]
   32a90:	cmp	r3, #0
   32a94:	beq	32ab0 <__assert_fail@plt+0x203c4>
   32a98:	movw	r3, #50984	; 0xc728
   32a9c:	movt	r3, #7
   32aa0:	ldr	r3, [r3]
   32aa4:	mov	r1, r3
   32aa8:	mov	r0, #32
   32aac:	bl	1256c <fputc@plt>
   32ab0:	movw	r3, #50984	; 0xc728
   32ab4:	movt	r3, #7
   32ab8:	ldr	r4, [r3]
   32abc:	movw	r0, #38608	; 0x96d0
   32ac0:	movt	r0, #6
   32ac4:	bl	12398 <gettext@plt>
   32ac8:	mov	r5, r0
   32acc:	sub	r3, fp, #172	; 0xac
   32ad0:	mov	r2, #100	; 0x64
   32ad4:	mov	r1, r3
   32ad8:	ldr	r0, [fp, #-180]	; 0xffffff4c
   32adc:	bl	323c4 <__assert_fail@plt+0x1fcd8>
   32ae0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32ae4:	ldrd	r2, [r3, #8]
   32ae8:	ldr	r1, [fp, #-180]	; 0xffffff4c
   32aec:	ldr	r1, [r1, #16]
   32af0:	str	r1, [sp, #8]
   32af4:	strd	r2, [sp]
   32af8:	mov	r2, r0
   32afc:	mov	r1, r5
   32b00:	mov	r0, r4
   32b04:	bl	123f8 <fprintf@plt>
   32b08:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32b0c:	mov	r2, #1
   32b10:	strb	r2, [r3, #182]	; 0xb6
   32b14:	mov	r3, #1
   32b18:	strb	r3, [fp, #-13]
   32b1c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32b20:	ldr	r3, [r3, #164]	; 0xa4
   32b24:	cmp	r3, #0
   32b28:	beq	32bb0 <__assert_fail@plt+0x204c4>
   32b2c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32b30:	ldrb	r3, [r3, #183]	; 0xb7
   32b34:	eor	r3, r3, #1
   32b38:	uxtb	r3, r3
   32b3c:	cmp	r3, #0
   32b40:	beq	32bb0 <__assert_fail@plt+0x204c4>
   32b44:	movw	r3, #50984	; 0xc728
   32b48:	movt	r3, #7
   32b4c:	ldr	r0, [r3]
   32b50:	ldrb	r3, [fp, #-13]
   32b54:	eor	r3, r3, #1
   32b58:	uxtb	r3, r3
   32b5c:	mov	r2, r3
   32b60:	movw	r3, #38640	; 0x96f0
   32b64:	movt	r3, #6
   32b68:	add	r1, r2, r3
   32b6c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32b70:	ldr	r2, [r3, #20]
   32b74:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32b78:	ldr	r3, [r3, #168]	; 0xa8
   32b7c:	cmp	r3, #0
   32b80:	beq	32b90 <__assert_fail@plt+0x204a4>
   32b84:	movw	r3, #38652	; 0x96fc
   32b88:	movt	r3, #6
   32b8c:	b	32b98 <__assert_fail@plt+0x204ac>
   32b90:	movw	r3, #38660	; 0x9704
   32b94:	movt	r3, #6
   32b98:	bl	123f8 <fprintf@plt>
   32b9c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32ba0:	mov	r2, #1
   32ba4:	strb	r2, [r3, #183]	; 0xb7
   32ba8:	mov	r3, #1
   32bac:	strb	r3, [fp, #-13]
   32bb0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32bb4:	ldr	r3, [r3, #176]	; 0xb0
   32bb8:	cmp	r3, #0
   32bbc:	beq	32c40 <__assert_fail@plt+0x20554>
   32bc0:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32bc4:	ldrb	r3, [r3, #185]	; 0xb9
   32bc8:	eor	r3, r3, #1
   32bcc:	uxtb	r3, r3
   32bd0:	cmp	r3, #0
   32bd4:	beq	32c40 <__assert_fail@plt+0x20554>
   32bd8:	movw	r3, #50984	; 0xc728
   32bdc:	movt	r3, #7
   32be0:	ldr	r4, [r3]
   32be4:	ldrb	r3, [fp, #-13]
   32be8:	eor	r3, r3, #1
   32bec:	uxtb	r3, r3
   32bf0:	mov	r2, r3
   32bf4:	movw	r3, #38664	; 0x9708
   32bf8:	movt	r3, #6
   32bfc:	add	r5, r2, r3
   32c00:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32c04:	ldr	r3, [r3, #24]
   32c08:	sub	r2, fp, #72	; 0x48
   32c0c:	mov	r1, r2
   32c10:	mov	r0, r3
   32c14:	bl	32560 <__assert_fail@plt+0x1fe74>
   32c18:	mov	r3, r0
   32c1c:	mov	r2, r3
   32c20:	mov	r1, r5
   32c24:	mov	r0, r4
   32c28:	bl	123f8 <fprintf@plt>
   32c2c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32c30:	mov	r2, #1
   32c34:	strb	r2, [r3, #185]	; 0xb9
   32c38:	mov	r3, #1
   32c3c:	strb	r3, [fp, #-13]
   32c40:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32c44:	ldrb	r3, [r3, #152]	; 0x98
   32c48:	cmp	r3, #0
   32c4c:	beq	32cb0 <__assert_fail@plt+0x205c4>
   32c50:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32c54:	ldr	r3, [r3, #88]	; 0x58
   32c58:	mov	r2, r3
   32c5c:	asr	r3, r2, #31
   32c60:	strd	r2, [fp, #-44]	; 0xffffffd4
   32c64:	ldrb	r3, [fp, #-13]
   32c68:	cmp	r3, #0
   32c6c:	beq	32c88 <__assert_fail@plt+0x2059c>
   32c70:	movw	r3, #50984	; 0xc728
   32c74:	movt	r3, #7
   32c78:	ldr	r3, [r3]
   32c7c:	mov	r1, r3
   32c80:	mov	r0, #32
   32c84:	bl	1256c <fputc@plt>
   32c88:	movw	r3, #50984	; 0xc728
   32c8c:	movt	r3, #7
   32c90:	ldr	r4, [r3]
   32c94:	movw	r0, #38672	; 0x9710
   32c98:	movt	r0, #6
   32c9c:	bl	12398 <gettext@plt>
   32ca0:	mov	r1, r0
   32ca4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   32ca8:	mov	r0, r4
   32cac:	bl	123f8 <fprintf@plt>
   32cb0:	movw	r3, #50984	; 0xc728
   32cb4:	movt	r3, #7
   32cb8:	ldr	r3, [r3]
   32cbc:	mov	r1, r3
   32cc0:	mov	r0, #10
   32cc4:	bl	1256c <fputc@plt>
   32cc8:	b	32cd0 <__assert_fail@plt+0x205e4>
   32ccc:	nop	{0}
   32cd0:	sub	sp, fp, #12
   32cd4:	ldrd	r4, [sp]
   32cd8:	ldr	fp, [sp, #8]
   32cdc:	add	sp, sp, #12
   32ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   32ce4:	str	fp, [sp, #-8]!
   32ce8:	str	lr, [sp, #4]
   32cec:	add	fp, sp, #4
   32cf0:	sub	sp, sp, #24
   32cf4:	mov	r1, r0
   32cf8:	strd	r2, [fp, #-20]	; 0xffffffec
   32cfc:	mov	r3, r1
   32d00:	strb	r3, [fp, #-5]
   32d04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   32d08:	orrs	r3, r2, r3
   32d0c:	bne	32d18 <__assert_fail@plt+0x2062c>
   32d10:	ldrb	r3, [fp, #-5]
   32d14:	b	32d54 <__assert_fail@plt+0x20668>
   32d18:	movw	r3, #50984	; 0xc728
   32d1c:	movt	r3, #7
   32d20:	ldr	r0, [r3]
   32d24:	ldrb	r3, [fp, #-5]
   32d28:	eor	r3, r3, #1
   32d2c:	uxtb	r3, r3
   32d30:	mov	r2, r3
   32d34:	movw	r3, #38696	; 0x9728
   32d38:	movt	r3, #6
   32d3c:	add	r1, r2, r3
   32d40:	ldr	r3, [fp, #4]
   32d44:	str	r3, [sp]
   32d48:	ldrd	r2, [fp, #-20]	; 0xffffffec
   32d4c:	bl	123f8 <fprintf@plt>
   32d50:	mov	r3, #1
   32d54:	mov	r0, r3
   32d58:	sub	sp, fp, #4
   32d5c:	ldr	fp, [sp]
   32d60:	add	sp, sp, #4
   32d64:	pop	{pc}		; (ldr pc, [sp], #4)
   32d68:	str	fp, [sp, #-8]!
   32d6c:	str	lr, [sp, #4]
   32d70:	add	fp, sp, #4
   32d74:	sub	sp, sp, #24
   32d78:	str	r0, [fp, #-16]
   32d7c:	str	r1, [fp, #-20]	; 0xffffffec
   32d80:	mov	r3, #0
   32d84:	strb	r3, [fp, #-5]
   32d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   32d8c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   32d90:	mov	r3, r0
   32d94:	eor	r3, r3, #1
   32d98:	uxtb	r3, r3
   32d9c:	cmp	r3, #0
   32da0:	bne	32fc8 <__assert_fail@plt+0x208dc>
   32da4:	movw	r0, #38504	; 0x9668
   32da8:	movt	r0, #6
   32dac:	bl	12398 <gettext@plt>
   32db0:	mov	r3, r0
   32db4:	ldr	r1, [fp, #-16]
   32db8:	mov	r0, r3
   32dbc:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   32dc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32dc4:	ldrd	r2, [r3, #96]	; 0x60
   32dc8:	orrs	r3, r2, r3
   32dcc:	bne	32e5c <__assert_fail@plt+0x20770>
   32dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32dd4:	ldrd	r2, [r3, #104]	; 0x68
   32dd8:	orrs	r3, r2, r3
   32ddc:	bne	32e5c <__assert_fail@plt+0x20770>
   32de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32de4:	ldrd	r2, [r3, #112]	; 0x70
   32de8:	orrs	r3, r2, r3
   32dec:	bne	32e5c <__assert_fail@plt+0x20770>
   32df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32df4:	ldrd	r2, [r3, #120]	; 0x78
   32df8:	orrs	r3, r2, r3
   32dfc:	bne	32e5c <__assert_fail@plt+0x20770>
   32e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e04:	ldrd	r2, [r3, #128]	; 0x80
   32e08:	orrs	r3, r2, r3
   32e0c:	bne	32e5c <__assert_fail@plt+0x20770>
   32e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e14:	ldrd	r2, [r3, #136]	; 0x88
   32e18:	orrs	r3, r2, r3
   32e1c:	bne	32e5c <__assert_fail@plt+0x20770>
   32e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e24:	ldr	r3, [r3, #144]	; 0x90
   32e28:	cmp	r3, #0
   32e2c:	bne	32e5c <__assert_fail@plt+0x20770>
   32e30:	movw	r0, #38708	; 0x9734
   32e34:	movt	r0, #6
   32e38:	bl	12398 <gettext@plt>
   32e3c:	mov	r2, r0
   32e40:	movw	r3, #50984	; 0xc728
   32e44:	movt	r3, #7
   32e48:	ldr	r3, [r3]
   32e4c:	mov	r1, r3
   32e50:	mov	r0, r2
   32e54:	bl	12680 <fputs@plt>
   32e58:	b	32fcc <__assert_fail@plt+0x208e0>
   32e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e60:	ldrd	r0, [r3, #96]	; 0x60
   32e64:	ldrb	ip, [fp, #-5]
   32e68:	movw	r3, #38724	; 0x9744
   32e6c:	movt	r3, #6
   32e70:	str	r3, [sp]
   32e74:	mov	r2, r0
   32e78:	mov	r3, r1
   32e7c:	mov	r0, ip
   32e80:	bl	32ce4 <__assert_fail@plt+0x205f8>
   32e84:	mov	r3, r0
   32e88:	strb	r3, [fp, #-5]
   32e8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32e90:	ldrd	r0, [r3, #104]	; 0x68
   32e94:	ldrb	ip, [fp, #-5]
   32e98:	movw	r3, #38732	; 0x974c
   32e9c:	movt	r3, #6
   32ea0:	str	r3, [sp]
   32ea4:	mov	r2, r0
   32ea8:	mov	r3, r1
   32eac:	mov	r0, ip
   32eb0:	bl	32ce4 <__assert_fail@plt+0x205f8>
   32eb4:	mov	r3, r0
   32eb8:	strb	r3, [fp, #-5]
   32ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   32ec0:	ldrd	r0, [r3, #112]	; 0x70
   32ec4:	ldrb	ip, [fp, #-5]
   32ec8:	movw	r3, #38744	; 0x9758
   32ecc:	movt	r3, #6
   32ed0:	str	r3, [sp]
   32ed4:	mov	r2, r0
   32ed8:	mov	r3, r1
   32edc:	mov	r0, ip
   32ee0:	bl	32ce4 <__assert_fail@plt+0x205f8>
   32ee4:	mov	r3, r0
   32ee8:	strb	r3, [fp, #-5]
   32eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   32ef0:	ldrd	r0, [r3, #120]	; 0x78
   32ef4:	ldrb	ip, [fp, #-5]
   32ef8:	movw	r3, #38752	; 0x9760
   32efc:	movt	r3, #6
   32f00:	str	r3, [sp]
   32f04:	mov	r2, r0
   32f08:	mov	r3, r1
   32f0c:	mov	r0, ip
   32f10:	bl	32ce4 <__assert_fail@plt+0x205f8>
   32f14:	mov	r3, r0
   32f18:	strb	r3, [fp, #-5]
   32f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32f20:	ldrd	r0, [r3, #128]	; 0x80
   32f24:	ldrb	ip, [fp, #-5]
   32f28:	movw	r3, #38760	; 0x9768
   32f2c:	movt	r3, #6
   32f30:	str	r3, [sp]
   32f34:	mov	r2, r0
   32f38:	mov	r3, r1
   32f3c:	mov	r0, ip
   32f40:	bl	32ce4 <__assert_fail@plt+0x205f8>
   32f44:	mov	r3, r0
   32f48:	strb	r3, [fp, #-5]
   32f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32f50:	ldrd	r0, [r3, #136]	; 0x88
   32f54:	ldrb	ip, [fp, #-5]
   32f58:	movw	r3, #38768	; 0x9770
   32f5c:	movt	r3, #6
   32f60:	str	r3, [sp]
   32f64:	mov	r2, r0
   32f68:	mov	r3, r1
   32f6c:	mov	r0, ip
   32f70:	bl	32ce4 <__assert_fail@plt+0x205f8>
   32f74:	mov	r3, r0
   32f78:	strb	r3, [fp, #-5]
   32f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32f80:	ldr	r3, [r3, #144]	; 0x90
   32f84:	mov	r0, r3
   32f88:	asr	r1, r0, #31
   32f8c:	ldrb	ip, [fp, #-5]
   32f90:	movw	r3, #38776	; 0x9778
   32f94:	movt	r3, #6
   32f98:	str	r3, [sp]
   32f9c:	mov	r2, r0
   32fa0:	mov	r3, r1
   32fa4:	mov	r0, ip
   32fa8:	bl	32ce4 <__assert_fail@plt+0x205f8>
   32fac:	movw	r3, #50984	; 0xc728
   32fb0:	movt	r3, #7
   32fb4:	ldr	r3, [r3]
   32fb8:	mov	r1, r3
   32fbc:	mov	r0, #10
   32fc0:	bl	1256c <fputc@plt>
   32fc4:	b	32fcc <__assert_fail@plt+0x208e0>
   32fc8:	nop	{0}
   32fcc:	sub	sp, fp, #4
   32fd0:	ldr	fp, [sp]
   32fd4:	add	sp, sp, #4
   32fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   32fdc:	push	{fp}		; (str fp, [sp, #-4]!)
   32fe0:	add	fp, sp, #0
   32fe4:	sub	sp, sp, #20
   32fe8:	str	r0, [fp, #-8]
   32fec:	str	r1, [fp, #-12]
   32ff0:	str	r2, [fp, #-16]
   32ff4:	str	r3, [fp, #-20]	; 0xffffffec
   32ff8:	ldr	r3, [fp, #-8]
   32ffc:	cmp	r3, #0
   33000:	bne	33010 <__assert_fail@plt+0x20924>
   33004:	movw	r3, #39888	; 0x9bd0
   33008:	movt	r3, #6
   3300c:	str	r3, [fp, #-8]
   33010:	nop	{0}
   33014:	add	sp, fp, #0
   33018:	pop	{fp}		; (ldr fp, [sp], #4)
   3301c:	bx	lr
   33020:	strd	r4, [sp, #-32]!	; 0xffffffe0
   33024:	strd	r6, [sp, #8]
   33028:	strd	r8, [sp, #16]
   3302c:	str	fp, [sp, #24]
   33030:	str	lr, [sp, #28]
   33034:	add	fp, sp, #28
   33038:	sub	sp, sp, #1536	; 0x600
   3303c:	sub	sp, sp, #8
   33040:	str	r0, [fp, #-1392]	; 0xfffffa90
   33044:	mov	r3, #0
   33048:	str	r3, [fp, #-76]	; 0xffffffb4
   3304c:	mov	r3, #0
   33050:	str	r3, [fp, #-80]	; 0xffffffb0
   33054:	sub	r3, fp, #212	; 0xd4
   33058:	str	r3, [fp, #-48]	; 0xffffffd0
   3305c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33060:	str	r3, [fp, #-52]	; 0xffffffcc
   33064:	sub	r3, fp, #1312	; 0x520
   33068:	sub	r3, r3, #12
   3306c:	sub	r3, r3, #8
   33070:	str	r3, [fp, #-56]	; 0xffffffc8
   33074:	ldr	r3, [fp, #-56]	; 0xffffffc8
   33078:	str	r3, [fp, #-60]	; 0xffffffc4
   3307c:	mov	r3, #20
   33080:	str	r3, [fp, #-64]	; 0xffffffc0
   33084:	mov	r3, #0
   33088:	str	r3, [fp, #-40]	; 0xffffffd8
   3308c:	mov	r3, #0
   33090:	str	r3, [fp, #-44]	; 0xffffffd4
   33094:	mov	r3, #0
   33098:	str	r3, [fp, #-36]	; 0xffffffdc
   3309c:	mvn	r3, #1
   330a0:	str	r3, [fp, #-32]	; 0xffffffe0
   330a4:	b	330b4 <__assert_fail@plt+0x209c8>
   330a8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   330ac:	add	r3, r3, #2
   330b0:	str	r3, [fp, #-52]	; 0xffffffcc
   330b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   330b8:	sxth	r2, r3
   330bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   330c0:	strh	r2, [r3]
   330c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   330c8:	sub	r3, r3, #-2147483647	; 0x80000001
   330cc:	lsl	r2, r3, #1
   330d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   330d4:	add	r2, r3, r2
   330d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   330dc:	cmp	r3, r2
   330e0:	bcc	332d4 <__assert_fail@plt+0x20be8>
   330e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   330e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   330ec:	sub	r3, r2, r3
   330f0:	asr	r3, r3, #1
   330f4:	add	r3, r3, #1
   330f8:	str	r3, [fp, #-84]	; 0xffffffac
   330fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33100:	cmp	r3, #19
   33104:	bhi	35744 <__assert_fail@plt+0x23058>
   33108:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3310c:	lsl	r3, r3, #1
   33110:	str	r3, [fp, #-64]	; 0xffffffc0
   33114:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33118:	cmp	r3, #20
   3311c:	bls	33128 <__assert_fail@plt+0x20a3c>
   33120:	mov	r3, #20
   33124:	str	r3, [fp, #-64]	; 0xffffffc0
   33128:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3312c:	str	r3, [fp, #-88]	; 0xffffffa8
   33130:	ldr	r2, [fp, #-64]	; 0xffffffc0
   33134:	mov	r3, #58	; 0x3a
   33138:	mul	r3, r3, r2
   3313c:	add	r3, r3, #55	; 0x37
   33140:	mov	r0, r3
   33144:	bl	43510 <__assert_fail@plt+0x30e24>
   33148:	mov	r3, r0
   3314c:	str	r3, [fp, #-92]	; 0xffffffa4
   33150:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33154:	cmp	r3, #0
   33158:	beq	3574c <__assert_fail@plt+0x23060>
   3315c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   33160:	ldr	r3, [fp, #-84]	; 0xffffffac
   33164:	lsl	r2, r3, #1
   33168:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3316c:	mov	r0, r1
   33170:	mov	r1, r3
   33174:	mov	r3, r2
   33178:	mov	r2, r3
   3317c:	bl	120f8 <memcpy@plt>
   33180:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33184:	str	r3, [fp, #-48]	; 0xffffffd0
   33188:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3318c:	lsl	r3, r3, #1
   33190:	add	r3, r3, #55	; 0x37
   33194:	str	r3, [fp, #-96]	; 0xffffffa0
   33198:	ldr	r3, [fp, #-96]	; 0xffffffa0
   3319c:	lsr	r2, r3, #3
   331a0:	movw	r3, #18725	; 0x4925
   331a4:	movt	r3, #9362	; 0x2492
   331a8:	umull	r2, r3, r3, r2
   331ac:	mov	r2, r3
   331b0:	mov	r3, r2
   331b4:	lsl	r3, r3, #3
   331b8:	sub	r3, r3, r2
   331bc:	lsl	r3, r3, #3
   331c0:	mov	r2, r3
   331c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   331c8:	add	r3, r3, r2
   331cc:	str	r3, [fp, #-92]	; 0xffffffa4
   331d0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   331d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   331d8:	mov	r3, r2
   331dc:	lsl	r3, r3, #3
   331e0:	sub	r3, r3, r2
   331e4:	lsl	r3, r3, #3
   331e8:	mov	r2, r3
   331ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   331f0:	mov	r0, r1
   331f4:	mov	r1, r3
   331f8:	mov	r3, r2
   331fc:	mov	r2, r3
   33200:	bl	120f8 <memcpy@plt>
   33204:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33208:	str	r3, [fp, #-56]	; 0xffffffc8
   3320c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   33210:	mov	r3, r2
   33214:	lsl	r3, r3, #3
   33218:	sub	r3, r3, r2
   3321c:	lsl	r3, r3, #3
   33220:	add	r3, r3, #55	; 0x37
   33224:	str	r3, [fp, #-100]	; 0xffffff9c
   33228:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3322c:	lsr	r2, r3, #3
   33230:	movw	r3, #18725	; 0x4925
   33234:	movt	r3, #9362	; 0x2492
   33238:	umull	r2, r3, r3, r2
   3323c:	mov	r2, r3
   33240:	mov	r3, r2
   33244:	lsl	r3, r3, #3
   33248:	sub	r3, r3, r2
   3324c:	lsl	r3, r3, #3
   33250:	mov	r2, r3
   33254:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33258:	add	r3, r3, r2
   3325c:	str	r3, [fp, #-92]	; 0xffffffa4
   33260:	sub	r2, fp, #212	; 0xd4
   33264:	ldr	r3, [fp, #-88]	; 0xffffffa8
   33268:	cmp	r3, r2
   3326c:	beq	33278 <__assert_fail@plt+0x20b8c>
   33270:	ldr	r0, [fp, #-88]	; 0xffffffa8
   33274:	bl	3fe0c <__assert_fail@plt+0x2d720>
   33278:	ldr	r3, [fp, #-84]	; 0xffffffac
   3327c:	sub	r3, r3, #-2147483647	; 0x80000001
   33280:	lsl	r2, r3, #1
   33284:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33288:	add	r3, r3, r2
   3328c:	str	r3, [fp, #-52]	; 0xffffffcc
   33290:	ldr	r2, [fp, #-84]	; 0xffffffac
   33294:	mov	r3, r2
   33298:	lsl	r3, r3, #3
   3329c:	sub	r3, r3, r2
   332a0:	lsl	r3, r3, #3
   332a4:	sub	r2, r3, #56	; 0x38
   332a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   332ac:	add	r3, r3, r2
   332b0:	str	r3, [fp, #-60]	; 0xffffffc4
   332b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   332b8:	sub	r3, r3, #-2147483647	; 0x80000001
   332bc:	lsl	r2, r3, #1
   332c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   332c4:	add	r2, r3, r2
   332c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   332cc:	cmp	r3, r2
   332d0:	bcs	356e4 <__assert_fail@plt+0x22ff8>
   332d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   332d8:	cmp	r3, #12
   332dc:	beq	356d4 <__assert_fail@plt+0x22fe8>
   332e0:	nop	{0}
   332e4:	movw	r2, #39068	; 0x989c
   332e8:	movt	r2, #6
   332ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   332f0:	add	r3, r2, r3
   332f4:	ldrsb	r3, [r3]
   332f8:	str	r3, [fp, #-68]	; 0xffffffbc
   332fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   33300:	cmn	r3, #93	; 0x5d
   33304:	beq	33474 <__assert_fail@plt+0x20d88>
   33308:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3330c:	cmn	r3, #2
   33310:	bne	33328 <__assert_fail@plt+0x20c3c>
   33314:	sub	r3, fp, #172	; 0xac
   33318:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   3331c:	mov	r0, r3
   33320:	bl	365dc <__assert_fail@plt+0x23ef0>
   33324:	str	r0, [fp, #-32]	; 0xffffffe0
   33328:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3332c:	cmp	r3, #0
   33330:	bgt	33348 <__assert_fail@plt+0x20c5c>
   33334:	mov	r3, #0
   33338:	str	r3, [fp, #-76]	; 0xffffffb4
   3333c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   33340:	str	r3, [fp, #-32]	; 0xffffffe0
   33344:	b	33378 <__assert_fail@plt+0x20c8c>
   33348:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3334c:	movw	r3, #277	; 0x115
   33350:	cmp	r2, r3
   33354:	bhi	33370 <__assert_fail@plt+0x20c84>
   33358:	movw	r2, #38788	; 0x9784
   3335c:	movt	r2, #6
   33360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33364:	add	r3, r2, r3
   33368:	ldrb	r3, [r3]
   3336c:	b	33374 <__assert_fail@plt+0x20c88>
   33370:	mov	r3, #2
   33374:	str	r3, [fp, #-76]	; 0xffffffb4
   33378:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3337c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   33380:	add	r3, r2, r3
   33384:	str	r3, [fp, #-68]	; 0xffffffbc
   33388:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3338c:	cmp	r3, #0
   33390:	blt	3347c <__assert_fail@plt+0x20d90>
   33394:	ldr	r3, [fp, #-68]	; 0xffffffbc
   33398:	cmp	r3, #112	; 0x70
   3339c:	bgt	3347c <__assert_fail@plt+0x20d90>
   333a0:	movw	r2, #39472	; 0x9a30
   333a4:	movt	r2, #6
   333a8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   333ac:	add	r3, r2, r3
   333b0:	ldrsb	r3, [r3]
   333b4:	mov	r2, r3
   333b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   333bc:	cmp	r3, r2
   333c0:	bne	3347c <__assert_fail@plt+0x20d90>
   333c4:	movw	r2, #39356	; 0x99bc
   333c8:	movt	r2, #6
   333cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   333d0:	add	r3, r2, r3
   333d4:	ldrb	r3, [r3]
   333d8:	str	r3, [fp, #-68]	; 0xffffffbc
   333dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   333e0:	cmp	r3, #0
   333e4:	bgt	333f8 <__assert_fail@plt+0x20d0c>
   333e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   333ec:	rsb	r3, r3, #0
   333f0:	str	r3, [fp, #-68]	; 0xffffffbc
   333f4:	b	334a8 <__assert_fail@plt+0x20dbc>
   333f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   333fc:	cmp	r3, #0
   33400:	beq	33410 <__assert_fail@plt+0x20d24>
   33404:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33408:	sub	r3, r3, #1
   3340c:	str	r3, [fp, #-44]	; 0xffffffd4
   33410:	mvn	r3, #1
   33414:	str	r3, [fp, #-32]	; 0xffffffe0
   33418:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3341c:	str	r3, [fp, #-40]	; 0xffffffd8
   33420:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33424:	add	r3, r3, #56	; 0x38
   33428:	str	r3, [fp, #-60]	; 0xffffffc4
   3342c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33430:	mov	r0, r3
   33434:	sub	r1, fp, #172	; 0xac
   33438:	ldrd	r2, [r1]
   3343c:	strd	r2, [r0]
   33440:	ldrd	r2, [r1, #8]
   33444:	strd	r2, [r0, #8]
   33448:	ldrd	r2, [r1, #16]
   3344c:	strd	r2, [r0, #16]
   33450:	ldrd	r2, [r1, #24]
   33454:	strd	r2, [r0, #24]
   33458:	ldrd	r2, [r1, #32]
   3345c:	strd	r2, [r0, #32]
   33460:	ldrd	r2, [r1, #40]	; 0x28
   33464:	strd	r2, [r0, #40]	; 0x28
   33468:	ldrd	r2, [r1, #48]	; 0x30
   3346c:	strd	r2, [r0, #48]	; 0x30
   33470:	b	330a8 <__assert_fail@plt+0x209bc>
   33474:	nop	{0}
   33478:	b	33480 <__assert_fail@plt+0x20d94>
   3347c:	nop	{0}
   33480:	movw	r2, #39184	; 0x9910
   33484:	movt	r2, #6
   33488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3348c:	add	r3, r2, r3
   33490:	ldrb	r3, [r3]
   33494:	str	r3, [fp, #-68]	; 0xffffffbc
   33498:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3349c:	cmp	r3, #0
   334a0:	beq	354c4 <__assert_fail@plt+0x22dd8>
   334a4:	nop	{0}
   334a8:	movw	r2, #39796	; 0x9b74
   334ac:	movt	r2, #6
   334b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   334b4:	add	r3, r2, r3
   334b8:	ldrb	r3, [r3]
   334bc:	str	r3, [fp, #-80]	; 0xffffffb0
   334c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   334c4:	rsb	r3, r3, #1
   334c8:	mov	r2, r3
   334cc:	mov	r3, r2
   334d0:	lsl	r3, r3, #3
   334d4:	sub	r3, r3, r2
   334d8:	lsl	r3, r3, #3
   334dc:	mov	r2, r3
   334e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   334e4:	add	r3, r3, r2
   334e8:	sub	r0, fp, #1376	; 0x560
   334ec:	sub	r0, r0, #12
   334f0:	mov	r1, r3
   334f4:	ldrd	r2, [r1]
   334f8:	strd	r2, [r0]
   334fc:	ldrd	r2, [r1, #8]
   33500:	strd	r2, [r0, #8]
   33504:	ldrd	r2, [r1, #16]
   33508:	strd	r2, [r0, #16]
   3350c:	ldrd	r2, [r1, #24]
   33510:	strd	r2, [r0, #24]
   33514:	ldrd	r2, [r1, #32]
   33518:	strd	r2, [r0, #32]
   3351c:	ldrd	r2, [r1, #40]	; 0x28
   33520:	strd	r2, [r0, #40]	; 0x28
   33524:	ldrd	r2, [r1, #48]	; 0x30
   33528:	strd	r2, [r0, #48]	; 0x30
   3352c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   33530:	sub	r3, r3, #4
   33534:	cmp	r3, #87	; 0x57
   33538:	ldrls	pc, [pc, r3, lsl #2]
   3353c:	b	35320 <__assert_fail@plt+0x22c34>
   33540:	andeq	r3, r3, r0, lsr #13
   33544:	andeq	r5, r3, r0, lsr #6
   33548:	andeq	r5, r3, r0, lsr #6
   3354c:	andeq	r3, r3, r4, ror #13
   33550:	andeq	r3, r3, ip, lsr #14
   33554:	andeq	r3, r3, r0, ror #14
   33558:	muleq	r3, r4, r7
   3355c:	andeq	r3, r3, r8, asr #15
   33560:	strdeq	r3, [r3], -ip
   33564:	andeq	r3, r3, r0, lsr r8
   33568:	andeq	r3, r3, r0, asr r8
   3356c:	andeq	r3, r3, r0, ror r8
   33570:	andeq	r5, r3, r0, lsr #6
   33574:	andeq	r5, r3, r0, lsr #6
   33578:	muleq	r3, r0, r8
   3357c:	ldrdeq	r3, [r3], -ip
   33580:	andeq	r3, r3, ip, lsr #18
   33584:	andeq	r5, r3, r0, lsr #6
   33588:	andeq	r3, r3, ip, lsl #19
   3358c:	ldrdeq	r3, [r3], -r4
   33590:	andeq	r3, r3, r0, lsr #20
   33594:	andeq	r5, r3, r0, lsr #6
   33598:	andeq	r5, r3, r0, lsr #6
   3359c:	andeq	r3, r3, ip, ror sl
   335a0:	andeq	r3, r3, r0, ror #21
   335a4:	strdeq	r3, [r3], -r4
   335a8:	andeq	r3, r3, r8, lsl fp
   335ac:	andeq	r3, r3, ip, lsr #22
   335b0:	andeq	r3, r3, r0, asr #22
   335b4:	ldrdeq	r3, [r3], -r8
   335b8:	andeq	r3, r3, ip, ror #24
   335bc:	andeq	r3, r3, r4, lsr #26
   335c0:	andeq	r3, r3, r4, asr #26
   335c4:	andeq	r3, r3, r8, ror #26
   335c8:	andeq	r3, r3, ip, lsl #27
   335cc:			; <UNDEFINED> instruction: 0x00033db4
   335d0:	andeq	r3, r3, r8, ror #27
   335d4:	andeq	r3, r3, ip, lsl lr
   335d8:	andeq	r3, r3, r4, asr #28
   335dc:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   335e0:	andeq	r4, r3, r4, lsr #32
   335e4:	strdeq	r4, [r3], -r0
   335e8:	andeq	r4, r3, r8, lsl r1
   335ec:	andeq	r4, r3, ip, ror #2
   335f0:	muleq	r3, r4, r1
   335f4:	andeq	r5, r3, r0, lsr #6
   335f8:	andeq	r4, r3, r8, ror #3
   335fc:			; <UNDEFINED> instruction: 0x000342bc
   33600:	andeq	r4, r3, r0, lsr r3
   33604:	muleq	r3, r8, r3
   33608:	andeq	r4, r3, r0, lsl #8
   3360c:	andeq	r4, r3, r4, lsr r4
   33610:	andeq	r4, r3, r8, ror #8
   33614:	muleq	r3, ip, r4
   33618:	ldrdeq	r4, [r3], -r0
   3361c:	andeq	r4, r3, r4, lsl #10
   33620:	andeq	r4, r3, r8, lsr r5
   33624:	andeq	r4, r3, ip, lsl r8
   33628:	andeq	r4, r3, r0, lsl #22
   3362c:	andeq	r4, r3, r0, lsr fp
   33630:	andeq	r4, r3, r4, ror #22
   33634:	muleq	r3, r8, fp
   33638:	andeq	r4, r3, ip, asr #23
   3363c:	andeq	r4, r3, r0, lsl #24
   33640:	andeq	r4, r3, r4, lsr ip
   33644:	andeq	r4, r3, r8, ror #24
   33648:	muleq	r3, ip, ip
   3364c:	ldrdeq	r4, [r3], -r0
   33650:	andeq	r4, r3, ip, lsl sp
   33654:	andeq	r4, r3, r8, ror #26
   33658:	andeq	r5, r3, r0, lsr #6
   3365c:	muleq	r3, ip, sp
   33660:	ldrdeq	r4, [r3], -r0
   33664:	andeq	r4, r3, r4, lsl #28
   33668:	andeq	r5, r3, r8, ror #1
   3366c:	andeq	r5, r3, ip, lsl r1
   33670:	andeq	r5, r3, r0, asr r1
   33674:	andeq	r5, r3, r4, lsl #3
   33678:	andeq	r5, r3, r0, lsr #6
   3367c:	andeq	r5, r3, r0, lsr #6
   33680:	andeq	r5, r3, r0, lsr #6
   33684:			; <UNDEFINED> instruction: 0x000351b4
   33688:	andeq	r5, r3, r0, lsr #6
   3368c:	strdeq	r5, [r3], -r0
   33690:	andeq	r5, r3, ip, lsr #4
   33694:	andeq	r5, r3, r8, asr r2
   33698:	andeq	r5, r3, ip, ror #5
   3369c:	andeq	r5, r3, r8, lsl #6
   336a0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   336a4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   336a8:	add	r1, r3, #88	; 0x58
   336ac:	mov	r3, r2
   336b0:	ldrd	r2, [r3]
   336b4:	strd	r2, [r1]
   336b8:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   336bc:	mov	r3, #1
   336c0:	strb	r3, [r2, #152]	; 0x98
   336c4:	movw	r0, #39900	; 0x9bdc
   336c8:	movt	r0, #6
   336cc:	bl	12398 <gettext@plt>
   336d0:	mov	r3, r0
   336d4:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   336d8:	mov	r0, r3
   336dc:	bl	327f4 <__assert_fail@plt+0x20108>
   336e0:	b	35374 <__assert_fail@plt+0x22c88>
   336e4:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   336e8:	ldr	r3, [r3, #172]	; 0xac
   336ec:	add	r2, r3, #1
   336f0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   336f4:	str	r2, [r3, #172]	; 0xac
   336f8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   336fc:	ldr	r3, [r3, #156]	; 0x9c
   33700:	add	r2, r3, #1
   33704:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33708:	str	r2, [r3, #156]	; 0x9c
   3370c:	movw	r0, #39920	; 0x9bf0
   33710:	movt	r0, #6
   33714:	bl	12398 <gettext@plt>
   33718:	mov	r3, r0
   3371c:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33720:	mov	r0, r3
   33724:	bl	327f4 <__assert_fail@plt+0x20108>
   33728:	b	35374 <__assert_fail@plt+0x22c88>
   3372c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33730:	ldr	r3, [r3, #172]	; 0xac
   33734:	add	r2, r3, #1
   33738:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3373c:	str	r2, [r3, #172]	; 0xac
   33740:	movw	r0, #39932	; 0x9bfc
   33744:	movt	r0, #6
   33748:	bl	12398 <gettext@plt>
   3374c:	mov	r3, r0
   33750:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33754:	mov	r0, r3
   33758:	bl	327f4 <__assert_fail@plt+0x20108>
   3375c:	b	35374 <__assert_fail@plt+0x22c88>
   33760:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33764:	ldr	r3, [r3, #164]	; 0xa4
   33768:	add	r2, r3, #1
   3376c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33770:	str	r2, [r3, #164]	; 0xa4
   33774:	movw	r0, #39940	; 0x9c04
   33778:	movt	r0, #6
   3377c:	bl	12398 <gettext@plt>
   33780:	mov	r3, r0
   33784:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33788:	mov	r0, r3
   3378c:	bl	327f4 <__assert_fail@plt+0x20108>
   33790:	b	35374 <__assert_fail@plt+0x22c88>
   33794:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33798:	ldr	r3, [r3, #176]	; 0xb0
   3379c:	add	r2, r3, #1
   337a0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   337a4:	str	r2, [r3, #176]	; 0xb0
   337a8:	movw	r0, #39952	; 0x9c10
   337ac:	movt	r0, #6
   337b0:	bl	12398 <gettext@plt>
   337b4:	mov	r3, r0
   337b8:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   337bc:	mov	r0, r3
   337c0:	bl	327f4 <__assert_fail@plt+0x20108>
   337c4:	b	35374 <__assert_fail@plt+0x22c88>
   337c8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   337cc:	ldr	r3, [r3, #156]	; 0x9c
   337d0:	add	r2, r3, #1
   337d4:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   337d8:	str	r2, [r3, #156]	; 0x9c
   337dc:	movw	r0, #39960	; 0x9c18
   337e0:	movt	r0, #6
   337e4:	bl	12398 <gettext@plt>
   337e8:	mov	r3, r0
   337ec:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   337f0:	mov	r0, r3
   337f4:	bl	327f4 <__assert_fail@plt+0x20108>
   337f8:	b	35374 <__assert_fail@plt+0x22c88>
   337fc:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33800:	ldr	r3, [r3, #160]	; 0xa0
   33804:	add	r2, r3, #1
   33808:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3380c:	str	r2, [r3, #160]	; 0xa0
   33810:	movw	r0, #39968	; 0x9c20
   33814:	movt	r0, #6
   33818:	bl	12398 <gettext@plt>
   3381c:	mov	r3, r0
   33820:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33824:	mov	r0, r3
   33828:	bl	327f4 <__assert_fail@plt+0x20108>
   3382c:	b	35374 <__assert_fail@plt+0x22c88>
   33830:	movw	r0, #39972	; 0x9c24
   33834:	movt	r0, #6
   33838:	bl	12398 <gettext@plt>
   3383c:	mov	r3, r0
   33840:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33844:	mov	r0, r3
   33848:	bl	32d68 <__assert_fail@plt+0x2067c>
   3384c:	b	35374 <__assert_fail@plt+0x22c88>
   33850:	movw	r0, #39984	; 0x9c30
   33854:	movt	r0, #6
   33858:	bl	12398 <gettext@plt>
   3385c:	mov	r3, r0
   33860:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33864:	mov	r0, r3
   33868:	bl	327f4 <__assert_fail@plt+0x20108>
   3386c:	b	35374 <__assert_fail@plt+0x22c88>
   33870:	movw	r0, #39992	; 0x9c38
   33874:	movt	r0, #6
   33878:	bl	12398 <gettext@plt>
   3387c:	mov	r3, r0
   33880:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33884:	mov	r0, r3
   33888:	bl	32d68 <__assert_fail@plt+0x2067c>
   3388c:	b	35374 <__assert_fail@plt+0x22c88>
   33890:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33894:	sub	r3, r3, #56	; 0x38
   33898:	ldrd	r0, [r3, #8]
   3389c:	mov	r3, #0
   338a0:	str	r3, [sp, #12]
   338a4:	mov	r3, #0
   338a8:	str	r3, [sp, #8]
   338ac:	mov	r2, #0
   338b0:	mov	r3, #0
   338b4:	strd	r2, [sp]
   338b8:	mov	r2, r0
   338bc:	mov	r3, r1
   338c0:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   338c4:	bl	32370 <__assert_fail@plt+0x1fc84>
   338c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   338cc:	ldrd	r2, [r3]
   338d0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   338d4:	str	r2, [r3, #28]
   338d8:	b	35374 <__assert_fail@plt+0x22c88>
   338dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   338e0:	sub	r3, r3, #168	; 0xa8
   338e4:	ldrd	r4, [r3, #8]
   338e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   338ec:	sub	r3, r3, #56	; 0x38
   338f0:	ldrd	r0, [r3, #8]
   338f4:	mov	r3, #0
   338f8:	str	r3, [sp, #12]
   338fc:	mov	r3, #0
   33900:	str	r3, [sp, #8]
   33904:	strd	r0, [sp]
   33908:	mov	r2, r4
   3390c:	mov	r3, r5
   33910:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33914:	bl	32370 <__assert_fail@plt+0x1fc84>
   33918:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3391c:	ldrd	r2, [r3]
   33920:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33924:	str	r2, [r3, #28]
   33928:	b	35374 <__assert_fail@plt+0x22c88>
   3392c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33930:	sub	r3, r3, #280	; 0x118
   33934:	ldrd	r4, [r3, #8]
   33938:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3393c:	sub	r3, r3, #168	; 0xa8
   33940:	ldrd	r0, [r3, #8]
   33944:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33948:	sub	r3, r3, #56	; 0x38
   3394c:	ldr	r2, [r3]
   33950:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33954:	sub	r3, r3, #56	; 0x38
   33958:	ldr	r3, [r3, #4]
   3395c:	str	r3, [sp, #12]
   33960:	str	r2, [sp, #8]
   33964:	strd	r0, [sp]
   33968:	mov	r2, r4
   3396c:	mov	r3, r5
   33970:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33974:	bl	32370 <__assert_fail@plt+0x1fc84>
   33978:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3397c:	ldrd	r2, [r3]
   33980:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33984:	str	r2, [r3, #28]
   33988:	b	35374 <__assert_fail@plt+0x22c88>
   3398c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33990:	sub	r3, r3, #56	; 0x38
   33994:	ldrd	r0, [r3, #8]
   33998:	mov	r3, #0
   3399c:	str	r3, [sp, #12]
   339a0:	mov	r3, #0
   339a4:	str	r3, [sp, #8]
   339a8:	mov	r2, #0
   339ac:	mov	r3, #0
   339b0:	strd	r2, [sp]
   339b4:	mov	r2, r0
   339b8:	mov	r3, r1
   339bc:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   339c0:	bl	32370 <__assert_fail@plt+0x1fc84>
   339c4:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   339c8:	mov	r3, #2
   339cc:	str	r3, [r2, #28]
   339d0:	b	35374 <__assert_fail@plt+0x22c88>
   339d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   339d8:	sub	r3, r3, #168	; 0xa8
   339dc:	ldrd	r4, [r3, #8]
   339e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   339e4:	sub	r3, r3, #56	; 0x38
   339e8:	ldrd	r0, [r3, #8]
   339ec:	mov	r3, #0
   339f0:	str	r3, [sp, #12]
   339f4:	mov	r3, #0
   339f8:	str	r3, [sp, #8]
   339fc:	strd	r0, [sp]
   33a00:	mov	r2, r4
   33a04:	mov	r3, r5
   33a08:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33a0c:	bl	32370 <__assert_fail@plt+0x1fc84>
   33a10:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   33a14:	mov	r3, #2
   33a18:	str	r3, [r2, #28]
   33a1c:	b	35374 <__assert_fail@plt+0x22c88>
   33a20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33a24:	sub	r3, r3, #280	; 0x118
   33a28:	ldrd	r4, [r3, #8]
   33a2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33a30:	sub	r3, r3, #168	; 0xa8
   33a34:	ldrd	r0, [r3, #8]
   33a38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33a3c:	sub	r3, r3, #56	; 0x38
   33a40:	ldr	r2, [r3]
   33a44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33a48:	sub	r3, r3, #56	; 0x38
   33a4c:	ldr	r3, [r3, #4]
   33a50:	str	r3, [sp, #12]
   33a54:	str	r2, [sp, #8]
   33a58:	strd	r0, [sp]
   33a5c:	mov	r2, r4
   33a60:	mov	r3, r5
   33a64:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33a68:	bl	32370 <__assert_fail@plt+0x1fc84>
   33a6c:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   33a70:	mov	r3, #2
   33a74:	str	r3, [r2, #28]
   33a78:	b	35374 <__assert_fail@plt+0x22c88>
   33a7c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33a80:	ldr	r3, [r3, #176]	; 0xb0
   33a84:	add	r2, r3, #1
   33a88:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33a8c:	str	r2, [r3, #176]	; 0xb0
   33a90:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33a94:	sub	r0, r3, #56	; 0x38
   33a98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33a9c:	ldrd	r2, [r3]
   33aa0:	strd	r2, [sp, #16]
   33aa4:	mov	ip, sp
   33aa8:	add	r1, r0, #8
   33aac:	ldrd	r2, [r1]
   33ab0:	strd	r2, [ip]
   33ab4:	ldrd	r2, [r1, #8]
   33ab8:	strd	r2, [ip, #8]
   33abc:	ldm	r0, {r2, r3}
   33ac0:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33ac4:	bl	35890 <__assert_fail@plt+0x231a4>
   33ac8:	mov	r3, r0
   33acc:	eor	r3, r3, #1
   33ad0:	uxtb	r3, r3
   33ad4:	cmp	r3, #0
   33ad8:	beq	35328 <__assert_fail@plt+0x22c3c>
   33adc:	b	35738 <__assert_fail@plt+0x2304c>
   33ae0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33ae4:	ldrd	r2, [r3]
   33ae8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33aec:	str	r2, [r3, #20]
   33af0:	b	35374 <__assert_fail@plt+0x22c88>
   33af4:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   33af8:	mov	r3, #1
   33afc:	str	r3, [r2, #20]
   33b00:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33b04:	ldr	r3, [r3, #168]	; 0xa8
   33b08:	add	r2, r3, #1
   33b0c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33b10:	str	r2, [r3, #168]	; 0xa8
   33b14:	b	35374 <__assert_fail@plt+0x22c88>
   33b18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33b1c:	ldrd	r2, [r3]
   33b20:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33b24:	str	r2, [r3, #24]
   33b28:	b	35374 <__assert_fail@plt+0x22c88>
   33b2c:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   33b30:	movw	r3, #40336	; 0x9d90
   33b34:	movt	r3, #65535	; 0xffff
   33b38:	str	r3, [r2, #24]
   33b3c:	b	35374 <__assert_fail@plt+0x22c88>
   33b40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33b44:	sub	r3, r3, #56	; 0x38
   33b48:	ldrd	r2, [r3]
   33b4c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33b50:	str	r2, [r3, #24]
   33b54:	ldr	ip, [fp, #-60]	; 0xffffffc4
   33b58:	mov	r3, #1
   33b5c:	str	r3, [sp, #48]	; 0x30
   33b60:	mov	r0, sp
   33b64:	add	r1, ip, #8
   33b68:	ldrd	r2, [r1]
   33b6c:	strd	r2, [r0]
   33b70:	ldrd	r2, [r1, #8]
   33b74:	strd	r2, [r0, #8]
   33b78:	ldrd	r2, [r1, #16]
   33b7c:	strd	r2, [r0, #16]
   33b80:	ldrd	r2, [r1, #24]
   33b84:	strd	r2, [r0, #24]
   33b88:	ldrd	r2, [r1, #32]
   33b8c:	strd	r2, [r0, #32]
   33b90:	ldrd	r2, [r1, #40]	; 0x28
   33b94:	strd	r2, [r0, #40]	; 0x28
   33b98:	ldm	ip, {r2, r3}
   33b9c:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33ba0:	bl	31e6c <__assert_fail@plt+0x1f780>
   33ba4:	mov	r3, r0
   33ba8:	eor	r3, r3, #1
   33bac:	uxtb	r3, r3
   33bb0:	cmp	r3, #0
   33bb4:	bne	356ec <__assert_fail@plt+0x23000>
   33bb8:	movw	r0, #39972	; 0x9c24
   33bbc:	movt	r0, #6
   33bc0:	bl	12398 <gettext@plt>
   33bc4:	mov	r3, r0
   33bc8:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33bcc:	mov	r0, r3
   33bd0:	bl	32d68 <__assert_fail@plt+0x2067c>
   33bd4:	b	35374 <__assert_fail@plt+0x22c88>
   33bd8:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   33bdc:	movw	r3, #40336	; 0x9d90
   33be0:	movt	r3, #65535	; 0xffff
   33be4:	str	r3, [r2, #24]
   33be8:	ldr	ip, [fp, #-60]	; 0xffffffc4
   33bec:	mov	r3, #1
   33bf0:	str	r3, [sp, #48]	; 0x30
   33bf4:	mov	r0, sp
   33bf8:	add	r1, ip, #8
   33bfc:	ldrd	r2, [r1]
   33c00:	strd	r2, [r0]
   33c04:	ldrd	r2, [r1, #8]
   33c08:	strd	r2, [r0, #8]
   33c0c:	ldrd	r2, [r1, #16]
   33c10:	strd	r2, [r0, #16]
   33c14:	ldrd	r2, [r1, #24]
   33c18:	strd	r2, [r0, #24]
   33c1c:	ldrd	r2, [r1, #32]
   33c20:	strd	r2, [r0, #32]
   33c24:	ldrd	r2, [r1, #40]	; 0x28
   33c28:	strd	r2, [r0, #40]	; 0x28
   33c2c:	ldm	ip, {r2, r3}
   33c30:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33c34:	bl	31e6c <__assert_fail@plt+0x1f780>
   33c38:	mov	r3, r0
   33c3c:	eor	r3, r3, #1
   33c40:	uxtb	r3, r3
   33c44:	cmp	r3, #0
   33c48:	bne	356f4 <__assert_fail@plt+0x23008>
   33c4c:	movw	r0, #39972	; 0x9c24
   33c50:	movt	r0, #6
   33c54:	bl	12398 <gettext@plt>
   33c58:	mov	r3, r0
   33c5c:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33c60:	mov	r0, r3
   33c64:	bl	32d68 <__assert_fail@plt+0x2067c>
   33c68:	b	35374 <__assert_fail@plt+0x22c88>
   33c6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33c70:	sub	r0, r3, #56	; 0x38
   33c74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33c78:	ldrd	r2, [r3]
   33c7c:	strd	r2, [sp, #16]
   33c80:	mov	ip, sp
   33c84:	add	r1, r0, #8
   33c88:	ldrd	r2, [r1]
   33c8c:	strd	r2, [ip]
   33c90:	ldrd	r2, [r1, #8]
   33c94:	strd	r2, [ip, #8]
   33c98:	ldm	r0, {r2, r3}
   33c9c:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33ca0:	bl	35890 <__assert_fail@plt+0x231a4>
   33ca4:	mov	r3, r0
   33ca8:	eor	r3, r3, #1
   33cac:	uxtb	r3, r3
   33cb0:	cmp	r3, #0
   33cb4:	bne	356fc <__assert_fail@plt+0x23010>
   33cb8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33cbc:	ldr	r2, [r3, #24]
   33cc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33cc4:	sub	r3, r3, #112	; 0x70
   33cc8:	ldrd	r0, [r3]
   33ccc:	asr	r3, r2, #31
   33cd0:	mov	ip, #0
   33cd4:	adds	r4, r2, r0
   33cd8:	adcs	r5, r3, r1
   33cdc:	bvc	33ce4 <__assert_fail@plt+0x215f8>
   33ce0:	mov	ip, #1
   33ce4:	mov	r2, r4
   33ce8:	asr	r3, r2, #31
   33cec:	cmp	r5, r3
   33cf0:	cmpeq	r4, r2
   33cf4:	beq	33cfc <__assert_fail@plt+0x21610>
   33cf8:	mov	ip, #1
   33cfc:	mov	r3, r4
   33d00:	mov	r2, r3
   33d04:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33d08:	str	r2, [r3, #24]
   33d0c:	mov	r3, ip
   33d10:	and	r3, r3, #1
   33d14:	uxtb	r3, r3
   33d18:	cmp	r3, #0
   33d1c:	beq	35330 <__assert_fail@plt+0x22c44>
   33d20:	b	35738 <__assert_fail@plt+0x2304c>
   33d24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33d28:	ldrd	r2, [r3]
   33d2c:	mov	r3, r2
   33d30:	add	r3, r3, #3600	; 0xe10
   33d34:	mov	r2, r3
   33d38:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33d3c:	str	r2, [r3, #24]
   33d40:	b	35374 <__assert_fail@plt+0x22c88>
   33d44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33d48:	sub	r3, r3, #56	; 0x38
   33d4c:	ldrd	r2, [r3]
   33d50:	mov	r3, r2
   33d54:	add	r3, r3, #3600	; 0xe10
   33d58:	mov	r2, r3
   33d5c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33d60:	str	r2, [r3, #24]
   33d64:	b	35374 <__assert_fail@plt+0x22c88>
   33d68:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33d6c:	mov	r2, #0
   33d70:	mov	r3, #0
   33d74:	strd	r2, [r1, #8]
   33d78:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33d7c:	ldrd	r2, [r3]
   33d80:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33d84:	str	r2, [r3, #16]
   33d88:	b	35374 <__assert_fail@plt+0x22c88>
   33d8c:	ldr	r1, [fp, #-1392]	; 0xfffffa90
   33d90:	mov	r2, #0
   33d94:	mov	r3, #0
   33d98:	strd	r2, [r1, #8]
   33d9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33da0:	sub	r3, r3, #56	; 0x38
   33da4:	ldrd	r2, [r3]
   33da8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33dac:	str	r2, [r3, #16]
   33db0:	b	35374 <__assert_fail@plt+0x22c88>
   33db4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33db8:	sub	r3, r3, #56	; 0x38
   33dbc:	ldrd	r0, [r3]
   33dc0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33dc4:	strd	r0, [r3, #8]
   33dc8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33dcc:	ldrd	r2, [r3]
   33dd0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33dd4:	str	r2, [r3, #16]
   33dd8:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   33ddc:	mov	r3, #1
   33de0:	strb	r3, [r2, #187]	; 0xbb
   33de4:	b	35374 <__assert_fail@plt+0x22c88>
   33de8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33dec:	sub	r3, r3, #56	; 0x38
   33df0:	ldrd	r0, [r3, #8]
   33df4:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33df8:	strd	r0, [r3, #8]
   33dfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33e00:	ldrd	r2, [r3]
   33e04:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33e08:	str	r2, [r3, #16]
   33e0c:	ldr	r2, [fp, #-1392]	; 0xfffffa90
   33e10:	mov	r3, #1
   33e14:	strb	r3, [r2, #187]	; 0xbb
   33e18:	b	35374 <__assert_fail@plt+0x22c88>
   33e1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33e20:	sub	r3, r3, #112	; 0x70
   33e24:	ldrd	r0, [r3, #8]
   33e28:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33e2c:	strd	r0, [r3, #56]	; 0x38
   33e30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33e34:	ldrd	r0, [r3, #8]
   33e38:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33e3c:	strd	r0, [r3, #64]	; 0x40
   33e40:	b	35374 <__assert_fail@plt+0x22c88>
   33e44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33e48:	sub	r3, r3, #224	; 0xe0
   33e4c:	ldr	r3, [r3, #16]
   33e50:	cmp	r3, #3
   33e54:	ble	33f0c <__assert_fail@plt+0x21820>
   33e58:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33e5c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   33e60:	mov	r3, r0
   33e64:	cmp	r3, #0
   33e68:	beq	33eb8 <__assert_fail@plt+0x217cc>
   33e6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33e70:	sub	r3, r3, #224	; 0xe0
   33e74:	ldr	r3, [r3, #16]
   33e78:	mov	r2, r3
   33e7c:	asr	r3, r2, #31
   33e80:	strd	r2, [fp, #-108]	; 0xffffff94
   33e84:	movw	r0, #40000	; 0x9c40
   33e88:	movt	r0, #6
   33e8c:	bl	12398 <gettext@plt>
   33e90:	mov	ip, r0
   33e94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33e98:	sub	r3, r3, #224	; 0xe0
   33e9c:	ldrd	r0, [r3, #8]
   33ea0:	ldrd	r2, [fp, #-108]	; 0xffffff94
   33ea4:	strd	r2, [sp]
   33ea8:	mov	r2, r0
   33eac:	mov	r3, r1
   33eb0:	mov	r0, ip
   33eb4:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   33eb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33ebc:	sub	r2, r3, #224	; 0xe0
   33ec0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33ec4:	add	r0, r3, #32
   33ec8:	mov	r1, r2
   33ecc:	ldrd	r2, [r1]
   33ed0:	strd	r2, [r0]
   33ed4:	ldrd	r2, [r1, #8]
   33ed8:	strd	r2, [r0, #8]
   33edc:	ldrd	r2, [r1, #16]
   33ee0:	strd	r2, [r0, #16]
   33ee4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33ee8:	sub	r3, r3, #112	; 0x70
   33eec:	ldrd	r0, [r3, #8]
   33ef0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33ef4:	strd	r0, [r3, #56]	; 0x38
   33ef8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33efc:	ldrd	r0, [r3, #8]
   33f00:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33f04:	strd	r0, [r3, #64]	; 0x40
   33f08:	b	35374 <__assert_fail@plt+0x22c88>
   33f0c:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   33f10:	bl	31c48 <__assert_fail@plt+0x1f55c>
   33f14:	mov	r3, r0
   33f18:	cmp	r3, #0
   33f1c:	beq	33f44 <__assert_fail@plt+0x21858>
   33f20:	movw	r0, #40060	; 0x9c7c
   33f24:	movt	r0, #6
   33f28:	bl	12398 <gettext@plt>
   33f2c:	mov	r1, r0
   33f30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33f34:	sub	r3, r3, #224	; 0xe0
   33f38:	ldrd	r2, [r3, #8]
   33f3c:	mov	r0, r1
   33f40:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   33f44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33f48:	sub	r3, r3, #224	; 0xe0
   33f4c:	ldrd	r0, [r3, #8]
   33f50:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33f54:	strd	r0, [r3, #56]	; 0x38
   33f58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33f5c:	sub	r3, r3, #112	; 0x70
   33f60:	ldrd	r0, [r3, #8]
   33f64:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33f68:	strd	r0, [r3, #64]	; 0x40
   33f6c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33f70:	ldr	r2, [fp, #-60]	; 0xffffffc4
   33f74:	add	r0, r3, #32
   33f78:	mov	r1, r2
   33f7c:	ldrd	r2, [r1]
   33f80:	strd	r2, [r0]
   33f84:	ldrd	r2, [r1, #8]
   33f88:	strd	r2, [r0, #8]
   33f8c:	ldrd	r2, [r1, #16]
   33f90:	strd	r2, [r0, #16]
   33f94:	b	35374 <__assert_fail@plt+0x22c88>
   33f98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33f9c:	sub	r3, r3, #112	; 0x70
   33fa0:	ldrd	r0, [r3, #8]
   33fa4:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33fa8:	strd	r0, [r3, #64]	; 0x40
   33fac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33fb0:	sub	r3, r3, #56	; 0x38
   33fb4:	ldrd	r0, [r3]
   33fb8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33fbc:	strd	r0, [r3, #56]	; 0x38
   33fc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33fc4:	ldrd	r2, [r3, #8]
   33fc8:	mov	r4, #0
   33fcc:	mov	r5, #0
   33fd0:	rsbs	r2, r2, #0
   33fd4:	rscs	r3, r3, #0
   33fd8:	bvc	33fe4 <__assert_fail@plt+0x218f8>
   33fdc:	mov	r4, #1
   33fe0:	mov	r5, #0
   33fe4:	mov	r0, r2
   33fe8:	mov	r1, r3
   33fec:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   33ff0:	strd	r0, [r3, #40]	; 0x28
   33ff4:	mov	r2, r4
   33ff8:	mov	r3, r5
   33ffc:	mov	r3, r2
   34000:	and	r3, r3, #1
   34004:	uxtb	r3, r3
   34008:	cmp	r3, #0
   3400c:	bne	35704 <__assert_fail@plt+0x23018>
   34010:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34014:	ldr	r2, [r3, #16]
   34018:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3401c:	str	r2, [r3, #48]	; 0x30
   34020:	b	35374 <__assert_fail@plt+0x22c88>
   34024:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34028:	sub	r3, r3, #112	; 0x70
   3402c:	ldrd	r0, [r3]
   34030:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   34034:	strd	r0, [r3, #56]	; 0x38
   34038:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3403c:	sub	r3, r3, #56	; 0x38
   34040:	ldrd	r2, [r3, #8]
   34044:	mov	r4, #0
   34048:	mov	r5, #0
   3404c:	rsbs	r2, r2, #0
   34050:	rscs	r3, r3, #0
   34054:	bvc	34060 <__assert_fail@plt+0x21974>
   34058:	mov	r4, #1
   3405c:	mov	r5, #0
   34060:	mov	r0, r2
   34064:	mov	r1, r3
   34068:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3406c:	strd	r0, [r3, #64]	; 0x40
   34070:	mov	r2, r4
   34074:	mov	r3, r5
   34078:	mov	r3, r2
   3407c:	and	r3, r3, #1
   34080:	uxtb	r3, r3
   34084:	cmp	r3, #0
   34088:	bne	3570c <__assert_fail@plt+0x23020>
   3408c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34090:	ldrd	r2, [r3, #8]
   34094:	mov	r4, #0
   34098:	mov	r5, #0
   3409c:	rsbs	r2, r2, #0
   340a0:	rscs	r3, r3, #0
   340a4:	bvc	340b0 <__assert_fail@plt+0x219c4>
   340a8:	mov	r4, #1
   340ac:	mov	r5, #0
   340b0:	mov	r0, r2
   340b4:	mov	r1, r3
   340b8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   340bc:	strd	r0, [r3, #40]	; 0x28
   340c0:	mov	r2, r4
   340c4:	mov	r3, r5
   340c8:	mov	r3, r2
   340cc:	and	r3, r3, #1
   340d0:	uxtb	r3, r3
   340d4:	cmp	r3, #0
   340d8:	bne	35714 <__assert_fail@plt+0x23028>
   340dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   340e0:	ldr	r2, [r3, #16]
   340e4:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   340e8:	str	r2, [r3, #48]	; 0x30
   340ec:	b	35374 <__assert_fail@plt+0x22c88>
   340f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   340f4:	sub	r3, r3, #56	; 0x38
   340f8:	ldrd	r0, [r3]
   340fc:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   34100:	strd	r0, [r3, #56]	; 0x38
   34104:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34108:	ldrd	r0, [r3, #8]
   3410c:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   34110:	strd	r0, [r3, #64]	; 0x40
   34114:	b	35374 <__assert_fail@plt+0x22c88>
   34118:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3411c:	sub	r3, r3, #168	; 0xa8
   34120:	ldrd	r0, [r3]
   34124:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   34128:	strd	r0, [r3, #56]	; 0x38
   3412c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34130:	sub	r3, r3, #112	; 0x70
   34134:	ldrd	r0, [r3, #8]
   34138:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3413c:	strd	r0, [r3, #64]	; 0x40
   34140:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   34144:	ldr	r2, [fp, #-60]	; 0xffffffc4
   34148:	add	r0, r3, #32
   3414c:	mov	r1, r2
   34150:	ldrd	r2, [r1]
   34154:	strd	r2, [r0]
   34158:	ldrd	r2, [r1, #8]
   3415c:	strd	r2, [r0, #8]
   34160:	ldrd	r2, [r1, #16]
   34164:	strd	r2, [r0, #16]
   34168:	b	35374 <__assert_fail@plt+0x22c88>
   3416c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34170:	sub	r3, r3, #56	; 0x38
   34174:	ldrd	r0, [r3, #8]
   34178:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3417c:	strd	r0, [r3, #64]	; 0x40
   34180:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34184:	ldrd	r0, [r3]
   34188:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3418c:	strd	r0, [r3, #56]	; 0x38
   34190:	b	35374 <__assert_fail@plt+0x22c88>
   34194:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34198:	sub	r3, r3, #112	; 0x70
   3419c:	ldrd	r0, [r3, #8]
   341a0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   341a4:	strd	r0, [r3, #64]	; 0x40
   341a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   341ac:	sub	r3, r3, #56	; 0x38
   341b0:	ldrd	r0, [r3]
   341b4:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   341b8:	strd	r0, [r3, #56]	; 0x38
   341bc:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   341c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   341c4:	add	r0, r3, #32
   341c8:	mov	r1, r2
   341cc:	ldrd	r2, [r1]
   341d0:	strd	r2, [r0]
   341d4:	ldrd	r2, [r1, #8]
   341d8:	strd	r2, [r0, #8]
   341dc:	ldrd	r2, [r1, #16]
   341e0:	strd	r2, [r0, #16]
   341e4:	b	35374 <__assert_fail@plt+0x22c88>
   341e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   341ec:	sub	r2, r3, #112	; 0x70
   341f0:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   341f4:	add	r0, r3, #32
   341f8:	mov	r1, r2
   341fc:	ldrd	r2, [r1]
   34200:	strd	r2, [r0]
   34204:	ldrd	r2, [r1, #8]
   34208:	strd	r2, [r0, #8]
   3420c:	ldrd	r2, [r1, #16]
   34210:	strd	r2, [r0, #16]
   34214:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34218:	sub	r3, r3, #56	; 0x38
   3421c:	ldrd	r2, [r3, #8]
   34220:	mov	r4, #0
   34224:	mov	r5, #0
   34228:	rsbs	r2, r2, #0
   3422c:	rscs	r3, r3, #0
   34230:	bvc	3423c <__assert_fail@plt+0x21b50>
   34234:	mov	r4, #1
   34238:	mov	r5, #0
   3423c:	mov	r0, r2
   34240:	mov	r1, r3
   34244:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   34248:	strd	r0, [r3, #56]	; 0x38
   3424c:	mov	r2, r4
   34250:	mov	r3, r5
   34254:	mov	r3, r2
   34258:	and	r3, r3, #1
   3425c:	uxtb	r3, r3
   34260:	cmp	r3, #0
   34264:	bne	3571c <__assert_fail@plt+0x23030>
   34268:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3426c:	ldrd	r2, [r3, #8]
   34270:	mov	r4, #0
   34274:	mov	r5, #0
   34278:	rsbs	r2, r2, #0
   3427c:	rscs	r3, r3, #0
   34280:	bvc	3428c <__assert_fail@plt+0x21ba0>
   34284:	mov	r4, #1
   34288:	mov	r5, #0
   3428c:	mov	r0, r2
   34290:	mov	r1, r3
   34294:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   34298:	strd	r0, [r3, #64]	; 0x40
   3429c:	mov	r2, r4
   342a0:	mov	r3, r5
   342a4:	mov	r3, r2
   342a8:	and	r3, r3, #1
   342ac:	uxtb	r3, r3
   342b0:	cmp	r3, #0
   342b4:	beq	35338 <__assert_fail@plt+0x22c4c>
   342b8:	b	35738 <__assert_fail@plt+0x2304c>
   342bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   342c0:	sub	ip, r3, #56	; 0x38
   342c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   342c8:	ldrd	r2, [r3]
   342cc:	mov	r3, r2
   342d0:	str	r3, [sp, #48]	; 0x30
   342d4:	mov	r0, sp
   342d8:	add	r1, ip, #8
   342dc:	ldrd	r2, [r1]
   342e0:	strd	r2, [r0]
   342e4:	ldrd	r2, [r1, #8]
   342e8:	strd	r2, [r0, #8]
   342ec:	ldrd	r2, [r1, #16]
   342f0:	strd	r2, [r0, #16]
   342f4:	ldrd	r2, [r1, #24]
   342f8:	strd	r2, [r0, #24]
   342fc:	ldrd	r2, [r1, #32]
   34300:	strd	r2, [r0, #32]
   34304:	ldrd	r2, [r1, #40]	; 0x28
   34308:	strd	r2, [r0, #40]	; 0x28
   3430c:	ldm	ip, {r2, r3}
   34310:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   34314:	bl	31e6c <__assert_fail@plt+0x1f780>
   34318:	mov	r3, r0
   3431c:	eor	r3, r3, #1
   34320:	uxtb	r3, r3
   34324:	cmp	r3, #0
   34328:	beq	35340 <__assert_fail@plt+0x22c54>
   3432c:	b	35738 <__assert_fail@plt+0x2304c>
   34330:	ldr	ip, [fp, #-60]	; 0xffffffc4
   34334:	mov	r3, #1
   34338:	str	r3, [sp, #48]	; 0x30
   3433c:	mov	r0, sp
   34340:	add	r1, ip, #8
   34344:	ldrd	r2, [r1]
   34348:	strd	r2, [r0]
   3434c:	ldrd	r2, [r1, #8]
   34350:	strd	r2, [r0, #8]
   34354:	ldrd	r2, [r1, #16]
   34358:	strd	r2, [r0, #16]
   3435c:	ldrd	r2, [r1, #24]
   34360:	strd	r2, [r0, #24]
   34364:	ldrd	r2, [r1, #32]
   34368:	strd	r2, [r0, #32]
   3436c:	ldrd	r2, [r1, #40]	; 0x28
   34370:	strd	r2, [r0, #40]	; 0x28
   34374:	ldm	ip, {r2, r3}
   34378:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   3437c:	bl	31e6c <__assert_fail@plt+0x1f780>
   34380:	mov	r3, r0
   34384:	eor	r3, r3, #1
   34388:	uxtb	r3, r3
   3438c:	cmp	r3, #0
   34390:	beq	35348 <__assert_fail@plt+0x22c5c>
   34394:	b	35738 <__assert_fail@plt+0x2304c>
   34398:	ldr	ip, [fp, #-60]	; 0xffffffc4
   3439c:	mov	r3, #1
   343a0:	str	r3, [sp, #48]	; 0x30
   343a4:	mov	r0, sp
   343a8:	add	r1, ip, #8
   343ac:	ldrd	r2, [r1]
   343b0:	strd	r2, [r0]
   343b4:	ldrd	r2, [r1, #8]
   343b8:	strd	r2, [r0, #8]
   343bc:	ldrd	r2, [r1, #16]
   343c0:	strd	r2, [r0, #16]
   343c4:	ldrd	r2, [r1, #24]
   343c8:	strd	r2, [r0, #24]
   343cc:	ldrd	r2, [r1, #32]
   343d0:	strd	r2, [r0, #32]
   343d4:	ldrd	r2, [r1, #40]	; 0x28
   343d8:	strd	r2, [r0, #40]	; 0x28
   343dc:	ldm	ip, {r2, r3}
   343e0:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   343e4:	bl	31e6c <__assert_fail@plt+0x1f780>
   343e8:	mov	r3, r0
   343ec:	eor	r3, r3, #1
   343f0:	uxtb	r3, r3
   343f4:	cmp	r3, #0
   343f8:	beq	35350 <__assert_fail@plt+0x22c64>
   343fc:	b	35738 <__assert_fail@plt+0x2304c>
   34400:	sub	r0, fp, #1376	; 0x560
   34404:	sub	r0, r0, #12
   34408:	mov	r3, #56	; 0x38
   3440c:	mov	r2, r3
   34410:	mov	r1, #0
   34414:	bl	12434 <memset@plt>
   34418:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3441c:	sub	r3, r3, #56	; 0x38
   34420:	ldrd	r2, [r3]
   34424:	sub	r1, fp, #1376	; 0x560
   34428:	sub	r1, r1, #12
   3442c:	strd	r2, [r1]
   34430:	b	35374 <__assert_fail@plt+0x22c88>
   34434:	sub	r0, fp, #1376	; 0x560
   34438:	sub	r0, r0, #12
   3443c:	mov	r3, #56	; 0x38
   34440:	mov	r2, r3
   34444:	mov	r1, #0
   34448:	bl	12434 <memset@plt>
   3444c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34450:	sub	r3, r3, #56	; 0x38
   34454:	ldrd	r2, [r3, #8]
   34458:	sub	r1, fp, #1376	; 0x560
   3445c:	sub	r1, r1, #12
   34460:	strd	r2, [r1]
   34464:	b	35374 <__assert_fail@plt+0x22c88>
   34468:	sub	r0, fp, #1376	; 0x560
   3446c:	sub	r0, r0, #12
   34470:	mov	r3, #56	; 0x38
   34474:	mov	r2, r3
   34478:	mov	r1, #0
   3447c:	bl	12434 <memset@plt>
   34480:	sub	r3, fp, #1376	; 0x560
   34484:	sub	r3, r3, #12
   34488:	mov	r1, r3
   3448c:	mov	r2, #1
   34490:	mov	r3, #0
   34494:	strd	r2, [r1]
   34498:	b	35374 <__assert_fail@plt+0x22c88>
   3449c:	sub	r0, fp, #1376	; 0x560
   344a0:	sub	r0, r0, #12
   344a4:	mov	r3, #56	; 0x38
   344a8:	mov	r2, r3
   344ac:	mov	r1, #0
   344b0:	bl	12434 <memset@plt>
   344b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   344b8:	sub	r3, r3, #56	; 0x38
   344bc:	ldrd	r2, [r3]
   344c0:	sub	r1, fp, #1376	; 0x560
   344c4:	sub	r1, r1, #12
   344c8:	strd	r2, [r1, #8]
   344cc:	b	35374 <__assert_fail@plt+0x22c88>
   344d0:	sub	r0, fp, #1376	; 0x560
   344d4:	sub	r0, r0, #12
   344d8:	mov	r3, #56	; 0x38
   344dc:	mov	r2, r3
   344e0:	mov	r1, #0
   344e4:	bl	12434 <memset@plt>
   344e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   344ec:	sub	r3, r3, #56	; 0x38
   344f0:	ldrd	r2, [r3, #8]
   344f4:	sub	r1, fp, #1376	; 0x560
   344f8:	sub	r1, r1, #12
   344fc:	strd	r2, [r1, #8]
   34500:	b	35374 <__assert_fail@plt+0x22c88>
   34504:	sub	r0, fp, #1376	; 0x560
   34508:	sub	r0, r0, #12
   3450c:	mov	r3, #56	; 0x38
   34510:	mov	r2, r3
   34514:	mov	r1, #0
   34518:	bl	12434 <memset@plt>
   3451c:	sub	r3, fp, #1376	; 0x560
   34520:	sub	r3, r3, #12
   34524:	mov	r1, r3
   34528:	mov	r2, #1
   3452c:	mov	r3, #0
   34530:	strd	r2, [r1, #8]
   34534:	b	35374 <__assert_fail@plt+0x22c88>
   34538:	sub	r0, fp, #1376	; 0x560
   3453c:	sub	r0, r0, #12
   34540:	mov	r3, #56	; 0x38
   34544:	mov	r2, r3
   34548:	mov	r1, #0
   3454c:	bl	12434 <memset@plt>
   34550:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34554:	sub	r3, r3, #56	; 0x38
   34558:	ldrd	r8, [r3]
   3455c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34560:	ldrd	r6, [r3]
   34564:	mov	r2, #0
   34568:	mov	r3, #0
   3456c:	sub	r1, fp, #1424	; 0x590
   34570:	sub	r1, r1, #12
   34574:	strd	r2, [r1]
   34578:	mov	r2, #0
   3457c:	mov	r3, #0
   34580:	sub	r1, fp, #1424	; 0x590
   34584:	sub	r1, r1, #4
   34588:	strd	r2, [r1]
   3458c:	mov	r3, r9
   34590:	str	r3, [fp, #-1428]	; 0xfffffa6c
   34594:	asr	r3, r9, #31
   34598:	str	r3, [fp, #-1424]	; 0xfffffa70
   3459c:	asr	r2, r8, #31
   345a0:	mov	r4, #0
   345a4:	mov	r5, #0
   345a8:	mov	r4, r7
   345ac:	asr	r5, r7, #31
   345b0:	asr	r3, r6, #31
   345b4:	ldr	r1, [fp, #-1428]	; 0xfffffa6c
   345b8:	cmp	r2, r1
   345bc:	bne	345f4 <__assert_fail@plt+0x21f08>
   345c0:	cmp	r3, r4
   345c4:	bne	345dc <__assert_fail@plt+0x21ef0>
   345c8:	smull	r2, r3, r8, r6
   345cc:	sub	r1, fp, #1392	; 0x570
   345d0:	sub	r1, r1, #12
   345d4:	strd	r2, [r1]
   345d8:	b	347d8 <__assert_fail@plt+0x220ec>
   345dc:	sub	r3, fp, #1440	; 0x5a0
   345e0:	sub	r3, r3, #4
   345e4:	strd	r6, [r3]
   345e8:	mov	r1, r4
   345ec:	mov	ip, r8
   345f0:	b	34610 <__assert_fail@plt+0x21f24>
   345f4:	cmp	r3, r4
   345f8:	bne	34714 <__assert_fail@plt+0x22028>
   345fc:	sub	r3, fp, #1440	; 0x5a0
   34600:	sub	r3, r3, #4
   34604:	strd	r8, [r3]
   34608:	ldr	r1, [fp, #-1428]	; 0xfffffa6c
   3460c:	mov	ip, r6
   34610:	umull	r2, r3, r8, r6
   34614:	sub	r0, fp, #1424	; 0x590
   34618:	sub	r0, r0, #4
   3461c:	strd	r2, [r0]
   34620:	umull	r2, r3, ip, r1
   34624:	mov	r4, r2
   34628:	mov	r5, r3
   3462c:	cmp	r1, #0
   34630:	bge	34668 <__assert_fail@plt+0x21f7c>
   34634:	mov	r2, ip
   34638:	mov	r3, #0
   3463c:	mov	r0, #0
   34640:	mov	r1, #0
   34644:	mov	r1, r2
   34648:	mov	r0, #0
   3464c:	subs	r3, r4, r0
   34650:	str	r3, [fp, #-1452]	; 0xfffffa54
   34654:	sbc	r3, r5, r1
   34658:	str	r3, [fp, #-1448]	; 0xfffffa58
   3465c:	sub	r3, fp, #1440	; 0x5a0
   34660:	sub	r3, r3, #12
   34664:	ldrd	r4, [r3]
   34668:	cmp	ip, #0
   3466c:	bge	3469c <__assert_fail@plt+0x21fb0>
   34670:	sub	r3, fp, #1440	; 0x5a0
   34674:	sub	r3, r3, #4
   34678:	ldrd	r2, [r3]
   3467c:	mov	r1, r2
   34680:	subs	r1, r4, r1
   34684:	str	r1, [fp, #-1460]	; 0xfffffa4c
   34688:	sbc	r3, r5, r3
   3468c:	str	r3, [fp, #-1456]	; 0xfffffa50
   34690:	sub	r3, fp, #1456	; 0x5b0
   34694:	sub	r3, r3, #4
   34698:	ldrd	r4, [r3]
   3469c:	mov	r2, #0
   346a0:	mov	r3, #0
   346a4:	ldr	r1, [fp, #-1424]	; 0xfffffa70
   346a8:	mov	r2, r1
   346ac:	mov	r3, #0
   346b0:	adds	r1, r4, r2
   346b4:	str	r1, [fp, #-1468]	; 0xfffffa44
   346b8:	adc	r3, r5, r3
   346bc:	str	r3, [fp, #-1464]	; 0xfffffa48
   346c0:	sub	r3, fp, #1456	; 0x5b0
   346c4:	sub	r3, r3, #12
   346c8:	ldrd	r4, [r3]
   346cc:	mov	r2, #0
   346d0:	mov	r3, #0
   346d4:	mov	r2, r5
   346d8:	asr	r3, r5, #31
   346dc:	asr	r1, r4, #31
   346e0:	cmp	r1, r2
   346e4:	bne	347a0 <__assert_fail@plt+0x220b4>
   346e8:	mov	r0, #0
   346ec:	mov	r1, #0
   346f0:	mov	r1, r4
   346f4:	mov	r0, #0
   346f8:	ldr	r2, [fp, #-1428]	; 0xfffffa6c
   346fc:	mov	r3, #0
   34700:	orr	ip, r0, r2
   34704:	str	ip, [fp, #-1404]	; 0xfffffa84
   34708:	orr	r3, r1, r3
   3470c:	str	r3, [fp, #-1400]	; 0xfffffa88
   34710:	b	347d8 <__assert_fail@plt+0x220ec>
   34714:	mul	r2, r6, r9
   34718:	mul	r3, r8, r7
   3471c:	add	r1, r2, r3
   34720:	umull	r2, r3, r8, r6
   34724:	add	r1, r1, r3
   34728:	mov	r3, r1
   3472c:	mov	r0, r2
   34730:	mov	r1, r3
   34734:	sub	r3, fp, #1392	; 0x570
   34738:	sub	r3, r3, #12
   3473c:	strd	r0, [r3]
   34740:	sub	r3, fp, #1424	; 0x590
   34744:	sub	r3, r3, #4
   34748:	ldrd	r6, [r3]
   3474c:	mov	r3, r6
   34750:	add	r3, r3, #1
   34754:	cmp	r3, #1
   34758:	bhi	347c4 <__assert_fail@plt+0x220d8>
   3475c:	add	r3, r4, #1
   34760:	cmp	r3, #1
   34764:	bhi	347c4 <__assert_fail@plt+0x220d8>
   34768:	mov	r3, r6
   3476c:	cmp	r3, r4
   34770:	bne	34784 <__assert_fail@plt+0x22098>
   34774:	cmp	r0, #1
   34778:	sbcs	r3, r1, #0
   3477c:	blt	347c4 <__assert_fail@plt+0x220d8>
   34780:	b	347d8 <__assert_fail@plt+0x220ec>
   34784:	sub	r3, fp, #1392	; 0x570
   34788:	sub	r3, r3, #12
   3478c:	ldrd	r2, [r3]
   34790:	cmp	r2, #0
   34794:	sbcs	r3, r3, #0
   34798:	bge	347c4 <__assert_fail@plt+0x220d8>
   3479c:	b	347d8 <__assert_fail@plt+0x220ec>
   347a0:	mul	r2, r6, r9
   347a4:	mul	r3, r8, r7
   347a8:	add	r1, r2, r3
   347ac:	umull	r2, r3, r8, r6
   347b0:	add	r1, r1, r3
   347b4:	mov	r3, r1
   347b8:	sub	r1, fp, #1392	; 0x570
   347bc:	sub	r1, r1, #12
   347c0:	strd	r2, [r1]
   347c4:	mov	r2, #1
   347c8:	mov	r3, #0
   347cc:	sub	r1, fp, #1424	; 0x590
   347d0:	sub	r1, r1, #12
   347d4:	strd	r2, [r1]
   347d8:	sub	r3, fp, #1392	; 0x570
   347dc:	sub	r3, r3, #12
   347e0:	ldrd	r2, [r3]
   347e4:	mov	r0, r2
   347e8:	mov	r1, r3
   347ec:	sub	r3, fp, #1376	; 0x560
   347f0:	sub	r3, r3, #12
   347f4:	strd	r0, [r3, #16]
   347f8:	sub	r3, fp, #1424	; 0x590
   347fc:	sub	r3, r3, #12
   34800:	ldrd	r2, [r3]
   34804:	mov	r3, r2
   34808:	and	r3, r3, #1
   3480c:	uxtb	r3, r3
   34810:	cmp	r3, #0
   34814:	beq	35358 <__assert_fail@plt+0x22c6c>
   34818:	b	35738 <__assert_fail@plt+0x2304c>
   3481c:	sub	r0, fp, #1376	; 0x560
   34820:	sub	r0, r0, #12
   34824:	mov	r3, #56	; 0x38
   34828:	mov	r2, r3
   3482c:	mov	r1, #0
   34830:	bl	12434 <memset@plt>
   34834:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34838:	sub	r3, r3, #56	; 0x38
   3483c:	ldrd	r8, [r3, #8]
   34840:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34844:	ldrd	r6, [r3]
   34848:	mov	r2, #0
   3484c:	mov	r3, #0
   34850:	sub	r1, fp, #1424	; 0x590
   34854:	sub	r1, r1, #12
   34858:	strd	r2, [r1]
   3485c:	mov	r2, #0
   34860:	mov	r3, #0
   34864:	sub	r1, fp, #1424	; 0x590
   34868:	sub	r1, r1, #4
   3486c:	strd	r2, [r1]
   34870:	mov	r3, r9
   34874:	str	r3, [fp, #-1428]	; 0xfffffa6c
   34878:	asr	r3, r9, #31
   3487c:	str	r3, [fp, #-1424]	; 0xfffffa70
   34880:	asr	r2, r8, #31
   34884:	mov	r4, #0
   34888:	mov	r5, #0
   3488c:	mov	r4, r7
   34890:	asr	r5, r7, #31
   34894:	asr	r3, r6, #31
   34898:	ldr	r1, [fp, #-1428]	; 0xfffffa6c
   3489c:	cmp	r2, r1
   348a0:	bne	348d8 <__assert_fail@plt+0x221ec>
   348a4:	cmp	r3, r4
   348a8:	bne	348c0 <__assert_fail@plt+0x221d4>
   348ac:	smull	r2, r3, r8, r6
   348b0:	sub	r1, fp, #1408	; 0x580
   348b4:	sub	r1, r1, #4
   348b8:	strd	r2, [r1]
   348bc:	b	34abc <__assert_fail@plt+0x223d0>
   348c0:	sub	r3, fp, #1440	; 0x5a0
   348c4:	sub	r3, r3, #4
   348c8:	strd	r6, [r3]
   348cc:	mov	r1, r4
   348d0:	mov	ip, r8
   348d4:	b	348f4 <__assert_fail@plt+0x22208>
   348d8:	cmp	r3, r4
   348dc:	bne	349f8 <__assert_fail@plt+0x2230c>
   348e0:	sub	r3, fp, #1440	; 0x5a0
   348e4:	sub	r3, r3, #4
   348e8:	strd	r8, [r3]
   348ec:	ldr	r1, [fp, #-1428]	; 0xfffffa6c
   348f0:	mov	ip, r6
   348f4:	umull	r2, r3, r8, r6
   348f8:	sub	r0, fp, #1424	; 0x590
   348fc:	sub	r0, r0, #4
   34900:	strd	r2, [r0]
   34904:	umull	r2, r3, ip, r1
   34908:	mov	r4, r2
   3490c:	mov	r5, r3
   34910:	cmp	r1, #0
   34914:	bge	3494c <__assert_fail@plt+0x22260>
   34918:	mov	r2, ip
   3491c:	mov	r3, #0
   34920:	mov	r0, #0
   34924:	mov	r1, #0
   34928:	mov	r1, r2
   3492c:	mov	r0, #0
   34930:	subs	r3, r4, r0
   34934:	str	r3, [fp, #-1476]	; 0xfffffa3c
   34938:	sbc	r3, r5, r1
   3493c:	str	r3, [fp, #-1472]	; 0xfffffa40
   34940:	sub	r3, fp, #1472	; 0x5c0
   34944:	sub	r3, r3, #4
   34948:	ldrd	r4, [r3]
   3494c:	cmp	ip, #0
   34950:	bge	34980 <__assert_fail@plt+0x22294>
   34954:	sub	r3, fp, #1440	; 0x5a0
   34958:	sub	r3, r3, #4
   3495c:	ldrd	r2, [r3]
   34960:	mov	r1, r2
   34964:	subs	r1, r4, r1
   34968:	str	r1, [fp, #-1484]	; 0xfffffa34
   3496c:	sbc	r3, r5, r3
   34970:	str	r3, [fp, #-1480]	; 0xfffffa38
   34974:	sub	r3, fp, #1472	; 0x5c0
   34978:	sub	r3, r3, #12
   3497c:	ldrd	r4, [r3]
   34980:	mov	r2, #0
   34984:	mov	r3, #0
   34988:	ldr	r1, [fp, #-1424]	; 0xfffffa70
   3498c:	mov	r2, r1
   34990:	mov	r3, #0
   34994:	adds	r1, r4, r2
   34998:	str	r1, [fp, #-1492]	; 0xfffffa2c
   3499c:	adc	r3, r5, r3
   349a0:	str	r3, [fp, #-1488]	; 0xfffffa30
   349a4:	sub	r3, fp, #1488	; 0x5d0
   349a8:	sub	r3, r3, #4
   349ac:	ldrd	r4, [r3]
   349b0:	mov	r2, #0
   349b4:	mov	r3, #0
   349b8:	mov	r2, r5
   349bc:	asr	r3, r5, #31
   349c0:	asr	r1, r4, #31
   349c4:	cmp	r1, r2
   349c8:	bne	34a84 <__assert_fail@plt+0x22398>
   349cc:	mov	r0, #0
   349d0:	mov	r1, #0
   349d4:	mov	r1, r4
   349d8:	mov	r0, #0
   349dc:	ldr	r2, [fp, #-1428]	; 0xfffffa6c
   349e0:	mov	r3, #0
   349e4:	orr	ip, r0, r2
   349e8:	str	ip, [fp, #-1412]	; 0xfffffa7c
   349ec:	orr	r3, r1, r3
   349f0:	str	r3, [fp, #-1408]	; 0xfffffa80
   349f4:	b	34abc <__assert_fail@plt+0x223d0>
   349f8:	mul	r2, r6, r9
   349fc:	mul	r3, r8, r7
   34a00:	add	r1, r2, r3
   34a04:	umull	r2, r3, r8, r6
   34a08:	add	r1, r1, r3
   34a0c:	mov	r3, r1
   34a10:	mov	r0, r2
   34a14:	mov	r1, r3
   34a18:	sub	r3, fp, #1408	; 0x580
   34a1c:	sub	r3, r3, #4
   34a20:	strd	r0, [r3]
   34a24:	sub	r3, fp, #1424	; 0x590
   34a28:	sub	r3, r3, #4
   34a2c:	ldrd	r6, [r3]
   34a30:	mov	r3, r6
   34a34:	add	r3, r3, #1
   34a38:	cmp	r3, #1
   34a3c:	bhi	34aa8 <__assert_fail@plt+0x223bc>
   34a40:	add	r3, r4, #1
   34a44:	cmp	r3, #1
   34a48:	bhi	34aa8 <__assert_fail@plt+0x223bc>
   34a4c:	mov	r3, r6
   34a50:	cmp	r3, r4
   34a54:	bne	34a68 <__assert_fail@plt+0x2237c>
   34a58:	cmp	r0, #1
   34a5c:	sbcs	r3, r1, #0
   34a60:	blt	34aa8 <__assert_fail@plt+0x223bc>
   34a64:	b	34abc <__assert_fail@plt+0x223d0>
   34a68:	sub	r3, fp, #1408	; 0x580
   34a6c:	sub	r3, r3, #4
   34a70:	ldrd	r2, [r3]
   34a74:	cmp	r2, #0
   34a78:	sbcs	r3, r3, #0
   34a7c:	bge	34aa8 <__assert_fail@plt+0x223bc>
   34a80:	b	34abc <__assert_fail@plt+0x223d0>
   34a84:	mul	r2, r6, r9
   34a88:	mul	r3, r8, r7
   34a8c:	add	r1, r2, r3
   34a90:	umull	r2, r3, r8, r6
   34a94:	add	r1, r1, r3
   34a98:	mov	r3, r1
   34a9c:	sub	r1, fp, #1408	; 0x580
   34aa0:	sub	r1, r1, #4
   34aa4:	strd	r2, [r1]
   34aa8:	mov	r2, #1
   34aac:	mov	r3, #0
   34ab0:	sub	r1, fp, #1424	; 0x590
   34ab4:	sub	r1, r1, #12
   34ab8:	strd	r2, [r1]
   34abc:	sub	r3, fp, #1408	; 0x580
   34ac0:	sub	r3, r3, #4
   34ac4:	ldrd	r2, [r3]
   34ac8:	mov	r0, r2
   34acc:	mov	r1, r3
   34ad0:	sub	r3, fp, #1376	; 0x560
   34ad4:	sub	r3, r3, #12
   34ad8:	strd	r0, [r3, #16]
   34adc:	sub	r3, fp, #1424	; 0x590
   34ae0:	sub	r3, r3, #12
   34ae4:	ldrd	r2, [r3]
   34ae8:	mov	r3, r2
   34aec:	and	r3, r3, #1
   34af0:	uxtb	r3, r3
   34af4:	cmp	r3, #0
   34af8:	beq	35360 <__assert_fail@plt+0x22c74>
   34afc:	b	35738 <__assert_fail@plt+0x2304c>
   34b00:	sub	r0, fp, #1376	; 0x560
   34b04:	sub	r0, r0, #12
   34b08:	mov	r3, #56	; 0x38
   34b0c:	mov	r2, r3
   34b10:	mov	r1, #0
   34b14:	bl	12434 <memset@plt>
   34b18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34b1c:	ldrd	r2, [r3]
   34b20:	sub	r1, fp, #1376	; 0x560
   34b24:	sub	r1, r1, #12
   34b28:	strd	r2, [r1, #16]
   34b2c:	b	35374 <__assert_fail@plt+0x22c88>
   34b30:	sub	r0, fp, #1376	; 0x560
   34b34:	sub	r0, r0, #12
   34b38:	mov	r3, #56	; 0x38
   34b3c:	mov	r2, r3
   34b40:	mov	r1, #0
   34b44:	bl	12434 <memset@plt>
   34b48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34b4c:	sub	r3, r3, #56	; 0x38
   34b50:	ldrd	r2, [r3]
   34b54:	sub	r1, fp, #1376	; 0x560
   34b58:	sub	r1, r1, #12
   34b5c:	strd	r2, [r1, #24]
   34b60:	b	35374 <__assert_fail@plt+0x22c88>
   34b64:	sub	r0, fp, #1376	; 0x560
   34b68:	sub	r0, r0, #12
   34b6c:	mov	r3, #56	; 0x38
   34b70:	mov	r2, r3
   34b74:	mov	r1, #0
   34b78:	bl	12434 <memset@plt>
   34b7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34b80:	sub	r3, r3, #56	; 0x38
   34b84:	ldrd	r2, [r3, #8]
   34b88:	sub	r1, fp, #1376	; 0x560
   34b8c:	sub	r1, r1, #12
   34b90:	strd	r2, [r1, #24]
   34b94:	b	35374 <__assert_fail@plt+0x22c88>
   34b98:	sub	r0, fp, #1376	; 0x560
   34b9c:	sub	r0, r0, #12
   34ba0:	mov	r3, #56	; 0x38
   34ba4:	mov	r2, r3
   34ba8:	mov	r1, #0
   34bac:	bl	12434 <memset@plt>
   34bb0:	sub	r3, fp, #1376	; 0x560
   34bb4:	sub	r3, r3, #12
   34bb8:	mov	r1, r3
   34bbc:	mov	r2, #1
   34bc0:	mov	r3, #0
   34bc4:	strd	r2, [r1, #24]
   34bc8:	b	35374 <__assert_fail@plt+0x22c88>
   34bcc:	sub	r0, fp, #1376	; 0x560
   34bd0:	sub	r0, r0, #12
   34bd4:	mov	r3, #56	; 0x38
   34bd8:	mov	r2, r3
   34bdc:	mov	r1, #0
   34be0:	bl	12434 <memset@plt>
   34be4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34be8:	sub	r3, r3, #56	; 0x38
   34bec:	ldrd	r2, [r3]
   34bf0:	sub	r1, fp, #1376	; 0x560
   34bf4:	sub	r1, r1, #12
   34bf8:	strd	r2, [r1, #32]
   34bfc:	b	35374 <__assert_fail@plt+0x22c88>
   34c00:	sub	r0, fp, #1376	; 0x560
   34c04:	sub	r0, r0, #12
   34c08:	mov	r3, #56	; 0x38
   34c0c:	mov	r2, r3
   34c10:	mov	r1, #0
   34c14:	bl	12434 <memset@plt>
   34c18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34c1c:	sub	r3, r3, #56	; 0x38
   34c20:	ldrd	r2, [r3, #8]
   34c24:	sub	r1, fp, #1376	; 0x560
   34c28:	sub	r1, r1, #12
   34c2c:	strd	r2, [r1, #32]
   34c30:	b	35374 <__assert_fail@plt+0x22c88>
   34c34:	sub	r0, fp, #1376	; 0x560
   34c38:	sub	r0, r0, #12
   34c3c:	mov	r3, #56	; 0x38
   34c40:	mov	r2, r3
   34c44:	mov	r1, #0
   34c48:	bl	12434 <memset@plt>
   34c4c:	sub	r3, fp, #1376	; 0x560
   34c50:	sub	r3, r3, #12
   34c54:	mov	r1, r3
   34c58:	mov	r2, #1
   34c5c:	mov	r3, #0
   34c60:	strd	r2, [r1, #32]
   34c64:	b	35374 <__assert_fail@plt+0x22c88>
   34c68:	sub	r0, fp, #1376	; 0x560
   34c6c:	sub	r0, r0, #12
   34c70:	mov	r3, #56	; 0x38
   34c74:	mov	r2, r3
   34c78:	mov	r1, #0
   34c7c:	bl	12434 <memset@plt>
   34c80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34c84:	sub	r3, r3, #56	; 0x38
   34c88:	ldrd	r2, [r3]
   34c8c:	sub	r1, fp, #1376	; 0x560
   34c90:	sub	r1, r1, #12
   34c94:	strd	r2, [r1, #40]	; 0x28
   34c98:	b	35374 <__assert_fail@plt+0x22c88>
   34c9c:	sub	r0, fp, #1376	; 0x560
   34ca0:	sub	r0, r0, #12
   34ca4:	mov	r3, #56	; 0x38
   34ca8:	mov	r2, r3
   34cac:	mov	r1, #0
   34cb0:	bl	12434 <memset@plt>
   34cb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34cb8:	sub	r3, r3, #56	; 0x38
   34cbc:	ldrd	r2, [r3, #8]
   34cc0:	sub	r1, fp, #1376	; 0x560
   34cc4:	sub	r1, r1, #12
   34cc8:	strd	r2, [r1, #40]	; 0x28
   34ccc:	b	35374 <__assert_fail@plt+0x22c88>
   34cd0:	sub	r0, fp, #1376	; 0x560
   34cd4:	sub	r0, r0, #12
   34cd8:	mov	r3, #56	; 0x38
   34cdc:	mov	r2, r3
   34ce0:	mov	r1, #0
   34ce4:	bl	12434 <memset@plt>
   34ce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34cec:	sub	r3, r3, #56	; 0x38
   34cf0:	ldr	r3, [r3]
   34cf4:	mov	r2, r3
   34cf8:	asr	r3, r2, #31
   34cfc:	sub	r1, fp, #1376	; 0x560
   34d00:	sub	r1, r1, #12
   34d04:	strd	r2, [r1, #40]	; 0x28
   34d08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34d0c:	sub	r3, r3, #56	; 0x38
   34d10:	ldr	r3, [r3, #4]
   34d14:	str	r3, [fp, #-1340]	; 0xfffffac4
   34d18:	b	35374 <__assert_fail@plt+0x22c88>
   34d1c:	sub	r0, fp, #1376	; 0x560
   34d20:	sub	r0, r0, #12
   34d24:	mov	r3, #56	; 0x38
   34d28:	mov	r2, r3
   34d2c:	mov	r1, #0
   34d30:	bl	12434 <memset@plt>
   34d34:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34d38:	sub	r3, r3, #56	; 0x38
   34d3c:	ldr	r3, [r3]
   34d40:	mov	r2, r3
   34d44:	asr	r3, r2, #31
   34d48:	sub	r1, fp, #1376	; 0x560
   34d4c:	sub	r1, r1, #12
   34d50:	strd	r2, [r1, #40]	; 0x28
   34d54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34d58:	sub	r3, r3, #56	; 0x38
   34d5c:	ldr	r3, [r3, #4]
   34d60:	str	r3, [fp, #-1340]	; 0xfffffac4
   34d64:	b	35374 <__assert_fail@plt+0x22c88>
   34d68:	sub	r0, fp, #1376	; 0x560
   34d6c:	sub	r0, r0, #12
   34d70:	mov	r3, #56	; 0x38
   34d74:	mov	r2, r3
   34d78:	mov	r1, #0
   34d7c:	bl	12434 <memset@plt>
   34d80:	sub	r3, fp, #1376	; 0x560
   34d84:	sub	r3, r3, #12
   34d88:	mov	r1, r3
   34d8c:	mov	r2, #1
   34d90:	mov	r3, #0
   34d94:	strd	r2, [r1, #40]	; 0x28
   34d98:	b	35374 <__assert_fail@plt+0x22c88>
   34d9c:	sub	r0, fp, #1376	; 0x560
   34da0:	sub	r0, r0, #12
   34da4:	mov	r3, #56	; 0x38
   34da8:	mov	r2, r3
   34dac:	mov	r1, #0
   34db0:	bl	12434 <memset@plt>
   34db4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34db8:	sub	r3, r3, #56	; 0x38
   34dbc:	ldrd	r2, [r3, #8]
   34dc0:	sub	r1, fp, #1376	; 0x560
   34dc4:	sub	r1, r1, #12
   34dc8:	strd	r2, [r1]
   34dcc:	b	35374 <__assert_fail@plt+0x22c88>
   34dd0:	sub	r0, fp, #1376	; 0x560
   34dd4:	sub	r0, r0, #12
   34dd8:	mov	r3, #56	; 0x38
   34ddc:	mov	r2, r3
   34de0:	mov	r1, #0
   34de4:	bl	12434 <memset@plt>
   34de8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34dec:	sub	r3, r3, #56	; 0x38
   34df0:	ldrd	r2, [r3, #8]
   34df4:	sub	r1, fp, #1376	; 0x560
   34df8:	sub	r1, r1, #12
   34dfc:	strd	r2, [r1, #8]
   34e00:	b	35374 <__assert_fail@plt+0x22c88>
   34e04:	sub	r0, fp, #1376	; 0x560
   34e08:	sub	r0, r0, #12
   34e0c:	mov	r3, #56	; 0x38
   34e10:	mov	r2, r3
   34e14:	mov	r1, #0
   34e18:	bl	12434 <memset@plt>
   34e1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34e20:	sub	r3, r3, #56	; 0x38
   34e24:	ldrd	r8, [r3, #8]
   34e28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34e2c:	ldrd	r6, [r3]
   34e30:	mov	r2, #0
   34e34:	mov	r3, #0
   34e38:	sub	r1, fp, #1424	; 0x590
   34e3c:	sub	r1, r1, #12
   34e40:	strd	r2, [r1]
   34e44:	mov	r2, #0
   34e48:	mov	r3, #0
   34e4c:	sub	r1, fp, #1424	; 0x590
   34e50:	sub	r1, r1, #4
   34e54:	strd	r2, [r1]
   34e58:	mov	r3, r9
   34e5c:	str	r3, [fp, #-1428]	; 0xfffffa6c
   34e60:	asr	r3, r9, #31
   34e64:	str	r3, [fp, #-1424]	; 0xfffffa70
   34e68:	asr	r2, r8, #31
   34e6c:	mov	r4, #0
   34e70:	mov	r5, #0
   34e74:	mov	r4, r7
   34e78:	asr	r5, r7, #31
   34e7c:	asr	r3, r6, #31
   34e80:	ldr	r1, [fp, #-1428]	; 0xfffffa6c
   34e84:	cmp	r2, r1
   34e88:	bne	34ec0 <__assert_fail@plt+0x227d4>
   34e8c:	cmp	r3, r4
   34e90:	bne	34ea8 <__assert_fail@plt+0x227bc>
   34e94:	smull	r2, r3, r8, r6
   34e98:	sub	r1, fp, #1408	; 0x580
   34e9c:	sub	r1, r1, #12
   34ea0:	strd	r2, [r1]
   34ea4:	b	350a4 <__assert_fail@plt+0x229b8>
   34ea8:	sub	r3, fp, #1440	; 0x5a0
   34eac:	sub	r3, r3, #4
   34eb0:	strd	r6, [r3]
   34eb4:	mov	r1, r4
   34eb8:	mov	ip, r8
   34ebc:	b	34edc <__assert_fail@plt+0x227f0>
   34ec0:	cmp	r3, r4
   34ec4:	bne	34fe0 <__assert_fail@plt+0x228f4>
   34ec8:	sub	r3, fp, #1440	; 0x5a0
   34ecc:	sub	r3, r3, #4
   34ed0:	strd	r8, [r3]
   34ed4:	ldr	r1, [fp, #-1428]	; 0xfffffa6c
   34ed8:	mov	ip, r6
   34edc:	umull	r2, r3, r8, r6
   34ee0:	sub	r0, fp, #1424	; 0x590
   34ee4:	sub	r0, r0, #4
   34ee8:	strd	r2, [r0]
   34eec:	umull	r2, r3, ip, r1
   34ef0:	mov	r4, r2
   34ef4:	mov	r5, r3
   34ef8:	cmp	r1, #0
   34efc:	bge	34f34 <__assert_fail@plt+0x22848>
   34f00:	mov	r2, ip
   34f04:	mov	r3, #0
   34f08:	mov	r0, #0
   34f0c:	mov	r1, #0
   34f10:	mov	r1, r2
   34f14:	mov	r0, #0
   34f18:	subs	r3, r4, r0
   34f1c:	str	r3, [fp, #-1500]	; 0xfffffa24
   34f20:	sbc	r3, r5, r1
   34f24:	str	r3, [fp, #-1496]	; 0xfffffa28
   34f28:	sub	r3, fp, #1488	; 0x5d0
   34f2c:	sub	r3, r3, #12
   34f30:	ldrd	r4, [r3]
   34f34:	cmp	ip, #0
   34f38:	bge	34f68 <__assert_fail@plt+0x2287c>
   34f3c:	sub	r3, fp, #1440	; 0x5a0
   34f40:	sub	r3, r3, #4
   34f44:	ldrd	r2, [r3]
   34f48:	mov	r1, r2
   34f4c:	subs	r1, r4, r1
   34f50:	str	r1, [fp, #-1508]	; 0xfffffa1c
   34f54:	sbc	r3, r5, r3
   34f58:	str	r3, [fp, #-1504]	; 0xfffffa20
   34f5c:	sub	r3, fp, #1504	; 0x5e0
   34f60:	sub	r3, r3, #4
   34f64:	ldrd	r4, [r3]
   34f68:	mov	r2, #0
   34f6c:	mov	r3, #0
   34f70:	ldr	r1, [fp, #-1424]	; 0xfffffa70
   34f74:	mov	r2, r1
   34f78:	mov	r3, #0
   34f7c:	adds	r1, r4, r2
   34f80:	str	r1, [fp, #-1516]	; 0xfffffa14
   34f84:	adc	r3, r5, r3
   34f88:	str	r3, [fp, #-1512]	; 0xfffffa18
   34f8c:	sub	r3, fp, #1504	; 0x5e0
   34f90:	sub	r3, r3, #12
   34f94:	ldrd	r4, [r3]
   34f98:	mov	r2, #0
   34f9c:	mov	r3, #0
   34fa0:	mov	r2, r5
   34fa4:	asr	r3, r5, #31
   34fa8:	asr	r1, r4, #31
   34fac:	cmp	r1, r2
   34fb0:	bne	3506c <__assert_fail@plt+0x22980>
   34fb4:	mov	r0, #0
   34fb8:	mov	r1, #0
   34fbc:	mov	r1, r4
   34fc0:	mov	r0, #0
   34fc4:	ldr	r2, [fp, #-1428]	; 0xfffffa6c
   34fc8:	mov	r3, #0
   34fcc:	orr	ip, r0, r2
   34fd0:	str	ip, [fp, #-1420]	; 0xfffffa74
   34fd4:	orr	r3, r1, r3
   34fd8:	str	r3, [fp, #-1416]	; 0xfffffa78
   34fdc:	b	350a4 <__assert_fail@plt+0x229b8>
   34fe0:	mul	r2, r6, r9
   34fe4:	mul	r3, r8, r7
   34fe8:	add	r1, r2, r3
   34fec:	umull	r2, r3, r8, r6
   34ff0:	add	r1, r1, r3
   34ff4:	mov	r3, r1
   34ff8:	mov	r0, r2
   34ffc:	mov	r1, r3
   35000:	sub	r3, fp, #1408	; 0x580
   35004:	sub	r3, r3, #12
   35008:	strd	r0, [r3]
   3500c:	sub	r3, fp, #1424	; 0x590
   35010:	sub	r3, r3, #4
   35014:	ldrd	r6, [r3]
   35018:	mov	r3, r6
   3501c:	add	r3, r3, #1
   35020:	cmp	r3, #1
   35024:	bhi	35090 <__assert_fail@plt+0x229a4>
   35028:	add	r3, r4, #1
   3502c:	cmp	r3, #1
   35030:	bhi	35090 <__assert_fail@plt+0x229a4>
   35034:	mov	r3, r6
   35038:	cmp	r3, r4
   3503c:	bne	35050 <__assert_fail@plt+0x22964>
   35040:	cmp	r0, #1
   35044:	sbcs	r3, r1, #0
   35048:	blt	35090 <__assert_fail@plt+0x229a4>
   3504c:	b	350a4 <__assert_fail@plt+0x229b8>
   35050:	sub	r3, fp, #1408	; 0x580
   35054:	sub	r3, r3, #12
   35058:	ldrd	r2, [r3]
   3505c:	cmp	r2, #0
   35060:	sbcs	r3, r3, #0
   35064:	bge	35090 <__assert_fail@plt+0x229a4>
   35068:	b	350a4 <__assert_fail@plt+0x229b8>
   3506c:	mul	r2, r6, r9
   35070:	mul	r3, r8, r7
   35074:	add	r1, r2, r3
   35078:	umull	r2, r3, r8, r6
   3507c:	add	r1, r1, r3
   35080:	mov	r3, r1
   35084:	sub	r1, fp, #1408	; 0x580
   35088:	sub	r1, r1, #12
   3508c:	strd	r2, [r1]
   35090:	mov	r2, #1
   35094:	mov	r3, #0
   35098:	sub	r1, fp, #1424	; 0x590
   3509c:	sub	r1, r1, #12
   350a0:	strd	r2, [r1]
   350a4:	sub	r3, fp, #1408	; 0x580
   350a8:	sub	r3, r3, #12
   350ac:	ldrd	r2, [r3]
   350b0:	mov	r0, r2
   350b4:	mov	r1, r3
   350b8:	sub	r3, fp, #1376	; 0x560
   350bc:	sub	r3, r3, #12
   350c0:	strd	r0, [r3, #16]
   350c4:	sub	r3, fp, #1424	; 0x590
   350c8:	sub	r3, r3, #12
   350cc:	ldrd	r2, [r3]
   350d0:	mov	r3, r2
   350d4:	and	r3, r3, #1
   350d8:	uxtb	r3, r3
   350dc:	cmp	r3, #0
   350e0:	beq	35368 <__assert_fail@plt+0x22c7c>
   350e4:	b	35738 <__assert_fail@plt+0x2304c>
   350e8:	sub	r0, fp, #1376	; 0x560
   350ec:	sub	r0, r0, #12
   350f0:	mov	r3, #56	; 0x38
   350f4:	mov	r2, r3
   350f8:	mov	r1, #0
   350fc:	bl	12434 <memset@plt>
   35100:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35104:	sub	r3, r3, #56	; 0x38
   35108:	ldrd	r2, [r3, #8]
   3510c:	sub	r1, fp, #1376	; 0x560
   35110:	sub	r1, r1, #12
   35114:	strd	r2, [r1, #24]
   35118:	b	35374 <__assert_fail@plt+0x22c88>
   3511c:	sub	r0, fp, #1376	; 0x560
   35120:	sub	r0, r0, #12
   35124:	mov	r3, #56	; 0x38
   35128:	mov	r2, r3
   3512c:	mov	r1, #0
   35130:	bl	12434 <memset@plt>
   35134:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35138:	sub	r3, r3, #56	; 0x38
   3513c:	ldrd	r2, [r3, #8]
   35140:	sub	r1, fp, #1376	; 0x560
   35144:	sub	r1, r1, #12
   35148:	strd	r2, [r1, #32]
   3514c:	b	35374 <__assert_fail@plt+0x22c88>
   35150:	sub	r0, fp, #1376	; 0x560
   35154:	sub	r0, r0, #12
   35158:	mov	r3, #56	; 0x38
   3515c:	mov	r2, r3
   35160:	mov	r1, #0
   35164:	bl	12434 <memset@plt>
   35168:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3516c:	sub	r3, r3, #56	; 0x38
   35170:	ldrd	r2, [r3, #8]
   35174:	sub	r1, fp, #1376	; 0x560
   35178:	sub	r1, r1, #12
   3517c:	strd	r2, [r1, #40]	; 0x28
   35180:	b	35374 <__assert_fail@plt+0x22c88>
   35184:	sub	r0, fp, #1376	; 0x560
   35188:	sub	r0, r0, #12
   3518c:	mov	r3, #56	; 0x38
   35190:	mov	r2, r3
   35194:	mov	r1, #0
   35198:	bl	12434 <memset@plt>
   3519c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   351a0:	ldrd	r2, [r3]
   351a4:	sub	r1, fp, #1376	; 0x560
   351a8:	sub	r1, r1, #12
   351ac:	strd	r2, [r1, #16]
   351b0:	b	35374 <__assert_fail@plt+0x22c88>
   351b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   351b8:	ldrd	r2, [r3, #8]
   351bc:	mov	r0, r2
   351c0:	mov	r1, r3
   351c4:	bl	31b48 <__assert_fail@plt+0x1f45c>
   351c8:	mov	r3, r0
   351cc:	cmp	r3, #0
   351d0:	bne	35724 <__assert_fail@plt+0x23038>
   351d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   351d8:	ldrd	r2, [r3, #8]
   351dc:	mov	r3, r2
   351e0:	str	r3, [fp, #-1388]	; 0xfffffa94
   351e4:	mov	r3, #0
   351e8:	str	r3, [fp, #-1384]	; 0xfffffa98
   351ec:	b	35374 <__assert_fail@plt+0x22c88>
   351f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   351f4:	ldrd	r2, [r3, #8]
   351f8:	mov	r0, r2
   351fc:	mov	r1, r3
   35200:	bl	31b48 <__assert_fail@plt+0x1f45c>
   35204:	mov	r3, r0
   35208:	cmp	r3, #0
   3520c:	bne	3572c <__assert_fail@plt+0x23040>
   35210:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35214:	ldrd	r2, [r3, #8]
   35218:	mov	r3, r2
   3521c:	str	r3, [fp, #-1388]	; 0xfffffa94
   35220:	mov	r3, #0
   35224:	str	r3, [fp, #-1384]	; 0xfffffa98
   35228:	b	35374 <__assert_fail@plt+0x22c88>
   3522c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35230:	mov	ip, sp
   35234:	add	r1, r0, #8
   35238:	ldrd	r2, [r1]
   3523c:	strd	r2, [ip]
   35240:	ldrd	r2, [r1, #8]
   35244:	strd	r2, [ip, #8]
   35248:	ldm	r0, {r2, r3}
   3524c:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   35250:	bl	31c6c <__assert_fail@plt+0x1f580>
   35254:	b	35374 <__assert_fail@plt+0x22c88>
   35258:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3525c:	sub	r0, r3, #56	; 0x38
   35260:	mov	ip, sp
   35264:	add	r1, r0, #8
   35268:	ldrd	r2, [r1]
   3526c:	strd	r2, [ip]
   35270:	ldrd	r2, [r1, #8]
   35274:	strd	r2, [ip, #8]
   35278:	ldm	r0, {r2, r3}
   3527c:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   35280:	bl	31c6c <__assert_fail@plt+0x1f580>
   35284:	ldr	ip, [fp, #-60]	; 0xffffffc4
   35288:	mov	r3, #1
   3528c:	str	r3, [sp, #48]	; 0x30
   35290:	mov	r0, sp
   35294:	add	r1, ip, #8
   35298:	ldrd	r2, [r1]
   3529c:	strd	r2, [r0]
   352a0:	ldrd	r2, [r1, #8]
   352a4:	strd	r2, [r0, #8]
   352a8:	ldrd	r2, [r1, #16]
   352ac:	strd	r2, [r0, #16]
   352b0:	ldrd	r2, [r1, #24]
   352b4:	strd	r2, [r0, #24]
   352b8:	ldrd	r2, [r1, #32]
   352bc:	strd	r2, [r0, #32]
   352c0:	ldrd	r2, [r1, #40]	; 0x28
   352c4:	strd	r2, [r0, #40]	; 0x28
   352c8:	ldm	ip, {r2, r3}
   352cc:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   352d0:	bl	31e6c <__assert_fail@plt+0x1f780>
   352d4:	mov	r3, r0
   352d8:	eor	r3, r3, #1
   352dc:	uxtb	r3, r3
   352e0:	cmp	r3, #0
   352e4:	beq	35370 <__assert_fail@plt+0x22c84>
   352e8:	b	35738 <__assert_fail@plt+0x2304c>
   352ec:	sub	r3, fp, #1376	; 0x560
   352f0:	sub	r3, r3, #12
   352f4:	mov	r1, r3
   352f8:	mvn	r2, #0
   352fc:	mvn	r3, #0
   35300:	strd	r2, [r1]
   35304:	b	35374 <__assert_fail@plt+0x22c88>
   35308:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3530c:	ldrd	r2, [r3, #8]
   35310:	sub	r1, fp, #1376	; 0x560
   35314:	sub	r1, r1, #12
   35318:	strd	r2, [r1]
   3531c:	b	35374 <__assert_fail@plt+0x22c88>
   35320:	nop	{0}
   35324:	b	35374 <__assert_fail@plt+0x22c88>
   35328:	nop	{0}
   3532c:	b	35374 <__assert_fail@plt+0x22c88>
   35330:	nop	{0}
   35334:	b	35374 <__assert_fail@plt+0x22c88>
   35338:	nop	{0}
   3533c:	b	35374 <__assert_fail@plt+0x22c88>
   35340:	nop	{0}
   35344:	b	35374 <__assert_fail@plt+0x22c88>
   35348:	nop	{0}
   3534c:	b	35374 <__assert_fail@plt+0x22c88>
   35350:	nop	{0}
   35354:	b	35374 <__assert_fail@plt+0x22c88>
   35358:	nop	{0}
   3535c:	b	35374 <__assert_fail@plt+0x22c88>
   35360:	nop	{0}
   35364:	b	35374 <__assert_fail@plt+0x22c88>
   35368:	nop	{0}
   3536c:	b	35374 <__assert_fail@plt+0x22c88>
   35370:	nop	{0}
   35374:	ldr	r2, [fp, #-80]	; 0xffffffb0
   35378:	mov	r3, r2
   3537c:	lsl	r3, r3, #3
   35380:	sub	r3, r3, r2
   35384:	lsl	r3, r3, #3
   35388:	rsb	r2, r3, #0
   3538c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35390:	add	r3, r3, r2
   35394:	str	r3, [fp, #-60]	; 0xffffffc4
   35398:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3539c:	lsl	r3, r3, #1
   353a0:	rsb	r2, r3, #0
   353a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   353a8:	add	r3, r3, r2
   353ac:	str	r3, [fp, #-52]	; 0xffffffcc
   353b0:	mov	r3, #0
   353b4:	str	r3, [fp, #-80]	; 0xffffffb0
   353b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   353bc:	add	r3, r3, #56	; 0x38
   353c0:	str	r3, [fp, #-60]	; 0xffffffc4
   353c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   353c8:	mov	r0, r3
   353cc:	sub	r1, fp, #1376	; 0x560
   353d0:	sub	r1, r1, #12
   353d4:	ldrd	r2, [r1]
   353d8:	strd	r2, [r0]
   353dc:	ldrd	r2, [r1, #8]
   353e0:	strd	r2, [r0, #8]
   353e4:	ldrd	r2, [r1, #16]
   353e8:	strd	r2, [r0, #16]
   353ec:	ldrd	r2, [r1, #24]
   353f0:	strd	r2, [r0, #24]
   353f4:	ldrd	r2, [r1, #32]
   353f8:	strd	r2, [r0, #32]
   353fc:	ldrd	r2, [r1, #40]	; 0x28
   35400:	strd	r2, [r0, #40]	; 0x28
   35404:	ldrd	r2, [r1, #48]	; 0x30
   35408:	strd	r2, [r0, #48]	; 0x30
   3540c:	movw	r2, #39704	; 0x9b18
   35410:	movt	r2, #6
   35414:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35418:	add	r3, r2, r3
   3541c:	ldrb	r3, [r3]
   35420:	sub	r3, r3, #28
   35424:	str	r3, [fp, #-112]	; 0xffffff90
   35428:	movw	r2, #39300	; 0x9984
   3542c:	movt	r2, #6
   35430:	ldr	r3, [fp, #-112]	; 0xffffff90
   35434:	add	r3, r2, r3
   35438:	ldrsb	r3, [r3]
   3543c:	mov	r2, r3
   35440:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35444:	ldrsh	r3, [r3]
   35448:	add	r3, r2, r3
   3544c:	str	r3, [fp, #-116]	; 0xffffff8c
   35450:	ldr	r3, [fp, #-116]	; 0xffffff8c
   35454:	cmp	r3, #0
   35458:	blt	354a8 <__assert_fail@plt+0x22dbc>
   3545c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   35460:	cmp	r3, #112	; 0x70
   35464:	bgt	354a8 <__assert_fail@plt+0x22dbc>
   35468:	movw	r2, #39472	; 0x9a30
   3546c:	movt	r2, #6
   35470:	ldr	r3, [fp, #-116]	; 0xffffff8c
   35474:	add	r3, r2, r3
   35478:	ldrsb	r3, [r3]
   3547c:	sxth	r2, r3
   35480:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35484:	ldrsh	r3, [r3]
   35488:	cmp	r2, r3
   3548c:	bne	354a8 <__assert_fail@plt+0x22dbc>
   35490:	movw	r2, #39356	; 0x99bc
   35494:	movt	r2, #6
   35498:	ldr	r3, [fp, #-116]	; 0xffffff8c
   3549c:	add	r3, r2, r3
   354a0:	ldrb	r3, [r3]
   354a4:	b	354bc <__assert_fail@plt+0x22dd0>
   354a8:	movw	r2, #39328	; 0x99a0
   354ac:	movt	r2, #6
   354b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   354b4:	add	r3, r2, r3
   354b8:	ldrsb	r3, [r3]
   354bc:	str	r3, [fp, #-40]	; 0xffffffd8
   354c0:	b	330a8 <__assert_fail@plt+0x209bc>
   354c4:	nop	{0}
   354c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   354cc:	cmn	r3, #2
   354d0:	beq	35504 <__assert_fail@plt+0x22e18>
   354d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   354d8:	movw	r3, #277	; 0x115
   354dc:	cmp	r2, r3
   354e0:	bhi	354fc <__assert_fail@plt+0x22e10>
   354e4:	movw	r2, #38788	; 0x9784
   354e8:	movt	r2, #6
   354ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   354f0:	add	r3, r2, r3
   354f4:	ldrb	r3, [r3]
   354f8:	b	35508 <__assert_fail@plt+0x22e1c>
   354fc:	mov	r3, #2
   35500:	b	35508 <__assert_fail@plt+0x22e1c>
   35504:	mvn	r3, #1
   35508:	str	r3, [fp, #-76]	; 0xffffffb4
   3550c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35510:	cmp	r3, #0
   35514:	bne	35534 <__assert_fail@plt+0x22e48>
   35518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3551c:	add	r3, r3, #1
   35520:	str	r3, [fp, #-36]	; 0xffffffdc
   35524:	movw	r1, #40128	; 0x9cc0
   35528:	movt	r1, #6
   3552c:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   35530:	bl	36c44 <__assert_fail@plt+0x24558>
   35534:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35538:	cmp	r3, #3
   3553c:	bne	3557c <__assert_fail@plt+0x22e90>
   35540:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35544:	cmp	r3, #0
   35548:	bgt	3555c <__assert_fail@plt+0x22e70>
   3554c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35550:	cmp	r3, #0
   35554:	bne	3557c <__assert_fail@plt+0x22e90>
   35558:	b	35738 <__assert_fail@plt+0x2304c>
   3555c:	sub	r2, fp, #172	; 0xac
   35560:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   35564:	ldr	r1, [fp, #-76]	; 0xffffffb4
   35568:	movw	r0, #40144	; 0x9cd0
   3556c:	movt	r0, #6
   35570:	bl	32fdc <__assert_fail@plt+0x208f0>
   35574:	mvn	r3, #1
   35578:	str	r3, [fp, #-32]	; 0xffffffe0
   3557c:	nop	{0}
   35580:	mov	r3, #3
   35584:	str	r3, [fp, #-44]	; 0xffffffd4
   35588:	movw	r2, #39068	; 0x989c
   3558c:	movt	r2, #6
   35590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35594:	add	r3, r2, r3
   35598:	ldrsb	r3, [r3]
   3559c:	str	r3, [fp, #-68]	; 0xffffffbc
   355a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   355a4:	cmn	r3, #93	; 0x5d
   355a8:	beq	35610 <__assert_fail@plt+0x22f24>
   355ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   355b0:	add	r3, r3, #1
   355b4:	str	r3, [fp, #-68]	; 0xffffffbc
   355b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   355bc:	cmp	r3, #0
   355c0:	blt	35610 <__assert_fail@plt+0x22f24>
   355c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   355c8:	cmp	r3, #112	; 0x70
   355cc:	bgt	35610 <__assert_fail@plt+0x22f24>
   355d0:	movw	r2, #39472	; 0x9a30
   355d4:	movt	r2, #6
   355d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   355dc:	add	r3, r2, r3
   355e0:	ldrsb	r3, [r3]
   355e4:	cmp	r3, #1
   355e8:	bne	35610 <__assert_fail@plt+0x22f24>
   355ec:	movw	r2, #39356	; 0x99bc
   355f0:	movt	r2, #6
   355f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   355f8:	add	r3, r2, r3
   355fc:	ldrb	r3, [r3]
   35600:	str	r3, [fp, #-68]	; 0xffffffbc
   35604:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35608:	cmp	r3, #0
   3560c:	bgt	35674 <__assert_fail@plt+0x22f88>
   35610:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35614:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35618:	cmp	r2, r3
   3561c:	beq	35734 <__assert_fail@plt+0x23048>
   35620:	movw	r2, #39588	; 0x9aa4
   35624:	movt	r2, #6
   35628:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3562c:	add	r3, r2, r3
   35630:	ldrb	r3, [r3]
   35634:	mov	r1, r3
   35638:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3563c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   35640:	movw	r0, #40164	; 0x9ce4
   35644:	movt	r0, #6
   35648:	bl	32fdc <__assert_fail@plt+0x208f0>
   3564c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35650:	sub	r3, r3, #56	; 0x38
   35654:	str	r3, [fp, #-60]	; 0xffffffc4
   35658:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3565c:	sub	r3, r3, #2
   35660:	str	r3, [fp, #-52]	; 0xffffffcc
   35664:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35668:	ldrsh	r3, [r3]
   3566c:	str	r3, [fp, #-40]	; 0xffffffd8
   35670:	b	35588 <__assert_fail@plt+0x22e9c>
   35674:	nop	{0}
   35678:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3567c:	add	r3, r3, #56	; 0x38
   35680:	str	r3, [fp, #-60]	; 0xffffffc4
   35684:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35688:	mov	r0, r3
   3568c:	sub	r1, fp, #172	; 0xac
   35690:	ldrd	r2, [r1]
   35694:	strd	r2, [r0]
   35698:	ldrd	r2, [r1, #8]
   3569c:	strd	r2, [r0, #8]
   356a0:	ldrd	r2, [r1, #16]
   356a4:	strd	r2, [r0, #16]
   356a8:	ldrd	r2, [r1, #24]
   356ac:	strd	r2, [r0, #24]
   356b0:	ldrd	r2, [r1, #32]
   356b4:	strd	r2, [r0, #32]
   356b8:	ldrd	r2, [r1, #40]	; 0x28
   356bc:	strd	r2, [r0, #40]	; 0x28
   356c0:	ldrd	r2, [r1, #48]	; 0x30
   356c4:	strd	r2, [r0, #48]	; 0x30
   356c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   356cc:	str	r3, [fp, #-40]	; 0xffffffd8
   356d0:	b	330a8 <__assert_fail@plt+0x209bc>
   356d4:	nop	{0}
   356d8:	mov	r3, #0
   356dc:	str	r3, [fp, #-72]	; 0xffffffb8
   356e0:	b	35768 <__assert_fail@plt+0x2307c>
   356e4:	nop	{0}
   356e8:	b	35738 <__assert_fail@plt+0x2304c>
   356ec:	nop	{0}
   356f0:	b	35738 <__assert_fail@plt+0x2304c>
   356f4:	nop	{0}
   356f8:	b	35738 <__assert_fail@plt+0x2304c>
   356fc:	nop	{0}
   35700:	b	35738 <__assert_fail@plt+0x2304c>
   35704:	nop	{0}
   35708:	b	35738 <__assert_fail@plt+0x2304c>
   3570c:	nop	{0}
   35710:	b	35738 <__assert_fail@plt+0x2304c>
   35714:	nop	{0}
   35718:	b	35738 <__assert_fail@plt+0x2304c>
   3571c:	nop	{0}
   35720:	b	35738 <__assert_fail@plt+0x2304c>
   35724:	nop	{0}
   35728:	b	35738 <__assert_fail@plt+0x2304c>
   3572c:	nop	{0}
   35730:	b	35738 <__assert_fail@plt+0x2304c>
   35734:	nop	{0}
   35738:	mov	r3, #1
   3573c:	str	r3, [fp, #-72]	; 0xffffffb8
   35740:	b	35768 <__assert_fail@plt+0x2307c>
   35744:	nop	{0}
   35748:	b	35750 <__assert_fail@plt+0x23064>
   3574c:	nop	{0}
   35750:	movw	r1, #40180	; 0x9cf4
   35754:	movt	r1, #6
   35758:	ldr	r0, [fp, #-1392]	; 0xfffffa90
   3575c:	bl	36c44 <__assert_fail@plt+0x24558>
   35760:	mov	r3, #2
   35764:	str	r3, [fp, #-72]	; 0xffffffb8
   35768:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3576c:	cmn	r3, #2
   35770:	beq	357bc <__assert_fail@plt+0x230d0>
   35774:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35778:	movw	r2, #277	; 0x115
   3577c:	cmp	r3, r2
   35780:	bhi	3579c <__assert_fail@plt+0x230b0>
   35784:	movw	r3, #38788	; 0x9784
   35788:	movt	r3, #6
   3578c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   35790:	add	r3, r3, r2
   35794:	ldrb	r3, [r3]
   35798:	b	357a0 <__assert_fail@plt+0x230b4>
   3579c:	mov	r3, #2
   357a0:	str	r3, [fp, #-76]	; 0xffffffb4
   357a4:	sub	r2, fp, #172	; 0xac
   357a8:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   357ac:	ldr	r1, [fp, #-76]	; 0xffffffb4
   357b0:	movw	r0, #40200	; 0x9d08
   357b4:	movt	r0, #6
   357b8:	bl	32fdc <__assert_fail@plt+0x208f0>
   357bc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   357c0:	mov	r3, r2
   357c4:	lsl	r3, r3, #3
   357c8:	sub	r3, r3, r2
   357cc:	lsl	r3, r3, #3
   357d0:	rsb	r3, r3, #0
   357d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   357d8:	add	r3, r2, r3
   357dc:	str	r3, [fp, #-60]	; 0xffffffc4
   357e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   357e4:	lsl	r3, r3, #1
   357e8:	rsb	r3, r3, #0
   357ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   357f0:	add	r3, r2, r3
   357f4:	str	r3, [fp, #-52]	; 0xffffffcc
   357f8:	b	35844 <__assert_fail@plt+0x23158>
   357fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35800:	ldrsh	r3, [r3]
   35804:	mov	r2, r3
   35808:	movw	r3, #39588	; 0x9aa4
   3580c:	movt	r3, #6
   35810:	ldrb	r3, [r3, r2]
   35814:	mov	r1, r3
   35818:	ldr	r3, [fp, #-1392]	; 0xfffffa90
   3581c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   35820:	movw	r0, #40232	; 0x9d28
   35824:	movt	r0, #6
   35828:	bl	32fdc <__assert_fail@plt+0x208f0>
   3582c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35830:	sub	r3, r3, #56	; 0x38
   35834:	str	r3, [fp, #-60]	; 0xffffffc4
   35838:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3583c:	sub	r3, r3, #2
   35840:	str	r3, [fp, #-52]	; 0xffffffcc
   35844:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35848:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3584c:	cmp	r2, r3
   35850:	bne	357fc <__assert_fail@plt+0x23110>
   35854:	sub	r3, fp, #212	; 0xd4
   35858:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3585c:	cmp	r2, r3
   35860:	beq	3586c <__assert_fail@plt+0x23180>
   35864:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35868:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3586c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   35870:	mov	r0, r3
   35874:	sub	sp, fp, #28
   35878:	ldrd	r4, [sp]
   3587c:	ldrd	r6, [sp, #8]
   35880:	ldrd	r8, [sp, #16]
   35884:	ldr	fp, [sp, #24]
   35888:	add	sp, sp, #28
   3588c:	pop	{pc}		; (ldr pc, [sp], #4)
   35890:	sub	sp, sp, #8
   35894:	strd	r4, [sp, #-32]!	; 0xffffffe0
   35898:	strd	r6, [sp, #8]
   3589c:	strd	r8, [sp, #16]
   358a0:	str	fp, [sp, #24]
   358a4:	str	lr, [sp, #28]
   358a8:	add	fp, sp, #28
   358ac:	sub	sp, sp, #56	; 0x38
   358b0:	str	r0, [fp, #-48]	; 0xffffffd0
   358b4:	add	r1, fp, #4
   358b8:	stm	r1, {r2, r3}
   358bc:	mov	r3, #0
   358c0:	strb	r3, [fp, #-29]	; 0xffffffe3
   358c4:	ldr	r3, [fp, #20]
   358c8:	cmp	r3, #2
   358cc:	bgt	35938 <__assert_fail@plt+0x2324c>
   358d0:	ldrd	r2, [fp, #28]
   358d4:	cmp	r2, #0
   358d8:	sbcs	r3, r3, #0
   358dc:	bge	35938 <__assert_fail@plt+0x2324c>
   358e0:	ldrd	r4, [fp, #12]
   358e4:	mov	r2, r4
   358e8:	mov	r3, r5
   358ec:	adds	r6, r2, r2
   358f0:	adc	r7, r3, r3
   358f4:	mov	r2, r6
   358f8:	mov	r3, r7
   358fc:	adds	r2, r2, r4
   35900:	adc	r3, r3, r5
   35904:	mov	r0, #0
   35908:	mov	r1, #0
   3590c:	lsl	r1, r3, #5
   35910:	orr	r1, r1, r2, lsr #27
   35914:	lsl	r0, r2, #5
   35918:	adds	r2, r2, r0
   3591c:	adc	r3, r3, r1
   35920:	adds	r1, r2, r4
   35924:	str	r1, [fp, #-68]	; 0xffffffbc
   35928:	adc	r3, r3, r5
   3592c:	str	r3, [fp, #-64]	; 0xffffffc0
   35930:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   35934:	strd	r2, [fp, #12]
   35938:	ldrd	r2, [fp, #28]
   3593c:	cmp	r2, #0
   35940:	sbcs	r3, r3, #0
   35944:	bge	359d8 <__assert_fail@plt+0x232ec>
   35948:	ldrd	r0, [fp, #12]
   3594c:	mov	r2, #100	; 0x64
   35950:	mov	r3, #0
   35954:	bl	6498c <__assert_fail@plt+0x522a0>
   35958:	mov	r2, r0
   3595c:	mov	r3, r1
   35960:	mov	r4, r2
   35964:	mov	r5, r3
   35968:	mov	r2, r4
   3596c:	mov	r3, r5
   35970:	mov	r0, #0
   35974:	mov	r1, #0
   35978:	lsl	r1, r3, #4
   3597c:	orr	r1, r1, r2, lsr #28
   35980:	lsl	r0, r2, #4
   35984:	mov	r2, r0
   35988:	mov	r3, r1
   3598c:	subs	r2, r2, r4
   35990:	sbc	r3, r3, r5
   35994:	mov	r0, #0
   35998:	mov	r1, #0
   3599c:	lsl	r1, r3, #2
   359a0:	orr	r1, r1, r2, lsr #30
   359a4:	lsl	r0, r2, #2
   359a8:	mov	r2, r0
   359ac:	mov	r3, r1
   359b0:	mov	r4, r2
   359b4:	mov	r5, r3
   359b8:	ldrd	r0, [fp, #12]
   359bc:	mov	r2, #100	; 0x64
   359c0:	mov	r3, #0
   359c4:	bl	6498c <__assert_fail@plt+0x522a0>
   359c8:	adds	r8, r4, r2
   359cc:	adc	r9, r5, r3
   359d0:	strd	r8, [fp, #-44]	; 0xffffffd4
   359d4:	b	35c2c <__assert_fail@plt+0x23540>
   359d8:	ldrd	r6, [fp, #12]
   359dc:	mov	r2, #0
   359e0:	mov	r3, #0
   359e4:	strd	r2, [fp, #-68]	; 0xffffffbc
   359e8:	mov	r0, #0
   359ec:	mov	r1, #0
   359f0:	mov	r0, r7
   359f4:	asr	r1, r7, #31
   359f8:	asr	ip, r6, #31
   359fc:	mov	r2, #60	; 0x3c
   35a00:	mov	r3, #0
   35a04:	mov	r4, #0
   35a08:	mov	r5, #0
   35a0c:	mov	r4, r3
   35a10:	asr	r5, r3, #31
   35a14:	cmp	ip, r0
   35a18:	bne	35a2c <__assert_fail@plt+0x23340>
   35a1c:	mov	r3, #60	; 0x3c
   35a20:	smull	r2, r3, r6, r3
   35a24:	strd	r2, [fp, #-60]	; 0xffffffc4
   35a28:	b	35b40 <__assert_fail@plt+0x23454>
   35a2c:	mov	r1, r0
   35a30:	mov	r0, #60	; 0x3c
   35a34:	mov	r3, #60	; 0x3c
   35a38:	umull	r8, r9, r6, r3
   35a3c:	umull	r2, r3, r0, r1
   35a40:	mov	r4, r2
   35a44:	mov	r5, r3
   35a48:	cmp	r1, #0
   35a4c:	bge	35a7c <__assert_fail@plt+0x23390>
   35a50:	mov	r2, r0
   35a54:	mov	r3, #0
   35a58:	mov	r0, #0
   35a5c:	mov	r1, #0
   35a60:	mov	r1, r2
   35a64:	mov	r0, #0
   35a68:	subs	r3, r4, r0
   35a6c:	str	r3, [fp, #-76]	; 0xffffffb4
   35a70:	sbc	r3, r5, r1
   35a74:	str	r3, [fp, #-72]	; 0xffffffb8
   35a78:	ldrd	r4, [fp, #-76]	; 0xffffffb4
   35a7c:	mov	r2, #0
   35a80:	mov	r3, #0
   35a84:	mov	r2, r9
   35a88:	mov	r3, #0
   35a8c:	adds	r1, r4, r2
   35a90:	str	r1, [fp, #-84]	; 0xffffffac
   35a94:	adc	r3, r5, r3
   35a98:	str	r3, [fp, #-80]	; 0xffffffb0
   35a9c:	ldrd	r4, [fp, #-84]	; 0xffffffac
   35aa0:	mov	r2, #0
   35aa4:	mov	r3, #0
   35aa8:	mov	r2, r5
   35aac:	asr	r3, r5, #31
   35ab0:	asr	r1, r4, #31
   35ab4:	cmp	r1, r2
   35ab8:	bne	35ae8 <__assert_fail@plt+0x233fc>
   35abc:	mov	r2, #0
   35ac0:	mov	r3, #0
   35ac4:	mov	r3, r4
   35ac8:	mov	r2, #0
   35acc:	mov	r0, r8
   35ad0:	mov	r1, #0
   35ad4:	orr	ip, r2, r0
   35ad8:	str	ip, [fp, #-60]	; 0xffffffc4
   35adc:	orr	r3, r3, r1
   35ae0:	str	r3, [fp, #-56]	; 0xffffffc8
   35ae4:	b	35b40 <__assert_fail@plt+0x23454>
   35ae8:	mov	r2, r6
   35aec:	mov	r3, r7
   35af0:	mov	r0, #0
   35af4:	mov	r1, #0
   35af8:	lsl	r1, r3, #4
   35afc:	orr	r1, r1, r2, lsr #28
   35b00:	lsl	r0, r2, #4
   35b04:	mov	r2, r0
   35b08:	mov	r3, r1
   35b0c:	subs	r2, r2, r6
   35b10:	sbc	r3, r3, r7
   35b14:	mov	r0, #0
   35b18:	mov	r1, #0
   35b1c:	lsl	r1, r3, #2
   35b20:	orr	r1, r1, r2, lsr #30
   35b24:	lsl	r0, r2, #2
   35b28:	mov	r2, r0
   35b2c:	mov	r3, r1
   35b30:	strd	r2, [fp, #-60]	; 0xffffffc4
   35b34:	mov	r2, #1
   35b38:	mov	r3, #0
   35b3c:	strd	r2, [fp, #-68]	; 0xffffffbc
   35b40:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   35b44:	strd	r2, [fp, #-44]	; 0xffffffd4
   35b48:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   35b4c:	mov	r3, r2
   35b50:	and	r3, r3, #1
   35b54:	uxtb	r3, r3
   35b58:	mov	r2, r3
   35b5c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   35b60:	orr	r3, r2, r3
   35b64:	cmp	r3, #0
   35b68:	movne	r3, #1
   35b6c:	moveq	r3, #0
   35b70:	strb	r3, [fp, #-29]	; 0xffffffe3
   35b74:	ldrb	r3, [fp, #4]
   35b78:	cmp	r3, #0
   35b7c:	beq	35bcc <__assert_fail@plt+0x234e0>
   35b80:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   35b84:	mov	r4, #0
   35b88:	mov	r5, #0
   35b8c:	ldrd	r2, [fp, #28]
   35b90:	subs	r6, r0, r2
   35b94:	sbcs	r7, r1, r3
   35b98:	bvc	35ba4 <__assert_fail@plt+0x234b8>
   35b9c:	mov	r4, #1
   35ba0:	mov	r5, #0
   35ba4:	mov	r2, r6
   35ba8:	mov	r3, r7
   35bac:	strd	r2, [fp, #-44]	; 0xffffffd4
   35bb0:	mov	r2, r4
   35bb4:	mov	r3, r5
   35bb8:	mov	r3, r2
   35bbc:	and	r3, r3, #1
   35bc0:	uxtb	r3, r3
   35bc4:	mov	r2, r3
   35bc8:	b	35c14 <__assert_fail@plt+0x23528>
   35bcc:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   35bd0:	mov	r4, #0
   35bd4:	mov	r5, #0
   35bd8:	ldrd	r2, [fp, #28]
   35bdc:	adds	r6, r0, r2
   35be0:	adcs	r7, r1, r3
   35be4:	bvc	35bf0 <__assert_fail@plt+0x23504>
   35be8:	mov	r4, #1
   35bec:	mov	r5, #0
   35bf0:	mov	r2, r6
   35bf4:	mov	r3, r7
   35bf8:	strd	r2, [fp, #-44]	; 0xffffffd4
   35bfc:	mov	r2, r4
   35c00:	mov	r3, r5
   35c04:	mov	r3, r2
   35c08:	and	r3, r3, #1
   35c0c:	uxtb	r3, r3
   35c10:	mov	r2, r3
   35c14:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   35c18:	orr	r3, r2, r3
   35c1c:	cmp	r3, #0
   35c20:	movne	r3, #1
   35c24:	moveq	r3, #0
   35c28:	strb	r3, [fp, #-29]	; 0xffffffe3
   35c2c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   35c30:	cmp	r3, #0
   35c34:	bne	35c6c <__assert_fail@plt+0x23580>
   35c38:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   35c3c:	movw	r0, #64096	; 0xfa60
   35c40:	movt	r0, #65535	; 0xffff
   35c44:	mvn	r1, #0
   35c48:	cmp	r2, r0
   35c4c:	sbcs	r3, r3, r1
   35c50:	blt	35c6c <__assert_fail@plt+0x23580>
   35c54:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   35c58:	mov	r0, #1440	; 0x5a0
   35c5c:	mov	r1, #0
   35c60:	cmp	r0, r2
   35c64:	sbcs	r3, r1, r3
   35c68:	bge	35c74 <__assert_fail@plt+0x23588>
   35c6c:	mov	r3, #0
   35c70:	b	35c98 <__assert_fail@plt+0x235ac>
   35c74:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   35c78:	mov	r3, r2
   35c7c:	lsl	r3, r3, #4
   35c80:	sub	r3, r3, r2
   35c84:	lsl	r3, r3, #2
   35c88:	mov	r2, r3
   35c8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35c90:	str	r2, [r3, #24]
   35c94:	mov	r3, #1
   35c98:	mov	r0, r3
   35c9c:	sub	sp, fp, #28
   35ca0:	ldrd	r4, [sp]
   35ca4:	ldrd	r6, [sp, #8]
   35ca8:	ldrd	r8, [sp, #16]
   35cac:	ldr	fp, [sp, #24]
   35cb0:	ldr	lr, [sp, #28]
   35cb4:	add	sp, sp, #32
   35cb8:	add	sp, sp, #8
   35cbc:	bx	lr
   35cc0:	push	{fp}		; (str fp, [sp, #-4]!)
   35cc4:	add	fp, sp, #0
   35cc8:	sub	sp, sp, #20
   35ccc:	strd	r0, [fp, #-12]
   35cd0:	str	r2, [fp, #-16]
   35cd4:	ldr	r3, [fp, #-16]
   35cd8:	cmp	r3, #0
   35cdc:	beq	35d1c <__assert_fail@plt+0x23630>
   35ce0:	ldr	r3, [fp, #-16]
   35ce4:	cmp	r3, #1
   35ce8:	beq	35d64 <__assert_fail@plt+0x23678>
   35cec:	ldrd	r2, [fp, #-12]
   35cf0:	cmp	r2, #0
   35cf4:	sbcs	r3, r3, #0
   35cf8:	blt	35d14 <__assert_fail@plt+0x23628>
   35cfc:	ldrd	r2, [fp, #-12]
   35d00:	cmp	r2, #24
   35d04:	sbcs	r3, r3, #0
   35d08:	bge	35d14 <__assert_fail@plt+0x23628>
   35d0c:	ldr	r3, [fp, #-12]
   35d10:	b	35dac <__assert_fail@plt+0x236c0>
   35d14:	mvn	r3, #0
   35d18:	b	35dac <__assert_fail@plt+0x236c0>
   35d1c:	ldrd	r2, [fp, #-12]
   35d20:	cmp	r2, #1
   35d24:	sbcs	r3, r3, #0
   35d28:	blt	35d3c <__assert_fail@plt+0x23650>
   35d2c:	ldrd	r2, [fp, #-12]
   35d30:	cmp	r2, #12
   35d34:	sbcs	r3, r3, #0
   35d38:	blt	35d5c <__assert_fail@plt+0x23670>
   35d3c:	ldrd	r2, [fp, #-12]
   35d40:	cmp	r3, #0
   35d44:	cmpeq	r2, #12
   35d48:	bne	35d54 <__assert_fail@plt+0x23668>
   35d4c:	mov	r3, #0
   35d50:	b	35dac <__assert_fail@plt+0x236c0>
   35d54:	mvn	r3, #0
   35d58:	b	35dac <__assert_fail@plt+0x236c0>
   35d5c:	ldr	r3, [fp, #-12]
   35d60:	b	35dac <__assert_fail@plt+0x236c0>
   35d64:	ldrd	r2, [fp, #-12]
   35d68:	cmp	r2, #1
   35d6c:	sbcs	r3, r3, #0
   35d70:	blt	35d90 <__assert_fail@plt+0x236a4>
   35d74:	ldrd	r2, [fp, #-12]
   35d78:	cmp	r2, #12
   35d7c:	sbcs	r3, r3, #0
   35d80:	bge	35d90 <__assert_fail@plt+0x236a4>
   35d84:	ldr	r3, [fp, #-12]
   35d88:	add	r3, r3, #12
   35d8c:	b	35dac <__assert_fail@plt+0x236c0>
   35d90:	ldrd	r2, [fp, #-12]
   35d94:	cmp	r3, #0
   35d98:	cmpeq	r2, #12
   35d9c:	bne	35da8 <__assert_fail@plt+0x236bc>
   35da0:	mov	r3, #12
   35da4:	b	35dac <__assert_fail@plt+0x236c0>
   35da8:	mvn	r3, #0
   35dac:	mov	r0, r3
   35db0:	add	sp, fp, #0
   35db4:	pop	{fp}		; (ldr fp, [sp], #4)
   35db8:	bx	lr
   35dbc:	str	fp, [sp, #-8]!
   35dc0:	str	lr, [sp, #4]
   35dc4:	add	fp, sp, #4
   35dc8:	sub	sp, sp, #8
   35dcc:	str	r0, [fp, #-8]
   35dd0:	str	r1, [fp, #-12]
   35dd4:	ldr	r2, [fp, #-8]
   35dd8:	movw	r3, #63636	; 0xf894
   35ddc:	movt	r3, #65535	; 0xffff
   35de0:	cmp	r2, r3
   35de4:	movge	r3, #1
   35de8:	movlt	r3, #0
   35dec:	uxtb	r3, r3
   35df0:	mov	r2, r3
   35df4:	movw	r3, #42780	; 0xa71c
   35df8:	movt	r3, #6
   35dfc:	add	r0, r2, r3
   35e00:	ldr	r2, [fp, #-8]
   35e04:	movw	r3, #34079	; 0x851f
   35e08:	movt	r3, #20971	; 0x51eb
   35e0c:	smull	r1, r3, r3, r2
   35e10:	asr	r1, r3, #5
   35e14:	asr	r3, r2, #31
   35e18:	sub	r3, r1, r3
   35e1c:	add	r3, r3, #19
   35e20:	eor	ip, r3, r3, asr #31
   35e24:	sub	ip, ip, r3, asr #31
   35e28:	ldr	r2, [fp, #-8]
   35e2c:	movw	r3, #34079	; 0x851f
   35e30:	movt	r3, #20971	; 0x51eb
   35e34:	smull	r1, r3, r3, r2
   35e38:	asr	r1, r3, #5
   35e3c:	asr	r3, r2, #31
   35e40:	sub	r3, r1, r3
   35e44:	mov	r1, #100	; 0x64
   35e48:	mul	r3, r1, r3
   35e4c:	sub	r3, r2, r3
   35e50:	cmp	r3, #0
   35e54:	rsblt	r3, r3, #0
   35e58:	mov	r2, ip
   35e5c:	mov	r1, r0
   35e60:	ldr	r0, [fp, #-12]
   35e64:	bl	12590 <sprintf@plt>
   35e68:	ldr	r3, [fp, #-12]
   35e6c:	mov	r0, r3
   35e70:	sub	sp, fp, #4
   35e74:	ldr	fp, [sp]
   35e78:	add	sp, sp, #4
   35e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   35e80:	sub	sp, sp, #16
   35e84:	strd	r4, [sp, #-16]!
   35e88:	str	fp, [sp, #8]
   35e8c:	str	lr, [sp, #12]
   35e90:	add	fp, sp, #12
   35e94:	sub	sp, sp, #16
   35e98:	add	ip, fp, #4
   35e9c:	stm	ip, {r0, r1, r2, r3}
   35ea0:	ldrd	r2, [fp, #12]
   35ea4:	strd	r2, [fp, #-20]	; 0xffffffec
   35ea8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   35eac:	cmp	r2, #0
   35eb0:	sbcs	r3, r3, #0
   35eb4:	blt	35f30 <__assert_fail@plt+0x23844>
   35eb8:	ldr	r3, [fp, #20]
   35ebc:	cmp	r3, #2
   35ec0:	bne	35f30 <__assert_fail@plt+0x23844>
   35ec4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   35ec8:	cmp	r2, #69	; 0x45
   35ecc:	sbcs	r3, r3, #0
   35ed0:	bge	35ee0 <__assert_fail@plt+0x237f4>
   35ed4:	mov	r2, #2000	; 0x7d0
   35ed8:	mov	r3, #0
   35edc:	b	35ee8 <__assert_fail@plt+0x237fc>
   35ee0:	movw	r2, #1900	; 0x76c
   35ee4:	mov	r3, #0
   35ee8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   35eec:	adds	r4, r0, r2
   35ef0:	adc	r5, r1, r3
   35ef4:	strd	r4, [fp, #-20]	; 0xffffffec
   35ef8:	ldrb	r3, [fp, #28]
   35efc:	cmp	r3, #0
   35f00:	beq	35f30 <__assert_fail@plt+0x23844>
   35f04:	movw	r0, #42792	; 0xa728
   35f08:	movt	r0, #6
   35f0c:	bl	12398 <gettext@plt>
   35f10:	mov	ip, r0
   35f14:	ldrd	r0, [fp, #12]
   35f18:	ldrd	r2, [fp, #-20]	; 0xffffffec
   35f1c:	strd	r2, [sp]
   35f20:	mov	r2, r0
   35f24:	mov	r3, r1
   35f28:	mov	r0, ip
   35f2c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   35f30:	ldrd	r2, [fp, #-20]	; 0xffffffec
   35f34:	cmp	r2, #0
   35f38:	sbcs	r3, r3, #0
   35f3c:	bge	35f9c <__assert_fail@plt+0x238b0>
   35f40:	mov	ip, #0
   35f44:	movw	r4, #63636	; 0xf894
   35f48:	movt	r4, #65535	; 0xffff
   35f4c:	mvn	r5, #0
   35f50:	ldrd	r0, [fp, #-20]	; 0xffffffec
   35f54:	subs	r2, r4, r0
   35f58:	sbcs	r3, r5, r1
   35f5c:	bvc	35f64 <__assert_fail@plt+0x23878>
   35f60:	mov	ip, #1
   35f64:	mov	r0, r2
   35f68:	asr	r1, r0, #31
   35f6c:	cmp	r3, r1
   35f70:	cmpeq	r2, r0
   35f74:	beq	35f7c <__assert_fail@plt+0x23890>
   35f78:	mov	ip, #1
   35f7c:	mov	r3, r2
   35f80:	mov	r2, r3
   35f84:	ldr	r3, [fp, #32]
   35f88:	str	r2, [r3]
   35f8c:	mov	r3, ip
   35f90:	and	r3, r3, #1
   35f94:	uxtb	r3, r3
   35f98:	b	35ff0 <__assert_fail@plt+0x23904>
   35f9c:	mov	ip, #0
   35fa0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   35fa4:	movw	r4, #1900	; 0x76c
   35fa8:	mov	r5, #0
   35fac:	subs	r2, r0, r4
   35fb0:	sbcs	r3, r1, r5
   35fb4:	bvc	35fbc <__assert_fail@plt+0x238d0>
   35fb8:	mov	ip, #1
   35fbc:	mov	r0, r2
   35fc0:	asr	r1, r0, #31
   35fc4:	cmp	r3, r1
   35fc8:	cmpeq	r2, r0
   35fcc:	beq	35fd4 <__assert_fail@plt+0x238e8>
   35fd0:	mov	ip, #1
   35fd4:	mov	r3, r2
   35fd8:	mov	r2, r3
   35fdc:	ldr	r3, [fp, #32]
   35fe0:	str	r2, [r3]
   35fe4:	mov	r3, ip
   35fe8:	and	r3, r3, #1
   35fec:	uxtb	r3, r3
   35ff0:	cmp	r3, #0
   35ff4:	beq	36028 <__assert_fail@plt+0x2393c>
   35ff8:	ldrb	r3, [fp, #28]
   35ffc:	cmp	r3, #0
   36000:	beq	36020 <__assert_fail@plt+0x23934>
   36004:	movw	r0, #42836	; 0xa754
   36008:	movt	r0, #6
   3600c:	bl	12398 <gettext@plt>
   36010:	mov	r1, r0
   36014:	ldrd	r2, [fp, #-20]	; 0xffffffec
   36018:	mov	r0, r1
   3601c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   36020:	mov	r3, #0
   36024:	b	3602c <__assert_fail@plt+0x23940>
   36028:	mov	r3, #1
   3602c:	mov	r0, r3
   36030:	sub	sp, fp, #12
   36034:	ldrd	r4, [sp]
   36038:	ldr	fp, [sp, #8]
   3603c:	ldr	lr, [sp, #12]
   36040:	add	sp, sp, #16
   36044:	add	sp, sp, #16
   36048:	bx	lr
   3604c:	str	fp, [sp, #-8]!
   36050:	str	lr, [sp, #4]
   36054:	add	fp, sp, #4
   36058:	sub	sp, sp, #16
   3605c:	str	r0, [fp, #-16]
   36060:	str	r1, [fp, #-20]	; 0xffffffec
   36064:	movw	r3, #41500	; 0xa21c
   36068:	movt	r3, #6
   3606c:	str	r3, [fp, #-8]
   36070:	b	360a8 <__assert_fail@plt+0x239bc>
   36074:	ldr	r3, [fp, #-8]
   36078:	ldr	r3, [r3]
   3607c:	mov	r1, r3
   36080:	ldr	r0, [fp, #-20]	; 0xffffffec
   36084:	bl	11ffc <strcmp@plt>
   36088:	mov	r3, r0
   3608c:	cmp	r3, #0
   36090:	bne	3609c <__assert_fail@plt+0x239b0>
   36094:	ldr	r3, [fp, #-8]
   36098:	b	36164 <__assert_fail@plt+0x23a78>
   3609c:	ldr	r3, [fp, #-8]
   360a0:	add	r3, r3, #12
   360a4:	str	r3, [fp, #-8]
   360a8:	ldr	r3, [fp, #-8]
   360ac:	ldr	r3, [r3]
   360b0:	cmp	r3, #0
   360b4:	bne	36074 <__assert_fail@plt+0x23988>
   360b8:	ldr	r3, [fp, #-16]
   360bc:	add	r3, r3, #188	; 0xbc
   360c0:	str	r3, [fp, #-8]
   360c4:	b	360fc <__assert_fail@plt+0x23a10>
   360c8:	ldr	r3, [fp, #-8]
   360cc:	ldr	r3, [r3]
   360d0:	mov	r1, r3
   360d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   360d8:	bl	11ffc <strcmp@plt>
   360dc:	mov	r3, r0
   360e0:	cmp	r3, #0
   360e4:	bne	360f0 <__assert_fail@plt+0x23a04>
   360e8:	ldr	r3, [fp, #-8]
   360ec:	b	36164 <__assert_fail@plt+0x23a78>
   360f0:	ldr	r3, [fp, #-8]
   360f4:	add	r3, r3, #12
   360f8:	str	r3, [fp, #-8]
   360fc:	ldr	r3, [fp, #-8]
   36100:	ldr	r3, [r3]
   36104:	cmp	r3, #0
   36108:	bne	360c8 <__assert_fail@plt+0x239dc>
   3610c:	movw	r3, #41792	; 0xa340
   36110:	movt	r3, #6
   36114:	str	r3, [fp, #-8]
   36118:	b	36150 <__assert_fail@plt+0x23a64>
   3611c:	ldr	r3, [fp, #-8]
   36120:	ldr	r3, [r3]
   36124:	mov	r1, r3
   36128:	ldr	r0, [fp, #-20]	; 0xffffffec
   3612c:	bl	11ffc <strcmp@plt>
   36130:	mov	r3, r0
   36134:	cmp	r3, #0
   36138:	bne	36144 <__assert_fail@plt+0x23a58>
   3613c:	ldr	r3, [fp, #-8]
   36140:	b	36164 <__assert_fail@plt+0x23a78>
   36144:	ldr	r3, [fp, #-8]
   36148:	add	r3, r3, #12
   3614c:	str	r3, [fp, #-8]
   36150:	ldr	r3, [fp, #-8]
   36154:	ldr	r3, [r3]
   36158:	cmp	r3, #0
   3615c:	bne	3611c <__assert_fail@plt+0x23a30>
   36160:	mov	r3, #0
   36164:	mov	r0, r3
   36168:	sub	sp, fp, #4
   3616c:	ldr	fp, [sp]
   36170:	add	sp, sp, #4
   36174:	pop	{pc}		; (ldr pc, [sp], #4)
   36178:	str	fp, [sp, #-8]!
   3617c:	str	lr, [sp, #4]
   36180:	add	fp, sp, #4
   36184:	sub	sp, sp, #32
   36188:	str	r0, [fp, #-32]	; 0xffffffe0
   3618c:	str	r1, [fp, #-36]	; 0xffffffdc
   36190:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36194:	str	r3, [fp, #-8]
   36198:	b	361d4 <__assert_fail@plt+0x23ae8>
   3619c:	ldr	r3, [fp, #-8]
   361a0:	ldrb	r3, [r3]
   361a4:	mov	r0, r3
   361a8:	bl	31bac <__assert_fail@plt+0x1f4c0>
   361ac:	mov	r3, r0
   361b0:	mov	r0, r3
   361b4:	bl	60608 <__assert_fail@plt+0x4df1c>
   361b8:	mov	r3, r0
   361bc:	uxtb	r2, r3
   361c0:	ldr	r3, [fp, #-8]
   361c4:	strb	r2, [r3]
   361c8:	ldr	r3, [fp, #-8]
   361cc:	add	r3, r3, #1
   361d0:	str	r3, [fp, #-8]
   361d4:	ldr	r3, [fp, #-8]
   361d8:	ldrb	r3, [r3]
   361dc:	cmp	r3, #0
   361e0:	bne	3619c <__assert_fail@plt+0x23ab0>
   361e4:	movw	r3, #40276	; 0x9d54
   361e8:	movt	r3, #6
   361ec:	str	r3, [fp, #-16]
   361f0:	b	36228 <__assert_fail@plt+0x23b3c>
   361f4:	ldr	r3, [fp, #-16]
   361f8:	ldr	r3, [r3]
   361fc:	mov	r1, r3
   36200:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36204:	bl	11ffc <strcmp@plt>
   36208:	mov	r3, r0
   3620c:	cmp	r3, #0
   36210:	bne	3621c <__assert_fail@plt+0x23b30>
   36214:	ldr	r3, [fp, #-16]
   36218:	b	365c8 <__assert_fail@plt+0x23edc>
   3621c:	ldr	r3, [fp, #-16]
   36220:	add	r3, r3, #12
   36224:	str	r3, [fp, #-16]
   36228:	ldr	r3, [fp, #-16]
   3622c:	ldr	r3, [r3]
   36230:	cmp	r3, #0
   36234:	bne	361f4 <__assert_fail@plt+0x23b08>
   36238:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3623c:	bl	123bc <strlen@plt>
   36240:	mov	r3, r0
   36244:	str	r3, [fp, #-24]	; 0xffffffe8
   36248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3624c:	cmp	r3, #3
   36250:	beq	36274 <__assert_fail@plt+0x23b88>
   36254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36258:	cmp	r3, #4
   3625c:	bne	3627c <__assert_fail@plt+0x23b90>
   36260:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36264:	add	r3, r3, #3
   36268:	ldrb	r3, [r3]
   3626c:	cmp	r3, #46	; 0x2e
   36270:	bne	3627c <__assert_fail@plt+0x23b90>
   36274:	mov	r3, #1
   36278:	b	36280 <__assert_fail@plt+0x23b94>
   3627c:	mov	r3, #0
   36280:	strb	r3, [fp, #-25]	; 0xffffffe7
   36284:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   36288:	and	r3, r3, #1
   3628c:	strb	r3, [fp, #-25]	; 0xffffffe7
   36290:	movw	r3, #40568	; 0x9e78
   36294:	movt	r3, #6
   36298:	str	r3, [fp, #-16]
   3629c:	b	36320 <__assert_fail@plt+0x23c34>
   362a0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   362a4:	cmp	r3, #0
   362a8:	beq	362dc <__assert_fail@plt+0x23bf0>
   362ac:	ldr	r3, [fp, #-16]
   362b0:	ldr	r3, [r3]
   362b4:	mov	r2, #3
   362b8:	mov	r1, r3
   362bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   362c0:	bl	1268c <strncmp@plt>
   362c4:	mov	r3, r0
   362c8:	cmp	r3, #0
   362cc:	moveq	r3, #1
   362d0:	movne	r3, #0
   362d4:	uxtb	r3, r3
   362d8:	b	36304 <__assert_fail@plt+0x23c18>
   362dc:	ldr	r3, [fp, #-16]
   362e0:	ldr	r3, [r3]
   362e4:	mov	r1, r3
   362e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   362ec:	bl	11ffc <strcmp@plt>
   362f0:	mov	r3, r0
   362f4:	cmp	r3, #0
   362f8:	moveq	r3, #1
   362fc:	movne	r3, #0
   36300:	uxtb	r3, r3
   36304:	cmp	r3, #0
   36308:	beq	36314 <__assert_fail@plt+0x23c28>
   3630c:	ldr	r3, [fp, #-16]
   36310:	b	365c8 <__assert_fail@plt+0x23edc>
   36314:	ldr	r3, [fp, #-16]
   36318:	add	r3, r3, #12
   3631c:	str	r3, [fp, #-16]
   36320:	ldr	r3, [fp, #-16]
   36324:	ldr	r3, [r3]
   36328:	cmp	r3, #0
   3632c:	bne	362a0 <__assert_fail@plt+0x23bb4>
   36330:	ldr	r1, [fp, #-36]	; 0xffffffdc
   36334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   36338:	bl	3604c <__assert_fail@plt+0x23960>
   3633c:	str	r0, [fp, #-16]
   36340:	ldr	r3, [fp, #-16]
   36344:	cmp	r3, #0
   36348:	beq	36354 <__assert_fail@plt+0x23c68>
   3634c:	ldr	r3, [fp, #-16]
   36350:	b	365c8 <__assert_fail@plt+0x23edc>
   36354:	movw	r3, #40336	; 0x9d90
   36358:	movt	r3, #6
   3635c:	mov	r1, r3
   36360:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36364:	bl	11ffc <strcmp@plt>
   36368:	mov	r3, r0
   3636c:	cmp	r3, #0
   36370:	bne	36380 <__assert_fail@plt+0x23c94>
   36374:	movw	r3, #40340	; 0x9d94
   36378:	movt	r3, #6
   3637c:	b	365c8 <__assert_fail@plt+0x23edc>
   36380:	movw	r3, #40940	; 0x9fec
   36384:	movt	r3, #6
   36388:	str	r3, [fp, #-16]
   3638c:	b	363c4 <__assert_fail@plt+0x23cd8>
   36390:	ldr	r3, [fp, #-16]
   36394:	ldr	r3, [r3]
   36398:	mov	r1, r3
   3639c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   363a0:	bl	11ffc <strcmp@plt>
   363a4:	mov	r3, r0
   363a8:	cmp	r3, #0
   363ac:	bne	363b8 <__assert_fail@plt+0x23ccc>
   363b0:	ldr	r3, [fp, #-16]
   363b4:	b	365c8 <__assert_fail@plt+0x23edc>
   363b8:	ldr	r3, [fp, #-16]
   363bc:	add	r3, r3, #12
   363c0:	str	r3, [fp, #-16]
   363c4:	ldr	r3, [fp, #-16]
   363c8:	ldr	r3, [r3]
   363cc:	cmp	r3, #0
   363d0:	bne	36390 <__assert_fail@plt+0x23ca4>
   363d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   363d8:	sub	r3, r3, #1
   363dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   363e0:	add	r3, r2, r3
   363e4:	ldrb	r3, [r3]
   363e8:	cmp	r3, #83	; 0x53
   363ec:	bne	36474 <__assert_fail@plt+0x23d88>
   363f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   363f4:	sub	r3, r3, #1
   363f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   363fc:	add	r3, r2, r3
   36400:	mov	r2, #0
   36404:	strb	r2, [r3]
   36408:	movw	r3, #40940	; 0x9fec
   3640c:	movt	r3, #6
   36410:	str	r3, [fp, #-16]
   36414:	b	3644c <__assert_fail@plt+0x23d60>
   36418:	ldr	r3, [fp, #-16]
   3641c:	ldr	r3, [r3]
   36420:	mov	r1, r3
   36424:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36428:	bl	11ffc <strcmp@plt>
   3642c:	mov	r3, r0
   36430:	cmp	r3, #0
   36434:	bne	36440 <__assert_fail@plt+0x23d54>
   36438:	ldr	r3, [fp, #-16]
   3643c:	b	365c8 <__assert_fail@plt+0x23edc>
   36440:	ldr	r3, [fp, #-16]
   36444:	add	r3, r3, #12
   36448:	str	r3, [fp, #-16]
   3644c:	ldr	r3, [fp, #-16]
   36450:	ldr	r3, [r3]
   36454:	cmp	r3, #0
   36458:	bne	36418 <__assert_fail@plt+0x23d2c>
   3645c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36460:	sub	r3, r3, #1
   36464:	ldr	r2, [fp, #-36]	; 0xffffffdc
   36468:	add	r3, r2, r3
   3646c:	mov	r2, #83	; 0x53
   36470:	strb	r2, [r3]
   36474:	movw	r3, #41236	; 0xa114
   36478:	movt	r3, #6
   3647c:	str	r3, [fp, #-16]
   36480:	b	364b8 <__assert_fail@plt+0x23dcc>
   36484:	ldr	r3, [fp, #-16]
   36488:	ldr	r3, [r3]
   3648c:	mov	r1, r3
   36490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36494:	bl	11ffc <strcmp@plt>
   36498:	mov	r3, r0
   3649c:	cmp	r3, #0
   364a0:	bne	364ac <__assert_fail@plt+0x23dc0>
   364a4:	ldr	r3, [fp, #-16]
   364a8:	b	365c8 <__assert_fail@plt+0x23edc>
   364ac:	ldr	r3, [fp, #-16]
   364b0:	add	r3, r3, #12
   364b4:	str	r3, [fp, #-16]
   364b8:	ldr	r3, [fp, #-16]
   364bc:	ldr	r3, [r3]
   364c0:	cmp	r3, #0
   364c4:	bne	36484 <__assert_fail@plt+0x23d98>
   364c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   364cc:	cmp	r3, #1
   364d0:	bne	36524 <__assert_fail@plt+0x23e38>
   364d4:	movw	r3, #42468	; 0xa5e4
   364d8:	movt	r3, #6
   364dc:	str	r3, [fp, #-16]
   364e0:	b	36514 <__assert_fail@plt+0x23e28>
   364e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   364e8:	ldrb	r2, [r3]
   364ec:	ldr	r3, [fp, #-16]
   364f0:	ldr	r3, [r3]
   364f4:	ldrb	r3, [r3]
   364f8:	cmp	r2, r3
   364fc:	bne	36508 <__assert_fail@plt+0x23e1c>
   36500:	ldr	r3, [fp, #-16]
   36504:	b	365c8 <__assert_fail@plt+0x23edc>
   36508:	ldr	r3, [fp, #-16]
   3650c:	add	r3, r3, #12
   36510:	str	r3, [fp, #-16]
   36514:	ldr	r3, [fp, #-16]
   36518:	ldr	r3, [r3]
   3651c:	cmp	r3, #0
   36520:	bne	364e4 <__assert_fail@plt+0x23df8>
   36524:	mov	r3, #0
   36528:	strb	r3, [fp, #-17]	; 0xffffffef
   3652c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36530:	str	r3, [fp, #-12]
   36534:	ldr	r3, [fp, #-12]
   36538:	str	r3, [fp, #-8]
   3653c:	b	36574 <__assert_fail@plt+0x23e88>
   36540:	ldr	r3, [fp, #-12]
   36544:	ldrb	r3, [r3]
   36548:	cmp	r3, #46	; 0x2e
   3654c:	bne	3655c <__assert_fail@plt+0x23e70>
   36550:	mov	r3, #1
   36554:	strb	r3, [fp, #-17]	; 0xffffffef
   36558:	b	36568 <__assert_fail@plt+0x23e7c>
   3655c:	ldr	r3, [fp, #-8]
   36560:	add	r3, r3, #1
   36564:	str	r3, [fp, #-8]
   36568:	ldr	r3, [fp, #-12]
   3656c:	add	r3, r3, #1
   36570:	str	r3, [fp, #-12]
   36574:	ldr	r3, [fp, #-12]
   36578:	ldrb	r2, [r3]
   3657c:	ldr	r3, [fp, #-8]
   36580:	strb	r2, [r3]
   36584:	ldr	r3, [fp, #-8]
   36588:	ldrb	r3, [r3]
   3658c:	cmp	r3, #0
   36590:	bne	36540 <__assert_fail@plt+0x23e54>
   36594:	ldrb	r3, [fp, #-17]	; 0xffffffef
   36598:	cmp	r3, #0
   3659c:	beq	365c4 <__assert_fail@plt+0x23ed8>
   365a0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   365a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   365a8:	bl	3604c <__assert_fail@plt+0x23960>
   365ac:	str	r0, [fp, #-16]
   365b0:	ldr	r3, [fp, #-16]
   365b4:	cmp	r3, #0
   365b8:	beq	365c4 <__assert_fail@plt+0x23ed8>
   365bc:	ldr	r3, [fp, #-16]
   365c0:	b	365c8 <__assert_fail@plt+0x23edc>
   365c4:	mov	r3, #0
   365c8:	mov	r0, r3
   365cc:	sub	sp, fp, #4
   365d0:	ldr	fp, [sp]
   365d4:	add	sp, sp, #4
   365d8:	pop	{pc}		; (ldr pc, [sp], #4)
   365dc:	str	fp, [sp, #-8]!
   365e0:	str	lr, [sp, #4]
   365e4:	add	fp, sp, #4
   365e8:	sub	sp, sp, #72	; 0x48
   365ec:	str	r0, [fp, #-72]	; 0xffffffb8
   365f0:	str	r1, [fp, #-76]	; 0xffffffb4
   365f4:	b	3660c <__assert_fail@plt+0x23f20>
   365f8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   365fc:	ldr	r3, [r3]
   36600:	add	r2, r3, #1
   36604:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36608:	str	r2, [r3]
   3660c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36610:	ldr	r3, [r3]
   36614:	ldrb	r3, [r3]
   36618:	strb	r3, [fp, #-5]
   3661c:	ldrb	r3, [fp, #-5]
   36620:	mov	r0, r3
   36624:	bl	60420 <__assert_fail@plt+0x4dd34>
   36628:	mov	r3, r0
   3662c:	cmp	r3, #0
   36630:	bne	365f8 <__assert_fail@plt+0x23f0c>
   36634:	ldrb	r3, [fp, #-5]
   36638:	mov	r0, r3
   3663c:	bl	602b0 <__assert_fail@plt+0x4dbc4>
   36640:	mov	r3, r0
   36644:	cmp	r3, #0
   36648:	bne	36664 <__assert_fail@plt+0x23f78>
   3664c:	ldrb	r3, [fp, #-5]
   36650:	cmp	r3, #45	; 0x2d
   36654:	beq	36664 <__assert_fail@plt+0x23f78>
   36658:	ldrb	r3, [fp, #-5]
   3665c:	cmp	r3, #43	; 0x2b
   36660:	bne	36a64 <__assert_fail@plt+0x24378>
   36664:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36668:	ldr	r3, [r3]
   3666c:	str	r3, [fp, #-12]
   36670:	ldrb	r3, [fp, #-5]
   36674:	cmp	r3, #45	; 0x2d
   36678:	beq	36688 <__assert_fail@plt+0x23f9c>
   3667c:	ldrb	r3, [fp, #-5]
   36680:	cmp	r3, #43	; 0x2b
   36684:	bne	36710 <__assert_fail@plt+0x24024>
   36688:	ldrb	r3, [fp, #-5]
   3668c:	cmp	r3, #45	; 0x2d
   36690:	bne	3669c <__assert_fail@plt+0x23fb0>
   36694:	mvn	r3, #0
   36698:	b	366a0 <__assert_fail@plt+0x23fb4>
   3669c:	mov	r3, #1
   366a0:	str	r3, [fp, #-16]
   366a4:	b	366ac <__assert_fail@plt+0x23fc0>
   366a8:	nop	{0}
   366ac:	ldr	r3, [fp, #-12]
   366b0:	add	r3, r3, #1
   366b4:	str	r3, [fp, #-12]
   366b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   366bc:	ldr	r2, [fp, #-12]
   366c0:	str	r2, [r3]
   366c4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   366c8:	ldr	r3, [r3]
   366cc:	ldrb	r3, [r3]
   366d0:	strb	r3, [fp, #-5]
   366d4:	ldrb	r3, [fp, #-5]
   366d8:	mov	r0, r3
   366dc:	bl	60420 <__assert_fail@plt+0x4dd34>
   366e0:	mov	r3, r0
   366e4:	cmp	r3, #0
   366e8:	bne	366a8 <__assert_fail@plt+0x23fbc>
   366ec:	ldrb	r3, [fp, #-5]
   366f0:	mov	r0, r3
   366f4:	bl	602b0 <__assert_fail@plt+0x4dbc4>
   366f8:	mov	r3, r0
   366fc:	eor	r3, r3, #1
   36700:	uxtb	r3, r3
   36704:	cmp	r3, #0
   36708:	beq	36718 <__assert_fail@plt+0x2402c>
   3670c:	b	36c2c <__assert_fail@plt+0x24540>
   36710:	mov	r3, #0
   36714:	str	r3, [fp, #-16]
   36718:	mov	r3, #0
   3671c:	str	r3, [fp, #-40]	; 0xffffffd8
   36720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36724:	mov	lr, #0
   36728:	mov	r2, #10
   3672c:	smull	r2, r3, r3, r2
   36730:	mov	r0, #0
   36734:	mov	r1, #0
   36738:	mov	r0, r3
   3673c:	asr	r1, r3, #31
   36740:	asr	ip, r2, #31
   36744:	cmp	ip, r0
   36748:	beq	36750 <__assert_fail@plt+0x24064>
   3674c:	mov	lr, #1
   36750:	mov	r3, r2
   36754:	str	r3, [fp, #-40]	; 0xffffffd8
   36758:	mov	r3, lr
   3675c:	and	r3, r3, #1
   36760:	uxtb	r3, r3
   36764:	cmp	r3, #0
   36768:	beq	36774 <__assert_fail@plt+0x24088>
   3676c:	mov	r3, #63	; 0x3f
   36770:	b	36c30 <__assert_fail@plt+0x24544>
   36774:	ldr	r2, [fp, #-40]	; 0xffffffd8
   36778:	ldr	r3, [fp, #-16]
   3677c:	cmp	r3, #0
   36780:	bge	36790 <__assert_fail@plt+0x240a4>
   36784:	ldrb	r3, [fp, #-5]
   36788:	rsb	r3, r3, #48	; 0x30
   3678c:	b	36798 <__assert_fail@plt+0x240ac>
   36790:	ldrb	r3, [fp, #-5]
   36794:	sub	r3, r3, #48	; 0x30
   36798:	mov	r1, #0
   3679c:	adds	r3, r2, r3
   367a0:	bvc	367a8 <__assert_fail@plt+0x240bc>
   367a4:	mov	r1, #1
   367a8:	str	r3, [fp, #-40]	; 0xffffffd8
   367ac:	mov	r3, r1
   367b0:	and	r3, r3, #1
   367b4:	uxtb	r3, r3
   367b8:	cmp	r3, #0
   367bc:	beq	367c8 <__assert_fail@plt+0x240dc>
   367c0:	mov	r3, #63	; 0x3f
   367c4:	b	36c30 <__assert_fail@plt+0x24544>
   367c8:	ldr	r3, [fp, #-12]
   367cc:	add	r3, r3, #1
   367d0:	str	r3, [fp, #-12]
   367d4:	ldr	r3, [fp, #-12]
   367d8:	ldrb	r3, [r3]
   367dc:	strb	r3, [fp, #-5]
   367e0:	ldrb	r3, [fp, #-5]
   367e4:	mov	r0, r3
   367e8:	bl	602b0 <__assert_fail@plt+0x4dbc4>
   367ec:	mov	r3, r0
   367f0:	cmp	r3, #0
   367f4:	bne	36720 <__assert_fail@plt+0x24034>
   367f8:	ldrb	r3, [fp, #-5]
   367fc:	cmp	r3, #46	; 0x2e
   36800:	beq	36810 <__assert_fail@plt+0x24124>
   36804:	ldrb	r3, [fp, #-5]
   36808:	cmp	r3, #44	; 0x2c
   3680c:	bne	369fc <__assert_fail@plt+0x24310>
   36810:	ldr	r3, [fp, #-12]
   36814:	add	r3, r3, #1
   36818:	ldrb	r3, [r3]
   3681c:	mov	r0, r3
   36820:	bl	602b0 <__assert_fail@plt+0x4dbc4>
   36824:	mov	r3, r0
   36828:	cmp	r3, #0
   3682c:	beq	369fc <__assert_fail@plt+0x24310>
   36830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36834:	str	r3, [fp, #-44]	; 0xffffffd4
   36838:	ldr	r3, [fp, #-12]
   3683c:	add	r3, r3, #1
   36840:	str	r3, [fp, #-12]
   36844:	ldr	r3, [fp, #-12]
   36848:	add	r2, r3, #1
   3684c:	str	r2, [fp, #-12]
   36850:	ldrb	r3, [r3]
   36854:	sub	r3, r3, #48	; 0x30
   36858:	str	r3, [fp, #-24]	; 0xffffffe8
   3685c:	mov	r3, #2
   36860:	str	r3, [fp, #-20]	; 0xffffffec
   36864:	b	368c8 <__assert_fail@plt+0x241dc>
   36868:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3686c:	mov	r3, r2
   36870:	lsl	r3, r3, #2
   36874:	add	r3, r3, r2
   36878:	lsl	r3, r3, #1
   3687c:	str	r3, [fp, #-24]	; 0xffffffe8
   36880:	ldr	r3, [fp, #-12]
   36884:	ldrb	r3, [r3]
   36888:	mov	r0, r3
   3688c:	bl	602b0 <__assert_fail@plt+0x4dbc4>
   36890:	mov	r3, r0
   36894:	cmp	r3, #0
   36898:	beq	368bc <__assert_fail@plt+0x241d0>
   3689c:	ldr	r3, [fp, #-12]
   368a0:	add	r2, r3, #1
   368a4:	str	r2, [fp, #-12]
   368a8:	ldrb	r3, [r3]
   368ac:	sub	r3, r3, #48	; 0x30
   368b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   368b4:	add	r3, r2, r3
   368b8:	str	r3, [fp, #-24]	; 0xffffffe8
   368bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   368c0:	add	r3, r3, #1
   368c4:	str	r3, [fp, #-20]	; 0xffffffec
   368c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   368cc:	cmp	r3, #9
   368d0:	ble	36868 <__assert_fail@plt+0x2417c>
   368d4:	ldr	r3, [fp, #-16]
   368d8:	cmp	r3, #0
   368dc:	bge	3693c <__assert_fail@plt+0x24250>
   368e0:	b	36910 <__assert_fail@plt+0x24224>
   368e4:	ldr	r3, [fp, #-12]
   368e8:	ldrb	r3, [r3]
   368ec:	cmp	r3, #48	; 0x30
   368f0:	beq	36904 <__assert_fail@plt+0x24218>
   368f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   368f8:	add	r3, r3, #1
   368fc:	str	r3, [fp, #-24]	; 0xffffffe8
   36900:	b	3692c <__assert_fail@plt+0x24240>
   36904:	ldr	r3, [fp, #-12]
   36908:	add	r3, r3, #1
   3690c:	str	r3, [fp, #-12]
   36910:	ldr	r3, [fp, #-12]
   36914:	ldrb	r3, [r3]
   36918:	mov	r0, r3
   3691c:	bl	602b0 <__assert_fail@plt+0x4dbc4>
   36920:	mov	r3, r0
   36924:	cmp	r3, #0
   36928:	bne	368e4 <__assert_fail@plt+0x241f8>
   3692c:	b	3693c <__assert_fail@plt+0x24250>
   36930:	ldr	r3, [fp, #-12]
   36934:	add	r3, r3, #1
   36938:	str	r3, [fp, #-12]
   3693c:	ldr	r3, [fp, #-12]
   36940:	ldrb	r3, [r3]
   36944:	mov	r0, r3
   36948:	bl	602b0 <__assert_fail@plt+0x4dbc4>
   3694c:	mov	r3, r0
   36950:	cmp	r3, #0
   36954:	bne	36930 <__assert_fail@plt+0x24244>
   36958:	ldr	r3, [fp, #-16]
   3695c:	cmp	r3, #0
   36960:	bge	369bc <__assert_fail@plt+0x242d0>
   36964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36968:	cmp	r3, #0
   3696c:	beq	369bc <__assert_fail@plt+0x242d0>
   36970:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36974:	mov	r1, #0
   36978:	mov	r2, #1
   3697c:	subs	r3, r3, r2
   36980:	bvc	36988 <__assert_fail@plt+0x2429c>
   36984:	mov	r1, #1
   36988:	str	r3, [fp, #-44]	; 0xffffffd4
   3698c:	mov	r3, r1
   36990:	and	r3, r3, #1
   36994:	uxtb	r3, r3
   36998:	cmp	r3, #0
   3699c:	beq	369a8 <__assert_fail@plt+0x242bc>
   369a0:	mov	r3, #63	; 0x3f
   369a4:	b	36c30 <__assert_fail@plt+0x24544>
   369a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   369ac:	mov	r3, #51712	; 0xca00
   369b0:	movt	r3, #15258	; 0x3b9a
   369b4:	sub	r3, r3, r2
   369b8:	str	r3, [fp, #-24]	; 0xffffffe8
   369bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   369c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   369c4:	str	r2, [r3]
   369c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   369cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   369d0:	str	r2, [r3, #4]
   369d4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   369d8:	ldr	r2, [fp, #-12]
   369dc:	str	r2, [r3]
   369e0:	ldr	r3, [fp, #-16]
   369e4:	cmp	r3, #0
   369e8:	beq	369f4 <__assert_fail@plt+0x24308>
   369ec:	mov	r3, #276	; 0x114
   369f0:	b	36c30 <__assert_fail@plt+0x24544>
   369f4:	movw	r3, #277	; 0x115
   369f8:	b	36c30 <__assert_fail@plt+0x24544>
   369fc:	ldr	r3, [fp, #-16]
   36a00:	lsr	r3, r3, #31
   36a04:	uxtb	r2, r3
   36a08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   36a0c:	strb	r2, [r3]
   36a10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36a14:	mov	r2, r3
   36a18:	asr	r3, r2, #31
   36a1c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   36a20:	strd	r2, [r1, #8]
   36a24:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36a28:	ldr	r3, [r3]
   36a2c:	ldr	r2, [fp, #-12]
   36a30:	sub	r2, r2, r3
   36a34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   36a38:	str	r2, [r3, #16]
   36a3c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36a40:	ldr	r2, [fp, #-12]
   36a44:	str	r2, [r3]
   36a48:	ldr	r3, [fp, #-16]
   36a4c:	cmp	r3, #0
   36a50:	beq	36a5c <__assert_fail@plt+0x24370>
   36a54:	movw	r3, #274	; 0x112
   36a58:	b	36c30 <__assert_fail@plt+0x24544>
   36a5c:	movw	r3, #275	; 0x113
   36a60:	b	36c30 <__assert_fail@plt+0x24544>
   36a64:	ldrb	r3, [fp, #-5]
   36a68:	mov	r0, r3
   36a6c:	bl	60188 <__assert_fail@plt+0x4da9c>
   36a70:	mov	r3, r0
   36a74:	cmp	r3, #0
   36a78:	beq	36b80 <__assert_fail@plt+0x24494>
   36a7c:	sub	r3, fp, #64	; 0x40
   36a80:	str	r3, [fp, #-28]	; 0xffffffe4
   36a84:	sub	r3, fp, #64	; 0x40
   36a88:	add	r3, r3, #19
   36a8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36a90:	cmp	r2, r3
   36a94:	bcs	36aac <__assert_fail@plt+0x243c0>
   36a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36a9c:	add	r2, r3, #1
   36aa0:	str	r2, [fp, #-28]	; 0xffffffe4
   36aa4:	ldrb	r2, [fp, #-5]
   36aa8:	strb	r2, [r3]
   36aac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36ab0:	ldr	r3, [r3]
   36ab4:	add	r2, r3, #1
   36ab8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36abc:	str	r2, [r3]
   36ac0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36ac4:	ldr	r3, [r3]
   36ac8:	ldrb	r3, [r3]
   36acc:	strb	r3, [fp, #-5]
   36ad0:	ldrb	r3, [fp, #-5]
   36ad4:	mov	r0, r3
   36ad8:	bl	60188 <__assert_fail@plt+0x4da9c>
   36adc:	mov	r3, r0
   36ae0:	cmp	r3, #0
   36ae4:	bne	36a84 <__assert_fail@plt+0x24398>
   36ae8:	ldrb	r3, [fp, #-5]
   36aec:	cmp	r3, #46	; 0x2e
   36af0:	beq	36a84 <__assert_fail@plt+0x24398>
   36af4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36af8:	mov	r2, #0
   36afc:	strb	r2, [r3]
   36b00:	sub	r3, fp, #64	; 0x40
   36b04:	mov	r1, r3
   36b08:	ldr	r0, [fp, #-76]	; 0xffffffb4
   36b0c:	bl	36178 <__assert_fail@plt+0x23a8c>
   36b10:	str	r0, [fp, #-36]	; 0xffffffdc
   36b14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36b18:	cmp	r3, #0
   36b1c:	bne	36b5c <__assert_fail@plt+0x24470>
   36b20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   36b24:	bl	31c48 <__assert_fail@plt+0x1f55c>
   36b28:	mov	r3, r0
   36b2c:	cmp	r3, #0
   36b30:	beq	36b54 <__assert_fail@plt+0x24468>
   36b34:	movw	r0, #42868	; 0xa774
   36b38:	movt	r0, #6
   36b3c:	bl	12398 <gettext@plt>
   36b40:	mov	r2, r0
   36b44:	sub	r3, fp, #64	; 0x40
   36b48:	mov	r1, r3
   36b4c:	mov	r0, r2
   36b50:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   36b54:	mov	r3, #63	; 0x3f
   36b58:	b	36c30 <__assert_fail@plt+0x24544>
   36b5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36b60:	ldr	r3, [r3, #8]
   36b64:	mov	r2, r3
   36b68:	asr	r3, r2, #31
   36b6c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   36b70:	strd	r2, [r1]
   36b74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36b78:	ldr	r3, [r3, #4]
   36b7c:	b	36c30 <__assert_fail@plt+0x24544>
   36b80:	ldrb	r3, [fp, #-5]
   36b84:	cmp	r3, #40	; 0x28
   36b88:	beq	36bb4 <__assert_fail@plt+0x244c8>
   36b8c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36b90:	ldr	r3, [r3]
   36b94:	add	r1, r3, #1
   36b98:	ldr	r2, [fp, #-76]	; 0xffffffb4
   36b9c:	str	r1, [r2]
   36ba0:	ldrb	r3, [r3]
   36ba4:	mov	r0, r3
   36ba8:	bl	31bac <__assert_fail@plt+0x1f4c0>
   36bac:	mov	r3, r0
   36bb0:	b	36c30 <__assert_fail@plt+0x24544>
   36bb4:	mov	r3, #0
   36bb8:	str	r3, [fp, #-32]	; 0xffffffe0
   36bbc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   36bc0:	ldr	r3, [r3]
   36bc4:	add	r1, r3, #1
   36bc8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   36bcc:	str	r1, [r2]
   36bd0:	ldrb	r3, [r3]
   36bd4:	strb	r3, [fp, #-5]
   36bd8:	ldrb	r3, [fp, #-5]
   36bdc:	cmp	r3, #0
   36be0:	bne	36bec <__assert_fail@plt+0x24500>
   36be4:	ldrb	r3, [fp, #-5]
   36be8:	b	36c30 <__assert_fail@plt+0x24544>
   36bec:	ldrb	r3, [fp, #-5]
   36bf0:	cmp	r3, #40	; 0x28
   36bf4:	bne	36c08 <__assert_fail@plt+0x2451c>
   36bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36bfc:	add	r3, r3, #1
   36c00:	str	r3, [fp, #-32]	; 0xffffffe0
   36c04:	b	36c20 <__assert_fail@plt+0x24534>
   36c08:	ldrb	r3, [fp, #-5]
   36c0c:	cmp	r3, #41	; 0x29
   36c10:	bne	36c20 <__assert_fail@plt+0x24534>
   36c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36c18:	sub	r3, r3, #1
   36c1c:	str	r3, [fp, #-32]	; 0xffffffe0
   36c20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36c24:	cmp	r3, #0
   36c28:	bne	36bbc <__assert_fail@plt+0x244d0>
   36c2c:	b	365f4 <__assert_fail@plt+0x23f08>
   36c30:	mov	r0, r3
   36c34:	sub	sp, fp, #4
   36c38:	ldr	fp, [sp]
   36c3c:	add	sp, sp, #4
   36c40:	pop	{pc}		; (ldr pc, [sp], #4)
   36c44:	push	{fp}		; (str fp, [sp, #-4]!)
   36c48:	add	fp, sp, #0
   36c4c:	sub	sp, sp, #12
   36c50:	str	r0, [fp, #-8]
   36c54:	str	r1, [fp, #-12]
   36c58:	mov	r3, #0
   36c5c:	mov	r0, r3
   36c60:	add	sp, fp, #0
   36c64:	pop	{fp}		; (ldr fp, [sp], #4)
   36c68:	bx	lr
   36c6c:	push	{fp}		; (str fp, [sp, #-4]!)
   36c70:	add	fp, sp, #0
   36c74:	sub	sp, sp, #12
   36c78:	str	r0, [fp, #-8]
   36c7c:	str	r1, [fp, #-12]
   36c80:	ldr	r3, [fp, #-12]
   36c84:	ldr	r3, [r3, #24]
   36c88:	cmp	r3, #0
   36c8c:	bge	36c98 <__assert_fail@plt+0x245ac>
   36c90:	mov	r3, #0
   36c94:	b	36d34 <__assert_fail@plt+0x24648>
   36c98:	ldr	r3, [fp, #-8]
   36c9c:	ldr	r2, [r3]
   36ca0:	ldr	r3, [fp, #-12]
   36ca4:	ldr	r3, [r3]
   36ca8:	eor	r2, r2, r3
   36cac:	ldr	r3, [fp, #-8]
   36cb0:	ldr	r1, [r3, #4]
   36cb4:	ldr	r3, [fp, #-12]
   36cb8:	ldr	r3, [r3, #4]
   36cbc:	eor	r3, r3, r1
   36cc0:	orr	r2, r2, r3
   36cc4:	ldr	r3, [fp, #-8]
   36cc8:	ldr	r1, [r3, #8]
   36ccc:	ldr	r3, [fp, #-12]
   36cd0:	ldr	r3, [r3, #8]
   36cd4:	eor	r3, r3, r1
   36cd8:	orr	r2, r2, r3
   36cdc:	ldr	r3, [fp, #-8]
   36ce0:	ldr	r1, [r3, #12]
   36ce4:	ldr	r3, [fp, #-12]
   36ce8:	ldr	r3, [r3, #12]
   36cec:	eor	r3, r3, r1
   36cf0:	orr	r2, r2, r3
   36cf4:	ldr	r3, [fp, #-8]
   36cf8:	ldr	r1, [r3, #16]
   36cfc:	ldr	r3, [fp, #-12]
   36d00:	ldr	r3, [r3, #16]
   36d04:	eor	r3, r3, r1
   36d08:	orr	r2, r2, r3
   36d0c:	ldr	r3, [fp, #-8]
   36d10:	ldr	r1, [r3, #20]
   36d14:	ldr	r3, [fp, #-12]
   36d18:	ldr	r3, [r3, #20]
   36d1c:	eor	r3, r3, r1
   36d20:	orr	r3, r2, r3
   36d24:	cmp	r3, #0
   36d28:	moveq	r3, #1
   36d2c:	movne	r3, #0
   36d30:	uxtb	r3, r3
   36d34:	mov	r0, r3
   36d38:	add	sp, fp, #0
   36d3c:	pop	{fp}		; (ldr fp, [sp], #4)
   36d40:	bx	lr
   36d44:	strd	r4, [sp, #-16]!
   36d48:	str	fp, [sp, #8]
   36d4c:	str	lr, [sp, #12]
   36d50:	add	fp, sp, #12
   36d54:	sub	sp, sp, #64	; 0x40
   36d58:	str	r0, [fp, #-56]	; 0xffffffc8
   36d5c:	str	r1, [fp, #-60]	; 0xffffffc4
   36d60:	str	r2, [fp, #-64]	; 0xffffffc0
   36d64:	str	r3, [fp, #-68]	; 0xffffffbc
   36d68:	ldr	r1, [fp, #-68]	; 0xffffffbc
   36d6c:	mov	r3, #0
   36d70:	str	r3, [sp, #4]
   36d74:	mov	r3, #0
   36d78:	str	r3, [sp]
   36d7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36d80:	movw	r2, #42896	; 0xa790
   36d84:	movt	r2, #6
   36d88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   36d8c:	bl	61950 <__assert_fail@plt+0x4f264>
   36d90:	mov	r3, r0
   36d94:	str	r3, [fp, #-20]	; 0xffffffec
   36d98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36d9c:	cmp	r3, #0
   36da0:	beq	36e50 <__assert_fail@plt+0x24764>
   36da4:	ldr	r2, [fp, #-20]	; 0xffffffec
   36da8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   36dac:	cmp	r2, r3
   36db0:	bge	36e50 <__assert_fail@plt+0x24764>
   36db4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36db8:	ldr	r3, [r3, #176]	; 0xb0
   36dbc:	cmp	r3, #0
   36dc0:	beq	36e50 <__assert_fail@plt+0x24764>
   36dc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36dc8:	ldr	r3, [r3, #24]
   36dcc:	str	r3, [fp, #-16]
   36dd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36dd4:	ldr	r3, [r3, #164]	; 0xa4
   36dd8:	cmp	r3, #0
   36ddc:	beq	36e0c <__assert_fail@plt+0x24720>
   36de0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36de4:	ldr	r3, [r3, #176]	; 0xb0
   36de8:	cmp	r3, #0
   36dec:	bne	36e0c <__assert_fail@plt+0x24720>
   36df0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36df4:	ldr	r3, [r3, #20]
   36df8:	cmp	r3, #0
   36dfc:	ble	36e0c <__assert_fail@plt+0x24720>
   36e00:	ldr	r3, [fp, #-16]
   36e04:	add	r3, r3, #3600	; 0xe10
   36e08:	str	r3, [fp, #-16]
   36e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36e10:	ldr	r2, [fp, #-64]	; 0xffffffc0
   36e14:	add	r4, r2, r3
   36e18:	ldr	r2, [fp, #-68]	; 0xffffffbc
   36e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36e20:	sub	r3, r2, r3
   36e24:	mov	r5, r3
   36e28:	sub	r3, fp, #48	; 0x30
   36e2c:	mov	r1, r3
   36e30:	ldr	r0, [fp, #-16]
   36e34:	bl	32560 <__assert_fail@plt+0x1fe74>
   36e38:	mov	r3, r0
   36e3c:	movw	r2, #42924	; 0xa7ac
   36e40:	movt	r2, #6
   36e44:	mov	r1, r5
   36e48:	mov	r0, r4
   36e4c:	bl	1241c <snprintf@plt>
   36e50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   36e54:	mov	r0, r3
   36e58:	sub	sp, fp, #12
   36e5c:	ldrd	r4, [sp]
   36e60:	ldr	fp, [sp, #8]
   36e64:	add	sp, sp, #12
   36e68:	pop	{pc}		; (ldr pc, [sp], #4)
   36e6c:	str	r4, [sp, #-12]!
   36e70:	str	fp, [sp, #4]
   36e74:	str	lr, [sp, #8]
   36e78:	add	fp, sp, #8
   36e7c:	sub	sp, sp, #44	; 0x2c
   36e80:	str	r0, [fp, #-32]	; 0xffffffe0
   36e84:	str	r1, [fp, #-36]	; 0xffffffdc
   36e88:	str	r2, [fp, #-40]	; 0xffffffd8
   36e8c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   36e90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36e94:	ldr	r3, [r3, #20]
   36e98:	sub	r2, fp, #28
   36e9c:	mov	r1, r2
   36ea0:	mov	r0, r3
   36ea4:	bl	35dbc <__assert_fail@plt+0x236d0>
   36ea8:	mov	r1, r0
   36eac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36eb0:	ldr	r3, [r3, #16]
   36eb4:	add	r3, r3, #1
   36eb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36ebc:	ldr	r2, [r2, #12]
   36ec0:	str	r2, [sp, #4]
   36ec4:	str	r3, [sp]
   36ec8:	mov	r3, r1
   36ecc:	movw	r2, #42932	; 0xa7b4
   36ed0:	movt	r2, #6
   36ed4:	mov	r1, r4
   36ed8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   36edc:	bl	1241c <snprintf@plt>
   36ee0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36ee4:	mov	r0, r3
   36ee8:	sub	sp, fp, #8
   36eec:	ldr	r4, [sp]
   36ef0:	ldr	fp, [sp, #4]
   36ef4:	add	sp, sp, #8
   36ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   36efc:	str	fp, [sp, #-8]!
   36f00:	str	lr, [sp, #4]
   36f04:	add	fp, sp, #4
   36f08:	sub	sp, sp, #24
   36f0c:	str	r0, [fp, #-8]
   36f10:	str	r1, [fp, #-12]
   36f14:	str	r2, [fp, #-16]
   36f18:	ldr	r1, [fp, #-16]
   36f1c:	ldr	r3, [fp, #-8]
   36f20:	ldr	r0, [r3, #8]
   36f24:	ldr	r3, [fp, #-8]
   36f28:	ldr	r3, [r3, #4]
   36f2c:	ldr	r2, [fp, #-8]
   36f30:	ldr	r2, [r2]
   36f34:	str	r2, [sp, #4]
   36f38:	str	r3, [sp]
   36f3c:	mov	r3, r0
   36f40:	movw	r2, #42956	; 0xa7cc
   36f44:	movt	r2, #6
   36f48:	ldr	r0, [fp, #-12]
   36f4c:	bl	1241c <snprintf@plt>
   36f50:	ldr	r3, [fp, #-12]
   36f54:	mov	r0, r3
   36f58:	sub	sp, fp, #4
   36f5c:	ldr	fp, [sp]
   36f60:	add	sp, sp, #4
   36f64:	pop	{pc}		; (ldr pc, [sp], #4)
   36f68:	str	r4, [sp, #-12]!
   36f6c:	str	fp, [sp, #4]
   36f70:	str	lr, [sp, #8]
   36f74:	add	fp, sp, #8
   36f78:	sub	sp, sp, #156	; 0x9c
   36f7c:	str	r0, [fp, #-128]	; 0xffffff80
   36f80:	str	r1, [fp, #-132]	; 0xffffff7c
   36f84:	str	r2, [fp, #-136]	; 0xffffff78
   36f88:	strb	r3, [fp, #-137]	; 0xffffff77
   36f8c:	ldr	r3, [fp, #-128]	; 0xffffff80
   36f90:	ldr	r2, [r3]
   36f94:	ldr	r3, [fp, #-132]	; 0xffffff7c
   36f98:	ldr	r3, [r3]
   36f9c:	cmp	r2, r3
   36fa0:	moveq	r3, #1
   36fa4:	movne	r3, #0
   36fa8:	strb	r3, [fp, #-17]	; 0xffffffef
   36fac:	ldr	r3, [fp, #-128]	; 0xffffff80
   36fb0:	ldr	r2, [r3, #4]
   36fb4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   36fb8:	ldr	r3, [r3, #4]
   36fbc:	cmp	r2, r3
   36fc0:	moveq	r3, #1
   36fc4:	movne	r3, #0
   36fc8:	strb	r3, [fp, #-18]	; 0xffffffee
   36fcc:	ldr	r3, [fp, #-128]	; 0xffffff80
   36fd0:	ldr	r2, [r3, #8]
   36fd4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   36fd8:	ldr	r3, [r3, #8]
   36fdc:	cmp	r2, r3
   36fe0:	moveq	r3, #1
   36fe4:	movne	r3, #0
   36fe8:	strb	r3, [fp, #-19]	; 0xffffffed
   36fec:	ldr	r3, [fp, #-128]	; 0xffffff80
   36ff0:	ldr	r2, [r3, #12]
   36ff4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   36ff8:	ldr	r3, [r3, #12]
   36ffc:	cmp	r2, r3
   37000:	moveq	r3, #1
   37004:	movne	r3, #0
   37008:	strb	r3, [fp, #-20]	; 0xffffffec
   3700c:	ldr	r3, [fp, #-128]	; 0xffffff80
   37010:	ldr	r2, [r3, #16]
   37014:	ldr	r3, [fp, #-132]	; 0xffffff7c
   37018:	ldr	r3, [r3, #16]
   3701c:	cmp	r2, r3
   37020:	moveq	r3, #1
   37024:	movne	r3, #0
   37028:	strb	r3, [fp, #-21]	; 0xffffffeb
   3702c:	ldr	r3, [fp, #-128]	; 0xffffff80
   37030:	ldr	r2, [r3, #20]
   37034:	ldr	r3, [fp, #-132]	; 0xffffff7c
   37038:	ldr	r3, [r3, #20]
   3703c:	cmp	r2, r3
   37040:	moveq	r3, #1
   37044:	movne	r3, #0
   37048:	strb	r3, [fp, #-22]	; 0xffffffea
   3704c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   37050:	cmp	r3, #0
   37054:	beq	370a4 <__assert_fail@plt+0x249b8>
   37058:	ldrb	r3, [fp, #-18]	; 0xffffffee
   3705c:	cmp	r3, #0
   37060:	beq	370a4 <__assert_fail@plt+0x249b8>
   37064:	ldrb	r3, [fp, #-19]	; 0xffffffed
   37068:	eor	r3, r3, #1
   3706c:	uxtb	r3, r3
   37070:	cmp	r3, #0
   37074:	beq	370a4 <__assert_fail@plt+0x249b8>
   37078:	ldrb	r3, [fp, #-20]	; 0xffffffec
   3707c:	cmp	r3, #0
   37080:	beq	370a4 <__assert_fail@plt+0x249b8>
   37084:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   37088:	cmp	r3, #0
   3708c:	beq	370a4 <__assert_fail@plt+0x249b8>
   37090:	ldrb	r3, [fp, #-22]	; 0xffffffea
   37094:	cmp	r3, #0
   37098:	beq	370a4 <__assert_fail@plt+0x249b8>
   3709c:	mov	r3, #1
   370a0:	b	370a8 <__assert_fail@plt+0x249bc>
   370a4:	mov	r3, #0
   370a8:	strb	r3, [fp, #-23]	; 0xffffffe9
   370ac:	ldrb	r3, [fp, #-23]	; 0xffffffe9
   370b0:	and	r3, r3, #1
   370b4:	strb	r3, [fp, #-23]	; 0xffffffe9
   370b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   370bc:	bl	31c48 <__assert_fail@plt+0x1f55c>
   370c0:	mov	r3, r0
   370c4:	eor	r3, r3, #1
   370c8:	uxtb	r3, r3
   370cc:	cmp	r3, #0
   370d0:	bne	373a0 <__assert_fail@plt+0x24cb4>
   370d4:	movw	r0, #42972	; 0xa7dc
   370d8:	movt	r0, #6
   370dc:	bl	12398 <gettext@plt>
   370e0:	mov	r3, r0
   370e4:	mov	r0, r3
   370e8:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   370ec:	movw	r0, #43008	; 0xa800
   370f0:	movt	r0, #6
   370f4:	bl	12398 <gettext@plt>
   370f8:	mov	r4, r0
   370fc:	sub	r2, fp, #124	; 0x7c
   37100:	mov	r3, #100	; 0x64
   37104:	ldr	r1, [fp, #-136]	; 0xffffff78
   37108:	ldr	r0, [fp, #-128]	; 0xffffff80
   3710c:	bl	36d44 <__assert_fail@plt+0x24658>
   37110:	mov	r3, r0
   37114:	mov	r1, r3
   37118:	mov	r0, r4
   3711c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37120:	movw	r0, #43040	; 0xa820
   37124:	movt	r0, #6
   37128:	bl	12398 <gettext@plt>
   3712c:	mov	r4, r0
   37130:	sub	r2, fp, #124	; 0x7c
   37134:	mov	r3, #100	; 0x64
   37138:	ldr	r1, [fp, #-136]	; 0xffffff78
   3713c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   37140:	bl	36d44 <__assert_fail@plt+0x24658>
   37144:	mov	r3, r0
   37148:	mov	r1, r3
   3714c:	mov	r0, r4
   37150:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37154:	ldrb	r3, [fp, #-22]	; 0xffffffea
   37158:	cmp	r3, #0
   3715c:	beq	3716c <__assert_fail@plt+0x24a80>
   37160:	movw	lr, #38660	; 0x9704
   37164:	movt	lr, #6
   37168:	b	37174 <__assert_fail@plt+0x24a88>
   3716c:	movw	lr, #43072	; 0xa840
   37170:	movt	lr, #6
   37174:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   37178:	cmp	r3, #0
   3717c:	beq	3718c <__assert_fail@plt+0x24aa0>
   37180:	movw	r3, #38660	; 0x9704
   37184:	movt	r3, #6
   37188:	b	37194 <__assert_fail@plt+0x24aa8>
   3718c:	movw	r3, #43080	; 0xa848
   37190:	movt	r3, #6
   37194:	ldrb	r2, [fp, #-20]	; 0xffffffec
   37198:	cmp	r2, #0
   3719c:	beq	371ac <__assert_fail@plt+0x24ac0>
   371a0:	movw	r2, #38660	; 0x9704
   371a4:	movt	r2, #6
   371a8:	b	371b4 <__assert_fail@plt+0x24ac8>
   371ac:	movw	r2, #43080	; 0xa848
   371b0:	movt	r2, #6
   371b4:	ldrb	r1, [fp, #-19]	; 0xffffffed
   371b8:	cmp	r1, #0
   371bc:	beq	371cc <__assert_fail@plt+0x24ae0>
   371c0:	movw	r1, #38660	; 0x9704
   371c4:	movt	r1, #6
   371c8:	b	371d4 <__assert_fail@plt+0x24ae8>
   371cc:	movw	r1, #43080	; 0xa848
   371d0:	movt	r1, #6
   371d4:	ldrb	r0, [fp, #-18]	; 0xffffffee
   371d8:	cmp	r0, #0
   371dc:	beq	371ec <__assert_fail@plt+0x24b00>
   371e0:	movw	r0, #38660	; 0x9704
   371e4:	movt	r0, #6
   371e8:	b	371f4 <__assert_fail@plt+0x24b08>
   371ec:	movw	r0, #43080	; 0xa848
   371f0:	movt	r0, #6
   371f4:	ldrb	ip, [fp, #-17]	; 0xffffffef
   371f8:	cmp	ip, #0
   371fc:	beq	3720c <__assert_fail@plt+0x24b20>
   37200:	movw	ip, #38660	; 0x9704
   37204:	movt	ip, #6
   37208:	b	37214 <__assert_fail@plt+0x24b28>
   3720c:	movw	ip, #43080	; 0xa848
   37210:	movt	ip, #6
   37214:	sub	r4, fp, #124	; 0x7c
   37218:	str	ip, [sp, #16]
   3721c:	str	r0, [sp, #12]
   37220:	str	r1, [sp, #8]
   37224:	str	r2, [sp, #4]
   37228:	str	r3, [sp]
   3722c:	mov	r3, lr
   37230:	movw	r2, #43084	; 0xa84c
   37234:	movt	r2, #6
   37238:	mov	r1, #100	; 0x64
   3723c:	mov	r0, r4
   37240:	bl	1241c <snprintf@plt>
   37244:	str	r0, [fp, #-16]
   37248:	ldr	r3, [fp, #-16]
   3724c:	cmp	r3, #0
   37250:	blt	372b4 <__assert_fail@plt+0x24bc8>
   37254:	ldr	r3, [fp, #-16]
   37258:	cmp	r3, #99	; 0x63
   3725c:	bls	37278 <__assert_fail@plt+0x24b8c>
   37260:	mov	r3, #99	; 0x63
   37264:	str	r3, [fp, #-16]
   37268:	b	37278 <__assert_fail@plt+0x24b8c>
   3726c:	ldr	r3, [fp, #-16]
   37270:	sub	r3, r3, #1
   37274:	str	r3, [fp, #-16]
   37278:	ldr	r3, [fp, #-16]
   3727c:	cmp	r3, #0
   37280:	ble	372a0 <__assert_fail@plt+0x24bb4>
   37284:	ldr	r3, [fp, #-16]
   37288:	sub	r3, r3, #1
   3728c:	sub	r2, fp, #12
   37290:	add	r3, r2, r3
   37294:	ldrb	r3, [r3, #-112]	; 0xffffff90
   37298:	cmp	r3, #32
   3729c:	beq	3726c <__assert_fail@plt+0x24b80>
   372a0:	sub	r2, fp, #124	; 0x7c
   372a4:	ldr	r3, [fp, #-16]
   372a8:	add	r3, r2, r3
   372ac:	mov	r2, #0
   372b0:	strb	r2, [r3]
   372b4:	sub	r3, fp, #124	; 0x7c
   372b8:	mov	r1, r3
   372bc:	movw	r0, #43144	; 0xa888
   372c0:	movt	r0, #6
   372c4:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   372c8:	movw	r0, #43148	; 0xa88c
   372cc:	movt	r0, #6
   372d0:	bl	12398 <gettext@plt>
   372d4:	mov	r3, r0
   372d8:	mov	r0, r3
   372dc:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   372e0:	ldrb	r3, [fp, #-23]	; 0xffffffe9
   372e4:	cmp	r3, #0
   372e8:	beq	37304 <__assert_fail@plt+0x24c18>
   372ec:	movw	r0, #43172	; 0xa8a4
   372f0:	movt	r0, #6
   372f4:	bl	12398 <gettext@plt>
   372f8:	mov	r3, r0
   372fc:	mov	r0, r3
   37300:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37304:	ldrb	r3, [fp, #-20]	; 0xffffffec
   37308:	eor	r3, r3, #1
   3730c:	uxtb	r3, r3
   37310:	cmp	r3, #0
   37314:	beq	37344 <__assert_fail@plt+0x24c58>
   37318:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3731c:	eor	r3, r3, #1
   37320:	uxtb	r3, r3
   37324:	cmp	r3, #0
   37328:	beq	37344 <__assert_fail@plt+0x24c58>
   3732c:	movw	r0, #43224	; 0xa8d8
   37330:	movt	r0, #6
   37334:	bl	12398 <gettext@plt>
   37338:	mov	r3, r0
   3733c:	mov	r0, r3
   37340:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37344:	movw	r0, #43264	; 0xa900
   37348:	movt	r0, #6
   3734c:	bl	12398 <gettext@plt>
   37350:	mov	r3, r0
   37354:	mov	r0, r3
   37358:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   3735c:	ldrb	r3, [fp, #-137]	; 0xffffff77
   37360:	cmp	r3, #0
   37364:	beq	3737c <__assert_fail@plt+0x24c90>
   37368:	movw	r0, #43300	; 0xa924
   3736c:	movt	r0, #6
   37370:	bl	12398 <gettext@plt>
   37374:	mov	r3, r0
   37378:	b	3738c <__assert_fail@plt+0x24ca0>
   3737c:	movw	r0, #43320	; 0xa938
   37380:	movt	r0, #6
   37384:	bl	12398 <gettext@plt>
   37388:	mov	r3, r0
   3738c:	mov	r1, r3
   37390:	movw	r0, #43340	; 0xa94c
   37394:	movt	r0, #6
   37398:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   3739c:	b	373a4 <__assert_fail@plt+0x24cb8>
   373a0:	nop	{0}
   373a4:	sub	sp, fp, #8
   373a8:	ldr	r4, [sp]
   373ac:	ldr	fp, [sp, #4]
   373b0:	add	sp, sp, #8
   373b4:	pop	{pc}		; (ldr pc, [sp], #4)
   373b8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   373bc:	strd	r6, [sp, #8]
   373c0:	strd	r8, [sp, #16]
   373c4:	str	fp, [sp, #24]
   373c8:	str	lr, [sp, #28]
   373cc:	add	fp, sp, #28
   373d0:	sub	sp, sp, #1264	; 0x4f0
   373d4:	sub	sp, sp, #8
   373d8:	str	r0, [fp, #-1112]	; 0xfffffba8
   373dc:	str	r1, [fp, #-1116]	; 0xfffffba4
   373e0:	str	r2, [fp, #-1120]	; 0xfffffba0
   373e4:	str	r3, [fp, #-1124]	; 0xfffffb9c
   373e8:	mov	r3, #0
   373ec:	strb	r3, [fp, #-29]	; 0xffffffe3
   373f0:	ldr	r0, [fp, #-1116]	; 0xfffffba4
   373f4:	bl	123bc <strlen@plt>
   373f8:	mov	r2, r0
   373fc:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   37400:	add	r3, r3, r2
   37404:	str	r3, [fp, #-72]	; 0xffffffb8
   37408:	mov	r3, #0
   3740c:	str	r3, [fp, #-36]	; 0xffffffdc
   37410:	ldr	r3, [fp, #-1120]	; 0xfffffba0
   37414:	cmp	r3, #0
   37418:	bne	37430 <__assert_fail@plt+0x24d44>
   3741c:	sub	r3, fp, #492	; 0x1ec
   37420:	mov	r0, r3
   37424:	bl	60ea4 <__assert_fail@plt+0x4e7b8>
   37428:	sub	r3, fp, #492	; 0x1ec
   3742c:	str	r3, [fp, #-1120]	; 0xfffffba0
   37430:	ldr	r3, [fp, #-1120]	; 0xfffffba0
   37434:	ldr	r3, [r3]
   37438:	str	r3, [fp, #-40]	; 0xffffffd8
   3743c:	ldr	r3, [fp, #-1120]	; 0xfffffba0
   37440:	ldr	r3, [r3, #4]
   37444:	str	r3, [fp, #-76]	; 0xffffffb4
   37448:	b	37458 <__assert_fail@plt+0x24d6c>
   3744c:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   37450:	add	r3, r3, #1
   37454:	str	r3, [fp, #-1116]	; 0xfffffba4
   37458:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   3745c:	ldrb	r3, [r3]
   37460:	strb	r3, [fp, #-77]	; 0xffffffb3
   37464:	ldrb	r3, [fp, #-77]	; 0xffffffb3
   37468:	mov	r0, r3
   3746c:	bl	60420 <__assert_fail@plt+0x4dd34>
   37470:	mov	r3, r0
   37474:	cmp	r3, #0
   37478:	bne	3744c <__assert_fail@plt+0x24d60>
   3747c:	ldr	r3, [fp, #4]
   37480:	str	r3, [fp, #-44]	; 0xffffffd4
   37484:	sub	r0, fp, #548	; 0x224
   37488:	mov	r3, #56	; 0x38
   3748c:	mov	r2, r3
   37490:	mov	r1, #0
   37494:	bl	12434 <memset@plt>
   37498:	mov	r2, #4
   3749c:	movw	r1, #43352	; 0xa958
   374a0:	movt	r1, #6
   374a4:	ldr	r0, [fp, #-1116]	; 0xfffffba4
   374a8:	bl	1268c <strncmp@plt>
   374ac:	mov	r3, r0
   374b0:	cmp	r3, #0
   374b4:	bne	37674 <__assert_fail@plt+0x24f88>
   374b8:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   374bc:	add	r3, r3, #4
   374c0:	str	r3, [fp, #-84]	; 0xffffffac
   374c4:	mov	r3, #1
   374c8:	str	r3, [fp, #-48]	; 0xffffffd0
   374cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   374d0:	str	r3, [fp, #-52]	; 0xffffffcc
   374d4:	b	37664 <__assert_fail@plt+0x24f78>
   374d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   374dc:	ldrb	r3, [r3]
   374e0:	cmp	r3, #92	; 0x5c
   374e4:	bne	37518 <__assert_fail@plt+0x24e2c>
   374e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   374ec:	add	r3, r3, #1
   374f0:	str	r3, [fp, #-52]	; 0xffffffcc
   374f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   374f8:	ldrb	r3, [r3]
   374fc:	cmp	r3, #92	; 0x5c
   37500:	beq	3764c <__assert_fail@plt+0x24f60>
   37504:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37508:	ldrb	r3, [r3]
   3750c:	cmp	r3, #34	; 0x22
   37510:	beq	3764c <__assert_fail@plt+0x24f60>
   37514:	b	37674 <__assert_fail@plt+0x24f88>
   37518:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3751c:	ldrb	r3, [r3]
   37520:	cmp	r3, #34	; 0x22
   37524:	bne	3764c <__assert_fail@plt+0x24f60>
   37528:	sub	r3, fp, #484	; 0x1e4
   3752c:	str	r3, [fp, #-56]	; 0xffffffc8
   37530:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37534:	cmp	r3, #100	; 0x64
   37538:	ble	37564 <__assert_fail@plt+0x24e78>
   3753c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37540:	mov	r0, r3
   37544:	bl	43510 <__assert_fail@plt+0x30e24>
   37548:	mov	r3, r0
   3754c:	str	r3, [fp, #-36]	; 0xffffffdc
   37550:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37554:	cmp	r3, #0
   37558:	beq	3978c <__assert_fail@plt+0x270a0>
   3755c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37560:	str	r3, [fp, #-56]	; 0xffffffc8
   37564:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37568:	str	r3, [fp, #-60]	; 0xffffffc4
   3756c:	ldr	r3, [fp, #-84]	; 0xffffffac
   37570:	str	r3, [fp, #-52]	; 0xffffffcc
   37574:	b	375c4 <__assert_fail@plt+0x24ed8>
   37578:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3757c:	ldrb	r3, [r3]
   37580:	cmp	r3, #92	; 0x5c
   37584:	moveq	r3, #1
   37588:	movne	r3, #0
   3758c:	uxtb	r3, r3
   37590:	mov	r2, r3
   37594:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37598:	add	r3, r3, r2
   3759c:	str	r3, [fp, #-52]	; 0xffffffcc
   375a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   375a4:	add	r3, r2, #1
   375a8:	str	r3, [fp, #-60]	; 0xffffffc4
   375ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   375b0:	ldrb	r3, [r3]
   375b4:	strb	r3, [r2]
   375b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   375bc:	add	r3, r3, #1
   375c0:	str	r3, [fp, #-52]	; 0xffffffcc
   375c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   375c8:	ldrb	r3, [r3]
   375cc:	cmp	r3, #34	; 0x22
   375d0:	bne	37578 <__assert_fail@plt+0x24e8c>
   375d4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   375d8:	mov	r3, #0
   375dc:	strb	r3, [r2]
   375e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   375e4:	bl	5eda8 <__assert_fail@plt+0x4c6bc>
   375e8:	str	r0, [fp, #-88]	; 0xffffffa8
   375ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   375f0:	cmp	r3, #0
   375f4:	beq	39794 <__assert_fail@plt+0x270a8>
   375f8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   375fc:	str	r3, [fp, #-44]	; 0xffffffd4
   37600:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37604:	str	r3, [fp, #8]
   37608:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3760c:	add	r3, r3, #1
   37610:	str	r3, [fp, #-1116]	; 0xfffffba4
   37614:	b	37624 <__assert_fail@plt+0x24f38>
   37618:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   3761c:	add	r3, r3, #1
   37620:	str	r3, [fp, #-1116]	; 0xfffffba4
   37624:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   37628:	ldrb	r3, [r3]
   3762c:	strb	r3, [fp, #-77]	; 0xffffffb3
   37630:	ldrb	r3, [fp, #-77]	; 0xffffffb3
   37634:	mov	r0, r3
   37638:	bl	60420 <__assert_fail@plt+0x4dd34>
   3763c:	mov	r3, r0
   37640:	cmp	r3, #0
   37644:	bne	37618 <__assert_fail@plt+0x24f2c>
   37648:	b	37674 <__assert_fail@plt+0x24f88>
   3764c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37650:	add	r3, r3, #1
   37654:	str	r3, [fp, #-52]	; 0xffffffcc
   37658:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3765c:	add	r3, r3, #1
   37660:	str	r3, [fp, #-48]	; 0xffffffd0
   37664:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37668:	ldrb	r3, [r3]
   3766c:	cmp	r3, #0
   37670:	bne	374d8 <__assert_fail@plt+0x24dec>
   37674:	ldr	r1, [fp, #-1120]	; 0xfffffba0
   37678:	sub	r3, fp, #592	; 0x250
   3767c:	mov	r2, r3
   37680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37684:	bl	5f3a4 <__assert_fail@plt+0x4ccb8>
   37688:	mov	r3, r0
   3768c:	cmp	r3, #0
   37690:	beq	3979c <__assert_fail@plt+0x270b0>
   37694:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   37698:	ldrb	r3, [r3]
   3769c:	cmp	r3, #0
   376a0:	bne	376b0 <__assert_fail@plt+0x24fc4>
   376a4:	movw	r3, #43360	; 0xa960
   376a8:	movt	r3, #6
   376ac:	str	r3, [fp, #-1116]	; 0xfffffba4
   376b0:	ldr	r3, [fp, #-1116]	; 0xfffffba4
   376b4:	str	r3, [fp, #-820]	; 0xfffffccc
   376b8:	ldr	r3, [fp, #-572]	; 0xfffffdc4
   376bc:	mov	r4, #0
   376c0:	mov	r5, #0
   376c4:	mov	r0, r3
   376c8:	asr	r1, r0, #31
   376cc:	movw	r2, #1900	; 0x76c
   376d0:	mov	r3, #0
   376d4:	adds	r6, r0, r2
   376d8:	adc	r7, r1, r3
   376dc:	mov	r2, r6
   376e0:	mov	r3, r7
   376e4:	mov	r0, r2
   376e8:	mov	r1, r3
   376ec:	sub	r3, fp, #812	; 0x32c
   376f0:	strd	r0, [r3, #32]
   376f4:	mov	r2, r4
   376f8:	mov	r3, r5
   376fc:	mov	r3, r2
   37700:	and	r3, r3, #1
   37704:	uxtb	r3, r3
   37708:	cmp	r3, #0
   3770c:	beq	37744 <__assert_fail@plt+0x25058>
   37710:	sub	r3, fp, #820	; 0x334
   37714:	mov	r0, r3
   37718:	bl	31c48 <__assert_fail@plt+0x1f55c>
   3771c:	mov	r3, r0
   37720:	cmp	r3, #0
   37724:	beq	397a4 <__assert_fail@plt+0x270b8>
   37728:	movw	r0, #43364	; 0xa964
   3772c:	movt	r0, #6
   37730:	bl	12398 <gettext@plt>
   37734:	mov	r3, r0
   37738:	mov	r0, r3
   3773c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37740:	b	397a4 <__assert_fail@plt+0x270b8>
   37744:	mov	r3, #0
   37748:	str	r3, [fp, #-772]	; 0xfffffcfc
   3774c:	ldr	r3, [fp, #-576]	; 0xfffffdc0
   37750:	add	r3, r3, #1
   37754:	mov	r2, r3
   37758:	asr	r3, r2, #31
   3775c:	sub	r1, fp, #812	; 0x32c
   37760:	strd	r2, [r1, #48]	; 0x30
   37764:	ldr	r3, [fp, #-580]	; 0xfffffdbc
   37768:	mov	r2, r3
   3776c:	asr	r3, r2, #31
   37770:	sub	r1, fp, #812	; 0x32c
   37774:	strd	r2, [r1, #56]	; 0x38
   37778:	ldr	r3, [fp, #-584]	; 0xfffffdb8
   3777c:	mov	r2, r3
   37780:	asr	r3, r2, #31
   37784:	sub	r1, fp, #812	; 0x32c
   37788:	strd	r2, [r1, #64]	; 0x40
   3778c:	ldr	r3, [fp, #-588]	; 0xfffffdb4
   37790:	mov	r2, r3
   37794:	asr	r3, r2, #31
   37798:	sub	r1, fp, #812	; 0x32c
   3779c:	strd	r2, [r1, #72]	; 0x48
   377a0:	ldr	r3, [fp, #-592]	; 0xfffffdb0
   377a4:	str	r3, [fp, #-732]	; 0xfffffd24
   377a8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   377ac:	str	r3, [fp, #-728]	; 0xfffffd28
   377b0:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   377b4:	str	r3, [fp, #-180]	; 0xffffff4c
   377b8:	mov	r3, #2
   377bc:	str	r3, [fp, #-792]	; 0xfffffce8
   377c0:	sub	r0, fp, #724	; 0x2d4
   377c4:	sub	r1, fp, #548	; 0x224
   377c8:	ldrd	r2, [r1]
   377cc:	strd	r2, [r0]
   377d0:	ldrd	r2, [r1, #8]
   377d4:	strd	r2, [r0, #8]
   377d8:	ldrd	r2, [r1, #16]
   377dc:	strd	r2, [r0, #16]
   377e0:	ldrd	r2, [r1, #24]
   377e4:	strd	r2, [r0, #24]
   377e8:	ldrd	r2, [r1, #32]
   377ec:	strd	r2, [r0, #32]
   377f0:	ldrd	r2, [r1, #40]	; 0x28
   377f4:	strd	r2, [r0, #40]	; 0x28
   377f8:	ldrd	r2, [r1, #48]	; 0x30
   377fc:	strd	r2, [r0, #48]	; 0x30
   37800:	mov	r3, #0
   37804:	strb	r3, [fp, #-668]	; 0xfffffd64
   37808:	mov	r3, #0
   3780c:	strb	r3, [fp, #-667]	; 0xfffffd65
   37810:	mov	r3, #0
   37814:	str	r3, [fp, #-664]	; 0xfffffd68
   37818:	mov	r3, #0
   3781c:	str	r3, [fp, #-660]	; 0xfffffd6c
   37820:	mov	r3, #0
   37824:	str	r3, [fp, #-648]	; 0xfffffd78
   37828:	mov	r3, #0
   3782c:	str	r3, [fp, #-656]	; 0xfffffd70
   37830:	mov	r3, #0
   37834:	str	r3, [fp, #-652]	; 0xfffffd74
   37838:	mov	r3, #0
   3783c:	str	r3, [fp, #-644]	; 0xfffffd7c
   37840:	mov	r3, #0
   37844:	strb	r3, [fp, #-640]	; 0xfffffd80
   37848:	mov	r3, #0
   3784c:	strb	r3, [fp, #-639]	; 0xfffffd81
   37850:	mov	r3, #0
   37854:	strb	r3, [fp, #-638]	; 0xfffffd82
   37858:	mov	r3, #0
   3785c:	strb	r3, [fp, #-636]	; 0xfffffd84
   37860:	mov	r3, #0
   37864:	strb	r3, [fp, #-637]	; 0xfffffd83
   37868:	mov	r3, #0
   3786c:	strb	r3, [fp, #-635]	; 0xfffffd85
   37870:	mov	r3, #0
   37874:	strb	r3, [fp, #-634]	; 0xfffffd86
   37878:	mov	r3, #0
   3787c:	strb	r3, [fp, #-633]	; 0xfffffd87
   37880:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   37884:	str	r3, [fp, #-632]	; 0xfffffd88
   37888:	movw	r3, #269	; 0x10d
   3788c:	str	r3, [fp, #-628]	; 0xfffffd8c
   37890:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   37894:	str	r3, [fp, #-624]	; 0xfffffd90
   37898:	mov	r3, #0
   3789c:	str	r3, [fp, #-620]	; 0xfffffd94
   378a0:	mov	r3, #1
   378a4:	str	r3, [fp, #-64]	; 0xffffffc0
   378a8:	b	37960 <__assert_fail@plt+0x25274>
   378ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   378b0:	mov	r3, #42752	; 0xa700
   378b4:	movt	r3, #118	; 0x76
   378b8:	mul	r2, r3, r2
   378bc:	mov	r1, #0
   378c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   378c4:	adds	r3, r3, r2
   378c8:	bvc	378d0 <__assert_fail@plt+0x251e4>
   378cc:	mov	r1, #1
   378d0:	str	r3, [fp, #-824]	; 0xfffffcc8
   378d4:	mov	r3, r1
   378d8:	and	r3, r3, #1
   378dc:	uxtb	r3, r3
   378e0:	cmp	r3, #0
   378e4:	bne	37970 <__assert_fail@plt+0x25284>
   378e8:	sub	r3, fp, #1040	; 0x410
   378ec:	sub	r3, r3, #12
   378f0:	sub	r3, r3, #8
   378f4:	sub	r1, fp, #824	; 0x338
   378f8:	mov	r2, r3
   378fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   37900:	bl	5f3a4 <__assert_fail@plt+0x4ccb8>
   37904:	mov	r3, r0
   37908:	cmp	r3, #0
   3790c:	beq	37954 <__assert_fail@plt+0x25268>
   37910:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   37914:	cmp	r3, #0
   37918:	beq	37954 <__assert_fail@plt+0x25268>
   3791c:	ldr	r2, [fp, #-1028]	; 0xfffffbfc
   37920:	ldr	r3, [fp, #-624]	; 0xfffffd90
   37924:	cmp	r2, r3
   37928:	beq	37954 <__assert_fail@plt+0x25268>
   3792c:	ldr	r3, [fp, #-1020]	; 0xfffffc04
   37930:	str	r3, [fp, #-620]	; 0xfffffd94
   37934:	movw	r3, #269	; 0x10d
   37938:	str	r3, [fp, #-616]	; 0xfffffd98
   3793c:	ldr	r3, [fp, #-1028]	; 0xfffffbfc
   37940:	str	r3, [fp, #-612]	; 0xfffffd9c
   37944:	mov	r3, #0
   37948:	str	r3, [fp, #-608]	; 0xfffffda0
   3794c:	nop	{0}
   37950:	b	37974 <__assert_fail@plt+0x25288>
   37954:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37958:	add	r3, r3, #1
   3795c:	str	r3, [fp, #-64]	; 0xffffffc0
   37960:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37964:	cmp	r3, #3
   37968:	ble	378ac <__assert_fail@plt+0x251c0>
   3796c:	b	37974 <__assert_fail@plt+0x25288>
   37970:	nop	{0}
   37974:	ldr	r3, [fp, #-632]	; 0xfffffd88
   37978:	cmp	r3, #0
   3797c:	beq	379bc <__assert_fail@plt+0x252d0>
   37980:	ldr	r3, [fp, #-620]	; 0xfffffd94
   37984:	cmp	r3, #0
   37988:	beq	379bc <__assert_fail@plt+0x252d0>
   3798c:	ldr	r2, [fp, #-632]	; 0xfffffd88
   37990:	ldr	r3, [fp, #-620]	; 0xfffffd94
   37994:	mov	r1, r3
   37998:	mov	r0, r2
   3799c:	bl	11ffc <strcmp@plt>
   379a0:	mov	r3, r0
   379a4:	cmp	r3, #0
   379a8:	bne	379bc <__assert_fail@plt+0x252d0>
   379ac:	mvn	r3, #0
   379b0:	str	r3, [fp, #-624]	; 0xfffffd90
   379b4:	mov	r3, #0
   379b8:	str	r3, [fp, #-620]	; 0xfffffd94
   379bc:	sub	r3, fp, #820	; 0x334
   379c0:	mov	r0, r3
   379c4:	bl	33020 <__assert_fail@plt+0x20934>
   379c8:	mov	r3, r0
   379cc:	cmp	r3, #0
   379d0:	beq	37a34 <__assert_fail@plt+0x25348>
   379d4:	sub	r3, fp, #820	; 0x334
   379d8:	mov	r0, r3
   379dc:	bl	31c48 <__assert_fail@plt+0x1f55c>
   379e0:	mov	r3, r0
   379e4:	cmp	r3, #0
   379e8:	beq	397ac <__assert_fail@plt+0x270c0>
   379ec:	ldr	r3, [fp, #-820]	; 0xfffffccc
   379f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   379f4:	cmp	r2, r3
   379f8:	bhi	37a10 <__assert_fail@plt+0x25324>
   379fc:	movw	r0, #43400	; 0xa988
   37a00:	movt	r0, #6
   37a04:	bl	12398 <gettext@plt>
   37a08:	mov	r2, r0
   37a0c:	b	37a20 <__assert_fail@plt+0x25334>
   37a10:	movw	r0, #43424	; 0xa9a0
   37a14:	movt	r0, #6
   37a18:	bl	12398 <gettext@plt>
   37a1c:	mov	r2, r0
   37a20:	ldr	r3, [fp, #-820]	; 0xfffffccc
   37a24:	mov	r1, r3
   37a28:	mov	r0, r2
   37a2c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37a30:	b	397ac <__assert_fail@plt+0x270c0>
   37a34:	sub	r3, fp, #820	; 0x334
   37a38:	mov	r0, r3
   37a3c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   37a40:	mov	r3, r0
   37a44:	cmp	r3, #0
   37a48:	beq	37c60 <__assert_fail@plt+0x25574>
   37a4c:	movw	r0, #43464	; 0xa9c8
   37a50:	movt	r0, #6
   37a54:	bl	12398 <gettext@plt>
   37a58:	mov	r3, r0
   37a5c:	mov	r0, r3
   37a60:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37a64:	ldrb	r3, [fp, #-668]	; 0xfffffd64
   37a68:	cmp	r3, #0
   37a6c:	beq	37a9c <__assert_fail@plt+0x253b0>
   37a70:	movw	r3, #50984	; 0xc728
   37a74:	movt	r3, #7
   37a78:	ldr	r4, [r3]
   37a7c:	movw	r0, #43484	; 0xa9dc
   37a80:	movt	r0, #6
   37a84:	bl	12398 <gettext@plt>
   37a88:	mov	r3, r0
   37a8c:	mov	r1, r3
   37a90:	mov	r0, r4
   37a94:	bl	123f8 <fprintf@plt>
   37a98:	b	37bc0 <__assert_fail@plt+0x254d4>
   37a9c:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   37aa0:	cmp	r3, #0
   37aa4:	beq	37ad4 <__assert_fail@plt+0x253e8>
   37aa8:	movw	r3, #50984	; 0xc728
   37aac:	movt	r3, #7
   37ab0:	ldr	r4, [r3]
   37ab4:	movw	r0, #43512	; 0xa9f8
   37ab8:	movt	r0, #6
   37abc:	bl	12398 <gettext@plt>
   37ac0:	mov	r3, r0
   37ac4:	mov	r1, r3
   37ac8:	mov	r0, r4
   37acc:	bl	123f8 <fprintf@plt>
   37ad0:	b	37bc0 <__assert_fail@plt+0x254d4>
   37ad4:	ldr	r3, [fp, #8]
   37ad8:	cmp	r3, #0
   37adc:	beq	37b98 <__assert_fail@plt+0x254ac>
   37ae0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   37ae4:	ldr	r3, [fp, #4]
   37ae8:	cmp	r2, r3
   37aec:	beq	37b20 <__assert_fail@plt+0x25434>
   37af0:	movw	r3, #50984	; 0xc728
   37af4:	movt	r3, #7
   37af8:	ldr	r4, [r3]
   37afc:	movw	r0, #43536	; 0xaa10
   37b00:	movt	r0, #6
   37b04:	bl	12398 <gettext@plt>
   37b08:	mov	r3, r0
   37b0c:	ldr	r2, [fp, #8]
   37b10:	mov	r1, r3
   37b14:	mov	r0, r4
   37b18:	bl	123f8 <fprintf@plt>
   37b1c:	b	37bc0 <__assert_fail@plt+0x254d4>
   37b20:	movw	r1, #43560	; 0xaa28
   37b24:	movt	r1, #6
   37b28:	ldr	r0, [fp, #8]
   37b2c:	bl	11ffc <strcmp@plt>
   37b30:	mov	r3, r0
   37b34:	cmp	r3, #0
   37b38:	bne	37b68 <__assert_fail@plt+0x2547c>
   37b3c:	movw	r3, #50984	; 0xc728
   37b40:	movt	r3, #7
   37b44:	ldr	r4, [r3]
   37b48:	movw	r0, #43568	; 0xaa30
   37b4c:	movt	r0, #6
   37b50:	bl	12398 <gettext@plt>
   37b54:	mov	r3, r0
   37b58:	mov	r1, r3
   37b5c:	mov	r0, r4
   37b60:	bl	123f8 <fprintf@plt>
   37b64:	b	37bc0 <__assert_fail@plt+0x254d4>
   37b68:	movw	r3, #50984	; 0xc728
   37b6c:	movt	r3, #7
   37b70:	ldr	r4, [r3]
   37b74:	movw	r0, #43604	; 0xaa54
   37b78:	movt	r0, #6
   37b7c:	bl	12398 <gettext@plt>
   37b80:	mov	r3, r0
   37b84:	ldr	r2, [fp, #8]
   37b88:	mov	r1, r3
   37b8c:	mov	r0, r4
   37b90:	bl	123f8 <fprintf@plt>
   37b94:	b	37bc0 <__assert_fail@plt+0x254d4>
   37b98:	movw	r3, #50984	; 0xc728
   37b9c:	movt	r3, #7
   37ba0:	ldr	r4, [r3]
   37ba4:	movw	r0, #43632	; 0xaa70
   37ba8:	movt	r0, #6
   37bac:	bl	12398 <gettext@plt>
   37bb0:	mov	r3, r0
   37bb4:	mov	r1, r3
   37bb8:	mov	r0, r4
   37bbc:	bl	123f8 <fprintf@plt>
   37bc0:	ldr	r3, [fp, #-656]	; 0xfffffd70
   37bc4:	cmp	r3, #0
   37bc8:	beq	37c04 <__assert_fail@plt+0x25518>
   37bcc:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   37bd0:	cmp	r3, #0
   37bd4:	bne	37c04 <__assert_fail@plt+0x25518>
   37bd8:	ldr	r3, [fp, #-800]	; 0xfffffce0
   37bdc:	cmp	r3, #0
   37be0:	ble	37c04 <__assert_fail@plt+0x25518>
   37be4:	movw	r3, #50984	; 0xc728
   37be8:	movt	r3, #7
   37bec:	ldr	r3, [r3]
   37bf0:	mov	r2, #5
   37bf4:	mov	r1, #1
   37bf8:	movw	r0, #43648	; 0xaa80
   37bfc:	movt	r0, #6
   37c00:	bl	12224 <fwrite@plt>
   37c04:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   37c08:	cmp	r3, #0
   37c0c:	beq	37c48 <__assert_fail@plt+0x2555c>
   37c10:	movw	r3, #50984	; 0xc728
   37c14:	movt	r3, #7
   37c18:	ldr	r4, [r3]
   37c1c:	ldr	r2, [fp, #-796]	; 0xfffffce4
   37c20:	sub	r3, fp, #284	; 0x11c
   37c24:	mov	r1, r3
   37c28:	mov	r0, r2
   37c2c:	bl	32560 <__assert_fail@plt+0x1fe74>
   37c30:	mov	r3, r0
   37c34:	mov	r2, r3
   37c38:	movw	r1, #43656	; 0xaa88
   37c3c:	movt	r1, #6
   37c40:	mov	r0, r4
   37c44:	bl	123f8 <fprintf@plt>
   37c48:	movw	r3, #50984	; 0xc728
   37c4c:	movt	r3, #7
   37c50:	ldr	r3, [r3]
   37c54:	mov	r1, r3
   37c58:	mov	r0, #10
   37c5c:	bl	1256c <fputc@plt>
   37c60:	ldrb	r3, [fp, #-668]	; 0xfffffd64
   37c64:	cmp	r3, #0
   37c68:	beq	37c84 <__assert_fail@plt+0x25598>
   37c6c:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   37c70:	mov	r1, r3
   37c74:	sub	r3, fp, #732	; 0x2dc
   37c78:	ldrd	r2, [r3]
   37c7c:	strd	r2, [r1]
   37c80:	b	39558 <__assert_fail@plt+0x26e6c>
   37c84:	ldr	r2, [fp, #-648]	; 0xfffffd78
   37c88:	ldr	r3, [fp, #-664]	; 0xfffffd68
   37c8c:	orr	r2, r2, r3
   37c90:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   37c94:	orr	r2, r2, r3
   37c98:	ldr	r3, [fp, #-652]	; 0xfffffd74
   37c9c:	orr	r1, r2, r3
   37ca0:	ldr	r2, [fp, #-656]	; 0xfffffd70
   37ca4:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   37ca8:	add	r3, r2, r3
   37cac:	orr	r3, r1, r3
   37cb0:	cmp	r3, #1
   37cb4:	ble	37d54 <__assert_fail@plt+0x25668>
   37cb8:	sub	r3, fp, #820	; 0x334
   37cbc:	mov	r0, r3
   37cc0:	bl	31c48 <__assert_fail@plt+0x1f55c>
   37cc4:	mov	r3, r0
   37cc8:	cmp	r3, #0
   37ccc:	beq	397b4 <__assert_fail@plt+0x270c8>
   37cd0:	ldr	r3, [fp, #-648]	; 0xfffffd78
   37cd4:	cmp	r3, #1
   37cd8:	ble	37ce8 <__assert_fail@plt+0x255fc>
   37cdc:	movw	r0, #43664	; 0xaa90
   37ce0:	movt	r0, #6
   37ce4:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37ce8:	ldr	r3, [fp, #-664]	; 0xfffffd68
   37cec:	cmp	r3, #1
   37cf0:	ble	37d00 <__assert_fail@plt+0x25614>
   37cf4:	movw	r0, #43700	; 0xaab4
   37cf8:	movt	r0, #6
   37cfc:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37d00:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   37d04:	cmp	r3, #1
   37d08:	ble	37d18 <__assert_fail@plt+0x2562c>
   37d0c:	movw	r0, #43736	; 0xaad8
   37d10:	movt	r0, #6
   37d14:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37d18:	ldr	r3, [fp, #-652]	; 0xfffffd74
   37d1c:	cmp	r3, #1
   37d20:	ble	37d30 <__assert_fail@plt+0x25644>
   37d24:	movw	r0, #43772	; 0xaafc
   37d28:	movt	r0, #6
   37d2c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37d30:	ldr	r2, [fp, #-656]	; 0xfffffd70
   37d34:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   37d38:	add	r3, r2, r3
   37d3c:	cmp	r3, #1
   37d40:	ble	397b4 <__assert_fail@plt+0x270c8>
   37d44:	movw	r0, #43816	; 0xab28
   37d48:	movt	r0, #6
   37d4c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37d50:	b	397b4 <__assert_fail@plt+0x270c8>
   37d54:	sub	r3, fp, #820	; 0x334
   37d58:	mov	r0, r3
   37d5c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   37d60:	mov	r3, r0
   37d64:	mov	r2, r3
   37d68:	sub	r3, fp, #212	; 0xd4
   37d6c:	add	r3, r3, #20
   37d70:	str	r3, [sp, #12]
   37d74:	str	r2, [sp, #8]
   37d78:	mov	r1, sp
   37d7c:	sub	r3, fp, #772	; 0x304
   37d80:	ldrd	r2, [r3]
   37d84:	strd	r2, [r1]
   37d88:	sub	r3, fp, #788	; 0x314
   37d8c:	ldm	r3, {r0, r1, r2, r3}
   37d90:	bl	35e80 <__assert_fail@plt+0x23794>
   37d94:	mov	r3, r0
   37d98:	eor	r3, r3, #1
   37d9c:	uxtb	r3, r3
   37da0:	cmp	r3, #0
   37da4:	bne	37e58 <__assert_fail@plt+0x2576c>
   37da8:	sub	r3, fp, #812	; 0x32c
   37dac:	ldrd	r0, [r3, #48]	; 0x30
   37db0:	mov	ip, #0
   37db4:	mvn	r2, #0
   37db8:	mvn	r3, #0
   37dbc:	adds	r4, r0, r2
   37dc0:	adcs	r5, r1, r3
   37dc4:	bvc	37dcc <__assert_fail@plt+0x256e0>
   37dc8:	mov	ip, #1
   37dcc:	mov	r2, r4
   37dd0:	asr	r3, r2, #31
   37dd4:	cmp	r5, r3
   37dd8:	cmpeq	r4, r2
   37ddc:	beq	37de4 <__assert_fail@plt+0x256f8>
   37de0:	mov	ip, #1
   37de4:	mov	r3, r4
   37de8:	str	r3, [fp, #-196]	; 0xffffff3c
   37dec:	mov	r3, ip
   37df0:	and	r3, r3, #1
   37df4:	uxtb	r3, r3
   37df8:	cmp	r3, #0
   37dfc:	bne	37e58 <__assert_fail@plt+0x2576c>
   37e00:	sub	r3, fp, #812	; 0x32c
   37e04:	ldrd	r0, [r3, #56]	; 0x38
   37e08:	mov	ip, #0
   37e0c:	mov	r2, #0
   37e10:	mov	r3, #0
   37e14:	adds	r4, r0, r2
   37e18:	adcs	r5, r1, r3
   37e1c:	bvc	37e24 <__assert_fail@plt+0x25738>
   37e20:	mov	ip, #1
   37e24:	mov	r2, r4
   37e28:	asr	r3, r2, #31
   37e2c:	cmp	r5, r3
   37e30:	cmpeq	r4, r2
   37e34:	beq	37e3c <__assert_fail@plt+0x25750>
   37e38:	mov	ip, #1
   37e3c:	mov	r3, r4
   37e40:	str	r3, [fp, #-200]	; 0xffffff38
   37e44:	mov	r3, ip
   37e48:	and	r3, r3, #1
   37e4c:	uxtb	r3, r3
   37e50:	cmp	r3, #0
   37e54:	beq	37e8c <__assert_fail@plt+0x257a0>
   37e58:	sub	r3, fp, #820	; 0x334
   37e5c:	mov	r0, r3
   37e60:	bl	31c48 <__assert_fail@plt+0x1f55c>
   37e64:	mov	r3, r0
   37e68:	cmp	r3, #0
   37e6c:	beq	397bc <__assert_fail@plt+0x270d0>
   37e70:	movw	r0, #43856	; 0xab50
   37e74:	movt	r0, #6
   37e78:	bl	12398 <gettext@plt>
   37e7c:	mov	r3, r0
   37e80:	mov	r0, r3
   37e84:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37e88:	b	397bc <__assert_fail@plt+0x270d0>
   37e8c:	ldr	r3, [fp, #-648]	; 0xfffffd78
   37e90:	cmp	r3, #0
   37e94:	bne	37ebc <__assert_fail@plt+0x257d0>
   37e98:	ldrb	r3, [fp, #-667]	; 0xfffffd65
   37e9c:	cmp	r3, #0
   37ea0:	beq	37fe4 <__assert_fail@plt+0x258f8>
   37ea4:	ldr	r3, [fp, #-664]	; 0xfffffd68
   37ea8:	cmp	r3, #0
   37eac:	bne	37fe4 <__assert_fail@plt+0x258f8>
   37eb0:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   37eb4:	cmp	r3, #0
   37eb8:	bne	37fe4 <__assert_fail@plt+0x258f8>
   37ebc:	sub	r3, fp, #812	; 0x32c
   37ec0:	ldrd	r0, [r3, #64]	; 0x40
   37ec4:	ldr	r3, [fp, #-792]	; 0xfffffce8
   37ec8:	mov	r2, r3
   37ecc:	bl	35cc0 <__assert_fail@plt+0x235d4>
   37ed0:	mov	r3, r0
   37ed4:	str	r3, [fp, #-204]	; 0xffffff34
   37ed8:	ldr	r3, [fp, #-204]	; 0xffffff34
   37edc:	cmp	r3, #0
   37ee0:	bge	37f5c <__assert_fail@plt+0x25870>
   37ee4:	ldr	r3, [fp, #-792]	; 0xfffffce8
   37ee8:	cmp	r3, #0
   37eec:	beq	37f14 <__assert_fail@plt+0x25828>
   37ef0:	ldr	r3, [fp, #-792]	; 0xfffffce8
   37ef4:	cmp	r3, #1
   37ef8:	bne	37f08 <__assert_fail@plt+0x2581c>
   37efc:	movw	r3, #38604	; 0x96cc
   37f00:	movt	r3, #6
   37f04:	b	37f1c <__assert_fail@plt+0x25830>
   37f08:	movw	r3, #38660	; 0x9704
   37f0c:	movt	r3, #6
   37f10:	b	37f1c <__assert_fail@plt+0x25830>
   37f14:	movw	r3, #43896	; 0xab78
   37f18:	movt	r3, #6
   37f1c:	str	r3, [fp, #-92]	; 0xffffffa4
   37f20:	sub	r3, fp, #820	; 0x334
   37f24:	mov	r0, r3
   37f28:	bl	31c48 <__assert_fail@plt+0x1f55c>
   37f2c:	mov	r3, r0
   37f30:	cmp	r3, #0
   37f34:	beq	397c4 <__assert_fail@plt+0x270d8>
   37f38:	movw	r0, #43900	; 0xab7c
   37f3c:	movt	r0, #6
   37f40:	bl	12398 <gettext@plt>
   37f44:	sub	r3, fp, #812	; 0x32c
   37f48:	ldrd	r2, [r3, #64]	; 0x40
   37f4c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   37f50:	str	r1, [sp]
   37f54:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37f58:	b	397c4 <__assert_fail@plt+0x270d8>
   37f5c:	sub	r3, fp, #812	; 0x32c
   37f60:	ldrd	r2, [r3, #72]	; 0x48
   37f64:	mov	r3, r2
   37f68:	str	r3, [fp, #-208]	; 0xffffff30
   37f6c:	ldr	r3, [fp, #-732]	; 0xfffffd24
   37f70:	str	r3, [fp, #-212]	; 0xffffff2c
   37f74:	sub	r3, fp, #820	; 0x334
   37f78:	mov	r0, r3
   37f7c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   37f80:	mov	r3, r0
   37f84:	cmp	r3, #0
   37f88:	beq	38028 <__assert_fail@plt+0x2593c>
   37f8c:	ldr	r3, [fp, #-648]	; 0xfffffd78
   37f90:	cmp	r3, #0
   37f94:	beq	37fac <__assert_fail@plt+0x258c0>
   37f98:	movw	r0, #43928	; 0xab98
   37f9c:	movt	r0, #6
   37fa0:	bl	12398 <gettext@plt>
   37fa4:	mov	r4, r0
   37fa8:	b	37fbc <__assert_fail@plt+0x258d0>
   37fac:	movw	r0, #43976	; 0xabc8
   37fb0:	movt	r0, #6
   37fb4:	bl	12398 <gettext@plt>
   37fb8:	mov	r4, r0
   37fbc:	sub	r1, fp, #384	; 0x180
   37fc0:	sub	r3, fp, #212	; 0xd4
   37fc4:	mov	r2, #100	; 0x64
   37fc8:	mov	r0, r3
   37fcc:	bl	36efc <__assert_fail@plt+0x24810>
   37fd0:	mov	r3, r0
   37fd4:	mov	r1, r3
   37fd8:	mov	r0, r4
   37fdc:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   37fe0:	b	38028 <__assert_fail@plt+0x2593c>
   37fe4:	mov	r3, #0
   37fe8:	str	r3, [fp, #-212]	; 0xffffff2c
   37fec:	ldr	r3, [fp, #-212]	; 0xffffff2c
   37ff0:	str	r3, [fp, #-208]	; 0xffffff30
   37ff4:	ldr	r3, [fp, #-208]	; 0xffffff30
   37ff8:	str	r3, [fp, #-204]	; 0xffffff34
   37ffc:	mov	r3, #0
   38000:	str	r3, [fp, #-728]	; 0xfffffd28
   38004:	sub	r3, fp, #820	; 0x334
   38008:	mov	r0, r3
   3800c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38010:	mov	r3, r0
   38014:	cmp	r3, #0
   38018:	beq	38028 <__assert_fail@plt+0x2593c>
   3801c:	movw	r0, #44020	; 0xabf4
   38020:	movt	r0, #6
   38024:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38028:	ldr	r2, [fp, #-664]	; 0xfffffd68
   3802c:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   38030:	orr	r2, r2, r3
   38034:	ldr	r3, [fp, #-648]	; 0xfffffd78
   38038:	orr	r3, r2, r3
   3803c:	cmp	r3, #0
   38040:	beq	3804c <__assert_fail@plt+0x25960>
   38044:	mvn	r3, #0
   38048:	str	r3, [fp, #-180]	; 0xffffff4c
   3804c:	ldr	r3, [fp, #-656]	; 0xfffffd70
   38050:	cmp	r3, #0
   38054:	beq	38060 <__assert_fail@plt+0x25974>
   38058:	ldr	r3, [fp, #-800]	; 0xfffffce0
   3805c:	str	r3, [fp, #-180]	; 0xffffff4c
   38060:	ldr	r3, [fp, #-212]	; 0xffffff2c
   38064:	str	r3, [fp, #-256]	; 0xffffff00
   38068:	ldr	r3, [fp, #-208]	; 0xffffff30
   3806c:	str	r3, [fp, #-252]	; 0xffffff04
   38070:	ldr	r3, [fp, #-204]	; 0xffffff34
   38074:	str	r3, [fp, #-248]	; 0xffffff08
   38078:	ldr	r3, [fp, #-200]	; 0xffffff38
   3807c:	str	r3, [fp, #-244]	; 0xffffff0c
   38080:	ldr	r3, [fp, #-196]	; 0xffffff3c
   38084:	str	r3, [fp, #-240]	; 0xffffff10
   38088:	ldr	r3, [fp, #-192]	; 0xffffff40
   3808c:	str	r3, [fp, #-236]	; 0xffffff14
   38090:	ldr	r3, [fp, #-180]	; 0xffffff4c
   38094:	str	r3, [fp, #-224]	; 0xffffff20
   38098:	mvn	r3, #0
   3809c:	str	r3, [fp, #-188]	; 0xffffff44
   380a0:	sub	r3, fp, #212	; 0xd4
   380a4:	mov	r1, r3
   380a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   380ac:	bl	5f484 <__assert_fail@plt+0x4cd98>
   380b0:	str	r0, [fp, #-40]	; 0xffffffd8
   380b4:	sub	r2, fp, #212	; 0xd4
   380b8:	sub	r3, fp, #256	; 0x100
   380bc:	mov	r1, r2
   380c0:	mov	r0, r3
   380c4:	bl	36c6c <__assert_fail@plt+0x24580>
   380c8:	mov	r3, r0
   380cc:	eor	r3, r3, #1
   380d0:	uxtb	r3, r3
   380d4:	cmp	r3, #0
   380d8:	beq	38230 <__assert_fail@plt+0x25b44>
   380dc:	mov	r3, #0
   380e0:	strb	r3, [fp, #-65]	; 0xffffffbf
   380e4:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   380e8:	cmp	r3, #0
   380ec:	movne	r3, #1
   380f0:	moveq	r3, #0
   380f4:	strb	r3, [fp, #-93]	; 0xffffffa3
   380f8:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   380fc:	cmp	r3, #0
   38100:	beq	38204 <__assert_fail@plt+0x25b18>
   38104:	mov	r3, #88	; 0x58
   38108:	strb	r3, [fp, #-854]	; 0xfffffcaa
   3810c:	ldrb	r3, [fp, #-854]	; 0xfffffcaa
   38110:	strb	r3, [fp, #-855]	; 0xfffffca9
   38114:	ldrb	r3, [fp, #-855]	; 0xfffffca9
   38118:	strb	r3, [fp, #-856]	; 0xfffffca8
   3811c:	ldr	r2, [fp, #-796]	; 0xfffffce4
   38120:	sub	r3, fp, #856	; 0x358
   38124:	add	r3, r3, #3
   38128:	mov	r1, r3
   3812c:	mov	r0, r2
   38130:	bl	32560 <__assert_fail@plt+0x1fe74>
   38134:	sub	r3, fp, #856	; 0x358
   38138:	mov	r0, r3
   3813c:	bl	5eda8 <__assert_fail@plt+0x4c6bc>
   38140:	str	r0, [fp, #-100]	; 0xffffff9c
   38144:	ldr	r3, [fp, #-100]	; 0xffffff9c
   38148:	cmp	r3, #0
   3814c:	bne	3818c <__assert_fail@plt+0x25aa0>
   38150:	sub	r3, fp, #820	; 0x334
   38154:	mov	r0, r3
   38158:	bl	31c48 <__assert_fail@plt+0x1f55c>
   3815c:	mov	r3, r0
   38160:	cmp	r3, #0
   38164:	beq	397cc <__assert_fail@plt+0x270e0>
   38168:	movw	r0, #44072	; 0xac28
   3816c:	movt	r0, #6
   38170:	bl	12398 <gettext@plt>
   38174:	mov	r2, r0
   38178:	sub	r3, fp, #856	; 0x358
   3817c:	mov	r1, r3
   38180:	mov	r0, r2
   38184:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38188:	b	397b4 <__assert_fail@plt+0x270c8>
   3818c:	ldr	r3, [fp, #-256]	; 0xffffff00
   38190:	str	r3, [fp, #-212]	; 0xffffff2c
   38194:	ldr	r3, [fp, #-252]	; 0xffffff04
   38198:	str	r3, [fp, #-208]	; 0xffffff30
   3819c:	ldr	r3, [fp, #-248]	; 0xffffff08
   381a0:	str	r3, [fp, #-204]	; 0xffffff34
   381a4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   381a8:	str	r3, [fp, #-200]	; 0xffffff38
   381ac:	ldr	r3, [fp, #-240]	; 0xffffff10
   381b0:	str	r3, [fp, #-196]	; 0xffffff3c
   381b4:	ldr	r3, [fp, #-236]	; 0xffffff14
   381b8:	str	r3, [fp, #-192]	; 0xffffff40
   381bc:	ldr	r3, [fp, #-224]	; 0xffffff20
   381c0:	str	r3, [fp, #-180]	; 0xffffff4c
   381c4:	mvn	r3, #0
   381c8:	str	r3, [fp, #-188]	; 0xffffff44
   381cc:	sub	r3, fp, #212	; 0xd4
   381d0:	mov	r1, r3
   381d4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   381d8:	bl	5f484 <__assert_fail@plt+0x4cd98>
   381dc:	str	r0, [fp, #-40]	; 0xffffffd8
   381e0:	sub	r2, fp, #212	; 0xd4
   381e4:	sub	r3, fp, #256	; 0x100
   381e8:	mov	r1, r2
   381ec:	mov	r0, r3
   381f0:	bl	36c6c <__assert_fail@plt+0x24580>
   381f4:	mov	r3, r0
   381f8:	strb	r3, [fp, #-65]	; 0xffffffbf
   381fc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   38200:	bl	5f088 <__assert_fail@plt+0x4c99c>
   38204:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   38208:	eor	r3, r3, #1
   3820c:	uxtb	r3, r3
   38210:	cmp	r3, #0
   38214:	beq	38230 <__assert_fail@plt+0x25b44>
   38218:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   3821c:	sub	r2, fp, #820	; 0x334
   38220:	sub	r1, fp, #212	; 0xd4
   38224:	sub	r0, fp, #256	; 0x100
   38228:	bl	36f68 <__assert_fail@plt+0x2487c>
   3822c:	b	397f0 <__assert_fail@plt+0x27104>
   38230:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   38234:	cmp	r3, #0
   38238:	beq	38668 <__assert_fail@plt+0x25f7c>
   3823c:	ldr	r3, [fp, #-664]	; 0xfffffd68
   38240:	cmp	r3, #0
   38244:	bne	38668 <__assert_fail@plt+0x25f7c>
   38248:	sub	r3, fp, #812	; 0x32c
   3824c:	ldrd	r0, [r3]
   38250:	sub	r3, fp, #812	; 0x32c
   38254:	ldrd	r2, [r3]
   38258:	cmp	r2, #1
   3825c:	sbcs	r3, r3, #0
   38260:	blt	3827c <__assert_fail@plt+0x25b90>
   38264:	ldr	r2, [fp, #-188]	; 0xffffff44
   38268:	ldr	r3, [fp, #-804]	; 0xfffffcdc
   3826c:	cmp	r2, r3
   38270:	beq	3827c <__assert_fail@plt+0x25b90>
   38274:	mov	r3, #1
   38278:	b	38280 <__assert_fail@plt+0x25b94>
   3827c:	mov	r3, #0
   38280:	mov	r2, r3
   38284:	asr	r3, r2, #31
   38288:	subs	r8, r0, r2
   3828c:	sbc	r9, r1, r3
   38290:	mov	r2, #0
   38294:	mov	r3, #0
   38298:	sub	r1, fp, #1200	; 0x4b0
   3829c:	sub	r1, r1, #12
   382a0:	strd	r2, [r1]
   382a4:	mov	r4, #0
   382a8:	mov	r5, #0
   382ac:	mov	r4, r9
   382b0:	asr	r5, r9, #31
   382b4:	asr	ip, r8, #31
   382b8:	mov	r2, #7
   382bc:	mov	r3, #0
   382c0:	mov	r0, #0
   382c4:	mov	r1, #0
   382c8:	mov	r0, r3
   382cc:	asr	r1, r3, #31
   382d0:	cmp	ip, r4
   382d4:	bne	382f0 <__assert_fail@plt+0x25c04>
   382d8:	mov	r3, #7
   382dc:	smull	r2, r3, r8, r3
   382e0:	sub	r1, fp, #1120	; 0x460
   382e4:	sub	r1, r1, #12
   382e8:	strd	r2, [r1]
   382ec:	b	38408 <__assert_fail@plt+0x25d1c>
   382f0:	mov	r1, r4
   382f4:	mov	r0, #7
   382f8:	mov	r3, #7
   382fc:	umull	r6, r7, r8, r3
   38300:	umull	r2, r3, r0, r1
   38304:	mov	r4, r2
   38308:	mov	r5, r3
   3830c:	cmp	r1, #0
   38310:	bge	38348 <__assert_fail@plt+0x25c5c>
   38314:	mov	r2, r0
   38318:	mov	r3, #0
   3831c:	mov	r0, #0
   38320:	mov	r1, #0
   38324:	mov	r1, r2
   38328:	mov	r0, #0
   3832c:	subs	r3, r4, r0
   38330:	str	r3, [fp, #-1220]	; 0xfffffb3c
   38334:	sbc	r3, r5, r1
   38338:	str	r3, [fp, #-1216]	; 0xfffffb40
   3833c:	sub	r3, fp, #1216	; 0x4c0
   38340:	sub	r3, r3, #4
   38344:	ldrd	r4, [r3]
   38348:	mov	r2, #0
   3834c:	mov	r3, #0
   38350:	mov	r2, r7
   38354:	mov	r3, #0
   38358:	adds	r1, r4, r2
   3835c:	str	r1, [fp, #-1228]	; 0xfffffb34
   38360:	adc	r3, r5, r3
   38364:	str	r3, [fp, #-1224]	; 0xfffffb38
   38368:	sub	r3, fp, #1216	; 0x4c0
   3836c:	sub	r3, r3, #12
   38370:	ldrd	r4, [r3]
   38374:	mov	r2, #0
   38378:	mov	r3, #0
   3837c:	mov	r2, r5
   38380:	asr	r3, r5, #31
   38384:	asr	r1, r4, #31
   38388:	cmp	r1, r2
   3838c:	bne	383bc <__assert_fail@plt+0x25cd0>
   38390:	mov	r0, #0
   38394:	mov	r1, #0
   38398:	mov	r1, r4
   3839c:	mov	r0, #0
   383a0:	mov	r2, r6
   383a4:	mov	r3, #0
   383a8:	orr	ip, r0, r2
   383ac:	str	ip, [fp, #-1132]	; 0xfffffb94
   383b0:	orr	r3, r1, r3
   383b4:	str	r3, [fp, #-1128]	; 0xfffffb98
   383b8:	b	38408 <__assert_fail@plt+0x25d1c>
   383bc:	mov	r2, r8
   383c0:	mov	r3, r9
   383c4:	mov	r0, #0
   383c8:	mov	r1, #0
   383cc:	lsl	r1, r3, #3
   383d0:	orr	r1, r1, r2, lsr #29
   383d4:	lsl	r0, r2, #3
   383d8:	mov	r2, r0
   383dc:	mov	r3, r1
   383e0:	subs	r2, r2, r8
   383e4:	sbc	r3, r3, r9
   383e8:	sub	r1, fp, #1120	; 0x460
   383ec:	sub	r1, r1, #12
   383f0:	strd	r2, [r1]
   383f4:	mov	r2, #1
   383f8:	mov	r3, #0
   383fc:	sub	r1, fp, #1200	; 0x4b0
   38400:	sub	r1, r1, #12
   38404:	strd	r2, [r1]
   38408:	sub	r3, fp, #1120	; 0x460
   3840c:	sub	r3, r3, #12
   38410:	ldrd	r2, [r3]
   38414:	mov	r0, r2
   38418:	mov	r1, r3
   3841c:	sub	r3, fp, #860	; 0x35c
   38420:	strd	r0, [r3, #-8]
   38424:	sub	r3, fp, #1200	; 0x4b0
   38428:	sub	r3, r3, #12
   3842c:	ldrd	r2, [r3]
   38430:	mov	r3, r2
   38434:	and	r3, r3, #1
   38438:	uxtb	r3, r3
   3843c:	cmp	r3, #0
   38440:	bne	38538 <__assert_fail@plt+0x25e4c>
   38444:	ldr	r2, [fp, #-804]	; 0xfffffcdc
   38448:	ldr	r3, [fp, #-188]	; 0xffffff44
   3844c:	sub	r3, r2, r3
   38450:	add	r1, r3, #7
   38454:	movw	r3, #9363	; 0x2493
   38458:	movt	r3, #37449	; 0x9249
   3845c:	smull	r2, r3, r3, r1
   38460:	add	r3, r3, r1
   38464:	asr	r2, r3, #2
   38468:	asr	r3, r1, #31
   3846c:	sub	r2, r2, r3
   38470:	mov	r3, r2
   38474:	lsl	r3, r3, #3
   38478:	sub	r3, r3, r2
   3847c:	sub	r2, r1, r3
   38480:	sub	r3, fp, #860	; 0x35c
   38484:	ldrd	r0, [r3, #-8]
   38488:	asr	r3, r2, #31
   3848c:	mov	r6, #0
   38490:	mov	r7, #0
   38494:	adds	r4, r2, r0
   38498:	adcs	r5, r3, r1
   3849c:	bvc	384a8 <__assert_fail@plt+0x25dbc>
   384a0:	mov	r6, #1
   384a4:	mov	r7, #0
   384a8:	mov	r2, r4
   384ac:	mov	r3, r5
   384b0:	mov	r0, r2
   384b4:	mov	r1, r3
   384b8:	sub	r3, fp, #860	; 0x35c
   384bc:	strd	r0, [r3, #-8]
   384c0:	mov	r2, r6
   384c4:	mov	r3, r7
   384c8:	mov	r3, r2
   384cc:	and	r3, r3, #1
   384d0:	uxtb	r3, r3
   384d4:	cmp	r3, #0
   384d8:	bne	38538 <__assert_fail@plt+0x25e4c>
   384dc:	sub	r3, fp, #860	; 0x35c
   384e0:	ldrd	r0, [r3, #-8]
   384e4:	ldr	r3, [fp, #-200]	; 0xffffff38
   384e8:	mov	r2, r3
   384ec:	asr	r3, r2, #31
   384f0:	mov	ip, #0
   384f4:	adds	r4, r0, r2
   384f8:	adcs	r5, r1, r3
   384fc:	bvc	38504 <__assert_fail@plt+0x25e18>
   38500:	mov	ip, #1
   38504:	mov	r2, r4
   38508:	asr	r3, r2, #31
   3850c:	cmp	r5, r3
   38510:	cmpeq	r4, r2
   38514:	beq	3851c <__assert_fail@plt+0x25e30>
   38518:	mov	ip, #1
   3851c:	mov	r3, r4
   38520:	str	r3, [fp, #-200]	; 0xffffff38
   38524:	mov	r3, ip
   38528:	and	r3, r3, #1
   3852c:	uxtb	r3, r3
   38530:	cmp	r3, #0
   38534:	beq	38544 <__assert_fail@plt+0x25e58>
   38538:	mvn	r3, #0
   3853c:	str	r3, [fp, #-40]	; 0xffffffd8
   38540:	b	38560 <__assert_fail@plt+0x25e74>
   38544:	mvn	r3, #0
   38548:	str	r3, [fp, #-180]	; 0xffffff4c
   3854c:	sub	r3, fp, #212	; 0xd4
   38550:	mov	r1, r3
   38554:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38558:	bl	5f484 <__assert_fail@plt+0x4cd98>
   3855c:	str	r0, [fp, #-40]	; 0xffffffd8
   38560:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38564:	cmn	r3, #1
   38568:	bne	385f8 <__assert_fail@plt+0x25f0c>
   3856c:	sub	r3, fp, #820	; 0x334
   38570:	mov	r0, r3
   38574:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38578:	mov	r3, r0
   3857c:	cmp	r3, #0
   38580:	beq	397d4 <__assert_fail@plt+0x270e8>
   38584:	movw	r0, #44104	; 0xac48
   38588:	movt	r0, #6
   3858c:	bl	12398 <gettext@plt>
   38590:	mov	r7, r0
   38594:	sub	r3, fp, #1040	; 0x410
   38598:	sub	r3, r3, #12
   3859c:	sub	r3, r3, #8
   385a0:	sub	r0, fp, #820	; 0x334
   385a4:	mov	r2, #100	; 0x64
   385a8:	mov	r1, r3
   385ac:	bl	323c4 <__assert_fail@plt+0x1fcd8>
   385b0:	mov	r8, r0
   385b4:	sub	r3, fp, #812	; 0x32c
   385b8:	ldrd	r4, [r3]
   385bc:	ldr	r6, [fp, #-804]	; 0xfffffcdc
   385c0:	sub	r2, fp, #384	; 0x180
   385c4:	sub	r1, fp, #820	; 0x334
   385c8:	sub	r0, fp, #212	; 0xd4
   385cc:	mov	r3, #100	; 0x64
   385d0:	bl	36d44 <__assert_fail@plt+0x24658>
   385d4:	mov	r3, r0
   385d8:	str	r3, [sp, #4]
   385dc:	str	r6, [sp]
   385e0:	mov	r2, r4
   385e4:	mov	r3, r5
   385e8:	mov	r1, r8
   385ec:	mov	r0, r7
   385f0:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   385f4:	b	397b4 <__assert_fail@plt+0x270c8>
   385f8:	sub	r3, fp, #820	; 0x334
   385fc:	mov	r0, r3
   38600:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38604:	mov	r3, r0
   38608:	cmp	r3, #0
   3860c:	beq	38668 <__assert_fail@plt+0x25f7c>
   38610:	movw	r0, #44184	; 0xac98
   38614:	movt	r0, #6
   38618:	bl	12398 <gettext@plt>
   3861c:	mov	r5, r0
   38620:	sub	r3, fp, #1040	; 0x410
   38624:	sub	r3, r3, #12
   38628:	sub	r3, r3, #8
   3862c:	sub	r0, fp, #820	; 0x334
   38630:	mov	r2, #100	; 0x64
   38634:	mov	r1, r3
   38638:	bl	323c4 <__assert_fail@plt+0x1fcd8>
   3863c:	mov	r4, r0
   38640:	sub	r2, fp, #384	; 0x180
   38644:	sub	r1, fp, #820	; 0x334
   38648:	sub	r0, fp, #212	; 0xd4
   3864c:	mov	r3, #100	; 0x64
   38650:	bl	36d44 <__assert_fail@plt+0x24658>
   38654:	mov	r3, r0
   38658:	mov	r2, r3
   3865c:	mov	r1, r4
   38660:	mov	r0, r5
   38664:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38668:	sub	r3, fp, #820	; 0x334
   3866c:	mov	r0, r3
   38670:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38674:	mov	r3, r0
   38678:	cmp	r3, #0
   3867c:	beq	38754 <__assert_fail@plt+0x26068>
   38680:	ldr	r3, [fp, #-664]	; 0xfffffd68
   38684:	cmp	r3, #0
   38688:	bne	386cc <__assert_fail@plt+0x25fe0>
   3868c:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   38690:	cmp	r3, #0
   38694:	bne	386cc <__assert_fail@plt+0x25fe0>
   38698:	movw	r0, #44216	; 0xacb8
   3869c:	movt	r0, #6
   386a0:	bl	12398 <gettext@plt>
   386a4:	mov	r4, r0
   386a8:	sub	r1, fp, #384	; 0x180
   386ac:	sub	r3, fp, #212	; 0xd4
   386b0:	mov	r2, #100	; 0x64
   386b4:	mov	r0, r3
   386b8:	bl	36e6c <__assert_fail@plt+0x24780>
   386bc:	mov	r3, r0
   386c0:	mov	r1, r3
   386c4:	mov	r0, r4
   386c8:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   386cc:	ldr	r3, [fp, #-660]	; 0xfffffd6c
   386d0:	cmp	r3, #0
   386d4:	beq	38720 <__assert_fail@plt+0x26034>
   386d8:	ldr	r3, [fp, #-664]	; 0xfffffd68
   386dc:	cmp	r3, #0
   386e0:	beq	38720 <__assert_fail@plt+0x26034>
   386e4:	movw	r0, #44260	; 0xace4
   386e8:	movt	r0, #6
   386ec:	bl	12398 <gettext@plt>
   386f0:	mov	r4, r0
   386f4:	sub	r3, fp, #1040	; 0x410
   386f8:	sub	r3, r3, #12
   386fc:	sub	r3, r3, #8
   38700:	sub	r0, fp, #820	; 0x334
   38704:	mov	r2, #100	; 0x64
   38708:	mov	r1, r3
   3870c:	bl	323c4 <__assert_fail@plt+0x1fcd8>
   38710:	mov	r3, r0
   38714:	mov	r1, r3
   38718:	mov	r0, r4
   3871c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38720:	movw	r0, #44320	; 0xad20
   38724:	movt	r0, #6
   38728:	bl	12398 <gettext@plt>
   3872c:	mov	r4, r0
   38730:	sub	r2, fp, #384	; 0x180
   38734:	sub	r1, fp, #820	; 0x334
   38738:	sub	r0, fp, #212	; 0xd4
   3873c:	mov	r3, #100	; 0x64
   38740:	bl	36d44 <__assert_fail@plt+0x24658>
   38744:	mov	r3, r0
   38748:	mov	r1, r3
   3874c:	mov	r0, r4
   38750:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38754:	sub	r3, fp, #812	; 0x32c
   38758:	ldrd	r0, [r3, #88]	; 0x58
   3875c:	sub	r3, fp, #812	; 0x32c
   38760:	ldrd	r2, [r3, #96]	; 0x60
   38764:	orr	ip, r0, r2
   38768:	str	ip, [fp, #-1156]	; 0xfffffb7c
   3876c:	orr	r3, r1, r3
   38770:	str	r3, [fp, #-1152]	; 0xfffffb80
   38774:	sub	r3, fp, #812	; 0x32c
   38778:	ldrd	r2, [r3, #104]	; 0x68
   3877c:	sub	r1, fp, #1152	; 0x480
   38780:	sub	r1, r1, #4
   38784:	ldrd	r0, [r1]
   38788:	mov	ip, r0
   3878c:	orr	ip, ip, r2
   38790:	str	ip, [fp, #-1164]	; 0xfffffb74
   38794:	orr	r3, r1, r3
   38798:	str	r3, [fp, #-1160]	; 0xfffffb78
   3879c:	sub	r3, fp, #1152	; 0x480
   387a0:	sub	r3, r3, #12
   387a4:	ldrd	r2, [r3]
   387a8:	orrs	r3, r2, r3
   387ac:	beq	38bcc <__assert_fail@plt+0x264e0>
   387b0:	sub	r3, fp, #820	; 0x334
   387b4:	mov	r0, r3
   387b8:	bl	31c48 <__assert_fail@plt+0x1f55c>
   387bc:	mov	r3, r0
   387c0:	cmp	r3, #0
   387c4:	beq	38840 <__assert_fail@plt+0x26154>
   387c8:	sub	r3, fp, #812	; 0x32c
   387cc:	ldrd	r2, [r3, #88]	; 0x58
   387d0:	orrs	r3, r2, r3
   387d4:	bne	387e8 <__assert_fail@plt+0x260fc>
   387d8:	sub	r3, fp, #812	; 0x32c
   387dc:	ldrd	r2, [r3, #96]	; 0x60
   387e0:	orrs	r3, r2, r3
   387e4:	beq	3880c <__assert_fail@plt+0x26120>
   387e8:	ldr	r3, [fp, #-200]	; 0xffffff38
   387ec:	cmp	r3, #15
   387f0:	beq	3880c <__assert_fail@plt+0x26120>
   387f4:	movw	r0, #44348	; 0xad3c
   387f8:	movt	r0, #6
   387fc:	bl	12398 <gettext@plt>
   38800:	mov	r3, r0
   38804:	mov	r0, r3
   38808:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   3880c:	sub	r3, fp, #812	; 0x32c
   38810:	ldrd	r2, [r3, #104]	; 0x68
   38814:	orrs	r3, r2, r3
   38818:	beq	38840 <__assert_fail@plt+0x26154>
   3881c:	ldr	r3, [fp, #-204]	; 0xffffff34
   38820:	cmp	r3, #12
   38824:	beq	38840 <__assert_fail@plt+0x26154>
   38828:	movw	r0, #44448	; 0xada0
   3882c:	movt	r0, #6
   38830:	bl	12398 <gettext@plt>
   38834:	mov	r3, r0
   38838:	mov	r0, r3
   3883c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38840:	ldr	r2, [fp, #-192]	; 0xffffff40
   38844:	sub	r3, fp, #812	; 0x32c
   38848:	ldrd	r0, [r3, #88]	; 0x58
   3884c:	asr	r3, r2, #31
   38850:	mov	ip, #0
   38854:	adds	r4, r2, r0
   38858:	adcs	r5, r3, r1
   3885c:	bvc	38864 <__assert_fail@plt+0x26178>
   38860:	mov	ip, #1
   38864:	mov	r2, r4
   38868:	asr	r3, r2, #31
   3886c:	cmp	r5, r3
   38870:	cmpeq	r4, r2
   38874:	beq	3887c <__assert_fail@plt+0x26190>
   38878:	mov	ip, #1
   3887c:	mov	r3, r4
   38880:	str	r3, [fp, #-872]	; 0xfffffc98
   38884:	mov	r3, ip
   38888:	and	r3, r3, #1
   3888c:	uxtb	r3, r3
   38890:	cmp	r3, #0
   38894:	bne	38948 <__assert_fail@plt+0x2625c>
   38898:	ldr	r2, [fp, #-196]	; 0xffffff3c
   3889c:	sub	r3, fp, #812	; 0x32c
   388a0:	ldrd	r0, [r3, #96]	; 0x60
   388a4:	asr	r3, r2, #31
   388a8:	mov	ip, #0
   388ac:	adds	r4, r2, r0
   388b0:	adcs	r5, r3, r1
   388b4:	bvc	388bc <__assert_fail@plt+0x261d0>
   388b8:	mov	ip, #1
   388bc:	mov	r2, r4
   388c0:	asr	r3, r2, #31
   388c4:	cmp	r5, r3
   388c8:	cmpeq	r4, r2
   388cc:	beq	388d4 <__assert_fail@plt+0x261e8>
   388d0:	mov	ip, #1
   388d4:	mov	r3, r4
   388d8:	str	r3, [fp, #-876]	; 0xfffffc94
   388dc:	mov	r3, ip
   388e0:	and	r3, r3, #1
   388e4:	uxtb	r3, r3
   388e8:	cmp	r3, #0
   388ec:	bne	38948 <__assert_fail@plt+0x2625c>
   388f0:	ldr	r2, [fp, #-200]	; 0xffffff38
   388f4:	sub	r3, fp, #812	; 0x32c
   388f8:	ldrd	r0, [r3, #104]	; 0x68
   388fc:	asr	r3, r2, #31
   38900:	mov	ip, #0
   38904:	adds	r4, r2, r0
   38908:	adcs	r5, r3, r1
   3890c:	bvc	38914 <__assert_fail@plt+0x26228>
   38910:	mov	ip, #1
   38914:	mov	r2, r4
   38918:	asr	r3, r2, #31
   3891c:	cmp	r5, r3
   38920:	cmpeq	r4, r2
   38924:	beq	3892c <__assert_fail@plt+0x26240>
   38928:	mov	ip, #1
   3892c:	mov	r3, r4
   38930:	str	r3, [fp, #-880]	; 0xfffffc90
   38934:	mov	r3, ip
   38938:	and	r3, r3, #1
   3893c:	uxtb	r3, r3
   38940:	cmp	r3, #0
   38944:	beq	38988 <__assert_fail@plt+0x2629c>
   38948:	sub	r3, fp, #820	; 0x334
   3894c:	mov	r0, r3
   38950:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38954:	mov	r3, r0
   38958:	cmp	r3, #0
   3895c:	beq	397dc <__assert_fail@plt+0x270f0>
   38960:	movw	r0, #44520	; 0xade8
   38964:	movt	r0, #6
   38968:	bl	12398 <gettext@plt>
   3896c:	mov	r3, r0
   38970:	movw	r2, #2149	; 0x865
   38974:	movw	r1, #44536	; 0xadf8
   38978:	movt	r1, #6
   3897c:	mov	r0, r3
   38980:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38984:	b	397dc <__assert_fail@plt+0x270f0>
   38988:	ldr	r3, [fp, #-872]	; 0xfffffc98
   3898c:	str	r3, [fp, #-192]	; 0xffffff40
   38990:	ldr	r3, [fp, #-876]	; 0xfffffc94
   38994:	str	r3, [fp, #-196]	; 0xffffff3c
   38998:	ldr	r3, [fp, #-880]	; 0xfffffc90
   3899c:	str	r3, [fp, #-200]	; 0xffffff38
   389a0:	ldr	r3, [fp, #-248]	; 0xffffff08
   389a4:	str	r3, [fp, #-204]	; 0xffffff34
   389a8:	ldr	r3, [fp, #-252]	; 0xffffff04
   389ac:	str	r3, [fp, #-208]	; 0xffffff30
   389b0:	ldr	r3, [fp, #-256]	; 0xffffff00
   389b4:	str	r3, [fp, #-212]	; 0xffffff2c
   389b8:	ldr	r3, [fp, #-224]	; 0xffffff20
   389bc:	str	r3, [fp, #-180]	; 0xffffff4c
   389c0:	sub	r3, fp, #212	; 0xd4
   389c4:	mov	r1, r3
   389c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   389cc:	bl	5f484 <__assert_fail@plt+0x4cd98>
   389d0:	str	r0, [fp, #-40]	; 0xffffffd8
   389d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   389d8:	cmn	r3, #1
   389dc:	bne	38a30 <__assert_fail@plt+0x26344>
   389e0:	sub	r3, fp, #820	; 0x334
   389e4:	mov	r0, r3
   389e8:	bl	31c48 <__assert_fail@plt+0x1f55c>
   389ec:	mov	r3, r0
   389f0:	cmp	r3, #0
   389f4:	beq	38bc4 <__assert_fail@plt+0x264d8>
   389f8:	movw	r0, #44556	; 0xae0c
   389fc:	movt	r0, #6
   38a00:	bl	12398 <gettext@plt>
   38a04:	mov	r4, r0
   38a08:	sub	r2, fp, #384	; 0x180
   38a0c:	sub	r1, fp, #820	; 0x334
   38a10:	sub	r0, fp, #212	; 0xd4
   38a14:	mov	r3, #100	; 0x64
   38a18:	bl	36d44 <__assert_fail@plt+0x24658>
   38a1c:	mov	r3, r0
   38a20:	mov	r1, r3
   38a24:	mov	r0, r4
   38a28:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38a2c:	b	38bc4 <__assert_fail@plt+0x264d8>
   38a30:	sub	r3, fp, #820	; 0x334
   38a34:	mov	r0, r3
   38a38:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38a3c:	mov	r3, r0
   38a40:	cmp	r3, #0
   38a44:	beq	38bcc <__assert_fail@plt+0x264e0>
   38a48:	movw	r0, #44620	; 0xae4c
   38a4c:	movt	r0, #6
   38a50:	bl	12398 <gettext@plt>
   38a54:	mov	ip, r0
   38a58:	sub	r3, fp, #812	; 0x32c
   38a5c:	ldrd	r4, [r3, #88]	; 0x58
   38a60:	sub	r3, fp, #812	; 0x32c
   38a64:	ldrd	r0, [r3, #96]	; 0x60
   38a68:	sub	r3, fp, #812	; 0x32c
   38a6c:	ldrd	r2, [r3, #104]	; 0x68
   38a70:	strd	r2, [sp, #8]
   38a74:	strd	r0, [sp]
   38a78:	mov	r2, r4
   38a7c:	mov	r3, r5
   38a80:	mov	r0, ip
   38a84:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38a88:	movw	r0, #44684	; 0xae8c
   38a8c:	movt	r0, #6
   38a90:	bl	12398 <gettext@plt>
   38a94:	mov	r4, r0
   38a98:	sub	r2, fp, #384	; 0x180
   38a9c:	sub	r1, fp, #820	; 0x334
   38aa0:	sub	r0, fp, #212	; 0xd4
   38aa4:	mov	r3, #100	; 0x64
   38aa8:	bl	36d44 <__assert_fail@plt+0x24658>
   38aac:	mov	r3, r0
   38ab0:	mov	r1, r3
   38ab4:	mov	r0, r4
   38ab8:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38abc:	ldr	r3, [fp, #-224]	; 0xffffff20
   38ac0:	cmn	r3, #1
   38ac4:	beq	38af0 <__assert_fail@plt+0x26404>
   38ac8:	ldr	r2, [fp, #-180]	; 0xffffff4c
   38acc:	ldr	r3, [fp, #-224]	; 0xffffff20
   38ad0:	cmp	r2, r3
   38ad4:	beq	38af0 <__assert_fail@plt+0x26404>
   38ad8:	movw	r0, #44712	; 0xaea8
   38adc:	movt	r0, #6
   38ae0:	bl	12398 <gettext@plt>
   38ae4:	mov	r3, r0
   38ae8:	mov	r0, r3
   38aec:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38af0:	sub	r3, fp, #812	; 0x32c
   38af4:	ldrd	r2, [r3, #104]	; 0x68
   38af8:	orrs	r3, r2, r3
   38afc:	bne	38bcc <__assert_fail@plt+0x264e0>
   38b00:	ldr	r2, [fp, #-200]	; 0xffffff38
   38b04:	ldr	r3, [fp, #-880]	; 0xfffffc90
   38b08:	cmp	r2, r3
   38b0c:	bne	38b30 <__assert_fail@plt+0x26444>
   38b10:	sub	r3, fp, #812	; 0x32c
   38b14:	ldrd	r2, [r3, #96]	; 0x60
   38b18:	orrs	r3, r2, r3
   38b1c:	bne	38bcc <__assert_fail@plt+0x264e0>
   38b20:	ldr	r2, [fp, #-196]	; 0xffffff3c
   38b24:	ldr	r3, [fp, #-876]	; 0xfffffc94
   38b28:	cmp	r2, r3
   38b2c:	beq	38bcc <__assert_fail@plt+0x264e0>
   38b30:	movw	r0, #44776	; 0xaee8
   38b34:	movt	r0, #6
   38b38:	bl	12398 <gettext@plt>
   38b3c:	mov	r3, r0
   38b40:	mov	r0, r3
   38b44:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38b48:	movw	r0, #44836	; 0xaf24
   38b4c:	movt	r0, #6
   38b50:	bl	12398 <gettext@plt>
   38b54:	mov	r4, r0
   38b58:	ldr	r2, [fp, #-872]	; 0xfffffc98
   38b5c:	sub	r3, fp, #896	; 0x380
   38b60:	mov	r1, r3
   38b64:	mov	r0, r2
   38b68:	bl	35dbc <__assert_fail@plt+0x236d0>
   38b6c:	mov	r1, r0
   38b70:	ldr	r3, [fp, #-876]	; 0xfffffc94
   38b74:	add	r2, r3, #1
   38b78:	ldr	r3, [fp, #-880]	; 0xfffffc90
   38b7c:	mov	r0, r4
   38b80:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38b84:	movw	r0, #44872	; 0xaf48
   38b88:	movt	r0, #6
   38b8c:	bl	12398 <gettext@plt>
   38b90:	mov	r4, r0
   38b94:	ldr	r2, [fp, #-192]	; 0xffffff40
   38b98:	sub	r3, fp, #896	; 0x380
   38b9c:	mov	r1, r3
   38ba0:	mov	r0, r2
   38ba4:	bl	35dbc <__assert_fail@plt+0x236d0>
   38ba8:	mov	r1, r0
   38bac:	ldr	r3, [fp, #-196]	; 0xffffff3c
   38bb0:	add	r2, r3, #1
   38bb4:	ldr	r3, [fp, #-200]	; 0xffffff38
   38bb8:	mov	r0, r4
   38bbc:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38bc0:	b	38bcc <__assert_fail@plt+0x264e0>
   38bc4:	nop	{0}
   38bc8:	b	397b4 <__assert_fail@plt+0x270c8>
   38bcc:	ldr	r3, [fp, #-644]	; 0xfffffd7c
   38bd0:	cmp	r3, #0
   38bd4:	beq	38d24 <__assert_fail@plt+0x26638>
   38bd8:	mov	r3, #0
   38bdc:	strb	r3, [fp, #-101]	; 0xffffff9b
   38be0:	ldr	r3, [fp, #-176]	; 0xffffff50
   38be4:	str	r3, [fp, #-108]	; 0xffffff94
   38be8:	ldr	r3, [fp, #-796]	; 0xfffffce4
   38bec:	mov	r4, #0
   38bf0:	mov	r5, #0
   38bf4:	mov	r0, r3
   38bf8:	asr	r1, r0, #31
   38bfc:	ldr	r3, [fp, #-108]	; 0xffffff94
   38c00:	mov	r2, r3
   38c04:	asr	r3, r2, #31
   38c08:	subs	ip, r0, r2
   38c0c:	str	ip, [fp, #-1236]	; 0xfffffb2c
   38c10:	sbc	r3, r1, r3
   38c14:	str	r3, [fp, #-1232]	; 0xfffffb30
   38c18:	sub	r3, fp, #1232	; 0x4d0
   38c1c:	sub	r3, r3, #4
   38c20:	ldrd	r2, [r3]
   38c24:	mov	r0, r2
   38c28:	mov	r1, r3
   38c2c:	sub	r3, fp, #908	; 0x38c
   38c30:	strd	r0, [r3]
   38c34:	mov	r2, r4
   38c38:	mov	r3, r5
   38c3c:	mov	r3, r2
   38c40:	and	r3, r3, #1
   38c44:	uxtb	r2, r3
   38c48:	ldrb	r3, [fp, #-101]	; 0xffffff9b
   38c4c:	orr	r3, r2, r3
   38c50:	uxtb	r3, r3
   38c54:	cmp	r3, #0
   38c58:	movne	r3, #1
   38c5c:	moveq	r3, #0
   38c60:	strb	r3, [fp, #-101]	; 0xffffff9b
   38c64:	sub	r3, fp, #908	; 0x38c
   38c68:	ldrd	r0, [r3]
   38c6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38c70:	mov	r2, r3
   38c74:	asr	r3, r2, #31
   38c78:	mov	ip, #0
   38c7c:	subs	r4, r2, r0
   38c80:	sbcs	r5, r3, r1
   38c84:	bvc	38c8c <__assert_fail@plt+0x265a0>
   38c88:	mov	ip, #1
   38c8c:	mov	r2, r4
   38c90:	asr	r3, r2, #31
   38c94:	cmp	r5, r3
   38c98:	cmpeq	r4, r2
   38c9c:	beq	38ca4 <__assert_fail@plt+0x265b8>
   38ca0:	mov	ip, #1
   38ca4:	mov	r3, r4
   38ca8:	str	r3, [fp, #-912]	; 0xfffffc70
   38cac:	mov	r3, ip
   38cb0:	and	r3, r3, #1
   38cb4:	uxtb	r2, r3
   38cb8:	ldrb	r3, [fp, #-101]	; 0xffffff9b
   38cbc:	orr	r3, r2, r3
   38cc0:	uxtb	r3, r3
   38cc4:	cmp	r3, #0
   38cc8:	movne	r3, #1
   38ccc:	moveq	r3, #0
   38cd0:	strb	r3, [fp, #-101]	; 0xffffff9b
   38cd4:	ldrb	r3, [fp, #-101]	; 0xffffff9b
   38cd8:	cmp	r3, #0
   38cdc:	beq	38d1c <__assert_fail@plt+0x26630>
   38ce0:	sub	r3, fp, #820	; 0x334
   38ce4:	mov	r0, r3
   38ce8:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38cec:	mov	r3, r0
   38cf0:	cmp	r3, #0
   38cf4:	beq	397e4 <__assert_fail@plt+0x270f8>
   38cf8:	movw	r0, #44908	; 0xaf6c
   38cfc:	movt	r0, #6
   38d00:	bl	12398 <gettext@plt>
   38d04:	mov	r2, r0
   38d08:	ldr	r3, [fp, #-796]	; 0xfffffce4
   38d0c:	mov	r1, r3
   38d10:	mov	r0, r2
   38d14:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38d18:	b	397b4 <__assert_fail@plt+0x270c8>
   38d1c:	ldr	r3, [fp, #-912]	; 0xfffffc70
   38d20:	str	r3, [fp, #-40]	; 0xffffffd8
   38d24:	sub	r3, fp, #820	; 0x334
   38d28:	mov	r0, r3
   38d2c:	bl	31c48 <__assert_fail@plt+0x1f55c>
   38d30:	mov	r3, r0
   38d34:	cmp	r3, #0
   38d38:	beq	38d80 <__assert_fail@plt+0x26694>
   38d3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38d40:	mov	r2, r3
   38d44:	asr	r3, r2, #31
   38d48:	strd	r2, [fp, #-116]	; 0xffffff8c
   38d4c:	movw	r0, #44952	; 0xaf98
   38d50:	movt	r0, #6
   38d54:	bl	12398 <gettext@plt>
   38d58:	mov	r4, r0
   38d5c:	sub	r2, fp, #384	; 0x180
   38d60:	sub	r1, fp, #820	; 0x334
   38d64:	sub	r0, fp, #212	; 0xd4
   38d68:	mov	r3, #100	; 0x64
   38d6c:	bl	36d44 <__assert_fail@plt+0x24658>
   38d70:	mov	r1, r0
   38d74:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   38d78:	mov	r0, r4
   38d7c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   38d80:	ldr	r3, [fp, #-728]	; 0xfffffd28
   38d84:	mov	r2, r3
   38d88:	asr	r3, r2, #31
   38d8c:	strd	r2, [fp, #-124]	; 0xffffff84
   38d90:	ldr	r3, [fp, #-676]	; 0xfffffd5c
   38d94:	mov	r0, r3
   38d98:	asr	r1, r0, #31
   38d9c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   38da0:	adds	ip, r2, r0
   38da4:	str	ip, [fp, #-1244]	; 0xfffffb24
   38da8:	adc	r3, r3, r1
   38dac:	str	r3, [fp, #-1240]	; 0xfffffb28
   38db0:	sub	r3, fp, #1232	; 0x4d0
   38db4:	sub	r3, r3, #12
   38db8:	ldrd	r2, [r3]
   38dbc:	strd	r2, [fp, #-132]	; 0xffffff7c
   38dc0:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   38dc4:	add	r3, pc, #852	; 0x354
   38dc8:	ldrd	r2, [r3]
   38dcc:	bl	6498c <__assert_fail@plt+0x522a0>
   38dd0:	mov	r0, r2
   38dd4:	mov	r1, r3
   38dd8:	add	r3, pc, #832	; 0x340
   38ddc:	ldrd	r2, [r3]
   38de0:	adds	ip, r0, r2
   38de4:	str	ip, [fp, #-1172]	; 0xfffffb6c
   38de8:	adc	r3, r1, r3
   38dec:	str	r3, [fp, #-1168]	; 0xfffffb70
   38df0:	add	r3, pc, #808	; 0x328
   38df4:	ldrd	r2, [r3]
   38df8:	sub	r1, fp, #1168	; 0x490
   38dfc:	sub	r1, r1, #4
   38e00:	ldrd	r0, [r1]
   38e04:	bl	6498c <__assert_fail@plt+0x522a0>
   38e08:	mov	r3, r2
   38e0c:	str	r3, [fp, #-136]	; 0xffffff78
   38e10:	ldr	r3, [fp, #-136]	; 0xffffff78
   38e14:	mov	r0, r3
   38e18:	asr	r1, r0, #31
   38e1c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   38e20:	subs	ip, r2, r0
   38e24:	str	ip, [fp, #-1180]	; 0xfffffb64
   38e28:	sbc	r3, r3, r1
   38e2c:	str	r3, [fp, #-1176]	; 0xfffffb68
   38e30:	add	r3, pc, #744	; 0x2e8
   38e34:	ldrd	r2, [r3]
   38e38:	sub	r1, fp, #1168	; 0x490
   38e3c:	sub	r1, r1, #12
   38e40:	ldrd	r0, [r1]
   38e44:	bl	6498c <__assert_fail@plt+0x522a0>
   38e48:	mov	r2, r0
   38e4c:	mov	r3, r1
   38e50:	mov	r3, r2
   38e54:	str	r3, [fp, #-140]	; 0xffffff74
   38e58:	sub	r3, fp, #812	; 0x32c
   38e5c:	ldrd	r6, [r3, #112]	; 0x70
   38e60:	mov	r2, #0
   38e64:	mov	r3, #0
   38e68:	sub	r1, fp, #1120	; 0x460
   38e6c:	sub	r1, r1, #12
   38e70:	strd	r2, [r1]
   38e74:	mov	r4, #0
   38e78:	mov	r5, #0
   38e7c:	mov	r4, r7
   38e80:	asr	r5, r7, #31
   38e84:	asr	ip, r6, #31
   38e88:	mov	r2, #3600	; 0xe10
   38e8c:	mov	r3, #0
   38e90:	mov	r0, #0
   38e94:	mov	r1, #0
   38e98:	mov	r0, r3
   38e9c:	asr	r1, r3, #31
   38ea0:	cmp	ip, r4
   38ea4:	bne	38ec0 <__assert_fail@plt+0x267d4>
   38ea8:	mov	r3, #3600	; 0xe10
   38eac:	smull	r2, r3, r6, r3
   38eb0:	sub	r1, fp, #1136	; 0x470
   38eb4:	sub	r1, r1, #4
   38eb8:	strd	r2, [r1]
   38ebc:	b	39018 <__assert_fail@plt+0x2692c>
   38ec0:	mov	r1, r4
   38ec4:	mov	r0, #3600	; 0xe10
   38ec8:	mov	r3, #3600	; 0xe10
   38ecc:	umull	r8, r9, r6, r3
   38ed0:	umull	r2, r3, r0, r1
   38ed4:	mov	r4, r2
   38ed8:	mov	r5, r3
   38edc:	cmp	r1, #0
   38ee0:	bge	38f18 <__assert_fail@plt+0x2682c>
   38ee4:	mov	r2, r0
   38ee8:	mov	r3, #0
   38eec:	mov	r0, #0
   38ef0:	mov	r1, #0
   38ef4:	mov	r1, r2
   38ef8:	mov	r0, #0
   38efc:	subs	r3, r4, r0
   38f00:	str	r3, [fp, #-1252]	; 0xfffffb1c
   38f04:	sbc	r3, r5, r1
   38f08:	str	r3, [fp, #-1248]	; 0xfffffb20
   38f0c:	sub	r3, fp, #1248	; 0x4e0
   38f10:	sub	r3, r3, #4
   38f14:	ldrd	r4, [r3]
   38f18:	mov	r2, #0
   38f1c:	mov	r3, #0
   38f20:	mov	r2, r9
   38f24:	mov	r3, #0
   38f28:	adds	r1, r4, r2
   38f2c:	str	r1, [fp, #-1260]	; 0xfffffb14
   38f30:	adc	r3, r5, r3
   38f34:	str	r3, [fp, #-1256]	; 0xfffffb18
   38f38:	sub	r3, fp, #1248	; 0x4e0
   38f3c:	sub	r3, r3, #12
   38f40:	ldrd	r4, [r3]
   38f44:	mov	r2, #0
   38f48:	mov	r3, #0
   38f4c:	mov	r2, r5
   38f50:	asr	r3, r5, #31
   38f54:	asr	r1, r4, #31
   38f58:	cmp	r1, r2
   38f5c:	bne	38f8c <__assert_fail@plt+0x268a0>
   38f60:	mov	r0, #0
   38f64:	mov	r1, #0
   38f68:	mov	r1, r4
   38f6c:	mov	r0, #0
   38f70:	mov	r2, r8
   38f74:	mov	r3, #0
   38f78:	orr	ip, r0, r2
   38f7c:	str	ip, [fp, #-1140]	; 0xfffffb8c
   38f80:	orr	r3, r1, r3
   38f84:	str	r3, [fp, #-1136]	; 0xfffffb90
   38f88:	b	39018 <__assert_fail@plt+0x2692c>
   38f8c:	mov	r2, r6
   38f90:	mov	r3, r7
   38f94:	mov	r0, #0
   38f98:	mov	r1, #0
   38f9c:	lsl	r1, r3, #3
   38fa0:	orr	r1, r1, r2, lsr #29
   38fa4:	lsl	r0, r2, #3
   38fa8:	mov	r2, r0
   38fac:	mov	r3, r1
   38fb0:	subs	r2, r2, r6
   38fb4:	sbc	r3, r3, r7
   38fb8:	mov	r0, #0
   38fbc:	mov	r1, #0
   38fc0:	lsl	r1, r3, #5
   38fc4:	orr	r1, r1, r2, lsr #27
   38fc8:	lsl	r0, r2, #5
   38fcc:	mov	r2, r0
   38fd0:	mov	r3, r1
   38fd4:	adds	r2, r2, r6
   38fd8:	adc	r3, r3, r7
   38fdc:	mov	r0, #0
   38fe0:	mov	r1, #0
   38fe4:	lsl	r1, r3, #4
   38fe8:	orr	r1, r1, r2, lsr #28
   38fec:	lsl	r0, r2, #4
   38ff0:	mov	r2, r0
   38ff4:	mov	r3, r1
   38ff8:	sub	r1, fp, #1136	; 0x470
   38ffc:	sub	r1, r1, #4
   39000:	strd	r2, [r1]
   39004:	mov	r2, #1
   39008:	mov	r3, #0
   3900c:	sub	r1, fp, #1120	; 0x460
   39010:	sub	r1, r1, #12
   39014:	strd	r2, [r1]
   39018:	sub	r3, fp, #1136	; 0x470
   3901c:	sub	r3, r3, #4
   39020:	ldrd	r2, [r3]
   39024:	mov	r0, r2
   39028:	mov	r1, r3
   3902c:	sub	r3, fp, #924	; 0x39c
   39030:	strd	r0, [r3]
   39034:	sub	r3, fp, #1120	; 0x460
   39038:	sub	r3, r3, #12
   3903c:	ldrd	r2, [r3]
   39040:	mov	r3, r2
   39044:	and	r3, r3, #1
   39048:	uxtb	r3, r3
   3904c:	cmp	r3, #0
   39050:	bne	3939c <__assert_fail@plt+0x26cb0>
   39054:	sub	r3, fp, #924	; 0x39c
   39058:	ldrd	r0, [r3]
   3905c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39060:	mov	r2, r3
   39064:	asr	r3, r2, #31
   39068:	mov	r6, #0
   3906c:	mov	r7, #0
   39070:	adds	r4, r2, r0
   39074:	adcs	r5, r3, r1
   39078:	bvc	39084 <__assert_fail@plt+0x26998>
   3907c:	mov	r6, #1
   39080:	mov	r7, #0
   39084:	mov	r2, r4
   39088:	mov	r3, r5
   3908c:	mov	r0, r2
   39090:	mov	r1, r3
   39094:	sub	r3, fp, #924	; 0x39c
   39098:	strd	r0, [r3, #-8]
   3909c:	mov	r2, r6
   390a0:	mov	r3, r7
   390a4:	mov	r3, r2
   390a8:	and	r3, r3, #1
   390ac:	uxtb	r3, r3
   390b0:	cmp	r3, #0
   390b4:	bne	3939c <__assert_fail@plt+0x26cb0>
   390b8:	sub	r3, fp, #812	; 0x32c
   390bc:	ldrd	r6, [r3, #120]	; 0x78
   390c0:	mov	r2, #0
   390c4:	mov	r3, #0
   390c8:	sub	r1, fp, #1120	; 0x460
   390cc:	sub	r1, r1, #12
   390d0:	strd	r2, [r1]
   390d4:	mov	r4, #0
   390d8:	mov	r5, #0
   390dc:	mov	r4, r7
   390e0:	asr	r5, r7, #31
   390e4:	asr	ip, r6, #31
   390e8:	mov	r2, #60	; 0x3c
   390ec:	mov	r3, #0
   390f0:	mov	r0, #0
   390f4:	mov	r1, #0
   390f8:	mov	r0, r3
   390fc:	asr	r1, r3, #31
   39100:	cmp	ip, r4
   39104:	bne	39128 <__assert_fail@plt+0x26a3c>
   39108:	mov	r3, #60	; 0x3c
   3910c:	smull	r2, r3, r6, r3
   39110:	sub	r1, fp, #1136	; 0x470
   39114:	sub	r1, r1, #12
   39118:	strd	r2, [r1]
   3911c:	b	3925c <__assert_fail@plt+0x26b70>
   39120:	blcc	fe6eb928 <stdout@@GLIBC_2.4+0xfe66f1f4>
   39124:	andeq	r0, r0, r0
   39128:	mov	r1, r4
   3912c:	mov	r0, #60	; 0x3c
   39130:	mov	r3, #60	; 0x3c
   39134:	umull	r8, r9, r6, r3
   39138:	umull	r2, r3, r0, r1
   3913c:	mov	r4, r2
   39140:	mov	r5, r3
   39144:	cmp	r1, #0
   39148:	bge	39180 <__assert_fail@plt+0x26a94>
   3914c:	mov	r2, r0
   39150:	mov	r3, #0
   39154:	mov	r0, #0
   39158:	mov	r1, #0
   3915c:	mov	r1, r2
   39160:	mov	r0, #0
   39164:	subs	r3, r4, r0
   39168:	str	r3, [fp, #-1268]	; 0xfffffb0c
   3916c:	sbc	r3, r5, r1
   39170:	str	r3, [fp, #-1264]	; 0xfffffb10
   39174:	sub	r3, fp, #1264	; 0x4f0
   39178:	sub	r3, r3, #4
   3917c:	ldrd	r4, [r3]
   39180:	mov	r2, #0
   39184:	mov	r3, #0
   39188:	mov	r2, r9
   3918c:	mov	r3, #0
   39190:	adds	r1, r4, r2
   39194:	str	r1, [fp, #-1276]	; 0xfffffb04
   39198:	adc	r3, r5, r3
   3919c:	str	r3, [fp, #-1272]	; 0xfffffb08
   391a0:	sub	r3, fp, #1264	; 0x4f0
   391a4:	sub	r3, r3, #12
   391a8:	ldrd	r4, [r3]
   391ac:	mov	r2, #0
   391b0:	mov	r3, #0
   391b4:	mov	r2, r5
   391b8:	asr	r3, r5, #31
   391bc:	asr	r1, r4, #31
   391c0:	cmp	r1, r2
   391c4:	bne	391f4 <__assert_fail@plt+0x26b08>
   391c8:	mov	r0, #0
   391cc:	mov	r1, #0
   391d0:	mov	r1, r4
   391d4:	mov	r0, #0
   391d8:	mov	r2, r8
   391dc:	mov	r3, #0
   391e0:	orr	ip, r0, r2
   391e4:	str	ip, [fp, #-1148]	; 0xfffffb84
   391e8:	orr	r3, r1, r3
   391ec:	str	r3, [fp, #-1144]	; 0xfffffb88
   391f0:	b	3925c <__assert_fail@plt+0x26b70>
   391f4:	mov	r2, r6
   391f8:	mov	r3, r7
   391fc:	mov	r0, #0
   39200:	mov	r1, #0
   39204:	lsl	r1, r3, #4
   39208:	orr	r1, r1, r2, lsr #28
   3920c:	lsl	r0, r2, #4
   39210:	mov	r2, r0
   39214:	mov	r3, r1
   39218:	subs	r2, r2, r6
   3921c:	sbc	r3, r3, r7
   39220:	mov	r0, #0
   39224:	mov	r1, #0
   39228:	lsl	r1, r3, #2
   3922c:	orr	r1, r1, r2, lsr #30
   39230:	lsl	r0, r2, #2
   39234:	mov	r2, r0
   39238:	mov	r3, r1
   3923c:	sub	r1, fp, #1136	; 0x470
   39240:	sub	r1, r1, #12
   39244:	strd	r2, [r1]
   39248:	mov	r2, #1
   3924c:	mov	r3, #0
   39250:	sub	r1, fp, #1120	; 0x460
   39254:	sub	r1, r1, #12
   39258:	strd	r2, [r1]
   3925c:	sub	r3, fp, #1136	; 0x470
   39260:	sub	r3, r3, #12
   39264:	ldrd	r2, [r3]
   39268:	sub	r1, fp, #940	; 0x3ac
   3926c:	strd	r2, [r1]
   39270:	sub	r3, fp, #1120	; 0x460
   39274:	sub	r3, r3, #12
   39278:	ldrd	r2, [r3]
   3927c:	mov	r3, r2
   39280:	and	r3, r3, #1
   39284:	uxtb	r3, r3
   39288:	cmp	r3, #0
   3928c:	bne	3939c <__assert_fail@plt+0x26cb0>
   39290:	sub	r3, fp, #924	; 0x39c
   39294:	ldrd	r0, [r3, #-8]
   39298:	sub	r3, fp, #940	; 0x3ac
   3929c:	ldrd	r2, [r3]
   392a0:	mov	r4, #0
   392a4:	mov	r5, #0
   392a8:	adds	r6, r0, r2
   392ac:	adcs	r7, r1, r3
   392b0:	bvc	392bc <__assert_fail@plt+0x26bd0>
   392b4:	mov	r4, #1
   392b8:	mov	r5, #0
   392bc:	mov	r2, r6
   392c0:	mov	r3, r7
   392c4:	sub	r1, fp, #940	; 0x3ac
   392c8:	strd	r2, [r1, #-8]
   392cc:	mov	r2, r4
   392d0:	mov	r3, r5
   392d4:	mov	r3, r2
   392d8:	and	r3, r3, #1
   392dc:	uxtb	r3, r3
   392e0:	cmp	r3, #0
   392e4:	bne	3939c <__assert_fail@plt+0x26cb0>
   392e8:	sub	r3, fp, #940	; 0x3ac
   392ec:	ldrd	r0, [r3, #-8]
   392f0:	sub	r3, fp, #812	; 0x32c
   392f4:	ldrd	r2, [r3, #128]	; 0x80
   392f8:	mov	r4, #0
   392fc:	mov	r5, #0
   39300:	adds	r6, r0, r2
   39304:	adcs	r7, r1, r3
   39308:	bvc	39314 <__assert_fail@plt+0x26c28>
   3930c:	mov	r4, #1
   39310:	mov	r5, #0
   39314:	mov	r2, r6
   39318:	mov	r3, r7
   3931c:	sub	r1, fp, #956	; 0x3bc
   39320:	strd	r2, [r1]
   39324:	mov	r2, r4
   39328:	mov	r3, r5
   3932c:	mov	r3, r2
   39330:	and	r3, r3, #1
   39334:	uxtb	r3, r3
   39338:	cmp	r3, #0
   3933c:	bne	3939c <__assert_fail@plt+0x26cb0>
   39340:	sub	r3, fp, #956	; 0x3bc
   39344:	ldrd	r4, [r3]
   39348:	ldr	r3, [fp, #-140]	; 0xffffff74
   3934c:	mov	r0, r3
   39350:	asr	r1, r0, #31
   39354:	mov	ip, #0
   39358:	adds	r2, r4, r0
   3935c:	adcs	r3, r5, r1
   39360:	bvc	39368 <__assert_fail@plt+0x26c7c>
   39364:	mov	ip, #1
   39368:	mov	r0, r2
   3936c:	asr	r1, r0, #31
   39370:	cmp	r3, r1
   39374:	cmpeq	r2, r0
   39378:	beq	39380 <__assert_fail@plt+0x26c94>
   3937c:	mov	ip, #1
   39380:	mov	r3, r2
   39384:	str	r3, [fp, #-960]	; 0xfffffc40
   39388:	mov	r3, ip
   3938c:	and	r3, r3, #1
   39390:	uxtb	r3, r3
   39394:	cmp	r3, #0
   39398:	beq	393d0 <__assert_fail@plt+0x26ce4>
   3939c:	sub	r3, fp, #820	; 0x334
   393a0:	mov	r0, r3
   393a4:	bl	31c48 <__assert_fail@plt+0x1f55c>
   393a8:	mov	r3, r0
   393ac:	cmp	r3, #0
   393b0:	beq	397ec <__assert_fail@plt+0x27100>
   393b4:	movw	r0, #44980	; 0xafb4
   393b8:	movt	r0, #6
   393bc:	bl	12398 <gettext@plt>
   393c0:	mov	r3, r0
   393c4:	mov	r0, r3
   393c8:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   393cc:	b	397b4 <__assert_fail@plt+0x270c8>
   393d0:	ldr	r2, [fp, #-960]	; 0xfffffc40
   393d4:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   393d8:	str	r2, [r3]
   393dc:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   393e0:	ldr	r2, [fp, #-136]	; 0xffffff78
   393e4:	str	r2, [r3, #4]
   393e8:	sub	r3, fp, #820	; 0x334
   393ec:	mov	r0, r3
   393f0:	bl	31c48 <__assert_fail@plt+0x1f55c>
   393f4:	mov	r3, r0
   393f8:	cmp	r3, #0
   393fc:	beq	39558 <__assert_fail@plt+0x26e6c>
   39400:	sub	r3, fp, #812	; 0x32c
   39404:	ldrd	r0, [r3, #112]	; 0x70
   39408:	sub	r3, fp, #812	; 0x32c
   3940c:	ldrd	r2, [r3, #120]	; 0x78
   39410:	orr	ip, r0, r2
   39414:	str	ip, [fp, #-1188]	; 0xfffffb5c
   39418:	orr	r3, r1, r3
   3941c:	str	r3, [fp, #-1184]	; 0xfffffb60
   39420:	sub	r3, fp, #812	; 0x32c
   39424:	ldrd	r2, [r3, #128]	; 0x80
   39428:	sub	r1, fp, #1184	; 0x4a0
   3942c:	sub	r1, r1, #4
   39430:	ldrd	r0, [r1]
   39434:	mov	ip, r0
   39438:	orr	ip, ip, r2
   3943c:	str	ip, [fp, #-1196]	; 0xfffffb54
   39440:	orr	r3, r1, r3
   39444:	str	r3, [fp, #-1192]	; 0xfffffb58
   39448:	ldr	r3, [fp, #-676]	; 0xfffffd5c
   3944c:	mov	r2, r3
   39450:	asr	r3, r2, #31
   39454:	sub	r1, fp, #1184	; 0x4a0
   39458:	sub	r1, r1, #12
   3945c:	ldrd	r0, [r1]
   39460:	mov	ip, r0
   39464:	orr	ip, ip, r2
   39468:	str	ip, [fp, #-1204]	; 0xfffffb4c
   3946c:	orr	r3, r1, r3
   39470:	str	r3, [fp, #-1200]	; 0xfffffb50
   39474:	sub	r3, fp, #1200	; 0x4b0
   39478:	sub	r3, r3, #4
   3947c:	ldrd	r2, [r3]
   39480:	orrs	r3, r2, r3
   39484:	beq	39558 <__assert_fail@plt+0x26e6c>
   39488:	movw	r0, #45028	; 0xafe4
   3948c:	movt	r0, #6
   39490:	bl	12398 <gettext@plt>
   39494:	mov	lr, r0
   39498:	sub	r3, fp, #812	; 0x32c
   3949c:	ldrd	r4, [r3, #112]	; 0x70
   394a0:	sub	r3, fp, #812	; 0x32c
   394a4:	ldrd	r2, [r3, #120]	; 0x78
   394a8:	sub	r1, fp, #812	; 0x32c
   394ac:	ldrd	r0, [r1, #128]	; 0x80
   394b0:	ldr	ip, [fp, #-676]	; 0xfffffd5c
   394b4:	str	ip, [sp, #16]
   394b8:	strd	r0, [sp, #8]
   394bc:	strd	r2, [sp]
   394c0:	mov	r2, r4
   394c4:	mov	r3, r5
   394c8:	mov	r0, lr
   394cc:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   394d0:	ldr	r3, [fp, #-960]	; 0xfffffc40
   394d4:	mov	r2, r3
   394d8:	asr	r3, r2, #31
   394dc:	strd	r2, [fp, #-148]	; 0xffffff6c
   394e0:	movw	r0, #45104	; 0xb030
   394e4:	movt	r0, #6
   394e8:	bl	12398 <gettext@plt>
   394ec:	mov	r1, r0
   394f0:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   394f4:	mov	r0, r1
   394f8:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   394fc:	ldr	r3, [fp, #-180]	; 0xffffff4c
   39500:	cmn	r3, #1
   39504:	beq	39558 <__assert_fail@plt+0x26e6c>
   39508:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   3950c:	sub	r3, fp, #1088	; 0x440
   39510:	sub	r3, r3, #12
   39514:	sub	r3, r3, #4
   39518:	mov	r2, r3
   3951c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39520:	bl	5f3a4 <__assert_fail@plt+0x4ccb8>
   39524:	mov	r3, r0
   39528:	cmp	r3, #0
   3952c:	beq	39558 <__assert_fail@plt+0x26e6c>
   39530:	ldr	r2, [fp, #-180]	; 0xffffff4c
   39534:	ldr	r3, [fp, #-1072]	; 0xfffffbd0
   39538:	cmp	r2, r3
   3953c:	beq	39558 <__assert_fail@plt+0x26e6c>
   39540:	movw	r0, #45140	; 0xb054
   39544:	movt	r0, #6
   39548:	bl	12398 <gettext@plt>
   3954c:	mov	r3, r0
   39550:	mov	r0, r3
   39554:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   39558:	sub	r3, fp, #820	; 0x334
   3955c:	mov	r0, r3
   39560:	bl	31c48 <__assert_fail@plt+0x1f55c>
   39564:	mov	r3, r0
   39568:	cmp	r3, #0
   3956c:	beq	39780 <__assert_fail@plt+0x27094>
   39570:	ldr	r3, [fp, #8]
   39574:	cmp	r3, #0
   39578:	bne	39598 <__assert_fail@plt+0x26eac>
   3957c:	movw	r0, #45204	; 0xb094
   39580:	movt	r0, #6
   39584:	bl	12398 <gettext@plt>
   39588:	mov	r3, r0
   3958c:	mov	r0, r3
   39590:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   39594:	b	395ec <__assert_fail@plt+0x26f00>
   39598:	movw	r1, #43560	; 0xaa28
   3959c:	movt	r1, #6
   395a0:	ldr	r0, [fp, #8]
   395a4:	bl	11ffc <strcmp@plt>
   395a8:	mov	r3, r0
   395ac:	cmp	r3, #0
   395b0:	bne	395d0 <__assert_fail@plt+0x26ee4>
   395b4:	movw	r0, #45232	; 0xb0b0
   395b8:	movt	r0, #6
   395bc:	bl	12398 <gettext@plt>
   395c0:	mov	r3, r0
   395c4:	mov	r0, r3
   395c8:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   395cc:	b	395ec <__assert_fail@plt+0x26f00>
   395d0:	movw	r0, #45260	; 0xb0cc
   395d4:	movt	r0, #6
   395d8:	bl	12398 <gettext@plt>
   395dc:	mov	r3, r0
   395e0:	ldr	r1, [fp, #8]
   395e4:	mov	r0, r3
   395e8:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   395ec:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   395f0:	ldr	r3, [r3]
   395f4:	mov	r2, r3
   395f8:	asr	r3, r2, #31
   395fc:	strd	r2, [fp, #-156]	; 0xffffff64
   39600:	ldr	r3, [fp, #-1112]	; 0xfffffba8
   39604:	ldr	r3, [r3, #4]
   39608:	str	r3, [fp, #-160]	; 0xffffff60
   3960c:	movw	r0, #45300	; 0xb0f4
   39610:	movt	r0, #6
   39614:	bl	12398 <gettext@plt>
   39618:	mov	r1, r0
   3961c:	ldr	r3, [fp, #-160]	; 0xffffff60
   39620:	str	r3, [sp]
   39624:	ldrd	r2, [fp, #-156]	; 0xffffff64
   39628:	mov	r0, r1
   3962c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   39630:	ldr	r2, [fp, #-1112]	; 0xfffffba8
   39634:	sub	r3, fp, #1088	; 0x440
   39638:	sub	r3, r3, #12
   3963c:	sub	r3, r3, #4
   39640:	mov	r1, r3
   39644:	mov	r0, r2
   39648:	bl	11fcc <gmtime_r@plt>
   3964c:	mov	r3, r0
   39650:	cmp	r3, #0
   39654:	movne	r3, #1
   39658:	moveq	r3, #0
   3965c:	strb	r3, [fp, #-161]	; 0xffffff5f
   39660:	ldrb	r3, [fp, #-161]	; 0xffffff5f
   39664:	cmp	r3, #0
   39668:	beq	396a8 <__assert_fail@plt+0x26fbc>
   3966c:	movw	r0, #45336	; 0xb118
   39670:	movt	r0, #6
   39674:	bl	12398 <gettext@plt>
   39678:	mov	r4, r0
   3967c:	sub	r2, fp, #384	; 0x180
   39680:	sub	r0, fp, #1088	; 0x440
   39684:	sub	r0, r0, #12
   39688:	sub	r0, r0, #4
   3968c:	mov	r3, #100	; 0x64
   39690:	mov	r1, #0
   39694:	bl	36d44 <__assert_fail@plt+0x24658>
   39698:	mov	r3, r0
   3969c:	mov	r1, r3
   396a0:	mov	r0, r4
   396a4:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   396a8:	ldr	r1, [fp, #-1112]	; 0xfffffba8
   396ac:	sub	r3, fp, #1040	; 0x410
   396b0:	sub	r3, r3, #12
   396b4:	sub	r3, r3, #8
   396b8:	mov	r2, r3
   396bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   396c0:	bl	5f3a4 <__assert_fail@plt+0x4ccb8>
   396c4:	mov	r3, r0
   396c8:	cmp	r3, #0
   396cc:	beq	39780 <__assert_fail@plt+0x27094>
   396d0:	mov	r3, #1
   396d4:	strb	r3, [fp, #-162]	; 0xffffff5e
   396d8:	ldr	r3, [fp, #-1024]	; 0xfffffc00
   396dc:	str	r3, [fp, #-168]	; 0xffffff58
   396e0:	ldrb	r3, [fp, #-162]	; 0xffffff5e
   396e4:	cmp	r3, #0
   396e8:	beq	39744 <__assert_fail@plt+0x27058>
   396ec:	movw	r0, #45356	; 0xb12c
   396f0:	movt	r0, #6
   396f4:	bl	12398 <gettext@plt>
   396f8:	mov	r4, r0
   396fc:	sub	r2, fp, #384	; 0x180
   39700:	sub	r0, fp, #1040	; 0x410
   39704:	sub	r0, r0, #12
   39708:	sub	r0, r0, #8
   3970c:	mov	r3, #100	; 0x64
   39710:	mov	r1, #0
   39714:	bl	36d44 <__assert_fail@plt+0x24658>
   39718:	mov	r5, r0
   3971c:	sub	r3, fp, #284	; 0x11c
   39720:	mov	r1, r3
   39724:	ldr	r0, [fp, #-168]	; 0xffffff58
   39728:	bl	32560 <__assert_fail@plt+0x1fe74>
   3972c:	mov	r3, r0
   39730:	mov	r2, r3
   39734:	mov	r1, r5
   39738:	mov	r0, r4
   3973c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   39740:	b	39780 <__assert_fail@plt+0x27094>
   39744:	movw	r0, #45376	; 0xb140
   39748:	movt	r0, #6
   3974c:	bl	12398 <gettext@plt>
   39750:	mov	r4, r0
   39754:	sub	r2, fp, #384	; 0x180
   39758:	sub	r0, fp, #1040	; 0x410
   3975c:	sub	r0, r0, #12
   39760:	sub	r0, r0, #8
   39764:	mov	r3, #100	; 0x64
   39768:	mov	r1, #0
   3976c:	bl	36d44 <__assert_fail@plt+0x24658>
   39770:	mov	r3, r0
   39774:	mov	r1, r3
   39778:	mov	r0, r4
   3977c:	bl	31bd4 <__assert_fail@plt+0x1f4e8>
   39780:	mov	r3, #1
   39784:	strb	r3, [fp, #-29]	; 0xffffffe3
   39788:	b	397f0 <__assert_fail@plt+0x27104>
   3978c:	nop	{0}
   39790:	b	397f0 <__assert_fail@plt+0x27104>
   39794:	nop	{0}
   39798:	b	397f0 <__assert_fail@plt+0x27104>
   3979c:	nop	{0}
   397a0:	b	397f0 <__assert_fail@plt+0x27104>
   397a4:	nop	{0}
   397a8:	b	397f0 <__assert_fail@plt+0x27104>
   397ac:	nop	{0}
   397b0:	b	397f0 <__assert_fail@plt+0x27104>
   397b4:	nop	{0}
   397b8:	b	397f0 <__assert_fail@plt+0x27104>
   397bc:	nop	{0}
   397c0:	b	397f0 <__assert_fail@plt+0x27104>
   397c4:	nop	{0}
   397c8:	b	397f0 <__assert_fail@plt+0x27104>
   397cc:	nop	{0}
   397d0:	b	397f0 <__assert_fail@plt+0x27104>
   397d4:	nop	{0}
   397d8:	b	397f0 <__assert_fail@plt+0x27104>
   397dc:	nop	{0}
   397e0:	b	397f0 <__assert_fail@plt+0x27104>
   397e4:	nop	{0}
   397e8:	b	397f0 <__assert_fail@plt+0x27104>
   397ec:	nop	{0}
   397f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   397f4:	ldr	r3, [fp, #4]
   397f8:	cmp	r2, r3
   397fc:	beq	39808 <__assert_fail@plt+0x2711c>
   39800:	ldr	r0, [fp, #-44]	; 0xffffffd4
   39804:	bl	5f088 <__assert_fail@plt+0x4c99c>
   39808:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3980c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   39810:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   39814:	mov	r0, r3
   39818:	sub	sp, fp, #28
   3981c:	ldrd	r4, [sp]
   39820:	ldrd	r6, [sp, #8]
   39824:	ldrd	r8, [sp, #16]
   39828:	ldr	fp, [sp, #24]
   3982c:	add	sp, sp, #28
   39830:	pop	{pc}		; (ldr pc, [sp], #4)
   39834:	str	fp, [sp, #-8]!
   39838:	str	lr, [sp, #4]
   3983c:	add	fp, sp, #4
   39840:	sub	sp, sp, #40	; 0x28
   39844:	str	r0, [fp, #-24]	; 0xffffffe8
   39848:	str	r1, [fp, #-28]	; 0xffffffe4
   3984c:	str	r2, [fp, #-32]	; 0xffffffe0
   39850:	movw	r0, #45416	; 0xb168
   39854:	movt	r0, #6
   39858:	bl	122f0 <getenv@plt>
   3985c:	str	r0, [fp, #-8]
   39860:	ldr	r0, [fp, #-8]
   39864:	bl	5eda8 <__assert_fail@plt+0x4c6bc>
   39868:	str	r0, [fp, #-12]
   3986c:	ldr	r3, [fp, #-12]
   39870:	cmp	r3, #0
   39874:	bne	39880 <__assert_fail@plt+0x27194>
   39878:	mov	r3, #0
   3987c:	b	398b8 <__assert_fail@plt+0x271cc>
   39880:	ldr	r3, [fp, #-8]
   39884:	str	r3, [sp, #4]
   39888:	ldr	r3, [fp, #-12]
   3988c:	str	r3, [sp]
   39890:	mov	r3, #0
   39894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   39898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3989c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   398a0:	bl	373b8 <__assert_fail@plt+0x24ccc>
   398a4:	mov	r3, r0
   398a8:	strb	r3, [fp, #-13]
   398ac:	ldr	r0, [fp, #-12]
   398b0:	bl	5f088 <__assert_fail@plt+0x4c99c>
   398b4:	ldrb	r3, [fp, #-13]
   398b8:	mov	r0, r3
   398bc:	sub	sp, fp, #4
   398c0:	ldr	fp, [sp]
   398c4:	add	sp, sp, #4
   398c8:	pop	{pc}		; (ldr pc, [sp], #4)
   398cc:	str	fp, [sp, #-8]!
   398d0:	str	lr, [sp, #4]
   398d4:	add	fp, sp, #4
   398d8:	sub	sp, sp, #16
   398dc:	str	r0, [fp, #-16]
   398e0:	ldr	r3, [fp, #-16]
   398e4:	cmp	r3, #0
   398e8:	bne	39910 <__assert_fail@plt+0x27224>
   398ec:	movw	r3, #50984	; 0xc728
   398f0:	movt	r3, #7
   398f4:	ldr	r3, [r3]
   398f8:	mov	r2, #55	; 0x37
   398fc:	mov	r1, #1
   39900:	movw	r0, #45604	; 0xb224
   39904:	movt	r0, #6
   39908:	bl	12224 <fwrite@plt>
   3990c:	bl	12698 <abort@plt>
   39910:	mov	r1, #47	; 0x2f
   39914:	ldr	r0, [fp, #-16]
   39918:	bl	12548 <strrchr@plt>
   3991c:	str	r0, [fp, #-8]
   39920:	ldr	r3, [fp, #-8]
   39924:	cmp	r3, #0
   39928:	beq	39938 <__assert_fail@plt+0x2724c>
   3992c:	ldr	r3, [fp, #-8]
   39930:	add	r3, r3, #1
   39934:	b	3993c <__assert_fail@plt+0x27250>
   39938:	ldr	r3, [fp, #-16]
   3993c:	str	r3, [fp, #-12]
   39940:	ldr	r2, [fp, #-12]
   39944:	ldr	r3, [fp, #-16]
   39948:	sub	r3, r2, r3
   3994c:	cmp	r3, #6
   39950:	ble	399c0 <__assert_fail@plt+0x272d4>
   39954:	ldr	r3, [fp, #-12]
   39958:	sub	r3, r3, #7
   3995c:	mov	r2, #7
   39960:	movw	r1, #45660	; 0xb25c
   39964:	movt	r1, #6
   39968:	mov	r0, r3
   3996c:	bl	1268c <strncmp@plt>
   39970:	mov	r3, r0
   39974:	cmp	r3, #0
   39978:	bne	399c0 <__assert_fail@plt+0x272d4>
   3997c:	ldr	r3, [fp, #-12]
   39980:	str	r3, [fp, #-16]
   39984:	mov	r2, #3
   39988:	movw	r1, #45668	; 0xb264
   3998c:	movt	r1, #6
   39990:	ldr	r0, [fp, #-12]
   39994:	bl	1268c <strncmp@plt>
   39998:	mov	r3, r0
   3999c:	cmp	r3, #0
   399a0:	bne	399c0 <__assert_fail@plt+0x272d4>
   399a4:	ldr	r3, [fp, #-12]
   399a8:	add	r3, r3, #3
   399ac:	str	r3, [fp, #-16]
   399b0:	movw	r3, #50968	; 0xc718
   399b4:	movt	r3, #7
   399b8:	ldr	r2, [fp, #-16]
   399bc:	str	r2, [r3]
   399c0:	movw	r3, #52964	; 0xcee4
   399c4:	movt	r3, #7
   399c8:	ldr	r2, [fp, #-16]
   399cc:	str	r2, [r3]
   399d0:	movw	r3, #50976	; 0xc720
   399d4:	movt	r3, #7
   399d8:	ldr	r2, [fp, #-16]
   399dc:	str	r2, [r3]
   399e0:	nop	{0}
   399e4:	sub	sp, fp, #4
   399e8:	ldr	fp, [sp]
   399ec:	add	sp, sp, #4
   399f0:	pop	{pc}		; (ldr pc, [sp], #4)
   399f4:	str	fp, [sp, #-8]!
   399f8:	str	lr, [sp, #4]
   399fc:	add	fp, sp, #4
   39a00:	sub	sp, sp, #16
   39a04:	str	r0, [fp, #-16]
   39a08:	bl	12404 <__errno_location@plt>
   39a0c:	mov	r3, r0
   39a10:	ldr	r3, [r3]
   39a14:	str	r3, [fp, #-8]
   39a18:	ldr	r3, [fp, #-16]
   39a1c:	cmp	r3, #0
   39a20:	beq	39a2c <__assert_fail@plt+0x27340>
   39a24:	ldr	r3, [fp, #-16]
   39a28:	b	39a34 <__assert_fail@plt+0x27348>
   39a2c:	movw	r3, #52968	; 0xcee8
   39a30:	movt	r3, #7
   39a34:	mov	r1, #48	; 0x30
   39a38:	mov	r0, r3
   39a3c:	bl	3e00c <__assert_fail@plt+0x2b920>
   39a40:	mov	r3, r0
   39a44:	str	r3, [fp, #-12]
   39a48:	bl	12404 <__errno_location@plt>
   39a4c:	mov	r2, r0
   39a50:	ldr	r3, [fp, #-8]
   39a54:	str	r3, [r2]
   39a58:	ldr	r3, [fp, #-12]
   39a5c:	mov	r0, r3
   39a60:	sub	sp, fp, #4
   39a64:	ldr	fp, [sp]
   39a68:	add	sp, sp, #4
   39a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   39a70:	push	{fp}		; (str fp, [sp, #-4]!)
   39a74:	add	fp, sp, #0
   39a78:	sub	sp, sp, #12
   39a7c:	str	r0, [fp, #-8]
   39a80:	ldr	r3, [fp, #-8]
   39a84:	cmp	r3, #0
   39a88:	beq	39a94 <__assert_fail@plt+0x273a8>
   39a8c:	ldr	r3, [fp, #-8]
   39a90:	b	39a9c <__assert_fail@plt+0x273b0>
   39a94:	movw	r3, #52968	; 0xcee8
   39a98:	movt	r3, #7
   39a9c:	ldr	r3, [r3]
   39aa0:	mov	r0, r3
   39aa4:	add	sp, fp, #0
   39aa8:	pop	{fp}		; (ldr fp, [sp], #4)
   39aac:	bx	lr
   39ab0:	push	{fp}		; (str fp, [sp, #-4]!)
   39ab4:	add	fp, sp, #0
   39ab8:	sub	sp, sp, #12
   39abc:	str	r0, [fp, #-8]
   39ac0:	str	r1, [fp, #-12]
   39ac4:	ldr	r3, [fp, #-8]
   39ac8:	cmp	r3, #0
   39acc:	beq	39ad8 <__assert_fail@plt+0x273ec>
   39ad0:	ldr	r3, [fp, #-8]
   39ad4:	b	39ae0 <__assert_fail@plt+0x273f4>
   39ad8:	movw	r3, #52968	; 0xcee8
   39adc:	movt	r3, #7
   39ae0:	ldr	r2, [fp, #-12]
   39ae4:	str	r2, [r3]
   39ae8:	nop	{0}
   39aec:	add	sp, fp, #0
   39af0:	pop	{fp}		; (ldr fp, [sp], #4)
   39af4:	bx	lr
   39af8:	push	{fp}		; (str fp, [sp, #-4]!)
   39afc:	add	fp, sp, #0
   39b00:	sub	sp, sp, #36	; 0x24
   39b04:	str	r0, [fp, #-24]	; 0xffffffe8
   39b08:	mov	r3, r1
   39b0c:	str	r2, [fp, #-32]	; 0xffffffe0
   39b10:	strb	r3, [fp, #-25]	; 0xffffffe7
   39b14:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   39b18:	strb	r3, [fp, #-5]
   39b1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39b20:	cmp	r3, #0
   39b24:	beq	39b30 <__assert_fail@plt+0x27444>
   39b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39b2c:	b	39b38 <__assert_fail@plt+0x2744c>
   39b30:	movw	r3, #52968	; 0xcee8
   39b34:	movt	r3, #7
   39b38:	add	r2, r3, #8
   39b3c:	ldrb	r3, [fp, #-5]
   39b40:	lsr	r3, r3, #5
   39b44:	uxtb	r3, r3
   39b48:	lsl	r3, r3, #2
   39b4c:	add	r3, r2, r3
   39b50:	str	r3, [fp, #-12]
   39b54:	ldrb	r3, [fp, #-5]
   39b58:	and	r3, r3, #31
   39b5c:	str	r3, [fp, #-16]
   39b60:	ldr	r3, [fp, #-12]
   39b64:	ldr	r2, [r3]
   39b68:	ldr	r3, [fp, #-16]
   39b6c:	lsr	r3, r2, r3
   39b70:	and	r3, r3, #1
   39b74:	str	r3, [fp, #-20]	; 0xffffffec
   39b78:	ldr	r3, [fp, #-12]
   39b7c:	ldr	r3, [r3]
   39b80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   39b84:	and	r1, r2, #1
   39b88:	ldr	r2, [fp, #-20]	; 0xffffffec
   39b8c:	eor	r1, r1, r2
   39b90:	ldr	r2, [fp, #-16]
   39b94:	lsl	r2, r1, r2
   39b98:	eor	r2, r2, r3
   39b9c:	ldr	r3, [fp, #-12]
   39ba0:	str	r2, [r3]
   39ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   39ba8:	mov	r0, r3
   39bac:	add	sp, fp, #0
   39bb0:	pop	{fp}		; (ldr fp, [sp], #4)
   39bb4:	bx	lr
   39bb8:	push	{fp}		; (str fp, [sp, #-4]!)
   39bbc:	add	fp, sp, #0
   39bc0:	sub	sp, sp, #20
   39bc4:	str	r0, [fp, #-16]
   39bc8:	str	r1, [fp, #-20]	; 0xffffffec
   39bcc:	ldr	r3, [fp, #-16]
   39bd0:	cmp	r3, #0
   39bd4:	bne	39be4 <__assert_fail@plt+0x274f8>
   39bd8:	movw	r3, #52968	; 0xcee8
   39bdc:	movt	r3, #7
   39be0:	str	r3, [fp, #-16]
   39be4:	ldr	r3, [fp, #-16]
   39be8:	ldr	r3, [r3, #4]
   39bec:	str	r3, [fp, #-8]
   39bf0:	ldr	r3, [fp, #-16]
   39bf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   39bf8:	str	r2, [r3, #4]
   39bfc:	ldr	r3, [fp, #-8]
   39c00:	mov	r0, r3
   39c04:	add	sp, fp, #0
   39c08:	pop	{fp}		; (ldr fp, [sp], #4)
   39c0c:	bx	lr
   39c10:	str	fp, [sp, #-8]!
   39c14:	str	lr, [sp, #4]
   39c18:	add	fp, sp, #4
   39c1c:	sub	sp, sp, #16
   39c20:	str	r0, [fp, #-8]
   39c24:	str	r1, [fp, #-12]
   39c28:	str	r2, [fp, #-16]
   39c2c:	ldr	r3, [fp, #-8]
   39c30:	cmp	r3, #0
   39c34:	bne	39c44 <__assert_fail@plt+0x27558>
   39c38:	movw	r3, #52968	; 0xcee8
   39c3c:	movt	r3, #7
   39c40:	str	r3, [fp, #-8]
   39c44:	ldr	r3, [fp, #-8]
   39c48:	mov	r2, #10
   39c4c:	str	r2, [r3]
   39c50:	ldr	r3, [fp, #-12]
   39c54:	cmp	r3, #0
   39c58:	beq	39c68 <__assert_fail@plt+0x2757c>
   39c5c:	ldr	r3, [fp, #-16]
   39c60:	cmp	r3, #0
   39c64:	bne	39c6c <__assert_fail@plt+0x27580>
   39c68:	bl	12698 <abort@plt>
   39c6c:	ldr	r3, [fp, #-8]
   39c70:	ldr	r2, [fp, #-12]
   39c74:	str	r2, [r3, #40]	; 0x28
   39c78:	ldr	r3, [fp, #-8]
   39c7c:	ldr	r2, [fp, #-16]
   39c80:	str	r2, [r3, #44]	; 0x2c
   39c84:	nop	{0}
   39c88:	sub	sp, fp, #4
   39c8c:	ldr	fp, [sp]
   39c90:	add	sp, sp, #4
   39c94:	pop	{pc}		; (ldr pc, [sp], #4)
   39c98:	str	fp, [sp, #-8]!
   39c9c:	str	lr, [sp, #4]
   39ca0:	add	fp, sp, #4
   39ca4:	sub	sp, sp, #56	; 0x38
   39ca8:	str	r0, [fp, #-56]	; 0xffffffc8
   39cac:	str	r1, [fp, #-60]	; 0xffffffc4
   39cb0:	sub	r1, fp, #52	; 0x34
   39cb4:	mov	r2, #0
   39cb8:	mov	r3, #0
   39cbc:	strd	r2, [r1]
   39cc0:	strd	r2, [r1, #8]
   39cc4:	strd	r2, [r1, #16]
   39cc8:	strd	r2, [r1, #24]
   39ccc:	strd	r2, [r1, #32]
   39cd0:	strd	r2, [r1, #40]	; 0x28
   39cd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39cd8:	cmp	r3, #10
   39cdc:	bne	39ce4 <__assert_fail@plt+0x275f8>
   39ce0:	bl	12698 <abort@plt>
   39ce4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39ce8:	str	r3, [fp, #-52]	; 0xffffffcc
   39cec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   39cf0:	mov	r2, r3
   39cf4:	sub	r3, fp, #52	; 0x34
   39cf8:	ldrd	r0, [r3]
   39cfc:	strd	r0, [r2]
   39d00:	ldrd	r0, [r3, #8]
   39d04:	strd	r0, [r2, #8]
   39d08:	ldrd	r0, [r3, #16]
   39d0c:	strd	r0, [r2, #16]
   39d10:	ldrd	r0, [r3, #24]
   39d14:	strd	r0, [r2, #24]
   39d18:	ldrd	r0, [r3, #32]
   39d1c:	strd	r0, [r2, #32]
   39d20:	ldrd	r0, [r3, #40]	; 0x28
   39d24:	strd	r0, [r2, #40]	; 0x28
   39d28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   39d2c:	sub	sp, fp, #4
   39d30:	ldr	fp, [sp]
   39d34:	add	sp, sp, #4
   39d38:	pop	{pc}		; (ldr pc, [sp], #4)
   39d3c:	str	fp, [sp, #-8]!
   39d40:	str	lr, [sp, #4]
   39d44:	add	fp, sp, #4
   39d48:	sub	sp, sp, #16
   39d4c:	str	r0, [fp, #-16]
   39d50:	str	r1, [fp, #-20]	; 0xffffffec
   39d54:	ldr	r0, [fp, #-16]
   39d58:	bl	12398 <gettext@plt>
   39d5c:	str	r0, [fp, #-8]
   39d60:	ldr	r2, [fp, #-8]
   39d64:	ldr	r3, [fp, #-16]
   39d68:	cmp	r2, r3
   39d6c:	beq	39d78 <__assert_fail@plt+0x2768c>
   39d70:	ldr	r3, [fp, #-8]
   39d74:	b	39e28 <__assert_fail@plt+0x2773c>
   39d78:	bl	61360 <__assert_fail@plt+0x4ec74>
   39d7c:	str	r0, [fp, #-12]
   39d80:	movw	r1, #45860	; 0xb324
   39d84:	movt	r1, #6
   39d88:	ldr	r0, [fp, #-12]
   39d8c:	bl	60648 <__assert_fail@plt+0x4df5c>
   39d90:	mov	r3, r0
   39d94:	cmp	r3, #0
   39d98:	bne	39dc4 <__assert_fail@plt+0x276d8>
   39d9c:	ldr	r3, [fp, #-16]
   39da0:	ldrb	r3, [r3]
   39da4:	cmp	r3, #96	; 0x60
   39da8:	bne	39db8 <__assert_fail@plt+0x276cc>
   39dac:	movw	r3, #45868	; 0xb32c
   39db0:	movt	r3, #6
   39db4:	b	39e28 <__assert_fail@plt+0x2773c>
   39db8:	movw	r3, #45872	; 0xb330
   39dbc:	movt	r3, #6
   39dc0:	b	39e28 <__assert_fail@plt+0x2773c>
   39dc4:	movw	r1, #45876	; 0xb334
   39dc8:	movt	r1, #6
   39dcc:	ldr	r0, [fp, #-12]
   39dd0:	bl	60648 <__assert_fail@plt+0x4df5c>
   39dd4:	mov	r3, r0
   39dd8:	cmp	r3, #0
   39ddc:	bne	39e08 <__assert_fail@plt+0x2771c>
   39de0:	ldr	r3, [fp, #-16]
   39de4:	ldrb	r3, [r3]
   39de8:	cmp	r3, #96	; 0x60
   39dec:	bne	39dfc <__assert_fail@plt+0x27710>
   39df0:	movw	r3, #45884	; 0xb33c
   39df4:	movt	r3, #6
   39df8:	b	39e28 <__assert_fail@plt+0x2773c>
   39dfc:	movw	r3, #45888	; 0xb340
   39e00:	movt	r3, #6
   39e04:	b	39e28 <__assert_fail@plt+0x2773c>
   39e08:	ldr	r3, [fp, #-20]	; 0xffffffec
   39e0c:	cmp	r3, #9
   39e10:	bne	39e20 <__assert_fail@plt+0x27734>
   39e14:	movw	r3, #45892	; 0xb344
   39e18:	movt	r3, #6
   39e1c:	b	39e28 <__assert_fail@plt+0x2773c>
   39e20:	movw	r3, #45896	; 0xb348
   39e24:	movt	r3, #6
   39e28:	mov	r0, r3
   39e2c:	sub	sp, fp, #4
   39e30:	ldr	fp, [sp]
   39e34:	add	sp, sp, #4
   39e38:	pop	{pc}		; (ldr pc, [sp], #4)
   39e3c:	str	r4, [sp, #-12]!
   39e40:	str	fp, [sp, #4]
   39e44:	str	lr, [sp, #8]
   39e48:	add	fp, sp, #8
   39e4c:	sub	sp, sp, #116	; 0x74
   39e50:	str	r0, [fp, #-88]	; 0xffffffa8
   39e54:	str	r1, [fp, #-92]	; 0xffffffa4
   39e58:	str	r2, [fp, #-96]	; 0xffffffa0
   39e5c:	str	r3, [fp, #-100]	; 0xffffff9c
   39e60:	mov	r3, #0
   39e64:	str	r3, [fp, #-20]	; 0xffffffec
   39e68:	mov	r3, #0
   39e6c:	str	r3, [fp, #-24]	; 0xffffffe8
   39e70:	mov	r3, #0
   39e74:	str	r3, [fp, #-28]	; 0xffffffe4
   39e78:	mov	r3, #0
   39e7c:	str	r3, [fp, #-32]	; 0xffffffe0
   39e80:	mov	r3, #0
   39e84:	strb	r3, [fp, #-33]	; 0xffffffdf
   39e88:	bl	12254 <__ctype_get_mb_cur_max@plt>
   39e8c:	mov	r3, r0
   39e90:	cmp	r3, #1
   39e94:	moveq	r3, #1
   39e98:	movne	r3, #0
   39e9c:	strb	r3, [fp, #-57]	; 0xffffffc7
   39ea0:	ldr	r3, [fp, #8]
   39ea4:	and	r3, r3, #2
   39ea8:	cmp	r3, #0
   39eac:	movne	r3, #1
   39eb0:	moveq	r3, #0
   39eb4:	strb	r3, [fp, #-34]	; 0xffffffde
   39eb8:	mov	r3, #0
   39ebc:	strb	r3, [fp, #-35]	; 0xffffffdd
   39ec0:	mov	r3, #0
   39ec4:	strb	r3, [fp, #-36]	; 0xffffffdc
   39ec8:	mov	r3, #1
   39ecc:	strb	r3, [fp, #-37]	; 0xffffffdb
   39ed0:	ldr	r3, [fp, #4]
   39ed4:	cmp	r3, #10
   39ed8:	ldrls	pc, [pc, r3, lsl #2]
   39edc:	b	3a0f4 <__assert_fail@plt+0x27a08>
   39ee0:	andeq	sl, r3, r8, ror #1
   39ee4:	andeq	sl, r3, r0, rrx
   39ee8:	andeq	sl, r3, r4, lsl #1
   39eec:	andeq	sl, r3, r8, asr r0
   39ef0:	andeq	sl, r3, r8, rrx
   39ef4:	andeq	r9, r3, ip, lsl pc
   39ef8:	andeq	r9, r3, ip, lsl #30
   39efc:	andeq	r9, r3, r0, lsl #31
   39f00:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   39f04:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   39f08:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   39f0c:	mov	r3, #5
   39f10:	str	r3, [fp, #4]
   39f14:	mov	r3, #1
   39f18:	strb	r3, [fp, #-34]	; 0xffffffde
   39f1c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39f20:	eor	r3, r3, #1
   39f24:	uxtb	r3, r3
   39f28:	cmp	r3, #0
   39f2c:	beq	39f60 <__assert_fail@plt+0x27874>
   39f30:	ldr	r2, [fp, #-20]	; 0xffffffec
   39f34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39f38:	cmp	r2, r3
   39f3c:	bcs	39f54 <__assert_fail@plt+0x27868>
   39f40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39f44:	ldr	r3, [fp, #-20]	; 0xffffffec
   39f48:	add	r3, r2, r3
   39f4c:	mov	r2, #34	; 0x22
   39f50:	strb	r2, [r3]
   39f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   39f58:	add	r3, r3, #1
   39f5c:	str	r3, [fp, #-20]	; 0xffffffec
   39f60:	mov	r3, #1
   39f64:	strb	r3, [fp, #-33]	; 0xffffffdf
   39f68:	movw	r3, #45892	; 0xb344
   39f6c:	movt	r3, #6
   39f70:	str	r3, [fp, #-28]	; 0xffffffe4
   39f74:	mov	r3, #1
   39f78:	str	r3, [fp, #-32]	; 0xffffffe0
   39f7c:	b	3a0f8 <__assert_fail@plt+0x27a0c>
   39f80:	mov	r3, #1
   39f84:	strb	r3, [fp, #-33]	; 0xffffffdf
   39f88:	mov	r3, #0
   39f8c:	strb	r3, [fp, #-34]	; 0xffffffde
   39f90:	b	3a0f8 <__assert_fail@plt+0x27a0c>
   39f94:	ldr	r3, [fp, #4]
   39f98:	cmp	r3, #10
   39f9c:	beq	39fc8 <__assert_fail@plt+0x278dc>
   39fa0:	ldr	r1, [fp, #4]
   39fa4:	movw	r0, #45900	; 0xb34c
   39fa8:	movt	r0, #6
   39fac:	bl	39d3c <__assert_fail@plt+0x27650>
   39fb0:	str	r0, [fp, #16]
   39fb4:	ldr	r1, [fp, #4]
   39fb8:	movw	r0, #45896	; 0xb348
   39fbc:	movt	r0, #6
   39fc0:	bl	39d3c <__assert_fail@plt+0x27650>
   39fc4:	str	r0, [fp, #20]
   39fc8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   39fcc:	eor	r3, r3, #1
   39fd0:	uxtb	r3, r3
   39fd4:	cmp	r3, #0
   39fd8:	beq	3a038 <__assert_fail@plt+0x2794c>
   39fdc:	ldr	r3, [fp, #16]
   39fe0:	str	r3, [fp, #-28]	; 0xffffffe4
   39fe4:	b	3a028 <__assert_fail@plt+0x2793c>
   39fe8:	ldr	r2, [fp, #-20]	; 0xffffffec
   39fec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   39ff0:	cmp	r2, r3
   39ff4:	bcs	3a010 <__assert_fail@plt+0x27924>
   39ff8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   39ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a000:	add	r3, r2, r3
   3a004:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3a008:	ldrb	r2, [r2]
   3a00c:	strb	r2, [r3]
   3a010:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a014:	add	r3, r3, #1
   3a018:	str	r3, [fp, #-20]	; 0xffffffec
   3a01c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a020:	add	r3, r3, #1
   3a024:	str	r3, [fp, #-28]	; 0xffffffe4
   3a028:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a02c:	ldrb	r3, [r3]
   3a030:	cmp	r3, #0
   3a034:	bne	39fe8 <__assert_fail@plt+0x278fc>
   3a038:	mov	r3, #1
   3a03c:	strb	r3, [fp, #-33]	; 0xffffffdf
   3a040:	ldr	r3, [fp, #20]
   3a044:	str	r3, [fp, #-28]	; 0xffffffe4
   3a048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3a04c:	bl	123bc <strlen@plt>
   3a050:	str	r0, [fp, #-32]	; 0xffffffe0
   3a054:	b	3a0f8 <__assert_fail@plt+0x27a0c>
   3a058:	mov	r3, #1
   3a05c:	strb	r3, [fp, #-33]	; 0xffffffdf
   3a060:	mov	r3, #1
   3a064:	strb	r3, [fp, #-34]	; 0xffffffde
   3a068:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a06c:	eor	r3, r3, #1
   3a070:	uxtb	r3, r3
   3a074:	cmp	r3, #0
   3a078:	beq	3a084 <__assert_fail@plt+0x27998>
   3a07c:	mov	r3, #1
   3a080:	strb	r3, [fp, #-33]	; 0xffffffdf
   3a084:	mov	r3, #2
   3a088:	str	r3, [fp, #4]
   3a08c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a090:	eor	r3, r3, #1
   3a094:	uxtb	r3, r3
   3a098:	cmp	r3, #0
   3a09c:	beq	3a0d0 <__assert_fail@plt+0x279e4>
   3a0a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a0a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a0a8:	cmp	r2, r3
   3a0ac:	bcs	3a0c4 <__assert_fail@plt+0x279d8>
   3a0b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a0b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0b8:	add	r3, r2, r3
   3a0bc:	mov	r2, #39	; 0x27
   3a0c0:	strb	r2, [r3]
   3a0c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0c8:	add	r3, r3, #1
   3a0cc:	str	r3, [fp, #-20]	; 0xffffffec
   3a0d0:	movw	r3, #45896	; 0xb348
   3a0d4:	movt	r3, #6
   3a0d8:	str	r3, [fp, #-28]	; 0xffffffe4
   3a0dc:	mov	r3, #1
   3a0e0:	str	r3, [fp, #-32]	; 0xffffffe0
   3a0e4:	b	3a0f8 <__assert_fail@plt+0x27a0c>
   3a0e8:	mov	r3, #0
   3a0ec:	strb	r3, [fp, #-34]	; 0xffffffde
   3a0f0:	b	3a0f8 <__assert_fail@plt+0x27a0c>
   3a0f4:	bl	12698 <abort@plt>
   3a0f8:	mov	r3, #0
   3a0fc:	str	r3, [fp, #-16]
   3a100:	b	3b29c <__assert_fail@plt+0x28bb0>
   3a104:	mov	r3, #0
   3a108:	strb	r3, [fp, #-40]	; 0xffffffd8
   3a10c:	mov	r3, #0
   3a110:	strb	r3, [fp, #-41]	; 0xffffffd7
   3a114:	mov	r3, #0
   3a118:	strb	r3, [fp, #-42]	; 0xffffffd6
   3a11c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a120:	cmp	r3, #0
   3a124:	beq	3a1c0 <__assert_fail@plt+0x27ad4>
   3a128:	ldr	r3, [fp, #4]
   3a12c:	cmp	r3, #2
   3a130:	beq	3a1c0 <__assert_fail@plt+0x27ad4>
   3a134:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a138:	cmp	r3, #0
   3a13c:	beq	3a1c0 <__assert_fail@plt+0x27ad4>
   3a140:	ldr	r2, [fp, #-16]
   3a144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a148:	add	r4, r2, r3
   3a14c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a150:	cmn	r3, #1
   3a154:	bne	3a178 <__assert_fail@plt+0x27a8c>
   3a158:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a15c:	cmp	r3, #1
   3a160:	bls	3a178 <__assert_fail@plt+0x27a8c>
   3a164:	ldr	r0, [fp, #-96]	; 0xffffffa0
   3a168:	bl	123bc <strlen@plt>
   3a16c:	str	r0, [fp, #-100]	; 0xffffff9c
   3a170:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a174:	b	3a17c <__assert_fail@plt+0x27a90>
   3a178:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a17c:	cmp	r3, r4
   3a180:	bcc	3a1c0 <__assert_fail@plt+0x27ad4>
   3a184:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a188:	ldr	r3, [fp, #-16]
   3a18c:	add	r3, r2, r3
   3a190:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3a194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3a198:	mov	r0, r3
   3a19c:	bl	12158 <memcmp@plt>
   3a1a0:	mov	r3, r0
   3a1a4:	cmp	r3, #0
   3a1a8:	bne	3a1c0 <__assert_fail@plt+0x27ad4>
   3a1ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a1b0:	cmp	r3, #0
   3a1b4:	bne	3b458 <__assert_fail@plt+0x28d6c>
   3a1b8:	mov	r3, #1
   3a1bc:	strb	r3, [fp, #-40]	; 0xffffffd8
   3a1c0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a1c4:	ldr	r3, [fp, #-16]
   3a1c8:	add	r3, r2, r3
   3a1cc:	ldrb	r3, [r3]
   3a1d0:	strb	r3, [fp, #-38]	; 0xffffffda
   3a1d4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3a1d8:	cmp	r3, #126	; 0x7e
   3a1dc:	ldrls	pc, [pc, r3, lsl #2]
   3a1e0:	b	3aa18 <__assert_fail@plt+0x2832c>
   3a1e4:	andeq	sl, r3, r0, ror #7
   3a1e8:	andeq	sl, r3, r8, lsl sl
   3a1ec:	andeq	sl, r3, r8, lsl sl
   3a1f0:	andeq	sl, r3, r8, lsl sl
   3a1f4:	andeq	sl, r3, r8, lsl sl
   3a1f8:	andeq	sl, r3, r8, lsl sl
   3a1fc:	andeq	sl, r3, r8, lsl sl
   3a200:	ldrdeq	sl, [r3], -r4
   3a204:	andeq	sl, r3, r0, ror #15
   3a208:	andeq	sl, r3, r0, lsl r8
   3a20c:	strdeq	sl, [r3], -r8
   3a210:	andeq	sl, r3, ip, lsl r8
   3a214:	andeq	sl, r3, ip, ror #15
   3a218:	andeq	sl, r3, r4, lsl #16
   3a21c:	andeq	sl, r3, r8, lsl sl
   3a220:	andeq	sl, r3, r8, lsl sl
   3a224:	andeq	sl, r3, r8, lsl sl
   3a228:	andeq	sl, r3, r8, lsl sl
   3a22c:	andeq	sl, r3, r8, lsl sl
   3a230:	andeq	sl, r3, r8, lsl sl
   3a234:	andeq	sl, r3, r8, lsl sl
   3a238:	andeq	sl, r3, r8, lsl sl
   3a23c:	andeq	sl, r3, r8, lsl sl
   3a240:	andeq	sl, r3, r8, lsl sl
   3a244:	andeq	sl, r3, r8, lsl sl
   3a248:	andeq	sl, r3, r8, lsl sl
   3a24c:	andeq	sl, r3, r8, lsl sl
   3a250:	andeq	sl, r3, r8, lsl sl
   3a254:	andeq	sl, r3, r8, lsl sl
   3a258:	andeq	sl, r3, r8, lsl sl
   3a25c:	andeq	sl, r3, r8, lsl sl
   3a260:	andeq	sl, r3, r8, lsl sl
   3a264:	strdeq	sl, [r3], -ip
   3a268:	andeq	sl, r3, r4, lsl #18
   3a26c:	andeq	sl, r3, r4, lsl #18
   3a270:	strdeq	sl, [r3], -r0
   3a274:	andeq	sl, r3, r4, lsl #18
   3a278:	andeq	sl, r3, ip, lsl #20
   3a27c:	andeq	sl, r3, r4, lsl #18
   3a280:	andeq	sl, r3, r0, lsr #18
   3a284:	andeq	sl, r3, r4, lsl #18
   3a288:	andeq	sl, r3, r4, lsl #18
   3a28c:	andeq	sl, r3, r4, lsl #18
   3a290:	andeq	sl, r3, ip, lsl #20
   3a294:	andeq	sl, r3, ip, lsl #20
   3a298:	andeq	sl, r3, ip, lsl #20
   3a29c:	andeq	sl, r3, ip, lsl #20
   3a2a0:	andeq	sl, r3, ip, lsl #20
   3a2a4:	andeq	sl, r3, ip, lsl #20
   3a2a8:	andeq	sl, r3, ip, lsl #20
   3a2ac:	andeq	sl, r3, ip, lsl #20
   3a2b0:	andeq	sl, r3, ip, lsl #20
   3a2b4:	andeq	sl, r3, ip, lsl #20
   3a2b8:	andeq	sl, r3, ip, lsl #20
   3a2bc:	andeq	sl, r3, ip, lsl #20
   3a2c0:	andeq	sl, r3, ip, lsl #20
   3a2c4:	andeq	sl, r3, ip, lsl #20
   3a2c8:	andeq	sl, r3, ip, lsl #20
   3a2cc:	andeq	sl, r3, ip, lsl #20
   3a2d0:	andeq	sl, r3, r4, lsl #18
   3a2d4:	andeq	sl, r3, r4, lsl #18
   3a2d8:	andeq	sl, r3, r4, lsl #18
   3a2dc:	andeq	sl, r3, r4, lsl #18
   3a2e0:	andeq	sl, r3, r0, asr #11
   3a2e4:	andeq	sl, r3, r8, lsl sl
   3a2e8:	andeq	sl, r3, ip, lsl #20
   3a2ec:	andeq	sl, r3, ip, lsl #20
   3a2f0:	andeq	sl, r3, ip, lsl #20
   3a2f4:	andeq	sl, r3, ip, lsl #20
   3a2f8:	andeq	sl, r3, ip, lsl #20
   3a2fc:	andeq	sl, r3, ip, lsl #20
   3a300:	andeq	sl, r3, ip, lsl #20
   3a304:	andeq	sl, r3, ip, lsl #20
   3a308:	andeq	sl, r3, ip, lsl #20
   3a30c:	andeq	sl, r3, ip, lsl #20
   3a310:	andeq	sl, r3, ip, lsl #20
   3a314:	andeq	sl, r3, ip, lsl #20
   3a318:	andeq	sl, r3, ip, lsl #20
   3a31c:	andeq	sl, r3, ip, lsl #20
   3a320:	andeq	sl, r3, ip, lsl #20
   3a324:	andeq	sl, r3, ip, lsl #20
   3a328:	andeq	sl, r3, ip, lsl #20
   3a32c:	andeq	sl, r3, ip, lsl #20
   3a330:	andeq	sl, r3, ip, lsl #20
   3a334:	andeq	sl, r3, ip, lsl #20
   3a338:	andeq	sl, r3, ip, lsl #20
   3a33c:	andeq	sl, r3, ip, lsl #20
   3a340:	andeq	sl, r3, ip, lsl #20
   3a344:	andeq	sl, r3, ip, lsl #20
   3a348:	andeq	sl, r3, ip, lsl #20
   3a34c:	andeq	sl, r3, ip, lsl #20
   3a350:	andeq	sl, r3, r4, lsl #18
   3a354:	andeq	sl, r3, r8, lsr #16
   3a358:	andeq	sl, r3, ip, lsl #20
   3a35c:	andeq	sl, r3, r4, lsl #18
   3a360:	andeq	sl, r3, ip, lsl #20
   3a364:	andeq	sl, r3, r4, lsl #18
   3a368:	andeq	sl, r3, ip, lsl #20
   3a36c:	andeq	sl, r3, ip, lsl #20
   3a370:	andeq	sl, r3, ip, lsl #20
   3a374:	andeq	sl, r3, ip, lsl #20
   3a378:	andeq	sl, r3, ip, lsl #20
   3a37c:	andeq	sl, r3, ip, lsl #20
   3a380:	andeq	sl, r3, ip, lsl #20
   3a384:	andeq	sl, r3, ip, lsl #20
   3a388:	andeq	sl, r3, ip, lsl #20
   3a38c:	andeq	sl, r3, ip, lsl #20
   3a390:	andeq	sl, r3, ip, lsl #20
   3a394:	andeq	sl, r3, ip, lsl #20
   3a398:	andeq	sl, r3, ip, lsl #20
   3a39c:	andeq	sl, r3, ip, lsl #20
   3a3a0:	andeq	sl, r3, ip, lsl #20
   3a3a4:	andeq	sl, r3, ip, lsl #20
   3a3a8:	andeq	sl, r3, ip, lsl #20
   3a3ac:	andeq	sl, r3, ip, lsl #20
   3a3b0:	andeq	sl, r3, ip, lsl #20
   3a3b4:	andeq	sl, r3, ip, lsl #20
   3a3b8:	andeq	sl, r3, ip, lsl #20
   3a3bc:	andeq	sl, r3, ip, lsl #20
   3a3c0:	andeq	sl, r3, ip, lsl #20
   3a3c4:	andeq	sl, r3, ip, lsl #20
   3a3c8:	andeq	sl, r3, ip, lsl #20
   3a3cc:	andeq	sl, r3, ip, lsl #20
   3a3d0:	andeq	sl, r3, r8, lsr #17
   3a3d4:	andeq	sl, r3, r4, lsl #18
   3a3d8:	andeq	sl, r3, r8, lsr #17
   3a3dc:	strdeq	sl, [r3], -r0
   3a3e0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a3e4:	cmp	r3, #0
   3a3e8:	beq	3a5ac <__assert_fail@plt+0x27ec0>
   3a3ec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a3f0:	cmp	r3, #0
   3a3f4:	bne	3b460 <__assert_fail@plt+0x28d74>
   3a3f8:	mov	r3, #1
   3a3fc:	strb	r3, [fp, #-41]	; 0xffffffd7
   3a400:	ldr	r3, [fp, #4]
   3a404:	cmp	r3, #2
   3a408:	bne	3a4b8 <__assert_fail@plt+0x27dcc>
   3a40c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3a410:	eor	r3, r3, #1
   3a414:	uxtb	r3, r3
   3a418:	cmp	r3, #0
   3a41c:	beq	3a4b8 <__assert_fail@plt+0x27dcc>
   3a420:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a424:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a428:	cmp	r2, r3
   3a42c:	bcs	3a444 <__assert_fail@plt+0x27d58>
   3a430:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a434:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a438:	add	r3, r2, r3
   3a43c:	mov	r2, #39	; 0x27
   3a440:	strb	r2, [r3]
   3a444:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a448:	add	r3, r3, #1
   3a44c:	str	r3, [fp, #-20]	; 0xffffffec
   3a450:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a454:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a458:	cmp	r2, r3
   3a45c:	bcs	3a474 <__assert_fail@plt+0x27d88>
   3a460:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a464:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a468:	add	r3, r2, r3
   3a46c:	mov	r2, #36	; 0x24
   3a470:	strb	r2, [r3]
   3a474:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a478:	add	r3, r3, #1
   3a47c:	str	r3, [fp, #-20]	; 0xffffffec
   3a480:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a484:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a488:	cmp	r2, r3
   3a48c:	bcs	3a4a4 <__assert_fail@plt+0x27db8>
   3a490:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a494:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a498:	add	r3, r2, r3
   3a49c:	mov	r2, #39	; 0x27
   3a4a0:	strb	r2, [r3]
   3a4a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4a8:	add	r3, r3, #1
   3a4ac:	str	r3, [fp, #-20]	; 0xffffffec
   3a4b0:	mov	r3, #1
   3a4b4:	strb	r3, [fp, #-35]	; 0xffffffdd
   3a4b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a4bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a4c0:	cmp	r2, r3
   3a4c4:	bcs	3a4dc <__assert_fail@plt+0x27df0>
   3a4c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a4cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4d0:	add	r3, r2, r3
   3a4d4:	mov	r2, #92	; 0x5c
   3a4d8:	strb	r2, [r3]
   3a4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a4e0:	add	r3, r3, #1
   3a4e4:	str	r3, [fp, #-20]	; 0xffffffec
   3a4e8:	ldr	r3, [fp, #4]
   3a4ec:	cmp	r3, #2
   3a4f0:	beq	3a5a0 <__assert_fail@plt+0x27eb4>
   3a4f4:	ldr	r3, [fp, #-16]
   3a4f8:	add	r3, r3, #1
   3a4fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   3a500:	cmp	r2, r3
   3a504:	bls	3a5a0 <__assert_fail@plt+0x27eb4>
   3a508:	ldr	r3, [fp, #-16]
   3a50c:	add	r3, r3, #1
   3a510:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a514:	add	r3, r2, r3
   3a518:	ldrb	r3, [r3]
   3a51c:	cmp	r3, #47	; 0x2f
   3a520:	bls	3a5a0 <__assert_fail@plt+0x27eb4>
   3a524:	ldr	r3, [fp, #-16]
   3a528:	add	r3, r3, #1
   3a52c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a530:	add	r3, r2, r3
   3a534:	ldrb	r3, [r3]
   3a538:	cmp	r3, #57	; 0x39
   3a53c:	bhi	3a5a0 <__assert_fail@plt+0x27eb4>
   3a540:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a544:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a548:	cmp	r2, r3
   3a54c:	bcs	3a564 <__assert_fail@plt+0x27e78>
   3a550:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a554:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a558:	add	r3, r2, r3
   3a55c:	mov	r2, #48	; 0x30
   3a560:	strb	r2, [r3]
   3a564:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a568:	add	r3, r3, #1
   3a56c:	str	r3, [fp, #-20]	; 0xffffffec
   3a570:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a574:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a578:	cmp	r2, r3
   3a57c:	bcs	3a594 <__assert_fail@plt+0x27ea8>
   3a580:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a584:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a588:	add	r3, r2, r3
   3a58c:	mov	r2, #48	; 0x30
   3a590:	strb	r2, [r3]
   3a594:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a598:	add	r3, r3, #1
   3a59c:	str	r3, [fp, #-20]	; 0xffffffec
   3a5a0:	mov	r3, #48	; 0x30
   3a5a4:	strb	r3, [fp, #-38]	; 0xffffffda
   3a5a8:	b	3afe8 <__assert_fail@plt+0x288fc>
   3a5ac:	ldr	r3, [fp, #8]
   3a5b0:	and	r3, r3, #1
   3a5b4:	cmp	r3, #0
   3a5b8:	beq	3afe8 <__assert_fail@plt+0x288fc>
   3a5bc:	b	3b290 <__assert_fail@plt+0x28ba4>
   3a5c0:	ldr	r3, [fp, #4]
   3a5c4:	cmp	r3, #2
   3a5c8:	beq	3a5dc <__assert_fail@plt+0x27ef0>
   3a5cc:	ldr	r3, [fp, #4]
   3a5d0:	cmp	r3, #5
   3a5d4:	beq	3a5ec <__assert_fail@plt+0x27f00>
   3a5d8:	b	3a7d0 <__assert_fail@plt+0x280e4>
   3a5dc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a5e0:	cmp	r3, #0
   3a5e4:	beq	3a7c4 <__assert_fail@plt+0x280d8>
   3a5e8:	b	3b494 <__assert_fail@plt+0x28da8>
   3a5ec:	ldr	r3, [fp, #8]
   3a5f0:	and	r3, r3, #4
   3a5f4:	cmp	r3, #0
   3a5f8:	beq	3a7cc <__assert_fail@plt+0x280e0>
   3a5fc:	ldr	r3, [fp, #-16]
   3a600:	add	r3, r3, #2
   3a604:	ldr	r2, [fp, #-100]	; 0xffffff9c
   3a608:	cmp	r2, r3
   3a60c:	bls	3a7cc <__assert_fail@plt+0x280e0>
   3a610:	ldr	r3, [fp, #-16]
   3a614:	add	r3, r3, #1
   3a618:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a61c:	add	r3, r2, r3
   3a620:	ldrb	r3, [r3]
   3a624:	cmp	r3, #63	; 0x3f
   3a628:	bne	3a7cc <__assert_fail@plt+0x280e0>
   3a62c:	ldr	r3, [fp, #-16]
   3a630:	add	r3, r3, #2
   3a634:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a638:	add	r3, r2, r3
   3a63c:	ldrb	r3, [r3]
   3a640:	sub	r3, r3, #33	; 0x21
   3a644:	cmp	r3, #29
   3a648:	ldrls	pc, [pc, r3, lsl #2]
   3a64c:	b	3a7bc <__assert_fail@plt+0x280d0>
   3a650:	andeq	sl, r3, r8, asr #13
   3a654:			; <UNDEFINED> instruction: 0x0003a7bc
   3a658:			; <UNDEFINED> instruction: 0x0003a7bc
   3a65c:			; <UNDEFINED> instruction: 0x0003a7bc
   3a660:			; <UNDEFINED> instruction: 0x0003a7bc
   3a664:			; <UNDEFINED> instruction: 0x0003a7bc
   3a668:	andeq	sl, r3, r8, asr #13
   3a66c:	andeq	sl, r3, r8, asr #13
   3a670:	andeq	sl, r3, r8, asr #13
   3a674:			; <UNDEFINED> instruction: 0x0003a7bc
   3a678:			; <UNDEFINED> instruction: 0x0003a7bc
   3a67c:			; <UNDEFINED> instruction: 0x0003a7bc
   3a680:	andeq	sl, r3, r8, asr #13
   3a684:			; <UNDEFINED> instruction: 0x0003a7bc
   3a688:	andeq	sl, r3, r8, asr #13
   3a68c:			; <UNDEFINED> instruction: 0x0003a7bc
   3a690:			; <UNDEFINED> instruction: 0x0003a7bc
   3a694:			; <UNDEFINED> instruction: 0x0003a7bc
   3a698:			; <UNDEFINED> instruction: 0x0003a7bc
   3a69c:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6a0:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6a4:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6a8:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6ac:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6b0:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6b4:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6b8:			; <UNDEFINED> instruction: 0x0003a7bc
   3a6bc:	andeq	sl, r3, r8, asr #13
   3a6c0:	andeq	sl, r3, r8, asr #13
   3a6c4:	andeq	sl, r3, r8, asr #13
   3a6c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a6cc:	cmp	r3, #0
   3a6d0:	bne	3b468 <__assert_fail@plt+0x28d7c>
   3a6d4:	ldr	r3, [fp, #-16]
   3a6d8:	add	r3, r3, #2
   3a6dc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3a6e0:	add	r3, r2, r3
   3a6e4:	ldrb	r3, [r3]
   3a6e8:	strb	r3, [fp, #-38]	; 0xffffffda
   3a6ec:	ldr	r3, [fp, #-16]
   3a6f0:	add	r3, r3, #2
   3a6f4:	str	r3, [fp, #-16]
   3a6f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a6fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a700:	cmp	r2, r3
   3a704:	bcs	3a71c <__assert_fail@plt+0x28030>
   3a708:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a70c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a710:	add	r3, r2, r3
   3a714:	mov	r2, #63	; 0x3f
   3a718:	strb	r2, [r3]
   3a71c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a720:	add	r3, r3, #1
   3a724:	str	r3, [fp, #-20]	; 0xffffffec
   3a728:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a72c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a730:	cmp	r2, r3
   3a734:	bcs	3a74c <__assert_fail@plt+0x28060>
   3a738:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a73c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a740:	add	r3, r2, r3
   3a744:	mov	r2, #34	; 0x22
   3a748:	strb	r2, [r3]
   3a74c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a750:	add	r3, r3, #1
   3a754:	str	r3, [fp, #-20]	; 0xffffffec
   3a758:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a75c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a760:	cmp	r2, r3
   3a764:	bcs	3a77c <__assert_fail@plt+0x28090>
   3a768:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a76c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a770:	add	r3, r2, r3
   3a774:	mov	r2, #34	; 0x22
   3a778:	strb	r2, [r3]
   3a77c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a780:	add	r3, r3, #1
   3a784:	str	r3, [fp, #-20]	; 0xffffffec
   3a788:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a78c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a790:	cmp	r2, r3
   3a794:	bcs	3a7ac <__assert_fail@plt+0x280c0>
   3a798:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a79c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a7a0:	add	r3, r2, r3
   3a7a4:	mov	r2, #63	; 0x3f
   3a7a8:	strb	r2, [r3]
   3a7ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a7b0:	add	r3, r3, #1
   3a7b4:	str	r3, [fp, #-20]	; 0xffffffec
   3a7b8:	b	3a7c0 <__assert_fail@plt+0x280d4>
   3a7bc:	nop	{0}
   3a7c0:	b	3a7cc <__assert_fail@plt+0x280e0>
   3a7c4:	nop	{0}
   3a7c8:	b	3b01c <__assert_fail@plt+0x28930>
   3a7cc:	nop	{0}
   3a7d0:	b	3b01c <__assert_fail@plt+0x28930>
   3a7d4:	mov	r3, #97	; 0x61
   3a7d8:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a7dc:	b	3a890 <__assert_fail@plt+0x281a4>
   3a7e0:	mov	r3, #98	; 0x62
   3a7e4:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a7e8:	b	3a890 <__assert_fail@plt+0x281a4>
   3a7ec:	mov	r3, #102	; 0x66
   3a7f0:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a7f4:	b	3a890 <__assert_fail@plt+0x281a4>
   3a7f8:	mov	r3, #110	; 0x6e
   3a7fc:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a800:	b	3a874 <__assert_fail@plt+0x28188>
   3a804:	mov	r3, #114	; 0x72
   3a808:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a80c:	b	3a874 <__assert_fail@plt+0x28188>
   3a810:	mov	r3, #116	; 0x74
   3a814:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a818:	b	3a874 <__assert_fail@plt+0x28188>
   3a81c:	mov	r3, #118	; 0x76
   3a820:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a824:	b	3a890 <__assert_fail@plt+0x281a4>
   3a828:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3a82c:	strb	r3, [fp, #-39]	; 0xffffffd9
   3a830:	ldr	r3, [fp, #4]
   3a834:	cmp	r3, #2
   3a838:	bne	3a84c <__assert_fail@plt+0x28160>
   3a83c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a840:	cmp	r3, #0
   3a844:	beq	3b1a8 <__assert_fail@plt+0x28abc>
   3a848:	b	3b494 <__assert_fail@plt+0x28da8>
   3a84c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a850:	cmp	r3, #0
   3a854:	beq	3a870 <__assert_fail@plt+0x28184>
   3a858:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a85c:	cmp	r3, #0
   3a860:	beq	3a870 <__assert_fail@plt+0x28184>
   3a864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a868:	cmp	r3, #0
   3a86c:	bne	3b1b0 <__assert_fail@plt+0x28ac4>
   3a870:	nop	{0}
   3a874:	ldr	r3, [fp, #4]
   3a878:	cmp	r3, #2
   3a87c:	bne	3a88c <__assert_fail@plt+0x281a0>
   3a880:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a884:	cmp	r3, #0
   3a888:	bne	3b470 <__assert_fail@plt+0x28d84>
   3a88c:	nop	{0}
   3a890:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3a894:	cmp	r3, #0
   3a898:	beq	3aff0 <__assert_fail@plt+0x28904>
   3a89c:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   3a8a0:	strb	r3, [fp, #-38]	; 0xffffffda
   3a8a4:	b	3b0a8 <__assert_fail@plt+0x289bc>
   3a8a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a8ac:	cmn	r3, #1
   3a8b0:	bne	3a8d4 <__assert_fail@plt+0x281e8>
   3a8b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   3a8b8:	add	r3, r3, #1
   3a8bc:	ldrb	r3, [r3]
   3a8c0:	cmp	r3, #0
   3a8c4:	movne	r3, #1
   3a8c8:	moveq	r3, #0
   3a8cc:	uxtb	r3, r3
   3a8d0:	b	3a8e8 <__assert_fail@plt+0x281fc>
   3a8d4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3a8d8:	cmp	r3, #1
   3a8dc:	movne	r3, #1
   3a8e0:	moveq	r3, #0
   3a8e4:	uxtb	r3, r3
   3a8e8:	cmp	r3, #0
   3a8ec:	bne	3aff8 <__assert_fail@plt+0x2890c>
   3a8f0:	ldr	r3, [fp, #-16]
   3a8f4:	cmp	r3, #0
   3a8f8:	bne	3b000 <__assert_fail@plt+0x28914>
   3a8fc:	mov	r3, #1
   3a900:	strb	r3, [fp, #-42]	; 0xffffffd6
   3a904:	ldr	r3, [fp, #4]
   3a908:	cmp	r3, #2
   3a90c:	bne	3b008 <__assert_fail@plt+0x2891c>
   3a910:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a914:	cmp	r3, #0
   3a918:	beq	3b008 <__assert_fail@plt+0x2891c>
   3a91c:	b	3b494 <__assert_fail@plt+0x28da8>
   3a920:	mov	r3, #1
   3a924:	strb	r3, [fp, #-36]	; 0xffffffdc
   3a928:	mov	r3, #1
   3a92c:	strb	r3, [fp, #-42]	; 0xffffffd6
   3a930:	ldr	r3, [fp, #4]
   3a934:	cmp	r3, #2
   3a938:	bne	3b010 <__assert_fail@plt+0x28924>
   3a93c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3a940:	cmp	r3, #0
   3a944:	bne	3b478 <__assert_fail@plt+0x28d8c>
   3a948:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a94c:	cmp	r3, #0
   3a950:	beq	3a970 <__assert_fail@plt+0x28284>
   3a954:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a958:	cmp	r3, #0
   3a95c:	bne	3a970 <__assert_fail@plt+0x28284>
   3a960:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a964:	str	r3, [fp, #-24]	; 0xffffffe8
   3a968:	mov	r3, #0
   3a96c:	str	r3, [fp, #-92]	; 0xffffffa4
   3a970:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a974:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a978:	cmp	r2, r3
   3a97c:	bcs	3a994 <__assert_fail@plt+0x282a8>
   3a980:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a984:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a988:	add	r3, r2, r3
   3a98c:	mov	r2, #39	; 0x27
   3a990:	strb	r2, [r3]
   3a994:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a998:	add	r3, r3, #1
   3a99c:	str	r3, [fp, #-20]	; 0xffffffec
   3a9a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a9a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a9a8:	cmp	r2, r3
   3a9ac:	bcs	3a9c4 <__assert_fail@plt+0x282d8>
   3a9b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a9b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9b8:	add	r3, r2, r3
   3a9bc:	mov	r2, #92	; 0x5c
   3a9c0:	strb	r2, [r3]
   3a9c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9c8:	add	r3, r3, #1
   3a9cc:	str	r3, [fp, #-20]	; 0xffffffec
   3a9d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a9d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3a9d8:	cmp	r2, r3
   3a9dc:	bcs	3a9f4 <__assert_fail@plt+0x28308>
   3a9e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3a9e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9e8:	add	r3, r2, r3
   3a9ec:	mov	r2, #39	; 0x27
   3a9f0:	strb	r2, [r3]
   3a9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9f8:	add	r3, r3, #1
   3a9fc:	str	r3, [fp, #-20]	; 0xffffffec
   3aa00:	mov	r3, #0
   3aa04:	strb	r3, [fp, #-35]	; 0xffffffdd
   3aa08:	b	3b010 <__assert_fail@plt+0x28924>
   3aa0c:	mov	r3, #1
   3aa10:	strb	r3, [fp, #-42]	; 0xffffffd6
   3aa14:	b	3b01c <__assert_fail@plt+0x28930>
   3aa18:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   3aa1c:	cmp	r3, #0
   3aa20:	beq	3aa60 <__assert_fail@plt+0x28374>
   3aa24:	mov	r3, #1
   3aa28:	str	r3, [fp, #-48]	; 0xffffffd0
   3aa2c:	bl	12368 <__ctype_b_loc@plt>
   3aa30:	mov	r3, r0
   3aa34:	ldr	r2, [r3]
   3aa38:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3aa3c:	lsl	r3, r3, #1
   3aa40:	add	r3, r2, r3
   3aa44:	ldrh	r3, [r3]
   3aa48:	and	r3, r3, #16384	; 0x4000
   3aa4c:	cmp	r3, #0
   3aa50:	movne	r3, #1
   3aa54:	moveq	r3, #0
   3aa58:	strb	r3, [fp, #-49]	; 0xffffffcf
   3aa5c:	b	3acac <__assert_fail@plt+0x285c0>
   3aa60:	sub	r3, fp, #76	; 0x4c
   3aa64:	mov	r2, #8
   3aa68:	mov	r1, #0
   3aa6c:	mov	r0, r3
   3aa70:	bl	12434 <memset@plt>
   3aa74:	mov	r3, #0
   3aa78:	str	r3, [fp, #-48]	; 0xffffffd0
   3aa7c:	mov	r3, #1
   3aa80:	strb	r3, [fp, #-49]	; 0xffffffcf
   3aa84:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3aa88:	cmn	r3, #1
   3aa8c:	bne	3aa9c <__assert_fail@plt+0x283b0>
   3aa90:	ldr	r0, [fp, #-96]	; 0xffffffa0
   3aa94:	bl	123bc <strlen@plt>
   3aa98:	str	r0, [fp, #-100]	; 0xffffff9c
   3aa9c:	ldr	r2, [fp, #-16]
   3aaa0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aaa4:	add	r3, r2, r3
   3aaa8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3aaac:	add	r1, r2, r3
   3aab0:	ldr	r2, [fp, #-16]
   3aab4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aab8:	add	r3, r2, r3
   3aabc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   3aac0:	sub	r2, r2, r3
   3aac4:	sub	r3, fp, #76	; 0x4c
   3aac8:	sub	r0, fp, #80	; 0x50
   3aacc:	bl	435a0 <__assert_fail@plt+0x30eb4>
   3aad0:	str	r0, [fp, #-64]	; 0xffffffc0
   3aad4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3aad8:	cmp	r3, #0
   3aadc:	beq	3aca0 <__assert_fail@plt+0x285b4>
   3aae0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3aae4:	cmn	r3, #1
   3aae8:	bne	3aaf8 <__assert_fail@plt+0x2840c>
   3aaec:	mov	r3, #0
   3aaf0:	strb	r3, [fp, #-49]	; 0xffffffcf
   3aaf4:	b	3acac <__assert_fail@plt+0x285c0>
   3aaf8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3aafc:	cmn	r3, #2
   3ab00:	bne	3ab58 <__assert_fail@plt+0x2846c>
   3ab04:	mov	r3, #0
   3ab08:	strb	r3, [fp, #-49]	; 0xffffffcf
   3ab0c:	b	3ab1c <__assert_fail@plt+0x28430>
   3ab10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ab14:	add	r3, r3, #1
   3ab18:	str	r3, [fp, #-48]	; 0xffffffd0
   3ab1c:	ldr	r2, [fp, #-16]
   3ab20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ab24:	add	r3, r2, r3
   3ab28:	ldr	r2, [fp, #-100]	; 0xffffff9c
   3ab2c:	cmp	r2, r3
   3ab30:	bls	3aca8 <__assert_fail@plt+0x285bc>
   3ab34:	ldr	r2, [fp, #-16]
   3ab38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ab3c:	add	r3, r2, r3
   3ab40:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3ab44:	add	r3, r2, r3
   3ab48:	ldrb	r3, [r3]
   3ab4c:	cmp	r3, #0
   3ab50:	bne	3ab10 <__assert_fail@plt+0x28424>
   3ab54:	b	3aca8 <__assert_fail@plt+0x285bc>
   3ab58:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3ab5c:	cmp	r3, #0
   3ab60:	beq	3ac54 <__assert_fail@plt+0x28568>
   3ab64:	ldr	r3, [fp, #4]
   3ab68:	cmp	r3, #2
   3ab6c:	bne	3ac54 <__assert_fail@plt+0x28568>
   3ab70:	mov	r3, #1
   3ab74:	str	r3, [fp, #-56]	; 0xffffffc8
   3ab78:	b	3ac44 <__assert_fail@plt+0x28558>
   3ab7c:	ldr	r2, [fp, #-16]
   3ab80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ab84:	add	r2, r2, r3
   3ab88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3ab8c:	add	r3, r2, r3
   3ab90:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3ab94:	add	r3, r2, r3
   3ab98:	ldrb	r3, [r3]
   3ab9c:	sub	r3, r3, #91	; 0x5b
   3aba0:	cmp	r3, #33	; 0x21
   3aba4:	ldrls	pc, [pc, r3, lsl #2]
   3aba8:	b	3ac34 <__assert_fail@plt+0x28548>
   3abac:	muleq	r3, r4, r4
   3abb0:	muleq	r3, r4, r4
   3abb4:	andeq	sl, r3, r4, lsr ip
   3abb8:	muleq	r3, r4, r4
   3abbc:	andeq	sl, r3, r4, lsr ip
   3abc0:	muleq	r3, r4, r4
   3abc4:	andeq	sl, r3, r4, lsr ip
   3abc8:	andeq	sl, r3, r4, lsr ip
   3abcc:	andeq	sl, r3, r4, lsr ip
   3abd0:	andeq	sl, r3, r4, lsr ip
   3abd4:	andeq	sl, r3, r4, lsr ip
   3abd8:	andeq	sl, r3, r4, lsr ip
   3abdc:	andeq	sl, r3, r4, lsr ip
   3abe0:	andeq	sl, r3, r4, lsr ip
   3abe4:	andeq	sl, r3, r4, lsr ip
   3abe8:	andeq	sl, r3, r4, lsr ip
   3abec:	andeq	sl, r3, r4, lsr ip
   3abf0:	andeq	sl, r3, r4, lsr ip
   3abf4:	andeq	sl, r3, r4, lsr ip
   3abf8:	andeq	sl, r3, r4, lsr ip
   3abfc:	andeq	sl, r3, r4, lsr ip
   3ac00:	andeq	sl, r3, r4, lsr ip
   3ac04:	andeq	sl, r3, r4, lsr ip
   3ac08:	andeq	sl, r3, r4, lsr ip
   3ac0c:	andeq	sl, r3, r4, lsr ip
   3ac10:	andeq	sl, r3, r4, lsr ip
   3ac14:	andeq	sl, r3, r4, lsr ip
   3ac18:	andeq	sl, r3, r4, lsr ip
   3ac1c:	andeq	sl, r3, r4, lsr ip
   3ac20:	andeq	sl, r3, r4, lsr ip
   3ac24:	andeq	sl, r3, r4, lsr ip
   3ac28:	andeq	sl, r3, r4, lsr ip
   3ac2c:	andeq	sl, r3, r4, lsr ip
   3ac30:	muleq	r3, r4, r4
   3ac34:	nop	{0}
   3ac38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3ac3c:	add	r3, r3, #1
   3ac40:	str	r3, [fp, #-56]	; 0xffffffc8
   3ac44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3ac48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3ac4c:	cmp	r2, r3
   3ac50:	bcc	3ab7c <__assert_fail@plt+0x28490>
   3ac54:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3ac58:	mov	r0, r3
   3ac5c:	bl	121f4 <iswprint@plt>
   3ac60:	mov	r3, r0
   3ac64:	cmp	r3, #0
   3ac68:	bne	3ac74 <__assert_fail@plt+0x28588>
   3ac6c:	mov	r3, #0
   3ac70:	strb	r3, [fp, #-49]	; 0xffffffcf
   3ac74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3ac78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3ac7c:	add	r3, r2, r3
   3ac80:	str	r3, [fp, #-48]	; 0xffffffd0
   3ac84:	sub	r3, fp, #76	; 0x4c
   3ac88:	mov	r0, r3
   3ac8c:	bl	12134 <mbsinit@plt>
   3ac90:	mov	r3, r0
   3ac94:	cmp	r3, #0
   3ac98:	beq	3aa9c <__assert_fail@plt+0x283b0>
   3ac9c:	b	3acac <__assert_fail@plt+0x285c0>
   3aca0:	nop	{0}
   3aca4:	b	3acac <__assert_fail@plt+0x285c0>
   3aca8:	nop	{0}
   3acac:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   3acb0:	strb	r3, [fp, #-42]	; 0xffffffd6
   3acb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3acb8:	cmp	r3, #1
   3acbc:	bhi	3ace0 <__assert_fail@plt+0x285f4>
   3acc0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3acc4:	cmp	r3, #0
   3acc8:	beq	3b018 <__assert_fail@plt+0x2892c>
   3accc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   3acd0:	eor	r3, r3, #1
   3acd4:	uxtb	r3, r3
   3acd8:	cmp	r3, #0
   3acdc:	beq	3b018 <__assert_fail@plt+0x2892c>
   3ace0:	ldr	r2, [fp, #-16]
   3ace4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ace8:	add	r3, r2, r3
   3acec:	str	r3, [fp, #-68]	; 0xffffffbc
   3acf0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3acf4:	cmp	r3, #0
   3acf8:	beq	3aeac <__assert_fail@plt+0x287c0>
   3acfc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   3ad00:	eor	r3, r3, #1
   3ad04:	uxtb	r3, r3
   3ad08:	cmp	r3, #0
   3ad0c:	beq	3aeac <__assert_fail@plt+0x287c0>
   3ad10:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3ad14:	cmp	r3, #0
   3ad18:	bne	3b480 <__assert_fail@plt+0x28d94>
   3ad1c:	mov	r3, #1
   3ad20:	strb	r3, [fp, #-41]	; 0xffffffd7
   3ad24:	ldr	r3, [fp, #4]
   3ad28:	cmp	r3, #2
   3ad2c:	bne	3addc <__assert_fail@plt+0x286f0>
   3ad30:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3ad34:	eor	r3, r3, #1
   3ad38:	uxtb	r3, r3
   3ad3c:	cmp	r3, #0
   3ad40:	beq	3addc <__assert_fail@plt+0x286f0>
   3ad44:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ad48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ad4c:	cmp	r2, r3
   3ad50:	bcs	3ad68 <__assert_fail@plt+0x2867c>
   3ad54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ad58:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad5c:	add	r3, r2, r3
   3ad60:	mov	r2, #39	; 0x27
   3ad64:	strb	r2, [r3]
   3ad68:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad6c:	add	r3, r3, #1
   3ad70:	str	r3, [fp, #-20]	; 0xffffffec
   3ad74:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ad78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ad7c:	cmp	r2, r3
   3ad80:	bcs	3ad98 <__assert_fail@plt+0x286ac>
   3ad84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3ad88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad8c:	add	r3, r2, r3
   3ad90:	mov	r2, #36	; 0x24
   3ad94:	strb	r2, [r3]
   3ad98:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad9c:	add	r3, r3, #1
   3ada0:	str	r3, [fp, #-20]	; 0xffffffec
   3ada4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ada8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3adac:	cmp	r2, r3
   3adb0:	bcs	3adc8 <__assert_fail@plt+0x286dc>
   3adb4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3adb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3adbc:	add	r3, r2, r3
   3adc0:	mov	r2, #39	; 0x27
   3adc4:	strb	r2, [r3]
   3adc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3adcc:	add	r3, r3, #1
   3add0:	str	r3, [fp, #-20]	; 0xffffffec
   3add4:	mov	r3, #1
   3add8:	strb	r3, [fp, #-35]	; 0xffffffdd
   3addc:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ade0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ade4:	cmp	r2, r3
   3ade8:	bcs	3ae00 <__assert_fail@plt+0x28714>
   3adec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3adf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3adf4:	add	r3, r2, r3
   3adf8:	mov	r2, #92	; 0x5c
   3adfc:	strb	r2, [r3]
   3ae00:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae04:	add	r3, r3, #1
   3ae08:	str	r3, [fp, #-20]	; 0xffffffec
   3ae0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ae10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ae14:	cmp	r2, r3
   3ae18:	bcs	3ae40 <__assert_fail@plt+0x28754>
   3ae1c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3ae20:	lsr	r3, r3, #6
   3ae24:	uxtb	r2, r3
   3ae28:	ldr	r1, [fp, #-88]	; 0xffffffa8
   3ae2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae30:	add	r3, r1, r3
   3ae34:	add	r2, r2, #48	; 0x30
   3ae38:	uxtb	r2, r2
   3ae3c:	strb	r2, [r3]
   3ae40:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae44:	add	r3, r3, #1
   3ae48:	str	r3, [fp, #-20]	; 0xffffffec
   3ae4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ae50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3ae54:	cmp	r2, r3
   3ae58:	bcs	3ae88 <__assert_fail@plt+0x2879c>
   3ae5c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3ae60:	lsr	r3, r3, #3
   3ae64:	uxtb	r3, r3
   3ae68:	and	r3, r3, #7
   3ae6c:	uxtb	r2, r3
   3ae70:	ldr	r1, [fp, #-88]	; 0xffffffa8
   3ae74:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae78:	add	r3, r1, r3
   3ae7c:	add	r2, r2, #48	; 0x30
   3ae80:	uxtb	r2, r2
   3ae84:	strb	r2, [r3]
   3ae88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae8c:	add	r3, r3, #1
   3ae90:	str	r3, [fp, #-20]	; 0xffffffec
   3ae94:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3ae98:	and	r3, r3, #7
   3ae9c:	uxtb	r3, r3
   3aea0:	add	r3, r3, #48	; 0x30
   3aea4:	strb	r3, [fp, #-38]	; 0xffffffda
   3aea8:	b	3aef0 <__assert_fail@plt+0x28804>
   3aeac:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   3aeb0:	cmp	r3, #0
   3aeb4:	beq	3aef0 <__assert_fail@plt+0x28804>
   3aeb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aebc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3aec0:	cmp	r2, r3
   3aec4:	bcs	3aedc <__assert_fail@plt+0x287f0>
   3aec8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3aecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aed0:	add	r3, r2, r3
   3aed4:	mov	r2, #92	; 0x5c
   3aed8:	strb	r2, [r3]
   3aedc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aee0:	add	r3, r3, #1
   3aee4:	str	r3, [fp, #-20]	; 0xffffffec
   3aee8:	mov	r3, #0
   3aeec:	strb	r3, [fp, #-40]	; 0xffffffd8
   3aef0:	ldr	r3, [fp, #-16]
   3aef4:	add	r3, r3, #1
   3aef8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3aefc:	cmp	r2, r3
   3af00:	bls	3afe0 <__assert_fail@plt+0x288f4>
   3af04:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3af08:	cmp	r3, #0
   3af0c:	beq	3af8c <__assert_fail@plt+0x288a0>
   3af10:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3af14:	eor	r3, r3, #1
   3af18:	uxtb	r3, r3
   3af1c:	cmp	r3, #0
   3af20:	beq	3af8c <__assert_fail@plt+0x288a0>
   3af24:	ldr	r2, [fp, #-20]	; 0xffffffec
   3af28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3af2c:	cmp	r2, r3
   3af30:	bcs	3af48 <__assert_fail@plt+0x2885c>
   3af34:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3af38:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af3c:	add	r3, r2, r3
   3af40:	mov	r2, #39	; 0x27
   3af44:	strb	r2, [r3]
   3af48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af4c:	add	r3, r3, #1
   3af50:	str	r3, [fp, #-20]	; 0xffffffec
   3af54:	ldr	r2, [fp, #-20]	; 0xffffffec
   3af58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3af5c:	cmp	r2, r3
   3af60:	bcs	3af78 <__assert_fail@plt+0x2888c>
   3af64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3af68:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af6c:	add	r3, r2, r3
   3af70:	mov	r2, #39	; 0x27
   3af74:	strb	r2, [r3]
   3af78:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af7c:	add	r3, r3, #1
   3af80:	str	r3, [fp, #-20]	; 0xffffffec
   3af84:	mov	r3, #0
   3af88:	strb	r3, [fp, #-35]	; 0xffffffdd
   3af8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3af90:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3af94:	cmp	r2, r3
   3af98:	bcs	3afb0 <__assert_fail@plt+0x288c4>
   3af9c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3afa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3afa4:	add	r3, r2, r3
   3afa8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   3afac:	strb	r2, [r3]
   3afb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3afb4:	add	r3, r3, #1
   3afb8:	str	r3, [fp, #-20]	; 0xffffffec
   3afbc:	ldr	r3, [fp, #-16]
   3afc0:	add	r3, r3, #1
   3afc4:	str	r3, [fp, #-16]
   3afc8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3afcc:	ldr	r3, [fp, #-16]
   3afd0:	add	r3, r2, r3
   3afd4:	ldrb	r3, [r3]
   3afd8:	strb	r3, [fp, #-38]	; 0xffffffda
   3afdc:	b	3acf0 <__assert_fail@plt+0x28604>
   3afe0:	nop	{0}
   3afe4:	b	3b1bc <__assert_fail@plt+0x28ad0>
   3afe8:	nop	{0}
   3afec:	b	3b01c <__assert_fail@plt+0x28930>
   3aff0:	nop	{0}
   3aff4:	b	3b01c <__assert_fail@plt+0x28930>
   3aff8:	nop	{0}
   3affc:	b	3b01c <__assert_fail@plt+0x28930>
   3b000:	nop	{0}
   3b004:	b	3b01c <__assert_fail@plt+0x28930>
   3b008:	nop	{0}
   3b00c:	b	3b01c <__assert_fail@plt+0x28930>
   3b010:	nop	{0}
   3b014:	b	3b01c <__assert_fail@plt+0x28930>
   3b018:	nop	{0}
   3b01c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3b020:	eor	r3, r3, #1
   3b024:	uxtb	r3, r3
   3b028:	cmp	r3, #0
   3b02c:	bne	3b03c <__assert_fail@plt+0x28950>
   3b030:	ldr	r3, [fp, #4]
   3b034:	cmp	r3, #2
   3b038:	bne	3b050 <__assert_fail@plt+0x28964>
   3b03c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3b040:	eor	r3, r3, #1
   3b044:	uxtb	r3, r3
   3b048:	cmp	r3, #0
   3b04c:	bne	3b090 <__assert_fail@plt+0x289a4>
   3b050:	ldr	r3, [fp, #12]
   3b054:	cmp	r3, #0
   3b058:	beq	3b090 <__assert_fail@plt+0x289a4>
   3b05c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3b060:	lsr	r3, r3, #5
   3b064:	uxtb	r3, r3
   3b068:	lsl	r3, r3, #2
   3b06c:	ldr	r2, [fp, #12]
   3b070:	add	r3, r2, r3
   3b074:	ldr	r2, [r3]
   3b078:	ldrb	r3, [fp, #-38]	; 0xffffffda
   3b07c:	and	r3, r3, #31
   3b080:	lsr	r3, r2, r3
   3b084:	and	r3, r3, #1
   3b088:	cmp	r3, #0
   3b08c:	bne	3b0a4 <__assert_fail@plt+0x289b8>
   3b090:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   3b094:	eor	r3, r3, #1
   3b098:	uxtb	r3, r3
   3b09c:	cmp	r3, #0
   3b0a0:	bne	3b1b8 <__assert_fail@plt+0x28acc>
   3b0a4:	nop	{0}
   3b0a8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3b0ac:	cmp	r3, #0
   3b0b0:	bne	3b488 <__assert_fail@plt+0x28d9c>
   3b0b4:	mov	r3, #1
   3b0b8:	strb	r3, [fp, #-41]	; 0xffffffd7
   3b0bc:	ldr	r3, [fp, #4]
   3b0c0:	cmp	r3, #2
   3b0c4:	bne	3b174 <__assert_fail@plt+0x28a88>
   3b0c8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3b0cc:	eor	r3, r3, #1
   3b0d0:	uxtb	r3, r3
   3b0d4:	cmp	r3, #0
   3b0d8:	beq	3b174 <__assert_fail@plt+0x28a88>
   3b0dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b0e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b0e4:	cmp	r2, r3
   3b0e8:	bcs	3b100 <__assert_fail@plt+0x28a14>
   3b0ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b0f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b0f4:	add	r3, r2, r3
   3b0f8:	mov	r2, #39	; 0x27
   3b0fc:	strb	r2, [r3]
   3b100:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b104:	add	r3, r3, #1
   3b108:	str	r3, [fp, #-20]	; 0xffffffec
   3b10c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b110:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b114:	cmp	r2, r3
   3b118:	bcs	3b130 <__assert_fail@plt+0x28a44>
   3b11c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b120:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b124:	add	r3, r2, r3
   3b128:	mov	r2, #36	; 0x24
   3b12c:	strb	r2, [r3]
   3b130:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b134:	add	r3, r3, #1
   3b138:	str	r3, [fp, #-20]	; 0xffffffec
   3b13c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b140:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b144:	cmp	r2, r3
   3b148:	bcs	3b160 <__assert_fail@plt+0x28a74>
   3b14c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b150:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b154:	add	r3, r2, r3
   3b158:	mov	r2, #39	; 0x27
   3b15c:	strb	r2, [r3]
   3b160:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b164:	add	r3, r3, #1
   3b168:	str	r3, [fp, #-20]	; 0xffffffec
   3b16c:	mov	r3, #1
   3b170:	strb	r3, [fp, #-35]	; 0xffffffdd
   3b174:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b178:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b17c:	cmp	r2, r3
   3b180:	bcs	3b198 <__assert_fail@plt+0x28aac>
   3b184:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b188:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b18c:	add	r3, r2, r3
   3b190:	mov	r2, #92	; 0x5c
   3b194:	strb	r2, [r3]
   3b198:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b19c:	add	r3, r3, #1
   3b1a0:	str	r3, [fp, #-20]	; 0xffffffec
   3b1a4:	b	3b1bc <__assert_fail@plt+0x28ad0>
   3b1a8:	nop	{0}
   3b1ac:	b	3b1bc <__assert_fail@plt+0x28ad0>
   3b1b0:	nop	{0}
   3b1b4:	b	3b1bc <__assert_fail@plt+0x28ad0>
   3b1b8:	nop	{0}
   3b1bc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   3b1c0:	cmp	r3, #0
   3b1c4:	beq	3b244 <__assert_fail@plt+0x28b58>
   3b1c8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   3b1cc:	eor	r3, r3, #1
   3b1d0:	uxtb	r3, r3
   3b1d4:	cmp	r3, #0
   3b1d8:	beq	3b244 <__assert_fail@plt+0x28b58>
   3b1dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b1e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b1e4:	cmp	r2, r3
   3b1e8:	bcs	3b200 <__assert_fail@plt+0x28b14>
   3b1ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b1f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b1f4:	add	r3, r2, r3
   3b1f8:	mov	r2, #39	; 0x27
   3b1fc:	strb	r2, [r3]
   3b200:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b204:	add	r3, r3, #1
   3b208:	str	r3, [fp, #-20]	; 0xffffffec
   3b20c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b210:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b214:	cmp	r2, r3
   3b218:	bcs	3b230 <__assert_fail@plt+0x28b44>
   3b21c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b220:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b224:	add	r3, r2, r3
   3b228:	mov	r2, #39	; 0x27
   3b22c:	strb	r2, [r3]
   3b230:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b234:	add	r3, r3, #1
   3b238:	str	r3, [fp, #-20]	; 0xffffffec
   3b23c:	mov	r3, #0
   3b240:	strb	r3, [fp, #-35]	; 0xffffffdd
   3b244:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b248:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b24c:	cmp	r2, r3
   3b250:	bcs	3b268 <__assert_fail@plt+0x28b7c>
   3b254:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b258:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b25c:	add	r3, r2, r3
   3b260:	ldrb	r2, [fp, #-38]	; 0xffffffda
   3b264:	strb	r2, [r3]
   3b268:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b26c:	add	r3, r3, #1
   3b270:	str	r3, [fp, #-20]	; 0xffffffec
   3b274:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   3b278:	eor	r3, r3, #1
   3b27c:	uxtb	r3, r3
   3b280:	cmp	r3, #0
   3b284:	beq	3b290 <__assert_fail@plt+0x28ba4>
   3b288:	mov	r3, #0
   3b28c:	strb	r3, [fp, #-37]	; 0xffffffdb
   3b290:	ldr	r3, [fp, #-16]
   3b294:	add	r3, r3, #1
   3b298:	str	r3, [fp, #-16]
   3b29c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3b2a0:	cmn	r3, #1
   3b2a4:	bne	3b2cc <__assert_fail@plt+0x28be0>
   3b2a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3b2ac:	ldr	r3, [fp, #-16]
   3b2b0:	add	r3, r2, r3
   3b2b4:	ldrb	r3, [r3]
   3b2b8:	cmp	r3, #0
   3b2bc:	movne	r3, #1
   3b2c0:	moveq	r3, #0
   3b2c4:	uxtb	r3, r3
   3b2c8:	b	3b2e4 <__assert_fail@plt+0x28bf8>
   3b2cc:	ldr	r2, [fp, #-16]
   3b2d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3b2d4:	cmp	r2, r3
   3b2d8:	movne	r3, #1
   3b2dc:	moveq	r3, #0
   3b2e0:	uxtb	r3, r3
   3b2e4:	cmp	r3, #0
   3b2e8:	bne	3a104 <__assert_fail@plt+0x27a18>
   3b2ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b2f0:	cmp	r3, #0
   3b2f4:	bne	3b310 <__assert_fail@plt+0x28c24>
   3b2f8:	ldr	r3, [fp, #4]
   3b2fc:	cmp	r3, #2
   3b300:	bne	3b310 <__assert_fail@plt+0x28c24>
   3b304:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3b308:	cmp	r3, #0
   3b30c:	bne	3b490 <__assert_fail@plt+0x28da4>
   3b310:	ldr	r3, [fp, #4]
   3b314:	cmp	r3, #2
   3b318:	bne	3b3b8 <__assert_fail@plt+0x28ccc>
   3b31c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3b320:	eor	r3, r3, #1
   3b324:	uxtb	r3, r3
   3b328:	cmp	r3, #0
   3b32c:	beq	3b3b8 <__assert_fail@plt+0x28ccc>
   3b330:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   3b334:	cmp	r3, #0
   3b338:	beq	3b3b8 <__assert_fail@plt+0x28ccc>
   3b33c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   3b340:	cmp	r3, #0
   3b344:	beq	3b38c <__assert_fail@plt+0x28ca0>
   3b348:	ldr	r3, [fp, #20]
   3b34c:	str	r3, [sp, #16]
   3b350:	ldr	r3, [fp, #16]
   3b354:	str	r3, [sp, #12]
   3b358:	ldr	r3, [fp, #12]
   3b35c:	str	r3, [sp, #8]
   3b360:	ldr	r3, [fp, #8]
   3b364:	str	r3, [sp, #4]
   3b368:	mov	r3, #5
   3b36c:	str	r3, [sp]
   3b370:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3b374:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3b378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3b37c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3b380:	bl	39e3c <__assert_fail@plt+0x27750>
   3b384:	mov	r3, r0
   3b388:	b	3b4f8 <__assert_fail@plt+0x28e0c>
   3b38c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b390:	cmp	r3, #0
   3b394:	bne	3b3b8 <__assert_fail@plt+0x28ccc>
   3b398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b39c:	cmp	r3, #0
   3b3a0:	beq	3b3b8 <__assert_fail@plt+0x28ccc>
   3b3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b3a8:	str	r3, [fp, #-92]	; 0xffffffa4
   3b3ac:	mov	r3, #0
   3b3b0:	str	r3, [fp, #-20]	; 0xffffffec
   3b3b4:	b	39ed0 <__assert_fail@plt+0x277e4>
   3b3b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b3bc:	cmp	r3, #0
   3b3c0:	beq	3b42c <__assert_fail@plt+0x28d40>
   3b3c4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   3b3c8:	eor	r3, r3, #1
   3b3cc:	uxtb	r3, r3
   3b3d0:	cmp	r3, #0
   3b3d4:	beq	3b42c <__assert_fail@plt+0x28d40>
   3b3d8:	b	3b41c <__assert_fail@plt+0x28d30>
   3b3dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b3e0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b3e4:	cmp	r2, r3
   3b3e8:	bcs	3b404 <__assert_fail@plt+0x28d18>
   3b3ec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b3f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b3f4:	add	r3, r2, r3
   3b3f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b3fc:	ldrb	r2, [r2]
   3b400:	strb	r2, [r3]
   3b404:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b408:	add	r3, r3, #1
   3b40c:	str	r3, [fp, #-20]	; 0xffffffec
   3b410:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b414:	add	r3, r3, #1
   3b418:	str	r3, [fp, #-28]	; 0xffffffe4
   3b41c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b420:	ldrb	r3, [r3]
   3b424:	cmp	r3, #0
   3b428:	bne	3b3dc <__assert_fail@plt+0x28cf0>
   3b42c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b430:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3b434:	cmp	r2, r3
   3b438:	bcs	3b450 <__assert_fail@plt+0x28d64>
   3b43c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   3b440:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b444:	add	r3, r2, r3
   3b448:	mov	r2, #0
   3b44c:	strb	r2, [r3]
   3b450:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b454:	b	3b4f8 <__assert_fail@plt+0x28e0c>
   3b458:	nop	{0}
   3b45c:	b	3b494 <__assert_fail@plt+0x28da8>
   3b460:	nop	{0}
   3b464:	b	3b494 <__assert_fail@plt+0x28da8>
   3b468:	nop	{0}
   3b46c:	b	3b494 <__assert_fail@plt+0x28da8>
   3b470:	nop	{0}
   3b474:	b	3b494 <__assert_fail@plt+0x28da8>
   3b478:	nop	{0}
   3b47c:	b	3b494 <__assert_fail@plt+0x28da8>
   3b480:	nop	{0}
   3b484:	b	3b494 <__assert_fail@plt+0x28da8>
   3b488:	nop	{0}
   3b48c:	b	3b494 <__assert_fail@plt+0x28da8>
   3b490:	nop	{0}
   3b494:	ldr	r3, [fp, #4]
   3b498:	cmp	r3, #2
   3b49c:	bne	3b4b4 <__assert_fail@plt+0x28dc8>
   3b4a0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   3b4a4:	cmp	r3, #0
   3b4a8:	beq	3b4b4 <__assert_fail@plt+0x28dc8>
   3b4ac:	mov	r3, #4
   3b4b0:	str	r3, [fp, #4]
   3b4b4:	ldr	r3, [fp, #8]
   3b4b8:	bic	r3, r3, #2
   3b4bc:	ldr	r2, [fp, #20]
   3b4c0:	str	r2, [sp, #16]
   3b4c4:	ldr	r2, [fp, #16]
   3b4c8:	str	r2, [sp, #12]
   3b4cc:	mov	r2, #0
   3b4d0:	str	r2, [sp, #8]
   3b4d4:	str	r3, [sp, #4]
   3b4d8:	ldr	r3, [fp, #4]
   3b4dc:	str	r3, [sp]
   3b4e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   3b4e4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   3b4e8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   3b4ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3b4f0:	bl	39e3c <__assert_fail@plt+0x27750>
   3b4f4:	mov	r3, r0
   3b4f8:	mov	r0, r3
   3b4fc:	sub	sp, fp, #8
   3b500:	ldr	r4, [sp]
   3b504:	ldr	fp, [sp, #4]
   3b508:	add	sp, sp, #8
   3b50c:	pop	{pc}		; (ldr pc, [sp], #4)
   3b510:	str	fp, [sp, #-8]!
   3b514:	str	lr, [sp, #4]
   3b518:	add	fp, sp, #4
   3b51c:	sub	sp, sp, #56	; 0x38
   3b520:	str	r0, [fp, #-24]	; 0xffffffe8
   3b524:	str	r1, [fp, #-28]	; 0xffffffe4
   3b528:	str	r2, [fp, #-32]	; 0xffffffe0
   3b52c:	str	r3, [fp, #-36]	; 0xffffffdc
   3b530:	ldr	r3, [fp, #4]
   3b534:	cmp	r3, #0
   3b538:	beq	3b544 <__assert_fail@plt+0x28e58>
   3b53c:	ldr	r3, [fp, #4]
   3b540:	b	3b54c <__assert_fail@plt+0x28e60>
   3b544:	movw	r3, #52968	; 0xcee8
   3b548:	movt	r3, #7
   3b54c:	str	r3, [fp, #-8]
   3b550:	bl	12404 <__errno_location@plt>
   3b554:	mov	r3, r0
   3b558:	ldr	r3, [r3]
   3b55c:	str	r3, [fp, #-12]
   3b560:	ldr	r3, [fp, #-8]
   3b564:	ldr	r3, [r3]
   3b568:	ldr	r2, [fp, #-8]
   3b56c:	ldr	r2, [r2, #4]
   3b570:	ldr	r1, [fp, #-8]
   3b574:	add	r1, r1, #8
   3b578:	ldr	r0, [fp, #-8]
   3b57c:	ldr	r0, [r0, #40]	; 0x28
   3b580:	ldr	ip, [fp, #-8]
   3b584:	ldr	ip, [ip, #44]	; 0x2c
   3b588:	str	ip, [sp, #16]
   3b58c:	str	r0, [sp, #12]
   3b590:	str	r1, [sp, #8]
   3b594:	str	r2, [sp, #4]
   3b598:	str	r3, [sp]
   3b59c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b5a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b5a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3b5a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b5ac:	bl	39e3c <__assert_fail@plt+0x27750>
   3b5b0:	str	r0, [fp, #-16]
   3b5b4:	bl	12404 <__errno_location@plt>
   3b5b8:	mov	r2, r0
   3b5bc:	ldr	r3, [fp, #-12]
   3b5c0:	str	r3, [r2]
   3b5c4:	ldr	r3, [fp, #-16]
   3b5c8:	mov	r0, r3
   3b5cc:	sub	sp, fp, #4
   3b5d0:	ldr	fp, [sp]
   3b5d4:	add	sp, sp, #4
   3b5d8:	pop	{pc}		; (ldr pc, [sp], #4)
   3b5dc:	str	fp, [sp, #-8]!
   3b5e0:	str	lr, [sp, #4]
   3b5e4:	add	fp, sp, #4
   3b5e8:	sub	sp, sp, #16
   3b5ec:	str	r0, [fp, #-8]
   3b5f0:	str	r1, [fp, #-12]
   3b5f4:	str	r2, [fp, #-16]
   3b5f8:	ldr	r3, [fp, #-16]
   3b5fc:	mov	r2, #0
   3b600:	ldr	r1, [fp, #-12]
   3b604:	ldr	r0, [fp, #-8]
   3b608:	bl	3b624 <__assert_fail@plt+0x28f38>
   3b60c:	mov	r3, r0
   3b610:	mov	r0, r3
   3b614:	sub	sp, fp, #4
   3b618:	ldr	fp, [sp]
   3b61c:	add	sp, sp, #4
   3b620:	pop	{pc}		; (ldr pc, [sp], #4)
   3b624:	str	fp, [sp, #-8]!
   3b628:	str	lr, [sp, #4]
   3b62c:	add	fp, sp, #4
   3b630:	sub	sp, sp, #64	; 0x40
   3b634:	str	r0, [fp, #-32]	; 0xffffffe0
   3b638:	str	r1, [fp, #-36]	; 0xffffffdc
   3b63c:	str	r2, [fp, #-40]	; 0xffffffd8
   3b640:	str	r3, [fp, #-44]	; 0xffffffd4
   3b644:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b648:	cmp	r3, #0
   3b64c:	beq	3b658 <__assert_fail@plt+0x28f6c>
   3b650:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b654:	b	3b660 <__assert_fail@plt+0x28f74>
   3b658:	movw	r3, #52968	; 0xcee8
   3b65c:	movt	r3, #7
   3b660:	str	r3, [fp, #-8]
   3b664:	bl	12404 <__errno_location@plt>
   3b668:	mov	r3, r0
   3b66c:	ldr	r3, [r3]
   3b670:	str	r3, [fp, #-12]
   3b674:	ldr	r3, [fp, #-8]
   3b678:	ldr	r3, [r3, #4]
   3b67c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b680:	cmp	r2, #0
   3b684:	moveq	r2, #1
   3b688:	movne	r2, #0
   3b68c:	uxtb	r2, r2
   3b690:	orr	r3, r3, r2
   3b694:	str	r3, [fp, #-16]
   3b698:	ldr	r3, [fp, #-8]
   3b69c:	ldr	r3, [r3]
   3b6a0:	ldr	r2, [fp, #-8]
   3b6a4:	add	r2, r2, #8
   3b6a8:	ldr	r1, [fp, #-8]
   3b6ac:	ldr	r1, [r1, #40]	; 0x28
   3b6b0:	ldr	r0, [fp, #-8]
   3b6b4:	ldr	r0, [r0, #44]	; 0x2c
   3b6b8:	str	r0, [sp, #16]
   3b6bc:	str	r1, [sp, #12]
   3b6c0:	str	r2, [sp, #8]
   3b6c4:	ldr	r2, [fp, #-16]
   3b6c8:	str	r2, [sp, #4]
   3b6cc:	str	r3, [sp]
   3b6d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b6d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b6d8:	mov	r1, #0
   3b6dc:	mov	r0, #0
   3b6e0:	bl	39e3c <__assert_fail@plt+0x27750>
   3b6e4:	mov	r3, r0
   3b6e8:	add	r3, r3, #1
   3b6ec:	str	r3, [fp, #-20]	; 0xffffffec
   3b6f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b6f4:	bl	3d96c <__assert_fail@plt+0x2b280>
   3b6f8:	mov	r3, r0
   3b6fc:	str	r3, [fp, #-24]	; 0xffffffe8
   3b700:	ldr	r3, [fp, #-8]
   3b704:	ldr	r3, [r3]
   3b708:	ldr	r2, [fp, #-8]
   3b70c:	add	r2, r2, #8
   3b710:	ldr	r1, [fp, #-8]
   3b714:	ldr	r1, [r1, #40]	; 0x28
   3b718:	ldr	r0, [fp, #-8]
   3b71c:	ldr	r0, [r0, #44]	; 0x2c
   3b720:	str	r0, [sp, #16]
   3b724:	str	r1, [sp, #12]
   3b728:	str	r2, [sp, #8]
   3b72c:	ldr	r2, [fp, #-16]
   3b730:	str	r2, [sp, #4]
   3b734:	str	r3, [sp]
   3b738:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b73c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b740:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b748:	bl	39e3c <__assert_fail@plt+0x27750>
   3b74c:	bl	12404 <__errno_location@plt>
   3b750:	mov	r2, r0
   3b754:	ldr	r3, [fp, #-12]
   3b758:	str	r3, [r2]
   3b75c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3b760:	cmp	r3, #0
   3b764:	beq	3b778 <__assert_fail@plt+0x2908c>
   3b768:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b76c:	sub	r2, r3, #1
   3b770:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3b774:	str	r2, [r3]
   3b778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b77c:	mov	r0, r3
   3b780:	sub	sp, fp, #4
   3b784:	ldr	fp, [sp]
   3b788:	add	sp, sp, #4
   3b78c:	pop	{pc}		; (ldr pc, [sp], #4)
   3b790:	str	fp, [sp, #-8]!
   3b794:	str	lr, [sp, #4]
   3b798:	add	fp, sp, #4
   3b79c:	sub	sp, sp, #8
   3b7a0:	movw	r3, #50908	; 0xc6dc
   3b7a4:	movt	r3, #7
   3b7a8:	ldr	r3, [r3]
   3b7ac:	str	r3, [fp, #-12]
   3b7b0:	mov	r3, #1
   3b7b4:	str	r3, [fp, #-8]
   3b7b8:	b	3b7e4 <__assert_fail@plt+0x290f8>
   3b7bc:	ldr	r3, [fp, #-8]
   3b7c0:	lsl	r3, r3, #3
   3b7c4:	ldr	r2, [fp, #-12]
   3b7c8:	add	r3, r2, r3
   3b7cc:	ldr	r3, [r3, #4]
   3b7d0:	mov	r0, r3
   3b7d4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3b7d8:	ldr	r3, [fp, #-8]
   3b7dc:	add	r3, r3, #1
   3b7e0:	str	r3, [fp, #-8]
   3b7e4:	movw	r3, #50896	; 0xc6d0
   3b7e8:	movt	r3, #7
   3b7ec:	ldr	r3, [r3]
   3b7f0:	ldr	r2, [fp, #-8]
   3b7f4:	cmp	r2, r3
   3b7f8:	blt	3b7bc <__assert_fail@plt+0x290d0>
   3b7fc:	ldr	r3, [fp, #-12]
   3b800:	ldr	r2, [r3, #4]
   3b804:	movw	r3, #53016	; 0xcf18
   3b808:	movt	r3, #7
   3b80c:	cmp	r2, r3
   3b810:	beq	3b848 <__assert_fail@plt+0x2915c>
   3b814:	ldr	r3, [fp, #-12]
   3b818:	ldr	r3, [r3, #4]
   3b81c:	mov	r0, r3
   3b820:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3b824:	movw	r3, #50900	; 0xc6d4
   3b828:	movt	r3, #7
   3b82c:	mov	r2, #256	; 0x100
   3b830:	str	r2, [r3]
   3b834:	movw	r3, #50900	; 0xc6d4
   3b838:	movt	r3, #7
   3b83c:	movw	r2, #53016	; 0xcf18
   3b840:	movt	r2, #7
   3b844:	str	r2, [r3, #4]
   3b848:	ldr	r2, [fp, #-12]
   3b84c:	movw	r3, #50900	; 0xc6d4
   3b850:	movt	r3, #7
   3b854:	cmp	r2, r3
   3b858:	beq	3b878 <__assert_fail@plt+0x2918c>
   3b85c:	ldr	r0, [fp, #-12]
   3b860:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3b864:	movw	r3, #50908	; 0xc6dc
   3b868:	movt	r3, #7
   3b86c:	movw	r2, #50900	; 0xc6d4
   3b870:	movt	r2, #7
   3b874:	str	r2, [r3]
   3b878:	movw	r3, #50896	; 0xc6d0
   3b87c:	movt	r3, #7
   3b880:	mov	r2, #1
   3b884:	str	r2, [r3]
   3b888:	nop	{0}
   3b88c:	sub	sp, fp, #4
   3b890:	ldr	fp, [sp]
   3b894:	add	sp, sp, #4
   3b898:	pop	{pc}		; (ldr pc, [sp], #4)
   3b89c:	str	fp, [sp, #-8]!
   3b8a0:	str	lr, [sp, #4]
   3b8a4:	add	fp, sp, #4
   3b8a8:	sub	sp, sp, #80	; 0x50
   3b8ac:	str	r0, [fp, #-48]	; 0xffffffd0
   3b8b0:	str	r1, [fp, #-52]	; 0xffffffcc
   3b8b4:	str	r2, [fp, #-56]	; 0xffffffc8
   3b8b8:	str	r3, [fp, #-60]	; 0xffffffc4
   3b8bc:	bl	12404 <__errno_location@plt>
   3b8c0:	mov	r3, r0
   3b8c4:	ldr	r3, [r3]
   3b8c8:	str	r3, [fp, #-16]
   3b8cc:	movw	r3, #50908	; 0xc6dc
   3b8d0:	movt	r3, #7
   3b8d4:	ldr	r3, [r3]
   3b8d8:	str	r3, [fp, #-8]
   3b8dc:	mvn	r3, #-2147483648	; 0x80000000
   3b8e0:	str	r3, [fp, #-20]	; 0xffffffec
   3b8e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b8e8:	cmp	r3, #0
   3b8ec:	blt	3b900 <__assert_fail@plt+0x29214>
   3b8f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3b8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b8f8:	cmp	r2, r3
   3b8fc:	blt	3b904 <__assert_fail@plt+0x29218>
   3b900:	bl	12698 <abort@plt>
   3b904:	movw	r3, #50896	; 0xc6d0
   3b908:	movt	r3, #7
   3b90c:	ldr	r3, [r3]
   3b910:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3b914:	cmp	r2, r3
   3b918:	blt	3ba10 <__assert_fail@plt+0x29324>
   3b91c:	ldr	r2, [fp, #-8]
   3b920:	movw	r3, #50900	; 0xc6d4
   3b924:	movt	r3, #7
   3b928:	cmp	r2, r3
   3b92c:	moveq	r3, #1
   3b930:	movne	r3, #0
   3b934:	strb	r3, [fp, #-21]	; 0xffffffeb
   3b938:	movw	r3, #50896	; 0xc6d0
   3b93c:	movt	r3, #7
   3b940:	ldr	r3, [r3]
   3b944:	str	r3, [fp, #-40]	; 0xffffffd8
   3b948:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b94c:	cmp	r3, #0
   3b950:	beq	3b95c <__assert_fail@plt+0x29270>
   3b954:	mov	r0, #0
   3b958:	b	3b960 <__assert_fail@plt+0x29274>
   3b95c:	ldr	r0, [fp, #-8]
   3b960:	movw	r3, #50896	; 0xc6d0
   3b964:	movt	r3, #7
   3b968:	ldr	r3, [r3]
   3b96c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3b970:	sub	r3, r2, r3
   3b974:	add	r2, r3, #1
   3b978:	sub	r1, fp, #40	; 0x28
   3b97c:	mov	r3, #8
   3b980:	str	r3, [sp]
   3b984:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b988:	bl	3dccc <__assert_fail@plt+0x2b5e0>
   3b98c:	str	r0, [fp, #-8]
   3b990:	movw	r3, #50908	; 0xc6dc
   3b994:	movt	r3, #7
   3b998:	ldr	r2, [fp, #-8]
   3b99c:	str	r2, [r3]
   3b9a0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b9a4:	cmp	r3, #0
   3b9a8:	beq	3b9c4 <__assert_fail@plt+0x292d8>
   3b9ac:	ldr	r2, [fp, #-8]
   3b9b0:	movw	r3, #50900	; 0xc6d4
   3b9b4:	movt	r3, #7
   3b9b8:	mov	r1, r2
   3b9bc:	ldrd	r2, [r3]
   3b9c0:	strd	r2, [r1]
   3b9c4:	movw	r3, #50896	; 0xc6d0
   3b9c8:	movt	r3, #7
   3b9cc:	ldr	r3, [r3]
   3b9d0:	lsl	r3, r3, #3
   3b9d4:	ldr	r2, [fp, #-8]
   3b9d8:	add	r0, r2, r3
   3b9dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b9e0:	movw	r3, #50896	; 0xc6d0
   3b9e4:	movt	r3, #7
   3b9e8:	ldr	r3, [r3]
   3b9ec:	sub	r3, r2, r3
   3b9f0:	lsl	r3, r3, #3
   3b9f4:	mov	r2, r3
   3b9f8:	mov	r1, #0
   3b9fc:	bl	12434 <memset@plt>
   3ba00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3ba04:	movw	r3, #50896	; 0xc6d0
   3ba08:	movt	r3, #7
   3ba0c:	str	r2, [r3]
   3ba10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ba14:	lsl	r3, r3, #3
   3ba18:	ldr	r2, [fp, #-8]
   3ba1c:	add	r3, r2, r3
   3ba20:	ldr	r3, [r3]
   3ba24:	str	r3, [fp, #-28]	; 0xffffffe4
   3ba28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ba2c:	lsl	r3, r3, #3
   3ba30:	ldr	r2, [fp, #-8]
   3ba34:	add	r3, r2, r3
   3ba38:	ldr	r3, [r3, #4]
   3ba3c:	str	r3, [fp, #-12]
   3ba40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3ba44:	ldr	r3, [r3, #4]
   3ba48:	orr	r3, r3, #1
   3ba4c:	str	r3, [fp, #-32]	; 0xffffffe0
   3ba50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3ba54:	ldr	r3, [r3]
   3ba58:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3ba5c:	add	r2, r2, #8
   3ba60:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3ba64:	ldr	r1, [r1, #40]	; 0x28
   3ba68:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3ba6c:	ldr	r0, [r0, #44]	; 0x2c
   3ba70:	str	r0, [sp, #16]
   3ba74:	str	r1, [sp, #12]
   3ba78:	str	r2, [sp, #8]
   3ba7c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3ba80:	str	r2, [sp, #4]
   3ba84:	str	r3, [sp]
   3ba88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3ba8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3ba90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ba94:	ldr	r0, [fp, #-12]
   3ba98:	bl	39e3c <__assert_fail@plt+0x27750>
   3ba9c:	str	r0, [fp, #-36]	; 0xffffffdc
   3baa0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3baa4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3baa8:	cmp	r2, r3
   3baac:	bhi	3bb64 <__assert_fail@plt+0x29478>
   3bab0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3bab4:	add	r3, r3, #1
   3bab8:	str	r3, [fp, #-28]	; 0xffffffe4
   3babc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3bac0:	lsl	r3, r3, #3
   3bac4:	ldr	r2, [fp, #-8]
   3bac8:	add	r3, r2, r3
   3bacc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3bad0:	str	r2, [r3]
   3bad4:	ldr	r2, [fp, #-12]
   3bad8:	movw	r3, #53016	; 0xcf18
   3badc:	movt	r3, #7
   3bae0:	cmp	r2, r3
   3bae4:	beq	3baf0 <__assert_fail@plt+0x29404>
   3bae8:	ldr	r0, [fp, #-12]
   3baec:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3baf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3baf4:	bl	3d96c <__assert_fail@plt+0x2b280>
   3baf8:	mov	r3, r0
   3bafc:	str	r3, [fp, #-12]
   3bb00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3bb04:	lsl	r3, r3, #3
   3bb08:	ldr	r2, [fp, #-8]
   3bb0c:	add	r3, r2, r3
   3bb10:	ldr	r2, [fp, #-12]
   3bb14:	str	r2, [r3, #4]
   3bb18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3bb1c:	ldr	r3, [r3]
   3bb20:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3bb24:	add	r2, r2, #8
   3bb28:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3bb2c:	ldr	r1, [r1, #40]	; 0x28
   3bb30:	ldr	r0, [fp, #-60]	; 0xffffffc4
   3bb34:	ldr	r0, [r0, #44]	; 0x2c
   3bb38:	str	r0, [sp, #16]
   3bb3c:	str	r1, [sp, #12]
   3bb40:	str	r2, [sp, #8]
   3bb44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3bb48:	str	r2, [sp, #4]
   3bb4c:	str	r3, [sp]
   3bb50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3bb54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3bb58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bb5c:	ldr	r0, [fp, #-12]
   3bb60:	bl	39e3c <__assert_fail@plt+0x27750>
   3bb64:	bl	12404 <__errno_location@plt>
   3bb68:	mov	r2, r0
   3bb6c:	ldr	r3, [fp, #-16]
   3bb70:	str	r3, [r2]
   3bb74:	ldr	r3, [fp, #-12]
   3bb78:	mov	r0, r3
   3bb7c:	sub	sp, fp, #4
   3bb80:	ldr	fp, [sp]
   3bb84:	add	sp, sp, #4
   3bb88:	pop	{pc}		; (ldr pc, [sp], #4)
   3bb8c:	str	fp, [sp, #-8]!
   3bb90:	str	lr, [sp, #4]
   3bb94:	add	fp, sp, #4
   3bb98:	sub	sp, sp, #8
   3bb9c:	str	r0, [fp, #-8]
   3bba0:	str	r1, [fp, #-12]
   3bba4:	movw	r3, #52968	; 0xcee8
   3bba8:	movt	r3, #7
   3bbac:	mvn	r2, #0
   3bbb0:	ldr	r1, [fp, #-12]
   3bbb4:	ldr	r0, [fp, #-8]
   3bbb8:	bl	3b89c <__assert_fail@plt+0x291b0>
   3bbbc:	mov	r3, r0
   3bbc0:	mov	r0, r3
   3bbc4:	sub	sp, fp, #4
   3bbc8:	ldr	fp, [sp]
   3bbcc:	add	sp, sp, #4
   3bbd0:	pop	{pc}		; (ldr pc, [sp], #4)
   3bbd4:	str	fp, [sp, #-8]!
   3bbd8:	str	lr, [sp, #4]
   3bbdc:	add	fp, sp, #4
   3bbe0:	sub	sp, sp, #16
   3bbe4:	str	r0, [fp, #-8]
   3bbe8:	str	r1, [fp, #-12]
   3bbec:	str	r2, [fp, #-16]
   3bbf0:	movw	r3, #52968	; 0xcee8
   3bbf4:	movt	r3, #7
   3bbf8:	ldr	r2, [fp, #-16]
   3bbfc:	ldr	r1, [fp, #-12]
   3bc00:	ldr	r0, [fp, #-8]
   3bc04:	bl	3b89c <__assert_fail@plt+0x291b0>
   3bc08:	mov	r3, r0
   3bc0c:	mov	r0, r3
   3bc10:	sub	sp, fp, #4
   3bc14:	ldr	fp, [sp]
   3bc18:	add	sp, sp, #4
   3bc1c:	pop	{pc}		; (ldr pc, [sp], #4)
   3bc20:	str	fp, [sp, #-8]!
   3bc24:	str	lr, [sp, #4]
   3bc28:	add	fp, sp, #4
   3bc2c:	sub	sp, sp, #8
   3bc30:	str	r0, [fp, #-8]
   3bc34:	ldr	r1, [fp, #-8]
   3bc38:	mov	r0, #0
   3bc3c:	bl	3bb8c <__assert_fail@plt+0x294a0>
   3bc40:	mov	r3, r0
   3bc44:	mov	r0, r3
   3bc48:	sub	sp, fp, #4
   3bc4c:	ldr	fp, [sp]
   3bc50:	add	sp, sp, #4
   3bc54:	pop	{pc}		; (ldr pc, [sp], #4)
   3bc58:	str	fp, [sp, #-8]!
   3bc5c:	str	lr, [sp, #4]
   3bc60:	add	fp, sp, #4
   3bc64:	sub	sp, sp, #8
   3bc68:	str	r0, [fp, #-8]
   3bc6c:	str	r1, [fp, #-12]
   3bc70:	ldr	r2, [fp, #-12]
   3bc74:	ldr	r1, [fp, #-8]
   3bc78:	mov	r0, #0
   3bc7c:	bl	3bbd4 <__assert_fail@plt+0x294e8>
   3bc80:	mov	r3, r0
   3bc84:	mov	r0, r3
   3bc88:	sub	sp, fp, #4
   3bc8c:	ldr	fp, [sp]
   3bc90:	add	sp, sp, #4
   3bc94:	pop	{pc}		; (ldr pc, [sp], #4)
   3bc98:	str	fp, [sp, #-8]!
   3bc9c:	str	lr, [sp, #4]
   3bca0:	add	fp, sp, #4
   3bca4:	sub	sp, sp, #64	; 0x40
   3bca8:	str	r0, [fp, #-56]	; 0xffffffc8
   3bcac:	str	r1, [fp, #-60]	; 0xffffffc4
   3bcb0:	str	r2, [fp, #-64]	; 0xffffffc0
   3bcb4:	sub	r3, fp, #52	; 0x34
   3bcb8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3bcbc:	mov	r0, r3
   3bcc0:	bl	39c98 <__assert_fail@plt+0x275ac>
   3bcc4:	sub	r3, fp, #52	; 0x34
   3bcc8:	mvn	r2, #0
   3bccc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3bcd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3bcd4:	bl	3b89c <__assert_fail@plt+0x291b0>
   3bcd8:	mov	r3, r0
   3bcdc:	mov	r0, r3
   3bce0:	sub	sp, fp, #4
   3bce4:	ldr	fp, [sp]
   3bce8:	add	sp, sp, #4
   3bcec:	pop	{pc}		; (ldr pc, [sp], #4)
   3bcf0:	str	fp, [sp, #-8]!
   3bcf4:	str	lr, [sp, #4]
   3bcf8:	add	fp, sp, #4
   3bcfc:	sub	sp, sp, #64	; 0x40
   3bd00:	str	r0, [fp, #-56]	; 0xffffffc8
   3bd04:	str	r1, [fp, #-60]	; 0xffffffc4
   3bd08:	str	r2, [fp, #-64]	; 0xffffffc0
   3bd0c:	str	r3, [fp, #-68]	; 0xffffffbc
   3bd10:	sub	r3, fp, #52	; 0x34
   3bd14:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3bd18:	mov	r0, r3
   3bd1c:	bl	39c98 <__assert_fail@plt+0x275ac>
   3bd20:	sub	r3, fp, #52	; 0x34
   3bd24:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3bd28:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3bd2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3bd30:	bl	3b89c <__assert_fail@plt+0x291b0>
   3bd34:	mov	r3, r0
   3bd38:	mov	r0, r3
   3bd3c:	sub	sp, fp, #4
   3bd40:	ldr	fp, [sp]
   3bd44:	add	sp, sp, #4
   3bd48:	pop	{pc}		; (ldr pc, [sp], #4)
   3bd4c:	str	fp, [sp, #-8]!
   3bd50:	str	lr, [sp, #4]
   3bd54:	add	fp, sp, #4
   3bd58:	sub	sp, sp, #8
   3bd5c:	str	r0, [fp, #-8]
   3bd60:	str	r1, [fp, #-12]
   3bd64:	ldr	r2, [fp, #-12]
   3bd68:	ldr	r1, [fp, #-8]
   3bd6c:	mov	r0, #0
   3bd70:	bl	3bc98 <__assert_fail@plt+0x295ac>
   3bd74:	mov	r3, r0
   3bd78:	mov	r0, r3
   3bd7c:	sub	sp, fp, #4
   3bd80:	ldr	fp, [sp]
   3bd84:	add	sp, sp, #4
   3bd88:	pop	{pc}		; (ldr pc, [sp], #4)
   3bd8c:	str	fp, [sp, #-8]!
   3bd90:	str	lr, [sp, #4]
   3bd94:	add	fp, sp, #4
   3bd98:	sub	sp, sp, #16
   3bd9c:	str	r0, [fp, #-8]
   3bda0:	str	r1, [fp, #-12]
   3bda4:	str	r2, [fp, #-16]
   3bda8:	ldr	r3, [fp, #-16]
   3bdac:	ldr	r2, [fp, #-12]
   3bdb0:	ldr	r1, [fp, #-8]
   3bdb4:	mov	r0, #0
   3bdb8:	bl	3bcf0 <__assert_fail@plt+0x29604>
   3bdbc:	mov	r3, r0
   3bdc0:	mov	r0, r3
   3bdc4:	sub	sp, fp, #4
   3bdc8:	ldr	fp, [sp]
   3bdcc:	add	sp, sp, #4
   3bdd0:	pop	{pc}		; (ldr pc, [sp], #4)
   3bdd4:	str	fp, [sp, #-8]!
   3bdd8:	str	lr, [sp, #4]
   3bddc:	add	fp, sp, #4
   3bde0:	sub	sp, sp, #64	; 0x40
   3bde4:	str	r0, [fp, #-56]	; 0xffffffc8
   3bde8:	str	r1, [fp, #-60]	; 0xffffffc4
   3bdec:	mov	r3, r2
   3bdf0:	strb	r3, [fp, #-61]	; 0xffffffc3
   3bdf4:	movw	r2, #52968	; 0xcee8
   3bdf8:	movt	r2, #7
   3bdfc:	sub	r3, fp, #52	; 0x34
   3be00:	ldrd	r0, [r2]
   3be04:	strd	r0, [r3]
   3be08:	ldrd	r0, [r2, #8]
   3be0c:	strd	r0, [r3, #8]
   3be10:	ldrd	r0, [r2, #16]
   3be14:	strd	r0, [r3, #16]
   3be18:	ldrd	r0, [r2, #24]
   3be1c:	strd	r0, [r3, #24]
   3be20:	ldrd	r0, [r2, #32]
   3be24:	strd	r0, [r3, #32]
   3be28:	ldrd	r0, [r2, #40]	; 0x28
   3be2c:	strd	r0, [r3, #40]	; 0x28
   3be30:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   3be34:	sub	r3, fp, #52	; 0x34
   3be38:	mov	r2, #1
   3be3c:	mov	r0, r3
   3be40:	bl	39af8 <__assert_fail@plt+0x2740c>
   3be44:	sub	r3, fp, #52	; 0x34
   3be48:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3be4c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3be50:	mov	r0, #0
   3be54:	bl	3b89c <__assert_fail@plt+0x291b0>
   3be58:	mov	r3, r0
   3be5c:	mov	r0, r3
   3be60:	sub	sp, fp, #4
   3be64:	ldr	fp, [sp]
   3be68:	add	sp, sp, #4
   3be6c:	pop	{pc}		; (ldr pc, [sp], #4)
   3be70:	str	fp, [sp, #-8]!
   3be74:	str	lr, [sp, #4]
   3be78:	add	fp, sp, #4
   3be7c:	sub	sp, sp, #8
   3be80:	str	r0, [fp, #-8]
   3be84:	mov	r3, r1
   3be88:	strb	r3, [fp, #-9]
   3be8c:	ldrb	r3, [fp, #-9]
   3be90:	mov	r2, r3
   3be94:	mvn	r1, #0
   3be98:	ldr	r0, [fp, #-8]
   3be9c:	bl	3bdd4 <__assert_fail@plt+0x296e8>
   3bea0:	mov	r3, r0
   3bea4:	mov	r0, r3
   3bea8:	sub	sp, fp, #4
   3beac:	ldr	fp, [sp]
   3beb0:	add	sp, sp, #4
   3beb4:	pop	{pc}		; (ldr pc, [sp], #4)
   3beb8:	str	fp, [sp, #-8]!
   3bebc:	str	lr, [sp, #4]
   3bec0:	add	fp, sp, #4
   3bec4:	sub	sp, sp, #8
   3bec8:	str	r0, [fp, #-8]
   3becc:	mov	r1, #58	; 0x3a
   3bed0:	ldr	r0, [fp, #-8]
   3bed4:	bl	3be70 <__assert_fail@plt+0x29784>
   3bed8:	mov	r3, r0
   3bedc:	mov	r0, r3
   3bee0:	sub	sp, fp, #4
   3bee4:	ldr	fp, [sp]
   3bee8:	add	sp, sp, #4
   3beec:	pop	{pc}		; (ldr pc, [sp], #4)
   3bef0:	str	fp, [sp, #-8]!
   3bef4:	str	lr, [sp, #4]
   3bef8:	add	fp, sp, #4
   3befc:	sub	sp, sp, #8
   3bf00:	str	r0, [fp, #-8]
   3bf04:	str	r1, [fp, #-12]
   3bf08:	mov	r2, #58	; 0x3a
   3bf0c:	ldr	r1, [fp, #-12]
   3bf10:	ldr	r0, [fp, #-8]
   3bf14:	bl	3bdd4 <__assert_fail@plt+0x296e8>
   3bf18:	mov	r3, r0
   3bf1c:	mov	r0, r3
   3bf20:	sub	sp, fp, #4
   3bf24:	ldr	fp, [sp]
   3bf28:	add	sp, sp, #4
   3bf2c:	pop	{pc}		; (ldr pc, [sp], #4)
   3bf30:	str	fp, [sp, #-8]!
   3bf34:	str	lr, [sp, #4]
   3bf38:	add	fp, sp, #4
   3bf3c:	sub	sp, sp, #112	; 0x70
   3bf40:	str	r0, [fp, #-56]	; 0xffffffc8
   3bf44:	str	r1, [fp, #-60]	; 0xffffffc4
   3bf48:	str	r2, [fp, #-64]	; 0xffffffc0
   3bf4c:	sub	r3, fp, #116	; 0x74
   3bf50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3bf54:	mov	r0, r3
   3bf58:	bl	39c98 <__assert_fail@plt+0x275ac>
   3bf5c:	sub	r3, fp, #52	; 0x34
   3bf60:	sub	r2, fp, #116	; 0x74
   3bf64:	ldrd	r0, [r2]
   3bf68:	strd	r0, [r3]
   3bf6c:	ldrd	r0, [r2, #8]
   3bf70:	strd	r0, [r3, #8]
   3bf74:	ldrd	r0, [r2, #16]
   3bf78:	strd	r0, [r3, #16]
   3bf7c:	ldrd	r0, [r2, #24]
   3bf80:	strd	r0, [r3, #24]
   3bf84:	ldrd	r0, [r2, #32]
   3bf88:	strd	r0, [r3, #32]
   3bf8c:	ldrd	r0, [r2, #40]	; 0x28
   3bf90:	strd	r0, [r3, #40]	; 0x28
   3bf94:	sub	r3, fp, #52	; 0x34
   3bf98:	mov	r2, #1
   3bf9c:	mov	r1, #58	; 0x3a
   3bfa0:	mov	r0, r3
   3bfa4:	bl	39af8 <__assert_fail@plt+0x2740c>
   3bfa8:	sub	r3, fp, #52	; 0x34
   3bfac:	mvn	r2, #0
   3bfb0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3bfb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3bfb8:	bl	3b89c <__assert_fail@plt+0x291b0>
   3bfbc:	mov	r3, r0
   3bfc0:	mov	r0, r3
   3bfc4:	sub	sp, fp, #4
   3bfc8:	ldr	fp, [sp]
   3bfcc:	add	sp, sp, #4
   3bfd0:	pop	{pc}		; (ldr pc, [sp], #4)
   3bfd4:	str	fp, [sp, #-8]!
   3bfd8:	str	lr, [sp, #4]
   3bfdc:	add	fp, sp, #4
   3bfe0:	sub	sp, sp, #24
   3bfe4:	str	r0, [fp, #-8]
   3bfe8:	str	r1, [fp, #-12]
   3bfec:	str	r2, [fp, #-16]
   3bff0:	str	r3, [fp, #-20]	; 0xffffffec
   3bff4:	mvn	r3, #0
   3bff8:	str	r3, [sp]
   3bffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c000:	ldr	r2, [fp, #-16]
   3c004:	ldr	r1, [fp, #-12]
   3c008:	ldr	r0, [fp, #-8]
   3c00c:	bl	3c028 <__assert_fail@plt+0x2993c>
   3c010:	mov	r3, r0
   3c014:	mov	r0, r3
   3c018:	sub	sp, fp, #4
   3c01c:	ldr	fp, [sp]
   3c020:	add	sp, sp, #4
   3c024:	pop	{pc}		; (ldr pc, [sp], #4)
   3c028:	str	fp, [sp, #-8]!
   3c02c:	str	lr, [sp, #4]
   3c030:	add	fp, sp, #4
   3c034:	sub	sp, sp, #64	; 0x40
   3c038:	str	r0, [fp, #-56]	; 0xffffffc8
   3c03c:	str	r1, [fp, #-60]	; 0xffffffc4
   3c040:	str	r2, [fp, #-64]	; 0xffffffc0
   3c044:	str	r3, [fp, #-68]	; 0xffffffbc
   3c048:	movw	r2, #52968	; 0xcee8
   3c04c:	movt	r2, #7
   3c050:	sub	r3, fp, #52	; 0x34
   3c054:	ldrd	r0, [r2]
   3c058:	strd	r0, [r3]
   3c05c:	ldrd	r0, [r2, #8]
   3c060:	strd	r0, [r3, #8]
   3c064:	ldrd	r0, [r2, #16]
   3c068:	strd	r0, [r3, #16]
   3c06c:	ldrd	r0, [r2, #24]
   3c070:	strd	r0, [r3, #24]
   3c074:	ldrd	r0, [r2, #32]
   3c078:	strd	r0, [r3, #32]
   3c07c:	ldrd	r0, [r2, #40]	; 0x28
   3c080:	strd	r0, [r3, #40]	; 0x28
   3c084:	sub	r3, fp, #52	; 0x34
   3c088:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3c08c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3c090:	mov	r0, r3
   3c094:	bl	39c10 <__assert_fail@plt+0x27524>
   3c098:	sub	r3, fp, #52	; 0x34
   3c09c:	ldr	r2, [fp, #4]
   3c0a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3c0a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3c0a8:	bl	3b89c <__assert_fail@plt+0x291b0>
   3c0ac:	mov	r3, r0
   3c0b0:	mov	r0, r3
   3c0b4:	sub	sp, fp, #4
   3c0b8:	ldr	fp, [sp]
   3c0bc:	add	sp, sp, #4
   3c0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   3c0c4:	str	fp, [sp, #-8]!
   3c0c8:	str	lr, [sp, #4]
   3c0cc:	add	fp, sp, #4
   3c0d0:	sub	sp, sp, #16
   3c0d4:	str	r0, [fp, #-8]
   3c0d8:	str	r1, [fp, #-12]
   3c0dc:	str	r2, [fp, #-16]
   3c0e0:	ldr	r3, [fp, #-16]
   3c0e4:	ldr	r2, [fp, #-12]
   3c0e8:	ldr	r1, [fp, #-8]
   3c0ec:	mov	r0, #0
   3c0f0:	bl	3bfd4 <__assert_fail@plt+0x298e8>
   3c0f4:	mov	r3, r0
   3c0f8:	mov	r0, r3
   3c0fc:	sub	sp, fp, #4
   3c100:	ldr	fp, [sp]
   3c104:	add	sp, sp, #4
   3c108:	pop	{pc}		; (ldr pc, [sp], #4)
   3c10c:	str	fp, [sp, #-8]!
   3c110:	str	lr, [sp, #4]
   3c114:	add	fp, sp, #4
   3c118:	sub	sp, sp, #24
   3c11c:	str	r0, [fp, #-8]
   3c120:	str	r1, [fp, #-12]
   3c124:	str	r2, [fp, #-16]
   3c128:	str	r3, [fp, #-20]	; 0xffffffec
   3c12c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c130:	str	r3, [sp]
   3c134:	ldr	r3, [fp, #-16]
   3c138:	ldr	r2, [fp, #-12]
   3c13c:	ldr	r1, [fp, #-8]
   3c140:	mov	r0, #0
   3c144:	bl	3c028 <__assert_fail@plt+0x2993c>
   3c148:	mov	r3, r0
   3c14c:	mov	r0, r3
   3c150:	sub	sp, fp, #4
   3c154:	ldr	fp, [sp]
   3c158:	add	sp, sp, #4
   3c15c:	pop	{pc}		; (ldr pc, [sp], #4)
   3c160:	str	fp, [sp, #-8]!
   3c164:	str	lr, [sp, #4]
   3c168:	add	fp, sp, #4
   3c16c:	sub	sp, sp, #16
   3c170:	str	r0, [fp, #-8]
   3c174:	str	r1, [fp, #-12]
   3c178:	str	r2, [fp, #-16]
   3c17c:	movw	r3, #50912	; 0xc6e0
   3c180:	movt	r3, #7
   3c184:	ldr	r2, [fp, #-16]
   3c188:	ldr	r1, [fp, #-12]
   3c18c:	ldr	r0, [fp, #-8]
   3c190:	bl	3b89c <__assert_fail@plt+0x291b0>
   3c194:	mov	r3, r0
   3c198:	mov	r0, r3
   3c19c:	sub	sp, fp, #4
   3c1a0:	ldr	fp, [sp]
   3c1a4:	add	sp, sp, #4
   3c1a8:	pop	{pc}		; (ldr pc, [sp], #4)
   3c1ac:	str	fp, [sp, #-8]!
   3c1b0:	str	lr, [sp, #4]
   3c1b4:	add	fp, sp, #4
   3c1b8:	sub	sp, sp, #8
   3c1bc:	str	r0, [fp, #-8]
   3c1c0:	str	r1, [fp, #-12]
   3c1c4:	ldr	r2, [fp, #-12]
   3c1c8:	ldr	r1, [fp, #-8]
   3c1cc:	mov	r0, #0
   3c1d0:	bl	3c160 <__assert_fail@plt+0x29a74>
   3c1d4:	mov	r3, r0
   3c1d8:	mov	r0, r3
   3c1dc:	sub	sp, fp, #4
   3c1e0:	ldr	fp, [sp]
   3c1e4:	add	sp, sp, #4
   3c1e8:	pop	{pc}		; (ldr pc, [sp], #4)
   3c1ec:	str	fp, [sp, #-8]!
   3c1f0:	str	lr, [sp, #4]
   3c1f4:	add	fp, sp, #4
   3c1f8:	sub	sp, sp, #8
   3c1fc:	str	r0, [fp, #-8]
   3c200:	str	r1, [fp, #-12]
   3c204:	mvn	r2, #0
   3c208:	ldr	r1, [fp, #-12]
   3c20c:	ldr	r0, [fp, #-8]
   3c210:	bl	3c160 <__assert_fail@plt+0x29a74>
   3c214:	mov	r3, r0
   3c218:	mov	r0, r3
   3c21c:	sub	sp, fp, #4
   3c220:	ldr	fp, [sp]
   3c224:	add	sp, sp, #4
   3c228:	pop	{pc}		; (ldr pc, [sp], #4)
   3c22c:	str	fp, [sp, #-8]!
   3c230:	str	lr, [sp, #4]
   3c234:	add	fp, sp, #4
   3c238:	sub	sp, sp, #8
   3c23c:	str	r0, [fp, #-8]
   3c240:	ldr	r1, [fp, #-8]
   3c244:	mov	r0, #0
   3c248:	bl	3c1ec <__assert_fail@plt+0x29b00>
   3c24c:	mov	r3, r0
   3c250:	mov	r0, r3
   3c254:	sub	sp, fp, #4
   3c258:	ldr	fp, [sp]
   3c25c:	add	sp, sp, #4
   3c260:	pop	{pc}		; (ldr pc, [sp], #4)
   3c264:	str	fp, [sp, #-8]!
   3c268:	str	lr, [sp, #4]
   3c26c:	add	fp, sp, #4
   3c270:	sub	sp, sp, #8
   3c274:	str	r0, [fp, #-8]
   3c278:	ldr	r3, [fp, #-8]
   3c27c:	mov	r2, #0
   3c280:	str	r2, [r3, #4]
   3c284:	mov	r1, #524288	; 0x80000
   3c288:	movw	r0, #45904	; 0xb350
   3c28c:	movt	r0, #6
   3c290:	bl	2bf8c <__assert_fail@plt+0x198a0>
   3c294:	mov	r2, r0
   3c298:	ldr	r3, [fp, #-8]
   3c29c:	str	r2, [r3]
   3c2a0:	ldr	r3, [fp, #-8]
   3c2a4:	ldr	r3, [r3]
   3c2a8:	cmp	r3, #0
   3c2ac:	bge	3c2e8 <__assert_fail@plt+0x29bfc>
   3c2b0:	mov	r1, #0
   3c2b4:	mov	r0, #0
   3c2b8:	bl	12374 <getcwd@plt>
   3c2bc:	mov	r2, r0
   3c2c0:	ldr	r3, [fp, #-8]
   3c2c4:	str	r2, [r3, #4]
   3c2c8:	ldr	r3, [fp, #-8]
   3c2cc:	ldr	r3, [r3, #4]
   3c2d0:	cmp	r3, #0
   3c2d4:	beq	3c2e0 <__assert_fail@plt+0x29bf4>
   3c2d8:	mov	r3, #0
   3c2dc:	b	3c2ec <__assert_fail@plt+0x29c00>
   3c2e0:	mvn	r3, #0
   3c2e4:	b	3c2ec <__assert_fail@plt+0x29c00>
   3c2e8:	mov	r3, #0
   3c2ec:	mov	r0, r3
   3c2f0:	sub	sp, fp, #4
   3c2f4:	ldr	fp, [sp]
   3c2f8:	add	sp, sp, #4
   3c2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   3c300:	str	fp, [sp, #-8]!
   3c304:	str	lr, [sp, #4]
   3c308:	add	fp, sp, #4
   3c30c:	sub	sp, sp, #8
   3c310:	str	r0, [fp, #-8]
   3c314:	ldr	r3, [fp, #-8]
   3c318:	ldr	r3, [r3]
   3c31c:	cmp	r3, #0
   3c320:	blt	3c33c <__assert_fail@plt+0x29c50>
   3c324:	ldr	r3, [fp, #-8]
   3c328:	ldr	r3, [r3]
   3c32c:	mov	r0, r3
   3c330:	bl	125d8 <fchdir@plt>
   3c334:	mov	r3, r0
   3c338:	b	3c350 <__assert_fail@plt+0x29c64>
   3c33c:	ldr	r3, [fp, #-8]
   3c340:	ldr	r3, [r3, #4]
   3c344:	mov	r0, r3
   3c348:	bl	3f5bc <__assert_fail@plt+0x2ced0>
   3c34c:	mov	r3, r0
   3c350:	mov	r0, r3
   3c354:	sub	sp, fp, #4
   3c358:	ldr	fp, [sp]
   3c35c:	add	sp, sp, #4
   3c360:	pop	{pc}		; (ldr pc, [sp], #4)
   3c364:	str	fp, [sp, #-8]!
   3c368:	str	lr, [sp, #4]
   3c36c:	add	fp, sp, #4
   3c370:	sub	sp, sp, #8
   3c374:	str	r0, [fp, #-8]
   3c378:	ldr	r3, [fp, #-8]
   3c37c:	ldr	r3, [r3]
   3c380:	cmp	r3, #0
   3c384:	blt	3c398 <__assert_fail@plt+0x29cac>
   3c388:	ldr	r3, [fp, #-8]
   3c38c:	ldr	r3, [r3]
   3c390:	mov	r0, r3
   3c394:	bl	126a4 <close@plt>
   3c398:	ldr	r3, [fp, #-8]
   3c39c:	ldr	r3, [r3, #4]
   3c3a0:	mov	r0, r3
   3c3a4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3c3a8:	nop	{0}
   3c3ac:	sub	sp, fp, #4
   3c3b0:	ldr	fp, [sp]
   3c3b4:	add	sp, sp, #4
   3c3b8:	pop	{pc}		; (ldr pc, [sp], #4)
   3c3bc:	str	fp, [sp, #-8]!
   3c3c0:	str	lr, [sp, #4]
   3c3c4:	add	fp, sp, #4
   3c3c8:	sub	sp, sp, #4080	; 0xff0
   3c3cc:	str	r0, [fp, #-4072]	; 0xfffff018
   3c3d0:	str	r1, [fp, #-4076]	; 0xfffff014
   3c3d4:	str	r2, [fp, #-4080]	; 0xfffff010
   3c3d8:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c3dc:	cmn	r3, #100	; 0x64
   3c3e0:	beq	3c3f4 <__assert_fail@plt+0x29d08>
   3c3e4:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3c3e8:	ldrb	r3, [r3]
   3c3ec:	cmp	r3, #47	; 0x2f
   3c3f0:	bne	3c408 <__assert_fail@plt+0x29d1c>
   3c3f4:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c3f8:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c3fc:	bl	4342c <__assert_fail@plt+0x30d40>
   3c400:	mov	r3, r0
   3c404:	b	3c628 <__assert_fail@plt+0x29f3c>
   3c408:	sub	r3, fp, #4048	; 0xfd0
   3c40c:	sub	r3, r3, #4
   3c410:	sub	r3, r3, #12
   3c414:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3c418:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3c41c:	mov	r0, r3
   3c420:	bl	5fb0c <__assert_fail@plt+0x4d420>
   3c424:	str	r0, [fp, #-8]
   3c428:	ldr	r3, [fp, #-8]
   3c42c:	cmp	r3, #0
   3c430:	beq	3c4e8 <__assert_fail@plt+0x29dfc>
   3c434:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c438:	ldr	r0, [fp, #-8]
   3c43c:	bl	4342c <__assert_fail@plt+0x30d40>
   3c440:	str	r0, [fp, #-12]
   3c444:	bl	12404 <__errno_location@plt>
   3c448:	mov	r3, r0
   3c44c:	ldr	r3, [r3]
   3c450:	str	r3, [fp, #-16]
   3c454:	sub	r3, fp, #4048	; 0xfd0
   3c458:	sub	r3, r3, #4
   3c45c:	sub	r3, r3, #12
   3c460:	ldr	r2, [fp, #-8]
   3c464:	cmp	r2, r3
   3c468:	beq	3c474 <__assert_fail@plt+0x29d88>
   3c46c:	ldr	r0, [fp, #-8]
   3c470:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3c474:	ldr	r3, [fp, #-12]
   3c478:	cmn	r3, #1
   3c47c:	beq	3c488 <__assert_fail@plt+0x29d9c>
   3c480:	ldr	r3, [fp, #-12]
   3c484:	b	3c628 <__assert_fail@plt+0x29f3c>
   3c488:	ldr	r3, [fp, #-16]
   3c48c:	cmp	r3, #20
   3c490:	beq	3c4e8 <__assert_fail@plt+0x29dfc>
   3c494:	ldr	r3, [fp, #-16]
   3c498:	cmp	r3, #2
   3c49c:	beq	3c4e8 <__assert_fail@plt+0x29dfc>
   3c4a0:	ldr	r3, [fp, #-16]
   3c4a4:	cmp	r3, #1
   3c4a8:	beq	3c4e8 <__assert_fail@plt+0x29dfc>
   3c4ac:	ldr	r3, [fp, #-16]
   3c4b0:	cmp	r3, #13
   3c4b4:	beq	3c4e8 <__assert_fail@plt+0x29dfc>
   3c4b8:	ldr	r3, [fp, #-16]
   3c4bc:	cmp	r3, #38	; 0x26
   3c4c0:	beq	3c4e8 <__assert_fail@plt+0x29dfc>
   3c4c4:	ldr	r3, [fp, #-16]
   3c4c8:	cmp	r3, #95	; 0x5f
   3c4cc:	beq	3c4e8 <__assert_fail@plt+0x29dfc>
   3c4d0:	bl	12404 <__errno_location@plt>
   3c4d4:	mov	r2, r0
   3c4d8:	ldr	r3, [fp, #-16]
   3c4dc:	str	r3, [r2]
   3c4e0:	ldr	r3, [fp, #-12]
   3c4e4:	b	3c628 <__assert_fail@plt+0x29f3c>
   3c4e8:	sub	r3, fp, #32
   3c4ec:	mov	r0, r3
   3c4f0:	bl	3c264 <__assert_fail@plt+0x29b78>
   3c4f4:	mov	r3, r0
   3c4f8:	cmp	r3, #0
   3c4fc:	beq	3c514 <__assert_fail@plt+0x29e28>
   3c500:	bl	12404 <__errno_location@plt>
   3c504:	mov	r3, r0
   3c508:	ldr	r3, [r3]
   3c50c:	mov	r0, r3
   3c510:	bl	31a24 <__assert_fail@plt+0x1f338>
   3c514:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c518:	cmp	r3, #0
   3c51c:	blt	3c554 <__assert_fail@plt+0x29e68>
   3c520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c524:	ldr	r2, [fp, #-4072]	; 0xfffff018
   3c528:	cmp	r2, r3
   3c52c:	bne	3c554 <__assert_fail@plt+0x29e68>
   3c530:	sub	r3, fp, #32
   3c534:	mov	r0, r3
   3c538:	bl	3c364 <__assert_fail@plt+0x29c78>
   3c53c:	bl	12404 <__errno_location@plt>
   3c540:	mov	r2, r0
   3c544:	mov	r3, #9
   3c548:	str	r3, [r2]
   3c54c:	mvn	r3, #0
   3c550:	b	3c628 <__assert_fail@plt+0x29f3c>
   3c554:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3c558:	bl	125d8 <fchdir@plt>
   3c55c:	mov	r3, r0
   3c560:	cmp	r3, #0
   3c564:	beq	3c59c <__assert_fail@plt+0x29eb0>
   3c568:	bl	12404 <__errno_location@plt>
   3c56c:	mov	r3, r0
   3c570:	ldr	r3, [r3]
   3c574:	str	r3, [fp, #-20]	; 0xffffffec
   3c578:	sub	r3, fp, #32
   3c57c:	mov	r0, r3
   3c580:	bl	3c364 <__assert_fail@plt+0x29c78>
   3c584:	bl	12404 <__errno_location@plt>
   3c588:	mov	r2, r0
   3c58c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c590:	str	r3, [r2]
   3c594:	mvn	r3, #0
   3c598:	b	3c628 <__assert_fail@plt+0x29f3c>
   3c59c:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c5a0:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c5a4:	bl	4342c <__assert_fail@plt+0x30d40>
   3c5a8:	str	r0, [fp, #-24]	; 0xffffffe8
   3c5ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c5b0:	cmn	r3, #1
   3c5b4:	bne	3c5c8 <__assert_fail@plt+0x29edc>
   3c5b8:	bl	12404 <__errno_location@plt>
   3c5bc:	mov	r3, r0
   3c5c0:	ldr	r3, [r3]
   3c5c4:	b	3c5cc <__assert_fail@plt+0x29ee0>
   3c5c8:	mov	r3, #0
   3c5cc:	str	r3, [fp, #-20]	; 0xffffffec
   3c5d0:	sub	r3, fp, #32
   3c5d4:	mov	r0, r3
   3c5d8:	bl	3c300 <__assert_fail@plt+0x29c14>
   3c5dc:	mov	r3, r0
   3c5e0:	cmp	r3, #0
   3c5e4:	beq	3c5fc <__assert_fail@plt+0x29f10>
   3c5e8:	bl	12404 <__errno_location@plt>
   3c5ec:	mov	r3, r0
   3c5f0:	ldr	r3, [r3]
   3c5f4:	mov	r0, r3
   3c5f8:	bl	31a6c <__assert_fail@plt+0x1f380>
   3c5fc:	sub	r3, fp, #32
   3c600:	mov	r0, r3
   3c604:	bl	3c364 <__assert_fail@plt+0x29c78>
   3c608:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c60c:	cmp	r3, #0
   3c610:	beq	3c624 <__assert_fail@plt+0x29f38>
   3c614:	bl	12404 <__errno_location@plt>
   3c618:	mov	r2, r0
   3c61c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c620:	str	r3, [r2]
   3c624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c628:	mov	r0, r3
   3c62c:	sub	sp, fp, #4
   3c630:	ldr	fp, [sp]
   3c634:	add	sp, sp, #4
   3c638:	pop	{pc}		; (ldr pc, [sp], #4)
   3c63c:	str	fp, [sp, #-8]!
   3c640:	str	lr, [sp, #4]
   3c644:	add	fp, sp, #4
   3c648:	sub	sp, sp, #4080	; 0xff0
   3c64c:	str	r0, [fp, #-4072]	; 0xfffff018
   3c650:	str	r1, [fp, #-4076]	; 0xfffff014
   3c654:	str	r2, [fp, #-4080]	; 0xfffff010
   3c658:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c65c:	cmn	r3, #100	; 0x64
   3c660:	beq	3c674 <__assert_fail@plt+0x29f88>
   3c664:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3c668:	ldrb	r3, [r3]
   3c66c:	cmp	r3, #47	; 0x2f
   3c670:	bne	3c688 <__assert_fail@plt+0x29f9c>
   3c674:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c678:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c67c:	bl	43478 <__assert_fail@plt+0x30d8c>
   3c680:	mov	r3, r0
   3c684:	b	3c8a8 <__assert_fail@plt+0x2a1bc>
   3c688:	sub	r3, fp, #4048	; 0xfd0
   3c68c:	sub	r3, r3, #4
   3c690:	sub	r3, r3, #12
   3c694:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3c698:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3c69c:	mov	r0, r3
   3c6a0:	bl	5fb0c <__assert_fail@plt+0x4d420>
   3c6a4:	str	r0, [fp, #-8]
   3c6a8:	ldr	r3, [fp, #-8]
   3c6ac:	cmp	r3, #0
   3c6b0:	beq	3c768 <__assert_fail@plt+0x2a07c>
   3c6b4:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c6b8:	ldr	r0, [fp, #-8]
   3c6bc:	bl	43478 <__assert_fail@plt+0x30d8c>
   3c6c0:	str	r0, [fp, #-12]
   3c6c4:	bl	12404 <__errno_location@plt>
   3c6c8:	mov	r3, r0
   3c6cc:	ldr	r3, [r3]
   3c6d0:	str	r3, [fp, #-16]
   3c6d4:	sub	r3, fp, #4048	; 0xfd0
   3c6d8:	sub	r3, r3, #4
   3c6dc:	sub	r3, r3, #12
   3c6e0:	ldr	r2, [fp, #-8]
   3c6e4:	cmp	r2, r3
   3c6e8:	beq	3c6f4 <__assert_fail@plt+0x2a008>
   3c6ec:	ldr	r0, [fp, #-8]
   3c6f0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3c6f4:	ldr	r3, [fp, #-12]
   3c6f8:	cmn	r3, #1
   3c6fc:	beq	3c708 <__assert_fail@plt+0x2a01c>
   3c700:	ldr	r3, [fp, #-12]
   3c704:	b	3c8a8 <__assert_fail@plt+0x2a1bc>
   3c708:	ldr	r3, [fp, #-16]
   3c70c:	cmp	r3, #20
   3c710:	beq	3c768 <__assert_fail@plt+0x2a07c>
   3c714:	ldr	r3, [fp, #-16]
   3c718:	cmp	r3, #2
   3c71c:	beq	3c768 <__assert_fail@plt+0x2a07c>
   3c720:	ldr	r3, [fp, #-16]
   3c724:	cmp	r3, #1
   3c728:	beq	3c768 <__assert_fail@plt+0x2a07c>
   3c72c:	ldr	r3, [fp, #-16]
   3c730:	cmp	r3, #13
   3c734:	beq	3c768 <__assert_fail@plt+0x2a07c>
   3c738:	ldr	r3, [fp, #-16]
   3c73c:	cmp	r3, #38	; 0x26
   3c740:	beq	3c768 <__assert_fail@plt+0x2a07c>
   3c744:	ldr	r3, [fp, #-16]
   3c748:	cmp	r3, #95	; 0x5f
   3c74c:	beq	3c768 <__assert_fail@plt+0x2a07c>
   3c750:	bl	12404 <__errno_location@plt>
   3c754:	mov	r2, r0
   3c758:	ldr	r3, [fp, #-16]
   3c75c:	str	r3, [r2]
   3c760:	ldr	r3, [fp, #-12]
   3c764:	b	3c8a8 <__assert_fail@plt+0x2a1bc>
   3c768:	sub	r3, fp, #32
   3c76c:	mov	r0, r3
   3c770:	bl	3c264 <__assert_fail@plt+0x29b78>
   3c774:	mov	r3, r0
   3c778:	cmp	r3, #0
   3c77c:	beq	3c794 <__assert_fail@plt+0x2a0a8>
   3c780:	bl	12404 <__errno_location@plt>
   3c784:	mov	r3, r0
   3c788:	ldr	r3, [r3]
   3c78c:	mov	r0, r3
   3c790:	bl	31a24 <__assert_fail@plt+0x1f338>
   3c794:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c798:	cmp	r3, #0
   3c79c:	blt	3c7d4 <__assert_fail@plt+0x2a0e8>
   3c7a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c7a4:	ldr	r2, [fp, #-4072]	; 0xfffff018
   3c7a8:	cmp	r2, r3
   3c7ac:	bne	3c7d4 <__assert_fail@plt+0x2a0e8>
   3c7b0:	sub	r3, fp, #32
   3c7b4:	mov	r0, r3
   3c7b8:	bl	3c364 <__assert_fail@plt+0x29c78>
   3c7bc:	bl	12404 <__errno_location@plt>
   3c7c0:	mov	r2, r0
   3c7c4:	mov	r3, #9
   3c7c8:	str	r3, [r2]
   3c7cc:	mvn	r3, #0
   3c7d0:	b	3c8a8 <__assert_fail@plt+0x2a1bc>
   3c7d4:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3c7d8:	bl	125d8 <fchdir@plt>
   3c7dc:	mov	r3, r0
   3c7e0:	cmp	r3, #0
   3c7e4:	beq	3c81c <__assert_fail@plt+0x2a130>
   3c7e8:	bl	12404 <__errno_location@plt>
   3c7ec:	mov	r3, r0
   3c7f0:	ldr	r3, [r3]
   3c7f4:	str	r3, [fp, #-20]	; 0xffffffec
   3c7f8:	sub	r3, fp, #32
   3c7fc:	mov	r0, r3
   3c800:	bl	3c364 <__assert_fail@plt+0x29c78>
   3c804:	bl	12404 <__errno_location@plt>
   3c808:	mov	r2, r0
   3c80c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c810:	str	r3, [r2]
   3c814:	mvn	r3, #0
   3c818:	b	3c8a8 <__assert_fail@plt+0x2a1bc>
   3c81c:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c820:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c824:	bl	43478 <__assert_fail@plt+0x30d8c>
   3c828:	str	r0, [fp, #-24]	; 0xffffffe8
   3c82c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c830:	cmn	r3, #1
   3c834:	bne	3c848 <__assert_fail@plt+0x2a15c>
   3c838:	bl	12404 <__errno_location@plt>
   3c83c:	mov	r3, r0
   3c840:	ldr	r3, [r3]
   3c844:	b	3c84c <__assert_fail@plt+0x2a160>
   3c848:	mov	r3, #0
   3c84c:	str	r3, [fp, #-20]	; 0xffffffec
   3c850:	sub	r3, fp, #32
   3c854:	mov	r0, r3
   3c858:	bl	3c300 <__assert_fail@plt+0x29c14>
   3c85c:	mov	r3, r0
   3c860:	cmp	r3, #0
   3c864:	beq	3c87c <__assert_fail@plt+0x2a190>
   3c868:	bl	12404 <__errno_location@plt>
   3c86c:	mov	r3, r0
   3c870:	ldr	r3, [r3]
   3c874:	mov	r0, r3
   3c878:	bl	31a6c <__assert_fail@plt+0x1f380>
   3c87c:	sub	r3, fp, #32
   3c880:	mov	r0, r3
   3c884:	bl	3c364 <__assert_fail@plt+0x29c78>
   3c888:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c88c:	cmp	r3, #0
   3c890:	beq	3c8a4 <__assert_fail@plt+0x2a1b8>
   3c894:	bl	12404 <__errno_location@plt>
   3c898:	mov	r2, r0
   3c89c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c8a0:	str	r3, [r2]
   3c8a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c8a8:	mov	r0, r3
   3c8ac:	sub	sp, fp, #4
   3c8b0:	ldr	fp, [sp]
   3c8b4:	add	sp, sp, #4
   3c8b8:	pop	{pc}		; (ldr pc, [sp], #4)
   3c8bc:	str	fp, [sp, #-8]!
   3c8c0:	str	lr, [sp, #4]
   3c8c4:	add	fp, sp, #4
   3c8c8:	sub	sp, sp, #4080	; 0xff0
   3c8cc:	str	r0, [fp, #-4072]	; 0xfffff018
   3c8d0:	str	r1, [fp, #-4076]	; 0xfffff014
   3c8d4:	str	r2, [fp, #-4080]	; 0xfffff010
   3c8d8:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3c8dc:	cmn	r3, #100	; 0x64
   3c8e0:	beq	3c8f4 <__assert_fail@plt+0x2a208>
   3c8e4:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3c8e8:	ldrb	r3, [r3]
   3c8ec:	cmp	r3, #47	; 0x2f
   3c8f0:	bne	3c908 <__assert_fail@plt+0x2a21c>
   3c8f4:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c8f8:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3c8fc:	bl	124b8 <setfilecon@plt>
   3c900:	mov	r3, r0
   3c904:	b	3cb28 <__assert_fail@plt+0x2a43c>
   3c908:	sub	r3, fp, #4048	; 0xfd0
   3c90c:	sub	r3, r3, #4
   3c910:	sub	r3, r3, #12
   3c914:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3c918:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3c91c:	mov	r0, r3
   3c920:	bl	5fb0c <__assert_fail@plt+0x4d420>
   3c924:	str	r0, [fp, #-8]
   3c928:	ldr	r3, [fp, #-8]
   3c92c:	cmp	r3, #0
   3c930:	beq	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c934:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3c938:	ldr	r0, [fp, #-8]
   3c93c:	bl	124b8 <setfilecon@plt>
   3c940:	str	r0, [fp, #-12]
   3c944:	bl	12404 <__errno_location@plt>
   3c948:	mov	r3, r0
   3c94c:	ldr	r3, [r3]
   3c950:	str	r3, [fp, #-16]
   3c954:	sub	r3, fp, #4048	; 0xfd0
   3c958:	sub	r3, r3, #4
   3c95c:	sub	r3, r3, #12
   3c960:	ldr	r2, [fp, #-8]
   3c964:	cmp	r2, r3
   3c968:	beq	3c974 <__assert_fail@plt+0x2a288>
   3c96c:	ldr	r0, [fp, #-8]
   3c970:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3c974:	ldr	r3, [fp, #-12]
   3c978:	cmn	r3, #1
   3c97c:	beq	3c988 <__assert_fail@plt+0x2a29c>
   3c980:	ldr	r3, [fp, #-12]
   3c984:	b	3cb28 <__assert_fail@plt+0x2a43c>
   3c988:	ldr	r3, [fp, #-16]
   3c98c:	cmp	r3, #20
   3c990:	beq	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c994:	ldr	r3, [fp, #-16]
   3c998:	cmp	r3, #2
   3c99c:	beq	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c9a0:	ldr	r3, [fp, #-16]
   3c9a4:	cmp	r3, #1
   3c9a8:	beq	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c9ac:	ldr	r3, [fp, #-16]
   3c9b0:	cmp	r3, #13
   3c9b4:	beq	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c9b8:	ldr	r3, [fp, #-16]
   3c9bc:	cmp	r3, #38	; 0x26
   3c9c0:	beq	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c9c4:	ldr	r3, [fp, #-16]
   3c9c8:	cmp	r3, #95	; 0x5f
   3c9cc:	beq	3c9e8 <__assert_fail@plt+0x2a2fc>
   3c9d0:	bl	12404 <__errno_location@plt>
   3c9d4:	mov	r2, r0
   3c9d8:	ldr	r3, [fp, #-16]
   3c9dc:	str	r3, [r2]
   3c9e0:	ldr	r3, [fp, #-12]
   3c9e4:	b	3cb28 <__assert_fail@plt+0x2a43c>
   3c9e8:	sub	r3, fp, #32
   3c9ec:	mov	r0, r3
   3c9f0:	bl	3c264 <__assert_fail@plt+0x29b78>
   3c9f4:	mov	r3, r0
   3c9f8:	cmp	r3, #0
   3c9fc:	beq	3ca14 <__assert_fail@plt+0x2a328>
   3ca00:	bl	12404 <__errno_location@plt>
   3ca04:	mov	r3, r0
   3ca08:	ldr	r3, [r3]
   3ca0c:	mov	r0, r3
   3ca10:	bl	31a24 <__assert_fail@plt+0x1f338>
   3ca14:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3ca18:	cmp	r3, #0
   3ca1c:	blt	3ca54 <__assert_fail@plt+0x2a368>
   3ca20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ca24:	ldr	r2, [fp, #-4072]	; 0xfffff018
   3ca28:	cmp	r2, r3
   3ca2c:	bne	3ca54 <__assert_fail@plt+0x2a368>
   3ca30:	sub	r3, fp, #32
   3ca34:	mov	r0, r3
   3ca38:	bl	3c364 <__assert_fail@plt+0x29c78>
   3ca3c:	bl	12404 <__errno_location@plt>
   3ca40:	mov	r2, r0
   3ca44:	mov	r3, #9
   3ca48:	str	r3, [r2]
   3ca4c:	mvn	r3, #0
   3ca50:	b	3cb28 <__assert_fail@plt+0x2a43c>
   3ca54:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3ca58:	bl	125d8 <fchdir@plt>
   3ca5c:	mov	r3, r0
   3ca60:	cmp	r3, #0
   3ca64:	beq	3ca9c <__assert_fail@plt+0x2a3b0>
   3ca68:	bl	12404 <__errno_location@plt>
   3ca6c:	mov	r3, r0
   3ca70:	ldr	r3, [r3]
   3ca74:	str	r3, [fp, #-20]	; 0xffffffec
   3ca78:	sub	r3, fp, #32
   3ca7c:	mov	r0, r3
   3ca80:	bl	3c364 <__assert_fail@plt+0x29c78>
   3ca84:	bl	12404 <__errno_location@plt>
   3ca88:	mov	r2, r0
   3ca8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ca90:	str	r3, [r2]
   3ca94:	mvn	r3, #0
   3ca98:	b	3cb28 <__assert_fail@plt+0x2a43c>
   3ca9c:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3caa0:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3caa4:	bl	124b8 <setfilecon@plt>
   3caa8:	str	r0, [fp, #-24]	; 0xffffffe8
   3caac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cab0:	cmn	r3, #1
   3cab4:	bne	3cac8 <__assert_fail@plt+0x2a3dc>
   3cab8:	bl	12404 <__errno_location@plt>
   3cabc:	mov	r3, r0
   3cac0:	ldr	r3, [r3]
   3cac4:	b	3cacc <__assert_fail@plt+0x2a3e0>
   3cac8:	mov	r3, #0
   3cacc:	str	r3, [fp, #-20]	; 0xffffffec
   3cad0:	sub	r3, fp, #32
   3cad4:	mov	r0, r3
   3cad8:	bl	3c300 <__assert_fail@plt+0x29c14>
   3cadc:	mov	r3, r0
   3cae0:	cmp	r3, #0
   3cae4:	beq	3cafc <__assert_fail@plt+0x2a410>
   3cae8:	bl	12404 <__errno_location@plt>
   3caec:	mov	r3, r0
   3caf0:	ldr	r3, [r3]
   3caf4:	mov	r0, r3
   3caf8:	bl	31a6c <__assert_fail@plt+0x1f380>
   3cafc:	sub	r3, fp, #32
   3cb00:	mov	r0, r3
   3cb04:	bl	3c364 <__assert_fail@plt+0x29c78>
   3cb08:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cb0c:	cmp	r3, #0
   3cb10:	beq	3cb24 <__assert_fail@plt+0x2a438>
   3cb14:	bl	12404 <__errno_location@plt>
   3cb18:	mov	r2, r0
   3cb1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cb20:	str	r3, [r2]
   3cb24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cb28:	mov	r0, r3
   3cb2c:	sub	sp, fp, #4
   3cb30:	ldr	fp, [sp]
   3cb34:	add	sp, sp, #4
   3cb38:	pop	{pc}		; (ldr pc, [sp], #4)
   3cb3c:	str	fp, [sp, #-8]!
   3cb40:	str	lr, [sp, #4]
   3cb44:	add	fp, sp, #4
   3cb48:	sub	sp, sp, #4080	; 0xff0
   3cb4c:	str	r0, [fp, #-4072]	; 0xfffff018
   3cb50:	str	r1, [fp, #-4076]	; 0xfffff014
   3cb54:	str	r2, [fp, #-4080]	; 0xfffff010
   3cb58:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3cb5c:	cmn	r3, #100	; 0x64
   3cb60:	beq	3cb74 <__assert_fail@plt+0x2a488>
   3cb64:	ldr	r3, [fp, #-4076]	; 0xfffff014
   3cb68:	ldrb	r3, [r3]
   3cb6c:	cmp	r3, #47	; 0x2f
   3cb70:	bne	3cb88 <__assert_fail@plt+0x2a49c>
   3cb74:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3cb78:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3cb7c:	bl	12080 <lsetfilecon@plt>
   3cb80:	mov	r3, r0
   3cb84:	b	3cda8 <__assert_fail@plt+0x2a6bc>
   3cb88:	sub	r3, fp, #4048	; 0xfd0
   3cb8c:	sub	r3, r3, #4
   3cb90:	sub	r3, r3, #12
   3cb94:	ldr	r2, [fp, #-4076]	; 0xfffff014
   3cb98:	ldr	r1, [fp, #-4072]	; 0xfffff018
   3cb9c:	mov	r0, r3
   3cba0:	bl	5fb0c <__assert_fail@plt+0x4d420>
   3cba4:	str	r0, [fp, #-8]
   3cba8:	ldr	r3, [fp, #-8]
   3cbac:	cmp	r3, #0
   3cbb0:	beq	3cc68 <__assert_fail@plt+0x2a57c>
   3cbb4:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3cbb8:	ldr	r0, [fp, #-8]
   3cbbc:	bl	12080 <lsetfilecon@plt>
   3cbc0:	str	r0, [fp, #-12]
   3cbc4:	bl	12404 <__errno_location@plt>
   3cbc8:	mov	r3, r0
   3cbcc:	ldr	r3, [r3]
   3cbd0:	str	r3, [fp, #-16]
   3cbd4:	sub	r3, fp, #4048	; 0xfd0
   3cbd8:	sub	r3, r3, #4
   3cbdc:	sub	r3, r3, #12
   3cbe0:	ldr	r2, [fp, #-8]
   3cbe4:	cmp	r2, r3
   3cbe8:	beq	3cbf4 <__assert_fail@plt+0x2a508>
   3cbec:	ldr	r0, [fp, #-8]
   3cbf0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3cbf4:	ldr	r3, [fp, #-12]
   3cbf8:	cmn	r3, #1
   3cbfc:	beq	3cc08 <__assert_fail@plt+0x2a51c>
   3cc00:	ldr	r3, [fp, #-12]
   3cc04:	b	3cda8 <__assert_fail@plt+0x2a6bc>
   3cc08:	ldr	r3, [fp, #-16]
   3cc0c:	cmp	r3, #20
   3cc10:	beq	3cc68 <__assert_fail@plt+0x2a57c>
   3cc14:	ldr	r3, [fp, #-16]
   3cc18:	cmp	r3, #2
   3cc1c:	beq	3cc68 <__assert_fail@plt+0x2a57c>
   3cc20:	ldr	r3, [fp, #-16]
   3cc24:	cmp	r3, #1
   3cc28:	beq	3cc68 <__assert_fail@plt+0x2a57c>
   3cc2c:	ldr	r3, [fp, #-16]
   3cc30:	cmp	r3, #13
   3cc34:	beq	3cc68 <__assert_fail@plt+0x2a57c>
   3cc38:	ldr	r3, [fp, #-16]
   3cc3c:	cmp	r3, #38	; 0x26
   3cc40:	beq	3cc68 <__assert_fail@plt+0x2a57c>
   3cc44:	ldr	r3, [fp, #-16]
   3cc48:	cmp	r3, #95	; 0x5f
   3cc4c:	beq	3cc68 <__assert_fail@plt+0x2a57c>
   3cc50:	bl	12404 <__errno_location@plt>
   3cc54:	mov	r2, r0
   3cc58:	ldr	r3, [fp, #-16]
   3cc5c:	str	r3, [r2]
   3cc60:	ldr	r3, [fp, #-12]
   3cc64:	b	3cda8 <__assert_fail@plt+0x2a6bc>
   3cc68:	sub	r3, fp, #32
   3cc6c:	mov	r0, r3
   3cc70:	bl	3c264 <__assert_fail@plt+0x29b78>
   3cc74:	mov	r3, r0
   3cc78:	cmp	r3, #0
   3cc7c:	beq	3cc94 <__assert_fail@plt+0x2a5a8>
   3cc80:	bl	12404 <__errno_location@plt>
   3cc84:	mov	r3, r0
   3cc88:	ldr	r3, [r3]
   3cc8c:	mov	r0, r3
   3cc90:	bl	31a24 <__assert_fail@plt+0x1f338>
   3cc94:	ldr	r3, [fp, #-4072]	; 0xfffff018
   3cc98:	cmp	r3, #0
   3cc9c:	blt	3ccd4 <__assert_fail@plt+0x2a5e8>
   3cca0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3cca4:	ldr	r2, [fp, #-4072]	; 0xfffff018
   3cca8:	cmp	r2, r3
   3ccac:	bne	3ccd4 <__assert_fail@plt+0x2a5e8>
   3ccb0:	sub	r3, fp, #32
   3ccb4:	mov	r0, r3
   3ccb8:	bl	3c364 <__assert_fail@plt+0x29c78>
   3ccbc:	bl	12404 <__errno_location@plt>
   3ccc0:	mov	r2, r0
   3ccc4:	mov	r3, #9
   3ccc8:	str	r3, [r2]
   3cccc:	mvn	r3, #0
   3ccd0:	b	3cda8 <__assert_fail@plt+0x2a6bc>
   3ccd4:	ldr	r0, [fp, #-4072]	; 0xfffff018
   3ccd8:	bl	125d8 <fchdir@plt>
   3ccdc:	mov	r3, r0
   3cce0:	cmp	r3, #0
   3cce4:	beq	3cd1c <__assert_fail@plt+0x2a630>
   3cce8:	bl	12404 <__errno_location@plt>
   3ccec:	mov	r3, r0
   3ccf0:	ldr	r3, [r3]
   3ccf4:	str	r3, [fp, #-20]	; 0xffffffec
   3ccf8:	sub	r3, fp, #32
   3ccfc:	mov	r0, r3
   3cd00:	bl	3c364 <__assert_fail@plt+0x29c78>
   3cd04:	bl	12404 <__errno_location@plt>
   3cd08:	mov	r2, r0
   3cd0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cd10:	str	r3, [r2]
   3cd14:	mvn	r3, #0
   3cd18:	b	3cda8 <__assert_fail@plt+0x2a6bc>
   3cd1c:	ldr	r1, [fp, #-4080]	; 0xfffff010
   3cd20:	ldr	r0, [fp, #-4076]	; 0xfffff014
   3cd24:	bl	12080 <lsetfilecon@plt>
   3cd28:	str	r0, [fp, #-24]	; 0xffffffe8
   3cd2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cd30:	cmn	r3, #1
   3cd34:	bne	3cd48 <__assert_fail@plt+0x2a65c>
   3cd38:	bl	12404 <__errno_location@plt>
   3cd3c:	mov	r3, r0
   3cd40:	ldr	r3, [r3]
   3cd44:	b	3cd4c <__assert_fail@plt+0x2a660>
   3cd48:	mov	r3, #0
   3cd4c:	str	r3, [fp, #-20]	; 0xffffffec
   3cd50:	sub	r3, fp, #32
   3cd54:	mov	r0, r3
   3cd58:	bl	3c300 <__assert_fail@plt+0x29c14>
   3cd5c:	mov	r3, r0
   3cd60:	cmp	r3, #0
   3cd64:	beq	3cd7c <__assert_fail@plt+0x2a690>
   3cd68:	bl	12404 <__errno_location@plt>
   3cd6c:	mov	r3, r0
   3cd70:	ldr	r3, [r3]
   3cd74:	mov	r0, r3
   3cd78:	bl	31a6c <__assert_fail@plt+0x1f380>
   3cd7c:	sub	r3, fp, #32
   3cd80:	mov	r0, r3
   3cd84:	bl	3c364 <__assert_fail@plt+0x29c78>
   3cd88:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cd8c:	cmp	r3, #0
   3cd90:	beq	3cda4 <__assert_fail@plt+0x2a6b8>
   3cd94:	bl	12404 <__errno_location@plt>
   3cd98:	mov	r2, r0
   3cd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cda0:	str	r3, [r2]
   3cda4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cda8:	mov	r0, r3
   3cdac:	sub	sp, fp, #4
   3cdb0:	ldr	fp, [sp]
   3cdb4:	add	sp, sp, #4
   3cdb8:	pop	{pc}		; (ldr pc, [sp], #4)
   3cdbc:	push	{fp}		; (str fp, [sp, #-4]!)
   3cdc0:	add	fp, sp, #0
   3cdc4:	sub	sp, sp, #12
   3cdc8:	str	r0, [fp, #-8]
   3cdcc:	ldr	r3, [fp, #-8]
   3cdd0:	ldr	r3, [r3, #76]	; 0x4c
   3cdd4:	mov	r0, r3
   3cdd8:	add	sp, fp, #0
   3cddc:	pop	{fp}		; (ldr fp, [sp], #4)
   3cde0:	bx	lr
   3cde4:	push	{fp}		; (str fp, [sp, #-4]!)
   3cde8:	add	fp, sp, #0
   3cdec:	sub	sp, sp, #12
   3cdf0:	str	r0, [fp, #-8]
   3cdf4:	ldr	r3, [fp, #-8]
   3cdf8:	ldr	r3, [r3, #92]	; 0x5c
   3cdfc:	mov	r0, r3
   3ce00:	add	sp, fp, #0
   3ce04:	pop	{fp}		; (ldr fp, [sp], #4)
   3ce08:	bx	lr
   3ce0c:	push	{fp}		; (str fp, [sp, #-4]!)
   3ce10:	add	fp, sp, #0
   3ce14:	sub	sp, sp, #12
   3ce18:	str	r0, [fp, #-8]
   3ce1c:	ldr	r3, [fp, #-8]
   3ce20:	ldr	r3, [r3, #84]	; 0x54
   3ce24:	mov	r0, r3
   3ce28:	add	sp, fp, #0
   3ce2c:	pop	{fp}		; (ldr fp, [sp], #4)
   3ce30:	bx	lr
   3ce34:	push	{fp}		; (str fp, [sp, #-4]!)
   3ce38:	add	fp, sp, #0
   3ce3c:	sub	sp, sp, #12
   3ce40:	str	r0, [fp, #-8]
   3ce44:	mov	r3, #0
   3ce48:	mov	r0, r3
   3ce4c:	add	sp, fp, #0
   3ce50:	pop	{fp}		; (ldr fp, [sp], #4)
   3ce54:	bx	lr
   3ce58:	push	{fp}		; (str fp, [sp, #-4]!)
   3ce5c:	add	fp, sp, #0
   3ce60:	sub	sp, sp, #12
   3ce64:	str	r0, [fp, #-8]
   3ce68:	str	r1, [fp, #-12]
   3ce6c:	ldr	r2, [fp, #-8]
   3ce70:	ldr	r3, [fp, #-12]
   3ce74:	mov	r1, r2
   3ce78:	add	r3, r3, #72	; 0x48
   3ce7c:	ldrd	r2, [r3]
   3ce80:	strd	r2, [r1]
   3ce84:	ldr	r0, [fp, #-8]
   3ce88:	add	sp, fp, #0
   3ce8c:	pop	{fp}		; (ldr fp, [sp], #4)
   3ce90:	bx	lr
   3ce94:	push	{fp}		; (str fp, [sp, #-4]!)
   3ce98:	add	fp, sp, #0
   3ce9c:	sub	sp, sp, #12
   3cea0:	str	r0, [fp, #-8]
   3cea4:	str	r1, [fp, #-12]
   3cea8:	ldr	r2, [fp, #-8]
   3ceac:	ldr	r3, [fp, #-12]
   3ceb0:	mov	r1, r2
   3ceb4:	add	r3, r3, #88	; 0x58
   3ceb8:	ldrd	r2, [r3]
   3cebc:	strd	r2, [r1]
   3cec0:	ldr	r0, [fp, #-8]
   3cec4:	add	sp, fp, #0
   3cec8:	pop	{fp}		; (ldr fp, [sp], #4)
   3cecc:	bx	lr
   3ced0:	push	{fp}		; (str fp, [sp, #-4]!)
   3ced4:	add	fp, sp, #0
   3ced8:	sub	sp, sp, #12
   3cedc:	str	r0, [fp, #-8]
   3cee0:	str	r1, [fp, #-12]
   3cee4:	ldr	r2, [fp, #-8]
   3cee8:	ldr	r3, [fp, #-12]
   3ceec:	mov	r1, r2
   3cef0:	add	r3, r3, #80	; 0x50
   3cef4:	ldrd	r2, [r3]
   3cef8:	strd	r2, [r1]
   3cefc:	ldr	r0, [fp, #-8]
   3cf00:	add	sp, fp, #0
   3cf04:	pop	{fp}		; (ldr fp, [sp], #4)
   3cf08:	bx	lr
   3cf0c:	push	{fp}		; (str fp, [sp, #-4]!)
   3cf10:	add	fp, sp, #0
   3cf14:	sub	sp, sp, #20
   3cf18:	str	r0, [fp, #-16]
   3cf1c:	str	r1, [fp, #-20]	; 0xffffffec
   3cf20:	mvn	r3, #0
   3cf24:	str	r3, [fp, #-12]
   3cf28:	mvn	r3, #0
   3cf2c:	str	r3, [fp, #-8]
   3cf30:	ldr	r3, [fp, #-16]
   3cf34:	mov	r1, r3
   3cf38:	sub	r3, fp, #12
   3cf3c:	ldrd	r2, [r3]
   3cf40:	strd	r2, [r1]
   3cf44:	ldr	r0, [fp, #-16]
   3cf48:	add	sp, fp, #0
   3cf4c:	pop	{fp}		; (ldr fp, [sp], #4)
   3cf50:	bx	lr
   3cf54:	push	{fp}		; (str fp, [sp, #-4]!)
   3cf58:	add	fp, sp, #0
   3cf5c:	sub	sp, sp, #12
   3cf60:	str	r0, [fp, #-8]
   3cf64:	str	r1, [fp, #-12]
   3cf68:	ldr	r3, [fp, #-8]
   3cf6c:	mov	r0, r3
   3cf70:	add	sp, fp, #0
   3cf74:	pop	{fp}		; (ldr fp, [sp], #4)
   3cf78:	bx	lr
   3cf7c:	str	fp, [sp, #-8]!
   3cf80:	str	lr, [sp, #4]
   3cf84:	add	fp, sp, #4
   3cf88:	sub	sp, sp, #16
   3cf8c:	str	r0, [fp, #-16]
   3cf90:	str	r1, [fp, #-20]	; 0xffffffec
   3cf94:	ldr	r2, [fp, #-20]	; 0xffffffec
   3cf98:	mov	r1, #0
   3cf9c:	ldr	r0, [fp, #-16]
   3cfa0:	bl	124ac <memchr@plt>
   3cfa4:	str	r0, [fp, #-8]
   3cfa8:	ldr	r3, [fp, #-8]
   3cfac:	cmp	r3, #0
   3cfb0:	beq	3cfc8 <__assert_fail@plt+0x2a8dc>
   3cfb4:	ldr	r2, [fp, #-8]
   3cfb8:	ldr	r3, [fp, #-16]
   3cfbc:	sub	r3, r2, r3
   3cfc0:	add	r3, r3, #1
   3cfc4:	b	3cfcc <__assert_fail@plt+0x2a8e0>
   3cfc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cfcc:	mov	r0, r3
   3cfd0:	sub	sp, fp, #4
   3cfd4:	ldr	fp, [sp]
   3cfd8:	add	sp, sp, #4
   3cfdc:	pop	{pc}		; (ldr pc, [sp], #4)
   3cfe0:	str	fp, [sp, #-8]!
   3cfe4:	str	lr, [sp, #4]
   3cfe8:	add	fp, sp, #4
   3cfec:	sub	sp, sp, #8
   3cff0:	str	r0, [fp, #-8]
   3cff4:	mov	r2, #3
   3cff8:	mov	r1, #0
   3cffc:	ldr	r0, [fp, #-8]
   3d000:	bl	3f968 <__assert_fail@plt+0x2d27c>
   3d004:	mov	r3, r0
   3d008:	mov	r0, r3
   3d00c:	sub	sp, fp, #4
   3d010:	ldr	fp, [sp]
   3d014:	add	sp, sp, #4
   3d018:	pop	{pc}		; (ldr pc, [sp], #4)
   3d01c:	str	fp, [sp, #-8]!
   3d020:	str	lr, [sp, #4]
   3d024:	add	fp, sp, #4
   3d028:	sub	sp, sp, #16
   3d02c:	str	r0, [fp, #-16]
   3d030:	ldr	r3, [fp, #-16]
   3d034:	cmp	r3, #0
   3d038:	blt	3d084 <__assert_fail@plt+0x2a998>
   3d03c:	ldr	r3, [fp, #-16]
   3d040:	cmp	r3, #2
   3d044:	bgt	3d084 <__assert_fail@plt+0x2a998>
   3d048:	ldr	r0, [fp, #-16]
   3d04c:	bl	3cfe0 <__assert_fail@plt+0x2a8f4>
   3d050:	str	r0, [fp, #-8]
   3d054:	bl	12404 <__errno_location@plt>
   3d058:	mov	r3, r0
   3d05c:	ldr	r3, [r3]
   3d060:	str	r3, [fp, #-12]
   3d064:	ldr	r0, [fp, #-16]
   3d068:	bl	126a4 <close@plt>
   3d06c:	bl	12404 <__errno_location@plt>
   3d070:	mov	r2, r0
   3d074:	ldr	r3, [fp, #-12]
   3d078:	str	r3, [r2]
   3d07c:	ldr	r3, [fp, #-8]
   3d080:	str	r3, [fp, #-16]
   3d084:	ldr	r3, [fp, #-16]
   3d088:	mov	r0, r3
   3d08c:	sub	sp, fp, #4
   3d090:	ldr	fp, [sp]
   3d094:	add	sp, sp, #4
   3d098:	pop	{pc}		; (ldr pc, [sp], #4)
   3d09c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   3d0a0:	strd	r6, [sp, #8]
   3d0a4:	str	fp, [sp, #16]
   3d0a8:	str	lr, [sp, #20]
   3d0ac:	add	fp, sp, #20
   3d0b0:	sub	sp, sp, #48	; 0x30
   3d0b4:	str	r0, [fp, #-24]	; 0xffffffe8
   3d0b8:	str	r1, [fp, #-28]	; 0xffffffe4
   3d0bc:	str	r2, [fp, #-32]	; 0xffffffe0
   3d0c0:	str	r3, [fp, #-36]	; 0xffffffdc
   3d0c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d0c8:	cmp	r3, #0
   3d0cc:	beq	3d0f4 <__assert_fail@plt+0x2aa08>
   3d0d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3d0d4:	str	r3, [sp]
   3d0d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3d0dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d0e0:	movw	r1, #45908	; 0xb354
   3d0e4:	movt	r1, #6
   3d0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d0ec:	bl	123f8 <fprintf@plt>
   3d0f0:	b	3d10c <__assert_fail@plt+0x2aa20>
   3d0f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3d0f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3d0fc:	movw	r1, #45920	; 0xb360
   3d100:	movt	r1, #6
   3d104:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d108:	bl	123f8 <fprintf@plt>
   3d10c:	movw	r0, #45928	; 0xb368
   3d110:	movt	r0, #6
   3d114:	bl	12398 <gettext@plt>
   3d118:	mov	r2, r0
   3d11c:	movw	r3, #2022	; 0x7e6
   3d120:	movw	r1, #46712	; 0xb678
   3d124:	movt	r1, #6
   3d128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d12c:	bl	123f8 <fprintf@plt>
   3d130:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d134:	mov	r0, #10
   3d138:	bl	1256c <fputc@plt>
   3d13c:	movw	r0, #45932	; 0xb36c
   3d140:	movt	r0, #6
   3d144:	bl	12398 <gettext@plt>
   3d148:	mov	r3, r0
   3d14c:	movw	r2, #46104	; 0xb418
   3d150:	movt	r2, #6
   3d154:	mov	r1, r3
   3d158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d15c:	bl	123f8 <fprintf@plt>
   3d160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d164:	mov	r0, #10
   3d168:	bl	1256c <fputc@plt>
   3d16c:	ldr	r3, [fp, #8]
   3d170:	cmp	r3, #9
   3d174:	ldrls	pc, [pc, r3, lsl #2]
   3d178:	b	3d558 <__assert_fail@plt+0x2ae6c>
   3d17c:	andeq	sp, r3, r4, lsl #12
   3d180:	andeq	sp, r3, r4, lsr #3
   3d184:	andeq	sp, r3, ip, asr #3
   3d188:	strdeq	sp, [r3], -ip
   3d18c:	andeq	sp, r3, r0, asr #4
   3d190:	muleq	r3, ip, r2
   3d194:	andeq	sp, r3, r8, lsl #6
   3d198:	andeq	sp, r3, r4, lsl #7
   3d19c:	andeq	sp, r3, r0, lsl r4
   3d1a0:	andeq	sp, r3, ip, lsr #9
   3d1a4:	movw	r0, #46140	; 0xb43c
   3d1a8:	movt	r0, #6
   3d1ac:	bl	12398 <gettext@plt>
   3d1b0:	mov	r1, r0
   3d1b4:	ldr	r3, [fp, #4]
   3d1b8:	ldr	r3, [r3]
   3d1bc:	mov	r2, r3
   3d1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d1c4:	bl	123f8 <fprintf@plt>
   3d1c8:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d1cc:	movw	r0, #46156	; 0xb44c
   3d1d0:	movt	r0, #6
   3d1d4:	bl	12398 <gettext@plt>
   3d1d8:	mov	r1, r0
   3d1dc:	ldr	r3, [fp, #4]
   3d1e0:	ldr	r2, [r3]
   3d1e4:	ldr	r3, [fp, #4]
   3d1e8:	add	r3, r3, #4
   3d1ec:	ldr	r3, [r3]
   3d1f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d1f4:	bl	123f8 <fprintf@plt>
   3d1f8:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d1fc:	movw	r0, #46180	; 0xb464
   3d200:	movt	r0, #6
   3d204:	bl	12398 <gettext@plt>
   3d208:	ldr	r3, [fp, #4]
   3d20c:	ldr	r2, [r3]
   3d210:	ldr	r3, [fp, #4]
   3d214:	add	r3, r3, #4
   3d218:	ldr	r1, [r3]
   3d21c:	ldr	r3, [fp, #4]
   3d220:	add	r3, r3, #8
   3d224:	ldr	r3, [r3]
   3d228:	str	r3, [sp]
   3d22c:	mov	r3, r1
   3d230:	mov	r1, r0
   3d234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d238:	bl	123f8 <fprintf@plt>
   3d23c:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d240:	movw	r0, #46208	; 0xb480
   3d244:	movt	r0, #6
   3d248:	bl	12398 <gettext@plt>
   3d24c:	mov	ip, r0
   3d250:	ldr	r3, [fp, #4]
   3d254:	ldr	r1, [r3]
   3d258:	ldr	r3, [fp, #4]
   3d25c:	add	r3, r3, #4
   3d260:	ldr	r0, [r3]
   3d264:	ldr	r3, [fp, #4]
   3d268:	add	r3, r3, #8
   3d26c:	ldr	r3, [r3]
   3d270:	ldr	r2, [fp, #4]
   3d274:	add	r2, r2, #12
   3d278:	ldr	r2, [r2]
   3d27c:	str	r2, [sp, #4]
   3d280:	str	r3, [sp]
   3d284:	mov	r3, r0
   3d288:	mov	r2, r1
   3d28c:	mov	r1, ip
   3d290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d294:	bl	123f8 <fprintf@plt>
   3d298:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d29c:	movw	r0, #46240	; 0xb4a0
   3d2a0:	movt	r0, #6
   3d2a4:	bl	12398 <gettext@plt>
   3d2a8:	mov	lr, r0
   3d2ac:	ldr	r3, [fp, #4]
   3d2b0:	ldr	r0, [r3]
   3d2b4:	ldr	r3, [fp, #4]
   3d2b8:	add	r3, r3, #4
   3d2bc:	ldr	ip, [r3]
   3d2c0:	ldr	r3, [fp, #4]
   3d2c4:	add	r3, r3, #8
   3d2c8:	ldr	r3, [r3]
   3d2cc:	ldr	r2, [fp, #4]
   3d2d0:	add	r2, r2, #12
   3d2d4:	ldr	r2, [r2]
   3d2d8:	ldr	r1, [fp, #4]
   3d2dc:	add	r1, r1, #16
   3d2e0:	ldr	r1, [r1]
   3d2e4:	str	r1, [sp, #8]
   3d2e8:	str	r2, [sp, #4]
   3d2ec:	str	r3, [sp]
   3d2f0:	mov	r3, ip
   3d2f4:	mov	r2, r0
   3d2f8:	mov	r1, lr
   3d2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d300:	bl	123f8 <fprintf@plt>
   3d304:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d308:	movw	r0, #46276	; 0xb4c4
   3d30c:	movt	r0, #6
   3d310:	bl	12398 <gettext@plt>
   3d314:	mov	r4, r0
   3d318:	ldr	r3, [fp, #4]
   3d31c:	ldr	ip, [r3]
   3d320:	ldr	r3, [fp, #4]
   3d324:	add	r3, r3, #4
   3d328:	ldr	lr, [r3]
   3d32c:	ldr	r3, [fp, #4]
   3d330:	add	r3, r3, #8
   3d334:	ldr	r3, [r3]
   3d338:	ldr	r2, [fp, #4]
   3d33c:	add	r2, r2, #12
   3d340:	ldr	r2, [r2]
   3d344:	ldr	r1, [fp, #4]
   3d348:	add	r1, r1, #16
   3d34c:	ldr	r1, [r1]
   3d350:	ldr	r0, [fp, #4]
   3d354:	add	r0, r0, #20
   3d358:	ldr	r0, [r0]
   3d35c:	str	r0, [sp, #12]
   3d360:	str	r1, [sp, #8]
   3d364:	str	r2, [sp, #4]
   3d368:	str	r3, [sp]
   3d36c:	mov	r3, lr
   3d370:	mov	r2, ip
   3d374:	mov	r1, r4
   3d378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d37c:	bl	123f8 <fprintf@plt>
   3d380:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d384:	movw	r0, #46316	; 0xb4ec
   3d388:	movt	r0, #6
   3d38c:	bl	12398 <gettext@plt>
   3d390:	mov	r5, r0
   3d394:	ldr	r3, [fp, #4]
   3d398:	ldr	lr, [r3]
   3d39c:	ldr	r3, [fp, #4]
   3d3a0:	add	r3, r3, #4
   3d3a4:	ldr	r4, [r3]
   3d3a8:	ldr	r3, [fp, #4]
   3d3ac:	add	r3, r3, #8
   3d3b0:	ldr	r3, [r3]
   3d3b4:	ldr	r2, [fp, #4]
   3d3b8:	add	r2, r2, #12
   3d3bc:	ldr	r2, [r2]
   3d3c0:	ldr	r1, [fp, #4]
   3d3c4:	add	r1, r1, #16
   3d3c8:	ldr	r1, [r1]
   3d3cc:	ldr	r0, [fp, #4]
   3d3d0:	add	r0, r0, #20
   3d3d4:	ldr	r0, [r0]
   3d3d8:	ldr	ip, [fp, #4]
   3d3dc:	add	ip, ip, #24
   3d3e0:	ldr	ip, [ip]
   3d3e4:	str	ip, [sp, #16]
   3d3e8:	str	r0, [sp, #12]
   3d3ec:	str	r1, [sp, #8]
   3d3f0:	str	r2, [sp, #4]
   3d3f4:	str	r3, [sp]
   3d3f8:	mov	r3, r4
   3d3fc:	mov	r2, lr
   3d400:	mov	r1, r5
   3d404:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d408:	bl	123f8 <fprintf@plt>
   3d40c:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d410:	movw	r0, #46360	; 0xb518
   3d414:	movt	r0, #6
   3d418:	bl	12398 <gettext@plt>
   3d41c:	mov	r6, r0
   3d420:	ldr	r3, [fp, #4]
   3d424:	ldr	r4, [r3]
   3d428:	ldr	r3, [fp, #4]
   3d42c:	add	r3, r3, #4
   3d430:	ldr	r5, [r3]
   3d434:	ldr	r3, [fp, #4]
   3d438:	add	r3, r3, #8
   3d43c:	ldr	r3, [r3]
   3d440:	ldr	r2, [fp, #4]
   3d444:	add	r2, r2, #12
   3d448:	ldr	r2, [r2]
   3d44c:	ldr	r1, [fp, #4]
   3d450:	add	r1, r1, #16
   3d454:	ldr	r1, [r1]
   3d458:	ldr	r0, [fp, #4]
   3d45c:	add	r0, r0, #20
   3d460:	ldr	r0, [r0]
   3d464:	ldr	ip, [fp, #4]
   3d468:	add	ip, ip, #24
   3d46c:	ldr	ip, [ip]
   3d470:	ldr	lr, [fp, #4]
   3d474:	add	lr, lr, #28
   3d478:	ldr	lr, [lr]
   3d47c:	str	lr, [sp, #20]
   3d480:	str	ip, [sp, #16]
   3d484:	str	r0, [sp, #12]
   3d488:	str	r1, [sp, #8]
   3d48c:	str	r2, [sp, #4]
   3d490:	str	r3, [sp]
   3d494:	mov	r3, r5
   3d498:	mov	r2, r4
   3d49c:	mov	r1, r6
   3d4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d4a4:	bl	123f8 <fprintf@plt>
   3d4a8:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d4ac:	movw	r0, #46408	; 0xb548
   3d4b0:	movt	r0, #6
   3d4b4:	bl	12398 <gettext@plt>
   3d4b8:	mov	r7, r0
   3d4bc:	ldr	r3, [fp, #4]
   3d4c0:	ldr	r5, [r3]
   3d4c4:	ldr	r3, [fp, #4]
   3d4c8:	add	r3, r3, #4
   3d4cc:	ldr	r6, [r3]
   3d4d0:	ldr	r3, [fp, #4]
   3d4d4:	add	r3, r3, #8
   3d4d8:	ldr	r3, [r3]
   3d4dc:	ldr	r2, [fp, #4]
   3d4e0:	add	r2, r2, #12
   3d4e4:	ldr	r2, [r2]
   3d4e8:	ldr	r1, [fp, #4]
   3d4ec:	add	r1, r1, #16
   3d4f0:	ldr	r1, [r1]
   3d4f4:	ldr	r0, [fp, #4]
   3d4f8:	add	r0, r0, #20
   3d4fc:	ldr	r0, [r0]
   3d500:	ldr	ip, [fp, #4]
   3d504:	add	ip, ip, #24
   3d508:	ldr	ip, [ip]
   3d50c:	ldr	lr, [fp, #4]
   3d510:	add	lr, lr, #28
   3d514:	ldr	lr, [lr]
   3d518:	ldr	r4, [fp, #4]
   3d51c:	add	r4, r4, #32
   3d520:	ldr	r4, [r4]
   3d524:	str	r4, [sp, #24]
   3d528:	str	lr, [sp, #20]
   3d52c:	str	ip, [sp, #16]
   3d530:	str	r0, [sp, #12]
   3d534:	str	r1, [sp, #8]
   3d538:	str	r2, [sp, #4]
   3d53c:	str	r3, [sp]
   3d540:	mov	r3, r6
   3d544:	mov	r2, r5
   3d548:	mov	r1, r7
   3d54c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d550:	bl	123f8 <fprintf@plt>
   3d554:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d558:	movw	r0, #46460	; 0xb57c
   3d55c:	movt	r0, #6
   3d560:	bl	12398 <gettext@plt>
   3d564:	mov	r7, r0
   3d568:	ldr	r3, [fp, #4]
   3d56c:	ldr	r5, [r3]
   3d570:	ldr	r3, [fp, #4]
   3d574:	add	r3, r3, #4
   3d578:	ldr	r6, [r3]
   3d57c:	ldr	r3, [fp, #4]
   3d580:	add	r3, r3, #8
   3d584:	ldr	r3, [r3]
   3d588:	ldr	r2, [fp, #4]
   3d58c:	add	r2, r2, #12
   3d590:	ldr	r2, [r2]
   3d594:	ldr	r1, [fp, #4]
   3d598:	add	r1, r1, #16
   3d59c:	ldr	r1, [r1]
   3d5a0:	ldr	r0, [fp, #4]
   3d5a4:	add	r0, r0, #20
   3d5a8:	ldr	r0, [r0]
   3d5ac:	ldr	ip, [fp, #4]
   3d5b0:	add	ip, ip, #24
   3d5b4:	ldr	ip, [ip]
   3d5b8:	ldr	lr, [fp, #4]
   3d5bc:	add	lr, lr, #28
   3d5c0:	ldr	lr, [lr]
   3d5c4:	ldr	r4, [fp, #4]
   3d5c8:	add	r4, r4, #32
   3d5cc:	ldr	r4, [r4]
   3d5d0:	str	r4, [sp, #24]
   3d5d4:	str	lr, [sp, #20]
   3d5d8:	str	ip, [sp, #16]
   3d5dc:	str	r0, [sp, #12]
   3d5e0:	str	r1, [sp, #8]
   3d5e4:	str	r2, [sp, #4]
   3d5e8:	str	r3, [sp]
   3d5ec:	mov	r3, r6
   3d5f0:	mov	r2, r5
   3d5f4:	mov	r1, r7
   3d5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d5fc:	bl	123f8 <fprintf@plt>
   3d600:	b	3d608 <__assert_fail@plt+0x2af1c>
   3d604:	nop	{0}
   3d608:	nop	{0}
   3d60c:	sub	sp, fp, #20
   3d610:	ldrd	r4, [sp]
   3d614:	ldrd	r6, [sp, #8]
   3d618:	ldr	fp, [sp, #16]
   3d61c:	add	sp, sp, #20
   3d620:	pop	{pc}		; (ldr pc, [sp], #4)
   3d624:	str	fp, [sp, #-8]!
   3d628:	str	lr, [sp, #4]
   3d62c:	add	fp, sp, #4
   3d630:	sub	sp, sp, #32
   3d634:	str	r0, [fp, #-16]
   3d638:	str	r1, [fp, #-20]	; 0xffffffec
   3d63c:	str	r2, [fp, #-24]	; 0xffffffe8
   3d640:	str	r3, [fp, #-28]	; 0xffffffe4
   3d644:	mov	r3, #0
   3d648:	str	r3, [fp, #-8]
   3d64c:	b	3d65c <__assert_fail@plt+0x2af70>
   3d650:	ldr	r3, [fp, #-8]
   3d654:	add	r3, r3, #1
   3d658:	str	r3, [fp, #-8]
   3d65c:	ldr	r3, [fp, #-8]
   3d660:	lsl	r3, r3, #2
   3d664:	ldr	r2, [fp, #4]
   3d668:	add	r3, r2, r3
   3d66c:	ldr	r3, [r3]
   3d670:	cmp	r3, #0
   3d674:	bne	3d650 <__assert_fail@plt+0x2af64>
   3d678:	ldr	r3, [fp, #-8]
   3d67c:	str	r3, [sp, #4]
   3d680:	ldr	r3, [fp, #4]
   3d684:	str	r3, [sp]
   3d688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d68c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d690:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d694:	ldr	r0, [fp, #-16]
   3d698:	bl	3d09c <__assert_fail@plt+0x2a9b0>
   3d69c:	nop	{0}
   3d6a0:	sub	sp, fp, #4
   3d6a4:	ldr	fp, [sp]
   3d6a8:	add	sp, sp, #4
   3d6ac:	pop	{pc}		; (ldr pc, [sp], #4)
   3d6b0:	str	fp, [sp, #-8]!
   3d6b4:	str	lr, [sp, #4]
   3d6b8:	add	fp, sp, #4
   3d6bc:	sub	sp, sp, #72	; 0x48
   3d6c0:	str	r0, [fp, #-56]	; 0xffffffc8
   3d6c4:	str	r1, [fp, #-60]	; 0xffffffc4
   3d6c8:	str	r2, [fp, #-64]	; 0xffffffc0
   3d6cc:	str	r3, [fp, #-68]	; 0xffffffbc
   3d6d0:	mov	r3, #0
   3d6d4:	str	r3, [fp, #-8]
   3d6d8:	b	3d6e8 <__assert_fail@plt+0x2affc>
   3d6dc:	ldr	r3, [fp, #-8]
   3d6e0:	add	r3, r3, #1
   3d6e4:	str	r3, [fp, #-8]
   3d6e8:	ldr	r3, [fp, #-8]
   3d6ec:	cmp	r3, #9
   3d6f0:	bhi	3d734 <__assert_fail@plt+0x2b048>
   3d6f4:	ldr	r3, [fp, #4]
   3d6f8:	add	r2, r3, #4
   3d6fc:	str	r2, [fp, #4]
   3d700:	ldr	r2, [r3]
   3d704:	ldr	r3, [fp, #-8]
   3d708:	lsl	r3, r3, #2
   3d70c:	sub	r1, fp, #4
   3d710:	add	r3, r1, r3
   3d714:	str	r2, [r3, #-44]	; 0xffffffd4
   3d718:	ldr	r3, [fp, #-8]
   3d71c:	lsl	r3, r3, #2
   3d720:	sub	r2, fp, #4
   3d724:	add	r3, r2, r3
   3d728:	ldr	r3, [r3, #-44]	; 0xffffffd4
   3d72c:	cmp	r3, #0
   3d730:	bne	3d6dc <__assert_fail@plt+0x2aff0>
   3d734:	ldr	r3, [fp, #-8]
   3d738:	str	r3, [sp, #4]
   3d73c:	sub	r3, fp, #48	; 0x30
   3d740:	str	r3, [sp]
   3d744:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d748:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3d74c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3d750:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3d754:	bl	3d09c <__assert_fail@plt+0x2a9b0>
   3d758:	nop	{0}
   3d75c:	sub	sp, fp, #4
   3d760:	ldr	fp, [sp]
   3d764:	add	sp, sp, #4
   3d768:	pop	{pc}		; (ldr pc, [sp], #4)
   3d76c:	push	{r3}		; (str r3, [sp, #-4]!)
   3d770:	str	fp, [sp, #-8]!
   3d774:	str	lr, [sp, #4]
   3d778:	add	fp, sp, #4
   3d77c:	sub	sp, sp, #36	; 0x24
   3d780:	str	r0, [fp, #-20]	; 0xffffffec
   3d784:	str	r1, [fp, #-24]	; 0xffffffe8
   3d788:	str	r2, [fp, #-28]	; 0xffffffe4
   3d78c:	add	r3, fp, #8
   3d790:	str	r3, [fp, #-12]
   3d794:	ldr	r3, [fp, #-12]
   3d798:	str	r3, [sp]
   3d79c:	ldr	r3, [fp, #4]
   3d7a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d7a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d7ac:	bl	3d6b0 <__assert_fail@plt+0x2afc4>
   3d7b0:	nop	{0}
   3d7b4:	sub	sp, fp, #4
   3d7b8:	ldr	fp, [sp]
   3d7bc:	ldr	lr, [sp, #4]
   3d7c0:	add	sp, sp, #8
   3d7c4:	add	sp, sp, #4
   3d7c8:	bx	lr
   3d7cc:	str	fp, [sp, #-8]!
   3d7d0:	str	lr, [sp, #4]
   3d7d4:	add	fp, sp, #4
   3d7d8:	movw	r3, #50996	; 0xc734
   3d7dc:	movt	r3, #7
   3d7e0:	ldr	r3, [r3]
   3d7e4:	mov	r1, r3
   3d7e8:	mov	r0, #10
   3d7ec:	bl	1256c <fputc@plt>
   3d7f0:	movw	r0, #46520	; 0xb5b8
   3d7f4:	movt	r0, #6
   3d7f8:	bl	12398 <gettext@plt>
   3d7fc:	mov	r3, r0
   3d800:	movw	r1, #46540	; 0xb5cc
   3d804:	movt	r1, #6
   3d808:	mov	r0, r3
   3d80c:	bl	1202c <printf@plt>
   3d810:	movw	r0, #46564	; 0xb5e4
   3d814:	movt	r0, #6
   3d818:	bl	12398 <gettext@plt>
   3d81c:	mov	r3, r0
   3d820:	movw	r2, #46584	; 0xb5f8
   3d824:	movt	r2, #6
   3d828:	movw	r1, #46624	; 0xb620
   3d82c:	movt	r1, #6
   3d830:	mov	r0, r3
   3d834:	bl	1202c <printf@plt>
   3d838:	movw	r0, #46640	; 0xb630
   3d83c:	movt	r0, #6
   3d840:	bl	12398 <gettext@plt>
   3d844:	mov	r3, r0
   3d848:	movw	r1, #46680	; 0xb658
   3d84c:	movt	r1, #6
   3d850:	mov	r0, r3
   3d854:	bl	1202c <printf@plt>
   3d858:	nop	{0}
   3d85c:	sub	sp, fp, #4
   3d860:	ldr	fp, [sp]
   3d864:	add	sp, sp, #4
   3d868:	pop	{pc}		; (ldr pc, [sp], #4)
   3d86c:	str	fp, [sp, #-8]!
   3d870:	str	lr, [sp, #4]
   3d874:	add	fp, sp, #4
   3d878:	sub	sp, sp, #16
   3d87c:	str	r0, [fp, #-8]
   3d880:	str	r1, [fp, #-12]
   3d884:	str	r2, [fp, #-16]
   3d888:	ldr	r2, [fp, #-16]
   3d88c:	ldr	r1, [fp, #-12]
   3d890:	ldr	r0, [fp, #-8]
   3d894:	bl	3da50 <__assert_fail@plt+0x2b364>
   3d898:	mov	r3, r0
   3d89c:	mov	r0, r3
   3d8a0:	sub	sp, fp, #4
   3d8a4:	ldr	fp, [sp]
   3d8a8:	add	sp, sp, #4
   3d8ac:	pop	{pc}		; (ldr pc, [sp], #4)
   3d8b0:	str	fp, [sp, #-8]!
   3d8b4:	str	lr, [sp, #4]
   3d8b8:	add	fp, sp, #4
   3d8bc:	sub	sp, sp, #8
   3d8c0:	str	r0, [fp, #-8]
   3d8c4:	ldr	r3, [fp, #-8]
   3d8c8:	cmp	r3, #0
   3d8cc:	bne	3d8d4 <__assert_fail@plt+0x2b1e8>
   3d8d0:	bl	3e160 <__assert_fail@plt+0x2ba74>
   3d8d4:	ldr	r3, [fp, #-8]
   3d8d8:	mov	r0, r3
   3d8dc:	sub	sp, fp, #4
   3d8e0:	ldr	fp, [sp]
   3d8e4:	add	sp, sp, #4
   3d8e8:	pop	{pc}		; (ldr pc, [sp], #4)
   3d8ec:	str	fp, [sp, #-8]!
   3d8f0:	str	lr, [sp, #4]
   3d8f4:	add	fp, sp, #4
   3d8f8:	sub	sp, sp, #8
   3d8fc:	str	r0, [fp, #-8]
   3d900:	ldr	r0, [fp, #-8]
   3d904:	bl	43510 <__assert_fail@plt+0x30e24>
   3d908:	mov	r3, r0
   3d90c:	mov	r0, r3
   3d910:	bl	3d8b0 <__assert_fail@plt+0x2b1c4>
   3d914:	mov	r3, r0
   3d918:	mov	r0, r3
   3d91c:	sub	sp, fp, #4
   3d920:	ldr	fp, [sp]
   3d924:	add	sp, sp, #4
   3d928:	pop	{pc}		; (ldr pc, [sp], #4)
   3d92c:	str	fp, [sp, #-8]!
   3d930:	str	lr, [sp, #4]
   3d934:	add	fp, sp, #4
   3d938:	sub	sp, sp, #8
   3d93c:	str	r0, [fp, #-8]
   3d940:	ldr	r0, [fp, #-8]
   3d944:	bl	61218 <__assert_fail@plt+0x4eb2c>
   3d948:	mov	r3, r0
   3d94c:	mov	r0, r3
   3d950:	bl	3d8b0 <__assert_fail@plt+0x2b1c4>
   3d954:	mov	r3, r0
   3d958:	mov	r0, r3
   3d95c:	sub	sp, fp, #4
   3d960:	ldr	fp, [sp]
   3d964:	add	sp, sp, #4
   3d968:	pop	{pc}		; (ldr pc, [sp], #4)
   3d96c:	str	fp, [sp, #-8]!
   3d970:	str	lr, [sp, #4]
   3d974:	add	fp, sp, #4
   3d978:	sub	sp, sp, #8
   3d97c:	str	r0, [fp, #-8]
   3d980:	ldr	r0, [fp, #-8]
   3d984:	bl	3d8ec <__assert_fail@plt+0x2b200>
   3d988:	mov	r3, r0
   3d98c:	mov	r0, r3
   3d990:	sub	sp, fp, #4
   3d994:	ldr	fp, [sp]
   3d998:	add	sp, sp, #4
   3d99c:	pop	{pc}		; (ldr pc, [sp], #4)
   3d9a0:	str	fp, [sp, #-8]!
   3d9a4:	str	lr, [sp, #4]
   3d9a8:	add	fp, sp, #4
   3d9ac:	sub	sp, sp, #16
   3d9b0:	str	r0, [fp, #-16]
   3d9b4:	str	r1, [fp, #-20]	; 0xffffffec
   3d9b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d9bc:	ldr	r0, [fp, #-16]
   3d9c0:	bl	446e8 <__assert_fail@plt+0x31ffc>
   3d9c4:	str	r0, [fp, #-8]
   3d9c8:	ldr	r3, [fp, #-8]
   3d9cc:	cmp	r3, #0
   3d9d0:	bne	3d9f0 <__assert_fail@plt+0x2b304>
   3d9d4:	ldr	r3, [fp, #-16]
   3d9d8:	cmp	r3, #0
   3d9dc:	beq	3d9ec <__assert_fail@plt+0x2b300>
   3d9e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d9e4:	cmp	r3, #0
   3d9e8:	beq	3d9f0 <__assert_fail@plt+0x2b304>
   3d9ec:	bl	3e160 <__assert_fail@plt+0x2ba74>
   3d9f0:	ldr	r3, [fp, #-8]
   3d9f4:	mov	r0, r3
   3d9f8:	sub	sp, fp, #4
   3d9fc:	ldr	fp, [sp]
   3da00:	add	sp, sp, #4
   3da04:	pop	{pc}		; (ldr pc, [sp], #4)
   3da08:	str	fp, [sp, #-8]!
   3da0c:	str	lr, [sp, #4]
   3da10:	add	fp, sp, #4
   3da14:	sub	sp, sp, #8
   3da18:	str	r0, [fp, #-8]
   3da1c:	str	r1, [fp, #-12]
   3da20:	ldr	r1, [fp, #-12]
   3da24:	ldr	r0, [fp, #-8]
   3da28:	bl	61250 <__assert_fail@plt+0x4eb64>
   3da2c:	mov	r3, r0
   3da30:	mov	r0, r3
   3da34:	bl	3d8b0 <__assert_fail@plt+0x2b1c4>
   3da38:	mov	r3, r0
   3da3c:	mov	r0, r3
   3da40:	sub	sp, fp, #4
   3da44:	ldr	fp, [sp]
   3da48:	add	sp, sp, #4
   3da4c:	pop	{pc}		; (ldr pc, [sp], #4)
   3da50:	str	fp, [sp, #-8]!
   3da54:	str	lr, [sp, #4]
   3da58:	add	fp, sp, #4
   3da5c:	sub	sp, sp, #24
   3da60:	str	r0, [fp, #-16]
   3da64:	str	r1, [fp, #-20]	; 0xffffffec
   3da68:	str	r2, [fp, #-24]	; 0xffffffe8
   3da6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3da70:	ldr	r1, [fp, #-20]	; 0xffffffec
   3da74:	ldr	r0, [fp, #-16]
   3da78:	bl	447a0 <__assert_fail@plt+0x320b4>
   3da7c:	str	r0, [fp, #-8]
   3da80:	ldr	r3, [fp, #-8]
   3da84:	cmp	r3, #0
   3da88:	bne	3dab4 <__assert_fail@plt+0x2b3c8>
   3da8c:	ldr	r3, [fp, #-16]
   3da90:	cmp	r3, #0
   3da94:	beq	3dab0 <__assert_fail@plt+0x2b3c4>
   3da98:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da9c:	cmp	r3, #0
   3daa0:	beq	3dab4 <__assert_fail@plt+0x2b3c8>
   3daa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3daa8:	cmp	r3, #0
   3daac:	beq	3dab4 <__assert_fail@plt+0x2b3c8>
   3dab0:	bl	3e160 <__assert_fail@plt+0x2ba74>
   3dab4:	ldr	r3, [fp, #-8]
   3dab8:	mov	r0, r3
   3dabc:	sub	sp, fp, #4
   3dac0:	ldr	fp, [sp]
   3dac4:	add	sp, sp, #4
   3dac8:	pop	{pc}		; (ldr pc, [sp], #4)
   3dacc:	str	fp, [sp, #-8]!
   3dad0:	str	lr, [sp, #4]
   3dad4:	add	fp, sp, #4
   3dad8:	sub	sp, sp, #16
   3dadc:	str	r0, [fp, #-8]
   3dae0:	str	r1, [fp, #-12]
   3dae4:	str	r2, [fp, #-16]
   3dae8:	ldr	r2, [fp, #-16]
   3daec:	ldr	r1, [fp, #-12]
   3daf0:	ldr	r0, [fp, #-8]
   3daf4:	bl	612f0 <__assert_fail@plt+0x4ec04>
   3daf8:	mov	r3, r0
   3dafc:	mov	r0, r3
   3db00:	bl	3d8b0 <__assert_fail@plt+0x2b1c4>
   3db04:	mov	r3, r0
   3db08:	mov	r0, r3
   3db0c:	sub	sp, fp, #4
   3db10:	ldr	fp, [sp]
   3db14:	add	sp, sp, #4
   3db18:	pop	{pc}		; (ldr pc, [sp], #4)
   3db1c:	str	fp, [sp, #-8]!
   3db20:	str	lr, [sp, #4]
   3db24:	add	fp, sp, #4
   3db28:	sub	sp, sp, #8
   3db2c:	str	r0, [fp, #-8]
   3db30:	str	r1, [fp, #-12]
   3db34:	ldr	r2, [fp, #-12]
   3db38:	ldr	r1, [fp, #-8]
   3db3c:	mov	r0, #0
   3db40:	bl	3da50 <__assert_fail@plt+0x2b364>
   3db44:	mov	r3, r0
   3db48:	mov	r0, r3
   3db4c:	sub	sp, fp, #4
   3db50:	ldr	fp, [sp]
   3db54:	add	sp, sp, #4
   3db58:	pop	{pc}		; (ldr pc, [sp], #4)
   3db5c:	str	fp, [sp, #-8]!
   3db60:	str	lr, [sp, #4]
   3db64:	add	fp, sp, #4
   3db68:	sub	sp, sp, #8
   3db6c:	str	r0, [fp, #-8]
   3db70:	str	r1, [fp, #-12]
   3db74:	ldr	r2, [fp, #-12]
   3db78:	ldr	r1, [fp, #-8]
   3db7c:	mov	r0, #0
   3db80:	bl	3dacc <__assert_fail@plt+0x2b3e0>
   3db84:	mov	r3, r0
   3db88:	mov	r0, r3
   3db8c:	sub	sp, fp, #4
   3db90:	ldr	fp, [sp]
   3db94:	add	sp, sp, #4
   3db98:	pop	{pc}		; (ldr pc, [sp], #4)
   3db9c:	str	fp, [sp, #-8]!
   3dba0:	str	lr, [sp, #4]
   3dba4:	add	fp, sp, #4
   3dba8:	sub	sp, sp, #8
   3dbac:	str	r0, [fp, #-8]
   3dbb0:	str	r1, [fp, #-12]
   3dbb4:	mov	r2, #1
   3dbb8:	ldr	r1, [fp, #-12]
   3dbbc:	ldr	r0, [fp, #-8]
   3dbc0:	bl	3dbdc <__assert_fail@plt+0x2b4f0>
   3dbc4:	mov	r3, r0
   3dbc8:	mov	r0, r3
   3dbcc:	sub	sp, fp, #4
   3dbd0:	ldr	fp, [sp]
   3dbd4:	add	sp, sp, #4
   3dbd8:	pop	{pc}		; (ldr pc, [sp], #4)
   3dbdc:	str	fp, [sp, #-8]!
   3dbe0:	str	lr, [sp, #4]
   3dbe4:	add	fp, sp, #4
   3dbe8:	sub	sp, sp, #24
   3dbec:	str	r0, [fp, #-16]
   3dbf0:	str	r1, [fp, #-20]	; 0xffffffec
   3dbf4:	str	r2, [fp, #-24]	; 0xffffffe8
   3dbf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dbfc:	ldr	r3, [r3]
   3dc00:	str	r3, [fp, #-8]
   3dc04:	ldr	r3, [fp, #-16]
   3dc08:	cmp	r3, #0
   3dc0c:	bne	3dc54 <__assert_fail@plt+0x2b568>
   3dc10:	ldr	r3, [fp, #-8]
   3dc14:	cmp	r3, #0
   3dc18:	bne	3dc90 <__assert_fail@plt+0x2b5a4>
   3dc1c:	mov	r2, #64	; 0x40
   3dc20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dc24:	udiv	r3, r2, r3
   3dc28:	str	r3, [fp, #-8]
   3dc2c:	ldr	r3, [fp, #-8]
   3dc30:	cmp	r3, #0
   3dc34:	moveq	r3, #1
   3dc38:	movne	r3, #0
   3dc3c:	uxtb	r3, r3
   3dc40:	mov	r2, r3
   3dc44:	ldr	r3, [fp, #-8]
   3dc48:	add	r3, r2, r3
   3dc4c:	str	r3, [fp, #-8]
   3dc50:	b	3dc90 <__assert_fail@plt+0x2b5a4>
   3dc54:	ldr	r2, [fp, #-8]
   3dc58:	ldr	r3, [fp, #-8]
   3dc5c:	lsr	r3, r3, #1
   3dc60:	add	r3, r3, #1
   3dc64:	mov	r1, #0
   3dc68:	adds	r3, r2, r3
   3dc6c:	bcc	3dc74 <__assert_fail@plt+0x2b588>
   3dc70:	mov	r1, #1
   3dc74:	str	r3, [fp, #-8]
   3dc78:	mov	r3, r1
   3dc7c:	and	r3, r3, #1
   3dc80:	uxtb	r3, r3
   3dc84:	cmp	r3, #0
   3dc88:	beq	3dc90 <__assert_fail@plt+0x2b5a4>
   3dc8c:	bl	3e160 <__assert_fail@plt+0x2ba74>
   3dc90:	ldr	r3, [fp, #-8]
   3dc94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3dc98:	mov	r1, r3
   3dc9c:	ldr	r0, [fp, #-16]
   3dca0:	bl	3da50 <__assert_fail@plt+0x2b364>
   3dca4:	str	r0, [fp, #-16]
   3dca8:	ldr	r2, [fp, #-8]
   3dcac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dcb0:	str	r2, [r3]
   3dcb4:	ldr	r3, [fp, #-16]
   3dcb8:	mov	r0, r3
   3dcbc:	sub	sp, fp, #4
   3dcc0:	ldr	fp, [sp]
   3dcc4:	add	sp, sp, #4
   3dcc8:	pop	{pc}		; (ldr pc, [sp], #4)
   3dccc:	str	fp, [sp, #-8]!
   3dcd0:	str	lr, [sp, #4]
   3dcd4:	add	fp, sp, #4
   3dcd8:	sub	sp, sp, #32
   3dcdc:	str	r0, [fp, #-24]	; 0xffffffe8
   3dce0:	str	r1, [fp, #-28]	; 0xffffffe4
   3dce4:	str	r2, [fp, #-32]	; 0xffffffe0
   3dce8:	str	r3, [fp, #-36]	; 0xffffffdc
   3dcec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dcf0:	ldr	r3, [r3]
   3dcf4:	str	r3, [fp, #-8]
   3dcf8:	ldr	r3, [fp, #-8]
   3dcfc:	asr	r3, r3, #1
   3dd00:	mov	r1, #0
   3dd04:	ldr	r2, [fp, #-8]
   3dd08:	adds	r3, r2, r3
   3dd0c:	bvc	3dd14 <__assert_fail@plt+0x2b628>
   3dd10:	mov	r1, #1
   3dd14:	str	r3, [fp, #-16]
   3dd18:	mov	r3, r1
   3dd1c:	and	r3, r3, #1
   3dd20:	uxtb	r3, r3
   3dd24:	cmp	r3, #0
   3dd28:	beq	3dd34 <__assert_fail@plt+0x2b648>
   3dd2c:	mvn	r3, #-2147483648	; 0x80000000
   3dd30:	str	r3, [fp, #-16]
   3dd34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dd38:	cmp	r3, #0
   3dd3c:	blt	3dd58 <__assert_fail@plt+0x2b66c>
   3dd40:	ldr	r3, [fp, #-16]
   3dd44:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3dd48:	cmp	r2, r3
   3dd4c:	bge	3dd58 <__assert_fail@plt+0x2b66c>
   3dd50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dd54:	str	r3, [fp, #-16]
   3dd58:	ldr	r2, [fp, #-16]
   3dd5c:	mov	lr, #0
   3dd60:	ldr	r3, [fp, #4]
   3dd64:	smull	r2, r3, r2, r3
   3dd68:	mov	r0, #0
   3dd6c:	mov	r1, #0
   3dd70:	mov	r0, r3
   3dd74:	asr	r1, r3, #31
   3dd78:	asr	ip, r2, #31
   3dd7c:	cmp	ip, r0
   3dd80:	beq	3dd88 <__assert_fail@plt+0x2b69c>
   3dd84:	mov	lr, #1
   3dd88:	mov	r3, r2
   3dd8c:	str	r3, [fp, #-20]	; 0xffffffec
   3dd90:	mov	r3, lr
   3dd94:	and	r3, r3, #1
   3dd98:	uxtb	r3, r3
   3dd9c:	cmp	r3, #0
   3dda0:	beq	3ddac <__assert_fail@plt+0x2b6c0>
   3dda4:	mvn	r3, #-2147483648	; 0x80000000
   3dda8:	b	3ddc4 <__assert_fail@plt+0x2b6d8>
   3ddac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ddb0:	cmp	r3, #63	; 0x3f
   3ddb4:	bgt	3ddc0 <__assert_fail@plt+0x2b6d4>
   3ddb8:	mov	r3, #64	; 0x40
   3ddbc:	b	3ddc4 <__assert_fail@plt+0x2b6d8>
   3ddc0:	mov	r3, #0
   3ddc4:	str	r3, [fp, #-12]
   3ddc8:	ldr	r3, [fp, #-12]
   3ddcc:	cmp	r3, #0
   3ddd0:	beq	3de08 <__assert_fail@plt+0x2b71c>
   3ddd4:	ldr	r2, [fp, #-12]
   3ddd8:	ldr	r3, [fp, #4]
   3dddc:	sdiv	r3, r2, r3
   3dde0:	str	r3, [fp, #-16]
   3dde4:	ldr	r3, [fp, #-12]
   3dde8:	ldr	r2, [fp, #4]
   3ddec:	sdiv	r2, r3, r2
   3ddf0:	ldr	r1, [fp, #4]
   3ddf4:	mul	r2, r1, r2
   3ddf8:	sub	r3, r3, r2
   3ddfc:	ldr	r2, [fp, #-12]
   3de00:	sub	r3, r2, r3
   3de04:	str	r3, [fp, #-20]	; 0xffffffec
   3de08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3de0c:	cmp	r3, #0
   3de10:	bne	3de20 <__assert_fail@plt+0x2b734>
   3de14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3de18:	mov	r2, #0
   3de1c:	str	r2, [r3]
   3de20:	ldr	r2, [fp, #-16]
   3de24:	ldr	r3, [fp, #-8]
   3de28:	sub	r3, r2, r3
   3de2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3de30:	cmp	r2, r3
   3de34:	ble	3ded4 <__assert_fail@plt+0x2b7e8>
   3de38:	mov	r1, #0
   3de3c:	ldr	r2, [fp, #-8]
   3de40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3de44:	adds	r3, r2, r3
   3de48:	bvc	3de50 <__assert_fail@plt+0x2b764>
   3de4c:	mov	r1, #1
   3de50:	str	r3, [fp, #-16]
   3de54:	mov	r3, r1
   3de58:	and	r3, r3, #1
   3de5c:	uxtb	r3, r3
   3de60:	cmp	r3, #0
   3de64:	bne	3ded0 <__assert_fail@plt+0x2b7e4>
   3de68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3de6c:	cmp	r3, #0
   3de70:	blt	3de84 <__assert_fail@plt+0x2b798>
   3de74:	ldr	r3, [fp, #-16]
   3de78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3de7c:	cmp	r2, r3
   3de80:	blt	3ded0 <__assert_fail@plt+0x2b7e4>
   3de84:	ldr	r2, [fp, #-16]
   3de88:	mov	lr, #0
   3de8c:	ldr	r3, [fp, #4]
   3de90:	smull	r2, r3, r2, r3
   3de94:	mov	r0, #0
   3de98:	mov	r1, #0
   3de9c:	mov	r0, r3
   3dea0:	asr	r1, r3, #31
   3dea4:	asr	ip, r2, #31
   3dea8:	cmp	ip, r0
   3deac:	beq	3deb4 <__assert_fail@plt+0x2b7c8>
   3deb0:	mov	lr, #1
   3deb4:	mov	r3, r2
   3deb8:	str	r3, [fp, #-20]	; 0xffffffec
   3debc:	mov	r3, lr
   3dec0:	and	r3, r3, #1
   3dec4:	uxtb	r3, r3
   3dec8:	cmp	r3, #0
   3decc:	beq	3ded4 <__assert_fail@plt+0x2b7e8>
   3ded0:	bl	3e160 <__assert_fail@plt+0x2ba74>
   3ded4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ded8:	mov	r1, r3
   3dedc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dee0:	bl	3d9a0 <__assert_fail@plt+0x2b2b4>
   3dee4:	str	r0, [fp, #-24]	; 0xffffffe8
   3dee8:	ldr	r2, [fp, #-16]
   3deec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3def0:	str	r2, [r3]
   3def4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3def8:	mov	r0, r3
   3defc:	sub	sp, fp, #4
   3df00:	ldr	fp, [sp]
   3df04:	add	sp, sp, #4
   3df08:	pop	{pc}		; (ldr pc, [sp], #4)
   3df0c:	str	fp, [sp, #-8]!
   3df10:	str	lr, [sp, #4]
   3df14:	add	fp, sp, #4
   3df18:	sub	sp, sp, #8
   3df1c:	str	r0, [fp, #-8]
   3df20:	mov	r1, #1
   3df24:	ldr	r0, [fp, #-8]
   3df28:	bl	3df7c <__assert_fail@plt+0x2b890>
   3df2c:	mov	r3, r0
   3df30:	mov	r0, r3
   3df34:	sub	sp, fp, #4
   3df38:	ldr	fp, [sp]
   3df3c:	add	sp, sp, #4
   3df40:	pop	{pc}		; (ldr pc, [sp], #4)
   3df44:	str	fp, [sp, #-8]!
   3df48:	str	lr, [sp, #4]
   3df4c:	add	fp, sp, #4
   3df50:	sub	sp, sp, #8
   3df54:	str	r0, [fp, #-8]
   3df58:	mov	r1, #1
   3df5c:	ldr	r0, [fp, #-8]
   3df60:	bl	3dfc4 <__assert_fail@plt+0x2b8d8>
   3df64:	mov	r3, r0
   3df68:	mov	r0, r3
   3df6c:	sub	sp, fp, #4
   3df70:	ldr	fp, [sp]
   3df74:	add	sp, sp, #4
   3df78:	pop	{pc}		; (ldr pc, [sp], #4)
   3df7c:	str	fp, [sp, #-8]!
   3df80:	str	lr, [sp, #4]
   3df84:	add	fp, sp, #4
   3df88:	sub	sp, sp, #8
   3df8c:	str	r0, [fp, #-8]
   3df90:	str	r1, [fp, #-12]
   3df94:	ldr	r1, [fp, #-12]
   3df98:	ldr	r0, [fp, #-8]
   3df9c:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   3dfa0:	mov	r3, r0
   3dfa4:	mov	r0, r3
   3dfa8:	bl	3d8b0 <__assert_fail@plt+0x2b1c4>
   3dfac:	mov	r3, r0
   3dfb0:	mov	r0, r3
   3dfb4:	sub	sp, fp, #4
   3dfb8:	ldr	fp, [sp]
   3dfbc:	add	sp, sp, #4
   3dfc0:	pop	{pc}		; (ldr pc, [sp], #4)
   3dfc4:	str	fp, [sp, #-8]!
   3dfc8:	str	lr, [sp, #4]
   3dfcc:	add	fp, sp, #4
   3dfd0:	sub	sp, sp, #8
   3dfd4:	str	r0, [fp, #-8]
   3dfd8:	str	r1, [fp, #-12]
   3dfdc:	ldr	r1, [fp, #-12]
   3dfe0:	ldr	r0, [fp, #-8]
   3dfe4:	bl	612ac <__assert_fail@plt+0x4ebc0>
   3dfe8:	mov	r3, r0
   3dfec:	mov	r0, r3
   3dff0:	bl	3d8b0 <__assert_fail@plt+0x2b1c4>
   3dff4:	mov	r3, r0
   3dff8:	mov	r0, r3
   3dffc:	sub	sp, fp, #4
   3e000:	ldr	fp, [sp]
   3e004:	add	sp, sp, #4
   3e008:	pop	{pc}		; (ldr pc, [sp], #4)
   3e00c:	str	fp, [sp, #-8]!
   3e010:	str	lr, [sp, #4]
   3e014:	add	fp, sp, #4
   3e018:	sub	sp, sp, #8
   3e01c:	str	r0, [fp, #-8]
   3e020:	str	r1, [fp, #-12]
   3e024:	ldr	r0, [fp, #-12]
   3e028:	bl	3d8ec <__assert_fail@plt+0x2b200>
   3e02c:	mov	r3, r0
   3e030:	ldr	r2, [fp, #-12]
   3e034:	ldr	r1, [fp, #-8]
   3e038:	mov	r0, r3
   3e03c:	bl	120f8 <memcpy@plt>
   3e040:	mov	r3, r0
   3e044:	mov	r0, r3
   3e048:	sub	sp, fp, #4
   3e04c:	ldr	fp, [sp]
   3e050:	add	sp, sp, #4
   3e054:	pop	{pc}		; (ldr pc, [sp], #4)
   3e058:	str	fp, [sp, #-8]!
   3e05c:	str	lr, [sp, #4]
   3e060:	add	fp, sp, #4
   3e064:	sub	sp, sp, #8
   3e068:	str	r0, [fp, #-8]
   3e06c:	str	r1, [fp, #-12]
   3e070:	ldr	r0, [fp, #-12]
   3e074:	bl	3d92c <__assert_fail@plt+0x2b240>
   3e078:	mov	r3, r0
   3e07c:	mov	r0, r3
   3e080:	ldr	r3, [fp, #-12]
   3e084:	mov	r2, r3
   3e088:	ldr	r1, [fp, #-8]
   3e08c:	bl	120f8 <memcpy@plt>
   3e090:	mov	r3, r0
   3e094:	mov	r0, r3
   3e098:	sub	sp, fp, #4
   3e09c:	ldr	fp, [sp]
   3e0a0:	add	sp, sp, #4
   3e0a4:	pop	{pc}		; (ldr pc, [sp], #4)
   3e0a8:	str	fp, [sp, #-8]!
   3e0ac:	str	lr, [sp, #4]
   3e0b0:	add	fp, sp, #4
   3e0b4:	sub	sp, sp, #16
   3e0b8:	str	r0, [fp, #-16]
   3e0bc:	str	r1, [fp, #-20]	; 0xffffffec
   3e0c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e0c4:	add	r3, r3, #1
   3e0c8:	mov	r0, r3
   3e0cc:	bl	3d92c <__assert_fail@plt+0x2b240>
   3e0d0:	mov	r3, r0
   3e0d4:	str	r3, [fp, #-8]
   3e0d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e0dc:	ldr	r2, [fp, #-8]
   3e0e0:	add	r3, r2, r3
   3e0e4:	mov	r2, #0
   3e0e8:	strb	r2, [r3]
   3e0ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e0f0:	mov	r2, r3
   3e0f4:	ldr	r1, [fp, #-16]
   3e0f8:	ldr	r0, [fp, #-8]
   3e0fc:	bl	120f8 <memcpy@plt>
   3e100:	mov	r3, r0
   3e104:	mov	r0, r3
   3e108:	sub	sp, fp, #4
   3e10c:	ldr	fp, [sp]
   3e110:	add	sp, sp, #4
   3e114:	pop	{pc}		; (ldr pc, [sp], #4)
   3e118:	str	fp, [sp, #-8]!
   3e11c:	str	lr, [sp, #4]
   3e120:	add	fp, sp, #4
   3e124:	sub	sp, sp, #8
   3e128:	str	r0, [fp, #-8]
   3e12c:	ldr	r0, [fp, #-8]
   3e130:	bl	123bc <strlen@plt>
   3e134:	mov	r3, r0
   3e138:	add	r3, r3, #1
   3e13c:	mov	r1, r3
   3e140:	ldr	r0, [fp, #-8]
   3e144:	bl	3e00c <__assert_fail@plt+0x2b920>
   3e148:	mov	r3, r0
   3e14c:	mov	r0, r3
   3e150:	sub	sp, fp, #4
   3e154:	ldr	fp, [sp]
   3e158:	add	sp, sp, #4
   3e15c:	pop	{pc}		; (ldr pc, [sp], #4)
   3e160:	strd	r4, [sp, #-16]!
   3e164:	str	fp, [sp, #8]
   3e168:	str	lr, [sp, #12]
   3e16c:	add	fp, sp, #12
   3e170:	movw	r3, #50892	; 0xc6cc
   3e174:	movt	r3, #7
   3e178:	ldr	r4, [r3]
   3e17c:	movw	r0, #46760	; 0xb6a8
   3e180:	movt	r0, #6
   3e184:	bl	12398 <gettext@plt>
   3e188:	mov	r3, r0
   3e18c:	movw	r2, #46780	; 0xb6bc
   3e190:	movt	r2, #6
   3e194:	mov	r1, #0
   3e198:	mov	r0, r4
   3e19c:	bl	122b4 <error@plt>
   3e1a0:	bl	12698 <abort@plt>
   3e1a4:	str	fp, [sp, #-8]!
   3e1a8:	str	lr, [sp, #4]
   3e1ac:	add	fp, sp, #4
   3e1b0:	sub	sp, sp, #40	; 0x28
   3e1b4:	str	r0, [fp, #-32]	; 0xffffffe0
   3e1b8:	str	r1, [fp, #-36]	; 0xffffffdc
   3e1bc:	str	r2, [fp, #-40]	; 0xffffffd8
   3e1c0:	str	r3, [fp, #-44]	; 0xffffffd4
   3e1c4:	mov	r3, #1
   3e1c8:	strb	r3, [fp, #-5]
   3e1cc:	bl	12404 <__errno_location@plt>
   3e1d0:	mov	r2, r0
   3e1d4:	mov	r3, #0
   3e1d8:	str	r3, [r2]
   3e1dc:	sub	r2, fp, #24
   3e1e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3e1e4:	mov	r1, r2
   3e1e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3e1ec:	blx	r3
   3e1f0:	vstr	d0, [fp, #-20]	; 0xffffffec
   3e1f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e1f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3e1fc:	cmp	r2, r3
   3e200:	beq	3e220 <__assert_fail@plt+0x2bb34>
   3e204:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e208:	cmp	r3, #0
   3e20c:	bne	3e22c <__assert_fail@plt+0x2bb40>
   3e210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e214:	ldrb	r3, [r3]
   3e218:	cmp	r3, #0
   3e21c:	beq	3e22c <__assert_fail@plt+0x2bb40>
   3e220:	mov	r3, #0
   3e224:	strb	r3, [fp, #-5]
   3e228:	b	3e258 <__assert_fail@plt+0x2bb6c>
   3e22c:	vldr	d7, [fp, #-20]	; 0xffffffec
   3e230:	vcmp.f64	d7, #0.0
   3e234:	vmrs	APSR_nzcv, fpscr
   3e238:	beq	3e258 <__assert_fail@plt+0x2bb6c>
   3e23c:	bl	12404 <__errno_location@plt>
   3e240:	mov	r3, r0
   3e244:	ldr	r3, [r3]
   3e248:	cmp	r3, #34	; 0x22
   3e24c:	bne	3e258 <__assert_fail@plt+0x2bb6c>
   3e250:	mov	r3, #0
   3e254:	strb	r3, [fp, #-5]
   3e258:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e25c:	cmp	r3, #0
   3e260:	beq	3e270 <__assert_fail@plt+0x2bb84>
   3e264:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e268:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e26c:	str	r2, [r3]
   3e270:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3e274:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3e278:	strd	r2, [r1]
   3e27c:	ldrb	r3, [fp, #-5]
   3e280:	mov	r0, r3
   3e284:	sub	sp, fp, #4
   3e288:	ldr	fp, [sp]
   3e28c:	add	sp, sp, #4
   3e290:	pop	{pc}		; (ldr pc, [sp], #4)
   3e294:	push	{fp}		; (str fp, [sp, #-4]!)
   3e298:	add	fp, sp, #0
   3e29c:	sub	sp, sp, #12
   3e2a0:	str	r0, [fp, #-8]
   3e2a4:	str	r1, [fp, #-12]
   3e2a8:	ldr	r3, [fp, #-8]
   3e2ac:	ldr	r2, [r3]
   3e2b0:	ldr	r3, [fp, #-12]
   3e2b4:	mov	r1, #0
   3e2b8:	umull	r2, r3, r3, r2
   3e2bc:	cmp	r3, #0
   3e2c0:	beq	3e2c8 <__assert_fail@plt+0x2bbdc>
   3e2c4:	mov	r1, #1
   3e2c8:	mov	r3, r1
   3e2cc:	cmp	r3, #0
   3e2d0:	beq	3e2e8 <__assert_fail@plt+0x2bbfc>
   3e2d4:	ldr	r3, [fp, #-8]
   3e2d8:	mvn	r2, #0
   3e2dc:	str	r2, [r3]
   3e2e0:	mov	r3, #1
   3e2e4:	b	3e304 <__assert_fail@plt+0x2bc18>
   3e2e8:	ldr	r3, [fp, #-8]
   3e2ec:	ldr	r3, [r3]
   3e2f0:	ldr	r2, [fp, #-12]
   3e2f4:	mul	r2, r2, r3
   3e2f8:	ldr	r3, [fp, #-8]
   3e2fc:	str	r2, [r3]
   3e300:	mov	r3, #0
   3e304:	mov	r0, r3
   3e308:	add	sp, fp, #0
   3e30c:	pop	{fp}		; (ldr fp, [sp], #4)
   3e310:	bx	lr
   3e314:	str	fp, [sp, #-8]!
   3e318:	str	lr, [sp, #4]
   3e31c:	add	fp, sp, #4
   3e320:	sub	sp, sp, #24
   3e324:	str	r0, [fp, #-16]
   3e328:	str	r1, [fp, #-20]	; 0xffffffec
   3e32c:	str	r2, [fp, #-24]	; 0xffffffe8
   3e330:	mov	r3, #0
   3e334:	str	r3, [fp, #-8]
   3e338:	b	3e358 <__assert_fail@plt+0x2bc6c>
   3e33c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e340:	ldr	r0, [fp, #-16]
   3e344:	bl	3e294 <__assert_fail@plt+0x2bba8>
   3e348:	mov	r2, r0
   3e34c:	ldr	r3, [fp, #-8]
   3e350:	orr	r3, r3, r2
   3e354:	str	r3, [fp, #-8]
   3e358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e35c:	sub	r2, r3, #1
   3e360:	str	r2, [fp, #-24]	; 0xffffffe8
   3e364:	cmp	r3, #0
   3e368:	bne	3e33c <__assert_fail@plt+0x2bc50>
   3e36c:	ldr	r3, [fp, #-8]
   3e370:	mov	r0, r3
   3e374:	sub	sp, fp, #4
   3e378:	ldr	fp, [sp]
   3e37c:	add	sp, sp, #4
   3e380:	pop	{pc}		; (ldr pc, [sp], #4)
   3e384:	str	fp, [sp, #-8]!
   3e388:	str	lr, [sp, #4]
   3e38c:	add	fp, sp, #4
   3e390:	sub	sp, sp, #56	; 0x38
   3e394:	str	r0, [fp, #-48]	; 0xffffffd0
   3e398:	str	r1, [fp, #-52]	; 0xffffffcc
   3e39c:	str	r2, [fp, #-56]	; 0xffffffc8
   3e3a0:	str	r3, [fp, #-60]	; 0xffffffc4
   3e3a4:	mov	r3, #0
   3e3a8:	str	r3, [fp, #-8]
   3e3ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3e3b0:	cmp	r3, #0
   3e3b4:	blt	3e3c4 <__assert_fail@plt+0x2bcd8>
   3e3b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3e3bc:	cmp	r3, #36	; 0x24
   3e3c0:	ble	3e3e4 <__assert_fail@plt+0x2bcf8>
   3e3c4:	movw	r3, #46836	; 0xb6f4
   3e3c8:	movt	r3, #6
   3e3cc:	mov	r2, #84	; 0x54
   3e3d0:	movw	r1, #46784	; 0xb6c0
   3e3d4:	movt	r1, #6
   3e3d8:	movw	r0, #46796	; 0xb6cc
   3e3dc:	movt	r0, #6
   3e3e0:	bl	126ec <__assert_fail@plt>
   3e3e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e3e8:	cmp	r3, #0
   3e3ec:	bne	3e3f8 <__assert_fail@plt+0x2bd0c>
   3e3f0:	sub	r3, fp, #36	; 0x24
   3e3f4:	b	3e3fc <__assert_fail@plt+0x2bd10>
   3e3f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3e3fc:	str	r3, [fp, #-32]	; 0xffffffe0
   3e400:	bl	12404 <__errno_location@plt>
   3e404:	mov	r2, r0
   3e408:	mov	r3, #0
   3e40c:	str	r3, [r2]
   3e410:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3e414:	str	r3, [fp, #-12]
   3e418:	ldr	r3, [fp, #-12]
   3e41c:	ldrb	r3, [r3]
   3e420:	strb	r3, [fp, #-13]
   3e424:	b	3e440 <__assert_fail@plt+0x2bd54>
   3e428:	ldr	r3, [fp, #-12]
   3e42c:	add	r3, r3, #1
   3e430:	str	r3, [fp, #-12]
   3e434:	ldr	r3, [fp, #-12]
   3e438:	ldrb	r3, [r3]
   3e43c:	strb	r3, [fp, #-13]
   3e440:	bl	12368 <__ctype_b_loc@plt>
   3e444:	mov	r3, r0
   3e448:	ldr	r2, [r3]
   3e44c:	ldrb	r3, [fp, #-13]
   3e450:	lsl	r3, r3, #1
   3e454:	add	r3, r2, r3
   3e458:	ldrh	r3, [r3]
   3e45c:	and	r3, r3, #8192	; 0x2000
   3e460:	cmp	r3, #0
   3e464:	bne	3e428 <__assert_fail@plt+0x2bd3c>
   3e468:	ldrb	r3, [fp, #-13]
   3e46c:	cmp	r3, #45	; 0x2d
   3e470:	bne	3e47c <__assert_fail@plt+0x2bd90>
   3e474:	mov	r3, #4
   3e478:	b	3e9bc <__assert_fail@plt+0x2c2d0>
   3e47c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3e480:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3e484:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3e488:	bl	123b0 <strtoul@plt>
   3e48c:	mov	r3, r0
   3e490:	str	r3, [fp, #-40]	; 0xffffffd8
   3e494:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e498:	ldr	r3, [r3]
   3e49c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3e4a0:	cmp	r2, r3
   3e4a4:	bne	3e500 <__assert_fail@plt+0x2be14>
   3e4a8:	ldr	r3, [fp, #4]
   3e4ac:	cmp	r3, #0
   3e4b0:	beq	3e4f8 <__assert_fail@plt+0x2be0c>
   3e4b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e4b8:	ldr	r3, [r3]
   3e4bc:	ldrb	r3, [r3]
   3e4c0:	cmp	r3, #0
   3e4c4:	beq	3e4f8 <__assert_fail@plt+0x2be0c>
   3e4c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e4cc:	ldr	r3, [r3]
   3e4d0:	ldrb	r3, [r3]
   3e4d4:	mov	r1, r3
   3e4d8:	ldr	r0, [fp, #4]
   3e4dc:	bl	123c8 <strchr@plt>
   3e4e0:	mov	r3, r0
   3e4e4:	cmp	r3, #0
   3e4e8:	beq	3e4f8 <__assert_fail@plt+0x2be0c>
   3e4ec:	mov	r3, #1
   3e4f0:	str	r3, [fp, #-40]	; 0xffffffd8
   3e4f4:	b	3e538 <__assert_fail@plt+0x2be4c>
   3e4f8:	mov	r3, #4
   3e4fc:	b	3e9bc <__assert_fail@plt+0x2c2d0>
   3e500:	bl	12404 <__errno_location@plt>
   3e504:	mov	r3, r0
   3e508:	ldr	r3, [r3]
   3e50c:	cmp	r3, #0
   3e510:	beq	3e538 <__assert_fail@plt+0x2be4c>
   3e514:	bl	12404 <__errno_location@plt>
   3e518:	mov	r3, r0
   3e51c:	ldr	r3, [r3]
   3e520:	cmp	r3, #34	; 0x22
   3e524:	beq	3e530 <__assert_fail@plt+0x2be44>
   3e528:	mov	r3, #4
   3e52c:	b	3e9bc <__assert_fail@plt+0x2c2d0>
   3e530:	mov	r3, #1
   3e534:	str	r3, [fp, #-8]
   3e538:	ldr	r3, [fp, #4]
   3e53c:	cmp	r3, #0
   3e540:	bne	3e558 <__assert_fail@plt+0x2be6c>
   3e544:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e548:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e54c:	str	r2, [r3]
   3e550:	ldr	r3, [fp, #-8]
   3e554:	b	3e9bc <__assert_fail@plt+0x2c2d0>
   3e558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e55c:	ldr	r3, [r3]
   3e560:	ldrb	r3, [r3]
   3e564:	cmp	r3, #0
   3e568:	beq	3e9ac <__assert_fail@plt+0x2c2c0>
   3e56c:	mov	r3, #1024	; 0x400
   3e570:	str	r3, [fp, #-20]	; 0xffffffec
   3e574:	mov	r3, #1
   3e578:	str	r3, [fp, #-24]	; 0xffffffe8
   3e57c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e580:	ldr	r3, [r3]
   3e584:	ldrb	r3, [r3]
   3e588:	mov	r1, r3
   3e58c:	ldr	r0, [fp, #4]
   3e590:	bl	123c8 <strchr@plt>
   3e594:	mov	r3, r0
   3e598:	cmp	r3, #0
   3e59c:	bne	3e5b8 <__assert_fail@plt+0x2becc>
   3e5a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e5a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e5a8:	str	r2, [r3]
   3e5ac:	ldr	r3, [fp, #-8]
   3e5b0:	orr	r3, r3, #2
   3e5b4:	b	3e9bc <__assert_fail@plt+0x2c2d0>
   3e5b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e5bc:	ldr	r3, [r3]
   3e5c0:	ldrb	r3, [r3]
   3e5c4:	sub	r3, r3, #69	; 0x45
   3e5c8:	cmp	r3, #47	; 0x2f
   3e5cc:	ldrls	pc, [pc, r3, lsl #2]
   3e5d0:	b	3e724 <__assert_fail@plt+0x2c038>
   3e5d4:	muleq	r3, r4, r6
   3e5d8:	andeq	lr, r3, r4, lsr #14
   3e5dc:	muleq	r3, r4, r6
   3e5e0:	andeq	lr, r3, r4, lsr #14
   3e5e4:	andeq	lr, r3, r4, lsr #14
   3e5e8:	andeq	lr, r3, r4, lsr #14
   3e5ec:	muleq	r3, r4, r6
   3e5f0:	andeq	lr, r3, r4, lsr #14
   3e5f4:	muleq	r3, r4, r6
   3e5f8:	andeq	lr, r3, r4, lsr #14
   3e5fc:	andeq	lr, r3, r4, lsr #14
   3e600:	muleq	r3, r4, r6
   3e604:	andeq	lr, r3, r4, lsr #14
   3e608:	andeq	lr, r3, r4, lsr #14
   3e60c:	andeq	lr, r3, r4, lsr #14
   3e610:	muleq	r3, r4, r6
   3e614:	andeq	lr, r3, r4, lsr #14
   3e618:	andeq	lr, r3, r4, lsr #14
   3e61c:	andeq	lr, r3, r4, lsr #14
   3e620:	andeq	lr, r3, r4, lsr #14
   3e624:	muleq	r3, r4, r6
   3e628:	muleq	r3, r4, r6
   3e62c:	andeq	lr, r3, r4, lsr #14
   3e630:	andeq	lr, r3, r4, lsr #14
   3e634:	andeq	lr, r3, r4, lsr #14
   3e638:	andeq	lr, r3, r4, lsr #14
   3e63c:	andeq	lr, r3, r4, lsr #14
   3e640:	andeq	lr, r3, r4, lsr #14
   3e644:	andeq	lr, r3, r4, lsr #14
   3e648:	andeq	lr, r3, r4, lsr #14
   3e64c:	andeq	lr, r3, r4, lsr #14
   3e650:	andeq	lr, r3, r4, lsr #14
   3e654:	andeq	lr, r3, r4, lsr #14
   3e658:	andeq	lr, r3, r4, lsr #14
   3e65c:	muleq	r3, r4, r6
   3e660:	andeq	lr, r3, r4, lsr #14
   3e664:	andeq	lr, r3, r4, lsr #14
   3e668:	andeq	lr, r3, r4, lsr #14
   3e66c:	muleq	r3, r4, r6
   3e670:	andeq	lr, r3, r4, lsr #14
   3e674:	muleq	r3, r4, r6
   3e678:	andeq	lr, r3, r4, lsr #14
   3e67c:	andeq	lr, r3, r4, lsr #14
   3e680:	andeq	lr, r3, r4, lsr #14
   3e684:	andeq	lr, r3, r4, lsr #14
   3e688:	andeq	lr, r3, r4, lsr #14
   3e68c:	andeq	lr, r3, r4, lsr #14
   3e690:	muleq	r3, r4, r6
   3e694:	mov	r1, #48	; 0x30
   3e698:	ldr	r0, [fp, #4]
   3e69c:	bl	123c8 <strchr@plt>
   3e6a0:	mov	r3, r0
   3e6a4:	cmp	r3, #0
   3e6a8:	beq	3e718 <__assert_fail@plt+0x2c02c>
   3e6ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e6b0:	ldr	r3, [r3]
   3e6b4:	add	r3, r3, #1
   3e6b8:	ldrb	r3, [r3]
   3e6bc:	cmp	r3, #68	; 0x44
   3e6c0:	beq	3e700 <__assert_fail@plt+0x2c014>
   3e6c4:	cmp	r3, #105	; 0x69
   3e6c8:	beq	3e6d8 <__assert_fail@plt+0x2bfec>
   3e6cc:	cmp	r3, #66	; 0x42
   3e6d0:	beq	3e700 <__assert_fail@plt+0x2c014>
   3e6d4:	b	3e724 <__assert_fail@plt+0x2c038>
   3e6d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e6dc:	ldr	r3, [r3]
   3e6e0:	add	r3, r3, #2
   3e6e4:	ldrb	r3, [r3]
   3e6e8:	cmp	r3, #66	; 0x42
   3e6ec:	bne	3e720 <__assert_fail@plt+0x2c034>
   3e6f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e6f4:	add	r3, r3, #2
   3e6f8:	str	r3, [fp, #-24]	; 0xffffffe8
   3e6fc:	b	3e720 <__assert_fail@plt+0x2c034>
   3e700:	mov	r3, #1000	; 0x3e8
   3e704:	str	r3, [fp, #-20]	; 0xffffffec
   3e708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e70c:	add	r3, r3, #1
   3e710:	str	r3, [fp, #-24]	; 0xffffffe8
   3e714:	b	3e724 <__assert_fail@plt+0x2c038>
   3e718:	nop	{0}
   3e71c:	b	3e724 <__assert_fail@plt+0x2c038>
   3e720:	nop	{0}
   3e724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e728:	ldr	r3, [r3]
   3e72c:	ldrb	r3, [r3]
   3e730:	sub	r3, r3, #66	; 0x42
   3e734:	cmp	r3, #53	; 0x35
   3e738:	ldrls	pc, [pc, r3, lsl #2]
   3e73c:	b	3e94c <__assert_fail@plt+0x2c260>
   3e740:	andeq	lr, r3, r0, lsr r8
   3e744:	andeq	lr, r3, ip, asr #18
   3e748:	andeq	lr, r3, ip, asr #18
   3e74c:	andeq	lr, r3, r4, asr r8
   3e750:	andeq	lr, r3, ip, asr #18
   3e754:	andeq	lr, r3, r0, ror r8
   3e758:	andeq	lr, r3, ip, asr #18
   3e75c:	andeq	lr, r3, ip, asr #18
   3e760:	andeq	lr, r3, ip, asr #18
   3e764:	andeq	lr, r3, ip, lsl #17
   3e768:	andeq	lr, r3, ip, asr #18
   3e76c:	andeq	lr, r3, r8, lsr #17
   3e770:	andeq	lr, r3, ip, asr #18
   3e774:	andeq	lr, r3, ip, asr #18
   3e778:	andeq	lr, r3, r4, asr #17
   3e77c:	andeq	lr, r3, ip, asr #18
   3e780:	andeq	lr, r3, ip, asr #18
   3e784:	andeq	lr, r3, ip, asr #18
   3e788:	andeq	lr, r3, r0, ror #17
   3e78c:	andeq	lr, r3, ip, asr #18
   3e790:	andeq	lr, r3, ip, asr #18
   3e794:	andeq	lr, r3, ip, asr #18
   3e798:	andeq	lr, r3, ip, asr #18
   3e79c:	andeq	lr, r3, r4, lsl r9
   3e7a0:	andeq	lr, r3, r0, lsr r9
   3e7a4:	andeq	lr, r3, ip, asr #18
   3e7a8:	andeq	lr, r3, ip, asr #18
   3e7ac:	andeq	lr, r3, ip, asr #18
   3e7b0:	andeq	lr, r3, ip, asr #18
   3e7b4:	andeq	lr, r3, ip, asr #18
   3e7b8:	andeq	lr, r3, ip, asr #18
   3e7bc:	andeq	lr, r3, ip, asr #18
   3e7c0:	andeq	lr, r3, r8, lsl r8
   3e7c4:	andeq	lr, r3, r8, asr #16
   3e7c8:	andeq	lr, r3, ip, asr #18
   3e7cc:	andeq	lr, r3, ip, asr #18
   3e7d0:	andeq	lr, r3, ip, asr #18
   3e7d4:	andeq	lr, r3, r0, ror r8
   3e7d8:	andeq	lr, r3, ip, asr #18
   3e7dc:	andeq	lr, r3, ip, asr #18
   3e7e0:	andeq	lr, r3, ip, asr #18
   3e7e4:	andeq	lr, r3, ip, lsl #17
   3e7e8:	andeq	lr, r3, ip, asr #18
   3e7ec:	andeq	lr, r3, r8, lsr #17
   3e7f0:	andeq	lr, r3, ip, asr #18
   3e7f4:	andeq	lr, r3, ip, asr #18
   3e7f8:	andeq	lr, r3, ip, asr #18
   3e7fc:	andeq	lr, r3, ip, asr #18
   3e800:	andeq	lr, r3, ip, asr #18
   3e804:	andeq	lr, r3, ip, asr #18
   3e808:	andeq	lr, r3, r0, ror #17
   3e80c:	andeq	lr, r3, ip, asr #18
   3e810:	andeq	lr, r3, ip, asr #18
   3e814:	strdeq	lr, [r3], -ip
   3e818:	sub	r3, fp, #40	; 0x28
   3e81c:	mov	r1, #512	; 0x200
   3e820:	mov	r0, r3
   3e824:	bl	3e294 <__assert_fail@plt+0x2bba8>
   3e828:	str	r0, [fp, #-28]	; 0xffffffe4
   3e82c:	b	3e964 <__assert_fail@plt+0x2c278>
   3e830:	sub	r3, fp, #40	; 0x28
   3e834:	mov	r1, #1024	; 0x400
   3e838:	mov	r0, r3
   3e83c:	bl	3e294 <__assert_fail@plt+0x2bba8>
   3e840:	str	r0, [fp, #-28]	; 0xffffffe4
   3e844:	b	3e964 <__assert_fail@plt+0x2c278>
   3e848:	mov	r3, #0
   3e84c:	str	r3, [fp, #-28]	; 0xffffffe4
   3e850:	b	3e964 <__assert_fail@plt+0x2c278>
   3e854:	sub	r3, fp, #40	; 0x28
   3e858:	mov	r2, #6
   3e85c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e860:	mov	r0, r3
   3e864:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e868:	str	r0, [fp, #-28]	; 0xffffffe4
   3e86c:	b	3e964 <__assert_fail@plt+0x2c278>
   3e870:	sub	r3, fp, #40	; 0x28
   3e874:	mov	r2, #3
   3e878:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e87c:	mov	r0, r3
   3e880:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e884:	str	r0, [fp, #-28]	; 0xffffffe4
   3e888:	b	3e964 <__assert_fail@plt+0x2c278>
   3e88c:	sub	r3, fp, #40	; 0x28
   3e890:	mov	r2, #1
   3e894:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e898:	mov	r0, r3
   3e89c:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e8a0:	str	r0, [fp, #-28]	; 0xffffffe4
   3e8a4:	b	3e964 <__assert_fail@plt+0x2c278>
   3e8a8:	sub	r3, fp, #40	; 0x28
   3e8ac:	mov	r2, #2
   3e8b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e8b4:	mov	r0, r3
   3e8b8:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e8bc:	str	r0, [fp, #-28]	; 0xffffffe4
   3e8c0:	b	3e964 <__assert_fail@plt+0x2c278>
   3e8c4:	sub	r3, fp, #40	; 0x28
   3e8c8:	mov	r2, #5
   3e8cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e8d0:	mov	r0, r3
   3e8d4:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e8d8:	str	r0, [fp, #-28]	; 0xffffffe4
   3e8dc:	b	3e964 <__assert_fail@plt+0x2c278>
   3e8e0:	sub	r3, fp, #40	; 0x28
   3e8e4:	mov	r2, #4
   3e8e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e8ec:	mov	r0, r3
   3e8f0:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e8f4:	str	r0, [fp, #-28]	; 0xffffffe4
   3e8f8:	b	3e964 <__assert_fail@plt+0x2c278>
   3e8fc:	sub	r3, fp, #40	; 0x28
   3e900:	mov	r1, #2
   3e904:	mov	r0, r3
   3e908:	bl	3e294 <__assert_fail@plt+0x2bba8>
   3e90c:	str	r0, [fp, #-28]	; 0xffffffe4
   3e910:	b	3e964 <__assert_fail@plt+0x2c278>
   3e914:	sub	r3, fp, #40	; 0x28
   3e918:	mov	r2, #8
   3e91c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e920:	mov	r0, r3
   3e924:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e928:	str	r0, [fp, #-28]	; 0xffffffe4
   3e92c:	b	3e964 <__assert_fail@plt+0x2c278>
   3e930:	sub	r3, fp, #40	; 0x28
   3e934:	mov	r2, #7
   3e938:	ldr	r1, [fp, #-20]	; 0xffffffec
   3e93c:	mov	r0, r3
   3e940:	bl	3e314 <__assert_fail@plt+0x2bc28>
   3e944:	str	r0, [fp, #-28]	; 0xffffffe4
   3e948:	b	3e964 <__assert_fail@plt+0x2c278>
   3e94c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e950:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e954:	str	r2, [r3]
   3e958:	ldr	r3, [fp, #-8]
   3e95c:	orr	r3, r3, #2
   3e960:	b	3e9bc <__assert_fail@plt+0x2c2d0>
   3e964:	ldr	r2, [fp, #-8]
   3e968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e96c:	orr	r3, r2, r3
   3e970:	str	r3, [fp, #-8]
   3e974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e978:	ldr	r2, [r3]
   3e97c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e980:	add	r2, r2, r3
   3e984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e988:	str	r2, [r3]
   3e98c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e990:	ldr	r3, [r3]
   3e994:	ldrb	r3, [r3]
   3e998:	cmp	r3, #0
   3e99c:	beq	3e9ac <__assert_fail@plt+0x2c2c0>
   3e9a0:	ldr	r3, [fp, #-8]
   3e9a4:	orr	r3, r3, #2
   3e9a8:	str	r3, [fp, #-8]
   3e9ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e9b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3e9b4:	str	r2, [r3]
   3e9b8:	ldr	r3, [fp, #-8]
   3e9bc:	mov	r0, r3
   3e9c0:	sub	sp, fp, #4
   3e9c4:	ldr	fp, [sp]
   3e9c8:	add	sp, sp, #4
   3e9cc:	pop	{pc}		; (ldr pc, [sp], #4)
   3e9d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   3e9d4:	strd	r6, [sp, #8]
   3e9d8:	strd	r8, [sp, #16]
   3e9dc:	str	fp, [sp, #24]
   3e9e0:	str	lr, [sp, #28]
   3e9e4:	add	fp, sp, #28
   3e9e8:	sub	sp, sp, #32
   3e9ec:	str	r0, [fp, #-32]	; 0xffffffe0
   3e9f0:	str	r1, [fp, #-36]	; 0xffffffdc
   3e9f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e9f8:	ldrd	r6, [r3]
   3e9fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ea00:	mov	r4, r3
   3ea04:	asr	r5, r4, #31
   3ea08:	mov	r2, #0
   3ea0c:	mov	r3, #0
   3ea10:	strd	r2, [fp, #-52]	; 0xffffffcc
   3ea14:	mov	r0, #0
   3ea18:	mov	r1, #0
   3ea1c:	mov	r0, r7
   3ea20:	mov	r1, #0
   3ea24:	mov	r2, #0
   3ea28:	mov	r3, #0
   3ea2c:	mov	r2, r5
   3ea30:	mov	r3, #0
   3ea34:	cmp	r0, #0
   3ea38:	bne	3ea5c <__assert_fail@plt+0x2c370>
   3ea3c:	cmp	r2, #0
   3ea40:	bne	3ea50 <__assert_fail@plt+0x2c364>
   3ea44:	umull	r2, r3, r6, r4
   3ea48:	strd	r2, [fp, #-44]	; 0xffffffd4
   3ea4c:	b	3eb28 <__assert_fail@plt+0x2c43c>
   3ea50:	mov	r3, r2
   3ea54:	mov	r2, r6
   3ea58:	b	3ea6c <__assert_fail@plt+0x2c380>
   3ea5c:	cmp	r2, #0
   3ea60:	bne	3eae4 <__assert_fail@plt+0x2c3f8>
   3ea64:	mov	r3, r0
   3ea68:	mov	r2, r4
   3ea6c:	umull	r8, r9, r6, r4
   3ea70:	umull	r2, r3, r2, r3
   3ea74:	mov	r0, r2
   3ea78:	mov	r1, r3
   3ea7c:	mov	r2, #0
   3ea80:	mov	r3, #0
   3ea84:	mov	r2, r9
   3ea88:	mov	r3, #0
   3ea8c:	adds	ip, r0, r2
   3ea90:	str	ip, [fp, #-60]	; 0xffffffc4
   3ea94:	adc	r3, r1, r3
   3ea98:	str	r3, [fp, #-56]	; 0xffffffc8
   3ea9c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   3eaa0:	mov	r2, #0
   3eaa4:	mov	r3, #0
   3eaa8:	mov	r2, r1
   3eaac:	asr	r3, r1, #31
   3eab0:	cmp	r2, #0
   3eab4:	bne	3eb00 <__assert_fail@plt+0x2c414>
   3eab8:	mov	r2, #0
   3eabc:	mov	r3, #0
   3eac0:	mov	r3, r0
   3eac4:	mov	r2, #0
   3eac8:	mov	r0, r8
   3eacc:	mov	r1, #0
   3ead0:	orr	ip, r2, r0
   3ead4:	str	ip, [fp, #-44]	; 0xffffffd4
   3ead8:	orr	r3, r3, r1
   3eadc:	str	r3, [fp, #-40]	; 0xffffffd8
   3eae0:	b	3eb28 <__assert_fail@plt+0x2c43c>
   3eae4:	mul	r2, r4, r7
   3eae8:	mul	r3, r6, r5
   3eaec:	add	r1, r2, r3
   3eaf0:	umull	r2, r3, r6, r4
   3eaf4:	add	r1, r1, r3
   3eaf8:	mov	r3, r1
   3eafc:	strd	r2, [fp, #-44]	; 0xffffffd4
   3eb00:	mul	r2, r4, r7
   3eb04:	mul	r3, r6, r5
   3eb08:	add	r1, r2, r3
   3eb0c:	umull	r2, r3, r6, r4
   3eb10:	add	r1, r1, r3
   3eb14:	mov	r3, r1
   3eb18:	strd	r2, [fp, #-44]	; 0xffffffd4
   3eb1c:	mov	r2, #1
   3eb20:	mov	r3, #0
   3eb24:	strd	r2, [fp, #-52]	; 0xffffffcc
   3eb28:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   3eb2c:	orrs	r3, r2, r3
   3eb30:	beq	3eb4c <__assert_fail@plt+0x2c460>
   3eb34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3eb38:	mvn	r2, #0
   3eb3c:	mvn	r3, #0
   3eb40:	strd	r2, [r1]
   3eb44:	mov	r3, #1
   3eb48:	b	3eb84 <__assert_fail@plt+0x2c498>
   3eb4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3eb50:	ldrd	r0, [r3]
   3eb54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3eb58:	mov	r2, r3
   3eb5c:	asr	r3, r2, #31
   3eb60:	mul	lr, r2, r1
   3eb64:	mul	ip, r0, r3
   3eb68:	add	ip, lr, ip
   3eb6c:	umull	r2, r3, r0, r2
   3eb70:	add	r1, ip, r3
   3eb74:	mov	r3, r1
   3eb78:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3eb7c:	strd	r2, [r1]
   3eb80:	mov	r3, #0
   3eb84:	mov	r0, r3
   3eb88:	sub	sp, fp, #28
   3eb8c:	ldrd	r4, [sp]
   3eb90:	ldrd	r6, [sp, #8]
   3eb94:	ldrd	r8, [sp, #16]
   3eb98:	ldr	fp, [sp, #24]
   3eb9c:	add	sp, sp, #28
   3eba0:	pop	{pc}		; (ldr pc, [sp], #4)
   3eba4:	str	fp, [sp, #-8]!
   3eba8:	str	lr, [sp, #4]
   3ebac:	add	fp, sp, #4
   3ebb0:	sub	sp, sp, #24
   3ebb4:	str	r0, [fp, #-16]
   3ebb8:	str	r1, [fp, #-20]	; 0xffffffec
   3ebbc:	str	r2, [fp, #-24]	; 0xffffffe8
   3ebc0:	mov	r3, #0
   3ebc4:	str	r3, [fp, #-8]
   3ebc8:	b	3ebe8 <__assert_fail@plt+0x2c4fc>
   3ebcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ebd0:	ldr	r0, [fp, #-16]
   3ebd4:	bl	3e9d0 <__assert_fail@plt+0x2c2e4>
   3ebd8:	mov	r2, r0
   3ebdc:	ldr	r3, [fp, #-8]
   3ebe0:	orr	r3, r3, r2
   3ebe4:	str	r3, [fp, #-8]
   3ebe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ebec:	sub	r2, r3, #1
   3ebf0:	str	r2, [fp, #-24]	; 0xffffffe8
   3ebf4:	cmp	r3, #0
   3ebf8:	bne	3ebcc <__assert_fail@plt+0x2c4e0>
   3ebfc:	ldr	r3, [fp, #-8]
   3ec00:	mov	r0, r3
   3ec04:	sub	sp, fp, #4
   3ec08:	ldr	fp, [sp]
   3ec0c:	add	sp, sp, #4
   3ec10:	pop	{pc}		; (ldr pc, [sp], #4)
   3ec14:	str	fp, [sp, #-8]!
   3ec18:	str	lr, [sp, #4]
   3ec1c:	add	fp, sp, #4
   3ec20:	sub	sp, sp, #56	; 0x38
   3ec24:	str	r0, [fp, #-48]	; 0xffffffd0
   3ec28:	str	r1, [fp, #-52]	; 0xffffffcc
   3ec2c:	str	r2, [fp, #-56]	; 0xffffffc8
   3ec30:	str	r3, [fp, #-60]	; 0xffffffc4
   3ec34:	mov	r3, #0
   3ec38:	str	r3, [fp, #-8]
   3ec3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3ec40:	cmp	r3, #0
   3ec44:	blt	3ec54 <__assert_fail@plt+0x2c568>
   3ec48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3ec4c:	cmp	r3, #36	; 0x24
   3ec50:	ble	3ec74 <__assert_fail@plt+0x2c588>
   3ec54:	movw	r3, #46900	; 0xb734
   3ec58:	movt	r3, #6
   3ec5c:	mov	r2, #84	; 0x54
   3ec60:	movw	r1, #46848	; 0xb700
   3ec64:	movt	r1, #6
   3ec68:	movw	r0, #46860	; 0xb70c
   3ec6c:	movt	r0, #6
   3ec70:	bl	126ec <__assert_fail@plt>
   3ec74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3ec78:	cmp	r3, #0
   3ec7c:	bne	3ec88 <__assert_fail@plt+0x2c59c>
   3ec80:	sub	r3, fp, #36	; 0x24
   3ec84:	b	3ec8c <__assert_fail@plt+0x2c5a0>
   3ec88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3ec8c:	str	r3, [fp, #-32]	; 0xffffffe0
   3ec90:	bl	12404 <__errno_location@plt>
   3ec94:	mov	r2, r0
   3ec98:	mov	r3, #0
   3ec9c:	str	r3, [r2]
   3eca0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3eca4:	str	r3, [fp, #-12]
   3eca8:	ldr	r3, [fp, #-12]
   3ecac:	ldrb	r3, [r3]
   3ecb0:	strb	r3, [fp, #-13]
   3ecb4:	b	3ecd0 <__assert_fail@plt+0x2c5e4>
   3ecb8:	ldr	r3, [fp, #-12]
   3ecbc:	add	r3, r3, #1
   3ecc0:	str	r3, [fp, #-12]
   3ecc4:	ldr	r3, [fp, #-12]
   3ecc8:	ldrb	r3, [r3]
   3eccc:	strb	r3, [fp, #-13]
   3ecd0:	bl	12368 <__ctype_b_loc@plt>
   3ecd4:	mov	r3, r0
   3ecd8:	ldr	r2, [r3]
   3ecdc:	ldrb	r3, [fp, #-13]
   3ece0:	lsl	r3, r3, #1
   3ece4:	add	r3, r2, r3
   3ece8:	ldrh	r3, [r3]
   3ecec:	and	r3, r3, #8192	; 0x2000
   3ecf0:	cmp	r3, #0
   3ecf4:	bne	3ecb8 <__assert_fail@plt+0x2c5cc>
   3ecf8:	ldrb	r3, [fp, #-13]
   3ecfc:	cmp	r3, #45	; 0x2d
   3ed00:	bne	3ed0c <__assert_fail@plt+0x2c620>
   3ed04:	mov	r3, #4
   3ed08:	b	3f254 <__assert_fail@plt+0x2cb68>
   3ed0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3ed10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ed14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3ed18:	bl	124a0 <strtoumax@plt>
   3ed1c:	mov	r2, r0
   3ed20:	mov	r3, r1
   3ed24:	strd	r2, [fp, #-44]	; 0xffffffd4
   3ed28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ed2c:	ldr	r3, [r3]
   3ed30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3ed34:	cmp	r2, r3
   3ed38:	bne	3ed98 <__assert_fail@plt+0x2c6ac>
   3ed3c:	ldr	r3, [fp, #4]
   3ed40:	cmp	r3, #0
   3ed44:	beq	3ed90 <__assert_fail@plt+0x2c6a4>
   3ed48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ed4c:	ldr	r3, [r3]
   3ed50:	ldrb	r3, [r3]
   3ed54:	cmp	r3, #0
   3ed58:	beq	3ed90 <__assert_fail@plt+0x2c6a4>
   3ed5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ed60:	ldr	r3, [r3]
   3ed64:	ldrb	r3, [r3]
   3ed68:	mov	r1, r3
   3ed6c:	ldr	r0, [fp, #4]
   3ed70:	bl	123c8 <strchr@plt>
   3ed74:	mov	r3, r0
   3ed78:	cmp	r3, #0
   3ed7c:	beq	3ed90 <__assert_fail@plt+0x2c6a4>
   3ed80:	mov	r2, #1
   3ed84:	mov	r3, #0
   3ed88:	strd	r2, [fp, #-44]	; 0xffffffd4
   3ed8c:	b	3edd0 <__assert_fail@plt+0x2c6e4>
   3ed90:	mov	r3, #4
   3ed94:	b	3f254 <__assert_fail@plt+0x2cb68>
   3ed98:	bl	12404 <__errno_location@plt>
   3ed9c:	mov	r3, r0
   3eda0:	ldr	r3, [r3]
   3eda4:	cmp	r3, #0
   3eda8:	beq	3edd0 <__assert_fail@plt+0x2c6e4>
   3edac:	bl	12404 <__errno_location@plt>
   3edb0:	mov	r3, r0
   3edb4:	ldr	r3, [r3]
   3edb8:	cmp	r3, #34	; 0x22
   3edbc:	beq	3edc8 <__assert_fail@plt+0x2c6dc>
   3edc0:	mov	r3, #4
   3edc4:	b	3f254 <__assert_fail@plt+0x2cb68>
   3edc8:	mov	r3, #1
   3edcc:	str	r3, [fp, #-8]
   3edd0:	ldr	r3, [fp, #4]
   3edd4:	cmp	r3, #0
   3edd8:	bne	3edf0 <__assert_fail@plt+0x2c704>
   3eddc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3ede0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3ede4:	strd	r2, [r1]
   3ede8:	ldr	r3, [fp, #-8]
   3edec:	b	3f254 <__assert_fail@plt+0x2cb68>
   3edf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3edf4:	ldr	r3, [r3]
   3edf8:	ldrb	r3, [r3]
   3edfc:	cmp	r3, #0
   3ee00:	beq	3f244 <__assert_fail@plt+0x2cb58>
   3ee04:	mov	r3, #1024	; 0x400
   3ee08:	str	r3, [fp, #-20]	; 0xffffffec
   3ee0c:	mov	r3, #1
   3ee10:	str	r3, [fp, #-24]	; 0xffffffe8
   3ee14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ee18:	ldr	r3, [r3]
   3ee1c:	ldrb	r3, [r3]
   3ee20:	mov	r1, r3
   3ee24:	ldr	r0, [fp, #4]
   3ee28:	bl	123c8 <strchr@plt>
   3ee2c:	mov	r3, r0
   3ee30:	cmp	r3, #0
   3ee34:	bne	3ee50 <__assert_fail@plt+0x2c764>
   3ee38:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3ee3c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3ee40:	strd	r2, [r1]
   3ee44:	ldr	r3, [fp, #-8]
   3ee48:	orr	r3, r3, #2
   3ee4c:	b	3f254 <__assert_fail@plt+0x2cb68>
   3ee50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ee54:	ldr	r3, [r3]
   3ee58:	ldrb	r3, [r3]
   3ee5c:	sub	r3, r3, #69	; 0x45
   3ee60:	cmp	r3, #47	; 0x2f
   3ee64:	ldrls	pc, [pc, r3, lsl #2]
   3ee68:	b	3efbc <__assert_fail@plt+0x2c8d0>
   3ee6c:	andeq	lr, r3, ip, lsr #30
   3ee70:			; <UNDEFINED> instruction: 0x0003efbc
   3ee74:	andeq	lr, r3, ip, lsr #30
   3ee78:			; <UNDEFINED> instruction: 0x0003efbc
   3ee7c:			; <UNDEFINED> instruction: 0x0003efbc
   3ee80:			; <UNDEFINED> instruction: 0x0003efbc
   3ee84:	andeq	lr, r3, ip, lsr #30
   3ee88:			; <UNDEFINED> instruction: 0x0003efbc
   3ee8c:	andeq	lr, r3, ip, lsr #30
   3ee90:			; <UNDEFINED> instruction: 0x0003efbc
   3ee94:			; <UNDEFINED> instruction: 0x0003efbc
   3ee98:	andeq	lr, r3, ip, lsr #30
   3ee9c:			; <UNDEFINED> instruction: 0x0003efbc
   3eea0:			; <UNDEFINED> instruction: 0x0003efbc
   3eea4:			; <UNDEFINED> instruction: 0x0003efbc
   3eea8:	andeq	lr, r3, ip, lsr #30
   3eeac:			; <UNDEFINED> instruction: 0x0003efbc
   3eeb0:			; <UNDEFINED> instruction: 0x0003efbc
   3eeb4:			; <UNDEFINED> instruction: 0x0003efbc
   3eeb8:			; <UNDEFINED> instruction: 0x0003efbc
   3eebc:	andeq	lr, r3, ip, lsr #30
   3eec0:	andeq	lr, r3, ip, lsr #30
   3eec4:			; <UNDEFINED> instruction: 0x0003efbc
   3eec8:			; <UNDEFINED> instruction: 0x0003efbc
   3eecc:			; <UNDEFINED> instruction: 0x0003efbc
   3eed0:			; <UNDEFINED> instruction: 0x0003efbc
   3eed4:			; <UNDEFINED> instruction: 0x0003efbc
   3eed8:			; <UNDEFINED> instruction: 0x0003efbc
   3eedc:			; <UNDEFINED> instruction: 0x0003efbc
   3eee0:			; <UNDEFINED> instruction: 0x0003efbc
   3eee4:			; <UNDEFINED> instruction: 0x0003efbc
   3eee8:			; <UNDEFINED> instruction: 0x0003efbc
   3eeec:			; <UNDEFINED> instruction: 0x0003efbc
   3eef0:			; <UNDEFINED> instruction: 0x0003efbc
   3eef4:	andeq	lr, r3, ip, lsr #30
   3eef8:			; <UNDEFINED> instruction: 0x0003efbc
   3eefc:			; <UNDEFINED> instruction: 0x0003efbc
   3ef00:			; <UNDEFINED> instruction: 0x0003efbc
   3ef04:	andeq	lr, r3, ip, lsr #30
   3ef08:			; <UNDEFINED> instruction: 0x0003efbc
   3ef0c:	andeq	lr, r3, ip, lsr #30
   3ef10:			; <UNDEFINED> instruction: 0x0003efbc
   3ef14:			; <UNDEFINED> instruction: 0x0003efbc
   3ef18:			; <UNDEFINED> instruction: 0x0003efbc
   3ef1c:			; <UNDEFINED> instruction: 0x0003efbc
   3ef20:			; <UNDEFINED> instruction: 0x0003efbc
   3ef24:			; <UNDEFINED> instruction: 0x0003efbc
   3ef28:	andeq	lr, r3, ip, lsr #30
   3ef2c:	mov	r1, #48	; 0x30
   3ef30:	ldr	r0, [fp, #4]
   3ef34:	bl	123c8 <strchr@plt>
   3ef38:	mov	r3, r0
   3ef3c:	cmp	r3, #0
   3ef40:	beq	3efb0 <__assert_fail@plt+0x2c8c4>
   3ef44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ef48:	ldr	r3, [r3]
   3ef4c:	add	r3, r3, #1
   3ef50:	ldrb	r3, [r3]
   3ef54:	cmp	r3, #68	; 0x44
   3ef58:	beq	3ef98 <__assert_fail@plt+0x2c8ac>
   3ef5c:	cmp	r3, #105	; 0x69
   3ef60:	beq	3ef70 <__assert_fail@plt+0x2c884>
   3ef64:	cmp	r3, #66	; 0x42
   3ef68:	beq	3ef98 <__assert_fail@plt+0x2c8ac>
   3ef6c:	b	3efbc <__assert_fail@plt+0x2c8d0>
   3ef70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ef74:	ldr	r3, [r3]
   3ef78:	add	r3, r3, #2
   3ef7c:	ldrb	r3, [r3]
   3ef80:	cmp	r3, #66	; 0x42
   3ef84:	bne	3efb8 <__assert_fail@plt+0x2c8cc>
   3ef88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ef8c:	add	r3, r3, #2
   3ef90:	str	r3, [fp, #-24]	; 0xffffffe8
   3ef94:	b	3efb8 <__assert_fail@plt+0x2c8cc>
   3ef98:	mov	r3, #1000	; 0x3e8
   3ef9c:	str	r3, [fp, #-20]	; 0xffffffec
   3efa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3efa4:	add	r3, r3, #1
   3efa8:	str	r3, [fp, #-24]	; 0xffffffe8
   3efac:	b	3efbc <__assert_fail@plt+0x2c8d0>
   3efb0:	nop	{0}
   3efb4:	b	3efbc <__assert_fail@plt+0x2c8d0>
   3efb8:	nop	{0}
   3efbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3efc0:	ldr	r3, [r3]
   3efc4:	ldrb	r3, [r3]
   3efc8:	sub	r3, r3, #66	; 0x42
   3efcc:	cmp	r3, #53	; 0x35
   3efd0:	ldrls	pc, [pc, r3, lsl #2]
   3efd4:	b	3f1e4 <__assert_fail@plt+0x2caf8>
   3efd8:	andeq	pc, r3, r8, asr #1
   3efdc:	andeq	pc, r3, r4, ror #3
   3efe0:	andeq	pc, r3, r4, ror #3
   3efe4:	andeq	pc, r3, ip, ror #1
   3efe8:	andeq	pc, r3, r4, ror #3
   3efec:	andeq	pc, r3, r8, lsl #2
   3eff0:	andeq	pc, r3, r4, ror #3
   3eff4:	andeq	pc, r3, r4, ror #3
   3eff8:	andeq	pc, r3, r4, ror #3
   3effc:	andeq	pc, r3, r4, lsr #2
   3f000:	andeq	pc, r3, r4, ror #3
   3f004:	andeq	pc, r3, r0, asr #2
   3f008:	andeq	pc, r3, r4, ror #3
   3f00c:	andeq	pc, r3, r4, ror #3
   3f010:	andeq	pc, r3, ip, asr r1	; <UNPREDICTABLE>
   3f014:	andeq	pc, r3, r4, ror #3
   3f018:	andeq	pc, r3, r4, ror #3
   3f01c:	andeq	pc, r3, r4, ror #3
   3f020:	andeq	pc, r3, r8, ror r1	; <UNPREDICTABLE>
   3f024:	andeq	pc, r3, r4, ror #3
   3f028:	andeq	pc, r3, r4, ror #3
   3f02c:	andeq	pc, r3, r4, ror #3
   3f030:	andeq	pc, r3, r4, ror #3
   3f034:	andeq	pc, r3, ip, lsr #3
   3f038:	andeq	pc, r3, r8, asr #3
   3f03c:	andeq	pc, r3, r4, ror #3
   3f040:	andeq	pc, r3, r4, ror #3
   3f044:	andeq	pc, r3, r4, ror #3
   3f048:	andeq	pc, r3, r4, ror #3
   3f04c:	andeq	pc, r3, r4, ror #3
   3f050:	andeq	pc, r3, r4, ror #3
   3f054:	andeq	pc, r3, r4, ror #3
   3f058:	strheq	pc, [r3], -r0	; <UNPREDICTABLE>
   3f05c:	andeq	pc, r3, r0, ror #1
   3f060:	andeq	pc, r3, r4, ror #3
   3f064:	andeq	pc, r3, r4, ror #3
   3f068:	andeq	pc, r3, r4, ror #3
   3f06c:	andeq	pc, r3, r8, lsl #2
   3f070:	andeq	pc, r3, r4, ror #3
   3f074:	andeq	pc, r3, r4, ror #3
   3f078:	andeq	pc, r3, r4, ror #3
   3f07c:	andeq	pc, r3, r4, lsr #2
   3f080:	andeq	pc, r3, r4, ror #3
   3f084:	andeq	pc, r3, r0, asr #2
   3f088:	andeq	pc, r3, r4, ror #3
   3f08c:	andeq	pc, r3, r4, ror #3
   3f090:	andeq	pc, r3, r4, ror #3
   3f094:	andeq	pc, r3, r4, ror #3
   3f098:	andeq	pc, r3, r4, ror #3
   3f09c:	andeq	pc, r3, r4, ror #3
   3f0a0:	andeq	pc, r3, r8, ror r1	; <UNPREDICTABLE>
   3f0a4:	andeq	pc, r3, r4, ror #3
   3f0a8:	andeq	pc, r3, r4, ror #3
   3f0ac:	muleq	r3, r4, r1
   3f0b0:	sub	r3, fp, #44	; 0x2c
   3f0b4:	mov	r1, #512	; 0x200
   3f0b8:	mov	r0, r3
   3f0bc:	bl	3e9d0 <__assert_fail@plt+0x2c2e4>
   3f0c0:	str	r0, [fp, #-28]	; 0xffffffe4
   3f0c4:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f0c8:	sub	r3, fp, #44	; 0x2c
   3f0cc:	mov	r1, #1024	; 0x400
   3f0d0:	mov	r0, r3
   3f0d4:	bl	3e9d0 <__assert_fail@plt+0x2c2e4>
   3f0d8:	str	r0, [fp, #-28]	; 0xffffffe4
   3f0dc:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f0e0:	mov	r3, #0
   3f0e4:	str	r3, [fp, #-28]	; 0xffffffe4
   3f0e8:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f0ec:	sub	r3, fp, #44	; 0x2c
   3f0f0:	mov	r2, #6
   3f0f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f0f8:	mov	r0, r3
   3f0fc:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f100:	str	r0, [fp, #-28]	; 0xffffffe4
   3f104:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f108:	sub	r3, fp, #44	; 0x2c
   3f10c:	mov	r2, #3
   3f110:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f114:	mov	r0, r3
   3f118:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f11c:	str	r0, [fp, #-28]	; 0xffffffe4
   3f120:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f124:	sub	r3, fp, #44	; 0x2c
   3f128:	mov	r2, #1
   3f12c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f130:	mov	r0, r3
   3f134:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f138:	str	r0, [fp, #-28]	; 0xffffffe4
   3f13c:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f140:	sub	r3, fp, #44	; 0x2c
   3f144:	mov	r2, #2
   3f148:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f14c:	mov	r0, r3
   3f150:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f154:	str	r0, [fp, #-28]	; 0xffffffe4
   3f158:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f15c:	sub	r3, fp, #44	; 0x2c
   3f160:	mov	r2, #5
   3f164:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f168:	mov	r0, r3
   3f16c:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f170:	str	r0, [fp, #-28]	; 0xffffffe4
   3f174:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f178:	sub	r3, fp, #44	; 0x2c
   3f17c:	mov	r2, #4
   3f180:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f184:	mov	r0, r3
   3f188:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f18c:	str	r0, [fp, #-28]	; 0xffffffe4
   3f190:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f194:	sub	r3, fp, #44	; 0x2c
   3f198:	mov	r1, #2
   3f19c:	mov	r0, r3
   3f1a0:	bl	3e9d0 <__assert_fail@plt+0x2c2e4>
   3f1a4:	str	r0, [fp, #-28]	; 0xffffffe4
   3f1a8:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f1ac:	sub	r3, fp, #44	; 0x2c
   3f1b0:	mov	r2, #8
   3f1b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f1b8:	mov	r0, r3
   3f1bc:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f1c0:	str	r0, [fp, #-28]	; 0xffffffe4
   3f1c4:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f1c8:	sub	r3, fp, #44	; 0x2c
   3f1cc:	mov	r2, #7
   3f1d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f1d4:	mov	r0, r3
   3f1d8:	bl	3eba4 <__assert_fail@plt+0x2c4b8>
   3f1dc:	str	r0, [fp, #-28]	; 0xffffffe4
   3f1e0:	b	3f1fc <__assert_fail@plt+0x2cb10>
   3f1e4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3f1e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3f1ec:	strd	r2, [r1]
   3f1f0:	ldr	r3, [fp, #-8]
   3f1f4:	orr	r3, r3, #2
   3f1f8:	b	3f254 <__assert_fail@plt+0x2cb68>
   3f1fc:	ldr	r2, [fp, #-8]
   3f200:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3f204:	orr	r3, r2, r3
   3f208:	str	r3, [fp, #-8]
   3f20c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f210:	ldr	r2, [r3]
   3f214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f218:	add	r2, r2, r3
   3f21c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f220:	str	r2, [r3]
   3f224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f228:	ldr	r3, [r3]
   3f22c:	ldrb	r3, [r3]
   3f230:	cmp	r3, #0
   3f234:	beq	3f244 <__assert_fail@plt+0x2cb58>
   3f238:	ldr	r3, [fp, #-8]
   3f23c:	orr	r3, r3, #2
   3f240:	str	r3, [fp, #-8]
   3f244:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3f248:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3f24c:	strd	r2, [r1]
   3f250:	ldr	r3, [fp, #-8]
   3f254:	mov	r0, r3
   3f258:	sub	sp, fp, #4
   3f25c:	ldr	fp, [sp]
   3f260:	add	sp, sp, #4
   3f264:	pop	{pc}		; (ldr pc, [sp], #4)
   3f268:	str	fp, [sp, #-8]!
   3f26c:	str	lr, [sp, #4]
   3f270:	add	fp, sp, #4
   3f274:	sub	sp, sp, #16
   3f278:	mov	r3, #0
   3f27c:	str	r3, [fp, #-16]
   3f280:	mov	r3, #0
   3f284:	str	r3, [fp, #-20]	; 0xffffffec
   3f288:	movw	r3, #50992	; 0xc730
   3f28c:	movt	r3, #7
   3f290:	ldr	r2, [r3]
   3f294:	sub	r1, fp, #20
   3f298:	sub	r3, fp, #16
   3f29c:	mov	r0, r3
   3f2a0:	bl	12638 <getline@plt>
   3f2a4:	str	r0, [fp, #-12]
   3f2a8:	ldr	r3, [fp, #-12]
   3f2ac:	cmp	r3, #0
   3f2b0:	bgt	3f2c0 <__assert_fail@plt+0x2cbd4>
   3f2b4:	mov	r3, #0
   3f2b8:	strb	r3, [fp, #-5]
   3f2bc:	b	3f314 <__assert_fail@plt+0x2cc28>
   3f2c0:	ldr	r2, [fp, #-16]
   3f2c4:	ldr	r3, [fp, #-12]
   3f2c8:	sub	r3, r3, #1
   3f2cc:	add	r3, r2, r3
   3f2d0:	ldrb	r3, [r3]
   3f2d4:	cmp	r3, #10
   3f2d8:	bne	3f2f4 <__assert_fail@plt+0x2cc08>
   3f2dc:	ldr	r2, [fp, #-16]
   3f2e0:	ldr	r3, [fp, #-12]
   3f2e4:	sub	r3, r3, #1
   3f2e8:	add	r3, r2, r3
   3f2ec:	mov	r2, #0
   3f2f0:	strb	r2, [r3]
   3f2f4:	ldr	r3, [fp, #-16]
   3f2f8:	mov	r0, r3
   3f2fc:	bl	1250c <rpmatch@plt>
   3f300:	mov	r3, r0
   3f304:	cmp	r3, #0
   3f308:	movgt	r3, #1
   3f30c:	movle	r3, #0
   3f310:	strb	r3, [fp, #-5]
   3f314:	ldr	r3, [fp, #-16]
   3f318:	mov	r0, r3
   3f31c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   3f320:	ldrb	r3, [fp, #-5]
   3f324:	mov	r0, r3
   3f328:	sub	sp, fp, #4
   3f32c:	ldr	fp, [sp]
   3f330:	add	sp, sp, #4
   3f334:	pop	{pc}		; (ldr pc, [sp], #4)
   3f338:	str	fp, [sp, #-8]!
   3f33c:	str	lr, [sp, #4]
   3f340:	add	fp, sp, #4
   3f344:	sub	sp, sp, #16
   3f348:	str	r0, [fp, #-16]
   3f34c:	str	r1, [fp, #-20]	; 0xffffffec
   3f350:	ldr	r3, [fp, #-16]
   3f354:	cmp	r3, #0
   3f358:	beq	3f368 <__assert_fail@plt+0x2cc7c>
   3f35c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f360:	cmp	r3, #0
   3f364:	bne	3f378 <__assert_fail@plt+0x2cc8c>
   3f368:	mov	r3, #1
   3f36c:	str	r3, [fp, #-20]	; 0xffffffec
   3f370:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f374:	str	r3, [fp, #-16]
   3f378:	mov	ip, #0
   3f37c:	ldr	r2, [fp, #-16]
   3f380:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f384:	umull	r0, r1, r2, r3
   3f388:	mov	r2, #0
   3f38c:	mov	r3, #0
   3f390:	mov	r2, r1
   3f394:	mov	r3, #0
   3f398:	cmp	r2, #0
   3f39c:	beq	3f3a4 <__assert_fail@plt+0x2ccb8>
   3f3a0:	mov	ip, #1
   3f3a4:	cmp	r0, #0
   3f3a8:	bge	3f3b0 <__assert_fail@plt+0x2ccc4>
   3f3ac:	mov	ip, #1
   3f3b0:	mov	r3, ip
   3f3b4:	and	r3, r3, #1
   3f3b8:	uxtb	r3, r3
   3f3bc:	cmp	r3, #0
   3f3c0:	beq	3f3dc <__assert_fail@plt+0x2ccf0>
   3f3c4:	bl	12404 <__errno_location@plt>
   3f3c8:	mov	r2, r0
   3f3cc:	mov	r3, #12
   3f3d0:	str	r3, [r2]
   3f3d4:	mov	r3, #0
   3f3d8:	b	3f3f4 <__assert_fail@plt+0x2cd08>
   3f3dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f3e0:	ldr	r0, [fp, #-16]
   3f3e4:	bl	11f84 <calloc@plt>
   3f3e8:	mov	r3, r0
   3f3ec:	str	r3, [fp, #-8]
   3f3f0:	ldr	r3, [fp, #-8]
   3f3f4:	mov	r0, r3
   3f3f8:	sub	sp, fp, #4
   3f3fc:	ldr	fp, [sp]
   3f400:	add	sp, sp, #4
   3f404:	pop	{pc}		; (ldr pc, [sp], #4)
   3f408:	push	{fp}		; (str fp, [sp, #-4]!)
   3f40c:	add	fp, sp, #0
   3f410:	sub	sp, sp, #12
   3f414:	str	r0, [fp, #-8]
   3f418:	ldr	r3, [fp, #-8]
   3f41c:	mvn	r2, #99	; 0x63
   3f420:	str	r2, [r3]
   3f424:	nop	{0}
   3f428:	add	sp, fp, #0
   3f42c:	pop	{fp}		; (ldr fp, [sp], #4)
   3f430:	bx	lr
   3f434:	str	fp, [sp, #-8]!
   3f438:	str	lr, [sp, #4]
   3f43c:	add	fp, sp, #4
   3f440:	sub	sp, sp, #8
   3f444:	str	r0, [fp, #-8]
   3f448:	ldr	r3, [fp, #-8]
   3f44c:	ldr	r3, [r3]
   3f450:	mov	r0, r3
   3f454:	bl	125d8 <fchdir@plt>
   3f458:	mov	r3, r0
   3f45c:	mov	r0, r3
   3f460:	sub	sp, fp, #4
   3f464:	ldr	fp, [sp]
   3f468:	add	sp, sp, #4
   3f46c:	pop	{pc}		; (ldr pc, [sp], #4)
   3f470:	str	fp, [sp, #-8]!
   3f474:	str	lr, [sp, #4]
   3f478:	add	fp, sp, #4
   3f47c:	sub	sp, sp, #16
   3f480:	str	r0, [fp, #-16]
   3f484:	ldr	r3, [fp, #-16]
   3f488:	ldr	r3, [r3]
   3f48c:	cmp	r3, #0
   3f490:	blt	3f4ec <__assert_fail@plt+0x2ce00>
   3f494:	ldr	r3, [fp, #-16]
   3f498:	ldr	r3, [r3]
   3f49c:	mov	r0, r3
   3f4a0:	bl	126a4 <close@plt>
   3f4a4:	mov	r3, r0
   3f4a8:	cmp	r3, #0
   3f4ac:	movne	r3, #1
   3f4b0:	moveq	r3, #0
   3f4b4:	strb	r3, [fp, #-5]
   3f4b8:	ldrb	r3, [fp, #-5]
   3f4bc:	eor	r3, r3, #1
   3f4c0:	uxtb	r3, r3
   3f4c4:	cmp	r3, #0
   3f4c8:	bne	3f4ec <__assert_fail@plt+0x2ce00>
   3f4cc:	movw	r3, #47016	; 0xb7a8
   3f4d0:	movt	r3, #6
   3f4d4:	mov	r2, #64	; 0x40
   3f4d8:	movw	r1, #46912	; 0xb740
   3f4dc:	movt	r1, #6
   3f4e0:	movw	r0, #46928	; 0xb750
   3f4e4:	movt	r0, #6
   3f4e8:	bl	126ec <__assert_fail@plt>
   3f4ec:	nop	{0}
   3f4f0:	sub	sp, fp, #4
   3f4f4:	ldr	fp, [sp]
   3f4f8:	add	sp, sp, #4
   3f4fc:	pop	{pc}		; (ldr pc, [sp], #4)
   3f500:	str	fp, [sp, #-8]!
   3f504:	str	lr, [sp, #4]
   3f508:	add	fp, sp, #4
   3f50c:	sub	sp, sp, #16
   3f510:	str	r0, [fp, #-16]
   3f514:	str	r1, [fp, #-20]	; 0xffffffec
   3f518:	ldr	r3, [fp, #-16]
   3f51c:	ldr	r3, [r3]
   3f520:	mov	r2, #18688	; 0x4900
   3f524:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f528:	mov	r0, r3
   3f52c:	bl	123e0 <openat64@plt>
   3f530:	str	r0, [fp, #-8]
   3f534:	ldr	r3, [fp, #-8]
   3f538:	cmp	r3, #0
   3f53c:	bge	3f548 <__assert_fail@plt+0x2ce5c>
   3f540:	mvn	r3, #0
   3f544:	b	3f560 <__assert_fail@plt+0x2ce74>
   3f548:	ldr	r0, [fp, #-16]
   3f54c:	bl	3f470 <__assert_fail@plt+0x2cd84>
   3f550:	ldr	r3, [fp, #-16]
   3f554:	ldr	r2, [fp, #-8]
   3f558:	str	r2, [r3]
   3f55c:	mov	r3, #0
   3f560:	mov	r0, r3
   3f564:	sub	sp, fp, #4
   3f568:	ldr	fp, [sp]
   3f56c:	add	sp, sp, #4
   3f570:	pop	{pc}		; (ldr pc, [sp], #4)
   3f574:	str	fp, [sp, #-8]!
   3f578:	str	lr, [sp, #4]
   3f57c:	add	fp, sp, #4
   3f580:	sub	sp, sp, #16
   3f584:	str	r0, [fp, #-16]
   3f588:	movw	r1, #46944	; 0xb760
   3f58c:	movt	r1, #6
   3f590:	ldr	r0, [fp, #-16]
   3f594:	bl	126e0 <strspn@plt>
   3f598:	str	r0, [fp, #-8]
   3f59c:	ldr	r2, [fp, #-16]
   3f5a0:	ldr	r3, [fp, #-8]
   3f5a4:	add	r3, r2, r3
   3f5a8:	mov	r0, r3
   3f5ac:	sub	sp, fp, #4
   3f5b0:	ldr	fp, [sp]
   3f5b4:	add	sp, sp, #4
   3f5b8:	pop	{pc}		; (ldr pc, [sp], #4)
   3f5bc:	str	fp, [sp, #-8]!
   3f5c0:	str	lr, [sp, #4]
   3f5c4:	add	fp, sp, #4
   3f5c8:	sub	sp, sp, #48	; 0x30
   3f5cc:	str	r0, [fp, #-48]	; 0xffffffd0
   3f5d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f5d4:	bl	121dc <chdir@plt>
   3f5d8:	str	r0, [fp, #-8]
   3f5dc:	ldr	r3, [fp, #-8]
   3f5e0:	cmp	r3, #0
   3f5e4:	beq	3f5fc <__assert_fail@plt+0x2cf10>
   3f5e8:	bl	12404 <__errno_location@plt>
   3f5ec:	mov	r3, r0
   3f5f0:	ldr	r3, [r3]
   3f5f4:	cmp	r3, #36	; 0x24
   3f5f8:	beq	3f604 <__assert_fail@plt+0x2cf18>
   3f5fc:	ldr	r3, [fp, #-8]
   3f600:	b	3f954 <__assert_fail@plt+0x2d268>
   3f604:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f608:	bl	123bc <strlen@plt>
   3f60c:	str	r0, [fp, #-12]
   3f610:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f614:	ldr	r3, [fp, #-12]
   3f618:	add	r3, r2, r3
   3f61c:	str	r3, [fp, #-16]
   3f620:	sub	r3, fp, #44	; 0x2c
   3f624:	mov	r0, r3
   3f628:	bl	3f408 <__assert_fail@plt+0x2cd1c>
   3f62c:	ldr	r3, [fp, #-12]
   3f630:	cmp	r3, #0
   3f634:	bne	3f658 <__assert_fail@plt+0x2cf6c>
   3f638:	movw	r3, #47028	; 0xb7b4
   3f63c:	movt	r3, #6
   3f640:	mov	r2, #126	; 0x7e
   3f644:	movw	r1, #46912	; 0xb740
   3f648:	movt	r1, #6
   3f64c:	movw	r0, #46948	; 0xb764
   3f650:	movt	r0, #6
   3f654:	bl	126ec <__assert_fail@plt>
   3f658:	ldr	r3, [fp, #-12]
   3f65c:	cmp	r3, #4096	; 0x1000
   3f660:	bcs	3f684 <__assert_fail@plt+0x2cf98>
   3f664:	movw	r3, #47028	; 0xb7b4
   3f668:	movt	r3, #6
   3f66c:	mov	r2, #127	; 0x7f
   3f670:	movw	r1, #46912	; 0xb740
   3f674:	movt	r1, #6
   3f678:	movw	r0, #46956	; 0xb76c
   3f67c:	movt	r0, #6
   3f680:	bl	126ec <__assert_fail@plt>
   3f684:	movw	r1, #46944	; 0xb760
   3f688:	movt	r1, #6
   3f68c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f690:	bl	126e0 <strspn@plt>
   3f694:	str	r0, [fp, #-20]	; 0xffffffec
   3f698:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f69c:	cmp	r3, #2
   3f6a0:	bne	3f740 <__assert_fail@plt+0x2d054>
   3f6a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f6a8:	add	r0, r3, #3
   3f6ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f6b0:	add	r3, r3, #3
   3f6b4:	ldr	r2, [fp, #-16]
   3f6b8:	sub	r3, r2, r3
   3f6bc:	mov	r2, r3
   3f6c0:	mov	r1, #47	; 0x2f
   3f6c4:	bl	124ac <memchr@plt>
   3f6c8:	str	r0, [fp, #-24]	; 0xffffffe8
   3f6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f6d0:	cmp	r3, #0
   3f6d4:	bne	3f6f0 <__assert_fail@plt+0x2d004>
   3f6d8:	bl	12404 <__errno_location@plt>
   3f6dc:	mov	r2, r0
   3f6e0:	mov	r3, #36	; 0x24
   3f6e4:	str	r3, [r2]
   3f6e8:	mvn	r3, #0
   3f6ec:	b	3f954 <__assert_fail@plt+0x2d268>
   3f6f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f6f4:	mov	r2, #0
   3f6f8:	strb	r2, [r3]
   3f6fc:	sub	r3, fp, #44	; 0x2c
   3f700:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f704:	mov	r0, r3
   3f708:	bl	3f500 <__assert_fail@plt+0x2ce14>
   3f70c:	str	r0, [fp, #-28]	; 0xffffffe4
   3f710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f714:	mov	r2, #47	; 0x2f
   3f718:	strb	r2, [r3]
   3f71c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3f720:	cmp	r3, #0
   3f724:	bne	3f900 <__assert_fail@plt+0x2d214>
   3f728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f72c:	add	r3, r3, #1
   3f730:	mov	r0, r3
   3f734:	bl	3f574 <__assert_fail@plt+0x2ce88>
   3f738:	str	r0, [fp, #-48]	; 0xffffffd0
   3f73c:	b	3f77c <__assert_fail@plt+0x2d090>
   3f740:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f744:	cmp	r3, #0
   3f748:	beq	3f77c <__assert_fail@plt+0x2d090>
   3f74c:	sub	r3, fp, #44	; 0x2c
   3f750:	movw	r1, #46944	; 0xb760
   3f754:	movt	r1, #6
   3f758:	mov	r0, r3
   3f75c:	bl	3f500 <__assert_fail@plt+0x2ce14>
   3f760:	mov	r3, r0
   3f764:	cmp	r3, #0
   3f768:	bne	3f908 <__assert_fail@plt+0x2d21c>
   3f76c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f770:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f774:	add	r3, r2, r3
   3f778:	str	r3, [fp, #-48]	; 0xffffffd0
   3f77c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f780:	ldrb	r3, [r3]
   3f784:	cmp	r3, #47	; 0x2f
   3f788:	bne	3f7ac <__assert_fail@plt+0x2d0c0>
   3f78c:	movw	r3, #47028	; 0xb7b4
   3f790:	movt	r3, #6
   3f794:	mov	r2, #162	; 0xa2
   3f798:	movw	r1, #46912	; 0xb740
   3f79c:	movt	r1, #6
   3f7a0:	movw	r0, #46968	; 0xb778
   3f7a4:	movt	r0, #6
   3f7a8:	bl	126ec <__assert_fail@plt>
   3f7ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f7b0:	ldr	r3, [fp, #-16]
   3f7b4:	cmp	r2, r3
   3f7b8:	bls	3f894 <__assert_fail@plt+0x2d1a8>
   3f7bc:	movw	r3, #47028	; 0xb7b4
   3f7c0:	movt	r3, #6
   3f7c4:	mov	r2, #163	; 0xa3
   3f7c8:	movw	r1, #46912	; 0xb740
   3f7cc:	movt	r1, #6
   3f7d0:	movw	r0, #46980	; 0xb784
   3f7d4:	movt	r0, #6
   3f7d8:	bl	126ec <__assert_fail@plt>
   3f7dc:	mov	r2, #4096	; 0x1000
   3f7e0:	mov	r1, #47	; 0x2f
   3f7e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3f7e8:	bl	123ec <memrchr@plt>
   3f7ec:	str	r0, [fp, #-32]	; 0xffffffe0
   3f7f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f7f4:	cmp	r3, #0
   3f7f8:	bne	3f814 <__assert_fail@plt+0x2d128>
   3f7fc:	bl	12404 <__errno_location@plt>
   3f800:	mov	r2, r0
   3f804:	mov	r3, #36	; 0x24
   3f808:	str	r3, [r2]
   3f80c:	mvn	r3, #0
   3f810:	b	3f954 <__assert_fail@plt+0x2d268>
   3f814:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f818:	mov	r2, #0
   3f81c:	strb	r2, [r3]
   3f820:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3f824:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f828:	sub	r3, r2, r3
   3f82c:	cmp	r3, #4096	; 0x1000
   3f830:	blt	3f854 <__assert_fail@plt+0x2d168>
   3f834:	movw	r3, #47028	; 0xb7b4
   3f838:	movt	r3, #6
   3f83c:	mov	r2, #179	; 0xb3
   3f840:	movw	r1, #46912	; 0xb740
   3f844:	movt	r1, #6
   3f848:	movw	r0, #46996	; 0xb794
   3f84c:	movt	r0, #6
   3f850:	bl	126ec <__assert_fail@plt>
   3f854:	sub	r3, fp, #44	; 0x2c
   3f858:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f85c:	mov	r0, r3
   3f860:	bl	3f500 <__assert_fail@plt+0x2ce14>
   3f864:	str	r0, [fp, #-36]	; 0xffffffdc
   3f868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f86c:	mov	r2, #47	; 0x2f
   3f870:	strb	r2, [r3]
   3f874:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3f878:	cmp	r3, #0
   3f87c:	bne	3f910 <__assert_fail@plt+0x2d224>
   3f880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f884:	add	r3, r3, #1
   3f888:	mov	r0, r3
   3f88c:	bl	3f574 <__assert_fail@plt+0x2ce88>
   3f890:	str	r0, [fp, #-48]	; 0xffffffd0
   3f894:	ldr	r2, [fp, #-16]
   3f898:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f89c:	sub	r3, r2, r3
   3f8a0:	cmp	r3, #4096	; 0x1000
   3f8a4:	bge	3f7dc <__assert_fail@plt+0x2d0f0>
   3f8a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f8ac:	ldr	r3, [fp, #-16]
   3f8b0:	cmp	r2, r3
   3f8b4:	bcs	3f8d4 <__assert_fail@plt+0x2d1e8>
   3f8b8:	sub	r3, fp, #44	; 0x2c
   3f8bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   3f8c0:	mov	r0, r3
   3f8c4:	bl	3f500 <__assert_fail@plt+0x2ce14>
   3f8c8:	mov	r3, r0
   3f8cc:	cmp	r3, #0
   3f8d0:	bne	3f918 <__assert_fail@plt+0x2d22c>
   3f8d4:	sub	r3, fp, #44	; 0x2c
   3f8d8:	mov	r0, r3
   3f8dc:	bl	3f434 <__assert_fail@plt+0x2cd48>
   3f8e0:	mov	r3, r0
   3f8e4:	cmp	r3, #0
   3f8e8:	bne	3f920 <__assert_fail@plt+0x2d234>
   3f8ec:	sub	r3, fp, #44	; 0x2c
   3f8f0:	mov	r0, r3
   3f8f4:	bl	3f470 <__assert_fail@plt+0x2cd84>
   3f8f8:	mov	r3, #0
   3f8fc:	b	3f954 <__assert_fail@plt+0x2d268>
   3f900:	nop	{0}
   3f904:	b	3f924 <__assert_fail@plt+0x2d238>
   3f908:	nop	{0}
   3f90c:	b	3f924 <__assert_fail@plt+0x2d238>
   3f910:	nop	{0}
   3f914:	b	3f924 <__assert_fail@plt+0x2d238>
   3f918:	nop	{0}
   3f91c:	b	3f924 <__assert_fail@plt+0x2d238>
   3f920:	nop	{0}
   3f924:	bl	12404 <__errno_location@plt>
   3f928:	mov	r3, r0
   3f92c:	ldr	r3, [r3]
   3f930:	str	r3, [fp, #-40]	; 0xffffffd8
   3f934:	sub	r3, fp, #44	; 0x2c
   3f938:	mov	r0, r3
   3f93c:	bl	3f470 <__assert_fail@plt+0x2cd84>
   3f940:	bl	12404 <__errno_location@plt>
   3f944:	mov	r2, r0
   3f948:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f94c:	str	r3, [r2]
   3f950:	mvn	r3, #0
   3f954:	mov	r0, r3
   3f958:	sub	sp, fp, #4
   3f95c:	ldr	fp, [sp]
   3f960:	add	sp, sp, #4
   3f964:	pop	{pc}		; (ldr pc, [sp], #4)
   3f968:	push	{r1, r2, r3}
   3f96c:	str	fp, [sp, #-8]!
   3f970:	str	lr, [sp, #4]
   3f974:	add	fp, sp, #4
   3f978:	sub	sp, sp, #36	; 0x24
   3f97c:	str	r0, [fp, #-36]	; 0xffffffdc
   3f980:	mvn	r3, #0
   3f984:	str	r3, [fp, #-12]
   3f988:	add	r3, fp, #8
   3f98c:	str	r3, [fp, #-32]	; 0xffffffe0
   3f990:	ldr	r3, [fp, #4]
   3f994:	cmp	r3, #0
   3f998:	beq	3f9b0 <__assert_fail@plt+0x2d2c4>
   3f99c:	ldr	r3, [fp, #4]
   3f9a0:	movw	r2, #1030	; 0x406
   3f9a4:	cmp	r3, r2
   3f9a8:	beq	3f9d8 <__assert_fail@plt+0x2d2ec>
   3f9ac:	b	3fa00 <__assert_fail@plt+0x2d314>
   3f9b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f9b4:	add	r2, r3, #4
   3f9b8:	str	r2, [fp, #-32]	; 0xffffffe0
   3f9bc:	ldr	r3, [r3]
   3f9c0:	str	r3, [fp, #-16]
   3f9c4:	ldr	r1, [fp, #-16]
   3f9c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f9cc:	bl	3fbac <__assert_fail@plt+0x2d4c0>
   3f9d0:	str	r0, [fp, #-12]
   3f9d4:	b	3fb8c <__assert_fail@plt+0x2d4a0>
   3f9d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f9dc:	add	r2, r3, #4
   3f9e0:	str	r2, [fp, #-32]	; 0xffffffe0
   3f9e4:	ldr	r3, [r3]
   3f9e8:	str	r3, [fp, #-20]	; 0xffffffec
   3f9ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f9f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3f9f4:	bl	3fbf0 <__assert_fail@plt+0x2d504>
   3f9f8:	str	r0, [fp, #-12]
   3f9fc:	b	3fb8c <__assert_fail@plt+0x2d4a0>
   3fa00:	ldr	r3, [fp, #4]
   3fa04:	cmp	r3, #11
   3fa08:	beq	3fb1c <__assert_fail@plt+0x2d430>
   3fa0c:	ldr	r3, [fp, #4]
   3fa10:	cmp	r3, #11
   3fa14:	bgt	3fa9c <__assert_fail@plt+0x2d3b0>
   3fa18:	ldr	r3, [fp, #4]
   3fa1c:	cmp	r3, #3
   3fa20:	beq	3fb1c <__assert_fail@plt+0x2d430>
   3fa24:	ldr	r3, [fp, #4]
   3fa28:	cmp	r3, #3
   3fa2c:	bgt	3fa58 <__assert_fail@plt+0x2d36c>
   3fa30:	ldr	r3, [fp, #4]
   3fa34:	cmp	r3, #1
   3fa38:	beq	3fb1c <__assert_fail@plt+0x2d430>
   3fa3c:	ldr	r3, [fp, #4]
   3fa40:	cmp	r3, #1
   3fa44:	bgt	3fb30 <__assert_fail@plt+0x2d444>
   3fa48:	ldr	r3, [fp, #4]
   3fa4c:	cmp	r3, #0
   3fa50:	beq	3fb30 <__assert_fail@plt+0x2d444>
   3fa54:	b	3fb5c <__assert_fail@plt+0x2d470>
   3fa58:	ldr	r3, [fp, #4]
   3fa5c:	cmp	r3, #8
   3fa60:	beq	3fb30 <__assert_fail@plt+0x2d444>
   3fa64:	ldr	r3, [fp, #4]
   3fa68:	cmp	r3, #8
   3fa6c:	bgt	3fa80 <__assert_fail@plt+0x2d394>
   3fa70:	ldr	r3, [fp, #4]
   3fa74:	cmp	r3, #4
   3fa78:	beq	3fb30 <__assert_fail@plt+0x2d444>
   3fa7c:	b	3fb5c <__assert_fail@plt+0x2d470>
   3fa80:	ldr	r3, [fp, #4]
   3fa84:	cmp	r3, #9
   3fa88:	beq	3fb1c <__assert_fail@plt+0x2d430>
   3fa8c:	ldr	r3, [fp, #4]
   3fa90:	cmp	r3, #10
   3fa94:	beq	3fb30 <__assert_fail@plt+0x2d444>
   3fa98:	b	3fb5c <__assert_fail@plt+0x2d470>
   3fa9c:	ldr	r3, [fp, #4]
   3faa0:	movw	r2, #1031	; 0x407
   3faa4:	cmp	r3, r2
   3faa8:	bgt	3faec <__assert_fail@plt+0x2d400>
   3faac:	ldr	r3, [fp, #4]
   3fab0:	movw	r2, #1030	; 0x406
   3fab4:	cmp	r3, r2
   3fab8:	bge	3fb30 <__assert_fail@plt+0x2d444>
   3fabc:	ldr	r3, [fp, #4]
   3fac0:	movw	r2, #1025	; 0x401
   3fac4:	cmp	r3, r2
   3fac8:	beq	3fb1c <__assert_fail@plt+0x2d430>
   3facc:	ldr	r3, [fp, #4]
   3fad0:	movw	r2, #1026	; 0x402
   3fad4:	cmp	r3, r2
   3fad8:	beq	3fb30 <__assert_fail@plt+0x2d444>
   3fadc:	ldr	r3, [fp, #4]
   3fae0:	cmp	r3, #1024	; 0x400
   3fae4:	beq	3fb30 <__assert_fail@plt+0x2d444>
   3fae8:	b	3fb5c <__assert_fail@plt+0x2d470>
   3faec:	ldr	r3, [fp, #4]
   3faf0:	movw	r2, #1033	; 0x409
   3faf4:	cmp	r3, r2
   3faf8:	beq	3fb30 <__assert_fail@plt+0x2d444>
   3fafc:	ldr	r3, [fp, #4]
   3fb00:	movw	r2, #1033	; 0x409
   3fb04:	cmp	r3, r2
   3fb08:	blt	3fb1c <__assert_fail@plt+0x2d430>
   3fb0c:	ldr	r3, [fp, #4]
   3fb10:	movw	r2, #1034	; 0x40a
   3fb14:	cmp	r3, r2
   3fb18:	bne	3fb5c <__assert_fail@plt+0x2d470>
   3fb1c:	ldr	r1, [fp, #4]
   3fb20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3fb24:	bl	12500 <fcntl64@plt>
   3fb28:	str	r0, [fp, #-12]
   3fb2c:	b	3fb88 <__assert_fail@plt+0x2d49c>
   3fb30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3fb34:	add	r2, r3, #4
   3fb38:	str	r2, [fp, #-32]	; 0xffffffe0
   3fb3c:	ldr	r3, [r3]
   3fb40:	str	r3, [fp, #-24]	; 0xffffffe8
   3fb44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3fb48:	ldr	r1, [fp, #4]
   3fb4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3fb50:	bl	12500 <fcntl64@plt>
   3fb54:	str	r0, [fp, #-12]
   3fb58:	b	3fb88 <__assert_fail@plt+0x2d49c>
   3fb5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3fb60:	add	r2, r3, #4
   3fb64:	str	r2, [fp, #-32]	; 0xffffffe0
   3fb68:	ldr	r3, [r3]
   3fb6c:	str	r3, [fp, #-28]	; 0xffffffe4
   3fb70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3fb74:	ldr	r1, [fp, #4]
   3fb78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3fb7c:	bl	12500 <fcntl64@plt>
   3fb80:	str	r0, [fp, #-12]
   3fb84:	nop	{0}
   3fb88:	nop	{0}
   3fb8c:	ldr	r3, [fp, #-12]
   3fb90:	mov	r0, r3
   3fb94:	sub	sp, fp, #4
   3fb98:	ldr	fp, [sp]
   3fb9c:	ldr	lr, [sp, #4]
   3fba0:	add	sp, sp, #8
   3fba4:	add	sp, sp, #12
   3fba8:	bx	lr
   3fbac:	str	fp, [sp, #-8]!
   3fbb0:	str	lr, [sp, #4]
   3fbb4:	add	fp, sp, #4
   3fbb8:	sub	sp, sp, #16
   3fbbc:	str	r0, [fp, #-16]
   3fbc0:	str	r1, [fp, #-20]	; 0xffffffec
   3fbc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3fbc8:	mov	r1, #0
   3fbcc:	ldr	r0, [fp, #-16]
   3fbd0:	bl	12500 <fcntl64@plt>
   3fbd4:	str	r0, [fp, #-8]
   3fbd8:	ldr	r3, [fp, #-8]
   3fbdc:	mov	r0, r3
   3fbe0:	sub	sp, fp, #4
   3fbe4:	ldr	fp, [sp]
   3fbe8:	add	sp, sp, #4
   3fbec:	pop	{pc}		; (ldr pc, [sp], #4)
   3fbf0:	str	fp, [sp, #-8]!
   3fbf4:	str	lr, [sp, #4]
   3fbf8:	add	fp, sp, #4
   3fbfc:	sub	sp, sp, #24
   3fc00:	str	r0, [fp, #-24]	; 0xffffffe8
   3fc04:	str	r1, [fp, #-28]	; 0xffffffe4
   3fc08:	movw	r3, #53272	; 0xd018
   3fc0c:	movt	r3, #7
   3fc10:	ldr	r3, [r3]
   3fc14:	cmp	r3, #0
   3fc18:	blt	3fc94 <__assert_fail@plt+0x2d5a8>
   3fc1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3fc20:	movw	r1, #1030	; 0x406
   3fc24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3fc28:	bl	12500 <fcntl64@plt>
   3fc2c:	str	r0, [fp, #-8]
   3fc30:	ldr	r3, [fp, #-8]
   3fc34:	cmp	r3, #0
   3fc38:	bge	3fc50 <__assert_fail@plt+0x2d564>
   3fc3c:	bl	12404 <__errno_location@plt>
   3fc40:	mov	r3, r0
   3fc44:	ldr	r3, [r3]
   3fc48:	cmp	r3, #22
   3fc4c:	beq	3fc64 <__assert_fail@plt+0x2d578>
   3fc50:	movw	r3, #53272	; 0xd018
   3fc54:	movt	r3, #7
   3fc58:	mov	r2, #1
   3fc5c:	str	r2, [r3]
   3fc60:	b	3fca4 <__assert_fail@plt+0x2d5b8>
   3fc64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3fc68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3fc6c:	bl	3fbac <__assert_fail@plt+0x2d4c0>
   3fc70:	str	r0, [fp, #-8]
   3fc74:	ldr	r3, [fp, #-8]
   3fc78:	cmp	r3, #0
   3fc7c:	blt	3fca4 <__assert_fail@plt+0x2d5b8>
   3fc80:	movw	r3, #53272	; 0xd018
   3fc84:	movt	r3, #7
   3fc88:	mvn	r2, #0
   3fc8c:	str	r2, [r3]
   3fc90:	b	3fca4 <__assert_fail@plt+0x2d5b8>
   3fc94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3fc98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3fc9c:	bl	3fbac <__assert_fail@plt+0x2d4c0>
   3fca0:	str	r0, [fp, #-8]
   3fca4:	ldr	r3, [fp, #-8]
   3fca8:	cmp	r3, #0
   3fcac:	blt	3fd34 <__assert_fail@plt+0x2d648>
   3fcb0:	movw	r3, #53272	; 0xd018
   3fcb4:	movt	r3, #7
   3fcb8:	ldr	r3, [r3]
   3fcbc:	cmn	r3, #1
   3fcc0:	bne	3fd34 <__assert_fail@plt+0x2d648>
   3fcc4:	mov	r1, #1
   3fcc8:	ldr	r0, [fp, #-8]
   3fccc:	bl	12500 <fcntl64@plt>
   3fcd0:	str	r0, [fp, #-12]
   3fcd4:	ldr	r3, [fp, #-12]
   3fcd8:	cmp	r3, #0
   3fcdc:	blt	3fd04 <__assert_fail@plt+0x2d618>
   3fce0:	ldr	r3, [fp, #-12]
   3fce4:	orr	r3, r3, #1
   3fce8:	mov	r2, r3
   3fcec:	mov	r1, #2
   3fcf0:	ldr	r0, [fp, #-8]
   3fcf4:	bl	12500 <fcntl64@plt>
   3fcf8:	mov	r3, r0
   3fcfc:	cmn	r3, #1
   3fd00:	bne	3fd34 <__assert_fail@plt+0x2d648>
   3fd04:	bl	12404 <__errno_location@plt>
   3fd08:	mov	r3, r0
   3fd0c:	ldr	r3, [r3]
   3fd10:	str	r3, [fp, #-16]
   3fd14:	ldr	r0, [fp, #-8]
   3fd18:	bl	126a4 <close@plt>
   3fd1c:	bl	12404 <__errno_location@plt>
   3fd20:	mov	r2, r0
   3fd24:	ldr	r3, [fp, #-16]
   3fd28:	str	r3, [r2]
   3fd2c:	mvn	r3, #0
   3fd30:	str	r3, [fp, #-8]
   3fd34:	ldr	r3, [fp, #-8]
   3fd38:	mov	r0, r3
   3fd3c:	sub	sp, fp, #4
   3fd40:	ldr	fp, [sp]
   3fd44:	add	sp, sp, #4
   3fd48:	pop	{pc}		; (ldr pc, [sp], #4)
   3fd4c:	str	fp, [sp, #-8]!
   3fd50:	str	lr, [sp, #4]
   3fd54:	add	fp, sp, #4
   3fd58:	sub	sp, sp, #16
   3fd5c:	str	r0, [fp, #-8]
   3fd60:	ldr	r3, [fp, #-8]
   3fd64:	ldr	r3, [r3]
   3fd68:	and	r3, r3, #256	; 0x100
   3fd6c:	cmp	r3, #0
   3fd70:	beq	3fd8c <__assert_fail@plt+0x2d6a0>
   3fd74:	mov	r3, #1
   3fd78:	str	r3, [sp]
   3fd7c:	mov	r2, #0
   3fd80:	mov	r3, #0
   3fd84:	ldr	r0, [fp, #-8]
   3fd88:	bl	3feb0 <__assert_fail@plt+0x2d7c4>
   3fd8c:	nop	{0}
   3fd90:	sub	sp, fp, #4
   3fd94:	ldr	fp, [sp]
   3fd98:	add	sp, sp, #4
   3fd9c:	pop	{pc}		; (ldr pc, [sp], #4)
   3fda0:	str	fp, [sp, #-8]!
   3fda4:	str	lr, [sp, #4]
   3fda8:	add	fp, sp, #4
   3fdac:	sub	sp, sp, #8
   3fdb0:	str	r0, [fp, #-8]
   3fdb4:	ldr	r3, [fp, #-8]
   3fdb8:	cmp	r3, #0
   3fdbc:	beq	3fdd4 <__assert_fail@plt+0x2d6e8>
   3fdc0:	ldr	r0, [fp, #-8]
   3fdc4:	bl	12338 <__freading@plt>
   3fdc8:	mov	r3, r0
   3fdcc:	cmp	r3, #0
   3fdd0:	bne	3fde4 <__assert_fail@plt+0x2d6f8>
   3fdd4:	ldr	r0, [fp, #-8]
   3fdd8:	bl	1205c <fflush@plt>
   3fddc:	mov	r3, r0
   3fde0:	b	3fdf8 <__assert_fail@plt+0x2d70c>
   3fde4:	ldr	r0, [fp, #-8]
   3fde8:	bl	3fd4c <__assert_fail@plt+0x2d660>
   3fdec:	ldr	r0, [fp, #-8]
   3fdf0:	bl	1205c <fflush@plt>
   3fdf4:	mov	r3, r0
   3fdf8:	mov	r0, r3
   3fdfc:	sub	sp, fp, #4
   3fe00:	ldr	fp, [sp]
   3fe04:	add	sp, sp, #4
   3fe08:	pop	{pc}		; (ldr pc, [sp], #4)
   3fe0c:	str	r4, [sp, #-12]!
   3fe10:	str	fp, [sp, #4]
   3fe14:	str	lr, [sp, #8]
   3fe18:	add	fp, sp, #8
   3fe1c:	sub	sp, sp, #20
   3fe20:	str	r0, [fp, #-24]	; 0xffffffe8
   3fe24:	bl	12404 <__errno_location@plt>
   3fe28:	mov	r3, r0
   3fe2c:	ldr	r3, [r3]
   3fe30:	str	r3, [fp, #-20]	; 0xffffffec
   3fe34:	bl	12404 <__errno_location@plt>
   3fe38:	mov	r3, r0
   3fe3c:	ldr	r3, [r3]
   3fe40:	str	r3, [fp, #-16]
   3fe44:	bl	12404 <__errno_location@plt>
   3fe48:	mov	r2, r0
   3fe4c:	mov	r3, #0
   3fe50:	str	r3, [r2]
   3fe54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3fe58:	bl	12098 <free@plt>
   3fe5c:	bl	12404 <__errno_location@plt>
   3fe60:	mov	r3, r0
   3fe64:	ldr	r3, [r3]
   3fe68:	cmp	r3, #0
   3fe6c:	moveq	r3, #1
   3fe70:	movne	r3, #0
   3fe74:	uxtb	r3, r3
   3fe78:	mov	r4, r3
   3fe7c:	bl	12404 <__errno_location@plt>
   3fe80:	mov	r2, r0
   3fe84:	lsl	r3, r4, #2
   3fe88:	sub	r1, fp, #12
   3fe8c:	add	r3, r1, r3
   3fe90:	ldr	r3, [r3, #-8]
   3fe94:	str	r3, [r2]
   3fe98:	nop	{0}
   3fe9c:	sub	sp, fp, #8
   3fea0:	ldr	r4, [sp]
   3fea4:	ldr	fp, [sp, #4]
   3fea8:	add	sp, sp, #8
   3feac:	pop	{pc}		; (ldr pc, [sp], #4)
   3feb0:	str	fp, [sp, #-8]!
   3feb4:	str	lr, [sp, #4]
   3feb8:	add	fp, sp, #4
   3febc:	sub	sp, sp, #32
   3fec0:	str	r0, [fp, #-16]
   3fec4:	strd	r2, [fp, #-28]	; 0xffffffe4
   3fec8:	ldr	r3, [fp, #-16]
   3fecc:	ldr	r2, [r3, #8]
   3fed0:	ldr	r3, [fp, #-16]
   3fed4:	ldr	r3, [r3, #4]
   3fed8:	cmp	r2, r3
   3fedc:	bne	3ff74 <__assert_fail@plt+0x2d888>
   3fee0:	ldr	r3, [fp, #-16]
   3fee4:	ldr	r2, [r3, #20]
   3fee8:	ldr	r3, [fp, #-16]
   3feec:	ldr	r3, [r3, #16]
   3fef0:	cmp	r2, r3
   3fef4:	bne	3ff74 <__assert_fail@plt+0x2d888>
   3fef8:	ldr	r3, [fp, #-16]
   3fefc:	ldr	r3, [r3, #36]	; 0x24
   3ff00:	cmp	r3, #0
   3ff04:	bne	3ff74 <__assert_fail@plt+0x2d888>
   3ff08:	ldr	r0, [fp, #-16]
   3ff0c:	bl	12488 <fileno@plt>
   3ff10:	mov	r1, r0
   3ff14:	ldr	r3, [fp, #4]
   3ff18:	str	r3, [sp]
   3ff1c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3ff20:	mov	r0, r1
   3ff24:	bl	1223c <lseek64@plt>
   3ff28:	strd	r0, [fp, #-12]
   3ff2c:	ldrd	r2, [fp, #-12]
   3ff30:	mvn	r0, #0
   3ff34:	mvn	r1, #0
   3ff38:	cmp	r3, r1
   3ff3c:	cmpeq	r2, r0
   3ff40:	bne	3ff4c <__assert_fail@plt+0x2d860>
   3ff44:	mvn	r3, #0
   3ff48:	b	3ff8c <__assert_fail@plt+0x2d8a0>
   3ff4c:	ldr	r3, [fp, #-16]
   3ff50:	ldr	r3, [r3]
   3ff54:	bic	r2, r3, #16
   3ff58:	ldr	r3, [fp, #-16]
   3ff5c:	str	r2, [r3]
   3ff60:	ldr	r1, [fp, #-16]
   3ff64:	ldrd	r2, [fp, #-12]
   3ff68:	strd	r2, [r1, #80]	; 0x50
   3ff6c:	mov	r3, #0
   3ff70:	b	3ff8c <__assert_fail@plt+0x2d8a0>
   3ff74:	ldr	r3, [fp, #4]
   3ff78:	str	r3, [sp]
   3ff7c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3ff80:	ldr	r0, [fp, #-16]
   3ff84:	bl	124e8 <fseeko64@plt>
   3ff88:	mov	r3, r0
   3ff8c:	mov	r0, r3
   3ff90:	sub	sp, fp, #4
   3ff94:	ldr	fp, [sp]
   3ff98:	add	sp, sp, #4
   3ff9c:	pop	{pc}		; (ldr pc, [sp], #4)
   3ffa0:	push	{fp}		; (str fp, [sp, #-4]!)
   3ffa4:	add	fp, sp, #0
   3ffa8:	sub	sp, sp, #20
   3ffac:	str	r0, [fp, #-16]
   3ffb0:	str	r1, [fp, #-20]	; 0xffffffec
   3ffb4:	ldr	r3, [fp, #-16]
   3ffb8:	str	r3, [fp, #-8]
   3ffbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ffc0:	str	r3, [fp, #-12]
   3ffc4:	ldr	r3, [fp, #-8]
   3ffc8:	ldrd	r0, [r3, #8]
   3ffcc:	ldr	r3, [fp, #-12]
   3ffd0:	ldrd	r2, [r3, #8]
   3ffd4:	cmp	r1, r3
   3ffd8:	cmpeq	r0, r2
   3ffdc:	bne	40004 <__assert_fail@plt+0x2d918>
   3ffe0:	ldr	r3, [fp, #-8]
   3ffe4:	ldrd	r0, [r3]
   3ffe8:	ldr	r3, [fp, #-12]
   3ffec:	ldrd	r2, [r3]
   3fff0:	cmp	r1, r3
   3fff4:	cmpeq	r0, r2
   3fff8:	bne	40004 <__assert_fail@plt+0x2d918>
   3fffc:	mov	r3, #1
   40000:	b	40008 <__assert_fail@plt+0x2d91c>
   40004:	mov	r3, #0
   40008:	and	r3, r3, #1
   4000c:	uxtb	r3, r3
   40010:	mov	r0, r3
   40014:	add	sp, fp, #0
   40018:	pop	{fp}		; (ldr fp, [sp], #4)
   4001c:	bx	lr
   40020:	str	fp, [sp, #-8]!
   40024:	str	lr, [sp, #4]
   40028:	add	fp, sp, #4
   4002c:	sub	sp, sp, #16
   40030:	str	r0, [fp, #-16]
   40034:	str	r1, [fp, #-20]	; 0xffffffec
   40038:	ldr	r3, [fp, #-16]
   4003c:	str	r3, [fp, #-8]
   40040:	ldr	r3, [fp, #-8]
   40044:	ldrd	r0, [r3, #8]
   40048:	ldr	r3, [fp, #-20]	; 0xffffffec
   4004c:	mov	r2, r3
   40050:	mov	r3, #0
   40054:	bl	64a60 <__assert_fail@plt+0x52374>
   40058:	mov	r3, r2
   4005c:	mov	r0, r3
   40060:	sub	sp, fp, #4
   40064:	ldr	fp, [sp]
   40068:	add	sp, sp, #4
   4006c:	pop	{pc}		; (ldr pc, [sp], #4)
   40070:	str	fp, [sp, #-8]!
   40074:	str	lr, [sp, #4]
   40078:	add	fp, sp, #4
   4007c:	sub	sp, sp, #16
   40080:	str	r0, [fp, #-8]
   40084:	ldr	r3, [fp, #-8]
   40088:	ldr	r2, [r3, #48]	; 0x30
   4008c:	movw	r3, #258	; 0x102
   40090:	and	r3, r3, r2
   40094:	cmp	r3, #0
   40098:	beq	400ec <__assert_fail@plt+0x2da00>
   4009c:	movw	r3, #65036	; 0xfe0c
   400a0:	movt	r3, #3
   400a4:	str	r3, [sp]
   400a8:	movw	r3, #65440	; 0xffa0
   400ac:	movt	r3, #3
   400b0:	movw	r2, #32
   400b4:	movt	r2, #4
   400b8:	mov	r1, #0
   400bc:	mov	r0, #31
   400c0:	bl	2d0b4 <__assert_fail@plt+0x1a9c8>
   400c4:	mov	r3, r0
   400c8:	mov	r2, r3
   400cc:	ldr	r3, [fp, #-8]
   400d0:	str	r2, [r3, #56]	; 0x38
   400d4:	ldr	r3, [fp, #-8]
   400d8:	ldr	r3, [r3, #56]	; 0x38
   400dc:	cmp	r3, #0
   400e0:	bne	4012c <__assert_fail@plt+0x2da40>
   400e4:	mov	r3, #0
   400e8:	b	40130 <__assert_fail@plt+0x2da44>
   400ec:	mov	r0, #32
   400f0:	bl	43510 <__assert_fail@plt+0x30e24>
   400f4:	mov	r3, r0
   400f8:	mov	r2, r3
   400fc:	ldr	r3, [fp, #-8]
   40100:	str	r2, [r3, #56]	; 0x38
   40104:	ldr	r3, [fp, #-8]
   40108:	ldr	r3, [r3, #56]	; 0x38
   4010c:	cmp	r3, #0
   40110:	bne	4011c <__assert_fail@plt+0x2da30>
   40114:	mov	r3, #0
   40118:	b	40130 <__assert_fail@plt+0x2da44>
   4011c:	ldr	r3, [fp, #-8]
   40120:	ldr	r3, [r3, #56]	; 0x38
   40124:	mov	r0, r3
   40128:	bl	60830 <__assert_fail@plt+0x4e144>
   4012c:	mov	r3, #1
   40130:	mov	r0, r3
   40134:	sub	sp, fp, #4
   40138:	ldr	fp, [sp]
   4013c:	add	sp, sp, #4
   40140:	pop	{pc}		; (ldr pc, [sp], #4)
   40144:	str	fp, [sp, #-8]!
   40148:	str	lr, [sp, #4]
   4014c:	add	fp, sp, #4
   40150:	sub	sp, sp, #24
   40154:	str	r0, [fp, #-24]	; 0xffffffe8
   40158:	str	r1, [fp, #-28]	; 0xffffffe4
   4015c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40160:	ldr	r2, [r3, #48]	; 0x30
   40164:	movw	r3, #258	; 0x102
   40168:	and	r3, r3, r2
   4016c:	cmp	r3, #0
   40170:	beq	40234 <__assert_fail@plt+0x2db48>
   40174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40178:	add	r3, r3, #64	; 0x40
   4017c:	str	r3, [fp, #-8]
   40180:	mov	r0, #24
   40184:	bl	43510 <__assert_fail@plt+0x30e24>
   40188:	mov	r3, r0
   4018c:	str	r3, [fp, #-12]
   40190:	ldr	r3, [fp, #-12]
   40194:	cmp	r3, #0
   40198:	bne	401a4 <__assert_fail@plt+0x2dab8>
   4019c:	mov	r3, #0
   401a0:	b	40278 <__assert_fail@plt+0x2db8c>
   401a4:	ldr	r3, [fp, #-8]
   401a8:	ldrd	r2, [r3]
   401ac:	ldr	r1, [fp, #-12]
   401b0:	strd	r2, [r1]
   401b4:	ldr	r3, [fp, #-8]
   401b8:	ldrd	r2, [r3, #96]	; 0x60
   401bc:	ldr	r1, [fp, #-12]
   401c0:	strd	r2, [r1, #8]
   401c4:	ldr	r3, [fp, #-12]
   401c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   401cc:	str	r2, [r3, #16]
   401d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   401d4:	ldr	r3, [r3, #56]	; 0x38
   401d8:	ldr	r1, [fp, #-12]
   401dc:	mov	r0, r3
   401e0:	bl	2de60 <__assert_fail@plt+0x1b774>
   401e4:	str	r0, [fp, #-16]
   401e8:	ldr	r2, [fp, #-16]
   401ec:	ldr	r3, [fp, #-12]
   401f0:	cmp	r2, r3
   401f4:	beq	40274 <__assert_fail@plt+0x2db88>
   401f8:	ldr	r0, [fp, #-12]
   401fc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40200:	ldr	r3, [fp, #-16]
   40204:	cmp	r3, #0
   40208:	bne	40214 <__assert_fail@plt+0x2db28>
   4020c:	mov	r3, #0
   40210:	b	40278 <__assert_fail@plt+0x2db8c>
   40214:	ldr	r3, [fp, #-16]
   40218:	ldr	r2, [r3, #16]
   4021c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40220:	str	r2, [r3]
   40224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40228:	mov	r2, #2
   4022c:	strh	r2, [r3, #56]	; 0x38
   40230:	b	40274 <__assert_fail@plt+0x2db88>
   40234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40238:	ldr	r2, [r3, #56]	; 0x38
   4023c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40240:	add	r3, r3, #64	; 0x40
   40244:	mov	r1, r3
   40248:	mov	r0, r2
   4024c:	bl	60870 <__assert_fail@plt+0x4e184>
   40250:	mov	r3, r0
   40254:	cmp	r3, #0
   40258:	beq	40274 <__assert_fail@plt+0x2db88>
   4025c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40260:	ldr	r2, [fp, #-28]	; 0xffffffe4
   40264:	str	r2, [r3]
   40268:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4026c:	mov	r2, #2
   40270:	strh	r2, [r3, #56]	; 0x38
   40274:	mov	r3, #1
   40278:	mov	r0, r3
   4027c:	sub	sp, fp, #4
   40280:	ldr	fp, [sp]
   40284:	add	sp, sp, #4
   40288:	pop	{pc}		; (ldr pc, [sp], #4)
   4028c:	str	fp, [sp, #-8]!
   40290:	str	lr, [sp, #4]
   40294:	add	fp, sp, #4
   40298:	sub	sp, sp, #48	; 0x30
   4029c:	str	r0, [fp, #-48]	; 0xffffffd0
   402a0:	str	r1, [fp, #-52]	; 0xffffffcc
   402a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   402a8:	add	r3, r3, #64	; 0x40
   402ac:	str	r3, [fp, #-8]
   402b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   402b4:	ldr	r2, [r3, #48]	; 0x30
   402b8:	movw	r3, #258	; 0x102
   402bc:	and	r3, r3, r2
   402c0:	cmp	r3, #0
   402c4:	beq	40318 <__assert_fail@plt+0x2dc2c>
   402c8:	ldr	r3, [fp, #-8]
   402cc:	ldrd	r2, [r3]
   402d0:	strd	r2, [fp, #-44]	; 0xffffffd4
   402d4:	ldr	r3, [fp, #-8]
   402d8:	ldrd	r2, [r3, #96]	; 0x60
   402dc:	strd	r2, [fp, #-36]	; 0xffffffdc
   402e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   402e4:	ldr	r3, [r3, #56]	; 0x38
   402e8:	sub	r2, fp, #44	; 0x2c
   402ec:	mov	r1, r2
   402f0:	mov	r0, r3
   402f4:	bl	2ded0 <__assert_fail@plt+0x1b7e4>
   402f8:	str	r0, [fp, #-12]
   402fc:	ldr	r3, [fp, #-12]
   40300:	cmp	r3, #0
   40304:	bne	4030c <__assert_fail@plt+0x2dc20>
   40308:	bl	12698 <abort@plt>
   4030c:	ldr	r0, [fp, #-12]
   40310:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40314:	b	403c0 <__assert_fail@plt+0x2dcd4>
   40318:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4031c:	ldr	r3, [r3, #4]
   40320:	str	r3, [fp, #-16]
   40324:	ldr	r3, [fp, #-16]
   40328:	cmp	r3, #0
   4032c:	beq	403c0 <__assert_fail@plt+0x2dcd4>
   40330:	ldr	r3, [fp, #-16]
   40334:	ldr	r3, [r3, #48]	; 0x30
   40338:	cmp	r3, #0
   4033c:	blt	403c0 <__assert_fail@plt+0x2dcd4>
   40340:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40344:	ldr	r3, [r3, #56]	; 0x38
   40348:	ldrd	r2, [r3, #16]
   4034c:	orrs	r3, r2, r3
   40350:	bne	40358 <__assert_fail@plt+0x2dc6c>
   40354:	bl	12698 <abort@plt>
   40358:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4035c:	ldr	r3, [r3, #56]	; 0x38
   40360:	ldrd	r0, [r3]
   40364:	ldr	r3, [fp, #-8]
   40368:	ldrd	r2, [r3, #96]	; 0x60
   4036c:	cmp	r1, r3
   40370:	cmpeq	r0, r2
   40374:	bne	403c0 <__assert_fail@plt+0x2dcd4>
   40378:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4037c:	ldr	r3, [r3, #56]	; 0x38
   40380:	ldrd	r0, [r3, #8]
   40384:	ldr	r3, [fp, #-8]
   40388:	ldrd	r2, [r3]
   4038c:	cmp	r1, r3
   40390:	cmpeq	r0, r2
   40394:	bne	403c0 <__assert_fail@plt+0x2dcd4>
   40398:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4039c:	ldr	r1, [r3, #56]	; 0x38
   403a0:	ldr	r3, [fp, #-16]
   403a4:	ldrd	r2, [r3, #64]	; 0x40
   403a8:	strd	r2, [r1, #8]
   403ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   403b0:	ldr	r1, [r3, #56]	; 0x38
   403b4:	ldr	r3, [fp, #-16]
   403b8:	ldrd	r2, [r3, #160]	; 0xa0
   403bc:	strd	r2, [r1]
   403c0:	nop	{0}
   403c4:	sub	sp, fp, #4
   403c8:	ldr	fp, [sp]
   403cc:	add	sp, sp, #4
   403d0:	pop	{pc}		; (ldr pc, [sp], #4)
   403d4:	str	fp, [sp, #-8]!
   403d8:	str	lr, [sp, #4]
   403dc:	add	fp, sp, #4
   403e0:	sub	sp, sp, #8
   403e4:	str	r0, [fp, #-8]
   403e8:	ldr	r3, [fp, #-8]
   403ec:	ldr	r2, [r3, #48]	; 0x30
   403f0:	movw	r3, #258	; 0x102
   403f4:	and	r3, r3, r2
   403f8:	cmp	r3, #0
   403fc:	beq	40424 <__assert_fail@plt+0x2dd38>
   40400:	ldr	r3, [fp, #-8]
   40404:	ldr	r3, [r3, #56]	; 0x38
   40408:	cmp	r3, #0
   4040c:	beq	40434 <__assert_fail@plt+0x2dd48>
   40410:	ldr	r3, [fp, #-8]
   40414:	ldr	r3, [r3, #56]	; 0x38
   40418:	mov	r0, r3
   4041c:	bl	2d3a8 <__assert_fail@plt+0x1acbc>
   40420:	b	40434 <__assert_fail@plt+0x2dd48>
   40424:	ldr	r3, [fp, #-8]
   40428:	ldr	r3, [r3, #56]	; 0x38
   4042c:	mov	r0, r3
   40430:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40434:	nop	{0}
   40438:	sub	sp, fp, #4
   4043c:	ldr	fp, [sp]
   40440:	add	sp, sp, #4
   40444:	pop	{pc}		; (ldr pc, [sp], #4)
   40448:	str	fp, [sp, #-8]!
   4044c:	str	lr, [sp, #4]
   40450:	add	fp, sp, #4
   40454:	sub	sp, sp, #16
   40458:	str	r0, [fp, #-16]
   4045c:	b	40480 <__assert_fail@plt+0x2dd94>
   40460:	ldr	r0, [fp, #-16]
   40464:	bl	61134 <__assert_fail@plt+0x4ea48>
   40468:	str	r0, [fp, #-8]
   4046c:	ldr	r3, [fp, #-8]
   40470:	cmp	r3, #0
   40474:	blt	40480 <__assert_fail@plt+0x2dd94>
   40478:	ldr	r0, [fp, #-8]
   4047c:	bl	126a4 <close@plt>
   40480:	ldr	r0, [fp, #-16]
   40484:	bl	6104c <__assert_fail@plt+0x4e960>
   40488:	mov	r3, r0
   4048c:	eor	r3, r3, #1
   40490:	uxtb	r3, r3
   40494:	cmp	r3, #0
   40498:	bne	40460 <__assert_fail@plt+0x2dd74>
   4049c:	nop	{0}
   404a0:	sub	sp, fp, #4
   404a4:	ldr	fp, [sp]
   404a8:	add	sp, sp, #4
   404ac:	pop	{pc}		; (ldr pc, [sp], #4)
   404b0:	str	fp, [sp, #-8]!
   404b4:	str	lr, [sp, #4]
   404b8:	add	fp, sp, #4
   404bc:	sub	sp, sp, #8
   404c0:	str	r0, [fp, #-8]
   404c4:	mov	r3, r1
   404c8:	strb	r3, [fp, #-9]
   404cc:	ldr	r3, [fp, #-8]
   404d0:	ldrh	r3, [r3, #56]	; 0x38
   404d4:	cmp	r3, #11
   404d8:	beq	404e0 <__assert_fail@plt+0x2ddf4>
   404dc:	bl	12698 <abort@plt>
   404e0:	ldrb	r3, [fp, #-9]
   404e4:	cmp	r3, #0
   404e8:	beq	404f8 <__assert_fail@plt+0x2de0c>
   404ec:	mov	r2, #2
   404f0:	mov	r3, #0
   404f4:	b	40500 <__assert_fail@plt+0x2de14>
   404f8:	mov	r2, #1
   404fc:	mov	r3, #0
   40500:	ldr	r1, [fp, #-8]
   40504:	strd	r2, [r1, #112]	; 0x70
   40508:	nop	{0}
   4050c:	sub	sp, fp, #4
   40510:	ldr	fp, [sp]
   40514:	add	sp, sp, #4
   40518:	pop	{pc}		; (ldr pc, [sp], #4)
   4051c:	str	fp, [sp, #-8]!
   40520:	str	lr, [sp, #4]
   40524:	add	fp, sp, #4
   40528:	sub	sp, sp, #24
   4052c:	str	r0, [fp, #-16]
   40530:	str	r1, [fp, #-20]	; 0xffffffec
   40534:	mov	r3, r2
   40538:	strb	r3, [fp, #-21]	; 0xffffffeb
   4053c:	ldr	r3, [fp, #-16]
   40540:	ldr	r3, [r3, #32]
   40544:	str	r3, [fp, #-8]
   40548:	ldr	r2, [fp, #-8]
   4054c:	ldr	r3, [fp, #-20]	; 0xffffffec
   40550:	cmp	r2, r3
   40554:	bne	40568 <__assert_fail@plt+0x2de7c>
   40558:	ldr	r3, [fp, #-8]
   4055c:	cmn	r3, #100	; 0x64
   40560:	beq	40568 <__assert_fail@plt+0x2de7c>
   40564:	bl	12698 <abort@plt>
   40568:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   4056c:	cmp	r3, #0
   40570:	beq	405a4 <__assert_fail@plt+0x2deb8>
   40574:	ldr	r3, [fp, #-16]
   40578:	add	r3, r3, #60	; 0x3c
   4057c:	ldr	r1, [fp, #-8]
   40580:	mov	r0, r3
   40584:	bl	61074 <__assert_fail@plt+0x4e988>
   40588:	str	r0, [fp, #-12]
   4058c:	ldr	r3, [fp, #-12]
   40590:	cmp	r3, #0
   40594:	blt	405cc <__assert_fail@plt+0x2dee0>
   40598:	ldr	r0, [fp, #-12]
   4059c:	bl	126a4 <close@plt>
   405a0:	b	405cc <__assert_fail@plt+0x2dee0>
   405a4:	ldr	r3, [fp, #-16]
   405a8:	ldr	r3, [r3, #48]	; 0x30
   405ac:	and	r3, r3, #4
   405b0:	cmp	r3, #0
   405b4:	bne	405cc <__assert_fail@plt+0x2dee0>
   405b8:	ldr	r3, [fp, #-8]
   405bc:	cmp	r3, #0
   405c0:	blt	405cc <__assert_fail@plt+0x2dee0>
   405c4:	ldr	r0, [fp, #-8]
   405c8:	bl	126a4 <close@plt>
   405cc:	ldr	r3, [fp, #-16]
   405d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   405d4:	str	r2, [r3, #32]
   405d8:	nop	{0}
   405dc:	sub	sp, fp, #4
   405e0:	ldr	fp, [sp]
   405e4:	add	sp, sp, #4
   405e8:	pop	{pc}		; (ldr pc, [sp], #4)
   405ec:	str	fp, [sp, #-8]!
   405f0:	str	lr, [sp, #4]
   405f4:	add	fp, sp, #4
   405f8:	sub	sp, sp, #16
   405fc:	str	r0, [fp, #-16]
   40600:	ldr	r3, [fp, #-16]
   40604:	ldr	r3, [r3, #48]	; 0x30
   40608:	and	r3, r3, #4
   4060c:	cmp	r3, #0
   40610:	bne	406a0 <__assert_fail@plt+0x2dfb4>
   40614:	ldr	r3, [fp, #-16]
   40618:	ldr	r3, [r3, #48]	; 0x30
   4061c:	and	r3, r3, #512	; 0x200
   40620:	cmp	r3, #0
   40624:	beq	40660 <__assert_fail@plt+0x2df74>
   40628:	ldr	r3, [fp, #-16]
   4062c:	ldr	r3, [r3, #48]	; 0x30
   40630:	and	r3, r3, #512	; 0x200
   40634:	cmp	r3, #0
   40638:	bne	40648 <__assert_fail@plt+0x2df5c>
   4063c:	ldr	r3, [fp, #-16]
   40640:	ldr	r3, [r3, #28]
   40644:	b	4064c <__assert_fail@plt+0x2df60>
   40648:	mvn	r3, #99	; 0x63
   4064c:	mov	r2, #1
   40650:	mov	r1, r3
   40654:	ldr	r0, [fp, #-16]
   40658:	bl	4051c <__assert_fail@plt+0x2de30>
   4065c:	b	406a0 <__assert_fail@plt+0x2dfb4>
   40660:	ldr	r3, [fp, #-16]
   40664:	ldr	r3, [r3, #48]	; 0x30
   40668:	and	r3, r3, #512	; 0x200
   4066c:	cmp	r3, #0
   40670:	bne	40680 <__assert_fail@plt+0x2df94>
   40674:	ldr	r3, [fp, #-16]
   40678:	ldr	r3, [r3, #28]
   4067c:	b	40684 <__assert_fail@plt+0x2df98>
   40680:	mvn	r3, #99	; 0x63
   40684:	mov	r0, r3
   40688:	bl	125d8 <fchdir@plt>
   4068c:	mov	r3, r0
   40690:	cmp	r3, #0
   40694:	beq	406a0 <__assert_fail@plt+0x2dfb4>
   40698:	mov	r3, #1
   4069c:	b	406a4 <__assert_fail@plt+0x2dfb8>
   406a0:	mov	r3, #0
   406a4:	str	r3, [fp, #-8]
   406a8:	ldr	r3, [fp, #-16]
   406ac:	add	r3, r3, #60	; 0x3c
   406b0:	mov	r0, r3
   406b4:	bl	40448 <__assert_fail@plt+0x2dd5c>
   406b8:	ldr	r3, [fp, #-8]
   406bc:	mov	r0, r3
   406c0:	sub	sp, fp, #4
   406c4:	ldr	fp, [sp]
   406c8:	add	sp, sp, #4
   406cc:	pop	{pc}		; (ldr pc, [sp], #4)
   406d0:	str	fp, [sp, #-8]!
   406d4:	str	lr, [sp, #4]
   406d8:	add	fp, sp, #4
   406dc:	sub	sp, sp, #16
   406e0:	str	r0, [fp, #-16]
   406e4:	str	r1, [fp, #-20]	; 0xffffffec
   406e8:	ldr	r3, [fp, #-16]
   406ec:	ldr	r3, [r3, #48]	; 0x30
   406f0:	lsl	r3, r3, #11
   406f4:	and	r3, r3, #32768	; 0x8000
   406f8:	orr	r3, r3, #540672	; 0x84000
   406fc:	orr	r3, r3, #2304	; 0x900
   40700:	str	r3, [fp, #-8]
   40704:	ldr	r3, [fp, #-16]
   40708:	ldr	r3, [r3, #48]	; 0x30
   4070c:	and	r3, r3, #512	; 0x200
   40710:	cmp	r3, #0
   40714:	beq	40738 <__assert_fail@plt+0x2e04c>
   40718:	ldr	r3, [fp, #-16]
   4071c:	ldr	r3, [r3, #32]
   40720:	ldr	r2, [fp, #-8]
   40724:	ldr	r1, [fp, #-20]	; 0xffffffec
   40728:	mov	r0, r3
   4072c:	bl	31ab4 <__assert_fail@plt+0x1f3c8>
   40730:	mov	r3, r0
   40734:	b	40748 <__assert_fail@plt+0x2e05c>
   40738:	ldr	r1, [fp, #-8]
   4073c:	ldr	r0, [fp, #-20]	; 0xffffffec
   40740:	bl	2bf8c <__assert_fail@plt+0x198a0>
   40744:	mov	r3, r0
   40748:	str	r3, [fp, #-12]
   4074c:	ldr	r3, [fp, #-12]
   40750:	mov	r0, r3
   40754:	sub	sp, fp, #4
   40758:	ldr	fp, [sp]
   4075c:	add	sp, sp, #4
   40760:	pop	{pc}		; (ldr pc, [sp], #4)
   40764:	strd	r4, [sp, #-28]!	; 0xffffffe4
   40768:	strd	r6, [sp, #8]
   4076c:	str	r8, [sp, #16]
   40770:	str	fp, [sp, #20]
   40774:	str	lr, [sp, #24]
   40778:	add	fp, sp, #24
   4077c:	sub	sp, sp, #36	; 0x24
   40780:	str	r0, [fp, #-56]	; 0xffffffc8
   40784:	mov	r7, r1
   40788:	str	r2, [fp, #-60]	; 0xffffffc4
   4078c:	mov	r3, #0
   40790:	str	r3, [fp, #-32]	; 0xffffffe0
   40794:	mov	r3, #0
   40798:	str	r3, [fp, #-36]	; 0xffffffdc
   4079c:	bic	r3, r7, #4080	; 0xff0
   407a0:	bic	r3, r3, #15
   407a4:	cmp	r3, #0
   407a8:	beq	407c4 <__assert_fail@plt+0x2e0d8>
   407ac:	bl	12404 <__errno_location@plt>
   407b0:	mov	r2, r0
   407b4:	mov	r3, #22
   407b8:	str	r3, [r2]
   407bc:	mov	r3, #0
   407c0:	b	40be4 <__assert_fail@plt+0x2e4f8>
   407c4:	and	r3, r7, #4
   407c8:	cmp	r3, #0
   407cc:	beq	407f4 <__assert_fail@plt+0x2e108>
   407d0:	and	r3, r7, #512	; 0x200
   407d4:	cmp	r3, #0
   407d8:	beq	407f4 <__assert_fail@plt+0x2e108>
   407dc:	bl	12404 <__errno_location@plt>
   407e0:	mov	r2, r0
   407e4:	mov	r3, #22
   407e8:	str	r3, [r2]
   407ec:	mov	r3, #0
   407f0:	b	40be4 <__assert_fail@plt+0x2e4f8>
   407f4:	and	r3, r7, #18
   407f8:	cmp	r3, #0
   407fc:	bne	40818 <__assert_fail@plt+0x2e12c>
   40800:	bl	12404 <__errno_location@plt>
   40804:	mov	r2, r0
   40808:	mov	r3, #22
   4080c:	str	r3, [r2]
   40810:	mov	r3, #0
   40814:	b	40be4 <__assert_fail@plt+0x2e4f8>
   40818:	mov	r1, #96	; 0x60
   4081c:	mov	r0, #1
   40820:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   40824:	mov	r3, r0
   40828:	mov	r4, r3
   4082c:	cmp	r4, #0
   40830:	bne	4083c <__assert_fail@plt+0x2e150>
   40834:	mov	r3, #0
   40838:	b	40be4 <__assert_fail@plt+0x2e4f8>
   4083c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   40840:	str	r3, [r4, #44]	; 0x2c
   40844:	str	r7, [r4, #48]	; 0x30
   40848:	ldr	r3, [r4, #48]	; 0x30
   4084c:	and	r3, r3, #2
   40850:	cmp	r3, #0
   40854:	beq	40870 <__assert_fail@plt+0x2e184>
   40858:	ldr	r3, [r4, #48]	; 0x30
   4085c:	orr	r3, r3, #4
   40860:	str	r3, [r4, #48]	; 0x30
   40864:	ldr	r3, [r4, #48]	; 0x30
   40868:	bic	r3, r3, #512	; 0x200
   4086c:	str	r3, [r4, #48]	; 0x30
   40870:	mvn	r3, #99	; 0x63
   40874:	str	r3, [r4, #32]
   40878:	ldr	r0, [fp, #-56]	; 0xffffffc8
   4087c:	bl	43034 <__assert_fail@plt+0x30948>
   40880:	str	r0, [fp, #-44]	; 0xffffffd4
   40884:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40888:	cmp	r3, #4096	; 0x1000
   4088c:	movcs	r3, r3
   40890:	movcc	r3, #4096	; 0x1000
   40894:	mov	r1, r3
   40898:	mov	r0, r4
   4089c:	bl	42e08 <__assert_fail@plt+0x3071c>
   408a0:	mov	r3, r0
   408a4:	eor	r3, r3, #1
   408a8:	uxtb	r3, r3
   408ac:	cmp	r3, #0
   408b0:	bne	40bd4 <__assert_fail@plt+0x2e4e8>
   408b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   408b8:	ldr	r3, [r3]
   408bc:	cmp	r3, #0
   408c0:	beq	408f4 <__assert_fail@plt+0x2e208>
   408c4:	mov	r2, #0
   408c8:	movw	r1, #47040	; 0xb7c0
   408cc:	movt	r1, #6
   408d0:	mov	r0, r4
   408d4:	bl	42cd8 <__assert_fail@plt+0x305ec>
   408d8:	str	r0, [fp, #-32]	; 0xffffffe0
   408dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   408e0:	cmp	r3, #0
   408e4:	beq	40bc0 <__assert_fail@plt+0x2e4d4>
   408e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   408ec:	mvn	r2, #0
   408f0:	str	r2, [r3, #48]	; 0x30
   408f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   408f8:	cmp	r3, #0
   408fc:	beq	40910 <__assert_fail@plt+0x2e224>
   40900:	ldr	r3, [r4, #48]	; 0x30
   40904:	and	r3, r3, #1024	; 0x400
   40908:	cmp	r3, #0
   4090c:	beq	40918 <__assert_fail@plt+0x2e22c>
   40910:	mov	r3, #1
   40914:	b	4091c <__assert_fail@plt+0x2e230>
   40918:	mov	r3, #0
   4091c:	strb	r3, [fp, #-45]	; 0xffffffd3
   40920:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   40924:	and	r3, r3, #1
   40928:	strb	r3, [fp, #-45]	; 0xffffffd3
   4092c:	mov	r6, #0
   40930:	mov	r8, #0
   40934:	b	40a94 <__assert_fail@plt+0x2e3a8>
   40938:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4093c:	ldr	r3, [r3]
   40940:	mov	r0, r3
   40944:	bl	123bc <strlen@plt>
   40948:	str	r0, [fp, #-40]	; 0xffffffd8
   4094c:	and	r3, r7, #2048	; 0x800
   40950:	cmp	r3, #0
   40954:	bne	409c4 <__assert_fail@plt+0x2e2d8>
   40958:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4095c:	ldr	r3, [r3]
   40960:	str	r3, [fp, #-52]	; 0xffffffcc
   40964:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40968:	cmp	r3, #2
   4096c:	bls	409c4 <__assert_fail@plt+0x2e2d8>
   40970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40974:	sub	r3, r3, #1
   40978:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4097c:	add	r3, r2, r3
   40980:	ldrb	r3, [r3]
   40984:	cmp	r3, #47	; 0x2f
   40988:	bne	409c4 <__assert_fail@plt+0x2e2d8>
   4098c:	b	4099c <__assert_fail@plt+0x2e2b0>
   40990:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40994:	sub	r3, r3, #1
   40998:	str	r3, [fp, #-40]	; 0xffffffd8
   4099c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   409a0:	cmp	r3, #1
   409a4:	bls	409c4 <__assert_fail@plt+0x2e2d8>
   409a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   409ac:	sub	r3, r3, #2
   409b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   409b4:	add	r3, r2, r3
   409b8:	ldrb	r3, [r3]
   409bc:	cmp	r3, #47	; 0x2f
   409c0:	beq	40990 <__assert_fail@plt+0x2e2a4>
   409c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   409c8:	ldr	r3, [r3]
   409cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   409d0:	mov	r1, r3
   409d4:	mov	r0, r4
   409d8:	bl	42cd8 <__assert_fail@plt+0x305ec>
   409dc:	mov	r5, r0
   409e0:	cmp	r5, #0
   409e4:	beq	40b98 <__assert_fail@plt+0x2e4ac>
   409e8:	mov	r3, #0
   409ec:	str	r3, [r5, #48]	; 0x30
   409f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   409f4:	str	r3, [r5, #4]
   409f8:	add	r3, r5, #168	; 0xa8
   409fc:	str	r3, [r5, #24]
   40a00:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   40a04:	cmp	r3, #0
   40a08:	beq	40a2c <__assert_fail@plt+0x2e340>
   40a0c:	cmp	r6, #0
   40a10:	beq	40a2c <__assert_fail@plt+0x2e340>
   40a14:	mov	r3, #11
   40a18:	strh	r3, [r5, #56]	; 0x38
   40a1c:	mov	r1, #1
   40a20:	mov	r0, r5
   40a24:	bl	404b0 <__assert_fail@plt+0x2ddc4>
   40a28:	b	40a44 <__assert_fail@plt+0x2e358>
   40a2c:	mov	r2, #0
   40a30:	mov	r1, r5
   40a34:	mov	r0, r4
   40a38:	bl	42924 <__assert_fail@plt+0x30238>
   40a3c:	mov	r3, r0
   40a40:	strh	r3, [r5, #56]	; 0x38
   40a44:	ldr	r3, [fp, #-60]	; 0xffffffc4
   40a48:	cmp	r3, #0
   40a4c:	beq	40a5c <__assert_fail@plt+0x2e370>
   40a50:	str	r6, [r5, #8]
   40a54:	mov	r6, r5
   40a58:	b	40a84 <__assert_fail@plt+0x2e398>
   40a5c:	mov	r3, #0
   40a60:	str	r3, [r5, #8]
   40a64:	cmp	r6, #0
   40a68:	bne	40a78 <__assert_fail@plt+0x2e38c>
   40a6c:	mov	r6, r5
   40a70:	str	r6, [fp, #-36]	; 0xffffffdc
   40a74:	b	40a84 <__assert_fail@plt+0x2e398>
   40a78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   40a7c:	str	r5, [r3, #8]
   40a80:	str	r5, [fp, #-36]	; 0xffffffdc
   40a84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   40a88:	add	r3, r3, #4
   40a8c:	str	r3, [fp, #-56]	; 0xffffffc8
   40a90:	add	r8, r8, #1
   40a94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   40a98:	ldr	r3, [r3]
   40a9c:	cmp	r3, #0
   40aa0:	bne	40938 <__assert_fail@plt+0x2e24c>
   40aa4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   40aa8:	cmp	r3, #0
   40aac:	beq	40acc <__assert_fail@plt+0x2e3e0>
   40ab0:	cmp	r8, #1
   40ab4:	bls	40acc <__assert_fail@plt+0x2e3e0>
   40ab8:	mov	r2, r8
   40abc:	mov	r1, r6
   40ac0:	mov	r0, r4
   40ac4:	bl	42b74 <__assert_fail@plt+0x30488>
   40ac8:	mov	r6, r0
   40acc:	mov	r2, #0
   40ad0:	movw	r1, #47040	; 0xb7c0
   40ad4:	movt	r1, #6
   40ad8:	mov	r0, r4
   40adc:	bl	42cd8 <__assert_fail@plt+0x305ec>
   40ae0:	mov	r3, r0
   40ae4:	str	r3, [r4]
   40ae8:	ldr	r3, [r4]
   40aec:	cmp	r3, #0
   40af0:	beq	40ba0 <__assert_fail@plt+0x2e4b4>
   40af4:	ldr	r3, [r4]
   40af8:	str	r6, [r3, #8]
   40afc:	ldr	r3, [r4]
   40b00:	mov	r2, #9
   40b04:	strh	r2, [r3, #56]	; 0x38
   40b08:	ldr	r3, [r4]
   40b0c:	mov	r2, #1
   40b10:	str	r2, [r3, #48]	; 0x30
   40b14:	mov	r0, r4
   40b18:	bl	40070 <__assert_fail@plt+0x2d984>
   40b1c:	mov	r3, r0
   40b20:	eor	r3, r3, #1
   40b24:	uxtb	r3, r3
   40b28:	cmp	r3, #0
   40b2c:	bne	40ba8 <__assert_fail@plt+0x2e4bc>
   40b30:	ldr	r3, [r4, #48]	; 0x30
   40b34:	and	r3, r3, #4
   40b38:	cmp	r3, #0
   40b3c:	bne	40b80 <__assert_fail@plt+0x2e494>
   40b40:	ldr	r3, [r4, #48]	; 0x30
   40b44:	and	r3, r3, #512	; 0x200
   40b48:	cmp	r3, #0
   40b4c:	bne	40b80 <__assert_fail@plt+0x2e494>
   40b50:	movw	r1, #47044	; 0xb7c4
   40b54:	movt	r1, #6
   40b58:	mov	r0, r4
   40b5c:	bl	406d0 <__assert_fail@plt+0x2dfe4>
   40b60:	mov	r3, r0
   40b64:	str	r3, [r4, #28]
   40b68:	ldr	r3, [r4, #28]
   40b6c:	cmp	r3, #0
   40b70:	bge	40b80 <__assert_fail@plt+0x2e494>
   40b74:	ldr	r3, [r4, #48]	; 0x30
   40b78:	orr	r3, r3, #4
   40b7c:	str	r3, [r4, #48]	; 0x30
   40b80:	add	r3, r4, #60	; 0x3c
   40b84:	mvn	r1, #0
   40b88:	mov	r0, r3
   40b8c:	bl	60fc4 <__assert_fail@plt+0x4e8d8>
   40b90:	mov	r3, r4
   40b94:	b	40be4 <__assert_fail@plt+0x2e4f8>
   40b98:	nop	{0}
   40b9c:	b	40bac <__assert_fail@plt+0x2e4c0>
   40ba0:	nop	{0}
   40ba4:	b	40bac <__assert_fail@plt+0x2e4c0>
   40ba8:	nop	{0}
   40bac:	mov	r0, r6
   40bb0:	bl	42da8 <__assert_fail@plt+0x306bc>
   40bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40bb8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40bbc:	b	40bc4 <__assert_fail@plt+0x2e4d8>
   40bc0:	nop	{0}
   40bc4:	ldr	r3, [r4, #24]
   40bc8:	mov	r0, r3
   40bcc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40bd0:	b	40bd8 <__assert_fail@plt+0x2e4ec>
   40bd4:	nop	{0}
   40bd8:	mov	r0, r4
   40bdc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40be0:	mov	r3, #0
   40be4:	mov	r0, r3
   40be8:	sub	sp, fp, #24
   40bec:	ldrd	r4, [sp]
   40bf0:	ldrd	r6, [sp, #8]
   40bf4:	ldr	r8, [sp, #16]
   40bf8:	ldr	fp, [sp, #20]
   40bfc:	add	sp, sp, #24
   40c00:	pop	{pc}		; (ldr pc, [sp], #4)
   40c04:	strd	r4, [sp, #-20]!	; 0xffffffec
   40c08:	str	r6, [sp, #8]
   40c0c:	str	fp, [sp, #12]
   40c10:	str	lr, [sp, #16]
   40c14:	add	fp, sp, #16
   40c18:	sub	sp, sp, #12
   40c1c:	str	r0, [fp, #-24]	; 0xffffffe8
   40c20:	mov	r4, r1
   40c24:	ldr	r3, [r4, #52]	; 0x34
   40c28:	str	r3, [r4, #40]	; 0x28
   40c2c:	ldr	r6, [r4, #40]	; 0x28
   40c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40c34:	ldr	r3, [r3, #24]
   40c38:	add	r1, r4, #168	; 0xa8
   40c3c:	add	r2, r6, #1
   40c40:	mov	r0, r3
   40c44:	bl	1208c <memmove@plt>
   40c48:	add	r3, r4, #168	; 0xa8
   40c4c:	mov	r1, #47	; 0x2f
   40c50:	mov	r0, r3
   40c54:	bl	12548 <strrchr@plt>
   40c58:	mov	r5, r0
   40c5c:	cmp	r5, #0
   40c60:	beq	40ca8 <__assert_fail@plt+0x2e5bc>
   40c64:	add	r3, r4, #168	; 0xa8
   40c68:	cmp	r5, r3
   40c6c:	bne	40c80 <__assert_fail@plt+0x2e594>
   40c70:	add	r3, r5, #1
   40c74:	ldrb	r3, [r3]
   40c78:	cmp	r3, #0
   40c7c:	beq	40ca8 <__assert_fail@plt+0x2e5bc>
   40c80:	add	r5, r5, #1
   40c84:	mov	r0, r5
   40c88:	bl	123bc <strlen@plt>
   40c8c:	mov	r6, r0
   40c90:	add	r3, r4, #168	; 0xa8
   40c94:	add	r2, r6, #1
   40c98:	mov	r1, r5
   40c9c:	mov	r0, r3
   40ca0:	bl	1208c <memmove@plt>
   40ca4:	str	r6, [r4, #52]	; 0x34
   40ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40cac:	ldr	r3, [r3, #24]
   40cb0:	str	r3, [r4, #28]
   40cb4:	ldr	r3, [r4, #28]
   40cb8:	str	r3, [r4, #24]
   40cbc:	nop	{0}
   40cc0:	sub	sp, fp, #16
   40cc4:	ldrd	r4, [sp]
   40cc8:	ldr	r6, [sp, #8]
   40ccc:	ldr	fp, [sp, #12]
   40cd0:	add	sp, sp, #16
   40cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   40cd8:	strd	r4, [sp, #-16]!
   40cdc:	str	fp, [sp, #8]
   40ce0:	str	lr, [sp, #12]
   40ce4:	add	fp, sp, #12
   40ce8:	sub	sp, sp, #16
   40cec:	str	r0, [fp, #-24]	; 0xffffffe8
   40cf0:	mov	r3, #0
   40cf4:	str	r3, [fp, #-16]
   40cf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40cfc:	ldr	r3, [r3]
   40d00:	cmp	r3, #0
   40d04:	beq	40d50 <__assert_fail@plt+0x2e664>
   40d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40d0c:	ldr	r4, [r3]
   40d10:	b	40d3c <__assert_fail@plt+0x2e650>
   40d14:	mov	r5, r4
   40d18:	ldr	r3, [r4, #8]
   40d1c:	cmp	r3, #0
   40d20:	beq	40d2c <__assert_fail@plt+0x2e640>
   40d24:	ldr	r3, [r4, #8]
   40d28:	b	40d30 <__assert_fail@plt+0x2e644>
   40d2c:	ldr	r3, [r4, #4]
   40d30:	mov	r4, r3
   40d34:	mov	r0, r5
   40d38:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40d3c:	ldr	r3, [r4, #48]	; 0x30
   40d40:	cmp	r3, #0
   40d44:	bge	40d14 <__assert_fail@plt+0x2e628>
   40d48:	mov	r0, r4
   40d4c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40d54:	ldr	r3, [r3, #4]
   40d58:	cmp	r3, #0
   40d5c:	beq	40d70 <__assert_fail@plt+0x2e684>
   40d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40d64:	ldr	r3, [r3, #4]
   40d68:	mov	r0, r3
   40d6c:	bl	42da8 <__assert_fail@plt+0x306bc>
   40d70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40d74:	ldr	r3, [r3, #8]
   40d78:	mov	r0, r3
   40d7c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40d84:	ldr	r3, [r3, #24]
   40d88:	mov	r0, r3
   40d8c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40d90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40d94:	ldr	r3, [r3, #48]	; 0x30
   40d98:	and	r3, r3, #512	; 0x200
   40d9c:	cmp	r3, #0
   40da0:	beq	40de4 <__assert_fail@plt+0x2e6f8>
   40da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40da8:	ldr	r3, [r3, #32]
   40dac:	cmp	r3, #0
   40db0:	blt	40e5c <__assert_fail@plt+0x2e770>
   40db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40db8:	ldr	r3, [r3, #32]
   40dbc:	mov	r0, r3
   40dc0:	bl	126a4 <close@plt>
   40dc4:	mov	r3, r0
   40dc8:	cmp	r3, #0
   40dcc:	beq	40e5c <__assert_fail@plt+0x2e770>
   40dd0:	bl	12404 <__errno_location@plt>
   40dd4:	mov	r3, r0
   40dd8:	ldr	r3, [r3]
   40ddc:	str	r3, [fp, #-16]
   40de0:	b	40e5c <__assert_fail@plt+0x2e770>
   40de4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40de8:	ldr	r3, [r3, #48]	; 0x30
   40dec:	and	r3, r3, #4
   40df0:	cmp	r3, #0
   40df4:	bne	40e5c <__assert_fail@plt+0x2e770>
   40df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40dfc:	ldr	r3, [r3, #28]
   40e00:	mov	r0, r3
   40e04:	bl	125d8 <fchdir@plt>
   40e08:	mov	r3, r0
   40e0c:	cmp	r3, #0
   40e10:	beq	40e24 <__assert_fail@plt+0x2e738>
   40e14:	bl	12404 <__errno_location@plt>
   40e18:	mov	r3, r0
   40e1c:	ldr	r3, [r3]
   40e20:	str	r3, [fp, #-16]
   40e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40e28:	ldr	r3, [r3, #28]
   40e2c:	mov	r0, r3
   40e30:	bl	126a4 <close@plt>
   40e34:	mov	r3, r0
   40e38:	cmp	r3, #0
   40e3c:	beq	40e5c <__assert_fail@plt+0x2e770>
   40e40:	ldr	r3, [fp, #-16]
   40e44:	cmp	r3, #0
   40e48:	bne	40e5c <__assert_fail@plt+0x2e770>
   40e4c:	bl	12404 <__errno_location@plt>
   40e50:	mov	r3, r0
   40e54:	ldr	r3, [r3]
   40e58:	str	r3, [fp, #-16]
   40e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40e60:	add	r3, r3, #60	; 0x3c
   40e64:	mov	r0, r3
   40e68:	bl	40448 <__assert_fail@plt+0x2dd5c>
   40e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40e70:	ldr	r3, [r3, #52]	; 0x34
   40e74:	cmp	r3, #0
   40e78:	beq	40e8c <__assert_fail@plt+0x2e7a0>
   40e7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40e80:	ldr	r3, [r3, #52]	; 0x34
   40e84:	mov	r0, r3
   40e88:	bl	2d3a8 <__assert_fail@plt+0x1acbc>
   40e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40e90:	bl	403d4 <__assert_fail@plt+0x2dce8>
   40e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   40e98:	bl	3fe0c <__assert_fail@plt+0x2d720>
   40e9c:	ldr	r3, [fp, #-16]
   40ea0:	cmp	r3, #0
   40ea4:	beq	40ec0 <__assert_fail@plt+0x2e7d4>
   40ea8:	bl	12404 <__errno_location@plt>
   40eac:	mov	r2, r0
   40eb0:	ldr	r3, [fp, #-16]
   40eb4:	str	r3, [r2]
   40eb8:	mvn	r3, #0
   40ebc:	b	40ec4 <__assert_fail@plt+0x2e7d8>
   40ec0:	mov	r3, #0
   40ec4:	mov	r0, r3
   40ec8:	sub	sp, fp, #12
   40ecc:	ldrd	r4, [sp]
   40ed0:	ldr	fp, [sp, #8]
   40ed4:	add	sp, sp, #12
   40ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   40edc:	str	fp, [sp, #-8]!
   40ee0:	str	lr, [sp, #4]
   40ee4:	add	fp, sp, #4
   40ee8:	sub	sp, sp, #24
   40eec:	str	r0, [fp, #-24]	; 0xffffffe8
   40ef0:	str	r1, [fp, #-28]	; 0xffffffe4
   40ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40ef8:	str	r3, [fp, #-8]
   40efc:	ldr	r3, [fp, #-8]
   40f00:	ldrd	r2, [r3]
   40f04:	strd	r2, [fp, #-20]	; 0xffffffec
   40f08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40f0c:	mov	r2, r3
   40f10:	mov	r3, #0
   40f14:	ldrd	r0, [fp, #-20]	; 0xffffffec
   40f18:	bl	64a60 <__assert_fail@plt+0x52374>
   40f1c:	mov	r3, r2
   40f20:	mov	r0, r3
   40f24:	sub	sp, fp, #4
   40f28:	ldr	fp, [sp]
   40f2c:	add	sp, sp, #4
   40f30:	pop	{pc}		; (ldr pc, [sp], #4)
   40f34:	push	{fp}		; (str fp, [sp, #-4]!)
   40f38:	add	fp, sp, #0
   40f3c:	sub	sp, sp, #20
   40f40:	str	r0, [fp, #-16]
   40f44:	str	r1, [fp, #-20]	; 0xffffffec
   40f48:	ldr	r3, [fp, #-16]
   40f4c:	str	r3, [fp, #-8]
   40f50:	ldr	r3, [fp, #-20]	; 0xffffffec
   40f54:	str	r3, [fp, #-12]
   40f58:	ldr	r3, [fp, #-8]
   40f5c:	ldrd	r0, [r3]
   40f60:	ldr	r3, [fp, #-12]
   40f64:	ldrd	r2, [r3]
   40f68:	cmp	r1, r3
   40f6c:	cmpeq	r0, r2
   40f70:	moveq	r3, #1
   40f74:	movne	r3, #0
   40f78:	uxtb	r3, r3
   40f7c:	mov	r0, r3
   40f80:	add	sp, fp, #0
   40f84:	pop	{fp}		; (ldr fp, [sp], #4)
   40f88:	bx	lr
   40f8c:	str	fp, [sp, #-8]!
   40f90:	str	lr, [sp, #4]
   40f94:	add	fp, sp, #4
   40f98:	sub	sp, sp, #136	; 0x88
   40f9c:	str	r0, [fp, #-128]	; 0xffffff80
   40fa0:	str	r1, [fp, #-132]	; 0xffffff7c
   40fa4:	ldr	r3, [fp, #-128]	; 0xffffff80
   40fa8:	ldr	r3, [r3, #44]	; 0x2c
   40fac:	str	r3, [fp, #-12]
   40fb0:	ldr	r3, [fp, #-12]
   40fb4:	ldr	r3, [r3, #52]	; 0x34
   40fb8:	str	r3, [fp, #-8]
   40fbc:	ldr	r3, [fp, #-12]
   40fc0:	ldr	r3, [r3, #48]	; 0x30
   40fc4:	and	r3, r3, #512	; 0x200
   40fc8:	cmp	r3, #0
   40fcc:	bne	40fd8 <__assert_fail@plt+0x2e8ec>
   40fd0:	mov	r3, #0
   40fd4:	b	4111c <__assert_fail@plt+0x2ea30>
   40fd8:	ldr	r3, [fp, #-8]
   40fdc:	cmp	r3, #0
   40fe0:	bne	41028 <__assert_fail@plt+0x2e93c>
   40fe4:	movw	r3, #65036	; 0xfe0c
   40fe8:	movt	r3, #3
   40fec:	str	r3, [sp]
   40ff0:	movw	r3, #3892	; 0xf34
   40ff4:	movt	r3, #4
   40ff8:	movw	r2, #3804	; 0xedc
   40ffc:	movt	r2, #4
   41000:	mov	r1, #0
   41004:	mov	r0, #13
   41008:	bl	2d0b4 <__assert_fail@plt+0x1a9c8>
   4100c:	mov	r3, r0
   41010:	mov	r2, r3
   41014:	ldr	r3, [fp, #-12]
   41018:	str	r2, [r3, #52]	; 0x34
   4101c:	ldr	r3, [fp, #-12]
   41020:	ldr	r3, [r3, #52]	; 0x34
   41024:	str	r3, [fp, #-8]
   41028:	ldr	r3, [fp, #-8]
   4102c:	cmp	r3, #0
   41030:	beq	4106c <__assert_fail@plt+0x2e980>
   41034:	ldr	r3, [fp, #-128]	; 0xffffff80
   41038:	ldrd	r2, [r3, #64]	; 0x40
   4103c:	strd	r2, [fp, #-124]	; 0xffffff84
   41040:	sub	r3, fp, #124	; 0x7c
   41044:	mov	r1, r3
   41048:	ldr	r0, [fp, #-8]
   4104c:	bl	2c810 <__assert_fail@plt+0x1a124>
   41050:	str	r0, [fp, #-16]
   41054:	ldr	r3, [fp, #-16]
   41058:	cmp	r3, #0
   4105c:	beq	4106c <__assert_fail@plt+0x2e980>
   41060:	ldr	r3, [fp, #-16]
   41064:	ldr	r3, [r3, #8]
   41068:	b	4111c <__assert_fail@plt+0x2ea30>
   4106c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   41070:	cmp	r3, #0
   41074:	blt	41094 <__assert_fail@plt+0x2e9a8>
   41078:	sub	r3, fp, #108	; 0x6c
   4107c:	mov	r1, r3
   41080:	ldr	r0, [fp, #-132]	; 0xffffff7c
   41084:	bl	11f78 <fstatfs64@plt>
   41088:	mov	r3, r0
   4108c:	cmp	r3, #0
   41090:	beq	4109c <__assert_fail@plt+0x2e9b0>
   41094:	mov	r3, #0
   41098:	b	4111c <__assert_fail@plt+0x2ea30>
   4109c:	ldr	r3, [fp, #-8]
   410a0:	cmp	r3, #0
   410a4:	beq	41118 <__assert_fail@plt+0x2ea2c>
   410a8:	mov	r0, #16
   410ac:	bl	43510 <__assert_fail@plt+0x30e24>
   410b0:	mov	r3, r0
   410b4:	str	r3, [fp, #-20]	; 0xffffffec
   410b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   410bc:	cmp	r3, #0
   410c0:	beq	41118 <__assert_fail@plt+0x2ea2c>
   410c4:	ldr	r3, [fp, #-128]	; 0xffffff80
   410c8:	ldrd	r2, [r3, #64]	; 0x40
   410cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   410d0:	strd	r2, [r1]
   410d4:	ldr	r2, [fp, #-108]	; 0xffffff94
   410d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   410dc:	str	r2, [r3, #8]
   410e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   410e4:	ldr	r0, [fp, #-8]
   410e8:	bl	2de60 <__assert_fail@plt+0x1b774>
   410ec:	str	r0, [fp, #-16]
   410f0:	ldr	r3, [fp, #-16]
   410f4:	cmp	r3, #0
   410f8:	beq	41110 <__assert_fail@plt+0x2ea24>
   410fc:	ldr	r2, [fp, #-16]
   41100:	ldr	r3, [fp, #-20]	; 0xffffffec
   41104:	cmp	r2, r3
   41108:	beq	41118 <__assert_fail@plt+0x2ea2c>
   4110c:	bl	12698 <abort@plt>
   41110:	ldr	r0, [fp, #-20]	; 0xffffffec
   41114:	bl	3fe0c <__assert_fail@plt+0x2d720>
   41118:	ldr	r3, [fp, #-108]	; 0xffffff94
   4111c:	mov	r0, r3
   41120:	sub	sp, fp, #4
   41124:	ldr	fp, [sp]
   41128:	add	sp, sp, #4
   4112c:	pop	{pc}		; (ldr pc, [sp], #4)
   41130:	str	fp, [sp, #-8]!
   41134:	str	lr, [sp, #4]
   41138:	add	fp, sp, #4
   4113c:	sub	sp, sp, #8
   41140:	str	r0, [fp, #-8]
   41144:	str	r1, [fp, #-12]
   41148:	ldr	r1, [fp, #-12]
   4114c:	ldr	r0, [fp, #-8]
   41150:	bl	40f8c <__assert_fail@plt+0x2e8a0>
   41154:	mov	r2, r0
   41158:	movw	r3, #26985	; 0x6969
   4115c:	cmp	r2, r3
   41160:	beq	41184 <__assert_fail@plt+0x2ea98>
   41164:	movw	r3, #6548	; 0x1994
   41168:	movt	r3, #258	; 0x102
   4116c:	cmp	r2, r3
   41170:	beq	41184 <__assert_fail@plt+0x2ea98>
   41174:	movw	r3, #19778	; 0x4d42
   41178:	movt	r3, #65363	; 0xff53
   4117c:	cmp	r2, r3
   41180:	bne	4118c <__assert_fail@plt+0x2eaa0>
   41184:	mov	r3, #0
   41188:	b	41190 <__assert_fail@plt+0x2eaa4>
   4118c:	mov	r3, #1
   41190:	mov	r0, r3
   41194:	sub	sp, fp, #4
   41198:	ldr	fp, [sp]
   4119c:	add	sp, sp, #4
   411a0:	pop	{pc}		; (ldr pc, [sp], #4)
   411a4:	str	fp, [sp, #-8]!
   411a8:	str	lr, [sp, #4]
   411ac:	add	fp, sp, #4
   411b0:	sub	sp, sp, #8
   411b4:	str	r0, [fp, #-8]
   411b8:	str	r1, [fp, #-12]
   411bc:	ldr	r1, [fp, #-12]
   411c0:	ldr	r0, [fp, #-8]
   411c4:	bl	40f8c <__assert_fail@plt+0x2e8a0>
   411c8:	mov	r3, r0
   411cc:	movw	r2, #26985	; 0x6969
   411d0:	cmp	r3, r2
   411d4:	beq	4121c <__assert_fail@plt+0x2eb30>
   411d8:	movw	r2, #26985	; 0x6969
   411dc:	cmp	r3, r2
   411e0:	bgt	41200 <__assert_fail@plt+0x2eb14>
   411e4:	movw	r2, #19778	; 0x4d42
   411e8:	movt	r2, #65363	; 0xff53
   411ec:	cmp	r3, r2
   411f0:	beq	4121c <__assert_fail@plt+0x2eb30>
   411f4:	cmp	r3, #0
   411f8:	beq	4121c <__assert_fail@plt+0x2eb30>
   411fc:	b	41224 <__assert_fail@plt+0x2eb38>
   41200:	movw	r2, #40864	; 0x9fa0
   41204:	cmp	r3, r2
   41208:	beq	4121c <__assert_fail@plt+0x2eb30>
   4120c:	movw	r2, #16719	; 0x414f
   41210:	movt	r2, #21318	; 0x5346
   41214:	cmp	r3, r2
   41218:	bne	41224 <__assert_fail@plt+0x2eb38>
   4121c:	mov	r3, #0
   41220:	b	41228 <__assert_fail@plt+0x2eb3c>
   41224:	mov	r3, #1
   41228:	mov	r0, r3
   4122c:	sub	sp, fp, #4
   41230:	ldr	fp, [sp]
   41234:	add	sp, sp, #4
   41238:	pop	{pc}		; (ldr pc, [sp], #4)
   4123c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   41240:	strd	r6, [sp, #8]
   41244:	str	fp, [sp, #16]
   41248:	str	lr, [sp, #20]
   4124c:	add	fp, sp, #20
   41250:	mov	r5, r0
   41254:	ldr	r3, [r5]
   41258:	cmp	r3, #0
   4125c:	beq	41270 <__assert_fail@plt+0x2eb84>
   41260:	ldr	r3, [r5, #48]	; 0x30
   41264:	and	r3, r3, #8192	; 0x2000
   41268:	cmp	r3, #0
   4126c:	beq	41278 <__assert_fail@plt+0x2eb8c>
   41270:	mov	r3, #0
   41274:	b	419cc <__assert_fail@plt+0x2f2e0>
   41278:	ldr	r4, [r5]
   4127c:	ldrh	r6, [r4, #60]	; 0x3c
   41280:	mov	r3, #3
   41284:	strh	r3, [r4, #60]	; 0x3c
   41288:	cmp	r6, #1
   4128c:	bne	412b0 <__assert_fail@plt+0x2ebc4>
   41290:	mov	r2, #0
   41294:	mov	r1, r4
   41298:	mov	r0, r5
   4129c:	bl	42924 <__assert_fail@plt+0x30238>
   412a0:	mov	r3, r0
   412a4:	strh	r3, [r4, #56]	; 0x38
   412a8:	mov	r3, r4
   412ac:	b	419cc <__assert_fail@plt+0x2f2e0>
   412b0:	cmp	r6, #2
   412b4:	bne	41358 <__assert_fail@plt+0x2ec6c>
   412b8:	ldrh	r3, [r4, #56]	; 0x38
   412bc:	cmp	r3, #12
   412c0:	beq	412d0 <__assert_fail@plt+0x2ebe4>
   412c4:	ldrh	r3, [r4, #56]	; 0x38
   412c8:	cmp	r3, #13
   412cc:	bne	41358 <__assert_fail@plt+0x2ec6c>
   412d0:	mov	r2, #1
   412d4:	mov	r1, r4
   412d8:	mov	r0, r5
   412dc:	bl	42924 <__assert_fail@plt+0x30238>
   412e0:	mov	r3, r0
   412e4:	strh	r3, [r4, #56]	; 0x38
   412e8:	ldrh	r3, [r4, #56]	; 0x38
   412ec:	cmp	r3, #1
   412f0:	bne	41718 <__assert_fail@plt+0x2f02c>
   412f4:	ldr	r3, [r5, #48]	; 0x30
   412f8:	and	r3, r3, #4
   412fc:	cmp	r3, #0
   41300:	bne	41718 <__assert_fail@plt+0x2f02c>
   41304:	movw	r1, #47044	; 0xb7c4
   41308:	movt	r1, #6
   4130c:	mov	r0, r5
   41310:	bl	406d0 <__assert_fail@plt+0x2dfe4>
   41314:	mov	r3, r0
   41318:	str	r3, [r4, #36]	; 0x24
   4131c:	ldr	r3, [r4, #36]	; 0x24
   41320:	cmp	r3, #0
   41324:	bge	41344 <__assert_fail@plt+0x2ec58>
   41328:	bl	12404 <__errno_location@plt>
   4132c:	mov	r3, r0
   41330:	ldr	r3, [r3]
   41334:	str	r3, [r4, #32]
   41338:	mov	r3, #7
   4133c:	strh	r3, [r4, #56]	; 0x38
   41340:	b	41718 <__assert_fail@plt+0x2f02c>
   41344:	ldrh	r3, [r4, #58]	; 0x3a
   41348:	orr	r3, r3, #2
   4134c:	uxth	r3, r3
   41350:	strh	r3, [r4, #58]	; 0x3a
   41354:	b	41718 <__assert_fail@plt+0x2f02c>
   41358:	ldrh	r3, [r4, #56]	; 0x38
   4135c:	cmp	r3, #1
   41360:	bne	41510 <__assert_fail@plt+0x2ee24>
   41364:	cmp	r6, #4
   41368:	beq	41390 <__assert_fail@plt+0x2eca4>
   4136c:	ldr	r3, [r5, #48]	; 0x30
   41370:	and	r3, r3, #64	; 0x40
   41374:	cmp	r3, #0
   41378:	beq	413e8 <__assert_fail@plt+0x2ecfc>
   4137c:	ldrd	r0, [r4, #64]	; 0x40
   41380:	ldrd	r2, [r5, #16]
   41384:	cmp	r1, r3
   41388:	cmpeq	r0, r2
   4138c:	beq	413e8 <__assert_fail@plt+0x2ecfc>
   41390:	ldrh	r3, [r4, #58]	; 0x3a
   41394:	and	r3, r3, #2
   41398:	cmp	r3, #0
   4139c:	beq	413ac <__assert_fail@plt+0x2ecc0>
   413a0:	ldr	r3, [r4, #36]	; 0x24
   413a4:	mov	r0, r3
   413a8:	bl	126a4 <close@plt>
   413ac:	ldr	r3, [r5, #4]
   413b0:	cmp	r3, #0
   413b4:	beq	413cc <__assert_fail@plt+0x2ece0>
   413b8:	ldr	r3, [r5, #4]
   413bc:	mov	r0, r3
   413c0:	bl	42da8 <__assert_fail@plt+0x306bc>
   413c4:	mov	r3, #0
   413c8:	str	r3, [r5, #4]
   413cc:	mov	r3, #6
   413d0:	strh	r3, [r4, #56]	; 0x38
   413d4:	mov	r1, r4
   413d8:	mov	r0, r5
   413dc:	bl	4028c <__assert_fail@plt+0x2dba0>
   413e0:	mov	r3, r4
   413e4:	b	419cc <__assert_fail@plt+0x2f2e0>
   413e8:	ldr	r3, [r5, #4]
   413ec:	cmp	r3, #0
   413f0:	beq	41424 <__assert_fail@plt+0x2ed38>
   413f4:	ldr	r3, [r5, #48]	; 0x30
   413f8:	and	r3, r3, #4096	; 0x1000
   413fc:	cmp	r3, #0
   41400:	beq	41424 <__assert_fail@plt+0x2ed38>
   41404:	ldr	r3, [r5, #48]	; 0x30
   41408:	bic	r3, r3, #4096	; 0x1000
   4140c:	str	r3, [r5, #48]	; 0x30
   41410:	ldr	r3, [r5, #4]
   41414:	mov	r0, r3
   41418:	bl	42da8 <__assert_fail@plt+0x306bc>
   4141c:	mov	r3, #0
   41420:	str	r3, [r5, #4]
   41424:	ldr	r3, [r5, #4]
   41428:	cmp	r3, #0
   4142c:	beq	41494 <__assert_fail@plt+0x2eda8>
   41430:	ldr	r3, [r4, #24]
   41434:	mvn	r2, #0
   41438:	mov	r1, r4
   4143c:	mov	r0, r5
   41440:	bl	430b8 <__assert_fail@plt+0x309cc>
   41444:	mov	r3, r0
   41448:	cmp	r3, #0
   4144c:	beq	41500 <__assert_fail@plt+0x2ee14>
   41450:	bl	12404 <__errno_location@plt>
   41454:	mov	r3, r0
   41458:	ldr	r3, [r3]
   4145c:	str	r3, [r4, #32]
   41460:	ldrh	r3, [r4, #58]	; 0x3a
   41464:	orr	r3, r3, #1
   41468:	uxth	r3, r3
   4146c:	strh	r3, [r4, #58]	; 0x3a
   41470:	ldr	r4, [r5, #4]
   41474:	b	41488 <__assert_fail@plt+0x2ed9c>
   41478:	ldr	r3, [r4, #4]
   4147c:	ldr	r3, [r3, #24]
   41480:	str	r3, [r4, #24]
   41484:	ldr	r4, [r4, #8]
   41488:	cmp	r4, #0
   4148c:	bne	41478 <__assert_fail@plt+0x2ed8c>
   41490:	b	41500 <__assert_fail@plt+0x2ee14>
   41494:	mov	r1, #3
   41498:	mov	r0, r5
   4149c:	bl	41dd0 <__assert_fail@plt+0x2f6e4>
   414a0:	mov	r3, r0
   414a4:	str	r3, [r5, #4]
   414a8:	ldr	r3, [r5, #4]
   414ac:	cmp	r3, #0
   414b0:	bne	41500 <__assert_fail@plt+0x2ee14>
   414b4:	ldr	r3, [r5, #48]	; 0x30
   414b8:	and	r3, r3, #8192	; 0x2000
   414bc:	cmp	r3, #0
   414c0:	beq	414cc <__assert_fail@plt+0x2ede0>
   414c4:	mov	r3, #0
   414c8:	b	419cc <__assert_fail@plt+0x2f2e0>
   414cc:	ldr	r3, [r4, #32]
   414d0:	cmp	r3, #0
   414d4:	beq	414ec <__assert_fail@plt+0x2ee00>
   414d8:	ldrh	r3, [r4, #56]	; 0x38
   414dc:	cmp	r3, #4
   414e0:	beq	414ec <__assert_fail@plt+0x2ee00>
   414e4:	mov	r3, #7
   414e8:	strh	r3, [r4, #56]	; 0x38
   414ec:	mov	r1, r4
   414f0:	mov	r0, r5
   414f4:	bl	4028c <__assert_fail@plt+0x2dba0>
   414f8:	mov	r3, r4
   414fc:	b	419cc <__assert_fail@plt+0x2f2e0>
   41500:	ldr	r4, [r5, #4]
   41504:	mov	r3, #0
   41508:	str	r3, [r5, #4]
   4150c:	b	416a8 <__assert_fail@plt+0x2efbc>
   41510:	nop	{0}
   41514:	mov	r6, r4
   41518:	ldr	r3, [r4, #8]
   4151c:	cmp	r3, #0
   41520:	bne	4158c <__assert_fail@plt+0x2eea0>
   41524:	ldr	r3, [r4, #4]
   41528:	ldr	r3, [r3, #12]
   4152c:	cmp	r3, #0
   41530:	beq	4158c <__assert_fail@plt+0x2eea0>
   41534:	ldr	r4, [r6, #4]
   41538:	str	r4, [r5]
   4153c:	ldr	r2, [r5, #24]
   41540:	ldr	r3, [r4, #40]	; 0x28
   41544:	add	r3, r2, r3
   41548:	mov	r2, #0
   4154c:	strb	r2, [r3]
   41550:	mov	r1, #3
   41554:	mov	r0, r5
   41558:	bl	41dd0 <__assert_fail@plt+0x2f6e4>
   4155c:	mov	r4, r0
   41560:	cmp	r4, #0
   41564:	bne	41580 <__assert_fail@plt+0x2ee94>
   41568:	ldr	r3, [r5, #48]	; 0x30
   4156c:	and	r3, r3, #8192	; 0x2000
   41570:	cmp	r3, #0
   41574:	beq	417cc <__assert_fail@plt+0x2f0e0>
   41578:	mov	r3, #0
   4157c:	b	419cc <__assert_fail@plt+0x2f2e0>
   41580:	mov	r0, r6
   41584:	bl	3fe0c <__assert_fail@plt+0x2d720>
   41588:	b	416a8 <__assert_fail@plt+0x2efbc>
   4158c:	ldr	r4, [r4, #8]
   41590:	cmp	r4, #0
   41594:	beq	417d4 <__assert_fail@plt+0x2f0e8>
   41598:	str	r4, [r5]
   4159c:	mov	r0, r6
   415a0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   415a4:	ldr	r3, [r4, #48]	; 0x30
   415a8:	cmp	r3, #0
   415ac:	bne	415f8 <__assert_fail@plt+0x2ef0c>
   415b0:	mov	r0, r5
   415b4:	bl	405ec <__assert_fail@plt+0x2df00>
   415b8:	mov	r3, r0
   415bc:	cmp	r3, #0
   415c0:	beq	415d8 <__assert_fail@plt+0x2eeec>
   415c4:	ldr	r3, [r5, #48]	; 0x30
   415c8:	orr	r3, r3, #8192	; 0x2000
   415cc:	str	r3, [r5, #48]	; 0x30
   415d0:	mov	r3, #0
   415d4:	b	419cc <__assert_fail@plt+0x2f2e0>
   415d8:	mov	r0, r5
   415dc:	bl	403d4 <__assert_fail@plt+0x2dce8>
   415e0:	mov	r1, r4
   415e4:	mov	r0, r5
   415e8:	bl	40c04 <__assert_fail@plt+0x2e518>
   415ec:	mov	r0, r5
   415f0:	bl	40070 <__assert_fail@plt+0x2d984>
   415f4:	b	4171c <__assert_fail@plt+0x2f030>
   415f8:	ldrh	r3, [r4, #60]	; 0x3c
   415fc:	cmp	r3, #4
   41600:	bne	41608 <__assert_fail@plt+0x2ef1c>
   41604:	b	41514 <__assert_fail@plt+0x2ee28>
   41608:	ldrh	r3, [r4, #60]	; 0x3c
   4160c:	cmp	r3, #2
   41610:	bne	416a4 <__assert_fail@plt+0x2efb8>
   41614:	mov	r2, #1
   41618:	mov	r1, r4
   4161c:	mov	r0, r5
   41620:	bl	42924 <__assert_fail@plt+0x30238>
   41624:	mov	r3, r0
   41628:	strh	r3, [r4, #56]	; 0x38
   4162c:	ldrh	r3, [r4, #56]	; 0x38
   41630:	cmp	r3, #1
   41634:	bne	41698 <__assert_fail@plt+0x2efac>
   41638:	ldr	r3, [r5, #48]	; 0x30
   4163c:	and	r3, r3, #4
   41640:	cmp	r3, #0
   41644:	bne	41698 <__assert_fail@plt+0x2efac>
   41648:	movw	r1, #47044	; 0xb7c4
   4164c:	movt	r1, #6
   41650:	mov	r0, r5
   41654:	bl	406d0 <__assert_fail@plt+0x2dfe4>
   41658:	mov	r3, r0
   4165c:	str	r3, [r4, #36]	; 0x24
   41660:	ldr	r3, [r4, #36]	; 0x24
   41664:	cmp	r3, #0
   41668:	bge	41688 <__assert_fail@plt+0x2ef9c>
   4166c:	bl	12404 <__errno_location@plt>
   41670:	mov	r3, r0
   41674:	ldr	r3, [r3]
   41678:	str	r3, [r4, #32]
   4167c:	mov	r3, #7
   41680:	strh	r3, [r4, #56]	; 0x38
   41684:	b	41698 <__assert_fail@plt+0x2efac>
   41688:	ldrh	r3, [r4, #58]	; 0x3a
   4168c:	orr	r3, r3, #2
   41690:	uxth	r3, r3
   41694:	strh	r3, [r4, #58]	; 0x3a
   41698:	mov	r3, #3
   4169c:	strh	r3, [r4, #60]	; 0x3c
   416a0:	b	416a8 <__assert_fail@plt+0x2efbc>
   416a4:	nop	{0}
   416a8:	ldr	r2, [r5, #24]
   416ac:	ldr	r3, [r4, #4]
   416b0:	ldr	r1, [r3, #28]
   416b4:	ldr	r3, [r4, #4]
   416b8:	ldr	r3, [r3, #40]	; 0x28
   416bc:	sub	r3, r3, #1
   416c0:	add	r3, r1, r3
   416c4:	ldrb	r3, [r3]
   416c8:	cmp	r3, #47	; 0x2f
   416cc:	bne	416e0 <__assert_fail@plt+0x2eff4>
   416d0:	ldr	r3, [r4, #4]
   416d4:	ldr	r3, [r3, #40]	; 0x28
   416d8:	sub	r3, r3, #1
   416dc:	b	416e8 <__assert_fail@plt+0x2effc>
   416e0:	ldr	r3, [r4, #4]
   416e4:	ldr	r3, [r3, #40]	; 0x28
   416e8:	add	r6, r2, r3
   416ec:	mov	r3, r6
   416f0:	add	r6, r3, #1
   416f4:	mov	r2, #47	; 0x2f
   416f8:	strb	r2, [r3]
   416fc:	add	r1, r4, #168	; 0xa8
   41700:	ldr	r3, [r4, #52]	; 0x34
   41704:	add	r3, r3, #1
   41708:	mov	r2, r3
   4170c:	mov	r0, r6
   41710:	bl	1208c <memmove@plt>
   41714:	b	4171c <__assert_fail@plt+0x2f030>
   41718:	nop	{0}
   4171c:	str	r4, [r5]
   41720:	ldrh	r3, [r4, #56]	; 0x38
   41724:	cmp	r3, #11
   41728:	bne	4176c <__assert_fail@plt+0x2f080>
   4172c:	ldrd	r2, [r4, #112]	; 0x70
   41730:	cmp	r3, #0
   41734:	cmpeq	r2, #2
   41738:	bne	41758 <__assert_fail@plt+0x2f06c>
   4173c:	mov	r2, #0
   41740:	mov	r1, r4
   41744:	mov	r0, r5
   41748:	bl	42924 <__assert_fail@plt+0x30238>
   4174c:	mov	r3, r0
   41750:	strh	r3, [r4, #56]	; 0x38
   41754:	b	4176c <__assert_fail@plt+0x2f080>
   41758:	ldrd	r2, [r4, #112]	; 0x70
   4175c:	cmp	r3, #0
   41760:	cmpeq	r2, #1
   41764:	beq	4176c <__assert_fail@plt+0x2f080>
   41768:	bl	12698 <abort@plt>
   4176c:	ldrh	r3, [r4, #56]	; 0x38
   41770:	cmp	r3, #1
   41774:	bne	417c4 <__assert_fail@plt+0x2f0d8>
   41778:	ldr	r3, [r4, #48]	; 0x30
   4177c:	cmp	r3, #0
   41780:	bne	4178c <__assert_fail@plt+0x2f0a0>
   41784:	ldrd	r2, [r4, #64]	; 0x40
   41788:	strd	r2, [r5, #16]
   4178c:	mov	r1, r4
   41790:	mov	r0, r5
   41794:	bl	40144 <__assert_fail@plt+0x2da58>
   41798:	mov	r3, r0
   4179c:	eor	r3, r3, #1
   417a0:	uxtb	r3, r3
   417a4:	cmp	r3, #0
   417a8:	beq	417c4 <__assert_fail@plt+0x2f0d8>
   417ac:	bl	12404 <__errno_location@plt>
   417b0:	mov	r2, r0
   417b4:	mov	r3, #12
   417b8:	str	r3, [r2]
   417bc:	mov	r3, #0
   417c0:	b	419cc <__assert_fail@plt+0x2f2e0>
   417c4:	mov	r3, r4
   417c8:	b	419cc <__assert_fail@plt+0x2f2e0>
   417cc:	nop	{0}
   417d0:	b	417d8 <__assert_fail@plt+0x2f0ec>
   417d4:	nop	{0}
   417d8:	ldr	r4, [r6, #4]
   417dc:	str	r4, [r5]
   417e0:	mov	r0, r6
   417e4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   417e8:	ldr	r3, [r4, #48]	; 0x30
   417ec:	cmn	r3, #1
   417f0:	bne	4181c <__assert_fail@plt+0x2f130>
   417f4:	mov	r0, r4
   417f8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   417fc:	bl	12404 <__errno_location@plt>
   41800:	mov	r2, r0
   41804:	mov	r3, #0
   41808:	str	r3, [r2]
   4180c:	mov	r3, #0
   41810:	str	r3, [r5]
   41814:	mov	r3, #0
   41818:	b	419cc <__assert_fail@plt+0x2f2e0>
   4181c:	ldrh	r3, [r4, #56]	; 0x38
   41820:	cmp	r3, #11
   41824:	bne	4182c <__assert_fail@plt+0x2f140>
   41828:	bl	12698 <abort@plt>
   4182c:	ldr	r2, [r5, #24]
   41830:	ldr	r3, [r4, #40]	; 0x28
   41834:	add	r3, r2, r3
   41838:	mov	r2, #0
   4183c:	strb	r2, [r3]
   41840:	ldr	r3, [r4, #48]	; 0x30
   41844:	cmp	r3, #0
   41848:	bne	41880 <__assert_fail@plt+0x2f194>
   4184c:	mov	r0, r5
   41850:	bl	405ec <__assert_fail@plt+0x2df00>
   41854:	mov	r3, r0
   41858:	cmp	r3, #0
   4185c:	beq	41970 <__assert_fail@plt+0x2f284>
   41860:	bl	12404 <__errno_location@plt>
   41864:	mov	r3, r0
   41868:	ldr	r3, [r3]
   4186c:	str	r3, [r4, #32]
   41870:	ldr	r3, [r5, #48]	; 0x30
   41874:	orr	r3, r3, #8192	; 0x2000
   41878:	str	r3, [r5, #48]	; 0x30
   4187c:	b	41970 <__assert_fail@plt+0x2f284>
   41880:	ldrh	r3, [r4, #58]	; 0x3a
   41884:	and	r3, r3, #2
   41888:	cmp	r3, #0
   4188c:	beq	41920 <__assert_fail@plt+0x2f234>
   41890:	ldr	r3, [r5, #48]	; 0x30
   41894:	and	r3, r3, #4
   41898:	cmp	r3, #0
   4189c:	bne	41910 <__assert_fail@plt+0x2f224>
   418a0:	ldr	r3, [r5, #48]	; 0x30
   418a4:	and	r3, r3, #512	; 0x200
   418a8:	cmp	r3, #0
   418ac:	beq	418cc <__assert_fail@plt+0x2f1e0>
   418b0:	ldr	r3, [r4, #36]	; 0x24
   418b4:	mov	r2, #1
   418b8:	mov	r1, r3
   418bc:	mov	r0, r5
   418c0:	bl	4051c <__assert_fail@plt+0x2de30>
   418c4:	mov	r3, #0
   418c8:	b	418ec <__assert_fail@plt+0x2f200>
   418cc:	ldr	r3, [r4, #36]	; 0x24
   418d0:	mov	r0, r3
   418d4:	bl	125d8 <fchdir@plt>
   418d8:	mov	r3, r0
   418dc:	cmp	r3, #0
   418e0:	movne	r3, #1
   418e4:	moveq	r3, #0
   418e8:	uxtb	r3, r3
   418ec:	cmp	r3, #0
   418f0:	beq	41910 <__assert_fail@plt+0x2f224>
   418f4:	bl	12404 <__errno_location@plt>
   418f8:	mov	r3, r0
   418fc:	ldr	r3, [r3]
   41900:	str	r3, [r4, #32]
   41904:	ldr	r3, [r5, #48]	; 0x30
   41908:	orr	r3, r3, #8192	; 0x2000
   4190c:	str	r3, [r5, #48]	; 0x30
   41910:	ldr	r3, [r4, #36]	; 0x24
   41914:	mov	r0, r3
   41918:	bl	126a4 <close@plt>
   4191c:	b	41970 <__assert_fail@plt+0x2f284>
   41920:	ldrh	r3, [r4, #58]	; 0x3a
   41924:	and	r3, r3, #1
   41928:	cmp	r3, #0
   4192c:	bne	41970 <__assert_fail@plt+0x2f284>
   41930:	ldr	r1, [r4, #4]
   41934:	movw	r3, #47048	; 0xb7c8
   41938:	movt	r3, #6
   4193c:	mvn	r2, #0
   41940:	mov	r0, r5
   41944:	bl	430b8 <__assert_fail@plt+0x309cc>
   41948:	mov	r3, r0
   4194c:	cmp	r3, #0
   41950:	beq	41970 <__assert_fail@plt+0x2f284>
   41954:	bl	12404 <__errno_location@plt>
   41958:	mov	r3, r0
   4195c:	ldr	r3, [r3]
   41960:	str	r3, [r4, #32]
   41964:	ldr	r3, [r5, #48]	; 0x30
   41968:	orr	r3, r3, #8192	; 0x2000
   4196c:	str	r3, [r5, #48]	; 0x30
   41970:	ldrh	r3, [r4, #56]	; 0x38
   41974:	cmp	r3, #2
   41978:	beq	419b0 <__assert_fail@plt+0x2f2c4>
   4197c:	ldr	r3, [r4, #32]
   41980:	cmp	r3, #0
   41984:	beq	41990 <__assert_fail@plt+0x2f2a4>
   41988:	mov	r3, #7
   4198c:	b	41994 <__assert_fail@plt+0x2f2a8>
   41990:	mov	r3, #6
   41994:	strh	r3, [r4, #56]	; 0x38
   41998:	ldr	r3, [r4, #32]
   4199c:	cmp	r3, #0
   419a0:	bne	419b0 <__assert_fail@plt+0x2f2c4>
   419a4:	mov	r1, r4
   419a8:	mov	r0, r5
   419ac:	bl	4028c <__assert_fail@plt+0x2dba0>
   419b0:	ldr	r3, [r5, #48]	; 0x30
   419b4:	and	r3, r3, #8192	; 0x2000
   419b8:	cmp	r3, #0
   419bc:	bne	419c8 <__assert_fail@plt+0x2f2dc>
   419c0:	mov	r3, r4
   419c4:	b	419cc <__assert_fail@plt+0x2f2e0>
   419c8:	mov	r3, #0
   419cc:	mov	r0, r3
   419d0:	sub	sp, fp, #20
   419d4:	ldrd	r4, [sp]
   419d8:	ldrd	r6, [sp, #8]
   419dc:	ldr	fp, [sp, #16]
   419e0:	add	sp, sp, #20
   419e4:	pop	{pc}		; (ldr pc, [sp], #4)
   419e8:	str	fp, [sp, #-8]!
   419ec:	str	lr, [sp, #4]
   419f0:	add	fp, sp, #4
   419f4:	sub	sp, sp, #16
   419f8:	str	r0, [fp, #-8]
   419fc:	str	r1, [fp, #-12]
   41a00:	str	r2, [fp, #-16]
   41a04:	ldr	r3, [fp, #-16]
   41a08:	cmp	r3, #0
   41a0c:	beq	41a58 <__assert_fail@plt+0x2f36c>
   41a10:	ldr	r3, [fp, #-16]
   41a14:	cmp	r3, #1
   41a18:	beq	41a58 <__assert_fail@plt+0x2f36c>
   41a1c:	ldr	r3, [fp, #-16]
   41a20:	cmp	r3, #2
   41a24:	beq	41a58 <__assert_fail@plt+0x2f36c>
   41a28:	ldr	r3, [fp, #-16]
   41a2c:	cmp	r3, #3
   41a30:	beq	41a58 <__assert_fail@plt+0x2f36c>
   41a34:	ldr	r3, [fp, #-16]
   41a38:	cmp	r3, #4
   41a3c:	beq	41a58 <__assert_fail@plt+0x2f36c>
   41a40:	bl	12404 <__errno_location@plt>
   41a44:	mov	r2, r0
   41a48:	mov	r3, #22
   41a4c:	str	r3, [r2]
   41a50:	mov	r3, #1
   41a54:	b	41a6c <__assert_fail@plt+0x2f380>
   41a58:	ldr	r3, [fp, #-16]
   41a5c:	uxth	r2, r3
   41a60:	ldr	r3, [fp, #-12]
   41a64:	strh	r2, [r3, #60]	; 0x3c
   41a68:	mov	r3, #0
   41a6c:	mov	r0, r3
   41a70:	sub	sp, fp, #4
   41a74:	ldr	fp, [sp]
   41a78:	add	sp, sp, #4
   41a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   41a80:	strd	r4, [sp, #-16]!
   41a84:	str	fp, [sp, #8]
   41a88:	str	lr, [sp, #12]
   41a8c:	add	fp, sp, #12
   41a90:	sub	sp, sp, #16
   41a94:	mov	r4, r0
   41a98:	str	r1, [fp, #-24]	; 0xffffffe8
   41a9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41aa0:	cmp	r3, #0
   41aa4:	beq	41acc <__assert_fail@plt+0x2f3e0>
   41aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41aac:	cmp	r3, #4096	; 0x1000
   41ab0:	beq	41acc <__assert_fail@plt+0x2f3e0>
   41ab4:	bl	12404 <__errno_location@plt>
   41ab8:	mov	r2, r0
   41abc:	mov	r3, #22
   41ac0:	str	r3, [r2]
   41ac4:	mov	r3, #0
   41ac8:	b	41c64 <__assert_fail@plt+0x2f578>
   41acc:	ldr	r5, [r4]
   41ad0:	bl	12404 <__errno_location@plt>
   41ad4:	mov	r2, r0
   41ad8:	mov	r3, #0
   41adc:	str	r3, [r2]
   41ae0:	ldr	r3, [r4, #48]	; 0x30
   41ae4:	and	r3, r3, #8192	; 0x2000
   41ae8:	cmp	r3, #0
   41aec:	beq	41af8 <__assert_fail@plt+0x2f40c>
   41af0:	mov	r3, #0
   41af4:	b	41c64 <__assert_fail@plt+0x2f578>
   41af8:	ldrh	r3, [r5, #56]	; 0x38
   41afc:	cmp	r3, #9
   41b00:	bne	41b0c <__assert_fail@plt+0x2f420>
   41b04:	ldr	r3, [r5, #8]
   41b08:	b	41c64 <__assert_fail@plt+0x2f578>
   41b0c:	ldrh	r3, [r5, #56]	; 0x38
   41b10:	cmp	r3, #1
   41b14:	beq	41b20 <__assert_fail@plt+0x2f434>
   41b18:	mov	r3, #0
   41b1c:	b	41c64 <__assert_fail@plt+0x2f578>
   41b20:	ldr	r3, [r4, #4]
   41b24:	cmp	r3, #0
   41b28:	beq	41b38 <__assert_fail@plt+0x2f44c>
   41b2c:	ldr	r3, [r4, #4]
   41b30:	mov	r0, r3
   41b34:	bl	42da8 <__assert_fail@plt+0x306bc>
   41b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41b3c:	cmp	r3, #4096	; 0x1000
   41b40:	bne	41b5c <__assert_fail@plt+0x2f470>
   41b44:	ldr	r3, [r4, #48]	; 0x30
   41b48:	orr	r3, r3, #4096	; 0x1000
   41b4c:	str	r3, [r4, #48]	; 0x30
   41b50:	mov	r3, #2
   41b54:	str	r3, [fp, #-24]	; 0xffffffe8
   41b58:	b	41b64 <__assert_fail@plt+0x2f478>
   41b5c:	mov	r3, #1
   41b60:	str	r3, [fp, #-24]	; 0xffffffe8
   41b64:	ldr	r3, [r5, #48]	; 0x30
   41b68:	cmp	r3, #0
   41b6c:	bne	41b90 <__assert_fail@plt+0x2f4a4>
   41b70:	ldr	r3, [r5, #24]
   41b74:	ldrb	r3, [r3]
   41b78:	cmp	r3, #47	; 0x2f
   41b7c:	beq	41b90 <__assert_fail@plt+0x2f4a4>
   41b80:	ldr	r3, [r4, #48]	; 0x30
   41b84:	and	r3, r3, #4
   41b88:	cmp	r3, #0
   41b8c:	beq	41bac <__assert_fail@plt+0x2f4c0>
   41b90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   41b94:	mov	r0, r4
   41b98:	bl	41dd0 <__assert_fail@plt+0x2f6e4>
   41b9c:	mov	r3, r0
   41ba0:	str	r3, [r4, #4]
   41ba4:	ldr	r3, [r4, #4]
   41ba8:	b	41c64 <__assert_fail@plt+0x2f578>
   41bac:	movw	r1, #47044	; 0xb7c4
   41bb0:	movt	r1, #6
   41bb4:	mov	r0, r4
   41bb8:	bl	406d0 <__assert_fail@plt+0x2dfe4>
   41bbc:	str	r0, [fp, #-16]
   41bc0:	ldr	r3, [fp, #-16]
   41bc4:	cmp	r3, #0
   41bc8:	bge	41bdc <__assert_fail@plt+0x2f4f0>
   41bcc:	mov	r3, #0
   41bd0:	str	r3, [r4, #4]
   41bd4:	mov	r3, #0
   41bd8:	b	41c64 <__assert_fail@plt+0x2f578>
   41bdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   41be0:	mov	r0, r4
   41be4:	bl	41dd0 <__assert_fail@plt+0x2f6e4>
   41be8:	mov	r3, r0
   41bec:	str	r3, [r4, #4]
   41bf0:	ldr	r3, [r4, #48]	; 0x30
   41bf4:	and	r3, r3, #512	; 0x200
   41bf8:	cmp	r3, #0
   41bfc:	beq	41c14 <__assert_fail@plt+0x2f528>
   41c00:	mov	r2, #1
   41c04:	ldr	r1, [fp, #-16]
   41c08:	mov	r0, r4
   41c0c:	bl	4051c <__assert_fail@plt+0x2de30>
   41c10:	b	41c60 <__assert_fail@plt+0x2f574>
   41c14:	ldr	r0, [fp, #-16]
   41c18:	bl	125d8 <fchdir@plt>
   41c1c:	mov	r3, r0
   41c20:	cmp	r3, #0
   41c24:	beq	41c58 <__assert_fail@plt+0x2f56c>
   41c28:	bl	12404 <__errno_location@plt>
   41c2c:	mov	r3, r0
   41c30:	ldr	r3, [r3]
   41c34:	str	r3, [fp, #-20]	; 0xffffffec
   41c38:	ldr	r0, [fp, #-16]
   41c3c:	bl	126a4 <close@plt>
   41c40:	bl	12404 <__errno_location@plt>
   41c44:	mov	r2, r0
   41c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   41c4c:	str	r3, [r2]
   41c50:	mov	r3, #0
   41c54:	b	41c64 <__assert_fail@plt+0x2f578>
   41c58:	ldr	r0, [fp, #-16]
   41c5c:	bl	126a4 <close@plt>
   41c60:	ldr	r3, [r4, #4]
   41c64:	mov	r0, r3
   41c68:	sub	sp, fp, #12
   41c6c:	ldrd	r4, [sp]
   41c70:	ldr	fp, [sp, #8]
   41c74:	add	sp, sp, #12
   41c78:	pop	{pc}		; (ldr pc, [sp], #4)
   41c7c:	push	{fp}		; (str fp, [sp, #-4]!)
   41c80:	add	fp, sp, #0
   41c84:	sub	sp, sp, #12
   41c88:	str	r0, [fp, #-8]
   41c8c:	str	r1, [fp, #-12]
   41c90:	ldr	r3, [fp, #-8]
   41c94:	ldr	r3, [r3]
   41c98:	ldrd	r0, [r3, #160]	; 0xa0
   41c9c:	ldr	r3, [fp, #-12]
   41ca0:	ldr	r3, [r3]
   41ca4:	ldrd	r2, [r3, #160]	; 0xa0
   41ca8:	cmp	r1, r3
   41cac:	cmpeq	r0, r2
   41cb0:	movhi	r3, #1
   41cb4:	movls	r3, #0
   41cb8:	uxtb	r3, r3
   41cbc:	mov	ip, r3
   41cc0:	ldr	r3, [fp, #-8]
   41cc4:	ldr	r3, [r3]
   41cc8:	ldrd	r0, [r3, #160]	; 0xa0
   41ccc:	ldr	r3, [fp, #-12]
   41cd0:	ldr	r3, [r3]
   41cd4:	ldrd	r2, [r3, #160]	; 0xa0
   41cd8:	cmp	r1, r3
   41cdc:	cmpeq	r0, r2
   41ce0:	movcc	r3, #1
   41ce4:	movcs	r3, #0
   41ce8:	uxtb	r3, r3
   41cec:	sub	r3, ip, r3
   41cf0:	mov	r0, r3
   41cf4:	add	sp, fp, #0
   41cf8:	pop	{fp}		; (ldr fp, [sp], #4)
   41cfc:	bx	lr
   41d00:	push	{fp}		; (str fp, [sp, #-4]!)
   41d04:	add	fp, sp, #0
   41d08:	sub	sp, sp, #20
   41d0c:	str	r0, [fp, #-16]
   41d10:	str	r1, [fp, #-20]	; 0xffffffec
   41d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   41d18:	sub	r3, r3, #1
   41d1c:	cmp	r3, #11
   41d20:	ldrls	pc, [pc, r3, lsl #2]
   41d24:	b	41dac <__assert_fail@plt+0x2f6c0>
   41d28:	andeq	r1, r4, ip, ror sp
   41d2c:	andeq	r1, r4, r4, ror #26
   41d30:	andeq	r1, r4, ip, lsr #27
   41d34:	andeq	r1, r4, r0, ror sp
   41d38:	andeq	r1, r4, ip, lsr #27
   41d3c:	andeq	r1, r4, r8, asr sp
   41d40:	andeq	r1, r4, ip, lsr #27
   41d44:	muleq	r4, r4, sp
   41d48:	andeq	r1, r4, ip, lsr #27
   41d4c:	andeq	r1, r4, r8, lsl #27
   41d50:	andeq	r1, r4, ip, lsr #27
   41d54:	andeq	r1, r4, r0, lsr #27
   41d58:	mov	r3, #24576	; 0x6000
   41d5c:	str	r3, [fp, #-8]
   41d60:	b	41db4 <__assert_fail@plt+0x2f6c8>
   41d64:	mov	r3, #8192	; 0x2000
   41d68:	str	r3, [fp, #-8]
   41d6c:	b	41db4 <__assert_fail@plt+0x2f6c8>
   41d70:	mov	r3, #16384	; 0x4000
   41d74:	str	r3, [fp, #-8]
   41d78:	b	41db4 <__assert_fail@plt+0x2f6c8>
   41d7c:	mov	r3, #4096	; 0x1000
   41d80:	str	r3, [fp, #-8]
   41d84:	b	41db4 <__assert_fail@plt+0x2f6c8>
   41d88:	mov	r3, #40960	; 0xa000
   41d8c:	str	r3, [fp, #-8]
   41d90:	b	41db4 <__assert_fail@plt+0x2f6c8>
   41d94:	mov	r3, #32768	; 0x8000
   41d98:	str	r3, [fp, #-8]
   41d9c:	b	41db4 <__assert_fail@plt+0x2f6c8>
   41da0:	mov	r3, #49152	; 0xc000
   41da4:	str	r3, [fp, #-8]
   41da8:	b	41db4 <__assert_fail@plt+0x2f6c8>
   41dac:	mov	r3, #0
   41db0:	str	r3, [fp, #-8]
   41db4:	ldr	r3, [fp, #-16]
   41db8:	ldr	r2, [fp, #-8]
   41dbc:	str	r2, [r3, #16]
   41dc0:	nop	{0}
   41dc4:	add	sp, fp, #0
   41dc8:	pop	{fp}		; (ldr fp, [sp], #4)
   41dcc:	bx	lr
   41dd0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   41dd4:	strd	r6, [sp, #8]
   41dd8:	str	fp, [sp, #16]
   41ddc:	str	lr, [sp, #20]
   41de0:	add	fp, sp, #20
   41de4:	sub	sp, sp, #80	; 0x50
   41de8:	mov	r4, r0
   41dec:	str	r1, [fp, #-96]	; 0xffffffa0
   41df0:	ldr	r3, [r4]
   41df4:	str	r3, [fp, #-44]	; 0xffffffd4
   41df8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41dfc:	ldr	r3, [r3, #12]
   41e00:	cmp	r3, #0
   41e04:	movne	r3, #1
   41e08:	moveq	r3, #0
   41e0c:	strb	r3, [fp, #-45]	; 0xffffffd3
   41e10:	mov	r3, #0
   41e14:	strb	r3, [fp, #-37]	; 0xffffffdb
   41e18:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   41e1c:	cmp	r3, #0
   41e20:	beq	41e9c <__assert_fail@plt+0x2f7b0>
   41e24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e28:	ldr	r3, [r3, #12]
   41e2c:	str	r3, [fp, #-52]	; 0xffffffcc
   41e30:	ldr	r0, [fp, #-52]	; 0xffffffcc
   41e34:	bl	125cc <dirfd@plt>
   41e38:	mov	r3, r0
   41e3c:	str	r3, [fp, #-92]	; 0xffffffa4
   41e40:	ldr	r3, [fp, #-92]	; 0xffffffa4
   41e44:	cmp	r3, #0
   41e48:	bge	42000 <__assert_fail@plt+0x2f914>
   41e4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e50:	ldr	r3, [r3, #12]
   41e54:	mov	r0, r3
   41e58:	bl	126bc <closedir@plt>
   41e5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e60:	mov	r2, #0
   41e64:	str	r2, [r3, #12]
   41e68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41e6c:	cmp	r3, #3
   41e70:	bne	41e94 <__assert_fail@plt+0x2f7a8>
   41e74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e78:	mov	r2, #4
   41e7c:	strh	r2, [r3, #56]	; 0x38
   41e80:	bl	12404 <__errno_location@plt>
   41e84:	mov	r3, r0
   41e88:	ldr	r2, [r3]
   41e8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41e90:	str	r2, [r3, #32]
   41e94:	mov	r3, #0
   41e98:	b	42908 <__assert_fail@plt+0x3021c>
   41e9c:	ldr	r3, [r4, #48]	; 0x30
   41ea0:	and	r3, r3, #4
   41ea4:	cmp	r3, #0
   41ea8:	bne	41ec4 <__assert_fail@plt+0x2f7d8>
   41eac:	ldr	r3, [r4, #48]	; 0x30
   41eb0:	and	r3, r3, #512	; 0x200
   41eb4:	cmp	r3, #0
   41eb8:	beq	41ec4 <__assert_fail@plt+0x2f7d8>
   41ebc:	ldr	r0, [r4, #32]
   41ec0:	b	41ec8 <__assert_fail@plt+0x2f7dc>
   41ec4:	mvn	r0, #99	; 0x63
   41ec8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41ecc:	ldr	r1, [r3, #24]
   41ed0:	ldr	r3, [r4, #48]	; 0x30
   41ed4:	and	r3, r3, #16
   41ed8:	cmp	r3, #0
   41edc:	beq	41f08 <__assert_fail@plt+0x2f81c>
   41ee0:	ldr	r3, [r4, #48]	; 0x30
   41ee4:	and	r3, r3, #1
   41ee8:	cmp	r3, #0
   41eec:	beq	41f00 <__assert_fail@plt+0x2f814>
   41ef0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41ef4:	ldr	r3, [r3, #48]	; 0x30
   41ef8:	cmp	r3, #0
   41efc:	beq	41f08 <__assert_fail@plt+0x2f81c>
   41f00:	mov	r2, #32768	; 0x8000
   41f04:	b	41f0c <__assert_fail@plt+0x2f820>
   41f08:	mov	r2, #0
   41f0c:	sub	r3, fp, #92	; 0x5c
   41f10:	bl	64374 <__assert_fail@plt+0x51c88>
   41f14:	mov	r3, r0
   41f18:	mov	r2, r3
   41f1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f20:	str	r2, [r3, #12]
   41f24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f28:	ldr	r3, [r3, #12]
   41f2c:	cmp	r3, #0
   41f30:	bne	41f68 <__assert_fail@plt+0x2f87c>
   41f34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   41f38:	cmp	r3, #3
   41f3c:	bne	41f60 <__assert_fail@plt+0x2f874>
   41f40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f44:	mov	r2, #4
   41f48:	strh	r2, [r3, #56]	; 0x38
   41f4c:	bl	12404 <__errno_location@plt>
   41f50:	mov	r3, r0
   41f54:	ldr	r2, [r3]
   41f58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f5c:	str	r2, [r3, #32]
   41f60:	mov	r3, #0
   41f64:	b	42908 <__assert_fail@plt+0x3021c>
   41f68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f6c:	ldrh	r3, [r3, #56]	; 0x38
   41f70:	cmp	r3, #11
   41f74:	bne	41f9c <__assert_fail@plt+0x2f8b0>
   41f78:	mov	r2, #0
   41f7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41f80:	mov	r0, r4
   41f84:	bl	42924 <__assert_fail@plt+0x30238>
   41f88:	mov	r3, r0
   41f8c:	mov	r2, r3
   41f90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f94:	strh	r2, [r3, #56]	; 0x38
   41f98:	b	42000 <__assert_fail@plt+0x2f914>
   41f9c:	ldr	r3, [r4, #48]	; 0x30
   41fa0:	and	r3, r3, #256	; 0x100
   41fa4:	cmp	r3, #0
   41fa8:	beq	42000 <__assert_fail@plt+0x2f914>
   41fac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41fb0:	mov	r0, r4
   41fb4:	bl	4028c <__assert_fail@plt+0x2dba0>
   41fb8:	mov	r2, #0
   41fbc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41fc0:	mov	r0, r4
   41fc4:	bl	42924 <__assert_fail@plt+0x30238>
   41fc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41fcc:	mov	r0, r4
   41fd0:	bl	40144 <__assert_fail@plt+0x2da58>
   41fd4:	mov	r3, r0
   41fd8:	eor	r3, r3, #1
   41fdc:	uxtb	r3, r3
   41fe0:	cmp	r3, #0
   41fe4:	beq	42000 <__assert_fail@plt+0x2f914>
   41fe8:	bl	12404 <__errno_location@plt>
   41fec:	mov	r2, r0
   41ff0:	mov	r3, #12
   41ff4:	str	r3, [r2]
   41ff8:	mov	r3, #0
   41ffc:	b	42908 <__assert_fail@plt+0x3021c>
   42000:	ldr	r3, [r4, #44]	; 0x2c
   42004:	cmp	r3, #0
   42008:	beq	42014 <__assert_fail@plt+0x2f928>
   4200c:	mvn	r3, #0
   42010:	b	4201c <__assert_fail@plt+0x2f930>
   42014:	movw	r3, #34464	; 0x86a0
   42018:	movt	r3, #1
   4201c:	str	r3, [fp, #-56]	; 0xffffffc8
   42020:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   42024:	cmp	r3, #0
   42028:	beq	42038 <__assert_fail@plt+0x2f94c>
   4202c:	mov	r3, #1
   42030:	strb	r3, [fp, #-25]	; 0xffffffe7
   42034:	b	421d4 <__assert_fail@plt+0x2fae8>
   42038:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4203c:	cmp	r3, #2
   42040:	beq	420a8 <__assert_fail@plt+0x2f9bc>
   42044:	ldr	r3, [r4, #48]	; 0x30
   42048:	and	r3, r3, #8
   4204c:	cmp	r3, #0
   42050:	beq	420a0 <__assert_fail@plt+0x2f9b4>
   42054:	ldr	r3, [r4, #48]	; 0x30
   42058:	and	r3, r3, #16
   4205c:	cmp	r3, #0
   42060:	beq	420a0 <__assert_fail@plt+0x2f9b4>
   42064:	ldr	r3, [r4, #48]	; 0x30
   42068:	and	r3, r3, #32
   4206c:	cmp	r3, #0
   42070:	bne	420a0 <__assert_fail@plt+0x2f9b4>
   42074:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42078:	ldr	r3, [r3, #84]	; 0x54
   4207c:	cmp	r3, #2
   42080:	bne	420a0 <__assert_fail@plt+0x2f9b4>
   42084:	ldr	r3, [fp, #-92]	; 0xffffffa4
   42088:	mov	r1, r3
   4208c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   42090:	bl	411a4 <__assert_fail@plt+0x2eab8>
   42094:	mov	r3, r0
   42098:	cmp	r3, #0
   4209c:	bne	420a8 <__assert_fail@plt+0x2f9bc>
   420a0:	mov	r3, #1
   420a4:	b	420ac <__assert_fail@plt+0x2f9c0>
   420a8:	mov	r3, #0
   420ac:	strb	r3, [fp, #-25]	; 0xffffffe7
   420b0:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   420b4:	and	r3, r3, #1
   420b8:	strb	r3, [fp, #-25]	; 0xffffffe7
   420bc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   420c0:	cmp	r3, #0
   420c4:	bne	420d4 <__assert_fail@plt+0x2f9e8>
   420c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   420cc:	cmp	r3, #3
   420d0:	bne	421d4 <__assert_fail@plt+0x2fae8>
   420d4:	ldr	r3, [r4, #48]	; 0x30
   420d8:	and	r3, r3, #512	; 0x200
   420dc:	cmp	r3, #0
   420e0:	beq	42100 <__assert_fail@plt+0x2fa14>
   420e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   420e8:	mov	r2, #3
   420ec:	movw	r1, #1030	; 0x406
   420f0:	mov	r0, r3
   420f4:	bl	3f968 <__assert_fail@plt+0x2d27c>
   420f8:	mov	r3, r0
   420fc:	str	r3, [fp, #-92]	; 0xffffffa4
   42100:	ldr	r3, [fp, #-92]	; 0xffffffa4
   42104:	cmp	r3, #0
   42108:	blt	4212c <__assert_fail@plt+0x2fa40>
   4210c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   42110:	mov	r3, #0
   42114:	ldr	r1, [fp, #-44]	; 0xffffffd4
   42118:	mov	r0, r4
   4211c:	bl	430b8 <__assert_fail@plt+0x309cc>
   42120:	mov	r3, r0
   42124:	cmp	r3, #0
   42128:	beq	421cc <__assert_fail@plt+0x2fae0>
   4212c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   42130:	cmp	r3, #0
   42134:	beq	42158 <__assert_fail@plt+0x2fa6c>
   42138:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4213c:	cmp	r3, #3
   42140:	bne	42158 <__assert_fail@plt+0x2fa6c>
   42144:	bl	12404 <__errno_location@plt>
   42148:	mov	r3, r0
   4214c:	ldr	r2, [r3]
   42150:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42154:	str	r2, [r3, #32]
   42158:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4215c:	ldrh	r3, [r3, #58]	; 0x3a
   42160:	orr	r3, r3, #1
   42164:	uxth	r2, r3
   42168:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4216c:	strh	r2, [r3, #58]	; 0x3a
   42170:	mov	r3, #0
   42174:	strb	r3, [fp, #-25]	; 0xffffffe7
   42178:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4217c:	ldr	r3, [r3, #12]
   42180:	mov	r0, r3
   42184:	bl	126bc <closedir@plt>
   42188:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4218c:	mov	r2, #0
   42190:	str	r2, [r3, #12]
   42194:	ldr	r3, [r4, #48]	; 0x30
   42198:	and	r3, r3, #512	; 0x200
   4219c:	cmp	r3, #0
   421a0:	beq	421bc <__assert_fail@plt+0x2fad0>
   421a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   421a8:	cmp	r3, #0
   421ac:	blt	421bc <__assert_fail@plt+0x2fad0>
   421b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   421b4:	mov	r0, r3
   421b8:	bl	126a4 <close@plt>
   421bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   421c0:	mov	r2, #0
   421c4:	str	r2, [r3, #12]
   421c8:	b	421d4 <__assert_fail@plt+0x2fae8>
   421cc:	mov	r3, #1
   421d0:	strb	r3, [fp, #-25]	; 0xffffffe7
   421d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   421d8:	ldr	r2, [r3, #28]
   421dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   421e0:	ldr	r3, [r3, #40]	; 0x28
   421e4:	sub	r3, r3, #1
   421e8:	add	r3, r2, r3
   421ec:	ldrb	r3, [r3]
   421f0:	cmp	r3, #47	; 0x2f
   421f4:	bne	42208 <__assert_fail@plt+0x2fb1c>
   421f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   421fc:	ldr	r3, [r3, #40]	; 0x28
   42200:	sub	r3, r3, #1
   42204:	b	42210 <__assert_fail@plt+0x2fb24>
   42208:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4220c:	ldr	r3, [r3, #40]	; 0x28
   42210:	str	r3, [fp, #-60]	; 0xffffffc4
   42214:	ldr	r3, [r4, #48]	; 0x30
   42218:	and	r3, r3, #4
   4221c:	cmp	r3, #0
   42220:	beq	4224c <__assert_fail@plt+0x2fb60>
   42224:	ldr	r2, [r4, #24]
   42228:	ldr	r3, [fp, #-60]	; 0xffffffc4
   4222c:	add	r3, r2, r3
   42230:	str	r3, [fp, #-36]	; 0xffffffdc
   42234:	ldr	r3, [fp, #-36]	; 0xffffffdc
   42238:	add	r2, r3, #1
   4223c:	str	r2, [fp, #-36]	; 0xffffffdc
   42240:	mov	r2, #47	; 0x2f
   42244:	strb	r2, [r3]
   42248:	b	42254 <__assert_fail@plt+0x2fb68>
   4224c:	mov	r3, #0
   42250:	str	r3, [fp, #-36]	; 0xffffffdc
   42254:	ldr	r3, [fp, #-60]	; 0xffffffc4
   42258:	add	r3, r3, #1
   4225c:	str	r3, [fp, #-60]	; 0xffffffc4
   42260:	ldr	r2, [r4, #36]	; 0x24
   42264:	ldr	r3, [fp, #-60]	; 0xffffffc4
   42268:	sub	r3, r2, r3
   4226c:	str	r3, [fp, #-32]	; 0xffffffe0
   42270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42274:	ldr	r3, [r3, #48]	; 0x30
   42278:	add	r3, r3, #1
   4227c:	str	r3, [fp, #-64]	; 0xffffffc0
   42280:	mov	r3, #0
   42284:	strb	r3, [fp, #-26]	; 0xffffffe6
   42288:	mov	r7, #0
   4228c:	mov	r3, #0
   42290:	str	r3, [fp, #-24]	; 0xffffffe8
   42294:	mov	r6, #0
   42298:	b	426e8 <__assert_fail@plt+0x2fffc>
   4229c:	bl	12404 <__errno_location@plt>
   422a0:	mov	r2, r0
   422a4:	mov	r3, #0
   422a8:	str	r3, [r2]
   422ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   422b0:	ldr	r3, [r3, #12]
   422b4:	mov	r0, r3
   422b8:	bl	1259c <readdir64@plt>
   422bc:	str	r0, [fp, #-68]	; 0xffffffbc
   422c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   422c4:	cmp	r3, #0
   422c8:	bne	42320 <__assert_fail@plt+0x2fc34>
   422cc:	bl	12404 <__errno_location@plt>
   422d0:	mov	r3, r0
   422d4:	ldr	r3, [r3]
   422d8:	cmp	r3, #0
   422dc:	beq	426fc <__assert_fail@plt+0x30010>
   422e0:	bl	12404 <__errno_location@plt>
   422e4:	mov	r3, r0
   422e8:	ldr	r2, [r3]
   422ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   422f0:	str	r2, [r3, #32]
   422f4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   422f8:	cmp	r3, #0
   422fc:	bne	42308 <__assert_fail@plt+0x2fc1c>
   42300:	cmp	r6, #0
   42304:	beq	42310 <__assert_fail@plt+0x2fc24>
   42308:	mov	r2, #7
   4230c:	b	42314 <__assert_fail@plt+0x2fc28>
   42310:	mov	r2, #4
   42314:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42318:	strh	r2, [r3, #56]	; 0x38
   4231c:	b	426fc <__assert_fail@plt+0x30010>
   42320:	ldr	r3, [r4, #48]	; 0x30
   42324:	and	r3, r3, #32
   42328:	cmp	r3, #0
   4232c:	bne	42374 <__assert_fail@plt+0x2fc88>
   42330:	ldr	r3, [fp, #-68]	; 0xffffffbc
   42334:	ldrb	r3, [r3, #19]
   42338:	cmp	r3, #46	; 0x2e
   4233c:	bne	42374 <__assert_fail@plt+0x2fc88>
   42340:	ldr	r3, [fp, #-68]	; 0xffffffbc
   42344:	ldrb	r3, [r3, #20]
   42348:	cmp	r3, #0
   4234c:	beq	426e8 <__assert_fail@plt+0x2fffc>
   42350:	ldr	r3, [fp, #-68]	; 0xffffffbc
   42354:	ldrb	r3, [r3, #20]
   42358:	cmp	r3, #46	; 0x2e
   4235c:	bne	42374 <__assert_fail@plt+0x2fc88>
   42360:	ldr	r3, [fp, #-68]	; 0xffffffbc
   42364:	ldrb	r3, [r3, #21]
   42368:	cmp	r3, #0
   4236c:	bne	42374 <__assert_fail@plt+0x2fc88>
   42370:	b	426e8 <__assert_fail@plt+0x2fffc>
   42374:	ldr	r3, [fp, #-68]	; 0xffffffbc
   42378:	add	r3, r3, #19
   4237c:	mov	r0, r3
   42380:	bl	123bc <strlen@plt>
   42384:	str	r0, [fp, #-72]	; 0xffffffb8
   42388:	ldr	r3, [fp, #-68]	; 0xffffffbc
   4238c:	add	r3, r3, #19
   42390:	ldr	r2, [fp, #-72]	; 0xffffffb8
   42394:	mov	r1, r3
   42398:	mov	r0, r4
   4239c:	bl	42cd8 <__assert_fail@plt+0x305ec>
   423a0:	mov	r5, r0
   423a4:	cmp	r5, #0
   423a8:	beq	423f8 <__assert_fail@plt+0x2fd0c>
   423ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   423b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   423b4:	cmp	r2, r3
   423b8:	bcc	424b0 <__assert_fail@plt+0x2fdc4>
   423bc:	ldr	r3, [r4, #24]
   423c0:	str	r3, [fp, #-76]	; 0xffffffb4
   423c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   423c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   423cc:	add	r3, r2, r3
   423d0:	add	r3, r3, #1
   423d4:	mov	r1, r3
   423d8:	mov	r0, r4
   423dc:	bl	42e08 <__assert_fail@plt+0x3071c>
   423e0:	mov	r3, r0
   423e4:	eor	r3, r3, #1
   423e8:	uxtb	r3, r3
   423ec:	cmp	r3, #0
   423f0:	beq	42468 <__assert_fail@plt+0x2fd7c>
   423f4:	b	423fc <__assert_fail@plt+0x2fd10>
   423f8:	nop	{0}
   423fc:	bl	12404 <__errno_location@plt>
   42400:	mov	r3, r0
   42404:	ldr	r3, [r3]
   42408:	str	r3, [fp, #-88]	; 0xffffffa8
   4240c:	mov	r0, r5
   42410:	bl	3fe0c <__assert_fail@plt+0x2d720>
   42414:	mov	r0, r7
   42418:	bl	42da8 <__assert_fail@plt+0x306bc>
   4241c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42420:	ldr	r3, [r3, #12]
   42424:	mov	r0, r3
   42428:	bl	126bc <closedir@plt>
   4242c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42430:	mov	r2, #0
   42434:	str	r2, [r3, #12]
   42438:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4243c:	mov	r2, #7
   42440:	strh	r2, [r3, #56]	; 0x38
   42444:	ldr	r3, [r4, #48]	; 0x30
   42448:	orr	r3, r3, #8192	; 0x2000
   4244c:	str	r3, [r4, #48]	; 0x30
   42450:	bl	12404 <__errno_location@plt>
   42454:	mov	r2, r0
   42458:	ldr	r3, [fp, #-88]	; 0xffffffa8
   4245c:	str	r3, [r2]
   42460:	mov	r3, #0
   42464:	b	42908 <__assert_fail@plt+0x3021c>
   42468:	ldr	r3, [r4, #24]
   4246c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   42470:	cmp	r2, r3
   42474:	beq	424a0 <__assert_fail@plt+0x2fdb4>
   42478:	mov	r3, #1
   4247c:	strb	r3, [fp, #-26]	; 0xffffffe6
   42480:	ldr	r3, [r4, #48]	; 0x30
   42484:	and	r3, r3, #4
   42488:	cmp	r3, #0
   4248c:	beq	424a0 <__assert_fail@plt+0x2fdb4>
   42490:	ldr	r2, [r4, #24]
   42494:	ldr	r3, [fp, #-60]	; 0xffffffc4
   42498:	add	r3, r2, r3
   4249c:	str	r3, [fp, #-36]	; 0xffffffdc
   424a0:	ldr	r2, [r4, #36]	; 0x24
   424a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   424a8:	sub	r3, r2, r3
   424ac:	str	r3, [fp, #-32]	; 0xffffffe0
   424b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   424b4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   424b8:	add	r3, r2, r3
   424bc:	str	r3, [fp, #-80]	; 0xffffffb0
   424c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   424c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   424c8:	cmp	r2, r3
   424cc:	bcs	4252c <__assert_fail@plt+0x2fe40>
   424d0:	mov	r0, r5
   424d4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   424d8:	mov	r0, r7
   424dc:	bl	42da8 <__assert_fail@plt+0x306bc>
   424e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   424e4:	ldr	r3, [r3, #12]
   424e8:	mov	r0, r3
   424ec:	bl	126bc <closedir@plt>
   424f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   424f4:	mov	r2, #0
   424f8:	str	r2, [r3, #12]
   424fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42500:	mov	r2, #7
   42504:	strh	r2, [r3, #56]	; 0x38
   42508:	ldr	r3, [r4, #48]	; 0x30
   4250c:	orr	r3, r3, #8192	; 0x2000
   42510:	str	r3, [r4, #48]	; 0x30
   42514:	bl	12404 <__errno_location@plt>
   42518:	mov	r2, r0
   4251c:	mov	r3, #36	; 0x24
   42520:	str	r3, [r2]
   42524:	mov	r3, #0
   42528:	b	42908 <__assert_fail@plt+0x3021c>
   4252c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   42530:	str	r3, [r5, #48]	; 0x30
   42534:	ldr	r3, [r4]
   42538:	str	r3, [r5, #4]
   4253c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   42540:	str	r3, [r5, #40]	; 0x28
   42544:	ldr	r3, [fp, #-68]	; 0xffffffbc
   42548:	ldrd	r2, [r3]
   4254c:	strd	r2, [r5, #160]	; 0xa0
   42550:	ldr	r3, [r4, #48]	; 0x30
   42554:	and	r3, r3, #4
   42558:	cmp	r3, #0
   4255c:	beq	42584 <__assert_fail@plt+0x2fe98>
   42560:	ldr	r3, [r5, #28]
   42564:	str	r3, [r5, #24]
   42568:	add	r1, r5, #168	; 0xa8
   4256c:	ldr	r3, [r5, #52]	; 0x34
   42570:	add	r3, r3, #1
   42574:	mov	r2, r3
   42578:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4257c:	bl	1208c <memmove@plt>
   42580:	b	4258c <__assert_fail@plt+0x2fea0>
   42584:	add	r3, r5, #168	; 0xa8
   42588:	str	r3, [r5, #24]
   4258c:	ldr	r3, [r4, #44]	; 0x2c
   42590:	cmp	r3, #0
   42594:	beq	425a8 <__assert_fail@plt+0x2febc>
   42598:	ldr	r3, [r4, #48]	; 0x30
   4259c:	and	r3, r3, #1024	; 0x400
   425a0:	cmp	r3, #0
   425a4:	beq	42668 <__assert_fail@plt+0x2ff7c>
   425a8:	ldr	r3, [r4, #48]	; 0x30
   425ac:	and	r3, r3, #8
   425b0:	cmp	r3, #0
   425b4:	beq	42600 <__assert_fail@plt+0x2ff14>
   425b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   425bc:	ldrb	r3, [r3, #18]
   425c0:	cmp	r3, #0
   425c4:	beq	42600 <__assert_fail@plt+0x2ff14>
   425c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   425cc:	ldrb	r3, [r3, #18]
   425d0:	cmp	r3, #4
   425d4:	beq	42600 <__assert_fail@plt+0x2ff14>
   425d8:	ldr	r3, [r4, #48]	; 0x30
   425dc:	and	r3, r3, #16
   425e0:	cmp	r3, #0
   425e4:	bne	425f8 <__assert_fail@plt+0x2ff0c>
   425e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   425ec:	ldrb	r3, [r3, #18]
   425f0:	cmp	r3, #10
   425f4:	beq	42600 <__assert_fail@plt+0x2ff14>
   425f8:	mov	r3, #1
   425fc:	b	42604 <__assert_fail@plt+0x2ff18>
   42600:	mov	r3, #0
   42604:	strb	r3, [fp, #-81]	; 0xffffffaf
   42608:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   4260c:	and	r3, r3, #1
   42610:	strb	r3, [fp, #-81]	; 0xffffffaf
   42614:	mov	r3, #11
   42618:	strh	r3, [r5, #56]	; 0x38
   4261c:	add	r2, r5, #64	; 0x40
   42620:	ldr	r3, [fp, #-68]	; 0xffffffbc
   42624:	ldrb	r3, [r3, #18]
   42628:	mov	r1, r3
   4262c:	mov	r0, r2
   42630:	bl	41d00 <__assert_fail@plt+0x2f614>
   42634:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   42638:	cmp	r3, #0
   4263c:	movne	r3, #1
   42640:	moveq	r3, #0
   42644:	uxtb	r3, r3
   42648:	eor	r3, r3, #1
   4264c:	uxtb	r3, r3
   42650:	and	r3, r3, #1
   42654:	uxtb	r3, r3
   42658:	mov	r1, r3
   4265c:	mov	r0, r5
   42660:	bl	404b0 <__assert_fail@plt+0x2ddc4>
   42664:	b	42680 <__assert_fail@plt+0x2ff94>
   42668:	mov	r2, #0
   4266c:	mov	r1, r5
   42670:	mov	r0, r4
   42674:	bl	42924 <__assert_fail@plt+0x30238>
   42678:	mov	r3, r0
   4267c:	strh	r3, [r5, #56]	; 0x38
   42680:	mov	r3, #0
   42684:	str	r3, [r5, #8]
   42688:	cmp	r7, #0
   4268c:	bne	4269c <__assert_fail@plt+0x2ffb0>
   42690:	str	r5, [fp, #-24]	; 0xffffffe8
   42694:	ldr	r7, [fp, #-24]	; 0xffffffe8
   42698:	b	426a8 <__assert_fail@plt+0x2ffbc>
   4269c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   426a0:	str	r5, [r3, #8]
   426a4:	str	r5, [fp, #-24]	; 0xffffffe8
   426a8:	movw	r3, #10000	; 0x2710
   426ac:	cmp	r6, r3
   426b0:	bne	426d8 <__assert_fail@plt+0x2ffec>
   426b4:	ldr	r3, [r4, #44]	; 0x2c
   426b8:	cmp	r3, #0
   426bc:	bne	426d8 <__assert_fail@plt+0x2ffec>
   426c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   426c4:	mov	r1, r3
   426c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   426cc:	bl	41130 <__assert_fail@plt+0x2ea44>
   426d0:	mov	r3, r0
   426d4:	strb	r3, [fp, #-37]	; 0xffffffdb
   426d8:	add	r6, r6, #1
   426dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   426e0:	cmp	r3, r6
   426e4:	bls	42730 <__assert_fail@plt+0x30044>
   426e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   426ec:	ldr	r3, [r3, #12]
   426f0:	cmp	r3, #0
   426f4:	bne	4229c <__assert_fail@plt+0x2fbb0>
   426f8:	b	42700 <__assert_fail@plt+0x30014>
   426fc:	nop	{0}
   42700:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42704:	ldr	r3, [r3, #12]
   42708:	cmp	r3, #0
   4270c:	beq	42738 <__assert_fail@plt+0x3004c>
   42710:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42714:	ldr	r3, [r3, #12]
   42718:	mov	r0, r3
   4271c:	bl	126bc <closedir@plt>
   42720:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42724:	mov	r2, #0
   42728:	str	r2, [r3, #12]
   4272c:	b	4273c <__assert_fail@plt+0x30050>
   42730:	nop	{0}
   42734:	b	4273c <__assert_fail@plt+0x30050>
   42738:	nop	{0}
   4273c:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   42740:	cmp	r3, #0
   42744:	beq	42754 <__assert_fail@plt+0x30068>
   42748:	mov	r1, r7
   4274c:	mov	r0, r4
   42750:	bl	42f00 <__assert_fail@plt+0x30814>
   42754:	ldr	r3, [r4, #48]	; 0x30
   42758:	and	r3, r3, #4
   4275c:	cmp	r3, #0
   42760:	beq	42794 <__assert_fail@plt+0x300a8>
   42764:	ldr	r3, [r4, #36]	; 0x24
   42768:	ldr	r2, [fp, #-60]	; 0xffffffc4
   4276c:	cmp	r2, r3
   42770:	beq	4277c <__assert_fail@plt+0x30090>
   42774:	cmp	r6, #0
   42778:	bne	42788 <__assert_fail@plt+0x3009c>
   4277c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   42780:	sub	r3, r3, #1
   42784:	str	r3, [fp, #-36]	; 0xffffffdc
   42788:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4278c:	mov	r2, #0
   42790:	strb	r2, [r3]
   42794:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   42798:	eor	r3, r3, #1
   4279c:	uxtb	r3, r3
   427a0:	cmp	r3, #0
   427a4:	beq	42858 <__assert_fail@plt+0x3016c>
   427a8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   427ac:	cmp	r3, #0
   427b0:	beq	42858 <__assert_fail@plt+0x3016c>
   427b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   427b8:	cmp	r3, #1
   427bc:	beq	427c8 <__assert_fail@plt+0x300dc>
   427c0:	cmp	r6, #0
   427c4:	bne	42858 <__assert_fail@plt+0x3016c>
   427c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   427cc:	ldr	r3, [r3, #48]	; 0x30
   427d0:	cmp	r3, #0
   427d4:	bne	427f8 <__assert_fail@plt+0x3010c>
   427d8:	mov	r0, r4
   427dc:	bl	405ec <__assert_fail@plt+0x2df00>
   427e0:	mov	r3, r0
   427e4:	cmp	r3, #0
   427e8:	movne	r3, #1
   427ec:	moveq	r3, #0
   427f0:	uxtb	r3, r3
   427f4:	b	42828 <__assert_fail@plt+0x3013c>
   427f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   427fc:	ldr	r1, [r3, #4]
   42800:	movw	r3, #47048	; 0xb7c8
   42804:	movt	r3, #6
   42808:	mvn	r2, #0
   4280c:	mov	r0, r4
   42810:	bl	430b8 <__assert_fail@plt+0x309cc>
   42814:	mov	r3, r0
   42818:	cmp	r3, #0
   4281c:	movne	r3, #1
   42820:	moveq	r3, #0
   42824:	uxtb	r3, r3
   42828:	cmp	r3, #0
   4282c:	beq	42858 <__assert_fail@plt+0x3016c>
   42830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42834:	mov	r2, #7
   42838:	strh	r2, [r3, #56]	; 0x38
   4283c:	ldr	r3, [r4, #48]	; 0x30
   42840:	orr	r3, r3, #8192	; 0x2000
   42844:	str	r3, [r4, #48]	; 0x30
   42848:	mov	r0, r7
   4284c:	bl	42da8 <__assert_fail@plt+0x306bc>
   42850:	mov	r3, #0
   42854:	b	42908 <__assert_fail@plt+0x3021c>
   42858:	cmp	r6, #0
   4285c:	bne	428a8 <__assert_fail@plt+0x301bc>
   42860:	ldr	r3, [fp, #-96]	; 0xffffffa0
   42864:	cmp	r3, #3
   42868:	bne	42898 <__assert_fail@plt+0x301ac>
   4286c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42870:	ldrh	r3, [r3, #56]	; 0x38
   42874:	cmp	r3, #4
   42878:	beq	42898 <__assert_fail@plt+0x301ac>
   4287c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42880:	ldrh	r3, [r3, #56]	; 0x38
   42884:	cmp	r3, #7
   42888:	beq	42898 <__assert_fail@plt+0x301ac>
   4288c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42890:	mov	r2, #6
   42894:	strh	r2, [r3, #56]	; 0x38
   42898:	mov	r0, r7
   4289c:	bl	42da8 <__assert_fail@plt+0x306bc>
   428a0:	mov	r3, #0
   428a4:	b	42908 <__assert_fail@plt+0x3021c>
   428a8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   428ac:	cmp	r3, #0
   428b0:	beq	428dc <__assert_fail@plt+0x301f0>
   428b4:	movw	r3, #7292	; 0x1c7c
   428b8:	movt	r3, #4
   428bc:	str	r3, [r4, #44]	; 0x2c
   428c0:	mov	r2, r6
   428c4:	mov	r1, r7
   428c8:	mov	r0, r4
   428cc:	bl	42b74 <__assert_fail@plt+0x30488>
   428d0:	mov	r7, r0
   428d4:	mov	r3, #0
   428d8:	str	r3, [r4, #44]	; 0x2c
   428dc:	ldr	r3, [r4, #44]	; 0x2c
   428e0:	cmp	r3, #0
   428e4:	beq	42904 <__assert_fail@plt+0x30218>
   428e8:	cmp	r6, #1
   428ec:	bls	42904 <__assert_fail@plt+0x30218>
   428f0:	mov	r2, r6
   428f4:	mov	r1, r7
   428f8:	mov	r0, r4
   428fc:	bl	42b74 <__assert_fail@plt+0x30488>
   42900:	mov	r7, r0
   42904:	mov	r3, r7
   42908:	mov	r0, r3
   4290c:	sub	sp, fp, #20
   42910:	ldrd	r4, [sp]
   42914:	ldrd	r6, [sp, #8]
   42918:	ldr	fp, [sp, #16]
   4291c:	add	sp, sp, #20
   42920:	pop	{pc}		; (ldr pc, [sp], #4)
   42924:	str	r4, [sp, #-12]!
   42928:	str	fp, [sp, #4]
   4292c:	str	lr, [sp, #8]
   42930:	add	fp, sp, #8
   42934:	sub	sp, sp, #20
   42938:	str	r0, [fp, #-24]	; 0xffffffe8
   4293c:	mov	r4, r1
   42940:	mov	r3, r2
   42944:	strb	r3, [fp, #-25]	; 0xffffffe7
   42948:	add	r3, r4, #64	; 0x40
   4294c:	str	r3, [fp, #-16]
   42950:	ldr	r3, [r4, #48]	; 0x30
   42954:	cmp	r3, #0
   42958:	bne	42978 <__assert_fail@plt+0x3028c>
   4295c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42960:	ldr	r3, [r3, #48]	; 0x30
   42964:	and	r3, r3, #1
   42968:	cmp	r3, #0
   4296c:	beq	42978 <__assert_fail@plt+0x3028c>
   42970:	mov	r3, #1
   42974:	strb	r3, [fp, #-25]	; 0xffffffe7
   42978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4297c:	ldr	r3, [r3, #48]	; 0x30
   42980:	and	r3, r3, #2
   42984:	cmp	r3, #0
   42988:	bne	42998 <__assert_fail@plt+0x302ac>
   4298c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   42990:	cmp	r3, #0
   42994:	beq	42a10 <__assert_fail@plt+0x30324>
   42998:	ldr	r3, [r4, #24]
   4299c:	ldr	r1, [fp, #-16]
   429a0:	mov	r0, r3
   429a4:	bl	64c94 <__assert_fail@plt+0x525a8>
   429a8:	mov	r3, r0
   429ac:	cmp	r3, #0
   429b0:	beq	42a5c <__assert_fail@plt+0x30370>
   429b4:	bl	12404 <__errno_location@plt>
   429b8:	mov	r3, r0
   429bc:	ldr	r3, [r3]
   429c0:	cmp	r3, #2
   429c4:	bne	429fc <__assert_fail@plt+0x30310>
   429c8:	ldr	r3, [r4, #24]
   429cc:	ldr	r1, [fp, #-16]
   429d0:	mov	r0, r3
   429d4:	bl	64cb4 <__assert_fail@plt+0x525c8>
   429d8:	mov	r3, r0
   429dc:	cmp	r3, #0
   429e0:	bne	429fc <__assert_fail@plt+0x30310>
   429e4:	bl	12404 <__errno_location@plt>
   429e8:	mov	r2, r0
   429ec:	mov	r3, #0
   429f0:	str	r3, [r2]
   429f4:	mov	r3, #13
   429f8:	b	42b00 <__assert_fail@plt+0x30414>
   429fc:	bl	12404 <__errno_location@plt>
   42a00:	mov	r3, r0
   42a04:	ldr	r3, [r3]
   42a08:	str	r3, [r4, #32]
   42a0c:	b	42a44 <__assert_fail@plt+0x30358>
   42a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42a14:	ldr	r0, [r3, #32]
   42a18:	ldr	r1, [r4, #24]
   42a1c:	mov	r3, #256	; 0x100
   42a20:	ldr	r2, [fp, #-16]
   42a24:	bl	64cc4 <__assert_fail@plt+0x525d8>
   42a28:	mov	r3, r0
   42a2c:	cmp	r3, #0
   42a30:	beq	42a5c <__assert_fail@plt+0x30370>
   42a34:	bl	12404 <__errno_location@plt>
   42a38:	mov	r3, r0
   42a3c:	ldr	r3, [r3]
   42a40:	str	r3, [r4, #32]
   42a44:	mov	r2, #104	; 0x68
   42a48:	mov	r1, #0
   42a4c:	ldr	r0, [fp, #-16]
   42a50:	bl	12434 <memset@plt>
   42a54:	mov	r3, #10
   42a58:	b	42b00 <__assert_fail@plt+0x30414>
   42a5c:	ldr	r3, [fp, #-16]
   42a60:	ldr	r3, [r3, #16]
   42a64:	and	r3, r3, #61440	; 0xf000
   42a68:	cmp	r3, #16384	; 0x4000
   42a6c:	bne	42ac4 <__assert_fail@plt+0x303d8>
   42a70:	ldrb	r3, [r4, #168]	; 0xa8
   42a74:	cmp	r3, #46	; 0x2e
   42a78:	bne	42abc <__assert_fail@plt+0x303d0>
   42a7c:	ldrb	r3, [r4, #169]	; 0xa9
   42a80:	cmp	r3, #0
   42a84:	beq	42aa0 <__assert_fail@plt+0x303b4>
   42a88:	ldrb	r3, [r4, #169]	; 0xa9
   42a8c:	cmp	r3, #46	; 0x2e
   42a90:	bne	42abc <__assert_fail@plt+0x303d0>
   42a94:	ldrb	r3, [r4, #170]	; 0xaa
   42a98:	cmp	r3, #0
   42a9c:	bne	42abc <__assert_fail@plt+0x303d0>
   42aa0:	ldr	r3, [r4, #48]	; 0x30
   42aa4:	cmp	r3, #0
   42aa8:	bne	42ab4 <__assert_fail@plt+0x303c8>
   42aac:	mov	r3, #1
   42ab0:	b	42b00 <__assert_fail@plt+0x30414>
   42ab4:	mov	r3, #5
   42ab8:	b	42b00 <__assert_fail@plt+0x30414>
   42abc:	mov	r3, #1
   42ac0:	b	42b00 <__assert_fail@plt+0x30414>
   42ac4:	ldr	r3, [fp, #-16]
   42ac8:	ldr	r3, [r3, #16]
   42acc:	and	r3, r3, #61440	; 0xf000
   42ad0:	cmp	r3, #40960	; 0xa000
   42ad4:	bne	42ae0 <__assert_fail@plt+0x303f4>
   42ad8:	mov	r3, #12
   42adc:	b	42b00 <__assert_fail@plt+0x30414>
   42ae0:	ldr	r3, [fp, #-16]
   42ae4:	ldr	r3, [r3, #16]
   42ae8:	and	r3, r3, #61440	; 0xf000
   42aec:	cmp	r3, #32768	; 0x8000
   42af0:	bne	42afc <__assert_fail@plt+0x30410>
   42af4:	mov	r3, #8
   42af8:	b	42b00 <__assert_fail@plt+0x30414>
   42afc:	mov	r3, #3
   42b00:	mov	r0, r3
   42b04:	sub	sp, fp, #8
   42b08:	ldr	r4, [sp]
   42b0c:	ldr	fp, [sp, #4]
   42b10:	add	sp, sp, #8
   42b14:	pop	{pc}		; (ldr pc, [sp], #4)
   42b18:	str	fp, [sp, #-8]!
   42b1c:	str	lr, [sp, #4]
   42b20:	add	fp, sp, #4
   42b24:	sub	sp, sp, #16
   42b28:	str	r0, [fp, #-16]
   42b2c:	str	r1, [fp, #-20]	; 0xffffffec
   42b30:	ldr	r3, [fp, #-16]
   42b34:	str	r3, [fp, #-8]
   42b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   42b3c:	str	r3, [fp, #-12]
   42b40:	ldr	r3, [fp, #-8]
   42b44:	ldr	r3, [r3]
   42b48:	ldr	r3, [r3, #44]	; 0x2c
   42b4c:	ldr	r3, [r3, #44]	; 0x2c
   42b50:	ldr	r1, [fp, #-12]
   42b54:	ldr	r0, [fp, #-8]
   42b58:	blx	r3
   42b5c:	mov	r3, r0
   42b60:	mov	r0, r3
   42b64:	sub	sp, fp, #4
   42b68:	ldr	fp, [sp]
   42b6c:	add	sp, sp, #4
   42b70:	pop	{pc}		; (ldr pc, [sp], #4)
   42b74:	strd	r4, [sp, #-20]!	; 0xffffffec
   42b78:	str	r6, [sp, #8]
   42b7c:	str	fp, [sp, #12]
   42b80:	str	lr, [sp, #16]
   42b84:	add	fp, sp, #16
   42b88:	sub	sp, sp, #28
   42b8c:	str	r0, [fp, #-40]	; 0xffffffd8
   42b90:	str	r1, [fp, #-44]	; 0xffffffd4
   42b94:	mov	r5, r2
   42b98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42b9c:	ldr	r3, [r3, #44]	; 0x2c
   42ba0:	str	r3, [fp, #-24]	; 0xffffffe8
   42ba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42ba8:	ldr	r3, [r3, #40]	; 0x28
   42bac:	cmp	r5, r3
   42bb0:	bls	42c3c <__assert_fail@plt+0x30550>
   42bb4:	add	r2, r5, #40	; 0x28
   42bb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42bbc:	str	r2, [r3, #40]	; 0x28
   42bc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42bc4:	ldr	r3, [r3, #40]	; 0x28
   42bc8:	cmn	r3, #-1073741823	; 0xc0000001
   42bcc:	bhi	42c00 <__assert_fail@plt+0x30514>
   42bd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42bd4:	ldr	r2, [r3, #8]
   42bd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42bdc:	ldr	r3, [r3, #40]	; 0x28
   42be0:	lsl	r3, r3, #2
   42be4:	mov	r1, r3
   42be8:	mov	r0, r2
   42bec:	bl	446e8 <__assert_fail@plt+0x31ffc>
   42bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   42bf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   42bf8:	cmp	r3, #0
   42bfc:	bne	42c30 <__assert_fail@plt+0x30544>
   42c00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c04:	ldr	r3, [r3, #8]
   42c08:	mov	r0, r3
   42c0c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   42c10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c14:	mov	r2, #0
   42c18:	str	r2, [r3, #8]
   42c1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c20:	mov	r2, #0
   42c24:	str	r2, [r3, #40]	; 0x28
   42c28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42c2c:	b	42cbc <__assert_fail@plt+0x305d0>
   42c30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   42c38:	str	r2, [r3, #8]
   42c3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c40:	ldr	r4, [r3, #8]
   42c44:	ldr	r6, [fp, #-44]	; 0xffffffd4
   42c48:	b	42c5c <__assert_fail@plt+0x30570>
   42c4c:	mov	r3, r4
   42c50:	add	r4, r3, #4
   42c54:	str	r6, [r3]
   42c58:	ldr	r6, [r6, #8]
   42c5c:	cmp	r6, #0
   42c60:	bne	42c4c <__assert_fail@plt+0x30560>
   42c64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c68:	ldr	r0, [r3, #8]
   42c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42c70:	mov	r2, #4
   42c74:	mov	r1, r5
   42c78:	bl	125f0 <qsort@plt>
   42c7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42c80:	ldr	r4, [r3, #8]
   42c84:	ldr	r3, [r4]
   42c88:	str	r3, [fp, #-44]	; 0xffffffd4
   42c8c:	b	42ca0 <__assert_fail@plt+0x305b4>
   42c90:	ldr	r3, [r4]
   42c94:	ldr	r2, [r4, #4]
   42c98:	str	r2, [r3, #8]
   42c9c:	add	r4, r4, #4
   42ca0:	sub	r5, r5, #1
   42ca4:	cmp	r5, #0
   42ca8:	bne	42c90 <__assert_fail@plt+0x305a4>
   42cac:	ldr	r3, [r4]
   42cb0:	mov	r2, #0
   42cb4:	str	r2, [r3, #8]
   42cb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42cbc:	mov	r0, r3
   42cc0:	sub	sp, fp, #16
   42cc4:	ldrd	r4, [sp]
   42cc8:	ldr	r6, [sp, #8]
   42ccc:	ldr	fp, [sp, #12]
   42cd0:	add	sp, sp, #16
   42cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   42cd8:	strd	r4, [sp, #-16]!
   42cdc:	str	fp, [sp, #8]
   42ce0:	str	lr, [sp, #12]
   42ce4:	add	fp, sp, #12
   42ce8:	sub	sp, sp, #16
   42cec:	str	r0, [fp, #-24]	; 0xffffffe8
   42cf0:	str	r1, [fp, #-28]	; 0xffffffe4
   42cf4:	mov	r5, r2
   42cf8:	add	r3, r5, #176	; 0xb0
   42cfc:	bic	r3, r3, #7
   42d00:	str	r3, [fp, #-16]
   42d04:	ldr	r0, [fp, #-16]
   42d08:	bl	43510 <__assert_fail@plt+0x30e24>
   42d0c:	mov	r3, r0
   42d10:	mov	r4, r3
   42d14:	cmp	r4, #0
   42d18:	bne	42d24 <__assert_fail@plt+0x30638>
   42d1c:	mov	r3, #0
   42d20:	b	42d90 <__assert_fail@plt+0x306a4>
   42d24:	add	r3, r4, #168	; 0xa8
   42d28:	mov	r2, r5
   42d2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   42d30:	mov	r0, r3
   42d34:	bl	120f8 <memcpy@plt>
   42d38:	add	r3, r4, r5
   42d3c:	mov	r2, #0
   42d40:	strb	r2, [r3, #168]	; 0xa8
   42d44:	str	r5, [r4, #52]	; 0x34
   42d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42d4c:	str	r3, [r4, #44]	; 0x2c
   42d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42d54:	ldr	r3, [r3, #24]
   42d58:	str	r3, [r4, #28]
   42d5c:	mov	r3, #0
   42d60:	str	r3, [r4, #32]
   42d64:	mov	r3, #0
   42d68:	str	r3, [r4, #12]
   42d6c:	mov	r3, #0
   42d70:	strh	r3, [r4, #58]	; 0x3a
   42d74:	mov	r3, #3
   42d78:	strh	r3, [r4, #60]	; 0x3c
   42d7c:	mov	r3, #0
   42d80:	str	r3, [r4, #16]
   42d84:	mov	r3, #0
   42d88:	str	r3, [r4, #20]
   42d8c:	mov	r3, r4
   42d90:	mov	r0, r3
   42d94:	sub	sp, fp, #12
   42d98:	ldrd	r4, [sp]
   42d9c:	ldr	fp, [sp, #8]
   42da0:	add	sp, sp, #12
   42da4:	pop	{pc}		; (ldr pc, [sp], #4)
   42da8:	strd	r4, [sp, #-16]!
   42dac:	str	fp, [sp, #8]
   42db0:	str	lr, [sp, #12]
   42db4:	add	fp, sp, #12
   42db8:	mov	r5, r0
   42dbc:	b	42de4 <__assert_fail@plt+0x306f8>
   42dc0:	ldr	r5, [r5, #8]
   42dc4:	ldr	r3, [r4, #12]
   42dc8:	cmp	r3, #0
   42dcc:	beq	42ddc <__assert_fail@plt+0x306f0>
   42dd0:	ldr	r3, [r4, #12]
   42dd4:	mov	r0, r3
   42dd8:	bl	126bc <closedir@plt>
   42ddc:	mov	r0, r4
   42de0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   42de4:	mov	r4, r5
   42de8:	cmp	r4, #0
   42dec:	bne	42dc0 <__assert_fail@plt+0x306d4>
   42df0:	nop	{0}
   42df4:	sub	sp, fp, #12
   42df8:	ldrd	r4, [sp]
   42dfc:	ldr	fp, [sp, #8]
   42e00:	add	sp, sp, #12
   42e04:	pop	{pc}		; (ldr pc, [sp], #4)
   42e08:	str	fp, [sp, #-8]!
   42e0c:	str	lr, [sp, #4]
   42e10:	add	fp, sp, #4
   42e14:	sub	sp, sp, #16
   42e18:	str	r0, [fp, #-16]
   42e1c:	str	r1, [fp, #-20]	; 0xffffffec
   42e20:	ldr	r3, [fp, #-16]
   42e24:	ldr	r2, [r3, #36]	; 0x24
   42e28:	ldr	r3, [fp, #-20]	; 0xffffffec
   42e2c:	add	r3, r2, r3
   42e30:	add	r3, r3, #256	; 0x100
   42e34:	str	r3, [fp, #-8]
   42e38:	ldr	r3, [fp, #-16]
   42e3c:	ldr	r3, [r3, #36]	; 0x24
   42e40:	ldr	r2, [fp, #-8]
   42e44:	cmp	r2, r3
   42e48:	bcs	42e80 <__assert_fail@plt+0x30794>
   42e4c:	ldr	r3, [fp, #-16]
   42e50:	ldr	r3, [r3, #24]
   42e54:	mov	r0, r3
   42e58:	bl	3fe0c <__assert_fail@plt+0x2d720>
   42e5c:	ldr	r3, [fp, #-16]
   42e60:	mov	r2, #0
   42e64:	str	r2, [r3, #24]
   42e68:	bl	12404 <__errno_location@plt>
   42e6c:	mov	r2, r0
   42e70:	mov	r3, #36	; 0x24
   42e74:	str	r3, [r2]
   42e78:	mov	r3, #0
   42e7c:	b	42eec <__assert_fail@plt+0x30800>
   42e80:	ldr	r3, [fp, #-16]
   42e84:	ldr	r2, [fp, #-8]
   42e88:	str	r2, [r3, #36]	; 0x24
   42e8c:	ldr	r3, [fp, #-16]
   42e90:	ldr	r2, [r3, #24]
   42e94:	ldr	r3, [fp, #-16]
   42e98:	ldr	r3, [r3, #36]	; 0x24
   42e9c:	mov	r1, r3
   42ea0:	mov	r0, r2
   42ea4:	bl	446e8 <__assert_fail@plt+0x31ffc>
   42ea8:	str	r0, [fp, #-12]
   42eac:	ldr	r3, [fp, #-12]
   42eb0:	cmp	r3, #0
   42eb4:	bne	42edc <__assert_fail@plt+0x307f0>
   42eb8:	ldr	r3, [fp, #-16]
   42ebc:	ldr	r3, [r3, #24]
   42ec0:	mov	r0, r3
   42ec4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   42ec8:	ldr	r3, [fp, #-16]
   42ecc:	mov	r2, #0
   42ed0:	str	r2, [r3, #24]
   42ed4:	mov	r3, #0
   42ed8:	b	42eec <__assert_fail@plt+0x30800>
   42edc:	ldr	r3, [fp, #-16]
   42ee0:	ldr	r2, [fp, #-12]
   42ee4:	str	r2, [r3, #24]
   42ee8:	mov	r3, #1
   42eec:	mov	r0, r3
   42ef0:	sub	sp, fp, #4
   42ef4:	ldr	fp, [sp]
   42ef8:	add	sp, sp, #4
   42efc:	pop	{pc}		; (ldr pc, [sp], #4)
   42f00:	push	{fp}		; (str fp, [sp, #-4]!)
   42f04:	add	fp, sp, #0
   42f08:	sub	sp, sp, #20
   42f0c:	str	r0, [fp, #-16]
   42f10:	str	r1, [fp, #-20]	; 0xffffffec
   42f14:	ldr	r3, [fp, #-16]
   42f18:	ldr	r3, [r3, #24]
   42f1c:	str	r3, [fp, #-12]
   42f20:	ldr	r3, [fp, #-16]
   42f24:	ldr	r3, [r3, #4]
   42f28:	str	r3, [fp, #-8]
   42f2c:	b	42f88 <__assert_fail@plt+0x3089c>
   42f30:	ldr	r3, [fp, #-8]
   42f34:	ldr	r2, [r3, #24]
   42f38:	ldr	r3, [fp, #-8]
   42f3c:	add	r3, r3, #168	; 0xa8
   42f40:	cmp	r2, r3
   42f44:	beq	42f70 <__assert_fail@plt+0x30884>
   42f48:	ldr	r3, [fp, #-8]
   42f4c:	ldr	r2, [r3, #24]
   42f50:	ldr	r3, [fp, #-8]
   42f54:	ldr	r3, [r3, #28]
   42f58:	sub	r3, r2, r3
   42f5c:	mov	r2, r3
   42f60:	ldr	r3, [fp, #-12]
   42f64:	add	r2, r3, r2
   42f68:	ldr	r3, [fp, #-8]
   42f6c:	str	r2, [r3, #24]
   42f70:	ldr	r3, [fp, #-8]
   42f74:	ldr	r2, [fp, #-12]
   42f78:	str	r2, [r3, #28]
   42f7c:	ldr	r3, [fp, #-8]
   42f80:	ldr	r3, [r3, #8]
   42f84:	str	r3, [fp, #-8]
   42f88:	ldr	r3, [fp, #-8]
   42f8c:	cmp	r3, #0
   42f90:	bne	42f30 <__assert_fail@plt+0x30844>
   42f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   42f98:	str	r3, [fp, #-8]
   42f9c:	b	43014 <__assert_fail@plt+0x30928>
   42fa0:	ldr	r3, [fp, #-8]
   42fa4:	ldr	r2, [r3, #24]
   42fa8:	ldr	r3, [fp, #-8]
   42fac:	add	r3, r3, #168	; 0xa8
   42fb0:	cmp	r2, r3
   42fb4:	beq	42fe0 <__assert_fail@plt+0x308f4>
   42fb8:	ldr	r3, [fp, #-8]
   42fbc:	ldr	r2, [r3, #24]
   42fc0:	ldr	r3, [fp, #-8]
   42fc4:	ldr	r3, [r3, #28]
   42fc8:	sub	r3, r2, r3
   42fcc:	mov	r2, r3
   42fd0:	ldr	r3, [fp, #-12]
   42fd4:	add	r2, r3, r2
   42fd8:	ldr	r3, [fp, #-8]
   42fdc:	str	r2, [r3, #24]
   42fe0:	ldr	r3, [fp, #-8]
   42fe4:	ldr	r2, [fp, #-12]
   42fe8:	str	r2, [r3, #28]
   42fec:	ldr	r3, [fp, #-8]
   42ff0:	ldr	r3, [r3, #8]
   42ff4:	cmp	r3, #0
   42ff8:	beq	43008 <__assert_fail@plt+0x3091c>
   42ffc:	ldr	r3, [fp, #-8]
   43000:	ldr	r3, [r3, #8]
   43004:	b	43010 <__assert_fail@plt+0x30924>
   43008:	ldr	r3, [fp, #-8]
   4300c:	ldr	r3, [r3, #4]
   43010:	str	r3, [fp, #-8]
   43014:	ldr	r3, [fp, #-8]
   43018:	ldr	r3, [r3, #48]	; 0x30
   4301c:	cmp	r3, #0
   43020:	bge	42fa0 <__assert_fail@plt+0x308b4>
   43024:	nop	{0}
   43028:	add	sp, fp, #0
   4302c:	pop	{fp}		; (ldr fp, [sp], #4)
   43030:	bx	lr
   43034:	str	fp, [sp, #-8]!
   43038:	str	lr, [sp, #4]
   4303c:	add	fp, sp, #4
   43040:	sub	sp, sp, #16
   43044:	str	r0, [fp, #-16]
   43048:	mov	r3, #0
   4304c:	str	r3, [fp, #-8]
   43050:	b	4308c <__assert_fail@plt+0x309a0>
   43054:	ldr	r3, [fp, #-16]
   43058:	ldr	r3, [r3]
   4305c:	mov	r0, r3
   43060:	bl	123bc <strlen@plt>
   43064:	str	r0, [fp, #-12]
   43068:	ldr	r2, [fp, #-12]
   4306c:	ldr	r3, [fp, #-8]
   43070:	cmp	r2, r3
   43074:	bls	43080 <__assert_fail@plt+0x30994>
   43078:	ldr	r3, [fp, #-12]
   4307c:	str	r3, [fp, #-8]
   43080:	ldr	r3, [fp, #-16]
   43084:	add	r3, r3, #4
   43088:	str	r3, [fp, #-16]
   4308c:	ldr	r3, [fp, #-16]
   43090:	ldr	r3, [r3]
   43094:	cmp	r3, #0
   43098:	bne	43054 <__assert_fail@plt+0x30968>
   4309c:	ldr	r3, [fp, #-8]
   430a0:	add	r3, r3, #1
   430a4:	mov	r0, r3
   430a8:	sub	sp, fp, #4
   430ac:	ldr	fp, [sp]
   430b0:	add	sp, sp, #4
   430b4:	pop	{pc}		; (ldr pc, [sp], #4)
   430b8:	str	fp, [sp, #-8]!
   430bc:	str	lr, [sp, #4]
   430c0:	add	fp, sp, #4
   430c4:	sub	sp, sp, #144	; 0x90
   430c8:	str	r0, [fp, #-136]	; 0xffffff78
   430cc:	str	r1, [fp, #-140]	; 0xffffff74
   430d0:	str	r2, [fp, #-144]	; 0xffffff70
   430d4:	str	r3, [fp, #-148]	; 0xffffff6c
   430d8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   430dc:	cmp	r3, #0
   430e0:	beq	43108 <__assert_fail@plt+0x30a1c>
   430e4:	movw	r1, #47048	; 0xb7c8
   430e8:	movt	r1, #6
   430ec:	ldr	r0, [fp, #-148]	; 0xffffff6c
   430f0:	bl	11ffc <strcmp@plt>
   430f4:	mov	r3, r0
   430f8:	cmp	r3, #0
   430fc:	bne	43108 <__assert_fail@plt+0x30a1c>
   43100:	mov	r3, #1
   43104:	b	4310c <__assert_fail@plt+0x30a20>
   43108:	mov	r3, #0
   4310c:	strb	r3, [fp, #-13]
   43110:	ldrb	r3, [fp, #-13]
   43114:	and	r3, r3, #1
   43118:	strb	r3, [fp, #-13]
   4311c:	ldr	r3, [fp, #-136]	; 0xffffff78
   43120:	ldr	r3, [r3, #48]	; 0x30
   43124:	and	r3, r3, #4
   43128:	cmp	r3, #0
   4312c:	beq	43160 <__assert_fail@plt+0x30a74>
   43130:	ldr	r3, [fp, #-136]	; 0xffffff78
   43134:	ldr	r3, [r3, #48]	; 0x30
   43138:	and	r3, r3, #512	; 0x200
   4313c:	cmp	r3, #0
   43140:	beq	43158 <__assert_fail@plt+0x30a6c>
   43144:	ldr	r3, [fp, #-144]	; 0xffffff70
   43148:	cmp	r3, #0
   4314c:	blt	43158 <__assert_fail@plt+0x30a6c>
   43150:	ldr	r0, [fp, #-144]	; 0xffffff70
   43154:	bl	126a4 <close@plt>
   43158:	mov	r3, #0
   4315c:	b	43360 <__assert_fail@plt+0x30c74>
   43160:	ldr	r3, [fp, #-144]	; 0xffffff70
   43164:	cmp	r3, #0
   43168:	bge	431e0 <__assert_fail@plt+0x30af4>
   4316c:	ldrb	r3, [fp, #-13]
   43170:	cmp	r3, #0
   43174:	beq	431e0 <__assert_fail@plt+0x30af4>
   43178:	ldr	r3, [fp, #-136]	; 0xffffff78
   4317c:	ldr	r3, [r3, #48]	; 0x30
   43180:	and	r3, r3, #512	; 0x200
   43184:	cmp	r3, #0
   43188:	beq	431e0 <__assert_fail@plt+0x30af4>
   4318c:	ldr	r3, [fp, #-136]	; 0xffffff78
   43190:	add	r3, r3, #60	; 0x3c
   43194:	mov	r0, r3
   43198:	bl	6104c <__assert_fail@plt+0x4e960>
   4319c:	mov	r3, r0
   431a0:	eor	r3, r3, #1
   431a4:	uxtb	r3, r3
   431a8:	cmp	r3, #0
   431ac:	beq	431e0 <__assert_fail@plt+0x30af4>
   431b0:	ldr	r3, [fp, #-136]	; 0xffffff78
   431b4:	add	r3, r3, #60	; 0x3c
   431b8:	mov	r0, r3
   431bc:	bl	61134 <__assert_fail@plt+0x4ea48>
   431c0:	str	r0, [fp, #-20]	; 0xffffffec
   431c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   431c8:	cmp	r3, #0
   431cc:	blt	431e0 <__assert_fail@plt+0x30af4>
   431d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   431d4:	str	r3, [fp, #-144]	; 0xffffff70
   431d8:	mov	r3, #0
   431dc:	str	r3, [fp, #-148]	; 0xffffff6c
   431e0:	ldr	r3, [fp, #-144]	; 0xffffff70
   431e4:	str	r3, [fp, #-12]
   431e8:	ldr	r3, [fp, #-144]	; 0xffffff70
   431ec:	cmp	r3, #0
   431f0:	bge	43218 <__assert_fail@plt+0x30b2c>
   431f4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   431f8:	ldr	r0, [fp, #-136]	; 0xffffff78
   431fc:	bl	406d0 <__assert_fail@plt+0x2dfe4>
   43200:	str	r0, [fp, #-12]
   43204:	ldr	r3, [fp, #-12]
   43208:	cmp	r3, #0
   4320c:	bge	43218 <__assert_fail@plt+0x30b2c>
   43210:	mvn	r3, #0
   43214:	b	43360 <__assert_fail@plt+0x30c74>
   43218:	ldr	r3, [fp, #-136]	; 0xffffff78
   4321c:	ldr	r3, [r3, #48]	; 0x30
   43220:	and	r3, r3, #2
   43224:	cmp	r3, #0
   43228:	bne	43254 <__assert_fail@plt+0x30b68>
   4322c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   43230:	cmp	r3, #0
   43234:	beq	432cc <__assert_fail@plt+0x30be0>
   43238:	movw	r1, #47048	; 0xb7c8
   4323c:	movt	r1, #6
   43240:	ldr	r0, [fp, #-148]	; 0xffffff6c
   43244:	bl	11ffc <strcmp@plt>
   43248:	mov	r3, r0
   4324c:	cmp	r3, #0
   43250:	bne	432cc <__assert_fail@plt+0x30be0>
   43254:	sub	r3, fp, #132	; 0x84
   43258:	mov	r1, r3
   4325c:	ldr	r0, [fp, #-12]
   43260:	bl	64ca4 <__assert_fail@plt+0x525b8>
   43264:	mov	r3, r0
   43268:	cmp	r3, #0
   4326c:	beq	4327c <__assert_fail@plt+0x30b90>
   43270:	mvn	r3, #0
   43274:	str	r3, [fp, #-8]
   43278:	b	43328 <__assert_fail@plt+0x30c3c>
   4327c:	ldr	r3, [fp, #-140]	; 0xffffff74
   43280:	ldrd	r0, [r3, #64]	; 0x40
   43284:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   43288:	cmp	r1, r3
   4328c:	cmpeq	r0, r2
   43290:	bne	432ac <__assert_fail@plt+0x30bc0>
   43294:	ldr	r3, [fp, #-140]	; 0xffffff74
   43298:	ldrd	r0, [r3, #160]	; 0xa0
   4329c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   432a0:	cmp	r1, r3
   432a4:	cmpeq	r0, r2
   432a8:	beq	432cc <__assert_fail@plt+0x30be0>
   432ac:	bl	12404 <__errno_location@plt>
   432b0:	mov	r2, r0
   432b4:	mov	r3, #2
   432b8:	str	r3, [r2]
   432bc:	mvn	r3, #0
   432c0:	str	r3, [fp, #-8]
   432c4:	nop	{0}
   432c8:	b	43328 <__assert_fail@plt+0x30c3c>
   432cc:	ldr	r3, [fp, #-136]	; 0xffffff78
   432d0:	ldr	r3, [r3, #48]	; 0x30
   432d4:	and	r3, r3, #512	; 0x200
   432d8:	cmp	r3, #0
   432dc:	beq	4331c <__assert_fail@plt+0x30c30>
   432e0:	ldrb	r3, [fp, #-13]
   432e4:	cmp	r3, #0
   432e8:	movne	r3, #1
   432ec:	moveq	r3, #0
   432f0:	uxtb	r3, r3
   432f4:	eor	r3, r3, #1
   432f8:	uxtb	r3, r3
   432fc:	and	r3, r3, #1
   43300:	uxtb	r3, r3
   43304:	mov	r2, r3
   43308:	ldr	r1, [fp, #-12]
   4330c:	ldr	r0, [fp, #-136]	; 0xffffff78
   43310:	bl	4051c <__assert_fail@plt+0x2de30>
   43314:	mov	r3, #0
   43318:	b	43360 <__assert_fail@plt+0x30c74>
   4331c:	ldr	r0, [fp, #-12]
   43320:	bl	125d8 <fchdir@plt>
   43324:	str	r0, [fp, #-8]
   43328:	ldr	r3, [fp, #-144]	; 0xffffff70
   4332c:	cmp	r3, #0
   43330:	bge	4335c <__assert_fail@plt+0x30c70>
   43334:	bl	12404 <__errno_location@plt>
   43338:	mov	r3, r0
   4333c:	ldr	r3, [r3]
   43340:	str	r3, [fp, #-24]	; 0xffffffe8
   43344:	ldr	r0, [fp, #-12]
   43348:	bl	126a4 <close@plt>
   4334c:	bl	12404 <__errno_location@plt>
   43350:	mov	r2, r0
   43354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43358:	str	r3, [r2]
   4335c:	ldr	r3, [fp, #-8]
   43360:	mov	r0, r3
   43364:	sub	sp, fp, #4
   43368:	ldr	fp, [sp]
   4336c:	add	sp, sp, #4
   43370:	pop	{pc}		; (ldr pc, [sp], #4)
   43374:	str	fp, [sp, #-8]!
   43378:	str	lr, [sp, #4]
   4337c:	add	fp, sp, #4
   43380:	sub	sp, sp, #8
   43384:	str	r0, [fp, #-8]
   43388:	str	r1, [fp, #-12]
   4338c:	ldr	r3, [fp, #-8]
   43390:	cmp	r3, #0
   43394:	bne	433b0 <__assert_fail@plt+0x30cc4>
   43398:	bl	12404 <__errno_location@plt>
   4339c:	mov	r2, r0
   433a0:	mov	r3, #95	; 0x5f
   433a4:	str	r3, [r2]
   433a8:	mvn	r3, #0
   433ac:	b	43418 <__assert_fail@plt+0x30d2c>
   433b0:	ldr	r3, [fp, #-8]
   433b4:	cmp	r3, #10
   433b8:	bne	43414 <__assert_fail@plt+0x30d28>
   433bc:	ldr	r3, [fp, #-12]
   433c0:	ldr	r3, [r3]
   433c4:	movw	r1, #47052	; 0xb7cc
   433c8:	movt	r1, #6
   433cc:	mov	r0, r3
   433d0:	bl	11ffc <strcmp@plt>
   433d4:	mov	r3, r0
   433d8:	cmp	r3, #0
   433dc:	bne	43414 <__assert_fail@plt+0x30d28>
   433e0:	ldr	r3, [fp, #-12]
   433e4:	ldr	r3, [r3]
   433e8:	mov	r0, r3
   433ec:	bl	125fc <freecon@plt>
   433f0:	ldr	r3, [fp, #-12]
   433f4:	mov	r2, #0
   433f8:	str	r2, [r3]
   433fc:	bl	12404 <__errno_location@plt>
   43400:	mov	r2, r0
   43404:	mov	r3, #61	; 0x3d
   43408:	str	r3, [r2]
   4340c:	mvn	r3, #0
   43410:	b	43418 <__assert_fail@plt+0x30d2c>
   43414:	ldr	r3, [fp, #-8]
   43418:	mov	r0, r3
   4341c:	sub	sp, fp, #4
   43420:	ldr	fp, [sp]
   43424:	add	sp, sp, #4
   43428:	pop	{pc}		; (ldr pc, [sp], #4)
   4342c:	str	fp, [sp, #-8]!
   43430:	str	lr, [sp, #4]
   43434:	add	fp, sp, #4
   43438:	sub	sp, sp, #16
   4343c:	str	r0, [fp, #-16]
   43440:	str	r1, [fp, #-20]	; 0xffffffec
   43444:	ldr	r1, [fp, #-20]	; 0xffffffec
   43448:	ldr	r0, [fp, #-16]
   4344c:	bl	123a4 <getfilecon@plt>
   43450:	str	r0, [fp, #-8]
   43454:	ldr	r1, [fp, #-20]	; 0xffffffec
   43458:	ldr	r0, [fp, #-8]
   4345c:	bl	43374 <__assert_fail@plt+0x30c88>
   43460:	mov	r3, r0
   43464:	mov	r0, r3
   43468:	sub	sp, fp, #4
   4346c:	ldr	fp, [sp]
   43470:	add	sp, sp, #4
   43474:	pop	{pc}		; (ldr pc, [sp], #4)
   43478:	str	fp, [sp, #-8]!
   4347c:	str	lr, [sp, #4]
   43480:	add	fp, sp, #4
   43484:	sub	sp, sp, #16
   43488:	str	r0, [fp, #-16]
   4348c:	str	r1, [fp, #-20]	; 0xffffffec
   43490:	ldr	r1, [fp, #-20]	; 0xffffffec
   43494:	ldr	r0, [fp, #-16]
   43498:	bl	122fc <lgetfilecon@plt>
   4349c:	str	r0, [fp, #-8]
   434a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   434a4:	ldr	r0, [fp, #-8]
   434a8:	bl	43374 <__assert_fail@plt+0x30c88>
   434ac:	mov	r3, r0
   434b0:	mov	r0, r3
   434b4:	sub	sp, fp, #4
   434b8:	ldr	fp, [sp]
   434bc:	add	sp, sp, #4
   434c0:	pop	{pc}		; (ldr pc, [sp], #4)
   434c4:	str	fp, [sp, #-8]!
   434c8:	str	lr, [sp, #4]
   434cc:	add	fp, sp, #4
   434d0:	sub	sp, sp, #16
   434d4:	str	r0, [fp, #-16]
   434d8:	str	r1, [fp, #-20]	; 0xffffffec
   434dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   434e0:	ldr	r0, [fp, #-16]
   434e4:	bl	121ac <fgetfilecon@plt>
   434e8:	str	r0, [fp, #-8]
   434ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   434f0:	ldr	r0, [fp, #-8]
   434f4:	bl	43374 <__assert_fail@plt+0x30c88>
   434f8:	mov	r3, r0
   434fc:	mov	r0, r3
   43500:	sub	sp, fp, #4
   43504:	ldr	fp, [sp]
   43508:	add	sp, sp, #4
   4350c:	pop	{pc}		; (ldr pc, [sp], #4)
   43510:	str	fp, [sp, #-8]!
   43514:	str	lr, [sp, #4]
   43518:	add	fp, sp, #4
   4351c:	sub	sp, sp, #16
   43520:	str	r0, [fp, #-16]
   43524:	ldr	r3, [fp, #-16]
   43528:	cmp	r3, #0
   4352c:	bne	43538 <__assert_fail@plt+0x30e4c>
   43530:	mov	r3, #1
   43534:	str	r3, [fp, #-16]
   43538:	mov	r2, #0
   4353c:	ldr	r3, [fp, #-16]
   43540:	cmp	r3, #0
   43544:	bge	4354c <__assert_fail@plt+0x30e60>
   43548:	mov	r2, #1
   4354c:	mov	r3, r2
   43550:	and	r3, r3, #1
   43554:	uxtb	r3, r3
   43558:	cmp	r3, #0
   4355c:	beq	43578 <__assert_fail@plt+0x30e8c>
   43560:	bl	12404 <__errno_location@plt>
   43564:	mov	r2, r0
   43568:	mov	r3, #12
   4356c:	str	r3, [r2]
   43570:	mov	r3, #0
   43574:	b	4358c <__assert_fail@plt+0x30ea0>
   43578:	ldr	r0, [fp, #-16]
   4357c:	bl	12308 <malloc@plt>
   43580:	mov	r3, r0
   43584:	str	r3, [fp, #-8]
   43588:	ldr	r3, [fp, #-8]
   4358c:	mov	r0, r3
   43590:	sub	sp, fp, #4
   43594:	ldr	fp, [sp]
   43598:	add	sp, sp, #4
   4359c:	pop	{pc}		; (ldr pc, [sp], #4)
   435a0:	str	fp, [sp, #-8]!
   435a4:	str	lr, [sp, #4]
   435a8:	add	fp, sp, #4
   435ac:	sub	sp, sp, #32
   435b0:	str	r0, [fp, #-24]	; 0xffffffe8
   435b4:	str	r1, [fp, #-28]	; 0xffffffe4
   435b8:	str	r2, [fp, #-32]	; 0xffffffe0
   435bc:	str	r3, [fp, #-36]	; 0xffffffdc
   435c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   435c4:	cmp	r3, #0
   435c8:	bne	435d4 <__assert_fail@plt+0x30ee8>
   435cc:	sub	r3, fp, #16
   435d0:	str	r3, [fp, #-24]	; 0xffffffe8
   435d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   435d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   435dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   435e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   435e4:	bl	1229c <mbrtowc@plt>
   435e8:	str	r0, [fp, #-8]
   435ec:	ldr	r3, [fp, #-8]
   435f0:	cmn	r3, #3
   435f4:	bls	43640 <__assert_fail@plt+0x30f54>
   435f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   435fc:	cmp	r3, #0
   43600:	beq	43640 <__assert_fail@plt+0x30f54>
   43604:	mov	r0, #0
   43608:	bl	60f20 <__assert_fail@plt+0x4e834>
   4360c:	mov	r3, r0
   43610:	eor	r3, r3, #1
   43614:	uxtb	r3, r3
   43618:	cmp	r3, #0
   4361c:	beq	43640 <__assert_fail@plt+0x30f54>
   43620:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43624:	ldrb	r3, [r3]
   43628:	strb	r3, [fp, #-9]
   4362c:	ldrb	r2, [fp, #-9]
   43630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43634:	str	r2, [r3]
   43638:	mov	r3, #1
   4363c:	b	43644 <__assert_fail@plt+0x30f58>
   43640:	ldr	r3, [fp, #-8]
   43644:	mov	r0, r3
   43648:	sub	sp, fp, #4
   4364c:	ldr	fp, [sp]
   43650:	add	sp, sp, #4
   43654:	pop	{pc}		; (ldr pc, [sp], #4)
   43658:	push	{fp}		; (str fp, [sp, #-4]!)
   4365c:	add	fp, sp, #0
   43660:	sub	sp, sp, #12
   43664:	str	r0, [fp, #-8]
   43668:	mvn	r2, #0
   4366c:	mvn	r3, #0
   43670:	mov	r0, r2
   43674:	mov	r1, r3
   43678:	add	sp, fp, #0
   4367c:	pop	{fp}		; (ldr fp, [sp], #4)
   43680:	bx	lr
   43684:	str	fp, [sp, #-8]!
   43688:	str	lr, [sp, #4]
   4368c:	add	fp, sp, #4
   43690:	sub	sp, sp, #24
   43694:	str	r0, [fp, #-24]	; 0xffffffe8
   43698:	mov	r3, #0
   4369c:	str	r3, [fp, #-12]
   436a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   436a4:	bl	123bc <strlen@plt>
   436a8:	mov	r3, r0
   436ac:	add	r3, r3, #1
   436b0:	str	r3, [fp, #-16]
   436b4:	mov	r3, #0
   436b8:	str	r3, [fp, #-8]
   436bc:	b	43858 <__assert_fail@plt+0x3116c>
   436c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   436c4:	ldr	r3, [fp, #-8]
   436c8:	add	r3, r2, r3
   436cc:	ldrb	r3, [r3]
   436d0:	cmp	r3, #92	; 0x5c
   436d4:	bne	43824 <__assert_fail@plt+0x31138>
   436d8:	ldr	r3, [fp, #-8]
   436dc:	add	r3, r3, #4
   436e0:	ldr	r2, [fp, #-16]
   436e4:	cmp	r2, r3
   436e8:	bls	43824 <__assert_fail@plt+0x31138>
   436ec:	ldr	r3, [fp, #-8]
   436f0:	add	r3, r3, #1
   436f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   436f8:	add	r3, r2, r3
   436fc:	ldrb	r3, [r3]
   43700:	cmp	r3, #47	; 0x2f
   43704:	bls	43824 <__assert_fail@plt+0x31138>
   43708:	ldr	r3, [fp, #-8]
   4370c:	add	r3, r3, #1
   43710:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43714:	add	r3, r2, r3
   43718:	ldrb	r3, [r3]
   4371c:	cmp	r3, #51	; 0x33
   43720:	bhi	43824 <__assert_fail@plt+0x31138>
   43724:	ldr	r3, [fp, #-8]
   43728:	add	r3, r3, #2
   4372c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43730:	add	r3, r2, r3
   43734:	ldrb	r3, [r3]
   43738:	cmp	r3, #47	; 0x2f
   4373c:	bls	43824 <__assert_fail@plt+0x31138>
   43740:	ldr	r3, [fp, #-8]
   43744:	add	r3, r3, #2
   43748:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4374c:	add	r3, r2, r3
   43750:	ldrb	r3, [r3]
   43754:	cmp	r3, #55	; 0x37
   43758:	bhi	43824 <__assert_fail@plt+0x31138>
   4375c:	ldr	r3, [fp, #-8]
   43760:	add	r3, r3, #3
   43764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43768:	add	r3, r2, r3
   4376c:	ldrb	r3, [r3]
   43770:	cmp	r3, #47	; 0x2f
   43774:	bls	43824 <__assert_fail@plt+0x31138>
   43778:	ldr	r3, [fp, #-8]
   4377c:	add	r3, r3, #3
   43780:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43784:	add	r3, r2, r3
   43788:	ldrb	r3, [r3]
   4378c:	cmp	r3, #55	; 0x37
   43790:	bhi	43824 <__assert_fail@plt+0x31138>
   43794:	ldr	r3, [fp, #-8]
   43798:	add	r3, r3, #1
   4379c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   437a0:	add	r3, r2, r3
   437a4:	ldrb	r3, [r3]
   437a8:	sub	r3, r3, #48	; 0x30
   437ac:	lsl	r2, r3, #3
   437b0:	ldr	r3, [fp, #-8]
   437b4:	add	r3, r3, #2
   437b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   437bc:	add	r3, r1, r3
   437c0:	ldrb	r3, [r3]
   437c4:	sub	r3, r3, #48	; 0x30
   437c8:	add	r3, r2, r3
   437cc:	uxtb	r3, r3
   437d0:	lsl	r3, r3, #3
   437d4:	uxtb	r2, r3
   437d8:	ldr	r3, [fp, #-8]
   437dc:	add	r3, r3, #3
   437e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   437e4:	add	r3, r1, r3
   437e8:	ldrb	r3, [r3]
   437ec:	add	r3, r2, r3
   437f0:	uxtb	r2, r3
   437f4:	ldr	r3, [fp, #-12]
   437f8:	add	r1, r3, #1
   437fc:	str	r1, [fp, #-12]
   43800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43804:	add	r3, r1, r3
   43808:	sub	r2, r2, #48	; 0x30
   4380c:	uxtb	r2, r2
   43810:	strb	r2, [r3]
   43814:	ldr	r3, [fp, #-8]
   43818:	add	r3, r3, #3
   4381c:	str	r3, [fp, #-8]
   43820:	b	4384c <__assert_fail@plt+0x31160>
   43824:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43828:	ldr	r3, [fp, #-8]
   4382c:	add	r2, r2, r3
   43830:	ldr	r3, [fp, #-12]
   43834:	add	r1, r3, #1
   43838:	str	r1, [fp, #-12]
   4383c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43840:	add	r3, r1, r3
   43844:	ldrb	r2, [r2]
   43848:	strb	r2, [r3]
   4384c:	ldr	r3, [fp, #-8]
   43850:	add	r3, r3, #1
   43854:	str	r3, [fp, #-8]
   43858:	ldr	r2, [fp, #-8]
   4385c:	ldr	r3, [fp, #-16]
   43860:	cmp	r2, r3
   43864:	bcc	436c0 <__assert_fail@plt+0x30fd4>
   43868:	nop	{0}
   4386c:	sub	sp, fp, #4
   43870:	ldr	fp, [sp]
   43874:	add	sp, sp, #4
   43878:	pop	{pc}		; (ldr pc, [sp], #4)
   4387c:	str	fp, [sp, #-8]!
   43880:	str	lr, [sp, #4]
   43884:	add	fp, sp, #4
   43888:	sub	sp, sp, #16
   4388c:	str	r0, [fp, #-16]
   43890:	mov	r1, #32
   43894:	ldr	r0, [fp, #-16]
   43898:	bl	123c8 <strchr@plt>
   4389c:	str	r0, [fp, #-8]
   438a0:	ldr	r3, [fp, #-8]
   438a4:	cmp	r3, #0
   438a8:	beq	438b8 <__assert_fail@plt+0x311cc>
   438ac:	ldr	r3, [fp, #-8]
   438b0:	mov	r2, #0
   438b4:	strb	r2, [r3]
   438b8:	ldr	r3, [fp, #-8]
   438bc:	mov	r0, r3
   438c0:	sub	sp, fp, #4
   438c4:	ldr	fp, [sp]
   438c8:	add	sp, sp, #4
   438cc:	pop	{pc}		; (ldr pc, [sp], #4)
   438d0:	str	fp, [sp, #-8]!
   438d4:	str	lr, [sp, #4]
   438d8:	add	fp, sp, #4
   438dc:	sub	sp, sp, #104	; 0x68
   438e0:	mov	r3, r0
   438e4:	strb	r3, [fp, #-93]	; 0xffffffa3
   438e8:	sub	r3, fp, #72	; 0x48
   438ec:	str	r3, [fp, #-8]
   438f0:	movw	r3, #47064	; 0xb7d8
   438f4:	movt	r3, #6
   438f8:	str	r3, [fp, #-12]
   438fc:	movw	r1, #47088	; 0xb7f0
   43900:	movt	r1, #6
   43904:	ldr	r0, [fp, #-12]
   43908:	bl	125e4 <fopen64@plt>
   4390c:	str	r0, [fp, #-16]
   43910:	ldr	r3, [fp, #-16]
   43914:	cmp	r3, #0
   43918:	beq	44018 <__assert_fail@plt+0x3192c>
   4391c:	mov	r3, #0
   43920:	str	r3, [fp, #-76]	; 0xffffffb4
   43924:	mov	r3, #0
   43928:	str	r3, [fp, #-80]	; 0xffffffb0
   4392c:	b	43f94 <__assert_fail@plt+0x318a8>
   43930:	ldr	r0, [fp, #-76]	; 0xffffffb4
   43934:	sub	r1, fp, #88	; 0x58
   43938:	sub	r2, fp, #84	; 0x54
   4393c:	sub	r3, fp, #92	; 0x5c
   43940:	str	r3, [sp]
   43944:	mov	r3, r1
   43948:	movw	r1, #47092	; 0xb7f4
   4394c:	movt	r1, #6
   43950:	bl	12578 <sscanf@plt>
   43954:	str	r0, [fp, #-20]	; 0xffffffec
   43958:	ldr	r3, [fp, #-20]	; 0xffffffec
   4395c:	cmp	r3, #2
   43960:	beq	43970 <__assert_fail@plt+0x31284>
   43964:	ldr	r3, [fp, #-20]	; 0xffffffec
   43968:	cmp	r3, #3
   4396c:	bne	43f68 <__assert_fail@plt+0x3187c>
   43970:	ldr	r3, [fp, #-76]	; 0xffffffb4
   43974:	ldr	r2, [fp, #-92]	; 0xffffffa4
   43978:	add	r3, r3, r2
   4397c:	str	r3, [fp, #-24]	; 0xffffffe8
   43980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43984:	bl	4387c <__assert_fail@plt+0x31190>
   43988:	str	r0, [fp, #-28]	; 0xffffffe4
   4398c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43990:	cmp	r3, #0
   43994:	beq	43f70 <__assert_fail@plt+0x31884>
   43998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4399c:	add	r3, r3, #1
   439a0:	str	r3, [fp, #-32]	; 0xffffffe0
   439a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   439a8:	bl	4387c <__assert_fail@plt+0x31190>
   439ac:	str	r0, [fp, #-28]	; 0xffffffe4
   439b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   439b4:	cmp	r3, #0
   439b8:	beq	43f78 <__assert_fail@plt+0x3188c>
   439bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   439c0:	add	r3, r3, #1
   439c4:	movw	r1, #47112	; 0xb808
   439c8:	movt	r1, #6
   439cc:	mov	r0, r3
   439d0:	bl	5eb88 <__assert_fail@plt+0x4c49c>
   439d4:	str	r0, [fp, #-36]	; 0xffffffdc
   439d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   439dc:	cmp	r3, #0
   439e0:	beq	43f80 <__assert_fail@plt+0x31894>
   439e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   439e8:	add	r3, r3, #3
   439ec:	str	r3, [fp, #-40]	; 0xffffffd8
   439f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   439f4:	bl	4387c <__assert_fail@plt+0x31190>
   439f8:	str	r0, [fp, #-28]	; 0xffffffe4
   439fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43a00:	cmp	r3, #0
   43a04:	beq	43f88 <__assert_fail@plt+0x3189c>
   43a08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43a0c:	add	r3, r3, #1
   43a10:	str	r3, [fp, #-44]	; 0xffffffd4
   43a14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   43a18:	bl	4387c <__assert_fail@plt+0x31190>
   43a1c:	mov	r3, r0
   43a20:	cmp	r3, #0
   43a24:	beq	43f90 <__assert_fail@plt+0x318a4>
   43a28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   43a2c:	bl	43684 <__assert_fail@plt+0x30f98>
   43a30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43a34:	bl	43684 <__assert_fail@plt+0x30f98>
   43a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43a3c:	bl	43684 <__assert_fail@plt+0x30f98>
   43a40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   43a44:	bl	43684 <__assert_fail@plt+0x30f98>
   43a48:	mov	r0, #32
   43a4c:	bl	3d8ec <__assert_fail@plt+0x2b200>
   43a50:	mov	r3, r0
   43a54:	str	r3, [fp, #-48]	; 0xffffffd0
   43a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   43a5c:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   43a60:	mov	r3, r0
   43a64:	mov	r2, r3
   43a68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43a6c:	str	r2, [r3]
   43a70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   43a74:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   43a78:	mov	r3, r0
   43a7c:	mov	r2, r3
   43a80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43a84:	str	r2, [r3, #4]
   43a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43a8c:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   43a90:	mov	r3, r0
   43a94:	mov	r2, r3
   43a98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43a9c:	str	r2, [r3, #8]
   43aa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   43aa4:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   43aa8:	mov	r3, r0
   43aac:	mov	r2, r3
   43ab0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43ab4:	str	r2, [r3, #12]
   43ab8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   43abc:	ldrb	r3, [r2, #24]
   43ac0:	orr	r3, r3, #4
   43ac4:	strb	r3, [r2, #24]
   43ac8:	ldr	r3, [fp, #-84]	; 0xffffffac
   43acc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   43ad0:	mov	r1, r2
   43ad4:	mov	r0, r3
   43ad8:	bl	12020 <gnu_dev_makedev@plt>
   43adc:	mov	r2, r0
   43ae0:	mov	r3, r1
   43ae4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   43ae8:	strd	r2, [r1, #16]
   43aec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43af0:	ldr	r3, [r3, #12]
   43af4:	movw	r1, #47116	; 0xb80c
   43af8:	movt	r1, #6
   43afc:	mov	r0, r3
   43b00:	bl	11ffc <strcmp@plt>
   43b04:	mov	r3, r0
   43b08:	cmp	r3, #0
   43b0c:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43b10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43b14:	ldr	r3, [r3, #12]
   43b18:	movw	r1, #47124	; 0xb814
   43b1c:	movt	r1, #6
   43b20:	mov	r0, r3
   43b24:	bl	11ffc <strcmp@plt>
   43b28:	mov	r3, r0
   43b2c:	cmp	r3, #0
   43b30:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43b34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43b38:	ldr	r3, [r3, #12]
   43b3c:	movw	r1, #47132	; 0xb81c
   43b40:	movt	r1, #6
   43b44:	mov	r0, r3
   43b48:	bl	11ffc <strcmp@plt>
   43b4c:	mov	r3, r0
   43b50:	cmp	r3, #0
   43b54:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43b58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43b5c:	ldr	r3, [r3, #12]
   43b60:	movw	r1, #47140	; 0xb824
   43b64:	movt	r1, #6
   43b68:	mov	r0, r3
   43b6c:	bl	11ffc <strcmp@plt>
   43b70:	mov	r3, r0
   43b74:	cmp	r3, #0
   43b78:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43b7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43b80:	ldr	r3, [r3, #12]
   43b84:	movw	r1, #47148	; 0xb82c
   43b88:	movt	r1, #6
   43b8c:	mov	r0, r3
   43b90:	bl	11ffc <strcmp@plt>
   43b94:	mov	r3, r0
   43b98:	cmp	r3, #0
   43b9c:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43ba0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43ba4:	ldr	r3, [r3, #12]
   43ba8:	movw	r1, #47156	; 0xb834
   43bac:	movt	r1, #6
   43bb0:	mov	r0, r3
   43bb4:	bl	11ffc <strcmp@plt>
   43bb8:	mov	r3, r0
   43bbc:	cmp	r3, #0
   43bc0:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43bc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43bc8:	ldr	r3, [r3, #12]
   43bcc:	movw	r1, #47164	; 0xb83c
   43bd0:	movt	r1, #6
   43bd4:	mov	r0, r3
   43bd8:	bl	11ffc <strcmp@plt>
   43bdc:	mov	r3, r0
   43be0:	cmp	r3, #0
   43be4:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43be8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43bec:	ldr	r3, [r3, #12]
   43bf0:	movw	r1, #47176	; 0xb848
   43bf4:	movt	r1, #6
   43bf8:	mov	r0, r3
   43bfc:	bl	11ffc <strcmp@plt>
   43c00:	mov	r3, r0
   43c04:	cmp	r3, #0
   43c08:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43c0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43c10:	ldr	r3, [r3, #12]
   43c14:	movw	r1, #47184	; 0xb850
   43c18:	movt	r1, #6
   43c1c:	mov	r0, r3
   43c20:	bl	11ffc <strcmp@plt>
   43c24:	mov	r3, r0
   43c28:	cmp	r3, #0
   43c2c:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43c30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43c34:	ldr	r3, [r3, #12]
   43c38:	movw	r1, #47196	; 0xb85c
   43c3c:	movt	r1, #6
   43c40:	mov	r0, r3
   43c44:	bl	11ffc <strcmp@plt>
   43c48:	mov	r3, r0
   43c4c:	cmp	r3, #0
   43c50:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43c54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43c58:	ldr	r3, [r3, #12]
   43c5c:	movw	r1, #47204	; 0xb864
   43c60:	movt	r1, #6
   43c64:	mov	r0, r3
   43c68:	bl	11ffc <strcmp@plt>
   43c6c:	mov	r3, r0
   43c70:	cmp	r3, #0
   43c74:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43c78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43c7c:	ldr	r3, [r3, #12]
   43c80:	movw	r1, #47212	; 0xb86c
   43c84:	movt	r1, #6
   43c88:	mov	r0, r3
   43c8c:	bl	11ffc <strcmp@plt>
   43c90:	mov	r3, r0
   43c94:	cmp	r3, #0
   43c98:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43c9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43ca0:	ldr	r3, [r3, #12]
   43ca4:	movw	r1, #47220	; 0xb874
   43ca8:	movt	r1, #6
   43cac:	mov	r0, r3
   43cb0:	bl	11ffc <strcmp@plt>
   43cb4:	mov	r3, r0
   43cb8:	cmp	r3, #0
   43cbc:	beq	43ce4 <__assert_fail@plt+0x315f8>
   43cc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43cc4:	ldr	r3, [r3, #12]
   43cc8:	movw	r1, #47228	; 0xb87c
   43ccc:	movt	r1, #6
   43cd0:	mov	r0, r3
   43cd4:	bl	11ffc <strcmp@plt>
   43cd8:	mov	r3, r0
   43cdc:	cmp	r3, #0
   43ce0:	bne	43cec <__assert_fail@plt+0x31600>
   43ce4:	mov	r3, #1
   43ce8:	b	43cf0 <__assert_fail@plt+0x31604>
   43cec:	mov	r3, #0
   43cf0:	and	r3, r3, #1
   43cf4:	uxtb	r1, r3
   43cf8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   43cfc:	ldrb	r3, [r2, #24]
   43d00:	bfi	r3, r1, #0, #1
   43d04:	strb	r3, [r2, #24]
   43d08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43d0c:	ldr	r3, [r3]
   43d10:	mov	r1, #58	; 0x3a
   43d14:	mov	r0, r3
   43d18:	bl	123c8 <strchr@plt>
   43d1c:	mov	r3, r0
   43d20:	cmp	r3, #0
   43d24:	bne	43f28 <__assert_fail@plt+0x3183c>
   43d28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43d2c:	ldr	r3, [r3]
   43d30:	ldrb	r3, [r3]
   43d34:	cmp	r3, #47	; 0x2f
   43d38:	bne	43dc0 <__assert_fail@plt+0x316d4>
   43d3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43d40:	ldr	r3, [r3]
   43d44:	add	r3, r3, #1
   43d48:	ldrb	r3, [r3]
   43d4c:	cmp	r3, #47	; 0x2f
   43d50:	bne	43dc0 <__assert_fail@plt+0x316d4>
   43d54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43d58:	ldr	r3, [r3, #12]
   43d5c:	movw	r1, #47236	; 0xb884
   43d60:	movt	r1, #6
   43d64:	mov	r0, r3
   43d68:	bl	11ffc <strcmp@plt>
   43d6c:	mov	r3, r0
   43d70:	cmp	r3, #0
   43d74:	beq	43f28 <__assert_fail@plt+0x3183c>
   43d78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43d7c:	ldr	r3, [r3, #12]
   43d80:	movw	r1, #47244	; 0xb88c
   43d84:	movt	r1, #6
   43d88:	mov	r0, r3
   43d8c:	bl	11ffc <strcmp@plt>
   43d90:	mov	r3, r0
   43d94:	cmp	r3, #0
   43d98:	beq	43f28 <__assert_fail@plt+0x3183c>
   43d9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43da0:	ldr	r3, [r3, #12]
   43da4:	movw	r1, #47252	; 0xb894
   43da8:	movt	r1, #6
   43dac:	mov	r0, r3
   43db0:	bl	11ffc <strcmp@plt>
   43db4:	mov	r3, r0
   43db8:	cmp	r3, #0
   43dbc:	beq	43f28 <__assert_fail@plt+0x3183c>
   43dc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43dc4:	ldr	r3, [r3, #12]
   43dc8:	movw	r1, #47260	; 0xb89c
   43dcc:	movt	r1, #6
   43dd0:	mov	r0, r3
   43dd4:	bl	11ffc <strcmp@plt>
   43dd8:	mov	r3, r0
   43ddc:	cmp	r3, #0
   43de0:	beq	43f28 <__assert_fail@plt+0x3183c>
   43de4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43de8:	ldr	r3, [r3, #12]
   43dec:	movw	r1, #47268	; 0xb8a4
   43df0:	movt	r1, #6
   43df4:	mov	r0, r3
   43df8:	bl	11ffc <strcmp@plt>
   43dfc:	mov	r3, r0
   43e00:	cmp	r3, #0
   43e04:	beq	43f28 <__assert_fail@plt+0x3183c>
   43e08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43e0c:	ldr	r3, [r3, #12]
   43e10:	movw	r1, #47272	; 0xb8a8
   43e14:	movt	r1, #6
   43e18:	mov	r0, r3
   43e1c:	bl	11ffc <strcmp@plt>
   43e20:	mov	r3, r0
   43e24:	cmp	r3, #0
   43e28:	beq	43f28 <__assert_fail@plt+0x3183c>
   43e2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43e30:	ldr	r3, [r3, #12]
   43e34:	movw	r1, #47280	; 0xb8b0
   43e38:	movt	r1, #6
   43e3c:	mov	r0, r3
   43e40:	bl	11ffc <strcmp@plt>
   43e44:	mov	r3, r0
   43e48:	cmp	r3, #0
   43e4c:	beq	43f28 <__assert_fail@plt+0x3183c>
   43e50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43e54:	ldr	r3, [r3, #12]
   43e58:	movw	r1, #47292	; 0xb8bc
   43e5c:	movt	r1, #6
   43e60:	mov	r0, r3
   43e64:	bl	11ffc <strcmp@plt>
   43e68:	mov	r3, r0
   43e6c:	cmp	r3, #0
   43e70:	beq	43f28 <__assert_fail@plt+0x3183c>
   43e74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43e78:	ldr	r3, [r3, #12]
   43e7c:	movw	r1, #47300	; 0xb8c4
   43e80:	movt	r1, #6
   43e84:	mov	r0, r3
   43e88:	bl	11ffc <strcmp@plt>
   43e8c:	mov	r3, r0
   43e90:	cmp	r3, #0
   43e94:	beq	43f28 <__assert_fail@plt+0x3183c>
   43e98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43e9c:	ldr	r3, [r3, #12]
   43ea0:	movw	r1, #47308	; 0xb8cc
   43ea4:	movt	r1, #6
   43ea8:	mov	r0, r3
   43eac:	bl	11ffc <strcmp@plt>
   43eb0:	mov	r3, r0
   43eb4:	cmp	r3, #0
   43eb8:	beq	43f28 <__assert_fail@plt+0x3183c>
   43ebc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43ec0:	ldr	r3, [r3, #12]
   43ec4:	movw	r1, #47316	; 0xb8d4
   43ec8:	movt	r1, #6
   43ecc:	mov	r0, r3
   43ed0:	bl	11ffc <strcmp@plt>
   43ed4:	mov	r3, r0
   43ed8:	cmp	r3, #0
   43edc:	beq	43f28 <__assert_fail@plt+0x3183c>
   43ee0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43ee4:	ldr	r3, [r3, #12]
   43ee8:	movw	r1, #47324	; 0xb8dc
   43eec:	movt	r1, #6
   43ef0:	mov	r0, r3
   43ef4:	bl	11ffc <strcmp@plt>
   43ef8:	mov	r3, r0
   43efc:	cmp	r3, #0
   43f00:	beq	43f28 <__assert_fail@plt+0x3183c>
   43f04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43f08:	ldr	r3, [r3]
   43f0c:	mov	r1, r3
   43f10:	movw	r0, #47332	; 0xb8e4
   43f14:	movt	r0, #6
   43f18:	bl	11ffc <strcmp@plt>
   43f1c:	mov	r3, r0
   43f20:	cmp	r3, #0
   43f24:	bne	43f30 <__assert_fail@plt+0x31844>
   43f28:	mov	r3, #1
   43f2c:	b	43f34 <__assert_fail@plt+0x31848>
   43f30:	mov	r3, #0
   43f34:	and	r3, r3, #1
   43f38:	uxtb	r1, r3
   43f3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   43f40:	ldrb	r3, [r2, #24]
   43f44:	bfi	r3, r1, #1, #1
   43f48:	strb	r3, [r2, #24]
   43f4c:	ldr	r3, [fp, #-8]
   43f50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   43f54:	str	r2, [r3]
   43f58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   43f5c:	add	r3, r3, #28
   43f60:	str	r3, [fp, #-8]
   43f64:	b	43f94 <__assert_fail@plt+0x318a8>
   43f68:	nop	{0}
   43f6c:	b	43f94 <__assert_fail@plt+0x318a8>
   43f70:	nop	{0}
   43f74:	b	43f94 <__assert_fail@plt+0x318a8>
   43f78:	nop	{0}
   43f7c:	b	43f94 <__assert_fail@plt+0x318a8>
   43f80:	nop	{0}
   43f84:	b	43f94 <__assert_fail@plt+0x318a8>
   43f88:	nop	{0}
   43f8c:	b	43f94 <__assert_fail@plt+0x318a8>
   43f90:	nop	{0}
   43f94:	sub	r1, fp, #80	; 0x50
   43f98:	sub	r3, fp, #76	; 0x4c
   43f9c:	ldr	r2, [fp, #-16]
   43fa0:	mov	r0, r3
   43fa4:	bl	12638 <getline@plt>
   43fa8:	mov	r3, r0
   43fac:	cmn	r3, #1
   43fb0:	bne	43930 <__assert_fail@plt+0x31244>
   43fb4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   43fb8:	mov	r0, r3
   43fbc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   43fc0:	ldr	r0, [fp, #-16]
   43fc4:	bl	12290 <ferror_unlocked@plt>
   43fc8:	mov	r3, r0
   43fcc:	cmp	r3, #0
   43fd0:	beq	44000 <__assert_fail@plt+0x31914>
   43fd4:	bl	12404 <__errno_location@plt>
   43fd8:	mov	r3, r0
   43fdc:	ldr	r3, [r3]
   43fe0:	str	r3, [fp, #-52]	; 0xffffffcc
   43fe4:	ldr	r0, [fp, #-16]
   43fe8:	bl	124d0 <fclose@plt>
   43fec:	bl	12404 <__errno_location@plt>
   43ff0:	mov	r2, r0
   43ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   43ff8:	str	r3, [r2]
   43ffc:	b	445ec <__assert_fail@plt+0x31f00>
   44000:	ldr	r0, [fp, #-16]
   44004:	bl	124d0 <fclose@plt>
   44008:	mov	r3, r0
   4400c:	cmn	r3, #1
   44010:	bne	445d4 <__assert_fail@plt+0x31ee8>
   44014:	b	445ec <__assert_fail@plt+0x31f00>
   44018:	movw	r3, #47340	; 0xb8ec
   4401c:	movt	r3, #6
   44020:	str	r3, [fp, #-56]	; 0xffffffc8
   44024:	movw	r1, #47352	; 0xb8f8
   44028:	movt	r1, #6
   4402c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   44030:	bl	12614 <setmntent@plt>
   44034:	str	r0, [fp, #-16]
   44038:	ldr	r3, [fp, #-16]
   4403c:	cmp	r3, #0
   44040:	bne	445a8 <__assert_fail@plt+0x31ebc>
   44044:	mov	r3, #0
   44048:	b	4464c <__assert_fail@plt+0x31f60>
   4404c:	movw	r1, #47356	; 0xb8fc
   44050:	movt	r1, #6
   44054:	ldr	r0, [fp, #-60]	; 0xffffffc4
   44058:	bl	12260 <hasmntopt@plt>
   4405c:	mov	r3, r0
   44060:	cmp	r3, #0
   44064:	movne	r3, #1
   44068:	moveq	r3, #0
   4406c:	strb	r3, [fp, #-61]	; 0xffffffc3
   44070:	mov	r0, #32
   44074:	bl	3d8ec <__assert_fail@plt+0x2b200>
   44078:	mov	r3, r0
   4407c:	str	r3, [fp, #-48]	; 0xffffffd0
   44080:	ldr	r3, [fp, #-60]	; 0xffffffc4
   44084:	ldr	r3, [r3]
   44088:	mov	r0, r3
   4408c:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   44090:	mov	r3, r0
   44094:	mov	r2, r3
   44098:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4409c:	str	r2, [r3]
   440a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   440a4:	ldr	r3, [r3, #4]
   440a8:	mov	r0, r3
   440ac:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   440b0:	mov	r3, r0
   440b4:	mov	r2, r3
   440b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   440bc:	str	r2, [r3, #4]
   440c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   440c4:	mov	r2, #0
   440c8:	str	r2, [r3, #8]
   440cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   440d0:	ldr	r3, [r3, #8]
   440d4:	mov	r0, r3
   440d8:	bl	3e118 <__assert_fail@plt+0x2ba2c>
   440dc:	mov	r3, r0
   440e0:	mov	r2, r3
   440e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   440e8:	str	r2, [r3, #12]
   440ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   440f0:	ldrb	r3, [r2, #24]
   440f4:	orr	r3, r3, #4
   440f8:	strb	r3, [r2, #24]
   440fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44100:	ldr	r3, [r3, #12]
   44104:	movw	r1, #47116	; 0xb80c
   44108:	movt	r1, #6
   4410c:	mov	r0, r3
   44110:	bl	11ffc <strcmp@plt>
   44114:	mov	r3, r0
   44118:	cmp	r3, #0
   4411c:	beq	44308 <__assert_fail@plt+0x31c1c>
   44120:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44124:	ldr	r3, [r3, #12]
   44128:	movw	r1, #47124	; 0xb814
   4412c:	movt	r1, #6
   44130:	mov	r0, r3
   44134:	bl	11ffc <strcmp@plt>
   44138:	mov	r3, r0
   4413c:	cmp	r3, #0
   44140:	beq	44308 <__assert_fail@plt+0x31c1c>
   44144:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44148:	ldr	r3, [r3, #12]
   4414c:	movw	r1, #47132	; 0xb81c
   44150:	movt	r1, #6
   44154:	mov	r0, r3
   44158:	bl	11ffc <strcmp@plt>
   4415c:	mov	r3, r0
   44160:	cmp	r3, #0
   44164:	beq	44308 <__assert_fail@plt+0x31c1c>
   44168:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4416c:	ldr	r3, [r3, #12]
   44170:	movw	r1, #47140	; 0xb824
   44174:	movt	r1, #6
   44178:	mov	r0, r3
   4417c:	bl	11ffc <strcmp@plt>
   44180:	mov	r3, r0
   44184:	cmp	r3, #0
   44188:	beq	44308 <__assert_fail@plt+0x31c1c>
   4418c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44190:	ldr	r3, [r3, #12]
   44194:	movw	r1, #47148	; 0xb82c
   44198:	movt	r1, #6
   4419c:	mov	r0, r3
   441a0:	bl	11ffc <strcmp@plt>
   441a4:	mov	r3, r0
   441a8:	cmp	r3, #0
   441ac:	beq	44308 <__assert_fail@plt+0x31c1c>
   441b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   441b4:	ldr	r3, [r3, #12]
   441b8:	movw	r1, #47156	; 0xb834
   441bc:	movt	r1, #6
   441c0:	mov	r0, r3
   441c4:	bl	11ffc <strcmp@plt>
   441c8:	mov	r3, r0
   441cc:	cmp	r3, #0
   441d0:	beq	44308 <__assert_fail@plt+0x31c1c>
   441d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   441d8:	ldr	r3, [r3, #12]
   441dc:	movw	r1, #47164	; 0xb83c
   441e0:	movt	r1, #6
   441e4:	mov	r0, r3
   441e8:	bl	11ffc <strcmp@plt>
   441ec:	mov	r3, r0
   441f0:	cmp	r3, #0
   441f4:	beq	44308 <__assert_fail@plt+0x31c1c>
   441f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   441fc:	ldr	r3, [r3, #12]
   44200:	movw	r1, #47176	; 0xb848
   44204:	movt	r1, #6
   44208:	mov	r0, r3
   4420c:	bl	11ffc <strcmp@plt>
   44210:	mov	r3, r0
   44214:	cmp	r3, #0
   44218:	beq	44308 <__assert_fail@plt+0x31c1c>
   4421c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44220:	ldr	r3, [r3, #12]
   44224:	movw	r1, #47184	; 0xb850
   44228:	movt	r1, #6
   4422c:	mov	r0, r3
   44230:	bl	11ffc <strcmp@plt>
   44234:	mov	r3, r0
   44238:	cmp	r3, #0
   4423c:	beq	44308 <__assert_fail@plt+0x31c1c>
   44240:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44244:	ldr	r3, [r3, #12]
   44248:	movw	r1, #47196	; 0xb85c
   4424c:	movt	r1, #6
   44250:	mov	r0, r3
   44254:	bl	11ffc <strcmp@plt>
   44258:	mov	r3, r0
   4425c:	cmp	r3, #0
   44260:	beq	44308 <__assert_fail@plt+0x31c1c>
   44264:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44268:	ldr	r3, [r3, #12]
   4426c:	movw	r1, #47204	; 0xb864
   44270:	movt	r1, #6
   44274:	mov	r0, r3
   44278:	bl	11ffc <strcmp@plt>
   4427c:	mov	r3, r0
   44280:	cmp	r3, #0
   44284:	beq	44308 <__assert_fail@plt+0x31c1c>
   44288:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4428c:	ldr	r3, [r3, #12]
   44290:	movw	r1, #47212	; 0xb86c
   44294:	movt	r1, #6
   44298:	mov	r0, r3
   4429c:	bl	11ffc <strcmp@plt>
   442a0:	mov	r3, r0
   442a4:	cmp	r3, #0
   442a8:	beq	44308 <__assert_fail@plt+0x31c1c>
   442ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   442b0:	ldr	r3, [r3, #12]
   442b4:	movw	r1, #47220	; 0xb874
   442b8:	movt	r1, #6
   442bc:	mov	r0, r3
   442c0:	bl	11ffc <strcmp@plt>
   442c4:	mov	r3, r0
   442c8:	cmp	r3, #0
   442cc:	beq	44308 <__assert_fail@plt+0x31c1c>
   442d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   442d4:	ldr	r3, [r3, #12]
   442d8:	movw	r1, #47228	; 0xb87c
   442dc:	movt	r1, #6
   442e0:	mov	r0, r3
   442e4:	bl	11ffc <strcmp@plt>
   442e8:	mov	r3, r0
   442ec:	cmp	r3, #0
   442f0:	bne	44310 <__assert_fail@plt+0x31c24>
   442f4:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   442f8:	eor	r3, r3, #1
   442fc:	uxtb	r3, r3
   44300:	cmp	r3, #0
   44304:	beq	44310 <__assert_fail@plt+0x31c24>
   44308:	mov	r3, #1
   4430c:	b	44314 <__assert_fail@plt+0x31c28>
   44310:	mov	r3, #0
   44314:	and	r3, r3, #1
   44318:	uxtb	r1, r3
   4431c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   44320:	ldrb	r3, [r2, #24]
   44324:	bfi	r3, r1, #0, #1
   44328:	strb	r3, [r2, #24]
   4432c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44330:	ldr	r3, [r3]
   44334:	mov	r1, #58	; 0x3a
   44338:	mov	r0, r3
   4433c:	bl	123c8 <strchr@plt>
   44340:	mov	r3, r0
   44344:	cmp	r3, #0
   44348:	bne	4454c <__assert_fail@plt+0x31e60>
   4434c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44350:	ldr	r3, [r3]
   44354:	ldrb	r3, [r3]
   44358:	cmp	r3, #47	; 0x2f
   4435c:	bne	443e4 <__assert_fail@plt+0x31cf8>
   44360:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44364:	ldr	r3, [r3]
   44368:	add	r3, r3, #1
   4436c:	ldrb	r3, [r3]
   44370:	cmp	r3, #47	; 0x2f
   44374:	bne	443e4 <__assert_fail@plt+0x31cf8>
   44378:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4437c:	ldr	r3, [r3, #12]
   44380:	movw	r1, #47236	; 0xb884
   44384:	movt	r1, #6
   44388:	mov	r0, r3
   4438c:	bl	11ffc <strcmp@plt>
   44390:	mov	r3, r0
   44394:	cmp	r3, #0
   44398:	beq	4454c <__assert_fail@plt+0x31e60>
   4439c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   443a0:	ldr	r3, [r3, #12]
   443a4:	movw	r1, #47244	; 0xb88c
   443a8:	movt	r1, #6
   443ac:	mov	r0, r3
   443b0:	bl	11ffc <strcmp@plt>
   443b4:	mov	r3, r0
   443b8:	cmp	r3, #0
   443bc:	beq	4454c <__assert_fail@plt+0x31e60>
   443c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   443c4:	ldr	r3, [r3, #12]
   443c8:	movw	r1, #47252	; 0xb894
   443cc:	movt	r1, #6
   443d0:	mov	r0, r3
   443d4:	bl	11ffc <strcmp@plt>
   443d8:	mov	r3, r0
   443dc:	cmp	r3, #0
   443e0:	beq	4454c <__assert_fail@plt+0x31e60>
   443e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   443e8:	ldr	r3, [r3, #12]
   443ec:	movw	r1, #47260	; 0xb89c
   443f0:	movt	r1, #6
   443f4:	mov	r0, r3
   443f8:	bl	11ffc <strcmp@plt>
   443fc:	mov	r3, r0
   44400:	cmp	r3, #0
   44404:	beq	4454c <__assert_fail@plt+0x31e60>
   44408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4440c:	ldr	r3, [r3, #12]
   44410:	movw	r1, #47268	; 0xb8a4
   44414:	movt	r1, #6
   44418:	mov	r0, r3
   4441c:	bl	11ffc <strcmp@plt>
   44420:	mov	r3, r0
   44424:	cmp	r3, #0
   44428:	beq	4454c <__assert_fail@plt+0x31e60>
   4442c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44430:	ldr	r3, [r3, #12]
   44434:	movw	r1, #47272	; 0xb8a8
   44438:	movt	r1, #6
   4443c:	mov	r0, r3
   44440:	bl	11ffc <strcmp@plt>
   44444:	mov	r3, r0
   44448:	cmp	r3, #0
   4444c:	beq	4454c <__assert_fail@plt+0x31e60>
   44450:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44454:	ldr	r3, [r3, #12]
   44458:	movw	r1, #47280	; 0xb8b0
   4445c:	movt	r1, #6
   44460:	mov	r0, r3
   44464:	bl	11ffc <strcmp@plt>
   44468:	mov	r3, r0
   4446c:	cmp	r3, #0
   44470:	beq	4454c <__assert_fail@plt+0x31e60>
   44474:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44478:	ldr	r3, [r3, #12]
   4447c:	movw	r1, #47292	; 0xb8bc
   44480:	movt	r1, #6
   44484:	mov	r0, r3
   44488:	bl	11ffc <strcmp@plt>
   4448c:	mov	r3, r0
   44490:	cmp	r3, #0
   44494:	beq	4454c <__assert_fail@plt+0x31e60>
   44498:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4449c:	ldr	r3, [r3, #12]
   444a0:	movw	r1, #47300	; 0xb8c4
   444a4:	movt	r1, #6
   444a8:	mov	r0, r3
   444ac:	bl	11ffc <strcmp@plt>
   444b0:	mov	r3, r0
   444b4:	cmp	r3, #0
   444b8:	beq	4454c <__assert_fail@plt+0x31e60>
   444bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   444c0:	ldr	r3, [r3, #12]
   444c4:	movw	r1, #47308	; 0xb8cc
   444c8:	movt	r1, #6
   444cc:	mov	r0, r3
   444d0:	bl	11ffc <strcmp@plt>
   444d4:	mov	r3, r0
   444d8:	cmp	r3, #0
   444dc:	beq	4454c <__assert_fail@plt+0x31e60>
   444e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   444e4:	ldr	r3, [r3, #12]
   444e8:	movw	r1, #47316	; 0xb8d4
   444ec:	movt	r1, #6
   444f0:	mov	r0, r3
   444f4:	bl	11ffc <strcmp@plt>
   444f8:	mov	r3, r0
   444fc:	cmp	r3, #0
   44500:	beq	4454c <__assert_fail@plt+0x31e60>
   44504:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44508:	ldr	r3, [r3, #12]
   4450c:	movw	r1, #47324	; 0xb8dc
   44510:	movt	r1, #6
   44514:	mov	r0, r3
   44518:	bl	11ffc <strcmp@plt>
   4451c:	mov	r3, r0
   44520:	cmp	r3, #0
   44524:	beq	4454c <__assert_fail@plt+0x31e60>
   44528:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4452c:	ldr	r3, [r3]
   44530:	mov	r1, r3
   44534:	movw	r0, #47332	; 0xb8e4
   44538:	movt	r0, #6
   4453c:	bl	11ffc <strcmp@plt>
   44540:	mov	r3, r0
   44544:	cmp	r3, #0
   44548:	bne	44554 <__assert_fail@plt+0x31e68>
   4454c:	mov	r3, #1
   44550:	b	44558 <__assert_fail@plt+0x31e6c>
   44554:	mov	r3, #0
   44558:	and	r3, r3, #1
   4455c:	uxtb	r1, r3
   44560:	ldr	r2, [fp, #-48]	; 0xffffffd0
   44564:	ldrb	r3, [r2, #24]
   44568:	bfi	r3, r1, #1, #1
   4456c:	strb	r3, [r2, #24]
   44570:	ldr	r3, [fp, #-60]	; 0xffffffc4
   44574:	ldr	r3, [r3, #12]
   44578:	mov	r0, r3
   4457c:	bl	43658 <__assert_fail@plt+0x30f6c>
   44580:	mov	r2, r0
   44584:	mov	r3, r1
   44588:	ldr	r1, [fp, #-48]	; 0xffffffd0
   4458c:	strd	r2, [r1, #16]
   44590:	ldr	r3, [fp, #-8]
   44594:	ldr	r2, [fp, #-48]	; 0xffffffd0
   44598:	str	r2, [r3]
   4459c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   445a0:	add	r3, r3, #28
   445a4:	str	r3, [fp, #-8]
   445a8:	ldr	r0, [fp, #-16]
   445ac:	bl	122c0 <getmntent@plt>
   445b0:	str	r0, [fp, #-60]	; 0xffffffc4
   445b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   445b8:	cmp	r3, #0
   445bc:	bne	4404c <__assert_fail@plt+0x31960>
   445c0:	ldr	r0, [fp, #-16]
   445c4:	bl	124f4 <endmntent@plt>
   445c8:	mov	r3, r0
   445cc:	cmp	r3, #0
   445d0:	beq	445e8 <__assert_fail@plt+0x31efc>
   445d4:	ldr	r3, [fp, #-8]
   445d8:	mov	r2, #0
   445dc:	str	r2, [r3]
   445e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   445e4:	b	4464c <__assert_fail@plt+0x31f60>
   445e8:	nop	{0}
   445ec:	bl	12404 <__errno_location@plt>
   445f0:	mov	r3, r0
   445f4:	ldr	r3, [r3]
   445f8:	str	r3, [fp, #-68]	; 0xffffffbc
   445fc:	ldr	r3, [fp, #-8]
   44600:	mov	r2, #0
   44604:	str	r2, [r3]
   44608:	b	4462c <__assert_fail@plt+0x31f40>
   4460c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   44610:	ldr	r3, [r3, #28]
   44614:	str	r3, [fp, #-48]	; 0xffffffd0
   44618:	ldr	r3, [fp, #-72]	; 0xffffffb8
   4461c:	mov	r0, r3
   44620:	bl	44660 <__assert_fail@plt+0x31f74>
   44624:	ldr	r3, [fp, #-48]	; 0xffffffd0
   44628:	str	r3, [fp, #-72]	; 0xffffffb8
   4462c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   44630:	cmp	r3, #0
   44634:	bne	4460c <__assert_fail@plt+0x31f20>
   44638:	bl	12404 <__errno_location@plt>
   4463c:	mov	r2, r0
   44640:	ldr	r3, [fp, #-68]	; 0xffffffbc
   44644:	str	r3, [r2]
   44648:	mov	r3, #0
   4464c:	mov	r0, r3
   44650:	sub	sp, fp, #4
   44654:	ldr	fp, [sp]
   44658:	add	sp, sp, #4
   4465c:	pop	{pc}		; (ldr pc, [sp], #4)
   44660:	str	fp, [sp, #-8]!
   44664:	str	lr, [sp, #4]
   44668:	add	fp, sp, #4
   4466c:	sub	sp, sp, #8
   44670:	str	r0, [fp, #-8]
   44674:	ldr	r3, [fp, #-8]
   44678:	ldr	r3, [r3]
   4467c:	mov	r0, r3
   44680:	bl	3fe0c <__assert_fail@plt+0x2d720>
   44684:	ldr	r3, [fp, #-8]
   44688:	ldr	r3, [r3, #4]
   4468c:	mov	r0, r3
   44690:	bl	3fe0c <__assert_fail@plt+0x2d720>
   44694:	ldr	r3, [fp, #-8]
   44698:	ldr	r3, [r3, #8]
   4469c:	mov	r0, r3
   446a0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   446a4:	ldr	r3, [fp, #-8]
   446a8:	ldrb	r3, [r3, #24]
   446ac:	and	r3, r3, #4
   446b0:	uxtb	r3, r3
   446b4:	cmp	r3, #0
   446b8:	beq	446cc <__assert_fail@plt+0x31fe0>
   446bc:	ldr	r3, [fp, #-8]
   446c0:	ldr	r3, [r3, #12]
   446c4:	mov	r0, r3
   446c8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   446cc:	ldr	r0, [fp, #-8]
   446d0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   446d4:	nop	{0}
   446d8:	sub	sp, fp, #4
   446dc:	ldr	fp, [sp]
   446e0:	add	sp, sp, #4
   446e4:	pop	{pc}		; (ldr pc, [sp], #4)
   446e8:	str	fp, [sp, #-8]!
   446ec:	str	lr, [sp, #4]
   446f0:	add	fp, sp, #4
   446f4:	sub	sp, sp, #16
   446f8:	str	r0, [fp, #-16]
   446fc:	str	r1, [fp, #-20]	; 0xffffffec
   44700:	ldr	r3, [fp, #-16]
   44704:	cmp	r3, #0
   44708:	bne	4471c <__assert_fail@plt+0x32030>
   4470c:	ldr	r0, [fp, #-20]	; 0xffffffec
   44710:	bl	43510 <__assert_fail@plt+0x30e24>
   44714:	mov	r3, r0
   44718:	b	4478c <__assert_fail@plt+0x320a0>
   4471c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44720:	cmp	r3, #0
   44724:	bne	44738 <__assert_fail@plt+0x3204c>
   44728:	ldr	r0, [fp, #-16]
   4472c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   44730:	mov	r3, #0
   44734:	b	4478c <__assert_fail@plt+0x320a0>
   44738:	mov	r2, #0
   4473c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44740:	cmp	r3, #0
   44744:	bge	4474c <__assert_fail@plt+0x32060>
   44748:	mov	r2, #1
   4474c:	mov	r3, r2
   44750:	and	r3, r3, #1
   44754:	uxtb	r3, r3
   44758:	cmp	r3, #0
   4475c:	beq	44778 <__assert_fail@plt+0x3208c>
   44760:	bl	12404 <__errno_location@plt>
   44764:	mov	r2, r0
   44768:	mov	r3, #12
   4476c:	str	r3, [r2]
   44770:	mov	r3, #0
   44774:	b	4478c <__assert_fail@plt+0x320a0>
   44778:	ldr	r1, [fp, #-20]	; 0xffffffec
   4477c:	ldr	r0, [fp, #-16]
   44780:	bl	121a0 <realloc@plt>
   44784:	str	r0, [fp, #-8]
   44788:	ldr	r3, [fp, #-8]
   4478c:	mov	r0, r3
   44790:	sub	sp, fp, #4
   44794:	ldr	fp, [sp]
   44798:	add	sp, sp, #4
   4479c:	pop	{pc}		; (ldr pc, [sp], #4)
   447a0:	str	fp, [sp, #-8]!
   447a4:	str	lr, [sp, #4]
   447a8:	add	fp, sp, #4
   447ac:	sub	sp, sp, #24
   447b0:	str	r0, [fp, #-16]
   447b4:	str	r1, [fp, #-20]	; 0xffffffec
   447b8:	str	r2, [fp, #-24]	; 0xffffffe8
   447bc:	mov	ip, #0
   447c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   447c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   447c8:	umull	r0, r1, r2, r3
   447cc:	mov	r2, #0
   447d0:	mov	r3, #0
   447d4:	mov	r2, r1
   447d8:	mov	r3, #0
   447dc:	cmp	r2, #0
   447e0:	beq	447e8 <__assert_fail@plt+0x320fc>
   447e4:	mov	ip, #1
   447e8:	mov	r3, r0
   447ec:	str	r3, [fp, #-8]
   447f0:	mov	r3, ip
   447f4:	and	r3, r3, #1
   447f8:	uxtb	r3, r3
   447fc:	cmp	r3, #0
   44800:	beq	4481c <__assert_fail@plt+0x32130>
   44804:	bl	12404 <__errno_location@plt>
   44808:	mov	r2, r0
   4480c:	mov	r3, #12
   44810:	str	r3, [r2]
   44814:	mov	r3, #0
   44818:	b	44830 <__assert_fail@plt+0x32144>
   4481c:	ldr	r3, [fp, #-8]
   44820:	mov	r1, r3
   44824:	ldr	r0, [fp, #-16]
   44828:	bl	446e8 <__assert_fail@plt+0x31ffc>
   4482c:	mov	r3, r0
   44830:	mov	r0, r3
   44834:	sub	sp, fp, #4
   44838:	ldr	fp, [sp]
   4483c:	add	sp, sp, #4
   44840:	pop	{pc}		; (ldr pc, [sp], #4)
   44844:	push	{fp}		; (str fp, [sp, #-4]!)
   44848:	add	fp, sp, #0
   4484c:	mvn	r3, #0
   44850:	mov	r0, r3
   44854:	add	sp, fp, #0
   44858:	pop	{fp}		; (ldr fp, [sp], #4)
   4485c:	bx	lr
   44860:	push	{fp}		; (str fp, [sp, #-4]!)
   44864:	add	fp, sp, #0
   44868:	sub	sp, sp, #12
   4486c:	str	r0, [fp, #-8]
   44870:	str	r1, [fp, #-12]
   44874:	ldr	r3, [fp, #-12]
   44878:	add	r2, r3, #31
   4487c:	cmp	r3, #0
   44880:	movlt	r3, r2
   44884:	movge	r3, r3
   44888:	asr	r3, r3, #5
   4488c:	mov	r0, r3
   44890:	mov	r3, r0
   44894:	lsl	r3, r3, #2
   44898:	ldr	r2, [fp, #-8]
   4489c:	add	r3, r2, r3
   448a0:	ldr	r1, [r3]
   448a4:	ldr	r3, [fp, #-12]
   448a8:	rsbs	r2, r3, #0
   448ac:	and	r3, r3, #31
   448b0:	and	r2, r2, #31
   448b4:	rsbpl	r3, r2, #0
   448b8:	mov	r2, #1
   448bc:	lsl	r2, r2, r3
   448c0:	mov	r3, r0
   448c4:	lsl	r3, r3, #2
   448c8:	ldr	r0, [fp, #-8]
   448cc:	add	r3, r0, r3
   448d0:	orr	r2, r1, r2
   448d4:	str	r2, [r3]
   448d8:	nop	{0}
   448dc:	add	sp, fp, #0
   448e0:	pop	{fp}		; (ldr fp, [sp], #4)
   448e4:	bx	lr
   448e8:	push	{fp}		; (str fp, [sp, #-4]!)
   448ec:	add	fp, sp, #0
   448f0:	sub	sp, sp, #12
   448f4:	str	r0, [fp, #-8]
   448f8:	str	r1, [fp, #-12]
   448fc:	ldr	r3, [fp, #-12]
   44900:	add	r2, r3, #31
   44904:	cmp	r3, #0
   44908:	movlt	r3, r2
   4490c:	movge	r3, r3
   44910:	asr	r3, r3, #5
   44914:	mov	r0, r3
   44918:	mov	r3, r0
   4491c:	lsl	r3, r3, #2
   44920:	ldr	r2, [fp, #-8]
   44924:	add	r3, r2, r3
   44928:	ldr	r1, [r3]
   4492c:	ldr	r3, [fp, #-12]
   44930:	rsbs	r2, r3, #0
   44934:	and	r3, r3, #31
   44938:	and	r2, r2, #31
   4493c:	rsbpl	r3, r2, #0
   44940:	mov	r2, #1
   44944:	lsl	r3, r2, r3
   44948:	mvn	r2, r3
   4494c:	mov	r3, r0
   44950:	lsl	r3, r3, #2
   44954:	ldr	r0, [fp, #-8]
   44958:	add	r3, r0, r3
   4495c:	and	r2, r2, r1
   44960:	str	r2, [r3]
   44964:	nop	{0}
   44968:	add	sp, fp, #0
   4496c:	pop	{fp}		; (ldr fp, [sp], #4)
   44970:	bx	lr
   44974:	push	{fp}		; (str fp, [sp, #-4]!)
   44978:	add	fp, sp, #0
   4497c:	sub	sp, sp, #12
   44980:	str	r0, [fp, #-8]
   44984:	str	r1, [fp, #-12]
   44988:	ldr	r3, [fp, #-12]
   4498c:	add	r2, r3, #31
   44990:	cmp	r3, #0
   44994:	movlt	r3, r2
   44998:	movge	r3, r3
   4499c:	asr	r3, r3, #5
   449a0:	lsl	r3, r3, #2
   449a4:	ldr	r2, [fp, #-8]
   449a8:	add	r3, r2, r3
   449ac:	ldr	r2, [r3]
   449b0:	ldr	r3, [fp, #-12]
   449b4:	rsbs	r1, r3, #0
   449b8:	and	r3, r3, #31
   449bc:	and	r1, r1, #31
   449c0:	rsbpl	r3, r1, #0
   449c4:	lsr	r3, r2, r3
   449c8:	and	r3, r3, #1
   449cc:	cmp	r3, #0
   449d0:	movne	r3, #1
   449d4:	moveq	r3, #0
   449d8:	uxtb	r3, r3
   449dc:	mov	r0, r3
   449e0:	add	sp, fp, #0
   449e4:	pop	{fp}		; (ldr fp, [sp], #4)
   449e8:	bx	lr
   449ec:	str	fp, [sp, #-8]!
   449f0:	str	lr, [sp, #4]
   449f4:	add	fp, sp, #4
   449f8:	sub	sp, sp, #8
   449fc:	str	r0, [fp, #-8]
   44a00:	mov	r2, #32
   44a04:	mov	r1, #0
   44a08:	ldr	r0, [fp, #-8]
   44a0c:	bl	12434 <memset@plt>
   44a10:	nop	{0}
   44a14:	sub	sp, fp, #4
   44a18:	ldr	fp, [sp]
   44a1c:	add	sp, sp, #4
   44a20:	pop	{pc}		; (ldr pc, [sp], #4)
   44a24:	str	fp, [sp, #-8]!
   44a28:	str	lr, [sp, #4]
   44a2c:	add	fp, sp, #4
   44a30:	sub	sp, sp, #8
   44a34:	str	r0, [fp, #-8]
   44a38:	mov	r2, #32
   44a3c:	mvn	r1, #0
   44a40:	ldr	r0, [fp, #-8]
   44a44:	bl	12434 <memset@plt>
   44a48:	nop	{0}
   44a4c:	sub	sp, fp, #4
   44a50:	ldr	fp, [sp]
   44a54:	add	sp, sp, #4
   44a58:	pop	{pc}		; (ldr pc, [sp], #4)
   44a5c:	str	fp, [sp, #-8]!
   44a60:	str	lr, [sp, #4]
   44a64:	add	fp, sp, #4
   44a68:	sub	sp, sp, #8
   44a6c:	str	r0, [fp, #-8]
   44a70:	str	r1, [fp, #-12]
   44a74:	mov	r2, #32
   44a78:	ldr	r1, [fp, #-12]
   44a7c:	ldr	r0, [fp, #-8]
   44a80:	bl	120f8 <memcpy@plt>
   44a84:	nop	{0}
   44a88:	sub	sp, fp, #4
   44a8c:	ldr	fp, [sp]
   44a90:	add	sp, sp, #4
   44a94:	pop	{pc}		; (ldr pc, [sp], #4)
   44a98:	push	{fp}		; (str fp, [sp, #-4]!)
   44a9c:	add	fp, sp, #0
   44aa0:	sub	sp, sp, #20
   44aa4:	str	r0, [fp, #-16]
   44aa8:	mov	r3, #0
   44aac:	str	r3, [fp, #-8]
   44ab0:	b	44aec <__assert_fail@plt+0x32400>
   44ab4:	ldr	r3, [fp, #-8]
   44ab8:	lsl	r3, r3, #2
   44abc:	ldr	r2, [fp, #-16]
   44ac0:	add	r3, r2, r3
   44ac4:	ldr	r2, [r3]
   44ac8:	ldr	r3, [fp, #-8]
   44acc:	lsl	r3, r3, #2
   44ad0:	ldr	r1, [fp, #-16]
   44ad4:	add	r3, r1, r3
   44ad8:	mvn	r2, r2
   44adc:	str	r2, [r3]
   44ae0:	ldr	r3, [fp, #-8]
   44ae4:	add	r3, r3, #1
   44ae8:	str	r3, [fp, #-8]
   44aec:	ldr	r3, [fp, #-8]
   44af0:	cmp	r3, #7
   44af4:	ble	44ab4 <__assert_fail@plt+0x323c8>
   44af8:	nop	{0}
   44afc:	add	sp, fp, #0
   44b00:	pop	{fp}		; (ldr fp, [sp], #4)
   44b04:	bx	lr
   44b08:	push	{fp}		; (str fp, [sp, #-4]!)
   44b0c:	add	fp, sp, #0
   44b10:	sub	sp, sp, #20
   44b14:	str	r0, [fp, #-16]
   44b18:	str	r1, [fp, #-20]	; 0xffffffec
   44b1c:	mov	r3, #0
   44b20:	str	r3, [fp, #-8]
   44b24:	b	44b74 <__assert_fail@plt+0x32488>
   44b28:	ldr	r3, [fp, #-8]
   44b2c:	lsl	r3, r3, #2
   44b30:	ldr	r2, [fp, #-16]
   44b34:	add	r3, r2, r3
   44b38:	ldr	r1, [r3]
   44b3c:	ldr	r3, [fp, #-8]
   44b40:	lsl	r3, r3, #2
   44b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   44b48:	add	r3, r2, r3
   44b4c:	ldr	r2, [r3]
   44b50:	ldr	r3, [fp, #-8]
   44b54:	lsl	r3, r3, #2
   44b58:	ldr	r0, [fp, #-16]
   44b5c:	add	r3, r0, r3
   44b60:	orr	r2, r1, r2
   44b64:	str	r2, [r3]
   44b68:	ldr	r3, [fp, #-8]
   44b6c:	add	r3, r3, #1
   44b70:	str	r3, [fp, #-8]
   44b74:	ldr	r3, [fp, #-8]
   44b78:	cmp	r3, #7
   44b7c:	ble	44b28 <__assert_fail@plt+0x3243c>
   44b80:	nop	{0}
   44b84:	add	sp, fp, #0
   44b88:	pop	{fp}		; (ldr fp, [sp], #4)
   44b8c:	bx	lr
   44b90:	push	{fp}		; (str fp, [sp, #-4]!)
   44b94:	add	fp, sp, #0
   44b98:	sub	sp, sp, #20
   44b9c:	str	r0, [fp, #-16]
   44ba0:	str	r1, [fp, #-20]	; 0xffffffec
   44ba4:	mov	r3, #0
   44ba8:	str	r3, [fp, #-8]
   44bac:	b	44bfc <__assert_fail@plt+0x32510>
   44bb0:	ldr	r3, [fp, #-8]
   44bb4:	lsl	r3, r3, #2
   44bb8:	ldr	r2, [fp, #-16]
   44bbc:	add	r3, r2, r3
   44bc0:	ldr	r1, [r3]
   44bc4:	ldr	r3, [fp, #-8]
   44bc8:	lsl	r3, r3, #2
   44bcc:	ldr	r2, [fp, #-20]	; 0xffffffec
   44bd0:	add	r3, r2, r3
   44bd4:	ldr	r2, [r3]
   44bd8:	ldr	r3, [fp, #-8]
   44bdc:	lsl	r3, r3, #2
   44be0:	ldr	r0, [fp, #-16]
   44be4:	add	r3, r0, r3
   44be8:	and	r2, r2, r1
   44bec:	str	r2, [r3]
   44bf0:	ldr	r3, [fp, #-8]
   44bf4:	add	r3, r3, #1
   44bf8:	str	r3, [fp, #-8]
   44bfc:	ldr	r3, [fp, #-8]
   44c00:	cmp	r3, #7
   44c04:	ble	44bb0 <__assert_fail@plt+0x324c4>
   44c08:	nop	{0}
   44c0c:	add	sp, fp, #0
   44c10:	pop	{fp}		; (ldr fp, [sp], #4)
   44c14:	bx	lr
   44c18:	push	{fp}		; (str fp, [sp, #-4]!)
   44c1c:	add	fp, sp, #0
   44c20:	sub	sp, sp, #20
   44c24:	str	r0, [fp, #-16]
   44c28:	str	r1, [fp, #-20]	; 0xffffffec
   44c2c:	ldr	r3, [fp, #-16]
   44c30:	ldr	r3, [r3, #80]	; 0x50
   44c34:	cmp	r3, #1
   44c38:	bne	44c44 <__assert_fail@plt+0x32558>
   44c3c:	mov	r3, #1
   44c40:	b	44cac <__assert_fail@plt+0x325c0>
   44c44:	mov	r3, #1
   44c48:	str	r3, [fp, #-8]
   44c4c:	b	44c84 <__assert_fail@plt+0x32598>
   44c50:	ldr	r3, [fp, #-16]
   44c54:	ldr	r2, [r3, #8]
   44c58:	ldr	r1, [fp, #-20]	; 0xffffffec
   44c5c:	ldr	r3, [fp, #-8]
   44c60:	add	r3, r1, r3
   44c64:	lsl	r3, r3, #2
   44c68:	add	r3, r2, r3
   44c6c:	ldr	r3, [r3]
   44c70:	cmn	r3, #1
   44c74:	bne	44ca4 <__assert_fail@plt+0x325b8>
   44c78:	ldr	r3, [fp, #-8]
   44c7c:	add	r3, r3, #1
   44c80:	str	r3, [fp, #-8]
   44c84:	ldr	r2, [fp, #-20]	; 0xffffffec
   44c88:	ldr	r3, [fp, #-8]
   44c8c:	add	r2, r2, r3
   44c90:	ldr	r3, [fp, #-16]
   44c94:	ldr	r3, [r3, #28]
   44c98:	cmp	r2, r3
   44c9c:	blt	44c50 <__assert_fail@plt+0x32564>
   44ca0:	b	44ca8 <__assert_fail@plt+0x325bc>
   44ca4:	nop	{0}
   44ca8:	ldr	r3, [fp, #-8]
   44cac:	mov	r0, r3
   44cb0:	add	sp, fp, #0
   44cb4:	pop	{fp}		; (ldr fp, [sp], #4)
   44cb8:	bx	lr
   44cbc:	push	{fp}		; (str fp, [sp, #-4]!)
   44cc0:	add	fp, sp, #0
   44cc4:	sub	sp, sp, #12
   44cc8:	str	r0, [fp, #-8]
   44ccc:	str	r1, [fp, #-12]
   44cd0:	ldr	r3, [fp, #-8]
   44cd4:	ldr	r3, [r3, #80]	; 0x50
   44cd8:	cmp	r3, #1
   44cdc:	bne	44cf8 <__assert_fail@plt+0x3260c>
   44ce0:	ldr	r3, [fp, #-8]
   44ce4:	ldr	r2, [r3, #4]
   44ce8:	ldr	r3, [fp, #-12]
   44cec:	add	r3, r2, r3
   44cf0:	ldrb	r3, [r3]
   44cf4:	b	44d10 <__assert_fail@plt+0x32624>
   44cf8:	ldr	r3, [fp, #-8]
   44cfc:	ldr	r2, [r3, #8]
   44d00:	ldr	r3, [fp, #-12]
   44d04:	lsl	r3, r3, #2
   44d08:	add	r3, r2, r3
   44d0c:	ldr	r3, [r3]
   44d10:	mov	r0, r3
   44d14:	add	sp, fp, #0
   44d18:	pop	{fp}		; (ldr fp, [sp], #4)
   44d1c:	bx	lr
   44d20:	push	{fp}		; (str fp, [sp, #-4]!)
   44d24:	add	fp, sp, #0
   44d28:	sub	sp, sp, #12
   44d2c:	str	r0, [fp, #-8]
   44d30:	str	r1, [fp, #-12]
   44d34:	mov	r3, #1
   44d38:	mov	r0, r3
   44d3c:	add	sp, fp, #0
   44d40:	pop	{fp}		; (ldr fp, [sp], #4)
   44d44:	bx	lr
   44d48:	str	fp, [sp, #-8]!
   44d4c:	str	lr, [sp, #4]
   44d50:	add	fp, sp, #4
   44d54:	sub	sp, sp, #32
   44d58:	str	r0, [fp, #-16]
   44d5c:	str	r1, [fp, #-20]	; 0xffffffec
   44d60:	str	r2, [fp, #-24]	; 0xffffffe8
   44d64:	str	r3, [fp, #-28]	; 0xffffffe4
   44d68:	ldr	r3, [fp, #12]
   44d6c:	ldr	r3, [r3, #92]	; 0x5c
   44d70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   44d74:	cmp	r2, r3
   44d78:	bge	44d88 <__assert_fail@plt+0x3269c>
   44d7c:	ldr	r3, [fp, #12]
   44d80:	ldr	r3, [r3, #92]	; 0x5c
   44d84:	str	r3, [fp, #-28]	; 0xffffffe4
   44d88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44d8c:	add	r3, r3, #1
   44d90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   44d94:	cmp	r2, r3
   44d98:	movlt	r3, r2
   44d9c:	movge	r3, r3
   44da0:	str	r3, [fp, #-8]
   44da4:	ldr	r3, [fp, #12]
   44da8:	str	r3, [sp, #4]
   44dac:	ldrb	r3, [fp, #8]
   44db0:	str	r3, [sp]
   44db4:	ldr	r3, [fp, #4]
   44db8:	ldr	r2, [fp, #-16]
   44dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44dc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   44dc4:	bl	45268 <__assert_fail@plt+0x32b7c>
   44dc8:	ldr	r1, [fp, #-8]
   44dcc:	ldr	r0, [fp, #-16]
   44dd0:	bl	450bc <__assert_fail@plt+0x329d0>
   44dd4:	str	r0, [fp, #-12]
   44dd8:	ldr	r3, [fp, #-12]
   44ddc:	cmp	r3, #0
   44de0:	movne	r3, #1
   44de4:	moveq	r3, #0
   44de8:	uxtb	r3, r3
   44dec:	cmp	r3, #0
   44df0:	beq	44dfc <__assert_fail@plt+0x32710>
   44df4:	ldr	r3, [fp, #-12]
   44df8:	b	44e98 <__assert_fail@plt+0x327ac>
   44dfc:	ldr	r3, [fp, #12]
   44e00:	add	r2, r3, #96	; 0x60
   44e04:	ldr	r3, [fp, #-16]
   44e08:	str	r2, [r3, #68]	; 0x44
   44e0c:	ldr	r3, [fp, #12]
   44e10:	ldrb	r3, [r3, #88]	; 0x58
   44e14:	ubfx	r3, r3, #4, #1
   44e18:	uxtb	r3, r3
   44e1c:	mov	r2, r3
   44e20:	ldr	r3, [fp, #-16]
   44e24:	strb	r2, [r3, #78]	; 0x4e
   44e28:	ldr	r3, [fp, #-16]
   44e2c:	ldrb	r3, [r3, #75]	; 0x4b
   44e30:	cmp	r3, #0
   44e34:	beq	44e44 <__assert_fail@plt+0x32758>
   44e38:	ldr	r3, [fp, #-16]
   44e3c:	ldr	r3, [r3, #4]
   44e40:	b	44e48 <__assert_fail@plt+0x3275c>
   44e44:	ldr	r3, [fp, #-20]	; 0xffffffec
   44e48:	ldr	r2, [fp, #-16]
   44e4c:	str	r3, [r2, #4]
   44e50:	ldr	r3, [fp, #-16]
   44e54:	ldrb	r3, [r3, #75]	; 0x4b
   44e58:	cmp	r3, #0
   44e5c:	bne	44e78 <__assert_fail@plt+0x3278c>
   44e60:	ldr	r3, [fp, #12]
   44e64:	ldr	r3, [r3, #92]	; 0x5c
   44e68:	cmp	r3, #1
   44e6c:	bgt	44e78 <__assert_fail@plt+0x3278c>
   44e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44e74:	b	44e7c <__assert_fail@plt+0x32790>
   44e78:	mov	r3, #0
   44e7c:	ldr	r2, [fp, #-16]
   44e80:	str	r3, [r2, #28]
   44e84:	ldr	r3, [fp, #-16]
   44e88:	ldr	r2, [r3, #28]
   44e8c:	ldr	r3, [fp, #-16]
   44e90:	str	r2, [r3, #32]
   44e94:	mov	r3, #0
   44e98:	mov	r0, r3
   44e9c:	sub	sp, fp, #4
   44ea0:	ldr	fp, [sp]
   44ea4:	add	sp, sp, #4
   44ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   44eac:	str	fp, [sp, #-8]!
   44eb0:	str	lr, [sp, #4]
   44eb4:	add	fp, sp, #4
   44eb8:	sub	sp, sp, #32
   44ebc:	str	r0, [fp, #-16]
   44ec0:	str	r1, [fp, #-20]	; 0xffffffec
   44ec4:	str	r2, [fp, #-24]	; 0xffffffe8
   44ec8:	str	r3, [fp, #-28]	; 0xffffffe4
   44ecc:	mov	r2, #84	; 0x54
   44ed0:	mov	r1, #0
   44ed4:	ldr	r0, [fp, #-16]
   44ed8:	bl	12434 <memset@plt>
   44edc:	ldr	r3, [fp, #8]
   44ee0:	str	r3, [sp, #4]
   44ee4:	ldrb	r3, [fp, #4]
   44ee8:	str	r3, [sp]
   44eec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44ef0:	ldr	r2, [fp, #-16]
   44ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   44ef8:	ldr	r0, [fp, #-20]	; 0xffffffec
   44efc:	bl	45268 <__assert_fail@plt+0x32b7c>
   44f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44f04:	cmp	r3, #0
   44f08:	ble	44f48 <__assert_fail@plt+0x3285c>
   44f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44f10:	add	r3, r3, #1
   44f14:	mov	r1, r3
   44f18:	ldr	r0, [fp, #-16]
   44f1c:	bl	450bc <__assert_fail@plt+0x329d0>
   44f20:	str	r0, [fp, #-8]
   44f24:	ldr	r3, [fp, #-8]
   44f28:	cmp	r3, #0
   44f2c:	movne	r3, #1
   44f30:	moveq	r3, #0
   44f34:	uxtb	r3, r3
   44f38:	cmp	r3, #0
   44f3c:	beq	44f48 <__assert_fail@plt+0x3285c>
   44f40:	ldr	r3, [fp, #-8]
   44f44:	b	450a8 <__assert_fail@plt+0x329bc>
   44f48:	ldr	r3, [fp, #-16]
   44f4c:	ldrb	r3, [r3, #75]	; 0x4b
   44f50:	cmp	r3, #0
   44f54:	beq	44f64 <__assert_fail@plt+0x32878>
   44f58:	ldr	r3, [fp, #-16]
   44f5c:	ldr	r3, [r3, #4]
   44f60:	b	44f68 <__assert_fail@plt+0x3287c>
   44f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   44f68:	ldr	r2, [fp, #-16]
   44f6c:	str	r3, [r2, #4]
   44f70:	ldrb	r3, [fp, #4]
   44f74:	cmp	r3, #0
   44f78:	beq	45040 <__assert_fail@plt+0x32954>
   44f7c:	ldr	r3, [fp, #8]
   44f80:	ldr	r3, [r3, #92]	; 0x5c
   44f84:	cmp	r3, #1
   44f88:	ble	45034 <__assert_fail@plt+0x32948>
   44f8c:	ldr	r0, [fp, #-16]
   44f90:	bl	456ec <__assert_fail@plt+0x33000>
   44f94:	str	r0, [fp, #-8]
   44f98:	ldr	r3, [fp, #-8]
   44f9c:	cmp	r3, #0
   44fa0:	movne	r3, #1
   44fa4:	moveq	r3, #0
   44fa8:	uxtb	r3, r3
   44fac:	cmp	r3, #0
   44fb0:	beq	44fbc <__assert_fail@plt+0x328d0>
   44fb4:	ldr	r3, [fp, #-8]
   44fb8:	b	450a8 <__assert_fail@plt+0x329bc>
   44fbc:	ldr	r3, [fp, #-16]
   44fc0:	ldr	r3, [r3, #32]
   44fc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44fc8:	cmp	r2, r3
   44fcc:	ble	45098 <__assert_fail@plt+0x329ac>
   44fd0:	ldr	r3, [fp, #-16]
   44fd4:	ldr	r2, [r3, #36]	; 0x24
   44fd8:	ldr	r3, [fp, #-16]
   44fdc:	ldr	r1, [r3, #28]
   44fe0:	ldr	r3, [fp, #8]
   44fe4:	ldr	r3, [r3, #92]	; 0x5c
   44fe8:	add	r3, r1, r3
   44fec:	cmp	r2, r3
   44ff0:	bgt	450a0 <__assert_fail@plt+0x329b4>
   44ff4:	ldr	r3, [fp, #-16]
   44ff8:	ldr	r3, [r3, #36]	; 0x24
   44ffc:	lsl	r3, r3, #1
   45000:	mov	r1, r3
   45004:	ldr	r0, [fp, #-16]
   45008:	bl	450bc <__assert_fail@plt+0x329d0>
   4500c:	str	r0, [fp, #-8]
   45010:	ldr	r3, [fp, #-8]
   45014:	cmp	r3, #0
   45018:	movne	r3, #1
   4501c:	moveq	r3, #0
   45020:	uxtb	r3, r3
   45024:	cmp	r3, #0
   45028:	beq	44f8c <__assert_fail@plt+0x328a0>
   4502c:	ldr	r3, [fp, #-8]
   45030:	b	450a8 <__assert_fail@plt+0x329bc>
   45034:	ldr	r0, [fp, #-16]
   45038:	bl	463d8 <__assert_fail@plt+0x33cec>
   4503c:	b	450a4 <__assert_fail@plt+0x329b8>
   45040:	ldr	r3, [fp, #8]
   45044:	ldr	r3, [r3, #92]	; 0x5c
   45048:	cmp	r3, #1
   4504c:	ble	4505c <__assert_fail@plt+0x32970>
   45050:	ldr	r0, [fp, #-16]
   45054:	bl	45368 <__assert_fail@plt+0x32c7c>
   45058:	b	450a4 <__assert_fail@plt+0x329b8>
   4505c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45060:	cmp	r3, #0
   45064:	beq	45074 <__assert_fail@plt+0x32988>
   45068:	ldr	r0, [fp, #-16]
   4506c:	bl	464e4 <__assert_fail@plt+0x33df8>
   45070:	b	450a4 <__assert_fail@plt+0x329b8>
   45074:	ldr	r3, [fp, #-16]
   45078:	ldr	r2, [r3, #36]	; 0x24
   4507c:	ldr	r3, [fp, #-16]
   45080:	str	r2, [r3, #28]
   45084:	ldr	r3, [fp, #-16]
   45088:	ldr	r2, [r3, #36]	; 0x24
   4508c:	ldr	r3, [fp, #-16]
   45090:	str	r2, [r3, #32]
   45094:	b	450a4 <__assert_fail@plt+0x329b8>
   45098:	nop	{0}
   4509c:	b	450a4 <__assert_fail@plt+0x329b8>
   450a0:	nop	{0}
   450a4:	mov	r3, #0
   450a8:	mov	r0, r3
   450ac:	sub	sp, fp, #4
   450b0:	ldr	fp, [sp]
   450b4:	add	sp, sp, #4
   450b8:	pop	{pc}		; (ldr pc, [sp], #4)
   450bc:	str	fp, [sp, #-8]!
   450c0:	str	lr, [sp, #4]
   450c4:	add	fp, sp, #4
   450c8:	sub	sp, sp, #24
   450cc:	str	r0, [fp, #-24]	; 0xffffffe8
   450d0:	str	r1, [fp, #-28]	; 0xffffffe4
   450d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   450d8:	ldr	r3, [r3, #80]	; 0x50
   450dc:	cmp	r3, #1
   450e0:	ble	451e8 <__assert_fail@plt+0x32afc>
   450e4:	mov	r3, #4
   450e8:	str	r3, [fp, #-8]
   450ec:	mvn	r2, #0
   450f0:	ldr	r3, [fp, #-8]
   450f4:	udiv	r3, r2, r3
   450f8:	cmp	r3, #0
   450fc:	blt	45110 <__assert_fail@plt+0x32a24>
   45100:	mvn	r2, #0
   45104:	ldr	r3, [fp, #-8]
   45108:	udiv	r3, r2, r3
   4510c:	b	45114 <__assert_fail@plt+0x32a28>
   45110:	mvn	r3, #-2147483648	; 0x80000000
   45114:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45118:	cmp	r3, r2
   4511c:	movcc	r3, #1
   45120:	movcs	r3, #0
   45124:	uxtb	r3, r3
   45128:	cmp	r3, #0
   4512c:	beq	45138 <__assert_fail@plt+0x32a4c>
   45130:	mov	r3, #12
   45134:	b	45254 <__assert_fail@plt+0x32b68>
   45138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4513c:	ldr	r2, [r3, #8]
   45140:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45144:	lsl	r3, r3, #2
   45148:	mov	r1, r3
   4514c:	mov	r0, r2
   45150:	bl	446e8 <__assert_fail@plt+0x31ffc>
   45154:	str	r0, [fp, #-12]
   45158:	ldr	r3, [fp, #-12]
   4515c:	cmp	r3, #0
   45160:	moveq	r3, #1
   45164:	movne	r3, #0
   45168:	uxtb	r3, r3
   4516c:	cmp	r3, #0
   45170:	beq	4517c <__assert_fail@plt+0x32a90>
   45174:	mov	r3, #12
   45178:	b	45254 <__assert_fail@plt+0x32b68>
   4517c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45180:	ldr	r2, [fp, #-12]
   45184:	str	r2, [r3, #8]
   45188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4518c:	ldr	r3, [r3, #12]
   45190:	cmp	r3, #0
   45194:	beq	451e8 <__assert_fail@plt+0x32afc>
   45198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4519c:	ldr	r2, [r3, #12]
   451a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   451a4:	lsl	r3, r3, #2
   451a8:	mov	r1, r3
   451ac:	mov	r0, r2
   451b0:	bl	446e8 <__assert_fail@plt+0x31ffc>
   451b4:	str	r0, [fp, #-16]
   451b8:	ldr	r3, [fp, #-16]
   451bc:	cmp	r3, #0
   451c0:	moveq	r3, #1
   451c4:	movne	r3, #0
   451c8:	uxtb	r3, r3
   451cc:	cmp	r3, #0
   451d0:	beq	451dc <__assert_fail@plt+0x32af0>
   451d4:	mov	r3, #12
   451d8:	b	45254 <__assert_fail@plt+0x32b68>
   451dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   451e0:	ldr	r2, [fp, #-16]
   451e4:	str	r2, [r3, #12]
   451e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   451ec:	ldrb	r3, [r3, #75]	; 0x4b
   451f0:	cmp	r3, #0
   451f4:	beq	45244 <__assert_fail@plt+0x32b58>
   451f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   451fc:	ldr	r3, [r3, #4]
   45200:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45204:	mov	r1, r2
   45208:	mov	r0, r3
   4520c:	bl	446e8 <__assert_fail@plt+0x31ffc>
   45210:	str	r0, [fp, #-20]	; 0xffffffec
   45214:	ldr	r3, [fp, #-20]	; 0xffffffec
   45218:	cmp	r3, #0
   4521c:	moveq	r3, #1
   45220:	movne	r3, #0
   45224:	uxtb	r3, r3
   45228:	cmp	r3, #0
   4522c:	beq	45238 <__assert_fail@plt+0x32b4c>
   45230:	mov	r3, #12
   45234:	b	45254 <__assert_fail@plt+0x32b68>
   45238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4523c:	ldr	r2, [fp, #-20]	; 0xffffffec
   45240:	str	r2, [r3, #4]
   45244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45248:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4524c:	str	r2, [r3, #36]	; 0x24
   45250:	mov	r3, #0
   45254:	mov	r0, r3
   45258:	sub	sp, fp, #4
   4525c:	ldr	fp, [sp]
   45260:	add	sp, sp, #4
   45264:	pop	{pc}		; (ldr pc, [sp], #4)
   45268:	push	{fp}		; (str fp, [sp, #-4]!)
   4526c:	add	fp, sp, #0
   45270:	sub	sp, sp, #20
   45274:	str	r0, [fp, #-8]
   45278:	str	r1, [fp, #-12]
   4527c:	str	r2, [fp, #-16]
   45280:	str	r3, [fp, #-20]	; 0xffffffec
   45284:	ldr	r3, [fp, #-16]
   45288:	ldr	r2, [fp, #-8]
   4528c:	str	r2, [r3]
   45290:	ldr	r3, [fp, #-16]
   45294:	ldr	r2, [fp, #-12]
   45298:	str	r2, [r3, #48]	; 0x30
   4529c:	ldr	r3, [fp, #-16]
   452a0:	ldr	r2, [fp, #-12]
   452a4:	str	r2, [r3, #44]	; 0x2c
   452a8:	ldr	r3, [fp, #-16]
   452ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   452b0:	str	r2, [r3, #64]	; 0x40
   452b4:	ldrb	r2, [fp, #4]
   452b8:	ldr	r3, [fp, #-16]
   452bc:	strb	r2, [r3, #72]	; 0x48
   452c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   452c4:	cmp	r3, #0
   452c8:	bne	452d8 <__assert_fail@plt+0x32bec>
   452cc:	ldrb	r3, [fp, #4]
   452d0:	cmp	r3, #0
   452d4:	beq	452e0 <__assert_fail@plt+0x32bf4>
   452d8:	mov	r3, #1
   452dc:	b	452e4 <__assert_fail@plt+0x32bf8>
   452e0:	mov	r3, #0
   452e4:	uxtb	r2, r3
   452e8:	ldr	r3, [fp, #-16]
   452ec:	strb	r2, [r3, #75]	; 0x4b
   452f0:	ldr	r3, [fp, #8]
   452f4:	ldr	r2, [r3, #92]	; 0x5c
   452f8:	ldr	r3, [fp, #-16]
   452fc:	str	r2, [r3, #80]	; 0x50
   45300:	ldr	r3, [fp, #8]
   45304:	ldrb	r3, [r3, #88]	; 0x58
   45308:	ubfx	r3, r3, #2, #1
   4530c:	uxtb	r3, r3
   45310:	mov	r2, r3
   45314:	ldr	r3, [fp, #-16]
   45318:	strb	r2, [r3, #73]	; 0x49
   4531c:	ldr	r3, [fp, #8]
   45320:	ldrb	r3, [r3, #88]	; 0x58
   45324:	ubfx	r3, r3, #3, #1
   45328:	uxtb	r3, r3
   4532c:	mov	r2, r3
   45330:	ldr	r3, [fp, #-16]
   45334:	strb	r2, [r3, #74]	; 0x4a
   45338:	ldr	r3, [fp, #-16]
   4533c:	ldr	r2, [r3, #48]	; 0x30
   45340:	ldr	r3, [fp, #-16]
   45344:	str	r2, [r3, #56]	; 0x38
   45348:	ldr	r3, [fp, #-16]
   4534c:	ldr	r2, [r3, #56]	; 0x38
   45350:	ldr	r3, [fp, #-16]
   45354:	str	r2, [r3, #52]	; 0x34
   45358:	nop	{0}
   4535c:	add	sp, fp, #0
   45360:	pop	{fp}		; (ldr fp, [sp], #4)
   45364:	bx	lr
   45368:	str	fp, [sp, #-8]!
   4536c:	str	lr, [sp, #4]
   45370:	add	fp, sp, #4
   45374:	sub	sp, sp, #112	; 0x70
   45378:	str	r0, [fp, #-112]	; 0xffffff90
   4537c:	ldr	r3, [fp, #-112]	; 0xffffff90
   45380:	ldr	r2, [r3, #36]	; 0x24
   45384:	ldr	r3, [fp, #-112]	; 0xffffff90
   45388:	ldr	r3, [r3, #48]	; 0x30
   4538c:	cmp	r2, r3
   45390:	movlt	r3, r2
   45394:	movge	r3, r3
   45398:	str	r3, [fp, #-24]	; 0xffffffe8
   4539c:	ldr	r3, [fp, #-112]	; 0xffffff90
   453a0:	ldr	r3, [r3, #28]
   453a4:	str	r3, [fp, #-8]
   453a8:	b	456b0 <__assert_fail@plt+0x32fc4>
   453ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   453b0:	ldr	r3, [fp, #-8]
   453b4:	sub	r3, r2, r3
   453b8:	str	r3, [fp, #-28]	; 0xffffffe4
   453bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   453c0:	sub	r1, fp, #104	; 0x68
   453c4:	add	r3, r3, #16
   453c8:	ldrd	r2, [r3]
   453cc:	strd	r2, [r1]
   453d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   453d4:	ldr	r3, [r3, #64]	; 0x40
   453d8:	cmp	r3, #0
   453dc:	movne	r3, #1
   453e0:	moveq	r3, #0
   453e4:	uxtb	r3, r3
   453e8:	cmp	r3, #0
   453ec:	beq	454ac <__assert_fail@plt+0x32dc0>
   453f0:	mov	r3, #0
   453f4:	str	r3, [fp, #-20]	; 0xffffffec
   453f8:	b	4547c <__assert_fail@plt+0x32d90>
   453fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   45400:	ldr	r3, [r3]
   45404:	ldr	r2, [fp, #-112]	; 0xffffff90
   45408:	ldr	r1, [r2, #24]
   4540c:	ldr	r2, [fp, #-8]
   45410:	add	r1, r1, r2
   45414:	ldr	r2, [fp, #-20]	; 0xffffffec
   45418:	add	r2, r1, r2
   4541c:	add	r3, r3, r2
   45420:	ldrb	r3, [r3]
   45424:	str	r3, [fp, #-32]	; 0xffffffe0
   45428:	ldr	r3, [fp, #-112]	; 0xffffff90
   4542c:	ldr	r2, [r3, #64]	; 0x40
   45430:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45434:	add	r2, r2, r3
   45438:	ldr	r3, [fp, #-112]	; 0xffffff90
   4543c:	ldr	r3, [r3, #4]
   45440:	ldr	r0, [fp, #-8]
   45444:	ldr	r1, [fp, #-20]	; 0xffffffec
   45448:	add	r1, r0, r1
   4544c:	add	r3, r3, r1
   45450:	ldrb	r2, [r2]
   45454:	strb	r2, [r3]
   45458:	ldrb	r1, [r3]
   4545c:	sub	r2, fp, #96	; 0x60
   45460:	ldr	r3, [fp, #-20]	; 0xffffffec
   45464:	add	r3, r2, r3
   45468:	mov	r2, r1
   4546c:	strb	r2, [r3]
   45470:	ldr	r3, [fp, #-20]	; 0xffffffec
   45474:	add	r3, r3, #1
   45478:	str	r3, [fp, #-20]	; 0xffffffec
   4547c:	ldr	r3, [fp, #-112]	; 0xffffff90
   45480:	ldr	r3, [r3, #80]	; 0x50
   45484:	ldr	r2, [fp, #-20]	; 0xffffffec
   45488:	cmp	r2, r3
   4548c:	bge	454a0 <__assert_fail@plt+0x32db4>
   45490:	ldr	r2, [fp, #-20]	; 0xffffffec
   45494:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45498:	cmp	r2, r3
   4549c:	blt	453fc <__assert_fail@plt+0x32d10>
   454a0:	sub	r3, fp, #96	; 0x60
   454a4:	str	r3, [fp, #-16]
   454a8:	b	454d0 <__assert_fail@plt+0x32de4>
   454ac:	ldr	r3, [fp, #-112]	; 0xffffff90
   454b0:	ldr	r2, [r3]
   454b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   454b8:	ldr	r3, [r3, #24]
   454bc:	mov	r1, r3
   454c0:	ldr	r3, [fp, #-8]
   454c4:	add	r3, r1, r3
   454c8:	add	r3, r2, r3
   454cc:	str	r3, [fp, #-16]
   454d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   454d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   454d8:	add	r3, r3, #16
   454dc:	sub	r0, fp, #108	; 0x6c
   454e0:	ldr	r1, [fp, #-16]
   454e4:	bl	435a0 <__assert_fail@plt+0x30eb4>
   454e8:	str	r0, [fp, #-12]
   454ec:	ldr	r3, [fp, #-12]
   454f0:	cmn	r3, #1
   454f4:	moveq	r3, #1
   454f8:	movne	r3, #0
   454fc:	uxtb	r3, r3
   45500:	cmp	r3, #0
   45504:	bne	45524 <__assert_fail@plt+0x32e38>
   45508:	ldr	r3, [fp, #-12]
   4550c:	cmp	r3, #0
   45510:	moveq	r3, #1
   45514:	movne	r3, #0
   45518:	uxtb	r3, r3
   4551c:	cmp	r3, #0
   45520:	beq	4552c <__assert_fail@plt+0x32e40>
   45524:	mov	r3, #1
   45528:	b	45530 <__assert_fail@plt+0x32e44>
   4552c:	mov	r3, #0
   45530:	cmp	r3, #0
   45534:	bne	45590 <__assert_fail@plt+0x32ea4>
   45538:	ldr	r3, [fp, #-12]
   4553c:	cmn	r3, #2
   45540:	moveq	r3, #1
   45544:	movne	r3, #0
   45548:	uxtb	r3, r3
   4554c:	cmp	r3, #0
   45550:	beq	45584 <__assert_fail@plt+0x32e98>
   45554:	ldr	r3, [fp, #-112]	; 0xffffff90
   45558:	ldr	r2, [r3, #36]	; 0x24
   4555c:	ldr	r3, [fp, #-112]	; 0xffffff90
   45560:	ldr	r3, [r3, #48]	; 0x30
   45564:	cmp	r2, r3
   45568:	movge	r3, #1
   4556c:	movlt	r3, #0
   45570:	uxtb	r3, r3
   45574:	cmp	r3, #0
   45578:	beq	45584 <__assert_fail@plt+0x32e98>
   4557c:	mov	r3, #1
   45580:	b	45588 <__assert_fail@plt+0x32e9c>
   45584:	mov	r3, #0
   45588:	cmp	r3, #0
   4558c:	beq	4560c <__assert_fail@plt+0x32f20>
   45590:	mov	r3, #1
   45594:	str	r3, [fp, #-12]
   45598:	ldr	r3, [fp, #-112]	; 0xffffff90
   4559c:	ldr	r3, [r3]
   455a0:	ldr	r2, [fp, #-112]	; 0xffffff90
   455a4:	ldr	r1, [r2, #24]
   455a8:	ldr	r2, [fp, #-8]
   455ac:	add	r2, r1, r2
   455b0:	add	r3, r3, r2
   455b4:	ldrb	r3, [r3]
   455b8:	str	r3, [fp, #-108]	; 0xffffff94
   455bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   455c0:	ldr	r3, [r3, #64]	; 0x40
   455c4:	cmp	r3, #0
   455c8:	movne	r3, #1
   455cc:	moveq	r3, #0
   455d0:	uxtb	r3, r3
   455d4:	cmp	r3, #0
   455d8:	beq	455f4 <__assert_fail@plt+0x32f08>
   455dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   455e0:	ldr	r2, [r3, #64]	; 0x40
   455e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   455e8:	add	r3, r2, r3
   455ec:	ldrb	r3, [r3]
   455f0:	str	r3, [fp, #-108]	; 0xffffff94
   455f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   455f8:	add	r1, r3, #16
   455fc:	sub	r3, fp, #104	; 0x68
   45600:	ldrd	r2, [r3]
   45604:	strd	r2, [r1]
   45608:	b	45640 <__assert_fail@plt+0x32f54>
   4560c:	ldr	r3, [fp, #-12]
   45610:	cmn	r3, #2
   45614:	moveq	r3, #1
   45618:	movne	r3, #0
   4561c:	uxtb	r3, r3
   45620:	cmp	r3, #0
   45624:	beq	45640 <__assert_fail@plt+0x32f54>
   45628:	ldr	r3, [fp, #-112]	; 0xffffff90
   4562c:	add	r1, r3, #16
   45630:	sub	r3, fp, #104	; 0x68
   45634:	ldrd	r2, [r3]
   45638:	strd	r2, [r1]
   4563c:	b	456c0 <__assert_fail@plt+0x32fd4>
   45640:	ldr	r3, [fp, #-112]	; 0xffffff90
   45644:	ldr	r2, [r3, #8]
   45648:	ldr	r3, [fp, #-8]
   4564c:	add	r1, r3, #1
   45650:	str	r1, [fp, #-8]
   45654:	lsl	r3, r3, #2
   45658:	add	r3, r2, r3
   4565c:	ldr	r2, [fp, #-108]	; 0xffffff94
   45660:	str	r2, [r3]
   45664:	ldr	r2, [fp, #-8]
   45668:	ldr	r3, [fp, #-12]
   4566c:	add	r3, r2, r3
   45670:	sub	r3, r3, #1
   45674:	str	r3, [fp, #-28]	; 0xffffffe4
   45678:	b	456a0 <__assert_fail@plt+0x32fb4>
   4567c:	ldr	r3, [fp, #-112]	; 0xffffff90
   45680:	ldr	r2, [r3, #8]
   45684:	ldr	r3, [fp, #-8]
   45688:	add	r1, r3, #1
   4568c:	str	r1, [fp, #-8]
   45690:	lsl	r3, r3, #2
   45694:	add	r3, r2, r3
   45698:	mvn	r2, #0
   4569c:	str	r2, [r3]
   456a0:	ldr	r2, [fp, #-8]
   456a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   456a8:	cmp	r2, r3
   456ac:	blt	4567c <__assert_fail@plt+0x32f90>
   456b0:	ldr	r2, [fp, #-8]
   456b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   456b8:	cmp	r2, r3
   456bc:	blt	453ac <__assert_fail@plt+0x32cc0>
   456c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   456c4:	ldr	r2, [fp, #-8]
   456c8:	str	r2, [r3, #28]
   456cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   456d0:	ldr	r2, [fp, #-8]
   456d4:	str	r2, [r3, #32]
   456d8:	nop	{0}
   456dc:	sub	sp, fp, #4
   456e0:	ldr	fp, [sp]
   456e4:	add	sp, sp, #4
   456e8:	pop	{pc}		; (ldr pc, [sp], #4)
   456ec:	str	fp, [sp, #-8]!
   456f0:	str	lr, [sp, #4]
   456f4:	add	fp, sp, #4
   456f8:	sub	sp, sp, #160	; 0xa0
   456fc:	str	r0, [fp, #-160]	; 0xffffff60
   45700:	ldr	r3, [fp, #-160]	; 0xffffff60
   45704:	ldr	r3, [r3, #28]
   45708:	str	r3, [fp, #-12]
   4570c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45710:	ldr	r2, [r3, #36]	; 0x24
   45714:	ldr	r3, [fp, #-160]	; 0xffffff60
   45718:	ldr	r3, [r3, #48]	; 0x30
   4571c:	cmp	r2, r3
   45720:	movlt	r3, r2
   45724:	movge	r3, r3
   45728:	str	r3, [fp, #-16]
   4572c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45730:	ldrb	r3, [r3, #74]	; 0x4a
   45734:	cmp	r3, #0
   45738:	bne	45ad8 <__assert_fail@plt+0x333ec>
   4573c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45740:	ldr	r3, [r3, #64]	; 0x40
   45744:	cmp	r3, #0
   45748:	bne	45ad8 <__assert_fail@plt+0x333ec>
   4574c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45750:	ldrb	r3, [r3, #76]	; 0x4c
   45754:	cmp	r3, #0
   45758:	bne	45ad8 <__assert_fail@plt+0x333ec>
   4575c:	b	45aa8 <__assert_fail@plt+0x333bc>
   45760:	ldr	r3, [fp, #-160]	; 0xffffff60
   45764:	ldr	r3, [r3]
   45768:	ldr	r2, [fp, #-160]	; 0xffffff60
   4576c:	ldr	r1, [r2, #24]
   45770:	ldr	r2, [fp, #-12]
   45774:	add	r2, r1, r2
   45778:	add	r3, r3, r2
   4577c:	ldrb	r3, [r3]
   45780:	strb	r3, [fp, #-37]	; 0xffffffdb
   45784:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   45788:	bic	r3, r3, #127	; 0x7f
   4578c:	cmp	r3, #0
   45790:	bne	45818 <__assert_fail@plt+0x3312c>
   45794:	ldr	r3, [fp, #-160]	; 0xffffff60
   45798:	add	r3, r3, #16
   4579c:	mov	r0, r3
   457a0:	bl	12134 <mbsinit@plt>
   457a4:	mov	r3, r0
   457a8:	cmp	r3, #0
   457ac:	beq	45818 <__assert_fail@plt+0x3312c>
   457b0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   457b4:	mov	r0, r3
   457b8:	bl	12674 <towupper@plt>
   457bc:	str	r0, [fp, #-44]	; 0xffffffd4
   457c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   457c4:	bic	r3, r3, #127	; 0x7f
   457c8:	cmp	r3, #0
   457cc:	bne	45818 <__assert_fail@plt+0x3312c>
   457d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   457d4:	ldr	r2, [r3, #4]
   457d8:	ldr	r3, [fp, #-12]
   457dc:	add	r3, r2, r3
   457e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   457e4:	uxtb	r2, r2
   457e8:	strb	r2, [r3]
   457ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   457f0:	ldr	r2, [r3, #8]
   457f4:	ldr	r3, [fp, #-12]
   457f8:	lsl	r3, r3, #2
   457fc:	add	r3, r2, r3
   45800:	ldr	r2, [fp, #-44]	; 0xffffffd4
   45804:	str	r2, [r3]
   45808:	ldr	r3, [fp, #-12]
   4580c:	add	r3, r3, #1
   45810:	str	r3, [fp, #-12]
   45814:	b	45aa8 <__assert_fail@plt+0x333bc>
   45818:	ldr	r2, [fp, #-16]
   4581c:	ldr	r3, [fp, #-12]
   45820:	sub	r3, r2, r3
   45824:	str	r3, [fp, #-48]	; 0xffffffd0
   45828:	ldr	r3, [fp, #-160]	; 0xffffff60
   4582c:	sub	r1, fp, #80	; 0x50
   45830:	add	r3, r3, #16
   45834:	ldrd	r2, [r3]
   45838:	strd	r2, [r1]
   4583c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45840:	ldr	r2, [r3]
   45844:	ldr	r3, [fp, #-160]	; 0xffffff60
   45848:	ldr	r3, [r3, #24]
   4584c:	mov	r1, r3
   45850:	ldr	r3, [fp, #-12]
   45854:	add	r3, r1, r3
   45858:	add	r1, r2, r3
   4585c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   45860:	ldr	r3, [fp, #-160]	; 0xffffff60
   45864:	add	r3, r3, #16
   45868:	sub	r0, fp, #148	; 0x94
   4586c:	bl	435a0 <__assert_fail@plt+0x30eb4>
   45870:	str	r0, [fp, #-52]	; 0xffffffcc
   45874:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45878:	cmp	r3, #0
   4587c:	movne	r3, #1
   45880:	moveq	r3, #0
   45884:	uxtb	r3, r3
   45888:	cmp	r3, #0
   4588c:	beq	459e4 <__assert_fail@plt+0x332f8>
   45890:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45894:	cmn	r3, #3
   45898:	movls	r3, #1
   4589c:	movhi	r3, #0
   458a0:	uxtb	r3, r3
   458a4:	cmp	r3, #0
   458a8:	beq	459e4 <__assert_fail@plt+0x332f8>
   458ac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   458b0:	mov	r0, r3
   458b4:	bl	12674 <towupper@plt>
   458b8:	str	r0, [fp, #-56]	; 0xffffffc8
   458bc:	ldr	r3, [fp, #-148]	; 0xffffff6c
   458c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   458c4:	cmp	r2, r3
   458c8:	beq	45934 <__assert_fail@plt+0x33248>
   458cc:	sub	r2, fp, #80	; 0x50
   458d0:	sub	r3, fp, #144	; 0x90
   458d4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   458d8:	mov	r0, r3
   458dc:	bl	11fc0 <wcrtomb@plt>
   458e0:	str	r0, [fp, #-60]	; 0xffffffc4
   458e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   458e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   458ec:	cmp	r2, r3
   458f0:	moveq	r3, #1
   458f4:	movne	r3, #0
   458f8:	uxtb	r3, r3
   458fc:	cmp	r3, #0
   45900:	beq	45928 <__assert_fail@plt+0x3323c>
   45904:	ldr	r3, [fp, #-160]	; 0xffffff60
   45908:	ldr	r2, [r3, #4]
   4590c:	ldr	r3, [fp, #-12]
   45910:	add	r3, r2, r3
   45914:	sub	r1, fp, #144	; 0x90
   45918:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4591c:	mov	r0, r3
   45920:	bl	120f8 <memcpy@plt>
   45924:	b	45970 <__assert_fail@plt+0x33284>
   45928:	ldr	r3, [fp, #-12]
   4592c:	str	r3, [fp, #-8]
   45930:	b	45aec <__assert_fail@plt+0x33400>
   45934:	ldr	r3, [fp, #-160]	; 0xffffff60
   45938:	ldr	r2, [r3, #4]
   4593c:	ldr	r3, [fp, #-12]
   45940:	add	r0, r2, r3
   45944:	ldr	r3, [fp, #-160]	; 0xffffff60
   45948:	ldr	r2, [r3]
   4594c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45950:	ldr	r3, [r3, #24]
   45954:	mov	r1, r3
   45958:	ldr	r3, [fp, #-12]
   4595c:	add	r3, r1, r3
   45960:	add	r3, r2, r3
   45964:	ldr	r2, [fp, #-52]	; 0xffffffcc
   45968:	mov	r1, r3
   4596c:	bl	120f8 <memcpy@plt>
   45970:	ldr	r3, [fp, #-160]	; 0xffffff60
   45974:	ldr	r2, [r3, #8]
   45978:	ldr	r3, [fp, #-12]
   4597c:	add	r1, r3, #1
   45980:	str	r1, [fp, #-12]
   45984:	lsl	r3, r3, #2
   45988:	add	r3, r2, r3
   4598c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   45990:	str	r2, [r3]
   45994:	ldr	r2, [fp, #-12]
   45998:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4599c:	add	r3, r2, r3
   459a0:	sub	r3, r3, #1
   459a4:	str	r3, [fp, #-48]	; 0xffffffd0
   459a8:	b	459d0 <__assert_fail@plt+0x332e4>
   459ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   459b0:	ldr	r2, [r3, #8]
   459b4:	ldr	r3, [fp, #-12]
   459b8:	add	r1, r3, #1
   459bc:	str	r1, [fp, #-12]
   459c0:	lsl	r3, r3, #2
   459c4:	add	r3, r2, r3
   459c8:	mvn	r2, #0
   459cc:	str	r2, [r3]
   459d0:	ldr	r2, [fp, #-12]
   459d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   459d8:	cmp	r2, r3
   459dc:	blt	459ac <__assert_fail@plt+0x332c0>
   459e0:	b	45aa8 <__assert_fail@plt+0x333bc>
   459e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   459e8:	cmn	r3, #1
   459ec:	beq	45a20 <__assert_fail@plt+0x33334>
   459f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   459f4:	cmp	r3, #0
   459f8:	beq	45a20 <__assert_fail@plt+0x33334>
   459fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45a00:	cmn	r3, #2
   45a04:	bne	45a90 <__assert_fail@plt+0x333a4>
   45a08:	ldr	r3, [fp, #-160]	; 0xffffff60
   45a0c:	ldr	r2, [r3, #36]	; 0x24
   45a10:	ldr	r3, [fp, #-160]	; 0xffffff60
   45a14:	ldr	r3, [r3, #48]	; 0x30
   45a18:	cmp	r2, r3
   45a1c:	blt	45a90 <__assert_fail@plt+0x333a4>
   45a20:	ldr	r3, [fp, #-160]	; 0xffffff60
   45a24:	ldr	r2, [r3, #4]
   45a28:	ldr	r3, [fp, #-12]
   45a2c:	add	r3, r2, r3
   45a30:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   45a34:	strb	r2, [r3]
   45a38:	ldr	r3, [fp, #-160]	; 0xffffff60
   45a3c:	ldr	r2, [r3, #8]
   45a40:	ldr	r3, [fp, #-12]
   45a44:	add	r1, r3, #1
   45a48:	str	r1, [fp, #-12]
   45a4c:	lsl	r3, r3, #2
   45a50:	add	r3, r2, r3
   45a54:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   45a58:	str	r2, [r3]
   45a5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45a60:	cmn	r3, #1
   45a64:	moveq	r3, #1
   45a68:	movne	r3, #0
   45a6c:	uxtb	r3, r3
   45a70:	cmp	r3, #0
   45a74:	beq	45aa8 <__assert_fail@plt+0x333bc>
   45a78:	ldr	r3, [fp, #-160]	; 0xffffff60
   45a7c:	add	r1, r3, #16
   45a80:	sub	r3, fp, #80	; 0x50
   45a84:	ldrd	r2, [r3]
   45a88:	strd	r2, [r1]
   45a8c:	b	45aa8 <__assert_fail@plt+0x333bc>
   45a90:	ldr	r3, [fp, #-160]	; 0xffffff60
   45a94:	add	r1, r3, #16
   45a98:	sub	r3, fp, #80	; 0x50
   45a9c:	ldrd	r2, [r3]
   45aa0:	strd	r2, [r1]
   45aa4:	b	45ab8 <__assert_fail@plt+0x333cc>
   45aa8:	ldr	r2, [fp, #-12]
   45aac:	ldr	r3, [fp, #-16]
   45ab0:	cmp	r2, r3
   45ab4:	blt	45760 <__assert_fail@plt+0x33074>
   45ab8:	ldr	r3, [fp, #-160]	; 0xffffff60
   45abc:	ldr	r2, [fp, #-12]
   45ac0:	str	r2, [r3, #28]
   45ac4:	ldr	r3, [fp, #-160]	; 0xffffff60
   45ac8:	ldr	r2, [fp, #-12]
   45acc:	str	r2, [r3, #32]
   45ad0:	mov	r3, #0
   45ad4:	b	46224 <__assert_fail@plt+0x33b38>
   45ad8:	ldr	r3, [fp, #-160]	; 0xffffff60
   45adc:	ldr	r3, [r3, #32]
   45ae0:	str	r3, [fp, #-8]
   45ae4:	b	461f8 <__assert_fail@plt+0x33b0c>
   45ae8:	nop	{0}
   45aec:	ldr	r2, [fp, #-16]
   45af0:	ldr	r3, [fp, #-12]
   45af4:	sub	r3, r2, r3
   45af8:	str	r3, [fp, #-48]	; 0xffffffd0
   45afc:	ldr	r3, [fp, #-160]	; 0xffffff60
   45b00:	sub	r1, fp, #80	; 0x50
   45b04:	add	r3, r3, #16
   45b08:	ldrd	r2, [r3]
   45b0c:	strd	r2, [r1]
   45b10:	ldr	r3, [fp, #-160]	; 0xffffff60
   45b14:	ldr	r3, [r3, #64]	; 0x40
   45b18:	cmp	r3, #0
   45b1c:	movne	r3, #1
   45b20:	moveq	r3, #0
   45b24:	uxtb	r3, r3
   45b28:	cmp	r3, #0
   45b2c:	beq	45bcc <__assert_fail@plt+0x334e0>
   45b30:	mov	r3, #0
   45b34:	str	r3, [fp, #-24]	; 0xffffffe8
   45b38:	b	45b9c <__assert_fail@plt+0x334b0>
   45b3c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45b40:	ldr	r3, [r3]
   45b44:	ldr	r2, [fp, #-160]	; 0xffffff60
   45b48:	ldr	r1, [r2, #24]
   45b4c:	ldr	r2, [fp, #-8]
   45b50:	add	r1, r1, r2
   45b54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45b58:	add	r2, r1, r2
   45b5c:	add	r3, r3, r2
   45b60:	ldrb	r3, [r3]
   45b64:	str	r3, [fp, #-64]	; 0xffffffc0
   45b68:	ldr	r3, [fp, #-160]	; 0xffffff60
   45b6c:	ldr	r2, [r3, #64]	; 0x40
   45b70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   45b74:	add	r3, r2, r3
   45b78:	ldrb	r1, [r3]
   45b7c:	sub	r2, fp, #144	; 0x90
   45b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45b84:	add	r3, r2, r3
   45b88:	mov	r2, r1
   45b8c:	strb	r2, [r3]
   45b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   45b94:	add	r3, r3, #1
   45b98:	str	r3, [fp, #-24]	; 0xffffffe8
   45b9c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45ba0:	ldr	r3, [r3, #80]	; 0x50
   45ba4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45ba8:	cmp	r2, r3
   45bac:	bge	45bc0 <__assert_fail@plt+0x334d4>
   45bb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45bb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   45bb8:	cmp	r2, r3
   45bbc:	blt	45b3c <__assert_fail@plt+0x33450>
   45bc0:	sub	r3, fp, #144	; 0x90
   45bc4:	str	r3, [fp, #-20]	; 0xffffffec
   45bc8:	b	45bf0 <__assert_fail@plt+0x33504>
   45bcc:	ldr	r3, [fp, #-160]	; 0xffffff60
   45bd0:	ldr	r2, [r3]
   45bd4:	ldr	r3, [fp, #-160]	; 0xffffff60
   45bd8:	ldr	r3, [r3, #24]
   45bdc:	mov	r1, r3
   45be0:	ldr	r3, [fp, #-8]
   45be4:	add	r3, r1, r3
   45be8:	add	r3, r2, r3
   45bec:	str	r3, [fp, #-20]	; 0xffffffec
   45bf0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   45bf4:	ldr	r3, [fp, #-160]	; 0xffffff60
   45bf8:	add	r3, r3, #16
   45bfc:	sub	r0, fp, #152	; 0x98
   45c00:	ldr	r1, [fp, #-20]	; 0xffffffec
   45c04:	bl	435a0 <__assert_fail@plt+0x30eb4>
   45c08:	str	r0, [fp, #-52]	; 0xffffffcc
   45c0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45c10:	cmp	r3, #0
   45c14:	movne	r3, #1
   45c18:	moveq	r3, #0
   45c1c:	uxtb	r3, r3
   45c20:	cmp	r3, #0
   45c24:	beq	46084 <__assert_fail@plt+0x33998>
   45c28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45c2c:	cmn	r3, #3
   45c30:	movls	r3, #1
   45c34:	movhi	r3, #0
   45c38:	uxtb	r3, r3
   45c3c:	cmp	r3, #0
   45c40:	beq	46084 <__assert_fail@plt+0x33998>
   45c44:	ldr	r3, [fp, #-152]	; 0xffffff68
   45c48:	mov	r0, r3
   45c4c:	bl	12674 <towupper@plt>
   45c50:	str	r0, [fp, #-68]	; 0xffffffbc
   45c54:	ldr	r3, [fp, #-152]	; 0xffffff68
   45c58:	ldr	r2, [fp, #-68]	; 0xffffffbc
   45c5c:	cmp	r2, r3
   45c60:	beq	45f68 <__assert_fail@plt+0x3387c>
   45c64:	sub	r2, fp, #80	; 0x50
   45c68:	sub	r3, fp, #144	; 0x90
   45c6c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   45c70:	mov	r0, r3
   45c74:	bl	11fc0 <wcrtomb@plt>
   45c78:	str	r0, [fp, #-72]	; 0xffffffb8
   45c7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   45c80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45c84:	cmp	r2, r3
   45c88:	moveq	r3, #1
   45c8c:	movne	r3, #0
   45c90:	uxtb	r3, r3
   45c94:	cmp	r3, #0
   45c98:	beq	45cc0 <__assert_fail@plt+0x335d4>
   45c9c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45ca0:	ldr	r2, [r3, #4]
   45ca4:	ldr	r3, [fp, #-12]
   45ca8:	add	r3, r2, r3
   45cac:	sub	r1, fp, #144	; 0x90
   45cb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   45cb4:	mov	r0, r3
   45cb8:	bl	120f8 <memcpy@plt>
   45cbc:	b	45f88 <__assert_fail@plt+0x3389c>
   45cc0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45cc4:	cmn	r3, #1
   45cc8:	beq	45f44 <__assert_fail@plt+0x33858>
   45ccc:	ldr	r2, [fp, #-12]
   45cd0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45cd4:	add	r3, r2, r3
   45cd8:	ldr	r2, [fp, #-160]	; 0xffffff60
   45cdc:	ldr	r2, [r2, #36]	; 0x24
   45ce0:	cmp	r3, r2
   45ce4:	bls	45d00 <__assert_fail@plt+0x33614>
   45ce8:	ldr	r3, [fp, #-160]	; 0xffffff60
   45cec:	add	r1, r3, #16
   45cf0:	sub	r3, fp, #80	; 0x50
   45cf4:	ldrd	r2, [r3]
   45cf8:	strd	r2, [r1]
   45cfc:	b	46208 <__assert_fail@plt+0x33b1c>
   45d00:	ldr	r3, [fp, #-160]	; 0xffffff60
   45d04:	ldr	r3, [r3, #12]
   45d08:	cmp	r3, #0
   45d0c:	bne	45d4c <__assert_fail@plt+0x33660>
   45d10:	ldr	r3, [fp, #-160]	; 0xffffff60
   45d14:	ldr	r3, [r3, #36]	; 0x24
   45d18:	lsl	r3, r3, #2
   45d1c:	mov	r0, r3
   45d20:	bl	43510 <__assert_fail@plt+0x30e24>
   45d24:	mov	r3, r0
   45d28:	mov	r2, r3
   45d2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45d30:	str	r2, [r3, #12]
   45d34:	ldr	r3, [fp, #-160]	; 0xffffff60
   45d38:	ldr	r3, [r3, #12]
   45d3c:	cmp	r3, #0
   45d40:	bne	45d4c <__assert_fail@plt+0x33660>
   45d44:	mov	r3, #12
   45d48:	b	46224 <__assert_fail@plt+0x33b38>
   45d4c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45d50:	ldrb	r3, [r3, #76]	; 0x4c
   45d54:	cmp	r3, #0
   45d58:	bne	45dac <__assert_fail@plt+0x336c0>
   45d5c:	mov	r3, #0
   45d60:	str	r3, [fp, #-28]	; 0xffffffe4
   45d64:	b	45d90 <__assert_fail@plt+0x336a4>
   45d68:	ldr	r3, [fp, #-160]	; 0xffffff60
   45d6c:	ldr	r2, [r3, #12]
   45d70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45d74:	lsl	r3, r3, #2
   45d78:	add	r3, r2, r3
   45d7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45d80:	str	r2, [r3]
   45d84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45d88:	add	r3, r3, #1
   45d8c:	str	r3, [fp, #-28]	; 0xffffffe4
   45d90:	ldr	r3, [fp, #-12]
   45d94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45d98:	cmp	r2, r3
   45d9c:	bcc	45d68 <__assert_fail@plt+0x3367c>
   45da0:	ldr	r3, [fp, #-160]	; 0xffffff60
   45da4:	mov	r2, #1
   45da8:	strb	r2, [r3, #76]	; 0x4c
   45dac:	ldr	r3, [fp, #-160]	; 0xffffff60
   45db0:	ldr	r2, [r3, #4]
   45db4:	ldr	r3, [fp, #-12]
   45db8:	add	r3, r2, r3
   45dbc:	sub	r1, fp, #144	; 0x90
   45dc0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   45dc4:	mov	r0, r3
   45dc8:	bl	120f8 <memcpy@plt>
   45dcc:	ldr	r3, [fp, #-160]	; 0xffffff60
   45dd0:	ldr	r2, [r3, #8]
   45dd4:	ldr	r3, [fp, #-12]
   45dd8:	lsl	r3, r3, #2
   45ddc:	add	r3, r2, r3
   45de0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   45de4:	str	r2, [r3]
   45de8:	ldr	r3, [fp, #-160]	; 0xffffff60
   45dec:	ldr	r2, [r3, #12]
   45df0:	ldr	r3, [fp, #-12]
   45df4:	lsl	r3, r3, #2
   45df8:	add	r3, r2, r3
   45dfc:	ldr	r2, [fp, #-8]
   45e00:	str	r2, [r3]
   45e04:	mov	r3, #1
   45e08:	str	r3, [fp, #-28]	; 0xffffffe4
   45e0c:	b	45e8c <__assert_fail@plt+0x337a0>
   45e10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45e14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45e18:	cmp	r2, r3
   45e1c:	bcc	45e2c <__assert_fail@plt+0x33740>
   45e20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45e24:	sub	r3, r3, #1
   45e28:	b	45e30 <__assert_fail@plt+0x33744>
   45e2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45e30:	ldr	r2, [fp, #-8]
   45e34:	add	r0, r3, r2
   45e38:	ldr	r3, [fp, #-160]	; 0xffffff60
   45e3c:	ldr	r2, [r3, #12]
   45e40:	ldr	r1, [fp, #-12]
   45e44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45e48:	add	r3, r1, r3
   45e4c:	lsl	r3, r3, #2
   45e50:	add	r3, r2, r3
   45e54:	mov	r2, r0
   45e58:	str	r2, [r3]
   45e5c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45e60:	ldr	r2, [r3, #8]
   45e64:	ldr	r1, [fp, #-12]
   45e68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45e6c:	add	r3, r1, r3
   45e70:	lsl	r3, r3, #2
   45e74:	add	r3, r2, r3
   45e78:	mvn	r2, #0
   45e7c:	str	r2, [r3]
   45e80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45e84:	add	r3, r3, #1
   45e88:	str	r3, [fp, #-28]	; 0xffffffe4
   45e8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   45e90:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45e94:	cmp	r2, r3
   45e98:	bcc	45e10 <__assert_fail@plt+0x33724>
   45e9c:	ldr	r3, [fp, #-160]	; 0xffffff60
   45ea0:	ldr	r3, [r3, #48]	; 0x30
   45ea4:	mov	r1, r3
   45ea8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   45eac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45eb0:	sub	r3, r2, r3
   45eb4:	add	r3, r1, r3
   45eb8:	mov	r2, r3
   45ebc:	ldr	r3, [fp, #-160]	; 0xffffff60
   45ec0:	str	r2, [r3, #48]	; 0x30
   45ec4:	ldr	r3, [fp, #-160]	; 0xffffff60
   45ec8:	ldr	r3, [r3, #52]	; 0x34
   45ecc:	ldr	r2, [fp, #-8]
   45ed0:	cmp	r2, r3
   45ed4:	bge	45f00 <__assert_fail@plt+0x33814>
   45ed8:	ldr	r3, [fp, #-160]	; 0xffffff60
   45edc:	ldr	r3, [r3, #56]	; 0x38
   45ee0:	mov	r1, r3
   45ee4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   45ee8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45eec:	sub	r3, r2, r3
   45ef0:	add	r3, r1, r3
   45ef4:	mov	r2, r3
   45ef8:	ldr	r3, [fp, #-160]	; 0xffffff60
   45efc:	str	r2, [r3, #56]	; 0x38
   45f00:	ldr	r3, [fp, #-160]	; 0xffffff60
   45f04:	ldr	r2, [r3, #36]	; 0x24
   45f08:	ldr	r3, [fp, #-160]	; 0xffffff60
   45f0c:	ldr	r3, [r3, #48]	; 0x30
   45f10:	cmp	r2, r3
   45f14:	movlt	r3, r2
   45f18:	movge	r3, r3
   45f1c:	str	r3, [fp, #-16]
   45f20:	ldr	r2, [fp, #-12]
   45f24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   45f28:	add	r3, r2, r3
   45f2c:	str	r3, [fp, #-12]
   45f30:	ldr	r2, [fp, #-8]
   45f34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45f38:	add	r3, r2, r3
   45f3c:	str	r3, [fp, #-8]
   45f40:	b	461f8 <__assert_fail@plt+0x33b0c>
   45f44:	ldr	r3, [fp, #-160]	; 0xffffff60
   45f48:	ldr	r2, [r3, #4]
   45f4c:	ldr	r3, [fp, #-12]
   45f50:	add	r3, r2, r3
   45f54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   45f58:	ldr	r1, [fp, #-20]	; 0xffffffec
   45f5c:	mov	r0, r3
   45f60:	bl	120f8 <memcpy@plt>
   45f64:	b	45f88 <__assert_fail@plt+0x3389c>
   45f68:	ldr	r3, [fp, #-160]	; 0xffffff60
   45f6c:	ldr	r2, [r3, #4]
   45f70:	ldr	r3, [fp, #-12]
   45f74:	add	r3, r2, r3
   45f78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   45f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   45f80:	mov	r0, r3
   45f84:	bl	120f8 <memcpy@plt>
   45f88:	ldr	r3, [fp, #-160]	; 0xffffff60
   45f8c:	ldrb	r3, [r3, #76]	; 0x4c
   45f90:	cmp	r3, #0
   45f94:	movne	r3, #1
   45f98:	moveq	r3, #0
   45f9c:	uxtb	r3, r3
   45fa0:	cmp	r3, #0
   45fa4:	beq	46000 <__assert_fail@plt+0x33914>
   45fa8:	mov	r3, #0
   45fac:	str	r3, [fp, #-32]	; 0xffffffe0
   45fb0:	b	45ff0 <__assert_fail@plt+0x33904>
   45fb4:	ldr	r2, [fp, #-8]
   45fb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45fbc:	add	r0, r2, r3
   45fc0:	ldr	r3, [fp, #-160]	; 0xffffff60
   45fc4:	ldr	r2, [r3, #12]
   45fc8:	ldr	r1, [fp, #-12]
   45fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45fd0:	add	r3, r1, r3
   45fd4:	lsl	r3, r3, #2
   45fd8:	add	r3, r2, r3
   45fdc:	mov	r2, r0
   45fe0:	str	r2, [r3]
   45fe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   45fe8:	add	r3, r3, #1
   45fec:	str	r3, [fp, #-32]	; 0xffffffe0
   45ff0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   45ff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   45ff8:	cmp	r2, r3
   45ffc:	bcc	45fb4 <__assert_fail@plt+0x338c8>
   46000:	ldr	r2, [fp, #-8]
   46004:	ldr	r3, [fp, #-52]	; 0xffffffcc
   46008:	add	r3, r2, r3
   4600c:	str	r3, [fp, #-8]
   46010:	ldr	r3, [fp, #-160]	; 0xffffff60
   46014:	ldr	r2, [r3, #8]
   46018:	ldr	r3, [fp, #-12]
   4601c:	add	r1, r3, #1
   46020:	str	r1, [fp, #-12]
   46024:	lsl	r3, r3, #2
   46028:	add	r3, r2, r3
   4602c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   46030:	str	r2, [r3]
   46034:	ldr	r2, [fp, #-12]
   46038:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4603c:	add	r3, r2, r3
   46040:	sub	r3, r3, #1
   46044:	str	r3, [fp, #-48]	; 0xffffffd0
   46048:	b	46070 <__assert_fail@plt+0x33984>
   4604c:	ldr	r3, [fp, #-160]	; 0xffffff60
   46050:	ldr	r2, [r3, #8]
   46054:	ldr	r3, [fp, #-12]
   46058:	add	r1, r3, #1
   4605c:	str	r1, [fp, #-12]
   46060:	lsl	r3, r3, #2
   46064:	add	r3, r2, r3
   46068:	mvn	r2, #0
   4606c:	str	r2, [r3]
   46070:	ldr	r2, [fp, #-12]
   46074:	ldr	r3, [fp, #-48]	; 0xffffffd0
   46078:	cmp	r2, r3
   4607c:	blt	4604c <__assert_fail@plt+0x33960>
   46080:	b	461f8 <__assert_fail@plt+0x33b0c>
   46084:	ldr	r3, [fp, #-52]	; 0xffffffcc
   46088:	cmn	r3, #1
   4608c:	beq	460c0 <__assert_fail@plt+0x339d4>
   46090:	ldr	r3, [fp, #-52]	; 0xffffffcc
   46094:	cmp	r3, #0
   46098:	beq	460c0 <__assert_fail@plt+0x339d4>
   4609c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   460a0:	cmn	r3, #2
   460a4:	bne	461d8 <__assert_fail@plt+0x33aec>
   460a8:	ldr	r3, [fp, #-160]	; 0xffffff60
   460ac:	ldr	r2, [r3, #36]	; 0x24
   460b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   460b4:	ldr	r3, [r3, #48]	; 0x30
   460b8:	cmp	r2, r3
   460bc:	blt	461d8 <__assert_fail@plt+0x33aec>
   460c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   460c4:	ldr	r3, [r3]
   460c8:	ldr	r2, [fp, #-160]	; 0xffffff60
   460cc:	ldr	r1, [r2, #24]
   460d0:	ldr	r2, [fp, #-8]
   460d4:	add	r2, r1, r2
   460d8:	add	r3, r3, r2
   460dc:	ldrb	r3, [r3]
   460e0:	str	r3, [fp, #-36]	; 0xffffffdc
   460e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   460e8:	ldr	r3, [r3, #64]	; 0x40
   460ec:	cmp	r3, #0
   460f0:	movne	r3, #1
   460f4:	moveq	r3, #0
   460f8:	uxtb	r3, r3
   460fc:	cmp	r3, #0
   46100:	beq	4611c <__assert_fail@plt+0x33a30>
   46104:	ldr	r3, [fp, #-160]	; 0xffffff60
   46108:	ldr	r2, [r3, #64]	; 0x40
   4610c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   46110:	add	r3, r2, r3
   46114:	ldrb	r3, [r3]
   46118:	str	r3, [fp, #-36]	; 0xffffffdc
   4611c:	ldr	r3, [fp, #-160]	; 0xffffff60
   46120:	ldr	r2, [r3, #4]
   46124:	ldr	r3, [fp, #-12]
   46128:	add	r3, r2, r3
   4612c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   46130:	uxtb	r2, r2
   46134:	strb	r2, [r3]
   46138:	ldr	r3, [fp, #-160]	; 0xffffff60
   4613c:	ldrb	r3, [r3, #76]	; 0x4c
   46140:	cmp	r3, #0
   46144:	movne	r3, #1
   46148:	moveq	r3, #0
   4614c:	uxtb	r3, r3
   46150:	cmp	r3, #0
   46154:	beq	46174 <__assert_fail@plt+0x33a88>
   46158:	ldr	r3, [fp, #-160]	; 0xffffff60
   4615c:	ldr	r2, [r3, #12]
   46160:	ldr	r3, [fp, #-12]
   46164:	lsl	r3, r3, #2
   46168:	add	r3, r2, r3
   4616c:	ldr	r2, [fp, #-8]
   46170:	str	r2, [r3]
   46174:	ldr	r3, [fp, #-8]
   46178:	add	r3, r3, #1
   4617c:	str	r3, [fp, #-8]
   46180:	ldr	r3, [fp, #-160]	; 0xffffff60
   46184:	ldr	r2, [r3, #8]
   46188:	ldr	r3, [fp, #-12]
   4618c:	add	r1, r3, #1
   46190:	str	r1, [fp, #-12]
   46194:	lsl	r3, r3, #2
   46198:	add	r3, r2, r3
   4619c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   461a0:	str	r2, [r3]
   461a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   461a8:	cmn	r3, #1
   461ac:	moveq	r3, #1
   461b0:	movne	r3, #0
   461b4:	uxtb	r3, r3
   461b8:	cmp	r3, #0
   461bc:	beq	461f4 <__assert_fail@plt+0x33b08>
   461c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   461c4:	add	r1, r3, #16
   461c8:	sub	r3, fp, #80	; 0x50
   461cc:	ldrd	r2, [r3]
   461d0:	strd	r2, [r1]
   461d4:	b	461f4 <__assert_fail@plt+0x33b08>
   461d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   461dc:	add	r1, r3, #16
   461e0:	sub	r3, fp, #80	; 0x50
   461e4:	ldrd	r2, [r3]
   461e8:	strd	r2, [r1]
   461ec:	nop	{0}
   461f0:	b	46208 <__assert_fail@plt+0x33b1c>
   461f4:	nop	{0}
   461f8:	ldr	r2, [fp, #-12]
   461fc:	ldr	r3, [fp, #-16]
   46200:	cmp	r2, r3
   46204:	blt	45ae8 <__assert_fail@plt+0x333fc>
   46208:	ldr	r3, [fp, #-160]	; 0xffffff60
   4620c:	ldr	r2, [fp, #-12]
   46210:	str	r2, [r3, #28]
   46214:	ldr	r3, [fp, #-160]	; 0xffffff60
   46218:	ldr	r2, [fp, #-8]
   4621c:	str	r2, [r3, #32]
   46220:	mov	r3, #0
   46224:	mov	r0, r3
   46228:	sub	sp, fp, #4
   4622c:	ldr	fp, [sp]
   46230:	add	sp, sp, #4
   46234:	pop	{pc}		; (ldr pc, [sp], #4)
   46238:	str	fp, [sp, #-8]!
   4623c:	str	lr, [sp, #4]
   46240:	add	fp, sp, #4
   46244:	sub	sp, sp, #48	; 0x30
   46248:	str	r0, [fp, #-40]	; 0xffffffd8
   4624c:	str	r1, [fp, #-44]	; 0xffffffd4
   46250:	str	r2, [fp, #-48]	; 0xffffffd0
   46254:	mvn	r3, #0
   46258:	str	r3, [fp, #-16]
   4625c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46260:	ldr	r2, [r3, #24]
   46264:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46268:	ldr	r3, [r3, #32]
   4626c:	add	r3, r2, r3
   46270:	str	r3, [fp, #-8]
   46274:	b	463a4 <__assert_fail@plt+0x33cb8>
   46278:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4627c:	ldr	r2, [r3, #44]	; 0x2c
   46280:	ldr	r3, [fp, #-8]
   46284:	sub	r3, r2, r3
   46288:	str	r3, [fp, #-20]	; 0xffffffec
   4628c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46290:	sub	r1, fp, #28
   46294:	add	r3, r3, #16
   46298:	ldrd	r2, [r3]
   4629c:	strd	r2, [r1]
   462a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   462a4:	ldr	r2, [r3]
   462a8:	ldr	r3, [fp, #-8]
   462ac:	add	r1, r2, r3
   462b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   462b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   462b8:	add	r3, r3, #16
   462bc:	sub	r0, fp, #32
   462c0:	bl	435a0 <__assert_fail@plt+0x30eb4>
   462c4:	str	r0, [fp, #-12]
   462c8:	ldr	r3, [fp, #-12]
   462cc:	cmn	r3, #2
   462d0:	moveq	r3, #1
   462d4:	movne	r3, #0
   462d8:	uxtb	r3, r3
   462dc:	cmp	r3, #0
   462e0:	bne	46300 <__assert_fail@plt+0x33c14>
   462e4:	ldr	r3, [fp, #-12]
   462e8:	cmn	r3, #1
   462ec:	moveq	r3, #1
   462f0:	movne	r3, #0
   462f4:	uxtb	r3, r3
   462f8:	cmp	r3, #0
   462fc:	beq	46308 <__assert_fail@plt+0x33c1c>
   46300:	mov	r3, #1
   46304:	b	4630c <__assert_fail@plt+0x33c20>
   46308:	mov	r3, #0
   4630c:	cmp	r3, #0
   46310:	bne	46330 <__assert_fail@plt+0x33c44>
   46314:	ldr	r3, [fp, #-12]
   46318:	cmp	r3, #0
   4631c:	moveq	r3, #1
   46320:	movne	r3, #0
   46324:	uxtb	r3, r3
   46328:	cmp	r3, #0
   4632c:	beq	4638c <__assert_fail@plt+0x33ca0>
   46330:	ldr	r3, [fp, #-12]
   46334:	cmp	r3, #0
   46338:	beq	46348 <__assert_fail@plt+0x33c5c>
   4633c:	ldr	r3, [fp, #-20]	; 0xffffffec
   46340:	cmp	r3, #0
   46344:	bne	46354 <__assert_fail@plt+0x33c68>
   46348:	mov	r3, #0
   4634c:	str	r3, [fp, #-16]
   46350:	b	4636c <__assert_fail@plt+0x33c80>
   46354:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46358:	ldr	r2, [r3]
   4635c:	ldr	r3, [fp, #-8]
   46360:	add	r3, r2, r3
   46364:	ldrb	r3, [r3]
   46368:	str	r3, [fp, #-16]
   4636c:	mov	r3, #1
   46370:	str	r3, [fp, #-12]
   46374:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46378:	add	r1, r3, #16
   4637c:	sub	r3, fp, #28
   46380:	ldrd	r2, [r3]
   46384:	strd	r2, [r1]
   46388:	b	46394 <__assert_fail@plt+0x33ca8>
   4638c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   46390:	str	r3, [fp, #-16]
   46394:	ldr	r2, [fp, #-8]
   46398:	ldr	r3, [fp, #-12]
   4639c:	add	r3, r2, r3
   463a0:	str	r3, [fp, #-8]
   463a4:	ldr	r2, [fp, #-8]
   463a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   463ac:	cmp	r2, r3
   463b0:	blt	46278 <__assert_fail@plt+0x33b8c>
   463b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   463b8:	ldr	r2, [fp, #-16]
   463bc:	str	r2, [r3]
   463c0:	ldr	r3, [fp, #-8]
   463c4:	mov	r0, r3
   463c8:	sub	sp, fp, #4
   463cc:	ldr	fp, [sp]
   463d0:	add	sp, sp, #4
   463d4:	pop	{pc}		; (ldr pc, [sp], #4)
   463d8:	str	fp, [sp, #-8]!
   463dc:	str	lr, [sp, #4]
   463e0:	add	fp, sp, #4
   463e4:	sub	sp, sp, #24
   463e8:	str	r0, [fp, #-24]	; 0xffffffe8
   463ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   463f0:	ldr	r2, [r3, #36]	; 0x24
   463f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   463f8:	ldr	r3, [r3, #48]	; 0x30
   463fc:	cmp	r2, r3
   46400:	movlt	r3, r2
   46404:	movge	r3, r3
   46408:	str	r3, [fp, #-16]
   4640c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46410:	ldr	r3, [r3, #28]
   46414:	str	r3, [fp, #-8]
   46418:	b	464a8 <__assert_fail@plt+0x33dbc>
   4641c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46420:	ldr	r3, [r3]
   46424:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46428:	ldr	r1, [r2, #24]
   4642c:	ldr	r2, [fp, #-8]
   46430:	add	r2, r1, r2
   46434:	add	r3, r3, r2
   46438:	ldrb	r3, [r3]
   4643c:	str	r3, [fp, #-12]
   46440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46444:	ldr	r3, [r3, #64]	; 0x40
   46448:	cmp	r3, #0
   4644c:	movne	r3, #1
   46450:	moveq	r3, #0
   46454:	uxtb	r3, r3
   46458:	cmp	r3, #0
   4645c:	beq	46478 <__assert_fail@plt+0x33d8c>
   46460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46464:	ldr	r2, [r3, #64]	; 0x40
   46468:	ldr	r3, [fp, #-12]
   4646c:	add	r3, r2, r3
   46470:	ldrb	r3, [r3]
   46474:	str	r3, [fp, #-12]
   46478:	ldr	r0, [fp, #-12]
   4647c:	bl	1253c <toupper@plt>
   46480:	mov	r1, r0
   46484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46488:	ldr	r2, [r3, #4]
   4648c:	ldr	r3, [fp, #-8]
   46490:	add	r3, r2, r3
   46494:	uxtb	r2, r1
   46498:	strb	r2, [r3]
   4649c:	ldr	r3, [fp, #-8]
   464a0:	add	r3, r3, #1
   464a4:	str	r3, [fp, #-8]
   464a8:	ldr	r2, [fp, #-8]
   464ac:	ldr	r3, [fp, #-16]
   464b0:	cmp	r2, r3
   464b4:	blt	4641c <__assert_fail@plt+0x33d30>
   464b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   464bc:	ldr	r2, [fp, #-8]
   464c0:	str	r2, [r3, #28]
   464c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   464c8:	ldr	r2, [fp, #-8]
   464cc:	str	r2, [r3, #32]
   464d0:	nop	{0}
   464d4:	sub	sp, fp, #4
   464d8:	ldr	fp, [sp]
   464dc:	add	sp, sp, #4
   464e0:	pop	{pc}		; (ldr pc, [sp], #4)
   464e4:	push	{fp}		; (str fp, [sp, #-4]!)
   464e8:	add	fp, sp, #0
   464ec:	sub	sp, sp, #28
   464f0:	str	r0, [fp, #-24]	; 0xffffffe8
   464f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   464f8:	ldr	r2, [r3, #36]	; 0x24
   464fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46500:	ldr	r3, [r3, #48]	; 0x30
   46504:	cmp	r2, r3
   46508:	movlt	r3, r2
   4650c:	movge	r3, r3
   46510:	str	r3, [fp, #-12]
   46514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46518:	ldr	r3, [r3, #28]
   4651c:	str	r3, [fp, #-8]
   46520:	b	4657c <__assert_fail@plt+0x33e90>
   46524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46528:	ldr	r3, [r3]
   4652c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46530:	ldr	r1, [r2, #24]
   46534:	ldr	r2, [fp, #-8]
   46538:	add	r2, r1, r2
   4653c:	add	r3, r3, r2
   46540:	ldrb	r3, [r3]
   46544:	str	r3, [fp, #-16]
   46548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4654c:	ldr	r2, [r3, #64]	; 0x40
   46550:	ldr	r3, [fp, #-16]
   46554:	add	r2, r2, r3
   46558:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4655c:	ldr	r1, [r3, #4]
   46560:	ldr	r3, [fp, #-8]
   46564:	add	r3, r1, r3
   46568:	ldrb	r2, [r2]
   4656c:	strb	r2, [r3]
   46570:	ldr	r3, [fp, #-8]
   46574:	add	r3, r3, #1
   46578:	str	r3, [fp, #-8]
   4657c:	ldr	r2, [fp, #-8]
   46580:	ldr	r3, [fp, #-12]
   46584:	cmp	r2, r3
   46588:	blt	46524 <__assert_fail@plt+0x33e38>
   4658c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46590:	ldr	r2, [fp, #-8]
   46594:	str	r2, [r3, #28]
   46598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4659c:	ldr	r2, [fp, #-8]
   465a0:	str	r2, [r3, #32]
   465a4:	nop	{0}
   465a8:	add	sp, fp, #0
   465ac:	pop	{fp}		; (ldr fp, [sp], #4)
   465b0:	bx	lr
   465b4:	str	fp, [sp, #-8]!
   465b8:	str	lr, [sp, #4]
   465bc:	add	fp, sp, #4
   465c0:	sub	sp, sp, #104	; 0x68
   465c4:	str	r0, [fp, #-96]	; 0xffffffa0
   465c8:	str	r1, [fp, #-100]	; 0xffffff9c
   465cc:	str	r2, [fp, #-104]	; 0xffffff98
   465d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   465d4:	ldr	r3, [r3, #24]
   465d8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   465dc:	cmp	r2, r3
   465e0:	movge	r3, #1
   465e4:	movlt	r3, #0
   465e8:	uxtb	r3, r3
   465ec:	cmp	r3, #0
   465f0:	beq	4660c <__assert_fail@plt+0x33f20>
   465f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   465f8:	ldr	r3, [r3, #24]
   465fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   46600:	sub	r3, r2, r3
   46604:	str	r3, [fp, #-8]
   46608:	b	466d0 <__assert_fail@plt+0x33fe4>
   4660c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46610:	ldr	r3, [r3, #80]	; 0x50
   46614:	cmp	r3, #1
   46618:	ble	46634 <__assert_fail@plt+0x33f48>
   4661c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46620:	add	r3, r3, #16
   46624:	mov	r2, #8
   46628:	mov	r1, #0
   4662c:	mov	r0, r3
   46630:	bl	12434 <memset@plt>
   46634:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46638:	ldr	r2, [r3, #44]	; 0x2c
   4663c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46640:	str	r2, [r3, #48]	; 0x30
   46644:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46648:	ldr	r2, [r3, #52]	; 0x34
   4664c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46650:	str	r2, [r3, #56]	; 0x38
   46654:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46658:	mov	r2, #0
   4665c:	str	r2, [r3, #28]
   46660:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46664:	mov	r2, #0
   46668:	str	r2, [r3, #24]
   4666c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46670:	mov	r2, #0
   46674:	str	r2, [r3, #32]
   46678:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4667c:	mov	r2, #0
   46680:	strb	r2, [r3, #76]	; 0x4c
   46684:	ldr	r3, [fp, #-104]	; 0xffffff98
   46688:	and	r3, r3, #1
   4668c:	cmp	r3, #0
   46690:	beq	4669c <__assert_fail@plt+0x33fb0>
   46694:	mov	r2, #4
   46698:	b	466a0 <__assert_fail@plt+0x33fb4>
   4669c:	mov	r2, #6
   466a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   466a4:	str	r2, [r3, #60]	; 0x3c
   466a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   466ac:	ldrb	r3, [r3, #75]	; 0x4b
   466b0:	cmp	r3, #0
   466b4:	bne	466c8 <__assert_fail@plt+0x33fdc>
   466b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   466bc:	ldr	r2, [r3]
   466c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   466c4:	str	r2, [r3, #4]
   466c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   466cc:	str	r3, [fp, #-8]
   466d0:	ldr	r3, [fp, #-8]
   466d4:	cmp	r3, #0
   466d8:	movne	r3, #1
   466dc:	moveq	r3, #0
   466e0:	uxtb	r3, r3
   466e4:	cmp	r3, #0
   466e8:	beq	47108 <__assert_fail@plt+0x34a1c>
   466ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   466f0:	ldr	r3, [r3, #32]
   466f4:	ldr	r2, [fp, #-8]
   466f8:	cmp	r2, r3
   466fc:	movlt	r3, #1
   46700:	movge	r3, #0
   46704:	uxtb	r3, r3
   46708:	cmp	r3, #0
   4670c:	beq	46c08 <__assert_fail@plt+0x3451c>
   46710:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46714:	ldrb	r3, [r3, #76]	; 0x4c
   46718:	cmp	r3, #0
   4671c:	beq	46b1c <__assert_fail@plt+0x34430>
   46720:	mov	r3, #0
   46724:	str	r3, [fp, #-12]
   46728:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4672c:	ldr	r3, [r3, #28]
   46730:	str	r3, [fp, #-16]
   46734:	ldr	r2, [fp, #-16]
   46738:	ldr	r3, [fp, #-12]
   4673c:	add	r3, r2, r3
   46740:	lsr	r2, r3, #31
   46744:	add	r3, r2, r3
   46748:	asr	r3, r3, #1
   4674c:	str	r3, [fp, #-20]	; 0xffffffec
   46750:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46754:	ldr	r2, [r3, #12]
   46758:	ldr	r3, [fp, #-20]	; 0xffffffec
   4675c:	lsl	r3, r3, #2
   46760:	add	r3, r2, r3
   46764:	ldr	r3, [r3]
   46768:	ldr	r2, [fp, #-8]
   4676c:	cmp	r2, r3
   46770:	bge	46780 <__assert_fail@plt+0x34094>
   46774:	ldr	r3, [fp, #-20]	; 0xffffffec
   46778:	str	r3, [fp, #-16]
   4677c:	b	467b0 <__assert_fail@plt+0x340c4>
   46780:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46784:	ldr	r2, [r3, #12]
   46788:	ldr	r3, [fp, #-20]	; 0xffffffec
   4678c:	lsl	r3, r3, #2
   46790:	add	r3, r2, r3
   46794:	ldr	r3, [r3]
   46798:	ldr	r2, [fp, #-8]
   4679c:	cmp	r2, r3
   467a0:	ble	467c4 <__assert_fail@plt+0x340d8>
   467a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   467a8:	add	r3, r3, #1
   467ac:	str	r3, [fp, #-12]
   467b0:	ldr	r2, [fp, #-12]
   467b4:	ldr	r3, [fp, #-16]
   467b8:	cmp	r2, r3
   467bc:	blt	46734 <__assert_fail@plt+0x34048>
   467c0:	b	467c8 <__assert_fail@plt+0x340dc>
   467c4:	nop	{0}
   467c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   467cc:	ldr	r2, [r3, #12]
   467d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   467d4:	lsl	r3, r3, #2
   467d8:	add	r3, r2, r3
   467dc:	ldr	r3, [r3]
   467e0:	ldr	r2, [fp, #-8]
   467e4:	cmp	r2, r3
   467e8:	ble	467f8 <__assert_fail@plt+0x3410c>
   467ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   467f0:	add	r3, r3, #1
   467f4:	str	r3, [fp, #-20]	; 0xffffffec
   467f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   467fc:	sub	r3, r3, #1
   46800:	ldr	r2, [fp, #-104]	; 0xffffff98
   46804:	mov	r1, r3
   46808:	ldr	r0, [fp, #-96]	; 0xffffffa0
   4680c:	bl	47620 <__assert_fail@plt+0x34f34>
   46810:	mov	r2, r0
   46814:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46818:	str	r2, [r3, #60]	; 0x3c
   4681c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46820:	ldr	r3, [r3, #28]
   46824:	ldr	r2, [fp, #-8]
   46828:	cmp	r2, r3
   4682c:	bge	4696c <__assert_fail@plt+0x34280>
   46830:	ldr	r2, [fp, #-20]	; 0xffffffec
   46834:	ldr	r3, [fp, #-8]
   46838:	cmp	r2, r3
   4683c:	bne	4696c <__assert_fail@plt+0x34280>
   46840:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46844:	ldr	r2, [r3, #12]
   46848:	ldr	r3, [fp, #-20]	; 0xffffffec
   4684c:	lsl	r3, r3, #2
   46850:	add	r3, r2, r3
   46854:	ldr	r3, [r3]
   46858:	ldr	r2, [fp, #-8]
   4685c:	cmp	r2, r3
   46860:	bne	4696c <__assert_fail@plt+0x34280>
   46864:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46868:	ldr	r0, [r3, #8]
   4686c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46870:	ldr	r2, [r3, #8]
   46874:	ldr	r3, [fp, #-8]
   46878:	lsl	r3, r3, #2
   4687c:	add	r1, r2, r3
   46880:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46884:	ldr	r2, [r3, #28]
   46888:	ldr	r3, [fp, #-8]
   4688c:	sub	r3, r2, r3
   46890:	lsl	r3, r3, #2
   46894:	mov	r2, r3
   46898:	bl	1208c <memmove@plt>
   4689c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   468a0:	ldr	r0, [r3, #4]
   468a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   468a8:	ldr	r2, [r3, #4]
   468ac:	ldr	r3, [fp, #-8]
   468b0:	add	r1, r2, r3
   468b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   468b8:	ldr	r2, [r3, #28]
   468bc:	ldr	r3, [fp, #-8]
   468c0:	sub	r3, r2, r3
   468c4:	mov	r2, r3
   468c8:	bl	1208c <memmove@plt>
   468cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   468d0:	ldr	r2, [r3, #28]
   468d4:	ldr	r3, [fp, #-8]
   468d8:	sub	r2, r2, r3
   468dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   468e0:	str	r2, [r3, #28]
   468e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   468e8:	ldr	r2, [r3, #32]
   468ec:	ldr	r3, [fp, #-8]
   468f0:	sub	r2, r2, r3
   468f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   468f8:	str	r2, [r3, #32]
   468fc:	mov	r3, #0
   46900:	str	r3, [fp, #-12]
   46904:	b	46954 <__assert_fail@plt+0x34268>
   46908:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4690c:	ldr	r2, [r3, #12]
   46910:	ldr	r1, [fp, #-12]
   46914:	ldr	r3, [fp, #-8]
   46918:	add	r3, r1, r3
   4691c:	lsl	r3, r3, #2
   46920:	add	r3, r2, r3
   46924:	ldr	r1, [r3]
   46928:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4692c:	ldr	r2, [r3, #12]
   46930:	ldr	r3, [fp, #-12]
   46934:	lsl	r3, r3, #2
   46938:	add	r3, r2, r3
   4693c:	ldr	r2, [fp, #-8]
   46940:	sub	r2, r1, r2
   46944:	str	r2, [r3]
   46948:	ldr	r3, [fp, #-12]
   4694c:	add	r3, r3, #1
   46950:	str	r3, [fp, #-12]
   46954:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46958:	ldr	r3, [r3, #28]
   4695c:	ldr	r2, [fp, #-12]
   46960:	cmp	r2, r3
   46964:	blt	46908 <__assert_fail@plt+0x3421c>
   46968:	b	470e0 <__assert_fail@plt+0x349f4>
   4696c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46970:	ldr	r2, [r3, #44]	; 0x2c
   46974:	ldr	r3, [fp, #-100]	; 0xffffff9c
   46978:	sub	r2, r2, r3
   4697c:	ldr	r3, [fp, #-8]
   46980:	add	r2, r2, r3
   46984:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46988:	str	r2, [r3, #48]	; 0x30
   4698c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46990:	ldr	r2, [r3, #52]	; 0x34
   46994:	ldr	r3, [fp, #-100]	; 0xffffff9c
   46998:	sub	r2, r2, r3
   4699c:	ldr	r3, [fp, #-8]
   469a0:	add	r2, r2, r3
   469a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   469a8:	str	r2, [r3, #56]	; 0x38
   469ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   469b0:	mov	r2, #0
   469b4:	strb	r2, [r3, #76]	; 0x4c
   469b8:	b	469c8 <__assert_fail@plt+0x342dc>
   469bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   469c0:	sub	r3, r3, #1
   469c4:	str	r3, [fp, #-20]	; 0xffffffec
   469c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   469cc:	cmp	r3, #0
   469d0:	ble	46a2c <__assert_fail@plt+0x34340>
   469d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   469d8:	ldr	r2, [r3, #12]
   469dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   469e0:	sub	r3, r3, #-1073741823	; 0xc0000001
   469e4:	lsl	r3, r3, #2
   469e8:	add	r3, r2, r3
   469ec:	ldr	r3, [r3]
   469f0:	ldr	r2, [fp, #-8]
   469f4:	cmp	r2, r3
   469f8:	beq	469bc <__assert_fail@plt+0x342d0>
   469fc:	b	46a2c <__assert_fail@plt+0x34340>
   46a00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46a04:	ldr	r2, [r3, #8]
   46a08:	ldr	r3, [fp, #-20]	; 0xffffffec
   46a0c:	lsl	r3, r3, #2
   46a10:	add	r3, r2, r3
   46a14:	ldr	r3, [r3]
   46a18:	cmn	r3, #1
   46a1c:	bne	46a44 <__assert_fail@plt+0x34358>
   46a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   46a24:	add	r3, r3, #1
   46a28:	str	r3, [fp, #-20]	; 0xffffffec
   46a2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46a30:	ldr	r3, [r3, #28]
   46a34:	ldr	r2, [fp, #-20]	; 0xffffffec
   46a38:	cmp	r2, r3
   46a3c:	blt	46a00 <__assert_fail@plt+0x34314>
   46a40:	b	46a48 <__assert_fail@plt+0x3435c>
   46a44:	nop	{0}
   46a48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46a4c:	ldr	r3, [r3, #28]
   46a50:	ldr	r2, [fp, #-20]	; 0xffffffec
   46a54:	cmp	r2, r3
   46a58:	bne	46a6c <__assert_fail@plt+0x34380>
   46a5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46a60:	mov	r2, #0
   46a64:	str	r2, [r3, #28]
   46a68:	b	46b08 <__assert_fail@plt+0x3441c>
   46a6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46a70:	ldr	r2, [r3, #12]
   46a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   46a78:	lsl	r3, r3, #2
   46a7c:	add	r3, r2, r3
   46a80:	ldr	r2, [r3]
   46a84:	ldr	r3, [fp, #-8]
   46a88:	sub	r2, r2, r3
   46a8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46a90:	str	r2, [r3, #28]
   46a94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46a98:	ldr	r3, [r3, #28]
   46a9c:	cmp	r3, #0
   46aa0:	beq	46b08 <__assert_fail@plt+0x3441c>
   46aa4:	mov	r3, #0
   46aa8:	str	r3, [fp, #-12]
   46aac:	b	46ad8 <__assert_fail@plt+0x343ec>
   46ab0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46ab4:	ldr	r2, [r3, #8]
   46ab8:	ldr	r3, [fp, #-12]
   46abc:	lsl	r3, r3, #2
   46ac0:	add	r3, r2, r3
   46ac4:	mvn	r2, #0
   46ac8:	str	r2, [r3]
   46acc:	ldr	r3, [fp, #-12]
   46ad0:	add	r3, r3, #1
   46ad4:	str	r3, [fp, #-12]
   46ad8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46adc:	ldr	r3, [r3, #28]
   46ae0:	ldr	r2, [fp, #-12]
   46ae4:	cmp	r2, r3
   46ae8:	blt	46ab0 <__assert_fail@plt+0x343c4>
   46aec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46af0:	ldr	r0, [r3, #4]
   46af4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46af8:	ldr	r3, [r3, #28]
   46afc:	mov	r2, r3
   46b00:	mov	r1, #255	; 0xff
   46b04:	bl	12434 <memset@plt>
   46b08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b0c:	ldr	r2, [r3, #28]
   46b10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b14:	str	r2, [r3, #32]
   46b18:	b	470e0 <__assert_fail@plt+0x349f4>
   46b1c:	ldr	r3, [fp, #-8]
   46b20:	sub	r3, r3, #1
   46b24:	ldr	r2, [fp, #-104]	; 0xffffff98
   46b28:	mov	r1, r3
   46b2c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   46b30:	bl	47620 <__assert_fail@plt+0x34f34>
   46b34:	mov	r2, r0
   46b38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b3c:	str	r2, [r3, #60]	; 0x3c
   46b40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b44:	ldr	r3, [r3, #80]	; 0x50
   46b48:	cmp	r3, #1
   46b4c:	ble	46b88 <__assert_fail@plt+0x3449c>
   46b50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b54:	ldr	r0, [r3, #8]
   46b58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b5c:	ldr	r2, [r3, #8]
   46b60:	ldr	r3, [fp, #-8]
   46b64:	lsl	r3, r3, #2
   46b68:	add	r1, r2, r3
   46b6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b70:	ldr	r2, [r3, #28]
   46b74:	ldr	r3, [fp, #-8]
   46b78:	sub	r3, r2, r3
   46b7c:	lsl	r3, r3, #2
   46b80:	mov	r2, r3
   46b84:	bl	1208c <memmove@plt>
   46b88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b8c:	ldrb	r3, [r3, #75]	; 0x4b
   46b90:	cmp	r3, #0
   46b94:	beq	46bc8 <__assert_fail@plt+0x344dc>
   46b98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46b9c:	ldr	r0, [r3, #4]
   46ba0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46ba4:	ldr	r2, [r3, #4]
   46ba8:	ldr	r3, [fp, #-8]
   46bac:	add	r1, r2, r3
   46bb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46bb4:	ldr	r2, [r3, #28]
   46bb8:	ldr	r3, [fp, #-8]
   46bbc:	sub	r3, r2, r3
   46bc0:	mov	r2, r3
   46bc4:	bl	1208c <memmove@plt>
   46bc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46bcc:	ldr	r2, [r3, #28]
   46bd0:	ldr	r3, [fp, #-8]
   46bd4:	sub	r2, r2, r3
   46bd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46bdc:	str	r2, [r3, #28]
   46be0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46be4:	ldr	r2, [r3, #32]
   46be8:	ldr	r3, [fp, #-8]
   46bec:	sub	r2, r2, r3
   46bf0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46bf4:	str	r2, [r3, #32]
   46bf8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46bfc:	ldr	r3, [r3, #28]
   46c00:	cmp	r3, #0
   46c04:	b	470e0 <__assert_fail@plt+0x349f4>
   46c08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c0c:	ldr	r3, [r3, #28]
   46c10:	str	r3, [fp, #-48]	; 0xffffffd0
   46c14:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c18:	ldrb	r3, [r3, #76]	; 0x4c
   46c1c:	cmp	r3, #0
   46c20:	beq	46c70 <__assert_fail@plt+0x34584>
   46c24:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c28:	ldr	r2, [r3, #44]	; 0x2c
   46c2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   46c30:	sub	r2, r2, r3
   46c34:	ldr	r3, [fp, #-8]
   46c38:	add	r2, r2, r3
   46c3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c40:	str	r2, [r3, #48]	; 0x30
   46c44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c48:	ldr	r2, [r3, #52]	; 0x34
   46c4c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   46c50:	sub	r2, r2, r3
   46c54:	ldr	r3, [fp, #-8]
   46c58:	add	r2, r2, r3
   46c5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c60:	str	r2, [r3, #56]	; 0x38
   46c64:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c68:	mov	r2, #0
   46c6c:	strb	r2, [r3, #76]	; 0x4c
   46c70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c74:	mov	r2, #0
   46c78:	str	r2, [r3, #28]
   46c7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c80:	ldr	r3, [r3, #80]	; 0x50
   46c84:	cmp	r3, #1
   46c88:	ble	4702c <__assert_fail@plt+0x34940>
   46c8c:	mvn	r3, #0
   46c90:	str	r3, [fp, #-68]	; 0xffffffbc
   46c94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46c98:	ldrb	r3, [r3, #73]	; 0x49
   46c9c:	cmp	r3, #0
   46ca0:	beq	46eb0 <__assert_fail@plt+0x347c4>
   46ca4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46ca8:	ldr	r3, [r3]
   46cac:	ldr	r2, [fp, #-96]	; 0xffffffa0
   46cb0:	ldr	r2, [r2, #24]
   46cb4:	add	r3, r3, r2
   46cb8:	str	r3, [fp, #-52]	; 0xffffffcc
   46cbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46cc0:	ldr	r3, [r3, #80]	; 0x50
   46cc4:	ldr	r2, [fp, #-8]
   46cc8:	sub	r3, r2, r3
   46ccc:	mov	r2, r3
   46cd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   46cd4:	add	r3, r3, r2
   46cd8:	str	r3, [fp, #-32]	; 0xffffffe0
   46cdc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46ce0:	ldr	r3, [r3]
   46ce4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   46ce8:	cmp	r2, r3
   46cec:	bcs	46cfc <__assert_fail@plt+0x34610>
   46cf0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46cf4:	ldr	r3, [r3]
   46cf8:	str	r3, [fp, #-32]	; 0xffffffe0
   46cfc:	ldr	r3, [fp, #-8]
   46d00:	sub	r3, r3, #1
   46d04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   46d08:	add	r3, r2, r3
   46d0c:	str	r3, [fp, #-28]	; 0xffffffe4
   46d10:	b	46e98 <__assert_fail@plt+0x347ac>
   46d14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46d18:	ldrb	r3, [r3]
   46d1c:	and	r3, r3, #192	; 0xc0
   46d20:	cmp	r3, #128	; 0x80
   46d24:	beq	46e8c <__assert_fail@plt+0x347a0>
   46d28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46d2c:	ldr	r3, [r3, #48]	; 0x30
   46d30:	mov	r2, r3
   46d34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   46d38:	add	r2, r3, r2
   46d3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46d40:	sub	r3, r2, r3
   46d44:	str	r3, [fp, #-56]	; 0xffffffc8
   46d48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46d4c:	str	r3, [fp, #-36]	; 0xffffffdc
   46d50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46d54:	ldr	r3, [r3, #64]	; 0x40
   46d58:	cmp	r3, #0
   46d5c:	movne	r3, #1
   46d60:	moveq	r3, #0
   46d64:	uxtb	r3, r3
   46d68:	cmp	r3, #0
   46d6c:	beq	46ddc <__assert_fail@plt+0x346f0>
   46d70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   46d74:	cmp	r3, #6
   46d78:	movlt	r3, r3
   46d7c:	movge	r3, #6
   46d80:	str	r3, [fp, #-40]	; 0xffffffd8
   46d84:	b	46dbc <__assert_fail@plt+0x346d0>
   46d88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46d8c:	ldr	r3, [r3, #64]	; 0x40
   46d90:	ldr	r2, [fp, #-40]	; 0xffffffd8
   46d94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46d98:	add	r2, r1, r2
   46d9c:	ldrb	r2, [r2]
   46da0:	add	r3, r3, r2
   46da4:	ldrb	r1, [r3]
   46da8:	sub	r2, fp, #88	; 0x58
   46dac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46db0:	add	r3, r2, r3
   46db4:	mov	r2, r1
   46db8:	strb	r2, [r3]
   46dbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46dc0:	sub	r3, r3, #1
   46dc4:	str	r3, [fp, #-40]	; 0xffffffd8
   46dc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   46dcc:	cmp	r3, #0
   46dd0:	bge	46d88 <__assert_fail@plt+0x3469c>
   46dd4:	sub	r3, fp, #88	; 0x58
   46dd8:	str	r3, [fp, #-36]	; 0xffffffdc
   46ddc:	sub	r3, fp, #76	; 0x4c
   46de0:	mov	r2, #8
   46de4:	mov	r1, #0
   46de8:	mov	r0, r3
   46dec:	bl	12434 <memset@plt>
   46df0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   46df4:	sub	r3, fp, #76	; 0x4c
   46df8:	sub	r0, fp, #80	; 0x50
   46dfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   46e00:	bl	435a0 <__assert_fail@plt+0x30eb4>
   46e04:	str	r0, [fp, #-60]	; 0xffffffc4
   46e08:	ldr	r3, [fp, #-8]
   46e0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   46e10:	add	r2, r2, r3
   46e14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46e18:	sub	r3, r2, r3
   46e1c:	mov	r2, r3
   46e20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   46e24:	cmp	r3, r2
   46e28:	bcc	46eac <__assert_fail@plt+0x347c0>
   46e2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   46e30:	cmn	r3, #3
   46e34:	bhi	46eac <__assert_fail@plt+0x347c0>
   46e38:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46e3c:	add	r3, r3, #16
   46e40:	mov	r2, #8
   46e44:	mov	r1, #0
   46e48:	mov	r0, r3
   46e4c:	bl	12434 <memset@plt>
   46e50:	ldr	r3, [fp, #-8]
   46e54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   46e58:	add	r2, r2, r3
   46e5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46e60:	sub	r3, r2, r3
   46e64:	mov	r2, r3
   46e68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   46e6c:	sub	r3, r3, r2
   46e70:	mov	r2, r3
   46e74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46e78:	str	r2, [r3, #28]
   46e7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   46e80:	str	r3, [fp, #-68]	; 0xffffffbc
   46e84:	nop	{0}
   46e88:	b	46eac <__assert_fail@plt+0x347c0>
   46e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   46e90:	sub	r3, r3, #1
   46e94:	str	r3, [fp, #-28]	; 0xffffffe4
   46e98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   46e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   46ea0:	cmp	r2, r3
   46ea4:	bcs	46d14 <__assert_fail@plt+0x34628>
   46ea8:	b	46eb0 <__assert_fail@plt+0x347c4>
   46eac:	nop	{0}
   46eb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46eb4:	cmn	r3, #1
   46eb8:	bne	46ee4 <__assert_fail@plt+0x347f8>
   46ebc:	sub	r3, fp, #68	; 0x44
   46ec0:	mov	r2, r3
   46ec4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   46ec8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   46ecc:	bl	46238 <__assert_fail@plt+0x33b4c>
   46ed0:	mov	r2, r0
   46ed4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   46ed8:	sub	r2, r2, r3
   46edc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46ee0:	str	r2, [r3, #28]
   46ee4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46ee8:	cmn	r3, #1
   46eec:	bne	46f18 <__assert_fail@plt+0x3482c>
   46ef0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   46ef4:	sub	r3, r3, #1
   46ef8:	ldr	r2, [fp, #-104]	; 0xffffff98
   46efc:	mov	r1, r3
   46f00:	ldr	r0, [fp, #-96]	; 0xffffffa0
   46f04:	bl	47620 <__assert_fail@plt+0x34f34>
   46f08:	mov	r2, r0
   46f0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46f10:	str	r2, [r3, #60]	; 0x3c
   46f14:	b	46f94 <__assert_fail@plt+0x348a8>
   46f18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46f1c:	ldrb	r3, [r3, #78]	; 0x4e
   46f20:	cmp	r3, #0
   46f24:	movne	r3, #1
   46f28:	moveq	r3, #0
   46f2c:	uxtb	r3, r3
   46f30:	cmp	r3, #0
   46f34:	beq	46f5c <__assert_fail@plt+0x34870>
   46f38:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46f3c:	mov	r0, r3
   46f40:	bl	12410 <iswalnum@plt>
   46f44:	mov	r3, r0
   46f48:	cmp	r3, #0
   46f4c:	bne	46f88 <__assert_fail@plt+0x3489c>
   46f50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46f54:	cmp	r3, #95	; 0x5f
   46f58:	beq	46f88 <__assert_fail@plt+0x3489c>
   46f5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   46f60:	cmp	r3, #10
   46f64:	bne	46f80 <__assert_fail@plt+0x34894>
   46f68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46f6c:	ldrb	r3, [r3, #77]	; 0x4d
   46f70:	cmp	r3, #0
   46f74:	beq	46f80 <__assert_fail@plt+0x34894>
   46f78:	mov	r3, #2
   46f7c:	b	46f8c <__assert_fail@plt+0x348a0>
   46f80:	mov	r3, #0
   46f84:	b	46f8c <__assert_fail@plt+0x348a0>
   46f88:	mov	r3, #1
   46f8c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   46f90:	str	r3, [r2, #60]	; 0x3c
   46f94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46f98:	ldr	r3, [r3, #28]
   46f9c:	cmp	r3, #0
   46fa0:	beq	47018 <__assert_fail@plt+0x3492c>
   46fa4:	mov	r3, #0
   46fa8:	str	r3, [fp, #-24]	; 0xffffffe8
   46fac:	b	46fd8 <__assert_fail@plt+0x348ec>
   46fb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46fb4:	ldr	r2, [r3, #8]
   46fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46fbc:	lsl	r3, r3, #2
   46fc0:	add	r3, r2, r3
   46fc4:	mvn	r2, #0
   46fc8:	str	r2, [r3]
   46fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   46fd0:	add	r3, r3, #1
   46fd4:	str	r3, [fp, #-24]	; 0xffffffe8
   46fd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46fdc:	ldr	r3, [r3, #28]
   46fe0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   46fe4:	cmp	r2, r3
   46fe8:	blt	46fb0 <__assert_fail@plt+0x348c4>
   46fec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   46ff0:	ldrb	r3, [r3, #75]	; 0x4b
   46ff4:	cmp	r3, #0
   46ff8:	beq	47018 <__assert_fail@plt+0x3492c>
   46ffc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47000:	ldr	r0, [r3, #4]
   47004:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47008:	ldr	r3, [r3, #28]
   4700c:	mov	r2, r3
   47010:	mov	r1, #255	; 0xff
   47014:	bl	12434 <memset@plt>
   47018:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4701c:	ldr	r2, [r3, #28]
   47020:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47024:	str	r2, [r3, #32]
   47028:	b	470e0 <__assert_fail@plt+0x349f4>
   4702c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47030:	ldr	r2, [r3]
   47034:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47038:	ldr	r1, [r3, #24]
   4703c:	ldr	r3, [fp, #-8]
   47040:	add	r3, r1, r3
   47044:	sub	r3, r3, #1
   47048:	add	r3, r2, r3
   4704c:	ldrb	r3, [r3]
   47050:	str	r3, [fp, #-44]	; 0xffffffd4
   47054:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47058:	mov	r2, #0
   4705c:	str	r2, [r3, #32]
   47060:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47064:	ldr	r3, [r3, #64]	; 0x40
   47068:	cmp	r3, #0
   4706c:	beq	47088 <__assert_fail@plt+0x3499c>
   47070:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47074:	ldr	r2, [r3, #64]	; 0x40
   47078:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4707c:	add	r3, r2, r3
   47080:	ldrb	r3, [r3]
   47084:	str	r3, [fp, #-44]	; 0xffffffd4
   47088:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4708c:	ldr	r3, [r3, #68]	; 0x44
   47090:	ldr	r1, [fp, #-44]	; 0xffffffd4
   47094:	mov	r0, r3
   47098:	bl	44974 <__assert_fail@plt+0x32288>
   4709c:	mov	r3, r0
   470a0:	cmp	r3, #0
   470a4:	bne	470d4 <__assert_fail@plt+0x349e8>
   470a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   470ac:	cmp	r3, #10
   470b0:	bne	470cc <__assert_fail@plt+0x349e0>
   470b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   470b8:	ldrb	r3, [r3, #77]	; 0x4d
   470bc:	cmp	r3, #0
   470c0:	beq	470cc <__assert_fail@plt+0x349e0>
   470c4:	mov	r3, #2
   470c8:	b	470d8 <__assert_fail@plt+0x349ec>
   470cc:	mov	r3, #0
   470d0:	b	470d8 <__assert_fail@plt+0x349ec>
   470d4:	mov	r3, #1
   470d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   470dc:	str	r3, [r2, #60]	; 0x3c
   470e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   470e4:	ldrb	r3, [r3, #75]	; 0x4b
   470e8:	cmp	r3, #0
   470ec:	bne	47108 <__assert_fail@plt+0x34a1c>
   470f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   470f4:	ldr	r2, [r3, #4]
   470f8:	ldr	r3, [fp, #-8]
   470fc:	add	r2, r2, r3
   47100:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47104:	str	r2, [r3, #4]
   47108:	ldr	r3, [fp, #-96]	; 0xffffffa0
   4710c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   47110:	str	r2, [r3, #24]
   47114:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47118:	ldr	r2, [r3, #48]	; 0x30
   4711c:	ldr	r3, [fp, #-8]
   47120:	sub	r2, r2, r3
   47124:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47128:	str	r2, [r3, #48]	; 0x30
   4712c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47130:	ldr	r2, [r3, #56]	; 0x38
   47134:	ldr	r3, [fp, #-8]
   47138:	sub	r2, r2, r3
   4713c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47140:	str	r2, [r3, #56]	; 0x38
   47144:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47148:	ldr	r3, [r3, #80]	; 0x50
   4714c:	cmp	r3, #1
   47150:	ble	471a0 <__assert_fail@plt+0x34ab4>
   47154:	ldr	r3, [fp, #-96]	; 0xffffffa0
   47158:	ldrb	r3, [r3, #72]	; 0x48
   4715c:	cmp	r3, #0
   47160:	beq	47194 <__assert_fail@plt+0x34aa8>
   47164:	ldr	r0, [fp, #-96]	; 0xffffffa0
   47168:	bl	456ec <__assert_fail@plt+0x33000>
   4716c:	str	r0, [fp, #-64]	; 0xffffffc0
   47170:	ldr	r3, [fp, #-64]	; 0xffffffc0
   47174:	cmp	r3, #0
   47178:	movne	r3, #1
   4717c:	moveq	r3, #0
   47180:	uxtb	r3, r3
   47184:	cmp	r3, #0
   47188:	beq	471f8 <__assert_fail@plt+0x34b0c>
   4718c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   47190:	b	47208 <__assert_fail@plt+0x34b1c>
   47194:	ldr	r0, [fp, #-96]	; 0xffffffa0
   47198:	bl	45368 <__assert_fail@plt+0x32c7c>
   4719c:	b	471f8 <__assert_fail@plt+0x34b0c>
   471a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   471a4:	ldrb	r3, [r3, #75]	; 0x4b
   471a8:	cmp	r3, #0
   471ac:	beq	471e8 <__assert_fail@plt+0x34afc>
   471b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   471b4:	ldrb	r3, [r3, #72]	; 0x48
   471b8:	cmp	r3, #0
   471bc:	beq	471cc <__assert_fail@plt+0x34ae0>
   471c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   471c4:	bl	463d8 <__assert_fail@plt+0x33cec>
   471c8:	b	471f8 <__assert_fail@plt+0x34b0c>
   471cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   471d0:	ldr	r3, [r3, #64]	; 0x40
   471d4:	cmp	r3, #0
   471d8:	beq	471f8 <__assert_fail@plt+0x34b0c>
   471dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   471e0:	bl	464e4 <__assert_fail@plt+0x33df8>
   471e4:	b	471f8 <__assert_fail@plt+0x34b0c>
   471e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   471ec:	ldr	r2, [r3, #48]	; 0x30
   471f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   471f4:	str	r2, [r3, #28]
   471f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   471fc:	mov	r2, #0
   47200:	str	r2, [r3, #40]	; 0x28
   47204:	mov	r3, #0
   47208:	mov	r0, r3
   4720c:	sub	sp, fp, #4
   47210:	ldr	fp, [sp]
   47214:	add	sp, sp, #4
   47218:	pop	{pc}		; (ldr pc, [sp], #4)
   4721c:	push	{fp}		; (str fp, [sp, #-4]!)
   47220:	add	fp, sp, #0
   47224:	sub	sp, sp, #20
   47228:	str	r0, [fp, #-16]
   4722c:	str	r1, [fp, #-20]	; 0xffffffec
   47230:	ldr	r3, [fp, #-16]
   47234:	ldrb	r3, [r3, #75]	; 0x4b
   47238:	cmp	r3, #0
   4723c:	moveq	r3, #1
   47240:	movne	r3, #0
   47244:	uxtb	r3, r3
   47248:	cmp	r3, #0
   4724c:	beq	47274 <__assert_fail@plt+0x34b88>
   47250:	ldr	r3, [fp, #-16]
   47254:	ldr	r3, [r3, #4]
   47258:	ldr	r2, [fp, #-16]
   4725c:	ldr	r1, [r2, #40]	; 0x28
   47260:	ldr	r2, [fp, #-20]	; 0xffffffec
   47264:	add	r2, r1, r2
   47268:	add	r3, r3, r2
   4726c:	ldrb	r3, [r3]
   47270:	b	473d8 <__assert_fail@plt+0x34cec>
   47274:	ldr	r3, [fp, #-16]
   47278:	ldr	r3, [r3, #80]	; 0x50
   4727c:	cmp	r3, #1
   47280:	ble	47328 <__assert_fail@plt+0x34c3c>
   47284:	ldr	r3, [fp, #-16]
   47288:	ldr	r2, [r3, #8]
   4728c:	ldr	r3, [fp, #-16]
   47290:	ldr	r1, [r3, #40]	; 0x28
   47294:	ldr	r3, [fp, #-20]	; 0xffffffec
   47298:	add	r3, r1, r3
   4729c:	lsl	r3, r3, #2
   472a0:	add	r3, r2, r3
   472a4:	ldr	r3, [r3]
   472a8:	cmn	r3, #1
   472ac:	beq	47304 <__assert_fail@plt+0x34c18>
   472b0:	ldr	r3, [fp, #-16]
   472b4:	ldr	r2, [r3, #28]
   472b8:	ldr	r3, [fp, #-16]
   472bc:	ldr	r1, [r3, #40]	; 0x28
   472c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   472c4:	add	r3, r1, r3
   472c8:	add	r3, r3, #1
   472cc:	cmp	r2, r3
   472d0:	beq	47328 <__assert_fail@plt+0x34c3c>
   472d4:	ldr	r3, [fp, #-16]
   472d8:	ldr	r2, [r3, #8]
   472dc:	ldr	r3, [fp, #-16]
   472e0:	ldr	r1, [r3, #40]	; 0x28
   472e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   472e8:	add	r3, r1, r3
   472ec:	add	r3, r3, #1
   472f0:	lsl	r3, r3, #2
   472f4:	add	r3, r2, r3
   472f8:	ldr	r3, [r3]
   472fc:	cmn	r3, #1
   47300:	bne	47328 <__assert_fail@plt+0x34c3c>
   47304:	ldr	r3, [fp, #-16]
   47308:	ldr	r3, [r3, #4]
   4730c:	ldr	r2, [fp, #-16]
   47310:	ldr	r1, [r2, #40]	; 0x28
   47314:	ldr	r2, [fp, #-20]	; 0xffffffec
   47318:	add	r2, r1, r2
   4731c:	add	r3, r3, r2
   47320:	ldrb	r3, [r3]
   47324:	b	473d8 <__assert_fail@plt+0x34cec>
   47328:	ldr	r3, [fp, #-16]
   4732c:	ldr	r3, [r3, #40]	; 0x28
   47330:	ldr	r2, [fp, #-20]	; 0xffffffec
   47334:	add	r3, r2, r3
   47338:	str	r3, [fp, #-8]
   4733c:	ldr	r3, [fp, #-16]
   47340:	ldrb	r3, [r3, #76]	; 0x4c
   47344:	cmp	r3, #0
   47348:	beq	47368 <__assert_fail@plt+0x34c7c>
   4734c:	ldr	r3, [fp, #-16]
   47350:	ldr	r2, [r3, #12]
   47354:	ldr	r3, [fp, #-8]
   47358:	lsl	r3, r3, #2
   4735c:	add	r3, r2, r3
   47360:	ldr	r3, [r3]
   47364:	str	r3, [fp, #-8]
   47368:	ldr	r3, [fp, #-16]
   4736c:	ldr	r3, [r3]
   47370:	ldr	r2, [fp, #-16]
   47374:	ldr	r1, [r2, #24]
   47378:	ldr	r2, [fp, #-8]
   4737c:	add	r2, r1, r2
   47380:	add	r3, r3, r2
   47384:	ldrb	r3, [r3]
   47388:	str	r3, [fp, #-12]
   4738c:	ldr	r3, [fp, #-16]
   47390:	ldrb	r3, [r3, #76]	; 0x4c
   47394:	cmp	r3, #0
   47398:	beq	473d0 <__assert_fail@plt+0x34ce4>
   4739c:	ldr	r3, [fp, #-12]
   473a0:	bic	r3, r3, #127	; 0x7f
   473a4:	cmp	r3, #0
   473a8:	beq	473d0 <__assert_fail@plt+0x34ce4>
   473ac:	ldr	r3, [fp, #-16]
   473b0:	ldr	r3, [r3, #4]
   473b4:	ldr	r2, [fp, #-16]
   473b8:	ldr	r1, [r2, #40]	; 0x28
   473bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   473c0:	add	r2, r1, r2
   473c4:	add	r3, r3, r2
   473c8:	ldrb	r3, [r3]
   473cc:	b	473d8 <__assert_fail@plt+0x34cec>
   473d0:	ldr	r3, [fp, #-12]
   473d4:	uxtb	r3, r3
   473d8:	mov	r0, r3
   473dc:	add	sp, fp, #0
   473e0:	pop	{fp}		; (ldr fp, [sp], #4)
   473e4:	bx	lr
   473e8:	str	r4, [sp, #-12]!
   473ec:	str	fp, [sp, #4]
   473f0:	str	lr, [sp, #8]
   473f4:	add	fp, sp, #8
   473f8:	sub	sp, sp, #20
   473fc:	str	r0, [fp, #-24]	; 0xffffffe8
   47400:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47404:	ldrb	r3, [r3, #75]	; 0x4b
   47408:	cmp	r3, #0
   4740c:	moveq	r3, #1
   47410:	movne	r3, #0
   47414:	uxtb	r3, r3
   47418:	cmp	r3, #0
   4741c:	beq	47448 <__assert_fail@plt+0x34d5c>
   47420:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47424:	ldr	r2, [r3, #4]
   47428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4742c:	ldr	r3, [r3, #40]	; 0x28
   47430:	add	r0, r3, #1
   47434:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47438:	str	r0, [r1, #40]	; 0x28
   4743c:	add	r3, r2, r3
   47440:	ldrb	r3, [r3]
   47444:	b	475a0 <__assert_fail@plt+0x34eb4>
   47448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4744c:	ldrb	r3, [r3, #76]	; 0x4c
   47450:	cmp	r3, #0
   47454:	beq	47570 <__assert_fail@plt+0x34e84>
   47458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4745c:	ldr	r2, [r3, #40]	; 0x28
   47460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47464:	ldr	r3, [r3, #28]
   47468:	cmp	r2, r3
   4746c:	beq	474bc <__assert_fail@plt+0x34dd0>
   47470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47474:	ldr	r2, [r3, #8]
   47478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4747c:	ldr	r3, [r3, #40]	; 0x28
   47480:	lsl	r3, r3, #2
   47484:	add	r3, r2, r3
   47488:	ldr	r3, [r3]
   4748c:	cmn	r3, #1
   47490:	bne	474bc <__assert_fail@plt+0x34dd0>
   47494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47498:	ldr	r2, [r3, #4]
   4749c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   474a0:	ldr	r3, [r3, #40]	; 0x28
   474a4:	add	r0, r3, #1
   474a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   474ac:	str	r0, [r1, #40]	; 0x28
   474b0:	add	r3, r2, r3
   474b4:	ldrb	r3, [r3]
   474b8:	b	475a0 <__assert_fail@plt+0x34eb4>
   474bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   474c0:	ldr	r2, [r3, #12]
   474c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   474c8:	ldr	r3, [r3, #40]	; 0x28
   474cc:	lsl	r3, r3, #2
   474d0:	add	r3, r2, r3
   474d4:	ldr	r3, [r3]
   474d8:	str	r3, [fp, #-16]
   474dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   474e0:	ldr	r3, [r3]
   474e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   474e8:	ldr	r1, [r2, #24]
   474ec:	ldr	r2, [fp, #-16]
   474f0:	add	r2, r1, r2
   474f4:	add	r3, r3, r2
   474f8:	ldrb	r3, [r3]
   474fc:	str	r3, [fp, #-20]	; 0xffffffec
   47500:	ldr	r3, [fp, #-20]	; 0xffffffec
   47504:	bic	r3, r3, #127	; 0x7f
   47508:	cmp	r3, #0
   4750c:	beq	47538 <__assert_fail@plt+0x34e4c>
   47510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47514:	ldr	r2, [r3, #4]
   47518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4751c:	ldr	r3, [r3, #40]	; 0x28
   47520:	add	r0, r3, #1
   47524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47528:	str	r0, [r1, #40]	; 0x28
   4752c:	add	r3, r2, r3
   47530:	ldrb	r3, [r3]
   47534:	b	475a0 <__assert_fail@plt+0x34eb4>
   47538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4753c:	ldr	r4, [r3, #40]	; 0x28
   47540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47544:	ldr	r3, [r3, #40]	; 0x28
   47548:	mov	r1, r3
   4754c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47550:	bl	44c18 <__assert_fail@plt+0x3252c>
   47554:	mov	r3, r0
   47558:	add	r2, r4, r3
   4755c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47560:	str	r2, [r3, #40]	; 0x28
   47564:	ldr	r3, [fp, #-20]	; 0xffffffec
   47568:	uxtb	r3, r3
   4756c:	b	475a0 <__assert_fail@plt+0x34eb4>
   47570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47574:	ldr	r2, [r3]
   47578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4757c:	ldr	r1, [r3, #24]
   47580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47584:	ldr	r3, [r3, #40]	; 0x28
   47588:	add	ip, r3, #1
   4758c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   47590:	str	ip, [r0, #40]	; 0x28
   47594:	add	r3, r1, r3
   47598:	add	r3, r2, r3
   4759c:	ldrb	r3, [r3]
   475a0:	mov	r0, r3
   475a4:	sub	sp, fp, #8
   475a8:	ldr	r4, [sp]
   475ac:	ldr	fp, [sp, #4]
   475b0:	add	sp, sp, #8
   475b4:	pop	{pc}		; (ldr pc, [sp], #4)
   475b8:	str	fp, [sp, #-8]!
   475bc:	str	lr, [sp, #4]
   475c0:	add	fp, sp, #4
   475c4:	sub	sp, sp, #8
   475c8:	str	r0, [fp, #-8]
   475cc:	ldr	r3, [fp, #-8]
   475d0:	ldr	r3, [r3, #8]
   475d4:	mov	r0, r3
   475d8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   475dc:	ldr	r3, [fp, #-8]
   475e0:	ldr	r3, [r3, #12]
   475e4:	mov	r0, r3
   475e8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   475ec:	ldr	r3, [fp, #-8]
   475f0:	ldrb	r3, [r3, #75]	; 0x4b
   475f4:	cmp	r3, #0
   475f8:	beq	4760c <__assert_fail@plt+0x34f20>
   475fc:	ldr	r3, [fp, #-8]
   47600:	ldr	r3, [r3, #4]
   47604:	mov	r0, r3
   47608:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4760c:	nop	{0}
   47610:	sub	sp, fp, #4
   47614:	ldr	fp, [sp]
   47618:	add	sp, sp, #4
   4761c:	pop	{pc}		; (ldr pc, [sp], #4)
   47620:	str	fp, [sp, #-8]!
   47624:	str	lr, [sp, #4]
   47628:	add	fp, sp, #4
   4762c:	sub	sp, sp, #32
   47630:	str	r0, [fp, #-24]	; 0xffffffe8
   47634:	str	r1, [fp, #-28]	; 0xffffffe4
   47638:	str	r2, [fp, #-32]	; 0xffffffe0
   4763c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47640:	lsr	r3, r3, #31
   47644:	uxtb	r3, r3
   47648:	cmp	r3, #0
   4764c:	beq	4765c <__assert_fail@plt+0x34f70>
   47650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47654:	ldr	r3, [r3, #60]	; 0x3c
   47658:	b	47800 <__assert_fail@plt+0x35114>
   4765c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47660:	ldr	r3, [r3, #48]	; 0x30
   47664:	ldr	r2, [fp, #-28]	; 0xffffffe4
   47668:	cmp	r2, r3
   4766c:	moveq	r3, #1
   47670:	movne	r3, #0
   47674:	uxtb	r3, r3
   47678:	cmp	r3, #0
   4767c:	beq	476a0 <__assert_fail@plt+0x34fb4>
   47680:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47684:	and	r3, r3, #2
   47688:	cmp	r3, #0
   4768c:	beq	47698 <__assert_fail@plt+0x34fac>
   47690:	mov	r3, #8
   47694:	b	47800 <__assert_fail@plt+0x35114>
   47698:	mov	r3, #10
   4769c:	b	47800 <__assert_fail@plt+0x35114>
   476a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   476a4:	ldr	r3, [r3, #80]	; 0x50
   476a8:	cmp	r3, #1
   476ac:	ble	47798 <__assert_fail@plt+0x350ac>
   476b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   476b4:	str	r3, [fp, #-8]
   476b8:	b	476e8 <__assert_fail@plt+0x34ffc>
   476bc:	ldr	r3, [fp, #-8]
   476c0:	cmp	r3, #0
   476c4:	ldr	r3, [fp, #-8]
   476c8:	sub	r3, r3, #1
   476cc:	str	r3, [fp, #-8]
   476d0:	ldr	r3, [fp, #-8]
   476d4:	cmp	r3, #0
   476d8:	bge	476e8 <__assert_fail@plt+0x34ffc>
   476dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   476e0:	ldr	r3, [r3, #60]	; 0x3c
   476e4:	b	47800 <__assert_fail@plt+0x35114>
   476e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   476ec:	ldr	r2, [r3, #8]
   476f0:	ldr	r3, [fp, #-8]
   476f4:	lsl	r3, r3, #2
   476f8:	add	r3, r2, r3
   476fc:	ldr	r3, [r3]
   47700:	cmn	r3, #1
   47704:	beq	476bc <__assert_fail@plt+0x34fd0>
   47708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4770c:	ldr	r2, [r3, #8]
   47710:	ldr	r3, [fp, #-8]
   47714:	lsl	r3, r3, #2
   47718:	add	r3, r2, r3
   4771c:	ldr	r3, [r3]
   47720:	str	r3, [fp, #-12]
   47724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47728:	ldrb	r3, [r3, #78]	; 0x4e
   4772c:	cmp	r3, #0
   47730:	movne	r3, #1
   47734:	moveq	r3, #0
   47738:	uxtb	r3, r3
   4773c:	cmp	r3, #0
   47740:	beq	4776c <__assert_fail@plt+0x35080>
   47744:	ldr	r0, [fp, #-12]
   47748:	bl	12410 <iswalnum@plt>
   4774c:	mov	r3, r0
   47750:	cmp	r3, #0
   47754:	bne	47764 <__assert_fail@plt+0x35078>
   47758:	ldr	r3, [fp, #-12]
   4775c:	cmp	r3, #95	; 0x5f
   47760:	bne	4776c <__assert_fail@plt+0x35080>
   47764:	mov	r3, #1
   47768:	b	47800 <__assert_fail@plt+0x35114>
   4776c:	ldr	r3, [fp, #-12]
   47770:	cmp	r3, #10
   47774:	bne	47790 <__assert_fail@plt+0x350a4>
   47778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4777c:	ldrb	r3, [r3, #77]	; 0x4d
   47780:	cmp	r3, #0
   47784:	beq	47790 <__assert_fail@plt+0x350a4>
   47788:	mov	r3, #2
   4778c:	b	47800 <__assert_fail@plt+0x35114>
   47790:	mov	r3, #0
   47794:	b	47800 <__assert_fail@plt+0x35114>
   47798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4779c:	ldr	r2, [r3, #4]
   477a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   477a4:	add	r3, r2, r3
   477a8:	ldrb	r3, [r3]
   477ac:	str	r3, [fp, #-16]
   477b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   477b4:	ldr	r3, [r3, #68]	; 0x44
   477b8:	ldr	r1, [fp, #-16]
   477bc:	mov	r0, r3
   477c0:	bl	44974 <__assert_fail@plt+0x32288>
   477c4:	mov	r3, r0
   477c8:	cmp	r3, #0
   477cc:	beq	477d8 <__assert_fail@plt+0x350ec>
   477d0:	mov	r3, #1
   477d4:	b	47800 <__assert_fail@plt+0x35114>
   477d8:	ldr	r3, [fp, #-16]
   477dc:	cmp	r3, #10
   477e0:	bne	477fc <__assert_fail@plt+0x35110>
   477e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   477e8:	ldrb	r3, [r3, #77]	; 0x4d
   477ec:	cmp	r3, #0
   477f0:	beq	477fc <__assert_fail@plt+0x35110>
   477f4:	mov	r3, #2
   477f8:	b	47800 <__assert_fail@plt+0x35114>
   477fc:	mov	r3, #0
   47800:	mov	r0, r3
   47804:	sub	sp, fp, #4
   47808:	ldr	fp, [sp]
   4780c:	add	sp, sp, #4
   47810:	pop	{pc}		; (ldr pc, [sp], #4)
   47814:	str	fp, [sp, #-8]!
   47818:	str	lr, [sp, #4]
   4781c:	add	fp, sp, #4
   47820:	sub	sp, sp, #8
   47824:	str	r0, [fp, #-8]
   47828:	str	r1, [fp, #-12]
   4782c:	ldr	r3, [fp, #-8]
   47830:	ldr	r2, [fp, #-12]
   47834:	str	r2, [r3]
   47838:	ldr	r3, [fp, #-8]
   4783c:	mov	r2, #0
   47840:	str	r2, [r3, #4]
   47844:	ldr	r3, [fp, #-12]
   47848:	lsl	r3, r3, #2
   4784c:	mov	r0, r3
   47850:	bl	43510 <__assert_fail@plt+0x30e24>
   47854:	mov	r3, r0
   47858:	mov	r2, r3
   4785c:	ldr	r3, [fp, #-8]
   47860:	str	r2, [r3, #8]
   47864:	ldr	r3, [fp, #-8]
   47868:	ldr	r3, [r3, #8]
   4786c:	cmp	r3, #0
   47870:	moveq	r3, #1
   47874:	movne	r3, #0
   47878:	uxtb	r3, r3
   4787c:	cmp	r3, #0
   47880:	beq	4788c <__assert_fail@plt+0x351a0>
   47884:	mov	r3, #12
   47888:	b	47890 <__assert_fail@plt+0x351a4>
   4788c:	mov	r3, #0
   47890:	mov	r0, r3
   47894:	sub	sp, fp, #4
   47898:	ldr	fp, [sp]
   4789c:	add	sp, sp, #4
   478a0:	pop	{pc}		; (ldr pc, [sp], #4)
   478a4:	str	fp, [sp, #-8]!
   478a8:	str	lr, [sp, #4]
   478ac:	add	fp, sp, #4
   478b0:	sub	sp, sp, #8
   478b4:	str	r0, [fp, #-8]
   478b8:	str	r1, [fp, #-12]
   478bc:	ldr	r3, [fp, #-8]
   478c0:	mov	r2, #1
   478c4:	str	r2, [r3]
   478c8:	ldr	r3, [fp, #-8]
   478cc:	mov	r2, #1
   478d0:	str	r2, [r3, #4]
   478d4:	mov	r0, #4
   478d8:	bl	43510 <__assert_fail@plt+0x30e24>
   478dc:	mov	r3, r0
   478e0:	mov	r2, r3
   478e4:	ldr	r3, [fp, #-8]
   478e8:	str	r2, [r3, #8]
   478ec:	ldr	r3, [fp, #-8]
   478f0:	ldr	r3, [r3, #8]
   478f4:	cmp	r3, #0
   478f8:	moveq	r3, #1
   478fc:	movne	r3, #0
   47900:	uxtb	r3, r3
   47904:	cmp	r3, #0
   47908:	beq	47930 <__assert_fail@plt+0x35244>
   4790c:	ldr	r3, [fp, #-8]
   47910:	mov	r2, #0
   47914:	str	r2, [r3, #4]
   47918:	ldr	r3, [fp, #-8]
   4791c:	ldr	r2, [r3, #4]
   47920:	ldr	r3, [fp, #-8]
   47924:	str	r2, [r3]
   47928:	mov	r3, #12
   4792c:	b	47944 <__assert_fail@plt+0x35258>
   47930:	ldr	r3, [fp, #-8]
   47934:	ldr	r3, [r3, #8]
   47938:	ldr	r2, [fp, #-12]
   4793c:	str	r2, [r3]
   47940:	mov	r3, #0
   47944:	mov	r0, r3
   47948:	sub	sp, fp, #4
   4794c:	ldr	fp, [sp]
   47950:	add	sp, sp, #4
   47954:	pop	{pc}		; (ldr pc, [sp], #4)
   47958:	str	fp, [sp, #-8]!
   4795c:	str	lr, [sp, #4]
   47960:	add	fp, sp, #4
   47964:	sub	sp, sp, #16
   47968:	str	r0, [fp, #-8]
   4796c:	str	r1, [fp, #-12]
   47970:	str	r2, [fp, #-16]
   47974:	ldr	r3, [fp, #-8]
   47978:	mov	r2, #2
   4797c:	str	r2, [r3]
   47980:	mov	r0, #8
   47984:	bl	43510 <__assert_fail@plt+0x30e24>
   47988:	mov	r3, r0
   4798c:	mov	r2, r3
   47990:	ldr	r3, [fp, #-8]
   47994:	str	r2, [r3, #8]
   47998:	ldr	r3, [fp, #-8]
   4799c:	ldr	r3, [r3, #8]
   479a0:	cmp	r3, #0
   479a4:	moveq	r3, #1
   479a8:	movne	r3, #0
   479ac:	uxtb	r3, r3
   479b0:	cmp	r3, #0
   479b4:	beq	479c0 <__assert_fail@plt+0x352d4>
   479b8:	mov	r3, #12
   479bc:	b	47a5c <__assert_fail@plt+0x35370>
   479c0:	ldr	r2, [fp, #-12]
   479c4:	ldr	r3, [fp, #-16]
   479c8:	cmp	r2, r3
   479cc:	bne	479f0 <__assert_fail@plt+0x35304>
   479d0:	ldr	r3, [fp, #-8]
   479d4:	mov	r2, #1
   479d8:	str	r2, [r3, #4]
   479dc:	ldr	r3, [fp, #-8]
   479e0:	ldr	r3, [r3, #8]
   479e4:	ldr	r2, [fp, #-12]
   479e8:	str	r2, [r3]
   479ec:	b	47a58 <__assert_fail@plt+0x3536c>
   479f0:	ldr	r3, [fp, #-8]
   479f4:	mov	r2, #2
   479f8:	str	r2, [r3, #4]
   479fc:	ldr	r2, [fp, #-12]
   47a00:	ldr	r3, [fp, #-16]
   47a04:	cmp	r2, r3
   47a08:	bge	47a34 <__assert_fail@plt+0x35348>
   47a0c:	ldr	r3, [fp, #-8]
   47a10:	ldr	r3, [r3, #8]
   47a14:	ldr	r2, [fp, #-12]
   47a18:	str	r2, [r3]
   47a1c:	ldr	r3, [fp, #-8]
   47a20:	ldr	r3, [r3, #8]
   47a24:	add	r3, r3, #4
   47a28:	ldr	r2, [fp, #-16]
   47a2c:	str	r2, [r3]
   47a30:	b	47a58 <__assert_fail@plt+0x3536c>
   47a34:	ldr	r3, [fp, #-8]
   47a38:	ldr	r3, [r3, #8]
   47a3c:	ldr	r2, [fp, #-16]
   47a40:	str	r2, [r3]
   47a44:	ldr	r3, [fp, #-8]
   47a48:	ldr	r3, [r3, #8]
   47a4c:	add	r3, r3, #4
   47a50:	ldr	r2, [fp, #-12]
   47a54:	str	r2, [r3]
   47a58:	mov	r3, #0
   47a5c:	mov	r0, r3
   47a60:	sub	sp, fp, #4
   47a64:	ldr	fp, [sp]
   47a68:	add	sp, sp, #4
   47a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   47a70:	str	fp, [sp, #-8]!
   47a74:	str	lr, [sp, #4]
   47a78:	add	fp, sp, #4
   47a7c:	sub	sp, sp, #8
   47a80:	str	r0, [fp, #-8]
   47a84:	str	r1, [fp, #-12]
   47a88:	ldr	r3, [fp, #-12]
   47a8c:	ldr	r2, [r3, #4]
   47a90:	ldr	r3, [fp, #-8]
   47a94:	str	r2, [r3, #4]
   47a98:	ldr	r3, [fp, #-12]
   47a9c:	ldr	r3, [r3, #4]
   47aa0:	cmp	r3, #0
   47aa4:	ble	47b48 <__assert_fail@plt+0x3545c>
   47aa8:	ldr	r3, [fp, #-8]
   47aac:	ldr	r2, [r3, #4]
   47ab0:	ldr	r3, [fp, #-8]
   47ab4:	str	r2, [r3]
   47ab8:	ldr	r3, [fp, #-8]
   47abc:	ldr	r3, [r3]
   47ac0:	lsl	r3, r3, #2
   47ac4:	mov	r0, r3
   47ac8:	bl	43510 <__assert_fail@plt+0x30e24>
   47acc:	mov	r3, r0
   47ad0:	mov	r2, r3
   47ad4:	ldr	r3, [fp, #-8]
   47ad8:	str	r2, [r3, #8]
   47adc:	ldr	r3, [fp, #-8]
   47ae0:	ldr	r3, [r3, #8]
   47ae4:	cmp	r3, #0
   47ae8:	moveq	r3, #1
   47aec:	movne	r3, #0
   47af0:	uxtb	r3, r3
   47af4:	cmp	r3, #0
   47af8:	beq	47b20 <__assert_fail@plt+0x35434>
   47afc:	ldr	r3, [fp, #-8]
   47b00:	mov	r2, #0
   47b04:	str	r2, [r3, #4]
   47b08:	ldr	r3, [fp, #-8]
   47b0c:	ldr	r2, [r3, #4]
   47b10:	ldr	r3, [fp, #-8]
   47b14:	str	r2, [r3]
   47b18:	mov	r3, #12
   47b1c:	b	47b5c <__assert_fail@plt+0x35470>
   47b20:	ldr	r3, [fp, #-8]
   47b24:	ldr	r0, [r3, #8]
   47b28:	ldr	r3, [fp, #-12]
   47b2c:	ldr	r1, [r3, #8]
   47b30:	ldr	r3, [fp, #-12]
   47b34:	ldr	r3, [r3, #4]
   47b38:	lsl	r3, r3, #2
   47b3c:	mov	r2, r3
   47b40:	bl	120f8 <memcpy@plt>
   47b44:	b	47b58 <__assert_fail@plt+0x3546c>
   47b48:	mov	r2, #12
   47b4c:	mov	r1, #0
   47b50:	ldr	r0, [fp, #-8]
   47b54:	bl	12434 <memset@plt>
   47b58:	mov	r3, #0
   47b5c:	mov	r0, r3
   47b60:	sub	sp, fp, #4
   47b64:	ldr	fp, [sp]
   47b68:	add	sp, sp, #4
   47b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   47b70:	str	fp, [sp, #-8]!
   47b74:	str	lr, [sp, #4]
   47b78:	add	fp, sp, #4
   47b7c:	sub	sp, sp, #48	; 0x30
   47b80:	str	r0, [fp, #-40]	; 0xffffffd8
   47b84:	str	r1, [fp, #-44]	; 0xffffffd4
   47b88:	str	r2, [fp, #-48]	; 0xffffffd0
   47b8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47b90:	ldr	r3, [r3, #4]
   47b94:	cmp	r3, #0
   47b98:	beq	47bac <__assert_fail@plt+0x354c0>
   47b9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47ba0:	ldr	r3, [r3, #4]
   47ba4:	cmp	r3, #0
   47ba8:	bne	47bb4 <__assert_fail@plt+0x354c8>
   47bac:	mov	r3, #0
   47bb0:	b	48000 <__assert_fail@plt+0x35914>
   47bb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47bb8:	ldr	r2, [r3, #4]
   47bbc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47bc0:	ldr	r3, [r3, #4]
   47bc4:	add	r2, r2, r3
   47bc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47bcc:	ldr	r3, [r3, #4]
   47bd0:	add	r2, r2, r3
   47bd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47bd8:	ldr	r3, [r3]
   47bdc:	cmp	r2, r3
   47be0:	ble	47c64 <__assert_fail@plt+0x35578>
   47be4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47be8:	ldr	r2, [r3, #4]
   47bec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47bf0:	ldr	r3, [r3, #4]
   47bf4:	add	r2, r2, r3
   47bf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47bfc:	ldr	r3, [r3]
   47c00:	add	r3, r2, r3
   47c04:	str	r3, [fp, #-32]	; 0xffffffe0
   47c08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47c0c:	ldr	r2, [r3, #8]
   47c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   47c14:	lsl	r3, r3, #2
   47c18:	mov	r1, r3
   47c1c:	mov	r0, r2
   47c20:	bl	446e8 <__assert_fail@plt+0x31ffc>
   47c24:	str	r0, [fp, #-36]	; 0xffffffdc
   47c28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   47c2c:	cmp	r3, #0
   47c30:	moveq	r3, #1
   47c34:	movne	r3, #0
   47c38:	uxtb	r3, r3
   47c3c:	cmp	r3, #0
   47c40:	beq	47c4c <__assert_fail@plt+0x35560>
   47c44:	mov	r3, #12
   47c48:	b	48000 <__assert_fail@plt+0x35914>
   47c4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47c50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   47c54:	str	r2, [r3, #8]
   47c58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47c5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   47c60:	str	r2, [r3]
   47c64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47c68:	ldr	r2, [r3, #4]
   47c6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47c70:	ldr	r3, [r3, #4]
   47c74:	add	r2, r2, r3
   47c78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47c7c:	ldr	r3, [r3, #4]
   47c80:	add	r3, r2, r3
   47c84:	str	r3, [fp, #-28]	; 0xffffffe4
   47c88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47c8c:	ldr	r3, [r3, #4]
   47c90:	sub	r3, r3, #1
   47c94:	str	r3, [fp, #-8]
   47c98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47c9c:	ldr	r3, [r3, #4]
   47ca0:	sub	r3, r3, #1
   47ca4:	str	r3, [fp, #-12]
   47ca8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47cac:	ldr	r3, [r3, #4]
   47cb0:	sub	r3, r3, #1
   47cb4:	str	r3, [fp, #-20]	; 0xffffffec
   47cb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47cbc:	ldr	r2, [r3, #8]
   47cc0:	ldr	r3, [fp, #-8]
   47cc4:	lsl	r3, r3, #2
   47cc8:	add	r3, r2, r3
   47ccc:	ldr	r2, [r3]
   47cd0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47cd4:	ldr	r1, [r3, #8]
   47cd8:	ldr	r3, [fp, #-12]
   47cdc:	lsl	r3, r3, #2
   47ce0:	add	r3, r1, r3
   47ce4:	ldr	r3, [r3]
   47ce8:	cmp	r2, r3
   47cec:	bne	47df8 <__assert_fail@plt+0x3570c>
   47cf0:	b	47d00 <__assert_fail@plt+0x35614>
   47cf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   47cf8:	sub	r3, r3, #1
   47cfc:	str	r3, [fp, #-20]	; 0xffffffec
   47d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   47d04:	cmp	r3, #0
   47d08:	blt	47d44 <__assert_fail@plt+0x35658>
   47d0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47d10:	ldr	r2, [r3, #8]
   47d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   47d18:	lsl	r3, r3, #2
   47d1c:	add	r3, r2, r3
   47d20:	ldr	r2, [r3]
   47d24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47d28:	ldr	r1, [r3, #8]
   47d2c:	ldr	r3, [fp, #-8]
   47d30:	lsl	r3, r3, #2
   47d34:	add	r3, r1, r3
   47d38:	ldr	r3, [r3]
   47d3c:	cmp	r2, r3
   47d40:	bgt	47cf4 <__assert_fail@plt+0x35608>
   47d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   47d48:	cmp	r3, #0
   47d4c:	blt	47d88 <__assert_fail@plt+0x3569c>
   47d50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47d54:	ldr	r2, [r3, #8]
   47d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   47d5c:	lsl	r3, r3, #2
   47d60:	add	r3, r2, r3
   47d64:	ldr	r2, [r3]
   47d68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47d6c:	ldr	r1, [r3, #8]
   47d70:	ldr	r3, [fp, #-8]
   47d74:	lsl	r3, r3, #2
   47d78:	add	r3, r1, r3
   47d7c:	ldr	r3, [r3]
   47d80:	cmp	r2, r3
   47d84:	beq	47dc4 <__assert_fail@plt+0x356d8>
   47d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47d8c:	ldr	r2, [r3, #8]
   47d90:	ldr	r3, [fp, #-8]
   47d94:	lsl	r3, r3, #2
   47d98:	add	r2, r2, r3
   47d9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47da0:	ldr	r1, [r3, #8]
   47da4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47da8:	sub	r3, r3, #1
   47dac:	str	r3, [fp, #-28]	; 0xffffffe4
   47db0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47db4:	lsl	r3, r3, #2
   47db8:	add	r3, r1, r3
   47dbc:	ldr	r2, [r2]
   47dc0:	str	r2, [r3]
   47dc4:	ldr	r3, [fp, #-8]
   47dc8:	sub	r3, r3, #1
   47dcc:	str	r3, [fp, #-8]
   47dd0:	ldr	r3, [fp, #-8]
   47dd4:	cmp	r3, #0
   47dd8:	blt	47e6c <__assert_fail@plt+0x35780>
   47ddc:	ldr	r3, [fp, #-12]
   47de0:	sub	r3, r3, #1
   47de4:	str	r3, [fp, #-12]
   47de8:	ldr	r3, [fp, #-12]
   47dec:	cmp	r3, #0
   47df0:	blt	47e6c <__assert_fail@plt+0x35780>
   47df4:	b	47cb8 <__assert_fail@plt+0x355cc>
   47df8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47dfc:	ldr	r2, [r3, #8]
   47e00:	ldr	r3, [fp, #-8]
   47e04:	lsl	r3, r3, #2
   47e08:	add	r3, r2, r3
   47e0c:	ldr	r2, [r3]
   47e10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47e14:	ldr	r1, [r3, #8]
   47e18:	ldr	r3, [fp, #-12]
   47e1c:	lsl	r3, r3, #2
   47e20:	add	r3, r1, r3
   47e24:	ldr	r3, [r3]
   47e28:	cmp	r2, r3
   47e2c:	bge	47e4c <__assert_fail@plt+0x35760>
   47e30:	ldr	r3, [fp, #-12]
   47e34:	sub	r3, r3, #1
   47e38:	str	r3, [fp, #-12]
   47e3c:	ldr	r3, [fp, #-12]
   47e40:	cmp	r3, #0
   47e44:	bge	47cb8 <__assert_fail@plt+0x355cc>
   47e48:	b	47e6c <__assert_fail@plt+0x35780>
   47e4c:	ldr	r3, [fp, #-8]
   47e50:	sub	r3, r3, #1
   47e54:	str	r3, [fp, #-8]
   47e58:	ldr	r3, [fp, #-8]
   47e5c:	cmp	r3, #0
   47e60:	blt	47e68 <__assert_fail@plt+0x3577c>
   47e64:	b	47cb8 <__assert_fail@plt+0x355cc>
   47e68:	nop	{0}
   47e6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47e70:	ldr	r3, [r3, #4]
   47e74:	sub	r3, r3, #1
   47e78:	str	r3, [fp, #-20]	; 0xffffffec
   47e7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47e80:	ldr	r2, [r3, #4]
   47e84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   47e88:	ldr	r3, [r3, #4]
   47e8c:	add	r2, r2, r3
   47e90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   47e94:	ldr	r3, [r3, #4]
   47e98:	add	r3, r2, r3
   47e9c:	sub	r3, r3, #1
   47ea0:	str	r3, [fp, #-16]
   47ea4:	ldr	r2, [fp, #-16]
   47ea8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47eac:	sub	r3, r2, r3
   47eb0:	add	r3, r3, #1
   47eb4:	str	r3, [fp, #-24]	; 0xffffffe8
   47eb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47ebc:	ldr	r2, [r3, #4]
   47ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47ec4:	add	r2, r2, r3
   47ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47ecc:	str	r2, [r3, #4]
   47ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47ed4:	cmp	r3, #0
   47ed8:	ble	47fd0 <__assert_fail@plt+0x358e4>
   47edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   47ee0:	cmp	r3, #0
   47ee4:	blt	47fd0 <__assert_fail@plt+0x358e4>
   47ee8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47eec:	ldr	r2, [r3, #8]
   47ef0:	ldr	r3, [fp, #-16]
   47ef4:	lsl	r3, r3, #2
   47ef8:	add	r3, r2, r3
   47efc:	ldr	r2, [r3]
   47f00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47f04:	ldr	r1, [r3, #8]
   47f08:	ldr	r3, [fp, #-20]	; 0xffffffec
   47f0c:	lsl	r3, r3, #2
   47f10:	add	r3, r1, r3
   47f14:	ldr	r3, [r3]
   47f18:	cmp	r2, r3
   47f1c:	ble	47f78 <__assert_fail@plt+0x3588c>
   47f20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47f24:	ldr	r2, [r3, #8]
   47f28:	ldr	r3, [fp, #-16]
   47f2c:	sub	r1, r3, #1
   47f30:	str	r1, [fp, #-16]
   47f34:	lsl	r3, r3, #2
   47f38:	add	r2, r2, r3
   47f3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47f40:	ldr	r1, [r3, #8]
   47f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47f48:	sub	r0, r3, #1
   47f4c:	str	r0, [fp, #-24]	; 0xffffffe8
   47f50:	ldr	r0, [fp, #-20]	; 0xffffffec
   47f54:	add	r3, r3, r0
   47f58:	lsl	r3, r3, #2
   47f5c:	add	r3, r1, r3
   47f60:	ldr	r2, [r2]
   47f64:	str	r2, [r3]
   47f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47f6c:	cmp	r3, #0
   47f70:	bne	47ee8 <__assert_fail@plt+0x357fc>
   47f74:	b	47fd0 <__assert_fail@plt+0x358e4>
   47f78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47f7c:	ldr	r2, [r3, #8]
   47f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   47f84:	lsl	r3, r3, #2
   47f88:	add	r2, r2, r3
   47f8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47f90:	ldr	r1, [r3, #8]
   47f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   47f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47f9c:	add	r3, r0, r3
   47fa0:	lsl	r3, r3, #2
   47fa4:	add	r3, r1, r3
   47fa8:	ldr	r2, [r2]
   47fac:	str	r2, [r3]
   47fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   47fb4:	sub	r3, r3, #1
   47fb8:	str	r3, [fp, #-20]	; 0xffffffec
   47fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   47fc0:	cmp	r3, #0
   47fc4:	blt	47fcc <__assert_fail@plt+0x358e0>
   47fc8:	b	47ee8 <__assert_fail@plt+0x357fc>
   47fcc:	nop	{0}
   47fd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47fd4:	ldr	r0, [r3, #8]
   47fd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   47fdc:	ldr	r2, [r3, #8]
   47fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47fe4:	lsl	r3, r3, #2
   47fe8:	add	r1, r2, r3
   47fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   47ff0:	lsl	r3, r3, #2
   47ff4:	mov	r2, r3
   47ff8:	bl	120f8 <memcpy@plt>
   47ffc:	mov	r3, #0
   48000:	mov	r0, r3
   48004:	sub	sp, fp, #4
   48008:	ldr	fp, [sp]
   4800c:	add	sp, sp, #4
   48010:	pop	{pc}		; (ldr pc, [sp], #4)
   48014:	str	fp, [sp, #-8]!
   48018:	str	lr, [sp, #4]
   4801c:	add	fp, sp, #4
   48020:	sub	sp, sp, #32
   48024:	str	r0, [fp, #-24]	; 0xffffffe8
   48028:	str	r1, [fp, #-28]	; 0xffffffe4
   4802c:	str	r2, [fp, #-32]	; 0xffffffe0
   48030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48034:	cmp	r3, #0
   48038:	beq	480d0 <__assert_fail@plt+0x359e4>
   4803c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48040:	ldr	r3, [r3, #4]
   48044:	cmp	r3, #0
   48048:	ble	480d0 <__assert_fail@plt+0x359e4>
   4804c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48050:	cmp	r3, #0
   48054:	beq	480d0 <__assert_fail@plt+0x359e4>
   48058:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4805c:	ldr	r3, [r3, #4]
   48060:	cmp	r3, #0
   48064:	ble	480d0 <__assert_fail@plt+0x359e4>
   48068:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4806c:	ldr	r2, [r3, #4]
   48070:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48074:	ldr	r3, [r3, #4]
   48078:	add	r2, r2, r3
   4807c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48080:	str	r2, [r3]
   48084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48088:	ldr	r3, [r3]
   4808c:	lsl	r3, r3, #2
   48090:	mov	r0, r3
   48094:	bl	43510 <__assert_fail@plt+0x30e24>
   48098:	mov	r3, r0
   4809c:	mov	r2, r3
   480a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   480a4:	str	r2, [r3, #8]
   480a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   480ac:	ldr	r3, [r3, #8]
   480b0:	cmp	r3, #0
   480b4:	moveq	r3, #1
   480b8:	movne	r3, #0
   480bc:	uxtb	r3, r3
   480c0:	cmp	r3, #0
   480c4:	beq	48148 <__assert_fail@plt+0x35a5c>
   480c8:	mov	r3, #12
   480cc:	b	48388 <__assert_fail@plt+0x35c9c>
   480d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   480d4:	cmp	r3, #0
   480d8:	beq	48100 <__assert_fail@plt+0x35a14>
   480dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   480e0:	ldr	r3, [r3, #4]
   480e4:	cmp	r3, #0
   480e8:	ble	48100 <__assert_fail@plt+0x35a14>
   480ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   480f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   480f4:	bl	47a70 <__assert_fail@plt+0x35384>
   480f8:	mov	r3, r0
   480fc:	b	48388 <__assert_fail@plt+0x35c9c>
   48100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48104:	cmp	r3, #0
   48108:	beq	48130 <__assert_fail@plt+0x35a44>
   4810c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48110:	ldr	r3, [r3, #4]
   48114:	cmp	r3, #0
   48118:	ble	48130 <__assert_fail@plt+0x35a44>
   4811c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   48120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48124:	bl	47a70 <__assert_fail@plt+0x35384>
   48128:	mov	r3, r0
   4812c:	b	48388 <__assert_fail@plt+0x35c9c>
   48130:	mov	r2, #12
   48134:	mov	r1, #0
   48138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4813c:	bl	12434 <memset@plt>
   48140:	mov	r3, #0
   48144:	b	48388 <__assert_fail@plt+0x35c9c>
   48148:	mov	r3, #0
   4814c:	str	r3, [fp, #-16]
   48150:	ldr	r3, [fp, #-16]
   48154:	str	r3, [fp, #-12]
   48158:	ldr	r3, [fp, #-12]
   4815c:	str	r3, [fp, #-8]
   48160:	b	48264 <__assert_fail@plt+0x35b78>
   48164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48168:	ldr	r2, [r3, #8]
   4816c:	ldr	r3, [fp, #-8]
   48170:	lsl	r3, r3, #2
   48174:	add	r3, r2, r3
   48178:	ldr	r2, [r3]
   4817c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48180:	ldr	r1, [r3, #8]
   48184:	ldr	r3, [fp, #-12]
   48188:	lsl	r3, r3, #2
   4818c:	add	r3, r1, r3
   48190:	ldr	r3, [r3]
   48194:	cmp	r2, r3
   48198:	ble	481e0 <__assert_fail@plt+0x35af4>
   4819c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   481a0:	ldr	r2, [r3, #8]
   481a4:	ldr	r3, [fp, #-12]
   481a8:	add	r1, r3, #1
   481ac:	str	r1, [fp, #-12]
   481b0:	lsl	r3, r3, #2
   481b4:	add	r2, r2, r3
   481b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   481bc:	ldr	r1, [r3, #8]
   481c0:	ldr	r3, [fp, #-16]
   481c4:	add	r0, r3, #1
   481c8:	str	r0, [fp, #-16]
   481cc:	lsl	r3, r3, #2
   481d0:	add	r3, r1, r3
   481d4:	ldr	r2, [r2]
   481d8:	str	r2, [r3]
   481dc:	b	48264 <__assert_fail@plt+0x35b78>
   481e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   481e4:	ldr	r2, [r3, #8]
   481e8:	ldr	r3, [fp, #-8]
   481ec:	lsl	r3, r3, #2
   481f0:	add	r3, r2, r3
   481f4:	ldr	r2, [r3]
   481f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   481fc:	ldr	r1, [r3, #8]
   48200:	ldr	r3, [fp, #-12]
   48204:	lsl	r3, r3, #2
   48208:	add	r3, r1, r3
   4820c:	ldr	r3, [r3]
   48210:	cmp	r2, r3
   48214:	bne	48224 <__assert_fail@plt+0x35b38>
   48218:	ldr	r3, [fp, #-12]
   4821c:	add	r3, r3, #1
   48220:	str	r3, [fp, #-12]
   48224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48228:	ldr	r2, [r3, #8]
   4822c:	ldr	r3, [fp, #-8]
   48230:	add	r1, r3, #1
   48234:	str	r1, [fp, #-8]
   48238:	lsl	r3, r3, #2
   4823c:	add	r2, r2, r3
   48240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48244:	ldr	r1, [r3, #8]
   48248:	ldr	r3, [fp, #-16]
   4824c:	add	r0, r3, #1
   48250:	str	r0, [fp, #-16]
   48254:	lsl	r3, r3, #2
   48258:	add	r3, r1, r3
   4825c:	ldr	r2, [r2]
   48260:	str	r2, [r3]
   48264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48268:	ldr	r3, [r3, #4]
   4826c:	ldr	r2, [fp, #-8]
   48270:	cmp	r2, r3
   48274:	bge	4828c <__assert_fail@plt+0x35ba0>
   48278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4827c:	ldr	r3, [r3, #4]
   48280:	ldr	r2, [fp, #-12]
   48284:	cmp	r2, r3
   48288:	blt	48164 <__assert_fail@plt+0x35a78>
   4828c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48290:	ldr	r3, [r3, #4]
   48294:	ldr	r2, [fp, #-8]
   48298:	cmp	r2, r3
   4829c:	bge	48304 <__assert_fail@plt+0x35c18>
   482a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   482a4:	ldr	r2, [r3, #8]
   482a8:	ldr	r3, [fp, #-16]
   482ac:	lsl	r3, r3, #2
   482b0:	add	r0, r2, r3
   482b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   482b8:	ldr	r2, [r3, #8]
   482bc:	ldr	r3, [fp, #-8]
   482c0:	lsl	r3, r3, #2
   482c4:	add	r1, r2, r3
   482c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   482cc:	ldr	r2, [r3, #4]
   482d0:	ldr	r3, [fp, #-8]
   482d4:	sub	r3, r2, r3
   482d8:	lsl	r3, r3, #2
   482dc:	mov	r2, r3
   482e0:	bl	120f8 <memcpy@plt>
   482e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   482e8:	ldr	r2, [r3, #4]
   482ec:	ldr	r3, [fp, #-8]
   482f0:	sub	r3, r2, r3
   482f4:	ldr	r2, [fp, #-16]
   482f8:	add	r3, r2, r3
   482fc:	str	r3, [fp, #-16]
   48300:	b	48378 <__assert_fail@plt+0x35c8c>
   48304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48308:	ldr	r3, [r3, #4]
   4830c:	ldr	r2, [fp, #-12]
   48310:	cmp	r2, r3
   48314:	bge	48378 <__assert_fail@plt+0x35c8c>
   48318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4831c:	ldr	r2, [r3, #8]
   48320:	ldr	r3, [fp, #-16]
   48324:	lsl	r3, r3, #2
   48328:	add	r0, r2, r3
   4832c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48330:	ldr	r2, [r3, #8]
   48334:	ldr	r3, [fp, #-12]
   48338:	lsl	r3, r3, #2
   4833c:	add	r1, r2, r3
   48340:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48344:	ldr	r2, [r3, #4]
   48348:	ldr	r3, [fp, #-12]
   4834c:	sub	r3, r2, r3
   48350:	lsl	r3, r3, #2
   48354:	mov	r2, r3
   48358:	bl	120f8 <memcpy@plt>
   4835c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48360:	ldr	r2, [r3, #4]
   48364:	ldr	r3, [fp, #-12]
   48368:	sub	r3, r2, r3
   4836c:	ldr	r2, [fp, #-16]
   48370:	add	r3, r2, r3
   48374:	str	r3, [fp, #-16]
   48378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4837c:	ldr	r2, [fp, #-16]
   48380:	str	r2, [r3, #4]
   48384:	mov	r3, #0
   48388:	mov	r0, r3
   4838c:	sub	sp, fp, #4
   48390:	ldr	fp, [sp]
   48394:	add	sp, sp, #4
   48398:	pop	{pc}		; (ldr pc, [sp], #4)
   4839c:	str	fp, [sp, #-8]!
   483a0:	str	lr, [sp, #4]
   483a4:	add	fp, sp, #4
   483a8:	sub	sp, sp, #32
   483ac:	str	r0, [fp, #-32]	; 0xffffffe0
   483b0:	str	r1, [fp, #-36]	; 0xffffffdc
   483b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   483b8:	cmp	r3, #0
   483bc:	beq	483d0 <__assert_fail@plt+0x35ce4>
   483c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   483c4:	ldr	r3, [r3, #4]
   483c8:	cmp	r3, #0
   483cc:	bne	483d8 <__assert_fail@plt+0x35cec>
   483d0:	mov	r3, #0
   483d4:	b	487e8 <__assert_fail@plt+0x360fc>
   483d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   483dc:	ldr	r2, [r3]
   483e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   483e4:	ldr	r3, [r3, #4]
   483e8:	lsl	r1, r3, #1
   483ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   483f0:	ldr	r3, [r3, #4]
   483f4:	add	r3, r1, r3
   483f8:	cmp	r2, r3
   483fc:	bge	48478 <__assert_fail@plt+0x35d8c>
   48400:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48404:	ldr	r2, [r3, #4]
   48408:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4840c:	ldr	r3, [r3]
   48410:	add	r3, r2, r3
   48414:	lsl	r3, r3, #1
   48418:	str	r3, [fp, #-24]	; 0xffffffe8
   4841c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48420:	ldr	r2, [r3, #8]
   48424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48428:	lsl	r3, r3, #2
   4842c:	mov	r1, r3
   48430:	mov	r0, r2
   48434:	bl	446e8 <__assert_fail@plt+0x31ffc>
   48438:	str	r0, [fp, #-28]	; 0xffffffe4
   4843c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48440:	cmp	r3, #0
   48444:	moveq	r3, #1
   48448:	movne	r3, #0
   4844c:	uxtb	r3, r3
   48450:	cmp	r3, #0
   48454:	beq	48460 <__assert_fail@plt+0x35d74>
   48458:	mov	r3, #12
   4845c:	b	487e8 <__assert_fail@plt+0x360fc>
   48460:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48464:	ldr	r2, [fp, #-28]	; 0xffffffe4
   48468:	str	r2, [r3, #8]
   4846c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48470:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48474:	str	r2, [r3]
   48478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4847c:	ldr	r3, [r3, #4]
   48480:	cmp	r3, #0
   48484:	moveq	r3, #1
   48488:	movne	r3, #0
   4848c:	uxtb	r3, r3
   48490:	cmp	r3, #0
   48494:	beq	484e0 <__assert_fail@plt+0x35df4>
   48498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4849c:	ldr	r3, [r3, #8]
   484a0:	cmp	r3, #0
   484a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   484a8:	ldr	r2, [r3, #4]
   484ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   484b0:	str	r2, [r3, #4]
   484b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   484b8:	ldr	r0, [r3, #8]
   484bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   484c0:	ldr	r1, [r3, #8]
   484c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   484c8:	ldr	r3, [r3, #4]
   484cc:	lsl	r3, r3, #2
   484d0:	mov	r2, r3
   484d4:	bl	120f8 <memcpy@plt>
   484d8:	mov	r3, #0
   484dc:	b	487e8 <__assert_fail@plt+0x360fc>
   484e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   484e4:	ldr	r2, [r3, #4]
   484e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   484ec:	ldr	r3, [r3, #4]
   484f0:	lsl	r3, r3, #1
   484f4:	add	r3, r2, r3
   484f8:	str	r3, [fp, #-16]
   484fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48500:	ldr	r3, [r3, #4]
   48504:	sub	r3, r3, #1
   48508:	str	r3, [fp, #-8]
   4850c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48510:	ldr	r3, [r3, #4]
   48514:	sub	r3, r3, #1
   48518:	str	r3, [fp, #-12]
   4851c:	b	48600 <__assert_fail@plt+0x35f14>
   48520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48524:	ldr	r2, [r3, #8]
   48528:	ldr	r3, [fp, #-12]
   4852c:	lsl	r3, r3, #2
   48530:	add	r3, r2, r3
   48534:	ldr	r2, [r3]
   48538:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4853c:	ldr	r1, [r3, #8]
   48540:	ldr	r3, [fp, #-8]
   48544:	lsl	r3, r3, #2
   48548:	add	r3, r1, r3
   4854c:	ldr	r3, [r3]
   48550:	cmp	r2, r3
   48554:	bne	48574 <__assert_fail@plt+0x35e88>
   48558:	ldr	r3, [fp, #-8]
   4855c:	sub	r3, r3, #1
   48560:	str	r3, [fp, #-8]
   48564:	ldr	r3, [fp, #-12]
   48568:	sub	r3, r3, #1
   4856c:	str	r3, [fp, #-12]
   48570:	b	48600 <__assert_fail@plt+0x35f14>
   48574:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48578:	ldr	r2, [r3, #8]
   4857c:	ldr	r3, [fp, #-12]
   48580:	lsl	r3, r3, #2
   48584:	add	r3, r2, r3
   48588:	ldr	r2, [r3]
   4858c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48590:	ldr	r1, [r3, #8]
   48594:	ldr	r3, [fp, #-8]
   48598:	lsl	r3, r3, #2
   4859c:	add	r3, r1, r3
   485a0:	ldr	r3, [r3]
   485a4:	cmp	r2, r3
   485a8:	bge	485f4 <__assert_fail@plt+0x35f08>
   485ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   485b0:	ldr	r2, [r3, #8]
   485b4:	ldr	r3, [fp, #-8]
   485b8:	sub	r1, r3, #1
   485bc:	str	r1, [fp, #-8]
   485c0:	lsl	r3, r3, #2
   485c4:	add	r2, r2, r3
   485c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   485cc:	ldr	r1, [r3, #8]
   485d0:	ldr	r3, [fp, #-16]
   485d4:	sub	r3, r3, #1
   485d8:	str	r3, [fp, #-16]
   485dc:	ldr	r3, [fp, #-16]
   485e0:	lsl	r3, r3, #2
   485e4:	add	r3, r1, r3
   485e8:	ldr	r2, [r2]
   485ec:	str	r2, [r3]
   485f0:	b	48600 <__assert_fail@plt+0x35f14>
   485f4:	ldr	r3, [fp, #-12]
   485f8:	sub	r3, r3, #1
   485fc:	str	r3, [fp, #-12]
   48600:	ldr	r3, [fp, #-8]
   48604:	cmp	r3, #0
   48608:	blt	48618 <__assert_fail@plt+0x35f2c>
   4860c:	ldr	r3, [fp, #-12]
   48610:	cmp	r3, #0
   48614:	bge	48520 <__assert_fail@plt+0x35e34>
   48618:	ldr	r3, [fp, #-8]
   4861c:	cmp	r3, #0
   48620:	blt	48668 <__assert_fail@plt+0x35f7c>
   48624:	ldr	r3, [fp, #-8]
   48628:	add	r3, r3, #1
   4862c:	ldr	r2, [fp, #-16]
   48630:	sub	r3, r2, r3
   48634:	str	r3, [fp, #-16]
   48638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4863c:	ldr	r2, [r3, #8]
   48640:	ldr	r3, [fp, #-16]
   48644:	lsl	r3, r3, #2
   48648:	add	r0, r2, r3
   4864c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48650:	ldr	r1, [r3, #8]
   48654:	ldr	r3, [fp, #-8]
   48658:	add	r3, r3, #1
   4865c:	lsl	r3, r3, #2
   48660:	mov	r2, r3
   48664:	bl	120f8 <memcpy@plt>
   48668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4866c:	ldr	r3, [r3, #4]
   48670:	sub	r3, r3, #1
   48674:	str	r3, [fp, #-12]
   48678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4867c:	ldr	r2, [r3, #4]
   48680:	ldr	r3, [fp, #-36]	; 0xffffffdc
   48684:	ldr	r3, [r3, #4]
   48688:	lsl	r3, r3, #1
   4868c:	add	r3, r2, r3
   48690:	sub	r3, r3, #1
   48694:	str	r3, [fp, #-8]
   48698:	ldr	r2, [fp, #-8]
   4869c:	ldr	r3, [fp, #-16]
   486a0:	sub	r3, r2, r3
   486a4:	add	r3, r3, #1
   486a8:	str	r3, [fp, #-20]	; 0xffffffec
   486ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   486b0:	cmp	r3, #0
   486b4:	bne	486c0 <__assert_fail@plt+0x35fd4>
   486b8:	mov	r3, #0
   486bc:	b	487e8 <__assert_fail@plt+0x360fc>
   486c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   486c4:	ldr	r2, [r3, #4]
   486c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   486cc:	add	r2, r2, r3
   486d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   486d4:	str	r2, [r3, #4]
   486d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   486dc:	ldr	r2, [r3, #8]
   486e0:	ldr	r3, [fp, #-8]
   486e4:	lsl	r3, r3, #2
   486e8:	add	r3, r2, r3
   486ec:	ldr	r2, [r3]
   486f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   486f4:	ldr	r1, [r3, #8]
   486f8:	ldr	r3, [fp, #-12]
   486fc:	lsl	r3, r3, #2
   48700:	add	r3, r1, r3
   48704:	ldr	r3, [r3]
   48708:	cmp	r2, r3
   4870c:	ble	48768 <__assert_fail@plt+0x3607c>
   48710:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48714:	ldr	r2, [r3, #8]
   48718:	ldr	r3, [fp, #-8]
   4871c:	sub	r1, r3, #1
   48720:	str	r1, [fp, #-8]
   48724:	lsl	r3, r3, #2
   48728:	add	r2, r2, r3
   4872c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48730:	ldr	r1, [r3, #8]
   48734:	ldr	r3, [fp, #-20]	; 0xffffffec
   48738:	sub	r0, r3, #1
   4873c:	str	r0, [fp, #-20]	; 0xffffffec
   48740:	ldr	r0, [fp, #-12]
   48744:	add	r3, r3, r0
   48748:	lsl	r3, r3, #2
   4874c:	add	r3, r1, r3
   48750:	ldr	r2, [r2]
   48754:	str	r2, [r3]
   48758:	ldr	r3, [fp, #-20]	; 0xffffffec
   4875c:	cmp	r3, #0
   48760:	bne	486d8 <__assert_fail@plt+0x35fec>
   48764:	b	487e4 <__assert_fail@plt+0x360f8>
   48768:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4876c:	ldr	r2, [r3, #8]
   48770:	ldr	r3, [fp, #-12]
   48774:	lsl	r3, r3, #2
   48778:	add	r2, r2, r3
   4877c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48780:	ldr	r1, [r3, #8]
   48784:	ldr	r0, [fp, #-12]
   48788:	ldr	r3, [fp, #-20]	; 0xffffffec
   4878c:	add	r3, r0, r3
   48790:	lsl	r3, r3, #2
   48794:	add	r3, r1, r3
   48798:	ldr	r2, [r2]
   4879c:	str	r2, [r3]
   487a0:	ldr	r3, [fp, #-12]
   487a4:	sub	r3, r3, #1
   487a8:	str	r3, [fp, #-12]
   487ac:	ldr	r3, [fp, #-12]
   487b0:	cmp	r3, #0
   487b4:	bge	486d8 <__assert_fail@plt+0x35fec>
   487b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   487bc:	ldr	r0, [r3, #8]
   487c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   487c4:	ldr	r2, [r3, #8]
   487c8:	ldr	r3, [fp, #-16]
   487cc:	lsl	r3, r3, #2
   487d0:	add	r1, r2, r3
   487d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   487d8:	lsl	r3, r3, #2
   487dc:	mov	r2, r3
   487e0:	bl	120f8 <memcpy@plt>
   487e4:	mov	r3, #0
   487e8:	mov	r0, r3
   487ec:	sub	sp, fp, #4
   487f0:	ldr	fp, [sp]
   487f4:	add	sp, sp, #4
   487f8:	pop	{pc}		; (ldr pc, [sp], #4)
   487fc:	str	fp, [sp, #-8]!
   48800:	str	lr, [sp, #4]
   48804:	add	fp, sp, #4
   48808:	sub	sp, sp, #16
   4880c:	str	r0, [fp, #-16]
   48810:	str	r1, [fp, #-20]	; 0xffffffec
   48814:	ldr	r3, [fp, #-16]
   48818:	ldr	r3, [r3]
   4881c:	cmp	r3, #0
   48820:	bne	48858 <__assert_fail@plt+0x3616c>
   48824:	ldr	r1, [fp, #-20]	; 0xffffffec
   48828:	ldr	r0, [fp, #-16]
   4882c:	bl	478a4 <__assert_fail@plt+0x351b8>
   48830:	mov	r3, r0
   48834:	cmp	r3, #0
   48838:	moveq	r3, #1
   4883c:	movne	r3, #0
   48840:	uxtb	r3, r3
   48844:	cmp	r3, #0
   48848:	movne	r3, #1
   4884c:	moveq	r3, #0
   48850:	uxtb	r3, r3
   48854:	b	48a68 <__assert_fail@plt+0x3637c>
   48858:	ldr	r3, [fp, #-16]
   4885c:	ldr	r3, [r3, #4]
   48860:	cmp	r3, #0
   48864:	bne	488a0 <__assert_fail@plt+0x361b4>
   48868:	ldr	r3, [fp, #-16]
   4886c:	ldr	r3, [r3, #8]
   48870:	cmp	r3, #0
   48874:	ldr	r3, [fp, #-16]
   48878:	ldr	r3, [r3, #8]
   4887c:	ldr	r2, [fp, #-20]	; 0xffffffec
   48880:	str	r2, [r3]
   48884:	ldr	r3, [fp, #-16]
   48888:	ldr	r3, [r3, #4]
   4888c:	add	r2, r3, #1
   48890:	ldr	r3, [fp, #-16]
   48894:	str	r2, [r3, #4]
   48898:	mov	r3, #1
   4889c:	b	48a68 <__assert_fail@plt+0x3637c>
   488a0:	ldr	r3, [fp, #-16]
   488a4:	ldr	r2, [r3]
   488a8:	ldr	r3, [fp, #-16]
   488ac:	ldr	r3, [r3, #4]
   488b0:	cmp	r2, r3
   488b4:	bne	48920 <__assert_fail@plt+0x36234>
   488b8:	ldr	r3, [fp, #-16]
   488bc:	ldr	r3, [r3]
   488c0:	lsl	r2, r3, #1
   488c4:	ldr	r3, [fp, #-16]
   488c8:	str	r2, [r3]
   488cc:	ldr	r3, [fp, #-16]
   488d0:	ldr	r2, [r3, #8]
   488d4:	ldr	r3, [fp, #-16]
   488d8:	ldr	r3, [r3]
   488dc:	lsl	r3, r3, #2
   488e0:	mov	r1, r3
   488e4:	mov	r0, r2
   488e8:	bl	446e8 <__assert_fail@plt+0x31ffc>
   488ec:	str	r0, [fp, #-12]
   488f0:	ldr	r3, [fp, #-12]
   488f4:	cmp	r3, #0
   488f8:	moveq	r3, #1
   488fc:	movne	r3, #0
   48900:	uxtb	r3, r3
   48904:	cmp	r3, #0
   48908:	beq	48914 <__assert_fail@plt+0x36228>
   4890c:	mov	r3, #0
   48910:	b	48a68 <__assert_fail@plt+0x3637c>
   48914:	ldr	r3, [fp, #-16]
   48918:	ldr	r2, [fp, #-12]
   4891c:	str	r2, [r3, #8]
   48920:	ldr	r3, [fp, #-16]
   48924:	ldr	r3, [r3, #8]
   48928:	ldr	r3, [r3]
   4892c:	ldr	r2, [fp, #-20]	; 0xffffffec
   48930:	cmp	r2, r3
   48934:	bge	48998 <__assert_fail@plt+0x362ac>
   48938:	ldr	r3, [fp, #-16]
   4893c:	ldr	r3, [r3, #4]
   48940:	str	r3, [fp, #-8]
   48944:	b	48988 <__assert_fail@plt+0x3629c>
   48948:	ldr	r3, [fp, #-16]
   4894c:	ldr	r2, [r3, #8]
   48950:	ldr	r3, [fp, #-8]
   48954:	sub	r3, r3, #-1073741823	; 0xc0000001
   48958:	lsl	r3, r3, #2
   4895c:	add	r2, r2, r3
   48960:	ldr	r3, [fp, #-16]
   48964:	ldr	r1, [r3, #8]
   48968:	ldr	r3, [fp, #-8]
   4896c:	lsl	r3, r3, #2
   48970:	add	r3, r1, r3
   48974:	ldr	r2, [r2]
   48978:	str	r2, [r3]
   4897c:	ldr	r3, [fp, #-8]
   48980:	sub	r3, r3, #1
   48984:	str	r3, [fp, #-8]
   48988:	ldr	r3, [fp, #-8]
   4898c:	cmp	r3, #0
   48990:	bgt	48948 <__assert_fail@plt+0x3625c>
   48994:	b	48a34 <__assert_fail@plt+0x36348>
   48998:	ldr	r3, [fp, #-16]
   4899c:	ldr	r3, [r3, #4]
   489a0:	str	r3, [fp, #-8]
   489a4:	b	489e8 <__assert_fail@plt+0x362fc>
   489a8:	ldr	r3, [fp, #-16]
   489ac:	ldr	r2, [r3, #8]
   489b0:	ldr	r3, [fp, #-8]
   489b4:	sub	r3, r3, #-1073741823	; 0xc0000001
   489b8:	lsl	r3, r3, #2
   489bc:	add	r2, r2, r3
   489c0:	ldr	r3, [fp, #-16]
   489c4:	ldr	r1, [r3, #8]
   489c8:	ldr	r3, [fp, #-8]
   489cc:	lsl	r3, r3, #2
   489d0:	add	r3, r1, r3
   489d4:	ldr	r2, [r2]
   489d8:	str	r2, [r3]
   489dc:	ldr	r3, [fp, #-8]
   489e0:	sub	r3, r3, #1
   489e4:	str	r3, [fp, #-8]
   489e8:	ldr	r3, [fp, #-16]
   489ec:	ldr	r2, [r3, #8]
   489f0:	ldr	r3, [fp, #-8]
   489f4:	sub	r3, r3, #-1073741823	; 0xc0000001
   489f8:	lsl	r3, r3, #2
   489fc:	add	r3, r2, r3
   48a00:	ldr	r3, [r3]
   48a04:	ldr	r2, [fp, #-20]	; 0xffffffec
   48a08:	cmp	r2, r3
   48a0c:	blt	489a8 <__assert_fail@plt+0x362bc>
   48a10:	ldr	r3, [fp, #-16]
   48a14:	ldr	r2, [r3, #8]
   48a18:	ldr	r3, [fp, #-8]
   48a1c:	sub	r3, r3, #-1073741823	; 0xc0000001
   48a20:	lsl	r3, r3, #2
   48a24:	add	r3, r2, r3
   48a28:	ldr	r3, [r3]
   48a2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   48a30:	cmp	r2, r3
   48a34:	ldr	r3, [fp, #-16]
   48a38:	ldr	r2, [r3, #8]
   48a3c:	ldr	r3, [fp, #-8]
   48a40:	lsl	r3, r3, #2
   48a44:	add	r3, r2, r3
   48a48:	ldr	r2, [fp, #-20]	; 0xffffffec
   48a4c:	str	r2, [r3]
   48a50:	ldr	r3, [fp, #-16]
   48a54:	ldr	r3, [r3, #4]
   48a58:	add	r2, r3, #1
   48a5c:	ldr	r3, [fp, #-16]
   48a60:	str	r2, [r3, #4]
   48a64:	mov	r3, #1
   48a68:	mov	r0, r3
   48a6c:	sub	sp, fp, #4
   48a70:	ldr	fp, [sp]
   48a74:	add	sp, sp, #4
   48a78:	pop	{pc}		; (ldr pc, [sp], #4)
   48a7c:	str	fp, [sp, #-8]!
   48a80:	str	lr, [sp, #4]
   48a84:	add	fp, sp, #4
   48a88:	sub	sp, sp, #16
   48a8c:	str	r0, [fp, #-16]
   48a90:	str	r1, [fp, #-20]	; 0xffffffec
   48a94:	ldr	r3, [fp, #-16]
   48a98:	ldr	r2, [r3]
   48a9c:	ldr	r3, [fp, #-16]
   48aa0:	ldr	r3, [r3, #4]
   48aa4:	cmp	r2, r3
   48aa8:	bne	48b18 <__assert_fail@plt+0x3642c>
   48aac:	ldr	r3, [fp, #-16]
   48ab0:	ldr	r3, [r3]
   48ab4:	add	r3, r3, #1
   48ab8:	lsl	r2, r3, #1
   48abc:	ldr	r3, [fp, #-16]
   48ac0:	str	r2, [r3]
   48ac4:	ldr	r3, [fp, #-16]
   48ac8:	ldr	r2, [r3, #8]
   48acc:	ldr	r3, [fp, #-16]
   48ad0:	ldr	r3, [r3]
   48ad4:	lsl	r3, r3, #2
   48ad8:	mov	r1, r3
   48adc:	mov	r0, r2
   48ae0:	bl	446e8 <__assert_fail@plt+0x31ffc>
   48ae4:	str	r0, [fp, #-8]
   48ae8:	ldr	r3, [fp, #-8]
   48aec:	cmp	r3, #0
   48af0:	moveq	r3, #1
   48af4:	movne	r3, #0
   48af8:	uxtb	r3, r3
   48afc:	cmp	r3, #0
   48b00:	beq	48b0c <__assert_fail@plt+0x36420>
   48b04:	mov	r3, #0
   48b08:	b	48b48 <__assert_fail@plt+0x3645c>
   48b0c:	ldr	r3, [fp, #-16]
   48b10:	ldr	r2, [fp, #-8]
   48b14:	str	r2, [r3, #8]
   48b18:	ldr	r3, [fp, #-16]
   48b1c:	ldr	r2, [r3, #8]
   48b20:	ldr	r3, [fp, #-16]
   48b24:	ldr	r3, [r3, #4]
   48b28:	add	r0, r3, #1
   48b2c:	ldr	r1, [fp, #-16]
   48b30:	str	r0, [r1, #4]
   48b34:	lsl	r3, r3, #2
   48b38:	add	r3, r2, r3
   48b3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   48b40:	str	r2, [r3]
   48b44:	mov	r3, #1
   48b48:	mov	r0, r3
   48b4c:	sub	sp, fp, #4
   48b50:	ldr	fp, [sp]
   48b54:	add	sp, sp, #4
   48b58:	pop	{pc}		; (ldr pc, [sp], #4)
   48b5c:	push	{fp}		; (str fp, [sp, #-4]!)
   48b60:	add	fp, sp, #0
   48b64:	sub	sp, sp, #20
   48b68:	str	r0, [fp, #-16]
   48b6c:	str	r1, [fp, #-20]	; 0xffffffec
   48b70:	ldr	r3, [fp, #-16]
   48b74:	cmp	r3, #0
   48b78:	beq	48ba0 <__assert_fail@plt+0x364b4>
   48b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48b80:	cmp	r3, #0
   48b84:	beq	48ba0 <__assert_fail@plt+0x364b4>
   48b88:	ldr	r3, [fp, #-16]
   48b8c:	ldr	r2, [r3, #4]
   48b90:	ldr	r3, [fp, #-20]	; 0xffffffec
   48b94:	ldr	r3, [r3, #4]
   48b98:	cmp	r2, r3
   48b9c:	beq	48ba8 <__assert_fail@plt+0x364bc>
   48ba0:	mov	r3, #0
   48ba4:	b	48c14 <__assert_fail@plt+0x36528>
   48ba8:	ldr	r3, [fp, #-16]
   48bac:	ldr	r3, [r3, #4]
   48bb0:	str	r3, [fp, #-8]
   48bb4:	b	48bf8 <__assert_fail@plt+0x3650c>
   48bb8:	ldr	r3, [fp, #-16]
   48bbc:	ldr	r2, [r3, #8]
   48bc0:	ldr	r3, [fp, #-8]
   48bc4:	lsl	r3, r3, #2
   48bc8:	add	r3, r2, r3
   48bcc:	ldr	r2, [r3]
   48bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   48bd4:	ldr	r1, [r3, #8]
   48bd8:	ldr	r3, [fp, #-8]
   48bdc:	lsl	r3, r3, #2
   48be0:	add	r3, r1, r3
   48be4:	ldr	r3, [r3]
   48be8:	cmp	r2, r3
   48bec:	beq	48bf8 <__assert_fail@plt+0x3650c>
   48bf0:	mov	r3, #0
   48bf4:	b	48c14 <__assert_fail@plt+0x36528>
   48bf8:	ldr	r3, [fp, #-8]
   48bfc:	sub	r3, r3, #1
   48c00:	str	r3, [fp, #-8]
   48c04:	ldr	r3, [fp, #-8]
   48c08:	cmp	r3, #0
   48c0c:	bge	48bb8 <__assert_fail@plt+0x364cc>
   48c10:	mov	r3, #1
   48c14:	mov	r0, r3
   48c18:	add	sp, fp, #0
   48c1c:	pop	{fp}		; (ldr fp, [sp], #4)
   48c20:	bx	lr
   48c24:	push	{fp}		; (str fp, [sp, #-4]!)
   48c28:	add	fp, sp, #0
   48c2c:	sub	sp, sp, #28
   48c30:	str	r0, [fp, #-24]	; 0xffffffe8
   48c34:	str	r1, [fp, #-28]	; 0xffffffe4
   48c38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48c3c:	ldr	r3, [r3, #4]
   48c40:	cmp	r3, #0
   48c44:	bgt	48c50 <__assert_fail@plt+0x36564>
   48c48:	mov	r3, #0
   48c4c:	b	48d00 <__assert_fail@plt+0x36614>
   48c50:	mov	r3, #0
   48c54:	str	r3, [fp, #-8]
   48c58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48c5c:	ldr	r3, [r3, #4]
   48c60:	sub	r3, r3, #1
   48c64:	str	r3, [fp, #-12]
   48c68:	b	48cbc <__assert_fail@plt+0x365d0>
   48c6c:	ldr	r2, [fp, #-8]
   48c70:	ldr	r3, [fp, #-12]
   48c74:	add	r3, r2, r3
   48c78:	lsr	r3, r3, #1
   48c7c:	str	r3, [fp, #-16]
   48c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48c84:	ldr	r2, [r3, #8]
   48c88:	ldr	r3, [fp, #-16]
   48c8c:	lsl	r3, r3, #2
   48c90:	add	r3, r2, r3
   48c94:	ldr	r3, [r3]
   48c98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   48c9c:	cmp	r2, r3
   48ca0:	ble	48cb4 <__assert_fail@plt+0x365c8>
   48ca4:	ldr	r3, [fp, #-16]
   48ca8:	add	r3, r3, #1
   48cac:	str	r3, [fp, #-8]
   48cb0:	b	48cbc <__assert_fail@plt+0x365d0>
   48cb4:	ldr	r3, [fp, #-16]
   48cb8:	str	r3, [fp, #-12]
   48cbc:	ldr	r2, [fp, #-8]
   48cc0:	ldr	r3, [fp, #-12]
   48cc4:	cmp	r2, r3
   48cc8:	bcc	48c6c <__assert_fail@plt+0x36580>
   48ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48cd0:	ldr	r2, [r3, #8]
   48cd4:	ldr	r3, [fp, #-8]
   48cd8:	lsl	r3, r3, #2
   48cdc:	add	r3, r2, r3
   48ce0:	ldr	r3, [r3]
   48ce4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   48ce8:	cmp	r2, r3
   48cec:	bne	48cfc <__assert_fail@plt+0x36610>
   48cf0:	ldr	r3, [fp, #-8]
   48cf4:	add	r3, r3, #1
   48cf8:	b	48d00 <__assert_fail@plt+0x36614>
   48cfc:	mov	r3, #0
   48d00:	mov	r0, r3
   48d04:	add	sp, fp, #0
   48d08:	pop	{fp}		; (ldr fp, [sp], #4)
   48d0c:	bx	lr
   48d10:	push	{fp}		; (str fp, [sp, #-4]!)
   48d14:	add	fp, sp, #0
   48d18:	sub	sp, sp, #12
   48d1c:	str	r0, [fp, #-8]
   48d20:	str	r1, [fp, #-12]
   48d24:	ldr	r3, [fp, #-12]
   48d28:	cmp	r3, #0
   48d2c:	blt	48db4 <__assert_fail@plt+0x366c8>
   48d30:	ldr	r3, [fp, #-8]
   48d34:	ldr	r3, [r3, #4]
   48d38:	ldr	r2, [fp, #-12]
   48d3c:	cmp	r2, r3
   48d40:	bge	48db4 <__assert_fail@plt+0x366c8>
   48d44:	ldr	r3, [fp, #-8]
   48d48:	ldr	r3, [r3, #4]
   48d4c:	sub	r2, r3, #1
   48d50:	ldr	r3, [fp, #-8]
   48d54:	str	r2, [r3, #4]
   48d58:	b	48d9c <__assert_fail@plt+0x366b0>
   48d5c:	ldr	r3, [fp, #-8]
   48d60:	ldr	r2, [r3, #8]
   48d64:	ldr	r3, [fp, #-12]
   48d68:	add	r3, r3, #1
   48d6c:	lsl	r3, r3, #2
   48d70:	add	r2, r2, r3
   48d74:	ldr	r3, [fp, #-8]
   48d78:	ldr	r1, [r3, #8]
   48d7c:	ldr	r3, [fp, #-12]
   48d80:	lsl	r3, r3, #2
   48d84:	add	r3, r1, r3
   48d88:	ldr	r2, [r2]
   48d8c:	str	r2, [r3]
   48d90:	ldr	r3, [fp, #-12]
   48d94:	add	r3, r3, #1
   48d98:	str	r3, [fp, #-12]
   48d9c:	ldr	r3, [fp, #-8]
   48da0:	ldr	r3, [r3, #4]
   48da4:	ldr	r2, [fp, #-12]
   48da8:	cmp	r2, r3
   48dac:	blt	48d5c <__assert_fail@plt+0x36670>
   48db0:	b	48db8 <__assert_fail@plt+0x366cc>
   48db4:	nop	{0}
   48db8:	add	sp, fp, #0
   48dbc:	pop	{fp}		; (ldr fp, [sp], #4)
   48dc0:	bx	lr
   48dc4:	str	fp, [sp, #-8]!
   48dc8:	str	lr, [sp, #4]
   48dcc:	add	fp, sp, #4
   48dd0:	sub	sp, sp, #48	; 0x30
   48dd4:	str	r0, [fp, #-40]	; 0xffffffd8
   48dd8:	sub	r3, fp, #48	; 0x30
   48ddc:	stm	r3, {r1, r2}
   48de0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48de4:	ldr	r2, [r3, #8]
   48de8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48dec:	ldr	r3, [r3, #4]
   48df0:	cmp	r2, r3
   48df4:	movcs	r3, #1
   48df8:	movcc	r3, #0
   48dfc:	uxtb	r3, r3
   48e00:	cmp	r3, #0
   48e04:	beq	49048 <__assert_fail@plt+0x3695c>
   48e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48e0c:	ldr	r3, [r3, #4]
   48e10:	lsl	r3, r3, #1
   48e14:	str	r3, [fp, #-8]
   48e18:	mov	r3, #12
   48e1c:	str	r3, [fp, #-12]
   48e20:	mvn	r2, #0
   48e24:	ldr	r3, [fp, #-12]
   48e28:	udiv	r3, r2, r3
   48e2c:	cmp	r3, #0
   48e30:	blt	48e44 <__assert_fail@plt+0x36758>
   48e34:	mvn	r2, #0
   48e38:	ldr	r3, [fp, #-12]
   48e3c:	udiv	r3, r2, r3
   48e40:	b	48e48 <__assert_fail@plt+0x3675c>
   48e44:	mvn	r3, #-2147483648	; 0x80000000
   48e48:	ldr	r2, [fp, #-8]
   48e4c:	cmp	r3, r2
   48e50:	movcc	r3, #1
   48e54:	movcs	r3, #0
   48e58:	uxtb	r3, r3
   48e5c:	cmp	r3, #0
   48e60:	beq	48e6c <__assert_fail@plt+0x36780>
   48e64:	mvn	r3, #0
   48e68:	b	49194 <__assert_fail@plt+0x36aa8>
   48e6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48e70:	ldr	r2, [r3]
   48e74:	ldr	r3, [fp, #-8]
   48e78:	lsl	r3, r3, #3
   48e7c:	mov	r1, r3
   48e80:	mov	r0, r2
   48e84:	bl	446e8 <__assert_fail@plt+0x31ffc>
   48e88:	str	r0, [fp, #-16]
   48e8c:	ldr	r3, [fp, #-16]
   48e90:	cmp	r3, #0
   48e94:	moveq	r3, #1
   48e98:	movne	r3, #0
   48e9c:	uxtb	r3, r3
   48ea0:	cmp	r3, #0
   48ea4:	beq	48eb0 <__assert_fail@plt+0x367c4>
   48ea8:	mvn	r3, #0
   48eac:	b	49194 <__assert_fail@plt+0x36aa8>
   48eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48eb4:	ldr	r2, [fp, #-16]
   48eb8:	str	r2, [r3]
   48ebc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48ec0:	ldr	r2, [r3, #12]
   48ec4:	ldr	r3, [fp, #-8]
   48ec8:	lsl	r3, r3, #2
   48ecc:	mov	r1, r3
   48ed0:	mov	r0, r2
   48ed4:	bl	446e8 <__assert_fail@plt+0x31ffc>
   48ed8:	str	r0, [fp, #-20]	; 0xffffffec
   48edc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48ee0:	ldr	r2, [r3, #16]
   48ee4:	ldr	r3, [fp, #-8]
   48ee8:	lsl	r3, r3, #2
   48eec:	mov	r1, r3
   48ef0:	mov	r0, r2
   48ef4:	bl	446e8 <__assert_fail@plt+0x31ffc>
   48ef8:	str	r0, [fp, #-24]	; 0xffffffe8
   48efc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48f00:	ldr	r0, [r3, #20]
   48f04:	ldr	r2, [fp, #-8]
   48f08:	mov	r3, r2
   48f0c:	lsl	r3, r3, #1
   48f10:	add	r3, r3, r2
   48f14:	lsl	r3, r3, #2
   48f18:	mov	r1, r3
   48f1c:	bl	446e8 <__assert_fail@plt+0x31ffc>
   48f20:	str	r0, [fp, #-28]	; 0xffffffe4
   48f24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   48f28:	ldr	r0, [r3, #24]
   48f2c:	ldr	r2, [fp, #-8]
   48f30:	mov	r3, r2
   48f34:	lsl	r3, r3, #1
   48f38:	add	r3, r3, r2
   48f3c:	lsl	r3, r3, #2
   48f40:	mov	r1, r3
   48f44:	bl	446e8 <__assert_fail@plt+0x31ffc>
   48f48:	str	r0, [fp, #-32]	; 0xffffffe0
   48f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48f50:	cmp	r3, #0
   48f54:	moveq	r3, #1
   48f58:	movne	r3, #0
   48f5c:	uxtb	r3, r3
   48f60:	cmp	r3, #0
   48f64:	bne	48f84 <__assert_fail@plt+0x36898>
   48f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   48f6c:	cmp	r3, #0
   48f70:	moveq	r3, #1
   48f74:	movne	r3, #0
   48f78:	uxtb	r3, r3
   48f7c:	cmp	r3, #0
   48f80:	beq	48f8c <__assert_fail@plt+0x368a0>
   48f84:	mov	r3, #1
   48f88:	b	48f90 <__assert_fail@plt+0x368a4>
   48f8c:	mov	r3, #0
   48f90:	cmp	r3, #0
   48f94:	bne	48fb4 <__assert_fail@plt+0x368c8>
   48f98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48f9c:	cmp	r3, #0
   48fa0:	moveq	r3, #1
   48fa4:	movne	r3, #0
   48fa8:	uxtb	r3, r3
   48fac:	cmp	r3, #0
   48fb0:	beq	48fbc <__assert_fail@plt+0x368d0>
   48fb4:	mov	r3, #1
   48fb8:	b	48fc0 <__assert_fail@plt+0x368d4>
   48fbc:	mov	r3, #0
   48fc0:	cmp	r3, #0
   48fc4:	bne	48fe4 <__assert_fail@plt+0x368f8>
   48fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   48fcc:	cmp	r3, #0
   48fd0:	moveq	r3, #1
   48fd4:	movne	r3, #0
   48fd8:	uxtb	r3, r3
   48fdc:	cmp	r3, #0
   48fe0:	beq	4900c <__assert_fail@plt+0x36920>
   48fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   48fe8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   48fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   48ff0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   48ff4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   48ff8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   48ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49000:	bl	3fe0c <__assert_fail@plt+0x2d720>
   49004:	mvn	r3, #0
   49008:	b	49194 <__assert_fail@plt+0x36aa8>
   4900c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49010:	ldr	r2, [fp, #-20]	; 0xffffffec
   49014:	str	r2, [r3, #12]
   49018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4901c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49020:	str	r2, [r3, #16]
   49024:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49028:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4902c:	str	r2, [r3, #20]
   49030:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49034:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49038:	str	r2, [r3, #24]
   4903c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49040:	ldr	r2, [fp, #-8]
   49044:	str	r2, [r3, #4]
   49048:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4904c:	ldr	r2, [r3]
   49050:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49054:	ldr	r3, [r3, #8]
   49058:	lsl	r3, r3, #3
   4905c:	add	r3, r2, r3
   49060:	mov	r1, r3
   49064:	sub	r3, fp, #48	; 0x30
   49068:	ldrd	r2, [r3]
   4906c:	strd	r2, [r1]
   49070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49074:	ldr	r2, [r3]
   49078:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4907c:	ldr	r3, [r3, #8]
   49080:	lsl	r3, r3, #3
   49084:	add	r2, r2, r3
   49088:	ldr	r3, [r2, #4]
   4908c:	bfc	r3, #8, #10
   49090:	str	r3, [r2, #4]
   49094:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   49098:	cmp	r3, #5
   4909c:	bne	490b0 <__assert_fail@plt+0x369c4>
   490a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   490a4:	ldr	r3, [r3, #92]	; 0x5c
   490a8:	cmp	r3, #1
   490ac:	bgt	490bc <__assert_fail@plt+0x369d0>
   490b0:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   490b4:	cmp	r3, #6
   490b8:	bne	490c4 <__assert_fail@plt+0x369d8>
   490bc:	mov	r1, #1
   490c0:	b	490c8 <__assert_fail@plt+0x369dc>
   490c4:	mov	r1, #0
   490c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   490cc:	ldr	r2, [r3]
   490d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   490d4:	ldr	r3, [r3, #8]
   490d8:	lsl	r3, r3, #3
   490dc:	add	r2, r2, r3
   490e0:	mov	r3, r1
   490e4:	and	r3, r3, #1
   490e8:	uxtb	r1, r3
   490ec:	ldrb	r3, [r2, #6]
   490f0:	bfi	r3, r1, #4, #1
   490f4:	strb	r3, [r2, #6]
   490f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   490fc:	ldr	r2, [r3, #12]
   49100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49104:	ldr	r3, [r3, #8]
   49108:	lsl	r3, r3, #2
   4910c:	add	r3, r2, r3
   49110:	mvn	r2, #0
   49114:	str	r2, [r3]
   49118:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4911c:	ldr	r1, [r3, #20]
   49120:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49124:	ldr	r2, [r3, #8]
   49128:	mov	r3, r2
   4912c:	lsl	r3, r3, #1
   49130:	add	r3, r3, r2
   49134:	lsl	r3, r3, #2
   49138:	add	r3, r1, r3
   4913c:	mov	r2, #12
   49140:	mov	r1, #0
   49144:	mov	r0, r3
   49148:	bl	12434 <memset@plt>
   4914c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49150:	ldr	r1, [r3, #24]
   49154:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49158:	ldr	r2, [r3, #8]
   4915c:	mov	r3, r2
   49160:	lsl	r3, r3, #1
   49164:	add	r3, r3, r2
   49168:	lsl	r3, r3, #2
   4916c:	add	r3, r1, r3
   49170:	mov	r2, #12
   49174:	mov	r1, #0
   49178:	mov	r0, r3
   4917c:	bl	12434 <memset@plt>
   49180:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49184:	ldr	r3, [r3, #8]
   49188:	add	r1, r3, #1
   4918c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   49190:	str	r1, [r2, #8]
   49194:	mov	r0, r3
   49198:	sub	sp, fp, #4
   4919c:	ldr	fp, [sp]
   491a0:	add	sp, sp, #4
   491a4:	pop	{pc}		; (ldr pc, [sp], #4)
   491a8:	push	{fp}		; (str fp, [sp, #-4]!)
   491ac:	add	fp, sp, #0
   491b0:	sub	sp, sp, #20
   491b4:	str	r0, [fp, #-16]
   491b8:	str	r1, [fp, #-20]	; 0xffffffec
   491bc:	ldr	r3, [fp, #-16]
   491c0:	ldr	r3, [r3, #4]
   491c4:	mov	r2, r3
   491c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   491cc:	add	r3, r3, r2
   491d0:	str	r3, [fp, #-8]
   491d4:	mov	r3, #0
   491d8:	str	r3, [fp, #-12]
   491dc:	b	49214 <__assert_fail@plt+0x36b28>
   491e0:	ldr	r3, [fp, #-16]
   491e4:	ldr	r2, [r3, #8]
   491e8:	ldr	r3, [fp, #-12]
   491ec:	lsl	r3, r3, #2
   491f0:	add	r3, r2, r3
   491f4:	ldr	r3, [r3]
   491f8:	mov	r2, r3
   491fc:	ldr	r3, [fp, #-8]
   49200:	add	r3, r3, r2
   49204:	str	r3, [fp, #-8]
   49208:	ldr	r3, [fp, #-12]
   4920c:	add	r3, r3, #1
   49210:	str	r3, [fp, #-12]
   49214:	ldr	r3, [fp, #-16]
   49218:	ldr	r3, [r3, #4]
   4921c:	ldr	r2, [fp, #-12]
   49220:	cmp	r2, r3
   49224:	blt	491e0 <__assert_fail@plt+0x36af4>
   49228:	ldr	r3, [fp, #-8]
   4922c:	mov	r0, r3
   49230:	add	sp, fp, #0
   49234:	pop	{fp}		; (ldr fp, [sp], #4)
   49238:	bx	lr
   4923c:	str	fp, [sp, #-8]!
   49240:	str	lr, [sp, #4]
   49244:	add	fp, sp, #4
   49248:	sub	sp, sp, #40	; 0x28
   4924c:	str	r0, [fp, #-32]	; 0xffffffe0
   49250:	str	r1, [fp, #-36]	; 0xffffffdc
   49254:	str	r2, [fp, #-40]	; 0xffffffd8
   49258:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4925c:	ldr	r3, [r3, #4]
   49260:	cmp	r3, #0
   49264:	moveq	r3, #1
   49268:	movne	r3, #0
   4926c:	uxtb	r3, r3
   49270:	cmp	r3, #0
   49274:	beq	4928c <__assert_fail@plt+0x36ba0>
   49278:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4927c:	mov	r2, #0
   49280:	str	r2, [r3]
   49284:	mov	r3, #0
   49288:	b	49394 <__assert_fail@plt+0x36ca8>
   4928c:	mov	r1, #0
   49290:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49294:	bl	491a8 <__assert_fail@plt+0x36abc>
   49298:	str	r0, [fp, #-12]
   4929c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   492a0:	ldr	r1, [r3, #32]
   492a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   492a8:	ldr	r2, [r3, #68]	; 0x44
   492ac:	ldr	r3, [fp, #-12]
   492b0:	and	r2, r2, r3
   492b4:	mov	r3, r2
   492b8:	lsl	r3, r3, #1
   492bc:	add	r3, r3, r2
   492c0:	lsl	r3, r3, #2
   492c4:	add	r3, r1, r3
   492c8:	str	r3, [fp, #-16]
   492cc:	mov	r3, #0
   492d0:	str	r3, [fp, #-8]
   492d4:	b	49340 <__assert_fail@plt+0x36c54>
   492d8:	ldr	r3, [fp, #-16]
   492dc:	ldr	r2, [r3, #8]
   492e0:	ldr	r3, [fp, #-8]
   492e4:	lsl	r3, r3, #2
   492e8:	add	r3, r2, r3
   492ec:	ldr	r3, [r3]
   492f0:	str	r3, [fp, #-20]	; 0xffffffec
   492f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   492f8:	ldr	r3, [r3]
   492fc:	ldr	r2, [fp, #-12]
   49300:	cmp	r2, r3
   49304:	bne	49330 <__assert_fail@plt+0x36c44>
   49308:	ldr	r3, [fp, #-20]	; 0xffffffec
   4930c:	add	r3, r3, #4
   49310:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49314:	mov	r0, r3
   49318:	bl	48b5c <__assert_fail@plt+0x36470>
   4931c:	mov	r3, r0
   49320:	cmp	r3, #0
   49324:	beq	49334 <__assert_fail@plt+0x36c48>
   49328:	ldr	r3, [fp, #-20]	; 0xffffffec
   4932c:	b	49394 <__assert_fail@plt+0x36ca8>
   49330:	nop	{0}
   49334:	ldr	r3, [fp, #-8]
   49338:	add	r3, r3, #1
   4933c:	str	r3, [fp, #-8]
   49340:	ldr	r3, [fp, #-16]
   49344:	ldr	r3, [r3]
   49348:	ldr	r2, [fp, #-8]
   4934c:	cmp	r2, r3
   49350:	blt	492d8 <__assert_fail@plt+0x36bec>
   49354:	ldr	r2, [fp, #-12]
   49358:	ldr	r1, [fp, #-40]	; 0xffffffd8
   4935c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   49360:	bl	497f8 <__assert_fail@plt+0x3710c>
   49364:	str	r0, [fp, #-24]	; 0xffffffe8
   49368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4936c:	cmp	r3, #0
   49370:	moveq	r3, #1
   49374:	movne	r3, #0
   49378:	uxtb	r3, r3
   4937c:	cmp	r3, #0
   49380:	beq	49390 <__assert_fail@plt+0x36ca4>
   49384:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49388:	mov	r2, #12
   4938c:	str	r2, [r3]
   49390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49394:	mov	r0, r3
   49398:	sub	sp, fp, #4
   4939c:	ldr	fp, [sp]
   493a0:	add	sp, sp, #4
   493a4:	pop	{pc}		; (ldr pc, [sp], #4)
   493a8:	str	fp, [sp, #-8]!
   493ac:	str	lr, [sp, #4]
   493b0:	add	fp, sp, #4
   493b4:	sub	sp, sp, #40	; 0x28
   493b8:	str	r0, [fp, #-32]	; 0xffffffe0
   493bc:	str	r1, [fp, #-36]	; 0xffffffdc
   493c0:	str	r2, [fp, #-40]	; 0xffffffd8
   493c4:	str	r3, [fp, #-44]	; 0xffffffd4
   493c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   493cc:	ldr	r3, [r3, #4]
   493d0:	cmp	r3, #0
   493d4:	bne	493ec <__assert_fail@plt+0x36d00>
   493d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   493dc:	mov	r2, #0
   493e0:	str	r2, [r3]
   493e4:	mov	r3, #0
   493e8:	b	49514 <__assert_fail@plt+0x36e28>
   493ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   493f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   493f4:	bl	491a8 <__assert_fail@plt+0x36abc>
   493f8:	str	r0, [fp, #-12]
   493fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49400:	ldr	r1, [r3, #32]
   49404:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49408:	ldr	r2, [r3, #68]	; 0x44
   4940c:	ldr	r3, [fp, #-12]
   49410:	and	r2, r2, r3
   49414:	mov	r3, r2
   49418:	lsl	r3, r3, #1
   4941c:	add	r3, r3, r2
   49420:	lsl	r3, r3, #2
   49424:	add	r3, r1, r3
   49428:	str	r3, [fp, #-16]
   4942c:	mov	r3, #0
   49430:	str	r3, [fp, #-8]
   49434:	b	494bc <__assert_fail@plt+0x36dd0>
   49438:	ldr	r3, [fp, #-16]
   4943c:	ldr	r2, [r3, #8]
   49440:	ldr	r3, [fp, #-8]
   49444:	lsl	r3, r3, #2
   49448:	add	r3, r2, r3
   4944c:	ldr	r3, [r3]
   49450:	str	r3, [fp, #-20]	; 0xffffffec
   49454:	ldr	r3, [fp, #-20]	; 0xffffffec
   49458:	ldr	r3, [r3]
   4945c:	ldr	r2, [fp, #-12]
   49460:	cmp	r2, r3
   49464:	bne	494b0 <__assert_fail@plt+0x36dc4>
   49468:	ldr	r3, [fp, #-20]	; 0xffffffec
   4946c:	ldrb	r3, [r3, #52]	; 0x34
   49470:	ubfx	r3, r3, #0, #4
   49474:	uxtb	r3, r3
   49478:	mov	r2, r3
   4947c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49480:	cmp	r3, r2
   49484:	bne	494b0 <__assert_fail@plt+0x36dc4>
   49488:	ldr	r3, [fp, #-20]	; 0xffffffec
   4948c:	ldr	r3, [r3, #40]	; 0x28
   49490:	ldr	r1, [fp, #-40]	; 0xffffffd8
   49494:	mov	r0, r3
   49498:	bl	48b5c <__assert_fail@plt+0x36470>
   4949c:	mov	r3, r0
   494a0:	cmp	r3, #0
   494a4:	beq	494b0 <__assert_fail@plt+0x36dc4>
   494a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   494ac:	b	49514 <__assert_fail@plt+0x36e28>
   494b0:	ldr	r3, [fp, #-8]
   494b4:	add	r3, r3, #1
   494b8:	str	r3, [fp, #-8]
   494bc:	ldr	r3, [fp, #-16]
   494c0:	ldr	r3, [r3]
   494c4:	ldr	r2, [fp, #-8]
   494c8:	cmp	r2, r3
   494cc:	blt	49438 <__assert_fail@plt+0x36d4c>
   494d0:	ldr	r3, [fp, #-12]
   494d4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   494d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   494dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   494e0:	bl	49a3c <__assert_fail@plt+0x37350>
   494e4:	str	r0, [fp, #-24]	; 0xffffffe8
   494e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   494ec:	cmp	r3, #0
   494f0:	moveq	r3, #1
   494f4:	movne	r3, #0
   494f8:	uxtb	r3, r3
   494fc:	cmp	r3, #0
   49500:	beq	49510 <__assert_fail@plt+0x36e24>
   49504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49508:	mov	r2, #12
   4950c:	str	r2, [r3]
   49510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49514:	mov	r0, r3
   49518:	sub	sp, fp, #4
   4951c:	ldr	fp, [sp]
   49520:	add	sp, sp, #4
   49524:	pop	{pc}		; (ldr pc, [sp], #4)
   49528:	str	fp, [sp, #-8]!
   4952c:	str	lr, [sp, #4]
   49530:	add	fp, sp, #4
   49534:	sub	sp, sp, #40	; 0x28
   49538:	str	r0, [fp, #-32]	; 0xffffffe0
   4953c:	str	r1, [fp, #-36]	; 0xffffffdc
   49540:	str	r2, [fp, #-40]	; 0xffffffd8
   49544:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49548:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4954c:	str	r2, [r3]
   49550:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49554:	add	r2, r3, #16
   49558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4955c:	ldr	r3, [r3, #8]
   49560:	mov	r1, r3
   49564:	mov	r0, r2
   49568:	bl	47814 <__assert_fail@plt+0x35128>
   4956c:	str	r0, [fp, #-12]
   49570:	ldr	r3, [fp, #-12]
   49574:	cmp	r3, #0
   49578:	movne	r3, #1
   4957c:	moveq	r3, #0
   49580:	uxtb	r3, r3
   49584:	cmp	r3, #0
   49588:	beq	49594 <__assert_fail@plt+0x36ea8>
   4958c:	mov	r3, #12
   49590:	b	49728 <__assert_fail@plt+0x3703c>
   49594:	mov	r3, #0
   49598:	str	r3, [fp, #-8]
   4959c:	b	4961c <__assert_fail@plt+0x36f30>
   495a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   495a4:	ldr	r2, [r3, #12]
   495a8:	ldr	r3, [fp, #-8]
   495ac:	lsl	r3, r3, #2
   495b0:	add	r3, r2, r3
   495b4:	ldr	r3, [r3]
   495b8:	str	r3, [fp, #-16]
   495bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   495c0:	ldr	r2, [r3]
   495c4:	ldr	r3, [fp, #-16]
   495c8:	lsl	r3, r3, #3
   495cc:	add	r3, r2, r3
   495d0:	ldrb	r3, [r3, #4]
   495d4:	and	r3, r3, #8
   495d8:	cmp	r3, #0
   495dc:	bne	49610 <__assert_fail@plt+0x36f24>
   495e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   495e4:	add	r3, r3, #16
   495e8:	ldr	r1, [fp, #-16]
   495ec:	mov	r0, r3
   495f0:	bl	48a7c <__assert_fail@plt+0x36390>
   495f4:	mov	r3, r0
   495f8:	eor	r3, r3, #1
   495fc:	uxtb	r3, r3
   49600:	cmp	r3, #0
   49604:	beq	49610 <__assert_fail@plt+0x36f24>
   49608:	mov	r3, #12
   4960c:	b	49728 <__assert_fail@plt+0x3703c>
   49610:	ldr	r3, [fp, #-8]
   49614:	add	r3, r3, #1
   49618:	str	r3, [fp, #-8]
   4961c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49620:	ldr	r3, [r3, #8]
   49624:	ldr	r2, [fp, #-8]
   49628:	cmp	r2, r3
   4962c:	blt	495a0 <__assert_fail@plt+0x36eb4>
   49630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49634:	ldr	r1, [r3, #32]
   49638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4963c:	ldr	r2, [r3, #68]	; 0x44
   49640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49644:	and	r2, r2, r3
   49648:	mov	r3, r2
   4964c:	lsl	r3, r3, #1
   49650:	add	r3, r3, r2
   49654:	lsl	r3, r3, #2
   49658:	add	r3, r1, r3
   4965c:	str	r3, [fp, #-20]	; 0xffffffec
   49660:	ldr	r3, [fp, #-20]	; 0xffffffec
   49664:	ldr	r2, [r3, #4]
   49668:	ldr	r3, [fp, #-20]	; 0xffffffec
   4966c:	ldr	r3, [r3]
   49670:	cmp	r2, r3
   49674:	movle	r3, #1
   49678:	movgt	r3, #0
   4967c:	uxtb	r3, r3
   49680:	cmp	r3, #0
   49684:	beq	496f8 <__assert_fail@plt+0x3700c>
   49688:	ldr	r3, [fp, #-20]	; 0xffffffec
   4968c:	ldr	r3, [r3]
   49690:	add	r3, r3, #1
   49694:	lsl	r3, r3, #1
   49698:	str	r3, [fp, #-24]	; 0xffffffe8
   4969c:	ldr	r3, [fp, #-20]	; 0xffffffec
   496a0:	ldr	r2, [r3, #8]
   496a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   496a8:	lsl	r3, r3, #2
   496ac:	mov	r1, r3
   496b0:	mov	r0, r2
   496b4:	bl	446e8 <__assert_fail@plt+0x31ffc>
   496b8:	str	r0, [fp, #-28]	; 0xffffffe4
   496bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   496c0:	cmp	r3, #0
   496c4:	moveq	r3, #1
   496c8:	movne	r3, #0
   496cc:	uxtb	r3, r3
   496d0:	cmp	r3, #0
   496d4:	beq	496e0 <__assert_fail@plt+0x36ff4>
   496d8:	mov	r3, #12
   496dc:	b	49728 <__assert_fail@plt+0x3703c>
   496e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   496e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   496e8:	str	r2, [r3, #8]
   496ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   496f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   496f4:	str	r2, [r3, #4]
   496f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   496fc:	ldr	r2, [r3, #8]
   49700:	ldr	r3, [fp, #-20]	; 0xffffffec
   49704:	ldr	r3, [r3]
   49708:	add	r0, r3, #1
   4970c:	ldr	r1, [fp, #-20]	; 0xffffffec
   49710:	str	r0, [r1]
   49714:	lsl	r3, r3, #2
   49718:	add	r3, r2, r3
   4971c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   49720:	str	r2, [r3]
   49724:	mov	r3, #0
   49728:	mov	r0, r3
   4972c:	sub	sp, fp, #4
   49730:	ldr	fp, [sp]
   49734:	add	sp, sp, #4
   49738:	pop	{pc}		; (ldr pc, [sp], #4)
   4973c:	str	fp, [sp, #-8]!
   49740:	str	lr, [sp, #4]
   49744:	add	fp, sp, #4
   49748:	sub	sp, sp, #8
   4974c:	str	r0, [fp, #-8]
   49750:	ldr	r3, [fp, #-8]
   49754:	ldr	r3, [r3, #24]
   49758:	mov	r0, r3
   4975c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   49760:	ldr	r3, [fp, #-8]
   49764:	ldr	r3, [r3, #36]	; 0x24
   49768:	mov	r0, r3
   4976c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   49770:	ldr	r3, [fp, #-8]
   49774:	ldr	r2, [r3, #40]	; 0x28
   49778:	ldr	r3, [fp, #-8]
   4977c:	add	r3, r3, #4
   49780:	cmp	r2, r3
   49784:	beq	497ac <__assert_fail@plt+0x370c0>
   49788:	ldr	r3, [fp, #-8]
   4978c:	ldr	r3, [r3, #40]	; 0x28
   49790:	ldr	r3, [r3, #8]
   49794:	mov	r0, r3
   49798:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4979c:	ldr	r3, [fp, #-8]
   497a0:	ldr	r3, [r3, #40]	; 0x28
   497a4:	mov	r0, r3
   497a8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   497ac:	ldr	r3, [fp, #-8]
   497b0:	ldr	r3, [r3, #12]
   497b4:	mov	r0, r3
   497b8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   497bc:	ldr	r3, [fp, #-8]
   497c0:	ldr	r3, [r3, #48]	; 0x30
   497c4:	mov	r0, r3
   497c8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   497cc:	ldr	r3, [fp, #-8]
   497d0:	ldr	r3, [r3, #44]	; 0x2c
   497d4:	mov	r0, r3
   497d8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   497dc:	ldr	r0, [fp, #-8]
   497e0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   497e4:	nop	{0}
   497e8:	sub	sp, fp, #4
   497ec:	ldr	fp, [sp]
   497f0:	add	sp, sp, #4
   497f4:	pop	{pc}		; (ldr pc, [sp], #4)
   497f8:	str	fp, [sp, #-8]!
   497fc:	str	lr, [sp, #4]
   49800:	add	fp, sp, #4
   49804:	sub	sp, sp, #40	; 0x28
   49808:	str	r0, [fp, #-32]	; 0xffffffe0
   4980c:	str	r1, [fp, #-36]	; 0xffffffdc
   49810:	str	r2, [fp, #-40]	; 0xffffffd8
   49814:	mov	r1, #1
   49818:	mov	r0, #56	; 0x38
   4981c:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   49820:	mov	r3, r0
   49824:	str	r3, [fp, #-12]
   49828:	ldr	r3, [fp, #-12]
   4982c:	cmp	r3, #0
   49830:	moveq	r3, #1
   49834:	movne	r3, #0
   49838:	uxtb	r3, r3
   4983c:	cmp	r3, #0
   49840:	beq	4984c <__assert_fail@plt+0x37160>
   49844:	mov	r3, #0
   49848:	b	49a28 <__assert_fail@plt+0x3733c>
   4984c:	ldr	r3, [fp, #-12]
   49850:	add	r3, r3, #4
   49854:	ldr	r1, [fp, #-36]	; 0xffffffdc
   49858:	mov	r0, r3
   4985c:	bl	47a70 <__assert_fail@plt+0x35384>
   49860:	str	r0, [fp, #-16]
   49864:	ldr	r3, [fp, #-16]
   49868:	cmp	r3, #0
   4986c:	movne	r3, #1
   49870:	moveq	r3, #0
   49874:	uxtb	r3, r3
   49878:	cmp	r3, #0
   4987c:	beq	49890 <__assert_fail@plt+0x371a4>
   49880:	ldr	r0, [fp, #-12]
   49884:	bl	3fe0c <__assert_fail@plt+0x2d720>
   49888:	mov	r3, #0
   4988c:	b	49a28 <__assert_fail@plt+0x3733c>
   49890:	ldr	r3, [fp, #-12]
   49894:	add	r2, r3, #4
   49898:	ldr	r3, [fp, #-12]
   4989c:	str	r2, [r3, #40]	; 0x28
   498a0:	mov	r3, #0
   498a4:	str	r3, [fp, #-8]
   498a8:	b	499d0 <__assert_fail@plt+0x372e4>
   498ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   498b0:	ldr	r2, [r3]
   498b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   498b8:	ldr	r1, [r3, #8]
   498bc:	ldr	r3, [fp, #-8]
   498c0:	lsl	r3, r3, #2
   498c4:	add	r3, r1, r3
   498c8:	ldr	r3, [r3]
   498cc:	lsl	r3, r3, #3
   498d0:	add	r3, r2, r3
   498d4:	str	r3, [fp, #-20]	; 0xffffffec
   498d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   498dc:	ldrb	r3, [r3, #4]
   498e0:	str	r3, [fp, #-24]	; 0xffffffe8
   498e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   498e8:	cmp	r3, #1
   498ec:	bne	4990c <__assert_fail@plt+0x37220>
   498f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   498f4:	ldr	r2, [r3, #4]
   498f8:	mov	r3, #65280	; 0xff00
   498fc:	movt	r3, #3
   49900:	and	r3, r3, r2
   49904:	cmp	r3, #0
   49908:	beq	499c0 <__assert_fail@plt+0x372d4>
   4990c:	ldr	r3, [fp, #-12]
   49910:	ldrb	r3, [r3, #52]	; 0x34
   49914:	ubfx	r3, r3, #5, #1
   49918:	uxtb	r2, r3
   4991c:	ldr	r3, [fp, #-20]	; 0xffffffec
   49920:	ldrb	r3, [r3, #6]
   49924:	ubfx	r3, r3, #4, #1
   49928:	uxtb	r3, r3
   4992c:	orr	r3, r2, r3
   49930:	uxtb	r1, r3
   49934:	ldr	r2, [fp, #-12]
   49938:	ldrb	r3, [r2, #52]	; 0x34
   4993c:	bfi	r3, r1, #5, #1
   49940:	strb	r3, [r2, #52]	; 0x34
   49944:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49948:	cmp	r3, #2
   4994c:	bne	49964 <__assert_fail@plt+0x37278>
   49950:	ldr	r2, [fp, #-12]
   49954:	ldrb	r3, [r2, #52]	; 0x34
   49958:	orr	r3, r3, #16
   4995c:	strb	r3, [r2, #52]	; 0x34
   49960:	b	499c4 <__assert_fail@plt+0x372d8>
   49964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49968:	cmp	r3, #4
   4996c:	bne	49984 <__assert_fail@plt+0x37298>
   49970:	ldr	r2, [fp, #-12]
   49974:	ldrb	r3, [r2, #52]	; 0x34
   49978:	orr	r3, r3, #64	; 0x40
   4997c:	strb	r3, [r2, #52]	; 0x34
   49980:	b	499c4 <__assert_fail@plt+0x372d8>
   49984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49988:	cmp	r3, #12
   4998c:	beq	499ac <__assert_fail@plt+0x372c0>
   49990:	ldr	r3, [fp, #-20]	; 0xffffffec
   49994:	ldr	r2, [r3, #4]
   49998:	mov	r3, #65280	; 0xff00
   4999c:	movt	r3, #3
   499a0:	and	r3, r3, r2
   499a4:	cmp	r3, #0
   499a8:	beq	499c4 <__assert_fail@plt+0x372d8>
   499ac:	ldr	r2, [fp, #-12]
   499b0:	ldrb	r3, [r2, #52]	; 0x34
   499b4:	orr	r3, r3, #128	; 0x80
   499b8:	strb	r3, [r2, #52]	; 0x34
   499bc:	b	499c4 <__assert_fail@plt+0x372d8>
   499c0:	nop	{0}
   499c4:	ldr	r3, [fp, #-8]
   499c8:	add	r3, r3, #1
   499cc:	str	r3, [fp, #-8]
   499d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   499d4:	ldr	r3, [r3, #4]
   499d8:	ldr	r2, [fp, #-8]
   499dc:	cmp	r2, r3
   499e0:	blt	498ac <__assert_fail@plt+0x371c0>
   499e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   499e8:	ldr	r1, [fp, #-12]
   499ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   499f0:	bl	49528 <__assert_fail@plt+0x36e3c>
   499f4:	str	r0, [fp, #-16]
   499f8:	ldr	r3, [fp, #-16]
   499fc:	cmp	r3, #0
   49a00:	movne	r3, #1
   49a04:	moveq	r3, #0
   49a08:	uxtb	r3, r3
   49a0c:	cmp	r3, #0
   49a10:	beq	49a24 <__assert_fail@plt+0x37338>
   49a14:	ldr	r0, [fp, #-12]
   49a18:	bl	4973c <__assert_fail@plt+0x37050>
   49a1c:	mov	r3, #0
   49a20:	str	r3, [fp, #-12]
   49a24:	ldr	r3, [fp, #-12]
   49a28:	mov	r0, r3
   49a2c:	sub	sp, fp, #4
   49a30:	ldr	fp, [sp]
   49a34:	add	sp, sp, #4
   49a38:	pop	{pc}		; (ldr pc, [sp], #4)
   49a3c:	str	fp, [sp, #-8]!
   49a40:	str	lr, [sp, #4]
   49a44:	add	fp, sp, #4
   49a48:	sub	sp, sp, #48	; 0x30
   49a4c:	str	r0, [fp, #-40]	; 0xffffffd8
   49a50:	str	r1, [fp, #-44]	; 0xffffffd4
   49a54:	str	r2, [fp, #-48]	; 0xffffffd0
   49a58:	str	r3, [fp, #-52]	; 0xffffffcc
   49a5c:	mov	r3, #0
   49a60:	str	r3, [fp, #-12]
   49a64:	mov	r1, #1
   49a68:	mov	r0, #56	; 0x38
   49a6c:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   49a70:	mov	r3, r0
   49a74:	str	r3, [fp, #-16]
   49a78:	ldr	r3, [fp, #-16]
   49a7c:	cmp	r3, #0
   49a80:	moveq	r3, #1
   49a84:	movne	r3, #0
   49a88:	uxtb	r3, r3
   49a8c:	cmp	r3, #0
   49a90:	beq	49a9c <__assert_fail@plt+0x373b0>
   49a94:	mov	r3, #0
   49a98:	b	49db8 <__assert_fail@plt+0x376cc>
   49a9c:	ldr	r3, [fp, #-16]
   49aa0:	add	r3, r3, #4
   49aa4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49aa8:	mov	r0, r3
   49aac:	bl	47a70 <__assert_fail@plt+0x35384>
   49ab0:	str	r0, [fp, #-20]	; 0xffffffec
   49ab4:	ldr	r3, [fp, #-20]	; 0xffffffec
   49ab8:	cmp	r3, #0
   49abc:	movne	r3, #1
   49ac0:	moveq	r3, #0
   49ac4:	uxtb	r3, r3
   49ac8:	cmp	r3, #0
   49acc:	beq	49ae0 <__assert_fail@plt+0x373f4>
   49ad0:	ldr	r0, [fp, #-16]
   49ad4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   49ad8:	mov	r3, #0
   49adc:	b	49db8 <__assert_fail@plt+0x376cc>
   49ae0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   49ae4:	and	r3, r3, #15
   49ae8:	uxtb	r1, r3
   49aec:	ldr	r2, [fp, #-16]
   49af0:	ldrb	r3, [r2, #52]	; 0x34
   49af4:	bfi	r3, r1, #0, #4
   49af8:	strb	r3, [r2, #52]	; 0x34
   49afc:	ldr	r3, [fp, #-16]
   49b00:	add	r2, r3, #4
   49b04:	ldr	r3, [fp, #-16]
   49b08:	str	r2, [r3, #40]	; 0x28
   49b0c:	mov	r3, #0
   49b10:	str	r3, [fp, #-8]
   49b14:	b	49d60 <__assert_fail@plt+0x37674>
   49b18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   49b1c:	ldr	r2, [r3]
   49b20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49b24:	ldr	r1, [r3, #8]
   49b28:	ldr	r3, [fp, #-8]
   49b2c:	lsl	r3, r3, #2
   49b30:	add	r3, r1, r3
   49b34:	ldr	r3, [r3]
   49b38:	lsl	r3, r3, #3
   49b3c:	add	r3, r2, r3
   49b40:	str	r3, [fp, #-24]	; 0xffffffe8
   49b44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49b48:	ldrb	r3, [r3, #4]
   49b4c:	str	r3, [fp, #-28]	; 0xffffffe4
   49b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49b54:	ldr	r3, [r3, #4]
   49b58:	ubfx	r3, r3, #8, #10
   49b5c:	uxth	r3, r3
   49b60:	str	r3, [fp, #-32]	; 0xffffffe0
   49b64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49b68:	cmp	r3, #1
   49b6c:	bne	49b7c <__assert_fail@plt+0x37490>
   49b70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49b74:	cmp	r3, #0
   49b78:	beq	49d50 <__assert_fail@plt+0x37664>
   49b7c:	ldr	r3, [fp, #-16]
   49b80:	ldrb	r3, [r3, #52]	; 0x34
   49b84:	ubfx	r3, r3, #5, #1
   49b88:	uxtb	r2, r3
   49b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49b90:	ldrb	r3, [r3, #6]
   49b94:	ubfx	r3, r3, #4, #1
   49b98:	uxtb	r3, r3
   49b9c:	orr	r3, r2, r3
   49ba0:	uxtb	r1, r3
   49ba4:	ldr	r2, [fp, #-16]
   49ba8:	ldrb	r3, [r2, #52]	; 0x34
   49bac:	bfi	r3, r1, #5, #1
   49bb0:	strb	r3, [r2, #52]	; 0x34
   49bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49bb8:	cmp	r3, #2
   49bbc:	bne	49bd4 <__assert_fail@plt+0x374e8>
   49bc0:	ldr	r2, [fp, #-16]
   49bc4:	ldrb	r3, [r2, #52]	; 0x34
   49bc8:	orr	r3, r3, #16
   49bcc:	strb	r3, [r2, #52]	; 0x34
   49bd0:	b	49bf0 <__assert_fail@plt+0x37504>
   49bd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49bd8:	cmp	r3, #4
   49bdc:	bne	49bf0 <__assert_fail@plt+0x37504>
   49be0:	ldr	r2, [fp, #-16]
   49be4:	ldrb	r3, [r2, #52]	; 0x34
   49be8:	orr	r3, r3, #64	; 0x40
   49bec:	strb	r3, [r2, #52]	; 0x34
   49bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49bf4:	cmp	r3, #0
   49bf8:	beq	49d54 <__assert_fail@plt+0x37668>
   49bfc:	ldr	r3, [fp, #-16]
   49c00:	ldr	r2, [r3, #40]	; 0x28
   49c04:	ldr	r3, [fp, #-16]
   49c08:	add	r3, r3, #4
   49c0c:	cmp	r2, r3
   49c10:	bne	49ca4 <__assert_fail@plt+0x375b8>
   49c14:	mov	r0, #12
   49c18:	bl	43510 <__assert_fail@plt+0x30e24>
   49c1c:	mov	r3, r0
   49c20:	str	r3, [fp, #-36]	; 0xffffffdc
   49c24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49c28:	cmp	r3, #0
   49c2c:	moveq	r3, #1
   49c30:	movne	r3, #0
   49c34:	uxtb	r3, r3
   49c38:	cmp	r3, #0
   49c3c:	beq	49c50 <__assert_fail@plt+0x37564>
   49c40:	ldr	r0, [fp, #-16]
   49c44:	bl	4973c <__assert_fail@plt+0x37050>
   49c48:	mov	r3, #0
   49c4c:	b	49db8 <__assert_fail@plt+0x376cc>
   49c50:	ldr	r3, [fp, #-16]
   49c54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   49c58:	str	r2, [r3, #40]	; 0x28
   49c5c:	ldr	r3, [fp, #-16]
   49c60:	ldr	r3, [r3, #40]	; 0x28
   49c64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49c68:	mov	r0, r3
   49c6c:	bl	47a70 <__assert_fail@plt+0x35384>
   49c70:	mov	r3, r0
   49c74:	cmp	r3, #0
   49c78:	beq	49c8c <__assert_fail@plt+0x375a0>
   49c7c:	ldr	r0, [fp, #-16]
   49c80:	bl	4973c <__assert_fail@plt+0x37050>
   49c84:	mov	r3, #0
   49c88:	b	49db8 <__assert_fail@plt+0x376cc>
   49c8c:	mov	r3, #0
   49c90:	str	r3, [fp, #-12]
   49c94:	ldr	r2, [fp, #-16]
   49c98:	ldrb	r3, [r2, #52]	; 0x34
   49c9c:	orr	r3, r3, #128	; 0x80
   49ca0:	strb	r3, [r2, #52]	; 0x34
   49ca4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49ca8:	and	r3, r3, #1
   49cac:	cmp	r3, #0
   49cb0:	beq	49cc4 <__assert_fail@plt+0x375d8>
   49cb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   49cb8:	and	r3, r3, #1
   49cbc:	cmp	r3, #0
   49cc0:	beq	49d24 <__assert_fail@plt+0x37638>
   49cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49cc8:	and	r3, r3, #2
   49ccc:	cmp	r3, #0
   49cd0:	beq	49ce4 <__assert_fail@plt+0x375f8>
   49cd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   49cd8:	and	r3, r3, #1
   49cdc:	cmp	r3, #0
   49ce0:	bne	49d24 <__assert_fail@plt+0x37638>
   49ce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49ce8:	and	r3, r3, #16
   49cec:	cmp	r3, #0
   49cf0:	beq	49d04 <__assert_fail@plt+0x37618>
   49cf4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   49cf8:	and	r3, r3, #2
   49cfc:	cmp	r3, #0
   49d00:	beq	49d24 <__assert_fail@plt+0x37638>
   49d04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49d08:	and	r3, r3, #64	; 0x40
   49d0c:	cmp	r3, #0
   49d10:	beq	49d54 <__assert_fail@plt+0x37668>
   49d14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   49d18:	and	r3, r3, #4
   49d1c:	cmp	r3, #0
   49d20:	bne	49d54 <__assert_fail@plt+0x37668>
   49d24:	ldr	r3, [fp, #-16]
   49d28:	add	r0, r3, #4
   49d2c:	ldr	r2, [fp, #-8]
   49d30:	ldr	r3, [fp, #-12]
   49d34:	sub	r3, r2, r3
   49d38:	mov	r1, r3
   49d3c:	bl	48d10 <__assert_fail@plt+0x36624>
   49d40:	ldr	r3, [fp, #-12]
   49d44:	add	r3, r3, #1
   49d48:	str	r3, [fp, #-12]
   49d4c:	b	49d54 <__assert_fail@plt+0x37668>
   49d50:	nop	{0}
   49d54:	ldr	r3, [fp, #-8]
   49d58:	add	r3, r3, #1
   49d5c:	str	r3, [fp, #-8]
   49d60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   49d64:	ldr	r3, [r3, #4]
   49d68:	ldr	r2, [fp, #-8]
   49d6c:	cmp	r2, r3
   49d70:	blt	49b18 <__assert_fail@plt+0x3742c>
   49d74:	ldr	r2, [fp, #-52]	; 0xffffffcc
   49d78:	ldr	r1, [fp, #-16]
   49d7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   49d80:	bl	49528 <__assert_fail@plt+0x36e3c>
   49d84:	str	r0, [fp, #-20]	; 0xffffffec
   49d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   49d8c:	cmp	r3, #0
   49d90:	movne	r3, #1
   49d94:	moveq	r3, #0
   49d98:	uxtb	r3, r3
   49d9c:	cmp	r3, #0
   49da0:	beq	49db4 <__assert_fail@plt+0x376c8>
   49da4:	ldr	r0, [fp, #-16]
   49da8:	bl	4973c <__assert_fail@plt+0x37050>
   49dac:	mov	r3, #0
   49db0:	str	r3, [fp, #-16]
   49db4:	ldr	r3, [fp, #-16]
   49db8:	mov	r0, r3
   49dbc:	sub	sp, fp, #4
   49dc0:	ldr	fp, [sp]
   49dc4:	add	sp, sp, #4
   49dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   49dcc:	str	fp, [sp, #-8]!
   49dd0:	str	lr, [sp, #4]
   49dd4:	add	fp, sp, #4
   49dd8:	sub	sp, sp, #24
   49ddc:	str	r0, [fp, #-16]
   49de0:	str	r1, [fp, #-20]	; 0xffffffec
   49de4:	str	r2, [fp, #-24]	; 0xffffffe8
   49de8:	movw	r3, #53408	; 0xd0a0
   49dec:	movt	r3, #7
   49df0:	ldr	r3, [r3]
   49df4:	and	r3, r3, #33554432	; 0x2000000
   49df8:	cmp	r3, #0
   49dfc:	movne	r3, #1
   49e00:	moveq	r3, #0
   49e04:	uxtb	r1, r3
   49e08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49e0c:	ldrb	r3, [r2, #28]
   49e10:	bfi	r3, r1, #4, #1
   49e14:	strb	r3, [r2, #28]
   49e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   49e1c:	ldrb	r3, [r2, #28]
   49e20:	orr	r3, r3, #128	; 0x80
   49e24:	strb	r3, [r2, #28]
   49e28:	movw	r3, #53408	; 0xd0a0
   49e2c:	movt	r3, #7
   49e30:	ldr	r3, [r3]
   49e34:	ldr	r2, [fp, #-20]	; 0xffffffec
   49e38:	ldr	r1, [fp, #-16]
   49e3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   49e40:	bl	4adbc <__assert_fail@plt+0x386d0>
   49e44:	str	r0, [fp, #-8]
   49e48:	ldr	r3, [fp, #-8]
   49e4c:	cmp	r3, #0
   49e50:	bne	49e5c <__assert_fail@plt+0x37770>
   49e54:	mov	r3, #0
   49e58:	b	49e84 <__assert_fail@plt+0x37798>
   49e5c:	movw	r3, #47748	; 0xba84
   49e60:	movt	r3, #6
   49e64:	ldr	r2, [fp, #-8]
   49e68:	ldr	r2, [r3, r2, lsl #2]
   49e6c:	movw	r3, #47364	; 0xb904
   49e70:	movt	r3, #6
   49e74:	add	r3, r2, r3
   49e78:	mov	r0, r3
   49e7c:	bl	12398 <gettext@plt>
   49e80:	mov	r3, r0
   49e84:	mov	r0, r3
   49e88:	sub	sp, fp, #4
   49e8c:	ldr	fp, [sp]
   49e90:	add	sp, sp, #4
   49e94:	pop	{pc}		; (ldr pc, [sp], #4)
   49e98:	push	{fp}		; (str fp, [sp, #-4]!)
   49e9c:	add	fp, sp, #0
   49ea0:	sub	sp, sp, #20
   49ea4:	str	r0, [fp, #-16]
   49ea8:	movw	r3, #53408	; 0xd0a0
   49eac:	movt	r3, #7
   49eb0:	ldr	r3, [r3]
   49eb4:	str	r3, [fp, #-8]
   49eb8:	movw	r3, #53408	; 0xd0a0
   49ebc:	movt	r3, #7
   49ec0:	ldr	r2, [fp, #-16]
   49ec4:	str	r2, [r3]
   49ec8:	ldr	r3, [fp, #-8]
   49ecc:	mov	r0, r3
   49ed0:	add	sp, fp, #0
   49ed4:	pop	{fp}		; (ldr fp, [sp], #4)
   49ed8:	bx	lr
   49edc:	str	fp, [sp, #-8]!
   49ee0:	str	lr, [sp, #4]
   49ee4:	add	fp, sp, #4
   49ee8:	sub	sp, sp, #16
   49eec:	str	r0, [fp, #-16]
   49ef0:	ldr	r3, [fp, #-16]
   49ef4:	ldr	r3, [r3]
   49ef8:	str	r3, [fp, #-8]
   49efc:	ldr	r3, [fp, #-16]
   49f00:	ldr	r3, [r3, #16]
   49f04:	str	r3, [fp, #-12]
   49f08:	mov	r2, #256	; 0x100
   49f0c:	mov	r1, #0
   49f10:	ldr	r0, [fp, #-12]
   49f14:	bl	12434 <memset@plt>
   49f18:	ldr	r3, [fp, #-8]
   49f1c:	ldr	r3, [r3, #36]	; 0x24
   49f20:	ldr	r2, [fp, #-12]
   49f24:	mov	r1, r3
   49f28:	ldr	r0, [fp, #-16]
   49f2c:	bl	49fe8 <__assert_fail@plt+0x378fc>
   49f30:	ldr	r3, [fp, #-8]
   49f34:	ldr	r2, [r3, #36]	; 0x24
   49f38:	ldr	r3, [fp, #-8]
   49f3c:	ldr	r3, [r3, #40]	; 0x28
   49f40:	cmp	r2, r3
   49f44:	beq	49f60 <__assert_fail@plt+0x37874>
   49f48:	ldr	r3, [fp, #-8]
   49f4c:	ldr	r3, [r3, #40]	; 0x28
   49f50:	ldr	r2, [fp, #-12]
   49f54:	mov	r1, r3
   49f58:	ldr	r0, [fp, #-16]
   49f5c:	bl	49fe8 <__assert_fail@plt+0x378fc>
   49f60:	ldr	r3, [fp, #-8]
   49f64:	ldr	r2, [r3, #36]	; 0x24
   49f68:	ldr	r3, [fp, #-8]
   49f6c:	ldr	r3, [r3, #44]	; 0x2c
   49f70:	cmp	r2, r3
   49f74:	beq	49f90 <__assert_fail@plt+0x378a4>
   49f78:	ldr	r3, [fp, #-8]
   49f7c:	ldr	r3, [r3, #44]	; 0x2c
   49f80:	ldr	r2, [fp, #-12]
   49f84:	mov	r1, r3
   49f88:	ldr	r0, [fp, #-16]
   49f8c:	bl	49fe8 <__assert_fail@plt+0x378fc>
   49f90:	ldr	r3, [fp, #-8]
   49f94:	ldr	r2, [r3, #36]	; 0x24
   49f98:	ldr	r3, [fp, #-8]
   49f9c:	ldr	r3, [r3, #48]	; 0x30
   49fa0:	cmp	r2, r3
   49fa4:	beq	49fc0 <__assert_fail@plt+0x378d4>
   49fa8:	ldr	r3, [fp, #-8]
   49fac:	ldr	r3, [r3, #48]	; 0x30
   49fb0:	ldr	r2, [fp, #-12]
   49fb4:	mov	r1, r3
   49fb8:	ldr	r0, [fp, #-16]
   49fbc:	bl	49fe8 <__assert_fail@plt+0x378fc>
   49fc0:	ldr	r2, [fp, #-16]
   49fc4:	ldrb	r3, [r2, #28]
   49fc8:	orr	r3, r3, #8
   49fcc:	strb	r3, [r2, #28]
   49fd0:	mov	r3, #0
   49fd4:	mov	r0, r3
   49fd8:	sub	sp, fp, #4
   49fdc:	ldr	fp, [sp]
   49fe0:	add	sp, sp, #4
   49fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   49fe8:	str	fp, [sp, #-8]!
   49fec:	str	lr, [sp, #4]
   49ff0:	add	fp, sp, #4
   49ff4:	sub	sp, sp, #440	; 0x1b8
   49ff8:	str	r0, [fp, #-432]	; 0xfffffe50
   49ffc:	str	r1, [fp, #-436]	; 0xfffffe4c
   4a000:	str	r2, [fp, #-440]	; 0xfffffe48
   4a004:	ldr	r3, [fp, #-432]	; 0xfffffe50
   4a008:	ldr	r3, [r3]
   4a00c:	str	r3, [fp, #-36]	; 0xffffffdc
   4a010:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a014:	ldr	r3, [r3, #92]	; 0x5c
   4a018:	cmp	r3, #1
   4a01c:	bne	4a03c <__assert_fail@plt+0x37950>
   4a020:	ldr	r3, [fp, #-432]	; 0xfffffe50
   4a024:	ldr	r3, [r3, #12]
   4a028:	and	r3, r3, #4194304	; 0x400000
   4a02c:	cmp	r3, #0
   4a030:	beq	4a03c <__assert_fail@plt+0x37950>
   4a034:	mov	r3, #1
   4a038:	b	4a040 <__assert_fail@plt+0x37954>
   4a03c:	mov	r3, #0
   4a040:	strb	r3, [fp, #-37]	; 0xffffffdb
   4a044:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   4a048:	and	r3, r3, #1
   4a04c:	strb	r3, [fp, #-37]	; 0xffffffdb
   4a050:	mov	r3, #0
   4a054:	str	r3, [fp, #-8]
   4a058:	b	4a6fc <__assert_fail@plt+0x38010>
   4a05c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   4a060:	ldr	r2, [r3, #12]
   4a064:	ldr	r3, [fp, #-8]
   4a068:	lsl	r3, r3, #2
   4a06c:	add	r3, r2, r3
   4a070:	ldr	r3, [r3]
   4a074:	str	r3, [fp, #-12]
   4a078:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a07c:	ldr	r2, [r3]
   4a080:	ldr	r3, [fp, #-12]
   4a084:	lsl	r3, r3, #3
   4a088:	add	r3, r2, r3
   4a08c:	ldrb	r3, [r3, #4]
   4a090:	str	r3, [fp, #-44]	; 0xffffffd4
   4a094:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a098:	cmp	r3, #1
   4a09c:	bne	4a2d0 <__assert_fail@plt+0x37be4>
   4a0a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a0a4:	ldr	r2, [r3]
   4a0a8:	ldr	r3, [fp, #-12]
   4a0ac:	lsl	r3, r3, #3
   4a0b0:	add	r3, r2, r3
   4a0b4:	ldrb	r3, [r3]
   4a0b8:	mov	r2, r3
   4a0bc:	ldr	r3, [fp, #-440]	; 0xfffffe48
   4a0c0:	str	r3, [fp, #-56]	; 0xffffffc8
   4a0c4:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   4a0c8:	strb	r3, [fp, #-57]	; 0xffffffc7
   4a0cc:	str	r2, [fp, #-64]	; 0xffffffc0
   4a0d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4a0d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4a0d8:	add	r3, r2, r3
   4a0dc:	mov	r2, #1
   4a0e0:	strb	r2, [r3]
   4a0e4:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   4a0e8:	cmp	r3, #0
   4a0ec:	beq	4a110 <__assert_fail@plt+0x37a24>
   4a0f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   4a0f4:	bl	12110 <tolower@plt>
   4a0f8:	mov	r3, r0
   4a0fc:	mov	r2, r3
   4a100:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4a104:	add	r3, r3, r2
   4a108:	mov	r2, #1
   4a10c:	strb	r2, [r3]
   4a110:	ldr	r3, [fp, #-432]	; 0xfffffe50
   4a114:	ldr	r3, [r3, #12]
   4a118:	and	r3, r3, #4194304	; 0x400000
   4a11c:	cmp	r3, #0
   4a120:	beq	4a6f0 <__assert_fail@plt+0x38004>
   4a124:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a128:	ldr	r3, [r3, #92]	; 0x5c
   4a12c:	cmp	r3, #1
   4a130:	ble	4a6f0 <__assert_fail@plt+0x38004>
   4a134:	sub	r3, fp, #140	; 0x8c
   4a138:	str	r3, [fp, #-16]
   4a13c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a140:	ldr	r2, [r3]
   4a144:	ldr	r3, [fp, #-12]
   4a148:	lsl	r3, r3, #3
   4a14c:	add	r2, r2, r3
   4a150:	ldr	r3, [fp, #-16]
   4a154:	add	r1, r3, #1
   4a158:	str	r1, [fp, #-16]
   4a15c:	ldrb	r2, [r2]
   4a160:	strb	r2, [r3]
   4a164:	b	4a190 <__assert_fail@plt+0x37aa4>
   4a168:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a16c:	ldr	r2, [r3]
   4a170:	ldr	r3, [fp, #-12]
   4a174:	lsl	r3, r3, #3
   4a178:	add	r2, r2, r3
   4a17c:	ldr	r3, [fp, #-16]
   4a180:	add	r1, r3, #1
   4a184:	str	r1, [fp, #-16]
   4a188:	ldrb	r2, [r2]
   4a18c:	strb	r2, [r3]
   4a190:	ldr	r3, [fp, #-12]
   4a194:	add	r3, r3, #1
   4a198:	str	r3, [fp, #-12]
   4a19c:	ldr	r2, [fp, #-12]
   4a1a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a1a4:	ldr	r3, [r3, #8]
   4a1a8:	cmp	r2, r3
   4a1ac:	bcs	4a1f8 <__assert_fail@plt+0x37b0c>
   4a1b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a1b4:	ldr	r2, [r3]
   4a1b8:	ldr	r3, [fp, #-12]
   4a1bc:	lsl	r3, r3, #3
   4a1c0:	add	r3, r2, r3
   4a1c4:	ldrb	r3, [r3, #4]
   4a1c8:	cmp	r3, #1
   4a1cc:	bne	4a1f8 <__assert_fail@plt+0x37b0c>
   4a1d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a1d4:	ldr	r2, [r3]
   4a1d8:	ldr	r3, [fp, #-12]
   4a1dc:	lsl	r3, r3, #3
   4a1e0:	add	r3, r2, r3
   4a1e4:	ldrb	r3, [r3, #6]
   4a1e8:	and	r3, r3, #32
   4a1ec:	uxtb	r3, r3
   4a1f0:	cmp	r3, #0
   4a1f4:	bne	4a168 <__assert_fail@plt+0x37a7c>
   4a1f8:	sub	r3, fp, #152	; 0x98
   4a1fc:	mov	r2, #8
   4a200:	mov	r1, #0
   4a204:	mov	r0, r3
   4a208:	bl	12434 <memset@plt>
   4a20c:	sub	r3, fp, #140	; 0x8c
   4a210:	ldr	r2, [fp, #-16]
   4a214:	sub	r3, r2, r3
   4a218:	mov	r2, r3
   4a21c:	sub	r3, fp, #152	; 0x98
   4a220:	sub	r1, fp, #140	; 0x8c
   4a224:	sub	r0, fp, #144	; 0x90
   4a228:	bl	435a0 <__assert_fail@plt+0x30eb4>
   4a22c:	mov	r1, r0
   4a230:	sub	r3, fp, #140	; 0x8c
   4a234:	ldr	r2, [fp, #-16]
   4a238:	sub	r3, r2, r3
   4a23c:	cmp	r1, r3
   4a240:	bne	4a6f0 <__assert_fail@plt+0x38004>
   4a244:	ldr	r3, [fp, #-144]	; 0xffffff70
   4a248:	mov	r0, r3
   4a24c:	bl	12128 <towlower@plt>
   4a250:	mov	r1, r0
   4a254:	sub	r2, fp, #152	; 0x98
   4a258:	sub	r3, fp, #140	; 0x8c
   4a25c:	mov	r0, r3
   4a260:	bl	11fc0 <wcrtomb@plt>
   4a264:	mov	r3, r0
   4a268:	cmn	r3, #1
   4a26c:	beq	4a6f0 <__assert_fail@plt+0x38004>
   4a270:	ldrb	r3, [fp, #-140]	; 0xffffff74
   4a274:	mov	r2, r3
   4a278:	ldr	r3, [fp, #-440]	; 0xfffffe48
   4a27c:	str	r3, [fp, #-68]	; 0xffffffbc
   4a280:	mov	r3, #0
   4a284:	strb	r3, [fp, #-69]	; 0xffffffbb
   4a288:	str	r2, [fp, #-76]	; 0xffffffb4
   4a28c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   4a290:	ldr	r2, [fp, #-68]	; 0xffffffbc
   4a294:	add	r3, r2, r3
   4a298:	mov	r2, #1
   4a29c:	strb	r2, [r3]
   4a2a0:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   4a2a4:	cmp	r3, #0
   4a2a8:	beq	4a6f0 <__assert_fail@plt+0x38004>
   4a2ac:	ldr	r0, [fp, #-76]	; 0xffffffb4
   4a2b0:	bl	12110 <tolower@plt>
   4a2b4:	mov	r3, r0
   4a2b8:	mov	r2, r3
   4a2bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   4a2c0:	add	r3, r3, r2
   4a2c4:	mov	r2, #1
   4a2c8:	strb	r2, [r3]
   4a2cc:	b	4a6f0 <__assert_fail@plt+0x38004>
   4a2d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a2d4:	cmp	r3, #3
   4a2d8:	bne	4a3d8 <__assert_fail@plt+0x37cec>
   4a2dc:	mov	r3, #0
   4a2e0:	str	r3, [fp, #-20]	; 0xffffffec
   4a2e4:	mov	r3, #0
   4a2e8:	str	r3, [fp, #-24]	; 0xffffffe8
   4a2ec:	b	4a3c8 <__assert_fail@plt+0x37cdc>
   4a2f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a2f4:	ldr	r2, [r3]
   4a2f8:	ldr	r3, [fp, #-12]
   4a2fc:	lsl	r3, r3, #3
   4a300:	add	r3, r2, r3
   4a304:	ldr	r2, [r3]
   4a308:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a30c:	lsl	r3, r3, #2
   4a310:	add	r3, r2, r3
   4a314:	ldr	r3, [r3]
   4a318:	str	r3, [fp, #-48]	; 0xffffffd0
   4a31c:	mov	r3, #0
   4a320:	str	r3, [fp, #-28]	; 0xffffffe4
   4a324:	b	4a3b0 <__assert_fail@plt+0x37cc4>
   4a328:	ldr	r2, [fp, #-48]	; 0xffffffd0
   4a32c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a330:	lsr	r3, r2, r3
   4a334:	and	r3, r3, #1
   4a338:	cmp	r3, #0
   4a33c:	beq	4a398 <__assert_fail@plt+0x37cac>
   4a340:	ldr	r3, [fp, #-440]	; 0xfffffe48
   4a344:	str	r3, [fp, #-80]	; 0xffffffb0
   4a348:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   4a34c:	strb	r3, [fp, #-81]	; 0xffffffaf
   4a350:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a354:	str	r3, [fp, #-88]	; 0xffffffa8
   4a358:	ldr	r3, [fp, #-88]	; 0xffffffa8
   4a35c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   4a360:	add	r3, r2, r3
   4a364:	mov	r2, #1
   4a368:	strb	r2, [r3]
   4a36c:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   4a370:	cmp	r3, #0
   4a374:	beq	4a398 <__assert_fail@plt+0x37cac>
   4a378:	ldr	r0, [fp, #-88]	; 0xffffffa8
   4a37c:	bl	12110 <tolower@plt>
   4a380:	mov	r3, r0
   4a384:	mov	r2, r3
   4a388:	ldr	r3, [fp, #-80]	; 0xffffffb0
   4a38c:	add	r3, r3, r2
   4a390:	mov	r2, #1
   4a394:	strb	r2, [r3]
   4a398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a39c:	add	r3, r3, #1
   4a3a0:	str	r3, [fp, #-28]	; 0xffffffe4
   4a3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a3a8:	add	r3, r3, #1
   4a3ac:	str	r3, [fp, #-24]	; 0xffffffe8
   4a3b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4a3b4:	cmp	r3, #31
   4a3b8:	ble	4a328 <__assert_fail@plt+0x37c3c>
   4a3bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a3c0:	add	r3, r3, #1
   4a3c4:	str	r3, [fp, #-20]	; 0xffffffec
   4a3c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a3cc:	cmp	r3, #7
   4a3d0:	ble	4a2f0 <__assert_fail@plt+0x37c04>
   4a3d4:	b	4a6f0 <__assert_fail@plt+0x38004>
   4a3d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a3dc:	cmp	r3, #6
   4a3e0:	bne	4a69c <__assert_fail@plt+0x37fb0>
   4a3e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a3e8:	ldr	r2, [r3]
   4a3ec:	ldr	r3, [fp, #-12]
   4a3f0:	lsl	r3, r3, #3
   4a3f4:	add	r3, r2, r3
   4a3f8:	ldr	r3, [r3]
   4a3fc:	str	r3, [fp, #-52]	; 0xffffffcc
   4a400:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a404:	ldr	r3, [r3, #92]	; 0x5c
   4a408:	cmp	r3, #1
   4a40c:	ble	4a500 <__assert_fail@plt+0x37e14>
   4a410:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4a414:	ldr	r3, [r3, #36]	; 0x24
   4a418:	cmp	r3, #0
   4a41c:	bne	4a448 <__assert_fail@plt+0x37d5c>
   4a420:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4a424:	ldrb	r3, [r3, #16]
   4a428:	and	r3, r3, #1
   4a42c:	uxtb	r3, r3
   4a430:	cmp	r3, #0
   4a434:	bne	4a448 <__assert_fail@plt+0x37d5c>
   4a438:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4a43c:	ldr	r3, [r3, #32]
   4a440:	cmp	r3, #0
   4a444:	beq	4a500 <__assert_fail@plt+0x37e14>
   4a448:	mov	r3, #0
   4a44c:	strb	r3, [fp, #-153]	; 0xffffff67
   4a450:	sub	r3, fp, #164	; 0xa4
   4a454:	mov	r2, #8
   4a458:	mov	r1, #0
   4a45c:	mov	r0, r3
   4a460:	bl	12434 <memset@plt>
   4a464:	sub	r3, fp, #164	; 0xa4
   4a468:	sub	r1, fp, #153	; 0x99
   4a46c:	mov	r2, #1
   4a470:	mov	r0, #0
   4a474:	bl	435a0 <__assert_fail@plt+0x30eb4>
   4a478:	mov	r3, r0
   4a47c:	cmn	r3, #2
   4a480:	bne	4a4e0 <__assert_fail@plt+0x37df4>
   4a484:	ldrb	r3, [fp, #-153]	; 0xffffff67
   4a488:	mov	r2, r3
   4a48c:	ldr	r3, [fp, #-440]	; 0xfffffe48
   4a490:	str	r3, [fp, #-92]	; 0xffffffa4
   4a494:	mov	r3, #0
   4a498:	strb	r3, [fp, #-93]	; 0xffffffa3
   4a49c:	str	r2, [fp, #-100]	; 0xffffff9c
   4a4a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   4a4a4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   4a4a8:	add	r3, r2, r3
   4a4ac:	mov	r2, #1
   4a4b0:	strb	r2, [r3]
   4a4b4:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   4a4b8:	cmp	r3, #0
   4a4bc:	beq	4a4e0 <__assert_fail@plt+0x37df4>
   4a4c0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   4a4c4:	bl	12110 <tolower@plt>
   4a4c8:	mov	r3, r0
   4a4cc:	mov	r2, r3
   4a4d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   4a4d4:	add	r3, r3, r2
   4a4d8:	mov	r2, #1
   4a4dc:	strb	r2, [r3]
   4a4e0:	ldrb	r3, [fp, #-153]	; 0xffffff67
   4a4e4:	add	r3, r3, #1
   4a4e8:	uxtb	r3, r3
   4a4ec:	strb	r3, [fp, #-153]	; 0xffffff67
   4a4f0:	ldrb	r3, [fp, #-153]	; 0xffffff67
   4a4f4:	cmp	r3, #0
   4a4f8:	bne	4a450 <__assert_fail@plt+0x37d64>
   4a4fc:	b	4a6f0 <__assert_fail@plt+0x38004>
   4a500:	mov	r3, #0
   4a504:	str	r3, [fp, #-32]	; 0xffffffe0
   4a508:	b	4a684 <__assert_fail@plt+0x37f98>
   4a50c:	sub	r3, fp, #172	; 0xac
   4a510:	mov	r2, #8
   4a514:	mov	r1, #0
   4a518:	mov	r0, r3
   4a51c:	bl	12434 <memset@plt>
   4a520:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4a524:	ldr	r2, [r3]
   4a528:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a52c:	lsl	r3, r3, #2
   4a530:	add	r3, r2, r3
   4a534:	ldr	r1, [r3]
   4a538:	sub	r2, fp, #172	; 0xac
   4a53c:	sub	r3, fp, #428	; 0x1ac
   4a540:	mov	r0, r3
   4a544:	bl	11fc0 <wcrtomb@plt>
   4a548:	mov	r3, r0
   4a54c:	cmn	r3, #1
   4a550:	beq	4a5b4 <__assert_fail@plt+0x37ec8>
   4a554:	sub	r3, fp, #428	; 0x1ac
   4a558:	ldrb	r3, [r3]
   4a55c:	mov	r2, r3
   4a560:	ldr	r3, [fp, #-440]	; 0xfffffe48
   4a564:	str	r3, [fp, #-104]	; 0xffffff98
   4a568:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   4a56c:	strb	r3, [fp, #-105]	; 0xffffff97
   4a570:	str	r2, [fp, #-112]	; 0xffffff90
   4a574:	ldr	r3, [fp, #-112]	; 0xffffff90
   4a578:	ldr	r2, [fp, #-104]	; 0xffffff98
   4a57c:	add	r3, r2, r3
   4a580:	mov	r2, #1
   4a584:	strb	r2, [r3]
   4a588:	ldrb	r3, [fp, #-105]	; 0xffffff97
   4a58c:	cmp	r3, #0
   4a590:	beq	4a5b4 <__assert_fail@plt+0x37ec8>
   4a594:	ldr	r0, [fp, #-112]	; 0xffffff90
   4a598:	bl	12110 <tolower@plt>
   4a59c:	mov	r3, r0
   4a5a0:	mov	r2, r3
   4a5a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   4a5a8:	add	r3, r3, r2
   4a5ac:	mov	r2, #1
   4a5b0:	strb	r2, [r3]
   4a5b4:	ldr	r3, [fp, #-432]	; 0xfffffe50
   4a5b8:	ldr	r3, [r3, #12]
   4a5bc:	and	r3, r3, #4194304	; 0x400000
   4a5c0:	cmp	r3, #0
   4a5c4:	beq	4a678 <__assert_fail@plt+0x37f8c>
   4a5c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a5cc:	ldr	r3, [r3, #92]	; 0x5c
   4a5d0:	cmp	r3, #1
   4a5d4:	ble	4a678 <__assert_fail@plt+0x37f8c>
   4a5d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4a5dc:	ldr	r2, [r3]
   4a5e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a5e4:	lsl	r3, r3, #2
   4a5e8:	add	r3, r2, r3
   4a5ec:	ldr	r3, [r3]
   4a5f0:	mov	r0, r3
   4a5f4:	bl	12128 <towlower@plt>
   4a5f8:	mov	r1, r0
   4a5fc:	sub	r2, fp, #172	; 0xac
   4a600:	sub	r3, fp, #428	; 0x1ac
   4a604:	mov	r0, r3
   4a608:	bl	11fc0 <wcrtomb@plt>
   4a60c:	mov	r3, r0
   4a610:	cmn	r3, #1
   4a614:	beq	4a678 <__assert_fail@plt+0x37f8c>
   4a618:	sub	r3, fp, #428	; 0x1ac
   4a61c:	ldrb	r3, [r3]
   4a620:	mov	r2, r3
   4a624:	ldr	r3, [fp, #-440]	; 0xfffffe48
   4a628:	str	r3, [fp, #-116]	; 0xffffff8c
   4a62c:	mov	r3, #0
   4a630:	strb	r3, [fp, #-117]	; 0xffffff8b
   4a634:	str	r2, [fp, #-124]	; 0xffffff84
   4a638:	ldr	r3, [fp, #-124]	; 0xffffff84
   4a63c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   4a640:	add	r3, r2, r3
   4a644:	mov	r2, #1
   4a648:	strb	r2, [r3]
   4a64c:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   4a650:	cmp	r3, #0
   4a654:	beq	4a678 <__assert_fail@plt+0x37f8c>
   4a658:	ldr	r0, [fp, #-124]	; 0xffffff84
   4a65c:	bl	12110 <tolower@plt>
   4a660:	mov	r3, r0
   4a664:	mov	r2, r3
   4a668:	ldr	r3, [fp, #-116]	; 0xffffff8c
   4a66c:	add	r3, r3, r2
   4a670:	mov	r2, #1
   4a674:	strb	r2, [r3]
   4a678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4a67c:	add	r3, r3, #1
   4a680:	str	r3, [fp, #-32]	; 0xffffffe0
   4a684:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4a688:	ldr	r3, [r3, #20]
   4a68c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a690:	cmp	r2, r3
   4a694:	blt	4a50c <__assert_fail@plt+0x37e20>
   4a698:	b	4a6f0 <__assert_fail@plt+0x38004>
   4a69c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a6a0:	cmp	r3, #5
   4a6a4:	beq	4a6c0 <__assert_fail@plt+0x37fd4>
   4a6a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a6ac:	cmp	r3, #7
   4a6b0:	beq	4a6c0 <__assert_fail@plt+0x37fd4>
   4a6b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a6b8:	cmp	r3, #2
   4a6bc:	bne	4a6f0 <__assert_fail@plt+0x38004>
   4a6c0:	mov	r2, #256	; 0x100
   4a6c4:	mov	r1, #1
   4a6c8:	ldr	r0, [fp, #-440]	; 0xfffffe48
   4a6cc:	bl	12434 <memset@plt>
   4a6d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4a6d4:	cmp	r3, #2
   4a6d8:	bne	4a714 <__assert_fail@plt+0x38028>
   4a6dc:	ldr	r2, [fp, #-432]	; 0xfffffe50
   4a6e0:	ldrb	r3, [r2, #28]
   4a6e4:	orr	r3, r3, #1
   4a6e8:	strb	r3, [r2, #28]
   4a6ec:	b	4a714 <__assert_fail@plt+0x38028>
   4a6f0:	ldr	r3, [fp, #-8]
   4a6f4:	add	r3, r3, #1
   4a6f8:	str	r3, [fp, #-8]
   4a6fc:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   4a700:	ldr	r3, [r3, #8]
   4a704:	ldr	r2, [fp, #-8]
   4a708:	cmp	r2, r3
   4a70c:	blt	4a05c <__assert_fail@plt+0x37970>
   4a710:	b	4a718 <__assert_fail@plt+0x3802c>
   4a714:	nop	{0}
   4a718:	sub	sp, fp, #4
   4a71c:	ldr	fp, [sp]
   4a720:	add	sp, sp, #4
   4a724:	pop	{pc}		; (ldr pc, [sp], #4)
   4a728:	str	fp, [sp, #-8]!
   4a72c:	str	lr, [sp, #4]
   4a730:	add	fp, sp, #4
   4a734:	sub	sp, sp, #24
   4a738:	str	r0, [fp, #-16]
   4a73c:	str	r1, [fp, #-20]	; 0xffffffec
   4a740:	str	r2, [fp, #-24]	; 0xffffffe8
   4a744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a748:	and	r3, r3, #1
   4a74c:	cmp	r3, #0
   4a750:	beq	4a760 <__assert_fail@plt+0x38074>
   4a754:	movw	r3, #45820	; 0xb2fc
   4a758:	movt	r3, #3
   4a75c:	b	4a768 <__assert_fail@plt+0x3807c>
   4a760:	movw	r3, #710	; 0x2c6
   4a764:	movt	r3, #257	; 0x101
   4a768:	str	r3, [fp, #-12]
   4a76c:	ldr	r3, [fp, #-16]
   4a770:	mov	r2, #0
   4a774:	str	r2, [r3]
   4a778:	ldr	r3, [fp, #-16]
   4a77c:	mov	r2, #0
   4a780:	str	r2, [r3, #4]
   4a784:	ldr	r3, [fp, #-16]
   4a788:	mov	r2, #0
   4a78c:	str	r2, [r3, #8]
   4a790:	mov	r0, #256	; 0x100
   4a794:	bl	43510 <__assert_fail@plt+0x30e24>
   4a798:	mov	r3, r0
   4a79c:	mov	r2, r3
   4a7a0:	ldr	r3, [fp, #-16]
   4a7a4:	str	r2, [r3, #16]
   4a7a8:	ldr	r3, [fp, #-16]
   4a7ac:	ldr	r3, [r3, #16]
   4a7b0:	cmp	r3, #0
   4a7b4:	moveq	r3, #1
   4a7b8:	movne	r3, #0
   4a7bc:	uxtb	r3, r3
   4a7c0:	cmp	r3, #0
   4a7c4:	beq	4a7d0 <__assert_fail@plt+0x380e4>
   4a7c8:	mov	r3, #12
   4a7cc:	b	4a8e4 <__assert_fail@plt+0x381f8>
   4a7d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7d4:	lsl	r3, r3, #21
   4a7d8:	and	r3, r3, #4194304	; 0x400000
   4a7dc:	ldr	r2, [fp, #-12]
   4a7e0:	orr	r3, r2, r3
   4a7e4:	str	r3, [fp, #-12]
   4a7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a7ec:	and	r3, r3, #4
   4a7f0:	cmp	r3, #0
   4a7f4:	beq	4a824 <__assert_fail@plt+0x38138>
   4a7f8:	ldr	r3, [fp, #-12]
   4a7fc:	bic	r3, r3, #64	; 0x40
   4a800:	str	r3, [fp, #-12]
   4a804:	ldr	r3, [fp, #-12]
   4a808:	orr	r3, r3, #256	; 0x100
   4a80c:	str	r3, [fp, #-12]
   4a810:	ldr	r2, [fp, #-16]
   4a814:	ldrb	r3, [r2, #28]
   4a818:	orr	r3, r3, #128	; 0x80
   4a81c:	strb	r3, [r2, #28]
   4a820:	b	4a834 <__assert_fail@plt+0x38148>
   4a824:	ldr	r2, [fp, #-16]
   4a828:	ldrb	r3, [r2, #28]
   4a82c:	bfc	r3, #7, #1
   4a830:	strb	r3, [r2, #28]
   4a834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a838:	and	r3, r3, #8
   4a83c:	cmp	r3, #0
   4a840:	movne	r3, #1
   4a844:	moveq	r3, #0
   4a848:	uxtb	r1, r3
   4a84c:	ldr	r2, [fp, #-16]
   4a850:	ldrb	r3, [r2, #28]
   4a854:	bfi	r3, r1, #4, #1
   4a858:	strb	r3, [r2, #28]
   4a85c:	ldr	r3, [fp, #-16]
   4a860:	mov	r2, #0
   4a864:	str	r2, [r3, #20]
   4a868:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a86c:	bl	123bc <strlen@plt>
   4a870:	mov	r2, r0
   4a874:	ldr	r3, [fp, #-12]
   4a878:	ldr	r1, [fp, #-20]	; 0xffffffec
   4a87c:	ldr	r0, [fp, #-16]
   4a880:	bl	4adbc <__assert_fail@plt+0x386d0>
   4a884:	str	r0, [fp, #-8]
   4a888:	ldr	r3, [fp, #-8]
   4a88c:	cmp	r3, #16
   4a890:	bne	4a89c <__assert_fail@plt+0x381b0>
   4a894:	mov	r3, #8
   4a898:	str	r3, [fp, #-8]
   4a89c:	ldr	r3, [fp, #-8]
   4a8a0:	cmp	r3, #0
   4a8a4:	moveq	r3, #1
   4a8a8:	movne	r3, #0
   4a8ac:	uxtb	r3, r3
   4a8b0:	cmp	r3, #0
   4a8b4:	beq	4a8c4 <__assert_fail@plt+0x381d8>
   4a8b8:	ldr	r0, [fp, #-16]
   4a8bc:	bl	49edc <__assert_fail@plt+0x377f0>
   4a8c0:	b	4a8e0 <__assert_fail@plt+0x381f4>
   4a8c4:	ldr	r3, [fp, #-16]
   4a8c8:	ldr	r3, [r3, #16]
   4a8cc:	mov	r0, r3
   4a8d0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4a8d4:	ldr	r3, [fp, #-16]
   4a8d8:	mov	r2, #0
   4a8dc:	str	r2, [r3, #16]
   4a8e0:	ldr	r3, [fp, #-8]
   4a8e4:	mov	r0, r3
   4a8e8:	sub	sp, fp, #4
   4a8ec:	ldr	fp, [sp]
   4a8f0:	add	sp, sp, #4
   4a8f4:	pop	{pc}		; (ldr pc, [sp], #4)
   4a8f8:	str	fp, [sp, #-8]!
   4a8fc:	str	lr, [sp, #4]
   4a900:	add	fp, sp, #4
   4a904:	sub	sp, sp, #32
   4a908:	str	r0, [fp, #-24]	; 0xffffffe8
   4a90c:	str	r1, [fp, #-28]	; 0xffffffe4
   4a910:	str	r2, [fp, #-32]	; 0xffffffe0
   4a914:	str	r3, [fp, #-36]	; 0xffffffdc
   4a918:	mov	r3, #17
   4a91c:	str	r3, [fp, #-12]
   4a920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4a924:	lsr	r3, r3, #31
   4a928:	uxtb	r3, r3
   4a92c:	cmp	r3, #0
   4a930:	bne	4a954 <__assert_fail@plt+0x38268>
   4a934:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a938:	ldr	r3, [fp, #-12]
   4a93c:	cmp	r2, r3
   4a940:	movge	r3, #1
   4a944:	movlt	r3, #0
   4a948:	uxtb	r3, r3
   4a94c:	cmp	r3, #0
   4a950:	beq	4a958 <__assert_fail@plt+0x3826c>
   4a954:	bl	12698 <abort@plt>
   4a958:	movw	r3, #47748	; 0xba84
   4a95c:	movt	r3, #6
   4a960:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4a964:	ldr	r2, [r3, r2, lsl #2]
   4a968:	movw	r3, #47364	; 0xb904
   4a96c:	movt	r3, #6
   4a970:	add	r3, r2, r3
   4a974:	mov	r0, r3
   4a978:	bl	12398 <gettext@plt>
   4a97c:	str	r0, [fp, #-16]
   4a980:	ldr	r0, [fp, #-16]
   4a984:	bl	123bc <strlen@plt>
   4a988:	mov	r3, r0
   4a98c:	add	r3, r3, #1
   4a990:	str	r3, [fp, #-20]	; 0xffffffec
   4a994:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a998:	cmp	r3, #0
   4a99c:	movne	r3, #1
   4a9a0:	moveq	r3, #0
   4a9a4:	uxtb	r3, r3
   4a9a8:	cmp	r3, #0
   4a9ac:	beq	4aa08 <__assert_fail@plt+0x3831c>
   4a9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a9b4:	str	r3, [fp, #-8]
   4a9b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a9bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a9c0:	cmp	r2, r3
   4a9c4:	movhi	r3, #1
   4a9c8:	movls	r3, #0
   4a9cc:	uxtb	r3, r3
   4a9d0:	cmp	r3, #0
   4a9d4:	beq	4a9f8 <__assert_fail@plt+0x3830c>
   4a9d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4a9dc:	sub	r3, r3, #1
   4a9e0:	str	r3, [fp, #-8]
   4a9e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4a9e8:	ldr	r3, [fp, #-8]
   4a9ec:	add	r3, r2, r3
   4a9f0:	mov	r2, #0
   4a9f4:	strb	r2, [r3]
   4a9f8:	ldr	r2, [fp, #-8]
   4a9fc:	ldr	r1, [fp, #-16]
   4aa00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4aa04:	bl	120f8 <memcpy@plt>
   4aa08:	ldr	r3, [fp, #-20]	; 0xffffffec
   4aa0c:	mov	r0, r3
   4aa10:	sub	sp, fp, #4
   4aa14:	ldr	fp, [sp]
   4aa18:	add	sp, sp, #4
   4aa1c:	pop	{pc}		; (ldr pc, [sp], #4)
   4aa20:	str	fp, [sp, #-8]!
   4aa24:	str	lr, [sp, #4]
   4aa28:	add	fp, sp, #4
   4aa2c:	sub	sp, sp, #24
   4aa30:	str	r0, [fp, #-24]	; 0xffffffe8
   4aa34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aa38:	ldr	r3, [r3]
   4aa3c:	cmp	r3, #0
   4aa40:	beq	4aa8c <__assert_fail@plt+0x383a0>
   4aa44:	mov	r3, #0
   4aa48:	str	r3, [fp, #-8]
   4aa4c:	b	4aa78 <__assert_fail@plt+0x3838c>
   4aa50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aa54:	ldr	r2, [r3]
   4aa58:	ldr	r3, [fp, #-8]
   4aa5c:	lsl	r3, r3, #3
   4aa60:	add	r3, r2, r3
   4aa64:	mov	r0, r3
   4aa68:	bl	52e30 <__assert_fail@plt+0x40744>
   4aa6c:	ldr	r3, [fp, #-8]
   4aa70:	add	r3, r3, #1
   4aa74:	str	r3, [fp, #-8]
   4aa78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aa7c:	ldr	r2, [r3, #8]
   4aa80:	ldr	r3, [fp, #-8]
   4aa84:	cmp	r2, r3
   4aa88:	bhi	4aa50 <__assert_fail@plt+0x38364>
   4aa8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aa90:	ldr	r3, [r3, #12]
   4aa94:	mov	r0, r3
   4aa98:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4aa9c:	mov	r3, #0
   4aaa0:	str	r3, [fp, #-8]
   4aaa4:	b	4ab68 <__assert_fail@plt+0x3847c>
   4aaa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aaac:	ldr	r3, [r3, #24]
   4aab0:	cmp	r3, #0
   4aab4:	beq	4aae4 <__assert_fail@plt+0x383f8>
   4aab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aabc:	ldr	r1, [r3, #24]
   4aac0:	ldr	r2, [fp, #-8]
   4aac4:	mov	r3, r2
   4aac8:	lsl	r3, r3, #1
   4aacc:	add	r3, r3, r2
   4aad0:	lsl	r3, r3, #2
   4aad4:	add	r3, r1, r3
   4aad8:	ldr	r3, [r3, #8]
   4aadc:	mov	r0, r3
   4aae0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4aae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aae8:	ldr	r3, [r3, #28]
   4aaec:	cmp	r3, #0
   4aaf0:	beq	4ab20 <__assert_fail@plt+0x38434>
   4aaf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aaf8:	ldr	r1, [r3, #28]
   4aafc:	ldr	r2, [fp, #-8]
   4ab00:	mov	r3, r2
   4ab04:	lsl	r3, r3, #1
   4ab08:	add	r3, r3, r2
   4ab0c:	lsl	r3, r3, #2
   4ab10:	add	r3, r1, r3
   4ab14:	ldr	r3, [r3, #8]
   4ab18:	mov	r0, r3
   4ab1c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ab20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ab24:	ldr	r3, [r3, #20]
   4ab28:	cmp	r3, #0
   4ab2c:	beq	4ab5c <__assert_fail@plt+0x38470>
   4ab30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ab34:	ldr	r1, [r3, #20]
   4ab38:	ldr	r2, [fp, #-8]
   4ab3c:	mov	r3, r2
   4ab40:	lsl	r3, r3, #1
   4ab44:	add	r3, r3, r2
   4ab48:	lsl	r3, r3, #2
   4ab4c:	add	r3, r1, r3
   4ab50:	ldr	r3, [r3, #8]
   4ab54:	mov	r0, r3
   4ab58:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ab5c:	ldr	r3, [fp, #-8]
   4ab60:	add	r3, r3, #1
   4ab64:	str	r3, [fp, #-8]
   4ab68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ab6c:	ldr	r2, [r3, #8]
   4ab70:	ldr	r3, [fp, #-8]
   4ab74:	cmp	r2, r3
   4ab78:	bhi	4aaa8 <__assert_fail@plt+0x383bc>
   4ab7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ab80:	ldr	r3, [r3, #20]
   4ab84:	mov	r0, r3
   4ab88:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ab8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ab90:	ldr	r3, [r3, #24]
   4ab94:	mov	r0, r3
   4ab98:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ab9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aba0:	ldr	r3, [r3, #28]
   4aba4:	mov	r0, r3
   4aba8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4abac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4abb0:	ldr	r3, [r3]
   4abb4:	mov	r0, r3
   4abb8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4abbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4abc0:	ldr	r3, [r3, #32]
   4abc4:	cmp	r3, #0
   4abc8:	beq	4ac7c <__assert_fail@plt+0x38590>
   4abcc:	mov	r3, #0
   4abd0:	str	r3, [fp, #-8]
   4abd4:	b	4ac68 <__assert_fail@plt+0x3857c>
   4abd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4abdc:	ldr	r1, [r3, #32]
   4abe0:	ldr	r2, [fp, #-8]
   4abe4:	mov	r3, r2
   4abe8:	lsl	r3, r3, #1
   4abec:	add	r3, r3, r2
   4abf0:	lsl	r3, r3, #2
   4abf4:	add	r3, r1, r3
   4abf8:	str	r3, [fp, #-16]
   4abfc:	mov	r3, #0
   4ac00:	str	r3, [fp, #-12]
   4ac04:	b	4ac38 <__assert_fail@plt+0x3854c>
   4ac08:	ldr	r3, [fp, #-16]
   4ac0c:	ldr	r2, [r3, #8]
   4ac10:	ldr	r3, [fp, #-12]
   4ac14:	lsl	r3, r3, #2
   4ac18:	add	r3, r2, r3
   4ac1c:	ldr	r3, [r3]
   4ac20:	str	r3, [fp, #-20]	; 0xffffffec
   4ac24:	ldr	r0, [fp, #-20]	; 0xffffffec
   4ac28:	bl	4973c <__assert_fail@plt+0x37050>
   4ac2c:	ldr	r3, [fp, #-12]
   4ac30:	add	r3, r3, #1
   4ac34:	str	r3, [fp, #-12]
   4ac38:	ldr	r3, [fp, #-16]
   4ac3c:	ldr	r3, [r3]
   4ac40:	ldr	r2, [fp, #-12]
   4ac44:	cmp	r2, r3
   4ac48:	blt	4ac08 <__assert_fail@plt+0x3851c>
   4ac4c:	ldr	r3, [fp, #-16]
   4ac50:	ldr	r3, [r3, #8]
   4ac54:	mov	r0, r3
   4ac58:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ac5c:	ldr	r3, [fp, #-8]
   4ac60:	add	r3, r3, #1
   4ac64:	str	r3, [fp, #-8]
   4ac68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ac6c:	ldr	r2, [r3, #68]	; 0x44
   4ac70:	ldr	r3, [fp, #-8]
   4ac74:	cmp	r2, r3
   4ac78:	bcs	4abd8 <__assert_fail@plt+0x384ec>
   4ac7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ac80:	ldr	r3, [r3, #32]
   4ac84:	mov	r0, r3
   4ac88:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ac8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ac90:	ldr	r2, [r3, #60]	; 0x3c
   4ac94:	movw	r3, #47816	; 0xbac8
   4ac98:	movt	r3, #6
   4ac9c:	cmp	r2, r3
   4aca0:	beq	4acb4 <__assert_fail@plt+0x385c8>
   4aca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4aca8:	ldr	r3, [r3, #60]	; 0x3c
   4acac:	mov	r0, r3
   4acb0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4acb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4acb8:	ldr	r3, [r3, #132]	; 0x84
   4acbc:	mov	r0, r3
   4acc0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4acc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4acc8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4accc:	nop	{0}
   4acd0:	sub	sp, fp, #4
   4acd4:	ldr	fp, [sp]
   4acd8:	add	sp, sp, #4
   4acdc:	pop	{pc}		; (ldr pc, [sp], #4)
   4ace0:	str	fp, [sp, #-8]!
   4ace4:	str	lr, [sp, #4]
   4ace8:	add	fp, sp, #4
   4acec:	sub	sp, sp, #16
   4acf0:	str	r0, [fp, #-16]
   4acf4:	ldr	r3, [fp, #-16]
   4acf8:	ldr	r3, [r3]
   4acfc:	str	r3, [fp, #-8]
   4ad00:	ldr	r3, [fp, #-8]
   4ad04:	cmp	r3, #0
   4ad08:	movne	r3, #1
   4ad0c:	moveq	r3, #0
   4ad10:	uxtb	r3, r3
   4ad14:	cmp	r3, #0
   4ad18:	beq	4ad58 <__assert_fail@plt+0x3866c>
   4ad1c:	movw	r3, #9316	; 0x2464
   4ad20:	movt	r3, #1
   4ad24:	cmp	r3, #0
   4ad28:	bne	4ad3c <__assert_fail@plt+0x38650>
   4ad2c:	movw	r3, #8392	; 0x20c8
   4ad30:	movt	r3, #1
   4ad34:	cmp	r3, #0
   4ad38:	beq	4ad50 <__assert_fail@plt+0x38664>
   4ad3c:	ldr	r3, [fp, #-8]
   4ad40:	add	r3, r3, #136	; 0x88
   4ad44:	mov	r0, r3
   4ad48:	bl	12044 <pthread_mutex_destroy@plt>
   4ad4c:	nop	{0}
   4ad50:	ldr	r0, [fp, #-8]
   4ad54:	bl	4aa20 <__assert_fail@plt+0x38334>
   4ad58:	ldr	r3, [fp, #-16]
   4ad5c:	mov	r2, #0
   4ad60:	str	r2, [r3]
   4ad64:	ldr	r3, [fp, #-16]
   4ad68:	mov	r2, #0
   4ad6c:	str	r2, [r3, #4]
   4ad70:	ldr	r3, [fp, #-16]
   4ad74:	ldr	r3, [r3, #16]
   4ad78:	mov	r0, r3
   4ad7c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ad80:	ldr	r3, [fp, #-16]
   4ad84:	mov	r2, #0
   4ad88:	str	r2, [r3, #16]
   4ad8c:	ldr	r3, [fp, #-16]
   4ad90:	ldr	r3, [r3, #20]
   4ad94:	mov	r0, r3
   4ad98:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4ad9c:	ldr	r3, [fp, #-16]
   4ada0:	mov	r2, #0
   4ada4:	str	r2, [r3, #20]
   4ada8:	nop	{0}
   4adac:	sub	sp, fp, #4
   4adb0:	ldr	fp, [sp]
   4adb4:	add	sp, sp, #4
   4adb8:	pop	{pc}		; (ldr pc, [sp], #4)
   4adbc:	str	fp, [sp, #-8]!
   4adc0:	str	lr, [sp, #4]
   4adc4:	add	fp, sp, #4
   4adc8:	sub	sp, sp, #120	; 0x78
   4adcc:	str	r0, [fp, #-104]	; 0xffffff98
   4add0:	str	r1, [fp, #-108]	; 0xffffff94
   4add4:	str	r2, [fp, #-112]	; 0xffffff90
   4add8:	str	r3, [fp, #-116]	; 0xffffff8c
   4addc:	mov	r3, #0
   4ade0:	str	r3, [fp, #-12]
   4ade4:	ldr	r2, [fp, #-104]	; 0xffffff98
   4ade8:	ldrb	r3, [r2, #28]
   4adec:	bfc	r3, #3, #1
   4adf0:	strb	r3, [r2, #28]
   4adf4:	ldr	r3, [fp, #-104]	; 0xffffff98
   4adf8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   4adfc:	str	r2, [r3, #12]
   4ae00:	ldr	r2, [fp, #-104]	; 0xffffff98
   4ae04:	ldrb	r3, [r2, #28]
   4ae08:	bfc	r3, #6, #1
   4ae0c:	strb	r3, [r2, #28]
   4ae10:	ldr	r3, [fp, #-104]	; 0xffffff98
   4ae14:	ldrb	r3, [r3, #28]
   4ae18:	ubfx	r3, r3, #6, #1
   4ae1c:	uxtb	r1, r3
   4ae20:	ldr	r2, [fp, #-104]	; 0xffffff98
   4ae24:	ldrb	r3, [r2, #28]
   4ae28:	bfi	r3, r1, #5, #1
   4ae2c:	strb	r3, [r2, #28]
   4ae30:	ldr	r3, [fp, #-104]	; 0xffffff98
   4ae34:	mov	r2, #0
   4ae38:	str	r2, [r3, #8]
   4ae3c:	ldr	r3, [fp, #-104]	; 0xffffff98
   4ae40:	mov	r2, #0
   4ae44:	str	r2, [r3, #24]
   4ae48:	ldr	r2, [fp, #-104]	; 0xffffff98
   4ae4c:	ldrb	r3, [r2, #28]
   4ae50:	bfc	r3, #0, #1
   4ae54:	strb	r3, [r2, #28]
   4ae58:	ldr	r2, [fp, #-104]	; 0xffffff98
   4ae5c:	ldrb	r3, [r2, #28]
   4ae60:	bfc	r3, #1, #2
   4ae64:	strb	r3, [r2, #28]
   4ae68:	ldr	r3, [fp, #-104]	; 0xffffff98
   4ae6c:	ldr	r3, [r3]
   4ae70:	str	r3, [fp, #-8]
   4ae74:	ldr	r3, [fp, #-104]	; 0xffffff98
   4ae78:	ldr	r3, [r3, #4]
   4ae7c:	cmp	r3, #159	; 0x9f
   4ae80:	movls	r3, #1
   4ae84:	movhi	r3, #0
   4ae88:	uxtb	r3, r3
   4ae8c:	cmp	r3, #0
   4ae90:	beq	4aed8 <__assert_fail@plt+0x387ec>
   4ae94:	ldr	r3, [fp, #-104]	; 0xffffff98
   4ae98:	ldr	r3, [r3]
   4ae9c:	mov	r1, #160	; 0xa0
   4aea0:	mov	r0, r3
   4aea4:	bl	446e8 <__assert_fail@plt+0x31ffc>
   4aea8:	str	r0, [fp, #-8]
   4aeac:	ldr	r3, [fp, #-8]
   4aeb0:	cmp	r3, #0
   4aeb4:	bne	4aec0 <__assert_fail@plt+0x387d4>
   4aeb8:	mov	r3, #12
   4aebc:	b	4b214 <__assert_fail@plt+0x38b28>
   4aec0:	ldr	r3, [fp, #-104]	; 0xffffff98
   4aec4:	mov	r2, #160	; 0xa0
   4aec8:	str	r2, [r3, #4]
   4aecc:	ldr	r3, [fp, #-104]	; 0xffffff98
   4aed0:	ldr	r2, [fp, #-8]
   4aed4:	str	r2, [r3]
   4aed8:	ldr	r3, [fp, #-104]	; 0xffffff98
   4aedc:	mov	r2, #160	; 0xa0
   4aee0:	str	r2, [r3, #8]
   4aee4:	ldr	r1, [fp, #-112]	; 0xffffff90
   4aee8:	ldr	r0, [fp, #-8]
   4aeec:	bl	4b228 <__assert_fail@plt+0x38b3c>
   4aef0:	mov	r3, r0
   4aef4:	str	r3, [fp, #-12]
   4aef8:	ldr	r3, [fp, #-12]
   4aefc:	cmp	r3, #0
   4af00:	moveq	r3, #1
   4af04:	movne	r3, #0
   4af08:	uxtb	r3, r3
   4af0c:	cmp	r3, #0
   4af10:	beq	4af94 <__assert_fail@plt+0x388a8>
   4af14:	movw	r3, #9316	; 0x2464
   4af18:	movt	r3, #1
   4af1c:	cmp	r3, #0
   4af20:	bne	4af34 <__assert_fail@plt+0x38848>
   4af24:	movw	r3, #8392	; 0x20c8
   4af28:	movt	r3, #1
   4af2c:	cmp	r3, #0
   4af30:	beq	4af3c <__assert_fail@plt+0x38850>
   4af34:	mov	r3, #1
   4af38:	b	4af40 <__assert_fail@plt+0x38854>
   4af3c:	mov	r3, #0
   4af40:	cmp	r3, #0
   4af44:	beq	4af80 <__assert_fail@plt+0x38894>
   4af48:	ldr	r3, [fp, #-8]
   4af4c:	add	r3, r3, #136	; 0x88
   4af50:	mov	r1, #0
   4af54:	mov	r0, r3
   4af58:	bl	1211c <pthread_mutex_init@plt>
   4af5c:	mov	r3, r0
   4af60:	cmp	r3, #0
   4af64:	movne	r3, #1
   4af68:	moveq	r3, #0
   4af6c:	uxtb	r3, r3
   4af70:	cmp	r3, #0
   4af74:	beq	4af80 <__assert_fail@plt+0x38894>
   4af78:	mov	r3, #1
   4af7c:	b	4af84 <__assert_fail@plt+0x38898>
   4af80:	mov	r3, #0
   4af84:	cmp	r3, #0
   4af88:	beq	4af94 <__assert_fail@plt+0x388a8>
   4af8c:	mov	r3, #12
   4af90:	str	r3, [fp, #-12]
   4af94:	ldr	r3, [fp, #-12]
   4af98:	cmp	r3, #0
   4af9c:	movne	r3, #1
   4afa0:	moveq	r3, #0
   4afa4:	uxtb	r3, r3
   4afa8:	cmp	r3, #0
   4afac:	beq	4afd8 <__assert_fail@plt+0x388ec>
   4afb0:	ldr	r0, [fp, #-8]
   4afb4:	bl	4aa20 <__assert_fail@plt+0x38334>
   4afb8:	ldr	r3, [fp, #-104]	; 0xffffff98
   4afbc:	mov	r2, #0
   4afc0:	str	r2, [r3]
   4afc4:	ldr	r3, [fp, #-104]	; 0xffffff98
   4afc8:	mov	r2, #0
   4afcc:	str	r2, [r3, #4]
   4afd0:	ldr	r3, [fp, #-12]
   4afd4:	b	4b214 <__assert_fail@plt+0x38b28>
   4afd8:	ldr	r1, [fp, #-112]	; 0xffffff90
   4afdc:	ldr	r3, [fp, #-104]	; 0xffffff98
   4afe0:	ldr	ip, [r3, #20]
   4afe4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   4afe8:	and	r3, r3, #4194304	; 0x400000
   4afec:	cmp	r3, #0
   4aff0:	movne	r3, #1
   4aff4:	moveq	r3, #0
   4aff8:	uxtb	r3, r3
   4affc:	sub	r0, fp, #96	; 0x60
   4b000:	ldr	r2, [fp, #-8]
   4b004:	str	r2, [sp, #4]
   4b008:	str	r3, [sp]
   4b00c:	mov	r3, ip
   4b010:	mov	r2, r1
   4b014:	ldr	r1, [fp, #-108]	; 0xffffff94
   4b018:	bl	44eac <__assert_fail@plt+0x327c0>
   4b01c:	mov	r3, r0
   4b020:	str	r3, [fp, #-12]
   4b024:	ldr	r3, [fp, #-12]
   4b028:	cmp	r3, #0
   4b02c:	movne	r3, #1
   4b030:	moveq	r3, #0
   4b034:	uxtb	r3, r3
   4b038:	cmp	r3, #0
   4b03c:	beq	4b0c4 <__assert_fail@plt+0x389d8>
   4b040:	nop	{0}
   4b044:	b	4b054 <__assert_fail@plt+0x38968>
   4b048:	nop	{0}
   4b04c:	b	4b054 <__assert_fail@plt+0x38968>
   4b050:	nop	{0}
   4b054:	ldr	r0, [fp, #-104]	; 0xffffff98
   4b058:	bl	4b858 <__assert_fail@plt+0x3916c>
   4b05c:	sub	r3, fp, #96	; 0x60
   4b060:	mov	r0, r3
   4b064:	bl	475b8 <__assert_fail@plt+0x34ecc>
   4b068:	movw	r3, #9316	; 0x2464
   4b06c:	movt	r3, #1
   4b070:	cmp	r3, #0
   4b074:	bne	4b088 <__assert_fail@plt+0x3899c>
   4b078:	movw	r3, #8392	; 0x20c8
   4b07c:	movt	r3, #1
   4b080:	cmp	r3, #0
   4b084:	beq	4b09c <__assert_fail@plt+0x389b0>
   4b088:	ldr	r3, [fp, #-8]
   4b08c:	add	r3, r3, #136	; 0x88
   4b090:	mov	r0, r3
   4b094:	bl	12044 <pthread_mutex_destroy@plt>
   4b098:	nop	{0}
   4b09c:	ldr	r0, [fp, #-8]
   4b0a0:	bl	4aa20 <__assert_fail@plt+0x38334>
   4b0a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   4b0a8:	mov	r2, #0
   4b0ac:	str	r2, [r3]
   4b0b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   4b0b4:	mov	r2, #0
   4b0b8:	str	r2, [r3, #4]
   4b0bc:	ldr	r3, [fp, #-12]
   4b0c0:	b	4b214 <__assert_fail@plt+0x38b28>
   4b0c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   4b0c8:	mov	r2, #0
   4b0cc:	str	r2, [r3, #24]
   4b0d0:	sub	r3, fp, #12
   4b0d4:	sub	r0, fp, #96	; 0x60
   4b0d8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   4b0dc:	ldr	r1, [fp, #-104]	; 0xffffff98
   4b0e0:	bl	4ef3c <__assert_fail@plt+0x3c850>
   4b0e4:	mov	r2, r0
   4b0e8:	ldr	r3, [fp, #-8]
   4b0ec:	str	r2, [r3, #52]	; 0x34
   4b0f0:	ldr	r3, [fp, #-8]
   4b0f4:	ldr	r3, [r3, #52]	; 0x34
   4b0f8:	cmp	r3, #0
   4b0fc:	moveq	r3, #1
   4b100:	movne	r3, #0
   4b104:	uxtb	r3, r3
   4b108:	cmp	r3, #0
   4b10c:	bne	4b048 <__assert_fail@plt+0x3895c>
   4b110:	ldr	r0, [fp, #-104]	; 0xffffff98
   4b114:	bl	4c010 <__assert_fail@plt+0x39924>
   4b118:	mov	r3, r0
   4b11c:	str	r3, [fp, #-12]
   4b120:	ldr	r3, [fp, #-12]
   4b124:	cmp	r3, #0
   4b128:	movne	r3, #1
   4b12c:	moveq	r3, #0
   4b130:	uxtb	r3, r3
   4b134:	cmp	r3, #0
   4b138:	bne	4b050 <__assert_fail@plt+0x38964>
   4b13c:	ldr	r3, [fp, #-8]
   4b140:	ldrb	r3, [r3, #88]	; 0x58
   4b144:	and	r3, r3, #4
   4b148:	uxtb	r3, r3
   4b14c:	cmp	r3, #0
   4b150:	beq	4b17c <__assert_fail@plt+0x38a90>
   4b154:	ldr	r3, [fp, #-116]	; 0xffffff8c
   4b158:	and	r3, r3, #4194304	; 0x400000
   4b15c:	cmp	r3, #0
   4b160:	bne	4b17c <__assert_fail@plt+0x38a90>
   4b164:	ldr	r3, [fp, #-104]	; 0xffffff98
   4b168:	ldr	r3, [r3, #20]
   4b16c:	cmp	r3, #0
   4b170:	bne	4b17c <__assert_fail@plt+0x38a90>
   4b174:	ldr	r0, [fp, #-8]
   4b178:	bl	4bcf4 <__assert_fail@plt+0x39608>
   4b17c:	ldr	r0, [fp, #-8]
   4b180:	bl	4b904 <__assert_fail@plt+0x39218>
   4b184:	mov	r3, r0
   4b188:	str	r3, [fp, #-12]
   4b18c:	ldr	r0, [fp, #-104]	; 0xffffff98
   4b190:	bl	4b858 <__assert_fail@plt+0x3916c>
   4b194:	sub	r3, fp, #96	; 0x60
   4b198:	mov	r0, r3
   4b19c:	bl	475b8 <__assert_fail@plt+0x34ecc>
   4b1a0:	ldr	r3, [fp, #-12]
   4b1a4:	cmp	r3, #0
   4b1a8:	movne	r3, #1
   4b1ac:	moveq	r3, #0
   4b1b0:	uxtb	r3, r3
   4b1b4:	cmp	r3, #0
   4b1b8:	beq	4b210 <__assert_fail@plt+0x38b24>
   4b1bc:	movw	r3, #9316	; 0x2464
   4b1c0:	movt	r3, #1
   4b1c4:	cmp	r3, #0
   4b1c8:	bne	4b1dc <__assert_fail@plt+0x38af0>
   4b1cc:	movw	r3, #8392	; 0x20c8
   4b1d0:	movt	r3, #1
   4b1d4:	cmp	r3, #0
   4b1d8:	beq	4b1f0 <__assert_fail@plt+0x38b04>
   4b1dc:	ldr	r3, [fp, #-8]
   4b1e0:	add	r3, r3, #136	; 0x88
   4b1e4:	mov	r0, r3
   4b1e8:	bl	12044 <pthread_mutex_destroy@plt>
   4b1ec:	nop	{0}
   4b1f0:	ldr	r0, [fp, #-8]
   4b1f4:	bl	4aa20 <__assert_fail@plt+0x38334>
   4b1f8:	ldr	r3, [fp, #-104]	; 0xffffff98
   4b1fc:	mov	r2, #0
   4b200:	str	r2, [r3]
   4b204:	ldr	r3, [fp, #-104]	; 0xffffff98
   4b208:	mov	r2, #0
   4b20c:	str	r2, [r3, #4]
   4b210:	ldr	r3, [fp, #-12]
   4b214:	mov	r0, r3
   4b218:	sub	sp, fp, #4
   4b21c:	ldr	fp, [sp]
   4b220:	add	sp, sp, #4
   4b224:	pop	{pc}		; (ldr pc, [sp], #4)
   4b228:	str	fp, [sp, #-8]!
   4b22c:	str	lr, [sp, #4]
   4b230:	add	fp, sp, #4
   4b234:	sub	sp, sp, #40	; 0x28
   4b238:	str	r0, [fp, #-40]	; 0xffffffd8
   4b23c:	str	r1, [fp, #-44]	; 0xffffffd4
   4b240:	mov	r3, #4
   4b244:	str	r3, [fp, #-24]	; 0xffffffe8
   4b248:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b24c:	cmp	r3, #12
   4b250:	bls	4b260 <__assert_fail@plt+0x38b74>
   4b254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b258:	cmp	r3, #8
   4b25c:	bls	4b2c4 <__assert_fail@plt+0x38bd8>
   4b260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b264:	cmp	r3, #12
   4b268:	bls	4b2c4 <__assert_fail@plt+0x38bd8>
   4b26c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b270:	cmp	r3, #12
   4b274:	bls	4b2c4 <__assert_fail@plt+0x38bd8>
   4b278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b27c:	cmp	r3, #12
   4b280:	bls	4b290 <__assert_fail@plt+0x38ba4>
   4b284:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b288:	cmp	r3, #8
   4b28c:	bls	4b2b8 <__assert_fail@plt+0x38bcc>
   4b290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b294:	cmp	r3, #12
   4b298:	bls	4b2b0 <__assert_fail@plt+0x38bc4>
   4b29c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b2a0:	cmp	r3, #8
   4b2a4:	movcs	r3, r3
   4b2a8:	movcc	r3, #8
   4b2ac:	b	4b2c0 <__assert_fail@plt+0x38bd4>
   4b2b0:	mov	r3, #12
   4b2b4:	b	4b2c0 <__assert_fail@plt+0x38bd4>
   4b2b8:	mov	r3, #8
   4b2bc:	b	4b2c8 <__assert_fail@plt+0x38bdc>
   4b2c0:	b	4b2c8 <__assert_fail@plt+0x38bdc>
   4b2c4:	mov	r3, #12
   4b2c8:	str	r3, [fp, #-28]	; 0xffffffe4
   4b2cc:	mov	r2, #160	; 0xa0
   4b2d0:	mov	r1, #0
   4b2d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4b2d8:	bl	12434 <memset@plt>
   4b2dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b2e0:	mov	r2, #31
   4b2e4:	str	r2, [r3, #64]	; 0x40
   4b2e8:	mvn	r2, #0
   4b2ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4b2f0:	udiv	r3, r2, r3
   4b2f4:	cmp	r3, #0
   4b2f8:	blt	4b310 <__assert_fail@plt+0x38c24>
   4b2fc:	mvn	r2, #0
   4b300:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4b304:	udiv	r3, r2, r3
   4b308:	lsr	r3, r3, #1
   4b30c:	b	4b314 <__assert_fail@plt+0x38c28>
   4b310:	mvn	r3, #-1073741824	; 0xc0000000
   4b314:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4b318:	cmp	r3, r2
   4b31c:	movls	r3, #1
   4b320:	movhi	r3, #0
   4b324:	uxtb	r3, r3
   4b328:	cmp	r3, #0
   4b32c:	beq	4b338 <__assert_fail@plt+0x38c4c>
   4b330:	mov	r3, #12
   4b334:	b	4b668 <__assert_fail@plt+0x38f7c>
   4b338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4b33c:	add	r2, r3, #1
   4b340:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b344:	str	r2, [r3, #4]
   4b348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b34c:	ldr	r3, [r3, #4]
   4b350:	lsl	r3, r3, #3
   4b354:	mov	r0, r3
   4b358:	bl	43510 <__assert_fail@plt+0x30e24>
   4b35c:	mov	r3, r0
   4b360:	mov	r2, r3
   4b364:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b368:	str	r2, [r3]
   4b36c:	mov	r3, #1
   4b370:	str	r3, [fp, #-8]
   4b374:	ldr	r2, [fp, #-8]
   4b378:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4b37c:	cmp	r2, r3
   4b380:	bhi	4b394 <__assert_fail@plt+0x38ca8>
   4b384:	ldr	r3, [fp, #-8]
   4b388:	lsl	r3, r3, #1
   4b38c:	str	r3, [fp, #-8]
   4b390:	b	4b374 <__assert_fail@plt+0x38c88>
   4b394:	nop	{0}
   4b398:	ldr	r1, [fp, #-8]
   4b39c:	mov	r0, #12
   4b3a0:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   4b3a4:	mov	r3, r0
   4b3a8:	mov	r2, r3
   4b3ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b3b0:	str	r2, [r3, #32]
   4b3b4:	ldr	r3, [fp, #-8]
   4b3b8:	sub	r2, r3, #1
   4b3bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b3c0:	str	r2, [r3, #68]	; 0x44
   4b3c4:	bl	12254 <__ctype_get_mb_cur_max@plt>
   4b3c8:	mov	r3, r0
   4b3cc:	mov	r2, r3
   4b3d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b3d4:	str	r2, [r3, #92]	; 0x5c
   4b3d8:	mov	r0, #14
   4b3dc:	bl	12560 <nl_langinfo@plt>
   4b3e0:	str	r0, [fp, #-32]	; 0xffffffe0
   4b3e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4b3e8:	ldrb	r3, [r3]
   4b3ec:	cmp	r3, #85	; 0x55
   4b3f0:	beq	4b404 <__assert_fail@plt+0x38d18>
   4b3f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4b3f8:	ldrb	r3, [r3]
   4b3fc:	cmp	r3, #117	; 0x75
   4b400:	bne	4b4a8 <__assert_fail@plt+0x38dbc>
   4b404:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4b408:	add	r3, r3, #1
   4b40c:	ldrb	r3, [r3]
   4b410:	cmp	r3, #84	; 0x54
   4b414:	beq	4b42c <__assert_fail@plt+0x38d40>
   4b418:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4b41c:	add	r3, r3, #1
   4b420:	ldrb	r3, [r3]
   4b424:	cmp	r3, #116	; 0x74
   4b428:	bne	4b4a8 <__assert_fail@plt+0x38dbc>
   4b42c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4b430:	add	r3, r3, #2
   4b434:	ldrb	r3, [r3]
   4b438:	cmp	r3, #70	; 0x46
   4b43c:	beq	4b454 <__assert_fail@plt+0x38d68>
   4b440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4b444:	add	r3, r3, #2
   4b448:	ldrb	r3, [r3]
   4b44c:	cmp	r3, #102	; 0x66
   4b450:	bne	4b4a8 <__assert_fail@plt+0x38dbc>
   4b454:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4b458:	add	r3, r3, #3
   4b45c:	ldrb	r3, [r3]
   4b460:	cmp	r3, #45	; 0x2d
   4b464:	bne	4b470 <__assert_fail@plt+0x38d84>
   4b468:	mov	r3, #4
   4b46c:	b	4b474 <__assert_fail@plt+0x38d88>
   4b470:	mov	r3, #3
   4b474:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4b478:	add	r3, r2, r3
   4b47c:	movw	r1, #47848	; 0xbae8
   4b480:	movt	r1, #6
   4b484:	mov	r0, r3
   4b488:	bl	11ffc <strcmp@plt>
   4b48c:	mov	r3, r0
   4b490:	cmp	r3, #0
   4b494:	bne	4b4a8 <__assert_fail@plt+0x38dbc>
   4b498:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4b49c:	ldrb	r3, [r2, #88]	; 0x58
   4b4a0:	orr	r3, r3, #4
   4b4a4:	strb	r3, [r2, #88]	; 0x58
   4b4a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4b4ac:	ldrb	r3, [r2, #88]	; 0x58
   4b4b0:	bfc	r3, #3, #1
   4b4b4:	strb	r3, [r2, #88]	; 0x58
   4b4b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b4bc:	ldr	r3, [r3, #92]	; 0x5c
   4b4c0:	cmp	r3, #1
   4b4c4:	ble	4b61c <__assert_fail@plt+0x38f30>
   4b4c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b4cc:	ldrb	r3, [r3, #88]	; 0x58
   4b4d0:	and	r3, r3, #4
   4b4d4:	uxtb	r3, r3
   4b4d8:	cmp	r3, #0
   4b4dc:	beq	4b4f4 <__assert_fail@plt+0x38e08>
   4b4e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4b4e4:	movw	r3, #47816	; 0xbac8
   4b4e8:	movt	r3, #6
   4b4ec:	str	r3, [r2, #60]	; 0x3c
   4b4f0:	b	4b61c <__assert_fail@plt+0x38f30>
   4b4f4:	mov	r1, #1
   4b4f8:	mov	r0, #32
   4b4fc:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   4b500:	mov	r3, r0
   4b504:	mov	r2, r3
   4b508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b50c:	str	r2, [r3, #60]	; 0x3c
   4b510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b514:	ldr	r3, [r3, #60]	; 0x3c
   4b518:	cmp	r3, #0
   4b51c:	moveq	r3, #1
   4b520:	movne	r3, #0
   4b524:	uxtb	r3, r3
   4b528:	cmp	r3, #0
   4b52c:	beq	4b538 <__assert_fail@plt+0x38e4c>
   4b530:	mov	r3, #12
   4b534:	b	4b668 <__assert_fail@plt+0x38f7c>
   4b538:	mov	r3, #0
   4b53c:	str	r3, [fp, #-12]
   4b540:	mov	r3, #0
   4b544:	str	r3, [fp, #-20]	; 0xffffffec
   4b548:	b	4b610 <__assert_fail@plt+0x38f24>
   4b54c:	mov	r3, #0
   4b550:	str	r3, [fp, #-16]
   4b554:	b	4b5f8 <__assert_fail@plt+0x38f0c>
   4b558:	ldr	r0, [fp, #-20]	; 0xffffffec
   4b55c:	bl	12470 <btowc@plt>
   4b560:	str	r0, [fp, #-36]	; 0xffffffdc
   4b564:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4b568:	cmn	r3, #1
   4b56c:	beq	4b5b0 <__assert_fail@plt+0x38ec4>
   4b570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b574:	ldr	r2, [r3, #60]	; 0x3c
   4b578:	ldr	r3, [fp, #-12]
   4b57c:	lsl	r3, r3, #2
   4b580:	add	r3, r2, r3
   4b584:	ldr	r1, [r3]
   4b588:	mov	r2, #1
   4b58c:	ldr	r3, [fp, #-16]
   4b590:	lsl	r2, r2, r3
   4b594:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b598:	ldr	r0, [r3, #60]	; 0x3c
   4b59c:	ldr	r3, [fp, #-12]
   4b5a0:	lsl	r3, r3, #2
   4b5a4:	add	r3, r0, r3
   4b5a8:	orr	r2, r1, r2
   4b5ac:	str	r2, [r3]
   4b5b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b5b4:	bic	r3, r3, #127	; 0x7f
   4b5b8:	cmp	r3, #0
   4b5bc:	bne	4b5e0 <__assert_fail@plt+0x38ef4>
   4b5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b5c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4b5c8:	cmp	r2, r3
   4b5cc:	beq	4b5e0 <__assert_fail@plt+0x38ef4>
   4b5d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4b5d4:	ldrb	r3, [r2, #88]	; 0x58
   4b5d8:	orr	r3, r3, #8
   4b5dc:	strb	r3, [r2, #88]	; 0x58
   4b5e0:	ldr	r3, [fp, #-16]
   4b5e4:	add	r3, r3, #1
   4b5e8:	str	r3, [fp, #-16]
   4b5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b5f0:	add	r3, r3, #1
   4b5f4:	str	r3, [fp, #-20]	; 0xffffffec
   4b5f8:	ldr	r3, [fp, #-16]
   4b5fc:	cmp	r3, #31
   4b600:	ble	4b558 <__assert_fail@plt+0x38e6c>
   4b604:	ldr	r3, [fp, #-12]
   4b608:	add	r3, r3, #1
   4b60c:	str	r3, [fp, #-12]
   4b610:	ldr	r3, [fp, #-12]
   4b614:	cmp	r3, #7
   4b618:	ble	4b54c <__assert_fail@plt+0x38e60>
   4b61c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b620:	ldr	r3, [r3]
   4b624:	cmp	r3, #0
   4b628:	moveq	r3, #1
   4b62c:	movne	r3, #0
   4b630:	uxtb	r3, r3
   4b634:	cmp	r3, #0
   4b638:	bne	4b65c <__assert_fail@plt+0x38f70>
   4b63c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b640:	ldr	r3, [r3, #32]
   4b644:	cmp	r3, #0
   4b648:	moveq	r3, #1
   4b64c:	movne	r3, #0
   4b650:	uxtb	r3, r3
   4b654:	cmp	r3, #0
   4b658:	beq	4b664 <__assert_fail@plt+0x38f78>
   4b65c:	mov	r3, #12
   4b660:	b	4b668 <__assert_fail@plt+0x38f7c>
   4b664:	mov	r3, #0
   4b668:	mov	r0, r3
   4b66c:	sub	sp, fp, #4
   4b670:	ldr	fp, [sp]
   4b674:	add	sp, sp, #4
   4b678:	pop	{pc}		; (ldr pc, [sp], #4)
   4b67c:	str	fp, [sp, #-8]!
   4b680:	str	lr, [sp, #4]
   4b684:	add	fp, sp, #4
   4b688:	sub	sp, sp, #40	; 0x28
   4b68c:	str	r0, [fp, #-40]	; 0xffffffd8
   4b690:	mov	r3, #0
   4b694:	str	r3, [fp, #-8]
   4b698:	mov	r3, #0
   4b69c:	str	r3, [fp, #-16]
   4b6a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4b6a4:	ldrb	r3, [r2, #88]	; 0x58
   4b6a8:	orr	r3, r3, #16
   4b6ac:	strb	r3, [r2, #88]	; 0x58
   4b6b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b6b4:	ldrb	r3, [r3, #88]	; 0x58
   4b6b8:	and	r3, r3, #8
   4b6bc:	uxtb	r3, r3
   4b6c0:	cmp	r3, #0
   4b6c4:	moveq	r3, #1
   4b6c8:	movne	r3, #0
   4b6cc:	uxtb	r3, r3
   4b6d0:	cmp	r3, #0
   4b6d4:	beq	4b794 <__assert_fail@plt+0x390a8>
   4b6d8:	mov	r3, #0
   4b6dc:	str	r3, [fp, #-20]	; 0xffffffec
   4b6e0:	mov	r3, #0
   4b6e4:	movt	r3, #1023	; 0x3ff
   4b6e8:	str	r3, [fp, #-24]	; 0xffffffe8
   4b6ec:	mvn	r3, #2013265921	; 0x78000001
   4b6f0:	str	r3, [fp, #-28]	; 0xffffffe4
   4b6f4:	mvn	r3, #-134217727	; 0xf8000001
   4b6f8:	str	r3, [fp, #-32]	; 0xffffffe0
   4b6fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b700:	ldr	r2, [fp, #-20]	; 0xffffffec
   4b704:	str	r2, [r3, #96]	; 0x60
   4b708:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b70c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4b710:	str	r2, [r3, #100]	; 0x64
   4b714:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b718:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4b71c:	str	r2, [r3, #104]	; 0x68
   4b720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b724:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4b728:	str	r2, [r3, #108]	; 0x6c
   4b72c:	mov	r3, #4
   4b730:	str	r3, [fp, #-8]
   4b734:	mov	r3, #128	; 0x80
   4b738:	str	r3, [fp, #-16]
   4b73c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b740:	ldrb	r3, [r3, #88]	; 0x58
   4b744:	ubfx	r3, r3, #2, #1
   4b748:	uxtb	r3, r3
   4b74c:	cmp	r3, #0
   4b750:	beq	4b794 <__assert_fail@plt+0x390a8>
   4b754:	ldr	r3, [fp, #-8]
   4b758:	add	r3, r3, #24
   4b75c:	lsl	r3, r3, #2
   4b760:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4b764:	add	r0, r2, r3
   4b768:	ldr	r3, [fp, #-16]
   4b76c:	rsb	r3, r3, #256	; 0x100
   4b770:	add	r2, r3, #7
   4b774:	cmp	r3, #0
   4b778:	movlt	r3, r2
   4b77c:	movge	r3, r3
   4b780:	asr	r3, r3, #3
   4b784:	mov	r2, r3
   4b788:	mov	r1, #0
   4b78c:	bl	12434 <memset@plt>
   4b790:	b	4b848 <__assert_fail@plt+0x3915c>
   4b794:	nop	{0}
   4b798:	b	4b83c <__assert_fail@plt+0x39150>
   4b79c:	mov	r3, #0
   4b7a0:	str	r3, [fp, #-12]
   4b7a4:	b	4b824 <__assert_fail@plt+0x39138>
   4b7a8:	bl	12368 <__ctype_b_loc@plt>
   4b7ac:	mov	r3, r0
   4b7b0:	ldr	r2, [r3]
   4b7b4:	ldr	r3, [fp, #-16]
   4b7b8:	lsl	r3, r3, #1
   4b7bc:	add	r3, r2, r3
   4b7c0:	ldrh	r3, [r3]
   4b7c4:	and	r3, r3, #8
   4b7c8:	cmp	r3, #0
   4b7cc:	bne	4b7dc <__assert_fail@plt+0x390f0>
   4b7d0:	ldr	r3, [fp, #-16]
   4b7d4:	cmp	r3, #95	; 0x5f
   4b7d8:	bne	4b80c <__assert_fail@plt+0x39120>
   4b7dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b7e0:	ldr	r2, [fp, #-8]
   4b7e4:	add	r2, r2, #24
   4b7e8:	ldr	r2, [r3, r2, lsl #2]
   4b7ec:	mov	r1, #1
   4b7f0:	ldr	r3, [fp, #-12]
   4b7f4:	lsl	r3, r1, r3
   4b7f8:	orr	r1, r2, r3
   4b7fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b800:	ldr	r2, [fp, #-8]
   4b804:	add	r2, r2, #24
   4b808:	str	r1, [r3, r2, lsl #2]
   4b80c:	ldr	r3, [fp, #-12]
   4b810:	add	r3, r3, #1
   4b814:	str	r3, [fp, #-12]
   4b818:	ldr	r3, [fp, #-16]
   4b81c:	add	r3, r3, #1
   4b820:	str	r3, [fp, #-16]
   4b824:	ldr	r3, [fp, #-12]
   4b828:	cmp	r3, #31
   4b82c:	ble	4b7a8 <__assert_fail@plt+0x390bc>
   4b830:	ldr	r3, [fp, #-8]
   4b834:	add	r3, r3, #1
   4b838:	str	r3, [fp, #-8]
   4b83c:	ldr	r3, [fp, #-8]
   4b840:	cmp	r3, #7
   4b844:	ble	4b79c <__assert_fail@plt+0x390b0>
   4b848:	sub	sp, fp, #4
   4b84c:	ldr	fp, [sp]
   4b850:	add	sp, sp, #4
   4b854:	pop	{pc}		; (ldr pc, [sp], #4)
   4b858:	str	fp, [sp, #-8]!
   4b85c:	str	lr, [sp, #4]
   4b860:	add	fp, sp, #4
   4b864:	sub	sp, sp, #24
   4b868:	str	r0, [fp, #-24]	; 0xffffffe8
   4b86c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b870:	ldr	r3, [r3]
   4b874:	str	r3, [fp, #-12]
   4b878:	ldr	r3, [fp, #-12]
   4b87c:	ldr	r3, [r3, #56]	; 0x38
   4b880:	str	r3, [fp, #-8]
   4b884:	b	4b8a4 <__assert_fail@plt+0x391b8>
   4b888:	ldr	r3, [fp, #-8]
   4b88c:	ldr	r3, [r3]
   4b890:	str	r3, [fp, #-16]
   4b894:	ldr	r0, [fp, #-8]
   4b898:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4b89c:	ldr	r3, [fp, #-16]
   4b8a0:	str	r3, [fp, #-8]
   4b8a4:	ldr	r3, [fp, #-8]
   4b8a8:	cmp	r3, #0
   4b8ac:	bne	4b888 <__assert_fail@plt+0x3919c>
   4b8b0:	ldr	r3, [fp, #-12]
   4b8b4:	mov	r2, #0
   4b8b8:	str	r2, [r3, #56]	; 0x38
   4b8bc:	ldr	r3, [fp, #-12]
   4b8c0:	mov	r2, #31
   4b8c4:	str	r2, [r3, #64]	; 0x40
   4b8c8:	ldr	r3, [fp, #-12]
   4b8cc:	mov	r2, #0
   4b8d0:	str	r2, [r3, #52]	; 0x34
   4b8d4:	ldr	r3, [fp, #-12]
   4b8d8:	ldr	r3, [r3, #16]
   4b8dc:	mov	r0, r3
   4b8e0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4b8e4:	ldr	r3, [fp, #-12]
   4b8e8:	mov	r2, #0
   4b8ec:	str	r2, [r3, #16]
   4b8f0:	nop	{0}
   4b8f4:	sub	sp, fp, #4
   4b8f8:	ldr	fp, [sp]
   4b8fc:	add	sp, sp, #4
   4b900:	pop	{pc}		; (ldr pc, [sp], #4)
   4b904:	str	fp, [sp, #-8]!
   4b908:	str	lr, [sp, #4]
   4b90c:	add	fp, sp, #4
   4b910:	sub	sp, sp, #56	; 0x38
   4b914:	str	r0, [fp, #-56]	; 0xffffffc8
   4b918:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b91c:	ldr	r3, [r3, #52]	; 0x34
   4b920:	ldr	r3, [r3, #12]
   4b924:	ldr	r3, [r3, #28]
   4b928:	str	r3, [fp, #-16]
   4b92c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b930:	ldr	r2, [fp, #-16]
   4b934:	str	r2, [r3, #72]	; 0x48
   4b938:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b93c:	ldr	r1, [r3, #24]
   4b940:	ldr	r2, [fp, #-16]
   4b944:	mov	r3, r2
   4b948:	lsl	r3, r3, #1
   4b94c:	add	r3, r3, r2
   4b950:	lsl	r3, r3, #2
   4b954:	add	r2, r1, r3
   4b958:	sub	r3, fp, #52	; 0x34
   4b95c:	mov	r1, r2
   4b960:	mov	r0, r3
   4b964:	bl	47a70 <__assert_fail@plt+0x35384>
   4b968:	mov	r3, r0
   4b96c:	str	r3, [fp, #-40]	; 0xffffffd8
   4b970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b974:	cmp	r3, #0
   4b978:	movne	r3, #1
   4b97c:	moveq	r3, #0
   4b980:	uxtb	r3, r3
   4b984:	cmp	r3, #0
   4b988:	beq	4b994 <__assert_fail@plt+0x392a8>
   4b98c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4b990:	b	4bce0 <__assert_fail@plt+0x395f4>
   4b994:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b998:	ldr	r3, [r3, #76]	; 0x4c
   4b99c:	cmp	r3, #0
   4b9a0:	ble	4bb60 <__assert_fail@plt+0x39474>
   4b9a4:	mov	r3, #0
   4b9a8:	str	r3, [fp, #-8]
   4b9ac:	b	4bb50 <__assert_fail@plt+0x39464>
   4b9b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4b9b4:	ldr	r3, [fp, #-8]
   4b9b8:	lsl	r3, r3, #2
   4b9bc:	add	r3, r2, r3
   4b9c0:	ldr	r3, [r3]
   4b9c4:	str	r3, [fp, #-20]	; 0xffffffec
   4b9c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4b9cc:	ldr	r2, [r3]
   4b9d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4b9d4:	lsl	r3, r3, #3
   4b9d8:	add	r3, r2, r3
   4b9dc:	ldrb	r3, [r3, #4]
   4b9e0:	str	r3, [fp, #-24]	; 0xffffffe8
   4b9e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4b9e8:	cmp	r3, #4
   4b9ec:	bne	4bb38 <__assert_fail@plt+0x3944c>
   4b9f0:	mov	r3, #0
   4b9f4:	str	r3, [fp, #-12]
   4b9f8:	b	4ba68 <__assert_fail@plt+0x3937c>
   4b9fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4ba00:	ldr	r2, [r3]
   4ba04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   4ba08:	ldr	r3, [fp, #-12]
   4ba0c:	lsl	r3, r3, #2
   4ba10:	add	r3, r1, r3
   4ba14:	ldr	r3, [r3]
   4ba18:	lsl	r3, r3, #3
   4ba1c:	add	r3, r2, r3
   4ba20:	str	r3, [fp, #-28]	; 0xffffffe4
   4ba24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ba28:	ldrb	r3, [r3, #4]
   4ba2c:	cmp	r3, #9
   4ba30:	bne	4ba5c <__assert_fail@plt+0x39370>
   4ba34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ba38:	ldr	r2, [r3]
   4ba3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4ba40:	ldr	r1, [r3]
   4ba44:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ba48:	lsl	r3, r3, #3
   4ba4c:	add	r3, r1, r3
   4ba50:	ldr	r3, [r3]
   4ba54:	cmp	r2, r3
   4ba58:	beq	4ba7c <__assert_fail@plt+0x39390>
   4ba5c:	ldr	r3, [fp, #-12]
   4ba60:	add	r3, r3, #1
   4ba64:	str	r3, [fp, #-12]
   4ba68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4ba6c:	ldr	r2, [fp, #-12]
   4ba70:	cmp	r2, r3
   4ba74:	blt	4b9fc <__assert_fail@plt+0x39310>
   4ba78:	b	4ba80 <__assert_fail@plt+0x39394>
   4ba7c:	nop	{0}
   4ba80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4ba84:	ldr	r2, [fp, #-12]
   4ba88:	cmp	r2, r3
   4ba8c:	beq	4bb40 <__assert_fail@plt+0x39454>
   4ba90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ba94:	cmp	r3, #4
   4ba98:	bne	4bb44 <__assert_fail@plt+0x39458>
   4ba9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4baa0:	ldr	r1, [r3, #20]
   4baa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4baa8:	mov	r3, r2
   4baac:	lsl	r3, r3, #1
   4bab0:	add	r3, r3, r2
   4bab4:	lsl	r3, r3, #2
   4bab8:	add	r3, r1, r3
   4babc:	ldr	r3, [r3, #8]
   4bac0:	ldr	r3, [r3]
   4bac4:	str	r3, [fp, #-32]	; 0xffffffe0
   4bac8:	sub	r3, fp, #52	; 0x34
   4bacc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4bad0:	mov	r0, r3
   4bad4:	bl	48c24 <__assert_fail@plt+0x36538>
   4bad8:	mov	r3, r0
   4badc:	cmp	r3, #0
   4bae0:	bne	4bb44 <__assert_fail@plt+0x39458>
   4bae4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bae8:	ldr	r1, [r3, #24]
   4baec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4baf0:	mov	r3, r2
   4baf4:	lsl	r3, r3, #1
   4baf8:	add	r3, r3, r2
   4bafc:	lsl	r3, r3, #2
   4bb00:	add	r2, r1, r3
   4bb04:	sub	r3, fp, #52	; 0x34
   4bb08:	mov	r1, r2
   4bb0c:	mov	r0, r3
   4bb10:	bl	4839c <__assert_fail@plt+0x35cb0>
   4bb14:	str	r0, [fp, #-36]	; 0xffffffdc
   4bb18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4bb1c:	cmp	r3, #0
   4bb20:	beq	4bb2c <__assert_fail@plt+0x39440>
   4bb24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4bb28:	b	4bce0 <__assert_fail@plt+0x395f4>
   4bb2c:	mov	r3, #0
   4bb30:	str	r3, [fp, #-8]
   4bb34:	b	4bb44 <__assert_fail@plt+0x39458>
   4bb38:	nop	{0}
   4bb3c:	b	4bb44 <__assert_fail@plt+0x39458>
   4bb40:	nop	{0}
   4bb44:	ldr	r3, [fp, #-8]
   4bb48:	add	r3, r3, #1
   4bb4c:	str	r3, [fp, #-8]
   4bb50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4bb54:	ldr	r2, [fp, #-8]
   4bb58:	cmp	r2, r3
   4bb5c:	blt	4b9b0 <__assert_fail@plt+0x392c4>
   4bb60:	sub	r2, fp, #52	; 0x34
   4bb64:	sub	r0, fp, #40	; 0x28
   4bb68:	mov	r3, #0
   4bb6c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4bb70:	bl	493a8 <__assert_fail@plt+0x36cbc>
   4bb74:	mov	r2, r0
   4bb78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bb7c:	str	r2, [r3, #36]	; 0x24
   4bb80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bb84:	ldr	r3, [r3, #36]	; 0x24
   4bb88:	cmp	r3, #0
   4bb8c:	moveq	r3, #1
   4bb90:	movne	r3, #0
   4bb94:	uxtb	r3, r3
   4bb98:	cmp	r3, #0
   4bb9c:	beq	4bba8 <__assert_fail@plt+0x394bc>
   4bba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4bba4:	b	4bce0 <__assert_fail@plt+0x395f4>
   4bba8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bbac:	ldr	r3, [r3, #36]	; 0x24
   4bbb0:	ldrb	r3, [r3, #52]	; 0x34
   4bbb4:	bic	r3, r3, #127	; 0x7f
   4bbb8:	uxtb	r3, r3
   4bbbc:	cmp	r3, #0
   4bbc0:	beq	4bca0 <__assert_fail@plt+0x395b4>
   4bbc4:	sub	r2, fp, #52	; 0x34
   4bbc8:	sub	r0, fp, #40	; 0x28
   4bbcc:	mov	r3, #1
   4bbd0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4bbd4:	bl	493a8 <__assert_fail@plt+0x36cbc>
   4bbd8:	mov	r2, r0
   4bbdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bbe0:	str	r2, [r3, #40]	; 0x28
   4bbe4:	sub	r2, fp, #52	; 0x34
   4bbe8:	sub	r0, fp, #40	; 0x28
   4bbec:	mov	r3, #2
   4bbf0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4bbf4:	bl	493a8 <__assert_fail@plt+0x36cbc>
   4bbf8:	mov	r2, r0
   4bbfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bc00:	str	r2, [r3, #44]	; 0x2c
   4bc04:	sub	r2, fp, #52	; 0x34
   4bc08:	sub	r0, fp, #40	; 0x28
   4bc0c:	mov	r3, #6
   4bc10:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4bc14:	bl	493a8 <__assert_fail@plt+0x36cbc>
   4bc18:	mov	r2, r0
   4bc1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bc20:	str	r2, [r3, #48]	; 0x30
   4bc24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bc28:	ldr	r3, [r3, #40]	; 0x28
   4bc2c:	cmp	r3, #0
   4bc30:	moveq	r3, #1
   4bc34:	movne	r3, #0
   4bc38:	uxtb	r3, r3
   4bc3c:	cmp	r3, #0
   4bc40:	bne	4bc64 <__assert_fail@plt+0x39578>
   4bc44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bc48:	ldr	r3, [r3, #44]	; 0x2c
   4bc4c:	cmp	r3, #0
   4bc50:	moveq	r3, #1
   4bc54:	movne	r3, #0
   4bc58:	uxtb	r3, r3
   4bc5c:	cmp	r3, #0
   4bc60:	beq	4bc6c <__assert_fail@plt+0x39580>
   4bc64:	mov	r3, #1
   4bc68:	b	4bc70 <__assert_fail@plt+0x39584>
   4bc6c:	mov	r3, #0
   4bc70:	cmp	r3, #0
   4bc74:	bne	4bc98 <__assert_fail@plt+0x395ac>
   4bc78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bc7c:	ldr	r3, [r3, #48]	; 0x30
   4bc80:	cmp	r3, #0
   4bc84:	moveq	r3, #1
   4bc88:	movne	r3, #0
   4bc8c:	uxtb	r3, r3
   4bc90:	cmp	r3, #0
   4bc94:	beq	4bcd0 <__assert_fail@plt+0x395e4>
   4bc98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4bc9c:	b	4bce0 <__assert_fail@plt+0x395f4>
   4bca0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bca4:	ldr	r2, [r3, #36]	; 0x24
   4bca8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bcac:	str	r2, [r3, #48]	; 0x30
   4bcb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bcb4:	ldr	r2, [r3, #48]	; 0x30
   4bcb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bcbc:	str	r2, [r3, #44]	; 0x2c
   4bcc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bcc4:	ldr	r2, [r3, #44]	; 0x2c
   4bcc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4bccc:	str	r2, [r3, #40]	; 0x28
   4bcd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4bcd4:	mov	r0, r3
   4bcd8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4bcdc:	mov	r3, #0
   4bce0:	mov	r0, r3
   4bce4:	sub	sp, fp, #4
   4bce8:	ldr	fp, [sp]
   4bcec:	add	sp, sp, #4
   4bcf0:	pop	{pc}		; (ldr pc, [sp], #4)
   4bcf4:	str	fp, [sp, #-8]!
   4bcf8:	str	lr, [sp, #4]
   4bcfc:	add	fp, sp, #4
   4bd00:	sub	sp, sp, #24
   4bd04:	str	r0, [fp, #-24]	; 0xffffffe8
   4bd08:	mov	r3, #0
   4bd0c:	strb	r3, [fp, #-13]
   4bd10:	mov	r3, #0
   4bd14:	strb	r3, [fp, #-14]
   4bd18:	mov	r3, #0
   4bd1c:	str	r3, [fp, #-8]
   4bd20:	b	4be90 <__assert_fail@plt+0x397a4>
   4bd24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bd28:	ldr	r2, [r3]
   4bd2c:	ldr	r3, [fp, #-8]
   4bd30:	lsl	r3, r3, #3
   4bd34:	add	r3, r2, r3
   4bd38:	ldrb	r3, [r3, #4]
   4bd3c:	sub	r3, r3, #1
   4bd40:	cmp	r3, #11
   4bd44:	ldrls	pc, [pc, r3, lsl #2]
   4bd48:	b	4be74 <__assert_fail@plt+0x39788>
   4bd4c:	andeq	fp, r4, ip, ror sp
   4bd50:	andeq	fp, r4, r8, ror lr
   4bd54:	andeq	fp, r4, r4, lsl #28
   4bd58:	andeq	fp, r4, r8, ror lr
   4bd5c:	strdeq	fp, [r4], -r8
   4bd60:	andeq	fp, r4, ip, ror #31
   4bd64:	andeq	fp, r4, r4, ror lr
   4bd68:	andeq	fp, r4, r8, ror lr
   4bd6c:	andeq	fp, r4, r8, ror lr
   4bd70:	andeq	fp, r4, r8, ror lr
   4bd74:	andeq	fp, r4, r8, ror lr
   4bd78:	andeq	fp, r4, ip, lsr #27
   4bd7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bd80:	ldr	r2, [r3]
   4bd84:	ldr	r3, [fp, #-8]
   4bd88:	lsl	r3, r3, #3
   4bd8c:	add	r3, r2, r3
   4bd90:	ldrb	r3, [r3]
   4bd94:	sxtb	r3, r3
   4bd98:	cmp	r3, #0
   4bd9c:	bge	4be80 <__assert_fail@plt+0x39794>
   4bda0:	mov	r3, #1
   4bda4:	strb	r3, [fp, #-13]
   4bda8:	b	4be80 <__assert_fail@plt+0x39794>
   4bdac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bdb0:	ldr	r2, [r3]
   4bdb4:	ldr	r3, [fp, #-8]
   4bdb8:	lsl	r3, r3, #3
   4bdbc:	add	r3, r2, r3
   4bdc0:	ldr	r3, [r3]
   4bdc4:	cmp	r3, #32
   4bdc8:	beq	4bdf0 <__assert_fail@plt+0x39704>
   4bdcc:	cmp	r3, #32
   4bdd0:	bhi	4bde0 <__assert_fail@plt+0x396f4>
   4bdd4:	cmp	r3, #16
   4bdd8:	beq	4bdf0 <__assert_fail@plt+0x39704>
   4bddc:	b	4bff4 <__assert_fail@plt+0x39908>
   4bde0:	cmp	r3, #64	; 0x40
   4bde4:	beq	4bdf0 <__assert_fail@plt+0x39704>
   4bde8:	cmp	r3, #128	; 0x80
   4bdec:	bne	4bff4 <__assert_fail@plt+0x39908>
   4bdf0:	nop	{0}
   4bdf4:	b	4be84 <__assert_fail@plt+0x39798>
   4bdf8:	mov	r3, #1
   4bdfc:	strb	r3, [fp, #-14]
   4be00:	b	4be84 <__assert_fail@plt+0x39798>
   4be04:	mov	r3, #0
   4be08:	str	r3, [fp, #-20]	; 0xffffffec
   4be0c:	mov	r3, #4
   4be10:	str	r3, [fp, #-12]
   4be14:	b	4be64 <__assert_fail@plt+0x39778>
   4be18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4be1c:	ldr	r2, [r3]
   4be20:	ldr	r3, [fp, #-8]
   4be24:	lsl	r3, r3, #3
   4be28:	add	r3, r2, r3
   4be2c:	ldr	r2, [r3]
   4be30:	ldr	r3, [fp, #-12]
   4be34:	lsl	r3, r3, #2
   4be38:	add	r3, r2, r3
   4be3c:	ldr	r2, [r3]
   4be40:	ldr	r3, [fp, #-20]	; 0xffffffec
   4be44:	lsr	r3, r2, r3
   4be48:	cmp	r3, #0
   4be4c:	bne	4bffc <__assert_fail@plt+0x39910>
   4be50:	mov	r3, #0
   4be54:	str	r3, [fp, #-20]	; 0xffffffec
   4be58:	ldr	r3, [fp, #-12]
   4be5c:	add	r3, r3, #1
   4be60:	str	r3, [fp, #-12]
   4be64:	ldr	r3, [fp, #-12]
   4be68:	cmp	r3, #7
   4be6c:	ble	4be18 <__assert_fail@plt+0x3972c>
   4be70:	b	4be84 <__assert_fail@plt+0x39798>
   4be74:	bl	12698 <abort@plt>
   4be78:	nop	{0}
   4be7c:	b	4be84 <__assert_fail@plt+0x39798>
   4be80:	nop	{0}
   4be84:	ldr	r3, [fp, #-8]
   4be88:	add	r3, r3, #1
   4be8c:	str	r3, [fp, #-8]
   4be90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4be94:	ldr	r2, [r3, #8]
   4be98:	ldr	r3, [fp, #-8]
   4be9c:	cmp	r2, r3
   4bea0:	bhi	4bd24 <__assert_fail@plt+0x39638>
   4bea4:	ldrb	r3, [fp, #-13]
   4bea8:	cmp	r3, #0
   4beac:	bne	4bebc <__assert_fail@plt+0x397d0>
   4beb0:	ldrb	r3, [fp, #-14]
   4beb4:	cmp	r3, #0
   4beb8:	beq	4bf8c <__assert_fail@plt+0x398a0>
   4bebc:	mov	r3, #0
   4bec0:	str	r3, [fp, #-8]
   4bec4:	b	4bf78 <__assert_fail@plt+0x3988c>
   4bec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4becc:	ldr	r2, [r3]
   4bed0:	ldr	r3, [fp, #-8]
   4bed4:	lsl	r3, r3, #3
   4bed8:	add	r3, r2, r3
   4bedc:	ldrb	r3, [r3, #4]
   4bee0:	cmp	r3, #1
   4bee4:	bne	4bf30 <__assert_fail@plt+0x39844>
   4bee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4beec:	ldr	r2, [r3]
   4bef0:	ldr	r3, [fp, #-8]
   4bef4:	lsl	r3, r3, #3
   4bef8:	add	r3, r2, r3
   4befc:	ldrb	r3, [r3]
   4bf00:	sxtb	r3, r3
   4bf04:	cmp	r3, #0
   4bf08:	bge	4bf30 <__assert_fail@plt+0x39844>
   4bf0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bf10:	ldr	r2, [r3]
   4bf14:	ldr	r3, [fp, #-8]
   4bf18:	lsl	r3, r3, #3
   4bf1c:	add	r2, r2, r3
   4bf20:	ldrb	r3, [r2, #6]
   4bf24:	bfc	r3, #5, #1
   4bf28:	strb	r3, [r2, #6]
   4bf2c:	b	4bf6c <__assert_fail@plt+0x39880>
   4bf30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bf34:	ldr	r2, [r3]
   4bf38:	ldr	r3, [fp, #-8]
   4bf3c:	lsl	r3, r3, #3
   4bf40:	add	r3, r2, r3
   4bf44:	ldrb	r3, [r3, #4]
   4bf48:	cmp	r3, #5
   4bf4c:	bne	4bf6c <__assert_fail@plt+0x39880>
   4bf50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bf54:	ldr	r2, [r3]
   4bf58:	ldr	r3, [fp, #-8]
   4bf5c:	lsl	r3, r3, #3
   4bf60:	add	r3, r2, r3
   4bf64:	mov	r2, #7
   4bf68:	strb	r2, [r3, #4]
   4bf6c:	ldr	r3, [fp, #-8]
   4bf70:	add	r3, r3, #1
   4bf74:	str	r3, [fp, #-8]
   4bf78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bf7c:	ldr	r2, [r3, #8]
   4bf80:	ldr	r3, [fp, #-8]
   4bf84:	cmp	r2, r3
   4bf88:	bhi	4bec8 <__assert_fail@plt+0x397dc>
   4bf8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bf90:	mov	r2, #1
   4bf94:	str	r2, [r3, #92]	; 0x5c
   4bf98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4bf9c:	ldrb	r3, [r2, #88]	; 0x58
   4bfa0:	bfc	r3, #2, #1
   4bfa4:	strb	r3, [r2, #88]	; 0x58
   4bfa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4bfac:	ldr	r3, [r3, #76]	; 0x4c
   4bfb0:	cmp	r3, #0
   4bfb4:	bgt	4bfc4 <__assert_fail@plt+0x398d8>
   4bfb8:	ldrb	r3, [fp, #-14]
   4bfbc:	cmp	r3, #0
   4bfc0:	beq	4bfcc <__assert_fail@plt+0x398e0>
   4bfc4:	mov	r3, #1
   4bfc8:	b	4bfd0 <__assert_fail@plt+0x398e4>
   4bfcc:	mov	r3, #0
   4bfd0:	and	r3, r3, #1
   4bfd4:	uxtb	r1, r3
   4bfd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4bfdc:	ldrb	r3, [r2, #88]	; 0x58
   4bfe0:	bfi	r3, r1, #1, #1
   4bfe4:	strb	r3, [r2, #88]	; 0x58
   4bfe8:	b	4c000 <__assert_fail@plt+0x39914>
   4bfec:	nop	{0}
   4bff0:	b	4c000 <__assert_fail@plt+0x39914>
   4bff4:	nop	{0}
   4bff8:	b	4c000 <__assert_fail@plt+0x39914>
   4bffc:	nop	{0}
   4c000:	sub	sp, fp, #4
   4c004:	ldr	fp, [sp]
   4c008:	add	sp, sp, #4
   4c00c:	pop	{pc}		; (ldr pc, [sp], #4)
   4c010:	str	fp, [sp, #-8]!
   4c014:	str	lr, [sp, #4]
   4c018:	add	fp, sp, #4
   4c01c:	sub	sp, sp, #24
   4c020:	str	r0, [fp, #-24]	; 0xffffffe8
   4c024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c028:	ldr	r3, [r3]
   4c02c:	str	r3, [fp, #-16]
   4c030:	ldr	r3, [fp, #-16]
   4c034:	ldr	r3, [r3, #4]
   4c038:	lsl	r3, r3, #2
   4c03c:	mov	r0, r3
   4c040:	bl	43510 <__assert_fail@plt+0x30e24>
   4c044:	mov	r3, r0
   4c048:	mov	r2, r3
   4c04c:	ldr	r3, [fp, #-16]
   4c050:	str	r2, [r3, #12]
   4c054:	ldr	r3, [fp, #-16]
   4c058:	ldr	r3, [r3, #4]
   4c05c:	lsl	r3, r3, #2
   4c060:	mov	r0, r3
   4c064:	bl	43510 <__assert_fail@plt+0x30e24>
   4c068:	mov	r3, r0
   4c06c:	mov	r2, r3
   4c070:	ldr	r3, [fp, #-16]
   4c074:	str	r2, [r3, #16]
   4c078:	ldr	r3, [fp, #-16]
   4c07c:	ldr	r2, [r3, #4]
   4c080:	mov	r3, r2
   4c084:	lsl	r3, r3, #1
   4c088:	add	r3, r3, r2
   4c08c:	lsl	r3, r3, #2
   4c090:	mov	r0, r3
   4c094:	bl	43510 <__assert_fail@plt+0x30e24>
   4c098:	mov	r3, r0
   4c09c:	mov	r2, r3
   4c0a0:	ldr	r3, [fp, #-16]
   4c0a4:	str	r2, [r3, #20]
   4c0a8:	ldr	r3, [fp, #-16]
   4c0ac:	ldr	r2, [r3, #4]
   4c0b0:	mov	r3, r2
   4c0b4:	lsl	r3, r3, #1
   4c0b8:	add	r3, r3, r2
   4c0bc:	lsl	r3, r3, #2
   4c0c0:	mov	r0, r3
   4c0c4:	bl	43510 <__assert_fail@plt+0x30e24>
   4c0c8:	mov	r3, r0
   4c0cc:	mov	r2, r3
   4c0d0:	ldr	r3, [fp, #-16]
   4c0d4:	str	r2, [r3, #24]
   4c0d8:	ldr	r3, [fp, #-16]
   4c0dc:	ldr	r3, [r3, #12]
   4c0e0:	cmp	r3, #0
   4c0e4:	moveq	r3, #1
   4c0e8:	movne	r3, #0
   4c0ec:	uxtb	r3, r3
   4c0f0:	cmp	r3, #0
   4c0f4:	bne	4c118 <__assert_fail@plt+0x39a2c>
   4c0f8:	ldr	r3, [fp, #-16]
   4c0fc:	ldr	r3, [r3, #16]
   4c100:	cmp	r3, #0
   4c104:	moveq	r3, #1
   4c108:	movne	r3, #0
   4c10c:	uxtb	r3, r3
   4c110:	cmp	r3, #0
   4c114:	beq	4c120 <__assert_fail@plt+0x39a34>
   4c118:	mov	r3, #1
   4c11c:	b	4c124 <__assert_fail@plt+0x39a38>
   4c120:	mov	r3, #0
   4c124:	cmp	r3, #0
   4c128:	bne	4c14c <__assert_fail@plt+0x39a60>
   4c12c:	ldr	r3, [fp, #-16]
   4c130:	ldr	r3, [r3, #20]
   4c134:	cmp	r3, #0
   4c138:	moveq	r3, #1
   4c13c:	movne	r3, #0
   4c140:	uxtb	r3, r3
   4c144:	cmp	r3, #0
   4c148:	beq	4c154 <__assert_fail@plt+0x39a68>
   4c14c:	mov	r3, #1
   4c150:	b	4c158 <__assert_fail@plt+0x39a6c>
   4c154:	mov	r3, #0
   4c158:	cmp	r3, #0
   4c15c:	bne	4c180 <__assert_fail@plt+0x39a94>
   4c160:	ldr	r3, [fp, #-16]
   4c164:	ldr	r3, [r3, #24]
   4c168:	cmp	r3, #0
   4c16c:	moveq	r3, #1
   4c170:	movne	r3, #0
   4c174:	uxtb	r3, r3
   4c178:	cmp	r3, #0
   4c17c:	beq	4c188 <__assert_fail@plt+0x39a9c>
   4c180:	mov	r3, #12
   4c184:	b	4c478 <__assert_fail@plt+0x39d8c>
   4c188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c18c:	ldr	r3, [r3, #24]
   4c190:	lsl	r3, r3, #2
   4c194:	mov	r0, r3
   4c198:	bl	43510 <__assert_fail@plt+0x30e24>
   4c19c:	mov	r3, r0
   4c1a0:	mov	r2, r3
   4c1a4:	ldr	r3, [fp, #-16]
   4c1a8:	str	r2, [r3, #132]	; 0x84
   4c1ac:	ldr	r3, [fp, #-16]
   4c1b0:	ldr	r3, [r3, #132]	; 0x84
   4c1b4:	cmp	r3, #0
   4c1b8:	beq	4c2a8 <__assert_fail@plt+0x39bbc>
   4c1bc:	mov	r3, #0
   4c1c0:	str	r3, [fp, #-12]
   4c1c4:	b	4c1f0 <__assert_fail@plt+0x39b04>
   4c1c8:	ldr	r3, [fp, #-16]
   4c1cc:	ldr	r2, [r3, #132]	; 0x84
   4c1d0:	ldr	r3, [fp, #-12]
   4c1d4:	lsl	r3, r3, #2
   4c1d8:	add	r3, r2, r3
   4c1dc:	ldr	r2, [fp, #-12]
   4c1e0:	str	r2, [r3]
   4c1e4:	ldr	r3, [fp, #-12]
   4c1e8:	add	r3, r3, #1
   4c1ec:	str	r3, [fp, #-12]
   4c1f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c1f4:	ldr	r2, [r3, #24]
   4c1f8:	ldr	r3, [fp, #-12]
   4c1fc:	cmp	r2, r3
   4c200:	bhi	4c1c8 <__assert_fail@plt+0x39adc>
   4c204:	ldr	r3, [fp, #-16]
   4c208:	ldr	r3, [r3, #52]	; 0x34
   4c20c:	ldr	r2, [fp, #-16]
   4c210:	movw	r1, #50852	; 0xc6a4
   4c214:	movt	r1, #4
   4c218:	mov	r0, r3
   4c21c:	bl	4c5ac <__assert_fail@plt+0x39ec0>
   4c220:	mov	r3, #0
   4c224:	str	r3, [fp, #-12]
   4c228:	b	4c25c <__assert_fail@plt+0x39b70>
   4c22c:	ldr	r3, [fp, #-16]
   4c230:	ldr	r2, [r3, #132]	; 0x84
   4c234:	ldr	r3, [fp, #-12]
   4c238:	lsl	r3, r3, #2
   4c23c:	add	r3, r2, r3
   4c240:	ldr	r3, [r3]
   4c244:	ldr	r2, [fp, #-12]
   4c248:	cmp	r2, r3
   4c24c:	bne	4c274 <__assert_fail@plt+0x39b88>
   4c250:	ldr	r3, [fp, #-12]
   4c254:	add	r3, r3, #1
   4c258:	str	r3, [fp, #-12]
   4c25c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c260:	ldr	r2, [r3, #24]
   4c264:	ldr	r3, [fp, #-12]
   4c268:	cmp	r2, r3
   4c26c:	bhi	4c22c <__assert_fail@plt+0x39b40>
   4c270:	b	4c278 <__assert_fail@plt+0x39b8c>
   4c274:	nop	{0}
   4c278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c27c:	ldr	r2, [r3, #24]
   4c280:	ldr	r3, [fp, #-12]
   4c284:	cmp	r2, r3
   4c288:	bne	4c2a8 <__assert_fail@plt+0x39bbc>
   4c28c:	ldr	r3, [fp, #-16]
   4c290:	ldr	r3, [r3, #132]	; 0x84
   4c294:	mov	r0, r3
   4c298:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4c29c:	ldr	r3, [fp, #-16]
   4c2a0:	mov	r2, #0
   4c2a4:	str	r2, [r3, #132]	; 0x84
   4c2a8:	ldr	r3, [fp, #-16]
   4c2ac:	ldr	r3, [r3, #52]	; 0x34
   4c2b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4c2b4:	movw	r1, #51236	; 0xc824
   4c2b8:	movt	r1, #4
   4c2bc:	mov	r0, r3
   4c2c0:	bl	4c48c <__assert_fail@plt+0x39da0>
   4c2c4:	str	r0, [fp, #-8]
   4c2c8:	ldr	r3, [fp, #-8]
   4c2cc:	cmp	r3, #0
   4c2d0:	movne	r3, #1
   4c2d4:	moveq	r3, #0
   4c2d8:	uxtb	r3, r3
   4c2dc:	cmp	r3, #0
   4c2e0:	beq	4c2ec <__assert_fail@plt+0x39c00>
   4c2e4:	ldr	r3, [fp, #-8]
   4c2e8:	b	4c478 <__assert_fail@plt+0x39d8c>
   4c2ec:	ldr	r3, [fp, #-16]
   4c2f0:	ldr	r3, [r3, #52]	; 0x34
   4c2f4:	ldr	r2, [fp, #-16]
   4c2f8:	movw	r1, #52072	; 0xcb68
   4c2fc:	movt	r1, #4
   4c300:	mov	r0, r3
   4c304:	bl	4c48c <__assert_fail@plt+0x39da0>
   4c308:	str	r0, [fp, #-8]
   4c30c:	ldr	r3, [fp, #-8]
   4c310:	cmp	r3, #0
   4c314:	movne	r3, #1
   4c318:	moveq	r3, #0
   4c31c:	uxtb	r3, r3
   4c320:	cmp	r3, #0
   4c324:	beq	4c330 <__assert_fail@plt+0x39c44>
   4c328:	ldr	r3, [fp, #-8]
   4c32c:	b	4c478 <__assert_fail@plt+0x39d8c>
   4c330:	ldr	r3, [fp, #-16]
   4c334:	ldr	r3, [r3, #52]	; 0x34
   4c338:	ldr	r2, [fp, #-16]
   4c33c:	movw	r1, #52344	; 0xcc78
   4c340:	movt	r1, #4
   4c344:	mov	r0, r3
   4c348:	bl	4c5ac <__assert_fail@plt+0x39ec0>
   4c34c:	ldr	r3, [fp, #-16]
   4c350:	ldr	r3, [r3, #52]	; 0x34
   4c354:	ldr	r2, [fp, #-16]
   4c358:	movw	r1, #52556	; 0xcd4c
   4c35c:	movt	r1, #4
   4c360:	mov	r0, r3
   4c364:	bl	4c5ac <__assert_fail@plt+0x39ec0>
   4c368:	str	r0, [fp, #-8]
   4c36c:	ldr	r3, [fp, #-8]
   4c370:	cmp	r3, #0
   4c374:	movne	r3, #1
   4c378:	moveq	r3, #0
   4c37c:	uxtb	r3, r3
   4c380:	cmp	r3, #0
   4c384:	beq	4c390 <__assert_fail@plt+0x39ca4>
   4c388:	ldr	r3, [fp, #-8]
   4c38c:	b	4c478 <__assert_fail@plt+0x39d8c>
   4c390:	ldr	r0, [fp, #-16]
   4c394:	bl	4d93c <__assert_fail@plt+0x3b250>
   4c398:	str	r0, [fp, #-8]
   4c39c:	ldr	r3, [fp, #-8]
   4c3a0:	cmp	r3, #0
   4c3a4:	movne	r3, #1
   4c3a8:	moveq	r3, #0
   4c3ac:	uxtb	r3, r3
   4c3b0:	cmp	r3, #0
   4c3b4:	beq	4c3c0 <__assert_fail@plt+0x39cd4>
   4c3b8:	ldr	r3, [fp, #-8]
   4c3bc:	b	4c478 <__assert_fail@plt+0x39d8c>
   4c3c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c3c4:	ldrb	r3, [r3, #28]
   4c3c8:	and	r3, r3, #16
   4c3cc:	uxtb	r3, r3
   4c3d0:	cmp	r3, #0
   4c3d4:	bne	4c400 <__assert_fail@plt+0x39d14>
   4c3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c3dc:	ldr	r3, [r3, #24]
   4c3e0:	cmp	r3, #0
   4c3e4:	beq	4c400 <__assert_fail@plt+0x39d14>
   4c3e8:	ldr	r3, [fp, #-16]
   4c3ec:	ldrb	r3, [r3, #88]	; 0x58
   4c3f0:	and	r3, r3, #1
   4c3f4:	uxtb	r3, r3
   4c3f8:	cmp	r3, #0
   4c3fc:	bne	4c410 <__assert_fail@plt+0x39d24>
   4c400:	ldr	r3, [fp, #-16]
   4c404:	ldr	r3, [r3, #76]	; 0x4c
   4c408:	cmp	r3, #0
   4c40c:	beq	4c474 <__assert_fail@plt+0x39d88>
   4c410:	ldr	r3, [fp, #-16]
   4c414:	ldr	r2, [r3, #8]
   4c418:	mov	r3, r2
   4c41c:	lsl	r3, r3, #1
   4c420:	add	r3, r3, r2
   4c424:	lsl	r3, r3, #2
   4c428:	mov	r0, r3
   4c42c:	bl	43510 <__assert_fail@plt+0x30e24>
   4c430:	mov	r3, r0
   4c434:	mov	r2, r3
   4c438:	ldr	r3, [fp, #-16]
   4c43c:	str	r2, [r3, #28]
   4c440:	ldr	r3, [fp, #-16]
   4c444:	ldr	r3, [r3, #28]
   4c448:	cmp	r3, #0
   4c44c:	moveq	r3, #1
   4c450:	movne	r3, #0
   4c454:	uxtb	r3, r3
   4c458:	cmp	r3, #0
   4c45c:	beq	4c468 <__assert_fail@plt+0x39d7c>
   4c460:	mov	r3, #12
   4c464:	b	4c478 <__assert_fail@plt+0x39d8c>
   4c468:	ldr	r0, [fp, #-16]
   4c46c:	bl	4d7b4 <__assert_fail@plt+0x3b0c8>
   4c470:	str	r0, [fp, #-8]
   4c474:	ldr	r3, [fp, #-8]
   4c478:	mov	r0, r3
   4c47c:	sub	sp, fp, #4
   4c480:	ldr	fp, [sp]
   4c484:	add	sp, sp, #4
   4c488:	pop	{pc}		; (ldr pc, [sp], #4)
   4c48c:	str	fp, [sp, #-8]!
   4c490:	str	lr, [sp, #4]
   4c494:	add	fp, sp, #4
   4c498:	sub	sp, sp, #32
   4c49c:	str	r0, [fp, #-24]	; 0xffffffe8
   4c4a0:	str	r1, [fp, #-28]	; 0xffffffe4
   4c4a4:	str	r2, [fp, #-32]	; 0xffffffe0
   4c4a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c4ac:	str	r3, [fp, #-8]
   4c4b0:	b	4c4e0 <__assert_fail@plt+0x39df4>
   4c4b4:	ldr	r3, [fp, #-8]
   4c4b8:	ldr	r3, [r3, #4]
   4c4bc:	cmp	r3, #0
   4c4c0:	beq	4c4d4 <__assert_fail@plt+0x39de8>
   4c4c4:	ldr	r3, [fp, #-8]
   4c4c8:	ldr	r3, [r3, #4]
   4c4cc:	str	r3, [fp, #-8]
   4c4d0:	b	4c4e0 <__assert_fail@plt+0x39df4>
   4c4d4:	ldr	r3, [fp, #-8]
   4c4d8:	ldr	r3, [r3, #8]
   4c4dc:	str	r3, [fp, #-8]
   4c4e0:	ldr	r3, [fp, #-8]
   4c4e4:	ldr	r3, [r3, #4]
   4c4e8:	cmp	r3, #0
   4c4ec:	bne	4c4b4 <__assert_fail@plt+0x39dc8>
   4c4f0:	ldr	r3, [fp, #-8]
   4c4f4:	ldr	r3, [r3, #8]
   4c4f8:	cmp	r3, #0
   4c4fc:	bne	4c4b4 <__assert_fail@plt+0x39dc8>
   4c500:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c504:	ldr	r1, [fp, #-8]
   4c508:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c50c:	blx	r3
   4c510:	str	r0, [fp, #-12]
   4c514:	ldr	r3, [fp, #-12]
   4c518:	cmp	r3, #0
   4c51c:	movne	r3, #1
   4c520:	moveq	r3, #0
   4c524:	uxtb	r3, r3
   4c528:	cmp	r3, #0
   4c52c:	beq	4c538 <__assert_fail@plt+0x39e4c>
   4c530:	ldr	r3, [fp, #-12]
   4c534:	b	4c598 <__assert_fail@plt+0x39eac>
   4c538:	ldr	r3, [fp, #-8]
   4c53c:	ldr	r3, [r3]
   4c540:	cmp	r3, #0
   4c544:	bne	4c550 <__assert_fail@plt+0x39e64>
   4c548:	mov	r3, #0
   4c54c:	b	4c598 <__assert_fail@plt+0x39eac>
   4c550:	ldr	r3, [fp, #-8]
   4c554:	str	r3, [fp, #-16]
   4c558:	ldr	r3, [fp, #-8]
   4c55c:	ldr	r3, [r3]
   4c560:	str	r3, [fp, #-8]
   4c564:	ldr	r3, [fp, #-8]
   4c568:	ldr	r3, [r3, #8]
   4c56c:	ldr	r2, [fp, #-16]
   4c570:	cmp	r2, r3
   4c574:	beq	4c500 <__assert_fail@plt+0x39e14>
   4c578:	ldr	r3, [fp, #-8]
   4c57c:	ldr	r3, [r3, #8]
   4c580:	cmp	r3, #0
   4c584:	beq	4c500 <__assert_fail@plt+0x39e14>
   4c588:	ldr	r3, [fp, #-8]
   4c58c:	ldr	r3, [r3, #8]
   4c590:	str	r3, [fp, #-8]
   4c594:	b	4c4e0 <__assert_fail@plt+0x39df4>
   4c598:	mov	r0, r3
   4c59c:	sub	sp, fp, #4
   4c5a0:	ldr	fp, [sp]
   4c5a4:	add	sp, sp, #4
   4c5a8:	pop	{pc}		; (ldr pc, [sp], #4)
   4c5ac:	str	fp, [sp, #-8]!
   4c5b0:	str	lr, [sp, #4]
   4c5b4:	add	fp, sp, #4
   4c5b8:	sub	sp, sp, #32
   4c5bc:	str	r0, [fp, #-24]	; 0xffffffe8
   4c5c0:	str	r1, [fp, #-28]	; 0xffffffe4
   4c5c4:	str	r2, [fp, #-32]	; 0xffffffe0
   4c5c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c5cc:	str	r3, [fp, #-8]
   4c5d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c5d4:	ldr	r1, [fp, #-8]
   4c5d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4c5dc:	blx	r3
   4c5e0:	str	r0, [fp, #-16]
   4c5e4:	ldr	r3, [fp, #-16]
   4c5e8:	cmp	r3, #0
   4c5ec:	movne	r3, #1
   4c5f0:	moveq	r3, #0
   4c5f4:	uxtb	r3, r3
   4c5f8:	cmp	r3, #0
   4c5fc:	beq	4c608 <__assert_fail@plt+0x39f1c>
   4c600:	ldr	r3, [fp, #-16]
   4c604:	b	4c690 <__assert_fail@plt+0x39fa4>
   4c608:	ldr	r3, [fp, #-8]
   4c60c:	ldr	r3, [r3, #4]
   4c610:	cmp	r3, #0
   4c614:	beq	4c628 <__assert_fail@plt+0x39f3c>
   4c618:	ldr	r3, [fp, #-8]
   4c61c:	ldr	r3, [r3, #4]
   4c620:	str	r3, [fp, #-8]
   4c624:	b	4c5d0 <__assert_fail@plt+0x39ee4>
   4c628:	mov	r3, #0
   4c62c:	str	r3, [fp, #-12]
   4c630:	b	4c65c <__assert_fail@plt+0x39f70>
   4c634:	ldr	r3, [fp, #-8]
   4c638:	str	r3, [fp, #-12]
   4c63c:	ldr	r3, [fp, #-8]
   4c640:	ldr	r3, [r3]
   4c644:	str	r3, [fp, #-8]
   4c648:	ldr	r3, [fp, #-8]
   4c64c:	cmp	r3, #0
   4c650:	bne	4c65c <__assert_fail@plt+0x39f70>
   4c654:	mov	r3, #0
   4c658:	b	4c690 <__assert_fail@plt+0x39fa4>
   4c65c:	ldr	r3, [fp, #-8]
   4c660:	ldr	r3, [r3, #8]
   4c664:	ldr	r2, [fp, #-12]
   4c668:	cmp	r2, r3
   4c66c:	beq	4c634 <__assert_fail@plt+0x39f48>
   4c670:	ldr	r3, [fp, #-8]
   4c674:	ldr	r3, [r3, #8]
   4c678:	cmp	r3, #0
   4c67c:	beq	4c634 <__assert_fail@plt+0x39f48>
   4c680:	ldr	r3, [fp, #-8]
   4c684:	ldr	r3, [r3, #8]
   4c688:	str	r3, [fp, #-8]
   4c68c:	b	4c5d0 <__assert_fail@plt+0x39ee4>
   4c690:	mov	r0, r3
   4c694:	sub	sp, fp, #4
   4c698:	ldr	fp, [sp]
   4c69c:	add	sp, sp, #4
   4c6a0:	pop	{pc}		; (ldr pc, [sp], #4)
   4c6a4:	push	{fp}		; (str fp, [sp, #-4]!)
   4c6a8:	add	fp, sp, #0
   4c6ac:	sub	sp, sp, #28
   4c6b0:	str	r0, [fp, #-24]	; 0xffffffe8
   4c6b4:	str	r1, [fp, #-28]	; 0xffffffe4
   4c6b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4c6bc:	str	r3, [fp, #-8]
   4c6c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c6c4:	ldrb	r3, [r3, #24]
   4c6c8:	cmp	r3, #4
   4c6cc:	bne	4c734 <__assert_fail@plt+0x3a048>
   4c6d0:	ldr	r3, [fp, #-8]
   4c6d4:	ldr	r3, [r3, #132]	; 0x84
   4c6d8:	cmp	r3, #0
   4c6dc:	beq	4c734 <__assert_fail@plt+0x3a048>
   4c6e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c6e4:	ldr	r3, [r3, #20]
   4c6e8:	str	r3, [fp, #-12]
   4c6ec:	ldr	r3, [fp, #-8]
   4c6f0:	ldr	r2, [r3, #132]	; 0x84
   4c6f4:	ldr	r3, [fp, #-12]
   4c6f8:	lsl	r3, r3, #2
   4c6fc:	add	r3, r2, r3
   4c700:	ldr	r2, [r3]
   4c704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c708:	str	r2, [r3, #20]
   4c70c:	ldr	r3, [fp, #-8]
   4c710:	ldr	r3, [r3, #80]	; 0x50
   4c714:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4c718:	ldr	r2, [r2, #20]
   4c71c:	mov	r1, #1
   4c720:	lsl	r2, r1, r2
   4c724:	orr	r2, r3, r2
   4c728:	ldr	r3, [fp, #-8]
   4c72c:	str	r2, [r3, #80]	; 0x50
   4c730:	b	4c810 <__assert_fail@plt+0x3a124>
   4c734:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c738:	ldrb	r3, [r3, #24]
   4c73c:	cmp	r3, #17
   4c740:	bne	4c810 <__assert_fail@plt+0x3a124>
   4c744:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c748:	ldr	r3, [r3, #4]
   4c74c:	cmp	r3, #0
   4c750:	beq	4c810 <__assert_fail@plt+0x3a124>
   4c754:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c758:	ldr	r3, [r3, #4]
   4c75c:	ldrb	r3, [r3, #24]
   4c760:	cmp	r3, #17
   4c764:	bne	4c810 <__assert_fail@plt+0x3a124>
   4c768:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c76c:	ldr	r3, [r3, #4]
   4c770:	ldr	r3, [r3, #20]
   4c774:	str	r3, [fp, #-16]
   4c778:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c77c:	ldr	r3, [r3, #4]
   4c780:	ldr	r2, [r3, #4]
   4c784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c788:	str	r2, [r3, #4]
   4c78c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c790:	ldr	r3, [r3, #4]
   4c794:	cmp	r3, #0
   4c798:	beq	4c7ac <__assert_fail@plt+0x3a0c0>
   4c79c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c7a0:	ldr	r3, [r3, #4]
   4c7a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4c7a8:	str	r2, [r3]
   4c7ac:	ldr	r3, [fp, #-8]
   4c7b0:	ldr	r2, [r3, #132]	; 0x84
   4c7b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4c7b8:	ldr	r3, [r3, #20]
   4c7bc:	lsl	r3, r3, #2
   4c7c0:	add	r2, r2, r3
   4c7c4:	ldr	r3, [fp, #-8]
   4c7c8:	ldr	r1, [r3, #132]	; 0x84
   4c7cc:	ldr	r3, [fp, #-16]
   4c7d0:	lsl	r3, r3, #2
   4c7d4:	add	r3, r1, r3
   4c7d8:	ldr	r2, [r2]
   4c7dc:	str	r2, [r3]
   4c7e0:	ldr	r3, [fp, #-16]
   4c7e4:	cmp	r3, #31
   4c7e8:	bgt	4c810 <__assert_fail@plt+0x3a124>
   4c7ec:	ldr	r3, [fp, #-8]
   4c7f0:	ldr	r2, [r3, #80]	; 0x50
   4c7f4:	mov	r1, #1
   4c7f8:	ldr	r3, [fp, #-16]
   4c7fc:	lsl	r3, r1, r3
   4c800:	mvn	r3, r3
   4c804:	and	r2, r2, r3
   4c808:	ldr	r3, [fp, #-8]
   4c80c:	str	r2, [r3, #80]	; 0x50
   4c810:	mov	r3, #0
   4c814:	mov	r0, r3
   4c818:	add	sp, fp, #0
   4c81c:	pop	{fp}		; (ldr fp, [sp], #4)
   4c820:	bx	lr
   4c824:	str	fp, [sp, #-8]!
   4c828:	str	lr, [sp, #4]
   4c82c:	add	fp, sp, #4
   4c830:	sub	sp, sp, #16
   4c834:	str	r0, [fp, #-16]
   4c838:	str	r1, [fp, #-20]	; 0xffffffec
   4c83c:	ldr	r3, [fp, #-16]
   4c840:	str	r3, [fp, #-8]
   4c844:	mov	r3, #0
   4c848:	str	r3, [fp, #-12]
   4c84c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c850:	ldr	r3, [r3, #4]
   4c854:	cmp	r3, #0
   4c858:	beq	4c8b4 <__assert_fail@plt+0x3a1c8>
   4c85c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c860:	ldr	r3, [r3, #4]
   4c864:	ldrb	r3, [r3, #24]
   4c868:	cmp	r3, #17
   4c86c:	bne	4c8b4 <__assert_fail@plt+0x3a1c8>
   4c870:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c874:	ldr	r2, [r3, #4]
   4c878:	sub	r3, fp, #12
   4c87c:	ldr	r1, [fp, #-8]
   4c880:	mov	r0, r3
   4c884:	bl	4c934 <__assert_fail@plt+0x3a248>
   4c888:	mov	r2, r0
   4c88c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c890:	str	r2, [r3, #4]
   4c894:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c898:	ldr	r3, [r3, #4]
   4c89c:	cmp	r3, #0
   4c8a0:	beq	4c8b4 <__assert_fail@plt+0x3a1c8>
   4c8a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c8a8:	ldr	r3, [r3, #4]
   4c8ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   4c8b0:	str	r2, [r3]
   4c8b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c8b8:	ldr	r3, [r3, #8]
   4c8bc:	cmp	r3, #0
   4c8c0:	beq	4c91c <__assert_fail@plt+0x3a230>
   4c8c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c8c8:	ldr	r3, [r3, #8]
   4c8cc:	ldrb	r3, [r3, #24]
   4c8d0:	cmp	r3, #17
   4c8d4:	bne	4c91c <__assert_fail@plt+0x3a230>
   4c8d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c8dc:	ldr	r2, [r3, #8]
   4c8e0:	sub	r3, fp, #12
   4c8e4:	ldr	r1, [fp, #-8]
   4c8e8:	mov	r0, r3
   4c8ec:	bl	4c934 <__assert_fail@plt+0x3a248>
   4c8f0:	mov	r2, r0
   4c8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c8f8:	str	r2, [r3, #8]
   4c8fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c900:	ldr	r3, [r3, #8]
   4c904:	cmp	r3, #0
   4c908:	beq	4c91c <__assert_fail@plt+0x3a230>
   4c90c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4c910:	ldr	r3, [r3, #8]
   4c914:	ldr	r2, [fp, #-20]	; 0xffffffec
   4c918:	str	r2, [r3]
   4c91c:	ldr	r3, [fp, #-12]
   4c920:	mov	r0, r3
   4c924:	sub	sp, fp, #4
   4c928:	ldr	fp, [sp]
   4c92c:	add	sp, sp, #4
   4c930:	pop	{pc}		; (ldr pc, [sp], #4)
   4c934:	str	fp, [sp, #-8]!
   4c938:	str	lr, [sp, #4]
   4c93c:	add	fp, sp, #4
   4c940:	sub	sp, sp, #40	; 0x28
   4c944:	str	r0, [fp, #-32]	; 0xffffffe0
   4c948:	str	r1, [fp, #-36]	; 0xffffffdc
   4c94c:	str	r2, [fp, #-40]	; 0xffffffd8
   4c950:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c954:	ldr	r3, [r3]
   4c958:	str	r3, [fp, #-8]
   4c95c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c960:	ldr	r3, [r3, #4]
   4c964:	str	r3, [fp, #-12]
   4c968:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4c96c:	ldrb	r3, [r3, #28]
   4c970:	and	r3, r3, #16
   4c974:	uxtb	r3, r3
   4c978:	cmp	r3, #0
   4c97c:	beq	4c9cc <__assert_fail@plt+0x3a2e0>
   4c980:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c984:	ldr	r3, [r3, #4]
   4c988:	cmp	r3, #0
   4c98c:	beq	4c9cc <__assert_fail@plt+0x3a2e0>
   4c990:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c994:	ldr	r3, [r3, #20]
   4c998:	cmp	r3, #31
   4c99c:	bgt	4c9c0 <__assert_fail@plt+0x3a2d4>
   4c9a0:	ldr	r3, [fp, #-8]
   4c9a4:	ldr	r2, [r3, #80]	; 0x50
   4c9a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c9ac:	ldr	r3, [r3, #20]
   4c9b0:	lsr	r3, r2, r3
   4c9b4:	and	r3, r3, #1
   4c9b8:	cmp	r3, #0
   4c9bc:	bne	4c9cc <__assert_fail@plt+0x3a2e0>
   4c9c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4c9c4:	ldr	r3, [r3, #4]
   4c9c8:	b	4cb54 <__assert_fail@plt+0x3a468>
   4c9cc:	mov	r3, #8
   4c9d0:	mov	r2, #0
   4c9d4:	mov	r1, #0
   4c9d8:	ldr	r0, [fp, #-8]
   4c9dc:	bl	52be4 <__assert_fail@plt+0x404f8>
   4c9e0:	str	r0, [fp, #-16]
   4c9e4:	mov	r3, #9
   4c9e8:	mov	r2, #0
   4c9ec:	mov	r1, #0
   4c9f0:	ldr	r0, [fp, #-8]
   4c9f4:	bl	52be4 <__assert_fail@plt+0x404f8>
   4c9f8:	str	r0, [fp, #-20]	; 0xffffffec
   4c9fc:	ldr	r3, [fp, #-12]
   4ca00:	cmp	r3, #0
   4ca04:	beq	4ca24 <__assert_fail@plt+0x3a338>
   4ca08:	mov	r3, #16
   4ca0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   4ca10:	ldr	r1, [fp, #-12]
   4ca14:	ldr	r0, [fp, #-8]
   4ca18:	bl	52be4 <__assert_fail@plt+0x404f8>
   4ca1c:	mov	r3, r0
   4ca20:	b	4ca28 <__assert_fail@plt+0x3a33c>
   4ca24:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ca28:	str	r3, [fp, #-24]	; 0xffffffe8
   4ca2c:	mov	r3, #16
   4ca30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ca34:	ldr	r1, [fp, #-16]
   4ca38:	ldr	r0, [fp, #-8]
   4ca3c:	bl	52be4 <__assert_fail@plt+0x404f8>
   4ca40:	str	r0, [fp, #-28]	; 0xffffffe4
   4ca44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ca48:	cmp	r3, #0
   4ca4c:	moveq	r3, #1
   4ca50:	movne	r3, #0
   4ca54:	uxtb	r3, r3
   4ca58:	cmp	r3, #0
   4ca5c:	bne	4ca7c <__assert_fail@plt+0x3a390>
   4ca60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ca64:	cmp	r3, #0
   4ca68:	moveq	r3, #1
   4ca6c:	movne	r3, #0
   4ca70:	uxtb	r3, r3
   4ca74:	cmp	r3, #0
   4ca78:	beq	4ca84 <__assert_fail@plt+0x3a398>
   4ca7c:	mov	r3, #1
   4ca80:	b	4ca88 <__assert_fail@plt+0x3a39c>
   4ca84:	mov	r3, #0
   4ca88:	cmp	r3, #0
   4ca8c:	bne	4caac <__assert_fail@plt+0x3a3c0>
   4ca90:	ldr	r3, [fp, #-16]
   4ca94:	cmp	r3, #0
   4ca98:	moveq	r3, #1
   4ca9c:	movne	r3, #0
   4caa0:	uxtb	r3, r3
   4caa4:	cmp	r3, #0
   4caa8:	beq	4cab4 <__assert_fail@plt+0x3a3c8>
   4caac:	mov	r3, #1
   4cab0:	b	4cab8 <__assert_fail@plt+0x3a3cc>
   4cab4:	mov	r3, #0
   4cab8:	cmp	r3, #0
   4cabc:	bne	4cadc <__assert_fail@plt+0x3a3f0>
   4cac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cac4:	cmp	r3, #0
   4cac8:	moveq	r3, #1
   4cacc:	movne	r3, #0
   4cad0:	uxtb	r3, r3
   4cad4:	cmp	r3, #0
   4cad8:	beq	4caf0 <__assert_fail@plt+0x3a404>
   4cadc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4cae0:	mov	r2, #12
   4cae4:	str	r2, [r3]
   4cae8:	mov	r3, #0
   4caec:	b	4cb54 <__assert_fail@plt+0x3a468>
   4caf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4caf4:	ldr	r2, [r3, #20]
   4caf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cafc:	str	r2, [r3, #20]
   4cb00:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cb04:	ldr	r2, [r3, #20]
   4cb08:	ldr	r3, [fp, #-16]
   4cb0c:	str	r2, [r3, #20]
   4cb10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4cb14:	ldrb	r3, [r3, #26]
   4cb18:	ubfx	r3, r3, #3, #1
   4cb1c:	uxtb	r1, r3
   4cb20:	ldr	r2, [fp, #-20]	; 0xffffffec
   4cb24:	ldrb	r3, [r2, #26]
   4cb28:	bfi	r3, r1, #3, #1
   4cb2c:	strb	r3, [r2, #26]
   4cb30:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cb34:	ldrb	r3, [r3, #26]
   4cb38:	ubfx	r3, r3, #3, #1
   4cb3c:	uxtb	r1, r3
   4cb40:	ldr	r2, [fp, #-16]
   4cb44:	ldrb	r3, [r2, #26]
   4cb48:	bfi	r3, r1, #3, #1
   4cb4c:	strb	r3, [r2, #26]
   4cb50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4cb54:	mov	r0, r3
   4cb58:	sub	sp, fp, #4
   4cb5c:	ldr	fp, [sp]
   4cb60:	add	sp, sp, #4
   4cb64:	pop	{pc}		; (ldr pc, [sp], #4)
   4cb68:	str	fp, [sp, #-8]!
   4cb6c:	str	lr, [sp, #4]
   4cb70:	add	fp, sp, #4
   4cb74:	sub	sp, sp, #16
   4cb78:	str	r0, [fp, #-16]
   4cb7c:	str	r1, [fp, #-20]	; 0xffffffec
   4cb80:	ldr	r3, [fp, #-16]
   4cb84:	str	r3, [fp, #-8]
   4cb88:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cb8c:	ldrb	r3, [r3, #24]
   4cb90:	cmp	r3, #16
   4cb94:	bne	4cbc4 <__assert_fail@plt+0x3a4d8>
   4cb98:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cb9c:	ldr	r3, [r3, #4]
   4cba0:	ldr	r2, [r3, #12]
   4cba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cba8:	str	r2, [r3, #12]
   4cbac:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cbb0:	ldr	r3, [r3, #4]
   4cbb4:	ldr	r2, [r3, #28]
   4cbb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cbbc:	str	r2, [r3, #28]
   4cbc0:	b	4cc60 <__assert_fail@plt+0x3a574>
   4cbc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cbc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   4cbcc:	str	r2, [r3, #12]
   4cbd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cbd4:	add	r3, r3, #20
   4cbd8:	ldm	r3, {r1, r2}
   4cbdc:	ldr	r0, [fp, #-8]
   4cbe0:	bl	48dc4 <__assert_fail@plt+0x366d8>
   4cbe4:	mov	r2, r0
   4cbe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cbec:	str	r2, [r3, #28]
   4cbf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cbf4:	ldr	r3, [r3, #28]
   4cbf8:	cmn	r3, #1
   4cbfc:	moveq	r3, #1
   4cc00:	movne	r3, #0
   4cc04:	uxtb	r3, r3
   4cc08:	cmp	r3, #0
   4cc0c:	beq	4cc18 <__assert_fail@plt+0x3a52c>
   4cc10:	mov	r3, #12
   4cc14:	b	4cc64 <__assert_fail@plt+0x3a578>
   4cc18:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cc1c:	ldrb	r3, [r3, #24]
   4cc20:	cmp	r3, #12
   4cc24:	bne	4cc60 <__assert_fail@plt+0x3a574>
   4cc28:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cc2c:	ldr	r1, [r3, #20]
   4cc30:	ldr	r3, [fp, #-8]
   4cc34:	ldr	r2, [r3]
   4cc38:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cc3c:	ldr	r3, [r3, #28]
   4cc40:	lsl	r3, r3, #3
   4cc44:	add	r2, r2, r3
   4cc48:	mov	r3, r1
   4cc4c:	ubfx	r3, r3, #0, #10
   4cc50:	uxth	r1, r3
   4cc54:	ldr	r3, [r2, #4]
   4cc58:	bfi	r3, r1, #8, #10
   4cc5c:	str	r3, [r2, #4]
   4cc60:	mov	r3, #0
   4cc64:	mov	r0, r3
   4cc68:	sub	sp, fp, #4
   4cc6c:	ldr	fp, [sp]
   4cc70:	add	sp, sp, #4
   4cc74:	pop	{pc}		; (ldr pc, [sp], #4)
   4cc78:	push	{fp}		; (str fp, [sp, #-4]!)
   4cc7c:	add	fp, sp, #0
   4cc80:	sub	sp, sp, #12
   4cc84:	str	r0, [fp, #-8]
   4cc88:	str	r1, [fp, #-12]
   4cc8c:	ldr	r3, [fp, #-12]
   4cc90:	ldrb	r3, [r3, #24]
   4cc94:	cmp	r3, #11
   4cc98:	beq	4cca8 <__assert_fail@plt+0x3a5bc>
   4cc9c:	cmp	r3, #16
   4cca0:	beq	4ccbc <__assert_fail@plt+0x3a5d0>
   4cca4:	b	4ccec <__assert_fail@plt+0x3a600>
   4cca8:	ldr	r3, [fp, #-12]
   4ccac:	ldr	r3, [r3, #4]
   4ccb0:	ldr	r2, [fp, #-12]
   4ccb4:	str	r2, [r3, #16]
   4ccb8:	b	4cd38 <__assert_fail@plt+0x3a64c>
   4ccbc:	ldr	r3, [fp, #-12]
   4ccc0:	ldr	r2, [r3, #8]
   4ccc4:	ldr	r3, [fp, #-12]
   4ccc8:	ldr	r3, [r3, #4]
   4cccc:	ldr	r2, [r2, #12]
   4ccd0:	str	r2, [r3, #16]
   4ccd4:	ldr	r3, [fp, #-12]
   4ccd8:	ldr	r3, [r3, #8]
   4ccdc:	ldr	r2, [fp, #-12]
   4cce0:	ldr	r2, [r2, #16]
   4cce4:	str	r2, [r3, #16]
   4cce8:	b	4cd38 <__assert_fail@plt+0x3a64c>
   4ccec:	ldr	r3, [fp, #-12]
   4ccf0:	ldr	r3, [r3, #4]
   4ccf4:	cmp	r3, #0
   4ccf8:	beq	4cd10 <__assert_fail@plt+0x3a624>
   4ccfc:	ldr	r3, [fp, #-12]
   4cd00:	ldr	r3, [r3, #4]
   4cd04:	ldr	r2, [fp, #-12]
   4cd08:	ldr	r2, [r2, #16]
   4cd0c:	str	r2, [r3, #16]
   4cd10:	ldr	r3, [fp, #-12]
   4cd14:	ldr	r3, [r3, #8]
   4cd18:	cmp	r3, #0
   4cd1c:	beq	4cd34 <__assert_fail@plt+0x3a648>
   4cd20:	ldr	r3, [fp, #-12]
   4cd24:	ldr	r3, [r3, #8]
   4cd28:	ldr	r2, [fp, #-12]
   4cd2c:	ldr	r2, [r2, #16]
   4cd30:	str	r2, [r3, #16]
   4cd34:	nop	{0}
   4cd38:	mov	r3, #0
   4cd3c:	mov	r0, r3
   4cd40:	add	sp, fp, #0
   4cd44:	pop	{fp}		; (ldr fp, [sp], #4)
   4cd48:	bx	lr
   4cd4c:	str	fp, [sp, #-8]!
   4cd50:	str	lr, [sp, #4]
   4cd54:	add	fp, sp, #4
   4cd58:	sub	sp, sp, #32
   4cd5c:	str	r0, [fp, #-32]	; 0xffffffe0
   4cd60:	str	r1, [fp, #-36]	; 0xffffffdc
   4cd64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4cd68:	str	r3, [fp, #-20]	; 0xffffffec
   4cd6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cd70:	ldr	r3, [r3, #28]
   4cd74:	str	r3, [fp, #-24]	; 0xffffffe8
   4cd78:	mov	r3, #0
   4cd7c:	str	r3, [fp, #-8]
   4cd80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cd84:	ldrb	r3, [r3, #24]
   4cd88:	sub	r3, r3, #2
   4cd8c:	cmp	r3, #14
   4cd90:	ldrls	pc, [pc, r3, lsl #2]
   4cd94:	b	4cf68 <__assert_fail@plt+0x3a87c>
   4cd98:	ldrdeq	ip, [r4], -r4
   4cd9c:	andeq	ip, r4, r8, ror #30
   4cda0:	andeq	ip, r4, ip, ror #29
   4cda4:	andeq	ip, r4, r8, ror #30
   4cda8:	andeq	ip, r4, r8, ror #30
   4cdac:	andeq	ip, r4, r8, ror #30
   4cdb0:	andeq	ip, r4, ip, lsr #29
   4cdb4:	andeq	ip, r4, ip, lsr #29
   4cdb8:	andeq	ip, r4, r4, ror #27
   4cdbc:	andeq	ip, r4, r4, ror #27
   4cdc0:	andeq	ip, r4, ip, lsr #29
   4cdc4:	andeq	ip, r4, r8, ror #30
   4cdc8:	andeq	ip, r4, r8, ror #30
   4cdcc:	andeq	ip, r4, r8, ror #30
   4cdd0:	andeq	ip, r4, r0, lsr #31
   4cdd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cdd8:	ldr	r3, [r3, #16]
   4cddc:	cmp	r3, #0
   4cde0:	b	4cfac <__assert_fail@plt+0x3a8c0>
   4cde4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4cde8:	ldrb	r3, [r2, #88]	; 0x58
   4cdec:	orr	r3, r3, #1
   4cdf0:	strb	r3, [r2, #88]	; 0x58
   4cdf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cdf8:	ldr	r3, [r3, #4]
   4cdfc:	cmp	r3, #0
   4ce00:	beq	4ce1c <__assert_fail@plt+0x3a730>
   4ce04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ce08:	ldr	r3, [r3, #4]
   4ce0c:	ldr	r3, [r3, #12]
   4ce10:	ldr	r3, [r3, #28]
   4ce14:	str	r3, [fp, #-12]
   4ce18:	b	4ce2c <__assert_fail@plt+0x3a740>
   4ce1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ce20:	ldr	r3, [r3, #16]
   4ce24:	ldr	r3, [r3, #28]
   4ce28:	str	r3, [fp, #-12]
   4ce2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ce30:	ldr	r3, [r3, #8]
   4ce34:	cmp	r3, #0
   4ce38:	beq	4ce54 <__assert_fail@plt+0x3a768>
   4ce3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ce40:	ldr	r3, [r3, #8]
   4ce44:	ldr	r3, [r3, #12]
   4ce48:	ldr	r3, [r3, #28]
   4ce4c:	str	r3, [fp, #-16]
   4ce50:	b	4ce64 <__assert_fail@plt+0x3a778>
   4ce54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ce58:	ldr	r3, [r3, #16]
   4ce5c:	ldr	r3, [r3, #28]
   4ce60:	str	r3, [fp, #-16]
   4ce64:	ldr	r3, [fp, #-12]
   4ce68:	cmp	r3, #0
   4ce6c:	ldr	r3, [fp, #-16]
   4ce70:	cmp	r3, #0
   4ce74:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ce78:	ldr	r1, [r3, #20]
   4ce7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ce80:	mov	r3, r2
   4ce84:	lsl	r3, r3, #1
   4ce88:	add	r3, r3, r2
   4ce8c:	lsl	r3, r3, #2
   4ce90:	add	r3, r1, r3
   4ce94:	ldr	r2, [fp, #-16]
   4ce98:	ldr	r1, [fp, #-12]
   4ce9c:	mov	r0, r3
   4cea0:	bl	47958 <__assert_fail@plt+0x3526c>
   4cea4:	str	r0, [fp, #-8]
   4cea8:	b	4cfac <__assert_fail@plt+0x3a8c0>
   4ceac:	ldr	r3, [fp, #-20]	; 0xffffffec
   4ceb0:	ldr	r1, [r3, #20]
   4ceb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4ceb8:	mov	r3, r2
   4cebc:	lsl	r3, r3, #1
   4cec0:	add	r3, r3, r2
   4cec4:	lsl	r3, r3, #2
   4cec8:	add	r2, r1, r3
   4cecc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ced0:	ldr	r3, [r3, #16]
   4ced4:	ldr	r3, [r3, #28]
   4ced8:	mov	r1, r3
   4cedc:	mov	r0, r2
   4cee0:	bl	478a4 <__assert_fail@plt+0x351b8>
   4cee4:	str	r0, [fp, #-8]
   4cee8:	b	4cfac <__assert_fail@plt+0x3a8c0>
   4ceec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cef0:	ldr	r2, [r3, #16]
   4cef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cef8:	ldr	r1, [r3, #12]
   4cefc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cf00:	lsl	r3, r3, #2
   4cf04:	add	r3, r1, r3
   4cf08:	ldr	r2, [r2, #28]
   4cf0c:	str	r2, [r3]
   4cf10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cf14:	ldrb	r3, [r3, #24]
   4cf18:	cmp	r3, #4
   4cf1c:	bne	4cfa8 <__assert_fail@plt+0x3a8bc>
   4cf20:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cf24:	ldr	r1, [r3, #20]
   4cf28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4cf2c:	mov	r3, r2
   4cf30:	lsl	r3, r3, #1
   4cf34:	add	r3, r3, r2
   4cf38:	lsl	r3, r3, #2
   4cf3c:	add	r0, r1, r3
   4cf40:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cf44:	ldr	r2, [r3, #12]
   4cf48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cf4c:	lsl	r3, r3, #2
   4cf50:	add	r3, r2, r3
   4cf54:	ldr	r3, [r3]
   4cf58:	mov	r1, r3
   4cf5c:	bl	478a4 <__assert_fail@plt+0x351b8>
   4cf60:	str	r0, [fp, #-8]
   4cf64:	b	4cfa8 <__assert_fail@plt+0x3a8bc>
   4cf68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cf6c:	ldrb	r3, [r3, #24]
   4cf70:	and	r3, r3, #8
   4cf74:	cmp	r3, #0
   4cf78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4cf7c:	ldr	r2, [r3, #16]
   4cf80:	ldr	r3, [fp, #-20]	; 0xffffffec
   4cf84:	ldr	r1, [r3, #12]
   4cf88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4cf8c:	lsl	r3, r3, #2
   4cf90:	add	r3, r1, r3
   4cf94:	ldr	r2, [r2, #28]
   4cf98:	str	r2, [r3]
   4cf9c:	b	4cfac <__assert_fail@plt+0x3a8c0>
   4cfa0:	nop	{0}
   4cfa4:	b	4cfac <__assert_fail@plt+0x3a8c0>
   4cfa8:	nop	{0}
   4cfac:	ldr	r3, [fp, #-8]
   4cfb0:	mov	r0, r3
   4cfb4:	sub	sp, fp, #4
   4cfb8:	ldr	fp, [sp]
   4cfbc:	add	sp, sp, #4
   4cfc0:	pop	{pc}		; (ldr pc, [sp], #4)
   4cfc4:	str	fp, [sp, #-8]!
   4cfc8:	str	lr, [sp, #4]
   4cfcc:	add	fp, sp, #4
   4cfd0:	sub	sp, sp, #56	; 0x38
   4cfd4:	str	r0, [fp, #-40]	; 0xffffffd8
   4cfd8:	str	r1, [fp, #-44]	; 0xffffffd4
   4cfdc:	str	r2, [fp, #-48]	; 0xffffffd0
   4cfe0:	str	r3, [fp, #-52]	; 0xffffffcc
   4cfe4:	ldr	r3, [fp, #4]
   4cfe8:	str	r3, [fp, #-16]
   4cfec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4cff0:	str	r3, [fp, #-8]
   4cff4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4cff8:	str	r3, [fp, #-12]
   4cffc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d000:	ldr	r2, [r3]
   4d004:	ldr	r3, [fp, #-8]
   4d008:	lsl	r3, r3, #3
   4d00c:	add	r3, r2, r3
   4d010:	ldrb	r3, [r3, #4]
   4d014:	cmp	r3, #4
   4d018:	bne	4d118 <__assert_fail@plt+0x3aa2c>
   4d01c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d020:	ldr	r2, [r3, #12]
   4d024:	ldr	r3, [fp, #-8]
   4d028:	lsl	r3, r3, #2
   4d02c:	add	r3, r2, r3
   4d030:	ldr	r3, [r3]
   4d034:	str	r3, [fp, #-20]	; 0xffffffec
   4d038:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d03c:	ldr	r1, [r3, #20]
   4d040:	ldr	r2, [fp, #-12]
   4d044:	mov	r3, r2
   4d048:	lsl	r3, r3, #1
   4d04c:	add	r3, r3, r2
   4d050:	lsl	r3, r3, #2
   4d054:	add	r3, r1, r3
   4d058:	mov	r2, #0
   4d05c:	str	r2, [r3, #4]
   4d060:	ldr	r2, [fp, #-16]
   4d064:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d068:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4d06c:	bl	4d670 <__assert_fail@plt+0x3af84>
   4d070:	str	r0, [fp, #-24]	; 0xffffffe8
   4d074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d078:	cmn	r3, #1
   4d07c:	moveq	r3, #1
   4d080:	movne	r3, #0
   4d084:	uxtb	r3, r3
   4d088:	cmp	r3, #0
   4d08c:	beq	4d098 <__assert_fail@plt+0x3a9ac>
   4d090:	mov	r3, #12
   4d094:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d098:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d09c:	ldr	r2, [r3, #12]
   4d0a0:	ldr	r3, [fp, #-8]
   4d0a4:	lsl	r3, r3, #2
   4d0a8:	add	r2, r2, r3
   4d0ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d0b0:	ldr	r1, [r3, #12]
   4d0b4:	ldr	r3, [fp, #-12]
   4d0b8:	lsl	r3, r3, #2
   4d0bc:	add	r3, r1, r3
   4d0c0:	ldr	r2, [r2]
   4d0c4:	str	r2, [r3]
   4d0c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d0cc:	ldr	r1, [r3, #20]
   4d0d0:	ldr	r2, [fp, #-12]
   4d0d4:	mov	r3, r2
   4d0d8:	lsl	r3, r3, #1
   4d0dc:	add	r3, r3, r2
   4d0e0:	lsl	r3, r3, #2
   4d0e4:	add	r3, r1, r3
   4d0e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d0ec:	mov	r0, r3
   4d0f0:	bl	487fc <__assert_fail@plt+0x36110>
   4d0f4:	mov	r3, r0
   4d0f8:	strb	r3, [fp, #-25]	; 0xffffffe7
   4d0fc:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4d100:	eor	r3, r3, #1
   4d104:	uxtb	r3, r3
   4d108:	cmp	r3, #0
   4d10c:	beq	4d564 <__assert_fail@plt+0x3ae78>
   4d110:	mov	r3, #12
   4d114:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d118:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d11c:	ldr	r1, [r3, #20]
   4d120:	ldr	r2, [fp, #-8]
   4d124:	mov	r3, r2
   4d128:	lsl	r3, r3, #1
   4d12c:	add	r3, r3, r2
   4d130:	lsl	r3, r3, #2
   4d134:	add	r3, r1, r3
   4d138:	ldr	r3, [r3, #4]
   4d13c:	cmp	r3, #0
   4d140:	bne	4d178 <__assert_fail@plt+0x3aa8c>
   4d144:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d148:	ldr	r2, [r3, #12]
   4d14c:	ldr	r3, [fp, #-8]
   4d150:	lsl	r3, r3, #2
   4d154:	add	r2, r2, r3
   4d158:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d15c:	ldr	r1, [r3, #12]
   4d160:	ldr	r3, [fp, #-12]
   4d164:	lsl	r3, r3, #2
   4d168:	add	r3, r1, r3
   4d16c:	ldr	r2, [r2]
   4d170:	str	r2, [r3]
   4d174:	b	4d57c <__assert_fail@plt+0x3ae90>
   4d178:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d17c:	ldr	r1, [r3, #20]
   4d180:	ldr	r2, [fp, #-8]
   4d184:	mov	r3, r2
   4d188:	lsl	r3, r3, #1
   4d18c:	add	r3, r3, r2
   4d190:	lsl	r3, r3, #2
   4d194:	add	r3, r1, r3
   4d198:	ldr	r3, [r3, #4]
   4d19c:	cmp	r3, #1
   4d1a0:	bne	4d320 <__assert_fail@plt+0x3ac34>
   4d1a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d1a8:	ldr	r1, [r3, #20]
   4d1ac:	ldr	r2, [fp, #-8]
   4d1b0:	mov	r3, r2
   4d1b4:	lsl	r3, r3, #1
   4d1b8:	add	r3, r3, r2
   4d1bc:	lsl	r3, r3, #2
   4d1c0:	add	r3, r1, r3
   4d1c4:	ldr	r3, [r3, #8]
   4d1c8:	ldr	r3, [r3]
   4d1cc:	str	r3, [fp, #-20]	; 0xffffffec
   4d1d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d1d4:	ldr	r1, [r3, #20]
   4d1d8:	ldr	r2, [fp, #-12]
   4d1dc:	mov	r3, r2
   4d1e0:	lsl	r3, r3, #1
   4d1e4:	add	r3, r3, r2
   4d1e8:	lsl	r3, r3, #2
   4d1ec:	add	r3, r1, r3
   4d1f0:	mov	r2, #0
   4d1f4:	str	r2, [r3, #4]
   4d1f8:	ldr	r2, [fp, #-8]
   4d1fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d200:	cmp	r2, r3
   4d204:	bne	4d268 <__assert_fail@plt+0x3ab7c>
   4d208:	ldr	r2, [fp, #-12]
   4d20c:	ldr	r3, [fp, #-8]
   4d210:	cmp	r2, r3
   4d214:	beq	4d268 <__assert_fail@plt+0x3ab7c>
   4d218:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d21c:	ldr	r1, [r3, #20]
   4d220:	ldr	r2, [fp, #-12]
   4d224:	mov	r3, r2
   4d228:	lsl	r3, r3, #1
   4d22c:	add	r3, r3, r2
   4d230:	lsl	r3, r3, #2
   4d234:	add	r3, r1, r3
   4d238:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d23c:	mov	r0, r3
   4d240:	bl	487fc <__assert_fail@plt+0x36110>
   4d244:	mov	r3, r0
   4d248:	strb	r3, [fp, #-25]	; 0xffffffe7
   4d24c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4d250:	eor	r3, r3, #1
   4d254:	uxtb	r3, r3
   4d258:	cmp	r3, #0
   4d25c:	beq	4d578 <__assert_fail@plt+0x3ae8c>
   4d260:	mov	r3, #12
   4d264:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d268:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d26c:	ldr	r2, [r3]
   4d270:	ldr	r3, [fp, #-8]
   4d274:	lsl	r3, r3, #3
   4d278:	add	r3, r2, r3
   4d27c:	ldr	r3, [r3, #4]
   4d280:	ubfx	r3, r3, #8, #10
   4d284:	uxth	r3, r3
   4d288:	mov	r2, r3
   4d28c:	ldr	r3, [fp, #-16]
   4d290:	orr	r3, r3, r2
   4d294:	str	r3, [fp, #-16]
   4d298:	ldr	r2, [fp, #-16]
   4d29c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d2a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4d2a4:	bl	4d670 <__assert_fail@plt+0x3af84>
   4d2a8:	str	r0, [fp, #-24]	; 0xffffffe8
   4d2ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d2b0:	cmn	r3, #1
   4d2b4:	moveq	r3, #1
   4d2b8:	movne	r3, #0
   4d2bc:	uxtb	r3, r3
   4d2c0:	cmp	r3, #0
   4d2c4:	beq	4d2d0 <__assert_fail@plt+0x3abe4>
   4d2c8:	mov	r3, #12
   4d2cc:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d2d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d2d4:	ldr	r1, [r3, #20]
   4d2d8:	ldr	r2, [fp, #-12]
   4d2dc:	mov	r3, r2
   4d2e0:	lsl	r3, r3, #1
   4d2e4:	add	r3, r3, r2
   4d2e8:	lsl	r3, r3, #2
   4d2ec:	add	r3, r1, r3
   4d2f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d2f4:	mov	r0, r3
   4d2f8:	bl	487fc <__assert_fail@plt+0x36110>
   4d2fc:	mov	r3, r0
   4d300:	strb	r3, [fp, #-25]	; 0xffffffe7
   4d304:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4d308:	eor	r3, r3, #1
   4d30c:	uxtb	r3, r3
   4d310:	cmp	r3, #0
   4d314:	beq	4d564 <__assert_fail@plt+0x3ae78>
   4d318:	mov	r3, #12
   4d31c:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d320:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d324:	ldr	r1, [r3, #20]
   4d328:	ldr	r2, [fp, #-8]
   4d32c:	mov	r3, r2
   4d330:	lsl	r3, r3, #1
   4d334:	add	r3, r3, r2
   4d338:	lsl	r3, r3, #2
   4d33c:	add	r3, r1, r3
   4d340:	ldr	r3, [r3, #8]
   4d344:	ldr	r3, [r3]
   4d348:	str	r3, [fp, #-20]	; 0xffffffec
   4d34c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d350:	ldr	r1, [r3, #20]
   4d354:	ldr	r2, [fp, #-12]
   4d358:	mov	r3, r2
   4d35c:	lsl	r3, r3, #1
   4d360:	add	r3, r3, r2
   4d364:	lsl	r3, r3, #2
   4d368:	add	r3, r1, r3
   4d36c:	mov	r2, #0
   4d370:	str	r2, [r3, #4]
   4d374:	ldr	r2, [fp, #-16]
   4d378:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d37c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4d380:	bl	4d594 <__assert_fail@plt+0x3aea8>
   4d384:	str	r0, [fp, #-24]	; 0xffffffe8
   4d388:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d38c:	cmn	r3, #1
   4d390:	bne	4d460 <__assert_fail@plt+0x3ad74>
   4d394:	ldr	r2, [fp, #-16]
   4d398:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d39c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4d3a0:	bl	4d670 <__assert_fail@plt+0x3af84>
   4d3a4:	str	r0, [fp, #-24]	; 0xffffffe8
   4d3a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d3ac:	cmn	r3, #1
   4d3b0:	moveq	r3, #1
   4d3b4:	movne	r3, #0
   4d3b8:	uxtb	r3, r3
   4d3bc:	cmp	r3, #0
   4d3c0:	beq	4d3cc <__assert_fail@plt+0x3ace0>
   4d3c4:	mov	r3, #12
   4d3c8:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d3cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d3d0:	ldr	r1, [r3, #20]
   4d3d4:	ldr	r2, [fp, #-12]
   4d3d8:	mov	r3, r2
   4d3dc:	lsl	r3, r3, #1
   4d3e0:	add	r3, r3, r2
   4d3e4:	lsl	r3, r3, #2
   4d3e8:	add	r3, r1, r3
   4d3ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d3f0:	mov	r0, r3
   4d3f4:	bl	487fc <__assert_fail@plt+0x36110>
   4d3f8:	mov	r3, r0
   4d3fc:	strb	r3, [fp, #-25]	; 0xffffffe7
   4d400:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4d404:	eor	r3, r3, #1
   4d408:	uxtb	r3, r3
   4d40c:	cmp	r3, #0
   4d410:	beq	4d41c <__assert_fail@plt+0x3ad30>
   4d414:	mov	r3, #12
   4d418:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d41c:	ldr	r3, [fp, #-16]
   4d420:	str	r3, [sp]
   4d424:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4d428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4d42c:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d430:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4d434:	bl	4cfc4 <__assert_fail@plt+0x3a8d8>
   4d438:	str	r0, [fp, #-32]	; 0xffffffe0
   4d43c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d440:	cmp	r3, #0
   4d444:	movne	r3, #1
   4d448:	moveq	r3, #0
   4d44c:	uxtb	r3, r3
   4d450:	cmp	r3, #0
   4d454:	beq	4d4b0 <__assert_fail@plt+0x3adc4>
   4d458:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d45c:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d460:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d464:	ldr	r1, [r3, #20]
   4d468:	ldr	r2, [fp, #-12]
   4d46c:	mov	r3, r2
   4d470:	lsl	r3, r3, #1
   4d474:	add	r3, r3, r2
   4d478:	lsl	r3, r3, #2
   4d47c:	add	r3, r1, r3
   4d480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d484:	mov	r0, r3
   4d488:	bl	487fc <__assert_fail@plt+0x36110>
   4d48c:	mov	r3, r0
   4d490:	strb	r3, [fp, #-25]	; 0xffffffe7
   4d494:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4d498:	eor	r3, r3, #1
   4d49c:	uxtb	r3, r3
   4d4a0:	cmp	r3, #0
   4d4a4:	beq	4d4b0 <__assert_fail@plt+0x3adc4>
   4d4a8:	mov	r3, #12
   4d4ac:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d4b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d4b4:	ldr	r1, [r3, #20]
   4d4b8:	ldr	r2, [fp, #-8]
   4d4bc:	mov	r3, r2
   4d4c0:	lsl	r3, r3, #1
   4d4c4:	add	r3, r3, r2
   4d4c8:	lsl	r3, r3, #2
   4d4cc:	add	r3, r1, r3
   4d4d0:	ldr	r3, [r3, #8]
   4d4d4:	ldr	r3, [r3, #4]
   4d4d8:	str	r3, [fp, #-20]	; 0xffffffec
   4d4dc:	ldr	r2, [fp, #-16]
   4d4e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   4d4e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4d4e8:	bl	4d670 <__assert_fail@plt+0x3af84>
   4d4ec:	str	r0, [fp, #-24]	; 0xffffffe8
   4d4f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d4f4:	cmn	r3, #1
   4d4f8:	moveq	r3, #1
   4d4fc:	movne	r3, #0
   4d500:	uxtb	r3, r3
   4d504:	cmp	r3, #0
   4d508:	beq	4d514 <__assert_fail@plt+0x3ae28>
   4d50c:	mov	r3, #12
   4d510:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d514:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4d518:	ldr	r1, [r3, #20]
   4d51c:	ldr	r2, [fp, #-12]
   4d520:	mov	r3, r2
   4d524:	lsl	r3, r3, #1
   4d528:	add	r3, r3, r2
   4d52c:	lsl	r3, r3, #2
   4d530:	add	r3, r1, r3
   4d534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4d538:	mov	r0, r3
   4d53c:	bl	487fc <__assert_fail@plt+0x36110>
   4d540:	mov	r3, r0
   4d544:	strb	r3, [fp, #-25]	; 0xffffffe7
   4d548:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   4d54c:	eor	r3, r3, #1
   4d550:	uxtb	r3, r3
   4d554:	cmp	r3, #0
   4d558:	beq	4d564 <__assert_fail@plt+0x3ae78>
   4d55c:	mov	r3, #12
   4d560:	b	4d580 <__assert_fail@plt+0x3ae94>
   4d564:	ldr	r3, [fp, #-20]	; 0xffffffec
   4d568:	str	r3, [fp, #-8]
   4d56c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d570:	str	r3, [fp, #-12]
   4d574:	b	4cffc <__assert_fail@plt+0x3a910>
   4d578:	nop	{0}
   4d57c:	mov	r3, #0
   4d580:	mov	r0, r3
   4d584:	sub	sp, fp, #4
   4d588:	ldr	fp, [sp]
   4d58c:	add	sp, sp, #4
   4d590:	pop	{pc}		; (ldr pc, [sp], #4)
   4d594:	push	{fp}		; (str fp, [sp, #-4]!)
   4d598:	add	fp, sp, #0
   4d59c:	sub	sp, sp, #28
   4d5a0:	str	r0, [fp, #-16]
   4d5a4:	str	r1, [fp, #-20]	; 0xffffffec
   4d5a8:	str	r2, [fp, #-24]	; 0xffffffe8
   4d5ac:	ldr	r3, [fp, #-16]
   4d5b0:	ldr	r3, [r3, #8]
   4d5b4:	sub	r3, r3, #1
   4d5b8:	str	r3, [fp, #-8]
   4d5bc:	b	4d628 <__assert_fail@plt+0x3af3c>
   4d5c0:	ldr	r3, [fp, #-16]
   4d5c4:	ldr	r2, [r3, #16]
   4d5c8:	ldr	r3, [fp, #-8]
   4d5cc:	lsl	r3, r3, #2
   4d5d0:	add	r3, r2, r3
   4d5d4:	ldr	r3, [r3]
   4d5d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   4d5dc:	cmp	r2, r3
   4d5e0:	bne	4d61c <__assert_fail@plt+0x3af30>
   4d5e4:	ldr	r3, [fp, #-16]
   4d5e8:	ldr	r2, [r3]
   4d5ec:	ldr	r3, [fp, #-8]
   4d5f0:	lsl	r3, r3, #3
   4d5f4:	add	r3, r2, r3
   4d5f8:	ldr	r3, [r3, #4]
   4d5fc:	ubfx	r3, r3, #8, #10
   4d600:	uxth	r3, r3
   4d604:	mov	r2, r3
   4d608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d60c:	cmp	r3, r2
   4d610:	bne	4d61c <__assert_fail@plt+0x3af30>
   4d614:	ldr	r3, [fp, #-8]
   4d618:	b	4d660 <__assert_fail@plt+0x3af74>
   4d61c:	ldr	r3, [fp, #-8]
   4d620:	sub	r3, r3, #1
   4d624:	str	r3, [fp, #-8]
   4d628:	ldr	r3, [fp, #-16]
   4d62c:	ldr	r2, [r3]
   4d630:	ldr	r3, [fp, #-8]
   4d634:	lsl	r3, r3, #3
   4d638:	add	r3, r2, r3
   4d63c:	ldrb	r3, [r3, #6]
   4d640:	and	r3, r3, #4
   4d644:	uxtb	r3, r3
   4d648:	cmp	r3, #0
   4d64c:	beq	4d65c <__assert_fail@plt+0x3af70>
   4d650:	ldr	r3, [fp, #-8]
   4d654:	cmp	r3, #0
   4d658:	bgt	4d5c0 <__assert_fail@plt+0x3aed4>
   4d65c:	mvn	r3, #0
   4d660:	mov	r0, r3
   4d664:	add	sp, fp, #0
   4d668:	pop	{fp}		; (ldr fp, [sp], #4)
   4d66c:	bx	lr
   4d670:	str	fp, [sp, #-8]!
   4d674:	str	lr, [sp, #4]
   4d678:	add	fp, sp, #4
   4d67c:	sub	sp, sp, #24
   4d680:	str	r0, [fp, #-16]
   4d684:	str	r1, [fp, #-20]	; 0xffffffec
   4d688:	str	r2, [fp, #-24]	; 0xffffffe8
   4d68c:	ldr	r3, [fp, #-16]
   4d690:	ldr	r2, [r3]
   4d694:	ldr	r3, [fp, #-20]	; 0xffffffec
   4d698:	lsl	r3, r3, #3
   4d69c:	add	r3, r2, r3
   4d6a0:	ldm	r3, {r1, r2}
   4d6a4:	ldr	r0, [fp, #-16]
   4d6a8:	bl	48dc4 <__assert_fail@plt+0x366d8>
   4d6ac:	str	r0, [fp, #-8]
   4d6b0:	ldr	r3, [fp, #-8]
   4d6b4:	cmn	r3, #1
   4d6b8:	movne	r3, #1
   4d6bc:	moveq	r3, #0
   4d6c0:	uxtb	r3, r3
   4d6c4:	cmp	r3, #0
   4d6c8:	beq	4d79c <__assert_fail@plt+0x3b0b0>
   4d6cc:	ldr	r3, [fp, #-16]
   4d6d0:	ldr	r2, [r3]
   4d6d4:	ldr	r3, [fp, #-8]
   4d6d8:	lsl	r3, r3, #3
   4d6dc:	add	r2, r2, r3
   4d6e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d6e4:	ubfx	r3, r3, #0, #10
   4d6e8:	uxth	r1, r3
   4d6ec:	ldr	r3, [r2, #4]
   4d6f0:	bfi	r3, r1, #8, #10
   4d6f4:	str	r3, [r2, #4]
   4d6f8:	ldr	r3, [fp, #-16]
   4d6fc:	ldr	r2, [r3]
   4d700:	ldr	r3, [fp, #-8]
   4d704:	lsl	r3, r3, #3
   4d708:	add	r3, r2, r3
   4d70c:	ldr	r3, [r3, #4]
   4d710:	ubfx	r3, r3, #8, #10
   4d714:	uxth	r1, r3
   4d718:	ldr	r3, [fp, #-16]
   4d71c:	ldr	r2, [r3]
   4d720:	ldr	r3, [fp, #-20]	; 0xffffffec
   4d724:	lsl	r3, r3, #3
   4d728:	add	r3, r2, r3
   4d72c:	ldr	r3, [r3, #4]
   4d730:	ubfx	r3, r3, #8, #10
   4d734:	uxth	r3, r3
   4d738:	ldr	r2, [fp, #-16]
   4d73c:	ldr	r0, [r2]
   4d740:	ldr	r2, [fp, #-8]
   4d744:	lsl	r2, r2, #3
   4d748:	add	r2, r0, r2
   4d74c:	orr	r3, r1, r3
   4d750:	uxth	r1, r3
   4d754:	ldr	r3, [r2, #4]
   4d758:	bfi	r3, r1, #8, #10
   4d75c:	str	r3, [r2, #4]
   4d760:	ldr	r3, [fp, #-16]
   4d764:	ldr	r2, [r3]
   4d768:	ldr	r3, [fp, #-8]
   4d76c:	lsl	r3, r3, #3
   4d770:	add	r2, r2, r3
   4d774:	ldrb	r3, [r2, #6]
   4d778:	orr	r3, r3, #4
   4d77c:	strb	r3, [r2, #6]
   4d780:	ldr	r3, [fp, #-16]
   4d784:	ldr	r2, [r3, #16]
   4d788:	ldr	r3, [fp, #-8]
   4d78c:	lsl	r3, r3, #2
   4d790:	add	r3, r2, r3
   4d794:	ldr	r2, [fp, #-20]	; 0xffffffec
   4d798:	str	r2, [r3]
   4d79c:	ldr	r3, [fp, #-8]
   4d7a0:	mov	r0, r3
   4d7a4:	sub	sp, fp, #4
   4d7a8:	ldr	fp, [sp]
   4d7ac:	add	sp, sp, #4
   4d7b0:	pop	{pc}		; (ldr pc, [sp], #4)
   4d7b4:	str	fp, [sp, #-8]!
   4d7b8:	str	lr, [sp, #4]
   4d7bc:	add	fp, sp, #4
   4d7c0:	sub	sp, sp, #24
   4d7c4:	str	r0, [fp, #-24]	; 0xffffffe8
   4d7c8:	mov	r3, #0
   4d7cc:	str	r3, [fp, #-12]
   4d7d0:	b	4d810 <__assert_fail@plt+0x3b124>
   4d7d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d7d8:	ldr	r1, [r3, #28]
   4d7dc:	ldr	r2, [fp, #-12]
   4d7e0:	mov	r3, r2
   4d7e4:	lsl	r3, r3, #1
   4d7e8:	add	r3, r3, r2
   4d7ec:	lsl	r3, r3, #2
   4d7f0:	add	r3, r1, r3
   4d7f4:	mov	r2, #12
   4d7f8:	mov	r1, #0
   4d7fc:	mov	r0, r3
   4d800:	bl	12434 <memset@plt>
   4d804:	ldr	r3, [fp, #-12]
   4d808:	add	r3, r3, #1
   4d80c:	str	r3, [fp, #-12]
   4d810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d814:	ldr	r2, [r3, #8]
   4d818:	ldr	r3, [fp, #-12]
   4d81c:	cmp	r2, r3
   4d820:	bhi	4d7d4 <__assert_fail@plt+0x3b0e8>
   4d824:	mov	r3, #0
   4d828:	str	r3, [fp, #-8]
   4d82c:	b	4d910 <__assert_fail@plt+0x3b224>
   4d830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d834:	ldr	r1, [r3, #24]
   4d838:	ldr	r2, [fp, #-8]
   4d83c:	mov	r3, r2
   4d840:	lsl	r3, r3, #1
   4d844:	add	r3, r3, r2
   4d848:	lsl	r3, r3, #2
   4d84c:	add	r3, r1, r3
   4d850:	ldr	r3, [r3, #8]
   4d854:	str	r3, [fp, #-16]
   4d858:	mov	r3, #0
   4d85c:	str	r3, [fp, #-12]
   4d860:	b	4d8d4 <__assert_fail@plt+0x3b1e8>
   4d864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d868:	ldr	r2, [r3, #28]
   4d86c:	ldr	r3, [fp, #-12]
   4d870:	lsl	r3, r3, #2
   4d874:	ldr	r1, [fp, #-16]
   4d878:	add	r3, r1, r3
   4d87c:	ldr	r3, [r3]
   4d880:	mov	r1, r3
   4d884:	mov	r3, r1
   4d888:	lsl	r3, r3, #1
   4d88c:	add	r3, r3, r1
   4d890:	lsl	r3, r3, #2
   4d894:	add	r3, r2, r3
   4d898:	ldr	r1, [fp, #-8]
   4d89c:	mov	r0, r3
   4d8a0:	bl	48a7c <__assert_fail@plt+0x36390>
   4d8a4:	mov	r3, r0
   4d8a8:	strb	r3, [fp, #-17]	; 0xffffffef
   4d8ac:	ldrb	r3, [fp, #-17]	; 0xffffffef
   4d8b0:	eor	r3, r3, #1
   4d8b4:	uxtb	r3, r3
   4d8b8:	cmp	r3, #0
   4d8bc:	beq	4d8c8 <__assert_fail@plt+0x3b1dc>
   4d8c0:	mov	r3, #12
   4d8c4:	b	4d928 <__assert_fail@plt+0x3b23c>
   4d8c8:	ldr	r3, [fp, #-12]
   4d8cc:	add	r3, r3, #1
   4d8d0:	str	r3, [fp, #-12]
   4d8d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d8d8:	ldr	r1, [r3, #24]
   4d8dc:	ldr	r2, [fp, #-8]
   4d8e0:	mov	r3, r2
   4d8e4:	lsl	r3, r3, #1
   4d8e8:	add	r3, r3, r2
   4d8ec:	lsl	r3, r3, #2
   4d8f0:	add	r3, r1, r3
   4d8f4:	ldr	r3, [r3, #4]
   4d8f8:	ldr	r2, [fp, #-12]
   4d8fc:	cmp	r2, r3
   4d900:	blt	4d864 <__assert_fail@plt+0x3b178>
   4d904:	ldr	r3, [fp, #-8]
   4d908:	add	r3, r3, #1
   4d90c:	str	r3, [fp, #-8]
   4d910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4d914:	ldr	r2, [r3, #8]
   4d918:	ldr	r3, [fp, #-8]
   4d91c:	cmp	r2, r3
   4d920:	bhi	4d830 <__assert_fail@plt+0x3b144>
   4d924:	mov	r3, #0
   4d928:	mov	r0, r3
   4d92c:	sub	sp, fp, #4
   4d930:	ldr	fp, [sp]
   4d934:	add	sp, sp, #4
   4d938:	pop	{pc}		; (ldr pc, [sp], #4)
   4d93c:	str	fp, [sp, #-8]!
   4d940:	str	lr, [sp, #4]
   4d944:	add	fp, sp, #4
   4d948:	sub	sp, sp, #32
   4d94c:	str	r0, [fp, #-32]	; 0xffffffe0
   4d950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d954:	ldr	r3, [r3, #8]
   4d958:	cmp	r3, #0
   4d95c:	mov	r3, #0
   4d960:	strb	r3, [fp, #-9]
   4d964:	mov	r3, #0
   4d968:	str	r3, [fp, #-8]
   4d96c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d970:	ldr	r2, [r3, #8]
   4d974:	ldr	r3, [fp, #-8]
   4d978:	cmp	r2, r3
   4d97c:	bne	4d9ac <__assert_fail@plt+0x3b2c0>
   4d980:	ldrb	r3, [fp, #-9]
   4d984:	eor	r3, r3, #1
   4d988:	uxtb	r3, r3
   4d98c:	cmp	r3, #0
   4d990:	beq	4d99c <__assert_fail@plt+0x3b2b0>
   4d994:	mov	r3, #0
   4d998:	b	4da94 <__assert_fail@plt+0x3b3a8>
   4d99c:	mov	r3, #0
   4d9a0:	strb	r3, [fp, #-9]
   4d9a4:	mov	r3, #0
   4d9a8:	str	r3, [fp, #-8]
   4d9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d9b0:	ldr	r1, [r3, #24]
   4d9b4:	ldr	r2, [fp, #-8]
   4d9b8:	mov	r3, r2
   4d9bc:	lsl	r3, r3, #1
   4d9c0:	add	r3, r3, r2
   4d9c4:	lsl	r3, r3, #2
   4d9c8:	add	r3, r1, r3
   4d9cc:	ldr	r3, [r3, #4]
   4d9d0:	cmn	r3, #1
   4d9d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4d9d8:	ldr	r1, [r3, #24]
   4d9dc:	ldr	r2, [fp, #-8]
   4d9e0:	mov	r3, r2
   4d9e4:	lsl	r3, r3, #1
   4d9e8:	add	r3, r3, r2
   4d9ec:	lsl	r3, r3, #2
   4d9f0:	add	r3, r1, r3
   4d9f4:	ldr	r3, [r3, #4]
   4d9f8:	cmp	r3, #0
   4d9fc:	bne	4da80 <__assert_fail@plt+0x3b394>
   4da00:	sub	r0, fp, #28
   4da04:	mov	r3, #1
   4da08:	ldr	r2, [fp, #-8]
   4da0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4da10:	bl	4daa8 <__assert_fail@plt+0x3b3bc>
   4da14:	str	r0, [fp, #-16]
   4da18:	ldr	r3, [fp, #-16]
   4da1c:	cmp	r3, #0
   4da20:	movne	r3, #1
   4da24:	moveq	r3, #0
   4da28:	uxtb	r3, r3
   4da2c:	cmp	r3, #0
   4da30:	beq	4da3c <__assert_fail@plt+0x3b350>
   4da34:	ldr	r3, [fp, #-16]
   4da38:	b	4da94 <__assert_fail@plt+0x3b3a8>
   4da3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4da40:	ldr	r1, [r3, #24]
   4da44:	ldr	r2, [fp, #-8]
   4da48:	mov	r3, r2
   4da4c:	lsl	r3, r3, #1
   4da50:	add	r3, r3, r2
   4da54:	lsl	r3, r3, #2
   4da58:	add	r3, r1, r3
   4da5c:	ldr	r3, [r3, #4]
   4da60:	cmp	r3, #0
   4da64:	bne	4da84 <__assert_fail@plt+0x3b398>
   4da68:	mov	r3, #1
   4da6c:	strb	r3, [fp, #-9]
   4da70:	ldr	r3, [fp, #-20]	; 0xffffffec
   4da74:	mov	r0, r3
   4da78:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4da7c:	b	4da84 <__assert_fail@plt+0x3b398>
   4da80:	nop	{0}
   4da84:	ldr	r3, [fp, #-8]
   4da88:	add	r3, r3, #1
   4da8c:	str	r3, [fp, #-8]
   4da90:	b	4d96c <__assert_fail@plt+0x3b280>
   4da94:	mov	r0, r3
   4da98:	sub	sp, fp, #4
   4da9c:	ldr	fp, [sp]
   4daa0:	add	sp, sp, #4
   4daa4:	pop	{pc}		; (ldr pc, [sp], #4)
   4daa8:	str	fp, [sp, #-8]!
   4daac:	str	lr, [sp, #4]
   4dab0:	add	fp, sp, #4
   4dab4:	sub	sp, sp, #64	; 0x40
   4dab8:	str	r0, [fp, #-48]	; 0xffffffd0
   4dabc:	str	r1, [fp, #-52]	; 0xffffffcc
   4dac0:	str	r2, [fp, #-56]	; 0xffffffc8
   4dac4:	strb	r3, [fp, #-57]	; 0xffffffc7
   4dac8:	mov	r3, #0
   4dacc:	strb	r3, [fp, #-9]
   4dad0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dad4:	ldr	r1, [r3, #20]
   4dad8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4dadc:	mov	r3, r2
   4dae0:	lsl	r3, r3, #1
   4dae4:	add	r3, r3, r2
   4dae8:	lsl	r3, r3, #2
   4daec:	add	r3, r1, r3
   4daf0:	ldr	r3, [r3, #4]
   4daf4:	add	r2, r3, #1
   4daf8:	sub	r3, fp, #32
   4dafc:	mov	r1, r2
   4db00:	mov	r0, r3
   4db04:	bl	47814 <__assert_fail@plt+0x35128>
   4db08:	str	r0, [fp, #-16]
   4db0c:	ldr	r3, [fp, #-16]
   4db10:	cmp	r3, #0
   4db14:	movne	r3, #1
   4db18:	moveq	r3, #0
   4db1c:	uxtb	r3, r3
   4db20:	cmp	r3, #0
   4db24:	beq	4db30 <__assert_fail@plt+0x3b444>
   4db28:	ldr	r3, [fp, #-16]
   4db2c:	b	4df18 <__assert_fail@plt+0x3b82c>
   4db30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4db34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4db38:	add	r1, r3, #1
   4db3c:	str	r1, [fp, #-28]	; 0xffffffe4
   4db40:	lsl	r3, r3, #2
   4db44:	add	r3, r2, r3
   4db48:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4db4c:	str	r2, [r3]
   4db50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4db54:	ldr	r1, [r3, #24]
   4db58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4db5c:	mov	r3, r2
   4db60:	lsl	r3, r3, #1
   4db64:	add	r3, r3, r2
   4db68:	lsl	r3, r3, #2
   4db6c:	add	r3, r1, r3
   4db70:	mvn	r2, #0
   4db74:	str	r2, [r3, #4]
   4db78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4db7c:	ldr	r2, [r3]
   4db80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4db84:	lsl	r3, r3, #3
   4db88:	add	r3, r2, r3
   4db8c:	ldr	r2, [r3, #4]
   4db90:	mov	r3, #65280	; 0xff00
   4db94:	movt	r3, #3
   4db98:	and	r3, r3, r2
   4db9c:	cmp	r3, #0
   4dba0:	beq	4dc7c <__assert_fail@plt+0x3b590>
   4dba4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dba8:	ldr	r1, [r3, #20]
   4dbac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4dbb0:	mov	r3, r2
   4dbb4:	lsl	r3, r3, #1
   4dbb8:	add	r3, r3, r2
   4dbbc:	lsl	r3, r3, #2
   4dbc0:	add	r3, r1, r3
   4dbc4:	ldr	r3, [r3, #4]
   4dbc8:	cmp	r3, #0
   4dbcc:	beq	4dc7c <__assert_fail@plt+0x3b590>
   4dbd0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dbd4:	ldr	r1, [r3]
   4dbd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dbdc:	ldr	r0, [r3, #20]
   4dbe0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4dbe4:	mov	r3, r2
   4dbe8:	lsl	r3, r3, #1
   4dbec:	add	r3, r3, r2
   4dbf0:	lsl	r3, r3, #2
   4dbf4:	add	r3, r0, r3
   4dbf8:	ldr	r3, [r3, #8]
   4dbfc:	ldr	r3, [r3]
   4dc00:	lsl	r3, r3, #3
   4dc04:	add	r3, r1, r3
   4dc08:	ldrb	r3, [r3, #6]
   4dc0c:	and	r3, r3, #4
   4dc10:	uxtb	r3, r3
   4dc14:	cmp	r3, #0
   4dc18:	bne	4dc7c <__assert_fail@plt+0x3b590>
   4dc1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dc20:	ldr	r2, [r3]
   4dc24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4dc28:	lsl	r3, r3, #3
   4dc2c:	add	r3, r2, r3
   4dc30:	ldr	r3, [r3, #4]
   4dc34:	ubfx	r3, r3, #8, #10
   4dc38:	uxth	r3, r3
   4dc3c:	str	r3, [sp]
   4dc40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4dc44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4dc48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   4dc4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   4dc50:	bl	4cfc4 <__assert_fail@plt+0x3a8d8>
   4dc54:	str	r0, [fp, #-16]
   4dc58:	ldr	r3, [fp, #-16]
   4dc5c:	cmp	r3, #0
   4dc60:	movne	r3, #1
   4dc64:	moveq	r3, #0
   4dc68:	uxtb	r3, r3
   4dc6c:	cmp	r3, #0
   4dc70:	beq	4dc7c <__assert_fail@plt+0x3b590>
   4dc74:	ldr	r3, [fp, #-16]
   4dc78:	b	4df18 <__assert_fail@plt+0x3b82c>
   4dc7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dc80:	ldr	r2, [r3]
   4dc84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4dc88:	lsl	r3, r3, #3
   4dc8c:	add	r3, r2, r3
   4dc90:	ldrb	r3, [r3, #4]
   4dc94:	and	r3, r3, #8
   4dc98:	cmp	r3, #0
   4dc9c:	beq	4de74 <__assert_fail@plt+0x3b788>
   4dca0:	mov	r3, #0
   4dca4:	str	r3, [fp, #-8]
   4dca8:	b	4de44 <__assert_fail@plt+0x3b758>
   4dcac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dcb0:	ldr	r1, [r3, #20]
   4dcb4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4dcb8:	mov	r3, r2
   4dcbc:	lsl	r3, r3, #1
   4dcc0:	add	r3, r3, r2
   4dcc4:	lsl	r3, r3, #2
   4dcc8:	add	r3, r1, r3
   4dccc:	ldr	r2, [r3, #8]
   4dcd0:	ldr	r3, [fp, #-8]
   4dcd4:	lsl	r3, r3, #2
   4dcd8:	add	r3, r2, r3
   4dcdc:	ldr	r3, [r3]
   4dce0:	str	r3, [fp, #-20]	; 0xffffffec
   4dce4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dce8:	ldr	r1, [r3, #24]
   4dcec:	ldr	r2, [fp, #-20]	; 0xffffffec
   4dcf0:	mov	r3, r2
   4dcf4:	lsl	r3, r3, #1
   4dcf8:	add	r3, r3, r2
   4dcfc:	lsl	r3, r3, #2
   4dd00:	add	r3, r1, r3
   4dd04:	ldr	r3, [r3, #4]
   4dd08:	cmn	r3, #1
   4dd0c:	bne	4dd1c <__assert_fail@plt+0x3b630>
   4dd10:	mov	r3, #1
   4dd14:	strb	r3, [fp, #-9]
   4dd18:	b	4de38 <__assert_fail@plt+0x3b74c>
   4dd1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dd20:	ldr	r1, [r3, #24]
   4dd24:	ldr	r2, [fp, #-20]	; 0xffffffec
   4dd28:	mov	r3, r2
   4dd2c:	lsl	r3, r3, #1
   4dd30:	add	r3, r3, r2
   4dd34:	lsl	r3, r3, #2
   4dd38:	add	r3, r1, r3
   4dd3c:	ldr	r3, [r3, #4]
   4dd40:	cmp	r3, #0
   4dd44:	bne	4dd84 <__assert_fail@plt+0x3b698>
   4dd48:	sub	r0, fp, #44	; 0x2c
   4dd4c:	mov	r3, #0
   4dd50:	ldr	r2, [fp, #-20]	; 0xffffffec
   4dd54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   4dd58:	bl	4daa8 <__assert_fail@plt+0x3b3bc>
   4dd5c:	str	r0, [fp, #-16]
   4dd60:	ldr	r3, [fp, #-16]
   4dd64:	cmp	r3, #0
   4dd68:	movne	r3, #1
   4dd6c:	moveq	r3, #0
   4dd70:	uxtb	r3, r3
   4dd74:	cmp	r3, #0
   4dd78:	beq	4ddbc <__assert_fail@plt+0x3b6d0>
   4dd7c:	ldr	r3, [fp, #-16]
   4dd80:	b	4df18 <__assert_fail@plt+0x3b82c>
   4dd84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dd88:	ldr	r1, [r3, #24]
   4dd8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   4dd90:	mov	r3, r2
   4dd94:	lsl	r3, r3, #1
   4dd98:	add	r3, r3, r2
   4dd9c:	lsl	r3, r3, #2
   4dda0:	add	r3, r1, r3
   4dda4:	sub	r1, fp, #44	; 0x2c
   4dda8:	mov	r0, r3
   4ddac:	ldrd	r2, [r0]
   4ddb0:	strd	r2, [r1]
   4ddb4:	ldr	r3, [r0, #8]
   4ddb8:	str	r3, [r1, #8]
   4ddbc:	sub	r2, fp, #44	; 0x2c
   4ddc0:	sub	r3, fp, #32
   4ddc4:	mov	r1, r2
   4ddc8:	mov	r0, r3
   4ddcc:	bl	4839c <__assert_fail@plt+0x35cb0>
   4ddd0:	str	r0, [fp, #-16]
   4ddd4:	ldr	r3, [fp, #-16]
   4ddd8:	cmp	r3, #0
   4dddc:	movne	r3, #1
   4dde0:	moveq	r3, #0
   4dde4:	uxtb	r3, r3
   4dde8:	cmp	r3, #0
   4ddec:	beq	4ddf8 <__assert_fail@plt+0x3b70c>
   4ddf0:	ldr	r3, [fp, #-16]
   4ddf4:	b	4df18 <__assert_fail@plt+0x3b82c>
   4ddf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4ddfc:	ldr	r1, [r3, #24]
   4de00:	ldr	r2, [fp, #-20]	; 0xffffffec
   4de04:	mov	r3, r2
   4de08:	lsl	r3, r3, #1
   4de0c:	add	r3, r3, r2
   4de10:	lsl	r3, r3, #2
   4de14:	add	r3, r1, r3
   4de18:	ldr	r3, [r3, #4]
   4de1c:	cmp	r3, #0
   4de20:	bne	4de38 <__assert_fail@plt+0x3b74c>
   4de24:	mov	r3, #1
   4de28:	strb	r3, [fp, #-9]
   4de2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4de30:	mov	r0, r3
   4de34:	bl	3fe0c <__assert_fail@plt+0x2d720>
   4de38:	ldr	r3, [fp, #-8]
   4de3c:	add	r3, r3, #1
   4de40:	str	r3, [fp, #-8]
   4de44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4de48:	ldr	r1, [r3, #20]
   4de4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4de50:	mov	r3, r2
   4de54:	lsl	r3, r3, #1
   4de58:	add	r3, r3, r2
   4de5c:	lsl	r3, r3, #2
   4de60:	add	r3, r1, r3
   4de64:	ldr	r3, [r3, #4]
   4de68:	ldr	r2, [fp, #-8]
   4de6c:	cmp	r2, r3
   4de70:	blt	4dcac <__assert_fail@plt+0x3b5c0>
   4de74:	ldrb	r3, [fp, #-9]
   4de78:	cmp	r3, #0
   4de7c:	beq	4dec0 <__assert_fail@plt+0x3b7d4>
   4de80:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   4de84:	eor	r3, r3, #1
   4de88:	uxtb	r3, r3
   4de8c:	cmp	r3, #0
   4de90:	beq	4dec0 <__assert_fail@plt+0x3b7d4>
   4de94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4de98:	ldr	r1, [r3, #24]
   4de9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4dea0:	mov	r3, r2
   4dea4:	lsl	r3, r3, #1
   4dea8:	add	r3, r3, r2
   4deac:	lsl	r3, r3, #2
   4deb0:	add	r3, r1, r3
   4deb4:	mov	r2, #0
   4deb8:	str	r2, [r3, #4]
   4debc:	b	4def8 <__assert_fail@plt+0x3b80c>
   4dec0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   4dec4:	ldr	r1, [r3, #24]
   4dec8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   4decc:	mov	r3, r2
   4ded0:	lsl	r3, r3, #1
   4ded4:	add	r3, r3, r2
   4ded8:	lsl	r3, r3, #2
   4dedc:	add	r3, r1, r3
   4dee0:	mov	r0, r3
   4dee4:	sub	r1, fp, #32
   4dee8:	ldrd	r2, [r1]
   4deec:	strd	r2, [r0]
   4def0:	ldr	r3, [r1, #8]
   4def4:	str	r3, [r0, #8]
   4def8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4defc:	mov	r0, r3
   4df00:	sub	r1, fp, #32
   4df04:	ldrd	r2, [r1]
   4df08:	strd	r2, [r0]
   4df0c:	ldr	r3, [r1, #8]
   4df10:	str	r3, [r0, #8]
   4df14:	mov	r3, #0
   4df18:	mov	r0, r3
   4df1c:	sub	sp, fp, #4
   4df20:	ldr	fp, [sp]
   4df24:	add	sp, sp, #4
   4df28:	pop	{pc}		; (ldr pc, [sp], #4)
   4df2c:	str	fp, [sp, #-8]!
   4df30:	str	lr, [sp, #4]
   4df34:	add	fp, sp, #4
   4df38:	sub	sp, sp, #16
   4df3c:	str	r0, [fp, #-8]
   4df40:	str	r1, [fp, #-12]
   4df44:	str	r2, [fp, #-16]
   4df48:	ldr	r2, [fp, #-16]
   4df4c:	ldr	r1, [fp, #-12]
   4df50:	ldr	r0, [fp, #-8]
   4df54:	bl	4df84 <__assert_fail@plt+0x3b898>
   4df58:	mov	r2, r0
   4df5c:	ldr	r3, [fp, #-12]
   4df60:	ldr	r3, [r3, #40]	; 0x28
   4df64:	add	r2, r2, r3
   4df68:	ldr	r3, [fp, #-12]
   4df6c:	str	r2, [r3, #40]	; 0x28
   4df70:	nop	{0}
   4df74:	sub	sp, fp, #4
   4df78:	ldr	fp, [sp]
   4df7c:	add	sp, sp, #4
   4df80:	pop	{pc}		; (ldr pc, [sp], #4)
   4df84:	str	fp, [sp, #-8]!
   4df88:	str	lr, [sp, #4]
   4df8c:	add	fp, sp, #4
   4df90:	sub	sp, sp, #40	; 0x28
   4df94:	str	r0, [fp, #-32]	; 0xffffffe0
   4df98:	str	r1, [fp, #-36]	; 0xffffffdc
   4df9c:	str	r2, [fp, #-40]	; 0xffffffd8
   4dfa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4dfa4:	ldr	r2, [r3, #56]	; 0x38
   4dfa8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4dfac:	ldr	r3, [r3, #40]	; 0x28
   4dfb0:	cmp	r2, r3
   4dfb4:	bgt	4dfcc <__assert_fail@plt+0x3b8e0>
   4dfb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dfbc:	mov	r2, #2
   4dfc0:	strb	r2, [r3, #4]
   4dfc4:	mov	r3, #0
   4dfc8:	b	4ec78 <__assert_fail@plt+0x3c58c>
   4dfcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4dfd0:	ldr	r3, [r3, #4]
   4dfd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4dfd8:	ldr	r2, [r2, #40]	; 0x28
   4dfdc:	add	r3, r3, r2
   4dfe0:	ldrb	r3, [r3]
   4dfe4:	strb	r3, [fp, #-5]
   4dfe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4dfec:	ldrb	r2, [fp, #-5]
   4dff0:	strb	r2, [r3]
   4dff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4dff8:	ldrb	r3, [r2, #6]
   4dffc:	bfc	r3, #6, #1
   4e000:	strb	r3, [r2, #6]
   4e004:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e008:	ldrb	r3, [r2, #6]
   4e00c:	bfc	r3, #5, #1
   4e010:	strb	r3, [r2, #6]
   4e014:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e018:	ldr	r3, [r3, #80]	; 0x50
   4e01c:	cmp	r3, #1
   4e020:	ble	4e084 <__assert_fail@plt+0x3b998>
   4e024:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e028:	ldr	r2, [r3, #40]	; 0x28
   4e02c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e030:	ldr	r3, [r3, #28]
   4e034:	cmp	r2, r3
   4e038:	beq	4e084 <__assert_fail@plt+0x3b998>
   4e03c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e040:	ldr	r2, [r3, #8]
   4e044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e048:	ldr	r3, [r3, #40]	; 0x28
   4e04c:	lsl	r3, r3, #2
   4e050:	add	r3, r2, r3
   4e054:	ldr	r3, [r3]
   4e058:	cmn	r3, #1
   4e05c:	bne	4e084 <__assert_fail@plt+0x3b998>
   4e060:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e064:	mov	r2, #1
   4e068:	strb	r2, [r3, #4]
   4e06c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e070:	ldrb	r3, [r2, #6]
   4e074:	orr	r3, r3, #32
   4e078:	strb	r3, [r2, #6]
   4e07c:	mov	r3, #1
   4e080:	b	4ec78 <__assert_fail@plt+0x3c58c>
   4e084:	ldrb	r3, [fp, #-5]
   4e088:	cmp	r3, #92	; 0x5c
   4e08c:	bne	4e6bc <__assert_fail@plt+0x3bfd0>
   4e090:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e094:	ldr	r3, [r3, #40]	; 0x28
   4e098:	add	r2, r3, #1
   4e09c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e0a0:	ldr	r3, [r3, #48]	; 0x30
   4e0a4:	cmp	r2, r3
   4e0a8:	blt	4e0c0 <__assert_fail@plt+0x3b9d4>
   4e0ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e0b0:	mov	r2, #36	; 0x24
   4e0b4:	strb	r2, [r3, #4]
   4e0b8:	mov	r3, #1
   4e0bc:	b	4ec78 <__assert_fail@plt+0x3c58c>
   4e0c0:	mov	r1, #1
   4e0c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4e0c8:	bl	4721c <__assert_fail@plt+0x34b30>
   4e0cc:	mov	r3, r0
   4e0d0:	strb	r3, [fp, #-6]
   4e0d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e0d8:	ldrb	r2, [fp, #-6]
   4e0dc:	strb	r2, [r3]
   4e0e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e0e4:	mov	r2, #1
   4e0e8:	strb	r2, [r3, #4]
   4e0ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e0f0:	ldr	r3, [r3, #80]	; 0x50
   4e0f4:	cmp	r3, #1
   4e0f8:	ble	4e168 <__assert_fail@plt+0x3ba7c>
   4e0fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e100:	ldr	r3, [r3, #40]	; 0x28
   4e104:	add	r3, r3, #1
   4e108:	mov	r1, r3
   4e10c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4e110:	bl	44cbc <__assert_fail@plt+0x325d0>
   4e114:	str	r0, [fp, #-12]
   4e118:	ldr	r0, [fp, #-12]
   4e11c:	bl	12410 <iswalnum@plt>
   4e120:	mov	r3, r0
   4e124:	cmp	r3, #0
   4e128:	bne	4e138 <__assert_fail@plt+0x3ba4c>
   4e12c:	ldr	r3, [fp, #-12]
   4e130:	cmp	r3, #95	; 0x5f
   4e134:	bne	4e140 <__assert_fail@plt+0x3ba54>
   4e138:	mov	r3, #1
   4e13c:	b	4e144 <__assert_fail@plt+0x3ba58>
   4e140:	mov	r3, #0
   4e144:	cmp	r3, #0
   4e148:	movne	r3, #1
   4e14c:	moveq	r3, #0
   4e150:	uxtb	r1, r3
   4e154:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e158:	ldrb	r3, [r2, #6]
   4e15c:	bfi	r3, r1, #6, #1
   4e160:	strb	r3, [r2, #6]
   4e164:	b	4e1c8 <__assert_fail@plt+0x3badc>
   4e168:	bl	12368 <__ctype_b_loc@plt>
   4e16c:	mov	r3, r0
   4e170:	ldr	r2, [r3]
   4e174:	ldrb	r3, [fp, #-6]
   4e178:	lsl	r3, r3, #1
   4e17c:	add	r3, r2, r3
   4e180:	ldrh	r3, [r3]
   4e184:	and	r3, r3, #8
   4e188:	cmp	r3, #0
   4e18c:	bne	4e19c <__assert_fail@plt+0x3bab0>
   4e190:	ldrb	r3, [fp, #-6]
   4e194:	cmp	r3, #95	; 0x5f
   4e198:	bne	4e1a4 <__assert_fail@plt+0x3bab8>
   4e19c:	mov	r3, #1
   4e1a0:	b	4e1a8 <__assert_fail@plt+0x3babc>
   4e1a4:	mov	r3, #0
   4e1a8:	cmp	r3, #0
   4e1ac:	movne	r3, #1
   4e1b0:	moveq	r3, #0
   4e1b4:	uxtb	r1, r3
   4e1b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e1bc:	ldrb	r3, [r2, #6]
   4e1c0:	bfi	r3, r1, #6, #1
   4e1c4:	strb	r3, [r2, #6]
   4e1c8:	ldrb	r3, [fp, #-6]
   4e1cc:	sub	r3, r3, #39	; 0x27
   4e1d0:	cmp	r3, #86	; 0x56
   4e1d4:	ldrls	pc, [pc, r3, lsl #2]
   4e1d8:	b	4e620 <__assert_fail@plt+0x3bf34>
   4e1dc:	strdeq	lr, [r4], -r4
   4e1e0:	andeq	lr, r4, r0, lsr #10
   4e1e4:	andeq	lr, r4, r0, asr #10
   4e1e8:	andeq	lr, r4, r0, lsr #12
   4e1ec:	andeq	lr, r4, r0, ror #10
   4e1f0:	andeq	lr, r4, r0, lsr #12
   4e1f4:	andeq	lr, r4, r0, lsr #12
   4e1f8:	andeq	lr, r4, r0, lsr #12
   4e1fc:	andeq	lr, r4, r0, lsr #12
   4e200:	andeq	lr, r4, r0, lsr #12
   4e204:	andeq	lr, r4, r8, ror #6
   4e208:	andeq	lr, r4, r8, ror #6
   4e20c:	andeq	lr, r4, r8, ror #6
   4e210:	andeq	lr, r4, r8, ror #6
   4e214:	andeq	lr, r4, r8, ror #6
   4e218:	andeq	lr, r4, r8, ror #6
   4e21c:	andeq	lr, r4, r8, ror #6
   4e220:	andeq	lr, r4, r8, ror #6
   4e224:	andeq	lr, r4, r8, ror #6
   4e228:	andeq	lr, r4, r0, lsr #12
   4e22c:	andeq	lr, r4, r0, lsr #12
   4e230:	muleq	r4, r8, r3
   4e234:	andeq	lr, r4, r0, lsr #12
   4e238:	andeq	lr, r4, r4, asr #7
   4e23c:	muleq	r4, r0, r5
   4e240:	andeq	lr, r4, r0, lsr #12
   4e244:	andeq	lr, r4, r0, lsr #12
   4e248:	andeq	lr, r4, ip, lsl r4
   4e24c:	andeq	lr, r4, r0, lsr #12
   4e250:	andeq	lr, r4, r0, lsr #12
   4e254:	andeq	lr, r4, r0, lsr #12
   4e258:	andeq	lr, r4, r0, lsr #12
   4e25c:	andeq	lr, r4, r0, lsr #12
   4e260:	andeq	lr, r4, r0, lsr #12
   4e264:	andeq	lr, r4, r0, lsr #12
   4e268:	andeq	lr, r4, r0, lsr #12
   4e26c:	andeq	lr, r4, r0, lsr #12
   4e270:	andeq	lr, r4, r0, lsr #12
   4e274:	andeq	lr, r4, r0, lsr #12
   4e278:	andeq	lr, r4, r0, lsr #12
   4e27c:	andeq	lr, r4, r0, lsr #12
   4e280:	andeq	lr, r4, r0, lsr #12
   4e284:	andeq	lr, r4, r0, lsr #12
   4e288:	andeq	lr, r4, r0, lsr #12
   4e28c:	andeq	lr, r4, r8, lsr #9
   4e290:	andeq	lr, r4, r0, lsr #12
   4e294:	andeq	lr, r4, r0, lsr #12
   4e298:	andeq	lr, r4, r0, lsr #12
   4e29c:	andeq	lr, r4, r8, ror #8
   4e2a0:	andeq	lr, r4, r0, lsr #12
   4e2a4:	andeq	lr, r4, r0, lsr #12
   4e2a8:	andeq	lr, r4, r0, lsr #12
   4e2ac:	andeq	lr, r4, r0, lsr #12
   4e2b0:	andeq	lr, r4, r0, lsr #12
   4e2b4:	andeq	lr, r4, r0, lsr #12
   4e2b8:	andeq	lr, r4, r0, lsr #12
   4e2bc:	andeq	lr, r4, r0, lsr #12
   4e2c0:	andeq	lr, r4, r8, asr #9
   4e2c4:	andeq	lr, r4, r0, lsr #12
   4e2c8:	strdeq	lr, [r4], -r0
   4e2cc:	andeq	lr, r4, r0, lsr #12
   4e2d0:	andeq	lr, r4, r0, lsr #12
   4e2d4:	andeq	lr, r4, r0, lsr #12
   4e2d8:	andeq	lr, r4, r0, lsr #12
   4e2dc:	andeq	lr, r4, r0, lsr #12
   4e2e0:	andeq	lr, r4, r0, lsr #12
   4e2e4:	andeq	lr, r4, r0, lsr #12
   4e2e8:	andeq	lr, r4, r0, lsr #12
   4e2ec:	andeq	lr, r4, r0, lsr #12
   4e2f0:	andeq	lr, r4, r0, lsr #12
   4e2f4:	andeq	lr, r4, r0, lsr #12
   4e2f8:	andeq	lr, r4, r0, lsr #12
   4e2fc:	andeq	lr, r4, r0, lsr #12
   4e300:	andeq	lr, r4, r0, lsr #12
   4e304:	andeq	lr, r4, r0, lsr #12
   4e308:	andeq	lr, r4, r0, lsr #12
   4e30c:	andeq	lr, r4, r8, lsl #9
   4e310:	andeq	lr, r4, r0, lsr #12
   4e314:	andeq	lr, r4, r0, lsr #12
   4e318:	andeq	lr, r4, r0, lsr #12
   4e31c:	andeq	lr, r4, r8, asr #8
   4e320:	andeq	lr, r4, r0, lsr #12
   4e324:	andeq	lr, r4, r0, lsr #12
   4e328:	andeq	lr, r4, r0, lsr #12
   4e32c:	andeq	lr, r4, r0, asr #11
   4e330:	andeq	lr, r4, r8, lsr r3
   4e334:	strdeq	lr, [r4], -r0
   4e338:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e33c:	and	r3, r3, #1024	; 0x400
   4e340:	cmp	r3, #0
   4e344:	bne	4e628 <__assert_fail@plt+0x3bf3c>
   4e348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e34c:	and	r3, r3, #32768	; 0x8000
   4e350:	cmp	r3, #0
   4e354:	bne	4e628 <__assert_fail@plt+0x3bf3c>
   4e358:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e35c:	mov	r2, #10
   4e360:	strb	r2, [r3, #4]
   4e364:	b	4e628 <__assert_fail@plt+0x3bf3c>
   4e368:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e36c:	and	r3, r3, #16384	; 0x4000
   4e370:	cmp	r3, #0
   4e374:	bne	4e630 <__assert_fail@plt+0x3bf44>
   4e378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e37c:	mov	r2, #4
   4e380:	strb	r2, [r3, #4]
   4e384:	ldrb	r3, [fp, #-6]
   4e388:	sub	r2, r3, #49	; 0x31
   4e38c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e390:	str	r2, [r3]
   4e394:	b	4e630 <__assert_fail@plt+0x3bf44>
   4e398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e39c:	and	r3, r3, #524288	; 0x80000
   4e3a0:	cmp	r3, #0
   4e3a4:	bne	4e638 <__assert_fail@plt+0x3bf4c>
   4e3a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e3ac:	mov	r2, #12
   4e3b0:	strb	r2, [r3, #4]
   4e3b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e3b8:	mov	r2, #6
   4e3bc:	str	r2, [r3]
   4e3c0:	b	4e638 <__assert_fail@plt+0x3bf4c>
   4e3c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e3c8:	and	r3, r3, #524288	; 0x80000
   4e3cc:	cmp	r3, #0
   4e3d0:	bne	4e640 <__assert_fail@plt+0x3bf54>
   4e3d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e3d8:	mov	r2, #12
   4e3dc:	strb	r2, [r3, #4]
   4e3e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e3e4:	mov	r2, #9
   4e3e8:	str	r2, [r3]
   4e3ec:	b	4e640 <__assert_fail@plt+0x3bf54>
   4e3f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e3f4:	and	r3, r3, #524288	; 0x80000
   4e3f8:	cmp	r3, #0
   4e3fc:	bne	4e648 <__assert_fail@plt+0x3bf5c>
   4e400:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e404:	mov	r2, #12
   4e408:	strb	r2, [r3, #4]
   4e40c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e410:	mov	r2, #256	; 0x100
   4e414:	str	r2, [r3]
   4e418:	b	4e648 <__assert_fail@plt+0x3bf5c>
   4e41c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e420:	and	r3, r3, #524288	; 0x80000
   4e424:	cmp	r3, #0
   4e428:	bne	4e650 <__assert_fail@plt+0x3bf64>
   4e42c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e430:	mov	r2, #12
   4e434:	strb	r2, [r3, #4]
   4e438:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e43c:	mov	r2, #512	; 0x200
   4e440:	str	r2, [r3]
   4e444:	b	4e650 <__assert_fail@plt+0x3bf64>
   4e448:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e44c:	and	r3, r3, #524288	; 0x80000
   4e450:	cmp	r3, #0
   4e454:	bne	4e658 <__assert_fail@plt+0x3bf6c>
   4e458:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e45c:	mov	r2, #32
   4e460:	strb	r2, [r3, #4]
   4e464:	b	4e658 <__assert_fail@plt+0x3bf6c>
   4e468:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e46c:	and	r3, r3, #524288	; 0x80000
   4e470:	cmp	r3, #0
   4e474:	bne	4e660 <__assert_fail@plt+0x3bf74>
   4e478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e47c:	mov	r2, #33	; 0x21
   4e480:	strb	r2, [r3, #4]
   4e484:	b	4e660 <__assert_fail@plt+0x3bf74>
   4e488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e48c:	and	r3, r3, #524288	; 0x80000
   4e490:	cmp	r3, #0
   4e494:	bne	4e668 <__assert_fail@plt+0x3bf7c>
   4e498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e49c:	mov	r2, #34	; 0x22
   4e4a0:	strb	r2, [r3, #4]
   4e4a4:	b	4e668 <__assert_fail@plt+0x3bf7c>
   4e4a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e4ac:	and	r3, r3, #524288	; 0x80000
   4e4b0:	cmp	r3, #0
   4e4b4:	bne	4e670 <__assert_fail@plt+0x3bf84>
   4e4b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e4bc:	mov	r2, #35	; 0x23
   4e4c0:	strb	r2, [r3, #4]
   4e4c4:	b	4e670 <__assert_fail@plt+0x3bf84>
   4e4c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e4cc:	and	r3, r3, #524288	; 0x80000
   4e4d0:	cmp	r3, #0
   4e4d4:	bne	4e678 <__assert_fail@plt+0x3bf8c>
   4e4d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e4dc:	mov	r2, #12
   4e4e0:	strb	r2, [r3, #4]
   4e4e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e4e8:	mov	r2, #64	; 0x40
   4e4ec:	str	r2, [r3]
   4e4f0:	b	4e678 <__assert_fail@plt+0x3bf8c>
   4e4f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e4f8:	and	r3, r3, #524288	; 0x80000
   4e4fc:	cmp	r3, #0
   4e500:	bne	4e680 <__assert_fail@plt+0x3bf94>
   4e504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e508:	mov	r2, #12
   4e50c:	strb	r2, [r3, #4]
   4e510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e514:	mov	r2, #128	; 0x80
   4e518:	str	r2, [r3]
   4e51c:	b	4e680 <__assert_fail@plt+0x3bf94>
   4e520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e524:	and	r3, r3, #8192	; 0x2000
   4e528:	cmp	r3, #0
   4e52c:	bne	4e688 <__assert_fail@plt+0x3bf9c>
   4e530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e534:	mov	r2, #8
   4e538:	strb	r2, [r3, #4]
   4e53c:	b	4e688 <__assert_fail@plt+0x3bf9c>
   4e540:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e544:	and	r3, r3, #8192	; 0x2000
   4e548:	cmp	r3, #0
   4e54c:	bne	4e690 <__assert_fail@plt+0x3bfa4>
   4e550:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e554:	mov	r2, #9
   4e558:	strb	r2, [r3, #4]
   4e55c:	b	4e690 <__assert_fail@plt+0x3bfa4>
   4e560:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e564:	and	r3, r3, #1024	; 0x400
   4e568:	cmp	r3, #0
   4e56c:	bne	4e698 <__assert_fail@plt+0x3bfac>
   4e570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e574:	and	r3, r3, #2
   4e578:	cmp	r3, #0
   4e57c:	beq	4e698 <__assert_fail@plt+0x3bfac>
   4e580:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e584:	mov	r2, #18
   4e588:	strb	r2, [r3, #4]
   4e58c:	b	4e698 <__assert_fail@plt+0x3bfac>
   4e590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e594:	and	r3, r3, #1024	; 0x400
   4e598:	cmp	r3, #0
   4e59c:	bne	4e6a0 <__assert_fail@plt+0x3bfb4>
   4e5a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e5a4:	and	r3, r3, #2
   4e5a8:	cmp	r3, #0
   4e5ac:	beq	4e6a0 <__assert_fail@plt+0x3bfb4>
   4e5b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e5b4:	mov	r2, #19
   4e5b8:	strb	r2, [r3, #4]
   4e5bc:	b	4e6a0 <__assert_fail@plt+0x3bfb4>
   4e5c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e5c4:	and	r3, r3, #512	; 0x200
   4e5c8:	cmp	r3, #0
   4e5cc:	beq	4e6a8 <__assert_fail@plt+0x3bfbc>
   4e5d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e5d4:	and	r3, r3, #4096	; 0x1000
   4e5d8:	cmp	r3, #0
   4e5dc:	bne	4e6a8 <__assert_fail@plt+0x3bfbc>
   4e5e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e5e4:	mov	r2, #23
   4e5e8:	strb	r2, [r3, #4]
   4e5ec:	b	4e6a8 <__assert_fail@plt+0x3bfbc>
   4e5f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e5f4:	and	r3, r3, #512	; 0x200
   4e5f8:	cmp	r3, #0
   4e5fc:	beq	4e6b0 <__assert_fail@plt+0x3bfc4>
   4e600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e604:	and	r3, r3, #4096	; 0x1000
   4e608:	cmp	r3, #0
   4e60c:	bne	4e6b0 <__assert_fail@plt+0x3bfc4>
   4e610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e614:	mov	r2, #24
   4e618:	strb	r2, [r3, #4]
   4e61c:	b	4e6b0 <__assert_fail@plt+0x3bfc4>
   4e620:	nop	{0}
   4e624:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e628:	nop	{0}
   4e62c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e630:	nop	{0}
   4e634:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e638:	nop	{0}
   4e63c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e640:	nop	{0}
   4e644:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e648:	nop	{0}
   4e64c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e650:	nop	{0}
   4e654:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e658:	nop	{0}
   4e65c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e660:	nop	{0}
   4e664:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e668:	nop	{0}
   4e66c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e670:	nop	{0}
   4e674:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e678:	nop	{0}
   4e67c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e680:	nop	{0}
   4e684:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e688:	nop	{0}
   4e68c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e690:	nop	{0}
   4e694:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e698:	nop	{0}
   4e69c:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e6a0:	nop	{0}
   4e6a4:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e6a8:	nop	{0}
   4e6ac:	b	4e6b4 <__assert_fail@plt+0x3bfc8>
   4e6b0:	nop	{0}
   4e6b4:	mov	r3, #2
   4e6b8:	b	4ec78 <__assert_fail@plt+0x3c58c>
   4e6bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e6c0:	mov	r2, #1
   4e6c4:	strb	r2, [r3, #4]
   4e6c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e6cc:	ldr	r3, [r3, #80]	; 0x50
   4e6d0:	cmp	r3, #1
   4e6d4:	ble	4e740 <__assert_fail@plt+0x3c054>
   4e6d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4e6dc:	ldr	r3, [r3, #40]	; 0x28
   4e6e0:	mov	r1, r3
   4e6e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   4e6e8:	bl	44cbc <__assert_fail@plt+0x325d0>
   4e6ec:	str	r0, [fp, #-16]
   4e6f0:	ldr	r0, [fp, #-16]
   4e6f4:	bl	12410 <iswalnum@plt>
   4e6f8:	mov	r3, r0
   4e6fc:	cmp	r3, #0
   4e700:	bne	4e710 <__assert_fail@plt+0x3c024>
   4e704:	ldr	r3, [fp, #-16]
   4e708:	cmp	r3, #95	; 0x5f
   4e70c:	bne	4e718 <__assert_fail@plt+0x3c02c>
   4e710:	mov	r3, #1
   4e714:	b	4e71c <__assert_fail@plt+0x3c030>
   4e718:	mov	r3, #0
   4e71c:	cmp	r3, #0
   4e720:	movne	r3, #1
   4e724:	moveq	r3, #0
   4e728:	uxtb	r1, r3
   4e72c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e730:	ldrb	r3, [r2, #6]
   4e734:	bfi	r3, r1, #6, #1
   4e738:	strb	r3, [r2, #6]
   4e73c:	b	4e7a0 <__assert_fail@plt+0x3c0b4>
   4e740:	bl	12368 <__ctype_b_loc@plt>
   4e744:	mov	r3, r0
   4e748:	ldr	r2, [r3]
   4e74c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e750:	ldrb	r3, [r3]
   4e754:	lsl	r3, r3, #1
   4e758:	add	r3, r2, r3
   4e75c:	ldrh	r3, [r3]
   4e760:	and	r3, r3, #8
   4e764:	cmp	r3, #0
   4e768:	bne	4e77c <__assert_fail@plt+0x3c090>
   4e76c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e770:	ldrb	r3, [r3]
   4e774:	cmp	r3, #95	; 0x5f
   4e778:	bne	4e784 <__assert_fail@plt+0x3c098>
   4e77c:	mov	r3, #1
   4e780:	b	4e788 <__assert_fail@plt+0x3c09c>
   4e784:	mov	r3, #0
   4e788:	and	r3, r3, #1
   4e78c:	uxtb	r1, r3
   4e790:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4e794:	ldrb	r3, [r2, #6]
   4e798:	bfi	r3, r1, #6, #1
   4e79c:	strb	r3, [r2, #6]
   4e7a0:	ldrb	r3, [fp, #-5]
   4e7a4:	sub	r3, r3, #10
   4e7a8:	cmp	r3, #115	; 0x73
   4e7ac:	ldrls	pc, [pc, r3, lsl #2]
   4e7b0:	b	4ec20 <__assert_fail@plt+0x3c534>
   4e7b4:	andeq	lr, r4, r4, lsl #19
   4e7b8:	andeq	lr, r4, r0, lsr #24
   4e7bc:	andeq	lr, r4, r0, lsr #24
   4e7c0:	andeq	lr, r4, r0, lsr #24
   4e7c4:	andeq	lr, r4, r0, lsr #24
   4e7c8:	andeq	lr, r4, r0, lsr #24
   4e7cc:	andeq	lr, r4, r0, lsr #24
   4e7d0:	andeq	lr, r4, r0, lsr #24
   4e7d4:	andeq	lr, r4, r0, lsr #24
   4e7d8:	andeq	lr, r4, r0, lsr #24
   4e7dc:	andeq	lr, r4, r0, lsr #24
   4e7e0:	andeq	lr, r4, r0, lsr #24
   4e7e4:	andeq	lr, r4, r0, lsr #24
   4e7e8:	andeq	lr, r4, r0, lsr #24
   4e7ec:	andeq	lr, r4, r0, lsr #24
   4e7f0:	andeq	lr, r4, r0, lsr #24
   4e7f4:	andeq	lr, r4, r0, lsr #24
   4e7f8:	andeq	lr, r4, r0, lsr #24
   4e7fc:	andeq	lr, r4, r0, lsr #24
   4e800:	andeq	lr, r4, r0, lsr #24
   4e804:	andeq	lr, r4, r0, lsr #24
   4e808:	andeq	lr, r4, r0, lsr #24
   4e80c:	andeq	lr, r4, r0, lsr #24
   4e810:	andeq	lr, r4, r0, lsr #24
   4e814:	andeq	lr, r4, r0, lsr #24
   4e818:	andeq	lr, r4, r0, lsr #24
   4e81c:	andeq	lr, r4, r4, lsl #23
   4e820:	andeq	lr, r4, r0, lsr #24
   4e824:	andeq	lr, r4, r0, lsr #24
   4e828:	andeq	lr, r4, r0, lsr #24
   4e82c:	andeq	lr, r4, r4, lsr #21
   4e830:	andeq	lr, r4, r4, asr #21
   4e834:	ldrdeq	lr, [r4], -r4
   4e838:	andeq	lr, r4, r4, ror #19
   4e83c:	andeq	lr, r4, r0, lsr #24
   4e840:	andeq	lr, r4, r0, lsr #24
   4e844:	strdeq	lr, [r4], -r4
   4e848:	andeq	lr, r4, r0, lsr #24
   4e84c:	andeq	lr, r4, r0, lsr #24
   4e850:	andeq	lr, r4, r0, lsr #24
   4e854:	andeq	lr, r4, r0, lsr #24
   4e858:	andeq	lr, r4, r0, lsr #24
   4e85c:	andeq	lr, r4, r0, lsr #24
   4e860:	andeq	lr, r4, r0, lsr #24
   4e864:	andeq	lr, r4, r0, lsr #24
   4e868:	andeq	lr, r4, r0, lsr #24
   4e86c:	andeq	lr, r4, r0, lsr #24
   4e870:	andeq	lr, r4, r0, lsr #24
   4e874:	andeq	lr, r4, r0, lsr #24
   4e878:	andeq	lr, r4, r0, lsr #24
   4e87c:	andeq	lr, r4, r0, lsr #24
   4e880:	andeq	lr, r4, r0, lsr #24
   4e884:	andeq	lr, r4, r0, lsr #24
   4e888:	andeq	lr, r4, r4, lsl sl
   4e88c:	andeq	lr, r4, r0, lsr #24
   4e890:	andeq	lr, r4, r0, lsr #24
   4e894:	andeq	lr, r4, r0, lsr #24
   4e898:	andeq	lr, r4, r0, lsr #24
   4e89c:	andeq	lr, r4, r0, lsr #24
   4e8a0:	andeq	lr, r4, r0, lsr #24
   4e8a4:	andeq	lr, r4, r0, lsr #24
   4e8a8:	andeq	lr, r4, r0, lsr #24
   4e8ac:	andeq	lr, r4, r0, lsr #24
   4e8b0:	andeq	lr, r4, r0, lsr #24
   4e8b4:	andeq	lr, r4, r0, lsr #24
   4e8b8:	andeq	lr, r4, r0, lsr #24
   4e8bc:	andeq	lr, r4, r0, lsr #24
   4e8c0:	andeq	lr, r4, r0, lsr #24
   4e8c4:	andeq	lr, r4, r0, lsr #24
   4e8c8:	andeq	lr, r4, r0, lsr #24
   4e8cc:	andeq	lr, r4, r0, lsr #24
   4e8d0:	andeq	lr, r4, r0, lsr #24
   4e8d4:	andeq	lr, r4, r0, lsr #24
   4e8d8:	andeq	lr, r4, r0, lsr #24
   4e8dc:	andeq	lr, r4, r0, lsr #24
   4e8e0:	andeq	lr, r4, r0, lsr #24
   4e8e4:	andeq	lr, r4, r0, lsr #24
   4e8e8:	andeq	lr, r4, r0, lsr #24
   4e8ec:	andeq	lr, r4, r0, lsr #24
   4e8f0:	andeq	lr, r4, r0, lsr #24
   4e8f4:	andeq	lr, r4, r0, lsr #24
   4e8f8:	andeq	lr, r4, r4, ror #21
   4e8fc:	andeq	lr, r4, r0, lsr #24
   4e900:	andeq	lr, r4, r0, lsr #24
   4e904:	andeq	lr, r4, r4, lsl #22
   4e908:	andeq	lr, r4, r0, lsr #24
   4e90c:	andeq	lr, r4, r0, lsr #24
   4e910:	andeq	lr, r4, r0, lsr #24
   4e914:	andeq	lr, r4, r0, lsr #24
   4e918:	andeq	lr, r4, r0, lsr #24
   4e91c:	andeq	lr, r4, r0, lsr #24
   4e920:	andeq	lr, r4, r0, lsr #24
   4e924:	andeq	lr, r4, r0, lsr #24
   4e928:	andeq	lr, r4, r0, lsr #24
   4e92c:	andeq	lr, r4, r0, lsr #24
   4e930:	andeq	lr, r4, r0, lsr #24
   4e934:	andeq	lr, r4, r0, lsr #24
   4e938:	andeq	lr, r4, r0, lsr #24
   4e93c:	andeq	lr, r4, r0, lsr #24
   4e940:	andeq	lr, r4, r0, lsr #24
   4e944:	andeq	lr, r4, r0, lsr #24
   4e948:	andeq	lr, r4, r0, lsr #24
   4e94c:	andeq	lr, r4, r0, lsr #24
   4e950:	andeq	lr, r4, r0, lsr #24
   4e954:	andeq	lr, r4, r0, lsr #24
   4e958:	andeq	lr, r4, r0, lsr #24
   4e95c:	andeq	lr, r4, r0, lsr #24
   4e960:	andeq	lr, r4, r0, lsr #24
   4e964:	andeq	lr, r4, r0, lsr #24
   4e968:	andeq	lr, r4, r0, lsr #24
   4e96c:	andeq	lr, r4, r0, lsr #24
   4e970:	andeq	lr, r4, r0, lsr #24
   4e974:	andeq	lr, r4, r0, lsr #24
   4e978:	andeq	lr, r4, r4, asr #20
   4e97c:	andeq	lr, r4, r4, lsr #19
   4e980:	andeq	lr, r4, r4, ror sl
   4e984:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e988:	and	r3, r3, #2048	; 0x800
   4e98c:	cmp	r3, #0
   4e990:	beq	4ec28 <__assert_fail@plt+0x3c53c>
   4e994:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e998:	mov	r2, #10
   4e99c:	strb	r2, [r3, #4]
   4e9a0:	b	4ec28 <__assert_fail@plt+0x3c53c>
   4e9a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e9a8:	and	r3, r3, #1024	; 0x400
   4e9ac:	cmp	r3, #0
   4e9b0:	bne	4ec30 <__assert_fail@plt+0x3c544>
   4e9b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e9b8:	and	r3, r3, #32768	; 0x8000
   4e9bc:	cmp	r3, #0
   4e9c0:	beq	4ec30 <__assert_fail@plt+0x3c544>
   4e9c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e9c8:	mov	r2, #10
   4e9cc:	strb	r2, [r3, #4]
   4e9d0:	b	4ec30 <__assert_fail@plt+0x3c544>
   4e9d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4e9d8:	mov	r2, #11
   4e9dc:	strb	r2, [r3, #4]
   4e9e0:	b	4ec74 <__assert_fail@plt+0x3c588>
   4e9e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e9e8:	and	r3, r3, #1024	; 0x400
   4e9ec:	cmp	r3, #0
   4e9f0:	bne	4ec38 <__assert_fail@plt+0x3c54c>
   4e9f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4e9f8:	and	r3, r3, #2
   4e9fc:	cmp	r3, #0
   4ea00:	bne	4ec38 <__assert_fail@plt+0x3c54c>
   4ea04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ea08:	mov	r2, #18
   4ea0c:	strb	r2, [r3, #4]
   4ea10:	b	4ec38 <__assert_fail@plt+0x3c54c>
   4ea14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ea18:	and	r3, r3, #1024	; 0x400
   4ea1c:	cmp	r3, #0
   4ea20:	bne	4ec40 <__assert_fail@plt+0x3c554>
   4ea24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ea28:	and	r3, r3, #2
   4ea2c:	cmp	r3, #0
   4ea30:	bne	4ec40 <__assert_fail@plt+0x3c554>
   4ea34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ea38:	mov	r2, #19
   4ea3c:	strb	r2, [r3, #4]
   4ea40:	b	4ec40 <__assert_fail@plt+0x3c554>
   4ea44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ea48:	and	r3, r3, #512	; 0x200
   4ea4c:	cmp	r3, #0
   4ea50:	beq	4ec48 <__assert_fail@plt+0x3c55c>
   4ea54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ea58:	and	r3, r3, #4096	; 0x1000
   4ea5c:	cmp	r3, #0
   4ea60:	beq	4ec48 <__assert_fail@plt+0x3c55c>
   4ea64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ea68:	mov	r2, #23
   4ea6c:	strb	r2, [r3, #4]
   4ea70:	b	4ec48 <__assert_fail@plt+0x3c55c>
   4ea74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ea78:	and	r3, r3, #512	; 0x200
   4ea7c:	cmp	r3, #0
   4ea80:	beq	4ec50 <__assert_fail@plt+0x3c564>
   4ea84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ea88:	and	r3, r3, #4096	; 0x1000
   4ea8c:	cmp	r3, #0
   4ea90:	beq	4ec50 <__assert_fail@plt+0x3c564>
   4ea94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ea98:	mov	r2, #24
   4ea9c:	strb	r2, [r3, #4]
   4eaa0:	b	4ec50 <__assert_fail@plt+0x3c564>
   4eaa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4eaa8:	and	r3, r3, #8192	; 0x2000
   4eaac:	cmp	r3, #0
   4eab0:	beq	4ec58 <__assert_fail@plt+0x3c56c>
   4eab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4eab8:	mov	r2, #8
   4eabc:	strb	r2, [r3, #4]
   4eac0:	b	4ec58 <__assert_fail@plt+0x3c56c>
   4eac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4eac8:	and	r3, r3, #8192	; 0x2000
   4eacc:	cmp	r3, #0
   4ead0:	beq	4ec60 <__assert_fail@plt+0x3c574>
   4ead4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ead8:	mov	r2, #9
   4eadc:	strb	r2, [r3, #4]
   4eae0:	b	4ec60 <__assert_fail@plt+0x3c574>
   4eae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4eae8:	mov	r2, #20
   4eaec:	strb	r2, [r3, #4]
   4eaf0:	b	4ec74 <__assert_fail@plt+0x3c588>
   4eaf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4eaf8:	mov	r2, #5
   4eafc:	strb	r2, [r3, #4]
   4eb00:	b	4ec74 <__assert_fail@plt+0x3c588>
   4eb04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4eb08:	mov	r3, #8
   4eb0c:	movt	r3, #128	; 0x80
   4eb10:	and	r3, r3, r2
   4eb14:	cmp	r3, #0
   4eb18:	bne	4eb68 <__assert_fail@plt+0x3c47c>
   4eb1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4eb20:	ldr	r3, [r3, #40]	; 0x28
   4eb24:	cmp	r3, #0
   4eb28:	beq	4eb68 <__assert_fail@plt+0x3c47c>
   4eb2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4eb30:	ldr	r2, [r3, #4]
   4eb34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4eb38:	ldr	r3, [r3, #40]	; 0x28
   4eb3c:	sub	r3, r3, #1
   4eb40:	add	r3, r2, r3
   4eb44:	ldrb	r3, [r3]
   4eb48:	strb	r3, [fp, #-17]	; 0xffffffef
   4eb4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4eb50:	and	r3, r3, #2048	; 0x800
   4eb54:	cmp	r3, #0
   4eb58:	beq	4ec68 <__assert_fail@plt+0x3c57c>
   4eb5c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   4eb60:	cmp	r3, #10
   4eb64:	bne	4ec68 <__assert_fail@plt+0x3c57c>
   4eb68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4eb6c:	mov	r2, #12
   4eb70:	strb	r2, [r3, #4]
   4eb74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4eb78:	mov	r2, #16
   4eb7c:	str	r2, [r3]
   4eb80:	b	4ec74 <__assert_fail@plt+0x3c588>
   4eb84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4eb88:	and	r3, r3, #8
   4eb8c:	cmp	r3, #0
   4eb90:	bne	4ec04 <__assert_fail@plt+0x3c518>
   4eb94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4eb98:	ldr	r3, [r3, #40]	; 0x28
   4eb9c:	add	r2, r3, #1
   4eba0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4eba4:	ldr	r3, [r3, #48]	; 0x30
   4eba8:	cmp	r2, r3
   4ebac:	beq	4ec04 <__assert_fail@plt+0x3c518>
   4ebb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ebb4:	ldr	r3, [r3, #40]	; 0x28
   4ebb8:	add	r2, r3, #1
   4ebbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ebc0:	str	r2, [r3, #40]	; 0x28
   4ebc4:	sub	r3, fp, #28
   4ebc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ebcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4ebd0:	mov	r0, r3
   4ebd4:	bl	4df84 <__assert_fail@plt+0x3b898>
   4ebd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ebdc:	ldr	r3, [r3, #40]	; 0x28
   4ebe0:	sub	r2, r3, #1
   4ebe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ebe8:	str	r2, [r3, #40]	; 0x28
   4ebec:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   4ebf0:	cmp	r3, #10
   4ebf4:	beq	4ec04 <__assert_fail@plt+0x3c518>
   4ebf8:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   4ebfc:	cmp	r3, #9
   4ec00:	bne	4ec70 <__assert_fail@plt+0x3c584>
   4ec04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ec08:	mov	r2, #12
   4ec0c:	strb	r2, [r3, #4]
   4ec10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ec14:	mov	r2, #32
   4ec18:	str	r2, [r3]
   4ec1c:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec20:	nop	{0}
   4ec24:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec28:	nop	{0}
   4ec2c:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec30:	nop	{0}
   4ec34:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec38:	nop	{0}
   4ec3c:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec40:	nop	{0}
   4ec44:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec48:	nop	{0}
   4ec4c:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec50:	nop	{0}
   4ec54:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec58:	nop	{0}
   4ec5c:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec60:	nop	{0}
   4ec64:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec68:	nop	{0}
   4ec6c:	b	4ec74 <__assert_fail@plt+0x3c588>
   4ec70:	nop	{0}
   4ec74:	mov	r3, #1
   4ec78:	mov	r0, r3
   4ec7c:	sub	sp, fp, #4
   4ec80:	ldr	fp, [sp]
   4ec84:	add	sp, sp, #4
   4ec88:	pop	{pc}		; (ldr pc, [sp], #4)
   4ec8c:	push	{fp}		; (str fp, [sp, #-4]!)
   4ec90:	add	fp, sp, #0
   4ec94:	sub	sp, sp, #36	; 0x24
   4ec98:	str	r0, [fp, #-24]	; 0xffffffe8
   4ec9c:	str	r1, [fp, #-28]	; 0xffffffe4
   4eca0:	str	r2, [fp, #-32]	; 0xffffffe0
   4eca4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4eca8:	ldr	r2, [r3, #56]	; 0x38
   4ecac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ecb0:	ldr	r3, [r3, #40]	; 0x28
   4ecb4:	cmp	r2, r3
   4ecb8:	bgt	4ecd0 <__assert_fail@plt+0x3c5e4>
   4ecbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ecc0:	mov	r2, #2
   4ecc4:	strb	r2, [r3, #4]
   4ecc8:	mov	r3, #0
   4eccc:	b	4ef2c <__assert_fail@plt+0x3c840>
   4ecd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ecd4:	ldr	r3, [r3, #4]
   4ecd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4ecdc:	ldr	r2, [r2, #40]	; 0x28
   4ece0:	add	r3, r3, r2
   4ece4:	ldrb	r3, [r3]
   4ece8:	strb	r3, [fp, #-13]
   4ecec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ecf0:	ldrb	r2, [fp, #-13]
   4ecf4:	strb	r2, [r3]
   4ecf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ecfc:	ldr	r3, [r3, #80]	; 0x50
   4ed00:	cmp	r3, #1
   4ed04:	ble	4ed58 <__assert_fail@plt+0x3c66c>
   4ed08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ed0c:	ldr	r2, [r3, #40]	; 0x28
   4ed10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ed14:	ldr	r3, [r3, #28]
   4ed18:	cmp	r2, r3
   4ed1c:	beq	4ed58 <__assert_fail@plt+0x3c66c>
   4ed20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ed24:	ldr	r2, [r3, #8]
   4ed28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ed2c:	ldr	r3, [r3, #40]	; 0x28
   4ed30:	lsl	r3, r3, #2
   4ed34:	add	r3, r2, r3
   4ed38:	ldr	r3, [r3]
   4ed3c:	cmn	r3, #1
   4ed40:	bne	4ed58 <__assert_fail@plt+0x3c66c>
   4ed44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ed48:	mov	r2, #1
   4ed4c:	strb	r2, [r3, #4]
   4ed50:	mov	r3, #1
   4ed54:	b	4ef2c <__assert_fail@plt+0x3c840>
   4ed58:	ldrb	r3, [fp, #-13]
   4ed5c:	cmp	r3, #92	; 0x5c
   4ed60:	bne	4ede0 <__assert_fail@plt+0x3c6f4>
   4ed64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ed68:	and	r3, r3, #1
   4ed6c:	cmp	r3, #0
   4ed70:	beq	4ede0 <__assert_fail@plt+0x3c6f4>
   4ed74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ed78:	ldr	r3, [r3, #40]	; 0x28
   4ed7c:	add	r2, r3, #1
   4ed80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ed84:	ldr	r3, [r3, #48]	; 0x30
   4ed88:	cmp	r2, r3
   4ed8c:	bge	4ede0 <__assert_fail@plt+0x3c6f4>
   4ed90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ed94:	ldr	r3, [r3, #40]	; 0x28
   4ed98:	add	r2, r3, #1
   4ed9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4eda0:	str	r2, [r3, #40]	; 0x28
   4eda4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4eda8:	ldr	r3, [r3, #4]
   4edac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4edb0:	ldr	r2, [r2, #40]	; 0x28
   4edb4:	add	r3, r3, r2
   4edb8:	ldrb	r3, [r3]
   4edbc:	strb	r3, [fp, #-14]
   4edc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4edc4:	ldrb	r2, [fp, #-14]
   4edc8:	strb	r2, [r3]
   4edcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4edd0:	mov	r2, #1
   4edd4:	strb	r2, [r3, #4]
   4edd8:	mov	r3, #1
   4eddc:	b	4ef2c <__assert_fail@plt+0x3c840>
   4ede0:	ldrb	r3, [fp, #-13]
   4ede4:	cmp	r3, #91	; 0x5b
   4ede8:	bne	4eed0 <__assert_fail@plt+0x3c7e4>
   4edec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4edf0:	ldr	r3, [r3, #40]	; 0x28
   4edf4:	add	r2, r3, #1
   4edf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4edfc:	ldr	r3, [r3, #48]	; 0x30
   4ee00:	cmp	r2, r3
   4ee04:	bge	4ee2c <__assert_fail@plt+0x3c740>
   4ee08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ee0c:	ldr	r2, [r3, #4]
   4ee10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ee14:	ldr	r3, [r3, #40]	; 0x28
   4ee18:	add	r3, r3, #1
   4ee1c:	add	r3, r2, r3
   4ee20:	ldrb	r3, [r3]
   4ee24:	strb	r3, [fp, #-5]
   4ee28:	b	4ee34 <__assert_fail@plt+0x3c748>
   4ee2c:	mov	r3, #0
   4ee30:	strb	r3, [fp, #-5]
   4ee34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ee38:	ldrb	r2, [fp, #-5]
   4ee3c:	strb	r2, [r3]
   4ee40:	mov	r3, #2
   4ee44:	str	r3, [fp, #-12]
   4ee48:	ldrb	r3, [fp, #-5]
   4ee4c:	cmp	r3, #58	; 0x3a
   4ee50:	beq	4ee84 <__assert_fail@plt+0x3c798>
   4ee54:	cmp	r3, #61	; 0x3d
   4ee58:	beq	4ee74 <__assert_fail@plt+0x3c788>
   4ee5c:	cmp	r3, #46	; 0x2e
   4ee60:	bne	4eea4 <__assert_fail@plt+0x3c7b8>
   4ee64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ee68:	mov	r2, #26
   4ee6c:	strb	r2, [r3, #4]
   4ee70:	b	4eec8 <__assert_fail@plt+0x3c7dc>
   4ee74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ee78:	mov	r2, #28
   4ee7c:	strb	r2, [r3, #4]
   4ee80:	b	4eec8 <__assert_fail@plt+0x3c7dc>
   4ee84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ee88:	and	r3, r3, #4
   4ee8c:	cmp	r3, #0
   4ee90:	beq	4eea4 <__assert_fail@plt+0x3c7b8>
   4ee94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ee98:	mov	r2, #30
   4ee9c:	strb	r2, [r3, #4]
   4eea0:	b	4eec8 <__assert_fail@plt+0x3c7dc>
   4eea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4eea8:	mov	r2, #1
   4eeac:	strb	r2, [r3, #4]
   4eeb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4eeb4:	ldrb	r2, [fp, #-13]
   4eeb8:	strb	r2, [r3]
   4eebc:	mov	r3, #1
   4eec0:	str	r3, [fp, #-12]
   4eec4:	nop	{0}
   4eec8:	ldr	r3, [fp, #-12]
   4eecc:	b	4ef2c <__assert_fail@plt+0x3c840>
   4eed0:	ldrb	r3, [fp, #-13]
   4eed4:	cmp	r3, #93	; 0x5d
   4eed8:	beq	4eefc <__assert_fail@plt+0x3c810>
   4eedc:	cmp	r3, #94	; 0x5e
   4eee0:	beq	4ef0c <__assert_fail@plt+0x3c820>
   4eee4:	cmp	r3, #45	; 0x2d
   4eee8:	bne	4ef1c <__assert_fail@plt+0x3c830>
   4eeec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4eef0:	mov	r2, #22
   4eef4:	strb	r2, [r3, #4]
   4eef8:	b	4ef28 <__assert_fail@plt+0x3c83c>
   4eefc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ef00:	mov	r2, #21
   4ef04:	strb	r2, [r3, #4]
   4ef08:	b	4ef28 <__assert_fail@plt+0x3c83c>
   4ef0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ef10:	mov	r2, #25
   4ef14:	strb	r2, [r3, #4]
   4ef18:	b	4ef28 <__assert_fail@plt+0x3c83c>
   4ef1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4ef20:	mov	r2, #1
   4ef24:	strb	r2, [r3, #4]
   4ef28:	mov	r3, #1
   4ef2c:	mov	r0, r3
   4ef30:	add	sp, fp, #0
   4ef34:	pop	{fp}		; (ldr fp, [sp], #4)
   4ef38:	bx	lr
   4ef3c:	str	fp, [sp, #-8]!
   4ef40:	str	lr, [sp, #4]
   4ef44:	add	fp, sp, #4
   4ef48:	sub	sp, sp, #48	; 0x30
   4ef4c:	str	r0, [fp, #-32]	; 0xffffffe0
   4ef50:	str	r1, [fp, #-36]	; 0xffffffdc
   4ef54:	str	r2, [fp, #-40]	; 0xffffffd8
   4ef58:	str	r3, [fp, #-44]	; 0xffffffd4
   4ef5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ef60:	ldr	r3, [r3]
   4ef64:	str	r3, [fp, #-12]
   4ef68:	ldr	r3, [fp, #-12]
   4ef6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4ef70:	str	r2, [r3, #128]	; 0x80
   4ef74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4ef78:	orr	r2, r3, #8388608	; 0x800000
   4ef7c:	sub	r3, fp, #28
   4ef80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4ef84:	mov	r0, r3
   4ef88:	bl	4df2c <__assert_fail@plt+0x3b840>
   4ef8c:	sub	r2, fp, #28
   4ef90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4ef94:	str	r3, [sp, #4]
   4ef98:	mov	r3, #0
   4ef9c:	str	r3, [sp]
   4efa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4efa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4efa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4efac:	bl	4f0a4 <__assert_fail@plt+0x3c9b8>
   4efb0:	str	r0, [fp, #-16]
   4efb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4efb8:	ldr	r3, [r3]
   4efbc:	cmp	r3, #0
   4efc0:	movne	r3, #1
   4efc4:	moveq	r3, #0
   4efc8:	uxtb	r3, r3
   4efcc:	cmp	r3, #0
   4efd0:	beq	4eff8 <__assert_fail@plt+0x3c90c>
   4efd4:	ldr	r3, [fp, #-16]
   4efd8:	cmp	r3, #0
   4efdc:	moveq	r3, #1
   4efe0:	movne	r3, #0
   4efe4:	uxtb	r3, r3
   4efe8:	cmp	r3, #0
   4efec:	beq	4eff8 <__assert_fail@plt+0x3c90c>
   4eff0:	mov	r3, #0
   4eff4:	b	4f090 <__assert_fail@plt+0x3c9a4>
   4eff8:	mov	r3, #2
   4effc:	mov	r2, #0
   4f000:	mov	r1, #0
   4f004:	ldr	r0, [fp, #-12]
   4f008:	bl	52be4 <__assert_fail@plt+0x404f8>
   4f00c:	str	r0, [fp, #-20]	; 0xffffffec
   4f010:	ldr	r3, [fp, #-16]
   4f014:	cmp	r3, #0
   4f018:	beq	4f038 <__assert_fail@plt+0x3c94c>
   4f01c:	mov	r3, #16
   4f020:	ldr	r2, [fp, #-20]	; 0xffffffec
   4f024:	ldr	r1, [fp, #-16]
   4f028:	ldr	r0, [fp, #-12]
   4f02c:	bl	52be4 <__assert_fail@plt+0x404f8>
   4f030:	str	r0, [fp, #-8]
   4f034:	b	4f040 <__assert_fail@plt+0x3c954>
   4f038:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f03c:	str	r3, [fp, #-8]
   4f040:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f044:	cmp	r3, #0
   4f048:	moveq	r3, #1
   4f04c:	movne	r3, #0
   4f050:	uxtb	r3, r3
   4f054:	cmp	r3, #0
   4f058:	bne	4f078 <__assert_fail@plt+0x3c98c>
   4f05c:	ldr	r3, [fp, #-8]
   4f060:	cmp	r3, #0
   4f064:	moveq	r3, #1
   4f068:	movne	r3, #0
   4f06c:	uxtb	r3, r3
   4f070:	cmp	r3, #0
   4f074:	beq	4f08c <__assert_fail@plt+0x3c9a0>
   4f078:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f07c:	mov	r2, #12
   4f080:	str	r2, [r3]
   4f084:	mov	r3, #0
   4f088:	b	4f090 <__assert_fail@plt+0x3c9a4>
   4f08c:	ldr	r3, [fp, #-8]
   4f090:	mov	r0, r3
   4f094:	sub	sp, fp, #4
   4f098:	ldr	fp, [sp]
   4f09c:	add	sp, sp, #4
   4f0a0:	pop	{pc}		; (ldr pc, [sp], #4)
   4f0a4:	str	fp, [sp, #-8]!
   4f0a8:	str	lr, [sp, #4]
   4f0ac:	add	fp, sp, #4
   4f0b0:	sub	sp, sp, #48	; 0x30
   4f0b4:	str	r0, [fp, #-32]	; 0xffffffe0
   4f0b8:	str	r1, [fp, #-36]	; 0xffffffdc
   4f0bc:	str	r2, [fp, #-40]	; 0xffffffd8
   4f0c0:	str	r3, [fp, #-44]	; 0xffffffd4
   4f0c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4f0c8:	ldr	r3, [r3]
   4f0cc:	str	r3, [fp, #-16]
   4f0d0:	mov	r3, #0
   4f0d4:	str	r3, [fp, #-12]
   4f0d8:	ldr	r3, [fp, #-16]
   4f0dc:	ldr	r3, [r3, #84]	; 0x54
   4f0e0:	str	r3, [fp, #-20]	; 0xffffffec
   4f0e4:	ldr	r3, [fp, #8]
   4f0e8:	str	r3, [sp, #4]
   4f0ec:	ldr	r3, [fp, #4]
   4f0f0:	str	r3, [sp]
   4f0f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f0f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f0fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4f100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f104:	bl	4f2dc <__assert_fail@plt+0x3cbf0>
   4f108:	str	r0, [fp, #-8]
   4f10c:	ldr	r3, [fp, #8]
   4f110:	ldr	r3, [r3]
   4f114:	cmp	r3, #0
   4f118:	movne	r3, #1
   4f11c:	moveq	r3, #0
   4f120:	uxtb	r3, r3
   4f124:	cmp	r3, #0
   4f128:	beq	4f2b4 <__assert_fail@plt+0x3cbc8>
   4f12c:	ldr	r3, [fp, #-8]
   4f130:	cmp	r3, #0
   4f134:	moveq	r3, #1
   4f138:	movne	r3, #0
   4f13c:	uxtb	r3, r3
   4f140:	cmp	r3, #0
   4f144:	beq	4f2b4 <__assert_fail@plt+0x3cbc8>
   4f148:	mov	r3, #0
   4f14c:	b	4f2c8 <__assert_fail@plt+0x3cbdc>
   4f150:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f154:	orr	r3, r3, #8388608	; 0x800000
   4f158:	mov	r2, r3
   4f15c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4f160:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4f164:	bl	4df2c <__assert_fail@plt+0x3b840>
   4f168:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f16c:	ldrb	r3, [r3, #4]
   4f170:	cmp	r3, #10
   4f174:	beq	4f264 <__assert_fail@plt+0x3cb78>
   4f178:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f17c:	ldrb	r3, [r3, #4]
   4f180:	cmp	r3, #2
   4f184:	beq	4f264 <__assert_fail@plt+0x3cb78>
   4f188:	ldr	r3, [fp, #4]
   4f18c:	cmp	r3, #0
   4f190:	beq	4f1a4 <__assert_fail@plt+0x3cab8>
   4f194:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f198:	ldrb	r3, [r3, #4]
   4f19c:	cmp	r3, #9
   4f1a0:	beq	4f264 <__assert_fail@plt+0x3cb78>
   4f1a4:	ldr	r3, [fp, #-16]
   4f1a8:	ldr	r3, [r3, #84]	; 0x54
   4f1ac:	str	r3, [fp, #-24]	; 0xffffffe8
   4f1b0:	ldr	r3, [fp, #-16]
   4f1b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   4f1b8:	str	r2, [r3, #84]	; 0x54
   4f1bc:	ldr	r3, [fp, #8]
   4f1c0:	str	r3, [sp, #4]
   4f1c4:	ldr	r3, [fp, #4]
   4f1c8:	str	r3, [sp]
   4f1cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f1d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f1d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4f1d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f1dc:	bl	4f2dc <__assert_fail@plt+0x3cbf0>
   4f1e0:	str	r0, [fp, #-12]
   4f1e4:	ldr	r3, [fp, #8]
   4f1e8:	ldr	r3, [r3]
   4f1ec:	cmp	r3, #0
   4f1f0:	movne	r3, #1
   4f1f4:	moveq	r3, #0
   4f1f8:	uxtb	r3, r3
   4f1fc:	cmp	r3, #0
   4f200:	beq	4f248 <__assert_fail@plt+0x3cb5c>
   4f204:	ldr	r3, [fp, #-12]
   4f208:	cmp	r3, #0
   4f20c:	moveq	r3, #1
   4f210:	movne	r3, #0
   4f214:	uxtb	r3, r3
   4f218:	cmp	r3, #0
   4f21c:	beq	4f248 <__assert_fail@plt+0x3cb5c>
   4f220:	ldr	r3, [fp, #-8]
   4f224:	cmp	r3, #0
   4f228:	beq	4f240 <__assert_fail@plt+0x3cb54>
   4f22c:	mov	r2, #0
   4f230:	movw	r1, #11980	; 0x2ecc
   4f234:	movt	r1, #5
   4f238:	ldr	r0, [fp, #-8]
   4f23c:	bl	4c48c <__assert_fail@plt+0x39da0>
   4f240:	mov	r3, #0
   4f244:	b	4f2c8 <__assert_fail@plt+0x3cbdc>
   4f248:	ldr	r3, [fp, #-16]
   4f24c:	ldr	r2, [r3, #84]	; 0x54
   4f250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4f254:	orr	r2, r2, r3
   4f258:	ldr	r3, [fp, #-16]
   4f25c:	str	r2, [r3, #84]	; 0x54
   4f260:	b	4f26c <__assert_fail@plt+0x3cb80>
   4f264:	mov	r3, #0
   4f268:	str	r3, [fp, #-12]
   4f26c:	mov	r3, #10
   4f270:	ldr	r2, [fp, #-12]
   4f274:	ldr	r1, [fp, #-8]
   4f278:	ldr	r0, [fp, #-16]
   4f27c:	bl	52be4 <__assert_fail@plt+0x404f8>
   4f280:	str	r0, [fp, #-8]
   4f284:	ldr	r3, [fp, #-8]
   4f288:	cmp	r3, #0
   4f28c:	moveq	r3, #1
   4f290:	movne	r3, #0
   4f294:	uxtb	r3, r3
   4f298:	cmp	r3, #0
   4f29c:	beq	4f2b4 <__assert_fail@plt+0x3cbc8>
   4f2a0:	ldr	r3, [fp, #8]
   4f2a4:	mov	r2, #12
   4f2a8:	str	r2, [r3]
   4f2ac:	mov	r3, #0
   4f2b0:	b	4f2c8 <__assert_fail@plt+0x3cbdc>
   4f2b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f2b8:	ldrb	r3, [r3, #4]
   4f2bc:	cmp	r3, #10
   4f2c0:	beq	4f150 <__assert_fail@plt+0x3ca64>
   4f2c4:	ldr	r3, [fp, #-8]
   4f2c8:	mov	r0, r3
   4f2cc:	sub	sp, fp, #4
   4f2d0:	ldr	fp, [sp]
   4f2d4:	add	sp, sp, #4
   4f2d8:	pop	{pc}		; (ldr pc, [sp], #4)
   4f2dc:	str	fp, [sp, #-8]!
   4f2e0:	str	lr, [sp, #4]
   4f2e4:	add	fp, sp, #4
   4f2e8:	sub	sp, sp, #40	; 0x28
   4f2ec:	str	r0, [fp, #-24]	; 0xffffffe8
   4f2f0:	str	r1, [fp, #-28]	; 0xffffffe4
   4f2f4:	str	r2, [fp, #-32]	; 0xffffffe0
   4f2f8:	str	r3, [fp, #-36]	; 0xffffffdc
   4f2fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4f300:	ldr	r3, [r3]
   4f304:	str	r3, [fp, #-12]
   4f308:	ldr	r3, [fp, #8]
   4f30c:	str	r3, [sp, #4]
   4f310:	ldr	r3, [fp, #4]
   4f314:	str	r3, [sp]
   4f318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4f31c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4f320:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f328:	bl	4f4ec <__assert_fail@plt+0x3ce00>
   4f32c:	str	r0, [fp, #-8]
   4f330:	ldr	r3, [fp, #8]
   4f334:	ldr	r3, [r3]
   4f338:	cmp	r3, #0
   4f33c:	movne	r3, #1
   4f340:	moveq	r3, #0
   4f344:	uxtb	r3, r3
   4f348:	cmp	r3, #0
   4f34c:	beq	4f498 <__assert_fail@plt+0x3cdac>
   4f350:	ldr	r3, [fp, #-8]
   4f354:	cmp	r3, #0
   4f358:	moveq	r3, #1
   4f35c:	movne	r3, #0
   4f360:	uxtb	r3, r3
   4f364:	cmp	r3, #0
   4f368:	beq	4f498 <__assert_fail@plt+0x3cdac>
   4f36c:	mov	r3, #0
   4f370:	b	4f4d8 <__assert_fail@plt+0x3cdec>
   4f374:	ldr	r3, [fp, #8]
   4f378:	str	r3, [sp, #4]
   4f37c:	ldr	r3, [fp, #4]
   4f380:	str	r3, [sp]
   4f384:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4f388:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4f38c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4f390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4f394:	bl	4f4ec <__assert_fail@plt+0x3ce00>
   4f398:	str	r0, [fp, #-16]
   4f39c:	ldr	r3, [fp, #8]
   4f3a0:	ldr	r3, [r3]
   4f3a4:	cmp	r3, #0
   4f3a8:	movne	r3, #1
   4f3ac:	moveq	r3, #0
   4f3b0:	uxtb	r3, r3
   4f3b4:	cmp	r3, #0
   4f3b8:	beq	4f400 <__assert_fail@plt+0x3cd14>
   4f3bc:	ldr	r3, [fp, #-16]
   4f3c0:	cmp	r3, #0
   4f3c4:	moveq	r3, #1
   4f3c8:	movne	r3, #0
   4f3cc:	uxtb	r3, r3
   4f3d0:	cmp	r3, #0
   4f3d4:	beq	4f400 <__assert_fail@plt+0x3cd14>
   4f3d8:	ldr	r3, [fp, #-8]
   4f3dc:	cmp	r3, #0
   4f3e0:	beq	4f3f8 <__assert_fail@plt+0x3cd0c>
   4f3e4:	mov	r2, #0
   4f3e8:	movw	r1, #11980	; 0x2ecc
   4f3ec:	movt	r1, #5
   4f3f0:	ldr	r0, [fp, #-8]
   4f3f4:	bl	4c48c <__assert_fail@plt+0x39da0>
   4f3f8:	mov	r3, #0
   4f3fc:	b	4f4d8 <__assert_fail@plt+0x3cdec>
   4f400:	ldr	r3, [fp, #-8]
   4f404:	cmp	r3, #0
   4f408:	beq	4f484 <__assert_fail@plt+0x3cd98>
   4f40c:	ldr	r3, [fp, #-16]
   4f410:	cmp	r3, #0
   4f414:	beq	4f484 <__assert_fail@plt+0x3cd98>
   4f418:	mov	r3, #16
   4f41c:	ldr	r2, [fp, #-16]
   4f420:	ldr	r1, [fp, #-8]
   4f424:	ldr	r0, [fp, #-12]
   4f428:	bl	52be4 <__assert_fail@plt+0x404f8>
   4f42c:	str	r0, [fp, #-20]	; 0xffffffec
   4f430:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f434:	cmp	r3, #0
   4f438:	bne	4f478 <__assert_fail@plt+0x3cd8c>
   4f43c:	mov	r2, #0
   4f440:	movw	r1, #11980	; 0x2ecc
   4f444:	movt	r1, #5
   4f448:	ldr	r0, [fp, #-16]
   4f44c:	bl	4c48c <__assert_fail@plt+0x39da0>
   4f450:	mov	r2, #0
   4f454:	movw	r1, #11980	; 0x2ecc
   4f458:	movt	r1, #5
   4f45c:	ldr	r0, [fp, #-8]
   4f460:	bl	4c48c <__assert_fail@plt+0x39da0>
   4f464:	ldr	r3, [fp, #8]
   4f468:	mov	r2, #12
   4f46c:	str	r2, [r3]
   4f470:	mov	r3, #0
   4f474:	b	4f4d8 <__assert_fail@plt+0x3cdec>
   4f478:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f47c:	str	r3, [fp, #-8]
   4f480:	b	4f498 <__assert_fail@plt+0x3cdac>
   4f484:	ldr	r3, [fp, #-8]
   4f488:	cmp	r3, #0
   4f48c:	bne	4f498 <__assert_fail@plt+0x3cdac>
   4f490:	ldr	r3, [fp, #-16]
   4f494:	str	r3, [fp, #-8]
   4f498:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f49c:	ldrb	r3, [r3, #4]
   4f4a0:	cmp	r3, #10
   4f4a4:	beq	4f4d4 <__assert_fail@plt+0x3cde8>
   4f4a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f4ac:	ldrb	r3, [r3, #4]
   4f4b0:	cmp	r3, #2
   4f4b4:	beq	4f4d4 <__assert_fail@plt+0x3cde8>
   4f4b8:	ldr	r3, [fp, #4]
   4f4bc:	cmp	r3, #0
   4f4c0:	beq	4f374 <__assert_fail@plt+0x3cc88>
   4f4c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f4c8:	ldrb	r3, [r3, #4]
   4f4cc:	cmp	r3, #9
   4f4d0:	bne	4f374 <__assert_fail@plt+0x3cc88>
   4f4d4:	ldr	r3, [fp, #-8]
   4f4d8:	mov	r0, r3
   4f4dc:	sub	sp, fp, #4
   4f4e0:	ldr	fp, [sp]
   4f4e4:	add	sp, sp, #4
   4f4e8:	pop	{pc}		; (ldr pc, [sp], #4)
   4f4ec:	str	fp, [sp, #-8]!
   4f4f0:	str	lr, [sp, #4]
   4f4f4:	add	fp, sp, #4
   4f4f8:	sub	sp, sp, #48	; 0x30
   4f4fc:	str	r0, [fp, #-32]	; 0xffffffe0
   4f500:	str	r1, [fp, #-36]	; 0xffffffdc
   4f504:	str	r2, [fp, #-40]	; 0xffffffd8
   4f508:	str	r3, [fp, #-44]	; 0xffffffd4
   4f50c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4f510:	ldr	r3, [r3]
   4f514:	str	r3, [fp, #-16]
   4f518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f51c:	ldrb	r3, [r3, #4]
   4f520:	sub	r3, r3, #1
   4f524:	cmp	r3, #35	; 0x23
   4f528:	ldrls	pc, [pc, r3, lsl #2]
   4f52c:	b	4fd24 <__assert_fail@plt+0x3d638>
   4f530:	andeq	pc, r4, r0, asr #11
   4f534:	andeq	pc, r4, ip, lsl sp	; <UNPREDICTABLE>
   4f538:	andeq	pc, r4, r4, lsr #26
   4f53c:	ldrdeq	pc, [r4], -r4
   4f540:	muleq	r4, r8, fp
   4f544:	andeq	pc, r4, r4, lsr #26
   4f548:	andeq	pc, r4, r4, lsr #26
   4f54c:	andeq	pc, r4, r0, lsl #14
   4f550:	andeq	pc, r4, r4, lsr r9	; <UNPREDICTABLE>
   4f554:	andeq	pc, r4, ip, lsl sp	; <UNPREDICTABLE>
   4f558:	andeq	pc, r4, r4, asr #17
   4f55c:			; <UNDEFINED> instruction: 0x0004f9bc
   4f560:	andeq	pc, r4, r4, lsr #26
   4f564:	andeq	pc, r4, r4, lsr #26
   4f568:	andeq	pc, r4, r4, lsr #26
   4f56c:	andeq	pc, r4, r4, lsr #26
   4f570:	andeq	pc, r4, r4, lsr #26
   4f574:	andeq	pc, r4, r4, asr #17
   4f578:	andeq	pc, r4, r4, asr #17
   4f57c:	andeq	pc, r4, r0, ror r7	; <UNPREDICTABLE>
   4f580:	andeq	pc, r4, r4, lsr #26
   4f584:	andeq	pc, r4, r4, lsr #26
   4f588:	andeq	pc, r4, r0, lsr #17
   4f58c:	andeq	pc, r4, r8, ror #18
   4f590:	andeq	pc, r4, r4, lsr #26
   4f594:	andeq	pc, r4, r4, lsr #26
   4f598:	andeq	pc, r4, r4, lsr #26
   4f59c:	andeq	pc, r4, r4, lsr #26
   4f5a0:	andeq	pc, r4, r4, lsr #26
   4f5a4:	andeq	pc, r4, r4, lsr #26
   4f5a8:	andeq	pc, r4, r4, lsr #26
   4f5ac:	andeq	pc, r4, r4, lsl #24
   4f5b0:	andeq	pc, r4, r4, lsl #24
   4f5b4:	muleq	r4, r0, ip
   4f5b8:	muleq	r4, r0, ip
   4f5bc:	andeq	pc, r4, r4, lsr #26
   4f5c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f5c4:	mov	r2, #0
   4f5c8:	mov	r1, #0
   4f5cc:	ldr	r0, [fp, #-16]
   4f5d0:	bl	52c4c <__assert_fail@plt+0x40560>
   4f5d4:	str	r0, [fp, #-8]
   4f5d8:	ldr	r3, [fp, #-8]
   4f5dc:	cmp	r3, #0
   4f5e0:	moveq	r3, #1
   4f5e4:	movne	r3, #0
   4f5e8:	uxtb	r3, r3
   4f5ec:	cmp	r3, #0
   4f5f0:	beq	4f608 <__assert_fail@plt+0x3cf1c>
   4f5f4:	ldr	r3, [fp, #8]
   4f5f8:	mov	r2, #12
   4f5fc:	str	r2, [r3]
   4f600:	mov	r3, #0
   4f604:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f608:	ldr	r3, [fp, #-16]
   4f60c:	ldr	r3, [r3, #92]	; 0x5c
   4f610:	cmp	r3, #1
   4f614:	ble	4fd38 <__assert_fail@plt+0x3d64c>
   4f618:	b	4f6a8 <__assert_fail@plt+0x3cfbc>
   4f61c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4f620:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4f624:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4f628:	bl	4df2c <__assert_fail@plt+0x3b840>
   4f62c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f630:	mov	r2, #0
   4f634:	mov	r1, #0
   4f638:	ldr	r0, [fp, #-16]
   4f63c:	bl	52c4c <__assert_fail@plt+0x40560>
   4f640:	str	r0, [fp, #-20]	; 0xffffffec
   4f644:	mov	r3, #16
   4f648:	ldr	r2, [fp, #-20]	; 0xffffffec
   4f64c:	ldr	r1, [fp, #-8]
   4f650:	ldr	r0, [fp, #-16]
   4f654:	bl	52be4 <__assert_fail@plt+0x404f8>
   4f658:	str	r0, [fp, #-8]
   4f65c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4f660:	cmp	r3, #0
   4f664:	moveq	r3, #1
   4f668:	movne	r3, #0
   4f66c:	uxtb	r3, r3
   4f670:	cmp	r3, #0
   4f674:	bne	4f694 <__assert_fail@plt+0x3cfa8>
   4f678:	ldr	r3, [fp, #-8]
   4f67c:	cmp	r3, #0
   4f680:	moveq	r3, #1
   4f684:	movne	r3, #0
   4f688:	uxtb	r3, r3
   4f68c:	cmp	r3, #0
   4f690:	beq	4f6a8 <__assert_fail@plt+0x3cfbc>
   4f694:	ldr	r3, [fp, #8]
   4f698:	mov	r2, #12
   4f69c:	str	r2, [r3]
   4f6a0:	mov	r3, #0
   4f6a4:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f6a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f6ac:	ldr	r2, [r3, #56]	; 0x38
   4f6b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f6b4:	ldr	r3, [r3, #40]	; 0x28
   4f6b8:	cmp	r2, r3
   4f6bc:	ble	4fd38 <__assert_fail@plt+0x3d64c>
   4f6c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f6c4:	ldr	r2, [r3, #40]	; 0x28
   4f6c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f6cc:	ldr	r3, [r3, #28]
   4f6d0:	cmp	r2, r3
   4f6d4:	beq	4fd38 <__assert_fail@plt+0x3d64c>
   4f6d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f6dc:	ldr	r2, [r3, #8]
   4f6e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4f6e4:	ldr	r3, [r3, #40]	; 0x28
   4f6e8:	lsl	r3, r3, #2
   4f6ec:	add	r3, r2, r3
   4f6f0:	ldr	r3, [r3]
   4f6f4:	cmn	r3, #1
   4f6f8:	beq	4f61c <__assert_fail@plt+0x3cf30>
   4f6fc:	b	4fd38 <__assert_fail@plt+0x3d64c>
   4f700:	ldr	r3, [fp, #4]
   4f704:	add	r3, r3, #1
   4f708:	ldr	r2, [fp, #8]
   4f70c:	str	r2, [sp, #4]
   4f710:	str	r3, [sp]
   4f714:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f718:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f71c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4f720:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f724:	bl	4fed0 <__assert_fail@plt+0x3d7e4>
   4f728:	str	r0, [fp, #-8]
   4f72c:	ldr	r3, [fp, #8]
   4f730:	ldr	r3, [r3]
   4f734:	cmp	r3, #0
   4f738:	movne	r3, #1
   4f73c:	moveq	r3, #0
   4f740:	uxtb	r3, r3
   4f744:	cmp	r3, #0
   4f748:	beq	4fd40 <__assert_fail@plt+0x3d654>
   4f74c:	ldr	r3, [fp, #-8]
   4f750:	cmp	r3, #0
   4f754:	moveq	r3, #1
   4f758:	movne	r3, #0
   4f75c:	uxtb	r3, r3
   4f760:	cmp	r3, #0
   4f764:	beq	4fd40 <__assert_fail@plt+0x3d654>
   4f768:	mov	r3, #0
   4f76c:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f770:	ldr	r3, [fp, #8]
   4f774:	str	r3, [sp]
   4f778:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f77c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f780:	ldr	r1, [fp, #-16]
   4f784:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f788:	bl	50c90 <__assert_fail@plt+0x3e5a4>
   4f78c:	str	r0, [fp, #-8]
   4f790:	ldr	r3, [fp, #8]
   4f794:	ldr	r3, [r3]
   4f798:	cmp	r3, #0
   4f79c:	movne	r3, #1
   4f7a0:	moveq	r3, #0
   4f7a4:	uxtb	r3, r3
   4f7a8:	cmp	r3, #0
   4f7ac:	beq	4fd48 <__assert_fail@plt+0x3d65c>
   4f7b0:	ldr	r3, [fp, #-8]
   4f7b4:	cmp	r3, #0
   4f7b8:	moveq	r3, #1
   4f7bc:	movne	r3, #0
   4f7c0:	uxtb	r3, r3
   4f7c4:	cmp	r3, #0
   4f7c8:	beq	4fd48 <__assert_fail@plt+0x3d65c>
   4f7cc:	mov	r3, #0
   4f7d0:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f7d4:	ldr	r3, [fp, #-16]
   4f7d8:	ldr	r3, [r3, #84]	; 0x54
   4f7dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f7e0:	ldr	r2, [r2]
   4f7e4:	mov	r1, #1
   4f7e8:	lsl	r2, r1, r2
   4f7ec:	and	r3, r3, r2
   4f7f0:	cmp	r3, #0
   4f7f4:	bne	4f80c <__assert_fail@plt+0x3d120>
   4f7f8:	ldr	r3, [fp, #8]
   4f7fc:	mov	r2, #6
   4f800:	str	r2, [r3]
   4f804:	mov	r3, #0
   4f808:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f80c:	ldr	r3, [fp, #-16]
   4f810:	ldr	r3, [r3, #80]	; 0x50
   4f814:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f818:	ldr	r2, [r2]
   4f81c:	mov	r1, #1
   4f820:	lsl	r2, r1, r2
   4f824:	orr	r2, r3, r2
   4f828:	ldr	r3, [fp, #-16]
   4f82c:	str	r2, [r3, #80]	; 0x50
   4f830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f834:	mov	r2, #0
   4f838:	mov	r1, #0
   4f83c:	ldr	r0, [fp, #-16]
   4f840:	bl	52c4c <__assert_fail@plt+0x40560>
   4f844:	str	r0, [fp, #-8]
   4f848:	ldr	r3, [fp, #-8]
   4f84c:	cmp	r3, #0
   4f850:	moveq	r3, #1
   4f854:	movne	r3, #0
   4f858:	uxtb	r3, r3
   4f85c:	cmp	r3, #0
   4f860:	beq	4f878 <__assert_fail@plt+0x3d18c>
   4f864:	ldr	r3, [fp, #8]
   4f868:	mov	r2, #12
   4f86c:	str	r2, [r3]
   4f870:	mov	r3, #0
   4f874:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f878:	ldr	r3, [fp, #-16]
   4f87c:	ldr	r3, [r3, #76]	; 0x4c
   4f880:	add	r2, r3, #1
   4f884:	ldr	r3, [fp, #-16]
   4f888:	str	r2, [r3, #76]	; 0x4c
   4f88c:	ldr	r2, [fp, #-16]
   4f890:	ldrb	r3, [r2, #88]	; 0x58
   4f894:	orr	r3, r3, #2
   4f898:	strb	r3, [r2, #88]	; 0x58
   4f89c:	b	4fd6c <__assert_fail@plt+0x3d680>
   4f8a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f8a4:	and	r3, r3, #16777216	; 0x1000000
   4f8a8:	cmp	r3, #0
   4f8ac:	beq	4f8c4 <__assert_fail@plt+0x3d1d8>
   4f8b0:	ldr	r3, [fp, #8]
   4f8b4:	mov	r2, #13
   4f8b8:	str	r2, [r3]
   4f8bc:	mov	r3, #0
   4f8c0:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f8c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f8c8:	and	r3, r3, #32
   4f8cc:	cmp	r3, #0
   4f8d0:	beq	4f8e8 <__assert_fail@plt+0x3d1fc>
   4f8d4:	ldr	r3, [fp, #8]
   4f8d8:	mov	r2, #13
   4f8dc:	str	r2, [r3]
   4f8e0:	mov	r3, #0
   4f8e4:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f8e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f8ec:	and	r3, r3, #16
   4f8f0:	cmp	r3, #0
   4f8f4:	beq	4f934 <__assert_fail@plt+0x3d248>
   4f8f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4f8fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4f900:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4f904:	bl	4df2c <__assert_fail@plt+0x3b840>
   4f908:	ldr	r3, [fp, #8]
   4f90c:	str	r3, [sp, #4]
   4f910:	ldr	r3, [fp, #4]
   4f914:	str	r3, [sp]
   4f918:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f91c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   4f920:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4f924:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4f928:	bl	4f4ec <__assert_fail@plt+0x3ce00>
   4f92c:	mov	r3, r0
   4f930:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f934:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f938:	ldrb	r3, [r3, #4]
   4f93c:	cmp	r3, #9
   4f940:	bne	4f968 <__assert_fail@plt+0x3d27c>
   4f944:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4f948:	and	r3, r3, #131072	; 0x20000
   4f94c:	cmp	r3, #0
   4f950:	bne	4f968 <__assert_fail@plt+0x3d27c>
   4f954:	ldr	r3, [fp, #8]
   4f958:	mov	r2, #16
   4f95c:	str	r2, [r3]
   4f960:	mov	r3, #0
   4f964:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f968:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f96c:	mov	r2, #1
   4f970:	strb	r2, [r3, #4]
   4f974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f978:	mov	r2, #0
   4f97c:	mov	r1, #0
   4f980:	ldr	r0, [fp, #-16]
   4f984:	bl	52c4c <__assert_fail@plt+0x40560>
   4f988:	str	r0, [fp, #-8]
   4f98c:	ldr	r3, [fp, #-8]
   4f990:	cmp	r3, #0
   4f994:	moveq	r3, #1
   4f998:	movne	r3, #0
   4f99c:	uxtb	r3, r3
   4f9a0:	cmp	r3, #0
   4f9a4:	beq	4fd50 <__assert_fail@plt+0x3d664>
   4f9a8:	ldr	r3, [fp, #8]
   4f9ac:	mov	r2, #12
   4f9b0:	str	r2, [r3]
   4f9b4:	mov	r3, #0
   4f9b8:	b	4febc <__assert_fail@plt+0x3d7d0>
   4f9bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f9c0:	ldr	r2, [r3]
   4f9c4:	movw	r3, #783	; 0x30f
   4f9c8:	and	r3, r3, r2
   4f9cc:	cmp	r3, #0
   4f9d0:	beq	4f9f4 <__assert_fail@plt+0x3d308>
   4f9d4:	ldr	r3, [fp, #-16]
   4f9d8:	ldrb	r3, [r3, #88]	; 0x58
   4f9dc:	and	r3, r3, #16
   4f9e0:	uxtb	r3, r3
   4f9e4:	cmp	r3, #0
   4f9e8:	bne	4f9f4 <__assert_fail@plt+0x3d308>
   4f9ec:	ldr	r0, [fp, #-16]
   4f9f0:	bl	4b67c <__assert_fail@plt+0x38f90>
   4f9f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4f9f8:	ldr	r3, [r3]
   4f9fc:	cmp	r3, #256	; 0x100
   4fa00:	beq	4fa14 <__assert_fail@plt+0x3d328>
   4fa04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa08:	ldr	r3, [r3]
   4fa0c:	cmp	r3, #512	; 0x200
   4fa10:	bne	4fb34 <__assert_fail@plt+0x3d448>
   4fa14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa18:	ldr	r3, [r3]
   4fa1c:	cmp	r3, #256	; 0x100
   4fa20:	bne	4fa58 <__assert_fail@plt+0x3d36c>
   4fa24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa28:	mov	r2, #6
   4fa2c:	str	r2, [r3]
   4fa30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa34:	mov	r2, #0
   4fa38:	mov	r1, #0
   4fa3c:	ldr	r0, [fp, #-16]
   4fa40:	bl	52c4c <__assert_fail@plt+0x40560>
   4fa44:	str	r0, [fp, #-12]
   4fa48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa4c:	mov	r2, #9
   4fa50:	str	r2, [r3]
   4fa54:	b	4fa88 <__assert_fail@plt+0x3d39c>
   4fa58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa5c:	mov	r2, #5
   4fa60:	str	r2, [r3]
   4fa64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa68:	mov	r2, #0
   4fa6c:	mov	r1, #0
   4fa70:	ldr	r0, [fp, #-16]
   4fa74:	bl	52c4c <__assert_fail@plt+0x40560>
   4fa78:	str	r0, [fp, #-12]
   4fa7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa80:	mov	r2, #10
   4fa84:	str	r2, [r3]
   4fa88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fa8c:	mov	r2, #0
   4fa90:	mov	r1, #0
   4fa94:	ldr	r0, [fp, #-16]
   4fa98:	bl	52c4c <__assert_fail@plt+0x40560>
   4fa9c:	str	r0, [fp, #-24]	; 0xffffffe8
   4faa0:	mov	r3, #10
   4faa4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4faa8:	ldr	r1, [fp, #-12]
   4faac:	ldr	r0, [fp, #-16]
   4fab0:	bl	52be4 <__assert_fail@plt+0x404f8>
   4fab4:	str	r0, [fp, #-8]
   4fab8:	ldr	r3, [fp, #-12]
   4fabc:	cmp	r3, #0
   4fac0:	moveq	r3, #1
   4fac4:	movne	r3, #0
   4fac8:	uxtb	r3, r3
   4facc:	cmp	r3, #0
   4fad0:	bne	4faf0 <__assert_fail@plt+0x3d404>
   4fad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4fad8:	cmp	r3, #0
   4fadc:	moveq	r3, #1
   4fae0:	movne	r3, #0
   4fae4:	uxtb	r3, r3
   4fae8:	cmp	r3, #0
   4faec:	beq	4faf8 <__assert_fail@plt+0x3d40c>
   4faf0:	mov	r3, #1
   4faf4:	b	4fafc <__assert_fail@plt+0x3d410>
   4faf8:	mov	r3, #0
   4fafc:	cmp	r3, #0
   4fb00:	bne	4fb20 <__assert_fail@plt+0x3d434>
   4fb04:	ldr	r3, [fp, #-8]
   4fb08:	cmp	r3, #0
   4fb0c:	moveq	r3, #1
   4fb10:	movne	r3, #0
   4fb14:	uxtb	r3, r3
   4fb18:	cmp	r3, #0
   4fb1c:	beq	4fb7c <__assert_fail@plt+0x3d490>
   4fb20:	ldr	r3, [fp, #8]
   4fb24:	mov	r2, #12
   4fb28:	str	r2, [r3]
   4fb2c:	mov	r3, #0
   4fb30:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fb34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fb38:	mov	r2, #0
   4fb3c:	mov	r1, #0
   4fb40:	ldr	r0, [fp, #-16]
   4fb44:	bl	52c4c <__assert_fail@plt+0x40560>
   4fb48:	str	r0, [fp, #-8]
   4fb4c:	ldr	r3, [fp, #-8]
   4fb50:	cmp	r3, #0
   4fb54:	moveq	r3, #1
   4fb58:	movne	r3, #0
   4fb5c:	uxtb	r3, r3
   4fb60:	cmp	r3, #0
   4fb64:	beq	4fb80 <__assert_fail@plt+0x3d494>
   4fb68:	ldr	r3, [fp, #8]
   4fb6c:	mov	r2, #12
   4fb70:	str	r2, [r3]
   4fb74:	mov	r3, #0
   4fb78:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fb7c:	nop	{0}
   4fb80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4fb84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4fb88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4fb8c:	bl	4df2c <__assert_fail@plt+0x3b840>
   4fb90:	ldr	r3, [fp, #-8]
   4fb94:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fb98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fb9c:	mov	r2, #0
   4fba0:	mov	r1, #0
   4fba4:	ldr	r0, [fp, #-16]
   4fba8:	bl	52c4c <__assert_fail@plt+0x40560>
   4fbac:	str	r0, [fp, #-8]
   4fbb0:	ldr	r3, [fp, #-8]
   4fbb4:	cmp	r3, #0
   4fbb8:	moveq	r3, #1
   4fbbc:	movne	r3, #0
   4fbc0:	uxtb	r3, r3
   4fbc4:	cmp	r3, #0
   4fbc8:	beq	4fbe0 <__assert_fail@plt+0x3d4f4>
   4fbcc:	ldr	r3, [fp, #8]
   4fbd0:	mov	r2, #12
   4fbd4:	str	r2, [r3]
   4fbd8:	mov	r3, #0
   4fbdc:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fbe0:	ldr	r3, [fp, #-16]
   4fbe4:	ldr	r3, [r3, #92]	; 0x5c
   4fbe8:	cmp	r3, #1
   4fbec:	ble	4fd58 <__assert_fail@plt+0x3d66c>
   4fbf0:	ldr	r2, [fp, #-16]
   4fbf4:	ldrb	r3, [r2, #88]	; 0x58
   4fbf8:	orr	r3, r3, #2
   4fbfc:	strb	r3, [r2, #88]	; 0x58
   4fc00:	b	4fd58 <__assert_fail@plt+0x3d66c>
   4fc04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4fc08:	ldr	r1, [r3, #64]	; 0x40
   4fc0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fc10:	ldrb	r3, [r3, #4]
   4fc14:	cmp	r3, #33	; 0x21
   4fc18:	moveq	r3, #1
   4fc1c:	movne	r3, #0
   4fc20:	uxtb	r3, r3
   4fc24:	ldr	r2, [fp, #8]
   4fc28:	str	r2, [sp, #4]
   4fc2c:	str	r3, [sp]
   4fc30:	movw	r3, #47852	; 0xbaec
   4fc34:	movt	r3, #6
   4fc38:	movw	r2, #47856	; 0xbaf0
   4fc3c:	movt	r2, #6
   4fc40:	ldr	r0, [fp, #-16]
   4fc44:	bl	52764 <__assert_fail@plt+0x40078>
   4fc48:	str	r0, [fp, #-8]
   4fc4c:	ldr	r3, [fp, #8]
   4fc50:	ldr	r3, [r3]
   4fc54:	cmp	r3, #0
   4fc58:	movne	r3, #1
   4fc5c:	moveq	r3, #0
   4fc60:	uxtb	r3, r3
   4fc64:	cmp	r3, #0
   4fc68:	beq	4fd60 <__assert_fail@plt+0x3d674>
   4fc6c:	ldr	r3, [fp, #-8]
   4fc70:	cmp	r3, #0
   4fc74:	moveq	r3, #1
   4fc78:	movne	r3, #0
   4fc7c:	uxtb	r3, r3
   4fc80:	cmp	r3, #0
   4fc84:	beq	4fd60 <__assert_fail@plt+0x3d674>
   4fc88:	mov	r3, #0
   4fc8c:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fc90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4fc94:	ldr	r1, [r3, #64]	; 0x40
   4fc98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fc9c:	ldrb	r3, [r3, #4]
   4fca0:	cmp	r3, #35	; 0x23
   4fca4:	moveq	r3, #1
   4fca8:	movne	r3, #0
   4fcac:	uxtb	r3, r3
   4fcb0:	ldr	r2, [fp, #8]
   4fcb4:	str	r2, [sp, #4]
   4fcb8:	str	r3, [sp]
   4fcbc:	movw	r3, #47864	; 0xbaf8
   4fcc0:	movt	r3, #6
   4fcc4:	movw	r2, #47868	; 0xbafc
   4fcc8:	movt	r2, #6
   4fccc:	ldr	r0, [fp, #-16]
   4fcd0:	bl	52764 <__assert_fail@plt+0x40078>
   4fcd4:	str	r0, [fp, #-8]
   4fcd8:	ldr	r3, [fp, #8]
   4fcdc:	ldr	r3, [r3]
   4fce0:	cmp	r3, #0
   4fce4:	movne	r3, #1
   4fce8:	moveq	r3, #0
   4fcec:	uxtb	r3, r3
   4fcf0:	cmp	r3, #0
   4fcf4:	beq	4fd68 <__assert_fail@plt+0x3d67c>
   4fcf8:	ldr	r3, [fp, #-8]
   4fcfc:	cmp	r3, #0
   4fd00:	moveq	r3, #1
   4fd04:	movne	r3, #0
   4fd08:	uxtb	r3, r3
   4fd0c:	cmp	r3, #0
   4fd10:	beq	4fd68 <__assert_fail@plt+0x3d67c>
   4fd14:	mov	r3, #0
   4fd18:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fd1c:	mov	r3, #0
   4fd20:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fd24:	ldr	r3, [fp, #8]
   4fd28:	mov	r2, #5
   4fd2c:	str	r2, [r3]
   4fd30:	mov	r3, #0
   4fd34:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fd38:	nop	{0}
   4fd3c:	b	4fd6c <__assert_fail@plt+0x3d680>
   4fd40:	nop	{0}
   4fd44:	b	4fd6c <__assert_fail@plt+0x3d680>
   4fd48:	nop	{0}
   4fd4c:	b	4fd6c <__assert_fail@plt+0x3d680>
   4fd50:	nop	{0}
   4fd54:	b	4fd6c <__assert_fail@plt+0x3d680>
   4fd58:	nop	{0}
   4fd5c:	b	4fd6c <__assert_fail@plt+0x3d680>
   4fd60:	nop	{0}
   4fd64:	b	4fd6c <__assert_fail@plt+0x3d680>
   4fd68:	nop	{0}
   4fd6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4fd70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4fd74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   4fd78:	bl	4df2c <__assert_fail@plt+0x3b840>
   4fd7c:	b	4fe78 <__assert_fail@plt+0x3d78c>
   4fd80:	ldr	r3, [fp, #8]
   4fd84:	str	r3, [sp, #4]
   4fd88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4fd8c:	str	r3, [sp]
   4fd90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fd94:	ldr	r2, [fp, #-16]
   4fd98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4fd9c:	ldr	r0, [fp, #-8]
   4fda0:	bl	5009c <__assert_fail@plt+0x3d9b0>
   4fda4:	str	r0, [fp, #-28]	; 0xffffffe4
   4fda8:	ldr	r3, [fp, #8]
   4fdac:	ldr	r3, [r3]
   4fdb0:	cmp	r3, #0
   4fdb4:	movne	r3, #1
   4fdb8:	moveq	r3, #0
   4fdbc:	uxtb	r3, r3
   4fdc0:	cmp	r3, #0
   4fdc4:	beq	4fe0c <__assert_fail@plt+0x3d720>
   4fdc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4fdcc:	cmp	r3, #0
   4fdd0:	moveq	r3, #1
   4fdd4:	movne	r3, #0
   4fdd8:	uxtb	r3, r3
   4fddc:	cmp	r3, #0
   4fde0:	beq	4fe0c <__assert_fail@plt+0x3d720>
   4fde4:	ldr	r3, [fp, #-8]
   4fde8:	cmp	r3, #0
   4fdec:	beq	4fe04 <__assert_fail@plt+0x3d718>
   4fdf0:	mov	r2, #0
   4fdf4:	movw	r1, #11980	; 0x2ecc
   4fdf8:	movt	r1, #5
   4fdfc:	ldr	r0, [fp, #-8]
   4fe00:	bl	4c48c <__assert_fail@plt+0x39da0>
   4fe04:	mov	r3, #0
   4fe08:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fe0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4fe10:	str	r3, [fp, #-8]
   4fe14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   4fe18:	and	r3, r3, #16777216	; 0x1000000
   4fe1c:	cmp	r3, #0
   4fe20:	beq	4fe78 <__assert_fail@plt+0x3d78c>
   4fe24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fe28:	ldrb	r3, [r3, #4]
   4fe2c:	cmp	r3, #11
   4fe30:	beq	4fe44 <__assert_fail@plt+0x3d758>
   4fe34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fe38:	ldrb	r3, [r3, #4]
   4fe3c:	cmp	r3, #23
   4fe40:	bne	4fe78 <__assert_fail@plt+0x3d78c>
   4fe44:	ldr	r3, [fp, #-8]
   4fe48:	cmp	r3, #0
   4fe4c:	beq	4fe64 <__assert_fail@plt+0x3d778>
   4fe50:	mov	r2, #0
   4fe54:	movw	r1, #11980	; 0x2ecc
   4fe58:	movt	r1, #5
   4fe5c:	ldr	r0, [fp, #-8]
   4fe60:	bl	4c48c <__assert_fail@plt+0x39da0>
   4fe64:	ldr	r3, [fp, #8]
   4fe68:	mov	r2, #13
   4fe6c:	str	r2, [r3]
   4fe70:	mov	r3, #0
   4fe74:	b	4febc <__assert_fail@plt+0x3d7d0>
   4fe78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fe7c:	ldrb	r3, [r3, #4]
   4fe80:	cmp	r3, #11
   4fe84:	beq	4fd80 <__assert_fail@plt+0x3d694>
   4fe88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fe8c:	ldrb	r3, [r3, #4]
   4fe90:	cmp	r3, #18
   4fe94:	beq	4fd80 <__assert_fail@plt+0x3d694>
   4fe98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4fe9c:	ldrb	r3, [r3, #4]
   4fea0:	cmp	r3, #19
   4fea4:	beq	4fd80 <__assert_fail@plt+0x3d694>
   4fea8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4feac:	ldrb	r3, [r3, #4]
   4feb0:	cmp	r3, #23
   4feb4:	beq	4fd80 <__assert_fail@plt+0x3d694>
   4feb8:	ldr	r3, [fp, #-8]
   4febc:	mov	r0, r3
   4fec0:	sub	sp, fp, #4
   4fec4:	ldr	fp, [sp]
   4fec8:	add	sp, sp, #4
   4fecc:	pop	{pc}		; (ldr pc, [sp], #4)
   4fed0:	str	fp, [sp, #-8]!
   4fed4:	str	lr, [sp, #4]
   4fed8:	add	fp, sp, #4
   4fedc:	sub	sp, sp, #40	; 0x28
   4fee0:	str	r0, [fp, #-24]	; 0xffffffe8
   4fee4:	str	r1, [fp, #-28]	; 0xffffffe4
   4fee8:	str	r2, [fp, #-32]	; 0xffffffe0
   4feec:	str	r3, [fp, #-36]	; 0xffffffdc
   4fef0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4fef4:	ldr	r3, [r3]
   4fef8:	str	r3, [fp, #-12]
   4fefc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4ff00:	ldr	r3, [r3, #24]
   4ff04:	add	r1, r3, #1
   4ff08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   4ff0c:	str	r1, [r2, #24]
   4ff10:	str	r3, [fp, #-16]
   4ff14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ff18:	orr	r3, r3, #8388608	; 0x800000
   4ff1c:	mov	r2, r3
   4ff20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4ff24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   4ff28:	bl	4df2c <__assert_fail@plt+0x3b840>
   4ff2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ff30:	ldrb	r3, [r3, #4]
   4ff34:	cmp	r3, #9
   4ff38:	bne	4ff48 <__assert_fail@plt+0x3d85c>
   4ff3c:	mov	r3, #0
   4ff40:	str	r3, [fp, #-8]
   4ff44:	b	50004 <__assert_fail@plt+0x3d918>
   4ff48:	ldr	r3, [fp, #8]
   4ff4c:	str	r3, [sp, #4]
   4ff50:	ldr	r3, [fp, #4]
   4ff54:	str	r3, [sp]
   4ff58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4ff5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   4ff60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4ff64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   4ff68:	bl	4f0a4 <__assert_fail@plt+0x3c9b8>
   4ff6c:	str	r0, [fp, #-8]
   4ff70:	ldr	r3, [fp, #8]
   4ff74:	ldr	r3, [r3]
   4ff78:	cmp	r3, #0
   4ff7c:	moveq	r3, #1
   4ff80:	movne	r3, #0
   4ff84:	uxtb	r3, r3
   4ff88:	cmp	r3, #0
   4ff8c:	beq	4ffdc <__assert_fail@plt+0x3d8f0>
   4ff90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4ff94:	ldrb	r3, [r3, #4]
   4ff98:	cmp	r3, #9
   4ff9c:	movne	r3, #1
   4ffa0:	moveq	r3, #0
   4ffa4:	uxtb	r3, r3
   4ffa8:	cmp	r3, #0
   4ffac:	beq	4ffdc <__assert_fail@plt+0x3d8f0>
   4ffb0:	ldr	r3, [fp, #-8]
   4ffb4:	cmp	r3, #0
   4ffb8:	beq	4ffd0 <__assert_fail@plt+0x3d8e4>
   4ffbc:	mov	r2, #0
   4ffc0:	movw	r1, #11980	; 0x2ecc
   4ffc4:	movt	r1, #5
   4ffc8:	ldr	r0, [fp, #-8]
   4ffcc:	bl	4c48c <__assert_fail@plt+0x39da0>
   4ffd0:	ldr	r3, [fp, #8]
   4ffd4:	mov	r2, #8
   4ffd8:	str	r2, [r3]
   4ffdc:	ldr	r3, [fp, #8]
   4ffe0:	ldr	r3, [r3]
   4ffe4:	cmp	r3, #0
   4ffe8:	movne	r3, #1
   4ffec:	moveq	r3, #0
   4fff0:	uxtb	r3, r3
   4fff4:	cmp	r3, #0
   4fff8:	beq	50004 <__assert_fail@plt+0x3d918>
   4fffc:	mov	r3, #0
   50000:	b	50088 <__assert_fail@plt+0x3d99c>
   50004:	ldr	r3, [fp, #-16]
   50008:	cmp	r3, #8
   5000c:	bhi	50030 <__assert_fail@plt+0x3d944>
   50010:	ldr	r3, [fp, #-12]
   50014:	ldr	r3, [r3, #84]	; 0x54
   50018:	mov	r1, #1
   5001c:	ldr	r2, [fp, #-16]
   50020:	lsl	r2, r1, r2
   50024:	orr	r2, r3, r2
   50028:	ldr	r3, [fp, #-12]
   5002c:	str	r2, [r3, #84]	; 0x54
   50030:	mov	r3, #17
   50034:	mov	r2, #0
   50038:	ldr	r1, [fp, #-8]
   5003c:	ldr	r0, [fp, #-12]
   50040:	bl	52be4 <__assert_fail@plt+0x404f8>
   50044:	str	r0, [fp, #-8]
   50048:	ldr	r3, [fp, #-8]
   5004c:	cmp	r3, #0
   50050:	moveq	r3, #1
   50054:	movne	r3, #0
   50058:	uxtb	r3, r3
   5005c:	cmp	r3, #0
   50060:	beq	50078 <__assert_fail@plt+0x3d98c>
   50064:	ldr	r3, [fp, #8]
   50068:	mov	r2, #12
   5006c:	str	r2, [r3]
   50070:	mov	r3, #0
   50074:	b	50088 <__assert_fail@plt+0x3d99c>
   50078:	ldr	r2, [fp, #-16]
   5007c:	ldr	r3, [fp, #-8]
   50080:	str	r2, [r3, #20]
   50084:	ldr	r3, [fp, #-8]
   50088:	mov	r0, r3
   5008c:	sub	sp, fp, #4
   50090:	ldr	fp, [sp]
   50094:	add	sp, sp, #4
   50098:	pop	{pc}		; (ldr pc, [sp], #4)
   5009c:	str	fp, [sp, #-8]!
   500a0:	str	lr, [sp, #4]
   500a4:	add	fp, sp, #4
   500a8:	sub	sp, sp, #56	; 0x38
   500ac:	str	r0, [fp, #-48]	; 0xffffffd0
   500b0:	str	r1, [fp, #-52]	; 0xffffffcc
   500b4:	str	r2, [fp, #-56]	; 0xffffffc8
   500b8:	str	r3, [fp, #-60]	; 0xffffffc4
   500bc:	mov	r3, #0
   500c0:	str	r3, [fp, #-8]
   500c4:	mov	r3, #0
   500c8:	str	r3, [fp, #-12]
   500cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   500d0:	ldr	r3, [r3, #40]	; 0x28
   500d4:	str	r3, [fp, #-28]	; 0xffffffe4
   500d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   500dc:	sub	r1, fp, #40	; 0x28
   500e0:	ldrd	r2, [r3]
   500e4:	strd	r2, [r1]
   500e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   500ec:	ldrb	r3, [r3, #4]
   500f0:	cmp	r3, #23
   500f4:	bne	50374 <__assert_fail@plt+0x3dc88>
   500f8:	mov	r3, #0
   500fc:	str	r3, [fp, #-24]	; 0xffffffe8
   50100:	ldr	r2, [fp, #4]
   50104:	ldr	r1, [fp, #-60]	; 0xffffffc4
   50108:	ldr	r0, [fp, #-52]	; 0xffffffcc
   5010c:	bl	52a48 <__assert_fail@plt+0x4035c>
   50110:	str	r0, [fp, #-20]	; 0xffffffec
   50114:	ldr	r3, [fp, #-20]	; 0xffffffec
   50118:	cmn	r3, #1
   5011c:	bne	50160 <__assert_fail@plt+0x3da74>
   50120:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50124:	ldrb	r3, [r3, #4]
   50128:	cmp	r3, #1
   5012c:	bne	5014c <__assert_fail@plt+0x3da60>
   50130:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50134:	ldrb	r3, [r3]
   50138:	cmp	r3, #44	; 0x2c
   5013c:	bne	5014c <__assert_fail@plt+0x3da60>
   50140:	mov	r3, #0
   50144:	str	r3, [fp, #-20]	; 0xffffffec
   50148:	b	50160 <__assert_fail@plt+0x3da74>
   5014c:	ldr	r3, [fp, #8]
   50150:	mov	r2, #10
   50154:	str	r2, [r3]
   50158:	mov	r3, #0
   5015c:	b	506d8 <__assert_fail@plt+0x3dfec>
   50160:	ldr	r3, [fp, #-20]	; 0xffffffec
   50164:	cmn	r3, #2
   50168:	movne	r3, #1
   5016c:	moveq	r3, #0
   50170:	uxtb	r3, r3
   50174:	cmp	r3, #0
   50178:	beq	501d4 <__assert_fail@plt+0x3dae8>
   5017c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50180:	ldrb	r3, [r3, #4]
   50184:	cmp	r3, #24
   50188:	beq	501cc <__assert_fail@plt+0x3dae0>
   5018c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50190:	ldrb	r3, [r3, #4]
   50194:	cmp	r3, #1
   50198:	bne	501c4 <__assert_fail@plt+0x3dad8>
   5019c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   501a0:	ldrb	r3, [r3]
   501a4:	cmp	r3, #44	; 0x2c
   501a8:	bne	501c4 <__assert_fail@plt+0x3dad8>
   501ac:	ldr	r2, [fp, #4]
   501b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   501b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   501b8:	bl	52a48 <__assert_fail@plt+0x4035c>
   501bc:	mov	r3, r0
   501c0:	b	501d0 <__assert_fail@plt+0x3dae4>
   501c4:	mvn	r3, #1
   501c8:	b	501d0 <__assert_fail@plt+0x3dae4>
   501cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   501d0:	str	r3, [fp, #-24]	; 0xffffffe8
   501d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   501d8:	cmn	r3, #2
   501dc:	moveq	r3, #1
   501e0:	movne	r3, #0
   501e4:	uxtb	r3, r3
   501e8:	cmp	r3, #0
   501ec:	bne	5020c <__assert_fail@plt+0x3db20>
   501f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   501f4:	cmn	r3, #2
   501f8:	moveq	r3, #1
   501fc:	movne	r3, #0
   50200:	uxtb	r3, r3
   50204:	cmp	r3, #0
   50208:	beq	50294 <__assert_fail@plt+0x3dba8>
   5020c:	ldr	r3, [fp, #4]
   50210:	and	r3, r3, #2097152	; 0x200000
   50214:	cmp	r3, #0
   50218:	moveq	r3, #1
   5021c:	movne	r3, #0
   50220:	uxtb	r3, r3
   50224:	cmp	r3, #0
   50228:	beq	50260 <__assert_fail@plt+0x3db74>
   5022c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50230:	ldrb	r3, [r3, #4]
   50234:	cmp	r3, #2
   50238:	bne	5024c <__assert_fail@plt+0x3db60>
   5023c:	ldr	r3, [fp, #8]
   50240:	mov	r2, #9
   50244:	str	r2, [r3]
   50248:	b	50258 <__assert_fail@plt+0x3db6c>
   5024c:	ldr	r3, [fp, #8]
   50250:	mov	r2, #10
   50254:	str	r2, [r3]
   50258:	mov	r3, #0
   5025c:	b	506d8 <__assert_fail@plt+0x3dfec>
   50260:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50264:	ldr	r2, [fp, #-28]	; 0xffffffe4
   50268:	str	r2, [r3, #40]	; 0x28
   5026c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50270:	mov	r1, r3
   50274:	sub	r3, fp, #40	; 0x28
   50278:	ldrd	r2, [r3]
   5027c:	strd	r2, [r1]
   50280:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50284:	mov	r2, #1
   50288:	strb	r2, [r3, #4]
   5028c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50290:	b	506d8 <__assert_fail@plt+0x3dfec>
   50294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50298:	cmn	r3, #1
   5029c:	movne	r3, #1
   502a0:	moveq	r3, #0
   502a4:	uxtb	r3, r3
   502a8:	cmp	r3, #0
   502ac:	beq	502d8 <__assert_fail@plt+0x3dbec>
   502b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   502b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   502b8:	cmp	r2, r3
   502bc:	movgt	r3, #1
   502c0:	movle	r3, #0
   502c4:	uxtb	r3, r3
   502c8:	cmp	r3, #0
   502cc:	beq	502d8 <__assert_fail@plt+0x3dbec>
   502d0:	mov	r3, #1
   502d4:	b	502dc <__assert_fail@plt+0x3dbf0>
   502d8:	mov	r3, #0
   502dc:	cmp	r3, #0
   502e0:	bne	50304 <__assert_fail@plt+0x3dc18>
   502e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   502e8:	ldrb	r3, [r3, #4]
   502ec:	cmp	r3, #24
   502f0:	movne	r3, #1
   502f4:	moveq	r3, #0
   502f8:	uxtb	r3, r3
   502fc:	cmp	r3, #0
   50300:	beq	50318 <__assert_fail@plt+0x3dc2c>
   50304:	ldr	r3, [fp, #8]
   50308:	mov	r2, #10
   5030c:	str	r2, [r3]
   50310:	mov	r3, #0
   50314:	b	506d8 <__assert_fail@plt+0x3dfec>
   50318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5031c:	cmn	r3, #1
   50320:	bne	50340 <__assert_fail@plt+0x3dc54>
   50324:	ldr	r3, [fp, #-20]	; 0xffffffec
   50328:	movw	r2, #32767	; 0x7fff
   5032c:	cmp	r3, r2
   50330:	movgt	r3, #1
   50334:	movle	r3, #0
   50338:	uxtb	r3, r3
   5033c:	b	50358 <__assert_fail@plt+0x3dc6c>
   50340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50344:	movw	r2, #32767	; 0x7fff
   50348:	cmp	r3, r2
   5034c:	movgt	r3, #1
   50350:	movle	r3, #0
   50354:	uxtb	r3, r3
   50358:	cmp	r3, #0
   5035c:	beq	503b0 <__assert_fail@plt+0x3dcc4>
   50360:	ldr	r3, [fp, #8]
   50364:	mov	r2, #15
   50368:	str	r2, [r3]
   5036c:	mov	r3, #0
   50370:	b	506d8 <__assert_fail@plt+0x3dfec>
   50374:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50378:	ldrb	r3, [r3, #4]
   5037c:	cmp	r3, #18
   50380:	moveq	r3, #1
   50384:	movne	r3, #0
   50388:	uxtb	r3, r3
   5038c:	str	r3, [fp, #-20]	; 0xffffffec
   50390:	ldr	r3, [fp, #-60]	; 0xffffffc4
   50394:	ldrb	r3, [r3, #4]
   50398:	cmp	r3, #19
   5039c:	bne	503a8 <__assert_fail@plt+0x3dcbc>
   503a0:	mov	r3, #1
   503a4:	b	503ac <__assert_fail@plt+0x3dcc0>
   503a8:	mvn	r3, #0
   503ac:	str	r3, [fp, #-24]	; 0xffffffe8
   503b0:	ldr	r2, [fp, #4]
   503b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   503b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   503bc:	bl	4df2c <__assert_fail@plt+0x3b840>
   503c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   503c4:	cmp	r3, #0
   503c8:	moveq	r3, #1
   503cc:	movne	r3, #0
   503d0:	uxtb	r3, r3
   503d4:	cmp	r3, #0
   503d8:	beq	503e4 <__assert_fail@plt+0x3dcf8>
   503dc:	mov	r3, #0
   503e0:	b	506d8 <__assert_fail@plt+0x3dfec>
   503e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   503e8:	cmp	r3, #0
   503ec:	moveq	r3, #1
   503f0:	movne	r3, #0
   503f4:	uxtb	r3, r3
   503f8:	cmp	r3, #0
   503fc:	beq	50438 <__assert_fail@plt+0x3dd4c>
   50400:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50404:	cmp	r3, #0
   50408:	moveq	r3, #1
   5040c:	movne	r3, #0
   50410:	uxtb	r3, r3
   50414:	cmp	r3, #0
   50418:	beq	50438 <__assert_fail@plt+0x3dd4c>
   5041c:	mov	r2, #0
   50420:	movw	r1, #11980	; 0x2ecc
   50424:	movt	r1, #5
   50428:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5042c:	bl	4c48c <__assert_fail@plt+0x39da0>
   50430:	mov	r3, #0
   50434:	b	506d8 <__assert_fail@plt+0x3dfec>
   50438:	ldr	r3, [fp, #-20]	; 0xffffffec
   5043c:	cmp	r3, #0
   50440:	movgt	r3, #1
   50444:	movle	r3, #0
   50448:	uxtb	r3, r3
   5044c:	cmp	r3, #0
   50450:	beq	50534 <__assert_fail@plt+0x3de48>
   50454:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50458:	str	r3, [fp, #-8]
   5045c:	mov	r3, #2
   50460:	str	r3, [fp, #-16]
   50464:	b	504d4 <__assert_fail@plt+0x3dde8>
   50468:	ldr	r1, [fp, #-56]	; 0xffffffc8
   5046c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   50470:	bl	52f0c <__assert_fail@plt+0x40820>
   50474:	str	r0, [fp, #-48]	; 0xffffffd0
   50478:	mov	r3, #16
   5047c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   50480:	ldr	r1, [fp, #-8]
   50484:	ldr	r0, [fp, #-56]	; 0xffffffc8
   50488:	bl	52be4 <__assert_fail@plt+0x404f8>
   5048c:	str	r0, [fp, #-8]
   50490:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50494:	cmp	r3, #0
   50498:	moveq	r3, #1
   5049c:	movne	r3, #0
   504a0:	uxtb	r3, r3
   504a4:	cmp	r3, #0
   504a8:	bne	506a4 <__assert_fail@plt+0x3dfb8>
   504ac:	ldr	r3, [fp, #-8]
   504b0:	cmp	r3, #0
   504b4:	moveq	r3, #1
   504b8:	movne	r3, #0
   504bc:	uxtb	r3, r3
   504c0:	cmp	r3, #0
   504c4:	bne	506a4 <__assert_fail@plt+0x3dfb8>
   504c8:	ldr	r3, [fp, #-16]
   504cc:	add	r3, r3, #1
   504d0:	str	r3, [fp, #-16]
   504d4:	ldr	r2, [fp, #-16]
   504d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   504dc:	cmp	r2, r3
   504e0:	ble	50468 <__assert_fail@plt+0x3dd7c>
   504e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   504e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   504ec:	cmp	r2, r3
   504f0:	bne	504fc <__assert_fail@plt+0x3de10>
   504f4:	ldr	r3, [fp, #-8]
   504f8:	b	506d8 <__assert_fail@plt+0x3dfec>
   504fc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   50500:	ldr	r0, [fp, #-48]	; 0xffffffd0
   50504:	bl	52f0c <__assert_fail@plt+0x40820>
   50508:	str	r0, [fp, #-48]	; 0xffffffd0
   5050c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50510:	cmp	r3, #0
   50514:	moveq	r3, #1
   50518:	movne	r3, #0
   5051c:	uxtb	r3, r3
   50520:	cmp	r3, #0
   50524:	bne	506ac <__assert_fail@plt+0x3dfc0>
   50528:	ldr	r3, [fp, #-8]
   5052c:	str	r3, [fp, #-12]
   50530:	b	5053c <__assert_fail@plt+0x3de50>
   50534:	mov	r3, #0
   50538:	str	r3, [fp, #-12]
   5053c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50540:	ldrb	r3, [r3, #24]
   50544:	cmp	r3, #17
   50548:	bne	50570 <__assert_fail@plt+0x3de84>
   5054c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50550:	ldr	r3, [r3, #20]
   50554:	str	r3, [fp, #-32]	; 0xffffffe0
   50558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5055c:	mov	r2, r3
   50560:	movw	r1, #11724	; 0x2dcc
   50564:	movt	r1, #5
   50568:	ldr	r0, [fp, #-48]	; 0xffffffd0
   5056c:	bl	4c48c <__assert_fail@plt+0x39da0>
   50570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50574:	cmn	r3, #1
   50578:	bne	50584 <__assert_fail@plt+0x3de98>
   5057c:	mov	r3, #11
   50580:	b	50588 <__assert_fail@plt+0x3de9c>
   50584:	mov	r3, #10
   50588:	mov	r2, #0
   5058c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   50590:	ldr	r0, [fp, #-56]	; 0xffffffc8
   50594:	bl	52be4 <__assert_fail@plt+0x404f8>
   50598:	str	r0, [fp, #-8]
   5059c:	ldr	r3, [fp, #-8]
   505a0:	cmp	r3, #0
   505a4:	moveq	r3, #1
   505a8:	movne	r3, #0
   505ac:	uxtb	r3, r3
   505b0:	cmp	r3, #0
   505b4:	bne	506b4 <__assert_fail@plt+0x3dfc8>
   505b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   505bc:	add	r3, r3, #2
   505c0:	str	r3, [fp, #-16]
   505c4:	b	50668 <__assert_fail@plt+0x3df7c>
   505c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   505cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   505d0:	bl	52f0c <__assert_fail@plt+0x40820>
   505d4:	str	r0, [fp, #-48]	; 0xffffffd0
   505d8:	mov	r3, #16
   505dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   505e0:	ldr	r1, [fp, #-8]
   505e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   505e8:	bl	52be4 <__assert_fail@plt+0x404f8>
   505ec:	str	r0, [fp, #-8]
   505f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   505f4:	cmp	r3, #0
   505f8:	moveq	r3, #1
   505fc:	movne	r3, #0
   50600:	uxtb	r3, r3
   50604:	cmp	r3, #0
   50608:	bne	506bc <__assert_fail@plt+0x3dfd0>
   5060c:	ldr	r3, [fp, #-8]
   50610:	cmp	r3, #0
   50614:	moveq	r3, #1
   50618:	movne	r3, #0
   5061c:	uxtb	r3, r3
   50620:	cmp	r3, #0
   50624:	bne	506bc <__assert_fail@plt+0x3dfd0>
   50628:	mov	r3, #10
   5062c:	mov	r2, #0
   50630:	ldr	r1, [fp, #-8]
   50634:	ldr	r0, [fp, #-56]	; 0xffffffc8
   50638:	bl	52be4 <__assert_fail@plt+0x404f8>
   5063c:	str	r0, [fp, #-8]
   50640:	ldr	r3, [fp, #-8]
   50644:	cmp	r3, #0
   50648:	moveq	r3, #1
   5064c:	movne	r3, #0
   50650:	uxtb	r3, r3
   50654:	cmp	r3, #0
   50658:	bne	506c4 <__assert_fail@plt+0x3dfd8>
   5065c:	ldr	r3, [fp, #-16]
   50660:	add	r3, r3, #1
   50664:	str	r3, [fp, #-16]
   50668:	ldr	r2, [fp, #-16]
   5066c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50670:	cmp	r2, r3
   50674:	ble	505c8 <__assert_fail@plt+0x3dedc>
   50678:	ldr	r3, [fp, #-12]
   5067c:	cmp	r3, #0
   50680:	beq	5069c <__assert_fail@plt+0x3dfb0>
   50684:	mov	r3, #16
   50688:	ldr	r2, [fp, #-8]
   5068c:	ldr	r1, [fp, #-12]
   50690:	ldr	r0, [fp, #-56]	; 0xffffffc8
   50694:	bl	52be4 <__assert_fail@plt+0x404f8>
   50698:	str	r0, [fp, #-8]
   5069c:	ldr	r3, [fp, #-8]
   506a0:	b	506d8 <__assert_fail@plt+0x3dfec>
   506a4:	nop	{0}
   506a8:	b	506c8 <__assert_fail@plt+0x3dfdc>
   506ac:	nop	{0}
   506b0:	b	506c8 <__assert_fail@plt+0x3dfdc>
   506b4:	nop	{0}
   506b8:	b	506c8 <__assert_fail@plt+0x3dfdc>
   506bc:	nop	{0}
   506c0:	b	506c8 <__assert_fail@plt+0x3dfdc>
   506c4:	nop	{0}
   506c8:	ldr	r3, [fp, #8]
   506cc:	mov	r2, #12
   506d0:	str	r2, [r3]
   506d4:	mov	r3, #0
   506d8:	mov	r0, r3
   506dc:	sub	sp, fp, #4
   506e0:	ldr	fp, [sp]
   506e4:	add	sp, sp, #4
   506e8:	pop	{pc}		; (ldr pc, [sp], #4)
   506ec:	str	fp, [sp, #-8]!
   506f0:	str	lr, [sp, #4]
   506f4:	add	fp, sp, #4
   506f8:	sub	sp, sp, #8
   506fc:	mov	r3, r0
   50700:	str	r1, [fp, #-12]
   50704:	strb	r3, [fp, #-5]
   50708:	ldr	r3, [fp, #-12]
   5070c:	ldr	r3, [r3, #92]	; 0x5c
   50710:	cmp	r3, #1
   50714:	ble	5072c <__assert_fail@plt+0x3e040>
   50718:	ldrb	r3, [fp, #-5]
   5071c:	mov	r0, r3
   50720:	bl	12470 <btowc@plt>
   50724:	mov	r3, r0
   50728:	b	50730 <__assert_fail@plt+0x3e044>
   5072c:	ldrb	r3, [fp, #-5]
   50730:	mov	r0, r3
   50734:	sub	sp, fp, #4
   50738:	ldr	fp, [sp]
   5073c:	add	sp, sp, #4
   50740:	pop	{pc}		; (ldr pc, [sp], #4)
   50744:	str	fp, [sp, #-8]!
   50748:	str	lr, [sp, #4]
   5074c:	add	fp, sp, #4
   50750:	sub	sp, sp, #48	; 0x30
   50754:	str	r0, [fp, #-40]	; 0xffffffd8
   50758:	str	r1, [fp, #-44]	; 0xffffffd4
   5075c:	str	r2, [fp, #-48]	; 0xffffffd0
   50760:	str	r3, [fp, #-52]	; 0xffffffcc
   50764:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50768:	ldr	r3, [r3]
   5076c:	cmp	r3, #2
   50770:	moveq	r3, #1
   50774:	movne	r3, #0
   50778:	uxtb	r3, r3
   5077c:	cmp	r3, #0
   50780:	bne	507a4 <__assert_fail@plt+0x3e0b8>
   50784:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50788:	ldr	r3, [r3]
   5078c:	cmp	r3, #4
   50790:	moveq	r3, #1
   50794:	movne	r3, #0
   50798:	uxtb	r3, r3
   5079c:	cmp	r3, #0
   507a0:	beq	507ac <__assert_fail@plt+0x3e0c0>
   507a4:	mov	r3, #1
   507a8:	b	507b0 <__assert_fail@plt+0x3e0c4>
   507ac:	mov	r3, #0
   507b0:	cmp	r3, #0
   507b4:	bne	507d8 <__assert_fail@plt+0x3e0ec>
   507b8:	ldr	r3, [fp, #4]
   507bc:	ldr	r3, [r3]
   507c0:	cmp	r3, #2
   507c4:	moveq	r3, #1
   507c8:	movne	r3, #0
   507cc:	uxtb	r3, r3
   507d0:	cmp	r3, #0
   507d4:	beq	507e0 <__assert_fail@plt+0x3e0f4>
   507d8:	mov	r3, #1
   507dc:	b	507e4 <__assert_fail@plt+0x3e0f8>
   507e0:	mov	r3, #0
   507e4:	cmp	r3, #0
   507e8:	bne	5080c <__assert_fail@plt+0x3e120>
   507ec:	ldr	r3, [fp, #4]
   507f0:	ldr	r3, [r3]
   507f4:	cmp	r3, #4
   507f8:	moveq	r3, #1
   507fc:	movne	r3, #0
   50800:	uxtb	r3, r3
   50804:	cmp	r3, #0
   50808:	beq	50814 <__assert_fail@plt+0x3e128>
   5080c:	mov	r3, #11
   50810:	b	50c00 <__assert_fail@plt+0x3e514>
   50814:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50818:	ldr	r3, [r3]
   5081c:	cmp	r3, #3
   50820:	moveq	r3, #1
   50824:	movne	r3, #0
   50828:	uxtb	r3, r3
   5082c:	cmp	r3, #0
   50830:	beq	50868 <__assert_fail@plt+0x3e17c>
   50834:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50838:	ldr	r3, [r3, #4]
   5083c:	mov	r0, r3
   50840:	bl	123bc <strlen@plt>
   50844:	mov	r3, r0
   50848:	cmp	r3, #1
   5084c:	movhi	r3, #1
   50850:	movls	r3, #0
   50854:	uxtb	r3, r3
   50858:	cmp	r3, #0
   5085c:	beq	50868 <__assert_fail@plt+0x3e17c>
   50860:	mov	r3, #1
   50864:	b	5086c <__assert_fail@plt+0x3e180>
   50868:	mov	r3, #0
   5086c:	cmp	r3, #0
   50870:	bne	508d4 <__assert_fail@plt+0x3e1e8>
   50874:	ldr	r3, [fp, #4]
   50878:	ldr	r3, [r3]
   5087c:	cmp	r3, #3
   50880:	moveq	r3, #1
   50884:	movne	r3, #0
   50888:	uxtb	r3, r3
   5088c:	cmp	r3, #0
   50890:	beq	508c8 <__assert_fail@plt+0x3e1dc>
   50894:	ldr	r3, [fp, #4]
   50898:	ldr	r3, [r3, #4]
   5089c:	mov	r0, r3
   508a0:	bl	123bc <strlen@plt>
   508a4:	mov	r3, r0
   508a8:	cmp	r3, #1
   508ac:	movhi	r3, #1
   508b0:	movls	r3, #0
   508b4:	uxtb	r3, r3
   508b8:	cmp	r3, #0
   508bc:	beq	508c8 <__assert_fail@plt+0x3e1dc>
   508c0:	mov	r3, #1
   508c4:	b	508cc <__assert_fail@plt+0x3e1e0>
   508c8:	mov	r3, #0
   508cc:	cmp	r3, #0
   508d0:	beq	508dc <__assert_fail@plt+0x3e1f0>
   508d4:	mov	r3, #3
   508d8:	b	50c00 <__assert_fail@plt+0x3e514>
   508dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   508e0:	ldr	r3, [r3]
   508e4:	cmp	r3, #0
   508e8:	bne	508f8 <__assert_fail@plt+0x3e20c>
   508ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   508f0:	ldrb	r3, [r3, #4]
   508f4:	b	5091c <__assert_fail@plt+0x3e230>
   508f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   508fc:	ldr	r3, [r3]
   50900:	cmp	r3, #3
   50904:	bne	50918 <__assert_fail@plt+0x3e22c>
   50908:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5090c:	ldr	r3, [r3, #4]
   50910:	ldrb	r3, [r3]
   50914:	b	5091c <__assert_fail@plt+0x3e230>
   50918:	mov	r3, #0
   5091c:	str	r3, [fp, #-12]
   50920:	ldr	r3, [fp, #4]
   50924:	ldr	r3, [r3]
   50928:	cmp	r3, #0
   5092c:	bne	5093c <__assert_fail@plt+0x3e250>
   50930:	ldr	r3, [fp, #4]
   50934:	ldrb	r3, [r3, #4]
   50938:	b	50960 <__assert_fail@plt+0x3e274>
   5093c:	ldr	r3, [fp, #4]
   50940:	ldr	r3, [r3]
   50944:	cmp	r3, #3
   50948:	bne	5095c <__assert_fail@plt+0x3e270>
   5094c:	ldr	r3, [fp, #4]
   50950:	ldr	r3, [r3, #4]
   50954:	ldrb	r3, [r3]
   50958:	b	50960 <__assert_fail@plt+0x3e274>
   5095c:	mov	r3, #0
   50960:	str	r3, [fp, #-16]
   50964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50968:	ldr	r3, [r3]
   5096c:	cmp	r3, #0
   50970:	beq	50984 <__assert_fail@plt+0x3e298>
   50974:	ldr	r3, [fp, #-52]	; 0xffffffcc
   50978:	ldr	r3, [r3]
   5097c:	cmp	r3, #3
   50980:	bne	509a0 <__assert_fail@plt+0x3e2b4>
   50984:	ldr	r3, [fp, #-12]
   50988:	uxtb	r3, r3
   5098c:	ldr	r1, [fp, #8]
   50990:	mov	r0, r3
   50994:	bl	506ec <__assert_fail@plt+0x3e000>
   50998:	mov	r3, r0
   5099c:	b	509a8 <__assert_fail@plt+0x3e2bc>
   509a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   509a4:	ldr	r3, [r3, #4]
   509a8:	str	r3, [fp, #-20]	; 0xffffffec
   509ac:	ldr	r3, [fp, #4]
   509b0:	ldr	r3, [r3]
   509b4:	cmp	r3, #0
   509b8:	beq	509cc <__assert_fail@plt+0x3e2e0>
   509bc:	ldr	r3, [fp, #4]
   509c0:	ldr	r3, [r3]
   509c4:	cmp	r3, #3
   509c8:	bne	509e8 <__assert_fail@plt+0x3e2fc>
   509cc:	ldr	r3, [fp, #-16]
   509d0:	uxtb	r3, r3
   509d4:	ldr	r1, [fp, #8]
   509d8:	mov	r0, r3
   509dc:	bl	506ec <__assert_fail@plt+0x3e000>
   509e0:	mov	r3, r0
   509e4:	b	509f0 <__assert_fail@plt+0x3e304>
   509e8:	ldr	r3, [fp, #4]
   509ec:	ldr	r3, [r3, #4]
   509f0:	str	r3, [fp, #-24]	; 0xffffffe8
   509f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   509f8:	cmn	r3, #1
   509fc:	beq	50a0c <__assert_fail@plt+0x3e320>
   50a00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50a04:	cmn	r3, #1
   50a08:	bne	50a14 <__assert_fail@plt+0x3e328>
   50a0c:	mov	r3, #3
   50a10:	b	50c00 <__assert_fail@plt+0x3e514>
   50a14:	ldr	r3, [fp, #12]
   50a18:	and	r3, r3, #65536	; 0x10000
   50a1c:	cmp	r3, #0
   50a20:	movne	r3, #1
   50a24:	moveq	r3, #0
   50a28:	uxtb	r3, r3
   50a2c:	cmp	r3, #0
   50a30:	beq	50a5c <__assert_fail@plt+0x3e370>
   50a34:	ldr	r2, [fp, #-20]	; 0xffffffec
   50a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50a3c:	cmp	r2, r3
   50a40:	movhi	r3, #1
   50a44:	movls	r3, #0
   50a48:	uxtb	r3, r3
   50a4c:	cmp	r3, #0
   50a50:	beq	50a5c <__assert_fail@plt+0x3e370>
   50a54:	mov	r3, #11
   50a58:	b	50c00 <__assert_fail@plt+0x3e514>
   50a5c:	ldr	r3, [fp, #8]
   50a60:	ldr	r3, [r3, #92]	; 0x5c
   50a64:	cmp	r3, #1
   50a68:	ble	50ba8 <__assert_fail@plt+0x3e4bc>
   50a6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50a70:	ldr	r2, [r3]
   50a74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50a78:	ldr	r3, [r3, #32]
   50a7c:	cmp	r2, r3
   50a80:	moveq	r3, #1
   50a84:	movne	r3, #0
   50a88:	uxtb	r3, r3
   50a8c:	cmp	r3, #0
   50a90:	beq	50b5c <__assert_fail@plt+0x3e470>
   50a94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50a98:	ldr	r3, [r3, #32]
   50a9c:	lsl	r3, r3, #1
   50aa0:	add	r3, r3, #1
   50aa4:	str	r3, [fp, #-28]	; 0xffffffe4
   50aa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50aac:	ldr	r2, [r3, #4]
   50ab0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50ab4:	lsl	r3, r3, #2
   50ab8:	mov	r1, r3
   50abc:	mov	r0, r2
   50ac0:	bl	446e8 <__assert_fail@plt+0x31ffc>
   50ac4:	str	r0, [fp, #-32]	; 0xffffffe0
   50ac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50acc:	ldr	r2, [r3, #8]
   50ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50ad4:	lsl	r3, r3, #2
   50ad8:	mov	r1, r3
   50adc:	mov	r0, r2
   50ae0:	bl	446e8 <__assert_fail@plt+0x31ffc>
   50ae4:	str	r0, [fp, #-36]	; 0xffffffdc
   50ae8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   50aec:	cmp	r3, #0
   50af0:	moveq	r3, #1
   50af4:	movne	r3, #0
   50af8:	uxtb	r3, r3
   50afc:	cmp	r3, #0
   50b00:	bne	50b20 <__assert_fail@plt+0x3e434>
   50b04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   50b08:	cmp	r3, #0
   50b0c:	moveq	r3, #1
   50b10:	movne	r3, #0
   50b14:	uxtb	r3, r3
   50b18:	cmp	r3, #0
   50b1c:	beq	50b38 <__assert_fail@plt+0x3e44c>
   50b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   50b24:	bl	3fe0c <__assert_fail@plt+0x2d720>
   50b28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   50b2c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   50b30:	mov	r3, #12
   50b34:	b	50c00 <__assert_fail@plt+0x3e514>
   50b38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50b3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   50b40:	str	r2, [r3, #4]
   50b44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50b48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   50b4c:	str	r2, [r3, #8]
   50b50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   50b54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   50b58:	str	r2, [r3]
   50b5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50b60:	ldr	r2, [r3, #4]
   50b64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50b68:	ldr	r3, [r3, #32]
   50b6c:	lsl	r3, r3, #2
   50b70:	add	r3, r2, r3
   50b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   50b78:	str	r2, [r3]
   50b7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50b80:	ldr	r2, [r3, #8]
   50b84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   50b88:	ldr	r3, [r3, #32]
   50b8c:	add	r0, r3, #1
   50b90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   50b94:	str	r0, [r1, #32]
   50b98:	lsl	r3, r3, #2
   50b9c:	add	r3, r2, r3
   50ba0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   50ba4:	str	r2, [r3]
   50ba8:	mov	r3, #0
   50bac:	str	r3, [fp, #-8]
   50bb0:	b	50bf0 <__assert_fail@plt+0x3e504>
   50bb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   50bb8:	ldr	r3, [fp, #-8]
   50bbc:	cmp	r2, r3
   50bc0:	bhi	50be4 <__assert_fail@plt+0x3e4f8>
   50bc4:	ldr	r2, [fp, #-8]
   50bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   50bcc:	cmp	r2, r3
   50bd0:	bhi	50be4 <__assert_fail@plt+0x3e4f8>
   50bd4:	ldr	r3, [fp, #-8]
   50bd8:	mov	r1, r3
   50bdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   50be0:	bl	44860 <__assert_fail@plt+0x32174>
   50be4:	ldr	r3, [fp, #-8]
   50be8:	add	r3, r3, #1
   50bec:	str	r3, [fp, #-8]
   50bf0:	ldr	r3, [fp, #-8]
   50bf4:	cmp	r3, #255	; 0xff
   50bf8:	bls	50bb4 <__assert_fail@plt+0x3e4c8>
   50bfc:	mov	r3, #0
   50c00:	mov	r0, r3
   50c04:	sub	sp, fp, #4
   50c08:	ldr	fp, [sp]
   50c0c:	add	sp, sp, #4
   50c10:	pop	{pc}		; (ldr pc, [sp], #4)
   50c14:	str	fp, [sp, #-8]!
   50c18:	str	lr, [sp, #4]
   50c1c:	add	fp, sp, #4
   50c20:	sub	sp, sp, #24
   50c24:	str	r0, [fp, #-16]
   50c28:	str	r1, [fp, #-20]	; 0xffffffec
   50c2c:	str	r2, [fp, #-24]	; 0xffffffe8
   50c30:	str	r3, [fp, #-28]	; 0xffffffe4
   50c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   50c38:	bl	123bc <strlen@plt>
   50c3c:	str	r0, [fp, #-8]
   50c40:	ldr	r3, [fp, #-8]
   50c44:	cmp	r3, #1
   50c48:	movne	r3, #1
   50c4c:	moveq	r3, #0
   50c50:	uxtb	r3, r3
   50c54:	cmp	r3, #0
   50c58:	beq	50c64 <__assert_fail@plt+0x3e578>
   50c5c:	mov	r3, #3
   50c60:	b	50c7c <__assert_fail@plt+0x3e590>
   50c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   50c68:	ldrb	r3, [r3]
   50c6c:	mov	r1, r3
   50c70:	ldr	r0, [fp, #-16]
   50c74:	bl	44860 <__assert_fail@plt+0x32174>
   50c78:	mov	r3, #0
   50c7c:	mov	r0, r3
   50c80:	sub	sp, fp, #4
   50c84:	ldr	fp, [sp]
   50c88:	add	sp, sp, #4
   50c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   50c90:	str	fp, [sp, #-8]!
   50c94:	str	lr, [sp, #4]
   50c98:	add	fp, sp, #4
   50c9c:	sub	sp, sp, #248	; 0xf8
   50ca0:	str	r0, [fp, #-200]	; 0xffffff38
   50ca4:	str	r1, [fp, #-204]	; 0xffffff34
   50ca8:	str	r2, [fp, #-208]	; 0xffffff30
   50cac:	str	r3, [fp, #-212]	; 0xffffff2c
   50cb0:	mov	r3, #0
   50cb4:	str	r3, [fp, #-40]	; 0xffffffd8
   50cb8:	mov	r3, #0
   50cbc:	str	r3, [fp, #-44]	; 0xffffffd4
   50cc0:	mov	r3, #0
   50cc4:	str	r3, [fp, #-48]	; 0xffffffd0
   50cc8:	mov	r3, #0
   50ccc:	str	r3, [fp, #-52]	; 0xffffffcc
   50cd0:	mov	r3, #0
   50cd4:	str	r3, [fp, #-56]	; 0xffffffc8
   50cd8:	mov	r3, #0
   50cdc:	str	r3, [fp, #-60]	; 0xffffffc4
   50ce0:	mov	r3, #0
   50ce4:	str	r3, [fp, #-92]	; 0xffffffa4
   50ce8:	mov	r3, #0
   50cec:	str	r3, [fp, #-96]	; 0xffffffa0
   50cf0:	mov	r3, #0
   50cf4:	str	r3, [fp, #-8]
   50cf8:	mov	r3, #0
   50cfc:	str	r3, [fp, #-100]	; 0xffffff9c
   50d00:	mov	r3, #0
   50d04:	str	r3, [fp, #-104]	; 0xffffff98
   50d08:	mov	r3, #0
   50d0c:	strb	r3, [fp, #-9]
   50d10:	mov	r3, #1
   50d14:	strb	r3, [fp, #-21]	; 0xffffffeb
   50d18:	mov	r1, #1
   50d1c:	mov	r0, #32
   50d20:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   50d24:	mov	r3, r0
   50d28:	str	r3, [fp, #-64]	; 0xffffffc0
   50d2c:	mov	r1, #1
   50d30:	mov	r0, #40	; 0x28
   50d34:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   50d38:	mov	r3, r0
   50d3c:	str	r3, [fp, #-68]	; 0xffffffbc
   50d40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   50d44:	cmp	r3, #0
   50d48:	moveq	r3, #1
   50d4c:	movne	r3, #0
   50d50:	uxtb	r3, r3
   50d54:	cmp	r3, #0
   50d58:	bne	50d78 <__assert_fail@plt+0x3e68c>
   50d5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   50d60:	cmp	r3, #0
   50d64:	moveq	r3, #1
   50d68:	movne	r3, #0
   50d6c:	uxtb	r3, r3
   50d70:	cmp	r3, #0
   50d74:	beq	50d9c <__assert_fail@plt+0x3e6b0>
   50d78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50d7c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   50d80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   50d84:	bl	3fe0c <__assert_fail@plt+0x2d720>
   50d88:	ldr	r3, [fp, #4]
   50d8c:	mov	r2, #12
   50d90:	str	r2, [r3]
   50d94:	mov	r3, #0
   50d98:	b	51624 <__assert_fail@plt+0x3ef38>
   50d9c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   50da0:	ldr	r1, [fp, #-200]	; 0xffffff38
   50da4:	ldr	r0, [fp, #-208]	; 0xffffff30
   50da8:	bl	4ec8c <__assert_fail@plt+0x3c5a0>
   50dac:	str	r0, [fp, #-20]	; 0xffffffec
   50db0:	ldr	r3, [fp, #-208]	; 0xffffff30
   50db4:	ldrb	r3, [r3, #4]
   50db8:	cmp	r3, #2
   50dbc:	moveq	r3, #1
   50dc0:	movne	r3, #0
   50dc4:	uxtb	r3, r3
   50dc8:	cmp	r3, #0
   50dcc:	beq	50de0 <__assert_fail@plt+0x3e6f4>
   50dd0:	ldr	r3, [fp, #4]
   50dd4:	mov	r2, #2
   50dd8:	str	r2, [r3]
   50ddc:	b	51610 <__assert_fail@plt+0x3ef24>
   50de0:	ldr	r3, [fp, #-208]	; 0xffffff30
   50de4:	ldrb	r3, [r3, #4]
   50de8:	cmp	r3, #25
   50dec:	bne	50e80 <__assert_fail@plt+0x3e794>
   50df0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   50df4:	ldrb	r3, [r2, #16]
   50df8:	orr	r3, r3, #1
   50dfc:	strb	r3, [r2, #16]
   50e00:	mov	r3, #1
   50e04:	strb	r3, [fp, #-9]
   50e08:	ldr	r3, [fp, #-212]	; 0xffffff2c
   50e0c:	and	r3, r3, #256	; 0x100
   50e10:	cmp	r3, #0
   50e14:	beq	50e24 <__assert_fail@plt+0x3e738>
   50e18:	mov	r1, #10
   50e1c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   50e20:	bl	44860 <__assert_fail@plt+0x32174>
   50e24:	ldr	r3, [fp, #-200]	; 0xffffff38
   50e28:	ldr	r2, [r3, #40]	; 0x28
   50e2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   50e30:	add	r2, r2, r3
   50e34:	ldr	r3, [fp, #-200]	; 0xffffff38
   50e38:	str	r2, [r3, #40]	; 0x28
   50e3c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   50e40:	ldr	r1, [fp, #-200]	; 0xffffff38
   50e44:	ldr	r0, [fp, #-208]	; 0xffffff30
   50e48:	bl	4ec8c <__assert_fail@plt+0x3c5a0>
   50e4c:	str	r0, [fp, #-20]	; 0xffffffec
   50e50:	ldr	r3, [fp, #-208]	; 0xffffff30
   50e54:	ldrb	r3, [r3, #4]
   50e58:	cmp	r3, #2
   50e5c:	moveq	r3, #1
   50e60:	movne	r3, #0
   50e64:	uxtb	r3, r3
   50e68:	cmp	r3, #0
   50e6c:	beq	50e80 <__assert_fail@plt+0x3e794>
   50e70:	ldr	r3, [fp, #4]
   50e74:	mov	r2, #2
   50e78:	str	r2, [r3]
   50e7c:	b	51610 <__assert_fail@plt+0x3ef24>
   50e80:	ldr	r3, [fp, #-208]	; 0xffffff30
   50e84:	ldrb	r3, [r3, #4]
   50e88:	cmp	r3, #21
   50e8c:	bne	50e9c <__assert_fail@plt+0x3e7b0>
   50e90:	ldr	r3, [fp, #-208]	; 0xffffff30
   50e94:	mov	r2, #1
   50e98:	strb	r2, [r3, #4]
   50e9c:	mov	r3, #0
   50ea0:	str	r3, [fp, #-28]	; 0xffffffe4
   50ea4:	mov	r3, #0
   50ea8:	strb	r3, [fp, #-29]	; 0xffffffe3
   50eac:	sub	r3, fp, #192	; 0xc0
   50eb0:	str	r3, [fp, #-108]	; 0xffffff94
   50eb4:	mov	r3, #3
   50eb8:	str	r3, [fp, #-112]	; 0xffffff90
   50ebc:	sub	r0, fp, #112	; 0x70
   50ec0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   50ec4:	str	r3, [sp, #8]
   50ec8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   50ecc:	str	r3, [sp, #4]
   50ed0:	ldr	r3, [fp, #-204]	; 0xffffff34
   50ed4:	str	r3, [sp]
   50ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   50edc:	ldr	r2, [fp, #-208]	; 0xffffff30
   50ee0:	ldr	r1, [fp, #-200]	; 0xffffff38
   50ee4:	bl	51638 <__assert_fail@plt+0x3ef4c>
   50ee8:	str	r0, [fp, #-72]	; 0xffffffb8
   50eec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   50ef0:	cmp	r3, #0
   50ef4:	movne	r3, #1
   50ef8:	moveq	r3, #0
   50efc:	uxtb	r3, r3
   50f00:	cmp	r3, #0
   50f04:	beq	50f18 <__assert_fail@plt+0x3e82c>
   50f08:	ldr	r3, [fp, #4]
   50f0c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   50f10:	str	r2, [r3]
   50f14:	b	51610 <__assert_fail@plt+0x3ef24>
   50f18:	mov	r3, #0
   50f1c:	strb	r3, [fp, #-21]	; 0xffffffeb
   50f20:	ldr	r2, [fp, #-212]	; 0xffffff2c
   50f24:	ldr	r1, [fp, #-200]	; 0xffffff38
   50f28:	ldr	r0, [fp, #-208]	; 0xffffff30
   50f2c:	bl	4ec8c <__assert_fail@plt+0x3c5a0>
   50f30:	str	r0, [fp, #-20]	; 0xffffffec
   50f34:	ldr	r3, [fp, #-112]	; 0xffffff90
   50f38:	cmp	r3, #4
   50f3c:	beq	51024 <__assert_fail@plt+0x3e938>
   50f40:	ldr	r3, [fp, #-112]	; 0xffffff90
   50f44:	cmp	r3, #2
   50f48:	beq	51024 <__assert_fail@plt+0x3e938>
   50f4c:	ldr	r3, [fp, #-208]	; 0xffffff30
   50f50:	ldrb	r3, [r3, #4]
   50f54:	cmp	r3, #2
   50f58:	moveq	r3, #1
   50f5c:	movne	r3, #0
   50f60:	uxtb	r3, r3
   50f64:	cmp	r3, #0
   50f68:	beq	50f7c <__assert_fail@plt+0x3e890>
   50f6c:	ldr	r3, [fp, #4]
   50f70:	mov	r2, #7
   50f74:	str	r2, [r3]
   50f78:	b	51610 <__assert_fail@plt+0x3ef24>
   50f7c:	ldr	r3, [fp, #-208]	; 0xffffff30
   50f80:	ldrb	r3, [r3, #4]
   50f84:	cmp	r3, #22
   50f88:	bne	51024 <__assert_fail@plt+0x3e938>
   50f8c:	ldr	r3, [fp, #-200]	; 0xffffff38
   50f90:	ldr	r2, [r3, #40]	; 0x28
   50f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   50f98:	add	r2, r2, r3
   50f9c:	ldr	r3, [fp, #-200]	; 0xffffff38
   50fa0:	str	r2, [r3, #40]	; 0x28
   50fa4:	sub	r3, fp, #128	; 0x80
   50fa8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   50fac:	ldr	r1, [fp, #-200]	; 0xffffff38
   50fb0:	mov	r0, r3
   50fb4:	bl	4ec8c <__assert_fail@plt+0x3c5a0>
   50fb8:	str	r0, [fp, #-28]	; 0xffffffe4
   50fbc:	ldrb	r3, [fp, #-124]	; 0xffffff84
   50fc0:	cmp	r3, #2
   50fc4:	moveq	r3, #1
   50fc8:	movne	r3, #0
   50fcc:	uxtb	r3, r3
   50fd0:	cmp	r3, #0
   50fd4:	beq	50fe8 <__assert_fail@plt+0x3e8fc>
   50fd8:	ldr	r3, [fp, #4]
   50fdc:	mov	r2, #7
   50fe0:	str	r2, [r3]
   50fe4:	b	51610 <__assert_fail@plt+0x3ef24>
   50fe8:	ldrb	r3, [fp, #-124]	; 0xffffff84
   50fec:	cmp	r3, #21
   50ff0:	bne	5101c <__assert_fail@plt+0x3e930>
   50ff4:	ldr	r3, [fp, #-200]	; 0xffffff38
   50ff8:	ldr	r2, [r3, #40]	; 0x28
   50ffc:	ldr	r3, [fp, #-20]	; 0xffffffec
   51000:	sub	r2, r2, r3
   51004:	ldr	r3, [fp, #-200]	; 0xffffff38
   51008:	str	r2, [r3, #40]	; 0x28
   5100c:	ldr	r3, [fp, #-208]	; 0xffffff30
   51010:	mov	r2, #1
   51014:	strb	r2, [r3, #4]
   51018:	b	51024 <__assert_fail@plt+0x3e938>
   5101c:	mov	r3, #1
   51020:	strb	r3, [fp, #-29]	; 0xffffffe3
   51024:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   51028:	cmp	r3, #0
   5102c:	beq	51140 <__assert_fail@plt+0x3ea54>
   51030:	sub	r3, fp, #160	; 0xa0
   51034:	str	r3, [fp, #-116]	; 0xffffff8c
   51038:	mov	r3, #3
   5103c:	str	r3, [fp, #-120]	; 0xffffff88
   51040:	sub	r2, fp, #128	; 0x80
   51044:	sub	r0, fp, #120	; 0x78
   51048:	mov	r3, #1
   5104c:	str	r3, [sp, #8]
   51050:	ldr	r3, [fp, #-212]	; 0xffffff2c
   51054:	str	r3, [sp, #4]
   51058:	ldr	r3, [fp, #-204]	; 0xffffff34
   5105c:	str	r3, [sp]
   51060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   51064:	ldr	r1, [fp, #-200]	; 0xffffff38
   51068:	bl	51638 <__assert_fail@plt+0x3ef4c>
   5106c:	str	r0, [fp, #-72]	; 0xffffffb8
   51070:	ldr	r3, [fp, #-72]	; 0xffffffb8
   51074:	cmp	r3, #0
   51078:	movne	r3, #1
   5107c:	moveq	r3, #0
   51080:	uxtb	r3, r3
   51084:	cmp	r3, #0
   51088:	beq	5109c <__assert_fail@plt+0x3e9b0>
   5108c:	ldr	r3, [fp, #4]
   51090:	ldr	r2, [fp, #-72]	; 0xffffffb8
   51094:	str	r2, [r3]
   51098:	b	51610 <__assert_fail@plt+0x3ef24>
   5109c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   510a0:	ldr	r1, [fp, #-200]	; 0xffffff38
   510a4:	ldr	r0, [fp, #-208]	; 0xffffff30
   510a8:	bl	4ec8c <__assert_fail@plt+0x3c5a0>
   510ac:	str	r0, [fp, #-20]	; 0xffffffec
   510b0:	sub	r1, fp, #112	; 0x70
   510b4:	sub	r2, fp, #96	; 0x60
   510b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   510bc:	str	r3, [sp, #32]
   510c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   510c4:	str	r3, [sp, #28]
   510c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   510cc:	str	r3, [sp, #24]
   510d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   510d4:	str	r3, [sp, #20]
   510d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   510dc:	str	r3, [sp, #16]
   510e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   510e4:	str	r3, [sp, #12]
   510e8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   510ec:	str	r3, [sp, #8]
   510f0:	ldr	r3, [fp, #-204]	; 0xffffff34
   510f4:	str	r3, [sp, #4]
   510f8:	sub	r3, fp, #120	; 0x78
   510fc:	str	r3, [sp]
   51100:	mov	r3, r1
   51104:	ldr	r1, [fp, #-68]	; 0xffffffbc
   51108:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5110c:	bl	50744 <__assert_fail@plt+0x3e058>
   51110:	mov	r2, r0
   51114:	ldr	r3, [fp, #4]
   51118:	str	r2, [r3]
   5111c:	ldr	r3, [fp, #4]
   51120:	ldr	r3, [r3]
   51124:	cmp	r3, #0
   51128:	movne	r3, #1
   5112c:	moveq	r3, #0
   51130:	uxtb	r3, r3
   51134:	cmp	r3, #0
   51138:	beq	5133c <__assert_fail@plt+0x3ec50>
   5113c:	b	51610 <__assert_fail@plt+0x3ef24>
   51140:	ldr	r3, [fp, #-112]	; 0xffffff90
   51144:	cmp	r3, #4
   51148:	ldrls	pc, [pc, r3, lsl #2]
   5114c:	b	512d4 <__assert_fail@plt+0x3ebe8>
   51150:	andeq	r1, r5, r4, ror #2
   51154:	andeq	r1, r5, r8, ror r1
   51158:	andeq	r1, r5, r8, lsr #4
   5115c:	andeq	r1, r5, ip, ror #4
   51160:	ldrdeq	r1, [r5], -r4
   51164:	ldrb	r3, [fp, #-108]	; 0xffffff94
   51168:	mov	r1, r3
   5116c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   51170:	bl	44860 <__assert_fail@plt+0x32174>
   51174:	b	5133c <__assert_fail@plt+0x3ec50>
   51178:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5117c:	ldr	r3, [r3, #20]
   51180:	ldr	r2, [fp, #-8]
   51184:	cmp	r2, r3
   51188:	moveq	r3, #1
   5118c:	movne	r3, #0
   51190:	uxtb	r3, r3
   51194:	cmp	r3, #0
   51198:	beq	511f8 <__assert_fail@plt+0x3eb0c>
   5119c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   511a0:	ldr	r3, [r3, #20]
   511a4:	lsl	r3, r3, #1
   511a8:	add	r3, r3, #1
   511ac:	str	r3, [fp, #-8]
   511b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   511b4:	ldr	r2, [r3]
   511b8:	ldr	r3, [fp, #-8]
   511bc:	lsl	r3, r3, #2
   511c0:	mov	r1, r3
   511c4:	mov	r0, r2
   511c8:	bl	446e8 <__assert_fail@plt+0x31ffc>
   511cc:	str	r0, [fp, #-76]	; 0xffffffb4
   511d0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   511d4:	cmp	r3, #0
   511d8:	moveq	r3, #1
   511dc:	movne	r3, #0
   511e0:	uxtb	r3, r3
   511e4:	cmp	r3, #0
   511e8:	bne	515e0 <__assert_fail@plt+0x3eef4>
   511ec:	ldr	r3, [fp, #-68]	; 0xffffffbc
   511f0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   511f4:	str	r2, [r3]
   511f8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   511fc:	ldr	r2, [r3]
   51200:	ldr	r3, [fp, #-68]	; 0xffffffbc
   51204:	ldr	r3, [r3, #20]
   51208:	add	r0, r3, #1
   5120c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   51210:	str	r0, [r1, #20]
   51214:	lsl	r3, r3, #2
   51218:	add	r3, r2, r3
   5121c:	ldr	r2, [fp, #-108]	; 0xffffff94
   51220:	str	r2, [r3]
   51224:	b	5133c <__assert_fail@plt+0x3ec50>
   51228:	ldr	r3, [fp, #-108]	; 0xffffff94
   5122c:	sub	r2, fp, #100	; 0x64
   51230:	ldr	r1, [fp, #-68]	; 0xffffffbc
   51234:	ldr	r0, [fp, #-64]	; 0xffffffc0
   51238:	bl	5197c <__assert_fail@plt+0x3f290>
   5123c:	mov	r2, r0
   51240:	ldr	r3, [fp, #4]
   51244:	str	r2, [r3]
   51248:	ldr	r3, [fp, #4]
   5124c:	ldr	r3, [r3]
   51250:	cmp	r3, #0
   51254:	movne	r3, #1
   51258:	moveq	r3, #0
   5125c:	uxtb	r3, r3
   51260:	cmp	r3, #0
   51264:	beq	51330 <__assert_fail@plt+0x3ec44>
   51268:	b	51610 <__assert_fail@plt+0x3ef24>
   5126c:	ldr	r1, [fp, #-108]	; 0xffffff94
   51270:	sub	r2, fp, #92	; 0x5c
   51274:	ldr	r3, [fp, #-60]	; 0xffffffc4
   51278:	str	r3, [sp, #12]
   5127c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   51280:	str	r3, [sp, #8]
   51284:	ldr	r3, [fp, #-52]	; 0xffffffcc
   51288:	str	r3, [sp, #4]
   5128c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   51290:	str	r3, [sp]
   51294:	mov	r3, r1
   51298:	ldr	r1, [fp, #-68]	; 0xffffffbc
   5129c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   512a0:	bl	50c14 <__assert_fail@plt+0x3e528>
   512a4:	mov	r2, r0
   512a8:	ldr	r3, [fp, #4]
   512ac:	str	r2, [r3]
   512b0:	ldr	r3, [fp, #4]
   512b4:	ldr	r3, [r3]
   512b8:	cmp	r3, #0
   512bc:	movne	r3, #1
   512c0:	moveq	r3, #0
   512c4:	uxtb	r3, r3
   512c8:	cmp	r3, #0
   512cc:	beq	51338 <__assert_fail@plt+0x3ec4c>
   512d0:	b	51610 <__assert_fail@plt+0x3ef24>
   512d4:	ldr	r3, [fp, #-200]	; 0xffffff38
   512d8:	ldr	r0, [r3, #64]	; 0x40
   512dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   512e0:	sub	r1, fp, #104	; 0x68
   512e4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   512e8:	str	r2, [sp, #4]
   512ec:	str	r3, [sp]
   512f0:	mov	r3, r1
   512f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   512f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   512fc:	bl	519f4 <__assert_fail@plt+0x3f308>
   51300:	mov	r2, r0
   51304:	ldr	r3, [fp, #4]
   51308:	str	r2, [r3]
   5130c:	ldr	r3, [fp, #4]
   51310:	ldr	r3, [r3]
   51314:	cmp	r3, #0
   51318:	movne	r3, #1
   5131c:	moveq	r3, #0
   51320:	uxtb	r3, r3
   51324:	cmp	r3, #0
   51328:	bne	5160c <__assert_fail@plt+0x3ef20>
   5132c:	b	5133c <__assert_fail@plt+0x3ec50>
   51330:	nop	{0}
   51334:	b	5133c <__assert_fail@plt+0x3ec50>
   51338:	nop	{0}
   5133c:	ldr	r3, [fp, #-208]	; 0xffffff30
   51340:	ldrb	r3, [r3, #4]
   51344:	cmp	r3, #2
   51348:	moveq	r3, #1
   5134c:	movne	r3, #0
   51350:	uxtb	r3, r3
   51354:	cmp	r3, #0
   51358:	beq	51370 <__assert_fail@plt+0x3ec84>
   5135c:	ldr	r3, [fp, #4]
   51360:	mov	r2, #7
   51364:	str	r2, [r3]
   51368:	nop	{0}
   5136c:	b	51610 <__assert_fail@plt+0x3ef24>
   51370:	ldr	r3, [fp, #-208]	; 0xffffff30
   51374:	ldrb	r3, [r3, #4]
   51378:	cmp	r3, #21
   5137c:	bne	50e9c <__assert_fail@plt+0x3e7b0>
   51380:	ldr	r3, [fp, #-200]	; 0xffffff38
   51384:	ldr	r2, [r3, #40]	; 0x28
   51388:	ldr	r3, [fp, #-20]	; 0xffffffec
   5138c:	add	r2, r2, r3
   51390:	ldr	r3, [fp, #-200]	; 0xffffff38
   51394:	str	r2, [r3, #40]	; 0x28
   51398:	ldrb	r3, [fp, #-9]
   5139c:	cmp	r3, #0
   513a0:	bne	513a8 <__assert_fail@plt+0x3ecbc>
   513a4:	b	513b0 <__assert_fail@plt+0x3ecc4>
   513a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   513ac:	bl	44a98 <__assert_fail@plt+0x323ac>
   513b0:	ldr	r3, [fp, #-204]	; 0xffffff34
   513b4:	ldr	r3, [r3, #92]	; 0x5c
   513b8:	cmp	r3, #1
   513bc:	ble	513d4 <__assert_fail@plt+0x3ece8>
   513c0:	ldr	r3, [fp, #-204]	; 0xffffff34
   513c4:	ldr	r3, [r3, #60]	; 0x3c
   513c8:	mov	r1, r3
   513cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   513d0:	bl	44b90 <__assert_fail@plt+0x324a4>
   513d4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   513d8:	ldr	r3, [r3, #20]
   513dc:	cmp	r3, #0
   513e0:	bne	5144c <__assert_fail@plt+0x3ed60>
   513e4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   513e8:	ldr	r3, [r3, #24]
   513ec:	cmp	r3, #0
   513f0:	bne	5144c <__assert_fail@plt+0x3ed60>
   513f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   513f8:	ldr	r3, [r3, #28]
   513fc:	cmp	r3, #0
   51400:	bne	5144c <__assert_fail@plt+0x3ed60>
   51404:	ldr	r3, [fp, #-68]	; 0xffffffbc
   51408:	ldr	r3, [r3, #32]
   5140c:	cmp	r3, #0
   51410:	bne	5144c <__assert_fail@plt+0x3ed60>
   51414:	ldr	r3, [fp, #-204]	; 0xffffff34
   51418:	ldr	r3, [r3, #92]	; 0x5c
   5141c:	cmp	r3, #1
   51420:	ble	51584 <__assert_fail@plt+0x3ee98>
   51424:	ldr	r3, [fp, #-68]	; 0xffffffbc
   51428:	ldr	r3, [r3, #36]	; 0x24
   5142c:	cmp	r3, #0
   51430:	bne	5144c <__assert_fail@plt+0x3ed60>
   51434:	ldr	r3, [fp, #-68]	; 0xffffffbc
   51438:	ldrb	r3, [r3, #16]
   5143c:	and	r3, r3, #1
   51440:	uxtb	r3, r3
   51444:	cmp	r3, #0
   51448:	beq	51584 <__assert_fail@plt+0x3ee98>
   5144c:	ldr	r2, [fp, #-204]	; 0xffffff34
   51450:	ldrb	r3, [r2, #88]	; 0x58
   51454:	orr	r3, r3, #2
   51458:	strb	r3, [r2, #88]	; 0x58
   5145c:	mov	r3, #6
   51460:	strb	r3, [fp, #-84]	; 0xffffffac
   51464:	ldr	r3, [fp, #-68]	; 0xffffffbc
   51468:	str	r3, [fp, #-88]	; 0xffffffa8
   5146c:	sub	r3, fp, #88	; 0x58
   51470:	mov	r2, #0
   51474:	mov	r1, #0
   51478:	ldr	r0, [fp, #-204]	; 0xffffff34
   5147c:	bl	52c4c <__assert_fail@plt+0x40560>
   51480:	str	r0, [fp, #-80]	; 0xffffffb0
   51484:	ldr	r3, [fp, #-80]	; 0xffffffb0
   51488:	cmp	r3, #0
   5148c:	moveq	r3, #1
   51490:	movne	r3, #0
   51494:	uxtb	r3, r3
   51498:	cmp	r3, #0
   5149c:	bne	515e8 <__assert_fail@plt+0x3eefc>
   514a0:	mov	r3, #0
   514a4:	str	r3, [fp, #-36]	; 0xffffffdc
   514a8:	b	514d4 <__assert_fail@plt+0x3ede8>
   514ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   514b0:	lsl	r3, r3, #2
   514b4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   514b8:	add	r3, r2, r3
   514bc:	ldr	r3, [r3]
   514c0:	cmp	r3, #0
   514c4:	bne	514e4 <__assert_fail@plt+0x3edf8>
   514c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   514cc:	add	r3, r3, #1
   514d0:	str	r3, [fp, #-36]	; 0xffffffdc
   514d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   514d8:	cmp	r3, #7
   514dc:	ble	514ac <__assert_fail@plt+0x3edc0>
   514e0:	b	514e8 <__assert_fail@plt+0x3edfc>
   514e4:	nop	{0}
   514e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   514ec:	cmp	r3, #7
   514f0:	bgt	51570 <__assert_fail@plt+0x3ee84>
   514f4:	mov	r3, #3
   514f8:	strb	r3, [fp, #-84]	; 0xffffffac
   514fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   51500:	str	r3, [fp, #-88]	; 0xffffffa8
   51504:	sub	r3, fp, #88	; 0x58
   51508:	mov	r2, #0
   5150c:	mov	r1, #0
   51510:	ldr	r0, [fp, #-204]	; 0xffffff34
   51514:	bl	52c4c <__assert_fail@plt+0x40560>
   51518:	str	r0, [fp, #-16]
   5151c:	ldr	r3, [fp, #-16]
   51520:	cmp	r3, #0
   51524:	moveq	r3, #1
   51528:	movne	r3, #0
   5152c:	uxtb	r3, r3
   51530:	cmp	r3, #0
   51534:	bne	515f0 <__assert_fail@plt+0x3ef04>
   51538:	mov	r3, #10
   5153c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   51540:	ldr	r1, [fp, #-16]
   51544:	ldr	r0, [fp, #-204]	; 0xffffff34
   51548:	bl	52be4 <__assert_fail@plt+0x404f8>
   5154c:	str	r0, [fp, #-16]
   51550:	ldr	r3, [fp, #-16]
   51554:	cmp	r3, #0
   51558:	moveq	r3, #1
   5155c:	movne	r3, #0
   51560:	uxtb	r3, r3
   51564:	cmp	r3, #0
   51568:	beq	515d4 <__assert_fail@plt+0x3eee8>
   5156c:	b	515fc <__assert_fail@plt+0x3ef10>
   51570:	ldr	r0, [fp, #-64]	; 0xffffffc0
   51574:	bl	3fe0c <__assert_fail@plt+0x2d720>
   51578:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5157c:	str	r3, [fp, #-16]
   51580:	b	515d4 <__assert_fail@plt+0x3eee8>
   51584:	ldr	r0, [fp, #-68]	; 0xffffffbc
   51588:	bl	52b74 <__assert_fail@plt+0x40488>
   5158c:	mov	r3, #3
   51590:	strb	r3, [fp, #-84]	; 0xffffffac
   51594:	ldr	r3, [fp, #-64]	; 0xffffffc0
   51598:	str	r3, [fp, #-88]	; 0xffffffa8
   5159c:	sub	r3, fp, #88	; 0x58
   515a0:	mov	r2, #0
   515a4:	mov	r1, #0
   515a8:	ldr	r0, [fp, #-204]	; 0xffffff34
   515ac:	bl	52c4c <__assert_fail@plt+0x40560>
   515b0:	str	r0, [fp, #-16]
   515b4:	ldr	r3, [fp, #-16]
   515b8:	cmp	r3, #0
   515bc:	moveq	r3, #1
   515c0:	movne	r3, #0
   515c4:	uxtb	r3, r3
   515c8:	cmp	r3, #0
   515cc:	bne	515f8 <__assert_fail@plt+0x3ef0c>
   515d0:	b	515d8 <__assert_fail@plt+0x3eeec>
   515d4:	nop	{0}
   515d8:	ldr	r3, [fp, #-16]
   515dc:	b	51624 <__assert_fail@plt+0x3ef38>
   515e0:	nop	{0}
   515e4:	b	515fc <__assert_fail@plt+0x3ef10>
   515e8:	nop	{0}
   515ec:	b	515fc <__assert_fail@plt+0x3ef10>
   515f0:	nop	{0}
   515f4:	b	515fc <__assert_fail@plt+0x3ef10>
   515f8:	nop	{0}
   515fc:	ldr	r3, [fp, #4]
   51600:	mov	r2, #12
   51604:	str	r2, [r3]
   51608:	b	51610 <__assert_fail@plt+0x3ef24>
   5160c:	nop	{0}
   51610:	ldr	r0, [fp, #-64]	; 0xffffffc0
   51614:	bl	3fe0c <__assert_fail@plt+0x2d720>
   51618:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5161c:	bl	52b74 <__assert_fail@plt+0x40488>
   51620:	mov	r3, #0
   51624:	mov	r0, r3
   51628:	sub	sp, fp, #4
   5162c:	ldr	fp, [sp]
   51630:	add	sp, sp, #4
   51634:	pop	{pc}		; (ldr pc, [sp], #4)
   51638:	str	fp, [sp, #-8]!
   5163c:	str	lr, [sp, #4]
   51640:	add	fp, sp, #4
   51644:	sub	sp, sp, #32
   51648:	str	r0, [fp, #-24]	; 0xffffffe8
   5164c:	str	r1, [fp, #-28]	; 0xffffffe4
   51650:	str	r2, [fp, #-32]	; 0xffffffe0
   51654:	str	r3, [fp, #-36]	; 0xffffffdc
   51658:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5165c:	ldr	r3, [r3, #40]	; 0x28
   51660:	mov	r1, r3
   51664:	ldr	r0, [fp, #-28]	; 0xffffffe4
   51668:	bl	44c18 <__assert_fail@plt+0x3252c>
   5166c:	str	r0, [fp, #-8]
   51670:	ldr	r3, [fp, #-8]
   51674:	cmp	r3, #1
   51678:	ble	516c8 <__assert_fail@plt+0x3efdc>
   5167c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51680:	mov	r2, #1
   51684:	str	r2, [r3]
   51688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5168c:	ldr	r3, [r3, #40]	; 0x28
   51690:	mov	r1, r3
   51694:	ldr	r0, [fp, #-28]	; 0xffffffe4
   51698:	bl	44cbc <__assert_fail@plt+0x325d0>
   5169c:	mov	r2, r0
   516a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   516a4:	str	r2, [r3, #4]
   516a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   516ac:	ldr	r2, [r3, #40]	; 0x28
   516b0:	ldr	r3, [fp, #-8]
   516b4:	add	r2, r2, r3
   516b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   516bc:	str	r2, [r3, #40]	; 0x28
   516c0:	mov	r3, #0
   516c4:	b	517a4 <__assert_fail@plt+0x3f0b8>
   516c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   516cc:	ldr	r2, [r3, #40]	; 0x28
   516d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   516d4:	add	r2, r2, r3
   516d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   516dc:	str	r2, [r3, #40]	; 0x28
   516e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   516e4:	ldrb	r3, [r3, #4]
   516e8:	cmp	r3, #26
   516ec:	beq	51710 <__assert_fail@plt+0x3f024>
   516f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   516f4:	ldrb	r3, [r3, #4]
   516f8:	cmp	r3, #30
   516fc:	beq	51710 <__assert_fail@plt+0x3f024>
   51700:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51704:	ldrb	r3, [r3, #4]
   51708:	cmp	r3, #28
   5170c:	bne	51728 <__assert_fail@plt+0x3f03c>
   51710:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51714:	ldr	r1, [fp, #-28]	; 0xffffffe4
   51718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5171c:	bl	517b8 <__assert_fail@plt+0x3f0cc>
   51720:	mov	r3, r0
   51724:	b	517a4 <__assert_fail@plt+0x3f0b8>
   51728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5172c:	ldrb	r3, [r3, #4]
   51730:	cmp	r3, #22
   51734:	moveq	r3, #1
   51738:	movne	r3, #0
   5173c:	uxtb	r3, r3
   51740:	cmp	r3, #0
   51744:	beq	51784 <__assert_fail@plt+0x3f098>
   51748:	ldrb	r3, [fp, #12]
   5174c:	eor	r3, r3, #1
   51750:	uxtb	r3, r3
   51754:	cmp	r3, #0
   51758:	beq	51784 <__assert_fail@plt+0x3f098>
   5175c:	sub	r3, fp, #16
   51760:	ldr	r2, [fp, #8]
   51764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   51768:	mov	r0, r3
   5176c:	bl	4ec8c <__assert_fail@plt+0x3c5a0>
   51770:	ldrb	r3, [fp, #-12]
   51774:	cmp	r3, #21
   51778:	beq	51784 <__assert_fail@plt+0x3f098>
   5177c:	mov	r3, #11
   51780:	b	517a4 <__assert_fail@plt+0x3f0b8>
   51784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51788:	mov	r2, #0
   5178c:	str	r2, [r3]
   51790:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51794:	ldrb	r2, [r3]
   51798:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5179c:	strb	r2, [r3, #4]
   517a0:	mov	r3, #0
   517a4:	mov	r0, r3
   517a8:	sub	sp, fp, #4
   517ac:	ldr	fp, [sp]
   517b0:	add	sp, sp, #4
   517b4:	pop	{pc}		; (ldr pc, [sp], #4)
   517b8:	str	fp, [sp, #-8]!
   517bc:	str	lr, [sp, #4]
   517c0:	add	fp, sp, #4
   517c4:	sub	sp, sp, #32
   517c8:	str	r0, [fp, #-24]	; 0xffffffe8
   517cc:	str	r1, [fp, #-28]	; 0xffffffe4
   517d0:	str	r2, [fp, #-32]	; 0xffffffe0
   517d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   517d8:	ldrb	r3, [r3]
   517dc:	strb	r3, [fp, #-13]
   517e0:	mov	r3, #0
   517e4:	str	r3, [fp, #-12]
   517e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   517ec:	ldr	r2, [r3, #56]	; 0x38
   517f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   517f4:	ldr	r3, [r3, #40]	; 0x28
   517f8:	cmp	r2, r3
   517fc:	bgt	51808 <__assert_fail@plt+0x3f11c>
   51800:	mov	r3, #7
   51804:	b	51968 <__assert_fail@plt+0x3f27c>
   51808:	ldr	r3, [fp, #-12]
   5180c:	cmp	r3, #31
   51810:	ble	5181c <__assert_fail@plt+0x3f130>
   51814:	mov	r3, #7
   51818:	b	51968 <__assert_fail@plt+0x3f27c>
   5181c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51820:	ldrb	r3, [r3, #4]
   51824:	cmp	r3, #30
   51828:	bne	51840 <__assert_fail@plt+0x3f154>
   5182c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   51830:	bl	473e8 <__assert_fail@plt+0x34cfc>
   51834:	mov	r3, r0
   51838:	strb	r3, [fp, #-5]
   5183c:	b	51868 <__assert_fail@plt+0x3f17c>
   51840:	ldr	r3, [fp, #-28]	; 0xffffffe4
   51844:	ldr	r2, [r3, #4]
   51848:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5184c:	ldr	r3, [r3, #40]	; 0x28
   51850:	add	r0, r3, #1
   51854:	ldr	r1, [fp, #-28]	; 0xffffffe4
   51858:	str	r0, [r1, #40]	; 0x28
   5185c:	add	r3, r2, r3
   51860:	ldrb	r3, [r3]
   51864:	strb	r3, [fp, #-5]
   51868:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5186c:	ldr	r2, [r3, #56]	; 0x38
   51870:	ldr	r3, [fp, #-28]	; 0xffffffe4
   51874:	ldr	r3, [r3, #40]	; 0x28
   51878:	cmp	r2, r3
   5187c:	bgt	51888 <__assert_fail@plt+0x3f19c>
   51880:	mov	r3, #7
   51884:	b	51968 <__assert_fail@plt+0x3f27c>
   51888:	ldrb	r2, [fp, #-5]
   5188c:	ldrb	r3, [fp, #-13]
   51890:	cmp	r2, r3
   51894:	bne	518b8 <__assert_fail@plt+0x3f1cc>
   51898:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5189c:	ldr	r3, [r3, #4]
   518a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   518a4:	ldr	r2, [r2, #40]	; 0x28
   518a8:	add	r3, r3, r2
   518ac:	ldrb	r3, [r3]
   518b0:	cmp	r3, #93	; 0x5d
   518b4:	beq	518e0 <__assert_fail@plt+0x3f1f4>
   518b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   518bc:	ldr	r2, [r3, #4]
   518c0:	ldr	r3, [fp, #-12]
   518c4:	add	r3, r2, r3
   518c8:	ldrb	r2, [fp, #-5]
   518cc:	strb	r2, [r3]
   518d0:	ldr	r3, [fp, #-12]
   518d4:	add	r3, r3, #1
   518d8:	str	r3, [fp, #-12]
   518dc:	b	51808 <__assert_fail@plt+0x3f11c>
   518e0:	nop	{0}
   518e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   518e8:	ldr	r3, [r3, #40]	; 0x28
   518ec:	add	r2, r3, #1
   518f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   518f4:	str	r2, [r3, #40]	; 0x28
   518f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   518fc:	ldr	r2, [r3, #4]
   51900:	ldr	r3, [fp, #-12]
   51904:	add	r3, r2, r3
   51908:	mov	r2, #0
   5190c:	strb	r2, [r3]
   51910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51914:	ldrb	r3, [r3, #4]
   51918:	cmp	r3, #28
   5191c:	beq	51940 <__assert_fail@plt+0x3f254>
   51920:	cmp	r3, #30
   51924:	beq	51950 <__assert_fail@plt+0x3f264>
   51928:	cmp	r3, #26
   5192c:	bne	51960 <__assert_fail@plt+0x3f274>
   51930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51934:	mov	r2, #3
   51938:	str	r2, [r3]
   5193c:	b	51964 <__assert_fail@plt+0x3f278>
   51940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51944:	mov	r2, #2
   51948:	str	r2, [r3]
   5194c:	b	51964 <__assert_fail@plt+0x3f278>
   51950:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51954:	mov	r2, #4
   51958:	str	r2, [r3]
   5195c:	b	51964 <__assert_fail@plt+0x3f278>
   51960:	nop	{0}
   51964:	mov	r3, #0
   51968:	mov	r0, r3
   5196c:	sub	sp, fp, #4
   51970:	ldr	fp, [sp]
   51974:	add	sp, sp, #4
   51978:	pop	{pc}		; (ldr pc, [sp], #4)
   5197c:	str	fp, [sp, #-8]!
   51980:	str	lr, [sp, #4]
   51984:	add	fp, sp, #4
   51988:	sub	sp, sp, #16
   5198c:	str	r0, [fp, #-8]
   51990:	str	r1, [fp, #-12]
   51994:	str	r2, [fp, #-16]
   51998:	str	r3, [fp, #-20]	; 0xffffffec
   5199c:	ldr	r0, [fp, #-20]	; 0xffffffec
   519a0:	bl	123bc <strlen@plt>
   519a4:	mov	r3, r0
   519a8:	cmp	r3, #1
   519ac:	movne	r3, #1
   519b0:	moveq	r3, #0
   519b4:	uxtb	r3, r3
   519b8:	cmp	r3, #0
   519bc:	beq	519c8 <__assert_fail@plt+0x3f2dc>
   519c0:	mov	r3, #3
   519c4:	b	519e0 <__assert_fail@plt+0x3f2f4>
   519c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   519cc:	ldrb	r3, [r3]
   519d0:	mov	r1, r3
   519d4:	ldr	r0, [fp, #-8]
   519d8:	bl	44860 <__assert_fail@plt+0x32174>
   519dc:	mov	r3, #0
   519e0:	mov	r0, r3
   519e4:	sub	sp, fp, #4
   519e8:	ldr	fp, [sp]
   519ec:	add	sp, sp, #4
   519f0:	pop	{pc}		; (ldr pc, [sp], #4)
   519f4:	str	r4, [sp, #-12]!
   519f8:	str	fp, [sp, #4]
   519fc:	str	lr, [sp, #8]
   51a00:	add	fp, sp, #8
   51a04:	sub	sp, sp, #36	; 0x24
   51a08:	str	r0, [fp, #-32]	; 0xffffffe0
   51a0c:	str	r1, [fp, #-36]	; 0xffffffdc
   51a10:	str	r2, [fp, #-40]	; 0xffffffd8
   51a14:	str	r3, [fp, #-44]	; 0xffffffd4
   51a18:	ldr	r3, [fp, #4]
   51a1c:	str	r3, [fp, #-20]	; 0xffffffec
   51a20:	ldr	r3, [fp, #8]
   51a24:	and	r3, r3, #4194304	; 0x400000
   51a28:	cmp	r3, #0
   51a2c:	beq	51a74 <__assert_fail@plt+0x3f388>
   51a30:	movw	r1, #47876	; 0xbb04
   51a34:	movt	r1, #6
   51a38:	ldr	r0, [fp, #-20]	; 0xffffffec
   51a3c:	bl	11ffc <strcmp@plt>
   51a40:	mov	r3, r0
   51a44:	cmp	r3, #0
   51a48:	beq	51a68 <__assert_fail@plt+0x3f37c>
   51a4c:	movw	r1, #47884	; 0xbb0c
   51a50:	movt	r1, #6
   51a54:	ldr	r0, [fp, #-20]	; 0xffffffec
   51a58:	bl	11ffc <strcmp@plt>
   51a5c:	mov	r3, r0
   51a60:	cmp	r3, #0
   51a64:	bne	51a74 <__assert_fail@plt+0x3f388>
   51a68:	movw	r3, #47892	; 0xbb14
   51a6c:	movt	r3, #6
   51a70:	str	r3, [fp, #-20]	; 0xffffffec
   51a74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   51a78:	ldr	r2, [r3]
   51a7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51a80:	ldr	r3, [r3, #36]	; 0x24
   51a84:	cmp	r2, r3
   51a88:	moveq	r3, #1
   51a8c:	movne	r3, #0
   51a90:	uxtb	r3, r3
   51a94:	cmp	r3, #0
   51a98:	beq	51b0c <__assert_fail@plt+0x3f420>
   51a9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51aa0:	ldr	r3, [r3, #36]	; 0x24
   51aa4:	lsl	r3, r3, #1
   51aa8:	add	r3, r3, #1
   51aac:	str	r3, [fp, #-24]	; 0xffffffe8
   51ab0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51ab4:	ldr	r2, [r3, #12]
   51ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   51abc:	lsl	r3, r3, #2
   51ac0:	mov	r1, r3
   51ac4:	mov	r0, r2
   51ac8:	bl	446e8 <__assert_fail@plt+0x31ffc>
   51acc:	str	r0, [fp, #-28]	; 0xffffffe4
   51ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   51ad4:	cmp	r3, #0
   51ad8:	moveq	r3, #1
   51adc:	movne	r3, #0
   51ae0:	uxtb	r3, r3
   51ae4:	cmp	r3, #0
   51ae8:	beq	51af4 <__assert_fail@plt+0x3f408>
   51aec:	mov	r3, #12
   51af0:	b	5274c <__assert_fail@plt+0x40060>
   51af4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51af8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   51afc:	str	r2, [r3, #12]
   51b00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   51b04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   51b08:	str	r2, [r3]
   51b0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51b10:	ldr	r2, [r3, #12]
   51b14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   51b18:	ldr	r3, [r3, #36]	; 0x24
   51b1c:	add	r0, r3, #1
   51b20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   51b24:	str	r0, [r1, #36]	; 0x24
   51b28:	lsl	r3, r3, #2
   51b2c:	add	r4, r2, r3
   51b30:	ldr	r0, [fp, #-20]	; 0xffffffec
   51b34:	bl	11f9c <wctype@plt>
   51b38:	mov	r3, r0
   51b3c:	str	r3, [r4]
   51b40:	movw	r1, #47856	; 0xbaf0
   51b44:	movt	r1, #6
   51b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   51b4c:	bl	11ffc <strcmp@plt>
   51b50:	mov	r3, r0
   51b54:	cmp	r3, #0
   51b58:	bne	51c40 <__assert_fail@plt+0x3f554>
   51b5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51b60:	cmp	r3, #0
   51b64:	movne	r3, #1
   51b68:	moveq	r3, #0
   51b6c:	uxtb	r3, r3
   51b70:	cmp	r3, #0
   51b74:	beq	51be4 <__assert_fail@plt+0x3f4f8>
   51b78:	mov	r3, #0
   51b7c:	str	r3, [fp, #-16]
   51b80:	b	51bd4 <__assert_fail@plt+0x3f4e8>
   51b84:	bl	12368 <__ctype_b_loc@plt>
   51b88:	mov	r3, r0
   51b8c:	ldr	r2, [r3]
   51b90:	ldr	r3, [fp, #-16]
   51b94:	lsl	r3, r3, #1
   51b98:	add	r3, r2, r3
   51b9c:	ldrh	r3, [r3]
   51ba0:	and	r3, r3, #8
   51ba4:	cmp	r3, #0
   51ba8:	beq	51bc8 <__assert_fail@plt+0x3f4dc>
   51bac:	ldr	r3, [fp, #-16]
   51bb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51bb4:	add	r3, r2, r3
   51bb8:	ldrb	r3, [r3]
   51bbc:	mov	r1, r3
   51bc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51bc4:	bl	44860 <__assert_fail@plt+0x32174>
   51bc8:	ldr	r3, [fp, #-16]
   51bcc:	add	r3, r3, #1
   51bd0:	str	r3, [fp, #-16]
   51bd4:	ldr	r3, [fp, #-16]
   51bd8:	cmp	r3, #255	; 0xff
   51bdc:	ble	51b84 <__assert_fail@plt+0x3f498>
   51be0:	b	52748 <__assert_fail@plt+0x4005c>
   51be4:	mov	r3, #0
   51be8:	str	r3, [fp, #-16]
   51bec:	b	51c30 <__assert_fail@plt+0x3f544>
   51bf0:	bl	12368 <__ctype_b_loc@plt>
   51bf4:	mov	r3, r0
   51bf8:	ldr	r2, [r3]
   51bfc:	ldr	r3, [fp, #-16]
   51c00:	lsl	r3, r3, #1
   51c04:	add	r3, r2, r3
   51c08:	ldrh	r3, [r3]
   51c0c:	and	r3, r3, #8
   51c10:	cmp	r3, #0
   51c14:	beq	51c24 <__assert_fail@plt+0x3f538>
   51c18:	ldr	r1, [fp, #-16]
   51c1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51c20:	bl	44860 <__assert_fail@plt+0x32174>
   51c24:	ldr	r3, [fp, #-16]
   51c28:	add	r3, r3, #1
   51c2c:	str	r3, [fp, #-16]
   51c30:	ldr	r3, [fp, #-16]
   51c34:	cmp	r3, #255	; 0xff
   51c38:	ble	51bf0 <__assert_fail@plt+0x3f504>
   51c3c:	b	52748 <__assert_fail@plt+0x4005c>
   51c40:	movw	r1, #47900	; 0xbb1c
   51c44:	movt	r1, #6
   51c48:	ldr	r0, [fp, #-20]	; 0xffffffec
   51c4c:	bl	11ffc <strcmp@plt>
   51c50:	mov	r3, r0
   51c54:	cmp	r3, #0
   51c58:	bne	51d40 <__assert_fail@plt+0x3f654>
   51c5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51c60:	cmp	r3, #0
   51c64:	movne	r3, #1
   51c68:	moveq	r3, #0
   51c6c:	uxtb	r3, r3
   51c70:	cmp	r3, #0
   51c74:	beq	51ce4 <__assert_fail@plt+0x3f5f8>
   51c78:	mov	r3, #0
   51c7c:	str	r3, [fp, #-16]
   51c80:	b	51cd4 <__assert_fail@plt+0x3f5e8>
   51c84:	bl	12368 <__ctype_b_loc@plt>
   51c88:	mov	r3, r0
   51c8c:	ldr	r2, [r3]
   51c90:	ldr	r3, [fp, #-16]
   51c94:	lsl	r3, r3, #1
   51c98:	add	r3, r2, r3
   51c9c:	ldrh	r3, [r3]
   51ca0:	and	r3, r3, #2
   51ca4:	cmp	r3, #0
   51ca8:	beq	51cc8 <__assert_fail@plt+0x3f5dc>
   51cac:	ldr	r3, [fp, #-16]
   51cb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51cb4:	add	r3, r2, r3
   51cb8:	ldrb	r3, [r3]
   51cbc:	mov	r1, r3
   51cc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51cc4:	bl	44860 <__assert_fail@plt+0x32174>
   51cc8:	ldr	r3, [fp, #-16]
   51ccc:	add	r3, r3, #1
   51cd0:	str	r3, [fp, #-16]
   51cd4:	ldr	r3, [fp, #-16]
   51cd8:	cmp	r3, #255	; 0xff
   51cdc:	ble	51c84 <__assert_fail@plt+0x3f598>
   51ce0:	b	52748 <__assert_fail@plt+0x4005c>
   51ce4:	mov	r3, #0
   51ce8:	str	r3, [fp, #-16]
   51cec:	b	51d30 <__assert_fail@plt+0x3f644>
   51cf0:	bl	12368 <__ctype_b_loc@plt>
   51cf4:	mov	r3, r0
   51cf8:	ldr	r2, [r3]
   51cfc:	ldr	r3, [fp, #-16]
   51d00:	lsl	r3, r3, #1
   51d04:	add	r3, r2, r3
   51d08:	ldrh	r3, [r3]
   51d0c:	and	r3, r3, #2
   51d10:	cmp	r3, #0
   51d14:	beq	51d24 <__assert_fail@plt+0x3f638>
   51d18:	ldr	r1, [fp, #-16]
   51d1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51d20:	bl	44860 <__assert_fail@plt+0x32174>
   51d24:	ldr	r3, [fp, #-16]
   51d28:	add	r3, r3, #1
   51d2c:	str	r3, [fp, #-16]
   51d30:	ldr	r3, [fp, #-16]
   51d34:	cmp	r3, #255	; 0xff
   51d38:	ble	51cf0 <__assert_fail@plt+0x3f604>
   51d3c:	b	52748 <__assert_fail@plt+0x4005c>
   51d40:	movw	r1, #47884	; 0xbb0c
   51d44:	movt	r1, #6
   51d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   51d4c:	bl	11ffc <strcmp@plt>
   51d50:	mov	r3, r0
   51d54:	cmp	r3, #0
   51d58:	bne	51e40 <__assert_fail@plt+0x3f754>
   51d5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51d60:	cmp	r3, #0
   51d64:	movne	r3, #1
   51d68:	moveq	r3, #0
   51d6c:	uxtb	r3, r3
   51d70:	cmp	r3, #0
   51d74:	beq	51de4 <__assert_fail@plt+0x3f6f8>
   51d78:	mov	r3, #0
   51d7c:	str	r3, [fp, #-16]
   51d80:	b	51dd4 <__assert_fail@plt+0x3f6e8>
   51d84:	bl	12368 <__ctype_b_loc@plt>
   51d88:	mov	r3, r0
   51d8c:	ldr	r2, [r3]
   51d90:	ldr	r3, [fp, #-16]
   51d94:	lsl	r3, r3, #1
   51d98:	add	r3, r2, r3
   51d9c:	ldrh	r3, [r3]
   51da0:	and	r3, r3, #512	; 0x200
   51da4:	cmp	r3, #0
   51da8:	beq	51dc8 <__assert_fail@plt+0x3f6dc>
   51dac:	ldr	r3, [fp, #-16]
   51db0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51db4:	add	r3, r2, r3
   51db8:	ldrb	r3, [r3]
   51dbc:	mov	r1, r3
   51dc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51dc4:	bl	44860 <__assert_fail@plt+0x32174>
   51dc8:	ldr	r3, [fp, #-16]
   51dcc:	add	r3, r3, #1
   51dd0:	str	r3, [fp, #-16]
   51dd4:	ldr	r3, [fp, #-16]
   51dd8:	cmp	r3, #255	; 0xff
   51ddc:	ble	51d84 <__assert_fail@plt+0x3f698>
   51de0:	b	52748 <__assert_fail@plt+0x4005c>
   51de4:	mov	r3, #0
   51de8:	str	r3, [fp, #-16]
   51dec:	b	51e30 <__assert_fail@plt+0x3f744>
   51df0:	bl	12368 <__ctype_b_loc@plt>
   51df4:	mov	r3, r0
   51df8:	ldr	r2, [r3]
   51dfc:	ldr	r3, [fp, #-16]
   51e00:	lsl	r3, r3, #1
   51e04:	add	r3, r2, r3
   51e08:	ldrh	r3, [r3]
   51e0c:	and	r3, r3, #512	; 0x200
   51e10:	cmp	r3, #0
   51e14:	beq	51e24 <__assert_fail@plt+0x3f738>
   51e18:	ldr	r1, [fp, #-16]
   51e1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51e20:	bl	44860 <__assert_fail@plt+0x32174>
   51e24:	ldr	r3, [fp, #-16]
   51e28:	add	r3, r3, #1
   51e2c:	str	r3, [fp, #-16]
   51e30:	ldr	r3, [fp, #-16]
   51e34:	cmp	r3, #255	; 0xff
   51e38:	ble	51df0 <__assert_fail@plt+0x3f704>
   51e3c:	b	52748 <__assert_fail@plt+0x4005c>
   51e40:	movw	r1, #47868	; 0xbafc
   51e44:	movt	r1, #6
   51e48:	ldr	r0, [fp, #-20]	; 0xffffffec
   51e4c:	bl	11ffc <strcmp@plt>
   51e50:	mov	r3, r0
   51e54:	cmp	r3, #0
   51e58:	bne	51f40 <__assert_fail@plt+0x3f854>
   51e5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51e60:	cmp	r3, #0
   51e64:	movne	r3, #1
   51e68:	moveq	r3, #0
   51e6c:	uxtb	r3, r3
   51e70:	cmp	r3, #0
   51e74:	beq	51ee4 <__assert_fail@plt+0x3f7f8>
   51e78:	mov	r3, #0
   51e7c:	str	r3, [fp, #-16]
   51e80:	b	51ed4 <__assert_fail@plt+0x3f7e8>
   51e84:	bl	12368 <__ctype_b_loc@plt>
   51e88:	mov	r3, r0
   51e8c:	ldr	r2, [r3]
   51e90:	ldr	r3, [fp, #-16]
   51e94:	lsl	r3, r3, #1
   51e98:	add	r3, r2, r3
   51e9c:	ldrh	r3, [r3]
   51ea0:	and	r3, r3, #8192	; 0x2000
   51ea4:	cmp	r3, #0
   51ea8:	beq	51ec8 <__assert_fail@plt+0x3f7dc>
   51eac:	ldr	r3, [fp, #-16]
   51eb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51eb4:	add	r3, r2, r3
   51eb8:	ldrb	r3, [r3]
   51ebc:	mov	r1, r3
   51ec0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51ec4:	bl	44860 <__assert_fail@plt+0x32174>
   51ec8:	ldr	r3, [fp, #-16]
   51ecc:	add	r3, r3, #1
   51ed0:	str	r3, [fp, #-16]
   51ed4:	ldr	r3, [fp, #-16]
   51ed8:	cmp	r3, #255	; 0xff
   51edc:	ble	51e84 <__assert_fail@plt+0x3f798>
   51ee0:	b	52748 <__assert_fail@plt+0x4005c>
   51ee4:	mov	r3, #0
   51ee8:	str	r3, [fp, #-16]
   51eec:	b	51f30 <__assert_fail@plt+0x3f844>
   51ef0:	bl	12368 <__ctype_b_loc@plt>
   51ef4:	mov	r3, r0
   51ef8:	ldr	r2, [r3]
   51efc:	ldr	r3, [fp, #-16]
   51f00:	lsl	r3, r3, #1
   51f04:	add	r3, r2, r3
   51f08:	ldrh	r3, [r3]
   51f0c:	and	r3, r3, #8192	; 0x2000
   51f10:	cmp	r3, #0
   51f14:	beq	51f24 <__assert_fail@plt+0x3f838>
   51f18:	ldr	r1, [fp, #-16]
   51f1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51f20:	bl	44860 <__assert_fail@plt+0x32174>
   51f24:	ldr	r3, [fp, #-16]
   51f28:	add	r3, r3, #1
   51f2c:	str	r3, [fp, #-16]
   51f30:	ldr	r3, [fp, #-16]
   51f34:	cmp	r3, #255	; 0xff
   51f38:	ble	51ef0 <__assert_fail@plt+0x3f804>
   51f3c:	b	52748 <__assert_fail@plt+0x4005c>
   51f40:	movw	r1, #47892	; 0xbb14
   51f44:	movt	r1, #6
   51f48:	ldr	r0, [fp, #-20]	; 0xffffffec
   51f4c:	bl	11ffc <strcmp@plt>
   51f50:	mov	r3, r0
   51f54:	cmp	r3, #0
   51f58:	bne	52040 <__assert_fail@plt+0x3f954>
   51f5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   51f60:	cmp	r3, #0
   51f64:	movne	r3, #1
   51f68:	moveq	r3, #0
   51f6c:	uxtb	r3, r3
   51f70:	cmp	r3, #0
   51f74:	beq	51fe4 <__assert_fail@plt+0x3f8f8>
   51f78:	mov	r3, #0
   51f7c:	str	r3, [fp, #-16]
   51f80:	b	51fd4 <__assert_fail@plt+0x3f8e8>
   51f84:	bl	12368 <__ctype_b_loc@plt>
   51f88:	mov	r3, r0
   51f8c:	ldr	r2, [r3]
   51f90:	ldr	r3, [fp, #-16]
   51f94:	lsl	r3, r3, #1
   51f98:	add	r3, r2, r3
   51f9c:	ldrh	r3, [r3]
   51fa0:	and	r3, r3, #1024	; 0x400
   51fa4:	cmp	r3, #0
   51fa8:	beq	51fc8 <__assert_fail@plt+0x3f8dc>
   51fac:	ldr	r3, [fp, #-16]
   51fb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   51fb4:	add	r3, r2, r3
   51fb8:	ldrb	r3, [r3]
   51fbc:	mov	r1, r3
   51fc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   51fc4:	bl	44860 <__assert_fail@plt+0x32174>
   51fc8:	ldr	r3, [fp, #-16]
   51fcc:	add	r3, r3, #1
   51fd0:	str	r3, [fp, #-16]
   51fd4:	ldr	r3, [fp, #-16]
   51fd8:	cmp	r3, #255	; 0xff
   51fdc:	ble	51f84 <__assert_fail@plt+0x3f898>
   51fe0:	b	52748 <__assert_fail@plt+0x4005c>
   51fe4:	mov	r3, #0
   51fe8:	str	r3, [fp, #-16]
   51fec:	b	52030 <__assert_fail@plt+0x3f944>
   51ff0:	bl	12368 <__ctype_b_loc@plt>
   51ff4:	mov	r3, r0
   51ff8:	ldr	r2, [r3]
   51ffc:	ldr	r3, [fp, #-16]
   52000:	lsl	r3, r3, #1
   52004:	add	r3, r2, r3
   52008:	ldrh	r3, [r3]
   5200c:	and	r3, r3, #1024	; 0x400
   52010:	cmp	r3, #0
   52014:	beq	52024 <__assert_fail@plt+0x3f938>
   52018:	ldr	r1, [fp, #-16]
   5201c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52020:	bl	44860 <__assert_fail@plt+0x32174>
   52024:	ldr	r3, [fp, #-16]
   52028:	add	r3, r3, #1
   5202c:	str	r3, [fp, #-16]
   52030:	ldr	r3, [fp, #-16]
   52034:	cmp	r3, #255	; 0xff
   52038:	ble	51ff0 <__assert_fail@plt+0x3f904>
   5203c:	b	52748 <__assert_fail@plt+0x4005c>
   52040:	movw	r1, #47908	; 0xbb24
   52044:	movt	r1, #6
   52048:	ldr	r0, [fp, #-20]	; 0xffffffec
   5204c:	bl	11ffc <strcmp@plt>
   52050:	mov	r3, r0
   52054:	cmp	r3, #0
   52058:	bne	52140 <__assert_fail@plt+0x3fa54>
   5205c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52060:	cmp	r3, #0
   52064:	movne	r3, #1
   52068:	moveq	r3, #0
   5206c:	uxtb	r3, r3
   52070:	cmp	r3, #0
   52074:	beq	520e4 <__assert_fail@plt+0x3f9f8>
   52078:	mov	r3, #0
   5207c:	str	r3, [fp, #-16]
   52080:	b	520d4 <__assert_fail@plt+0x3f9e8>
   52084:	bl	12368 <__ctype_b_loc@plt>
   52088:	mov	r3, r0
   5208c:	ldr	r2, [r3]
   52090:	ldr	r3, [fp, #-16]
   52094:	lsl	r3, r3, #1
   52098:	add	r3, r2, r3
   5209c:	ldrh	r3, [r3]
   520a0:	and	r3, r3, #2048	; 0x800
   520a4:	cmp	r3, #0
   520a8:	beq	520c8 <__assert_fail@plt+0x3f9dc>
   520ac:	ldr	r3, [fp, #-16]
   520b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   520b4:	add	r3, r2, r3
   520b8:	ldrb	r3, [r3]
   520bc:	mov	r1, r3
   520c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   520c4:	bl	44860 <__assert_fail@plt+0x32174>
   520c8:	ldr	r3, [fp, #-16]
   520cc:	add	r3, r3, #1
   520d0:	str	r3, [fp, #-16]
   520d4:	ldr	r3, [fp, #-16]
   520d8:	cmp	r3, #255	; 0xff
   520dc:	ble	52084 <__assert_fail@plt+0x3f998>
   520e0:	b	52748 <__assert_fail@plt+0x4005c>
   520e4:	mov	r3, #0
   520e8:	str	r3, [fp, #-16]
   520ec:	b	52130 <__assert_fail@plt+0x3fa44>
   520f0:	bl	12368 <__ctype_b_loc@plt>
   520f4:	mov	r3, r0
   520f8:	ldr	r2, [r3]
   520fc:	ldr	r3, [fp, #-16]
   52100:	lsl	r3, r3, #1
   52104:	add	r3, r2, r3
   52108:	ldrh	r3, [r3]
   5210c:	and	r3, r3, #2048	; 0x800
   52110:	cmp	r3, #0
   52114:	beq	52124 <__assert_fail@plt+0x3fa38>
   52118:	ldr	r1, [fp, #-16]
   5211c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52120:	bl	44860 <__assert_fail@plt+0x32174>
   52124:	ldr	r3, [fp, #-16]
   52128:	add	r3, r3, #1
   5212c:	str	r3, [fp, #-16]
   52130:	ldr	r3, [fp, #-16]
   52134:	cmp	r3, #255	; 0xff
   52138:	ble	520f0 <__assert_fail@plt+0x3fa04>
   5213c:	b	52748 <__assert_fail@plt+0x4005c>
   52140:	movw	r1, #47916	; 0xbb2c
   52144:	movt	r1, #6
   52148:	ldr	r0, [fp, #-20]	; 0xffffffec
   5214c:	bl	11ffc <strcmp@plt>
   52150:	mov	r3, r0
   52154:	cmp	r3, #0
   52158:	bne	52240 <__assert_fail@plt+0x3fb54>
   5215c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52160:	cmp	r3, #0
   52164:	movne	r3, #1
   52168:	moveq	r3, #0
   5216c:	uxtb	r3, r3
   52170:	cmp	r3, #0
   52174:	beq	521e4 <__assert_fail@plt+0x3faf8>
   52178:	mov	r3, #0
   5217c:	str	r3, [fp, #-16]
   52180:	b	521d4 <__assert_fail@plt+0x3fae8>
   52184:	bl	12368 <__ctype_b_loc@plt>
   52188:	mov	r3, r0
   5218c:	ldr	r2, [r3]
   52190:	ldr	r3, [fp, #-16]
   52194:	lsl	r3, r3, #1
   52198:	add	r3, r2, r3
   5219c:	ldrh	r3, [r3]
   521a0:	and	r3, r3, #16384	; 0x4000
   521a4:	cmp	r3, #0
   521a8:	beq	521c8 <__assert_fail@plt+0x3fadc>
   521ac:	ldr	r3, [fp, #-16]
   521b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   521b4:	add	r3, r2, r3
   521b8:	ldrb	r3, [r3]
   521bc:	mov	r1, r3
   521c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   521c4:	bl	44860 <__assert_fail@plt+0x32174>
   521c8:	ldr	r3, [fp, #-16]
   521cc:	add	r3, r3, #1
   521d0:	str	r3, [fp, #-16]
   521d4:	ldr	r3, [fp, #-16]
   521d8:	cmp	r3, #255	; 0xff
   521dc:	ble	52184 <__assert_fail@plt+0x3fa98>
   521e0:	b	52748 <__assert_fail@plt+0x4005c>
   521e4:	mov	r3, #0
   521e8:	str	r3, [fp, #-16]
   521ec:	b	52230 <__assert_fail@plt+0x3fb44>
   521f0:	bl	12368 <__ctype_b_loc@plt>
   521f4:	mov	r3, r0
   521f8:	ldr	r2, [r3]
   521fc:	ldr	r3, [fp, #-16]
   52200:	lsl	r3, r3, #1
   52204:	add	r3, r2, r3
   52208:	ldrh	r3, [r3]
   5220c:	and	r3, r3, #16384	; 0x4000
   52210:	cmp	r3, #0
   52214:	beq	52224 <__assert_fail@plt+0x3fb38>
   52218:	ldr	r1, [fp, #-16]
   5221c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52220:	bl	44860 <__assert_fail@plt+0x32174>
   52224:	ldr	r3, [fp, #-16]
   52228:	add	r3, r3, #1
   5222c:	str	r3, [fp, #-16]
   52230:	ldr	r3, [fp, #-16]
   52234:	cmp	r3, #255	; 0xff
   52238:	ble	521f0 <__assert_fail@plt+0x3fb04>
   5223c:	b	52748 <__assert_fail@plt+0x4005c>
   52240:	movw	r1, #47876	; 0xbb04
   52244:	movt	r1, #6
   52248:	ldr	r0, [fp, #-20]	; 0xffffffec
   5224c:	bl	11ffc <strcmp@plt>
   52250:	mov	r3, r0
   52254:	cmp	r3, #0
   52258:	bne	52340 <__assert_fail@plt+0x3fc54>
   5225c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52260:	cmp	r3, #0
   52264:	movne	r3, #1
   52268:	moveq	r3, #0
   5226c:	uxtb	r3, r3
   52270:	cmp	r3, #0
   52274:	beq	522e4 <__assert_fail@plt+0x3fbf8>
   52278:	mov	r3, #0
   5227c:	str	r3, [fp, #-16]
   52280:	b	522d4 <__assert_fail@plt+0x3fbe8>
   52284:	bl	12368 <__ctype_b_loc@plt>
   52288:	mov	r3, r0
   5228c:	ldr	r2, [r3]
   52290:	ldr	r3, [fp, #-16]
   52294:	lsl	r3, r3, #1
   52298:	add	r3, r2, r3
   5229c:	ldrh	r3, [r3]
   522a0:	and	r3, r3, #256	; 0x100
   522a4:	cmp	r3, #0
   522a8:	beq	522c8 <__assert_fail@plt+0x3fbdc>
   522ac:	ldr	r3, [fp, #-16]
   522b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   522b4:	add	r3, r2, r3
   522b8:	ldrb	r3, [r3]
   522bc:	mov	r1, r3
   522c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   522c4:	bl	44860 <__assert_fail@plt+0x32174>
   522c8:	ldr	r3, [fp, #-16]
   522cc:	add	r3, r3, #1
   522d0:	str	r3, [fp, #-16]
   522d4:	ldr	r3, [fp, #-16]
   522d8:	cmp	r3, #255	; 0xff
   522dc:	ble	52284 <__assert_fail@plt+0x3fb98>
   522e0:	b	52748 <__assert_fail@plt+0x4005c>
   522e4:	mov	r3, #0
   522e8:	str	r3, [fp, #-16]
   522ec:	b	52330 <__assert_fail@plt+0x3fc44>
   522f0:	bl	12368 <__ctype_b_loc@plt>
   522f4:	mov	r3, r0
   522f8:	ldr	r2, [r3]
   522fc:	ldr	r3, [fp, #-16]
   52300:	lsl	r3, r3, #1
   52304:	add	r3, r2, r3
   52308:	ldrh	r3, [r3]
   5230c:	and	r3, r3, #256	; 0x100
   52310:	cmp	r3, #0
   52314:	beq	52324 <__assert_fail@plt+0x3fc38>
   52318:	ldr	r1, [fp, #-16]
   5231c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52320:	bl	44860 <__assert_fail@plt+0x32174>
   52324:	ldr	r3, [fp, #-16]
   52328:	add	r3, r3, #1
   5232c:	str	r3, [fp, #-16]
   52330:	ldr	r3, [fp, #-16]
   52334:	cmp	r3, #255	; 0xff
   52338:	ble	522f0 <__assert_fail@plt+0x3fc04>
   5233c:	b	52748 <__assert_fail@plt+0x4005c>
   52340:	movw	r1, #47924	; 0xbb34
   52344:	movt	r1, #6
   52348:	ldr	r0, [fp, #-20]	; 0xffffffec
   5234c:	bl	11ffc <strcmp@plt>
   52350:	mov	r3, r0
   52354:	cmp	r3, #0
   52358:	bne	52440 <__assert_fail@plt+0x3fd54>
   5235c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52360:	cmp	r3, #0
   52364:	movne	r3, #1
   52368:	moveq	r3, #0
   5236c:	uxtb	r3, r3
   52370:	cmp	r3, #0
   52374:	beq	523e4 <__assert_fail@plt+0x3fcf8>
   52378:	mov	r3, #0
   5237c:	str	r3, [fp, #-16]
   52380:	b	523d4 <__assert_fail@plt+0x3fce8>
   52384:	bl	12368 <__ctype_b_loc@plt>
   52388:	mov	r3, r0
   5238c:	ldr	r2, [r3]
   52390:	ldr	r3, [fp, #-16]
   52394:	lsl	r3, r3, #1
   52398:	add	r3, r2, r3
   5239c:	ldrh	r3, [r3]
   523a0:	and	r3, r3, #1
   523a4:	cmp	r3, #0
   523a8:	beq	523c8 <__assert_fail@plt+0x3fcdc>
   523ac:	ldr	r3, [fp, #-16]
   523b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   523b4:	add	r3, r2, r3
   523b8:	ldrb	r3, [r3]
   523bc:	mov	r1, r3
   523c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   523c4:	bl	44860 <__assert_fail@plt+0x32174>
   523c8:	ldr	r3, [fp, #-16]
   523cc:	add	r3, r3, #1
   523d0:	str	r3, [fp, #-16]
   523d4:	ldr	r3, [fp, #-16]
   523d8:	cmp	r3, #255	; 0xff
   523dc:	ble	52384 <__assert_fail@plt+0x3fc98>
   523e0:	b	52748 <__assert_fail@plt+0x4005c>
   523e4:	mov	r3, #0
   523e8:	str	r3, [fp, #-16]
   523ec:	b	52430 <__assert_fail@plt+0x3fd44>
   523f0:	bl	12368 <__ctype_b_loc@plt>
   523f4:	mov	r3, r0
   523f8:	ldr	r2, [r3]
   523fc:	ldr	r3, [fp, #-16]
   52400:	lsl	r3, r3, #1
   52404:	add	r3, r2, r3
   52408:	ldrh	r3, [r3]
   5240c:	and	r3, r3, #1
   52410:	cmp	r3, #0
   52414:	beq	52424 <__assert_fail@plt+0x3fd38>
   52418:	ldr	r1, [fp, #-16]
   5241c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52420:	bl	44860 <__assert_fail@plt+0x32174>
   52424:	ldr	r3, [fp, #-16]
   52428:	add	r3, r3, #1
   5242c:	str	r3, [fp, #-16]
   52430:	ldr	r3, [fp, #-16]
   52434:	cmp	r3, #255	; 0xff
   52438:	ble	523f0 <__assert_fail@plt+0x3fd04>
   5243c:	b	52748 <__assert_fail@plt+0x4005c>
   52440:	movw	r1, #47932	; 0xbb3c
   52444:	movt	r1, #6
   52448:	ldr	r0, [fp, #-20]	; 0xffffffec
   5244c:	bl	11ffc <strcmp@plt>
   52450:	mov	r3, r0
   52454:	cmp	r3, #0
   52458:	bne	52540 <__assert_fail@plt+0x3fe54>
   5245c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52460:	cmp	r3, #0
   52464:	movne	r3, #1
   52468:	moveq	r3, #0
   5246c:	uxtb	r3, r3
   52470:	cmp	r3, #0
   52474:	beq	524e4 <__assert_fail@plt+0x3fdf8>
   52478:	mov	r3, #0
   5247c:	str	r3, [fp, #-16]
   52480:	b	524d4 <__assert_fail@plt+0x3fde8>
   52484:	bl	12368 <__ctype_b_loc@plt>
   52488:	mov	r3, r0
   5248c:	ldr	r2, [r3]
   52490:	ldr	r3, [fp, #-16]
   52494:	lsl	r3, r3, #1
   52498:	add	r3, r2, r3
   5249c:	ldrh	r3, [r3]
   524a0:	sxth	r3, r3
   524a4:	cmp	r3, #0
   524a8:	bge	524c8 <__assert_fail@plt+0x3fddc>
   524ac:	ldr	r3, [fp, #-16]
   524b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   524b4:	add	r3, r2, r3
   524b8:	ldrb	r3, [r3]
   524bc:	mov	r1, r3
   524c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   524c4:	bl	44860 <__assert_fail@plt+0x32174>
   524c8:	ldr	r3, [fp, #-16]
   524cc:	add	r3, r3, #1
   524d0:	str	r3, [fp, #-16]
   524d4:	ldr	r3, [fp, #-16]
   524d8:	cmp	r3, #255	; 0xff
   524dc:	ble	52484 <__assert_fail@plt+0x3fd98>
   524e0:	b	52748 <__assert_fail@plt+0x4005c>
   524e4:	mov	r3, #0
   524e8:	str	r3, [fp, #-16]
   524ec:	b	52530 <__assert_fail@plt+0x3fe44>
   524f0:	bl	12368 <__ctype_b_loc@plt>
   524f4:	mov	r3, r0
   524f8:	ldr	r2, [r3]
   524fc:	ldr	r3, [fp, #-16]
   52500:	lsl	r3, r3, #1
   52504:	add	r3, r2, r3
   52508:	ldrh	r3, [r3]
   5250c:	sxth	r3, r3
   52510:	cmp	r3, #0
   52514:	bge	52524 <__assert_fail@plt+0x3fe38>
   52518:	ldr	r1, [fp, #-16]
   5251c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52520:	bl	44860 <__assert_fail@plt+0x32174>
   52524:	ldr	r3, [fp, #-16]
   52528:	add	r3, r3, #1
   5252c:	str	r3, [fp, #-16]
   52530:	ldr	r3, [fp, #-16]
   52534:	cmp	r3, #255	; 0xff
   52538:	ble	524f0 <__assert_fail@plt+0x3fe04>
   5253c:	b	52748 <__assert_fail@plt+0x4005c>
   52540:	movw	r1, #47940	; 0xbb44
   52544:	movt	r1, #6
   52548:	ldr	r0, [fp, #-20]	; 0xffffffec
   5254c:	bl	11ffc <strcmp@plt>
   52550:	mov	r3, r0
   52554:	cmp	r3, #0
   52558:	bne	52640 <__assert_fail@plt+0x3ff54>
   5255c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52560:	cmp	r3, #0
   52564:	movne	r3, #1
   52568:	moveq	r3, #0
   5256c:	uxtb	r3, r3
   52570:	cmp	r3, #0
   52574:	beq	525e4 <__assert_fail@plt+0x3fef8>
   52578:	mov	r3, #0
   5257c:	str	r3, [fp, #-16]
   52580:	b	525d4 <__assert_fail@plt+0x3fee8>
   52584:	bl	12368 <__ctype_b_loc@plt>
   52588:	mov	r3, r0
   5258c:	ldr	r2, [r3]
   52590:	ldr	r3, [fp, #-16]
   52594:	lsl	r3, r3, #1
   52598:	add	r3, r2, r3
   5259c:	ldrh	r3, [r3]
   525a0:	and	r3, r3, #4
   525a4:	cmp	r3, #0
   525a8:	beq	525c8 <__assert_fail@plt+0x3fedc>
   525ac:	ldr	r3, [fp, #-16]
   525b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   525b4:	add	r3, r2, r3
   525b8:	ldrb	r3, [r3]
   525bc:	mov	r1, r3
   525c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   525c4:	bl	44860 <__assert_fail@plt+0x32174>
   525c8:	ldr	r3, [fp, #-16]
   525cc:	add	r3, r3, #1
   525d0:	str	r3, [fp, #-16]
   525d4:	ldr	r3, [fp, #-16]
   525d8:	cmp	r3, #255	; 0xff
   525dc:	ble	52584 <__assert_fail@plt+0x3fe98>
   525e0:	b	52748 <__assert_fail@plt+0x4005c>
   525e4:	mov	r3, #0
   525e8:	str	r3, [fp, #-16]
   525ec:	b	52630 <__assert_fail@plt+0x3ff44>
   525f0:	bl	12368 <__ctype_b_loc@plt>
   525f4:	mov	r3, r0
   525f8:	ldr	r2, [r3]
   525fc:	ldr	r3, [fp, #-16]
   52600:	lsl	r3, r3, #1
   52604:	add	r3, r2, r3
   52608:	ldrh	r3, [r3]
   5260c:	and	r3, r3, #4
   52610:	cmp	r3, #0
   52614:	beq	52624 <__assert_fail@plt+0x3ff38>
   52618:	ldr	r1, [fp, #-16]
   5261c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52620:	bl	44860 <__assert_fail@plt+0x32174>
   52624:	ldr	r3, [fp, #-16]
   52628:	add	r3, r3, #1
   5262c:	str	r3, [fp, #-16]
   52630:	ldr	r3, [fp, #-16]
   52634:	cmp	r3, #255	; 0xff
   52638:	ble	525f0 <__assert_fail@plt+0x3ff04>
   5263c:	b	52748 <__assert_fail@plt+0x4005c>
   52640:	movw	r1, #47948	; 0xbb4c
   52644:	movt	r1, #6
   52648:	ldr	r0, [fp, #-20]	; 0xffffffec
   5264c:	bl	11ffc <strcmp@plt>
   52650:	mov	r3, r0
   52654:	cmp	r3, #0
   52658:	bne	52740 <__assert_fail@plt+0x40054>
   5265c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52660:	cmp	r3, #0
   52664:	movne	r3, #1
   52668:	moveq	r3, #0
   5266c:	uxtb	r3, r3
   52670:	cmp	r3, #0
   52674:	beq	526e4 <__assert_fail@plt+0x3fff8>
   52678:	mov	r3, #0
   5267c:	str	r3, [fp, #-16]
   52680:	b	526d4 <__assert_fail@plt+0x3ffe8>
   52684:	bl	12368 <__ctype_b_loc@plt>
   52688:	mov	r3, r0
   5268c:	ldr	r2, [r3]
   52690:	ldr	r3, [fp, #-16]
   52694:	lsl	r3, r3, #1
   52698:	add	r3, r2, r3
   5269c:	ldrh	r3, [r3]
   526a0:	and	r3, r3, #4096	; 0x1000
   526a4:	cmp	r3, #0
   526a8:	beq	526c8 <__assert_fail@plt+0x3ffdc>
   526ac:	ldr	r3, [fp, #-16]
   526b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   526b4:	add	r3, r2, r3
   526b8:	ldrb	r3, [r3]
   526bc:	mov	r1, r3
   526c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   526c4:	bl	44860 <__assert_fail@plt+0x32174>
   526c8:	ldr	r3, [fp, #-16]
   526cc:	add	r3, r3, #1
   526d0:	str	r3, [fp, #-16]
   526d4:	ldr	r3, [fp, #-16]
   526d8:	cmp	r3, #255	; 0xff
   526dc:	ble	52684 <__assert_fail@plt+0x3ff98>
   526e0:	b	52748 <__assert_fail@plt+0x4005c>
   526e4:	mov	r3, #0
   526e8:	str	r3, [fp, #-16]
   526ec:	b	52730 <__assert_fail@plt+0x40044>
   526f0:	bl	12368 <__ctype_b_loc@plt>
   526f4:	mov	r3, r0
   526f8:	ldr	r2, [r3]
   526fc:	ldr	r3, [fp, #-16]
   52700:	lsl	r3, r3, #1
   52704:	add	r3, r2, r3
   52708:	ldrh	r3, [r3]
   5270c:	and	r3, r3, #4096	; 0x1000
   52710:	cmp	r3, #0
   52714:	beq	52724 <__assert_fail@plt+0x40038>
   52718:	ldr	r1, [fp, #-16]
   5271c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52720:	bl	44860 <__assert_fail@plt+0x32174>
   52724:	ldr	r3, [fp, #-16]
   52728:	add	r3, r3, #1
   5272c:	str	r3, [fp, #-16]
   52730:	ldr	r3, [fp, #-16]
   52734:	cmp	r3, #255	; 0xff
   52738:	ble	526f0 <__assert_fail@plt+0x40004>
   5273c:	b	52748 <__assert_fail@plt+0x4005c>
   52740:	mov	r3, #4
   52744:	b	5274c <__assert_fail@plt+0x40060>
   52748:	mov	r3, #0
   5274c:	mov	r0, r3
   52750:	sub	sp, fp, #8
   52754:	ldr	r4, [sp]
   52758:	ldr	fp, [sp, #4]
   5275c:	add	sp, sp, #8
   52760:	pop	{pc}		; (ldr pc, [sp], #4)
   52764:	str	fp, [sp, #-8]!
   52768:	str	lr, [sp, #4]
   5276c:	add	fp, sp, #4
   52770:	sub	sp, sp, #56	; 0x38
   52774:	str	r0, [fp, #-40]	; 0xffffffd8
   52778:	str	r1, [fp, #-44]	; 0xffffffd4
   5277c:	str	r2, [fp, #-48]	; 0xffffffd0
   52780:	str	r3, [fp, #-52]	; 0xffffffcc
   52784:	mov	r3, #0
   52788:	str	r3, [fp, #-28]	; 0xffffffe4
   5278c:	mov	r1, #1
   52790:	mov	r0, #32
   52794:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   52798:	mov	r3, r0
   5279c:	str	r3, [fp, #-8]
   527a0:	ldr	r3, [fp, #-8]
   527a4:	cmp	r3, #0
   527a8:	moveq	r3, #1
   527ac:	movne	r3, #0
   527b0:	uxtb	r3, r3
   527b4:	cmp	r3, #0
   527b8:	beq	527d0 <__assert_fail@plt+0x400e4>
   527bc:	ldr	r3, [fp, #8]
   527c0:	mov	r2, #12
   527c4:	str	r2, [r3]
   527c8:	mov	r3, #0
   527cc:	b	52a34 <__assert_fail@plt+0x40348>
   527d0:	mov	r1, #1
   527d4:	mov	r0, #40	; 0x28
   527d8:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   527dc:	mov	r3, r0
   527e0:	str	r3, [fp, #-12]
   527e4:	ldr	r3, [fp, #-12]
   527e8:	cmp	r3, #0
   527ec:	moveq	r3, #1
   527f0:	movne	r3, #0
   527f4:	uxtb	r3, r3
   527f8:	cmp	r3, #0
   527fc:	beq	5281c <__assert_fail@plt+0x40130>
   52800:	ldr	r0, [fp, #-8]
   52804:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52808:	ldr	r3, [fp, #8]
   5280c:	mov	r2, #12
   52810:	str	r2, [r3]
   52814:	mov	r3, #0
   52818:	b	52a34 <__assert_fail@plt+0x40348>
   5281c:	ldr	r2, [fp, #-12]
   52820:	ldrb	r3, [r2, #16]
   52824:	ldrb	r1, [fp, #4]
   52828:	bfi	r3, r1, #0, #1
   5282c:	strb	r3, [r2, #16]
   52830:	sub	r2, fp, #28
   52834:	mov	r3, #0
   52838:	str	r3, [sp, #4]
   5283c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   52840:	str	r3, [sp]
   52844:	mov	r3, r2
   52848:	ldr	r2, [fp, #-12]
   5284c:	ldr	r1, [fp, #-8]
   52850:	ldr	r0, [fp, #-44]	; 0xffffffd4
   52854:	bl	519f4 <__assert_fail@plt+0x3f308>
   52858:	str	r0, [fp, #-16]
   5285c:	ldr	r3, [fp, #-16]
   52860:	cmp	r3, #0
   52864:	movne	r3, #1
   52868:	moveq	r3, #0
   5286c:	uxtb	r3, r3
   52870:	cmp	r3, #0
   52874:	beq	528bc <__assert_fail@plt+0x401d0>
   52878:	ldr	r0, [fp, #-8]
   5287c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52880:	ldr	r0, [fp, #-12]
   52884:	bl	52b74 <__assert_fail@plt+0x40488>
   52888:	ldr	r3, [fp, #8]
   5288c:	ldr	r2, [fp, #-16]
   52890:	str	r2, [r3]
   52894:	mov	r3, #0
   52898:	b	52a34 <__assert_fail@plt+0x40348>
   5289c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   528a0:	ldrb	r3, [r3]
   528a4:	mov	r1, r3
   528a8:	ldr	r0, [fp, #-8]
   528ac:	bl	44860 <__assert_fail@plt+0x32174>
   528b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   528b4:	add	r3, r3, #1
   528b8:	str	r3, [fp, #-52]	; 0xffffffcc
   528bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   528c0:	ldrb	r3, [r3]
   528c4:	cmp	r3, #0
   528c8:	bne	5289c <__assert_fail@plt+0x401b0>
   528cc:	ldrb	r3, [fp, #4]
   528d0:	cmp	r3, #0
   528d4:	beq	528e0 <__assert_fail@plt+0x401f4>
   528d8:	ldr	r0, [fp, #-8]
   528dc:	bl	44a98 <__assert_fail@plt+0x323ac>
   528e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   528e4:	ldr	r3, [r3, #92]	; 0x5c
   528e8:	cmp	r3, #1
   528ec:	ble	52904 <__assert_fail@plt+0x40218>
   528f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   528f4:	ldr	r3, [r3, #60]	; 0x3c
   528f8:	mov	r1, r3
   528fc:	ldr	r0, [fp, #-8]
   52900:	bl	44b90 <__assert_fail@plt+0x324a4>
   52904:	sub	r1, fp, #36	; 0x24
   52908:	mov	r2, #0
   5290c:	mov	r3, #0
   52910:	strd	r2, [r1]
   52914:	ldr	r3, [fp, #-8]
   52918:	str	r3, [fp, #-36]	; 0xffffffdc
   5291c:	mov	r3, #3
   52920:	strb	r3, [fp, #-32]	; 0xffffffe0
   52924:	sub	r3, fp, #36	; 0x24
   52928:	mov	r2, #0
   5292c:	mov	r1, #0
   52930:	ldr	r0, [fp, #-40]	; 0xffffffd8
   52934:	bl	52c4c <__assert_fail@plt+0x40560>
   52938:	str	r0, [fp, #-20]	; 0xffffffec
   5293c:	ldr	r3, [fp, #-20]	; 0xffffffec
   52940:	cmp	r3, #0
   52944:	moveq	r3, #1
   52948:	movne	r3, #0
   5294c:	uxtb	r3, r3
   52950:	cmp	r3, #0
   52954:	bne	52a08 <__assert_fail@plt+0x4031c>
   52958:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5295c:	ldr	r3, [r3, #92]	; 0x5c
   52960:	cmp	r3, #1
   52964:	ble	529f8 <__assert_fail@plt+0x4030c>
   52968:	mov	r3, #6
   5296c:	strb	r3, [fp, #-32]	; 0xffffffe0
   52970:	ldr	r3, [fp, #-12]
   52974:	str	r3, [fp, #-36]	; 0xffffffdc
   52978:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5297c:	ldrb	r3, [r2, #88]	; 0x58
   52980:	orr	r3, r3, #2
   52984:	strb	r3, [r2, #88]	; 0x58
   52988:	sub	r3, fp, #36	; 0x24
   5298c:	mov	r2, #0
   52990:	mov	r1, #0
   52994:	ldr	r0, [fp, #-40]	; 0xffffffd8
   52998:	bl	52c4c <__assert_fail@plt+0x40560>
   5299c:	str	r0, [fp, #-24]	; 0xffffffe8
   529a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   529a4:	cmp	r3, #0
   529a8:	moveq	r3, #1
   529ac:	movne	r3, #0
   529b0:	uxtb	r3, r3
   529b4:	cmp	r3, #0
   529b8:	bne	52a10 <__assert_fail@plt+0x40324>
   529bc:	mov	r3, #10
   529c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   529c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   529c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   529cc:	bl	52be4 <__assert_fail@plt+0x404f8>
   529d0:	str	r0, [fp, #-20]	; 0xffffffec
   529d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   529d8:	cmp	r3, #0
   529dc:	movne	r3, #1
   529e0:	moveq	r3, #0
   529e4:	uxtb	r3, r3
   529e8:	cmp	r3, #0
   529ec:	beq	52a14 <__assert_fail@plt+0x40328>
   529f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   529f4:	b	52a34 <__assert_fail@plt+0x40348>
   529f8:	ldr	r0, [fp, #-12]
   529fc:	bl	52b74 <__assert_fail@plt+0x40488>
   52a00:	ldr	r3, [fp, #-20]	; 0xffffffec
   52a04:	b	52a34 <__assert_fail@plt+0x40348>
   52a08:	nop	{0}
   52a0c:	b	52a14 <__assert_fail@plt+0x40328>
   52a10:	nop	{0}
   52a14:	ldr	r0, [fp, #-8]
   52a18:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52a1c:	ldr	r0, [fp, #-12]
   52a20:	bl	52b74 <__assert_fail@plt+0x40488>
   52a24:	ldr	r3, [fp, #8]
   52a28:	mov	r2, #12
   52a2c:	str	r2, [r3]
   52a30:	mov	r3, #0
   52a34:	mov	r0, r3
   52a38:	sub	sp, fp, #4
   52a3c:	ldr	fp, [sp]
   52a40:	add	sp, sp, #4
   52a44:	pop	{pc}		; (ldr pc, [sp], #4)
   52a48:	str	fp, [sp, #-8]!
   52a4c:	str	lr, [sp, #4]
   52a50:	add	fp, sp, #4
   52a54:	sub	sp, sp, #24
   52a58:	str	r0, [fp, #-16]
   52a5c:	str	r1, [fp, #-20]	; 0xffffffec
   52a60:	str	r2, [fp, #-24]	; 0xffffffe8
   52a64:	mvn	r3, #0
   52a68:	str	r3, [fp, #-8]
   52a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   52a70:	ldr	r1, [fp, #-16]
   52a74:	ldr	r0, [fp, #-20]	; 0xffffffec
   52a78:	bl	4df2c <__assert_fail@plt+0x3b840>
   52a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   52a80:	ldrb	r3, [r3]
   52a84:	strb	r3, [fp, #-9]
   52a88:	ldr	r3, [fp, #-20]	; 0xffffffec
   52a8c:	ldrb	r3, [r3, #4]
   52a90:	cmp	r3, #2
   52a94:	moveq	r3, #1
   52a98:	movne	r3, #0
   52a9c:	uxtb	r3, r3
   52aa0:	cmp	r3, #0
   52aa4:	beq	52ab0 <__assert_fail@plt+0x403c4>
   52aa8:	mvn	r3, #1
   52aac:	b	52b60 <__assert_fail@plt+0x40474>
   52ab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   52ab4:	ldrb	r3, [r3, #4]
   52ab8:	cmp	r3, #24
   52abc:	beq	52b5c <__assert_fail@plt+0x40470>
   52ac0:	ldrb	r3, [fp, #-9]
   52ac4:	cmp	r3, #44	; 0x2c
   52ac8:	beq	52b5c <__assert_fail@plt+0x40470>
   52acc:	ldr	r3, [fp, #-20]	; 0xffffffec
   52ad0:	ldrb	r3, [r3, #4]
   52ad4:	cmp	r3, #1
   52ad8:	bne	52b50 <__assert_fail@plt+0x40464>
   52adc:	ldrb	r3, [fp, #-9]
   52ae0:	cmp	r3, #47	; 0x2f
   52ae4:	bls	52b50 <__assert_fail@plt+0x40464>
   52ae8:	ldrb	r3, [fp, #-9]
   52aec:	cmp	r3, #57	; 0x39
   52af0:	bhi	52b50 <__assert_fail@plt+0x40464>
   52af4:	ldr	r3, [fp, #-8]
   52af8:	cmn	r3, #2
   52afc:	beq	52b50 <__assert_fail@plt+0x40464>
   52b00:	ldr	r3, [fp, #-8]
   52b04:	cmn	r3, #1
   52b08:	bne	52b18 <__assert_fail@plt+0x4042c>
   52b0c:	ldrb	r3, [fp, #-9]
   52b10:	sub	r3, r3, #48	; 0x30
   52b14:	b	52b54 <__assert_fail@plt+0x40468>
   52b18:	ldr	r2, [fp, #-8]
   52b1c:	mov	r3, r2
   52b20:	lsl	r3, r3, #2
   52b24:	add	r3, r3, r2
   52b28:	lsl	r3, r3, #1
   52b2c:	mov	r2, r3
   52b30:	ldrb	r3, [fp, #-9]
   52b34:	add	r3, r2, r3
   52b38:	movw	r2, #32816	; 0x8030
   52b3c:	cmp	r3, r2
   52b40:	movlt	r3, r3
   52b44:	movge	r3, r2
   52b48:	sub	r3, r3, #48	; 0x30
   52b4c:	b	52b54 <__assert_fail@plt+0x40468>
   52b50:	mvn	r3, #1
   52b54:	str	r3, [fp, #-8]
   52b58:	b	52a6c <__assert_fail@plt+0x40380>
   52b5c:	ldr	r3, [fp, #-8]
   52b60:	mov	r0, r3
   52b64:	sub	sp, fp, #4
   52b68:	ldr	fp, [sp]
   52b6c:	add	sp, sp, #4
   52b70:	pop	{pc}		; (ldr pc, [sp], #4)
   52b74:	str	fp, [sp, #-8]!
   52b78:	str	lr, [sp, #4]
   52b7c:	add	fp, sp, #4
   52b80:	sub	sp, sp, #8
   52b84:	str	r0, [fp, #-8]
   52b88:	ldr	r3, [fp, #-8]
   52b8c:	ldr	r3, [r3]
   52b90:	mov	r0, r3
   52b94:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52b98:	ldr	r3, [fp, #-8]
   52b9c:	ldr	r3, [r3, #4]
   52ba0:	mov	r0, r3
   52ba4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52ba8:	ldr	r3, [fp, #-8]
   52bac:	ldr	r3, [r3, #8]
   52bb0:	mov	r0, r3
   52bb4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52bb8:	ldr	r3, [fp, #-8]
   52bbc:	ldr	r3, [r3, #12]
   52bc0:	mov	r0, r3
   52bc4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52bc8:	ldr	r0, [fp, #-8]
   52bcc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52bd0:	nop	{0}
   52bd4:	sub	sp, fp, #4
   52bd8:	ldr	fp, [sp]
   52bdc:	add	sp, sp, #4
   52be0:	pop	{pc}		; (ldr pc, [sp], #4)
   52be4:	str	fp, [sp, #-8]!
   52be8:	str	lr, [sp, #4]
   52bec:	add	fp, sp, #4
   52bf0:	sub	sp, sp, #24
   52bf4:	str	r0, [fp, #-16]
   52bf8:	str	r1, [fp, #-20]	; 0xffffffec
   52bfc:	str	r2, [fp, #-24]	; 0xffffffe8
   52c00:	str	r3, [fp, #-28]	; 0xffffffe4
   52c04:	sub	r1, fp, #12
   52c08:	mov	r2, #0
   52c0c:	mov	r3, #0
   52c10:	strd	r2, [r1]
   52c14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   52c18:	uxtb	r3, r3
   52c1c:	strb	r3, [fp, #-8]
   52c20:	sub	r3, fp, #12
   52c24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   52c28:	ldr	r1, [fp, #-20]	; 0xffffffec
   52c2c:	ldr	r0, [fp, #-16]
   52c30:	bl	52c4c <__assert_fail@plt+0x40560>
   52c34:	mov	r3, r0
   52c38:	mov	r0, r3
   52c3c:	sub	sp, fp, #4
   52c40:	ldr	fp, [sp]
   52c44:	add	sp, sp, #4
   52c48:	pop	{pc}		; (ldr pc, [sp], #4)
   52c4c:	str	fp, [sp, #-8]!
   52c50:	str	lr, [sp, #4]
   52c54:	add	fp, sp, #4
   52c58:	sub	sp, sp, #24
   52c5c:	str	r0, [fp, #-16]
   52c60:	str	r1, [fp, #-20]	; 0xffffffec
   52c64:	str	r2, [fp, #-24]	; 0xffffffe8
   52c68:	str	r3, [fp, #-28]	; 0xffffffe4
   52c6c:	ldr	r3, [fp, #-16]
   52c70:	ldr	r3, [r3, #64]	; 0x40
   52c74:	cmp	r3, #31
   52c78:	moveq	r3, #1
   52c7c:	movne	r3, #0
   52c80:	uxtb	r3, r3
   52c84:	cmp	r3, #0
   52c88:	beq	52cd8 <__assert_fail@plt+0x405ec>
   52c8c:	mov	r0, #996	; 0x3e4
   52c90:	bl	43510 <__assert_fail@plt+0x30e24>
   52c94:	mov	r3, r0
   52c98:	str	r3, [fp, #-8]
   52c9c:	ldr	r3, [fp, #-8]
   52ca0:	cmp	r3, #0
   52ca4:	bne	52cb0 <__assert_fail@plt+0x405c4>
   52ca8:	mov	r3, #0
   52cac:	b	52db8 <__assert_fail@plt+0x406cc>
   52cb0:	ldr	r3, [fp, #-16]
   52cb4:	ldr	r2, [r3, #56]	; 0x38
   52cb8:	ldr	r3, [fp, #-8]
   52cbc:	str	r2, [r3]
   52cc0:	ldr	r3, [fp, #-16]
   52cc4:	ldr	r2, [fp, #-8]
   52cc8:	str	r2, [r3, #56]	; 0x38
   52ccc:	ldr	r3, [fp, #-16]
   52cd0:	mov	r2, #0
   52cd4:	str	r2, [r3, #64]	; 0x40
   52cd8:	ldr	r3, [fp, #-16]
   52cdc:	ldr	r2, [r3, #56]	; 0x38
   52ce0:	ldr	r3, [fp, #-16]
   52ce4:	ldr	r3, [r3, #64]	; 0x40
   52ce8:	add	r0, r3, #1
   52cec:	ldr	r1, [fp, #-16]
   52cf0:	str	r0, [r1, #64]	; 0x40
   52cf4:	lsl	r3, r3, #5
   52cf8:	add	r3, r2, r3
   52cfc:	add	r3, r3, #4
   52d00:	str	r3, [fp, #-12]
   52d04:	ldr	r3, [fp, #-12]
   52d08:	mov	r2, #0
   52d0c:	str	r2, [r3]
   52d10:	ldr	r3, [fp, #-12]
   52d14:	ldr	r2, [fp, #-20]	; 0xffffffec
   52d18:	str	r2, [r3, #4]
   52d1c:	ldr	r3, [fp, #-12]
   52d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   52d24:	str	r2, [r3, #8]
   52d28:	ldr	r3, [fp, #-12]
   52d2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   52d30:	add	r1, r3, #20
   52d34:	mov	r3, r2
   52d38:	ldrd	r2, [r3]
   52d3c:	strd	r2, [r1]
   52d40:	ldr	r2, [fp, #-12]
   52d44:	ldrb	r3, [r2, #26]
   52d48:	bfc	r3, #2, #1
   52d4c:	strb	r3, [r2, #26]
   52d50:	ldr	r2, [fp, #-12]
   52d54:	ldrb	r3, [r2, #26]
   52d58:	bfc	r3, #3, #1
   52d5c:	strb	r3, [r2, #26]
   52d60:	ldr	r3, [fp, #-12]
   52d64:	mov	r2, #0
   52d68:	str	r2, [r3, #12]
   52d6c:	ldr	r3, [fp, #-12]
   52d70:	mov	r2, #0
   52d74:	str	r2, [r3, #16]
   52d78:	ldr	r3, [fp, #-12]
   52d7c:	mvn	r2, #0
   52d80:	str	r2, [r3, #28]
   52d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   52d88:	cmp	r3, #0
   52d8c:	beq	52d9c <__assert_fail@plt+0x406b0>
   52d90:	ldr	r3, [fp, #-20]	; 0xffffffec
   52d94:	ldr	r2, [fp, #-12]
   52d98:	str	r2, [r3]
   52d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   52da0:	cmp	r3, #0
   52da4:	beq	52db4 <__assert_fail@plt+0x406c8>
   52da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   52dac:	ldr	r2, [fp, #-12]
   52db0:	str	r2, [r3]
   52db4:	ldr	r3, [fp, #-12]
   52db8:	mov	r0, r3
   52dbc:	sub	sp, fp, #4
   52dc0:	ldr	fp, [sp]
   52dc4:	add	sp, sp, #4
   52dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   52dcc:	push	{fp}		; (str fp, [sp, #-4]!)
   52dd0:	add	fp, sp, #0
   52dd4:	sub	sp, sp, #20
   52dd8:	str	r0, [fp, #-16]
   52ddc:	str	r1, [fp, #-20]	; 0xffffffec
   52de0:	ldr	r3, [fp, #-16]
   52de4:	str	r3, [fp, #-8]
   52de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   52dec:	ldrb	r3, [r3, #24]
   52df0:	cmp	r3, #17
   52df4:	bne	52e1c <__assert_fail@plt+0x40730>
   52df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   52dfc:	ldr	r3, [r3, #20]
   52e00:	ldr	r2, [fp, #-8]
   52e04:	cmp	r2, r3
   52e08:	bne	52e1c <__assert_fail@plt+0x40730>
   52e0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   52e10:	ldrb	r3, [r2, #26]
   52e14:	orr	r3, r3, #8
   52e18:	strb	r3, [r2, #26]
   52e1c:	mov	r3, #0
   52e20:	mov	r0, r3
   52e24:	add	sp, fp, #0
   52e28:	pop	{fp}		; (ldr fp, [sp], #4)
   52e2c:	bx	lr
   52e30:	str	fp, [sp, #-8]!
   52e34:	str	lr, [sp, #4]
   52e38:	add	fp, sp, #4
   52e3c:	sub	sp, sp, #8
   52e40:	str	r0, [fp, #-8]
   52e44:	ldr	r3, [fp, #-8]
   52e48:	ldrb	r3, [r3, #4]
   52e4c:	cmp	r3, #6
   52e50:	bne	52e80 <__assert_fail@plt+0x40794>
   52e54:	ldr	r3, [fp, #-8]
   52e58:	ldrb	r3, [r3, #6]
   52e5c:	and	r3, r3, #4
   52e60:	uxtb	r3, r3
   52e64:	cmp	r3, #0
   52e68:	bne	52e80 <__assert_fail@plt+0x40794>
   52e6c:	ldr	r3, [fp, #-8]
   52e70:	ldr	r3, [r3]
   52e74:	mov	r0, r3
   52e78:	bl	52b74 <__assert_fail@plt+0x40488>
   52e7c:	b	52eb8 <__assert_fail@plt+0x407cc>
   52e80:	ldr	r3, [fp, #-8]
   52e84:	ldrb	r3, [r3, #4]
   52e88:	cmp	r3, #3
   52e8c:	bne	52eb8 <__assert_fail@plt+0x407cc>
   52e90:	ldr	r3, [fp, #-8]
   52e94:	ldrb	r3, [r3, #6]
   52e98:	and	r3, r3, #4
   52e9c:	uxtb	r3, r3
   52ea0:	cmp	r3, #0
   52ea4:	bne	52eb8 <__assert_fail@plt+0x407cc>
   52ea8:	ldr	r3, [fp, #-8]
   52eac:	ldr	r3, [r3]
   52eb0:	mov	r0, r3
   52eb4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   52eb8:	nop	{0}
   52ebc:	sub	sp, fp, #4
   52ec0:	ldr	fp, [sp]
   52ec4:	add	sp, sp, #4
   52ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   52ecc:	str	fp, [sp, #-8]!
   52ed0:	str	lr, [sp, #4]
   52ed4:	add	fp, sp, #4
   52ed8:	sub	sp, sp, #8
   52edc:	str	r0, [fp, #-8]
   52ee0:	str	r1, [fp, #-12]
   52ee4:	ldr	r3, [fp, #-12]
   52ee8:	add	r3, r3, #20
   52eec:	mov	r0, r3
   52ef0:	bl	52e30 <__assert_fail@plt+0x40744>
   52ef4:	mov	r3, #0
   52ef8:	mov	r0, r3
   52efc:	sub	sp, fp, #4
   52f00:	ldr	fp, [sp]
   52f04:	add	sp, sp, #4
   52f08:	pop	{pc}		; (ldr pc, [sp], #4)
   52f0c:	str	fp, [sp, #-8]!
   52f10:	str	lr, [sp, #4]
   52f14:	add	fp, sp, #4
   52f18:	sub	sp, sp, #32
   52f1c:	str	r0, [fp, #-32]	; 0xffffffe0
   52f20:	str	r1, [fp, #-36]	; 0xffffffdc
   52f24:	sub	r3, fp, #24
   52f28:	str	r3, [fp, #-12]
   52f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52f30:	ldr	r3, [r3]
   52f34:	str	r3, [fp, #-16]
   52f38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   52f3c:	str	r3, [fp, #-8]
   52f40:	ldr	r3, [fp, #-8]
   52f44:	add	r3, r3, #20
   52f48:	mov	r2, #0
   52f4c:	mov	r1, #0
   52f50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   52f54:	bl	52c4c <__assert_fail@plt+0x40560>
   52f58:	mov	r2, r0
   52f5c:	ldr	r3, [fp, #-12]
   52f60:	str	r2, [r3]
   52f64:	ldr	r3, [fp, #-12]
   52f68:	ldr	r3, [r3]
   52f6c:	cmp	r3, #0
   52f70:	bne	52f7c <__assert_fail@plt+0x40890>
   52f74:	mov	r3, #0
   52f78:	b	53058 <__assert_fail@plt+0x4096c>
   52f7c:	ldr	r3, [fp, #-12]
   52f80:	ldr	r3, [r3]
   52f84:	ldr	r2, [fp, #-16]
   52f88:	str	r2, [r3]
   52f8c:	ldr	r3, [fp, #-12]
   52f90:	ldr	r2, [r3]
   52f94:	ldrb	r3, [r2, #26]
   52f98:	orr	r3, r3, #4
   52f9c:	strb	r3, [r2, #26]
   52fa0:	ldr	r3, [fp, #-12]
   52fa4:	ldr	r3, [r3]
   52fa8:	str	r3, [fp, #-16]
   52fac:	ldr	r3, [fp, #-8]
   52fb0:	ldr	r3, [r3, #4]
   52fb4:	cmp	r3, #0
   52fb8:	beq	52fd8 <__assert_fail@plt+0x408ec>
   52fbc:	ldr	r3, [fp, #-8]
   52fc0:	ldr	r3, [r3, #4]
   52fc4:	str	r3, [fp, #-8]
   52fc8:	ldr	r3, [fp, #-16]
   52fcc:	add	r3, r3, #4
   52fd0:	str	r3, [fp, #-12]
   52fd4:	b	52f40 <__assert_fail@plt+0x40854>
   52fd8:	mov	r3, #0
   52fdc:	str	r3, [fp, #-20]	; 0xffffffec
   52fe0:	b	53018 <__assert_fail@plt+0x4092c>
   52fe4:	ldr	r3, [fp, #-8]
   52fe8:	str	r3, [fp, #-20]	; 0xffffffec
   52fec:	ldr	r3, [fp, #-8]
   52ff0:	ldr	r3, [r3]
   52ff4:	str	r3, [fp, #-8]
   52ff8:	ldr	r3, [fp, #-16]
   52ffc:	ldr	r3, [r3]
   53000:	str	r3, [fp, #-16]
   53004:	ldr	r3, [fp, #-8]
   53008:	cmp	r3, #0
   5300c:	bne	53018 <__assert_fail@plt+0x4092c>
   53010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53014:	b	53058 <__assert_fail@plt+0x4096c>
   53018:	ldr	r3, [fp, #-8]
   5301c:	ldr	r3, [r3, #8]
   53020:	ldr	r2, [fp, #-20]	; 0xffffffec
   53024:	cmp	r2, r3
   53028:	beq	52fe4 <__assert_fail@plt+0x408f8>
   5302c:	ldr	r3, [fp, #-8]
   53030:	ldr	r3, [r3, #8]
   53034:	cmp	r3, #0
   53038:	beq	52fe4 <__assert_fail@plt+0x408f8>
   5303c:	ldr	r3, [fp, #-8]
   53040:	ldr	r3, [r3, #8]
   53044:	str	r3, [fp, #-8]
   53048:	ldr	r3, [fp, #-16]
   5304c:	add	r3, r3, #8
   53050:	str	r3, [fp, #-12]
   53054:	b	52f40 <__assert_fail@plt+0x40854>
   53058:	mov	r0, r3
   5305c:	sub	sp, fp, #4
   53060:	ldr	fp, [sp]
   53064:	add	sp, sp, #4
   53068:	pop	{pc}		; (ldr pc, [sp], #4)
   5306c:	str	fp, [sp, #-8]!
   53070:	str	lr, [sp, #4]
   53074:	add	fp, sp, #4
   53078:	sub	sp, sp, #56	; 0x38
   5307c:	str	r0, [fp, #-24]	; 0xffffffe8
   53080:	str	r1, [fp, #-28]	; 0xffffffe4
   53084:	str	r2, [fp, #-32]	; 0xffffffe0
   53088:	str	r3, [fp, #-36]	; 0xffffffdc
   5308c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53090:	ldr	r3, [r3]
   53094:	str	r3, [fp, #-20]	; 0xffffffec
   53098:	ldr	r3, [fp, #4]
   5309c:	bic	r3, r3, #7
   530a0:	cmp	r3, #0
   530a4:	beq	530b0 <__assert_fail@plt+0x409c4>
   530a8:	mov	r3, #2
   530ac:	b	5320c <__assert_fail@plt+0x40b20>
   530b0:	ldr	r3, [fp, #4]
   530b4:	and	r3, r3, #4
   530b8:	cmp	r3, #0
   530bc:	beq	530dc <__assert_fail@plt+0x409f0>
   530c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   530c4:	ldr	r3, [r3]
   530c8:	str	r3, [fp, #-12]
   530cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   530d0:	ldr	r3, [r3, #4]
   530d4:	str	r3, [fp, #-16]
   530d8:	b	530f4 <__assert_fail@plt+0x40a08>
   530dc:	mov	r3, #0
   530e0:	str	r3, [fp, #-12]
   530e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   530e8:	bl	123bc <strlen@plt>
   530ec:	mov	r3, r0
   530f0:	str	r3, [fp, #-16]
   530f4:	movw	r3, #9316	; 0x2464
   530f8:	movt	r3, #1
   530fc:	cmp	r3, #0
   53100:	bne	53114 <__assert_fail@plt+0x40a28>
   53104:	movw	r3, #8392	; 0x20c8
   53108:	movt	r3, #1
   5310c:	cmp	r3, #0
   53110:	beq	53128 <__assert_fail@plt+0x40a3c>
   53114:	ldr	r3, [fp, #-20]	; 0xffffffec
   53118:	add	r3, r3, #136	; 0x88
   5311c:	mov	r0, r3
   53120:	bl	120a4 <pthread_mutex_lock@plt>
   53124:	nop	{0}
   53128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5312c:	ldrb	r3, [r3, #28]
   53130:	and	r3, r3, #16
   53134:	uxtb	r3, r3
   53138:	cmp	r3, #0
   5313c:	beq	53184 <__assert_fail@plt+0x40a98>
   53140:	ldr	r3, [fp, #4]
   53144:	str	r3, [sp, #16]
   53148:	mov	r3, #0
   5314c:	str	r3, [sp, #12]
   53150:	mov	r3, #0
   53154:	str	r3, [sp, #8]
   53158:	ldr	r3, [fp, #-16]
   5315c:	str	r3, [sp, #4]
   53160:	ldr	r3, [fp, #-16]
   53164:	str	r3, [sp]
   53168:	ldr	r3, [fp, #-12]
   5316c:	ldr	r2, [fp, #-16]
   53170:	ldr	r1, [fp, #-28]	; 0xffffffe4
   53174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53178:	bl	53e04 <__assert_fail@plt+0x41718>
   5317c:	str	r0, [fp, #-8]
   53180:	b	531c4 <__assert_fail@plt+0x40ad8>
   53184:	ldr	r3, [fp, #4]
   53188:	str	r3, [sp, #16]
   5318c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   53190:	str	r3, [sp, #12]
   53194:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53198:	str	r3, [sp, #8]
   5319c:	ldr	r3, [fp, #-16]
   531a0:	str	r3, [sp, #4]
   531a4:	ldr	r3, [fp, #-16]
   531a8:	str	r3, [sp]
   531ac:	ldr	r3, [fp, #-12]
   531b0:	ldr	r2, [fp, #-16]
   531b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   531b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   531bc:	bl	53e04 <__assert_fail@plt+0x41718>
   531c0:	str	r0, [fp, #-8]
   531c4:	movw	r3, #9316	; 0x2464
   531c8:	movt	r3, #1
   531cc:	cmp	r3, #0
   531d0:	bne	531e4 <__assert_fail@plt+0x40af8>
   531d4:	movw	r3, #8392	; 0x20c8
   531d8:	movt	r3, #1
   531dc:	cmp	r3, #0
   531e0:	beq	531f8 <__assert_fail@plt+0x40b0c>
   531e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   531e8:	add	r3, r3, #136	; 0x88
   531ec:	mov	r0, r3
   531f0:	bl	11f60 <pthread_mutex_unlock@plt>
   531f4:	nop	{0}
   531f8:	ldr	r3, [fp, #-8]
   531fc:	cmp	r3, #0
   53200:	movne	r3, #1
   53204:	moveq	r3, #0
   53208:	uxtb	r3, r3
   5320c:	mov	r0, r3
   53210:	sub	sp, fp, #4
   53214:	ldr	fp, [sp]
   53218:	add	sp, sp, #4
   5321c:	pop	{pc}		; (ldr pc, [sp], #4)
   53220:	str	fp, [sp, #-8]!
   53224:	str	lr, [sp, #4]
   53228:	add	fp, sp, #4
   5322c:	sub	sp, sp, #32
   53230:	str	r0, [fp, #-8]
   53234:	str	r1, [fp, #-12]
   53238:	str	r2, [fp, #-16]
   5323c:	str	r3, [fp, #-20]	; 0xffffffec
   53240:	mov	r3, #1
   53244:	str	r3, [sp, #12]
   53248:	ldr	r3, [fp, #4]
   5324c:	str	r3, [sp, #8]
   53250:	ldr	r3, [fp, #-16]
   53254:	str	r3, [sp, #4]
   53258:	mov	r3, #0
   5325c:	str	r3, [sp]
   53260:	ldr	r3, [fp, #-20]	; 0xffffffec
   53264:	ldr	r2, [fp, #-16]
   53268:	ldr	r1, [fp, #-12]
   5326c:	ldr	r0, [fp, #-8]
   53270:	bl	535ac <__assert_fail@plt+0x40ec0>
   53274:	mov	r3, r0
   53278:	mov	r0, r3
   5327c:	sub	sp, fp, #4
   53280:	ldr	fp, [sp]
   53284:	add	sp, sp, #4
   53288:	pop	{pc}		; (ldr pc, [sp], #4)
   5328c:	str	fp, [sp, #-8]!
   53290:	str	lr, [sp, #4]
   53294:	add	fp, sp, #4
   53298:	sub	sp, sp, #32
   5329c:	str	r0, [fp, #-8]
   532a0:	str	r1, [fp, #-12]
   532a4:	str	r2, [fp, #-16]
   532a8:	str	r3, [fp, #-20]	; 0xffffffec
   532ac:	mov	r3, #0
   532b0:	str	r3, [sp, #12]
   532b4:	ldr	r3, [fp, #8]
   532b8:	str	r3, [sp, #8]
   532bc:	ldr	r3, [fp, #-16]
   532c0:	str	r3, [sp, #4]
   532c4:	ldr	r3, [fp, #4]
   532c8:	str	r3, [sp]
   532cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   532d0:	ldr	r2, [fp, #-16]
   532d4:	ldr	r1, [fp, #-12]
   532d8:	ldr	r0, [fp, #-8]
   532dc:	bl	535ac <__assert_fail@plt+0x40ec0>
   532e0:	mov	r3, r0
   532e4:	mov	r0, r3
   532e8:	sub	sp, fp, #4
   532ec:	ldr	fp, [sp]
   532f0:	add	sp, sp, #4
   532f4:	pop	{pc}		; (ldr pc, [sp], #4)
   532f8:	str	fp, [sp, #-8]!
   532fc:	str	lr, [sp, #4]
   53300:	add	fp, sp, #4
   53304:	sub	sp, sp, #40	; 0x28
   53308:	str	r0, [fp, #-8]
   5330c:	str	r1, [fp, #-12]
   53310:	str	r2, [fp, #-16]
   53314:	str	r3, [fp, #-20]	; 0xffffffec
   53318:	mov	r3, #1
   5331c:	str	r3, [sp, #20]
   53320:	ldr	r3, [fp, #16]
   53324:	str	r3, [sp, #16]
   53328:	ldr	r3, [fp, #12]
   5332c:	str	r3, [sp, #12]
   53330:	mov	r3, #0
   53334:	str	r3, [sp, #8]
   53338:	ldr	r3, [fp, #8]
   5333c:	str	r3, [sp, #4]
   53340:	ldr	r3, [fp, #4]
   53344:	str	r3, [sp]
   53348:	ldr	r3, [fp, #-20]	; 0xffffffec
   5334c:	ldr	r2, [fp, #-16]
   53350:	ldr	r1, [fp, #-12]
   53354:	ldr	r0, [fp, #-8]
   53358:	bl	533f0 <__assert_fail@plt+0x40d04>
   5335c:	mov	r3, r0
   53360:	mov	r0, r3
   53364:	sub	sp, fp, #4
   53368:	ldr	fp, [sp]
   5336c:	add	sp, sp, #4
   53370:	pop	{pc}		; (ldr pc, [sp], #4)
   53374:	str	fp, [sp, #-8]!
   53378:	str	lr, [sp, #4]
   5337c:	add	fp, sp, #4
   53380:	sub	sp, sp, #40	; 0x28
   53384:	str	r0, [fp, #-8]
   53388:	str	r1, [fp, #-12]
   5338c:	str	r2, [fp, #-16]
   53390:	str	r3, [fp, #-20]	; 0xffffffec
   53394:	mov	r3, #0
   53398:	str	r3, [sp, #20]
   5339c:	ldr	r3, [fp, #20]
   533a0:	str	r3, [sp, #16]
   533a4:	ldr	r3, [fp, #16]
   533a8:	str	r3, [sp, #12]
   533ac:	ldr	r3, [fp, #12]
   533b0:	str	r3, [sp, #8]
   533b4:	ldr	r3, [fp, #8]
   533b8:	str	r3, [sp, #4]
   533bc:	ldr	r3, [fp, #4]
   533c0:	str	r3, [sp]
   533c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   533c8:	ldr	r2, [fp, #-16]
   533cc:	ldr	r1, [fp, #-12]
   533d0:	ldr	r0, [fp, #-8]
   533d4:	bl	533f0 <__assert_fail@plt+0x40d04>
   533d8:	mov	r3, r0
   533dc:	mov	r0, r3
   533e0:	sub	sp, fp, #4
   533e4:	ldr	fp, [sp]
   533e8:	add	sp, sp, #4
   533ec:	pop	{pc}		; (ldr pc, [sp], #4)
   533f0:	str	fp, [sp, #-8]!
   533f4:	str	lr, [sp, #4]
   533f8:	add	fp, sp, #4
   533fc:	sub	sp, sp, #48	; 0x30
   53400:	str	r0, [fp, #-24]	; 0xffffffe8
   53404:	str	r1, [fp, #-28]	; 0xffffffe4
   53408:	str	r2, [fp, #-32]	; 0xffffffe0
   5340c:	str	r3, [fp, #-36]	; 0xffffffdc
   53410:	mov	r3, #0
   53414:	str	r3, [fp, #-12]
   53418:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5341c:	lsr	r3, r3, #31
   53420:	uxtb	r3, r3
   53424:	cmp	r3, #0
   53428:	bne	53440 <__assert_fail@plt+0x40d54>
   5342c:	ldr	r3, [fp, #4]
   53430:	lsr	r3, r3, #31
   53434:	uxtb	r3, r3
   53438:	cmp	r3, #0
   5343c:	beq	53448 <__assert_fail@plt+0x40d5c>
   53440:	mov	r3, #1
   53444:	b	5344c <__assert_fail@plt+0x40d60>
   53448:	mov	r3, #0
   5344c:	cmp	r3, #0
   53450:	bne	53468 <__assert_fail@plt+0x40d7c>
   53454:	ldr	r3, [fp, #20]
   53458:	lsr	r3, r3, #31
   5345c:	uxtb	r3, r3
   53460:	cmp	r3, #0
   53464:	beq	53470 <__assert_fail@plt+0x40d84>
   53468:	mov	r3, #1
   5346c:	b	53474 <__assert_fail@plt+0x40d88>
   53470:	mov	r3, #0
   53474:	cmp	r3, #0
   53478:	bne	534ac <__assert_fail@plt+0x40dc0>
   5347c:	mov	r1, #0
   53480:	ldr	r2, [fp, #-32]	; 0xffffffe0
   53484:	ldr	r3, [fp, #4]
   53488:	adds	r3, r2, r3
   5348c:	bvc	53494 <__assert_fail@plt+0x40da8>
   53490:	mov	r1, #1
   53494:	str	r3, [fp, #-20]	; 0xffffffec
   53498:	mov	r3, r1
   5349c:	and	r3, r3, #1
   534a0:	uxtb	r3, r3
   534a4:	cmp	r3, #0
   534a8:	beq	534b4 <__assert_fail@plt+0x40dc8>
   534ac:	mvn	r3, #1
   534b0:	b	53598 <__assert_fail@plt+0x40eac>
   534b4:	ldr	r3, [fp, #4]
   534b8:	cmp	r3, #0
   534bc:	ble	5354c <__assert_fail@plt+0x40e60>
   534c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   534c4:	cmp	r3, #0
   534c8:	ble	53540 <__assert_fail@plt+0x40e54>
   534cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   534d0:	mov	r0, r3
   534d4:	bl	43510 <__assert_fail@plt+0x30e24>
   534d8:	mov	r3, r0
   534dc:	str	r3, [fp, #-12]
   534e0:	ldr	r3, [fp, #-12]
   534e4:	cmp	r3, #0
   534e8:	moveq	r3, #1
   534ec:	movne	r3, #0
   534f0:	uxtb	r3, r3
   534f4:	cmp	r3, #0
   534f8:	beq	53504 <__assert_fail@plt+0x40e18>
   534fc:	mvn	r3, #1
   53500:	b	53598 <__assert_fail@plt+0x40eac>
   53504:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53508:	mov	r2, r3
   5350c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   53510:	ldr	r0, [fp, #-12]
   53514:	bl	120f8 <memcpy@plt>
   53518:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5351c:	ldr	r2, [fp, #-12]
   53520:	add	r3, r2, r3
   53524:	ldr	r2, [fp, #4]
   53528:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5352c:	mov	r0, r3
   53530:	bl	120f8 <memcpy@plt>
   53534:	ldr	r3, [fp, #-12]
   53538:	str	r3, [fp, #-8]
   5353c:	b	53554 <__assert_fail@plt+0x40e68>
   53540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   53544:	str	r3, [fp, #-8]
   53548:	b	53554 <__assert_fail@plt+0x40e68>
   5354c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   53550:	str	r3, [fp, #-8]
   53554:	ldr	r2, [fp, #-20]	; 0xffffffec
   53558:	ldrb	r3, [fp, #24]
   5355c:	str	r3, [sp, #12]
   53560:	ldr	r3, [fp, #16]
   53564:	str	r3, [sp, #8]
   53568:	ldr	r3, [fp, #20]
   5356c:	str	r3, [sp, #4]
   53570:	ldr	r3, [fp, #12]
   53574:	str	r3, [sp]
   53578:	ldr	r3, [fp, #8]
   5357c:	ldr	r1, [fp, #-8]
   53580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   53584:	bl	535ac <__assert_fail@plt+0x40ec0>
   53588:	str	r0, [fp, #-16]
   5358c:	ldr	r0, [fp, #-12]
   53590:	bl	3fe0c <__assert_fail@plt+0x2d720>
   53594:	ldr	r3, [fp, #-16]
   53598:	mov	r0, r3
   5359c:	sub	sp, fp, #4
   535a0:	ldr	fp, [sp]
   535a4:	add	sp, sp, #4
   535a8:	pop	{pc}		; (ldr pc, [sp], #4)
   535ac:	str	fp, [sp, #-8]!
   535b0:	str	lr, [sp, #4]
   535b4:	add	fp, sp, #4
   535b8:	sub	sp, sp, #72	; 0x48
   535bc:	str	r0, [fp, #-40]	; 0xffffffd8
   535c0:	str	r1, [fp, #-44]	; 0xffffffd4
   535c4:	str	r2, [fp, #-48]	; 0xffffffd0
   535c8:	str	r3, [fp, #-52]	; 0xffffffcc
   535cc:	mov	r3, #0
   535d0:	str	r3, [fp, #-20]	; 0xffffffec
   535d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   535d8:	ldr	r3, [r3]
   535dc:	str	r3, [fp, #-24]	; 0xffffffe8
   535e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   535e4:	ldr	r3, [fp, #4]
   535e8:	add	r3, r2, r3
   535ec:	str	r3, [fp, #-16]
   535f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   535f4:	lsr	r3, r3, #31
   535f8:	uxtb	r3, r3
   535fc:	cmp	r3, #0
   53600:	bne	53624 <__assert_fail@plt+0x40f38>
   53604:	ldr	r2, [fp, #-52]	; 0xffffffcc
   53608:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5360c:	cmp	r2, r3
   53610:	movgt	r3, #1
   53614:	movle	r3, #0
   53618:	uxtb	r3, r3
   5361c:	cmp	r3, #0
   53620:	beq	5362c <__assert_fail@plt+0x40f40>
   53624:	mvn	r3, #0
   53628:	b	53a58 <__assert_fail@plt+0x4136c>
   5362c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   53630:	ldr	r3, [fp, #-16]
   53634:	cmp	r2, r3
   53638:	movlt	r3, #1
   5363c:	movge	r3, #0
   53640:	uxtb	r3, r3
   53644:	cmp	r3, #0
   53648:	bne	53698 <__assert_fail@plt+0x40fac>
   5364c:	ldr	r3, [fp, #4]
   53650:	mvn	r3, r3
   53654:	lsr	r3, r3, #31
   53658:	uxtb	r3, r3
   5365c:	cmp	r3, #0
   53660:	beq	5368c <__assert_fail@plt+0x40fa0>
   53664:	ldr	r2, [fp, #-16]
   53668:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5366c:	cmp	r2, r3
   53670:	movlt	r3, #1
   53674:	movge	r3, #0
   53678:	uxtb	r3, r3
   5367c:	cmp	r3, #0
   53680:	beq	5368c <__assert_fail@plt+0x40fa0>
   53684:	mov	r3, #1
   53688:	b	53690 <__assert_fail@plt+0x40fa4>
   5368c:	mov	r3, #0
   53690:	cmp	r3, #0
   53694:	beq	536a4 <__assert_fail@plt+0x40fb8>
   53698:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5369c:	str	r3, [fp, #-16]
   536a0:	b	53708 <__assert_fail@plt+0x4101c>
   536a4:	ldr	r3, [fp, #-16]
   536a8:	lsr	r3, r3, #31
   536ac:	uxtb	r3, r3
   536b0:	cmp	r3, #0
   536b4:	bne	53700 <__assert_fail@plt+0x41014>
   536b8:	ldr	r3, [fp, #4]
   536bc:	lsr	r3, r3, #31
   536c0:	uxtb	r3, r3
   536c4:	cmp	r3, #0
   536c8:	beq	536f4 <__assert_fail@plt+0x41008>
   536cc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   536d0:	ldr	r3, [fp, #-16]
   536d4:	cmp	r2, r3
   536d8:	movle	r3, #1
   536dc:	movgt	r3, #0
   536e0:	uxtb	r3, r3
   536e4:	cmp	r3, #0
   536e8:	beq	536f4 <__assert_fail@plt+0x41008>
   536ec:	mov	r3, #1
   536f0:	b	536f8 <__assert_fail@plt+0x4100c>
   536f4:	mov	r3, #0
   536f8:	cmp	r3, #0
   536fc:	beq	53708 <__assert_fail@plt+0x4101c>
   53700:	mov	r3, #0
   53704:	str	r3, [fp, #-16]
   53708:	movw	r3, #9316	; 0x2464
   5370c:	movt	r3, #1
   53710:	cmp	r3, #0
   53714:	bne	53728 <__assert_fail@plt+0x4103c>
   53718:	movw	r3, #8392	; 0x20c8
   5371c:	movt	r3, #1
   53720:	cmp	r3, #0
   53724:	beq	5373c <__assert_fail@plt+0x41050>
   53728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5372c:	add	r3, r3, #136	; 0x88
   53730:	mov	r0, r3
   53734:	bl	120a4 <pthread_mutex_lock@plt>
   53738:	nop	{0}
   5373c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53740:	ldrb	r3, [r3, #28]
   53744:	lsr	r3, r3, #5
   53748:	uxtb	r3, r3
   5374c:	and	r3, r3, #1
   53750:	ldr	r2, [fp, #-20]	; 0xffffffec
   53754:	orr	r3, r2, r3
   53758:	str	r3, [fp, #-20]	; 0xffffffec
   5375c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53760:	ldrb	r3, [r3, #28]
   53764:	lsr	r3, r3, #5
   53768:	uxtb	r3, r3
   5376c:	and	r3, r3, #2
   53770:	ldr	r2, [fp, #-20]	; 0xffffffec
   53774:	orr	r3, r2, r3
   53778:	str	r3, [fp, #-20]	; 0xffffffec
   5377c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   53780:	ldr	r3, [fp, #-16]
   53784:	cmp	r2, r3
   53788:	bge	537bc <__assert_fail@plt+0x410d0>
   5378c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53790:	ldr	r3, [r3, #16]
   53794:	cmp	r3, #0
   53798:	beq	537bc <__assert_fail@plt+0x410d0>
   5379c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   537a0:	ldrb	r3, [r3, #28]
   537a4:	and	r3, r3, #8
   537a8:	uxtb	r3, r3
   537ac:	cmp	r3, #0
   537b0:	bne	537bc <__assert_fail@plt+0x410d0>
   537b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   537b8:	bl	49edc <__assert_fail@plt+0x377f0>
   537bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   537c0:	ldrb	r3, [r3, #28]
   537c4:	ubfx	r3, r3, #4, #1
   537c8:	uxtb	r3, r3
   537cc:	cmp	r3, #0
   537d0:	beq	537dc <__assert_fail@plt+0x410f0>
   537d4:	mov	r3, #0
   537d8:	str	r3, [fp, #12]
   537dc:	ldr	r3, [fp, #12]
   537e0:	cmp	r3, #0
   537e4:	bne	537f4 <__assert_fail@plt+0x41108>
   537e8:	mov	r3, #1
   537ec:	str	r3, [fp, #-8]
   537f0:	b	53890 <__assert_fail@plt+0x411a4>
   537f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   537f8:	ldrb	r3, [r3, #28]
   537fc:	and	r3, r3, #6
   53800:	uxtb	r3, r3
   53804:	cmp	r3, #4
   53808:	moveq	r3, #1
   5380c:	movne	r3, #0
   53810:	uxtb	r3, r3
   53814:	cmp	r3, #0
   53818:	beq	53880 <__assert_fail@plt+0x41194>
   5381c:	ldr	r3, [fp, #12]
   53820:	ldr	r2, [r3]
   53824:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53828:	ldr	r3, [r3, #24]
   5382c:	cmp	r2, r3
   53830:	movls	r3, #1
   53834:	movhi	r3, #0
   53838:	uxtb	r3, r3
   5383c:	cmp	r3, #0
   53840:	beq	53880 <__assert_fail@plt+0x41194>
   53844:	ldr	r3, [fp, #12]
   53848:	ldr	r3, [r3]
   5384c:	str	r3, [fp, #-8]
   53850:	ldr	r3, [fp, #-8]
   53854:	cmp	r3, #0
   53858:	movle	r3, #1
   5385c:	movgt	r3, #0
   53860:	uxtb	r3, r3
   53864:	cmp	r3, #0
   53868:	beq	53890 <__assert_fail@plt+0x411a4>
   5386c:	mov	r3, #0
   53870:	str	r3, [fp, #12]
   53874:	mov	r3, #1
   53878:	str	r3, [fp, #-8]
   5387c:	b	53890 <__assert_fail@plt+0x411a4>
   53880:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53884:	ldr	r3, [r3, #24]
   53888:	add	r3, r3, #1
   5388c:	str	r3, [fp, #-8]
   53890:	ldr	r3, [fp, #-8]
   53894:	lsl	r3, r3, #3
   53898:	mov	r0, r3
   5389c:	bl	43510 <__assert_fail@plt+0x30e24>
   538a0:	mov	r3, r0
   538a4:	str	r3, [fp, #-28]	; 0xffffffe4
   538a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   538ac:	cmp	r3, #0
   538b0:	moveq	r3, #1
   538b4:	movne	r3, #0
   538b8:	uxtb	r3, r3
   538bc:	cmp	r3, #0
   538c0:	beq	538d0 <__assert_fail@plt+0x411e4>
   538c4:	mvn	r3, #1
   538c8:	str	r3, [fp, #-12]
   538cc:	b	53a20 <__assert_fail@plt+0x41334>
   538d0:	ldr	r3, [fp, #-8]
   538d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   538d8:	str	r2, [sp, #16]
   538dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   538e0:	str	r2, [sp, #12]
   538e4:	str	r3, [sp, #8]
   538e8:	ldr	r3, [fp, #8]
   538ec:	str	r3, [sp, #4]
   538f0:	ldr	r3, [fp, #-16]
   538f4:	str	r3, [sp]
   538f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   538fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   53900:	ldr	r1, [fp, #-44]	; 0xffffffd4
   53904:	ldr	r0, [fp, #-40]	; 0xffffffd8
   53908:	bl	53e04 <__assert_fail@plt+0x41718>
   5390c:	str	r0, [fp, #-32]	; 0xffffffe0
   53910:	mov	r3, #0
   53914:	str	r3, [fp, #-12]
   53918:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5391c:	cmp	r3, #0
   53920:	beq	53944 <__assert_fail@plt+0x41258>
   53924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53928:	cmp	r3, #1
   5392c:	bne	53938 <__assert_fail@plt+0x4124c>
   53930:	mvn	r3, #0
   53934:	b	5393c <__assert_fail@plt+0x41250>
   53938:	mvn	r3, #1
   5393c:	str	r3, [fp, #-12]
   53940:	b	539bc <__assert_fail@plt+0x412d0>
   53944:	ldr	r3, [fp, #12]
   53948:	cmp	r3, #0
   5394c:	beq	539bc <__assert_fail@plt+0x412d0>
   53950:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53954:	ldrb	r3, [r3, #28]
   53958:	ubfx	r3, r3, #1, #2
   5395c:	uxtb	r3, r3
   53960:	ldr	r2, [fp, #-8]
   53964:	ldr	r1, [fp, #-28]	; 0xffffffe4
   53968:	ldr	r0, [fp, #12]
   5396c:	bl	53a6c <__assert_fail@plt+0x41380>
   53970:	mov	r3, r0
   53974:	and	r3, r3, #3
   53978:	uxtb	r1, r3
   5397c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   53980:	ldrb	r3, [r2, #28]
   53984:	bfi	r3, r1, #1, #2
   53988:	strb	r3, [r2, #28]
   5398c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53990:	ldrb	r3, [r3, #28]
   53994:	and	r3, r3, #6
   53998:	uxtb	r3, r3
   5399c:	cmp	r3, #0
   539a0:	moveq	r3, #1
   539a4:	movne	r3, #0
   539a8:	uxtb	r3, r3
   539ac:	cmp	r3, #0
   539b0:	beq	539bc <__assert_fail@plt+0x412d0>
   539b4:	mvn	r3, #1
   539b8:	str	r3, [fp, #-12]
   539bc:	ldr	r3, [fp, #-12]
   539c0:	cmp	r3, #0
   539c4:	moveq	r3, #1
   539c8:	movne	r3, #0
   539cc:	uxtb	r3, r3
   539d0:	cmp	r3, #0
   539d4:	beq	53a18 <__assert_fail@plt+0x4132c>
   539d8:	ldrb	r3, [fp, #16]
   539dc:	cmp	r3, #0
   539e0:	beq	53a0c <__assert_fail@plt+0x41320>
   539e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   539e8:	ldr	r3, [r3]
   539ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   539f0:	cmp	r2, r3
   539f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   539f8:	ldr	r2, [r3, #4]
   539fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   53a00:	sub	r3, r2, r3
   53a04:	str	r3, [fp, #-12]
   53a08:	b	53a18 <__assert_fail@plt+0x4132c>
   53a0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   53a10:	ldr	r3, [r3]
   53a14:	str	r3, [fp, #-12]
   53a18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   53a1c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   53a20:	movw	r3, #9316	; 0x2464
   53a24:	movt	r3, #1
   53a28:	cmp	r3, #0
   53a2c:	bne	53a40 <__assert_fail@plt+0x41354>
   53a30:	movw	r3, #8392	; 0x20c8
   53a34:	movt	r3, #1
   53a38:	cmp	r3, #0
   53a3c:	beq	53a54 <__assert_fail@plt+0x41368>
   53a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53a44:	add	r3, r3, #136	; 0x88
   53a48:	mov	r0, r3
   53a4c:	bl	11f60 <pthread_mutex_unlock@plt>
   53a50:	nop	{0}
   53a54:	ldr	r3, [fp, #-12]
   53a58:	mov	r0, r3
   53a5c:	sub	sp, fp, #4
   53a60:	ldr	fp, [sp]
   53a64:	add	sp, sp, #4
   53a68:	pop	{pc}		; (ldr pc, [sp], #4)
   53a6c:	str	fp, [sp, #-8]!
   53a70:	str	lr, [sp, #4]
   53a74:	add	fp, sp, #4
   53a78:	sub	sp, sp, #40	; 0x28
   53a7c:	str	r0, [fp, #-32]	; 0xffffffe0
   53a80:	str	r1, [fp, #-36]	; 0xffffffdc
   53a84:	str	r2, [fp, #-40]	; 0xffffffd8
   53a88:	str	r3, [fp, #-44]	; 0xffffffd4
   53a8c:	mov	r3, #1
   53a90:	str	r3, [fp, #-8]
   53a94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53a98:	add	r3, r3, #1
   53a9c:	str	r3, [fp, #-16]
   53aa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   53aa4:	cmp	r3, #0
   53aa8:	bne	53b5c <__assert_fail@plt+0x41470>
   53aac:	ldr	r3, [fp, #-16]
   53ab0:	lsl	r3, r3, #2
   53ab4:	mov	r0, r3
   53ab8:	bl	43510 <__assert_fail@plt+0x30e24>
   53abc:	mov	r3, r0
   53ac0:	mov	r2, r3
   53ac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53ac8:	str	r2, [r3, #4]
   53acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53ad0:	ldr	r3, [r3, #4]
   53ad4:	cmp	r3, #0
   53ad8:	moveq	r3, #1
   53adc:	movne	r3, #0
   53ae0:	uxtb	r3, r3
   53ae4:	cmp	r3, #0
   53ae8:	beq	53af4 <__assert_fail@plt+0x41408>
   53aec:	mov	r3, #0
   53af0:	b	53d44 <__assert_fail@plt+0x41658>
   53af4:	ldr	r3, [fp, #-16]
   53af8:	lsl	r3, r3, #2
   53afc:	mov	r0, r3
   53b00:	bl	43510 <__assert_fail@plt+0x30e24>
   53b04:	mov	r3, r0
   53b08:	mov	r2, r3
   53b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53b10:	str	r2, [r3, #8]
   53b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53b18:	ldr	r3, [r3, #8]
   53b1c:	cmp	r3, #0
   53b20:	moveq	r3, #1
   53b24:	movne	r3, #0
   53b28:	uxtb	r3, r3
   53b2c:	cmp	r3, #0
   53b30:	beq	53b4c <__assert_fail@plt+0x41460>
   53b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53b38:	ldr	r3, [r3, #4]
   53b3c:	mov	r0, r3
   53b40:	bl	3fe0c <__assert_fail@plt+0x2d720>
   53b44:	mov	r3, #0
   53b48:	b	53d44 <__assert_fail@plt+0x41658>
   53b4c:	ldr	r2, [fp, #-16]
   53b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53b54:	str	r2, [r3]
   53b58:	b	53c64 <__assert_fail@plt+0x41578>
   53b5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   53b60:	cmp	r3, #1
   53b64:	bne	53c44 <__assert_fail@plt+0x41558>
   53b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53b6c:	ldr	r2, [r3]
   53b70:	ldr	r3, [fp, #-16]
   53b74:	cmp	r2, r3
   53b78:	movcc	r3, #1
   53b7c:	movcs	r3, #0
   53b80:	uxtb	r3, r3
   53b84:	cmp	r3, #0
   53b88:	beq	53c64 <__assert_fail@plt+0x41578>
   53b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53b90:	ldr	r2, [r3, #4]
   53b94:	ldr	r3, [fp, #-16]
   53b98:	lsl	r3, r3, #2
   53b9c:	mov	r1, r3
   53ba0:	mov	r0, r2
   53ba4:	bl	446e8 <__assert_fail@plt+0x31ffc>
   53ba8:	str	r0, [fp, #-20]	; 0xffffffec
   53bac:	ldr	r3, [fp, #-20]	; 0xffffffec
   53bb0:	cmp	r3, #0
   53bb4:	moveq	r3, #1
   53bb8:	movne	r3, #0
   53bbc:	uxtb	r3, r3
   53bc0:	cmp	r3, #0
   53bc4:	beq	53bd0 <__assert_fail@plt+0x414e4>
   53bc8:	mov	r3, #0
   53bcc:	b	53d44 <__assert_fail@plt+0x41658>
   53bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53bd4:	ldr	r2, [r3, #8]
   53bd8:	ldr	r3, [fp, #-16]
   53bdc:	lsl	r3, r3, #2
   53be0:	mov	r1, r3
   53be4:	mov	r0, r2
   53be8:	bl	446e8 <__assert_fail@plt+0x31ffc>
   53bec:	str	r0, [fp, #-24]	; 0xffffffe8
   53bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   53bf4:	cmp	r3, #0
   53bf8:	moveq	r3, #1
   53bfc:	movne	r3, #0
   53c00:	uxtb	r3, r3
   53c04:	cmp	r3, #0
   53c08:	beq	53c1c <__assert_fail@plt+0x41530>
   53c0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   53c10:	bl	3fe0c <__assert_fail@plt+0x2d720>
   53c14:	mov	r3, #0
   53c18:	b	53d44 <__assert_fail@plt+0x41658>
   53c1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53c20:	ldr	r2, [fp, #-20]	; 0xffffffec
   53c24:	str	r2, [r3, #4]
   53c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53c2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   53c30:	str	r2, [r3, #8]
   53c34:	ldr	r2, [fp, #-16]
   53c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53c3c:	str	r2, [r3]
   53c40:	b	53c64 <__assert_fail@plt+0x41578>
   53c44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   53c48:	cmp	r3, #2
   53c4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53c50:	ldr	r2, [r3]
   53c54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53c58:	cmp	r2, r3
   53c5c:	mov	r3, #2
   53c60:	str	r3, [fp, #-8]
   53c64:	mov	r3, #0
   53c68:	str	r3, [fp, #-12]
   53c6c:	b	53cd4 <__assert_fail@plt+0x415e8>
   53c70:	ldr	r3, [fp, #-12]
   53c74:	lsl	r3, r3, #3
   53c78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   53c7c:	add	r2, r2, r3
   53c80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53c84:	ldr	r1, [r3, #4]
   53c88:	ldr	r3, [fp, #-12]
   53c8c:	lsl	r3, r3, #2
   53c90:	add	r3, r1, r3
   53c94:	ldr	r2, [r2]
   53c98:	str	r2, [r3]
   53c9c:	ldr	r3, [fp, #-12]
   53ca0:	lsl	r3, r3, #3
   53ca4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   53ca8:	add	r2, r2, r3
   53cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53cb0:	ldr	r1, [r3, #8]
   53cb4:	ldr	r3, [fp, #-12]
   53cb8:	lsl	r3, r3, #2
   53cbc:	add	r3, r1, r3
   53cc0:	ldr	r2, [r2, #4]
   53cc4:	str	r2, [r3]
   53cc8:	ldr	r3, [fp, #-12]
   53ccc:	add	r3, r3, #1
   53cd0:	str	r3, [fp, #-12]
   53cd4:	ldr	r2, [fp, #-12]
   53cd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   53cdc:	cmp	r2, r3
   53ce0:	blt	53c70 <__assert_fail@plt+0x41584>
   53ce4:	b	53d2c <__assert_fail@plt+0x41640>
   53ce8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53cec:	ldr	r2, [r3, #8]
   53cf0:	ldr	r3, [fp, #-12]
   53cf4:	lsl	r3, r3, #2
   53cf8:	add	r3, r2, r3
   53cfc:	mvn	r2, #0
   53d00:	str	r2, [r3]
   53d04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   53d08:	ldr	r1, [r2, #4]
   53d0c:	ldr	r2, [fp, #-12]
   53d10:	lsl	r2, r2, #2
   53d14:	add	r2, r1, r2
   53d18:	ldr	r3, [r3]
   53d1c:	str	r3, [r2]
   53d20:	ldr	r3, [fp, #-12]
   53d24:	add	r3, r3, #1
   53d28:	str	r3, [fp, #-12]
   53d2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   53d30:	ldr	r2, [r3]
   53d34:	ldr	r3, [fp, #-12]
   53d38:	cmp	r2, r3
   53d3c:	bhi	53ce8 <__assert_fail@plt+0x415fc>
   53d40:	ldr	r3, [fp, #-8]
   53d44:	mov	r0, r3
   53d48:	sub	sp, fp, #4
   53d4c:	ldr	fp, [sp]
   53d50:	add	sp, sp, #4
   53d54:	pop	{pc}		; (ldr pc, [sp], #4)
   53d58:	push	{fp}		; (str fp, [sp, #-4]!)
   53d5c:	add	fp, sp, #0
   53d60:	sub	sp, sp, #20
   53d64:	str	r0, [fp, #-8]
   53d68:	str	r1, [fp, #-12]
   53d6c:	str	r2, [fp, #-16]
   53d70:	str	r3, [fp, #-20]	; 0xffffffec
   53d74:	ldr	r3, [fp, #-16]
   53d78:	cmp	r3, #0
   53d7c:	beq	53dbc <__assert_fail@plt+0x416d0>
   53d80:	ldr	r2, [fp, #-8]
   53d84:	ldrb	r3, [r2, #28]
   53d88:	mov	r1, #1
   53d8c:	bfi	r3, r1, #1, #2
   53d90:	strb	r3, [r2, #28]
   53d94:	ldr	r3, [fp, #-12]
   53d98:	ldr	r2, [fp, #-16]
   53d9c:	str	r2, [r3]
   53da0:	ldr	r3, [fp, #-12]
   53da4:	ldr	r2, [fp, #-20]	; 0xffffffec
   53da8:	str	r2, [r3, #4]
   53dac:	ldr	r3, [fp, #-12]
   53db0:	ldr	r2, [fp, #4]
   53db4:	str	r2, [r3, #8]
   53db8:	b	53df4 <__assert_fail@plt+0x41708>
   53dbc:	ldr	r2, [fp, #-8]
   53dc0:	ldrb	r3, [r2, #28]
   53dc4:	bfc	r3, #1, #2
   53dc8:	strb	r3, [r2, #28]
   53dcc:	ldr	r3, [fp, #-12]
   53dd0:	mov	r2, #0
   53dd4:	str	r2, [r3]
   53dd8:	ldr	r3, [fp, #-12]
   53ddc:	mov	r2, #0
   53de0:	str	r2, [r3, #8]
   53de4:	ldr	r3, [fp, #-12]
   53de8:	ldr	r2, [r3, #8]
   53dec:	ldr	r3, [fp, #-12]
   53df0:	str	r2, [r3, #4]
   53df4:	nop	{0}
   53df8:	add	sp, fp, #0
   53dfc:	pop	{fp}		; (ldr fp, [sp], #4)
   53e00:	bx	lr
   53e04:	str	fp, [sp, #-8]!
   53e08:	str	lr, [sp, #4]
   53e0c:	add	fp, sp, #4
   53e10:	sub	sp, sp, #240	; 0xf0
   53e14:	str	r0, [fp, #-216]	; 0xffffff28
   53e18:	str	r1, [fp, #-220]	; 0xffffff24
   53e1c:	str	r2, [fp, #-224]	; 0xffffff20
   53e20:	str	r3, [fp, #-228]	; 0xffffff1c
   53e24:	ldr	r3, [fp, #-216]	; 0xffffff28
   53e28:	ldr	r3, [r3]
   53e2c:	str	r3, [fp, #-20]	; 0xffffffec
   53e30:	mvn	r3, #0
   53e34:	str	r3, [fp, #-24]	; 0xffffffe8
   53e38:	sub	r3, fp, #208	; 0xd0
   53e3c:	mov	r2, #136	; 0x88
   53e40:	mov	r1, #0
   53e44:	mov	r0, r3
   53e48:	bl	12434 <memset@plt>
   53e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   53e50:	str	r3, [fp, #-124]	; 0xffffff84
   53e54:	ldr	r3, [fp, #-216]	; 0xffffff28
   53e58:	ldr	r3, [r3, #16]
   53e5c:	cmp	r3, #0
   53e60:	beq	53eb0 <__assert_fail@plt+0x417c4>
   53e64:	ldr	r3, [fp, #-216]	; 0xffffff28
   53e68:	ldrb	r3, [r3, #28]
   53e6c:	and	r3, r3, #8
   53e70:	uxtb	r3, r3
   53e74:	cmp	r3, #0
   53e78:	beq	53eb0 <__assert_fail@plt+0x417c4>
   53e7c:	ldr	r2, [fp, #-228]	; 0xffffff1c
   53e80:	ldr	r3, [fp, #4]
   53e84:	cmp	r2, r3
   53e88:	beq	53eb0 <__assert_fail@plt+0x417c4>
   53e8c:	ldr	r3, [fp, #-216]	; 0xffffff28
   53e90:	ldrb	r3, [r3, #28]
   53e94:	and	r3, r3, #1
   53e98:	uxtb	r3, r3
   53e9c:	cmp	r3, #0
   53ea0:	bne	53eb0 <__assert_fail@plt+0x417c4>
   53ea4:	ldr	r3, [fp, #-216]	; 0xffffff28
   53ea8:	ldr	r3, [r3, #16]
   53eac:	b	53eb4 <__assert_fail@plt+0x417c8>
   53eb0:	mov	r3, #0
   53eb4:	str	r3, [fp, #-28]	; 0xffffffe4
   53eb8:	ldr	r3, [fp, #-216]	; 0xffffff28
   53ebc:	ldr	r3, [r3, #20]
   53ec0:	str	r3, [fp, #-32]	; 0xffffffe0
   53ec4:	ldr	r3, [fp, #-216]	; 0xffffff28
   53ec8:	ldr	r3, [r3, #24]
   53ecc:	ldr	r2, [fp, #12]
   53ed0:	cmp	r2, r3
   53ed4:	bls	53ef0 <__assert_fail@plt+0x41804>
   53ed8:	ldr	r3, [fp, #-216]	; 0xffffff28
   53edc:	ldr	r3, [r3, #24]
   53ee0:	ldr	r2, [fp, #12]
   53ee4:	sub	r3, r2, r3
   53ee8:	sub	r3, r3, #1
   53eec:	b	53ef4 <__assert_fail@plt+0x41808>
   53ef0:	mov	r3, #0
   53ef4:	str	r3, [fp, #-36]	; 0xffffffdc
   53ef8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   53efc:	ldr	r2, [fp, #12]
   53f00:	sub	r3, r2, r3
   53f04:	str	r3, [fp, #12]
   53f08:	ldr	r3, [fp, #-216]	; 0xffffff28
   53f0c:	ldr	r3, [r3, #8]
   53f10:	cmp	r3, #0
   53f14:	moveq	r3, #1
   53f18:	movne	r3, #0
   53f1c:	uxtb	r3, r3
   53f20:	cmp	r3, #0
   53f24:	bne	53f48 <__assert_fail@plt+0x4185c>
   53f28:	ldr	r3, [fp, #-20]	; 0xffffffec
   53f2c:	ldr	r3, [r3, #36]	; 0x24
   53f30:	cmp	r3, #0
   53f34:	moveq	r3, #1
   53f38:	movne	r3, #0
   53f3c:	uxtb	r3, r3
   53f40:	cmp	r3, #0
   53f44:	beq	53f50 <__assert_fail@plt+0x41864>
   53f48:	mov	r3, #1
   53f4c:	b	53f54 <__assert_fail@plt+0x41868>
   53f50:	mov	r3, #0
   53f54:	cmp	r3, #0
   53f58:	bne	53f7c <__assert_fail@plt+0x41890>
   53f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   53f60:	ldr	r3, [r3, #40]	; 0x28
   53f64:	cmp	r3, #0
   53f68:	moveq	r3, #1
   53f6c:	movne	r3, #0
   53f70:	uxtb	r3, r3
   53f74:	cmp	r3, #0
   53f78:	beq	53f84 <__assert_fail@plt+0x41898>
   53f7c:	mov	r3, #1
   53f80:	b	53f88 <__assert_fail@plt+0x4189c>
   53f84:	mov	r3, #0
   53f88:	cmp	r3, #0
   53f8c:	bne	53fb0 <__assert_fail@plt+0x418c4>
   53f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   53f94:	ldr	r3, [r3, #44]	; 0x2c
   53f98:	cmp	r3, #0
   53f9c:	moveq	r3, #1
   53fa0:	movne	r3, #0
   53fa4:	uxtb	r3, r3
   53fa8:	cmp	r3, #0
   53fac:	beq	53fb8 <__assert_fail@plt+0x418cc>
   53fb0:	mov	r3, #1
   53fb4:	b	53fbc <__assert_fail@plt+0x418d0>
   53fb8:	mov	r3, #0
   53fbc:	cmp	r3, #0
   53fc0:	bne	53fe4 <__assert_fail@plt+0x418f8>
   53fc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   53fc8:	ldr	r3, [r3, #48]	; 0x30
   53fcc:	cmp	r3, #0
   53fd0:	moveq	r3, #1
   53fd4:	movne	r3, #0
   53fd8:	uxtb	r3, r3
   53fdc:	cmp	r3, #0
   53fe0:	beq	53fec <__assert_fail@plt+0x41900>
   53fe4:	mov	r3, #1
   53fe8:	b	54d24 <__assert_fail@plt+0x42638>
   53fec:	ldr	r3, [fp, #4]
   53ff0:	cmp	r3, #0
   53ff4:	blt	54008 <__assert_fail@plt+0x4191c>
   53ff8:	ldr	r2, [fp, #4]
   53ffc:	ldr	r3, [fp, #-224]	; 0xffffff20
   54000:	cmp	r2, r3
   54004:	ble	54008 <__assert_fail@plt+0x4191c>
   54008:	ldr	r3, [fp, #-20]	; 0xffffffec
   5400c:	ldr	r3, [r3, #36]	; 0x24
   54010:	ldr	r3, [r3, #8]
   54014:	cmp	r3, #0
   54018:	bne	5408c <__assert_fail@plt+0x419a0>
   5401c:	ldr	r3, [fp, #-20]	; 0xffffffec
   54020:	ldr	r3, [r3, #40]	; 0x28
   54024:	ldr	r3, [r3, #8]
   54028:	cmp	r3, #0
   5402c:	bne	5408c <__assert_fail@plt+0x419a0>
   54030:	ldr	r3, [fp, #-20]	; 0xffffffec
   54034:	ldr	r3, [r3, #44]	; 0x2c
   54038:	ldr	r3, [r3, #8]
   5403c:	cmp	r3, #0
   54040:	beq	5405c <__assert_fail@plt+0x41970>
   54044:	ldr	r3, [fp, #-216]	; 0xffffff28
   54048:	ldrb	r3, [r3, #28]
   5404c:	bic	r3, r3, #127	; 0x7f
   54050:	uxtb	r3, r3
   54054:	cmp	r3, #0
   54058:	bne	5408c <__assert_fail@plt+0x419a0>
   5405c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   54060:	cmp	r3, #0
   54064:	beq	5407c <__assert_fail@plt+0x41990>
   54068:	ldr	r3, [fp, #4]
   5406c:	cmp	r3, #0
   54070:	beq	5407c <__assert_fail@plt+0x41990>
   54074:	mov	r3, #1
   54078:	b	54d24 <__assert_fail@plt+0x42638>
   5407c:	mov	r3, #0
   54080:	str	r3, [fp, #4]
   54084:	ldr	r3, [fp, #4]
   54088:	str	r3, [fp, #-228]	; 0xffffff1c
   5408c:	ldr	r3, [fp, #12]
   54090:	cmp	r3, #0
   54094:	bne	540a8 <__assert_fail@plt+0x419bc>
   54098:	ldr	r3, [fp, #-20]	; 0xffffffec
   5409c:	ldr	r3, [r3, #76]	; 0x4c
   540a0:	cmp	r3, #0
   540a4:	beq	540b0 <__assert_fail@plt+0x419c4>
   540a8:	mov	r3, #1
   540ac:	b	540b4 <__assert_fail@plt+0x419c8>
   540b0:	mov	r3, #0
   540b4:	strb	r3, [fp, #-37]	; 0xffffffdb
   540b8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   540bc:	and	r3, r3, #1
   540c0:	strb	r3, [fp, #-37]	; 0xffffffdb
   540c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   540c8:	ldr	r3, [r3, #8]
   540cc:	add	r3, r3, #1
   540d0:	mov	ip, r3
   540d4:	ldr	r3, [fp, #-216]	; 0xffffff28
   540d8:	ldr	r3, [r3, #20]
   540dc:	ldr	r2, [fp, #-216]	; 0xffffff28
   540e0:	ldr	r2, [r2, #12]
   540e4:	and	r2, r2, #4194304	; 0x400000
   540e8:	cmp	r2, #0
   540ec:	movne	r2, #1
   540f0:	moveq	r2, #0
   540f4:	uxtb	r2, r2
   540f8:	sub	r0, fp, #208	; 0xd0
   540fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   54100:	str	r1, [sp, #8]
   54104:	str	r2, [sp, #4]
   54108:	str	r3, [sp]
   5410c:	mov	r3, ip
   54110:	ldr	r2, [fp, #-224]	; 0xffffff20
   54114:	ldr	r1, [fp, #-220]	; 0xffffff24
   54118:	bl	44d48 <__assert_fail@plt+0x3265c>
   5411c:	str	r0, [fp, #-8]
   54120:	ldr	r3, [fp, #-8]
   54124:	cmp	r3, #0
   54128:	movne	r3, #1
   5412c:	moveq	r3, #0
   54130:	uxtb	r3, r3
   54134:	cmp	r3, #0
   54138:	bne	54cb0 <__assert_fail@plt+0x425c4>
   5413c:	ldr	r3, [fp, #8]
   54140:	str	r3, [fp, #-152]	; 0xffffff68
   54144:	ldr	r3, [fp, #8]
   54148:	str	r3, [fp, #-156]	; 0xffffff64
   5414c:	ldr	r3, [fp, #-216]	; 0xffffff28
   54150:	ldrb	r3, [r3, #28]
   54154:	ubfx	r3, r3, #7, #1
   54158:	uxtb	r3, r3
   5415c:	strb	r3, [fp, #-131]	; 0xffffff7d
   54160:	ldr	r3, [fp, #-20]	; 0xffffffec
   54164:	ldr	r3, [r3, #76]	; 0x4c
   54168:	lsl	r2, r3, #1
   5416c:	sub	r3, fp, #208	; 0xd0
   54170:	ldr	r1, [fp, #20]
   54174:	mov	r0, r3
   54178:	bl	5d560 <__assert_fail@plt+0x4ae74>
   5417c:	str	r0, [fp, #-8]
   54180:	ldr	r3, [fp, #-8]
   54184:	cmp	r3, #0
   54188:	movne	r3, #1
   5418c:	moveq	r3, #0
   54190:	uxtb	r3, r3
   54194:	cmp	r3, #0
   54198:	bne	54cb8 <__assert_fail@plt+0x425cc>
   5419c:	ldr	r3, [fp, #12]
   541a0:	cmp	r3, #1
   541a4:	bhi	541c0 <__assert_fail@plt+0x41ad4>
   541a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   541ac:	ldrb	r3, [r3, #88]	; 0x58
   541b0:	and	r3, r3, #2
   541b4:	uxtb	r3, r3
   541b8:	cmp	r3, #0
   541bc:	beq	5422c <__assert_fail@plt+0x41b40>
   541c0:	ldr	r3, [fp, #-172]	; 0xffffff54
   541c4:	cmn	r3, #-1073741822	; 0xc0000002
   541c8:	movhi	r3, #1
   541cc:	movls	r3, #0
   541d0:	uxtb	r3, r3
   541d4:	cmp	r3, #0
   541d8:	beq	541e8 <__assert_fail@plt+0x41afc>
   541dc:	mov	r3, #12
   541e0:	str	r3, [fp, #-8]
   541e4:	b	54cec <__assert_fail@plt+0x42600>
   541e8:	ldr	r3, [fp, #-172]	; 0xffffff54
   541ec:	add	r3, r3, #1
   541f0:	lsl	r3, r3, #2
   541f4:	mov	r0, r3
   541f8:	bl	43510 <__assert_fail@plt+0x30e24>
   541fc:	mov	r3, r0
   54200:	str	r3, [fp, #-108]	; 0xffffff94
   54204:	ldr	r3, [fp, #-108]	; 0xffffff94
   54208:	cmp	r3, #0
   5420c:	moveq	r3, #1
   54210:	movne	r3, #0
   54214:	uxtb	r3, r3
   54218:	cmp	r3, #0
   5421c:	beq	5422c <__assert_fail@plt+0x41b40>
   54220:	mov	r3, #12
   54224:	str	r3, [fp, #-8]
   54228:	b	54cec <__assert_fail@plt+0x42600>
   5422c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   54230:	str	r3, [fp, #-72]	; 0xffffffb8
   54234:	ldr	r3, [fp, #20]
   54238:	and	r3, r3, #1
   5423c:	cmp	r3, #0
   54240:	beq	5424c <__assert_fail@plt+0x41b60>
   54244:	mov	r3, #4
   54248:	b	54250 <__assert_fail@plt+0x41b64>
   5424c:	mov	r3, #6
   54250:	str	r3, [fp, #-148]	; 0xffffff6c
   54254:	ldr	r2, [fp, #4]
   54258:	ldr	r3, [fp, #-228]	; 0xffffff1c
   5425c:	cmp	r2, r3
   54260:	bge	5426c <__assert_fail@plt+0x41b80>
   54264:	mvn	r3, #0
   54268:	b	54270 <__assert_fail@plt+0x41b84>
   5426c:	mov	r3, #1
   54270:	str	r3, [fp, #-44]	; 0xffffffd4
   54274:	ldr	r2, [fp, #-228]	; 0xffffff1c
   54278:	ldr	r3, [fp, #4]
   5427c:	cmp	r2, r3
   54280:	movlt	r3, r2
   54284:	movge	r3, r3
   54288:	str	r3, [fp, #-48]	; 0xffffffd0
   5428c:	ldr	r2, [fp, #4]
   54290:	ldr	r3, [fp, #-228]	; 0xffffff1c
   54294:	cmp	r2, r3
   54298:	movge	r3, r2
   5429c:	movlt	r3, r3
   542a0:	str	r3, [fp, #-52]	; 0xffffffcc
   542a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   542a8:	ldr	r3, [r3, #92]	; 0x5c
   542ac:	cmp	r3, #1
   542b0:	moveq	r3, #1
   542b4:	movne	r3, #0
   542b8:	strb	r3, [fp, #-53]	; 0xffffffcb
   542bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   542c0:	cmp	r3, #0
   542c4:	beq	5433c <__assert_fail@plt+0x41c50>
   542c8:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   542cc:	cmp	r3, #0
   542d0:	bne	542f4 <__assert_fail@plt+0x41c08>
   542d4:	ldr	r3, [fp, #-216]	; 0xffffff28
   542d8:	ldr	r3, [r3, #12]
   542dc:	and	r3, r3, #4194304	; 0x400000
   542e0:	cmp	r3, #0
   542e4:	bne	542fc <__assert_fail@plt+0x41c10>
   542e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   542ec:	cmp	r3, #0
   542f0:	bne	542fc <__assert_fail@plt+0x41c10>
   542f4:	mov	r2, #4
   542f8:	b	54300 <__assert_fail@plt+0x41c14>
   542fc:	mov	r2, #0
   54300:	ldr	r1, [fp, #-228]	; 0xffffff1c
   54304:	ldr	r3, [fp, #4]
   54308:	cmp	r1, r3
   5430c:	bgt	54318 <__assert_fail@plt+0x41c2c>
   54310:	mov	r3, #2
   54314:	b	5431c <__assert_fail@plt+0x41c30>
   54318:	mov	r3, #0
   5431c:	orr	r3, r2, r3
   54320:	ldr	r2, [fp, #-32]	; 0xffffffe0
   54324:	cmp	r2, #0
   54328:	movne	r2, #1
   5432c:	moveq	r2, #0
   54330:	uxtb	r2, r2
   54334:	orr	r3, r3, r2
   54338:	b	54340 <__assert_fail@plt+0x41c54>
   5433c:	mov	r3, #8
   54340:	str	r3, [fp, #-60]	; 0xffffffc4
   54344:	mov	r3, #1
   54348:	str	r3, [fp, #-8]
   5434c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54350:	ldr	r2, [fp, #-48]	; 0xffffffd0
   54354:	cmp	r2, r3
   54358:	bgt	54cc0 <__assert_fail@plt+0x425d4>
   5435c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54360:	ldr	r2, [fp, #-52]	; 0xffffffcc
   54364:	cmp	r2, r3
   54368:	blt	54cc0 <__assert_fail@plt+0x425d4>
   5436c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   54370:	sub	r3, r3, #4
   54374:	cmp	r3, #4
   54378:	ldrls	pc, [pc, r3, lsl #2]
   5437c:	b	54594 <__assert_fail@plt+0x41ea8>
   54380:	andeq	r4, r5, r8, ror #10
   54384:	andeq	r4, r5, r8, ror #10
   54388:	andeq	r4, r5, ip, lsl #8
   5438c:	andeq	r4, r5, r0, lsr #7
   54390:	muleq	r5, r8, r6
   54394:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54398:	add	r3, r3, #1
   5439c:	str	r3, [fp, #-72]	; 0xffffffb8
   543a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   543a4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   543a8:	cmp	r2, r3
   543ac:	movgt	r3, #1
   543b0:	movle	r3, #0
   543b4:	uxtb	r3, r3
   543b8:	cmp	r3, #0
   543bc:	beq	5445c <__assert_fail@plt+0x41d70>
   543c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   543c4:	mov	r2, r3
   543c8:	ldr	r3, [fp, #-220]	; 0xffffff24
   543cc:	add	r3, r3, r2
   543d0:	ldrb	r3, [r3]
   543d4:	mov	r2, r3
   543d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   543dc:	add	r3, r3, r2
   543e0:	ldrb	r3, [r3]
   543e4:	mov	r2, r3
   543e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   543ec:	add	r3, r3, r2
   543f0:	ldrb	r3, [r3]
   543f4:	cmp	r3, #0
   543f8:	beq	54394 <__assert_fail@plt+0x41ca8>
   543fc:	b	5445c <__assert_fail@plt+0x41d70>
   54400:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54404:	add	r3, r3, #1
   54408:	str	r3, [fp, #-72]	; 0xffffffb8
   5440c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54410:	ldr	r2, [fp, #-52]	; 0xffffffcc
   54414:	cmp	r2, r3
   54418:	movgt	r3, #1
   5441c:	movle	r3, #0
   54420:	uxtb	r3, r3
   54424:	cmp	r3, #0
   54428:	beq	54464 <__assert_fail@plt+0x41d78>
   5442c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54430:	mov	r2, r3
   54434:	ldr	r3, [fp, #-220]	; 0xffffff24
   54438:	add	r3, r3, r2
   5443c:	ldrb	r3, [r3]
   54440:	mov	r2, r3
   54444:	ldr	r3, [fp, #-28]	; 0xffffffe4
   54448:	add	r3, r3, r2
   5444c:	ldrb	r3, [r3]
   54450:	cmp	r3, #0
   54454:	beq	54400 <__assert_fail@plt+0x41d14>
   54458:	b	54464 <__assert_fail@plt+0x41d78>
   5445c:	nop	{0}
   54460:	b	54468 <__assert_fail@plt+0x41d7c>
   54464:	nop	{0}
   54468:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5446c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   54470:	cmp	r2, r3
   54474:	moveq	r3, #1
   54478:	movne	r3, #0
   5447c:	uxtb	r3, r3
   54480:	cmp	r3, #0
   54484:	beq	546a0 <__assert_fail@plt+0x41fb4>
   54488:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5448c:	ldr	r2, [fp, #-224]	; 0xffffff20
   54490:	cmp	r2, r3
   54494:	ble	544b0 <__assert_fail@plt+0x41dc4>
   54498:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5449c:	mov	r2, r3
   544a0:	ldr	r3, [fp, #-220]	; 0xffffff24
   544a4:	add	r3, r3, r2
   544a8:	ldrb	r3, [r3]
   544ac:	b	544b4 <__assert_fail@plt+0x41dc8>
   544b0:	mov	r3, #0
   544b4:	str	r3, [fp, #-64]	; 0xffffffc0
   544b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   544bc:	cmp	r3, #0
   544c0:	beq	544d8 <__assert_fail@plt+0x41dec>
   544c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   544c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   544cc:	add	r3, r2, r3
   544d0:	ldrb	r3, [r3]
   544d4:	b	544dc <__assert_fail@plt+0x41df0>
   544d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   544dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   544e0:	add	r3, r2, r3
   544e4:	ldrb	r3, [r3]
   544e8:	cmp	r3, #0
   544ec:	bne	546a0 <__assert_fail@plt+0x41fb4>
   544f0:	b	54cec <__assert_fail@plt+0x42600>
   544f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   544f8:	ldr	r2, [fp, #-224]	; 0xffffff20
   544fc:	cmp	r2, r3
   54500:	ble	5451c <__assert_fail@plt+0x41e30>
   54504:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54508:	mov	r2, r3
   5450c:	ldr	r3, [fp, #-220]	; 0xffffff24
   54510:	add	r3, r3, r2
   54514:	ldrb	r3, [r3]
   54518:	b	54520 <__assert_fail@plt+0x41e34>
   5451c:	mov	r3, #0
   54520:	str	r3, [fp, #-64]	; 0xffffffc0
   54524:	ldr	r3, [fp, #-32]	; 0xffffffe0
   54528:	cmp	r3, #0
   5452c:	beq	54544 <__assert_fail@plt+0x41e58>
   54530:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54534:	ldr	r2, [fp, #-32]	; 0xffffffe0
   54538:	add	r3, r2, r3
   5453c:	ldrb	r3, [r3]
   54540:	b	54548 <__assert_fail@plt+0x41e5c>
   54544:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54548:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5454c:	add	r3, r2, r3
   54550:	ldrb	r3, [r3]
   54554:	cmp	r3, #0
   54558:	bne	5457c <__assert_fail@plt+0x41e90>
   5455c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54560:	sub	r3, r3, #1
   54564:	str	r3, [fp, #-72]	; 0xffffffb8
   54568:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5456c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   54570:	cmp	r2, r3
   54574:	ble	544f4 <__assert_fail@plt+0x41e08>
   54578:	b	54580 <__assert_fail@plt+0x41e94>
   5457c:	nop	{0}
   54580:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54584:	ldr	r2, [fp, #-48]	; 0xffffffd0
   54588:	cmp	r2, r3
   5458c:	ble	546a8 <__assert_fail@plt+0x41fbc>
   54590:	b	54cec <__assert_fail@plt+0x42600>
   54594:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54598:	ldr	r3, [fp, #-184]	; 0xffffff48
   5459c:	sub	r3, r2, r3
   545a0:	str	r3, [fp, #-12]
   545a4:	ldr	r3, [fp, #-176]	; 0xffffff50
   545a8:	mov	r2, r3
   545ac:	ldr	r3, [fp, #-12]
   545b0:	cmp	r3, r2
   545b4:	movcs	r3, #1
   545b8:	movcc	r3, #0
   545bc:	uxtb	r3, r3
   545c0:	cmp	r3, #0
   545c4:	beq	5460c <__assert_fail@plt+0x41f20>
   545c8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   545cc:	sub	r3, fp, #208	; 0xd0
   545d0:	ldr	r2, [fp, #20]
   545d4:	mov	r0, r3
   545d8:	bl	465b4 <__assert_fail@plt+0x33ec8>
   545dc:	str	r0, [fp, #-8]
   545e0:	ldr	r3, [fp, #-8]
   545e4:	cmp	r3, #0
   545e8:	movne	r3, #1
   545ec:	moveq	r3, #0
   545f0:	uxtb	r3, r3
   545f4:	cmp	r3, #0
   545f8:	bne	54cc8 <__assert_fail@plt+0x425dc>
   545fc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54600:	ldr	r3, [fp, #-184]	; 0xffffff48
   54604:	sub	r3, r2, r3
   54608:	str	r3, [fp, #-12]
   5460c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   54610:	mov	r2, r3
   54614:	ldr	r3, [fp, #-12]
   54618:	cmp	r3, r2
   5461c:	bcs	54634 <__assert_fail@plt+0x41f48>
   54620:	ldr	r2, [fp, #-204]	; 0xffffff34
   54624:	ldr	r3, [fp, #-12]
   54628:	add	r3, r2, r3
   5462c:	ldrb	r3, [r3]
   54630:	b	54638 <__assert_fail@plt+0x41f4c>
   54634:	mov	r3, #0
   54638:	str	r3, [fp, #-64]	; 0xffffffc0
   5463c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54640:	ldr	r2, [fp, #-28]	; 0xffffffe4
   54644:	add	r3, r2, r3
   54648:	ldrb	r3, [r3]
   5464c:	cmp	r3, #0
   54650:	bne	54690 <__assert_fail@plt+0x41fa4>
   54654:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54658:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5465c:	add	r3, r2, r3
   54660:	str	r3, [fp, #-72]	; 0xffffffb8
   54664:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54668:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5466c:	cmp	r2, r3
   54670:	bgt	54684 <__assert_fail@plt+0x41f98>
   54674:	ldr	r3, [fp, #-72]	; 0xffffffb8
   54678:	ldr	r2, [fp, #-52]	; 0xffffffcc
   5467c:	cmp	r2, r3
   54680:	bge	54594 <__assert_fail@plt+0x41ea8>
   54684:	mov	r3, #1
   54688:	str	r3, [fp, #-8]
   5468c:	b	54cec <__assert_fail@plt+0x42600>
   54690:	nop	{0}
   54694:	b	546ac <__assert_fail@plt+0x41fc0>
   54698:	nop	{0}
   5469c:	b	546ac <__assert_fail@plt+0x41fc0>
   546a0:	nop	{0}
   546a4:	b	546ac <__assert_fail@plt+0x41fc0>
   546a8:	nop	{0}
   546ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   546b0:	sub	r3, fp, #208	; 0xd0
   546b4:	ldr	r2, [fp, #20]
   546b8:	mov	r0, r3
   546bc:	bl	465b4 <__assert_fail@plt+0x33ec8>
   546c0:	str	r0, [fp, #-8]
   546c4:	ldr	r3, [fp, #-8]
   546c8:	cmp	r3, #0
   546cc:	movne	r3, #1
   546d0:	moveq	r3, #0
   546d4:	uxtb	r3, r3
   546d8:	cmp	r3, #0
   546dc:	bne	54cd0 <__assert_fail@plt+0x425e4>
   546e0:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   546e4:	eor	r3, r3, #1
   546e8:	uxtb	r3, r3
   546ec:	cmp	r3, #0
   546f0:	beq	54710 <__assert_fail@plt+0x42024>
   546f4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   546f8:	cmp	r3, #0
   546fc:	beq	54710 <__assert_fail@plt+0x42024>
   54700:	ldr	r3, [fp, #-200]	; 0xffffff38
   54704:	ldr	r3, [r3]
   54708:	cmn	r3, #1
   5470c:	beq	54898 <__assert_fail@plt+0x421ac>
   54710:	mov	r3, #0
   54714:	str	r3, [fp, #-88]	; 0xffffffa8
   54718:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5471c:	str	r3, [fp, #-100]	; 0xffffff9c
   54720:	ldr	r3, [fp, #-100]	; 0xffffff9c
   54724:	str	r3, [fp, #-104]	; 0xffffff98
   54728:	ldr	r2, [fp, #-228]	; 0xffffff1c
   5472c:	ldr	r3, [fp, #4]
   54730:	cmp	r2, r3
   54734:	bgt	54740 <__assert_fail@plt+0x42054>
   54738:	sub	r3, fp, #72	; 0x48
   5473c:	b	54744 <__assert_fail@plt+0x42058>
   54740:	mov	r3, #0
   54744:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   54748:	sub	r0, fp, #208	; 0xd0
   5474c:	mov	r2, r3
   54750:	bl	550b0 <__assert_fail@plt+0x429c4>
   54754:	str	r0, [fp, #-24]	; 0xffffffe8
   54758:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5475c:	cmn	r3, #1
   54760:	beq	54888 <__assert_fail@plt+0x4219c>
   54764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54768:	cmn	r3, #2
   5476c:	moveq	r3, #1
   54770:	movne	r3, #0
   54774:	uxtb	r3, r3
   54778:	cmp	r3, #0
   5477c:	beq	5478c <__assert_fail@plt+0x420a0>
   54780:	mov	r3, #12
   54784:	str	r3, [fp, #-8]
   54788:	b	54cec <__assert_fail@plt+0x42600>
   5478c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54790:	str	r3, [fp, #-116]	; 0xffffff8c
   54794:	ldr	r3, [fp, #-216]	; 0xffffff28
   54798:	ldrb	r3, [r3, #28]
   5479c:	and	r3, r3, #16
   547a0:	uxtb	r3, r3
   547a4:	cmp	r3, #0
   547a8:	bne	547b8 <__assert_fail@plt+0x420cc>
   547ac:	ldr	r3, [fp, #12]
   547b0:	cmp	r3, #1
   547b4:	bhi	547c8 <__assert_fail@plt+0x420dc>
   547b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   547bc:	ldr	r3, [r3, #76]	; 0x4c
   547c0:	cmp	r3, #0
   547c4:	beq	547fc <__assert_fail@plt+0x42110>
   547c8:	ldr	r2, [fp, #-108]	; 0xffffff94
   547cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   547d0:	lsl	r3, r3, #2
   547d4:	add	r3, r2, r3
   547d8:	ldr	r3, [r3]
   547dc:	str	r3, [fp, #-68]	; 0xffffffbc
   547e0:	sub	r3, fp, #208	; 0xd0
   547e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   547e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   547ec:	mov	r0, r3
   547f0:	bl	55790 <__assert_fail@plt+0x430a4>
   547f4:	mov	r3, r0
   547f8:	str	r3, [fp, #-112]	; 0xffffff90
   547fc:	ldr	r3, [fp, #-216]	; 0xffffff28
   54800:	ldrb	r3, [r3, #28]
   54804:	and	r3, r3, #16
   54808:	uxtb	r3, r3
   5480c:	cmp	r3, #0
   54810:	bne	54838 <__assert_fail@plt+0x4214c>
   54814:	ldr	r3, [fp, #12]
   54818:	cmp	r3, #1
   5481c:	bls	54838 <__assert_fail@plt+0x4214c>
   54820:	ldr	r3, [fp, #-20]	; 0xffffffec
   54824:	ldrb	r3, [r3, #88]	; 0x58
   54828:	and	r3, r3, #1
   5482c:	uxtb	r3, r3
   54830:	cmp	r3, #0
   54834:	bne	54848 <__assert_fail@plt+0x4215c>
   54838:	ldr	r3, [fp, #-20]	; 0xffffffec
   5483c:	ldr	r3, [r3, #76]	; 0x4c
   54840:	cmp	r3, #0
   54844:	beq	548b4 <__assert_fail@plt+0x421c8>
   54848:	sub	r3, fp, #208	; 0xd0
   5484c:	mov	r0, r3
   54850:	bl	54d38 <__assert_fail@plt+0x4264c>
   54854:	str	r0, [fp, #-8]
   54858:	ldr	r3, [fp, #-8]
   5485c:	cmp	r3, #0
   54860:	beq	548b0 <__assert_fail@plt+0x421c4>
   54864:	ldr	r3, [fp, #-8]
   54868:	cmp	r3, #1
   5486c:	movne	r3, #1
   54870:	moveq	r3, #0
   54874:	uxtb	r3, r3
   54878:	cmp	r3, #0
   5487c:	bne	54cd8 <__assert_fail@plt+0x425ec>
   54880:	mvn	r3, #0
   54884:	str	r3, [fp, #-24]	; 0xffffffe8
   54888:	sub	r3, fp, #208	; 0xd0
   5488c:	mov	r0, r3
   54890:	bl	5d6c4 <__assert_fail@plt+0x4afd8>
   54894:	b	5489c <__assert_fail@plt+0x421b0>
   54898:	nop	{0}
   5489c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   548a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   548a4:	add	r3, r2, r3
   548a8:	str	r3, [fp, #-72]	; 0xffffffb8
   548ac:	b	54344 <__assert_fail@plt+0x41c58>
   548b0:	nop	{0}
   548b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   548b8:	cmn	r3, #1
   548bc:	ldr	r3, [fp, #-8]
   548c0:	cmp	r3, #0
   548c4:	ldr	r3, [fp, #12]
   548c8:	cmp	r3, #0
   548cc:	beq	54ce0 <__assert_fail@plt+0x425f4>
   548d0:	mov	r3, #1
   548d4:	str	r3, [fp, #-16]
   548d8:	b	54918 <__assert_fail@plt+0x4222c>
   548dc:	ldr	r3, [fp, #-16]
   548e0:	lsl	r3, r3, #3
   548e4:	ldr	r2, [fp, #16]
   548e8:	add	r3, r2, r3
   548ec:	mvn	r2, #0
   548f0:	str	r2, [r3, #4]
   548f4:	ldr	r2, [fp, #-16]
   548f8:	lsl	r2, r2, #3
   548fc:	ldr	r1, [fp, #16]
   54900:	add	r2, r1, r2
   54904:	ldr	r3, [r3, #4]
   54908:	str	r3, [r2]
   5490c:	ldr	r3, [fp, #-16]
   54910:	add	r3, r3, #1
   54914:	str	r3, [fp, #-16]
   54918:	ldr	r3, [fp, #-16]
   5491c:	ldr	r2, [fp, #12]
   54920:	cmp	r2, r3
   54924:	bhi	548dc <__assert_fail@plt+0x421f0>
   54928:	ldr	r3, [fp, #16]
   5492c:	mov	r2, #0
   54930:	str	r2, [r3]
   54934:	ldr	r2, [fp, #-116]	; 0xffffff8c
   54938:	ldr	r3, [fp, #16]
   5493c:	str	r2, [r3, #4]
   54940:	ldr	r3, [fp, #-216]	; 0xffffff28
   54944:	ldrb	r3, [r3, #28]
   54948:	and	r3, r3, #16
   5494c:	uxtb	r3, r3
   54950:	cmp	r3, #0
   54954:	bne	549d8 <__assert_fail@plt+0x422ec>
   54958:	ldr	r3, [fp, #12]
   5495c:	cmp	r3, #1
   54960:	bls	549d8 <__assert_fail@plt+0x422ec>
   54964:	ldr	r3, [fp, #-20]	; 0xffffffec
   54968:	ldrb	r3, [r3, #88]	; 0x58
   5496c:	and	r3, r3, #1
   54970:	uxtb	r3, r3
   54974:	cmp	r3, #0
   54978:	beq	54994 <__assert_fail@plt+0x422a8>
   5497c:	ldr	r3, [fp, #-20]	; 0xffffffec
   54980:	ldr	r3, [r3, #76]	; 0x4c
   54984:	cmp	r3, #0
   54988:	ble	54994 <__assert_fail@plt+0x422a8>
   5498c:	mov	r3, #1
   54990:	b	54998 <__assert_fail@plt+0x422ac>
   54994:	mov	r3, #0
   54998:	and	r3, r3, #1
   5499c:	uxtb	r3, r3
   549a0:	sub	r1, fp, #208	; 0xd0
   549a4:	str	r3, [sp]
   549a8:	ldr	r3, [fp, #16]
   549ac:	ldr	r2, [fp, #12]
   549b0:	ldr	r0, [fp, #-216]	; 0xffffff28
   549b4:	bl	56720 <__assert_fail@plt+0x44034>
   549b8:	str	r0, [fp, #-8]
   549bc:	ldr	r3, [fp, #-8]
   549c0:	cmp	r3, #0
   549c4:	movne	r3, #1
   549c8:	moveq	r3, #0
   549cc:	uxtb	r3, r3
   549d0:	cmp	r3, #0
   549d4:	bne	54ce8 <__assert_fail@plt+0x425fc>
   549d8:	mov	r3, #0
   549dc:	str	r3, [fp, #-16]
   549e0:	b	54b48 <__assert_fail@plt+0x4245c>
   549e4:	ldr	r3, [fp, #-16]
   549e8:	lsl	r3, r3, #3
   549ec:	ldr	r2, [fp, #16]
   549f0:	add	r3, r2, r3
   549f4:	ldr	r3, [r3]
   549f8:	cmn	r3, #1
   549fc:	beq	54b3c <__assert_fail@plt+0x42450>
   54a00:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   54a04:	cmp	r3, #0
   54a08:	movne	r3, #1
   54a0c:	moveq	r3, #0
   54a10:	uxtb	r3, r3
   54a14:	cmp	r3, #0
   54a18:	beq	54adc <__assert_fail@plt+0x423f0>
   54a1c:	ldr	r3, [fp, #-16]
   54a20:	lsl	r3, r3, #3
   54a24:	ldr	r2, [fp, #16]
   54a28:	add	r3, r2, r3
   54a2c:	ldr	r2, [r3]
   54a30:	ldr	r3, [fp, #-180]	; 0xffffff4c
   54a34:	cmp	r2, r3
   54a38:	bne	54a44 <__assert_fail@plt+0x42358>
   54a3c:	ldr	r3, [fp, #-176]	; 0xffffff50
   54a40:	b	54a68 <__assert_fail@plt+0x4237c>
   54a44:	ldr	r2, [fp, #-196]	; 0xffffff3c
   54a48:	ldr	r3, [fp, #-16]
   54a4c:	lsl	r3, r3, #3
   54a50:	ldr	r1, [fp, #16]
   54a54:	add	r3, r1, r3
   54a58:	ldr	r3, [r3]
   54a5c:	lsl	r3, r3, #2
   54a60:	add	r3, r2, r3
   54a64:	ldr	r3, [r3]
   54a68:	ldr	r2, [fp, #-16]
   54a6c:	lsl	r2, r2, #3
   54a70:	ldr	r1, [fp, #16]
   54a74:	add	r2, r1, r2
   54a78:	str	r3, [r2]
   54a7c:	ldr	r3, [fp, #-16]
   54a80:	lsl	r3, r3, #3
   54a84:	ldr	r2, [fp, #16]
   54a88:	add	r3, r2, r3
   54a8c:	ldr	r2, [r3, #4]
   54a90:	ldr	r3, [fp, #-180]	; 0xffffff4c
   54a94:	cmp	r2, r3
   54a98:	bne	54aa4 <__assert_fail@plt+0x423b8>
   54a9c:	ldr	r3, [fp, #-176]	; 0xffffff50
   54aa0:	b	54ac8 <__assert_fail@plt+0x423dc>
   54aa4:	ldr	r2, [fp, #-196]	; 0xffffff3c
   54aa8:	ldr	r3, [fp, #-16]
   54aac:	lsl	r3, r3, #3
   54ab0:	ldr	r1, [fp, #16]
   54ab4:	add	r3, r1, r3
   54ab8:	ldr	r3, [r3, #4]
   54abc:	lsl	r3, r3, #2
   54ac0:	add	r3, r2, r3
   54ac4:	ldr	r3, [r3]
   54ac8:	ldr	r2, [fp, #-16]
   54acc:	lsl	r2, r2, #3
   54ad0:	ldr	r1, [fp, #16]
   54ad4:	add	r2, r1, r2
   54ad8:	str	r3, [r2, #4]
   54adc:	ldr	r3, [fp, #-16]
   54ae0:	lsl	r3, r3, #3
   54ae4:	ldr	r2, [fp, #16]
   54ae8:	add	r3, r2, r3
   54aec:	ldr	r1, [r3]
   54af0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54af4:	ldr	r3, [fp, #-16]
   54af8:	lsl	r3, r3, #3
   54afc:	ldr	r0, [fp, #16]
   54b00:	add	r3, r0, r3
   54b04:	add	r2, r1, r2
   54b08:	str	r2, [r3]
   54b0c:	ldr	r3, [fp, #-16]
   54b10:	lsl	r3, r3, #3
   54b14:	ldr	r2, [fp, #16]
   54b18:	add	r3, r2, r3
   54b1c:	ldr	r1, [r3, #4]
   54b20:	ldr	r2, [fp, #-72]	; 0xffffffb8
   54b24:	ldr	r3, [fp, #-16]
   54b28:	lsl	r3, r3, #3
   54b2c:	ldr	r0, [fp, #16]
   54b30:	add	r3, r0, r3
   54b34:	add	r2, r1, r2
   54b38:	str	r2, [r3, #4]
   54b3c:	ldr	r3, [fp, #-16]
   54b40:	add	r3, r3, #1
   54b44:	str	r3, [fp, #-16]
   54b48:	ldr	r3, [fp, #-16]
   54b4c:	ldr	r2, [fp, #12]
   54b50:	cmp	r2, r3
   54b54:	bhi	549e4 <__assert_fail@plt+0x422f8>
   54b58:	mov	r3, #0
   54b5c:	str	r3, [fp, #-16]
   54b60:	b	54bb0 <__assert_fail@plt+0x424c4>
   54b64:	ldr	r2, [fp, #-16]
   54b68:	ldr	r3, [fp, #12]
   54b6c:	add	r3, r2, r3
   54b70:	lsl	r3, r3, #3
   54b74:	ldr	r2, [fp, #16]
   54b78:	add	r3, r2, r3
   54b7c:	mvn	r2, #0
   54b80:	str	r2, [r3]
   54b84:	ldr	r2, [fp, #-16]
   54b88:	ldr	r3, [fp, #12]
   54b8c:	add	r3, r2, r3
   54b90:	lsl	r3, r3, #3
   54b94:	ldr	r2, [fp, #16]
   54b98:	add	r3, r2, r3
   54b9c:	mvn	r2, #0
   54ba0:	str	r2, [r3, #4]
   54ba4:	ldr	r3, [fp, #-16]
   54ba8:	add	r3, r3, #1
   54bac:	str	r3, [fp, #-16]
   54bb0:	ldr	r2, [fp, #-16]
   54bb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   54bb8:	cmp	r2, r3
   54bbc:	blt	54b64 <__assert_fail@plt+0x42478>
   54bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   54bc4:	ldr	r3, [r3, #132]	; 0x84
   54bc8:	cmp	r3, #0
   54bcc:	beq	54ce0 <__assert_fail@plt+0x425f4>
   54bd0:	mov	r3, #0
   54bd4:	str	r3, [fp, #-16]
   54bd8:	b	54c94 <__assert_fail@plt+0x425a8>
   54bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   54be0:	ldr	r2, [r3, #132]	; 0x84
   54be4:	ldr	r3, [fp, #-16]
   54be8:	lsl	r3, r3, #2
   54bec:	add	r3, r2, r3
   54bf0:	ldr	r3, [r3]
   54bf4:	ldr	r2, [fp, #-16]
   54bf8:	cmp	r2, r3
   54bfc:	beq	54c88 <__assert_fail@plt+0x4259c>
   54c00:	ldr	r3, [fp, #-20]	; 0xffffffec
   54c04:	ldr	r2, [r3, #132]	; 0x84
   54c08:	ldr	r3, [fp, #-16]
   54c0c:	lsl	r3, r3, #2
   54c10:	add	r3, r2, r3
   54c14:	ldr	r3, [r3]
   54c18:	add	r3, r3, #1
   54c1c:	lsl	r3, r3, #3
   54c20:	ldr	r2, [fp, #16]
   54c24:	add	r2, r2, r3
   54c28:	ldr	r3, [fp, #-16]
   54c2c:	add	r3, r3, #1
   54c30:	lsl	r3, r3, #3
   54c34:	ldr	r1, [fp, #16]
   54c38:	add	r3, r1, r3
   54c3c:	ldr	r2, [r2]
   54c40:	str	r2, [r3]
   54c44:	ldr	r3, [fp, #-20]	; 0xffffffec
   54c48:	ldr	r2, [r3, #132]	; 0x84
   54c4c:	ldr	r3, [fp, #-16]
   54c50:	lsl	r3, r3, #2
   54c54:	add	r3, r2, r3
   54c58:	ldr	r3, [r3]
   54c5c:	add	r3, r3, #1
   54c60:	lsl	r3, r3, #3
   54c64:	ldr	r2, [fp, #16]
   54c68:	add	r2, r2, r3
   54c6c:	ldr	r3, [fp, #-16]
   54c70:	add	r3, r3, #1
   54c74:	lsl	r3, r3, #3
   54c78:	ldr	r1, [fp, #16]
   54c7c:	add	r3, r1, r3
   54c80:	ldr	r2, [r2, #4]
   54c84:	str	r2, [r3, #4]
   54c88:	ldr	r3, [fp, #-16]
   54c8c:	add	r3, r3, #1
   54c90:	str	r3, [fp, #-16]
   54c94:	ldr	r3, [fp, #-16]
   54c98:	add	r3, r3, #1
   54c9c:	mov	r2, r3
   54ca0:	ldr	r3, [fp, #12]
   54ca4:	cmp	r3, r2
   54ca8:	bhi	54bdc <__assert_fail@plt+0x424f0>
   54cac:	b	54ce0 <__assert_fail@plt+0x425f4>
   54cb0:	nop	{0}
   54cb4:	b	54cec <__assert_fail@plt+0x42600>
   54cb8:	nop	{0}
   54cbc:	b	54cec <__assert_fail@plt+0x42600>
   54cc0:	nop	{0}
   54cc4:	b	54cec <__assert_fail@plt+0x42600>
   54cc8:	nop	{0}
   54ccc:	b	54cec <__assert_fail@plt+0x42600>
   54cd0:	nop	{0}
   54cd4:	b	54cec <__assert_fail@plt+0x42600>
   54cd8:	nop	{0}
   54cdc:	b	54cec <__assert_fail@plt+0x42600>
   54ce0:	nop	{0}
   54ce4:	b	54cec <__assert_fail@plt+0x42600>
   54ce8:	nop	{0}
   54cec:	ldr	r3, [fp, #-108]	; 0xffffff94
   54cf0:	mov	r0, r3
   54cf4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   54cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   54cfc:	ldr	r3, [r3, #76]	; 0x4c
   54d00:	cmp	r3, #0
   54d04:	beq	54d14 <__assert_fail@plt+0x42628>
   54d08:	sub	r3, fp, #208	; 0xd0
   54d0c:	mov	r0, r3
   54d10:	bl	5d7f8 <__assert_fail@plt+0x4b10c>
   54d14:	sub	r3, fp, #208	; 0xd0
   54d18:	mov	r0, r3
   54d1c:	bl	475b8 <__assert_fail@plt+0x34ecc>
   54d20:	ldr	r3, [fp, #-8]
   54d24:	mov	r0, r3
   54d28:	sub	sp, fp, #4
   54d2c:	ldr	fp, [sp]
   54d30:	add	sp, sp, #4
   54d34:	pop	{pc}		; (ldr pc, [sp], #4)
   54d38:	str	fp, [sp, #-8]!
   54d3c:	str	lr, [sp, #4]
   54d40:	add	fp, sp, #4
   54d44:	sub	sp, sp, #72	; 0x48
   54d48:	str	r0, [fp, #-64]	; 0xffffffc0
   54d4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54d50:	ldr	r3, [r3, #84]	; 0x54
   54d54:	str	r3, [fp, #-28]	; 0xffffffe4
   54d58:	mov	r3, #0
   54d5c:	str	r3, [fp, #-24]	; 0xffffffe8
   54d60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54d64:	ldr	r3, [r3, #100]	; 0x64
   54d68:	cmp	r3, #0
   54d6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54d70:	ldr	r3, [r3, #92]	; 0x5c
   54d74:	str	r3, [fp, #-12]
   54d78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54d7c:	ldr	r3, [r3, #96]	; 0x60
   54d80:	str	r3, [fp, #-8]
   54d84:	ldr	r3, [fp, #-12]
   54d88:	cmn	r3, #-1073741822	; 0xc0000002
   54d8c:	movhi	r3, #1
   54d90:	movls	r3, #0
   54d94:	uxtb	r3, r3
   54d98:	cmp	r3, #0
   54d9c:	beq	54da8 <__assert_fail@plt+0x426bc>
   54da0:	mov	r3, #12
   54da4:	b	5509c <__assert_fail@plt+0x429b0>
   54da8:	ldr	r3, [fp, #-12]
   54dac:	add	r3, r3, #1
   54db0:	lsl	r3, r3, #2
   54db4:	mov	r0, r3
   54db8:	bl	43510 <__assert_fail@plt+0x30e24>
   54dbc:	mov	r3, r0
   54dc0:	str	r3, [fp, #-20]	; 0xffffffec
   54dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   54dc8:	cmp	r3, #0
   54dcc:	moveq	r3, #1
   54dd0:	movne	r3, #0
   54dd4:	uxtb	r3, r3
   54dd8:	cmp	r3, #0
   54ddc:	beq	54dec <__assert_fail@plt+0x42700>
   54de0:	mov	r3, #12
   54de4:	str	r3, [fp, #-16]
   54de8:	b	55088 <__assert_fail@plt+0x4299c>
   54dec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   54df0:	ldr	r3, [r3, #76]	; 0x4c
   54df4:	cmp	r3, #0
   54df8:	beq	54fc0 <__assert_fail@plt+0x428d4>
   54dfc:	ldr	r3, [fp, #-12]
   54e00:	add	r3, r3, #1
   54e04:	lsl	r3, r3, #2
   54e08:	mov	r0, r3
   54e0c:	bl	43510 <__assert_fail@plt+0x30e24>
   54e10:	mov	r3, r0
   54e14:	str	r3, [fp, #-24]	; 0xffffffe8
   54e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54e1c:	cmp	r3, #0
   54e20:	moveq	r3, #1
   54e24:	movne	r3, #0
   54e28:	uxtb	r3, r3
   54e2c:	cmp	r3, #0
   54e30:	beq	54e40 <__assert_fail@plt+0x42754>
   54e34:	mov	r3, #12
   54e38:	str	r3, [fp, #-16]
   54e3c:	b	55088 <__assert_fail@plt+0x4299c>
   54e40:	ldr	r3, [fp, #-12]
   54e44:	add	r3, r3, #1
   54e48:	lsl	r3, r3, #2
   54e4c:	mov	r2, r3
   54e50:	mov	r1, #0
   54e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   54e58:	bl	12434 <memset@plt>
   54e5c:	sub	r0, fp, #56	; 0x38
   54e60:	ldr	r3, [fp, #-12]
   54e64:	str	r3, [sp]
   54e68:	ldr	r3, [fp, #-8]
   54e6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   54e70:	ldr	r1, [fp, #-20]	; 0xffffffec
   54e74:	bl	5df50 <__assert_fail@plt+0x4b864>
   54e78:	sub	r3, fp, #56	; 0x38
   54e7c:	mov	r1, r3
   54e80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54e84:	bl	56d98 <__assert_fail@plt+0x446ac>
   54e88:	str	r0, [fp, #-16]
   54e8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   54e90:	mov	r0, r3
   54e94:	bl	3fe0c <__assert_fail@plt+0x2d720>
   54e98:	ldr	r3, [fp, #-16]
   54e9c:	cmp	r3, #0
   54ea0:	movne	r3, #1
   54ea4:	moveq	r3, #0
   54ea8:	uxtb	r3, r3
   54eac:	cmp	r3, #0
   54eb0:	bne	5507c <__assert_fail@plt+0x42990>
   54eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   54eb8:	ldr	r3, [r3]
   54ebc:	cmp	r3, #0
   54ec0:	bne	54f74 <__assert_fail@plt+0x42888>
   54ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   54ec8:	ldr	r3, [r3]
   54ecc:	cmp	r3, #0
   54ed0:	bne	54f74 <__assert_fail@plt+0x42888>
   54ed4:	ldr	r3, [fp, #-12]
   54ed8:	sub	r3, r3, #1
   54edc:	str	r3, [fp, #-12]
   54ee0:	ldr	r3, [fp, #-12]
   54ee4:	cmp	r3, #0
   54ee8:	bge	54ef8 <__assert_fail@plt+0x4280c>
   54eec:	mov	r3, #1
   54ef0:	str	r3, [fp, #-16]
   54ef4:	b	55088 <__assert_fail@plt+0x4299c>
   54ef8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54efc:	ldr	r2, [r3, #100]	; 0x64
   54f00:	ldr	r3, [fp, #-12]
   54f04:	lsl	r3, r3, #2
   54f08:	add	r3, r2, r3
   54f0c:	ldr	r3, [r3]
   54f10:	cmp	r3, #0
   54f14:	beq	54ed4 <__assert_fail@plt+0x427e8>
   54f18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54f1c:	ldr	r2, [r3, #100]	; 0x64
   54f20:	ldr	r3, [fp, #-12]
   54f24:	lsl	r3, r3, #2
   54f28:	add	r3, r2, r3
   54f2c:	ldr	r3, [r3]
   54f30:	ldrb	r3, [r3, #52]	; 0x34
   54f34:	and	r3, r3, #16
   54f38:	uxtb	r3, r3
   54f3c:	cmp	r3, #0
   54f40:	beq	54ed4 <__assert_fail@plt+0x427e8>
   54f44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   54f48:	ldr	r2, [r3, #100]	; 0x64
   54f4c:	ldr	r3, [fp, #-12]
   54f50:	lsl	r3, r3, #2
   54f54:	add	r3, r2, r3
   54f58:	ldr	r3, [r3]
   54f5c:	ldr	r2, [fp, #-12]
   54f60:	mov	r1, r3
   54f64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54f68:	bl	55790 <__assert_fail@plt+0x430a4>
   54f6c:	str	r0, [fp, #-8]
   54f70:	b	54e40 <__assert_fail@plt+0x42754>
   54f74:	ldr	r3, [fp, #-12]
   54f78:	add	r3, r3, #1
   54f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   54f80:	ldr	r1, [fp, #-20]	; 0xffffffec
   54f84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   54f88:	bl	57380 <__assert_fail@plt+0x44c94>
   54f8c:	str	r0, [fp, #-16]
   54f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   54f94:	bl	3fe0c <__assert_fail@plt+0x2d720>
   54f98:	mov	r3, #0
   54f9c:	str	r3, [fp, #-24]	; 0xffffffe8
   54fa0:	ldr	r3, [fp, #-16]
   54fa4:	cmp	r3, #0
   54fa8:	movne	r3, #1
   54fac:	moveq	r3, #0
   54fb0:	uxtb	r3, r3
   54fb4:	cmp	r3, #0
   54fb8:	beq	55034 <__assert_fail@plt+0x42948>
   54fbc:	b	55088 <__assert_fail@plt+0x4299c>
   54fc0:	sub	r0, fp, #56	; 0x38
   54fc4:	ldr	r3, [fp, #-12]
   54fc8:	str	r3, [sp]
   54fcc:	ldr	r3, [fp, #-8]
   54fd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   54fd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   54fd8:	bl	5df50 <__assert_fail@plt+0x4b864>
   54fdc:	sub	r3, fp, #56	; 0x38
   54fe0:	mov	r1, r3
   54fe4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   54fe8:	bl	56d98 <__assert_fail@plt+0x446ac>
   54fec:	str	r0, [fp, #-16]
   54ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   54ff4:	mov	r0, r3
   54ff8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   54ffc:	ldr	r3, [fp, #-16]
   55000:	cmp	r3, #0
   55004:	movne	r3, #1
   55008:	moveq	r3, #0
   5500c:	uxtb	r3, r3
   55010:	cmp	r3, #0
   55014:	bne	55084 <__assert_fail@plt+0x42998>
   55018:	ldr	r3, [fp, #-20]	; 0xffffffec
   5501c:	ldr	r3, [r3]
   55020:	cmp	r3, #0
   55024:	bne	55034 <__assert_fail@plt+0x42948>
   55028:	mov	r3, #1
   5502c:	str	r3, [fp, #-16]
   55030:	b	55088 <__assert_fail@plt+0x4299c>
   55034:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55038:	ldr	r3, [r3, #100]	; 0x64
   5503c:	mov	r0, r3
   55040:	bl	3fe0c <__assert_fail@plt+0x2d720>
   55044:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55048:	ldr	r2, [fp, #-20]	; 0xffffffec
   5504c:	str	r2, [r3, #100]	; 0x64
   55050:	mov	r3, #0
   55054:	str	r3, [fp, #-20]	; 0xffffffec
   55058:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5505c:	ldr	r2, [fp, #-8]
   55060:	str	r2, [r3, #96]	; 0x60
   55064:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55068:	ldr	r2, [fp, #-12]
   5506c:	str	r2, [r3, #92]	; 0x5c
   55070:	mov	r3, #0
   55074:	str	r3, [fp, #-16]
   55078:	b	55088 <__assert_fail@plt+0x4299c>
   5507c:	nop	{0}
   55080:	b	55088 <__assert_fail@plt+0x4299c>
   55084:	nop	{0}
   55088:	ldr	r0, [fp, #-20]	; 0xffffffec
   5508c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   55090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   55094:	bl	3fe0c <__assert_fail@plt+0x2d720>
   55098:	ldr	r3, [fp, #-16]
   5509c:	mov	r0, r3
   550a0:	sub	sp, fp, #4
   550a4:	ldr	fp, [sp]
   550a8:	add	sp, sp, #4
   550ac:	pop	{pc}		; (ldr pc, [sp], #4)
   550b0:	str	fp, [sp, #-8]!
   550b4:	str	lr, [sp, #4]
   550b8:	add	fp, sp, #4
   550bc:	sub	sp, sp, #80	; 0x50
   550c0:	str	r0, [fp, #-72]	; 0xffffffb8
   550c4:	mov	r3, r1
   550c8:	str	r2, [fp, #-80]	; 0xffffffb0
   550cc:	strb	r3, [fp, #-73]	; 0xffffffb7
   550d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   550d4:	ldr	r3, [r3, #84]	; 0x54
   550d8:	str	r3, [fp, #-28]	; 0xffffffe4
   550dc:	mov	r3, #0
   550e0:	str	r3, [fp, #-8]
   550e4:	mvn	r3, #0
   550e8:	str	r3, [fp, #-12]
   550ec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   550f0:	ldr	r3, [r3, #40]	; 0x28
   550f4:	str	r3, [fp, #-32]	; 0xffffffe0
   550f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   550fc:	cmp	r3, #0
   55100:	movne	r3, #1
   55104:	moveq	r3, #0
   55108:	strb	r3, [fp, #-17]	; 0xffffffef
   5510c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55110:	str	r3, [fp, #-24]	; 0xffffffe8
   55114:	mov	r3, #0
   55118:	str	r3, [fp, #-64]	; 0xffffffc0
   5511c:	sub	r3, fp, #64	; 0x40
   55120:	str	r3, [fp, #-44]	; 0xffffffd4
   55124:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55128:	str	r3, [fp, #-48]	; 0xffffffd0
   5512c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55130:	str	r3, [fp, #-52]	; 0xffffffcc
   55134:	ldr	r3, [fp, #-48]	; 0xffffffd0
   55138:	ldr	r3, [r3, #84]	; 0x54
   5513c:	str	r3, [fp, #-56]	; 0xffffffc8
   55140:	ldr	r3, [fp, #-56]	; 0xffffffc8
   55144:	ldr	r3, [r3, #36]	; 0x24
   55148:	ldrb	r3, [r3, #52]	; 0x34
   5514c:	bic	r3, r3, #127	; 0x7f
   55150:	uxtb	r3, r3
   55154:	cmp	r3, #0
   55158:	beq	55238 <__assert_fail@plt+0x42b4c>
   5515c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   55160:	ldr	r3, [fp, #-52]	; 0xffffffcc
   55164:	sub	r1, r3, #1
   55168:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5516c:	ldr	r3, [r3, #88]	; 0x58
   55170:	mov	r2, r3
   55174:	bl	47620 <__assert_fail@plt+0x34f34>
   55178:	str	r0, [fp, #-60]	; 0xffffffc4
   5517c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   55180:	and	r3, r3, #1
   55184:	cmp	r3, #0
   55188:	beq	55198 <__assert_fail@plt+0x42aac>
   5518c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   55190:	ldr	r3, [r3, #40]	; 0x28
   55194:	b	55240 <__assert_fail@plt+0x42b54>
   55198:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5519c:	cmp	r3, #0
   551a0:	bne	551b0 <__assert_fail@plt+0x42ac4>
   551a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   551a8:	ldr	r3, [r3, #36]	; 0x24
   551ac:	b	55240 <__assert_fail@plt+0x42b54>
   551b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   551b4:	and	r3, r3, #4
   551b8:	cmp	r3, #0
   551bc:	beq	551dc <__assert_fail@plt+0x42af0>
   551c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   551c4:	and	r3, r3, #2
   551c8:	cmp	r3, #0
   551cc:	beq	551dc <__assert_fail@plt+0x42af0>
   551d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   551d4:	ldr	r3, [r3, #48]	; 0x30
   551d8:	b	55240 <__assert_fail@plt+0x42b54>
   551dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   551e0:	and	r3, r3, #2
   551e4:	cmp	r3, #0
   551e8:	beq	551f8 <__assert_fail@plt+0x42b0c>
   551ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   551f0:	ldr	r3, [r3, #44]	; 0x2c
   551f4:	b	55240 <__assert_fail@plt+0x42b54>
   551f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   551fc:	and	r3, r3, #4
   55200:	cmp	r3, #0
   55204:	beq	5522c <__assert_fail@plt+0x42b40>
   55208:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5520c:	ldr	r3, [r3, #36]	; 0x24
   55210:	ldr	r2, [r3, #40]	; 0x28
   55214:	ldr	r3, [fp, #-60]	; 0xffffffc4
   55218:	ldr	r1, [fp, #-56]	; 0xffffffc8
   5521c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   55220:	bl	493a8 <__assert_fail@plt+0x36cbc>
   55224:	mov	r3, r0
   55228:	b	55240 <__assert_fail@plt+0x42b54>
   5522c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   55230:	ldr	r3, [r3, #36]	; 0x24
   55234:	b	55240 <__assert_fail@plt+0x42b54>
   55238:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5523c:	ldr	r3, [r3, #36]	; 0x24
   55240:	str	r3, [fp, #-16]
   55244:	ldr	r3, [fp, #-16]
   55248:	cmp	r3, #0
   5524c:	moveq	r3, #1
   55250:	movne	r3, #0
   55254:	uxtb	r3, r3
   55258:	cmp	r3, #0
   5525c:	beq	55270 <__assert_fail@plt+0x42b84>
   55260:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55264:	cmp	r3, #12
   55268:	mvn	r3, #1
   5526c:	b	55660 <__assert_fail@plt+0x42f74>
   55270:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55274:	ldr	r3, [r3, #100]	; 0x64
   55278:	cmp	r3, #0
   5527c:	beq	55350 <__assert_fail@plt+0x42c64>
   55280:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55284:	ldr	r2, [r3, #100]	; 0x64
   55288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5528c:	lsl	r3, r3, #2
   55290:	add	r3, r2, r3
   55294:	ldr	r2, [fp, #-16]
   55298:	str	r2, [r3]
   5529c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   552a0:	ldr	r3, [r3, #76]	; 0x4c
   552a4:	cmp	r3, #0
   552a8:	beq	55350 <__assert_fail@plt+0x42c64>
   552ac:	mov	r3, #0
   552b0:	strb	r3, [fp, #-17]	; 0xffffffef
   552b4:	ldr	r3, [fp, #-16]
   552b8:	add	r3, r3, #4
   552bc:	mov	r2, #0
   552c0:	mov	r1, r3
   552c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   552c8:	bl	5908c <__assert_fail@plt+0x469a0>
   552cc:	mov	r3, r0
   552d0:	str	r3, [fp, #-64]	; 0xffffffc0
   552d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   552d8:	cmp	r3, #0
   552dc:	movne	r3, #1
   552e0:	moveq	r3, #0
   552e4:	uxtb	r3, r3
   552e8:	cmp	r3, #0
   552ec:	beq	552f8 <__assert_fail@plt+0x42c0c>
   552f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   552f4:	b	55660 <__assert_fail@plt+0x42f74>
   552f8:	ldr	r3, [fp, #-16]
   552fc:	ldrb	r3, [r3, #52]	; 0x34
   55300:	and	r3, r3, #64	; 0x40
   55304:	uxtb	r3, r3
   55308:	cmp	r3, #0
   5530c:	beq	55350 <__assert_fail@plt+0x42c64>
   55310:	ldr	r3, [fp, #-16]
   55314:	add	r3, r3, #4
   55318:	mov	r1, r3
   5531c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   55320:	bl	595f4 <__assert_fail@plt+0x46f08>
   55324:	mov	r3, r0
   55328:	str	r3, [fp, #-64]	; 0xffffffc0
   5532c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55330:	cmp	r3, #0
   55334:	movne	r3, #1
   55338:	moveq	r3, #0
   5533c:	uxtb	r3, r3
   55340:	cmp	r3, #0
   55344:	beq	55350 <__assert_fail@plt+0x42c64>
   55348:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5534c:	b	55660 <__assert_fail@plt+0x42f74>
   55350:	ldr	r3, [fp, #-16]
   55354:	ldrb	r3, [r3, #52]	; 0x34
   55358:	ubfx	r3, r3, #4, #1
   5535c:	uxtb	r3, r3
   55360:	cmp	r3, #0
   55364:	beq	55618 <__assert_fail@plt+0x42f2c>
   55368:	ldr	r3, [fp, #-16]
   5536c:	ldrb	r3, [r3, #52]	; 0x34
   55370:	bic	r3, r3, #127	; 0x7f
   55374:	uxtb	r3, r3
   55378:	cmp	r3, #0
   5537c:	beq	5539c <__assert_fail@plt+0x42cb0>
   55380:	ldr	r2, [fp, #-32]	; 0xffffffe0
   55384:	ldr	r1, [fp, #-16]
   55388:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5538c:	bl	55790 <__assert_fail@plt+0x430a4>
   55390:	mov	r3, r0
   55394:	cmp	r3, #0
   55398:	beq	55618 <__assert_fail@plt+0x42f2c>
   5539c:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   553a0:	eor	r3, r3, #1
   553a4:	uxtb	r3, r3
   553a8:	cmp	r3, #0
   553ac:	beq	553b8 <__assert_fail@plt+0x42ccc>
   553b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   553b4:	b	55660 <__assert_fail@plt+0x42f74>
   553b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   553bc:	str	r3, [fp, #-12]
   553c0:	mov	r3, #1
   553c4:	str	r3, [fp, #-8]
   553c8:	b	55618 <__assert_fail@plt+0x42f2c>
   553cc:	ldr	r3, [fp, #-16]
   553d0:	str	r3, [fp, #-36]	; 0xffffffdc
   553d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   553d8:	ldr	r3, [r3, #40]	; 0x28
   553dc:	add	r3, r3, #1
   553e0:	str	r3, [fp, #-40]	; 0xffffffd8
   553e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   553e8:	ldr	r3, [r3, #36]	; 0x24
   553ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   553f0:	cmp	r2, r3
   553f4:	movge	r3, #1
   553f8:	movlt	r3, #0
   553fc:	uxtb	r3, r3
   55400:	cmp	r3, #0
   55404:	beq	55420 <__assert_fail@plt+0x42d34>
   55408:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5540c:	ldr	r2, [r3, #36]	; 0x24
   55410:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55414:	ldr	r3, [r3, #48]	; 0x30
   55418:	cmp	r2, r3
   5541c:	blt	5545c <__assert_fail@plt+0x42d70>
   55420:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55424:	ldr	r3, [r3, #28]
   55428:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5542c:	cmp	r2, r3
   55430:	movge	r3, #1
   55434:	movlt	r3, #0
   55438:	uxtb	r3, r3
   5543c:	cmp	r3, #0
   55440:	beq	554a4 <__assert_fail@plt+0x42db8>
   55444:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55448:	ldr	r2, [r3, #28]
   5544c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55450:	ldr	r3, [r3, #48]	; 0x30
   55454:	cmp	r2, r3
   55458:	bge	554a4 <__assert_fail@plt+0x42db8>
   5545c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   55460:	add	r3, r3, #1
   55464:	mov	r1, r3
   55468:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5546c:	bl	5d3a4 <__assert_fail@plt+0x4acb8>
   55470:	mov	r3, r0
   55474:	str	r3, [fp, #-64]	; 0xffffffc0
   55478:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5547c:	cmp	r3, #0
   55480:	movne	r3, #1
   55484:	moveq	r3, #0
   55488:	uxtb	r3, r3
   5548c:	cmp	r3, #0
   55490:	beq	554a4 <__assert_fail@plt+0x42db8>
   55494:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55498:	cmp	r3, #12
   5549c:	mvn	r3, #1
   554a0:	b	55660 <__assert_fail@plt+0x42f74>
   554a4:	sub	r3, fp, #64	; 0x40
   554a8:	ldr	r2, [fp, #-16]
   554ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   554b0:	mov	r0, r3
   554b4:	bl	58b2c <__assert_fail@plt+0x46440>
   554b8:	str	r0, [fp, #-16]
   554bc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   554c0:	ldr	r3, [r3, #100]	; 0x64
   554c4:	cmp	r3, #0
   554c8:	beq	554e4 <__assert_fail@plt+0x42df8>
   554cc:	sub	r3, fp, #64	; 0x40
   554d0:	ldr	r2, [fp, #-16]
   554d4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   554d8:	mov	r0, r3
   554dc:	bl	58ce4 <__assert_fail@plt+0x465f8>
   554e0:	str	r0, [fp, #-16]
   554e4:	ldr	r3, [fp, #-16]
   554e8:	cmp	r3, #0
   554ec:	bne	55564 <__assert_fail@plt+0x42e78>
   554f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   554f4:	cmp	r3, #0
   554f8:	movne	r3, #1
   554fc:	moveq	r3, #0
   55500:	uxtb	r3, r3
   55504:	cmp	r3, #0
   55508:	beq	55514 <__assert_fail@plt+0x42e28>
   5550c:	mvn	r3, #1
   55510:	b	55660 <__assert_fail@plt+0x42f74>
   55514:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55518:	ldr	r3, [r3, #100]	; 0x64
   5551c:	cmp	r3, #0
   55520:	beq	55638 <__assert_fail@plt+0x42f4c>
   55524:	ldr	r3, [fp, #-8]
   55528:	cmp	r3, #0
   5552c:	beq	55544 <__assert_fail@plt+0x42e58>
   55530:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   55534:	eor	r3, r3, #1
   55538:	uxtb	r3, r3
   5553c:	cmp	r3, #0
   55540:	bne	55638 <__assert_fail@plt+0x42f4c>
   55544:	sub	r3, fp, #64	; 0x40
   55548:	ldr	r1, [fp, #-72]	; 0xffffffb8
   5554c:	mov	r0, r3
   55550:	bl	58fbc <__assert_fail@plt+0x468d0>
   55554:	str	r0, [fp, #-16]
   55558:	ldr	r3, [fp, #-16]
   5555c:	cmp	r3, #0
   55560:	beq	55638 <__assert_fail@plt+0x42f4c>
   55564:	ldrb	r3, [fp, #-17]	; 0xffffffef
   55568:	cmp	r3, #0
   5556c:	beq	55594 <__assert_fail@plt+0x42ea8>
   55570:	ldr	r2, [fp, #-36]	; 0xffffffdc
   55574:	ldr	r3, [fp, #-16]
   55578:	cmp	r2, r3
   5557c:	bne	5558c <__assert_fail@plt+0x42ea0>
   55580:	ldr	r3, [fp, #-40]	; 0xffffffd8
   55584:	str	r3, [fp, #-24]	; 0xffffffe8
   55588:	b	55594 <__assert_fail@plt+0x42ea8>
   5558c:	mov	r3, #0
   55590:	strb	r3, [fp, #-17]	; 0xffffffef
   55594:	ldr	r3, [fp, #-16]
   55598:	ldrb	r3, [r3, #52]	; 0x34
   5559c:	and	r3, r3, #16
   555a0:	uxtb	r3, r3
   555a4:	cmp	r3, #0
   555a8:	beq	55618 <__assert_fail@plt+0x42f2c>
   555ac:	ldr	r3, [fp, #-16]
   555b0:	ldrb	r3, [r3, #52]	; 0x34
   555b4:	bic	r3, r3, #127	; 0x7f
   555b8:	uxtb	r3, r3
   555bc:	cmp	r3, #0
   555c0:	beq	555e8 <__assert_fail@plt+0x42efc>
   555c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   555c8:	ldr	r3, [r3, #40]	; 0x28
   555cc:	mov	r2, r3
   555d0:	ldr	r1, [fp, #-16]
   555d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   555d8:	bl	55790 <__assert_fail@plt+0x430a4>
   555dc:	mov	r3, r0
   555e0:	cmp	r3, #0
   555e4:	beq	55618 <__assert_fail@plt+0x42f2c>
   555e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   555ec:	ldr	r3, [r3, #40]	; 0x28
   555f0:	str	r3, [fp, #-12]
   555f4:	mov	r3, #1
   555f8:	str	r3, [fp, #-8]
   555fc:	mov	r3, #0
   55600:	str	r3, [fp, #-80]	; 0xffffffb0
   55604:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   55608:	eor	r3, r3, #1
   5560c:	uxtb	r3, r3
   55610:	cmp	r3, #0
   55614:	bne	55634 <__assert_fail@plt+0x42f48>
   55618:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5561c:	ldr	r2, [r3, #56]	; 0x38
   55620:	ldr	r3, [fp, #-72]	; 0xffffffb8
   55624:	ldr	r3, [r3, #40]	; 0x28
   55628:	cmp	r2, r3
   5562c:	bgt	553cc <__assert_fail@plt+0x42ce0>
   55630:	b	55638 <__assert_fail@plt+0x42f4c>
   55634:	nop	{0}
   55638:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5563c:	cmp	r3, #0
   55640:	beq	5565c <__assert_fail@plt+0x42f70>
   55644:	ldr	r3, [fp, #-80]	; 0xffffffb0
   55648:	ldr	r2, [r3]
   5564c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55650:	add	r2, r2, r3
   55654:	ldr	r3, [fp, #-80]	; 0xffffffb0
   55658:	str	r2, [r3]
   5565c:	ldr	r3, [fp, #-12]
   55660:	mov	r0, r3
   55664:	sub	sp, fp, #4
   55668:	ldr	fp, [sp]
   5566c:	add	sp, sp, #4
   55670:	pop	{pc}		; (ldr pc, [sp], #4)
   55674:	push	{fp}		; (str fp, [sp, #-4]!)
   55678:	add	fp, sp, #0
   5567c:	sub	sp, sp, #28
   55680:	str	r0, [fp, #-16]
   55684:	str	r1, [fp, #-20]	; 0xffffffec
   55688:	str	r2, [fp, #-24]	; 0xffffffe8
   5568c:	ldr	r3, [fp, #-16]
   55690:	ldr	r2, [r3]
   55694:	ldr	r3, [fp, #-20]	; 0xffffffec
   55698:	lsl	r3, r3, #3
   5569c:	add	r3, r2, r3
   556a0:	ldrb	r3, [r3, #4]
   556a4:	str	r3, [fp, #-8]
   556a8:	ldr	r3, [fp, #-16]
   556ac:	ldr	r2, [r3]
   556b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   556b4:	lsl	r3, r3, #3
   556b8:	add	r3, r2, r3
   556bc:	ldr	r3, [r3, #4]
   556c0:	ubfx	r3, r3, #8, #10
   556c4:	uxth	r3, r3
   556c8:	str	r3, [fp, #-12]
   556cc:	ldr	r3, [fp, #-8]
   556d0:	cmp	r3, #2
   556d4:	beq	556e0 <__assert_fail@plt+0x42ff4>
   556d8:	mov	r3, #0
   556dc:	b	55780 <__assert_fail@plt+0x43094>
   556e0:	ldr	r3, [fp, #-12]
   556e4:	cmp	r3, #0
   556e8:	bne	556f4 <__assert_fail@plt+0x43008>
   556ec:	mov	r3, #1
   556f0:	b	55780 <__assert_fail@plt+0x43094>
   556f4:	ldr	r3, [fp, #-12]
   556f8:	and	r3, r3, #4
   556fc:	cmp	r3, #0
   55700:	beq	55714 <__assert_fail@plt+0x43028>
   55704:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55708:	and	r3, r3, #1
   5570c:	cmp	r3, #0
   55710:	beq	55774 <__assert_fail@plt+0x43088>
   55714:	ldr	r3, [fp, #-12]
   55718:	and	r3, r3, #8
   5571c:	cmp	r3, #0
   55720:	beq	55734 <__assert_fail@plt+0x43048>
   55724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55728:	and	r3, r3, #1
   5572c:	cmp	r3, #0
   55730:	bne	55774 <__assert_fail@plt+0x43088>
   55734:	ldr	r3, [fp, #-12]
   55738:	and	r3, r3, #32
   5573c:	cmp	r3, #0
   55740:	beq	55754 <__assert_fail@plt+0x43068>
   55744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55748:	and	r3, r3, #2
   5574c:	cmp	r3, #0
   55750:	beq	55774 <__assert_fail@plt+0x43088>
   55754:	ldr	r3, [fp, #-12]
   55758:	and	r3, r3, #128	; 0x80
   5575c:	cmp	r3, #0
   55760:	beq	5577c <__assert_fail@plt+0x43090>
   55764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   55768:	and	r3, r3, #8
   5576c:	cmp	r3, #0
   55770:	bne	5577c <__assert_fail@plt+0x43090>
   55774:	mov	r3, #0
   55778:	b	55780 <__assert_fail@plt+0x43094>
   5577c:	mov	r3, #1
   55780:	mov	r0, r3
   55784:	add	sp, fp, #0
   55788:	pop	{fp}		; (ldr fp, [sp], #4)
   5578c:	bx	lr
   55790:	str	fp, [sp, #-8]!
   55794:	str	lr, [sp, #4]
   55798:	add	fp, sp, #4
   5579c:	sub	sp, sp, #24
   557a0:	str	r0, [fp, #-16]
   557a4:	str	r1, [fp, #-20]	; 0xffffffec
   557a8:	str	r2, [fp, #-24]	; 0xffffffe8
   557ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   557b0:	ldrb	r3, [r3, #52]	; 0x34
   557b4:	and	r3, r3, #16
   557b8:	uxtb	r3, r3
   557bc:	cmp	r3, #0
   557c0:	ldr	r0, [fp, #-16]
   557c4:	ldr	r3, [fp, #-16]
   557c8:	ldr	r3, [r3, #88]	; 0x58
   557cc:	mov	r2, r3
   557d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   557d4:	bl	47620 <__assert_fail@plt+0x34f34>
   557d8:	str	r0, [fp, #-12]
   557dc:	mov	r3, #0
   557e0:	str	r3, [fp, #-8]
   557e4:	b	55848 <__assert_fail@plt+0x4315c>
   557e8:	ldr	r3, [fp, #-16]
   557ec:	ldr	r0, [r3, #84]	; 0x54
   557f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   557f4:	ldr	r2, [r3, #12]
   557f8:	ldr	r3, [fp, #-8]
   557fc:	lsl	r3, r3, #2
   55800:	add	r3, r2, r3
   55804:	ldr	r3, [r3]
   55808:	ldr	r2, [fp, #-12]
   5580c:	mov	r1, r3
   55810:	bl	55674 <__assert_fail@plt+0x42f88>
   55814:	mov	r3, r0
   55818:	cmp	r3, #0
   5581c:	beq	5583c <__assert_fail@plt+0x43150>
   55820:	ldr	r3, [fp, #-20]	; 0xffffffec
   55824:	ldr	r2, [r3, #12]
   55828:	ldr	r3, [fp, #-8]
   5582c:	lsl	r3, r3, #2
   55830:	add	r3, r2, r3
   55834:	ldr	r3, [r3]
   55838:	b	55860 <__assert_fail@plt+0x43174>
   5583c:	ldr	r3, [fp, #-8]
   55840:	add	r3, r3, #1
   55844:	str	r3, [fp, #-8]
   55848:	ldr	r3, [fp, #-20]	; 0xffffffec
   5584c:	ldr	r3, [r3, #8]
   55850:	ldr	r2, [fp, #-8]
   55854:	cmp	r2, r3
   55858:	blt	557e8 <__assert_fail@plt+0x430fc>
   5585c:	mov	r3, #0
   55860:	mov	r0, r3
   55864:	sub	sp, fp, #4
   55868:	ldr	fp, [sp]
   5586c:	add	sp, sp, #4
   55870:	pop	{pc}		; (ldr pc, [sp], #4)
   55874:	str	fp, [sp, #-8]!
   55878:	str	lr, [sp, #4]
   5587c:	add	fp, sp, #4
   55880:	sub	sp, sp, #88	; 0x58
   55884:	str	r0, [fp, #-64]	; 0xffffffc0
   55888:	str	r1, [fp, #-68]	; 0xffffffbc
   5588c:	str	r2, [fp, #-72]	; 0xffffffb8
   55890:	str	r3, [fp, #-76]	; 0xffffffb4
   55894:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55898:	ldr	r3, [r3, #84]	; 0x54
   5589c:	str	r3, [fp, #-20]	; 0xffffffec
   558a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   558a4:	ldr	r2, [r3]
   558a8:	ldr	r3, [fp, #8]
   558ac:	lsl	r3, r3, #3
   558b0:	add	r3, r2, r3
   558b4:	ldrb	r3, [r3, #4]
   558b8:	and	r3, r3, #8
   558bc:	cmp	r3, #0
   558c0:	beq	55a58 <__assert_fail@plt+0x4336c>
   558c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   558c8:	ldr	r2, [r3, #100]	; 0x64
   558cc:	ldr	r3, [fp, #4]
   558d0:	ldr	r3, [r3]
   558d4:	lsl	r3, r3, #2
   558d8:	add	r3, r2, r3
   558dc:	ldr	r3, [r3]
   558e0:	add	r3, r3, #4
   558e4:	str	r3, [fp, #-24]	; 0xffffffe8
   558e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   558ec:	ldr	r1, [r3, #20]
   558f0:	ldr	r2, [fp, #8]
   558f4:	mov	r3, r2
   558f8:	lsl	r3, r3, #1
   558fc:	add	r3, r3, r2
   55900:	lsl	r3, r3, #2
   55904:	add	r3, r1, r3
   55908:	str	r3, [fp, #-28]	; 0xffffffe4
   5590c:	ldr	r1, [fp, #8]
   55910:	ldr	r0, [fp, #12]
   55914:	bl	48c24 <__assert_fail@plt+0x36538>
   55918:	mov	r3, r0
   5591c:	cmp	r3, #0
   55920:	bne	55954 <__assert_fail@plt+0x43268>
   55924:	ldr	r1, [fp, #8]
   55928:	ldr	r0, [fp, #12]
   5592c:	bl	487fc <__assert_fail@plt+0x36110>
   55930:	mov	r3, r0
   55934:	strb	r3, [fp, #-29]	; 0xffffffe3
   55938:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   5593c:	eor	r3, r3, #1
   55940:	uxtb	r3, r3
   55944:	cmp	r3, #0
   55948:	beq	55954 <__assert_fail@plt+0x43268>
   5594c:	mvn	r3, #1
   55950:	b	55df0 <__assert_fail@plt+0x43704>
   55954:	mvn	r3, #0
   55958:	str	r3, [fp, #-8]
   5595c:	mov	r3, #0
   55960:	str	r3, [fp, #-12]
   55964:	b	55a34 <__assert_fail@plt+0x43348>
   55968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5596c:	ldr	r2, [r3, #8]
   55970:	ldr	r3, [fp, #-12]
   55974:	lsl	r3, r3, #2
   55978:	add	r3, r2, r3
   5597c:	ldr	r3, [r3]
   55980:	str	r3, [fp, #-36]	; 0xffffffdc
   55984:	ldr	r1, [fp, #-36]	; 0xffffffdc
   55988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5598c:	bl	48c24 <__assert_fail@plt+0x36538>
   55990:	mov	r3, r0
   55994:	cmp	r3, #0
   55998:	beq	55a24 <__assert_fail@plt+0x43338>
   5599c:	ldr	r3, [fp, #-8]
   559a0:	cmn	r3, #1
   559a4:	bne	559b4 <__assert_fail@plt+0x432c8>
   559a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   559ac:	str	r3, [fp, #-8]
   559b0:	b	55a28 <__assert_fail@plt+0x4333c>
   559b4:	ldr	r1, [fp, #-8]
   559b8:	ldr	r0, [fp, #12]
   559bc:	bl	48c24 <__assert_fail@plt+0x36538>
   559c0:	mov	r3, r0
   559c4:	cmp	r3, #0
   559c8:	beq	559d4 <__assert_fail@plt+0x432e8>
   559cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   559d0:	b	55df0 <__assert_fail@plt+0x43704>
   559d4:	ldr	r3, [fp, #16]
   559d8:	cmp	r3, #0
   559dc:	beq	55a4c <__assert_fail@plt+0x43360>
   559e0:	ldr	r3, [fp, #4]
   559e4:	ldr	r1, [r3]
   559e8:	ldr	r3, [fp, #12]
   559ec:	str	r3, [sp, #8]
   559f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   559f4:	str	r3, [sp, #4]
   559f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   559fc:	str	r3, [sp]
   55a00:	ldr	r3, [fp, #-68]	; 0xffffffbc
   55a04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   55a08:	ldr	r0, [fp, #16]
   55a0c:	bl	55e04 <__assert_fail@plt+0x43718>
   55a10:	mov	r3, r0
   55a14:	cmp	r3, #0
   55a18:	beq	55a4c <__assert_fail@plt+0x43360>
   55a1c:	mvn	r3, #1
   55a20:	b	55df0 <__assert_fail@plt+0x43704>
   55a24:	nop	{0}
   55a28:	ldr	r3, [fp, #-12]
   55a2c:	add	r3, r3, #1
   55a30:	str	r3, [fp, #-12]
   55a34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   55a38:	ldr	r3, [r3, #4]
   55a3c:	ldr	r2, [fp, #-12]
   55a40:	cmp	r2, r3
   55a44:	blt	55968 <__assert_fail@plt+0x4327c>
   55a48:	b	55a50 <__assert_fail@plt+0x43364>
   55a4c:	nop	{0}
   55a50:	ldr	r3, [fp, #-8]
   55a54:	b	55df0 <__assert_fail@plt+0x43704>
   55a58:	mov	r3, #0
   55a5c:	str	r3, [fp, #-16]
   55a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   55a64:	ldr	r2, [r3]
   55a68:	ldr	r3, [fp, #8]
   55a6c:	lsl	r3, r3, #3
   55a70:	add	r3, r2, r3
   55a74:	ldrb	r3, [r3, #4]
   55a78:	str	r3, [fp, #-40]	; 0xffffffd8
   55a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   55a80:	ldr	r2, [r3]
   55a84:	ldr	r3, [fp, #8]
   55a88:	lsl	r3, r3, #3
   55a8c:	add	r3, r2, r3
   55a90:	ldrb	r3, [r3, #6]
   55a94:	and	r3, r3, #16
   55a98:	uxtb	r3, r3
   55a9c:	cmp	r3, #0
   55aa0:	beq	55ac4 <__assert_fail@plt+0x433d8>
   55aa4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   55aa8:	ldr	r3, [fp, #4]
   55aac:	ldr	r3, [r3]
   55ab0:	ldr	r1, [fp, #8]
   55ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
   55ab8:	bl	5cbf4 <__assert_fail@plt+0x4a508>
   55abc:	str	r0, [fp, #-16]
   55ac0:	b	55cc0 <__assert_fail@plt+0x435d4>
   55ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   55ac8:	cmp	r3, #4
   55acc:	bne	55cc0 <__assert_fail@plt+0x435d4>
   55ad0:	ldr	r3, [fp, #-20]	; 0xffffffec
   55ad4:	ldr	r2, [r3]
   55ad8:	ldr	r3, [fp, #8]
   55adc:	lsl	r3, r3, #3
   55ae0:	add	r3, r2, r3
   55ae4:	ldr	r3, [r3]
   55ae8:	add	r3, r3, #1
   55aec:	str	r3, [fp, #-44]	; 0xffffffd4
   55af0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   55af4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   55af8:	cmp	r2, r3
   55afc:	bge	55b30 <__assert_fail@plt+0x43444>
   55b00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55b04:	lsl	r3, r3, #3
   55b08:	ldr	r2, [fp, #-72]	; 0xffffffb8
   55b0c:	add	r3, r2, r3
   55b10:	ldr	r2, [r3, #4]
   55b14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55b18:	lsl	r3, r3, #3
   55b1c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   55b20:	add	r3, r1, r3
   55b24:	ldr	r3, [r3]
   55b28:	sub	r3, r2, r3
   55b2c:	str	r3, [fp, #-16]
   55b30:	ldr	r3, [fp, #16]
   55b34:	cmp	r3, #0
   55b38:	beq	55c18 <__assert_fail@plt+0x4352c>
   55b3c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   55b40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   55b44:	cmp	r2, r3
   55b48:	bge	55b84 <__assert_fail@plt+0x43498>
   55b4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55b50:	lsl	r3, r3, #3
   55b54:	ldr	r2, [fp, #-72]	; 0xffffffb8
   55b58:	add	r3, r2, r3
   55b5c:	ldr	r3, [r3]
   55b60:	cmn	r3, #1
   55b64:	beq	55b84 <__assert_fail@plt+0x43498>
   55b68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55b6c:	lsl	r3, r3, #3
   55b70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   55b74:	add	r3, r2, r3
   55b78:	ldr	r3, [r3, #4]
   55b7c:	cmn	r3, #1
   55b80:	bne	55b8c <__assert_fail@plt+0x434a0>
   55b84:	mvn	r3, #0
   55b88:	b	55df0 <__assert_fail@plt+0x43704>
   55b8c:	ldr	r3, [fp, #-16]
   55b90:	cmp	r3, #0
   55b94:	beq	55c18 <__assert_fail@plt+0x4352c>
   55b98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55b9c:	ldr	r3, [r3, #4]
   55ba0:	str	r3, [fp, #-48]	; 0xffffffd0
   55ba4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55ba8:	ldr	r2, [r3, #28]
   55bac:	ldr	r3, [fp, #4]
   55bb0:	ldr	r3, [r3]
   55bb4:	sub	r3, r2, r3
   55bb8:	ldr	r2, [fp, #-16]
   55bbc:	cmp	r2, r3
   55bc0:	bgt	55c10 <__assert_fail@plt+0x43524>
   55bc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55bc8:	lsl	r3, r3, #3
   55bcc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   55bd0:	add	r3, r2, r3
   55bd4:	ldr	r3, [r3]
   55bd8:	mov	r2, r3
   55bdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   55be0:	add	r0, r3, r2
   55be4:	ldr	r3, [fp, #4]
   55be8:	ldr	r3, [r3]
   55bec:	mov	r2, r3
   55bf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   55bf4:	add	r3, r3, r2
   55bf8:	ldr	r2, [fp, #-16]
   55bfc:	mov	r1, r3
   55c00:	bl	12158 <memcmp@plt>
   55c04:	mov	r3, r0
   55c08:	cmp	r3, #0
   55c0c:	beq	55c18 <__assert_fail@plt+0x4352c>
   55c10:	mvn	r3, #0
   55c14:	b	55df0 <__assert_fail@plt+0x43704>
   55c18:	ldr	r3, [fp, #-16]
   55c1c:	cmp	r3, #0
   55c20:	bne	55cc0 <__assert_fail@plt+0x435d4>
   55c24:	ldr	r1, [fp, #8]
   55c28:	ldr	r0, [fp, #12]
   55c2c:	bl	487fc <__assert_fail@plt+0x36110>
   55c30:	mov	r3, r0
   55c34:	strb	r3, [fp, #-49]	; 0xffffffcf
   55c38:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   55c3c:	eor	r3, r3, #1
   55c40:	uxtb	r3, r3
   55c44:	cmp	r3, #0
   55c48:	beq	55c54 <__assert_fail@plt+0x43568>
   55c4c:	mvn	r3, #1
   55c50:	b	55df0 <__assert_fail@plt+0x43704>
   55c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   55c58:	ldr	r1, [r3, #20]
   55c5c:	ldr	r2, [fp, #8]
   55c60:	mov	r3, r2
   55c64:	lsl	r3, r3, #1
   55c68:	add	r3, r3, r2
   55c6c:	lsl	r3, r3, #2
   55c70:	add	r3, r1, r3
   55c74:	ldr	r3, [r3, #8]
   55c78:	ldr	r3, [r3]
   55c7c:	str	r3, [fp, #-56]	; 0xffffffc8
   55c80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55c84:	ldr	r2, [r3, #100]	; 0x64
   55c88:	ldr	r3, [fp, #4]
   55c8c:	ldr	r3, [r3]
   55c90:	lsl	r3, r3, #2
   55c94:	add	r3, r2, r3
   55c98:	ldr	r3, [r3]
   55c9c:	add	r3, r3, #4
   55ca0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   55ca4:	mov	r0, r3
   55ca8:	bl	48c24 <__assert_fail@plt+0x36538>
   55cac:	mov	r3, r0
   55cb0:	cmp	r3, #0
   55cb4:	beq	55cc0 <__assert_fail@plt+0x435d4>
   55cb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   55cbc:	b	55df0 <__assert_fail@plt+0x43704>
   55cc0:	ldr	r3, [fp, #-16]
   55cc4:	cmp	r3, #0
   55cc8:	bne	55d00 <__assert_fail@plt+0x43614>
   55ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   55cd0:	ldr	r2, [r3]
   55cd4:	ldr	r3, [fp, #8]
   55cd8:	lsl	r3, r3, #3
   55cdc:	add	r1, r2, r3
   55ce0:	ldr	r3, [fp, #4]
   55ce4:	ldr	r3, [r3]
   55ce8:	mov	r2, r3
   55cec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   55cf0:	bl	5d164 <__assert_fail@plt+0x4aa78>
   55cf4:	mov	r3, r0
   55cf8:	cmp	r3, #0
   55cfc:	beq	55dec <__assert_fail@plt+0x43700>
   55d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   55d04:	ldr	r2, [r3, #12]
   55d08:	ldr	r3, [fp, #8]
   55d0c:	lsl	r3, r3, #2
   55d10:	add	r3, r2, r3
   55d14:	ldr	r3, [r3]
   55d18:	str	r3, [fp, #-60]	; 0xffffffc4
   55d1c:	ldr	r3, [fp, #-16]
   55d20:	cmp	r3, #0
   55d24:	bne	55d38 <__assert_fail@plt+0x4364c>
   55d28:	ldr	r3, [fp, #4]
   55d2c:	ldr	r3, [r3]
   55d30:	add	r3, r3, #1
   55d34:	b	55d48 <__assert_fail@plt+0x4365c>
   55d38:	ldr	r3, [fp, #4]
   55d3c:	ldr	r2, [r3]
   55d40:	ldr	r3, [fp, #-16]
   55d44:	add	r3, r2, r3
   55d48:	ldr	r2, [fp, #4]
   55d4c:	str	r3, [r2]
   55d50:	ldr	r3, [fp, #16]
   55d54:	cmp	r3, #0
   55d58:	beq	55dd8 <__assert_fail@plt+0x436ec>
   55d5c:	ldr	r3, [fp, #4]
   55d60:	ldr	r2, [r3]
   55d64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55d68:	ldr	r3, [r3, #92]	; 0x5c
   55d6c:	cmp	r2, r3
   55d70:	bgt	55dd0 <__assert_fail@plt+0x436e4>
   55d74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55d78:	ldr	r2, [r3, #100]	; 0x64
   55d7c:	ldr	r3, [fp, #4]
   55d80:	ldr	r3, [r3]
   55d84:	lsl	r3, r3, #2
   55d88:	add	r3, r2, r3
   55d8c:	ldr	r3, [r3]
   55d90:	cmp	r3, #0
   55d94:	beq	55dd0 <__assert_fail@plt+0x436e4>
   55d98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   55d9c:	ldr	r2, [r3, #100]	; 0x64
   55da0:	ldr	r3, [fp, #4]
   55da4:	ldr	r3, [r3]
   55da8:	lsl	r3, r3, #2
   55dac:	add	r3, r2, r3
   55db0:	ldr	r3, [r3]
   55db4:	add	r3, r3, #4
   55db8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   55dbc:	mov	r0, r3
   55dc0:	bl	48c24 <__assert_fail@plt+0x36538>
   55dc4:	mov	r3, r0
   55dc8:	cmp	r3, #0
   55dcc:	bne	55dd8 <__assert_fail@plt+0x436ec>
   55dd0:	mvn	r3, #0
   55dd4:	b	55df0 <__assert_fail@plt+0x43704>
   55dd8:	ldr	r3, [fp, #12]
   55ddc:	mov	r2, #0
   55de0:	str	r2, [r3, #4]
   55de4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   55de8:	b	55df0 <__assert_fail@plt+0x43704>
   55dec:	mvn	r3, #0
   55df0:	mov	r0, r3
   55df4:	sub	sp, fp, #4
   55df8:	ldr	fp, [sp]
   55dfc:	add	sp, sp, #4
   55e00:	pop	{pc}		; (ldr pc, [sp], #4)
   55e04:	str	r4, [sp, #-12]!
   55e08:	str	fp, [sp, #4]
   55e0c:	str	lr, [sp, #8]
   55e10:	add	fp, sp, #8
   55e14:	sub	sp, sp, #36	; 0x24
   55e18:	str	r0, [fp, #-32]	; 0xffffffe0
   55e1c:	str	r1, [fp, #-36]	; 0xffffffdc
   55e20:	str	r2, [fp, #-40]	; 0xffffffd8
   55e24:	str	r3, [fp, #-44]	; 0xffffffd4
   55e28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55e2c:	ldr	r3, [r3]
   55e30:	add	r1, r3, #1
   55e34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   55e38:	str	r1, [r2]
   55e3c:	str	r3, [fp, #-16]
   55e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55e44:	ldr	r2, [r3]
   55e48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55e4c:	ldr	r3, [r3, #4]
   55e50:	cmp	r2, r3
   55e54:	bne	55ebc <__assert_fail@plt+0x437d0>
   55e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55e5c:	ldr	r0, [r3, #8]
   55e60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55e64:	ldr	r3, [r3, #4]
   55e68:	mov	r2, r3
   55e6c:	mov	r3, r2
   55e70:	lsl	r3, r3, #1
   55e74:	add	r3, r3, r2
   55e78:	lsl	r3, r3, #4
   55e7c:	mov	r1, r3
   55e80:	bl	446e8 <__assert_fail@plt+0x31ffc>
   55e84:	str	r0, [fp, #-20]	; 0xffffffec
   55e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   55e8c:	cmp	r3, #0
   55e90:	bne	55e9c <__assert_fail@plt+0x437b0>
   55e94:	mov	r3, #12
   55e98:	b	56028 <__assert_fail@plt+0x4393c>
   55e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55ea0:	ldr	r3, [r3, #4]
   55ea4:	lsl	r2, r3, #1
   55ea8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55eac:	str	r2, [r3, #4]
   55eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55eb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   55eb8:	str	r2, [r3, #8]
   55ebc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55ec0:	ldr	r1, [r3, #8]
   55ec4:	ldr	r2, [fp, #-16]
   55ec8:	mov	r3, r2
   55ecc:	lsl	r3, r3, #1
   55ed0:	add	r3, r3, r2
   55ed4:	lsl	r3, r3, #3
   55ed8:	add	r3, r1, r3
   55edc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   55ee0:	str	r2, [r3]
   55ee4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55ee8:	ldr	r1, [r3, #8]
   55eec:	ldr	r2, [fp, #-16]
   55ef0:	mov	r3, r2
   55ef4:	lsl	r3, r3, #1
   55ef8:	add	r3, r3, r2
   55efc:	lsl	r3, r3, #3
   55f00:	add	r3, r1, r3
   55f04:	ldr	r2, [fp, #-40]	; 0xffffffd8
   55f08:	str	r2, [r3, #4]
   55f0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55f10:	lsl	r0, r3, #4
   55f14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55f18:	ldr	r1, [r3, #8]
   55f1c:	ldr	r2, [fp, #-16]
   55f20:	mov	r3, r2
   55f24:	lsl	r3, r3, #1
   55f28:	add	r3, r3, r2
   55f2c:	lsl	r3, r3, #3
   55f30:	add	r4, r1, r3
   55f34:	bl	43510 <__assert_fail@plt+0x30e24>
   55f38:	mov	r3, r0
   55f3c:	str	r3, [r4, #8]
   55f40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55f44:	ldr	r1, [r3, #8]
   55f48:	ldr	r2, [fp, #-16]
   55f4c:	mov	r3, r2
   55f50:	lsl	r3, r3, #1
   55f54:	add	r3, r3, r2
   55f58:	lsl	r3, r3, #3
   55f5c:	add	r3, r1, r3
   55f60:	ldr	r3, [r3, #8]
   55f64:	cmp	r3, #0
   55f68:	bne	55f74 <__assert_fail@plt+0x43888>
   55f6c:	mov	r3, #12
   55f70:	b	56028 <__assert_fail@plt+0x4393c>
   55f74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55f78:	ldr	r1, [r3, #8]
   55f7c:	ldr	r2, [fp, #-16]
   55f80:	mov	r3, r2
   55f84:	lsl	r3, r3, #1
   55f88:	add	r3, r3, r2
   55f8c:	lsl	r3, r3, #3
   55f90:	add	r3, r1, r3
   55f94:	ldr	r0, [r3, #8]
   55f98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55f9c:	lsl	r3, r3, #3
   55fa0:	mov	r2, r3
   55fa4:	ldr	r1, [fp, #4]
   55fa8:	bl	120f8 <memcpy@plt>
   55fac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55fb0:	ldr	r1, [r3, #8]
   55fb4:	ldr	r2, [fp, #-16]
   55fb8:	mov	r3, r2
   55fbc:	lsl	r3, r3, #1
   55fc0:	add	r3, r3, r2
   55fc4:	lsl	r3, r3, #3
   55fc8:	add	r3, r1, r3
   55fcc:	ldr	r2, [r3, #8]
   55fd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55fd4:	lsl	r3, r3, #3
   55fd8:	add	r0, r2, r3
   55fdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   55fe0:	lsl	r3, r3, #3
   55fe4:	mov	r2, r3
   55fe8:	ldr	r1, [fp, #8]
   55fec:	bl	120f8 <memcpy@plt>
   55ff0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   55ff4:	ldr	r1, [r3, #8]
   55ff8:	ldr	r2, [fp, #-16]
   55ffc:	mov	r3, r2
   56000:	lsl	r3, r3, #1
   56004:	add	r3, r3, r2
   56008:	lsl	r3, r3, #3
   5600c:	add	r3, r1, r3
   56010:	add	r3, r3, #12
   56014:	ldr	r1, [fp, #12]
   56018:	mov	r0, r3
   5601c:	bl	47a70 <__assert_fail@plt+0x35384>
   56020:	str	r0, [fp, #-24]	; 0xffffffe8
   56024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56028:	mov	r0, r3
   5602c:	sub	sp, fp, #8
   56030:	ldr	r4, [sp]
   56034:	ldr	fp, [sp, #4]
   56038:	add	sp, sp, #8
   5603c:	pop	{pc}		; (ldr pc, [sp], #4)
   56040:	str	fp, [sp, #-8]!
   56044:	str	lr, [sp, #4]
   56048:	add	fp, sp, #4
   5604c:	sub	sp, sp, #24
   56050:	str	r0, [fp, #-16]
   56054:	str	r1, [fp, #-20]	; 0xffffffec
   56058:	str	r2, [fp, #-24]	; 0xffffffe8
   5605c:	str	r3, [fp, #-28]	; 0xffffffe4
   56060:	ldr	r3, [fp, #-16]
   56064:	cmp	r3, #0
   56068:	beq	5607c <__assert_fail@plt+0x43990>
   5606c:	ldr	r3, [fp, #-16]
   56070:	ldr	r3, [r3]
   56074:	cmp	r3, #0
   56078:	bne	56084 <__assert_fail@plt+0x43998>
   5607c:	mvn	r3, #0
   56080:	b	56210 <__assert_fail@plt+0x43b24>
   56084:	ldr	r3, [fp, #-16]
   56088:	ldr	r3, [r3]
   5608c:	sub	r2, r3, #1
   56090:	ldr	r3, [fp, #-16]
   56094:	str	r2, [r3]
   56098:	ldr	r3, [fp, #-16]
   5609c:	ldr	r3, [r3]
   560a0:	str	r3, [fp, #-8]
   560a4:	ldr	r3, [fp, #-16]
   560a8:	ldr	r1, [r3, #8]
   560ac:	ldr	r2, [fp, #-8]
   560b0:	mov	r3, r2
   560b4:	lsl	r3, r3, #1
   560b8:	add	r3, r3, r2
   560bc:	lsl	r3, r3, #3
   560c0:	add	r3, r1, r3
   560c4:	ldr	r2, [r3]
   560c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   560cc:	str	r2, [r3]
   560d0:	ldr	r3, [fp, #-16]
   560d4:	ldr	r1, [r3, #8]
   560d8:	ldr	r2, [fp, #-8]
   560dc:	mov	r3, r2
   560e0:	lsl	r3, r3, #1
   560e4:	add	r3, r3, r2
   560e8:	lsl	r3, r3, #3
   560ec:	add	r3, r1, r3
   560f0:	ldr	r1, [r3, #8]
   560f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   560f8:	lsl	r3, r3, #3
   560fc:	mov	r2, r3
   56100:	ldr	r0, [fp, #-28]	; 0xffffffe4
   56104:	bl	120f8 <memcpy@plt>
   56108:	ldr	r3, [fp, #-16]
   5610c:	ldr	r1, [r3, #8]
   56110:	ldr	r2, [fp, #-8]
   56114:	mov	r3, r2
   56118:	lsl	r3, r3, #1
   5611c:	add	r3, r3, r2
   56120:	lsl	r3, r3, #3
   56124:	add	r3, r1, r3
   56128:	ldr	r2, [r3, #8]
   5612c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56130:	lsl	r3, r3, #3
   56134:	add	r1, r2, r3
   56138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5613c:	lsl	r3, r3, #3
   56140:	mov	r2, r3
   56144:	ldr	r0, [fp, #4]
   56148:	bl	120f8 <memcpy@plt>
   5614c:	ldr	r3, [fp, #8]
   56150:	ldr	r3, [r3, #8]
   56154:	mov	r0, r3
   56158:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5615c:	ldr	r3, [fp, #-16]
   56160:	ldr	r1, [r3, #8]
   56164:	ldr	r2, [fp, #-8]
   56168:	mov	r3, r2
   5616c:	lsl	r3, r3, #1
   56170:	add	r3, r3, r2
   56174:	lsl	r3, r3, #3
   56178:	add	r3, r1, r3
   5617c:	ldr	r3, [r3, #8]
   56180:	mov	r0, r3
   56184:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56188:	ldr	r3, [fp, #-16]
   5618c:	ldr	r1, [r3, #8]
   56190:	ldr	r2, [fp, #-8]
   56194:	mov	r3, r2
   56198:	lsl	r3, r3, #1
   5619c:	add	r3, r3, r2
   561a0:	lsl	r3, r3, #3
   561a4:	add	r3, r1, r3
   561a8:	ldr	r2, [fp, #8]
   561ac:	mov	r0, r2
   561b0:	add	r1, r3, #12
   561b4:	ldrd	r2, [r1]
   561b8:	strd	r2, [r0]
   561bc:	ldr	r3, [r1, #8]
   561c0:	str	r3, [r0, #8]
   561c4:	ldr	r3, [fp, #-16]
   561c8:	ldr	r1, [r3, #8]
   561cc:	ldr	r2, [fp, #-8]
   561d0:	mov	r3, r2
   561d4:	lsl	r3, r3, #1
   561d8:	add	r3, r3, r2
   561dc:	lsl	r3, r3, #3
   561e0:	add	r3, r1, r3
   561e4:	ldr	r3, [r3, #4]
   561e8:	cmp	r3, #0
   561ec:	ldr	r3, [fp, #-16]
   561f0:	ldr	r1, [r3, #8]
   561f4:	ldr	r2, [fp, #-8]
   561f8:	mov	r3, r2
   561fc:	lsl	r3, r3, #1
   56200:	add	r3, r3, r2
   56204:	lsl	r3, r3, #3
   56208:	add	r3, r1, r3
   5620c:	ldr	r3, [r3, #4]
   56210:	mov	r0, r3
   56214:	sub	sp, fp, #4
   56218:	ldr	fp, [sp]
   5621c:	add	sp, sp, #4
   56220:	pop	{pc}		; (ldr pc, [sp], #4)
   56224:	push	{fp}		; (str fp, [sp, #-4]!)
   56228:	add	fp, sp, #0
   5622c:	sub	sp, sp, #12
   56230:	str	r0, [fp, #-8]
   56234:	str	r1, [fp, #-12]
   56238:	nop	{0}
   5623c:	add	sp, fp, #0
   56240:	pop	{fp}		; (ldr fp, [sp], #4)
   56244:	bx	lr
   56248:	str	fp, [sp, #-8]!
   5624c:	str	lr, [sp, #4]
   56250:	add	fp, sp, #4
   56254:	sub	sp, sp, #8
   56258:	str	r0, [fp, #-8]
   5625c:	ldr	r3, [fp, #-8]
   56260:	ldr	r2, [r3, #8]
   56264:	ldr	r3, [fp, #-8]
   56268:	add	r3, r3, #12
   5626c:	cmp	r2, r3
   56270:	beq	56284 <__assert_fail@plt+0x43b98>
   56274:	ldr	r3, [fp, #-8]
   56278:	ldr	r3, [r3, #8]
   5627c:	mov	r0, r3
   56280:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56284:	nop	{0}
   56288:	sub	sp, fp, #4
   5628c:	ldr	fp, [sp]
   56290:	add	sp, sp, #4
   56294:	pop	{pc}		; (ldr pc, [sp], #4)
   56298:	push	{fp}		; (str fp, [sp, #-4]!)
   5629c:	add	fp, sp, #0
   562a0:	sub	sp, sp, #12
   562a4:	str	r0, [fp, #-8]
   562a8:	ldr	r3, [fp, #-8]
   562ac:	mov	r2, #0
   562b0:	str	r2, [r3]
   562b4:	ldr	r3, [fp, #-8]
   562b8:	mov	r2, #16
   562bc:	str	r2, [r3, #4]
   562c0:	ldr	r3, [fp, #-8]
   562c4:	add	r2, r3, #12
   562c8:	ldr	r3, [fp, #-8]
   562cc:	str	r2, [r3, #8]
   562d0:	nop	{0}
   562d4:	add	sp, fp, #0
   562d8:	pop	{fp}		; (ldr fp, [sp], #4)
   562dc:	bx	lr
   562e0:	str	fp, [sp, #-8]!
   562e4:	str	lr, [sp, #4]
   562e8:	add	fp, sp, #4
   562ec:	sub	sp, sp, #8
   562f0:	str	r0, [fp, #-8]
   562f4:	ldr	r3, [fp, #-8]
   562f8:	ldr	r2, [r3, #8]
   562fc:	ldr	r3, [fp, #-8]
   56300:	ldr	r3, [r3]
   56304:	mov	r1, r3
   56308:	mov	r0, r2
   5630c:	bl	56224 <__assert_fail@plt+0x43b38>
   56310:	ldr	r0, [fp, #-8]
   56314:	bl	56248 <__assert_fail@plt+0x43b5c>
   56318:	ldr	r0, [fp, #-8]
   5631c:	bl	56298 <__assert_fail@plt+0x43bac>
   56320:	nop	{0}
   56324:	sub	sp, fp, #4
   56328:	ldr	fp, [sp]
   5632c:	add	sp, sp, #4
   56330:	pop	{pc}		; (ldr pc, [sp], #4)
   56334:	str	fp, [sp, #-8]!
   56338:	str	lr, [sp, #4]
   5633c:	add	fp, sp, #4
   56340:	sub	sp, sp, #8
   56344:	str	r0, [fp, #-8]
   56348:	ldr	r3, [fp, #-8]
   5634c:	ldr	r2, [r3, #8]
   56350:	ldr	r3, [fp, #-8]
   56354:	ldr	r3, [r3]
   56358:	mov	r1, r3
   5635c:	mov	r0, r2
   56360:	bl	56224 <__assert_fail@plt+0x43b38>
   56364:	ldr	r0, [fp, #-8]
   56368:	bl	56248 <__assert_fail@plt+0x43b5c>
   5636c:	ldr	r3, [fp, #-8]
   56370:	add	r2, r3, #12
   56374:	ldr	r3, [fp, #-8]
   56378:	str	r2, [r3, #8]
   5637c:	ldr	r3, [fp, #-8]
   56380:	mov	r2, #0
   56384:	str	r2, [r3]
   56388:	bl	44844 <__assert_fail@plt+0x32158>
   5638c:	mov	r2, r0
   56390:	ldr	r3, [fp, #-8]
   56394:	str	r2, [r3, #4]
   56398:	nop	{0}
   5639c:	sub	sp, fp, #4
   563a0:	ldr	fp, [sp]
   563a4:	add	sp, sp, #4
   563a8:	pop	{pc}		; (ldr pc, [sp], #4)
   563ac:	push	{fp}		; (str fp, [sp, #-4]!)
   563b0:	add	fp, sp, #0
   563b4:	sub	sp, sp, #12
   563b8:	str	r0, [fp, #-8]
   563bc:	ldr	r3, [fp, #-8]
   563c0:	ldr	r3, [r3, #8]
   563c4:	mov	r0, r3
   563c8:	add	sp, fp, #0
   563cc:	pop	{fp}		; (ldr fp, [sp], #4)
   563d0:	bx	lr
   563d4:	str	fp, [sp, #-8]!
   563d8:	str	lr, [sp, #4]
   563dc:	add	fp, sp, #4
   563e0:	sub	sp, sp, #16
   563e4:	str	r0, [fp, #-8]
   563e8:	sub	r3, fp, #16
   563ec:	stm	r3, {r1, r2}
   563f0:	ldr	r0, [fp, #-8]
   563f4:	ldr	r3, [fp, #-8]
   563f8:	add	r3, r3, #12
   563fc:	mov	r2, #8
   56400:	mov	r1, r3
   56404:	bl	609a0 <__assert_fail@plt+0x4e2b4>
   56408:	mov	r3, r0
   5640c:	eor	r3, r3, #1
   56410:	uxtb	r3, r3
   56414:	cmp	r3, #0
   56418:	beq	56428 <__assert_fail@plt+0x43d3c>
   5641c:	ldr	r0, [fp, #-8]
   56420:	bl	56334 <__assert_fail@plt+0x43c48>
   56424:	b	5645c <__assert_fail@plt+0x43d70>
   56428:	ldr	r3, [fp, #-8]
   5642c:	ldr	r2, [r3, #8]
   56430:	ldr	r3, [fp, #-8]
   56434:	ldr	r3, [r3]
   56438:	add	r0, r3, #1
   5643c:	ldr	r1, [fp, #-8]
   56440:	str	r0, [r1]
   56444:	lsl	r3, r3, #3
   56448:	add	r3, r2, r3
   5644c:	mov	r1, r3
   56450:	sub	r3, fp, #16
   56454:	ldrd	r2, [r3]
   56458:	strd	r2, [r1]
   5645c:	sub	sp, fp, #4
   56460:	ldr	fp, [sp]
   56464:	add	sp, sp, #4
   56468:	pop	{pc}		; (ldr pc, [sp], #4)
   5646c:	push	{fp}		; (str fp, [sp, #-4]!)
   56470:	add	fp, sp, #0
   56474:	sub	sp, sp, #20
   56478:	str	r0, [fp, #-16]
   5647c:	ldr	r3, [fp, #-16]
   56480:	ldr	r2, [r3, #8]
   56484:	ldr	r3, [fp, #-16]
   56488:	ldr	r3, [r3]
   5648c:	lsl	r3, r3, #3
   56490:	add	r3, r2, r3
   56494:	str	r3, [fp, #-8]
   56498:	ldr	r3, [fp, #-16]
   5649c:	ldr	r3, [r3]
   564a0:	add	r2, r3, #1
   564a4:	ldr	r3, [fp, #-16]
   564a8:	str	r2, [r3]
   564ac:	ldr	r3, [fp, #-8]
   564b0:	mov	r0, r3
   564b4:	add	sp, fp, #0
   564b8:	pop	{fp}		; (ldr fp, [sp], #4)
   564bc:	bx	lr
   564c0:	str	fp, [sp, #-8]!
   564c4:	str	lr, [sp, #4]
   564c8:	add	fp, sp, #4
   564cc:	sub	sp, sp, #8
   564d0:	str	r0, [fp, #-8]
   564d4:	ldr	r0, [fp, #-8]
   564d8:	ldr	r3, [fp, #-8]
   564dc:	add	r3, r3, #12
   564e0:	mov	r2, #8
   564e4:	mov	r1, r3
   564e8:	bl	609a0 <__assert_fail@plt+0x4e2b4>
   564ec:	mov	r3, r0
   564f0:	eor	r3, r3, #1
   564f4:	uxtb	r3, r3
   564f8:	cmp	r3, #0
   564fc:	beq	56510 <__assert_fail@plt+0x43e24>
   56500:	ldr	r0, [fp, #-8]
   56504:	bl	56334 <__assert_fail@plt+0x43c48>
   56508:	mov	r3, #0
   5650c:	b	5651c <__assert_fail@plt+0x43e30>
   56510:	ldr	r0, [fp, #-8]
   56514:	bl	5646c <__assert_fail@plt+0x43d80>
   56518:	mov	r3, r0
   5651c:	mov	r0, r3
   56520:	sub	sp, fp, #4
   56524:	ldr	fp, [sp]
   56528:	add	sp, sp, #4
   5652c:	pop	{pc}		; (ldr pc, [sp], #4)
   56530:	str	fp, [sp, #-8]!
   56534:	str	lr, [sp, #4]
   56538:	add	fp, sp, #4
   5653c:	sub	sp, sp, #16
   56540:	str	r0, [fp, #-16]
   56544:	str	r1, [fp, #-20]	; 0xffffffec
   56548:	ldr	r3, [fp, #-16]
   5654c:	ldr	r3, [r3]
   56550:	ldr	r2, [fp, #-20]	; 0xffffffec
   56554:	cmp	r2, r3
   56558:	bls	565a0 <__assert_fail@plt+0x43eb4>
   5655c:	ldr	r0, [fp, #-16]
   56560:	ldr	r3, [fp, #-16]
   56564:	add	r2, r3, #12
   56568:	mov	r3, #8
   5656c:	ldr	r1, [fp, #-20]	; 0xffffffec
   56570:	bl	60d24 <__assert_fail@plt+0x4e638>
   56574:	mov	r3, r0
   56578:	strb	r3, [fp, #-5]
   5657c:	ldrb	r3, [fp, #-5]
   56580:	eor	r3, r3, #1
   56584:	uxtb	r3, r3
   56588:	cmp	r3, #0
   5658c:	beq	56598 <__assert_fail@plt+0x43eac>
   56590:	ldr	r0, [fp, #-16]
   56594:	bl	56334 <__assert_fail@plt+0x43c48>
   56598:	ldrb	r3, [fp, #-5]
   5659c:	b	565dc <__assert_fail@plt+0x43ef0>
   565a0:	ldr	r3, [fp, #-16]
   565a4:	ldr	r2, [r3, #8]
   565a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   565ac:	lsl	r3, r3, #3
   565b0:	add	r0, r2, r3
   565b4:	ldr	r3, [fp, #-16]
   565b8:	ldr	r2, [r3]
   565bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   565c0:	sub	r3, r2, r3
   565c4:	mov	r1, r3
   565c8:	bl	56224 <__assert_fail@plt+0x43b38>
   565cc:	ldr	r3, [fp, #-16]
   565d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   565d4:	str	r2, [r3]
   565d8:	mov	r3, #1
   565dc:	mov	r0, r3
   565e0:	sub	sp, fp, #4
   565e4:	ldr	fp, [sp]
   565e8:	add	sp, sp, #4
   565ec:	pop	{pc}		; (ldr pc, [sp], #4)
   565f0:	push	{fp}		; (str fp, [sp, #-4]!)
   565f4:	add	fp, sp, #0
   565f8:	sub	sp, sp, #20
   565fc:	str	r0, [fp, #-16]
   56600:	ldr	r3, [fp, #-16]
   56604:	ldr	r3, [r3]
   56608:	cmp	r3, #0
   5660c:	beq	5662c <__assert_fail@plt+0x43f40>
   56610:	ldr	r3, [fp, #-16]
   56614:	ldr	r3, [r3]
   56618:	sub	r3, r3, #1
   5661c:	str	r3, [fp, #-8]
   56620:	ldr	r3, [fp, #-16]
   56624:	ldr	r2, [fp, #-8]
   56628:	str	r2, [r3]
   5662c:	nop	{0}
   56630:	add	sp, fp, #0
   56634:	pop	{fp}		; (ldr fp, [sp], #4)
   56638:	bx	lr
   5663c:	str	fp, [sp, #-8]!
   56640:	str	lr, [sp, #4]
   56644:	add	fp, sp, #4
   56648:	sub	sp, sp, #8
   5664c:	str	r0, [fp, #-8]
   56650:	ldr	r3, [fp, #-8]
   56654:	ldr	r2, [r3, #8]
   56658:	ldr	r3, [fp, #-8]
   5665c:	ldr	r3, [r3]
   56660:	mov	r1, r3
   56664:	mov	r0, r2
   56668:	bl	56224 <__assert_fail@plt+0x43b38>
   5666c:	ldr	r3, [fp, #-8]
   56670:	mov	r2, #0
   56674:	str	r2, [r3]
   56678:	nop	{0}
   5667c:	sub	sp, fp, #4
   56680:	ldr	fp, [sp]
   56684:	add	sp, sp, #4
   56688:	pop	{pc}		; (ldr pc, [sp], #4)
   5668c:	str	fp, [sp, #-8]!
   56690:	str	lr, [sp, #4]
   56694:	add	fp, sp, #4
   56698:	sub	sp, sp, #16
   5669c:	str	r0, [fp, #-16]
   566a0:	str	r1, [fp, #-20]	; 0xffffffec
   566a4:	ldr	r0, [fp, #-16]
   566a8:	ldr	r3, [fp, #-16]
   566ac:	add	r1, r3, #12
   566b0:	sub	r3, fp, #12
   566b4:	mov	r2, #8
   566b8:	bl	60bdc <__assert_fail@plt+0x4e4f0>
   566bc:	mov	r3, r0
   566c0:	cmp	r3, #0
   566c4:	beq	566f0 <__assert_fail@plt+0x44004>
   566c8:	ldr	r0, [fp, #-16]
   566cc:	bl	56298 <__assert_fail@plt+0x43bac>
   566d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   566d4:	cmp	r3, #0
   566d8:	beq	566e8 <__assert_fail@plt+0x43ffc>
   566dc:	ldr	r2, [fp, #-8]
   566e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   566e4:	str	r2, [r3]
   566e8:	ldr	r3, [fp, #-12]
   566ec:	b	5670c <__assert_fail@plt+0x44020>
   566f0:	ldr	r0, [fp, #-16]
   566f4:	bl	562e0 <__assert_fail@plt+0x43bf4>
   566f8:	bl	12404 <__errno_location@plt>
   566fc:	mov	r2, r0
   56700:	mov	r3, #12
   56704:	str	r3, [r2]
   56708:	mov	r3, #0
   5670c:	mov	r0, r3
   56710:	sub	sp, fp, #4
   56714:	ldr	fp, [sp]
   56718:	add	sp, sp, #4
   5671c:	pop	{pc}		; (ldr pc, [sp], #4)
   56720:	str	fp, [sp, #-8]!
   56724:	str	lr, [sp, #4]
   56728:	add	fp, sp, #4
   5672c:	sub	sp, sp, #224	; 0xe0
   56730:	str	r0, [fp, #-200]	; 0xffffff38
   56734:	str	r1, [fp, #-204]	; 0xffffff34
   56738:	str	r2, [fp, #-208]	; 0xffffff30
   5673c:	str	r3, [fp, #-212]	; 0xffffff2c
   56740:	ldr	r3, [fp, #-200]	; 0xffffff38
   56744:	ldr	r3, [r3]
   56748:	str	r3, [fp, #-20]	; 0xffffffec
   5674c:	mov	r3, #0
   56750:	str	r3, [fp, #-52]	; 0xffffffcc
   56754:	mov	r3, #2
   56758:	str	r3, [fp, #-48]	; 0xffffffd0
   5675c:	mov	r3, #0
   56760:	str	r3, [fp, #-44]	; 0xffffffd4
   56764:	sub	r3, fp, #192	; 0xc0
   56768:	mov	r0, r3
   5676c:	bl	56298 <__assert_fail@plt+0x43bac>
   56770:	ldr	r3, [fp, #-208]	; 0xffffff30
   56774:	cmp	r3, #1
   56778:	ldr	r3, [fp, #-204]	; 0xffffff34
   5677c:	ldr	r3, [r3, #100]	; 0x64
   56780:	cmp	r3, #0
   56784:	ldrb	r3, [fp, #4]
   56788:	cmp	r3, #0
   5678c:	beq	567e4 <__assert_fail@plt+0x440f8>
   56790:	sub	r3, fp, #52	; 0x34
   56794:	str	r3, [fp, #-12]
   56798:	ldr	r3, [fp, #-12]
   5679c:	ldr	r3, [r3, #4]
   567a0:	mov	r2, r3
   567a4:	mov	r3, r2
   567a8:	lsl	r3, r3, #1
   567ac:	add	r3, r3, r2
   567b0:	lsl	r3, r3, #3
   567b4:	mov	r0, r3
   567b8:	bl	43510 <__assert_fail@plt+0x30e24>
   567bc:	mov	r3, r0
   567c0:	mov	r2, r3
   567c4:	ldr	r3, [fp, #-12]
   567c8:	str	r2, [r3, #8]
   567cc:	ldr	r3, [fp, #-12]
   567d0:	ldr	r3, [r3, #8]
   567d4:	cmp	r3, #0
   567d8:	bne	567ec <__assert_fail@plt+0x44100>
   567dc:	mov	r3, #12
   567e0:	b	56af0 <__assert_fail@plt+0x44404>
   567e4:	mov	r3, #0
   567e8:	str	r3, [fp, #-12]
   567ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   567f0:	ldr	r3, [r3, #72]	; 0x48
   567f4:	str	r3, [fp, #-8]
   567f8:	sub	r3, fp, #40	; 0x28
   567fc:	mov	r2, #12
   56800:	mov	r1, #0
   56804:	mov	r0, r3
   56808:	bl	12434 <memset@plt>
   5680c:	sub	r3, fp, #192	; 0xc0
   56810:	ldr	r1, [fp, #-208]	; 0xffffff30
   56814:	mov	r0, r3
   56818:	bl	56530 <__assert_fail@plt+0x43e44>
   5681c:	mov	r3, r0
   56820:	eor	r3, r3, #1
   56824:	uxtb	r3, r3
   56828:	cmp	r3, #0
   5682c:	beq	5684c <__assert_fail@plt+0x44160>
   56830:	sub	r3, fp, #192	; 0xc0
   56834:	mov	r0, r3
   56838:	bl	562e0 <__assert_fail@plt+0x43bf4>
   5683c:	ldr	r0, [fp, #-12]
   56840:	bl	56b04 <__assert_fail@plt+0x44418>
   56844:	mov	r3, #12
   56848:	b	56af0 <__assert_fail@plt+0x44404>
   5684c:	sub	r3, fp, #192	; 0xc0
   56850:	mov	r0, r3
   56854:	bl	563ac <__assert_fail@plt+0x43cc0>
   56858:	str	r0, [fp, #-24]	; 0xffffffe8
   5685c:	ldr	r3, [fp, #-208]	; 0xffffff30
   56860:	lsl	r3, r3, #3
   56864:	mov	r2, r3
   56868:	ldr	r1, [fp, #-212]	; 0xffffff2c
   5686c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   56870:	bl	120f8 <memcpy@plt>
   56874:	ldr	r3, [fp, #-212]	; 0xffffff2c
   56878:	ldr	r3, [r3]
   5687c:	str	r3, [fp, #-28]	; 0xffffffe4
   56880:	b	56ab8 <__assert_fail@plt+0x443cc>
   56884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56888:	ldr	r2, [fp, #-208]	; 0xffffff30
   5688c:	str	r2, [sp, #4]
   56890:	str	r3, [sp]
   56894:	ldr	r3, [fp, #-8]
   56898:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5689c:	ldr	r1, [fp, #-212]	; 0xffffff2c
   568a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   568a4:	bl	56bd0 <__assert_fail@plt+0x444e4>
   568a8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   568ac:	ldr	r2, [r3, #4]
   568b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   568b4:	cmp	r2, r3
   568b8:	bne	568d0 <__assert_fail@plt+0x441e4>
   568bc:	ldr	r3, [fp, #-204]	; 0xffffff34
   568c0:	ldr	r3, [r3, #96]	; 0x60
   568c4:	ldr	r2, [fp, #-8]
   568c8:	cmp	r2, r3
   568cc:	beq	568f8 <__assert_fail@plt+0x4420c>
   568d0:	ldr	r3, [fp, #-12]
   568d4:	cmp	r3, #0
   568d8:	beq	569cc <__assert_fail@plt+0x442e0>
   568dc:	sub	r3, fp, #40	; 0x28
   568e0:	ldr	r1, [fp, #-8]
   568e4:	mov	r0, r3
   568e8:	bl	48c24 <__assert_fail@plt+0x36538>
   568ec:	mov	r3, r0
   568f0:	cmp	r3, #0
   568f4:	beq	569cc <__assert_fail@plt+0x442e0>
   568f8:	mvn	r3, #0
   568fc:	str	r3, [fp, #-8]
   56900:	ldr	r3, [fp, #-12]
   56904:	cmp	r3, #0
   56908:	beq	56998 <__assert_fail@plt+0x442ac>
   5690c:	mov	r3, #0
   56910:	str	r3, [fp, #-16]
   56914:	b	56988 <__assert_fail@plt+0x4429c>
   56918:	ldr	r3, [fp, #-16]
   5691c:	lsl	r3, r3, #3
   56920:	ldr	r2, [fp, #-212]	; 0xffffff2c
   56924:	add	r3, r2, r3
   56928:	ldr	r3, [r3]
   5692c:	cmp	r3, #0
   56930:	blt	5697c <__assert_fail@plt+0x44290>
   56934:	ldr	r3, [fp, #-16]
   56938:	lsl	r3, r3, #3
   5693c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   56940:	add	r3, r2, r3
   56944:	ldr	r3, [r3, #4]
   56948:	cmn	r3, #1
   5694c:	bne	5697c <__assert_fail@plt+0x44290>
   56950:	ldr	r2, [fp, #-208]	; 0xffffff30
   56954:	sub	r1, fp, #28
   56958:	sub	r3, fp, #40	; 0x28
   5695c:	str	r3, [sp, #4]
   56960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56964:	str	r3, [sp]
   56968:	ldr	r3, [fp, #-212]	; 0xffffff2c
   5696c:	ldr	r0, [fp, #-12]
   56970:	bl	56040 <__assert_fail@plt+0x43954>
   56974:	str	r0, [fp, #-8]
   56978:	b	56998 <__assert_fail@plt+0x442ac>
   5697c:	ldr	r3, [fp, #-16]
   56980:	add	r3, r3, #1
   56984:	str	r3, [fp, #-16]
   56988:	ldr	r3, [fp, #-16]
   5698c:	ldr	r2, [fp, #-208]	; 0xffffff30
   56990:	cmp	r2, r3
   56994:	bhi	56918 <__assert_fail@plt+0x4422c>
   56998:	ldr	r3, [fp, #-8]
   5699c:	cmp	r3, #0
   569a0:	bge	569cc <__assert_fail@plt+0x442e0>
   569a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   569a8:	mov	r0, r3
   569ac:	bl	3fe0c <__assert_fail@plt+0x2d720>
   569b0:	sub	r3, fp, #192	; 0xc0
   569b4:	mov	r0, r3
   569b8:	bl	562e0 <__assert_fail@plt+0x43bf4>
   569bc:	ldr	r0, [fp, #-12]
   569c0:	bl	56b04 <__assert_fail@plt+0x44418>
   569c4:	mov	r3, r0
   569c8:	b	56af0 <__assert_fail@plt+0x44404>
   569cc:	ldr	r1, [fp, #-208]	; 0xffffff30
   569d0:	ldr	r3, [fp, #-12]
   569d4:	str	r3, [sp, #12]
   569d8:	sub	r3, fp, #40	; 0x28
   569dc:	str	r3, [sp, #8]
   569e0:	ldr	r3, [fp, #-8]
   569e4:	str	r3, [sp, #4]
   569e8:	sub	r3, fp, #28
   569ec:	str	r3, [sp]
   569f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   569f4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   569f8:	ldr	r0, [fp, #-204]	; 0xffffff34
   569fc:	bl	55874 <__assert_fail@plt+0x43188>
   56a00:	str	r0, [fp, #-8]
   56a04:	ldr	r3, [fp, #-8]
   56a08:	lsr	r3, r3, #31
   56a0c:	uxtb	r3, r3
   56a10:	cmp	r3, #0
   56a14:	beq	56ab8 <__assert_fail@plt+0x443cc>
   56a18:	ldr	r3, [fp, #-8]
   56a1c:	cmn	r3, #2
   56a20:	moveq	r3, #1
   56a24:	movne	r3, #0
   56a28:	uxtb	r3, r3
   56a2c:	cmp	r3, #0
   56a30:	beq	56a5c <__assert_fail@plt+0x44370>
   56a34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56a38:	mov	r0, r3
   56a3c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56a40:	sub	r3, fp, #192	; 0xc0
   56a44:	mov	r0, r3
   56a48:	bl	562e0 <__assert_fail@plt+0x43bf4>
   56a4c:	ldr	r0, [fp, #-12]
   56a50:	bl	56b04 <__assert_fail@plt+0x44418>
   56a54:	mov	r3, #12
   56a58:	b	56af0 <__assert_fail@plt+0x44404>
   56a5c:	ldr	r2, [fp, #-208]	; 0xffffff30
   56a60:	sub	r1, fp, #28
   56a64:	sub	r3, fp, #40	; 0x28
   56a68:	str	r3, [sp, #4]
   56a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56a70:	str	r3, [sp]
   56a74:	ldr	r3, [fp, #-212]	; 0xffffff2c
   56a78:	ldr	r0, [fp, #-12]
   56a7c:	bl	56040 <__assert_fail@plt+0x43954>
   56a80:	str	r0, [fp, #-8]
   56a84:	ldr	r3, [fp, #-8]
   56a88:	cmp	r3, #0
   56a8c:	bge	56ab8 <__assert_fail@plt+0x443cc>
   56a90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56a94:	mov	r0, r3
   56a98:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56a9c:	sub	r3, fp, #192	; 0xc0
   56aa0:	mov	r0, r3
   56aa4:	bl	562e0 <__assert_fail@plt+0x43bf4>
   56aa8:	ldr	r0, [fp, #-12]
   56aac:	bl	56b04 <__assert_fail@plt+0x44418>
   56ab0:	mov	r3, #1
   56ab4:	b	56af0 <__assert_fail@plt+0x44404>
   56ab8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   56abc:	ldr	r2, [r3, #4]
   56ac0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   56ac4:	cmp	r2, r3
   56ac8:	bge	56884 <__assert_fail@plt+0x44198>
   56acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56ad0:	mov	r0, r3
   56ad4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56ad8:	sub	r3, fp, #192	; 0xc0
   56adc:	mov	r0, r3
   56ae0:	bl	562e0 <__assert_fail@plt+0x43bf4>
   56ae4:	ldr	r0, [fp, #-12]
   56ae8:	bl	56b04 <__assert_fail@plt+0x44418>
   56aec:	mov	r3, r0
   56af0:	mov	r0, r3
   56af4:	sub	sp, fp, #4
   56af8:	ldr	fp, [sp]
   56afc:	add	sp, sp, #4
   56b00:	pop	{pc}		; (ldr pc, [sp], #4)
   56b04:	str	fp, [sp, #-8]!
   56b08:	str	lr, [sp, #4]
   56b0c:	add	fp, sp, #4
   56b10:	sub	sp, sp, #16
   56b14:	str	r0, [fp, #-16]
   56b18:	ldr	r3, [fp, #-16]
   56b1c:	cmp	r3, #0
   56b20:	beq	56bb8 <__assert_fail@plt+0x444cc>
   56b24:	mov	r3, #0
   56b28:	str	r3, [fp, #-8]
   56b2c:	b	56b94 <__assert_fail@plt+0x444a8>
   56b30:	ldr	r3, [fp, #-16]
   56b34:	ldr	r1, [r3, #8]
   56b38:	ldr	r2, [fp, #-8]
   56b3c:	mov	r3, r2
   56b40:	lsl	r3, r3, #1
   56b44:	add	r3, r3, r2
   56b48:	lsl	r3, r3, #3
   56b4c:	add	r3, r1, r3
   56b50:	ldr	r3, [r3, #20]
   56b54:	mov	r0, r3
   56b58:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56b5c:	ldr	r3, [fp, #-16]
   56b60:	ldr	r1, [r3, #8]
   56b64:	ldr	r2, [fp, #-8]
   56b68:	mov	r3, r2
   56b6c:	lsl	r3, r3, #1
   56b70:	add	r3, r3, r2
   56b74:	lsl	r3, r3, #3
   56b78:	add	r3, r1, r3
   56b7c:	ldr	r3, [r3, #8]
   56b80:	mov	r0, r3
   56b84:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56b88:	ldr	r3, [fp, #-8]
   56b8c:	add	r3, r3, #1
   56b90:	str	r3, [fp, #-8]
   56b94:	ldr	r3, [fp, #-16]
   56b98:	ldr	r3, [r3]
   56b9c:	ldr	r2, [fp, #-8]
   56ba0:	cmp	r2, r3
   56ba4:	blt	56b30 <__assert_fail@plt+0x44444>
   56ba8:	ldr	r3, [fp, #-16]
   56bac:	ldr	r3, [r3, #8]
   56bb0:	mov	r0, r3
   56bb4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56bb8:	mov	r3, #0
   56bbc:	mov	r0, r3
   56bc0:	sub	sp, fp, #4
   56bc4:	ldr	fp, [sp]
   56bc8:	add	sp, sp, #4
   56bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   56bd0:	str	fp, [sp, #-8]!
   56bd4:	str	lr, [sp, #4]
   56bd8:	add	fp, sp, #4
   56bdc:	sub	sp, sp, #32
   56be0:	str	r0, [fp, #-24]	; 0xffffffe8
   56be4:	str	r1, [fp, #-28]	; 0xffffffe4
   56be8:	str	r2, [fp, #-32]	; 0xffffffe0
   56bec:	str	r3, [fp, #-36]	; 0xffffffdc
   56bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56bf4:	ldr	r2, [r3]
   56bf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56bfc:	lsl	r3, r3, #3
   56c00:	add	r3, r2, r3
   56c04:	ldrb	r3, [r3, #4]
   56c08:	str	r3, [fp, #-8]
   56c0c:	ldr	r3, [fp, #-8]
   56c10:	cmp	r3, #8
   56c14:	bne	56c7c <__assert_fail@plt+0x44590>
   56c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56c1c:	ldr	r2, [r3]
   56c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56c24:	lsl	r3, r3, #3
   56c28:	add	r3, r2, r3
   56c2c:	ldr	r3, [r3]
   56c30:	add	r3, r3, #1
   56c34:	str	r3, [fp, #-12]
   56c38:	ldr	r2, [fp, #-12]
   56c3c:	ldr	r3, [fp, #8]
   56c40:	cmp	r2, r3
   56c44:	bge	56d84 <__assert_fail@plt+0x44698>
   56c48:	ldr	r3, [fp, #-12]
   56c4c:	lsl	r3, r3, #3
   56c50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56c54:	add	r3, r2, r3
   56c58:	ldr	r2, [fp, #4]
   56c5c:	str	r2, [r3]
   56c60:	ldr	r3, [fp, #-12]
   56c64:	lsl	r3, r3, #3
   56c68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56c6c:	add	r3, r2, r3
   56c70:	mvn	r2, #0
   56c74:	str	r2, [r3, #4]
   56c78:	b	56d84 <__assert_fail@plt+0x44698>
   56c7c:	ldr	r3, [fp, #-8]
   56c80:	cmp	r3, #9
   56c84:	bne	56d84 <__assert_fail@plt+0x44698>
   56c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56c8c:	ldr	r2, [r3]
   56c90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56c94:	lsl	r3, r3, #3
   56c98:	add	r3, r2, r3
   56c9c:	ldr	r3, [r3]
   56ca0:	add	r3, r3, #1
   56ca4:	str	r3, [fp, #-16]
   56ca8:	ldr	r2, [fp, #-16]
   56cac:	ldr	r3, [fp, #8]
   56cb0:	cmp	r2, r3
   56cb4:	bge	56d84 <__assert_fail@plt+0x44698>
   56cb8:	ldr	r3, [fp, #-16]
   56cbc:	lsl	r3, r3, #3
   56cc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56cc4:	add	r3, r2, r3
   56cc8:	ldr	r3, [r3]
   56ccc:	ldr	r2, [fp, #4]
   56cd0:	cmp	r2, r3
   56cd4:	ble	56d0c <__assert_fail@plt+0x44620>
   56cd8:	ldr	r3, [fp, #-16]
   56cdc:	lsl	r3, r3, #3
   56ce0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56ce4:	add	r3, r2, r3
   56ce8:	ldr	r2, [fp, #4]
   56cec:	str	r2, [r3, #4]
   56cf0:	ldr	r3, [fp, #8]
   56cf4:	lsl	r3, r3, #3
   56cf8:	mov	r2, r3
   56cfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   56d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56d04:	bl	120f8 <memcpy@plt>
   56d08:	b	56d84 <__assert_fail@plt+0x44698>
   56d0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   56d10:	ldr	r2, [r3]
   56d14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56d18:	lsl	r3, r3, #3
   56d1c:	add	r3, r2, r3
   56d20:	ldrb	r3, [r3, #6]
   56d24:	and	r3, r3, #8
   56d28:	uxtb	r3, r3
   56d2c:	cmp	r3, #0
   56d30:	beq	56d6c <__assert_fail@plt+0x44680>
   56d34:	ldr	r3, [fp, #-16]
   56d38:	lsl	r3, r3, #3
   56d3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   56d40:	add	r3, r2, r3
   56d44:	ldr	r3, [r3]
   56d48:	cmn	r3, #1
   56d4c:	beq	56d6c <__assert_fail@plt+0x44680>
   56d50:	ldr	r3, [fp, #8]
   56d54:	lsl	r3, r3, #3
   56d58:	mov	r2, r3
   56d5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   56d60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   56d64:	bl	120f8 <memcpy@plt>
   56d68:	b	56d84 <__assert_fail@plt+0x44698>
   56d6c:	ldr	r3, [fp, #-16]
   56d70:	lsl	r3, r3, #3
   56d74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   56d78:	add	r3, r2, r3
   56d7c:	ldr	r2, [fp, #4]
   56d80:	str	r2, [r3, #4]
   56d84:	nop	{0}
   56d88:	sub	sp, fp, #4
   56d8c:	ldr	fp, [sp]
   56d90:	add	sp, sp, #4
   56d94:	pop	{pc}		; (ldr pc, [sp], #4)
   56d98:	str	fp, [sp, #-8]!
   56d9c:	str	lr, [sp, #4]
   56da0:	add	fp, sp, #4
   56da4:	sub	sp, sp, #32
   56da8:	str	r0, [fp, #-32]	; 0xffffffe0
   56dac:	str	r1, [fp, #-36]	; 0xffffffdc
   56db0:	mov	r3, #0
   56db4:	str	r3, [fp, #-12]
   56db8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56dbc:	ldr	r3, [r3, #12]
   56dc0:	str	r3, [fp, #-16]
   56dc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56dc8:	ldr	r3, [r3, #100]	; 0x64
   56dcc:	cmp	r3, #0
   56dd0:	beq	56df4 <__assert_fail@plt+0x44708>
   56dd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56dd8:	ldr	r2, [r3, #100]	; 0x64
   56ddc:	ldr	r3, [fp, #-16]
   56de0:	lsl	r3, r3, #2
   56de4:	add	r3, r2, r3
   56de8:	ldr	r3, [r3]
   56dec:	cmp	r3, #0
   56df0:	bne	56df4 <__assert_fail@plt+0x44708>
   56df4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56df8:	ldr	r2, [r3, #8]
   56dfc:	sub	r3, fp, #28
   56e00:	mov	r1, r2
   56e04:	mov	r0, r3
   56e08:	bl	478a4 <__assert_fail@plt+0x351b8>
   56e0c:	str	r0, [fp, #-8]
   56e10:	ldr	r3, [fp, #-8]
   56e14:	cmp	r3, #0
   56e18:	movne	r3, #1
   56e1c:	moveq	r3, #0
   56e20:	uxtb	r3, r3
   56e24:	cmp	r3, #0
   56e28:	beq	56e34 <__assert_fail@plt+0x44748>
   56e2c:	ldr	r3, [fp, #-8]
   56e30:	b	56fbc <__assert_fail@plt+0x448d0>
   56e34:	sub	r3, fp, #28
   56e38:	ldr	r2, [fp, #-16]
   56e3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56e44:	bl	57510 <__assert_fail@plt+0x44e24>
   56e48:	str	r0, [fp, #-8]
   56e4c:	ldr	r3, [fp, #-8]
   56e50:	cmp	r3, #0
   56e54:	movne	r3, #1
   56e58:	moveq	r3, #0
   56e5c:	uxtb	r3, r3
   56e60:	cmp	r3, #0
   56e64:	bne	56f98 <__assert_fail@plt+0x448ac>
   56e68:	b	56f80 <__assert_fail@plt+0x44894>
   56e6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56e70:	ldr	r2, [r3]
   56e74:	ldr	r3, [fp, #-16]
   56e78:	lsl	r3, r3, #2
   56e7c:	add	r3, r2, r3
   56e80:	ldr	r3, [r3]
   56e84:	cmp	r3, #0
   56e88:	bne	56e98 <__assert_fail@plt+0x447ac>
   56e8c:	ldr	r3, [fp, #-12]
   56e90:	add	r3, r3, #1
   56e94:	b	56e9c <__assert_fail@plt+0x447b0>
   56e98:	mov	r3, #0
   56e9c:	str	r3, [fp, #-12]
   56ea0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56ea4:	ldr	r3, [r3, #120]	; 0x78
   56ea8:	ldr	r2, [fp, #-12]
   56eac:	cmp	r2, r3
   56eb0:	ble	56ee4 <__assert_fail@plt+0x447f8>
   56eb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   56eb8:	ldr	r0, [r3]
   56ebc:	ldr	r3, [fp, #-16]
   56ec0:	lsl	r3, r3, #2
   56ec4:	mov	r2, r3
   56ec8:	mov	r1, #0
   56ecc:	bl	12434 <memset@plt>
   56ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   56ed4:	mov	r0, r3
   56ed8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56edc:	mov	r3, #0
   56ee0:	b	56fbc <__assert_fail@plt+0x448d0>
   56ee4:	mov	r3, #0
   56ee8:	str	r3, [fp, #-24]	; 0xffffffe8
   56eec:	ldr	r3, [fp, #-16]
   56ef0:	sub	r3, r3, #1
   56ef4:	str	r3, [fp, #-16]
   56ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   56efc:	ldr	r2, [r3, #100]	; 0x64
   56f00:	ldr	r3, [fp, #-16]
   56f04:	lsl	r3, r3, #2
   56f08:	add	r3, r2, r3
   56f0c:	ldr	r3, [r3]
   56f10:	cmp	r3, #0
   56f14:	beq	56f4c <__assert_fail@plt+0x44860>
   56f18:	sub	r3, fp, #28
   56f1c:	ldr	r2, [fp, #-16]
   56f20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56f28:	bl	56fd0 <__assert_fail@plt+0x448e4>
   56f2c:	str	r0, [fp, #-8]
   56f30:	ldr	r3, [fp, #-8]
   56f34:	cmp	r3, #0
   56f38:	movne	r3, #1
   56f3c:	moveq	r3, #0
   56f40:	uxtb	r3, r3
   56f44:	cmp	r3, #0
   56f48:	bne	56fa0 <__assert_fail@plt+0x448b4>
   56f4c:	sub	r3, fp, #28
   56f50:	ldr	r2, [fp, #-16]
   56f54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   56f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   56f5c:	bl	57510 <__assert_fail@plt+0x44e24>
   56f60:	str	r0, [fp, #-8]
   56f64:	ldr	r3, [fp, #-8]
   56f68:	cmp	r3, #0
   56f6c:	movne	r3, #1
   56f70:	moveq	r3, #0
   56f74:	uxtb	r3, r3
   56f78:	cmp	r3, #0
   56f7c:	bne	56fa8 <__assert_fail@plt+0x448bc>
   56f80:	ldr	r3, [fp, #-16]
   56f84:	cmp	r3, #0
   56f88:	bgt	56e6c <__assert_fail@plt+0x44780>
   56f8c:	mov	r3, #0
   56f90:	str	r3, [fp, #-8]
   56f94:	b	56fac <__assert_fail@plt+0x448c0>
   56f98:	nop	{0}
   56f9c:	b	56fac <__assert_fail@plt+0x448c0>
   56fa0:	nop	{0}
   56fa4:	b	56fac <__assert_fail@plt+0x448c0>
   56fa8:	nop	{0}
   56fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   56fb0:	mov	r0, r3
   56fb4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   56fb8:	ldr	r3, [fp, #-8]
   56fbc:	mov	r0, r3
   56fc0:	sub	sp, fp, #4
   56fc4:	ldr	fp, [sp]
   56fc8:	add	sp, sp, #4
   56fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   56fd0:	str	fp, [sp, #-8]!
   56fd4:	str	lr, [sp, #4]
   56fd8:	add	fp, sp, #4
   56fdc:	sub	sp, sp, #56	; 0x38
   56fe0:	str	r0, [fp, #-40]	; 0xffffffd8
   56fe4:	str	r1, [fp, #-44]	; 0xffffffd4
   56fe8:	str	r2, [fp, #-48]	; 0xffffffd0
   56fec:	str	r3, [fp, #-52]	; 0xffffffcc
   56ff0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   56ff4:	ldr	r3, [r3, #84]	; 0x54
   56ff8:	str	r3, [fp, #-16]
   56ffc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57000:	ldr	r2, [r3, #100]	; 0x64
   57004:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57008:	lsl	r3, r3, #2
   5700c:	add	r3, r2, r3
   57010:	ldr	r3, [r3]
   57014:	add	r3, r3, #16
   57018:	str	r3, [fp, #-20]	; 0xffffffec
   5701c:	mov	r3, #0
   57020:	str	r3, [fp, #-8]
   57024:	b	57228 <__assert_fail@plt+0x44b3c>
   57028:	ldr	r3, [fp, #-20]	; 0xffffffec
   5702c:	ldr	r2, [r3, #8]
   57030:	ldr	r3, [fp, #-8]
   57034:	lsl	r3, r3, #2
   57038:	add	r3, r2, r3
   5703c:	ldr	r3, [r3]
   57040:	str	r3, [fp, #-24]	; 0xffffffe8
   57044:	mov	r3, #0
   57048:	str	r3, [fp, #-12]
   5704c:	ldr	r3, [fp, #-16]
   57050:	ldr	r2, [r3]
   57054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57058:	lsl	r3, r3, #3
   5705c:	add	r3, r2, r3
   57060:	ldrb	r3, [r3, #4]
   57064:	and	r3, r3, #8
   57068:	cmp	r3, #0
   5706c:	ldr	r3, [fp, #-16]
   57070:	ldr	r2, [r3]
   57074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57078:	lsl	r3, r3, #3
   5707c:	add	r3, r2, r3
   57080:	ldrb	r3, [r3, #6]
   57084:	and	r3, r3, #16
   57088:	uxtb	r3, r3
   5708c:	cmp	r3, #0
   57090:	beq	570b8 <__assert_fail@plt+0x449cc>
   57094:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57098:	ldr	r3, [r3, #12]
   5709c:	str	r3, [sp]
   570a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   570a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   570a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   570ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   570b0:	bl	58a2c <__assert_fail@plt+0x46340>
   570b4:	str	r0, [fp, #-12]
   570b8:	ldr	r3, [fp, #-12]
   570bc:	cmp	r3, #0
   570c0:	bne	5716c <__assert_fail@plt+0x44a80>
   570c4:	ldr	r3, [fp, #-16]
   570c8:	ldr	r2, [r3]
   570cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   570d0:	lsl	r3, r3, #3
   570d4:	add	r3, r2, r3
   570d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   570dc:	mov	r1, r3
   570e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   570e4:	bl	5d164 <__assert_fail@plt+0x4aa78>
   570e8:	mov	r3, r0
   570ec:	cmp	r3, #0
   570f0:	beq	5716c <__assert_fail@plt+0x44a80>
   570f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   570f8:	ldr	r2, [r3]
   570fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57100:	add	r3, r3, #1
   57104:	lsl	r3, r3, #2
   57108:	add	r3, r2, r3
   5710c:	ldr	r3, [r3]
   57110:	cmp	r3, #0
   57114:	beq	5716c <__assert_fail@plt+0x44a80>
   57118:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5711c:	ldr	r2, [r3]
   57120:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57124:	add	r3, r3, #1
   57128:	lsl	r3, r3, #2
   5712c:	add	r3, r2, r3
   57130:	ldr	r3, [r3]
   57134:	add	r0, r3, #4
   57138:	ldr	r3, [fp, #-16]
   5713c:	ldr	r2, [r3, #12]
   57140:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57144:	lsl	r3, r3, #2
   57148:	add	r3, r2, r3
   5714c:	ldr	r3, [r3]
   57150:	mov	r1, r3
   57154:	bl	48c24 <__assert_fail@plt+0x36538>
   57158:	mov	r3, r0
   5715c:	cmp	r3, #0
   57160:	beq	5716c <__assert_fail@plt+0x44a80>
   57164:	mov	r3, #1
   57168:	str	r3, [fp, #-12]
   5716c:	ldr	r3, [fp, #-12]
   57170:	cmp	r3, #0
   57174:	beq	57210 <__assert_fail@plt+0x44b24>
   57178:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5717c:	ldr	r3, [r3, #20]
   57180:	cmp	r3, #0
   57184:	beq	571e0 <__assert_fail@plt+0x44af4>
   57188:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5718c:	ldr	r3, [fp, #-12]
   57190:	add	r3, r2, r3
   57194:	str	r3, [fp, #-28]	; 0xffffffe4
   57198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5719c:	add	r1, r3, #16
   571a0:	ldr	r3, [fp, #-16]
   571a4:	ldr	r2, [r3, #12]
   571a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   571ac:	lsl	r3, r3, #2
   571b0:	add	r3, r2, r3
   571b4:	ldr	r2, [r3]
   571b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   571bc:	str	r3, [sp, #4]
   571c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   571c4:	str	r3, [sp]
   571c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   571cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   571d0:	bl	57bc8 <__assert_fail@plt+0x454dc>
   571d4:	mov	r3, r0
   571d8:	cmp	r3, #0
   571dc:	bne	57218 <__assert_fail@plt+0x44b2c>
   571e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   571e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   571e8:	bl	487fc <__assert_fail@plt+0x36110>
   571ec:	mov	r3, r0
   571f0:	strb	r3, [fp, #-29]	; 0xffffffe3
   571f4:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   571f8:	eor	r3, r3, #1
   571fc:	uxtb	r3, r3
   57200:	cmp	r3, #0
   57204:	beq	5721c <__assert_fail@plt+0x44b30>
   57208:	mov	r3, #12
   5720c:	b	57240 <__assert_fail@plt+0x44b54>
   57210:	nop	{0}
   57214:	b	5721c <__assert_fail@plt+0x44b30>
   57218:	nop	{0}
   5721c:	ldr	r3, [fp, #-8]
   57220:	add	r3, r3, #1
   57224:	str	r3, [fp, #-8]
   57228:	ldr	r3, [fp, #-20]	; 0xffffffec
   5722c:	ldr	r3, [r3, #4]
   57230:	ldr	r2, [fp, #-8]
   57234:	cmp	r2, r3
   57238:	blt	57028 <__assert_fail@plt+0x4493c>
   5723c:	mov	r3, #0
   57240:	mov	r0, r3
   57244:	sub	sp, fp, #4
   57248:	ldr	fp, [sp]
   5724c:	add	sp, sp, #4
   57250:	pop	{pc}		; (ldr pc, [sp], #4)
   57254:	str	fp, [sp, #-8]!
   57258:	str	lr, [sp, #4]
   5725c:	add	fp, sp, #4
   57260:	sub	sp, sp, #16
   57264:	str	r0, [fp, #-16]
   57268:	str	r1, [fp, #-20]	; 0xffffffec
   5726c:	ldr	r3, [fp, #-16]
   57270:	ldr	r3, [r3, #104]	; 0x68
   57274:	str	r3, [fp, #-8]
   57278:	ldr	r3, [fp, #-16]
   5727c:	ldr	r3, [r3, #36]	; 0x24
   57280:	ldr	r2, [fp, #-20]	; 0xffffffec
   57284:	cmp	r2, r3
   57288:	blt	572a4 <__assert_fail@plt+0x44bb8>
   5728c:	ldr	r3, [fp, #-16]
   57290:	ldr	r2, [r3, #36]	; 0x24
   57294:	ldr	r3, [fp, #-16]
   57298:	ldr	r3, [r3, #48]	; 0x30
   5729c:	cmp	r2, r3
   572a0:	blt	572d0 <__assert_fail@plt+0x44be4>
   572a4:	ldr	r3, [fp, #-16]
   572a8:	ldr	r3, [r3, #28]
   572ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   572b0:	cmp	r2, r3
   572b4:	blt	5730c <__assert_fail@plt+0x44c20>
   572b8:	ldr	r3, [fp, #-16]
   572bc:	ldr	r2, [r3, #28]
   572c0:	ldr	r3, [fp, #-16]
   572c4:	ldr	r3, [r3, #48]	; 0x30
   572c8:	cmp	r2, r3
   572cc:	bge	5730c <__assert_fail@plt+0x44c20>
   572d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   572d4:	add	r3, r3, #1
   572d8:	mov	r1, r3
   572dc:	ldr	r0, [fp, #-16]
   572e0:	bl	5d3a4 <__assert_fail@plt+0x4acb8>
   572e4:	str	r0, [fp, #-12]
   572e8:	ldr	r3, [fp, #-12]
   572ec:	cmp	r3, #0
   572f0:	movne	r3, #1
   572f4:	moveq	r3, #0
   572f8:	uxtb	r3, r3
   572fc:	cmp	r3, #0
   57300:	beq	5730c <__assert_fail@plt+0x44c20>
   57304:	ldr	r3, [fp, #-12]
   57308:	b	5736c <__assert_fail@plt+0x44c80>
   5730c:	ldr	r2, [fp, #-8]
   57310:	ldr	r3, [fp, #-20]	; 0xffffffec
   57314:	cmp	r2, r3
   57318:	bge	57368 <__assert_fail@plt+0x44c7c>
   5731c:	ldr	r3, [fp, #-16]
   57320:	ldr	r3, [r3, #100]	; 0x64
   57324:	cmp	r3, #0
   57328:	ldr	r3, [fp, #-16]
   5732c:	ldr	r2, [r3, #100]	; 0x64
   57330:	ldr	r3, [fp, #-8]
   57334:	add	r3, r3, #1
   57338:	lsl	r3, r3, #2
   5733c:	add	r0, r2, r3
   57340:	ldr	r2, [fp, #-20]	; 0xffffffec
   57344:	ldr	r3, [fp, #-8]
   57348:	sub	r3, r2, r3
   5734c:	lsl	r3, r3, #2
   57350:	mov	r2, r3
   57354:	mov	r1, #0
   57358:	bl	12434 <memset@plt>
   5735c:	ldr	r3, [fp, #-16]
   57360:	ldr	r2, [fp, #-20]	; 0xffffffec
   57364:	str	r2, [r3, #104]	; 0x68
   57368:	mov	r3, #0
   5736c:	mov	r0, r3
   57370:	sub	sp, fp, #4
   57374:	ldr	fp, [sp]
   57378:	add	sp, sp, #4
   5737c:	pop	{pc}		; (ldr pc, [sp], #4)
   57380:	str	r4, [sp, #-12]!
   57384:	str	fp, [sp, #4]
   57388:	str	lr, [sp, #8]
   5738c:	add	fp, sp, #8
   57390:	sub	sp, sp, #44	; 0x2c
   57394:	str	r0, [fp, #-40]	; 0xffffffd8
   57398:	str	r1, [fp, #-44]	; 0xffffffd4
   5739c:	str	r2, [fp, #-48]	; 0xffffffd0
   573a0:	str	r3, [fp, #-52]	; 0xffffffcc
   573a4:	mov	r3, #0
   573a8:	str	r3, [fp, #-16]
   573ac:	b	574e4 <__assert_fail@plt+0x44df8>
   573b0:	ldr	r3, [fp, #-16]
   573b4:	lsl	r3, r3, #2
   573b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   573bc:	add	r3, r2, r3
   573c0:	ldr	r3, [r3]
   573c4:	cmp	r3, #0
   573c8:	bne	573f8 <__assert_fail@plt+0x44d0c>
   573cc:	ldr	r3, [fp, #-16]
   573d0:	lsl	r3, r3, #2
   573d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   573d8:	add	r2, r2, r3
   573dc:	ldr	r3, [fp, #-16]
   573e0:	lsl	r3, r3, #2
   573e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   573e8:	add	r3, r1, r3
   573ec:	ldr	r2, [r2]
   573f0:	str	r2, [r3]
   573f4:	b	574d8 <__assert_fail@plt+0x44dec>
   573f8:	ldr	r3, [fp, #-16]
   573fc:	lsl	r3, r3, #2
   57400:	ldr	r2, [fp, #-48]	; 0xffffffd0
   57404:	add	r3, r2, r3
   57408:	ldr	r3, [r3]
   5740c:	cmp	r3, #0
   57410:	beq	574d8 <__assert_fail@plt+0x44dec>
   57414:	ldr	r3, [fp, #-16]
   57418:	lsl	r3, r3, #2
   5741c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   57420:	add	r3, r2, r3
   57424:	ldr	r3, [r3]
   57428:	add	r1, r3, #4
   5742c:	ldr	r3, [fp, #-16]
   57430:	lsl	r3, r3, #2
   57434:	ldr	r2, [fp, #-48]	; 0xffffffd0
   57438:	add	r3, r2, r3
   5743c:	ldr	r3, [r3]
   57440:	add	r2, r3, #4
   57444:	sub	r3, fp, #32
   57448:	mov	r0, r3
   5744c:	bl	48014 <__assert_fail@plt+0x35928>
   57450:	mov	r3, r0
   57454:	str	r3, [fp, #-20]	; 0xffffffec
   57458:	ldr	r3, [fp, #-20]	; 0xffffffec
   5745c:	cmp	r3, #0
   57460:	movne	r3, #1
   57464:	moveq	r3, #0
   57468:	uxtb	r3, r3
   5746c:	cmp	r3, #0
   57470:	beq	5747c <__assert_fail@plt+0x44d90>
   57474:	ldr	r3, [fp, #-20]	; 0xffffffec
   57478:	b	574f8 <__assert_fail@plt+0x44e0c>
   5747c:	ldr	r3, [fp, #-16]
   57480:	lsl	r3, r3, #2
   57484:	ldr	r2, [fp, #-44]	; 0xffffffd4
   57488:	add	r4, r2, r3
   5748c:	sub	r2, fp, #32
   57490:	sub	r3, fp, #20
   57494:	ldr	r1, [fp, #-40]	; 0xffffffd8
   57498:	mov	r0, r3
   5749c:	bl	4923c <__assert_fail@plt+0x36b50>
   574a0:	mov	r3, r0
   574a4:	str	r3, [r4]
   574a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   574ac:	mov	r0, r3
   574b0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   574b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   574b8:	cmp	r3, #0
   574bc:	movne	r3, #1
   574c0:	moveq	r3, #0
   574c4:	uxtb	r3, r3
   574c8:	cmp	r3, #0
   574cc:	beq	574d8 <__assert_fail@plt+0x44dec>
   574d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   574d4:	b	574f8 <__assert_fail@plt+0x44e0c>
   574d8:	ldr	r3, [fp, #-16]
   574dc:	add	r3, r3, #1
   574e0:	str	r3, [fp, #-16]
   574e4:	ldr	r2, [fp, #-16]
   574e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   574ec:	cmp	r2, r3
   574f0:	blt	573b0 <__assert_fail@plt+0x44cc4>
   574f4:	mov	r3, #0
   574f8:	mov	r0, r3
   574fc:	sub	sp, fp, #8
   57500:	ldr	r4, [sp]
   57504:	ldr	fp, [sp, #4]
   57508:	add	sp, sp, #8
   5750c:	pop	{pc}		; (ldr pc, [sp], #4)
   57510:	str	r4, [sp, #-12]!
   57514:	str	fp, [sp, #4]
   57518:	str	lr, [sp, #8]
   5751c:	add	fp, sp, #8
   57520:	sub	sp, sp, #44	; 0x2c
   57524:	str	r0, [fp, #-32]	; 0xffffffe0
   57528:	str	r1, [fp, #-36]	; 0xffffffdc
   5752c:	str	r2, [fp, #-40]	; 0xffffffd8
   57530:	str	r3, [fp, #-44]	; 0xffffffd4
   57534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57538:	ldr	r3, [r3, #84]	; 0x54
   5753c:	str	r3, [fp, #-16]
   57540:	mov	r3, #0
   57544:	str	r3, [fp, #-24]	; 0xffffffe8
   57548:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5754c:	ldr	r2, [r3, #100]	; 0x64
   57550:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57554:	lsl	r3, r3, #2
   57558:	add	r3, r2, r3
   5755c:	ldr	r3, [r3]
   57560:	cmp	r3, #0
   57564:	beq	57588 <__assert_fail@plt+0x44e9c>
   57568:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5756c:	ldr	r2, [r3, #100]	; 0x64
   57570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57574:	lsl	r3, r3, #2
   57578:	add	r3, r2, r3
   5757c:	ldr	r3, [r3]
   57580:	add	r3, r3, #4
   57584:	b	5758c <__assert_fail@plt+0x44ea0>
   57588:	mov	r3, #0
   5758c:	str	r3, [fp, #-20]	; 0xffffffec
   57590:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57594:	ldr	r3, [r3, #4]
   57598:	cmp	r3, #0
   5759c:	bne	575c0 <__assert_fail@plt+0x44ed4>
   575a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   575a4:	ldr	r2, [r3]
   575a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   575ac:	lsl	r3, r3, #2
   575b0:	add	r3, r2, r3
   575b4:	mov	r2, #0
   575b8:	str	r2, [r3]
   575bc:	b	576c8 <__assert_fail@plt+0x44fdc>
   575c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   575c4:	cmp	r3, #0
   575c8:	beq	57674 <__assert_fail@plt+0x44f88>
   575cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   575d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   575d4:	ldr	r0, [fp, #-16]
   575d8:	bl	5775c <__assert_fail@plt+0x45070>
   575dc:	mov	r3, r0
   575e0:	str	r3, [fp, #-24]	; 0xffffffe8
   575e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   575e8:	cmp	r3, #0
   575ec:	movne	r3, #1
   575f0:	moveq	r3, #0
   575f4:	uxtb	r3, r3
   575f8:	cmp	r3, #0
   575fc:	beq	57608 <__assert_fail@plt+0x44f1c>
   57600:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57604:	b	57744 <__assert_fail@plt+0x45058>
   57608:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5760c:	ldr	r3, [r3, #20]
   57610:	cmp	r3, #0
   57614:	beq	57674 <__assert_fail@plt+0x44f88>
   57618:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5761c:	add	r1, r3, #16
   57620:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57624:	ldr	r3, [r3, #116]	; 0x74
   57628:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5762c:	str	r2, [sp, #4]
   57630:	str	r3, [sp]
   57634:	mov	r3, r1
   57638:	ldr	r2, [fp, #-20]	; 0xffffffec
   5763c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   57640:	ldr	r0, [fp, #-16]
   57644:	bl	58150 <__assert_fail@plt+0x45a64>
   57648:	mov	r3, r0
   5764c:	str	r3, [fp, #-24]	; 0xffffffe8
   57650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57654:	cmp	r3, #0
   57658:	movne	r3, #1
   5765c:	moveq	r3, #0
   57660:	uxtb	r3, r3
   57664:	cmp	r3, #0
   57668:	beq	57674 <__assert_fail@plt+0x44f88>
   5766c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57670:	b	57744 <__assert_fail@plt+0x45058>
   57674:	ldr	r3, [fp, #-36]	; 0xffffffdc
   57678:	ldr	r2, [r3]
   5767c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57680:	lsl	r3, r3, #2
   57684:	add	r4, r2, r3
   57688:	sub	r3, fp, #24
   5768c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   57690:	ldr	r1, [fp, #-16]
   57694:	mov	r0, r3
   57698:	bl	4923c <__assert_fail@plt+0x36b50>
   5769c:	mov	r3, r0
   576a0:	str	r3, [r4]
   576a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   576a8:	cmp	r3, #0
   576ac:	movne	r3, #1
   576b0:	moveq	r3, #0
   576b4:	uxtb	r3, r3
   576b8:	cmp	r3, #0
   576bc:	beq	576c8 <__assert_fail@plt+0x44fdc>
   576c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   576c4:	b	57744 <__assert_fail@plt+0x45058>
   576c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   576cc:	cmp	r3, #0
   576d0:	beq	57740 <__assert_fail@plt+0x45054>
   576d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   576d8:	ldr	r2, [r3, #100]	; 0x64
   576dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   576e0:	lsl	r3, r3, #2
   576e4:	add	r3, r2, r3
   576e8:	ldr	r3, [r3]
   576ec:	ldrb	r3, [r3, #52]	; 0x34
   576f0:	and	r3, r3, #64	; 0x40
   576f4:	uxtb	r3, r3
   576f8:	cmp	r3, #0
   576fc:	beq	57740 <__assert_fail@plt+0x45054>
   57700:	ldr	r3, [fp, #-20]	; 0xffffffec
   57704:	ldr	r2, [fp, #-40]	; 0xffffffd8
   57708:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5770c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   57710:	bl	58574 <__assert_fail@plt+0x45e88>
   57714:	mov	r3, r0
   57718:	str	r3, [fp, #-24]	; 0xffffffe8
   5771c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57720:	cmp	r3, #0
   57724:	movne	r3, #1
   57728:	moveq	r3, #0
   5772c:	uxtb	r3, r3
   57730:	cmp	r3, #0
   57734:	beq	57740 <__assert_fail@plt+0x45054>
   57738:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5773c:	b	57744 <__assert_fail@plt+0x45058>
   57740:	mov	r3, #0
   57744:	mov	r0, r3
   57748:	sub	sp, fp, #8
   5774c:	ldr	r4, [sp]
   57750:	ldr	fp, [sp, #4]
   57754:	add	sp, sp, #8
   57758:	pop	{pc}		; (ldr pc, [sp], #4)
   5775c:	str	fp, [sp, #-8]!
   57760:	str	lr, [sp, #4]
   57764:	add	fp, sp, #4
   57768:	sub	sp, sp, #32
   5776c:	str	r0, [fp, #-24]	; 0xffffffe8
   57770:	str	r1, [fp, #-28]	; 0xffffffe4
   57774:	str	r2, [fp, #-32]	; 0xffffffe0
   57778:	mov	r3, #0
   5777c:	str	r3, [fp, #-16]
   57780:	sub	r3, fp, #16
   57784:	ldr	r2, [fp, #-28]	; 0xffffffe4
   57788:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5778c:	mov	r0, r3
   57790:	bl	4923c <__assert_fail@plt+0x36b50>
   57794:	str	r0, [fp, #-12]
   57798:	ldr	r3, [fp, #-16]
   5779c:	cmp	r3, #0
   577a0:	movne	r3, #1
   577a4:	moveq	r3, #0
   577a8:	uxtb	r3, r3
   577ac:	cmp	r3, #0
   577b0:	beq	577bc <__assert_fail@plt+0x450d0>
   577b4:	ldr	r3, [fp, #-16]
   577b8:	b	578d0 <__assert_fail@plt+0x451e4>
   577bc:	ldr	r3, [fp, #-12]
   577c0:	ldr	r3, [r3, #28]
   577c4:	cmp	r3, #0
   577c8:	bne	578b4 <__assert_fail@plt+0x451c8>
   577cc:	ldr	r3, [fp, #-12]
   577d0:	add	r2, r3, #28
   577d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   577d8:	ldr	r3, [r3, #4]
   577dc:	mov	r1, r3
   577e0:	mov	r0, r2
   577e4:	bl	47814 <__assert_fail@plt+0x35128>
   577e8:	mov	r3, r0
   577ec:	str	r3, [fp, #-16]
   577f0:	ldr	r3, [fp, #-16]
   577f4:	cmp	r3, #0
   577f8:	movne	r3, #1
   577fc:	moveq	r3, #0
   57800:	uxtb	r3, r3
   57804:	cmp	r3, #0
   57808:	beq	57814 <__assert_fail@plt+0x45128>
   5780c:	mov	r3, #12
   57810:	b	578d0 <__assert_fail@plt+0x451e4>
   57814:	mov	r3, #0
   57818:	str	r3, [fp, #-8]
   5781c:	b	578a0 <__assert_fail@plt+0x451b4>
   57820:	ldr	r3, [fp, #-12]
   57824:	add	r0, r3, #28
   57828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5782c:	ldr	r2, [r3, #28]
   57830:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57834:	ldr	r1, [r3, #8]
   57838:	ldr	r3, [fp, #-8]
   5783c:	lsl	r3, r3, #2
   57840:	add	r3, r1, r3
   57844:	ldr	r3, [r3]
   57848:	mov	r1, r3
   5784c:	mov	r3, r1
   57850:	lsl	r3, r3, #1
   57854:	add	r3, r3, r1
   57858:	lsl	r3, r3, #2
   5785c:	add	r3, r2, r3
   57860:	mov	r1, r3
   57864:	bl	4839c <__assert_fail@plt+0x35cb0>
   57868:	mov	r3, r0
   5786c:	str	r3, [fp, #-16]
   57870:	ldr	r3, [fp, #-16]
   57874:	cmp	r3, #0
   57878:	movne	r3, #1
   5787c:	moveq	r3, #0
   57880:	uxtb	r3, r3
   57884:	cmp	r3, #0
   57888:	beq	57894 <__assert_fail@plt+0x451a8>
   5788c:	mov	r3, #12
   57890:	b	578d0 <__assert_fail@plt+0x451e4>
   57894:	ldr	r3, [fp, #-8]
   57898:	add	r3, r3, #1
   5789c:	str	r3, [fp, #-8]
   578a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   578a4:	ldr	r3, [r3, #4]
   578a8:	ldr	r2, [fp, #-8]
   578ac:	cmp	r2, r3
   578b0:	blt	57820 <__assert_fail@plt+0x45134>
   578b4:	ldr	r3, [fp, #-12]
   578b8:	add	r3, r3, #28
   578bc:	mov	r2, r3
   578c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   578c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   578c8:	bl	47b70 <__assert_fail@plt+0x35484>
   578cc:	mov	r3, r0
   578d0:	mov	r0, r3
   578d4:	sub	sp, fp, #4
   578d8:	ldr	fp, [sp]
   578dc:	add	sp, sp, #4
   578e0:	pop	{pc}		; (ldr pc, [sp], #4)
   578e4:	str	fp, [sp, #-8]!
   578e8:	str	lr, [sp, #4]
   578ec:	add	fp, sp, #4
   578f0:	sub	sp, sp, #64	; 0x40
   578f4:	str	r0, [fp, #-56]	; 0xffffffc8
   578f8:	str	r1, [fp, #-60]	; 0xffffffc4
   578fc:	str	r2, [fp, #-64]	; 0xffffffc0
   57900:	str	r3, [fp, #-68]	; 0xffffffbc
   57904:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57908:	ldr	r1, [r3, #28]
   5790c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   57910:	mov	r3, r2
   57914:	lsl	r3, r3, #1
   57918:	add	r3, r3, r2
   5791c:	lsl	r3, r3, #2
   57920:	add	r3, r1, r3
   57924:	str	r3, [fp, #-12]
   57928:	sub	r3, fp, #48	; 0x30
   5792c:	mov	r2, #12
   57930:	mov	r1, #0
   57934:	mov	r0, r3
   57938:	bl	12434 <memset@plt>
   5793c:	mov	r3, #0
   57940:	str	r3, [fp, #-8]
   57944:	b	57b08 <__assert_fail@plt+0x4541c>
   57948:	ldr	r3, [fp, #-12]
   5794c:	ldr	r2, [r3, #8]
   57950:	ldr	r3, [fp, #-8]
   57954:	lsl	r3, r3, #2
   57958:	add	r3, r2, r3
   5795c:	ldr	r3, [r3]
   57960:	str	r3, [fp, #-16]
   57964:	ldr	r2, [fp, #-16]
   57968:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5796c:	cmp	r2, r3
   57970:	beq	57af8 <__assert_fail@plt+0x4540c>
   57974:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57978:	ldr	r2, [r3]
   5797c:	ldr	r3, [fp, #-16]
   57980:	lsl	r3, r3, #3
   57984:	add	r3, r2, r3
   57988:	ldrb	r3, [r3, #4]
   5798c:	and	r3, r3, #8
   57990:	cmp	r3, #0
   57994:	beq	57afc <__assert_fail@plt+0x45410>
   57998:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5799c:	ldr	r1, [r3, #20]
   579a0:	ldr	r2, [fp, #-16]
   579a4:	mov	r3, r2
   579a8:	lsl	r3, r3, #1
   579ac:	add	r3, r3, r2
   579b0:	lsl	r3, r3, #2
   579b4:	add	r3, r1, r3
   579b8:	ldr	r3, [r3, #8]
   579bc:	ldr	r3, [r3]
   579c0:	str	r3, [fp, #-20]	; 0xffffffec
   579c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   579c8:	ldr	r1, [r3, #20]
   579cc:	ldr	r2, [fp, #-16]
   579d0:	mov	r3, r2
   579d4:	lsl	r3, r3, #1
   579d8:	add	r3, r3, r2
   579dc:	lsl	r3, r3, #2
   579e0:	add	r3, r1, r3
   579e4:	ldr	r3, [r3, #4]
   579e8:	cmp	r3, #1
   579ec:	ble	57a20 <__assert_fail@plt+0x45334>
   579f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   579f4:	ldr	r1, [r3, #20]
   579f8:	ldr	r2, [fp, #-16]
   579fc:	mov	r3, r2
   57a00:	lsl	r3, r3, #1
   57a04:	add	r3, r3, r2
   57a08:	lsl	r3, r3, #2
   57a0c:	add	r3, r1, r3
   57a10:	ldr	r3, [r3, #8]
   57a14:	add	r3, r3, #4
   57a18:	ldr	r3, [r3]
   57a1c:	b	57a24 <__assert_fail@plt+0x45338>
   57a20:	mvn	r3, #0
   57a24:	str	r3, [fp, #-24]	; 0xffffffe8
   57a28:	ldr	r1, [fp, #-20]	; 0xffffffec
   57a2c:	ldr	r0, [fp, #-12]
   57a30:	bl	48c24 <__assert_fail@plt+0x36538>
   57a34:	mov	r3, r0
   57a38:	cmp	r3, #0
   57a3c:	bne	57a58 <__assert_fail@plt+0x4536c>
   57a40:	ldr	r1, [fp, #-20]	; 0xffffffec
   57a44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   57a48:	bl	48c24 <__assert_fail@plt+0x36538>
   57a4c:	mov	r3, r0
   57a50:	cmp	r3, #0
   57a54:	bne	57a94 <__assert_fail@plt+0x453a8>
   57a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57a5c:	cmp	r3, #0
   57a60:	ble	57afc <__assert_fail@plt+0x45410>
   57a64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   57a68:	ldr	r0, [fp, #-12]
   57a6c:	bl	48c24 <__assert_fail@plt+0x36538>
   57a70:	mov	r3, r0
   57a74:	cmp	r3, #0
   57a78:	bne	57afc <__assert_fail@plt+0x45410>
   57a7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   57a80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   57a84:	bl	48c24 <__assert_fail@plt+0x36538>
   57a88:	mov	r3, r0
   57a8c:	cmp	r3, #0
   57a90:	beq	57afc <__assert_fail@plt+0x45410>
   57a94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   57a98:	ldr	r1, [r3, #28]
   57a9c:	ldr	r2, [fp, #-16]
   57aa0:	mov	r3, r2
   57aa4:	lsl	r3, r3, #1
   57aa8:	add	r3, r3, r2
   57aac:	lsl	r3, r3, #2
   57ab0:	add	r2, r1, r3
   57ab4:	sub	r3, fp, #48	; 0x30
   57ab8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   57abc:	mov	r0, r3
   57ac0:	bl	47b70 <__assert_fail@plt+0x35484>
   57ac4:	str	r0, [fp, #-28]	; 0xffffffe4
   57ac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57acc:	cmp	r3, #0
   57ad0:	movne	r3, #1
   57ad4:	moveq	r3, #0
   57ad8:	uxtb	r3, r3
   57adc:	cmp	r3, #0
   57ae0:	beq	57afc <__assert_fail@plt+0x45410>
   57ae4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57ae8:	mov	r0, r3
   57aec:	bl	3fe0c <__assert_fail@plt+0x2d720>
   57af0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57af4:	b	57bb4 <__assert_fail@plt+0x454c8>
   57af8:	nop	{0}
   57afc:	ldr	r3, [fp, #-8]
   57b00:	add	r3, r3, #1
   57b04:	str	r3, [fp, #-8]
   57b08:	ldr	r3, [fp, #-12]
   57b0c:	ldr	r3, [r3, #4]
   57b10:	ldr	r2, [fp, #-8]
   57b14:	cmp	r2, r3
   57b18:	blt	57948 <__assert_fail@plt+0x4525c>
   57b1c:	mov	r3, #0
   57b20:	str	r3, [fp, #-8]
   57b24:	b	57b90 <__assert_fail@plt+0x454a4>
   57b28:	ldr	r3, [fp, #-12]
   57b2c:	ldr	r2, [r3, #8]
   57b30:	ldr	r3, [fp, #-8]
   57b34:	lsl	r3, r3, #2
   57b38:	add	r3, r2, r3
   57b3c:	ldr	r3, [r3]
   57b40:	str	r3, [fp, #-32]	; 0xffffffe0
   57b44:	sub	r3, fp, #48	; 0x30
   57b48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   57b4c:	mov	r0, r3
   57b50:	bl	48c24 <__assert_fail@plt+0x36538>
   57b54:	mov	r3, r0
   57b58:	cmp	r3, #0
   57b5c:	bne	57b84 <__assert_fail@plt+0x45498>
   57b60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   57b64:	ldr	r0, [fp, #-64]	; 0xffffffc0
   57b68:	bl	48c24 <__assert_fail@plt+0x36538>
   57b6c:	mov	r3, r0
   57b70:	sub	r3, r3, #1
   57b74:	str	r3, [fp, #-36]	; 0xffffffdc
   57b78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   57b7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   57b80:	bl	48d10 <__assert_fail@plt+0x36624>
   57b84:	ldr	r3, [fp, #-8]
   57b88:	add	r3, r3, #1
   57b8c:	str	r3, [fp, #-8]
   57b90:	ldr	r3, [fp, #-12]
   57b94:	ldr	r3, [r3, #4]
   57b98:	ldr	r2, [fp, #-8]
   57b9c:	cmp	r2, r3
   57ba0:	blt	57b28 <__assert_fail@plt+0x4543c>
   57ba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57ba8:	mov	r0, r3
   57bac:	bl	3fe0c <__assert_fail@plt+0x2d720>
   57bb0:	mov	r3, #0
   57bb4:	mov	r0, r3
   57bb8:	sub	sp, fp, #4
   57bbc:	ldr	fp, [sp]
   57bc0:	add	sp, sp, #4
   57bc4:	pop	{pc}		; (ldr pc, [sp], #4)
   57bc8:	str	fp, [sp, #-8]!
   57bcc:	str	lr, [sp, #4]
   57bd0:	add	fp, sp, #4
   57bd4:	sub	sp, sp, #56	; 0x38
   57bd8:	str	r0, [fp, #-40]	; 0xffffffd8
   57bdc:	str	r1, [fp, #-44]	; 0xffffffd4
   57be0:	str	r2, [fp, #-48]	; 0xffffffd0
   57be4:	str	r3, [fp, #-52]	; 0xffffffcc
   57be8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57bec:	ldr	r3, [r3, #84]	; 0x54
   57bf0:	str	r3, [fp, #-12]
   57bf4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   57bf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   57bfc:	bl	5db60 <__assert_fail@plt+0x4b474>
   57c00:	str	r0, [fp, #-16]
   57c04:	ldr	r1, [fp, #8]
   57c08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   57c0c:	bl	5db60 <__assert_fail@plt+0x4b474>
   57c10:	str	r0, [fp, #-20]	; 0xffffffec
   57c14:	mov	r3, #0
   57c18:	str	r3, [fp, #-8]
   57c1c:	b	57d1c <__assert_fail@plt+0x45630>
   57c20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57c24:	ldr	r2, [r3, #116]	; 0x74
   57c28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57c2c:	ldr	r1, [r3, #8]
   57c30:	ldr	r3, [fp, #-8]
   57c34:	lsl	r3, r3, #2
   57c38:	add	r3, r1, r3
   57c3c:	ldr	r3, [r3]
   57c40:	mov	r1, r3
   57c44:	mov	r3, r1
   57c48:	lsl	r3, r3, #1
   57c4c:	add	r3, r3, r1
   57c50:	lsl	r3, r3, #3
   57c54:	add	r3, r2, r3
   57c58:	str	r3, [fp, #-24]	; 0xffffffe8
   57c5c:	ldr	r3, [fp, #-12]
   57c60:	ldr	r2, [r3]
   57c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57c68:	ldr	r3, [r3]
   57c6c:	lsl	r3, r3, #3
   57c70:	add	r3, r2, r3
   57c74:	ldr	r3, [r3]
   57c78:	str	r3, [fp, #-28]	; 0xffffffe4
   57c7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57c80:	ldr	r2, [r3, #8]
   57c84:	ldr	r3, [fp, #-8]
   57c88:	lsl	r3, r3, #2
   57c8c:	add	r3, r2, r3
   57c90:	ldr	r1, [r3]
   57c94:	ldr	r3, [fp, #-16]
   57c98:	str	r3, [sp, #4]
   57c9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   57ca0:	str	r3, [sp]
   57ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57ca8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   57cac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   57cb0:	bl	58040 <__assert_fail@plt+0x45954>
   57cb4:	str	r0, [fp, #-32]	; 0xffffffe0
   57cb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57cbc:	ldr	r2, [r3, #8]
   57cc0:	ldr	r3, [fp, #-8]
   57cc4:	lsl	r3, r3, #2
   57cc8:	add	r3, r2, r3
   57ccc:	ldr	r1, [r3]
   57cd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   57cd4:	str	r3, [sp, #4]
   57cd8:	ldr	r3, [fp, #8]
   57cdc:	str	r3, [sp]
   57ce0:	ldr	r3, [fp, #4]
   57ce4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   57ce8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   57cec:	bl	58040 <__assert_fail@plt+0x45954>
   57cf0:	str	r0, [fp, #-36]	; 0xffffffdc
   57cf4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   57cf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57cfc:	cmp	r2, r3
   57d00:	bne	57d14 <__assert_fail@plt+0x45628>
   57d04:	ldr	r3, [fp, #-8]
   57d08:	add	r3, r3, #1
   57d0c:	str	r3, [fp, #-8]
   57d10:	b	57d1c <__assert_fail@plt+0x45630>
   57d14:	mov	r3, #1
   57d18:	b	57d34 <__assert_fail@plt+0x45648>
   57d1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57d20:	ldr	r3, [r3, #4]
   57d24:	ldr	r2, [fp, #-8]
   57d28:	cmp	r2, r3
   57d2c:	blt	57c20 <__assert_fail@plt+0x45534>
   57d30:	mov	r3, #0
   57d34:	mov	r0, r3
   57d38:	sub	sp, fp, #4
   57d3c:	ldr	fp, [sp]
   57d40:	add	sp, sp, #4
   57d44:	pop	{pc}		; (ldr pc, [sp], #4)
   57d48:	str	fp, [sp, #-8]!
   57d4c:	str	lr, [sp, #4]
   57d50:	add	fp, sp, #4
   57d54:	sub	sp, sp, #56	; 0x38
   57d58:	str	r0, [fp, #-40]	; 0xffffffd8
   57d5c:	str	r1, [fp, #-44]	; 0xffffffd4
   57d60:	str	r2, [fp, #-48]	; 0xffffffd0
   57d64:	str	r3, [fp, #-52]	; 0xffffffcc
   57d68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57d6c:	ldr	r3, [r3, #84]	; 0x54
   57d70:	str	r3, [fp, #-16]
   57d74:	ldr	r3, [fp, #-16]
   57d78:	ldr	r1, [r3, #24]
   57d7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   57d80:	mov	r3, r2
   57d84:	lsl	r3, r3, #1
   57d88:	add	r3, r3, r2
   57d8c:	lsl	r3, r3, #2
   57d90:	add	r3, r1, r3
   57d94:	str	r3, [fp, #-20]	; 0xffffffec
   57d98:	mov	r3, #0
   57d9c:	str	r3, [fp, #-8]
   57da0:	b	5800c <__assert_fail@plt+0x45920>
   57da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   57da8:	ldr	r2, [r3, #8]
   57dac:	ldr	r3, [fp, #-8]
   57db0:	lsl	r3, r3, #2
   57db4:	add	r3, r2, r3
   57db8:	ldr	r3, [r3]
   57dbc:	str	r3, [fp, #-24]	; 0xffffffe8
   57dc0:	ldr	r3, [fp, #-16]
   57dc4:	ldr	r2, [r3]
   57dc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57dcc:	lsl	r3, r3, #3
   57dd0:	add	r3, r2, r3
   57dd4:	ldrb	r3, [r3, #4]
   57dd8:	cmp	r3, #8
   57ddc:	beq	57f6c <__assert_fail@plt+0x45880>
   57de0:	cmp	r3, #9
   57de4:	beq	57fa8 <__assert_fail@plt+0x458bc>
   57de8:	cmp	r3, #4
   57dec:	bne	57fe4 <__assert_fail@plt+0x458f8>
   57df0:	ldr	r3, [fp, #4]
   57df4:	cmn	r3, #1
   57df8:	beq	57fec <__assert_fail@plt+0x45900>
   57dfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   57e00:	ldr	r1, [r3, #116]	; 0x74
   57e04:	ldr	r2, [fp, #4]
   57e08:	mov	r3, r2
   57e0c:	lsl	r3, r3, #1
   57e10:	add	r3, r3, r2
   57e14:	lsl	r3, r3, #3
   57e18:	add	r3, r1, r3
   57e1c:	str	r3, [fp, #-12]
   57e20:	ldr	r3, [fp, #-12]
   57e24:	ldr	r3, [r3]
   57e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   57e2c:	cmp	r2, r3
   57e30:	bne	57f44 <__assert_fail@plt+0x45858>
   57e34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57e38:	cmp	r3, #31
   57e3c:	bgt	57e5c <__assert_fail@plt+0x45770>
   57e40:	ldr	r3, [fp, #-12]
   57e44:	ldr	r2, [r3, #16]
   57e48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57e4c:	lsr	r3, r2, r3
   57e50:	and	r3, r3, #1
   57e54:	cmp	r3, #0
   57e58:	beq	57f4c <__assert_fail@plt+0x45860>
   57e5c:	ldr	r3, [fp, #-16]
   57e60:	ldr	r1, [r3, #20]
   57e64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   57e68:	mov	r3, r2
   57e6c:	lsl	r3, r3, #1
   57e70:	add	r3, r3, r2
   57e74:	lsl	r3, r3, #2
   57e78:	add	r3, r1, r3
   57e7c:	ldr	r3, [r3, #8]
   57e80:	ldr	r3, [r3]
   57e84:	str	r3, [fp, #-28]	; 0xffffffe4
   57e88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   57e8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   57e90:	cmp	r2, r3
   57e94:	bne	57eb8 <__assert_fail@plt+0x457cc>
   57e98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57e9c:	and	r3, r3, #1
   57ea0:	cmp	r3, #0
   57ea4:	beq	57eb0 <__assert_fail@plt+0x457c4>
   57ea8:	mvn	r3, #0
   57eac:	b	5802c <__assert_fail@plt+0x45940>
   57eb0:	mov	r3, #0
   57eb4:	b	5802c <__assert_fail@plt+0x45940>
   57eb8:	ldr	r3, [fp, #4]
   57ebc:	str	r3, [sp]
   57ec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   57ec4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   57ec8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   57ecc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   57ed0:	bl	57d48 <__assert_fail@plt+0x4565c>
   57ed4:	str	r0, [fp, #-32]	; 0xffffffe0
   57ed8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57edc:	cmn	r3, #1
   57ee0:	bne	57eec <__assert_fail@plt+0x45800>
   57ee4:	mvn	r3, #0
   57ee8:	b	5802c <__assert_fail@plt+0x45940>
   57eec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   57ef0:	cmp	r3, #0
   57ef4:	bne	57f10 <__assert_fail@plt+0x45824>
   57ef8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57efc:	and	r3, r3, #2
   57f00:	cmp	r3, #0
   57f04:	beq	57f10 <__assert_fail@plt+0x45824>
   57f08:	mov	r3, #0
   57f0c:	b	5802c <__assert_fail@plt+0x45940>
   57f10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57f14:	cmp	r3, #31
   57f18:	bgt	57f50 <__assert_fail@plt+0x45864>
   57f1c:	ldr	r3, [fp, #-12]
   57f20:	ldr	r2, [r3, #16]
   57f24:	mov	r1, #1
   57f28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   57f2c:	lsl	r3, r1, r3
   57f30:	mvn	r3, r3
   57f34:	and	r2, r2, r3
   57f38:	ldr	r3, [fp, #-12]
   57f3c:	str	r2, [r3, #16]
   57f40:	b	57f50 <__assert_fail@plt+0x45864>
   57f44:	nop	{0}
   57f48:	b	57f50 <__assert_fail@plt+0x45864>
   57f4c:	nop	{0}
   57f50:	ldr	r3, [fp, #-12]
   57f54:	add	r2, r3, #24
   57f58:	str	r2, [fp, #-12]
   57f5c:	ldrb	r3, [r3, #20]
   57f60:	cmp	r3, #0
   57f64:	bne	57e20 <__assert_fail@plt+0x45734>
   57f68:	b	57fec <__assert_fail@plt+0x45900>
   57f6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57f70:	and	r3, r3, #1
   57f74:	cmp	r3, #0
   57f78:	beq	57ff4 <__assert_fail@plt+0x45908>
   57f7c:	ldr	r3, [fp, #-16]
   57f80:	ldr	r2, [r3]
   57f84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57f88:	lsl	r3, r3, #3
   57f8c:	add	r3, r2, r3
   57f90:	ldr	r3, [r3]
   57f94:	ldr	r2, [fp, #-48]	; 0xffffffd0
   57f98:	cmp	r2, r3
   57f9c:	bne	57ff4 <__assert_fail@plt+0x45908>
   57fa0:	mvn	r3, #0
   57fa4:	b	5802c <__assert_fail@plt+0x45940>
   57fa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   57fac:	and	r3, r3, #2
   57fb0:	cmp	r3, #0
   57fb4:	beq	57ffc <__assert_fail@plt+0x45910>
   57fb8:	ldr	r3, [fp, #-16]
   57fbc:	ldr	r2, [r3]
   57fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   57fc4:	lsl	r3, r3, #3
   57fc8:	add	r3, r2, r3
   57fcc:	ldr	r3, [r3]
   57fd0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   57fd4:	cmp	r2, r3
   57fd8:	bne	57ffc <__assert_fail@plt+0x45910>
   57fdc:	mov	r3, #0
   57fe0:	b	5802c <__assert_fail@plt+0x45940>
   57fe4:	nop	{0}
   57fe8:	b	58000 <__assert_fail@plt+0x45914>
   57fec:	nop	{0}
   57ff0:	b	58000 <__assert_fail@plt+0x45914>
   57ff4:	nop	{0}
   57ff8:	b	58000 <__assert_fail@plt+0x45914>
   57ffc:	nop	{0}
   58000:	ldr	r3, [fp, #-8]
   58004:	add	r3, r3, #1
   58008:	str	r3, [fp, #-8]
   5800c:	ldr	r3, [fp, #-20]	; 0xffffffec
   58010:	ldr	r3, [r3, #4]
   58014:	ldr	r2, [fp, #-8]
   58018:	cmp	r2, r3
   5801c:	blt	57da4 <__assert_fail@plt+0x456b8>
   58020:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58024:	asr	r3, r3, #1
   58028:	and	r3, r3, #1
   5802c:	mov	r0, r3
   58030:	sub	sp, fp, #4
   58034:	ldr	fp, [sp]
   58038:	add	sp, sp, #4
   5803c:	pop	{pc}		; (ldr pc, [sp], #4)
   58040:	str	fp, [sp, #-8]!
   58044:	str	lr, [sp, #4]
   58048:	add	fp, sp, #4
   5804c:	sub	sp, sp, #32
   58050:	str	r0, [fp, #-16]
   58054:	str	r1, [fp, #-20]	; 0xffffffec
   58058:	str	r2, [fp, #-24]	; 0xffffffe8
   5805c:	str	r3, [fp, #-28]	; 0xffffffe4
   58060:	ldr	r3, [fp, #-16]
   58064:	ldr	r1, [r3, #116]	; 0x74
   58068:	ldr	r2, [fp, #-20]	; 0xffffffec
   5806c:	mov	r3, r2
   58070:	lsl	r3, r3, #1
   58074:	add	r3, r3, r2
   58078:	lsl	r3, r3, #3
   5807c:	add	r3, r1, r3
   58080:	str	r3, [fp, #-8]
   58084:	ldr	r3, [fp, #-8]
   58088:	ldr	r3, [r3, #8]
   5808c:	ldr	r2, [fp, #4]
   58090:	cmp	r2, r3
   58094:	bge	580a0 <__assert_fail@plt+0x459b4>
   58098:	mvn	r3, #0
   5809c:	b	5813c <__assert_fail@plt+0x45a50>
   580a0:	ldr	r3, [fp, #-8]
   580a4:	ldr	r3, [r3, #12]
   580a8:	ldr	r2, [fp, #4]
   580ac:	cmp	r2, r3
   580b0:	ble	580bc <__assert_fail@plt+0x459d0>
   580b4:	mov	r3, #1
   580b8:	b	5813c <__assert_fail@plt+0x45a50>
   580bc:	ldr	r3, [fp, #-8]
   580c0:	ldr	r3, [r3, #8]
   580c4:	ldr	r2, [fp, #4]
   580c8:	cmp	r2, r3
   580cc:	moveq	r3, #1
   580d0:	movne	r3, #0
   580d4:	uxtb	r3, r3
   580d8:	str	r3, [fp, #-12]
   580dc:	ldr	r3, [fp, #-8]
   580e0:	ldr	r3, [r3, #12]
   580e4:	ldr	r2, [fp, #4]
   580e8:	cmp	r2, r3
   580ec:	bne	580f8 <__assert_fail@plt+0x45a0c>
   580f0:	mov	r3, #2
   580f4:	b	580fc <__assert_fail@plt+0x45a10>
   580f8:	mov	r3, #0
   580fc:	ldr	r2, [fp, #-12]
   58100:	orr	r3, r2, r3
   58104:	str	r3, [fp, #-12]
   58108:	ldr	r3, [fp, #-12]
   5810c:	cmp	r3, #0
   58110:	bne	5811c <__assert_fail@plt+0x45a30>
   58114:	mov	r3, #0
   58118:	b	5813c <__assert_fail@plt+0x45a50>
   5811c:	ldr	r3, [fp, #8]
   58120:	str	r3, [sp]
   58124:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5812c:	ldr	r1, [fp, #-12]
   58130:	ldr	r0, [fp, #-16]
   58134:	bl	57d48 <__assert_fail@plt+0x4565c>
   58138:	mov	r3, r0
   5813c:	mov	r0, r3
   58140:	sub	sp, fp, #4
   58144:	ldr	fp, [sp]
   58148:	add	sp, sp, #4
   5814c:	pop	{pc}		; (ldr pc, [sp], #4)
   58150:	str	fp, [sp, #-8]!
   58154:	str	lr, [sp, #4]
   58158:	add	fp, sp, #4
   5815c:	sub	sp, sp, #64	; 0x40
   58160:	str	r0, [fp, #-56]	; 0xffffffc8
   58164:	str	r1, [fp, #-60]	; 0xffffffc4
   58168:	str	r2, [fp, #-64]	; 0xffffffc0
   5816c:	str	r3, [fp, #-68]	; 0xffffffbc
   58170:	mov	r3, #0
   58174:	str	r3, [fp, #-12]
   58178:	b	58548 <__assert_fail@plt+0x45e5c>
   5817c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   58180:	ldr	r2, [r3, #8]
   58184:	ldr	r3, [fp, #-12]
   58188:	lsl	r3, r3, #2
   5818c:	add	r3, r2, r3
   58190:	ldr	r3, [r3]
   58194:	mov	r2, r3
   58198:	mov	r3, r2
   5819c:	lsl	r3, r3, #1
   581a0:	add	r3, r3, r2
   581a4:	lsl	r3, r3, #3
   581a8:	mov	r2, r3
   581ac:	ldr	r3, [fp, #4]
   581b0:	add	r3, r3, r2
   581b4:	str	r3, [fp, #-24]	; 0xffffffe8
   581b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   581bc:	ldr	r3, [r3, #8]
   581c0:	ldr	r2, [fp, #8]
   581c4:	cmp	r2, r3
   581c8:	ble	58538 <__assert_fail@plt+0x45e4c>
   581cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   581d0:	ldr	r3, [r3, #4]
   581d4:	ldr	r2, [fp, #8]
   581d8:	cmp	r2, r3
   581dc:	bgt	58538 <__assert_fail@plt+0x45e4c>
   581e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   581e4:	ldr	r2, [r3]
   581e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   581ec:	ldr	r3, [r3]
   581f0:	lsl	r3, r3, #3
   581f4:	add	r3, r2, r3
   581f8:	ldr	r3, [r3]
   581fc:	str	r3, [fp, #-28]	; 0xffffffe4
   58200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58204:	ldr	r3, [r3, #12]
   58208:	ldr	r2, [fp, #8]
   5820c:	cmp	r2, r3
   58210:	bne	58454 <__assert_fail@plt+0x45d68>
   58214:	mvn	r3, #0
   58218:	str	r3, [fp, #-16]
   5821c:	mvn	r3, #0
   58220:	str	r3, [fp, #-20]	; 0xffffffec
   58224:	mov	r3, #0
   58228:	str	r3, [fp, #-8]
   5822c:	b	582e8 <__assert_fail@plt+0x45bfc>
   58230:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58234:	ldr	r2, [r3, #8]
   58238:	ldr	r3, [fp, #-8]
   5823c:	lsl	r3, r3, #2
   58240:	add	r3, r2, r3
   58244:	ldr	r3, [r3]
   58248:	str	r3, [fp, #-32]	; 0xffffffe0
   5824c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58250:	ldr	r2, [r3]
   58254:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58258:	lsl	r3, r3, #3
   5825c:	add	r3, r2, r3
   58260:	ldrb	r3, [r3, #4]
   58264:	str	r3, [fp, #-36]	; 0xffffffdc
   58268:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5826c:	cmp	r3, #8
   58270:	bne	582a4 <__assert_fail@plt+0x45bb8>
   58274:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58278:	ldr	r2, [r3]
   5827c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58280:	lsl	r3, r3, #3
   58284:	add	r3, r2, r3
   58288:	ldr	r3, [r3]
   5828c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   58290:	cmp	r2, r3
   58294:	bne	582a4 <__assert_fail@plt+0x45bb8>
   58298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5829c:	str	r3, [fp, #-16]
   582a0:	b	582dc <__assert_fail@plt+0x45bf0>
   582a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   582a8:	cmp	r3, #9
   582ac:	bne	582dc <__assert_fail@plt+0x45bf0>
   582b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   582b4:	ldr	r2, [r3]
   582b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   582bc:	lsl	r3, r3, #3
   582c0:	add	r3, r2, r3
   582c4:	ldr	r3, [r3]
   582c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   582cc:	cmp	r2, r3
   582d0:	bne	582dc <__assert_fail@plt+0x45bf0>
   582d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   582d8:	str	r3, [fp, #-20]	; 0xffffffec
   582dc:	ldr	r3, [fp, #-8]
   582e0:	add	r3, r3, #1
   582e4:	str	r3, [fp, #-8]
   582e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   582ec:	ldr	r3, [r3, #4]
   582f0:	ldr	r2, [fp, #-8]
   582f4:	cmp	r2, r3
   582f8:	blt	58230 <__assert_fail@plt+0x45b44>
   582fc:	ldr	r3, [fp, #-16]
   58300:	cmp	r3, #0
   58304:	blt	58344 <__assert_fail@plt+0x45c58>
   58308:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5830c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   58310:	ldr	r1, [fp, #-16]
   58314:	ldr	r0, [fp, #-56]	; 0xffffffc8
   58318:	bl	578e4 <__assert_fail@plt+0x451f8>
   5831c:	str	r0, [fp, #-40]	; 0xffffffd8
   58320:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58324:	cmp	r3, #0
   58328:	movne	r3, #1
   5832c:	moveq	r3, #0
   58330:	uxtb	r3, r3
   58334:	cmp	r3, #0
   58338:	beq	58344 <__assert_fail@plt+0x45c58>
   5833c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58340:	b	58560 <__assert_fail@plt+0x45e74>
   58344:	ldr	r3, [fp, #-20]	; 0xffffffec
   58348:	cmp	r3, #0
   5834c:	blt	5853c <__assert_fail@plt+0x45e50>
   58350:	mov	r3, #0
   58354:	str	r3, [fp, #-8]
   58358:	b	5843c <__assert_fail@plt+0x45d50>
   5835c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58360:	ldr	r2, [r3, #8]
   58364:	ldr	r3, [fp, #-8]
   58368:	lsl	r3, r3, #2
   5836c:	add	r3, r2, r3
   58370:	ldr	r3, [r3]
   58374:	str	r3, [fp, #-44]	; 0xffffffd4
   58378:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5837c:	ldr	r1, [r3, #28]
   58380:	ldr	r2, [fp, #-44]	; 0xffffffd4
   58384:	mov	r3, r2
   58388:	lsl	r3, r3, #1
   5838c:	add	r3, r3, r2
   58390:	lsl	r3, r3, #2
   58394:	add	r3, r1, r3
   58398:	ldr	r1, [fp, #-20]	; 0xffffffec
   5839c:	mov	r0, r3
   583a0:	bl	48c24 <__assert_fail@plt+0x36538>
   583a4:	mov	r3, r0
   583a8:	cmp	r3, #0
   583ac:	bne	58430 <__assert_fail@plt+0x45d44>
   583b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   583b4:	ldr	r1, [r3, #24]
   583b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   583bc:	mov	r3, r2
   583c0:	lsl	r3, r3, #1
   583c4:	add	r3, r3, r2
   583c8:	lsl	r3, r3, #2
   583cc:	add	r3, r1, r3
   583d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   583d4:	mov	r0, r3
   583d8:	bl	48c24 <__assert_fail@plt+0x36538>
   583dc:	mov	r3, r0
   583e0:	cmp	r3, #0
   583e4:	bne	58430 <__assert_fail@plt+0x45d44>
   583e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   583ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   583f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   583f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   583f8:	bl	578e4 <__assert_fail@plt+0x451f8>
   583fc:	str	r0, [fp, #-40]	; 0xffffffd8
   58400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58404:	cmp	r3, #0
   58408:	movne	r3, #1
   5840c:	moveq	r3, #0
   58410:	uxtb	r3, r3
   58414:	cmp	r3, #0
   58418:	beq	58424 <__assert_fail@plt+0x45d38>
   5841c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58420:	b	58560 <__assert_fail@plt+0x45e74>
   58424:	ldr	r3, [fp, #-8]
   58428:	sub	r3, r3, #1
   5842c:	str	r3, [fp, #-8]
   58430:	ldr	r3, [fp, #-8]
   58434:	add	r3, r3, #1
   58438:	str	r3, [fp, #-8]
   5843c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58440:	ldr	r3, [r3, #4]
   58444:	ldr	r2, [fp, #-8]
   58448:	cmp	r2, r3
   5844c:	blt	5835c <__assert_fail@plt+0x45c70>
   58450:	b	5853c <__assert_fail@plt+0x45e50>
   58454:	mov	r3, #0
   58458:	str	r3, [fp, #-8]
   5845c:	b	58520 <__assert_fail@plt+0x45e34>
   58460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58464:	ldr	r2, [r3, #8]
   58468:	ldr	r3, [fp, #-8]
   5846c:	lsl	r3, r3, #2
   58470:	add	r3, r2, r3
   58474:	ldr	r3, [r3]
   58478:	str	r3, [fp, #-48]	; 0xffffffd0
   5847c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58480:	ldr	r2, [r3]
   58484:	ldr	r3, [fp, #-48]	; 0xffffffd0
   58488:	lsl	r3, r3, #3
   5848c:	add	r3, r2, r3
   58490:	ldrb	r3, [r3, #4]
   58494:	str	r3, [fp, #-52]	; 0xffffffcc
   58498:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5849c:	cmp	r3, #9
   584a0:	beq	584b0 <__assert_fail@plt+0x45dc4>
   584a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   584a8:	cmp	r3, #8
   584ac:	bne	58514 <__assert_fail@plt+0x45e28>
   584b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   584b4:	ldr	r2, [r3]
   584b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   584bc:	lsl	r3, r3, #3
   584c0:	add	r3, r2, r3
   584c4:	ldr	r3, [r3]
   584c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   584cc:	cmp	r2, r3
   584d0:	bne	58510 <__assert_fail@plt+0x45e24>
   584d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   584d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   584dc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   584e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   584e4:	bl	578e4 <__assert_fail@plt+0x451f8>
   584e8:	str	r0, [fp, #-40]	; 0xffffffd8
   584ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   584f0:	cmp	r3, #0
   584f4:	movne	r3, #1
   584f8:	moveq	r3, #0
   584fc:	uxtb	r3, r3
   58500:	cmp	r3, #0
   58504:	beq	58514 <__assert_fail@plt+0x45e28>
   58508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5850c:	b	58560 <__assert_fail@plt+0x45e74>
   58510:	nop	{0}
   58514:	ldr	r3, [fp, #-8]
   58518:	add	r3, r3, #1
   5851c:	str	r3, [fp, #-8]
   58520:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58524:	ldr	r3, [r3, #4]
   58528:	ldr	r2, [fp, #-8]
   5852c:	cmp	r2, r3
   58530:	blt	58460 <__assert_fail@plt+0x45d74>
   58534:	b	5853c <__assert_fail@plt+0x45e50>
   58538:	nop	{0}
   5853c:	ldr	r3, [fp, #-12]
   58540:	add	r3, r3, #1
   58544:	str	r3, [fp, #-12]
   58548:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5854c:	ldr	r3, [r3, #4]
   58550:	ldr	r2, [fp, #-12]
   58554:	cmp	r2, r3
   58558:	blt	5817c <__assert_fail@plt+0x45a90>
   5855c:	mov	r3, #0
   58560:	mov	r0, r3
   58564:	sub	sp, fp, #4
   58568:	ldr	fp, [sp]
   5856c:	add	sp, sp, #4
   58570:	pop	{pc}		; (ldr pc, [sp], #4)
   58574:	str	fp, [sp, #-8]!
   58578:	str	lr, [sp, #4]
   5857c:	add	fp, sp, #4
   58580:	sub	sp, sp, #104	; 0x68
   58584:	str	r0, [fp, #-88]	; 0xffffffa8
   58588:	str	r1, [fp, #-92]	; 0xffffffa4
   5858c:	str	r2, [fp, #-96]	; 0xffffffa0
   58590:	str	r3, [fp, #-100]	; 0xffffff9c
   58594:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58598:	ldr	r3, [r3, #84]	; 0x54
   5859c:	str	r3, [fp, #-24]	; 0xffffffe8
   585a0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   585a4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   585a8:	bl	5db60 <__assert_fail@plt+0x4b474>
   585ac:	str	r0, [fp, #-28]	; 0xffffffe4
   585b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   585b4:	cmn	r3, #1
   585b8:	bne	585c4 <__assert_fail@plt+0x45ed8>
   585bc:	mov	r3, #0
   585c0:	b	58a18 <__assert_fail@plt+0x4632c>
   585c4:	mov	r3, #0
   585c8:	str	r3, [fp, #-84]	; 0xffffffac
   585cc:	mov	r3, #0
   585d0:	str	r3, [fp, #-12]
   585d4:	b	589c8 <__assert_fail@plt+0x462dc>
   585d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   585dc:	ldr	r2, [r3, #8]
   585e0:	ldr	r3, [fp, #-12]
   585e4:	lsl	r3, r3, #2
   585e8:	add	r3, r2, r3
   585ec:	ldr	r3, [r3]
   585f0:	str	r3, [fp, #-32]	; 0xffffffe0
   585f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   585f8:	ldr	r2, [r3]
   585fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58600:	lsl	r3, r3, #3
   58604:	add	r3, r2, r3
   58608:	ldrb	r3, [r3, #4]
   5860c:	str	r3, [fp, #-36]	; 0xffffffdc
   58610:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58614:	ldr	r3, [r3, #8]
   58618:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5861c:	cmp	r2, r3
   58620:	bne	58638 <__assert_fail@plt+0x45f4c>
   58624:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58628:	ldr	r3, [r3, #12]
   5862c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   58630:	cmp	r2, r3
   58634:	beq	589b0 <__assert_fail@plt+0x462c4>
   58638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5863c:	cmp	r3, #4
   58640:	bne	589b8 <__assert_fail@plt+0x462cc>
   58644:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58648:	ldr	r1, [r3, #116]	; 0x74
   5864c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   58650:	mov	r3, r2
   58654:	lsl	r3, r3, #1
   58658:	add	r3, r3, r2
   5865c:	lsl	r3, r3, #3
   58660:	add	r3, r1, r3
   58664:	str	r3, [fp, #-20]	; 0xffffffec
   58668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5866c:	str	r3, [fp, #-16]
   58670:	ldr	r3, [fp, #-20]	; 0xffffffec
   58674:	ldr	r3, [r3]
   58678:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5867c:	cmp	r2, r3
   58680:	bne	5897c <__assert_fail@plt+0x46290>
   58684:	ldr	r3, [fp, #-20]	; 0xffffffec
   58688:	ldr	r2, [r3, #12]
   5868c:	ldr	r3, [fp, #-20]	; 0xffffffec
   58690:	ldr	r3, [r3, #8]
   58694:	sub	r3, r2, r3
   58698:	str	r3, [fp, #-40]	; 0xffffffd8
   5869c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   586a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   586a4:	add	r3, r2, r3
   586a8:	str	r3, [fp, #-44]	; 0xffffffd4
   586ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   586b0:	cmp	r3, #0
   586b4:	beq	586d4 <__assert_fail@plt+0x45fe8>
   586b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   586bc:	ldr	r2, [r3, #12]
   586c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   586c4:	lsl	r3, r3, #2
   586c8:	add	r3, r2, r3
   586cc:	ldr	r3, [r3]
   586d0:	b	586fc <__assert_fail@plt+0x46010>
   586d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   586d8:	ldr	r1, [r3, #20]
   586dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   586e0:	mov	r3, r2
   586e4:	lsl	r3, r3, #1
   586e8:	add	r3, r3, r2
   586ec:	lsl	r3, r3, #2
   586f0:	add	r3, r1, r3
   586f4:	ldr	r3, [r3, #8]
   586f8:	ldr	r3, [r3]
   586fc:	str	r3, [fp, #-48]	; 0xffffffd0
   58700:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58704:	ldr	r3, [r3, #12]
   58708:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5870c:	cmp	r2, r3
   58710:	bgt	58984 <__assert_fail@plt+0x46298>
   58714:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58718:	ldr	r2, [r3]
   5871c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58720:	lsl	r3, r3, #2
   58724:	add	r3, r2, r3
   58728:	ldr	r3, [r3]
   5872c:	cmp	r3, #0
   58730:	beq	58984 <__assert_fail@plt+0x46298>
   58734:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58738:	ldr	r2, [r3]
   5873c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58740:	lsl	r3, r3, #2
   58744:	add	r3, r2, r3
   58748:	ldr	r3, [r3]
   5874c:	cmp	r3, #0
   58750:	beq	58984 <__assert_fail@plt+0x46298>
   58754:	ldr	r3, [fp, #-92]	; 0xffffffa4
   58758:	ldr	r2, [r3]
   5875c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58760:	lsl	r3, r3, #2
   58764:	add	r3, r2, r3
   58768:	ldr	r3, [r3]
   5876c:	add	r3, r3, #4
   58770:	ldr	r1, [fp, #-48]	; 0xffffffd0
   58774:	mov	r0, r3
   58778:	bl	48c24 <__assert_fail@plt+0x36538>
   5877c:	mov	r3, r0
   58780:	cmp	r3, #0
   58784:	beq	58984 <__assert_fail@plt+0x46298>
   58788:	ldr	r3, [fp, #-92]	; 0xffffffa4
   5878c:	add	r1, r3, #16
   58790:	ldr	r3, [fp, #-44]	; 0xffffffd4
   58794:	str	r3, [sp, #4]
   58798:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5879c:	str	r3, [sp]
   587a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   587a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   587a8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   587ac:	bl	57bc8 <__assert_fail@plt+0x454dc>
   587b0:	mov	r3, r0
   587b4:	cmp	r3, #0
   587b8:	bne	58984 <__assert_fail@plt+0x46298>
   587bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   587c0:	cmp	r3, #0
   587c4:	bne	5882c <__assert_fail@plt+0x46140>
   587c8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   587cc:	sub	r3, fp, #84	; 0x54
   587d0:	ldrd	r0, [r2]
   587d4:	strd	r0, [r3]
   587d8:	ldrd	r0, [r2, #8]
   587dc:	strd	r0, [r3, #8]
   587e0:	ldrd	r0, [r2, #16]
   587e4:	strd	r0, [r3, #16]
   587e8:	ldr	r2, [r2, #24]
   587ec:	str	r2, [r3, #24]
   587f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   587f4:	add	r2, r3, #16
   587f8:	sub	r3, fp, #84	; 0x54
   587fc:	add	r3, r3, #16
   58800:	mov	r1, r2
   58804:	mov	r0, r3
   58808:	bl	47a70 <__assert_fail@plt+0x35384>
   5880c:	str	r0, [fp, #-8]
   58810:	ldr	r3, [fp, #-8]
   58814:	cmp	r3, #0
   58818:	movne	r3, #1
   5881c:	moveq	r3, #0
   58820:	uxtb	r3, r3
   58824:	cmp	r3, #0
   58828:	bne	589e8 <__assert_fail@plt+0x462fc>
   5882c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58830:	str	r3, [fp, #-76]	; 0xffffffb4
   58834:	ldr	r3, [fp, #-96]	; 0xffffffa0
   58838:	str	r3, [fp, #-72]	; 0xffffffb8
   5883c:	sub	r3, fp, #84	; 0x54
   58840:	add	r3, r3, #16
   58844:	ldr	r1, [fp, #-16]
   58848:	mov	r0, r3
   5884c:	bl	487fc <__assert_fail@plt+0x36110>
   58850:	mov	r3, r0
   58854:	strb	r3, [fp, #-49]	; 0xffffffcf
   58858:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   5885c:	eor	r3, r3, #1
   58860:	uxtb	r3, r3
   58864:	cmp	r3, #0
   58868:	beq	58878 <__assert_fail@plt+0x4618c>
   5886c:	mov	r3, #12
   58870:	str	r3, [fp, #-8]
   58874:	b	589fc <__assert_fail@plt+0x46310>
   58878:	ldr	r2, [fp, #-84]	; 0xffffffac
   5887c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   58880:	lsl	r3, r3, #2
   58884:	add	r3, r2, r3
   58888:	ldr	r3, [r3]
   5888c:	str	r3, [fp, #-56]	; 0xffffffc8
   58890:	sub	r3, fp, #84	; 0x54
   58894:	mov	r1, r3
   58898:	ldr	r0, [fp, #-88]	; 0xffffffa8
   5889c:	bl	56d98 <__assert_fail@plt+0x446ac>
   588a0:	str	r0, [fp, #-8]
   588a4:	ldr	r3, [fp, #-8]
   588a8:	cmp	r3, #0
   588ac:	movne	r3, #1
   588b0:	moveq	r3, #0
   588b4:	uxtb	r3, r3
   588b8:	cmp	r3, #0
   588bc:	bne	589f0 <__assert_fail@plt+0x46304>
   588c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   588c4:	ldr	r3, [r3, #4]
   588c8:	cmp	r3, #0
   588cc:	beq	5890c <__assert_fail@plt+0x46220>
   588d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   588d4:	ldr	r1, [r3, #4]
   588d8:	ldr	r2, [fp, #-84]	; 0xffffffac
   588dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   588e0:	add	r3, r3, #1
   588e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   588e8:	bl	57380 <__assert_fail@plt+0x44c94>
   588ec:	str	r0, [fp, #-8]
   588f0:	ldr	r3, [fp, #-8]
   588f4:	cmp	r3, #0
   588f8:	movne	r3, #1
   588fc:	moveq	r3, #0
   58900:	uxtb	r3, r3
   58904:	cmp	r3, #0
   58908:	bne	589f8 <__assert_fail@plt+0x4630c>
   5890c:	ldr	r2, [fp, #-84]	; 0xffffffac
   58910:	ldr	r3, [fp, #-96]	; 0xffffffa0
   58914:	lsl	r3, r3, #2
   58918:	add	r3, r2, r3
   5891c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   58920:	str	r2, [r3]
   58924:	sub	r3, fp, #84	; 0x54
   58928:	add	r3, r3, #16
   5892c:	ldr	r1, [fp, #-16]
   58930:	mov	r0, r3
   58934:	bl	48c24 <__assert_fail@plt+0x36538>
   58938:	mov	r3, r0
   5893c:	sub	r2, r3, #1
   58940:	sub	r3, fp, #84	; 0x54
   58944:	add	r3, r3, #16
   58948:	mov	r1, r2
   5894c:	mov	r0, r3
   58950:	bl	48d10 <__assert_fail@plt+0x36624>
   58954:	ldr	r3, [fp, #-88]	; 0xffffffa8
   58958:	ldr	r1, [r3, #116]	; 0x74
   5895c:	ldr	r2, [fp, #-16]
   58960:	mov	r3, r2
   58964:	lsl	r3, r3, #1
   58968:	add	r3, r3, r2
   5896c:	lsl	r3, r3, #3
   58970:	add	r3, r1, r3
   58974:	str	r3, [fp, #-20]	; 0xffffffec
   58978:	b	58988 <__assert_fail@plt+0x4629c>
   5897c:	nop	{0}
   58980:	b	58988 <__assert_fail@plt+0x4629c>
   58984:	nop	{0}
   58988:	ldr	r3, [fp, #-16]
   5898c:	add	r3, r3, #1
   58990:	str	r3, [fp, #-16]
   58994:	ldr	r3, [fp, #-20]	; 0xffffffec
   58998:	add	r2, r3, #24
   5899c:	str	r2, [fp, #-20]	; 0xffffffec
   589a0:	ldrb	r3, [r3, #20]
   589a4:	cmp	r3, #0
   589a8:	bne	58670 <__assert_fail@plt+0x45f84>
   589ac:	b	589bc <__assert_fail@plt+0x462d0>
   589b0:	nop	{0}
   589b4:	b	589bc <__assert_fail@plt+0x462d0>
   589b8:	nop	{0}
   589bc:	ldr	r3, [fp, #-12]
   589c0:	add	r3, r3, #1
   589c4:	str	r3, [fp, #-12]
   589c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   589cc:	ldr	r3, [r3, #4]
   589d0:	ldr	r2, [fp, #-12]
   589d4:	cmp	r2, r3
   589d8:	blt	585d8 <__assert_fail@plt+0x45eec>
   589dc:	mov	r3, #0
   589e0:	str	r3, [fp, #-8]
   589e4:	b	589fc <__assert_fail@plt+0x46310>
   589e8:	nop	{0}
   589ec:	b	589fc <__assert_fail@plt+0x46310>
   589f0:	nop	{0}
   589f4:	b	589fc <__assert_fail@plt+0x46310>
   589f8:	nop	{0}
   589fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   58a00:	cmp	r3, #0
   58a04:	beq	58a14 <__assert_fail@plt+0x46328>
   58a08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58a0c:	mov	r0, r3
   58a10:	bl	3fe0c <__assert_fail@plt+0x2d720>
   58a14:	ldr	r3, [fp, #-8]
   58a18:	mov	r0, r3
   58a1c:	sub	sp, fp, #4
   58a20:	ldr	fp, [sp]
   58a24:	add	sp, sp, #4
   58a28:	pop	{pc}		; (ldr pc, [sp], #4)
   58a2c:	str	fp, [sp, #-8]!
   58a30:	str	lr, [sp, #4]
   58a34:	add	fp, sp, #4
   58a38:	sub	sp, sp, #24
   58a3c:	str	r0, [fp, #-16]
   58a40:	str	r1, [fp, #-20]	; 0xffffffec
   58a44:	str	r2, [fp, #-24]	; 0xffffffe8
   58a48:	str	r3, [fp, #-28]	; 0xffffffe4
   58a4c:	ldr	r3, [fp, #-16]
   58a50:	ldr	r3, [r3, #84]	; 0x54
   58a54:	str	r3, [fp, #-12]
   58a58:	ldr	r2, [fp, #-16]
   58a5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58a60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   58a64:	ldr	r0, [fp, #-12]
   58a68:	bl	5cbf4 <__assert_fail@plt+0x4a508>
   58a6c:	str	r0, [fp, #-8]
   58a70:	ldr	r3, [fp, #-8]
   58a74:	cmp	r3, #0
   58a78:	ble	58b14 <__assert_fail@plt+0x46428>
   58a7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   58a80:	ldr	r3, [fp, #-8]
   58a84:	add	r3, r2, r3
   58a88:	ldr	r2, [fp, #4]
   58a8c:	cmp	r2, r3
   58a90:	blt	58b14 <__assert_fail@plt+0x46428>
   58a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   58a98:	ldr	r2, [r3]
   58a9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   58aa0:	ldr	r3, [fp, #-8]
   58aa4:	add	r3, r1, r3
   58aa8:	lsl	r3, r3, #2
   58aac:	add	r3, r2, r3
   58ab0:	ldr	r3, [r3]
   58ab4:	cmp	r3, #0
   58ab8:	beq	58b0c <__assert_fail@plt+0x46420>
   58abc:	ldr	r3, [fp, #-20]	; 0xffffffec
   58ac0:	ldr	r2, [r3]
   58ac4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   58ac8:	ldr	r3, [fp, #-8]
   58acc:	add	r3, r1, r3
   58ad0:	lsl	r3, r3, #2
   58ad4:	add	r3, r2, r3
   58ad8:	ldr	r3, [r3]
   58adc:	add	r0, r3, #4
   58ae0:	ldr	r3, [fp, #-12]
   58ae4:	ldr	r2, [r3, #12]
   58ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58aec:	lsl	r3, r3, #2
   58af0:	add	r3, r2, r3
   58af4:	ldr	r3, [r3]
   58af8:	mov	r1, r3
   58afc:	bl	48c24 <__assert_fail@plt+0x36538>
   58b00:	mov	r3, r0
   58b04:	cmp	r3, #0
   58b08:	bne	58b14 <__assert_fail@plt+0x46428>
   58b0c:	mov	r3, #0
   58b10:	str	r3, [fp, #-8]
   58b14:	ldr	r3, [fp, #-8]
   58b18:	mov	r0, r3
   58b1c:	sub	sp, fp, #4
   58b20:	ldr	fp, [sp]
   58b24:	add	sp, sp, #4
   58b28:	pop	{pc}		; (ldr pc, [sp], #4)
   58b2c:	str	fp, [sp, #-8]!
   58b30:	str	lr, [sp, #4]
   58b34:	add	fp, sp, #4
   58b38:	sub	sp, sp, #32
   58b3c:	str	r0, [fp, #-24]	; 0xffffffe8
   58b40:	str	r1, [fp, #-28]	; 0xffffffe4
   58b44:	str	r2, [fp, #-32]	; 0xffffffe0
   58b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58b4c:	ldrb	r3, [r3, #52]	; 0x34
   58b50:	ubfx	r3, r3, #5, #1
   58b54:	uxtb	r3, r3
   58b58:	cmp	r3, #0
   58b5c:	beq	58ba0 <__assert_fail@plt+0x464b4>
   58b60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   58b64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   58b68:	bl	591bc <__assert_fail@plt+0x46ad0>
   58b6c:	mov	r2, r0
   58b70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58b74:	str	r2, [r3]
   58b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58b7c:	ldr	r3, [r3]
   58b80:	cmp	r3, #0
   58b84:	movne	r3, #1
   58b88:	moveq	r3, #0
   58b8c:	uxtb	r3, r3
   58b90:	cmp	r3, #0
   58b94:	beq	58ba0 <__assert_fail@plt+0x464b4>
   58b98:	mov	r3, #0
   58b9c:	b	58cd0 <__assert_fail@plt+0x465e4>
   58ba0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58ba4:	ldr	r2, [r3, #4]
   58ba8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58bac:	ldr	r3, [r3, #40]	; 0x28
   58bb0:	add	r0, r3, #1
   58bb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   58bb8:	str	r0, [r1, #40]	; 0x28
   58bbc:	add	r3, r2, r3
   58bc0:	ldrb	r3, [r3]
   58bc4:	strb	r3, [fp, #-5]
   58bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58bcc:	ldr	r3, [r3, #44]	; 0x2c
   58bd0:	str	r3, [fp, #-12]
   58bd4:	ldr	r3, [fp, #-12]
   58bd8:	cmp	r3, #0
   58bdc:	movne	r3, #1
   58be0:	moveq	r3, #0
   58be4:	uxtb	r3, r3
   58be8:	cmp	r3, #0
   58bec:	beq	58c08 <__assert_fail@plt+0x4651c>
   58bf0:	ldrb	r3, [fp, #-5]
   58bf4:	lsl	r3, r3, #2
   58bf8:	ldr	r2, [fp, #-12]
   58bfc:	add	r3, r2, r3
   58c00:	ldr	r3, [r3]
   58c04:	b	58cd0 <__assert_fail@plt+0x465e4>
   58c08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58c0c:	ldr	r3, [r3, #48]	; 0x30
   58c10:	str	r3, [fp, #-12]
   58c14:	ldr	r3, [fp, #-12]
   58c18:	cmp	r3, #0
   58c1c:	movne	r3, #1
   58c20:	moveq	r3, #0
   58c24:	uxtb	r3, r3
   58c28:	cmp	r3, #0
   58c2c:	beq	58c98 <__assert_fail@plt+0x465ac>
   58c30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   58c34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58c38:	ldr	r3, [r3, #40]	; 0x28
   58c3c:	sub	r1, r3, #1
   58c40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58c44:	ldr	r3, [r3, #88]	; 0x58
   58c48:	mov	r2, r3
   58c4c:	bl	47620 <__assert_fail@plt+0x34f34>
   58c50:	str	r0, [fp, #-16]
   58c54:	ldr	r3, [fp, #-16]
   58c58:	and	r3, r3, #1
   58c5c:	cmp	r3, #0
   58c60:	beq	58c80 <__assert_fail@plt+0x46594>
   58c64:	ldrb	r3, [fp, #-5]
   58c68:	add	r3, r3, #256	; 0x100
   58c6c:	lsl	r3, r3, #2
   58c70:	ldr	r2, [fp, #-12]
   58c74:	add	r3, r2, r3
   58c78:	ldr	r3, [r3]
   58c7c:	b	58cd0 <__assert_fail@plt+0x465e4>
   58c80:	ldrb	r3, [fp, #-5]
   58c84:	lsl	r3, r3, #2
   58c88:	ldr	r2, [fp, #-12]
   58c8c:	add	r3, r2, r3
   58c90:	ldr	r3, [r3]
   58c94:	b	58cd0 <__assert_fail@plt+0x465e4>
   58c98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58c9c:	ldr	r3, [r3, #84]	; 0x54
   58ca0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   58ca4:	mov	r0, r3
   58ca8:	bl	5b708 <__assert_fail@plt+0x4901c>
   58cac:	mov	r3, r0
   58cb0:	eor	r3, r3, #1
   58cb4:	uxtb	r3, r3
   58cb8:	cmp	r3, #0
   58cbc:	beq	58bc8 <__assert_fail@plt+0x464dc>
   58cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58cc4:	mov	r2, #12
   58cc8:	str	r2, [r3]
   58ccc:	mov	r3, #0
   58cd0:	mov	r0, r3
   58cd4:	sub	sp, fp, #4
   58cd8:	ldr	fp, [sp]
   58cdc:	add	sp, sp, #4
   58ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   58ce4:	str	r4, [sp, #-12]!
   58ce8:	str	fp, [sp, #4]
   58cec:	str	lr, [sp, #8]
   58cf0:	add	fp, sp, #8
   58cf4:	sub	sp, sp, #60	; 0x3c
   58cf8:	str	r0, [fp, #-56]	; 0xffffffc8
   58cfc:	str	r1, [fp, #-60]	; 0xffffffc4
   58d00:	str	r2, [fp, #-64]	; 0xffffffc0
   58d04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58d08:	ldr	r3, [r3, #84]	; 0x54
   58d0c:	str	r3, [fp, #-20]	; 0xffffffec
   58d10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58d14:	ldr	r3, [r3, #40]	; 0x28
   58d18:	str	r3, [fp, #-24]	; 0xffffffe8
   58d1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58d20:	ldr	r3, [r3, #104]	; 0x68
   58d24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   58d28:	cmp	r2, r3
   58d2c:	ble	58d5c <__assert_fail@plt+0x46670>
   58d30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58d34:	ldr	r2, [r3, #100]	; 0x64
   58d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58d3c:	lsl	r3, r3, #2
   58d40:	add	r3, r2, r3
   58d44:	ldr	r2, [fp, #-64]	; 0xffffffc0
   58d48:	str	r2, [r3]
   58d4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58d50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   58d54:	str	r2, [r3, #104]	; 0x68
   58d58:	b	58ebc <__assert_fail@plt+0x467d0>
   58d5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58d60:	ldr	r2, [r3, #100]	; 0x64
   58d64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58d68:	lsl	r3, r3, #2
   58d6c:	add	r3, r2, r3
   58d70:	ldr	r3, [r3]
   58d74:	cmp	r3, #0
   58d78:	bne	58d9c <__assert_fail@plt+0x466b0>
   58d7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58d80:	ldr	r2, [r3, #100]	; 0x64
   58d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58d88:	lsl	r3, r3, #2
   58d8c:	add	r3, r2, r3
   58d90:	ldr	r2, [fp, #-64]	; 0xffffffc0
   58d94:	str	r2, [r3]
   58d98:	b	58ebc <__assert_fail@plt+0x467d0>
   58d9c:	mov	r3, #0
   58da0:	str	r3, [fp, #-16]
   58da4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58da8:	ldr	r2, [r3, #100]	; 0x64
   58dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58db0:	lsl	r3, r3, #2
   58db4:	add	r3, r2, r3
   58db8:	ldr	r3, [r3]
   58dbc:	str	r3, [fp, #-28]	; 0xffffffe4
   58dc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58dc4:	ldr	r3, [r3, #40]	; 0x28
   58dc8:	str	r3, [fp, #-32]	; 0xffffffe0
   58dcc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58dd0:	cmp	r3, #0
   58dd4:	beq	58e2c <__assert_fail@plt+0x46740>
   58dd8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58ddc:	ldr	r3, [r3, #40]	; 0x28
   58de0:	str	r3, [fp, #-16]
   58de4:	sub	r3, fp, #48	; 0x30
   58de8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   58dec:	ldr	r1, [fp, #-16]
   58df0:	mov	r0, r3
   58df4:	bl	48014 <__assert_fail@plt+0x35928>
   58df8:	mov	r2, r0
   58dfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58e00:	str	r2, [r3]
   58e04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58e08:	ldr	r3, [r3]
   58e0c:	cmp	r3, #0
   58e10:	movne	r3, #1
   58e14:	moveq	r3, #0
   58e18:	uxtb	r3, r3
   58e1c:	cmp	r3, #0
   58e20:	beq	58e48 <__assert_fail@plt+0x4675c>
   58e24:	mov	r3, #0
   58e28:	b	58fa4 <__assert_fail@plt+0x468b8>
   58e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   58e30:	sub	r1, fp, #48	; 0x30
   58e34:	mov	r0, r3
   58e38:	ldrd	r2, [r0]
   58e3c:	strd	r2, [r1]
   58e40:	ldr	r3, [r0, #8]
   58e44:	str	r3, [r1, #8]
   58e48:	ldr	r0, [fp, #-60]	; 0xffffffc4
   58e4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58e50:	ldr	r3, [r3, #40]	; 0x28
   58e54:	sub	r1, r3, #1
   58e58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58e5c:	ldr	r3, [r3, #88]	; 0x58
   58e60:	mov	r2, r3
   58e64:	bl	47620 <__assert_fail@plt+0x34f34>
   58e68:	str	r0, [fp, #-36]	; 0xffffffdc
   58e6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58e70:	ldr	r2, [r3, #100]	; 0x64
   58e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58e78:	lsl	r3, r3, #2
   58e7c:	add	r4, r2, r3
   58e80:	sub	r2, fp, #48	; 0x30
   58e84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   58e88:	ldr	r1, [fp, #-20]	; 0xffffffec
   58e8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   58e90:	bl	493a8 <__assert_fail@plt+0x36cbc>
   58e94:	mov	r3, r0
   58e98:	str	r3, [r4]
   58e9c:	ldr	r3, [r4]
   58ea0:	str	r3, [fp, #-64]	; 0xffffffc0
   58ea4:	ldr	r3, [fp, #-16]
   58ea8:	cmp	r3, #0
   58eac:	beq	58ebc <__assert_fail@plt+0x467d0>
   58eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   58eb4:	mov	r0, r3
   58eb8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   58ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   58ec0:	ldr	r3, [r3, #76]	; 0x4c
   58ec4:	cmp	r3, #0
   58ec8:	beq	58fa0 <__assert_fail@plt+0x468b4>
   58ecc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58ed0:	cmp	r3, #0
   58ed4:	beq	58fa0 <__assert_fail@plt+0x468b4>
   58ed8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58edc:	add	r3, r3, #4
   58ee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   58ee4:	mov	r1, r3
   58ee8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   58eec:	bl	5908c <__assert_fail@plt+0x469a0>
   58ef0:	mov	r2, r0
   58ef4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58ef8:	str	r2, [r3]
   58efc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58f00:	ldr	r3, [r3]
   58f04:	cmp	r3, #0
   58f08:	movne	r3, #1
   58f0c:	moveq	r3, #0
   58f10:	uxtb	r3, r3
   58f14:	cmp	r3, #0
   58f18:	beq	58f24 <__assert_fail@plt+0x46838>
   58f1c:	mov	r3, #0
   58f20:	b	58fa4 <__assert_fail@plt+0x468b8>
   58f24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58f28:	ldrb	r3, [r3, #52]	; 0x34
   58f2c:	and	r3, r3, #64	; 0x40
   58f30:	uxtb	r3, r3
   58f34:	cmp	r3, #0
   58f38:	beq	58fa0 <__assert_fail@plt+0x468b4>
   58f3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58f40:	add	r3, r3, #4
   58f44:	mov	r1, r3
   58f48:	ldr	r0, [fp, #-60]	; 0xffffffc4
   58f4c:	bl	595f4 <__assert_fail@plt+0x46f08>
   58f50:	mov	r2, r0
   58f54:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58f58:	str	r2, [r3]
   58f5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   58f60:	ldr	r3, [r3]
   58f64:	cmp	r3, #0
   58f68:	movne	r3, #1
   58f6c:	moveq	r3, #0
   58f70:	uxtb	r3, r3
   58f74:	cmp	r3, #0
   58f78:	beq	58f84 <__assert_fail@plt+0x46898>
   58f7c:	mov	r3, #0
   58f80:	b	58fa4 <__assert_fail@plt+0x468b8>
   58f84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   58f88:	ldr	r2, [r3, #100]	; 0x64
   58f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   58f90:	lsl	r3, r3, #2
   58f94:	add	r3, r2, r3
   58f98:	ldr	r3, [r3]
   58f9c:	str	r3, [fp, #-64]	; 0xffffffc0
   58fa0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   58fa4:	mov	r0, r3
   58fa8:	sub	sp, fp, #8
   58fac:	ldr	r4, [sp]
   58fb0:	ldr	fp, [sp, #4]
   58fb4:	add	sp, sp, #8
   58fb8:	pop	{pc}		; (ldr pc, [sp], #4)
   58fbc:	str	fp, [sp, #-8]!
   58fc0:	str	lr, [sp, #4]
   58fc4:	add	fp, sp, #4
   58fc8:	sub	sp, sp, #24
   58fcc:	str	r0, [fp, #-24]	; 0xffffffe8
   58fd0:	str	r1, [fp, #-28]	; 0xffffffe4
   58fd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58fd8:	ldr	r3, [r3, #104]	; 0x68
   58fdc:	str	r3, [fp, #-12]
   58fe0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   58fe4:	ldr	r3, [r3, #40]	; 0x28
   58fe8:	str	r3, [fp, #-8]
   58fec:	ldr	r3, [fp, #-8]
   58ff0:	add	r3, r3, #1
   58ff4:	str	r3, [fp, #-8]
   58ff8:	ldr	r2, [fp, #-8]
   58ffc:	ldr	r3, [fp, #-12]
   59000:	cmp	r2, r3
   59004:	ble	59010 <__assert_fail@plt+0x46924>
   59008:	mov	r3, #0
   5900c:	b	59078 <__assert_fail@plt+0x4698c>
   59010:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59014:	ldr	r3, [r3, #40]	; 0x28
   59018:	add	r2, r3, #1
   5901c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59020:	str	r2, [r3, #40]	; 0x28
   59024:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59028:	ldr	r2, [r3, #100]	; 0x64
   5902c:	ldr	r3, [fp, #-8]
   59030:	lsl	r3, r3, #2
   59034:	add	r3, r2, r3
   59038:	ldr	r3, [r3]
   5903c:	cmp	r3, #0
   59040:	beq	58fec <__assert_fail@plt+0x46900>
   59044:	mov	r2, #0
   59048:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5904c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59050:	bl	58ce4 <__assert_fail@plt+0x465f8>
   59054:	str	r0, [fp, #-16]
   59058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5905c:	ldr	r3, [r3]
   59060:	cmp	r3, #0
   59064:	bne	59074 <__assert_fail@plt+0x46988>
   59068:	ldr	r3, [fp, #-16]
   5906c:	cmp	r3, #0
   59070:	beq	58fd4 <__assert_fail@plt+0x468e8>
   59074:	ldr	r3, [fp, #-16]
   59078:	mov	r0, r3
   5907c:	sub	sp, fp, #4
   59080:	ldr	fp, [sp]
   59084:	add	sp, sp, #4
   59088:	pop	{pc}		; (ldr pc, [sp], #4)
   5908c:	str	fp, [sp, #-8]!
   59090:	str	lr, [sp, #4]
   59094:	add	fp, sp, #4
   59098:	sub	sp, sp, #32
   5909c:	str	r0, [fp, #-24]	; 0xffffffe8
   590a0:	str	r1, [fp, #-28]	; 0xffffffe4
   590a4:	str	r2, [fp, #-32]	; 0xffffffe0
   590a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   590ac:	ldr	r3, [r3, #84]	; 0x54
   590b0:	str	r3, [fp, #-12]
   590b4:	mov	r3, #0
   590b8:	str	r3, [fp, #-8]
   590bc:	b	59190 <__assert_fail@plt+0x46aa4>
   590c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   590c4:	ldr	r2, [r3, #8]
   590c8:	ldr	r3, [fp, #-8]
   590cc:	lsl	r3, r3, #2
   590d0:	add	r3, r2, r3
   590d4:	ldr	r3, [r3]
   590d8:	str	r3, [fp, #-16]
   590dc:	ldr	r3, [fp, #-12]
   590e0:	ldr	r2, [r3]
   590e4:	ldr	r3, [fp, #-16]
   590e8:	lsl	r3, r3, #3
   590ec:	add	r3, r2, r3
   590f0:	ldrb	r3, [r3, #4]
   590f4:	cmp	r3, #8
   590f8:	bne	59184 <__assert_fail@plt+0x46a98>
   590fc:	ldr	r3, [fp, #-12]
   59100:	ldr	r2, [r3]
   59104:	ldr	r3, [fp, #-16]
   59108:	lsl	r3, r3, #3
   5910c:	add	r3, r2, r3
   59110:	ldr	r3, [r3]
   59114:	cmp	r3, #31
   59118:	bgt	59184 <__assert_fail@plt+0x46a98>
   5911c:	ldr	r3, [fp, #-12]
   59120:	ldr	r2, [r3, #80]	; 0x50
   59124:	ldr	r3, [fp, #-12]
   59128:	ldr	r1, [r3]
   5912c:	ldr	r3, [fp, #-16]
   59130:	lsl	r3, r3, #3
   59134:	add	r3, r1, r3
   59138:	ldr	r3, [r3]
   5913c:	lsr	r3, r2, r3
   59140:	and	r3, r3, #1
   59144:	cmp	r3, #0
   59148:	beq	59184 <__assert_fail@plt+0x46a98>
   5914c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   59150:	ldr	r1, [fp, #-16]
   59154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   59158:	bl	5dc64 <__assert_fail@plt+0x4b578>
   5915c:	str	r0, [fp, #-20]	; 0xffffffec
   59160:	ldr	r3, [fp, #-20]	; 0xffffffec
   59164:	cmp	r3, #0
   59168:	movne	r3, #1
   5916c:	moveq	r3, #0
   59170:	uxtb	r3, r3
   59174:	cmp	r3, #0
   59178:	beq	59184 <__assert_fail@plt+0x46a98>
   5917c:	ldr	r3, [fp, #-20]	; 0xffffffec
   59180:	b	591a8 <__assert_fail@plt+0x46abc>
   59184:	ldr	r3, [fp, #-8]
   59188:	add	r3, r3, #1
   5918c:	str	r3, [fp, #-8]
   59190:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59194:	ldr	r3, [r3, #4]
   59198:	ldr	r2, [fp, #-8]
   5919c:	cmp	r2, r3
   591a0:	blt	590c0 <__assert_fail@plt+0x469d4>
   591a4:	mov	r3, #0
   591a8:	mov	r0, r3
   591ac:	sub	sp, fp, #4
   591b0:	ldr	fp, [sp]
   591b4:	add	sp, sp, #4
   591b8:	pop	{pc}		; (ldr pc, [sp], #4)
   591bc:	str	r4, [sp, #-12]!
   591c0:	str	fp, [sp, #4]
   591c4:	str	lr, [sp, #8]
   591c8:	add	fp, sp, #8
   591cc:	sub	sp, sp, #60	; 0x3c
   591d0:	str	r0, [fp, #-64]	; 0xffffffc0
   591d4:	str	r1, [fp, #-68]	; 0xffffffbc
   591d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   591dc:	ldr	r3, [r3, #84]	; 0x54
   591e0:	str	r3, [fp, #-20]	; 0xffffffec
   591e4:	mov	r3, #0
   591e8:	str	r3, [fp, #-16]
   591ec:	b	595c4 <__assert_fail@plt+0x46ed8>
   591f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   591f4:	ldr	r2, [r3, #12]
   591f8:	ldr	r3, [fp, #-16]
   591fc:	lsl	r3, r3, #2
   59200:	add	r3, r2, r3
   59204:	ldr	r3, [r3]
   59208:	str	r3, [fp, #-24]	; 0xffffffe8
   5920c:	ldr	r3, [fp, #-20]	; 0xffffffec
   59210:	ldr	r2, [r3]
   59214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59218:	lsl	r3, r3, #3
   5921c:	add	r3, r2, r3
   59220:	ldrb	r3, [r3, #6]
   59224:	and	r3, r3, #16
   59228:	uxtb	r3, r3
   5922c:	cmp	r3, #0
   59230:	beq	595a4 <__assert_fail@plt+0x46eb8>
   59234:	ldr	r3, [fp, #-20]	; 0xffffffec
   59238:	ldr	r2, [r3]
   5923c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59240:	lsl	r3, r3, #3
   59244:	add	r3, r2, r3
   59248:	ldr	r2, [r3, #4]
   5924c:	mov	r3, #65280	; 0xff00
   59250:	movt	r3, #3
   59254:	and	r3, r3, r2
   59258:	cmp	r3, #0
   5925c:	beq	59370 <__assert_fail@plt+0x46c84>
   59260:	ldr	r0, [fp, #-64]	; 0xffffffc0
   59264:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59268:	ldr	r1, [r3, #40]	; 0x28
   5926c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59270:	ldr	r3, [r3, #88]	; 0x58
   59274:	mov	r2, r3
   59278:	bl	47620 <__assert_fail@plt+0x34f34>
   5927c:	str	r0, [fp, #-28]	; 0xffffffe4
   59280:	ldr	r3, [fp, #-20]	; 0xffffffec
   59284:	ldr	r2, [r3]
   59288:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5928c:	lsl	r3, r3, #3
   59290:	add	r3, r2, r3
   59294:	ldr	r3, [r3, #4]
   59298:	ubfx	r3, r3, #8, #10
   5929c:	uxth	r3, r3
   592a0:	and	r3, r3, #4
   592a4:	cmp	r3, #0
   592a8:	beq	592bc <__assert_fail@plt+0x46bd0>
   592ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   592b0:	and	r3, r3, #1
   592b4:	cmp	r3, #0
   592b8:	beq	595ac <__assert_fail@plt+0x46ec0>
   592bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   592c0:	ldr	r2, [r3]
   592c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   592c8:	lsl	r3, r3, #3
   592cc:	add	r3, r2, r3
   592d0:	ldr	r3, [r3, #4]
   592d4:	ubfx	r3, r3, #8, #10
   592d8:	uxth	r3, r3
   592dc:	and	r3, r3, #8
   592e0:	cmp	r3, #0
   592e4:	beq	592f8 <__assert_fail@plt+0x46c0c>
   592e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   592ec:	and	r3, r3, #1
   592f0:	cmp	r3, #0
   592f4:	bne	595ac <__assert_fail@plt+0x46ec0>
   592f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   592fc:	ldr	r2, [r3]
   59300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59304:	lsl	r3, r3, #3
   59308:	add	r3, r2, r3
   5930c:	ldr	r3, [r3, #4]
   59310:	ubfx	r3, r3, #8, #10
   59314:	uxth	r3, r3
   59318:	and	r3, r3, #32
   5931c:	cmp	r3, #0
   59320:	beq	59334 <__assert_fail@plt+0x46c48>
   59324:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59328:	and	r3, r3, #2
   5932c:	cmp	r3, #0
   59330:	beq	595ac <__assert_fail@plt+0x46ec0>
   59334:	ldr	r3, [fp, #-20]	; 0xffffffec
   59338:	ldr	r2, [r3]
   5933c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59340:	lsl	r3, r3, #3
   59344:	add	r3, r2, r3
   59348:	ldr	r3, [r3, #4]
   5934c:	ubfx	r3, r3, #8, #10
   59350:	uxth	r3, r3
   59354:	and	r3, r3, #128	; 0x80
   59358:	cmp	r3, #0
   5935c:	beq	59370 <__assert_fail@plt+0x46c84>
   59360:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59364:	and	r3, r3, #8
   59368:	cmp	r3, #0
   5936c:	beq	595ac <__assert_fail@plt+0x46ec0>
   59370:	ldr	r2, [fp, #-64]	; 0xffffffc0
   59374:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59378:	ldr	r3, [r3, #40]	; 0x28
   5937c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59380:	ldr	r0, [fp, #-20]	; 0xffffffec
   59384:	bl	5cbf4 <__assert_fail@plt+0x4a508>
   59388:	str	r0, [fp, #-32]	; 0xffffffe0
   5938c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   59390:	cmp	r3, #0
   59394:	beq	595b4 <__assert_fail@plt+0x46ec8>
   59398:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5939c:	ldr	r3, [r3, #40]	; 0x28
   593a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   593a4:	add	r3, r2, r3
   593a8:	str	r3, [fp, #-36]	; 0xffffffdc
   593ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   593b0:	ldr	r2, [r3, #120]	; 0x78
   593b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   593b8:	cmp	r2, r3
   593bc:	movge	r2, r2
   593c0:	movlt	r2, r3
   593c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   593c8:	str	r2, [r3, #120]	; 0x78
   593cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   593d0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   593d4:	bl	57254 <__assert_fail@plt+0x44b68>
   593d8:	mov	r3, r0
   593dc:	str	r3, [fp, #-48]	; 0xffffffd0
   593e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   593e4:	cmp	r3, #0
   593e8:	movne	r3, #1
   593ec:	moveq	r3, #0
   593f0:	uxtb	r3, r3
   593f4:	cmp	r3, #0
   593f8:	beq	59404 <__assert_fail@plt+0x46d18>
   593fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59400:	b	595dc <__assert_fail@plt+0x46ef0>
   59404:	ldr	r3, [fp, #-20]	; 0xffffffec
   59408:	ldr	r2, [r3, #12]
   5940c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59410:	lsl	r3, r3, #2
   59414:	add	r3, r2, r3
   59418:	ldr	r3, [r3]
   5941c:	cmn	r3, #1
   59420:	ldr	r3, [fp, #-20]	; 0xffffffec
   59424:	ldr	r2, [r3, #24]
   59428:	ldr	r3, [fp, #-20]	; 0xffffffec
   5942c:	ldr	r1, [r3, #12]
   59430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59434:	lsl	r3, r3, #2
   59438:	add	r3, r1, r3
   5943c:	ldr	r3, [r3]
   59440:	mov	r1, r3
   59444:	mov	r3, r1
   59448:	lsl	r3, r3, #1
   5944c:	add	r3, r3, r1
   59450:	lsl	r3, r3, #2
   59454:	add	r3, r2, r3
   59458:	str	r3, [fp, #-40]	; 0xffffffd8
   5945c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59460:	ldr	r2, [r3, #100]	; 0x64
   59464:	ldr	r3, [fp, #-36]	; 0xffffffdc
   59468:	lsl	r3, r3, #2
   5946c:	add	r3, r2, r3
   59470:	ldr	r3, [r3]
   59474:	str	r3, [fp, #-44]	; 0xffffffd4
   59478:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5947c:	cmp	r3, #0
   59480:	bne	594a4 <__assert_fail@plt+0x46db8>
   59484:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59488:	sub	r1, fp, #60	; 0x3c
   5948c:	mov	r0, r3
   59490:	ldrd	r2, [r0]
   59494:	strd	r2, [r1]
   59498:	ldr	r3, [r0, #8]
   5949c:	str	r3, [r1, #8]
   594a0:	b	594e8 <__assert_fail@plt+0x46dfc>
   594a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   594a8:	ldr	r1, [r3, #40]	; 0x28
   594ac:	sub	r3, fp, #60	; 0x3c
   594b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   594b4:	mov	r0, r3
   594b8:	bl	48014 <__assert_fail@plt+0x35928>
   594bc:	mov	r3, r0
   594c0:	str	r3, [fp, #-48]	; 0xffffffd0
   594c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   594c8:	cmp	r3, #0
   594cc:	movne	r3, #1
   594d0:	moveq	r3, #0
   594d4:	uxtb	r3, r3
   594d8:	cmp	r3, #0
   594dc:	beq	594e8 <__assert_fail@plt+0x46dfc>
   594e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   594e4:	b	595dc <__assert_fail@plt+0x46ef0>
   594e8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   594ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   594f0:	sub	r1, r3, #1
   594f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   594f8:	ldr	r3, [r3, #88]	; 0x58
   594fc:	mov	r2, r3
   59500:	bl	47620 <__assert_fail@plt+0x34f34>
   59504:	str	r0, [fp, #-28]	; 0xffffffe4
   59508:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5950c:	ldr	r2, [r3, #100]	; 0x64
   59510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   59514:	lsl	r3, r3, #2
   59518:	add	r4, r2, r3
   5951c:	sub	r2, fp, #60	; 0x3c
   59520:	sub	r0, fp, #48	; 0x30
   59524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59528:	ldr	r1, [fp, #-20]	; 0xffffffec
   5952c:	bl	493a8 <__assert_fail@plt+0x36cbc>
   59530:	mov	r3, r0
   59534:	str	r3, [r4]
   59538:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5953c:	cmp	r3, #0
   59540:	beq	59550 <__assert_fail@plt+0x46e64>
   59544:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59548:	mov	r0, r3
   5954c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   59550:	ldr	r3, [fp, #-64]	; 0xffffffc0
   59554:	ldr	r2, [r3, #100]	; 0x64
   59558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5955c:	lsl	r3, r3, #2
   59560:	add	r3, r2, r3
   59564:	ldr	r3, [r3]
   59568:	cmp	r3, #0
   5956c:	moveq	r3, #1
   59570:	movne	r3, #0
   59574:	uxtb	r3, r3
   59578:	cmp	r3, #0
   5957c:	beq	595b8 <__assert_fail@plt+0x46ecc>
   59580:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59584:	cmp	r3, #0
   59588:	movne	r3, #1
   5958c:	moveq	r3, #0
   59590:	uxtb	r3, r3
   59594:	cmp	r3, #0
   59598:	beq	595b8 <__assert_fail@plt+0x46ecc>
   5959c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   595a0:	b	595dc <__assert_fail@plt+0x46ef0>
   595a4:	nop	{0}
   595a8:	b	595b8 <__assert_fail@plt+0x46ecc>
   595ac:	nop	{0}
   595b0:	b	595b8 <__assert_fail@plt+0x46ecc>
   595b4:	nop	{0}
   595b8:	ldr	r3, [fp, #-16]
   595bc:	add	r3, r3, #1
   595c0:	str	r3, [fp, #-16]
   595c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   595c8:	ldr	r3, [r3, #8]
   595cc:	ldr	r2, [fp, #-16]
   595d0:	cmp	r2, r3
   595d4:	blt	591f0 <__assert_fail@plt+0x46b04>
   595d8:	mov	r3, #0
   595dc:	mov	r0, r3
   595e0:	sub	sp, fp, #8
   595e4:	ldr	r4, [sp]
   595e8:	ldr	fp, [sp, #4]
   595ec:	add	sp, sp, #8
   595f0:	pop	{pc}		; (ldr pc, [sp], #4)
   595f4:	str	r4, [sp, #-12]!
   595f8:	str	fp, [sp, #4]
   595fc:	str	lr, [sp, #8]
   59600:	add	fp, sp, #8
   59604:	sub	sp, sp, #84	; 0x54
   59608:	str	r0, [fp, #-88]	; 0xffffffa8
   5960c:	str	r1, [fp, #-92]	; 0xffffffa4
   59610:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59614:	ldr	r3, [r3, #84]	; 0x54
   59618:	str	r3, [fp, #-24]	; 0xffffffe8
   5961c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59620:	ldr	r3, [r3, #40]	; 0x28
   59624:	str	r3, [fp, #-28]	; 0xffffffe4
   59628:	mov	r3, #0
   5962c:	str	r3, [fp, #-16]
   59630:	b	59ba0 <__assert_fail@plt+0x474b4>
   59634:	ldr	r3, [fp, #-92]	; 0xffffffa4
   59638:	ldr	r2, [r3, #8]
   5963c:	ldr	r3, [fp, #-16]
   59640:	lsl	r3, r3, #2
   59644:	add	r3, r2, r3
   59648:	ldr	r3, [r3]
   5964c:	str	r3, [fp, #-32]	; 0xffffffe0
   59650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59654:	ldr	r2, [r3]
   59658:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5965c:	lsl	r3, r3, #3
   59660:	add	r3, r2, r3
   59664:	str	r3, [fp, #-36]	; 0xffffffdc
   59668:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5966c:	ldrb	r3, [r3, #4]
   59670:	cmp	r3, #4
   59674:	bne	59b88 <__assert_fail@plt+0x4749c>
   59678:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5967c:	ldr	r2, [r3, #4]
   59680:	mov	r3, #65280	; 0xff00
   59684:	movt	r3, #3
   59688:	and	r3, r3, r2
   5968c:	cmp	r3, #0
   59690:	beq	59760 <__assert_fail@plt+0x47074>
   59694:	ldr	r0, [fp, #-88]	; 0xffffffa8
   59698:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5969c:	ldr	r3, [r3, #88]	; 0x58
   596a0:	mov	r2, r3
   596a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   596a8:	bl	47620 <__assert_fail@plt+0x34f34>
   596ac:	str	r0, [fp, #-40]	; 0xffffffd8
   596b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   596b4:	ldr	r3, [r3, #4]
   596b8:	ubfx	r3, r3, #8, #10
   596bc:	uxth	r3, r3
   596c0:	and	r3, r3, #4
   596c4:	cmp	r3, #0
   596c8:	beq	596dc <__assert_fail@plt+0x46ff0>
   596cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   596d0:	and	r3, r3, #1
   596d4:	cmp	r3, #0
   596d8:	beq	59b90 <__assert_fail@plt+0x474a4>
   596dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   596e0:	ldr	r3, [r3, #4]
   596e4:	ubfx	r3, r3, #8, #10
   596e8:	uxth	r3, r3
   596ec:	and	r3, r3, #8
   596f0:	cmp	r3, #0
   596f4:	beq	59708 <__assert_fail@plt+0x4701c>
   596f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   596fc:	and	r3, r3, #1
   59700:	cmp	r3, #0
   59704:	bne	59b90 <__assert_fail@plt+0x474a4>
   59708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5970c:	ldr	r3, [r3, #4]
   59710:	ubfx	r3, r3, #8, #10
   59714:	uxth	r3, r3
   59718:	and	r3, r3, #32
   5971c:	cmp	r3, #0
   59720:	beq	59734 <__assert_fail@plt+0x47048>
   59724:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59728:	and	r3, r3, #2
   5972c:	cmp	r3, #0
   59730:	beq	59b90 <__assert_fail@plt+0x474a4>
   59734:	ldr	r3, [fp, #-36]	; 0xffffffdc
   59738:	ldr	r3, [r3, #4]
   5973c:	ubfx	r3, r3, #8, #10
   59740:	uxth	r3, r3
   59744:	and	r3, r3, #128	; 0x80
   59748:	cmp	r3, #0
   5974c:	beq	59760 <__assert_fail@plt+0x47074>
   59750:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59754:	and	r3, r3, #8
   59758:	cmp	r3, #0
   5975c:	beq	59b90 <__assert_fail@plt+0x474a4>
   59760:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59764:	ldr	r3, [r3, #108]	; 0x6c
   59768:	str	r3, [fp, #-20]	; 0xffffffec
   5976c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59770:	ldr	r1, [fp, #-32]	; 0xffffffe0
   59774:	ldr	r0, [fp, #-88]	; 0xffffffa8
   59778:	bl	59bf0 <__assert_fail@plt+0x47504>
   5977c:	mov	r3, r0
   59780:	str	r3, [fp, #-68]	; 0xffffffbc
   59784:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59788:	cmp	r3, #0
   5978c:	movne	r3, #1
   59790:	moveq	r3, #0
   59794:	uxtb	r3, r3
   59798:	cmp	r3, #0
   5979c:	bne	59bc0 <__assert_fail@plt+0x474d4>
   597a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   597a4:	ldr	r2, [r3, #12]
   597a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   597ac:	lsl	r3, r3, #2
   597b0:	add	r3, r2, r3
   597b4:	ldr	r3, [r3]
   597b8:	cmn	r3, #1
   597bc:	b	59b70 <__assert_fail@plt+0x47484>
   597c0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   597c4:	ldr	r1, [r3, #116]	; 0x74
   597c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   597cc:	mov	r3, r2
   597d0:	lsl	r3, r3, #1
   597d4:	add	r3, r3, r2
   597d8:	lsl	r3, r3, #3
   597dc:	add	r3, r1, r3
   597e0:	str	r3, [fp, #-44]	; 0xffffffd4
   597e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   597e8:	ldr	r3, [r3]
   597ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   597f0:	cmp	r2, r3
   597f4:	bne	59b60 <__assert_fail@plt+0x47474>
   597f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   597fc:	ldr	r3, [r3, #4]
   59800:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59804:	cmp	r2, r3
   59808:	bne	59b60 <__assert_fail@plt+0x47474>
   5980c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59810:	ldr	r2, [r3, #12]
   59814:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59818:	ldr	r3, [r3, #8]
   5981c:	sub	r3, r2, r3
   59820:	str	r3, [fp, #-48]	; 0xffffffd0
   59824:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59828:	cmp	r3, #0
   5982c:	bne	5987c <__assert_fail@plt+0x47190>
   59830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59834:	ldr	r1, [r3, #24]
   59838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5983c:	ldr	r0, [r3, #20]
   59840:	ldr	r2, [fp, #-32]	; 0xffffffe0
   59844:	mov	r3, r2
   59848:	lsl	r3, r3, #1
   5984c:	add	r3, r3, r2
   59850:	lsl	r3, r3, #2
   59854:	add	r3, r0, r3
   59858:	ldr	r3, [r3, #8]
   5985c:	ldr	r3, [r3]
   59860:	mov	r2, r3
   59864:	mov	r3, r2
   59868:	lsl	r3, r3, #1
   5986c:	add	r3, r3, r2
   59870:	lsl	r3, r3, #2
   59874:	add	r3, r1, r3
   59878:	b	598b4 <__assert_fail@plt+0x471c8>
   5987c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59880:	ldr	r2, [r3, #24]
   59884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59888:	ldr	r1, [r3, #12]
   5988c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   59890:	lsl	r3, r3, #2
   59894:	add	r3, r1, r3
   59898:	ldr	r3, [r3]
   5989c:	mov	r1, r3
   598a0:	mov	r3, r1
   598a4:	lsl	r3, r3, #1
   598a8:	add	r3, r3, r1
   598ac:	lsl	r3, r3, #2
   598b0:	add	r3, r2, r3
   598b4:	str	r3, [fp, #-52]	; 0xffffffcc
   598b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   598bc:	ldr	r2, [r3, #12]
   598c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   598c4:	add	r2, r2, r3
   598c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   598cc:	ldr	r3, [r3, #8]
   598d0:	sub	r3, r2, r3
   598d4:	str	r3, [fp, #-56]	; 0xffffffc8
   598d8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   598dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   598e0:	sub	r1, r3, #1
   598e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   598e8:	ldr	r3, [r3, #88]	; 0x58
   598ec:	mov	r2, r3
   598f0:	bl	47620 <__assert_fail@plt+0x34f34>
   598f4:	str	r0, [fp, #-40]	; 0xffffffd8
   598f8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   598fc:	ldr	r2, [r3, #100]	; 0x64
   59900:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59904:	lsl	r3, r3, #2
   59908:	add	r3, r2, r3
   5990c:	ldr	r3, [r3]
   59910:	str	r3, [fp, #-60]	; 0xffffffc4
   59914:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59918:	ldr	r2, [r3, #100]	; 0x64
   5991c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59920:	lsl	r3, r3, #2
   59924:	add	r3, r2, r3
   59928:	ldr	r3, [r3]
   5992c:	cmp	r3, #0
   59930:	beq	59954 <__assert_fail@plt+0x47268>
   59934:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59938:	ldr	r2, [r3, #100]	; 0x64
   5993c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59940:	lsl	r3, r3, #2
   59944:	add	r3, r2, r3
   59948:	ldr	r3, [r3]
   5994c:	ldr	r3, [r3, #8]
   59950:	b	59958 <__assert_fail@plt+0x4726c>
   59954:	mov	r3, #0
   59958:	str	r3, [fp, #-64]	; 0xffffffc0
   5995c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59960:	cmp	r3, #0
   59964:	bne	599e8 <__assert_fail@plt+0x472fc>
   59968:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5996c:	ldr	r2, [r3, #100]	; 0x64
   59970:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59974:	lsl	r3, r3, #2
   59978:	add	r4, r2, r3
   5997c:	sub	r0, fp, #68	; 0x44
   59980:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59984:	ldr	r2, [fp, #-52]	; 0xffffffcc
   59988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5998c:	bl	493a8 <__assert_fail@plt+0x36cbc>
   59990:	mov	r3, r0
   59994:	str	r3, [r4]
   59998:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5999c:	ldr	r2, [r3, #100]	; 0x64
   599a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   599a4:	lsl	r3, r3, #2
   599a8:	add	r3, r2, r3
   599ac:	ldr	r3, [r3]
   599b0:	cmp	r3, #0
   599b4:	moveq	r3, #1
   599b8:	movne	r3, #0
   599bc:	uxtb	r3, r3
   599c0:	cmp	r3, #0
   599c4:	beq	59ac4 <__assert_fail@plt+0x473d8>
   599c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   599cc:	cmp	r3, #0
   599d0:	movne	r3, #1
   599d4:	moveq	r3, #0
   599d8:	uxtb	r3, r3
   599dc:	cmp	r3, #0
   599e0:	beq	59ac4 <__assert_fail@plt+0x473d8>
   599e4:	b	59bd4 <__assert_fail@plt+0x474e8>
   599e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   599ec:	ldr	r1, [r3, #40]	; 0x28
   599f0:	sub	r3, fp, #80	; 0x50
   599f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   599f8:	mov	r0, r3
   599fc:	bl	48014 <__assert_fail@plt+0x35928>
   59a00:	mov	r3, r0
   59a04:	str	r3, [fp, #-68]	; 0xffffffbc
   59a08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59a0c:	cmp	r3, #0
   59a10:	movne	r3, #1
   59a14:	moveq	r3, #0
   59a18:	uxtb	r3, r3
   59a1c:	cmp	r3, #0
   59a20:	beq	59a34 <__assert_fail@plt+0x47348>
   59a24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59a28:	mov	r0, r3
   59a2c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   59a30:	b	59bd4 <__assert_fail@plt+0x474e8>
   59a34:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59a38:	ldr	r2, [r3, #100]	; 0x64
   59a3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59a40:	lsl	r3, r3, #2
   59a44:	add	r4, r2, r3
   59a48:	sub	r2, fp, #80	; 0x50
   59a4c:	sub	r0, fp, #68	; 0x44
   59a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   59a54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   59a58:	bl	493a8 <__assert_fail@plt+0x36cbc>
   59a5c:	mov	r3, r0
   59a60:	str	r3, [r4]
   59a64:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59a68:	mov	r0, r3
   59a6c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   59a70:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59a74:	ldr	r2, [r3, #100]	; 0x64
   59a78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59a7c:	lsl	r3, r3, #2
   59a80:	add	r3, r2, r3
   59a84:	ldr	r3, [r3]
   59a88:	cmp	r3, #0
   59a8c:	moveq	r3, #1
   59a90:	movne	r3, #0
   59a94:	uxtb	r3, r3
   59a98:	cmp	r3, #0
   59a9c:	beq	59ac4 <__assert_fail@plt+0x473d8>
   59aa0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59aa4:	cmp	r3, #0
   59aa8:	movne	r3, #1
   59aac:	moveq	r3, #0
   59ab0:	uxtb	r3, r3
   59ab4:	cmp	r3, #0
   59ab8:	beq	59ac4 <__assert_fail@plt+0x473d8>
   59abc:	nop	{0}
   59ac0:	b	59bd4 <__assert_fail@plt+0x474e8>
   59ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59ac8:	cmp	r3, #0
   59acc:	bne	59b64 <__assert_fail@plt+0x47478>
   59ad0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59ad4:	ldr	r2, [r3, #100]	; 0x64
   59ad8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59adc:	lsl	r3, r3, #2
   59ae0:	add	r3, r2, r3
   59ae4:	ldr	r3, [r3]
   59ae8:	ldr	r3, [r3, #8]
   59aec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   59af0:	cmp	r2, r3
   59af4:	bge	59b64 <__assert_fail@plt+0x47478>
   59af8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59afc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   59b00:	ldr	r0, [fp, #-88]	; 0xffffffa8
   59b04:	bl	5908c <__assert_fail@plt+0x469a0>
   59b08:	mov	r3, r0
   59b0c:	str	r3, [fp, #-68]	; 0xffffffbc
   59b10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59b14:	cmp	r3, #0
   59b18:	movne	r3, #1
   59b1c:	moveq	r3, #0
   59b20:	uxtb	r3, r3
   59b24:	cmp	r3, #0
   59b28:	bne	59bc8 <__assert_fail@plt+0x474dc>
   59b2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   59b30:	ldr	r0, [fp, #-88]	; 0xffffffa8
   59b34:	bl	595f4 <__assert_fail@plt+0x46f08>
   59b38:	mov	r3, r0
   59b3c:	str	r3, [fp, #-68]	; 0xffffffbc
   59b40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59b44:	cmp	r3, #0
   59b48:	movne	r3, #1
   59b4c:	moveq	r3, #0
   59b50:	uxtb	r3, r3
   59b54:	cmp	r3, #0
   59b58:	bne	59bd0 <__assert_fail@plt+0x474e4>
   59b5c:	b	59b64 <__assert_fail@plt+0x47478>
   59b60:	nop	{0}
   59b64:	ldr	r3, [fp, #-20]	; 0xffffffec
   59b68:	add	r3, r3, #1
   59b6c:	str	r3, [fp, #-20]	; 0xffffffec
   59b70:	ldr	r3, [fp, #-88]	; 0xffffffa8
   59b74:	ldr	r3, [r3, #108]	; 0x6c
   59b78:	ldr	r2, [fp, #-20]	; 0xffffffec
   59b7c:	cmp	r2, r3
   59b80:	blt	597c0 <__assert_fail@plt+0x470d4>
   59b84:	b	59b94 <__assert_fail@plt+0x474a8>
   59b88:	nop	{0}
   59b8c:	b	59b94 <__assert_fail@plt+0x474a8>
   59b90:	nop	{0}
   59b94:	ldr	r3, [fp, #-16]
   59b98:	add	r3, r3, #1
   59b9c:	str	r3, [fp, #-16]
   59ba0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   59ba4:	ldr	r3, [r3, #4]
   59ba8:	ldr	r2, [fp, #-16]
   59bac:	cmp	r2, r3
   59bb0:	blt	59634 <__assert_fail@plt+0x46f48>
   59bb4:	mov	r3, #0
   59bb8:	str	r3, [fp, #-68]	; 0xffffffbc
   59bbc:	b	59bd4 <__assert_fail@plt+0x474e8>
   59bc0:	nop	{0}
   59bc4:	b	59bd4 <__assert_fail@plt+0x474e8>
   59bc8:	nop	{0}
   59bcc:	b	59bd4 <__assert_fail@plt+0x474e8>
   59bd0:	nop	{0}
   59bd4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   59bd8:	mov	r0, r3
   59bdc:	sub	sp, fp, #8
   59be0:	ldr	r4, [sp]
   59be4:	ldr	fp, [sp, #4]
   59be8:	add	sp, sp, #8
   59bec:	pop	{pc}		; (ldr pc, [sp], #4)
   59bf0:	str	fp, [sp, #-8]!
   59bf4:	str	lr, [sp, #4]
   59bf8:	add	fp, sp, #4
   59bfc:	sub	sp, sp, #96	; 0x60
   59c00:	str	r0, [fp, #-72]	; 0xffffffb8
   59c04:	str	r1, [fp, #-76]	; 0xffffffb4
   59c08:	str	r2, [fp, #-80]	; 0xffffffb0
   59c0c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59c10:	ldr	r3, [r3, #84]	; 0x54
   59c14:	str	r3, [fp, #-32]	; 0xffffffe0
   59c18:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59c1c:	ldr	r3, [r3, #4]
   59c20:	str	r3, [fp, #-12]
   59c24:	ldr	r1, [fp, #-80]	; 0xffffffb0
   59c28:	ldr	r0, [fp, #-72]	; 0xffffffb8
   59c2c:	bl	5db60 <__assert_fail@plt+0x4b474>
   59c30:	str	r0, [fp, #-36]	; 0xffffffdc
   59c34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   59c38:	cmn	r3, #1
   59c3c:	beq	59c98 <__assert_fail@plt+0x475ac>
   59c40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59c44:	ldr	r1, [r3, #116]	; 0x74
   59c48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   59c4c:	mov	r3, r2
   59c50:	lsl	r3, r3, #1
   59c54:	add	r3, r3, r2
   59c58:	lsl	r3, r3, #3
   59c5c:	add	r3, r1, r3
   59c60:	str	r3, [fp, #-16]
   59c64:	ldr	r3, [fp, #-16]
   59c68:	ldr	r3, [r3]
   59c6c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   59c70:	cmp	r2, r3
   59c74:	bne	59c80 <__assert_fail@plt+0x47594>
   59c78:	mov	r3, #0
   59c7c:	b	5a218 <__assert_fail@plt+0x47b2c>
   59c80:	ldr	r3, [fp, #-16]
   59c84:	add	r2, r3, #24
   59c88:	str	r2, [fp, #-16]
   59c8c:	ldrb	r3, [r3, #20]
   59c90:	cmp	r3, #0
   59c94:	bne	59c64 <__assert_fail@plt+0x47578>
   59c98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   59c9c:	ldr	r2, [r3]
   59ca0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   59ca4:	lsl	r3, r3, #3
   59ca8:	add	r3, r2, r3
   59cac:	ldr	r3, [r3]
   59cb0:	str	r3, [fp, #-40]	; 0xffffffd8
   59cb4:	mov	r3, #0
   59cb8:	str	r3, [fp, #-8]
   59cbc:	b	5a200 <__assert_fail@plt+0x47b14>
   59cc0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59cc4:	ldr	r2, [r3, #132]	; 0x84
   59cc8:	ldr	r3, [fp, #-8]
   59ccc:	lsl	r3, r3, #2
   59cd0:	add	r3, r2, r3
   59cd4:	ldr	r3, [r3]
   59cd8:	str	r3, [fp, #-44]	; 0xffffffd4
   59cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   59ce0:	ldr	r2, [r3]
   59ce4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59ce8:	ldr	r3, [r3, #4]
   59cec:	lsl	r3, r3, #3
   59cf0:	add	r3, r2, r3
   59cf4:	ldr	r3, [r3]
   59cf8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   59cfc:	cmp	r2, r3
   59d00:	bne	5a1d8 <__assert_fail@plt+0x47aec>
   59d04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59d08:	ldr	r3, [r3]
   59d0c:	str	r3, [fp, #-24]	; 0xffffffe8
   59d10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59d14:	str	r3, [fp, #-28]	; 0xffffffe4
   59d18:	mov	r3, #0
   59d1c:	str	r3, [fp, #-20]	; 0xffffffec
   59d20:	b	59eb0 <__assert_fail@plt+0x477c4>
   59d24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59d28:	ldr	r2, [r3, #20]
   59d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   59d30:	lsl	r3, r3, #2
   59d34:	add	r3, r2, r3
   59d38:	ldr	r3, [r3]
   59d3c:	str	r3, [fp, #-48]	; 0xffffffd0
   59d40:	ldr	r3, [fp, #-48]	; 0xffffffd0
   59d44:	ldr	r2, [r3, #4]
   59d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59d4c:	sub	r3, r2, r3
   59d50:	str	r3, [fp, #-52]	; 0xffffffcc
   59d54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59d58:	cmp	r3, #0
   59d5c:	ble	59e24 <__assert_fail@plt+0x47738>
   59d60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59d64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59d68:	add	r2, r2, r3
   59d6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59d70:	ldr	r3, [r3, #28]
   59d74:	cmp	r2, r3
   59d78:	movgt	r3, #1
   59d7c:	movle	r3, #0
   59d80:	uxtb	r3, r3
   59d84:	cmp	r3, #0
   59d88:	beq	59df4 <__assert_fail@plt+0x47708>
   59d8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59d90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59d94:	add	r2, r2, r3
   59d98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59d9c:	ldr	r3, [r3, #48]	; 0x30
   59da0:	cmp	r2, r3
   59da4:	bgt	59ec8 <__assert_fail@plt+0x477dc>
   59da8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59dac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59db0:	add	r3, r2, r3
   59db4:	mov	r1, r3
   59db8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   59dbc:	bl	57254 <__assert_fail@plt+0x44b68>
   59dc0:	str	r0, [fp, #-56]	; 0xffffffc8
   59dc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59dc8:	cmp	r3, #0
   59dcc:	movne	r3, #1
   59dd0:	moveq	r3, #0
   59dd4:	uxtb	r3, r3
   59dd8:	cmp	r3, #0
   59ddc:	beq	59de8 <__assert_fail@plt+0x476fc>
   59de0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59de4:	b	5a218 <__assert_fail@plt+0x47b2c>
   59de8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59dec:	ldr	r3, [r3, #4]
   59df0:	str	r3, [fp, #-12]
   59df4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59df8:	ldr	r2, [fp, #-12]
   59dfc:	add	r0, r2, r3
   59e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59e04:	ldr	r2, [fp, #-12]
   59e08:	add	r3, r2, r3
   59e0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   59e10:	mov	r1, r3
   59e14:	bl	12158 <memcmp@plt>
   59e18:	mov	r3, r0
   59e1c:	cmp	r3, #0
   59e20:	bne	59ed0 <__assert_fail@plt+0x477e4>
   59e24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59e28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59e2c:	add	r3, r2, r3
   59e30:	str	r3, [fp, #-28]	; 0xffffffe4
   59e34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59e38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   59e3c:	add	r3, r2, r3
   59e40:	str	r3, [fp, #-24]	; 0xffffffe8
   59e44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   59e48:	str	r3, [sp]
   59e4c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   59e50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   59e54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   59e58:	ldr	r0, [fp, #-72]	; 0xffffffb8
   59e5c:	bl	5a22c <__assert_fail@plt+0x47b40>
   59e60:	str	r0, [fp, #-56]	; 0xffffffc8
   59e64:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59e68:	ldr	r3, [r3, #4]
   59e6c:	str	r3, [fp, #-12]
   59e70:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59e74:	cmp	r3, #1
   59e78:	beq	59ea0 <__assert_fail@plt+0x477b4>
   59e7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59e80:	cmp	r3, #0
   59e84:	movne	r3, #1
   59e88:	moveq	r3, #0
   59e8c:	uxtb	r3, r3
   59e90:	cmp	r3, #0
   59e94:	beq	59ea4 <__assert_fail@plt+0x477b8>
   59e98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59e9c:	b	5a218 <__assert_fail@plt+0x47b2c>
   59ea0:	nop	{0}
   59ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   59ea8:	add	r3, r3, #1
   59eac:	str	r3, [fp, #-20]	; 0xffffffec
   59eb0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59eb4:	ldr	r3, [r3, #16]
   59eb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   59ebc:	cmp	r2, r3
   59ec0:	blt	59d24 <__assert_fail@plt+0x47638>
   59ec4:	b	59ed4 <__assert_fail@plt+0x477e8>
   59ec8:	nop	{0}
   59ecc:	b	59ed4 <__assert_fail@plt+0x477e8>
   59ed0:	nop	{0}
   59ed4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59ed8:	ldr	r3, [r3, #16]
   59edc:	ldr	r2, [fp, #-20]	; 0xffffffec
   59ee0:	cmp	r2, r3
   59ee4:	blt	5a1e0 <__assert_fail@plt+0x47af4>
   59ee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   59eec:	cmp	r3, #0
   59ef0:	ble	5a1c4 <__assert_fail@plt+0x47ad8>
   59ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59ef8:	add	r3, r3, #1
   59efc:	str	r3, [fp, #-24]	; 0xffffffe8
   59f00:	b	5a1c4 <__assert_fail@plt+0x47ad8>
   59f04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   59f08:	ldr	r3, [r3]
   59f0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   59f10:	sub	r3, r2, r3
   59f14:	str	r3, [fp, #-60]	; 0xffffffc4
   59f18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   59f1c:	cmp	r3, #0
   59f20:	ble	59fdc <__assert_fail@plt+0x478f0>
   59f24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59f28:	ldr	r3, [r3, #28]
   59f2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59f30:	cmp	r2, r3
   59f34:	movge	r3, #1
   59f38:	movlt	r3, #0
   59f3c:	uxtb	r3, r3
   59f40:	cmp	r3, #0
   59f44:	beq	59fa4 <__assert_fail@plt+0x478b8>
   59f48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59f4c:	ldr	r3, [r3, #48]	; 0x30
   59f50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   59f54:	cmp	r2, r3
   59f58:	bge	5a1e8 <__assert_fail@plt+0x47afc>
   59f5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59f60:	add	r3, r3, #1
   59f64:	mov	r1, r3
   59f68:	ldr	r0, [fp, #-72]	; 0xffffffb8
   59f6c:	bl	5d3a4 <__assert_fail@plt+0x4acb8>
   59f70:	str	r0, [fp, #-56]	; 0xffffffc8
   59f74:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59f78:	cmp	r3, #0
   59f7c:	movne	r3, #1
   59f80:	moveq	r3, #0
   59f84:	uxtb	r3, r3
   59f88:	cmp	r3, #0
   59f8c:	beq	59f98 <__assert_fail@plt+0x478ac>
   59f90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   59f94:	b	5a218 <__assert_fail@plt+0x47b2c>
   59f98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59f9c:	ldr	r3, [r3, #4]
   59fa0:	str	r3, [fp, #-12]
   59fa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   59fa8:	add	r2, r3, #1
   59fac:	str	r2, [fp, #-28]	; 0xffffffe4
   59fb0:	mov	r2, r3
   59fb4:	ldr	r3, [fp, #-12]
   59fb8:	add	r3, r3, r2
   59fbc:	ldrb	r2, [r3]
   59fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59fc4:	sub	r3, r3, #1
   59fc8:	ldr	r1, [fp, #-12]
   59fcc:	add	r3, r1, r3
   59fd0:	ldrb	r3, [r3]
   59fd4:	cmp	r2, r3
   59fd8:	bne	5a1f0 <__assert_fail@plt+0x47b04>
   59fdc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   59fe0:	ldr	r2, [r3, #100]	; 0x64
   59fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   59fe8:	lsl	r3, r3, #2
   59fec:	add	r3, r2, r3
   59ff0:	ldr	r3, [r3]
   59ff4:	cmp	r3, #0
   59ff8:	beq	5a19c <__assert_fail@plt+0x47ab0>
   59ffc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5a000:	ldr	r2, [r3, #100]	; 0x64
   5a004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a008:	lsl	r3, r3, #2
   5a00c:	add	r3, r2, r3
   5a010:	ldr	r3, [r3]
   5a014:	add	r3, r3, #4
   5a018:	str	r3, [fp, #-64]	; 0xffffffc0
   5a01c:	mov	r3, #9
   5a020:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5a024:	ldr	r1, [fp, #-64]	; 0xffffffc0
   5a028:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5a02c:	bl	5a334 <__assert_fail@plt+0x47c48>
   5a030:	str	r0, [fp, #-68]	; 0xffffffbc
   5a034:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5a038:	cmn	r3, #1
   5a03c:	beq	5a1a4 <__assert_fail@plt+0x47ab8>
   5a040:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a044:	ldr	r3, [r3, #8]
   5a048:	cmp	r3, #0
   5a04c:	bne	5a098 <__assert_fail@plt+0x479ac>
   5a050:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a054:	ldr	r3, [r3]
   5a058:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a05c:	sub	r3, r2, r3
   5a060:	add	r3, r3, #1
   5a064:	mov	r1, r3
   5a068:	mov	r0, #12
   5a06c:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   5a070:	mov	r3, r0
   5a074:	mov	r2, r3
   5a078:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a07c:	str	r2, [r3, #8]
   5a080:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a084:	ldr	r3, [r3, #8]
   5a088:	cmp	r3, #0
   5a08c:	bne	5a098 <__assert_fail@plt+0x479ac>
   5a090:	mov	r3, #12
   5a094:	b	5a218 <__assert_fail@plt+0x47b2c>
   5a098:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a09c:	ldr	r1, [r3, #8]
   5a0a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a0a4:	ldr	r2, [r3, #4]
   5a0a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5a0ac:	ldr	r0, [r3]
   5a0b0:	mov	r3, #9
   5a0b4:	str	r3, [sp, #8]
   5a0b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a0bc:	str	r3, [sp, #4]
   5a0c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5a0c4:	str	r3, [sp]
   5a0c8:	mov	r3, r0
   5a0cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5a0d0:	bl	5a3f8 <__assert_fail@plt+0x47d0c>
   5a0d4:	str	r0, [fp, #-56]	; 0xffffffc8
   5a0d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5a0dc:	cmp	r3, #1
   5a0e0:	beq	5a1ac <__assert_fail@plt+0x47ac0>
   5a0e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5a0e8:	cmp	r3, #0
   5a0ec:	movne	r3, #1
   5a0f0:	moveq	r3, #0
   5a0f4:	uxtb	r3, r3
   5a0f8:	cmp	r3, #0
   5a0fc:	beq	5a108 <__assert_fail@plt+0x47a1c>
   5a100:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5a104:	b	5a218 <__assert_fail@plt+0x47b2c>
   5a108:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a10c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   5a110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   5a114:	bl	5de08 <__assert_fail@plt+0x4b71c>
   5a118:	str	r0, [fp, #-48]	; 0xffffffd0
   5a11c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5a120:	cmp	r3, #0
   5a124:	moveq	r3, #1
   5a128:	movne	r3, #0
   5a12c:	uxtb	r3, r3
   5a130:	cmp	r3, #0
   5a134:	beq	5a140 <__assert_fail@plt+0x47a54>
   5a138:	mov	r3, #12
   5a13c:	b	5a218 <__assert_fail@plt+0x47b2c>
   5a140:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a144:	str	r3, [sp]
   5a148:	ldr	r3, [fp, #-76]	; 0xffffffb4
   5a14c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5a150:	ldr	r1, [fp, #-44]	; 0xffffffd4
   5a154:	ldr	r0, [fp, #-72]	; 0xffffffb8
   5a158:	bl	5a22c <__assert_fail@plt+0x47b40>
   5a15c:	str	r0, [fp, #-56]	; 0xffffffc8
   5a160:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5a164:	ldr	r3, [r3, #4]
   5a168:	str	r3, [fp, #-12]
   5a16c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5a170:	cmp	r3, #1
   5a174:	beq	5a1b4 <__assert_fail@plt+0x47ac8>
   5a178:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5a17c:	cmp	r3, #0
   5a180:	movne	r3, #1
   5a184:	moveq	r3, #0
   5a188:	uxtb	r3, r3
   5a18c:	cmp	r3, #0
   5a190:	beq	5a1b8 <__assert_fail@plt+0x47acc>
   5a194:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5a198:	b	5a218 <__assert_fail@plt+0x47b2c>
   5a19c:	nop	{0}
   5a1a0:	b	5a1b8 <__assert_fail@plt+0x47acc>
   5a1a4:	nop	{0}
   5a1a8:	b	5a1b8 <__assert_fail@plt+0x47acc>
   5a1ac:	nop	{0}
   5a1b0:	b	5a1b8 <__assert_fail@plt+0x47acc>
   5a1b4:	nop	{0}
   5a1b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a1bc:	add	r3, r3, #1
   5a1c0:	str	r3, [fp, #-24]	; 0xffffffe8
   5a1c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a1c8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a1cc:	cmp	r2, r3
   5a1d0:	ble	59f04 <__assert_fail@plt+0x47818>
   5a1d4:	b	5a1f4 <__assert_fail@plt+0x47b08>
   5a1d8:	nop	{0}
   5a1dc:	b	5a1f4 <__assert_fail@plt+0x47b08>
   5a1e0:	nop	{0}
   5a1e4:	b	5a1f4 <__assert_fail@plt+0x47b08>
   5a1e8:	nop	{0}
   5a1ec:	b	5a1f4 <__assert_fail@plt+0x47b08>
   5a1f0:	nop	{0}
   5a1f4:	ldr	r3, [fp, #-8]
   5a1f8:	add	r3, r3, #1
   5a1fc:	str	r3, [fp, #-8]
   5a200:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5a204:	ldr	r3, [r3, #124]	; 0x7c
   5a208:	ldr	r2, [fp, #-8]
   5a20c:	cmp	r2, r3
   5a210:	blt	59cc0 <__assert_fail@plt+0x475d4>
   5a214:	mov	r3, #0
   5a218:	mov	r0, r3
   5a21c:	sub	sp, fp, #4
   5a220:	ldr	fp, [sp]
   5a224:	add	sp, sp, #4
   5a228:	pop	{pc}		; (ldr pc, [sp], #4)
   5a22c:	str	fp, [sp, #-8]!
   5a230:	str	lr, [sp, #4]
   5a234:	add	fp, sp, #4
   5a238:	sub	sp, sp, #40	; 0x28
   5a23c:	str	r0, [fp, #-16]
   5a240:	str	r1, [fp, #-20]	; 0xffffffec
   5a244:	str	r2, [fp, #-24]	; 0xffffffe8
   5a248:	str	r3, [fp, #-28]	; 0xffffffe4
   5a24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a250:	add	r1, r3, #8
   5a254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a258:	ldr	r2, [r3]
   5a25c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a260:	ldr	r0, [r3, #4]
   5a264:	mov	r3, #8
   5a268:	str	r3, [sp, #8]
   5a26c:	ldr	r3, [fp, #4]
   5a270:	str	r3, [sp, #4]
   5a274:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a278:	str	r3, [sp]
   5a27c:	mov	r3, r0
   5a280:	ldr	r0, [fp, #-16]
   5a284:	bl	5a3f8 <__assert_fail@plt+0x47d0c>
   5a288:	str	r0, [fp, #-8]
   5a28c:	ldr	r3, [fp, #-8]
   5a290:	cmp	r3, #0
   5a294:	beq	5a2a0 <__assert_fail@plt+0x47bb4>
   5a298:	ldr	r3, [fp, #-8]
   5a29c:	b	5a320 <__assert_fail@plt+0x47c34>
   5a2a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5a2a4:	ldr	r2, [r3]
   5a2a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a2ac:	ldr	r3, [r3, #4]
   5a2b0:	str	r3, [sp]
   5a2b4:	mov	r3, r2
   5a2b8:	ldr	r2, [fp, #4]
   5a2bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5a2c0:	ldr	r0, [fp, #-16]
   5a2c4:	bl	5d848 <__assert_fail@plt+0x4b15c>
   5a2c8:	str	r0, [fp, #-8]
   5a2cc:	ldr	r3, [fp, #-8]
   5a2d0:	cmp	r3, #0
   5a2d4:	movne	r3, #1
   5a2d8:	moveq	r3, #0
   5a2dc:	uxtb	r3, r3
   5a2e0:	cmp	r3, #0
   5a2e4:	beq	5a2f0 <__assert_fail@plt+0x47c04>
   5a2e8:	ldr	r3, [fp, #-8]
   5a2ec:	b	5a320 <__assert_fail@plt+0x47c34>
   5a2f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a2f4:	ldr	r2, [r3, #4]
   5a2f8:	ldr	r3, [fp, #4]
   5a2fc:	add	r2, r2, r3
   5a300:	ldr	r3, [fp, #-20]	; 0xffffffec
   5a304:	ldr	r3, [r3]
   5a308:	sub	r3, r2, r3
   5a30c:	str	r3, [fp, #-12]
   5a310:	ldr	r1, [fp, #-12]
   5a314:	ldr	r0, [fp, #-16]
   5a318:	bl	57254 <__assert_fail@plt+0x44b68>
   5a31c:	mov	r3, r0
   5a320:	mov	r0, r3
   5a324:	sub	sp, fp, #4
   5a328:	ldr	fp, [sp]
   5a32c:	add	sp, sp, #4
   5a330:	pop	{pc}		; (ldr pc, [sp], #4)
   5a334:	push	{fp}		; (str fp, [sp, #-4]!)
   5a338:	add	fp, sp, #0
   5a33c:	sub	sp, sp, #36	; 0x24
   5a340:	str	r0, [fp, #-24]	; 0xffffffe8
   5a344:	str	r1, [fp, #-28]	; 0xffffffe4
   5a348:	str	r2, [fp, #-32]	; 0xffffffe0
   5a34c:	str	r3, [fp, #-36]	; 0xffffffdc
   5a350:	mov	r3, #0
   5a354:	str	r3, [fp, #-8]
   5a358:	b	5a3d0 <__assert_fail@plt+0x47ce4>
   5a35c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a360:	ldr	r2, [r3, #8]
   5a364:	ldr	r3, [fp, #-8]
   5a368:	lsl	r3, r3, #2
   5a36c:	add	r3, r2, r3
   5a370:	ldr	r3, [r3]
   5a374:	str	r3, [fp, #-12]
   5a378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a37c:	ldr	r2, [r3]
   5a380:	ldr	r3, [fp, #-12]
   5a384:	lsl	r3, r3, #3
   5a388:	add	r3, r2, r3
   5a38c:	str	r3, [fp, #-16]
   5a390:	ldr	r3, [fp, #-16]
   5a394:	ldrb	r3, [r3, #4]
   5a398:	mov	r2, r3
   5a39c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5a3a0:	cmp	r3, r2
   5a3a4:	bne	5a3c4 <__assert_fail@plt+0x47cd8>
   5a3a8:	ldr	r3, [fp, #-16]
   5a3ac:	ldr	r3, [r3]
   5a3b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5a3b4:	cmp	r2, r3
   5a3b8:	bne	5a3c4 <__assert_fail@plt+0x47cd8>
   5a3bc:	ldr	r3, [fp, #-12]
   5a3c0:	b	5a3e8 <__assert_fail@plt+0x47cfc>
   5a3c4:	ldr	r3, [fp, #-8]
   5a3c8:	add	r3, r3, #1
   5a3cc:	str	r3, [fp, #-8]
   5a3d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a3d4:	ldr	r3, [r3, #4]
   5a3d8:	ldr	r2, [fp, #-8]
   5a3dc:	cmp	r2, r3
   5a3e0:	blt	5a35c <__assert_fail@plt+0x47c70>
   5a3e4:	mvn	r3, #0
   5a3e8:	mov	r0, r3
   5a3ec:	add	sp, fp, #0
   5a3f0:	pop	{fp}		; (ldr fp, [sp], #4)
   5a3f4:	bx	lr
   5a3f8:	str	fp, [sp, #-8]!
   5a3fc:	str	lr, [sp, #4]
   5a400:	add	fp, sp, #4
   5a404:	sub	sp, sp, #96	; 0x60
   5a408:	str	r0, [fp, #-80]	; 0xffffffb0
   5a40c:	str	r1, [fp, #-84]	; 0xffffffac
   5a410:	str	r2, [fp, #-88]	; 0xffffffa8
   5a414:	str	r3, [fp, #-92]	; 0xffffffa4
   5a418:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a41c:	ldr	r3, [r3, #84]	; 0x54
   5a420:	str	r3, [fp, #-20]	; 0xffffffec
   5a424:	mov	r3, #0
   5a428:	str	r3, [fp, #-60]	; 0xffffffc4
   5a42c:	mov	r3, #0
   5a430:	str	r3, [fp, #-16]
   5a434:	ldr	r3, [fp, #-20]	; 0xffffffec
   5a438:	ldr	r2, [r3]
   5a43c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5a440:	lsl	r3, r3, #3
   5a444:	add	r3, r2, r3
   5a448:	ldr	r3, [r3]
   5a44c:	str	r3, [fp, #-24]	; 0xffffffe8
   5a450:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a454:	ldr	r2, [r3, #120]	; 0x78
   5a458:	ldr	r3, [fp, #8]
   5a45c:	add	r2, r2, r3
   5a460:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a464:	ldr	r3, [r3, #4]
   5a468:	cmp	r2, r3
   5a46c:	movge	r3, #1
   5a470:	movlt	r3, #0
   5a474:	uxtb	r3, r3
   5a478:	cmp	r3, #0
   5a47c:	beq	5a598 <__assert_fail@plt+0x47eac>
   5a480:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a484:	ldr	r3, [r3, #4]
   5a488:	str	r3, [fp, #-28]	; 0xffffffe4
   5a48c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a490:	ldr	r2, [r3, #120]	; 0x78
   5a494:	ldr	r3, [fp, #8]
   5a498:	add	r3, r2, r3
   5a49c:	add	r3, r3, #1
   5a4a0:	str	r3, [fp, #-32]	; 0xffffffe0
   5a4a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5a4a8:	movw	r3, #65535	; 0xffff
   5a4ac:	movt	r3, #32767	; 0x7fff
   5a4b0:	sub	r3, r3, r2
   5a4b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5a4b8:	cmp	r2, r3
   5a4bc:	movgt	r3, #1
   5a4c0:	movle	r3, #0
   5a4c4:	uxtb	r3, r3
   5a4c8:	cmp	r3, #0
   5a4cc:	beq	5a4d8 <__assert_fail@plt+0x47dec>
   5a4d0:	mov	r3, #12
   5a4d4:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a4d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5a4dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5a4e0:	add	r3, r2, r3
   5a4e4:	str	r3, [fp, #-36]	; 0xffffffdc
   5a4e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5a4ec:	cmn	r3, #-1073741823	; 0xc0000001
   5a4f0:	movhi	r3, #1
   5a4f4:	movls	r3, #0
   5a4f8:	uxtb	r3, r3
   5a4fc:	cmp	r3, #0
   5a500:	beq	5a50c <__assert_fail@plt+0x47e20>
   5a504:	mov	r3, #12
   5a508:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a50c:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a510:	ldr	r2, [r3, #8]
   5a514:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5a518:	lsl	r3, r3, #2
   5a51c:	mov	r1, r3
   5a520:	mov	r0, r2
   5a524:	bl	446e8 <__assert_fail@plt+0x31ffc>
   5a528:	str	r0, [fp, #-40]	; 0xffffffd8
   5a52c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5a530:	cmp	r3, #0
   5a534:	moveq	r3, #1
   5a538:	movne	r3, #0
   5a53c:	uxtb	r3, r3
   5a540:	cmp	r3, #0
   5a544:	beq	5a550 <__assert_fail@plt+0x47e64>
   5a548:	mov	r3, #12
   5a54c:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a550:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a554:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5a558:	str	r2, [r3, #8]
   5a55c:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a560:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5a564:	str	r2, [r3, #4]
   5a568:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a56c:	lsl	r3, r3, #2
   5a570:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5a574:	add	r0, r2, r3
   5a578:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a57c:	ldr	r2, [r3, #4]
   5a580:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5a584:	sub	r3, r2, r3
   5a588:	lsl	r3, r3, #2
   5a58c:	mov	r2, r3
   5a590:	mov	r1, #0
   5a594:	bl	12434 <memset@plt>
   5a598:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a59c:	ldr	r3, [r3]
   5a5a0:	cmp	r3, #0
   5a5a4:	beq	5a5b4 <__assert_fail@plt+0x47ec8>
   5a5a8:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a5ac:	ldr	r3, [r3]
   5a5b0:	b	5a5b8 <__assert_fail@plt+0x47ecc>
   5a5b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   5a5b8:	str	r3, [fp, #-8]
   5a5bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a5c0:	ldr	r3, [r3, #100]	; 0x64
   5a5c4:	str	r3, [fp, #-44]	; 0xffffffd4
   5a5c8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a5cc:	ldr	r3, [r3, #40]	; 0x28
   5a5d0:	str	r3, [fp, #-48]	; 0xffffffd0
   5a5d4:	ldr	r3, [fp, #-84]	; 0xffffffac
   5a5d8:	ldr	r2, [r3, #8]
   5a5dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a5e0:	str	r2, [r3, #100]	; 0x64
   5a5e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a5e8:	ldr	r2, [fp, #-8]
   5a5ec:	str	r2, [r3, #40]	; 0x28
   5a5f0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5a5f4:	ldr	r3, [fp, #-8]
   5a5f8:	sub	r1, r3, #1
   5a5fc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a600:	ldr	r3, [r3, #88]	; 0x58
   5a604:	mov	r2, r3
   5a608:	bl	47620 <__assert_fail@plt+0x34f34>
   5a60c:	str	r0, [fp, #-52]	; 0xffffffcc
   5a610:	ldr	r2, [fp, #-8]
   5a614:	ldr	r3, [fp, #-92]	; 0xffffffa4
   5a618:	cmp	r2, r3
   5a61c:	bne	5a6a8 <__assert_fail@plt+0x47fbc>
   5a620:	sub	r3, fp, #72	; 0x48
   5a624:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5a628:	mov	r0, r3
   5a62c:	bl	478a4 <__assert_fail@plt+0x351b8>
   5a630:	mov	r3, r0
   5a634:	str	r3, [fp, #-60]	; 0xffffffc4
   5a638:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a63c:	cmp	r3, #0
   5a640:	movne	r3, #1
   5a644:	moveq	r3, #0
   5a648:	uxtb	r3, r3
   5a64c:	cmp	r3, #0
   5a650:	beq	5a65c <__assert_fail@plt+0x47f70>
   5a654:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a658:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a65c:	sub	r1, fp, #72	; 0x48
   5a660:	ldr	r3, [fp, #12]
   5a664:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a668:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a66c:	bl	5aee4 <__assert_fail@plt+0x487f8>
   5a670:	mov	r3, r0
   5a674:	str	r3, [fp, #-60]	; 0xffffffc4
   5a678:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a67c:	cmp	r3, #0
   5a680:	movne	r3, #1
   5a684:	moveq	r3, #0
   5a688:	uxtb	r3, r3
   5a68c:	cmp	r3, #0
   5a690:	beq	5a740 <__assert_fail@plt+0x48054>
   5a694:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a698:	mov	r0, r3
   5a69c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5a6a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a6a4:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a6a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a6ac:	ldr	r2, [r3, #100]	; 0x64
   5a6b0:	ldr	r3, [fp, #-8]
   5a6b4:	lsl	r3, r3, #2
   5a6b8:	add	r3, r2, r3
   5a6bc:	ldr	r3, [r3]
   5a6c0:	str	r3, [fp, #-16]
   5a6c4:	ldr	r3, [fp, #-16]
   5a6c8:	cmp	r3, #0
   5a6cc:	beq	5a72c <__assert_fail@plt+0x48040>
   5a6d0:	ldr	r3, [fp, #-16]
   5a6d4:	ldrb	r3, [r3, #52]	; 0x34
   5a6d8:	and	r3, r3, #64	; 0x40
   5a6dc:	uxtb	r3, r3
   5a6e0:	cmp	r3, #0
   5a6e4:	beq	5a72c <__assert_fail@plt+0x48040>
   5a6e8:	ldr	r3, [fp, #-16]
   5a6ec:	add	r2, r3, #4
   5a6f0:	sub	r3, fp, #72	; 0x48
   5a6f4:	mov	r1, r2
   5a6f8:	mov	r0, r3
   5a6fc:	bl	47a70 <__assert_fail@plt+0x35384>
   5a700:	mov	r3, r0
   5a704:	str	r3, [fp, #-60]	; 0xffffffc4
   5a708:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a70c:	cmp	r3, #0
   5a710:	movne	r3, #1
   5a714:	moveq	r3, #0
   5a718:	uxtb	r3, r3
   5a71c:	cmp	r3, #0
   5a720:	beq	5a740 <__assert_fail@plt+0x48054>
   5a724:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a728:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a72c:	sub	r3, fp, #72	; 0x48
   5a730:	mov	r2, #12
   5a734:	mov	r1, #0
   5a738:	mov	r0, r3
   5a73c:	bl	12434 <memset@plt>
   5a740:	ldr	r2, [fp, #-8]
   5a744:	ldr	r3, [fp, #-92]	; 0xffffffa4
   5a748:	cmp	r2, r3
   5a74c:	beq	5a774 <__assert_fail@plt+0x48088>
   5a750:	ldr	r3, [fp, #-16]
   5a754:	cmp	r3, #0
   5a758:	beq	5a854 <__assert_fail@plt+0x48168>
   5a75c:	ldr	r3, [fp, #-16]
   5a760:	ldrb	r3, [r3, #52]	; 0x34
   5a764:	and	r3, r3, #64	; 0x40
   5a768:	uxtb	r3, r3
   5a76c:	cmp	r3, #0
   5a770:	beq	5a854 <__assert_fail@plt+0x48168>
   5a774:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5a778:	cmp	r3, #0
   5a77c:	beq	5a7d4 <__assert_fail@plt+0x480e8>
   5a780:	sub	r1, fp, #72	; 0x48
   5a784:	ldr	r3, [fp, #12]
   5a788:	str	r3, [sp]
   5a78c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a790:	ldr	r2, [fp, #-8]
   5a794:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5a798:	bl	5b2cc <__assert_fail@plt+0x48be0>
   5a79c:	mov	r3, r0
   5a7a0:	str	r3, [fp, #-60]	; 0xffffffc4
   5a7a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a7a8:	cmp	r3, #0
   5a7ac:	movne	r3, #1
   5a7b0:	moveq	r3, #0
   5a7b4:	uxtb	r3, r3
   5a7b8:	cmp	r3, #0
   5a7bc:	beq	5a7d4 <__assert_fail@plt+0x480e8>
   5a7c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a7c4:	mov	r0, r3
   5a7c8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5a7cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a7d0:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a7d4:	sub	r2, fp, #72	; 0x48
   5a7d8:	sub	r0, fp, #60	; 0x3c
   5a7dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5a7e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   5a7e4:	bl	493a8 <__assert_fail@plt+0x36cbc>
   5a7e8:	str	r0, [fp, #-16]
   5a7ec:	ldr	r3, [fp, #-16]
   5a7f0:	cmp	r3, #0
   5a7f4:	moveq	r3, #1
   5a7f8:	movne	r3, #0
   5a7fc:	uxtb	r3, r3
   5a800:	cmp	r3, #0
   5a804:	beq	5a838 <__assert_fail@plt+0x4814c>
   5a808:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a80c:	cmp	r3, #0
   5a810:	movne	r3, #1
   5a814:	moveq	r3, #0
   5a818:	uxtb	r3, r3
   5a81c:	cmp	r3, #0
   5a820:	beq	5a838 <__assert_fail@plt+0x4814c>
   5a824:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a828:	mov	r0, r3
   5a82c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5a830:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a834:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a838:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a83c:	ldr	r2, [r3, #100]	; 0x64
   5a840:	ldr	r3, [fp, #-8]
   5a844:	lsl	r3, r3, #2
   5a848:	add	r3, r2, r3
   5a84c:	ldr	r2, [fp, #-16]
   5a850:	str	r2, [r3]
   5a854:	mov	r3, #0
   5a858:	str	r3, [fp, #-12]
   5a85c:	b	5aac8 <__assert_fail@plt+0x483dc>
   5a860:	mov	r3, #0
   5a864:	str	r3, [fp, #-68]	; 0xffffffbc
   5a868:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a86c:	ldr	r2, [r3, #100]	; 0x64
   5a870:	ldr	r3, [fp, #-8]
   5a874:	add	r3, r3, #1
   5a878:	lsl	r3, r3, #2
   5a87c:	add	r3, r2, r3
   5a880:	ldr	r3, [r3]
   5a884:	cmp	r3, #0
   5a888:	beq	5a8f4 <__assert_fail@plt+0x48208>
   5a88c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5a890:	ldr	r2, [r3, #100]	; 0x64
   5a894:	ldr	r3, [fp, #-8]
   5a898:	add	r3, r3, #1
   5a89c:	lsl	r3, r3, #2
   5a8a0:	add	r3, r2, r3
   5a8a4:	ldr	r3, [r3]
   5a8a8:	add	r2, r3, #4
   5a8ac:	sub	r3, fp, #72	; 0x48
   5a8b0:	mov	r1, r2
   5a8b4:	mov	r0, r3
   5a8b8:	bl	4839c <__assert_fail@plt+0x35cb0>
   5a8bc:	mov	r3, r0
   5a8c0:	str	r3, [fp, #-60]	; 0xffffffc4
   5a8c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a8c8:	cmp	r3, #0
   5a8cc:	movne	r3, #1
   5a8d0:	moveq	r3, #0
   5a8d4:	uxtb	r3, r3
   5a8d8:	cmp	r3, #0
   5a8dc:	beq	5a8f4 <__assert_fail@plt+0x48208>
   5a8e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a8e4:	mov	r0, r3
   5a8e8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5a8ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a8f0:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a8f4:	ldr	r3, [fp, #-16]
   5a8f8:	cmp	r3, #0
   5a8fc:	beq	5a950 <__assert_fail@plt+0x48264>
   5a900:	ldr	r3, [fp, #-16]
   5a904:	add	r2, r3, #16
   5a908:	sub	r3, fp, #72	; 0x48
   5a90c:	ldr	r1, [fp, #-8]
   5a910:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5a914:	bl	5aba8 <__assert_fail@plt+0x484bc>
   5a918:	mov	r3, r0
   5a91c:	str	r3, [fp, #-60]	; 0xffffffc4
   5a920:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a924:	cmp	r3, #0
   5a928:	movne	r3, #1
   5a92c:	moveq	r3, #0
   5a930:	uxtb	r3, r3
   5a934:	cmp	r3, #0
   5a938:	beq	5a950 <__assert_fail@plt+0x48264>
   5a93c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a940:	mov	r0, r3
   5a944:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5a948:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a94c:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a950:	ldr	r3, [fp, #-8]
   5a954:	add	r3, r3, #1
   5a958:	str	r3, [fp, #-8]
   5a95c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5a960:	cmp	r3, #0
   5a964:	beq	5aa08 <__assert_fail@plt+0x4831c>
   5a968:	sub	r1, fp, #72	; 0x48
   5a96c:	ldr	r3, [fp, #12]
   5a970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5a974:	ldr	r0, [fp, #-20]	; 0xffffffec
   5a978:	bl	5aee4 <__assert_fail@plt+0x487f8>
   5a97c:	mov	r3, r0
   5a980:	str	r3, [fp, #-60]	; 0xffffffc4
   5a984:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a988:	cmp	r3, #0
   5a98c:	movne	r3, #1
   5a990:	moveq	r3, #0
   5a994:	uxtb	r3, r3
   5a998:	cmp	r3, #0
   5a99c:	beq	5a9b4 <__assert_fail@plt+0x482c8>
   5a9a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a9a4:	mov	r0, r3
   5a9a8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5a9ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a9b0:	b	5ab94 <__assert_fail@plt+0x484a8>
   5a9b4:	sub	r1, fp, #72	; 0x48
   5a9b8:	ldr	r3, [fp, #12]
   5a9bc:	str	r3, [sp]
   5a9c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5a9c4:	ldr	r2, [fp, #-8]
   5a9c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5a9cc:	bl	5b2cc <__assert_fail@plt+0x48be0>
   5a9d0:	mov	r3, r0
   5a9d4:	str	r3, [fp, #-60]	; 0xffffffc4
   5a9d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5a9dc:	cmp	r3, #0
   5a9e0:	movne	r3, #1
   5a9e4:	moveq	r3, #0
   5a9e8:	uxtb	r3, r3
   5a9ec:	cmp	r3, #0
   5a9f0:	beq	5aa08 <__assert_fail@plt+0x4831c>
   5a9f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5a9f8:	mov	r0, r3
   5a9fc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5aa00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5aa04:	b	5ab94 <__assert_fail@plt+0x484a8>
   5aa08:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5aa0c:	ldr	r3, [fp, #-8]
   5aa10:	sub	r1, r3, #1
   5aa14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5aa18:	ldr	r3, [r3, #88]	; 0x58
   5aa1c:	mov	r2, r3
   5aa20:	bl	47620 <__assert_fail@plt+0x34f34>
   5aa24:	str	r0, [fp, #-52]	; 0xffffffcc
   5aa28:	sub	r2, fp, #72	; 0x48
   5aa2c:	sub	r0, fp, #60	; 0x3c
   5aa30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5aa34:	ldr	r1, [fp, #-20]	; 0xffffffec
   5aa38:	bl	493a8 <__assert_fail@plt+0x36cbc>
   5aa3c:	str	r0, [fp, #-16]
   5aa40:	ldr	r3, [fp, #-16]
   5aa44:	cmp	r3, #0
   5aa48:	moveq	r3, #1
   5aa4c:	movne	r3, #0
   5aa50:	uxtb	r3, r3
   5aa54:	cmp	r3, #0
   5aa58:	beq	5aa8c <__assert_fail@plt+0x483a0>
   5aa5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5aa60:	cmp	r3, #0
   5aa64:	movne	r3, #1
   5aa68:	moveq	r3, #0
   5aa6c:	uxtb	r3, r3
   5aa70:	cmp	r3, #0
   5aa74:	beq	5aa8c <__assert_fail@plt+0x483a0>
   5aa78:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5aa7c:	mov	r0, r3
   5aa80:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5aa84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5aa88:	b	5ab94 <__assert_fail@plt+0x484a8>
   5aa8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5aa90:	ldr	r2, [r3, #100]	; 0x64
   5aa94:	ldr	r3, [fp, #-8]
   5aa98:	lsl	r3, r3, #2
   5aa9c:	add	r3, r2, r3
   5aaa0:	ldr	r2, [fp, #-16]
   5aaa4:	str	r2, [r3]
   5aaa8:	ldr	r3, [fp, #-16]
   5aaac:	cmp	r3, #0
   5aab0:	bne	5aac0 <__assert_fail@plt+0x483d4>
   5aab4:	ldr	r3, [fp, #-12]
   5aab8:	add	r3, r3, #1
   5aabc:	b	5aac4 <__assert_fail@plt+0x483d8>
   5aac0:	mov	r3, #0
   5aac4:	str	r3, [fp, #-12]
   5aac8:	ldr	r2, [fp, #-8]
   5aacc:	ldr	r3, [fp, #8]
   5aad0:	cmp	r2, r3
   5aad4:	bge	5aaec <__assert_fail@plt+0x48400>
   5aad8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5aadc:	ldr	r3, [r3, #120]	; 0x78
   5aae0:	ldr	r2, [fp, #-12]
   5aae4:	cmp	r2, r3
   5aae8:	ble	5a860 <__assert_fail@plt+0x48174>
   5aaec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5aaf0:	mov	r0, r3
   5aaf4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5aaf8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5aafc:	ldr	r2, [r3, #100]	; 0x64
   5ab00:	ldr	r3, [fp, #8]
   5ab04:	lsl	r3, r3, #2
   5ab08:	add	r3, r2, r3
   5ab0c:	ldr	r3, [r3]
   5ab10:	cmp	r3, #0
   5ab14:	beq	5ab38 <__assert_fail@plt+0x4844c>
   5ab18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5ab1c:	ldr	r2, [r3, #100]	; 0x64
   5ab20:	ldr	r3, [fp, #8]
   5ab24:	lsl	r3, r3, #2
   5ab28:	add	r3, r2, r3
   5ab2c:	ldr	r3, [r3]
   5ab30:	add	r3, r3, #4
   5ab34:	b	5ab3c <__assert_fail@plt+0x48450>
   5ab38:	mov	r3, #0
   5ab3c:	str	r3, [fp, #-56]	; 0xffffffc8
   5ab40:	ldr	r3, [fp, #-84]	; 0xffffffac
   5ab44:	ldr	r2, [fp, #-8]
   5ab48:	str	r2, [r3]
   5ab4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5ab50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5ab54:	str	r2, [r3, #100]	; 0x64
   5ab58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5ab5c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5ab60:	str	r2, [r3, #40]	; 0x28
   5ab64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5ab68:	cmp	r3, #0
   5ab6c:	beq	5ab90 <__assert_fail@plt+0x484a4>
   5ab70:	ldr	r1, [fp, #4]
   5ab74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5ab78:	bl	48c24 <__assert_fail@plt+0x36538>
   5ab7c:	mov	r3, r0
   5ab80:	cmp	r3, #0
   5ab84:	beq	5ab90 <__assert_fail@plt+0x484a4>
   5ab88:	mov	r3, #0
   5ab8c:	b	5ab94 <__assert_fail@plt+0x484a8>
   5ab90:	mov	r3, #1
   5ab94:	mov	r0, r3
   5ab98:	sub	sp, fp, #4
   5ab9c:	ldr	fp, [sp]
   5aba0:	add	sp, sp, #4
   5aba4:	pop	{pc}		; (ldr pc, [sp], #4)
   5aba8:	str	r4, [sp, #-12]!
   5abac:	str	fp, [sp, #4]
   5abb0:	str	lr, [sp, #8]
   5abb4:	add	fp, sp, #8
   5abb8:	sub	sp, sp, #68	; 0x44
   5abbc:	str	r0, [fp, #-64]	; 0xffffffc0
   5abc0:	str	r1, [fp, #-68]	; 0xffffffbc
   5abc4:	str	r2, [fp, #-72]	; 0xffffffb8
   5abc8:	str	r3, [fp, #-76]	; 0xffffffb4
   5abcc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5abd0:	ldr	r3, [r3, #84]	; 0x54
   5abd4:	str	r3, [fp, #-24]	; 0xffffffe8
   5abd8:	mov	r3, #0
   5abdc:	str	r3, [fp, #-48]	; 0xffffffd0
   5abe0:	sub	r3, fp, #60	; 0x3c
   5abe4:	mov	r2, #12
   5abe8:	mov	r1, #0
   5abec:	mov	r0, r3
   5abf0:	bl	12434 <memset@plt>
   5abf4:	mov	r3, #0
   5abf8:	str	r3, [fp, #-16]
   5abfc:	b	5aea8 <__assert_fail@plt+0x487bc>
   5ac00:	mov	r3, #0
   5ac04:	str	r3, [fp, #-20]	; 0xffffffec
   5ac08:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5ac0c:	ldr	r2, [r3, #8]
   5ac10:	ldr	r3, [fp, #-16]
   5ac14:	lsl	r3, r3, #2
   5ac18:	add	r3, r2, r3
   5ac1c:	ldr	r3, [r3]
   5ac20:	str	r3, [fp, #-28]	; 0xffffffe4
   5ac24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ac28:	ldr	r2, [r3]
   5ac2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5ac30:	lsl	r3, r3, #3
   5ac34:	add	r3, r2, r3
   5ac38:	ldrb	r3, [r3, #4]
   5ac3c:	and	r3, r3, #8
   5ac40:	cmp	r3, #0
   5ac44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ac48:	ldr	r2, [r3]
   5ac4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5ac50:	lsl	r3, r3, #3
   5ac54:	add	r3, r2, r3
   5ac58:	ldrb	r3, [r3, #6]
   5ac5c:	and	r3, r3, #16
   5ac60:	uxtb	r3, r3
   5ac64:	cmp	r3, #0
   5ac68:	beq	5ae0c <__assert_fail@plt+0x48720>
   5ac6c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   5ac70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5ac74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5ac78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5ac7c:	bl	5cbf4 <__assert_fail@plt+0x4a508>
   5ac80:	str	r0, [fp, #-20]	; 0xffffffec
   5ac84:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ac88:	cmp	r3, #1
   5ac8c:	ble	5ae0c <__assert_fail@plt+0x48720>
   5ac90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ac94:	ldr	r2, [r3, #12]
   5ac98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5ac9c:	lsl	r3, r3, #2
   5aca0:	add	r3, r2, r3
   5aca4:	ldr	r3, [r3]
   5aca8:	str	r3, [fp, #-32]	; 0xffffffe0
   5acac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   5acb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5acb4:	add	r3, r2, r3
   5acb8:	str	r3, [fp, #-36]	; 0xffffffdc
   5acbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5acc0:	ldr	r2, [r3, #100]	; 0x64
   5acc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5acc8:	lsl	r3, r3, #2
   5accc:	add	r3, r2, r3
   5acd0:	ldr	r3, [r3]
   5acd4:	str	r3, [fp, #-40]	; 0xffffffd8
   5acd8:	mov	r3, #0
   5acdc:	str	r3, [fp, #-56]	; 0xffffffc8
   5ace0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5ace4:	cmp	r3, #0
   5ace8:	beq	5ad3c <__assert_fail@plt+0x48650>
   5acec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5acf0:	add	r2, r3, #4
   5acf4:	sub	r3, fp, #60	; 0x3c
   5acf8:	mov	r1, r2
   5acfc:	mov	r0, r3
   5ad00:	bl	4839c <__assert_fail@plt+0x35cb0>
   5ad04:	mov	r3, r0
   5ad08:	str	r3, [fp, #-48]	; 0xffffffd0
   5ad0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5ad10:	cmp	r3, #0
   5ad14:	movne	r3, #1
   5ad18:	moveq	r3, #0
   5ad1c:	uxtb	r3, r3
   5ad20:	cmp	r3, #0
   5ad24:	beq	5ad3c <__assert_fail@plt+0x48650>
   5ad28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5ad2c:	mov	r0, r3
   5ad30:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5ad34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5ad38:	b	5aecc <__assert_fail@plt+0x487e0>
   5ad3c:	sub	r3, fp, #60	; 0x3c
   5ad40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5ad44:	mov	r0, r3
   5ad48:	bl	487fc <__assert_fail@plt+0x36110>
   5ad4c:	mov	r3, r0
   5ad50:	strb	r3, [fp, #-41]	; 0xffffffd7
   5ad54:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   5ad58:	eor	r3, r3, #1
   5ad5c:	uxtb	r3, r3
   5ad60:	cmp	r3, #0
   5ad64:	beq	5ad7c <__assert_fail@plt+0x48690>
   5ad68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5ad6c:	mov	r0, r3
   5ad70:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5ad74:	mov	r3, #12
   5ad78:	b	5aecc <__assert_fail@plt+0x487e0>
   5ad7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5ad80:	ldr	r2, [r3, #100]	; 0x64
   5ad84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5ad88:	lsl	r3, r3, #2
   5ad8c:	add	r4, r2, r3
   5ad90:	sub	r2, fp, #60	; 0x3c
   5ad94:	sub	r3, fp, #48	; 0x30
   5ad98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5ad9c:	mov	r0, r3
   5ada0:	bl	4923c <__assert_fail@plt+0x36b50>
   5ada4:	mov	r3, r0
   5ada8:	str	r3, [r4]
   5adac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5adb0:	ldr	r2, [r3, #100]	; 0x64
   5adb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5adb8:	lsl	r3, r3, #2
   5adbc:	add	r3, r2, r3
   5adc0:	ldr	r3, [r3]
   5adc4:	cmp	r3, #0
   5adc8:	moveq	r3, #1
   5adcc:	movne	r3, #0
   5add0:	uxtb	r3, r3
   5add4:	cmp	r3, #0
   5add8:	beq	5ae0c <__assert_fail@plt+0x48720>
   5addc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5ade0:	cmp	r3, #0
   5ade4:	movne	r3, #1
   5ade8:	moveq	r3, #0
   5adec:	uxtb	r3, r3
   5adf0:	cmp	r3, #0
   5adf4:	beq	5ae0c <__assert_fail@plt+0x48720>
   5adf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5adfc:	mov	r0, r3
   5ae00:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5ae04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5ae08:	b	5aecc <__assert_fail@plt+0x487e0>
   5ae0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ae10:	cmp	r3, #0
   5ae14:	bne	5ae48 <__assert_fail@plt+0x4875c>
   5ae18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ae1c:	ldr	r2, [r3]
   5ae20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5ae24:	lsl	r3, r3, #3
   5ae28:	add	r3, r2, r3
   5ae2c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   5ae30:	mov	r1, r3
   5ae34:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5ae38:	bl	5d164 <__assert_fail@plt+0x4aa78>
   5ae3c:	mov	r3, r0
   5ae40:	cmp	r3, #0
   5ae44:	beq	5ae9c <__assert_fail@plt+0x487b0>
   5ae48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ae4c:	ldr	r2, [r3, #12]
   5ae50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5ae54:	lsl	r3, r3, #2
   5ae58:	add	r3, r2, r3
   5ae5c:	ldr	r3, [r3]
   5ae60:	mov	r1, r3
   5ae64:	ldr	r0, [fp, #-76]	; 0xffffffb4
   5ae68:	bl	487fc <__assert_fail@plt+0x36110>
   5ae6c:	mov	r3, r0
   5ae70:	strb	r3, [fp, #-41]	; 0xffffffd7
   5ae74:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   5ae78:	eor	r3, r3, #1
   5ae7c:	uxtb	r3, r3
   5ae80:	cmp	r3, #0
   5ae84:	beq	5ae9c <__assert_fail@plt+0x487b0>
   5ae88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5ae8c:	mov	r0, r3
   5ae90:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5ae94:	mov	r3, #12
   5ae98:	b	5aecc <__assert_fail@plt+0x487e0>
   5ae9c:	ldr	r3, [fp, #-16]
   5aea0:	add	r3, r3, #1
   5aea4:	str	r3, [fp, #-16]
   5aea8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   5aeac:	ldr	r3, [r3, #4]
   5aeb0:	ldr	r2, [fp, #-16]
   5aeb4:	cmp	r2, r3
   5aeb8:	blt	5ac00 <__assert_fail@plt+0x48514>
   5aebc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5aec0:	mov	r0, r3
   5aec4:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5aec8:	mov	r3, #0
   5aecc:	mov	r0, r3
   5aed0:	sub	sp, fp, #8
   5aed4:	ldr	r4, [sp]
   5aed8:	ldr	fp, [sp, #4]
   5aedc:	add	sp, sp, #8
   5aee0:	pop	{pc}		; (ldr pc, [sp], #4)
   5aee4:	str	fp, [sp, #-8]!
   5aee8:	str	lr, [sp, #4]
   5aeec:	add	fp, sp, #4
   5aef0:	sub	sp, sp, #56	; 0x38
   5aef4:	str	r0, [fp, #-40]	; 0xffffffd8
   5aef8:	str	r1, [fp, #-44]	; 0xffffffd4
   5aefc:	str	r2, [fp, #-48]	; 0xffffffd0
   5af00:	str	r3, [fp, #-52]	; 0xffffffcc
   5af04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5af08:	ldr	r3, [r3, #4]
   5af0c:	cmp	r3, #0
   5af10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5af14:	ldr	r2, [r3, #4]
   5af18:	sub	r3, fp, #36	; 0x24
   5af1c:	mov	r1, r2
   5af20:	mov	r0, r3
   5af24:	bl	47814 <__assert_fail@plt+0x35128>
   5af28:	str	r0, [fp, #-12]
   5af2c:	ldr	r3, [fp, #-12]
   5af30:	cmp	r3, #0
   5af34:	movne	r3, #1
   5af38:	moveq	r3, #0
   5af3c:	uxtb	r3, r3
   5af40:	cmp	r3, #0
   5af44:	beq	5af50 <__assert_fail@plt+0x48864>
   5af48:	ldr	r3, [fp, #-12]
   5af4c:	b	5b0a4 <__assert_fail@plt+0x489b8>
   5af50:	mov	r3, #0
   5af54:	str	r3, [fp, #-8]
   5af58:	b	5b060 <__assert_fail@plt+0x48974>
   5af5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5af60:	ldr	r2, [r3, #8]
   5af64:	ldr	r3, [fp, #-8]
   5af68:	lsl	r3, r3, #2
   5af6c:	add	r3, r2, r3
   5af70:	ldr	r3, [r3]
   5af74:	str	r3, [fp, #-16]
   5af78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5af7c:	ldr	r1, [r3, #24]
   5af80:	ldr	r2, [fp, #-16]
   5af84:	mov	r3, r2
   5af88:	lsl	r3, r3, #1
   5af8c:	add	r3, r3, r2
   5af90:	lsl	r3, r3, #2
   5af94:	add	r3, r1, r3
   5af98:	str	r3, [fp, #-20]	; 0xffffffec
   5af9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5afa0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   5afa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   5afa8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5afac:	bl	5a334 <__assert_fail@plt+0x47c48>
   5afb0:	str	r0, [fp, #-24]	; 0xffffffe8
   5afb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5afb8:	cmn	r3, #1
   5afbc:	bne	5b004 <__assert_fail@plt+0x48918>
   5afc0:	sub	r3, fp, #36	; 0x24
   5afc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   5afc8:	mov	r0, r3
   5afcc:	bl	4839c <__assert_fail@plt+0x35cb0>
   5afd0:	str	r0, [fp, #-12]
   5afd4:	ldr	r3, [fp, #-12]
   5afd8:	cmp	r3, #0
   5afdc:	movne	r3, #1
   5afe0:	moveq	r3, #0
   5afe4:	uxtb	r3, r3
   5afe8:	cmp	r3, #0
   5afec:	beq	5b054 <__assert_fail@plt+0x48968>
   5aff0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5aff4:	mov	r0, r3
   5aff8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5affc:	ldr	r3, [fp, #-12]
   5b000:	b	5b0a4 <__assert_fail@plt+0x489b8>
   5b004:	sub	r1, fp, #36	; 0x24
   5b008:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b00c:	str	r3, [sp]
   5b010:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b014:	ldr	r2, [fp, #-16]
   5b018:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5b01c:	bl	5b0b8 <__assert_fail@plt+0x489cc>
   5b020:	str	r0, [fp, #-12]
   5b024:	ldr	r3, [fp, #-12]
   5b028:	cmp	r3, #0
   5b02c:	movne	r3, #1
   5b030:	moveq	r3, #0
   5b034:	uxtb	r3, r3
   5b038:	cmp	r3, #0
   5b03c:	beq	5b054 <__assert_fail@plt+0x48968>
   5b040:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b044:	mov	r0, r3
   5b048:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5b04c:	ldr	r3, [fp, #-12]
   5b050:	b	5b0a4 <__assert_fail@plt+0x489b8>
   5b054:	ldr	r3, [fp, #-8]
   5b058:	add	r3, r3, #1
   5b05c:	str	r3, [fp, #-8]
   5b060:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5b064:	ldr	r3, [r3, #4]
   5b068:	ldr	r2, [fp, #-8]
   5b06c:	cmp	r2, r3
   5b070:	blt	5af5c <__assert_fail@plt+0x48870>
   5b074:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5b078:	ldr	r3, [r3, #8]
   5b07c:	mov	r0, r3
   5b080:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5b084:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5b088:	mov	r0, r3
   5b08c:	sub	r1, fp, #36	; 0x24
   5b090:	ldrd	r2, [r1]
   5b094:	strd	r2, [r0]
   5b098:	ldr	r3, [r1, #8]
   5b09c:	str	r3, [r0, #8]
   5b0a0:	mov	r3, #0
   5b0a4:	mov	r0, r3
   5b0a8:	sub	sp, fp, #4
   5b0ac:	ldr	fp, [sp]
   5b0b0:	add	sp, sp, #4
   5b0b4:	pop	{pc}		; (ldr pc, [sp], #4)
   5b0b8:	str	fp, [sp, #-8]!
   5b0bc:	str	lr, [sp, #4]
   5b0c0:	add	fp, sp, #4
   5b0c4:	sub	sp, sp, #40	; 0x28
   5b0c8:	str	r0, [fp, #-24]	; 0xffffffe8
   5b0cc:	str	r1, [fp, #-28]	; 0xffffffe4
   5b0d0:	str	r2, [fp, #-32]	; 0xffffffe0
   5b0d4:	str	r3, [fp, #-36]	; 0xffffffdc
   5b0d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5b0dc:	str	r3, [fp, #-8]
   5b0e0:	b	5b28c <__assert_fail@plt+0x48ba0>
   5b0e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b0e8:	ldr	r2, [r3]
   5b0ec:	ldr	r3, [fp, #-8]
   5b0f0:	lsl	r3, r3, #3
   5b0f4:	add	r3, r2, r3
   5b0f8:	ldrb	r3, [r3, #4]
   5b0fc:	mov	r2, r3
   5b100:	ldr	r3, [fp, #4]
   5b104:	cmp	r3, r2
   5b108:	bne	5b16c <__assert_fail@plt+0x48a80>
   5b10c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b110:	ldr	r2, [r3]
   5b114:	ldr	r3, [fp, #-8]
   5b118:	lsl	r3, r3, #3
   5b11c:	add	r3, r2, r3
   5b120:	ldr	r3, [r3]
   5b124:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5b128:	cmp	r2, r3
   5b12c:	bne	5b16c <__assert_fail@plt+0x48a80>
   5b130:	ldr	r3, [fp, #4]
   5b134:	cmp	r3, #9
   5b138:	bne	5b2a8 <__assert_fail@plt+0x48bbc>
   5b13c:	ldr	r1, [fp, #-8]
   5b140:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5b144:	bl	487fc <__assert_fail@plt+0x36110>
   5b148:	mov	r3, r0
   5b14c:	strb	r3, [fp, #-9]
   5b150:	ldrb	r3, [fp, #-9]
   5b154:	eor	r3, r3, #1
   5b158:	uxtb	r3, r3
   5b15c:	cmp	r3, #0
   5b160:	beq	5b2a8 <__assert_fail@plt+0x48bbc>
   5b164:	mov	r3, #12
   5b168:	b	5b2b8 <__assert_fail@plt+0x48bcc>
   5b16c:	ldr	r1, [fp, #-8]
   5b170:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5b174:	bl	487fc <__assert_fail@plt+0x36110>
   5b178:	mov	r3, r0
   5b17c:	strb	r3, [fp, #-9]
   5b180:	ldrb	r3, [fp, #-9]
   5b184:	eor	r3, r3, #1
   5b188:	uxtb	r3, r3
   5b18c:	cmp	r3, #0
   5b190:	beq	5b19c <__assert_fail@plt+0x48ab0>
   5b194:	mov	r3, #12
   5b198:	b	5b2b8 <__assert_fail@plt+0x48bcc>
   5b19c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b1a0:	ldr	r1, [r3, #20]
   5b1a4:	ldr	r2, [fp, #-8]
   5b1a8:	mov	r3, r2
   5b1ac:	lsl	r3, r3, #1
   5b1b0:	add	r3, r3, r2
   5b1b4:	lsl	r3, r3, #2
   5b1b8:	add	r3, r1, r3
   5b1bc:	ldr	r3, [r3, #4]
   5b1c0:	cmp	r3, #0
   5b1c4:	beq	5b2b0 <__assert_fail@plt+0x48bc4>
   5b1c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b1cc:	ldr	r1, [r3, #20]
   5b1d0:	ldr	r2, [fp, #-8]
   5b1d4:	mov	r3, r2
   5b1d8:	lsl	r3, r3, #1
   5b1dc:	add	r3, r3, r2
   5b1e0:	lsl	r3, r3, #2
   5b1e4:	add	r3, r1, r3
   5b1e8:	ldr	r3, [r3, #4]
   5b1ec:	cmp	r3, #2
   5b1f0:	bne	5b260 <__assert_fail@plt+0x48b74>
   5b1f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b1f8:	ldr	r1, [r3, #20]
   5b1fc:	ldr	r2, [fp, #-8]
   5b200:	mov	r3, r2
   5b204:	lsl	r3, r3, #1
   5b208:	add	r3, r3, r2
   5b20c:	lsl	r3, r3, #2
   5b210:	add	r3, r1, r3
   5b214:	ldr	r3, [r3, #8]
   5b218:	add	r3, r3, #4
   5b21c:	ldr	r2, [r3]
   5b220:	ldr	r3, [fp, #4]
   5b224:	str	r3, [sp]
   5b228:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b22c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5b230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5b234:	bl	5b0b8 <__assert_fail@plt+0x489cc>
   5b238:	str	r0, [fp, #-16]
   5b23c:	ldr	r3, [fp, #-16]
   5b240:	cmp	r3, #0
   5b244:	movne	r3, #1
   5b248:	moveq	r3, #0
   5b24c:	uxtb	r3, r3
   5b250:	cmp	r3, #0
   5b254:	beq	5b260 <__assert_fail@plt+0x48b74>
   5b258:	ldr	r3, [fp, #-16]
   5b25c:	b	5b2b8 <__assert_fail@plt+0x48bcc>
   5b260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b264:	ldr	r1, [r3, #20]
   5b268:	ldr	r2, [fp, #-8]
   5b26c:	mov	r3, r2
   5b270:	lsl	r3, r3, #1
   5b274:	add	r3, r3, r2
   5b278:	lsl	r3, r3, #2
   5b27c:	add	r3, r1, r3
   5b280:	ldr	r3, [r3, #8]
   5b284:	ldr	r3, [r3]
   5b288:	str	r3, [fp, #-8]
   5b28c:	ldr	r1, [fp, #-8]
   5b290:	ldr	r0, [fp, #-28]	; 0xffffffe4
   5b294:	bl	48c24 <__assert_fail@plt+0x36538>
   5b298:	mov	r3, r0
   5b29c:	cmp	r3, #0
   5b2a0:	beq	5b0e4 <__assert_fail@plt+0x489f8>
   5b2a4:	b	5b2b4 <__assert_fail@plt+0x48bc8>
   5b2a8:	nop	{0}
   5b2ac:	b	5b2b4 <__assert_fail@plt+0x48bc8>
   5b2b0:	nop	{0}
   5b2b4:	mov	r3, #0
   5b2b8:	mov	r0, r3
   5b2bc:	sub	sp, fp, #4
   5b2c0:	ldr	fp, [sp]
   5b2c4:	add	sp, sp, #4
   5b2c8:	pop	{pc}		; (ldr pc, [sp], #4)
   5b2cc:	str	r4, [sp, #-12]!
   5b2d0:	str	fp, [sp, #4]
   5b2d4:	str	lr, [sp, #8]
   5b2d8:	add	fp, sp, #8
   5b2dc:	sub	sp, sp, #84	; 0x54
   5b2e0:	str	r0, [fp, #-80]	; 0xffffffb0
   5b2e4:	str	r1, [fp, #-84]	; 0xffffffac
   5b2e8:	str	r2, [fp, #-88]	; 0xffffffa8
   5b2ec:	str	r3, [fp, #-92]	; 0xffffffa4
   5b2f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5b2f4:	ldr	r3, [r3, #84]	; 0x54
   5b2f8:	str	r3, [fp, #-20]	; 0xffffffec
   5b2fc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   5b300:	ldr	r0, [fp, #-80]	; 0xffffffb0
   5b304:	bl	5db60 <__assert_fail@plt+0x4b474>
   5b308:	str	r0, [fp, #-24]	; 0xffffffe8
   5b30c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5b310:	cmn	r3, #1
   5b314:	bne	5b320 <__assert_fail@plt+0x48c34>
   5b318:	mov	r3, #0
   5b31c:	b	5b6f0 <__assert_fail@plt+0x49004>
   5b320:	nop	{0}
   5b324:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5b328:	ldr	r1, [r3, #116]	; 0x74
   5b32c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5b330:	mov	r3, r2
   5b334:	lsl	r3, r3, #1
   5b338:	add	r3, r3, r2
   5b33c:	lsl	r3, r3, #3
   5b340:	add	r3, r1, r3
   5b344:	str	r3, [fp, #-16]
   5b348:	ldr	r3, [fp, #-16]
   5b34c:	ldr	r3, [r3]
   5b350:	mov	r1, r3
   5b354:	ldr	r0, [fp, #-84]	; 0xffffffac
   5b358:	bl	48c24 <__assert_fail@plt+0x36538>
   5b35c:	mov	r3, r0
   5b360:	cmp	r3, #0
   5b364:	beq	5b6c0 <__assert_fail@plt+0x48fd4>
   5b368:	ldr	r3, [fp, #-16]
   5b36c:	ldr	r2, [r3, #12]
   5b370:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5b374:	add	r2, r2, r3
   5b378:	ldr	r3, [fp, #-16]
   5b37c:	ldr	r3, [r3, #8]
   5b380:	sub	r3, r2, r3
   5b384:	str	r3, [fp, #-28]	; 0xffffffe4
   5b388:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5b38c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   5b390:	cmp	r2, r3
   5b394:	bne	5b4d4 <__assert_fail@plt+0x48de8>
   5b398:	ldr	r3, [fp, #-20]	; 0xffffffec
   5b39c:	ldr	r2, [r3, #20]
   5b3a0:	ldr	r3, [fp, #-16]
   5b3a4:	ldr	r3, [r3]
   5b3a8:	mov	r1, r3
   5b3ac:	mov	r3, r1
   5b3b0:	lsl	r3, r3, #1
   5b3b4:	add	r3, r3, r1
   5b3b8:	lsl	r3, r3, #2
   5b3bc:	add	r3, r2, r3
   5b3c0:	ldr	r3, [r3, #8]
   5b3c4:	ldr	r3, [r3]
   5b3c8:	str	r3, [fp, #-32]	; 0xffffffe0
   5b3cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b3d0:	ldr	r0, [fp, #-84]	; 0xffffffac
   5b3d4:	bl	48c24 <__assert_fail@plt+0x36538>
   5b3d8:	mov	r3, r0
   5b3dc:	cmp	r3, #0
   5b3e0:	bne	5b6c8 <__assert_fail@plt+0x48fdc>
   5b3e4:	sub	r3, fp, #60	; 0x3c
   5b3e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b3ec:	mov	r0, r3
   5b3f0:	bl	478a4 <__assert_fail@plt+0x351b8>
   5b3f4:	mov	r3, r0
   5b3f8:	str	r3, [fp, #-48]	; 0xffffffd0
   5b3fc:	sub	r1, fp, #60	; 0x3c
   5b400:	ldr	r3, [fp, #4]
   5b404:	ldr	r2, [fp, #-92]	; 0xffffffa4
   5b408:	ldr	r0, [fp, #-20]	; 0xffffffec
   5b40c:	bl	5aee4 <__assert_fail@plt+0x487f8>
   5b410:	str	r0, [fp, #-36]	; 0xffffffdc
   5b414:	sub	r3, fp, #60	; 0x3c
   5b418:	mov	r1, r3
   5b41c:	ldr	r0, [fp, #-84]	; 0xffffffac
   5b420:	bl	4839c <__assert_fail@plt+0x35cb0>
   5b424:	str	r0, [fp, #-40]	; 0xffffffd8
   5b428:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5b42c:	mov	r0, r3
   5b430:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5b434:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b438:	cmp	r3, #0
   5b43c:	movne	r3, #1
   5b440:	moveq	r3, #0
   5b444:	uxtb	r3, r3
   5b448:	cmp	r3, #0
   5b44c:	bne	5b46c <__assert_fail@plt+0x48d80>
   5b450:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b454:	cmp	r3, #0
   5b458:	movne	r3, #1
   5b45c:	moveq	r3, #0
   5b460:	uxtb	r3, r3
   5b464:	cmp	r3, #0
   5b468:	beq	5b474 <__assert_fail@plt+0x48d88>
   5b46c:	mov	r3, #1
   5b470:	b	5b478 <__assert_fail@plt+0x48d8c>
   5b474:	mov	r3, #0
   5b478:	cmp	r3, #0
   5b47c:	bne	5b49c <__assert_fail@plt+0x48db0>
   5b480:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5b484:	cmp	r3, #0
   5b488:	movne	r3, #1
   5b48c:	moveq	r3, #0
   5b490:	uxtb	r3, r3
   5b494:	cmp	r3, #0
   5b498:	beq	5b324 <__assert_fail@plt+0x48c38>
   5b49c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b4a0:	cmp	r3, #0
   5b4a4:	bne	5b4c4 <__assert_fail@plt+0x48dd8>
   5b4a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b4ac:	cmp	r3, #0
   5b4b0:	beq	5b4bc <__assert_fail@plt+0x48dd0>
   5b4b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b4b8:	b	5b4c8 <__assert_fail@plt+0x48ddc>
   5b4bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5b4c0:	b	5b4c8 <__assert_fail@plt+0x48ddc>
   5b4c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b4c8:	str	r3, [fp, #-48]	; 0xffffffd0
   5b4cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b4d0:	b	5b6f0 <__assert_fail@plt+0x49004>
   5b4d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5b4d8:	ldr	r2, [r3, #12]
   5b4dc:	ldr	r3, [fp, #-16]
   5b4e0:	ldr	r3, [r3]
   5b4e4:	lsl	r3, r3, #2
   5b4e8:	add	r3, r2, r3
   5b4ec:	ldr	r3, [r3]
   5b4f0:	str	r3, [fp, #-32]	; 0xffffffe0
   5b4f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5b4f8:	ldr	r2, [r3, #100]	; 0x64
   5b4fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b500:	lsl	r3, r3, #2
   5b504:	add	r3, r2, r3
   5b508:	ldr	r3, [r3]
   5b50c:	cmp	r3, #0
   5b510:	beq	5b5f4 <__assert_fail@plt+0x48f08>
   5b514:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5b518:	ldr	r2, [r3, #100]	; 0x64
   5b51c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b520:	lsl	r3, r3, #2
   5b524:	add	r3, r2, r3
   5b528:	ldr	r3, [r3]
   5b52c:	add	r3, r3, #4
   5b530:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b534:	mov	r0, r3
   5b538:	bl	48c24 <__assert_fail@plt+0x36538>
   5b53c:	mov	r3, r0
   5b540:	cmp	r3, #0
   5b544:	bne	5b6d0 <__assert_fail@plt+0x48fe4>
   5b548:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5b54c:	ldr	r2, [r3, #100]	; 0x64
   5b550:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b554:	lsl	r3, r3, #2
   5b558:	add	r3, r2, r3
   5b55c:	ldr	r3, [r3]
   5b560:	add	r2, r3, #4
   5b564:	sub	r3, fp, #72	; 0x48
   5b568:	mov	r1, r2
   5b56c:	mov	r0, r3
   5b570:	bl	47a70 <__assert_fail@plt+0x35384>
   5b574:	mov	r3, r0
   5b578:	str	r3, [fp, #-48]	; 0xffffffd0
   5b57c:	sub	r3, fp, #72	; 0x48
   5b580:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b584:	mov	r0, r3
   5b588:	bl	487fc <__assert_fail@plt+0x36110>
   5b58c:	mov	r3, r0
   5b590:	strb	r3, [fp, #-41]	; 0xffffffd7
   5b594:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b598:	cmp	r3, #0
   5b59c:	movne	r3, #1
   5b5a0:	moveq	r3, #0
   5b5a4:	uxtb	r3, r3
   5b5a8:	cmp	r3, #0
   5b5ac:	bne	5b5c4 <__assert_fail@plt+0x48ed8>
   5b5b0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   5b5b4:	eor	r3, r3, #1
   5b5b8:	uxtb	r3, r3
   5b5bc:	cmp	r3, #0
   5b5c0:	beq	5b630 <__assert_fail@plt+0x48f44>
   5b5c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5b5c8:	mov	r0, r3
   5b5cc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5b5d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b5d4:	cmp	r3, #0
   5b5d8:	beq	5b5e4 <__assert_fail@plt+0x48ef8>
   5b5dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b5e0:	b	5b5e8 <__assert_fail@plt+0x48efc>
   5b5e4:	mov	r3, #12
   5b5e8:	str	r3, [fp, #-48]	; 0xffffffd0
   5b5ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b5f0:	b	5b6f0 <__assert_fail@plt+0x49004>
   5b5f4:	sub	r3, fp, #72	; 0x48
   5b5f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5b5fc:	mov	r0, r3
   5b600:	bl	478a4 <__assert_fail@plt+0x351b8>
   5b604:	mov	r3, r0
   5b608:	str	r3, [fp, #-48]	; 0xffffffd0
   5b60c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b610:	cmp	r3, #0
   5b614:	movne	r3, #1
   5b618:	moveq	r3, #0
   5b61c:	uxtb	r3, r3
   5b620:	cmp	r3, #0
   5b624:	beq	5b630 <__assert_fail@plt+0x48f44>
   5b628:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b62c:	b	5b6f0 <__assert_fail@plt+0x49004>
   5b630:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5b634:	ldr	r2, [r3, #100]	; 0x64
   5b638:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b63c:	lsl	r3, r3, #2
   5b640:	add	r4, r2, r3
   5b644:	sub	r2, fp, #72	; 0x48
   5b648:	sub	r3, fp, #48	; 0x30
   5b64c:	ldr	r1, [fp, #-20]	; 0xffffffec
   5b650:	mov	r0, r3
   5b654:	bl	4923c <__assert_fail@plt+0x36b50>
   5b658:	mov	r3, r0
   5b65c:	str	r3, [r4]
   5b660:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5b664:	mov	r0, r3
   5b668:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5b66c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   5b670:	ldr	r2, [r3, #100]	; 0x64
   5b674:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5b678:	lsl	r3, r3, #2
   5b67c:	add	r3, r2, r3
   5b680:	ldr	r3, [r3]
   5b684:	cmp	r3, #0
   5b688:	moveq	r3, #1
   5b68c:	movne	r3, #0
   5b690:	uxtb	r3, r3
   5b694:	cmp	r3, #0
   5b698:	beq	5b6d4 <__assert_fail@plt+0x48fe8>
   5b69c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b6a0:	cmp	r3, #0
   5b6a4:	movne	r3, #1
   5b6a8:	moveq	r3, #0
   5b6ac:	uxtb	r3, r3
   5b6b0:	cmp	r3, #0
   5b6b4:	beq	5b6d4 <__assert_fail@plt+0x48fe8>
   5b6b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5b6bc:	b	5b6f0 <__assert_fail@plt+0x49004>
   5b6c0:	nop	{0}
   5b6c4:	b	5b6d4 <__assert_fail@plt+0x48fe8>
   5b6c8:	nop	{0}
   5b6cc:	b	5b6d4 <__assert_fail@plt+0x48fe8>
   5b6d0:	nop	{0}
   5b6d4:	ldr	r3, [fp, #-16]
   5b6d8:	add	r2, r3, #24
   5b6dc:	str	r2, [fp, #-16]
   5b6e0:	ldrb	r3, [r3, #20]
   5b6e4:	cmp	r3, #0
   5b6e8:	bne	5b348 <__assert_fail@plt+0x48c5c>
   5b6ec:	mov	r3, #0
   5b6f0:	mov	r0, r3
   5b6f4:	sub	sp, fp, #8
   5b6f8:	ldr	r4, [sp]
   5b6fc:	ldr	fp, [sp, #4]
   5b700:	add	sp, sp, #8
   5b704:	pop	{pc}		; (ldr pc, [sp], #4)
   5b708:	str	fp, [sp, #-8]!
   5b70c:	str	lr, [sp, #4]
   5b710:	add	fp, sp, #4
   5b714:	sub	sp, sp, #14400	; 0x3840
   5b718:	sub	sp, sp, #32
   5b71c:	sub	r3, fp, #12288	; 0x3000
   5b720:	sub	r3, r3, #4
   5b724:	str	r0, [r3, #-2140]	; 0xfffff7a4
   5b728:	sub	r3, fp, #12288	; 0x3000
   5b72c:	sub	r3, r3, #4
   5b730:	str	r1, [r3, #-2144]	; 0xfffff7a0
   5b734:	mov	r3, #0
   5b738:	strb	r3, [fp, #-17]	; 0xffffffef
   5b73c:	sub	r3, fp, #12288	; 0x3000
   5b740:	sub	r3, r3, #4
   5b744:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5b748:	mov	r2, #0
   5b74c:	str	r2, [r3, #44]	; 0x2c
   5b750:	sub	r3, fp, #12288	; 0x3000
   5b754:	sub	r3, r3, #4
   5b758:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5b75c:	ldr	r2, [r3, #44]	; 0x2c
   5b760:	sub	r3, fp, #12288	; 0x3000
   5b764:	sub	r3, r3, #4
   5b768:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5b76c:	str	r2, [r3, #48]	; 0x30
   5b770:	sub	r3, fp, #14400	; 0x3840
   5b774:	sub	r3, r3, #4
   5b778:	sub	r3, r3, #20
   5b77c:	sub	r2, fp, #6208	; 0x1840
   5b780:	sub	r2, r2, #4
   5b784:	sub	r2, r2, #20
   5b788:	sub	r1, fp, #12288	; 0x3000
   5b78c:	sub	r1, r1, #4
   5b790:	sub	r0, fp, #12288	; 0x3000
   5b794:	sub	r0, r0, #4
   5b798:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   5b79c:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   5b7a0:	bl	5c1b4 <__assert_fail@plt+0x49ac8>
   5b7a4:	str	r0, [fp, #-36]	; 0xffffffdc
   5b7a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b7ac:	cmp	r3, #0
   5b7b0:	movle	r3, #1
   5b7b4:	movgt	r3, #0
   5b7b8:	uxtb	r3, r3
   5b7bc:	cmp	r3, #0
   5b7c0:	beq	5b834 <__assert_fail@plt+0x49148>
   5b7c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b7c8:	cmp	r3, #0
   5b7cc:	bne	5b82c <__assert_fail@plt+0x49140>
   5b7d0:	mov	r1, #256	; 0x100
   5b7d4:	mov	r0, #4
   5b7d8:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   5b7dc:	mov	r3, r0
   5b7e0:	mov	r2, r3
   5b7e4:	sub	r3, fp, #12288	; 0x3000
   5b7e8:	sub	r3, r3, #4
   5b7ec:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5b7f0:	str	r2, [r3, #44]	; 0x2c
   5b7f4:	sub	r3, fp, #12288	; 0x3000
   5b7f8:	sub	r3, r3, #4
   5b7fc:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5b800:	ldr	r3, [r3, #44]	; 0x2c
   5b804:	cmp	r3, #0
   5b808:	moveq	r3, #1
   5b80c:	movne	r3, #0
   5b810:	uxtb	r3, r3
   5b814:	cmp	r3, #0
   5b818:	beq	5b824 <__assert_fail@plt+0x49138>
   5b81c:	mov	r3, #0
   5b820:	b	5c1a0 <__assert_fail@plt+0x49ab4>
   5b824:	mov	r3, #1
   5b828:	b	5c1a0 <__assert_fail@plt+0x49ab4>
   5b82c:	mov	r3, #0
   5b830:	b	5c1a0 <__assert_fail@plt+0x49ab4>
   5b834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b838:	add	r2, r3, #1
   5b83c:	sub	r3, fp, #3120	; 0xc30
   5b840:	sub	r3, r3, #4
   5b844:	sub	r3, r3, #4
   5b848:	mov	r1, r2
   5b84c:	mov	r0, r3
   5b850:	bl	47814 <__assert_fail@plt+0x35128>
   5b854:	mov	r3, r0
   5b858:	str	r3, [fp, #-44]	; 0xffffffd4
   5b85c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5b860:	cmp	r3, #0
   5b864:	movne	r3, #1
   5b868:	moveq	r3, #0
   5b86c:	uxtb	r3, r3
   5b870:	cmp	r3, #0
   5b874:	beq	5b914 <__assert_fail@plt+0x49228>
   5b878:	nop	{0}
   5b87c:	b	5b8a4 <__assert_fail@plt+0x491b8>
   5b880:	nop	{0}
   5b884:	b	5b8a4 <__assert_fail@plt+0x491b8>
   5b888:	nop	{0}
   5b88c:	b	5b8a4 <__assert_fail@plt+0x491b8>
   5b890:	nop	{0}
   5b894:	b	5b8a4 <__assert_fail@plt+0x491b8>
   5b898:	nop	{0}
   5b89c:	b	5b8a4 <__assert_fail@plt+0x491b8>
   5b8a0:	nop	{0}
   5b8a4:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   5b8a8:	mov	r0, r3
   5b8ac:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5b8b0:	mov	r3, #0
   5b8b4:	str	r3, [fp, #-8]
   5b8b8:	b	5b8fc <__assert_fail@plt+0x49210>
   5b8bc:	ldr	r2, [fp, #-8]
   5b8c0:	mov	r3, r2
   5b8c4:	lsl	r3, r3, #1
   5b8c8:	add	r3, r3, r2
   5b8cc:	lsl	r3, r3, #2
   5b8d0:	mov	r2, r3
   5b8d4:	sub	r3, fp, #6208	; 0x1840
   5b8d8:	sub	r3, r3, #4
   5b8dc:	sub	r3, r3, #20
   5b8e0:	add	r3, r3, r2
   5b8e4:	ldr	r3, [r3, #8]
   5b8e8:	mov	r0, r3
   5b8ec:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5b8f0:	ldr	r3, [fp, #-8]
   5b8f4:	add	r3, r3, #1
   5b8f8:	str	r3, [fp, #-8]
   5b8fc:	ldr	r2, [fp, #-8]
   5b900:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5b904:	cmp	r2, r3
   5b908:	blt	5b8bc <__assert_fail@plt+0x491d0>
   5b90c:	mov	r3, #0
   5b910:	b	5c1a0 <__assert_fail@plt+0x49ab4>
   5b914:	sub	r3, fp, #3152	; 0xc50
   5b918:	sub	r3, r3, #4
   5b91c:	sub	r3, r3, #4
   5b920:	mov	r0, r3
   5b924:	bl	449ec <__assert_fail@plt+0x32300>
   5b928:	mov	r3, #0
   5b92c:	str	r3, [fp, #-8]
   5b930:	b	5bcfc <__assert_fail@plt+0x49610>
   5b934:	mov	r3, #0
   5b938:	str	r3, [fp, #-3124]	; 0xfffff3cc
   5b93c:	mov	r3, #0
   5b940:	str	r3, [fp, #-12]
   5b944:	b	5ba24 <__assert_fail@plt+0x49338>
   5b948:	sub	r3, fp, #12288	; 0x3000
   5b94c:	sub	r3, r3, #4
   5b950:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5b954:	ldr	r1, [r3, #12]
   5b958:	sub	r3, fp, #4096	; 0x1000
   5b95c:	sub	r3, r3, #4
   5b960:	mov	r0, r3
   5b964:	ldr	r2, [fp, #-8]
   5b968:	mov	r3, r2
   5b96c:	lsl	r3, r3, #1
   5b970:	add	r3, r3, r2
   5b974:	lsl	r3, r3, #2
   5b978:	add	r3, r0, r3
   5b97c:	sub	r3, r3, #2112	; 0x840
   5b980:	sub	r3, r3, #12
   5b984:	ldr	r2, [r3]
   5b988:	ldr	r3, [fp, #-12]
   5b98c:	lsl	r3, r3, #2
   5b990:	add	r3, r2, r3
   5b994:	ldr	r3, [r3]
   5b998:	lsl	r3, r3, #2
   5b99c:	add	r3, r1, r3
   5b9a0:	ldr	r3, [r3]
   5b9a4:	str	r3, [fp, #-40]	; 0xffffffd8
   5b9a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5b9ac:	cmn	r3, #1
   5b9b0:	beq	5ba18 <__assert_fail@plt+0x4932c>
   5b9b4:	sub	r3, fp, #12288	; 0x3000
   5b9b8:	sub	r3, r3, #4
   5b9bc:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5b9c0:	ldr	r1, [r3, #24]
   5b9c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5b9c8:	mov	r3, r2
   5b9cc:	lsl	r3, r3, #1
   5b9d0:	add	r3, r3, r2
   5b9d4:	lsl	r3, r3, #2
   5b9d8:	add	r2, r1, r3
   5b9dc:	sub	r3, fp, #3120	; 0xc30
   5b9e0:	sub	r3, r3, #4
   5b9e4:	sub	r3, r3, #4
   5b9e8:	mov	r1, r2
   5b9ec:	mov	r0, r3
   5b9f0:	bl	4839c <__assert_fail@plt+0x35cb0>
   5b9f4:	mov	r3, r0
   5b9f8:	str	r3, [fp, #-44]	; 0xffffffd4
   5b9fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5ba00:	cmp	r3, #0
   5ba04:	movne	r3, #1
   5ba08:	moveq	r3, #0
   5ba0c:	uxtb	r3, r3
   5ba10:	cmp	r3, #0
   5ba14:	bne	5b880 <__assert_fail@plt+0x49194>
   5ba18:	ldr	r3, [fp, #-12]
   5ba1c:	add	r3, r3, #1
   5ba20:	str	r3, [fp, #-12]
   5ba24:	sub	r3, fp, #4096	; 0x1000
   5ba28:	sub	r3, r3, #4
   5ba2c:	mov	r1, r3
   5ba30:	ldr	r2, [fp, #-8]
   5ba34:	mov	r3, r2
   5ba38:	lsl	r3, r3, #1
   5ba3c:	add	r3, r3, r2
   5ba40:	lsl	r3, r3, #2
   5ba44:	add	r3, r1, r3
   5ba48:	sub	r3, r3, #2128	; 0x850
   5ba4c:	ldr	r3, [r3]
   5ba50:	ldr	r2, [fp, #-12]
   5ba54:	cmp	r2, r3
   5ba58:	blt	5b948 <__assert_fail@plt+0x4925c>
   5ba5c:	sub	r2, fp, #3120	; 0xc30
   5ba60:	sub	r2, r2, #4
   5ba64:	sub	r2, r2, #4
   5ba68:	sub	r3, fp, #12288	; 0x3000
   5ba6c:	sub	r3, r3, #4
   5ba70:	mov	r1, r3
   5ba74:	sub	r0, fp, #44	; 0x2c
   5ba78:	mov	r3, #0
   5ba7c:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   5ba80:	bl	493a8 <__assert_fail@plt+0x36cbc>
   5ba84:	mov	r2, r0
   5ba88:	ldr	r3, [fp, #-8]
   5ba8c:	lsl	r3, r3, #2
   5ba90:	sub	r1, fp, #4
   5ba94:	add	r3, r1, r3
   5ba98:	str	r2, [r3, #-1064]	; 0xfffffbd8
   5ba9c:	ldr	r3, [fp, #-8]
   5baa0:	lsl	r3, r3, #2
   5baa4:	sub	r2, fp, #4
   5baa8:	add	r3, r2, r3
   5baac:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5bab0:	cmp	r3, #0
   5bab4:	moveq	r3, #1
   5bab8:	movne	r3, #0
   5babc:	uxtb	r3, r3
   5bac0:	cmp	r3, #0
   5bac4:	beq	5bae4 <__assert_fail@plt+0x493f8>
   5bac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5bacc:	cmp	r3, #0
   5bad0:	movne	r3, #1
   5bad4:	moveq	r3, #0
   5bad8:	uxtb	r3, r3
   5badc:	cmp	r3, #0
   5bae0:	bne	5b888 <__assert_fail@plt+0x4919c>
   5bae4:	ldr	r3, [fp, #-8]
   5bae8:	lsl	r3, r3, #2
   5baec:	sub	r2, fp, #4
   5baf0:	add	r3, r2, r3
   5baf4:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5baf8:	ldrb	r3, [r3, #52]	; 0x34
   5bafc:	bic	r3, r3, #127	; 0x7f
   5bb00:	uxtb	r3, r3
   5bb04:	cmp	r3, #0
   5bb08:	beq	5bc70 <__assert_fail@plt+0x49584>
   5bb0c:	sub	r2, fp, #3120	; 0xc30
   5bb10:	sub	r2, r2, #4
   5bb14:	sub	r2, r2, #4
   5bb18:	sub	r3, fp, #12288	; 0x3000
   5bb1c:	sub	r3, r3, #4
   5bb20:	mov	r1, r3
   5bb24:	sub	r0, fp, #44	; 0x2c
   5bb28:	mov	r3, #1
   5bb2c:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   5bb30:	bl	493a8 <__assert_fail@plt+0x36cbc>
   5bb34:	mov	r2, r0
   5bb38:	ldr	r3, [fp, #-8]
   5bb3c:	lsl	r3, r3, #2
   5bb40:	sub	r1, fp, #4
   5bb44:	add	r3, r1, r3
   5bb48:	str	r2, [r3, #-2088]	; 0xfffff7d8
   5bb4c:	ldr	r3, [fp, #-8]
   5bb50:	lsl	r3, r3, #2
   5bb54:	sub	r2, fp, #4
   5bb58:	add	r3, r2, r3
   5bb5c:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5bb60:	cmp	r3, #0
   5bb64:	moveq	r3, #1
   5bb68:	movne	r3, #0
   5bb6c:	uxtb	r3, r3
   5bb70:	cmp	r3, #0
   5bb74:	beq	5bb94 <__assert_fail@plt+0x494a8>
   5bb78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5bb7c:	cmp	r3, #0
   5bb80:	movne	r3, #1
   5bb84:	moveq	r3, #0
   5bb88:	uxtb	r3, r3
   5bb8c:	cmp	r3, #0
   5bb90:	bne	5b890 <__assert_fail@plt+0x491a4>
   5bb94:	ldr	r3, [fp, #-8]
   5bb98:	lsl	r3, r3, #2
   5bb9c:	sub	r2, fp, #4
   5bba0:	add	r3, r2, r3
   5bba4:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   5bba8:	ldr	r3, [fp, #-8]
   5bbac:	lsl	r3, r3, #2
   5bbb0:	sub	r1, fp, #4
   5bbb4:	add	r3, r1, r3
   5bbb8:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5bbbc:	cmp	r2, r3
   5bbc0:	beq	5bbe4 <__assert_fail@plt+0x494f8>
   5bbc4:	sub	r3, fp, #12288	; 0x3000
   5bbc8:	sub	r3, r3, #4
   5bbcc:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5bbd0:	ldr	r3, [r3, #92]	; 0x5c
   5bbd4:	cmp	r3, #1
   5bbd8:	ble	5bbe4 <__assert_fail@plt+0x494f8>
   5bbdc:	mov	r3, #1
   5bbe0:	strb	r3, [fp, #-17]	; 0xffffffef
   5bbe4:	sub	r2, fp, #3120	; 0xc30
   5bbe8:	sub	r2, r2, #4
   5bbec:	sub	r2, r2, #4
   5bbf0:	sub	r3, fp, #12288	; 0x3000
   5bbf4:	sub	r3, r3, #4
   5bbf8:	mov	r1, r3
   5bbfc:	sub	r0, fp, #44	; 0x2c
   5bc00:	mov	r3, #2
   5bc04:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   5bc08:	bl	493a8 <__assert_fail@plt+0x36cbc>
   5bc0c:	mov	r2, r0
   5bc10:	ldr	r3, [fp, #-8]
   5bc14:	lsl	r3, r3, #2
   5bc18:	sub	r1, fp, #4
   5bc1c:	add	r3, r1, r3
   5bc20:	str	r2, [r3, #-3112]	; 0xfffff3d8
   5bc24:	ldr	r3, [fp, #-8]
   5bc28:	lsl	r3, r3, #2
   5bc2c:	sub	r2, fp, #4
   5bc30:	add	r3, r2, r3
   5bc34:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   5bc38:	cmp	r3, #0
   5bc3c:	moveq	r3, #1
   5bc40:	movne	r3, #0
   5bc44:	uxtb	r3, r3
   5bc48:	cmp	r3, #0
   5bc4c:	beq	5bcc0 <__assert_fail@plt+0x495d4>
   5bc50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5bc54:	cmp	r3, #0
   5bc58:	movne	r3, #1
   5bc5c:	moveq	r3, #0
   5bc60:	uxtb	r3, r3
   5bc64:	cmp	r3, #0
   5bc68:	beq	5bcc0 <__assert_fail@plt+0x495d4>
   5bc6c:	b	5b8a4 <__assert_fail@plt+0x491b8>
   5bc70:	ldr	r3, [fp, #-8]
   5bc74:	lsl	r3, r3, #2
   5bc78:	sub	r2, fp, #4
   5bc7c:	add	r3, r2, r3
   5bc80:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   5bc84:	ldr	r3, [fp, #-8]
   5bc88:	lsl	r3, r3, #2
   5bc8c:	sub	r1, fp, #4
   5bc90:	add	r3, r1, r3
   5bc94:	str	r2, [r3, #-2088]	; 0xfffff7d8
   5bc98:	ldr	r3, [fp, #-8]
   5bc9c:	lsl	r3, r3, #2
   5bca0:	sub	r2, fp, #4
   5bca4:	add	r3, r2, r3
   5bca8:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   5bcac:	ldr	r3, [fp, #-8]
   5bcb0:	lsl	r3, r3, #2
   5bcb4:	sub	r1, fp, #4
   5bcb8:	add	r3, r1, r3
   5bcbc:	str	r2, [r3, #-3112]	; 0xfffff3d8
   5bcc0:	sub	r3, fp, #14400	; 0x3840
   5bcc4:	sub	r3, r3, #4
   5bcc8:	sub	r3, r3, #20
   5bccc:	ldr	r2, [fp, #-8]
   5bcd0:	lsl	r2, r2, #5
   5bcd4:	add	r2, r3, r2
   5bcd8:	sub	r3, fp, #3152	; 0xc50
   5bcdc:	sub	r3, r3, #4
   5bce0:	sub	r3, r3, #4
   5bce4:	mov	r1, r2
   5bce8:	mov	r0, r3
   5bcec:	bl	44b08 <__assert_fail@plt+0x3241c>
   5bcf0:	ldr	r3, [fp, #-8]
   5bcf4:	add	r3, r3, #1
   5bcf8:	str	r3, [fp, #-8]
   5bcfc:	ldr	r2, [fp, #-8]
   5bd00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5bd04:	cmp	r2, r3
   5bd08:	blt	5b934 <__assert_fail@plt+0x49248>
   5bd0c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   5bd10:	cmp	r3, #0
   5bd14:	bne	5bed0 <__assert_fail@plt+0x497e4>
   5bd18:	mov	r1, #256	; 0x100
   5bd1c:	mov	r0, #4
   5bd20:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   5bd24:	mov	r3, r0
   5bd28:	mov	r2, r3
   5bd2c:	sub	r3, fp, #12288	; 0x3000
   5bd30:	sub	r3, r3, #4
   5bd34:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5bd38:	str	r2, [r3, #44]	; 0x2c
   5bd3c:	sub	r3, fp, #12288	; 0x3000
   5bd40:	sub	r3, r3, #4
   5bd44:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5bd48:	ldr	r3, [r3, #44]	; 0x2c
   5bd4c:	str	r3, [fp, #-32]	; 0xffffffe0
   5bd50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5bd54:	cmp	r3, #0
   5bd58:	moveq	r3, #1
   5bd5c:	movne	r3, #0
   5bd60:	uxtb	r3, r3
   5bd64:	cmp	r3, #0
   5bd68:	bne	5b898 <__assert_fail@plt+0x491ac>
   5bd6c:	mov	r3, #0
   5bd70:	str	r3, [fp, #-8]
   5bd74:	b	5bec0 <__assert_fail@plt+0x497d4>
   5bd78:	ldr	r3, [fp, #-8]
   5bd7c:	lsl	r3, r3, #5
   5bd80:	str	r3, [fp, #-16]
   5bd84:	ldr	r3, [fp, #-8]
   5bd88:	lsl	r3, r3, #2
   5bd8c:	sub	r2, fp, #4
   5bd90:	add	r3, r2, r3
   5bd94:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   5bd98:	str	r3, [fp, #-24]	; 0xffffffe8
   5bd9c:	mov	r3, #1
   5bda0:	str	r3, [fp, #-28]	; 0xffffffe4
   5bda4:	b	5bea8 <__assert_fail@plt+0x497bc>
   5bda8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5bdac:	and	r3, r3, #1
   5bdb0:	cmp	r3, #0
   5bdb4:	beq	5be84 <__assert_fail@plt+0x49798>
   5bdb8:	mov	r3, #0
   5bdbc:	str	r3, [fp, #-12]
   5bdc0:	b	5bdd0 <__assert_fail@plt+0x496e4>
   5bdc4:	ldr	r3, [fp, #-12]
   5bdc8:	add	r3, r3, #1
   5bdcc:	str	r3, [fp, #-12]
   5bdd0:	sub	r3, fp, #12288	; 0x3000
   5bdd4:	sub	r3, r3, #4
   5bdd8:	mov	r1, r3
   5bddc:	ldr	r3, [fp, #-12]
   5bde0:	lsl	r2, r3, #3
   5bde4:	ldr	r3, [fp, #-8]
   5bde8:	add	r3, r2, r3
   5bdec:	lsl	r3, r3, #2
   5bdf0:	add	r3, r1, r3
   5bdf4:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   5bdf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5bdfc:	and	r3, r3, r2
   5be00:	cmp	r3, #0
   5be04:	beq	5bdc4 <__assert_fail@plt+0x496d8>
   5be08:	sub	r3, fp, #12288	; 0x3000
   5be0c:	sub	r3, r3, #4
   5be10:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   5be14:	ldr	r2, [fp, #-8]
   5be18:	add	r2, r2, #24
   5be1c:	ldr	r2, [r3, r2, lsl #2]
   5be20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5be24:	and	r3, r3, r2
   5be28:	cmp	r3, #0
   5be2c:	beq	5be5c <__assert_fail@plt+0x49770>
   5be30:	ldr	r3, [fp, #-16]
   5be34:	lsl	r3, r3, #2
   5be38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5be3c:	add	r2, r2, r3
   5be40:	ldr	r3, [fp, #-12]
   5be44:	lsl	r3, r3, #2
   5be48:	sub	r1, fp, #4
   5be4c:	add	r3, r1, r3
   5be50:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5be54:	str	r3, [r2]
   5be58:	b	5be84 <__assert_fail@plt+0x49798>
   5be5c:	ldr	r3, [fp, #-16]
   5be60:	lsl	r3, r3, #2
   5be64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5be68:	add	r2, r2, r3
   5be6c:	ldr	r3, [fp, #-12]
   5be70:	lsl	r3, r3, #2
   5be74:	sub	r1, fp, #4
   5be78:	add	r3, r1, r3
   5be7c:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5be80:	str	r3, [r2]
   5be84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5be88:	lsl	r3, r3, #1
   5be8c:	str	r3, [fp, #-28]	; 0xffffffe4
   5be90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5be94:	lsr	r3, r3, #1
   5be98:	str	r3, [fp, #-24]	; 0xffffffe8
   5be9c:	ldr	r3, [fp, #-16]
   5bea0:	add	r3, r3, #1
   5bea4:	str	r3, [fp, #-16]
   5bea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5beac:	cmp	r3, #0
   5beb0:	bne	5bda8 <__assert_fail@plt+0x496bc>
   5beb4:	ldr	r3, [fp, #-8]
   5beb8:	add	r3, r3, #1
   5bebc:	str	r3, [fp, #-8]
   5bec0:	ldr	r3, [fp, #-8]
   5bec4:	cmp	r3, #7
   5bec8:	ble	5bd78 <__assert_fail@plt+0x4968c>
   5becc:	b	5c05c <__assert_fail@plt+0x49970>
   5bed0:	mov	r1, #512	; 0x200
   5bed4:	mov	r0, #4
   5bed8:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   5bedc:	mov	r3, r0
   5bee0:	mov	r2, r3
   5bee4:	sub	r3, fp, #12288	; 0x3000
   5bee8:	sub	r3, r3, #4
   5beec:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5bef0:	str	r2, [r3, #48]	; 0x30
   5bef4:	sub	r3, fp, #12288	; 0x3000
   5bef8:	sub	r3, r3, #4
   5befc:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   5bf00:	ldr	r3, [r3, #48]	; 0x30
   5bf04:	str	r3, [fp, #-32]	; 0xffffffe0
   5bf08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5bf0c:	cmp	r3, #0
   5bf10:	moveq	r3, #1
   5bf14:	movne	r3, #0
   5bf18:	uxtb	r3, r3
   5bf1c:	cmp	r3, #0
   5bf20:	bne	5b8a0 <__assert_fail@plt+0x491b4>
   5bf24:	mov	r3, #0
   5bf28:	str	r3, [fp, #-8]
   5bf2c:	b	5c050 <__assert_fail@plt+0x49964>
   5bf30:	ldr	r3, [fp, #-8]
   5bf34:	lsl	r3, r3, #5
   5bf38:	str	r3, [fp, #-16]
   5bf3c:	ldr	r3, [fp, #-8]
   5bf40:	lsl	r3, r3, #2
   5bf44:	sub	r2, fp, #4
   5bf48:	add	r3, r2, r3
   5bf4c:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   5bf50:	str	r3, [fp, #-24]	; 0xffffffe8
   5bf54:	mov	r3, #1
   5bf58:	str	r3, [fp, #-28]	; 0xffffffe4
   5bf5c:	b	5c038 <__assert_fail@plt+0x4994c>
   5bf60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5bf64:	and	r3, r3, #1
   5bf68:	cmp	r3, #0
   5bf6c:	beq	5c014 <__assert_fail@plt+0x49928>
   5bf70:	mov	r3, #0
   5bf74:	str	r3, [fp, #-12]
   5bf78:	b	5bf88 <__assert_fail@plt+0x4989c>
   5bf7c:	ldr	r3, [fp, #-12]
   5bf80:	add	r3, r3, #1
   5bf84:	str	r3, [fp, #-12]
   5bf88:	sub	r3, fp, #12288	; 0x3000
   5bf8c:	sub	r3, r3, #4
   5bf90:	mov	r1, r3
   5bf94:	ldr	r3, [fp, #-12]
   5bf98:	lsl	r2, r3, #3
   5bf9c:	ldr	r3, [fp, #-8]
   5bfa0:	add	r3, r2, r3
   5bfa4:	lsl	r3, r3, #2
   5bfa8:	add	r3, r1, r3
   5bfac:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   5bfb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5bfb4:	and	r3, r3, r2
   5bfb8:	cmp	r3, #0
   5bfbc:	beq	5bf7c <__assert_fail@plt+0x49890>
   5bfc0:	ldr	r3, [fp, #-16]
   5bfc4:	lsl	r3, r3, #2
   5bfc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5bfcc:	add	r2, r2, r3
   5bfd0:	ldr	r3, [fp, #-12]
   5bfd4:	lsl	r3, r3, #2
   5bfd8:	sub	r1, fp, #4
   5bfdc:	add	r3, r1, r3
   5bfe0:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   5bfe4:	str	r3, [r2]
   5bfe8:	ldr	r3, [fp, #-16]
   5bfec:	add	r3, r3, #256	; 0x100
   5bff0:	lsl	r3, r3, #2
   5bff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5bff8:	add	r2, r2, r3
   5bffc:	ldr	r3, [fp, #-12]
   5c000:	lsl	r3, r3, #2
   5c004:	sub	r1, fp, #4
   5c008:	add	r3, r1, r3
   5c00c:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   5c010:	str	r3, [r2]
   5c014:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5c018:	lsl	r3, r3, #1
   5c01c:	str	r3, [fp, #-28]	; 0xffffffe4
   5c020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c024:	lsr	r3, r3, #1
   5c028:	str	r3, [fp, #-24]	; 0xffffffe8
   5c02c:	ldr	r3, [fp, #-16]
   5c030:	add	r3, r3, #1
   5c034:	str	r3, [fp, #-16]
   5c038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c03c:	cmp	r3, #0
   5c040:	bne	5bf60 <__assert_fail@plt+0x49874>
   5c044:	ldr	r3, [fp, #-8]
   5c048:	add	r3, r3, #1
   5c04c:	str	r3, [fp, #-8]
   5c050:	ldr	r3, [fp, #-8]
   5c054:	cmp	r3, #7
   5c058:	ble	5bf30 <__assert_fail@plt+0x49844>
   5c05c:	sub	r3, fp, #3152	; 0xc50
   5c060:	sub	r3, r3, #4
   5c064:	sub	r3, r3, #4
   5c068:	mov	r1, #10
   5c06c:	mov	r0, r3
   5c070:	bl	44974 <__assert_fail@plt+0x32288>
   5c074:	mov	r3, r0
   5c078:	cmp	r3, #0
   5c07c:	beq	5c134 <__assert_fail@plt+0x49a48>
   5c080:	mov	r3, #0
   5c084:	str	r3, [fp, #-12]
   5c088:	b	5c11c <__assert_fail@plt+0x49a30>
   5c08c:	sub	r3, fp, #14400	; 0x3840
   5c090:	sub	r3, r3, #4
   5c094:	sub	r3, r3, #20
   5c098:	ldr	r2, [fp, #-12]
   5c09c:	lsl	r2, r2, #5
   5c0a0:	add	r3, r3, r2
   5c0a4:	mov	r1, #10
   5c0a8:	mov	r0, r3
   5c0ac:	bl	44974 <__assert_fail@plt+0x32288>
   5c0b0:	mov	r3, r0
   5c0b4:	cmp	r3, #0
   5c0b8:	beq	5c110 <__assert_fail@plt+0x49a24>
   5c0bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c0c0:	add	r2, r3, #40	; 0x28
   5c0c4:	ldr	r3, [fp, #-12]
   5c0c8:	lsl	r3, r3, #2
   5c0cc:	sub	r1, fp, #4
   5c0d0:	add	r3, r1, r3
   5c0d4:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   5c0d8:	str	r3, [r2]
   5c0dc:	ldrb	r3, [fp, #-17]	; 0xffffffef
   5c0e0:	cmp	r3, #0
   5c0e4:	beq	5c130 <__assert_fail@plt+0x49a44>
   5c0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c0ec:	add	r3, r3, #1056	; 0x420
   5c0f0:	add	r3, r3, #8
   5c0f4:	ldr	r2, [fp, #-12]
   5c0f8:	lsl	r2, r2, #2
   5c0fc:	sub	r1, fp, #4
   5c100:	add	r2, r1, r2
   5c104:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   5c108:	str	r2, [r3]
   5c10c:	b	5c130 <__assert_fail@plt+0x49a44>
   5c110:	ldr	r3, [fp, #-12]
   5c114:	add	r3, r3, #1
   5c118:	str	r3, [fp, #-12]
   5c11c:	ldr	r2, [fp, #-12]
   5c120:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5c124:	cmp	r2, r3
   5c128:	blt	5c08c <__assert_fail@plt+0x499a0>
   5c12c:	b	5c134 <__assert_fail@plt+0x49a48>
   5c130:	nop	{0}
   5c134:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   5c138:	mov	r0, r3
   5c13c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5c140:	mov	r3, #0
   5c144:	str	r3, [fp, #-8]
   5c148:	b	5c18c <__assert_fail@plt+0x49aa0>
   5c14c:	ldr	r2, [fp, #-8]
   5c150:	mov	r3, r2
   5c154:	lsl	r3, r3, #1
   5c158:	add	r3, r3, r2
   5c15c:	lsl	r3, r3, #2
   5c160:	mov	r2, r3
   5c164:	sub	r3, fp, #6208	; 0x1840
   5c168:	sub	r3, r3, #4
   5c16c:	sub	r3, r3, #20
   5c170:	add	r3, r3, r2
   5c174:	ldr	r3, [r3, #8]
   5c178:	mov	r0, r3
   5c17c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5c180:	ldr	r3, [fp, #-8]
   5c184:	add	r3, r3, #1
   5c188:	str	r3, [fp, #-8]
   5c18c:	ldr	r2, [fp, #-8]
   5c190:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5c194:	cmp	r2, r3
   5c198:	blt	5c14c <__assert_fail@plt+0x49a60>
   5c19c:	mov	r3, #1
   5c1a0:	mov	r0, r3
   5c1a4:	sub	sp, fp, #4
   5c1a8:	ldr	fp, [sp]
   5c1ac:	add	sp, sp, #4
   5c1b0:	pop	{pc}		; (ldr pc, [sp], #4)
   5c1b4:	str	fp, [sp, #-8]!
   5c1b8:	str	lr, [sp, #4]
   5c1bc:	add	fp, sp, #4
   5c1c0:	sub	sp, sp, #176	; 0xb0
   5c1c4:	str	r0, [fp, #-168]	; 0xffffff58
   5c1c8:	str	r1, [fp, #-172]	; 0xffffff54
   5c1cc:	str	r2, [fp, #-176]	; 0xffffff50
   5c1d0:	str	r3, [fp, #-180]	; 0xffffff4c
   5c1d4:	ldr	r3, [fp, #-172]	; 0xffffff54
   5c1d8:	add	r3, r3, #4
   5c1dc:	str	r3, [fp, #-44]	; 0xffffffd4
   5c1e0:	sub	r3, fp, #100	; 0x64
   5c1e4:	mov	r0, r3
   5c1e8:	bl	449ec <__assert_fail@plt+0x32300>
   5c1ec:	mov	r3, #0
   5c1f0:	str	r3, [fp, #-20]	; 0xffffffec
   5c1f4:	mov	r3, #0
   5c1f8:	str	r3, [fp, #-8]
   5c1fc:	b	5cb50 <__assert_fail@plt+0x4a464>
   5c200:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c204:	ldr	r2, [r3]
   5c208:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5c20c:	ldr	r1, [r3, #8]
   5c210:	ldr	r3, [fp, #-8]
   5c214:	lsl	r3, r3, #2
   5c218:	add	r3, r1, r3
   5c21c:	ldr	r3, [r3]
   5c220:	lsl	r3, r3, #3
   5c224:	add	r3, r2, r3
   5c228:	str	r3, [fp, #-48]	; 0xffffffd0
   5c22c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c230:	ldrb	r3, [r3, #4]
   5c234:	str	r3, [fp, #-52]	; 0xffffffcc
   5c238:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c23c:	ldr	r3, [r3, #4]
   5c240:	ubfx	r3, r3, #8, #10
   5c244:	uxth	r3, r3
   5c248:	str	r3, [fp, #-56]	; 0xffffffc8
   5c24c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5c250:	cmp	r3, #1
   5c254:	bne	5c278 <__assert_fail@plt+0x49b8c>
   5c258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c25c:	ldrb	r3, [r3]
   5c260:	mov	r2, r3
   5c264:	sub	r3, fp, #100	; 0x64
   5c268:	mov	r1, r2
   5c26c:	mov	r0, r3
   5c270:	bl	44860 <__assert_fail@plt+0x32174>
   5c274:	b	5c398 <__assert_fail@plt+0x49cac>
   5c278:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5c27c:	cmp	r3, #3
   5c280:	bne	5c2a0 <__assert_fail@plt+0x49bb4>
   5c284:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c288:	ldr	r2, [r3]
   5c28c:	sub	r3, fp, #100	; 0x64
   5c290:	mov	r1, r2
   5c294:	mov	r0, r3
   5c298:	bl	44b08 <__assert_fail@plt+0x3241c>
   5c29c:	b	5c398 <__assert_fail@plt+0x49cac>
   5c2a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5c2a4:	cmp	r3, #5
   5c2a8:	bne	5c330 <__assert_fail@plt+0x49c44>
   5c2ac:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c2b0:	ldr	r3, [r3, #92]	; 0x5c
   5c2b4:	cmp	r3, #1
   5c2b8:	ble	5c2d8 <__assert_fail@plt+0x49bec>
   5c2bc:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c2c0:	ldr	r2, [r3, #60]	; 0x3c
   5c2c4:	sub	r3, fp, #100	; 0x64
   5c2c8:	mov	r1, r2
   5c2cc:	mov	r0, r3
   5c2d0:	bl	44b08 <__assert_fail@plt+0x3241c>
   5c2d4:	b	5c2e4 <__assert_fail@plt+0x49bf8>
   5c2d8:	sub	r3, fp, #100	; 0x64
   5c2dc:	mov	r0, r3
   5c2e0:	bl	44a24 <__assert_fail@plt+0x32338>
   5c2e4:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c2e8:	ldr	r3, [r3, #128]	; 0x80
   5c2ec:	and	r3, r3, #64	; 0x40
   5c2f0:	cmp	r3, #0
   5c2f4:	bne	5c308 <__assert_fail@plt+0x49c1c>
   5c2f8:	sub	r3, fp, #100	; 0x64
   5c2fc:	mov	r1, #10
   5c300:	mov	r0, r3
   5c304:	bl	448e8 <__assert_fail@plt+0x321fc>
   5c308:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c30c:	ldr	r3, [r3, #128]	; 0x80
   5c310:	and	r3, r3, #128	; 0x80
   5c314:	cmp	r3, #0
   5c318:	beq	5c398 <__assert_fail@plt+0x49cac>
   5c31c:	sub	r3, fp, #100	; 0x64
   5c320:	mov	r1, #0
   5c324:	mov	r0, r3
   5c328:	bl	448e8 <__assert_fail@plt+0x321fc>
   5c32c:	b	5c398 <__assert_fail@plt+0x49cac>
   5c330:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5c334:	cmp	r3, #7
   5c338:	bne	5cb28 <__assert_fail@plt+0x4a43c>
   5c33c:	sub	r3, fp, #100	; 0x64
   5c340:	mov	r2, #16
   5c344:	mvn	r1, #0
   5c348:	mov	r0, r3
   5c34c:	bl	12434 <memset@plt>
   5c350:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c354:	ldr	r3, [r3, #128]	; 0x80
   5c358:	and	r3, r3, #64	; 0x40
   5c35c:	cmp	r3, #0
   5c360:	bne	5c374 <__assert_fail@plt+0x49c88>
   5c364:	sub	r3, fp, #100	; 0x64
   5c368:	mov	r1, #10
   5c36c:	mov	r0, r3
   5c370:	bl	448e8 <__assert_fail@plt+0x321fc>
   5c374:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c378:	ldr	r3, [r3, #128]	; 0x80
   5c37c:	and	r3, r3, #128	; 0x80
   5c380:	cmp	r3, #0
   5c384:	beq	5c398 <__assert_fail@plt+0x49cac>
   5c388:	sub	r3, fp, #100	; 0x64
   5c38c:	mov	r1, #0
   5c390:	mov	r0, r3
   5c394:	bl	448e8 <__assert_fail@plt+0x321fc>
   5c398:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5c39c:	cmp	r3, #0
   5c3a0:	beq	5c730 <__assert_fail@plt+0x4a044>
   5c3a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5c3a8:	and	r3, r3, #32
   5c3ac:	cmp	r3, #0
   5c3b0:	beq	5c3f4 <__assert_fail@plt+0x49d08>
   5c3b4:	sub	r3, fp, #100	; 0x64
   5c3b8:	mov	r1, #10
   5c3bc:	mov	r0, r3
   5c3c0:	bl	44974 <__assert_fail@plt+0x32288>
   5c3c4:	mov	r3, r0
   5c3c8:	strb	r3, [fp, #-57]	; 0xffffffc7
   5c3cc:	sub	r3, fp, #100	; 0x64
   5c3d0:	mov	r0, r3
   5c3d4:	bl	449ec <__assert_fail@plt+0x32300>
   5c3d8:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   5c3dc:	cmp	r3, #0
   5c3e0:	beq	5cb30 <__assert_fail@plt+0x4a444>
   5c3e4:	sub	r3, fp, #100	; 0x64
   5c3e8:	mov	r1, #10
   5c3ec:	mov	r0, r3
   5c3f0:	bl	44860 <__assert_fail@plt+0x32174>
   5c3f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5c3f8:	and	r3, r3, #128	; 0x80
   5c3fc:	cmp	r3, #0
   5c400:	beq	5c414 <__assert_fail@plt+0x49d28>
   5c404:	sub	r3, fp, #100	; 0x64
   5c408:	mov	r0, r3
   5c40c:	bl	449ec <__assert_fail@plt+0x32300>
   5c410:	b	5cb44 <__assert_fail@plt+0x4a458>
   5c414:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5c418:	and	r3, r3, #4
   5c41c:	cmp	r3, #0
   5c420:	beq	5c5a0 <__assert_fail@plt+0x49eb4>
   5c424:	mov	r3, #0
   5c428:	str	r3, [fp, #-24]	; 0xffffffe8
   5c42c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5c430:	cmp	r3, #1
   5c434:	bne	5c460 <__assert_fail@plt+0x49d74>
   5c438:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c43c:	ldrb	r3, [r3, #6]
   5c440:	and	r3, r3, #64	; 0x40
   5c444:	uxtb	r3, r3
   5c448:	cmp	r3, #0
   5c44c:	bne	5c460 <__assert_fail@plt+0x49d74>
   5c450:	sub	r3, fp, #100	; 0x64
   5c454:	mov	r0, r3
   5c458:	bl	449ec <__assert_fail@plt+0x32300>
   5c45c:	b	5cb44 <__assert_fail@plt+0x4a458>
   5c460:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c464:	ldr	r3, [r3, #92]	; 0x5c
   5c468:	cmp	r3, #1
   5c46c:	ble	5c514 <__assert_fail@plt+0x49e28>
   5c470:	mov	r3, #0
   5c474:	str	r3, [fp, #-12]
   5c478:	b	5c504 <__assert_fail@plt+0x49e18>
   5c47c:	ldr	r3, [fp, #-12]
   5c480:	lsl	r3, r3, #2
   5c484:	sub	r2, fp, #4
   5c488:	add	r3, r2, r3
   5c48c:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5c490:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c494:	ldr	r1, [fp, #-12]
   5c498:	add	r1, r1, #24
   5c49c:	ldr	r1, [r3, r1, lsl #2]
   5c4a0:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c4a4:	ldr	r0, [r3, #60]	; 0x3c
   5c4a8:	ldr	r3, [fp, #-12]
   5c4ac:	lsl	r3, r3, #2
   5c4b0:	add	r3, r0, r3
   5c4b4:	ldr	r3, [r3]
   5c4b8:	mvn	r3, r3
   5c4bc:	orr	r3, r1, r3
   5c4c0:	and	r2, r2, r3
   5c4c4:	ldr	r3, [fp, #-12]
   5c4c8:	lsl	r3, r3, #2
   5c4cc:	sub	r1, fp, #4
   5c4d0:	add	r3, r1, r3
   5c4d4:	str	r2, [r3, #-96]	; 0xffffffa0
   5c4d8:	ldr	r3, [fp, #-12]
   5c4dc:	lsl	r3, r3, #2
   5c4e0:	sub	r2, fp, #4
   5c4e4:	add	r3, r2, r3
   5c4e8:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5c4ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c4f0:	orr	r3, r2, r3
   5c4f4:	str	r3, [fp, #-24]	; 0xffffffe8
   5c4f8:	ldr	r3, [fp, #-12]
   5c4fc:	add	r3, r3, #1
   5c500:	str	r3, [fp, #-12]
   5c504:	ldr	r3, [fp, #-12]
   5c508:	cmp	r3, #7
   5c50c:	ble	5c47c <__assert_fail@plt+0x49d90>
   5c510:	b	5c594 <__assert_fail@plt+0x49ea8>
   5c514:	mov	r3, #0
   5c518:	str	r3, [fp, #-12]
   5c51c:	b	5c588 <__assert_fail@plt+0x49e9c>
   5c520:	ldr	r3, [fp, #-12]
   5c524:	lsl	r3, r3, #2
   5c528:	sub	r2, fp, #4
   5c52c:	add	r3, r2, r3
   5c530:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5c534:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c538:	ldr	r1, [fp, #-12]
   5c53c:	add	r1, r1, #24
   5c540:	ldr	r3, [r3, r1, lsl #2]
   5c544:	and	r2, r2, r3
   5c548:	ldr	r3, [fp, #-12]
   5c54c:	lsl	r3, r3, #2
   5c550:	sub	r1, fp, #4
   5c554:	add	r3, r1, r3
   5c558:	str	r2, [r3, #-96]	; 0xffffffa0
   5c55c:	ldr	r3, [fp, #-12]
   5c560:	lsl	r3, r3, #2
   5c564:	sub	r2, fp, #4
   5c568:	add	r3, r2, r3
   5c56c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5c570:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5c574:	orr	r3, r2, r3
   5c578:	str	r3, [fp, #-24]	; 0xffffffe8
   5c57c:	ldr	r3, [fp, #-12]
   5c580:	add	r3, r3, #1
   5c584:	str	r3, [fp, #-12]
   5c588:	ldr	r3, [fp, #-12]
   5c58c:	cmp	r3, #7
   5c590:	ble	5c520 <__assert_fail@plt+0x49e34>
   5c594:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5c598:	cmp	r3, #0
   5c59c:	beq	5cb38 <__assert_fail@plt+0x4a44c>
   5c5a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5c5a4:	and	r3, r3, #8
   5c5a8:	cmp	r3, #0
   5c5ac:	beq	5c730 <__assert_fail@plt+0x4a044>
   5c5b0:	mov	r3, #0
   5c5b4:	str	r3, [fp, #-28]	; 0xffffffe4
   5c5b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5c5bc:	cmp	r3, #1
   5c5c0:	bne	5c5ec <__assert_fail@plt+0x49f00>
   5c5c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c5c8:	ldrb	r3, [r3, #6]
   5c5cc:	and	r3, r3, #64	; 0x40
   5c5d0:	uxtb	r3, r3
   5c5d4:	cmp	r3, #0
   5c5d8:	beq	5c5ec <__assert_fail@plt+0x49f00>
   5c5dc:	sub	r3, fp, #100	; 0x64
   5c5e0:	mov	r0, r3
   5c5e4:	bl	449ec <__assert_fail@plt+0x32300>
   5c5e8:	b	5cb44 <__assert_fail@plt+0x4a458>
   5c5ec:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c5f0:	ldr	r3, [r3, #92]	; 0x5c
   5c5f4:	cmp	r3, #1
   5c5f8:	ble	5c6a0 <__assert_fail@plt+0x49fb4>
   5c5fc:	mov	r3, #0
   5c600:	str	r3, [fp, #-12]
   5c604:	b	5c690 <__assert_fail@plt+0x49fa4>
   5c608:	ldr	r3, [fp, #-12]
   5c60c:	lsl	r3, r3, #2
   5c610:	sub	r2, fp, #4
   5c614:	add	r3, r2, r3
   5c618:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5c61c:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c620:	ldr	r1, [fp, #-12]
   5c624:	add	r1, r1, #24
   5c628:	ldr	r1, [r3, r1, lsl #2]
   5c62c:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c630:	ldr	r0, [r3, #60]	; 0x3c
   5c634:	ldr	r3, [fp, #-12]
   5c638:	lsl	r3, r3, #2
   5c63c:	add	r3, r0, r3
   5c640:	ldr	r3, [r3]
   5c644:	and	r3, r3, r1
   5c648:	mvn	r3, r3
   5c64c:	and	r2, r2, r3
   5c650:	ldr	r3, [fp, #-12]
   5c654:	lsl	r3, r3, #2
   5c658:	sub	r1, fp, #4
   5c65c:	add	r3, r1, r3
   5c660:	str	r2, [r3, #-96]	; 0xffffffa0
   5c664:	ldr	r3, [fp, #-12]
   5c668:	lsl	r3, r3, #2
   5c66c:	sub	r2, fp, #4
   5c670:	add	r3, r2, r3
   5c674:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5c678:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5c67c:	orr	r3, r2, r3
   5c680:	str	r3, [fp, #-28]	; 0xffffffe4
   5c684:	ldr	r3, [fp, #-12]
   5c688:	add	r3, r3, #1
   5c68c:	str	r3, [fp, #-12]
   5c690:	ldr	r3, [fp, #-12]
   5c694:	cmp	r3, #7
   5c698:	ble	5c608 <__assert_fail@plt+0x49f1c>
   5c69c:	b	5c724 <__assert_fail@plt+0x4a038>
   5c6a0:	mov	r3, #0
   5c6a4:	str	r3, [fp, #-12]
   5c6a8:	b	5c718 <__assert_fail@plt+0x4a02c>
   5c6ac:	ldr	r3, [fp, #-12]
   5c6b0:	lsl	r3, r3, #2
   5c6b4:	sub	r2, fp, #4
   5c6b8:	add	r3, r2, r3
   5c6bc:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5c6c0:	ldr	r3, [fp, #-168]	; 0xffffff58
   5c6c4:	ldr	r1, [fp, #-12]
   5c6c8:	add	r1, r1, #24
   5c6cc:	ldr	r3, [r3, r1, lsl #2]
   5c6d0:	mvn	r3, r3
   5c6d4:	and	r2, r2, r3
   5c6d8:	ldr	r3, [fp, #-12]
   5c6dc:	lsl	r3, r3, #2
   5c6e0:	sub	r1, fp, #4
   5c6e4:	add	r3, r1, r3
   5c6e8:	str	r2, [r3, #-96]	; 0xffffffa0
   5c6ec:	ldr	r3, [fp, #-12]
   5c6f0:	lsl	r3, r3, #2
   5c6f4:	sub	r2, fp, #4
   5c6f8:	add	r3, r2, r3
   5c6fc:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5c700:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5c704:	orr	r3, r2, r3
   5c708:	str	r3, [fp, #-28]	; 0xffffffe4
   5c70c:	ldr	r3, [fp, #-12]
   5c710:	add	r3, r3, #1
   5c714:	str	r3, [fp, #-12]
   5c718:	ldr	r3, [fp, #-12]
   5c71c:	cmp	r3, #7
   5c720:	ble	5c6ac <__assert_fail@plt+0x49fc0>
   5c724:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5c728:	cmp	r3, #0
   5c72c:	beq	5cb40 <__assert_fail@plt+0x4a454>
   5c730:	mov	r3, #0
   5c734:	str	r3, [fp, #-12]
   5c738:	b	5ca64 <__assert_fail@plt+0x4a378>
   5c73c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5c740:	cmp	r3, #1
   5c744:	bne	5c780 <__assert_fail@plt+0x4a094>
   5c748:	ldr	r3, [fp, #-12]
   5c74c:	lsl	r3, r3, #5
   5c750:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5c754:	add	r2, r2, r3
   5c758:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5c75c:	ldrb	r3, [r3]
   5c760:	mov	r1, r3
   5c764:	mov	r0, r2
   5c768:	bl	44974 <__assert_fail@plt+0x32288>
   5c76c:	mov	r3, r0
   5c770:	eor	r3, r3, #1
   5c774:	uxtb	r3, r3
   5c778:	cmp	r3, #0
   5c77c:	bne	5ca4c <__assert_fail@plt+0x4a360>
   5c780:	mov	r3, #0
   5c784:	str	r3, [fp, #-32]	; 0xffffffe0
   5c788:	mov	r3, #0
   5c78c:	str	r3, [fp, #-16]
   5c790:	b	5c804 <__assert_fail@plt+0x4a118>
   5c794:	ldr	r3, [fp, #-16]
   5c798:	lsl	r3, r3, #2
   5c79c:	sub	r2, fp, #4
   5c7a0:	add	r3, r2, r3
   5c7a4:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5c7a8:	ldr	r3, [fp, #-12]
   5c7ac:	lsl	r3, r3, #5
   5c7b0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   5c7b4:	add	r3, r1, r3
   5c7b8:	ldr	r1, [fp, #-16]
   5c7bc:	ldr	r3, [r3, r1, lsl #2]
   5c7c0:	and	r2, r2, r3
   5c7c4:	ldr	r3, [fp, #-16]
   5c7c8:	lsl	r3, r3, #2
   5c7cc:	sub	r1, fp, #4
   5c7d0:	add	r3, r1, r3
   5c7d4:	str	r2, [r3, #-160]	; 0xffffff60
   5c7d8:	ldr	r3, [fp, #-16]
   5c7dc:	lsl	r3, r3, #2
   5c7e0:	sub	r2, fp, #4
   5c7e4:	add	r3, r2, r3
   5c7e8:	ldr	r3, [r3, #-160]	; 0xffffff60
   5c7ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5c7f0:	orr	r3, r2, r3
   5c7f4:	str	r3, [fp, #-32]	; 0xffffffe0
   5c7f8:	ldr	r3, [fp, #-16]
   5c7fc:	add	r3, r3, #1
   5c800:	str	r3, [fp, #-16]
   5c804:	ldr	r3, [fp, #-16]
   5c808:	cmp	r3, #7
   5c80c:	ble	5c794 <__assert_fail@plt+0x4a0a8>
   5c810:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5c814:	cmp	r3, #0
   5c818:	beq	5ca54 <__assert_fail@plt+0x4a368>
   5c81c:	mov	r3, #0
   5c820:	str	r3, [fp, #-40]	; 0xffffffd8
   5c824:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5c828:	str	r3, [fp, #-36]	; 0xffffffdc
   5c82c:	mov	r3, #0
   5c830:	str	r3, [fp, #-16]
   5c834:	b	5c914 <__assert_fail@plt+0x4a228>
   5c838:	ldr	r3, [fp, #-16]
   5c83c:	lsl	r3, r3, #2
   5c840:	sub	r2, fp, #4
   5c844:	add	r3, r2, r3
   5c848:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5c84c:	mvn	r2, r3
   5c850:	ldr	r3, [fp, #-12]
   5c854:	lsl	r3, r3, #5
   5c858:	ldr	r1, [fp, #-180]	; 0xffffff4c
   5c85c:	add	r3, r1, r3
   5c860:	ldr	r1, [fp, #-16]
   5c864:	ldr	r3, [r3, r1, lsl #2]
   5c868:	and	r2, r2, r3
   5c86c:	ldr	r3, [fp, #-16]
   5c870:	lsl	r3, r3, #2
   5c874:	sub	r1, fp, #4
   5c878:	add	r3, r1, r3
   5c87c:	str	r2, [r3, #-128]	; 0xffffff80
   5c880:	ldr	r3, [fp, #-16]
   5c884:	lsl	r3, r3, #2
   5c888:	sub	r2, fp, #4
   5c88c:	add	r3, r2, r3
   5c890:	ldr	r3, [r3, #-128]	; 0xffffff80
   5c894:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5c898:	orr	r3, r2, r3
   5c89c:	str	r3, [fp, #-36]	; 0xffffffdc
   5c8a0:	ldr	r3, [fp, #-16]
   5c8a4:	lsl	r3, r3, #2
   5c8a8:	sub	r2, fp, #4
   5c8ac:	add	r3, r2, r3
   5c8b0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   5c8b4:	ldr	r3, [fp, #-12]
   5c8b8:	lsl	r3, r3, #5
   5c8bc:	ldr	r1, [fp, #-180]	; 0xffffff4c
   5c8c0:	add	r3, r1, r3
   5c8c4:	ldr	r1, [fp, #-16]
   5c8c8:	ldr	r3, [r3, r1, lsl #2]
   5c8cc:	mvn	r3, r3
   5c8d0:	and	r2, r2, r3
   5c8d4:	ldr	r3, [fp, #-16]
   5c8d8:	lsl	r3, r3, #2
   5c8dc:	sub	r1, fp, #4
   5c8e0:	add	r3, r1, r3
   5c8e4:	str	r2, [r3, #-96]	; 0xffffffa0
   5c8e8:	ldr	r3, [fp, #-16]
   5c8ec:	lsl	r3, r3, #2
   5c8f0:	sub	r2, fp, #4
   5c8f4:	add	r3, r2, r3
   5c8f8:	ldr	r3, [r3, #-96]	; 0xffffffa0
   5c8fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5c900:	orr	r3, r2, r3
   5c904:	str	r3, [fp, #-40]	; 0xffffffd8
   5c908:	ldr	r3, [fp, #-16]
   5c90c:	add	r3, r3, #1
   5c910:	str	r3, [fp, #-16]
   5c914:	ldr	r3, [fp, #-16]
   5c918:	cmp	r3, #7
   5c91c:	ble	5c838 <__assert_fail@plt+0x4a14c>
   5c920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5c924:	cmp	r3, #0
   5c928:	beq	5c9e0 <__assert_fail@plt+0x4a2f4>
   5c92c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c930:	lsl	r3, r3, #5
   5c934:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5c938:	add	r3, r2, r3
   5c93c:	sub	r2, fp, #132	; 0x84
   5c940:	mov	r1, r2
   5c944:	mov	r0, r3
   5c948:	bl	44a5c <__assert_fail@plt+0x32370>
   5c94c:	ldr	r3, [fp, #-12]
   5c950:	lsl	r3, r3, #5
   5c954:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5c958:	add	r3, r2, r3
   5c95c:	sub	r2, fp, #164	; 0xa4
   5c960:	mov	r1, r2
   5c964:	mov	r0, r3
   5c968:	bl	44a5c <__assert_fail@plt+0x32370>
   5c96c:	ldr	r2, [fp, #-20]	; 0xffffffec
   5c970:	mov	r3, r2
   5c974:	lsl	r3, r3, #1
   5c978:	add	r3, r3, r2
   5c97c:	lsl	r3, r3, #2
   5c980:	mov	r2, r3
   5c984:	ldr	r3, [fp, #-176]	; 0xffffff50
   5c988:	add	r0, r3, r2
   5c98c:	ldr	r2, [fp, #-12]
   5c990:	mov	r3, r2
   5c994:	lsl	r3, r3, #1
   5c998:	add	r3, r3, r2
   5c99c:	lsl	r3, r3, #2
   5c9a0:	mov	r2, r3
   5c9a4:	ldr	r3, [fp, #-176]	; 0xffffff50
   5c9a8:	add	r3, r3, r2
   5c9ac:	mov	r1, r3
   5c9b0:	bl	47a70 <__assert_fail@plt+0x35384>
   5c9b4:	str	r0, [fp, #-64]	; 0xffffffc0
   5c9b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5c9bc:	cmp	r3, #0
   5c9c0:	movne	r3, #1
   5c9c4:	moveq	r3, #0
   5c9c8:	uxtb	r3, r3
   5c9cc:	cmp	r3, #0
   5c9d0:	bne	5cb74 <__assert_fail@plt+0x4a488>
   5c9d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5c9d8:	add	r3, r3, #1
   5c9dc:	str	r3, [fp, #-20]	; 0xffffffec
   5c9e0:	ldr	r2, [fp, #-12]
   5c9e4:	mov	r3, r2
   5c9e8:	lsl	r3, r3, #1
   5c9ec:	add	r3, r3, r2
   5c9f0:	lsl	r3, r3, #2
   5c9f4:	mov	r2, r3
   5c9f8:	ldr	r3, [fp, #-176]	; 0xffffff50
   5c9fc:	add	r0, r3, r2
   5ca00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5ca04:	ldr	r2, [r3, #8]
   5ca08:	ldr	r3, [fp, #-8]
   5ca0c:	lsl	r3, r3, #2
   5ca10:	add	r3, r2, r3
   5ca14:	ldr	r3, [r3]
   5ca18:	mov	r1, r3
   5ca1c:	bl	487fc <__assert_fail@plt+0x36110>
   5ca20:	mov	r3, r0
   5ca24:	strb	r3, [fp, #-65]	; 0xffffffbf
   5ca28:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   5ca2c:	eor	r3, r3, #1
   5ca30:	uxtb	r3, r3
   5ca34:	cmp	r3, #0
   5ca38:	bne	5cb7c <__assert_fail@plt+0x4a490>
   5ca3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5ca40:	cmp	r3, #0
   5ca44:	beq	5ca78 <__assert_fail@plt+0x4a38c>
   5ca48:	b	5ca58 <__assert_fail@plt+0x4a36c>
   5ca4c:	nop	{0}
   5ca50:	b	5ca58 <__assert_fail@plt+0x4a36c>
   5ca54:	nop	{0}
   5ca58:	ldr	r3, [fp, #-12]
   5ca5c:	add	r3, r3, #1
   5ca60:	str	r3, [fp, #-12]
   5ca64:	ldr	r2, [fp, #-12]
   5ca68:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ca6c:	cmp	r2, r3
   5ca70:	blt	5c73c <__assert_fail@plt+0x4a050>
   5ca74:	b	5ca7c <__assert_fail@plt+0x4a390>
   5ca78:	nop	{0}
   5ca7c:	ldr	r2, [fp, #-12]
   5ca80:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ca84:	cmp	r2, r3
   5ca88:	bne	5cb44 <__assert_fail@plt+0x4a458>
   5ca8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ca90:	lsl	r3, r3, #5
   5ca94:	ldr	r2, [fp, #-180]	; 0xffffff4c
   5ca98:	add	r3, r2, r3
   5ca9c:	sub	r2, fp, #100	; 0x64
   5caa0:	mov	r1, r2
   5caa4:	mov	r0, r3
   5caa8:	bl	44a5c <__assert_fail@plt+0x32370>
   5caac:	ldr	r2, [fp, #-20]	; 0xffffffec
   5cab0:	mov	r3, r2
   5cab4:	lsl	r3, r3, #1
   5cab8:	add	r3, r3, r2
   5cabc:	lsl	r3, r3, #2
   5cac0:	mov	r2, r3
   5cac4:	ldr	r3, [fp, #-176]	; 0xffffff50
   5cac8:	add	r0, r3, r2
   5cacc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5cad0:	ldr	r2, [r3, #8]
   5cad4:	ldr	r3, [fp, #-8]
   5cad8:	lsl	r3, r3, #2
   5cadc:	add	r3, r2, r3
   5cae0:	ldr	r3, [r3]
   5cae4:	mov	r1, r3
   5cae8:	bl	478a4 <__assert_fail@plt+0x351b8>
   5caec:	str	r0, [fp, #-64]	; 0xffffffc0
   5caf0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5caf4:	cmp	r3, #0
   5caf8:	movne	r3, #1
   5cafc:	moveq	r3, #0
   5cb00:	uxtb	r3, r3
   5cb04:	cmp	r3, #0
   5cb08:	bne	5cb84 <__assert_fail@plt+0x4a498>
   5cb0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cb10:	add	r3, r3, #1
   5cb14:	str	r3, [fp, #-20]	; 0xffffffec
   5cb18:	sub	r3, fp, #100	; 0x64
   5cb1c:	mov	r0, r3
   5cb20:	bl	449ec <__assert_fail@plt+0x32300>
   5cb24:	b	5cb44 <__assert_fail@plt+0x4a458>
   5cb28:	nop	{0}
   5cb2c:	b	5cb44 <__assert_fail@plt+0x4a458>
   5cb30:	nop	{0}
   5cb34:	b	5cb44 <__assert_fail@plt+0x4a458>
   5cb38:	nop	{0}
   5cb3c:	b	5cb44 <__assert_fail@plt+0x4a458>
   5cb40:	nop	{0}
   5cb44:	ldr	r3, [fp, #-8]
   5cb48:	add	r3, r3, #1
   5cb4c:	str	r3, [fp, #-8]
   5cb50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5cb54:	ldr	r3, [r3, #4]
   5cb58:	ldr	r2, [fp, #-8]
   5cb5c:	cmp	r2, r3
   5cb60:	blt	5c200 <__assert_fail@plt+0x49b14>
   5cb64:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cb68:	cmp	r3, #256	; 0x100
   5cb6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cb70:	b	5cbe0 <__assert_fail@plt+0x4a4f4>
   5cb74:	nop	{0}
   5cb78:	b	5cb88 <__assert_fail@plt+0x4a49c>
   5cb7c:	nop	{0}
   5cb80:	b	5cb88 <__assert_fail@plt+0x4a49c>
   5cb84:	nop	{0}
   5cb88:	mov	r3, #0
   5cb8c:	str	r3, [fp, #-12]
   5cb90:	b	5cbcc <__assert_fail@plt+0x4a4e0>
   5cb94:	ldr	r2, [fp, #-12]
   5cb98:	mov	r3, r2
   5cb9c:	lsl	r3, r3, #1
   5cba0:	add	r3, r3, r2
   5cba4:	lsl	r3, r3, #2
   5cba8:	mov	r2, r3
   5cbac:	ldr	r3, [fp, #-176]	; 0xffffff50
   5cbb0:	add	r3, r3, r2
   5cbb4:	ldr	r3, [r3, #8]
   5cbb8:	mov	r0, r3
   5cbbc:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5cbc0:	ldr	r3, [fp, #-12]
   5cbc4:	add	r3, r3, #1
   5cbc8:	str	r3, [fp, #-12]
   5cbcc:	ldr	r2, [fp, #-12]
   5cbd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cbd4:	cmp	r2, r3
   5cbd8:	blt	5cb94 <__assert_fail@plt+0x4a4a8>
   5cbdc:	mvn	r3, #0
   5cbe0:	mov	r0, r3
   5cbe4:	sub	sp, fp, #4
   5cbe8:	ldr	fp, [sp]
   5cbec:	add	sp, sp, #4
   5cbf0:	pop	{pc}		; (ldr pc, [sp], #4)
   5cbf4:	str	fp, [sp, #-8]!
   5cbf8:	str	lr, [sp, #4]
   5cbfc:	add	fp, sp, #4
   5cc00:	sub	sp, sp, #56	; 0x38
   5cc04:	str	r0, [fp, #-48]	; 0xffffffd0
   5cc08:	str	r1, [fp, #-52]	; 0xffffffcc
   5cc0c:	str	r2, [fp, #-56]	; 0xffffffc8
   5cc10:	str	r3, [fp, #-60]	; 0xffffffc4
   5cc14:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5cc18:	ldr	r2, [r3]
   5cc1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   5cc20:	lsl	r3, r3, #3
   5cc24:	add	r3, r2, r3
   5cc28:	str	r3, [fp, #-20]	; 0xffffffec
   5cc2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cc30:	ldrb	r3, [r3, #4]
   5cc34:	cmp	r3, #7
   5cc38:	moveq	r3, #1
   5cc3c:	movne	r3, #0
   5cc40:	uxtb	r3, r3
   5cc44:	cmp	r3, #0
   5cc48:	beq	5ce64 <__assert_fail@plt+0x4a778>
   5cc4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5cc50:	ldr	r2, [r3, #4]
   5cc54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5cc58:	add	r3, r2, r3
   5cc5c:	ldrb	r3, [r3]
   5cc60:	strb	r3, [fp, #-21]	; 0xffffffeb
   5cc64:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cc68:	cmp	r3, #193	; 0xc1
   5cc6c:	movls	r3, #1
   5cc70:	movhi	r3, #0
   5cc74:	uxtb	r3, r3
   5cc78:	cmp	r3, #0
   5cc7c:	beq	5cc88 <__assert_fail@plt+0x4a59c>
   5cc80:	mov	r3, #0
   5cc84:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cc88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5cc8c:	add	r2, r3, #1
   5cc90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5cc94:	ldr	r3, [r3, #48]	; 0x30
   5cc98:	cmp	r2, r3
   5cc9c:	blt	5cca8 <__assert_fail@plt+0x4a5bc>
   5cca0:	mov	r3, #0
   5cca4:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cca8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5ccac:	ldr	r2, [r3, #4]
   5ccb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5ccb4:	add	r3, r3, #1
   5ccb8:	add	r3, r2, r3
   5ccbc:	ldrb	r3, [r3]
   5ccc0:	strb	r3, [fp, #-22]	; 0xffffffea
   5ccc4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5ccc8:	cmp	r3, #223	; 0xdf
   5cccc:	bhi	5ccf8 <__assert_fail@plt+0x4a60c>
   5ccd0:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   5ccd4:	cmp	r3, #0
   5ccd8:	bge	5cce8 <__assert_fail@plt+0x4a5fc>
   5ccdc:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5cce0:	cmp	r3, #191	; 0xbf
   5cce4:	bls	5ccf0 <__assert_fail@plt+0x4a604>
   5cce8:	mov	r3, #0
   5ccec:	b	5d150 <__assert_fail@plt+0x4aa64>
   5ccf0:	mov	r3, #2
   5ccf4:	b	5d150 <__assert_fail@plt+0x4aa64>
   5ccf8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5ccfc:	cmp	r3, #239	; 0xef
   5cd00:	bhi	5cd2c <__assert_fail@plt+0x4a640>
   5cd04:	mov	r3, #3
   5cd08:	str	r3, [fp, #-8]
   5cd0c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cd10:	cmp	r3, #224	; 0xe0
   5cd14:	bne	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cd18:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5cd1c:	cmp	r3, #159	; 0x9f
   5cd20:	bhi	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cd24:	mov	r3, #0
   5cd28:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cd2c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cd30:	cmp	r3, #247	; 0xf7
   5cd34:	bhi	5cd60 <__assert_fail@plt+0x4a674>
   5cd38:	mov	r3, #4
   5cd3c:	str	r3, [fp, #-8]
   5cd40:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cd44:	cmp	r3, #240	; 0xf0
   5cd48:	bne	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cd4c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5cd50:	cmp	r3, #143	; 0x8f
   5cd54:	bhi	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cd58:	mov	r3, #0
   5cd5c:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cd60:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cd64:	cmp	r3, #251	; 0xfb
   5cd68:	bhi	5cd94 <__assert_fail@plt+0x4a6a8>
   5cd6c:	mov	r3, #5
   5cd70:	str	r3, [fp, #-8]
   5cd74:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cd78:	cmp	r3, #248	; 0xf8
   5cd7c:	bne	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cd80:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5cd84:	cmp	r3, #135	; 0x87
   5cd88:	bhi	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cd8c:	mov	r3, #0
   5cd90:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cd94:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cd98:	cmp	r3, #253	; 0xfd
   5cd9c:	bhi	5cdc8 <__assert_fail@plt+0x4a6dc>
   5cda0:	mov	r3, #6
   5cda4:	str	r3, [fp, #-8]
   5cda8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   5cdac:	cmp	r3, #252	; 0xfc
   5cdb0:	bne	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cdb4:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5cdb8:	cmp	r3, #131	; 0x83
   5cdbc:	bhi	5cdd0 <__assert_fail@plt+0x4a6e4>
   5cdc0:	mov	r3, #0
   5cdc4:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cdc8:	mov	r3, #0
   5cdcc:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cdd0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   5cdd4:	ldr	r3, [fp, #-8]
   5cdd8:	add	r2, r2, r3
   5cddc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5cde0:	ldr	r3, [r3, #48]	; 0x30
   5cde4:	cmp	r2, r3
   5cde8:	ble	5cdf4 <__assert_fail@plt+0x4a708>
   5cdec:	mov	r3, #0
   5cdf0:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cdf4:	mov	r3, #1
   5cdf8:	str	r3, [fp, #-12]
   5cdfc:	b	5ce4c <__assert_fail@plt+0x4a760>
   5ce00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5ce04:	ldr	r3, [r3, #4]
   5ce08:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5ce0c:	ldr	r2, [fp, #-12]
   5ce10:	add	r2, r1, r2
   5ce14:	add	r3, r3, r2
   5ce18:	ldrb	r3, [r3]
   5ce1c:	strb	r3, [fp, #-22]	; 0xffffffea
   5ce20:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   5ce24:	cmp	r3, #0
   5ce28:	bge	5ce38 <__assert_fail@plt+0x4a74c>
   5ce2c:	ldrb	r3, [fp, #-22]	; 0xffffffea
   5ce30:	cmp	r3, #191	; 0xbf
   5ce34:	bls	5ce40 <__assert_fail@plt+0x4a754>
   5ce38:	mov	r3, #0
   5ce3c:	b	5d150 <__assert_fail@plt+0x4aa64>
   5ce40:	ldr	r3, [fp, #-12]
   5ce44:	add	r3, r3, #1
   5ce48:	str	r3, [fp, #-12]
   5ce4c:	ldr	r2, [fp, #-12]
   5ce50:	ldr	r3, [fp, #-8]
   5ce54:	cmp	r2, r3
   5ce58:	blt	5ce00 <__assert_fail@plt+0x4a714>
   5ce5c:	ldr	r3, [fp, #-8]
   5ce60:	b	5d150 <__assert_fail@plt+0x4aa64>
   5ce64:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5ce68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5ce6c:	bl	44c18 <__assert_fail@plt+0x3252c>
   5ce70:	str	r0, [fp, #-8]
   5ce74:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ce78:	ldrb	r3, [r3, #4]
   5ce7c:	cmp	r3, #5
   5ce80:	bne	5cf08 <__assert_fail@plt+0x4a81c>
   5ce84:	ldr	r3, [fp, #-8]
   5ce88:	cmp	r3, #1
   5ce8c:	bgt	5ce98 <__assert_fail@plt+0x4a7ac>
   5ce90:	mov	r3, #0
   5ce94:	b	5d150 <__assert_fail@plt+0x4aa64>
   5ce98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5ce9c:	ldr	r3, [r3, #128]	; 0x80
   5cea0:	and	r3, r3, #64	; 0x40
   5cea4:	cmp	r3, #0
   5cea8:	bne	5cec8 <__assert_fail@plt+0x4a7dc>
   5ceac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5ceb0:	ldr	r2, [r3, #4]
   5ceb4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5ceb8:	add	r3, r2, r3
   5cebc:	ldrb	r3, [r3]
   5cec0:	cmp	r3, #10
   5cec4:	beq	5cef8 <__assert_fail@plt+0x4a80c>
   5cec8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   5cecc:	ldr	r3, [r3, #128]	; 0x80
   5ced0:	and	r3, r3, #128	; 0x80
   5ced4:	cmp	r3, #0
   5ced8:	beq	5cf00 <__assert_fail@plt+0x4a814>
   5cedc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5cee0:	ldr	r2, [r3, #4]
   5cee4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   5cee8:	add	r3, r2, r3
   5ceec:	ldrb	r3, [r3]
   5cef0:	cmp	r3, #0
   5cef4:	bne	5cf00 <__assert_fail@plt+0x4a814>
   5cef8:	mov	r3, #0
   5cefc:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cf00:	ldr	r3, [fp, #-8]
   5cf04:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cf08:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5cf0c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5cf10:	bl	44d20 <__assert_fail@plt+0x32634>
   5cf14:	str	r0, [fp, #-28]	; 0xffffffe4
   5cf18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5cf1c:	cmp	r3, #1
   5cf20:	bgt	5cf30 <__assert_fail@plt+0x4a844>
   5cf24:	ldr	r3, [fp, #-8]
   5cf28:	cmp	r3, #1
   5cf2c:	ble	5cf3c <__assert_fail@plt+0x4a850>
   5cf30:	ldr	r3, [fp, #-8]
   5cf34:	cmp	r3, #0
   5cf38:	bne	5cf44 <__assert_fail@plt+0x4a858>
   5cf3c:	mov	r3, #0
   5cf40:	b	5d150 <__assert_fail@plt+0x4aa64>
   5cf44:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cf48:	ldrb	r3, [r3, #4]
   5cf4c:	cmp	r3, #6
   5cf50:	bne	5d14c <__assert_fail@plt+0x4aa60>
   5cf54:	ldr	r3, [fp, #-20]	; 0xffffffec
   5cf58:	ldr	r3, [r3]
   5cf5c:	str	r3, [fp, #-32]	; 0xffffffe0
   5cf60:	mov	r3, #0
   5cf64:	str	r3, [fp, #-16]
   5cf68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5cf6c:	ldr	r3, [r3, #32]
   5cf70:	cmp	r3, #0
   5cf74:	bne	5cf98 <__assert_fail@plt+0x4a8ac>
   5cf78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5cf7c:	ldr	r3, [r3, #36]	; 0x24
   5cf80:	cmp	r3, #0
   5cf84:	bne	5cf98 <__assert_fail@plt+0x4a8ac>
   5cf88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5cf8c:	ldr	r3, [r3, #20]
   5cf90:	cmp	r3, #0
   5cf94:	beq	5cfac <__assert_fail@plt+0x4a8c0>
   5cf98:	ldr	r1, [fp, #-60]	; 0xffffffc4
   5cf9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   5cfa0:	bl	44cbc <__assert_fail@plt+0x325d0>
   5cfa4:	mov	r3, r0
   5cfa8:	b	5cfb0 <__assert_fail@plt+0x4a8c4>
   5cfac:	mov	r3, #0
   5cfb0:	str	r3, [fp, #-36]	; 0xffffffdc
   5cfb4:	mov	r3, #0
   5cfb8:	str	r3, [fp, #-12]
   5cfbc:	b	5cffc <__assert_fail@plt+0x4a910>
   5cfc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5cfc4:	ldr	r2, [r3]
   5cfc8:	ldr	r3, [fp, #-12]
   5cfcc:	lsl	r3, r3, #2
   5cfd0:	add	r3, r2, r3
   5cfd4:	ldr	r3, [r3]
   5cfd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5cfdc:	cmp	r2, r3
   5cfe0:	bne	5cff0 <__assert_fail@plt+0x4a904>
   5cfe4:	ldr	r3, [fp, #-8]
   5cfe8:	str	r3, [fp, #-16]
   5cfec:	b	5d100 <__assert_fail@plt+0x4aa14>
   5cff0:	ldr	r3, [fp, #-12]
   5cff4:	add	r3, r3, #1
   5cff8:	str	r3, [fp, #-12]
   5cffc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d000:	ldr	r3, [r3, #20]
   5d004:	ldr	r2, [fp, #-12]
   5d008:	cmp	r2, r3
   5d00c:	blt	5cfc0 <__assert_fail@plt+0x4a8d4>
   5d010:	mov	r3, #0
   5d014:	str	r3, [fp, #-12]
   5d018:	b	5d068 <__assert_fail@plt+0x4a97c>
   5d01c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d020:	ldr	r2, [r3, #12]
   5d024:	ldr	r3, [fp, #-12]
   5d028:	lsl	r3, r3, #2
   5d02c:	add	r3, r2, r3
   5d030:	ldr	r3, [r3]
   5d034:	str	r3, [fp, #-40]	; 0xffffffd8
   5d038:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5d03c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5d040:	bl	11ff0 <iswctype@plt>
   5d044:	mov	r3, r0
   5d048:	cmp	r3, #0
   5d04c:	beq	5d05c <__assert_fail@plt+0x4a970>
   5d050:	ldr	r3, [fp, #-8]
   5d054:	str	r3, [fp, #-16]
   5d058:	b	5d100 <__assert_fail@plt+0x4aa14>
   5d05c:	ldr	r3, [fp, #-12]
   5d060:	add	r3, r3, #1
   5d064:	str	r3, [fp, #-12]
   5d068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d06c:	ldr	r3, [r3, #36]	; 0x24
   5d070:	ldr	r2, [fp, #-12]
   5d074:	cmp	r2, r3
   5d078:	blt	5d01c <__assert_fail@plt+0x4a930>
   5d07c:	mov	r3, #0
   5d080:	str	r3, [fp, #-12]
   5d084:	b	5d0e8 <__assert_fail@plt+0x4a9fc>
   5d088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d08c:	ldr	r2, [r3, #4]
   5d090:	ldr	r3, [fp, #-12]
   5d094:	lsl	r3, r3, #2
   5d098:	add	r3, r2, r3
   5d09c:	ldr	r3, [r3]
   5d0a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5d0a4:	cmp	r2, r3
   5d0a8:	bcc	5d0dc <__assert_fail@plt+0x4a9f0>
   5d0ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d0b0:	ldr	r2, [r3, #8]
   5d0b4:	ldr	r3, [fp, #-12]
   5d0b8:	lsl	r3, r3, #2
   5d0bc:	add	r3, r2, r3
   5d0c0:	ldr	r3, [r3]
   5d0c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5d0c8:	cmp	r2, r3
   5d0cc:	bhi	5d0dc <__assert_fail@plt+0x4a9f0>
   5d0d0:	ldr	r3, [fp, #-8]
   5d0d4:	str	r3, [fp, #-16]
   5d0d8:	b	5d100 <__assert_fail@plt+0x4aa14>
   5d0dc:	ldr	r3, [fp, #-12]
   5d0e0:	add	r3, r3, #1
   5d0e4:	str	r3, [fp, #-12]
   5d0e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d0ec:	ldr	r3, [r3, #32]
   5d0f0:	ldr	r2, [fp, #-12]
   5d0f4:	cmp	r2, r3
   5d0f8:	blt	5d088 <__assert_fail@plt+0x4a99c>
   5d0fc:	nop	{0}
   5d100:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5d104:	ldrb	r3, [r3, #16]
   5d108:	and	r3, r3, #1
   5d10c:	uxtb	r3, r3
   5d110:	cmp	r3, #0
   5d114:	bne	5d120 <__assert_fail@plt+0x4aa34>
   5d118:	ldr	r3, [fp, #-16]
   5d11c:	b	5d150 <__assert_fail@plt+0x4aa64>
   5d120:	ldr	r3, [fp, #-16]
   5d124:	cmp	r3, #0
   5d128:	ble	5d134 <__assert_fail@plt+0x4aa48>
   5d12c:	mov	r3, #0
   5d130:	b	5d150 <__assert_fail@plt+0x4aa64>
   5d134:	ldr	r2, [fp, #-8]
   5d138:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5d13c:	cmp	r2, r3
   5d140:	movge	r3, r2
   5d144:	movlt	r3, r3
   5d148:	b	5d150 <__assert_fail@plt+0x4aa64>
   5d14c:	mov	r3, #0
   5d150:	mov	r0, r3
   5d154:	sub	sp, fp, #4
   5d158:	ldr	fp, [sp]
   5d15c:	add	sp, sp, #4
   5d160:	pop	{pc}		; (ldr pc, [sp], #4)
   5d164:	str	fp, [sp, #-8]!
   5d168:	str	lr, [sp, #4]
   5d16c:	add	fp, sp, #4
   5d170:	sub	sp, sp, #24
   5d174:	str	r0, [fp, #-16]
   5d178:	str	r1, [fp, #-20]	; 0xffffffec
   5d17c:	str	r2, [fp, #-24]	; 0xffffffe8
   5d180:	ldr	r3, [fp, #-16]
   5d184:	ldr	r2, [r3, #4]
   5d188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d18c:	add	r3, r2, r3
   5d190:	ldrb	r3, [r3]
   5d194:	strb	r3, [fp, #-5]
   5d198:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d19c:	ldrb	r3, [r3, #4]
   5d1a0:	sub	r3, r3, #1
   5d1a4:	cmp	r3, #6
   5d1a8:	ldrls	pc, [pc, r3, lsl #2]
   5d1ac:	b	5d280 <__assert_fail@plt+0x4ab94>
   5d1b0:	andeq	sp, r5, ip, asr #3
   5d1b4:	andeq	sp, r5, r0, lsl #5
   5d1b8:	andeq	sp, r5, r8, ror #3
   5d1bc:	andeq	sp, r5, r0, lsl #5
   5d1c0:	andeq	sp, r5, r0, lsr r2
   5d1c4:	andeq	sp, r5, r0, lsl #5
   5d1c8:	andeq	sp, r5, ip, lsl r2
   5d1cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d1d0:	ldrb	r3, [r3]
   5d1d4:	ldrb	r2, [fp, #-5]
   5d1d8:	cmp	r2, r3
   5d1dc:	beq	5d288 <__assert_fail@plt+0x4ab9c>
   5d1e0:	mov	r3, #0
   5d1e4:	b	5d390 <__assert_fail@plt+0x4aca4>
   5d1e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d1ec:	ldr	r3, [r3]
   5d1f0:	ldrb	r2, [fp, #-5]
   5d1f4:	mov	r1, r2
   5d1f8:	mov	r0, r3
   5d1fc:	bl	44974 <__assert_fail@plt+0x32288>
   5d200:	mov	r3, r0
   5d204:	eor	r3, r3, #1
   5d208:	uxtb	r3, r3
   5d20c:	cmp	r3, #0
   5d210:	beq	5d290 <__assert_fail@plt+0x4aba4>
   5d214:	mov	r3, #0
   5d218:	b	5d390 <__assert_fail@plt+0x4aca4>
   5d21c:	ldrsb	r3, [fp, #-5]
   5d220:	cmp	r3, #0
   5d224:	bge	5d230 <__assert_fail@plt+0x4ab44>
   5d228:	mov	r3, #0
   5d22c:	b	5d390 <__assert_fail@plt+0x4aca4>
   5d230:	ldrb	r3, [fp, #-5]
   5d234:	cmp	r3, #10
   5d238:	bne	5d254 <__assert_fail@plt+0x4ab68>
   5d23c:	ldr	r3, [fp, #-16]
   5d240:	ldr	r3, [r3, #84]	; 0x54
   5d244:	ldr	r3, [r3, #128]	; 0x80
   5d248:	and	r3, r3, #64	; 0x40
   5d24c:	cmp	r3, #0
   5d250:	beq	5d278 <__assert_fail@plt+0x4ab8c>
   5d254:	ldrb	r3, [fp, #-5]
   5d258:	cmp	r3, #0
   5d25c:	bne	5d298 <__assert_fail@plt+0x4abac>
   5d260:	ldr	r3, [fp, #-16]
   5d264:	ldr	r3, [r3, #84]	; 0x54
   5d268:	ldr	r3, [r3, #128]	; 0x80
   5d26c:	and	r3, r3, #128	; 0x80
   5d270:	cmp	r3, #0
   5d274:	beq	5d298 <__assert_fail@plt+0x4abac>
   5d278:	mov	r3, #0
   5d27c:	b	5d390 <__assert_fail@plt+0x4aca4>
   5d280:	mov	r3, #0
   5d284:	b	5d390 <__assert_fail@plt+0x4aca4>
   5d288:	nop	{0}
   5d28c:	b	5d29c <__assert_fail@plt+0x4abb0>
   5d290:	nop	{0}
   5d294:	b	5d29c <__assert_fail@plt+0x4abb0>
   5d298:	nop	{0}
   5d29c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d2a0:	ldr	r2, [r3, #4]
   5d2a4:	mov	r3, #65280	; 0xff00
   5d2a8:	movt	r3, #3
   5d2ac:	and	r3, r3, r2
   5d2b0:	cmp	r3, #0
   5d2b4:	beq	5d38c <__assert_fail@plt+0x4aca0>
   5d2b8:	ldr	r0, [fp, #-16]
   5d2bc:	ldr	r3, [fp, #-16]
   5d2c0:	ldr	r3, [r3, #88]	; 0x58
   5d2c4:	mov	r2, r3
   5d2c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5d2cc:	bl	47620 <__assert_fail@plt+0x34f34>
   5d2d0:	str	r0, [fp, #-12]
   5d2d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d2d8:	ldr	r3, [r3, #4]
   5d2dc:	ubfx	r3, r3, #8, #10
   5d2e0:	uxth	r3, r3
   5d2e4:	and	r3, r3, #4
   5d2e8:	cmp	r3, #0
   5d2ec:	beq	5d300 <__assert_fail@plt+0x4ac14>
   5d2f0:	ldr	r3, [fp, #-12]
   5d2f4:	and	r3, r3, #1
   5d2f8:	cmp	r3, #0
   5d2fc:	beq	5d384 <__assert_fail@plt+0x4ac98>
   5d300:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d304:	ldr	r3, [r3, #4]
   5d308:	ubfx	r3, r3, #8, #10
   5d30c:	uxth	r3, r3
   5d310:	and	r3, r3, #8
   5d314:	cmp	r3, #0
   5d318:	beq	5d32c <__assert_fail@plt+0x4ac40>
   5d31c:	ldr	r3, [fp, #-12]
   5d320:	and	r3, r3, #1
   5d324:	cmp	r3, #0
   5d328:	bne	5d384 <__assert_fail@plt+0x4ac98>
   5d32c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d330:	ldr	r3, [r3, #4]
   5d334:	ubfx	r3, r3, #8, #10
   5d338:	uxth	r3, r3
   5d33c:	and	r3, r3, #32
   5d340:	cmp	r3, #0
   5d344:	beq	5d358 <__assert_fail@plt+0x4ac6c>
   5d348:	ldr	r3, [fp, #-12]
   5d34c:	and	r3, r3, #2
   5d350:	cmp	r3, #0
   5d354:	beq	5d384 <__assert_fail@plt+0x4ac98>
   5d358:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d35c:	ldr	r3, [r3, #4]
   5d360:	ubfx	r3, r3, #8, #10
   5d364:	uxth	r3, r3
   5d368:	and	r3, r3, #128	; 0x80
   5d36c:	cmp	r3, #0
   5d370:	beq	5d38c <__assert_fail@plt+0x4aca0>
   5d374:	ldr	r3, [fp, #-12]
   5d378:	and	r3, r3, #8
   5d37c:	cmp	r3, #0
   5d380:	bne	5d38c <__assert_fail@plt+0x4aca0>
   5d384:	mov	r3, #0
   5d388:	b	5d390 <__assert_fail@plt+0x4aca4>
   5d38c:	mov	r3, #1
   5d390:	mov	r0, r3
   5d394:	sub	sp, fp, #4
   5d398:	ldr	fp, [sp]
   5d39c:	add	sp, sp, #4
   5d3a0:	pop	{pc}		; (ldr pc, [sp], #4)
   5d3a4:	str	fp, [sp, #-8]!
   5d3a8:	str	lr, [sp, #4]
   5d3ac:	add	fp, sp, #4
   5d3b0:	sub	sp, sp, #24
   5d3b4:	str	r0, [fp, #-24]	; 0xffffffe8
   5d3b8:	str	r1, [fp, #-28]	; 0xffffffe4
   5d3bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d3c0:	str	r3, [fp, #-8]
   5d3c4:	ldr	r3, [fp, #-8]
   5d3c8:	ldr	r3, [r3, #36]	; 0x24
   5d3cc:	cmn	r3, #-536870910	; 0xe0000002
   5d3d0:	movhi	r3, #1
   5d3d4:	movls	r3, #0
   5d3d8:	uxtb	r3, r3
   5d3dc:	cmp	r3, #0
   5d3e0:	beq	5d3ec <__assert_fail@plt+0x4ad00>
   5d3e4:	mov	r3, #12
   5d3e8:	b	5d54c <__assert_fail@plt+0x4ae60>
   5d3ec:	ldr	r3, [fp, #-8]
   5d3f0:	ldr	r3, [r3, #36]	; 0x24
   5d3f4:	lsl	r2, r3, #1
   5d3f8:	ldr	r3, [fp, #-8]
   5d3fc:	ldr	r3, [r3, #48]	; 0x30
   5d400:	cmp	r2, r3
   5d404:	movlt	r2, r2
   5d408:	movge	r2, r3
   5d40c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5d410:	cmp	r2, r3
   5d414:	movge	r3, r2
   5d418:	movlt	r3, r3
   5d41c:	mov	r1, r3
   5d420:	ldr	r0, [fp, #-8]
   5d424:	bl	450bc <__assert_fail@plt+0x329d0>
   5d428:	str	r0, [fp, #-12]
   5d42c:	ldr	r3, [fp, #-12]
   5d430:	cmp	r3, #0
   5d434:	movne	r3, #1
   5d438:	moveq	r3, #0
   5d43c:	uxtb	r3, r3
   5d440:	cmp	r3, #0
   5d444:	beq	5d450 <__assert_fail@plt+0x4ad64>
   5d448:	ldr	r3, [fp, #-12]
   5d44c:	b	5d54c <__assert_fail@plt+0x4ae60>
   5d450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d454:	ldr	r3, [r3, #100]	; 0x64
   5d458:	cmp	r3, #0
   5d45c:	beq	5d4b8 <__assert_fail@plt+0x4adcc>
   5d460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d464:	ldr	r2, [r3, #100]	; 0x64
   5d468:	ldr	r3, [fp, #-8]
   5d46c:	ldr	r3, [r3, #36]	; 0x24
   5d470:	add	r3, r3, #1
   5d474:	lsl	r3, r3, #2
   5d478:	mov	r1, r3
   5d47c:	mov	r0, r2
   5d480:	bl	446e8 <__assert_fail@plt+0x31ffc>
   5d484:	str	r0, [fp, #-16]
   5d488:	ldr	r3, [fp, #-16]
   5d48c:	cmp	r3, #0
   5d490:	moveq	r3, #1
   5d494:	movne	r3, #0
   5d498:	uxtb	r3, r3
   5d49c:	cmp	r3, #0
   5d4a0:	beq	5d4ac <__assert_fail@plt+0x4adc0>
   5d4a4:	mov	r3, #12
   5d4a8:	b	5d54c <__assert_fail@plt+0x4ae60>
   5d4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d4b0:	ldr	r2, [fp, #-16]
   5d4b4:	str	r2, [r3, #100]	; 0x64
   5d4b8:	ldr	r3, [fp, #-8]
   5d4bc:	ldrb	r3, [r3, #72]	; 0x48
   5d4c0:	cmp	r3, #0
   5d4c4:	beq	5d514 <__assert_fail@plt+0x4ae28>
   5d4c8:	ldr	r3, [fp, #-8]
   5d4cc:	ldr	r3, [r3, #80]	; 0x50
   5d4d0:	cmp	r3, #1
   5d4d4:	ble	5d508 <__assert_fail@plt+0x4ae1c>
   5d4d8:	ldr	r0, [fp, #-8]
   5d4dc:	bl	456ec <__assert_fail@plt+0x33000>
   5d4e0:	str	r0, [fp, #-12]
   5d4e4:	ldr	r3, [fp, #-12]
   5d4e8:	cmp	r3, #0
   5d4ec:	movne	r3, #1
   5d4f0:	moveq	r3, #0
   5d4f4:	uxtb	r3, r3
   5d4f8:	cmp	r3, #0
   5d4fc:	beq	5d548 <__assert_fail@plt+0x4ae5c>
   5d500:	ldr	r3, [fp, #-12]
   5d504:	b	5d54c <__assert_fail@plt+0x4ae60>
   5d508:	ldr	r0, [fp, #-8]
   5d50c:	bl	463d8 <__assert_fail@plt+0x33cec>
   5d510:	b	5d548 <__assert_fail@plt+0x4ae5c>
   5d514:	ldr	r3, [fp, #-8]
   5d518:	ldr	r3, [r3, #80]	; 0x50
   5d51c:	cmp	r3, #1
   5d520:	ble	5d530 <__assert_fail@plt+0x4ae44>
   5d524:	ldr	r0, [fp, #-8]
   5d528:	bl	45368 <__assert_fail@plt+0x32c7c>
   5d52c:	b	5d548 <__assert_fail@plt+0x4ae5c>
   5d530:	ldr	r3, [fp, #-8]
   5d534:	ldr	r3, [r3, #64]	; 0x40
   5d538:	cmp	r3, #0
   5d53c:	beq	5d548 <__assert_fail@plt+0x4ae5c>
   5d540:	ldr	r0, [fp, #-8]
   5d544:	bl	464e4 <__assert_fail@plt+0x33df8>
   5d548:	mov	r3, #0
   5d54c:	mov	r0, r3
   5d550:	sub	sp, fp, #4
   5d554:	ldr	fp, [sp]
   5d558:	add	sp, sp, #4
   5d55c:	pop	{pc}		; (ldr pc, [sp], #4)
   5d560:	str	fp, [sp, #-8]!
   5d564:	str	lr, [sp, #4]
   5d568:	add	fp, sp, #4
   5d56c:	sub	sp, sp, #24
   5d570:	str	r0, [fp, #-16]
   5d574:	str	r1, [fp, #-20]	; 0xffffffec
   5d578:	str	r2, [fp, #-24]	; 0xffffffe8
   5d57c:	ldr	r3, [fp, #-16]
   5d580:	ldr	r2, [fp, #-20]	; 0xffffffec
   5d584:	str	r2, [r3, #88]	; 0x58
   5d588:	ldr	r3, [fp, #-16]
   5d58c:	mvn	r2, #0
   5d590:	str	r2, [r3, #92]	; 0x5c
   5d594:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d598:	cmp	r3, #0
   5d59c:	ble	5d688 <__assert_fail@plt+0x4af9c>
   5d5a0:	mov	r3, #24
   5d5a4:	str	r3, [fp, #-8]
   5d5a8:	mvn	r2, #0
   5d5ac:	ldr	r3, [fp, #-8]
   5d5b0:	udiv	r3, r2, r3
   5d5b4:	cmp	r3, #0
   5d5b8:	blt	5d5cc <__assert_fail@plt+0x4aee0>
   5d5bc:	mvn	r2, #0
   5d5c0:	ldr	r3, [fp, #-8]
   5d5c4:	udiv	r3, r2, r3
   5d5c8:	b	5d5d0 <__assert_fail@plt+0x4aee4>
   5d5cc:	mvn	r3, #-2147483648	; 0x80000000
   5d5d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d5d4:	cmp	r3, r2
   5d5d8:	movcc	r3, #1
   5d5dc:	movcs	r3, #0
   5d5e0:	uxtb	r3, r3
   5d5e4:	cmp	r3, #0
   5d5e8:	beq	5d5f4 <__assert_fail@plt+0x4af08>
   5d5ec:	mov	r3, #12
   5d5f0:	b	5d6b0 <__assert_fail@plt+0x4afc4>
   5d5f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d5f8:	mov	r3, r2
   5d5fc:	lsl	r3, r3, #1
   5d600:	add	r3, r3, r2
   5d604:	lsl	r3, r3, #3
   5d608:	mov	r0, r3
   5d60c:	bl	43510 <__assert_fail@plt+0x30e24>
   5d610:	mov	r3, r0
   5d614:	mov	r2, r3
   5d618:	ldr	r3, [fp, #-16]
   5d61c:	str	r2, [r3, #116]	; 0x74
   5d620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d624:	lsl	r3, r3, #2
   5d628:	mov	r0, r3
   5d62c:	bl	43510 <__assert_fail@plt+0x30e24>
   5d630:	mov	r3, r0
   5d634:	mov	r2, r3
   5d638:	ldr	r3, [fp, #-16]
   5d63c:	str	r2, [r3, #132]	; 0x84
   5d640:	ldr	r3, [fp, #-16]
   5d644:	ldr	r3, [r3, #116]	; 0x74
   5d648:	cmp	r3, #0
   5d64c:	moveq	r3, #1
   5d650:	movne	r3, #0
   5d654:	uxtb	r3, r3
   5d658:	cmp	r3, #0
   5d65c:	bne	5d680 <__assert_fail@plt+0x4af94>
   5d660:	ldr	r3, [fp, #-16]
   5d664:	ldr	r3, [r3, #132]	; 0x84
   5d668:	cmp	r3, #0
   5d66c:	moveq	r3, #1
   5d670:	movne	r3, #0
   5d674:	uxtb	r3, r3
   5d678:	cmp	r3, #0
   5d67c:	beq	5d688 <__assert_fail@plt+0x4af9c>
   5d680:	mov	r3, #12
   5d684:	b	5d6b0 <__assert_fail@plt+0x4afc4>
   5d688:	ldr	r3, [fp, #-16]
   5d68c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d690:	str	r2, [r3, #112]	; 0x70
   5d694:	ldr	r3, [fp, #-16]
   5d698:	mov	r2, #1
   5d69c:	str	r2, [r3, #120]	; 0x78
   5d6a0:	ldr	r3, [fp, #-16]
   5d6a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d6a8:	str	r2, [r3, #128]	; 0x80
   5d6ac:	mov	r3, #0
   5d6b0:	mov	r0, r3
   5d6b4:	sub	sp, fp, #4
   5d6b8:	ldr	fp, [sp]
   5d6bc:	add	sp, sp, #4
   5d6c0:	pop	{pc}		; (ldr pc, [sp], #4)
   5d6c4:	str	fp, [sp, #-8]!
   5d6c8:	str	lr, [sp, #4]
   5d6cc:	add	fp, sp, #4
   5d6d0:	sub	sp, sp, #24
   5d6d4:	str	r0, [fp, #-24]	; 0xffffffe8
   5d6d8:	mov	r3, #0
   5d6dc:	str	r3, [fp, #-8]
   5d6e0:	b	5d7b8 <__assert_fail@plt+0x4b0cc>
   5d6e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d6e8:	ldr	r2, [r3, #132]	; 0x84
   5d6ec:	ldr	r3, [fp, #-8]
   5d6f0:	lsl	r3, r3, #2
   5d6f4:	add	r3, r2, r3
   5d6f8:	ldr	r3, [r3]
   5d6fc:	str	r3, [fp, #-16]
   5d700:	mov	r3, #0
   5d704:	str	r3, [fp, #-12]
   5d708:	b	5d74c <__assert_fail@plt+0x4b060>
   5d70c:	ldr	r3, [fp, #-16]
   5d710:	ldr	r2, [r3, #20]
   5d714:	ldr	r3, [fp, #-12]
   5d718:	lsl	r3, r3, #2
   5d71c:	add	r3, r2, r3
   5d720:	ldr	r3, [r3]
   5d724:	str	r3, [fp, #-20]	; 0xffffffec
   5d728:	ldr	r3, [fp, #-20]	; 0xffffffec
   5d72c:	ldr	r3, [r3, #16]
   5d730:	mov	r0, r3
   5d734:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d738:	ldr	r0, [fp, #-20]	; 0xffffffec
   5d73c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d740:	ldr	r3, [fp, #-12]
   5d744:	add	r3, r3, #1
   5d748:	str	r3, [fp, #-12]
   5d74c:	ldr	r3, [fp, #-16]
   5d750:	ldr	r3, [r3, #16]
   5d754:	ldr	r2, [fp, #-12]
   5d758:	cmp	r2, r3
   5d75c:	blt	5d70c <__assert_fail@plt+0x4b020>
   5d760:	ldr	r3, [fp, #-16]
   5d764:	ldr	r3, [r3, #20]
   5d768:	mov	r0, r3
   5d76c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d770:	ldr	r3, [fp, #-16]
   5d774:	ldr	r3, [r3, #8]
   5d778:	cmp	r3, #0
   5d77c:	beq	5d7a4 <__assert_fail@plt+0x4b0b8>
   5d780:	ldr	r3, [fp, #-16]
   5d784:	ldr	r3, [r3, #8]
   5d788:	ldr	r3, [r3, #8]
   5d78c:	mov	r0, r3
   5d790:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d794:	ldr	r3, [fp, #-16]
   5d798:	ldr	r3, [r3, #8]
   5d79c:	mov	r0, r3
   5d7a0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d7a4:	ldr	r0, [fp, #-16]
   5d7a8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d7ac:	ldr	r3, [fp, #-8]
   5d7b0:	add	r3, r3, #1
   5d7b4:	str	r3, [fp, #-8]
   5d7b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d7bc:	ldr	r3, [r3, #124]	; 0x7c
   5d7c0:	ldr	r2, [fp, #-8]
   5d7c4:	cmp	r2, r3
   5d7c8:	blt	5d6e4 <__assert_fail@plt+0x4aff8>
   5d7cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d7d0:	mov	r2, #0
   5d7d4:	str	r2, [r3, #124]	; 0x7c
   5d7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5d7dc:	mov	r2, #0
   5d7e0:	str	r2, [r3, #108]	; 0x6c
   5d7e4:	nop	{0}
   5d7e8:	sub	sp, fp, #4
   5d7ec:	ldr	fp, [sp]
   5d7f0:	add	sp, sp, #4
   5d7f4:	pop	{pc}		; (ldr pc, [sp], #4)
   5d7f8:	str	fp, [sp, #-8]!
   5d7fc:	str	lr, [sp, #4]
   5d800:	add	fp, sp, #4
   5d804:	sub	sp, sp, #8
   5d808:	str	r0, [fp, #-8]
   5d80c:	ldr	r0, [fp, #-8]
   5d810:	bl	5d6c4 <__assert_fail@plt+0x4afd8>
   5d814:	ldr	r3, [fp, #-8]
   5d818:	ldr	r3, [r3, #132]	; 0x84
   5d81c:	mov	r0, r3
   5d820:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d824:	ldr	r3, [fp, #-8]
   5d828:	ldr	r3, [r3, #116]	; 0x74
   5d82c:	mov	r0, r3
   5d830:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d834:	nop	{0}
   5d838:	sub	sp, fp, #4
   5d83c:	ldr	fp, [sp]
   5d840:	add	sp, sp, #4
   5d844:	pop	{pc}		; (ldr pc, [sp], #4)
   5d848:	str	fp, [sp, #-8]!
   5d84c:	str	lr, [sp, #4]
   5d850:	add	fp, sp, #4
   5d854:	sub	sp, sp, #24
   5d858:	str	r0, [fp, #-16]
   5d85c:	str	r1, [fp, #-20]	; 0xffffffec
   5d860:	str	r2, [fp, #-24]	; 0xffffffe8
   5d864:	str	r3, [fp, #-28]	; 0xffffffe4
   5d868:	ldr	r3, [fp, #-16]
   5d86c:	ldr	r2, [r3, #108]	; 0x6c
   5d870:	ldr	r3, [fp, #-16]
   5d874:	ldr	r3, [r3, #112]	; 0x70
   5d878:	cmp	r2, r3
   5d87c:	blt	5d954 <__assert_fail@plt+0x4b268>
   5d880:	ldr	r3, [fp, #-16]
   5d884:	ldr	r0, [r3, #116]	; 0x74
   5d888:	ldr	r3, [fp, #-16]
   5d88c:	ldr	r3, [r3, #112]	; 0x70
   5d890:	mov	r2, r3
   5d894:	mov	r3, r2
   5d898:	lsl	r3, r3, #1
   5d89c:	add	r3, r3, r2
   5d8a0:	lsl	r3, r3, #4
   5d8a4:	mov	r1, r3
   5d8a8:	bl	446e8 <__assert_fail@plt+0x31ffc>
   5d8ac:	str	r0, [fp, #-8]
   5d8b0:	ldr	r3, [fp, #-8]
   5d8b4:	cmp	r3, #0
   5d8b8:	moveq	r3, #1
   5d8bc:	movne	r3, #0
   5d8c0:	uxtb	r3, r3
   5d8c4:	cmp	r3, #0
   5d8c8:	beq	5d8e4 <__assert_fail@plt+0x4b1f8>
   5d8cc:	ldr	r3, [fp, #-16]
   5d8d0:	ldr	r3, [r3, #116]	; 0x74
   5d8d4:	mov	r0, r3
   5d8d8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5d8dc:	mov	r3, #12
   5d8e0:	b	5db4c <__assert_fail@plt+0x4b460>
   5d8e4:	ldr	r3, [fp, #-16]
   5d8e8:	ldr	r2, [fp, #-8]
   5d8ec:	str	r2, [r3, #116]	; 0x74
   5d8f0:	ldr	r3, [fp, #-16]
   5d8f4:	ldr	r2, [r3, #116]	; 0x74
   5d8f8:	ldr	r3, [fp, #-16]
   5d8fc:	ldr	r3, [r3, #108]	; 0x6c
   5d900:	mov	r1, r3
   5d904:	mov	r3, r1
   5d908:	lsl	r3, r3, #1
   5d90c:	add	r3, r3, r1
   5d910:	lsl	r3, r3, #3
   5d914:	add	r0, r2, r3
   5d918:	ldr	r3, [fp, #-16]
   5d91c:	ldr	r3, [r3, #112]	; 0x70
   5d920:	mov	r2, r3
   5d924:	mov	r3, r2
   5d928:	lsl	r3, r3, #1
   5d92c:	add	r3, r3, r2
   5d930:	lsl	r3, r3, #3
   5d934:	mov	r2, r3
   5d938:	mov	r1, #0
   5d93c:	bl	12434 <memset@plt>
   5d940:	ldr	r3, [fp, #-16]
   5d944:	ldr	r3, [r3, #112]	; 0x70
   5d948:	lsl	r2, r3, #1
   5d94c:	ldr	r3, [fp, #-16]
   5d950:	str	r2, [r3, #112]	; 0x70
   5d954:	ldr	r3, [fp, #-16]
   5d958:	ldr	r3, [r3, #108]	; 0x6c
   5d95c:	cmp	r3, #0
   5d960:	ble	5d9d4 <__assert_fail@plt+0x4b2e8>
   5d964:	ldr	r3, [fp, #-16]
   5d968:	ldr	r2, [r3, #116]	; 0x74
   5d96c:	ldr	r3, [fp, #-16]
   5d970:	ldr	r3, [r3, #108]	; 0x6c
   5d974:	mov	r1, r3
   5d978:	mov	r3, r1
   5d97c:	lsl	r3, r3, #1
   5d980:	add	r3, r3, r1
   5d984:	lsl	r3, r3, #3
   5d988:	sub	r3, r3, #24
   5d98c:	add	r3, r2, r3
   5d990:	ldr	r3, [r3, #4]
   5d994:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5d998:	cmp	r2, r3
   5d99c:	bne	5d9d4 <__assert_fail@plt+0x4b2e8>
   5d9a0:	ldr	r3, [fp, #-16]
   5d9a4:	ldr	r2, [r3, #116]	; 0x74
   5d9a8:	ldr	r3, [fp, #-16]
   5d9ac:	ldr	r3, [r3, #108]	; 0x6c
   5d9b0:	mov	r1, r3
   5d9b4:	mov	r3, r1
   5d9b8:	lsl	r3, r3, #1
   5d9bc:	add	r3, r3, r1
   5d9c0:	lsl	r3, r3, #3
   5d9c4:	sub	r3, r3, #24
   5d9c8:	add	r3, r2, r3
   5d9cc:	mov	r2, #1
   5d9d0:	strb	r2, [r3, #20]
   5d9d4:	ldr	r3, [fp, #-16]
   5d9d8:	ldr	r2, [r3, #116]	; 0x74
   5d9dc:	ldr	r3, [fp, #-16]
   5d9e0:	ldr	r3, [r3, #108]	; 0x6c
   5d9e4:	mov	r1, r3
   5d9e8:	mov	r3, r1
   5d9ec:	lsl	r3, r3, #1
   5d9f0:	add	r3, r3, r1
   5d9f4:	lsl	r3, r3, #3
   5d9f8:	add	r3, r2, r3
   5d9fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   5da00:	str	r2, [r3]
   5da04:	ldr	r3, [fp, #-16]
   5da08:	ldr	r2, [r3, #116]	; 0x74
   5da0c:	ldr	r3, [fp, #-16]
   5da10:	ldr	r3, [r3, #108]	; 0x6c
   5da14:	mov	r1, r3
   5da18:	mov	r3, r1
   5da1c:	lsl	r3, r3, #1
   5da20:	add	r3, r3, r1
   5da24:	lsl	r3, r3, #3
   5da28:	add	r3, r2, r3
   5da2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5da30:	str	r2, [r3, #4]
   5da34:	ldr	r3, [fp, #-16]
   5da38:	ldr	r2, [r3, #116]	; 0x74
   5da3c:	ldr	r3, [fp, #-16]
   5da40:	ldr	r3, [r3, #108]	; 0x6c
   5da44:	mov	r1, r3
   5da48:	mov	r3, r1
   5da4c:	lsl	r3, r3, #1
   5da50:	add	r3, r3, r1
   5da54:	lsl	r3, r3, #3
   5da58:	add	r3, r2, r3
   5da5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5da60:	str	r2, [r3, #8]
   5da64:	ldr	r3, [fp, #-16]
   5da68:	ldr	r2, [r3, #116]	; 0x74
   5da6c:	ldr	r3, [fp, #-16]
   5da70:	ldr	r3, [r3, #108]	; 0x6c
   5da74:	mov	r1, r3
   5da78:	mov	r3, r1
   5da7c:	lsl	r3, r3, #1
   5da80:	add	r3, r3, r1
   5da84:	lsl	r3, r3, #3
   5da88:	add	r3, r2, r3
   5da8c:	ldr	r2, [fp, #4]
   5da90:	str	r2, [r3, #12]
   5da94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5da98:	ldr	r3, [fp, #4]
   5da9c:	cmp	r2, r3
   5daa0:	bne	5daac <__assert_fail@plt+0x4b3c0>
   5daa4:	mvn	r2, #0
   5daa8:	b	5dab0 <__assert_fail@plt+0x4b3c4>
   5daac:	mov	r2, #0
   5dab0:	ldr	r3, [fp, #-16]
   5dab4:	ldr	r1, [r3, #116]	; 0x74
   5dab8:	ldr	r3, [fp, #-16]
   5dabc:	ldr	r3, [r3, #108]	; 0x6c
   5dac0:	mov	r0, r3
   5dac4:	mov	r3, r0
   5dac8:	lsl	r3, r3, #1
   5dacc:	add	r3, r3, r0
   5dad0:	lsl	r3, r3, #3
   5dad4:	add	r3, r1, r3
   5dad8:	str	r2, [r3, #16]
   5dadc:	ldr	r3, [fp, #-16]
   5dae0:	ldr	r2, [r3, #116]	; 0x74
   5dae4:	ldr	r3, [fp, #-16]
   5dae8:	ldr	r3, [r3, #108]	; 0x6c
   5daec:	add	r0, r3, #1
   5daf0:	ldr	r1, [fp, #-16]
   5daf4:	str	r0, [r1, #108]	; 0x6c
   5daf8:	mov	r1, r3
   5dafc:	mov	r3, r1
   5db00:	lsl	r3, r3, #1
   5db04:	add	r3, r3, r1
   5db08:	lsl	r3, r3, #3
   5db0c:	add	r3, r2, r3
   5db10:	mov	r2, #0
   5db14:	strb	r2, [r3, #20]
   5db18:	ldr	r3, [fp, #-16]
   5db1c:	ldr	r2, [r3, #120]	; 0x78
   5db20:	ldr	r1, [fp, #4]
   5db24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5db28:	sub	r3, r1, r3
   5db2c:	cmp	r2, r3
   5db30:	bge	5db48 <__assert_fail@plt+0x4b45c>
   5db34:	ldr	r2, [fp, #4]
   5db38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5db3c:	sub	r2, r2, r3
   5db40:	ldr	r3, [fp, #-16]
   5db44:	str	r2, [r3, #120]	; 0x78
   5db48:	mov	r3, #0
   5db4c:	mov	r0, r3
   5db50:	sub	sp, fp, #4
   5db54:	ldr	fp, [sp]
   5db58:	add	sp, sp, #4
   5db5c:	pop	{pc}		; (ldr pc, [sp], #4)
   5db60:	push	{fp}		; (str fp, [sp, #-4]!)
   5db64:	add	fp, sp, #0
   5db68:	sub	sp, sp, #28
   5db6c:	str	r0, [fp, #-24]	; 0xffffffe8
   5db70:	str	r1, [fp, #-28]	; 0xffffffe4
   5db74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5db78:	ldr	r3, [r3, #108]	; 0x6c
   5db7c:	str	r3, [fp, #-12]
   5db80:	ldr	r3, [fp, #-12]
   5db84:	str	r3, [fp, #-16]
   5db88:	mov	r3, #0
   5db8c:	str	r3, [fp, #-8]
   5db90:	b	5dbf8 <__assert_fail@plt+0x4b50c>
   5db94:	ldr	r2, [fp, #-8]
   5db98:	ldr	r3, [fp, #-12]
   5db9c:	add	r3, r2, r3
   5dba0:	lsr	r2, r3, #31
   5dba4:	add	r3, r2, r3
   5dba8:	asr	r3, r3, #1
   5dbac:	str	r3, [fp, #-20]	; 0xffffffec
   5dbb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dbb4:	ldr	r1, [r3, #116]	; 0x74
   5dbb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   5dbbc:	mov	r3, r2
   5dbc0:	lsl	r3, r3, #1
   5dbc4:	add	r3, r3, r2
   5dbc8:	lsl	r3, r3, #3
   5dbcc:	add	r3, r1, r3
   5dbd0:	ldr	r3, [r3, #4]
   5dbd4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5dbd8:	cmp	r2, r3
   5dbdc:	ble	5dbf0 <__assert_fail@plt+0x4b504>
   5dbe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5dbe4:	add	r3, r3, #1
   5dbe8:	str	r3, [fp, #-8]
   5dbec:	b	5dbf8 <__assert_fail@plt+0x4b50c>
   5dbf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5dbf4:	str	r3, [fp, #-12]
   5dbf8:	ldr	r2, [fp, #-8]
   5dbfc:	ldr	r3, [fp, #-12]
   5dc00:	cmp	r2, r3
   5dc04:	blt	5db94 <__assert_fail@plt+0x4b4a8>
   5dc08:	ldr	r2, [fp, #-8]
   5dc0c:	ldr	r3, [fp, #-16]
   5dc10:	cmp	r2, r3
   5dc14:	bge	5dc50 <__assert_fail@plt+0x4b564>
   5dc18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dc1c:	ldr	r1, [r3, #116]	; 0x74
   5dc20:	ldr	r2, [fp, #-8]
   5dc24:	mov	r3, r2
   5dc28:	lsl	r3, r3, #1
   5dc2c:	add	r3, r3, r2
   5dc30:	lsl	r3, r3, #3
   5dc34:	add	r3, r1, r3
   5dc38:	ldr	r3, [r3, #4]
   5dc3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5dc40:	cmp	r2, r3
   5dc44:	bne	5dc50 <__assert_fail@plt+0x4b564>
   5dc48:	ldr	r3, [fp, #-8]
   5dc4c:	b	5dc54 <__assert_fail@plt+0x4b568>
   5dc50:	mvn	r3, #0
   5dc54:	mov	r0, r3
   5dc58:	add	sp, fp, #0
   5dc5c:	pop	{fp}		; (ldr fp, [sp], #4)
   5dc60:	bx	lr
   5dc64:	str	r4, [sp, #-12]!
   5dc68:	str	fp, [sp, #4]
   5dc6c:	str	lr, [sp, #8]
   5dc70:	add	fp, sp, #8
   5dc74:	sub	sp, sp, #28
   5dc78:	str	r0, [fp, #-24]	; 0xffffffe8
   5dc7c:	str	r1, [fp, #-28]	; 0xffffffe4
   5dc80:	str	r2, [fp, #-32]	; 0xffffffe0
   5dc84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dc88:	ldr	r3, [r3, #132]	; 0x84
   5dc8c:	cmp	r3, #0
   5dc90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dc94:	ldr	r3, [r3, #128]	; 0x80
   5dc98:	cmp	r3, #0
   5dc9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dca0:	ldr	r2, [r3, #124]	; 0x7c
   5dca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dca8:	ldr	r3, [r3, #128]	; 0x80
   5dcac:	cmp	r2, r3
   5dcb0:	moveq	r3, #1
   5dcb4:	movne	r3, #0
   5dcb8:	uxtb	r3, r3
   5dcbc:	cmp	r3, #0
   5dcc0:	beq	5dd30 <__assert_fail@plt+0x4b644>
   5dcc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dcc8:	ldr	r3, [r3, #128]	; 0x80
   5dccc:	lsl	r3, r3, #1
   5dcd0:	str	r3, [fp, #-16]
   5dcd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dcd8:	ldr	r2, [r3, #132]	; 0x84
   5dcdc:	ldr	r3, [fp, #-16]
   5dce0:	lsl	r3, r3, #2
   5dce4:	mov	r1, r3
   5dce8:	mov	r0, r2
   5dcec:	bl	446e8 <__assert_fail@plt+0x31ffc>
   5dcf0:	str	r0, [fp, #-20]	; 0xffffffec
   5dcf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5dcf8:	cmp	r3, #0
   5dcfc:	moveq	r3, #1
   5dd00:	movne	r3, #0
   5dd04:	uxtb	r3, r3
   5dd08:	cmp	r3, #0
   5dd0c:	beq	5dd18 <__assert_fail@plt+0x4b62c>
   5dd10:	mov	r3, #12
   5dd14:	b	5ddf0 <__assert_fail@plt+0x4b704>
   5dd18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dd1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   5dd20:	str	r2, [r3, #132]	; 0x84
   5dd24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dd28:	ldr	r2, [fp, #-16]
   5dd2c:	str	r2, [r3, #128]	; 0x80
   5dd30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dd34:	ldr	r2, [r3, #132]	; 0x84
   5dd38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dd3c:	ldr	r3, [r3, #124]	; 0x7c
   5dd40:	lsl	r3, r3, #2
   5dd44:	add	r4, r2, r3
   5dd48:	mov	r1, #24
   5dd4c:	mov	r0, #1
   5dd50:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   5dd54:	mov	r3, r0
   5dd58:	str	r3, [r4]
   5dd5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dd60:	ldr	r2, [r3, #132]	; 0x84
   5dd64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dd68:	ldr	r3, [r3, #124]	; 0x7c
   5dd6c:	lsl	r3, r3, #2
   5dd70:	add	r3, r2, r3
   5dd74:	ldr	r3, [r3]
   5dd78:	cmp	r3, #0
   5dd7c:	moveq	r3, #1
   5dd80:	movne	r3, #0
   5dd84:	uxtb	r3, r3
   5dd88:	cmp	r3, #0
   5dd8c:	beq	5dd98 <__assert_fail@plt+0x4b6ac>
   5dd90:	mov	r3, #12
   5dd94:	b	5ddf0 <__assert_fail@plt+0x4b704>
   5dd98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dd9c:	ldr	r2, [r3, #132]	; 0x84
   5dda0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dda4:	ldr	r3, [r3, #124]	; 0x7c
   5dda8:	lsl	r3, r3, #2
   5ddac:	add	r3, r2, r3
   5ddb0:	ldr	r3, [r3]
   5ddb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5ddb8:	str	r2, [r3, #4]
   5ddbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ddc0:	ldr	r2, [r3, #132]	; 0x84
   5ddc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ddc8:	ldr	r3, [r3, #124]	; 0x7c
   5ddcc:	add	r0, r3, #1
   5ddd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5ddd4:	str	r0, [r1, #124]	; 0x7c
   5ddd8:	lsl	r3, r3, #2
   5dddc:	add	r3, r2, r3
   5dde0:	ldr	r3, [r3]
   5dde4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5dde8:	str	r2, [r3]
   5ddec:	mov	r3, #0
   5ddf0:	mov	r0, r3
   5ddf4:	sub	sp, fp, #8
   5ddf8:	ldr	r4, [sp]
   5ddfc:	ldr	fp, [sp, #4]
   5de00:	add	sp, sp, #8
   5de04:	pop	{pc}		; (ldr pc, [sp], #4)
   5de08:	str	fp, [sp, #-8]!
   5de0c:	str	lr, [sp, #4]
   5de10:	add	fp, sp, #4
   5de14:	sub	sp, sp, #32
   5de18:	str	r0, [fp, #-24]	; 0xffffffe8
   5de1c:	str	r1, [fp, #-28]	; 0xffffffe4
   5de20:	str	r2, [fp, #-32]	; 0xffffffe0
   5de24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5de28:	ldr	r2, [r3, #16]
   5de2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5de30:	ldr	r3, [r3, #12]
   5de34:	cmp	r2, r3
   5de38:	moveq	r3, #1
   5de3c:	movne	r3, #0
   5de40:	uxtb	r3, r3
   5de44:	cmp	r3, #0
   5de48:	beq	5debc <__assert_fail@plt+0x4b7d0>
   5de4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5de50:	ldr	r3, [r3, #12]
   5de54:	lsl	r3, r3, #1
   5de58:	add	r3, r3, #1
   5de5c:	str	r3, [fp, #-8]
   5de60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5de64:	ldr	r2, [r3, #20]
   5de68:	ldr	r3, [fp, #-8]
   5de6c:	lsl	r3, r3, #2
   5de70:	mov	r1, r3
   5de74:	mov	r0, r2
   5de78:	bl	446e8 <__assert_fail@plt+0x31ffc>
   5de7c:	str	r0, [fp, #-12]
   5de80:	ldr	r3, [fp, #-12]
   5de84:	cmp	r3, #0
   5de88:	moveq	r3, #1
   5de8c:	movne	r3, #0
   5de90:	uxtb	r3, r3
   5de94:	cmp	r3, #0
   5de98:	beq	5dea4 <__assert_fail@plt+0x4b7b8>
   5de9c:	mov	r3, #0
   5dea0:	b	5df3c <__assert_fail@plt+0x4b850>
   5dea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5dea8:	ldr	r2, [fp, #-12]
   5deac:	str	r2, [r3, #20]
   5deb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5deb4:	ldr	r2, [fp, #-8]
   5deb8:	str	r2, [r3, #12]
   5debc:	mov	r1, #20
   5dec0:	mov	r0, #1
   5dec4:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   5dec8:	mov	r3, r0
   5decc:	str	r3, [fp, #-16]
   5ded0:	ldr	r3, [fp, #-16]
   5ded4:	cmp	r3, #0
   5ded8:	movne	r3, #1
   5dedc:	moveq	r3, #0
   5dee0:	uxtb	r3, r3
   5dee4:	cmp	r3, #0
   5dee8:	beq	5df38 <__assert_fail@plt+0x4b84c>
   5deec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5def0:	ldr	r2, [r3, #20]
   5def4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5def8:	ldr	r3, [r3, #16]
   5defc:	lsl	r3, r3, #2
   5df00:	add	r3, r2, r3
   5df04:	ldr	r2, [fp, #-16]
   5df08:	str	r2, [r3]
   5df0c:	ldr	r3, [fp, #-16]
   5df10:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5df14:	str	r2, [r3]
   5df18:	ldr	r3, [fp, #-16]
   5df1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5df20:	str	r2, [r3, #4]
   5df24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5df28:	ldr	r3, [r3, #16]
   5df2c:	add	r2, r3, #1
   5df30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5df34:	str	r2, [r3, #16]
   5df38:	ldr	r3, [fp, #-16]
   5df3c:	mov	r0, r3
   5df40:	sub	sp, fp, #4
   5df44:	ldr	fp, [sp]
   5df48:	add	sp, sp, #4
   5df4c:	pop	{pc}		; (ldr pc, [sp], #4)
   5df50:	str	fp, [sp, #-8]!
   5df54:	str	lr, [sp, #4]
   5df58:	add	fp, sp, #4
   5df5c:	sub	sp, sp, #16
   5df60:	str	r0, [fp, #-8]
   5df64:	str	r1, [fp, #-12]
   5df68:	str	r2, [fp, #-16]
   5df6c:	str	r3, [fp, #-20]	; 0xffffffec
   5df70:	ldr	r3, [fp, #-8]
   5df74:	ldr	r2, [fp, #-12]
   5df78:	str	r2, [r3]
   5df7c:	ldr	r3, [fp, #-8]
   5df80:	ldr	r2, [fp, #-16]
   5df84:	str	r2, [r3, #4]
   5df88:	ldr	r3, [fp, #-8]
   5df8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   5df90:	str	r2, [r3, #8]
   5df94:	ldr	r3, [fp, #-8]
   5df98:	ldr	r2, [fp, #4]
   5df9c:	str	r2, [r3, #12]
   5dfa0:	ldr	r3, [fp, #-8]
   5dfa4:	add	r3, r3, #16
   5dfa8:	mov	r2, #12
   5dfac:	mov	r1, #0
   5dfb0:	mov	r0, r3
   5dfb4:	bl	12434 <memset@plt>
   5dfb8:	nop	{0}
   5dfbc:	sub	sp, fp, #4
   5dfc0:	ldr	fp, [sp]
   5dfc4:	add	sp, sp, #4
   5dfc8:	pop	{pc}		; (ldr pc, [sp], #4)
   5dfcc:	push	{fp}		; (str fp, [sp, #-4]!)
   5dfd0:	add	fp, sp, #0
   5dfd4:	sub	sp, sp, #44	; 0x2c
   5dfd8:	str	r0, [fp, #-32]	; 0xffffffe0
   5dfdc:	str	r1, [fp, #-36]	; 0xffffffdc
   5dfe0:	str	r2, [fp, #-40]	; 0xffffffd8
   5dfe4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5dfe8:	cmp	r3, #2
   5dfec:	bhi	5e008 <__assert_fail@plt+0x4b91c>
   5dff0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5dff4:	mov	r2, #1
   5dff8:	str	r2, [r3]
   5dffc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e000:	sub	r3, r3, #1
   5e004:	b	5e284 <__assert_fail@plt+0x4bb98>
   5e008:	mvn	r3, #0
   5e00c:	str	r3, [fp, #-8]
   5e010:	mov	r3, #0
   5e014:	str	r3, [fp, #-16]
   5e018:	mov	r3, #1
   5e01c:	str	r3, [fp, #-24]	; 0xffffffe8
   5e020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e024:	str	r3, [fp, #-20]	; 0xffffffec
   5e028:	b	5e10c <__assert_fail@plt+0x4ba20>
   5e02c:	ldr	r2, [fp, #-16]
   5e030:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e034:	add	r3, r2, r3
   5e038:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e03c:	add	r3, r2, r3
   5e040:	ldrb	r3, [r3]
   5e044:	strb	r3, [fp, #-25]	; 0xffffffe7
   5e048:	ldr	r2, [fp, #-8]
   5e04c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e050:	add	r3, r2, r3
   5e054:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e058:	add	r3, r2, r3
   5e05c:	ldrb	r3, [r3]
   5e060:	strb	r3, [fp, #-26]	; 0xffffffe6
   5e064:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   5e068:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   5e06c:	cmp	r2, r3
   5e070:	bcs	5e0a0 <__assert_fail@plt+0x4b9b4>
   5e074:	ldr	r2, [fp, #-16]
   5e078:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e07c:	add	r3, r2, r3
   5e080:	str	r3, [fp, #-16]
   5e084:	mov	r3, #1
   5e088:	str	r3, [fp, #-20]	; 0xffffffec
   5e08c:	ldr	r2, [fp, #-16]
   5e090:	ldr	r3, [fp, #-8]
   5e094:	sub	r3, r2, r3
   5e098:	str	r3, [fp, #-24]	; 0xffffffe8
   5e09c:	b	5e10c <__assert_fail@plt+0x4ba20>
   5e0a0:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   5e0a4:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   5e0a8:	cmp	r2, r3
   5e0ac:	bne	5e0ec <__assert_fail@plt+0x4ba00>
   5e0b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e0b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e0b8:	cmp	r2, r3
   5e0bc:	beq	5e0d0 <__assert_fail@plt+0x4b9e4>
   5e0c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e0c4:	add	r3, r3, #1
   5e0c8:	str	r3, [fp, #-20]	; 0xffffffec
   5e0cc:	b	5e10c <__assert_fail@plt+0x4ba20>
   5e0d0:	ldr	r2, [fp, #-16]
   5e0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e0d8:	add	r3, r2, r3
   5e0dc:	str	r3, [fp, #-16]
   5e0e0:	mov	r3, #1
   5e0e4:	str	r3, [fp, #-20]	; 0xffffffec
   5e0e8:	b	5e10c <__assert_fail@plt+0x4ba20>
   5e0ec:	ldr	r3, [fp, #-16]
   5e0f0:	add	r2, r3, #1
   5e0f4:	str	r2, [fp, #-16]
   5e0f8:	str	r3, [fp, #-8]
   5e0fc:	mov	r3, #1
   5e100:	str	r3, [fp, #-24]	; 0xffffffe8
   5e104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e108:	str	r3, [fp, #-20]	; 0xffffffec
   5e10c:	ldr	r2, [fp, #-16]
   5e110:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e114:	add	r3, r2, r3
   5e118:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5e11c:	cmp	r2, r3
   5e120:	bhi	5e02c <__assert_fail@plt+0x4b940>
   5e124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5e128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e12c:	str	r2, [r3]
   5e130:	mvn	r3, #0
   5e134:	str	r3, [fp, #-12]
   5e138:	mov	r3, #0
   5e13c:	str	r3, [fp, #-16]
   5e140:	mov	r3, #1
   5e144:	str	r3, [fp, #-24]	; 0xffffffe8
   5e148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e14c:	str	r3, [fp, #-20]	; 0xffffffec
   5e150:	b	5e234 <__assert_fail@plt+0x4bb48>
   5e154:	ldr	r2, [fp, #-16]
   5e158:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e15c:	add	r3, r2, r3
   5e160:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e164:	add	r3, r2, r3
   5e168:	ldrb	r3, [r3]
   5e16c:	strb	r3, [fp, #-25]	; 0xffffffe7
   5e170:	ldr	r2, [fp, #-12]
   5e174:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e178:	add	r3, r2, r3
   5e17c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e180:	add	r3, r2, r3
   5e184:	ldrb	r3, [r3]
   5e188:	strb	r3, [fp, #-26]	; 0xffffffe6
   5e18c:	ldrb	r2, [fp, #-26]	; 0xffffffe6
   5e190:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   5e194:	cmp	r2, r3
   5e198:	bcs	5e1c8 <__assert_fail@plt+0x4badc>
   5e19c:	ldr	r2, [fp, #-16]
   5e1a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e1a4:	add	r3, r2, r3
   5e1a8:	str	r3, [fp, #-16]
   5e1ac:	mov	r3, #1
   5e1b0:	str	r3, [fp, #-20]	; 0xffffffec
   5e1b4:	ldr	r2, [fp, #-16]
   5e1b8:	ldr	r3, [fp, #-12]
   5e1bc:	sub	r3, r2, r3
   5e1c0:	str	r3, [fp, #-24]	; 0xffffffe8
   5e1c4:	b	5e234 <__assert_fail@plt+0x4bb48>
   5e1c8:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   5e1cc:	ldrb	r3, [fp, #-26]	; 0xffffffe6
   5e1d0:	cmp	r2, r3
   5e1d4:	bne	5e214 <__assert_fail@plt+0x4bb28>
   5e1d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e1dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e1e0:	cmp	r2, r3
   5e1e4:	beq	5e1f8 <__assert_fail@plt+0x4bb0c>
   5e1e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e1ec:	add	r3, r3, #1
   5e1f0:	str	r3, [fp, #-20]	; 0xffffffec
   5e1f4:	b	5e234 <__assert_fail@plt+0x4bb48>
   5e1f8:	ldr	r2, [fp, #-16]
   5e1fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e200:	add	r3, r2, r3
   5e204:	str	r3, [fp, #-16]
   5e208:	mov	r3, #1
   5e20c:	str	r3, [fp, #-20]	; 0xffffffec
   5e210:	b	5e234 <__assert_fail@plt+0x4bb48>
   5e214:	ldr	r3, [fp, #-16]
   5e218:	add	r2, r3, #1
   5e21c:	str	r2, [fp, #-16]
   5e220:	str	r3, [fp, #-12]
   5e224:	mov	r3, #1
   5e228:	str	r3, [fp, #-24]	; 0xffffffe8
   5e22c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e230:	str	r3, [fp, #-20]	; 0xffffffec
   5e234:	ldr	r2, [fp, #-16]
   5e238:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e23c:	add	r3, r2, r3
   5e240:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5e244:	cmp	r2, r3
   5e248:	bhi	5e154 <__assert_fail@plt+0x4ba68>
   5e24c:	ldr	r3, [fp, #-12]
   5e250:	add	r2, r3, #1
   5e254:	ldr	r3, [fp, #-8]
   5e258:	add	r3, r3, #1
   5e25c:	cmp	r2, r3
   5e260:	bcs	5e270 <__assert_fail@plt+0x4bb84>
   5e264:	ldr	r3, [fp, #-8]
   5e268:	add	r3, r3, #1
   5e26c:	b	5e284 <__assert_fail@plt+0x4bb98>
   5e270:	ldr	r3, [fp, #-40]	; 0xffffffd8
   5e274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e278:	str	r2, [r3]
   5e27c:	ldr	r3, [fp, #-12]
   5e280:	add	r3, r3, #1
   5e284:	mov	r0, r3
   5e288:	add	sp, fp, #0
   5e28c:	pop	{fp}		; (ldr fp, [sp], #4)
   5e290:	bx	lr
   5e294:	str	fp, [sp, #-8]!
   5e298:	str	lr, [sp, #4]
   5e29c:	add	fp, sp, #4
   5e2a0:	sub	sp, sp, #40	; 0x28
   5e2a4:	str	r0, [fp, #-32]	; 0xffffffe0
   5e2a8:	str	r1, [fp, #-36]	; 0xffffffdc
   5e2ac:	str	r2, [fp, #-40]	; 0xffffffd8
   5e2b0:	str	r3, [fp, #-44]	; 0xffffffd4
   5e2b4:	sub	r3, fp, #24
   5e2b8:	mov	r2, r3
   5e2bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   5e2c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5e2c4:	bl	5dfcc <__assert_fail@plt+0x4b8e0>
   5e2c8:	str	r0, [fp, #-20]	; 0xffffffec
   5e2cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e2d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5e2d4:	add	r3, r2, r3
   5e2d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e2dc:	mov	r1, r3
   5e2e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   5e2e4:	bl	12158 <memcmp@plt>
   5e2e8:	mov	r3, r0
   5e2ec:	cmp	r3, #0
   5e2f0:	bne	5e4a8 <__assert_fail@plt+0x4bdbc>
   5e2f4:	mov	r3, #0
   5e2f8:	str	r3, [fp, #-16]
   5e2fc:	mov	r3, #0
   5e300:	str	r3, [fp, #-12]
   5e304:	b	5e450 <__assert_fail@plt+0x4bd64>
   5e308:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e30c:	ldr	r3, [fp, #-16]
   5e310:	cmp	r2, r3
   5e314:	movcs	r3, r2
   5e318:	movcc	r3, r3
   5e31c:	str	r3, [fp, #-8]
   5e320:	b	5e330 <__assert_fail@plt+0x4bc44>
   5e324:	ldr	r3, [fp, #-8]
   5e328:	add	r3, r3, #1
   5e32c:	str	r3, [fp, #-8]
   5e330:	ldr	r2, [fp, #-8]
   5e334:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5e338:	cmp	r2, r3
   5e33c:	bcs	5e370 <__assert_fail@plt+0x4bc84>
   5e340:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5e344:	ldr	r3, [fp, #-8]
   5e348:	add	r3, r2, r3
   5e34c:	ldrb	r2, [r3]
   5e350:	ldr	r1, [fp, #-8]
   5e354:	ldr	r3, [fp, #-12]
   5e358:	add	r3, r1, r3
   5e35c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5e360:	add	r3, r1, r3
   5e364:	ldrb	r3, [r3]
   5e368:	cmp	r2, r3
   5e36c:	beq	5e324 <__assert_fail@plt+0x4bc38>
   5e370:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5e374:	ldr	r3, [fp, #-8]
   5e378:	cmp	r2, r3
   5e37c:	bhi	5e42c <__assert_fail@plt+0x4bd40>
   5e380:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e384:	sub	r3, r3, #1
   5e388:	str	r3, [fp, #-8]
   5e38c:	b	5e39c <__assert_fail@plt+0x4bcb0>
   5e390:	ldr	r3, [fp, #-8]
   5e394:	sub	r3, r3, #1
   5e398:	str	r3, [fp, #-8]
   5e39c:	ldr	r3, [fp, #-8]
   5e3a0:	add	r3, r3, #1
   5e3a4:	ldr	r2, [fp, #-16]
   5e3a8:	cmp	r2, r3
   5e3ac:	bcs	5e3e0 <__assert_fail@plt+0x4bcf4>
   5e3b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5e3b4:	ldr	r3, [fp, #-8]
   5e3b8:	add	r3, r2, r3
   5e3bc:	ldrb	r2, [r3]
   5e3c0:	ldr	r1, [fp, #-8]
   5e3c4:	ldr	r3, [fp, #-12]
   5e3c8:	add	r3, r1, r3
   5e3cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5e3d0:	add	r3, r1, r3
   5e3d4:	ldrb	r3, [r3]
   5e3d8:	cmp	r2, r3
   5e3dc:	beq	5e390 <__assert_fail@plt+0x4bca4>
   5e3e0:	ldr	r3, [fp, #-8]
   5e3e4:	add	r2, r3, #1
   5e3e8:	ldr	r3, [fp, #-16]
   5e3ec:	add	r3, r3, #1
   5e3f0:	cmp	r2, r3
   5e3f4:	bcs	5e408 <__assert_fail@plt+0x4bd1c>
   5e3f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e3fc:	ldr	r3, [fp, #-12]
   5e400:	add	r3, r2, r3
   5e404:	b	5e63c <__assert_fail@plt+0x4bf50>
   5e408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e40c:	ldr	r2, [fp, #-12]
   5e410:	add	r3, r2, r3
   5e414:	str	r3, [fp, #-12]
   5e418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e41c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5e420:	sub	r3, r2, r3
   5e424:	str	r3, [fp, #-16]
   5e428:	b	5e450 <__assert_fail@plt+0x4bd64>
   5e42c:	ldr	r2, [fp, #-8]
   5e430:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e434:	sub	r2, r2, r3
   5e438:	ldr	r3, [fp, #-12]
   5e43c:	add	r3, r2, r3
   5e440:	add	r3, r3, #1
   5e444:	str	r3, [fp, #-12]
   5e448:	mov	r3, #0
   5e44c:	str	r3, [fp, #-16]
   5e450:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e458:	add	r0, r2, r3
   5e45c:	ldr	r2, [fp, #-12]
   5e460:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5e464:	add	r2, r2, r3
   5e468:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e46c:	sub	r3, r2, r3
   5e470:	mov	r2, r3
   5e474:	mov	r1, #0
   5e478:	bl	124ac <memchr@plt>
   5e47c:	mov	r3, r0
   5e480:	cmp	r3, #0
   5e484:	bne	5e638 <__assert_fail@plt+0x4bf4c>
   5e488:	ldr	r2, [fp, #-12]
   5e48c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5e490:	add	r3, r2, r3
   5e494:	str	r3, [fp, #-36]	; 0xffffffdc
   5e498:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e49c:	cmp	r3, #0
   5e4a0:	bne	5e308 <__assert_fail@plt+0x4bc1c>
   5e4a4:	b	5e638 <__assert_fail@plt+0x4bf4c>
   5e4a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5e4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e4b0:	sub	r2, r2, r3
   5e4b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e4b8:	cmp	r2, r3
   5e4bc:	movcs	r3, r2
   5e4c0:	movcc	r3, r3
   5e4c4:	add	r3, r3, #1
   5e4c8:	str	r3, [fp, #-24]	; 0xffffffe8
   5e4cc:	mov	r3, #0
   5e4d0:	str	r3, [fp, #-12]
   5e4d4:	b	5e5e4 <__assert_fail@plt+0x4bef8>
   5e4d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e4dc:	str	r3, [fp, #-8]
   5e4e0:	b	5e4f0 <__assert_fail@plt+0x4be04>
   5e4e4:	ldr	r3, [fp, #-8]
   5e4e8:	add	r3, r3, #1
   5e4ec:	str	r3, [fp, #-8]
   5e4f0:	ldr	r2, [fp, #-8]
   5e4f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5e4f8:	cmp	r2, r3
   5e4fc:	bcs	5e530 <__assert_fail@plt+0x4be44>
   5e500:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5e504:	ldr	r3, [fp, #-8]
   5e508:	add	r3, r2, r3
   5e50c:	ldrb	r2, [r3]
   5e510:	ldr	r1, [fp, #-8]
   5e514:	ldr	r3, [fp, #-12]
   5e518:	add	r3, r1, r3
   5e51c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5e520:	add	r3, r1, r3
   5e524:	ldrb	r3, [r3]
   5e528:	cmp	r2, r3
   5e52c:	beq	5e4e4 <__assert_fail@plt+0x4bdf8>
   5e530:	ldr	r2, [fp, #-44]	; 0xffffffd4
   5e534:	ldr	r3, [fp, #-8]
   5e538:	cmp	r2, r3
   5e53c:	bhi	5e5c8 <__assert_fail@plt+0x4bedc>
   5e540:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e544:	sub	r3, r3, #1
   5e548:	str	r3, [fp, #-8]
   5e54c:	b	5e55c <__assert_fail@plt+0x4be70>
   5e550:	ldr	r3, [fp, #-8]
   5e554:	sub	r3, r3, #1
   5e558:	str	r3, [fp, #-8]
   5e55c:	ldr	r3, [fp, #-8]
   5e560:	cmn	r3, #1
   5e564:	beq	5e598 <__assert_fail@plt+0x4beac>
   5e568:	ldr	r2, [fp, #-40]	; 0xffffffd8
   5e56c:	ldr	r3, [fp, #-8]
   5e570:	add	r3, r2, r3
   5e574:	ldrb	r2, [r3]
   5e578:	ldr	r1, [fp, #-8]
   5e57c:	ldr	r3, [fp, #-12]
   5e580:	add	r3, r1, r3
   5e584:	ldr	r1, [fp, #-32]	; 0xffffffe0
   5e588:	add	r3, r1, r3
   5e58c:	ldrb	r3, [r3]
   5e590:	cmp	r2, r3
   5e594:	beq	5e550 <__assert_fail@plt+0x4be64>
   5e598:	ldr	r3, [fp, #-8]
   5e59c:	cmn	r3, #1
   5e5a0:	bne	5e5b4 <__assert_fail@plt+0x4bec8>
   5e5a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e5a8:	ldr	r3, [fp, #-12]
   5e5ac:	add	r3, r2, r3
   5e5b0:	b	5e63c <__assert_fail@plt+0x4bf50>
   5e5b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e5b8:	ldr	r2, [fp, #-12]
   5e5bc:	add	r3, r2, r3
   5e5c0:	str	r3, [fp, #-12]
   5e5c4:	b	5e5e4 <__assert_fail@plt+0x4bef8>
   5e5c8:	ldr	r2, [fp, #-8]
   5e5cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e5d0:	sub	r2, r2, r3
   5e5d4:	ldr	r3, [fp, #-12]
   5e5d8:	add	r3, r2, r3
   5e5dc:	add	r3, r3, #1
   5e5e0:	str	r3, [fp, #-12]
   5e5e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5e5e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e5ec:	add	r0, r2, r3
   5e5f0:	ldr	r2, [fp, #-12]
   5e5f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5e5f8:	add	r2, r2, r3
   5e5fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e600:	sub	r3, r2, r3
   5e604:	mov	r2, r3
   5e608:	mov	r1, #0
   5e60c:	bl	124ac <memchr@plt>
   5e610:	mov	r3, r0
   5e614:	cmp	r3, #0
   5e618:	bne	5e638 <__assert_fail@plt+0x4bf4c>
   5e61c:	ldr	r2, [fp, #-12]
   5e620:	ldr	r3, [fp, #-44]	; 0xffffffd4
   5e624:	add	r3, r2, r3
   5e628:	str	r3, [fp, #-36]	; 0xffffffdc
   5e62c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5e630:	cmp	r3, #0
   5e634:	bne	5e4d8 <__assert_fail@plt+0x4bdec>
   5e638:	mov	r3, #0
   5e63c:	mov	r0, r3
   5e640:	sub	sp, fp, #4
   5e644:	ldr	fp, [sp]
   5e648:	add	sp, sp, #4
   5e64c:	pop	{pc}		; (ldr pc, [sp], #4)
   5e650:	str	fp, [sp, #-8]!
   5e654:	str	lr, [sp, #4]
   5e658:	add	fp, sp, #4
   5e65c:	sub	sp, sp, #1072	; 0x430
   5e660:	str	r0, [fp, #-1064]	; 0xfffffbd8
   5e664:	str	r1, [fp, #-1068]	; 0xfffffbd4
   5e668:	str	r2, [fp, #-1072]	; 0xfffffbd0
   5e66c:	str	r3, [fp, #-1076]	; 0xfffffbcc
   5e670:	sub	r3, fp, #32
   5e674:	mov	r2, r3
   5e678:	ldr	r1, [fp, #-1076]	; 0xfffffbcc
   5e67c:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
   5e680:	bl	5dfcc <__assert_fail@plt+0x4b8e0>
   5e684:	str	r0, [fp, #-24]	; 0xffffffe8
   5e688:	mov	r3, #0
   5e68c:	str	r3, [fp, #-8]
   5e690:	b	5e6b8 <__assert_fail@plt+0x4bfcc>
   5e694:	ldr	r3, [fp, #-8]
   5e698:	lsl	r3, r3, #2
   5e69c:	sub	r2, fp, #4
   5e6a0:	add	r3, r2, r3
   5e6a4:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5e6a8:	str	r2, [r3, #-1052]	; 0xfffffbe4
   5e6ac:	ldr	r3, [fp, #-8]
   5e6b0:	add	r3, r3, #1
   5e6b4:	str	r3, [fp, #-8]
   5e6b8:	ldr	r3, [fp, #-8]
   5e6bc:	cmp	r3, #255	; 0xff
   5e6c0:	bls	5e694 <__assert_fail@plt+0x4bfa8>
   5e6c4:	mov	r3, #0
   5e6c8:	str	r3, [fp, #-8]
   5e6cc:	b	5e710 <__assert_fail@plt+0x4c024>
   5e6d0:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5e6d4:	ldr	r3, [fp, #-8]
   5e6d8:	sub	r3, r2, r3
   5e6dc:	ldr	r1, [fp, #-1072]	; 0xfffffbd0
   5e6e0:	ldr	r2, [fp, #-8]
   5e6e4:	add	r2, r1, r2
   5e6e8:	ldrb	r2, [r2]
   5e6ec:	mov	r1, r2
   5e6f0:	sub	r2, r3, #1
   5e6f4:	lsl	r3, r1, #2
   5e6f8:	sub	r1, fp, #4
   5e6fc:	add	r3, r1, r3
   5e700:	str	r2, [r3, #-1052]	; 0xfffffbe4
   5e704:	ldr	r3, [fp, #-8]
   5e708:	add	r3, r3, #1
   5e70c:	str	r3, [fp, #-8]
   5e710:	ldr	r2, [fp, #-8]
   5e714:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5e718:	cmp	r2, r3
   5e71c:	bcc	5e6d0 <__assert_fail@plt+0x4bfe4>
   5e720:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e724:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5e728:	add	r3, r2, r3
   5e72c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e730:	mov	r1, r3
   5e734:	ldr	r0, [fp, #-1072]	; 0xfffffbd0
   5e738:	bl	12158 <memcmp@plt>
   5e73c:	mov	r3, r0
   5e740:	cmp	r3, #0
   5e744:	bne	5e988 <__assert_fail@plt+0x4c29c>
   5e748:	mov	r3, #0
   5e74c:	str	r3, [fp, #-16]
   5e750:	mov	r3, #0
   5e754:	str	r3, [fp, #-12]
   5e758:	b	5e930 <__assert_fail@plt+0x4c244>
   5e75c:	ldr	r2, [fp, #-12]
   5e760:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5e764:	add	r3, r2, r3
   5e768:	sub	r3, r3, #1
   5e76c:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5e770:	add	r3, r2, r3
   5e774:	ldrb	r3, [r3]
   5e778:	lsl	r3, r3, #2
   5e77c:	sub	r2, fp, #4
   5e780:	add	r3, r2, r3
   5e784:	ldr	r3, [r3, #-1052]	; 0xfffffbe4
   5e788:	str	r3, [fp, #-20]	; 0xffffffec
   5e78c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e790:	cmp	r3, #0
   5e794:	beq	5e7e0 <__assert_fail@plt+0x4c0f4>
   5e798:	ldr	r3, [fp, #-16]
   5e79c:	cmp	r3, #0
   5e7a0:	beq	5e7c4 <__assert_fail@plt+0x4c0d8>
   5e7a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e7a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   5e7ac:	cmp	r2, r3
   5e7b0:	bcs	5e7c4 <__assert_fail@plt+0x4c0d8>
   5e7b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e7b8:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5e7bc:	sub	r3, r2, r3
   5e7c0:	str	r3, [fp, #-20]	; 0xffffffec
   5e7c4:	mov	r3, #0
   5e7c8:	str	r3, [fp, #-16]
   5e7cc:	ldr	r2, [fp, #-12]
   5e7d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   5e7d4:	add	r3, r2, r3
   5e7d8:	str	r3, [fp, #-12]
   5e7dc:	b	5e930 <__assert_fail@plt+0x4c244>
   5e7e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5e7e4:	ldr	r3, [fp, #-16]
   5e7e8:	cmp	r2, r3
   5e7ec:	movcs	r3, r2
   5e7f0:	movcc	r3, r3
   5e7f4:	str	r3, [fp, #-8]
   5e7f8:	b	5e808 <__assert_fail@plt+0x4c11c>
   5e7fc:	ldr	r3, [fp, #-8]
   5e800:	add	r3, r3, #1
   5e804:	str	r3, [fp, #-8]
   5e808:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5e80c:	sub	r3, r3, #1
   5e810:	ldr	r2, [fp, #-8]
   5e814:	cmp	r2, r3
   5e818:	bcs	5e84c <__assert_fail@plt+0x4c160>
   5e81c:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5e820:	ldr	r3, [fp, #-8]
   5e824:	add	r3, r2, r3
   5e828:	ldrb	r2, [r3]
   5e82c:	ldr	r1, [fp, #-8]
   5e830:	ldr	r3, [fp, #-12]
   5e834:	add	r3, r1, r3
   5e838:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5e83c:	add	r3, r1, r3
   5e840:	ldrb	r3, [r3]
   5e844:	cmp	r2, r3
   5e848:	beq	5e7fc <__assert_fail@plt+0x4c110>
   5e84c:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5e850:	sub	r3, r3, #1
   5e854:	ldr	r2, [fp, #-8]
   5e858:	cmp	r2, r3
   5e85c:	bcc	5e90c <__assert_fail@plt+0x4c220>
   5e860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e864:	sub	r3, r3, #1
   5e868:	str	r3, [fp, #-8]
   5e86c:	b	5e87c <__assert_fail@plt+0x4c190>
   5e870:	ldr	r3, [fp, #-8]
   5e874:	sub	r3, r3, #1
   5e878:	str	r3, [fp, #-8]
   5e87c:	ldr	r3, [fp, #-8]
   5e880:	add	r3, r3, #1
   5e884:	ldr	r2, [fp, #-16]
   5e888:	cmp	r2, r3
   5e88c:	bcs	5e8c0 <__assert_fail@plt+0x4c1d4>
   5e890:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5e894:	ldr	r3, [fp, #-8]
   5e898:	add	r3, r2, r3
   5e89c:	ldrb	r2, [r3]
   5e8a0:	ldr	r1, [fp, #-8]
   5e8a4:	ldr	r3, [fp, #-12]
   5e8a8:	add	r3, r1, r3
   5e8ac:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5e8b0:	add	r3, r1, r3
   5e8b4:	ldrb	r3, [r3]
   5e8b8:	cmp	r2, r3
   5e8bc:	beq	5e870 <__assert_fail@plt+0x4c184>
   5e8c0:	ldr	r3, [fp, #-8]
   5e8c4:	add	r2, r3, #1
   5e8c8:	ldr	r3, [fp, #-16]
   5e8cc:	add	r3, r3, #1
   5e8d0:	cmp	r2, r3
   5e8d4:	bcs	5e8e8 <__assert_fail@plt+0x4c1fc>
   5e8d8:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5e8dc:	ldr	r3, [fp, #-12]
   5e8e0:	add	r3, r2, r3
   5e8e4:	b	5eb74 <__assert_fail@plt+0x4c488>
   5e8e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e8ec:	ldr	r2, [fp, #-12]
   5e8f0:	add	r3, r2, r3
   5e8f4:	str	r3, [fp, #-12]
   5e8f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5e8fc:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5e900:	sub	r3, r2, r3
   5e904:	str	r3, [fp, #-16]
   5e908:	b	5e930 <__assert_fail@plt+0x4c244>
   5e90c:	ldr	r2, [fp, #-8]
   5e910:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e914:	sub	r2, r2, r3
   5e918:	ldr	r3, [fp, #-12]
   5e91c:	add	r3, r2, r3
   5e920:	add	r3, r3, #1
   5e924:	str	r3, [fp, #-12]
   5e928:	mov	r3, #0
   5e92c:	str	r3, [fp, #-16]
   5e930:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5e934:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5e938:	add	r0, r2, r3
   5e93c:	ldr	r2, [fp, #-12]
   5e940:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5e944:	add	r2, r2, r3
   5e948:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5e94c:	sub	r3, r2, r3
   5e950:	mov	r2, r3
   5e954:	mov	r1, #0
   5e958:	bl	124ac <memchr@plt>
   5e95c:	mov	r3, r0
   5e960:	cmp	r3, #0
   5e964:	bne	5eb70 <__assert_fail@plt+0x4c484>
   5e968:	ldr	r2, [fp, #-12]
   5e96c:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5e970:	add	r3, r2, r3
   5e974:	str	r3, [fp, #-1068]	; 0xfffffbd4
   5e978:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5e97c:	cmp	r3, #0
   5e980:	bne	5e75c <__assert_fail@plt+0x4c070>
   5e984:	b	5eb70 <__assert_fail@plt+0x4c484>
   5e988:	ldr	r2, [fp, #-1076]	; 0xfffffbcc
   5e98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e990:	sub	r2, r2, r3
   5e994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5e998:	cmp	r2, r3
   5e99c:	movcs	r3, r2
   5e9a0:	movcc	r3, r3
   5e9a4:	add	r3, r3, #1
   5e9a8:	str	r3, [fp, #-32]	; 0xffffffe0
   5e9ac:	mov	r3, #0
   5e9b0:	str	r3, [fp, #-12]
   5e9b4:	b	5eb1c <__assert_fail@plt+0x4c430>
   5e9b8:	ldr	r2, [fp, #-12]
   5e9bc:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5e9c0:	add	r3, r2, r3
   5e9c4:	sub	r3, r3, #1
   5e9c8:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5e9cc:	add	r3, r2, r3
   5e9d0:	ldrb	r3, [r3]
   5e9d4:	lsl	r3, r3, #2
   5e9d8:	sub	r2, fp, #4
   5e9dc:	add	r3, r2, r3
   5e9e0:	ldr	r3, [r3, #-1052]	; 0xfffffbe4
   5e9e4:	str	r3, [fp, #-28]	; 0xffffffe4
   5e9e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5e9ec:	cmp	r3, #0
   5e9f0:	beq	5ea08 <__assert_fail@plt+0x4c31c>
   5e9f4:	ldr	r2, [fp, #-12]
   5e9f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5e9fc:	add	r3, r2, r3
   5ea00:	str	r3, [fp, #-12]
   5ea04:	b	5eb1c <__assert_fail@plt+0x4c430>
   5ea08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ea0c:	str	r3, [fp, #-8]
   5ea10:	b	5ea20 <__assert_fail@plt+0x4c334>
   5ea14:	ldr	r3, [fp, #-8]
   5ea18:	add	r3, r3, #1
   5ea1c:	str	r3, [fp, #-8]
   5ea20:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5ea24:	sub	r3, r3, #1
   5ea28:	ldr	r2, [fp, #-8]
   5ea2c:	cmp	r2, r3
   5ea30:	bcs	5ea64 <__assert_fail@plt+0x4c378>
   5ea34:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5ea38:	ldr	r3, [fp, #-8]
   5ea3c:	add	r3, r2, r3
   5ea40:	ldrb	r2, [r3]
   5ea44:	ldr	r1, [fp, #-8]
   5ea48:	ldr	r3, [fp, #-12]
   5ea4c:	add	r3, r1, r3
   5ea50:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5ea54:	add	r3, r1, r3
   5ea58:	ldrb	r3, [r3]
   5ea5c:	cmp	r2, r3
   5ea60:	beq	5ea14 <__assert_fail@plt+0x4c328>
   5ea64:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5ea68:	sub	r3, r3, #1
   5ea6c:	ldr	r2, [fp, #-8]
   5ea70:	cmp	r2, r3
   5ea74:	bcc	5eb00 <__assert_fail@plt+0x4c414>
   5ea78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ea7c:	sub	r3, r3, #1
   5ea80:	str	r3, [fp, #-8]
   5ea84:	b	5ea94 <__assert_fail@plt+0x4c3a8>
   5ea88:	ldr	r3, [fp, #-8]
   5ea8c:	sub	r3, r3, #1
   5ea90:	str	r3, [fp, #-8]
   5ea94:	ldr	r3, [fp, #-8]
   5ea98:	cmn	r3, #1
   5ea9c:	beq	5ead0 <__assert_fail@plt+0x4c3e4>
   5eaa0:	ldr	r2, [fp, #-1072]	; 0xfffffbd0
   5eaa4:	ldr	r3, [fp, #-8]
   5eaa8:	add	r3, r2, r3
   5eaac:	ldrb	r2, [r3]
   5eab0:	ldr	r1, [fp, #-8]
   5eab4:	ldr	r3, [fp, #-12]
   5eab8:	add	r3, r1, r3
   5eabc:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   5eac0:	add	r3, r1, r3
   5eac4:	ldrb	r3, [r3]
   5eac8:	cmp	r2, r3
   5eacc:	beq	5ea88 <__assert_fail@plt+0x4c39c>
   5ead0:	ldr	r3, [fp, #-8]
   5ead4:	cmn	r3, #1
   5ead8:	bne	5eaec <__assert_fail@plt+0x4c400>
   5eadc:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5eae0:	ldr	r3, [fp, #-12]
   5eae4:	add	r3, r2, r3
   5eae8:	b	5eb74 <__assert_fail@plt+0x4c488>
   5eaec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5eaf0:	ldr	r2, [fp, #-12]
   5eaf4:	add	r3, r2, r3
   5eaf8:	str	r3, [fp, #-12]
   5eafc:	b	5eb1c <__assert_fail@plt+0x4c430>
   5eb00:	ldr	r2, [fp, #-8]
   5eb04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5eb08:	sub	r2, r2, r3
   5eb0c:	ldr	r3, [fp, #-12]
   5eb10:	add	r3, r2, r3
   5eb14:	add	r3, r3, #1
   5eb18:	str	r3, [fp, #-12]
   5eb1c:	ldr	r2, [fp, #-1064]	; 0xfffffbd8
   5eb20:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5eb24:	add	r0, r2, r3
   5eb28:	ldr	r2, [fp, #-12]
   5eb2c:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5eb30:	add	r2, r2, r3
   5eb34:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5eb38:	sub	r3, r2, r3
   5eb3c:	mov	r2, r3
   5eb40:	mov	r1, #0
   5eb44:	bl	124ac <memchr@plt>
   5eb48:	mov	r3, r0
   5eb4c:	cmp	r3, #0
   5eb50:	bne	5eb70 <__assert_fail@plt+0x4c484>
   5eb54:	ldr	r2, [fp, #-12]
   5eb58:	ldr	r3, [fp, #-1076]	; 0xfffffbcc
   5eb5c:	add	r3, r2, r3
   5eb60:	str	r3, [fp, #-1068]	; 0xfffffbd4
   5eb64:	ldr	r3, [fp, #-1068]	; 0xfffffbd4
   5eb68:	cmp	r3, #0
   5eb6c:	bne	5e9b8 <__assert_fail@plt+0x4c2cc>
   5eb70:	mov	r3, #0
   5eb74:	mov	r0, r3
   5eb78:	sub	sp, fp, #4
   5eb7c:	ldr	fp, [sp]
   5eb80:	add	sp, sp, #4
   5eb84:	pop	{pc}		; (ldr pc, [sp], #4)
   5eb88:	str	fp, [sp, #-8]!
   5eb8c:	str	lr, [sp, #4]
   5eb90:	add	fp, sp, #4
   5eb94:	sub	sp, sp, #32
   5eb98:	str	r0, [fp, #-32]	; 0xffffffe0
   5eb9c:	str	r1, [fp, #-36]	; 0xffffffdc
   5eba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5eba4:	str	r3, [fp, #-8]
   5eba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5ebac:	str	r3, [fp, #-12]
   5ebb0:	mov	r3, #1
   5ebb4:	strb	r3, [fp, #-13]
   5ebb8:	b	5ec08 <__assert_fail@plt+0x4c51c>
   5ebbc:	ldr	r3, [fp, #-8]
   5ebc0:	add	r2, r3, #1
   5ebc4:	str	r2, [fp, #-8]
   5ebc8:	ldrb	r2, [r3]
   5ebcc:	ldr	r3, [fp, #-12]
   5ebd0:	add	r1, r3, #1
   5ebd4:	str	r1, [fp, #-12]
   5ebd8:	ldrb	r3, [r3]
   5ebdc:	cmp	r2, r3
   5ebe0:	moveq	r3, #1
   5ebe4:	movne	r3, #0
   5ebe8:	uxtb	r3, r3
   5ebec:	mov	r2, r3
   5ebf0:	ldrb	r3, [fp, #-13]
   5ebf4:	and	r3, r3, r2
   5ebf8:	cmp	r3, #0
   5ebfc:	movne	r3, #1
   5ec00:	moveq	r3, #0
   5ec04:	strb	r3, [fp, #-13]
   5ec08:	ldr	r3, [fp, #-8]
   5ec0c:	ldrb	r3, [r3]
   5ec10:	cmp	r3, #0
   5ec14:	beq	5ec28 <__assert_fail@plt+0x4c53c>
   5ec18:	ldr	r3, [fp, #-12]
   5ec1c:	ldrb	r3, [r3]
   5ec20:	cmp	r3, #0
   5ec24:	bne	5ebbc <__assert_fail@plt+0x4c4d0>
   5ec28:	ldr	r3, [fp, #-12]
   5ec2c:	ldrb	r3, [r3]
   5ec30:	cmp	r3, #0
   5ec34:	beq	5ec40 <__assert_fail@plt+0x4c554>
   5ec38:	mov	r3, #0
   5ec3c:	b	5ed40 <__assert_fail@plt+0x4c654>
   5ec40:	ldrb	r3, [fp, #-13]
   5ec44:	cmp	r3, #0
   5ec48:	beq	5ec54 <__assert_fail@plt+0x4c568>
   5ec4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5ec50:	b	5ed40 <__assert_fail@plt+0x4c654>
   5ec54:	ldr	r2, [fp, #-12]
   5ec58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5ec5c:	sub	r3, r2, r3
   5ec60:	str	r3, [fp, #-20]	; 0xffffffec
   5ec64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5ec68:	add	r2, r3, #1
   5ec6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5ec70:	ldrb	r3, [r3]
   5ec74:	mov	r1, r3
   5ec78:	mov	r0, r2
   5ec7c:	bl	123c8 <strchr@plt>
   5ec80:	str	r0, [fp, #-8]
   5ec84:	ldr	r3, [fp, #-8]
   5ec88:	cmp	r3, #0
   5ec8c:	beq	5ecac <__assert_fail@plt+0x4c5c0>
   5ec90:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ec94:	cmp	r3, #1
   5ec98:	moveq	r3, #1
   5ec9c:	movne	r3, #0
   5eca0:	uxtb	r3, r3
   5eca4:	cmp	r3, #0
   5eca8:	beq	5ecb4 <__assert_fail@plt+0x4c5c8>
   5ecac:	ldr	r3, [fp, #-8]
   5ecb0:	b	5ed40 <__assert_fail@plt+0x4c654>
   5ecb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ecb8:	rsb	r3, r3, #0
   5ecbc:	ldr	r2, [fp, #-12]
   5ecc0:	add	r3, r2, r3
   5ecc4:	str	r3, [fp, #-12]
   5ecc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5eccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ecd0:	add	r3, r2, r3
   5ecd4:	ldr	r2, [fp, #-8]
   5ecd8:	cmp	r2, r3
   5ecdc:	bhi	5ecf8 <__assert_fail@plt+0x4c60c>
   5ece0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5ece4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ece8:	add	r2, r2, r3
   5ecec:	ldr	r3, [fp, #-8]
   5ecf0:	sub	r3, r2, r3
   5ecf4:	b	5ecfc <__assert_fail@plt+0x4c610>
   5ecf8:	mov	r3, #1
   5ecfc:	str	r3, [fp, #-24]	; 0xffffffe8
   5ed00:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ed04:	cmp	r3, #31
   5ed08:	bhi	5ed28 <__assert_fail@plt+0x4c63c>
   5ed0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ed10:	ldr	r2, [fp, #-12]
   5ed14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5ed18:	ldr	r0, [fp, #-8]
   5ed1c:	bl	5e294 <__assert_fail@plt+0x4bba8>
   5ed20:	mov	r3, r0
   5ed24:	b	5ed40 <__assert_fail@plt+0x4c654>
   5ed28:	ldr	r3, [fp, #-20]	; 0xffffffec
   5ed2c:	ldr	r2, [fp, #-12]
   5ed30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5ed34:	ldr	r0, [fp, #-8]
   5ed38:	bl	5e650 <__assert_fail@plt+0x4bf64>
   5ed3c:	mov	r3, r0
   5ed40:	mov	r0, r3
   5ed44:	sub	sp, fp, #4
   5ed48:	ldr	fp, [sp]
   5ed4c:	add	sp, sp, #4
   5ed50:	pop	{pc}		; (ldr pc, [sp], #4)
   5ed54:	str	fp, [sp, #-8]!
   5ed58:	str	lr, [sp, #4]
   5ed5c:	add	fp, sp, #4
   5ed60:	sub	sp, sp, #16
   5ed64:	str	r0, [fp, #-8]
   5ed68:	str	r1, [fp, #-12]
   5ed6c:	str	r2, [fp, #-16]
   5ed70:	ldr	r2, [fp, #-16]
   5ed74:	ldr	r1, [fp, #-12]
   5ed78:	ldr	r0, [fp, #-8]
   5ed7c:	bl	120f8 <memcpy@plt>
   5ed80:	ldr	r2, [fp, #-8]
   5ed84:	ldr	r3, [fp, #-16]
   5ed88:	add	r3, r2, r3
   5ed8c:	mov	r2, #0
   5ed90:	strb	r2, [r3]
   5ed94:	nop	{0}
   5ed98:	sub	sp, fp, #4
   5ed9c:	ldr	fp, [sp]
   5eda0:	add	sp, sp, #4
   5eda4:	pop	{pc}		; (ldr pc, [sp], #4)
   5eda8:	str	fp, [sp, #-8]!
   5edac:	str	lr, [sp, #4]
   5edb0:	add	fp, sp, #4
   5edb4:	sub	sp, sp, #24
   5edb8:	str	r0, [fp, #-24]	; 0xffffffe8
   5edbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5edc0:	cmp	r3, #0
   5edc4:	beq	5eddc <__assert_fail@plt+0x4c6f0>
   5edc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5edcc:	bl	123bc <strlen@plt>
   5edd0:	mov	r3, r0
   5edd4:	add	r3, r3, #1
   5edd8:	b	5ede0 <__assert_fail@plt+0x4c6f4>
   5eddc:	mov	r3, #0
   5ede0:	str	r3, [fp, #-8]
   5ede4:	ldr	r3, [fp, #-8]
   5ede8:	cmp	r3, #58	; 0x3a
   5edec:	movcs	r3, r3
   5edf0:	movcc	r3, #58	; 0x3a
   5edf4:	add	r3, r3, #1
   5edf8:	str	r3, [fp, #-12]
   5edfc:	ldr	r3, [fp, #-12]
   5ee00:	add	r3, r3, #8
   5ee04:	bic	r3, r3, #3
   5ee08:	mov	r0, r3
   5ee0c:	bl	43510 <__assert_fail@plt+0x30e24>
   5ee10:	mov	r3, r0
   5ee14:	str	r3, [fp, #-16]
   5ee18:	ldr	r3, [fp, #-16]
   5ee1c:	cmp	r3, #0
   5ee20:	beq	5ee80 <__assert_fail@plt+0x4c794>
   5ee24:	ldr	r3, [fp, #-16]
   5ee28:	mov	r2, #0
   5ee2c:	str	r2, [r3]
   5ee30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ee34:	cmp	r3, #0
   5ee38:	movne	r3, #1
   5ee3c:	moveq	r3, #0
   5ee40:	uxtb	r3, r3
   5ee44:	mov	r2, r3
   5ee48:	ldr	r3, [fp, #-16]
   5ee4c:	strb	r2, [r3, #4]
   5ee50:	ldr	r3, [fp, #-16]
   5ee54:	mov	r2, #0
   5ee58:	strb	r2, [r3, #5]
   5ee5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ee60:	cmp	r3, #0
   5ee64:	beq	5ee80 <__assert_fail@plt+0x4c794>
   5ee68:	ldr	r3, [fp, #-16]
   5ee6c:	add	r3, r3, #5
   5ee70:	ldr	r2, [fp, #-8]
   5ee74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5ee78:	mov	r0, r3
   5ee7c:	bl	5ed54 <__assert_fail@plt+0x4c668>
   5ee80:	ldr	r3, [fp, #-16]
   5ee84:	mov	r0, r3
   5ee88:	sub	sp, fp, #4
   5ee8c:	ldr	fp, [sp]
   5ee90:	add	sp, sp, #4
   5ee94:	pop	{pc}		; (ldr pc, [sp], #4)
   5ee98:	str	fp, [sp, #-8]!
   5ee9c:	str	lr, [sp, #4]
   5eea0:	add	fp, sp, #4
   5eea4:	sub	sp, sp, #24
   5eea8:	str	r0, [fp, #-24]	; 0xffffffe8
   5eeac:	str	r1, [fp, #-28]	; 0xffffffe4
   5eeb0:	mov	r3, #0
   5eeb4:	str	r3, [fp, #-12]
   5eeb8:	movw	r3, #47960	; 0xbb58
   5eebc:	movt	r3, #6
   5eec0:	str	r3, [fp, #-8]
   5eec4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5eec8:	ldr	r3, [r3, #40]	; 0x28
   5eecc:	str	r3, [fp, #-12]
   5eed0:	ldr	r3, [fp, #-12]
   5eed4:	cmp	r3, #0
   5eed8:	beq	5ef00 <__assert_fail@plt+0x4c814>
   5eedc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5eee0:	ldr	r3, [fp, #-12]
   5eee4:	cmp	r2, r3
   5eee8:	bhi	5ef08 <__assert_fail@plt+0x4c81c>
   5eeec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5eef0:	add	r3, r3, #44	; 0x2c
   5eef4:	ldr	r2, [fp, #-12]
   5eef8:	cmp	r2, r3
   5eefc:	bcs	5ef08 <__assert_fail@plt+0x4c81c>
   5ef00:	mov	r3, #1
   5ef04:	b	5f074 <__assert_fail@plt+0x4c988>
   5ef08:	ldr	r3, [fp, #-12]
   5ef0c:	ldrb	r3, [r3]
   5ef10:	cmp	r3, #0
   5ef14:	beq	5f064 <__assert_fail@plt+0x4c978>
   5ef18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ef1c:	add	r3, r3, #5
   5ef20:	str	r3, [fp, #-8]
   5ef24:	b	5f04c <__assert_fail@plt+0x4c960>
   5ef28:	ldr	r3, [fp, #-8]
   5ef2c:	ldrb	r3, [r3]
   5ef30:	cmp	r3, #0
   5ef34:	bne	5eff8 <__assert_fail@plt+0x4c90c>
   5ef38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ef3c:	add	r3, r3, #5
   5ef40:	ldr	r2, [fp, #-8]
   5ef44:	cmp	r2, r3
   5ef48:	bne	5ef5c <__assert_fail@plt+0x4c870>
   5ef4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ef50:	ldrb	r3, [r3, #4]
   5ef54:	cmp	r3, #0
   5ef58:	bne	5eff8 <__assert_fail@plt+0x4c90c>
   5ef5c:	ldr	r0, [fp, #-12]
   5ef60:	bl	123bc <strlen@plt>
   5ef64:	mov	r3, r0
   5ef68:	add	r3, r3, #1
   5ef6c:	str	r3, [fp, #-16]
   5ef70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5ef74:	add	r3, r3, #5
   5ef78:	add	r2, r3, #59	; 0x3b
   5ef7c:	ldr	r3, [fp, #-8]
   5ef80:	sub	r3, r2, r3
   5ef84:	ldr	r2, [fp, #-16]
   5ef88:	cmp	r2, r3
   5ef8c:	bge	5efa8 <__assert_fail@plt+0x4c8bc>
   5ef90:	ldr	r3, [fp, #-16]
   5ef94:	mov	r2, r3
   5ef98:	ldr	r1, [fp, #-12]
   5ef9c:	ldr	r0, [fp, #-8]
   5efa0:	bl	5ed54 <__assert_fail@plt+0x4c668>
   5efa4:	b	5f064 <__assert_fail@plt+0x4c978>
   5efa8:	ldr	r0, [fp, #-12]
   5efac:	bl	5eda8 <__assert_fail@plt+0x4c6bc>
   5efb0:	mov	r2, r0
   5efb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5efb8:	str	r2, [r3]
   5efbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5efc0:	ldr	r3, [r3]
   5efc4:	str	r3, [fp, #-24]	; 0xffffffe8
   5efc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5efcc:	cmp	r3, #0
   5efd0:	bne	5efdc <__assert_fail@plt+0x4c8f0>
   5efd4:	mov	r3, #0
   5efd8:	b	5f074 <__assert_fail@plt+0x4c988>
   5efdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5efe0:	mov	r2, #0
   5efe4:	strb	r2, [r3, #4]
   5efe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5efec:	add	r3, r3, #5
   5eff0:	str	r3, [fp, #-8]
   5eff4:	b	5f064 <__assert_fail@plt+0x4c978>
   5eff8:	ldr	r0, [fp, #-8]
   5effc:	bl	123bc <strlen@plt>
   5f000:	mov	r3, r0
   5f004:	add	r3, r3, #1
   5f008:	ldr	r2, [fp, #-8]
   5f00c:	add	r3, r2, r3
   5f010:	str	r3, [fp, #-8]
   5f014:	ldr	r3, [fp, #-8]
   5f018:	ldrb	r3, [r3]
   5f01c:	cmp	r3, #0
   5f020:	bne	5f04c <__assert_fail@plt+0x4c960>
   5f024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f028:	ldr	r3, [r3]
   5f02c:	cmp	r3, #0
   5f030:	beq	5f04c <__assert_fail@plt+0x4c960>
   5f034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f038:	ldr	r3, [r3]
   5f03c:	str	r3, [fp, #-24]	; 0xffffffe8
   5f040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f044:	add	r3, r3, #5
   5f048:	str	r3, [fp, #-8]
   5f04c:	ldr	r1, [fp, #-12]
   5f050:	ldr	r0, [fp, #-8]
   5f054:	bl	11ffc <strcmp@plt>
   5f058:	mov	r3, r0
   5f05c:	cmp	r3, #0
   5f060:	bne	5ef28 <__assert_fail@plt+0x4c83c>
   5f064:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5f068:	ldr	r2, [fp, #-8]
   5f06c:	str	r2, [r3, #40]	; 0x28
   5f070:	mov	r3, #1
   5f074:	mov	r0, r3
   5f078:	sub	sp, fp, #4
   5f07c:	ldr	fp, [sp]
   5f080:	add	sp, sp, #4
   5f084:	pop	{pc}		; (ldr pc, [sp], #4)
   5f088:	str	fp, [sp, #-8]!
   5f08c:	str	lr, [sp, #4]
   5f090:	add	fp, sp, #4
   5f094:	sub	sp, sp, #16
   5f098:	str	r0, [fp, #-16]
   5f09c:	mov	r2, #1
   5f0a0:	ldr	r3, [fp, #-16]
   5f0a4:	cmp	r3, r2
   5f0a8:	beq	5f0d8 <__assert_fail@plt+0x4c9ec>
   5f0ac:	b	5f0cc <__assert_fail@plt+0x4c9e0>
   5f0b0:	ldr	r3, [fp, #-16]
   5f0b4:	ldr	r3, [r3]
   5f0b8:	str	r3, [fp, #-8]
   5f0bc:	ldr	r0, [fp, #-16]
   5f0c0:	bl	3fe0c <__assert_fail@plt+0x2d720>
   5f0c4:	ldr	r3, [fp, #-8]
   5f0c8:	str	r3, [fp, #-16]
   5f0cc:	ldr	r3, [fp, #-16]
   5f0d0:	cmp	r3, #0
   5f0d4:	bne	5f0b0 <__assert_fail@plt+0x4c9c4>
   5f0d8:	nop	{0}
   5f0dc:	sub	sp, fp, #4
   5f0e0:	ldr	fp, [sp]
   5f0e4:	add	sp, sp, #4
   5f0e8:	pop	{pc}		; (ldr pc, [sp], #4)
   5f0ec:	str	fp, [sp, #-8]!
   5f0f0:	str	lr, [sp, #4]
   5f0f4:	add	fp, sp, #4
   5f0f8:	movw	r0, #47964	; 0xbb5c
   5f0fc:	movt	r0, #6
   5f100:	bl	122f0 <getenv@plt>
   5f104:	mov	r3, r0
   5f108:	mov	r0, r3
   5f10c:	sub	sp, fp, #4
   5f110:	ldr	fp, [sp]
   5f114:	add	sp, sp, #4
   5f118:	pop	{pc}		; (ldr pc, [sp], #4)
   5f11c:	str	fp, [sp, #-8]!
   5f120:	str	lr, [sp, #4]
   5f124:	add	fp, sp, #4
   5f128:	sub	sp, sp, #8
   5f12c:	str	r0, [fp, #-8]
   5f130:	ldr	r3, [fp, #-8]
   5f134:	cmp	r3, #0
   5f138:	beq	5f158 <__assert_fail@plt+0x4ca6c>
   5f13c:	mov	r2, #1
   5f140:	ldr	r1, [fp, #-8]
   5f144:	movw	r0, #47964	; 0xbb5c
   5f148:	movt	r0, #6
   5f14c:	bl	123d4 <setenv@plt>
   5f150:	mov	r3, r0
   5f154:	b	5f168 <__assert_fail@plt+0x4ca7c>
   5f158:	movw	r0, #47964	; 0xbb5c
   5f15c:	movt	r0, #6
   5f160:	bl	12668 <unsetenv@plt>
   5f164:	mov	r3, r0
   5f168:	mov	r0, r3
   5f16c:	sub	sp, fp, #4
   5f170:	ldr	fp, [sp]
   5f174:	add	sp, sp, #4
   5f178:	pop	{pc}		; (ldr pc, [sp], #4)
   5f17c:	str	fp, [sp, #-8]!
   5f180:	str	lr, [sp, #4]
   5f184:	add	fp, sp, #4
   5f188:	sub	sp, sp, #8
   5f18c:	str	r0, [fp, #-8]
   5f190:	ldr	r3, [fp, #-8]
   5f194:	ldrb	r3, [r3, #4]
   5f198:	cmp	r3, #0
   5f19c:	beq	5f1ac <__assert_fail@plt+0x4cac0>
   5f1a0:	ldr	r3, [fp, #-8]
   5f1a4:	add	r3, r3, #5
   5f1a8:	b	5f1b0 <__assert_fail@plt+0x4cac4>
   5f1ac:	mov	r3, #0
   5f1b0:	mov	r0, r3
   5f1b4:	bl	5f11c <__assert_fail@plt+0x4ca30>
   5f1b8:	mov	r3, r0
   5f1bc:	cmp	r3, #0
   5f1c0:	beq	5f1cc <__assert_fail@plt+0x4cae0>
   5f1c4:	mov	r3, #0
   5f1c8:	b	5f1d4 <__assert_fail@plt+0x4cae8>
   5f1cc:	bl	12200 <tzset@plt>
   5f1d0:	mov	r3, #1
   5f1d4:	mov	r0, r3
   5f1d8:	sub	sp, fp, #4
   5f1dc:	ldr	fp, [sp]
   5f1e0:	add	sp, sp, #4
   5f1e4:	pop	{pc}		; (ldr pc, [sp], #4)
   5f1e8:	str	fp, [sp, #-8]!
   5f1ec:	str	lr, [sp, #4]
   5f1f0:	add	fp, sp, #4
   5f1f4:	sub	sp, sp, #24
   5f1f8:	str	r0, [fp, #-24]	; 0xffffffe8
   5f1fc:	bl	5f0ec <__assert_fail@plt+0x4ca00>
   5f200:	str	r0, [fp, #-8]
   5f204:	ldr	r3, [fp, #-8]
   5f208:	cmp	r3, #0
   5f20c:	beq	5f258 <__assert_fail@plt+0x4cb6c>
   5f210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f214:	ldrb	r3, [r3, #4]
   5f218:	cmp	r3, #0
   5f21c:	beq	5f248 <__assert_fail@plt+0x4cb5c>
   5f220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f224:	add	r3, r3, #5
   5f228:	ldr	r1, [fp, #-8]
   5f22c:	mov	r0, r3
   5f230:	bl	11ffc <strcmp@plt>
   5f234:	mov	r3, r0
   5f238:	cmp	r3, #0
   5f23c:	bne	5f248 <__assert_fail@plt+0x4cb5c>
   5f240:	mov	r3, #1
   5f244:	b	5f24c <__assert_fail@plt+0x4cb60>
   5f248:	mov	r3, #0
   5f24c:	and	r3, r3, #1
   5f250:	uxtb	r3, r3
   5f254:	b	5f270 <__assert_fail@plt+0x4cb84>
   5f258:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f25c:	ldrb	r3, [r3, #4]
   5f260:	cmp	r3, #0
   5f264:	moveq	r3, #1
   5f268:	movne	r3, #0
   5f26c:	uxtb	r3, r3
   5f270:	cmp	r3, #0
   5f274:	beq	5f280 <__assert_fail@plt+0x4cb94>
   5f278:	mov	r3, #1
   5f27c:	b	5f2f0 <__assert_fail@plt+0x4cc04>
   5f280:	ldr	r0, [fp, #-8]
   5f284:	bl	5eda8 <__assert_fail@plt+0x4c6bc>
   5f288:	str	r0, [fp, #-12]
   5f28c:	ldr	r3, [fp, #-12]
   5f290:	cmp	r3, #0
   5f294:	bne	5f2a0 <__assert_fail@plt+0x4cbb4>
   5f298:	ldr	r3, [fp, #-12]
   5f29c:	b	5f2f0 <__assert_fail@plt+0x4cc04>
   5f2a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5f2a4:	bl	5f17c <__assert_fail@plt+0x4ca90>
   5f2a8:	mov	r3, r0
   5f2ac:	eor	r3, r3, #1
   5f2b0:	uxtb	r3, r3
   5f2b4:	cmp	r3, #0
   5f2b8:	beq	5f2ec <__assert_fail@plt+0x4cc00>
   5f2bc:	bl	12404 <__errno_location@plt>
   5f2c0:	mov	r3, r0
   5f2c4:	ldr	r3, [r3]
   5f2c8:	str	r3, [fp, #-16]
   5f2cc:	ldr	r0, [fp, #-12]
   5f2d0:	bl	5f088 <__assert_fail@plt+0x4c99c>
   5f2d4:	bl	12404 <__errno_location@plt>
   5f2d8:	mov	r2, r0
   5f2dc:	ldr	r3, [fp, #-16]
   5f2e0:	str	r3, [r2]
   5f2e4:	mov	r3, #0
   5f2e8:	b	5f2f0 <__assert_fail@plt+0x4cc04>
   5f2ec:	ldr	r3, [fp, #-12]
   5f2f0:	mov	r0, r3
   5f2f4:	sub	sp, fp, #4
   5f2f8:	ldr	fp, [sp]
   5f2fc:	add	sp, sp, #4
   5f300:	pop	{pc}		; (ldr pc, [sp], #4)
   5f304:	str	fp, [sp, #-8]!
   5f308:	str	lr, [sp, #4]
   5f30c:	add	fp, sp, #4
   5f310:	sub	sp, sp, #16
   5f314:	str	r0, [fp, #-16]
   5f318:	mov	r2, #1
   5f31c:	ldr	r3, [fp, #-16]
   5f320:	cmp	r3, r2
   5f324:	bne	5f330 <__assert_fail@plt+0x4cc44>
   5f328:	mov	r3, #1
   5f32c:	b	5f390 <__assert_fail@plt+0x4cca4>
   5f330:	bl	12404 <__errno_location@plt>
   5f334:	mov	r3, r0
   5f338:	ldr	r3, [r3]
   5f33c:	str	r3, [fp, #-8]
   5f340:	ldr	r0, [fp, #-16]
   5f344:	bl	5f17c <__assert_fail@plt+0x4ca90>
   5f348:	mov	r3, r0
   5f34c:	strb	r3, [fp, #-9]
   5f350:	ldrb	r3, [fp, #-9]
   5f354:	eor	r3, r3, #1
   5f358:	uxtb	r3, r3
   5f35c:	cmp	r3, #0
   5f360:	beq	5f374 <__assert_fail@plt+0x4cc88>
   5f364:	bl	12404 <__errno_location@plt>
   5f368:	mov	r3, r0
   5f36c:	ldr	r3, [r3]
   5f370:	str	r3, [fp, #-8]
   5f374:	ldr	r0, [fp, #-16]
   5f378:	bl	5f088 <__assert_fail@plt+0x4c99c>
   5f37c:	bl	12404 <__errno_location@plt>
   5f380:	mov	r2, r0
   5f384:	ldr	r3, [fp, #-8]
   5f388:	str	r3, [r2]
   5f38c:	ldrb	r3, [fp, #-9]
   5f390:	mov	r0, r3
   5f394:	sub	sp, fp, #4
   5f398:	ldr	fp, [sp]
   5f39c:	add	sp, sp, #4
   5f3a0:	pop	{pc}		; (ldr pc, [sp], #4)
   5f3a4:	str	fp, [sp, #-8]!
   5f3a8:	str	lr, [sp, #4]
   5f3ac:	add	fp, sp, #4
   5f3b0:	sub	sp, sp, #24
   5f3b4:	str	r0, [fp, #-16]
   5f3b8:	str	r1, [fp, #-20]	; 0xffffffec
   5f3bc:	str	r2, [fp, #-24]	; 0xffffffe8
   5f3c0:	ldr	r3, [fp, #-16]
   5f3c4:	cmp	r3, #0
   5f3c8:	bne	5f3e0 <__assert_fail@plt+0x4ccf4>
   5f3cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5f3d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f3d4:	bl	11fcc <gmtime_r@plt>
   5f3d8:	mov	r3, r0
   5f3dc:	b	5f470 <__assert_fail@plt+0x4cd84>
   5f3e0:	ldr	r0, [fp, #-16]
   5f3e4:	bl	5f1e8 <__assert_fail@plt+0x4cafc>
   5f3e8:	str	r0, [fp, #-8]
   5f3ec:	ldr	r3, [fp, #-8]
   5f3f0:	cmp	r3, #0
   5f3f4:	beq	5f46c <__assert_fail@plt+0x4cd80>
   5f3f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5f3fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f400:	bl	121b8 <localtime_r@plt>
   5f404:	mov	r3, r0
   5f408:	cmp	r3, #0
   5f40c:	beq	5f430 <__assert_fail@plt+0x4cd44>
   5f410:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5f414:	ldr	r0, [fp, #-16]
   5f418:	bl	5ee98 <__assert_fail@plt+0x4c7ac>
   5f41c:	mov	r3, r0
   5f420:	cmp	r3, #0
   5f424:	beq	5f430 <__assert_fail@plt+0x4cd44>
   5f428:	mov	r3, #1
   5f42c:	b	5f434 <__assert_fail@plt+0x4cd48>
   5f430:	mov	r3, #0
   5f434:	strb	r3, [fp, #-9]
   5f438:	ldrb	r3, [fp, #-9]
   5f43c:	and	r3, r3, #1
   5f440:	strb	r3, [fp, #-9]
   5f444:	ldr	r0, [fp, #-8]
   5f448:	bl	5f304 <__assert_fail@plt+0x4cc18>
   5f44c:	mov	r3, r0
   5f450:	cmp	r3, #0
   5f454:	beq	5f46c <__assert_fail@plt+0x4cd80>
   5f458:	ldrb	r3, [fp, #-9]
   5f45c:	cmp	r3, #0
   5f460:	beq	5f46c <__assert_fail@plt+0x4cd80>
   5f464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5f468:	b	5f470 <__assert_fail@plt+0x4cd84>
   5f46c:	mov	r3, #0
   5f470:	mov	r0, r3
   5f474:	sub	sp, fp, #4
   5f478:	ldr	fp, [sp]
   5f47c:	add	sp, sp, #4
   5f480:	pop	{pc}		; (ldr pc, [sp], #4)
   5f484:	str	fp, [sp, #-8]!
   5f488:	str	lr, [sp, #4]
   5f48c:	add	fp, sp, #4
   5f490:	sub	sp, sp, #64	; 0x40
   5f494:	str	r0, [fp, #-64]	; 0xffffffc0
   5f498:	str	r1, [fp, #-68]	; 0xffffffbc
   5f49c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5f4a0:	cmp	r3, #0
   5f4a4:	bne	5f4b8 <__assert_fail@plt+0x4cdcc>
   5f4a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   5f4ac:	bl	125b4 <timegm@plt>
   5f4b0:	mov	r3, r0
   5f4b4:	b	5f5f8 <__assert_fail@plt+0x4cf0c>
   5f4b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5f4bc:	bl	5f1e8 <__assert_fail@plt+0x4cafc>
   5f4c0:	str	r0, [fp, #-8]
   5f4c4:	ldr	r3, [fp, #-8]
   5f4c8:	cmp	r3, #0
   5f4cc:	beq	5f5f4 <__assert_fail@plt+0x4cf08>
   5f4d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f4d4:	ldr	r3, [r3]
   5f4d8:	str	r3, [fp, #-60]	; 0xffffffc4
   5f4dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f4e0:	ldr	r3, [r3, #4]
   5f4e4:	str	r3, [fp, #-56]	; 0xffffffc8
   5f4e8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f4ec:	ldr	r3, [r3, #8]
   5f4f0:	str	r3, [fp, #-52]	; 0xffffffcc
   5f4f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f4f8:	ldr	r3, [r3, #12]
   5f4fc:	str	r3, [fp, #-48]	; 0xffffffd0
   5f500:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f504:	ldr	r3, [r3, #16]
   5f508:	str	r3, [fp, #-44]	; 0xffffffd4
   5f50c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f510:	ldr	r3, [r3, #20]
   5f514:	str	r3, [fp, #-40]	; 0xffffffd8
   5f518:	mvn	r3, #0
   5f51c:	str	r3, [fp, #-32]	; 0xffffffe0
   5f520:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f524:	ldr	r3, [r3, #32]
   5f528:	str	r3, [fp, #-28]	; 0xffffffe4
   5f52c:	sub	r3, fp, #60	; 0x3c
   5f530:	mov	r0, r3
   5f534:	bl	12050 <mktime@plt>
   5f538:	str	r0, [fp, #-12]
   5f53c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f540:	mvn	r3, r3
   5f544:	lsr	r3, r3, #31
   5f548:	strb	r3, [fp, #-13]
   5f54c:	ldrb	r3, [fp, #-13]
   5f550:	cmp	r3, #0
   5f554:	beq	5f57c <__assert_fail@plt+0x4ce90>
   5f558:	sub	r3, fp, #60	; 0x3c
   5f55c:	mov	r1, r3
   5f560:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5f564:	bl	5ee98 <__assert_fail@plt+0x4c7ac>
   5f568:	mov	r3, r0
   5f56c:	cmp	r3, #0
   5f570:	beq	5f57c <__assert_fail@plt+0x4ce90>
   5f574:	mov	r3, #1
   5f578:	b	5f580 <__assert_fail@plt+0x4ce94>
   5f57c:	mov	r3, #0
   5f580:	strb	r3, [fp, #-13]
   5f584:	ldrb	r3, [fp, #-13]
   5f588:	and	r3, r3, #1
   5f58c:	strb	r3, [fp, #-13]
   5f590:	ldr	r0, [fp, #-8]
   5f594:	bl	5f304 <__assert_fail@plt+0x4cc18>
   5f598:	mov	r3, r0
   5f59c:	cmp	r3, #0
   5f5a0:	beq	5f5f4 <__assert_fail@plt+0x4cf08>
   5f5a4:	ldrb	r3, [fp, #-13]
   5f5a8:	cmp	r3, #0
   5f5ac:	beq	5f5f4 <__assert_fail@plt+0x4cf08>
   5f5b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   5f5b4:	mov	r2, r3
   5f5b8:	sub	r3, fp, #60	; 0x3c
   5f5bc:	ldrd	r0, [r3]
   5f5c0:	strd	r0, [r2]
   5f5c4:	ldrd	r0, [r3, #8]
   5f5c8:	strd	r0, [r2, #8]
   5f5cc:	ldrd	r0, [r3, #16]
   5f5d0:	strd	r0, [r2, #16]
   5f5d4:	ldrd	r0, [r3, #24]
   5f5d8:	strd	r0, [r2, #24]
   5f5dc:	ldrd	r0, [r3, #32]
   5f5e0:	strd	r0, [r2, #32]
   5f5e4:	ldr	r3, [r3, #40]	; 0x28
   5f5e8:	str	r3, [r2, #40]	; 0x28
   5f5ec:	ldr	r3, [fp, #-12]
   5f5f0:	b	5f5f8 <__assert_fail@plt+0x4cf0c>
   5f5f4:	mvn	r3, #0
   5f5f8:	mov	r0, r3
   5f5fc:	sub	sp, fp, #4
   5f600:	ldr	fp, [sp]
   5f604:	add	sp, sp, #4
   5f608:	pop	{pc}		; (ldr pc, [sp], #4)
   5f60c:	str	fp, [sp, #-8]!
   5f610:	str	lr, [sp, #4]
   5f614:	add	fp, sp, #4
   5f618:	movw	r3, #50892	; 0xc6cc
   5f61c:	movt	r3, #7
   5f620:	ldr	r3, [r3]
   5f624:	mov	r0, r3
   5f628:	bl	12380 <exit@plt>
   5f62c:	str	fp, [sp, #-8]!
   5f630:	str	lr, [sp, #4]
   5f634:	add	fp, sp, #4
   5f638:	sub	sp, sp, #32
   5f63c:	str	r0, [fp, #-24]	; 0xffffffe8
   5f640:	str	r1, [fp, #-28]	; 0xffffffe4
   5f644:	str	r2, [fp, #-32]	; 0xffffffe0
   5f648:	str	r3, [fp, #-36]	; 0xffffffdc
   5f64c:	mvn	r3, #0
   5f650:	str	r3, [fp, #-12]
   5f654:	mov	r3, #0
   5f658:	strb	r3, [fp, #-13]
   5f65c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5f660:	bl	123bc <strlen@plt>
   5f664:	str	r0, [fp, #-20]	; 0xffffffec
   5f668:	mov	r3, #0
   5f66c:	str	r3, [fp, #-8]
   5f670:	b	5f750 <__assert_fail@plt+0x4d064>
   5f674:	ldr	r3, [fp, #-8]
   5f678:	lsl	r3, r3, #2
   5f67c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5f680:	add	r3, r2, r3
   5f684:	ldr	r3, [r3]
   5f688:	ldr	r2, [fp, #-20]	; 0xffffffec
   5f68c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5f690:	mov	r0, r3
   5f694:	bl	1268c <strncmp@plt>
   5f698:	mov	r3, r0
   5f69c:	cmp	r3, #0
   5f6a0:	bne	5f744 <__assert_fail@plt+0x4d058>
   5f6a4:	ldr	r3, [fp, #-8]
   5f6a8:	lsl	r3, r3, #2
   5f6ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5f6b0:	add	r3, r2, r3
   5f6b4:	ldr	r3, [r3]
   5f6b8:	mov	r0, r3
   5f6bc:	bl	123bc <strlen@plt>
   5f6c0:	mov	r2, r0
   5f6c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   5f6c8:	cmp	r3, r2
   5f6cc:	bne	5f6d8 <__assert_fail@plt+0x4cfec>
   5f6d0:	ldr	r3, [fp, #-8]
   5f6d4:	b	5f784 <__assert_fail@plt+0x4d098>
   5f6d8:	ldr	r3, [fp, #-12]
   5f6dc:	cmn	r3, #1
   5f6e0:	bne	5f6f0 <__assert_fail@plt+0x4d004>
   5f6e4:	ldr	r3, [fp, #-8]
   5f6e8:	str	r3, [fp, #-12]
   5f6ec:	b	5f744 <__assert_fail@plt+0x4d058>
   5f6f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f6f4:	cmp	r3, #0
   5f6f8:	beq	5f73c <__assert_fail@plt+0x4d050>
   5f6fc:	ldr	r3, [fp, #-12]
   5f700:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5f704:	mul	r3, r2, r3
   5f708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5f70c:	add	r0, r2, r3
   5f710:	ldr	r3, [fp, #-36]	; 0xffffffdc
   5f714:	ldr	r2, [fp, #-8]
   5f718:	mul	r3, r2, r3
   5f71c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5f720:	add	r3, r2, r3
   5f724:	ldr	r2, [fp, #-36]	; 0xffffffdc
   5f728:	mov	r1, r3
   5f72c:	bl	12158 <memcmp@plt>
   5f730:	mov	r3, r0
   5f734:	cmp	r3, #0
   5f738:	beq	5f744 <__assert_fail@plt+0x4d058>
   5f73c:	mov	r3, #1
   5f740:	strb	r3, [fp, #-13]
   5f744:	ldr	r3, [fp, #-8]
   5f748:	add	r3, r3, #1
   5f74c:	str	r3, [fp, #-8]
   5f750:	ldr	r3, [fp, #-8]
   5f754:	lsl	r3, r3, #2
   5f758:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5f75c:	add	r3, r2, r3
   5f760:	ldr	r3, [r3]
   5f764:	cmp	r3, #0
   5f768:	bne	5f674 <__assert_fail@plt+0x4cf88>
   5f76c:	ldrb	r3, [fp, #-13]
   5f770:	cmp	r3, #0
   5f774:	beq	5f780 <__assert_fail@plt+0x4d094>
   5f778:	mvn	r3, #1
   5f77c:	b	5f784 <__assert_fail@plt+0x4d098>
   5f780:	ldr	r3, [fp, #-12]
   5f784:	mov	r0, r3
   5f788:	sub	sp, fp, #4
   5f78c:	ldr	fp, [sp]
   5f790:	add	sp, sp, #4
   5f794:	pop	{pc}		; (ldr pc, [sp], #4)
   5f798:	str	r4, [sp, #-12]!
   5f79c:	str	fp, [sp, #4]
   5f7a0:	str	lr, [sp, #8]
   5f7a4:	add	fp, sp, #8
   5f7a8:	sub	sp, sp, #36	; 0x24
   5f7ac:	str	r0, [fp, #-24]	; 0xffffffe8
   5f7b0:	str	r1, [fp, #-28]	; 0xffffffe4
   5f7b4:	str	r2, [fp, #-32]	; 0xffffffe0
   5f7b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f7bc:	cmn	r3, #1
   5f7c0:	bne	5f7d8 <__assert_fail@plt+0x4d0ec>
   5f7c4:	movw	r0, #47984	; 0xbb70
   5f7c8:	movt	r0, #6
   5f7cc:	bl	12398 <gettext@plt>
   5f7d0:	mov	r3, r0
   5f7d4:	b	5f7e8 <__assert_fail@plt+0x4d0fc>
   5f7d8:	movw	r0, #48012	; 0xbb8c
   5f7dc:	movt	r0, #6
   5f7e0:	bl	12398 <gettext@plt>
   5f7e4:	mov	r3, r0
   5f7e8:	str	r3, [fp, #-16]
   5f7ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5f7f0:	mov	r1, #8
   5f7f4:	mov	r0, #0
   5f7f8:	bl	3bc98 <__assert_fail@plt+0x295ac>
   5f7fc:	mov	r4, r0
   5f800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5f804:	mov	r0, #1
   5f808:	bl	3c1ec <__assert_fail@plt+0x29b00>
   5f80c:	mov	r3, r0
   5f810:	str	r3, [sp]
   5f814:	mov	r3, r4
   5f818:	ldr	r2, [fp, #-16]
   5f81c:	mov	r1, #0
   5f820:	mov	r0, #0
   5f824:	bl	122b4 <error@plt>
   5f828:	nop	{0}
   5f82c:	sub	sp, fp, #8
   5f830:	ldr	r4, [sp]
   5f834:	ldr	fp, [sp, #4]
   5f838:	add	sp, sp, #8
   5f83c:	pop	{pc}		; (ldr pc, [sp], #4)
   5f840:	str	r4, [sp, #-12]!
   5f844:	str	fp, [sp, #4]
   5f848:	str	lr, [sp, #8]
   5f84c:	add	fp, sp, #8
   5f850:	sub	sp, sp, #28
   5f854:	str	r0, [fp, #-24]	; 0xffffffe8
   5f858:	str	r1, [fp, #-28]	; 0xffffffe4
   5f85c:	str	r2, [fp, #-32]	; 0xffffffe0
   5f860:	mov	r3, #0
   5f864:	str	r3, [fp, #-20]	; 0xffffffec
   5f868:	movw	r0, #48044	; 0xbbac
   5f86c:	movt	r0, #6
   5f870:	bl	12398 <gettext@plt>
   5f874:	mov	r2, r0
   5f878:	movw	r3, #50984	; 0xc728
   5f87c:	movt	r3, #7
   5f880:	ldr	r3, [r3]
   5f884:	mov	r1, r3
   5f888:	mov	r0, r2
   5f88c:	bl	12680 <fputs@plt>
   5f890:	mov	r3, #0
   5f894:	str	r3, [fp, #-16]
   5f898:	b	5f980 <__assert_fail@plt+0x4d294>
   5f89c:	ldr	r3, [fp, #-16]
   5f8a0:	cmp	r3, #0
   5f8a4:	beq	5f8d8 <__assert_fail@plt+0x4d1ec>
   5f8a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f8ac:	ldr	r2, [fp, #-16]
   5f8b0:	mul	r3, r2, r3
   5f8b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5f8b8:	add	r3, r2, r3
   5f8bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   5f8c0:	mov	r1, r3
   5f8c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f8c8:	bl	12158 <memcmp@plt>
   5f8cc:	mov	r3, r0
   5f8d0:	cmp	r3, #0
   5f8d4:	beq	5f934 <__assert_fail@plt+0x4d248>
   5f8d8:	movw	r3, #50984	; 0xc728
   5f8dc:	movt	r3, #7
   5f8e0:	ldr	r4, [r3]
   5f8e4:	ldr	r3, [fp, #-16]
   5f8e8:	lsl	r3, r3, #2
   5f8ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5f8f0:	add	r3, r2, r3
   5f8f4:	ldr	r3, [r3]
   5f8f8:	mov	r0, r3
   5f8fc:	bl	3c22c <__assert_fail@plt+0x29b40>
   5f900:	mov	r3, r0
   5f904:	mov	r2, r3
   5f908:	movw	r1, #48068	; 0xbbc4
   5f90c:	movt	r1, #6
   5f910:	mov	r0, r4
   5f914:	bl	123f8 <fprintf@plt>
   5f918:	ldr	r3, [fp, #-32]	; 0xffffffe0
   5f91c:	ldr	r2, [fp, #-16]
   5f920:	mul	r3, r2, r3
   5f924:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5f928:	add	r3, r2, r3
   5f92c:	str	r3, [fp, #-20]	; 0xffffffec
   5f930:	b	5f974 <__assert_fail@plt+0x4d288>
   5f934:	movw	r3, #50984	; 0xc728
   5f938:	movt	r3, #7
   5f93c:	ldr	r4, [r3]
   5f940:	ldr	r3, [fp, #-16]
   5f944:	lsl	r3, r3, #2
   5f948:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5f94c:	add	r3, r2, r3
   5f950:	ldr	r3, [r3]
   5f954:	mov	r0, r3
   5f958:	bl	3c22c <__assert_fail@plt+0x29b40>
   5f95c:	mov	r3, r0
   5f960:	mov	r2, r3
   5f964:	movw	r1, #48076	; 0xbbcc
   5f968:	movt	r1, #6
   5f96c:	mov	r0, r4
   5f970:	bl	123f8 <fprintf@plt>
   5f974:	ldr	r3, [fp, #-16]
   5f978:	add	r3, r3, #1
   5f97c:	str	r3, [fp, #-16]
   5f980:	ldr	r3, [fp, #-16]
   5f984:	lsl	r3, r3, #2
   5f988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5f98c:	add	r3, r2, r3
   5f990:	ldr	r3, [r3]
   5f994:	cmp	r3, #0
   5f998:	bne	5f89c <__assert_fail@plt+0x4d1b0>
   5f99c:	movw	r3, #50984	; 0xc728
   5f9a0:	movt	r3, #7
   5f9a4:	ldr	r3, [r3]
   5f9a8:	mov	r1, r3
   5f9ac:	mov	r0, #10
   5f9b0:	bl	125c0 <putc@plt>
   5f9b4:	nop	{0}
   5f9b8:	sub	sp, fp, #8
   5f9bc:	ldr	r4, [sp]
   5f9c0:	ldr	fp, [sp, #4]
   5f9c4:	add	sp, sp, #8
   5f9c8:	pop	{pc}		; (ldr pc, [sp], #4)
   5f9cc:	str	fp, [sp, #-8]!
   5f9d0:	str	lr, [sp, #4]
   5f9d4:	add	fp, sp, #4
   5f9d8:	sub	sp, sp, #24
   5f9dc:	str	r0, [fp, #-16]
   5f9e0:	str	r1, [fp, #-20]	; 0xffffffec
   5f9e4:	str	r2, [fp, #-24]	; 0xffffffe8
   5f9e8:	str	r3, [fp, #-28]	; 0xffffffe4
   5f9ec:	ldr	r3, [fp, #4]
   5f9f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5f9f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   5f9f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   5f9fc:	bl	5f62c <__assert_fail@plt+0x4cf40>
   5fa00:	str	r0, [fp, #-8]
   5fa04:	ldr	r3, [fp, #-8]
   5fa08:	cmp	r3, #0
   5fa0c:	blt	5fa18 <__assert_fail@plt+0x4d32c>
   5fa10:	ldr	r3, [fp, #-8]
   5fa14:	b	5fa44 <__assert_fail@plt+0x4d358>
   5fa18:	ldr	r2, [fp, #-8]
   5fa1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   5fa20:	ldr	r0, [fp, #-16]
   5fa24:	bl	5f798 <__assert_fail@plt+0x4d0ac>
   5fa28:	ldr	r2, [fp, #4]
   5fa2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   5fa30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   5fa34:	bl	5f840 <__assert_fail@plt+0x4d154>
   5fa38:	ldr	r3, [fp, #8]
   5fa3c:	blx	r3
   5fa40:	mvn	r3, #0
   5fa44:	mov	r0, r3
   5fa48:	sub	sp, fp, #4
   5fa4c:	ldr	fp, [sp]
   5fa50:	add	sp, sp, #4
   5fa54:	pop	{pc}		; (ldr pc, [sp], #4)
   5fa58:	str	fp, [sp, #-8]!
   5fa5c:	str	lr, [sp, #4]
   5fa60:	add	fp, sp, #4
   5fa64:	sub	sp, sp, #24
   5fa68:	str	r0, [fp, #-16]
   5fa6c:	str	r1, [fp, #-20]	; 0xffffffec
   5fa70:	str	r2, [fp, #-24]	; 0xffffffe8
   5fa74:	str	r3, [fp, #-28]	; 0xffffffe4
   5fa78:	mov	r3, #0
   5fa7c:	str	r3, [fp, #-8]
   5fa80:	b	5fad8 <__assert_fail@plt+0x4d3ec>
   5fa84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   5fa88:	ldr	r2, [fp, #-8]
   5fa8c:	mul	r3, r2, r3
   5fa90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   5fa94:	add	r3, r2, r3
   5fa98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   5fa9c:	mov	r1, r3
   5faa0:	ldr	r0, [fp, #-16]
   5faa4:	bl	12158 <memcmp@plt>
   5faa8:	mov	r3, r0
   5faac:	cmp	r3, #0
   5fab0:	bne	5facc <__assert_fail@plt+0x4d3e0>
   5fab4:	ldr	r3, [fp, #-8]
   5fab8:	lsl	r3, r3, #2
   5fabc:	ldr	r2, [fp, #-20]	; 0xffffffec
   5fac0:	add	r3, r2, r3
   5fac4:	ldr	r3, [r3]
   5fac8:	b	5faf8 <__assert_fail@plt+0x4d40c>
   5facc:	ldr	r3, [fp, #-8]
   5fad0:	add	r3, r3, #1
   5fad4:	str	r3, [fp, #-8]
   5fad8:	ldr	r3, [fp, #-8]
   5fadc:	lsl	r3, r3, #2
   5fae0:	ldr	r2, [fp, #-20]	; 0xffffffec
   5fae4:	add	r3, r2, r3
   5fae8:	ldr	r3, [r3]
   5faec:	cmp	r3, #0
   5faf0:	bne	5fa84 <__assert_fail@plt+0x4d398>
   5faf4:	mov	r3, #0
   5faf8:	mov	r0, r3
   5fafc:	sub	sp, fp, #4
   5fb00:	ldr	fp, [sp]
   5fb04:	add	sp, sp, #4
   5fb08:	pop	{pc}		; (ldr pc, [sp], #4)
   5fb0c:	str	fp, [sp, #-8]!
   5fb10:	str	lr, [sp, #4]
   5fb14:	add	fp, sp, #4
   5fb18:	sub	sp, sp, #64	; 0x40
   5fb1c:	str	r0, [fp, #-56]	; 0xffffffc8
   5fb20:	str	r1, [fp, #-60]	; 0xffffffc4
   5fb24:	str	r2, [fp, #-64]	; 0xffffffc0
   5fb28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5fb2c:	str	r3, [fp, #-8]
   5fb30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   5fb34:	ldrb	r3, [r3]
   5fb38:	cmp	r3, #0
   5fb3c:	bne	5fb54 <__assert_fail@plt+0x4d468>
   5fb40:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5fb44:	mov	r2, #0
   5fb48:	strb	r2, [r3]
   5fb4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   5fb50:	b	5fc88 <__assert_fail@plt+0x4d59c>
   5fb54:	movw	r3, #53276	; 0xd01c
   5fb58:	movt	r3, #7
   5fb5c:	ldr	r3, [r3]
   5fb60:	cmp	r3, #0
   5fb64:	bne	5fbf4 <__assert_fail@plt+0x4d508>
   5fb68:	mov	r1, #18688	; 0x4900
   5fb6c:	movt	r1, #8
   5fb70:	movw	r0, #48084	; 0xbbd4
   5fb74:	movt	r0, #6
   5fb78:	bl	122e4 <open64@plt>
   5fb7c:	str	r0, [fp, #-12]
   5fb80:	ldr	r3, [fp, #-12]
   5fb84:	cmp	r3, #0
   5fb88:	bge	5fba0 <__assert_fail@plt+0x4d4b4>
   5fb8c:	movw	r3, #53276	; 0xd01c
   5fb90:	movt	r3, #7
   5fb94:	mvn	r2, #0
   5fb98:	str	r2, [r3]
   5fb9c:	b	5fbf4 <__assert_fail@plt+0x4d508>
   5fba0:	sub	r3, fp, #52	; 0x34
   5fba4:	ldr	r2, [fp, #-12]
   5fba8:	movw	r1, #48100	; 0xbbe4
   5fbac:	movt	r1, #6
   5fbb0:	mov	r0, r3
   5fbb4:	bl	12590 <sprintf@plt>
   5fbb8:	sub	r3, fp, #52	; 0x34
   5fbbc:	mov	r1, #0
   5fbc0:	mov	r0, r3
   5fbc4:	bl	124c4 <access@plt>
   5fbc8:	mov	r3, r0
   5fbcc:	cmp	r3, #0
   5fbd0:	beq	5fbdc <__assert_fail@plt+0x4d4f0>
   5fbd4:	mvn	r2, #0
   5fbd8:	b	5fbe0 <__assert_fail@plt+0x4d4f4>
   5fbdc:	mov	r2, #1
   5fbe0:	movw	r3, #53276	; 0xd01c
   5fbe4:	movt	r3, #7
   5fbe8:	str	r2, [r3]
   5fbec:	ldr	r0, [fp, #-12]
   5fbf0:	bl	126a4 <close@plt>
   5fbf4:	movw	r3, #53276	; 0xd01c
   5fbf8:	movt	r3, #7
   5fbfc:	ldr	r3, [r3]
   5fc00:	cmp	r3, #0
   5fc04:	bge	5fc10 <__assert_fail@plt+0x4d524>
   5fc08:	mov	r3, #0
   5fc0c:	b	5fc88 <__assert_fail@plt+0x4d59c>
   5fc10:	ldr	r0, [fp, #-64]	; 0xffffffc0
   5fc14:	bl	123bc <strlen@plt>
   5fc18:	mov	r3, r0
   5fc1c:	add	r3, r3, #27
   5fc20:	str	r3, [fp, #-16]
   5fc24:	ldr	r3, [fp, #-16]
   5fc28:	cmp	r3, #4032	; 0xfc0
   5fc2c:	bls	5fc54 <__assert_fail@plt+0x4d568>
   5fc30:	ldr	r0, [fp, #-16]
   5fc34:	bl	43510 <__assert_fail@plt+0x30e24>
   5fc38:	mov	r3, r0
   5fc3c:	str	r3, [fp, #-8]
   5fc40:	ldr	r3, [fp, #-8]
   5fc44:	cmp	r3, #0
   5fc48:	bne	5fc54 <__assert_fail@plt+0x4d568>
   5fc4c:	mov	r3, #0
   5fc50:	b	5fc88 <__assert_fail@plt+0x4d59c>
   5fc54:	ldr	r2, [fp, #-60]	; 0xffffffc4
   5fc58:	movw	r1, #48124	; 0xbbfc
   5fc5c:	movt	r1, #6
   5fc60:	ldr	r0, [fp, #-8]
   5fc64:	bl	12590 <sprintf@plt>
   5fc68:	str	r0, [fp, #-20]	; 0xffffffec
   5fc6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   5fc70:	ldr	r2, [fp, #-8]
   5fc74:	add	r3, r2, r3
   5fc78:	ldr	r1, [fp, #-64]	; 0xffffffc0
   5fc7c:	mov	r0, r3
   5fc80:	bl	1226c <strcpy@plt>
   5fc84:	ldr	r3, [fp, #-8]
   5fc88:	mov	r0, r3
   5fc8c:	sub	sp, fp, #4
   5fc90:	ldr	fp, [sp]
   5fc94:	add	sp, sp, #4
   5fc98:	pop	{pc}		; (ldr pc, [sp], #4)
   5fc9c:	push	{fp}		; (str fp, [sp, #-4]!)
   5fca0:	add	fp, sp, #0
   5fca4:	sub	sp, sp, #28
   5fca8:	str	r0, [fp, #-24]	; 0xffffffe8
   5fcac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   5fcb0:	str	r3, [fp, #-8]
   5fcb4:	mov	r3, #0
   5fcb8:	strb	r3, [fp, #-13]
   5fcbc:	b	5fccc <__assert_fail@plt+0x4d5e0>
   5fcc0:	ldr	r3, [fp, #-8]
   5fcc4:	add	r3, r3, #1
   5fcc8:	str	r3, [fp, #-8]
   5fccc:	ldr	r3, [fp, #-8]
   5fcd0:	ldrb	r3, [r3]
   5fcd4:	cmp	r3, #47	; 0x2f
   5fcd8:	beq	5fcc0 <__assert_fail@plt+0x4d5d4>
   5fcdc:	ldr	r3, [fp, #-8]
   5fce0:	str	r3, [fp, #-12]
   5fce4:	b	5fd2c <__assert_fail@plt+0x4d640>
   5fce8:	ldr	r3, [fp, #-12]
   5fcec:	ldrb	r3, [r3]
   5fcf0:	cmp	r3, #47	; 0x2f
   5fcf4:	bne	5fd04 <__assert_fail@plt+0x4d618>
   5fcf8:	mov	r3, #1
   5fcfc:	strb	r3, [fp, #-13]
   5fd00:	b	5fd20 <__assert_fail@plt+0x4d634>
   5fd04:	ldrb	r3, [fp, #-13]
   5fd08:	cmp	r3, #0
   5fd0c:	beq	5fd20 <__assert_fail@plt+0x4d634>
   5fd10:	ldr	r3, [fp, #-12]
   5fd14:	str	r3, [fp, #-8]
   5fd18:	mov	r3, #0
   5fd1c:	strb	r3, [fp, #-13]
   5fd20:	ldr	r3, [fp, #-12]
   5fd24:	add	r3, r3, #1
   5fd28:	str	r3, [fp, #-12]
   5fd2c:	ldr	r3, [fp, #-12]
   5fd30:	ldrb	r3, [r3]
   5fd34:	cmp	r3, #0
   5fd38:	bne	5fce8 <__assert_fail@plt+0x4d5fc>
   5fd3c:	ldr	r3, [fp, #-8]
   5fd40:	mov	r0, r3
   5fd44:	add	sp, fp, #0
   5fd48:	pop	{fp}		; (ldr fp, [sp], #4)
   5fd4c:	bx	lr
   5fd50:	str	fp, [sp, #-8]!
   5fd54:	str	lr, [sp, #4]
   5fd58:	add	fp, sp, #4
   5fd5c:	sub	sp, sp, #16
   5fd60:	str	r0, [fp, #-16]
   5fd64:	mov	r3, #0
   5fd68:	str	r3, [fp, #-12]
   5fd6c:	ldr	r0, [fp, #-16]
   5fd70:	bl	123bc <strlen@plt>
   5fd74:	str	r0, [fp, #-8]
   5fd78:	b	5fd88 <__assert_fail@plt+0x4d69c>
   5fd7c:	ldr	r3, [fp, #-8]
   5fd80:	sub	r3, r3, #1
   5fd84:	str	r3, [fp, #-8]
   5fd88:	ldr	r3, [fp, #-8]
   5fd8c:	cmp	r3, #1
   5fd90:	bls	5fdb0 <__assert_fail@plt+0x4d6c4>
   5fd94:	ldr	r3, [fp, #-8]
   5fd98:	sub	r3, r3, #1
   5fd9c:	ldr	r2, [fp, #-16]
   5fda0:	add	r3, r2, r3
   5fda4:	ldrb	r3, [r3]
   5fda8:	cmp	r3, #47	; 0x2f
   5fdac:	beq	5fd7c <__assert_fail@plt+0x4d690>
   5fdb0:	ldr	r3, [fp, #-8]
   5fdb4:	mov	r0, r3
   5fdb8:	sub	sp, fp, #4
   5fdbc:	ldr	fp, [sp]
   5fdc0:	add	sp, sp, #4
   5fdc4:	pop	{pc}		; (ldr pc, [sp], #4)
   5fdc8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   5fdcc:	strd	r6, [sp, #8]
   5fdd0:	strd	r8, [sp, #16]
   5fdd4:	str	fp, [sp, #24]
   5fdd8:	add	fp, sp, #24
   5fddc:	sub	sp, sp, #20
   5fde0:	strd	r0, [fp, #-36]	; 0xffffffdc
   5fde4:	str	r2, [fp, #-40]	; 0xffffffd8
   5fde8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   5fdec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5fdf0:	sub	ip, r1, #32
   5fdf4:	rsb	r0, r1, #32
   5fdf8:	lsl	r7, r3, r1
   5fdfc:	orr	r7, r7, r2, lsl ip
   5fe00:	orr	r7, r7, r2, lsr r0
   5fe04:	lsl	r6, r2, r1
   5fe08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5fe0c:	rsb	r1, r1, #0
   5fe10:	and	r1, r1, #63	; 0x3f
   5fe14:	rsb	ip, r1, #32
   5fe18:	sub	r0, r1, #32
   5fe1c:	lsr	r4, r2, r1
   5fe20:	orr	r4, r4, r3, lsl ip
   5fe24:	orr	r4, r4, r3, lsr r0
   5fe28:	lsr	r5, r3, r1
   5fe2c:	orr	r8, r6, r4
   5fe30:	orr	r9, r7, r5
   5fe34:	mov	r4, r8
   5fe38:	mov	r5, r9
   5fe3c:	mov	r2, r4
   5fe40:	mov	r3, r5
   5fe44:	mov	r0, r2
   5fe48:	mov	r1, r3
   5fe4c:	sub	sp, fp, #24
   5fe50:	ldrd	r4, [sp]
   5fe54:	ldrd	r6, [sp, #8]
   5fe58:	ldrd	r8, [sp, #16]
   5fe5c:	ldr	fp, [sp, #24]
   5fe60:	add	sp, sp, #28
   5fe64:	bx	lr
   5fe68:	strd	r4, [sp, #-28]!	; 0xffffffe4
   5fe6c:	strd	r6, [sp, #8]
   5fe70:	strd	r8, [sp, #16]
   5fe74:	str	fp, [sp, #24]
   5fe78:	add	fp, sp, #24
   5fe7c:	sub	sp, sp, #20
   5fe80:	strd	r0, [fp, #-36]	; 0xffffffdc
   5fe84:	str	r2, [fp, #-40]	; 0xffffffd8
   5fe88:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   5fe8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5fe90:	rsb	ip, r1, #32
   5fe94:	sub	r0, r1, #32
   5fe98:	lsr	r6, r2, r1
   5fe9c:	orr	r6, r6, r3, lsl ip
   5fea0:	orr	r6, r6, r3, lsr r0
   5fea4:	lsr	r7, r3, r1
   5fea8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   5feac:	rsb	r1, r1, #0
   5feb0:	and	r1, r1, #63	; 0x3f
   5feb4:	sub	ip, r1, #32
   5feb8:	rsb	r0, r1, #32
   5febc:	lsl	r5, r3, r1
   5fec0:	orr	r5, r5, r2, lsl ip
   5fec4:	orr	r5, r5, r2, lsr r0
   5fec8:	lsl	r4, r2, r1
   5fecc:	orr	r8, r6, r4
   5fed0:	orr	r9, r7, r5
   5fed4:	mov	r4, r8
   5fed8:	mov	r5, r9
   5fedc:	mov	r2, r4
   5fee0:	mov	r3, r5
   5fee4:	mov	r0, r2
   5fee8:	mov	r1, r3
   5feec:	sub	sp, fp, #24
   5fef0:	ldrd	r4, [sp]
   5fef4:	ldrd	r6, [sp, #8]
   5fef8:	ldrd	r8, [sp, #16]
   5fefc:	ldr	fp, [sp, #24]
   5ff00:	add	sp, sp, #28
   5ff04:	bx	lr
   5ff08:	push	{fp}		; (str fp, [sp, #-4]!)
   5ff0c:	add	fp, sp, #0
   5ff10:	sub	sp, sp, #12
   5ff14:	str	r0, [fp, #-8]
   5ff18:	str	r1, [fp, #-12]
   5ff1c:	ldr	r2, [fp, #-8]
   5ff20:	ldr	r3, [fp, #-12]
   5ff24:	rsb	r3, r3, #32
   5ff28:	ror	r3, r2, r3
   5ff2c:	mov	r0, r3
   5ff30:	add	sp, fp, #0
   5ff34:	pop	{fp}		; (ldr fp, [sp], #4)
   5ff38:	bx	lr
   5ff3c:	push	{fp}		; (str fp, [sp, #-4]!)
   5ff40:	add	fp, sp, #0
   5ff44:	sub	sp, sp, #12
   5ff48:	str	r0, [fp, #-8]
   5ff4c:	str	r1, [fp, #-12]
   5ff50:	ldr	r2, [fp, #-8]
   5ff54:	ldr	r3, [fp, #-12]
   5ff58:	ror	r3, r2, r3
   5ff5c:	mov	r0, r3
   5ff60:	add	sp, fp, #0
   5ff64:	pop	{fp}		; (ldr fp, [sp], #4)
   5ff68:	bx	lr
   5ff6c:	push	{fp}		; (str fp, [sp, #-4]!)
   5ff70:	add	fp, sp, #0
   5ff74:	sub	sp, sp, #12
   5ff78:	str	r0, [fp, #-8]
   5ff7c:	str	r1, [fp, #-12]
   5ff80:	ldr	r2, [fp, #-8]
   5ff84:	ldr	r3, [fp, #-12]
   5ff88:	rsb	r3, r3, #32
   5ff8c:	ror	r3, r2, r3
   5ff90:	mov	r0, r3
   5ff94:	add	sp, fp, #0
   5ff98:	pop	{fp}		; (ldr fp, [sp], #4)
   5ff9c:	bx	lr
   5ffa0:	push	{fp}		; (str fp, [sp, #-4]!)
   5ffa4:	add	fp, sp, #0
   5ffa8:	sub	sp, sp, #12
   5ffac:	str	r0, [fp, #-8]
   5ffb0:	str	r1, [fp, #-12]
   5ffb4:	ldr	r2, [fp, #-8]
   5ffb8:	ldr	r3, [fp, #-12]
   5ffbc:	ror	r3, r2, r3
   5ffc0:	mov	r0, r3
   5ffc4:	add	sp, fp, #0
   5ffc8:	pop	{fp}		; (ldr fp, [sp], #4)
   5ffcc:	bx	lr
   5ffd0:	push	{fp}		; (str fp, [sp, #-4]!)
   5ffd4:	add	fp, sp, #0
   5ffd8:	sub	sp, sp, #12
   5ffdc:	mov	r3, r0
   5ffe0:	str	r1, [fp, #-12]
   5ffe4:	strh	r3, [fp, #-6]
   5ffe8:	ldrh	r2, [fp, #-6]
   5ffec:	ldr	r3, [fp, #-12]
   5fff0:	lsl	r3, r2, r3
   5fff4:	uxth	r2, r3
   5fff8:	ldrh	r1, [fp, #-6]
   5fffc:	ldr	r3, [fp, #-12]
   60000:	rsb	r3, r3, #16
   60004:	lsr	r3, r1, r3
   60008:	uxth	r3, r3
   6000c:	orr	r3, r2, r3
   60010:	uxth	r3, r3
   60014:	mov	r0, r3
   60018:	add	sp, fp, #0
   6001c:	pop	{fp}		; (ldr fp, [sp], #4)
   60020:	bx	lr
   60024:	push	{fp}		; (str fp, [sp, #-4]!)
   60028:	add	fp, sp, #0
   6002c:	sub	sp, sp, #12
   60030:	mov	r3, r0
   60034:	str	r1, [fp, #-12]
   60038:	strh	r3, [fp, #-6]
   6003c:	ldrh	r2, [fp, #-6]
   60040:	ldr	r3, [fp, #-12]
   60044:	lsr	r3, r2, r3
   60048:	uxth	r2, r3
   6004c:	ldrh	r1, [fp, #-6]
   60050:	ldr	r3, [fp, #-12]
   60054:	rsb	r3, r3, #16
   60058:	lsl	r3, r1, r3
   6005c:	uxth	r3, r3
   60060:	orr	r3, r2, r3
   60064:	uxth	r3, r3
   60068:	mov	r0, r3
   6006c:	add	sp, fp, #0
   60070:	pop	{fp}		; (ldr fp, [sp], #4)
   60074:	bx	lr
   60078:	push	{fp}		; (str fp, [sp, #-4]!)
   6007c:	add	fp, sp, #0
   60080:	sub	sp, sp, #12
   60084:	mov	r3, r0
   60088:	str	r1, [fp, #-12]
   6008c:	strb	r3, [fp, #-5]
   60090:	ldrb	r2, [fp, #-5]
   60094:	ldr	r3, [fp, #-12]
   60098:	lsl	r3, r2, r3
   6009c:	uxtb	r2, r3
   600a0:	ldrb	r1, [fp, #-5]
   600a4:	ldr	r3, [fp, #-12]
   600a8:	rsb	r3, r3, #8
   600ac:	lsr	r3, r1, r3
   600b0:	uxtb	r3, r3
   600b4:	orr	r3, r2, r3
   600b8:	uxtb	r3, r3
   600bc:	mov	r0, r3
   600c0:	add	sp, fp, #0
   600c4:	pop	{fp}		; (ldr fp, [sp], #4)
   600c8:	bx	lr
   600cc:	push	{fp}		; (str fp, [sp, #-4]!)
   600d0:	add	fp, sp, #0
   600d4:	sub	sp, sp, #12
   600d8:	mov	r3, r0
   600dc:	str	r1, [fp, #-12]
   600e0:	strb	r3, [fp, #-5]
   600e4:	ldrb	r2, [fp, #-5]
   600e8:	ldr	r3, [fp, #-12]
   600ec:	lsr	r3, r2, r3
   600f0:	uxtb	r2, r3
   600f4:	ldrb	r1, [fp, #-5]
   600f8:	ldr	r3, [fp, #-12]
   600fc:	rsb	r3, r3, #8
   60100:	lsl	r3, r1, r3
   60104:	uxtb	r3, r3
   60108:	orr	r3, r2, r3
   6010c:	uxtb	r3, r3
   60110:	mov	r0, r3
   60114:	add	sp, fp, #0
   60118:	pop	{fp}		; (ldr fp, [sp], #4)
   6011c:	bx	lr
   60120:	push	{fp}		; (str fp, [sp, #-4]!)
   60124:	add	fp, sp, #0
   60128:	sub	sp, sp, #12
   6012c:	str	r0, [fp, #-8]
   60130:	ldr	r3, [fp, #-8]
   60134:	cmp	r3, #90	; 0x5a
   60138:	bgt	6015c <__assert_fail@plt+0x4da70>
   6013c:	ldr	r3, [fp, #-8]
   60140:	cmp	r3, #65	; 0x41
   60144:	bge	6016c <__assert_fail@plt+0x4da80>
   60148:	ldr	r3, [fp, #-8]
   6014c:	sub	r3, r3, #48	; 0x30
   60150:	cmp	r3, #9
   60154:	bhi	60174 <__assert_fail@plt+0x4da88>
   60158:	b	6016c <__assert_fail@plt+0x4da80>
   6015c:	ldr	r3, [fp, #-8]
   60160:	sub	r3, r3, #97	; 0x61
   60164:	cmp	r3, #25
   60168:	bhi	60174 <__assert_fail@plt+0x4da88>
   6016c:	mov	r3, #1
   60170:	b	60178 <__assert_fail@plt+0x4da8c>
   60174:	mov	r3, #0
   60178:	mov	r0, r3
   6017c:	add	sp, fp, #0
   60180:	pop	{fp}		; (ldr fp, [sp], #4)
   60184:	bx	lr
   60188:	push	{fp}		; (str fp, [sp, #-4]!)
   6018c:	add	fp, sp, #0
   60190:	sub	sp, sp, #12
   60194:	str	r0, [fp, #-8]
   60198:	ldr	r3, [fp, #-8]
   6019c:	cmp	r3, #65	; 0x41
   601a0:	blt	601c8 <__assert_fail@plt+0x4dadc>
   601a4:	ldr	r3, [fp, #-8]
   601a8:	cmp	r3, #90	; 0x5a
   601ac:	ble	601c0 <__assert_fail@plt+0x4dad4>
   601b0:	ldr	r3, [fp, #-8]
   601b4:	sub	r3, r3, #97	; 0x61
   601b8:	cmp	r3, #25
   601bc:	bhi	601c8 <__assert_fail@plt+0x4dadc>
   601c0:	mov	r3, #1
   601c4:	b	601cc <__assert_fail@plt+0x4dae0>
   601c8:	mov	r3, #0
   601cc:	mov	r0, r3
   601d0:	add	sp, fp, #0
   601d4:	pop	{fp}		; (ldr fp, [sp], #4)
   601d8:	bx	lr
   601dc:	push	{fp}		; (str fp, [sp, #-4]!)
   601e0:	add	fp, sp, #0
   601e4:	sub	sp, sp, #12
   601e8:	str	r0, [fp, #-8]
   601ec:	ldr	r3, [fp, #-8]
   601f0:	cmp	r3, #127	; 0x7f
   601f4:	bhi	60200 <__assert_fail@plt+0x4db14>
   601f8:	mov	r3, #1
   601fc:	b	60204 <__assert_fail@plt+0x4db18>
   60200:	mov	r3, #0
   60204:	mov	r0, r3
   60208:	add	sp, fp, #0
   6020c:	pop	{fp}		; (ldr fp, [sp], #4)
   60210:	bx	lr
   60214:	push	{fp}		; (str fp, [sp, #-4]!)
   60218:	add	fp, sp, #0
   6021c:	sub	sp, sp, #12
   60220:	str	r0, [fp, #-8]
   60224:	ldr	r3, [fp, #-8]
   60228:	cmp	r3, #32
   6022c:	beq	6023c <__assert_fail@plt+0x4db50>
   60230:	ldr	r3, [fp, #-8]
   60234:	cmp	r3, #9
   60238:	bne	60244 <__assert_fail@plt+0x4db58>
   6023c:	mov	r3, #1
   60240:	b	60248 <__assert_fail@plt+0x4db5c>
   60244:	mov	r3, #0
   60248:	and	r3, r3, #1
   6024c:	uxtb	r3, r3
   60250:	mov	r0, r3
   60254:	add	sp, fp, #0
   60258:	pop	{fp}		; (ldr fp, [sp], #4)
   6025c:	bx	lr
   60260:	push	{fp}		; (str fp, [sp, #-4]!)
   60264:	add	fp, sp, #0
   60268:	sub	sp, sp, #12
   6026c:	str	r0, [fp, #-8]
   60270:	ldr	r3, [fp, #-8]
   60274:	cmp	r3, #0
   60278:	blt	6029c <__assert_fail@plt+0x4dbb0>
   6027c:	ldr	r3, [fp, #-8]
   60280:	cmp	r3, #31
   60284:	ble	60294 <__assert_fail@plt+0x4dba8>
   60288:	ldr	r3, [fp, #-8]
   6028c:	cmp	r3, #127	; 0x7f
   60290:	bne	6029c <__assert_fail@plt+0x4dbb0>
   60294:	mov	r3, #1
   60298:	b	602a0 <__assert_fail@plt+0x4dbb4>
   6029c:	mov	r3, #0
   602a0:	mov	r0, r3
   602a4:	add	sp, fp, #0
   602a8:	pop	{fp}		; (ldr fp, [sp], #4)
   602ac:	bx	lr
   602b0:	push	{fp}		; (str fp, [sp, #-4]!)
   602b4:	add	fp, sp, #0
   602b8:	sub	sp, sp, #12
   602bc:	str	r0, [fp, #-8]
   602c0:	ldr	r3, [fp, #-8]
   602c4:	sub	r3, r3, #48	; 0x30
   602c8:	cmp	r3, #9
   602cc:	bhi	602d8 <__assert_fail@plt+0x4dbec>
   602d0:	mov	r3, #1
   602d4:	b	602dc <__assert_fail@plt+0x4dbf0>
   602d8:	mov	r3, #0
   602dc:	mov	r0, r3
   602e0:	add	sp, fp, #0
   602e4:	pop	{fp}		; (ldr fp, [sp], #4)
   602e8:	bx	lr
   602ec:	push	{fp}		; (str fp, [sp, #-4]!)
   602f0:	add	fp, sp, #0
   602f4:	sub	sp, sp, #12
   602f8:	str	r0, [fp, #-8]
   602fc:	ldr	r3, [fp, #-8]
   60300:	sub	r3, r3, #33	; 0x21
   60304:	cmp	r3, #93	; 0x5d
   60308:	bhi	60314 <__assert_fail@plt+0x4dc28>
   6030c:	mov	r3, #1
   60310:	b	60318 <__assert_fail@plt+0x4dc2c>
   60314:	mov	r3, #0
   60318:	mov	r0, r3
   6031c:	add	sp, fp, #0
   60320:	pop	{fp}		; (ldr fp, [sp], #4)
   60324:	bx	lr
   60328:	push	{fp}		; (str fp, [sp, #-4]!)
   6032c:	add	fp, sp, #0
   60330:	sub	sp, sp, #12
   60334:	str	r0, [fp, #-8]
   60338:	ldr	r3, [fp, #-8]
   6033c:	sub	r3, r3, #97	; 0x61
   60340:	cmp	r3, #25
   60344:	bhi	60350 <__assert_fail@plt+0x4dc64>
   60348:	mov	r3, #1
   6034c:	b	60354 <__assert_fail@plt+0x4dc68>
   60350:	mov	r3, #0
   60354:	mov	r0, r3
   60358:	add	sp, fp, #0
   6035c:	pop	{fp}		; (ldr fp, [sp], #4)
   60360:	bx	lr
   60364:	push	{fp}		; (str fp, [sp, #-4]!)
   60368:	add	fp, sp, #0
   6036c:	sub	sp, sp, #12
   60370:	str	r0, [fp, #-8]
   60374:	ldr	r3, [fp, #-8]
   60378:	sub	r3, r3, #32
   6037c:	cmp	r3, #94	; 0x5e
   60380:	bhi	6038c <__assert_fail@plt+0x4dca0>
   60384:	mov	r3, #1
   60388:	b	60390 <__assert_fail@plt+0x4dca4>
   6038c:	mov	r3, #0
   60390:	mov	r0, r3
   60394:	add	sp, fp, #0
   60398:	pop	{fp}		; (ldr fp, [sp], #4)
   6039c:	bx	lr
   603a0:	push	{fp}		; (str fp, [sp, #-4]!)
   603a4:	add	fp, sp, #0
   603a8:	sub	sp, sp, #12
   603ac:	str	r0, [fp, #-8]
   603b0:	ldr	r3, [fp, #-8]
   603b4:	cmp	r3, #64	; 0x40
   603b8:	bgt	603dc <__assert_fail@plt+0x4dcf0>
   603bc:	ldr	r3, [fp, #-8]
   603c0:	cmp	r3, #58	; 0x3a
   603c4:	bge	60404 <__assert_fail@plt+0x4dd18>
   603c8:	ldr	r3, [fp, #-8]
   603cc:	sub	r3, r3, #33	; 0x21
   603d0:	cmp	r3, #14
   603d4:	bhi	6040c <__assert_fail@plt+0x4dd20>
   603d8:	b	60404 <__assert_fail@plt+0x4dd18>
   603dc:	ldr	r3, [fp, #-8]
   603e0:	cmp	r3, #91	; 0x5b
   603e4:	blt	6040c <__assert_fail@plt+0x4dd20>
   603e8:	ldr	r3, [fp, #-8]
   603ec:	cmp	r3, #96	; 0x60
   603f0:	ble	60404 <__assert_fail@plt+0x4dd18>
   603f4:	ldr	r3, [fp, #-8]
   603f8:	sub	r3, r3, #123	; 0x7b
   603fc:	cmp	r3, #3
   60400:	bhi	6040c <__assert_fail@plt+0x4dd20>
   60404:	mov	r3, #1
   60408:	b	60410 <__assert_fail@plt+0x4dd24>
   6040c:	mov	r3, #0
   60410:	mov	r0, r3
   60414:	add	sp, fp, #0
   60418:	pop	{fp}		; (ldr fp, [sp], #4)
   6041c:	bx	lr
   60420:	push	{fp}		; (str fp, [sp, #-4]!)
   60424:	add	fp, sp, #0
   60428:	sub	sp, sp, #12
   6042c:	str	r0, [fp, #-8]
   60430:	ldr	r3, [fp, #-8]
   60434:	cmp	r3, #9
   60438:	blt	6045c <__assert_fail@plt+0x4dd70>
   6043c:	ldr	r3, [fp, #-8]
   60440:	cmp	r3, #13
   60444:	ble	60454 <__assert_fail@plt+0x4dd68>
   60448:	ldr	r3, [fp, #-8]
   6044c:	cmp	r3, #32
   60450:	bne	6045c <__assert_fail@plt+0x4dd70>
   60454:	mov	r3, #1
   60458:	b	60460 <__assert_fail@plt+0x4dd74>
   6045c:	mov	r3, #0
   60460:	mov	r0, r3
   60464:	add	sp, fp, #0
   60468:	pop	{fp}		; (ldr fp, [sp], #4)
   6046c:	bx	lr
   60470:	push	{fp}		; (str fp, [sp, #-4]!)
   60474:	add	fp, sp, #0
   60478:	sub	sp, sp, #12
   6047c:	str	r0, [fp, #-8]
   60480:	ldr	r3, [fp, #-8]
   60484:	sub	r3, r3, #65	; 0x41
   60488:	cmp	r3, #25
   6048c:	bhi	60498 <__assert_fail@plt+0x4ddac>
   60490:	mov	r3, #1
   60494:	b	6049c <__assert_fail@plt+0x4ddb0>
   60498:	mov	r3, #0
   6049c:	mov	r0, r3
   604a0:	add	sp, fp, #0
   604a4:	pop	{fp}		; (ldr fp, [sp], #4)
   604a8:	bx	lr
   604ac:	push	{fp}		; (str fp, [sp, #-4]!)
   604b0:	add	fp, sp, #0
   604b4:	sub	sp, sp, #12
   604b8:	str	r0, [fp, #-8]
   604bc:	ldr	r3, [fp, #-8]
   604c0:	sub	r3, r3, #48	; 0x30
   604c4:	cmp	r3, #54	; 0x36
   604c8:	ldrls	pc, [pc, r3, lsl #2]
   604cc:	b	605b4 <__assert_fail@plt+0x4dec8>
   604d0:	andeq	r0, r6, ip, lsr #11
   604d4:	andeq	r0, r6, ip, lsr #11
   604d8:	andeq	r0, r6, ip, lsr #11
   604dc:	andeq	r0, r6, ip, lsr #11
   604e0:	andeq	r0, r6, ip, lsr #11
   604e4:	andeq	r0, r6, ip, lsr #11
   604e8:	andeq	r0, r6, ip, lsr #11
   604ec:	andeq	r0, r6, ip, lsr #11
   604f0:	andeq	r0, r6, ip, lsr #11
   604f4:	andeq	r0, r6, ip, lsr #11
   604f8:			; <UNDEFINED> instruction: 0x000605b4
   604fc:			; <UNDEFINED> instruction: 0x000605b4
   60500:			; <UNDEFINED> instruction: 0x000605b4
   60504:			; <UNDEFINED> instruction: 0x000605b4
   60508:			; <UNDEFINED> instruction: 0x000605b4
   6050c:			; <UNDEFINED> instruction: 0x000605b4
   60510:			; <UNDEFINED> instruction: 0x000605b4
   60514:	andeq	r0, r6, ip, lsr #11
   60518:	andeq	r0, r6, ip, lsr #11
   6051c:	andeq	r0, r6, ip, lsr #11
   60520:	andeq	r0, r6, ip, lsr #11
   60524:	andeq	r0, r6, ip, lsr #11
   60528:	andeq	r0, r6, ip, lsr #11
   6052c:			; <UNDEFINED> instruction: 0x000605b4
   60530:			; <UNDEFINED> instruction: 0x000605b4
   60534:			; <UNDEFINED> instruction: 0x000605b4
   60538:			; <UNDEFINED> instruction: 0x000605b4
   6053c:			; <UNDEFINED> instruction: 0x000605b4
   60540:			; <UNDEFINED> instruction: 0x000605b4
   60544:			; <UNDEFINED> instruction: 0x000605b4
   60548:			; <UNDEFINED> instruction: 0x000605b4
   6054c:			; <UNDEFINED> instruction: 0x000605b4
   60550:			; <UNDEFINED> instruction: 0x000605b4
   60554:			; <UNDEFINED> instruction: 0x000605b4
   60558:			; <UNDEFINED> instruction: 0x000605b4
   6055c:			; <UNDEFINED> instruction: 0x000605b4
   60560:			; <UNDEFINED> instruction: 0x000605b4
   60564:			; <UNDEFINED> instruction: 0x000605b4
   60568:			; <UNDEFINED> instruction: 0x000605b4
   6056c:			; <UNDEFINED> instruction: 0x000605b4
   60570:			; <UNDEFINED> instruction: 0x000605b4
   60574:			; <UNDEFINED> instruction: 0x000605b4
   60578:			; <UNDEFINED> instruction: 0x000605b4
   6057c:			; <UNDEFINED> instruction: 0x000605b4
   60580:			; <UNDEFINED> instruction: 0x000605b4
   60584:			; <UNDEFINED> instruction: 0x000605b4
   60588:			; <UNDEFINED> instruction: 0x000605b4
   6058c:			; <UNDEFINED> instruction: 0x000605b4
   60590:			; <UNDEFINED> instruction: 0x000605b4
   60594:	andeq	r0, r6, ip, lsr #11
   60598:	andeq	r0, r6, ip, lsr #11
   6059c:	andeq	r0, r6, ip, lsr #11
   605a0:	andeq	r0, r6, ip, lsr #11
   605a4:	andeq	r0, r6, ip, lsr #11
   605a8:	andeq	r0, r6, ip, lsr #11
   605ac:	mov	r3, #1
   605b0:	b	605b8 <__assert_fail@plt+0x4decc>
   605b4:	mov	r3, #0
   605b8:	mov	r0, r3
   605bc:	add	sp, fp, #0
   605c0:	pop	{fp}		; (ldr fp, [sp], #4)
   605c4:	bx	lr
   605c8:	push	{fp}		; (str fp, [sp, #-4]!)
   605cc:	add	fp, sp, #0
   605d0:	sub	sp, sp, #12
   605d4:	str	r0, [fp, #-8]
   605d8:	ldr	r3, [fp, #-8]
   605dc:	sub	r3, r3, #65	; 0x41
   605e0:	cmp	r3, #25
   605e4:	bhi	605f4 <__assert_fail@plt+0x4df08>
   605e8:	ldr	r3, [fp, #-8]
   605ec:	add	r3, r3, #32
   605f0:	b	605f8 <__assert_fail@plt+0x4df0c>
   605f4:	ldr	r3, [fp, #-8]
   605f8:	mov	r0, r3
   605fc:	add	sp, fp, #0
   60600:	pop	{fp}		; (ldr fp, [sp], #4)
   60604:	bx	lr
   60608:	push	{fp}		; (str fp, [sp, #-4]!)
   6060c:	add	fp, sp, #0
   60610:	sub	sp, sp, #12
   60614:	str	r0, [fp, #-8]
   60618:	ldr	r3, [fp, #-8]
   6061c:	sub	r3, r3, #97	; 0x61
   60620:	cmp	r3, #25
   60624:	bhi	60634 <__assert_fail@plt+0x4df48>
   60628:	ldr	r3, [fp, #-8]
   6062c:	sub	r3, r3, #32
   60630:	b	60638 <__assert_fail@plt+0x4df4c>
   60634:	ldr	r3, [fp, #-8]
   60638:	mov	r0, r3
   6063c:	add	sp, fp, #0
   60640:	pop	{fp}		; (ldr fp, [sp], #4)
   60644:	bx	lr
   60648:	strd	r4, [sp, #-16]!
   6064c:	str	fp, [sp, #8]
   60650:	str	lr, [sp, #12]
   60654:	add	fp, sp, #12
   60658:	sub	sp, sp, #16
   6065c:	str	r0, [fp, #-24]	; 0xffffffe8
   60660:	str	r1, [fp, #-28]	; 0xffffffe4
   60664:	ldr	r5, [fp, #-24]	; 0xffffffe8
   60668:	ldr	r4, [fp, #-28]	; 0xffffffe4
   6066c:	cmp	r5, r4
   60670:	bne	6067c <__assert_fail@plt+0x4df90>
   60674:	mov	r3, #0
   60678:	b	606dc <__assert_fail@plt+0x4dff0>
   6067c:	ldrb	r3, [r5]
   60680:	mov	r0, r3
   60684:	bl	605c8 <__assert_fail@plt+0x4dedc>
   60688:	mov	r3, r0
   6068c:	strb	r3, [fp, #-13]
   60690:	ldrb	r3, [r4]
   60694:	mov	r0, r3
   60698:	bl	605c8 <__assert_fail@plt+0x4dedc>
   6069c:	mov	r3, r0
   606a0:	strb	r3, [fp, #-14]
   606a4:	ldrb	r3, [fp, #-13]
   606a8:	cmp	r3, #0
   606ac:	beq	606cc <__assert_fail@plt+0x4dfe0>
   606b0:	add	r5, r5, #1
   606b4:	add	r4, r4, #1
   606b8:	ldrb	r2, [fp, #-13]
   606bc:	ldrb	r3, [fp, #-14]
   606c0:	cmp	r2, r3
   606c4:	beq	6067c <__assert_fail@plt+0x4df90>
   606c8:	b	606d0 <__assert_fail@plt+0x4dfe4>
   606cc:	nop	{0}
   606d0:	ldrb	r2, [fp, #-13]
   606d4:	ldrb	r3, [fp, #-14]
   606d8:	sub	r3, r2, r3
   606dc:	mov	r0, r3
   606e0:	sub	sp, fp, #12
   606e4:	ldrd	r4, [sp]
   606e8:	ldr	fp, [sp, #8]
   606ec:	add	sp, sp, #12
   606f0:	pop	{pc}		; (ldr pc, [sp], #4)
   606f4:	str	fp, [sp, #-8]!
   606f8:	str	lr, [sp, #4]
   606fc:	add	fp, sp, #4
   60700:	sub	sp, sp, #16
   60704:	str	r0, [fp, #-16]
   60708:	ldr	r0, [fp, #-16]
   6070c:	bl	12284 <__fpending@plt>
   60710:	mov	r3, r0
   60714:	cmp	r3, #0
   60718:	movne	r3, #1
   6071c:	moveq	r3, #0
   60720:	strb	r3, [fp, #-5]
   60724:	ldr	r0, [fp, #-16]
   60728:	bl	120bc <ferror@plt>
   6072c:	mov	r3, r0
   60730:	cmp	r3, #0
   60734:	movne	r3, #1
   60738:	moveq	r3, #0
   6073c:	strb	r3, [fp, #-6]
   60740:	ldr	r0, [fp, #-16]
   60744:	bl	124d0 <fclose@plt>
   60748:	mov	r3, r0
   6074c:	cmp	r3, #0
   60750:	movne	r3, #1
   60754:	moveq	r3, #0
   60758:	strb	r3, [fp, #-7]
   6075c:	ldrb	r3, [fp, #-6]
   60760:	cmp	r3, #0
   60764:	bne	60794 <__assert_fail@plt+0x4e0a8>
   60768:	ldrb	r3, [fp, #-7]
   6076c:	cmp	r3, #0
   60770:	beq	607c0 <__assert_fail@plt+0x4e0d4>
   60774:	ldrb	r3, [fp, #-5]
   60778:	cmp	r3, #0
   6077c:	bne	60794 <__assert_fail@plt+0x4e0a8>
   60780:	bl	12404 <__errno_location@plt>
   60784:	mov	r3, r0
   60788:	ldr	r3, [r3]
   6078c:	cmp	r3, #9
   60790:	beq	607c0 <__assert_fail@plt+0x4e0d4>
   60794:	ldrb	r3, [fp, #-7]
   60798:	eor	r3, r3, #1
   6079c:	uxtb	r3, r3
   607a0:	cmp	r3, #0
   607a4:	beq	607b8 <__assert_fail@plt+0x4e0cc>
   607a8:	bl	12404 <__errno_location@plt>
   607ac:	mov	r2, r0
   607b0:	mov	r3, #0
   607b4:	str	r3, [r2]
   607b8:	mvn	r3, #0
   607bc:	b	607c4 <__assert_fail@plt+0x4e0d8>
   607c0:	mov	r3, #0
   607c4:	mov	r0, r3
   607c8:	sub	sp, fp, #4
   607cc:	ldr	fp, [sp]
   607d0:	add	sp, sp, #4
   607d4:	pop	{pc}		; (ldr pc, [sp], #4)
   607d8:	strd	r4, [sp, #-12]!
   607dc:	str	fp, [sp, #8]
   607e0:	add	fp, sp, #8
   607e4:	sub	sp, sp, #12
   607e8:	strd	r0, [fp, #-20]	; 0xffffffec
   607ec:	ldrd	r0, [fp, #-20]	; 0xffffffec
   607f0:	subs	r4, r0, #1
   607f4:	sbc	r5, r1, #0
   607f8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   607fc:	and	r2, r4, r0
   60800:	and	r3, r5, r1
   60804:	orr	r3, r2, r3
   60808:	cmp	r3, #0
   6080c:	moveq	r3, #1
   60810:	movne	r3, #0
   60814:	uxtb	r3, r3
   60818:	mov	r0, r3
   6081c:	sub	sp, fp, #8
   60820:	ldrd	r4, [sp]
   60824:	ldr	fp, [sp, #8]
   60828:	add	sp, sp, #12
   6082c:	bx	lr
   60830:	push	{fp}		; (str fp, [sp, #-4]!)
   60834:	add	fp, sp, #0
   60838:	sub	sp, sp, #12
   6083c:	str	r0, [fp, #-8]
   60840:	ldr	r1, [fp, #-8]
   60844:	mov	r2, #0
   60848:	mov	r3, #0
   6084c:	strd	r2, [r1, #16]
   60850:	ldr	r2, [fp, #-8]
   60854:	movw	r3, #62998	; 0xf616
   60858:	movt	r3, #149	; 0x95
   6085c:	str	r3, [r2, #24]
   60860:	nop	{0}
   60864:	add	sp, fp, #0
   60868:	pop	{fp}		; (ldr fp, [sp], #4)
   6086c:	bx	lr
   60870:	strd	r4, [sp, #-16]!
   60874:	str	fp, [sp, #8]
   60878:	str	lr, [sp, #12]
   6087c:	add	fp, sp, #12
   60880:	sub	sp, sp, #8
   60884:	str	r0, [fp, #-16]
   60888:	str	r1, [fp, #-20]	; 0xffffffec
   6088c:	ldr	r3, [fp, #-16]
   60890:	ldr	r2, [r3, #24]
   60894:	movw	r3, #62998	; 0xf616
   60898:	movt	r3, #149	; 0x95
   6089c:	cmp	r2, r3
   608a0:	beq	608c4 <__assert_fail@plt+0x4e1d8>
   608a4:	movw	r3, #48184	; 0xbc38
   608a8:	movt	r3, #6
   608ac:	mov	r2, #60	; 0x3c
   608b0:	movw	r1, #48144	; 0xbc10
   608b4:	movt	r1, #6
   608b8:	movw	r0, #48160	; 0xbc20
   608bc:	movt	r0, #6
   608c0:	bl	126ec <__assert_fail@plt>
   608c4:	ldr	r3, [fp, #-16]
   608c8:	ldrd	r2, [r3, #16]
   608cc:	orrs	r3, r2, r3
   608d0:	beq	60914 <__assert_fail@plt+0x4e228>
   608d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   608d8:	ldrd	r0, [r3, #96]	; 0x60
   608dc:	ldr	r3, [fp, #-16]
   608e0:	ldrd	r2, [r3]
   608e4:	cmp	r1, r3
   608e8:	cmpeq	r0, r2
   608ec:	bne	60914 <__assert_fail@plt+0x4e228>
   608f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   608f4:	ldrd	r0, [r3]
   608f8:	ldr	r3, [fp, #-16]
   608fc:	ldrd	r2, [r3, #8]
   60900:	cmp	r1, r3
   60904:	cmpeq	r0, r2
   60908:	bne	60914 <__assert_fail@plt+0x4e228>
   6090c:	mov	r3, #1
   60910:	b	60988 <__assert_fail@plt+0x4e29c>
   60914:	ldr	r3, [fp, #-16]
   60918:	ldrd	r2, [r3, #16]
   6091c:	adds	r4, r2, #1
   60920:	adc	r5, r3, #0
   60924:	ldr	r3, [fp, #-16]
   60928:	strd	r4, [r3, #16]
   6092c:	ldr	r3, [fp, #-16]
   60930:	ldrd	r2, [r3, #16]
   60934:	mov	r0, r2
   60938:	mov	r1, r3
   6093c:	bl	607d8 <__assert_fail@plt+0x4e0ec>
   60940:	mov	r3, r0
   60944:	cmp	r3, #0
   60948:	beq	60984 <__assert_fail@plt+0x4e298>
   6094c:	ldr	r3, [fp, #-16]
   60950:	ldrd	r2, [r3, #16]
   60954:	orrs	r3, r2, r3
   60958:	bne	60964 <__assert_fail@plt+0x4e278>
   6095c:	mov	r3, #1
   60960:	b	60988 <__assert_fail@plt+0x4e29c>
   60964:	ldr	r3, [fp, #-20]	; 0xffffffec
   60968:	ldrd	r2, [r3]
   6096c:	ldr	r1, [fp, #-16]
   60970:	strd	r2, [r1, #8]
   60974:	ldr	r3, [fp, #-20]	; 0xffffffec
   60978:	ldrd	r2, [r3, #96]	; 0x60
   6097c:	ldr	r1, [fp, #-16]
   60980:	strd	r2, [r1]
   60984:	mov	r3, #0
   60988:	mov	r0, r3
   6098c:	sub	sp, fp, #12
   60990:	ldrd	r4, [sp]
   60994:	ldr	fp, [sp, #8]
   60998:	add	sp, sp, #12
   6099c:	pop	{pc}		; (ldr pc, [sp], #4)
   609a0:	str	fp, [sp, #-8]!
   609a4:	str	lr, [sp, #4]
   609a8:	add	fp, sp, #4
   609ac:	sub	sp, sp, #32
   609b0:	str	r0, [fp, #-24]	; 0xffffffe8
   609b4:	str	r1, [fp, #-28]	; 0xffffffe4
   609b8:	str	r2, [fp, #-32]	; 0xffffffe0
   609bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   609c0:	ldr	r3, [r3, #4]
   609c4:	cmp	r3, #0
   609c8:	bne	60a08 <__assert_fail@plt+0x4e31c>
   609cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   609d0:	cmp	r3, #3
   609d4:	bhi	609e4 <__assert_fail@plt+0x4e2f8>
   609d8:	mov	r3, #16
   609dc:	str	r3, [fp, #-8]
   609e0:	b	60a54 <__assert_fail@plt+0x4e368>
   609e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   609e8:	cmp	r3, #7
   609ec:	bhi	609fc <__assert_fail@plt+0x4e310>
   609f0:	mov	r3, #8
   609f4:	str	r3, [fp, #-8]
   609f8:	b	60a54 <__assert_fail@plt+0x4e368>
   609fc:	mov	r3, #4
   60a00:	str	r3, [fp, #-8]
   60a04:	b	60a54 <__assert_fail@plt+0x4e368>
   60a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60a0c:	ldr	r2, [r3, #4]
   60a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60a14:	ldr	r3, [r3, #4]
   60a18:	lsr	r3, r3, #1
   60a1c:	add	r3, r2, r3
   60a20:	add	r3, r3, #1
   60a24:	str	r3, [fp, #-8]
   60a28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60a2c:	ldr	r3, [r3, #4]
   60a30:	ldr	r2, [fp, #-8]
   60a34:	cmp	r2, r3
   60a38:	bhi	60a54 <__assert_fail@plt+0x4e368>
   60a3c:	bl	12404 <__errno_location@plt>
   60a40:	mov	r2, r0
   60a44:	mov	r3, #12
   60a48:	str	r3, [r2]
   60a4c:	mov	r3, #0
   60a50:	b	60b5c <__assert_fail@plt+0x4e470>
   60a54:	mov	ip, #0
   60a58:	ldr	r2, [fp, #-8]
   60a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   60a60:	umull	r0, r1, r2, r3
   60a64:	mov	r2, #0
   60a68:	mov	r3, #0
   60a6c:	mov	r2, r1
   60a70:	mov	r3, #0
   60a74:	cmp	r2, #0
   60a78:	beq	60a80 <__assert_fail@plt+0x4e394>
   60a7c:	mov	ip, #1
   60a80:	mov	r3, r0
   60a84:	str	r3, [fp, #-16]
   60a88:	mov	r3, ip
   60a8c:	and	r3, r3, #1
   60a90:	uxtb	r3, r3
   60a94:	cmp	r3, #0
   60a98:	beq	60aa4 <__assert_fail@plt+0x4e3b8>
   60a9c:	mov	r3, #0
   60aa0:	b	60b5c <__assert_fail@plt+0x4e470>
   60aa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60aa8:	ldr	r3, [r3, #8]
   60aac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   60ab0:	cmp	r2, r3
   60ab4:	bne	60b10 <__assert_fail@plt+0x4e424>
   60ab8:	ldr	r3, [fp, #-16]
   60abc:	mov	r0, r3
   60ac0:	bl	43510 <__assert_fail@plt+0x30e24>
   60ac4:	mov	r3, r0
   60ac8:	str	r3, [fp, #-12]
   60acc:	ldr	r3, [fp, #-12]
   60ad0:	cmp	r3, #0
   60ad4:	beq	60b2c <__assert_fail@plt+0x4e440>
   60ad8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60adc:	ldr	r3, [r3, #8]
   60ae0:	cmp	r3, #0
   60ae4:	beq	60b2c <__assert_fail@plt+0x4e440>
   60ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60aec:	ldr	r1, [r3, #8]
   60af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60af4:	ldr	r3, [r3]
   60af8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   60afc:	mul	r3, r2, r3
   60b00:	mov	r2, r3
   60b04:	ldr	r0, [fp, #-12]
   60b08:	bl	120f8 <memcpy@plt>
   60b0c:	b	60b2c <__assert_fail@plt+0x4e440>
   60b10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60b14:	ldr	r3, [r3, #8]
   60b18:	ldr	r2, [fp, #-16]
   60b1c:	mov	r1, r2
   60b20:	mov	r0, r3
   60b24:	bl	446e8 <__assert_fail@plt+0x31ffc>
   60b28:	str	r0, [fp, #-12]
   60b2c:	ldr	r3, [fp, #-12]
   60b30:	cmp	r3, #0
   60b34:	bne	60b40 <__assert_fail@plt+0x4e454>
   60b38:	mov	r3, #0
   60b3c:	b	60b5c <__assert_fail@plt+0x4e470>
   60b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60b44:	ldr	r2, [fp, #-12]
   60b48:	str	r2, [r3, #8]
   60b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60b50:	ldr	r2, [fp, #-8]
   60b54:	str	r2, [r3, #4]
   60b58:	mov	r3, #1
   60b5c:	mov	r0, r3
   60b60:	sub	sp, fp, #4
   60b64:	ldr	fp, [sp]
   60b68:	add	sp, sp, #4
   60b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   60b70:	push	{fp}		; (str fp, [sp, #-4]!)
   60b74:	add	fp, sp, #0
   60b78:	mvn	r3, #0
   60b7c:	mov	r0, r3
   60b80:	add	sp, fp, #0
   60b84:	pop	{fp}		; (ldr fp, [sp], #4)
   60b88:	bx	lr
   60b8c:	str	r4, [sp, #-12]!
   60b90:	str	fp, [sp, #4]
   60b94:	str	lr, [sp, #8]
   60b98:	add	fp, sp, #8
   60b9c:	sub	sp, sp, #12
   60ba0:	str	r0, [fp, #-16]
   60ba4:	ldr	r3, [fp, #-16]
   60ba8:	ldr	r4, [r3, #4]
   60bac:	bl	60b70 <__assert_fail@plt+0x4e484>
   60bb0:	mov	r3, r0
   60bb4:	cmp	r4, r3
   60bb8:	moveq	r3, #1
   60bbc:	movne	r3, #0
   60bc0:	uxtb	r3, r3
   60bc4:	mov	r0, r3
   60bc8:	sub	sp, fp, #8
   60bcc:	ldr	r4, [sp]
   60bd0:	ldr	fp, [sp, #4]
   60bd4:	add	sp, sp, #8
   60bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   60bdc:	str	fp, [sp, #-8]!
   60be0:	str	lr, [sp, #4]
   60be4:	add	fp, sp, #4
   60be8:	sub	sp, sp, #32
   60bec:	str	r0, [fp, #-24]	; 0xffffffe8
   60bf0:	str	r1, [fp, #-28]	; 0xffffffe4
   60bf4:	str	r2, [fp, #-32]	; 0xffffffe0
   60bf8:	str	r3, [fp, #-36]	; 0xffffffdc
   60bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   60c00:	bl	60b8c <__assert_fail@plt+0x4e4a0>
   60c04:	mov	r3, r0
   60c08:	cmp	r3, #0
   60c0c:	beq	60c18 <__assert_fail@plt+0x4e52c>
   60c10:	mov	r3, #0
   60c14:	b	60d10 <__assert_fail@plt+0x4e624>
   60c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60c1c:	ldr	r3, [r3]
   60c20:	str	r3, [fp, #-8]
   60c24:	ldr	r3, [fp, #-8]
   60c28:	cmp	r3, #0
   60c2c:	bne	60c74 <__assert_fail@plt+0x4e588>
   60c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60c34:	ldr	r3, [r3, #8]
   60c38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   60c3c:	cmp	r2, r3
   60c40:	beq	60c54 <__assert_fail@plt+0x4e568>
   60c44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60c48:	ldr	r3, [r3, #8]
   60c4c:	mov	r0, r3
   60c50:	bl	3fe0c <__assert_fail@plt+0x2d720>
   60c54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   60c58:	mov	r2, #0
   60c5c:	str	r2, [r3]
   60c60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   60c64:	mov	r2, #0
   60c68:	str	r2, [r3, #4]
   60c6c:	mov	r3, #1
   60c70:	b	60d10 <__assert_fail@plt+0x4e624>
   60c74:	ldr	r3, [fp, #-8]
   60c78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   60c7c:	mul	r3, r2, r3
   60c80:	str	r3, [fp, #-12]
   60c84:	ldr	r0, [fp, #-12]
   60c88:	bl	43510 <__assert_fail@plt+0x30e24>
   60c8c:	mov	r3, r0
   60c90:	str	r3, [fp, #-16]
   60c94:	ldr	r3, [fp, #-16]
   60c98:	cmp	r3, #0
   60c9c:	beq	60d0c <__assert_fail@plt+0x4e620>
   60ca0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60ca4:	ldr	r3, [r3, #8]
   60ca8:	cmp	r3, #0
   60cac:	beq	60cc8 <__assert_fail@plt+0x4e5dc>
   60cb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60cb4:	ldr	r3, [r3, #8]
   60cb8:	ldr	r2, [fp, #-12]
   60cbc:	mov	r1, r3
   60cc0:	ldr	r0, [fp, #-16]
   60cc4:	bl	120f8 <memcpy@plt>
   60cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60ccc:	ldr	r3, [r3, #8]
   60cd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   60cd4:	cmp	r2, r3
   60cd8:	beq	60cec <__assert_fail@plt+0x4e600>
   60cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   60ce0:	ldr	r3, [r3, #8]
   60ce4:	mov	r0, r3
   60ce8:	bl	3fe0c <__assert_fail@plt+0x2d720>
   60cec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   60cf0:	ldr	r2, [fp, #-16]
   60cf4:	str	r2, [r3]
   60cf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   60cfc:	ldr	r2, [fp, #-8]
   60d00:	str	r2, [r3, #4]
   60d04:	mov	r3, #1
   60d08:	b	60d10 <__assert_fail@plt+0x4e624>
   60d0c:	mov	r3, #0
   60d10:	mov	r0, r3
   60d14:	sub	sp, fp, #4
   60d18:	ldr	fp, [sp]
   60d1c:	add	sp, sp, #4
   60d20:	pop	{pc}		; (ldr pc, [sp], #4)
   60d24:	str	fp, [sp, #-8]!
   60d28:	str	lr, [sp, #4]
   60d2c:	add	fp, sp, #4
   60d30:	sub	sp, sp, #24
   60d34:	str	r0, [fp, #-16]
   60d38:	str	r1, [fp, #-20]	; 0xffffffec
   60d3c:	str	r2, [fp, #-24]	; 0xffffffe8
   60d40:	str	r3, [fp, #-28]	; 0xffffffe4
   60d44:	ldr	r3, [fp, #-16]
   60d48:	ldr	r3, [r3, #4]
   60d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   60d50:	cmp	r2, r3
   60d54:	bhi	60d6c <__assert_fail@plt+0x4e680>
   60d58:	ldr	r3, [fp, #-16]
   60d5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   60d60:	str	r2, [r3]
   60d64:	mov	r3, #1
   60d68:	b	60e90 <__assert_fail@plt+0x4e7a4>
   60d6c:	mov	ip, #0
   60d70:	ldr	r2, [fp, #-20]	; 0xffffffec
   60d74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   60d78:	umull	r0, r1, r2, r3
   60d7c:	mov	r2, #0
   60d80:	mov	r3, #0
   60d84:	mov	r2, r1
   60d88:	mov	r3, #0
   60d8c:	cmp	r2, #0
   60d90:	beq	60d98 <__assert_fail@plt+0x4e6ac>
   60d94:	mov	ip, #1
   60d98:	mov	r3, r0
   60d9c:	str	r3, [fp, #-12]
   60da0:	mov	r3, ip
   60da4:	and	r3, r3, #1
   60da8:	uxtb	r3, r3
   60dac:	cmp	r3, #0
   60db0:	beq	60dcc <__assert_fail@plt+0x4e6e0>
   60db4:	bl	12404 <__errno_location@plt>
   60db8:	mov	r2, r0
   60dbc:	mov	r3, #12
   60dc0:	str	r3, [r2]
   60dc4:	mov	r3, #0
   60dc8:	b	60e90 <__assert_fail@plt+0x4e7a4>
   60dcc:	ldr	r3, [fp, #-16]
   60dd0:	ldr	r3, [r3, #8]
   60dd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   60dd8:	cmp	r2, r3
   60ddc:	bne	60e38 <__assert_fail@plt+0x4e74c>
   60de0:	ldr	r3, [fp, #-12]
   60de4:	mov	r0, r3
   60de8:	bl	43510 <__assert_fail@plt+0x30e24>
   60dec:	mov	r3, r0
   60df0:	str	r3, [fp, #-8]
   60df4:	ldr	r3, [fp, #-8]
   60df8:	cmp	r3, #0
   60dfc:	beq	60e54 <__assert_fail@plt+0x4e768>
   60e00:	ldr	r3, [fp, #-16]
   60e04:	ldr	r3, [r3, #8]
   60e08:	cmp	r3, #0
   60e0c:	beq	60e54 <__assert_fail@plt+0x4e768>
   60e10:	ldr	r3, [fp, #-16]
   60e14:	ldr	r1, [r3, #8]
   60e18:	ldr	r3, [fp, #-16]
   60e1c:	ldr	r3, [r3]
   60e20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   60e24:	mul	r3, r2, r3
   60e28:	mov	r2, r3
   60e2c:	ldr	r0, [fp, #-8]
   60e30:	bl	120f8 <memcpy@plt>
   60e34:	b	60e54 <__assert_fail@plt+0x4e768>
   60e38:	ldr	r3, [fp, #-16]
   60e3c:	ldr	r3, [r3, #8]
   60e40:	ldr	r2, [fp, #-12]
   60e44:	mov	r1, r2
   60e48:	mov	r0, r3
   60e4c:	bl	446e8 <__assert_fail@plt+0x31ffc>
   60e50:	str	r0, [fp, #-8]
   60e54:	ldr	r3, [fp, #-8]
   60e58:	cmp	r3, #0
   60e5c:	bne	60e68 <__assert_fail@plt+0x4e77c>
   60e60:	mov	r3, #0
   60e64:	b	60e90 <__assert_fail@plt+0x4e7a4>
   60e68:	ldr	r3, [fp, #-16]
   60e6c:	ldr	r2, [fp, #-8]
   60e70:	str	r2, [r3, #8]
   60e74:	ldr	r3, [fp, #-16]
   60e78:	ldr	r2, [fp, #-20]	; 0xffffffec
   60e7c:	str	r2, [r3, #4]
   60e80:	ldr	r3, [fp, #-16]
   60e84:	ldr	r2, [fp, #-20]	; 0xffffffec
   60e88:	str	r2, [r3]
   60e8c:	mov	r3, #1
   60e90:	mov	r0, r3
   60e94:	sub	sp, fp, #4
   60e98:	ldr	fp, [sp]
   60e9c:	add	sp, sp, #4
   60ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   60ea4:	str	fp, [sp, #-8]!
   60ea8:	str	lr, [sp, #4]
   60eac:	add	fp, sp, #4
   60eb0:	sub	sp, sp, #8
   60eb4:	str	r0, [fp, #-8]
   60eb8:	ldr	r1, [fp, #-8]
   60ebc:	mov	r0, #0
   60ec0:	bl	120e0 <clock_gettime@plt>
   60ec4:	nop	{0}
   60ec8:	sub	sp, fp, #4
   60ecc:	ldr	fp, [sp]
   60ed0:	add	sp, sp, #4
   60ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   60ed8:	str	fp, [sp, #-8]!
   60edc:	str	lr, [sp, #4]
   60ee0:	add	fp, sp, #4
   60ee4:	sub	sp, sp, #16
   60ee8:	str	r0, [fp, #-16]
   60eec:	sub	r3, fp, #12
   60ef0:	mov	r0, r3
   60ef4:	bl	60ea4 <__assert_fail@plt+0x4e7b8>
   60ef8:	ldr	r3, [fp, #-16]
   60efc:	mov	r1, r3
   60f00:	sub	r3, fp, #12
   60f04:	ldrd	r2, [r3]
   60f08:	strd	r2, [r1]
   60f0c:	ldr	r0, [fp, #-16]
   60f10:	sub	sp, fp, #4
   60f14:	ldr	fp, [sp]
   60f18:	add	sp, sp, #4
   60f1c:	pop	{pc}		; (ldr pc, [sp], #4)
   60f20:	str	fp, [sp, #-8]!
   60f24:	str	lr, [sp, #4]
   60f28:	add	fp, sp, #4
   60f2c:	sub	sp, sp, #272	; 0x110
   60f30:	str	r0, [fp, #-272]	; 0xfffffef0
   60f34:	sub	r3, fp, #264	; 0x108
   60f38:	movw	r2, #257	; 0x101
   60f3c:	mov	r1, r3
   60f40:	ldr	r0, [fp, #-272]	; 0xfffffef0
   60f44:	bl	64554 <__assert_fail@plt+0x51e68>
   60f48:	mov	r3, r0
   60f4c:	cmp	r3, #0
   60f50:	beq	60f5c <__assert_fail@plt+0x4e870>
   60f54:	mov	r3, #0
   60f58:	b	60fb0 <__assert_fail@plt+0x4e8c4>
   60f5c:	sub	r3, fp, #264	; 0x108
   60f60:	movw	r1, #48196	; 0xbc44
   60f64:	movt	r1, #6
   60f68:	mov	r0, r3
   60f6c:	bl	11ffc <strcmp@plt>
   60f70:	mov	r3, r0
   60f74:	cmp	r3, #0
   60f78:	beq	60fa4 <__assert_fail@plt+0x4e8b8>
   60f7c:	sub	r3, fp, #264	; 0x108
   60f80:	movw	r1, #48200	; 0xbc48
   60f84:	movt	r1, #6
   60f88:	mov	r0, r3
   60f8c:	bl	11ffc <strcmp@plt>
   60f90:	mov	r3, r0
   60f94:	cmp	r3, #0
   60f98:	beq	60fa4 <__assert_fail@plt+0x4e8b8>
   60f9c:	mov	r3, #1
   60fa0:	b	60fa8 <__assert_fail@plt+0x4e8bc>
   60fa4:	mov	r3, #0
   60fa8:	and	r3, r3, #1
   60fac:	uxtb	r3, r3
   60fb0:	mov	r0, r3
   60fb4:	sub	sp, fp, #4
   60fb8:	ldr	fp, [sp]
   60fbc:	add	sp, sp, #4
   60fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   60fc4:	push	{fp}		; (str fp, [sp, #-4]!)
   60fc8:	add	fp, sp, #0
   60fcc:	sub	sp, sp, #20
   60fd0:	str	r0, [fp, #-16]
   60fd4:	str	r1, [fp, #-20]	; 0xffffffec
   60fd8:	ldr	r3, [fp, #-16]
   60fdc:	mov	r2, #1
   60fe0:	strb	r2, [r3, #28]
   60fe4:	ldr	r3, [fp, #-16]
   60fe8:	mov	r2, #0
   60fec:	str	r2, [r3, #20]
   60ff0:	ldr	r3, [fp, #-16]
   60ff4:	mov	r2, #0
   60ff8:	str	r2, [r3, #24]
   60ffc:	mov	r3, #0
   61000:	str	r3, [fp, #-8]
   61004:	b	61024 <__assert_fail@plt+0x4e938>
   61008:	ldr	r3, [fp, #-16]
   6100c:	ldr	r2, [fp, #-8]
   61010:	ldr	r1, [fp, #-20]	; 0xffffffec
   61014:	str	r1, [r3, r2, lsl #2]
   61018:	ldr	r3, [fp, #-8]
   6101c:	add	r3, r3, #1
   61020:	str	r3, [fp, #-8]
   61024:	ldr	r3, [fp, #-8]
   61028:	cmp	r3, #3
   6102c:	ble	61008 <__assert_fail@plt+0x4e91c>
   61030:	ldr	r3, [fp, #-16]
   61034:	ldr	r2, [fp, #-20]	; 0xffffffec
   61038:	str	r2, [r3, #16]
   6103c:	nop	{0}
   61040:	add	sp, fp, #0
   61044:	pop	{fp}		; (ldr fp, [sp], #4)
   61048:	bx	lr
   6104c:	push	{fp}		; (str fp, [sp, #-4]!)
   61050:	add	fp, sp, #0
   61054:	sub	sp, sp, #12
   61058:	str	r0, [fp, #-8]
   6105c:	ldr	r3, [fp, #-8]
   61060:	ldrb	r3, [r3, #28]
   61064:	mov	r0, r3
   61068:	add	sp, fp, #0
   6106c:	pop	{fp}		; (ldr fp, [sp], #4)
   61070:	bx	lr
   61074:	push	{fp}		; (str fp, [sp, #-4]!)
   61078:	add	fp, sp, #0
   6107c:	sub	sp, sp, #20
   61080:	str	r0, [fp, #-16]
   61084:	str	r1, [fp, #-20]	; 0xffffffec
   61088:	ldr	r3, [fp, #-16]
   6108c:	ldr	r3, [r3, #20]
   61090:	ldr	r2, [fp, #-16]
   61094:	ldrb	r2, [r2, #28]
   61098:	eor	r2, r2, #1
   6109c:	uxtb	r2, r2
   610a0:	add	r3, r3, r2
   610a4:	and	r3, r3, #3
   610a8:	str	r3, [fp, #-8]
   610ac:	ldr	r3, [fp, #-16]
   610b0:	ldr	r2, [fp, #-8]
   610b4:	ldr	r3, [r3, r2, lsl #2]
   610b8:	str	r3, [fp, #-12]
   610bc:	ldr	r3, [fp, #-16]
   610c0:	ldr	r2, [fp, #-8]
   610c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   610c8:	str	r1, [r3, r2, lsl #2]
   610cc:	ldr	r3, [fp, #-16]
   610d0:	ldr	r2, [fp, #-8]
   610d4:	str	r2, [r3, #20]
   610d8:	ldr	r3, [fp, #-16]
   610dc:	ldr	r3, [r3, #24]
   610e0:	ldr	r2, [fp, #-8]
   610e4:	cmp	r2, r3
   610e8:	bne	61114 <__assert_fail@plt+0x4ea28>
   610ec:	ldr	r3, [fp, #-16]
   610f0:	ldr	r3, [r3, #24]
   610f4:	ldr	r2, [fp, #-16]
   610f8:	ldrb	r2, [r2, #28]
   610fc:	eor	r2, r2, #1
   61100:	uxtb	r2, r2
   61104:	add	r3, r3, r2
   61108:	and	r2, r3, #3
   6110c:	ldr	r3, [fp, #-16]
   61110:	str	r2, [r3, #24]
   61114:	ldr	r3, [fp, #-16]
   61118:	mov	r2, #0
   6111c:	strb	r2, [r3, #28]
   61120:	ldr	r3, [fp, #-12]
   61124:	mov	r0, r3
   61128:	add	sp, fp, #0
   6112c:	pop	{fp}		; (ldr fp, [sp], #4)
   61130:	bx	lr
   61134:	str	fp, [sp, #-8]!
   61138:	str	lr, [sp, #4]
   6113c:	add	fp, sp, #4
   61140:	sub	sp, sp, #16
   61144:	str	r0, [fp, #-16]
   61148:	ldr	r0, [fp, #-16]
   6114c:	bl	6104c <__assert_fail@plt+0x4e960>
   61150:	mov	r3, r0
   61154:	cmp	r3, #0
   61158:	beq	61160 <__assert_fail@plt+0x4ea74>
   6115c:	bl	12698 <abort@plt>
   61160:	ldr	r3, [fp, #-16]
   61164:	ldr	r2, [r3, #20]
   61168:	ldr	r3, [fp, #-16]
   6116c:	ldr	r3, [r3, r2, lsl #2]
   61170:	str	r3, [fp, #-8]
   61174:	ldr	r3, [fp, #-16]
   61178:	ldr	r2, [r3, #20]
   6117c:	ldr	r3, [fp, #-16]
   61180:	ldr	r1, [r3, #16]
   61184:	ldr	r3, [fp, #-16]
   61188:	str	r1, [r3, r2, lsl #2]
   6118c:	ldr	r3, [fp, #-16]
   61190:	ldr	r2, [r3, #20]
   61194:	ldr	r3, [fp, #-16]
   61198:	ldr	r3, [r3, #24]
   6119c:	cmp	r2, r3
   611a0:	bne	611b4 <__assert_fail@plt+0x4eac8>
   611a4:	ldr	r3, [fp, #-16]
   611a8:	mov	r2, #1
   611ac:	strb	r2, [r3, #28]
   611b0:	b	611cc <__assert_fail@plt+0x4eae0>
   611b4:	ldr	r3, [fp, #-16]
   611b8:	ldr	r3, [r3, #20]
   611bc:	add	r3, r3, #3
   611c0:	and	r2, r3, #3
   611c4:	ldr	r3, [fp, #-16]
   611c8:	str	r2, [r3, #20]
   611cc:	ldr	r3, [fp, #-8]
   611d0:	mov	r0, r3
   611d4:	sub	sp, fp, #4
   611d8:	ldr	fp, [sp]
   611dc:	add	sp, sp, #4
   611e0:	pop	{pc}		; (ldr pc, [sp], #4)
   611e4:	str	fp, [sp, #-8]!
   611e8:	str	lr, [sp, #4]
   611ec:	add	fp, sp, #4
   611f0:	bl	12404 <__errno_location@plt>
   611f4:	mov	r2, r0
   611f8:	mov	r3, #12
   611fc:	str	r3, [r2]
   61200:	mov	r3, #0
   61204:	mov	r0, r3
   61208:	sub	sp, fp, #4
   6120c:	ldr	fp, [sp]
   61210:	add	sp, sp, #4
   61214:	pop	{pc}		; (ldr pc, [sp], #4)
   61218:	str	fp, [sp, #-8]!
   6121c:	str	lr, [sp, #4]
   61220:	add	fp, sp, #4
   61224:	sub	sp, sp, #8
   61228:	str	r0, [fp, #-8]
   6122c:	ldr	r3, [fp, #-8]
   61230:	mov	r0, r3
   61234:	bl	43510 <__assert_fail@plt+0x30e24>
   61238:	mov	r3, r0
   6123c:	mov	r0, r3
   61240:	sub	sp, fp, #4
   61244:	ldr	fp, [sp]
   61248:	add	sp, sp, #4
   6124c:	pop	{pc}		; (ldr pc, [sp], #4)
   61250:	str	fp, [sp, #-8]!
   61254:	str	lr, [sp, #4]
   61258:	add	fp, sp, #4
   6125c:	sub	sp, sp, #8
   61260:	str	r0, [fp, #-8]
   61264:	str	r1, [fp, #-12]
   61268:	ldr	r3, [fp, #-12]
   6126c:	cmp	r3, #0
   61270:	moveq	r3, #1
   61274:	movne	r3, #0
   61278:	uxtb	r3, r3
   6127c:	mov	r2, r3
   61280:	ldr	r3, [fp, #-12]
   61284:	orr	r3, r2, r3
   61288:	mov	r1, r3
   6128c:	ldr	r0, [fp, #-8]
   61290:	bl	446e8 <__assert_fail@plt+0x31ffc>
   61294:	mov	r3, r0
   61298:	mov	r0, r3
   6129c:	sub	sp, fp, #4
   612a0:	ldr	fp, [sp]
   612a4:	add	sp, sp, #4
   612a8:	pop	{pc}		; (ldr pc, [sp], #4)
   612ac:	str	fp, [sp, #-8]!
   612b0:	str	lr, [sp, #4]
   612b4:	add	fp, sp, #4
   612b8:	sub	sp, sp, #8
   612bc:	str	r0, [fp, #-8]
   612c0:	str	r1, [fp, #-12]
   612c4:	ldr	r3, [fp, #-8]
   612c8:	ldr	r2, [fp, #-12]
   612cc:	mov	r1, r2
   612d0:	mov	r0, r3
   612d4:	bl	3f338 <__assert_fail@plt+0x2cc4c>
   612d8:	mov	r3, r0
   612dc:	mov	r0, r3
   612e0:	sub	sp, fp, #4
   612e4:	ldr	fp, [sp]
   612e8:	add	sp, sp, #4
   612ec:	pop	{pc}		; (ldr pc, [sp], #4)
   612f0:	str	fp, [sp, #-8]!
   612f4:	str	lr, [sp, #4]
   612f8:	add	fp, sp, #4
   612fc:	sub	sp, sp, #16
   61300:	str	r0, [fp, #-8]
   61304:	str	r1, [fp, #-12]
   61308:	str	r2, [fp, #-16]
   6130c:	ldr	r3, [fp, #-12]
   61310:	cmp	r3, #0
   61314:	beq	61324 <__assert_fail@plt+0x4ec38>
   61318:	ldr	r3, [fp, #-16]
   6131c:	cmp	r3, #0
   61320:	bne	61334 <__assert_fail@plt+0x4ec48>
   61324:	mov	r3, #1
   61328:	str	r3, [fp, #-16]
   6132c:	ldr	r3, [fp, #-16]
   61330:	str	r3, [fp, #-12]
   61334:	ldr	r3, [fp, #-12]
   61338:	ldr	r2, [fp, #-16]
   6133c:	mov	r1, r3
   61340:	ldr	r0, [fp, #-8]
   61344:	bl	447a0 <__assert_fail@plt+0x320b4>
   61348:	mov	r3, r0
   6134c:	mov	r0, r3
   61350:	sub	sp, fp, #4
   61354:	ldr	fp, [sp]
   61358:	add	sp, sp, #4
   6135c:	pop	{pc}		; (ldr pc, [sp], #4)
   61360:	str	fp, [sp, #-8]!
   61364:	str	lr, [sp, #4]
   61368:	add	fp, sp, #4
   6136c:	sub	sp, sp, #8
   61370:	mov	r0, #14
   61374:	bl	12560 <nl_langinfo@plt>
   61378:	str	r0, [fp, #-8]
   6137c:	ldr	r3, [fp, #-8]
   61380:	cmp	r3, #0
   61384:	bne	61394 <__assert_fail@plt+0x4eca8>
   61388:	movw	r3, #48208	; 0xbc50
   6138c:	movt	r3, #6
   61390:	str	r3, [fp, #-8]
   61394:	ldr	r3, [fp, #-8]
   61398:	ldrb	r3, [r3]
   6139c:	cmp	r3, #0
   613a0:	bne	613b0 <__assert_fail@plt+0x4ecc4>
   613a4:	movw	r3, #48212	; 0xbc54
   613a8:	movt	r3, #6
   613ac:	str	r3, [fp, #-8]
   613b0:	ldr	r3, [fp, #-8]
   613b4:	mov	r0, r3
   613b8:	sub	sp, fp, #4
   613bc:	ldr	fp, [sp]
   613c0:	add	sp, sp, #4
   613c4:	pop	{pc}		; (ldr pc, [sp], #4)
   613c8:	str	fp, [sp, #-8]!
   613cc:	str	lr, [sp, #4]
   613d0:	add	fp, sp, #4
   613d4:	sub	sp, sp, #48	; 0x30
   613d8:	str	r0, [fp, #-48]	; 0xffffffd0
   613dc:	mov	r3, #15
   613e0:	str	r3, [fp, #-8]
   613e4:	ldr	r3, [fp, #-8]
   613e8:	add	r3, r3, #1
   613ec:	str	r3, [fp, #-12]
   613f0:	mov	r0, #0
   613f4:	ldr	r2, [fp, #-12]
   613f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   613fc:	add	r3, r2, r3
   61400:	add	r1, r3, #-2147483648	; 0x80000000
   61404:	ldr	r2, [fp, #-48]	; 0xffffffd0
   61408:	cmp	r1, r2
   6140c:	bcs	61414 <__assert_fail@plt+0x4ed28>
   61410:	mov	r0, #1
   61414:	str	r3, [fp, #-36]	; 0xffffffdc
   61418:	mov	r3, r0
   6141c:	and	r3, r3, #1
   61420:	uxtb	r3, r3
   61424:	eor	r3, r3, #1
   61428:	uxtb	r3, r3
   6142c:	cmp	r3, #0
   61430:	beq	614dc <__assert_fail@plt+0x4edf0>
   61434:	mov	r3, #0
   61438:	and	r3, r3, #1
   6143c:	uxtb	r3, r3
   61440:	eor	r3, r3, #1
   61444:	uxtb	r3, r3
   61448:	cmp	r3, #0
   6144c:	beq	614dc <__assert_fail@plt+0x4edf0>
   61450:	ldr	r3, [fp, #-36]	; 0xffffffdc
   61454:	mov	r0, r3
   61458:	bl	12308 <malloc@plt>
   6145c:	mov	r3, r0
   61460:	str	r3, [fp, #-16]
   61464:	ldr	r3, [fp, #-16]
   61468:	cmp	r3, #0
   6146c:	beq	614dc <__assert_fail@plt+0x4edf0>
   61470:	ldr	r3, [fp, #-16]
   61474:	str	r3, [fp, #-20]	; 0xffffffec
   61478:	ldr	r3, [fp, #-20]	; 0xffffffec
   6147c:	mov	r2, #8
   61480:	adds	r3, r3, r2
   61484:	str	r3, [fp, #-40]	; 0xffffffd8
   61488:	ldr	r3, [fp, #-8]
   6148c:	mvn	r2, r3
   61490:	ldr	r3, [fp, #-40]	; 0xffffffd8
   61494:	and	r2, r2, r3
   61498:	ldr	r3, [fp, #-20]	; 0xffffffec
   6149c:	sub	r3, r2, r3
   614a0:	add	r3, r3, #8
   614a4:	str	r3, [fp, #-24]	; 0xffffffe8
   614a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   614ac:	ldr	r2, [fp, #-16]
   614b0:	add	r3, r2, r3
   614b4:	str	r3, [fp, #-28]	; 0xffffffe4
   614b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   614bc:	str	r3, [fp, #-32]	; 0xffffffe0
   614c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   614c4:	sub	r3, r3, #1
   614c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   614cc:	uxtb	r2, r2
   614d0:	strb	r2, [r3]
   614d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   614d8:	b	614e0 <__assert_fail@plt+0x4edf4>
   614dc:	mov	r3, #0
   614e0:	mov	r0, r3
   614e4:	sub	sp, fp, #4
   614e8:	ldr	fp, [sp]
   614ec:	add	sp, sp, #4
   614f0:	pop	{pc}		; (ldr pc, [sp], #4)
   614f4:	str	fp, [sp, #-8]!
   614f8:	str	lr, [sp, #4]
   614fc:	add	fp, sp, #4
   61500:	sub	sp, sp, #16
   61504:	str	r0, [fp, #-16]
   61508:	ldr	r3, [fp, #-16]
   6150c:	and	r3, r3, #7
   61510:	cmp	r3, #0
   61514:	beq	6151c <__assert_fail@plt+0x4ee30>
   61518:	bl	12698 <abort@plt>
   6151c:	ldr	r3, [fp, #-16]
   61520:	and	r3, r3, #8
   61524:	cmp	r3, #0
   61528:	beq	61550 <__assert_fail@plt+0x4ee64>
   6152c:	ldr	r3, [fp, #-16]
   61530:	sub	r3, r3, #1
   61534:	ldrb	r3, [r3]
   61538:	rsb	r3, r3, #0
   6153c:	ldr	r2, [fp, #-16]
   61540:	add	r3, r2, r3
   61544:	str	r3, [fp, #-8]
   61548:	ldr	r0, [fp, #-8]
   6154c:	bl	3fe0c <__assert_fail@plt+0x2d720>
   61550:	nop	{0}
   61554:	sub	sp, fp, #4
   61558:	ldr	fp, [sp]
   6155c:	add	sp, sp, #4
   61560:	pop	{pc}		; (ldr pc, [sp], #4)
   61564:	str	fp, [sp, #-8]!
   61568:	str	lr, [sp, #4]
   6156c:	add	fp, sp, #4
   61570:	sub	sp, sp, #16
   61574:	str	r0, [fp, #-16]
   61578:	ldr	r0, [fp, #-16]
   6157c:	bl	12074 <wcwidth@plt>
   61580:	str	r0, [fp, #-8]
   61584:	ldr	r3, [fp, #-8]
   61588:	cmp	r3, #0
   6158c:	bge	615b0 <__assert_fail@plt+0x4eec4>
   61590:	ldr	r0, [fp, #-16]
   61594:	bl	121d0 <iswcntrl@plt>
   61598:	mov	r3, r0
   6159c:	cmp	r3, #0
   615a0:	moveq	r3, #1
   615a4:	movne	r3, #0
   615a8:	uxtb	r3, r3
   615ac:	b	615b4 <__assert_fail@plt+0x4eec8>
   615b0:	ldr	r3, [fp, #-8]
   615b4:	mov	r0, r3
   615b8:	sub	sp, fp, #4
   615bc:	ldr	fp, [sp]
   615c0:	add	sp, sp, #4
   615c4:	pop	{pc}		; (ldr pc, [sp], #4)
   615c8:	str	fp, [sp, #-8]!
   615cc:	str	lr, [sp, #4]
   615d0:	add	fp, sp, #4
   615d4:	sub	sp, sp, #8
   615d8:	str	r0, [fp, #-8]
   615dc:	str	r1, [fp, #-12]
   615e0:	ldr	r3, [fp, #-12]
   615e4:	ldr	r2, [r3]
   615e8:	ldr	r3, [fp, #-12]
   615ec:	add	r3, r3, #16
   615f0:	cmp	r2, r3
   615f4:	bne	6162c <__assert_fail@plt+0x4ef40>
   615f8:	ldr	r3, [fp, #-8]
   615fc:	add	r0, r3, #16
   61600:	ldr	r3, [fp, #-12]
   61604:	add	r1, r3, #16
   61608:	ldr	r3, [fp, #-12]
   6160c:	ldr	r3, [r3, #4]
   61610:	mov	r2, r3
   61614:	bl	120f8 <memcpy@plt>
   61618:	ldr	r3, [fp, #-8]
   6161c:	add	r2, r3, #16
   61620:	ldr	r3, [fp, #-8]
   61624:	str	r2, [r3]
   61628:	b	6163c <__assert_fail@plt+0x4ef50>
   6162c:	ldr	r3, [fp, #-12]
   61630:	ldr	r2, [r3]
   61634:	ldr	r3, [fp, #-8]
   61638:	str	r2, [r3]
   6163c:	ldr	r3, [fp, #-12]
   61640:	ldr	r2, [r3, #4]
   61644:	ldr	r3, [fp, #-8]
   61648:	str	r2, [r3, #4]
   6164c:	ldr	r3, [fp, #-12]
   61650:	ldrb	r2, [r3, #8]
   61654:	ldr	r3, [fp, #-8]
   61658:	strb	r2, [r3, #8]
   6165c:	ldr	r3, [fp, #-8]
   61660:	ldrb	r3, [r3, #8]
   61664:	cmp	r3, #0
   61668:	beq	6167c <__assert_fail@plt+0x4ef90>
   6166c:	ldr	r3, [fp, #-12]
   61670:	ldr	r2, [r3, #12]
   61674:	ldr	r3, [fp, #-8]
   61678:	str	r2, [r3, #12]
   6167c:	nop	{0}
   61680:	sub	sp, fp, #4
   61684:	ldr	fp, [sp]
   61688:	add	sp, sp, #4
   6168c:	pop	{pc}		; (ldr pc, [sp], #4)
   61690:	push	{fp}		; (str fp, [sp, #-4]!)
   61694:	add	fp, sp, #0
   61698:	sub	sp, sp, #12
   6169c:	mov	r3, r0
   616a0:	strb	r3, [fp, #-5]
   616a4:	ldrb	r3, [fp, #-5]
   616a8:	lsr	r3, r3, #5
   616ac:	uxtb	r3, r3
   616b0:	mov	r2, r3
   616b4:	movw	r3, #48220	; 0xbc5c
   616b8:	movt	r3, #6
   616bc:	ldr	r2, [r3, r2, lsl #2]
   616c0:	ldrb	r3, [fp, #-5]
   616c4:	and	r3, r3, #31
   616c8:	lsr	r3, r2, r3
   616cc:	and	r3, r3, #1
   616d0:	cmp	r3, #0
   616d4:	movne	r3, #1
   616d8:	moveq	r3, #0
   616dc:	uxtb	r3, r3
   616e0:	mov	r0, r3
   616e4:	add	sp, fp, #0
   616e8:	pop	{fp}		; (ldr fp, [sp], #4)
   616ec:	bx	lr
   616f0:	str	fp, [sp, #-8]!
   616f4:	str	lr, [sp, #4]
   616f8:	add	fp, sp, #4
   616fc:	sub	sp, sp, #72	; 0x48
   61700:	str	r0, [fp, #-72]	; 0xffffffb8
   61704:	bl	12254 <__ctype_get_mb_cur_max@plt>
   61708:	mov	r3, r0
   6170c:	cmp	r3, #1
   61710:	bls	617bc <__assert_fail@plt+0x4f0d0>
   61714:	mov	r3, #0
   61718:	str	r3, [fp, #-8]
   6171c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   61720:	str	r3, [fp, #-48]	; 0xffffffd0
   61724:	mov	r3, #0
   61728:	strb	r3, [fp, #-64]	; 0xffffffc0
   6172c:	sub	r3, fp, #64	; 0x40
   61730:	add	r3, r3, #4
   61734:	mov	r2, #8
   61738:	mov	r1, #0
   6173c:	mov	r0, r3
   61740:	bl	12434 <memset@plt>
   61744:	mov	r3, #0
   61748:	strb	r3, [fp, #-52]	; 0xffffffcc
   6174c:	b	61774 <__assert_fail@plt+0x4f088>
   61750:	ldr	r3, [fp, #-8]
   61754:	add	r3, r3, #1
   61758:	str	r3, [fp, #-8]
   6175c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   61760:	ldr	r3, [fp, #-44]	; 0xffffffd4
   61764:	add	r3, r2, r3
   61768:	str	r3, [fp, #-48]	; 0xffffffd0
   6176c:	mov	r3, #0
   61770:	strb	r3, [fp, #-52]	; 0xffffffcc
   61774:	sub	r3, fp, #64	; 0x40
   61778:	mov	r0, r3
   6177c:	bl	30d1c <__assert_fail@plt+0x1e630>
   61780:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   61784:	eor	r3, r3, #1
   61788:	uxtb	r3, r3
   6178c:	cmp	r3, #0
   61790:	bne	617a0 <__assert_fail@plt+0x4f0b4>
   61794:	ldr	r3, [fp, #-36]	; 0xffffffdc
   61798:	cmp	r3, #0
   6179c:	beq	617a8 <__assert_fail@plt+0x4f0bc>
   617a0:	mov	r3, #1
   617a4:	b	617ac <__assert_fail@plt+0x4f0c0>
   617a8:	mov	r3, #0
   617ac:	cmp	r3, #0
   617b0:	bne	61750 <__assert_fail@plt+0x4f064>
   617b4:	ldr	r3, [fp, #-8]
   617b8:	b	617c8 <__assert_fail@plt+0x4f0dc>
   617bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   617c0:	bl	123bc <strlen@plt>
   617c4:	mov	r3, r0
   617c8:	mov	r0, r3
   617cc:	sub	sp, fp, #4
   617d0:	ldr	fp, [sp]
   617d4:	add	sp, sp, #4
   617d8:	pop	{pc}		; (ldr pc, [sp], #4)
   617dc:	str	fp, [sp, #-8]!
   617e0:	str	lr, [sp, #4]
   617e4:	add	fp, sp, #4
   617e8:	sub	sp, sp, #16
   617ec:	str	r0, [fp, #-8]
   617f0:	str	r1, [fp, #-12]
   617f4:	str	r2, [fp, #-16]
   617f8:	b	6182c <__assert_fail@plt+0x4f140>
   617fc:	ldr	r2, [fp, #-12]
   61800:	ldr	r3, [fp, #-16]
   61804:	add	r3, r2, r3
   61808:	ldrb	r3, [r3]
   6180c:	mov	r0, r3
   61810:	bl	12110 <tolower@plt>
   61814:	mov	r1, r0
   61818:	ldr	r2, [fp, #-8]
   6181c:	ldr	r3, [fp, #-16]
   61820:	add	r3, r2, r3
   61824:	uxtb	r2, r1
   61828:	strb	r2, [r3]
   6182c:	ldr	r3, [fp, #-16]
   61830:	sub	r2, r3, #1
   61834:	str	r2, [fp, #-16]
   61838:	cmp	r3, #0
   6183c:	bne	617fc <__assert_fail@plt+0x4f110>
   61840:	ldr	r3, [fp, #-8]
   61844:	mov	r0, r3
   61848:	sub	sp, fp, #4
   6184c:	ldr	fp, [sp]
   61850:	add	sp, sp, #4
   61854:	pop	{pc}		; (ldr pc, [sp], #4)
   61858:	str	fp, [sp, #-8]!
   6185c:	str	lr, [sp, #4]
   61860:	add	fp, sp, #4
   61864:	sub	sp, sp, #16
   61868:	str	r0, [fp, #-8]
   6186c:	str	r1, [fp, #-12]
   61870:	str	r2, [fp, #-16]
   61874:	b	618a8 <__assert_fail@plt+0x4f1bc>
   61878:	ldr	r2, [fp, #-12]
   6187c:	ldr	r3, [fp, #-16]
   61880:	add	r3, r2, r3
   61884:	ldrb	r3, [r3]
   61888:	mov	r0, r3
   6188c:	bl	1253c <toupper@plt>
   61890:	mov	r1, r0
   61894:	ldr	r2, [fp, #-8]
   61898:	ldr	r3, [fp, #-16]
   6189c:	add	r3, r2, r3
   618a0:	uxtb	r2, r1
   618a4:	strb	r2, [r3]
   618a8:	ldr	r3, [fp, #-16]
   618ac:	sub	r2, r3, #1
   618b0:	str	r2, [fp, #-16]
   618b4:	cmp	r3, #0
   618b8:	bne	61878 <__assert_fail@plt+0x4f18c>
   618bc:	ldr	r3, [fp, #-8]
   618c0:	mov	r0, r3
   618c4:	sub	sp, fp, #4
   618c8:	ldr	fp, [sp]
   618cc:	add	sp, sp, #4
   618d0:	pop	{pc}		; (ldr pc, [sp], #4)
   618d4:	push	{fp}		; (str fp, [sp, #-4]!)
   618d8:	add	fp, sp, #0
   618dc:	sub	sp, sp, #20
   618e0:	str	r0, [fp, #-16]
   618e4:	str	r1, [fp, #-20]	; 0xffffffec
   618e8:	movw	r3, #378	; 0x17a
   618ec:	str	r3, [fp, #-8]
   618f0:	ldr	r2, [fp, #-16]
   618f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   618f8:	sub	r3, r2, r3
   618fc:	add	r2, r3, #4
   61900:	ldr	r3, [fp, #-8]
   61904:	add	r3, r2, r3
   61908:	movw	r2, #9363	; 0x2493
   6190c:	movt	r2, #37449	; 0x9249
   61910:	smull	r1, r2, r2, r3
   61914:	add	r2, r2, r3
   61918:	asr	r1, r2, #2
   6191c:	asr	r2, r3, #31
   61920:	sub	r1, r1, r2
   61924:	mov	r2, r1
   61928:	lsl	r2, r2, #3
   6192c:	sub	r2, r2, r1
   61930:	sub	r1, r3, r2
   61934:	ldr	r3, [fp, #-16]
   61938:	sub	r3, r3, r1
   6193c:	add	r3, r3, #3
   61940:	mov	r0, r3
   61944:	add	sp, fp, #0
   61948:	pop	{fp}		; (ldr fp, [sp], #4)
   6194c:	bx	lr
   61950:	str	fp, [sp, #-8]!
   61954:	str	lr, [sp, #4]
   61958:	add	fp, sp, #4
   6195c:	sub	sp, sp, #48	; 0x30
   61960:	str	r0, [fp, #-16]
   61964:	str	r1, [fp, #-20]	; 0xffffffec
   61968:	str	r2, [fp, #-24]	; 0xffffffe8
   6196c:	str	r3, [fp, #-28]	; 0xffffffe4
   61970:	mov	r3, #0
   61974:	strb	r3, [fp, #-5]
   61978:	ldr	r3, [fp, #8]
   6197c:	str	r3, [sp, #20]
   61980:	ldr	r3, [fp, #4]
   61984:	str	r3, [sp, #16]
   61988:	sub	r3, fp, #5
   6198c:	str	r3, [sp, #12]
   61990:	mvn	r3, #0
   61994:	str	r3, [sp, #8]
   61998:	mov	r3, #0
   6199c:	str	r3, [sp, #4]
   619a0:	mov	r3, #0
   619a4:	str	r3, [sp]
   619a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   619ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   619b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   619b4:	ldr	r0, [fp, #-16]
   619b8:	bl	619d4 <__assert_fail@plt+0x4f2e8>
   619bc:	mov	r3, r0
   619c0:	mov	r0, r3
   619c4:	sub	sp, fp, #4
   619c8:	ldr	fp, [sp]
   619cc:	add	sp, sp, #4
   619d0:	pop	{pc}		; (ldr pc, [sp], #4)
   619d4:	str	fp, [sp, #-8]!
   619d8:	str	lr, [sp, #4]
   619dc:	add	fp, sp, #4
   619e0:	sub	sp, sp, #1456	; 0x5b0
   619e4:	sub	sp, sp, #8
   619e8:	str	r0, [fp, #-1432]	; 0xfffffa68
   619ec:	str	r1, [fp, #-1436]	; 0xfffffa64
   619f0:	str	r2, [fp, #-1440]	; 0xfffffa60
   619f4:	str	r3, [fp, #-1444]	; 0xfffffa5c
   619f8:	bl	12404 <__errno_location@plt>
   619fc:	mov	r3, r0
   61a00:	ldr	r3, [r3]
   61a04:	str	r3, [fp, #-116]	; 0xffffff8c
   61a08:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61a0c:	ldr	r3, [r3, #8]
   61a10:	str	r3, [fp, #-8]
   61a14:	mov	r3, #0
   61a18:	str	r3, [fp, #-16]
   61a1c:	ldr	r3, [fp, #-1432]	; 0xfffffa68
   61a20:	str	r3, [fp, #-20]	; 0xffffffec
   61a24:	mov	r3, #0
   61a28:	str	r3, [fp, #-12]
   61a2c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   61a30:	ldr	r3, [r3, #40]	; 0x28
   61a34:	str	r3, [fp, #-12]
   61a38:	ldr	r3, [fp, #-12]
   61a3c:	cmp	r3, #0
   61a40:	bne	61a50 <__assert_fail@plt+0x4f364>
   61a44:	movw	r3, #48252	; 0xbc7c
   61a48:	movt	r3, #6
   61a4c:	str	r3, [fp, #-12]
   61a50:	ldr	r3, [fp, #-8]
   61a54:	cmp	r3, #12
   61a58:	ble	61a6c <__assert_fail@plt+0x4f380>
   61a5c:	ldr	r3, [fp, #-8]
   61a60:	sub	r3, r3, #12
   61a64:	str	r3, [fp, #-8]
   61a68:	b	61a80 <__assert_fail@plt+0x4f394>
   61a6c:	ldr	r3, [fp, #-8]
   61a70:	cmp	r3, #0
   61a74:	bne	61a80 <__assert_fail@plt+0x4f394>
   61a78:	mov	r3, #12
   61a7c:	str	r3, [fp, #-8]
   61a80:	ldr	r3, [fp, #-1440]	; 0xfffffa60
   61a84:	str	r3, [fp, #-24]	; 0xffffffe8
   61a88:	b	64318 <__assert_fail@plt+0x51c2c>
   61a8c:	mov	r3, #0
   61a90:	str	r3, [fp, #-28]	; 0xffffffe4
   61a94:	mov	r3, #0
   61a98:	str	r3, [fp, #-36]	; 0xffffffdc
   61a9c:	mov	r3, #0
   61aa0:	strb	r3, [fp, #-61]	; 0xffffffc3
   61aa4:	ldrb	r3, [fp, #4]
   61aa8:	strb	r3, [fp, #-62]	; 0xffffffc2
   61aac:	mov	r3, #0
   61ab0:	strb	r3, [fp, #-69]	; 0xffffffbb
   61ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61ab8:	ldrb	r3, [r3]
   61abc:	cmp	r3, #37	; 0x25
   61ac0:	beq	61bf8 <__assert_fail@plt+0x4f50c>
   61ac4:	mov	r3, #1
   61ac8:	str	r3, [fp, #-120]	; 0xffffff88
   61acc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61ad0:	cmp	r3, #45	; 0x2d
   61ad4:	beq	61aec <__assert_fail@plt+0x4f400>
   61ad8:	ldr	r3, [fp, #12]
   61adc:	cmp	r3, #0
   61ae0:	blt	61aec <__assert_fail@plt+0x4f400>
   61ae4:	ldr	r3, [fp, #12]
   61ae8:	b	61af0 <__assert_fail@plt+0x4f404>
   61aec:	mov	r3, #0
   61af0:	str	r3, [fp, #-124]	; 0xffffff84
   61af4:	ldr	r2, [fp, #-120]	; 0xffffff88
   61af8:	ldr	r3, [fp, #-124]	; 0xffffff84
   61afc:	cmp	r2, r3
   61b00:	movcs	r3, r2
   61b04:	movcc	r3, r3
   61b08:	str	r3, [fp, #-128]	; 0xffffff80
   61b0c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   61b10:	ldr	r3, [fp, #-16]
   61b14:	sub	r3, r2, r3
   61b18:	ldr	r2, [fp, #-128]	; 0xffffff80
   61b1c:	cmp	r2, r3
   61b20:	bcc	61b3c <__assert_fail@plt+0x4f450>
   61b24:	bl	12404 <__errno_location@plt>
   61b28:	mov	r2, r0
   61b2c:	mov	r3, #34	; 0x22
   61b30:	str	r3, [r2]
   61b34:	mov	r3, #0
   61b38:	b	64360 <__assert_fail@plt+0x51c74>
   61b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   61b40:	cmp	r3, #0
   61b44:	beq	61be4 <__assert_fail@plt+0x4f4f8>
   61b48:	ldr	r2, [fp, #-120]	; 0xffffff88
   61b4c:	ldr	r3, [fp, #-124]	; 0xffffff84
   61b50:	cmp	r2, r3
   61b54:	bcs	61bc4 <__assert_fail@plt+0x4f4d8>
   61b58:	ldr	r2, [fp, #-124]	; 0xffffff84
   61b5c:	ldr	r3, [fp, #-120]	; 0xffffff88
   61b60:	sub	r3, r2, r3
   61b64:	str	r3, [fp, #-132]	; 0xffffff7c
   61b68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61b6c:	cmp	r3, #48	; 0x30
   61b70:	beq	61b80 <__assert_fail@plt+0x4f494>
   61b74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   61b78:	cmp	r3, #43	; 0x2b
   61b7c:	bne	61ba4 <__assert_fail@plt+0x4f4b8>
   61b80:	ldr	r2, [fp, #-132]	; 0xffffff7c
   61b84:	mov	r1, #48	; 0x30
   61b88:	ldr	r0, [fp, #-20]	; 0xffffffec
   61b8c:	bl	12434 <memset@plt>
   61b90:	ldr	r2, [fp, #-20]	; 0xffffffec
   61b94:	ldr	r3, [fp, #-132]	; 0xffffff7c
   61b98:	add	r3, r2, r3
   61b9c:	str	r3, [fp, #-20]	; 0xffffffec
   61ba0:	b	61bc4 <__assert_fail@plt+0x4f4d8>
   61ba4:	ldr	r2, [fp, #-132]	; 0xffffff7c
   61ba8:	mov	r1, #32
   61bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   61bb0:	bl	12434 <memset@plt>
   61bb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   61bb8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   61bbc:	add	r3, r2, r3
   61bc0:	str	r3, [fp, #-20]	; 0xffffffec
   61bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61bc8:	ldrb	r2, [r3]
   61bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   61bd0:	strb	r2, [r3]
   61bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   61bd8:	ldr	r3, [fp, #-120]	; 0xffffff88
   61bdc:	add	r3, r2, r3
   61be0:	str	r3, [fp, #-20]	; 0xffffffec
   61be4:	ldr	r2, [fp, #-16]
   61be8:	ldr	r3, [fp, #-128]	; 0xffffff80
   61bec:	add	r3, r2, r3
   61bf0:	str	r3, [fp, #-16]
   61bf4:	b	64304 <__assert_fail@plt+0x51c18>
   61bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61bfc:	str	r3, [fp, #-136]	; 0xffffff78
   61c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61c04:	add	r3, r3, #1
   61c08:	str	r3, [fp, #-24]	; 0xffffffe8
   61c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61c10:	ldrb	r3, [r3]
   61c14:	sub	r3, r3, #35	; 0x23
   61c18:	cmp	r3, #60	; 0x3c
   61c1c:	ldrls	pc, [pc, r3, lsl #2]
   61c20:	b	61d40 <__assert_fail@plt+0x4f654>
   61c24:	andeq	r1, r6, r4, lsr sp
   61c28:	andeq	r1, r6, r0, asr #26
   61c2c:	andeq	r1, r6, r0, asr #26
   61c30:	andeq	r1, r6, r0, asr #26
   61c34:	andeq	r1, r6, r0, asr #26
   61c38:	andeq	r1, r6, r0, asr #26
   61c3c:	andeq	r1, r6, r0, asr #26
   61c40:	andeq	r1, r6, r0, asr #26
   61c44:	andeq	r1, r6, r8, lsl sp
   61c48:	andeq	r1, r6, r0, asr #26
   61c4c:	andeq	r1, r6, r8, lsl sp
   61c50:	andeq	r1, r6, r0, asr #26
   61c54:	andeq	r1, r6, r0, asr #26
   61c58:	andeq	r1, r6, r8, lsl sp
   61c5c:	andeq	r1, r6, r0, asr #26
   61c60:	andeq	r1, r6, r0, asr #26
   61c64:	andeq	r1, r6, r0, asr #26
   61c68:	andeq	r1, r6, r0, asr #26
   61c6c:	andeq	r1, r6, r0, asr #26
   61c70:	andeq	r1, r6, r0, asr #26
   61c74:	andeq	r1, r6, r0, asr #26
   61c78:	andeq	r1, r6, r0, asr #26
   61c7c:	andeq	r1, r6, r0, asr #26
   61c80:	andeq	r1, r6, r0, asr #26
   61c84:	andeq	r1, r6, r0, asr #26
   61c88:	andeq	r1, r6, r0, asr #26
   61c8c:	andeq	r1, r6, r0, asr #26
   61c90:	andeq	r1, r6, r0, asr #26
   61c94:	andeq	r1, r6, r0, asr #26
   61c98:	andeq	r1, r6, r0, asr #26
   61c9c:	andeq	r1, r6, r0, asr #26
   61ca0:	andeq	r1, r6, r0, asr #26
   61ca4:	andeq	r1, r6, r0, asr #26
   61ca8:	andeq	r1, r6, r0, asr #26
   61cac:	andeq	r1, r6, r0, asr #26
   61cb0:	andeq	r1, r6, r0, asr #26
   61cb4:	andeq	r1, r6, r0, asr #26
   61cb8:	andeq	r1, r6, r0, asr #26
   61cbc:	andeq	r1, r6, r0, asr #26
   61cc0:	andeq	r1, r6, r0, asr #26
   61cc4:	andeq	r1, r6, r0, asr #26
   61cc8:	andeq	r1, r6, r0, asr #26
   61ccc:	andeq	r1, r6, r0, asr #26
   61cd0:	andeq	r1, r6, r0, asr #26
   61cd4:	andeq	r1, r6, r0, asr #26
   61cd8:	andeq	r1, r6, r0, asr #26
   61cdc:	andeq	r1, r6, r0, asr #26
   61ce0:	andeq	r1, r6, r0, asr #26
   61ce4:	andeq	r1, r6, r0, asr #26
   61ce8:	andeq	r1, r6, r0, asr #26
   61cec:	andeq	r1, r6, r0, asr #26
   61cf0:	andeq	r1, r6, r0, asr #26
   61cf4:	andeq	r1, r6, r0, asr #26
   61cf8:	andeq	r1, r6, r0, asr #26
   61cfc:	andeq	r1, r6, r0, asr #26
   61d00:	andeq	r1, r6, r0, asr #26
   61d04:	andeq	r1, r6, r0, asr #26
   61d08:	andeq	r1, r6, r0, asr #26
   61d0c:	andeq	r1, r6, r0, asr #26
   61d10:	andeq	r1, r6, r8, lsr #26
   61d14:	andeq	r1, r6, r8, lsl sp
   61d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61d1c:	ldrb	r3, [r3]
   61d20:	str	r3, [fp, #-28]	; 0xffffffe4
   61d24:	b	61d60 <__assert_fail@plt+0x4f674>
   61d28:	mov	r3, #1
   61d2c:	strb	r3, [fp, #-62]	; 0xffffffc2
   61d30:	b	61d60 <__assert_fail@plt+0x4f674>
   61d34:	mov	r3, #1
   61d38:	strb	r3, [fp, #-69]	; 0xffffffbb
   61d3c:	b	61d60 <__assert_fail@plt+0x4f674>
   61d40:	nop	{0}
   61d44:	nop	{0}
   61d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61d4c:	ldrb	r3, [r3]
   61d50:	sub	r3, r3, #48	; 0x30
   61d54:	cmp	r3, #9
   61d58:	bhi	61e18 <__assert_fail@plt+0x4f72c>
   61d5c:	b	61d64 <__assert_fail@plt+0x4f678>
   61d60:	b	61c00 <__assert_fail@plt+0x4f514>
   61d64:	mov	r3, #0
   61d68:	str	r3, [fp, #12]
   61d6c:	ldr	r3, [fp, #12]
   61d70:	mov	lr, #0
   61d74:	mov	r2, #10
   61d78:	smull	r2, r3, r3, r2
   61d7c:	mov	r0, #0
   61d80:	mov	r1, #0
   61d84:	mov	r0, r3
   61d88:	asr	r1, r3, #31
   61d8c:	asr	ip, r2, #31
   61d90:	cmp	ip, r0
   61d94:	beq	61d9c <__assert_fail@plt+0x4f6b0>
   61d98:	mov	lr, #1
   61d9c:	mov	r3, r2
   61da0:	str	r3, [fp, #12]
   61da4:	mov	r3, lr
   61da8:	and	r3, r3, #1
   61dac:	uxtb	r3, r3
   61db0:	cmp	r3, #0
   61db4:	bne	61df0 <__assert_fail@plt+0x4f704>
   61db8:	ldr	r2, [fp, #12]
   61dbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61dc0:	ldrb	r3, [r3]
   61dc4:	sub	r3, r3, #48	; 0x30
   61dc8:	mov	r1, #0
   61dcc:	adds	r3, r2, r3
   61dd0:	bvc	61dd8 <__assert_fail@plt+0x4f6ec>
   61dd4:	mov	r1, #1
   61dd8:	str	r3, [fp, #12]
   61ddc:	mov	r3, r1
   61de0:	and	r3, r3, #1
   61de4:	uxtb	r3, r3
   61de8:	cmp	r3, #0
   61dec:	beq	61df8 <__assert_fail@plt+0x4f70c>
   61df0:	mvn	r3, #-2147483648	; 0x80000000
   61df4:	str	r3, [fp, #12]
   61df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61dfc:	add	r3, r3, #1
   61e00:	str	r3, [fp, #-24]	; 0xffffffe8
   61e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61e08:	ldrb	r3, [r3]
   61e0c:	sub	r3, r3, #48	; 0x30
   61e10:	cmp	r3, #9
   61e14:	bls	61d6c <__assert_fail@plt+0x4f680>
   61e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61e1c:	ldrb	r3, [r3]
   61e20:	cmp	r3, #69	; 0x45
   61e24:	beq	61e30 <__assert_fail@plt+0x4f744>
   61e28:	cmp	r3, #79	; 0x4f
   61e2c:	bne	61e48 <__assert_fail@plt+0x4f75c>
   61e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61e34:	add	r2, r3, #1
   61e38:	str	r2, [fp, #-24]	; 0xffffffe8
   61e3c:	ldrb	r3, [r3]
   61e40:	str	r3, [fp, #-32]	; 0xffffffe0
   61e44:	b	61e54 <__assert_fail@plt+0x4f768>
   61e48:	mov	r3, #0
   61e4c:	str	r3, [fp, #-32]	; 0xffffffe0
   61e50:	nop	{0}
   61e54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   61e58:	ldrb	r3, [r3]
   61e5c:	str	r3, [fp, #-76]	; 0xffffffb4
   61e60:	ldr	r3, [fp, #-76]	; 0xffffffb4
   61e64:	cmp	r3, #122	; 0x7a
   61e68:	ldrls	pc, [pc, r3, lsl #2]
   61e6c:	b	64174 <__assert_fail@plt+0x51a88>
   61e70:	strheq	r4, [r6], -r0
   61e74:	andeq	r4, r6, r4, ror r1
   61e78:	andeq	r4, r6, r4, ror r1
   61e7c:	andeq	r4, r6, r4, ror r1
   61e80:	andeq	r4, r6, r4, ror r1
   61e84:	andeq	r4, r6, r4, ror r1
   61e88:	andeq	r4, r6, r4, ror r1
   61e8c:	andeq	r4, r6, r4, ror r1
   61e90:	andeq	r4, r6, r4, ror r1
   61e94:	andeq	r4, r6, r4, ror r1
   61e98:	andeq	r4, r6, r4, ror r1
   61e9c:	andeq	r4, r6, r4, ror r1
   61ea0:	andeq	r4, r6, r4, ror r1
   61ea4:	andeq	r4, r6, r4, ror r1
   61ea8:	andeq	r4, r6, r4, ror r1
   61eac:	andeq	r4, r6, r4, ror r1
   61eb0:	andeq	r4, r6, r4, ror r1
   61eb4:	andeq	r4, r6, r4, ror r1
   61eb8:	andeq	r4, r6, r4, ror r1
   61ebc:	andeq	r4, r6, r4, ror r1
   61ec0:	andeq	r4, r6, r4, ror r1
   61ec4:	andeq	r4, r6, r4, ror r1
   61ec8:	andeq	r4, r6, r4, ror r1
   61ecc:	andeq	r4, r6, r4, ror r1
   61ed0:	andeq	r4, r6, r4, ror r1
   61ed4:	andeq	r4, r6, r4, ror r1
   61ed8:	andeq	r4, r6, r4, ror r1
   61edc:	andeq	r4, r6, r4, ror r1
   61ee0:	andeq	r4, r6, r4, ror r1
   61ee4:	andeq	r4, r6, r4, ror r1
   61ee8:	andeq	r4, r6, r4, ror r1
   61eec:	andeq	r4, r6, r4, ror r1
   61ef0:	andeq	r4, r6, r4, ror r1
   61ef4:	andeq	r4, r6, r4, ror r1
   61ef8:	andeq	r4, r6, r4, ror r1
   61efc:	andeq	r4, r6, r4, ror r1
   61f00:	andeq	r4, r6, r4, ror r1
   61f04:	andeq	r2, r6, ip, asr r0
   61f08:	andeq	r4, r6, r4, ror r1
   61f0c:	andeq	r4, r6, r4, ror r1
   61f10:	andeq	r4, r6, r4, ror r1
   61f14:	andeq	r4, r6, r4, ror r1
   61f18:	andeq	r4, r6, r4, ror r1
   61f1c:	andeq	r4, r6, r4, ror r1
   61f20:	andeq	r4, r6, r4, ror r1
   61f24:	andeq	r4, r6, r4, ror r1
   61f28:	andeq	r4, r6, r4, ror r1
   61f2c:	andeq	r4, r6, r4, ror r1
   61f30:	andeq	r4, r6, r4, ror r1
   61f34:	andeq	r4, r6, r4, ror r1
   61f38:	andeq	r4, r6, r4, ror r1
   61f3c:	andeq	r4, r6, r4, ror r1
   61f40:	andeq	r4, r6, r4, ror r1
   61f44:	andeq	r4, r6, r4, ror r1
   61f48:	andeq	r4, r6, r4, ror r1
   61f4c:	andeq	r4, r6, r4, ror r1
   61f50:	andeq	r4, r6, r4, ror r1
   61f54:	andeq	r4, r6, r4, ror r1
   61f58:	andeq	r3, r6, r8, asr #28
   61f5c:	andeq	r4, r6, r4, ror r1
   61f60:	andeq	r4, r6, r4, ror r1
   61f64:	andeq	r4, r6, r4, ror r1
   61f68:	andeq	r4, r6, r4, ror r1
   61f6c:	andeq	r4, r6, r4, ror r1
   61f70:	andeq	r4, r6, r4, ror r1
   61f74:	ldrdeq	r2, [r6], -r0
   61f78:	andeq	r2, r6, r8, lsr #4
   61f7c:	andeq	r2, r6, r4, asr #13
   61f80:	andeq	r2, r6, r8, lsl #15
   61f84:	andeq	r4, r6, r4, ror r1
   61f88:	andeq	r2, r6, r0, asr sp
   61f8c:	ldrdeq	r3, [r6], -r8
   61f90:			; <UNDEFINED> instruction: 0x00062db8
   61f94:	ldrdeq	r2, [r6], -ip
   61f98:	andeq	r4, r6, r4, ror r1
   61f9c:	andeq	r4, r6, r4, ror r1
   61fa0:	andeq	r4, r6, r4, ror r1
   61fa4:	andeq	r2, r6, r0, lsl #29
   61fa8:	andeq	r2, r6, r4, ror #29
   61fac:	andeq	r4, r6, r4, ror r1
   61fb0:	andeq	r3, r6, r8, lsl #8
   61fb4:	andeq	r4, r6, r4, ror r1
   61fb8:	andeq	r3, r6, r8, ror #8
   61fbc:	andeq	r3, r6, r8, ror r4
   61fc0:	strdeq	r3, [r6], -ip
   61fc4:	andeq	r3, r6, r8, lsl #15
   61fc8:	ldrdeq	r3, [r6], -r8
   61fcc:	andeq	r3, r6, r4, lsr #22
   61fd0:	andeq	r3, r6, ip, ror #11
   61fd4:	andeq	r3, r6, r8, asr #23
   61fd8:			; <UNDEFINED> instruction: 0x00063cb4
   61fdc:	andeq	r4, r6, r4, ror r1
   61fe0:	andeq	r4, r6, r4, ror r1
   61fe4:	andeq	r4, r6, r4, ror r1
   61fe8:	andeq	r4, r6, r4, ror r1
   61fec:	andeq	r4, r6, r4, ror r1
   61ff0:	andeq	r4, r6, r4, ror r1
   61ff4:	andeq	r2, r6, r4, lsr #3
   61ff8:	strdeq	r2, [r6], -ip
   61ffc:	andeq	r2, r6, r4, asr r2
   62000:	andeq	r2, r6, r4, lsr #15
   62004:	andeq	r2, r6, r8, asr #15
   62008:	andeq	r4, r6, r4, ror r1
   6200c:	ldrdeq	r3, [r6], -r8
   62010:	strdeq	r2, [r6], -ip
   62014:	andeq	r4, r6, r4, ror r1
   62018:	andeq	r2, r6, r0, asr #28
   6201c:	strdeq	r2, [r6], -ip
   62020:	andeq	r2, r6, r0, lsr #28
   62024:	andeq	r2, r6, r4, lsr #29
   62028:	ldrdeq	r3, [r6], -r8
   6202c:	andeq	r4, r6, r4, ror r1
   62030:	andeq	r3, r6, r8, lsl r4
   62034:	andeq	r3, r6, r8, lsr r4
   62038:	andeq	r2, r6, r4, lsr #8
   6203c:	muleq	r6, ip, r4
   62040:	andeq	r3, r6, ip, lsl #12
   62044:	andeq	r3, r6, ip, lsr r7
   62048:	andeq	r4, r6, r4, ror r1
   6204c:	andeq	r3, r6, r4, lsr #23
   62050:	andeq	r2, r6, r8, ror r7
   62054:	andeq	r3, r6, r0, lsr #24
   62058:	andeq	r3, r6, r4, lsr #29
   6205c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   62060:	sub	r3, r3, #1
   62064:	ldr	r2, [fp, #-136]	; 0xffffff78
   62068:	cmp	r2, r3
   6206c:	bne	640ac <__assert_fail@plt+0x519c0>
   62070:	mov	r3, #1
   62074:	str	r3, [fp, #-140]	; 0xffffff74
   62078:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6207c:	cmp	r3, #45	; 0x2d
   62080:	beq	62098 <__assert_fail@plt+0x4f9ac>
   62084:	ldr	r3, [fp, #12]
   62088:	cmp	r3, #0
   6208c:	blt	62098 <__assert_fail@plt+0x4f9ac>
   62090:	ldr	r3, [fp, #12]
   62094:	b	6209c <__assert_fail@plt+0x4f9b0>
   62098:	mov	r3, #0
   6209c:	str	r3, [fp, #-144]	; 0xffffff70
   620a0:	ldr	r2, [fp, #-140]	; 0xffffff74
   620a4:	ldr	r3, [fp, #-144]	; 0xffffff70
   620a8:	cmp	r2, r3
   620ac:	movcs	r3, r2
   620b0:	movcc	r3, r3
   620b4:	str	r3, [fp, #-148]	; 0xffffff6c
   620b8:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   620bc:	ldr	r3, [fp, #-16]
   620c0:	sub	r3, r2, r3
   620c4:	ldr	r2, [fp, #-148]	; 0xffffff6c
   620c8:	cmp	r2, r3
   620cc:	bcc	620e8 <__assert_fail@plt+0x4f9fc>
   620d0:	bl	12404 <__errno_location@plt>
   620d4:	mov	r2, r0
   620d8:	mov	r3, #34	; 0x22
   620dc:	str	r3, [r2]
   620e0:	mov	r3, #0
   620e4:	b	64360 <__assert_fail@plt+0x51c74>
   620e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   620ec:	cmp	r3, #0
   620f0:	beq	62190 <__assert_fail@plt+0x4faa4>
   620f4:	ldr	r2, [fp, #-140]	; 0xffffff74
   620f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   620fc:	cmp	r2, r3
   62100:	bcs	62170 <__assert_fail@plt+0x4fa84>
   62104:	ldr	r2, [fp, #-144]	; 0xffffff70
   62108:	ldr	r3, [fp, #-140]	; 0xffffff74
   6210c:	sub	r3, r2, r3
   62110:	str	r3, [fp, #-152]	; 0xffffff68
   62114:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62118:	cmp	r3, #48	; 0x30
   6211c:	beq	6212c <__assert_fail@plt+0x4fa40>
   62120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62124:	cmp	r3, #43	; 0x2b
   62128:	bne	62150 <__assert_fail@plt+0x4fa64>
   6212c:	ldr	r2, [fp, #-152]	; 0xffffff68
   62130:	mov	r1, #48	; 0x30
   62134:	ldr	r0, [fp, #-20]	; 0xffffffec
   62138:	bl	12434 <memset@plt>
   6213c:	ldr	r2, [fp, #-20]	; 0xffffffec
   62140:	ldr	r3, [fp, #-152]	; 0xffffff68
   62144:	add	r3, r2, r3
   62148:	str	r3, [fp, #-20]	; 0xffffffec
   6214c:	b	62170 <__assert_fail@plt+0x4fa84>
   62150:	ldr	r2, [fp, #-152]	; 0xffffff68
   62154:	mov	r1, #32
   62158:	ldr	r0, [fp, #-20]	; 0xffffffec
   6215c:	bl	12434 <memset@plt>
   62160:	ldr	r2, [fp, #-20]	; 0xffffffec
   62164:	ldr	r3, [fp, #-152]	; 0xffffff68
   62168:	add	r3, r2, r3
   6216c:	str	r3, [fp, #-20]	; 0xffffffec
   62170:	ldr	r3, [fp, #-24]	; 0xffffffe8
   62174:	ldrb	r2, [r3]
   62178:	ldr	r3, [fp, #-20]	; 0xffffffec
   6217c:	strb	r2, [r3]
   62180:	ldr	r2, [fp, #-20]	; 0xffffffec
   62184:	ldr	r3, [fp, #-140]	; 0xffffff74
   62188:	add	r3, r2, r3
   6218c:	str	r3, [fp, #-20]	; 0xffffffec
   62190:	ldr	r2, [fp, #-16]
   62194:	ldr	r3, [fp, #-148]	; 0xffffff6c
   62198:	add	r3, r2, r3
   6219c:	str	r3, [fp, #-16]
   621a0:	b	64304 <__assert_fail@plt+0x51c18>
   621a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   621a8:	cmp	r3, #0
   621ac:	bne	640c0 <__assert_fail@plt+0x519d4>
   621b0:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   621b4:	cmp	r3, #0
   621b8:	beq	6242c <__assert_fail@plt+0x4fd40>
   621bc:	mov	r3, #1
   621c0:	strb	r3, [fp, #-62]	; 0xffffffc2
   621c4:	mov	r3, #0
   621c8:	strb	r3, [fp, #-61]	; 0xffffffc3
   621cc:	b	6242c <__assert_fail@plt+0x4fd40>
   621d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   621d4:	cmp	r3, #0
   621d8:	bne	640c8 <__assert_fail@plt+0x519dc>
   621dc:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   621e0:	cmp	r3, #0
   621e4:	beq	62434 <__assert_fail@plt+0x4fd48>
   621e8:	mov	r3, #1
   621ec:	strb	r3, [fp, #-62]	; 0xffffffc2
   621f0:	mov	r3, #0
   621f4:	strb	r3, [fp, #-61]	; 0xffffffc3
   621f8:	b	62434 <__assert_fail@plt+0x4fd48>
   621fc:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   62200:	cmp	r3, #0
   62204:	beq	62218 <__assert_fail@plt+0x4fb2c>
   62208:	mov	r3, #1
   6220c:	strb	r3, [fp, #-62]	; 0xffffffc2
   62210:	mov	r3, #0
   62214:	strb	r3, [fp, #-61]	; 0xffffffc3
   62218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   6221c:	cmp	r3, #69	; 0x45
   62220:	bne	6243c <__assert_fail@plt+0x4fd50>
   62224:	b	64174 <__assert_fail@plt+0x51a88>
   62228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   6222c:	cmp	r3, #69	; 0x45
   62230:	beq	640d0 <__assert_fail@plt+0x519e4>
   62234:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   62238:	cmp	r3, #0
   6223c:	beq	62444 <__assert_fail@plt+0x4fd58>
   62240:	mov	r3, #1
   62244:	strb	r3, [fp, #-62]	; 0xffffffc2
   62248:	mov	r3, #0
   6224c:	strb	r3, [fp, #-61]	; 0xffffffc3
   62250:	b	62444 <__assert_fail@plt+0x4fd58>
   62254:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62258:	cmp	r3, #79	; 0x4f
   6225c:	bne	6244c <__assert_fail@plt+0x4fd60>
   62260:	b	64174 <__assert_fail@plt+0x51a88>
   62264:	mvn	r3, #0
   62268:	str	r3, [fp, #-80]	; 0xffffffb0
   6226c:	ldr	r3, [fp, #24]
   62270:	str	r3, [sp, #20]
   62274:	ldr	r3, [fp, #20]
   62278:	str	r3, [sp, #16]
   6227c:	ldr	r3, [fp, #16]
   62280:	str	r3, [sp, #12]
   62284:	ldr	r3, [fp, #-80]	; 0xffffffb0
   62288:	str	r3, [sp, #8]
   6228c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62290:	str	r3, [sp, #4]
   62294:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   62298:	str	r3, [sp]
   6229c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   622a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   622a4:	mvn	r1, #0
   622a8:	mov	r0, #0
   622ac:	bl	619d4 <__assert_fail@plt+0x4f2e8>
   622b0:	str	r0, [fp, #-156]	; 0xffffff64
   622b4:	ldr	r3, [fp, #-156]	; 0xffffff64
   622b8:	str	r3, [fp, #-160]	; 0xffffff60
   622bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   622c0:	cmp	r3, #45	; 0x2d
   622c4:	beq	622dc <__assert_fail@plt+0x4fbf0>
   622c8:	ldr	r3, [fp, #12]
   622cc:	cmp	r3, #0
   622d0:	blt	622dc <__assert_fail@plt+0x4fbf0>
   622d4:	ldr	r3, [fp, #12]
   622d8:	b	622e0 <__assert_fail@plt+0x4fbf4>
   622dc:	mov	r3, #0
   622e0:	str	r3, [fp, #-164]	; 0xffffff5c
   622e4:	ldr	r2, [fp, #-160]	; 0xffffff60
   622e8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   622ec:	cmp	r2, r3
   622f0:	movcs	r3, r2
   622f4:	movcc	r3, r3
   622f8:	str	r3, [fp, #-168]	; 0xffffff58
   622fc:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   62300:	ldr	r3, [fp, #-16]
   62304:	sub	r3, r2, r3
   62308:	ldr	r2, [fp, #-168]	; 0xffffff58
   6230c:	cmp	r2, r3
   62310:	bcc	6232c <__assert_fail@plt+0x4fc40>
   62314:	bl	12404 <__errno_location@plt>
   62318:	mov	r2, r0
   6231c:	mov	r3, #34	; 0x22
   62320:	str	r3, [r2]
   62324:	mov	r3, #0
   62328:	b	64360 <__assert_fail@plt+0x51c74>
   6232c:	ldr	r3, [fp, #-20]	; 0xffffffec
   62330:	cmp	r3, #0
   62334:	beq	62410 <__assert_fail@plt+0x4fd24>
   62338:	ldr	r2, [fp, #-160]	; 0xffffff60
   6233c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   62340:	cmp	r2, r3
   62344:	bcs	623b4 <__assert_fail@plt+0x4fcc8>
   62348:	ldr	r2, [fp, #-164]	; 0xffffff5c
   6234c:	ldr	r3, [fp, #-160]	; 0xffffff60
   62350:	sub	r3, r2, r3
   62354:	str	r3, [fp, #-172]	; 0xffffff54
   62358:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6235c:	cmp	r3, #48	; 0x30
   62360:	beq	62370 <__assert_fail@plt+0x4fc84>
   62364:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62368:	cmp	r3, #43	; 0x2b
   6236c:	bne	62394 <__assert_fail@plt+0x4fca8>
   62370:	ldr	r2, [fp, #-172]	; 0xffffff54
   62374:	mov	r1, #48	; 0x30
   62378:	ldr	r0, [fp, #-20]	; 0xffffffec
   6237c:	bl	12434 <memset@plt>
   62380:	ldr	r2, [fp, #-20]	; 0xffffffec
   62384:	ldr	r3, [fp, #-172]	; 0xffffff54
   62388:	add	r3, r2, r3
   6238c:	str	r3, [fp, #-20]	; 0xffffffec
   62390:	b	623b4 <__assert_fail@plt+0x4fcc8>
   62394:	ldr	r2, [fp, #-172]	; 0xffffff54
   62398:	mov	r1, #32
   6239c:	ldr	r0, [fp, #-20]	; 0xffffffec
   623a0:	bl	12434 <memset@plt>
   623a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   623a8:	ldr	r3, [fp, #-172]	; 0xffffff54
   623ac:	add	r3, r2, r3
   623b0:	str	r3, [fp, #-20]	; 0xffffffec
   623b4:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   623b8:	ldr	r3, [fp, #-16]
   623bc:	sub	r1, r2, r3
   623c0:	ldr	r3, [fp, #24]
   623c4:	str	r3, [sp, #20]
   623c8:	ldr	r3, [fp, #20]
   623cc:	str	r3, [sp, #16]
   623d0:	ldr	r3, [fp, #16]
   623d4:	str	r3, [sp, #12]
   623d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   623dc:	str	r3, [sp, #8]
   623e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   623e4:	str	r3, [sp, #4]
   623e8:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   623ec:	str	r3, [sp]
   623f0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   623f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   623f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   623fc:	bl	619d4 <__assert_fail@plt+0x4f2e8>
   62400:	ldr	r2, [fp, #-20]	; 0xffffffec
   62404:	ldr	r3, [fp, #-160]	; 0xffffff60
   62408:	add	r3, r2, r3
   6240c:	str	r3, [fp, #-20]	; 0xffffffec
   62410:	ldr	r2, [fp, #-16]
   62414:	ldr	r3, [fp, #-168]	; 0xffffff58
   62418:	add	r3, r2, r3
   6241c:	str	r3, [fp, #-16]
   62420:	b	64304 <__assert_fail@plt+0x51c18>
   62424:	nop	{0}
   62428:	b	62488 <__assert_fail@plt+0x4fd9c>
   6242c:	nop	{0}
   62430:	b	62488 <__assert_fail@plt+0x4fd9c>
   62434:	nop	{0}
   62438:	b	62488 <__assert_fail@plt+0x4fd9c>
   6243c:	nop	{0}
   62440:	b	62488 <__assert_fail@plt+0x4fd9c>
   62444:	nop	{0}
   62448:	b	62488 <__assert_fail@plt+0x4fd9c>
   6244c:	nop	{0}
   62450:	b	62488 <__assert_fail@plt+0x4fd9c>
   62454:	nop	{0}
   62458:	b	62488 <__assert_fail@plt+0x4fd9c>
   6245c:	nop	{0}
   62460:	b	62488 <__assert_fail@plt+0x4fd9c>
   62464:	nop	{0}
   62468:	b	62488 <__assert_fail@plt+0x4fd9c>
   6246c:	nop	{0}
   62470:	b	62488 <__assert_fail@plt+0x4fd9c>
   62474:	nop	{0}
   62478:	b	62488 <__assert_fail@plt+0x4fd9c>
   6247c:	nop	{0}
   62480:	b	62488 <__assert_fail@plt+0x4fd9c>
   62484:	nop	{0}
   62488:	sub	r3, fp, #404	; 0x194
   6248c:	str	r3, [fp, #-84]	; 0xffffffac
   62490:	ldr	r3, [fp, #-84]	; 0xffffffac
   62494:	add	r2, r3, #1
   62498:	str	r2, [fp, #-84]	; 0xffffffac
   6249c:	mov	r2, #32
   624a0:	strb	r2, [r3]
   624a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   624a8:	add	r2, r3, #1
   624ac:	str	r2, [fp, #-84]	; 0xffffffac
   624b0:	mov	r2, #37	; 0x25
   624b4:	strb	r2, [r3]
   624b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   624bc:	cmp	r3, #0
   624c0:	beq	624dc <__assert_fail@plt+0x4fdf0>
   624c4:	ldr	r3, [fp, #-84]	; 0xffffffac
   624c8:	add	r2, r3, #1
   624cc:	str	r2, [fp, #-84]	; 0xffffffac
   624d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   624d4:	uxtb	r2, r2
   624d8:	strb	r2, [r3]
   624dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   624e0:	add	r2, r3, #1
   624e4:	str	r2, [fp, #-84]	; 0xffffffac
   624e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   624ec:	uxtb	r2, r2
   624f0:	strb	r2, [r3]
   624f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   624f8:	mov	r2, #0
   624fc:	strb	r2, [r3]
   62500:	sub	r2, fp, #404	; 0x194
   62504:	sub	r0, fp, #1424	; 0x590
   62508:	sub	r0, r0, #4
   6250c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62510:	mov	r1, #1024	; 0x400
   62514:	bl	1232c <strftime@plt>
   62518:	str	r0, [fp, #-176]	; 0xffffff50
   6251c:	ldr	r3, [fp, #-176]	; 0xffffff50
   62520:	cmp	r3, #0
   62524:	beq	642f8 <__assert_fail@plt+0x51c0c>
   62528:	ldr	r3, [fp, #-176]	; 0xffffff50
   6252c:	sub	r3, r3, #1
   62530:	str	r3, [fp, #-180]	; 0xffffff4c
   62534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62538:	cmp	r3, #45	; 0x2d
   6253c:	beq	62554 <__assert_fail@plt+0x4fe68>
   62540:	ldr	r3, [fp, #12]
   62544:	cmp	r3, #0
   62548:	blt	62554 <__assert_fail@plt+0x4fe68>
   6254c:	ldr	r3, [fp, #12]
   62550:	b	62558 <__assert_fail@plt+0x4fe6c>
   62554:	mov	r3, #0
   62558:	str	r3, [fp, #-184]	; 0xffffff48
   6255c:	ldr	r2, [fp, #-180]	; 0xffffff4c
   62560:	ldr	r3, [fp, #-184]	; 0xffffff48
   62564:	cmp	r2, r3
   62568:	movcs	r3, r2
   6256c:	movcc	r3, r3
   62570:	str	r3, [fp, #-188]	; 0xffffff44
   62574:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   62578:	ldr	r3, [fp, #-16]
   6257c:	sub	r3, r2, r3
   62580:	ldr	r2, [fp, #-188]	; 0xffffff44
   62584:	cmp	r2, r3
   62588:	bcc	625a4 <__assert_fail@plt+0x4feb8>
   6258c:	bl	12404 <__errno_location@plt>
   62590:	mov	r2, r0
   62594:	mov	r3, #34	; 0x22
   62598:	str	r3, [r2]
   6259c:	mov	r3, #0
   625a0:	b	64360 <__assert_fail@plt+0x51c74>
   625a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   625a8:	cmp	r3, #0
   625ac:	beq	626b0 <__assert_fail@plt+0x4ffc4>
   625b0:	ldr	r2, [fp, #-180]	; 0xffffff4c
   625b4:	ldr	r3, [fp, #-184]	; 0xffffff48
   625b8:	cmp	r2, r3
   625bc:	bcs	6262c <__assert_fail@plt+0x4ff40>
   625c0:	ldr	r2, [fp, #-184]	; 0xffffff48
   625c4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   625c8:	sub	r3, r2, r3
   625cc:	str	r3, [fp, #-192]	; 0xffffff40
   625d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   625d4:	cmp	r3, #48	; 0x30
   625d8:	beq	625e8 <__assert_fail@plt+0x4fefc>
   625dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   625e0:	cmp	r3, #43	; 0x2b
   625e4:	bne	6260c <__assert_fail@plt+0x4ff20>
   625e8:	ldr	r2, [fp, #-192]	; 0xffffff40
   625ec:	mov	r1, #48	; 0x30
   625f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   625f4:	bl	12434 <memset@plt>
   625f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   625fc:	ldr	r3, [fp, #-192]	; 0xffffff40
   62600:	add	r3, r2, r3
   62604:	str	r3, [fp, #-20]	; 0xffffffec
   62608:	b	6262c <__assert_fail@plt+0x4ff40>
   6260c:	ldr	r2, [fp, #-192]	; 0xffffff40
   62610:	mov	r1, #32
   62614:	ldr	r0, [fp, #-20]	; 0xffffffec
   62618:	bl	12434 <memset@plt>
   6261c:	ldr	r2, [fp, #-20]	; 0xffffffec
   62620:	ldr	r3, [fp, #-192]	; 0xffffff40
   62624:	add	r3, r2, r3
   62628:	str	r3, [fp, #-20]	; 0xffffffec
   6262c:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   62630:	cmp	r3, #0
   62634:	beq	62658 <__assert_fail@plt+0x4ff6c>
   62638:	sub	r3, fp, #1424	; 0x590
   6263c:	sub	r3, r3, #4
   62640:	add	r3, r3, #1
   62644:	ldr	r2, [fp, #-180]	; 0xffffff4c
   62648:	mov	r1, r3
   6264c:	ldr	r0, [fp, #-20]	; 0xffffffec
   62650:	bl	617dc <__assert_fail@plt+0x4f0f0>
   62654:	b	626a0 <__assert_fail@plt+0x4ffb4>
   62658:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   6265c:	cmp	r3, #0
   62660:	beq	62684 <__assert_fail@plt+0x4ff98>
   62664:	sub	r3, fp, #1424	; 0x590
   62668:	sub	r3, r3, #4
   6266c:	add	r3, r3, #1
   62670:	ldr	r2, [fp, #-180]	; 0xffffff4c
   62674:	mov	r1, r3
   62678:	ldr	r0, [fp, #-20]	; 0xffffffec
   6267c:	bl	61858 <__assert_fail@plt+0x4f16c>
   62680:	b	626a0 <__assert_fail@plt+0x4ffb4>
   62684:	sub	r3, fp, #1424	; 0x590
   62688:	sub	r3, r3, #4
   6268c:	add	r3, r3, #1
   62690:	ldr	r2, [fp, #-180]	; 0xffffff4c
   62694:	mov	r1, r3
   62698:	ldr	r0, [fp, #-20]	; 0xffffffec
   6269c:	bl	120f8 <memcpy@plt>
   626a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   626a4:	ldr	r3, [fp, #-180]	; 0xffffff4c
   626a8:	add	r3, r2, r3
   626ac:	str	r3, [fp, #-20]	; 0xffffffec
   626b0:	ldr	r2, [fp, #-16]
   626b4:	ldr	r3, [fp, #-188]	; 0xffffff44
   626b8:	add	r3, r2, r3
   626bc:	str	r3, [fp, #-16]
   626c0:	b	642f8 <__assert_fail@plt+0x51c0c>
   626c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   626c8:	cmp	r3, #69	; 0x45
   626cc:	beq	62454 <__assert_fail@plt+0x4fd68>
   626d0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   626d4:	ldr	r2, [r3, #20]
   626d8:	movw	r3, #63636	; 0xf894
   626dc:	movt	r3, #65535	; 0xffff
   626e0:	cmp	r2, r3
   626e4:	movlt	r3, #1
   626e8:	movge	r3, #0
   626ec:	strb	r3, [fp, #-193]	; 0xffffff3f
   626f0:	ldrb	r3, [fp, #-193]	; 0xffffff3f
   626f4:	eor	r3, r3, #1
   626f8:	uxtb	r3, r3
   626fc:	mov	r2, r3
   62700:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62704:	ldr	r3, [r3, #20]
   62708:	lsr	r3, r3, #31
   6270c:	uxtb	r3, r3
   62710:	and	r3, r3, r2
   62714:	cmp	r3, #0
   62718:	movne	r3, #1
   6271c:	moveq	r3, #0
   62720:	strb	r3, [fp, #-194]	; 0xffffff3e
   62724:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62728:	ldr	r2, [r3, #20]
   6272c:	ldrb	r3, [fp, #-194]	; 0xffffff3e
   62730:	mvn	r1, #98	; 0x62
   62734:	mul	r3, r1, r3
   62738:	add	r2, r2, r3
   6273c:	movw	r3, #34079	; 0x851f
   62740:	movt	r3, #20971	; 0x51eb
   62744:	smull	r1, r3, r3, r2
   62748:	asr	r1, r3, #5
   6274c:	asr	r3, r2, #31
   62750:	sub	r3, r1, r3
   62754:	add	r3, r3, #19
   62758:	str	r3, [fp, #-200]	; 0xffffff38
   6275c:	mov	r3, #2
   62760:	str	r3, [fp, #-36]	; 0xffffffdc
   62764:	ldrb	r3, [fp, #-193]	; 0xffffff3f
   62768:	strb	r3, [fp, #-45]	; 0xffffffd3
   6276c:	ldr	r3, [fp, #-200]	; 0xffffff38
   62770:	str	r3, [fp, #-44]	; 0xffffffd4
   62774:	b	627f8 <__assert_fail@plt+0x5010c>
   62778:	ldr	r3, [fp, #-32]	; 0xffffffe0
   6277c:	cmp	r3, #79	; 0x4f
   62780:	bne	6245c <__assert_fail@plt+0x4fd70>
   62784:	b	64174 <__assert_fail@plt+0x51a88>
   62788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   6278c:	cmp	r3, #0
   62790:	bne	640d8 <__assert_fail@plt+0x519ec>
   62794:	movw	r3, #48256	; 0xbc80
   62798:	movt	r3, #6
   6279c:	str	r3, [fp, #-56]	; 0xffffffc8
   627a0:	b	62264 <__assert_fail@plt+0x4fb78>
   627a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   627a8:	cmp	r3, #69	; 0x45
   627ac:	beq	640e0 <__assert_fail@plt+0x519f4>
   627b0:	mov	r3, #2
   627b4:	str	r3, [fp, #-36]	; 0xffffffdc
   627b8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   627bc:	ldr	r3, [r3, #12]
   627c0:	str	r3, [fp, #-40]	; 0xffffffd8
   627c4:	b	62888 <__assert_fail@plt+0x5019c>
   627c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   627cc:	cmp	r3, #69	; 0x45
   627d0:	beq	640e8 <__assert_fail@plt+0x519fc>
   627d4:	mov	r3, #2
   627d8:	str	r3, [fp, #-36]	; 0xffffffdc
   627dc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   627e0:	ldr	r3, [r3, #12]
   627e4:	str	r3, [fp, #-40]	; 0xffffffd8
   627e8:	b	6286c <__assert_fail@plt+0x50180>
   627ec:	mov	r3, #1
   627f0:	strb	r3, [fp, #-46]	; 0xffffffd2
   627f4:	b	628ac <__assert_fail@plt+0x501c0>
   627f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   627fc:	cmp	r3, #0
   62800:	bne	6280c <__assert_fail@plt+0x50120>
   62804:	ldr	r3, [fp, #8]
   62808:	str	r3, [fp, #-28]	; 0xffffffe4
   6280c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62810:	cmp	r3, #43	; 0x2b
   62814:	bne	62854 <__assert_fail@plt+0x50168>
   62818:	ldr	r3, [fp, #-36]	; 0xffffffdc
   6281c:	cmp	r3, #2
   62820:	bne	6282c <__assert_fail@plt+0x50140>
   62824:	mov	r2, #99	; 0x63
   62828:	b	62830 <__assert_fail@plt+0x50144>
   6282c:	movw	r2, #9999	; 0x270f
   62830:	ldr	r3, [fp, #-44]	; 0xffffffd4
   62834:	cmp	r2, r3
   62838:	bcc	6284c <__assert_fail@plt+0x50160>
   6283c:	ldr	r3, [fp, #12]
   62840:	ldr	r2, [fp, #-36]	; 0xffffffdc
   62844:	cmp	r2, r3
   62848:	bge	62854 <__assert_fail@plt+0x50168>
   6284c:	mov	r3, #1
   62850:	b	62858 <__assert_fail@plt+0x5016c>
   62854:	mov	r3, #0
   62858:	strb	r3, [fp, #-46]	; 0xffffffd2
   6285c:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   62860:	and	r3, r3, #1
   62864:	strb	r3, [fp, #-46]	; 0xffffffd2
   62868:	b	628a4 <__assert_fail@plt+0x501b8>
   6286c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62870:	cmp	r3, #0
   62874:	bne	62884 <__assert_fail@plt+0x50198>
   62878:	mov	r3, #95	; 0x5f
   6287c:	str	r3, [fp, #-28]	; 0xffffffe4
   62880:	b	62888 <__assert_fail@plt+0x5019c>
   62884:	nop	{0}
   62888:	ldr	r3, [fp, #-40]	; 0xffffffd8
   6288c:	lsr	r3, r3, #31
   62890:	strb	r3, [fp, #-45]	; 0xffffffd3
   62894:	ldr	r3, [fp, #-40]	; 0xffffffd8
   62898:	str	r3, [fp, #-44]	; 0xffffffd4
   6289c:	mov	r3, #0
   628a0:	strb	r3, [fp, #-46]	; 0xffffffd2
   628a4:	mov	r3, #0
   628a8:	str	r3, [fp, #-52]	; 0xffffffcc
   628ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   628b0:	cmp	r3, #79	; 0x4f
   628b4:	bne	628cc <__assert_fail@plt+0x501e0>
   628b8:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   628bc:	eor	r3, r3, #1
   628c0:	uxtb	r3, r3
   628c4:	cmp	r3, #0
   628c8:	bne	62464 <__assert_fail@plt+0x4fd78>
   628cc:	sub	r3, fp, #396	; 0x18c
   628d0:	add	r3, r3, #14
   628d4:	str	r3, [fp, #-60]	; 0xffffffc4
   628d8:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   628dc:	cmp	r3, #0
   628e0:	beq	628f0 <__assert_fail@plt+0x50204>
   628e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   628e8:	rsb	r3, r3, #0
   628ec:	str	r3, [fp, #-44]	; 0xffffffd4
   628f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   628f4:	and	r3, r3, #1
   628f8:	cmp	r3, #0
   628fc:	beq	62918 <__assert_fail@plt+0x5022c>
   62900:	ldr	r3, [fp, #-60]	; 0xffffffc4
   62904:	sub	r3, r3, #1
   62908:	str	r3, [fp, #-60]	; 0xffffffc4
   6290c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   62910:	mov	r2, #58	; 0x3a
   62914:	strb	r2, [r3]
   62918:	ldr	r3, [fp, #-52]	; 0xffffffcc
   6291c:	asr	r3, r3, #1
   62920:	str	r3, [fp, #-52]	; 0xffffffcc
   62924:	ldr	r1, [fp, #-44]	; 0xffffffd4
   62928:	movw	r3, #52429	; 0xcccd
   6292c:	movt	r3, #52428	; 0xcccc
   62930:	umull	r2, r3, r3, r1
   62934:	lsr	r2, r3, #3
   62938:	mov	r3, r2
   6293c:	lsl	r3, r3, #2
   62940:	add	r3, r3, r2
   62944:	lsl	r3, r3, #1
   62948:	sub	r2, r1, r3
   6294c:	uxtb	r3, r2
   62950:	ldr	r2, [fp, #-60]	; 0xffffffc4
   62954:	sub	r2, r2, #1
   62958:	str	r2, [fp, #-60]	; 0xffffffc4
   6295c:	add	r3, r3, #48	; 0x30
   62960:	uxtb	r2, r3
   62964:	ldr	r3, [fp, #-60]	; 0xffffffc4
   62968:	strb	r2, [r3]
   6296c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   62970:	movw	r3, #52429	; 0xcccd
   62974:	movt	r3, #52428	; 0xcccc
   62978:	umull	r2, r3, r3, r2
   6297c:	lsr	r3, r3, #3
   62980:	str	r3, [fp, #-44]	; 0xffffffd4
   62984:	ldr	r3, [fp, #-44]	; 0xffffffd4
   62988:	cmp	r3, #0
   6298c:	bne	628f0 <__assert_fail@plt+0x50204>
   62990:	ldr	r3, [fp, #-52]	; 0xffffffcc
   62994:	cmp	r3, #0
   62998:	bne	628f0 <__assert_fail@plt+0x50204>
   6299c:	nop	{0}
   629a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   629a4:	cmp	r3, #0
   629a8:	bne	629b4 <__assert_fail@plt+0x502c8>
   629ac:	mov	r3, #48	; 0x30
   629b0:	str	r3, [fp, #-28]	; 0xffffffe4
   629b4:	ldr	r3, [fp, #12]
   629b8:	cmp	r3, #0
   629bc:	bge	629c8 <__assert_fail@plt+0x502dc>
   629c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   629c4:	str	r3, [fp, #12]
   629c8:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   629cc:	cmp	r3, #0
   629d0:	beq	629dc <__assert_fail@plt+0x502f0>
   629d4:	mov	r3, #45	; 0x2d
   629d8:	b	629f4 <__assert_fail@plt+0x50308>
   629dc:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   629e0:	cmp	r3, #0
   629e4:	beq	629f0 <__assert_fail@plt+0x50304>
   629e8:	mov	r3, #43	; 0x2b
   629ec:	b	629f4 <__assert_fail@plt+0x50308>
   629f0:	mov	r3, #0
   629f4:	strb	r3, [fp, #-201]	; 0xffffff37
   629f8:	sub	r3, fp, #396	; 0x18c
   629fc:	add	r3, r3, #14
   62a00:	ldr	r2, [fp, #-60]	; 0xffffffc4
   62a04:	sub	r3, r3, r2
   62a08:	str	r3, [fp, #-208]	; 0xffffff30
   62a0c:	ldr	r3, [fp, #12]
   62a10:	ldrb	r2, [fp, #-201]	; 0xffffff37
   62a14:	cmp	r2, #0
   62a18:	movne	r2, #1
   62a1c:	moveq	r2, #0
   62a20:	uxtb	r2, r2
   62a24:	sub	r2, r3, r2
   62a28:	ldr	r3, [fp, #-208]	; 0xffffff30
   62a2c:	sub	r3, r2, r3
   62a30:	str	r3, [fp, #-212]	; 0xffffff2c
   62a34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62a38:	cmp	r3, #45	; 0x2d
   62a3c:	beq	62a54 <__assert_fail@plt+0x50368>
   62a40:	ldr	r3, [fp, #-212]	; 0xffffff2c
   62a44:	cmp	r3, #0
   62a48:	ble	62a54 <__assert_fail@plt+0x50368>
   62a4c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   62a50:	b	62a58 <__assert_fail@plt+0x5036c>
   62a54:	mov	r3, #0
   62a58:	str	r3, [fp, #-216]	; 0xffffff28
   62a5c:	ldrb	r3, [fp, #-201]	; 0xffffff37
   62a60:	cmp	r3, #0
   62a64:	beq	62bdc <__assert_fail@plt+0x504f0>
   62a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62a6c:	cmp	r3, #95	; 0x5f
   62a70:	bne	62ac4 <__assert_fail@plt+0x503d8>
   62a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   62a78:	cmp	r3, #0
   62a7c:	beq	62aa4 <__assert_fail@plt+0x503b8>
   62a80:	ldr	r3, [fp, #-216]	; 0xffffff28
   62a84:	mov	r2, r3
   62a88:	mov	r1, #32
   62a8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   62a90:	bl	12434 <memset@plt>
   62a94:	ldr	r3, [fp, #-216]	; 0xffffff28
   62a98:	ldr	r2, [fp, #-20]	; 0xffffffec
   62a9c:	add	r3, r2, r3
   62aa0:	str	r3, [fp, #-20]	; 0xffffffec
   62aa4:	ldr	r3, [fp, #-216]	; 0xffffff28
   62aa8:	ldr	r2, [fp, #-16]
   62aac:	add	r3, r2, r3
   62ab0:	str	r3, [fp, #-16]
   62ab4:	ldr	r2, [fp, #12]
   62ab8:	ldr	r3, [fp, #-216]	; 0xffffff28
   62abc:	sub	r3, r2, r3
   62ac0:	str	r3, [fp, #12]
   62ac4:	mov	r3, #1
   62ac8:	str	r3, [fp, #-220]	; 0xffffff24
   62acc:	mov	r3, #0
   62ad0:	str	r3, [fp, #-224]	; 0xffffff20
   62ad4:	ldr	r2, [fp, #-220]	; 0xffffff24
   62ad8:	ldr	r3, [fp, #-224]	; 0xffffff20
   62adc:	cmp	r2, r3
   62ae0:	movcs	r3, r2
   62ae4:	movcc	r3, r3
   62ae8:	str	r3, [fp, #-228]	; 0xffffff1c
   62aec:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   62af0:	ldr	r3, [fp, #-16]
   62af4:	sub	r3, r2, r3
   62af8:	ldr	r2, [fp, #-228]	; 0xffffff1c
   62afc:	cmp	r2, r3
   62b00:	bcc	62b1c <__assert_fail@plt+0x50430>
   62b04:	bl	12404 <__errno_location@plt>
   62b08:	mov	r2, r0
   62b0c:	mov	r3, #34	; 0x22
   62b10:	str	r3, [r2]
   62b14:	mov	r3, #0
   62b18:	b	64360 <__assert_fail@plt+0x51c74>
   62b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   62b20:	cmp	r3, #0
   62b24:	beq	62bc0 <__assert_fail@plt+0x504d4>
   62b28:	ldr	r2, [fp, #-220]	; 0xffffff24
   62b2c:	ldr	r3, [fp, #-224]	; 0xffffff20
   62b30:	cmp	r2, r3
   62b34:	bcs	62ba4 <__assert_fail@plt+0x504b8>
   62b38:	ldr	r2, [fp, #-224]	; 0xffffff20
   62b3c:	ldr	r3, [fp, #-220]	; 0xffffff24
   62b40:	sub	r3, r2, r3
   62b44:	str	r3, [fp, #-232]	; 0xffffff18
   62b48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62b4c:	cmp	r3, #48	; 0x30
   62b50:	beq	62b60 <__assert_fail@plt+0x50474>
   62b54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62b58:	cmp	r3, #43	; 0x2b
   62b5c:	bne	62b84 <__assert_fail@plt+0x50498>
   62b60:	ldr	r2, [fp, #-232]	; 0xffffff18
   62b64:	mov	r1, #48	; 0x30
   62b68:	ldr	r0, [fp, #-20]	; 0xffffffec
   62b6c:	bl	12434 <memset@plt>
   62b70:	ldr	r2, [fp, #-20]	; 0xffffffec
   62b74:	ldr	r3, [fp, #-232]	; 0xffffff18
   62b78:	add	r3, r2, r3
   62b7c:	str	r3, [fp, #-20]	; 0xffffffec
   62b80:	b	62ba4 <__assert_fail@plt+0x504b8>
   62b84:	ldr	r2, [fp, #-232]	; 0xffffff18
   62b88:	mov	r1, #32
   62b8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   62b90:	bl	12434 <memset@plt>
   62b94:	ldr	r2, [fp, #-20]	; 0xffffffec
   62b98:	ldr	r3, [fp, #-232]	; 0xffffff18
   62b9c:	add	r3, r2, r3
   62ba0:	str	r3, [fp, #-20]	; 0xffffffec
   62ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   62ba8:	ldrb	r2, [fp, #-201]	; 0xffffff37
   62bac:	strb	r2, [r3]
   62bb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   62bb4:	ldr	r3, [fp, #-220]	; 0xffffff24
   62bb8:	add	r3, r2, r3
   62bbc:	str	r3, [fp, #-20]	; 0xffffffec
   62bc0:	ldr	r2, [fp, #-16]
   62bc4:	ldr	r3, [fp, #-228]	; 0xffffff1c
   62bc8:	add	r3, r2, r3
   62bcc:	str	r3, [fp, #-16]
   62bd0:	ldr	r3, [fp, #12]
   62bd4:	sub	r3, r3, #1
   62bd8:	str	r3, [fp, #12]
   62bdc:	ldr	r3, [fp, #-208]	; 0xffffff30
   62be0:	str	r3, [fp, #-236]	; 0xffffff14
   62be4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62be8:	cmp	r3, #45	; 0x2d
   62bec:	beq	62c04 <__assert_fail@plt+0x50518>
   62bf0:	ldr	r3, [fp, #12]
   62bf4:	cmp	r3, #0
   62bf8:	blt	62c04 <__assert_fail@plt+0x50518>
   62bfc:	ldr	r3, [fp, #12]
   62c00:	b	62c08 <__assert_fail@plt+0x5051c>
   62c04:	mov	r3, #0
   62c08:	str	r3, [fp, #-240]	; 0xffffff10
   62c0c:	ldr	r2, [fp, #-236]	; 0xffffff14
   62c10:	ldr	r3, [fp, #-240]	; 0xffffff10
   62c14:	cmp	r2, r3
   62c18:	movcs	r3, r2
   62c1c:	movcc	r3, r3
   62c20:	str	r3, [fp, #-244]	; 0xffffff0c
   62c24:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   62c28:	ldr	r3, [fp, #-16]
   62c2c:	sub	r3, r2, r3
   62c30:	ldr	r2, [fp, #-244]	; 0xffffff0c
   62c34:	cmp	r2, r3
   62c38:	bcc	62c54 <__assert_fail@plt+0x50568>
   62c3c:	bl	12404 <__errno_location@plt>
   62c40:	mov	r2, r0
   62c44:	mov	r3, #34	; 0x22
   62c48:	str	r3, [r2]
   62c4c:	mov	r3, #0
   62c50:	b	64360 <__assert_fail@plt+0x51c74>
   62c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   62c58:	cmp	r3, #0
   62c5c:	beq	62d3c <__assert_fail@plt+0x50650>
   62c60:	ldr	r2, [fp, #-236]	; 0xffffff14
   62c64:	ldr	r3, [fp, #-240]	; 0xffffff10
   62c68:	cmp	r2, r3
   62c6c:	bcs	62cdc <__assert_fail@plt+0x505f0>
   62c70:	ldr	r2, [fp, #-240]	; 0xffffff10
   62c74:	ldr	r3, [fp, #-236]	; 0xffffff14
   62c78:	sub	r3, r2, r3
   62c7c:	str	r3, [fp, #-248]	; 0xffffff08
   62c80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62c84:	cmp	r3, #48	; 0x30
   62c88:	beq	62c98 <__assert_fail@plt+0x505ac>
   62c8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62c90:	cmp	r3, #43	; 0x2b
   62c94:	bne	62cbc <__assert_fail@plt+0x505d0>
   62c98:	ldr	r2, [fp, #-248]	; 0xffffff08
   62c9c:	mov	r1, #48	; 0x30
   62ca0:	ldr	r0, [fp, #-20]	; 0xffffffec
   62ca4:	bl	12434 <memset@plt>
   62ca8:	ldr	r2, [fp, #-20]	; 0xffffffec
   62cac:	ldr	r3, [fp, #-248]	; 0xffffff08
   62cb0:	add	r3, r2, r3
   62cb4:	str	r3, [fp, #-20]	; 0xffffffec
   62cb8:	b	62cdc <__assert_fail@plt+0x505f0>
   62cbc:	ldr	r2, [fp, #-248]	; 0xffffff08
   62cc0:	mov	r1, #32
   62cc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   62cc8:	bl	12434 <memset@plt>
   62ccc:	ldr	r2, [fp, #-20]	; 0xffffffec
   62cd0:	ldr	r3, [fp, #-248]	; 0xffffff08
   62cd4:	add	r3, r2, r3
   62cd8:	str	r3, [fp, #-20]	; 0xffffffec
   62cdc:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   62ce0:	cmp	r3, #0
   62ce4:	beq	62cfc <__assert_fail@plt+0x50610>
   62ce8:	ldr	r2, [fp, #-236]	; 0xffffff14
   62cec:	ldr	r1, [fp, #-60]	; 0xffffffc4
   62cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   62cf4:	bl	617dc <__assert_fail@plt+0x4f0f0>
   62cf8:	b	62d2c <__assert_fail@plt+0x50640>
   62cfc:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   62d00:	cmp	r3, #0
   62d04:	beq	62d1c <__assert_fail@plt+0x50630>
   62d08:	ldr	r2, [fp, #-236]	; 0xffffff14
   62d0c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   62d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   62d14:	bl	61858 <__assert_fail@plt+0x4f16c>
   62d18:	b	62d2c <__assert_fail@plt+0x50640>
   62d1c:	ldr	r2, [fp, #-236]	; 0xffffff14
   62d20:	ldr	r1, [fp, #-60]	; 0xffffffc4
   62d24:	ldr	r0, [fp, #-20]	; 0xffffffec
   62d28:	bl	120f8 <memcpy@plt>
   62d2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   62d30:	ldr	r3, [fp, #-236]	; 0xffffff14
   62d34:	add	r3, r2, r3
   62d38:	str	r3, [fp, #-20]	; 0xffffffec
   62d3c:	ldr	r2, [fp, #-16]
   62d40:	ldr	r3, [fp, #-244]	; 0xffffff0c
   62d44:	add	r3, r2, r3
   62d48:	str	r3, [fp, #-16]
   62d4c:	b	64304 <__assert_fail@plt+0x51c18>
   62d50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62d54:	cmp	r3, #0
   62d58:	bne	640f0 <__assert_fail@plt+0x51a04>
   62d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   62d60:	cmp	r3, #0
   62d64:	bne	62d88 <__assert_fail@plt+0x5069c>
   62d68:	ldr	r3, [fp, #12]
   62d6c:	cmp	r3, #0
   62d70:	bge	62d88 <__assert_fail@plt+0x5069c>
   62d74:	mov	r3, #43	; 0x2b
   62d78:	str	r3, [fp, #-28]	; 0xffffffe4
   62d7c:	mov	r3, #4
   62d80:	str	r3, [fp, #-80]	; 0xffffffb0
   62d84:	b	62da8 <__assert_fail@plt+0x506bc>
   62d88:	ldr	r3, [fp, #12]
   62d8c:	sub	r3, r3, #6
   62d90:	str	r3, [fp, #-80]	; 0xffffffb0
   62d94:	ldr	r3, [fp, #-80]	; 0xffffffb0
   62d98:	cmp	r3, #0
   62d9c:	bge	62da8 <__assert_fail@plt+0x506bc>
   62da0:	mov	r3, #0
   62da4:	str	r3, [fp, #-80]	; 0xffffffb0
   62da8:	movw	r3, #48268	; 0xbc8c
   62dac:	movt	r3, #6
   62db0:	str	r3, [fp, #-56]	; 0xffffffc8
   62db4:	b	6226c <__assert_fail@plt+0x4fb80>
   62db8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62dbc:	cmp	r3, #69	; 0x45
   62dc0:	beq	640f8 <__assert_fail@plt+0x51a0c>
   62dc4:	mov	r3, #2
   62dc8:	str	r3, [fp, #-36]	; 0xffffffdc
   62dcc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62dd0:	ldr	r3, [r3, #8]
   62dd4:	str	r3, [fp, #-40]	; 0xffffffd8
   62dd8:	b	62888 <__assert_fail@plt+0x5019c>
   62ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62de0:	cmp	r3, #69	; 0x45
   62de4:	beq	64100 <__assert_fail@plt+0x51a14>
   62de8:	mov	r3, #2
   62dec:	str	r3, [fp, #-36]	; 0xffffffdc
   62df0:	ldr	r3, [fp, #-8]
   62df4:	str	r3, [fp, #-40]	; 0xffffffd8
   62df8:	b	62888 <__assert_fail@plt+0x5019c>
   62dfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62e00:	cmp	r3, #69	; 0x45
   62e04:	beq	64108 <__assert_fail@plt+0x51a1c>
   62e08:	mov	r3, #2
   62e0c:	str	r3, [fp, #-36]	; 0xffffffdc
   62e10:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62e14:	ldr	r3, [r3, #8]
   62e18:	str	r3, [fp, #-40]	; 0xffffffd8
   62e1c:	b	6286c <__assert_fail@plt+0x50180>
   62e20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62e24:	cmp	r3, #69	; 0x45
   62e28:	beq	64110 <__assert_fail@plt+0x51a24>
   62e2c:	mov	r3, #2
   62e30:	str	r3, [fp, #-36]	; 0xffffffdc
   62e34:	ldr	r3, [fp, #-8]
   62e38:	str	r3, [fp, #-40]	; 0xffffffd8
   62e3c:	b	6286c <__assert_fail@plt+0x50180>
   62e40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62e44:	cmp	r3, #69	; 0x45
   62e48:	beq	64118 <__assert_fail@plt+0x51a2c>
   62e4c:	mov	r3, #3
   62e50:	str	r3, [fp, #-36]	; 0xffffffdc
   62e54:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62e58:	ldr	r3, [r3, #28]
   62e5c:	cmn	r3, #1
   62e60:	movlt	r3, #1
   62e64:	movge	r3, #0
   62e68:	strb	r3, [fp, #-45]	; 0xffffffd3
   62e6c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62e70:	ldr	r3, [r3, #28]
   62e74:	add	r3, r3, #1
   62e78:	str	r3, [fp, #-44]	; 0xffffffd4
   62e7c:	b	6289c <__assert_fail@plt+0x501b0>
   62e80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62e84:	cmp	r3, #69	; 0x45
   62e88:	beq	64120 <__assert_fail@plt+0x51a34>
   62e8c:	mov	r3, #2
   62e90:	str	r3, [fp, #-36]	; 0xffffffdc
   62e94:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62e98:	ldr	r3, [r3, #4]
   62e9c:	str	r3, [fp, #-40]	; 0xffffffd8
   62ea0:	b	62888 <__assert_fail@plt+0x5019c>
   62ea4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62ea8:	cmp	r3, #69	; 0x45
   62eac:	beq	64128 <__assert_fail@plt+0x51a3c>
   62eb0:	mov	r3, #2
   62eb4:	str	r3, [fp, #-36]	; 0xffffffdc
   62eb8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62ebc:	ldr	r3, [r3, #16]
   62ec0:	cmn	r3, #1
   62ec4:	movlt	r3, #1
   62ec8:	movge	r3, #0
   62ecc:	strb	r3, [fp, #-45]	; 0xffffffd3
   62ed0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   62ed4:	ldr	r3, [r3, #16]
   62ed8:	add	r3, r3, #1
   62edc:	str	r3, [fp, #-44]	; 0xffffffd4
   62ee0:	b	6289c <__assert_fail@plt+0x501b0>
   62ee4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   62ee8:	cmp	r3, #69	; 0x45
   62eec:	beq	64130 <__assert_fail@plt+0x51a44>
   62ef0:	ldr	r3, [fp, #24]
   62ef4:	str	r3, [fp, #-88]	; 0xffffffa8
   62ef8:	mov	r3, #9
   62efc:	str	r3, [fp, #-252]	; 0xffffff04
   62f00:	ldr	r3, [fp, #12]
   62f04:	cmp	r3, #0
   62f08:	bgt	62f14 <__assert_fail@plt+0x50828>
   62f0c:	ldr	r3, [fp, #-252]	; 0xffffff04
   62f10:	str	r3, [fp, #12]
   62f14:	ldr	r3, [fp, #-252]	; 0xffffff04
   62f18:	str	r3, [fp, #-92]	; 0xffffffa4
   62f1c:	b	62f4c <__assert_fail@plt+0x50860>
   62f20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   62f24:	sub	r3, r3, #1
   62f28:	str	r3, [fp, #-92]	; 0xffffffa4
   62f2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   62f30:	movw	r3, #26215	; 0x6667
   62f34:	movt	r3, #26214	; 0x6666
   62f38:	smull	r1, r3, r3, r2
   62f3c:	asr	r1, r3, #2
   62f40:	asr	r3, r2, #31
   62f44:	sub	r3, r1, r3
   62f48:	str	r3, [fp, #-88]	; 0xffffffa8
   62f4c:	ldr	r3, [fp, #12]
   62f50:	ldr	r2, [fp, #-92]	; 0xffffffa4
   62f54:	cmp	r2, r3
   62f58:	bgt	62f20 <__assert_fail@plt+0x50834>
   62f5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   62f60:	cmp	r3, #1
   62f64:	ble	62fa0 <__assert_fail@plt+0x508b4>
   62f68:	ldr	r1, [fp, #-88]	; 0xffffffa8
   62f6c:	movw	r3, #26215	; 0x6667
   62f70:	movt	r3, #26214	; 0x6666
   62f74:	smull	r2, r3, r3, r1
   62f78:	asr	r2, r3, #2
   62f7c:	asr	r3, r1, #31
   62f80:	sub	r2, r2, r3
   62f84:	mov	r3, r2
   62f88:	lsl	r3, r3, #2
   62f8c:	add	r3, r3, r2
   62f90:	lsl	r3, r3, #1
   62f94:	sub	r2, r1, r3
   62f98:	cmp	r2, #0
   62f9c:	beq	62f20 <__assert_fail@plt+0x50834>
   62fa0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   62fa4:	str	r3, [fp, #-96]	; 0xffffffa0
   62fa8:	b	63028 <__assert_fail@plt+0x5093c>
   62fac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   62fb0:	movw	r3, #26215	; 0x6667
   62fb4:	movt	r3, #26214	; 0x6666
   62fb8:	smull	r1, r3, r3, r2
   62fbc:	asr	r1, r3, #2
   62fc0:	asr	r3, r2, #31
   62fc4:	sub	r1, r1, r3
   62fc8:	mov	r3, r1
   62fcc:	lsl	r3, r3, #2
   62fd0:	add	r3, r3, r1
   62fd4:	lsl	r3, r3, #1
   62fd8:	sub	r1, r2, r3
   62fdc:	uxtb	r2, r1
   62fe0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   62fe4:	sub	r3, r3, #1
   62fe8:	add	r2, r2, #48	; 0x30
   62fec:	uxtb	r2, r2
   62ff0:	sub	r1, fp, #4
   62ff4:	add	r3, r1, r3
   62ff8:	strb	r2, [r3, #-392]	; 0xfffffe78
   62ffc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   63000:	movw	r3, #26215	; 0x6667
   63004:	movt	r3, #26214	; 0x6666
   63008:	smull	r1, r3, r3, r2
   6300c:	asr	r1, r3, #2
   63010:	asr	r3, r2, #31
   63014:	sub	r3, r1, r3
   63018:	str	r3, [fp, #-88]	; 0xffffffa8
   6301c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   63020:	sub	r3, r3, #1
   63024:	str	r3, [fp, #-96]	; 0xffffffa0
   63028:	ldr	r3, [fp, #-96]	; 0xffffffa0
   6302c:	cmp	r3, #0
   63030:	bgt	62fac <__assert_fail@plt+0x508c0>
   63034:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63038:	cmp	r3, #0
   6303c:	bne	63048 <__assert_fail@plt+0x5095c>
   63040:	mov	r3, #48	; 0x30
   63044:	str	r3, [fp, #-28]	; 0xffffffe4
   63048:	ldr	r3, [fp, #-92]	; 0xffffffa4
   6304c:	str	r3, [fp, #-256]	; 0xffffff00
   63050:	mov	r3, #0
   63054:	str	r3, [fp, #-260]	; 0xfffffefc
   63058:	ldr	r2, [fp, #-256]	; 0xffffff00
   6305c:	ldr	r3, [fp, #-260]	; 0xfffffefc
   63060:	cmp	r2, r3
   63064:	movcs	r3, r2
   63068:	movcc	r3, r3
   6306c:	str	r3, [fp, #-264]	; 0xfffffef8
   63070:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   63074:	ldr	r3, [fp, #-16]
   63078:	sub	r3, r2, r3
   6307c:	ldr	r2, [fp, #-264]	; 0xfffffef8
   63080:	cmp	r2, r3
   63084:	bcc	630a0 <__assert_fail@plt+0x509b4>
   63088:	bl	12404 <__errno_location@plt>
   6308c:	mov	r2, r0
   63090:	mov	r3, #34	; 0x22
   63094:	str	r3, [r2]
   63098:	mov	r3, #0
   6309c:	b	64360 <__assert_fail@plt+0x51c74>
   630a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   630a4:	cmp	r3, #0
   630a8:	beq	63194 <__assert_fail@plt+0x50aa8>
   630ac:	ldr	r2, [fp, #-256]	; 0xffffff00
   630b0:	ldr	r3, [fp, #-260]	; 0xfffffefc
   630b4:	cmp	r2, r3
   630b8:	bcs	63128 <__assert_fail@plt+0x50a3c>
   630bc:	ldr	r2, [fp, #-260]	; 0xfffffefc
   630c0:	ldr	r3, [fp, #-256]	; 0xffffff00
   630c4:	sub	r3, r2, r3
   630c8:	str	r3, [fp, #-268]	; 0xfffffef4
   630cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   630d0:	cmp	r3, #48	; 0x30
   630d4:	beq	630e4 <__assert_fail@plt+0x509f8>
   630d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   630dc:	cmp	r3, #43	; 0x2b
   630e0:	bne	63108 <__assert_fail@plt+0x50a1c>
   630e4:	ldr	r2, [fp, #-268]	; 0xfffffef4
   630e8:	mov	r1, #48	; 0x30
   630ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   630f0:	bl	12434 <memset@plt>
   630f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   630f8:	ldr	r3, [fp, #-268]	; 0xfffffef4
   630fc:	add	r3, r2, r3
   63100:	str	r3, [fp, #-20]	; 0xffffffec
   63104:	b	63128 <__assert_fail@plt+0x50a3c>
   63108:	ldr	r2, [fp, #-268]	; 0xfffffef4
   6310c:	mov	r1, #32
   63110:	ldr	r0, [fp, #-20]	; 0xffffffec
   63114:	bl	12434 <memset@plt>
   63118:	ldr	r2, [fp, #-20]	; 0xffffffec
   6311c:	ldr	r3, [fp, #-268]	; 0xfffffef4
   63120:	add	r3, r2, r3
   63124:	str	r3, [fp, #-20]	; 0xffffffec
   63128:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   6312c:	cmp	r3, #0
   63130:	beq	6314c <__assert_fail@plt+0x50a60>
   63134:	sub	r3, fp, #396	; 0x18c
   63138:	ldr	r2, [fp, #-256]	; 0xffffff00
   6313c:	mov	r1, r3
   63140:	ldr	r0, [fp, #-20]	; 0xffffffec
   63144:	bl	617dc <__assert_fail@plt+0x4f0f0>
   63148:	b	63184 <__assert_fail@plt+0x50a98>
   6314c:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   63150:	cmp	r3, #0
   63154:	beq	63170 <__assert_fail@plt+0x50a84>
   63158:	sub	r3, fp, #396	; 0x18c
   6315c:	ldr	r2, [fp, #-256]	; 0xffffff00
   63160:	mov	r1, r3
   63164:	ldr	r0, [fp, #-20]	; 0xffffffec
   63168:	bl	61858 <__assert_fail@plt+0x4f16c>
   6316c:	b	63184 <__assert_fail@plt+0x50a98>
   63170:	sub	r3, fp, #396	; 0x18c
   63174:	ldr	r2, [fp, #-256]	; 0xffffff00
   63178:	mov	r1, r3
   6317c:	ldr	r0, [fp, #-20]	; 0xffffffec
   63180:	bl	120f8 <memcpy@plt>
   63184:	ldr	r2, [fp, #-20]	; 0xffffffec
   63188:	ldr	r3, [fp, #-256]	; 0xffffff00
   6318c:	add	r3, r2, r3
   63190:	str	r3, [fp, #-20]	; 0xffffffec
   63194:	ldr	r2, [fp, #-16]
   63198:	ldr	r3, [fp, #-264]	; 0xfffffef8
   6319c:	add	r3, r2, r3
   631a0:	str	r3, [fp, #-16]
   631a4:	mov	r3, #0
   631a8:	str	r3, [fp, #-272]	; 0xfffffef0
   631ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   631b0:	cmp	r3, #45	; 0x2d
   631b4:	beq	631dc <__assert_fail@plt+0x50af0>
   631b8:	ldr	r2, [fp, #12]
   631bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   631c0:	sub	r3, r2, r3
   631c4:	cmp	r3, #0
   631c8:	blt	631dc <__assert_fail@plt+0x50af0>
   631cc:	ldr	r2, [fp, #12]
   631d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   631d4:	sub	r3, r2, r3
   631d8:	b	631e0 <__assert_fail@plt+0x50af4>
   631dc:	mov	r3, #0
   631e0:	str	r3, [fp, #-276]	; 0xfffffeec
   631e4:	ldr	r2, [fp, #-272]	; 0xfffffef0
   631e8:	ldr	r3, [fp, #-276]	; 0xfffffeec
   631ec:	cmp	r2, r3
   631f0:	movcs	r3, r2
   631f4:	movcc	r3, r3
   631f8:	str	r3, [fp, #-280]	; 0xfffffee8
   631fc:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   63200:	ldr	r3, [fp, #-16]
   63204:	sub	r3, r2, r3
   63208:	ldr	r2, [fp, #-280]	; 0xfffffee8
   6320c:	cmp	r2, r3
   63210:	bcc	6322c <__assert_fail@plt+0x50b40>
   63214:	bl	12404 <__errno_location@plt>
   63218:	mov	r2, r0
   6321c:	mov	r3, #34	; 0x22
   63220:	str	r3, [r2]
   63224:	mov	r3, #0
   63228:	b	64360 <__assert_fail@plt+0x51c74>
   6322c:	ldr	r3, [fp, #-20]	; 0xffffffec
   63230:	cmp	r3, #0
   63234:	beq	632c4 <__assert_fail@plt+0x50bd8>
   63238:	ldr	r2, [fp, #-272]	; 0xfffffef0
   6323c:	ldr	r3, [fp, #-276]	; 0xfffffeec
   63240:	cmp	r2, r3
   63244:	bcs	632b4 <__assert_fail@plt+0x50bc8>
   63248:	ldr	r2, [fp, #-276]	; 0xfffffeec
   6324c:	ldr	r3, [fp, #-272]	; 0xfffffef0
   63250:	sub	r3, r2, r3
   63254:	str	r3, [fp, #-284]	; 0xfffffee4
   63258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6325c:	cmp	r3, #48	; 0x30
   63260:	beq	63270 <__assert_fail@plt+0x50b84>
   63264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63268:	cmp	r3, #43	; 0x2b
   6326c:	bne	63294 <__assert_fail@plt+0x50ba8>
   63270:	ldr	r2, [fp, #-284]	; 0xfffffee4
   63274:	mov	r1, #48	; 0x30
   63278:	ldr	r0, [fp, #-20]	; 0xffffffec
   6327c:	bl	12434 <memset@plt>
   63280:	ldr	r2, [fp, #-20]	; 0xffffffec
   63284:	ldr	r3, [fp, #-284]	; 0xfffffee4
   63288:	add	r3, r2, r3
   6328c:	str	r3, [fp, #-20]	; 0xffffffec
   63290:	b	632b4 <__assert_fail@plt+0x50bc8>
   63294:	ldr	r2, [fp, #-284]	; 0xfffffee4
   63298:	mov	r1, #32
   6329c:	ldr	r0, [fp, #-20]	; 0xffffffec
   632a0:	bl	12434 <memset@plt>
   632a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   632a8:	ldr	r3, [fp, #-284]	; 0xfffffee4
   632ac:	add	r3, r2, r3
   632b0:	str	r3, [fp, #-20]	; 0xffffffec
   632b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   632b8:	ldr	r3, [fp, #-272]	; 0xfffffef0
   632bc:	add	r3, r2, r3
   632c0:	str	r3, [fp, #-20]	; 0xffffffec
   632c4:	ldr	r2, [fp, #-16]
   632c8:	ldr	r3, [fp, #-280]	; 0xfffffee8
   632cc:	add	r3, r2, r3
   632d0:	str	r3, [fp, #-16]
   632d4:	b	64304 <__assert_fail@plt+0x51c18>
   632d8:	mov	r3, #1
   632dc:	str	r3, [fp, #-288]	; 0xfffffee0
   632e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   632e4:	cmp	r3, #45	; 0x2d
   632e8:	beq	63300 <__assert_fail@plt+0x50c14>
   632ec:	ldr	r3, [fp, #12]
   632f0:	cmp	r3, #0
   632f4:	blt	63300 <__assert_fail@plt+0x50c14>
   632f8:	ldr	r3, [fp, #12]
   632fc:	b	63304 <__assert_fail@plt+0x50c18>
   63300:	mov	r3, #0
   63304:	str	r3, [fp, #-292]	; 0xfffffedc
   63308:	ldr	r2, [fp, #-288]	; 0xfffffee0
   6330c:	ldr	r3, [fp, #-292]	; 0xfffffedc
   63310:	cmp	r2, r3
   63314:	movcs	r3, r2
   63318:	movcc	r3, r3
   6331c:	str	r3, [fp, #-296]	; 0xfffffed8
   63320:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   63324:	ldr	r3, [fp, #-16]
   63328:	sub	r3, r2, r3
   6332c:	ldr	r2, [fp, #-296]	; 0xfffffed8
   63330:	cmp	r2, r3
   63334:	bcc	63350 <__assert_fail@plt+0x50c64>
   63338:	bl	12404 <__errno_location@plt>
   6333c:	mov	r2, r0
   63340:	mov	r3, #34	; 0x22
   63344:	str	r3, [r2]
   63348:	mov	r3, #0
   6334c:	b	64360 <__assert_fail@plt+0x51c74>
   63350:	ldr	r3, [fp, #-20]	; 0xffffffec
   63354:	cmp	r3, #0
   63358:	beq	633f4 <__assert_fail@plt+0x50d08>
   6335c:	ldr	r2, [fp, #-288]	; 0xfffffee0
   63360:	ldr	r3, [fp, #-292]	; 0xfffffedc
   63364:	cmp	r2, r3
   63368:	bcs	633d8 <__assert_fail@plt+0x50cec>
   6336c:	ldr	r2, [fp, #-292]	; 0xfffffedc
   63370:	ldr	r3, [fp, #-288]	; 0xfffffee0
   63374:	sub	r3, r2, r3
   63378:	str	r3, [fp, #-300]	; 0xfffffed4
   6337c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63380:	cmp	r3, #48	; 0x30
   63384:	beq	63394 <__assert_fail@plt+0x50ca8>
   63388:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6338c:	cmp	r3, #43	; 0x2b
   63390:	bne	633b8 <__assert_fail@plt+0x50ccc>
   63394:	ldr	r2, [fp, #-300]	; 0xfffffed4
   63398:	mov	r1, #48	; 0x30
   6339c:	ldr	r0, [fp, #-20]	; 0xffffffec
   633a0:	bl	12434 <memset@plt>
   633a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   633a8:	ldr	r3, [fp, #-300]	; 0xfffffed4
   633ac:	add	r3, r2, r3
   633b0:	str	r3, [fp, #-20]	; 0xffffffec
   633b4:	b	633d8 <__assert_fail@plt+0x50cec>
   633b8:	ldr	r2, [fp, #-300]	; 0xfffffed4
   633bc:	mov	r1, #32
   633c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   633c4:	bl	12434 <memset@plt>
   633c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   633cc:	ldr	r3, [fp, #-300]	; 0xfffffed4
   633d0:	add	r3, r2, r3
   633d4:	str	r3, [fp, #-20]	; 0xffffffec
   633d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   633dc:	mov	r2, #10
   633e0:	strb	r2, [r3]
   633e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   633e8:	ldr	r3, [fp, #-288]	; 0xfffffee0
   633ec:	add	r3, r2, r3
   633f0:	str	r3, [fp, #-20]	; 0xffffffec
   633f4:	ldr	r2, [fp, #-16]
   633f8:	ldr	r3, [fp, #-296]	; 0xfffffed8
   633fc:	add	r3, r2, r3
   63400:	str	r3, [fp, #-16]
   63404:	b	64304 <__assert_fail@plt+0x51c18>
   63408:	mov	r3, #1
   6340c:	strb	r3, [fp, #-61]	; 0xffffffc3
   63410:	mov	r3, #112	; 0x70
   63414:	str	r3, [fp, #-76]	; 0xffffffb4
   63418:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   6341c:	cmp	r3, #0
   63420:	beq	6246c <__assert_fail@plt+0x4fd80>
   63424:	mov	r3, #0
   63428:	strb	r3, [fp, #-62]	; 0xffffffc2
   6342c:	mov	r3, #1
   63430:	strb	r3, [fp, #-61]	; 0xffffffc3
   63434:	b	6246c <__assert_fail@plt+0x4fd80>
   63438:	mov	r3, #1
   6343c:	str	r3, [fp, #-36]	; 0xffffffdc
   63440:	mov	r3, #0
   63444:	strb	r3, [fp, #-45]	; 0xffffffd3
   63448:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6344c:	ldr	r3, [r3, #16]
   63450:	mov	r2, #11
   63454:	mul	r3, r2, r3
   63458:	asr	r3, r3, #5
   6345c:	add	r3, r3, #1
   63460:	str	r3, [fp, #-44]	; 0xffffffd4
   63464:	b	6289c <__assert_fail@plt+0x501b0>
   63468:	movw	r3, #48280	; 0xbc98
   6346c:	movt	r3, #6
   63470:	str	r3, [fp, #-56]	; 0xffffffc8
   63474:	b	62264 <__assert_fail@plt+0x4fb78>
   63478:	ldr	r3, [fp, #-32]	; 0xffffffe0
   6347c:	cmp	r3, #69	; 0x45
   63480:	beq	64138 <__assert_fail@plt+0x51a4c>
   63484:	mov	r3, #2
   63488:	str	r3, [fp, #-36]	; 0xffffffdc
   6348c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63490:	ldr	r3, [r3]
   63494:	str	r3, [fp, #-40]	; 0xffffffd8
   63498:	b	62888 <__assert_fail@plt+0x5019c>
   6349c:	ldr	r2, [fp, #-1444]	; 0xfffffa5c
   634a0:	sub	r3, fp, #1424	; 0x590
   634a4:	sub	r3, r3, #4
   634a8:	ldrd	r0, [r2]
   634ac:	strd	r0, [r3]
   634b0:	ldrd	r0, [r2, #8]
   634b4:	strd	r0, [r3, #8]
   634b8:	ldrd	r0, [r2, #16]
   634bc:	strd	r0, [r3, #16]
   634c0:	ldrd	r0, [r2, #24]
   634c4:	strd	r0, [r3, #24]
   634c8:	ldrd	r0, [r2, #32]
   634cc:	strd	r0, [r3, #32]
   634d0:	ldr	r2, [r2, #40]	; 0x28
   634d4:	str	r2, [r3, #40]	; 0x28
   634d8:	mvn	r3, #0
   634dc:	str	r3, [fp, #-1400]	; 0xfffffa88
   634e0:	sub	r3, fp, #1424	; 0x590
   634e4:	sub	r3, r3, #4
   634e8:	mov	r1, r3
   634ec:	ldr	r0, [fp, #20]
   634f0:	bl	5f484 <__assert_fail@plt+0x4cd98>
   634f4:	str	r0, [fp, #-100]	; 0xffffff9c
   634f8:	ldr	r3, [fp, #-1400]	; 0xfffffa88
   634fc:	cmp	r3, #0
   63500:	bge	6351c <__assert_fail@plt+0x50e30>
   63504:	bl	12404 <__errno_location@plt>
   63508:	mov	r2, r0
   6350c:	mov	r3, #75	; 0x4b
   63510:	str	r3, [r2]
   63514:	mov	r3, #0
   63518:	b	64360 <__assert_fail@plt+0x51c74>
   6351c:	sub	r3, fp, #396	; 0x18c
   63520:	add	r3, r3, #14
   63524:	str	r3, [fp, #-60]	; 0xffffffc4
   63528:	ldr	r3, [fp, #-100]	; 0xffffff9c
   6352c:	lsr	r3, r3, #31
   63530:	strb	r3, [fp, #-45]	; 0xffffffd3
   63534:	ldr	r2, [fp, #-100]	; 0xffffff9c
   63538:	movw	r3, #26215	; 0x6667
   6353c:	movt	r3, #26214	; 0x6666
   63540:	smull	r1, r3, r3, r2
   63544:	asr	r1, r3, #2
   63548:	asr	r3, r2, #31
   6354c:	sub	r1, r1, r3
   63550:	mov	r3, r1
   63554:	lsl	r3, r3, #2
   63558:	add	r3, r3, r1
   6355c:	lsl	r3, r3, #1
   63560:	sub	r3, r2, r3
   63564:	str	r3, [fp, #-304]	; 0xfffffed0
   63568:	ldr	r2, [fp, #-100]	; 0xffffff9c
   6356c:	movw	r3, #26215	; 0x6667
   63570:	movt	r3, #26214	; 0x6666
   63574:	smull	r1, r3, r3, r2
   63578:	asr	r1, r3, #2
   6357c:	asr	r3, r2, #31
   63580:	sub	r3, r1, r3
   63584:	str	r3, [fp, #-100]	; 0xffffff9c
   63588:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   6358c:	cmp	r3, #0
   63590:	beq	635a8 <__assert_fail@plt+0x50ebc>
   63594:	ldr	r3, [fp, #-304]	; 0xfffffed0
   63598:	uxtb	r3, r3
   6359c:	rsb	r3, r3, #48	; 0x30
   635a0:	uxtb	r3, r3
   635a4:	b	635b8 <__assert_fail@plt+0x50ecc>
   635a8:	ldr	r3, [fp, #-304]	; 0xfffffed0
   635ac:	uxtb	r3, r3
   635b0:	add	r3, r3, #48	; 0x30
   635b4:	uxtb	r3, r3
   635b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   635bc:	sub	r2, r2, #1
   635c0:	str	r2, [fp, #-60]	; 0xffffffc4
   635c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   635c8:	strb	r3, [r2]
   635cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   635d0:	cmp	r3, #0
   635d4:	bne	63534 <__assert_fail@plt+0x50e48>
   635d8:	mov	r3, #1
   635dc:	str	r3, [fp, #-36]	; 0xffffffdc
   635e0:	mov	r3, #0
   635e4:	strb	r3, [fp, #-46]	; 0xffffffd2
   635e8:	b	629a0 <__assert_fail@plt+0x502b4>
   635ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   635f0:	cmp	r3, #79	; 0x4f
   635f4:	bne	62474 <__assert_fail@plt+0x4fd88>
   635f8:	b	64174 <__assert_fail@plt+0x51a88>
   635fc:	movw	r3, #48288	; 0xbca0
   63600:	movt	r3, #6
   63604:	str	r3, [fp, #-56]	; 0xffffffc8
   63608:	b	62264 <__assert_fail@plt+0x4fb78>
   6360c:	mov	r3, #1
   63610:	str	r3, [fp, #-308]	; 0xfffffecc
   63614:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63618:	cmp	r3, #45	; 0x2d
   6361c:	beq	63634 <__assert_fail@plt+0x50f48>
   63620:	ldr	r3, [fp, #12]
   63624:	cmp	r3, #0
   63628:	blt	63634 <__assert_fail@plt+0x50f48>
   6362c:	ldr	r3, [fp, #12]
   63630:	b	63638 <__assert_fail@plt+0x50f4c>
   63634:	mov	r3, #0
   63638:	str	r3, [fp, #-312]	; 0xfffffec8
   6363c:	ldr	r2, [fp, #-308]	; 0xfffffecc
   63640:	ldr	r3, [fp, #-312]	; 0xfffffec8
   63644:	cmp	r2, r3
   63648:	movcs	r3, r2
   6364c:	movcc	r3, r3
   63650:	str	r3, [fp, #-316]	; 0xfffffec4
   63654:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   63658:	ldr	r3, [fp, #-16]
   6365c:	sub	r3, r2, r3
   63660:	ldr	r2, [fp, #-316]	; 0xfffffec4
   63664:	cmp	r2, r3
   63668:	bcc	63684 <__assert_fail@plt+0x50f98>
   6366c:	bl	12404 <__errno_location@plt>
   63670:	mov	r2, r0
   63674:	mov	r3, #34	; 0x22
   63678:	str	r3, [r2]
   6367c:	mov	r3, #0
   63680:	b	64360 <__assert_fail@plt+0x51c74>
   63684:	ldr	r3, [fp, #-20]	; 0xffffffec
   63688:	cmp	r3, #0
   6368c:	beq	63728 <__assert_fail@plt+0x5103c>
   63690:	ldr	r2, [fp, #-308]	; 0xfffffecc
   63694:	ldr	r3, [fp, #-312]	; 0xfffffec8
   63698:	cmp	r2, r3
   6369c:	bcs	6370c <__assert_fail@plt+0x51020>
   636a0:	ldr	r2, [fp, #-312]	; 0xfffffec8
   636a4:	ldr	r3, [fp, #-308]	; 0xfffffecc
   636a8:	sub	r3, r2, r3
   636ac:	str	r3, [fp, #-320]	; 0xfffffec0
   636b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   636b4:	cmp	r3, #48	; 0x30
   636b8:	beq	636c8 <__assert_fail@plt+0x50fdc>
   636bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   636c0:	cmp	r3, #43	; 0x2b
   636c4:	bne	636ec <__assert_fail@plt+0x51000>
   636c8:	ldr	r2, [fp, #-320]	; 0xfffffec0
   636cc:	mov	r1, #48	; 0x30
   636d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   636d4:	bl	12434 <memset@plt>
   636d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   636dc:	ldr	r3, [fp, #-320]	; 0xfffffec0
   636e0:	add	r3, r2, r3
   636e4:	str	r3, [fp, #-20]	; 0xffffffec
   636e8:	b	6370c <__assert_fail@plt+0x51020>
   636ec:	ldr	r2, [fp, #-320]	; 0xfffffec0
   636f0:	mov	r1, #32
   636f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   636f8:	bl	12434 <memset@plt>
   636fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   63700:	ldr	r3, [fp, #-320]	; 0xfffffec0
   63704:	add	r3, r2, r3
   63708:	str	r3, [fp, #-20]	; 0xffffffec
   6370c:	ldr	r3, [fp, #-20]	; 0xffffffec
   63710:	mov	r2, #9
   63714:	strb	r2, [r3]
   63718:	ldr	r2, [fp, #-20]	; 0xffffffec
   6371c:	ldr	r3, [fp, #-308]	; 0xfffffecc
   63720:	add	r3, r2, r3
   63724:	str	r3, [fp, #-20]	; 0xffffffec
   63728:	ldr	r2, [fp, #-16]
   6372c:	ldr	r3, [fp, #-316]	; 0xfffffec4
   63730:	add	r3, r2, r3
   63734:	str	r3, [fp, #-16]
   63738:	b	64304 <__assert_fail@plt+0x51c18>
   6373c:	mov	r3, #1
   63740:	str	r3, [fp, #-36]	; 0xffffffdc
   63744:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63748:	ldr	r3, [r3, #24]
   6374c:	add	r3, r3, #6
   63750:	movw	r2, #9363	; 0x2493
   63754:	movt	r2, #37449	; 0x9249
   63758:	smull	r1, r2, r2, r3
   6375c:	add	r2, r2, r3
   63760:	asr	r1, r2, #2
   63764:	asr	r2, r3, #31
   63768:	sub	r1, r1, r2
   6376c:	mov	r2, r1
   63770:	lsl	r2, r2, #3
   63774:	sub	r2, r2, r1
   63778:	sub	r1, r3, r2
   6377c:	add	r3, r1, #1
   63780:	str	r3, [fp, #-40]	; 0xffffffd8
   63784:	b	62888 <__assert_fail@plt+0x5019c>
   63788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   6378c:	cmp	r3, #69	; 0x45
   63790:	beq	64140 <__assert_fail@plt+0x51a54>
   63794:	mov	r3, #2
   63798:	str	r3, [fp, #-36]	; 0xffffffdc
   6379c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   637a0:	ldr	r2, [r3, #28]
   637a4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   637a8:	ldr	r3, [r3, #24]
   637ac:	sub	r3, r2, r3
   637b0:	add	r3, r3, #7
   637b4:	movw	r2, #9363	; 0x2493
   637b8:	movt	r2, #37449	; 0x9249
   637bc:	smull	r1, r2, r2, r3
   637c0:	add	r2, r2, r3
   637c4:	asr	r2, r2, #2
   637c8:	asr	r3, r3, #31
   637cc:	sub	r3, r2, r3
   637d0:	str	r3, [fp, #-40]	; 0xffffffd8
   637d4:	b	62888 <__assert_fail@plt+0x5019c>
   637d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   637dc:	cmp	r3, #69	; 0x45
   637e0:	beq	64148 <__assert_fail@plt+0x51a5c>
   637e4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   637e8:	ldr	r3, [r3, #20]
   637ec:	ldr	r2, [fp, #-1444]	; 0xfffffa5c
   637f0:	ldr	r2, [r2, #20]
   637f4:	cmp	r2, #0
   637f8:	bge	63804 <__assert_fail@plt+0x51118>
   637fc:	mov	r2, #300	; 0x12c
   63800:	b	63808 <__assert_fail@plt+0x5111c>
   63804:	mvn	r2, #99	; 0x63
   63808:	add	r3, r2, r3
   6380c:	str	r3, [fp, #-324]	; 0xfffffebc
   63810:	mov	r3, #0
   63814:	str	r3, [fp, #-104]	; 0xffffff98
   63818:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   6381c:	ldr	r2, [r3, #28]
   63820:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63824:	ldr	r3, [r3, #24]
   63828:	mov	r1, r3
   6382c:	mov	r0, r2
   63830:	bl	618d4 <__assert_fail@plt+0x4f1e8>
   63834:	str	r0, [fp, #-108]	; 0xffffff94
   63838:	ldr	r3, [fp, #-108]	; 0xffffff94
   6383c:	cmp	r3, #0
   63840:	bge	63904 <__assert_fail@plt+0x51218>
   63844:	mvn	r3, #0
   63848:	str	r3, [fp, #-104]	; 0xffffff98
   6384c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63850:	ldr	r1, [r3, #28]
   63854:	ldr	r3, [fp, #-324]	; 0xfffffebc
   63858:	sub	r3, r3, #1
   6385c:	and	r3, r3, #3
   63860:	cmp	r3, #0
   63864:	bne	638d8 <__assert_fail@plt+0x511ec>
   63868:	ldr	r3, [fp, #-324]	; 0xfffffebc
   6386c:	sub	r2, r3, #1
   63870:	movw	r3, #34079	; 0x851f
   63874:	movt	r3, #20971	; 0x51eb
   63878:	smull	r0, r3, r3, r2
   6387c:	asr	r0, r3, #5
   63880:	asr	r3, r2, #31
   63884:	sub	r3, r0, r3
   63888:	mov	r0, #100	; 0x64
   6388c:	mul	r3, r0, r3
   63890:	sub	r3, r2, r3
   63894:	cmp	r3, #0
   63898:	bne	638d0 <__assert_fail@plt+0x511e4>
   6389c:	ldr	r3, [fp, #-324]	; 0xfffffebc
   638a0:	sub	r2, r3, #1
   638a4:	movw	r3, #34079	; 0x851f
   638a8:	movt	r3, #20971	; 0x51eb
   638ac:	smull	r0, r3, r3, r2
   638b0:	asr	r0, r3, #7
   638b4:	asr	r3, r2, #31
   638b8:	sub	r3, r0, r3
   638bc:	mov	r0, #400	; 0x190
   638c0:	mul	r3, r0, r3
   638c4:	sub	r3, r2, r3
   638c8:	cmp	r3, #0
   638cc:	bne	638d8 <__assert_fail@plt+0x511ec>
   638d0:	mov	r3, #1
   638d4:	b	638dc <__assert_fail@plt+0x511f0>
   638d8:	mov	r3, #0
   638dc:	add	r3, r3, #364	; 0x16c
   638e0:	add	r3, r3, #1
   638e4:	add	r2, r1, r3
   638e8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   638ec:	ldr	r3, [r3, #24]
   638f0:	mov	r1, r3
   638f4:	mov	r0, r2
   638f8:	bl	618d4 <__assert_fail@plt+0x4f1e8>
   638fc:	str	r0, [fp, #-108]	; 0xffffff94
   63900:	b	639c8 <__assert_fail@plt+0x512dc>
   63904:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63908:	ldr	r1, [r3, #28]
   6390c:	ldr	r3, [fp, #-324]	; 0xfffffebc
   63910:	and	r3, r3, #3
   63914:	cmp	r3, #0
   63918:	bne	63984 <__assert_fail@plt+0x51298>
   6391c:	ldr	r2, [fp, #-324]	; 0xfffffebc
   63920:	movw	r3, #34079	; 0x851f
   63924:	movt	r3, #20971	; 0x51eb
   63928:	smull	r0, r3, r3, r2
   6392c:	asr	r0, r3, #5
   63930:	asr	r3, r2, #31
   63934:	sub	r3, r0, r3
   63938:	mov	r0, #100	; 0x64
   6393c:	mul	r3, r0, r3
   63940:	sub	r3, r2, r3
   63944:	cmp	r3, #0
   63948:	bne	6397c <__assert_fail@plt+0x51290>
   6394c:	ldr	r2, [fp, #-324]	; 0xfffffebc
   63950:	movw	r3, #34079	; 0x851f
   63954:	movt	r3, #20971	; 0x51eb
   63958:	smull	r0, r3, r3, r2
   6395c:	asr	r0, r3, #7
   63960:	asr	r3, r2, #31
   63964:	sub	r3, r0, r3
   63968:	mov	r0, #400	; 0x190
   6396c:	mul	r3, r0, r3
   63970:	sub	r3, r2, r3
   63974:	cmp	r3, #0
   63978:	bne	63984 <__assert_fail@plt+0x51298>
   6397c:	mov	r3, #1
   63980:	b	63988 <__assert_fail@plt+0x5129c>
   63984:	mov	r3, #0
   63988:	add	r3, r3, #364	; 0x16c
   6398c:	add	r3, r3, #1
   63990:	sub	r2, r1, r3
   63994:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63998:	ldr	r3, [r3, #24]
   6399c:	mov	r1, r3
   639a0:	mov	r0, r2
   639a4:	bl	618d4 <__assert_fail@plt+0x4f1e8>
   639a8:	str	r0, [fp, #-328]	; 0xfffffeb8
   639ac:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   639b0:	cmp	r3, #0
   639b4:	blt	639c8 <__assert_fail@plt+0x512dc>
   639b8:	mov	r3, #1
   639bc:	str	r3, [fp, #-104]	; 0xffffff98
   639c0:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   639c4:	str	r3, [fp, #-108]	; 0xffffff94
   639c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   639cc:	ldrb	r3, [r3]
   639d0:	cmp	r3, #71	; 0x47
   639d4:	beq	63a9c <__assert_fail@plt+0x513b0>
   639d8:	cmp	r3, #103	; 0x67
   639dc:	bne	63af0 <__assert_fail@plt+0x51404>
   639e0:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   639e4:	ldr	r2, [r3, #20]
   639e8:	movw	r3, #34079	; 0x851f
   639ec:	movt	r3, #20971	; 0x51eb
   639f0:	smull	r1, r3, r3, r2
   639f4:	asr	r1, r3, #5
   639f8:	asr	r3, r2, #31
   639fc:	sub	r3, r1, r3
   63a00:	mov	r1, #100	; 0x64
   63a04:	mul	r3, r1, r3
   63a08:	sub	r3, r2, r3
   63a0c:	ldr	r2, [fp, #-104]	; 0xffffff98
   63a10:	add	r3, r3, r2
   63a14:	movw	r2, #34079	; 0x851f
   63a18:	movt	r2, #20971	; 0x51eb
   63a1c:	smull	r1, r2, r2, r3
   63a20:	asr	r1, r2, #5
   63a24:	asr	r2, r3, #31
   63a28:	sub	r2, r1, r2
   63a2c:	mov	r1, #100	; 0x64
   63a30:	mul	r2, r1, r2
   63a34:	sub	r3, r3, r2
   63a38:	str	r3, [fp, #-332]	; 0xfffffeb4
   63a3c:	mov	r3, #2
   63a40:	str	r3, [fp, #-36]	; 0xffffffdc
   63a44:	mov	r3, #0
   63a48:	strb	r3, [fp, #-45]	; 0xffffffd3
   63a4c:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   63a50:	cmp	r3, #0
   63a54:	bge	63a90 <__assert_fail@plt+0x513a4>
   63a58:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63a5c:	ldr	r2, [r3, #20]
   63a60:	ldr	r1, [fp, #-104]	; 0xffffff98
   63a64:	movw	r3, #63636	; 0xf894
   63a68:	movt	r3, #65535	; 0xffff
   63a6c:	sub	r3, r3, r1
   63a70:	cmp	r2, r3
   63a74:	bge	63a84 <__assert_fail@plt+0x51398>
   63a78:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   63a7c:	rsb	r3, r3, #0
   63a80:	b	63a94 <__assert_fail@plt+0x513a8>
   63a84:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   63a88:	add	r3, r3, #100	; 0x64
   63a8c:	b	63a94 <__assert_fail@plt+0x513a8>
   63a90:	ldr	r3, [fp, #-332]	; 0xfffffeb4
   63a94:	str	r3, [fp, #-44]	; 0xffffffd4
   63a98:	b	627f8 <__assert_fail@plt+0x5010c>
   63a9c:	mov	r3, #4
   63aa0:	str	r3, [fp, #-36]	; 0xffffffdc
   63aa4:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63aa8:	ldr	r2, [r3, #20]
   63aac:	ldr	r1, [fp, #-104]	; 0xffffff98
   63ab0:	movw	r3, #63636	; 0xf894
   63ab4:	movt	r3, #65535	; 0xffff
   63ab8:	sub	r3, r3, r1
   63abc:	cmp	r2, r3
   63ac0:	movlt	r3, #1
   63ac4:	movge	r3, #0
   63ac8:	strb	r3, [fp, #-45]	; 0xffffffd3
   63acc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63ad0:	ldr	r3, [r3, #20]
   63ad4:	mov	r2, r3
   63ad8:	ldr	r3, [fp, #-104]	; 0xffffff98
   63adc:	add	r3, r2, r3
   63ae0:	add	r3, r3, #1888	; 0x760
   63ae4:	add	r3, r3, #12
   63ae8:	str	r3, [fp, #-44]	; 0xffffffd4
   63aec:	b	627f8 <__assert_fail@plt+0x5010c>
   63af0:	mov	r3, #2
   63af4:	str	r3, [fp, #-36]	; 0xffffffdc
   63af8:	ldr	r3, [fp, #-108]	; 0xffffff94
   63afc:	movw	r2, #9363	; 0x2493
   63b00:	movt	r2, #37449	; 0x9249
   63b04:	smull	r1, r2, r2, r3
   63b08:	add	r2, r2, r3
   63b0c:	asr	r2, r2, #2
   63b10:	asr	r3, r3, #31
   63b14:	sub	r3, r2, r3
   63b18:	add	r3, r3, #1
   63b1c:	str	r3, [fp, #-40]	; 0xffffffd8
   63b20:	b	62888 <__assert_fail@plt+0x5019c>
   63b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   63b28:	cmp	r3, #69	; 0x45
   63b2c:	beq	64150 <__assert_fail@plt+0x51a64>
   63b30:	mov	r3, #2
   63b34:	str	r3, [fp, #-36]	; 0xffffffdc
   63b38:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63b3c:	ldr	r0, [r3, #28]
   63b40:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63b44:	ldr	r3, [r3, #24]
   63b48:	add	r3, r3, #6
   63b4c:	movw	r2, #9363	; 0x2493
   63b50:	movt	r2, #37449	; 0x9249
   63b54:	smull	r1, r2, r2, r3
   63b58:	add	r2, r2, r3
   63b5c:	asr	r1, r2, #2
   63b60:	asr	r2, r3, #31
   63b64:	sub	r1, r1, r2
   63b68:	mov	r2, r1
   63b6c:	lsl	r2, r2, #3
   63b70:	sub	r2, r2, r1
   63b74:	sub	r1, r3, r2
   63b78:	sub	r3, r0, r1
   63b7c:	add	r3, r3, #7
   63b80:	movw	r2, #9363	; 0x2493
   63b84:	movt	r2, #37449	; 0x9249
   63b88:	smull	r1, r2, r2, r3
   63b8c:	add	r2, r2, r3
   63b90:	asr	r2, r2, #2
   63b94:	asr	r3, r3, #31
   63b98:	sub	r3, r2, r3
   63b9c:	str	r3, [fp, #-40]	; 0xffffffd8
   63ba0:	b	62888 <__assert_fail@plt+0x5019c>
   63ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   63ba8:	cmp	r3, #69	; 0x45
   63bac:	beq	64158 <__assert_fail@plt+0x51a6c>
   63bb0:	mov	r3, #1
   63bb4:	str	r3, [fp, #-36]	; 0xffffffdc
   63bb8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63bbc:	ldr	r3, [r3, #24]
   63bc0:	str	r3, [fp, #-40]	; 0xffffffd8
   63bc4:	b	62888 <__assert_fail@plt+0x5019c>
   63bc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   63bcc:	cmp	r3, #69	; 0x45
   63bd0:	beq	6247c <__assert_fail@plt+0x4fd90>
   63bd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   63bd8:	cmp	r3, #79	; 0x4f
   63bdc:	beq	64160 <__assert_fail@plt+0x51a74>
   63be0:	mov	r3, #4
   63be4:	str	r3, [fp, #-36]	; 0xffffffdc
   63be8:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63bec:	ldr	r2, [r3, #20]
   63bf0:	movw	r3, #63636	; 0xf894
   63bf4:	movt	r3, #65535	; 0xffff
   63bf8:	cmp	r2, r3
   63bfc:	movlt	r3, #1
   63c00:	movge	r3, #0
   63c04:	strb	r3, [fp, #-45]	; 0xffffffd3
   63c08:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63c0c:	ldr	r3, [r3, #20]
   63c10:	add	r3, r3, #1888	; 0x760
   63c14:	add	r3, r3, #12
   63c18:	str	r3, [fp, #-44]	; 0xffffffd4
   63c1c:	b	627f8 <__assert_fail@plt+0x5010c>
   63c20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   63c24:	cmp	r3, #69	; 0x45
   63c28:	beq	62484 <__assert_fail@plt+0x4fd98>
   63c2c:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63c30:	ldr	r3, [r3, #20]
   63c34:	movw	r2, #34079	; 0x851f
   63c38:	movt	r2, #20971	; 0x51eb
   63c3c:	smull	r1, r2, r2, r3
   63c40:	asr	r1, r2, #5
   63c44:	asr	r2, r3, #31
   63c48:	sub	r2, r1, r2
   63c4c:	mov	r1, #100	; 0x64
   63c50:	mul	r2, r1, r2
   63c54:	sub	r3, r3, r2
   63c58:	str	r3, [fp, #-112]	; 0xffffff90
   63c5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   63c60:	cmp	r3, #0
   63c64:	bge	63c98 <__assert_fail@plt+0x515ac>
   63c68:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63c6c:	ldr	r2, [r3, #20]
   63c70:	movw	r3, #63636	; 0xf894
   63c74:	movt	r3, #65535	; 0xffff
   63c78:	cmp	r2, r3
   63c7c:	bge	63c8c <__assert_fail@plt+0x515a0>
   63c80:	ldr	r3, [fp, #-112]	; 0xffffff90
   63c84:	rsb	r3, r3, #0
   63c88:	b	63c94 <__assert_fail@plt+0x515a8>
   63c8c:	ldr	r3, [fp, #-112]	; 0xffffff90
   63c90:	add	r3, r3, #100	; 0x64
   63c94:	str	r3, [fp, #-112]	; 0xffffff90
   63c98:	mov	r3, #2
   63c9c:	str	r3, [fp, #-36]	; 0xffffffdc
   63ca0:	mov	r3, #0
   63ca4:	strb	r3, [fp, #-45]	; 0xffffffd3
   63ca8:	ldr	r3, [fp, #-112]	; 0xffffff90
   63cac:	str	r3, [fp, #-44]	; 0xffffffd4
   63cb0:	b	627f8 <__assert_fail@plt+0x5010c>
   63cb4:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   63cb8:	cmp	r3, #0
   63cbc:	beq	63cd0 <__assert_fail@plt+0x515e4>
   63cc0:	mov	r3, #0
   63cc4:	strb	r3, [fp, #-62]	; 0xffffffc2
   63cc8:	mov	r3, #1
   63ccc:	strb	r3, [fp, #-61]	; 0xffffffc3
   63cd0:	ldr	r0, [fp, #-12]
   63cd4:	bl	123bc <strlen@plt>
   63cd8:	str	r0, [fp, #-336]	; 0xfffffeb0
   63cdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63ce0:	cmp	r3, #45	; 0x2d
   63ce4:	beq	63cfc <__assert_fail@plt+0x51610>
   63ce8:	ldr	r3, [fp, #12]
   63cec:	cmp	r3, #0
   63cf0:	blt	63cfc <__assert_fail@plt+0x51610>
   63cf4:	ldr	r3, [fp, #12]
   63cf8:	b	63d00 <__assert_fail@plt+0x51614>
   63cfc:	mov	r3, #0
   63d00:	str	r3, [fp, #-340]	; 0xfffffeac
   63d04:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   63d08:	ldr	r3, [fp, #-340]	; 0xfffffeac
   63d0c:	cmp	r2, r3
   63d10:	movcs	r3, r2
   63d14:	movcc	r3, r3
   63d18:	str	r3, [fp, #-344]	; 0xfffffea8
   63d1c:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   63d20:	ldr	r3, [fp, #-16]
   63d24:	sub	r3, r2, r3
   63d28:	ldr	r2, [fp, #-344]	; 0xfffffea8
   63d2c:	cmp	r2, r3
   63d30:	bcc	63d4c <__assert_fail@plt+0x51660>
   63d34:	bl	12404 <__errno_location@plt>
   63d38:	mov	r2, r0
   63d3c:	mov	r3, #34	; 0x22
   63d40:	str	r3, [r2]
   63d44:	mov	r3, #0
   63d48:	b	64360 <__assert_fail@plt+0x51c74>
   63d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   63d50:	cmp	r3, #0
   63d54:	beq	63e34 <__assert_fail@plt+0x51748>
   63d58:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   63d5c:	ldr	r3, [fp, #-340]	; 0xfffffeac
   63d60:	cmp	r2, r3
   63d64:	bcs	63dd4 <__assert_fail@plt+0x516e8>
   63d68:	ldr	r2, [fp, #-340]	; 0xfffffeac
   63d6c:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   63d70:	sub	r3, r2, r3
   63d74:	str	r3, [fp, #-348]	; 0xfffffea4
   63d78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63d7c:	cmp	r3, #48	; 0x30
   63d80:	beq	63d90 <__assert_fail@plt+0x516a4>
   63d84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   63d88:	cmp	r3, #43	; 0x2b
   63d8c:	bne	63db4 <__assert_fail@plt+0x516c8>
   63d90:	ldr	r2, [fp, #-348]	; 0xfffffea4
   63d94:	mov	r1, #48	; 0x30
   63d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   63d9c:	bl	12434 <memset@plt>
   63da0:	ldr	r2, [fp, #-20]	; 0xffffffec
   63da4:	ldr	r3, [fp, #-348]	; 0xfffffea4
   63da8:	add	r3, r2, r3
   63dac:	str	r3, [fp, #-20]	; 0xffffffec
   63db0:	b	63dd4 <__assert_fail@plt+0x516e8>
   63db4:	ldr	r2, [fp, #-348]	; 0xfffffea4
   63db8:	mov	r1, #32
   63dbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   63dc0:	bl	12434 <memset@plt>
   63dc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   63dc8:	ldr	r3, [fp, #-348]	; 0xfffffea4
   63dcc:	add	r3, r2, r3
   63dd0:	str	r3, [fp, #-20]	; 0xffffffec
   63dd4:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   63dd8:	cmp	r3, #0
   63ddc:	beq	63df4 <__assert_fail@plt+0x51708>
   63de0:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   63de4:	ldr	r1, [fp, #-12]
   63de8:	ldr	r0, [fp, #-20]	; 0xffffffec
   63dec:	bl	617dc <__assert_fail@plt+0x4f0f0>
   63df0:	b	63e24 <__assert_fail@plt+0x51738>
   63df4:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   63df8:	cmp	r3, #0
   63dfc:	beq	63e14 <__assert_fail@plt+0x51728>
   63e00:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   63e04:	ldr	r1, [fp, #-12]
   63e08:	ldr	r0, [fp, #-20]	; 0xffffffec
   63e0c:	bl	61858 <__assert_fail@plt+0x4f16c>
   63e10:	b	63e24 <__assert_fail@plt+0x51738>
   63e14:	ldr	r2, [fp, #-336]	; 0xfffffeb0
   63e18:	ldr	r1, [fp, #-12]
   63e1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   63e20:	bl	120f8 <memcpy@plt>
   63e24:	ldr	r2, [fp, #-20]	; 0xffffffec
   63e28:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   63e2c:	add	r3, r2, r3
   63e30:	str	r3, [fp, #-20]	; 0xffffffec
   63e34:	ldr	r2, [fp, #-16]
   63e38:	ldr	r3, [fp, #-344]	; 0xfffffea8
   63e3c:	add	r3, r2, r3
   63e40:	str	r3, [fp, #-16]
   63e44:	b	64304 <__assert_fail@plt+0x51c18>
   63e48:	mov	r3, #1
   63e4c:	str	r3, [fp, #-68]	; 0xffffffbc
   63e50:	b	63e60 <__assert_fail@plt+0x51774>
   63e54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   63e58:	add	r3, r3, #1
   63e5c:	str	r3, [fp, #-68]	; 0xffffffbc
   63e60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   63e64:	ldr	r3, [fp, #-68]	; 0xffffffbc
   63e68:	add	r3, r2, r3
   63e6c:	ldrb	r3, [r3]
   63e70:	cmp	r3, #58	; 0x3a
   63e74:	beq	63e54 <__assert_fail@plt+0x51768>
   63e78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   63e7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   63e80:	add	r3, r2, r3
   63e84:	ldrb	r3, [r3]
   63e88:	cmp	r3, #122	; 0x7a
   63e8c:	bne	64168 <__assert_fail@plt+0x51a7c>
   63e90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   63e94:	ldr	r3, [fp, #-68]	; 0xffffffbc
   63e98:	add	r3, r2, r3
   63e9c:	str	r3, [fp, #-24]	; 0xffffffe8
   63ea0:	b	63eac <__assert_fail@plt+0x517c0>
   63ea4:	mov	r3, #0
   63ea8:	str	r3, [fp, #-68]	; 0xffffffbc
   63eac:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63eb0:	ldr	r3, [r3, #32]
   63eb4:	cmp	r3, #0
   63eb8:	blt	64300 <__assert_fail@plt+0x51c14>
   63ebc:	ldr	r3, [fp, #-1444]	; 0xfffffa5c
   63ec0:	ldr	r3, [r3, #36]	; 0x24
   63ec4:	str	r3, [fp, #-352]	; 0xfffffea0
   63ec8:	ldr	r3, [fp, #-352]	; 0xfffffea0
   63ecc:	cmp	r3, #0
   63ed0:	blt	63ef0 <__assert_fail@plt+0x51804>
   63ed4:	ldr	r3, [fp, #-352]	; 0xfffffea0
   63ed8:	cmp	r3, #0
   63edc:	bne	63ef8 <__assert_fail@plt+0x5180c>
   63ee0:	ldr	r3, [fp, #-12]
   63ee4:	ldrb	r3, [r3]
   63ee8:	cmp	r3, #45	; 0x2d
   63eec:	bne	63ef8 <__assert_fail@plt+0x5180c>
   63ef0:	mov	r3, #1
   63ef4:	b	63efc <__assert_fail@plt+0x51810>
   63ef8:	mov	r3, #0
   63efc:	strb	r3, [fp, #-45]	; 0xffffffd3
   63f00:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   63f04:	and	r3, r3, #1
   63f08:	strb	r3, [fp, #-45]	; 0xffffffd3
   63f0c:	ldr	r3, [fp, #-352]	; 0xfffffea0
   63f10:	movw	r2, #46021	; 0xb3c5
   63f14:	movt	r2, #37282	; 0x91a2
   63f18:	smull	r1, r2, r2, r3
   63f1c:	add	r2, r2, r3
   63f20:	asr	r2, r2, #11
   63f24:	asr	r3, r3, #31
   63f28:	sub	r3, r2, r3
   63f2c:	str	r3, [fp, #-356]	; 0xfffffe9c
   63f30:	ldr	r3, [fp, #-352]	; 0xfffffea0
   63f34:	movw	r2, #34953	; 0x8889
   63f38:	movt	r2, #34952	; 0x8888
   63f3c:	smull	r1, r2, r2, r3
   63f40:	add	r2, r2, r3
   63f44:	asr	r2, r2, #5
   63f48:	asr	r3, r3, #31
   63f4c:	sub	r2, r2, r3
   63f50:	movw	r3, #34953	; 0x8889
   63f54:	movt	r3, #34952	; 0x8888
   63f58:	smull	r1, r3, r3, r2
   63f5c:	add	r3, r3, r2
   63f60:	asr	r1, r3, #5
   63f64:	asr	r3, r2, #31
   63f68:	sub	r1, r1, r3
   63f6c:	mov	r3, r1
   63f70:	lsl	r3, r3, #4
   63f74:	sub	r3, r3, r1
   63f78:	lsl	r3, r3, #2
   63f7c:	sub	r3, r2, r3
   63f80:	str	r3, [fp, #-360]	; 0xfffffe98
   63f84:	ldr	r2, [fp, #-352]	; 0xfffffea0
   63f88:	movw	r3, #34953	; 0x8889
   63f8c:	movt	r3, #34952	; 0x8888
   63f90:	smull	r1, r3, r3, r2
   63f94:	add	r3, r3, r2
   63f98:	asr	r1, r3, #5
   63f9c:	asr	r3, r2, #31
   63fa0:	sub	r1, r1, r3
   63fa4:	mov	r3, r1
   63fa8:	lsl	r3, r3, #4
   63fac:	sub	r3, r3, r1
   63fb0:	lsl	r3, r3, #2
   63fb4:	sub	r3, r2, r3
   63fb8:	str	r3, [fp, #-364]	; 0xfffffe94
   63fbc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   63fc0:	cmp	r3, #3
   63fc4:	ldrls	pc, [pc, r3, lsl #2]
   63fc8:	b	64170 <__assert_fail@plt+0x51a84>
   63fcc:	ldrdeq	r3, [r6], -ip
   63fd0:	andeq	r4, r6, ip
   63fd4:	andeq	r4, r6, ip, lsr r0
   63fd8:	andeq	r4, r6, r8, ror r0
   63fdc:	mov	r3, #5
   63fe0:	str	r3, [fp, #-36]	; 0xffffffdc
   63fe4:	mov	r3, #0
   63fe8:	str	r3, [fp, #-52]	; 0xffffffcc
   63fec:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   63ff0:	mov	r2, #100	; 0x64
   63ff4:	mul	r2, r2, r3
   63ff8:	ldr	r3, [fp, #-360]	; 0xfffffe98
   63ffc:	add	r3, r2, r3
   64000:	str	r3, [fp, #-44]	; 0xffffffd4
   64004:	b	627ec <__assert_fail@plt+0x50100>
   64008:	nop	{0}
   6400c:	mov	r3, #6
   64010:	str	r3, [fp, #-36]	; 0xffffffdc
   64014:	mov	r3, #4
   64018:	str	r3, [fp, #-52]	; 0xffffffcc
   6401c:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   64020:	mov	r2, #100	; 0x64
   64024:	mul	r2, r2, r3
   64028:	ldr	r3, [fp, #-360]	; 0xfffffe98
   6402c:	add	r3, r2, r3
   64030:	str	r3, [fp, #-44]	; 0xffffffd4
   64034:	b	627ec <__assert_fail@plt+0x50100>
   64038:	nop	{0}
   6403c:	mov	r3, #9
   64040:	str	r3, [fp, #-36]	; 0xffffffdc
   64044:	mov	r3, #20
   64048:	str	r3, [fp, #-52]	; 0xffffffcc
   6404c:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   64050:	movw	r2, #10000	; 0x2710
   64054:	mul	r2, r2, r3
   64058:	ldr	r3, [fp, #-360]	; 0xfffffe98
   6405c:	mov	r1, #100	; 0x64
   64060:	mul	r3, r1, r3
   64064:	add	r2, r2, r3
   64068:	ldr	r3, [fp, #-364]	; 0xfffffe94
   6406c:	add	r3, r2, r3
   64070:	str	r3, [fp, #-44]	; 0xffffffd4
   64074:	b	627ec <__assert_fail@plt+0x50100>
   64078:	ldr	r3, [fp, #-364]	; 0xfffffe94
   6407c:	cmp	r3, #0
   64080:	bne	64038 <__assert_fail@plt+0x5194c>
   64084:	ldr	r3, [fp, #-360]	; 0xfffffe98
   64088:	cmp	r3, #0
   6408c:	bne	64008 <__assert_fail@plt+0x5191c>
   64090:	mov	r3, #3
   64094:	str	r3, [fp, #-36]	; 0xffffffdc
   64098:	mov	r3, #0
   6409c:	str	r3, [fp, #-52]	; 0xffffffcc
   640a0:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   640a4:	str	r3, [fp, #-44]	; 0xffffffd4
   640a8:	b	627ec <__assert_fail@plt+0x50100>
   640ac:	nop	{0}
   640b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   640b4:	sub	r3, r3, #1
   640b8:	str	r3, [fp, #-24]	; 0xffffffe8
   640bc:	b	64174 <__assert_fail@plt+0x51a88>
   640c0:	nop	{0}
   640c4:	b	64174 <__assert_fail@plt+0x51a88>
   640c8:	nop	{0}
   640cc:	b	64174 <__assert_fail@plt+0x51a88>
   640d0:	nop	{0}
   640d4:	b	64174 <__assert_fail@plt+0x51a88>
   640d8:	nop	{0}
   640dc:	b	64174 <__assert_fail@plt+0x51a88>
   640e0:	nop	{0}
   640e4:	b	64174 <__assert_fail@plt+0x51a88>
   640e8:	nop	{0}
   640ec:	b	64174 <__assert_fail@plt+0x51a88>
   640f0:	nop	{0}
   640f4:	b	64174 <__assert_fail@plt+0x51a88>
   640f8:	nop	{0}
   640fc:	b	64174 <__assert_fail@plt+0x51a88>
   64100:	nop	{0}
   64104:	b	64174 <__assert_fail@plt+0x51a88>
   64108:	nop	{0}
   6410c:	b	64174 <__assert_fail@plt+0x51a88>
   64110:	nop	{0}
   64114:	b	64174 <__assert_fail@plt+0x51a88>
   64118:	nop	{0}
   6411c:	b	64174 <__assert_fail@plt+0x51a88>
   64120:	nop	{0}
   64124:	b	64174 <__assert_fail@plt+0x51a88>
   64128:	nop	{0}
   6412c:	b	64174 <__assert_fail@plt+0x51a88>
   64130:	nop	{0}
   64134:	b	64174 <__assert_fail@plt+0x51a88>
   64138:	nop	{0}
   6413c:	b	64174 <__assert_fail@plt+0x51a88>
   64140:	nop	{0}
   64144:	b	64174 <__assert_fail@plt+0x51a88>
   64148:	nop	{0}
   6414c:	b	64174 <__assert_fail@plt+0x51a88>
   64150:	nop	{0}
   64154:	b	64174 <__assert_fail@plt+0x51a88>
   64158:	nop	{0}
   6415c:	b	64174 <__assert_fail@plt+0x51a88>
   64160:	nop	{0}
   64164:	b	64174 <__assert_fail@plt+0x51a88>
   64168:	nop	{0}
   6416c:	b	64174 <__assert_fail@plt+0x51a88>
   64170:	nop	{0}
   64174:	ldr	r2, [fp, #-24]	; 0xffffffe8
   64178:	ldr	r3, [fp, #-136]	; 0xffffff78
   6417c:	sub	r3, r2, r3
   64180:	add	r3, r3, #1
   64184:	str	r3, [fp, #-368]	; 0xfffffe90
   64188:	ldr	r3, [fp, #-28]	; 0xffffffe4
   6418c:	cmp	r3, #45	; 0x2d
   64190:	beq	641a8 <__assert_fail@plt+0x51abc>
   64194:	ldr	r3, [fp, #12]
   64198:	cmp	r3, #0
   6419c:	blt	641a8 <__assert_fail@plt+0x51abc>
   641a0:	ldr	r3, [fp, #12]
   641a4:	b	641ac <__assert_fail@plt+0x51ac0>
   641a8:	mov	r3, #0
   641ac:	str	r3, [fp, #-372]	; 0xfffffe8c
   641b0:	ldr	r2, [fp, #-368]	; 0xfffffe90
   641b4:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   641b8:	cmp	r2, r3
   641bc:	movcs	r3, r2
   641c0:	movcc	r3, r3
   641c4:	str	r3, [fp, #-376]	; 0xfffffe88
   641c8:	ldr	r2, [fp, #-1436]	; 0xfffffa64
   641cc:	ldr	r3, [fp, #-16]
   641d0:	sub	r3, r2, r3
   641d4:	ldr	r2, [fp, #-376]	; 0xfffffe88
   641d8:	cmp	r2, r3
   641dc:	bcc	641f8 <__assert_fail@plt+0x51b0c>
   641e0:	bl	12404 <__errno_location@plt>
   641e4:	mov	r2, r0
   641e8:	mov	r3, #34	; 0x22
   641ec:	str	r3, [r2]
   641f0:	mov	r3, #0
   641f4:	b	64360 <__assert_fail@plt+0x51c74>
   641f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   641fc:	cmp	r3, #0
   64200:	beq	642e0 <__assert_fail@plt+0x51bf4>
   64204:	ldr	r2, [fp, #-368]	; 0xfffffe90
   64208:	ldr	r3, [fp, #-372]	; 0xfffffe8c
   6420c:	cmp	r2, r3
   64210:	bcs	64280 <__assert_fail@plt+0x51b94>
   64214:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   64218:	ldr	r3, [fp, #-368]	; 0xfffffe90
   6421c:	sub	r3, r2, r3
   64220:	str	r3, [fp, #-380]	; 0xfffffe84
   64224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   64228:	cmp	r3, #48	; 0x30
   6422c:	beq	6423c <__assert_fail@plt+0x51b50>
   64230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   64234:	cmp	r3, #43	; 0x2b
   64238:	bne	64260 <__assert_fail@plt+0x51b74>
   6423c:	ldr	r2, [fp, #-380]	; 0xfffffe84
   64240:	mov	r1, #48	; 0x30
   64244:	ldr	r0, [fp, #-20]	; 0xffffffec
   64248:	bl	12434 <memset@plt>
   6424c:	ldr	r2, [fp, #-20]	; 0xffffffec
   64250:	ldr	r3, [fp, #-380]	; 0xfffffe84
   64254:	add	r3, r2, r3
   64258:	str	r3, [fp, #-20]	; 0xffffffec
   6425c:	b	64280 <__assert_fail@plt+0x51b94>
   64260:	ldr	r2, [fp, #-380]	; 0xfffffe84
   64264:	mov	r1, #32
   64268:	ldr	r0, [fp, #-20]	; 0xffffffec
   6426c:	bl	12434 <memset@plt>
   64270:	ldr	r2, [fp, #-20]	; 0xffffffec
   64274:	ldr	r3, [fp, #-380]	; 0xfffffe84
   64278:	add	r3, r2, r3
   6427c:	str	r3, [fp, #-20]	; 0xffffffec
   64280:	ldrb	r3, [fp, #-61]	; 0xffffffc3
   64284:	cmp	r3, #0
   64288:	beq	642a0 <__assert_fail@plt+0x51bb4>
   6428c:	ldr	r2, [fp, #-368]	; 0xfffffe90
   64290:	ldr	r1, [fp, #-136]	; 0xffffff78
   64294:	ldr	r0, [fp, #-20]	; 0xffffffec
   64298:	bl	617dc <__assert_fail@plt+0x4f0f0>
   6429c:	b	642d0 <__assert_fail@plt+0x51be4>
   642a0:	ldrb	r3, [fp, #-62]	; 0xffffffc2
   642a4:	cmp	r3, #0
   642a8:	beq	642c0 <__assert_fail@plt+0x51bd4>
   642ac:	ldr	r2, [fp, #-368]	; 0xfffffe90
   642b0:	ldr	r1, [fp, #-136]	; 0xffffff78
   642b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   642b8:	bl	61858 <__assert_fail@plt+0x4f16c>
   642bc:	b	642d0 <__assert_fail@plt+0x51be4>
   642c0:	ldr	r2, [fp, #-368]	; 0xfffffe90
   642c4:	ldr	r1, [fp, #-136]	; 0xffffff78
   642c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   642cc:	bl	120f8 <memcpy@plt>
   642d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   642d4:	ldr	r3, [fp, #-368]	; 0xfffffe90
   642d8:	add	r3, r2, r3
   642dc:	str	r3, [fp, #-20]	; 0xffffffec
   642e0:	ldr	r2, [fp, #-16]
   642e4:	ldr	r3, [fp, #-376]	; 0xfffffe88
   642e8:	add	r3, r2, r3
   642ec:	str	r3, [fp, #-16]
   642f0:	nop	{0}
   642f4:	b	64304 <__assert_fail@plt+0x51c18>
   642f8:	nop	{0}
   642fc:	b	64304 <__assert_fail@plt+0x51c18>
   64300:	nop	{0}
   64304:	mvn	r3, #0
   64308:	str	r3, [fp, #12]
   6430c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   64310:	add	r3, r3, #1
   64314:	str	r3, [fp, #-24]	; 0xffffffe8
   64318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   6431c:	ldrb	r3, [r3]
   64320:	cmp	r3, #0
   64324:	bne	61a8c <__assert_fail@plt+0x4f3a0>
   64328:	ldr	r3, [fp, #-20]	; 0xffffffec
   6432c:	cmp	r3, #0
   64330:	beq	6434c <__assert_fail@plt+0x51c60>
   64334:	ldr	r3, [fp, #-1436]	; 0xfffffa64
   64338:	cmp	r3, #0
   6433c:	beq	6434c <__assert_fail@plt+0x51c60>
   64340:	ldr	r3, [fp, #-20]	; 0xffffffec
   64344:	mov	r2, #0
   64348:	strb	r2, [r3]
   6434c:	bl	12404 <__errno_location@plt>
   64350:	mov	r2, r0
   64354:	ldr	r3, [fp, #-116]	; 0xffffff8c
   64358:	str	r3, [r2]
   6435c:	ldr	r3, [fp, #-16]
   64360:	mov	r0, r3
   64364:	sub	sp, fp, #4
   64368:	ldr	fp, [sp]
   6436c:	add	sp, sp, #4
   64370:	pop	{pc}		; (ldr pc, [sp], #4)
   64374:	str	fp, [sp, #-8]!
   64378:	str	lr, [sp, #4]
   6437c:	add	fp, sp, #4
   64380:	sub	sp, sp, #32
   64384:	str	r0, [fp, #-24]	; 0xffffffe8
   64388:	str	r1, [fp, #-28]	; 0xffffffe4
   6438c:	str	r2, [fp, #-32]	; 0xffffffe0
   64390:	str	r3, [fp, #-36]	; 0xffffffdc
   64394:	ldr	r3, [fp, #-32]	; 0xffffffe0
   64398:	orr	r3, r3, #540672	; 0x84000
   6439c:	orr	r3, r3, #2304	; 0x900
   643a0:	str	r3, [fp, #-8]
   643a4:	ldr	r2, [fp, #-8]
   643a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   643ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   643b0:	bl	31ab4 <__assert_fail@plt+0x1f3c8>
   643b4:	str	r0, [fp, #-12]
   643b8:	ldr	r3, [fp, #-12]
   643bc:	cmp	r3, #0
   643c0:	bge	643cc <__assert_fail@plt+0x51ce0>
   643c4:	mov	r3, #0
   643c8:	b	64420 <__assert_fail@plt+0x51d34>
   643cc:	ldr	r0, [fp, #-12]
   643d0:	bl	125a8 <fdopendir@plt>
   643d4:	str	r0, [fp, #-16]
   643d8:	ldr	r3, [fp, #-16]
   643dc:	cmp	r3, #0
   643e0:	beq	643f4 <__assert_fail@plt+0x51d08>
   643e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   643e8:	ldr	r2, [fp, #-12]
   643ec:	str	r2, [r3]
   643f0:	b	6441c <__assert_fail@plt+0x51d30>
   643f4:	bl	12404 <__errno_location@plt>
   643f8:	mov	r3, r0
   643fc:	ldr	r3, [r3]
   64400:	str	r3, [fp, #-20]	; 0xffffffec
   64404:	ldr	r0, [fp, #-12]
   64408:	bl	126a4 <close@plt>
   6440c:	bl	12404 <__errno_location@plt>
   64410:	mov	r2, r0
   64414:	ldr	r3, [fp, #-20]	; 0xffffffec
   64418:	str	r3, [r2]
   6441c:	ldr	r3, [fp, #-16]
   64420:	mov	r0, r3
   64424:	sub	sp, fp, #4
   64428:	ldr	fp, [sp]
   6442c:	add	sp, sp, #4
   64430:	pop	{pc}		; (ldr pc, [sp], #4)
   64434:	str	fp, [sp, #-8]!
   64438:	str	lr, [sp, #4]
   6443c:	add	fp, sp, #4
   64440:	sub	sp, sp, #16
   64444:	str	r0, [fp, #-16]
   64448:	mov	r1, #0
   6444c:	ldr	r0, [fp, #-16]
   64450:	bl	12518 <setlocale@plt>
   64454:	str	r0, [fp, #-8]
   64458:	ldr	r3, [fp, #-8]
   6445c:	mov	r0, r3
   64460:	sub	sp, fp, #4
   64464:	ldr	fp, [sp]
   64468:	add	sp, sp, #4
   6446c:	pop	{pc}		; (ldr pc, [sp], #4)
   64470:	str	fp, [sp, #-8]!
   64474:	str	lr, [sp, #4]
   64478:	add	fp, sp, #4
   6447c:	sub	sp, sp, #24
   64480:	str	r0, [fp, #-16]
   64484:	str	r1, [fp, #-20]	; 0xffffffec
   64488:	str	r2, [fp, #-24]	; 0xffffffe8
   6448c:	ldr	r0, [fp, #-16]
   64490:	bl	64434 <__assert_fail@plt+0x51d48>
   64494:	str	r0, [fp, #-8]
   64498:	ldr	r3, [fp, #-8]
   6449c:	cmp	r3, #0
   644a0:	bne	644c4 <__assert_fail@plt+0x51dd8>
   644a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   644a8:	cmp	r3, #0
   644ac:	beq	644bc <__assert_fail@plt+0x51dd0>
   644b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   644b4:	mov	r2, #0
   644b8:	strb	r2, [r3]
   644bc:	mov	r3, #22
   644c0:	b	64540 <__assert_fail@plt+0x51e54>
   644c4:	ldr	r0, [fp, #-8]
   644c8:	bl	123bc <strlen@plt>
   644cc:	str	r0, [fp, #-12]
   644d0:	ldr	r2, [fp, #-12]
   644d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   644d8:	cmp	r2, r3
   644dc:	bcs	64500 <__assert_fail@plt+0x51e14>
   644e0:	ldr	r3, [fp, #-12]
   644e4:	add	r3, r3, #1
   644e8:	mov	r2, r3
   644ec:	ldr	r1, [fp, #-8]
   644f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   644f4:	bl	120f8 <memcpy@plt>
   644f8:	mov	r3, #0
   644fc:	b	64540 <__assert_fail@plt+0x51e54>
   64500:	ldr	r3, [fp, #-24]	; 0xffffffe8
   64504:	cmp	r3, #0
   64508:	beq	6453c <__assert_fail@plt+0x51e50>
   6450c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   64510:	sub	r3, r3, #1
   64514:	mov	r2, r3
   64518:	ldr	r1, [fp, #-8]
   6451c:	ldr	r0, [fp, #-20]	; 0xffffffec
   64520:	bl	120f8 <memcpy@plt>
   64524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   64528:	sub	r3, r3, #1
   6452c:	ldr	r2, [fp, #-20]	; 0xffffffec
   64530:	add	r3, r2, r3
   64534:	mov	r2, #0
   64538:	strb	r2, [r3]
   6453c:	mov	r3, #34	; 0x22
   64540:	mov	r0, r3
   64544:	sub	sp, fp, #4
   64548:	ldr	fp, [sp]
   6454c:	add	sp, sp, #4
   64550:	pop	{pc}		; (ldr pc, [sp], #4)
   64554:	str	fp, [sp, #-8]!
   64558:	str	lr, [sp, #4]
   6455c:	add	fp, sp, #4
   64560:	sub	sp, sp, #16
   64564:	str	r0, [fp, #-8]
   64568:	str	r1, [fp, #-12]
   6456c:	str	r2, [fp, #-16]
   64570:	ldr	r2, [fp, #-16]
   64574:	ldr	r1, [fp, #-12]
   64578:	ldr	r0, [fp, #-8]
   6457c:	bl	64470 <__assert_fail@plt+0x51d84>
   64580:	mov	r3, r0
   64584:	mov	r0, r3
   64588:	sub	sp, fp, #4
   6458c:	ldr	fp, [sp]
   64590:	add	sp, sp, #4
   64594:	pop	{pc}		; (ldr pc, [sp], #4)
   64598:	str	fp, [sp, #-8]!
   6459c:	str	lr, [sp, #4]
   645a0:	add	fp, sp, #4
   645a4:	sub	sp, sp, #8
   645a8:	str	r0, [fp, #-8]
   645ac:	ldr	r0, [fp, #-8]
   645b0:	bl	64434 <__assert_fail@plt+0x51d48>
   645b4:	mov	r3, r0
   645b8:	mov	r0, r3
   645bc:	sub	sp, fp, #4
   645c0:	ldr	fp, [sp]
   645c4:	add	sp, sp, #4
   645c8:	pop	{pc}		; (ldr pc, [sp], #4)
   645cc:	eor	r1, r1, #-2147483648	; 0x80000000
   645d0:	b	645d8 <__assert_fail@plt+0x51eec>
   645d4:	eor	r3, r3, #-2147483648	; 0x80000000
   645d8:	push	{r4, r5, lr}
   645dc:	lsl	r4, r1, #1
   645e0:	lsl	r5, r3, #1
   645e4:	teq	r4, r5
   645e8:	teqeq	r0, r2
   645ec:	orrsne	ip, r4, r0
   645f0:	orrsne	ip, r5, r2
   645f4:	mvnsne	ip, r4, asr #21
   645f8:	mvnsne	ip, r5, asr #21
   645fc:	beq	647e8 <__assert_fail@plt+0x520fc>
   64600:	lsr	r4, r4, #21
   64604:	rsbs	r5, r4, r5, lsr #21
   64608:	rsblt	r5, r5, #0
   6460c:	ble	6462c <__assert_fail@plt+0x51f40>
   64610:	add	r4, r4, r5
   64614:	eor	r2, r0, r2
   64618:	eor	r3, r1, r3
   6461c:	eor	r0, r2, r0
   64620:	eor	r1, r3, r1
   64624:	eor	r2, r0, r2
   64628:	eor	r3, r1, r3
   6462c:	cmp	r5, #54	; 0x36
   64630:	pophi	{r4, r5, pc}
   64634:	tst	r1, #-2147483648	; 0x80000000
   64638:	lsl	r1, r1, #12
   6463c:	mov	ip, #1048576	; 0x100000
   64640:	orr	r1, ip, r1, lsr #12
   64644:	beq	64650 <__assert_fail@plt+0x51f64>
   64648:	rsbs	r0, r0, #0
   6464c:	rsc	r1, r1, #0
   64650:	tst	r3, #-2147483648	; 0x80000000
   64654:	lsl	r3, r3, #12
   64658:	orr	r3, ip, r3, lsr #12
   6465c:	beq	64668 <__assert_fail@plt+0x51f7c>
   64660:	rsbs	r2, r2, #0
   64664:	rsc	r3, r3, #0
   64668:	teq	r4, r5
   6466c:	beq	647d0 <__assert_fail@plt+0x520e4>
   64670:	sub	r4, r4, #1
   64674:	rsbs	lr, r5, #32
   64678:	blt	64694 <__assert_fail@plt+0x51fa8>
   6467c:	lsl	ip, r2, lr
   64680:	adds	r0, r0, r2, lsr r5
   64684:	adc	r1, r1, #0
   64688:	adds	r0, r0, r3, lsl lr
   6468c:	adcs	r1, r1, r3, asr r5
   64690:	b	646b0 <__assert_fail@plt+0x51fc4>
   64694:	sub	r5, r5, #32
   64698:	add	lr, lr, #32
   6469c:	cmp	r2, #1
   646a0:	lsl	ip, r3, lr
   646a4:	orrcs	ip, ip, #2
   646a8:	adds	r0, r0, r3, asr r5
   646ac:	adcs	r1, r1, r3, asr #31
   646b0:	and	r5, r1, #-2147483648	; 0x80000000
   646b4:	bpl	646c4 <__assert_fail@plt+0x51fd8>
   646b8:	rsbs	ip, ip, #0
   646bc:	rscs	r0, r0, #0
   646c0:	rsc	r1, r1, #0
   646c4:	cmp	r1, #1048576	; 0x100000
   646c8:	bcc	64708 <__assert_fail@plt+0x5201c>
   646cc:	cmp	r1, #2097152	; 0x200000
   646d0:	bcc	646f0 <__assert_fail@plt+0x52004>
   646d4:	lsrs	r1, r1, #1
   646d8:	rrxs	r0, r0
   646dc:	rrx	ip, ip
   646e0:	add	r4, r4, #1
   646e4:	lsl	r2, r4, #21
   646e8:	cmn	r2, #4194304	; 0x400000
   646ec:	bcs	64848 <__assert_fail@plt+0x5215c>
   646f0:	cmp	ip, #-2147483648	; 0x80000000
   646f4:	lsrseq	ip, r0, #1
   646f8:	adcs	r0, r0, #0
   646fc:	adc	r1, r1, r4, lsl #20
   64700:	orr	r1, r1, r5
   64704:	pop	{r4, r5, pc}
   64708:	lsls	ip, ip, #1
   6470c:	adcs	r0, r0, r0
   64710:	adc	r1, r1, r1
   64714:	tst	r1, #1048576	; 0x100000
   64718:	sub	r4, r4, #1
   6471c:	bne	646f0 <__assert_fail@plt+0x52004>
   64720:	teq	r1, #0
   64724:	moveq	r1, r0
   64728:	moveq	r0, #0
   6472c:	clz	r3, r1
   64730:	addeq	r3, r3, #32
   64734:	sub	r3, r3, #11
   64738:	subs	r2, r3, #32
   6473c:	bge	64760 <__assert_fail@plt+0x52074>
   64740:	adds	r2, r2, #12
   64744:	ble	6475c <__assert_fail@plt+0x52070>
   64748:	add	ip, r2, #20
   6474c:	rsb	r2, r2, #12
   64750:	lsl	r0, r1, ip
   64754:	lsr	r1, r1, r2
   64758:	b	64770 <__assert_fail@plt+0x52084>
   6475c:	add	r2, r2, #20
   64760:	rsble	ip, r2, #32
   64764:	lsl	r1, r1, r2
   64768:	orrle	r1, r1, r0, lsr ip
   6476c:	lslle	r0, r0, r2
   64770:	subs	r4, r4, r3
   64774:	addge	r1, r1, r4, lsl #20
   64778:	orrge	r1, r1, r5
   6477c:	popge	{r4, r5, pc}
   64780:	mvn	r4, r4
   64784:	subs	r4, r4, #31
   64788:	bge	647c4 <__assert_fail@plt+0x520d8>
   6478c:	adds	r4, r4, #12
   64790:	bgt	647ac <__assert_fail@plt+0x520c0>
   64794:	add	r4, r4, #20
   64798:	rsb	r2, r4, #32
   6479c:	lsr	r0, r0, r4
   647a0:	orr	r0, r0, r1, lsl r2
   647a4:	orr	r1, r5, r1, lsr r4
   647a8:	pop	{r4, r5, pc}
   647ac:	rsb	r4, r4, #12
   647b0:	rsb	r2, r4, #32
   647b4:	lsr	r0, r0, r2
   647b8:	orr	r0, r0, r1, lsl r4
   647bc:	mov	r1, r5
   647c0:	pop	{r4, r5, pc}
   647c4:	lsr	r0, r1, r4
   647c8:	mov	r1, r5
   647cc:	pop	{r4, r5, pc}
   647d0:	teq	r4, #0
   647d4:	eor	r3, r3, #1048576	; 0x100000
   647d8:	eoreq	r1, r1, #1048576	; 0x100000
   647dc:	addeq	r4, r4, #1
   647e0:	subne	r5, r5, #1
   647e4:	b	64670 <__assert_fail@plt+0x51f84>
   647e8:	mvns	ip, r4, asr #21
   647ec:	mvnsne	ip, r5, asr #21
   647f0:	beq	64858 <__assert_fail@plt+0x5216c>
   647f4:	teq	r4, r5
   647f8:	teqeq	r0, r2
   647fc:	beq	64810 <__assert_fail@plt+0x52124>
   64800:	orrs	ip, r4, r0
   64804:	moveq	r1, r3
   64808:	moveq	r0, r2
   6480c:	pop	{r4, r5, pc}
   64810:	teq	r1, r3
   64814:	movne	r1, #0
   64818:	movne	r0, #0
   6481c:	popne	{r4, r5, pc}
   64820:	lsrs	ip, r4, #21
   64824:	bne	64838 <__assert_fail@plt+0x5214c>
   64828:	lsls	r0, r0, #1
   6482c:	adcs	r1, r1, r1
   64830:	orrcs	r1, r1, #-2147483648	; 0x80000000
   64834:	pop	{r4, r5, pc}
   64838:	adds	r4, r4, #4194304	; 0x400000
   6483c:	addcc	r1, r1, #1048576	; 0x100000
   64840:	popcc	{r4, r5, pc}
   64844:	and	r5, r1, #-2147483648	; 0x80000000
   64848:	orr	r1, r5, #2130706432	; 0x7f000000
   6484c:	orr	r1, r1, #15728640	; 0xf00000
   64850:	mov	r0, #0
   64854:	pop	{r4, r5, pc}
   64858:	mvns	ip, r4, asr #21
   6485c:	movne	r1, r3
   64860:	movne	r0, r2
   64864:	mvnseq	ip, r5, asr #21
   64868:	movne	r3, r1
   6486c:	movne	r2, r0
   64870:	orrs	r4, r0, r1, lsl #12
   64874:	orrseq	r5, r2, r3, lsl #12
   64878:	teqeq	r1, r3
   6487c:	orrne	r1, r1, #524288	; 0x80000
   64880:	pop	{r4, r5, pc}
   64884:	teq	r0, #0
   64888:	moveq	r1, #0
   6488c:	bxeq	lr
   64890:	push	{r4, r5, lr}
   64894:	mov	r4, #1024	; 0x400
   64898:	add	r4, r4, #50	; 0x32
   6489c:	mov	r5, #0
   648a0:	mov	r1, #0
   648a4:	b	64720 <__assert_fail@plt+0x52034>
   648a8:	teq	r0, #0
   648ac:	moveq	r1, #0
   648b0:	bxeq	lr
   648b4:	push	{r4, r5, lr}
   648b8:	mov	r4, #1024	; 0x400
   648bc:	add	r4, r4, #50	; 0x32
   648c0:	ands	r5, r0, #-2147483648	; 0x80000000
   648c4:	rsbmi	r0, r0, #0
   648c8:	mov	r1, #0
   648cc:	b	64720 <__assert_fail@plt+0x52034>
   648d0:	lsls	r2, r0, #1
   648d4:	asr	r1, r2, #3
   648d8:	rrx	r1, r1
   648dc:	lsl	r0, r2, #28
   648e0:	andsne	r3, r2, #-16777216	; 0xff000000
   648e4:	teqne	r3, #-16777216	; 0xff000000
   648e8:	eorne	r1, r1, #939524096	; 0x38000000
   648ec:	bxne	lr
   648f0:	bics	r2, r2, #-16777216	; 0xff000000
   648f4:	bxeq	lr
   648f8:	teq	r3, #-16777216	; 0xff000000
   648fc:	orreq	r1, r1, #524288	; 0x80000
   64900:	bxeq	lr
   64904:	push	{r4, r5, lr}
   64908:	mov	r4, #896	; 0x380
   6490c:	and	r5, r1, #-2147483648	; 0x80000000
   64910:	bic	r1, r1, #-2147483648	; 0x80000000
   64914:	b	64720 <__assert_fail@plt+0x52034>
   64918:	orrs	r2, r0, r1
   6491c:	bxeq	lr
   64920:	push	{r4, r5, lr}
   64924:	mov	r5, #0
   64928:	b	64948 <__assert_fail@plt+0x5225c>
   6492c:	orrs	r2, r0, r1
   64930:	bxeq	lr
   64934:	push	{r4, r5, lr}
   64938:	ands	r5, r1, #-2147483648	; 0x80000000
   6493c:	bpl	64948 <__assert_fail@plt+0x5225c>
   64940:	rsbs	r0, r0, #0
   64944:	rsc	r1, r1, #0
   64948:	mov	r4, #1024	; 0x400
   6494c:	add	r4, r4, #50	; 0x32
   64950:	lsrs	ip, r1, #22
   64954:	beq	646c4 <__assert_fail@plt+0x51fd8>
   64958:	mov	r2, #3
   6495c:	lsrs	ip, ip, #3
   64960:	addne	r2, r2, #3
   64964:	lsrs	ip, ip, #3
   64968:	addne	r2, r2, #3
   6496c:	add	r2, r2, ip, lsr #3
   64970:	rsb	r3, r2, #32
   64974:	lsl	ip, r0, r3
   64978:	lsr	r0, r0, r2
   6497c:	orr	r0, r0, r1, lsl r3
   64980:	lsr	r1, r1, r2
   64984:	add	r4, r4, r2
   64988:	b	646c4 <__assert_fail@plt+0x51fd8>
   6498c:	cmp	r3, #0
   64990:	cmpeq	r2, #0
   64994:	bne	649b8 <__assert_fail@plt+0x522cc>
   64998:	cmp	r1, #0
   6499c:	movlt	r1, #-2147483648	; 0x80000000
   649a0:	movlt	r0, #0
   649a4:	blt	649b4 <__assert_fail@plt+0x522c8>
   649a8:	cmpeq	r0, #0
   649ac:	mvnne	r1, #-2147483648	; 0x80000000
   649b0:	mvnne	r0, #0
   649b4:	b	64a9c <__assert_fail@plt+0x523b0>
   649b8:	sub	sp, sp, #8
   649bc:	push	{sp, lr}
   649c0:	cmp	r1, #0
   649c4:	blt	649e4 <__assert_fail@plt+0x522f8>
   649c8:	cmp	r3, #0
   649cc:	blt	64a18 <__assert_fail@plt+0x5232c>
   649d0:	bl	64af0 <__assert_fail@plt+0x52404>
   649d4:	ldr	lr, [sp, #4]
   649d8:	add	sp, sp, #8
   649dc:	pop	{r2, r3}
   649e0:	bx	lr
   649e4:	rsbs	r0, r0, #0
   649e8:	sbc	r1, r1, r1, lsl #1
   649ec:	cmp	r3, #0
   649f0:	blt	64a3c <__assert_fail@plt+0x52350>
   649f4:	bl	64af0 <__assert_fail@plt+0x52404>
   649f8:	ldr	lr, [sp, #4]
   649fc:	add	sp, sp, #8
   64a00:	pop	{r2, r3}
   64a04:	rsbs	r0, r0, #0
   64a08:	sbc	r1, r1, r1, lsl #1
   64a0c:	rsbs	r2, r2, #0
   64a10:	sbc	r3, r3, r3, lsl #1
   64a14:	bx	lr
   64a18:	rsbs	r2, r2, #0
   64a1c:	sbc	r3, r3, r3, lsl #1
   64a20:	bl	64af0 <__assert_fail@plt+0x52404>
   64a24:	ldr	lr, [sp, #4]
   64a28:	add	sp, sp, #8
   64a2c:	pop	{r2, r3}
   64a30:	rsbs	r0, r0, #0
   64a34:	sbc	r1, r1, r1, lsl #1
   64a38:	bx	lr
   64a3c:	rsbs	r2, r2, #0
   64a40:	sbc	r3, r3, r3, lsl #1
   64a44:	bl	64af0 <__assert_fail@plt+0x52404>
   64a48:	ldr	lr, [sp, #4]
   64a4c:	add	sp, sp, #8
   64a50:	pop	{r2, r3}
   64a54:	rsbs	r2, r2, #0
   64a58:	sbc	r3, r3, r3, lsl #1
   64a5c:	bx	lr
   64a60:	cmp	r3, #0
   64a64:	cmpeq	r2, #0
   64a68:	bne	64a80 <__assert_fail@plt+0x52394>
   64a6c:	cmp	r1, #0
   64a70:	cmpeq	r0, #0
   64a74:	mvnne	r1, #0
   64a78:	mvnne	r0, #0
   64a7c:	b	64a9c <__assert_fail@plt+0x523b0>
   64a80:	sub	sp, sp, #8
   64a84:	push	{sp, lr}
   64a88:	bl	64af0 <__assert_fail@plt+0x52404>
   64a8c:	ldr	lr, [sp, #4]
   64a90:	add	sp, sp, #8
   64a94:	pop	{r2, r3}
   64a98:	bx	lr
   64a9c:	push	{r1, lr}
   64aa0:	mov	r0, #8
   64aa4:	bl	11fb4 <raise@plt>
   64aa8:	pop	{r1, pc}
   64aac:	andeq	r0, r0, r0
   64ab0:	vmov	d6, r0, r1
   64ab4:	vldr	d7, [pc, #36]	; 64ae0 <__assert_fail@plt+0x523f4>
   64ab8:	vldr	d5, [pc, #40]	; 64ae8 <__assert_fail@plt+0x523fc>
   64abc:	vmul.f64	d7, d6, d7
   64ac0:	vcvt.u32.f64	s14, d7
   64ac4:	vcvt.f64.u32	d4, s14
   64ac8:	vmov	r1, s14
   64acc:	vmls.f64	d6, d4, d5
   64ad0:	vcvt.u32.f64	s15, d6
   64ad4:	vmov	r0, s15
   64ad8:	bx	lr
   64adc:	nop			; (mov r0, r0)
   64ae0:	andeq	r0, r0, r0
   64ae4:	ldclcc	0, cr0, [r0]
   64ae8:	andeq	r0, r0, r0
   64aec:	mvnsmi	r0, r0
   64af0:	cmp	r1, r3
   64af4:	cmpeq	r0, r2
   64af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   64afc:	mov	r4, r0
   64b00:	movcc	r0, #0
   64b04:	mov	r5, r1
   64b08:	ldr	lr, [sp, #36]	; 0x24
   64b0c:	movcc	r1, r0
   64b10:	bcc	64c0c <__assert_fail@plt+0x52520>
   64b14:	cmp	r3, #0
   64b18:	clzeq	ip, r2
   64b1c:	clzne	ip, r3
   64b20:	addeq	ip, ip, #32
   64b24:	cmp	r5, #0
   64b28:	clzeq	r1, r4
   64b2c:	addeq	r1, r1, #32
   64b30:	clzne	r1, r5
   64b34:	sub	ip, ip, r1
   64b38:	sub	sl, ip, #32
   64b3c:	lsl	r9, r3, ip
   64b40:	rsb	fp, ip, #32
   64b44:	orr	r9, r9, r2, lsl sl
   64b48:	orr	r9, r9, r2, lsr fp
   64b4c:	lsl	r8, r2, ip
   64b50:	cmp	r5, r9
   64b54:	cmpeq	r4, r8
   64b58:	movcc	r0, #0
   64b5c:	movcc	r1, r0
   64b60:	bcc	64b7c <__assert_fail@plt+0x52490>
   64b64:	mov	r0, #1
   64b68:	subs	r4, r4, r8
   64b6c:	lsl	r1, r0, sl
   64b70:	orr	r1, r1, r0, lsr fp
   64b74:	lsl	r0, r0, ip
   64b78:	sbc	r5, r5, r9
   64b7c:	cmp	ip, #0
   64b80:	beq	64c0c <__assert_fail@plt+0x52520>
   64b84:	lsr	r6, r8, #1
   64b88:	orr	r6, r6, r9, lsl #31
   64b8c:	lsr	r7, r9, #1
   64b90:	mov	r2, ip
   64b94:	b	64bb8 <__assert_fail@plt+0x524cc>
   64b98:	subs	r3, r4, r6
   64b9c:	sbc	r8, r5, r7
   64ba0:	adds	r3, r3, r3
   64ba4:	adc	r8, r8, r8
   64ba8:	adds	r4, r3, #1
   64bac:	adc	r5, r8, #0
   64bb0:	subs	r2, r2, #1
   64bb4:	beq	64bd4 <__assert_fail@plt+0x524e8>
   64bb8:	cmp	r5, r7
   64bbc:	cmpeq	r4, r6
   64bc0:	bcs	64b98 <__assert_fail@plt+0x524ac>
   64bc4:	adds	r4, r4, r4
   64bc8:	adc	r5, r5, r5
   64bcc:	subs	r2, r2, #1
   64bd0:	bne	64bb8 <__assert_fail@plt+0x524cc>
   64bd4:	lsr	r3, r4, ip
   64bd8:	orr	r3, r3, r5, lsl fp
   64bdc:	lsr	r2, r5, ip
   64be0:	orr	r3, r3, r5, lsr sl
   64be4:	adds	r0, r0, r4
   64be8:	mov	r4, r3
   64bec:	lsl	r3, r2, ip
   64bf0:	orr	r3, r3, r4, lsl sl
   64bf4:	lsl	ip, r4, ip
   64bf8:	orr	r3, r3, r4, lsr fp
   64bfc:	adc	r1, r1, r5
   64c00:	subs	r0, r0, ip
   64c04:	mov	r5, r2
   64c08:	sbc	r1, r1, r3
   64c0c:	cmp	lr, #0
   64c10:	strdne	r4, [lr]
   64c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64c18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   64c1c:	mov	r7, r0
   64c20:	ldr	r6, [pc, #72]	; 64c70 <__assert_fail@plt+0x52584>
   64c24:	ldr	r5, [pc, #72]	; 64c74 <__assert_fail@plt+0x52588>
   64c28:	add	r6, pc, r6
   64c2c:	add	r5, pc, r5
   64c30:	sub	r6, r6, r5
   64c34:	mov	r8, r1
   64c38:	mov	r9, r2
   64c3c:	bl	11f40 <pthread_mutex_unlock@plt-0x20>
   64c40:	asrs	r6, r6, #2
   64c44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   64c48:	mov	r4, #0
   64c4c:	add	r4, r4, #1
   64c50:	ldr	r3, [r5], #4
   64c54:	mov	r2, r9
   64c58:	mov	r1, r8
   64c5c:	mov	r0, r7
   64c60:	blx	r3
   64c64:	cmp	r6, r4
   64c68:	bne	64c4c <__assert_fail@plt+0x52560>
   64c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   64c70:	ldrdeq	r7, [r1], -r4
   64c74:	andeq	r7, r1, ip, asr #5
   64c78:	bx	lr
   64c7c:	ldr	r3, [pc, #12]	; 64c90 <__assert_fail@plt+0x525a4>
   64c80:	mov	r1, #0
   64c84:	add	r3, pc, r3
   64c88:	ldr	r2, [r3]
   64c8c:	b	12428 <__cxa_atexit@plt>
   64c90:	andeq	r7, r1, r0, lsl r6
   64c94:	mov	r2, r1
   64c98:	mov	r1, r0
   64c9c:	mov	r0, #3
   64ca0:	b	12650 <__xstat64@plt>
   64ca4:	mov	r2, r1
   64ca8:	mov	r1, r0
   64cac:	mov	r0, #3
   64cb0:	b	12218 <__fxstat64@plt>
   64cb4:	mov	r2, r1
   64cb8:	mov	r1, r0
   64cbc:	mov	r0, #3
   64cc0:	b	126b0 <__lxstat64@plt>
   64cc4:	push	{lr}		; (str lr, [sp, #-4]!)
   64cc8:	sub	sp, sp, #12
   64ccc:	str	r3, [sp]
   64cd0:	mov	r3, r2
   64cd4:	mov	r2, r1
   64cd8:	mov	r1, r0
   64cdc:	mov	r0, #3
   64ce0:	bl	121e8 <__fxstatat64@plt>
   64ce4:	add	sp, sp, #12
   64ce8:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00064cec <.fini>:
   64cec:	push	{r3, lr}
   64cf0:	pop	{r3, pc}
