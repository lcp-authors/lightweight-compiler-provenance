
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011f9c <.init>:
   11f9c:	push	{r3, lr}
   11fa0:	bl	120ac <_start@@Base+0x3c>
   11fa4:	pop	{r3, pc}

Disassembly of section .plt:

00011fa8 <strcmp@plt-0x14>:
   11fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   11fac:	ldr	lr, [pc, #4]	; 11fb8 <strcmp@plt-0x4>
   11fb0:	add	lr, pc, lr
   11fb4:	ldr	pc, [lr, #8]!
   11fb8:	andeq	r4, r1, r8, asr #32

00011fbc <strcmp@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #72]!	; 0x48

00011fc8 <printf@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #64]!	; 0x40

00011fd4 <free@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #56]!	; 0x38

00011fe0 <time@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #48]!	; 0x30

00011fec <realloc@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #40]!	; 0x28

00011ff8 <strcpy@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #32]!

00012004 <malloc@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #24]!

00012010 <__libc_start_main@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #16]!

0001201c <__gmon_start__@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #8]!

00012028 <strlen@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #0]!

00012034 <srand@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #77824	; 0x13000
   1203c:	ldr	pc, [ip, #4088]!	; 0xff8

00012040 <snprintf@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #77824	; 0x13000
   12048:	ldr	pc, [ip, #4080]!	; 0xff0

0001204c <__isoc99_sscanf@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #77824	; 0x13000
   12054:	ldr	pc, [ip, #4072]!	; 0xfe8

00012058 <rand@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #77824	; 0x13000
   12060:	ldr	pc, [ip, #4064]!	; 0xfe0

00012064 <abort@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #77824	; 0x13000
   1206c:	ldr	pc, [ip, #4056]!	; 0xfd8

Disassembly of section .text:

00012070 <_start@@Base>:
   12070:	mov	fp, #0
   12074:	mov	lr, #0
   12078:	pop	{r1}		; (ldr r1, [sp], #4)
   1207c:	mov	r2, sp
   12080:	push	{r2}		; (str r2, [sp, #-4]!)
   12084:	push	{r0}		; (str r0, [sp, #-4]!)
   12088:	ldr	ip, [pc, #16]	; 120a0 <_start@@Base+0x30>
   1208c:	push	{ip}		; (str ip, [sp, #-4]!)
   12090:	ldr	r0, [pc, #12]	; 120a4 <_start@@Base+0x34>
   12094:	ldr	r3, [pc, #12]	; 120a8 <_start@@Base+0x38>
   12098:	bl	12010 <__libc_start_main@plt>
   1209c:	bl	12064 <abort@plt>
   120a0:	ldrdeq	r4, [r1], -r8
   120a4:	andeq	r2, r1, r0, ror #2
   120a8:	andeq	r4, r1, r8, ror sp
   120ac:	ldr	r3, [pc, #20]	; 120c8 <_start@@Base+0x58>
   120b0:	ldr	r2, [pc, #20]	; 120cc <_start@@Base+0x5c>
   120b4:	add	r3, pc, r3
   120b8:	ldr	r2, [r3, r2]
   120bc:	cmp	r2, #0
   120c0:	bxeq	lr
   120c4:	b	1201c <__gmon_start__@plt>
   120c8:	andeq	r3, r1, r4, asr #30
   120cc:	andeq	r0, r0, r8, asr #32
   120d0:	ldr	r0, [pc, #24]	; 120f0 <_start@@Base+0x80>
   120d4:	ldr	r3, [pc, #24]	; 120f4 <_start@@Base+0x84>
   120d8:	cmp	r3, r0
   120dc:	bxeq	lr
   120e0:	ldr	r3, [pc, #16]	; 120f8 <_start@@Base+0x88>
   120e4:	cmp	r3, #0
   120e8:	bxeq	lr
   120ec:	bx	r3
   120f0:	andeq	r6, r2, r4, asr r0
   120f4:	andeq	r6, r2, r4, asr r0
   120f8:	andeq	r0, r0, r0
   120fc:	ldr	r0, [pc, #36]	; 12128 <_start@@Base+0xb8>
   12100:	ldr	r1, [pc, #36]	; 1212c <_start@@Base+0xbc>
   12104:	sub	r1, r1, r0
   12108:	asr	r1, r1, #2
   1210c:	add	r1, r1, r1, lsr #31
   12110:	asrs	r1, r1, #1
   12114:	bxeq	lr
   12118:	ldr	r3, [pc, #16]	; 12130 <_start@@Base+0xc0>
   1211c:	cmp	r3, #0
   12120:	bxeq	lr
   12124:	bx	r3
   12128:	andeq	r6, r2, r4, asr r0
   1212c:	andeq	r6, r2, r4, asr r0
   12130:	andeq	r0, r0, r0
   12134:	push	{r4, lr}
   12138:	ldr	r4, [pc, #24]	; 12158 <_start@@Base+0xe8>
   1213c:	ldrb	r3, [r4]
   12140:	cmp	r3, #0
   12144:	popne	{r4, pc}
   12148:	bl	120d0 <_start@@Base+0x60>
   1214c:	mov	r3, #1
   12150:	strb	r3, [r4]
   12154:	pop	{r4, pc}
   12158:	andeq	r6, r2, r4, asr r0
   1215c:	b	120fc <_start@@Base+0x8c>

00012160 <main@@Base>:
   12160:	push	{r4, r5, r6, r7, fp, lr}
   12164:	add	fp, sp, #16
   12168:	sub	sp, sp, #64	; 0x40
   1216c:	add	r4, sp, #4
   12170:	mov	r0, r4
   12174:	bl	11fe0 <time@plt>
   12178:	bl	12034 <srand@plt>
   1217c:	bl	12058 <rand@plt>
   12180:	mov	r5, r0
   12184:	mov	r0, r4
   12188:	bl	11fe0 <time@plt>
   1218c:	bl	12034 <srand@plt>
   12190:	bl	12058 <rand@plt>
   12194:	mov	r6, r0
   12198:	add	r4, sp, #8
   1219c:	mov	r0, r4
   121a0:	bl	1230c <table_init@@Base>
   121a4:	mov	r0, r4
   121a8:	mov	r1, r5
   121ac:	bl	142bc <table_row_is_valid@@Base>
   121b0:	cmp	r0, #0
   121b4:	beq	121d0 <main@@Base+0x70>
   121b8:	movw	r0, #19956	; 0x4df4
   121bc:	movt	r0, #1
   121c0:	mov	r1, r5
   121c4:	bl	11fc8 <printf@plt>
   121c8:	mvn	r4, #0
   121cc:	b	121d4 <main@@Base+0x74>
   121d0:	mov	r4, #0
   121d4:	add	r0, sp, #8
   121d8:	mov	r1, r6
   121dc:	bl	14280 <table_column_is_valid@@Base>
   121e0:	cmp	r0, #0
   121e4:	beq	121fc <main@@Base+0x9c>
   121e8:	movw	r0, #19983	; 0x4e0f
   121ec:	movt	r0, #1
   121f0:	mov	r1, r6
   121f4:	bl	11fc8 <printf@plt>
   121f8:	mvn	r4, #0
   121fc:	add	r0, sp, #8
   12200:	mov	r1, r5
   12204:	mov	r2, r6
   12208:	bl	142f8 <table_cell_is_valid@@Base>
   1220c:	cmp	r0, #0
   12210:	beq	1222c <main@@Base+0xcc>
   12214:	movw	r0, #20013	; 0x4e2d
   12218:	movt	r0, #1
   1221c:	mov	r1, r5
   12220:	mov	r2, r6
   12224:	bl	11fc8 <printf@plt>
   12228:	mvn	r4, #0
   1222c:	add	r6, sp, #8
   12230:	mov	r0, r6
   12234:	bl	13a68 <table_add_row@@Base>
   12238:	mov	r5, r0
   1223c:	mov	r0, r6
   12240:	mov	r1, r5
   12244:	bl	142bc <table_row_is_valid@@Base>
   12248:	cmp	r0, #0
   1224c:	bne	12264 <main@@Base+0x104>
   12250:	movw	r0, #20045	; 0x4e4d
   12254:	movt	r0, #1
   12258:	mov	r1, r5
   1225c:	bl	11fc8 <printf@plt>
   12260:	mvn	r4, #0
   12264:	add	r7, sp, #8
   12268:	movw	r1, #20119	; 0x4e97
   1226c:	movt	r1, #1
   12270:	mov	r0, r7
   12274:	mov	r2, #0
   12278:	bl	12dc8 <table_add_column@@Base>
   1227c:	mov	r6, r0
   12280:	mov	r0, r7
   12284:	mov	r1, r6
   12288:	bl	14280 <table_column_is_valid@@Base>
   1228c:	cmp	r0, #0
   12290:	bne	122a8 <main@@Base+0x148>
   12294:	movw	r0, #20068	; 0x4e64
   12298:	movt	r0, #1
   1229c:	mov	r1, r6
   122a0:	bl	11fc8 <printf@plt>
   122a4:	mvn	r4, #0
   122a8:	add	r0, sp, #8
   122ac:	mov	r1, r5
   122b0:	mov	r2, r6
   122b4:	bl	142f8 <table_cell_is_valid@@Base>
   122b8:	cmp	r0, #0
   122bc:	bne	122d8 <main@@Base+0x178>
   122c0:	movw	r0, #20094	; 0x4e7e
   122c4:	movt	r0, #1
   122c8:	mov	r1, r5
   122cc:	mov	r2, r6
   122d0:	bl	11fc8 <printf@plt>
   122d4:	mvn	r4, #0
   122d8:	add	r0, sp, #8
   122dc:	bl	1234c <table_destroy@@Base>
   122e0:	mov	r0, r4
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, r7, fp, pc}

000122ec <table_new@@Base>:
   122ec:	push	{r4, sl, fp, lr}
   122f0:	add	fp, sp, #8
   122f4:	mov	r0, #56	; 0x38
   122f8:	bl	12004 <malloc@plt>
   122fc:	mov	r4, r0
   12300:	bl	1230c <table_init@@Base>
   12304:	mov	r0, r4
   12308:	pop	{r4, sl, fp, pc}

0001230c <table_init@@Base>:
   1230c:	push	{r4, sl, fp, lr}
   12310:	add	fp, sp, #8
   12314:	mov	r4, r0
   12318:	bl	1238c <table_destroy@@Base+0x40>
   1231c:	mov	r0, r4
   12320:	bl	123a4 <table_destroy@@Base+0x58>
   12324:	mov	r0, r4
   12328:	pop	{r4, sl, fp, lr}
   1232c:	b	123c0 <table_destroy@@Base+0x74>

00012330 <table_delete@@Base>:
   12330:	push	{r4, sl, fp, lr}
   12334:	add	fp, sp, #8
   12338:	mov	r4, r0
   1233c:	bl	1234c <table_destroy@@Base>
   12340:	mov	r0, r4
   12344:	pop	{r4, sl, fp, lr}
   12348:	b	11fd4 <free@plt>

0001234c <table_destroy@@Base>:
   1234c:	cmp	r0, #0
   12350:	bxeq	lr
   12354:	push	{r4, sl, fp, lr}
   12358:	add	fp, sp, #8
   1235c:	mov	r4, r0
   12360:	mvn	r1, #0
   12364:	mvn	r2, #0
   12368:	mov	r3, #64	; 0x40
   1236c:	bl	12c48 <table_notify@@Base>
   12370:	mov	r0, r4
   12374:	bl	123e0 <table_destroy@@Base+0x94>
   12378:	mov	r0, r4
   1237c:	bl	1242c <table_destroy@@Base+0xe0>
   12380:	mov	r0, r4
   12384:	pop	{r4, sl, fp, lr}
   12388:	b	12478 <table_destroy@@Base+0x12c>
   1238c:	mov	r1, #0
   12390:	mov	r2, #10
   12394:	str	r1, [r0]
   12398:	stmib	r0, {r1, r2}
   1239c:	str	r1, [r0, #12]
   123a0:	bx	lr
   123a4:	mov	r1, #0
   123a8:	mov	r2, #20
   123ac:	str	r1, [r0, #16]
   123b0:	str	r1, [r0, #20]
   123b4:	str	r2, [r0, #24]
   123b8:	str	r1, [r0, #28]
   123bc:	bx	lr
   123c0:	mov	r1, #0
   123c4:	vmov.i32	q8, #0	; 0x00000000
   123c8:	mov	r2, #10
   123cc:	str	r2, [r0, #48]	; 0x30
   123d0:	str	r1, [r0, #52]	; 0x34
   123d4:	add	r0, r0, #32
   123d8:	vst1.32	{d16-d17}, [r0]
   123dc:	bx	lr
   123e0:	push	{r4, r5, r6, sl, fp, lr}
   123e4:	add	fp, sp, #16
   123e8:	mov	r4, r0
   123ec:	bl	13a60 <table_get_row_length@@Base>
   123f0:	cmp	r0, #1
   123f4:	blt	12418 <table_destroy@@Base+0xcc>
   123f8:	mov	r5, r0
   123fc:	mov	r6, #0
   12400:	mov	r0, r4
   12404:	mov	r1, r6
   12408:	bl	139fc <table_row_destroy@@Base>
   1240c:	add	r6, r6, #1
   12410:	cmp	r5, r6
   12414:	bne	12400 <table_destroy@@Base+0xb4>
   12418:	ldr	r0, [r4, #16]
   1241c:	cmp	r0, #0
   12420:	popeq	{r4, r5, r6, sl, fp, pc}
   12424:	pop	{r4, r5, r6, sl, fp, lr}
   12428:	b	11fd4 <free@plt>
   1242c:	push	{r4, r5, r6, sl, fp, lr}
   12430:	add	fp, sp, #16
   12434:	mov	r4, r0
   12438:	bl	12d3c <table_get_column_length@@Base>
   1243c:	cmp	r0, #1
   12440:	blt	12464 <table_destroy@@Base+0x118>
   12444:	mov	r5, r0
   12448:	mov	r6, #0
   1244c:	mov	r0, r4
   12450:	mov	r1, r6
   12454:	bl	12d1c <table_column_destroy@@Base>
   12458:	add	r6, r6, #1
   1245c:	cmp	r5, r6
   12460:	bne	1244c <table_destroy@@Base+0x100>
   12464:	ldr	r0, [r4]
   12468:	cmp	r0, #0
   1246c:	popeq	{r4, r5, r6, sl, fp, pc}
   12470:	pop	{r4, r5, r6, sl, fp, lr}
   12474:	b	11fd4 <free@plt>
   12478:	push	{r4, sl, fp, lr}
   1247c:	add	fp, sp, #8
   12480:	mov	r4, r0
   12484:	ldr	r0, [r0, #36]	; 0x24
   12488:	cmp	r0, #0
   1248c:	beq	12494 <table_destroy@@Base+0x148>
   12490:	bl	11fd4 <free@plt>
   12494:	ldr	r0, [r4, #40]	; 0x28
   12498:	cmp	r0, #0
   1249c:	beq	124a4 <table_destroy@@Base+0x158>
   124a0:	bl	11fd4 <free@plt>
   124a4:	ldr	r0, [r4, #44]	; 0x2c
   124a8:	cmp	r0, #0
   124ac:	popeq	{r4, sl, fp, pc}
   124b0:	pop	{r4, sl, fp, lr}
   124b4:	b	11fd4 <free@plt>

000124b8 <table_dupe@@Base>:
   124b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124bc:	add	fp, sp, #28
   124c0:	sub	sp, sp, #12
   124c4:	mov	r4, r0
   124c8:	bl	13a60 <table_get_row_length@@Base>
   124cc:	mov	r8, r0
   124d0:	mov	r0, r4
   124d4:	bl	12d3c <table_get_column_length@@Base>
   124d8:	mov	r6, r0
   124dc:	bl	122ec <table_new@@Base>
   124e0:	mov	sl, r0
   124e4:	cmp	r6, #1
   124e8:	blt	12528 <table_dupe@@Base+0x70>
   124ec:	mov	r5, #0
   124f0:	mov	r0, r4
   124f4:	mov	r1, r5
   124f8:	bl	12da0 <table_get_column_name@@Base>
   124fc:	mov	r7, r0
   12500:	mov	r0, r4
   12504:	mov	r1, r5
   12508:	bl	12db4 <table_get_column_data_type@@Base>
   1250c:	mov	r2, r0
   12510:	mov	r0, sl
   12514:	mov	r1, r7
   12518:	bl	12dc8 <table_add_column@@Base>
   1251c:	add	r5, r5, #1
   12520:	cmp	r6, r5
   12524:	bne	124f0 <table_dupe@@Base+0x38>
   12528:	cmp	r8, #1
   1252c:	blt	12994 <table_dupe@@Base+0x4dc>
   12530:	mov	r5, #0
   12534:	add	r9, sp, #8
   12538:	mov	r0, sl
   1253c:	bl	13a68 <table_add_row@@Base>
   12540:	cmp	r6, #1
   12544:	blt	12988 <table_dupe@@Base+0x4d0>
   12548:	mov	r7, #0
   1254c:	mov	r0, r4
   12550:	mov	r1, r7
   12554:	bl	12db4 <table_get_column_data_type@@Base>
   12558:	cmp	r0, #23
   1255c:	bhi	1297c <table_dupe@@Base+0x4c4>
   12560:	add	r1, pc, #0
   12564:	ldr	pc, [r1, r0, lsl #2]
   12568:	andeq	r2, r1, r8, asr #11
   1256c:	strdeq	r2, [r1], -r0
   12570:	andeq	r2, r1, r8, lsl r6
   12574:	andeq	r2, r1, r0, asr #12
   12578:	andeq	r2, r1, r8, ror #12
   1257c:	muleq	r1, r0, r6
   12580:			; <UNDEFINED> instruction: 0x000126b8
   12584:	andeq	r2, r1, r0, ror #13
   12588:	andeq	r2, r1, r8, lsl #14
   1258c:	andeq	r2, r1, r0, lsr r7
   12590:	andeq	r2, r1, r8, asr r7
   12594:	andeq	r2, r1, r0, lsl #15
   12598:	andeq	r2, r1, r8, lsr #15
   1259c:	ldrdeq	r2, [r1], -r0
   125a0:	strdeq	r2, [r1], -r8
   125a4:	andeq	r2, r1, r0, lsr #16
   125a8:	andeq	r2, r1, r8, asr #16
   125ac:	andeq	r2, r1, ip, ror #16
   125b0:	muleq	r1, r0, r8
   125b4:			; <UNDEFINED> instruction: 0x000128b4
   125b8:	ldrdeq	r2, [r1], -ip
   125bc:	andeq	r2, r1, r4, lsl #18
   125c0:	andeq	r2, r1, ip, lsr #18
   125c4:	andeq	r2, r1, r4, asr r9
   125c8:	mov	r0, r4
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	1381c <table_get_int@@Base>
   125d8:	mov	r3, r0
   125dc:	mov	r0, sl
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	13ec8 <table_set_int@@Base>
   125ec:	b	1297c <table_dupe@@Base+0x4c4>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	13830 <table_get_uint@@Base>
   12600:	mov	r3, r0
   12604:	mov	r0, sl
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	13ef0 <table_set_uint@@Base>
   12614:	b	1297c <table_dupe@@Base+0x4c4>
   12618:	mov	r0, r4
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	13844 <table_get_int8@@Base>
   12628:	mov	r3, r0
   1262c:	mov	r0, sl
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	13f18 <table_set_int8@@Base>
   1263c:	b	1297c <table_dupe@@Base+0x4c4>
   12640:	mov	r0, r4
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	13858 <table_get_uint8@@Base>
   12650:	mov	r3, r0
   12654:	mov	r0, sl
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	13f40 <table_set_uint8@@Base>
   12664:	b	1297c <table_dupe@@Base+0x4c4>
   12668:	mov	r0, r4
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	1386c <table_get_int16@@Base>
   12678:	mov	r3, r0
   1267c:	mov	r0, sl
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	13f68 <table_set_int16@@Base>
   1268c:	b	1297c <table_dupe@@Base+0x4c4>
   12690:	mov	r0, r4
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	13880 <table_get_uint16@@Base>
   126a0:	mov	r3, r0
   126a4:	mov	r0, sl
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	13f90 <table_set_uint16@@Base>
   126b4:	b	1297c <table_dupe@@Base+0x4c4>
   126b8:	mov	r0, r4
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	13894 <table_get_int32@@Base>
   126c8:	mov	r3, r0
   126cc:	mov	r0, sl
   126d0:	mov	r1, r5
   126d4:	mov	r2, r7
   126d8:	bl	13fb8 <table_set_int32@@Base>
   126dc:	b	1297c <table_dupe@@Base+0x4c4>
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	138a8 <table_get_uint32@@Base>
   126f0:	mov	r3, r0
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	13fe0 <table_set_uint32@@Base>
   12704:	b	1297c <table_dupe@@Base+0x4c4>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	138bc <table_get_int64@@Base>
   12718:	stm	sp, {r0, r1}
   1271c:	mov	r0, sl
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	14008 <table_set_int64@@Base>
   1272c:	b	1297c <table_dupe@@Base+0x4c4>
   12730:	mov	r0, r4
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	138d0 <table_get_uint64@@Base>
   12740:	stm	sp, {r0, r1}
   12744:	mov	r0, sl
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	1403c <table_set_uint64@@Base>
   12754:	b	1297c <table_dupe@@Base+0x4c4>
   12758:	mov	r0, r4
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	138e4 <table_get_short@@Base>
   12768:	mov	r3, r0
   1276c:	mov	r0, sl
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	14070 <table_set_short@@Base>
   1277c:	b	1297c <table_dupe@@Base+0x4c4>
   12780:	mov	r0, r4
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	138f8 <table_get_ushort@@Base>
   12790:	mov	r3, r0
   12794:	mov	r0, sl
   12798:	mov	r1, r5
   1279c:	mov	r2, r7
   127a0:	bl	14098 <table_set_ushort@@Base>
   127a4:	b	1297c <table_dupe@@Base+0x4c4>
   127a8:	mov	r0, r4
   127ac:	mov	r1, r5
   127b0:	mov	r2, r7
   127b4:	bl	1390c <table_get_long@@Base>
   127b8:	mov	r3, r0
   127bc:	mov	r0, sl
   127c0:	mov	r1, r5
   127c4:	mov	r2, r7
   127c8:	bl	140c0 <table_set_long@@Base>
   127cc:	b	1297c <table_dupe@@Base+0x4c4>
   127d0:	mov	r0, r4
   127d4:	mov	r1, r5
   127d8:	mov	r2, r7
   127dc:	bl	13920 <table_get_ulong@@Base>
   127e0:	mov	r3, r0
   127e4:	mov	r0, sl
   127e8:	mov	r1, r5
   127ec:	mov	r2, r7
   127f0:	bl	140e8 <table_set_ulong@@Base>
   127f4:	b	1297c <table_dupe@@Base+0x4c4>
   127f8:	mov	r0, r4
   127fc:	mov	r1, r5
   12800:	mov	r2, r7
   12804:	bl	13934 <table_get_llong@@Base>
   12808:	stm	sp, {r0, r1}
   1280c:	mov	r0, sl
   12810:	mov	r1, r5
   12814:	mov	r2, r7
   12818:	bl	14110 <table_set_llong@@Base>
   1281c:	b	1297c <table_dupe@@Base+0x4c4>
   12820:	mov	r0, r4
   12824:	mov	r1, r5
   12828:	mov	r2, r7
   1282c:	bl	13948 <table_get_ullong@@Base>
   12830:	stm	sp, {r0, r1}
   12834:	mov	r0, sl
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	14144 <table_set_ullong@@Base>
   12844:	b	1297c <table_dupe@@Base+0x4c4>
   12848:	mov	r0, r4
   1284c:	mov	r1, r5
   12850:	mov	r2, r7
   12854:	bl	1395c <table_get_float@@Base>
   12858:	mov	r0, sl
   1285c:	mov	r1, r5
   12860:	mov	r2, r7
   12864:	bl	14178 <table_set_float@@Base>
   12868:	b	1297c <table_dupe@@Base+0x4c4>
   1286c:	mov	r0, r4
   12870:	mov	r1, r5
   12874:	mov	r2, r7
   12878:	bl	13970 <table_get_double@@Base>
   1287c:	mov	r0, sl
   12880:	mov	r1, r5
   12884:	mov	r2, r7
   12888:	bl	141a0 <table_set_double@@Base>
   1288c:	b	1297c <table_dupe@@Base+0x4c4>
   12890:	mov	r0, r4
   12894:	mov	r1, r5
   12898:	mov	r2, r7
   1289c:	bl	13984 <table_get_ldouble@@Base>
   128a0:	mov	r0, sl
   128a4:	mov	r1, r5
   128a8:	mov	r2, r7
   128ac:	bl	141c8 <table_set_ldouble@@Base>
   128b0:	b	1297c <table_dupe@@Base+0x4c4>
   128b4:	mov	r0, r4
   128b8:	mov	r1, r5
   128bc:	mov	r2, r7
   128c0:	bl	13998 <table_get_char@@Base>
   128c4:	mov	r3, r0
   128c8:	mov	r0, sl
   128cc:	mov	r1, r5
   128d0:	mov	r2, r7
   128d4:	bl	14210 <table_set_char@@Base>
   128d8:	b	1297c <table_dupe@@Base+0x4c4>
   128dc:	mov	r0, r4
   128e0:	mov	r1, r5
   128e4:	mov	r2, r7
   128e8:	bl	139ac <table_get_uchar@@Base>
   128ec:	mov	r3, r0
   128f0:	mov	r0, sl
   128f4:	mov	r1, r5
   128f8:	mov	r2, r7
   128fc:	bl	14238 <table_set_uchar@@Base>
   12900:	b	1297c <table_dupe@@Base+0x4c4>
   12904:	mov	r0, r4
   12908:	mov	r1, r5
   1290c:	mov	r2, r7
   12910:	bl	139c0 <table_get_string@@Base>
   12914:	mov	r3, r0
   12918:	mov	r0, sl
   1291c:	mov	r1, r5
   12920:	mov	r2, r7
   12924:	bl	141f0 <table_set_string@@Base>
   12928:	b	1297c <table_dupe@@Base+0x4c4>
   1292c:	mov	r0, r4
   12930:	mov	r1, r5
   12934:	mov	r2, r7
   12938:	bl	13808 <table_get_bool@@Base>
   1293c:	mov	r3, r0
   12940:	mov	r0, sl
   12944:	mov	r1, r5
   12948:	mov	r2, r7
   1294c:	bl	13ea0 <table_set_bool@@Base>
   12950:	b	1297c <table_dupe@@Base+0x4c4>
   12954:	mov	r0, r4
   12958:	mov	r1, r5
   1295c:	mov	r2, r7
   12960:	bl	139c4 <table_get_ptr@@Base>
   12964:	str	r0, [sp, #8]
   12968:	mov	r0, sl
   1296c:	mov	r1, r5
   12970:	mov	r2, r7
   12974:	mov	r3, r9
   12978:	bl	14260 <table_set_ptr@@Base>
   1297c:	add	r7, r7, #1
   12980:	cmp	r6, r7
   12984:	bne	1254c <table_dupe@@Base+0x94>
   12988:	add	r5, r5, #1
   1298c:	cmp	r5, r8
   12990:	bne	12538 <table_dupe@@Base+0x80>
   12994:	mov	r0, sl
   12998:	sub	sp, fp, #28
   1299c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000129a0 <table_get_major_version@@Base>:
   129a0:	mov	r0, #0
   129a4:	bx	lr

000129a8 <table_get_minor_version@@Base>:
   129a8:	mov	r0, #0
   129ac:	bx	lr

000129b0 <table_get_patch_version@@Base>:
   129b0:	mov	r0, #0
   129b4:	bx	lr

000129b8 <table_get_version@@Base>:
   129b8:	movw	r0, #20272	; 0x4f30
   129bc:	movt	r0, #1
   129c0:	bx	lr

000129c4 <table_get_callback_length@@Base>:
   129c4:	ldr	r0, [r0, #32]
   129c8:	bx	lr

000129cc <table_register_callback@@Base>:
   129cc:	push	{r4, r5, r6, r7, fp, lr}
   129d0:	add	fp, sp, #16
   129d4:	sub	sp, sp, #8
   129d8:	mov	r5, r3
   129dc:	mov	r6, r2
   129e0:	mov	r7, r1
   129e4:	mov	r4, r0
   129e8:	bl	12a60 <table_register_callback@@Base+0x94>
   129ec:	cmp	r0, #1
   129f0:	blt	12a0c <table_register_callback@@Base+0x40>
   129f4:	ldr	r1, [r4, #44]	; 0x2c
   129f8:	ldr	r2, [r1, r0, lsl #2]
   129fc:	orr	r2, r2, r5
   12a00:	str	r2, [r1, r0, lsl #2]
   12a04:	sub	sp, fp, #16
   12a08:	pop	{r4, r5, r6, r7, fp, pc}
   12a0c:	ldr	r0, [r4, #32]
   12a10:	ldr	r1, [r4, #48]	; 0x30
   12a14:	udiv	r2, r0, r1
   12a18:	mls	r0, r2, r1, r0
   12a1c:	cmp	r0, #0
   12a20:	bne	12a2c <table_register_callback@@Base+0x60>
   12a24:	mov	r0, r4
   12a28:	bl	12ab8 <table_register_callback@@Base+0xec>
   12a2c:	mov	r0, r4
   12a30:	bl	129c4 <table_get_callback_length@@Base>
   12a34:	mov	r1, r0
   12a38:	str	r5, [sp]
   12a3c:	mov	r0, r4
   12a40:	mov	r2, r7
   12a44:	mov	r3, r6
   12a48:	bl	12b10 <table_register_callback@@Base+0x144>
   12a4c:	ldr	r0, [r4, #32]
   12a50:	add	r0, r0, #1
   12a54:	str	r0, [r4, #32]
   12a58:	sub	sp, fp, #16
   12a5c:	pop	{r4, r5, r6, r7, fp, pc}
   12a60:	push	{r4, sl, fp, lr}
   12a64:	add	fp, sp, #8
   12a68:	mov	ip, r0
   12a6c:	ldr	r3, [r0, #32]
   12a70:	mvn	r0, #0
   12a74:	cmp	r3, #1
   12a78:	poplt	{r4, sl, fp, pc}
   12a7c:	ldr	lr, [ip, #36]	; 0x24
   12a80:	mov	r3, #0
   12a84:	ldr	r4, [lr, r3, lsl #2]
   12a88:	cmp	r4, r1
   12a8c:	bne	12aa4 <table_register_callback@@Base+0xd8>
   12a90:	ldr	r4, [ip, #40]	; 0x28
   12a94:	ldr	r4, [r4, r3, lsl #2]
   12a98:	cmp	r4, r2
   12a9c:	moveq	r0, r3
   12aa0:	popeq	{r4, sl, fp, pc}
   12aa4:	add	r3, r3, #1
   12aa8:	ldr	r4, [ip, #32]
   12aac:	cmp	r3, r4
   12ab0:	blt	12a84 <table_register_callback@@Base+0xb8>
   12ab4:	pop	{r4, sl, fp, pc}
   12ab8:	push	{r4, sl, fp, lr}
   12abc:	add	fp, sp, #8
   12ac0:	mov	r4, r0
   12ac4:	ldr	r0, [r0, #36]	; 0x24
   12ac8:	ldr	r1, [r4, #48]	; 0x30
   12acc:	ldr	r2, [r4, #52]	; 0x34
   12ad0:	add	r1, r2, r1
   12ad4:	str	r1, [r4, #52]	; 0x34
   12ad8:	lsl	r1, r1, #2
   12adc:	bl	11fec <realloc@plt>
   12ae0:	str	r0, [r4, #36]	; 0x24
   12ae4:	ldr	r0, [r4, #40]	; 0x28
   12ae8:	ldr	r1, [r4, #52]	; 0x34
   12aec:	lsl	r1, r1, #2
   12af0:	bl	11fec <realloc@plt>
   12af4:	str	r0, [r4, #40]	; 0x28
   12af8:	ldr	r0, [r4, #44]	; 0x2c
   12afc:	ldr	r1, [r4, #52]	; 0x34
   12b00:	lsl	r1, r1, #2
   12b04:	bl	11fec <realloc@plt>
   12b08:	str	r0, [r4, #44]	; 0x2c
   12b0c:	pop	{r4, sl, fp, pc}
   12b10:	ldr	ip, [r0, #36]	; 0x24
   12b14:	str	r2, [ip, r1, lsl #2]
   12b18:	ldr	r2, [r0, #40]	; 0x28
   12b1c:	str	r3, [r2, r1, lsl #2]
   12b20:	ldr	r0, [r0, #44]	; 0x2c
   12b24:	ldr	r2, [sp]
   12b28:	str	r2, [r0, r1, lsl #2]
   12b2c:	bx	lr

00012b30 <table_unregister_callback@@Base>:
   12b30:	push	{r4, sl, fp, lr}
   12b34:	add	fp, sp, #8
   12b38:	mov	r4, r0
   12b3c:	bl	12a60 <table_register_callback@@Base+0x94>
   12b40:	cmn	r0, #1
   12b44:	popeq	{r4, sl, fp, pc}
   12b48:	ldr	r1, [r4, #32]
   12b4c:	sub	r2, r1, #1
   12b50:	cmp	r0, r2
   12b54:	bge	12b9c <table_unregister_callback@@Base+0x6c>
   12b58:	mov	r1, #4
   12b5c:	add	r1, r1, r0, lsl #2
   12b60:	ldr	r2, [r4, #36]	; 0x24
   12b64:	ldr	r3, [r2, r1]!
   12b68:	str	r3, [r2, #-4]
   12b6c:	ldr	r2, [r4, #40]	; 0x28
   12b70:	ldr	r3, [r2, r1]!
   12b74:	str	r3, [r2, #-4]
   12b78:	ldr	r2, [r4, #44]	; 0x2c
   12b7c:	ldr	r3, [r2, r1]!
   12b80:	str	r3, [r2, #-4]
   12b84:	add	r1, r1, #4
   12b88:	add	r0, r0, #1
   12b8c:	ldr	r2, [r4, #32]
   12b90:	sub	r2, r2, #1
   12b94:	cmp	r0, r2
   12b98:	blt	12b60 <table_unregister_callback@@Base+0x30>
   12b9c:	str	r2, [r4, #32]
   12ba0:	ldr	r0, [r4, #48]	; 0x30
   12ba4:	udiv	r1, r2, r0
   12ba8:	mls	r0, r1, r0, r2
   12bac:	cmp	r0, #0
   12bb0:	beq	12bb8 <table_unregister_callback@@Base+0x88>
   12bb4:	pop	{r4, sl, fp, pc}
   12bb8:	mov	r0, r4
   12bbc:	pop	{r4, sl, fp, lr}
   12bc0:	b	12bc4 <table_unregister_callback@@Base+0x94>
   12bc4:	push	{r4, sl, fp, lr}
   12bc8:	add	fp, sp, #8
   12bcc:	mov	r4, r0
   12bd0:	ldr	r0, [r0, #36]	; 0x24
   12bd4:	ldr	r1, [r4, #48]	; 0x30
   12bd8:	ldr	r2, [r4, #52]	; 0x34
   12bdc:	subs	r1, r2, r1
   12be0:	str	r1, [r4, #52]	; 0x34
   12be4:	beq	12c20 <table_unregister_callback@@Base+0xf0>
   12be8:	lsl	r1, r1, #2
   12bec:	bl	11fec <realloc@plt>
   12bf0:	str	r0, [r4, #36]	; 0x24
   12bf4:	ldr	r0, [r4, #40]	; 0x28
   12bf8:	ldr	r1, [r4, #52]	; 0x34
   12bfc:	lsl	r1, r1, #2
   12c00:	bl	11fec <realloc@plt>
   12c04:	str	r0, [r4, #40]	; 0x28
   12c08:	ldr	r0, [r4, #44]	; 0x2c
   12c0c:	ldr	r1, [r4, #52]	; 0x34
   12c10:	lsl	r1, r1, #2
   12c14:	bl	11fec <realloc@plt>
   12c18:	str	r0, [r4, #44]	; 0x2c
   12c1c:	pop	{r4, sl, fp, pc}
   12c20:	bl	11fd4 <free@plt>
   12c24:	ldr	r0, [r4, #40]	; 0x28
   12c28:	bl	11fd4 <free@plt>
   12c2c:	ldr	r0, [r4, #44]	; 0x2c
   12c30:	bl	11fd4 <free@plt>
   12c34:	mov	r0, #0
   12c38:	str	r0, [r4, #36]	; 0x24
   12c3c:	str	r0, [r4, #40]	; 0x28
   12c40:	str	r0, [r4, #44]	; 0x2c
   12c44:	pop	{r4, sl, fp, pc}

00012c48 <table_notify@@Base>:
   12c48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c4c:	add	fp, sp, #24
   12c50:	sub	sp, sp, #8
   12c54:	mov	r7, r0
   12c58:	ldr	r0, [r0, #32]
   12c5c:	cmp	r0, #1
   12c60:	blt	12cbc <table_notify@@Base+0x74>
   12c64:	mov	r4, r3
   12c68:	mov	r8, r2
   12c6c:	mov	r9, r1
   12c70:	mov	r5, #0
   12c74:	ldr	r0, [r7, #44]	; 0x2c
   12c78:	ldr	r0, [r0, r5, lsl #2]
   12c7c:	tst	r0, r4
   12c80:	beq	12cac <table_notify@@Base+0x64>
   12c84:	ldr	r0, [r7, #36]	; 0x24
   12c88:	ldr	r1, [r7, #40]	; 0x28
   12c8c:	ldr	r6, [r0, r5, lsl #2]
   12c90:	ldr	r0, [r1, r5, lsl #2]
   12c94:	str	r0, [sp]
   12c98:	mov	r0, r7
   12c9c:	mov	r1, r9
   12ca0:	mov	r2, r8
   12ca4:	mov	r3, r4
   12ca8:	blx	r6
   12cac:	ldr	r0, [r7, #32]
   12cb0:	add	r5, r5, #1
   12cb4:	cmp	r5, r0
   12cb8:	blt	12c74 <table_notify@@Base+0x2c>
   12cbc:	sub	sp, fp, #24
   12cc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012cc4 <table_column_init@@Base>:
   12cc4:	push	{r4, r5, r6, r7, fp, lr}
   12cc8:	add	fp, sp, #16
   12ccc:	mov	r4, r3
   12cd0:	mov	r5, r2
   12cd4:	bl	12d0c <table_get_col_ptr@@Base>
   12cd8:	mov	r6, r0
   12cdc:	mov	r0, r5
   12ce0:	bl	12028 <strlen@plt>
   12ce4:	add	r0, r0, #1
   12ce8:	bl	12004 <malloc@plt>
   12cec:	str	r0, [r6]
   12cf0:	ldr	r7, [fp, #8]
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d04 <table_column_init@@Base+0x40>
   12cfc:	mov	r1, r5
   12d00:	bl	11ff8 <strcpy@plt>
   12d04:	stmib	r6, {r4, r7}
   12d08:	pop	{r4, r5, r6, r7, fp, pc}

00012d0c <table_get_col_ptr@@Base>:
   12d0c:	ldr	r0, [r0]
   12d10:	add	r1, r1, r1, lsl #1
   12d14:	add	r0, r0, r1, lsl #2
   12d18:	bx	lr

00012d1c <table_column_destroy@@Base>:
   12d1c:	push	{fp, lr}
   12d20:	mov	fp, sp
   12d24:	bl	12d0c <table_get_col_ptr@@Base>
   12d28:	ldr	r0, [r0]
   12d2c:	cmp	r0, #0
   12d30:	popeq	{fp, pc}
   12d34:	pop	{fp, lr}
   12d38:	b	11fd4 <free@plt>

00012d3c <table_get_column_length@@Base>:
   12d3c:	ldr	r0, [r0, #4]
   12d40:	bx	lr

00012d44 <table_get_column@@Base>:
   12d44:	push	{r4, r5, r6, r7, fp, lr}
   12d48:	add	fp, sp, #16
   12d4c:	mov	r6, r1
   12d50:	mov	r7, r0
   12d54:	bl	12d3c <table_get_column_length@@Base>
   12d58:	mov	r4, r0
   12d5c:	mov	r5, #0
   12d60:	cmp	r0, #1
   12d64:	blt	12d90 <table_get_column@@Base+0x4c>
   12d68:	mov	r0, r7
   12d6c:	mov	r1, r5
   12d70:	bl	12da0 <table_get_column_name@@Base>
   12d74:	mov	r1, r6
   12d78:	bl	11fbc <strcmp@plt>
   12d7c:	cmp	r0, #0
   12d80:	beq	12d90 <table_get_column@@Base+0x4c>
   12d84:	add	r5, r5, #1
   12d88:	cmp	r5, r4
   12d8c:	blt	12d68 <table_get_column@@Base+0x24>
   12d90:	cmp	r5, r4
   12d94:	mvneq	r5, #0
   12d98:	mov	r0, r5
   12d9c:	pop	{r4, r5, r6, r7, fp, pc}

00012da0 <table_get_column_name@@Base>:
   12da0:	push	{fp, lr}
   12da4:	mov	fp, sp
   12da8:	bl	12d0c <table_get_col_ptr@@Base>
   12dac:	ldr	r0, [r0]
   12db0:	pop	{fp, pc}

00012db4 <table_get_column_data_type@@Base>:
   12db4:	push	{fp, lr}
   12db8:	mov	fp, sp
   12dbc:	bl	12d0c <table_get_col_ptr@@Base>
   12dc0:	ldr	r0, [r0, #4]
   12dc4:	pop	{fp, pc}

00012dc8 <table_add_column@@Base>:
   12dc8:	push	{r4, r5, r6, sl, fp, lr}
   12dcc:	add	fp, sp, #16
   12dd0:	mov	r5, r2
   12dd4:	mov	r6, r1
   12dd8:	mov	r4, r0
   12ddc:	bl	12d3c <table_get_column_length@@Base>
   12de0:	ldr	r1, [r4, #8]
   12de4:	udiv	r2, r0, r1
   12de8:	mls	r0, r2, r1, r0
   12dec:	cmp	r0, #0
   12df0:	bne	12dfc <table_add_column@@Base+0x34>
   12df4:	mov	r0, r4
   12df8:	bl	12e38 <table_add_column@@Base+0x70>
   12dfc:	mov	r0, r4
   12e00:	mov	r1, r6
   12e04:	mov	r2, r5
   12e08:	bl	12eb4 <table_add_column@@Base+0xec>
   12e0c:	mov	r0, r4
   12e10:	bl	12d3c <table_get_column_length@@Base>
   12e14:	mov	r2, r0
   12e18:	mov	r0, r4
   12e1c:	mvn	r1, #0
   12e20:	mov	r3, #8
   12e24:	bl	12c48 <table_notify@@Base>
   12e28:	ldr	r0, [r4, #4]
   12e2c:	add	r1, r0, #1
   12e30:	str	r1, [r4, #4]
   12e34:	pop	{r4, r5, r6, sl, fp, pc}
   12e38:	push	{r4, r5, r6, r7, fp, lr}
   12e3c:	add	fp, sp, #16
   12e40:	mov	r4, r0
   12e44:	ldr	r0, [r0]
   12e48:	ldr	r1, [r4, #8]
   12e4c:	ldr	r2, [r4, #12]
   12e50:	add	r1, r2, r1
   12e54:	str	r1, [r4, #12]
   12e58:	add	r1, r1, r1, lsl #1
   12e5c:	lsl	r1, r1, #2
   12e60:	bl	11fec <realloc@plt>
   12e64:	str	r0, [r4]
   12e68:	mov	r0, r4
   12e6c:	bl	13a60 <table_get_row_length@@Base>
   12e70:	cmp	r0, #1
   12e74:	poplt	{r4, r5, r6, r7, fp, pc}
   12e78:	mov	r5, r0
   12e7c:	mov	r6, #0
   12e80:	mov	r0, r4
   12e84:	mov	r1, r6
   12e88:	bl	139f0 <table_get_row_ptr@@Base>
   12e8c:	mov	r7, r0
   12e90:	ldr	r0, [r0]
   12e94:	ldr	r1, [r4, #12]
   12e98:	lsl	r1, r1, #2
   12e9c:	bl	11fec <realloc@plt>
   12ea0:	str	r0, [r7]
   12ea4:	add	r6, r6, #1
   12ea8:	cmp	r5, r6
   12eac:	bne	12e80 <table_add_column@@Base+0xb8>
   12eb0:	pop	{r4, r5, r6, r7, fp, pc}
   12eb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12eb8:	add	fp, sp, #24
   12ebc:	sub	sp, sp, #8
   12ec0:	mov	r7, r2
   12ec4:	mov	r8, r1
   12ec8:	mov	r4, r0
   12ecc:	bl	13a60 <table_get_row_length@@Base>
   12ed0:	mov	r5, r0
   12ed4:	mov	r0, r4
   12ed8:	bl	12d3c <table_get_column_length@@Base>
   12edc:	mov	r6, r0
   12ee0:	mov	r0, r7
   12ee4:	bl	137dc <table_get_default_compare_function_for_data_type@@Base>
   12ee8:	str	r0, [sp]
   12eec:	mov	r0, r4
   12ef0:	mov	r1, r6
   12ef4:	mov	r2, r8
   12ef8:	mov	r3, r7
   12efc:	bl	12cc4 <table_column_init@@Base>
   12f00:	cmp	r5, #1
   12f04:	blt	12f28 <table_add_column@@Base+0x160>
   12f08:	mov	r7, #0
   12f0c:	mov	r0, r4
   12f10:	mov	r1, r7
   12f14:	mov	r2, r6
   12f18:	bl	1435c <table_cell_init@@Base>
   12f1c:	add	r7, r7, #1
   12f20:	cmp	r5, r7
   12f24:	bne	12f0c <table_add_column@@Base+0x144>
   12f28:	sub	sp, fp, #24
   12f2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012f30 <table_remove_column@@Base>:
   12f30:	push	{r4, r5, fp, lr}
   12f34:	add	fp, sp, #8
   12f38:	mov	r4, r1
   12f3c:	mov	r5, r0
   12f40:	bl	12f90 <table_remove_column@@Base+0x60>
   12f44:	ldr	r0, [r5, #4]
   12f48:	sub	r0, r0, #1
   12f4c:	str	r0, [r5, #4]
   12f50:	mov	r0, r5
   12f54:	bl	12d3c <table_get_column_length@@Base>
   12f58:	ldr	r1, [r5, #8]
   12f5c:	udiv	r2, r0, r1
   12f60:	mls	r0, r2, r1, r0
   12f64:	cmp	r0, #0
   12f68:	bne	12f74 <table_remove_column@@Base+0x44>
   12f6c:	mov	r0, r5
   12f70:	bl	13054 <table_remove_column@@Base+0x124>
   12f74:	mov	r0, r5
   12f78:	mvn	r1, #0
   12f7c:	mov	r2, r4
   12f80:	mov	r3, #16
   12f84:	bl	12c48 <table_notify@@Base>
   12f88:	mov	r0, #0
   12f8c:	pop	{r4, r5, fp, pc}
   12f90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f94:	add	fp, sp, #24
   12f98:	mov	r4, r1
   12f9c:	mov	r5, r0
   12fa0:	bl	12d1c <table_column_destroy@@Base>
   12fa4:	mov	r0, r5
   12fa8:	bl	12d3c <table_get_column_length@@Base>
   12fac:	sub	r6, r0, #1
   12fb0:	cmp	r6, r4
   12fb4:	ble	12fe8 <table_remove_column@@Base+0xb8>
   12fb8:	sub	r0, r6, r4
   12fbc:	add	r1, r4, r4, lsl #1
   12fc0:	lsl	r1, r1, #2
   12fc4:	ldr	r2, [r5]
   12fc8:	add	r2, r2, r1
   12fcc:	vldr	d16, [r2, #12]
   12fd0:	ldr	r3, [r2, #20]
   12fd4:	str	r3, [r2, #8]
   12fd8:	vstr	d16, [r2]
   12fdc:	subs	r0, r0, #1
   12fe0:	add	r1, r1, #12
   12fe4:	bne	12fc4 <table_remove_column@@Base+0x94>
   12fe8:	mov	r0, r5
   12fec:	bl	13a60 <table_get_row_length@@Base>
   12ff0:	cmp	r0, #1
   12ff4:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ff8:	mov	r8, r0
   12ffc:	mov	r7, #0
   13000:	mov	r0, r5
   13004:	mov	r1, r7
   13008:	mov	r2, r4
   1300c:	bl	14390 <table_cell_destroy@@Base>
   13010:	mov	r0, r5
   13014:	mov	r1, r7
   13018:	bl	139f0 <table_get_row_ptr@@Base>
   1301c:	cmp	r6, r4
   13020:	ble	13044 <table_remove_column@@Base+0x114>
   13024:	mov	r1, r4
   13028:	ldr	r2, [r0]
   1302c:	add	r3, r2, r1, lsl #2
   13030:	ldr	r3, [r3, #4]
   13034:	str	r3, [r2, r1, lsl #2]
   13038:	add	r1, r1, #1
   1303c:	cmp	r6, r1
   13040:	bne	13028 <table_remove_column@@Base+0xf8>
   13044:	add	r7, r7, #1
   13048:	cmp	r7, r8
   1304c:	bne	13000 <table_remove_column@@Base+0xd0>
   13050:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13054:	push	{r4, r5, r6, r7, fp, lr}
   13058:	add	fp, sp, #16
   1305c:	mov	r4, r0
   13060:	ldr	r0, [r0]
   13064:	ldr	r1, [r4, #8]
   13068:	ldr	r2, [r4, #12]
   1306c:	sub	r1, r2, r1
   13070:	str	r1, [r4, #12]
   13074:	add	r1, r1, r1, lsl #1
   13078:	lsl	r1, r1, #2
   1307c:	bl	11fec <realloc@plt>
   13080:	str	r0, [r4]
   13084:	mov	r0, r4
   13088:	bl	13a60 <table_get_row_length@@Base>
   1308c:	cmp	r0, #1
   13090:	poplt	{r4, r5, r6, r7, fp, pc}
   13094:	mov	r5, r0
   13098:	mov	r6, #0
   1309c:	mov	r0, r4
   130a0:	mov	r1, r6
   130a4:	bl	139f0 <table_get_row_ptr@@Base>
   130a8:	mov	r7, r0
   130ac:	ldr	r0, [r0]
   130b0:	ldr	r1, [r4, #12]
   130b4:	lsl	r1, r1, #2
   130b8:	bl	11fec <realloc@plt>
   130bc:	str	r0, [r7]
   130c0:	add	r6, r6, #1
   130c4:	cmp	r5, r6
   130c8:	bne	1309c <table_remove_column@@Base+0x16c>
   130cc:	pop	{r4, r5, r6, r7, fp, pc}

000130d0 <table_get_column_compare_function@@Base>:
   130d0:	push	{fp, lr}
   130d4:	mov	fp, sp
   130d8:	bl	12d0c <table_get_col_ptr@@Base>
   130dc:	ldr	r0, [r0, #8]
   130e0:	pop	{fp, pc}

000130e4 <table_set_column_compare_function@@Base>:
   130e4:	push	{r4, sl, fp, lr}
   130e8:	add	fp, sp, #8
   130ec:	mov	r4, r2
   130f0:	bl	12d0c <table_get_col_ptr@@Base>
   130f4:	str	r4, [r0, #8]
   130f8:	pop	{r4, sl, fp, pc}

000130fc <table_compare_bool@@Base>:
   130fc:	cmp	r0, #0
   13100:	beq	13134 <table_compare_bool@@Base+0x38>
   13104:	cmp	r1, #0
   13108:	moveq	r1, #1
   1310c:	moveq	r0, r1
   13110:	bxeq	lr
   13114:	ldrb	r2, [r1]
   13118:	ldrb	r0, [r0]
   1311c:	mov	r1, #0
   13120:	cmp	r0, r2
   13124:	mvncc	r1, #0
   13128:	movwhi	r1, #1
   1312c:	mov	r0, r1
   13130:	bx	lr
   13134:	cmp	r1, #0
   13138:	mvnne	r1, #0
   1313c:	mov	r0, r1
   13140:	bx	lr

00013144 <table_compare_int@@Base>:
   13144:	cmp	r0, #0
   13148:	beq	1317c <table_compare_int@@Base+0x38>
   1314c:	cmp	r1, #0
   13150:	moveq	r1, #1
   13154:	moveq	r0, r1
   13158:	bxeq	lr
   1315c:	ldr	r2, [r1]
   13160:	ldr	r0, [r0]
   13164:	mov	r1, #0
   13168:	cmp	r0, r2
   1316c:	mvnlt	r1, #0
   13170:	movwgt	r1, #1
   13174:	mov	r0, r1
   13178:	bx	lr
   1317c:	cmp	r1, #0
   13180:	mvnne	r1, #0
   13184:	mov	r0, r1
   13188:	bx	lr

0001318c <table_compare_uint@@Base>:
   1318c:	cmp	r0, #0
   13190:	beq	131c4 <table_compare_uint@@Base+0x38>
   13194:	cmp	r1, #0
   13198:	moveq	r1, #1
   1319c:	moveq	r0, r1
   131a0:	bxeq	lr
   131a4:	ldr	r2, [r1]
   131a8:	ldr	r0, [r0]
   131ac:	mov	r1, #0
   131b0:	cmp	r0, r2
   131b4:	mvncc	r1, #0
   131b8:	movwhi	r1, #1
   131bc:	mov	r0, r1
   131c0:	bx	lr
   131c4:	cmp	r1, #0
   131c8:	mvnne	r1, #0
   131cc:	mov	r0, r1
   131d0:	bx	lr

000131d4 <table_compare_int8@@Base>:
   131d4:	cmp	r0, #0
   131d8:	beq	1320c <table_compare_int8@@Base+0x38>
   131dc:	cmp	r1, #0
   131e0:	moveq	r1, #1
   131e4:	moveq	r0, r1
   131e8:	bxeq	lr
   131ec:	ldrsb	r2, [r1]
   131f0:	ldrsb	r0, [r0]
   131f4:	mov	r1, #0
   131f8:	cmp	r0, r2
   131fc:	mvnlt	r1, #0
   13200:	movwgt	r1, #1
   13204:	mov	r0, r1
   13208:	bx	lr
   1320c:	cmp	r1, #0
   13210:	mvnne	r1, #0
   13214:	mov	r0, r1
   13218:	bx	lr

0001321c <table_compare_uint8@@Base>:
   1321c:	cmp	r0, #0
   13220:	beq	13254 <table_compare_uint8@@Base+0x38>
   13224:	cmp	r1, #0
   13228:	moveq	r1, #1
   1322c:	moveq	r0, r1
   13230:	bxeq	lr
   13234:	ldrb	r2, [r1]
   13238:	ldrb	r0, [r0]
   1323c:	mov	r1, #0
   13240:	cmp	r0, r2
   13244:	mvncc	r1, #0
   13248:	movwhi	r1, #1
   1324c:	mov	r0, r1
   13250:	bx	lr
   13254:	cmp	r1, #0
   13258:	mvnne	r1, #0
   1325c:	mov	r0, r1
   13260:	bx	lr

00013264 <table_compare_int16@@Base>:
   13264:	cmp	r0, #0
   13268:	beq	1329c <table_compare_int16@@Base+0x38>
   1326c:	cmp	r1, #0
   13270:	moveq	r1, #1
   13274:	moveq	r0, r1
   13278:	bxeq	lr
   1327c:	ldrsh	r2, [r1]
   13280:	ldrsh	r0, [r0]
   13284:	mov	r1, #0
   13288:	cmp	r0, r2
   1328c:	mvnlt	r1, #0
   13290:	movwgt	r1, #1
   13294:	mov	r0, r1
   13298:	bx	lr
   1329c:	cmp	r1, #0
   132a0:	mvnne	r1, #0
   132a4:	mov	r0, r1
   132a8:	bx	lr

000132ac <table_compare_uint16@@Base>:
   132ac:	cmp	r0, #0
   132b0:	beq	132e4 <table_compare_uint16@@Base+0x38>
   132b4:	cmp	r1, #0
   132b8:	moveq	r1, #1
   132bc:	moveq	r0, r1
   132c0:	bxeq	lr
   132c4:	ldrh	r2, [r1]
   132c8:	ldrh	r0, [r0]
   132cc:	mov	r1, #0
   132d0:	cmp	r0, r2
   132d4:	mvncc	r1, #0
   132d8:	movwhi	r1, #1
   132dc:	mov	r0, r1
   132e0:	bx	lr
   132e4:	cmp	r1, #0
   132e8:	mvnne	r1, #0
   132ec:	mov	r0, r1
   132f0:	bx	lr

000132f4 <table_compare_int32@@Base>:
   132f4:	cmp	r0, #0
   132f8:	beq	1332c <table_compare_int32@@Base+0x38>
   132fc:	cmp	r1, #0
   13300:	moveq	r1, #1
   13304:	moveq	r0, r1
   13308:	bxeq	lr
   1330c:	ldr	r2, [r1]
   13310:	ldr	r0, [r0]
   13314:	mov	r1, #0
   13318:	cmp	r0, r2
   1331c:	mvnlt	r1, #0
   13320:	movwgt	r1, #1
   13324:	mov	r0, r1
   13328:	bx	lr
   1332c:	cmp	r1, #0
   13330:	mvnne	r1, #0
   13334:	mov	r0, r1
   13338:	bx	lr

0001333c <table_compare_uint32@@Base>:
   1333c:	cmp	r0, #0
   13340:	beq	13374 <table_compare_uint32@@Base+0x38>
   13344:	cmp	r1, #0
   13348:	moveq	r1, #1
   1334c:	moveq	r0, r1
   13350:	bxeq	lr
   13354:	ldr	r2, [r1]
   13358:	ldr	r0, [r0]
   1335c:	mov	r1, #0
   13360:	cmp	r0, r2
   13364:	mvncc	r1, #0
   13368:	movwhi	r1, #1
   1336c:	mov	r0, r1
   13370:	bx	lr
   13374:	cmp	r1, #0
   13378:	mvnne	r1, #0
   1337c:	mov	r0, r1
   13380:	bx	lr

00013384 <table_compare_int64@@Base>:
   13384:	cmp	r0, #0
   13388:	beq	133dc <table_compare_int64@@Base+0x58>
   1338c:	cmp	r1, #0
   13390:	moveq	r1, #1
   13394:	moveq	r0, r1
   13398:	bxeq	lr
   1339c:	push	{r5, r7, fp, lr}
   133a0:	add	fp, sp, #8
   133a4:	ldm	r1, {r2, r7}
   133a8:	ldm	r0, {r0, r5}
   133ac:	mov	r1, #0
   133b0:	subs	r3, r0, r2
   133b4:	sbcs	r3, r5, r7
   133b8:	movwlt	r1, #1
   133bc:	cmp	r1, #0
   133c0:	mvnne	r1, #0
   133c4:	subs	r0, r2, r0
   133c8:	sbcs	r0, r7, r5
   133cc:	movwlt	r1, #1
   133d0:	pop	{r5, r7, fp, lr}
   133d4:	mov	r0, r1
   133d8:	bx	lr
   133dc:	cmp	r1, #0
   133e0:	mvnne	r1, #0
   133e4:	mov	r0, r1
   133e8:	bx	lr

000133ec <table_compare_uint64@@Base>:
   133ec:	cmp	r0, #0
   133f0:	beq	13444 <table_compare_uint64@@Base+0x58>
   133f4:	cmp	r1, #0
   133f8:	moveq	r1, #1
   133fc:	moveq	r0, r1
   13400:	bxeq	lr
   13404:	push	{r5, r7, fp, lr}
   13408:	add	fp, sp, #8
   1340c:	ldm	r1, {r2, r7}
   13410:	ldm	r0, {r0, r5}
   13414:	mov	r1, #0
   13418:	subs	r3, r0, r2
   1341c:	sbcs	r3, r5, r7
   13420:	movwcc	r1, #1
   13424:	cmp	r1, #0
   13428:	mvnne	r1, #0
   1342c:	subs	r0, r2, r0
   13430:	sbcs	r0, r7, r5
   13434:	movwcc	r1, #1
   13438:	pop	{r5, r7, fp, lr}
   1343c:	mov	r0, r1
   13440:	bx	lr
   13444:	cmp	r1, #0
   13448:	mvnne	r1, #0
   1344c:	mov	r0, r1
   13450:	bx	lr

00013454 <table_compare_short@@Base>:
   13454:	cmp	r0, #0
   13458:	beq	1348c <table_compare_short@@Base+0x38>
   1345c:	cmp	r1, #0
   13460:	moveq	r1, #1
   13464:	moveq	r0, r1
   13468:	bxeq	lr
   1346c:	ldrsh	r2, [r1]
   13470:	ldrsh	r0, [r0]
   13474:	mov	r1, #0
   13478:	cmp	r0, r2
   1347c:	mvnlt	r1, #0
   13480:	movwgt	r1, #1
   13484:	mov	r0, r1
   13488:	bx	lr
   1348c:	cmp	r1, #0
   13490:	mvnne	r1, #0
   13494:	mov	r0, r1
   13498:	bx	lr

0001349c <table_compare_ushort@@Base>:
   1349c:	cmp	r0, #0
   134a0:	beq	134d4 <table_compare_ushort@@Base+0x38>
   134a4:	cmp	r1, #0
   134a8:	moveq	r1, #1
   134ac:	moveq	r0, r1
   134b0:	bxeq	lr
   134b4:	ldrh	r2, [r1]
   134b8:	ldrh	r0, [r0]
   134bc:	mov	r1, #0
   134c0:	cmp	r0, r2
   134c4:	mvncc	r1, #0
   134c8:	movwhi	r1, #1
   134cc:	mov	r0, r1
   134d0:	bx	lr
   134d4:	cmp	r1, #0
   134d8:	mvnne	r1, #0
   134dc:	mov	r0, r1
   134e0:	bx	lr

000134e4 <table_compare_long@@Base>:
   134e4:	cmp	r0, #0
   134e8:	beq	1351c <table_compare_long@@Base+0x38>
   134ec:	cmp	r1, #0
   134f0:	moveq	r1, #1
   134f4:	moveq	r0, r1
   134f8:	bxeq	lr
   134fc:	ldr	r2, [r1]
   13500:	ldr	r0, [r0]
   13504:	mov	r1, #0
   13508:	cmp	r0, r2
   1350c:	mvnlt	r1, #0
   13510:	movwgt	r1, #1
   13514:	mov	r0, r1
   13518:	bx	lr
   1351c:	cmp	r1, #0
   13520:	mvnne	r1, #0
   13524:	mov	r0, r1
   13528:	bx	lr

0001352c <table_compare_ulong@@Base>:
   1352c:	cmp	r0, #0
   13530:	beq	13564 <table_compare_ulong@@Base+0x38>
   13534:	cmp	r1, #0
   13538:	moveq	r1, #1
   1353c:	moveq	r0, r1
   13540:	bxeq	lr
   13544:	ldr	r2, [r1]
   13548:	ldr	r0, [r0]
   1354c:	mov	r1, #0
   13550:	cmp	r0, r2
   13554:	mvncc	r1, #0
   13558:	movwhi	r1, #1
   1355c:	mov	r0, r1
   13560:	bx	lr
   13564:	cmp	r1, #0
   13568:	mvnne	r1, #0
   1356c:	mov	r0, r1
   13570:	bx	lr

00013574 <table_compare_llong@@Base>:
   13574:	cmp	r0, #0
   13578:	beq	135cc <table_compare_llong@@Base+0x58>
   1357c:	cmp	r1, #0
   13580:	moveq	r1, #1
   13584:	moveq	r0, r1
   13588:	bxeq	lr
   1358c:	push	{r5, r7, fp, lr}
   13590:	add	fp, sp, #8
   13594:	ldm	r1, {r2, r7}
   13598:	ldm	r0, {r0, r5}
   1359c:	mov	r1, #0
   135a0:	subs	r3, r0, r2
   135a4:	sbcs	r3, r5, r7
   135a8:	movwlt	r1, #1
   135ac:	cmp	r1, #0
   135b0:	mvnne	r1, #0
   135b4:	subs	r0, r2, r0
   135b8:	sbcs	r0, r7, r5
   135bc:	movwlt	r1, #1
   135c0:	pop	{r5, r7, fp, lr}
   135c4:	mov	r0, r1
   135c8:	bx	lr
   135cc:	cmp	r1, #0
   135d0:	mvnne	r1, #0
   135d4:	mov	r0, r1
   135d8:	bx	lr

000135dc <table_compare_ullong@@Base>:
   135dc:	cmp	r0, #0
   135e0:	beq	13614 <table_compare_ullong@@Base+0x38>
   135e4:	cmp	r1, #0
   135e8:	moveq	r1, #1
   135ec:	moveq	r0, r1
   135f0:	bxeq	lr
   135f4:	ldr	r2, [r1]
   135f8:	ldr	r0, [r0]
   135fc:	mov	r1, #0
   13600:	cmp	r0, r2
   13604:	mvncc	r1, #0
   13608:	movwhi	r1, #1
   1360c:	mov	r0, r1
   13610:	bx	lr
   13614:	cmp	r1, #0
   13618:	mvnne	r1, #0
   1361c:	mov	r0, r1
   13620:	bx	lr

00013624 <table_compare_float@@Base>:
   13624:	cmp	r0, #0
   13628:	beq	13660 <table_compare_float@@Base+0x3c>
   1362c:	cmp	r1, #0
   13630:	moveq	r1, #1
   13634:	moveq	r0, r1
   13638:	bxeq	lr
   1363c:	vldr	s0, [r1]
   13640:	vldr	s2, [r0]
   13644:	mov	r1, #0
   13648:	vcmpe.f32	s2, s0
   1364c:	vmrs	APSR_nzcv, fpscr
   13650:	mvnmi	r1, #0
   13654:	movwgt	r1, #1
   13658:	mov	r0, r1
   1365c:	bx	lr
   13660:	cmp	r1, #0
   13664:	mvnne	r1, #0
   13668:	mov	r0, r1
   1366c:	bx	lr

00013670 <table_compare_double@@Base>:
   13670:	cmp	r0, #0
   13674:	beq	136ac <table_compare_double@@Base+0x3c>
   13678:	cmp	r1, #0
   1367c:	moveq	r1, #1
   13680:	moveq	r0, r1
   13684:	bxeq	lr
   13688:	vldr	d16, [r1]
   1368c:	vldr	d17, [r0]
   13690:	mov	r1, #0
   13694:	vcmpe.f64	d17, d16
   13698:	vmrs	APSR_nzcv, fpscr
   1369c:	mvnmi	r1, #0
   136a0:	movwgt	r1, #1
   136a4:	mov	r0, r1
   136a8:	bx	lr
   136ac:	cmp	r1, #0
   136b0:	mvnne	r1, #0
   136b4:	mov	r0, r1
   136b8:	bx	lr

000136bc <table_compare_ldouble@@Base>:
   136bc:	cmp	r0, #0
   136c0:	beq	136f8 <table_compare_ldouble@@Base+0x3c>
   136c4:	cmp	r1, #0
   136c8:	moveq	r1, #1
   136cc:	moveq	r0, r1
   136d0:	bxeq	lr
   136d4:	vldr	d16, [r1]
   136d8:	vldr	d17, [r0]
   136dc:	mov	r1, #0
   136e0:	vcmpe.f64	d17, d16
   136e4:	vmrs	APSR_nzcv, fpscr
   136e8:	mvnmi	r1, #0
   136ec:	movwgt	r1, #1
   136f0:	mov	r0, r1
   136f4:	bx	lr
   136f8:	cmp	r1, #0
   136fc:	mvnne	r1, #0
   13700:	mov	r0, r1
   13704:	bx	lr

00013708 <table_compare_char@@Base>:
   13708:	cmp	r0, #0
   1370c:	beq	13740 <table_compare_char@@Base+0x38>
   13710:	cmp	r1, #0
   13714:	moveq	r1, #1
   13718:	moveq	r0, r1
   1371c:	bxeq	lr
   13720:	ldrb	r2, [r1]
   13724:	ldrb	r0, [r0]
   13728:	mov	r1, #0
   1372c:	cmp	r0, r2
   13730:	mvncc	r1, #0
   13734:	movwhi	r1, #1
   13738:	mov	r0, r1
   1373c:	bx	lr
   13740:	cmp	r1, #0
   13744:	mvnne	r1, #0
   13748:	mov	r0, r1
   1374c:	bx	lr

00013750 <table_compare_uchar@@Base>:
   13750:	cmp	r0, #0
   13754:	beq	13788 <table_compare_uchar@@Base+0x38>
   13758:	cmp	r1, #0
   1375c:	moveq	r1, #1
   13760:	moveq	r0, r1
   13764:	bxeq	lr
   13768:	ldrb	r2, [r1]
   1376c:	ldrb	r0, [r0]
   13770:	mov	r1, #0
   13774:	cmp	r0, r2
   13778:	mvncc	r1, #0
   1377c:	movwhi	r1, #1
   13780:	mov	r0, r1
   13784:	bx	lr
   13788:	cmp	r1, #0
   1378c:	mvnne	r1, #0
   13790:	mov	r0, r1
   13794:	bx	lr

00013798 <table_compare_string@@Base>:
   13798:	cmp	r0, #0
   1379c:	beq	137b4 <table_compare_string@@Base+0x1c>
   137a0:	cmp	r1, #0
   137a4:	moveq	r1, #1
   137a8:	moveq	r0, r1
   137ac:	bxeq	lr
   137b0:	b	11fbc <strcmp@plt>
   137b4:	cmp	r1, #0
   137b8:	mvnne	r1, #0
   137bc:	mov	r0, r1
   137c0:	bx	lr

000137c4 <table_compare_ptr@@Base>:
   137c4:	mov	r2, #0
   137c8:	cmp	r0, r1
   137cc:	mvncc	r2, #0
   137d0:	movwhi	r2, #1
   137d4:	mov	r0, r2
   137d8:	bx	lr

000137dc <table_get_default_compare_function_for_data_type@@Base>:
   137dc:	cmp	r0, #23
   137e0:	movhi	r0, #0
   137e4:	movwls	r1, #20128	; 0x4ea0
   137e8:	movtls	r1, #1
   137ec:	ldrls	r0, [r1, r0, lsl #2]
   137f0:	bx	lr

000137f4 <table_get@@Base>:
   137f4:	push	{fp, lr}
   137f8:	mov	fp, sp
   137fc:	bl	14374 <table_get_cell_ptr@@Base>
   13800:	ldr	r0, [r0]
   13804:	pop	{fp, pc}

00013808 <table_get_bool@@Base>:
   13808:	push	{fp, lr}
   1380c:	mov	fp, sp
   13810:	bl	137f4 <table_get@@Base>
   13814:	ldrb	r0, [r0]
   13818:	pop	{fp, pc}

0001381c <table_get_int@@Base>:
   1381c:	push	{fp, lr}
   13820:	mov	fp, sp
   13824:	bl	137f4 <table_get@@Base>
   13828:	ldr	r0, [r0]
   1382c:	pop	{fp, pc}

00013830 <table_get_uint@@Base>:
   13830:	push	{fp, lr}
   13834:	mov	fp, sp
   13838:	bl	137f4 <table_get@@Base>
   1383c:	ldr	r0, [r0]
   13840:	pop	{fp, pc}

00013844 <table_get_int8@@Base>:
   13844:	push	{fp, lr}
   13848:	mov	fp, sp
   1384c:	bl	137f4 <table_get@@Base>
   13850:	ldrsb	r0, [r0]
   13854:	pop	{fp, pc}

00013858 <table_get_uint8@@Base>:
   13858:	push	{fp, lr}
   1385c:	mov	fp, sp
   13860:	bl	137f4 <table_get@@Base>
   13864:	ldrb	r0, [r0]
   13868:	pop	{fp, pc}

0001386c <table_get_int16@@Base>:
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	bl	137f4 <table_get@@Base>
   13878:	ldrsh	r0, [r0]
   1387c:	pop	{fp, pc}

00013880 <table_get_uint16@@Base>:
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	bl	137f4 <table_get@@Base>
   1388c:	ldrh	r0, [r0]
   13890:	pop	{fp, pc}

00013894 <table_get_int32@@Base>:
   13894:	push	{fp, lr}
   13898:	mov	fp, sp
   1389c:	bl	137f4 <table_get@@Base>
   138a0:	ldr	r0, [r0]
   138a4:	pop	{fp, pc}

000138a8 <table_get_uint32@@Base>:
   138a8:	push	{fp, lr}
   138ac:	mov	fp, sp
   138b0:	bl	137f4 <table_get@@Base>
   138b4:	ldr	r0, [r0]
   138b8:	pop	{fp, pc}

000138bc <table_get_int64@@Base>:
   138bc:	push	{fp, lr}
   138c0:	mov	fp, sp
   138c4:	bl	137f4 <table_get@@Base>
   138c8:	ldrd	r0, [r0]
   138cc:	pop	{fp, pc}

000138d0 <table_get_uint64@@Base>:
   138d0:	push	{fp, lr}
   138d4:	mov	fp, sp
   138d8:	bl	137f4 <table_get@@Base>
   138dc:	ldrd	r0, [r0]
   138e0:	pop	{fp, pc}

000138e4 <table_get_short@@Base>:
   138e4:	push	{fp, lr}
   138e8:	mov	fp, sp
   138ec:	bl	137f4 <table_get@@Base>
   138f0:	ldrsh	r0, [r0]
   138f4:	pop	{fp, pc}

000138f8 <table_get_ushort@@Base>:
   138f8:	push	{fp, lr}
   138fc:	mov	fp, sp
   13900:	bl	137f4 <table_get@@Base>
   13904:	ldrh	r0, [r0]
   13908:	pop	{fp, pc}

0001390c <table_get_long@@Base>:
   1390c:	push	{fp, lr}
   13910:	mov	fp, sp
   13914:	bl	137f4 <table_get@@Base>
   13918:	ldr	r0, [r0]
   1391c:	pop	{fp, pc}

00013920 <table_get_ulong@@Base>:
   13920:	push	{fp, lr}
   13924:	mov	fp, sp
   13928:	bl	137f4 <table_get@@Base>
   1392c:	ldr	r0, [r0]
   13930:	pop	{fp, pc}

00013934 <table_get_llong@@Base>:
   13934:	push	{fp, lr}
   13938:	mov	fp, sp
   1393c:	bl	137f4 <table_get@@Base>
   13940:	ldrd	r0, [r0]
   13944:	pop	{fp, pc}

00013948 <table_get_ullong@@Base>:
   13948:	push	{fp, lr}
   1394c:	mov	fp, sp
   13950:	bl	137f4 <table_get@@Base>
   13954:	ldrd	r0, [r0]
   13958:	pop	{fp, pc}

0001395c <table_get_float@@Base>:
   1395c:	push	{fp, lr}
   13960:	mov	fp, sp
   13964:	bl	137f4 <table_get@@Base>
   13968:	vldr	s0, [r0]
   1396c:	pop	{fp, pc}

00013970 <table_get_double@@Base>:
   13970:	push	{fp, lr}
   13974:	mov	fp, sp
   13978:	bl	137f4 <table_get@@Base>
   1397c:	vldr	d0, [r0]
   13980:	pop	{fp, pc}

00013984 <table_get_ldouble@@Base>:
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	bl	137f4 <table_get@@Base>
   13990:	vldr	d0, [r0]
   13994:	pop	{fp, pc}

00013998 <table_get_char@@Base>:
   13998:	push	{fp, lr}
   1399c:	mov	fp, sp
   139a0:	bl	137f4 <table_get@@Base>
   139a4:	ldrb	r0, [r0]
   139a8:	pop	{fp, pc}

000139ac <table_get_uchar@@Base>:
   139ac:	push	{fp, lr}
   139b0:	mov	fp, sp
   139b4:	bl	137f4 <table_get@@Base>
   139b8:	ldrb	r0, [r0]
   139bc:	pop	{fp, pc}

000139c0 <table_get_string@@Base>:
   139c0:	b	137f4 <table_get@@Base>

000139c4 <table_get_ptr@@Base>:
   139c4:	b	137f4 <table_get@@Base>

000139c8 <table_row_init@@Base>:
   139c8:	push	{r4, r5, fp, lr}
   139cc:	add	fp, sp, #8
   139d0:	mov	r4, r0
   139d4:	bl	139f0 <table_get_row_ptr@@Base>
   139d8:	mov	r5, r0
   139dc:	ldr	r0, [r4, #12]
   139e0:	lsl	r0, r0, #2
   139e4:	bl	12004 <malloc@plt>
   139e8:	str	r0, [r5]
   139ec:	pop	{r4, r5, fp, pc}

000139f0 <table_get_row_ptr@@Base>:
   139f0:	ldr	r0, [r0, #16]
   139f4:	add	r0, r0, r1, lsl #2
   139f8:	bx	lr

000139fc <table_row_destroy@@Base>:
   139fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a00:	add	fp, sp, #24
   13a04:	mov	r4, r1
   13a08:	mov	r5, r0
   13a0c:	bl	12d3c <table_get_column_length@@Base>
   13a10:	mov	r6, r0
   13a14:	mov	r0, r5
   13a18:	mov	r1, r4
   13a1c:	bl	139f0 <table_get_row_ptr@@Base>
   13a20:	mov	r8, r0
   13a24:	cmp	r6, #1
   13a28:	blt	13a4c <table_row_destroy@@Base+0x50>
   13a2c:	mov	r7, #0
   13a30:	mov	r0, r5
   13a34:	mov	r1, r4
   13a38:	mov	r2, r7
   13a3c:	bl	14390 <table_cell_destroy@@Base>
   13a40:	add	r7, r7, #1
   13a44:	cmp	r6, r7
   13a48:	bne	13a30 <table_row_destroy@@Base+0x34>
   13a4c:	ldr	r0, [r8]
   13a50:	cmp	r0, #0
   13a54:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a58:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a5c:	b	11fd4 <free@plt>

00013a60 <table_get_row_length@@Base>:
   13a60:	ldr	r0, [r0, #20]
   13a64:	bx	lr

00013a68 <table_add_row@@Base>:
   13a68:	push	{r4, sl, fp, lr}
   13a6c:	add	fp, sp, #8
   13a70:	mov	r4, r0
   13a74:	bl	13a60 <table_get_row_length@@Base>
   13a78:	ldr	r1, [r4, #24]
   13a7c:	udiv	r2, r0, r1
   13a80:	mls	r0, r2, r1, r0
   13a84:	cmp	r0, #0
   13a88:	bne	13a94 <table_add_row@@Base+0x2c>
   13a8c:	mov	r0, r4
   13a90:	bl	13ac8 <table_add_row@@Base+0x60>
   13a94:	mov	r0, r4
   13a98:	bl	13af8 <table_add_row@@Base+0x90>
   13a9c:	mov	r0, r4
   13aa0:	bl	13a60 <table_get_row_length@@Base>
   13aa4:	mov	r1, r0
   13aa8:	mov	r0, r4
   13aac:	mvn	r2, #0
   13ab0:	mov	r3, #2
   13ab4:	bl	12c48 <table_notify@@Base>
   13ab8:	ldr	r0, [r4, #20]
   13abc:	add	r1, r0, #1
   13ac0:	str	r1, [r4, #20]
   13ac4:	pop	{r4, sl, fp, pc}
   13ac8:	push	{r4, sl, fp, lr}
   13acc:	add	fp, sp, #8
   13ad0:	mov	r4, r0
   13ad4:	ldr	r0, [r0, #16]
   13ad8:	ldr	r1, [r4, #24]
   13adc:	ldr	r2, [r4, #28]
   13ae0:	add	r1, r2, r1
   13ae4:	str	r1, [r4, #28]
   13ae8:	lsl	r1, r1, #2
   13aec:	bl	11fec <realloc@plt>
   13af0:	str	r0, [r4, #16]
   13af4:	pop	{r4, sl, fp, pc}
   13af8:	push	{r4, r5, r6, r7, fp, lr}
   13afc:	add	fp, sp, #16
   13b00:	mov	r4, r0
   13b04:	bl	13a60 <table_get_row_length@@Base>
   13b08:	mov	r5, r0
   13b0c:	mov	r0, r4
   13b10:	bl	12d3c <table_get_column_length@@Base>
   13b14:	mov	r6, r0
   13b18:	mov	r0, r4
   13b1c:	mov	r1, r5
   13b20:	bl	139c8 <table_row_init@@Base>
   13b24:	cmp	r6, #1
   13b28:	poplt	{r4, r5, r6, r7, fp, pc}
   13b2c:	mov	r7, #0
   13b30:	mov	r0, r4
   13b34:	mov	r1, r5
   13b38:	mov	r2, r7
   13b3c:	bl	1435c <table_cell_init@@Base>
   13b40:	add	r7, r7, #1
   13b44:	cmp	r6, r7
   13b48:	bne	13b30 <table_add_row@@Base+0xc8>
   13b4c:	pop	{r4, r5, r6, r7, fp, pc}

00013b50 <table_remove_row@@Base>:
   13b50:	push	{r4, r5, fp, lr}
   13b54:	add	fp, sp, #8
   13b58:	mov	r4, r1
   13b5c:	mov	r5, r0
   13b60:	bl	13bb0 <table_remove_row@@Base+0x60>
   13b64:	ldr	r0, [r5, #20]
   13b68:	sub	r0, r0, #1
   13b6c:	str	r0, [r5, #20]
   13b70:	mov	r0, r5
   13b74:	bl	13a60 <table_get_row_length@@Base>
   13b78:	ldr	r1, [r5, #24]
   13b7c:	udiv	r2, r0, r1
   13b80:	mls	r0, r2, r1, r0
   13b84:	cmp	r0, #0
   13b88:	bne	13b94 <table_remove_row@@Base+0x44>
   13b8c:	mov	r0, r5
   13b90:	bl	13c68 <table_remove_row@@Base+0x118>
   13b94:	mov	r0, r5
   13b98:	mov	r1, r4
   13b9c:	mvn	r2, #0
   13ba0:	mov	r3, #4
   13ba4:	bl	12c48 <table_notify@@Base>
   13ba8:	mov	r0, #0
   13bac:	pop	{r4, r5, fp, pc}
   13bb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13bb4:	add	fp, sp, #24
   13bb8:	mov	r4, r1
   13bbc:	mov	r5, r0
   13bc0:	bl	13a60 <table_get_row_length@@Base>
   13bc4:	mov	r8, r0
   13bc8:	mov	r0, r5
   13bcc:	bl	12d3c <table_get_column_length@@Base>
   13bd0:	cmp	r0, #1
   13bd4:	blt	13c20 <table_remove_row@@Base+0xd0>
   13bd8:	mov	r7, r0
   13bdc:	mov	r6, #0
   13be0:	mov	r0, r5
   13be4:	mov	r1, r6
   13be8:	bl	12db4 <table_get_column_data_type@@Base>
   13bec:	cmp	r0, #23
   13bf0:	beq	13c14 <table_remove_row@@Base+0xc4>
   13bf4:	mov	r0, r5
   13bf8:	mov	r1, r4
   13bfc:	mov	r2, r6
   13c00:	bl	14374 <table_get_cell_ptr@@Base>
   13c04:	ldr	r0, [r0]
   13c08:	cmp	r0, #0
   13c0c:	beq	13c14 <table_remove_row@@Base+0xc4>
   13c10:	bl	11fd4 <free@plt>
   13c14:	add	r6, r6, #1
   13c18:	cmp	r7, r6
   13c1c:	bne	13be0 <table_remove_row@@Base+0x90>
   13c20:	mov	r0, r5
   13c24:	mov	r1, r4
   13c28:	bl	139f0 <table_get_row_ptr@@Base>
   13c2c:	ldr	r0, [r0]
   13c30:	cmp	r0, #0
   13c34:	beq	13c3c <table_remove_row@@Base+0xec>
   13c38:	bl	11fd4 <free@plt>
   13c3c:	sub	r0, r8, #1
   13c40:	cmp	r0, r4
   13c44:	pople	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c48:	ldr	r1, [r5, #16]
   13c4c:	add	r2, r1, r4, lsl #2
   13c50:	ldr	r2, [r2, #4]
   13c54:	str	r2, [r1, r4, lsl #2]
   13c58:	add	r4, r4, #1
   13c5c:	cmp	r0, r4
   13c60:	bne	13c48 <table_remove_row@@Base+0xf8>
   13c64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c68:	push	{r4, sl, fp, lr}
   13c6c:	add	fp, sp, #8
   13c70:	mov	r4, r0
   13c74:	ldr	r0, [r0, #16]
   13c78:	ldr	r1, [r4, #24]
   13c7c:	ldr	r2, [r4, #28]
   13c80:	sub	r1, r2, r1
   13c84:	str	r1, [r4, #28]
   13c88:	lsl	r1, r1, #2
   13c8c:	bl	11fec <realloc@plt>
   13c90:	str	r0, [r4, #16]
   13c94:	pop	{r4, sl, fp, pc}

00013c98 <table_set_row_ptr@@Base>:
   13c98:	ldr	r2, [r2]
   13c9c:	ldr	r0, [r0, #16]
   13ca0:	str	r2, [r0, r1, lsl #2]
   13ca4:	bx	lr

00013ca8 <table_set@@Base>:
   13ca8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13cac:	add	fp, sp, #24
   13cb0:	mov	r8, r3
   13cb4:	mov	r4, r2
   13cb8:	mov	r9, r1
   13cbc:	mov	r6, r0
   13cc0:	bl	14374 <table_get_cell_ptr@@Base>
   13cc4:	mov	r5, r0
   13cc8:	mov	r0, r6
   13ccc:	mov	r1, r4
   13cd0:	bl	12d0c <table_get_col_ptr@@Base>
   13cd4:	mvn	r7, #0
   13cd8:	ldr	r1, [fp, #8]
   13cdc:	cmp	r1, #23
   13ce0:	bhi	13e98 <table_set@@Base+0x1f0>
   13ce4:	add	r2, pc, #0
   13ce8:	ldr	pc, [r2, r1, lsl #2]
   13cec:	andeq	r3, r1, ip, asr #26
   13cf0:	andeq	r3, r1, ip, asr #26
   13cf4:	andeq	r3, r1, r4, asr #27
   13cf8:	andeq	r3, r1, r4, asr #27
   13cfc:	strdeq	r3, [r1], -ip
   13d00:	strdeq	r3, [r1], -ip
   13d04:	andeq	r3, r1, ip, asr #26
   13d08:	andeq	r3, r1, ip, asr #26
   13d0c:	andeq	r3, r1, r4, lsl #27
   13d10:	andeq	r3, r1, r4, lsl #27
   13d14:	strdeq	r3, [r1], -ip
   13d18:	strdeq	r3, [r1], -ip
   13d1c:	andeq	r3, r1, ip, asr #26
   13d20:	andeq	r3, r1, ip, asr #26
   13d24:	andeq	r3, r1, r4, lsl #27
   13d28:	andeq	r3, r1, r4, lsl #27
   13d2c:	andeq	r3, r1, ip, asr #26
   13d30:	andeq	r3, r1, r4, lsl #27
   13d34:	andeq	r3, r1, r4, lsl #27
   13d38:	andeq	r3, r1, r4, asr #27
   13d3c:	andeq	r3, r1, r4, asr #27
   13d40:	andeq	r3, r1, r4, lsr lr
   13d44:	andeq	r3, r1, r4, asr #27
   13d48:	andeq	r3, r1, r0, ror lr
   13d4c:	ldr	r0, [r0, #4]
   13d50:	cmp	r0, r1
   13d54:	bne	13e98 <table_set@@Base+0x1f0>
   13d58:	ldr	r0, [r5]
   13d5c:	cmp	r0, #0
   13d60:	bne	13d78 <table_set@@Base+0xd0>
   13d64:	mov	r0, #4
   13d68:	bl	12004 <malloc@plt>
   13d6c:	str	r0, [r5]
   13d70:	cmp	r0, #0
   13d74:	beq	13e98 <table_set@@Base+0x1f0>
   13d78:	ldr	r1, [r8]
   13d7c:	str	r1, [r0]
   13d80:	b	13e80 <table_set@@Base+0x1d8>
   13d84:	ldr	r0, [r0, #4]
   13d88:	cmp	r0, r1
   13d8c:	bne	13e98 <table_set@@Base+0x1f0>
   13d90:	ldr	r0, [r5]
   13d94:	cmp	r0, #0
   13d98:	bne	13db0 <table_set@@Base+0x108>
   13d9c:	mov	r0, #8
   13da0:	bl	12004 <malloc@plt>
   13da4:	str	r0, [r5]
   13da8:	cmp	r0, #0
   13dac:	beq	13e98 <table_set@@Base+0x1f0>
   13db0:	ldr	r1, [r8]
   13db4:	ldr	r2, [r8, #4]
   13db8:	str	r2, [r0, #4]
   13dbc:	str	r1, [r0]
   13dc0:	b	13e80 <table_set@@Base+0x1d8>
   13dc4:	ldr	r0, [r0, #4]
   13dc8:	cmp	r0, r1
   13dcc:	bne	13e98 <table_set@@Base+0x1f0>
   13dd0:	ldr	r0, [r5]
   13dd4:	cmp	r0, #0
   13dd8:	bne	13df0 <table_set@@Base+0x148>
   13ddc:	mov	r0, #1
   13de0:	bl	12004 <malloc@plt>
   13de4:	str	r0, [r5]
   13de8:	cmp	r0, #0
   13dec:	beq	13e98 <table_set@@Base+0x1f0>
   13df0:	ldrb	r1, [r8]
   13df4:	strb	r1, [r0]
   13df8:	b	13e80 <table_set@@Base+0x1d8>
   13dfc:	ldr	r0, [r0, #4]
   13e00:	cmp	r0, r1
   13e04:	bne	13e98 <table_set@@Base+0x1f0>
   13e08:	ldr	r0, [r5]
   13e0c:	cmp	r0, #0
   13e10:	bne	13e28 <table_set@@Base+0x180>
   13e14:	mov	r0, #2
   13e18:	bl	12004 <malloc@plt>
   13e1c:	str	r0, [r5]
   13e20:	cmp	r0, #0
   13e24:	beq	13e98 <table_set@@Base+0x1f0>
   13e28:	ldrh	r1, [r8]
   13e2c:	strh	r1, [r0]
   13e30:	b	13e80 <table_set@@Base+0x1d8>
   13e34:	ldr	r0, [r0, #4]
   13e38:	cmp	r0, r1
   13e3c:	bne	13e98 <table_set@@Base+0x1f0>
   13e40:	mov	r0, r8
   13e44:	bl	12028 <strlen@plt>
   13e48:	ldr	r2, [r5]
   13e4c:	add	r1, r0, #1
   13e50:	mov	r0, r2
   13e54:	bl	11fec <realloc@plt>
   13e58:	str	r0, [r5]
   13e5c:	cmp	r0, #0
   13e60:	beq	13e98 <table_set@@Base+0x1f0>
   13e64:	mov	r1, r8
   13e68:	bl	11ff8 <strcpy@plt>
   13e6c:	b	13e80 <table_set@@Base+0x1d8>
   13e70:	ldr	r0, [r0, #4]
   13e74:	cmp	r0, r1
   13e78:	bne	13e98 <table_set@@Base+0x1f0>
   13e7c:	str	r8, [r5]
   13e80:	mov	r0, r6
   13e84:	mov	r1, r9
   13e88:	mov	r2, r4
   13e8c:	mov	r3, #1
   13e90:	bl	12c48 <table_notify@@Base>
   13e94:	mov	r7, #0
   13e98:	mov	r0, r7
   13e9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ea0 <table_set_bool@@Base>:
   13ea0:	push	{fp, lr}
   13ea4:	mov	fp, sp
   13ea8:	sub	sp, sp, #8
   13eac:	strb	r3, [fp, #-1]
   13eb0:	mov	r3, #22
   13eb4:	str	r3, [sp]
   13eb8:	sub	r3, fp, #1
   13ebc:	bl	13ca8 <table_set@@Base>
   13ec0:	mov	sp, fp
   13ec4:	pop	{fp, pc}

00013ec8 <table_set_int@@Base>:
   13ec8:	push	{fp, lr}
   13ecc:	mov	fp, sp
   13ed0:	sub	sp, sp, #8
   13ed4:	str	r3, [sp, #4]
   13ed8:	mov	r3, #0
   13edc:	str	r3, [sp]
   13ee0:	add	r3, sp, #4
   13ee4:	bl	13ca8 <table_set@@Base>
   13ee8:	mov	sp, fp
   13eec:	pop	{fp, pc}

00013ef0 <table_set_uint@@Base>:
   13ef0:	push	{fp, lr}
   13ef4:	mov	fp, sp
   13ef8:	sub	sp, sp, #8
   13efc:	str	r3, [sp, #4]
   13f00:	mov	r3, #1
   13f04:	str	r3, [sp]
   13f08:	add	r3, sp, #4
   13f0c:	bl	13ca8 <table_set@@Base>
   13f10:	mov	sp, fp
   13f14:	pop	{fp, pc}

00013f18 <table_set_int8@@Base>:
   13f18:	push	{fp, lr}
   13f1c:	mov	fp, sp
   13f20:	sub	sp, sp, #8
   13f24:	strb	r3, [fp, #-1]
   13f28:	mov	r3, #2
   13f2c:	str	r3, [sp]
   13f30:	sub	r3, fp, #1
   13f34:	bl	13ca8 <table_set@@Base>
   13f38:	mov	sp, fp
   13f3c:	pop	{fp, pc}

00013f40 <table_set_uint8@@Base>:
   13f40:	push	{fp, lr}
   13f44:	mov	fp, sp
   13f48:	sub	sp, sp, #8
   13f4c:	strb	r3, [fp, #-1]
   13f50:	mov	r3, #3
   13f54:	str	r3, [sp]
   13f58:	sub	r3, fp, #1
   13f5c:	bl	13ca8 <table_set@@Base>
   13f60:	mov	sp, fp
   13f64:	pop	{fp, pc}

00013f68 <table_set_int16@@Base>:
   13f68:	push	{fp, lr}
   13f6c:	mov	fp, sp
   13f70:	sub	sp, sp, #8
   13f74:	strh	r3, [fp, #-2]
   13f78:	mov	r3, #4
   13f7c:	str	r3, [sp]
   13f80:	sub	r3, fp, #2
   13f84:	bl	13ca8 <table_set@@Base>
   13f88:	mov	sp, fp
   13f8c:	pop	{fp, pc}

00013f90 <table_set_uint16@@Base>:
   13f90:	push	{fp, lr}
   13f94:	mov	fp, sp
   13f98:	sub	sp, sp, #8
   13f9c:	strh	r3, [fp, #-2]
   13fa0:	mov	r3, #5
   13fa4:	str	r3, [sp]
   13fa8:	sub	r3, fp, #2
   13fac:	bl	13ca8 <table_set@@Base>
   13fb0:	mov	sp, fp
   13fb4:	pop	{fp, pc}

00013fb8 <table_set_int32@@Base>:
   13fb8:	push	{fp, lr}
   13fbc:	mov	fp, sp
   13fc0:	sub	sp, sp, #8
   13fc4:	str	r3, [sp, #4]
   13fc8:	mov	r3, #6
   13fcc:	str	r3, [sp]
   13fd0:	add	r3, sp, #4
   13fd4:	bl	13ca8 <table_set@@Base>
   13fd8:	mov	sp, fp
   13fdc:	pop	{fp, pc}

00013fe0 <table_set_uint32@@Base>:
   13fe0:	push	{fp, lr}
   13fe4:	mov	fp, sp
   13fe8:	sub	sp, sp, #8
   13fec:	str	r3, [sp, #4]
   13ff0:	mov	r3, #7
   13ff4:	str	r3, [sp]
   13ff8:	add	r3, sp, #4
   13ffc:	bl	13ca8 <table_set@@Base>
   14000:	mov	sp, fp
   14004:	pop	{fp, pc}

00014008 <table_set_int64@@Base>:
   14008:	push	{fp, lr}
   1400c:	mov	fp, sp
   14010:	sub	sp, sp, #16
   14014:	ldr	r3, [fp, #12]
   14018:	str	r3, [sp, #12]
   1401c:	ldr	r3, [fp, #8]
   14020:	str	r3, [sp, #8]
   14024:	mov	r3, #8
   14028:	str	r3, [sp]
   1402c:	add	r3, sp, #8
   14030:	bl	13ca8 <table_set@@Base>
   14034:	mov	sp, fp
   14038:	pop	{fp, pc}

0001403c <table_set_uint64@@Base>:
   1403c:	push	{fp, lr}
   14040:	mov	fp, sp
   14044:	sub	sp, sp, #16
   14048:	ldr	r3, [fp, #12]
   1404c:	str	r3, [sp, #12]
   14050:	ldr	r3, [fp, #8]
   14054:	str	r3, [sp, #8]
   14058:	mov	r3, #9
   1405c:	str	r3, [sp]
   14060:	add	r3, sp, #8
   14064:	bl	13ca8 <table_set@@Base>
   14068:	mov	sp, fp
   1406c:	pop	{fp, pc}

00014070 <table_set_short@@Base>:
   14070:	push	{fp, lr}
   14074:	mov	fp, sp
   14078:	sub	sp, sp, #8
   1407c:	strh	r3, [fp, #-2]
   14080:	mov	r3, #10
   14084:	str	r3, [sp]
   14088:	sub	r3, fp, #2
   1408c:	bl	13ca8 <table_set@@Base>
   14090:	mov	sp, fp
   14094:	pop	{fp, pc}

00014098 <table_set_ushort@@Base>:
   14098:	push	{fp, lr}
   1409c:	mov	fp, sp
   140a0:	sub	sp, sp, #8
   140a4:	strh	r3, [fp, #-2]
   140a8:	mov	r3, #11
   140ac:	str	r3, [sp]
   140b0:	sub	r3, fp, #2
   140b4:	bl	13ca8 <table_set@@Base>
   140b8:	mov	sp, fp
   140bc:	pop	{fp, pc}

000140c0 <table_set_long@@Base>:
   140c0:	push	{fp, lr}
   140c4:	mov	fp, sp
   140c8:	sub	sp, sp, #8
   140cc:	str	r3, [sp, #4]
   140d0:	mov	r3, #12
   140d4:	str	r3, [sp]
   140d8:	add	r3, sp, #4
   140dc:	bl	13ca8 <table_set@@Base>
   140e0:	mov	sp, fp
   140e4:	pop	{fp, pc}

000140e8 <table_set_ulong@@Base>:
   140e8:	push	{fp, lr}
   140ec:	mov	fp, sp
   140f0:	sub	sp, sp, #8
   140f4:	str	r3, [sp, #4]
   140f8:	mov	r3, #13
   140fc:	str	r3, [sp]
   14100:	add	r3, sp, #4
   14104:	bl	13ca8 <table_set@@Base>
   14108:	mov	sp, fp
   1410c:	pop	{fp, pc}

00014110 <table_set_llong@@Base>:
   14110:	push	{fp, lr}
   14114:	mov	fp, sp
   14118:	sub	sp, sp, #16
   1411c:	ldr	r3, [fp, #12]
   14120:	str	r3, [sp, #12]
   14124:	ldr	r3, [fp, #8]
   14128:	str	r3, [sp, #8]
   1412c:	mov	r3, #14
   14130:	str	r3, [sp]
   14134:	add	r3, sp, #8
   14138:	bl	13ca8 <table_set@@Base>
   1413c:	mov	sp, fp
   14140:	pop	{fp, pc}

00014144 <table_set_ullong@@Base>:
   14144:	push	{fp, lr}
   14148:	mov	fp, sp
   1414c:	sub	sp, sp, #16
   14150:	ldr	r3, [fp, #12]
   14154:	str	r3, [sp, #12]
   14158:	ldr	r3, [fp, #8]
   1415c:	str	r3, [sp, #8]
   14160:	mov	r3, #15
   14164:	str	r3, [sp]
   14168:	add	r3, sp, #8
   1416c:	bl	13ca8 <table_set@@Base>
   14170:	mov	sp, fp
   14174:	pop	{fp, pc}

00014178 <table_set_float@@Base>:
   14178:	push	{fp, lr}
   1417c:	mov	fp, sp
   14180:	sub	sp, sp, #8
   14184:	vstr	s0, [sp, #4]
   14188:	mov	r3, #16
   1418c:	str	r3, [sp]
   14190:	add	r3, sp, #4
   14194:	bl	13ca8 <table_set@@Base>
   14198:	mov	sp, fp
   1419c:	pop	{fp, pc}

000141a0 <table_set_double@@Base>:
   141a0:	push	{fp, lr}
   141a4:	mov	fp, sp
   141a8:	sub	sp, sp, #16
   141ac:	vstr	d0, [sp, #8]
   141b0:	mov	r3, #17
   141b4:	str	r3, [sp]
   141b8:	add	r3, sp, #8
   141bc:	bl	13ca8 <table_set@@Base>
   141c0:	mov	sp, fp
   141c4:	pop	{fp, pc}

000141c8 <table_set_ldouble@@Base>:
   141c8:	push	{fp, lr}
   141cc:	mov	fp, sp
   141d0:	sub	sp, sp, #16
   141d4:	vstr	d0, [sp, #8]
   141d8:	mov	r3, #18
   141dc:	str	r3, [sp]
   141e0:	add	r3, sp, #8
   141e4:	bl	13ca8 <table_set@@Base>
   141e8:	mov	sp, fp
   141ec:	pop	{fp, pc}

000141f0 <table_set_string@@Base>:
   141f0:	push	{fp, lr}
   141f4:	mov	fp, sp
   141f8:	sub	sp, sp, #8
   141fc:	mov	ip, #21
   14200:	str	ip, [sp]
   14204:	bl	13ca8 <table_set@@Base>
   14208:	mov	sp, fp
   1420c:	pop	{fp, pc}

00014210 <table_set_char@@Base>:
   14210:	push	{fp, lr}
   14214:	mov	fp, sp
   14218:	sub	sp, sp, #8
   1421c:	strb	r3, [fp, #-1]
   14220:	mov	r3, #19
   14224:	str	r3, [sp]
   14228:	sub	r3, fp, #1
   1422c:	bl	13ca8 <table_set@@Base>
   14230:	mov	sp, fp
   14234:	pop	{fp, pc}

00014238 <table_set_uchar@@Base>:
   14238:	push	{fp, lr}
   1423c:	mov	fp, sp
   14240:	sub	sp, sp, #8
   14244:	strb	r3, [fp, #-1]
   14248:	mov	r3, #20
   1424c:	str	r3, [sp]
   14250:	sub	r3, fp, #1
   14254:	bl	13ca8 <table_set@@Base>
   14258:	mov	sp, fp
   1425c:	pop	{fp, pc}

00014260 <table_set_ptr@@Base>:
   14260:	push	{fp, lr}
   14264:	mov	fp, sp
   14268:	sub	sp, sp, #8
   1426c:	mov	ip, #23
   14270:	str	ip, [sp]
   14274:	bl	13ca8 <table_set@@Base>
   14278:	mov	sp, fp
   1427c:	pop	{fp, pc}

00014280 <table_column_is_valid@@Base>:
   14280:	cmp	r0, #0
   14284:	moveq	r0, #0
   14288:	bxeq	lr
   1428c:	push	{r4, sl, fp, lr}
   14290:	add	fp, sp, #8
   14294:	mov	r4, r1
   14298:	bl	12d3c <table_get_column_length@@Base>
   1429c:	mov	r1, #0
   142a0:	cmp	r0, r4
   142a4:	mov	r0, #0
   142a8:	movwgt	r0, #1
   142ac:	cmn	r4, #1
   142b0:	movwgt	r1, #1
   142b4:	and	r0, r1, r0
   142b8:	pop	{r4, sl, fp, pc}

000142bc <table_row_is_valid@@Base>:
   142bc:	cmp	r0, #0
   142c0:	moveq	r0, #0
   142c4:	bxeq	lr
   142c8:	push	{r4, sl, fp, lr}
   142cc:	add	fp, sp, #8
   142d0:	mov	r4, r1
   142d4:	bl	13a60 <table_get_row_length@@Base>
   142d8:	mov	r1, #0
   142dc:	cmp	r0, r4
   142e0:	mov	r0, #0
   142e4:	movwgt	r0, #1
   142e8:	cmn	r4, #1
   142ec:	movwgt	r1, #1
   142f0:	and	r0, r1, r0
   142f4:	pop	{r4, sl, fp, pc}

000142f8 <table_cell_is_valid@@Base>:
   142f8:	push	{r4, r5, fp, lr}
   142fc:	add	fp, sp, #8
   14300:	mov	r4, r1
   14304:	mov	r5, r0
   14308:	mov	r1, r2
   1430c:	bl	14280 <table_column_is_valid@@Base>
   14310:	cmp	r0, #0
   14314:	moveq	r0, #0
   14318:	popeq	{r4, r5, fp, pc}
   1431c:	mov	r0, r5
   14320:	mov	r1, r4
   14324:	bl	142bc <table_row_is_valid@@Base>
   14328:	cmp	r0, #0
   1432c:	movwne	r0, #1
   14330:	pop	{r4, r5, fp, pc}

00014334 <table_cell_has_value@@Base>:
   14334:	push	{fp, lr}
   14338:	mov	fp, sp
   1433c:	bl	14374 <table_get_cell_ptr@@Base>
   14340:	cmp	r0, #0
   14344:	moveq	r0, #0
   14348:	popeq	{fp, pc}
   1434c:	ldr	r0, [r0]
   14350:	cmp	r0, #0
   14354:	movwne	r0, #1
   14358:	pop	{fp, pc}

0001435c <table_cell_init@@Base>:
   1435c:	push	{fp, lr}
   14360:	mov	fp, sp
   14364:	bl	14374 <table_get_cell_ptr@@Base>
   14368:	mov	r1, #0
   1436c:	str	r1, [r0]
   14370:	pop	{fp, pc}

00014374 <table_get_cell_ptr@@Base>:
   14374:	push	{r4, sl, fp, lr}
   14378:	add	fp, sp, #8
   1437c:	mov	r4, r2
   14380:	bl	139f0 <table_get_row_ptr@@Base>
   14384:	ldr	r0, [r0]
   14388:	add	r0, r0, r4, lsl #2
   1438c:	pop	{r4, sl, fp, pc}

00014390 <table_cell_destroy@@Base>:
   14390:	push	{r4, r5, r6, sl, fp, lr}
   14394:	add	fp, sp, #16
   14398:	mov	r4, r2
   1439c:	mov	r5, r1
   143a0:	mov	r6, r0
   143a4:	mov	r1, r2
   143a8:	bl	12db4 <table_get_column_data_type@@Base>
   143ac:	cmp	r0, #23
   143b0:	popeq	{r4, r5, r6, sl, fp, pc}
   143b4:	mov	r0, r6
   143b8:	mov	r1, r5
   143bc:	mov	r2, r4
   143c0:	bl	14374 <table_get_cell_ptr@@Base>
   143c4:	ldr	r0, [r0]
   143c8:	cmp	r0, #0
   143cc:	beq	143d8 <table_cell_destroy@@Base+0x48>
   143d0:	pop	{r4, r5, r6, sl, fp, lr}
   143d4:	b	11fd4 <free@plt>
   143d8:	pop	{r4, r5, r6, sl, fp, pc}

000143dc <table_cell_to_buffer@@Base>:
   143dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143e0:	add	fp, sp, #24
   143e4:	sub	sp, sp, #8
   143e8:	mov	r5, r3
   143ec:	mov	r6, r2
   143f0:	mov	r7, r1
   143f4:	mov	r4, r0
   143f8:	mov	r1, r2
   143fc:	bl	12db4 <table_get_column_data_type@@Base>
   14400:	cmp	r0, #23
   14404:	bhi	146f4 <table_cell_to_buffer@@Base+0x318>
   14408:	ldr	r8, [fp, #8]
   1440c:	add	r1, pc, #0
   14410:	ldr	pc, [r1, r0, lsl #2]
   14414:	andeq	r4, r1, r4, ror r4
   14418:	andeq	r4, r1, r8, lsl #9
   1441c:	muleq	r1, ip, r4
   14420:			; <UNDEFINED> instruction: 0x000144b0
   14424:	andeq	r4, r1, r4, asr #9
   14428:	ldrdeq	r4, [r1], -r8
   1442c:	andeq	r4, r1, ip, ror #9
   14430:	andeq	r4, r1, r0, lsl #10
   14434:	andeq	r4, r1, r0, lsr #10
   14438:	andeq	r4, r1, r4, lsr r5
   1443c:	andeq	r4, r1, r8, asr #10
   14440:	andeq	r4, r1, r8, ror #10
   14444:	andeq	r4, r1, r8, lsl #11
   14448:	andeq	r4, r1, r8, lsr #11
   1444c:	andeq	r4, r1, r8, asr #11
   14450:	andeq	r4, r1, r8, ror #11
   14454:	andeq	r4, r1, r8, lsl #12
   14458:	andeq	r4, r1, ip, lsr #12
   1445c:	andeq	r4, r1, ip, asr #12
   14460:	andeq	r4, r1, r8, ror r6
   14464:	andeq	r4, r1, ip, lsl #13
   14468:	andeq	r4, r1, ip, lsr #13
   1446c:	andeq	r4, r1, ip, asr #13
   14470:	andeq	r4, r1, r0, lsl #14
   14474:	mov	r0, r4
   14478:	mov	r1, r7
   1447c:	mov	r2, r6
   14480:	bl	1381c <table_get_int@@Base>
   14484:	b	146dc <table_cell_to_buffer@@Base+0x300>
   14488:	mov	r0, r4
   1448c:	mov	r1, r7
   14490:	mov	r2, r6
   14494:	bl	13830 <table_get_uint@@Base>
   14498:	b	14510 <table_cell_to_buffer@@Base+0x134>
   1449c:	mov	r0, r4
   144a0:	mov	r1, r7
   144a4:	mov	r2, r6
   144a8:	bl	13844 <table_get_int8@@Base>
   144ac:	b	146dc <table_cell_to_buffer@@Base+0x300>
   144b0:	mov	r0, r4
   144b4:	mov	r1, r7
   144b8:	mov	r2, r6
   144bc:	bl	13858 <table_get_uint8@@Base>
   144c0:	b	14510 <table_cell_to_buffer@@Base+0x134>
   144c4:	mov	r0, r4
   144c8:	mov	r1, r7
   144cc:	mov	r2, r6
   144d0:	bl	1386c <table_get_int16@@Base>
   144d4:	b	146dc <table_cell_to_buffer@@Base+0x300>
   144d8:	mov	r0, r4
   144dc:	mov	r1, r7
   144e0:	mov	r2, r6
   144e4:	bl	13880 <table_get_uint16@@Base>
   144e8:	b	14510 <table_cell_to_buffer@@Base+0x134>
   144ec:	mov	r0, r4
   144f0:	mov	r1, r7
   144f4:	mov	r2, r6
   144f8:	bl	13894 <table_get_int32@@Base>
   144fc:	b	146dc <table_cell_to_buffer@@Base+0x300>
   14500:	mov	r0, r4
   14504:	mov	r1, r7
   14508:	mov	r2, r6
   1450c:	bl	138a8 <table_get_uint32@@Base>
   14510:	mov	r3, r0
   14514:	movw	r2, #20227	; 0x4f03
   14518:	movt	r2, #1
   1451c:	b	146e8 <table_cell_to_buffer@@Base+0x30c>
   14520:	mov	r0, r4
   14524:	mov	r1, r7
   14528:	mov	r2, r6
   1452c:	bl	138bc <table_get_int64@@Base>
   14530:	b	145d8 <table_cell_to_buffer@@Base+0x1fc>
   14534:	mov	r0, r4
   14538:	mov	r1, r7
   1453c:	mov	r2, r6
   14540:	bl	138d0 <table_get_uint64@@Base>
   14544:	b	145f8 <table_cell_to_buffer@@Base+0x21c>
   14548:	mov	r0, r4
   1454c:	mov	r1, r7
   14550:	mov	r2, r6
   14554:	bl	138e4 <table_get_short@@Base>
   14558:	mov	r3, r0
   1455c:	movw	r2, #20240	; 0x4f10
   14560:	movt	r2, #1
   14564:	b	146e8 <table_cell_to_buffer@@Base+0x30c>
   14568:	mov	r0, r4
   1456c:	mov	r1, r7
   14570:	mov	r2, r6
   14574:	bl	138f8 <table_get_ushort@@Base>
   14578:	mov	r3, r0
   1457c:	movw	r2, #20244	; 0x4f14
   14580:	movt	r2, #1
   14584:	b	146e8 <table_cell_to_buffer@@Base+0x30c>
   14588:	mov	r0, r4
   1458c:	mov	r1, r7
   14590:	mov	r2, r6
   14594:	bl	1390c <table_get_long@@Base>
   14598:	mov	r3, r0
   1459c:	movw	r2, #20248	; 0x4f18
   145a0:	movt	r2, #1
   145a4:	b	146e8 <table_cell_to_buffer@@Base+0x30c>
   145a8:	mov	r0, r4
   145ac:	mov	r1, r7
   145b0:	mov	r2, r6
   145b4:	bl	13920 <table_get_ulong@@Base>
   145b8:	mov	r3, r0
   145bc:	movw	r2, #20252	; 0x4f1c
   145c0:	movt	r2, #1
   145c4:	b	146e8 <table_cell_to_buffer@@Base+0x30c>
   145c8:	mov	r0, r4
   145cc:	mov	r1, r7
   145d0:	mov	r2, r6
   145d4:	bl	13934 <table_get_llong@@Base>
   145d8:	stm	sp, {r0, r1}
   145dc:	movw	r2, #20230	; 0x4f06
   145e0:	movt	r2, #1
   145e4:	b	14668 <table_cell_to_buffer@@Base+0x28c>
   145e8:	mov	r0, r4
   145ec:	mov	r1, r7
   145f0:	mov	r2, r6
   145f4:	bl	13948 <table_get_ullong@@Base>
   145f8:	stm	sp, {r0, r1}
   145fc:	movw	r2, #20235	; 0x4f0b
   14600:	movt	r2, #1
   14604:	b	14668 <table_cell_to_buffer@@Base+0x28c>
   14608:	mov	r0, r4
   1460c:	mov	r1, r7
   14610:	mov	r2, r6
   14614:	bl	1395c <table_get_float@@Base>
   14618:	vcvt.f64.f32	d16, s0
   1461c:	vstr	d16, [sp]
   14620:	movw	r2, #20259	; 0x4f23
   14624:	movt	r2, #1
   14628:	b	14668 <table_cell_to_buffer@@Base+0x28c>
   1462c:	mov	r0, r4
   14630:	mov	r1, r7
   14634:	mov	r2, r6
   14638:	bl	13970 <table_get_double@@Base>
   1463c:	vstr	d0, [sp]
   14640:	movw	r2, #20262	; 0x4f26
   14644:	movt	r2, #1
   14648:	b	14668 <table_cell_to_buffer@@Base+0x28c>
   1464c:	mov	r0, r4
   14650:	mov	r1, r7
   14654:	mov	r2, r6
   14658:	bl	13984 <table_get_ldouble@@Base>
   1465c:	vstr	d0, [sp]
   14660:	movw	r2, #20266	; 0x4f2a
   14664:	movt	r2, #1
   14668:	mov	r0, r5
   1466c:	mov	r1, r8
   14670:	bl	12040 <snprintf@plt>
   14674:	b	146f4 <table_cell_to_buffer@@Base+0x318>
   14678:	mov	r0, r4
   1467c:	mov	r1, r7
   14680:	mov	r2, r6
   14684:	bl	13998 <table_get_char@@Base>
   14688:	b	1469c <table_cell_to_buffer@@Base+0x2c0>
   1468c:	mov	r0, r4
   14690:	mov	r1, r7
   14694:	mov	r2, r6
   14698:	bl	139ac <table_get_uchar@@Base>
   1469c:	mov	r3, r0
   146a0:	movw	r2, #20270	; 0x4f2e
   146a4:	movt	r2, #1
   146a8:	b	146e8 <table_cell_to_buffer@@Base+0x30c>
   146ac:	mov	r0, r4
   146b0:	mov	r1, r7
   146b4:	mov	r2, r6
   146b8:	bl	139c0 <table_get_string@@Base>
   146bc:	mov	r3, r0
   146c0:	movw	r2, #20256	; 0x4f20
   146c4:	movt	r2, #1
   146c8:	b	146e8 <table_cell_to_buffer@@Base+0x30c>
   146cc:	mov	r0, r4
   146d0:	mov	r1, r7
   146d4:	mov	r2, r6
   146d8:	bl	13808 <table_get_bool@@Base>
   146dc:	mov	r3, r0
   146e0:	movw	r2, #20224	; 0x4f00
   146e4:	movt	r2, #1
   146e8:	mov	r0, r5
   146ec:	mov	r1, r8
   146f0:	bl	12040 <snprintf@plt>
   146f4:	mov	r0, #0
   146f8:	sub	sp, fp, #24
   146fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14700:	mov	r0, r4
   14704:	mov	r1, r7
   14708:	mov	r2, r6
   1470c:	bl	139c4 <table_get_ptr@@Base>
   14710:	mov	r3, r0
   14714:	movw	r2, #20273	; 0x4f31
   14718:	movt	r2, #1
   1471c:	b	146e8 <table_cell_to_buffer@@Base+0x30c>

00014720 <table_cell_from_buffer@@Base>:
   14720:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14724:	add	fp, sp, #24
   14728:	sub	sp, sp, #264	; 0x108
   1472c:	mov	r7, r3
   14730:	mov	r4, r2
   14734:	mov	r5, r1
   14738:	mov	r6, r0
   1473c:	mov	r1, r2
   14740:	bl	12db4 <table_get_column_data_type@@Base>
   14744:	cmp	r0, #23
   14748:	bhi	14d1c <table_cell_from_buffer@@Base+0x5fc>
   1474c:	add	r1, pc, #0
   14750:	ldr	pc, [r1, r0, lsl #2]
   14754:			; <UNDEFINED> instruction: 0x000147b4
   14758:	andeq	r4, r1, ip, ror #15
   1475c:	andeq	r4, r1, r4, lsr #16
   14760:	andeq	r4, r1, ip, asr r8
   14764:	muleq	r1, r4, r8
   14768:	andeq	r4, r1, ip, asr #17
   1476c:	andeq	r4, r1, r4, lsl #18
   14770:	andeq	r4, r1, ip, lsr r9
   14774:	andeq	r4, r1, r4, ror r9
   14778:			; <UNDEFINED> instruction: 0x000149b4
   1477c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14780:	andeq	r4, r1, ip, lsr #20
   14784:	andeq	r4, r1, r4, ror #20
   14788:	muleq	r1, ip, sl
   1478c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14790:	andeq	r4, r1, r4, lsl fp
   14794:	andeq	r4, r1, r4, asr fp
   14798:	andeq	r4, r1, ip, lsl #23
   1479c:	andeq	r4, r1, r4, asr #23
   147a0:	strdeq	r4, [r1], -ip
   147a4:	andeq	r4, r1, r4, lsr ip
   147a8:	andeq	r4, r1, ip, ror #24
   147ac:	andeq	r4, r1, r4, lsr #25
   147b0:	andeq	r4, r1, r8, ror #25
   147b4:	movw	r1, #20224	; 0x4f00
   147b8:	movt	r1, #1
   147bc:	add	r2, sp, #8
   147c0:	mov	r0, r7
   147c4:	bl	1204c <__isoc99_sscanf@plt>
   147c8:	mvn	r7, #0
   147cc:	cmp	r0, #1
   147d0:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   147d4:	ldr	r3, [sp, #8]
   147d8:	mov	r0, r6
   147dc:	mov	r1, r5
   147e0:	mov	r2, r4
   147e4:	bl	13ec8 <table_set_int@@Base>
   147e8:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   147ec:	movw	r1, #20227	; 0x4f03
   147f0:	movt	r1, #1
   147f4:	add	r2, sp, #8
   147f8:	mov	r0, r7
   147fc:	bl	1204c <__isoc99_sscanf@plt>
   14800:	mvn	r7, #0
   14804:	cmp	r0, #1
   14808:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   1480c:	ldr	r3, [sp, #8]
   14810:	mov	r0, r6
   14814:	mov	r1, r5
   14818:	mov	r2, r4
   1481c:	bl	13ef0 <table_set_uint@@Base>
   14820:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14824:	movw	r1, #20276	; 0x4f34
   14828:	movt	r1, #1
   1482c:	add	r2, sp, #8
   14830:	mov	r0, r7
   14834:	bl	1204c <__isoc99_sscanf@plt>
   14838:	mvn	r7, #0
   1483c:	cmp	r0, #1
   14840:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14844:	ldrsb	r3, [sp, #8]
   14848:	mov	r0, r6
   1484c:	mov	r1, r5
   14850:	mov	r2, r4
   14854:	bl	13f18 <table_set_int8@@Base>
   14858:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   1485c:	movw	r1, #20281	; 0x4f39
   14860:	movt	r1, #1
   14864:	add	r2, sp, #8
   14868:	mov	r0, r7
   1486c:	bl	1204c <__isoc99_sscanf@plt>
   14870:	mvn	r7, #0
   14874:	cmp	r0, #1
   14878:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   1487c:	ldrb	r3, [sp, #8]
   14880:	mov	r0, r6
   14884:	mov	r1, r5
   14888:	mov	r2, r4
   1488c:	bl	13f40 <table_set_uint8@@Base>
   14890:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14894:	movw	r1, #20240	; 0x4f10
   14898:	movt	r1, #1
   1489c:	add	r2, sp, #8
   148a0:	mov	r0, r7
   148a4:	bl	1204c <__isoc99_sscanf@plt>
   148a8:	mvn	r7, #0
   148ac:	cmp	r0, #1
   148b0:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   148b4:	ldrsh	r3, [sp, #8]
   148b8:	mov	r0, r6
   148bc:	mov	r1, r5
   148c0:	mov	r2, r4
   148c4:	bl	13f68 <table_set_int16@@Base>
   148c8:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   148cc:	movw	r1, #20244	; 0x4f14
   148d0:	movt	r1, #1
   148d4:	add	r2, sp, #8
   148d8:	mov	r0, r7
   148dc:	bl	1204c <__isoc99_sscanf@plt>
   148e0:	mvn	r7, #0
   148e4:	cmp	r0, #1
   148e8:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   148ec:	ldrh	r3, [sp, #8]
   148f0:	mov	r0, r6
   148f4:	mov	r1, r5
   148f8:	mov	r2, r4
   148fc:	bl	13f90 <table_set_uint16@@Base>
   14900:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14904:	movw	r1, #20224	; 0x4f00
   14908:	movt	r1, #1
   1490c:	add	r2, sp, #8
   14910:	mov	r0, r7
   14914:	bl	1204c <__isoc99_sscanf@plt>
   14918:	mvn	r7, #0
   1491c:	cmp	r0, #1
   14920:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14924:	ldr	r3, [sp, #8]
   14928:	mov	r0, r6
   1492c:	mov	r1, r5
   14930:	mov	r2, r4
   14934:	bl	13fb8 <table_set_int32@@Base>
   14938:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   1493c:	movw	r1, #20227	; 0x4f03
   14940:	movt	r1, #1
   14944:	add	r2, sp, #8
   14948:	mov	r0, r7
   1494c:	bl	1204c <__isoc99_sscanf@plt>
   14950:	mvn	r7, #0
   14954:	cmp	r0, #1
   14958:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   1495c:	ldr	r3, [sp, #8]
   14960:	mov	r0, r6
   14964:	mov	r1, r5
   14968:	mov	r2, r4
   1496c:	bl	13fe0 <table_set_uint32@@Base>
   14970:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14974:	movw	r1, #20230	; 0x4f06
   14978:	movt	r1, #1
   1497c:	add	r2, sp, #8
   14980:	mov	r0, r7
   14984:	bl	1204c <__isoc99_sscanf@plt>
   14988:	mvn	r7, #0
   1498c:	cmp	r0, #1
   14990:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14994:	ldr	r0, [sp, #8]
   14998:	ldr	r1, [sp, #12]
   1499c:	stm	sp, {r0, r1}
   149a0:	mov	r0, r6
   149a4:	mov	r1, r5
   149a8:	mov	r2, r4
   149ac:	bl	14008 <table_set_int64@@Base>
   149b0:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   149b4:	movw	r1, #20235	; 0x4f0b
   149b8:	movt	r1, #1
   149bc:	add	r2, sp, #8
   149c0:	mov	r0, r7
   149c4:	bl	1204c <__isoc99_sscanf@plt>
   149c8:	mvn	r7, #0
   149cc:	cmp	r0, #1
   149d0:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   149d4:	ldr	r0, [sp, #8]
   149d8:	ldr	r1, [sp, #12]
   149dc:	stm	sp, {r0, r1}
   149e0:	mov	r0, r6
   149e4:	mov	r1, r5
   149e8:	mov	r2, r4
   149ec:	bl	1403c <table_set_uint64@@Base>
   149f0:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   149f4:	movw	r1, #20240	; 0x4f10
   149f8:	movt	r1, #1
   149fc:	add	r2, sp, #8
   14a00:	mov	r0, r7
   14a04:	bl	1204c <__isoc99_sscanf@plt>
   14a08:	mvn	r7, #0
   14a0c:	cmp	r0, #1
   14a10:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14a14:	ldrsh	r3, [sp, #8]
   14a18:	mov	r0, r6
   14a1c:	mov	r1, r5
   14a20:	mov	r2, r4
   14a24:	bl	14070 <table_set_short@@Base>
   14a28:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14a2c:	movw	r1, #20244	; 0x4f14
   14a30:	movt	r1, #1
   14a34:	add	r2, sp, #8
   14a38:	mov	r0, r7
   14a3c:	bl	1204c <__isoc99_sscanf@plt>
   14a40:	mvn	r7, #0
   14a44:	cmp	r0, #1
   14a48:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14a4c:	ldrh	r3, [sp, #8]
   14a50:	mov	r0, r6
   14a54:	mov	r1, r5
   14a58:	mov	r2, r4
   14a5c:	bl	14098 <table_set_ushort@@Base>
   14a60:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14a64:	movw	r1, #20248	; 0x4f18
   14a68:	movt	r1, #1
   14a6c:	add	r2, sp, #8
   14a70:	mov	r0, r7
   14a74:	bl	1204c <__isoc99_sscanf@plt>
   14a78:	mvn	r7, #0
   14a7c:	cmp	r0, #1
   14a80:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14a84:	ldr	r3, [sp, #8]
   14a88:	mov	r0, r6
   14a8c:	mov	r1, r5
   14a90:	mov	r2, r4
   14a94:	bl	140c0 <table_set_long@@Base>
   14a98:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14a9c:	movw	r1, #20252	; 0x4f1c
   14aa0:	movt	r1, #1
   14aa4:	add	r2, sp, #8
   14aa8:	mov	r0, r7
   14aac:	bl	1204c <__isoc99_sscanf@plt>
   14ab0:	mvn	r7, #0
   14ab4:	cmp	r0, #1
   14ab8:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14abc:	ldr	r3, [sp, #8]
   14ac0:	mov	r0, r6
   14ac4:	mov	r1, r5
   14ac8:	mov	r2, r4
   14acc:	bl	140e8 <table_set_ulong@@Base>
   14ad0:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14ad4:	movw	r1, #20230	; 0x4f06
   14ad8:	movt	r1, #1
   14adc:	add	r2, sp, #8
   14ae0:	mov	r0, r7
   14ae4:	bl	1204c <__isoc99_sscanf@plt>
   14ae8:	mvn	r7, #0
   14aec:	cmp	r0, #1
   14af0:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14af4:	ldr	r0, [sp, #8]
   14af8:	ldr	r1, [sp, #12]
   14afc:	stm	sp, {r0, r1}
   14b00:	mov	r0, r6
   14b04:	mov	r1, r5
   14b08:	mov	r2, r4
   14b0c:	bl	14110 <table_set_llong@@Base>
   14b10:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14b14:	movw	r1, #20235	; 0x4f0b
   14b18:	movt	r1, #1
   14b1c:	add	r2, sp, #8
   14b20:	mov	r0, r7
   14b24:	bl	1204c <__isoc99_sscanf@plt>
   14b28:	mvn	r7, #0
   14b2c:	cmp	r0, #1
   14b30:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14b34:	ldr	r0, [sp, #8]
   14b38:	ldr	r1, [sp, #12]
   14b3c:	stm	sp, {r0, r1}
   14b40:	mov	r0, r6
   14b44:	mov	r1, r5
   14b48:	mov	r2, r4
   14b4c:	bl	14144 <table_set_ullong@@Base>
   14b50:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14b54:	movw	r1, #20259	; 0x4f23
   14b58:	movt	r1, #1
   14b5c:	add	r2, sp, #8
   14b60:	mov	r0, r7
   14b64:	bl	1204c <__isoc99_sscanf@plt>
   14b68:	mvn	r7, #0
   14b6c:	cmp	r0, #1
   14b70:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14b74:	vldr	s0, [sp, #8]
   14b78:	mov	r0, r6
   14b7c:	mov	r1, r5
   14b80:	mov	r2, r4
   14b84:	bl	14178 <table_set_float@@Base>
   14b88:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14b8c:	movw	r1, #20262	; 0x4f26
   14b90:	movt	r1, #1
   14b94:	add	r2, sp, #8
   14b98:	mov	r0, r7
   14b9c:	bl	1204c <__isoc99_sscanf@plt>
   14ba0:	mvn	r7, #0
   14ba4:	cmp	r0, #1
   14ba8:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14bac:	vldr	d0, [sp, #8]
   14bb0:	mov	r0, r6
   14bb4:	mov	r1, r5
   14bb8:	mov	r2, r4
   14bbc:	bl	141a0 <table_set_double@@Base>
   14bc0:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14bc4:	movw	r1, #20266	; 0x4f2a
   14bc8:	movt	r1, #1
   14bcc:	add	r2, sp, #8
   14bd0:	mov	r0, r7
   14bd4:	bl	1204c <__isoc99_sscanf@plt>
   14bd8:	mvn	r7, #0
   14bdc:	cmp	r0, #1
   14be0:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14be4:	vldr	d0, [sp, #8]
   14be8:	mov	r0, r6
   14bec:	mov	r1, r5
   14bf0:	mov	r2, r4
   14bf4:	bl	141c8 <table_set_ldouble@@Base>
   14bf8:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14bfc:	movw	r1, #20270	; 0x4f2e
   14c00:	movt	r1, #1
   14c04:	add	r2, sp, #8
   14c08:	mov	r0, r7
   14c0c:	bl	1204c <__isoc99_sscanf@plt>
   14c10:	mvn	r7, #0
   14c14:	cmp	r0, #1
   14c18:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14c1c:	ldrb	r3, [sp, #8]
   14c20:	mov	r0, r6
   14c24:	mov	r1, r5
   14c28:	mov	r2, r4
   14c2c:	bl	14210 <table_set_char@@Base>
   14c30:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14c34:	movw	r1, #20270	; 0x4f2e
   14c38:	movt	r1, #1
   14c3c:	add	r2, sp, #8
   14c40:	mov	r0, r7
   14c44:	bl	1204c <__isoc99_sscanf@plt>
   14c48:	mvn	r7, #0
   14c4c:	cmp	r0, #1
   14c50:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14c54:	ldrb	r3, [sp, #8]
   14c58:	mov	r0, r6
   14c5c:	mov	r1, r5
   14c60:	mov	r2, r4
   14c64:	bl	14238 <table_set_uchar@@Base>
   14c68:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14c6c:	movw	r1, #20256	; 0x4f20
   14c70:	movt	r1, #1
   14c74:	add	r2, sp, #8
   14c78:	mov	r0, r7
   14c7c:	bl	1204c <__isoc99_sscanf@plt>
   14c80:	mvn	r7, #0
   14c84:	cmp	r0, #1
   14c88:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14c8c:	add	r3, sp, #8
   14c90:	mov	r0, r6
   14c94:	mov	r1, r5
   14c98:	mov	r2, r4
   14c9c:	bl	141f0 <table_set_string@@Base>
   14ca0:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14ca4:	movw	r1, #20224	; 0x4f00
   14ca8:	movt	r1, #1
   14cac:	add	r2, sp, #8
   14cb0:	mov	r0, r7
   14cb4:	bl	1204c <__isoc99_sscanf@plt>
   14cb8:	mvn	r7, #0
   14cbc:	cmp	r0, #1
   14cc0:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14cc4:	ldr	r0, [sp, #8]
   14cc8:	cmp	r0, #0
   14ccc:	beq	14d2c <table_cell_from_buffer@@Base+0x60c>
   14cd0:	mov	r0, r6
   14cd4:	mov	r1, r5
   14cd8:	mov	r2, r4
   14cdc:	mov	r3, #1
   14ce0:	bl	13ea0 <table_set_bool@@Base>
   14ce4:	b	14d1c <table_cell_from_buffer@@Base+0x5fc>
   14ce8:	movw	r1, #20273	; 0x4f31
   14cec:	movt	r1, #1
   14cf0:	add	r2, sp, #8
   14cf4:	mov	r0, r7
   14cf8:	bl	1204c <__isoc99_sscanf@plt>
   14cfc:	mvn	r7, #0
   14d00:	cmp	r0, #1
   14d04:	bne	14d20 <table_cell_from_buffer@@Base+0x600>
   14d08:	ldr	r3, [sp, #8]
   14d0c:	mov	r0, r6
   14d10:	mov	r1, r5
   14d14:	mov	r2, r4
   14d18:	bl	14260 <table_set_ptr@@Base>
   14d1c:	mov	r7, #0
   14d20:	mov	r0, r7
   14d24:	sub	sp, fp, #24
   14d28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d2c:	mov	r7, #0
   14d30:	mov	r0, r6
   14d34:	mov	r1, r5
   14d38:	mov	r2, r4
   14d3c:	mov	r3, #0
   14d40:	bl	13ea0 <table_set_bool@@Base>
   14d44:	b	14d20 <table_cell_from_buffer@@Base+0x600>

00014d48 <table_cell_nullify@@Base>:
   14d48:	push	{r4, sl, fp, lr}
   14d4c:	add	fp, sp, #8
   14d50:	bl	14374 <table_get_cell_ptr@@Base>
   14d54:	mov	r4, r0
   14d58:	ldr	r0, [r0]
   14d5c:	cmp	r0, #0
   14d60:	beq	14d70 <table_cell_nullify@@Base+0x28>
   14d64:	bl	11fd4 <free@plt>
   14d68:	mov	r0, #0
   14d6c:	str	r0, [r4]
   14d70:	mov	r0, #0
   14d74:	pop	{r4, sl, fp, pc}

00014d78 <__libc_csu_init@@Base>:
   14d78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d7c:	mov	r7, r0
   14d80:	ldr	r6, [pc, #72]	; 14dd0 <__libc_csu_init@@Base+0x58>
   14d84:	ldr	r5, [pc, #72]	; 14dd4 <__libc_csu_init@@Base+0x5c>
   14d88:	add	r6, pc, r6
   14d8c:	add	r5, pc, r5
   14d90:	sub	r6, r6, r5
   14d94:	mov	r8, r1
   14d98:	mov	r9, r2
   14d9c:	bl	11f9c <strcmp@plt-0x20>
   14da0:	asrs	r6, r6, #2
   14da4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14da8:	mov	r4, #0
   14dac:	add	r4, r4, #1
   14db0:	ldr	r3, [r5], #4
   14db4:	mov	r2, r9
   14db8:	mov	r1, r8
   14dbc:	mov	r0, r7
   14dc0:	blx	r3
   14dc4:	cmp	r6, r4
   14dc8:	bne	14dac <__libc_csu_init@@Base+0x34>
   14dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14dd0:	andeq	r1, r1, ip, ror r1
   14dd4:	andeq	r1, r1, r4, ror r1

00014dd8 <__libc_csu_fini@@Base>:
   14dd8:	bx	lr

Disassembly of section .fini:

00014ddc <.fini>:
   14ddc:	push	{r3, lr}
   14de0:	pop	{r3, pc}
