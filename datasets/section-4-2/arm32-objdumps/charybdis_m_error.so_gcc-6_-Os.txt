
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000560 <_init>:
 560:	push	{r3, lr}
 564:	bl	610 <call_weak_fn>
 568:	pop	{r3, pc}

Disassembly of section .plt:

0000056c <.plt>:
 56c:	push	{lr}		; (str lr, [sp, #-4]!)
 570:	ldr	lr, [pc, #4]	; 57c <.plt+0x10>
 574:	add	lr, pc, lr
 578:	ldr	pc, [lr, #8]!
 57c:	.word	0x00010a84

00000580 <__cxa_finalize@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2692]!	; 0xa84

0000058c <rb_strncasecmp@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2684]!	; 0xa7c

00000598 <sendto_realops_snomask@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2676]!	; 0xa74

000005a4 <__gmon_start__@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b0 <strlen@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2660]!	; 0xa64

000005bc <strchr@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2652]!	; 0xa5c

000005c8 <snprintf@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2644]!	; 0xa54

000005d4 <is_remote_connect@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2636]!	; 0xa4c

000005e0 <ilog@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2628]!	; 0xa44

000005ec <log_client_name@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2620]!	; 0xa3c

000005f8 <exit_client@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2612]!	; 0xa34

00000604 <strncmp@plt>:
 604:	add	ip, pc, #0, 12
 608:	add	ip, ip, #16, 20	; 0x10000
 60c:	ldr	pc, [ip, #2604]!	; 0xa2c

Disassembly of section .text:

00000610 <call_weak_fn>:
 610:	ldr	r3, [pc, #20]	; 62c <call_weak_fn+0x1c>
 614:	ldr	r2, [pc, #20]	; 630 <call_weak_fn+0x20>
 618:	add	r3, pc, r3
 61c:	ldr	r2, [r3, r2]
 620:	cmp	r2, #0
 624:	bxeq	lr
 628:	b	5a4 <__gmon_start__@plt>
 62c:	.word	0x000109e0
 630:	.word	0x00000044

00000634 <deregister_tm_clones>:
 634:	ldr	r3, [pc, #52]	; 670 <deregister_tm_clones+0x3c>
 638:	ldr	r0, [pc, #52]	; 674 <deregister_tm_clones+0x40>
 63c:	add	r3, pc, r3
 640:	add	r0, pc, r0
 644:	add	r3, r3, #3
 648:	sub	r3, r3, r0
 64c:	cmp	r3, #6
 650:	ldr	r3, [pc, #32]	; 678 <deregister_tm_clones+0x44>
 654:	add	r3, pc, r3
 658:	bxls	lr
 65c:	ldr	r2, [pc, #24]	; 67c <deregister_tm_clones+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	bxeq	lr
 66c:	bx	r3
 670:	.word	0x00010a8c
 674:	.word	0x00010a88
 678:	.word	0x000109a4
 67c:	.word	0x00000040

00000680 <register_tm_clones>:
 680:	ldr	r1, [pc, #56]	; 6c0 <register_tm_clones+0x40>
 684:	ldr	r0, [pc, #56]	; 6c4 <register_tm_clones+0x44>
 688:	add	r1, pc, r1
 68c:	add	r0, pc, r0
 690:	sub	r1, r1, r0
 694:	ldr	r3, [pc, #44]	; 6c8 <register_tm_clones+0x48>
 698:	asr	r1, r1, #2
 69c:	add	r3, pc, r3
 6a0:	add	r1, r1, r1, lsr #31
 6a4:	asrs	r1, r1, #1
 6a8:	bxeq	lr
 6ac:	ldr	r2, [pc, #24]	; 6cc <register_tm_clones+0x4c>
 6b0:	ldr	r3, [r3, r2]
 6b4:	cmp	r3, #0
 6b8:	bxeq	lr
 6bc:	bx	r3
 6c0:	.word	0x00010a40
 6c4:	.word	0x00010a3c
 6c8:	.word	0x0001095c
 6cc:	.word	0x0000004c

000006d0 <__do_global_dtors_aux>:
 6d0:	ldr	r3, [pc, #76]	; 724 <__do_global_dtors_aux+0x54>
 6d4:	ldr	r2, [pc, #76]	; 728 <__do_global_dtors_aux+0x58>
 6d8:	add	r3, pc, r3
 6dc:	add	r2, pc, r2
 6e0:	ldrb	r3, [r3]
 6e4:	cmp	r3, #0
 6e8:	bxne	lr
 6ec:	ldr	r3, [pc, #56]	; 72c <__do_global_dtors_aux+0x5c>
 6f0:	push	{r4, lr}
 6f4:	ldr	r3, [r2, r3]
 6f8:	cmp	r3, #0
 6fc:	beq	70c <__do_global_dtors_aux+0x3c>
 700:	ldr	r3, [pc, #40]	; 730 <__do_global_dtors_aux+0x60>
 704:	ldr	r0, [pc, r3]
 708:	bl	580 <__cxa_finalize@plt>
 70c:	bl	634 <deregister_tm_clones>
 710:	ldr	r3, [pc, #28]	; 734 <__do_global_dtors_aux+0x64>
 714:	mov	r2, #1
 718:	add	r3, pc, r3
 71c:	strb	r2, [r3]
 720:	pop	{r4, pc}
 724:	.word	0x000109f0
 728:	.word	0x0001091c
 72c:	.word	0x0000003c
 730:	.word	0x0001094c
 734:	.word	0x000109b0

00000738 <frame_dummy>:
 738:	ldr	r0, [pc, #56]	; 778 <frame_dummy+0x40>
 73c:	ldr	r3, [pc, #56]	; 77c <frame_dummy+0x44>
 740:	add	r0, pc, r0
 744:	ldr	r2, [r0]
 748:	add	r3, pc, r3
 74c:	cmp	r2, #0
 750:	bne	758 <frame_dummy+0x20>
 754:	b	680 <register_tm_clones>
 758:	ldr	r2, [pc, #32]	; 780 <frame_dummy+0x48>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	beq	754 <frame_dummy+0x1c>
 768:	push	{r4, lr}
 76c:	blx	r3
 770:	pop	{r4, lr}
 774:	b	680 <register_tm_clones>
 778:	.word	0x000107b4
 77c:	.word	0x000108b0
 780:	.word	0x00000048

00000784 <is_safe_error>:
 784:	ldr	r1, [pc, #284]	; 8a8 <is_safe_error+0x124>
 788:	push	{r4, r5, lr}
 78c:	mov	r2, #25
 790:	sub	sp, sp, #108	; 0x6c
 794:	add	r1, pc, r1
 798:	mov	r5, r0
 79c:	bl	604 <strncmp@plt>
 7a0:	ldr	r4, [pc, #260]	; 8ac <is_safe_error+0x128>
 7a4:	add	r4, pc, r4
 7a8:	cmp	r0, #0
 7ac:	bne	7bc <is_safe_error+0x38>
 7b0:	mov	r0, #1
 7b4:	add	sp, sp, #108	; 0x6c
 7b8:	pop	{r4, r5, pc}
 7bc:	ldr	r3, [pc, #236]	; 8b0 <is_safe_error+0x12c>
 7c0:	ldr	r2, [pc, #236]	; 8b4 <is_safe_error+0x130>
 7c4:	mov	r1, #100	; 0x64
 7c8:	ldr	r3, [r4, r3]
 7cc:	add	r4, sp, #4
 7d0:	add	r3, r3, #88	; 0x58
 7d4:	add	r2, pc, r2
 7d8:	mov	r0, r4
 7dc:	bl	5c8 <snprintf@plt>
 7e0:	mov	r0, r4
 7e4:	bl	5b0 <strlen@plt>
 7e8:	mov	r1, r4
 7ec:	mov	r2, r0
 7f0:	mov	r0, r5
 7f4:	bl	604 <strncmp@plt>
 7f8:	cmp	r0, #0
 7fc:	beq	7b0 <is_safe_error+0x2c>
 800:	ldr	r1, [pc, #176]	; 8b8 <is_safe_error+0x134>
 804:	mov	r2, #11
 808:	add	r1, pc, r1
 80c:	mov	r0, r5
 810:	bl	604 <strncmp@plt>
 814:	cmp	r0, #0
 818:	beq	7b0 <is_safe_error+0x2c>
 81c:	ldr	r1, [pc, #152]	; 8bc <is_safe_error+0x138>
 820:	mov	r2, #14
 824:	add	r1, pc, r1
 828:	mov	r0, r5
 82c:	bl	604 <strncmp@plt>
 830:	cmp	r0, #0
 834:	beq	7b0 <is_safe_error+0x2c>
 838:	ldr	r1, [pc, #128]	; 8c0 <is_safe_error+0x13c>
 83c:	mov	r2, #12
 840:	add	r1, pc, r1
 844:	mov	r0, r5
 848:	bl	58c <rb_strncasecmp@plt>
 84c:	cmp	r0, #0
 850:	beq	7b4 <is_safe_error+0x30>
 854:	mov	r1, #91	; 0x5b
 858:	mov	r0, r5
 85c:	bl	5bc <strchr@plt>
 860:	subs	r4, r0, #0
 864:	movne	r0, #0
 868:	bne	7b4 <is_safe_error+0x30>
 86c:	mov	r1, #46	; 0x2e
 870:	mov	r0, r5
 874:	bl	5bc <strchr@plt>
 878:	cmp	r0, #0
 87c:	beq	890 <is_safe_error+0x10c>
 880:	ldrb	r3, [r0, #1]
 884:	cmp	r3, #0
 888:	movne	r0, r4
 88c:	bne	7b4 <is_safe_error+0x30>
 890:	mov	r1, #58	; 0x3a
 894:	mov	r0, r5
 898:	bl	5bc <strchr@plt>
 89c:	clz	r0, r0
 8a0:	lsr	r0, r0, #5
 8a4:	b	7b4 <is_safe_error+0x30>
 8a8:	.word	0x000003f3
 8ac:	.word	0x00010854
 8b0:	.word	0x00000050
 8b4:	.word	0x000003cd
 8b8:	.word	0x000003b6
 8bc:	.word	0x000003a6
 8c0:	.word	0x00000399

000008c4 <ms_error>:
 8c4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8c8:	mov	r7, r2
 8cc:	ldr	r2, [pc, #236]	; 9c0 <ms_error+0xfc>
 8d0:	ldr	r0, [pc, #236]	; 9c4 <ms_error+0x100>
 8d4:	add	r2, pc, r2
 8d8:	cmp	r3, #1
 8dc:	ldr	r2, [r2, r0]
 8e0:	mov	r6, r1
 8e4:	ldr	r1, [sp, #32]
 8e8:	ldr	r4, [r2, #208]	; 0xd0
 8ec:	ble	974 <ms_error+0xb0>
 8f0:	ldr	r5, [r1, #4]
 8f4:	ldrb	r3, [r5]
 8f8:	cmp	r3, #0
 8fc:	beq	980 <ms_error+0xbc>
 900:	mov	r1, #1
 904:	mov	r0, r7
 908:	bl	5ec <log_client_name@plt>
 90c:	ldr	r1, [pc, #180]	; 9c8 <ms_error+0x104>
 910:	mov	r3, r5
 914:	add	r1, pc, r1
 918:	mov	r2, r0
 91c:	mov	r0, #5
 920:	bl	5e0 <ilog@plt>
 924:	mov	r0, r5
 928:	bl	784 <is_safe_error>
 92c:	cmp	r0, #0
 930:	bne	9b8 <ms_error+0xf4>
 934:	cmp	r4, #2
 938:	beq	9b0 <ms_error+0xec>
 93c:	cmp	r4, #0
 940:	movne	r4, #2
 944:	moveq	r4, #0
 948:	cmp	r7, r6
 94c:	bne	98c <ms_error+0xc8>
 950:	ldr	r2, [pc, #116]	; 9cc <ms_error+0x108>
 954:	str	r5, [sp, #32]
 958:	add	r3, r7, #88	; 0x58
 95c:	add	r2, pc, r2
 960:	mov	r1, r4
 964:	mov	r0, #256	; 0x100
 968:	add	sp, sp, #12
 96c:	pop	{r4, r5, r6, r7, lr}
 970:	b	598 <sendto_realops_snomask@plt>
 974:	ldr	r5, [pc, #84]	; 9d0 <ms_error+0x10c>
 978:	add	r5, pc, r5
 97c:	b	900 <ms_error+0x3c>
 980:	ldr	r5, [pc, #76]	; 9d4 <ms_error+0x110>
 984:	add	r5, pc, r5
 988:	b	900 <ms_error+0x3c>
 98c:	ldr	r2, [pc, #68]	; 9d8 <ms_error+0x114>
 990:	add	r6, r6, #88	; 0x58
 994:	str	r5, [sp, #4]
 998:	str	r6, [sp]
 99c:	add	r3, r7, #88	; 0x58
 9a0:	add	r2, pc, r2
 9a4:	mov	r1, r4
 9a8:	mov	r0, #256	; 0x100
 9ac:	bl	598 <sendto_realops_snomask@plt>
 9b0:	add	sp, sp, #12
 9b4:	pop	{r4, r5, r6, r7, pc}
 9b8:	mov	r4, #0
 9bc:	b	948 <ms_error+0x84>
 9c0:	.word	0x00010724
 9c4:	.word	0x00000054
 9c8:	.word	0x000002d5
 9cc:	.word	0x000002b0
 9d0:	.word	0x0000026e
 9d4:	.word	0x00000262
 9d8:	.word	0x00000281

000009dc <m_error>:
 9dc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
 9e0:	mov	r7, r2
 9e4:	ldr	r2, [pc, #328]	; b34 <m_error+0x158>
 9e8:	ldr	r0, [pc, #328]	; b38 <m_error+0x15c>
 9ec:	add	r2, pc, r2
 9f0:	cmp	r3, #1
 9f4:	ldr	r2, [r2, r0]
 9f8:	mov	r5, r1
 9fc:	ldr	r1, [sp, #32]
 a00:	ldr	r4, [r2, #208]	; 0xd0
 a04:	ble	ad8 <m_error+0xfc>
 a08:	ldr	r6, [r1, #4]
 a0c:	ldrb	r3, [r6]
 a10:	cmp	r3, #0
 a14:	beq	ae4 <m_error+0x108>
 a18:	ldrh	r3, [r5, #80]	; 0x50
 a1c:	sub	r2, r3, #1
 a20:	cmp	r3, #32
 a24:	cmpne	r2, #1
 a28:	bhi	a50 <m_error+0x74>
 a2c:	mov	r1, #1
 a30:	mov	r0, r7
 a34:	bl	5ec <log_client_name@plt>
 a38:	ldr	r1, [pc, #252]	; b3c <m_error+0x160>
 a3c:	mov	r3, r6
 a40:	add	r1, pc, r1
 a44:	mov	r2, r0
 a48:	mov	r0, #5
 a4c:	bl	5e0 <ilog@plt>
 a50:	mov	r0, r6
 a54:	bl	784 <is_safe_error>
 a58:	ldrh	r3, [r5, #80]	; 0x50
 a5c:	sub	r2, r3, #1
 a60:	cmp	r0, #0
 a64:	movne	r4, #0
 a68:	cmp	r3, #32
 a6c:	cmpne	r2, #1
 a70:	bhi	ab8 <m_error+0xdc>
 a74:	cmp	r4, #1
 a78:	add	r8, r5, #88	; 0x58
 a7c:	ble	af0 <m_error+0x114>
 a80:	mov	r0, r5
 a84:	bl	5d4 <is_remote_connect@plt>
 a88:	ldr	r2, [pc, #176]	; b40 <m_error+0x164>
 a8c:	sub	r4, r4, #1
 a90:	clz	r4, r4
 a94:	lsr	r4, r4, #5
 a98:	mov	r3, r8
 a9c:	add	r2, pc, r2
 aa0:	cmp	r0, #0
 aa4:	movne	r1, #256	; 0x100
 aa8:	moveq	r1, #0
 aac:	orr	r1, r1, r4
 ab0:	mov	r0, #256	; 0x100
 ab4:	bl	598 <sendto_realops_snomask@plt>
 ab8:	ldr	r3, [pc, #132]	; b44 <m_error+0x168>
 abc:	mov	r2, r7
 ac0:	add	r3, pc, r3
 ac4:	mov	r1, r7
 ac8:	mov	r0, r5
 acc:	add	sp, sp, #8
 ad0:	pop	{r4, r5, r6, r7, r8, lr}
 ad4:	b	5f8 <exit_client@plt>
 ad8:	ldr	r6, [pc, #104]	; b48 <m_error+0x16c>
 adc:	add	r6, pc, r6
 ae0:	b	a18 <m_error+0x3c>
 ae4:	ldr	r6, [pc, #96]	; b4c <m_error+0x170>
 ae8:	add	r6, pc, r6
 aec:	b	a18 <m_error+0x3c>
 af0:	cmp	r4, #0
 af4:	movne	r1, #2
 af8:	bne	b10 <m_error+0x134>
 afc:	mov	r0, r5
 b00:	bl	5d4 <is_remote_connect@plt>
 b04:	cmp	r0, #0
 b08:	movne	r1, #256	; 0x100
 b0c:	moveq	r1, #0
 b10:	ldr	r2, [pc, #56]	; b50 <m_error+0x174>
 b14:	str	r6, [sp]
 b18:	mov	r3, r8
 b1c:	add	r2, pc, r2
 b20:	mov	r0, #256	; 0x100
 b24:	bl	598 <sendto_realops_snomask@plt>
 b28:	cmp	r4, #1
 b2c:	bne	ab8 <m_error+0xdc>
 b30:	b	a80 <m_error+0xa4>
 b34:	.word	0x0001060c
 b38:	.word	0x00000054
 b3c:	.word	0x000001a9
 b40:	.word	0x000001a1
 b44:	.word	0x00000198
 b48:	.word	0x0000010a
 b4c:	.word	0x000000fe
 b50:	.word	0x000000f0

Disassembly of section .fini:

00000b54 <_fini>:
 b54:	push	{r3, lr}
 b58:	pop	{r3, pc}
