
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	115e4 <__errno_location@plt+0x420>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <open@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <open@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r3, r1, r8, asr r1

00010eac <open@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #77824	; 0x13000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <sigemptyset@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #77824	; 0x13000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <strerror@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #77824	; 0x13000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <rb_get_type@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #77824	; 0x13000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <zError@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #77824	; 0x13000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <abort@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #77824	; 0x13000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <rb_event_addish@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #77824	; 0x13000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <rb_ignore_errno@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #77824	; 0x13000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <rb_lib_version@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #77824	; 0x13000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <inflateEnd@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #77824	; 0x13000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <__libc_start_main@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #77824	; 0x13000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <rb_setselect@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #77824	; 0x13000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <__gmon_start__@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #77824	; 0x13000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <rb_ssl_handshake_count@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #77824	; 0x13000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <rb_send_fd_buf@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #77824	; 0x13000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <vsnprintf@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #77824	; 0x13000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <strncpy@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #77824	; 0x13000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <getenv@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #77824	; 0x13000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <deflate@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #77824	; 0x13000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <deflateInit_@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #77824	; 0x13000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <calloc@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #77824	; 0x13000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <rb_set_nb@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #77824	; 0x13000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <memset@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #77824	; 0x13000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <__assert_fail@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #77824	; 0x13000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <rb_strlcpy@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #77824	; 0x13000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <rb_get_ssl_certfp@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #77824	; 0x13000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <inflate@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #77824	; 0x13000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <rb_init_rawbuffers@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #77824	; 0x13000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <free@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #77824	; 0x13000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <rb_lib_loop@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #77824	; 0x13000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <deflateEnd@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #77824	; 0x13000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <rb_read@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #77824	; 0x13000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <rb_set_type@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #77824	; 0x13000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <strlen@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #77824	; 0x13000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <rb_ssl_get_cipher@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #77824	; 0x13000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <memcpy@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #77824	; 0x13000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <rb_close@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #77824	; 0x13000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <strtol@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #77824	; 0x13000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <sigaddset@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #77824	; 0x13000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <strcpy@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #77824	; 0x13000
   11088:	ldr	pc, [ip, #32]!

0001108c <rb_ssl_clear_handshake_count@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #77824	; 0x13000
   11094:	ldr	pc, [ip, #24]!

00011098 <rb_rawbuf_length@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #77824	; 0x13000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <rb_free_rawbuffer@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #77824	; 0x13000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <rb_get_ssl_strerror@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #77824	; 0x13000
   110b8:	ldr	pc, [ip, #0]!

000110bc <close@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #73728	; 0x12000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <fwrite@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #73728	; 0x12000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <rb_init_prng@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #73728	; 0x12000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <rb_outofmemory@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #73728	; 0x12000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <rb_supports_ssl@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #73728	; 0x12000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <sigaction@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #73728	; 0x12000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <rb_ssl_start_connected@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #73728	; 0x12000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

00011110 <rb_lib_init@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #73728	; 0x12000
   11118:	ldr	pc, [ip, #4032]!	; 0xfc0

0001111c <rb_new_rawbuffer@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #73728	; 0x12000
   11124:	ldr	pc, [ip, #4024]!	; 0xfb8

00011128 <rb_open@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #73728	; 0x12000
   11130:	ldr	pc, [ip, #4016]!	; 0xfb0

00011134 <inflateInit_@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #73728	; 0x12000
   1113c:	ldr	pc, [ip, #4008]!	; 0xfa8

00011140 <rb_recv_fd_buf@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #73728	; 0x12000
   11148:	ldr	pc, [ip, #4000]!	; 0xfa0

0001114c <rb_ssl_start_accepted@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #73728	; 0x12000
   11154:	ldr	pc, [ip, #3992]!	; 0xf98

00011158 <dup2@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #73728	; 0x12000
   11160:	ldr	pc, [ip, #3984]!	; 0xf90

00011164 <rb_event_add@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #73728	; 0x12000
   1116c:	ldr	pc, [ip, #3976]!	; 0xf88

00011170 <snprintf@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #73728	; 0x12000
   11178:	ldr	pc, [ip, #3968]!	; 0xf80

0001117c <strncmp@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #73728	; 0x12000
   11184:	ldr	pc, [ip, #3960]!	; 0xf78

00011188 <getrlimit@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #73728	; 0x12000
   11190:	ldr	pc, [ip, #3952]!	; 0xf70

00011194 <rb_rawbuf_append@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #73728	; 0x12000
   1119c:	ldr	pc, [ip, #3944]!	; 0xf68

000111a0 <rb_rawbuf_flush@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #73728	; 0x12000
   111a8:	ldr	pc, [ip, #3936]!	; 0xf60

000111ac <rb_setup_ssl_server@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #73728	; 0x12000
   111b4:	ldr	pc, [ip, #3928]!	; 0xf58

000111b8 <exit@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #73728	; 0x12000
   111c0:	ldr	pc, [ip, #3920]!	; 0xf50

000111c4 <__errno_location@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #73728	; 0x12000
   111cc:	ldr	pc, [ip, #3912]!	; 0xf48

Disassembly of section .text:

000111d0 <.text>:
   111d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   111d4:	mov	r0, #7
   111d8:	strd	r6, [sp, #8]
   111dc:	strd	r8, [sp, #16]
   111e0:	strd	sl, [sp, #24]
   111e4:	str	lr, [sp, #32]
   111e8:	sub	sp, sp, #164	; 0xa4
   111ec:	add	r7, sp, #20
   111f0:	ldr	r8, [pc, #876]	; 11564 <__errno_location@plt+0x3a0>
   111f4:	mov	r1, r7
   111f8:	bl	11188 <getrlimit@plt>
   111fc:	cmp	r0, #0
   11200:	ldr	r0, [pc, #864]	; 11568 <__errno_location@plt+0x3a4>
   11204:	movwne	r5, #65535	; 0xffff
   11208:	ldreq	r5, [sp, #20]
   1120c:	add	r8, pc, r8
   11210:	add	r0, pc, r0
   11214:	bl	10f78 <getenv@plt>
   11218:	mov	sl, r0
   1121c:	ldr	r0, [pc, #840]	; 1156c <__errno_location@plt+0x3a8>
   11220:	add	r0, pc, r0
   11224:	bl	10f78 <getenv@plt>
   11228:	mov	r6, r0
   1122c:	ldr	r0, [pc, #828]	; 11570 <__errno_location@plt+0x3ac>
   11230:	add	r0, pc, r0
   11234:	bl	10f78 <getenv@plt>
   11238:	clz	r1, r6
   1123c:	cmp	sl, #0
   11240:	lsr	r1, r1, #5
   11244:	moveq	r1, #1
   11248:	cmp	r0, #0
   1124c:	moveq	r4, #1
   11250:	mov	r9, r0
   11254:	movne	r4, r1
   11258:	cmp	r4, #0
   1125c:	beq	112a0 <__errno_location@plt+0xdc>
   11260:	ldr	r3, [pc, #780]	; 11574 <__errno_location@plt+0x3b0>
   11264:	mov	r2, #50	; 0x32
   11268:	mov	r1, #1
   1126c:	ldr	r0, [pc, #772]	; 11578 <__errno_location@plt+0x3b4>
   11270:	ldr	r4, [r8, r3]
   11274:	add	r0, pc, r0
   11278:	ldr	r3, [r4]
   1127c:	bl	110c8 <fwrite@plt>
   11280:	ldr	r0, [pc, #756]	; 1157c <__errno_location@plt+0x3b8>
   11284:	mov	r2, #49	; 0x31
   11288:	mov	r1, #1
   1128c:	ldr	r3, [r4]
   11290:	add	r0, pc, r0
   11294:	bl	110c8 <fwrite@plt>
   11298:	mov	r0, #1
   1129c:	bl	111b8 <exit@plt>
   112a0:	mov	r2, #10
   112a4:	mov	r1, r4
   112a8:	mov	r0, sl
   112ac:	bl	11068 <strtol@plt>
   112b0:	mov	r8, r0
   112b4:	mov	r2, #10
   112b8:	mov	r0, r6
   112bc:	mov	r1, r4
   112c0:	bl	11068 <strtol@plt>
   112c4:	mov	r6, r0
   112c8:	mov	r1, r4
   112cc:	mov	r0, r9
   112d0:	mov	r2, #10
   112d4:	bl	11068 <strtol@plt>
   112d8:	ldr	r3, [pc, #672]	; 11580 <__errno_location@plt+0x3bc>
   112dc:	cmp	r5, #3
   112e0:	add	r3, pc, r3
   112e4:	str	r0, [r3, #12]
   112e8:	ble	11320 <__errno_location@plt+0x15c>
   112ec:	mov	r4, #3
   112f0:	b	11300 <__errno_location@plt+0x13c>
   112f4:	add	r4, r4, #1
   112f8:	cmp	r4, r5
   112fc:	beq	11320 <__errno_location@plt+0x15c>
   11300:	cmp	r4, r8
   11304:	cmpne	r4, r6
   11308:	beq	112f4 <__errno_location@plt+0x130>
   1130c:	mov	r0, r4
   11310:	add	r4, r4, #1
   11314:	bl	110bc <close@plt>
   11318:	cmp	r4, r5
   1131c:	bne	11300 <__errno_location@plt+0x13c>
   11320:	ldr	r0, [pc, #604]	; 11584 <__errno_location@plt+0x3c0>
   11324:	mov	r1, #2
   11328:	add	r0, pc, r0
   1132c:	bl	10eac <open@plt>
   11330:	subs	r4, r0, #0
   11334:	blt	11364 <__errno_location@plt+0x1a0>
   11338:	cmp	r8, #0
   1133c:	cmpne	r6, #0
   11340:	bne	11548 <__errno_location@plt+0x384>
   11344:	cmp	r8, #1
   11348:	cmpne	r6, #1
   1134c:	bne	11538 <__errno_location@plt+0x374>
   11350:	cmp	r8, #2
   11354:	cmpne	r6, #2
   11358:	bne	11528 <__errno_location@plt+0x364>
   1135c:	cmp	r4, #2
   11360:	bgt	1151c <__errno_location@plt+0x358>
   11364:	mov	r4, #0
   11368:	add	sl, sp, #24
   1136c:	ldr	r9, [pc, #532]	; 11588 <__errno_location@plt+0x3c4>
   11370:	mov	fp, #1
   11374:	mov	r0, sl
   11378:	str	fp, [sp, #20]
   1137c:	str	r4, [sp, #152]	; 0x98
   11380:	bl	10eb8 <sigemptyset@plt>
   11384:	mov	r1, #13
   11388:	mov	r0, sl
   1138c:	bl	11074 <sigaddset@plt>
   11390:	mov	r1, #14
   11394:	mov	r0, sl
   11398:	bl	11074 <sigaddset@plt>
   1139c:	mov	r1, #5
   113a0:	mov	r0, sl
   113a4:	bl	11074 <sigaddset@plt>
   113a8:	mov	r1, #28
   113ac:	mov	r0, sl
   113b0:	bl	11074 <sigaddset@plt>
   113b4:	mov	r1, r7
   113b8:	mov	r2, r4
   113bc:	mov	r0, #28
   113c0:	add	r9, pc, r9
   113c4:	bl	110f8 <sigaction@plt>
   113c8:	mov	r1, r7
   113cc:	mov	r2, r4
   113d0:	mov	r0, #13
   113d4:	bl	110f8 <sigaction@plt>
   113d8:	mov	r1, r7
   113dc:	mov	r2, r4
   113e0:	mov	r0, #5
   113e4:	bl	110f8 <sigaction@plt>
   113e8:	ldr	r3, [pc, #412]	; 1158c <__errno_location@plt+0x3c8>
   113ec:	mov	r1, r7
   113f0:	mov	r2, r4
   113f4:	mov	r0, #14
   113f8:	mov	r7, #1024	; 0x400
   113fc:	add	r3, pc, r3
   11400:	str	r3, [sp, #20]
   11404:	bl	110f8 <sigaction@plt>
   11408:	mov	ip, #4096	; 0x1000
   1140c:	mov	r3, r4
   11410:	mov	r2, r4
   11414:	mov	r1, r4
   11418:	mov	r0, r4
   1141c:	stm	sp, {r5, r7, ip}
   11420:	bl	11110 <rb_lib_init@plt>
   11424:	mov	r0, r7
   11428:	bl	10ff0 <rb_init_rawbuffers@plt>
   1142c:	mov	r1, fp
   11430:	mov	r0, r4
   11434:	bl	110d4 <rb_init_prng@plt>
   11438:	bl	110ec <rb_supports_ssl@plt>
   1143c:	subs	r3, r0, r4
   11440:	mov	r1, #48	; 0x30
   11444:	movne	r3, #1
   11448:	mov	r0, fp
   1144c:	strb	r3, [r9, #20]
   11450:	bl	10f9c <calloc@plt>
   11454:	subs	r5, r0, #0
   11458:	beq	11560 <__errno_location@plt+0x39c>
   1145c:	ldr	r2, [pc, #300]	; 11590 <__errno_location@plt+0x3cc>
   11460:	mov	r1, #4
   11464:	mov	r0, r8
   11468:	str	r5, [r9, #24]
   1146c:	add	r2, pc, r2
   11470:	bl	11128 <rb_open@plt>
   11474:	ldr	r2, [pc, #280]	; 11594 <__errno_location@plt+0x3d0>
   11478:	mov	r1, #8
   1147c:	str	r0, [r5, #16]
   11480:	mov	r0, r6
   11484:	ldr	r5, [r9, #24]
   11488:	add	r2, pc, r2
   1148c:	bl	11128 <rb_open@plt>
   11490:	ldr	r3, [r9, #24]
   11494:	str	r0, [r5, #20]
   11498:	ldr	r0, [r3, #16]
   1149c:	bl	10fa8 <rb_set_nb@plt>
   114a0:	ldr	r3, [r9, #24]
   114a4:	ldr	r0, [r3, #20]
   114a8:	bl	10fa8 <rb_set_nb@plt>
   114ac:	ldr	r1, [pc, #228]	; 11598 <__errno_location@plt+0x3d4>
   114b0:	mov	r3, #10
   114b4:	mov	r2, r4
   114b8:	ldr	r0, [pc, #220]	; 1159c <__errno_location@plt+0x3d8>
   114bc:	add	r1, pc, r1
   114c0:	add	r0, pc, r0
   114c4:	bl	10ef4 <rb_event_addish@plt>
   114c8:	ldr	r1, [pc, #208]	; 115a0 <__errno_location@plt+0x3dc>
   114cc:	mov	r2, r4
   114d0:	mov	r3, #10
   114d4:	ldr	r0, [pc, #200]	; 115a4 <__errno_location@plt+0x3e0>
   114d8:	add	r1, pc, r1
   114dc:	add	r0, pc, r0
   114e0:	bl	11164 <rb_event_add@plt>
   114e4:	ldr	r3, [r9, #24]
   114e8:	mov	r1, r4
   114ec:	ldr	r0, [r3, #20]
   114f0:	bl	1175c <__errno_location@plt+0x598>
   114f4:	ldr	r1, [r9, #24]
   114f8:	ldr	r0, [r1, #16]
   114fc:	bl	12d58 <__errno_location@plt+0x1b94>
   11500:	ldr	r0, [r9, #24]
   11504:	bl	11db8 <__errno_location@plt+0xbf4>
   11508:	ldrb	r1, [r9, #20]
   1150c:	cmp	r1, #0
   11510:	beq	11554 <__errno_location@plt+0x390>
   11514:	mov	r0, #0
   11518:	bl	11008 <rb_lib_loop@plt>
   1151c:	mov	r0, r4
   11520:	bl	110bc <close@plt>
   11524:	b	11364 <__errno_location@plt+0x1a0>
   11528:	mov	r1, #2
   1152c:	mov	r0, r4
   11530:	bl	11158 <dup2@plt>
   11534:	b	1135c <__errno_location@plt+0x198>
   11538:	mov	r1, #1
   1153c:	mov	r0, r4
   11540:	bl	11158 <dup2@plt>
   11544:	b	11350 <__errno_location@plt+0x18c>
   11548:	mov	r1, #0
   1154c:	bl	11158 <dup2@plt>
   11550:	b	11344 <__errno_location@plt+0x180>
   11554:	ldr	r0, [r9, #24]
   11558:	bl	12c5c <__errno_location@plt+0x1a98>
   1155c:	b	11514 <__errno_location@plt+0x350>
   11560:	bl	110e0 <rb_outofmemory@plt>
   11564:	andeq	r2, r1, ip, ror #27
   11568:	andeq	r2, r0, r8, lsr r6
   1156c:	andeq	r2, r0, r0, lsr r6
   11570:	andeq	r2, r0, ip, lsr #12
   11574:	andeq	r0, r0, ip, lsl r1
   11578:	strdeq	r2, [r0], -r4
   1157c:	andeq	r2, r0, ip, lsl #12
   11580:	andeq	r2, r1, r4, asr #28
   11584:	andeq	r2, r0, r8, lsr #11
   11588:	andeq	r2, r1, r4, ror #26
   1158c:	muleq	r0, r4, r2
   11590:	andeq	r2, r0, r0, ror r4
   11594:	andeq	r2, r0, r8, ror #8
   11598:	andeq	r0, r0, r8, ror #3
   1159c:	andeq	r2, r0, ip, lsr r4
   115a0:	andeq	r0, r0, r4, asr #24
   115a4:	andeq	r2, r0, r4, lsr r4
   115a8:	mov	fp, #0
   115ac:	mov	lr, #0
   115b0:	pop	{r1}		; (ldr r1, [sp], #4)
   115b4:	mov	r2, sp
   115b8:	push	{r2}		; (str r2, [sp, #-4]!)
   115bc:	push	{r0}		; (str r0, [sp, #-4]!)
   115c0:	ldr	ip, [pc, #16]	; 115d8 <__errno_location@plt+0x414>
   115c4:	push	{ip}		; (str ip, [sp, #-4]!)
   115c8:	ldr	r0, [pc, #12]	; 115dc <__errno_location@plt+0x418>
   115cc:	ldr	r3, [pc, #12]	; 115e0 <__errno_location@plt+0x41c>
   115d0:	bl	10f24 <__libc_start_main@plt>
   115d4:	bl	10ee8 <abort@plt>
   115d8:	andeq	r3, r1, r0, ror #12
   115dc:	ldrdeq	r1, [r1], -r0
   115e0:	andeq	r3, r1, r0, lsl #12
   115e4:	ldr	r3, [pc, #20]	; 11600 <__errno_location@plt+0x43c>
   115e8:	ldr	r2, [pc, #20]	; 11604 <__errno_location@plt+0x440>
   115ec:	add	r3, pc, r3
   115f0:	ldr	r2, [r3, r2]
   115f4:	cmp	r2, #0
   115f8:	bxeq	lr
   115fc:	b	10f3c <__gmon_start__@plt>
   11600:	andeq	r2, r1, ip, lsl #20
   11604:	andeq	r0, r0, r8, lsl r1
   11608:	ldr	r0, [pc, #24]	; 11628 <__errno_location@plt+0x464>
   1160c:	ldr	r3, [pc, #24]	; 1162c <__errno_location@plt+0x468>
   11610:	cmp	r3, r0
   11614:	bxeq	lr
   11618:	ldr	r3, [pc, #16]	; 11630 <__errno_location@plt+0x46c>
   1161c:	cmp	r3, #0
   11620:	bxeq	lr
   11624:	bx	r3
   11628:	andeq	r4, r2, r8, lsr #2
   1162c:	andeq	r4, r2, r8, lsr #2
   11630:	andeq	r0, r0, r0
   11634:	ldr	r0, [pc, #36]	; 11660 <__errno_location@plt+0x49c>
   11638:	ldr	r1, [pc, #36]	; 11664 <__errno_location@plt+0x4a0>
   1163c:	sub	r1, r1, r0
   11640:	asr	r1, r1, #2
   11644:	add	r1, r1, r1, lsr #31
   11648:	asrs	r1, r1, #1
   1164c:	bxeq	lr
   11650:	ldr	r3, [pc, #16]	; 11668 <__errno_location@plt+0x4a4>
   11654:	cmp	r3, #0
   11658:	bxeq	lr
   1165c:	bx	r3
   11660:	andeq	r4, r2, r8, lsr #2
   11664:	andeq	r4, r2, r8, lsr #2
   11668:	andeq	r0, r0, r0
   1166c:	push	{r4, lr}
   11670:	ldr	r4, [pc, #24]	; 11690 <__errno_location@plt+0x4cc>
   11674:	ldrb	r3, [r4]
   11678:	cmp	r3, #0
   1167c:	popne	{r4, pc}
   11680:	bl	11608 <__errno_location@plt+0x444>
   11684:	mov	r3, #1
   11688:	strb	r3, [r4]
   1168c:	pop	{r4, pc}
   11690:	andeq	r4, r2, r8, lsr #2
   11694:	b	11634 <__errno_location@plt+0x470>
   11698:	bx	lr
   1169c:	subs	r0, r1, #0
   116a0:	beq	116a8 <__errno_location@plt+0x4e4>
   116a4:	b	10ffc <free@plt>
   116a8:	bx	lr
   116ac:	ldr	r3, [pc, #160]	; 11754 <__errno_location@plt+0x590>
   116b0:	strd	r4, [sp, #-16]!
   116b4:	add	r3, pc, r3
   116b8:	ldr	r3, [r3]
   116bc:	str	r6, [sp, #8]
   116c0:	str	lr, [sp, #12]
   116c4:	cmp	r3, #0
   116c8:	beq	1170c <__errno_location@plt+0x548>
   116cc:	ldr	r5, [r3, #8]
   116d0:	ldr	r4, [r3]
   116d4:	ldr	r0, [r4, #16]
   116d8:	bl	110a4 <rb_free_rawbuffer@plt>
   116dc:	ldr	r0, [r4, #20]
   116e0:	bl	110a4 <rb_free_rawbuffer@plt>
   116e4:	ldrb	r3, [r4, #72]	; 0x48
   116e8:	tst	r3, #2
   116ec:	bne	11730 <__errno_location@plt+0x56c>
   116f0:	mov	r0, r4
   116f4:	bl	10ffc <free@plt>
   116f8:	cmp	r5, #0
   116fc:	mov	r3, r5
   11700:	beq	1170c <__errno_location@plt+0x548>
   11704:	ldr	r5, [r5, #8]
   11708:	b	116d0 <__errno_location@plt+0x50c>
   1170c:	ldr	r3, [pc, #68]	; 11758 <__errno_location@plt+0x594>
   11710:	mov	r2, #0
   11714:	ldrd	r4, [sp]
   11718:	ldr	r6, [sp, #8]
   1171c:	add	sp, sp, #12
   11720:	add	r3, pc, r3
   11724:	str	r2, [r3]
   11728:	str	r2, [r3, #4]
   1172c:	pop	{pc}		; (ldr pc, [sp], #4)
   11730:	ldr	r6, [r4, #76]	; 0x4c
   11734:	mov	r0, r6
   11738:	bl	10f18 <inflateEnd@plt>
   1173c:	add	r0, r6, #56	; 0x38
   11740:	bl	11014 <deflateEnd@plt>
   11744:	subs	r0, r6, #0
   11748:	beq	116f0 <__errno_location@plt+0x52c>
   1174c:	bl	10ffc <free@plt>
   11750:	b	116f0 <__errno_location@plt+0x52c>
   11754:	andeq	r2, r1, r0, ror sl
   11758:	andeq	r2, r1, r4, lsl #20
   1175c:	strd	r4, [sp, #-12]!
   11760:	mov	r4, r0
   11764:	str	lr, [sp, #8]
   11768:	sub	sp, sp, #16384	; 0x4000
   1176c:	sub	sp, sp, #4
   11770:	mov	r5, sp
   11774:	mov	r2, #16384	; 0x4000
   11778:	mov	r1, r5
   1177c:	mov	r0, r4
   11780:	bl	11020 <rb_read@plt>
   11784:	cmp	r0, #0
   11788:	bgt	11774 <__errno_location@plt+0x5b0>
   1178c:	beq	117a4 <__errno_location@plt+0x5e0>
   11790:	bl	111c4 <__errno_location@plt>
   11794:	ldr	r0, [r0]
   11798:	bl	10f00 <rb_ignore_errno@plt>
   1179c:	cmp	r0, #0
   117a0:	bne	117ac <__errno_location@plt+0x5e8>
   117a4:	mov	r0, #0
   117a8:	bl	111b8 <exit@plt>
   117ac:	ldr	r2, [pc, #36]	; 117d8 <__errno_location@plt+0x614>
   117b0:	mov	r0, r4
   117b4:	mov	r3, #0
   117b8:	mov	r1, #1
   117bc:	add	r2, pc, r2
   117c0:	bl	10f30 <rb_setselect@plt>
   117c4:	add	sp, sp, #16384	; 0x4000
   117c8:	add	sp, sp, #4
   117cc:	ldrd	r4, [sp]
   117d0:	add	sp, sp, #8
   117d4:	pop	{pc}		; (ldr pc, [sp], #4)
   117d8:			; <UNDEFINED> instruction: 0xffffff98
   117dc:	ldr	r3, [pc, #32]	; 11804 <__errno_location@plt+0x640>
   117e0:	mov	r2, #236	; 0xec
   117e4:	str	r4, [sp, #-8]!
   117e8:	ldr	r1, [pc, #24]	; 11808 <__errno_location@plt+0x644>
   117ec:	str	lr, [sp, #4]
   117f0:	ldr	r0, [pc, #20]	; 1180c <__errno_location@plt+0x648>
   117f4:	add	r3, pc, r3
   117f8:	add	r1, pc, r1
   117fc:	add	r0, pc, r0
   11800:	bl	10fc0 <__assert_fail@plt>
   11804:	andeq	r1, r0, r4, ror lr
   11808:	muleq	r0, ip, lr
   1180c:			; <UNDEFINED> instruction: 0x00001eb4
   11810:	ldr	r3, [pc, #36]	; 1183c <__errno_location@plt+0x678>
   11814:	mov	r2, #145	; 0x91
   11818:	str	r4, [sp, #-8]!
   1181c:	ldr	r1, [pc, #28]	; 11840 <__errno_location@plt+0x67c>
   11820:	str	lr, [sp, #4]
   11824:	ldr	r0, [pc, #24]	; 11844 <__errno_location@plt+0x680>
   11828:	add	r3, pc, r3
   1182c:	add	r3, r3, #16
   11830:	add	r1, pc, r1
   11834:	add	r0, pc, r0
   11838:	bl	10fc0 <__assert_fail@plt>
   1183c:	andeq	r1, r0, r0, asr #28
   11840:	andeq	r1, r0, r4, ror #28
   11844:	andeq	r1, r0, ip, ror lr
   11848:	ldr	r3, [pc, #36]	; 11874 <__errno_location@plt+0x6b0>
   1184c:	mov	r2, #213	; 0xd5
   11850:	str	r4, [sp, #-8]!
   11854:	ldr	r1, [pc, #28]	; 11878 <__errno_location@plt+0x6b4>
   11858:	str	lr, [sp, #4]
   1185c:	ldr	r0, [pc, #24]	; 1187c <__errno_location@plt+0x6b8>
   11860:	add	r3, pc, r3
   11864:	add	r3, r3, #28
   11868:	add	r1, pc, r1
   1186c:	add	r0, pc, r0
   11870:	bl	10fc0 <__assert_fail@plt>
   11874:	andeq	r1, r0, r8, lsl #28
   11878:	andeq	r1, r0, ip, lsr #28
   1187c:	andeq	r1, r0, r4, asr lr
   11880:	mul	r1, r2, r1
   11884:	mov	r0, #1
   11888:	str	r4, [sp, #-8]!
   1188c:	str	lr, [sp, #4]
   11890:	bl	10f9c <calloc@plt>
   11894:	cmp	r0, #0
   11898:	beq	118a8 <__errno_location@plt+0x6e4>
   1189c:	ldr	r4, [sp]
   118a0:	add	sp, sp, #4
   118a4:	pop	{pc}		; (ldr pc, [sp], #4)
   118a8:	bl	110e0 <rb_outofmemory@plt>
   118ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   118b0:	mov	r5, r2
   118b4:	strd	r6, [sp, #8]
   118b8:	mov	r7, r0
   118bc:	mov	r6, r1
   118c0:	mov	r0, #1
   118c4:	mov	r1, #80	; 0x50
   118c8:	str	r8, [sp, #16]
   118cc:	str	lr, [sp, #20]
   118d0:	bl	10f9c <calloc@plt>
   118d4:	subs	r4, r0, #0
   118d8:	beq	11930 <__errno_location@plt+0x76c>
   118dc:	str	r7, [r4, #12]
   118e0:	bl	1111c <rb_new_rawbuffer@plt>
   118e4:	str	r0, [r4, #16]
   118e8:	bl	1111c <rb_new_rawbuffer@plt>
   118ec:	mvn	r2, #0
   118f0:	mov	r3, #0
   118f4:	str	r0, [r4, #20]
   118f8:	mov	r0, r6
   118fc:	str	r2, [r4, #24]
   11900:	str	r6, [r4, #28]
   11904:	str	r5, [r4, #32]
   11908:	str	r3, [r4, #76]	; 0x4c
   1190c:	bl	10fa8 <rb_set_nb@plt>
   11910:	mov	r0, r5
   11914:	bl	10fa8 <rb_set_nb@plt>
   11918:	mov	r0, r4
   1191c:	ldrd	r4, [sp]
   11920:	ldrd	r6, [sp, #8]
   11924:	ldr	r8, [sp, #16]
   11928:	add	sp, sp, #20
   1192c:	pop	{pc}		; (ldr pc, [sp], #4)
   11930:	bl	110e0 <rb_outofmemory@plt>
   11934:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11938:	strd	r6, [sp, #8]
   1193c:	ldr	r7, [r1, #36]	; 0x24
   11940:	strd	r8, [sp, #16]
   11944:	mov	r8, r1
   11948:	str	sl, [sp, #24]
   1194c:	str	lr, [sp, #28]
   11950:	sub	sp, sp, #8
   11954:	cmp	r7, #0
   11958:	beq	119cc <__errno_location@plt+0x808>
   1195c:	ldr	r9, [pc, #328]	; 11aac <__errno_location@plt+0x8e8>
   11960:	mov	sl, #0
   11964:	ldr	r6, [r7, #8]
   11968:	add	r9, pc, r9
   1196c:	ldr	r4, [r7]
   11970:	ldr	ip, [r9, #12]
   11974:	ldr	r0, [r8, #16]
   11978:	add	r5, r4, #20
   1197c:	ldr	r3, [r4, #12]
   11980:	mov	r1, r5
   11984:	ldr	r2, [r4, #36]	; 0x24
   11988:	str	ip, [sp, #4]
   1198c:	ldr	ip, [r4, #16]
   11990:	str	ip, [sp]
   11994:	bl	10f54 <rb_send_fd_buf@plt>
   11998:	cmp	r0, #0
   1199c:	bgt	119f4 <__errno_location@plt+0x830>
   119a0:	beq	11a70 <__errno_location@plt+0x8ac>
   119a4:	bl	111c4 <__errno_location@plt>
   119a8:	ldr	r0, [r0]
   119ac:	bl	10f00 <rb_ignore_errno@plt>
   119b0:	cmp	r0, #0
   119b4:	beq	11a70 <__errno_location@plt+0x8ac>
   119b8:	cmp	r6, #0
   119bc:	beq	119cc <__errno_location@plt+0x808>
   119c0:	mov	r7, r6
   119c4:	ldr	r6, [r6, #8]
   119c8:	b	1196c <__errno_location@plt+0x7a8>
   119cc:	ldr	r3, [r8, #44]	; 0x2c
   119d0:	cmp	r3, #0
   119d4:	bne	11a78 <__errno_location@plt+0x8b4>
   119d8:	add	sp, sp, #8
   119dc:	ldrd	r4, [sp]
   119e0:	ldrd	r6, [sp, #8]
   119e4:	ldrd	r8, [sp, #16]
   119e8:	ldr	sl, [sp, #24]
   119ec:	add	sp, sp, #28
   119f0:	pop	{pc}		; (ldr pc, [sp], #4)
   119f4:	ldr	r3, [r7, #4]
   119f8:	ldr	r2, [r7, #8]
   119fc:	cmp	r2, #0
   11a00:	strne	r3, [r2, #4]
   11a04:	ldrne	r3, [r7, #4]
   11a08:	streq	r3, [r8, #40]	; 0x28
   11a0c:	cmp	r3, #0
   11a10:	strne	r2, [r3, #8]
   11a14:	ldr	r3, [r8, #44]	; 0x2c
   11a18:	streq	r2, [r8, #36]	; 0x24
   11a1c:	ldr	r2, [r4, #36]	; 0x24
   11a20:	str	sl, [r7, #4]
   11a24:	str	sl, [r7, #8]
   11a28:	sub	r3, r3, #1
   11a2c:	cmp	r2, #0
   11a30:	str	r3, [r8, #44]	; 0x2c
   11a34:	movgt	r7, #0
   11a38:	ble	11a54 <__errno_location@plt+0x890>
   11a3c:	ldr	r0, [r5], #4
   11a40:	add	r7, r7, #1
   11a44:	bl	1105c <rb_close@plt>
   11a48:	ldr	r3, [r4, #36]	; 0x24
   11a4c:	cmp	r3, r7
   11a50:	bgt	11a3c <__errno_location@plt+0x878>
   11a54:	ldr	r0, [r4, #12]
   11a58:	cmp	r0, #0
   11a5c:	beq	11a64 <__errno_location@plt+0x8a0>
   11a60:	bl	10ffc <free@plt>
   11a64:	mov	r0, r4
   11a68:	bl	10ffc <free@plt>
   11a6c:	b	119b8 <__errno_location@plt+0x7f4>
   11a70:	mov	r0, #0
   11a74:	bl	111b8 <exit@plt>
   11a78:	ldr	r2, [pc, #48]	; 11ab0 <__errno_location@plt+0x8ec>
   11a7c:	mov	r3, r8
   11a80:	mov	r1, #2
   11a84:	ldr	r0, [r8, #16]
   11a88:	add	r2, pc, r2
   11a8c:	add	sp, sp, #8
   11a90:	ldrd	r4, [sp]
   11a94:	ldrd	r6, [sp, #8]
   11a98:	ldrd	r8, [sp, #16]
   11a9c:	ldr	sl, [sp, #24]
   11aa0:	ldr	lr, [sp, #28]
   11aa4:	add	sp, sp, #32
   11aa8:	b	10f30 <rb_setselect@plt>
   11aac:			; <UNDEFINED> instruction: 0x000127bc
   11ab0:			; <UNDEFINED> instruction: 0xfffffea4
   11ab4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ab8:	mov	r5, r0
   11abc:	mov	r0, #1
   11ac0:	strd	r6, [sp, #8]
   11ac4:	mov	r7, r1
   11ac8:	mov	r1, #40	; 0x28
   11acc:	mov	r6, r2
   11ad0:	str	r8, [sp, #16]
   11ad4:	str	lr, [sp, #20]
   11ad8:	bl	10f9c <calloc@plt>
   11adc:	subs	r4, r0, #0
   11ae0:	beq	11b78 <__errno_location@plt+0x9b4>
   11ae4:	mov	r1, r6
   11ae8:	mov	r0, #1
   11aec:	bl	10f9c <calloc@plt>
   11af0:	subs	r3, r0, #0
   11af4:	beq	11b78 <__errno_location@plt+0x9b4>
   11af8:	mov	r2, r6
   11afc:	mov	r1, r7
   11b00:	str	r3, [r4, #12]
   11b04:	str	r6, [r4, #16]
   11b08:	bl	11050 <memcpy@plt>
   11b0c:	mov	r2, #0
   11b10:	cmn	r5, #36	; 0x24
   11b14:	str	r2, [r4, #36]	; 0x24
   11b18:	beq	11b7c <__errno_location@plt+0x9b8>
   11b1c:	ldr	r3, [r5, #40]	; 0x28
   11b20:	str	r4, [r4]
   11b24:	cmp	r3, #0
   11b28:	str	r3, [r4, #4]
   11b2c:	str	r2, [r4, #8]
   11b30:	strne	r4, [r3, #8]
   11b34:	beq	11b68 <__errno_location@plt+0x9a4>
   11b38:	mov	r1, r5
   11b3c:	ldrd	r6, [sp, #8]
   11b40:	ldr	r3, [r5, #44]	; 0x2c
   11b44:	ldr	r8, [sp, #16]
   11b48:	ldr	r0, [r5, #16]
   11b4c:	add	r3, r3, #1
   11b50:	ldr	lr, [sp, #20]
   11b54:	str	r4, [r5, #40]	; 0x28
   11b58:	str	r3, [r5, #44]	; 0x2c
   11b5c:	ldrd	r4, [sp]
   11b60:	add	sp, sp, #24
   11b64:	b	11934 <__errno_location@plt+0x770>
   11b68:	ldr	r3, [r5, #36]	; 0x24
   11b6c:	cmp	r3, #0
   11b70:	streq	r4, [r5, #36]	; 0x24
   11b74:	b	11b38 <__errno_location@plt+0x974>
   11b78:	bl	110e0 <rb_outofmemory@plt>
   11b7c:	ldr	r3, [pc, #28]	; 11ba0 <__errno_location@plt+0x9dc>
   11b80:	mov	r2, #212	; 0xd4
   11b84:	ldr	r1, [pc, #24]	; 11ba4 <__errno_location@plt+0x9e0>
   11b88:	ldr	r0, [pc, #24]	; 11ba8 <__errno_location@plt+0x9e4>
   11b8c:	add	r3, pc, r3
   11b90:	add	r3, r3, #28
   11b94:	add	r1, pc, r1
   11b98:	add	r0, pc, r0
   11b9c:	bl	10fc0 <__assert_fail@plt>
   11ba0:	ldrdeq	r1, [r0], -ip
   11ba4:	andeq	r1, r0, r0, lsl #22
   11ba8:	andeq	r1, r0, r8, lsl fp
   11bac:	ldrb	r3, [r0, #72]	; 0x48
   11bb0:	tst	r3, #1
   11bb4:	bxeq	lr
   11bb8:	strd	r4, [sp, #-16]!
   11bbc:	mov	r4, r0
   11bc0:	ldr	r0, [r0, #28]
   11bc4:	str	r6, [sp, #8]
   11bc8:	str	lr, [sp, #12]
   11bcc:	sub	sp, sp, #768	; 0x300
   11bd0:	bl	11044 <rb_ssl_get_cipher@plt>
   11bd4:	subs	r1, r0, #0
   11bd8:	beq	11c24 <__errno_location@plt+0xa60>
   11bdc:	mov	r5, sp
   11be0:	mov	r2, #256	; 0x100
   11be4:	mov	r0, r5
   11be8:	add	r6, sp, #256	; 0x100
   11bec:	bl	10fcc <rb_strlcpy@plt>
   11bf0:	ldr	r3, [r4, #24]
   11bf4:	mov	r2, #67	; 0x43
   11bf8:	mov	r1, r5
   11bfc:	add	r0, r6, #5
   11c00:	strb	r2, [sp, #256]	; 0x100
   11c04:	str	r3, [sp, #257]	; 0x101
   11c08:	bl	11080 <strcpy@plt>
   11c0c:	mov	r0, r5
   11c10:	bl	11038 <strlen@plt>
   11c14:	add	r2, r0, #6
   11c18:	mov	r1, r6
   11c1c:	ldr	r0, [r4, #12]
   11c20:	bl	11ab4 <__errno_location@plt+0x8f0>
   11c24:	add	sp, sp, #768	; 0x300
   11c28:	ldrd	r4, [sp]
   11c2c:	ldr	r6, [sp, #8]
   11c30:	add	sp, sp, #12
   11c34:	pop	{pc}		; (ldr pc, [sp], #4)
   11c38:	strd	r4, [sp, #-16]!
   11c3c:	mov	r4, r0
   11c40:	ldr	r5, [pc, #104]	; 11cb0 <__errno_location@plt+0xaec>
   11c44:	ldr	r0, [r0, #28]
   11c48:	add	r5, pc, r5
   11c4c:	ldr	r2, [r5, #16]
   11c50:	str	r6, [sp, #8]
   11c54:	str	lr, [sp, #12]
   11c58:	sub	sp, sp, #80	; 0x50
   11c5c:	add	r1, sp, #13
   11c60:	bl	10fd8 <rb_get_ssl_certfp@plt>
   11c64:	cmp	r0, #0
   11c68:	beq	11c9c <__errno_location@plt+0xad8>
   11c6c:	ldr	ip, [r5, #16]
   11c70:	mov	r6, sp
   11c74:	mov	lr, #70	; 0x46
   11c78:	add	r2, r0, #13
   11c7c:	mov	r1, r6
   11c80:	ldr	r3, [r4, #24]
   11c84:	strb	lr, [sp]
   11c88:	str	r0, [sp, #9]
   11c8c:	ldr	r0, [r4, #12]
   11c90:	str	r3, [sp, #1]
   11c94:	str	ip, [sp, #5]
   11c98:	bl	11ab4 <__errno_location@plt+0x8f0>
   11c9c:	add	sp, sp, #80	; 0x50
   11ca0:	ldrd	r4, [sp]
   11ca4:	ldr	r6, [sp, #8]
   11ca8:	add	sp, sp, #12
   11cac:	pop	{pc}		; (ldr pc, [sp], #4)
   11cb0:	ldrdeq	r2, [r1], -ip
   11cb4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11cb8:	movw	r2, #19923	; 0x4dd3
   11cbc:	movt	r2, #4194	; 0x1062
   11cc0:	strd	r6, [sp, #8]
   11cc4:	mov	ip, #2000	; 0x7d0
   11cc8:	str	r8, [sp, #16]
   11ccc:	str	lr, [sp, #20]
   11cd0:	sub	sp, sp, #544	; 0x220
   11cd4:	ldr	lr, [r1, #1]
   11cd8:	ldr	r3, [pc, #208]	; 11db0 <__errno_location@plt+0xbec>
   11cdc:	umull	r4, r2, r2, lr
   11ce0:	add	r3, pc, r3
   11ce4:	lsr	r2, r2, #7
   11ce8:	mls	r2, ip, r2, lr
   11cec:	add	r2, r2, r2, lsl #1
   11cf0:	ldr	r2, [r3, r2, lsl #2]
   11cf4:	cmp	r2, #0
   11cf8:	bne	11d0c <__errno_location@plt+0xb48>
   11cfc:	b	11d98 <__errno_location@plt+0xbd4>
   11d00:	ldr	r2, [r2, #8]
   11d04:	cmp	r2, #0
   11d08:	beq	11d98 <__errno_location@plt+0xbd4>
   11d0c:	ldr	r4, [r2]
   11d10:	ldr	ip, [r4, #24]
   11d14:	cmp	lr, ip
   11d18:	bne	11d00 <__errno_location@plt+0xb3c>
   11d1c:	ldrb	ip, [r4, #72]	; 0x48
   11d20:	tst	ip, #8
   11d24:	bne	11d00 <__errno_location@plt+0xb3c>
   11d28:	ldrd	r6, [r4, #40]	; 0x28
   11d2c:	add	r5, sp, #32
   11d30:	add	r3, r1, #5
   11d34:	mov	r8, r0
   11d38:	mov	r1, #512	; 0x200
   11d3c:	ldr	r2, [pc, #112]	; 11db4 <__errno_location@plt+0xbf0>
   11d40:	mov	r0, r5
   11d44:	strd	r6, [sp, #24]
   11d48:	ldrd	r6, [r4, #56]	; 0x38
   11d4c:	add	r2, pc, r2
   11d50:	strd	r6, [sp, #16]
   11d54:	ldrd	r6, [r4, #48]	; 0x30
   11d58:	strd	r6, [sp, #8]
   11d5c:	ldrd	r6, [r4, #64]	; 0x40
   11d60:	strd	r6, [sp]
   11d64:	bl	11170 <snprintf@plt>
   11d68:	mov	r2, #0
   11d6c:	mov	r3, #0
   11d70:	mov	r0, r5
   11d74:	strd	r2, [r4, #40]	; 0x28
   11d78:	strd	r2, [r4, #48]	; 0x30
   11d7c:	strd	r2, [r4, #56]	; 0x38
   11d80:	strd	r2, [r4, #64]	; 0x40
   11d84:	bl	11038 <strlen@plt>
   11d88:	add	r2, r0, #1
   11d8c:	mov	r1, r5
   11d90:	mov	r0, r8
   11d94:	bl	11ab4 <__errno_location@plt+0x8f0>
   11d98:	add	sp, sp, #544	; 0x220
   11d9c:	ldrd	r4, [sp]
   11da0:	ldrd	r6, [sp, #8]
   11da4:	ldr	r8, [sp, #16]
   11da8:	add	sp, sp, #20
   11dac:	pop	{pc}		; (ldr pc, [sp], #4)
   11db0:	andeq	r2, r1, r0, ror #8
   11db4:	andeq	r1, r0, r4, lsl #19
   11db8:	strd	r4, [sp, #-12]!
   11dbc:	mov	r2, #256	; 0x100
   11dc0:	mov	r5, r0
   11dc4:	str	lr, [sp, #8]
   11dc8:	sub	sp, sp, #260	; 0x104
   11dcc:	mov	r1, #0
   11dd0:	mov	r4, sp
   11dd4:	mov	r0, r4
   11dd8:	bl	10fb4 <memset@plt>
   11ddc:	mov	r3, #86	; 0x56
   11de0:	strb	r3, [sp]
   11de4:	bl	10f0c <rb_lib_version@plt>
   11de8:	mov	r1, r0
   11dec:	mov	r2, #254	; 0xfe
   11df0:	add	r0, sp, #1
   11df4:	bl	10f6c <strncpy@plt>
   11df8:	mov	r0, r4
   11dfc:	bl	11038 <strlen@plt>
   11e00:	mov	r2, r0
   11e04:	mov	r1, r4
   11e08:	mov	r0, r5
   11e0c:	bl	11ab4 <__errno_location@plt+0x8f0>
   11e10:	add	sp, sp, #260	; 0x104
   11e14:	ldrd	r4, [sp]
   11e18:	add	sp, sp, #8
   11e1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e20:	strd	r4, [sp, #-12]!
   11e24:	subs	r4, r1, #0
   11e28:	str	lr, [sp, #8]
   11e2c:	sub	sp, sp, #16384	; 0x4000
   11e30:	sub	sp, sp, #4
   11e34:	beq	11e84 <__errno_location@plt+0xcc0>
   11e38:	mov	r5, sp
   11e3c:	mov	r2, #16384	; 0x4000
   11e40:	mov	r1, r5
   11e44:	ldr	r0, [r4, #32]
   11e48:	bl	11020 <rb_read@plt>
   11e4c:	cmp	r0, #0
   11e50:	beq	11e98 <__errno_location@plt+0xcd4>
   11e54:	bge	11e3c <__errno_location@plt+0xc78>
   11e58:	bl	111c4 <__errno_location@plt>
   11e5c:	ldr	r0, [r0]
   11e60:	bl	10f00 <rb_ignore_errno@plt>
   11e64:	cmp	r0, #0
   11e68:	beq	11e98 <__errno_location@plt+0xcd4>
   11e6c:	ldr	r2, [pc, #128]	; 11ef4 <__errno_location@plt+0xd30>
   11e70:	mov	r3, r4
   11e74:	mov	r1, #1
   11e78:	ldr	r0, [r4, #32]
   11e7c:	add	r2, pc, r2
   11e80:	bl	10f30 <rb_setselect@plt>
   11e84:	add	sp, sp, #16384	; 0x4000
   11e88:	add	sp, sp, #4
   11e8c:	ldrd	r4, [sp]
   11e90:	add	sp, sp, #8
   11e94:	pop	{pc}		; (ldr pc, [sp], #4)
   11e98:	ldr	r0, [r4, #32]
   11e9c:	bl	1105c <rb_close@plt>
   11ea0:	ldr	r2, [pc, #80]	; 11ef8 <__errno_location@plt+0xd34>
   11ea4:	mov	r3, #0
   11ea8:	str	r4, [r4]
   11eac:	str	r3, [r4, #4]
   11eb0:	add	r2, pc, r2
   11eb4:	ldr	r3, [r2]
   11eb8:	cmp	r3, #0
   11ebc:	str	r3, [r4, #8]
   11ec0:	strne	r4, [r3, #4]
   11ec4:	beq	11ee4 <__errno_location@plt+0xd20>
   11ec8:	ldr	r3, [pc, #44]	; 11efc <__errno_location@plt+0xd38>
   11ecc:	add	r3, pc, r3
   11ed0:	ldr	r2, [r3, #8]
   11ed4:	str	r4, [r3]
   11ed8:	add	r2, r2, #1
   11edc:	str	r2, [r3, #8]
   11ee0:	b	11e84 <__errno_location@plt+0xcc0>
   11ee4:	ldr	r3, [r2, #4]
   11ee8:	cmp	r3, #0
   11eec:	streq	r4, [r2, #4]
   11ef0:	b	11ec8 <__errno_location@plt+0xd04>
   11ef4:			; <UNDEFINED> instruction: 0xffffff9c
   11ef8:	andeq	r2, r1, r4, ror r2
   11efc:	andeq	r2, r1, r8, asr r2
   11f00:	push	{r2, r3}
   11f04:	strd	r4, [sp, #-12]!
   11f08:	str	lr, [sp, #8]
   11f0c:	sub	sp, sp, #396	; 0x18c
   11f10:	ldrb	r3, [r0, #72]	; 0x48
   11f14:	tst	r3, #8
   11f18:	beq	11f34 <__errno_location@plt+0xd70>
   11f1c:	add	sp, sp, #396	; 0x18c
   11f20:	ldrd	r4, [sp]
   11f24:	ldr	lr, [sp, #8]
   11f28:	add	sp, sp, #12
   11f2c:	add	sp, sp, #8
   11f30:	bx	lr
   11f34:	mov	r4, r0
   11f38:	mov	r5, r1
   11f3c:	ldr	r0, [r0, #16]
   11f40:	ldr	r1, [r4, #28]
   11f44:	bl	111a0 <rb_rawbuf_flush@plt>
   11f48:	ldr	r0, [r4, #20]
   11f4c:	ldr	r1, [r4, #32]
   11f50:	bl	111a0 <rb_rawbuf_flush@plt>
   11f54:	ldr	r0, [r4, #28]
   11f58:	bl	1105c <rb_close@plt>
   11f5c:	ldrb	r3, [r4, #72]	; 0x48
   11f60:	orr	r2, r3, #8
   11f64:	tst	r3, #64	; 0x40
   11f68:	strb	r2, [r4, #72]	; 0x48
   11f6c:	beq	1205c <__errno_location@plt+0xe98>
   11f70:	ldr	r3, [sp, #408]	; 0x198
   11f74:	eor	r5, r5, #1
   11f78:	ldr	r0, [r4, #32]
   11f7c:	cmp	r3, #0
   11f80:	andne	r5, r5, #1
   11f84:	moveq	r5, #1
   11f88:	cmp	r5, #0
   11f8c:	bne	12014 <__errno_location@plt+0xe50>
   11f90:	ldr	r2, [pc, #372]	; 1210c <__errno_location@plt+0xf48>
   11f94:	mov	r3, r4
   11f98:	mov	r1, #1
   11f9c:	add	r2, pc, r2
   11fa0:	bl	10f30 <rb_setselect@plt>
   11fa4:	mov	r3, r5
   11fa8:	mov	r2, r5
   11fac:	ldr	r0, [r4, #32]
   11fb0:	mov	r1, #2
   11fb4:	add	r5, sp, #8
   11fb8:	bl	10f30 <rb_setselect@plt>
   11fbc:	add	r1, sp, #412	; 0x19c
   11fc0:	mov	r0, r5
   11fc4:	ldr	r2, [sp, #408]	; 0x198
   11fc8:	mov	r3, r1
   11fcc:	str	r1, [sp, #4]
   11fd0:	mov	r1, #128	; 0x80
   11fd4:	bl	10f60 <vsnprintf@plt>
   11fd8:	ldr	r3, [r4, #24]
   11fdc:	mov	ip, #68	; 0x44
   11fe0:	mov	r1, r5
   11fe4:	mov	r2, #251	; 0xfb
   11fe8:	add	r0, sp, #141	; 0x8d
   11fec:	strb	ip, [sp, #136]	; 0x88
   11ff0:	str	r3, [sp, #137]	; 0x89
   11ff4:	bl	10fcc <rb_strlcpy@plt>
   11ff8:	mov	r0, r5
   11ffc:	bl	11038 <strlen@plt>
   12000:	add	r2, r0, #6
   12004:	add	r1, sp, #136	; 0x88
   12008:	ldr	r0, [r4, #12]
   1200c:	bl	11ab4 <__errno_location@plt+0x8f0>
   12010:	b	11f1c <__errno_location@plt+0xd58>
   12014:	bl	1105c <rb_close@plt>
   12018:	ldr	r2, [pc, #240]	; 12110 <__errno_location@plt+0xf4c>
   1201c:	mov	r3, #0
   12020:	str	r4, [r4]
   12024:	str	r3, [r4, #4]
   12028:	add	r2, pc, r2
   1202c:	ldr	r3, [r2]
   12030:	cmp	r3, #0
   12034:	str	r3, [r4, #8]
   12038:	strne	r4, [r3, #4]
   1203c:	beq	120cc <__errno_location@plt+0xf08>
   12040:	ldr	r3, [pc, #204]	; 12114 <__errno_location@plt+0xf50>
   12044:	add	r3, pc, r3
   12048:	ldr	r2, [r3, #8]
   1204c:	str	r4, [r3]
   12050:	add	r2, r2, #1
   12054:	str	r2, [r3, #8]
   12058:	b	11f1c <__errno_location@plt+0xd58>
   1205c:	movw	r3, #19923	; 0x4dd3
   12060:	movt	r3, #4194	; 0x1062
   12064:	ldr	r0, [r4, #8]
   12068:	mov	ip, #2000	; 0x7d0
   1206c:	ldr	r1, [r4, #24]
   12070:	cmp	r0, #0
   12074:	umull	r2, r3, r3, r1
   12078:	ldr	r2, [r4, #4]
   1207c:	lsr	r3, r3, #7
   12080:	mls	r3, ip, r3, r1
   12084:	beq	120f0 <__errno_location@plt+0xf2c>
   12088:	str	r2, [r0, #4]
   1208c:	lsl	r1, r3, #1
   12090:	ldr	r2, [r4, #4]
   12094:	cmp	r2, #0
   12098:	strne	r0, [r2, #8]
   1209c:	beq	120dc <__errno_location@plt+0xf18>
   120a0:	ldr	r2, [pc, #112]	; 12118 <__errno_location@plt+0xf54>
   120a4:	add	r1, r1, r3
   120a8:	mov	r3, #0
   120ac:	str	r3, [r4, #4]
   120b0:	str	r3, [r4, #8]
   120b4:	add	r2, pc, r2
   120b8:	add	r3, r2, r1, lsl #2
   120bc:	ldr	r2, [r3, #8]
   120c0:	sub	r2, r2, #1
   120c4:	str	r2, [r3, #8]
   120c8:	b	11f70 <__errno_location@plt+0xdac>
   120cc:	ldr	r3, [r2, #4]
   120d0:	cmp	r3, #0
   120d4:	streq	r4, [r2, #4]
   120d8:	b	12040 <__errno_location@plt+0xe7c>
   120dc:	ldr	r2, [pc, #56]	; 1211c <__errno_location@plt+0xf58>
   120e0:	add	ip, r1, r3
   120e4:	add	r2, pc, r2
   120e8:	str	r0, [r2, ip, lsl #2]
   120ec:	b	120a0 <__errno_location@plt+0xedc>
   120f0:	ldr	ip, [pc, #40]	; 12120 <__errno_location@plt+0xf5c>
   120f4:	lsl	r1, r3, #1
   120f8:	add	lr, r1, r3
   120fc:	add	ip, pc, ip
   12100:	add	ip, ip, lr, lsl #2
   12104:	str	r2, [ip, #4]
   12108:	b	12094 <__errno_location@plt+0xed0>
   1210c:			; <UNDEFINED> instruction: 0xfffffe7c
   12110:	strdeq	r2, [r1], -ip
   12114:	andeq	r2, r1, r0, ror #1
   12118:	andeq	r2, r1, ip, lsl #1
   1211c:	andeq	r2, r1, ip, asr r0
   12120:	andeq	r2, r1, r4, asr #32
   12124:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12128:	strd	r6, [sp, #8]
   1212c:	ldr	r6, [pc, #176]	; 121e4 <__errno_location@plt+0x1020>
   12130:	str	r8, [sp, #16]
   12134:	ldr	r7, [pc, #172]	; 121e8 <__errno_location@plt+0x1024>
   12138:	str	lr, [sp, #20]
   1213c:	add	r6, pc, r6
   12140:	add	r8, r6, #23808	; 0x5d00
   12144:	add	r7, pc, r7
   12148:	add	r8, r8, #192	; 0xc0
   1214c:	ldr	r3, [r6]
   12150:	cmp	r3, #0
   12154:	beq	121b8 <__errno_location@plt+0xff4>
   12158:	ldr	r5, [r3]
   1215c:	ldr	r4, [r3, #8]
   12160:	ldrb	r3, [r5, #72]	; 0x48
   12164:	tst	r3, #1
   12168:	beq	1218c <__errno_location@plt+0xfc8>
   1216c:	ldr	r0, [r5, #28]
   12170:	bl	10f48 <rb_ssl_handshake_count@plt>
   12174:	cmp	r0, #2
   12178:	mov	r2, r7
   1217c:	mov	r1, #1
   12180:	mov	r0, r5
   12184:	bls	121d8 <__errno_location@plt+0x1014>
   12188:	bl	11f00 <__errno_location@plt+0xd3c>
   1218c:	cmp	r4, #0
   12190:	mov	r3, r4
   12194:	beq	121b8 <__errno_location@plt+0xff4>
   12198:	ldr	r5, [r3]
   1219c:	ldr	r4, [r4, #8]
   121a0:	ldrb	r3, [r5, #72]	; 0x48
   121a4:	tst	r3, #1
   121a8:	bne	1216c <__errno_location@plt+0xfa8>
   121ac:	cmp	r4, #0
   121b0:	mov	r3, r4
   121b4:	bne	12198 <__errno_location@plt+0xfd4>
   121b8:	add	r6, r6, #12
   121bc:	cmp	r6, r8
   121c0:	bne	1214c <__errno_location@plt+0xf88>
   121c4:	ldrd	r4, [sp]
   121c8:	ldrd	r6, [sp, #8]
   121cc:	ldr	r8, [sp, #16]
   121d0:	add	sp, sp, #20
   121d4:	pop	{pc}		; (ldr pc, [sp], #4)
   121d8:	ldr	r0, [r5, #28]
   121dc:	bl	1108c <rb_ssl_clear_handshake_count@plt>
   121e0:	b	1218c <__errno_location@plt+0xfc8>
   121e4:	andeq	r2, r1, r4
   121e8:	andeq	r1, r0, r8, lsr #11
   121ec:	ldrb	r3, [r1, #72]	; 0x48
   121f0:	tst	r3, #8
   121f4:	bxne	lr
   121f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   121fc:	mov	r4, r1
   12200:	mov	r5, r0
   12204:	strd	r6, [sp, #8]
   12208:	str	r8, [sp, #16]
   1220c:	str	lr, [sp, #20]
   12210:	b	12224 <__errno_location@plt+0x1060>
   12214:	ldrd	r2, [r4, #64]	; 0x40
   12218:	adds	r6, r2, r0
   1221c:	adc	r7, r3, r0, asr #31
   12220:	strd	r6, [r4, #64]	; 0x40
   12224:	mov	r1, r5
   12228:	ldr	r0, [r4, #20]
   1222c:	bl	111a0 <rb_rawbuf_flush@plt>
   12230:	cmp	r0, #0
   12234:	bgt	12214 <__errno_location@plt+0x1050>
   12238:	beq	1228c <__errno_location@plt+0x10c8>
   1223c:	bl	111c4 <__errno_location@plt>
   12240:	ldr	r0, [r0]
   12244:	bl	10f00 <rb_ignore_errno@plt>
   12248:	cmp	r0, #0
   1224c:	beq	1228c <__errno_location@plt+0x10c8>
   12250:	ldr	r0, [r4, #20]
   12254:	bl	11098 <rb_rawbuf_length@plt>
   12258:	cmp	r0, #0
   1225c:	ble	122b0 <__errno_location@plt+0x10ec>
   12260:	ldr	r2, [pc, #92]	; 122c4 <__errno_location@plt+0x1100>
   12264:	mov	r3, r4
   12268:	mov	r1, #2
   1226c:	ldr	r0, [r4, #32]
   12270:	add	r2, pc, r2
   12274:	ldrd	r4, [sp]
   12278:	ldrd	r6, [sp, #8]
   1227c:	ldr	r8, [sp, #16]
   12280:	ldr	lr, [sp, #20]
   12284:	add	sp, sp, #24
   12288:	b	10f30 <rb_setselect@plt>
   1228c:	mov	r2, #0
   12290:	mov	r0, r4
   12294:	ldrd	r4, [sp]
   12298:	mov	r1, r2
   1229c:	ldrd	r6, [sp, #8]
   122a0:	ldr	r8, [sp, #16]
   122a4:	ldr	lr, [sp, #20]
   122a8:	add	sp, sp, #24
   122ac:	b	11f00 <__errno_location@plt+0xd3c>
   122b0:	mov	r3, #0
   122b4:	mov	r1, #2
   122b8:	ldr	r0, [r4, #32]
   122bc:	mov	r2, r3
   122c0:	b	12274 <__errno_location@plt+0x10b0>
   122c4:			; <UNDEFINED> instruction: 0xffffff74
   122c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   122cc:	mov	r4, r0
   122d0:	mov	r3, r2
   122d4:	ldr	r0, [r0, #76]	; 0x4c
   122d8:	mov	r2, #16384	; 0x4000
   122dc:	strd	r6, [sp, #8]
   122e0:	mov	r6, r1
   122e4:	mov	r7, r2
   122e8:	str	r8, [sp, #16]
   122ec:	str	lr, [sp, #20]
   122f0:	sub	sp, sp, #16384	; 0x4000
   122f4:	mov	r5, sp
   122f8:	stm	r0, {r1, r3}
   122fc:	str	r5, [r0, #12]
   12300:	str	r2, [r0, #16]
   12304:	mov	r1, #0
   12308:	cmp	r3, r1
   1230c:	beq	12348 <__errno_location@plt+0x1184>
   12310:	bl	10fe4 <inflate@plt>
   12314:	subs	r8, r0, #0
   12318:	bne	12360 <__errno_location@plt+0x119c>
   1231c:	ldr	r0, [r4, #76]	; 0x4c
   12320:	ldr	r3, [r0, #4]
   12324:	ldr	r2, [r0, #16]
   12328:	cmp	r3, #0
   1232c:	rsb	r2, r2, #16384	; 0x4000
   12330:	bne	12394 <__errno_location@plt+0x11d0>
   12334:	cmp	r2, #0
   12338:	beq	12348 <__errno_location@plt+0x1184>
   1233c:	ldrb	r3, [r4, #72]	; 0x48
   12340:	tst	r3, #8
   12344:	beq	123e4 <__errno_location@plt+0x1220>
   12348:	add	sp, sp, #16384	; 0x4000
   1234c:	ldrd	r4, [sp]
   12350:	ldrd	r6, [sp, #8]
   12354:	ldr	r8, [sp, #16]
   12358:	add	sp, sp, #20
   1235c:	pop	{pc}		; (ldr pc, [sp], #4)
   12360:	ldr	r0, [pc, #140]	; 123f4 <__errno_location@plt+0x1230>
   12364:	mov	r1, r6
   12368:	mov	r2, #6
   1236c:	add	r0, pc, r0
   12370:	bl	1117c <strncmp@plt>
   12374:	cmp	r0, #0
   12378:	bne	123c0 <__errno_location@plt+0x11fc>
   1237c:	ldr	r2, [pc, #116]	; 123f8 <__errno_location@plt+0x1234>
   12380:	mov	r0, r4
   12384:	mov	r1, #1
   12388:	add	r2, pc, r2
   1238c:	bl	11f00 <__errno_location@plt+0xd3c>
   12390:	b	12348 <__errno_location@plt+0x1184>
   12394:	ldrb	ip, [r4, #72]	; 0x48
   12398:	mov	r1, r5
   1239c:	tst	ip, #8
   123a0:	bne	123b4 <__errno_location@plt+0x11f0>
   123a4:	ldr	r0, [r4, #20]
   123a8:	bl	11194 <rb_rawbuf_append@plt>
   123ac:	ldr	r0, [r4, #76]	; 0x4c
   123b0:	ldr	r3, [r0, #4]
   123b4:	str	r5, [r0, #12]
   123b8:	str	r7, [r0, #16]
   123bc:	b	12304 <__errno_location@plt+0x1140>
   123c0:	mov	r0, r8
   123c4:	bl	10edc <zError@plt>
   123c8:	ldr	r2, [pc, #44]	; 123fc <__errno_location@plt+0x1238>
   123cc:	mov	r3, r0
   123d0:	mov	r1, #1
   123d4:	mov	r0, r4
   123d8:	add	r2, pc, r2
   123dc:	bl	11f00 <__errno_location@plt+0xd3c>
   123e0:	b	12348 <__errno_location@plt+0x1184>
   123e4:	mov	r1, r5
   123e8:	ldr	r0, [r4, #20]
   123ec:	bl	11194 <rb_rawbuf_append@plt>
   123f0:	b	12348 <__errno_location@plt+0x1184>
   123f4:	muleq	r0, r4, r3
   123f8:	andeq	r1, r0, r0, lsl #7
   123fc:	andeq	r1, r0, ip, asr #6
   12400:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12404:	mov	r5, r0
   12408:	strd	r6, [sp, #8]
   1240c:	strd	r8, [sp, #16]
   12410:	str	lr, [sp, #24]
   12414:	sub	sp, sp, #16384	; 0x4000
   12418:	ldrb	r3, [r0, #72]	; 0x48
   1241c:	sub	sp, sp, #4
   12420:	mov	r6, sp
   12424:	and	r3, r3, #8
   12428:	ands	r4, r3, #255	; 0xff
   1242c:	mov	r1, r6
   12430:	mov	r2, #16384	; 0x4000
   12434:	bne	12498 <__errno_location@plt+0x12d4>
   12438:	ldr	r0, [r5, #28]
   1243c:	bl	11020 <rb_read@plt>
   12440:	subs	r7, r0, #0
   12444:	beq	1258c <__errno_location@plt+0x13c8>
   12448:	blt	124d0 <__errno_location@plt+0x130c>
   1244c:	ldrd	r0, [r5, #48]	; 0x30
   12450:	ldrb	r3, [r5, #72]	; 0x48
   12454:	adds	r8, r0, r7
   12458:	adc	r9, r1, r7, asr #31
   1245c:	tst	r3, #2
   12460:	strd	r8, [r5, #48]	; 0x30
   12464:	bne	124b4 <__errno_location@plt+0x12f0>
   12468:	ands	r3, r3, #8
   1246c:	mov	r2, r7
   12470:	mov	r1, r6
   12474:	bne	12428 <__errno_location@plt+0x1264>
   12478:	ldr	r0, [r5, #20]
   1247c:	bl	11194 <rb_rawbuf_append@plt>
   12480:	ldrb	r3, [r5, #72]	; 0x48
   12484:	mov	r1, r6
   12488:	mov	r2, #16384	; 0x4000
   1248c:	and	r3, r3, #8
   12490:	ands	r4, r3, #255	; 0xff
   12494:	beq	12438 <__errno_location@plt+0x1274>
   12498:	add	sp, sp, #16384	; 0x4000
   1249c:	add	sp, sp, #4
   124a0:	ldrd	r4, [sp]
   124a4:	ldrd	r6, [sp, #8]
   124a8:	ldrd	r8, [sp, #16]
   124ac:	add	sp, sp, #24
   124b0:	pop	{pc}		; (ldr pc, [sp], #4)
   124b4:	mov	r2, r7
   124b8:	mov	r1, r6
   124bc:	mov	r0, r5
   124c0:	bl	122c8 <__errno_location@plt+0x1104>
   124c4:	ldrb	r3, [r5, #72]	; 0x48
   124c8:	and	r3, r3, #8
   124cc:	b	12428 <__errno_location@plt+0x1264>
   124d0:	bl	111c4 <__errno_location@plt>
   124d4:	mov	r6, r0
   124d8:	ldr	r0, [r0]
   124dc:	bl	10f00 <rb_ignore_errno@plt>
   124e0:	cmp	r0, #0
   124e4:	beq	12518 <__errno_location@plt+0x1354>
   124e8:	cmn	r7, #4
   124ec:	ldr	r0, [r5, #28]
   124f0:	beq	12554 <__errno_location@plt+0x1390>
   124f4:	ldr	r2, [pc, #192]	; 125bc <__errno_location@plt+0x13f8>
   124f8:	mov	r3, r5
   124fc:	mov	r1, #1
   12500:	add	r2, pc, r2
   12504:	bl	10f30 <rb_setselect@plt>
   12508:	mov	r1, r5
   1250c:	ldr	r0, [r5, #32]
   12510:	bl	121ec <__errno_location@plt+0x1028>
   12514:	b	12498 <__errno_location@plt+0x12d4>
   12518:	ldrb	r3, [r5, #72]	; 0x48
   1251c:	cmn	r7, #2
   12520:	movne	r7, #0
   12524:	moveq	r7, #1
   12528:	tst	r3, r7
   1252c:	bne	125ac <__errno_location@plt+0x13e8>
   12530:	ldr	r0, [r6]
   12534:	bl	10ec4 <strerror@plt>
   12538:	mov	r3, r0
   1253c:	ldr	r2, [pc, #124]	; 125c0 <__errno_location@plt+0x13fc>
   12540:	mov	r0, r5
   12544:	mov	r1, #1
   12548:	add	r2, pc, r2
   1254c:	bl	11f00 <__errno_location@plt+0xd3c>
   12550:	b	12498 <__errno_location@plt+0x12d4>
   12554:	mov	r3, r4
   12558:	mov	r2, r4
   1255c:	mov	r1, #1
   12560:	bl	10f30 <rb_setselect@plt>
   12564:	ldr	r2, [pc, #88]	; 125c4 <__errno_location@plt+0x1400>
   12568:	mov	r3, r5
   1256c:	mov	r1, #2
   12570:	ldr	r0, [r5, #28]
   12574:	add	r2, pc, r2
   12578:	bl	10f30 <rb_setselect@plt>
   1257c:	ldrb	r3, [r5, #72]	; 0x48
   12580:	orr	r3, r3, #32
   12584:	strb	r3, [r5, #72]	; 0x48
   12588:	b	12508 <__errno_location@plt+0x1344>
   1258c:	ldr	r3, [pc, #52]	; 125c8 <__errno_location@plt+0x1404>
   12590:	mov	r0, r5
   12594:	mov	r1, #1
   12598:	ldr	r2, [pc, #44]	; 125cc <__errno_location@plt+0x1408>
   1259c:	add	r3, pc, r3
   125a0:	add	r2, pc, r2
   125a4:	bl	11f00 <__errno_location@plt+0xd3c>
   125a8:	b	12498 <__errno_location@plt+0x12d4>
   125ac:	ldr	r0, [r5, #28]
   125b0:	bl	110b0 <rb_get_ssl_strerror@plt>
   125b4:	mov	r3, r0
   125b8:	b	1253c <__errno_location@plt+0x1378>
   125bc:	andeq	r0, r0, r8, asr #1
   125c0:	strdeq	r1, [r0], -r0
   125c4:	andeq	r0, r0, r4, asr r0
   125c8:	andeq	r1, r0, ip, lsr #3
   125cc:	andeq	r1, r0, ip, ror #3
   125d0:	subs	r0, r1, #0
   125d4:	bxeq	lr
   125d8:	ldrb	r3, [r0, #72]	; 0x48
   125dc:	tst	r3, #8
   125e0:	bxne	lr
   125e4:	tst	r3, #32
   125e8:	str	r4, [sp, #-8]!
   125ec:	mov	r4, r0
   125f0:	str	lr, [sp, #4]
   125f4:	bne	1260c <__errno_location@plt+0x1448>
   125f8:	mov	r0, r4
   125fc:	ldr	r4, [sp]
   12600:	ldr	lr, [sp, #4]
   12604:	add	sp, sp, #8
   12608:	b	12400 <__errno_location@plt+0x123c>
   1260c:	bic	r3, r3, #32
   12610:	ldr	r0, [r0, #28]
   12614:	strb	r3, [r4, #72]	; 0x48
   12618:	bl	12634 <__errno_location@plt+0x1470>
   1261c:	ldrb	r3, [r4, #72]	; 0x48
   12620:	tst	r3, #8
   12624:	beq	125f8 <__errno_location@plt+0x1434>
   12628:	ldr	r4, [sp]
   1262c:	add	sp, sp, #4
   12630:	pop	{pc}		; (ldr pc, [sp], #4)
   12634:	ldrb	r3, [r1, #72]	; 0x48
   12638:	tst	r3, #8
   1263c:	bxne	lr
   12640:	tst	r3, #16
   12644:	strd	r4, [sp, #-16]!
   12648:	mov	r4, r1
   1264c:	str	r6, [sp, #8]
   12650:	mov	r6, r0
   12654:	str	lr, [sp, #12]
   12658:	beq	12698 <__errno_location@plt+0x14d4>
   1265c:	bic	r3, r3, #16
   12660:	ldr	r0, [r1, #28]
   12664:	strb	r3, [r1, #72]	; 0x48
   12668:	bl	125d0 <__errno_location@plt+0x140c>
   1266c:	ldrb	r3, [r4, #72]	; 0x48
   12670:	tst	r3, #8
   12674:	beq	12698 <__errno_location@plt+0x14d4>
   12678:	ldrd	r4, [sp]
   1267c:	ldr	r6, [sp, #8]
   12680:	add	sp, sp, #12
   12684:	pop	{pc}		; (ldr pc, [sp], #4)
   12688:	ldrd	r2, [r4, #40]	; 0x28
   1268c:	adds	r0, r2, r5
   12690:	adc	r1, r3, r5, asr #31
   12694:	strd	r0, [r4, #40]	; 0x28
   12698:	mov	r1, r6
   1269c:	ldr	r0, [r4, #16]
   126a0:	bl	111a0 <rb_rawbuf_flush@plt>
   126a4:	subs	r5, r0, #0
   126a8:	bgt	12688 <__errno_location@plt+0x14c4>
   126ac:	bl	111c4 <__errno_location@plt>
   126b0:	cmp	r5, #0
   126b4:	mov	r6, r0
   126b8:	bne	126dc <__errno_location@plt+0x1518>
   126bc:	ldr	r3, [pc, #324]	; 12808 <__errno_location@plt+0x1644>
   126c0:	mov	r1, #1
   126c4:	mov	r0, r4
   126c8:	ldr	r2, [pc, #316]	; 1280c <__errno_location@plt+0x1648>
   126cc:	add	r3, pc, r3
   126d0:	add	r2, pc, r2
   126d4:	bl	11f00 <__errno_location@plt+0xd3c>
   126d8:	b	12704 <__errno_location@plt+0x1540>
   126dc:	ldr	r0, [r0]
   126e0:	bl	10f00 <rb_ignore_errno@plt>
   126e4:	cmp	r0, #0
   126e8:	bne	12734 <__errno_location@plt+0x1570>
   126ec:	ldrb	r3, [r4, #72]	; 0x48
   126f0:	cmn	r5, #2
   126f4:	movne	r5, #0
   126f8:	moveq	r5, #1
   126fc:	tst	r3, r5
   12700:	bne	127a8 <__errno_location@plt+0x15e4>
   12704:	ldr	r0, [r6]
   12708:	bl	10ec4 <strerror@plt>
   1270c:	mov	r3, r0
   12710:	ldr	r2, [pc, #248]	; 12810 <__errno_location@plt+0x164c>
   12714:	mov	r0, r4
   12718:	mov	r1, #1
   1271c:	ldrd	r4, [sp]
   12720:	ldr	r6, [sp, #8]
   12724:	add	r2, pc, r2
   12728:	ldr	lr, [sp, #12]
   1272c:	add	sp, sp, #16
   12730:	b	11f00 <__errno_location@plt+0xd3c>
   12734:	ldr	r0, [r4, #16]
   12738:	bl	11098 <rb_rawbuf_length@plt>
   1273c:	cmp	r0, #0
   12740:	ble	127ec <__errno_location@plt+0x1628>
   12744:	cmn	r5, #3
   12748:	mov	r3, r4
   1274c:	ldr	r0, [r4, #28]
   12750:	beq	127b8 <__errno_location@plt+0x15f4>
   12754:	ldr	r2, [pc, #184]	; 12814 <__errno_location@plt+0x1650>
   12758:	mov	r1, #2
   1275c:	add	r2, pc, r2
   12760:	bl	10f30 <rb_setselect@plt>
   12764:	ldrb	r3, [r4, #72]	; 0x48
   12768:	tst	r3, #4
   1276c:	beq	12678 <__errno_location@plt+0x14b4>
   12770:	ldr	r0, [r4, #16]
   12774:	bl	11098 <rb_rawbuf_length@plt>
   12778:	cmp	r0, #0
   1277c:	bne	12678 <__errno_location@plt+0x14b4>
   12780:	ldrb	r3, [r4, #72]	; 0x48
   12784:	mov	r1, r4
   12788:	ldr	r0, [r4, #32]
   1278c:	bic	r3, r3, #4
   12790:	strb	r3, [r4, #72]	; 0x48
   12794:	ldrd	r4, [sp]
   12798:	ldr	r6, [sp, #8]
   1279c:	ldr	lr, [sp, #12]
   127a0:	add	sp, sp, #16
   127a4:	b	12a34 <__errno_location@plt+0x1870>
   127a8:	ldr	r0, [r4, #28]
   127ac:	bl	110b0 <rb_get_ssl_strerror@plt>
   127b0:	mov	r3, r0
   127b4:	b	12710 <__errno_location@plt+0x154c>
   127b8:	ldr	r2, [pc, #88]	; 12818 <__errno_location@plt+0x1654>
   127bc:	mov	r1, #1
   127c0:	add	r2, pc, r2
   127c4:	bl	10f30 <rb_setselect@plt>
   127c8:	mov	r3, #0
   127cc:	mov	r1, #2
   127d0:	ldr	r0, [r4, #28]
   127d4:	mov	r2, r3
   127d8:	bl	10f30 <rb_setselect@plt>
   127dc:	ldrb	r3, [r4, #72]	; 0x48
   127e0:	orr	r3, r3, #16
   127e4:	strb	r3, [r4, #72]	; 0x48
   127e8:	b	12768 <__errno_location@plt+0x15a4>
   127ec:	mov	r3, #0
   127f0:	mov	r1, #2
   127f4:	ldr	r0, [r4, #28]
   127f8:	mov	r2, r3
   127fc:	bl	10f30 <rb_setselect@plt>
   12800:	ldrb	r3, [r4, #72]	; 0x48
   12804:	b	12768 <__errno_location@plt+0x15a4>
   12808:	andeq	r1, r0, ip, ror r0
   1280c:	strheq	r1, [r0], -ip
   12810:	andeq	r1, r0, r8, asr #32
   12814:			; <UNDEFINED> instruction: 0xfffffed0
   12818:			; <UNDEFINED> instruction: 0xfffffe6c
   1281c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12820:	mov	r4, r0
   12824:	strd	r6, [sp, #8]
   12828:	ldr	r7, [pc, #500]	; 12a24 <__errno_location@plt+0x1860>
   1282c:	strd	r8, [sp, #16]
   12830:	ldr	r6, [pc, #496]	; 12a28 <__errno_location@plt+0x1864>
   12834:	strd	sl, [sp, #24]
   12838:	ldr	r8, [pc, #492]	; 12a2c <__errno_location@plt+0x1868>
   1283c:	str	lr, [sp, #32]
   12840:	sub	sp, sp, #32768	; 0x8000
   12844:	add	r7, pc, r7
   12848:	sub	sp, sp, #4
   1284c:	add	r6, pc, r6
   12850:	add	r8, pc, r8
   12854:	ldrb	r3, [r4, #72]	; 0x48
   12858:	tst	r3, #8
   1285c:	bne	128a4 <__errno_location@plt+0x16e0>
   12860:	mov	r5, sp
   12864:	mov	r2, #16384	; 0x4000
   12868:	ldr	r0, [r4, #32]
   1286c:	mov	r1, r5
   12870:	bl	11020 <rb_read@plt>
   12874:	subs	r2, r0, #0
   12878:	beq	12a10 <__errno_location@plt+0x184c>
   1287c:	blt	12990 <__errno_location@plt+0x17cc>
   12880:	ldrd	r0, [r4, #56]	; 0x38
   12884:	ldrb	r3, [r4, #72]	; 0x48
   12888:	adds	sl, r0, r2
   1288c:	adc	fp, r1, r2, asr #31
   12890:	tst	r3, #2
   12894:	strd	sl, [r4, #56]	; 0x38
   12898:	bne	128c4 <__errno_location@plt+0x1700>
   1289c:	tst	r3, #8
   128a0:	beq	12978 <__errno_location@plt+0x17b4>
   128a4:	add	sp, sp, #32768	; 0x8000
   128a8:	add	sp, sp, #4
   128ac:	ldrd	r4, [sp]
   128b0:	ldrd	r6, [sp, #8]
   128b4:	ldrd	r8, [sp, #16]
   128b8:	ldrd	sl, [sp, #24]
   128bc:	add	sp, sp, #32
   128c0:	pop	{pc}		; (ldr pc, [sp], #4)
   128c4:	ldr	r9, [r4, #76]	; 0x4c
   128c8:	mov	r3, #16384	; 0x4000
   128cc:	mov	r1, #2
   128d0:	add	sl, sp, r3
   128d4:	add	r0, r9, #56	; 0x38
   128d8:	str	r5, [r9, #56]	; 0x38
   128dc:	str	r2, [r9, #60]	; 0x3c
   128e0:	str	sl, [r9, #68]	; 0x44
   128e4:	str	r3, [r9, #72]	; 0x48
   128e8:	bl	10f84 <deflate@plt>
   128ec:	cmp	r0, #0
   128f0:	bne	129cc <__errno_location@plt+0x1808>
   128f4:	ldr	r2, [r9, #72]	; 0x48
   128f8:	cmp	r2, #0
   128fc:	beq	129e8 <__errno_location@plt+0x1824>
   12900:	ldr	r3, [r9, #60]	; 0x3c
   12904:	cmp	r3, #0
   12908:	bne	129fc <__errno_location@plt+0x1838>
   1290c:	ldrb	r3, [r4, #72]	; 0x48
   12910:	tst	r3, #8
   12914:	bne	128a4 <__errno_location@plt+0x16e0>
   12918:	rsb	r2, r2, #16384	; 0x4000
   1291c:	mov	r1, sl
   12920:	ldr	r0, [r4, #16]
   12924:	bl	11194 <rb_rawbuf_append@plt>
   12928:	ldrb	r5, [r4, #72]	; 0x48
   1292c:	and	r5, r5, #8
   12930:	cmp	r5, #0
   12934:	bne	128a4 <__errno_location@plt+0x16e0>
   12938:	ldr	r0, [r4, #16]
   1293c:	bl	11098 <rb_rawbuf_length@plt>
   12940:	cmp	r0, #4096	; 0x1000
   12944:	blt	12854 <__errno_location@plt+0x1690>
   12948:	ldrb	ip, [r4, #72]	; 0x48
   1294c:	mov	r3, r5
   12950:	mov	r2, r5
   12954:	mov	r1, #1
   12958:	ldr	r0, [r4, #32]
   1295c:	orr	ip, ip, #4
   12960:	strb	ip, [r4, #72]	; 0x48
   12964:	bl	10f30 <rb_setselect@plt>
   12968:	mov	r1, r4
   1296c:	ldr	r0, [r4, #28]
   12970:	bl	12634 <__errno_location@plt+0x1470>
   12974:	b	128a4 <__errno_location@plt+0x16e0>
   12978:	mov	r1, r5
   1297c:	ldr	r0, [r4, #16]
   12980:	bl	11194 <rb_rawbuf_append@plt>
   12984:	ldrb	r5, [r4, #72]	; 0x48
   12988:	and	r5, r5, #8
   1298c:	b	12930 <__errno_location@plt+0x176c>
   12990:	bl	111c4 <__errno_location@plt>
   12994:	ldr	r0, [r0]
   12998:	bl	10f00 <rb_ignore_errno@plt>
   1299c:	cmp	r0, #0
   129a0:	beq	12a10 <__errno_location@plt+0x184c>
   129a4:	ldr	r2, [pc, #132]	; 12a30 <__errno_location@plt+0x186c>
   129a8:	mov	r3, r4
   129ac:	mov	r1, #1
   129b0:	ldr	r0, [r4, #32]
   129b4:	add	r2, pc, r2
   129b8:	bl	10f30 <rb_setselect@plt>
   129bc:	mov	r1, r4
   129c0:	ldr	r0, [r4, #28]
   129c4:	bl	12634 <__errno_location@plt+0x1470>
   129c8:	b	128a4 <__errno_location@plt+0x16e0>
   129cc:	bl	10edc <zError@plt>
   129d0:	mov	r3, r0
   129d4:	mov	r2, r6
   129d8:	mov	r1, #1
   129dc:	mov	r0, r4
   129e0:	bl	11f00 <__errno_location@plt+0xd3c>
   129e4:	b	12984 <__errno_location@plt+0x17c0>
   129e8:	mov	r2, r7
   129ec:	mov	r1, #1
   129f0:	mov	r0, r4
   129f4:	bl	11f00 <__errno_location@plt+0xd3c>
   129f8:	b	12984 <__errno_location@plt+0x17c0>
   129fc:	mov	r2, r8
   12a00:	mov	r1, #1
   12a04:	mov	r0, r4
   12a08:	bl	11f00 <__errno_location@plt+0xd3c>
   12a0c:	b	12984 <__errno_location@plt+0x17c0>
   12a10:	mov	r2, #0
   12a14:	mov	r0, r4
   12a18:	mov	r1, r2
   12a1c:	bl	11f00 <__errno_location@plt+0xd3c>
   12a20:	b	128a4 <__errno_location@plt+0x16e0>
   12a24:	andeq	r0, r0, ip, asr #30
   12a28:	andeq	r0, r0, r0, lsr pc
   12a2c:	andeq	r0, r0, r8, ror #30
   12a30:	andeq	r0, r0, r8, ror r0
   12a34:	strd	r4, [sp, #-16]!
   12a38:	subs	r4, r1, #0
   12a3c:	str	r6, [sp, #8]
   12a40:	str	lr, [sp, #12]
   12a44:	beq	12a54 <__errno_location@plt+0x1890>
   12a48:	ldrb	r3, [r4, #72]	; 0x48
   12a4c:	ands	r5, r3, #8
   12a50:	beq	12a64 <__errno_location@plt+0x18a0>
   12a54:	ldrd	r4, [sp]
   12a58:	ldr	r6, [sp, #8]
   12a5c:	add	sp, sp, #12
   12a60:	pop	{pc}		; (ldr pc, [sp], #4)
   12a64:	ldr	r0, [r4, #16]
   12a68:	bl	11098 <rb_rawbuf_length@plt>
   12a6c:	cmp	r0, #4096	; 0x1000
   12a70:	bge	12a8c <__errno_location@plt+0x18c8>
   12a74:	mov	r0, r4
   12a78:	ldrd	r4, [sp]
   12a7c:	ldr	r6, [sp, #8]
   12a80:	ldr	lr, [sp, #12]
   12a84:	add	sp, sp, #16
   12a88:	b	1281c <__errno_location@plt+0x1658>
   12a8c:	ldrb	ip, [r4, #72]	; 0x48
   12a90:	mov	r3, r5
   12a94:	mov	r2, r5
   12a98:	mov	r1, #1
   12a9c:	ldr	r0, [r4, #32]
   12aa0:	orr	ip, ip, #4
   12aa4:	strb	ip, [r4, #72]	; 0x48
   12aa8:	bl	10f30 <rb_setselect@plt>
   12aac:	mov	r1, r4
   12ab0:	ldr	r6, [sp, #8]
   12ab4:	ldr	lr, [sp, #12]
   12ab8:	ldr	r0, [r4, #28]
   12abc:	ldrd	r4, [sp]
   12ac0:	add	sp, sp, #16
   12ac4:	b	12634 <__errno_location@plt+0x1470>
   12ac8:	cmp	r1, #0
   12acc:	str	r4, [sp, #-8]!
   12ad0:	str	lr, [sp, #4]
   12ad4:	sub	sp, sp, #8
   12ad8:	ldr	r4, [sp, #16]
   12adc:	beq	12b00 <__errno_location@plt+0x193c>
   12ae0:	mov	r2, #0
   12ae4:	mov	r0, r4
   12ae8:	mov	r1, r2
   12aec:	bl	11f00 <__errno_location@plt+0xd3c>
   12af0:	add	sp, sp, #8
   12af4:	ldr	r4, [sp]
   12af8:	add	sp, sp, #4
   12afc:	pop	{pc}		; (ldr pc, [sp], #4)
   12b00:	mov	r0, r4
   12b04:	bl	11bac <__errno_location@plt+0x9e8>
   12b08:	mov	r0, r4
   12b0c:	bl	11c38 <__errno_location@plt+0xa74>
   12b10:	mov	ip, #79	; 0x4f
   12b14:	mov	r2, #5
   12b18:	ldr	r0, [r4, #12]
   12b1c:	mov	r1, sp
   12b20:	ldr	r3, [r4, #24]
   12b24:	strb	ip, [sp]
   12b28:	str	r3, [sp, #1]
   12b2c:	bl	11ab4 <__errno_location@plt+0x8f0>
   12b30:	mov	r1, r4
   12b34:	ldr	r0, [r4, #28]
   12b38:	bl	125d0 <__errno_location@plt+0x140c>
   12b3c:	ldr	r0, [r4, #32]
   12b40:	mov	r1, r4
   12b44:	bl	12a34 <__errno_location@plt+0x1870>
   12b48:	add	sp, sp, #8
   12b4c:	ldr	r4, [sp]
   12b50:	add	sp, sp, #4
   12b54:	pop	{pc}		; (ldr pc, [sp], #4)
   12b58:	cmp	r1, #0
   12b5c:	str	r4, [sp, #-8]!
   12b60:	mov	r4, r2
   12b64:	str	lr, [sp, #4]
   12b68:	sub	sp, sp, #8
   12b6c:	beq	12ba4 <__errno_location@plt+0x19e0>
   12b70:	cmp	r1, #3
   12b74:	beq	12c2c <__errno_location@plt+0x1a68>
   12b78:	cmp	r1, #6
   12b7c:	beq	12bfc <__errno_location@plt+0x1a38>
   12b80:	mov	r0, r2
   12b84:	ldr	r2, [pc, #196]	; 12c50 <__errno_location@plt+0x1a8c>
   12b88:	mov	r1, #1
   12b8c:	add	r2, pc, r2
   12b90:	bl	11f00 <__errno_location@plt+0xd3c>
   12b94:	add	sp, sp, #8
   12b98:	ldr	r4, [sp]
   12b9c:	add	sp, sp, #4
   12ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba4:	mov	r0, r2
   12ba8:	bl	11bac <__errno_location@plt+0x9e8>
   12bac:	mov	r0, r4
   12bb0:	bl	11c38 <__errno_location@plt+0xa74>
   12bb4:	mov	ip, #79	; 0x4f
   12bb8:	mov	r2, #5
   12bbc:	ldr	r0, [r4, #12]
   12bc0:	mov	r1, sp
   12bc4:	ldr	r3, [r4, #24]
   12bc8:	strb	ip, [sp]
   12bcc:	str	r3, [sp, #1]
   12bd0:	bl	11ab4 <__errno_location@plt+0x8f0>
   12bd4:	mov	r1, r4
   12bd8:	ldr	r0, [r4, #28]
   12bdc:	bl	125d0 <__errno_location@plt+0x140c>
   12be0:	ldr	r0, [r4, #32]
   12be4:	mov	r1, r4
   12be8:	bl	12a34 <__errno_location@plt+0x1870>
   12bec:	add	sp, sp, #8
   12bf0:	ldr	r4, [sp]
   12bf4:	add	sp, sp, #4
   12bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bfc:	ldr	r0, [r2, #28]
   12c00:	bl	110b0 <rb_get_ssl_strerror@plt>
   12c04:	ldr	r2, [pc, #72]	; 12c54 <__errno_location@plt+0x1a90>
   12c08:	mov	r3, r0
   12c0c:	mov	r1, #1
   12c10:	mov	r0, r4
   12c14:	add	r2, pc, r2
   12c18:	bl	11f00 <__errno_location@plt+0xd3c>
   12c1c:	add	sp, sp, #8
   12c20:	ldr	r4, [sp]
   12c24:	add	sp, sp, #4
   12c28:	pop	{pc}		; (ldr pc, [sp], #4)
   12c2c:	mov	r0, r2
   12c30:	ldr	r2, [pc, #32]	; 12c58 <__errno_location@plt+0x1a94>
   12c34:	mov	r1, #1
   12c38:	add	r2, pc, r2
   12c3c:	bl	11f00 <__errno_location@plt+0xd3c>
   12c40:	add	sp, sp, #8
   12c44:	ldr	r4, [sp]
   12c48:	add	sp, sp, #4
   12c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c50:	andeq	r0, r0, ip, ror #24
   12c54:	andeq	r0, r0, r8, ror fp
   12c58:	andeq	r0, r0, r8, lsr #23
   12c5c:	strd	r4, [sp, #-16]!
   12c60:	subs	r5, r1, #0
   12c64:	mov	r4, r0
   12c68:	str	r6, [sp, #8]
   12c6c:	str	lr, [sp, #12]
   12c70:	beq	12d14 <__errno_location@plt+0x1b50>
   12c74:	ldr	r1, [r5, #20]
   12c78:	ldr	r2, [r5, #24]
   12c7c:	bl	118ac <__errno_location@plt+0x6e8>
   12c80:	ldr	r2, [r5, #12]
   12c84:	mov	ip, r0
   12c88:	mov	lr, #0
   12c8c:	movw	r3, #19923	; 0x4dd3
   12c90:	movt	r3, #4194	; 0x1062
   12c94:	mov	r0, #2000	; 0x7d0
   12c98:	ldr	r1, [pc, #168]	; 12d48 <__errno_location@plt+0x1b84>
   12c9c:	ldr	r2, [r2, #1]
   12ca0:	stm	ip, {ip, lr}
   12ca4:	add	r1, pc, r1
   12ca8:	umull	lr, r3, r3, r2
   12cac:	str	r2, [ip, #24]
   12cb0:	lsr	r3, r3, #7
   12cb4:	mls	r3, r0, r3, r2
   12cb8:	lsl	r2, r3, #1
   12cbc:	add	r0, r2, r3
   12cc0:	lsl	r0, r0, #2
   12cc4:	ldr	lr, [r1, r0]
   12cc8:	add	r1, r1, r0
   12ccc:	cmp	lr, #0
   12cd0:	str	lr, [ip, #8]
   12cd4:	strne	ip, [lr, #4]
   12cd8:	beq	12d38 <__errno_location@plt+0x1b74>
   12cdc:	ldr	lr, [pc, #104]	; 12d4c <__errno_location@plt+0x1b88>
   12ce0:	add	r3, r2, r3
   12ce4:	mov	r1, #1
   12ce8:	lsl	r3, r3, #2
   12cec:	mov	r0, ip
   12cf0:	ldr	r2, [pc, #88]	; 12d50 <__errno_location@plt+0x1b8c>
   12cf4:	add	lr, pc, lr
   12cf8:	add	r5, lr, r3
   12cfc:	str	ip, [lr, r3]
   12d00:	add	r2, pc, r2
   12d04:	ldr	r3, [r5, #8]
   12d08:	add	r3, r3, r1
   12d0c:	str	r3, [r5, #8]
   12d10:	bl	11f00 <__errno_location@plt+0xd3c>
   12d14:	ldr	r1, [pc, #56]	; 12d54 <__errno_location@plt+0x1b90>
   12d18:	mov	r0, r4
   12d1c:	mov	r2, #1
   12d20:	ldrd	r4, [sp]
   12d24:	ldr	r6, [sp, #8]
   12d28:	add	r1, pc, r1
   12d2c:	ldr	lr, [sp, #12]
   12d30:	add	sp, sp, #16
   12d34:	b	11ab4 <__errno_location@plt+0x8f0>
   12d38:	ldr	r0, [r1, #4]
   12d3c:	cmp	r0, #0
   12d40:	streq	ip, [r1, #4]
   12d44:	b	12cdc <__errno_location@plt+0x1b18>
   12d48:	muleq	r1, ip, r4
   12d4c:	andeq	r1, r1, ip, asr #8
   12d50:	andeq	r0, r0, r0, lsl fp
   12d54:	andeq	r0, r0, r0, lsl fp
   12d58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12d5c:	mov	r4, r1
   12d60:	strd	r6, [sp, #8]
   12d64:	mov	r7, #16384	; 0x4000
   12d68:	strd	r8, [sp, #16]
   12d6c:	strd	sl, [sp, #24]
   12d70:	str	lr, [sp, #32]
   12d74:	sub	sp, sp, #44	; 0x2c
   12d78:	mov	r1, #40	; 0x28
   12d7c:	mov	r0, #1
   12d80:	bl	10f9c <calloc@plt>
   12d84:	subs	r5, r0, #0
   12d88:	beq	12e0c <__errno_location@plt+0x1c48>
   12d8c:	mov	r1, #16384	; 0x4000
   12d90:	mov	r0, #1
   12d94:	bl	10f9c <calloc@plt>
   12d98:	subs	r1, r0, #0
   12d9c:	beq	12e0c <__errno_location@plt+0x1c48>
   12da0:	mov	r0, #4
   12da4:	add	r6, r5, #20
   12da8:	str	r1, [r5, #12]
   12dac:	mov	r3, r6
   12db0:	mov	r2, #16384	; 0x4000
   12db4:	str	r7, [r5, #16]
   12db8:	str	r0, [sp]
   12dbc:	ldr	r0, [r4, #16]
   12dc0:	bl	11140 <rb_recv_fd_buf@plt>
   12dc4:	cmp	r0, #0
   12dc8:	bgt	12e10 <__errno_location@plt+0x1c4c>
   12dcc:	mov	r8, r0
   12dd0:	ldr	r0, [r5, #12]
   12dd4:	cmp	r0, #0
   12dd8:	beq	12de0 <__errno_location@plt+0x1c1c>
   12ddc:	bl	10ffc <free@plt>
   12de0:	mov	r0, r5
   12de4:	bl	10ffc <free@plt>
   12de8:	cmp	r8, #0
   12dec:	beq	12e04 <__errno_location@plt+0x1c40>
   12df0:	bl	111c4 <__errno_location@plt>
   12df4:	ldr	r0, [r0]
   12df8:	bl	10f00 <rb_ignore_errno@plt>
   12dfc:	cmp	r0, #0
   12e00:	bne	12e78 <__errno_location@plt+0x1cb4>
   12e04:	mov	r0, #0
   12e08:	bl	111b8 <exit@plt>
   12e0c:	bl	110e0 <rb_outofmemory@plt>
   12e10:	ldr	r3, [r4, #28]
   12e14:	mov	r2, #0
   12e18:	str	r5, [r5]
   12e1c:	cmp	r3, r2
   12e20:	str	r3, [r5, #4]
   12e24:	str	r2, [r5, #8]
   12e28:	str	r0, [r5, #16]
   12e2c:	strne	r5, [r3, #8]
   12e30:	beq	12e68 <__errno_location@plt+0x1ca4>
   12e34:	ldr	r2, [r4, #32]
   12e38:	mov	r3, #0
   12e3c:	str	r5, [r4, #28]
   12e40:	add	r2, r2, #1
   12e44:	str	r2, [r4, #32]
   12e48:	ldr	r2, [r6], #4
   12e4c:	cmp	r2, #0
   12e50:	beq	12e60 <__errno_location@plt+0x1c9c>
   12e54:	add	r3, r3, #1
   12e58:	cmp	r3, #4
   12e5c:	bne	12e48 <__errno_location@plt+0x1c84>
   12e60:	str	r3, [r5, #36]	; 0x24
   12e64:	b	12d78 <__errno_location@plt+0x1bb4>
   12e68:	ldr	r3, [r4, #24]
   12e6c:	cmp	r3, #0
   12e70:	streq	r5, [r4, #24]
   12e74:	b	12e34 <__errno_location@plt+0x1c70>
   12e78:	ldr	r5, [r4, #24]
   12e7c:	cmp	r5, #0
   12e80:	beq	12f2c <__errno_location@plt+0x1d68>
   12e84:	ldr	r3, [pc, #1840]	; 135bc <__errno_location@plt+0x23f8>
   12e88:	movw	sl, #19923	; 0x4dd3
   12e8c:	movt	sl, #4194	; 0x1062
   12e90:	ldr	fp, [r5, #8]
   12e94:	add	r3, pc, r3
   12e98:	str	r3, [sp, #12]
   12e9c:	ldr	r3, [pc, #1820]	; 135c0 <__errno_location@plt+0x23fc>
   12ea0:	add	r3, pc, r3
   12ea4:	str	r3, [sp, #16]
   12ea8:	ldr	r6, [r5]
   12eac:	ldr	r0, [r6, #12]
   12eb0:	ldrb	r3, [r0]
   12eb4:	sub	r3, r3, #65	; 0x41
   12eb8:	cmp	r3, #25
   12ebc:	addls	pc, pc, r3, lsl #2
   12ec0:	b	1310c <__errno_location@plt+0x1f48>
   12ec4:	b	1324c <__errno_location@plt+0x2088>
   12ec8:	b	1310c <__errno_location@plt+0x1f48>
   12ecc:	b	13348 <__errno_location@plt+0x2184>
   12ed0:	b	1310c <__errno_location@plt+0x1f48>
   12ed4:	b	1310c <__errno_location@plt+0x1f48>
   12ed8:	b	1322c <__errno_location@plt+0x2068>
   12edc:	b	1310c <__errno_location@plt+0x1f48>
   12ee0:	b	1310c <__errno_location@plt+0x1f48>
   12ee4:	b	1310c <__errno_location@plt+0x1f48>
   12ee8:	b	1310c <__errno_location@plt+0x1f48>
   12eec:	b	13184 <__errno_location@plt+0x1fc0>
   12ef0:	b	1310c <__errno_location@plt+0x1f48>
   12ef4:	b	1310c <__errno_location@plt+0x1f48>
   12ef8:	b	1310c <__errno_location@plt+0x1f48>
   12efc:	b	1310c <__errno_location@plt+0x1f48>
   12f00:	b	1310c <__errno_location@plt+0x1f48>
   12f04:	b	1310c <__errno_location@plt+0x1f48>
   12f08:	b	1310c <__errno_location@plt+0x1f48>
   12f0c:	b	13170 <__errno_location@plt+0x1fac>
   12f10:	b	1310c <__errno_location@plt+0x1f48>
   12f14:	b	1310c <__errno_location@plt+0x1f48>
   12f18:	b	1310c <__errno_location@plt+0x1f48>
   12f1c:	b	1310c <__errno_location@plt+0x1f48>
   12f20:	b	1310c <__errno_location@plt+0x1f48>
   12f24:	b	1310c <__errno_location@plt+0x1f48>
   12f28:	b	12f60 <__errno_location@plt+0x1d9c>
   12f2c:	ldr	r2, [pc, #1680]	; 135c4 <__errno_location@plt+0x2400>
   12f30:	mov	r3, r4
   12f34:	mov	r1, #1
   12f38:	ldr	r0, [r4, #16]
   12f3c:	add	r2, pc, r2
   12f40:	add	sp, sp, #44	; 0x2c
   12f44:	ldrd	r4, [sp]
   12f48:	ldrd	r6, [sp, #8]
   12f4c:	ldrd	r8, [sp, #16]
   12f50:	ldrd	sl, [sp, #24]
   12f54:	ldr	lr, [sp, #32]
   12f58:	add	sp, sp, #36	; 0x24
   12f5c:	b	10f30 <rb_setselect@plt>
   12f60:	ldr	r3, [r6, #36]	; 0x24
   12f64:	cmp	r3, #2
   12f68:	bne	13450 <__errno_location@plt+0x228c>
   12f6c:	ldr	r3, [r6, #16]
   12f70:	ldr	r0, [r6, #20]
   12f74:	cmp	r3, #5
   12f78:	bls	1345c <__errno_location@plt+0x2298>
   12f7c:	mov	r1, r0
   12f80:	mov	r0, r4
   12f84:	ldr	r2, [r6, #24]
   12f88:	bl	118ac <__errno_location@plt+0x6e8>
   12f8c:	mov	r7, r0
   12f90:	ldr	r0, [r0, #28]
   12f94:	bl	10ed0 <rb_get_type@plt>
   12f98:	cmp	r0, #64	; 0x40
   12f9c:	beq	13550 <__errno_location@plt+0x238c>
   12fa0:	ldr	r0, [r7, #32]
   12fa4:	bl	10ed0 <rb_get_type@plt>
   12fa8:	cmp	r0, #64	; 0x40
   12fac:	beq	13540 <__errno_location@plt+0x237c>
   12fb0:	ldr	r9, [r6, #12]
   12fb4:	mov	r3, #0
   12fb8:	mov	r1, #2000	; 0x7d0
   12fbc:	ldr	ip, [sp, #12]
   12fc0:	ldr	r2, [r9, #1]
   12fc4:	str	r7, [r7]
   12fc8:	str	r3, [r7, #4]
   12fcc:	umull	r0, r3, sl, r2
   12fd0:	str	r2, [r7, #24]
   12fd4:	lsr	r3, r3, #7
   12fd8:	mls	r3, r1, r3, r2
   12fdc:	lsl	r2, r3, #1
   12fe0:	add	r1, r2, r3
   12fe4:	ldr	r0, [ip, r1, lsl #2]
   12fe8:	add	r1, ip, r1, lsl #2
   12fec:	cmp	r0, #0
   12ff0:	str	r0, [r7, #8]
   12ff4:	strne	r7, [r0, #4]
   12ff8:	beq	13530 <__errno_location@plt+0x236c>
   12ffc:	ldr	lr, [sp, #16]
   13000:	add	r3, r2, r3
   13004:	mov	r0, #1
   13008:	mov	r1, #112	; 0x70
   1300c:	ldr	ip, [r6, #16]
   13010:	add	r2, lr, r3, lsl #2
   13014:	str	r7, [lr, r3, lsl #2]
   13018:	ldr	r3, [r2, #8]
   1301c:	sub	ip, ip, #6
   13020:	str	ip, [sp, #20]
   13024:	add	r3, r3, r0
   13028:	str	r3, [r2, #8]
   1302c:	ldrb	r3, [r7, #72]	; 0x48
   13030:	ldrb	r2, [r9, #5]
   13034:	orr	r3, r3, #2
   13038:	strb	r3, [r7, #72]	; 0x48
   1303c:	str	r2, [sp, #24]
   13040:	bl	10f9c <calloc@plt>
   13044:	subs	r8, r0, #0
   13048:	beq	12e0c <__errno_location@plt+0x1c48>
   1304c:	ldr	r1, [pc, #1396]	; 135c8 <__errno_location@plt+0x2404>
   13050:	mov	lr, #0
   13054:	mov	r2, #56	; 0x38
   13058:	str	r8, [r7, #76]	; 0x4c
   1305c:	ldr	ip, [pc, #1384]	; 135cc <__errno_location@plt+0x2408>
   13060:	str	lr, [r8, #8]
   13064:	ldr	r3, [pc, #1380]	; 135d0 <__errno_location@plt+0x240c>
   13068:	add	r1, pc, r1
   1306c:	str	lr, [r8, #20]
   13070:	add	ip, pc, ip
   13074:	str	r1, [sp, #32]
   13078:	add	r3, pc, r3
   1307c:	str	r1, [r8, #36]	; 0x24
   13080:	mov	r1, #1
   13084:	str	ip, [r8, #32]
   13088:	str	r1, [r8, #44]	; 0x2c
   1308c:	mov	r1, r3
   13090:	str	ip, [sp, #28]
   13094:	str	r3, [sp, #36]	; 0x24
   13098:	bl	11134 <inflateInit_@plt>
   1309c:	mov	lr, #0
   130a0:	ldr	r0, [r7, #76]	; 0x4c
   130a4:	str	lr, [r8, #64]	; 0x40
   130a8:	str	lr, [r8, #76]	; 0x4c
   130ac:	ldr	r1, [sp, #24]
   130b0:	ldr	lr, [sp, #28]
   130b4:	ldr	r3, [sp, #36]	; 0x24
   130b8:	cmp	r1, #10
   130bc:	movcs	r1, #255	; 0xff
   130c0:	str	lr, [r8, #88]	; 0x58
   130c4:	ldr	lr, [sp, #32]
   130c8:	mov	r2, r3
   130cc:	mov	r3, #56	; 0x38
   130d0:	add	r0, r0, r3
   130d4:	str	lr, [r8, #92]	; 0x5c
   130d8:	mov	lr, #1
   130dc:	str	lr, [r8, #100]	; 0x64
   130e0:	bl	10f90 <deflateInit_@plt>
   130e4:	ldr	ip, [sp, #20]
   130e8:	cmp	ip, #0
   130ec:	bne	1351c <__errno_location@plt+0x2358>
   130f0:	mov	r1, r7
   130f4:	ldr	r0, [r7, #28]
   130f8:	bl	125d0 <__errno_location@plt+0x140c>
   130fc:	mov	r1, r7
   13100:	ldr	r0, [r7, #32]
   13104:	bl	12a34 <__errno_location@plt+0x1870>
   13108:	ldr	r0, [r6, #12]
   1310c:	ldr	r3, [r5, #4]
   13110:	ldr	r2, [r5, #8]
   13114:	cmp	r2, #0
   13118:	strne	r3, [r2, #4]
   1311c:	ldrne	r3, [r5, #4]
   13120:	streq	r3, [r4, #28]
   13124:	cmp	r3, #0
   13128:	strne	r2, [r3, #8]
   1312c:	ldr	r3, [r4, #32]
   13130:	streq	r2, [r4, #24]
   13134:	mov	r2, #0
   13138:	cmp	r0, r2
   1313c:	str	r2, [r5, #4]
   13140:	str	r2, [r5, #8]
   13144:	sub	r3, r3, #1
   13148:	str	r3, [r4, #32]
   1314c:	beq	13154 <__errno_location@plt+0x1f90>
   13150:	bl	10ffc <free@plt>
   13154:	mov	r0, r6
   13158:	bl	10ffc <free@plt>
   1315c:	cmp	fp, #0
   13160:	beq	12f2c <__errno_location@plt+0x1d68>
   13164:	mov	r5, fp
   13168:	ldr	fp, [fp, #8]
   1316c:	b	12ea8 <__errno_location@plt+0x1ce4>
   13170:	mov	r1, r0
   13174:	mov	r0, r4
   13178:	bl	11cb4 <__errno_location@plt+0xaf0>
   1317c:	ldr	r0, [r6, #12]
   13180:	b	1310c <__errno_location@plt+0x1f48>
   13184:	ldr	r3, [pc, #1096]	; 135d4 <__errno_location@plt+0x2410>
   13188:	add	r3, pc, r3
   1318c:	ldrb	r3, [r3, #20]
   13190:	cmp	r3, #0
   13194:	beq	1343c <__errno_location@plt+0x2278>
   13198:	add	r8, r0, #2
   1319c:	mov	r0, r8
   131a0:	bl	11038 <strlen@plt>
   131a4:	add	r2, r0, #1
   131a8:	add	r9, r8, r2
   131ac:	mov	r0, r9
   131b0:	str	r2, [sp, #20]
   131b4:	bl	11038 <strlen@plt>
   131b8:	add	r0, r0, #1
   131bc:	add	r7, r9, r0
   131c0:	mov	r0, r7
   131c4:	bl	11038 <strlen@plt>
   131c8:	ldr	r2, [sp, #20]
   131cc:	add	r3, r0, #1
   131d0:	mov	r0, r8
   131d4:	add	r3, r7, r3
   131d8:	ldrb	lr, [r7]
   131dc:	ldrb	ip, [r3]
   131e0:	ldrb	r1, [r8, r2]
   131e4:	cmp	lr, #0
   131e8:	moveq	r7, #0
   131ec:	cmp	ip, #0
   131f0:	mov	r2, r7
   131f4:	moveq	r3, #0
   131f8:	cmp	r1, #0
   131fc:	movne	r1, r9
   13200:	moveq	r1, r8
   13204:	bl	111ac <rb_setup_ssl_server@plt>
   13208:	cmp	r0, #0
   1320c:	bne	13108 <__errno_location@plt+0x1f44>
   13210:	ldr	r1, [pc, #960]	; 135d8 <__errno_location@plt+0x2414>
   13214:	mov	r0, r4
   13218:	mov	r2, #1
   1321c:	add	r1, pc, r1
   13220:	bl	11ab4 <__errno_location@plt+0x8f0>
   13224:	ldr	r0, [r6, #12]
   13228:	b	1310c <__errno_location@plt+0x1f48>
   1322c:	ldr	r3, [r6, #16]
   13230:	cmp	r3, #5
   13234:	bne	134ac <__errno_location@plt+0x22e8>
   13238:	ldr	r3, [pc, #924]	; 135dc <__errno_location@plt+0x2418>
   1323c:	ldr	r2, [r0, #1]
   13240:	add	r3, pc, r3
   13244:	str	r2, [r3, #16]
   13248:	b	1310c <__errno_location@plt+0x1f48>
   1324c:	ldr	r3, [r6, #36]	; 0x24
   13250:	cmp	r3, #2
   13254:	bne	13480 <__errno_location@plt+0x22bc>
   13258:	ldr	r3, [r6, #16]
   1325c:	cmp	r3, #5
   13260:	bne	13488 <__errno_location@plt+0x22c4>
   13264:	ldr	r3, [pc, #884]	; 135e0 <__errno_location@plt+0x241c>
   13268:	add	r3, pc, r3
   1326c:	ldrb	r3, [r3, #20]
   13270:	cmp	r3, #0
   13274:	beq	1343c <__errno_location@plt+0x2278>
   13278:	mov	r0, r4
   1327c:	ldr	r1, [r6, #20]
   13280:	ldr	r2, [r6, #24]
   13284:	bl	118ac <__errno_location@plt+0x6e8>
   13288:	ldr	r2, [r6, #12]
   1328c:	mov	r7, r0
   13290:	mov	r3, #0
   13294:	mov	r1, #2000	; 0x7d0
   13298:	ldr	r0, [pc, #836]	; 135e4 <__errno_location@plt+0x2420>
   1329c:	ldr	r2, [r2, #1]
   132a0:	str	r7, [r7]
   132a4:	str	r3, [r7, #4]
   132a8:	add	r0, pc, r0
   132ac:	umull	ip, r3, sl, r2
   132b0:	str	r2, [r7, #24]
   132b4:	lsr	r3, r3, #7
   132b8:	mls	r3, r1, r3, r2
   132bc:	lsl	r1, r3, #1
   132c0:	add	r2, r1, r3
   132c4:	ldr	ip, [r0, r2, lsl #2]
   132c8:	add	r2, r0, r2, lsl #2
   132cc:	cmp	ip, #0
   132d0:	str	ip, [r7, #8]
   132d4:	strne	r7, [ip, #4]
   132d8:	beq	13590 <__errno_location@plt+0x23cc>
   132dc:	ldr	r2, [pc, #772]	; 135e8 <__errno_location@plt+0x2424>
   132e0:	add	r3, r1, r3
   132e4:	ldr	r0, [r7, #28]
   132e8:	add	r2, pc, r2
   132ec:	add	r1, r2, r3, lsl #2
   132f0:	str	r7, [r2, r3, lsl #2]
   132f4:	ldr	r3, [r1, #8]
   132f8:	add	r3, r3, #1
   132fc:	str	r3, [r1, #8]
   13300:	ldrb	r3, [r7, #72]	; 0x48
   13304:	orr	r3, r3, #1
   13308:	strb	r3, [r7, #72]	; 0x48
   1330c:	bl	10ed0 <rb_get_type@plt>
   13310:	tst	r0, #64	; 0x40
   13314:	bne	13560 <__errno_location@plt+0x239c>
   13318:	ldr	r0, [r7, #32]
   1331c:	bl	10ed0 <rb_get_type@plt>
   13320:	cmp	r0, #64	; 0x40
   13324:	beq	135ac <__errno_location@plt+0x23e8>
   13328:	ldr	r1, [pc, #700]	; 135ec <__errno_location@plt+0x2428>
   1332c:	mov	r2, r7
   13330:	mov	r3, #10
   13334:	ldr	r0, [r6, #20]
   13338:	add	r1, pc, r1
   1333c:	bl	1114c <rb_ssl_start_accepted@plt>
   13340:	ldr	r0, [r6, #12]
   13344:	b	1310c <__errno_location@plt+0x1f48>
   13348:	ldr	r3, [r6, #16]
   1334c:	cmp	r3, #5
   13350:	bne	134dc <__errno_location@plt+0x2318>
   13354:	ldr	r3, [pc, #660]	; 135f0 <__errno_location@plt+0x242c>
   13358:	add	r3, pc, r3
   1335c:	ldrb	r3, [r3, #20]
   13360:	cmp	r3, #0
   13364:	beq	1343c <__errno_location@plt+0x2278>
   13368:	mov	r0, r4
   1336c:	ldr	r1, [r6, #20]
   13370:	ldr	r2, [r6, #24]
   13374:	bl	118ac <__errno_location@plt+0x6e8>
   13378:	ldr	r2, [r6, #12]
   1337c:	mov	r7, r0
   13380:	mov	r0, #0
   13384:	mov	r1, #2000	; 0x7d0
   13388:	ldr	r3, [pc, #612]	; 135f4 <__errno_location@plt+0x2430>
   1338c:	ldr	r2, [r2, #1]
   13390:	str	r7, [r7]
   13394:	str	r0, [r7, #4]
   13398:	add	r3, pc, r3
   1339c:	umull	ip, r0, sl, r2
   133a0:	str	r2, [r7, #24]
   133a4:	lsr	r0, r0, #7
   133a8:	mls	r0, r1, r0, r2
   133ac:	lsl	r2, r0, #1
   133b0:	add	ip, r2, r0
   133b4:	ldr	r1, [r3, ip, lsl #2]
   133b8:	add	r3, r3, ip, lsl #2
   133bc:	cmp	r1, #0
   133c0:	str	r1, [r7, #8]
   133c4:	strne	r7, [r1, #4]
   133c8:	beq	1350c <__errno_location@plt+0x2348>
   133cc:	ldr	r1, [pc, #548]	; 135f8 <__errno_location@plt+0x2434>
   133d0:	add	r3, r2, r0
   133d4:	ldr	r0, [r7, #28]
   133d8:	add	r1, pc, r1
   133dc:	mov	r2, r1
   133e0:	add	r1, r1, r3, lsl #2
   133e4:	str	r7, [r2, r3, lsl #2]
   133e8:	ldr	r3, [r1, #8]
   133ec:	add	r3, r3, #1
   133f0:	str	r3, [r1, #8]
   133f4:	ldrb	r3, [r7, #72]	; 0x48
   133f8:	orr	r3, r3, #1
   133fc:	strb	r3, [r7, #72]	; 0x48
   13400:	bl	10ed0 <rb_get_type@plt>
   13404:	cmp	r0, #64	; 0x40
   13408:	beq	13580 <__errno_location@plt+0x23bc>
   1340c:	ldr	r0, [r7, #32]
   13410:	bl	10ed0 <rb_get_type@plt>
   13414:	cmp	r0, #64	; 0x40
   13418:	beq	13570 <__errno_location@plt+0x23ac>
   1341c:	ldr	r1, [pc, #472]	; 135fc <__errno_location@plt+0x2438>
   13420:	mov	r2, r7
   13424:	mov	r3, #10
   13428:	ldr	r0, [r6, #20]
   1342c:	add	r1, pc, r1
   13430:	bl	11104 <rb_ssl_start_connected@plt>
   13434:	ldr	r0, [r6, #12]
   13438:	b	1310c <__errno_location@plt+0x1f48>
   1343c:	mov	r0, r4
   13440:	mov	r1, r6
   13444:	bl	12c5c <__errno_location@plt+0x1a98>
   13448:	ldr	r0, [r6, #12]
   1344c:	b	1310c <__errno_location@plt+0x1f48>
   13450:	cmp	r3, #0
   13454:	ble	1310c <__errno_location@plt+0x1f48>
   13458:	ldr	r0, [r6, #20]
   1345c:	add	r8, r6, #24
   13460:	mov	r7, #0
   13464:	bl	1105c <rb_close@plt>
   13468:	ldr	r3, [r6, #36]	; 0x24
   1346c:	add	r7, r7, #1
   13470:	cmp	r7, r3
   13474:	bge	13108 <__errno_location@plt+0x1f44>
   13478:	ldr	r0, [r8], #4
   1347c:	b	13464 <__errno_location@plt+0x22a0>
   13480:	cmp	r3, #0
   13484:	ble	1310c <__errno_location@plt+0x1f48>
   13488:	add	r8, r6, #20
   1348c:	mov	r7, #0
   13490:	ldr	r0, [r8], #4
   13494:	add	r7, r7, #1
   13498:	bl	1105c <rb_close@plt>
   1349c:	ldr	r3, [r6, #36]	; 0x24
   134a0:	cmp	r7, r3
   134a4:	blt	13490 <__errno_location@plt+0x22cc>
   134a8:	b	13108 <__errno_location@plt+0x1f44>
   134ac:	ldr	r3, [r6, #36]	; 0x24
   134b0:	cmp	r3, #0
   134b4:	ble	1310c <__errno_location@plt+0x1f48>
   134b8:	add	r8, r6, #20
   134bc:	mov	r7, #0
   134c0:	ldr	r0, [r8], #4
   134c4:	add	r7, r7, #1
   134c8:	bl	1105c <rb_close@plt>
   134cc:	ldr	r3, [r6, #36]	; 0x24
   134d0:	cmp	r7, r3
   134d4:	blt	134c0 <__errno_location@plt+0x22fc>
   134d8:	b	13108 <__errno_location@plt+0x1f44>
   134dc:	ldr	r3, [r6, #36]	; 0x24
   134e0:	cmp	r3, #0
   134e4:	ble	1310c <__errno_location@plt+0x1f48>
   134e8:	add	r8, r6, #20
   134ec:	mov	r7, #0
   134f0:	ldr	r0, [r8], #4
   134f4:	add	r7, r7, #1
   134f8:	bl	1105c <rb_close@plt>
   134fc:	ldr	r3, [r6, #36]	; 0x24
   13500:	cmp	r7, r3
   13504:	blt	134f0 <__errno_location@plt+0x232c>
   13508:	b	13108 <__errno_location@plt+0x1f44>
   1350c:	ldr	r1, [r3, #4]
   13510:	cmp	r1, #0
   13514:	streq	r7, [r3, #4]
   13518:	b	133cc <__errno_location@plt+0x2208>
   1351c:	mov	r2, ip
   13520:	add	r1, r9, #6
   13524:	mov	r0, r7
   13528:	bl	122c8 <__errno_location@plt+0x1104>
   1352c:	b	130f0 <__errno_location@plt+0x1f2c>
   13530:	ldr	r0, [r1, #4]
   13534:	cmp	r0, #0
   13538:	streq	r7, [r1, #4]
   1353c:	b	12ffc <__errno_location@plt+0x1e38>
   13540:	mov	r1, #4
   13544:	ldr	r0, [r7, #32]
   13548:	bl	1102c <rb_set_type@plt>
   1354c:	b	12fb0 <__errno_location@plt+0x1dec>
   13550:	mov	r1, #4
   13554:	ldr	r0, [r7, #28]
   13558:	bl	1102c <rb_set_type@plt>
   1355c:	b	12fa0 <__errno_location@plt+0x1ddc>
   13560:	mov	r1, #4
   13564:	ldr	r0, [r7, #28]
   13568:	bl	1102c <rb_set_type@plt>
   1356c:	b	13318 <__errno_location@plt+0x2154>
   13570:	mov	r1, #4
   13574:	ldr	r0, [r7, #32]
   13578:	bl	1102c <rb_set_type@plt>
   1357c:	b	1341c <__errno_location@plt+0x2258>
   13580:	mov	r1, #4
   13584:	ldr	r0, [r7, #28]
   13588:	bl	1102c <rb_set_type@plt>
   1358c:	b	1340c <__errno_location@plt+0x2248>
   13590:	ldr	r2, [r2, #4]
   13594:	cmp	r2, #0
   13598:	bne	132dc <__errno_location@plt+0x2118>
   1359c:	mov	r2, #12
   135a0:	mla	r2, r2, r3, r0
   135a4:	str	r7, [r2, #4]
   135a8:	b	132dc <__errno_location@plt+0x2118>
   135ac:	mov	r1, #4
   135b0:	ldr	r0, [r7, #32]
   135b4:	bl	1102c <rb_set_type@plt>
   135b8:	b	13328 <__errno_location@plt+0x2164>
   135bc:	andeq	r1, r1, ip, lsr #5
   135c0:	andeq	r1, r1, r0, lsr #5
   135c4:			; <UNDEFINED> instruction: 0xfffffe14
   135c8:			; <UNDEFINED> instruction: 0xffffe62c
   135cc:			; <UNDEFINED> instruction: 0xffffe808
   135d0:	andeq	r0, r0, r8, asr #15
   135d4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   135d8:	andeq	r0, r0, r0, lsr #12
   135dc:	andeq	r0, r1, r4, ror #29
   135e0:			; <UNDEFINED> instruction: 0x00010ebc
   135e4:	muleq	r1, r8, lr
   135e8:	andeq	r0, r1, r8, asr lr
   135ec:			; <UNDEFINED> instruction: 0xfffff788
   135f0:	andeq	r0, r1, ip, asr #27
   135f4:	andeq	r0, r1, r8, lsr #27
   135f8:	andeq	r0, r1, r8, ror #26
   135fc:			; <UNDEFINED> instruction: 0xfffff724
   13600:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13604:	mov	r7, r0
   13608:	ldr	r6, [pc, #72]	; 13658 <__errno_location@plt+0x2494>
   1360c:	ldr	r5, [pc, #72]	; 1365c <__errno_location@plt+0x2498>
   13610:	add	r6, pc, r6
   13614:	add	r5, pc, r5
   13618:	sub	r6, r6, r5
   1361c:	mov	r8, r1
   13620:	mov	r9, r2
   13624:	bl	10e8c <open@plt-0x20>
   13628:	asrs	r6, r6, #2
   1362c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13630:	mov	r4, #0
   13634:	add	r4, r4, #1
   13638:	ldr	r3, [r5], #4
   1363c:	mov	r2, r9
   13640:	mov	r1, r8
   13644:	mov	r0, r7
   13648:	blx	r3
   1364c:	cmp	r6, r4
   13650:	bne	13634 <__errno_location@plt+0x2470>
   13654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13658:	ldrdeq	r0, [r1], -ip
   1365c:	ldrdeq	r0, [r1], -r4
   13660:	bx	lr

Disassembly of section .fini:

00013664 <.fini>:
   13664:	push	{r3, lr}
   13668:	pop	{r3, pc}
