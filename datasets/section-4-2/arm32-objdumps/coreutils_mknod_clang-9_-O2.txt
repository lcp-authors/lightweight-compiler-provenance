
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

00011768 <.init>:
   11768:	push	{r3, lr}
   1176c:	bl	11c0c <__assert_fail@plt+0x4c>
   11770:	pop	{r3, pc}

Disassembly of section .plt:

00011774 <fstatfs64@plt-0x14>:
   11774:	push	{lr}		; (str lr, [sp, #-4]!)
   11778:	ldr	lr, [pc, #4]	; 11784 <fstatfs64@plt-0x4>
   1177c:	add	lr, pc, lr
   11780:	ldr	pc, [lr, #8]!
   11784:	andeq	fp, r1, ip, ror r8

00011788 <fstatfs64@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #110592	; 0x1b000
   11790:	ldr	pc, [ip, #2172]!	; 0x87c

00011794 <selabel_lookup@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #110592	; 0x1b000
   1179c:	ldr	pc, [ip, #2164]!	; 0x874

000117a0 <calloc@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #110592	; 0x1b000
   117a8:	ldr	pc, [ip, #2156]!	; 0x86c

000117ac <fputs_unlocked@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #110592	; 0x1b000
   117b4:	ldr	pc, [ip, #2148]!	; 0x864

000117b8 <raise@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #110592	; 0x1b000
   117c0:	ldr	pc, [ip, #2140]!	; 0x85c

000117c4 <is_selinux_enabled@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #110592	; 0x1b000
   117cc:	ldr	pc, [ip, #2132]!	; 0x854

000117d0 <strcmp@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #110592	; 0x1b000
   117d8:	ldr	pc, [ip, #2124]!	; 0x84c

000117dc <context_type_get@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #110592	; 0x1b000
   117e4:	ldr	pc, [ip, #2116]!	; 0x844

000117e8 <fflush@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #110592	; 0x1b000
   117f0:	ldr	pc, [ip, #2108]!	; 0x83c

000117f4 <lsetfilecon@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #110592	; 0x1b000
   117fc:	ldr	pc, [ip, #2100]!	; 0x834

00011800 <memmove@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #110592	; 0x1b000
   11808:	ldr	pc, [ip, #2092]!	; 0x82c

0001180c <free@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #110592	; 0x1b000
   11814:	ldr	pc, [ip, #2084]!	; 0x824

00011818 <faccessat@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #110592	; 0x1b000
   11820:	ldr	pc, [ip, #2076]!	; 0x81c

00011824 <_exit@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #110592	; 0x1b000
   1182c:	ldr	pc, [ip, #2068]!	; 0x814

00011830 <memcpy@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #110592	; 0x1b000
   11838:	ldr	pc, [ip, #2060]!	; 0x80c

0001183c <__strtoull_internal@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #110592	; 0x1b000
   11844:	ldr	pc, [ip, #2052]!	; 0x804

00011848 <mbsinit@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #110592	; 0x1b000
   11850:	ldr	pc, [ip, #2044]!	; 0x7fc

00011854 <context_new@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #110592	; 0x1b000
   1185c:	ldr	pc, [ip, #2036]!	; 0x7f4

00011860 <dcgettext@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #110592	; 0x1b000
   11868:	ldr	pc, [ip, #2028]!	; 0x7ec

0001186c <context_type_set@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #110592	; 0x1b000
   11874:	ldr	pc, [ip, #2020]!	; 0x7e4

00011878 <realloc@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #110592	; 0x1b000
   11880:	ldr	pc, [ip, #2012]!	; 0x7dc

00011884 <fgetfilecon@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #110592	; 0x1b000
   1188c:	ldr	pc, [ip, #2004]!	; 0x7d4

00011890 <textdomain@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #110592	; 0x1b000
   11898:	ldr	pc, [ip, #1996]!	; 0x7cc

0001189c <rawmemchr@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #110592	; 0x1b000
   118a4:	ldr	pc, [ip, #1988]!	; 0x7c4

000118a8 <__fxstatat64@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #110592	; 0x1b000
   118b0:	ldr	pc, [ip, #1980]!	; 0x7bc

000118b4 <iswprint@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #110592	; 0x1b000
   118bc:	ldr	pc, [ip, #1972]!	; 0x7b4

000118c0 <__fxstat64@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #110592	; 0x1b000
   118c8:	ldr	pc, [ip, #1964]!	; 0x7ac

000118cc <readlink@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #110592	; 0x1b000
   118d4:	ldr	pc, [ip, #1956]!	; 0x7a4

000118d8 <fwrite@plt>:
   118d8:	add	ip, pc, #0, 12
   118dc:	add	ip, ip, #110592	; 0x1b000
   118e0:	ldr	pc, [ip, #1948]!	; 0x79c

000118e4 <lseek64@plt>:
   118e4:	add	ip, pc, #0, 12
   118e8:	add	ip, ip, #110592	; 0x1b000
   118ec:	ldr	pc, [ip, #1940]!	; 0x794

000118f0 <__ctype_get_mb_cur_max@plt>:
   118f0:	add	ip, pc, #0, 12
   118f4:	add	ip, ip, #110592	; 0x1b000
   118f8:	ldr	pc, [ip, #1932]!	; 0x78c

000118fc <getcon@plt>:
   118fc:	add	ip, pc, #0, 12
   11900:	add	ip, ip, #110592	; 0x1b000
   11904:	ldr	pc, [ip, #1924]!	; 0x784

00011908 <__fpending@plt>:
   11908:	add	ip, pc, #0, 12
   1190c:	add	ip, ip, #110592	; 0x1b000
   11910:	ldr	pc, [ip, #1916]!	; 0x77c

00011914 <mbrtowc@plt>:
   11914:	add	ip, pc, #0, 12
   11918:	add	ip, ip, #110592	; 0x1b000
   1191c:	ldr	pc, [ip, #1908]!	; 0x774

00011920 <error@plt>:
   11920:	add	ip, pc, #0, 12
   11924:	add	ip, ip, #110592	; 0x1b000
   11928:	ldr	pc, [ip, #1900]!	; 0x76c

0001192c <open64@plt>:
   1192c:	add	ip, pc, #0, 12
   11930:	add	ip, ip, #110592	; 0x1b000
   11934:	ldr	pc, [ip, #1892]!	; 0x764

00011938 <lgetfilecon@plt>:
   11938:	add	ip, pc, #0, 12
   1193c:	add	ip, ip, #110592	; 0x1b000
   11940:	ldr	pc, [ip, #1884]!	; 0x75c

00011944 <malloc@plt>:
   11944:	add	ip, pc, #0, 12
   11948:	add	ip, ip, #110592	; 0x1b000
   1194c:	ldr	pc, [ip, #1876]!	; 0x754

00011950 <__libc_start_main@plt>:
   11950:	add	ip, pc, #0, 12
   11954:	add	ip, ip, #110592	; 0x1b000
   11958:	ldr	pc, [ip, #1868]!	; 0x74c

0001195c <__freading@plt>:
   1195c:	add	ip, pc, #0, 12
   11960:	add	ip, ip, #110592	; 0x1b000
   11964:	ldr	pc, [ip, #1860]!	; 0x744

00011968 <__gmon_start__@plt>:
   11968:	add	ip, pc, #0, 12
   1196c:	add	ip, ip, #110592	; 0x1b000
   11970:	ldr	pc, [ip, #1852]!	; 0x73c

00011974 <context_free@plt>:
   11974:	add	ip, pc, #0, 12
   11978:	add	ip, ip, #110592	; 0x1b000
   1197c:	ldr	pc, [ip, #1844]!	; 0x734

00011980 <getopt_long@plt>:
   11980:	add	ip, pc, #0, 12
   11984:	add	ip, ip, #110592	; 0x1b000
   11988:	ldr	pc, [ip, #1836]!	; 0x72c

0001198c <__ctype_b_loc@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #110592	; 0x1b000
   11994:	ldr	pc, [ip, #1828]!	; 0x724

00011998 <getcwd@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #110592	; 0x1b000
   119a0:	ldr	pc, [ip, #1820]!	; 0x71c

000119a4 <exit@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #110592	; 0x1b000
   119ac:	ldr	pc, [ip, #1812]!	; 0x714

000119b0 <getfilecon@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #110592	; 0x1b000
   119b8:	ldr	pc, [ip, #1804]!	; 0x70c

000119bc <bcmp@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #110592	; 0x1b000
   119c4:	ldr	pc, [ip, #1796]!	; 0x704

000119c8 <strlen@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #110592	; 0x1b000
   119d0:	ldr	pc, [ip, #1788]!	; 0x6fc

000119d4 <selabel_open@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #110592	; 0x1b000
   119dc:	ldr	pc, [ip, #1780]!	; 0x6f4

000119e0 <strchr@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #110592	; 0x1b000
   119e8:	ldr	pc, [ip, #1772]!	; 0x6ec

000119ec <openat64@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #110592	; 0x1b000
   119f4:	ldr	pc, [ip, #1764]!	; 0x6e4

000119f8 <setfscreatecon@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #110592	; 0x1b000
   11a00:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a04 <__errno_location@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #110592	; 0x1b000
   11a0c:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a10 <__sprintf_chk@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #110592	; 0x1b000
   11a18:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a1c <__cxa_atexit@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #110592	; 0x1b000
   11a24:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a28 <memset@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #110592	; 0x1b000
   11a30:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a34 <__printf_chk@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #110592	; 0x1b000
   11a3c:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a40 <fileno@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #110592	; 0x1b000
   11a48:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a4c <__fprintf_chk@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #110592	; 0x1b000
   11a54:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a58 <fclose@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #110592	; 0x1b000
   11a60:	ldr	pc, [ip, #1692]!	; 0x69c

00011a64 <fseeko64@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #110592	; 0x1b000
   11a6c:	ldr	pc, [ip, #1684]!	; 0x694

00011a70 <fcntl64@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #110592	; 0x1b000
   11a78:	ldr	pc, [ip, #1676]!	; 0x68c

00011a7c <setlocale@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #110592	; 0x1b000
   11a84:	ldr	pc, [ip, #1668]!	; 0x684

00011a88 <fsetfilecon@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #110592	; 0x1b000
   11a90:	ldr	pc, [ip, #1660]!	; 0x67c

00011a94 <strrchr@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #110592	; 0x1b000
   11a9c:	ldr	pc, [ip, #1652]!	; 0x674

00011aa0 <nl_langinfo@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #110592	; 0x1b000
   11aa8:	ldr	pc, [ip, #1644]!	; 0x66c

00011aac <readdir64@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #110592	; 0x1b000
   11ab4:	ldr	pc, [ip, #1636]!	; 0x664

00011ab8 <fdopendir@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #110592	; 0x1b000
   11ac0:	ldr	pc, [ip, #1628]!	; 0x65c

00011ac4 <security_compute_create@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #110592	; 0x1b000
   11acc:	ldr	pc, [ip, #1620]!	; 0x654

00011ad0 <dirfd@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #110592	; 0x1b000
   11ad8:	ldr	pc, [ip, #1612]!	; 0x64c

00011adc <fchdir@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #110592	; 0x1b000
   11ae4:	ldr	pc, [ip, #1604]!	; 0x644

00011ae8 <qsort@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #110592	; 0x1b000
   11af0:	ldr	pc, [ip, #1596]!	; 0x63c

00011af4 <freecon@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #110592	; 0x1b000
   11afc:	ldr	pc, [ip, #1588]!	; 0x634

00011b00 <bindtextdomain@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #110592	; 0x1b000
   11b08:	ldr	pc, [ip, #1580]!	; 0x62c

00011b0c <getfscreatecon@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #110592	; 0x1b000
   11b14:	ldr	pc, [ip, #1572]!	; 0x624

00011b18 <umask@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #110592	; 0x1b000
   11b20:	ldr	pc, [ip, #1564]!	; 0x61c

00011b24 <context_str@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #110592	; 0x1b000
   11b2c:	ldr	pc, [ip, #1556]!	; 0x614

00011b30 <chmod@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #110592	; 0x1b000
   11b38:	ldr	pc, [ip, #1548]!	; 0x60c

00011b3c <__xstat64@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #110592	; 0x1b000
   11b44:	ldr	pc, [ip, #1540]!	; 0x604

00011b48 <__xmknod@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #110592	; 0x1b000
   11b50:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b54 <strncmp@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #110592	; 0x1b000
   11b5c:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b60 <abort@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #110592	; 0x1b000
   11b68:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b6c <close@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #110592	; 0x1b000
   11b74:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b78 <__lxstat64@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #110592	; 0x1b000
   11b80:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b84 <mkfifo@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #110592	; 0x1b000
   11b8c:	ldr	pc, [ip, #1492]!	; 0x5d4

00011b90 <mode_to_security_class@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #110592	; 0x1b000
   11b98:	ldr	pc, [ip, #1484]!	; 0x5cc

00011b9c <closedir@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #110592	; 0x1b000
   11ba4:	ldr	pc, [ip, #1476]!	; 0x5c4

00011ba8 <strspn@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #110592	; 0x1b000
   11bb0:	ldr	pc, [ip, #1468]!	; 0x5bc

00011bb4 <__mempcpy_chk@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #110592	; 0x1b000
   11bbc:	ldr	pc, [ip, #1460]!	; 0x5b4

00011bc0 <__assert_fail@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #110592	; 0x1b000
   11bc8:	ldr	pc, [ip, #1452]!	; 0x5ac

Disassembly of section .text:

00011bd0 <lchmod@@Base-0x5388>:
   11bd0:	mov	fp, #0
   11bd4:	mov	lr, #0
   11bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   11bdc:	mov	r2, sp
   11be0:	push	{r2}		; (str r2, [sp, #-4]!)
   11be4:	push	{r0}		; (str r0, [sp, #-4]!)
   11be8:	ldr	ip, [pc, #16]	; 11c00 <__assert_fail@plt+0x40>
   11bec:	push	{ip}		; (str ip, [sp, #-4]!)
   11bf0:	ldr	r0, [pc, #12]	; 11c04 <__assert_fail@plt+0x44>
   11bf4:	ldr	r3, [pc, #12]	; 11c08 <__assert_fail@plt+0x48>
   11bf8:	bl	11950 <__libc_start_main@plt>
   11bfc:	bl	11b60 <abort@plt>
   11c00:	andeq	fp, r1, r8, asr fp
   11c04:			; <UNDEFINED> instruction: 0x00011fb4
   11c08:	strdeq	fp, [r1], -r8
   11c0c:	ldr	r3, [pc, #20]	; 11c28 <__assert_fail@plt+0x68>
   11c10:	ldr	r2, [pc, #20]	; 11c2c <__assert_fail@plt+0x6c>
   11c14:	add	r3, pc, r3
   11c18:	ldr	r2, [r3, r2]
   11c1c:	cmp	r2, #0
   11c20:	bxeq	lr
   11c24:	b	11968 <__gmon_start__@plt>
   11c28:	andeq	fp, r1, r4, ror #7
   11c2c:	andeq	r0, r0, r8, ror r1
   11c30:	ldr	r0, [pc, #24]	; 11c50 <__assert_fail@plt+0x90>
   11c34:	ldr	r3, [pc, #24]	; 11c54 <__assert_fail@plt+0x94>
   11c38:	cmp	r3, r0
   11c3c:	bxeq	lr
   11c40:	ldr	r3, [pc, #16]	; 11c58 <__assert_fail@plt+0x98>
   11c44:	cmp	r3, #0
   11c48:	bxeq	lr
   11c4c:	bx	r3
   11c50:	ldrdeq	sp, [r2], -r0
   11c54:	ldrdeq	sp, [r2], -r0
   11c58:	andeq	r0, r0, r0
   11c5c:	ldr	r0, [pc, #36]	; 11c88 <__assert_fail@plt+0xc8>
   11c60:	ldr	r1, [pc, #36]	; 11c8c <__assert_fail@plt+0xcc>
   11c64:	sub	r1, r1, r0
   11c68:	asr	r1, r1, #2
   11c6c:	add	r1, r1, r1, lsr #31
   11c70:	asrs	r1, r1, #1
   11c74:	bxeq	lr
   11c78:	ldr	r3, [pc, #16]	; 11c90 <__assert_fail@plt+0xd0>
   11c7c:	cmp	r3, #0
   11c80:	bxeq	lr
   11c84:	bx	r3
   11c88:	ldrdeq	sp, [r2], -r0
   11c8c:	ldrdeq	sp, [r2], -r0
   11c90:	andeq	r0, r0, r0
   11c94:	push	{r4, lr}
   11c98:	ldr	r4, [pc, #24]	; 11cb8 <__assert_fail@plt+0xf8>
   11c9c:	ldrb	r3, [r4]
   11ca0:	cmp	r3, #0
   11ca4:	popne	{r4, pc}
   11ca8:	bl	11c30 <__assert_fail@plt+0x70>
   11cac:	mov	r3, #1
   11cb0:	strb	r3, [r4]
   11cb4:	pop	{r4, pc}
   11cb8:	andeq	sp, r2, ip, ror #3
   11cbc:	b	11c5c <__assert_fail@plt+0x9c>
   11cc0:	push	{fp, lr}
   11cc4:	mov	fp, sp
   11cc8:	sub	sp, sp, #56	; 0x38
   11ccc:	mov	r4, r0
   11cd0:	cmp	r0, #0
   11cd4:	bne	11f70 <__assert_fail@plt+0x3b0>
   11cd8:	movw	r1, #48043	; 0xbbab
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	11860 <dcgettext@plt>
   11cec:	mov	r1, r0
   11cf0:	movw	r0, #53752	; 0xd1f8
   11cf4:	movt	r0, #2
   11cf8:	ldr	r2, [r0]
   11cfc:	mov	r0, #1
   11d00:	bl	11a34 <__printf_chk@plt>
   11d04:	movw	r1, #48090	; 0xbbda
   11d08:	mov	r0, #0
   11d0c:	mov	r2, #5
   11d10:	movt	r1, #1
   11d14:	bl	11860 <dcgettext@plt>
   11d18:	movw	r7, #53732	; 0xd1e4
   11d1c:	movt	r7, #2
   11d20:	ldr	r1, [r7]
   11d24:	bl	117ac <fputs_unlocked@plt>
   11d28:	movw	r1, #49666	; 0xc202
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	movt	r1, #1
   11d38:	bl	11860 <dcgettext@plt>
   11d3c:	ldr	r1, [r7]
   11d40:	bl	117ac <fputs_unlocked@plt>
   11d44:	movw	r1, #48139	; 0xbc0b
   11d48:	mov	r0, #0
   11d4c:	mov	r2, #5
   11d50:	movt	r1, #1
   11d54:	bl	11860 <dcgettext@plt>
   11d58:	ldr	r1, [r7]
   11d5c:	bl	117ac <fputs_unlocked@plt>
   11d60:	movw	r1, #48212	; 0xbc54
   11d64:	mov	r0, #0
   11d68:	mov	r2, #5
   11d6c:	movt	r1, #1
   11d70:	bl	11860 <dcgettext@plt>
   11d74:	ldr	r1, [r7]
   11d78:	bl	117ac <fputs_unlocked@plt>
   11d7c:	movw	r1, #48419	; 0xbd23
   11d80:	mov	r0, #0
   11d84:	mov	r2, #5
   11d88:	movt	r1, #1
   11d8c:	bl	11860 <dcgettext@plt>
   11d90:	ldr	r1, [r7]
   11d94:	bl	117ac <fputs_unlocked@plt>
   11d98:	movw	r1, #48464	; 0xbd50
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	11860 <dcgettext@plt>
   11dac:	ldr	r1, [r7]
   11db0:	bl	117ac <fputs_unlocked@plt>
   11db4:	movw	r1, #48518	; 0xbd86
   11db8:	mov	r0, #0
   11dbc:	mov	r2, #5
   11dc0:	movt	r1, #1
   11dc4:	bl	11860 <dcgettext@plt>
   11dc8:	ldr	r1, [r7]
   11dcc:	bl	117ac <fputs_unlocked@plt>
   11dd0:	movw	r1, #48779	; 0xbe8b
   11dd4:	mov	r0, #0
   11dd8:	mov	r2, #5
   11ddc:	movt	r1, #1
   11de0:	bl	11860 <dcgettext@plt>
   11de4:	ldr	r1, [r7]
   11de8:	bl	117ac <fputs_unlocked@plt>
   11dec:	movw	r1, #48906	; 0xbf0a
   11df0:	mov	r0, #0
   11df4:	mov	r2, #5
   11df8:	movt	r1, #1
   11dfc:	bl	11860 <dcgettext@plt>
   11e00:	movw	r5, #49097	; 0xbfc9
   11e04:	mov	r1, r0
   11e08:	mov	r0, #1
   11e0c:	movt	r5, #1
   11e10:	mov	r2, r5
   11e14:	bl	11a34 <__printf_chk@plt>
   11e18:	movw	r0, #50152	; 0xc3e8
   11e1c:	mov	r2, #48	; 0x30
   11e20:	mov	r6, sp
   11e24:	movt	r0, #1
   11e28:	add	r1, r0, #32
   11e2c:	add	r3, r0, #16
   11e30:	vld1.64	{d18-d19}, [r0], r2
   11e34:	vld1.64	{d16-d17}, [r1]
   11e38:	vld1.64	{d20-d21}, [r3]
   11e3c:	vldr	d22, [r0]
   11e40:	add	r1, r6, #32
   11e44:	add	r0, r6, #16
   11e48:	vst1.64	{d16-d17}, [r1]
   11e4c:	movw	r1, #49741	; 0xc24d
   11e50:	vst1.64	{d20-d21}, [r0]
   11e54:	mov	r0, r6
   11e58:	movt	r1, #1
   11e5c:	vst1.64	{d18-d19}, [r0], r2
   11e60:	vstr	d22, [r0]
   11e64:	mov	r0, r5
   11e68:	bl	117d0 <strcmp@plt>
   11e6c:	cmp	r0, #0
   11e70:	ldrne	r1, [r6, #8]!
   11e74:	cmpne	r1, #0
   11e78:	bne	11e64 <__assert_fail@plt+0x2a4>
   11e7c:	movw	r1, #49836	; 0xc2ac
   11e80:	ldr	r6, [r6, #4]
   11e84:	mov	r0, #0
   11e88:	mov	r2, #5
   11e8c:	movt	r1, #1
   11e90:	bl	11860 <dcgettext@plt>
   11e94:	movw	r2, #49232	; 0xc050
   11e98:	movw	r3, #49859	; 0xc2c3
   11e9c:	mov	r1, r0
   11ea0:	mov	r0, #1
   11ea4:	movt	r2, #1
   11ea8:	movt	r3, #1
   11eac:	bl	11a34 <__printf_chk@plt>
   11eb0:	cmp	r6, #0
   11eb4:	mov	r0, #5
   11eb8:	mov	r1, #0
   11ebc:	moveq	r6, r5
   11ec0:	bl	11a7c <setlocale@plt>
   11ec4:	cmp	r0, #0
   11ec8:	beq	11f00 <__assert_fail@plt+0x340>
   11ecc:	movw	r1, #49899	; 0xc2eb
   11ed0:	mov	r2, #3
   11ed4:	movt	r1, #1
   11ed8:	bl	11b54 <strncmp@plt>
   11edc:	cmp	r0, #0
   11ee0:	beq	11f00 <__assert_fail@plt+0x340>
   11ee4:	movw	r1, #49903	; 0xc2ef
   11ee8:	mov	r0, #0
   11eec:	mov	r2, #5
   11ef0:	movt	r1, #1
   11ef4:	bl	11860 <dcgettext@plt>
   11ef8:	ldr	r1, [r7]
   11efc:	bl	117ac <fputs_unlocked@plt>
   11f00:	movw	r1, #49974	; 0xc336
   11f04:	mov	r0, #0
   11f08:	mov	r2, #5
   11f0c:	movt	r1, #1
   11f10:	bl	11860 <dcgettext@plt>
   11f14:	movw	r2, #49859	; 0xc2c3
   11f18:	mov	r1, r0
   11f1c:	mov	r0, #1
   11f20:	mov	r3, r5
   11f24:	movt	r2, #1
   11f28:	bl	11a34 <__printf_chk@plt>
   11f2c:	movw	r1, #50001	; 0xc351
   11f30:	mov	r0, #0
   11f34:	mov	r2, #5
   11f38:	movt	r1, #1
   11f3c:	bl	11860 <dcgettext@plt>
   11f40:	mov	r1, r0
   11f44:	movw	r0, #49769	; 0xc269
   11f48:	movw	r3, #50051	; 0xc383
   11f4c:	cmp	r6, r5
   11f50:	mov	r2, r6
   11f54:	movt	r0, #1
   11f58:	movt	r3, #1
   11f5c:	moveq	r3, r0
   11f60:	mov	r0, #1
   11f64:	bl	11a34 <__printf_chk@plt>
   11f68:	mov	r0, r4
   11f6c:	bl	119a4 <exit@plt>
   11f70:	movw	r0, #53728	; 0xd1e0
   11f74:	movw	r1, #48004	; 0xbb84
   11f78:	mov	r2, #5
   11f7c:	movt	r0, #2
   11f80:	movt	r1, #1
   11f84:	ldr	r5, [r0]
   11f88:	mov	r0, #0
   11f8c:	bl	11860 <dcgettext@plt>
   11f90:	mov	r2, r0
   11f94:	movw	r0, #53752	; 0xd1f8
   11f98:	mov	r1, #1
   11f9c:	movt	r0, #2
   11fa0:	ldr	r3, [r0]
   11fa4:	mov	r0, r5
   11fa8:	bl	11a4c <__fprintf_chk@plt>
   11fac:	mov	r0, r4
   11fb0:	bl	119a4 <exit@plt>
   11fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb8:	add	fp, sp, #28
   11fbc:	sub	sp, sp, #52	; 0x34
   11fc0:	mov	r6, r0
   11fc4:	ldr	r0, [r1]
   11fc8:	mov	r4, r1
   11fcc:	bl	176b0 <lchmod@@Base+0x758>
   11fd0:	movw	r1, #50051	; 0xc383
   11fd4:	mov	r0, #6
   11fd8:	movt	r1, #1
   11fdc:	bl	11a7c <setlocale@plt>
   11fe0:	movw	r5, #49236	; 0xc054
   11fe4:	movw	r1, #49103	; 0xbfcf
   11fe8:	movt	r5, #1
   11fec:	movt	r1, #1
   11ff0:	mov	r0, r5
   11ff4:	bl	11b00 <bindtextdomain@plt>
   11ff8:	mov	r0, r5
   11ffc:	bl	11890 <textdomain@plt>
   12000:	movw	r0, #13328	; 0x3410
   12004:	movt	r0, #1
   12008:	bl	1bb5c <lchmod@@Base+0x4c04>
   1200c:	movw	r5, #49127	; 0xbfe7
   12010:	movw	r8, #50072	; 0xc398
   12014:	mov	r0, #0
   12018:	mov	r9, #0
   1201c:	mov	r1, #0
   12020:	mov	sl, #0
   12024:	movt	r5, #1
   12028:	movt	r8, #1
   1202c:	str	r0, [sp, #16]
   12030:	mov	r7, r1
   12034:	mov	r0, r6
   12038:	mov	r1, r4
   1203c:	mov	r2, r5
   12040:	mov	r3, r8
   12044:	str	r9, [sp]
   12048:	bl	11980 <getopt_long@plt>
   1204c:	cmp	r0, #89	; 0x59
   12050:	ble	12124 <__assert_fail@plt+0x564>
   12054:	cmp	r0, #90	; 0x5a
   12058:	bne	120a4 <__assert_fail@plt+0x4e4>
   1205c:	bl	117c4 <is_selinux_enabled@plt>
   12060:	movw	r1, #53736	; 0xd1e8
   12064:	cmp	r0, #1
   12068:	movt	r1, #2
   1206c:	ldr	r1, [r1]
   12070:	bge	120bc <__assert_fail@plt+0x4fc>
   12074:	cmp	r1, #0
   12078:	beq	12034 <__assert_fail@plt+0x474>
   1207c:	movw	r1, #49159	; 0xc007
   12080:	mov	r0, #0
   12084:	mov	r2, #5
   12088:	movt	r1, #1
   1208c:	bl	11860 <dcgettext@plt>
   12090:	mov	r2, r0
   12094:	mov	r0, #0
   12098:	mov	r1, #0
   1209c:	bl	11920 <error@plt>
   120a0:	b	12034 <__assert_fail@plt+0x474>
   120a4:	cmp	r0, #109	; 0x6d
   120a8:	bne	126b0 <__assert_fail@plt+0xaf0>
   120ac:	movw	r0, #53736	; 0xd1e8
   120b0:	movt	r0, #2
   120b4:	ldr	sl, [r0]
   120b8:	b	12034 <__assert_fail@plt+0x474>
   120bc:	cmp	r1, #0
   120c0:	bne	12030 <__assert_fail@plt+0x470>
   120c4:	mov	r0, #0
   120c8:	mov	r1, #0
   120cc:	mov	r2, #0
   120d0:	bl	119d4 <selabel_open@plt>
   120d4:	cmp	r0, #0
   120d8:	mov	r1, r7
   120dc:	str	r0, [sp, #16]
   120e0:	bne	12030 <__assert_fail@plt+0x470>
   120e4:	bl	11a04 <__errno_location@plt>
   120e8:	ldr	r0, [r0]
   120ec:	movw	r1, #49131	; 0xbfeb
   120f0:	mov	r2, #5
   120f4:	movt	r1, #1
   120f8:	str	r0, [sp, #20]
   120fc:	mov	r0, #0
   12100:	str	r0, [sp, #16]
   12104:	mov	r0, #0
   12108:	bl	11860 <dcgettext@plt>
   1210c:	ldr	r1, [sp, #20]
   12110:	mov	r2, r0
   12114:	mov	r0, #0
   12118:	bl	11920 <error@plt>
   1211c:	mov	r1, r7
   12120:	b	12030 <__assert_fail@plt+0x470>
   12124:	cmn	r0, #1
   12128:	bne	12460 <__assert_fail@plt+0x8a0>
   1212c:	cmp	sl, #0
   12130:	beq	12198 <__assert_fail@plt+0x5d8>
   12134:	mov	r0, sl
   12138:	bl	1707c <lchmod@@Base+0x124>
   1213c:	cmp	r0, #0
   12140:	beq	125d4 <__assert_fail@plt+0xa14>
   12144:	mov	r5, r0
   12148:	mov	r0, #0
   1214c:	mov	r9, r7
   12150:	mov	r8, #0
   12154:	bl	11b18 <umask@plt>
   12158:	mov	r7, r0
   1215c:	bl	11b18 <umask@plt>
   12160:	movw	r0, #438	; 0x1b6
   12164:	mov	r1, #0
   12168:	mov	r2, r7
   1216c:	mov	r3, r5
   12170:	str	r8, [sp]
   12174:	bl	17510 <lchmod@@Base+0x5b8>
   12178:	mov	r8, r0
   1217c:	mov	r0, r5
   12180:	bl	136b8 <__assert_fail@plt+0x1af8>
   12184:	cmp	r8, #512	; 0x200
   12188:	bcc	121a0 <__assert_fail@plt+0x5e0>
   1218c:	movw	r1, #49275	; 0xc07b
   12190:	movt	r1, #1
   12194:	b	125dc <__assert_fail@plt+0xa1c>
   12198:	mov	r9, r7
   1219c:	movw	r8, #438	; 0x1b6
   121a0:	movw	r0, #53720	; 0xd1d8
   121a4:	movt	r0, #2
   121a8:	ldr	r7, [r0]
   121ac:	cmp	r7, r6
   121b0:	bge	121d8 <__assert_fail@plt+0x618>
   121b4:	add	r1, r7, #1
   121b8:	mov	r5, #4
   121bc:	mov	r0, #0
   121c0:	cmp	r1, r6
   121c4:	bge	121e0 <__assert_fail@plt+0x620>
   121c8:	ldr	r1, [r4, r1, lsl #2]
   121cc:	ldrb	r1, [r1]
   121d0:	cmp	r1, #112	; 0x70
   121d4:	bne	121e0 <__assert_fail@plt+0x620>
   121d8:	mov	r5, #2
   121dc:	mov	r0, #1
   121e0:	sub	r1, r6, r7
   121e4:	cmp	r1, r5
   121e8:	bcc	12504 <__assert_fail@plt+0x944>
   121ec:	cmp	r5, r1
   121f0:	bcc	12554 <__assert_fail@plt+0x994>
   121f4:	movw	r6, #53720	; 0xd1d8
   121f8:	cmp	r9, #0
   121fc:	movt	r6, #2
   12200:	beq	12218 <__assert_fail@plt+0x658>
   12204:	mov	r0, r9
   12208:	bl	119f8 <setfscreatecon@plt>
   1220c:	cmp	r0, #0
   12210:	bmi	125f8 <__assert_fail@plt+0xa38>
   12214:	ldr	r7, [r6]
   12218:	add	r1, r4, r7, lsl #2
   1221c:	ldr	r2, [r1, #4]
   12220:	ldrb	r2, [r2]
   12224:	sub	r2, r2, #98	; 0x62
   12228:	cmp	r2, #19
   1222c:	bhi	124c0 <__assert_fail@plt+0x900>
   12230:	add	r3, pc, #4
   12234:	mov	r5, #24576	; 0x6000
   12238:	ldr	pc, [r3, r2, lsl #2]
   1223c:	muleq	r1, r0, r2
   12240:	andeq	r2, r1, ip, lsl #5
   12244:	andeq	r2, r1, r0, asr #9
   12248:	andeq	r2, r1, r0, asr #9
   1224c:	andeq	r2, r1, r0, asr #9
   12250:	andeq	r2, r1, r0, asr #9
   12254:	andeq	r2, r1, r0, asr #9
   12258:	andeq	r2, r1, r0, asr #9
   1225c:	andeq	r2, r1, r0, asr #9
   12260:	andeq	r2, r1, r0, asr #9
   12264:	andeq	r2, r1, r0, asr #9
   12268:	andeq	r2, r1, r0, asr #9
   1226c:	andeq	r2, r1, r0, asr #9
   12270:	andeq	r2, r1, r0, asr #9
   12274:	andeq	r2, r1, r4, ror #6
   12278:	andeq	r2, r1, r0, asr #9
   1227c:	andeq	r2, r1, r0, asr #9
   12280:	andeq	r2, r1, r0, asr #9
   12284:	andeq	r2, r1, r0, asr #9
   12288:	andeq	r2, r1, ip, lsl #5
   1228c:	mov	r5, #8192	; 0x2000
   12290:	str	r4, [sp, #20]
   12294:	ldr	r4, [r1, #8]
   12298:	movw	r7, #50051	; 0xc383
   1229c:	ldr	r6, [r1, #12]
   122a0:	add	r3, sp, #32
   122a4:	mov	r1, #0
   122a8:	mov	r2, #0
   122ac:	movt	r7, #1
   122b0:	str	r7, [sp]
   122b4:	mov	r0, r4
   122b8:	bl	1a42c <lchmod@@Base+0x34d4>
   122bc:	cmp	r0, #0
   122c0:	ldreq	r0, [sp, #36]	; 0x24
   122c4:	cmpeq	r0, #0
   122c8:	beq	12300 <__assert_fail@plt+0x740>
   122cc:	movw	r1, #49531	; 0xc17b
   122d0:	mov	r0, #0
   122d4:	mov	r2, #5
   122d8:	movt	r1, #1
   122dc:	bl	11860 <dcgettext@plt>
   122e0:	mov	r5, r0
   122e4:	mov	r0, r4
   122e8:	bl	19304 <lchmod@@Base+0x23ac>
   122ec:	mov	r3, r0
   122f0:	mov	r0, #1
   122f4:	mov	r1, #0
   122f8:	mov	r2, r5
   122fc:	bl	11920 <error@plt>
   12300:	add	r3, sp, #24
   12304:	mov	r0, r6
   12308:	mov	r1, #0
   1230c:	mov	r2, #0
   12310:	str	r4, [sp, #12]
   12314:	str	r7, [sp]
   12318:	str	r6, [sp, #8]
   1231c:	bl	1a42c <lchmod@@Base+0x34d4>
   12320:	cmp	r0, #0
   12324:	ldreq	r0, [sp, #28]
   12328:	cmpeq	r0, #0
   1232c:	beq	123a0 <__assert_fail@plt+0x7e0>
   12330:	movw	r1, #49562	; 0xc19a
   12334:	mov	r0, #0
   12338:	mov	r2, #5
   1233c:	movt	r1, #1
   12340:	bl	11860 <dcgettext@plt>
   12344:	mov	r4, r0
   12348:	ldr	r0, [sp, #8]
   1234c:	bl	19304 <lchmod@@Base+0x23ac>
   12350:	mov	r3, r0
   12354:	mov	r0, #1
   12358:	mov	r1, #0
   1235c:	mov	r2, r4
   12360:	bl	11920 <error@plt>
   12364:	ldr	r0, [sp, #16]
   12368:	cmp	r0, #0
   1236c:	beq	12380 <__assert_fail@plt+0x7c0>
   12370:	ldr	r1, [r4, r7, lsl #2]
   12374:	mov	r2, #4096	; 0x1000
   12378:	bl	12778 <__assert_fail@plt+0xbb8>
   1237c:	ldr	r7, [r6]
   12380:	ldr	r0, [r4, r7, lsl #2]
   12384:	mov	r1, r8
   12388:	bl	11b84 <mkfifo@plt>
   1238c:	cmp	r0, #0
   12390:	bne	12700 <__assert_fail@plt+0xb40>
   12394:	cmp	sl, #0
   12398:	bne	1243c <__assert_fail@plt+0x87c>
   1239c:	b	12454 <__assert_fail@plt+0x894>
   123a0:	ldr	r0, [sp, #24]
   123a4:	movw	r1, #0
   123a8:	movw	r3, #65280	; 0xff00
   123ac:	movt	r1, #65520	; 0xfff0
   123b0:	movt	r3, #15
   123b4:	and	r1, r1, r0, lsl #12
   123b8:	uxtb	r2, r0
   123bc:	orr	r1, r1, r2
   123c0:	ldr	r2, [sp, #32]
   123c4:	and	r3, r3, r2, lsl #8
   123c8:	bfc	r2, #0, #12
   123cc:	orr	r9, r2, r0, lsr #20
   123d0:	orr	r7, r1, r3
   123d4:	and	r0, r7, r9
   123d8:	cmn	r0, #1
   123dc:	beq	12710 <__assert_fail@plt+0xb50>
   123e0:	ldr	r0, [sp, #16]
   123e4:	ldr	r4, [sp, #20]
   123e8:	movw	r6, #53720	; 0xd1d8
   123ec:	movt	r6, #2
   123f0:	cmp	r0, #0
   123f4:	beq	12408 <__assert_fail@plt+0x848>
   123f8:	ldr	r1, [r6]
   123fc:	mov	r2, r5
   12400:	ldr	r1, [r4, r1, lsl #2]
   12404:	bl	12778 <__assert_fail@plt+0xbb8>
   12408:	ldr	r0, [r6]
   1240c:	orr	r2, r5, r8
   12410:	add	r3, sp, #40	; 0x28
   12414:	ldr	r1, [r4, r0, lsl #2]
   12418:	mov	r0, #1
   1241c:	str	r9, [sp, #44]	; 0x2c
   12420:	str	r7, [sp, #40]	; 0x28
   12424:	bl	11b48 <__xmknod@plt>
   12428:	cmp	r0, #0
   1242c:	bne	12740 <__assert_fail@plt+0xb80>
   12430:	ldr	r4, [sp, #20]
   12434:	cmp	sl, #0
   12438:	beq	12454 <__assert_fail@plt+0x894>
   1243c:	ldr	r0, [r6]
   12440:	mov	r1, r8
   12444:	ldr	r0, [r4, r0, lsl #2]
   12448:	bl	16f58 <lchmod@@Base>
   1244c:	cmp	r0, #0
   12450:	bne	126b8 <__assert_fail@plt+0xaf8>
   12454:	mov	r0, #0
   12458:	sub	sp, fp, #28
   1245c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12460:	cmn	r0, #3
   12464:	bne	124b0 <__assert_fail@plt+0x8f0>
   12468:	movw	r0, #53640	; 0xd188
   1246c:	movw	r2, #49246	; 0xc05e
   12470:	mov	r1, #0
   12474:	movt	r0, #2
   12478:	movt	r2, #1
   1247c:	str	r1, [sp, #4]
   12480:	movw	r1, #49097	; 0xbfc9
   12484:	movt	r1, #1
   12488:	ldr	r3, [r0]
   1248c:	movw	r0, #53732	; 0xd1e4
   12490:	str	r2, [sp]
   12494:	movw	r2, #49232	; 0xc050
   12498:	movt	r0, #2
   1249c:	movt	r2, #1
   124a0:	ldr	r0, [r0]
   124a4:	bl	19bfc <lchmod@@Base+0x2ca4>
   124a8:	mov	r0, #0
   124ac:	bl	119a4 <exit@plt>
   124b0:	cmn	r0, #2
   124b4:	bne	126b0 <__assert_fail@plt+0xaf0>
   124b8:	mov	r0, #0
   124bc:	bl	11cc0 <__assert_fail@plt+0x100>
   124c0:	movw	r1, #49614	; 0xc1ce
   124c4:	mov	r0, #0
   124c8:	mov	r2, #5
   124cc:	movt	r1, #1
   124d0:	bl	11860 <dcgettext@plt>
   124d4:	mov	r5, r0
   124d8:	ldr	r0, [r6]
   124dc:	add	r0, r4, r0, lsl #2
   124e0:	ldr	r0, [r0, #4]
   124e4:	bl	19304 <lchmod@@Base+0x23ac>
   124e8:	mov	r3, r0
   124ec:	mov	r0, #0
   124f0:	mov	r1, #0
   124f4:	mov	r2, r5
   124f8:	bl	11920 <error@plt>
   124fc:	mov	r0, #1
   12500:	bl	11cc0 <__assert_fail@plt+0x100>
   12504:	mov	r5, r0
   12508:	cmp	r7, r6
   1250c:	bge	12634 <__assert_fail@plt+0xa74>
   12510:	movw	r1, #49335	; 0xc0b7
   12514:	mov	r0, #0
   12518:	mov	r2, #5
   1251c:	movt	r1, #1
   12520:	bl	11860 <dcgettext@plt>
   12524:	mov	r7, r0
   12528:	add	r0, r4, r6, lsl #2
   1252c:	ldr	r0, [r0, #-4]
   12530:	bl	19304 <lchmod@@Base+0x23ac>
   12534:	mov	r3, r0
   12538:	mov	r0, #0
   1253c:	mov	r1, #0
   12540:	mov	r2, r7
   12544:	bl	11920 <error@plt>
   12548:	cmp	r5, #0
   1254c:	beq	12660 <__assert_fail@plt+0xaa0>
   12550:	b	126b0 <__assert_fail@plt+0xaf0>
   12554:	movw	r1, #49414	; 0xc106
   12558:	mov	r7, r0
   1255c:	mov	r0, #0
   12560:	mov	r2, #5
   12564:	movt	r1, #1
   12568:	bl	11860 <dcgettext@plt>
   1256c:	mov	r1, r4
   12570:	mov	r4, r0
   12574:	movw	r0, #53720	; 0xd1d8
   12578:	movt	r0, #2
   1257c:	ldr	r0, [r0]
   12580:	add	r0, r0, r5
   12584:	ldr	r0, [r1, r0, lsl #2]
   12588:	bl	19304 <lchmod@@Base+0x23ac>
   1258c:	mov	r3, r0
   12590:	mov	r0, #0
   12594:	mov	r1, #0
   12598:	mov	r2, r4
   1259c:	bl	11920 <error@plt>
   125a0:	cmp	r7, #0
   125a4:	beq	126b0 <__assert_fail@plt+0xaf0>
   125a8:	movw	r0, #53720	; 0xd1d8
   125ac:	movt	r0, #2
   125b0:	ldr	r0, [r0]
   125b4:	sub	r0, r6, r0
   125b8:	cmp	r0, #4
   125bc:	bne	126b0 <__assert_fail@plt+0xaf0>
   125c0:	movw	r0, #53728	; 0xd1e0
   125c4:	movw	r1, #49431	; 0xc117
   125c8:	movt	r0, #2
   125cc:	movt	r1, #1
   125d0:	b	12688 <__assert_fail@plt+0xac8>
   125d4:	movw	r1, #49262	; 0xc06e
   125d8:	movt	r1, #1
   125dc:	mov	r0, #0
   125e0:	mov	r2, #5
   125e4:	bl	11860 <dcgettext@plt>
   125e8:	mov	r2, r0
   125ec:	mov	r0, #1
   125f0:	mov	r1, #0
   125f4:	bl	11920 <error@plt>
   125f8:	bl	11a04 <__errno_location@plt>
   125fc:	movw	r1, #49481	; 0xc149
   12600:	ldr	r4, [r0]
   12604:	mov	r0, #0
   12608:	mov	r2, #5
   1260c:	movt	r1, #1
   12610:	bl	11860 <dcgettext@plt>
   12614:	mov	r6, r0
   12618:	mov	r0, r9
   1261c:	bl	19304 <lchmod@@Base+0x23ac>
   12620:	mov	r3, r0
   12624:	mov	r0, #1
   12628:	mov	r1, r4
   1262c:	mov	r2, r6
   12630:	bl	11920 <error@plt>
   12634:	movw	r1, #49319	; 0xc0a7
   12638:	mov	r0, #0
   1263c:	mov	r2, #5
   12640:	movt	r1, #1
   12644:	bl	11860 <dcgettext@plt>
   12648:	mov	r2, r0
   1264c:	mov	r0, #0
   12650:	mov	r1, #0
   12654:	bl	11920 <error@plt>
   12658:	cmp	r5, #0
   1265c:	bne	126b0 <__assert_fail@plt+0xaf0>
   12660:	movw	r0, #53720	; 0xd1d8
   12664:	movt	r0, #2
   12668:	ldr	r0, [r0]
   1266c:	sub	r0, r6, r0
   12670:	cmp	r0, #2
   12674:	bne	126b0 <__assert_fail@plt+0xaf0>
   12678:	movw	r0, #53728	; 0xd1e0
   1267c:	movw	r1, #49360	; 0xc0d0
   12680:	movt	r0, #2
   12684:	movt	r1, #1
   12688:	ldr	r4, [r0]
   1268c:	mov	r0, #0
   12690:	mov	r2, #5
   12694:	bl	11860 <dcgettext@plt>
   12698:	movw	r2, #50714	; 0xc61a
   1269c:	mov	r3, r0
   126a0:	mov	r0, r4
   126a4:	mov	r1, #1
   126a8:	movt	r2, #1
   126ac:	bl	11a4c <__fprintf_chk@plt>
   126b0:	mov	r0, #1
   126b4:	bl	11cc0 <__assert_fail@plt+0x100>
   126b8:	bl	11a04 <__errno_location@plt>
   126bc:	movw	r1, #49637	; 0xc1e5
   126c0:	ldr	r5, [r0]
   126c4:	mov	r0, #0
   126c8:	mov	r2, #5
   126cc:	movt	r1, #1
   126d0:	bl	11860 <dcgettext@plt>
   126d4:	mov	r1, r6
   126d8:	mov	r6, r0
   126dc:	ldr	r0, [r1]
   126e0:	ldr	r1, [r4, r0, lsl #2]
   126e4:	mov	r0, #4
   126e8:	bl	18ddc <lchmod@@Base+0x1e84>
   126ec:	mov	r3, r0
   126f0:	mov	r0, #1
   126f4:	mov	r1, r5
   126f8:	mov	r2, r6
   126fc:	bl	11920 <error@plt>
   12700:	bl	11a04 <__errno_location@plt>
   12704:	ldr	r1, [r6]
   12708:	ldr	r2, [r4, r1, lsl #2]
   1270c:	b	12750 <__assert_fail@plt+0xb90>
   12710:	movw	r1, #49593	; 0xc1b9
   12714:	mov	r0, #0
   12718:	mov	r2, #5
   1271c:	movt	r1, #1
   12720:	bl	11860 <dcgettext@plt>
   12724:	mov	r2, r0
   12728:	ldr	r0, [sp, #8]
   1272c:	ldr	r3, [sp, #12]
   12730:	mov	r1, #0
   12734:	str	r0, [sp]
   12738:	mov	r0, #1
   1273c:	bl	11920 <error@plt>
   12740:	bl	11a04 <__errno_location@plt>
   12744:	ldr	r1, [r6]
   12748:	ldr	r2, [sp, #20]
   1274c:	ldr	r2, [r2, r1, lsl #2]
   12750:	ldr	r4, [r0]
   12754:	mov	r0, #0
   12758:	mov	r1, #3
   1275c:	bl	19058 <lchmod@@Base+0x2100>
   12760:	movw	r2, #50239	; 0xc43f
   12764:	mov	r3, r0
   12768:	mov	r0, #1
   1276c:	mov	r1, r4
   12770:	movt	r2, #1
   12774:	bl	11920 <error@plt>
   12778:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1277c:	add	fp, sp, #24
   12780:	sub	sp, sp, #16
   12784:	mov	r4, #0
   12788:	mov	r7, r0
   1278c:	mov	r5, r2
   12790:	mov	r6, r1
   12794:	str	r4, [sp, #4]
   12798:	str	r4, [sp]
   1279c:	ldrb	r0, [r1]
   127a0:	cmp	r0, #47	; 0x2f
   127a4:	beq	127c4 <__assert_fail@plt+0xc04>
   127a8:	mov	r0, r6
   127ac:	mov	r1, #2
   127b0:	bl	12d04 <__assert_fail@plt+0x1144>
   127b4:	mov	r4, r0
   127b8:	cmp	r0, #0
   127bc:	mov	r6, r0
   127c0:	beq	12918 <__assert_fail@plt+0xd58>
   127c4:	add	r1, sp, #4
   127c8:	mov	r0, r7
   127cc:	mov	r2, r6
   127d0:	mov	r3, r5
   127d4:	bl	11794 <selabel_lookup@plt>
   127d8:	cmn	r0, #1
   127dc:	ble	128f0 <__assert_fail@plt+0xd30>
   127e0:	mov	r0, #0
   127e4:	str	r0, [sp, #12]
   127e8:	str	r0, [sp, #8]
   127ec:	mov	r0, r6
   127f0:	bl	134f8 <__assert_fail@plt+0x1938>
   127f4:	mov	r6, r0
   127f8:	add	r0, sp, #12
   127fc:	bl	118fc <getcon@plt>
   12800:	mov	r9, #1
   12804:	cmp	r0, #0
   12808:	bmi	12848 <__assert_fail@plt+0xc88>
   1280c:	add	r1, sp, #8
   12810:	mov	r0, r6
   12814:	bl	195d4 <lchmod@@Base+0x267c>
   12818:	cmp	r0, #0
   1281c:	bmi	12848 <__assert_fail@plt+0xc88>
   12820:	mov	r0, r5
   12824:	bl	11b90 <mode_to_security_class@plt>
   12828:	cmp	r0, #0
   1282c:	beq	12848 <__assert_fail@plt+0xc88>
   12830:	mov	r2, r0
   12834:	ldr	r1, [sp, #8]
   12838:	ldr	r0, [sp, #12]
   1283c:	mov	r3, sp
   12840:	bl	11ac4 <security_compute_create@plt>
   12844:	lsr	r9, r0, #31
   12848:	bl	11a04 <__errno_location@plt>
   1284c:	ldr	r7, [r0]
   12850:	mov	r5, r0
   12854:	mov	r0, r6
   12858:	bl	136b8 <__assert_fail@plt+0x1af8>
   1285c:	ldr	r0, [sp, #12]
   12860:	bl	11af4 <freecon@plt>
   12864:	ldr	r0, [sp, #8]
   12868:	bl	11af4 <freecon@plt>
   1286c:	mvn	r8, #0
   12870:	cmp	r9, #0
   12874:	str	r7, [r5]
   12878:	bne	128e4 <__assert_fail@plt+0xd24>
   1287c:	ldr	r0, [sp, #4]
   12880:	bl	11854 <context_new@plt>
   12884:	cmp	r0, #0
   12888:	beq	128e4 <__assert_fail@plt+0xd24>
   1288c:	mov	r6, r0
   12890:	ldr	r0, [sp]
   12894:	bl	11854 <context_new@plt>
   12898:	cmp	r0, #0
   1289c:	beq	12934 <__assert_fail@plt+0xd74>
   128a0:	mov	r9, r0
   128a4:	mov	r0, r6
   128a8:	bl	117dc <context_type_get@plt>
   128ac:	cmp	r0, #0
   128b0:	beq	12938 <__assert_fail@plt+0xd78>
   128b4:	mov	r1, r0
   128b8:	mov	r0, r9
   128bc:	bl	1186c <context_type_set@plt>
   128c0:	cmp	r0, #0
   128c4:	bne	12938 <__assert_fail@plt+0xd78>
   128c8:	mov	r0, r9
   128cc:	bl	11b24 <context_str@plt>
   128d0:	cmp	r0, #0
   128d4:	beq	12938 <__assert_fail@plt+0xd78>
   128d8:	bl	119f8 <setfscreatecon@plt>
   128dc:	mov	r8, r0
   128e0:	b	12938 <__assert_fail@plt+0xd78>
   128e4:	mov	r9, #0
   128e8:	mov	r6, #0
   128ec:	b	12938 <__assert_fail@plt+0xd78>
   128f0:	bl	11a04 <__errno_location@plt>
   128f4:	mov	r5, r0
   128f8:	ldr	r0, [r0]
   128fc:	mvn	r8, #0
   12900:	mov	r9, #0
   12904:	mov	r6, #0
   12908:	cmp	r0, #2
   1290c:	moveq	r0, #61	; 0x3d
   12910:	streq	r0, [r5]
   12914:	b	12938 <__assert_fail@plt+0xd78>
   12918:	mov	r9, #0
   1291c:	mvn	r8, #0
   12920:	bl	11a04 <__errno_location@plt>
   12924:	mov	r5, r0
   12928:	mov	r6, #0
   1292c:	mov	r4, #0
   12930:	b	12938 <__assert_fail@plt+0xd78>
   12934:	mov	r9, #0
   12938:	ldr	r7, [r5]
   1293c:	mov	r0, r6
   12940:	bl	11974 <context_free@plt>
   12944:	mov	r0, r9
   12948:	bl	11974 <context_free@plt>
   1294c:	ldr	r0, [sp, #4]
   12950:	bl	11af4 <freecon@plt>
   12954:	ldr	r0, [sp]
   12958:	bl	11af4 <freecon@plt>
   1295c:	mov	r0, r4
   12960:	bl	136b8 <__assert_fail@plt+0x1af8>
   12964:	str	r7, [r5]
   12968:	mov	r0, r8
   1296c:	sub	sp, fp, #24
   12970:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12974:	push	{r4, r5, r6, r7, fp, lr}
   12978:	add	fp, sp, #16
   1297c:	sub	sp, sp, #8
   12980:	mov	r5, r0
   12984:	ldrb	r0, [r1]
   12988:	mov	r6, r2
   1298c:	mov	r4, #0
   12990:	cmp	r0, #47	; 0x2f
   12994:	beq	129b4 <__assert_fail@plt+0xdf4>
   12998:	mov	r0, r1
   1299c:	mov	r1, #2
   129a0:	bl	12d04 <__assert_fail@plt+0x1144>
   129a4:	mov	r4, r0
   129a8:	cmp	r0, #0
   129ac:	mov	r1, r0
   129b0:	beq	12a90 <__assert_fail@plt+0xed0>
   129b4:	cmp	r6, #0
   129b8:	beq	12a1c <__assert_fail@plt+0xe5c>
   129bc:	mov	r7, #0
   129c0:	stm	sp, {r1, r7}
   129c4:	mov	r0, sp
   129c8:	mov	r1, #16
   129cc:	mov	r2, #0
   129d0:	bl	1a3b0 <lchmod@@Base+0x3458>
   129d4:	mov	r6, r0
   129d8:	bl	14048 <__assert_fail@plt+0x2488>
   129dc:	cmp	r0, #0
   129e0:	beq	12a54 <__assert_fail@plt+0xe94>
   129e4:	mov	r7, #0
   129e8:	b	129fc <__assert_fail@plt+0xe3c>
   129ec:	mov	r0, r6
   129f0:	bl	14048 <__assert_fail@plt+0x2488>
   129f4:	cmp	r0, #0
   129f8:	beq	12a54 <__assert_fail@plt+0xe94>
   129fc:	ldr	r1, [r6, #24]
   12a00:	mov	r0, r5
   12a04:	bl	12a9c <__assert_fail@plt+0xedc>
   12a08:	cmn	r0, #1
   12a0c:	bgt	129ec <__assert_fail@plt+0xe2c>
   12a10:	bl	11a04 <__errno_location@plt>
   12a14:	ldr	r7, [r0]
   12a18:	b	129ec <__assert_fail@plt+0xe2c>
   12a1c:	mov	r0, r5
   12a20:	bl	12a9c <__assert_fail@plt+0xedc>
   12a24:	mov	r5, r0
   12a28:	bl	11a04 <__errno_location@plt>
   12a2c:	ldr	r7, [r0]
   12a30:	mov	r6, r0
   12a34:	mov	r0, r4
   12a38:	bl	136b8 <__assert_fail@plt+0x1af8>
   12a3c:	mvn	r0, #0
   12a40:	str	r7, [r6]
   12a44:	subs	r0, r5, r0
   12a48:	movwne	r0, #1
   12a4c:	sub	sp, fp, #16
   12a50:	pop	{r4, r5, r6, r7, fp, pc}
   12a54:	bl	11a04 <__errno_location@plt>
   12a58:	mov	r5, r0
   12a5c:	ldr	r0, [r0]
   12a60:	cmp	r0, #0
   12a64:	movne	r7, r0
   12a68:	mov	r0, r6
   12a6c:	bl	13ea0 <__assert_fail@plt+0x22e0>
   12a70:	cmp	r0, #0
   12a74:	mov	r0, r4
   12a78:	ldrne	r7, [r5]
   12a7c:	bl	136b8 <__assert_fail@plt+0x1af8>
   12a80:	clz	r0, r7
   12a84:	lsr	r0, r0, #5
   12a88:	sub	sp, fp, #16
   12a8c:	pop	{r4, r5, r6, r7, fp, pc}
   12a90:	mov	r0, #0
   12a94:	sub	sp, fp, #16
   12a98:	pop	{r4, r5, r6, r7, fp, pc}
   12a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12aa0:	add	fp, sp, #28
   12aa4:	sub	sp, sp, #116	; 0x74
   12aa8:	mov	r6, r0
   12aac:	mov	r0, #0
   12ab0:	mov	r7, r1
   12ab4:	cmp	r6, #0
   12ab8:	str	r0, [sp, #4]
   12abc:	str	r0, [sp]
   12ac0:	beq	12b14 <__assert_fail@plt+0xf54>
   12ac4:	mov	r0, r7
   12ac8:	mov	r1, #32768	; 0x8000
   12acc:	bl	1192c <open64@plt>
   12ad0:	mov	sl, r0
   12ad4:	cmn	r0, #1
   12ad8:	beq	12b50 <__assert_fail@plt+0xf90>
   12adc:	add	r2, sp, #8
   12ae0:	mov	r0, #3
   12ae4:	mov	r1, sl
   12ae8:	bl	118c0 <__fxstat64@plt>
   12aec:	mov	r5, #1
   12af0:	cmn	r0, #1
   12af4:	bgt	12b88 <__assert_fail@plt+0xfc8>
   12af8:	bl	11a04 <__errno_location@plt>
   12afc:	ldr	r5, [r0]
   12b00:	mov	r4, r0
   12b04:	mov	r8, #0
   12b08:	mvn	r9, #0
   12b0c:	mov	r6, #0
   12b10:	b	12cac <__assert_fail@plt+0x10ec>
   12b14:	mov	r0, sp
   12b18:	bl	11b0c <getfscreatecon@plt>
   12b1c:	mvn	r9, #0
   12b20:	cmp	r0, #0
   12b24:	bmi	12cd8 <__assert_fail@plt+0x1118>
   12b28:	ldr	r1, [sp]
   12b2c:	cmp	r1, #0
   12b30:	beq	12c08 <__assert_fail@plt+0x1048>
   12b34:	mov	r0, r7
   12b38:	bl	117f4 <lsetfilecon@plt>
   12b3c:	mov	r9, r0
   12b40:	bl	11a04 <__errno_location@plt>
   12b44:	ldr	r5, [r0]
   12b48:	mov	r4, r0
   12b4c:	b	12ccc <__assert_fail@plt+0x110c>
   12b50:	bl	11a04 <__errno_location@plt>
   12b54:	ldr	r5, [r0]
   12b58:	mov	r4, r0
   12b5c:	mov	r8, #0
   12b60:	mvn	r9, #0
   12b64:	cmp	r5, #40	; 0x28
   12b68:	bne	12c00 <__assert_fail@plt+0x1040>
   12b6c:	add	r2, sp, #8
   12b70:	mov	r0, #3
   12b74:	mov	r1, r7
   12b78:	bl	11b78 <__lxstat64@plt>
   12b7c:	mov	r5, #0
   12b80:	cmn	r0, #1
   12b84:	ble	12ce4 <__assert_fail@plt+0x1124>
   12b88:	ldr	r3, [sp, #24]
   12b8c:	add	r1, sp, #4
   12b90:	mov	r0, r6
   12b94:	mov	r2, r7
   12b98:	bl	11794 <selabel_lookup@plt>
   12b9c:	cmn	r0, #1
   12ba0:	ble	12bdc <__assert_fail@plt+0x101c>
   12ba4:	ldr	r0, [sp, #4]
   12ba8:	bl	11854 <context_new@plt>
   12bac:	mvn	r9, #0
   12bb0:	cmp	r0, #0
   12bb4:	beq	12c18 <__assert_fail@plt+0x1058>
   12bb8:	mov	r8, r0
   12bbc:	mov	r1, sp
   12bc0:	cmp	r5, #0
   12bc4:	beq	12c24 <__assert_fail@plt+0x1064>
   12bc8:	mov	r0, sl
   12bcc:	bl	196bc <lchmod@@Base+0x2764>
   12bd0:	cmp	r0, #0
   12bd4:	bpl	12c34 <__assert_fail@plt+0x1074>
   12bd8:	b	12c94 <__assert_fail@plt+0x10d4>
   12bdc:	bl	11a04 <__errno_location@plt>
   12be0:	ldr	r1, [r0]
   12be4:	mvn	r9, #0
   12be8:	mov	r6, #0
   12bec:	mov	r8, #0
   12bf0:	cmp	r1, #2
   12bf4:	moveq	r1, #61	; 0x3d
   12bf8:	streq	r1, [r0]
   12bfc:	b	12c98 <__assert_fail@plt+0x10d8>
   12c00:	mov	r6, #0
   12c04:	b	12cb4 <__assert_fail@plt+0x10f4>
   12c08:	bl	11a04 <__errno_location@plt>
   12c0c:	mov	r1, #61	; 0x3d
   12c10:	str	r1, [r0]
   12c14:	b	12cd8 <__assert_fail@plt+0x1118>
   12c18:	mov	r6, #0
   12c1c:	mov	r8, #0
   12c20:	b	12c98 <__assert_fail@plt+0x10d8>
   12c24:	mov	r0, r7
   12c28:	bl	19648 <lchmod@@Base+0x26f0>
   12c2c:	cmp	r0, #0
   12c30:	bmi	12c94 <__assert_fail@plt+0x10d4>
   12c34:	ldr	r0, [sp]
   12c38:	bl	11854 <context_new@plt>
   12c3c:	cmp	r0, #0
   12c40:	beq	12c94 <__assert_fail@plt+0x10d4>
   12c44:	mov	r6, r0
   12c48:	mov	r0, r8
   12c4c:	bl	117dc <context_type_get@plt>
   12c50:	cmp	r0, #0
   12c54:	beq	12c98 <__assert_fail@plt+0x10d8>
   12c58:	mov	r1, r0
   12c5c:	mov	r0, r6
   12c60:	bl	1186c <context_type_set@plt>
   12c64:	cmp	r0, #0
   12c68:	bne	12c98 <__assert_fail@plt+0x10d8>
   12c6c:	mov	r0, r6
   12c70:	bl	11b24 <context_str@plt>
   12c74:	cmp	r0, #0
   12c78:	beq	12c98 <__assert_fail@plt+0x10d8>
   12c7c:	mov	r1, r0
   12c80:	cmp	r5, #0
   12c84:	beq	12cf4 <__assert_fail@plt+0x1134>
   12c88:	mov	r0, sl
   12c8c:	bl	11a88 <fsetfilecon@plt>
   12c90:	b	12cfc <__assert_fail@plt+0x113c>
   12c94:	mov	r6, #0
   12c98:	bl	11a04 <__errno_location@plt>
   12c9c:	ldr	r5, [r0]
   12ca0:	mov	r4, r0
   12ca4:	cmn	sl, #1
   12ca8:	beq	12cb4 <__assert_fail@plt+0x10f4>
   12cac:	mov	r0, sl
   12cb0:	bl	11b6c <close@plt>
   12cb4:	mov	r0, r8
   12cb8:	bl	11974 <context_free@plt>
   12cbc:	mov	r0, r6
   12cc0:	bl	11974 <context_free@plt>
   12cc4:	ldr	r0, [sp, #4]
   12cc8:	bl	11af4 <freecon@plt>
   12ccc:	ldr	r0, [sp]
   12cd0:	bl	11af4 <freecon@plt>
   12cd4:	str	r5, [r4]
   12cd8:	mov	r0, r9
   12cdc:	sub	sp, fp, #28
   12ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ce4:	ldr	r5, [r4]
   12ce8:	mov	r8, #0
   12cec:	mov	r6, #0
   12cf0:	b	12cb4 <__assert_fail@plt+0x10f4>
   12cf4:	mov	r0, r7
   12cf8:	bl	117f4 <lsetfilecon@plt>
   12cfc:	mov	r9, r0
   12d00:	b	12c98 <__assert_fail@plt+0x10d8>
   12d04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d08:	add	fp, sp, #28
   12d0c:	sub	sp, sp, #180	; 0xb4
   12d10:	sub	sp, sp, #3072	; 0xc00
   12d14:	and	r7, r1, #3
   12d18:	mov	r8, r0
   12d1c:	sub	r0, r7, #1
   12d20:	tst	r7, r0
   12d24:	bne	12db0 <__assert_fail@plt+0x11f0>
   12d28:	cmp	r8, #0
   12d2c:	beq	12db0 <__assert_fail@plt+0x11f0>
   12d30:	ldrb	r0, [r8]
   12d34:	cmp	r0, #0
   12d38:	beq	12dcc <__assert_fail@plt+0x120c>
   12d3c:	mov	r4, r1
   12d40:	mov	r1, #1024	; 0x400
   12d44:	sub	lr, fp, #1024	; 0x400
   12d48:	cmp	r0, #47	; 0x2f
   12d4c:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12d50:	str	r1, [sp, #52]	; 0x34
   12d54:	str	r1, [sp, #1188]	; 0x4a4
   12d58:	add	r1, sp, #1184	; 0x4a0
   12d5c:	sub	r2, lr, #40	; 0x28
   12d60:	add	r1, r1, #8
   12d64:	add	r2, r2, #8
   12d68:	str	r1, [sp, #16]
   12d6c:	str	r1, [sp, #1184]	; 0x4a0
   12d70:	add	r1, sp, #48	; 0x30
   12d74:	str	r2, [sp, #12]
   12d78:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12d7c:	add	r5, r1, #8
   12d80:	mov	r0, r5
   12d84:	str	r5, [sp, #48]	; 0x30
   12d88:	str	r5, [sp, #8]
   12d8c:	bne	12dd8 <__assert_fail@plt+0x1218>
   12d90:	mov	r1, r8
   12d94:	mov	r2, #0
   12d98:	mov	r3, #1024	; 0x400
   12d9c:	bl	11bb4 <__mempcpy_chk@plt>
   12da0:	mov	r6, r0
   12da4:	mov	r0, #47	; 0x2f
   12da8:	strb	r0, [r6], #1
   12dac:	b	12df8 <__assert_fail@plt+0x1238>
   12db0:	bl	11a04 <__errno_location@plt>
   12db4:	mov	r1, #22
   12db8:	mov	r4, #0
   12dbc:	str	r1, [r0]
   12dc0:	mov	r0, r4
   12dc4:	sub	sp, fp, #28
   12dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dcc:	bl	11a04 <__errno_location@plt>
   12dd0:	mov	r1, #2
   12dd4:	b	12db8 <__assert_fail@plt+0x11f8>
   12dd8:	mov	r1, #1024	; 0x400
   12ddc:	bl	11998 <getcwd@plt>
   12de0:	cmp	r0, #0
   12de4:	beq	13314 <__assert_fail@plt+0x1754>
   12de8:	mov	r0, r5
   12dec:	mov	r1, #0
   12df0:	bl	1189c <rawmemchr@plt>
   12df4:	mov	r6, r0
   12df8:	ldrb	r0, [r8]
   12dfc:	cmp	r0, #0
   12e00:	beq	132d8 <__assert_fail@plt+0x1718>
   12e04:	and	r1, r4, #4
   12e08:	add	r9, sp, #48	; 0x30
   12e0c:	str	r7, [sp, #32]
   12e10:	str	r1, [sp, #40]	; 0x28
   12e14:	mov	r1, #0
   12e18:	str	r1, [sp, #24]
   12e1c:	mov	r1, #0
   12e20:	str	r1, [sp, #36]	; 0x24
   12e24:	mov	r1, #0
   12e28:	str	r1, [sp, #20]
   12e2c:	b	12e48 <__assert_fail@plt+0x1288>
   12e30:	cmp	r0, #0
   12e34:	beq	13150 <__assert_fail@plt+0x1590>
   12e38:	mov	r8, sl
   12e3c:	ldrb	r0, [r8]
   12e40:	cmp	r0, #0
   12e44:	beq	132e0 <__assert_fail@plt+0x1720>
   12e48:	uxtb	r1, r0
   12e4c:	cmp	r1, #47	; 0x2f
   12e50:	bne	12e60 <__assert_fail@plt+0x12a0>
   12e54:	ldrb	r0, [r8, #1]!
   12e58:	cmp	r0, #47	; 0x2f
   12e5c:	beq	12e54 <__assert_fail@plt+0x1294>
   12e60:	mov	r1, r0
   12e64:	mov	sl, r8
   12e68:	b	12e70 <__assert_fail@plt+0x12b0>
   12e6c:	ldrb	r1, [sl, #1]!
   12e70:	uxtb	r1, r1
   12e74:	cmp	r1, #0
   12e78:	cmpne	r1, #47	; 0x2f
   12e7c:	bne	12e6c <__assert_fail@plt+0x12ac>
   12e80:	sub	r2, sl, r8
   12e84:	cmp	r2, #1
   12e88:	beq	12ea0 <__assert_fail@plt+0x12e0>
   12e8c:	cmp	r2, #2
   12e90:	beq	12eb0 <__assert_fail@plt+0x12f0>
   12e94:	cmp	r2, #0
   12e98:	bne	12ef8 <__assert_fail@plt+0x1338>
   12e9c:	b	132e0 <__assert_fail@plt+0x1720>
   12ea0:	uxtb	r0, r0
   12ea4:	cmp	r0, #46	; 0x2e
   12ea8:	bne	12ef8 <__assert_fail@plt+0x1338>
   12eac:	b	12e38 <__assert_fail@plt+0x1278>
   12eb0:	uxtb	r0, r0
   12eb4:	cmp	r0, #46	; 0x2e
   12eb8:	bne	12ef8 <__assert_fail@plt+0x1338>
   12ebc:	ldrb	r0, [r8, #1]
   12ec0:	cmp	r0, #46	; 0x2e
   12ec4:	bne	12ef8 <__assert_fail@plt+0x1338>
   12ec8:	add	r0, r5, #1
   12ecc:	cmp	r6, r0
   12ed0:	bls	12e38 <__assert_fail@plt+0x1278>
   12ed4:	sub	r0, r6, #1
   12ed8:	mov	r6, r0
   12edc:	cmp	r0, r5
   12ee0:	bls	12e38 <__assert_fail@plt+0x1278>
   12ee4:	mov	r0, r6
   12ee8:	ldrb	r1, [r0, #-1]!
   12eec:	cmp	r1, #47	; 0x2f
   12ef0:	bne	12ed8 <__assert_fail@plt+0x1318>
   12ef4:	b	12e38 <__assert_fail@plt+0x1278>
   12ef8:	ldrb	r0, [r6, #-1]
   12efc:	add	r4, r2, #2
   12f00:	str	r2, [sp, #44]	; 0x2c
   12f04:	cmp	r0, #47	; 0x2f
   12f08:	movne	r0, #47	; 0x2f
   12f0c:	strbne	r0, [r6], #1
   12f10:	ldr	r0, [sp, #52]	; 0x34
   12f14:	add	r0, r5, r0
   12f18:	sub	r0, r0, r6
   12f1c:	cmp	r0, r4
   12f20:	bcs	12f58 <__assert_fail@plt+0x1398>
   12f24:	mov	r0, r9
   12f28:	bl	1952c <lchmod@@Base+0x25d4>
   12f2c:	cmp	r0, #0
   12f30:	beq	133d8 <__assert_fail@plt+0x1818>
   12f34:	sub	r0, r6, r5
   12f38:	ldr	r5, [sp, #48]	; 0x30
   12f3c:	ldr	r1, [sp, #52]	; 0x34
   12f40:	add	r6, r5, r0
   12f44:	add	r0, r5, r1
   12f48:	sub	r0, r0, r6
   12f4c:	cmp	r0, r4
   12f50:	bcc	12f24 <__assert_fail@plt+0x1364>
   12f54:	ldr	r2, [sp, #44]	; 0x2c
   12f58:	mov	r0, r6
   12f5c:	mov	r1, r8
   12f60:	mvn	r3, #0
   12f64:	bl	11bb4 <__mempcpy_chk@plt>
   12f68:	mov	r6, r0
   12f6c:	mov	r0, #0
   12f70:	strb	r0, [r6]
   12f74:	ldr	r0, [sp, #40]	; 0x28
   12f78:	cmp	r0, #0
   12f7c:	bne	12fe0 <__assert_fail@plt+0x1420>
   12f80:	ldr	r0, [sp, #1188]	; 0x4a4
   12f84:	ldr	r7, [sp, #1184]	; 0x4a0
   12f88:	sub	r9, r0, #1
   12f8c:	mov	r0, r5
   12f90:	mov	r1, r7
   12f94:	mov	r2, r9
   12f98:	bl	118cc <readlink@plt>
   12f9c:	cmp	r0, r9
   12fa0:	blt	12fb8 <__assert_fail@plt+0x13f8>
   12fa4:	add	r0, sp, #1184	; 0x4a0
   12fa8:	bl	194bc <lchmod@@Base+0x2564>
   12fac:	cmp	r0, #0
   12fb0:	bne	12f80 <__assert_fail@plt+0x13c0>
   12fb4:	b	133d8 <__assert_fail@plt+0x1818>
   12fb8:	mov	r4, r0
   12fbc:	cmp	r0, #0
   12fc0:	add	r9, sp, #48	; 0x30
   12fc4:	bmi	12fe0 <__assert_fail@plt+0x1420>
   12fc8:	ldr	r0, [sp, #24]
   12fcc:	cmp	r0, #19
   12fd0:	bgt	13060 <__assert_fail@plt+0x14a0>
   12fd4:	add	r0, r0, #1
   12fd8:	str	r0, [sp, #24]
   12fdc:	b	131c0 <__assert_fail@plt+0x1600>
   12fe0:	ldr	r7, [sp, #32]
   12fe4:	cmp	r7, #2
   12fe8:	beq	12e38 <__assert_fail@plt+0x1278>
   12fec:	ldrb	r0, [sl]
   12ff0:	cmp	r0, #47	; 0x2f
   12ff4:	bne	13130 <__assert_fail@plt+0x1570>
   12ff8:	mov	r2, sl
   12ffc:	mov	r1, r2
   13000:	ldrb	r3, [r2, #1]!
   13004:	cmp	r3, #47	; 0x2f
   13008:	beq	12ffc <__assert_fail@plt+0x143c>
   1300c:	cmp	r3, #46	; 0x2e
   13010:	bne	13128 <__assert_fail@plt+0x1568>
   13014:	add	r2, r1, #2
   13018:	ldrb	r3, [r2]
   1301c:	cmp	r3, #47	; 0x2f
   13020:	beq	12ffc <__assert_fail@plt+0x143c>
   13024:	cmp	r3, #0
   13028:	beq	13044 <__assert_fail@plt+0x1484>
   1302c:	cmp	r3, #46	; 0x2e
   13030:	bne	13130 <__assert_fail@plt+0x1570>
   13034:	ldrb	r1, [r1, #3]
   13038:	cmp	r1, #47	; 0x2f
   1303c:	cmpne	r1, #0
   13040:	bne	13130 <__assert_fail@plt+0x1570>
   13044:	mov	r0, #47	; 0x2f
   13048:	mov	r1, r5
   1304c:	mov	r2, #0
   13050:	mov	r3, #512	; 0x200
   13054:	strh	r0, [r6]
   13058:	mvn	r0, #99	; 0x63
   1305c:	b	13160 <__assert_fail@plt+0x15a0>
   13060:	ldrb	r0, [r8]
   13064:	add	lr, sp, #1024	; 0x400
   13068:	add	r2, lr, #56	; 0x38
   1306c:	cmp	r0, #0
   13070:	beq	131c0 <__assert_fail@plt+0x1600>
   13074:	ldr	r9, [sp, #44]	; 0x2c
   13078:	mov	r0, #0
   1307c:	mov	r1, r5
   13080:	strb	r0, [r6, -r9]
   13084:	ldrb	r0, [r5]
   13088:	cmp	r0, #0
   1308c:	movw	r0, #50243	; 0xc443
   13090:	movt	r0, #1
   13094:	moveq	r1, r0
   13098:	mov	r0, #3
   1309c:	bl	11b3c <__xstat64@plt>
   130a0:	cmp	r0, #0
   130a4:	bne	133e8 <__assert_fail@plt+0x1828>
   130a8:	rsb	r0, r9, #0
   130ac:	ldr	r9, [sp, #20]
   130b0:	ldrb	r1, [r8]
   130b4:	cmp	r9, #0
   130b8:	strb	r1, [r6, r0]
   130bc:	bne	130f4 <__assert_fail@plt+0x1534>
   130c0:	movw	r0, #28272	; 0x6e70
   130c4:	movw	r2, #28112	; 0x6dd0
   130c8:	movw	r3, #28168	; 0x6e08
   130cc:	mov	r1, #0
   130d0:	movt	r0, #1
   130d4:	movt	r2, #1
   130d8:	movt	r3, #1
   130dc:	str	r0, [sp]
   130e0:	mov	r0, #7
   130e4:	bl	15f94 <__assert_fail@plt+0x43d4>
   130e8:	mov	r9, r0
   130ec:	cmp	r0, #0
   130f0:	beq	133d8 <__assert_fail@plt+0x1818>
   130f4:	add	lr, sp, #1024	; 0x400
   130f8:	mov	r0, r9
   130fc:	mov	r1, r8
   13100:	add	r2, lr, #56	; 0x38
   13104:	bl	13668 <__assert_fail@plt+0x1aa8>
   13108:	cmp	r0, #0
   1310c:	str	r9, [sp, #20]
   13110:	beq	131ac <__assert_fail@plt+0x15ec>
   13114:	ldr	r7, [sp, #32]
   13118:	cmp	r7, #2
   1311c:	bne	133dc <__assert_fail@plt+0x181c>
   13120:	mov	r8, sl
   13124:	b	13294 <__assert_fail@plt+0x16d4>
   13128:	cmp	r3, #0
   1312c:	beq	13044 <__assert_fail@plt+0x1484>
   13130:	ldr	r1, [sp, #40]	; 0x28
   13134:	cmp	r1, #0
   13138:	bne	12e30 <__assert_fail@plt+0x1270>
   1313c:	bl	11a04 <__errno_location@plt>
   13140:	ldr	r0, [r0]
   13144:	cmp	r0, #22
   13148:	beq	12e38 <__assert_fail@plt+0x1278>
   1314c:	b	1316c <__assert_fail@plt+0x15ac>
   13150:	mvn	r0, #99	; 0x63
   13154:	mov	r1, r5
   13158:	mov	r2, #0
   1315c:	mov	r3, #512	; 0x200
   13160:	bl	11818 <faccessat@plt>
   13164:	cmp	r0, #0
   13168:	beq	12e38 <__assert_fail@plt+0x1278>
   1316c:	mov	r4, #1
   13170:	cmp	r7, #1
   13174:	bne	13300 <__assert_fail@plt+0x1740>
   13178:	bl	11a04 <__errno_location@plt>
   1317c:	ldr	r0, [r0]
   13180:	cmp	r0, #2
   13184:	bne	13300 <__assert_fail@plt+0x1740>
   13188:	movw	r1, #51441	; 0xc8f1
   1318c:	mov	r0, sl
   13190:	movt	r1, #1
   13194:	bl	11ba8 <strspn@plt>
   13198:	ldrb	r0, [sl, r0]
   1319c:	mov	r8, sl
   131a0:	cmp	r0, #0
   131a4:	beq	12e3c <__assert_fail@plt+0x127c>
   131a8:	b	13300 <__assert_fail@plt+0x1740>
   131ac:	add	lr, sp, #1024	; 0x400
   131b0:	mov	r0, r9
   131b4:	mov	r1, r8
   131b8:	add	r2, lr, #56	; 0x38
   131bc:	bl	135ec <__assert_fail@plt+0x1a2c>
   131c0:	mov	r0, #0
   131c4:	strb	r0, [r7, r4]
   131c8:	ldr	r0, [sp, #36]	; 0x24
   131cc:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   131d0:	tst	r0, #1
   131d4:	ldr	r0, [sp, #28]
   131d8:	subne	r0, sl, r8
   131dc:	str	r0, [sp, #28]
   131e0:	mov	r0, sl
   131e4:	bl	119c8 <strlen@plt>
   131e8:	mvn	r1, r4
   131ec:	cmp	r0, r1
   131f0:	bhi	133d8 <__assert_fail@plt+0x1818>
   131f4:	str	r0, [sp, #44]	; 0x2c
   131f8:	add	r9, r0, r4
   131fc:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   13200:	cmp	r0, r9
   13204:	bhi	1322c <__assert_fail@plt+0x166c>
   13208:	sub	lr, fp, #1024	; 0x400
   1320c:	sub	r0, lr, #40	; 0x28
   13210:	bl	1952c <lchmod@@Base+0x25d4>
   13214:	cmp	r0, #0
   13218:	beq	133d8 <__assert_fail@plt+0x1818>
   1321c:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   13220:	cmp	r0, r9
   13224:	bls	13208 <__assert_fail@plt+0x1648>
   13228:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   1322c:	ldr	r0, [sp, #36]	; 0x24
   13230:	ldr	r1, [sp, #44]	; 0x2c
   13234:	tst	r0, #1
   13238:	ldr	r0, [sp, #28]
   1323c:	add	r2, r1, #1
   13240:	addne	sl, r8, r0
   13244:	add	r0, r8, r4
   13248:	mov	r1, sl
   1324c:	bl	11800 <memmove@plt>
   13250:	mov	r0, r8
   13254:	mov	r1, r7
   13258:	mov	r2, r4
   1325c:	bl	11830 <memcpy@plt>
   13260:	ldrb	r0, [r7]
   13264:	cmp	r0, #47	; 0x2f
   13268:	bne	1329c <__assert_fail@plt+0x16dc>
   1326c:	mov	r0, r5
   13270:	mov	r1, r7
   13274:	mov	r2, #0
   13278:	mvn	r3, #0
   1327c:	bl	11bb4 <__mempcpy_chk@plt>
   13280:	mov	r6, r0
   13284:	mov	r0, #47	; 0x2f
   13288:	strb	r0, [r6], #1
   1328c:	mov	r0, #1
   13290:	str	r0, [sp, #36]	; 0x24
   13294:	add	r9, sp, #48	; 0x30
   13298:	b	12e3c <__assert_fail@plt+0x127c>
   1329c:	add	r0, r5, #1
   132a0:	mov	r1, #1
   132a4:	add	r9, sp, #48	; 0x30
   132a8:	cmp	r6, r0
   132ac:	str	r1, [sp, #36]	; 0x24
   132b0:	bls	12e3c <__assert_fail@plt+0x127c>
   132b4:	sub	r0, r6, #1
   132b8:	mov	r6, r0
   132bc:	cmp	r0, r5
   132c0:	bls	12e3c <__assert_fail@plt+0x127c>
   132c4:	mov	r0, r6
   132c8:	ldrb	r1, [r0, #-1]!
   132cc:	cmp	r1, #47	; 0x2f
   132d0:	bne	132b8 <__assert_fail@plt+0x16f8>
   132d4:	b	12e3c <__assert_fail@plt+0x127c>
   132d8:	mov	r0, #0
   132dc:	str	r0, [sp, #20]
   132e0:	add	r0, r5, #1
   132e4:	cmp	r6, r0
   132e8:	bls	132fc <__assert_fail@plt+0x173c>
   132ec:	mov	r0, r6
   132f0:	ldrb	r1, [r0, #-1]!
   132f4:	cmp	r1, #47	; 0x2f
   132f8:	moveq	r6, r0
   132fc:	mov	r4, #0
   13300:	ldr	r0, [sp, #20]
   13304:	cmp	r0, #0
   13308:	beq	1336c <__assert_fail@plt+0x17ac>
   1330c:	bl	16298 <__assert_fail@plt+0x46d8>
   13310:	b	1336c <__assert_fail@plt+0x17ac>
   13314:	bl	11a04 <__errno_location@plt>
   13318:	ldr	r5, [sp, #8]
   1331c:	mov	r6, r0
   13320:	add	r9, sp, #48	; 0x30
   13324:	ldr	r0, [r6]
   13328:	cmp	r0, #34	; 0x22
   1332c:	bne	1335c <__assert_fail@plt+0x179c>
   13330:	mov	r0, r9
   13334:	bl	194bc <lchmod@@Base+0x2564>
   13338:	cmp	r0, #0
   1333c:	beq	133d8 <__assert_fail@plt+0x1818>
   13340:	ldr	r5, [sp, #48]	; 0x30
   13344:	ldr	r1, [sp, #52]	; 0x34
   13348:	mov	r0, r5
   1334c:	bl	11998 <getcwd@plt>
   13350:	cmp	r0, #0
   13354:	beq	13324 <__assert_fail@plt+0x1764>
   13358:	b	12de8 <__assert_fail@plt+0x1228>
   1335c:	cmp	r0, #12
   13360:	beq	133d8 <__assert_fail@plt+0x1818>
   13364:	mov	r4, #1
   13368:	mov	r6, r5
   1336c:	ldr	r1, [sp, #12]
   13370:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   13374:	ldr	r7, [sp, #16]
   13378:	cmp	r0, r1
   1337c:	beq	13384 <__assert_fail@plt+0x17c4>
   13380:	bl	136b8 <__assert_fail@plt+0x1af8>
   13384:	ldr	r0, [sp, #1184]	; 0x4a0
   13388:	cmp	r0, r7
   1338c:	beq	13394 <__assert_fail@plt+0x17d4>
   13390:	bl	136b8 <__assert_fail@plt+0x1af8>
   13394:	cmp	r4, #0
   13398:	beq	133b8 <__assert_fail@plt+0x17f8>
   1339c:	ldr	r0, [sp, #48]	; 0x30
   133a0:	ldr	r1, [sp, #8]
   133a4:	mov	r4, #0
   133a8:	cmp	r0, r1
   133ac:	beq	12dc0 <__assert_fail@plt+0x1200>
   133b0:	bl	136b8 <__assert_fail@plt+0x1af8>
   133b4:	b	12dc0 <__assert_fail@plt+0x1200>
   133b8:	mov	r0, #0
   133bc:	strb	r0, [r6], -r5
   133c0:	add	r0, sp, #48	; 0x30
   133c4:	add	r1, r6, #1
   133c8:	bl	19450 <lchmod@@Base+0x24f8>
   133cc:	mov	r4, r0
   133d0:	cmp	r0, #0
   133d4:	bne	12dc0 <__assert_fail@plt+0x1200>
   133d8:	bl	1a36c <lchmod@@Base+0x3414>
   133dc:	bl	11a04 <__errno_location@plt>
   133e0:	mov	r1, #40	; 0x28
   133e4:	str	r1, [r0]
   133e8:	mov	r4, #1
   133ec:	b	13300 <__assert_fail@plt+0x1740>
   133f0:	movw	r1, #53744	; 0xd1f0
   133f4:	movt	r1, #2
   133f8:	str	r0, [r1]
   133fc:	bx	lr
   13400:	movw	r1, #53748	; 0xd1f4
   13404:	movt	r1, #2
   13408:	strb	r0, [r1]
   1340c:	bx	lr
   13410:	push	{r4, r5, r6, sl, fp, lr}
   13414:	add	fp, sp, #16
   13418:	sub	sp, sp, #8
   1341c:	movw	r0, #53732	; 0xd1e4
   13420:	movt	r0, #2
   13424:	ldr	r0, [r0]
   13428:	bl	1b228 <lchmod@@Base+0x42d0>
   1342c:	cmp	r0, #0
   13430:	beq	13458 <__assert_fail@plt+0x1898>
   13434:	movw	r0, #53748	; 0xd1f4
   13438:	movt	r0, #2
   1343c:	ldrb	r0, [r0]
   13440:	cmp	r0, #0
   13444:	beq	13478 <__assert_fail@plt+0x18b8>
   13448:	bl	11a04 <__errno_location@plt>
   1344c:	ldr	r0, [r0]
   13450:	cmp	r0, #32
   13454:	bne	13478 <__assert_fail@plt+0x18b8>
   13458:	movw	r0, #53728	; 0xd1e0
   1345c:	movt	r0, #2
   13460:	ldr	r0, [r0]
   13464:	bl	1b228 <lchmod@@Base+0x42d0>
   13468:	cmp	r0, #0
   1346c:	subeq	sp, fp, #16
   13470:	popeq	{r4, r5, r6, sl, fp, pc}
   13474:	b	134e8 <__assert_fail@plt+0x1928>
   13478:	movw	r1, #50223	; 0xc42f
   1347c:	mov	r0, #0
   13480:	mov	r2, #5
   13484:	movt	r1, #1
   13488:	bl	11860 <dcgettext@plt>
   1348c:	mov	r4, r0
   13490:	movw	r0, #53744	; 0xd1f0
   13494:	movt	r0, #2
   13498:	ldr	r6, [r0]
   1349c:	bl	11a04 <__errno_location@plt>
   134a0:	ldr	r5, [r0]
   134a4:	cmp	r6, #0
   134a8:	bne	134c4 <__assert_fail@plt+0x1904>
   134ac:	movw	r2, #50239	; 0xc43f
   134b0:	mov	r0, #0
   134b4:	mov	r1, r5
   134b8:	mov	r3, r4
   134bc:	movt	r2, #1
   134c0:	b	134e4 <__assert_fail@plt+0x1924>
   134c4:	mov	r0, r6
   134c8:	bl	18f7c <lchmod@@Base+0x2024>
   134cc:	movw	r2, #50235	; 0xc43b
   134d0:	mov	r3, r0
   134d4:	str	r4, [sp]
   134d8:	mov	r0, #0
   134dc:	mov	r1, r5
   134e0:	movt	r2, #1
   134e4:	bl	11920 <error@plt>
   134e8:	movw	r0, #53644	; 0xd18c
   134ec:	movt	r0, #2
   134f0:	ldr	r0, [r0]
   134f4:	bl	11824 <_exit@plt>
   134f8:	push	{fp, lr}
   134fc:	mov	fp, sp
   13500:	bl	13558 <__assert_fail@plt+0x1998>
   13504:	cmp	r0, #0
   13508:	popne	{fp, pc}
   1350c:	bl	1a36c <lchmod@@Base+0x3414>
   13510:	push	{r4, r5, r6, sl, fp, lr}
   13514:	add	fp, sp, #16
   13518:	mov	r5, r0
   1351c:	mov	r4, r0
   13520:	ldrb	r6, [r5], #-1
   13524:	bl	1b1a4 <lchmod@@Base+0x424c>
   13528:	sub	r2, r0, r4
   1352c:	sub	r0, r6, #47	; 0x2f
   13530:	clz	r0, r0
   13534:	lsr	r1, r0, #5
   13538:	mov	r0, r2
   1353c:	cmp	r2, r1
   13540:	bls	13554 <__assert_fail@plt+0x1994>
   13544:	ldrb	r3, [r5, r0]
   13548:	sub	r2, r0, #1
   1354c:	cmp	r3, #47	; 0x2f
   13550:	beq	13538 <__assert_fail@plt+0x1978>
   13554:	pop	{r4, r5, r6, sl, fp, pc}
   13558:	push	{r4, r5, r6, sl, fp, lr}
   1355c:	add	fp, sp, #16
   13560:	mov	r6, r0
   13564:	mov	r4, r0
   13568:	ldrb	r5, [r6], #-1
   1356c:	bl	1b1a4 <lchmod@@Base+0x424c>
   13570:	sub	r1, r0, r4
   13574:	sub	r0, r5, #47	; 0x2f
   13578:	clz	r0, r0
   1357c:	lsr	r0, r0, #5
   13580:	mov	r5, r1
   13584:	cmp	r1, r0
   13588:	bls	1359c <__assert_fail@plt+0x19dc>
   1358c:	ldrb	r2, [r6, r5]
   13590:	sub	r1, r5, #1
   13594:	cmp	r2, #47	; 0x2f
   13598:	beq	13580 <__assert_fail@plt+0x19c0>
   1359c:	cmp	r5, #0
   135a0:	mov	r0, r5
   135a4:	addeq	r0, r0, #1
   135a8:	add	r0, r0, #1
   135ac:	bl	1b120 <lchmod@@Base+0x41c8>
   135b0:	mov	r6, r0
   135b4:	cmp	r0, #0
   135b8:	beq	135e4 <__assert_fail@plt+0x1a24>
   135bc:	mov	r0, r6
   135c0:	mov	r1, r4
   135c4:	mov	r2, r5
   135c8:	bl	11830 <memcpy@plt>
   135cc:	cmp	r5, #0
   135d0:	moveq	r0, #46	; 0x2e
   135d4:	moveq	r5, #1
   135d8:	strbeq	r0, [r6]
   135dc:	mov	r0, #0
   135e0:	strb	r0, [r6, r5]
   135e4:	mov	r0, r6
   135e8:	pop	{r4, r5, r6, sl, fp, pc}
   135ec:	push	{r4, r5, r6, r7, fp, lr}
   135f0:	add	fp, sp, #16
   135f4:	cmp	r0, #0
   135f8:	beq	13660 <__assert_fail@plt+0x1aa0>
   135fc:	mov	r5, r0
   13600:	mov	r0, #24
   13604:	mov	r6, r2
   13608:	mov	r7, r1
   1360c:	bl	19e30 <lchmod@@Base+0x2ed8>
   13610:	mov	r4, r0
   13614:	mov	r0, r7
   13618:	bl	1a334 <lchmod@@Base+0x33dc>
   1361c:	str	r0, [r4]
   13620:	ldrd	r0, [r6, #96]	; 0x60
   13624:	str	r0, [r4, #8]
   13628:	str	r1, [r4, #12]
   1362c:	ldrd	r0, [r6]
   13630:	str	r1, [r4, #20]
   13634:	str	r0, [r4, #16]
   13638:	mov	r0, r5
   1363c:	mov	r1, r4
   13640:	bl	16ae8 <__assert_fail@plt+0x4f28>
   13644:	cmp	r0, #0
   13648:	beq	13664 <__assert_fail@plt+0x1aa4>
   1364c:	cmp	r0, r4
   13650:	beq	13660 <__assert_fail@plt+0x1aa0>
   13654:	mov	r0, r4
   13658:	pop	{r4, r5, r6, r7, fp, lr}
   1365c:	b	16e70 <__assert_fail@plt+0x52b0>
   13660:	pop	{r4, r5, r6, r7, fp, pc}
   13664:	bl	1a36c <lchmod@@Base+0x3414>
   13668:	cmp	r0, #0
   1366c:	moveq	r0, #0
   13670:	bxeq	lr
   13674:	push	{r4, r5, fp, lr}
   13678:	add	fp, sp, #8
   1367c:	sub	sp, sp, #24
   13680:	str	r1, [sp]
   13684:	mov	ip, sp
   13688:	mov	r1, sp
   1368c:	ldrd	r4, [r2, #96]	; 0x60
   13690:	add	r3, ip, #8
   13694:	add	ip, ip, #16
   13698:	strd	r4, [r3]
   1369c:	ldrd	r2, [r2]
   136a0:	strd	r2, [ip]
   136a4:	bl	15ce0 <__assert_fail@plt+0x4120>
   136a8:	cmp	r0, #0
   136ac:	movwne	r0, #1
   136b0:	sub	sp, fp, #8
   136b4:	pop	{r4, r5, fp, pc}
   136b8:	push	{r4, r5, r6, sl, fp, lr}
   136bc:	add	fp, sp, #16
   136c0:	mov	r4, r0
   136c4:	bl	11a04 <__errno_location@plt>
   136c8:	ldr	r6, [r0]
   136cc:	mov	r5, r0
   136d0:	mov	r0, r4
   136d4:	bl	1180c <free@plt>
   136d8:	str	r6, [r5]
   136dc:	pop	{r4, r5, r6, sl, fp, pc}
   136e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136e4:	add	fp, sp, #28
   136e8:	sub	sp, sp, #28
   136ec:	cmp	r1, #4096	; 0x1000
   136f0:	bcs	1370c <__assert_fail@plt+0x1b4c>
   136f4:	mov	r7, r0
   136f8:	and	r0, r1, #516	; 0x204
   136fc:	mov	r5, r1
   13700:	cmp	r0, #516	; 0x204
   13704:	tstne	r5, #18
   13708:	bne	13728 <__assert_fail@plt+0x1b68>
   1370c:	bl	11a04 <__errno_location@plt>
   13710:	mov	r1, #22
   13714:	mov	r4, #0
   13718:	str	r1, [r0]
   1371c:	mov	r0, r4
   13720:	sub	sp, fp, #28
   13724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13728:	mov	r0, #1
   1372c:	mov	r1, #96	; 0x60
   13730:	mov	sl, r2
   13734:	bl	1b0cc <lchmod@@Base+0x4174>
   13738:	cmp	r0, #0
   1373c:	beq	13b44 <__assert_fail@plt+0x1f84>
   13740:	mov	r4, r0
   13744:	mvn	r0, #99	; 0x63
   13748:	tst	r5, #2
   1374c:	mov	r1, r5
   13750:	str	r0, [r4, #32]
   13754:	bic	r0, r5, #516	; 0x204
   13758:	str	sl, [r4, #44]	; 0x2c
   1375c:	str	r4, [sp, #24]
   13760:	orrne	r1, r0, #4
   13764:	str	r1, [r4, #48]	; 0x30
   13768:	ldr	r0, [r7]
   1376c:	cmp	r0, #0
   13770:	beq	137a8 <__assert_fail@plt+0x1be8>
   13774:	add	r6, r7, #4
   13778:	mov	r4, #0
   1377c:	bl	119c8 <strlen@plt>
   13780:	cmp	r0, r4
   13784:	movhi	r4, r0
   13788:	ldr	r0, [r6], #4
   1378c:	cmp	r0, #0
   13790:	bne	1377c <__assert_fail@plt+0x1bbc>
   13794:	add	r0, r4, #1
   13798:	ldr	r4, [sp, #24]
   1379c:	cmp	r0, #4096	; 0x1000
   137a0:	movls	r0, #4096	; 0x1000
   137a4:	b	137ac <__assert_fail@plt+0x1bec>
   137a8:	mov	r0, #4096	; 0x1000
   137ac:	ldr	r1, [r4, #36]	; 0x24
   137b0:	add	r0, r0, #256	; 0x100
   137b4:	adds	r1, r0, r1
   137b8:	bcc	137dc <__assert_fail@plt+0x1c1c>
   137bc:	ldr	r0, [r4, #24]
   137c0:	bl	136b8 <__assert_fail@plt+0x1af8>
   137c4:	mov	r0, #0
   137c8:	str	r0, [r4, #24]
   137cc:	bl	11a04 <__errno_location@plt>
   137d0:	mov	r1, #36	; 0x24
   137d4:	str	r1, [r0]
   137d8:	b	13b3c <__assert_fail@plt+0x1f7c>
   137dc:	str	r1, [r4, #36]	; 0x24
   137e0:	ldr	r0, [r4, #24]
   137e4:	bl	1b150 <lchmod@@Base+0x41f8>
   137e8:	cmp	r0, #0
   137ec:	beq	13860 <__assert_fail@plt+0x1ca0>
   137f0:	str	r0, [r4, #24]
   137f4:	ldr	r0, [r7]
   137f8:	cmp	r0, #0
   137fc:	beq	13874 <__assert_fail@plt+0x1cb4>
   13800:	mov	r0, #176	; 0xb0
   13804:	bl	1b120 <lchmod@@Base+0x41c8>
   13808:	cmp	r0, #0
   1380c:	beq	13b34 <__assert_fail@plt+0x1f74>
   13810:	ldr	r1, [r4, #24]
   13814:	mov	r6, r0
   13818:	mov	r0, #0
   1381c:	mov	r2, #196608	; 0x30000
   13820:	strb	r0, [r6, #168]	; 0xa8
   13824:	str	r2, [r6, #58]	; 0x3a
   13828:	mvn	r2, #0
   1382c:	str	r4, [r6, #44]	; 0x2c
   13830:	str	r2, [r6, #48]	; 0x30
   13834:	str	r0, [r6, #52]	; 0x34
   13838:	str	r0, [r6, #12]
   1383c:	str	r0, [r6, #16]
   13840:	str	r0, [r6, #20]
   13844:	str	r1, [r6, #28]
   13848:	str	r0, [r6, #32]
   1384c:	cmp	sl, #0
   13850:	beq	13880 <__assert_fail@plt+0x1cc0>
   13854:	ldrb	r0, [r4, #49]	; 0x31
   13858:	ubfx	r0, r0, #2, #1
   1385c:	b	13884 <__assert_fail@plt+0x1cc4>
   13860:	ldr	r0, [r4, #24]
   13864:	bl	136b8 <__assert_fail@plt+0x1af8>
   13868:	mov	r0, #0
   1386c:	str	r0, [r4, #24]
   13870:	b	13b3c <__assert_fail@plt+0x1f7c>
   13874:	mov	r6, #0
   13878:	cmp	sl, #0
   1387c:	bne	13854 <__assert_fail@plt+0x1c94>
   13880:	mov	r0, #1
   13884:	ldr	r4, [r7]
   13888:	cmp	r4, #0
   1388c:	beq	139f8 <__assert_fail@plt+0x1e38>
   13890:	eor	r0, r0, #1
   13894:	str	r6, [sp, #20]
   13898:	and	r1, r5, #2048	; 0x800
   1389c:	mov	r9, #0
   138a0:	mov	r6, #0
   138a4:	str	sl, [sp, #8]
   138a8:	str	r0, [sp, #12]
   138ac:	mov	r0, #0
   138b0:	str	r1, [sp, #16]
   138b4:	str	r0, [sp, #4]
   138b8:	b	138e4 <__assert_fail@plt+0x1d24>
   138bc:	cmp	r9, #0
   138c0:	str	r4, [r5, #8]
   138c4:	beq	139ec <__assert_fail@plt+0x1e2c>
   138c8:	ldr	r0, [sp, #4]
   138cc:	str	r5, [sp, #4]
   138d0:	str	r5, [r0, #8]
   138d4:	ldr	r4, [r7, #4]!
   138d8:	add	r6, r6, #1
   138dc:	cmp	r4, #0
   138e0:	beq	13a14 <__assert_fail@plt+0x1e54>
   138e4:	mov	r0, r4
   138e8:	bl	119c8 <strlen@plt>
   138ec:	mov	r8, r0
   138f0:	ldr	r0, [sp, #16]
   138f4:	cmp	r0, #0
   138f8:	bne	13930 <__assert_fail@plt+0x1d70>
   138fc:	cmp	r8, #3
   13900:	bcc	13930 <__assert_fail@plt+0x1d70>
   13904:	add	r0, r8, r4
   13908:	ldrb	r0, [r0, #-1]
   1390c:	cmp	r0, #47	; 0x2f
   13910:	bne	13930 <__assert_fail@plt+0x1d70>
   13914:	sub	r0, r4, #2
   13918:	ldrb	r1, [r0, r8]
   1391c:	cmp	r1, #47	; 0x2f
   13920:	bne	13930 <__assert_fail@plt+0x1d70>
   13924:	sub	r8, r8, #1
   13928:	cmp	r8, #1
   1392c:	bhi	13918 <__assert_fail@plt+0x1d58>
   13930:	add	r0, r8, #176	; 0xb0
   13934:	bic	r0, r0, #7
   13938:	bl	1b120 <lchmod@@Base+0x41c8>
   1393c:	cmp	r0, #0
   13940:	beq	13a04 <__assert_fail@plt+0x1e44>
   13944:	add	sl, r0, #168	; 0xa8
   13948:	mov	r5, r0
   1394c:	mov	r1, r4
   13950:	mov	r2, r8
   13954:	mov	r0, sl
   13958:	bl	11830 <memcpy@plt>
   1395c:	ldr	r0, [sp, #24]
   13960:	ldr	r2, [sp, #20]
   13964:	mov	r4, #0
   13968:	strb	r4, [sl, r8]
   1396c:	str	r2, [r5, #4]
   13970:	add	r2, r5, #44	; 0x2c
   13974:	ldr	r1, [r0, #24]
   13978:	stm	r2, {r0, r4, r8}
   1397c:	mov	r2, #196608	; 0x30000
   13980:	str	r2, [r5, #58]	; 0x3a
   13984:	ldr	r2, [sp, #12]
   13988:	str	r4, [r5, #12]
   1398c:	str	r4, [r5, #16]
   13990:	str	r4, [r5, #20]
   13994:	str	sl, [r5, #24]
   13998:	str	r1, [r5, #28]
   1399c:	clz	r1, r9
   139a0:	str	r4, [r5, #32]
   139a4:	lsr	r1, r1, #5
   139a8:	orrs	r1, r2, r1
   139ac:	bne	139c4 <__assert_fail@plt+0x1e04>
   139b0:	mov	r0, #2
   139b4:	str	r0, [r5, #112]	; 0x70
   139b8:	str	r4, [r5, #116]	; 0x74
   139bc:	mov	r0, #11
   139c0:	b	139d0 <__assert_fail@plt+0x1e10>
   139c4:	mov	r1, r5
   139c8:	mov	r2, #0
   139cc:	bl	13bd8 <__assert_fail@plt+0x2018>
   139d0:	ldr	sl, [sp, #8]
   139d4:	strh	r0, [r5, #56]	; 0x38
   139d8:	cmp	sl, #0
   139dc:	beq	138bc <__assert_fail@plt+0x1cfc>
   139e0:	str	r9, [r5, #8]
   139e4:	mov	r9, r5
   139e8:	b	138d4 <__assert_fail@plt+0x1d14>
   139ec:	mov	r0, r5
   139f0:	str	r5, [sp, #4]
   139f4:	b	139e4 <__assert_fail@plt+0x1e24>
   139f8:	ldr	r4, [sp, #24]
   139fc:	mov	r9, #0
   13a00:	b	13a48 <__assert_fail@plt+0x1e88>
   13a04:	ldr	r6, [sp, #20]
   13a08:	cmp	r9, #0
   13a0c:	bne	13b10 <__assert_fail@plt+0x1f50>
   13a10:	b	13b28 <__assert_fail@plt+0x1f68>
   13a14:	cmp	sl, #0
   13a18:	beq	13a40 <__assert_fail@plt+0x1e80>
   13a1c:	ldr	r4, [sp, #24]
   13a20:	cmp	r6, #2
   13a24:	bcc	13a44 <__assert_fail@plt+0x1e84>
   13a28:	mov	r0, r4
   13a2c:	mov	r1, r9
   13a30:	mov	r2, r6
   13a34:	bl	13d70 <__assert_fail@plt+0x21b0>
   13a38:	mov	r9, r0
   13a3c:	b	13a44 <__assert_fail@plt+0x1e84>
   13a40:	ldr	r4, [sp, #24]
   13a44:	ldr	r6, [sp, #20]
   13a48:	mov	r0, #176	; 0xb0
   13a4c:	bl	1b120 <lchmod@@Base+0x41c8>
   13a50:	cmp	r0, #0
   13a54:	beq	13ae8 <__assert_fail@plt+0x1f28>
   13a58:	ldr	r2, [r4, #24]
   13a5c:	mov	r1, #0
   13a60:	mov	r3, #196608	; 0x30000
   13a64:	str	r0, [r4]
   13a68:	str	r1, [r0, #52]	; 0x34
   13a6c:	strb	r1, [r0, #168]	; 0xa8
   13a70:	str	r4, [r0, #44]	; 0x2c
   13a74:	str	r3, [r0, #58]	; 0x3a
   13a78:	str	r2, [r0, #28]
   13a7c:	mov	r2, #9
   13a80:	str	r1, [r0, #32]
   13a84:	strh	r2, [r0, #56]	; 0x38
   13a88:	str	r9, [r0, #8]
   13a8c:	str	r1, [r0, #12]
   13a90:	str	r1, [r0, #16]
   13a94:	str	r1, [r0, #20]
   13a98:	mov	r1, #1
   13a9c:	str	r1, [r0, #48]	; 0x30
   13aa0:	ldrh	r0, [r4, #48]	; 0x30
   13aa4:	movw	r1, #258	; 0x102
   13aa8:	tst	r0, r1
   13aac:	beq	13b4c <__assert_fail@plt+0x1f8c>
   13ab0:	movw	r0, #14008	; 0x36b8
   13ab4:	movw	r2, #22756	; 0x58e4
   13ab8:	movw	r3, #22788	; 0x5904
   13abc:	mov	r1, #0
   13ac0:	movt	r0, #1
   13ac4:	movt	r2, #1
   13ac8:	movt	r3, #1
   13acc:	str	r0, [sp]
   13ad0:	mov	r0, #31
   13ad4:	bl	15f94 <__assert_fail@plt+0x43d4>
   13ad8:	cmp	r0, #0
   13adc:	str	r0, [r4, #56]	; 0x38
   13ae0:	bne	13b64 <__assert_fail@plt+0x1fa4>
   13ae4:	b	13af0 <__assert_fail@plt+0x1f30>
   13ae8:	mov	r0, #0
   13aec:	str	r0, [r4]
   13af0:	cmp	r9, #0
   13af4:	bne	13b10 <__assert_fail@plt+0x1f50>
   13af8:	b	13b28 <__assert_fail@plt+0x1f68>
   13afc:	mov	r0, r9
   13b00:	bl	136b8 <__assert_fail@plt+0x1af8>
   13b04:	cmp	r4, #0
   13b08:	mov	r9, r4
   13b0c:	beq	13b28 <__assert_fail@plt+0x1f68>
   13b10:	ldrd	r4, [r9, #8]
   13b14:	cmp	r5, #0
   13b18:	beq	13afc <__assert_fail@plt+0x1f3c>
   13b1c:	mov	r0, r5
   13b20:	bl	11b9c <closedir@plt>
   13b24:	b	13afc <__assert_fail@plt+0x1f3c>
   13b28:	mov	r0, r6
   13b2c:	bl	136b8 <__assert_fail@plt+0x1af8>
   13b30:	ldr	r4, [sp, #24]
   13b34:	ldr	r0, [r4, #24]
   13b38:	bl	136b8 <__assert_fail@plt+0x1af8>
   13b3c:	mov	r0, r4
   13b40:	bl	136b8 <__assert_fail@plt+0x1af8>
   13b44:	mov	r4, #0
   13b48:	b	1371c <__assert_fail@plt+0x1b5c>
   13b4c:	mov	r0, #32
   13b50:	bl	1b120 <lchmod@@Base+0x41c8>
   13b54:	cmp	r0, #0
   13b58:	str	r0, [r4, #56]	; 0x38
   13b5c:	beq	13af0 <__assert_fail@plt+0x1f30>
   13b60:	bl	1b2ac <lchmod@@Base+0x4354>
   13b64:	ldr	r4, [sp, #24]
   13b68:	ldr	r0, [r4, #48]	; 0x30
   13b6c:	tst	r0, #516	; 0x204
   13b70:	bne	13bc8 <__assert_fail@plt+0x2008>
   13b74:	mov	r1, #32768	; 0x8000
   13b78:	tst	r0, #512	; 0x200
   13b7c:	and	r1, r1, r0, lsl #11
   13b80:	orr	r1, r1, #18688	; 0x4900
   13b84:	orr	r2, r1, #524288	; 0x80000
   13b88:	bne	13ba0 <__assert_fail@plt+0x1fe0>
   13b8c:	movw	r0, #50243	; 0xc443
   13b90:	mov	r1, r2
   13b94:	movt	r0, #1
   13b98:	bl	1b618 <lchmod@@Base+0x46c0>
   13b9c:	b	13bb0 <__assert_fail@plt+0x1ff0>
   13ba0:	ldr	r0, [r4, #32]
   13ba4:	movw	r1, #50243	; 0xc443
   13ba8:	movt	r1, #1
   13bac:	bl	17618 <lchmod@@Base+0x6c0>
   13bb0:	cmn	r0, #1
   13bb4:	str	r0, [r4, #28]
   13bb8:	bgt	13bc8 <__assert_fail@plt+0x2008>
   13bbc:	ldr	r0, [r4, #48]	; 0x30
   13bc0:	orr	r0, r0, #4
   13bc4:	str	r0, [r4, #48]	; 0x30
   13bc8:	add	r0, r4, #60	; 0x3c
   13bcc:	mvn	r1, #0
   13bd0:	bl	16e90 <__assert_fail@plt+0x52d0>
   13bd4:	b	1371c <__assert_fail@plt+0x1b5c>
   13bd8:	push	{r4, r5, r6, sl, fp, lr}
   13bdc:	add	fp, sp, #16
   13be0:	sub	sp, sp, #8
   13be4:	mov	r4, r1
   13be8:	ldr	r1, [r0, #48]	; 0x30
   13bec:	ldr	r3, [r4, #48]	; 0x30
   13bf0:	add	r5, r4, #64	; 0x40
   13bf4:	cmp	r3, #0
   13bf8:	andeq	r3, r1, #1
   13bfc:	orreq	r2, r3, r2
   13c00:	cmp	r2, #0
   13c04:	andseq	r1, r1, #2
   13c08:	beq	13c64 <__assert_fail@plt+0x20a4>
   13c0c:	ldr	r1, [r4, #24]
   13c10:	mov	r0, #3
   13c14:	mov	r2, r5
   13c18:	bl	11b3c <__xstat64@plt>
   13c1c:	cmp	r0, #0
   13c20:	beq	13ce4 <__assert_fail@plt+0x2124>
   13c24:	bl	11a04 <__errno_location@plt>
   13c28:	mov	r6, r0
   13c2c:	ldr	r0, [r0]
   13c30:	cmp	r0, #2
   13c34:	bne	13c94 <__assert_fail@plt+0x20d4>
   13c38:	ldr	r1, [r4, #24]
   13c3c:	mov	r0, #3
   13c40:	mov	r2, r5
   13c44:	bl	11b78 <__lxstat64@plt>
   13c48:	cmp	r0, #0
   13c4c:	bne	13c90 <__assert_fail@plt+0x20d0>
   13c50:	mov	r0, #0
   13c54:	str	r0, [r6]
   13c58:	mov	r0, #13
   13c5c:	sub	sp, fp, #16
   13c60:	pop	{r4, r5, r6, sl, fp, pc}
   13c64:	ldr	r1, [r0, #32]
   13c68:	ldr	r2, [r4, #24]
   13c6c:	mov	r0, #256	; 0x100
   13c70:	mov	r3, r5
   13c74:	str	r0, [sp]
   13c78:	mov	r0, #3
   13c7c:	bl	118a8 <__fxstatat64@plt>
   13c80:	cmp	r0, #0
   13c84:	beq	13ce4 <__assert_fail@plt+0x2124>
   13c88:	bl	11a04 <__errno_location@plt>
   13c8c:	mov	r6, r0
   13c90:	ldr	r0, [r6]
   13c94:	vmov.i32	q8, #0	; 0x00000000
   13c98:	add	r1, r5, #80	; 0x50
   13c9c:	str	r0, [r4, #32]
   13ca0:	mov	r0, #0
   13ca4:	str	r0, [r5, #96]	; 0x60
   13ca8:	vst1.64	{d16-d17}, [r1]
   13cac:	add	r1, r5, #64	; 0x40
   13cb0:	vst1.64	{d16-d17}, [r1]
   13cb4:	add	r1, r5, #48	; 0x30
   13cb8:	vst1.64	{d16-d17}, [r1]
   13cbc:	add	r1, r5, #32
   13cc0:	vst1.64	{d16-d17}, [r1]
   13cc4:	add	r1, r5, #16
   13cc8:	vst1.64	{d16-d17}, [r1]
   13ccc:	mov	r1, #100	; 0x64
   13cd0:	vst1.64	{d16-d17}, [r5], r1
   13cd4:	str	r0, [r5]
   13cd8:	mov	r0, #10
   13cdc:	sub	sp, fp, #16
   13ce0:	pop	{r4, r5, r6, sl, fp, pc}
   13ce4:	ldr	r0, [r4, #80]	; 0x50
   13ce8:	and	r0, r0, #61440	; 0xf000
   13cec:	cmp	r0, #40960	; 0xa000
   13cf0:	beq	13d58 <__assert_fail@plt+0x2198>
   13cf4:	cmp	r0, #32768	; 0x8000
   13cf8:	beq	13d4c <__assert_fail@plt+0x218c>
   13cfc:	cmp	r0, #16384	; 0x4000
   13d00:	bne	13d64 <__assert_fail@plt+0x21a4>
   13d04:	ldrb	r1, [r4, #168]	; 0xa8
   13d08:	mov	r0, #1
   13d0c:	cmp	r1, #46	; 0x2e
   13d10:	bne	13d68 <__assert_fail@plt+0x21a8>
   13d14:	ldrb	r1, [r4, #169]	; 0xa9
   13d18:	cmp	r1, #0
   13d1c:	beq	13d34 <__assert_fail@plt+0x2174>
   13d20:	cmp	r1, #46	; 0x2e
   13d24:	bne	13d68 <__assert_fail@plt+0x21a8>
   13d28:	ldrb	r1, [r4, #170]	; 0xaa
   13d2c:	cmp	r1, #0
   13d30:	bne	13d68 <__assert_fail@plt+0x21a8>
   13d34:	ldr	r1, [r4, #48]	; 0x30
   13d38:	mov	r0, #5
   13d3c:	cmp	r1, #0
   13d40:	movweq	r0, #1
   13d44:	sub	sp, fp, #16
   13d48:	pop	{r4, r5, r6, sl, fp, pc}
   13d4c:	mov	r0, #8
   13d50:	sub	sp, fp, #16
   13d54:	pop	{r4, r5, r6, sl, fp, pc}
   13d58:	mov	r0, #12
   13d5c:	sub	sp, fp, #16
   13d60:	pop	{r4, r5, r6, sl, fp, pc}
   13d64:	mov	r0, #3
   13d68:	sub	sp, fp, #16
   13d6c:	pop	{r4, r5, r6, sl, fp, pc}
   13d70:	push	{r4, r5, r6, r7, fp, lr}
   13d74:	add	fp, sp, #16
   13d78:	mov	r6, r0
   13d7c:	ldr	r7, [r0, #44]	; 0x2c
   13d80:	ldr	r0, [r0, #40]	; 0x28
   13d84:	mov	r5, r2
   13d88:	mov	r4, r1
   13d8c:	cmp	r0, r2
   13d90:	bcs	13dc8 <__assert_fail@plt+0x2208>
   13d94:	add	r1, r5, #40	; 0x28
   13d98:	cmn	r1, #-1073741823	; 0xc0000001
   13d9c:	str	r1, [r6, #40]	; 0x28
   13da0:	bhi	13e6c <__assert_fail@plt+0x22ac>
   13da4:	ldr	r0, [r6, #8]
   13da8:	lsl	r1, r1, #2
   13dac:	bl	1b150 <lchmod@@Base+0x41f8>
   13db0:	cmp	r0, #0
   13db4:	beq	13e6c <__assert_fail@plt+0x22ac>
   13db8:	str	r0, [r6, #8]
   13dbc:	cmp	r4, #0
   13dc0:	bne	13dd4 <__assert_fail@plt+0x2214>
   13dc4:	b	13de8 <__assert_fail@plt+0x2228>
   13dc8:	ldr	r0, [r6, #8]
   13dcc:	cmp	r4, #0
   13dd0:	beq	13de8 <__assert_fail@plt+0x2228>
   13dd4:	str	r4, [r0], #4
   13dd8:	ldr	r4, [r4, #8]
   13ddc:	cmp	r4, #0
   13de0:	bne	13dd4 <__assert_fail@plt+0x2214>
   13de4:	ldr	r0, [r6, #8]
   13de8:	mov	r1, r5
   13dec:	mov	r2, #4
   13df0:	mov	r3, r7
   13df4:	bl	11ae8 <qsort@plt>
   13df8:	ldr	r0, [r6, #8]
   13dfc:	cmp	r5, #1
   13e00:	ldr	r4, [r0]
   13e04:	mov	r1, r4
   13e08:	beq	13e90 <__assert_fail@plt+0x22d0>
   13e0c:	mov	r2, r0
   13e10:	ldr	r1, [r2, #4]!
   13e14:	str	r1, [r4, #8]
   13e18:	subs	r1, r5, #2
   13e1c:	beq	13e88 <__assert_fail@plt+0x22c8>
   13e20:	tst	r1, #1
   13e24:	beq	13e3c <__assert_fail@plt+0x227c>
   13e28:	ldr	r1, [r0, #8]!
   13e2c:	ldr	r2, [r0, #-4]
   13e30:	str	r1, [r2, #8]
   13e34:	sub	r1, r5, #3
   13e38:	mov	r2, r0
   13e3c:	cmp	r5, #3
   13e40:	beq	13e8c <__assert_fail@plt+0x22cc>
   13e44:	mov	r0, r2
   13e48:	ldm	r2, {r3, r7}
   13e4c:	subs	r1, r1, #2
   13e50:	str	r7, [r3, #8]
   13e54:	ldr	r3, [r0, #8]!
   13e58:	ldr	r2, [r2, #4]
   13e5c:	str	r3, [r2, #8]
   13e60:	mov	r2, r0
   13e64:	bne	13e48 <__assert_fail@plt+0x2288>
   13e68:	b	13e8c <__assert_fail@plt+0x22cc>
   13e6c:	ldr	r0, [r6, #8]
   13e70:	bl	136b8 <__assert_fail@plt+0x1af8>
   13e74:	mov	r0, #0
   13e78:	str	r0, [r6, #40]	; 0x28
   13e7c:	str	r0, [r6, #8]
   13e80:	mov	r0, r4
   13e84:	pop	{r4, r5, r6, r7, fp, pc}
   13e88:	mov	r0, r2
   13e8c:	ldr	r1, [r0]
   13e90:	mov	r0, #0
   13e94:	str	r0, [r1, #8]
   13e98:	mov	r0, r4
   13e9c:	pop	{r4, r5, r6, r7, fp, pc}
   13ea0:	push	{r4, r5, r6, r7, fp, lr}
   13ea4:	add	fp, sp, #16
   13ea8:	mov	r4, r0
   13eac:	ldr	r0, [r0]
   13eb0:	cmp	r0, #0
   13eb4:	beq	13ef4 <__assert_fail@plt+0x2334>
   13eb8:	ldr	r1, [r0, #48]	; 0x30
   13ebc:	cmp	r1, #0
   13ec0:	bmi	13ee8 <__assert_fail@plt+0x2328>
   13ec4:	ldr	r5, [r0, #8]
   13ec8:	cmp	r5, #0
   13ecc:	ldreq	r5, [r0, #4]
   13ed0:	bl	136b8 <__assert_fail@plt+0x1af8>
   13ed4:	ldr	r0, [r5, #48]	; 0x30
   13ed8:	cmn	r0, #1
   13edc:	mov	r0, r5
   13ee0:	bgt	13ec4 <__assert_fail@plt+0x2304>
   13ee4:	b	13eec <__assert_fail@plt+0x232c>
   13ee8:	mov	r5, r0
   13eec:	mov	r0, r5
   13ef0:	bl	136b8 <__assert_fail@plt+0x1af8>
   13ef4:	ldr	r5, [r4, #4]
   13ef8:	cmp	r5, #0
   13efc:	bne	13f18 <__assert_fail@plt+0x2358>
   13f00:	b	13f30 <__assert_fail@plt+0x2370>
   13f04:	mov	r0, r5
   13f08:	bl	136b8 <__assert_fail@plt+0x1af8>
   13f0c:	cmp	r6, #0
   13f10:	mov	r5, r6
   13f14:	beq	13f30 <__assert_fail@plt+0x2370>
   13f18:	ldrd	r6, [r5, #8]
   13f1c:	cmp	r7, #0
   13f20:	beq	13f04 <__assert_fail@plt+0x2344>
   13f24:	mov	r0, r7
   13f28:	bl	11b9c <closedir@plt>
   13f2c:	b	13f04 <__assert_fail@plt+0x2344>
   13f30:	ldr	r0, [r4, #8]
   13f34:	bl	136b8 <__assert_fail@plt+0x1af8>
   13f38:	ldr	r0, [r4, #24]
   13f3c:	bl	136b8 <__assert_fail@plt+0x1af8>
   13f40:	ldr	r0, [r4, #48]	; 0x30
   13f44:	tst	r0, #512	; 0x200
   13f48:	bne	13f74 <__assert_fail@plt+0x23b4>
   13f4c:	mov	r6, #0
   13f50:	tst	r0, #4
   13f54:	bne	13fb8 <__assert_fail@plt+0x23f8>
   13f58:	ldr	r0, [r4, #28]
   13f5c:	bl	11adc <fchdir@plt>
   13f60:	cmp	r0, #0
   13f64:	beq	13f94 <__assert_fail@plt+0x23d4>
   13f68:	bl	11a04 <__errno_location@plt>
   13f6c:	ldr	r6, [r0]
   13f70:	b	13f98 <__assert_fail@plt+0x23d8>
   13f74:	ldr	r0, [r4, #32]
   13f78:	mov	r6, #0
   13f7c:	cmp	r0, #0
   13f80:	bmi	13fb8 <__assert_fail@plt+0x23f8>
   13f84:	bl	11b6c <close@plt>
   13f88:	cmp	r0, #0
   13f8c:	bne	13fb0 <__assert_fail@plt+0x23f0>
   13f90:	b	13fb8 <__assert_fail@plt+0x23f8>
   13f94:	mov	r6, #0
   13f98:	ldr	r0, [r4, #28]
   13f9c:	bl	11b6c <close@plt>
   13fa0:	cmp	r6, #0
   13fa4:	bne	13fb8 <__assert_fail@plt+0x23f8>
   13fa8:	cmp	r0, #0
   13fac:	beq	13fb8 <__assert_fail@plt+0x23f8>
   13fb0:	bl	11a04 <__errno_location@plt>
   13fb4:	ldr	r6, [r0]
   13fb8:	add	r5, r4, #60	; 0x3c
   13fbc:	mov	r0, r5
   13fc0:	bl	16eb4 <__assert_fail@plt+0x52f4>
   13fc4:	cmp	r0, #0
   13fc8:	bne	13fe4 <__assert_fail@plt+0x2424>
   13fcc:	mov	r0, r5
   13fd0:	bl	16f08 <__assert_fail@plt+0x5348>
   13fd4:	cmp	r0, #0
   13fd8:	bmi	13fbc <__assert_fail@plt+0x23fc>
   13fdc:	bl	11b6c <close@plt>
   13fe0:	b	13fbc <__assert_fail@plt+0x23fc>
   13fe4:	ldr	r0, [r4, #52]	; 0x34
   13fe8:	cmp	r0, #0
   13fec:	beq	13ff4 <__assert_fail@plt+0x2434>
   13ff0:	bl	16298 <__assert_fail@plt+0x46d8>
   13ff4:	ldrh	r0, [r4, #48]	; 0x30
   13ff8:	movw	r1, #258	; 0x102
   13ffc:	tst	r0, r1
   14000:	beq	14018 <__assert_fail@plt+0x2458>
   14004:	ldr	r0, [r4, #56]	; 0x38
   14008:	cmp	r0, #0
   1400c:	beq	14020 <__assert_fail@plt+0x2460>
   14010:	bl	16298 <__assert_fail@plt+0x46d8>
   14014:	b	14020 <__assert_fail@plt+0x2460>
   14018:	ldr	r0, [r4, #56]	; 0x38
   1401c:	bl	136b8 <__assert_fail@plt+0x1af8>
   14020:	mov	r0, r4
   14024:	bl	136b8 <__assert_fail@plt+0x1af8>
   14028:	cmp	r6, #0
   1402c:	beq	14040 <__assert_fail@plt+0x2480>
   14030:	bl	11a04 <__errno_location@plt>
   14034:	str	r6, [r0]
   14038:	mvn	r0, #0
   1403c:	pop	{r4, r5, r6, r7, fp, pc}
   14040:	mov	r0, #0
   14044:	pop	{r4, r5, r6, r7, fp, pc}
   14048:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1404c:	add	fp, sp, #24
   14050:	sub	sp, sp, #8
   14054:	ldr	r6, [r0]
   14058:	mov	r5, #0
   1405c:	cmp	r6, #0
   14060:	beq	147a0 <__assert_fail@plt+0x2be0>
   14064:	mov	r4, r0
   14068:	ldr	r0, [r0, #48]	; 0x30
   1406c:	tst	r0, #8192	; 0x2000
   14070:	bne	147a0 <__assert_fail@plt+0x2be0>
   14074:	ldrh	r1, [r6, #60]	; 0x3c
   14078:	mov	r2, #3
   1407c:	strh	r2, [r6, #60]	; 0x3c
   14080:	cmp	r1, #1
   14084:	beq	140f4 <__assert_fail@plt+0x2534>
   14088:	cmp	r1, #2
   1408c:	bne	14110 <__assert_fail@plt+0x2550>
   14090:	ldrh	r2, [r6, #56]	; 0x38
   14094:	bic	r3, r2, #1
   14098:	cmp	r3, #12
   1409c:	bne	14114 <__assert_fail@plt+0x2554>
   140a0:	mov	r0, r4
   140a4:	mov	r1, r6
   140a8:	mov	r2, #1
   140ac:	bl	13bd8 <__assert_fail@plt+0x2018>
   140b0:	cmp	r0, #1
   140b4:	strh	r0, [r6, #56]	; 0x38
   140b8:	bne	14204 <__assert_fail@plt+0x2644>
   140bc:	ldr	r0, [r4, #48]	; 0x30
   140c0:	tst	r0, #4
   140c4:	bne	14204 <__assert_fail@plt+0x2644>
   140c8:	mov	r1, #32768	; 0x8000
   140cc:	tst	r0, #512	; 0x200
   140d0:	and	r1, r1, r0, lsl #11
   140d4:	orr	r1, r1, #18688	; 0x4900
   140d8:	orr	r2, r1, #524288	; 0x80000
   140dc:	bne	143e8 <__assert_fail@plt+0x2828>
   140e0:	movw	r0, #50243	; 0xc443
   140e4:	mov	r1, r2
   140e8:	movt	r0, #1
   140ec:	bl	1b618 <lchmod@@Base+0x46c0>
   140f0:	b	143f8 <__assert_fail@plt+0x2838>
   140f4:	mov	r0, r4
   140f8:	mov	r1, r6
   140fc:	mov	r2, #0
   14100:	bl	13bd8 <__assert_fail@plt+0x2018>
   14104:	strh	r0, [r6, #56]	; 0x38
   14108:	mov	r5, r6
   1410c:	b	147a0 <__assert_fail@plt+0x2be0>
   14110:	ldrh	r2, [r6, #56]	; 0x38
   14114:	cmp	r2, #1
   14118:	bne	14174 <__assert_fail@plt+0x25b4>
   1411c:	cmp	r1, #4
   14120:	bne	1420c <__assert_fail@plt+0x264c>
   14124:	ldrb	r0, [r6, #58]	; 0x3a
   14128:	tst	r0, #2
   1412c:	beq	14138 <__assert_fail@plt+0x2578>
   14130:	ldr	r0, [r6, #36]	; 0x24
   14134:	bl	11b6c <close@plt>
   14138:	ldr	r5, [r4, #4]
   1413c:	cmp	r5, #0
   14140:	bne	1415c <__assert_fail@plt+0x259c>
   14144:	b	142a4 <__assert_fail@plt+0x26e4>
   14148:	mov	r0, r5
   1414c:	bl	136b8 <__assert_fail@plt+0x1af8>
   14150:	cmp	r8, #0
   14154:	mov	r5, r8
   14158:	beq	1429c <__assert_fail@plt+0x26dc>
   1415c:	ldrd	r8, [r5, #8]
   14160:	cmp	r9, #0
   14164:	beq	14148 <__assert_fail@plt+0x2588>
   14168:	mov	r0, r9
   1416c:	bl	11b9c <closedir@plt>
   14170:	b	14148 <__assert_fail@plt+0x2588>
   14174:	ldr	r5, [r6, #8]
   14178:	cmp	r5, #0
   1417c:	beq	142c0 <__assert_fail@plt+0x2700>
   14180:	mov	r0, r6
   14184:	str	r5, [r4]
   14188:	bl	136b8 <__assert_fail@plt+0x1af8>
   1418c:	ldr	r0, [r5, #48]	; 0x30
   14190:	cmp	r0, #0
   14194:	beq	1430c <__assert_fail@plt+0x274c>
   14198:	ldrh	r0, [r5, #60]	; 0x3c
   1419c:	mov	r6, r5
   141a0:	cmp	r0, #4
   141a4:	beq	14174 <__assert_fail@plt+0x25b4>
   141a8:	cmp	r0, #2
   141ac:	bne	14668 <__assert_fail@plt+0x2aa8>
   141b0:	mov	r0, r4
   141b4:	mov	r1, r5
   141b8:	mov	r2, #1
   141bc:	bl	13bd8 <__assert_fail@plt+0x2018>
   141c0:	cmp	r0, #1
   141c4:	strh	r0, [r5, #56]	; 0x38
   141c8:	bne	14660 <__assert_fail@plt+0x2aa0>
   141cc:	ldr	r0, [r4, #48]	; 0x30
   141d0:	tst	r0, #4
   141d4:	bne	14660 <__assert_fail@plt+0x2aa0>
   141d8:	mov	r1, #32768	; 0x8000
   141dc:	tst	r0, #512	; 0x200
   141e0:	and	r1, r1, r0, lsl #11
   141e4:	orr	r1, r1, #18688	; 0x4900
   141e8:	orr	r2, r1, #524288	; 0x80000
   141ec:	bne	14620 <__assert_fail@plt+0x2a60>
   141f0:	movw	r0, #50243	; 0xc443
   141f4:	mov	r1, r2
   141f8:	movt	r0, #1
   141fc:	bl	1b618 <lchmod@@Base+0x46c0>
   14200:	b	14630 <__assert_fail@plt+0x2a70>
   14204:	mov	r5, r6
   14208:	b	146a4 <__assert_fail@plt+0x2ae4>
   1420c:	tst	r0, #64	; 0x40
   14210:	beq	1422c <__assert_fail@plt+0x266c>
   14214:	ldrd	r2, [r4, #16]
   14218:	ldrd	r8, [r6, #64]	; 0x40
   1421c:	eor	r1, r9, r3
   14220:	eor	r2, r8, r2
   14224:	orrs	r1, r2, r1
   14228:	bne	14124 <__assert_fail@plt+0x2564>
   1422c:	ldr	r5, [r4, #4]
   14230:	cmp	r5, #0
   14234:	beq	14390 <__assert_fail@plt+0x27d0>
   14238:	tst	r0, #4096	; 0x1000
   1423c:	bne	14350 <__assert_fail@plt+0x2790>
   14240:	ldr	r3, [r6, #24]
   14244:	mov	r0, r4
   14248:	mov	r1, r6
   1424c:	mvn	r2, #0
   14250:	bl	1488c <__assert_fail@plt+0x2ccc>
   14254:	cmp	r0, #0
   14258:	beq	143a8 <__assert_fail@plt+0x27e8>
   1425c:	bl	11a04 <__errno_location@plt>
   14260:	ldr	r0, [r0]
   14264:	str	r0, [r6, #32]
   14268:	ldrh	r0, [r6, #58]	; 0x3a
   1426c:	orr	r0, r0, #1
   14270:	strh	r0, [r6, #58]	; 0x3a
   14274:	ldr	r0, [r4, #4]
   14278:	cmp	r0, #0
   1427c:	beq	143a8 <__assert_fail@plt+0x27e8>
   14280:	ldmib	r0, {r1, r2}
   14284:	cmp	r2, #0
   14288:	ldr	r1, [r1, #24]
   1428c:	str	r1, [r0, #24]
   14290:	mov	r0, r2
   14294:	bne	14280 <__assert_fail@plt+0x26c0>
   14298:	b	143a8 <__assert_fail@plt+0x27e8>
   1429c:	mov	r0, #0
   142a0:	str	r0, [r4, #4]
   142a4:	mov	r0, #6
   142a8:	strh	r0, [r6, #56]	; 0x38
   142ac:	mov	r0, r4
   142b0:	mov	r1, r6
   142b4:	bl	147b0 <__assert_fail@plt+0x2bf0>
   142b8:	mov	r5, r6
   142bc:	b	147a0 <__assert_fail@plt+0x2be0>
   142c0:	ldr	r5, [r6, #4]
   142c4:	ldr	r0, [r5, #12]
   142c8:	cmp	r0, #0
   142cc:	beq	14428 <__assert_fail@plt+0x2868>
   142d0:	str	r5, [r4]
   142d4:	ldr	r1, [r5, #40]	; 0x28
   142d8:	ldr	r0, [r4, #24]
   142dc:	mov	r5, #0
   142e0:	strb	r5, [r0, r1]
   142e4:	mov	r0, r4
   142e8:	mov	r1, #3
   142ec:	bl	14aec <__assert_fail@plt+0x2f2c>
   142f0:	cmp	r0, #0
   142f4:	beq	14418 <__assert_fail@plt+0x2858>
   142f8:	mov	r7, r0
   142fc:	mov	r0, r6
   14300:	bl	136b8 <__assert_fail@plt+0x1af8>
   14304:	mov	r5, r7
   14308:	b	14668 <__assert_fail@plt+0x2aa8>
   1430c:	mov	r0, r4
   14310:	bl	1557c <__assert_fail@plt+0x39bc>
   14314:	ldr	r1, [r4, #48]	; 0x30
   14318:	cmp	r0, #0
   1431c:	beq	14330 <__assert_fail@plt+0x2770>
   14320:	orr	r0, r1, #8192	; 0x2000
   14324:	mov	r5, #0
   14328:	str	r0, [r4, #48]	; 0x30
   1432c:	b	147a0 <__assert_fail@plt+0x2be0>
   14330:	movw	r0, #258	; 0x102
   14334:	tst	r1, r0
   14338:	beq	144d8 <__assert_fail@plt+0x2918>
   1433c:	ldr	r0, [r4, #56]	; 0x38
   14340:	cmp	r0, #0
   14344:	beq	144e0 <__assert_fail@plt+0x2920>
   14348:	bl	16298 <__assert_fail@plt+0x46d8>
   1434c:	b	144e0 <__assert_fail@plt+0x2920>
   14350:	bic	r0, r0, #4096	; 0x1000
   14354:	str	r0, [r4, #48]	; 0x30
   14358:	b	14370 <__assert_fail@plt+0x27b0>
   1435c:	mov	r0, r5
   14360:	bl	136b8 <__assert_fail@plt+0x1af8>
   14364:	cmp	r8, #0
   14368:	mov	r5, r8
   1436c:	beq	14388 <__assert_fail@plt+0x27c8>
   14370:	ldrd	r8, [r5, #8]
   14374:	cmp	r9, #0
   14378:	beq	1435c <__assert_fail@plt+0x279c>
   1437c:	mov	r0, r9
   14380:	bl	11b9c <closedir@plt>
   14384:	b	1435c <__assert_fail@plt+0x279c>
   14388:	mov	r0, #0
   1438c:	str	r0, [r4, #4]
   14390:	mov	r0, r4
   14394:	mov	r1, #3
   14398:	bl	14aec <__assert_fail@plt+0x2f2c>
   1439c:	cmp	r0, #0
   143a0:	str	r0, [r4, #4]
   143a4:	beq	143b8 <__assert_fail@plt+0x27f8>
   143a8:	ldr	r5, [r4, #4]
   143ac:	mov	r0, #0
   143b0:	str	r0, [r4, #4]
   143b4:	b	14668 <__assert_fail@plt+0x2aa8>
   143b8:	ldrb	r0, [r4, #49]	; 0x31
   143bc:	mov	r5, #0
   143c0:	tst	r0, #32
   143c4:	bne	147a0 <__assert_fail@plt+0x2be0>
   143c8:	ldr	r0, [r6, #32]
   143cc:	cmp	r0, #0
   143d0:	beq	142ac <__assert_fail@plt+0x26ec>
   143d4:	ldrh	r0, [r6, #56]	; 0x38
   143d8:	cmp	r0, #4
   143dc:	beq	142ac <__assert_fail@plt+0x26ec>
   143e0:	mov	r0, #7
   143e4:	b	142a8 <__assert_fail@plt+0x26e8>
   143e8:	ldr	r0, [r4, #32]
   143ec:	movw	r1, #50243	; 0xc443
   143f0:	movt	r1, #1
   143f4:	bl	17618 <lchmod@@Base+0x6c0>
   143f8:	cmn	r0, #1
   143fc:	str	r0, [r6, #36]	; 0x24
   14400:	ble	144bc <__assert_fail@plt+0x28fc>
   14404:	ldrh	r0, [r6, #58]	; 0x3a
   14408:	mov	r5, r6
   1440c:	orr	r0, r0, #2
   14410:	strh	r0, [r6, #58]	; 0x3a
   14414:	b	146a4 <__assert_fail@plt+0x2ae4>
   14418:	ldrb	r0, [r4, #49]	; 0x31
   1441c:	tst	r0, #32
   14420:	bne	147a0 <__assert_fail@plt+0x2be0>
   14424:	ldr	r5, [r6, #4]
   14428:	mov	r0, r6
   1442c:	str	r5, [r4]
   14430:	bl	136b8 <__assert_fail@plt+0x1af8>
   14434:	ldr	r0, [r5, #48]	; 0x30
   14438:	cmn	r0, #1
   1443c:	beq	144a0 <__assert_fail@plt+0x28e0>
   14440:	ldrh	r0, [r5, #56]	; 0x38
   14444:	cmp	r0, #11
   14448:	beq	147ac <__assert_fail@plt+0x2bec>
   1444c:	ldr	r0, [r5, #40]	; 0x28
   14450:	ldr	r1, [r4, #24]
   14454:	mov	r2, #0
   14458:	strb	r2, [r1, r0]
   1445c:	ldr	r0, [r5, #48]	; 0x30
   14460:	cmp	r0, #0
   14464:	beq	145b0 <__assert_fail@plt+0x29f0>
   14468:	ldrh	r0, [r5, #58]	; 0x3a
   1446c:	tst	r0, #2
   14470:	bne	145dc <__assert_fail@plt+0x2a1c>
   14474:	tst	r0, #1
   14478:	bne	14764 <__assert_fail@plt+0x2ba4>
   1447c:	ldr	r1, [r5, #4]
   14480:	movw	r3, #50242	; 0xc442
   14484:	mov	r0, r4
   14488:	mvn	r2, #0
   1448c:	movt	r3, #1
   14490:	bl	1488c <__assert_fail@plt+0x2ccc>
   14494:	cmp	r0, #0
   14498:	bne	145c0 <__assert_fail@plt+0x2a00>
   1449c:	b	14764 <__assert_fail@plt+0x2ba4>
   144a0:	mov	r0, r5
   144a4:	bl	136b8 <__assert_fail@plt+0x1af8>
   144a8:	bl	11a04 <__errno_location@plt>
   144ac:	mov	r5, #0
   144b0:	str	r5, [r0]
   144b4:	str	r5, [r4]
   144b8:	b	147a0 <__assert_fail@plt+0x2be0>
   144bc:	bl	11a04 <__errno_location@plt>
   144c0:	ldr	r0, [r0]
   144c4:	mov	r1, #7
   144c8:	mov	r5, r6
   144cc:	strh	r1, [r6, #56]	; 0x38
   144d0:	str	r0, [r6, #32]
   144d4:	b	146a4 <__assert_fail@plt+0x2ae4>
   144d8:	ldr	r0, [r4, #56]	; 0x38
   144dc:	bl	136b8 <__assert_fail@plt+0x1af8>
   144e0:	ldr	r1, [r5, #52]	; 0x34
   144e4:	add	r6, r5, #168	; 0xa8
   144e8:	str	r1, [r5, #40]	; 0x28
   144ec:	add	r2, r1, #1
   144f0:	mov	r1, r6
   144f4:	ldr	r0, [r4, #24]
   144f8:	bl	11800 <memmove@plt>
   144fc:	mov	r0, r6
   14500:	mov	r1, #47	; 0x2f
   14504:	bl	11a94 <strrchr@plt>
   14508:	cmp	r0, #0
   1450c:	beq	14548 <__assert_fail@plt+0x2988>
   14510:	cmp	r0, r6
   14514:	bne	14524 <__assert_fail@plt+0x2964>
   14518:	ldrb	r1, [r5, #169]	; 0xa9
   1451c:	cmp	r1, #0
   14520:	beq	14548 <__assert_fail@plt+0x2988>
   14524:	add	r7, r0, #1
   14528:	mov	r0, r7
   1452c:	bl	119c8 <strlen@plt>
   14530:	mov	r8, r0
   14534:	add	r2, r0, #1
   14538:	mov	r0, r6
   1453c:	mov	r1, r7
   14540:	bl	11800 <memmove@plt>
   14544:	str	r8, [r5, #52]	; 0x34
   14548:	ldr	r0, [r4, #24]
   1454c:	movw	r1, #258	; 0x102
   14550:	str	r0, [r5, #24]
   14554:	str	r0, [r5, #28]
   14558:	ldrh	r0, [r4, #48]	; 0x30
   1455c:	tst	r0, r1
   14560:	beq	14594 <__assert_fail@plt+0x29d4>
   14564:	movw	r0, #14008	; 0x36b8
   14568:	movw	r2, #22756	; 0x58e4
   1456c:	movw	r3, #22788	; 0x5904
   14570:	mov	r1, #0
   14574:	movt	r0, #1
   14578:	movt	r2, #1
   1457c:	movt	r3, #1
   14580:	str	r0, [sp]
   14584:	mov	r0, #31
   14588:	bl	15f94 <__assert_fail@plt+0x43d4>
   1458c:	str	r0, [r4, #56]	; 0x38
   14590:	b	146a4 <__assert_fail@plt+0x2ae4>
   14594:	mov	r0, #32
   14598:	bl	1b120 <lchmod@@Base+0x41c8>
   1459c:	cmp	r0, #0
   145a0:	str	r0, [r4, #56]	; 0x38
   145a4:	beq	146a4 <__assert_fail@plt+0x2ae4>
   145a8:	bl	1b2ac <lchmod@@Base+0x4354>
   145ac:	b	146a4 <__assert_fail@plt+0x2ae4>
   145b0:	mov	r0, r4
   145b4:	bl	1557c <__assert_fail@plt+0x39bc>
   145b8:	cmp	r0, #0
   145bc:	beq	14764 <__assert_fail@plt+0x2ba4>
   145c0:	bl	11a04 <__errno_location@plt>
   145c4:	ldr	r0, [r0]
   145c8:	str	r0, [r5, #32]
   145cc:	ldr	r0, [r4, #48]	; 0x30
   145d0:	orr	r0, r0, #8192	; 0x2000
   145d4:	str	r0, [r4, #48]	; 0x30
   145d8:	b	14764 <__assert_fail@plt+0x2ba4>
   145dc:	ldr	r0, [r4, #48]	; 0x30
   145e0:	tst	r0, #4
   145e4:	bne	1475c <__assert_fail@plt+0x2b9c>
   145e8:	ldr	r6, [r5, #36]	; 0x24
   145ec:	tst	r0, #512	; 0x200
   145f0:	bne	14730 <__assert_fail@plt+0x2b70>
   145f4:	mov	r0, r6
   145f8:	bl	11adc <fchdir@plt>
   145fc:	cmp	r0, #0
   14600:	beq	1475c <__assert_fail@plt+0x2b9c>
   14604:	bl	11a04 <__errno_location@plt>
   14608:	ldr	r0, [r0]
   1460c:	str	r0, [r5, #32]
   14610:	ldr	r0, [r4, #48]	; 0x30
   14614:	orr	r0, r0, #8192	; 0x2000
   14618:	str	r0, [r4, #48]	; 0x30
   1461c:	b	1475c <__assert_fail@plt+0x2b9c>
   14620:	ldr	r0, [r4, #32]
   14624:	movw	r1, #50243	; 0xc443
   14628:	movt	r1, #1
   1462c:	bl	17618 <lchmod@@Base+0x6c0>
   14630:	cmn	r0, #1
   14634:	str	r0, [r5, #36]	; 0x24
   14638:	ble	1464c <__assert_fail@plt+0x2a8c>
   1463c:	ldrh	r0, [r5, #58]	; 0x3a
   14640:	orr	r0, r0, #2
   14644:	strh	r0, [r5, #58]	; 0x3a
   14648:	b	14660 <__assert_fail@plt+0x2aa0>
   1464c:	bl	11a04 <__errno_location@plt>
   14650:	ldr	r0, [r0]
   14654:	mov	r1, #7
   14658:	strh	r1, [r5, #56]	; 0x38
   1465c:	str	r0, [r5, #32]
   14660:	mov	r0, #3
   14664:	strh	r0, [r5, #60]	; 0x3c
   14668:	ldr	r0, [r5, #4]
   1466c:	ldr	r1, [r0, #28]
   14670:	ldr	r0, [r0, #40]	; 0x28
   14674:	sub	r2, r0, #1
   14678:	ldrb	r1, [r1, r2]
   1467c:	cmp	r1, #47	; 0x2f
   14680:	ldr	r1, [r4, #24]
   14684:	moveq	r0, r2
   14688:	mov	r2, #47	; 0x2f
   1468c:	strb	r2, [r1, r0]!
   14690:	ldr	r2, [r5, #52]	; 0x34
   14694:	add	r0, r1, #1
   14698:	add	r1, r5, #168	; 0xa8
   1469c:	add	r2, r2, #1
   146a0:	bl	11800 <memmove@plt>
   146a4:	str	r5, [r4]
   146a8:	ldrh	r0, [r5, #56]	; 0x38
   146ac:	cmp	r0, #11
   146b0:	bne	146e8 <__assert_fail@plt+0x2b28>
   146b4:	add	r0, r5, #112	; 0x70
   146b8:	ldrd	r0, [r0]
   146bc:	eor	r2, r0, #1
   146c0:	orrs	r2, r2, r1
   146c4:	beq	147a0 <__assert_fail@plt+0x2be0>
   146c8:	eor	r0, r0, #2
   146cc:	orrs	r0, r0, r1
   146d0:	bne	147ac <__assert_fail@plt+0x2bec>
   146d4:	mov	r0, r4
   146d8:	mov	r1, r5
   146dc:	mov	r2, #0
   146e0:	bl	13bd8 <__assert_fail@plt+0x2018>
   146e4:	strh	r0, [r5, #56]	; 0x38
   146e8:	cmp	r0, #1
   146ec:	bne	147a0 <__assert_fail@plt+0x2be0>
   146f0:	ldr	r0, [r5, #48]	; 0x30
   146f4:	cmp	r0, #0
   146f8:	bne	14708 <__assert_fail@plt+0x2b48>
   146fc:	add	r0, r5, #64	; 0x40
   14700:	ldrd	r0, [r0]
   14704:	strd	r0, [r4, #16]
   14708:	mov	r0, r4
   1470c:	mov	r1, r5
   14710:	bl	1560c <__assert_fail@plt+0x3a4c>
   14714:	cmp	r0, #0
   14718:	bne	147a0 <__assert_fail@plt+0x2be0>
   1471c:	bl	11a04 <__errno_location@plt>
   14720:	mov	r1, #12
   14724:	mov	r5, #0
   14728:	str	r1, [r0]
   1472c:	b	147a0 <__assert_fail@plt+0x2be0>
   14730:	ldr	r1, [r4, #32]
   14734:	cmp	r1, r6
   14738:	bne	14744 <__assert_fail@plt+0x2b84>
   1473c:	cmn	r1, #100	; 0x64
   14740:	bne	147ac <__assert_fail@plt+0x2bec>
   14744:	add	r0, r4, #60	; 0x3c
   14748:	bl	16ebc <__assert_fail@plt+0x52fc>
   1474c:	cmp	r0, #0
   14750:	bmi	14758 <__assert_fail@plt+0x2b98>
   14754:	bl	11b6c <close@plt>
   14758:	str	r6, [r4, #32]
   1475c:	ldr	r0, [r5, #36]	; 0x24
   14760:	bl	11b6c <close@plt>
   14764:	ldrh	r0, [r5, #56]	; 0x38
   14768:	cmp	r0, #2
   1476c:	beq	14794 <__assert_fail@plt+0x2bd4>
   14770:	ldr	r0, [r5, #32]
   14774:	mov	r1, #7
   14778:	cmp	r0, #0
   1477c:	movweq	r1, #6
   14780:	strh	r1, [r5, #56]	; 0x38
   14784:	bne	14794 <__assert_fail@plt+0x2bd4>
   14788:	mov	r0, r4
   1478c:	mov	r1, r5
   14790:	bl	147b0 <__assert_fail@plt+0x2bf0>
   14794:	ldrb	r0, [r4, #49]	; 0x31
   14798:	tst	r0, #32
   1479c:	movne	r5, #0
   147a0:	mov	r0, r5
   147a4:	sub	sp, fp, #24
   147a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   147ac:	bl	11b60 <abort@plt>
   147b0:	push	{r4, r5, r7, sl, fp, lr}
   147b4:	add	fp, sp, #16
   147b8:	sub	sp, sp, #24
   147bc:	ldrh	r2, [r0, #48]	; 0x30
   147c0:	movw	r3, #258	; 0x102
   147c4:	add	lr, r1, #64	; 0x40
   147c8:	add	r4, r1, #160	; 0xa0
   147cc:	tst	r2, r3
   147d0:	beq	14808 <__assert_fail@plt+0x2c48>
   147d4:	ldrd	r2, [lr]
   147d8:	mov	r1, sp
   147dc:	stm	sp, {r2, r3}
   147e0:	ldrd	r2, [r4]
   147e4:	str	r3, [sp, #12]
   147e8:	str	r2, [sp, #8]
   147ec:	ldr	r0, [r0, #56]	; 0x38
   147f0:	bl	16b28 <__assert_fail@plt+0x4f68>
   147f4:	cmp	r0, #0
   147f8:	beq	14888 <__assert_fail@plt+0x2cc8>
   147fc:	bl	136b8 <__assert_fail@plt+0x1af8>
   14800:	sub	sp, fp, #16
   14804:	pop	{r4, r5, r7, sl, fp, pc}
   14808:	ldr	r1, [r1, #4]
   1480c:	cmp	r1, #0
   14810:	beq	14880 <__assert_fail@plt+0x2cc0>
   14814:	ldr	r2, [r1, #48]	; 0x30
   14818:	cmp	r2, #0
   1481c:	bmi	14880 <__assert_fail@plt+0x2cc0>
   14820:	ldr	ip, [r0, #56]	; 0x38
   14824:	ldrd	r2, [ip, #16]
   14828:	orrs	r2, r2, r3
   1482c:	beq	14888 <__assert_fail@plt+0x2cc8>
   14830:	ldrd	r2, [r4]
   14834:	ldrd	r4, [ip]
   14838:	eor	r3, r5, r3
   1483c:	eor	r2, r4, r2
   14840:	orrs	r2, r2, r3
   14844:	bne	14880 <__assert_fail@plt+0x2cc0>
   14848:	add	r3, ip, #8
   1484c:	ldm	lr, {r2, r5}
   14850:	ldm	r3, {r4, r7}
   14854:	eor	r7, r7, r5
   14858:	eor	r2, r4, r2
   1485c:	orrs	r2, r2, r7
   14860:	bne	14880 <__assert_fail@plt+0x2cc0>
   14864:	add	r2, r1, #64	; 0x40
   14868:	add	r1, r1, #160	; 0xa0
   1486c:	ldm	r2, {r2, r5}
   14870:	stm	r3, {r2, r5}
   14874:	ldr	r0, [r0, #56]	; 0x38
   14878:	ldrd	r2, [r1]
   1487c:	strd	r2, [r0]
   14880:	sub	sp, fp, #16
   14884:	pop	{r4, r5, r7, sl, fp, pc}
   14888:	bl	11b60 <abort@plt>
   1488c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14890:	add	fp, sp, #28
   14894:	sub	sp, sp, #108	; 0x6c
   14898:	mov	r7, r3
   1489c:	mov	r4, r2
   148a0:	mov	r8, r1
   148a4:	mov	sl, r0
   148a8:	cmp	r3, #0
   148ac:	beq	148d0 <__assert_fail@plt+0x2d10>
   148b0:	movw	r1, #50242	; 0xc442
   148b4:	mov	r0, r7
   148b8:	movt	r1, #1
   148bc:	bl	117d0 <strcmp@plt>
   148c0:	cmp	r0, #0
   148c4:	mov	r6, r0
   148c8:	movwne	r6, #1
   148cc:	b	148d4 <__assert_fail@plt+0x2d14>
   148d0:	mov	r6, #1
   148d4:	ldr	r0, [sl, #48]	; 0x30
   148d8:	tst	r0, #4
   148dc:	bne	14934 <__assert_fail@plt+0x2d74>
   148e0:	cmn	r4, #1
   148e4:	mov	r1, #0
   148e8:	mov	r9, #0
   148ec:	movwgt	r1, #1
   148f0:	orrs	r1, r1, r6
   148f4:	bne	14954 <__assert_fail@plt+0x2d94>
   148f8:	ands	r0, r0, #512	; 0x200
   148fc:	beq	14954 <__assert_fail@plt+0x2d94>
   14900:	add	r4, sl, #60	; 0x3c
   14904:	mov	r0, r4
   14908:	bl	16eb4 <__assert_fail@plt+0x52f4>
   1490c:	cmp	r0, #0
   14910:	bne	1495c <__assert_fail@plt+0x2d9c>
   14914:	mov	r0, r4
   14918:	bl	16f08 <__assert_fail@plt+0x5348>
   1491c:	cmn	r0, #1
   14920:	ble	1495c <__assert_fail@plt+0x2d9c>
   14924:	mov	r4, r0
   14928:	mov	r9, #0
   1492c:	mov	r7, #0
   14930:	b	149a4 <__assert_fail@plt+0x2de4>
   14934:	mov	r5, #0
   14938:	cmp	r4, #0
   1493c:	bmi	14adc <__assert_fail@plt+0x2f1c>
   14940:	ands	r0, r0, #512	; 0x200
   14944:	beq	14adc <__assert_fail@plt+0x2f1c>
   14948:	mov	r0, r4
   1494c:	bl	11b6c <close@plt>
   14950:	b	14adc <__assert_fail@plt+0x2f1c>
   14954:	cmn	r4, #1
   14958:	bgt	149a4 <__assert_fail@plt+0x2de4>
   1495c:	ldr	r0, [sl, #48]	; 0x30
   14960:	mov	r1, #32768	; 0x8000
   14964:	and	r1, r1, r0, lsl #11
   14968:	tst	r0, #512	; 0x200
   1496c:	orr	r1, r1, #18688	; 0x4900
   14970:	orr	r2, r1, #524288	; 0x80000
   14974:	bne	14988 <__assert_fail@plt+0x2dc8>
   14978:	mov	r0, r7
   1497c:	mov	r1, r2
   14980:	bl	1b618 <lchmod@@Base+0x46c0>
   14984:	b	14994 <__assert_fail@plt+0x2dd4>
   14988:	ldr	r0, [sl, #32]
   1498c:	mov	r1, r7
   14990:	bl	17618 <lchmod@@Base+0x6c0>
   14994:	mov	r4, r0
   14998:	mov	r9, #1
   1499c:	cmp	r0, #0
   149a0:	bmi	14a80 <__assert_fail@plt+0x2ec0>
   149a4:	ldr	r5, [sl, #48]	; 0x30
   149a8:	tst	r5, #2
   149ac:	bne	149f0 <__assert_fail@plt+0x2e30>
   149b0:	cmp	r7, #0
   149b4:	beq	149d0 <__assert_fail@plt+0x2e10>
   149b8:	movw	r1, #50242	; 0xc442
   149bc:	mov	r0, r7
   149c0:	movt	r1, #1
   149c4:	bl	117d0 <strcmp@plt>
   149c8:	cmp	r0, #0
   149cc:	beq	149f0 <__assert_fail@plt+0x2e30>
   149d0:	tst	r5, #512	; 0x200
   149d4:	bne	14a50 <__assert_fail@plt+0x2e90>
   149d8:	mov	r0, r4
   149dc:	bl	11adc <fchdir@plt>
   149e0:	mov	r5, r0
   149e4:	cmp	r9, #0
   149e8:	bne	14aa0 <__assert_fail@plt+0x2ee0>
   149ec:	b	14adc <__assert_fail@plt+0x2f1c>
   149f0:	mov	r2, sp
   149f4:	mov	r0, #3
   149f8:	mov	r1, r4
   149fc:	bl	118c0 <__fxstat64@plt>
   14a00:	cmp	r0, #0
   14a04:	bne	14a94 <__assert_fail@plt+0x2ed4>
   14a08:	add	r0, r8, #64	; 0x40
   14a0c:	ldm	sp, {r2, r3}
   14a10:	ldrd	r0, [r0]
   14a14:	eor	r1, r1, r3
   14a18:	eor	r0, r0, r2
   14a1c:	orrs	r0, r0, r1
   14a20:	bne	14a88 <__assert_fail@plt+0x2ec8>
   14a24:	add	r0, r8, #160	; 0xa0
   14a28:	ldr	r2, [sp, #96]	; 0x60
   14a2c:	ldr	r3, [sp, #100]	; 0x64
   14a30:	ldrd	r0, [r0]
   14a34:	eor	r1, r1, r3
   14a38:	eor	r0, r0, r2
   14a3c:	orrs	r0, r0, r1
   14a40:	bne	14a88 <__assert_fail@plt+0x2ec8>
   14a44:	ldr	r5, [sl, #48]	; 0x30
   14a48:	tst	r5, #512	; 0x200
   14a4c:	beq	149d8 <__assert_fail@plt+0x2e18>
   14a50:	ldr	r1, [sl, #32]
   14a54:	cmp	r1, r4
   14a58:	bne	14a64 <__assert_fail@plt+0x2ea4>
   14a5c:	cmn	r1, #100	; 0x64
   14a60:	bne	14ae8 <__assert_fail@plt+0x2f28>
   14a64:	cmp	r6, #0
   14a68:	beq	14abc <__assert_fail@plt+0x2efc>
   14a6c:	add	r0, sl, #60	; 0x3c
   14a70:	bl	16ebc <__assert_fail@plt+0x52fc>
   14a74:	cmp	r0, #0
   14a78:	bpl	14ad0 <__assert_fail@plt+0x2f10>
   14a7c:	b	14ad4 <__assert_fail@plt+0x2f14>
   14a80:	mvn	r5, #0
   14a84:	b	14adc <__assert_fail@plt+0x2f1c>
   14a88:	bl	11a04 <__errno_location@plt>
   14a8c:	mov	r1, #2
   14a90:	str	r1, [r0]
   14a94:	mvn	r5, #0
   14a98:	cmp	r9, #0
   14a9c:	beq	14adc <__assert_fail@plt+0x2f1c>
   14aa0:	bl	11a04 <__errno_location@plt>
   14aa4:	ldr	r7, [r0]
   14aa8:	mov	r6, r0
   14aac:	mov	r0, r4
   14ab0:	bl	11b6c <close@plt>
   14ab4:	str	r7, [r6]
   14ab8:	b	14adc <__assert_fail@plt+0x2f1c>
   14abc:	tst	r5, #4
   14ac0:	bne	14ad4 <__assert_fail@plt+0x2f14>
   14ac4:	cmp	r1, #0
   14ac8:	bmi	14ad4 <__assert_fail@plt+0x2f14>
   14acc:	mov	r0, r1
   14ad0:	bl	11b6c <close@plt>
   14ad4:	str	r4, [sl, #32]
   14ad8:	mov	r5, #0
   14adc:	mov	r0, r5
   14ae0:	sub	sp, fp, #28
   14ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ae8:	bl	11b60 <abort@plt>
   14aec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14af0:	add	fp, sp, #28
   14af4:	sub	sp, sp, #68	; 0x44
   14af8:	ldr	sl, [r0]
   14afc:	mov	r7, r1
   14b00:	mov	r5, r0
   14b04:	str	r0, [sp, #48]	; 0x30
   14b08:	ldr	r4, [sl, #12]
   14b0c:	cmp	r4, #0
   14b10:	beq	14b58 <__assert_fail@plt+0x2f98>
   14b14:	mov	r0, r4
   14b18:	bl	11ad0 <dirfd@plt>
   14b1c:	cmn	r0, #1
   14b20:	str	r0, [fp, #-32]	; 0xffffffe0
   14b24:	ble	14b8c <__assert_fail@plt+0x2fcc>
   14b28:	mov	r1, r5
   14b2c:	str	r4, [sp, #12]
   14b30:	str	r7, [sp, #4]
   14b34:	mov	ip, #0
   14b38:	ldr	r0, [r1, #44]!	; 0x2c
   14b3c:	str	r1, [sp, #20]
   14b40:	mvn	r1, #0
   14b44:	cmp	r0, #0
   14b48:	movweq	r1, #34464	; 0x86a0
   14b4c:	movteq	r1, #1
   14b50:	str	r1, [sp, #32]
   14b54:	b	14ddc <__assert_fail@plt+0x321c>
   14b58:	ldr	r3, [r5, #48]	; 0x30
   14b5c:	mvn	r0, #99	; 0x63
   14b60:	mov	r2, #0
   14b64:	and	r1, r3, #516	; 0x204
   14b68:	cmp	r1, #512	; 0x200
   14b6c:	ldr	r1, [sl, #24]
   14b70:	ldreq	r0, [r5, #32]
   14b74:	tst	r3, #16
   14b78:	beq	14bb4 <__assert_fail@plt+0x2ff4>
   14b7c:	tst	r3, #1
   14b80:	bne	14ba8 <__assert_fail@plt+0x2fe8>
   14b84:	mov	r2, #32768	; 0x8000
   14b88:	b	14bb4 <__assert_fail@plt+0x2ff4>
   14b8c:	ldr	r0, [sl, #12]
   14b90:	bl	11b9c <closedir@plt>
   14b94:	mov	r6, #0
   14b98:	str	r6, [sl, #12]
   14b9c:	cmp	r7, #3
   14ba0:	beq	14bf8 <__assert_fail@plt+0x3038>
   14ba4:	b	15570 <__assert_fail@plt+0x39b0>
   14ba8:	ldr	r3, [sl, #48]	; 0x30
   14bac:	cmp	r3, #0
   14bb0:	movne	r2, #32768	; 0x8000
   14bb4:	sub	r3, fp, #32
   14bb8:	bl	17650 <lchmod@@Base+0x6f8>
   14bbc:	cmp	r0, #0
   14bc0:	str	r0, [sl, #12]
   14bc4:	beq	14bec <__assert_fail@plt+0x302c>
   14bc8:	ldrh	r0, [sl, #56]	; 0x38
   14bcc:	cmp	r0, #11
   14bd0:	bne	14c10 <__assert_fail@plt+0x3050>
   14bd4:	mov	r0, r5
   14bd8:	mov	r1, sl
   14bdc:	mov	r2, #0
   14be0:	bl	13bd8 <__assert_fail@plt+0x2018>
   14be4:	strh	r0, [sl, #56]	; 0x38
   14be8:	b	14c50 <__assert_fail@plt+0x3090>
   14bec:	mov	r6, #0
   14bf0:	cmp	r7, #3
   14bf4:	bne	15570 <__assert_fail@plt+0x39b0>
   14bf8:	mov	r0, #4
   14bfc:	strh	r0, [sl, #56]	; 0x38
   14c00:	bl	11a04 <__errno_location@plt>
   14c04:	ldr	r0, [r0]
   14c08:	str	r0, [sl, #32]
   14c0c:	b	15570 <__assert_fail@plt+0x39b0>
   14c10:	ldrb	r0, [r5, #49]	; 0x31
   14c14:	tst	r0, #1
   14c18:	beq	14c50 <__assert_fail@plt+0x3090>
   14c1c:	mov	r0, r5
   14c20:	mov	r1, sl
   14c24:	bl	147b0 <__assert_fail@plt+0x2bf0>
   14c28:	mov	r0, r5
   14c2c:	mov	r1, sl
   14c30:	mov	r2, #0
   14c34:	mov	r6, #0
   14c38:	bl	13bd8 <__assert_fail@plt+0x2018>
   14c3c:	mov	r0, r5
   14c40:	mov	r1, sl
   14c44:	bl	1560c <__assert_fail@plt+0x3a4c>
   14c48:	cmp	r0, #0
   14c4c:	beq	14cf4 <__assert_fail@plt+0x3134>
   14c50:	mov	r1, r5
   14c54:	str	r7, [sp, #4]
   14c58:	str	r4, [sp, #12]
   14c5c:	ldr	r0, [r1, #44]!	; 0x2c
   14c60:	str	r1, [sp, #20]
   14c64:	mvn	r1, #0
   14c68:	cmp	r0, #0
   14c6c:	movweq	r1, #34464	; 0x86a0
   14c70:	movteq	r1, #1
   14c74:	cmp	r7, #2
   14c78:	str	r1, [sp, #32]
   14c7c:	bne	14c98 <__assert_fail@plt+0x30d8>
   14c80:	mov	ip, #1
   14c84:	cmp	r7, #3
   14c88:	bne	14ddc <__assert_fail@plt+0x321c>
   14c8c:	sub	r0, r7, #3
   14c90:	mov	r5, #0
   14c94:	b	14d20 <__assert_fail@plt+0x3160>
   14c98:	ldr	r0, [r5, #48]	; 0x30
   14c9c:	and	r0, r0, #56	; 0x38
   14ca0:	cmp	r0, #24
   14ca4:	bne	14d18 <__assert_fail@plt+0x3158>
   14ca8:	ldr	r0, [sl, #84]	; 0x54
   14cac:	cmp	r0, #2
   14cb0:	bne	14d18 <__assert_fail@plt+0x3158>
   14cb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14cb8:	mov	r0, sl
   14cbc:	bl	15984 <__assert_fail@plt+0x3dc4>
   14cc0:	movw	r1, #26984	; 0x6968
   14cc4:	cmp	r0, r1
   14cc8:	ble	14d04 <__assert_fail@plt+0x3144>
   14ccc:	movw	r1, #26985	; 0x6969
   14cd0:	cmp	r0, r1
   14cd4:	movwne	r1, #16719	; 0x414f
   14cd8:	movtne	r1, #21318	; 0x5346
   14cdc:	cmpne	r0, r1
   14ce0:	beq	14d18 <__assert_fail@plt+0x3158>
   14ce4:	movw	r1, #40864	; 0x9fa0
   14ce8:	cmp	r0, r1
   14cec:	beq	14d18 <__assert_fail@plt+0x3158>
   14cf0:	b	14c80 <__assert_fail@plt+0x30c0>
   14cf4:	bl	11a04 <__errno_location@plt>
   14cf8:	mov	r1, #12
   14cfc:	str	r1, [r0]
   14d00:	b	15570 <__assert_fail@plt+0x39b0>
   14d04:	movw	r1, #19778	; 0x4d42
   14d08:	movt	r1, #65363	; 0xff53
   14d0c:	cmp	r0, r1
   14d10:	cmpne	r0, #0
   14d14:	bne	14c80 <__assert_fail@plt+0x30c0>
   14d18:	sub	r0, r7, #3
   14d1c:	mov	r5, #1
   14d20:	clz	r0, r0
   14d24:	lsr	r6, r0, #5
   14d28:	ldr	r0, [sp, #48]	; 0x30
   14d2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14d30:	ldrb	r0, [r0, #49]	; 0x31
   14d34:	tst	r0, #2
   14d38:	beq	14d54 <__assert_fail@plt+0x3194>
   14d3c:	mov	r0, r2
   14d40:	movw	r1, #1030	; 0x406
   14d44:	mov	r2, #3
   14d48:	bl	1b438 <lchmod@@Base+0x44e0>
   14d4c:	mov	r2, r0
   14d50:	str	r0, [fp, #-32]	; 0xffffffe0
   14d54:	cmp	r2, #0
   14d58:	bmi	14d74 <__assert_fail@plt+0x31b4>
   14d5c:	ldr	r0, [sp, #48]	; 0x30
   14d60:	mov	r1, sl
   14d64:	mov	r3, #0
   14d68:	bl	1488c <__assert_fail@plt+0x2ccc>
   14d6c:	cmp	r0, #0
   14d70:	beq	14dd4 <__assert_fail@plt+0x3214>
   14d74:	and	r0, r6, r5
   14d78:	cmp	r0, #1
   14d7c:	bne	14d8c <__assert_fail@plt+0x31cc>
   14d80:	bl	11a04 <__errno_location@plt>
   14d84:	ldr	r0, [r0]
   14d88:	str	r0, [sl, #32]
   14d8c:	ldrh	r0, [sl, #58]	; 0x3a
   14d90:	orr	r0, r0, #1
   14d94:	strh	r0, [sl, #58]	; 0x3a
   14d98:	ldr	r0, [sl, #12]
   14d9c:	bl	11b9c <closedir@plt>
   14da0:	ldr	r5, [sp, #48]	; 0x30
   14da4:	mov	r4, #0
   14da8:	str	r4, [sl, #12]
   14dac:	ldrb	r0, [r5, #49]	; 0x31
   14db0:	tst	r0, #2
   14db4:	beq	14dc8 <__assert_fail@plt+0x3208>
   14db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14dbc:	cmp	r0, #0
   14dc0:	bmi	14dc8 <__assert_fail@plt+0x3208>
   14dc4:	bl	11b6c <close@plt>
   14dc8:	mov	ip, #1
   14dcc:	str	r4, [sl, #12]
   14dd0:	b	14ddc <__assert_fail@plt+0x321c>
   14dd4:	ldr	r5, [sp, #48]	; 0x30
   14dd8:	mov	ip, #0
   14ddc:	ldr	r0, [sl, #40]	; 0x28
   14de0:	ldr	r1, [sl, #28]
   14de4:	mov	r9, #0
   14de8:	sub	r2, r0, #1
   14dec:	ldrb	r1, [r1, r2]
   14df0:	cmp	r1, #47	; 0x2f
   14df4:	ldrb	r1, [r5, #48]	; 0x30
   14df8:	moveq	r0, r2
   14dfc:	tst	r1, #4
   14e00:	mov	r1, #0
   14e04:	str	r1, [sp, #40]	; 0x28
   14e08:	beq	14e20 <__assert_fail@plt+0x3260>
   14e0c:	ldr	r1, [r5, #24]
   14e10:	mov	r2, #47	; 0x2f
   14e14:	strb	r2, [r1, r0]!
   14e18:	add	r1, r1, #1
   14e1c:	str	r1, [sp, #40]	; 0x28
   14e20:	ldr	r6, [sl, #12]
   14e24:	add	r1, r0, #1
   14e28:	str	r1, [fp, #-44]	; 0xffffffd4
   14e2c:	cmp	r6, #0
   14e30:	beq	15190 <__assert_fail@plt+0x35d0>
   14e34:	ldr	r0, [sl, #48]	; 0x30
   14e38:	str	ip, [sp]
   14e3c:	mov	r4, #0
   14e40:	add	r0, r0, #1
   14e44:	str	r0, [sp, #24]
   14e48:	ldr	r0, [r5, #36]	; 0x24
   14e4c:	sub	r0, r0, r1
   14e50:	str	r0, [fp, #-36]	; 0xffffffdc
   14e54:	bl	11a04 <__errno_location@plt>
   14e58:	str	r0, [sp, #36]	; 0x24
   14e5c:	mov	r0, #0
   14e60:	mov	r9, #0
   14e64:	mov	r7, #0
   14e68:	str	sl, [sp, #28]
   14e6c:	str	r0, [sp, #44]	; 0x2c
   14e70:	mov	r0, #0
   14e74:	str	r0, [sp, #8]
   14e78:	mov	r0, #0
   14e7c:	str	r0, [sp, #16]
   14e80:	ldr	r0, [sp, #36]	; 0x24
   14e84:	str	r4, [r0]
   14e88:	mov	r0, r6
   14e8c:	bl	11aac <readdir64@plt>
   14e90:	cmp	r0, #0
   14e94:	beq	1519c <__assert_fail@plt+0x35dc>
   14e98:	mov	r8, r0
   14e9c:	ldrb	r0, [r5, #48]	; 0x30
   14ea0:	tst	r0, #32
   14ea4:	bne	14ed4 <__assert_fail@plt+0x3314>
   14ea8:	ldrb	r0, [r8, #19]
   14eac:	cmp	r0, #46	; 0x2e
   14eb0:	bne	14ed4 <__assert_fail@plt+0x3314>
   14eb4:	ldrb	r0, [r8, #20]
   14eb8:	cmp	r0, #0
   14ebc:	beq	1516c <__assert_fail@plt+0x35ac>
   14ec0:	cmp	r0, #46	; 0x2e
   14ec4:	bne	14ed4 <__assert_fail@plt+0x3314>
   14ec8:	ldrb	r0, [r8, #21]
   14ecc:	cmp	r0, #0
   14ed0:	beq	1516c <__assert_fail@plt+0x35ac>
   14ed4:	add	r4, r8, #19
   14ed8:	mov	r0, r4
   14edc:	bl	119c8 <strlen@plt>
   14ee0:	mov	r5, r0
   14ee4:	add	r0, r0, #176	; 0xb0
   14ee8:	bic	r0, r0, #7
   14eec:	bl	1b120 <lchmod@@Base+0x41c8>
   14ef0:	mov	r6, r0
   14ef4:	cmp	r0, #0
   14ef8:	beq	154f8 <__assert_fail@plt+0x3938>
   14efc:	add	sl, r6, #168	; 0xa8
   14f00:	mov	r1, r4
   14f04:	mov	r2, r5
   14f08:	str	r7, [fp, #-40]	; 0xffffffd8
   14f0c:	mov	r0, sl
   14f10:	bl	11830 <memcpy@plt>
   14f14:	ldr	r2, [sp, #48]	; 0x30
   14f18:	mov	r0, #0
   14f1c:	mov	r1, #196608	; 0x30000
   14f20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14f24:	strb	r0, [sl, r5]
   14f28:	str	r5, [r6, #52]	; 0x34
   14f2c:	str	r2, [r6, #44]	; 0x2c
   14f30:	add	r7, r5, r3
   14f34:	ldr	r4, [r2, #24]
   14f38:	str	r0, [r6, #12]
   14f3c:	str	r0, [r6, #16]
   14f40:	str	r0, [r6, #20]
   14f44:	str	r1, [r6, #58]	; 0x3a
   14f48:	str	r4, [r6, #28]
   14f4c:	str	r0, [r6, #32]
   14f50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14f54:	cmp	r5, r0
   14f58:	bcs	14f6c <__assert_fail@plt+0x33ac>
   14f5c:	mov	r5, r2
   14f60:	cmp	r7, r3
   14f64:	bcs	14fdc <__assert_fail@plt+0x341c>
   14f68:	b	153e8 <__assert_fail@plt+0x3828>
   14f6c:	ldr	r1, [r2, #36]	; 0x24
   14f70:	movw	r0, #257	; 0x101
   14f74:	mov	r5, r2
   14f78:	add	r0, r7, r0
   14f7c:	adds	r1, r0, r1
   14f80:	bcs	154c4 <__assert_fail@plt+0x3904>
   14f84:	mov	r0, r4
   14f88:	str	r1, [r5, #36]	; 0x24
   14f8c:	bl	1b150 <lchmod@@Base+0x41f8>
   14f90:	cmp	r0, #0
   14f94:	beq	154e4 <__assert_fail@plt+0x3924>
   14f98:	cmp	r0, r4
   14f9c:	str	r0, [r5, #24]
   14fa0:	beq	14fc8 <__assert_fail@plt+0x3408>
   14fa4:	ldrb	r1, [r5, #48]	; 0x30
   14fa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14fac:	tst	r1, #4
   14fb0:	ldr	r1, [sp, #40]	; 0x28
   14fb4:	addne	r1, r0, r3
   14fb8:	mov	r0, #1
   14fbc:	str	r1, [sp, #40]	; 0x28
   14fc0:	str	r0, [sp, #16]
   14fc4:	b	14fcc <__assert_fail@plt+0x340c>
   14fc8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14fcc:	ldr	r0, [r5, #36]	; 0x24
   14fd0:	sub	r0, r0, r3
   14fd4:	cmp	r7, r3
   14fd8:	bcc	153e8 <__assert_fail@plt+0x3828>
   14fdc:	str	r0, [fp, #-36]	; 0xffffffdc
   14fe0:	ldr	r0, [sp, #24]
   14fe4:	add	r4, r6, #112	; 0x70
   14fe8:	str	r0, [r6, #48]	; 0x30
   14fec:	ldr	r0, [r5]
   14ff0:	str	r7, [r6, #40]	; 0x28
   14ff4:	str	r0, [r6, #4]
   14ff8:	ldrd	r0, [r8]
   14ffc:	strd	r0, [r4, #48]	; 0x30
   15000:	ldrb	r0, [r5, #48]	; 0x30
   15004:	tst	r0, #4
   15008:	bne	15014 <__assert_fail@plt+0x3454>
   1500c:	str	sl, [r6, #24]
   15010:	b	15030 <__assert_fail@plt+0x3470>
   15014:	ldr	r0, [r6, #28]
   15018:	ldr	r1, [r6, #52]	; 0x34
   1501c:	str	r0, [r6, #24]
   15020:	ldr	r0, [sp, #40]	; 0x28
   15024:	add	r2, r1, #1
   15028:	mov	r1, sl
   1502c:	bl	11800 <memmove@plt>
   15030:	ldr	r0, [r5, #44]	; 0x2c
   15034:	ldr	r7, [fp, #-40]	; 0xffffffd8
   15038:	ldr	r2, [r5, #48]	; 0x30
   1503c:	ldr	sl, [sp, #28]
   15040:	cmp	r0, #0
   15044:	beq	15068 <__assert_fail@plt+0x34a8>
   15048:	ands	r0, r2, #1024	; 0x400
   1504c:	bne	15068 <__assert_fail@plt+0x34a8>
   15050:	mov	r0, r5
   15054:	mov	r1, r6
   15058:	mov	r2, #0
   1505c:	bl	13bd8 <__assert_fail@plt+0x2018>
   15060:	strh	r0, [r6, #56]	; 0x38
   15064:	b	150dc <__assert_fail@plt+0x351c>
   15068:	ldrb	r3, [r8, #18]
   1506c:	mov	r0, #0
   15070:	tst	r2, #8
   15074:	mov	r1, #0
   15078:	beq	1509c <__assert_fail@plt+0x34dc>
   1507c:	orr	r1, r3, #4
   15080:	cmp	r1, #4
   15084:	mov	r1, #0
   15088:	beq	1509c <__assert_fail@plt+0x34dc>
   1508c:	eor	r1, r3, #10
   15090:	and	r2, r2, #16
   15094:	orrs	r1, r2, r1
   15098:	movwne	r1, #1
   1509c:	mov	r2, #11
   150a0:	strh	r2, [r6, #56]	; 0x38
   150a4:	sub	r2, r3, #1
   150a8:	uxtb	r3, r2
   150ac:	cmp	r3, #11
   150b0:	bhi	150c4 <__assert_fail@plt+0x3504>
   150b4:	sxtb	r0, r2
   150b8:	movw	r2, #50248	; 0xc448
   150bc:	movt	r2, #1
   150c0:	ldr	r0, [r2, r0, lsl #2]
   150c4:	cmp	r1, #0
   150c8:	str	r0, [r6, #80]	; 0x50
   150cc:	mov	r0, #2
   150d0:	mov	r1, #0
   150d4:	movwne	r0, #1
   150d8:	strd	r0, [r4]
   150dc:	mov	r4, #0
   150e0:	cmp	r9, #0
   150e4:	str	r4, [r6, #8]
   150e8:	beq	150f8 <__assert_fail@plt+0x3538>
   150ec:	ldr	r0, [sp, #44]	; 0x2c
   150f0:	str	r6, [r0, #8]
   150f4:	b	150fc <__assert_fail@plt+0x353c>
   150f8:	mov	r9, r6
   150fc:	movw	r0, #10000	; 0x2710
   15100:	cmp	r7, r0
   15104:	bne	15158 <__assert_fail@plt+0x3598>
   15108:	ldr	r0, [sp, #20]
   1510c:	ldr	r0, [r0]
   15110:	cmp	r0, #0
   15114:	bne	15158 <__assert_fail@plt+0x3598>
   15118:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1511c:	mov	r0, sl
   15120:	bl	15984 <__assert_fail@plt+0x3dc4>
   15124:	mov	r1, #0
   15128:	str	r1, [sp, #8]
   1512c:	movw	r1, #19778	; 0x4d42
   15130:	movt	r1, #65363	; 0xff53
   15134:	cmp	r0, r1
   15138:	movwne	r1, #26985	; 0x6969
   1513c:	cmpne	r0, r1
   15140:	beq	15158 <__assert_fail@plt+0x3598>
   15144:	movw	r1, #6548	; 0x1994
   15148:	movt	r1, #258	; 0x102
   1514c:	cmp	r0, r1
   15150:	movne	r0, #1
   15154:	strne	r0, [sp, #8]
   15158:	ldr	r0, [sp, #32]
   1515c:	add	r7, r7, #1
   15160:	cmp	r0, r7
   15164:	bls	15178 <__assert_fail@plt+0x35b8>
   15168:	str	r6, [sp, #44]	; 0x2c
   1516c:	ldr	r6, [sl, #12]
   15170:	cmp	r6, #0
   15174:	bne	14e80 <__assert_fail@plt+0x32c0>
   15178:	ldr	r0, [sp, #16]
   1517c:	ldr	ip, [sp]
   15180:	ldr	r4, [sp, #8]
   15184:	tst	r0, #1
   15188:	bne	151f0 <__assert_fail@plt+0x3630>
   1518c:	b	15290 <__assert_fail@plt+0x36d0>
   15190:	mov	r7, #0
   15194:	mov	r4, #0
   15198:	b	15290 <__assert_fail@plt+0x36d0>
   1519c:	ldr	r0, [sp, #36]	; 0x24
   151a0:	ldr	r0, [r0]
   151a4:	cmp	r0, #0
   151a8:	beq	151c4 <__assert_fail@plt+0x3604>
   151ac:	str	r0, [sl, #32]
   151b0:	ldr	r0, [sp, #12]
   151b4:	orrs	r0, r0, r7
   151b8:	mov	r0, #4
   151bc:	movwne	r0, #7
   151c0:	strh	r0, [sl, #56]	; 0x38
   151c4:	ldr	r0, [sl, #12]
   151c8:	ldr	r4, [sp, #8]
   151cc:	cmp	r0, #0
   151d0:	beq	151e0 <__assert_fail@plt+0x3620>
   151d4:	bl	11b9c <closedir@plt>
   151d8:	mov	r0, #0
   151dc:	str	r0, [sl, #12]
   151e0:	ldr	r0, [sp, #16]
   151e4:	ldr	ip, [sp]
   151e8:	tst	r0, #1
   151ec:	beq	15290 <__assert_fail@plt+0x36d0>
   151f0:	ldr	r1, [r5, #4]
   151f4:	ldr	r0, [r5, #24]
   151f8:	cmp	r1, #0
   151fc:	bne	15214 <__assert_fail@plt+0x3654>
   15200:	b	15238 <__assert_fail@plt+0x3678>
   15204:	str	r0, [r1, #28]
   15208:	ldr	r1, [r1, #8]
   1520c:	cmp	r1, #0
   15210:	beq	15238 <__assert_fail@plt+0x3678>
   15214:	ldr	r2, [r1, #24]
   15218:	add	r3, r1, #168	; 0xa8
   1521c:	cmp	r2, r3
   15220:	beq	15204 <__assert_fail@plt+0x3644>
   15224:	ldr	r3, [r1, #28]
   15228:	sub	r2, r2, r3
   1522c:	add	r2, r0, r2
   15230:	str	r2, [r1, #24]
   15234:	b	15204 <__assert_fail@plt+0x3644>
   15238:	ldr	r1, [r9, #48]	; 0x30
   1523c:	cmp	r1, #0
   15240:	bmi	15290 <__assert_fail@plt+0x36d0>
   15244:	mov	r1, r9
   15248:	b	1526c <__assert_fail@plt+0x36ac>
   1524c:	str	r0, [r1, #28]
   15250:	ldr	r2, [r1, #8]
   15254:	cmp	r2, #0
   15258:	ldreq	r2, [r1, #4]
   1525c:	ldr	r1, [r2, #48]	; 0x30
   15260:	cmn	r1, #1
   15264:	mov	r1, r2
   15268:	ble	15290 <__assert_fail@plt+0x36d0>
   1526c:	ldr	r2, [r1, #24]
   15270:	add	r3, r1, #168	; 0xa8
   15274:	cmp	r2, r3
   15278:	beq	1524c <__assert_fail@plt+0x368c>
   1527c:	ldr	r3, [r1, #28]
   15280:	sub	r2, r2, r3
   15284:	add	r2, r0, r2
   15288:	str	r2, [r1, #24]
   1528c:	b	1524c <__assert_fail@plt+0x368c>
   15290:	ldrb	r0, [r5, #48]	; 0x30
   15294:	tst	r0, #4
   15298:	beq	152c4 <__assert_fail@plt+0x3704>
   1529c:	ldr	r2, [sp, #40]	; 0x28
   152a0:	ldr	r0, [r5, #36]	; 0x24
   152a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   152a8:	cmp	r3, r0
   152ac:	sub	r1, r2, #1
   152b0:	mov	r0, #0
   152b4:	moveq	r2, r1
   152b8:	cmp	r7, #0
   152bc:	moveq	r2, r1
   152c0:	strb	r0, [r2]
   152c4:	ldr	r0, [sp, #12]
   152c8:	cmp	r0, #0
   152cc:	movwne	r0, #1
   152d0:	orrs	r0, r0, ip
   152d4:	beq	1533c <__assert_fail@plt+0x377c>
   152d8:	cmp	r7, #0
   152dc:	bne	1537c <__assert_fail@plt+0x37bc>
   152e0:	ldr	r0, [sp, #4]
   152e4:	cmp	r0, #3
   152e8:	bne	15300 <__assert_fail@plt+0x3740>
   152ec:	ldrh	r0, [sl, #56]	; 0x38
   152f0:	cmp	r0, #4
   152f4:	cmpne	r0, #7
   152f8:	movne	r0, #6
   152fc:	strhne	r0, [sl, #56]	; 0x38
   15300:	mov	r6, #0
   15304:	cmp	r9, #0
   15308:	bne	15324 <__assert_fail@plt+0x3764>
   1530c:	b	15570 <__assert_fail@plt+0x39b0>
   15310:	mov	r0, r9
   15314:	bl	136b8 <__assert_fail@plt+0x1af8>
   15318:	cmp	r4, #0
   1531c:	mov	r9, r4
   15320:	beq	15570 <__assert_fail@plt+0x39b0>
   15324:	ldrd	r4, [r9, #8]
   15328:	cmp	r5, #0
   1532c:	beq	15310 <__assert_fail@plt+0x3750>
   15330:	mov	r0, r5
   15334:	bl	11b9c <closedir@plt>
   15338:	b	15310 <__assert_fail@plt+0x3750>
   1533c:	ldr	r0, [sp, #4]
   15340:	cmp	r0, #1
   15344:	cmpne	r7, #0
   15348:	bne	1537c <__assert_fail@plt+0x37bc>
   1534c:	ldr	r0, [sl, #48]	; 0x30
   15350:	cmp	r0, #0
   15354:	beq	15464 <__assert_fail@plt+0x38a4>
   15358:	ldr	r1, [sl, #4]
   1535c:	movw	r3, #50242	; 0xc442
   15360:	mov	r0, r5
   15364:	mvn	r2, #0
   15368:	movt	r3, #1
   1536c:	bl	1488c <__assert_fail@plt+0x2ccc>
   15370:	cmp	r0, #0
   15374:	bne	15474 <__assert_fail@plt+0x38b4>
   15378:	b	152d8 <__assert_fail@plt+0x3718>
   1537c:	tst	r4, #1
   15380:	beq	153b0 <__assert_fail@plt+0x37f0>
   15384:	movw	r0, #22860	; 0x594c
   15388:	mov	r1, r9
   1538c:	mov	r2, r7
   15390:	movt	r0, #1
   15394:	str	r0, [r5, #44]	; 0x2c
   15398:	mov	r0, r5
   1539c:	bl	13d70 <__assert_fail@plt+0x21b0>
   153a0:	mov	r6, r0
   153a4:	mov	r0, #0
   153a8:	str	r0, [r5, #44]	; 0x2c
   153ac:	b	15570 <__assert_fail@plt+0x39b0>
   153b0:	cmp	r7, #2
   153b4:	bcc	153e0 <__assert_fail@plt+0x3820>
   153b8:	ldr	r0, [sp, #20]
   153bc:	ldr	r0, [r0]
   153c0:	cmp	r0, #0
   153c4:	beq	153e0 <__assert_fail@plt+0x3820>
   153c8:	mov	r0, r5
   153cc:	mov	r1, r9
   153d0:	mov	r2, r7
   153d4:	bl	13d70 <__assert_fail@plt+0x21b0>
   153d8:	mov	r6, r0
   153dc:	b	15570 <__assert_fail@plt+0x39b0>
   153e0:	mov	r6, r9
   153e4:	b	15570 <__assert_fail@plt+0x39b0>
   153e8:	mov	r0, r6
   153ec:	bl	136b8 <__assert_fail@plt+0x1af8>
   153f0:	ldr	r7, [sp, #28]
   153f4:	cmp	r9, #0
   153f8:	bne	15414 <__assert_fail@plt+0x3854>
   153fc:	b	1542c <__assert_fail@plt+0x386c>
   15400:	mov	r0, r9
   15404:	bl	136b8 <__assert_fail@plt+0x1af8>
   15408:	cmp	r4, #0
   1540c:	mov	r9, r4
   15410:	beq	1542c <__assert_fail@plt+0x386c>
   15414:	ldrd	r4, [r9, #8]
   15418:	cmp	r5, #0
   1541c:	beq	15400 <__assert_fail@plt+0x3840>
   15420:	mov	r0, r5
   15424:	bl	11b9c <closedir@plt>
   15428:	b	15400 <__assert_fail@plt+0x3840>
   1542c:	ldr	r0, [r7, #12]
   15430:	bl	11b9c <closedir@plt>
   15434:	ldr	r1, [sp, #48]	; 0x30
   15438:	mov	r0, #7
   1543c:	mov	r6, #0
   15440:	strh	r0, [r7, #56]	; 0x38
   15444:	str	r6, [r7, #12]
   15448:	ldr	r0, [r1, #48]	; 0x30
   1544c:	orr	r0, r0, #8192	; 0x2000
   15450:	str	r0, [r1, #48]	; 0x30
   15454:	ldr	r1, [sp, #36]	; 0x24
   15458:	mov	r0, #36	; 0x24
   1545c:	str	r0, [r1]
   15460:	b	15570 <__assert_fail@plt+0x39b0>
   15464:	mov	r0, r5
   15468:	bl	1557c <__assert_fail@plt+0x39bc>
   1546c:	cmp	r0, #0
   15470:	beq	152d8 <__assert_fail@plt+0x3718>
   15474:	mov	r0, #7
   15478:	mov	r6, #0
   1547c:	cmp	r9, #0
   15480:	strh	r0, [sl, #56]	; 0x38
   15484:	ldr	r0, [r5, #48]	; 0x30
   15488:	orr	r0, r0, #8192	; 0x2000
   1548c:	str	r0, [r5, #48]	; 0x30
   15490:	bne	154ac <__assert_fail@plt+0x38ec>
   15494:	b	15570 <__assert_fail@plt+0x39b0>
   15498:	mov	r0, r9
   1549c:	bl	136b8 <__assert_fail@plt+0x1af8>
   154a0:	cmp	r4, #0
   154a4:	mov	r9, r4
   154a8:	beq	15570 <__assert_fail@plt+0x39b0>
   154ac:	ldrd	r4, [r9, #8]
   154b0:	cmp	r5, #0
   154b4:	beq	15498 <__assert_fail@plt+0x38d8>
   154b8:	mov	r0, r5
   154bc:	bl	11b9c <closedir@plt>
   154c0:	b	15498 <__assert_fail@plt+0x38d8>
   154c4:	mov	r0, r4
   154c8:	bl	136b8 <__assert_fail@plt+0x1af8>
   154cc:	ldr	r1, [sp, #36]	; 0x24
   154d0:	mov	r0, #0
   154d4:	str	r0, [r5, #24]
   154d8:	mov	r0, #36	; 0x24
   154dc:	str	r0, [r1]
   154e0:	b	154f4 <__assert_fail@plt+0x3934>
   154e4:	ldr	r0, [r5, #24]
   154e8:	bl	136b8 <__assert_fail@plt+0x1af8>
   154ec:	mov	r0, #0
   154f0:	str	r0, [r5, #24]
   154f4:	ldr	sl, [sp, #28]
   154f8:	ldr	r0, [sp, #36]	; 0x24
   154fc:	ldr	r4, [r0]
   15500:	mov	r0, r6
   15504:	bl	136b8 <__assert_fail@plt+0x1af8>
   15508:	ldr	r5, [sp, #48]	; 0x30
   1550c:	cmp	r9, #0
   15510:	bne	1552c <__assert_fail@plt+0x396c>
   15514:	b	15544 <__assert_fail@plt+0x3984>
   15518:	mov	r0, r9
   1551c:	bl	136b8 <__assert_fail@plt+0x1af8>
   15520:	cmp	r6, #0
   15524:	mov	r9, r6
   15528:	beq	15544 <__assert_fail@plt+0x3984>
   1552c:	ldrd	r6, [r9, #8]
   15530:	cmp	r7, #0
   15534:	beq	15518 <__assert_fail@plt+0x3958>
   15538:	mov	r0, r7
   1553c:	bl	11b9c <closedir@plt>
   15540:	b	15518 <__assert_fail@plt+0x3958>
   15544:	ldr	r0, [sl, #12]
   15548:	bl	11b9c <closedir@plt>
   1554c:	mov	r0, #7
   15550:	mov	r6, #0
   15554:	strh	r0, [sl, #56]	; 0x38
   15558:	str	r6, [sl, #12]
   1555c:	ldr	r0, [r5, #48]	; 0x30
   15560:	orr	r0, r0, #8192	; 0x2000
   15564:	str	r0, [r5, #48]	; 0x30
   15568:	ldr	r0, [sp, #36]	; 0x24
   1556c:	str	r4, [r0]
   15570:	mov	r0, r6
   15574:	sub	sp, fp, #28
   15578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1557c:	push	{r4, r5, fp, lr}
   15580:	add	fp, sp, #8
   15584:	mov	r5, r0
   15588:	ldr	r0, [r0, #48]	; 0x30
   1558c:	mov	r4, #0
   15590:	tst	r0, #4
   15594:	bne	155d8 <__assert_fail@plt+0x3a18>
   15598:	tst	r0, #512	; 0x200
   1559c:	bne	155b8 <__assert_fail@plt+0x39f8>
   155a0:	ldr	r0, [r5, #28]
   155a4:	bl	11adc <fchdir@plt>
   155a8:	cmp	r0, #0
   155ac:	mov	r4, r0
   155b0:	movwne	r4, #1
   155b4:	b	155d8 <__assert_fail@plt+0x3a18>
   155b8:	ldr	r1, [r5, #32]
   155bc:	add	r0, r5, #60	; 0x3c
   155c0:	bl	16ebc <__assert_fail@plt+0x52fc>
   155c4:	cmp	r0, #0
   155c8:	bmi	155d0 <__assert_fail@plt+0x3a10>
   155cc:	bl	11b6c <close@plt>
   155d0:	mvn	r0, #99	; 0x63
   155d4:	str	r0, [r5, #32]
   155d8:	add	r5, r5, #60	; 0x3c
   155dc:	mov	r0, r5
   155e0:	bl	16eb4 <__assert_fail@plt+0x52f4>
   155e4:	cmp	r0, #0
   155e8:	bne	15604 <__assert_fail@plt+0x3a44>
   155ec:	mov	r0, r5
   155f0:	bl	16f08 <__assert_fail@plt+0x5348>
   155f4:	cmp	r0, #0
   155f8:	bmi	155dc <__assert_fail@plt+0x3a1c>
   155fc:	bl	11b6c <close@plt>
   15600:	b	155dc <__assert_fail@plt+0x3a1c>
   15604:	mov	r0, r4
   15608:	pop	{r4, r5, fp, pc}
   1560c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15610:	add	fp, sp, #24
   15614:	mov	r6, r0
   15618:	ldrh	r0, [r0, #48]	; 0x30
   1561c:	mov	r4, r1
   15620:	add	r5, r1, #64	; 0x40
   15624:	movw	r1, #258	; 0x102
   15628:	tst	r0, r1
   1562c:	beq	156a4 <__assert_fail@plt+0x3ae4>
   15630:	mov	r0, #24
   15634:	bl	1b120 <lchmod@@Base+0x41c8>
   15638:	mov	r8, #0
   1563c:	cmp	r0, #0
   15640:	beq	156c4 <__assert_fail@plt+0x3b04>
   15644:	ldrd	r2, [r5]
   15648:	mov	r7, r0
   1564c:	add	r0, r4, #160	; 0xa0
   15650:	stm	r7, {r2, r3}
   15654:	add	r2, r7, #8
   15658:	ldrd	r0, [r0]
   1565c:	stm	r2, {r0, r1, r4}
   15660:	mov	r1, r7
   15664:	ldr	r0, [r6, #56]	; 0x38
   15668:	bl	16ae8 <__assert_fail@plt+0x4f28>
   1566c:	cmp	r0, r7
   15670:	beq	15698 <__assert_fail@plt+0x3ad8>
   15674:	mov	r5, r0
   15678:	mov	r0, r7
   1567c:	bl	136b8 <__assert_fail@plt+0x1af8>
   15680:	cmp	r5, #0
   15684:	beq	156c4 <__assert_fail@plt+0x3b04>
   15688:	ldr	r0, [r5, #16]
   1568c:	mov	r1, #2
   15690:	strh	r1, [r4, #56]	; 0x38
   15694:	str	r0, [r4]
   15698:	mov	r8, #1
   1569c:	mov	r0, r8
   156a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   156a4:	ldr	r0, [r6, #56]	; 0x38
   156a8:	mov	r1, r5
   156ac:	bl	1b2c8 <lchmod@@Base+0x4370>
   156b0:	cmp	r0, #0
   156b4:	mov	r8, #1
   156b8:	movne	r0, #2
   156bc:	strhne	r0, [r4, #56]	; 0x38
   156c0:	strne	r4, [r4]
   156c4:	mov	r0, r8
   156c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   156cc:	push	{fp, lr}
   156d0:	mov	fp, sp
   156d4:	cmp	r2, #5
   156d8:	bcc	156f0 <__assert_fail@plt+0x3b30>
   156dc:	bl	11a04 <__errno_location@plt>
   156e0:	mov	r1, #22
   156e4:	str	r1, [r0]
   156e8:	mov	r0, #1
   156ec:	pop	{fp, pc}
   156f0:	mov	r0, #0
   156f4:	strh	r2, [r1, #60]	; 0x3c
   156f8:	pop	{fp, pc}
   156fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15700:	add	fp, sp, #28
   15704:	sub	sp, sp, #4
   15708:	mov	r9, r0
   1570c:	mvn	r0, #4096	; 0x1000
   15710:	tst	r1, r0
   15714:	beq	1572c <__assert_fail@plt+0x3b6c>
   15718:	bl	11a04 <__errno_location@plt>
   1571c:	mov	r1, #22
   15720:	mov	r5, #0
   15724:	str	r1, [r0]
   15728:	b	1582c <__assert_fail@plt+0x3c6c>
   1572c:	ldr	r8, [r9]
   15730:	mov	r7, r1
   15734:	bl	11a04 <__errno_location@plt>
   15738:	mov	r5, #0
   1573c:	mov	sl, r0
   15740:	str	r5, [r0]
   15744:	ldrb	r0, [r9, #49]	; 0x31
   15748:	tst	r0, #32
   1574c:	bne	1582c <__assert_fail@plt+0x3c6c>
   15750:	ldrh	r0, [r8, #56]	; 0x38
   15754:	cmp	r0, #1
   15758:	beq	15768 <__assert_fail@plt+0x3ba8>
   1575c:	cmp	r0, #9
   15760:	ldreq	r5, [r8, #8]
   15764:	b	1582c <__assert_fail@plt+0x3c6c>
   15768:	ldr	r6, [r9, #4]
   1576c:	cmp	r6, #0
   15770:	bne	1578c <__assert_fail@plt+0x3bcc>
   15774:	b	157a8 <__assert_fail@plt+0x3be8>
   15778:	mov	r0, r6
   1577c:	bl	136b8 <__assert_fail@plt+0x1af8>
   15780:	cmp	r4, #0
   15784:	mov	r6, r4
   15788:	beq	157a8 <__assert_fail@plt+0x3be8>
   1578c:	ldr	r1, [r6, #12]
   15790:	ldr	r4, [r6, #8]
   15794:	cmp	r1, #0
   15798:	beq	15778 <__assert_fail@plt+0x3bb8>
   1579c:	mov	r0, r1
   157a0:	bl	11b9c <closedir@plt>
   157a4:	b	15778 <__assert_fail@plt+0x3bb8>
   157a8:	mov	r4, #1
   157ac:	cmp	r7, #4096	; 0x1000
   157b0:	bne	157c4 <__assert_fail@plt+0x3c04>
   157b4:	ldr	r0, [r9, #48]	; 0x30
   157b8:	mov	r4, #2
   157bc:	orr	r0, r0, #4096	; 0x1000
   157c0:	str	r0, [r9, #48]	; 0x30
   157c4:	ldr	r0, [r8, #48]	; 0x30
   157c8:	cmp	r0, #0
   157cc:	bne	15818 <__assert_fail@plt+0x3c58>
   157d0:	ldr	r0, [r8, #24]
   157d4:	ldrb	r0, [r0]
   157d8:	cmp	r0, #47	; 0x2f
   157dc:	beq	15818 <__assert_fail@plt+0x3c58>
   157e0:	ldr	r0, [r9, #48]	; 0x30
   157e4:	tst	r0, #4
   157e8:	bne	15818 <__assert_fail@plt+0x3c58>
   157ec:	mov	r1, #32768	; 0x8000
   157f0:	tst	r0, #512	; 0x200
   157f4:	and	r1, r1, r0, lsl #11
   157f8:	orr	r1, r1, #18688	; 0x4900
   157fc:	orr	r2, r1, #524288	; 0x80000
   15800:	bne	15838 <__assert_fail@plt+0x3c78>
   15804:	movw	r0, #50243	; 0xc443
   15808:	mov	r1, r2
   1580c:	movt	r0, #1
   15810:	bl	1b618 <lchmod@@Base+0x46c0>
   15814:	b	15848 <__assert_fail@plt+0x3c88>
   15818:	mov	r0, r9
   1581c:	mov	r1, r4
   15820:	bl	14aec <__assert_fail@plt+0x2f2c>
   15824:	mov	r5, r0
   15828:	str	r0, [r9, #4]
   1582c:	mov	r0, r5
   15830:	sub	sp, fp, #28
   15834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15838:	ldr	r0, [r9, #32]
   1583c:	movw	r1, #50243	; 0xc443
   15840:	movt	r1, #1
   15844:	bl	17618 <lchmod@@Base+0x6c0>
   15848:	mov	r8, r0
   1584c:	cmn	r0, #1
   15850:	ble	15894 <__assert_fail@plt+0x3cd4>
   15854:	mov	r0, r9
   15858:	mov	r1, r4
   1585c:	bl	14aec <__assert_fail@plt+0x2f2c>
   15860:	str	r0, [r9, #4]
   15864:	ldrb	r0, [r9, #49]	; 0x31
   15868:	tst	r0, #2
   1586c:	bne	158a0 <__assert_fail@plt+0x3ce0>
   15870:	mov	r0, r8
   15874:	bl	11adc <fchdir@plt>
   15878:	cmp	r0, #0
   1587c:	beq	158d0 <__assert_fail@plt+0x3d10>
   15880:	ldr	r4, [sl]
   15884:	mov	r0, r8
   15888:	bl	11b6c <close@plt>
   1588c:	str	r4, [sl]
   15890:	b	1582c <__assert_fail@plt+0x3c6c>
   15894:	mov	r5, #0
   15898:	str	r5, [r9, #4]
   1589c:	b	1582c <__assert_fail@plt+0x3c6c>
   158a0:	ldr	r1, [r9, #32]
   158a4:	cmp	r1, r8
   158a8:	bne	158b4 <__assert_fail@plt+0x3cf4>
   158ac:	cmn	r1, #100	; 0x64
   158b0:	bne	158e0 <__assert_fail@plt+0x3d20>
   158b4:	add	r0, r9, #60	; 0x3c
   158b8:	bl	16ebc <__assert_fail@plt+0x52fc>
   158bc:	cmp	r0, #0
   158c0:	bmi	158c8 <__assert_fail@plt+0x3d08>
   158c4:	bl	11b6c <close@plt>
   158c8:	str	r8, [r9, #32]
   158cc:	b	158d8 <__assert_fail@plt+0x3d18>
   158d0:	mov	r0, r8
   158d4:	bl	11b6c <close@plt>
   158d8:	ldr	r5, [r9, #4]
   158dc:	b	1582c <__assert_fail@plt+0x3c6c>
   158e0:	bl	11b60 <abort@plt>
   158e4:	push	{fp, lr}
   158e8:	mov	fp, sp
   158ec:	mov	r2, r1
   158f0:	ldrd	r0, [r0, #8]
   158f4:	mov	r3, #0
   158f8:	bl	1b984 <lchmod@@Base+0x4a2c>
   158fc:	mov	r0, r2
   15900:	pop	{fp, pc}
   15904:	push	{r4, r5, fp, lr}
   15908:	add	fp, sp, #8
   1590c:	ldrd	r2, [r1, #8]
   15910:	ldrd	r4, [r0, #8]
   15914:	eor	r3, r5, r3
   15918:	eor	r2, r4, r2
   1591c:	orrs	r2, r2, r3
   15920:	mov	r2, #0
   15924:	bne	15944 <__assert_fail@plt+0x3d84>
   15928:	ldrd	r2, [r1]
   1592c:	ldrd	r0, [r0]
   15930:	eor	r1, r1, r3
   15934:	eor	r0, r0, r2
   15938:	orr	r0, r0, r1
   1593c:	clz	r0, r0
   15940:	lsr	r2, r0, #5
   15944:	mov	r0, r2
   15948:	pop	{r4, r5, fp, pc}
   1594c:	push	{r4, r5, fp, lr}
   15950:	add	fp, sp, #8
   15954:	ldr	r0, [r0]
   15958:	ldrd	r2, [r0, #160]	; 0xa0
   1595c:	ldr	r0, [r1]
   15960:	ldrd	r4, [r0, #160]	; 0xa0
   15964:	mov	r0, #0
   15968:	subs	r1, r4, r2
   1596c:	sbcs	r1, r5, r3
   15970:	movwcc	r0, #1
   15974:	subs	r1, r2, r4
   15978:	sbcs	r1, r3, r5
   1597c:	subcc	r0, r0, #1
   15980:	pop	{r4, r5, fp, pc}
   15984:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15988:	add	fp, sp, #24
   1598c:	sub	sp, sp, #96	; 0x60
   15990:	ldr	r7, [r0, #44]	; 0x2c
   15994:	mov	r4, r0
   15998:	mov	r5, #0
   1599c:	ldrb	r0, [r7, #49]	; 0x31
   159a0:	tst	r0, #2
   159a4:	beq	15aa0 <__assert_fail@plt+0x3ee0>
   159a8:	ldr	r6, [r7, #52]	; 0x34
   159ac:	mov	r9, r1
   159b0:	cmp	r6, #0
   159b4:	bne	159f4 <__assert_fail@plt+0x3e34>
   159b8:	movw	r0, #14008	; 0x36b8
   159bc:	movw	r2, #23212	; 0x5aac
   159c0:	movw	r3, #23244	; 0x5acc
   159c4:	mov	r1, #0
   159c8:	mov	r8, #0
   159cc:	movt	r0, #1
   159d0:	movt	r2, #1
   159d4:	movt	r3, #1
   159d8:	str	r0, [sp]
   159dc:	mov	r0, #13
   159e0:	bl	15f94 <__assert_fail@plt+0x43d4>
   159e4:	mov	r6, r0
   159e8:	cmp	r0, #0
   159ec:	str	r0, [r7, #52]	; 0x34
   159f0:	beq	15a2c <__assert_fail@plt+0x3e6c>
   159f4:	ldrd	r0, [r4, #64]	; 0x40
   159f8:	str	r1, [sp, #12]
   159fc:	str	r0, [sp, #8]
   15a00:	add	r1, sp, #8
   15a04:	mov	r0, r6
   15a08:	bl	15ce0 <__assert_fail@plt+0x4120>
   15a0c:	cmp	r0, #0
   15a10:	beq	15a1c <__assert_fail@plt+0x3e5c>
   15a14:	ldr	r5, [r0, #8]
   15a18:	b	15aa0 <__assert_fail@plt+0x3ee0>
   15a1c:	mov	r8, #1
   15a20:	cmp	r9, #0
   15a24:	bpl	15a38 <__assert_fail@plt+0x3e78>
   15a28:	b	15aa0 <__assert_fail@plt+0x3ee0>
   15a2c:	mov	r6, #0
   15a30:	cmp	r9, #0
   15a34:	bmi	15aa0 <__assert_fail@plt+0x3ee0>
   15a38:	add	r1, sp, #8
   15a3c:	mov	r0, r9
   15a40:	bl	11788 <fstatfs64@plt>
   15a44:	cmp	r0, #0
   15a48:	bne	15aa0 <__assert_fail@plt+0x3ee0>
   15a4c:	cmp	r8, #0
   15a50:	beq	15a9c <__assert_fail@plt+0x3edc>
   15a54:	mov	r0, #16
   15a58:	bl	1b120 <lchmod@@Base+0x41c8>
   15a5c:	cmp	r0, #0
   15a60:	beq	15a9c <__assert_fail@plt+0x3edc>
   15a64:	mov	r5, r0
   15a68:	ldrd	r0, [r4, #64]	; 0x40
   15a6c:	ldr	r2, [sp, #8]
   15a70:	stm	r5, {r0, r1, r2}
   15a74:	mov	r0, r6
   15a78:	mov	r1, r5
   15a7c:	bl	16ae8 <__assert_fail@plt+0x4f28>
   15a80:	cmp	r0, #0
   15a84:	beq	15a94 <__assert_fail@plt+0x3ed4>
   15a88:	cmp	r0, r5
   15a8c:	beq	15a9c <__assert_fail@plt+0x3edc>
   15a90:	bl	11b60 <abort@plt>
   15a94:	mov	r0, r5
   15a98:	bl	136b8 <__assert_fail@plt+0x1af8>
   15a9c:	ldr	r5, [sp, #8]
   15aa0:	mov	r0, r5
   15aa4:	sub	sp, fp, #24
   15aa8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15aac:	push	{fp, lr}
   15ab0:	mov	fp, sp
   15ab4:	mov	r2, r1
   15ab8:	ldrd	r0, [r0]
   15abc:	mov	r3, #0
   15ac0:	bl	1b984 <lchmod@@Base+0x4a2c>
   15ac4:	mov	r0, r2
   15ac8:	pop	{fp, pc}
   15acc:	ldrd	r2, [r1]
   15ad0:	ldrd	r0, [r0]
   15ad4:	eor	r1, r1, r3
   15ad8:	eor	r0, r0, r2
   15adc:	orr	r0, r0, r1
   15ae0:	clz	r0, r0
   15ae4:	lsr	r0, r0, #5
   15ae8:	bx	lr
   15aec:	andeq	r0, r0, r0
   15af0:	ldr	r0, [r0, #8]
   15af4:	bx	lr
   15af8:	ldr	r0, [r0, #12]
   15afc:	bx	lr
   15b00:	ldr	r0, [r0, #16]
   15b04:	bx	lr
   15b08:	ldm	r0, {r2, ip}
   15b0c:	mov	r0, #0
   15b10:	cmp	r2, ip
   15b14:	bxcs	lr
   15b18:	mov	r0, #0
   15b1c:	b	15b2c <__assert_fail@plt+0x3f6c>
   15b20:	add	r2, r2, #8
   15b24:	cmp	r2, ip
   15b28:	bcs	15b5c <__assert_fail@plt+0x3f9c>
   15b2c:	ldr	r1, [r2]
   15b30:	cmp	r1, #0
   15b34:	beq	15b20 <__assert_fail@plt+0x3f60>
   15b38:	mov	r3, #0
   15b3c:	mov	r1, r2
   15b40:	ldr	r1, [r1, #4]
   15b44:	add	r3, r3, #1
   15b48:	cmp	r1, #0
   15b4c:	bne	15b40 <__assert_fail@plt+0x3f80>
   15b50:	cmp	r3, r0
   15b54:	movhi	r0, r3
   15b58:	b	15b20 <__assert_fail@plt+0x3f60>
   15b5c:	bx	lr
   15b60:	push	{fp, lr}
   15b64:	mov	fp, sp
   15b68:	ldm	r0, {r3, ip}
   15b6c:	mov	lr, #0
   15b70:	mov	r1, #0
   15b74:	cmp	r3, ip
   15b78:	bcs	15bbc <__assert_fail@plt+0x3ffc>
   15b7c:	mov	r1, #0
   15b80:	mov	lr, #0
   15b84:	b	15b94 <__assert_fail@plt+0x3fd4>
   15b88:	add	r3, r3, #8
   15b8c:	cmp	r3, ip
   15b90:	bcs	15bbc <__assert_fail@plt+0x3ffc>
   15b94:	ldr	r2, [r3]
   15b98:	cmp	r2, #0
   15b9c:	beq	15b88 <__assert_fail@plt+0x3fc8>
   15ba0:	mov	r2, r3
   15ba4:	ldr	r2, [r2, #4]
   15ba8:	add	r1, r1, #1
   15bac:	cmp	r2, #0
   15bb0:	bne	15ba4 <__assert_fail@plt+0x3fe4>
   15bb4:	add	lr, lr, #1
   15bb8:	b	15b88 <__assert_fail@plt+0x3fc8>
   15bbc:	ldr	r2, [r0, #12]
   15bc0:	cmp	lr, r2
   15bc4:	bne	15bdc <__assert_fail@plt+0x401c>
   15bc8:	ldr	r2, [r0, #16]
   15bcc:	mov	r0, #1
   15bd0:	cmp	r1, r2
   15bd4:	movne	r0, #0
   15bd8:	pop	{fp, pc}
   15bdc:	mov	r0, #0
   15be0:	pop	{fp, pc}
   15be4:	nop	{0}
   15be8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15bec:	add	fp, sp, #24
   15bf0:	sub	sp, sp, #8
   15bf4:	ldr	r6, [r0]
   15bf8:	ldmib	r0, {r2, r7, r8}
   15bfc:	ldr	r3, [r0, #16]
   15c00:	mov	r4, r1
   15c04:	mov	r5, #0
   15c08:	cmp	r6, r2
   15c0c:	bcs	15c54 <__assert_fail@plt+0x4094>
   15c10:	mov	r5, #0
   15c14:	b	15c24 <__assert_fail@plt+0x4064>
   15c18:	add	r6, r6, #8
   15c1c:	cmp	r6, r2
   15c20:	bcs	15c54 <__assert_fail@plt+0x4094>
   15c24:	ldr	r0, [r6]
   15c28:	cmp	r0, #0
   15c2c:	beq	15c18 <__assert_fail@plt+0x4058>
   15c30:	mov	r0, #0
   15c34:	mov	r1, r6
   15c38:	ldr	r1, [r1, #4]
   15c3c:	add	r0, r0, #1
   15c40:	cmp	r1, #0
   15c44:	bne	15c38 <__assert_fail@plt+0x4078>
   15c48:	cmp	r0, r5
   15c4c:	movhi	r5, r0
   15c50:	b	15c18 <__assert_fail@plt+0x4058>
   15c54:	movw	r2, #50296	; 0xc478
   15c58:	mov	r0, r4
   15c5c:	mov	r1, #1
   15c60:	movt	r2, #1
   15c64:	bl	11a4c <__fprintf_chk@plt>
   15c68:	movw	r2, #50320	; 0xc490
   15c6c:	mov	r0, r4
   15c70:	mov	r1, #1
   15c74:	mov	r3, r7
   15c78:	movt	r2, #1
   15c7c:	bl	11a4c <__fprintf_chk@plt>
   15c80:	vmov	s0, r8
   15c84:	vldr	d16, [pc, #76]	; 15cd8 <__assert_fail@plt+0x4118>
   15c88:	movw	r2, #50344	; 0xc4a8
   15c8c:	mov	r0, r4
   15c90:	mov	r1, #1
   15c94:	mov	r3, r8
   15c98:	movt	r2, #1
   15c9c:	vcvt.f64.u32	d17, s0
   15ca0:	vmov	s0, r7
   15ca4:	vcvt.f64.u32	d18, s0
   15ca8:	vmul.f64	d16, d17, d16
   15cac:	vdiv.f64	d16, d16, d18
   15cb0:	vstr	d16, [sp]
   15cb4:	bl	11a4c <__fprintf_chk@plt>
   15cb8:	movw	r2, #50377	; 0xc4c9
   15cbc:	mov	r0, r4
   15cc0:	mov	r1, #1
   15cc4:	mov	r3, r5
   15cc8:	movt	r2, #1
   15ccc:	sub	sp, fp, #24
   15cd0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15cd4:	b	11a4c <__fprintf_chk@plt>
   15cd8:	andeq	r0, r0, r0
   15cdc:	subsmi	r0, r9, r0
   15ce0:	push	{r4, r5, r6, r7, fp, lr}
   15ce4:	add	fp, sp, #16
   15ce8:	mov	r4, r1
   15cec:	ldr	r1, [r0, #8]
   15cf0:	ldr	r2, [r0, #24]
   15cf4:	mov	r5, r0
   15cf8:	mov	r0, r4
   15cfc:	blx	r2
   15d00:	ldr	r1, [r5, #8]
   15d04:	cmp	r0, r1
   15d08:	bcs	15d70 <__assert_fail@plt+0x41b0>
   15d0c:	ldr	r7, [r5]
   15d10:	mov	r6, #0
   15d14:	ldr	r1, [r7, r0, lsl #3]!
   15d18:	cmp	r1, #0
   15d1c:	cmpne	r7, #0
   15d20:	bne	15d50 <__assert_fail@plt+0x4190>
   15d24:	mov	r0, r6
   15d28:	pop	{r4, r5, r6, r7, fp, pc}
   15d2c:	ldr	r2, [r5, #28]
   15d30:	mov	r0, r4
   15d34:	blx	r2
   15d38:	cmp	r0, #0
   15d3c:	bne	15d64 <__assert_fail@plt+0x41a4>
   15d40:	ldr	r7, [r7, #4]
   15d44:	cmp	r7, #0
   15d48:	beq	15d24 <__assert_fail@plt+0x4164>
   15d4c:	ldr	r1, [r7]
   15d50:	cmp	r1, r4
   15d54:	bne	15d2c <__assert_fail@plt+0x416c>
   15d58:	mov	r6, r4
   15d5c:	mov	r0, r6
   15d60:	pop	{r4, r5, r6, r7, fp, pc}
   15d64:	ldr	r6, [r7]
   15d68:	mov	r0, r6
   15d6c:	pop	{r4, r5, r6, r7, fp, pc}
   15d70:	bl	11b60 <abort@plt>
   15d74:	push	{fp, lr}
   15d78:	mov	fp, sp
   15d7c:	ldr	r1, [r0, #16]
   15d80:	cmp	r1, #0
   15d84:	beq	15da4 <__assert_fail@plt+0x41e4>
   15d88:	ldm	r0, {r1, r2}
   15d8c:	cmp	r1, r2
   15d90:	bcs	15dac <__assert_fail@plt+0x41ec>
   15d94:	ldr	r0, [r1], #8
   15d98:	cmp	r0, #0
   15d9c:	beq	15d8c <__assert_fail@plt+0x41cc>
   15da0:	pop	{fp, pc}
   15da4:	mov	r0, #0
   15da8:	pop	{fp, pc}
   15dac:	bl	11b60 <abort@plt>
   15db0:	push	{r4, r5, fp, lr}
   15db4:	add	fp, sp, #8
   15db8:	mov	r5, r1
   15dbc:	ldr	r1, [r0, #8]
   15dc0:	ldr	r2, [r0, #24]
   15dc4:	mov	r4, r0
   15dc8:	mov	r0, r5
   15dcc:	blx	r2
   15dd0:	ldr	r1, [r4, #8]
   15dd4:	cmp	r0, r1
   15dd8:	bcs	15e3c <__assert_fail@plt+0x427c>
   15ddc:	ldr	r1, [r4]
   15de0:	add	r2, r1, r0, lsl #3
   15de4:	ldr	r3, [r2]
   15de8:	ldr	r2, [r2, #4]
   15dec:	cmp	r3, r5
   15df0:	beq	15e00 <__assert_fail@plt+0x4240>
   15df4:	cmp	r2, #0
   15df8:	bne	15de4 <__assert_fail@plt+0x4224>
   15dfc:	b	15e10 <__assert_fail@plt+0x4250>
   15e00:	cmp	r2, #0
   15e04:	beq	15e10 <__assert_fail@plt+0x4250>
   15e08:	ldr	r0, [r2]
   15e0c:	pop	{r4, r5, fp, pc}
   15e10:	ldr	r2, [r4, #4]
   15e14:	add	r0, r1, r0, lsl #3
   15e18:	add	r1, r0, #8
   15e1c:	cmp	r1, r2
   15e20:	bcs	15e34 <__assert_fail@plt+0x4274>
   15e24:	ldr	r0, [r1], #8
   15e28:	cmp	r0, #0
   15e2c:	beq	15e1c <__assert_fail@plt+0x425c>
   15e30:	pop	{r4, r5, fp, pc}
   15e34:	mov	r0, #0
   15e38:	pop	{r4, r5, fp, pc}
   15e3c:	bl	11b60 <abort@plt>
   15e40:	push	{r4, r5, fp, lr}
   15e44:	add	fp, sp, #8
   15e48:	ldm	r0, {r5, lr}
   15e4c:	mov	ip, r0
   15e50:	mov	r0, #0
   15e54:	cmp	r5, lr
   15e58:	popcs	{r4, r5, fp, pc}
   15e5c:	mov	r0, #0
   15e60:	b	15e74 <__assert_fail@plt+0x42b4>
   15e64:	ldr	lr, [ip, #4]
   15e68:	add	r5, r5, #8
   15e6c:	cmp	r5, lr
   15e70:	bcs	15eac <__assert_fail@plt+0x42ec>
   15e74:	ldr	r3, [r5]
   15e78:	cmp	r3, #0
   15e7c:	cmpne	r5, #0
   15e80:	beq	15e68 <__assert_fail@plt+0x42a8>
   15e84:	mov	r3, r5
   15e88:	cmp	r0, r2
   15e8c:	bcs	15eac <__assert_fail@plt+0x42ec>
   15e90:	ldr	r4, [r3]
   15e94:	str	r4, [r1, r0, lsl #2]
   15e98:	add	r0, r0, #1
   15e9c:	ldr	r3, [r3, #4]
   15ea0:	cmp	r3, #0
   15ea4:	bne	15e88 <__assert_fail@plt+0x42c8>
   15ea8:	b	15e64 <__assert_fail@plt+0x42a4>
   15eac:	pop	{r4, r5, fp, pc}
   15eb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15eb4:	add	fp, sp, #24
   15eb8:	mov	r5, r1
   15ebc:	ldr	r4, [r0]
   15ec0:	ldr	r1, [r0, #4]
   15ec4:	mov	r6, #0
   15ec8:	cmp	r4, r1
   15ecc:	bcs	15f38 <__assert_fail@plt+0x4378>
   15ed0:	mov	r9, r2
   15ed4:	mov	r8, r0
   15ed8:	mov	r6, #0
   15edc:	b	15ef0 <__assert_fail@plt+0x4330>
   15ee0:	ldr	r1, [r8, #4]
   15ee4:	add	r4, r4, #8
   15ee8:	cmp	r4, r1
   15eec:	bcs	15f38 <__assert_fail@plt+0x4378>
   15ef0:	ldr	r0, [r4]
   15ef4:	cmp	r0, #0
   15ef8:	cmpne	r4, #0
   15efc:	beq	15ee4 <__assert_fail@plt+0x4324>
   15f00:	mov	r1, r9
   15f04:	blx	r5
   15f08:	cmp	r0, #0
   15f0c:	beq	15f38 <__assert_fail@plt+0x4378>
   15f10:	mov	r7, r4
   15f14:	ldr	r7, [r7, #4]
   15f18:	add	r6, r6, #1
   15f1c:	cmp	r7, #0
   15f20:	beq	15ee0 <__assert_fail@plt+0x4320>
   15f24:	ldr	r0, [r7]
   15f28:	mov	r1, r9
   15f2c:	blx	r5
   15f30:	cmp	r0, #0
   15f34:	bne	15f14 <__assert_fail@plt+0x4354>
   15f38:	mov	r0, r6
   15f3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f40:	ldrb	r2, [r0]
   15f44:	cmp	r2, #0
   15f48:	moveq	r0, #0
   15f4c:	bxeq	lr
   15f50:	add	r3, r0, #1
   15f54:	mov	r0, #0
   15f58:	rsb	r0, r0, r0, lsl #5
   15f5c:	uxtab	r0, r0, r2
   15f60:	udiv	r2, r0, r1
   15f64:	mls	r0, r2, r1, r0
   15f68:	ldrb	r2, [r3], #1
   15f6c:	cmp	r2, #0
   15f70:	bne	15f58 <__assert_fail@plt+0x4398>
   15f74:	bx	lr
   15f78:	movw	r1, #50408	; 0xc4e8
   15f7c:	movt	r1, #1
   15f80:	vld1.32	{d16-d17}, [r1]!
   15f84:	ldr	r1, [r1]
   15f88:	vst1.32	{d16-d17}, [r0]!
   15f8c:	str	r1, [r0]
   15f90:	bx	lr
   15f94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15f98:	add	fp, sp, #24
   15f9c:	movw	r9, #25020	; 0x61bc
   15fa0:	cmp	r3, #0
   15fa4:	movw	r5, #25000	; 0x61a8
   15fa8:	mov	r6, r0
   15fac:	mov	r0, #40	; 0x28
   15fb0:	mov	r7, r1
   15fb4:	movt	r9, #1
   15fb8:	movne	r9, r3
   15fbc:	cmp	r2, #0
   15fc0:	movt	r5, #1
   15fc4:	movne	r5, r2
   15fc8:	bl	1b120 <lchmod@@Base+0x41c8>
   15fcc:	mov	r8, #0
   15fd0:	cmp	r0, #0
   15fd4:	beq	16190 <__assert_fail@plt+0x45d0>
   15fd8:	mov	r4, r0
   15fdc:	movw	r0, #50408	; 0xc4e8
   15fe0:	cmp	r7, #0
   15fe4:	movt	r0, #1
   15fe8:	moveq	r7, r0
   15fec:	cmp	r7, r0
   15ff0:	str	r7, [r4, #20]
   15ff4:	beq	16070 <__assert_fail@plt+0x44b0>
   15ff8:	vldr	s2, [pc, #408]	; 16198 <__assert_fail@plt+0x45d8>
   15ffc:	vldr	s0, [r7, #8]
   16000:	vcmpe.f32	s0, s2
   16004:	vmrs	APSR_nzcv, fpscr
   16008:	ble	1611c <__assert_fail@plt+0x455c>
   1600c:	vldr	s4, [pc, #392]	; 1619c <__assert_fail@plt+0x45dc>
   16010:	vcmpe.f32	s0, s4
   16014:	vmrs	APSR_nzcv, fpscr
   16018:	bpl	1611c <__assert_fail@plt+0x455c>
   1601c:	vldr	s4, [pc, #380]	; 161a0 <__assert_fail@plt+0x45e0>
   16020:	vldr	s6, [r7, #12]
   16024:	vcmpe.f32	s6, s4
   16028:	vmrs	APSR_nzcv, fpscr
   1602c:	ble	1611c <__assert_fail@plt+0x455c>
   16030:	vldr	s4, [r7]
   16034:	vcmpe.f32	s4, #0.0
   16038:	vmrs	APSR_nzcv, fpscr
   1603c:	blt	1611c <__assert_fail@plt+0x455c>
   16040:	vadd.f32	s2, s4, s2
   16044:	vcmpe.f32	s2, s0
   16048:	vmrs	APSR_nzcv, fpscr
   1604c:	bpl	1611c <__assert_fail@plt+0x455c>
   16050:	vldr	s0, [r7, #4]
   16054:	vmov.f32	s4, #112	; 0x3f800000  1.0
   16058:	vcmpe.f32	s0, s4
   1605c:	vmrs	APSR_nzcv, fpscr
   16060:	bhi	1611c <__assert_fail@plt+0x455c>
   16064:	vcmpe.f32	s2, s0
   16068:	vmrs	APSR_nzcv, fpscr
   1606c:	bpl	1611c <__assert_fail@plt+0x455c>
   16070:	ldrb	r0, [r7, #16]
   16074:	cmp	r0, #0
   16078:	bne	160a4 <__assert_fail@plt+0x44e4>
   1607c:	vmov	s2, r6
   16080:	vldr	s0, [r7, #8]
   16084:	vldr	s4, [pc, #280]	; 161a4 <__assert_fail@plt+0x45e4>
   16088:	vcvt.f32.u32	s2, s2
   1608c:	vdiv.f32	s2, s2, s0
   16090:	vcvt.u32.f32	s0, s2
   16094:	vcmpe.f32	s2, s4
   16098:	vmrs	APSR_nzcv, fpscr
   1609c:	bge	1612c <__assert_fail@plt+0x456c>
   160a0:	vmov	r6, s0
   160a4:	cmp	r6, #10
   160a8:	movls	r6, #10
   160ac:	orr	r0, r6, #1
   160b0:	cmn	r0, #1
   160b4:	beq	1612c <__assert_fail@plt+0x456c>
   160b8:	ldr	r6, [fp, #8]
   160bc:	mov	r1, #3
   160c0:	cmp	r0, #10
   160c4:	bcc	160fc <__assert_fail@plt+0x453c>
   160c8:	mov	r1, #3
   160cc:	mov	r3, #9
   160d0:	mov	r2, #12
   160d4:	udiv	r7, r0, r1
   160d8:	mls	r7, r7, r1, r0
   160dc:	cmp	r7, #0
   160e0:	beq	160fc <__assert_fail@plt+0x453c>
   160e4:	add	r3, r3, r2
   160e8:	add	r2, r2, #8
   160ec:	add	r1, r1, #2
   160f0:	add	r3, r3, #4
   160f4:	cmp	r3, r0
   160f8:	bcc	160d4 <__assert_fail@plt+0x4514>
   160fc:	udiv	r2, r0, r1
   16100:	mls	r1, r2, r1, r0
   16104:	cmp	r1, #0
   16108:	bne	16124 <__assert_fail@plt+0x4564>
   1610c:	add	r0, r0, #2
   16110:	cmn	r0, #1
   16114:	bne	160bc <__assert_fail@plt+0x44fc>
   16118:	b	1612c <__assert_fail@plt+0x456c>
   1611c:	str	r0, [r4, #20]
   16120:	b	16134 <__assert_fail@plt+0x4574>
   16124:	cmp	r0, #536870912	; 0x20000000
   16128:	bcc	16144 <__assert_fail@plt+0x4584>
   1612c:	mov	r0, #0
   16130:	str	r0, [r4, #8]
   16134:	mov	r0, r4
   16138:	bl	136b8 <__assert_fail@plt+0x1af8>
   1613c:	mov	r0, r8
   16140:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16144:	cmp	r0, #0
   16148:	str	r0, [r4, #8]
   1614c:	beq	16134 <__assert_fail@plt+0x4574>
   16150:	mov	r1, #8
   16154:	bl	1b0cc <lchmod@@Base+0x4174>
   16158:	cmp	r0, #0
   1615c:	str	r0, [r4]
   16160:	beq	16134 <__assert_fail@plt+0x4574>
   16164:	mov	r1, #0
   16168:	str	r5, [r4, #24]
   1616c:	str	r9, [r4, #28]
   16170:	str	r6, [r4, #32]
   16174:	mov	r8, r4
   16178:	str	r1, [r4, #36]	; 0x24
   1617c:	str	r1, [r4, #12]
   16180:	str	r1, [r4, #16]
   16184:	ldr	r1, [r4, #8]
   16188:	add	r0, r0, r1, lsl #3
   1618c:	str	r0, [r4, #4]
   16190:	mov	r0, r8
   16194:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16198:	stclcc	12, cr12, [ip, #820]	; 0x334
   1619c:	svccc	0x00666666
   161a0:	svccc	0x008ccccd
   161a4:	svcmi	0x00800000
   161a8:	ror	r2, r0, #3
   161ac:	udiv	r2, r2, r1
   161b0:	mul	r1, r2, r1
   161b4:	rsb	r0, r1, r0, ror #3
   161b8:	bx	lr
   161bc:	sub	r0, r0, r1
   161c0:	clz	r0, r0
   161c4:	lsr	r0, r0, #5
   161c8:	bx	lr
   161cc:	push	{r4, r5, r6, r7, fp, lr}
   161d0:	add	fp, sp, #16
   161d4:	mov	r4, r0
   161d8:	ldr	r5, [r0]
   161dc:	ldr	r0, [r0, #4]
   161e0:	cmp	r5, r0
   161e4:	bcs	16288 <__assert_fail@plt+0x46c8>
   161e8:	mov	r6, #0
   161ec:	b	16208 <__assert_fail@plt+0x4648>
   161f0:	str	r6, [r5]
   161f4:	str	r6, [r5, #4]
   161f8:	ldr	r0, [r4, #4]
   161fc:	add	r5, r5, #8
   16200:	cmp	r5, r0
   16204:	bcs	16288 <__assert_fail@plt+0x46c8>
   16208:	ldr	r1, [r5]
   1620c:	cmp	r1, #0
   16210:	beq	161fc <__assert_fail@plt+0x463c>
   16214:	ldr	r1, [r4, #32]
   16218:	ldr	r7, [r5, #4]
   1621c:	cmp	r1, #0
   16220:	mov	r0, r1
   16224:	movwne	r0, #1
   16228:	cmp	r7, #0
   1622c:	bne	16270 <__assert_fail@plt+0x46b0>
   16230:	cmp	r0, #0
   16234:	beq	161f0 <__assert_fail@plt+0x4630>
   16238:	ldr	r0, [r5]
   1623c:	blx	r1
   16240:	b	161f0 <__assert_fail@plt+0x4630>
   16244:	str	r6, [r7]
   16248:	cmp	r1, #0
   1624c:	ldr	r2, [r7, #4]
   16250:	ldr	r0, [r4, #36]	; 0x24
   16254:	str	r0, [r7, #4]
   16258:	mov	r0, r1
   1625c:	str	r7, [r4, #36]	; 0x24
   16260:	movwne	r0, #1
   16264:	cmp	r2, #0
   16268:	mov	r7, r2
   1626c:	beq	16230 <__assert_fail@plt+0x4670>
   16270:	tst	r0, #1
   16274:	beq	16244 <__assert_fail@plt+0x4684>
   16278:	ldr	r0, [r7]
   1627c:	blx	r1
   16280:	ldr	r1, [r4, #32]
   16284:	b	16244 <__assert_fail@plt+0x4684>
   16288:	mov	r0, #0
   1628c:	str	r0, [r4, #12]
   16290:	str	r0, [r4, #16]
   16294:	pop	{r4, r5, r6, r7, fp, pc}
   16298:	push	{r4, r5, r6, sl, fp, lr}
   1629c:	add	fp, sp, #16
   162a0:	mov	r4, r0
   162a4:	ldr	r0, [r0, #32]
   162a8:	cmp	r0, #0
   162ac:	beq	16320 <__assert_fail@plt+0x4760>
   162b0:	ldr	r0, [r4, #16]
   162b4:	cmp	r0, #0
   162b8:	beq	16320 <__assert_fail@plt+0x4760>
   162bc:	ldr	r5, [r4]
   162c0:	ldr	r1, [r4, #4]
   162c4:	cmp	r5, r1
   162c8:	bcc	162e0 <__assert_fail@plt+0x4720>
   162cc:	b	16320 <__assert_fail@plt+0x4760>
   162d0:	ldr	r1, [r4, #4]
   162d4:	add	r5, r5, #8
   162d8:	cmp	r5, r1
   162dc:	bcs	16320 <__assert_fail@plt+0x4760>
   162e0:	ldr	r0, [r5]
   162e4:	cmp	r0, #0
   162e8:	cmpne	r5, #0
   162ec:	beq	162d4 <__assert_fail@plt+0x4714>
   162f0:	ldr	r1, [r4, #32]
   162f4:	blx	r1
   162f8:	ldr	r6, [r5, #4]
   162fc:	cmp	r6, #0
   16300:	beq	162d0 <__assert_fail@plt+0x4710>
   16304:	ldr	r1, [r4, #32]
   16308:	ldr	r0, [r6]
   1630c:	blx	r1
   16310:	ldr	r6, [r6, #4]
   16314:	cmp	r6, #0
   16318:	bne	16304 <__assert_fail@plt+0x4744>
   1631c:	b	162d0 <__assert_fail@plt+0x4710>
   16320:	ldr	r5, [r4]
   16324:	ldr	r1, [r4, #4]
   16328:	cmp	r5, r1
   1632c:	bcc	16340 <__assert_fail@plt+0x4780>
   16330:	b	16368 <__assert_fail@plt+0x47a8>
   16334:	add	r5, r5, #8
   16338:	cmp	r5, r1
   1633c:	bcs	16368 <__assert_fail@plt+0x47a8>
   16340:	ldr	r0, [r5, #4]
   16344:	cmp	r0, #0
   16348:	beq	16334 <__assert_fail@plt+0x4774>
   1634c:	ldr	r6, [r0, #4]
   16350:	bl	136b8 <__assert_fail@plt+0x1af8>
   16354:	cmp	r6, #0
   16358:	mov	r0, r6
   1635c:	bne	1634c <__assert_fail@plt+0x478c>
   16360:	ldr	r1, [r4, #4]
   16364:	b	16334 <__assert_fail@plt+0x4774>
   16368:	ldr	r0, [r4, #36]	; 0x24
   1636c:	cmp	r0, #0
   16370:	beq	16388 <__assert_fail@plt+0x47c8>
   16374:	ldr	r5, [r0, #4]
   16378:	bl	136b8 <__assert_fail@plt+0x1af8>
   1637c:	cmp	r5, #0
   16380:	mov	r0, r5
   16384:	bne	16374 <__assert_fail@plt+0x47b4>
   16388:	ldr	r0, [r4]
   1638c:	bl	136b8 <__assert_fail@plt+0x1af8>
   16390:	mov	r0, r4
   16394:	pop	{r4, r5, r6, sl, fp, lr}
   16398:	b	136b8 <__assert_fail@plt+0x1af8>
   1639c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163a0:	add	fp, sp, #28
   163a4:	sub	sp, sp, #44	; 0x2c
   163a8:	mov	r7, r0
   163ac:	mov	r4, r0
   163b0:	ldr	r0, [r7, #20]!
   163b4:	ldrb	r2, [r0, #16]
   163b8:	cmp	r2, #0
   163bc:	bne	163ec <__assert_fail@plt+0x482c>
   163c0:	vmov	s2, r1
   163c4:	vldr	s0, [r0, #8]
   163c8:	vldr	s4, [pc, #564]	; 16604 <__assert_fail@plt+0x4a44>
   163cc:	mov	r5, #0
   163d0:	vcvt.f32.u32	s2, s2
   163d4:	vdiv.f32	s2, s2, s0
   163d8:	vcvt.u32.f32	s0, s2
   163dc:	vcmpe.f32	s2, s4
   163e0:	vmrs	APSR_nzcv, fpscr
   163e4:	bge	165f4 <__assert_fail@plt+0x4a34>
   163e8:	vmov	r1, s0
   163ec:	cmp	r1, #10
   163f0:	mov	r5, #0
   163f4:	movls	r1, #10
   163f8:	orr	r6, r1, #1
   163fc:	cmn	r6, #1
   16400:	beq	165f4 <__assert_fail@plt+0x4a34>
   16404:	mov	r0, #3
   16408:	cmp	r6, #10
   1640c:	bcc	16444 <__assert_fail@plt+0x4884>
   16410:	mov	r0, #3
   16414:	mov	r2, #9
   16418:	mov	r1, #12
   1641c:	udiv	r3, r6, r0
   16420:	mls	r3, r3, r0, r6
   16424:	cmp	r3, #0
   16428:	beq	16444 <__assert_fail@plt+0x4884>
   1642c:	add	r2, r2, r1
   16430:	add	r1, r1, #8
   16434:	add	r0, r0, #2
   16438:	add	r2, r2, #4
   1643c:	cmp	r2, r6
   16440:	bcc	1641c <__assert_fail@plt+0x485c>
   16444:	udiv	r1, r6, r0
   16448:	mls	r0, r1, r0, r6
   1644c:	cmp	r0, #0
   16450:	bne	16464 <__assert_fail@plt+0x48a4>
   16454:	add	r6, r6, #2
   16458:	cmn	r6, #1
   1645c:	bne	16404 <__assert_fail@plt+0x4844>
   16460:	b	165f4 <__assert_fail@plt+0x4a34>
   16464:	sub	r0, r6, #1
   16468:	cmn	r0, #-536870910	; 0xe0000002
   1646c:	bhi	165f4 <__assert_fail@plt+0x4a34>
   16470:	ldr	r0, [r4, #8]
   16474:	cmp	r6, r0
   16478:	bne	16484 <__assert_fail@plt+0x48c4>
   1647c:	mov	r5, #1
   16480:	b	165f4 <__assert_fail@plt+0x4a34>
   16484:	mov	r0, r6
   16488:	mov	r1, #8
   1648c:	bl	1b0cc <lchmod@@Base+0x4174>
   16490:	cmp	r0, #0
   16494:	str	r0, [sp, #4]
   16498:	beq	165f4 <__assert_fail@plt+0x4a34>
   1649c:	add	r0, r0, r6, lsl #3
   164a0:	mov	r1, #0
   164a4:	add	r5, sp, #4
   164a8:	mov	sl, r4
   164ac:	mov	r2, #0
   164b0:	str	r1, [sp, #20]
   164b4:	str	r1, [sp, #16]
   164b8:	str	r6, [sp, #12]
   164bc:	mov	r1, r4
   164c0:	str	r0, [sp, #8]
   164c4:	add	r0, r5, #20
   164c8:	vld1.32	{d16-d17}, [r7]
   164cc:	vst1.32	{d16-d17}, [r0]
   164d0:	ldr	r0, [sl, #36]!	; 0x24
   164d4:	str	r0, [sp, #40]	; 0x28
   164d8:	mov	r0, r5
   164dc:	bl	16608 <__assert_fail@plt+0x4a48>
   164e0:	cmp	r0, #0
   164e4:	beq	1650c <__assert_fail@plt+0x494c>
   164e8:	ldr	r0, [r4]
   164ec:	bl	136b8 <__assert_fail@plt+0x1af8>
   164f0:	mov	r0, #36	; 0x24
   164f4:	vld1.32	{d16-d17}, [r5], r0
   164f8:	vst1.32	{d16-d17}, [r4], r0
   164fc:	ldr	r0, [r5]
   16500:	mov	r5, #1
   16504:	str	r0, [r4]
   16508:	b	165f4 <__assert_fail@plt+0x4a34>
   1650c:	ldr	r0, [sp, #40]	; 0x28
   16510:	str	r0, [sl]
   16514:	ldr	r0, [sp, #8]
   16518:	ldr	r8, [sp, #4]
   1651c:	cmp	r8, r0
   16520:	str	r0, [sp]
   16524:	bcs	165d0 <__assert_fail@plt+0x4a10>
   16528:	mov	r9, #0
   1652c:	b	16544 <__assert_fail@plt+0x4984>
   16530:	str	r9, [r8, #4]
   16534:	ldr	r0, [sp]
   16538:	add	r8, r8, #8
   1653c:	cmp	r8, r0
   16540:	bcs	165d0 <__assert_fail@plt+0x4a10>
   16544:	ldr	r0, [r8]
   16548:	cmp	r0, #0
   1654c:	beq	16534 <__assert_fail@plt+0x4974>
   16550:	ldr	r6, [r8, #4]
   16554:	cmp	r6, #0
   16558:	beq	16530 <__assert_fail@plt+0x4970>
   1655c:	ldr	r1, [r4, #8]
   16560:	b	16584 <__assert_fail@plt+0x49c4>
   16564:	add	r0, r3, r0, lsl #3
   16568:	add	r0, r0, #4
   1656c:	ldr	r3, [r0]
   16570:	cmp	r2, #0
   16574:	str	r3, [r6, #4]
   16578:	str	r6, [r0]
   1657c:	mov	r6, r2
   16580:	beq	16530 <__assert_fail@plt+0x4970>
   16584:	ldr	r5, [r6]
   16588:	ldr	r2, [r4, #24]
   1658c:	mov	r0, r5
   16590:	blx	r2
   16594:	ldr	r1, [r4, #8]
   16598:	cmp	r0, r1
   1659c:	bcs	16600 <__assert_fail@plt+0x4a40>
   165a0:	ldr	r3, [r4]
   165a4:	ldr	r2, [r6, #4]
   165a8:	ldr	r7, [r3, r0, lsl #3]
   165ac:	cmp	r7, #0
   165b0:	bne	16564 <__assert_fail@plt+0x49a4>
   165b4:	str	r5, [r3, r0, lsl #3]
   165b8:	ldr	r0, [r4, #12]
   165bc:	add	r0, r0, #1
   165c0:	str	r0, [r4, #12]
   165c4:	mov	r0, sl
   165c8:	str	r9, [r6]
   165cc:	b	1656c <__assert_fail@plt+0x49ac>
   165d0:	add	r1, sp, #4
   165d4:	mov	r0, r4
   165d8:	mov	r2, #0
   165dc:	mov	r5, #0
   165e0:	bl	16608 <__assert_fail@plt+0x4a48>
   165e4:	cmp	r0, #0
   165e8:	beq	16600 <__assert_fail@plt+0x4a40>
   165ec:	ldr	r0, [sp, #4]
   165f0:	bl	136b8 <__assert_fail@plt+0x1af8>
   165f4:	mov	r0, r5
   165f8:	sub	sp, fp, #28
   165fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16600:	bl	11b60 <abort@plt>
   16604:	svcmi	0x00800000
   16608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1660c:	add	fp, sp, #28
   16610:	sub	sp, sp, #12
   16614:	ldr	sl, [r1]
   16618:	str	r1, [sp, #8]
   1661c:	ldr	r1, [r1, #4]
   16620:	mov	r7, r0
   16624:	mov	r0, #1
   16628:	str	r2, [sp, #4]
   1662c:	cmp	sl, r1
   16630:	bcs	1678c <__assert_fail@plt+0x4bcc>
   16634:	add	r8, r7, #36	; 0x24
   16638:	mov	r9, #0
   1663c:	b	16678 <__assert_fail@plt+0x4ab8>
   16640:	str	r4, [r6, r5, lsl #3]
   16644:	ldr	r0, [r7, #12]
   16648:	add	r0, r0, #1
   1664c:	str	r0, [r7, #12]
   16650:	ldr	r1, [sp, #8]
   16654:	str	r9, [sl]
   16658:	ldr	r0, [r1, #12]
   1665c:	sub	r0, r0, #1
   16660:	str	r0, [r1, #12]
   16664:	ldr	r0, [sp, #8]
   16668:	add	sl, sl, #8
   1666c:	ldr	r0, [r0, #4]
   16670:	cmp	sl, r0
   16674:	bcs	16788 <__assert_fail@plt+0x4bc8>
   16678:	ldr	r4, [sl]
   1667c:	cmp	r4, #0
   16680:	beq	16664 <__assert_fail@plt+0x4aa4>
   16684:	ldr	r5, [sl, #4]
   16688:	cmp	r5, #0
   1668c:	beq	16708 <__assert_fail@plt+0x4b48>
   16690:	ldr	r1, [r7, #8]
   16694:	b	166c8 <__assert_fail@plt+0x4b08>
   16698:	str	r4, [r3, r0, lsl #3]
   1669c:	ldr	r0, [r7, #12]
   166a0:	add	r0, r0, #1
   166a4:	str	r0, [r7, #12]
   166a8:	mov	r0, r8
   166ac:	str	r9, [r5]
   166b0:	ldr	r3, [r0]
   166b4:	cmp	r2, #0
   166b8:	str	r3, [r5, #4]
   166bc:	str	r5, [r0]
   166c0:	mov	r5, r2
   166c4:	beq	16704 <__assert_fail@plt+0x4b44>
   166c8:	ldr	r4, [r5]
   166cc:	ldr	r2, [r7, #24]
   166d0:	mov	r0, r4
   166d4:	blx	r2
   166d8:	ldr	r1, [r7, #8]
   166dc:	cmp	r0, r1
   166e0:	bcs	167a0 <__assert_fail@plt+0x4be0>
   166e4:	ldr	r3, [r7]
   166e8:	ldr	r2, [r5, #4]
   166ec:	ldr	r6, [r3, r0, lsl #3]
   166f0:	cmp	r6, #0
   166f4:	beq	16698 <__assert_fail@plt+0x4ad8>
   166f8:	add	r0, r3, r0, lsl #3
   166fc:	add	r0, r0, #4
   16700:	b	166b0 <__assert_fail@plt+0x4af0>
   16704:	ldr	r4, [sl]
   16708:	ldr	r0, [sp, #4]
   1670c:	str	r9, [sl, #4]
   16710:	cmp	r0, #0
   16714:	bne	16664 <__assert_fail@plt+0x4aa4>
   16718:	ldr	r1, [r7, #8]
   1671c:	ldr	r2, [r7, #24]
   16720:	mov	r0, r4
   16724:	blx	r2
   16728:	mov	r5, r0
   1672c:	ldr	r0, [r7, #8]
   16730:	cmp	r5, r0
   16734:	bcs	167a0 <__assert_fail@plt+0x4be0>
   16738:	ldr	r6, [r7]
   1673c:	ldr	r0, [r6, r5, lsl #3]
   16740:	cmp	r0, #0
   16744:	beq	16640 <__assert_fail@plt+0x4a80>
   16748:	ldr	r0, [r8]
   1674c:	cmp	r0, #0
   16750:	beq	16760 <__assert_fail@plt+0x4ba0>
   16754:	ldr	r1, [r0, #4]
   16758:	str	r1, [r8]
   1675c:	b	16770 <__assert_fail@plt+0x4bb0>
   16760:	mov	r0, #8
   16764:	bl	1b120 <lchmod@@Base+0x41c8>
   16768:	cmp	r0, #0
   1676c:	beq	16794 <__assert_fail@plt+0x4bd4>
   16770:	add	r1, r6, r5, lsl #3
   16774:	str	r4, [r0]
   16778:	ldr	r2, [r1, #4]
   1677c:	str	r2, [r0, #4]
   16780:	str	r0, [r1, #4]
   16784:	b	16650 <__assert_fail@plt+0x4a90>
   16788:	mov	r0, #1
   1678c:	sub	sp, fp, #28
   16790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16794:	mov	r0, #0
   16798:	sub	sp, fp, #28
   1679c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167a0:	bl	11b60 <abort@plt>
   167a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167a8:	add	fp, sp, #28
   167ac:	sub	sp, sp, #4
   167b0:	cmp	r1, #0
   167b4:	beq	16ad0 <__assert_fail@plt+0x4f10>
   167b8:	mov	r8, r2
   167bc:	mov	sl, r1
   167c0:	ldr	r1, [r0, #8]
   167c4:	ldr	r2, [r0, #24]
   167c8:	mov	r4, r0
   167cc:	mov	r0, sl
   167d0:	blx	r2
   167d4:	mov	r7, r0
   167d8:	ldr	r0, [r4, #8]
   167dc:	cmp	r7, r0
   167e0:	bcs	16ad0 <__assert_fail@plt+0x4f10>
   167e4:	ldr	r5, [r4]
   167e8:	mov	r9, r5
   167ec:	ldr	r1, [r9, r7, lsl #3]!
   167f0:	cmp	r1, #0
   167f4:	beq	16880 <__assert_fail@plt+0x4cc0>
   167f8:	cmp	r1, sl
   167fc:	beq	16828 <__assert_fail@plt+0x4c68>
   16800:	ldr	r2, [r4, #28]
   16804:	mov	r0, sl
   16808:	blx	r2
   1680c:	cmp	r0, #0
   16810:	mov	r6, r9
   16814:	beq	1683c <__assert_fail@plt+0x4c7c>
   16818:	ldr	r0, [r6]
   1681c:	cmp	r0, #0
   16820:	bne	1682c <__assert_fail@plt+0x4c6c>
   16824:	b	16880 <__assert_fail@plt+0x4cc0>
   16828:	mov	r0, sl
   1682c:	cmp	r8, #0
   16830:	mov	r7, #0
   16834:	strne	r0, [r8]
   16838:	b	16a6c <__assert_fail@plt+0x4eac>
   1683c:	add	r6, r5, r7, lsl #3
   16840:	ldr	r0, [r6, #4]!
   16844:	cmp	r0, #0
   16848:	beq	16880 <__assert_fail@plt+0x4cc0>
   1684c:	ldr	r1, [r0]
   16850:	cmp	r1, sl
   16854:	beq	16874 <__assert_fail@plt+0x4cb4>
   16858:	ldr	r2, [r4, #28]
   1685c:	mov	r0, sl
   16860:	blx	r2
   16864:	ldr	r6, [r6]
   16868:	cmp	r0, #0
   1686c:	beq	16840 <__assert_fail@plt+0x4c80>
   16870:	b	16818 <__assert_fail@plt+0x4c58>
   16874:	mov	r0, sl
   16878:	cmp	r0, #0
   1687c:	bne	1682c <__assert_fail@plt+0x4c6c>
   16880:	vldr	s0, [r4, #8]
   16884:	vldr	s2, [r4, #12]
   16888:	ldr	r0, [r4, #20]
   1688c:	vcvt.f32.u32	s0, s0
   16890:	vcvt.f32.u32	s4, s2
   16894:	vldr	s2, [r0, #8]
   16898:	vmul.f32	s6, s2, s0
   1689c:	vcmpe.f32	s6, s4
   168a0:	vmrs	APSR_nzcv, fpscr
   168a4:	bpl	169f8 <__assert_fail@plt+0x4e38>
   168a8:	movw	r1, #50408	; 0xc4e8
   168ac:	movt	r1, #1
   168b0:	cmp	r0, r1
   168b4:	beq	16940 <__assert_fail@plt+0x4d80>
   168b8:	vldr	s6, [pc, #532]	; 16ad4 <__assert_fail@plt+0x4f14>
   168bc:	vcmpe.f32	s2, s6
   168c0:	vmrs	APSR_nzcv, fpscr
   168c4:	ble	1692c <__assert_fail@plt+0x4d6c>
   168c8:	vldr	s8, [pc, #520]	; 16ad8 <__assert_fail@plt+0x4f18>
   168cc:	vcmpe.f32	s2, s8
   168d0:	vmrs	APSR_nzcv, fpscr
   168d4:	bpl	1692c <__assert_fail@plt+0x4d6c>
   168d8:	vldr	s8, [pc, #508]	; 16adc <__assert_fail@plt+0x4f1c>
   168dc:	vldr	s10, [r0, #12]
   168e0:	vcmpe.f32	s10, s8
   168e4:	vmrs	APSR_nzcv, fpscr
   168e8:	ble	1692c <__assert_fail@plt+0x4d6c>
   168ec:	vldr	s8, [r0]
   168f0:	vcmpe.f32	s8, #0.0
   168f4:	vmrs	APSR_nzcv, fpscr
   168f8:	blt	1692c <__assert_fail@plt+0x4d6c>
   168fc:	vadd.f32	s6, s8, s6
   16900:	vcmpe.f32	s6, s2
   16904:	vmrs	APSR_nzcv, fpscr
   16908:	bpl	1692c <__assert_fail@plt+0x4d6c>
   1690c:	vldr	s8, [r0, #4]
   16910:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16914:	vcmpe.f32	s8, s10
   16918:	vmrs	APSR_nzcv, fpscr
   1691c:	bhi	1692c <__assert_fail@plt+0x4d6c>
   16920:	vcmpe.f32	s6, s8
   16924:	vmrs	APSR_nzcv, fpscr
   16928:	bmi	16944 <__assert_fail@plt+0x4d84>
   1692c:	vldr	s2, [pc, #428]	; 16ae0 <__assert_fail@plt+0x4f20>
   16930:	movw	r0, #50408	; 0xc4e8
   16934:	movt	r0, #1
   16938:	str	r0, [r4, #20]
   1693c:	b	16944 <__assert_fail@plt+0x4d84>
   16940:	mov	r0, r1
   16944:	vmul.f32	s6, s2, s0
   16948:	vcmpe.f32	s6, s4
   1694c:	vmrs	APSR_nzcv, fpscr
   16950:	bpl	169f8 <__assert_fail@plt+0x4e38>
   16954:	vldr	s4, [r0, #12]
   16958:	ldrb	r0, [r0, #16]
   1695c:	mvn	r7, #0
   16960:	cmp	r0, #0
   16964:	vmul.f32	s0, s4, s0
   16968:	vldr	s4, [pc, #372]	; 16ae4 <__assert_fail@plt+0x4f24>
   1696c:	vmul.f32	s2, s2, s0
   16970:	vseleq.f32	s0, s2, s0
   16974:	vcmpe.f32	s0, s4
   16978:	vmrs	APSR_nzcv, fpscr
   1697c:	bge	16a6c <__assert_fail@plt+0x4eac>
   16980:	vcvt.u32.f32	s0, s0
   16984:	mov	r0, r4
   16988:	vmov	r1, s0
   1698c:	bl	1639c <__assert_fail@plt+0x47dc>
   16990:	cmp	r0, #0
   16994:	beq	16a6c <__assert_fail@plt+0x4eac>
   16998:	ldr	r1, [r4, #8]
   1699c:	ldr	r2, [r4, #24]
   169a0:	mov	r0, sl
   169a4:	blx	r2
   169a8:	mov	r7, r0
   169ac:	ldr	r0, [r4, #8]
   169b0:	cmp	r7, r0
   169b4:	bcs	16ad0 <__assert_fail@plt+0x4f10>
   169b8:	ldr	r5, [r4]
   169bc:	mov	r9, r5
   169c0:	ldr	r1, [r9, r7, lsl #3]!
   169c4:	cmp	r1, #0
   169c8:	beq	169f8 <__assert_fail@plt+0x4e38>
   169cc:	cmp	r1, sl
   169d0:	mov	r0, sl
   169d4:	beq	169f0 <__assert_fail@plt+0x4e30>
   169d8:	ldr	r2, [r4, #28]
   169dc:	mov	r0, sl
   169e0:	blx	r2
   169e4:	cmp	r0, #0
   169e8:	beq	16a80 <__assert_fail@plt+0x4ec0>
   169ec:	ldr	r0, [r9]
   169f0:	cmp	r0, #0
   169f4:	bne	16ad0 <__assert_fail@plt+0x4f10>
   169f8:	ldr	r0, [r9]
   169fc:	cmp	r0, #0
   16a00:	beq	16a1c <__assert_fail@plt+0x4e5c>
   16a04:	ldr	r0, [r4, #36]	; 0x24
   16a08:	cmp	r0, #0
   16a0c:	beq	16a3c <__assert_fail@plt+0x4e7c>
   16a10:	ldr	r1, [r0, #4]
   16a14:	str	r1, [r4, #36]	; 0x24
   16a18:	b	16a4c <__assert_fail@plt+0x4e8c>
   16a1c:	str	sl, [r9]
   16a20:	ldr	r0, [r4, #12]
   16a24:	ldr	r1, [r4, #16]
   16a28:	add	r0, r0, #1
   16a2c:	add	r1, r1, #1
   16a30:	str	r0, [r4, #12]
   16a34:	str	r1, [r4, #16]
   16a38:	b	16a68 <__assert_fail@plt+0x4ea8>
   16a3c:	mov	r0, #8
   16a40:	bl	1b120 <lchmod@@Base+0x41c8>
   16a44:	cmp	r0, #0
   16a48:	beq	16a78 <__assert_fail@plt+0x4eb8>
   16a4c:	str	sl, [r0]
   16a50:	ldr	r1, [r9, #4]
   16a54:	str	r1, [r0, #4]
   16a58:	str	r0, [r9, #4]
   16a5c:	ldr	r0, [r4, #16]
   16a60:	add	r0, r0, #1
   16a64:	str	r0, [r4, #16]
   16a68:	mov	r7, #1
   16a6c:	mov	r0, r7
   16a70:	sub	sp, fp, #28
   16a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a78:	mvn	r7, #0
   16a7c:	b	16a6c <__assert_fail@plt+0x4eac>
   16a80:	add	r6, r5, r7, lsl #3
   16a84:	ldr	r0, [r6, #4]!
   16a88:	cmp	r0, #0
   16a8c:	beq	169f8 <__assert_fail@plt+0x4e38>
   16a90:	ldr	r1, [r0]
   16a94:	cmp	r1, sl
   16a98:	beq	16ac4 <__assert_fail@plt+0x4f04>
   16a9c:	ldr	r2, [r4, #28]
   16aa0:	mov	r0, sl
   16aa4:	blx	r2
   16aa8:	ldr	r6, [r6]
   16aac:	cmp	r0, #0
   16ab0:	beq	16a84 <__assert_fail@plt+0x4ec4>
   16ab4:	ldr	r0, [r6]
   16ab8:	cmp	r0, #0
   16abc:	beq	169f8 <__assert_fail@plt+0x4e38>
   16ac0:	b	16ad0 <__assert_fail@plt+0x4f10>
   16ac4:	mov	r0, sl
   16ac8:	cmp	r0, #0
   16acc:	beq	169f8 <__assert_fail@plt+0x4e38>
   16ad0:	bl	11b60 <abort@plt>
   16ad4:	stclcc	12, cr12, [ip, #820]	; 0x334
   16ad8:	svccc	0x00666666
   16adc:	svccc	0x008ccccd
   16ae0:	svccc	0x004ccccd
   16ae4:	svcmi	0x00800000
   16ae8:	push	{r4, sl, fp, lr}
   16aec:	add	fp, sp, #8
   16af0:	sub	sp, sp, #8
   16af4:	add	r2, sp, #4
   16af8:	mov	r4, r1
   16afc:	bl	167a4 <__assert_fail@plt+0x4be4>
   16b00:	cmn	r0, #1
   16b04:	beq	16b18 <__assert_fail@plt+0x4f58>
   16b08:	ldr	r1, [sp, #4]
   16b0c:	cmp	r0, #0
   16b10:	moveq	r4, r1
   16b14:	b	16b1c <__assert_fail@plt+0x4f5c>
   16b18:	mov	r4, #0
   16b1c:	mov	r0, r4
   16b20:	sub	sp, fp, #8
   16b24:	pop	{r4, sl, fp, pc}
   16b28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16b2c:	add	fp, sp, #24
   16b30:	mov	r9, r1
   16b34:	ldr	r1, [r0, #8]
   16b38:	ldr	r2, [r0, #24]
   16b3c:	mov	r5, r0
   16b40:	mov	r0, r9
   16b44:	blx	r2
   16b48:	mov	r7, r0
   16b4c:	ldr	r0, [r5, #8]
   16b50:	cmp	r7, r0
   16b54:	bcs	16db8 <__assert_fail@plt+0x51f8>
   16b58:	ldr	r6, [r5]
   16b5c:	mov	r8, #0
   16b60:	mov	r4, r6
   16b64:	ldr	r1, [r4, r7, lsl #3]!
   16b68:	cmp	r1, #0
   16b6c:	beq	16c20 <__assert_fail@plt+0x5060>
   16b70:	cmp	r1, r9
   16b74:	beq	16b90 <__assert_fail@plt+0x4fd0>
   16b78:	ldr	r2, [r5, #28]
   16b7c:	mov	r0, r9
   16b80:	blx	r2
   16b84:	cmp	r0, #0
   16b88:	beq	16bc8 <__assert_fail@plt+0x5008>
   16b8c:	ldr	r9, [r4]
   16b90:	add	r0, r6, r7, lsl #3
   16b94:	ldr	r0, [r0, #4]
   16b98:	cmp	r0, #0
   16b9c:	beq	16c10 <__assert_fail@plt+0x5050>
   16ba0:	ldm	r0, {r1, r2}
   16ba4:	stm	r4, {r1, r2}
   16ba8:	mov	r1, #0
   16bac:	str	r1, [r0]
   16bb0:	ldr	r1, [r5, #36]	; 0x24
   16bb4:	str	r1, [r0, #4]
   16bb8:	str	r0, [r5, #36]	; 0x24
   16bbc:	cmp	r9, #0
   16bc0:	bne	16c58 <__assert_fail@plt+0x5098>
   16bc4:	b	16c20 <__assert_fail@plt+0x5060>
   16bc8:	add	r7, r6, r7, lsl #3
   16bcc:	ldr	r0, [r7, #4]!
   16bd0:	cmp	r0, #0
   16bd4:	beq	16c20 <__assert_fail@plt+0x5060>
   16bd8:	ldr	r1, [r0]
   16bdc:	cmp	r1, r9
   16be0:	beq	16c28 <__assert_fail@plt+0x5068>
   16be4:	ldr	r2, [r5, #28]
   16be8:	mov	r0, r9
   16bec:	blx	r2
   16bf0:	ldr	r1, [r7]
   16bf4:	cmp	r0, #0
   16bf8:	bne	16c30 <__assert_fail@plt+0x5070>
   16bfc:	ldr	r0, [r1, #4]!
   16c00:	mov	r7, r1
   16c04:	cmp	r0, #0
   16c08:	bne	16bd8 <__assert_fail@plt+0x5018>
   16c0c:	b	16c20 <__assert_fail@plt+0x5060>
   16c10:	mov	r0, #0
   16c14:	str	r0, [r4]
   16c18:	cmp	r9, #0
   16c1c:	bne	16c58 <__assert_fail@plt+0x5098>
   16c20:	mov	r0, r8
   16c24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16c28:	mov	r1, r0
   16c2c:	b	16c34 <__assert_fail@plt+0x5074>
   16c30:	ldr	r9, [r1]
   16c34:	ldr	r0, [r1, #4]
   16c38:	str	r0, [r7]
   16c3c:	mov	r0, #0
   16c40:	str	r0, [r1]
   16c44:	ldr	r0, [r5, #36]	; 0x24
   16c48:	str	r0, [r1, #4]
   16c4c:	str	r1, [r5, #36]	; 0x24
   16c50:	cmp	r9, #0
   16c54:	beq	16c20 <__assert_fail@plt+0x5060>
   16c58:	ldr	r0, [r5, #16]
   16c5c:	sub	r0, r0, #1
   16c60:	str	r0, [r5, #16]
   16c64:	ldr	r0, [r4]
   16c68:	cmp	r0, #0
   16c6c:	bne	16dac <__assert_fail@plt+0x51ec>
   16c70:	ldr	r0, [r5, #12]
   16c74:	vldr	s0, [r5, #8]
   16c78:	sub	r1, r0, #1
   16c7c:	str	r1, [r5, #12]
   16c80:	vmov	s2, r1
   16c84:	ldr	r0, [r5, #20]
   16c88:	vcvt.f32.u32	s0, s0
   16c8c:	vcvt.f32.u32	s2, s2
   16c90:	vldr	s4, [r0]
   16c94:	vmul.f32	s6, s4, s0
   16c98:	vcmpe.f32	s6, s2
   16c9c:	vmrs	APSR_nzcv, fpscr
   16ca0:	ble	16dac <__assert_fail@plt+0x51ec>
   16ca4:	movw	r1, #50408	; 0xc4e8
   16ca8:	movt	r1, #1
   16cac:	cmp	r0, r1
   16cb0:	beq	16d3c <__assert_fail@plt+0x517c>
   16cb4:	vldr	s8, [pc, #256]	; 16dbc <__assert_fail@plt+0x51fc>
   16cb8:	vldr	s6, [r0, #8]
   16cbc:	vcmpe.f32	s6, s8
   16cc0:	vmrs	APSR_nzcv, fpscr
   16cc4:	ble	16d28 <__assert_fail@plt+0x5168>
   16cc8:	vldr	s10, [pc, #240]	; 16dc0 <__assert_fail@plt+0x5200>
   16ccc:	vcmpe.f32	s6, s10
   16cd0:	vmrs	APSR_nzcv, fpscr
   16cd4:	bpl	16d28 <__assert_fail@plt+0x5168>
   16cd8:	vcmpe.f32	s4, #0.0
   16cdc:	vmrs	APSR_nzcv, fpscr
   16ce0:	blt	16d28 <__assert_fail@plt+0x5168>
   16ce4:	vldr	s10, [r0, #12]
   16ce8:	vldr	s12, [pc, #212]	; 16dc4 <__assert_fail@plt+0x5204>
   16cec:	vcmpe.f32	s10, s12
   16cf0:	vmrs	APSR_nzcv, fpscr
   16cf4:	ble	16d28 <__assert_fail@plt+0x5168>
   16cf8:	vadd.f32	s8, s4, s8
   16cfc:	vcmpe.f32	s8, s6
   16d00:	vmrs	APSR_nzcv, fpscr
   16d04:	bpl	16d28 <__assert_fail@plt+0x5168>
   16d08:	vldr	s6, [r0, #4]
   16d0c:	vmov.f32	s10, #112	; 0x3f800000  1.0
   16d10:	vcmpe.f32	s6, s10
   16d14:	vmrs	APSR_nzcv, fpscr
   16d18:	bhi	16d28 <__assert_fail@plt+0x5168>
   16d1c:	vcmpe.f32	s8, s6
   16d20:	vmrs	APSR_nzcv, fpscr
   16d24:	bmi	16d40 <__assert_fail@plt+0x5180>
   16d28:	vldr	s4, [pc, #152]	; 16dc8 <__assert_fail@plt+0x5208>
   16d2c:	movw	r0, #50408	; 0xc4e8
   16d30:	movt	r0, #1
   16d34:	str	r0, [r5, #20]
   16d38:	b	16d40 <__assert_fail@plt+0x5180>
   16d3c:	mov	r0, r1
   16d40:	vmul.f32	s4, s4, s0
   16d44:	vcmpe.f32	s4, s2
   16d48:	vmrs	APSR_nzcv, fpscr
   16d4c:	ble	16dac <__assert_fail@plt+0x51ec>
   16d50:	vldr	s2, [r0, #4]
   16d54:	ldrb	r1, [r0, #16]
   16d58:	cmp	r1, #0
   16d5c:	vmul.f32	s0, s2, s0
   16d60:	bne	16d6c <__assert_fail@plt+0x51ac>
   16d64:	vldr	s2, [r0, #8]
   16d68:	vmul.f32	s0, s0, s2
   16d6c:	vcvt.u32.f32	s0, s0
   16d70:	mov	r0, r5
   16d74:	vmov	r1, s0
   16d78:	bl	1639c <__assert_fail@plt+0x47dc>
   16d7c:	cmp	r0, #0
   16d80:	bne	16dac <__assert_fail@plt+0x51ec>
   16d84:	ldr	r0, [r5, #36]	; 0x24
   16d88:	cmp	r0, #0
   16d8c:	beq	16da4 <__assert_fail@plt+0x51e4>
   16d90:	ldr	r4, [r0, #4]
   16d94:	bl	136b8 <__assert_fail@plt+0x1af8>
   16d98:	cmp	r4, #0
   16d9c:	mov	r0, r4
   16da0:	bne	16d90 <__assert_fail@plt+0x51d0>
   16da4:	mov	r0, #0
   16da8:	str	r0, [r5, #36]	; 0x24
   16dac:	mov	r8, r9
   16db0:	mov	r0, r8
   16db4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16db8:	bl	11b60 <abort@plt>
   16dbc:	stclcc	12, cr12, [ip, #820]	; 0x334
   16dc0:	svccc	0x00666666
   16dc4:	svccc	0x008ccccd
   16dc8:	andeq	r0, r0, r0
   16dcc:	b	16b28 <__assert_fail@plt+0x4f68>
   16dd0:	push	{r4, r5, fp, lr}
   16dd4:	add	fp, sp, #8
   16dd8:	mov	r5, r0
   16ddc:	ldr	r0, [r0]
   16de0:	mov	r4, r1
   16de4:	bl	1b758 <lchmod@@Base+0x4800>
   16de8:	ldrd	r2, [r5, #8]
   16dec:	eor	r0, r2, r0
   16df0:	mov	r1, r3
   16df4:	mov	r2, r4
   16df8:	mov	r3, #0
   16dfc:	bl	1b984 <lchmod@@Base+0x4a2c>
   16e00:	mov	r0, r2
   16e04:	pop	{r4, r5, fp, pc}
   16e08:	push	{r4, r5, fp, lr}
   16e0c:	add	fp, sp, #8
   16e10:	mov	lr, r1
   16e14:	mov	r2, r0
   16e18:	ldr	r3, [r2, #8]!
   16e1c:	ldr	ip, [lr, #8]!
   16e20:	ldr	r4, [r2, #4]
   16e24:	eor	ip, r3, ip
   16e28:	ldr	r3, [lr, #4]
   16e2c:	eor	r3, r4, r3
   16e30:	orrs	r3, ip, r3
   16e34:	mov	ip, #0
   16e38:	bne	16e68 <__assert_fail@plt+0x52a8>
   16e3c:	ldrd	r4, [lr, #8]
   16e40:	ldrd	r2, [r2, #8]
   16e44:	eor	r3, r3, r5
   16e48:	eor	r2, r2, r4
   16e4c:	orrs	r2, r2, r3
   16e50:	bne	16e68 <__assert_fail@plt+0x52a8>
   16e54:	ldr	r1, [r1]
   16e58:	ldr	r0, [r0]
   16e5c:	bl	117d0 <strcmp@plt>
   16e60:	clz	r0, r0
   16e64:	lsr	ip, r0, #5
   16e68:	mov	r0, ip
   16e6c:	pop	{r4, r5, fp, pc}
   16e70:	push	{r4, sl, fp, lr}
   16e74:	add	fp, sp, #8
   16e78:	mov	r4, r0
   16e7c:	ldr	r0, [r0]
   16e80:	bl	136b8 <__assert_fail@plt+0x1af8>
   16e84:	mov	r0, r4
   16e88:	pop	{r4, sl, fp, lr}
   16e8c:	b	136b8 <__assert_fail@plt+0x1af8>
   16e90:	vdup.32	q8, r1
   16e94:	mov	r2, #0
   16e98:	str	r2, [r0, #20]
   16e9c:	str	r2, [r0, #24]
   16ea0:	mov	r2, #1
   16ea4:	strb	r2, [r0, #28]
   16ea8:	vst1.32	{d16-d17}, [r0]!
   16eac:	str	r1, [r0]
   16eb0:	bx	lr
   16eb4:	ldrb	r0, [r0, #28]
   16eb8:	bx	lr
   16ebc:	push	{fp, lr}
   16ec0:	mov	fp, sp
   16ec4:	ldrb	r3, [r0, #28]
   16ec8:	ldr	r2, [r0, #20]
   16ecc:	eor	lr, r3, #1
   16ed0:	add	r2, r2, lr
   16ed4:	and	r3, r2, #3
   16ed8:	ldr	ip, [r0, r3, lsl #2]
   16edc:	str	r1, [r0, r3, lsl #2]
   16ee0:	str	r3, [r0, #20]
   16ee4:	ldr	r1, [r0, #24]
   16ee8:	cmp	r3, r1
   16eec:	addeq	r1, r2, lr
   16ef0:	andeq	r1, r1, #3
   16ef4:	streq	r1, [r0, #24]
   16ef8:	mov	r1, #0
   16efc:	strb	r1, [r0, #28]
   16f00:	mov	r0, ip
   16f04:	pop	{fp, pc}
   16f08:	push	{fp, lr}
   16f0c:	mov	fp, sp
   16f10:	ldrb	r1, [r0, #28]
   16f14:	cmp	r1, #0
   16f18:	bne	16f54 <__assert_fail@plt+0x5394>
   16f1c:	ldr	r3, [r0, #20]
   16f20:	ldr	r2, [r0, #16]
   16f24:	ldr	r1, [r0, r3, lsl #2]
   16f28:	str	r2, [r0, r3, lsl #2]
   16f2c:	ldr	r2, [r0, #20]
   16f30:	ldr	r3, [r0, #24]
   16f34:	cmp	r2, r3
   16f38:	moveq	r2, #1
   16f3c:	strbeq	r2, [r0, #28]
   16f40:	subne	r2, r2, #1
   16f44:	andne	r2, r2, #3
   16f48:	strne	r2, [r0, #20]
   16f4c:	mov	r0, r1
   16f50:	pop	{fp, pc}
   16f54:	bl	11b60 <abort@plt>

00016f58 <lchmod@@Base>:
   16f58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16f5c:	add	fp, sp, #24
   16f60:	sub	sp, sp, #136	; 0x88
   16f64:	mov	r4, r1
   16f68:	mov	r1, #2654208	; 0x288000
   16f6c:	mov	r5, r0
   16f70:	bl	1192c <open64@plt>
   16f74:	mov	r6, r0
   16f78:	cmp	r0, #0
   16f7c:	bmi	16fc8 <lchmod@@Base+0x70>
   16f80:	movw	r2, #50051	; 0xc383
   16f84:	mov	r0, #4096	; 0x1000
   16f88:	add	r3, sp, #32
   16f8c:	mov	r1, r6
   16f90:	movt	r2, #1
   16f94:	str	r0, [sp]
   16f98:	mov	r0, #3
   16f9c:	bl	118a8 <__fxstatat64@plt>
   16fa0:	cmp	r0, #0
   16fa4:	beq	16fd0 <lchmod@@Base+0x78>
   16fa8:	bl	11a04 <__errno_location@plt>
   16fac:	ldr	r5, [r0]
   16fb0:	mov	r4, r0
   16fb4:	mov	r0, r6
   16fb8:	bl	11b6c <close@plt>
   16fbc:	str	r5, [r4]
   16fc0:	mvn	r7, #0
   16fc4:	b	17070 <lchmod@@Base+0x118>
   16fc8:	mov	r7, r6
   16fcc:	b	17070 <lchmod@@Base+0x118>
   16fd0:	ldr	r0, [sp, #48]	; 0x30
   16fd4:	and	r0, r0, #61440	; 0xf000
   16fd8:	cmp	r0, #40960	; 0xa000
   16fdc:	bne	16ffc <lchmod@@Base+0xa4>
   16fe0:	mov	r0, r6
   16fe4:	bl	11b6c <close@plt>
   16fe8:	bl	11a04 <__errno_location@plt>
   16fec:	mov	r1, #95	; 0x5f
   16ff0:	mvn	r7, #0
   16ff4:	str	r1, [r0]
   16ff8:	b	17070 <lchmod@@Base+0x118>
   16ffc:	movw	r3, #50428	; 0xc4fc
   17000:	add	r7, sp, #6
   17004:	mov	r1, #1
   17008:	mov	r2, #26
   1700c:	str	r6, [sp]
   17010:	movt	r3, #1
   17014:	mov	r0, r7
   17018:	bl	11a10 <__sprintf_chk@plt>
   1701c:	mov	r0, r7
   17020:	mov	r1, r4
   17024:	bl	11b30 <chmod@plt>
   17028:	mov	r7, r0
   1702c:	bl	11a04 <__errno_location@plt>
   17030:	ldr	r9, [r0]
   17034:	mov	r8, r0
   17038:	mov	r0, r6
   1703c:	bl	11b6c <close@plt>
   17040:	cmp	r7, #0
   17044:	beq	17064 <lchmod@@Base+0x10c>
   17048:	cmp	r9, #2
   1704c:	bne	1706c <lchmod@@Base+0x114>
   17050:	mov	r0, r5
   17054:	mov	r1, r4
   17058:	bl	11b30 <chmod@plt>
   1705c:	mov	r7, r0
   17060:	b	17070 <lchmod@@Base+0x118>
   17064:	mov	r7, #0
   17068:	b	17070 <lchmod@@Base+0x118>
   1706c:	str	r9, [r8]
   17070:	mov	r0, r7
   17074:	sub	sp, fp, #24
   17078:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1707c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17080:	add	fp, sp, #28
   17084:	sub	sp, sp, #4
   17088:	ldrb	r1, [r0]
   1708c:	mov	r4, r0
   17090:	and	r0, r1, #248	; 0xf8
   17094:	cmp	r0, #48	; 0x30
   17098:	bne	170e4 <lchmod@@Base+0x18c>
   1709c:	mov	r0, #0
   170a0:	mov	r5, #0
   170a4:	mov	r2, r4
   170a8:	lsl	r3, r5, #3
   170ac:	uxtab	r1, r3, r1
   170b0:	sub	r5, r1, #48	; 0x30
   170b4:	cmp	r0, r5, lsr #12
   170b8:	bne	170dc <lchmod@@Base+0x184>
   170bc:	ldrb	r1, [r2, #1]
   170c0:	add	r6, r2, #1
   170c4:	and	r2, r1, #248	; 0xf8
   170c8:	cmp	r2, #48	; 0x30
   170cc:	mov	r2, r6
   170d0:	beq	170a8 <lchmod@@Base+0x150>
   170d4:	cmp	r1, #0
   170d8:	beq	1743c <lchmod@@Base+0x4e4>
   170dc:	sub	sp, fp, #28
   170e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170e4:	movw	sl, #5
   170e8:	mov	r2, #1
   170ec:	mvn	r3, #42	; 0x2a
   170f0:	mov	r7, #1
   170f4:	mov	r0, #1
   170f8:	movt	sl, #4
   170fc:	b	17118 <lchmod@@Base+0x1c0>
   17100:	cmp	r1, #0
   17104:	beq	17138 <lchmod@@Base+0x1e0>
   17108:	mov	r6, #0
   1710c:	ldrb	r1, [r4, r7]
   17110:	add	r0, r6, r0
   17114:	add	r7, r7, #1
   17118:	uxtab	r6, r3, r1
   1711c:	uxtb	r1, r1
   17120:	cmp	r6, #18
   17124:	bhi	17100 <lchmod@@Base+0x1a8>
   17128:	tst	sl, r2, lsl r6
   1712c:	mov	r6, #1
   17130:	bne	1710c <lchmod@@Base+0x1b4>
   17134:	b	17100 <lchmod@@Base+0x1a8>
   17138:	mov	r1, #16
   1713c:	bl	19f00 <lchmod@@Base+0x2fa8>
   17140:	mov	r9, #0
   17144:	mov	ip, #1
   17148:	mvn	lr, #87	; 0x57
   1714c:	mov	r8, #0
   17150:	mov	r2, #0
   17154:	b	17164 <lchmod@@Base+0x20c>
   17158:	movw	r1, #4095	; 0xfff
   1715c:	orr	r2, r2, r1
   17160:	add	r4, r4, #1
   17164:	ldrb	r6, [r4]
   17168:	sub	r3, r6, #97	; 0x61
   1716c:	cmp	r3, #20
   17170:	bhi	171e4 <lchmod@@Base+0x28c>
   17174:	add	r5, pc, #4
   17178:	mov	r1, #2496	; 0x9c0
   1717c:	ldr	pc, [r5, r3, lsl #2]
   17180:	andeq	r7, r1, r8, asr r1
   17184:	muleq	r1, ip, r4
   17188:	muleq	r1, ip, r4
   1718c:	muleq	r1, ip, r4
   17190:	muleq	r1, ip, r4
   17194:	muleq	r1, ip, r4
   17198:	ldrdeq	r7, [r1], -r4
   1719c:	muleq	r1, ip, r4
   171a0:	muleq	r1, ip, r4
   171a4:	muleq	r1, ip, r4
   171a8:	muleq	r1, ip, r4
   171ac:	muleq	r1, ip, r4
   171b0:	muleq	r1, ip, r4
   171b4:	muleq	r1, ip, r4
   171b8:	ldrdeq	r7, [r1], -ip
   171bc:	muleq	r1, ip, r4
   171c0:	muleq	r1, ip, r4
   171c4:	muleq	r1, ip, r4
   171c8:	muleq	r1, ip, r4
   171cc:	muleq	r1, ip, r4
   171d0:	andeq	r7, r1, ip, asr r1
   171d4:	movw	r1, #1080	; 0x438
   171d8:	b	1715c <lchmod@@Base+0x204>
   171dc:	movw	r1, #519	; 0x207
   171e0:	b	1715c <lchmod@@Base+0x204>
   171e4:	sub	r1, r6, #43	; 0x2b
   171e8:	cmp	r1, #18
   171ec:	bhi	1749c <lchmod@@Base+0x544>
   171f0:	tst	sl, ip, lsl r1
   171f4:	beq	1749c <lchmod@@Base+0x544>
   171f8:	ldrb	r1, [r4, #1]
   171fc:	sub	r3, r1, #48	; 0x30
   17200:	cmp	r3, #8
   17204:	bcs	17260 <lchmod@@Base+0x308>
   17208:	add	r3, r4, #2
   1720c:	mov	r7, #0
   17210:	lsl	r4, r7, #3
   17214:	uxtab	r1, r4, r1
   17218:	sub	r7, r1, #48	; 0x30
   1721c:	cmp	r9, r7, lsr #12
   17220:	bne	1749c <lchmod@@Base+0x544>
   17224:	ldrb	r1, [r3], #1
   17228:	and	r4, r1, #248	; 0xf8
   1722c:	cmp	r4, #48	; 0x30
   17230:	beq	17210 <lchmod@@Base+0x2b8>
   17234:	cmp	r2, #0
   17238:	bne	1749c <lchmod@@Base+0x544>
   1723c:	sub	r4, r3, #1
   17240:	mov	r5, #1
   17244:	movw	r2, #4095	; 0xfff
   17248:	cmp	r1, #0
   1724c:	beq	1728c <lchmod@@Base+0x334>
   17250:	cmp	r1, #44	; 0x2c
   17254:	movw	r1, #4095	; 0xfff
   17258:	beq	17398 <lchmod@@Base+0x440>
   1725c:	b	1749c <lchmod@@Base+0x544>
   17260:	add	r4, r4, #2
   17264:	cmp	r1, #103	; 0x67
   17268:	beq	17294 <lchmod@@Base+0x33c>
   1726c:	cmp	r1, #111	; 0x6f
   17270:	beq	172a4 <lchmod@@Base+0x34c>
   17274:	cmp	r1, #117	; 0x75
   17278:	bne	172b4 <lchmod@@Base+0x35c>
   1727c:	mov	r5, #3
   17280:	mov	r1, #0
   17284:	mov	r7, #448	; 0x1c0
   17288:	b	17398 <lchmod@@Base+0x440>
   1728c:	movw	r1, #4095	; 0xfff
   17290:	b	17398 <lchmod@@Base+0x440>
   17294:	mov	r5, #3
   17298:	mov	r1, #0
   1729c:	mov	r7, #56	; 0x38
   172a0:	b	17398 <lchmod@@Base+0x440>
   172a4:	mov	r5, #3
   172a8:	mov	r1, #0
   172ac:	mov	r7, #7
   172b0:	b	17398 <lchmod@@Base+0x440>
   172b4:	mov	r3, #1
   172b8:	mov	r7, #0
   172bc:	b	172cc <lchmod@@Base+0x374>
   172c0:	orr	r7, r7, #512	; 0x200
   172c4:	mov	r3, r5
   172c8:	ldrb	r1, [r4], #1
   172cc:	uxtab	r1, lr, r1
   172d0:	mov	r5, r3
   172d4:	cmp	r1, #32
   172d8:	bhi	1738c <lchmod@@Base+0x434>
   172dc:	add	ip, pc, #4
   172e0:	mov	r3, #2
   172e4:	ldr	pc, [ip, r1, lsl #2]
   172e8:	andeq	r7, r1, r8, asr #5
   172ec:	andeq	r7, r1, ip, lsl #7
   172f0:	andeq	r7, r1, ip, lsl #7
   172f4:	andeq	r7, r1, ip, lsl #7
   172f8:	andeq	r7, r1, ip, lsl #7
   172fc:	andeq	r7, r1, ip, lsl #7
   17300:	andeq	r7, r1, ip, lsl #7
   17304:	andeq	r7, r1, ip, lsl #7
   17308:	andeq	r7, r1, ip, lsl #7
   1730c:	andeq	r7, r1, ip, lsl #7
   17310:	andeq	r7, r1, ip, lsl #7
   17314:	andeq	r7, r1, ip, lsl #7
   17318:	andeq	r7, r1, ip, lsl #7
   1731c:	andeq	r7, r1, ip, lsl #7
   17320:	andeq	r7, r1, ip, lsl #7
   17324:	andeq	r7, r1, ip, lsl #7
   17328:	andeq	r7, r1, ip, lsl #7
   1732c:	andeq	r7, r1, ip, lsl #7
   17330:	andeq	r7, r1, ip, lsl #7
   17334:	andeq	r7, r1, ip, lsl #7
   17338:	andeq	r7, r1, ip, lsl #7
   1733c:	andeq	r7, r1, ip, lsl #7
   17340:	andeq	r7, r1, ip, lsl #7
   17344:	andeq	r7, r1, ip, lsl #7
   17348:	andeq	r7, r1, ip, lsl #7
   1734c:	andeq	r7, r1, ip, lsl #7
   17350:	andeq	r7, r1, ip, ror #6
   17354:	andeq	r7, r1, r4, ror r3
   17358:	andeq	r7, r1, r0, asr #5
   1735c:	andeq	r7, r1, ip, lsl #7
   17360:	andeq	r7, r1, ip, lsl #7
   17364:	andeq	r7, r1, ip, ror r3
   17368:	andeq	r7, r1, r4, lsl #7
   1736c:	orr	r7, r7, #292	; 0x124
   17370:	b	172c4 <lchmod@@Base+0x36c>
   17374:	orr	r7, r7, #3072	; 0xc00
   17378:	b	172c4 <lchmod@@Base+0x36c>
   1737c:	orr	r7, r7, #146	; 0x92
   17380:	b	172c4 <lchmod@@Base+0x36c>
   17384:	orr	r7, r7, #73	; 0x49
   17388:	b	172c4 <lchmod@@Base+0x36c>
   1738c:	sub	r4, r4, #1
   17390:	mov	r1, #0
   17394:	mov	ip, #1
   17398:	mov	r3, r0
   1739c:	cmp	r1, #0
   173a0:	strb	r6, [r3, r8, lsl #4]!
   173a4:	stmib	r3, {r2, r7}
   173a8:	strb	r5, [r3, #1]
   173ac:	bne	173bc <lchmod@@Base+0x464>
   173b0:	cmp	r2, #0
   173b4:	andne	r7, r7, r2
   173b8:	mov	r1, r7
   173bc:	add	r7, r0, r8, lsl #4
   173c0:	add	r3, r8, #1
   173c4:	str	r1, [r7, #12]
   173c8:	ldrb	r6, [r4]
   173cc:	sub	r1, r6, #43	; 0x2b
   173d0:	cmp	r1, #18
   173d4:	bhi	17480 <lchmod@@Base+0x528>
   173d8:	add	r7, pc, #4
   173dc:	mov	r8, r3
   173e0:	ldr	pc, [r7, r1, lsl #2]
   173e4:	strdeq	r7, [r1], -r8
   173e8:	andeq	r7, r1, r0, lsr r4
   173ec:	strdeq	r7, [r1], -r8
   173f0:	muleq	r1, ip, r4
   173f4:	muleq	r1, ip, r4
   173f8:	muleq	r1, ip, r4
   173fc:	muleq	r1, ip, r4
   17400:	muleq	r1, ip, r4
   17404:	muleq	r1, ip, r4
   17408:	muleq	r1, ip, r4
   1740c:	muleq	r1, ip, r4
   17410:	muleq	r1, ip, r4
   17414:	muleq	r1, ip, r4
   17418:	muleq	r1, ip, r4
   1741c:	muleq	r1, ip, r4
   17420:	muleq	r1, ip, r4
   17424:	muleq	r1, ip, r4
   17428:	muleq	r1, ip, r4
   1742c:	strdeq	r7, [r1], -r8
   17430:	add	r4, r4, #1
   17434:	mov	r8, r3
   17438:	b	17150 <lchmod@@Base+0x1f8>
   1743c:	mov	r0, #32
   17440:	bl	19e30 <lchmod@@Base+0x2ed8>
   17444:	mov	r1, #0
   17448:	movw	r2, #317	; 0x13d
   1744c:	and	r3, r5, #3072	; 0xc00
   17450:	movw	r7, #1023	; 0x3ff
   17454:	strb	r1, [r0, #17]
   17458:	strh	r2, [r0]
   1745c:	sub	r2, r6, r4
   17460:	movw	r1, #4095	; 0xfff
   17464:	cmp	r2, #5
   17468:	str	r1, [r0, #4]
   1746c:	str	r5, [r0, #8]
   17470:	orrlt	r1, r3, r7
   17474:	str	r1, [r0, #12]
   17478:	sub	sp, fp, #28
   1747c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17480:	cmp	r6, #0
   17484:	bne	1749c <lchmod@@Base+0x544>
   17488:	add	r1, r0, r3, lsl #4
   1748c:	mov	r2, #0
   17490:	strb	r2, [r1, #1]
   17494:	sub	sp, fp, #28
   17498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1749c:	bl	136b8 <__assert_fail@plt+0x1af8>
   174a0:	mov	r0, #0
   174a4:	sub	sp, fp, #28
   174a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174ac:	push	{r4, sl, fp, lr}
   174b0:	add	fp, sp, #8
   174b4:	sub	sp, sp, #104	; 0x68
   174b8:	mov	r1, r0
   174bc:	mov	r2, sp
   174c0:	mov	r0, #3
   174c4:	bl	11b3c <__xstat64@plt>
   174c8:	mov	r1, r0
   174cc:	mov	r0, #0
   174d0:	cmp	r1, #0
   174d4:	beq	174e0 <lchmod@@Base+0x588>
   174d8:	sub	sp, fp, #8
   174dc:	pop	{r4, sl, fp, pc}
   174e0:	ldr	r4, [sp, #16]
   174e4:	mov	r0, #32
   174e8:	bl	19e30 <lchmod@@Base+0x2ed8>
   174ec:	mov	r1, #0
   174f0:	strb	r1, [r0, #17]
   174f4:	movw	r1, #4095	; 0xfff
   174f8:	stmib	r0, {r1, r4}
   174fc:	str	r1, [r0, #12]
   17500:	movw	r1, #317	; 0x13d
   17504:	strh	r1, [r0]
   17508:	sub	sp, fp, #8
   1750c:	pop	{r4, sl, fp, pc}
   17510:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17514:	add	fp, sp, #24
   17518:	ldrb	r4, [r3, #1]
   1751c:	ldr	ip, [fp, #8]
   17520:	bfc	r0, #12, #20
   17524:	cmp	r4, #0
   17528:	beq	17608 <lchmod@@Base+0x6b0>
   1752c:	cmp	r1, #0
   17530:	mov	lr, r1
   17534:	add	r3, r3, #8
   17538:	mov	r9, #0
   1753c:	movw	r8, #4095	; 0xfff
   17540:	movwne	lr, #3072	; 0xc00
   17544:	b	17560 <lchmod@@Base+0x608>
   17548:	bic	r0, r0, r3
   1754c:	orr	r9, r3, r9
   17550:	ldrb	r4, [r5, #9]
   17554:	add	r3, r5, #16
   17558:	cmp	r4, #0
   1755c:	beq	1760c <lchmod@@Base+0x6b4>
   17560:	mov	r5, r3
   17564:	ldr	r7, [r3, #-4]
   17568:	ldr	r3, [r3]
   1756c:	uxtb	r4, r4
   17570:	ldr	r6, [r5, #4]
   17574:	cmp	r4, #2
   17578:	bic	r6, lr, r6
   1757c:	beq	175a8 <lchmod@@Base+0x650>
   17580:	cmp	r4, #3
   17584:	bne	175b4 <lchmod@@Base+0x65c>
   17588:	and	r4, r3, r0
   1758c:	tst	r4, #146	; 0x92
   17590:	mov	r3, r4
   17594:	orrne	r3, r3, #146	; 0x92
   17598:	tst	r4, #292	; 0x124
   1759c:	orrne	r3, r3, #292	; 0x124
   175a0:	tst	r4, #73	; 0x49
   175a4:	b	175b0 <lchmod@@Base+0x658>
   175a8:	and	r4, r0, #73	; 0x49
   175ac:	orrs	r4, r4, r1
   175b0:	orrne	r3, r3, #73	; 0x49
   175b4:	cmp	r7, #0
   175b8:	mov	r4, r7
   175bc:	mvneq	r4, r2
   175c0:	bic	r4, r4, r6
   175c4:	and	r3, r4, r3
   175c8:	ldrb	r4, [r5, #-8]
   175cc:	cmp	r4, #43	; 0x2b
   175d0:	beq	17600 <lchmod@@Base+0x6a8>
   175d4:	cmp	r4, #45	; 0x2d
   175d8:	beq	17548 <lchmod@@Base+0x5f0>
   175dc:	cmp	r4, #61	; 0x3d
   175e0:	bne	17550 <lchmod@@Base+0x5f8>
   175e4:	mvn	r4, r7
   175e8:	cmp	r7, #0
   175ec:	orrne	r6, r6, r4
   175f0:	and	r0, r6, r0
   175f4:	orr	r0, r3, r0
   175f8:	bic	r3, r8, r6
   175fc:	b	1754c <lchmod@@Base+0x5f4>
   17600:	orr	r0, r3, r0
   17604:	b	1754c <lchmod@@Base+0x5f4>
   17608:	mov	r9, #0
   1760c:	cmp	ip, #0
   17610:	strne	r9, [ip]
   17614:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17618:	sub	sp, sp, #4
   1761c:	push	{fp, lr}
   17620:	mov	fp, sp
   17624:	sub	sp, sp, #4
   17628:	str	r3, [fp, #8]
   1762c:	tst	r2, #64	; 0x40
   17630:	mov	r3, #0
   17634:	ldrne	r3, [fp, #8]
   17638:	bl	119ec <openat64@plt>
   1763c:	bl	19730 <lchmod@@Base+0x27d8>
   17640:	mov	sp, fp
   17644:	pop	{fp, lr}
   17648:	add	sp, sp, #4
   1764c:	bx	lr
   17650:	push	{r4, r5, r6, sl, fp, lr}
   17654:	add	fp, sp, #16
   17658:	orr	r2, r2, #18688	; 0x4900
   1765c:	mov	r4, r3
   17660:	orr	r2, r2, #524288	; 0x80000
   17664:	bl	17618 <lchmod@@Base+0x6c0>
   17668:	mov	r5, r0
   1766c:	mov	r0, #0
   17670:	cmp	r5, #0
   17674:	bmi	176ac <lchmod@@Base+0x754>
   17678:	mov	r0, r5
   1767c:	bl	11ab8 <fdopendir@plt>
   17680:	cmp	r0, #0
   17684:	beq	17690 <lchmod@@Base+0x738>
   17688:	str	r5, [r4]
   1768c:	pop	{r4, r5, r6, sl, fp, pc}
   17690:	bl	11a04 <__errno_location@plt>
   17694:	ldr	r6, [r0]
   17698:	mov	r4, r0
   1769c:	mov	r0, r5
   176a0:	bl	11b6c <close@plt>
   176a4:	mov	r0, #0
   176a8:	str	r6, [r4]
   176ac:	pop	{r4, r5, r6, sl, fp, pc}
   176b0:	push	{r4, r5, fp, lr}
   176b4:	add	fp, sp, #8
   176b8:	cmp	r0, #0
   176bc:	beq	17750 <lchmod@@Base+0x7f8>
   176c0:	mov	r1, #47	; 0x2f
   176c4:	mov	r4, r0
   176c8:	bl	11a94 <strrchr@plt>
   176cc:	cmp	r0, #0
   176d0:	mov	r5, r4
   176d4:	addne	r5, r0, #1
   176d8:	sub	r0, r5, r4
   176dc:	cmp	r0, #7
   176e0:	blt	17734 <lchmod@@Base+0x7dc>
   176e4:	movw	r1, #50501	; 0xc545
   176e8:	sub	r0, r5, #7
   176ec:	mov	r2, #7
   176f0:	movt	r1, #1
   176f4:	bl	11b54 <strncmp@plt>
   176f8:	cmp	r0, #0
   176fc:	bne	17734 <lchmod@@Base+0x7dc>
   17700:	movw	r1, #50509	; 0xc54d
   17704:	mov	r0, r5
   17708:	mov	r2, #3
   1770c:	movt	r1, #1
   17710:	bl	11b54 <strncmp@plt>
   17714:	cmp	r0, #0
   17718:	beq	17724 <lchmod@@Base+0x7cc>
   1771c:	mov	r4, r5
   17720:	b	17734 <lchmod@@Base+0x7dc>
   17724:	movw	r0, #53712	; 0xd1d0
   17728:	add	r4, r5, #3
   1772c:	movt	r0, #2
   17730:	str	r4, [r0]
   17734:	movw	r0, #53716	; 0xd1d4
   17738:	movt	r0, #2
   1773c:	str	r4, [r0]
   17740:	movw	r0, #53752	; 0xd1f8
   17744:	movt	r0, #2
   17748:	str	r4, [r0]
   1774c:	pop	{r4, r5, fp, pc}
   17750:	movw	r0, #53728	; 0xd1e0
   17754:	mov	r1, #55	; 0x37
   17758:	mov	r2, #1
   1775c:	movt	r0, #2
   17760:	ldr	r3, [r0]
   17764:	movw	r0, #50445	; 0xc50d
   17768:	movt	r0, #1
   1776c:	bl	118d8 <fwrite@plt>
   17770:	bl	11b60 <abort@plt>
   17774:	push	{r4, r5, r6, sl, fp, lr}
   17778:	add	fp, sp, #16
   1777c:	mov	r4, r0
   17780:	movw	r0, #53760	; 0xd200
   17784:	movt	r0, #2
   17788:	cmp	r4, #0
   1778c:	moveq	r4, r0
   17790:	bl	11a04 <__errno_location@plt>
   17794:	ldr	r6, [r0]
   17798:	mov	r5, r0
   1779c:	mov	r0, r4
   177a0:	mov	r1, #48	; 0x30
   177a4:	bl	1a290 <lchmod@@Base+0x3338>
   177a8:	str	r6, [r5]
   177ac:	pop	{r4, r5, r6, sl, fp, pc}
   177b0:	movw	r1, #53760	; 0xd200
   177b4:	cmp	r0, #0
   177b8:	movt	r1, #2
   177bc:	movne	r1, r0
   177c0:	ldr	r0, [r1]
   177c4:	bx	lr
   177c8:	movw	r2, #53760	; 0xd200
   177cc:	cmp	r0, #0
   177d0:	movt	r2, #2
   177d4:	movne	r2, r0
   177d8:	str	r1, [r2]
   177dc:	bx	lr
   177e0:	movw	r3, #53760	; 0xd200
   177e4:	cmp	r0, #0
   177e8:	and	r2, r2, #1
   177ec:	movt	r3, #2
   177f0:	movne	r3, r0
   177f4:	ubfx	r0, r1, #5, #3
   177f8:	and	r1, r1, #31
   177fc:	add	ip, r3, r0, lsl #2
   17800:	mov	r0, #1
   17804:	ldr	r3, [ip, #8]
   17808:	and	r0, r0, r3, lsr r1
   1780c:	eor	r2, r0, r2
   17810:	eor	r1, r3, r2, lsl r1
   17814:	str	r1, [ip, #8]
   17818:	bx	lr
   1781c:	movw	r2, #53760	; 0xd200
   17820:	cmp	r0, #0
   17824:	movt	r2, #2
   17828:	movne	r2, r0
   1782c:	ldr	r0, [r2, #4]
   17830:	str	r1, [r2, #4]
   17834:	bx	lr
   17838:	push	{fp, lr}
   1783c:	mov	fp, sp
   17840:	movw	r3, #53760	; 0xd200
   17844:	cmp	r0, #0
   17848:	movt	r3, #2
   1784c:	movne	r3, r0
   17850:	cmp	r1, #0
   17854:	mov	r0, #10
   17858:	cmpne	r2, #0
   1785c:	str	r0, [r3]
   17860:	bne	17868 <lchmod@@Base+0x910>
   17864:	bl	11b60 <abort@plt>
   17868:	str	r1, [r3, #40]	; 0x28
   1786c:	str	r2, [r3, #44]	; 0x2c
   17870:	pop	{fp, pc}
   17874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17878:	add	fp, sp, #28
   1787c:	sub	sp, sp, #20
   17880:	mov	r7, r0
   17884:	ldr	r0, [fp, #8]
   17888:	movw	r5, #53760	; 0xd200
   1788c:	mov	r8, r3
   17890:	mov	r9, r2
   17894:	mov	sl, r1
   17898:	movt	r5, #2
   1789c:	cmp	r0, #0
   178a0:	movne	r5, r0
   178a4:	bl	11a04 <__errno_location@plt>
   178a8:	ldr	r2, [r5, #40]	; 0x28
   178ac:	ldr	r3, [r5, #44]	; 0x2c
   178b0:	mov	r4, r0
   178b4:	ldm	r5, {r0, r1}
   178b8:	add	r5, r5, #8
   178bc:	ldr	r6, [r4]
   178c0:	stm	sp, {r0, r1, r5}
   178c4:	mov	r0, r7
   178c8:	mov	r1, sl
   178cc:	str	r2, [sp, #12]
   178d0:	str	r3, [sp, #16]
   178d4:	mov	r2, r9
   178d8:	mov	r3, r8
   178dc:	bl	178ec <lchmod@@Base+0x994>
   178e0:	str	r6, [r4]
   178e4:	sub	sp, fp, #28
   178e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178f0:	add	fp, sp, #28
   178f4:	sub	sp, sp, #156	; 0x9c
   178f8:	mov	r5, r0
   178fc:	add	r0, r2, #1
   17900:	mov	r6, r1
   17904:	mov	sl, r3
   17908:	str	r2, [fp, #-80]	; 0xffffffb0
   1790c:	str	r0, [sp, #72]	; 0x48
   17910:	ldr	r0, [fp, #12]
   17914:	and	r1, r0, #1
   17918:	str	r1, [sp, #36]	; 0x24
   1791c:	and	r1, r0, #4
   17920:	str	r1, [sp, #32]
   17924:	ubfx	r9, r0, #1, #1
   17928:	bl	118f0 <__ctype_get_mb_cur_max@plt>
   1792c:	str	r0, [sp, #40]	; 0x28
   17930:	ldr	r0, [fp, #24]
   17934:	ldr	r7, [fp, #8]
   17938:	mov	r1, #0
   1793c:	str	r5, [fp, #-84]	; 0xffffffac
   17940:	str	r1, [fp, #-56]	; 0xffffffc8
   17944:	mov	r1, #0
   17948:	str	r1, [sp, #60]	; 0x3c
   1794c:	mov	r1, #1
   17950:	str	r1, [fp, #-48]	; 0xffffffd0
   17954:	str	r0, [sp, #80]	; 0x50
   17958:	ldr	r0, [fp, #20]
   1795c:	str	r0, [sp, #76]	; 0x4c
   17960:	mov	r0, #0
   17964:	str	r0, [sp, #56]	; 0x38
   17968:	mov	r0, #0
   1796c:	str	r0, [fp, #-88]	; 0xffffffa8
   17970:	mov	r0, #0
   17974:	str	r0, [fp, #-72]	; 0xffffffb8
   17978:	mov	r0, #0
   1797c:	cmp	r7, #10
   17980:	bhi	18914 <lchmod@@Base+0x19bc>
   17984:	add	r1, pc, #24
   17988:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1798c:	mov	r4, r6
   17990:	mov	r8, #0
   17994:	mov	r2, #1
   17998:	mov	r3, #0
   1799c:	mov	lr, sl
   179a0:	ldr	pc, [r1, r7, lsl #2]
   179a4:	andeq	r7, r1, r8, ror #20
   179a8:			; <UNDEFINED> instruction: 0x00017abc
   179ac:	andeq	r7, r1, ip, ror sl
   179b0:	andeq	r7, r1, r0, ror #20
   179b4:			; <UNDEFINED> instruction: 0x00017ab0
   179b8:	andeq	r7, r1, r4, ror #21
   179bc:	andeq	r7, r1, ip, lsl #21
   179c0:	andeq	r7, r1, r8, ror #22
   179c4:	ldrdeq	r7, [r1], -r0
   179c8:	ldrdeq	r7, [r1], -r0
   179cc:	strdeq	r7, [r1], -r8
   179d0:	movw	r0, #50591	; 0xc59f
   179d4:	mov	r1, r7
   179d8:	movt	r0, #1
   179dc:	bl	1931c <lchmod@@Base+0x23c4>
   179e0:	str	r0, [sp, #76]	; 0x4c
   179e4:	movw	r0, #50593	; 0xc5a1
   179e8:	mov	r1, r7
   179ec:	movt	r0, #1
   179f0:	bl	1931c <lchmod@@Base+0x23c4>
   179f4:	str	r0, [sp, #80]	; 0x50
   179f8:	mov	r8, #0
   179fc:	tst	r9, #1
   17a00:	bne	17a38 <lchmod@@Base+0xae0>
   17a04:	ldr	r0, [sp, #76]	; 0x4c
   17a08:	ldrb	r0, [r0]
   17a0c:	cmp	r0, #0
   17a10:	beq	17a38 <lchmod@@Base+0xae0>
   17a14:	ldr	r1, [sp, #76]	; 0x4c
   17a18:	mov	r8, #0
   17a1c:	add	r1, r1, #1
   17a20:	cmp	r8, r4
   17a24:	strbcc	r0, [r5, r8]
   17a28:	ldrb	r0, [r1, r8]
   17a2c:	add	r8, r8, #1
   17a30:	cmp	r0, #0
   17a34:	bne	17a20 <lchmod@@Base+0xac8>
   17a38:	ldr	r6, [sp, #80]	; 0x50
   17a3c:	mov	r0, r6
   17a40:	bl	119c8 <strlen@plt>
   17a44:	ldr	ip, [fp, #-80]	; 0xffffffb0
   17a48:	str	r0, [fp, #-72]	; 0xffffffb8
   17a4c:	str	r6, [fp, #-88]	; 0xffffffa8
   17a50:	mov	r2, #1
   17a54:	mov	r3, r9
   17a58:	mov	lr, sl
   17a5c:	b	17b68 <lchmod@@Base+0xc10>
   17a60:	mov	r0, #1
   17a64:	b	17abc <lchmod@@Base+0xb64>
   17a68:	mov	r7, #0
   17a6c:	mov	r8, #0
   17a70:	mov	r2, r0
   17a74:	mov	r3, #0
   17a78:	b	17b68 <lchmod@@Base+0xc10>
   17a7c:	tst	r9, #1
   17a80:	bne	17abc <lchmod@@Base+0xb64>
   17a84:	mov	r2, r0
   17a88:	b	17b14 <lchmod@@Base+0xbbc>
   17a8c:	mov	r0, #1
   17a90:	mov	r8, #0
   17a94:	mov	r7, #5
   17a98:	mov	r2, #1
   17a9c:	str	r0, [fp, #-72]	; 0xffffffb8
   17aa0:	movw	r0, #50589	; 0xc59d
   17aa4:	movt	r0, #1
   17aa8:	str	r0, [fp, #-88]	; 0xffffffa8
   17aac:	b	17adc <lchmod@@Base+0xb84>
   17ab0:	mov	r2, #1
   17ab4:	tst	r9, #1
   17ab8:	beq	17b14 <lchmod@@Base+0xbbc>
   17abc:	mov	r1, #1
   17ac0:	mov	r8, #0
   17ac4:	mov	r7, #2
   17ac8:	mov	r2, r0
   17acc:	str	r1, [fp, #-72]	; 0xffffffb8
   17ad0:	movw	r1, #50593	; 0xc5a1
   17ad4:	movt	r1, #1
   17ad8:	str	r1, [fp, #-88]	; 0xffffffa8
   17adc:	mov	r3, #1
   17ae0:	b	17b68 <lchmod@@Base+0xc10>
   17ae4:	tst	r9, #1
   17ae8:	beq	17b38 <lchmod@@Base+0xbe0>
   17aec:	mov	r0, #1
   17af0:	mov	r8, #0
   17af4:	mov	r2, #1
   17af8:	mov	r3, #1
   17afc:	mov	r7, #5
   17b00:	str	r0, [fp, #-72]	; 0xffffffb8
   17b04:	movw	r0, #50589	; 0xc59d
   17b08:	movt	r0, #1
   17b0c:	str	r0, [fp, #-88]	; 0xffffffa8
   17b10:	b	17b68 <lchmod@@Base+0xc10>
   17b14:	cmp	r4, #0
   17b18:	mov	r8, #1
   17b1c:	mov	r3, #0
   17b20:	mov	r7, #2
   17b24:	movne	r0, #39	; 0x27
   17b28:	strbne	r0, [r5]
   17b2c:	movw	r0, #50593	; 0xc5a1
   17b30:	movt	r0, #1
   17b34:	b	17b5c <lchmod@@Base+0xc04>
   17b38:	cmp	r4, #0
   17b3c:	mov	r8, #1
   17b40:	mov	r2, #1
   17b44:	mov	r7, #5
   17b48:	mov	r3, #0
   17b4c:	movne	r0, #34	; 0x22
   17b50:	strbne	r0, [r5]
   17b54:	movw	r0, #50589	; 0xc59d
   17b58:	movt	r0, #1
   17b5c:	str	r0, [fp, #-88]	; 0xffffffa8
   17b60:	mov	r0, #1
   17b64:	str	r0, [fp, #-72]	; 0xffffffb8
   17b68:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17b6c:	eor	r6, r3, #1
   17b70:	str	r7, [fp, #-68]	; 0xffffffbc
   17b74:	str	r3, [fp, #-76]	; 0xffffffb4
   17b78:	str	r2, [sp, #84]	; 0x54
   17b7c:	str	r6, [sp, #92]	; 0x5c
   17b80:	cmp	r0, #0
   17b84:	movwne	r0, #1
   17b88:	and	r1, r0, r3
   17b8c:	and	r1, r2, r1
   17b90:	str	r1, [sp, #48]	; 0x30
   17b94:	sub	r1, r7, #2
   17b98:	clz	r1, r1
   17b9c:	lsr	r1, r1, #5
   17ba0:	and	r1, r1, r3
   17ba4:	str	r1, [sp, #64]	; 0x40
   17ba8:	subs	r1, r7, #2
   17bac:	mov	r7, #0
   17bb0:	movwne	r1, #1
   17bb4:	orr	r6, r1, r6
   17bb8:	and	r1, r1, r2
   17bbc:	and	r0, r0, r1
   17bc0:	str	r6, [sp, #68]	; 0x44
   17bc4:	str	r0, [fp, #-60]	; 0xffffffc4
   17bc8:	orr	r0, r1, r3
   17bcc:	ldr	r1, [fp, #16]
   17bd0:	eor	r0, r0, #1
   17bd4:	clz	r1, r1
   17bd8:	lsr	r1, r1, #5
   17bdc:	orr	r0, r1, r0
   17be0:	str	r0, [fp, #-64]	; 0xffffffc0
   17be4:	eor	r0, r2, #1
   17be8:	str	r0, [sp, #52]	; 0x34
   17bec:	cmn	lr, #1
   17bf0:	beq	17c00 <lchmod@@Base+0xca8>
   17bf4:	cmp	r7, lr
   17bf8:	bne	17c0c <lchmod@@Base+0xcb4>
   17bfc:	b	18754 <lchmod@@Base+0x17fc>
   17c00:	ldrb	r0, [ip, r7]
   17c04:	cmp	r0, #0
   17c08:	beq	1875c <lchmod@@Base+0x1804>
   17c0c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17c10:	mov	sl, #0
   17c14:	cmp	r0, #0
   17c18:	beq	17c50 <lchmod@@Base+0xcf8>
   17c1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   17c20:	add	r5, r7, r0
   17c24:	cmp	r0, #2
   17c28:	bcc	17c44 <lchmod@@Base+0xcec>
   17c2c:	cmn	lr, #1
   17c30:	bne	17c44 <lchmod@@Base+0xcec>
   17c34:	mov	r0, ip
   17c38:	bl	119c8 <strlen@plt>
   17c3c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   17c40:	mov	lr, r0
   17c44:	cmp	r5, lr
   17c48:	bls	17c58 <lchmod@@Base+0xd00>
   17c4c:	ldr	r5, [fp, #-84]	; 0xffffffac
   17c50:	mov	r0, #0
   17c54:	b	17ca4 <lchmod@@Base+0xd4c>
   17c58:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17c5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17c60:	add	r0, ip, r7
   17c64:	mov	r6, r4
   17c68:	mov	r4, lr
   17c6c:	bl	119bc <bcmp@plt>
   17c70:	ldr	r2, [sp, #92]	; 0x5c
   17c74:	cmp	r0, #0
   17c78:	ldr	r5, [fp, #-84]	; 0xffffffac
   17c7c:	mov	r1, r0
   17c80:	movwne	r1, #1
   17c84:	orr	r1, r1, r2
   17c88:	tst	r1, #1
   17c8c:	beq	187e4 <lchmod@@Base+0x188c>
   17c90:	ldr	ip, [fp, #-80]	; 0xffffffb0
   17c94:	clz	r0, r0
   17c98:	mov	lr, r4
   17c9c:	mov	r4, r6
   17ca0:	lsr	r0, r0, #5
   17ca4:	str	r0, [fp, #-52]	; 0xffffffcc
   17ca8:	ldrb	r6, [ip, r7]
   17cac:	cmp	r6, #126	; 0x7e
   17cb0:	bhi	181e0 <lchmod@@Base+0x1288>
   17cb4:	add	r3, pc, #16
   17cb8:	mov	r9, #1
   17cbc:	mov	r2, #110	; 0x6e
   17cc0:	mov	r0, #97	; 0x61
   17cc4:	mov	r1, #0
   17cc8:	ldr	pc, [r3, r6, lsl #2]
   17ccc:	andeq	r8, r1, r0, asr #32
   17cd0:	andeq	r8, r1, r0, ror #3
   17cd4:	andeq	r8, r1, r0, ror #3
   17cd8:	andeq	r8, r1, r0, ror #3
   17cdc:	andeq	r8, r1, r0, ror #3
   17ce0:	andeq	r8, r1, r0, ror #3
   17ce4:	andeq	r8, r1, r0, ror #3
   17ce8:			; <UNDEFINED> instruction: 0x000182bc
   17cec:	andeq	r8, r1, r0, lsr #32
   17cf0:	andeq	r8, r1, r8, lsl r0
   17cf4:	andeq	r8, r1, ip, lsr #32
   17cf8:	andeq	r8, r1, r8, asr #2
   17cfc:	andeq	r8, r1, r0, lsl r0
   17d00:	andeq	r8, r1, r8, lsr #32
   17d04:	andeq	r8, r1, r0, ror #3
   17d08:	andeq	r8, r1, r0, ror #3
   17d0c:	andeq	r8, r1, r0, ror #3
   17d10:	andeq	r8, r1, r0, ror #3
   17d14:	andeq	r8, r1, r0, ror #3
   17d18:	andeq	r8, r1, r0, ror #3
   17d1c:	andeq	r8, r1, r0, ror #3
   17d20:	andeq	r8, r1, r0, ror #3
   17d24:	andeq	r8, r1, r0, ror #3
   17d28:	andeq	r8, r1, r0, ror #3
   17d2c:	andeq	r8, r1, r0, ror #3
   17d30:	andeq	r8, r1, r0, ror #3
   17d34:	andeq	r8, r1, r0, ror #3
   17d38:	andeq	r8, r1, r0, ror #3
   17d3c:	andeq	r8, r1, r0, ror #3
   17d40:	andeq	r8, r1, r0, ror #3
   17d44:	andeq	r8, r1, r0, ror #3
   17d48:	andeq	r8, r1, r0, ror #3
   17d4c:	andeq	r7, r1, r4, asr #31
   17d50:	andeq	r7, r1, r8, asr #31
   17d54:	andeq	r7, r1, r8, asr #31
   17d58:			; <UNDEFINED> instruction: 0x00017fb0
   17d5c:	andeq	r7, r1, r8, asr #31
   17d60:	andeq	r7, r1, r8, asr #29
   17d64:	andeq	r7, r1, r8, asr #31
   17d68:	andeq	r8, r1, r0, asr r1
   17d6c:	andeq	r7, r1, r8, asr #31
   17d70:	andeq	r7, r1, r8, asr #31
   17d74:	andeq	r7, r1, r8, asr #31
   17d78:	andeq	r7, r1, r8, asr #29
   17d7c:	andeq	r7, r1, r8, asr #29
   17d80:	andeq	r7, r1, r8, asr #29
   17d84:	andeq	r7, r1, r8, asr #29
   17d88:	andeq	r7, r1, r8, asr #29
   17d8c:	andeq	r7, r1, r8, asr #29
   17d90:	andeq	r7, r1, r8, asr #29
   17d94:	andeq	r7, r1, r8, asr #29
   17d98:	andeq	r7, r1, r8, asr #29
   17d9c:	andeq	r7, r1, r8, asr #29
   17da0:	andeq	r7, r1, r8, asr #29
   17da4:	andeq	r7, r1, r8, asr #29
   17da8:	andeq	r7, r1, r8, asr #29
   17dac:	andeq	r7, r1, r8, asr #29
   17db0:	andeq	r7, r1, r8, asr #29
   17db4:	andeq	r7, r1, r8, asr #29
   17db8:	andeq	r7, r1, r8, asr #31
   17dbc:	andeq	r7, r1, r8, asr #31
   17dc0:	andeq	r7, r1, r8, asr #31
   17dc4:	andeq	r7, r1, r8, asr #31
   17dc8:	andeq	r8, r1, r8, lsl r1
   17dcc:	andeq	r8, r1, r0, ror #3
   17dd0:	andeq	r7, r1, r8, asr #29
   17dd4:	andeq	r7, r1, r8, asr #29
   17dd8:	andeq	r7, r1, r8, asr #29
   17ddc:	andeq	r7, r1, r8, asr #29
   17de0:	andeq	r7, r1, r8, asr #29
   17de4:	andeq	r7, r1, r8, asr #29
   17de8:	andeq	r7, r1, r8, asr #29
   17dec:	andeq	r7, r1, r8, asr #29
   17df0:	andeq	r7, r1, r8, asr #29
   17df4:	andeq	r7, r1, r8, asr #29
   17df8:	andeq	r7, r1, r8, asr #29
   17dfc:	andeq	r7, r1, r8, asr #29
   17e00:	andeq	r7, r1, r8, asr #29
   17e04:	andeq	r7, r1, r8, asr #29
   17e08:	andeq	r7, r1, r8, asr #29
   17e0c:	andeq	r7, r1, r8, asr #29
   17e10:	andeq	r7, r1, r8, asr #29
   17e14:	andeq	r7, r1, r8, asr #29
   17e18:	andeq	r7, r1, r8, asr #29
   17e1c:	andeq	r7, r1, r8, asr #29
   17e20:	andeq	r7, r1, r8, asr #29
   17e24:	andeq	r7, r1, r8, asr #29
   17e28:	andeq	r7, r1, r8, asr #29
   17e2c:	andeq	r7, r1, r8, asr #29
   17e30:	andeq	r7, r1, r8, asr #29
   17e34:	andeq	r7, r1, r8, asr #29
   17e38:	andeq	r7, r1, r8, asr #31
   17e3c:	strdeq	r7, [r1], -r0
   17e40:	andeq	r7, r1, r8, asr #29
   17e44:	andeq	r7, r1, r8, asr #31
   17e48:	andeq	r7, r1, r8, asr #29
   17e4c:	andeq	r7, r1, r8, asr #31
   17e50:	andeq	r7, r1, r8, asr #29
   17e54:	andeq	r7, r1, r8, asr #29
   17e58:	andeq	r7, r1, r8, asr #29
   17e5c:	andeq	r7, r1, r8, asr #29
   17e60:	andeq	r7, r1, r8, asr #29
   17e64:	andeq	r7, r1, r8, asr #29
   17e68:	andeq	r7, r1, r8, asr #29
   17e6c:	andeq	r7, r1, r8, asr #29
   17e70:	andeq	r7, r1, r8, asr #29
   17e74:	andeq	r7, r1, r8, asr #29
   17e78:	andeq	r7, r1, r8, asr #29
   17e7c:	andeq	r7, r1, r8, asr #29
   17e80:	andeq	r7, r1, r8, asr #29
   17e84:	andeq	r7, r1, r8, asr #29
   17e88:	andeq	r7, r1, r8, asr #29
   17e8c:	andeq	r7, r1, r8, asr #29
   17e90:	andeq	r7, r1, r8, asr #29
   17e94:	andeq	r7, r1, r8, asr #29
   17e98:	andeq	r7, r1, r8, asr #29
   17e9c:	andeq	r7, r1, r8, asr #29
   17ea0:	andeq	r7, r1, r8, asr #29
   17ea4:	andeq	r7, r1, r8, asr #29
   17ea8:	andeq	r7, r1, r8, asr #29
   17eac:	andeq	r7, r1, r8, asr #29
   17eb0:	andeq	r7, r1, r8, asr #29
   17eb4:	andeq	r7, r1, r8, asr #29
   17eb8:	andeq	r7, r1, r4, lsl #31
   17ebc:	andeq	r7, r1, r8, asr #31
   17ec0:	andeq	r7, r1, r4, lsl #31
   17ec4:			; <UNDEFINED> instruction: 0x00017fb0
   17ec8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17ecc:	tst	r0, #1
   17ed0:	bne	17efc <lchmod@@Base+0xfa4>
   17ed4:	ldr	r1, [fp, #16]
   17ed8:	ubfx	r0, r6, #5, #3
   17edc:	mov	r2, #1
   17ee0:	ldr	r0, [r1, r0, lsl #2]
   17ee4:	and	r1, r6, #31
   17ee8:	tst	r0, r2, lsl r1
   17eec:	beq	17efc <lchmod@@Base+0xfa4>
   17ef0:	mov	r0, r6
   17ef4:	mov	r1, r9
   17ef8:	b	17f10 <lchmod@@Base+0xfb8>
   17efc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17f00:	mov	r1, r9
   17f04:	cmp	r0, #0
   17f08:	mov	r0, r6
   17f0c:	beq	18250 <lchmod@@Base+0x12f8>
   17f10:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17f14:	tst	r2, #1
   17f18:	bne	18820 <lchmod@@Base+0x18c8>
   17f1c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17f20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17f24:	subs	r2, r2, #2
   17f28:	movwne	r2, #1
   17f2c:	orr	r2, r2, r3
   17f30:	tst	r2, #1
   17f34:	bne	17f70 <lchmod@@Base+0x1018>
   17f38:	cmp	r8, r4
   17f3c:	movcc	r2, #39	; 0x27
   17f40:	strbcc	r2, [r5, r8]
   17f44:	add	r2, r8, #1
   17f48:	cmp	r2, r4
   17f4c:	movcc	r3, #36	; 0x24
   17f50:	strbcc	r3, [r5, r2]
   17f54:	add	r2, r8, #2
   17f58:	add	r8, r8, #3
   17f5c:	cmp	r2, r4
   17f60:	movcc	r3, #39	; 0x27
   17f64:	strbcc	r3, [r5, r2]
   17f68:	mov	r2, #1
   17f6c:	str	r2, [fp, #-56]	; 0xffffffc8
   17f70:	cmp	r8, r4
   17f74:	movcc	r2, #92	; 0x5c
   17f78:	strbcc	r2, [r5, r8]
   17f7c:	add	r8, r8, #1
   17f80:	b	18294 <lchmod@@Base+0x133c>
   17f84:	cmp	lr, #1
   17f88:	beq	17fb0 <lchmod@@Base+0x1058>
   17f8c:	mov	r9, #0
   17f90:	cmn	lr, #1
   17f94:	bne	17fbc <lchmod@@Base+0x1064>
   17f98:	ldrb	r0, [ip, #1]
   17f9c:	cmp	r0, #0
   17fa0:	beq	17fb0 <lchmod@@Base+0x1058>
   17fa4:	mvn	lr, #0
   17fa8:	mov	sl, #0
   17fac:	b	17ec8 <lchmod@@Base+0xf70>
   17fb0:	mov	r9, #0
   17fb4:	cmp	r7, #0
   17fb8:	beq	17fc4 <lchmod@@Base+0x106c>
   17fbc:	mov	sl, #0
   17fc0:	b	17ec8 <lchmod@@Base+0xf70>
   17fc4:	mov	r1, #1
   17fc8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17fcc:	cmp	r0, #2
   17fd0:	bne	17fe8 <lchmod@@Base+0x1090>
   17fd4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17fd8:	mov	r9, r1
   17fdc:	tst	r0, #1
   17fe0:	beq	17ec8 <lchmod@@Base+0xf70>
   17fe4:	b	18820 <lchmod@@Base+0x18c8>
   17fe8:	mov	r9, r1
   17fec:	b	17ec8 <lchmod@@Base+0xf70>
   17ff0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17ff4:	cmp	r0, #2
   17ff8:	bne	18234 <lchmod@@Base+0x12dc>
   17ffc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   18000:	tst	r0, #1
   18004:	bne	18820 <lchmod@@Base+0x18c8>
   18008:	mov	sl, #0
   1800c:	b	18248 <lchmod@@Base+0x12f0>
   18010:	mov	r0, #102	; 0x66
   18014:	b	182bc <lchmod@@Base+0x1364>
   18018:	mov	r2, #116	; 0x74
   1801c:	b	1802c <lchmod@@Base+0x10d4>
   18020:	mov	r0, #98	; 0x62
   18024:	b	182bc <lchmod@@Base+0x1364>
   18028:	mov	r2, #114	; 0x72
   1802c:	ldr	r0, [sp, #68]	; 0x44
   18030:	tst	r0, #1
   18034:	mov	r0, r2
   18038:	bne	182bc <lchmod@@Base+0x1364>
   1803c:	b	18820 <lchmod@@Base+0x18c8>
   18040:	ldr	r0, [sp, #84]	; 0x54
   18044:	tst	r0, #1
   18048:	beq	182d8 <lchmod@@Base+0x1380>
   1804c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   18050:	tst	r0, #1
   18054:	bne	1890c <lchmod@@Base+0x19b4>
   18058:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1805c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18060:	subs	r0, r0, #2
   18064:	movwne	r0, #1
   18068:	orr	r0, r0, r1
   1806c:	tst	r0, #1
   18070:	bne	180ac <lchmod@@Base+0x1154>
   18074:	cmp	r8, r4
   18078:	movcc	r0, #39	; 0x27
   1807c:	strbcc	r0, [r5, r8]
   18080:	add	r0, r8, #1
   18084:	cmp	r0, r4
   18088:	movcc	r1, #36	; 0x24
   1808c:	strbcc	r1, [r5, r0]
   18090:	add	r0, r8, #2
   18094:	add	r8, r8, #3
   18098:	cmp	r0, r4
   1809c:	movcc	r1, #39	; 0x27
   180a0:	strbcc	r1, [r5, r0]
   180a4:	mov	r0, #1
   180a8:	str	r0, [fp, #-56]	; 0xffffffc8
   180ac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   180b0:	cmp	r8, r4
   180b4:	mov	r9, #0
   180b8:	mov	sl, #1
   180bc:	mov	r6, #48	; 0x30
   180c0:	movcc	r0, #92	; 0x5c
   180c4:	strbcc	r0, [r5, r8]
   180c8:	add	r0, r8, #1
   180cc:	cmp	r1, #2
   180d0:	beq	184a0 <lchmod@@Base+0x1548>
   180d4:	add	r1, r7, #1
   180d8:	cmp	r1, lr
   180dc:	bcs	184a0 <lchmod@@Base+0x1548>
   180e0:	ldrb	r1, [ip, r1]
   180e4:	sub	r1, r1, #48	; 0x30
   180e8:	uxtb	r1, r1
   180ec:	cmp	r1, #9
   180f0:	bhi	184a0 <lchmod@@Base+0x1548>
   180f4:	cmp	r0, r4
   180f8:	movcc	r1, #48	; 0x30
   180fc:	strbcc	r1, [r5, r0]
   18100:	add	r0, r8, #2
   18104:	add	r8, r8, #3
   18108:	cmp	r0, r4
   1810c:	movcc	r1, #48	; 0x30
   18110:	strbcc	r1, [r5, r0]
   18114:	b	17ec8 <lchmod@@Base+0xf70>
   18118:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1811c:	mov	sl, #0
   18120:	mov	r6, #63	; 0x3f
   18124:	cmp	r0, #5
   18128:	beq	184a8 <lchmod@@Base+0x1550>
   1812c:	cmp	r0, #2
   18130:	bne	18550 <lchmod@@Base+0x15f8>
   18134:	ldr	r0, [fp, #-76]	; 0xffffffb4
   18138:	mov	r9, #0
   1813c:	tst	r0, #1
   18140:	beq	17ec8 <lchmod@@Base+0xf70>
   18144:	b	18820 <lchmod@@Base+0x18c8>
   18148:	mov	r0, #118	; 0x76
   1814c:	b	182bc <lchmod@@Base+0x1364>
   18150:	mov	r0, #1
   18154:	mov	r6, #39	; 0x27
   18158:	str	r0, [sp, #60]	; 0x3c
   1815c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   18160:	cmp	r0, #2
   18164:	bne	182f4 <lchmod@@Base+0x139c>
   18168:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1816c:	tst	r0, #1
   18170:	bne	18820 <lchmod@@Base+0x18c8>
   18174:	ldr	r2, [sp, #56]	; 0x38
   18178:	clz	r1, r4
   1817c:	mov	sl, #0
   18180:	mov	r9, #1
   18184:	lsr	r1, r1, #5
   18188:	cmp	r2, #0
   1818c:	mov	r0, r2
   18190:	movwne	r0, #1
   18194:	orrs	r0, r0, r1
   18198:	moveq	r2, r4
   1819c:	moveq	r4, r0
   181a0:	cmp	r8, r4
   181a4:	str	r2, [sp, #56]	; 0x38
   181a8:	movcc	r0, #39	; 0x27
   181ac:	strbcc	r0, [r5, r8]
   181b0:	add	r0, r8, #1
   181b4:	cmp	r0, r4
   181b8:	movcc	r1, #92	; 0x5c
   181bc:	strbcc	r1, [r5, r0]
   181c0:	add	r0, r8, #2
   181c4:	add	r8, r8, #3
   181c8:	cmp	r0, r4
   181cc:	movcc	r1, #39	; 0x27
   181d0:	strbcc	r1, [r5, r0]
   181d4:	mov	r0, #0
   181d8:	str	r0, [fp, #-56]	; 0xffffffc8
   181dc:	b	17ec8 <lchmod@@Base+0xf70>
   181e0:	ldr	r0, [sp, #40]	; 0x28
   181e4:	str	r4, [sp, #88]	; 0x58
   181e8:	cmp	r0, #1
   181ec:	bne	182fc <lchmod@@Base+0x13a4>
   181f0:	str	lr, [sp, #28]
   181f4:	bl	1198c <__ctype_b_loc@plt>
   181f8:	ldr	r0, [r0]
   181fc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   18200:	mov	r2, #1
   18204:	add	r0, r0, r6, lsl #1
   18208:	ldrb	r0, [r0, #1]
   1820c:	ubfx	r9, r0, #6, #1
   18210:	ldr	r0, [sp, #52]	; 0x34
   18214:	cmp	r2, #1
   18218:	orr	r0, r9, r0
   1821c:	bhi	18558 <lchmod@@Base+0x1600>
   18220:	tst	r0, #1
   18224:	beq	18558 <lchmod@@Base+0x1600>
   18228:	ldr	lr, [sp, #28]
   1822c:	ldr	r4, [sp, #88]	; 0x58
   18230:	b	17ec8 <lchmod@@Base+0xf70>
   18234:	ldr	r1, [sp, #48]	; 0x30
   18238:	mov	sl, #0
   1823c:	mov	r0, #92	; 0x5c
   18240:	cmp	r1, #0
   18244:	beq	182bc <lchmod@@Base+0x1364>
   18248:	mov	r6, #92	; 0x5c
   1824c:	mov	r9, #0
   18250:	cmp	sl, #0
   18254:	bne	1828c <lchmod@@Base+0x1334>
   18258:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1825c:	tst	r0, #1
   18260:	beq	1828c <lchmod@@Base+0x1334>
   18264:	cmp	r8, r4
   18268:	movcc	r0, #39	; 0x27
   1826c:	strbcc	r0, [r5, r8]
   18270:	add	r0, r8, #1
   18274:	add	r8, r8, #2
   18278:	cmp	r0, r4
   1827c:	movcc	r1, #39	; 0x27
   18280:	strbcc	r1, [r5, r0]
   18284:	mov	r0, #0
   18288:	str	r0, [fp, #-56]	; 0xffffffc8
   1828c:	mov	r1, r9
   18290:	mov	r0, r6
   18294:	cmp	r8, r4
   18298:	strbcc	r0, [r5, r8]
   1829c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   182a0:	add	r8, r8, #1
   182a4:	and	r0, r0, r1
   182a8:	str	r0, [fp, #-48]	; 0xffffffd0
   182ac:	add	r7, r7, #1
   182b0:	cmn	lr, #1
   182b4:	bne	17bf4 <lchmod@@Base+0xc9c>
   182b8:	b	17c00 <lchmod@@Base+0xca8>
   182bc:	ldr	r1, [sp, #84]	; 0x54
   182c0:	mov	sl, #0
   182c4:	mov	r9, #0
   182c8:	tst	r1, #1
   182cc:	mov	r1, #0
   182d0:	beq	17ec8 <lchmod@@Base+0xf70>
   182d4:	b	17f10 <lchmod@@Base+0xfb8>
   182d8:	ldr	r0, [sp, #36]	; 0x24
   182dc:	mov	r6, #0
   182e0:	mov	sl, #0
   182e4:	mov	r9, #0
   182e8:	cmp	r0, #0
   182ec:	beq	17ec8 <lchmod@@Base+0xf70>
   182f0:	b	182ac <lchmod@@Base+0x1354>
   182f4:	mov	r9, #1
   182f8:	b	17ec8 <lchmod@@Base+0xf70>
   182fc:	mov	r0, #0
   18300:	cmn	lr, #1
   18304:	sub	r4, fp, #40	; 0x28
   18308:	str	r0, [fp, #-36]	; 0xffffffdc
   1830c:	str	r0, [fp, #-40]	; 0xffffffd8
   18310:	bne	18324 <lchmod@@Base+0x13cc>
   18314:	mov	r0, ip
   18318:	bl	119c8 <strlen@plt>
   1831c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   18320:	mov	lr, r0
   18324:	ldr	r0, [sp, #72]	; 0x48
   18328:	mov	r9, #1
   1832c:	mov	r2, #0
   18330:	str	lr, [sp, #28]
   18334:	add	r0, r0, r7
   18338:	str	r0, [sp, #20]
   1833c:	b	18380 <lchmod@@Base+0x1428>
   18340:	ldr	r5, [sp, #44]	; 0x2c
   18344:	add	r5, r0, r5
   18348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1834c:	bl	118b4 <iswprint@plt>
   18350:	cmp	r0, #0
   18354:	sub	r4, fp, #40	; 0x28
   18358:	movwne	r0, #1
   1835c:	and	r9, r9, r0
   18360:	mov	r0, r4
   18364:	bl	11848 <mbsinit@plt>
   18368:	mov	r2, r5
   1836c:	ldr	lr, [sp, #28]
   18370:	ldr	r5, [fp, #-84]	; 0xffffffac
   18374:	ldr	ip, [fp, #-80]	; 0xffffffb0
   18378:	cmp	r0, #0
   1837c:	bne	18210 <lchmod@@Base+0x12b8>
   18380:	add	r0, r2, r7
   18384:	str	r2, [sp, #44]	; 0x2c
   18388:	mov	r3, r4
   1838c:	add	r1, ip, r0
   18390:	str	r0, [sp, #24]
   18394:	sub	r2, lr, r0
   18398:	sub	r0, fp, #44	; 0x2c
   1839c:	bl	1b7cc <lchmod@@Base+0x4874>
   183a0:	cmp	r0, #0
   183a4:	beq	18748 <lchmod@@Base+0x17f0>
   183a8:	cmn	r0, #1
   183ac:	beq	18704 <lchmod@@Base+0x17ac>
   183b0:	ldr	lr, [sp, #28]
   183b4:	cmn	r0, #2
   183b8:	beq	1870c <lchmod@@Base+0x17b4>
   183bc:	ldr	r2, [sp, #64]	; 0x40
   183c0:	ldr	r4, [sp, #88]	; 0x58
   183c4:	ldr	ip, [sp, #84]	; 0x54
   183c8:	cmp	r0, #2
   183cc:	mov	r1, #0
   183d0:	movwcc	r1, #1
   183d4:	eor	r2, r2, #1
   183d8:	orrs	r1, r2, r1
   183dc:	bne	18340 <lchmod@@Base+0x13e8>
   183e0:	ldr	r1, [sp, #44]	; 0x2c
   183e4:	ldr	r2, [sp, #20]
   183e8:	add	r1, r2, r1
   183ec:	sub	r2, r0, #1
   183f0:	b	18400 <lchmod@@Base+0x14a8>
   183f4:	add	r1, r1, #1
   183f8:	subs	r2, r2, #1
   183fc:	beq	18340 <lchmod@@Base+0x13e8>
   18400:	ldrb	r3, [r1]
   18404:	sub	r3, r3, #91	; 0x5b
   18408:	cmp	r3, #33	; 0x21
   1840c:	bhi	183f4 <lchmod@@Base+0x149c>
   18410:	add	r5, pc, #0
   18414:	ldr	pc, [r5, r3, lsl #2]
   18418:	strdeq	r8, [r1], -ip
   1841c:	strdeq	r8, [r1], -ip
   18420:	strdeq	r8, [r1], -r4
   18424:	strdeq	r8, [r1], -ip
   18428:	strdeq	r8, [r1], -r4
   1842c:	strdeq	r8, [r1], -ip
   18430:	strdeq	r8, [r1], -r4
   18434:	strdeq	r8, [r1], -r4
   18438:	strdeq	r8, [r1], -r4
   1843c:	strdeq	r8, [r1], -r4
   18440:	strdeq	r8, [r1], -r4
   18444:	strdeq	r8, [r1], -r4
   18448:	strdeq	r8, [r1], -r4
   1844c:	strdeq	r8, [r1], -r4
   18450:	strdeq	r8, [r1], -r4
   18454:	strdeq	r8, [r1], -r4
   18458:	strdeq	r8, [r1], -r4
   1845c:	strdeq	r8, [r1], -r4
   18460:	strdeq	r8, [r1], -r4
   18464:	strdeq	r8, [r1], -r4
   18468:	strdeq	r8, [r1], -r4
   1846c:	strdeq	r8, [r1], -r4
   18470:	strdeq	r8, [r1], -r4
   18474:	strdeq	r8, [r1], -r4
   18478:	strdeq	r8, [r1], -r4
   1847c:	strdeq	r8, [r1], -r4
   18480:	strdeq	r8, [r1], -r4
   18484:	strdeq	r8, [r1], -r4
   18488:	strdeq	r8, [r1], -r4
   1848c:	strdeq	r8, [r1], -r4
   18490:	strdeq	r8, [r1], -r4
   18494:	strdeq	r8, [r1], -r4
   18498:	strdeq	r8, [r1], -r4
   1849c:	strdeq	r8, [r1], -ip
   184a0:	mov	r8, r0
   184a4:	b	17ec8 <lchmod@@Base+0xf70>
   184a8:	ldr	r0, [sp, #32]
   184ac:	cmp	r0, #0
   184b0:	beq	18550 <lchmod@@Base+0x15f8>
   184b4:	add	r0, r7, #2
   184b8:	cmp	r0, lr
   184bc:	bcs	18550 <lchmod@@Base+0x15f8>
   184c0:	add	r1, r7, ip
   184c4:	ldrb	r1, [r1, #1]
   184c8:	cmp	r1, #63	; 0x3f
   184cc:	bne	18550 <lchmod@@Base+0x15f8>
   184d0:	ldrb	r9, [ip, r0]
   184d4:	sub	r2, r9, #33	; 0x21
   184d8:	cmp	r2, #29
   184dc:	bhi	18550 <lchmod@@Base+0x15f8>
   184e0:	movw	r1, #20929	; 0x51c1
   184e4:	mov	r3, #1
   184e8:	movt	r1, #14336	; 0x3800
   184ec:	tst	r1, r3, lsl r2
   184f0:	beq	18550 <lchmod@@Base+0x15f8>
   184f4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   184f8:	tst	r1, #1
   184fc:	bne	18820 <lchmod@@Base+0x18c8>
   18500:	cmp	r8, r4
   18504:	add	r2, r8, #1
   18508:	mov	r6, r9
   1850c:	mov	r7, r0
   18510:	mov	r9, #0
   18514:	movcc	r1, #63	; 0x3f
   18518:	strbcc	r1, [r5, r8]
   1851c:	cmp	r2, r4
   18520:	movcc	r1, #34	; 0x22
   18524:	strbcc	r1, [r5, r2]
   18528:	add	r2, r8, #2
   1852c:	cmp	r2, r4
   18530:	movcc	r1, #34	; 0x22
   18534:	strbcc	r1, [r5, r2]
   18538:	add	r2, r8, #3
   1853c:	add	r8, r8, #4
   18540:	cmp	r2, r4
   18544:	movcc	r1, #63	; 0x3f
   18548:	strbcc	r1, [r5, r2]
   1854c:	b	17ec8 <lchmod@@Base+0xf70>
   18550:	mov	r9, #0
   18554:	b	17ec8 <lchmod@@Base+0xf70>
   18558:	ldr	lr, [sp, #28]
   1855c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   18560:	add	r1, r2, r7
   18564:	mov	r2, #0
   18568:	str	r1, [sp, #44]	; 0x2c
   1856c:	tst	r0, #1
   18570:	bne	1868c <lchmod@@Base+0x1734>
   18574:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18578:	tst	r1, #1
   1857c:	bne	1881c <lchmod@@Base+0x18c4>
   18580:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18584:	subs	r2, r1, #2
   18588:	movwne	r2, #1
   1858c:	orr	r2, r2, r4
   18590:	tst	r2, #1
   18594:	bne	185d8 <lchmod@@Base+0x1680>
   18598:	ldr	r1, [sp, #88]	; 0x58
   1859c:	add	r2, r8, #1
   185a0:	mov	r4, #1
   185a4:	cmp	r8, r1
   185a8:	movcc	r1, #39	; 0x27
   185ac:	strbcc	r1, [r5, r8]
   185b0:	ldr	r1, [sp, #88]	; 0x58
   185b4:	cmp	r2, r1
   185b8:	movcc	r1, #36	; 0x24
   185bc:	strbcc	r1, [r5, r2]
   185c0:	ldr	r1, [sp, #88]	; 0x58
   185c4:	add	r2, r8, #2
   185c8:	add	r8, r8, #3
   185cc:	cmp	r2, r1
   185d0:	movcc	r1, #39	; 0x27
   185d4:	strbcc	r1, [r5, r2]
   185d8:	ldr	r1, [sp, #88]	; 0x58
   185dc:	add	r2, r8, #1
   185e0:	cmp	r8, r1
   185e4:	movcc	r1, #92	; 0x5c
   185e8:	strbcc	r1, [r5, r8]
   185ec:	ldr	r1, [sp, #88]	; 0x58
   185f0:	cmp	r2, r1
   185f4:	bcs	18608 <lchmod@@Base+0x16b0>
   185f8:	uxtb	r3, r6
   185fc:	mov	r1, #48	; 0x30
   18600:	orr	r3, r1, r3, lsr #6
   18604:	strb	r3, [r5, r2]
   18608:	ldr	r1, [sp, #88]	; 0x58
   1860c:	add	r2, r8, #2
   18610:	add	r8, r8, #3
   18614:	cmp	r2, r1
   18618:	lsrcc	r3, r6, #3
   1861c:	movcc	r1, #6
   18620:	bficc	r3, r1, #3, #29
   18624:	mov	r1, #6
   18628:	bfi	r6, r1, #3, #29
   1862c:	strbcc	r3, [r5, r2]
   18630:	mov	r2, #1
   18634:	b	186b4 <lchmod@@Base+0x175c>
   18638:	ldr	r1, [sp, #88]	; 0x58
   1863c:	ldr	r5, [fp, #-84]	; 0xffffffac
   18640:	ldr	r4, [sp, #88]	; 0x58
   18644:	cmp	r8, r1
   18648:	movcc	r1, #39	; 0x27
   1864c:	strbcc	r1, [r5, r8]
   18650:	add	r1, r8, #1
   18654:	add	r8, r8, #2
   18658:	cmp	r1, r4
   1865c:	movcc	r4, #39	; 0x27
   18660:	strbcc	r4, [r5, r1]
   18664:	mov	r4, #0
   18668:	ldr	r1, [sp, #88]	; 0x58
   1866c:	cmp	r8, r1
   18670:	ldr	r1, [sp, #72]	; 0x48
   18674:	strbcc	r6, [r5, r8]
   18678:	add	r8, r8, #1
   1867c:	ldrb	r6, [r1, r7]
   18680:	mov	r7, r3
   18684:	tst	r0, #1
   18688:	beq	18574 <lchmod@@Base+0x161c>
   1868c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18690:	tst	r1, #1
   18694:	beq	186ac <lchmod@@Base+0x1754>
   18698:	ldr	r1, [sp, #88]	; 0x58
   1869c:	cmp	r8, r1
   186a0:	movcc	r1, #92	; 0x5c
   186a4:	strbcc	r1, [r5, r8]
   186a8:	add	r8, r8, #1
   186ac:	mov	r1, #0
   186b0:	str	r1, [fp, #-52]	; 0xffffffcc
   186b4:	ldr	r1, [sp, #44]	; 0x2c
   186b8:	add	r3, r7, #1
   186bc:	and	sl, r2, #1
   186c0:	cmp	r1, r3
   186c4:	bls	186e8 <lchmod@@Base+0x1790>
   186c8:	cmp	sl, #0
   186cc:	mvn	r5, r4
   186d0:	movwne	sl, #1
   186d4:	orr	r5, r5, sl
   186d8:	tst	r5, #1
   186dc:	beq	18638 <lchmod@@Base+0x16e0>
   186e0:	ldr	r5, [fp, #-84]	; 0xffffffac
   186e4:	b	18668 <lchmod@@Base+0x1710>
   186e8:	str	r4, [fp, #-56]	; 0xffffffc8
   186ec:	ldr	r4, [sp, #88]	; 0x58
   186f0:	cmp	sl, #0
   186f4:	movwne	sl, #1
   186f8:	cmp	sl, #0
   186fc:	beq	18258 <lchmod@@Base+0x1300>
   18700:	b	1828c <lchmod@@Base+0x1334>
   18704:	mov	r9, #0
   18708:	b	18748 <lchmod@@Base+0x17f0>
   1870c:	ldr	r0, [sp, #24]
   18710:	mov	r9, #0
   18714:	cmp	lr, r0
   18718:	bls	18748 <lchmod@@Base+0x17f0>
   1871c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   18720:	ldr	r2, [sp, #44]	; 0x2c
   18724:	add	r0, ip, r7
   18728:	ldrb	r1, [r0, r2]
   1872c:	cmp	r1, #0
   18730:	beq	18210 <lchmod@@Base+0x12b8>
   18734:	add	r2, r2, #1
   18738:	add	r1, r7, r2
   1873c:	cmp	r1, lr
   18740:	bcc	18728 <lchmod@@Base+0x17d0>
   18744:	b	18210 <lchmod@@Base+0x12b8>
   18748:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1874c:	ldr	r2, [sp, #44]	; 0x2c
   18750:	b	18210 <lchmod@@Base+0x12b8>
   18754:	mov	lr, r7
   18758:	b	18760 <lchmod@@Base+0x1808>
   1875c:	mvn	lr, #0
   18760:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18764:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18768:	eor	r0, r1, #2
   1876c:	orr	r0, r0, r8
   18770:	clz	r0, r0
   18774:	lsr	r0, r0, #5
   18778:	tst	r2, r0
   1877c:	bne	18820 <lchmod@@Base+0x18c8>
   18780:	subs	r0, r1, #2
   18784:	movwne	r0, #1
   18788:	orr	r0, r2, r0
   1878c:	tst	r0, #1
   18790:	ldreq	r0, [sp, #60]	; 0x3c
   18794:	eoreq	r0, r0, #1
   18798:	tsteq	r0, #1
   1879c:	bne	188b4 <lchmod@@Base+0x195c>
   187a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   187a4:	mov	sl, lr
   187a8:	tst	r0, #1
   187ac:	bne	18880 <lchmod@@Base+0x1928>
   187b0:	ldr	r6, [sp, #56]	; 0x38
   187b4:	mov	r9, #0
   187b8:	cmp	r6, #0
   187bc:	beq	188ac <lchmod@@Base+0x1954>
   187c0:	ldr	r0, [sp, #84]	; 0x54
   187c4:	mov	r1, #0
   187c8:	mov	r7, #2
   187cc:	cmp	r4, #0
   187d0:	str	r1, [fp, #-48]	; 0xffffffd0
   187d4:	mov	r1, #0
   187d8:	str	r1, [fp, #-76]	; 0xffffffb4
   187dc:	beq	1797c <lchmod@@Base+0xa24>
   187e0:	b	188b4 <lchmod@@Base+0x195c>
   187e4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   187e8:	ldr	r1, [fp, #12]
   187ec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   187f0:	mov	lr, r4
   187f4:	mov	r4, r6
   187f8:	b	18840 <lchmod@@Base+0x18e8>
   187fc:	tst	ip, #1
   18800:	ldr	r5, [fp, #-84]	; 0xffffffac
   18804:	ldr	ip, [fp, #-80]	; 0xffffffb0
   18808:	ldr	r1, [fp, #12]
   1880c:	mov	r0, #2
   18810:	movwne	r0, #4
   18814:	mov	r2, r0
   18818:	b	18840 <lchmod@@Base+0x18e8>
   1881c:	ldr	r4, [sp, #88]	; 0x58
   18820:	ldr	r1, [sp, #84]	; 0x54
   18824:	mov	r0, #2
   18828:	tst	r1, #1
   1882c:	movwne	r0, #4
   18830:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18834:	ldr	r1, [fp, #12]
   18838:	cmp	r2, #2
   1883c:	moveq	r2, r0
   18840:	mov	r0, #0
   18844:	bic	r1, r1, #2
   18848:	str	r2, [sp]
   1884c:	mov	r2, ip
   18850:	mov	r3, lr
   18854:	str	r0, [sp, #8]
   18858:	ldr	r0, [sp, #76]	; 0x4c
   1885c:	str	r1, [sp, #4]
   18860:	mov	r1, r4
   18864:	str	r0, [sp, #12]
   18868:	ldr	r0, [sp, #80]	; 0x50
   1886c:	str	r0, [sp, #16]
   18870:	mov	r0, r5
   18874:	bl	178ec <lchmod@@Base+0x994>
   18878:	mov	r8, r0
   1887c:	b	18900 <lchmod@@Base+0x19a8>
   18880:	mov	r0, #5
   18884:	ldr	r1, [sp, #56]	; 0x38
   18888:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1888c:	mov	r3, sl
   18890:	str	r0, [sp]
   18894:	ldr	r0, [fp, #12]
   18898:	str	r0, [sp, #4]
   1889c:	ldr	r0, [fp, #16]
   188a0:	str	r0, [sp, #8]
   188a4:	ldr	r0, [sp, #76]	; 0x4c
   188a8:	b	18864 <lchmod@@Base+0x190c>
   188ac:	mov	r0, #0
   188b0:	str	r0, [fp, #-76]	; 0xffffffb4
   188b4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   188b8:	cmp	r1, #0
   188bc:	beq	188f4 <lchmod@@Base+0x199c>
   188c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   188c4:	tst	r0, #1
   188c8:	bne	188f4 <lchmod@@Base+0x199c>
   188cc:	ldrb	r0, [r1]
   188d0:	cmp	r0, #0
   188d4:	beq	188f4 <lchmod@@Base+0x199c>
   188d8:	add	r1, r1, #1
   188dc:	cmp	r8, r4
   188e0:	strbcc	r0, [r5, r8]
   188e4:	add	r8, r8, #1
   188e8:	ldrb	r0, [r1], #1
   188ec:	cmp	r0, #0
   188f0:	bne	188dc <lchmod@@Base+0x1984>
   188f4:	cmp	r8, r4
   188f8:	movcc	r0, #0
   188fc:	strbcc	r0, [r5, r8]
   18900:	mov	r0, r8
   18904:	sub	sp, fp, #28
   18908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1890c:	mov	r0, #4
   18910:	b	18830 <lchmod@@Base+0x18d8>
   18914:	bl	11b60 <abort@plt>
   18918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1891c:	add	fp, sp, #28
   18920:	sub	sp, sp, #28
   18924:	movw	r5, #53760	; 0xd200
   18928:	cmp	r2, #0
   1892c:	mov	r4, r1
   18930:	mov	r7, r0
   18934:	str	r0, [sp, #20]
   18938:	movt	r5, #2
   1893c:	movne	r5, r2
   18940:	bl	11a04 <__errno_location@plt>
   18944:	mov	sl, r0
   18948:	ldr	r2, [r5, #40]	; 0x28
   1894c:	ldr	r3, [r5, #44]	; 0x2c
   18950:	ldm	r5, {r0, r1}
   18954:	orr	r8, r1, #1
   18958:	add	r9, r5, #8
   1895c:	mov	r1, #0
   18960:	ldr	r6, [sl]
   18964:	stm	sp, {r0, r8, r9}
   18968:	mov	r0, #0
   1896c:	str	r2, [sp, #12]
   18970:	str	r3, [sp, #16]
   18974:	mov	r2, r7
   18978:	mov	r3, r4
   1897c:	str	r6, [sp, #24]
   18980:	mov	r6, r4
   18984:	bl	178ec <lchmod@@Base+0x994>
   18988:	add	r7, r0, #1
   1898c:	mov	r0, r7
   18990:	bl	19e60 <lchmod@@Base+0x2f08>
   18994:	mov	r4, r0
   18998:	ldr	r0, [r5]
   1899c:	ldr	r2, [r5, #44]	; 0x2c
   189a0:	ldr	r1, [r5, #40]	; 0x28
   189a4:	mov	r3, r6
   189a8:	stm	sp, {r0, r8, r9}
   189ac:	str	r2, [sp, #16]
   189b0:	ldr	r2, [sp, #20]
   189b4:	str	r1, [sp, #12]
   189b8:	mov	r0, r4
   189bc:	mov	r1, r7
   189c0:	bl	178ec <lchmod@@Base+0x994>
   189c4:	ldr	r0, [sp, #24]
   189c8:	str	r0, [sl]
   189cc:	mov	r0, r4
   189d0:	sub	sp, fp, #28
   189d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189dc:	add	fp, sp, #28
   189e0:	sub	sp, sp, #36	; 0x24
   189e4:	movw	r8, #53760	; 0xd200
   189e8:	cmp	r3, #0
   189ec:	mov	r4, r2
   189f0:	str	r2, [sp, #24]
   189f4:	mov	r5, r1
   189f8:	mov	r6, r0
   189fc:	str	r0, [sp, #20]
   18a00:	movt	r8, #2
   18a04:	movne	r8, r3
   18a08:	bl	11a04 <__errno_location@plt>
   18a0c:	str	r0, [sp, #28]
   18a10:	ldr	r1, [r8, #40]	; 0x28
   18a14:	ldr	r2, [r8, #44]	; 0x2c
   18a18:	ldr	r7, [r0]
   18a1c:	cmp	r4, #0
   18a20:	add	sl, r8, #8
   18a24:	mov	r0, #0
   18a28:	ldm	r8, {r3, r9}
   18a2c:	orreq	r9, r9, #1
   18a30:	stm	sp, {r3, r9, sl}
   18a34:	str	r1, [sp, #12]
   18a38:	str	r2, [sp, #16]
   18a3c:	mov	r1, #0
   18a40:	mov	r2, r6
   18a44:	mov	r3, r5
   18a48:	str	r7, [sp, #32]
   18a4c:	mov	r7, r5
   18a50:	bl	178ec <lchmod@@Base+0x994>
   18a54:	add	r4, r0, #1
   18a58:	mov	r5, r0
   18a5c:	mov	r0, r4
   18a60:	bl	19e60 <lchmod@@Base+0x2f08>
   18a64:	mov	r6, r0
   18a68:	ldr	r0, [r8]
   18a6c:	ldr	r2, [r8, #44]	; 0x2c
   18a70:	ldr	r1, [r8, #40]	; 0x28
   18a74:	mov	r3, r7
   18a78:	stm	sp, {r0, r9, sl}
   18a7c:	str	r2, [sp, #16]
   18a80:	ldr	r2, [sp, #20]
   18a84:	str	r1, [sp, #12]
   18a88:	mov	r0, r6
   18a8c:	mov	r1, r4
   18a90:	bl	178ec <lchmod@@Base+0x994>
   18a94:	ldr	r0, [sp, #24]
   18a98:	ldr	r1, [sp, #32]
   18a9c:	ldr	r2, [sp, #28]
   18aa0:	cmp	r0, #0
   18aa4:	str	r1, [r2]
   18aa8:	strne	r5, [r0]
   18aac:	mov	r0, r6
   18ab0:	sub	sp, fp, #28
   18ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ab8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18abc:	add	fp, sp, #24
   18ac0:	movw	r5, #53652	; 0xd194
   18ac4:	movw	r8, #53648	; 0xd190
   18ac8:	movt	r5, #2
   18acc:	movt	r8, #2
   18ad0:	ldr	r0, [r5]
   18ad4:	ldr	r4, [r8]
   18ad8:	cmp	r0, #2
   18adc:	blt	18b08 <lchmod@@Base+0x1bb0>
   18ae0:	add	r7, r4, #12
   18ae4:	mov	r6, #0
   18ae8:	ldr	r0, [r7, r6, lsl #3]
   18aec:	bl	136b8 <__assert_fail@plt+0x1af8>
   18af0:	ldr	r1, [r5]
   18af4:	add	r2, r6, #2
   18af8:	add	r0, r6, #1
   18afc:	mov	r6, r0
   18b00:	cmp	r2, r1
   18b04:	blt	18ae8 <lchmod@@Base+0x1b90>
   18b08:	ldr	r0, [r4, #4]
   18b0c:	movw	r9, #53808	; 0xd230
   18b10:	movw	r7, #53656	; 0xd198
   18b14:	movt	r9, #2
   18b18:	movt	r7, #2
   18b1c:	cmp	r0, r9
   18b20:	beq	18b30 <lchmod@@Base+0x1bd8>
   18b24:	bl	136b8 <__assert_fail@plt+0x1af8>
   18b28:	mov	r0, #256	; 0x100
   18b2c:	stm	r7, {r0, r9}
   18b30:	cmp	r4, r7
   18b34:	beq	18b44 <lchmod@@Base+0x1bec>
   18b38:	mov	r0, r4
   18b3c:	bl	136b8 <__assert_fail@plt+0x1af8>
   18b40:	str	r7, [r8]
   18b44:	mov	r0, #1
   18b48:	str	r0, [r5]
   18b4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18b50:	movw	r3, #53760	; 0xd200
   18b54:	mvn	r2, #0
   18b58:	movt	r3, #2
   18b5c:	b	18b60 <lchmod@@Base+0x1c08>
   18b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b64:	add	fp, sp, #28
   18b68:	sub	sp, sp, #44	; 0x2c
   18b6c:	mov	r7, r3
   18b70:	str	r2, [sp, #36]	; 0x24
   18b74:	str	r1, [sp, #32]
   18b78:	mov	r5, r0
   18b7c:	bl	11a04 <__errno_location@plt>
   18b80:	cmp	r5, #0
   18b84:	bmi	18cf4 <lchmod@@Base+0x1d9c>
   18b88:	cmn	r5, #-2147483647	; 0x80000001
   18b8c:	beq	18cf4 <lchmod@@Base+0x1d9c>
   18b90:	movw	r8, #53652	; 0xd194
   18b94:	movw	r4, #53648	; 0xd190
   18b98:	str	r0, [sp, #28]
   18b9c:	ldr	r0, [r0]
   18ba0:	movt	r8, #2
   18ba4:	movt	r4, #2
   18ba8:	ldr	r1, [r8]
   18bac:	ldr	r6, [r4]
   18bb0:	str	r0, [sp, #24]
   18bb4:	cmp	r1, r5
   18bb8:	ble	18bc4 <lchmod@@Base+0x1c6c>
   18bbc:	mov	sl, r6
   18bc0:	b	18c30 <lchmod@@Base+0x1cd8>
   18bc4:	movw	r9, #53656	; 0xd198
   18bc8:	mov	r0, #8
   18bcc:	str	r1, [fp, #-32]	; 0xffffffe0
   18bd0:	sub	r1, r5, r1
   18bd4:	mvn	r3, #-2147483648	; 0x80000000
   18bd8:	movt	r9, #2
   18bdc:	str	r0, [sp]
   18be0:	add	r2, r1, #1
   18be4:	sub	r1, fp, #32
   18be8:	subs	r0, r6, r9
   18bec:	movne	r0, r6
   18bf0:	bl	1a060 <lchmod@@Base+0x3108>
   18bf4:	mov	sl, r0
   18bf8:	cmp	r6, r9
   18bfc:	str	r0, [r4]
   18c00:	bne	18c0c <lchmod@@Base+0x1cb4>
   18c04:	ldrd	r0, [r9]
   18c08:	stm	sl, {r0, r1}
   18c0c:	ldr	r1, [r8]
   18c10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18c14:	add	r0, sl, r1, lsl #3
   18c18:	sub	r1, r2, r1
   18c1c:	lsl	r2, r1, #3
   18c20:	mov	r1, #0
   18c24:	bl	11a28 <memset@plt>
   18c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c2c:	str	r0, [r8]
   18c30:	mov	r9, sl
   18c34:	ldm	r7, {r0, r1}
   18c38:	orr	r8, r1, #1
   18c3c:	add	r1, r7, #8
   18c40:	ldr	r2, [r7, #40]	; 0x28
   18c44:	ldr	r3, [r7, #44]	; 0x2c
   18c48:	ldr	r6, [r9, r5, lsl #3]!
   18c4c:	str	r1, [sp, #20]
   18c50:	ldr	r4, [r9, #4]!
   18c54:	stm	sp, {r0, r8}
   18c58:	add	r0, sp, #8
   18c5c:	stm	r0, {r1, r2, r3}
   18c60:	ldr	r2, [sp, #32]
   18c64:	ldr	r3, [sp, #36]	; 0x24
   18c68:	mov	r1, r6
   18c6c:	mov	r0, r4
   18c70:	bl	178ec <lchmod@@Base+0x994>
   18c74:	cmp	r6, r0
   18c78:	bhi	18cdc <lchmod@@Base+0x1d84>
   18c7c:	add	r6, r0, #1
   18c80:	movw	r0, #53808	; 0xd230
   18c84:	movt	r0, #2
   18c88:	str	r6, [sl, r5, lsl #3]
   18c8c:	cmp	r4, r0
   18c90:	beq	18c9c <lchmod@@Base+0x1d44>
   18c94:	mov	r0, r4
   18c98:	bl	136b8 <__assert_fail@plt+0x1af8>
   18c9c:	mov	r0, r6
   18ca0:	bl	19e60 <lchmod@@Base+0x2f08>
   18ca4:	str	r0, [r9]
   18ca8:	mov	r4, r0
   18cac:	add	r3, sp, #8
   18cb0:	ldr	r0, [r7]
   18cb4:	ldr	r1, [r7, #40]	; 0x28
   18cb8:	ldr	r2, [r7, #44]	; 0x2c
   18cbc:	stm	sp, {r0, r8}
   18cc0:	ldr	r0, [sp, #20]
   18cc4:	stm	r3, {r0, r1, r2}
   18cc8:	ldr	r2, [sp, #32]
   18ccc:	ldr	r3, [sp, #36]	; 0x24
   18cd0:	mov	r0, r4
   18cd4:	mov	r1, r6
   18cd8:	bl	178ec <lchmod@@Base+0x994>
   18cdc:	ldr	r0, [sp, #28]
   18ce0:	ldr	r1, [sp, #24]
   18ce4:	str	r1, [r0]
   18ce8:	mov	r0, r4
   18cec:	sub	sp, fp, #28
   18cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18cf4:	bl	11b60 <abort@plt>
   18cf8:	movw	r3, #53760	; 0xd200
   18cfc:	movt	r3, #2
   18d00:	b	18b60 <lchmod@@Base+0x1c08>
   18d04:	movw	r3, #53760	; 0xd200
   18d08:	mov	r1, r0
   18d0c:	mov	r0, #0
   18d10:	mvn	r2, #0
   18d14:	movt	r3, #2
   18d18:	b	18b60 <lchmod@@Base+0x1c08>
   18d1c:	movw	r3, #53760	; 0xd200
   18d20:	mov	r2, r1
   18d24:	mov	r1, r0
   18d28:	mov	r0, #0
   18d2c:	movt	r3, #2
   18d30:	b	18b60 <lchmod@@Base+0x1c08>
   18d34:	push	{fp, lr}
   18d38:	mov	fp, sp
   18d3c:	sub	sp, sp, #48	; 0x30
   18d40:	vmov.i32	q8, #0	; 0x00000000
   18d44:	mov	ip, #32
   18d48:	mov	r3, sp
   18d4c:	mov	lr, r2
   18d50:	cmp	r1, #10
   18d54:	add	r2, r3, #16
   18d58:	vst1.64	{d16-d17}, [r3], ip
   18d5c:	vst1.64	{d16-d17}, [r2]
   18d60:	vst1.64	{d16-d17}, [r3]
   18d64:	beq	18d84 <lchmod@@Base+0x1e2c>
   18d68:	str	r1, [sp]
   18d6c:	mov	r3, sp
   18d70:	mov	r1, lr
   18d74:	mvn	r2, #0
   18d78:	bl	18b60 <lchmod@@Base+0x1c08>
   18d7c:	mov	sp, fp
   18d80:	pop	{fp, pc}
   18d84:	bl	11b60 <abort@plt>
   18d88:	push	{r4, sl, fp, lr}
   18d8c:	add	fp, sp, #8
   18d90:	sub	sp, sp, #48	; 0x30
   18d94:	vmov.i32	q8, #0	; 0x00000000
   18d98:	mov	ip, r3
   18d9c:	mov	r3, sp
   18da0:	mov	lr, #32
   18da4:	cmp	r1, #10
   18da8:	add	r4, r3, #16
   18dac:	vst1.64	{d16-d17}, [r3], lr
   18db0:	vst1.64	{d16-d17}, [r4]
   18db4:	vst1.64	{d16-d17}, [r3]
   18db8:	beq	18dd8 <lchmod@@Base+0x1e80>
   18dbc:	str	r1, [sp]
   18dc0:	mov	r1, r2
   18dc4:	mov	r3, sp
   18dc8:	mov	r2, ip
   18dcc:	bl	18b60 <lchmod@@Base+0x1c08>
   18dd0:	sub	sp, fp, #8
   18dd4:	pop	{r4, sl, fp, pc}
   18dd8:	bl	11b60 <abort@plt>
   18ddc:	push	{fp, lr}
   18de0:	mov	fp, sp
   18de4:	sub	sp, sp, #48	; 0x30
   18de8:	vmov.i32	q8, #0	; 0x00000000
   18dec:	mov	r3, sp
   18df0:	mov	ip, #32
   18df4:	cmp	r0, #10
   18df8:	add	r2, r3, #16
   18dfc:	vst1.64	{d16-d17}, [r3], ip
   18e00:	vst1.64	{d16-d17}, [r2]
   18e04:	vst1.64	{d16-d17}, [r3]
   18e08:	beq	18e28 <lchmod@@Base+0x1ed0>
   18e0c:	str	r0, [sp]
   18e10:	mov	r3, sp
   18e14:	mov	r0, #0
   18e18:	mvn	r2, #0
   18e1c:	bl	18b60 <lchmod@@Base+0x1c08>
   18e20:	mov	sp, fp
   18e24:	pop	{fp, pc}
   18e28:	bl	11b60 <abort@plt>
   18e2c:	push	{fp, lr}
   18e30:	mov	fp, sp
   18e34:	sub	sp, sp, #48	; 0x30
   18e38:	vmov.i32	q8, #0	; 0x00000000
   18e3c:	mov	r3, sp
   18e40:	mov	ip, #32
   18e44:	cmp	r0, #10
   18e48:	add	lr, r3, #16
   18e4c:	vst1.64	{d16-d17}, [r3], ip
   18e50:	vst1.64	{d16-d17}, [lr]
   18e54:	vst1.64	{d16-d17}, [r3]
   18e58:	beq	18e74 <lchmod@@Base+0x1f1c>
   18e5c:	str	r0, [sp]
   18e60:	mov	r3, sp
   18e64:	mov	r0, #0
   18e68:	bl	18b60 <lchmod@@Base+0x1c08>
   18e6c:	mov	sp, fp
   18e70:	pop	{fp, pc}
   18e74:	bl	11b60 <abort@plt>
   18e78:	push	{r4, sl, fp, lr}
   18e7c:	add	fp, sp, #8
   18e80:	sub	sp, sp, #48	; 0x30
   18e84:	mov	lr, r0
   18e88:	movw	r0, #53760	; 0xd200
   18e8c:	mov	ip, r1
   18e90:	mov	r1, #32
   18e94:	mov	r4, #1
   18e98:	movt	r0, #2
   18e9c:	add	r3, r0, #16
   18ea0:	vld1.64	{d16-d17}, [r0], r1
   18ea4:	vld1.64	{d20-d21}, [r0]
   18ea8:	vld1.64	{d18-d19}, [r3]
   18eac:	mov	r3, sp
   18eb0:	add	r0, r3, #32
   18eb4:	add	r1, r3, #16
   18eb8:	vst1.64	{d20-d21}, [r0]
   18ebc:	mov	r0, #28
   18ec0:	vst1.64	{d18-d19}, [r1]
   18ec4:	mov	r1, r3
   18ec8:	and	r0, r0, r2, lsr #3
   18ecc:	and	r2, r2, #31
   18ed0:	vst1.64	{d16-d17}, [r1], r0
   18ed4:	ldr	r0, [r1, #8]
   18ed8:	bic	r4, r4, r0, lsr r2
   18edc:	eor	r0, r0, r4, lsl r2
   18ee0:	mov	r2, ip
   18ee4:	str	r0, [r1, #8]
   18ee8:	mov	r0, #0
   18eec:	mov	r1, lr
   18ef0:	bl	18b60 <lchmod@@Base+0x1c08>
   18ef4:	sub	sp, fp, #8
   18ef8:	pop	{r4, sl, fp, pc}
   18efc:	push	{fp, lr}
   18f00:	mov	fp, sp
   18f04:	sub	sp, sp, #48	; 0x30
   18f08:	mov	ip, r0
   18f0c:	movw	r0, #53760	; 0xd200
   18f10:	mov	r2, #32
   18f14:	movt	r0, #2
   18f18:	add	r3, r0, #16
   18f1c:	vld1.64	{d16-d17}, [r0], r2
   18f20:	vld1.64	{d20-d21}, [r0]
   18f24:	vld1.64	{d18-d19}, [r3]
   18f28:	mov	r3, sp
   18f2c:	add	r0, r3, #32
   18f30:	add	r2, r3, #16
   18f34:	vst1.64	{d20-d21}, [r0]
   18f38:	mov	r0, #28
   18f3c:	vst1.64	{d18-d19}, [r2]
   18f40:	mov	r2, r3
   18f44:	and	r0, r0, r1, lsr #3
   18f48:	and	r1, r1, #31
   18f4c:	vst1.64	{d16-d17}, [r2], r0
   18f50:	mov	r0, #1
   18f54:	ldr	lr, [r2, #8]
   18f58:	bic	r0, r0, lr, lsr r1
   18f5c:	eor	r0, lr, r0, lsl r1
   18f60:	mov	r1, ip
   18f64:	str	r0, [r2, #8]
   18f68:	mov	r0, #0
   18f6c:	mvn	r2, #0
   18f70:	bl	18b60 <lchmod@@Base+0x1c08>
   18f74:	mov	sp, fp
   18f78:	pop	{fp, pc}
   18f7c:	push	{fp, lr}
   18f80:	mov	fp, sp
   18f84:	sub	sp, sp, #48	; 0x30
   18f88:	mov	r1, r0
   18f8c:	movw	r0, #53760	; 0xd200
   18f90:	mov	r3, #32
   18f94:	movt	r0, #2
   18f98:	add	r2, r0, #16
   18f9c:	vld1.64	{d16-d17}, [r0], r3
   18fa0:	mov	r3, sp
   18fa4:	vld1.64	{d18-d19}, [r2]
   18fa8:	vld1.64	{d20-d21}, [r0]
   18fac:	add	r2, r3, #16
   18fb0:	add	r0, r3, #32
   18fb4:	vst1.64	{d18-d19}, [r2]
   18fb8:	vst1.64	{d20-d21}, [r0]
   18fbc:	mov	r0, #12
   18fc0:	mov	r2, r3
   18fc4:	vst1.64	{d16-d17}, [r2], r0
   18fc8:	ldr	r0, [r2]
   18fcc:	orr	r0, r0, #67108864	; 0x4000000
   18fd0:	str	r0, [r2]
   18fd4:	mov	r0, #0
   18fd8:	mvn	r2, #0
   18fdc:	bl	18b60 <lchmod@@Base+0x1c08>
   18fe0:	mov	sp, fp
   18fe4:	pop	{fp, pc}
   18fe8:	push	{fp, lr}
   18fec:	mov	fp, sp
   18ff0:	sub	sp, sp, #48	; 0x30
   18ff4:	mov	ip, r1
   18ff8:	mov	r1, r0
   18ffc:	movw	r0, #53760	; 0xd200
   19000:	mov	r2, #32
   19004:	movt	r0, #2
   19008:	add	r3, r0, #16
   1900c:	vld1.64	{d16-d17}, [r0], r2
   19010:	vld1.64	{d18-d19}, [r3]
   19014:	vld1.64	{d20-d21}, [r0]
   19018:	mov	r3, sp
   1901c:	add	r2, r3, #16
   19020:	add	r0, r3, #32
   19024:	vst1.64	{d18-d19}, [r2]
   19028:	vst1.64	{d20-d21}, [r0]
   1902c:	mov	r0, #12
   19030:	mov	r2, r3
   19034:	vst1.64	{d16-d17}, [r2], r0
   19038:	ldr	r0, [r2]
   1903c:	orr	r0, r0, #67108864	; 0x4000000
   19040:	str	r0, [r2]
   19044:	mov	r0, #0
   19048:	mov	r2, ip
   1904c:	bl	18b60 <lchmod@@Base+0x1c08>
   19050:	mov	sp, fp
   19054:	pop	{fp, pc}
   19058:	push	{r4, sl, fp, lr}
   1905c:	add	fp, sp, #8
   19060:	sub	sp, sp, #96	; 0x60
   19064:	vmov.i32	q8, #0	; 0x00000000
   19068:	mov	ip, r2
   1906c:	mov	r2, sp
   19070:	mov	r4, #28
   19074:	cmp	r1, #10
   19078:	mov	r3, r2
   1907c:	add	lr, r2, #16
   19080:	vst1.64	{d16-d17}, [r3], r4
   19084:	vst1.64	{d16-d17}, [lr]
   19088:	vst1.32	{d16-d17}, [r3]
   1908c:	beq	190dc <lchmod@@Base+0x2184>
   19090:	vld1.64	{d16-d17}, [r2], r4
   19094:	vld1.64	{d18-d19}, [lr]
   19098:	add	r3, sp, #48	; 0x30
   1909c:	vld1.32	{d20-d21}, [r2]
   190a0:	add	r2, r3, #20
   190a4:	add	r4, r3, #4
   190a8:	vst1.32	{d18-d19}, [r2]
   190ac:	add	r2, r3, #32
   190b0:	vst1.32	{d16-d17}, [r4]
   190b4:	vst1.32	{d20-d21}, [r2]
   190b8:	str	r1, [sp, #48]	; 0x30
   190bc:	mvn	r2, #0
   190c0:	ldr	r1, [sp, #60]	; 0x3c
   190c4:	orr	r1, r1, #67108864	; 0x4000000
   190c8:	str	r1, [sp, #60]	; 0x3c
   190cc:	mov	r1, ip
   190d0:	bl	18b60 <lchmod@@Base+0x1c08>
   190d4:	sub	sp, fp, #8
   190d8:	pop	{r4, sl, fp, pc}
   190dc:	bl	11b60 <abort@plt>
   190e0:	push	{r4, r5, r6, sl, fp, lr}
   190e4:	add	fp, sp, #16
   190e8:	sub	sp, sp, #48	; 0x30
   190ec:	mov	ip, r3
   190f0:	movw	r3, #53760	; 0xd200
   190f4:	mov	r6, #32
   190f8:	cmp	r1, #0
   190fc:	mov	r4, sp
   19100:	movt	r3, #2
   19104:	cmpne	r2, #0
   19108:	add	r5, r4, #16
   1910c:	add	lr, r3, #16
   19110:	vld1.64	{d16-d17}, [r3], r6
   19114:	vld1.64	{d18-d19}, [lr]
   19118:	vld1.64	{d20-d21}, [r3]
   1911c:	mov	r3, #10
   19120:	vst1.64	{d16-d17}, [r4], r6
   19124:	vst1.64	{d18-d19}, [r5]
   19128:	vst1.64	{d20-d21}, [r4]
   1912c:	str	r3, [sp]
   19130:	bne	19138 <lchmod@@Base+0x21e0>
   19134:	bl	11b60 <abort@plt>
   19138:	str	r2, [sp, #44]	; 0x2c
   1913c:	str	r1, [sp, #40]	; 0x28
   19140:	mov	r3, sp
   19144:	mov	r1, ip
   19148:	mvn	r2, #0
   1914c:	bl	18b60 <lchmod@@Base+0x1c08>
   19150:	sub	sp, fp, #16
   19154:	pop	{r4, r5, r6, sl, fp, pc}
   19158:	push	{r4, r5, r6, sl, fp, lr}
   1915c:	add	fp, sp, #16
   19160:	sub	sp, sp, #48	; 0x30
   19164:	mov	lr, r3
   19168:	movw	r3, #53760	; 0xd200
   1916c:	mov	r6, #32
   19170:	cmp	r1, #0
   19174:	mov	r4, sp
   19178:	movt	r3, #2
   1917c:	cmpne	r2, #0
   19180:	add	r5, r4, #16
   19184:	add	ip, r3, #16
   19188:	vld1.64	{d16-d17}, [r3], r6
   1918c:	vld1.64	{d18-d19}, [ip]
   19190:	vld1.64	{d20-d21}, [r3]
   19194:	mov	r3, #10
   19198:	vst1.64	{d16-d17}, [r4], r6
   1919c:	vst1.64	{d18-d19}, [r5]
   191a0:	vst1.64	{d20-d21}, [r4]
   191a4:	str	r3, [sp]
   191a8:	bne	191b0 <lchmod@@Base+0x2258>
   191ac:	bl	11b60 <abort@plt>
   191b0:	ldr	ip, [fp, #8]
   191b4:	str	r2, [sp, #44]	; 0x2c
   191b8:	str	r1, [sp, #40]	; 0x28
   191bc:	mov	r3, sp
   191c0:	mov	r1, lr
   191c4:	mov	r2, ip
   191c8:	bl	18b60 <lchmod@@Base+0x1c08>
   191cc:	sub	sp, fp, #16
   191d0:	pop	{r4, r5, r6, sl, fp, pc}
   191d4:	push	{r4, sl, fp, lr}
   191d8:	add	fp, sp, #8
   191dc:	sub	sp, sp, #48	; 0x30
   191e0:	movw	r3, #53760	; 0xd200
   191e4:	mov	lr, #32
   191e8:	mov	ip, r2
   191ec:	cmp	r0, #0
   191f0:	movt	r3, #2
   191f4:	cmpne	r1, #0
   191f8:	add	r2, r3, #16
   191fc:	vld1.64	{d16-d17}, [r3], lr
   19200:	vld1.64	{d20-d21}, [r3]
   19204:	vld1.64	{d18-d19}, [r2]
   19208:	mov	r2, sp
   1920c:	add	r4, r2, #16
   19210:	vst1.64	{d16-d17}, [r2], lr
   19214:	vst1.64	{d20-d21}, [r2]
   19218:	mov	r2, #10
   1921c:	vst1.64	{d18-d19}, [r4]
   19220:	str	r2, [sp]
   19224:	bne	1922c <lchmod@@Base+0x22d4>
   19228:	bl	11b60 <abort@plt>
   1922c:	str	r1, [sp, #44]	; 0x2c
   19230:	str	r0, [sp, #40]	; 0x28
   19234:	mov	r3, sp
   19238:	mov	r0, #0
   1923c:	mov	r1, ip
   19240:	mvn	r2, #0
   19244:	bl	18b60 <lchmod@@Base+0x1c08>
   19248:	sub	sp, fp, #8
   1924c:	pop	{r4, sl, fp, pc}
   19250:	push	{r4, r5, fp, lr}
   19254:	add	fp, sp, #8
   19258:	sub	sp, sp, #48	; 0x30
   1925c:	mov	ip, r3
   19260:	movw	r3, #53760	; 0xd200
   19264:	mov	r4, #32
   19268:	mov	lr, r2
   1926c:	cmp	r0, #0
   19270:	movt	r3, #2
   19274:	cmpne	r1, #0
   19278:	add	r2, r3, #16
   1927c:	vld1.64	{d16-d17}, [r3], r4
   19280:	vld1.64	{d20-d21}, [r3]
   19284:	vld1.64	{d18-d19}, [r2]
   19288:	mov	r2, sp
   1928c:	add	r5, r2, #16
   19290:	vst1.64	{d16-d17}, [r2], r4
   19294:	vst1.64	{d20-d21}, [r2]
   19298:	mov	r2, #10
   1929c:	vst1.64	{d18-d19}, [r5]
   192a0:	str	r2, [sp]
   192a4:	bne	192ac <lchmod@@Base+0x2354>
   192a8:	bl	11b60 <abort@plt>
   192ac:	str	r1, [sp, #44]	; 0x2c
   192b0:	str	r0, [sp, #40]	; 0x28
   192b4:	mov	r3, sp
   192b8:	mov	r0, #0
   192bc:	mov	r1, lr
   192c0:	mov	r2, ip
   192c4:	bl	18b60 <lchmod@@Base+0x1c08>
   192c8:	sub	sp, fp, #8
   192cc:	pop	{r4, r5, fp, pc}
   192d0:	movw	r3, #53664	; 0xd1a0
   192d4:	movt	r3, #2
   192d8:	b	18b60 <lchmod@@Base+0x1c08>
   192dc:	movw	r3, #53664	; 0xd1a0
   192e0:	mov	r2, r1
   192e4:	mov	r1, r0
   192e8:	mov	r0, #0
   192ec:	movt	r3, #2
   192f0:	b	18b60 <lchmod@@Base+0x1c08>
   192f4:	movw	r3, #53664	; 0xd1a0
   192f8:	mvn	r2, #0
   192fc:	movt	r3, #2
   19300:	b	18b60 <lchmod@@Base+0x1c08>
   19304:	movw	r3, #53664	; 0xd1a0
   19308:	mov	r1, r0
   1930c:	mov	r0, #0
   19310:	mvn	r2, #0
   19314:	movt	r3, #2
   19318:	b	18b60 <lchmod@@Base+0x1c08>
   1931c:	push	{r4, r5, fp, lr}
   19320:	add	fp, sp, #8
   19324:	mov	r5, r0
   19328:	mov	r4, r1
   1932c:	mov	r0, #0
   19330:	mov	r2, #5
   19334:	mov	r1, r5
   19338:	bl	11860 <dcgettext@plt>
   1933c:	cmp	r0, r5
   19340:	popne	{r4, r5, fp, pc}
   19344:	bl	1b794 <lchmod@@Base+0x483c>
   19348:	ldrb	r1, [r0]
   1934c:	and	r1, r1, #223	; 0xdf
   19350:	cmp	r1, #71	; 0x47
   19354:	beq	193bc <lchmod@@Base+0x2464>
   19358:	cmp	r1, #85	; 0x55
   1935c:	bne	19414 <lchmod@@Base+0x24bc>
   19360:	ldrb	r1, [r0, #1]
   19364:	and	r1, r1, #223	; 0xdf
   19368:	cmp	r1, #84	; 0x54
   1936c:	bne	19414 <lchmod@@Base+0x24bc>
   19370:	ldrb	r1, [r0, #2]
   19374:	and	r1, r1, #223	; 0xdf
   19378:	cmp	r1, #70	; 0x46
   1937c:	bne	19414 <lchmod@@Base+0x24bc>
   19380:	ldrb	r1, [r0, #3]
   19384:	cmp	r1, #45	; 0x2d
   19388:	bne	19414 <lchmod@@Base+0x24bc>
   1938c:	ldrb	r1, [r0, #4]
   19390:	cmp	r1, #56	; 0x38
   19394:	bne	19414 <lchmod@@Base+0x24bc>
   19398:	ldrb	r0, [r0, #5]
   1939c:	cmp	r0, #0
   193a0:	bne	19414 <lchmod@@Base+0x24bc>
   193a4:	ldrb	r1, [r5]
   193a8:	movw	r2, #50595	; 0xc5a3
   193ac:	movw	r0, #50599	; 0xc5a7
   193b0:	movt	r2, #1
   193b4:	movt	r0, #1
   193b8:	b	19444 <lchmod@@Base+0x24ec>
   193bc:	ldrb	r1, [r0, #1]
   193c0:	and	r1, r1, #223	; 0xdf
   193c4:	cmp	r1, #66	; 0x42
   193c8:	bne	19414 <lchmod@@Base+0x24bc>
   193cc:	ldrb	r1, [r0, #2]
   193d0:	cmp	r1, #49	; 0x31
   193d4:	bne	19414 <lchmod@@Base+0x24bc>
   193d8:	ldrb	r1, [r0, #3]
   193dc:	cmp	r1, #56	; 0x38
   193e0:	bne	19414 <lchmod@@Base+0x24bc>
   193e4:	ldrb	r1, [r0, #4]
   193e8:	cmp	r1, #48	; 0x30
   193ec:	bne	19414 <lchmod@@Base+0x24bc>
   193f0:	ldrb	r1, [r0, #5]
   193f4:	cmp	r1, #51	; 0x33
   193f8:	bne	19414 <lchmod@@Base+0x24bc>
   193fc:	ldrb	r1, [r0, #6]
   19400:	cmp	r1, #48	; 0x30
   19404:	bne	19414 <lchmod@@Base+0x24bc>
   19408:	ldrb	r0, [r0, #7]
   1940c:	cmp	r0, #0
   19410:	beq	19430 <lchmod@@Base+0x24d8>
   19414:	movw	r1, #50589	; 0xc59d
   19418:	movw	r0, #50593	; 0xc5a1
   1941c:	cmp	r4, #9
   19420:	movt	r1, #1
   19424:	movt	r0, #1
   19428:	moveq	r0, r1
   1942c:	pop	{r4, r5, fp, pc}
   19430:	ldrb	r1, [r5]
   19434:	movw	r2, #50603	; 0xc5ab
   19438:	movw	r0, #50607	; 0xc5af
   1943c:	movt	r2, #1
   19440:	movt	r0, #1
   19444:	cmp	r1, #96	; 0x60
   19448:	moveq	r0, r2
   1944c:	pop	{r4, r5, fp, pc}
   19450:	push	{r4, r5, r6, sl, fp, lr}
   19454:	add	fp, sp, #16
   19458:	ldr	r4, [r0], #8
   1945c:	mov	r5, r1
   19460:	cmp	r4, r0
   19464:	beq	19488 <lchmod@@Base+0x2530>
   19468:	mov	r0, r4
   1946c:	mov	r1, r5
   19470:	bl	1b150 <lchmod@@Base+0x41f8>
   19474:	cmp	r0, #0
   19478:	mov	r6, r0
   1947c:	moveq	r6, r4
   19480:	mov	r0, r6
   19484:	pop	{r4, r5, r6, sl, fp, pc}
   19488:	mov	r0, r5
   1948c:	bl	1b120 <lchmod@@Base+0x41c8>
   19490:	cmp	r0, #0
   19494:	beq	194b0 <lchmod@@Base+0x2558>
   19498:	mov	r1, r4
   1949c:	mov	r2, r5
   194a0:	mov	r6, r0
   194a4:	bl	11830 <memcpy@plt>
   194a8:	mov	r0, r6
   194ac:	pop	{r4, r5, r6, sl, fp, pc}
   194b0:	mov	r6, #0
   194b4:	mov	r0, r6
   194b8:	pop	{r4, r5, r6, sl, fp, pc}
   194bc:	push	{r4, r5, r6, sl, fp, lr}
   194c0:	add	fp, sp, #16
   194c4:	mov	r4, r0
   194c8:	add	r6, r0, #8
   194cc:	ldrd	r0, [r0]
   194d0:	lsl	r5, r1, #1
   194d4:	cmp	r0, r6
   194d8:	beq	194e4 <lchmod@@Base+0x258c>
   194dc:	bl	136b8 <__assert_fail@plt+0x1af8>
   194e0:	ldr	r1, [r4, #4]
   194e4:	cmp	r5, r1
   194e8:	bcc	1950c <lchmod@@Base+0x25b4>
   194ec:	mov	r0, r5
   194f0:	bl	1b120 <lchmod@@Base+0x41c8>
   194f4:	cmp	r0, #0
   194f8:	strne	r0, [r4]
   194fc:	movne	r0, #1
   19500:	strne	r5, [r4, #4]
   19504:	popne	{r4, r5, r6, sl, fp, pc}
   19508:	b	19518 <lchmod@@Base+0x25c0>
   1950c:	bl	11a04 <__errno_location@plt>
   19510:	mov	r1, #12
   19514:	str	r1, [r0]
   19518:	mov	r0, #0
   1951c:	mov	r5, #1024	; 0x400
   19520:	str	r6, [r4]
   19524:	str	r5, [r4, #4]
   19528:	pop	{r4, r5, r6, sl, fp, pc}
   1952c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19530:	add	fp, sp, #24
   19534:	ldrd	r8, [r0]
   19538:	add	r7, r0, #8
   1953c:	mov	r4, r0
   19540:	lsl	r5, r9, #1
   19544:	cmp	r8, r7
   19548:	beq	19574 <lchmod@@Base+0x261c>
   1954c:	cmp	r5, r9
   19550:	bcc	195ac <lchmod@@Base+0x2654>
   19554:	mov	r0, r8
   19558:	mov	r1, r5
   1955c:	bl	1b150 <lchmod@@Base+0x41f8>
   19560:	mov	r6, r0
   19564:	cmp	r0, #0
   19568:	bne	19594 <lchmod@@Base+0x263c>
   1956c:	ldr	r8, [r4]
   19570:	b	195b8 <lchmod@@Base+0x2660>
   19574:	mov	r0, r5
   19578:	bl	1b120 <lchmod@@Base+0x41c8>
   1957c:	cmp	r0, #0
   19580:	beq	195a4 <lchmod@@Base+0x264c>
   19584:	ldr	r2, [r4, #4]
   19588:	mov	r1, r8
   1958c:	mov	r6, r0
   19590:	bl	11830 <memcpy@plt>
   19594:	mov	r0, #1
   19598:	str	r6, [r4]
   1959c:	str	r5, [r4, #4]
   195a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   195a4:	mov	r0, #0
   195a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   195ac:	bl	11a04 <__errno_location@plt>
   195b0:	mov	r1, #12
   195b4:	str	r1, [r0]
   195b8:	mov	r0, r8
   195bc:	bl	136b8 <__assert_fail@plt+0x1af8>
   195c0:	mov	r0, #0
   195c4:	mov	r5, #1024	; 0x400
   195c8:	str	r7, [r4]
   195cc:	str	r5, [r4, #4]
   195d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   195d4:	push	{r4, r5, fp, lr}
   195d8:	add	fp, sp, #8
   195dc:	mov	r4, r1
   195e0:	bl	119b0 <getfilecon@plt>
   195e4:	cmp	r0, #10
   195e8:	beq	19600 <lchmod@@Base+0x26a8>
   195ec:	cmp	r0, #0
   195f0:	bne	19644 <lchmod@@Base+0x26ec>
   195f4:	bl	11a04 <__errno_location@plt>
   195f8:	mov	r1, #95	; 0x5f
   195fc:	b	1963c <lchmod@@Base+0x26e4>
   19600:	ldr	r5, [r4]
   19604:	movw	r1, #50696	; 0xc608
   19608:	movt	r1, #1
   1960c:	mov	r0, r5
   19610:	bl	117d0 <strcmp@plt>
   19614:	mov	r1, r0
   19618:	mov	r0, #10
   1961c:	cmp	r1, #0
   19620:	popne	{r4, r5, fp, pc}
   19624:	mov	r0, r5
   19628:	bl	11af4 <freecon@plt>
   1962c:	mov	r0, #0
   19630:	str	r0, [r4]
   19634:	bl	11a04 <__errno_location@plt>
   19638:	mov	r1, #61	; 0x3d
   1963c:	str	r1, [r0]
   19640:	mvn	r0, #0
   19644:	pop	{r4, r5, fp, pc}
   19648:	push	{r4, r5, fp, lr}
   1964c:	add	fp, sp, #8
   19650:	mov	r4, r1
   19654:	bl	11938 <lgetfilecon@plt>
   19658:	cmp	r0, #10
   1965c:	beq	19674 <lchmod@@Base+0x271c>
   19660:	cmp	r0, #0
   19664:	bne	196b8 <lchmod@@Base+0x2760>
   19668:	bl	11a04 <__errno_location@plt>
   1966c:	mov	r1, #95	; 0x5f
   19670:	b	196b0 <lchmod@@Base+0x2758>
   19674:	ldr	r5, [r4]
   19678:	movw	r1, #50696	; 0xc608
   1967c:	movt	r1, #1
   19680:	mov	r0, r5
   19684:	bl	117d0 <strcmp@plt>
   19688:	mov	r1, r0
   1968c:	mov	r0, #10
   19690:	cmp	r1, #0
   19694:	popne	{r4, r5, fp, pc}
   19698:	mov	r0, r5
   1969c:	bl	11af4 <freecon@plt>
   196a0:	mov	r0, #0
   196a4:	str	r0, [r4]
   196a8:	bl	11a04 <__errno_location@plt>
   196ac:	mov	r1, #61	; 0x3d
   196b0:	str	r1, [r0]
   196b4:	mvn	r0, #0
   196b8:	pop	{r4, r5, fp, pc}
   196bc:	push	{r4, r5, fp, lr}
   196c0:	add	fp, sp, #8
   196c4:	mov	r4, r1
   196c8:	bl	11884 <fgetfilecon@plt>
   196cc:	cmp	r0, #10
   196d0:	beq	196e8 <lchmod@@Base+0x2790>
   196d4:	cmp	r0, #0
   196d8:	bne	1972c <lchmod@@Base+0x27d4>
   196dc:	bl	11a04 <__errno_location@plt>
   196e0:	mov	r1, #95	; 0x5f
   196e4:	b	19724 <lchmod@@Base+0x27cc>
   196e8:	ldr	r5, [r4]
   196ec:	movw	r1, #50696	; 0xc608
   196f0:	movt	r1, #1
   196f4:	mov	r0, r5
   196f8:	bl	117d0 <strcmp@plt>
   196fc:	mov	r1, r0
   19700:	mov	r0, #10
   19704:	cmp	r1, #0
   19708:	popne	{r4, r5, fp, pc}
   1970c:	mov	r0, r5
   19710:	bl	11af4 <freecon@plt>
   19714:	mov	r0, #0
   19718:	str	r0, [r4]
   1971c:	bl	11a04 <__errno_location@plt>
   19720:	mov	r1, #61	; 0x3d
   19724:	str	r1, [r0]
   19728:	mvn	r0, #0
   1972c:	pop	{r4, r5, fp, pc}
   19730:	push	{r4, r5, r6, r7, fp, lr}
   19734:	add	fp, sp, #16
   19738:	mov	r4, r0
   1973c:	cmp	r0, #2
   19740:	bhi	19770 <lchmod@@Base+0x2818>
   19744:	mov	r0, r4
   19748:	bl	1b86c <lchmod@@Base+0x4914>
   1974c:	mov	r5, r0
   19750:	bl	11a04 <__errno_location@plt>
   19754:	ldr	r7, [r0]
   19758:	mov	r6, r0
   1975c:	mov	r0, r4
   19760:	bl	11b6c <close@plt>
   19764:	mov	r0, r5
   19768:	str	r7, [r6]
   1976c:	pop	{r4, r5, r6, r7, fp, pc}
   19770:	mov	r0, r4
   19774:	pop	{r4, r5, r6, r7, fp, pc}
   19778:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1977c:	add	fp, sp, #24
   19780:	sub	sp, sp, #32
   19784:	ldr	r6, [fp, #12]
   19788:	ldr	r7, [fp, #8]
   1978c:	mov	r4, r2
   19790:	mov	r8, r0
   19794:	cmp	r1, #0
   19798:	beq	197c0 <lchmod@@Base+0x2868>
   1979c:	movw	r2, #50706	; 0xc612
   197a0:	mov	r5, r1
   197a4:	str	r3, [sp, #4]
   197a8:	str	r4, [sp]
   197ac:	mov	r0, r8
   197b0:	mov	r1, #1
   197b4:	movt	r2, #1
   197b8:	mov	r3, r5
   197bc:	b	197d8 <lchmod@@Base+0x2880>
   197c0:	movw	r2, #50718	; 0xc61e
   197c4:	str	r3, [sp]
   197c8:	mov	r0, r8
   197cc:	mov	r1, #1
   197d0:	mov	r3, r4
   197d4:	movt	r2, #1
   197d8:	bl	11a4c <__fprintf_chk@plt>
   197dc:	movw	r1, #50725	; 0xc625
   197e0:	mov	r0, #0
   197e4:	mov	r2, #5
   197e8:	movt	r1, #1
   197ec:	bl	11860 <dcgettext@plt>
   197f0:	movw	r2, #51443	; 0xc8f3
   197f4:	mov	r3, r0
   197f8:	movw	r0, #2022	; 0x7e6
   197fc:	mov	r1, #1
   19800:	movt	r2, #1
   19804:	str	r0, [sp]
   19808:	mov	r0, r8
   1980c:	bl	11a4c <__fprintf_chk@plt>
   19810:	movw	r4, #50050	; 0xc382
   19814:	mov	r1, r8
   19818:	movt	r4, #1
   1981c:	mov	r0, r4
   19820:	bl	117ac <fputs_unlocked@plt>
   19824:	movw	r1, #50729	; 0xc629
   19828:	mov	r0, #0
   1982c:	mov	r2, #5
   19830:	movt	r1, #1
   19834:	bl	11860 <dcgettext@plt>
   19838:	movw	r3, #50900	; 0xc6d4
   1983c:	mov	r2, r0
   19840:	mov	r0, r8
   19844:	mov	r1, #1
   19848:	movt	r3, #1
   1984c:	bl	11a4c <__fprintf_chk@plt>
   19850:	mov	r0, r4
   19854:	mov	r1, r8
   19858:	bl	117ac <fputs_unlocked@plt>
   1985c:	cmp	r6, #9
   19860:	bhi	1989c <lchmod@@Base+0x2944>
   19864:	add	r0, pc, #0
   19868:	ldr	pc, [r0, r6, lsl #2]
   1986c:	muleq	r1, r4, r8
   19870:	andeq	r9, r1, r8, lsr #17
   19874:	ldrdeq	r9, [r1], -r8
   19878:	andeq	r9, r1, r0, lsl #18
   1987c:	andeq	r9, r1, r8, lsr #18
   19880:	andeq	r9, r1, r0, asr r9
   19884:	andeq	r9, r1, r8, ror r9
   19888:			; <UNDEFINED> instruction: 0x000199b0
   1988c:	andeq	r9, r1, r0, asr sl
   19890:	strdeq	r9, [r1], -r8
   19894:	sub	sp, fp, #24
   19898:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1989c:	movw	r1, #51253	; 0xc835
   198a0:	movt	r1, #1
   198a4:	b	19a00 <lchmod@@Base+0x2aa8>
   198a8:	movw	r1, #50934	; 0xc6f6
   198ac:	mov	r0, #0
   198b0:	mov	r2, #5
   198b4:	movt	r1, #1
   198b8:	bl	11860 <dcgettext@plt>
   198bc:	ldr	r3, [r7]
   198c0:	mov	r2, r0
   198c4:	mov	r0, r8
   198c8:	mov	r1, #1
   198cc:	sub	sp, fp, #24
   198d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   198d4:	b	11a4c <__fprintf_chk@plt>
   198d8:	movw	r1, #50950	; 0xc706
   198dc:	mov	r0, #0
   198e0:	mov	r2, #5
   198e4:	movt	r1, #1
   198e8:	bl	11860 <dcgettext@plt>
   198ec:	mov	r2, r0
   198f0:	ldr	r3, [r7]
   198f4:	ldr	r0, [r7, #4]
   198f8:	str	r0, [sp]
   198fc:	b	199ec <lchmod@@Base+0x2a94>
   19900:	movw	r1, #50973	; 0xc71d
   19904:	mov	r0, #0
   19908:	mov	r2, #5
   1990c:	movt	r1, #1
   19910:	bl	11860 <dcgettext@plt>
   19914:	mov	r2, r0
   19918:	ldr	r3, [r7]
   1991c:	ldmib	r7, {r0, r1}
   19920:	stm	sp, {r0, r1}
   19924:	b	199ec <lchmod@@Base+0x2a94>
   19928:	movw	r1, #51001	; 0xc739
   1992c:	mov	r0, #0
   19930:	mov	r2, #5
   19934:	movt	r1, #1
   19938:	bl	11860 <dcgettext@plt>
   1993c:	ldr	r3, [r7]
   19940:	mov	r2, r0
   19944:	ldmib	r7, {r0, r1, r7}
   19948:	stm	sp, {r0, r1, r7}
   1994c:	b	199ec <lchmod@@Base+0x2a94>
   19950:	movw	r1, #51033	; 0xc759
   19954:	mov	r0, #0
   19958:	mov	r2, #5
   1995c:	movt	r1, #1
   19960:	bl	11860 <dcgettext@plt>
   19964:	ldr	r3, [r7]
   19968:	mov	r2, r0
   1996c:	ldmib	r7, {r0, r1, r6, r7}
   19970:	stm	sp, {r0, r1, r6, r7}
   19974:	b	199ec <lchmod@@Base+0x2a94>
   19978:	movw	r1, #51069	; 0xc77d
   1997c:	mov	r0, #0
   19980:	mov	r2, #5
   19984:	movt	r1, #1
   19988:	bl	11860 <dcgettext@plt>
   1998c:	mov	r2, r0
   19990:	ldr	r3, [r7]
   19994:	ldmib	r7, {r0, r1, r6}
   19998:	ldr	r5, [r7, #16]
   1999c:	ldr	r7, [r7, #20]
   199a0:	stm	sp, {r0, r1, r6}
   199a4:	str	r5, [sp, #12]
   199a8:	str	r7, [sp, #16]
   199ac:	b	199ec <lchmod@@Base+0x2a94>
   199b0:	movw	r1, #51109	; 0xc7a5
   199b4:	mov	r0, #0
   199b8:	mov	r2, #5
   199bc:	movt	r1, #1
   199c0:	bl	11860 <dcgettext@plt>
   199c4:	mov	r2, r0
   199c8:	ldr	r3, [r7]
   199cc:	ldmib	r7, {r0, r1, r6}
   199d0:	ldr	r5, [r7, #16]
   199d4:	ldr	r4, [r7, #20]
   199d8:	ldr	r7, [r7, #24]
   199dc:	stm	sp, {r0, r1, r6}
   199e0:	str	r5, [sp, #12]
   199e4:	str	r4, [sp, #16]
   199e8:	str	r7, [sp, #20]
   199ec:	mov	r0, r8
   199f0:	mov	r1, #1
   199f4:	b	19aa0 <lchmod@@Base+0x2b48>
   199f8:	movw	r1, #51201	; 0xc801
   199fc:	movt	r1, #1
   19a00:	mov	r0, #0
   19a04:	mov	r2, #5
   19a08:	bl	11860 <dcgettext@plt>
   19a0c:	mov	ip, r0
   19a10:	ldr	r3, [r7]
   19a14:	ldr	r0, [r7, #4]
   19a18:	ldr	r1, [r7, #8]
   19a1c:	ldr	r6, [r7, #12]
   19a20:	ldr	r5, [r7, #16]
   19a24:	ldr	r4, [r7, #20]
   19a28:	ldr	r2, [r7, #24]
   19a2c:	ldr	lr, [r7, #28]
   19a30:	ldr	r7, [r7, #32]
   19a34:	stm	sp, {r0, r1, r6}
   19a38:	str	r5, [sp, #12]
   19a3c:	str	r4, [sp, #16]
   19a40:	str	r2, [sp, #20]
   19a44:	str	lr, [sp, #24]
   19a48:	str	r7, [sp, #28]
   19a4c:	b	19a94 <lchmod@@Base+0x2b3c>
   19a50:	movw	r1, #51153	; 0xc7d1
   19a54:	mov	r0, #0
   19a58:	mov	r2, #5
   19a5c:	movt	r1, #1
   19a60:	bl	11860 <dcgettext@plt>
   19a64:	mov	ip, r0
   19a68:	ldr	r3, [r7]
   19a6c:	ldmib	r7, {r0, r1, r6}
   19a70:	ldr	r5, [r7, #16]
   19a74:	ldr	r4, [r7, #20]
   19a78:	ldr	r2, [r7, #24]
   19a7c:	ldr	r7, [r7, #28]
   19a80:	stm	sp, {r0, r1, r6}
   19a84:	str	r5, [sp, #12]
   19a88:	str	r4, [sp, #16]
   19a8c:	str	r2, [sp, #20]
   19a90:	str	r7, [sp, #24]
   19a94:	mov	r0, r8
   19a98:	mov	r1, #1
   19a9c:	mov	r2, ip
   19aa0:	bl	11a4c <__fprintf_chk@plt>
   19aa4:	sub	sp, fp, #24
   19aa8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19aac:	push	{r4, sl, fp, lr}
   19ab0:	add	fp, sp, #8
   19ab4:	sub	sp, sp, #8
   19ab8:	ldr	ip, [fp, #8]
   19abc:	mov	lr, #0
   19ac0:	ldr	r4, [ip, lr, lsl #2]
   19ac4:	add	lr, lr, #1
   19ac8:	cmp	r4, #0
   19acc:	bne	19ac0 <lchmod@@Base+0x2b68>
   19ad0:	sub	r4, lr, #1
   19ad4:	str	ip, [sp]
   19ad8:	str	r4, [sp, #4]
   19adc:	bl	19778 <lchmod@@Base+0x2820>
   19ae0:	sub	sp, fp, #8
   19ae4:	pop	{r4, sl, fp, pc}
   19ae8:	push	{fp, lr}
   19aec:	mov	fp, sp
   19af0:	sub	sp, sp, #48	; 0x30
   19af4:	ldr	ip, [fp, #8]
   19af8:	ldr	lr, [ip]
   19afc:	cmp	lr, #0
   19b00:	str	lr, [sp, #8]
   19b04:	beq	19ba0 <lchmod@@Base+0x2c48>
   19b08:	ldr	lr, [ip, #4]
   19b0c:	cmp	lr, #0
   19b10:	str	lr, [sp, #12]
   19b14:	beq	19ba8 <lchmod@@Base+0x2c50>
   19b18:	ldr	lr, [ip, #8]
   19b1c:	cmp	lr, #0
   19b20:	str	lr, [sp, #16]
   19b24:	beq	19bb0 <lchmod@@Base+0x2c58>
   19b28:	ldr	lr, [ip, #12]
   19b2c:	cmp	lr, #0
   19b30:	str	lr, [sp, #20]
   19b34:	beq	19bb8 <lchmod@@Base+0x2c60>
   19b38:	ldr	lr, [ip, #16]
   19b3c:	cmp	lr, #0
   19b40:	str	lr, [sp, #24]
   19b44:	beq	19bc0 <lchmod@@Base+0x2c68>
   19b48:	ldr	lr, [ip, #20]
   19b4c:	cmp	lr, #0
   19b50:	str	lr, [sp, #28]
   19b54:	beq	19bc8 <lchmod@@Base+0x2c70>
   19b58:	ldr	lr, [ip, #24]
   19b5c:	cmp	lr, #0
   19b60:	str	lr, [sp, #32]
   19b64:	beq	19bd0 <lchmod@@Base+0x2c78>
   19b68:	ldr	lr, [ip, #28]
   19b6c:	cmp	lr, #0
   19b70:	str	lr, [sp, #36]	; 0x24
   19b74:	beq	19bd8 <lchmod@@Base+0x2c80>
   19b78:	ldr	lr, [ip, #32]
   19b7c:	cmp	lr, #0
   19b80:	str	lr, [sp, #40]	; 0x28
   19b84:	beq	19be0 <lchmod@@Base+0x2c88>
   19b88:	ldr	lr, [ip, #36]	; 0x24
   19b8c:	mov	ip, #10
   19b90:	cmp	lr, #0
   19b94:	str	lr, [sp, #44]	; 0x2c
   19b98:	movweq	ip, #9
   19b9c:	b	19be4 <lchmod@@Base+0x2c8c>
   19ba0:	mov	ip, #0
   19ba4:	b	19be4 <lchmod@@Base+0x2c8c>
   19ba8:	mov	ip, #1
   19bac:	b	19be4 <lchmod@@Base+0x2c8c>
   19bb0:	mov	ip, #2
   19bb4:	b	19be4 <lchmod@@Base+0x2c8c>
   19bb8:	mov	ip, #3
   19bbc:	b	19be4 <lchmod@@Base+0x2c8c>
   19bc0:	mov	ip, #4
   19bc4:	b	19be4 <lchmod@@Base+0x2c8c>
   19bc8:	mov	ip, #5
   19bcc:	b	19be4 <lchmod@@Base+0x2c8c>
   19bd0:	mov	ip, #6
   19bd4:	b	19be4 <lchmod@@Base+0x2c8c>
   19bd8:	mov	ip, #7
   19bdc:	b	19be4 <lchmod@@Base+0x2c8c>
   19be0:	mov	ip, #8
   19be4:	add	lr, sp, #8
   19be8:	str	ip, [sp, #4]
   19bec:	str	lr, [sp]
   19bf0:	bl	19778 <lchmod@@Base+0x2820>
   19bf4:	mov	sp, fp
   19bf8:	pop	{fp, pc}
   19bfc:	push	{fp, lr}
   19c00:	mov	fp, sp
   19c04:	sub	sp, sp, #56	; 0x38
   19c08:	add	ip, fp, #8
   19c0c:	str	ip, [sp, #12]
   19c10:	ldr	lr, [fp, #8]
   19c14:	cmp	lr, #0
   19c18:	str	lr, [sp, #16]
   19c1c:	beq	19cb8 <lchmod@@Base+0x2d60>
   19c20:	ldr	lr, [ip, #4]
   19c24:	cmp	lr, #0
   19c28:	str	lr, [sp, #20]
   19c2c:	beq	19cc0 <lchmod@@Base+0x2d68>
   19c30:	ldr	lr, [ip, #8]
   19c34:	cmp	lr, #0
   19c38:	str	lr, [sp, #24]
   19c3c:	beq	19cc8 <lchmod@@Base+0x2d70>
   19c40:	ldr	lr, [ip, #12]
   19c44:	cmp	lr, #0
   19c48:	str	lr, [sp, #28]
   19c4c:	beq	19cd0 <lchmod@@Base+0x2d78>
   19c50:	ldr	lr, [ip, #16]
   19c54:	cmp	lr, #0
   19c58:	str	lr, [sp, #32]
   19c5c:	beq	19cd8 <lchmod@@Base+0x2d80>
   19c60:	ldr	lr, [ip, #20]
   19c64:	cmp	lr, #0
   19c68:	str	lr, [sp, #36]	; 0x24
   19c6c:	beq	19ce0 <lchmod@@Base+0x2d88>
   19c70:	ldr	lr, [ip, #24]
   19c74:	cmp	lr, #0
   19c78:	str	lr, [sp, #40]	; 0x28
   19c7c:	beq	19ce8 <lchmod@@Base+0x2d90>
   19c80:	ldr	lr, [ip, #28]
   19c84:	cmp	lr, #0
   19c88:	str	lr, [sp, #44]	; 0x2c
   19c8c:	beq	19cf0 <lchmod@@Base+0x2d98>
   19c90:	ldr	lr, [ip, #32]
   19c94:	cmp	lr, #0
   19c98:	str	lr, [sp, #48]	; 0x30
   19c9c:	beq	19cf8 <lchmod@@Base+0x2da0>
   19ca0:	ldr	lr, [ip, #36]	; 0x24
   19ca4:	mov	ip, #10
   19ca8:	cmp	lr, #0
   19cac:	str	lr, [sp, #52]	; 0x34
   19cb0:	movweq	ip, #9
   19cb4:	b	19cfc <lchmod@@Base+0x2da4>
   19cb8:	mov	ip, #0
   19cbc:	b	19cfc <lchmod@@Base+0x2da4>
   19cc0:	mov	ip, #1
   19cc4:	b	19cfc <lchmod@@Base+0x2da4>
   19cc8:	mov	ip, #2
   19ccc:	b	19cfc <lchmod@@Base+0x2da4>
   19cd0:	mov	ip, #3
   19cd4:	b	19cfc <lchmod@@Base+0x2da4>
   19cd8:	mov	ip, #4
   19cdc:	b	19cfc <lchmod@@Base+0x2da4>
   19ce0:	mov	ip, #5
   19ce4:	b	19cfc <lchmod@@Base+0x2da4>
   19ce8:	mov	ip, #6
   19cec:	b	19cfc <lchmod@@Base+0x2da4>
   19cf0:	mov	ip, #7
   19cf4:	b	19cfc <lchmod@@Base+0x2da4>
   19cf8:	mov	ip, #8
   19cfc:	add	lr, sp, #16
   19d00:	str	ip, [sp, #4]
   19d04:	str	lr, [sp]
   19d08:	bl	19778 <lchmod@@Base+0x2820>
   19d0c:	mov	sp, fp
   19d10:	pop	{fp, pc}
   19d14:	push	{fp, lr}
   19d18:	mov	fp, sp
   19d1c:	movw	r0, #53732	; 0xd1e4
   19d20:	movt	r0, #2
   19d24:	ldr	r1, [r0]
   19d28:	movw	r0, #50050	; 0xc382
   19d2c:	movt	r0, #1
   19d30:	bl	117ac <fputs_unlocked@plt>
   19d34:	movw	r1, #51313	; 0xc871
   19d38:	mov	r0, #0
   19d3c:	mov	r2, #5
   19d40:	movt	r1, #1
   19d44:	bl	11860 <dcgettext@plt>
   19d48:	movw	r2, #51333	; 0xc885
   19d4c:	mov	r1, r0
   19d50:	mov	r0, #1
   19d54:	movt	r2, #1
   19d58:	bl	11a34 <__printf_chk@plt>
   19d5c:	movw	r1, #51355	; 0xc89b
   19d60:	mov	r0, #0
   19d64:	mov	r2, #5
   19d68:	movt	r1, #1
   19d6c:	bl	11860 <dcgettext@plt>
   19d70:	movw	r2, #49232	; 0xc050
   19d74:	movw	r3, #49859	; 0xc2c3
   19d78:	mov	r1, r0
   19d7c:	mov	r0, #1
   19d80:	movt	r2, #1
   19d84:	movt	r3, #1
   19d88:	bl	11a34 <__printf_chk@plt>
   19d8c:	movw	r1, #51375	; 0xc8af
   19d90:	mov	r0, #0
   19d94:	mov	r2, #5
   19d98:	movt	r1, #1
   19d9c:	bl	11860 <dcgettext@plt>
   19da0:	movw	r2, #51414	; 0xc8d6
   19da4:	mov	r1, r0
   19da8:	mov	r0, #1
   19dac:	movt	r2, #1
   19db0:	pop	{fp, lr}
   19db4:	b	11a34 <__printf_chk@plt>
   19db8:	push	{r4, r5, r6, sl, fp, lr}
   19dbc:	add	fp, sp, #16
   19dc0:	mov	r4, r2
   19dc4:	mov	r5, r1
   19dc8:	mov	r6, r0
   19dcc:	bl	1b830 <lchmod@@Base+0x48d8>
   19dd0:	cmp	r0, #0
   19dd4:	popne	{r4, r5, r6, sl, fp, pc}
   19dd8:	cmp	r6, #0
   19ddc:	beq	19df0 <lchmod@@Base+0x2e98>
   19de0:	cmp	r5, #0
   19de4:	cmpne	r4, #0
   19de8:	bne	19df0 <lchmod@@Base+0x2e98>
   19dec:	pop	{r4, r5, r6, sl, fp, pc}
   19df0:	bl	1a36c <lchmod@@Base+0x3414>
   19df4:	push	{r4, r5, r6, sl, fp, lr}
   19df8:	add	fp, sp, #16
   19dfc:	mov	r4, r2
   19e00:	mov	r5, r1
   19e04:	mov	r6, r0
   19e08:	bl	1b830 <lchmod@@Base+0x48d8>
   19e0c:	cmp	r0, #0
   19e10:	popne	{r4, r5, r6, sl, fp, pc}
   19e14:	cmp	r6, #0
   19e18:	beq	19e2c <lchmod@@Base+0x2ed4>
   19e1c:	cmp	r5, #0
   19e20:	cmpne	r4, #0
   19e24:	bne	19e2c <lchmod@@Base+0x2ed4>
   19e28:	pop	{r4, r5, r6, sl, fp, pc}
   19e2c:	bl	1a36c <lchmod@@Base+0x3414>
   19e30:	push	{fp, lr}
   19e34:	mov	fp, sp
   19e38:	bl	1b120 <lchmod@@Base+0x41c8>
   19e3c:	cmp	r0, #0
   19e40:	popne	{fp, pc}
   19e44:	bl	1a36c <lchmod@@Base+0x3414>
   19e48:	push	{fp, lr}
   19e4c:	mov	fp, sp
   19e50:	bl	1b120 <lchmod@@Base+0x41c8>
   19e54:	cmp	r0, #0
   19e58:	popne	{fp, pc}
   19e5c:	bl	1a36c <lchmod@@Base+0x3414>
   19e60:	push	{fp, lr}
   19e64:	mov	fp, sp
   19e68:	bl	1b120 <lchmod@@Base+0x41c8>
   19e6c:	cmp	r0, #0
   19e70:	popne	{fp, pc}
   19e74:	bl	1a36c <lchmod@@Base+0x3414>
   19e78:	push	{r4, r5, fp, lr}
   19e7c:	add	fp, sp, #8
   19e80:	mov	r4, r1
   19e84:	mov	r5, r0
   19e88:	bl	1b150 <lchmod@@Base+0x41f8>
   19e8c:	cmp	r0, #0
   19e90:	popne	{r4, r5, fp, pc}
   19e94:	cmp	r5, #0
   19e98:	beq	19ea8 <lchmod@@Base+0x2f50>
   19e9c:	cmp	r4, #0
   19ea0:	bne	19ea8 <lchmod@@Base+0x2f50>
   19ea4:	pop	{r4, r5, fp, pc}
   19ea8:	bl	1a36c <lchmod@@Base+0x3414>
   19eac:	push	{fp, lr}
   19eb0:	mov	fp, sp
   19eb4:	cmp	r1, #0
   19eb8:	orreq	r1, r1, #1
   19ebc:	bl	1b150 <lchmod@@Base+0x41f8>
   19ec0:	cmp	r0, #0
   19ec4:	popne	{fp, pc}
   19ec8:	bl	1a36c <lchmod@@Base+0x3414>
   19ecc:	push	{fp, lr}
   19ed0:	mov	fp, sp
   19ed4:	clz	r3, r2
   19ed8:	lsr	ip, r3, #5
   19edc:	clz	r3, r1
   19ee0:	lsr	r3, r3, #5
   19ee4:	orrs	r3, r3, ip
   19ee8:	movwne	r1, #1
   19eec:	movwne	r2, #1
   19ef0:	bl	1b830 <lchmod@@Base+0x48d8>
   19ef4:	cmp	r0, #0
   19ef8:	popne	{fp, pc}
   19efc:	bl	1a36c <lchmod@@Base+0x3414>
   19f00:	push	{fp, lr}
   19f04:	mov	fp, sp
   19f08:	mov	r2, r1
   19f0c:	mov	r1, r0
   19f10:	mov	r0, #0
   19f14:	bl	1b830 <lchmod@@Base+0x48d8>
   19f18:	cmp	r0, #0
   19f1c:	popne	{fp, pc}
   19f20:	bl	1a36c <lchmod@@Base+0x3414>
   19f24:	push	{fp, lr}
   19f28:	mov	fp, sp
   19f2c:	mov	r2, r1
   19f30:	mov	r1, r0
   19f34:	clz	r0, r2
   19f38:	clz	r3, r1
   19f3c:	lsr	r0, r0, #5
   19f40:	lsr	r3, r3, #5
   19f44:	orrs	r0, r3, r0
   19f48:	mov	r0, #0
   19f4c:	movwne	r1, #1
   19f50:	movwne	r2, #1
   19f54:	bl	1b830 <lchmod@@Base+0x48d8>
   19f58:	cmp	r0, #0
   19f5c:	popne	{fp, pc}
   19f60:	bl	1a36c <lchmod@@Base+0x3414>
   19f64:	push	{r4, r5, r6, sl, fp, lr}
   19f68:	add	fp, sp, #16
   19f6c:	ldr	r5, [r1]
   19f70:	mov	r4, r1
   19f74:	mov	r6, r0
   19f78:	cmp	r0, #0
   19f7c:	beq	19f94 <lchmod@@Base+0x303c>
   19f80:	mov	r0, #1
   19f84:	add	r0, r0, r5, lsr #1
   19f88:	adds	r5, r5, r0
   19f8c:	bcc	19f9c <lchmod@@Base+0x3044>
   19f90:	b	19fd8 <lchmod@@Base+0x3080>
   19f94:	cmp	r5, #0
   19f98:	movweq	r5, #64	; 0x40
   19f9c:	mov	r0, r6
   19fa0:	mov	r1, r5
   19fa4:	mov	r2, #1
   19fa8:	bl	1b830 <lchmod@@Base+0x48d8>
   19fac:	cmp	r5, #0
   19fb0:	mov	r1, r5
   19fb4:	movwne	r1, #1
   19fb8:	cmp	r0, #0
   19fbc:	bne	19fd0 <lchmod@@Base+0x3078>
   19fc0:	clz	r2, r6
   19fc4:	lsr	r2, r2, #5
   19fc8:	orrs	r1, r2, r1
   19fcc:	bne	19fd8 <lchmod@@Base+0x3080>
   19fd0:	str	r5, [r4]
   19fd4:	pop	{r4, r5, r6, sl, fp, pc}
   19fd8:	bl	1a36c <lchmod@@Base+0x3414>
   19fdc:	push	{r4, r5, r6, r7, fp, lr}
   19fe0:	add	fp, sp, #16
   19fe4:	ldr	r5, [r1]
   19fe8:	mov	r6, r2
   19fec:	mov	r4, r1
   19ff0:	mov	r7, r0
   19ff4:	cmp	r0, #0
   19ff8:	beq	1a010 <lchmod@@Base+0x30b8>
   19ffc:	mov	r0, #1
   1a000:	add	r0, r0, r5, lsr #1
   1a004:	adds	r5, r5, r0
   1a008:	bcc	1a028 <lchmod@@Base+0x30d0>
   1a00c:	b	1a05c <lchmod@@Base+0x3104>
   1a010:	cmp	r5, #0
   1a014:	bne	1a028 <lchmod@@Base+0x30d0>
   1a018:	mov	r0, #64	; 0x40
   1a01c:	cmp	r6, #64	; 0x40
   1a020:	udiv	r5, r0, r6
   1a024:	addhi	r5, r5, #1
   1a028:	mov	r0, r7
   1a02c:	mov	r1, r5
   1a030:	mov	r2, r6
   1a034:	bl	1b830 <lchmod@@Base+0x48d8>
   1a038:	cmp	r0, #0
   1a03c:	bne	1a054 <lchmod@@Base+0x30fc>
   1a040:	cmp	r7, #0
   1a044:	beq	1a05c <lchmod@@Base+0x3104>
   1a048:	cmp	r6, #0
   1a04c:	cmpne	r5, #0
   1a050:	bne	1a05c <lchmod@@Base+0x3104>
   1a054:	str	r5, [r4]
   1a058:	pop	{r4, r5, r6, r7, fp, pc}
   1a05c:	bl	1a36c <lchmod@@Base+0x3414>
   1a060:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a064:	add	fp, sp, #24
   1a068:	mov	r8, r1
   1a06c:	ldr	r1, [r1]
   1a070:	mov	r5, r0
   1a074:	add	r0, r1, r1, asr #1
   1a078:	cmp	r0, r1
   1a07c:	mvnvs	r0, #-2147483648	; 0x80000000
   1a080:	cmp	r0, r3
   1a084:	mov	r7, r0
   1a088:	movgt	r7, r3
   1a08c:	cmn	r3, #1
   1a090:	movle	r7, r0
   1a094:	ldr	r0, [fp, #8]
   1a098:	cmn	r0, #1
   1a09c:	ble	1a0c4 <lchmod@@Base+0x316c>
   1a0a0:	cmp	r0, #0
   1a0a4:	beq	1a118 <lchmod@@Base+0x31c0>
   1a0a8:	cmn	r7, #1
   1a0ac:	ble	1a0ec <lchmod@@Base+0x3194>
   1a0b0:	mvn	r4, #-2147483648	; 0x80000000
   1a0b4:	udiv	r6, r4, r0
   1a0b8:	cmp	r6, r7
   1a0bc:	bge	1a118 <lchmod@@Base+0x31c0>
   1a0c0:	b	1a128 <lchmod@@Base+0x31d0>
   1a0c4:	cmn	r7, #1
   1a0c8:	ble	1a108 <lchmod@@Base+0x31b0>
   1a0cc:	cmn	r0, #1
   1a0d0:	beq	1a118 <lchmod@@Base+0x31c0>
   1a0d4:	mov	r6, #-2147483648	; 0x80000000
   1a0d8:	mvn	r4, #-2147483648	; 0x80000000
   1a0dc:	sdiv	r6, r6, r0
   1a0e0:	cmp	r6, r7
   1a0e4:	bge	1a118 <lchmod@@Base+0x31c0>
   1a0e8:	b	1a128 <lchmod@@Base+0x31d0>
   1a0ec:	beq	1a118 <lchmod@@Base+0x31c0>
   1a0f0:	mov	r6, #-2147483648	; 0x80000000
   1a0f4:	mvn	r4, #-2147483648	; 0x80000000
   1a0f8:	sdiv	r6, r6, r7
   1a0fc:	cmp	r6, r0
   1a100:	bge	1a118 <lchmod@@Base+0x31c0>
   1a104:	b	1a128 <lchmod@@Base+0x31d0>
   1a108:	mvn	r4, #-2147483648	; 0x80000000
   1a10c:	sdiv	r6, r4, r0
   1a110:	cmp	r7, r6
   1a114:	blt	1a128 <lchmod@@Base+0x31d0>
   1a118:	mul	r6, r7, r0
   1a11c:	mov	r4, #64	; 0x40
   1a120:	cmp	r6, #63	; 0x3f
   1a124:	bgt	1a130 <lchmod@@Base+0x31d8>
   1a128:	sdiv	r7, r4, r0
   1a12c:	mul	r6, r7, r0
   1a130:	cmp	r5, #0
   1a134:	moveq	r4, #0
   1a138:	streq	r4, [r8]
   1a13c:	sub	r4, r7, r1
   1a140:	cmp	r4, r2
   1a144:	bge	1a1f0 <lchmod@@Base+0x3298>
   1a148:	add	r7, r1, r2
   1a14c:	mov	r6, #0
   1a150:	mov	r2, #0
   1a154:	cmp	r7, r3
   1a158:	movwgt	r6, #1
   1a15c:	cmn	r3, #1
   1a160:	movwgt	r2, #1
   1a164:	cmp	r7, r1
   1a168:	bvs	1a224 <lchmod@@Base+0x32cc>
   1a16c:	ands	r1, r2, r6
   1a170:	bne	1a224 <lchmod@@Base+0x32cc>
   1a174:	cmn	r0, #1
   1a178:	ble	1a1a0 <lchmod@@Base+0x3248>
   1a17c:	cmp	r0, #0
   1a180:	beq	1a1ec <lchmod@@Base+0x3294>
   1a184:	cmn	r7, #1
   1a188:	ble	1a1c4 <lchmod@@Base+0x326c>
   1a18c:	mvn	r1, #-2147483648	; 0x80000000
   1a190:	udiv	r1, r1, r0
   1a194:	cmp	r1, r7
   1a198:	bge	1a1ec <lchmod@@Base+0x3294>
   1a19c:	b	1a224 <lchmod@@Base+0x32cc>
   1a1a0:	cmn	r7, #1
   1a1a4:	ble	1a1dc <lchmod@@Base+0x3284>
   1a1a8:	cmn	r0, #1
   1a1ac:	beq	1a1ec <lchmod@@Base+0x3294>
   1a1b0:	mov	r1, #-2147483648	; 0x80000000
   1a1b4:	sdiv	r1, r1, r0
   1a1b8:	cmp	r1, r7
   1a1bc:	bge	1a1ec <lchmod@@Base+0x3294>
   1a1c0:	b	1a224 <lchmod@@Base+0x32cc>
   1a1c4:	beq	1a1ec <lchmod@@Base+0x3294>
   1a1c8:	mov	r1, #-2147483648	; 0x80000000
   1a1cc:	sdiv	r1, r1, r7
   1a1d0:	cmp	r1, r0
   1a1d4:	bge	1a1ec <lchmod@@Base+0x3294>
   1a1d8:	b	1a224 <lchmod@@Base+0x32cc>
   1a1dc:	mvn	r1, #-2147483648	; 0x80000000
   1a1e0:	sdiv	r1, r1, r0
   1a1e4:	cmp	r7, r1
   1a1e8:	blt	1a224 <lchmod@@Base+0x32cc>
   1a1ec:	mul	r6, r7, r0
   1a1f0:	mov	r0, r5
   1a1f4:	mov	r1, r6
   1a1f8:	bl	1b150 <lchmod@@Base+0x41f8>
   1a1fc:	cmp	r6, #0
   1a200:	movwne	r6, #1
   1a204:	cmp	r0, #0
   1a208:	bne	1a21c <lchmod@@Base+0x32c4>
   1a20c:	clz	r1, r5
   1a210:	lsr	r1, r1, #5
   1a214:	orrs	r1, r1, r6
   1a218:	bne	1a224 <lchmod@@Base+0x32cc>
   1a21c:	str	r7, [r8]
   1a220:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a224:	bl	1a36c <lchmod@@Base+0x3414>
   1a228:	push	{fp, lr}
   1a22c:	mov	fp, sp
   1a230:	mov	r1, #1
   1a234:	bl	1b0cc <lchmod@@Base+0x4174>
   1a238:	cmp	r0, #0
   1a23c:	popne	{fp, pc}
   1a240:	bl	1a36c <lchmod@@Base+0x3414>
   1a244:	push	{fp, lr}
   1a248:	mov	fp, sp
   1a24c:	bl	1b0cc <lchmod@@Base+0x4174>
   1a250:	cmp	r0, #0
   1a254:	popne	{fp, pc}
   1a258:	bl	1a36c <lchmod@@Base+0x3414>
   1a25c:	push	{fp, lr}
   1a260:	mov	fp, sp
   1a264:	mov	r1, #1
   1a268:	bl	1b0cc <lchmod@@Base+0x4174>
   1a26c:	cmp	r0, #0
   1a270:	popne	{fp, pc}
   1a274:	bl	1a36c <lchmod@@Base+0x3414>
   1a278:	push	{fp, lr}
   1a27c:	mov	fp, sp
   1a280:	bl	1b0cc <lchmod@@Base+0x4174>
   1a284:	cmp	r0, #0
   1a288:	popne	{fp, pc}
   1a28c:	bl	1a36c <lchmod@@Base+0x3414>
   1a290:	push	{r4, r5, fp, lr}
   1a294:	add	fp, sp, #8
   1a298:	mov	r5, r0
   1a29c:	mov	r0, r1
   1a2a0:	mov	r4, r1
   1a2a4:	bl	1b120 <lchmod@@Base+0x41c8>
   1a2a8:	cmp	r0, #0
   1a2ac:	beq	1a2c0 <lchmod@@Base+0x3368>
   1a2b0:	mov	r1, r5
   1a2b4:	mov	r2, r4
   1a2b8:	pop	{r4, r5, fp, lr}
   1a2bc:	b	11830 <memcpy@plt>
   1a2c0:	bl	1a36c <lchmod@@Base+0x3414>
   1a2c4:	push	{r4, r5, fp, lr}
   1a2c8:	add	fp, sp, #8
   1a2cc:	mov	r5, r0
   1a2d0:	mov	r0, r1
   1a2d4:	mov	r4, r1
   1a2d8:	bl	1b120 <lchmod@@Base+0x41c8>
   1a2dc:	cmp	r0, #0
   1a2e0:	beq	1a2f4 <lchmod@@Base+0x339c>
   1a2e4:	mov	r1, r5
   1a2e8:	mov	r2, r4
   1a2ec:	pop	{r4, r5, fp, lr}
   1a2f0:	b	11830 <memcpy@plt>
   1a2f4:	bl	1a36c <lchmod@@Base+0x3414>
   1a2f8:	push	{r4, r5, fp, lr}
   1a2fc:	add	fp, sp, #8
   1a300:	mov	r5, r0
   1a304:	add	r0, r1, #1
   1a308:	mov	r4, r1
   1a30c:	bl	1b120 <lchmod@@Base+0x41c8>
   1a310:	cmp	r0, #0
   1a314:	beq	1a330 <lchmod@@Base+0x33d8>
   1a318:	mov	r1, #0
   1a31c:	mov	r2, r4
   1a320:	strb	r1, [r0, r4]
   1a324:	mov	r1, r5
   1a328:	pop	{r4, r5, fp, lr}
   1a32c:	b	11830 <memcpy@plt>
   1a330:	bl	1a36c <lchmod@@Base+0x3414>
   1a334:	push	{r4, r5, fp, lr}
   1a338:	add	fp, sp, #8
   1a33c:	mov	r4, r0
   1a340:	bl	119c8 <strlen@plt>
   1a344:	add	r5, r0, #1
   1a348:	mov	r0, r5
   1a34c:	bl	1b120 <lchmod@@Base+0x41c8>
   1a350:	cmp	r0, #0
   1a354:	beq	1a368 <lchmod@@Base+0x3410>
   1a358:	mov	r1, r4
   1a35c:	mov	r2, r5
   1a360:	pop	{r4, r5, fp, lr}
   1a364:	b	11830 <memcpy@plt>
   1a368:	bl	1a36c <lchmod@@Base+0x3414>
   1a36c:	push	{fp, lr}
   1a370:	mov	fp, sp
   1a374:	movw	r0, #53644	; 0xd18c
   1a378:	movw	r1, #51490	; 0xc922
   1a37c:	mov	r2, #5
   1a380:	movt	r0, #2
   1a384:	movt	r1, #1
   1a388:	ldr	r4, [r0]
   1a38c:	mov	r0, #0
   1a390:	bl	11860 <dcgettext@plt>
   1a394:	movw	r2, #50239	; 0xc43f
   1a398:	mov	r3, r0
   1a39c:	mov	r0, r4
   1a3a0:	mov	r1, #0
   1a3a4:	movt	r2, #1
   1a3a8:	bl	11920 <error@plt>
   1a3ac:	bl	11b60 <abort@plt>
   1a3b0:	push	{fp, lr}
   1a3b4:	mov	fp, sp
   1a3b8:	orr	r1, r1, #512	; 0x200
   1a3bc:	bl	136e0 <__assert_fail@plt+0x1b20>
   1a3c0:	cmp	r0, #0
   1a3c4:	popne	{fp, pc}
   1a3c8:	bl	11a04 <__errno_location@plt>
   1a3cc:	ldr	r0, [r0]
   1a3d0:	cmp	r0, #22
   1a3d4:	bne	1a3f8 <lchmod@@Base+0x34a0>
   1a3d8:	movw	r0, #51507	; 0xc933
   1a3dc:	movw	r1, #51523	; 0xc943
   1a3e0:	movw	r3, #51534	; 0xc94e
   1a3e4:	mov	r2, #41	; 0x29
   1a3e8:	movt	r0, #1
   1a3ec:	movt	r1, #1
   1a3f0:	movt	r3, #1
   1a3f4:	bl	11bc0 <__assert_fail@plt>
   1a3f8:	bl	1a36c <lchmod@@Base+0x3414>
   1a3fc:	ldr	r0, [r0, #48]	; 0x30
   1a400:	and	r0, r0, #17
   1a404:	cmp	r0, #16
   1a408:	moveq	r0, #1
   1a40c:	bxeq	lr
   1a410:	cmp	r0, #17
   1a414:	movne	r0, #0
   1a418:	bxne	lr
   1a41c:	ldr	r0, [r1, #48]	; 0x30
   1a420:	cmp	r0, #0
   1a424:	movwne	r0, #1
   1a428:	bx	lr
   1a42c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a430:	add	fp, sp, #28
   1a434:	sub	sp, sp, #44	; 0x2c
   1a438:	cmp	r2, #37	; 0x25
   1a43c:	bcs	1b0ac <lchmod@@Base+0x4154>
   1a440:	ldr	sl, [fp, #8]
   1a444:	mov	r6, r2
   1a448:	mov	r7, r1
   1a44c:	mov	r4, r0
   1a450:	str	r3, [sp, #36]	; 0x24
   1a454:	bl	11a04 <__errno_location@plt>
   1a458:	mov	r5, r0
   1a45c:	mov	r0, #0
   1a460:	str	r0, [r5]
   1a464:	bl	1198c <__ctype_b_loc@plt>
   1a468:	ldr	r1, [r0]
   1a46c:	mov	r2, r4
   1a470:	ldrb	r0, [r2], #1
   1a474:	add	r3, r1, r0, lsl #1
   1a478:	ldrb	r3, [r3, #1]
   1a47c:	tst	r3, #32
   1a480:	bne	1a470 <lchmod@@Base+0x3518>
   1a484:	cmp	r7, #0
   1a488:	sub	r9, fp, #32
   1a48c:	mov	r8, #4
   1a490:	movne	r9, r7
   1a494:	cmp	r0, #45	; 0x2d
   1a498:	beq	1b0a0 <lchmod@@Base+0x4148>
   1a49c:	mov	r0, r4
   1a4a0:	mov	r1, r9
   1a4a4:	mov	r2, r6
   1a4a8:	mov	r3, #0
   1a4ac:	bl	1183c <__strtoull_internal@plt>
   1a4b0:	mov	r7, r1
   1a4b4:	ldr	r1, [r9]
   1a4b8:	cmp	r1, r4
   1a4bc:	beq	1a4e8 <lchmod@@Base+0x3590>
   1a4c0:	mov	r6, r0
   1a4c4:	ldr	r0, [r5]
   1a4c8:	cmp	r0, #0
   1a4cc:	beq	1a524 <lchmod@@Base+0x35cc>
   1a4d0:	cmp	r0, #34	; 0x22
   1a4d4:	bne	1b0a0 <lchmod@@Base+0x4148>
   1a4d8:	mov	r8, #1
   1a4dc:	cmp	sl, #0
   1a4e0:	bne	1a530 <lchmod@@Base+0x35d8>
   1a4e4:	b	1b098 <lchmod@@Base+0x4140>
   1a4e8:	cmp	sl, #0
   1a4ec:	beq	1b0a0 <lchmod@@Base+0x4148>
   1a4f0:	mov	r5, r1
   1a4f4:	ldrb	r1, [r4]
   1a4f8:	cmp	r1, #0
   1a4fc:	beq	1b0a0 <lchmod@@Base+0x4148>
   1a500:	mov	r0, sl
   1a504:	bl	119e0 <strchr@plt>
   1a508:	cmp	r0, #0
   1a50c:	beq	1b0a0 <lchmod@@Base+0x4148>
   1a510:	mov	r1, r5
   1a514:	mov	r8, #0
   1a518:	mov	r6, #1
   1a51c:	mov	r7, #0
   1a520:	b	1a530 <lchmod@@Base+0x35d8>
   1a524:	mov	r8, r0
   1a528:	cmp	sl, #0
   1a52c:	beq	1b098 <lchmod@@Base+0x4140>
   1a530:	ldrb	r4, [r1]
   1a534:	cmp	r4, #0
   1a538:	beq	1b098 <lchmod@@Base+0x4140>
   1a53c:	str	r1, [sp, #32]
   1a540:	mov	r0, sl
   1a544:	mov	r1, r4
   1a548:	bl	119e0 <strchr@plt>
   1a54c:	cmp	r0, #0
   1a550:	beq	1a818 <lchmod@@Base+0x38c0>
   1a554:	sub	r0, r4, #69	; 0x45
   1a558:	mov	r1, #1
   1a55c:	mov	r3, #0
   1a560:	mov	r5, #1024	; 0x400
   1a564:	cmp	r0, #47	; 0x2f
   1a568:	str	r1, [sp, #28]
   1a56c:	bhi	1a670 <lchmod@@Base+0x3718>
   1a570:	add	r1, pc, #0
   1a574:	ldr	pc, [r1, r0, lsl #2]
   1a578:	andeq	sl, r1, r8, lsr r6
   1a57c:	andeq	sl, r1, r0, ror r6
   1a580:	andeq	sl, r1, r8, lsr r6
   1a584:	andeq	sl, r1, r0, ror r6
   1a588:	andeq	sl, r1, r0, ror r6
   1a58c:	andeq	sl, r1, r0, ror r6
   1a590:	andeq	sl, r1, r8, lsr r6
   1a594:	andeq	sl, r1, r0, ror r6
   1a598:	andeq	sl, r1, r8, lsr r6
   1a59c:	andeq	sl, r1, r0, ror r6
   1a5a0:	andeq	sl, r1, r0, ror r6
   1a5a4:	andeq	sl, r1, r8, lsr r6
   1a5a8:	andeq	sl, r1, r0, ror r6
   1a5ac:	andeq	sl, r1, r0, ror r6
   1a5b0:	andeq	sl, r1, r0, ror r6
   1a5b4:	andeq	sl, r1, r8, lsr r6
   1a5b8:	andeq	sl, r1, r0, ror r6
   1a5bc:	andeq	sl, r1, r0, ror r6
   1a5c0:	andeq	sl, r1, r0, ror r6
   1a5c4:	andeq	sl, r1, r0, ror r6
   1a5c8:	andeq	sl, r1, r8, lsr r6
   1a5cc:	andeq	sl, r1, r8, lsr r6
   1a5d0:	andeq	sl, r1, r0, ror r6
   1a5d4:	andeq	sl, r1, r0, ror r6
   1a5d8:	andeq	sl, r1, r0, ror r6
   1a5dc:	andeq	sl, r1, r0, ror r6
   1a5e0:	andeq	sl, r1, r0, ror r6
   1a5e4:	andeq	sl, r1, r0, ror r6
   1a5e8:	andeq	sl, r1, r0, ror r6
   1a5ec:	andeq	sl, r1, r0, ror r6
   1a5f0:	andeq	sl, r1, r0, ror r6
   1a5f4:	andeq	sl, r1, r0, ror r6
   1a5f8:	andeq	sl, r1, r0, ror r6
   1a5fc:	andeq	sl, r1, r0, ror r6
   1a600:	andeq	sl, r1, r8, lsr r6
   1a604:	andeq	sl, r1, r0, ror r6
   1a608:	andeq	sl, r1, r0, ror r6
   1a60c:	andeq	sl, r1, r0, ror r6
   1a610:	andeq	sl, r1, r8, lsr r6
   1a614:	andeq	sl, r1, r0, ror r6
   1a618:	andeq	sl, r1, r8, lsr r6
   1a61c:	andeq	sl, r1, r0, ror r6
   1a620:	andeq	sl, r1, r0, ror r6
   1a624:	andeq	sl, r1, r0, ror r6
   1a628:	andeq	sl, r1, r0, ror r6
   1a62c:	andeq	sl, r1, r0, ror r6
   1a630:	andeq	sl, r1, r0, ror r6
   1a634:	andeq	sl, r1, r8, lsr r6
   1a638:	mov	r0, sl
   1a63c:	mov	r1, #48	; 0x30
   1a640:	bl	119e0 <strchr@plt>
   1a644:	cmp	r0, #0
   1a648:	beq	1a66c <lchmod@@Base+0x3714>
   1a64c:	ldr	r1, [sp, #32]
   1a650:	ldrb	r0, [r1, #1]
   1a654:	cmp	r0, #66	; 0x42
   1a658:	cmpne	r0, #68	; 0x44
   1a65c:	bne	1a824 <lchmod@@Base+0x38cc>
   1a660:	mov	r5, #1000	; 0x3e8
   1a664:	mov	r0, #2
   1a668:	str	r0, [sp, #28]
   1a66c:	mov	r3, #0
   1a670:	sub	r0, r4, #66	; 0x42
   1a674:	cmp	r0, #53	; 0x35
   1a678:	bhi	1a818 <lchmod@@Base+0x38c0>
   1a67c:	add	r1, pc, #0
   1a680:	ldr	pc, [r1, r0, lsl #2]
   1a684:	andeq	sl, r1, r0, lsr #23
   1a688:	andeq	sl, r1, r8, lsl r8
   1a68c:	andeq	sl, r1, r8, lsl r8
   1a690:	andeq	sl, r1, r8, asr #23
   1a694:	andeq	sl, r1, r8, lsl r8
   1a698:	andeq	sl, r1, ip, asr r7
   1a69c:	andeq	sl, r1, r8, lsl r8
   1a6a0:	andeq	sl, r1, r8, lsl r8
   1a6a4:	andeq	sl, r1, r8, lsl r8
   1a6a8:	andeq	sl, r1, r8, asr #16
   1a6ac:	andeq	sl, r1, r8, lsl r8
   1a6b0:	muleq	r1, r0, r8
   1a6b4:	andeq	sl, r1, r8, lsl r8
   1a6b8:	andeq	sl, r1, r8, lsl r8
   1a6bc:	andeq	sl, r1, r0, lsr #26
   1a6c0:	andeq	sl, r1, r8, lsl r8
   1a6c4:	andeq	sl, r1, r8, lsl r8
   1a6c8:	andeq	sl, r1, r8, lsl r8
   1a6cc:	andeq	sl, r1, ip, lsl r9
   1a6d0:	andeq	sl, r1, r8, lsl r8
   1a6d4:	andeq	sl, r1, r8, lsl r8
   1a6d8:	andeq	sl, r1, r8, lsl r8
   1a6dc:	andeq	sl, r1, r8, lsl r8
   1a6e0:	andeq	sl, r1, r8, asr #28
   1a6e4:	andeq	sl, r1, r4, lsl #20
   1a6e8:	andeq	sl, r1, r8, lsl r8
   1a6ec:	andeq	sl, r1, r8, lsl r8
   1a6f0:	andeq	sl, r1, r8, lsl r8
   1a6f4:	andeq	sl, r1, r8, lsl r8
   1a6f8:	andeq	sl, r1, r8, lsl r8
   1a6fc:	andeq	sl, r1, r8, lsl r8
   1a700:	andeq	sl, r1, r8, lsl r8
   1a704:	andeq	fp, r1, r0, lsr #32
   1a708:	andeq	fp, r1, r8, ror r0
   1a70c:	andeq	sl, r1, r8, lsl r8
   1a710:	andeq	sl, r1, r8, lsl r8
   1a714:	andeq	sl, r1, r8, lsl r8
   1a718:	andeq	sl, r1, ip, asr r7
   1a71c:	andeq	sl, r1, r8, lsl r8
   1a720:	andeq	sl, r1, r8, lsl r8
   1a724:	andeq	sl, r1, r8, lsl r8
   1a728:	andeq	sl, r1, r8, asr #16
   1a72c:	andeq	sl, r1, r8, lsl r8
   1a730:	muleq	r1, r0, r8
   1a734:	andeq	sl, r1, r8, lsl r8
   1a738:	andeq	sl, r1, r8, lsl r8
   1a73c:	andeq	sl, r1, r8, lsl r8
   1a740:	andeq	sl, r1, r8, lsl r8
   1a744:	andeq	sl, r1, r8, lsl r8
   1a748:	andeq	sl, r1, r8, lsl r8
   1a74c:	andeq	sl, r1, ip, lsl r9
   1a750:	andeq	sl, r1, r8, lsl r8
   1a754:	andeq	sl, r1, r8, lsl r8
   1a758:	andeq	fp, r1, r4, asr r0
   1a75c:	mvn	r0, #0
   1a760:	mvn	r1, #0
   1a764:	mov	r2, r5
   1a768:	mov	sl, r3
   1a76c:	bl	1b984 <lchmod@@Base+0x4a2c>
   1a770:	subs	r3, r0, r6
   1a774:	umull	r4, r2, r6, r5
   1a778:	mov	lr, #0
   1a77c:	str	r1, [sp, #20]
   1a780:	sbcs	r3, r1, r7
   1a784:	movwcc	lr, #1
   1a788:	mla	ip, r6, sl, r2
   1a78c:	mov	r2, r1
   1a790:	mov	r2, #0
   1a794:	cmp	lr, #0
   1a798:	mla	r7, r7, r5, ip
   1a79c:	mvnne	r4, #0
   1a7a0:	mvnne	r7, #0
   1a7a4:	subs	r6, r0, r4
   1a7a8:	sbcs	r6, r1, r7
   1a7ac:	umull	r3, r6, r4, r5
   1a7b0:	movwcc	r2, #1
   1a7b4:	cmp	r2, #0
   1a7b8:	mvnne	r3, #0
   1a7bc:	cmp	r2, #0
   1a7c0:	str	r6, [sp, #16]
   1a7c4:	umull	r6, ip, r3, r5
   1a7c8:	mla	r1, r3, sl, ip
   1a7cc:	ldr	ip, [sp, #16]
   1a7d0:	str	r1, [sp, #12]
   1a7d4:	mla	r4, r4, sl, ip
   1a7d8:	mla	r4, r7, r5, r4
   1a7dc:	mvnne	r4, #0
   1a7e0:	subs	r0, r0, r3
   1a7e4:	ldr	r0, [sp, #20]
   1a7e8:	ldr	r7, [sp, #12]
   1a7ec:	sbcs	r0, r0, r4
   1a7f0:	mov	r0, #0
   1a7f4:	mla	r7, r4, r5, r7
   1a7f8:	movwcc	r0, #1
   1a7fc:	cmp	r0, #0
   1a800:	mov	r1, r0
   1a804:	orr	r0, lr, r2
   1a808:	mvnne	r7, #0
   1a80c:	mvnne	r6, #0
   1a810:	orr	r3, r0, r1
   1a814:	b	1b078 <lchmod@@Base+0x4120>
   1a818:	ldr	r0, [sp, #36]	; 0x24
   1a81c:	orr	r8, r8, #2
   1a820:	b	1b09c <lchmod@@Base+0x4144>
   1a824:	cmp	r0, #105	; 0x69
   1a828:	mov	r3, #0
   1a82c:	bne	1a670 <lchmod@@Base+0x3718>
   1a830:	ldrb	r0, [r1, #2]
   1a834:	mov	r1, #1
   1a838:	cmp	r0, #66	; 0x42
   1a83c:	movweq	r1, #3
   1a840:	str	r1, [sp, #28]
   1a844:	b	1a670 <lchmod@@Base+0x3718>
   1a848:	mvn	r0, #0
   1a84c:	mvn	r1, #0
   1a850:	mov	r2, r5
   1a854:	mov	r4, r3
   1a858:	bl	1b984 <lchmod@@Base+0x4a2c>
   1a85c:	subs	r0, r0, r6
   1a860:	mov	r2, #0
   1a864:	sbcs	r0, r1, r7
   1a868:	umull	r0, r1, r6, r5
   1a86c:	movwcc	r2, #1
   1a870:	cmp	r2, #0
   1a874:	mla	r1, r6, r4, r1
   1a878:	mov	r3, r2
   1a87c:	mvnne	r0, #0
   1a880:	mla	r7, r7, r5, r1
   1a884:	mvnne	r7, #0
   1a888:	mov	r6, r0
   1a88c:	b	1b078 <lchmod@@Base+0x4120>
   1a890:	mvn	r0, #0
   1a894:	mvn	r1, #0
   1a898:	mov	r2, r5
   1a89c:	str	r3, [sp, #24]
   1a8a0:	bl	1b984 <lchmod@@Base+0x4a2c>
   1a8a4:	subs	r3, r0, r6
   1a8a8:	mov	ip, r0
   1a8ac:	umull	r4, r0, r6, r5
   1a8b0:	mov	sl, #0
   1a8b4:	sbcs	r3, r1, r7
   1a8b8:	mov	r3, #0
   1a8bc:	movwcc	r3, #1
   1a8c0:	cmp	r3, #0
   1a8c4:	str	r0, [sp, #20]
   1a8c8:	ldr	r0, [sp, #24]
   1a8cc:	mvnne	r4, #0
   1a8d0:	cmp	r3, #0
   1a8d4:	umull	lr, r2, r4, r5
   1a8d8:	mla	r2, r4, r0, r2
   1a8dc:	str	r2, [sp, #16]
   1a8e0:	ldr	r2, [sp, #20]
   1a8e4:	mla	r6, r6, r0, r2
   1a8e8:	ldr	r0, [sp, #16]
   1a8ec:	mla	r6, r7, r5, r6
   1a8f0:	mvnne	r6, #0
   1a8f4:	mla	r7, r6, r5, r0
   1a8f8:	subs	r0, ip, r4
   1a8fc:	sbcs	r0, r1, r6
   1a900:	movwcc	sl, #1
   1a904:	cmp	sl, #0
   1a908:	orr	r3, r3, sl
   1a90c:	mvnne	lr, #0
   1a910:	mvnne	r7, #0
   1a914:	mov	r6, lr
   1a918:	b	1b078 <lchmod@@Base+0x4120>
   1a91c:	mvn	r0, #0
   1a920:	mvn	r1, #0
   1a924:	mov	r2, r5
   1a928:	mov	sl, r3
   1a92c:	bl	1b984 <lchmod@@Base+0x4a2c>
   1a930:	subs	r3, r0, r6
   1a934:	mov	ip, r1
   1a938:	umull	r2, lr, r6, r5
   1a93c:	str	r0, [sp, #20]
   1a940:	sbcs	r3, r1, r7
   1a944:	mov	r1, #0
   1a948:	str	ip, [sp, #16]
   1a94c:	movwcc	r1, #1
   1a950:	mla	r6, r6, sl, lr
   1a954:	mov	lr, #0
   1a958:	cmp	r1, #0
   1a95c:	mla	r7, r7, r5, r6
   1a960:	mvnne	r2, #0
   1a964:	cmp	r1, #0
   1a968:	umull	r3, r4, r2, r5
   1a96c:	mvnne	r7, #0
   1a970:	mla	r4, r2, sl, r4
   1a974:	subs	r2, r0, r2
   1a978:	sbcs	r2, ip, r7
   1a97c:	mla	r4, r7, r5, r4
   1a980:	mov	r2, #0
   1a984:	movwcc	lr, #1
   1a988:	cmp	lr, #0
   1a98c:	mvnne	r3, #0
   1a990:	mvnne	r4, #0
   1a994:	subs	r7, r0, r3
   1a998:	mov	r0, r5
   1a99c:	sbcs	r7, ip, r4
   1a9a0:	umull	r5, r7, r3, r5
   1a9a4:	movwcc	r2, #1
   1a9a8:	cmp	r2, #0
   1a9ac:	mla	r3, r3, sl, r7
   1a9b0:	mvnne	r5, #0
   1a9b4:	cmp	r2, #0
   1a9b8:	mla	r3, r4, r0, r3
   1a9bc:	umull	r6, ip, r5, r0
   1a9c0:	mvnne	r3, #0
   1a9c4:	mla	ip, r5, sl, ip
   1a9c8:	mla	r7, r3, r0, ip
   1a9cc:	ldr	r0, [sp, #20]
   1a9d0:	subs	r0, r0, r5
   1a9d4:	ldr	r0, [sp, #16]
   1a9d8:	sbcs	r0, r0, r3
   1a9dc:	mov	r0, #0
   1a9e0:	movwcc	r0, #1
   1a9e4:	cmp	r0, #0
   1a9e8:	mov	r3, r0
   1a9ec:	orr	r0, r1, lr
   1a9f0:	orr	r0, r0, r2
   1a9f4:	mvnne	r7, #0
   1a9f8:	mvnne	r6, #0
   1a9fc:	orr	r3, r0, r3
   1aa00:	b	1b078 <lchmod@@Base+0x4120>
   1aa04:	mvn	r0, #0
   1aa08:	mvn	r1, #0
   1aa0c:	mov	r2, r5
   1aa10:	mov	r4, r3
   1aa14:	str	r3, [sp, #24]
   1aa18:	bl	1b984 <lchmod@@Base+0x4a2c>
   1aa1c:	umull	r3, r2, r6, r5
   1aa20:	mla	r2, r6, r4, r2
   1aa24:	subs	r6, r0, r6
   1aa28:	sbcs	r6, r1, r7
   1aa2c:	mov	r6, #0
   1aa30:	mla	ip, r7, r5, r2
   1aa34:	ldr	r2, [sp, #24]
   1aa38:	movwcc	r6, #1
   1aa3c:	cmp	r6, #0
   1aa40:	str	r6, [sp, #20]
   1aa44:	mov	r6, #0
   1aa48:	mvnne	r3, #0
   1aa4c:	mvnne	ip, #0
   1aa50:	subs	r4, r0, r3
   1aa54:	umull	r7, lr, r3, r5
   1aa58:	sbcs	r4, r1, ip
   1aa5c:	movwcc	r6, #1
   1aa60:	mla	r3, r3, r2, lr
   1aa64:	cmp	r6, #0
   1aa68:	str	r6, [sp, #16]
   1aa6c:	mvnne	r7, #0
   1aa70:	cmp	r6, #0
   1aa74:	umull	sl, r4, r7, r5
   1aa78:	mla	r4, r7, r2, r4
   1aa7c:	mla	r2, ip, r5, r3
   1aa80:	mvnne	r2, #0
   1aa84:	subs	r3, r0, r7
   1aa88:	mov	ip, #0
   1aa8c:	mla	r6, r2, r5, r4
   1aa90:	sbcs	r2, r1, r2
   1aa94:	mov	r4, r0
   1aa98:	mov	r0, #0
   1aa9c:	movwcc	r0, #1
   1aaa0:	mov	r3, r4
   1aaa4:	cmp	r0, #0
   1aaa8:	str	r0, [sp, #12]
   1aaac:	mov	r0, r1
   1aab0:	str	r3, [sp, #4]
   1aab4:	mvnne	sl, #0
   1aab8:	mvnne	r6, #0
   1aabc:	str	r0, [sp, #8]
   1aac0:	subs	r2, r4, sl
   1aac4:	ldr	r4, [sp, #24]
   1aac8:	sbcs	r2, r1, r6
   1aacc:	umull	r7, r2, sl, r5
   1aad0:	movwcc	ip, #1
   1aad4:	cmp	ip, #0
   1aad8:	mvnne	r7, #0
   1aadc:	mla	r2, sl, r4, r2
   1aae0:	cmp	ip, #0
   1aae4:	mov	sl, #0
   1aae8:	umull	r1, lr, r7, r5
   1aaec:	mla	r2, r6, r5, r2
   1aaf0:	mvnne	r2, #0
   1aaf4:	subs	r6, r3, r7
   1aaf8:	mla	lr, r7, r4, lr
   1aafc:	mla	lr, r2, r5, lr
   1ab00:	sbcs	r2, r0, r2
   1ab04:	mov	r2, #0
   1ab08:	movwcc	sl, #1
   1ab0c:	cmp	sl, #0
   1ab10:	mvnne	r1, #0
   1ab14:	mvnne	lr, #0
   1ab18:	subs	r6, r3, r1
   1ab1c:	ldr	r3, [sp, #24]
   1ab20:	sbcs	r6, r0, lr
   1ab24:	umull	r0, r7, r1, r5
   1ab28:	movwcc	r2, #1
   1ab2c:	cmp	r2, #0
   1ab30:	mvnne	r0, #0
   1ab34:	mla	r1, r1, r3, r7
   1ab38:	cmp	r2, #0
   1ab3c:	umull	r6, r4, r0, r5
   1ab40:	mla	r1, lr, r5, r1
   1ab44:	mvnne	r1, #0
   1ab48:	mla	r4, r0, r3, r4
   1ab4c:	ldr	r3, [sp, #4]
   1ab50:	mla	r7, r1, r5, r4
   1ab54:	ldr	r5, [sp, #16]
   1ab58:	subs	r0, r3, r0
   1ab5c:	ldr	r0, [sp, #8]
   1ab60:	sbcs	r0, r0, r1
   1ab64:	mov	r0, #0
   1ab68:	movwcc	r0, #1
   1ab6c:	cmp	r0, #0
   1ab70:	mov	r1, r0
   1ab74:	ldr	r0, [sp, #20]
   1ab78:	mvnne	r7, #0
   1ab7c:	mvnne	r6, #0
   1ab80:	orr	r0, r0, r5
   1ab84:	ldr	r5, [sp, #12]
   1ab88:	orr	r0, r0, r5
   1ab8c:	orr	r0, r0, ip
   1ab90:	orr	r0, r0, sl
   1ab94:	orr	r0, r0, r2
   1ab98:	orr	r0, r0, r1
   1ab9c:	b	1b018 <lchmod@@Base+0x40c0>
   1aba0:	mov	r1, #0
   1aba4:	lsl	r2, r7, #10
   1aba8:	lsl	r0, r6, #10
   1abac:	lsr	r3, r7, #22
   1abb0:	cmp	r1, r7, lsr #22
   1abb4:	orr	r2, r2, r6, lsr #22
   1abb8:	mvnne	r0, #0
   1abbc:	movwne	r3, #1
   1abc0:	cmp	r1, r7, lsr #22
   1abc4:	b	1b044 <lchmod@@Base+0x40ec>
   1abc8:	mvn	r0, #0
   1abcc:	mvn	r1, #0
   1abd0:	mov	r2, r5
   1abd4:	mov	sl, r3
   1abd8:	bl	1b984 <lchmod@@Base+0x4a2c>
   1abdc:	subs	r2, r0, r6
   1abe0:	mov	ip, r0
   1abe4:	mov	r0, #0
   1abe8:	sbcs	r2, r1, r7
   1abec:	umull	r4, r2, r6, r5
   1abf0:	movwcc	r0, #1
   1abf4:	cmp	r0, #0
   1abf8:	mla	r2, r6, sl, r2
   1abfc:	str	r0, [sp, #20]
   1ac00:	mvnne	r4, #0
   1ac04:	cmp	r0, #0
   1ac08:	mla	r2, r7, r5, r2
   1ac0c:	mov	r0, #0
   1ac10:	umull	lr, r3, r4, r5
   1ac14:	mvnne	r2, #0
   1ac18:	mla	r3, r4, sl, r3
   1ac1c:	mla	r6, r2, r5, r3
   1ac20:	subs	r3, ip, r4
   1ac24:	mov	r3, r1
   1ac28:	sbcs	r2, r1, r2
   1ac2c:	str	r3, [sp, #8]
   1ac30:	movwcc	r0, #1
   1ac34:	cmp	r0, #0
   1ac38:	str	r0, [sp, #16]
   1ac3c:	mov	r0, ip
   1ac40:	mvnne	lr, #0
   1ac44:	mvnne	r6, #0
   1ac48:	str	r0, [sp, #12]
   1ac4c:	subs	r2, ip, lr
   1ac50:	umull	r7, r4, lr, r5
   1ac54:	sbcs	r2, r1, r6
   1ac58:	mov	r2, #0
   1ac5c:	movwcc	r2, #1
   1ac60:	mla	r4, lr, sl, r4
   1ac64:	cmp	r2, #0
   1ac68:	mla	r6, r6, r5, r4
   1ac6c:	mov	r4, #0
   1ac70:	mvnne	r7, #0
   1ac74:	cmp	r2, #0
   1ac78:	umull	r1, ip, r7, r5
   1ac7c:	mvnne	r6, #0
   1ac80:	mla	ip, r7, sl, ip
   1ac84:	subs	r7, r0, r7
   1ac88:	sbcs	r7, r3, r6
   1ac8c:	mla	lr, r6, r5, ip
   1ac90:	mov	ip, #0
   1ac94:	movwcc	ip, #1
   1ac98:	cmp	ip, #0
   1ac9c:	mvnne	r1, #0
   1aca0:	mvnne	lr, #0
   1aca4:	subs	r7, r0, r1
   1aca8:	sbcs	r7, r3, lr
   1acac:	umull	r0, r7, r1, r5
   1acb0:	movwcc	r4, #1
   1acb4:	cmp	r4, #0
   1acb8:	mla	r1, r1, sl, r7
   1acbc:	mvnne	r0, #0
   1acc0:	cmp	r4, #0
   1acc4:	mla	r1, lr, r5, r1
   1acc8:	umull	r6, r3, r0, r5
   1accc:	mvnne	r1, #0
   1acd0:	mla	r3, r0, sl, r3
   1acd4:	mla	r7, r1, r5, r3
   1acd8:	ldr	r3, [sp, #12]
   1acdc:	subs	r0, r3, r0
   1ace0:	ldr	r0, [sp, #8]
   1ace4:	ldr	r3, [sp, #16]
   1ace8:	sbcs	r0, r0, r1
   1acec:	mov	r0, #0
   1acf0:	movwcc	r0, #1
   1acf4:	cmp	r0, #0
   1acf8:	mov	r1, r0
   1acfc:	ldr	r0, [sp, #20]
   1ad00:	mvnne	r7, #0
   1ad04:	mvnne	r6, #0
   1ad08:	orr	r0, r0, r3
   1ad0c:	orr	r0, r0, r2
   1ad10:	orr	r0, r0, ip
   1ad14:	orr	r0, r0, r4
   1ad18:	orr	r3, r0, r1
   1ad1c:	b	1b078 <lchmod@@Base+0x4120>
   1ad20:	mvn	r0, #0
   1ad24:	mvn	r1, #0
   1ad28:	mov	r2, r5
   1ad2c:	mov	sl, r3
   1ad30:	bl	1b984 <lchmod@@Base+0x4a2c>
   1ad34:	umull	r3, r2, r6, r5
   1ad38:	mov	lr, r1
   1ad3c:	mov	r1, r0
   1ad40:	mla	r2, r6, sl, r2
   1ad44:	subs	r6, r0, r6
   1ad48:	mov	r0, #0
   1ad4c:	sbcs	r6, lr, r7
   1ad50:	mla	r2, r7, r5, r2
   1ad54:	movwcc	r0, #1
   1ad58:	cmp	r0, #0
   1ad5c:	str	r0, [sp, #20]
   1ad60:	mov	r0, r1
   1ad64:	mvnne	r3, #0
   1ad68:	mvnne	r2, #0
   1ad6c:	str	r0, [sp, #16]
   1ad70:	subs	r4, r1, r3
   1ad74:	umull	r7, ip, r3, r5
   1ad78:	sbcs	r4, lr, r2
   1ad7c:	mov	r4, #0
   1ad80:	movwcc	r4, #1
   1ad84:	mla	r3, r3, sl, ip
   1ad88:	mov	ip, #0
   1ad8c:	cmp	r4, #0
   1ad90:	mla	r2, r2, r5, r3
   1ad94:	mvnne	r7, #0
   1ad98:	cmp	r4, #0
   1ad9c:	umull	r1, r6, r7, r5
   1ada0:	mvnne	r2, #0
   1ada4:	mla	r6, r7, sl, r6
   1ada8:	mla	r3, r2, r5, r6
   1adac:	subs	r6, r0, r7
   1adb0:	sbcs	r2, lr, r2
   1adb4:	mov	r2, #0
   1adb8:	movwcc	ip, #1
   1adbc:	cmp	ip, #0
   1adc0:	mvnne	r1, #0
   1adc4:	mvnne	r3, #0
   1adc8:	subs	r6, r0, r1
   1adcc:	sbcs	r6, lr, r3
   1add0:	umull	r0, r6, r1, r5
   1add4:	movwcc	r2, #1
   1add8:	cmp	r2, #0
   1addc:	mvnne	r0, #0
   1ade0:	cmp	r2, #0
   1ade4:	str	r6, [sp, #12]
   1ade8:	umull	r6, r7, r0, r5
   1adec:	mla	r7, r0, sl, r7
   1adf0:	str	r7, [sp, #8]
   1adf4:	ldr	r7, [sp, #12]
   1adf8:	mla	r1, r1, sl, r7
   1adfc:	mla	r1, r3, r5, r1
   1ae00:	ldr	r3, [sp, #8]
   1ae04:	mvnne	r1, #0
   1ae08:	mla	r7, r1, r5, r3
   1ae0c:	ldr	r3, [sp, #16]
   1ae10:	subs	r0, r3, r0
   1ae14:	sbcs	r0, lr, r1
   1ae18:	mov	r0, #0
   1ae1c:	movwcc	r0, #1
   1ae20:	cmp	r0, #0
   1ae24:	mov	r1, r0
   1ae28:	ldr	r0, [sp, #20]
   1ae2c:	mvnne	r7, #0
   1ae30:	mvnne	r6, #0
   1ae34:	orr	r0, r0, r4
   1ae38:	orr	r0, r0, ip
   1ae3c:	orr	r0, r0, r2
   1ae40:	orr	r3, r0, r1
   1ae44:	b	1b078 <lchmod@@Base+0x4120>
   1ae48:	mvn	r0, #0
   1ae4c:	mvn	r1, #0
   1ae50:	mov	r2, r5
   1ae54:	mov	sl, r3
   1ae58:	bl	1b984 <lchmod@@Base+0x4a2c>
   1ae5c:	mov	lr, r0
   1ae60:	subs	r0, r0, r6
   1ae64:	mov	r2, #0
   1ae68:	mov	ip, r1
   1ae6c:	str	sl, [sp, #24]
   1ae70:	sbcs	r0, r1, r7
   1ae74:	umull	r3, r1, r6, r5
   1ae78:	str	lr, [sp, #4]
   1ae7c:	movwcc	r2, #1
   1ae80:	cmp	r2, #0
   1ae84:	mla	r6, r6, sl, r1
   1ae88:	mov	r1, #0
   1ae8c:	str	r2, [sp, #20]
   1ae90:	mvnne	r3, #0
   1ae94:	cmp	r2, #0
   1ae98:	mla	r7, r7, r5, r6
   1ae9c:	mov	r2, #0
   1aea0:	umull	r0, r4, r3, r5
   1aea4:	mvnne	r7, #0
   1aea8:	mla	r4, r3, sl, r4
   1aeac:	subs	r3, lr, r3
   1aeb0:	sbcs	r3, ip, r7
   1aeb4:	mla	r4, r7, r5, r4
   1aeb8:	movwcc	r1, #1
   1aebc:	cmp	r1, #0
   1aec0:	str	r1, [sp, #16]
   1aec4:	mvnne	r0, #0
   1aec8:	mvnne	r4, #0
   1aecc:	subs	r3, lr, r0
   1aed0:	sbcs	r3, ip, r4
   1aed4:	umull	r6, r3, r0, r5
   1aed8:	movwcc	r2, #1
   1aedc:	cmp	r2, #0
   1aee0:	mla	r0, r0, sl, r3
   1aee4:	str	r2, [sp, #12]
   1aee8:	mvnne	r6, #0
   1aeec:	cmp	r2, #0
   1aef0:	mla	r0, r4, r5, r0
   1aef4:	ldr	r4, [sp, #24]
   1aef8:	umull	r1, r7, r6, r5
   1aefc:	mvnne	r0, #0
   1af00:	subs	r3, lr, r6
   1af04:	mov	r3, ip
   1af08:	str	r3, [sp]
   1af0c:	mla	r7, r6, sl, r7
   1af10:	mla	r7, r0, r5, r7
   1af14:	sbcs	r0, ip, r0
   1af18:	mov	r0, #0
   1af1c:	movwcc	r0, #1
   1af20:	cmp	r0, #0
   1af24:	str	r0, [sp, #8]
   1af28:	mvnne	r1, #0
   1af2c:	mvnne	r7, #0
   1af30:	subs	r0, lr, r1
   1af34:	sbcs	r0, ip, r7
   1af38:	mov	ip, #0
   1af3c:	umull	r6, r0, r1, r5
   1af40:	movwcc	ip, #1
   1af44:	cmp	ip, #0
   1af48:	mla	r1, r1, r4, r0
   1af4c:	mov	r0, lr
   1af50:	mvnne	r6, #0
   1af54:	cmp	ip, #0
   1af58:	mla	r1, r7, r5, r1
   1af5c:	umull	r2, sl, r6, r5
   1af60:	mvnne	r1, #0
   1af64:	mla	sl, r6, r4, sl
   1af68:	subs	r6, lr, r6
   1af6c:	mov	lr, #0
   1af70:	mla	r7, r1, r5, sl
   1af74:	sbcs	r1, r3, r1
   1af78:	ldr	r1, [sp, #24]
   1af7c:	movwcc	lr, #1
   1af80:	cmp	lr, #0
   1af84:	mvnne	r2, #0
   1af88:	mvnne	r7, #0
   1af8c:	subs	r6, r0, r2
   1af90:	umull	r0, sl, r2, r5
   1af94:	sbcs	r6, r3, r7
   1af98:	mov	r3, #0
   1af9c:	movwcc	r3, #1
   1afa0:	mla	r2, r2, r1, sl
   1afa4:	cmp	r3, #0
   1afa8:	mla	r2, r7, r5, r2
   1afac:	mvnne	r0, #0
   1afb0:	cmp	r3, #0
   1afb4:	umull	r6, r4, r0, r5
   1afb8:	mvnne	r2, #0
   1afbc:	mla	r4, r0, r1, r4
   1afc0:	ldr	r1, [sp, #4]
   1afc4:	mla	r7, r2, r5, r4
   1afc8:	ldr	r5, [sp, #16]
   1afcc:	subs	r0, r1, r0
   1afd0:	ldr	r0, [sp]
   1afd4:	sbcs	r0, r0, r2
   1afd8:	mov	r0, #0
   1afdc:	movwcc	r0, #1
   1afe0:	cmp	r0, #0
   1afe4:	mov	r2, r0
   1afe8:	ldr	r0, [sp, #20]
   1afec:	mvnne	r7, #0
   1aff0:	mvnne	r6, #0
   1aff4:	orr	r0, r0, r5
   1aff8:	ldr	r5, [sp, #12]
   1affc:	orr	r0, r0, r5
   1b000:	ldr	r5, [sp, #8]
   1b004:	orr	r0, r0, r5
   1b008:	orr	r0, r0, ip
   1b00c:	orr	r0, r0, lr
   1b010:	orr	r0, r0, r3
   1b014:	orr	r0, r0, r2
   1b018:	and	r3, r0, #1
   1b01c:	b	1b078 <lchmod@@Base+0x4120>
   1b020:	mov	r1, #0
   1b024:	lsl	r2, r7, #9
   1b028:	lsl	r0, r6, #9
   1b02c:	lsr	r3, r7, #23
   1b030:	cmp	r1, r7, lsr #23
   1b034:	orr	r2, r2, r6, lsr #23
   1b038:	mvnne	r0, #0
   1b03c:	movwne	r3, #1
   1b040:	cmp	r1, r7, lsr #23
   1b044:	mvnne	r2, #0
   1b048:	mov	r6, r0
   1b04c:	mov	r7, r2
   1b050:	b	1b078 <lchmod@@Base+0x4120>
   1b054:	lsl	r1, r7, #1
   1b058:	cmp	r7, #0
   1b05c:	lsl	r0, r6, #1
   1b060:	lsr	r3, r7, #31
   1b064:	orr	r1, r1, r6, lsr #31
   1b068:	mvnmi	r0, #0
   1b06c:	mvnmi	r1, #0
   1b070:	mov	r6, r0
   1b074:	mov	r7, r1
   1b078:	ldr	r1, [sp, #32]
   1b07c:	ldr	r2, [sp, #28]
   1b080:	orr	r8, r3, r8
   1b084:	add	r0, r1, r2
   1b088:	str	r0, [r9]
   1b08c:	ldrb	r0, [r1, r2]
   1b090:	cmp	r0, #0
   1b094:	orrne	r8, r8, #2
   1b098:	ldr	r0, [sp, #36]	; 0x24
   1b09c:	strd	r6, [r0]
   1b0a0:	mov	r0, r8
   1b0a4:	sub	sp, fp, #28
   1b0a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0ac:	movw	r0, #51612	; 0xc99c
   1b0b0:	movw	r1, #51650	; 0xc9c2
   1b0b4:	movw	r3, #51666	; 0xc9d2
   1b0b8:	mov	r2, #85	; 0x55
   1b0bc:	movt	r0, #1
   1b0c0:	movt	r1, #1
   1b0c4:	movt	r3, #1
   1b0c8:	bl	11bc0 <__assert_fail@plt>
   1b0cc:	clz	r2, r1
   1b0d0:	clz	r3, r0
   1b0d4:	lsr	r2, r2, #5
   1b0d8:	lsr	r3, r3, #5
   1b0dc:	orrs	r2, r3, r2
   1b0e0:	movwne	r1, #1
   1b0e4:	movwne	r0, #1
   1b0e8:	cmp	r1, #0
   1b0ec:	beq	1b11c <lchmod@@Base+0x41c4>
   1b0f0:	mvn	r2, #-2147483648	; 0x80000000
   1b0f4:	udiv	r2, r2, r1
   1b0f8:	cmp	r2, r0
   1b0fc:	bcs	1b11c <lchmod@@Base+0x41c4>
   1b100:	push	{fp, lr}
   1b104:	mov	fp, sp
   1b108:	bl	11a04 <__errno_location@plt>
   1b10c:	mov	r1, #12
   1b110:	str	r1, [r0]
   1b114:	mov	r0, #0
   1b118:	pop	{fp, pc}
   1b11c:	b	117a0 <calloc@plt>
   1b120:	cmp	r0, #0
   1b124:	movweq	r0, #1
   1b128:	cmn	r0, #1
   1b12c:	ble	1b134 <lchmod@@Base+0x41dc>
   1b130:	b	11944 <malloc@plt>
   1b134:	push	{fp, lr}
   1b138:	mov	fp, sp
   1b13c:	bl	11a04 <__errno_location@plt>
   1b140:	mov	r1, #12
   1b144:	str	r1, [r0]
   1b148:	mov	r0, #0
   1b14c:	pop	{fp, pc}
   1b150:	push	{fp, lr}
   1b154:	mov	fp, sp
   1b158:	cmp	r0, #0
   1b15c:	beq	1b178 <lchmod@@Base+0x4220>
   1b160:	cmp	r1, #0
   1b164:	beq	1b184 <lchmod@@Base+0x422c>
   1b168:	cmn	r1, #1
   1b16c:	ble	1b190 <lchmod@@Base+0x4238>
   1b170:	pop	{fp, lr}
   1b174:	b	11878 <realloc@plt>
   1b178:	mov	r0, r1
   1b17c:	pop	{fp, lr}
   1b180:	b	1b120 <lchmod@@Base+0x41c8>
   1b184:	bl	136b8 <__assert_fail@plt+0x1af8>
   1b188:	mov	r0, #0
   1b18c:	pop	{fp, pc}
   1b190:	bl	11a04 <__errno_location@plt>
   1b194:	mov	r1, #12
   1b198:	str	r1, [r0]
   1b19c:	mov	r0, #0
   1b1a0:	pop	{fp, pc}
   1b1a4:	sub	r0, r0, #1
   1b1a8:	ldrb	r3, [r0, #1]!
   1b1ac:	cmp	r3, #47	; 0x2f
   1b1b0:	beq	1b1a8 <lchmod@@Base+0x4250>
   1b1b4:	mov	r2, #0
   1b1b8:	mov	r1, r0
   1b1bc:	b	1b1c8 <lchmod@@Base+0x4270>
   1b1c0:	ldrb	r3, [r1, #1]!
   1b1c4:	mov	r2, #1
   1b1c8:	uxtb	r3, r3
   1b1cc:	cmp	r3, #47	; 0x2f
   1b1d0:	beq	1b1c0 <lchmod@@Base+0x4268>
   1b1d4:	cmp	r3, #0
   1b1d8:	bxeq	lr
   1b1dc:	tst	r2, #1
   1b1e0:	mov	r2, #0
   1b1e4:	movne	r0, r1
   1b1e8:	ldrb	r3, [r1, #1]!
   1b1ec:	b	1b1c8 <lchmod@@Base+0x4270>
   1b1f0:	push	{r4, sl, fp, lr}
   1b1f4:	add	fp, sp, #8
   1b1f8:	mov	r4, r0
   1b1fc:	bl	119c8 <strlen@plt>
   1b200:	mov	r1, r0
   1b204:	sub	r2, r4, #1
   1b208:	mov	r0, r1
   1b20c:	cmp	r1, #2
   1b210:	bcc	1b224 <lchmod@@Base+0x42cc>
   1b214:	ldrb	r3, [r2, r0]
   1b218:	sub	r1, r0, #1
   1b21c:	cmp	r3, #47	; 0x2f
   1b220:	beq	1b208 <lchmod@@Base+0x42b0>
   1b224:	pop	{r4, sl, fp, pc}
   1b228:	push	{r4, r5, r6, sl, fp, lr}
   1b22c:	add	fp, sp, #16
   1b230:	mov	r4, r0
   1b234:	bl	11908 <__fpending@plt>
   1b238:	ldr	r6, [r4]
   1b23c:	mov	r5, r0
   1b240:	mov	r0, r4
   1b244:	bl	1b39c <lchmod@@Base+0x4444>
   1b248:	tst	r6, #32
   1b24c:	bne	1b284 <lchmod@@Base+0x432c>
   1b250:	cmp	r0, #0
   1b254:	mov	r4, r0
   1b258:	mvnne	r4, #0
   1b25c:	cmp	r5, #0
   1b260:	bne	1b290 <lchmod@@Base+0x4338>
   1b264:	cmp	r0, #0
   1b268:	beq	1b290 <lchmod@@Base+0x4338>
   1b26c:	bl	11a04 <__errno_location@plt>
   1b270:	ldr	r0, [r0]
   1b274:	subs	r4, r0, #9
   1b278:	mvnne	r4, #0
   1b27c:	mov	r0, r4
   1b280:	pop	{r4, r5, r6, sl, fp, pc}
   1b284:	mvn	r4, #0
   1b288:	cmp	r0, #0
   1b28c:	beq	1b298 <lchmod@@Base+0x4340>
   1b290:	mov	r0, r4
   1b294:	pop	{r4, r5, r6, sl, fp, pc}
   1b298:	bl	11a04 <__errno_location@plt>
   1b29c:	mov	r1, #0
   1b2a0:	str	r1, [r0]
   1b2a4:	mov	r0, r4
   1b2a8:	pop	{r4, r5, r6, sl, fp, pc}
   1b2ac:	movw	r2, #62998	; 0xf616
   1b2b0:	mov	r1, #0
   1b2b4:	movt	r2, #149	; 0x95
   1b2b8:	str	r1, [r0, #16]
   1b2bc:	str	r1, [r0, #20]
   1b2c0:	str	r2, [r0, #24]
   1b2c4:	bx	lr
   1b2c8:	push	{r4, r5, r6, r7, r9, sl, fp, lr}
   1b2cc:	add	fp, sp, #24
   1b2d0:	ldr	r2, [r0, #24]
   1b2d4:	movw	r3, #62998	; 0xf616
   1b2d8:	movt	r3, #149	; 0x95
   1b2dc:	cmp	r2, r3
   1b2e0:	bne	1b37c <lchmod@@Base+0x4424>
   1b2e4:	add	r3, r0, #16
   1b2e8:	add	ip, r0, #8
   1b2ec:	ldrd	r4, [r3]
   1b2f0:	orrs	r2, r4, r5
   1b2f4:	beq	1b330 <lchmod@@Base+0x43d8>
   1b2f8:	ldr	r6, [r1, #96]	; 0x60
   1b2fc:	ldr	r9, [r1, #100]	; 0x64
   1b300:	ldm	r0, {r2, r7}
   1b304:	eor	r7, r9, r7
   1b308:	eor	r2, r6, r2
   1b30c:	orrs	r2, r2, r7
   1b310:	bne	1b330 <lchmod@@Base+0x43d8>
   1b314:	ldm	ip, {r2, r7}
   1b318:	ldm	r1, {r6, r9}
   1b31c:	eor	r7, r9, r7
   1b320:	eor	r2, r6, r2
   1b324:	orrs	r2, r2, r7
   1b328:	mov	r2, #1
   1b32c:	beq	1b368 <lchmod@@Base+0x4410>
   1b330:	adds	r6, r4, #1
   1b334:	adc	r7, r5, #0
   1b338:	and	r2, r6, r4
   1b33c:	strd	r6, [r3]
   1b340:	and	r3, r7, r5
   1b344:	orrs	r2, r2, r3
   1b348:	mov	r2, #0
   1b34c:	bne	1b368 <lchmod@@Base+0x4410>
   1b350:	orrs	r3, r6, r7
   1b354:	beq	1b370 <lchmod@@Base+0x4418>
   1b358:	ldrd	r4, [r1]
   1b35c:	strd	r4, [ip]
   1b360:	ldrd	r4, [r1, #96]	; 0x60
   1b364:	strd	r4, [r0]
   1b368:	mov	r0, r2
   1b36c:	pop	{r4, r5, r6, r7, r9, sl, fp, pc}
   1b370:	mov	r2, #1
   1b374:	mov	r0, r2
   1b378:	pop	{r4, r5, r6, r7, r9, sl, fp, pc}
   1b37c:	movw	r0, #51745	; 0xca21
   1b380:	movw	r1, #51769	; 0xca39
   1b384:	movw	r3, #51787	; 0xca4b
   1b388:	mov	r2, #60	; 0x3c
   1b38c:	movt	r0, #1
   1b390:	movt	r1, #1
   1b394:	movt	r3, #1
   1b398:	bl	11bc0 <__assert_fail@plt>
   1b39c:	push	{r4, r5, r6, sl, fp, lr}
   1b3a0:	add	fp, sp, #16
   1b3a4:	sub	sp, sp, #8
   1b3a8:	mov	r4, r0
   1b3ac:	bl	11a40 <fileno@plt>
   1b3b0:	cmn	r0, #1
   1b3b4:	ble	1b428 <lchmod@@Base+0x44d0>
   1b3b8:	mov	r0, r4
   1b3bc:	bl	1195c <__freading@plt>
   1b3c0:	cmp	r0, #0
   1b3c4:	beq	1b3f0 <lchmod@@Base+0x4498>
   1b3c8:	mov	r0, r4
   1b3cc:	bl	11a40 <fileno@plt>
   1b3d0:	mov	r1, #1
   1b3d4:	mov	r2, #0
   1b3d8:	mov	r3, #0
   1b3dc:	str	r1, [sp]
   1b3e0:	bl	118e4 <lseek64@plt>
   1b3e4:	and	r0, r0, r1
   1b3e8:	cmn	r0, #1
   1b3ec:	beq	1b428 <lchmod@@Base+0x44d0>
   1b3f0:	mov	r0, r4
   1b3f4:	bl	1b654 <lchmod@@Base+0x46fc>
   1b3f8:	cmp	r0, #0
   1b3fc:	beq	1b428 <lchmod@@Base+0x44d0>
   1b400:	bl	11a04 <__errno_location@plt>
   1b404:	ldr	r6, [r0]
   1b408:	mov	r5, r0
   1b40c:	mov	r0, r4
   1b410:	bl	11a58 <fclose@plt>
   1b414:	cmp	r6, #0
   1b418:	strne	r6, [r5]
   1b41c:	mvnne	r0, #0
   1b420:	sub	sp, fp, #16
   1b424:	pop	{r4, r5, r6, sl, fp, pc}
   1b428:	mov	r0, r4
   1b42c:	sub	sp, fp, #16
   1b430:	pop	{r4, r5, r6, sl, fp, lr}
   1b434:	b	11a58 <fclose@plt>
   1b438:	sub	sp, sp, #8
   1b43c:	push	{r4, r5, r6, r7, fp, lr}
   1b440:	add	fp, sp, #16
   1b444:	sub	sp, sp, #8
   1b448:	mov	r5, r0
   1b44c:	add	r0, fp, #8
   1b450:	cmp	r1, #11
   1b454:	str	r2, [fp, #8]
   1b458:	str	r3, [fp, #12]
   1b45c:	str	r0, [sp, #4]
   1b460:	bhi	1b49c <lchmod@@Base+0x4544>
   1b464:	mov	r0, #1
   1b468:	movw	r2, #1300	; 0x514
   1b46c:	tst	r2, r0, lsl r1
   1b470:	bne	1b55c <lchmod@@Base+0x4604>
   1b474:	movw	r2, #2570	; 0xa0a
   1b478:	tst	r2, r0, lsl r1
   1b47c:	bne	1b4c4 <lchmod@@Base+0x456c>
   1b480:	cmp	r1, #0
   1b484:	bne	1b49c <lchmod@@Base+0x4544>
   1b488:	ldr	r0, [sp, #4]
   1b48c:	add	r1, r0, #4
   1b490:	str	r1, [sp, #4]
   1b494:	mov	r1, #0
   1b498:	b	1b568 <lchmod@@Base+0x4610>
   1b49c:	sub	r0, r1, #1024	; 0x400
   1b4a0:	cmp	r0, #10
   1b4a4:	bhi	1b55c <lchmod@@Base+0x4604>
   1b4a8:	mov	r2, #1
   1b4ac:	movw	r3, #645	; 0x285
   1b4b0:	tst	r3, r2, lsl r0
   1b4b4:	bne	1b55c <lchmod@@Base+0x4604>
   1b4b8:	movw	r3, #1282	; 0x502
   1b4bc:	tst	r3, r2, lsl r0
   1b4c0:	beq	1b4d0 <lchmod@@Base+0x4578>
   1b4c4:	mov	r0, r5
   1b4c8:	bl	11a70 <fcntl64@plt>
   1b4cc:	b	1b574 <lchmod@@Base+0x461c>
   1b4d0:	cmp	r0, #6
   1b4d4:	bne	1b55c <lchmod@@Base+0x4604>
   1b4d8:	ldr	r0, [sp, #4]
   1b4dc:	movw	r7, #54064	; 0xd330
   1b4e0:	movt	r7, #2
   1b4e4:	add	r1, r0, #4
   1b4e8:	str	r1, [sp, #4]
   1b4ec:	ldr	r6, [r0]
   1b4f0:	ldr	r0, [r7]
   1b4f4:	cmp	r0, #0
   1b4f8:	bmi	1b598 <lchmod@@Base+0x4640>
   1b4fc:	mov	r0, r5
   1b500:	movw	r1, #1030	; 0x406
   1b504:	mov	r2, r6
   1b508:	bl	11a70 <fcntl64@plt>
   1b50c:	mov	r4, r0
   1b510:	cmn	r0, #1
   1b514:	bgt	1b58c <lchmod@@Base+0x4634>
   1b518:	bl	11a04 <__errno_location@plt>
   1b51c:	ldr	r0, [r0]
   1b520:	cmp	r0, #22
   1b524:	bne	1b58c <lchmod@@Base+0x4634>
   1b528:	mov	r0, r5
   1b52c:	mov	r1, #0
   1b530:	mov	r2, r6
   1b534:	bl	11a70 <fcntl64@plt>
   1b538:	mov	r4, r0
   1b53c:	cmp	r0, #0
   1b540:	bmi	1b578 <lchmod@@Base+0x4620>
   1b544:	mvn	r0, #0
   1b548:	str	r0, [r7]
   1b54c:	mov	r0, #1
   1b550:	cmp	r0, #0
   1b554:	bne	1b5c4 <lchmod@@Base+0x466c>
   1b558:	b	1b578 <lchmod@@Base+0x4620>
   1b55c:	ldr	r0, [sp, #4]
   1b560:	add	r2, r0, #4
   1b564:	str	r2, [sp, #4]
   1b568:	ldr	r2, [r0]
   1b56c:	mov	r0, r5
   1b570:	bl	11a70 <fcntl64@plt>
   1b574:	mov	r4, r0
   1b578:	mov	r0, r4
   1b57c:	sub	sp, fp, #16
   1b580:	pop	{r4, r5, r6, r7, fp, lr}
   1b584:	add	sp, sp, #8
   1b588:	bx	lr
   1b58c:	mov	r0, #1
   1b590:	str	r0, [r7]
   1b594:	b	1b578 <lchmod@@Base+0x4620>
   1b598:	mov	r0, r5
   1b59c:	mov	r1, #0
   1b5a0:	mov	r2, r6
   1b5a4:	bl	11a70 <fcntl64@plt>
   1b5a8:	mov	r4, r0
   1b5ac:	ldr	r0, [r7]
   1b5b0:	add	r0, r0, #1
   1b5b4:	clz	r0, r0
   1b5b8:	lsr	r0, r0, #5
   1b5bc:	cmp	r0, #0
   1b5c0:	beq	1b578 <lchmod@@Base+0x4620>
   1b5c4:	cmp	r4, #0
   1b5c8:	bmi	1b578 <lchmod@@Base+0x4620>
   1b5cc:	mov	r0, r4
   1b5d0:	mov	r1, #1
   1b5d4:	bl	11a70 <fcntl64@plt>
   1b5d8:	cmp	r0, #0
   1b5dc:	bmi	1b5f8 <lchmod@@Base+0x46a0>
   1b5e0:	orr	r2, r0, #1
   1b5e4:	mov	r0, r4
   1b5e8:	mov	r1, #2
   1b5ec:	bl	11a70 <fcntl64@plt>
   1b5f0:	cmn	r0, #1
   1b5f4:	bne	1b578 <lchmod@@Base+0x4620>
   1b5f8:	bl	11a04 <__errno_location@plt>
   1b5fc:	ldr	r6, [r0]
   1b600:	mov	r5, r0
   1b604:	mov	r0, r4
   1b608:	bl	11b6c <close@plt>
   1b60c:	str	r6, [r5]
   1b610:	mvn	r4, #0
   1b614:	b	1b578 <lchmod@@Base+0x4620>
   1b618:	sub	sp, sp, #8
   1b61c:	push	{fp, lr}
   1b620:	mov	fp, sp
   1b624:	sub	sp, sp, #8
   1b628:	str	r2, [fp, #8]
   1b62c:	str	r3, [fp, #12]
   1b630:	tst	r1, #64	; 0x40
   1b634:	mov	r2, #0
   1b638:	ldrne	r2, [fp, #8]
   1b63c:	bl	1192c <open64@plt>
   1b640:	bl	19730 <lchmod@@Base+0x27d8>
   1b644:	mov	sp, fp
   1b648:	pop	{fp, lr}
   1b64c:	add	sp, sp, #8
   1b650:	bx	lr
   1b654:	push	{r4, sl, fp, lr}
   1b658:	add	fp, sp, #8
   1b65c:	sub	sp, sp, #8
   1b660:	mov	r4, r0
   1b664:	cmp	r0, #0
   1b668:	beq	1b6a0 <lchmod@@Base+0x4748>
   1b66c:	mov	r0, r4
   1b670:	bl	1195c <__freading@plt>
   1b674:	cmp	r0, #0
   1b678:	beq	1b6a0 <lchmod@@Base+0x4748>
   1b67c:	ldrb	r0, [r4, #1]
   1b680:	tst	r0, #1
   1b684:	beq	1b6a0 <lchmod@@Base+0x4748>
   1b688:	mov	r0, #1
   1b68c:	mov	r2, #0
   1b690:	mov	r3, #0
   1b694:	str	r0, [sp]
   1b698:	mov	r0, r4
   1b69c:	bl	1b6b0 <lchmod@@Base+0x4758>
   1b6a0:	mov	r0, r4
   1b6a4:	sub	sp, fp, #8
   1b6a8:	pop	{r4, sl, fp, lr}
   1b6ac:	b	117e8 <fflush@plt>
   1b6b0:	push	{r4, r5, r6, r7, fp, lr}
   1b6b4:	add	fp, sp, #16
   1b6b8:	sub	sp, sp, #8
   1b6bc:	mov	r4, r0
   1b6c0:	ldr	r0, [r0, #4]
   1b6c4:	mov	r5, r3
   1b6c8:	mov	r6, r2
   1b6cc:	ldr	r1, [r4, #8]
   1b6d0:	cmp	r1, r0
   1b6d4:	bne	1b6f0 <lchmod@@Base+0x4798>
   1b6d8:	ldrd	r0, [r4, #16]
   1b6dc:	cmp	r1, r0
   1b6e0:	bne	1b6f0 <lchmod@@Base+0x4798>
   1b6e4:	ldr	r0, [r4, #36]	; 0x24
   1b6e8:	cmp	r0, #0
   1b6ec:	beq	1b708 <lchmod@@Base+0x47b0>
   1b6f0:	mov	r0, r4
   1b6f4:	mov	r2, r6
   1b6f8:	mov	r3, r5
   1b6fc:	sub	sp, fp, #16
   1b700:	pop	{r4, r5, r6, r7, fp, lr}
   1b704:	b	11a64 <fseeko64@plt>
   1b708:	ldr	r7, [fp, #8]
   1b70c:	mov	r0, r4
   1b710:	bl	11a40 <fileno@plt>
   1b714:	mov	r2, r6
   1b718:	mov	r3, r5
   1b71c:	str	r7, [sp]
   1b720:	bl	118e4 <lseek64@plt>
   1b724:	and	r2, r0, r1
   1b728:	cmn	r2, #1
   1b72c:	beq	1b74c <lchmod@@Base+0x47f4>
   1b730:	strd	r0, [r4, #80]	; 0x50
   1b734:	ldr	r0, [r4]
   1b738:	bic	r0, r0, #16
   1b73c:	str	r0, [r4]
   1b740:	mov	r0, #0
   1b744:	sub	sp, fp, #16
   1b748:	pop	{r4, r5, r6, r7, fp, pc}
   1b74c:	mvn	r0, #0
   1b750:	sub	sp, fp, #16
   1b754:	pop	{r4, r5, r6, r7, fp, pc}
   1b758:	ldrb	r2, [r0]
   1b75c:	cmp	r2, #0
   1b760:	beq	1b784 <lchmod@@Base+0x482c>
   1b764:	add	r3, r0, #1
   1b768:	mov	r0, #0
   1b76c:	ror	r0, r0, #23
   1b770:	uxtab	r0, r0, r2
   1b774:	ldrb	r2, [r3], #1
   1b778:	cmp	r2, #0
   1b77c:	bne	1b76c <lchmod@@Base+0x4814>
   1b780:	b	1b788 <lchmod@@Base+0x4830>
   1b784:	mov	r0, #0
   1b788:	udiv	r2, r0, r1
   1b78c:	mls	r0, r2, r1, r0
   1b790:	bx	lr
   1b794:	push	{fp, lr}
   1b798:	mov	fp, sp
   1b79c:	mov	r0, #14
   1b7a0:	bl	11aa0 <nl_langinfo@plt>
   1b7a4:	movw	r1, #50051	; 0xc383
   1b7a8:	cmp	r0, #0
   1b7ac:	movt	r1, #1
   1b7b0:	movne	r1, r0
   1b7b4:	movw	r0, #51854	; 0xca8e
   1b7b8:	ldrb	r2, [r1]
   1b7bc:	movt	r0, #1
   1b7c0:	cmp	r2, #0
   1b7c4:	movne	r0, r1
   1b7c8:	pop	{fp, pc}
   1b7cc:	push	{r4, r5, r6, r7, fp, lr}
   1b7d0:	add	fp, sp, #16
   1b7d4:	sub	sp, sp, #8
   1b7d8:	cmp	r0, #0
   1b7dc:	add	r5, sp, #4
   1b7e0:	mov	r7, r2
   1b7e4:	mov	r4, r1
   1b7e8:	movne	r5, r0
   1b7ec:	mov	r0, r5
   1b7f0:	bl	11914 <mbrtowc@plt>
   1b7f4:	mov	r6, r0
   1b7f8:	cmp	r7, #0
   1b7fc:	beq	1b824 <lchmod@@Base+0x48cc>
   1b800:	cmn	r6, #2
   1b804:	bcc	1b824 <lchmod@@Base+0x48cc>
   1b808:	mov	r0, #0
   1b80c:	bl	1b878 <lchmod@@Base+0x4920>
   1b810:	cmp	r0, #0
   1b814:	bne	1b824 <lchmod@@Base+0x48cc>
   1b818:	ldrb	r0, [r4]
   1b81c:	mov	r6, #1
   1b820:	str	r0, [r5]
   1b824:	mov	r0, r6
   1b828:	sub	sp, fp, #16
   1b82c:	pop	{r4, r5, r6, r7, fp, pc}
   1b830:	cmp	r2, #0
   1b834:	beq	1b864 <lchmod@@Base+0x490c>
   1b838:	mvn	r3, #0
   1b83c:	udiv	r3, r3, r2
   1b840:	cmp	r3, r1
   1b844:	bcs	1b864 <lchmod@@Base+0x490c>
   1b848:	push	{fp, lr}
   1b84c:	mov	fp, sp
   1b850:	bl	11a04 <__errno_location@plt>
   1b854:	mov	r1, #12
   1b858:	str	r1, [r0]
   1b85c:	mov	r0, #0
   1b860:	pop	{fp, pc}
   1b864:	mul	r1, r2, r1
   1b868:	b	1b150 <lchmod@@Base+0x41f8>
   1b86c:	mov	r1, #0
   1b870:	mov	r2, #3
   1b874:	b	1b438 <lchmod@@Base+0x44e0>
   1b878:	push	{r4, sl, fp, lr}
   1b87c:	add	fp, sp, #8
   1b880:	sub	sp, sp, #264	; 0x108
   1b884:	add	r1, sp, #7
   1b888:	movw	r2, #257	; 0x101
   1b88c:	bl	1b8e4 <lchmod@@Base+0x498c>
   1b890:	mov	r4, #0
   1b894:	cmp	r0, #0
   1b898:	bne	1b8d8 <lchmod@@Base+0x4980>
   1b89c:	movw	r1, #51860	; 0xca94
   1b8a0:	add	r0, sp, #7
   1b8a4:	mov	r2, #2
   1b8a8:	movt	r1, #1
   1b8ac:	bl	119bc <bcmp@plt>
   1b8b0:	cmp	r0, #0
   1b8b4:	beq	1b8d8 <lchmod@@Base+0x4980>
   1b8b8:	movw	r1, #51862	; 0xca96
   1b8bc:	add	r0, sp, #7
   1b8c0:	mov	r2, #6
   1b8c4:	movt	r1, #1
   1b8c8:	bl	119bc <bcmp@plt>
   1b8cc:	cmp	r0, #0
   1b8d0:	mov	r4, r0
   1b8d4:	movwne	r4, #1
   1b8d8:	mov	r0, r4
   1b8dc:	sub	sp, fp, #8
   1b8e0:	pop	{r4, sl, fp, pc}
   1b8e4:	push	{r4, r5, r6, r7, fp, lr}
   1b8e8:	add	fp, sp, #16
   1b8ec:	mov	r4, r1
   1b8f0:	mov	r1, #0
   1b8f4:	mov	r6, r2
   1b8f8:	bl	11a7c <setlocale@plt>
   1b8fc:	cmp	r0, #0
   1b900:	beq	1b930 <lchmod@@Base+0x49d8>
   1b904:	mov	r7, r0
   1b908:	bl	119c8 <strlen@plt>
   1b90c:	cmp	r0, r6
   1b910:	bcs	1b94c <lchmod@@Base+0x49f4>
   1b914:	add	r2, r0, #1
   1b918:	mov	r0, r4
   1b91c:	mov	r1, r7
   1b920:	bl	11830 <memcpy@plt>
   1b924:	mov	r5, #0
   1b928:	mov	r0, r5
   1b92c:	pop	{r4, r5, r6, r7, fp, pc}
   1b930:	mov	r5, #22
   1b934:	cmp	r6, #0
   1b938:	beq	1b974 <lchmod@@Base+0x4a1c>
   1b93c:	mov	r0, #0
   1b940:	strb	r0, [r4]
   1b944:	mov	r0, r5
   1b948:	pop	{r4, r5, r6, r7, fp, pc}
   1b94c:	mov	r5, #34	; 0x22
   1b950:	cmp	r6, #0
   1b954:	beq	1b974 <lchmod@@Base+0x4a1c>
   1b958:	sub	r6, r6, #1
   1b95c:	mov	r0, r4
   1b960:	mov	r1, r7
   1b964:	mov	r2, r6
   1b968:	bl	11830 <memcpy@plt>
   1b96c:	mov	r0, #0
   1b970:	strb	r0, [r4, r6]
   1b974:	mov	r0, r5
   1b978:	pop	{r4, r5, r6, r7, fp, pc}
   1b97c:	mov	r1, #0
   1b980:	b	11a7c <setlocale@plt>
   1b984:	cmp	r3, #0
   1b988:	cmpeq	r2, #0
   1b98c:	bne	1b9a4 <lchmod@@Base+0x4a4c>
   1b990:	cmp	r1, #0
   1b994:	cmpeq	r0, #0
   1b998:	mvnne	r1, #0
   1b99c:	mvnne	r0, #0
   1b9a0:	b	1b9c0 <lchmod@@Base+0x4a68>
   1b9a4:	sub	sp, sp, #8
   1b9a8:	push	{sp, lr}
   1b9ac:	bl	1b9d0 <lchmod@@Base+0x4a78>
   1b9b0:	ldr	lr, [sp, #4]
   1b9b4:	add	sp, sp, #8
   1b9b8:	pop	{r2, r3}
   1b9bc:	bx	lr
   1b9c0:	push	{r1, lr}
   1b9c4:	mov	r0, #8
   1b9c8:	bl	117b8 <raise@plt>
   1b9cc:	pop	{r1, pc}
   1b9d0:	cmp	r1, r3
   1b9d4:	cmpeq	r0, r2
   1b9d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9dc:	mov	r4, r0
   1b9e0:	movcc	r0, #0
   1b9e4:	mov	r5, r1
   1b9e8:	ldr	lr, [sp, #36]	; 0x24
   1b9ec:	movcc	r1, r0
   1b9f0:	bcc	1baec <lchmod@@Base+0x4b94>
   1b9f4:	cmp	r3, #0
   1b9f8:	clzeq	ip, r2
   1b9fc:	clzne	ip, r3
   1ba00:	addeq	ip, ip, #32
   1ba04:	cmp	r5, #0
   1ba08:	clzeq	r1, r4
   1ba0c:	addeq	r1, r1, #32
   1ba10:	clzne	r1, r5
   1ba14:	sub	ip, ip, r1
   1ba18:	sub	sl, ip, #32
   1ba1c:	lsl	r9, r3, ip
   1ba20:	rsb	fp, ip, #32
   1ba24:	orr	r9, r9, r2, lsl sl
   1ba28:	orr	r9, r9, r2, lsr fp
   1ba2c:	lsl	r8, r2, ip
   1ba30:	cmp	r5, r9
   1ba34:	cmpeq	r4, r8
   1ba38:	movcc	r0, #0
   1ba3c:	movcc	r1, r0
   1ba40:	bcc	1ba5c <lchmod@@Base+0x4b04>
   1ba44:	mov	r0, #1
   1ba48:	subs	r4, r4, r8
   1ba4c:	lsl	r1, r0, sl
   1ba50:	orr	r1, r1, r0, lsr fp
   1ba54:	lsl	r0, r0, ip
   1ba58:	sbc	r5, r5, r9
   1ba5c:	cmp	ip, #0
   1ba60:	beq	1baec <lchmod@@Base+0x4b94>
   1ba64:	lsr	r6, r8, #1
   1ba68:	orr	r6, r6, r9, lsl #31
   1ba6c:	lsr	r7, r9, #1
   1ba70:	mov	r2, ip
   1ba74:	b	1ba98 <lchmod@@Base+0x4b40>
   1ba78:	subs	r3, r4, r6
   1ba7c:	sbc	r8, r5, r7
   1ba80:	adds	r3, r3, r3
   1ba84:	adc	r8, r8, r8
   1ba88:	adds	r4, r3, #1
   1ba8c:	adc	r5, r8, #0
   1ba90:	subs	r2, r2, #1
   1ba94:	beq	1bab4 <lchmod@@Base+0x4b5c>
   1ba98:	cmp	r5, r7
   1ba9c:	cmpeq	r4, r6
   1baa0:	bcs	1ba78 <lchmod@@Base+0x4b20>
   1baa4:	adds	r4, r4, r4
   1baa8:	adc	r5, r5, r5
   1baac:	subs	r2, r2, #1
   1bab0:	bne	1ba98 <lchmod@@Base+0x4b40>
   1bab4:	lsr	r3, r4, ip
   1bab8:	orr	r3, r3, r5, lsl fp
   1babc:	lsr	r2, r5, ip
   1bac0:	orr	r3, r3, r5, lsr sl
   1bac4:	adds	r0, r0, r4
   1bac8:	mov	r4, r3
   1bacc:	lsl	r3, r2, ip
   1bad0:	orr	r3, r3, r4, lsl sl
   1bad4:	lsl	ip, r4, ip
   1bad8:	orr	r3, r3, r4, lsr fp
   1badc:	adc	r1, r1, r5
   1bae0:	subs	r0, r0, ip
   1bae4:	mov	r5, r2
   1bae8:	sbc	r1, r1, r3
   1baec:	cmp	lr, #0
   1baf0:	strdne	r4, [lr]
   1baf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1baf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bafc:	mov	r7, r0
   1bb00:	ldr	r6, [pc, #72]	; 1bb50 <lchmod@@Base+0x4bf8>
   1bb04:	ldr	r5, [pc, #72]	; 1bb54 <lchmod@@Base+0x4bfc>
   1bb08:	add	r6, pc, r6
   1bb0c:	add	r5, pc, r5
   1bb10:	sub	r6, r6, r5
   1bb14:	mov	r8, r1
   1bb18:	mov	r9, r2
   1bb1c:	bl	11768 <fstatfs64@plt-0x20>
   1bb20:	asrs	r6, r6, #2
   1bb24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bb28:	mov	r4, #0
   1bb2c:	add	r4, r4, #1
   1bb30:	ldr	r3, [r5], #4
   1bb34:	mov	r2, r9
   1bb38:	mov	r1, r8
   1bb3c:	mov	r0, r7
   1bb40:	blx	r3
   1bb44:	cmp	r6, r4
   1bb48:	bne	1bb2c <lchmod@@Base+0x4bd4>
   1bb4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bb50:	strdeq	r1, [r1], -r4
   1bb54:	andeq	r1, r1, ip, ror #7
   1bb58:	bx	lr
   1bb5c:	ldr	r3, [pc, #12]	; 1bb70 <lchmod@@Base+0x4c18>
   1bb60:	mov	r1, #0
   1bb64:	add	r3, pc, r3
   1bb68:	ldr	r2, [r3]
   1bb6c:	b	11a1c <__cxa_atexit@plt>
   1bb70:	andeq	r1, r1, r8, lsl r6

Disassembly of section .fini:

0001bb74 <.fini>:
   1bb74:	push	{r3, lr}
   1bb78:	pop	{r3, pc}
