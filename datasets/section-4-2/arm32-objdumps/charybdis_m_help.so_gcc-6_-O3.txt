
../repos/charybdis/modules/.libs/m_help.so:     file format elf32-littlearm


Disassembly of section .init:

000004c4 <_init>:
 4c4:	push	{r3, lr}
 4c8:	bl	514 <call_weak_fn>
 4cc:	pop	{r3, pc}

Disassembly of section .plt:

000004d0 <.plt>:
 4d0:	push	{lr}		; (str lr, [sp, #-4]!)
 4d4:	ldr	lr, [pc, #4]	; 4e0 <.plt+0x10>
 4d8:	add	lr, pc, lr
 4dc:	ldr	pc, [lr, #8]!
 4e0:	.word	0x00010b20

000004e4 <__cxa_finalize@plt>:
 4e4:	add	ip, pc, #0, 12
 4e8:	add	ip, ip, #16, 20	; 0x10000
 4ec:	ldr	pc, [ip, #2848]!	; 0xb20

000004f0 <sendto_one@plt>:
 4f0:	add	ip, pc, #0, 12
 4f4:	add	ip, ip, #16, 20	; 0x10000
 4f8:	ldr	pc, [ip, #2840]!	; 0xb18

000004fc <__gmon_start__@plt>:
 4fc:	add	ip, pc, #0, 12
 500:	add	ip, ip, #16, 20	; 0x10000
 504:	ldr	pc, [ip, #2832]!	; 0xb10

00000508 <rb_dictionary_retrieve@plt>:
 508:	add	ip, pc, #0, 12
 50c:	add	ip, ip, #16, 20	; 0x10000
 510:	ldr	pc, [ip, #2824]!	; 0xb08

Disassembly of section .text:

00000514 <call_weak_fn>:
 514:	ldr	r3, [pc, #20]	; 530 <call_weak_fn+0x1c>
 518:	ldr	r2, [pc, #20]	; 534 <call_weak_fn+0x20>
 51c:	add	r3, pc, r3
 520:	ldr	r2, [r3, r2]
 524:	cmp	r2, #0
 528:	bxeq	lr
 52c:	b	4fc <__gmon_start__@plt>
 530:	.word	0x00010adc
 534:	.word	0x00000028

00000538 <deregister_tm_clones>:
 538:	ldr	r3, [pc, #52]	; 574 <deregister_tm_clones+0x3c>
 53c:	ldr	r0, [pc, #52]	; 578 <deregister_tm_clones+0x40>
 540:	add	r3, pc, r3
 544:	add	r0, pc, r0
 548:	add	r3, r3, #3
 54c:	sub	r3, r3, r0
 550:	cmp	r3, #6
 554:	ldr	r3, [pc, #32]	; 57c <deregister_tm_clones+0x44>
 558:	add	r3, pc, r3
 55c:	bxls	lr
 560:	ldr	r2, [pc, #24]	; 580 <deregister_tm_clones+0x48>
 564:	ldr	r3, [r3, r2]
 568:	cmp	r3, #0
 56c:	bxeq	lr
 570:	bx	r3
 574:	.word	0x00010bb4
 578:	.word	0x00010bb0
 57c:	.word	0x00010aa0
 580:	.word	0x00000024

00000584 <register_tm_clones>:
 584:	ldr	r1, [pc, #56]	; 5c4 <register_tm_clones+0x40>
 588:	ldr	r0, [pc, #56]	; 5c8 <register_tm_clones+0x44>
 58c:	add	r1, pc, r1
 590:	add	r0, pc, r0
 594:	sub	r1, r1, r0
 598:	ldr	r3, [pc, #44]	; 5cc <register_tm_clones+0x48>
 59c:	asr	r1, r1, #2
 5a0:	add	r3, pc, r3
 5a4:	add	r1, r1, r1, lsr #31
 5a8:	asrs	r1, r1, #1
 5ac:	bxeq	lr
 5b0:	ldr	r2, [pc, #24]	; 5d0 <register_tm_clones+0x4c>
 5b4:	ldr	r3, [r3, r2]
 5b8:	cmp	r3, #0
 5bc:	bxeq	lr
 5c0:	bx	r3
 5c4:	.word	0x00010b68
 5c8:	.word	0x00010b64
 5cc:	.word	0x00010a58
 5d0:	.word	0x00000030

000005d4 <__do_global_dtors_aux>:
 5d4:	ldr	r3, [pc, #76]	; 628 <__do_global_dtors_aux+0x54>
 5d8:	ldr	r2, [pc, #76]	; 62c <__do_global_dtors_aux+0x58>
 5dc:	add	r3, pc, r3
 5e0:	add	r2, pc, r2
 5e4:	ldrb	r3, [r3]
 5e8:	cmp	r3, #0
 5ec:	bxne	lr
 5f0:	ldr	r3, [pc, #56]	; 630 <__do_global_dtors_aux+0x5c>
 5f4:	push	{r4, lr}
 5f8:	ldr	r3, [r2, r3]
 5fc:	cmp	r3, #0
 600:	beq	610 <__do_global_dtors_aux+0x3c>
 604:	ldr	r3, [pc, #40]	; 634 <__do_global_dtors_aux+0x60>
 608:	ldr	r0, [pc, r3]
 60c:	bl	4e4 <__cxa_finalize@plt>
 610:	bl	538 <deregister_tm_clones>
 614:	ldr	r3, [pc, #28]	; 638 <__do_global_dtors_aux+0x64>
 618:	mov	r2, #1
 61c:	add	r3, pc, r3
 620:	strb	r2, [r3]
 624:	pop	{r4, pc}
 628:	.word	0x00010b18
 62c:	.word	0x00010a18
 630:	.word	0x00000020
 634:	.word	0x00010a2c
 638:	.word	0x00010ad8

0000063c <frame_dummy>:
 63c:	ldr	r0, [pc, #56]	; 67c <frame_dummy+0x40>
 640:	ldr	r3, [pc, #56]	; 680 <frame_dummy+0x44>
 644:	add	r0, pc, r0
 648:	ldr	r2, [r0]
 64c:	add	r3, pc, r3
 650:	cmp	r2, #0
 654:	bne	65c <frame_dummy+0x20>
 658:	b	584 <register_tm_clones>
 65c:	ldr	r2, [pc, #32]	; 684 <frame_dummy+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	beq	658 <frame_dummy+0x1c>
 66c:	push	{r4, lr}
 670:	blx	r3
 674:	pop	{r4, lr}
 678:	b	584 <register_tm_clones>
 67c:	.word	0x000108b0
 680:	.word	0x000109ac
 684:	.word	0x0000002c

00000688 <mo_uhelp>:
 688:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 68c:	sub	sp, sp, #8
 690:	ldr	r4, [pc, #324]	; 7dc <mo_uhelp+0x154>
 694:	cmp	r3, #1
 698:	mov	r6, r2
 69c:	add	r4, pc, r4
 6a0:	ldr	r3, [sp, #40]	; 0x28
 6a4:	ble	7c4 <mo_uhelp+0x13c>
 6a8:	ldr	r5, [r3, #4]
 6ac:	cmp	r5, #0
 6b0:	beq	7d0 <mo_uhelp+0x148>
 6b4:	ldrb	r3, [r5]
 6b8:	cmp	r3, #0
 6bc:	beq	714 <mo_uhelp+0x8c>
 6c0:	ldr	r3, [pc, #280]	; 7e0 <mo_uhelp+0x158>
 6c4:	mov	r1, r5
 6c8:	ldr	r3, [r4, r3]
 6cc:	ldr	r0, [r3]
 6d0:	bl	508 <rb_dictionary_retrieve@plt>
 6d4:	cmp	r0, #0
 6d8:	beq	6e8 <mo_uhelp+0x60>
 6dc:	ldr	r3, [r0, #44]	; 0x2c
 6e0:	tst	r3, #1
 6e4:	bne	720 <mo_uhelp+0x98>
 6e8:	ldr	r2, [pc, #244]	; 7e4 <mo_uhelp+0x15c>
 6ec:	ldr	r1, [pc, #244]	; 7e8 <mo_uhelp+0x160>
 6f0:	add	r3, r6, #88	; 0x58
 6f4:	ldr	r2, [r4, r2]
 6f8:	mov	r0, r6
 6fc:	add	r1, pc, r1
 700:	add	r2, r2, #88	; 0x58
 704:	str	r5, [sp, #40]	; 0x28
 708:	add	sp, sp, #8
 70c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 710:	b	4f0 <sendto_one@plt>
 714:	ldr	r5, [pc, #208]	; 7ec <mo_uhelp+0x164>
 718:	add	r5, pc, r5
 71c:	b	6c0 <mo_uhelp+0x38>
 720:	ldr	r9, [r0, #32]
 724:	ldr	r3, [pc, #184]	; 7e4 <mo_uhelp+0x15c>
 728:	ldr	r1, [pc, #192]	; 7f0 <mo_uhelp+0x168>
 72c:	ldr	r2, [r9]
 730:	ldr	sl, [r4, r3]
 734:	add	r8, r6, #88	; 0x58
 738:	ldr	r2, [r2]
 73c:	add	r7, sl, #88	; 0x58
 740:	str	r2, [sp, #4]
 744:	mov	r3, r8
 748:	str	r5, [sp]
 74c:	mov	r2, r7
 750:	add	r1, pc, r1
 754:	mov	r0, r6
 758:	bl	4f0 <sendto_one@plt>
 75c:	ldr	r4, [r9, #8]
 760:	ldr	r9, [pc, #140]	; 7f4 <mo_uhelp+0x16c>
 764:	cmp	r4, #0
 768:	add	r9, pc, r9
 76c:	beq	7a0 <mo_uhelp+0x118>
 770:	ldr	r1, [r4]
 774:	mov	r3, r8
 778:	mov	r2, r7
 77c:	ldr	r0, [r1]
 780:	mov	r1, r9
 784:	str	r0, [sp, #4]
 788:	str	r5, [sp]
 78c:	mov	r0, r6
 790:	bl	4f0 <sendto_one@plt>
 794:	ldr	r4, [r4, #8]
 798:	cmp	r4, #0
 79c:	bne	770 <mo_uhelp+0xe8>
 7a0:	ldr	r1, [pc, #80]	; 7f8 <mo_uhelp+0x170>
 7a4:	str	r5, [sp, #40]	; 0x28
 7a8:	mov	r3, r8
 7ac:	add	r2, sl, #88	; 0x58
 7b0:	mov	r0, r6
 7b4:	add	r1, pc, r1
 7b8:	add	sp, sp, #8
 7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 7c0:	b	4f0 <sendto_one@plt>
 7c4:	ldr	r5, [pc, #48]	; 7fc <mo_uhelp+0x174>
 7c8:	add	r5, pc, r5
 7cc:	b	6c0 <mo_uhelp+0x38>
 7d0:	ldr	r5, [pc, #40]	; 800 <mo_uhelp+0x178>
 7d4:	add	r5, pc, r5
 7d8:	b	6c0 <mo_uhelp+0x38>
 7dc:	.word	0x0001095c
 7e0:	.word	0x0000001c
 7e4:	.word	0x00000038
 7e8:	.word	0x0000044c
 7ec:	.word	0x000003e4
 7f0:	.word	0x00000418
 7f4:	.word	0x00000434
 7f8:	.word	0x000003c8
 7fc:	.word	0x00000334
 800:	.word	0x00000328

00000804 <m_help>:
 804:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 808:	sub	sp, sp, #8
 80c:	ldr	r4, [pc, #324]	; 958 <m_help+0x154>
 810:	cmp	r3, #1
 814:	mov	r6, r2
 818:	add	r4, pc, r4
 81c:	ldr	r3, [sp, #40]	; 0x28
 820:	ble	940 <m_help+0x13c>
 824:	ldr	r5, [r3, #4]
 828:	cmp	r5, #0
 82c:	beq	94c <m_help+0x148>
 830:	ldrb	r3, [r5]
 834:	cmp	r3, #0
 838:	beq	890 <m_help+0x8c>
 83c:	ldr	r3, [pc, #280]	; 95c <m_help+0x158>
 840:	mov	r1, r5
 844:	ldr	r3, [r4, r3]
 848:	ldr	r0, [r3]
 84c:	bl	508 <rb_dictionary_retrieve@plt>
 850:	cmp	r0, #0
 854:	beq	864 <m_help+0x60>
 858:	ldr	r3, [r0, #44]	; 0x2c
 85c:	tst	r3, #1
 860:	bne	89c <m_help+0x98>
 864:	ldr	r2, [pc, #244]	; 960 <m_help+0x15c>
 868:	ldr	r1, [pc, #244]	; 964 <m_help+0x160>
 86c:	add	r3, r6, #88	; 0x58
 870:	ldr	r2, [r4, r2]
 874:	mov	r0, r6
 878:	add	r1, pc, r1
 87c:	add	r2, r2, #88	; 0x58
 880:	str	r5, [sp, #40]	; 0x28
 884:	add	sp, sp, #8
 888:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 88c:	b	4f0 <sendto_one@plt>
 890:	ldr	r5, [pc, #208]	; 968 <m_help+0x164>
 894:	add	r5, pc, r5
 898:	b	83c <m_help+0x38>
 89c:	ldr	r9, [r0, #32]
 8a0:	ldr	r3, [pc, #184]	; 960 <m_help+0x15c>
 8a4:	ldr	r1, [pc, #192]	; 96c <m_help+0x168>
 8a8:	ldr	r2, [r9]
 8ac:	ldr	sl, [r4, r3]
 8b0:	add	r8, r6, #88	; 0x58
 8b4:	ldr	r2, [r2]
 8b8:	add	r7, sl, #88	; 0x58
 8bc:	str	r2, [sp, #4]
 8c0:	mov	r3, r8
 8c4:	str	r5, [sp]
 8c8:	mov	r2, r7
 8cc:	add	r1, pc, r1
 8d0:	mov	r0, r6
 8d4:	bl	4f0 <sendto_one@plt>
 8d8:	ldr	r4, [r9, #8]
 8dc:	ldr	r9, [pc, #140]	; 970 <m_help+0x16c>
 8e0:	cmp	r4, #0
 8e4:	add	r9, pc, r9
 8e8:	beq	91c <m_help+0x118>
 8ec:	ldr	r1, [r4]
 8f0:	mov	r3, r8
 8f4:	mov	r2, r7
 8f8:	ldr	r0, [r1]
 8fc:	mov	r1, r9
 900:	str	r0, [sp, #4]
 904:	str	r5, [sp]
 908:	mov	r0, r6
 90c:	bl	4f0 <sendto_one@plt>
 910:	ldr	r4, [r4, #8]
 914:	cmp	r4, #0
 918:	bne	8ec <m_help+0xe8>
 91c:	ldr	r1, [pc, #80]	; 974 <m_help+0x170>
 920:	str	r5, [sp, #40]	; 0x28
 924:	mov	r3, r8
 928:	add	r2, sl, #88	; 0x58
 92c:	mov	r0, r6
 930:	add	r1, pc, r1
 934:	add	sp, sp, #8
 938:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 93c:	b	4f0 <sendto_one@plt>
 940:	ldr	r5, [pc, #48]	; 978 <m_help+0x174>
 944:	add	r5, pc, r5
 948:	b	83c <m_help+0x38>
 94c:	ldr	r5, [pc, #40]	; 97c <m_help+0x178>
 950:	add	r5, pc, r5
 954:	b	83c <m_help+0x38>
 958:	.word	0x000107e0
 95c:	.word	0x0000001c
 960:	.word	0x00000038
 964:	.word	0x000002d0
 968:	.word	0x00000268
 96c:	.word	0x0000029c
 970:	.word	0x000002b8
 974:	.word	0x0000024c
 978:	.word	0x000001b8
 97c:	.word	0x000001ac

00000980 <mo_help>:
 980:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 984:	sub	sp, sp, #8
 988:	ldr	r4, [pc, #324]	; ad4 <mo_help+0x154>
 98c:	cmp	r3, #1
 990:	mov	r6, r2
 994:	add	r4, pc, r4
 998:	ldr	r3, [sp, #40]	; 0x28
 99c:	ble	abc <mo_help+0x13c>
 9a0:	ldr	r5, [r3, #4]
 9a4:	cmp	r5, #0
 9a8:	beq	ac8 <mo_help+0x148>
 9ac:	ldrb	r3, [r5]
 9b0:	cmp	r3, #0
 9b4:	beq	a0c <mo_help+0x8c>
 9b8:	ldr	r3, [pc, #280]	; ad8 <mo_help+0x158>
 9bc:	mov	r1, r5
 9c0:	ldr	r3, [r4, r3]
 9c4:	ldr	r0, [r3]
 9c8:	bl	508 <rb_dictionary_retrieve@plt>
 9cc:	cmp	r0, #0
 9d0:	beq	9e0 <mo_help+0x60>
 9d4:	ldr	r3, [r0, #44]	; 0x2c
 9d8:	tst	r3, #2
 9dc:	bne	a18 <mo_help+0x98>
 9e0:	ldr	r2, [pc, #244]	; adc <mo_help+0x15c>
 9e4:	ldr	r1, [pc, #244]	; ae0 <mo_help+0x160>
 9e8:	add	r3, r6, #88	; 0x58
 9ec:	ldr	r2, [r4, r2]
 9f0:	mov	r0, r6
 9f4:	add	r1, pc, r1
 9f8:	add	r2, r2, #88	; 0x58
 9fc:	str	r5, [sp, #40]	; 0x28
 a00:	add	sp, sp, #8
 a04:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 a08:	b	4f0 <sendto_one@plt>
 a0c:	ldr	r5, [pc, #208]	; ae4 <mo_help+0x164>
 a10:	add	r5, pc, r5
 a14:	b	9b8 <mo_help+0x38>
 a18:	ldr	r9, [r0, #32]
 a1c:	ldr	r3, [pc, #184]	; adc <mo_help+0x15c>
 a20:	ldr	r1, [pc, #192]	; ae8 <mo_help+0x168>
 a24:	ldr	r2, [r9]
 a28:	ldr	sl, [r4, r3]
 a2c:	add	r8, r6, #88	; 0x58
 a30:	ldr	r2, [r2]
 a34:	add	r7, sl, #88	; 0x58
 a38:	str	r2, [sp, #4]
 a3c:	mov	r3, r8
 a40:	str	r5, [sp]
 a44:	mov	r2, r7
 a48:	add	r1, pc, r1
 a4c:	mov	r0, r6
 a50:	bl	4f0 <sendto_one@plt>
 a54:	ldr	r4, [r9, #8]
 a58:	ldr	r9, [pc, #140]	; aec <mo_help+0x16c>
 a5c:	cmp	r4, #0
 a60:	add	r9, pc, r9
 a64:	beq	a98 <mo_help+0x118>
 a68:	ldr	r1, [r4]
 a6c:	mov	r3, r8
 a70:	mov	r2, r7
 a74:	ldr	r0, [r1]
 a78:	mov	r1, r9
 a7c:	str	r0, [sp, #4]
 a80:	str	r5, [sp]
 a84:	mov	r0, r6
 a88:	bl	4f0 <sendto_one@plt>
 a8c:	ldr	r4, [r4, #8]
 a90:	cmp	r4, #0
 a94:	bne	a68 <mo_help+0xe8>
 a98:	ldr	r1, [pc, #80]	; af0 <mo_help+0x170>
 a9c:	str	r5, [sp, #40]	; 0x28
 aa0:	mov	r3, r8
 aa4:	add	r2, sl, #88	; 0x58
 aa8:	mov	r0, r6
 aac:	add	r1, pc, r1
 ab0:	add	sp, sp, #8
 ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
 ab8:	b	4f0 <sendto_one@plt>
 abc:	ldr	r5, [pc, #48]	; af4 <mo_help+0x174>
 ac0:	add	r5, pc, r5
 ac4:	b	9b8 <mo_help+0x38>
 ac8:	ldr	r5, [pc, #40]	; af8 <mo_help+0x178>
 acc:	add	r5, pc, r5
 ad0:	b	9b8 <mo_help+0x38>
 ad4:	.word	0x00010664
 ad8:	.word	0x00000034
 adc:	.word	0x00000038
 ae0:	.word	0x00000154
 ae4:	.word	0x000000ec
 ae8:	.word	0x00000120
 aec:	.word	0x0000013c
 af0:	.word	0x000000d0
 af4:	.word	0x0000003c
 af8:	.word	0x00000030

Disassembly of section .fini:

00000afc <_fini>:
 afc:	push	{r3, lr}
 b00:	pop	{r3, pc}
