
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010c28 <.init>:
   10c28:	push	{r3, lr}
   10c2c:	bl	10f88 <_start@@Base+0x3c>
   10c30:	pop	{r3, pc}

Disassembly of section .plt:

00010c34 <calloc@plt-0x14>:
   10c34:	push	{lr}		; (str lr, [sp, #-4]!)
   10c38:	ldr	lr, [pc, #4]	; 10c44 <calloc@plt-0x4>
   10c3c:	add	lr, pc, lr
   10c40:	ldr	pc, [lr, #8]!
   10c44:			; <UNDEFINED> instruction: 0x000123bc

00010c48 <calloc@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #956]!	; 0x3bc

00010c54 <raise@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c60 <strcmp@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #940]!	; 0x3ac

00010c6c <printf@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #932]!	; 0x3a4

00010c78 <__isoc99_fscanf@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #924]!	; 0x39c

00010c84 <fopen@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #916]!	; 0x394

00010c90 <free@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #908]!	; 0x38c

00010c9c <realloc@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #900]!	; 0x384

00010ca8 <strcpy@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #892]!	; 0x37c

00010cb4 <puts@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #884]!	; 0x374

00010cc0 <malloc@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #876]!	; 0x36c

00010ccc <__libc_start_main@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #868]!	; 0x364

00010cd8 <__gmon_start__@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #860]!	; 0x35c

00010ce4 <strlen@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #852]!	; 0x354

00010cf0 <putchar@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #844]!	; 0x34c

00010cfc <fclose@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #836]!	; 0x344

00010d08 <sprintf@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #828]!	; 0x33c

00010d14 <atoi@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #820]!	; 0x334

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #812]!	; 0x32c

Disassembly of section .text:

00010d2c <main@@Base>:
   10d2c:	push	{r4, r5, r6, r7, lr}
   10d30:	sub	sp, sp, #36	; 0x24
   10d34:	ldr	r0, [pc, #492]	; 10f28 <main@@Base+0x1fc>
   10d38:	bl	10cb4 <puts@plt>
   10d3c:	mov	r1, #1
   10d40:	mov	r0, #8
   10d44:	bl	11250 <grafo_novo@@Base>
   10d48:	mov	r2, #3
   10d4c:	mov	r1, #1
   10d50:	ldr	r7, [pc, #468]	; 10f2c <main@@Base+0x200>
   10d54:	mov	r5, #0
   10d58:	mov	r4, r0
   10d5c:	bl	11418 <grafo_adiciona@@Base>
   10d60:	mov	r2, #3
   10d64:	mov	r1, #2
   10d68:	mov	r0, r4
   10d6c:	bl	11418 <grafo_adiciona@@Base>
   10d70:	mov	r2, #4
   10d74:	mov	r1, #2
   10d78:	mov	r0, r4
   10d7c:	bl	11418 <grafo_adiciona@@Base>
   10d80:	mov	r2, #5
   10d84:	mov	r1, #2
   10d88:	mov	r0, r4
   10d8c:	bl	11418 <grafo_adiciona@@Base>
   10d90:	mov	r2, #2
   10d94:	mov	r1, #3
   10d98:	mov	r0, r4
   10d9c:	bl	11418 <grafo_adiciona@@Base>
   10da0:	mov	r2, #4
   10da4:	mov	r1, #3
   10da8:	mov	r0, r4
   10dac:	bl	11418 <grafo_adiciona@@Base>
   10db0:	mov	r2, #6
   10db4:	mov	r1, #4
   10db8:	mov	r0, r4
   10dbc:	bl	11418 <grafo_adiciona@@Base>
   10dc0:	mov	r2, #7
   10dc4:	mov	r1, #4
   10dc8:	mov	r0, r4
   10dcc:	bl	11418 <grafo_adiciona@@Base>
   10dd0:	mov	r2, #4
   10dd4:	mov	r1, #5
   10dd8:	mov	r0, r4
   10ddc:	bl	11418 <grafo_adiciona@@Base>
   10de0:	mov	r2, #6
   10de4:	mov	r1, #5
   10de8:	mov	r0, r4
   10dec:	bl	11418 <grafo_adiciona@@Base>
   10df0:	mov	r2, #7
   10df4:	mov	r1, #5
   10df8:	mov	r0, r4
   10dfc:	bl	11418 <grafo_adiciona@@Base>
   10e00:	mov	r2, #7
   10e04:	mov	r1, #6
   10e08:	mov	r0, r4
   10e0c:	bl	11418 <grafo_adiciona@@Base>
   10e10:	mov	r3, #5
   10e14:	mov	r2, #7
   10e18:	mov	r1, #1
   10e1c:	mov	r0, r4
   10e20:	bl	1112c <descobre_caminho@@Base>
   10e24:	mov	r6, r0
   10e28:	ldr	r0, [pc, #256]	; 10f30 <main@@Base+0x204>
   10e2c:	bl	10c6c <printf@plt>
   10e30:	mov	r0, r6
   10e34:	bl	11bec <lista_tamanho@@Base>
   10e38:	cmp	r5, r0
   10e3c:	blt	10ee4 <main@@Base+0x1b8>
   10e40:	ldr	r0, [pc, #236]	; 10f34 <main@@Base+0x208>
   10e44:	bl	10cb4 <puts@plt>
   10e48:	mov	r0, r4
   10e4c:	bl	112a4 <grafo_apaga@@Base>
   10e50:	mov	r0, r6
   10e54:	bl	11bac <lista_apaga@@Base>
   10e58:	ldr	r0, [pc, #216]	; 10f38 <main@@Base+0x20c>
   10e5c:	bl	10cb4 <puts@plt>
   10e60:	ldr	r1, [pc, #212]	; 10f3c <main@@Base+0x210>
   10e64:	ldr	r0, [pc, #212]	; 10f40 <main@@Base+0x214>
   10e68:	bl	10c84 <fopen@plt>
   10e6c:	ldr	r7, [pc, #208]	; 10f44 <main@@Base+0x218>
   10e70:	mov	r6, r0
   10e74:	bl	11b8c <lista_nova@@Base>
   10e78:	mov	r5, r0
   10e7c:	bl	11b8c <lista_nova@@Base>
   10e80:	mov	r4, r0
   10e84:	mov	r3, sp
   10e88:	add	r2, sp, #8
   10e8c:	mov	r1, r7
   10e90:	mov	r0, r6
   10e94:	bl	10c78 <__isoc99_fscanf@plt>
   10e98:	cmp	r0, #2
   10e9c:	beq	10f04 <main@@Base+0x1d8>
   10ea0:	mov	r2, #4
   10ea4:	mov	r1, r4
   10ea8:	mov	r0, r5
   10eac:	bl	11074 <_start@@Base+0x128>
   10eb0:	cmp	r0, #0
   10eb4:	bne	10ec0 <main@@Base+0x194>
   10eb8:	ldr	r0, [pc, #136]	; 10f48 <main@@Base+0x21c>
   10ebc:	bl	10cb4 <puts@plt>
   10ec0:	mov	r0, r5
   10ec4:	bl	11bac <lista_apaga@@Base>
   10ec8:	mov	r0, r4
   10ecc:	bl	11bac <lista_apaga@@Base>
   10ed0:	mov	r0, r6
   10ed4:	bl	10cfc <fclose@plt>
   10ed8:	mov	r0, #0
   10edc:	add	sp, sp, #36	; 0x24
   10ee0:	pop	{r4, r5, r6, r7, pc}
   10ee4:	mov	r1, r5
   10ee8:	mov	r0, r6
   10eec:	bl	11bfc <lista_elemento@@Base>
   10ef0:	add	r5, r5, #1
   10ef4:	mov	r1, r0
   10ef8:	mov	r0, r7
   10efc:	bl	10c6c <printf@plt>
   10f00:	b	10e30 <main@@Base+0x104>
   10f04:	add	r1, sp, #8
   10f08:	mvn	r2, #0
   10f0c:	mov	r0, r5
   10f10:	bl	11cac <lista_insere@@Base>
   10f14:	mvn	r2, #0
   10f18:	mov	r1, sp
   10f1c:	mov	r0, r4
   10f20:	bl	11cac <lista_insere@@Base>
   10f24:	b	10e84 <main@@Base+0x158>
   10f28:	ldrdeq	r2, [r1], -r0
   10f2c:	andeq	r2, r1, lr, lsr r3
   10f30:	andeq	r2, r1, r1, ror #5
   10f34:	andeq	r2, r1, r2, ror r3
   10f38:	andeq	r2, r1, lr, lsl r3
   10f3c:	andeq	r2, r1, pc, lsr #6
   10f40:	andeq	r2, r1, r1, lsr r3
   10f44:	andeq	r2, r1, fp, lsr r3
   10f48:	andeq	r2, r1, r1, asr #6

00010f4c <_start@@Base>:
   10f4c:	mov	fp, #0
   10f50:	mov	lr, #0
   10f54:	pop	{r1}		; (ldr r1, [sp], #4)
   10f58:	mov	r2, sp
   10f5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f60:	push	{r0}		; (str r0, [sp, #-4]!)
   10f64:	ldr	ip, [pc, #16]	; 10f7c <_start@@Base+0x30>
   10f68:	push	{ip}		; (str ip, [sp, #-4]!)
   10f6c:	ldr	r0, [pc, #12]	; 10f80 <_start@@Base+0x34>
   10f70:	ldr	r3, [pc, #12]	; 10f84 <_start@@Base+0x38>
   10f74:	bl	10ccc <__libc_start_main@plt>
   10f78:	bl	10d20 <abort@plt>
   10f7c:			; <UNDEFINED> instruction: 0x000122b8
   10f80:	andeq	r0, r1, ip, lsr #26
   10f84:	andeq	r2, r1, r8, asr r2
   10f88:	ldr	r3, [pc, #20]	; 10fa4 <_start@@Base+0x58>
   10f8c:	ldr	r2, [pc, #20]	; 10fa8 <_start@@Base+0x5c>
   10f90:	add	r3, pc, r3
   10f94:	ldr	r2, [r3, r2]
   10f98:	cmp	r2, #0
   10f9c:	bxeq	lr
   10fa0:	b	10cd8 <__gmon_start__@plt>
   10fa4:	andeq	r2, r1, r8, rrx
   10fa8:	andeq	r0, r0, r8, asr r0
   10fac:	ldr	r3, [pc, #28]	; 10fd0 <_start@@Base+0x84>
   10fb0:	ldr	r0, [pc, #28]	; 10fd4 <_start@@Base+0x88>
   10fb4:	sub	r3, r3, r0
   10fb8:	cmp	r3, #6
   10fbc:	bxls	lr
   10fc0:	ldr	r3, [pc, #16]	; 10fd8 <_start@@Base+0x8c>
   10fc4:	cmp	r3, #0
   10fc8:	bxeq	lr
   10fcc:	bx	r3
   10fd0:	andeq	r3, r2, r7, rrx
   10fd4:	andeq	r3, r2, r4, rrx
   10fd8:	andeq	r0, r0, r0
   10fdc:	ldr	r1, [pc, #36]	; 11008 <_start@@Base+0xbc>
   10fe0:	ldr	r0, [pc, #36]	; 1100c <_start@@Base+0xc0>
   10fe4:	sub	r1, r1, r0
   10fe8:	asr	r1, r1, #2
   10fec:	add	r1, r1, r1, lsr #31
   10ff0:	asrs	r1, r1, #1
   10ff4:	bxeq	lr
   10ff8:	ldr	r3, [pc, #16]	; 11010 <_start@@Base+0xc4>
   10ffc:	cmp	r3, #0
   11000:	bxeq	lr
   11004:	bx	r3
   11008:	andeq	r3, r2, r4, rrx
   1100c:	andeq	r3, r2, r4, rrx
   11010:	andeq	r0, r0, r0
   11014:	push	{r4, lr}
   11018:	ldr	r4, [pc, #24]	; 11038 <_start@@Base+0xec>
   1101c:	ldrb	r3, [r4]
   11020:	cmp	r3, #0
   11024:	popne	{r4, pc}
   11028:	bl	10fac <_start@@Base+0x60>
   1102c:	mov	r3, #1
   11030:	strb	r3, [r4]
   11034:	pop	{r4, pc}
   11038:	andeq	r3, r2, r4, rrx
   1103c:	ldr	r0, [pc, #40]	; 1106c <_start@@Base+0x120>
   11040:	ldr	r3, [r0]
   11044:	cmp	r3, #0
   11048:	bne	11050 <_start@@Base+0x104>
   1104c:	b	10fdc <_start@@Base+0x90>
   11050:	ldr	r3, [pc, #24]	; 11070 <_start@@Base+0x124>
   11054:	cmp	r3, #0
   11058:	beq	1104c <_start@@Base+0x100>
   1105c:	push	{r4, lr}
   11060:	blx	r3
   11064:	pop	{r4, lr}
   11068:	b	10fdc <_start@@Base+0x90>
   1106c:	andeq	r2, r2, r4, lsl pc
   11070:	andeq	r0, r0, r0
   11074:	push	{r4, r5, r6, r7, r8, lr}
   11078:	mov	r7, r0
   1107c:	sub	sp, sp, #24
   11080:	mov	r0, r2
   11084:	mov	r8, r1
   11088:	mov	r6, r2
   1108c:	bl	117f0 <heap_nova@@Base>
   11090:	mov	r4, #0
   11094:	mov	r5, r0
   11098:	cmp	r6, r4
   1109c:	bgt	110c4 <_start@@Base+0x178>
   110a0:	ldr	r7, [pc, #128]	; 11128 <_start@@Base+0x1dc>
   110a4:	mov	r4, #0
   110a8:	cmp	r6, r4
   110ac:	bgt	11104 <_start@@Base+0x1b8>
   110b0:	mov	r0, r5
   110b4:	bl	11840 <heap_apaga@@Base>
   110b8:	mov	r0, #1
   110bc:	add	sp, sp, #24
   110c0:	pop	{r4, r5, r6, r7, r8, pc}
   110c4:	mov	r1, r4
   110c8:	mov	r0, r7
   110cc:	bl	11bfc <lista_elemento@@Base>
   110d0:	mov	r1, r0
   110d4:	add	r0, sp, #4
   110d8:	bl	10ca8 <strcpy@plt>
   110dc:	mov	r1, r4
   110e0:	mov	r0, r8
   110e4:	bl	11bfc <lista_elemento@@Base>
   110e8:	bl	10d14 <atoi@plt>
   110ec:	add	r1, sp, #4
   110f0:	add	r4, r4, #1
   110f4:	mov	r2, r0
   110f8:	mov	r0, r5
   110fc:	bl	119e4 <heap_insere@@Base>
   11100:	b	11098 <_start@@Base+0x14c>
   11104:	add	r4, r4, #1
   11108:	ldr	r3, [r5, #8]
   1110c:	sub	r2, r4, #-1073741823	; 0xc0000001
   11110:	mov	r1, r4
   11114:	ldr	r3, [r3, r2, lsl #2]
   11118:	mov	r0, r7
   1111c:	ldr	r2, [r3, #4]
   11120:	bl	10c6c <printf@plt>
   11124:	b	110a8 <_start@@Base+0x15c>
   11128:	andeq	r2, r1, r8, asr #5

0001112c <descobre_caminho@@Base>:
   1112c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11130:	mov	r4, r1
   11134:	mov	r8, r3
   11138:	mov	r7, r0
   1113c:	mov	r9, r2
   11140:	bl	11b8c <lista_nova@@Base>
   11144:	mov	r1, r4
   11148:	add	r3, sp, #4
   1114c:	mov	r2, r8
   11150:	ldr	fp, [pc, #188]	; 11214 <descobre_caminho@@Base+0xe8>
   11154:	mov	r4, #0
   11158:	mvn	sl, #0
   1115c:	mov	r5, r0
   11160:	mov	r0, r7
   11164:	bl	11680 <grafo_bfs@@Base>
   11168:	mov	r6, r0
   1116c:	ldr	r3, [sp, #4]
   11170:	cmp	r4, r3
   11174:	blt	111c4 <descobre_caminho@@Base+0x98>
   11178:	mov	r2, r9
   1117c:	mov	r1, r8
   11180:	mov	r0, r7
   11184:	add	r3, sp, #4
   11188:	bl	11680 <grafo_bfs@@Base>
   1118c:	ldr	r8, [pc, #128]	; 11214 <descobre_caminho@@Base+0xe8>
   11190:	mov	r4, #1
   11194:	mvn	r9, #0
   11198:	mov	r7, r0
   1119c:	ldr	r3, [sp, #4]
   111a0:	cmp	r4, r3
   111a4:	blt	111ec <descobre_caminho@@Base+0xc0>
   111a8:	mov	r0, r7
   111ac:	bl	10c90 <free@plt>
   111b0:	mov	r0, r6
   111b4:	bl	10c90 <free@plt>
   111b8:	mov	r0, r5
   111bc:	add	sp, sp, #12
   111c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111c4:	ldr	r2, [r6, r4, lsl #2]
   111c8:	mov	r1, fp
   111cc:	mov	r0, sp
   111d0:	bl	10d08 <sprintf@plt>
   111d4:	mov	r2, sl
   111d8:	mov	r1, sp
   111dc:	mov	r0, r5
   111e0:	bl	11cac <lista_insere@@Base>
   111e4:	add	r4, r4, #1
   111e8:	b	1116c <descobre_caminho@@Base+0x40>
   111ec:	ldr	r2, [r7, r4, lsl #2]
   111f0:	mov	r1, r8
   111f4:	mov	r0, sp
   111f8:	bl	10d08 <sprintf@plt>
   111fc:	mov	r2, r9
   11200:	mov	r1, sp
   11204:	mov	r0, r5
   11208:	bl	11cac <lista_insere@@Base>
   1120c:	add	r4, r4, #1
   11210:	b	1119c <descobre_caminho@@Base+0x70>
   11214:	andeq	r2, r1, r2, ror #6

00011218 <simula_acontecimentos@@Base>:
   11218:	cmp	r2, #20
   1121c:	bgt	11224 <simula_acontecimentos@@Base+0xc>
   11220:	b	11074 <_start@@Base+0x128>
   11224:	mov	r0, #0
   11228:	bx	lr

0001122c <cria_no@@Base>:
   1122c:	push	{r4, lr}
   11230:	mov	r4, r0
   11234:	mov	r0, #8
   11238:	bl	10cc0 <malloc@plt>
   1123c:	cmp	r0, #0
   11240:	movne	r3, #0
   11244:	strne	r4, [r0]
   11248:	strne	r3, [r0, #4]
   1124c:	pop	{r4, pc}

00011250 <grafo_novo@@Base>:
   11250:	push	{r4, r5, r6, lr}
   11254:	mov	r5, r0
   11258:	mov	r0, #12
   1125c:	mov	r6, r1
   11260:	bl	10cc0 <malloc@plt>
   11264:	subs	r4, r0, #0
   11268:	beq	1129c <grafo_novo@@Base+0x4c>
   1126c:	str	r5, [r4, #4]
   11270:	mov	r0, r5
   11274:	str	r6, [r4]
   11278:	mov	r1, #8
   1127c:	bl	10c48 <calloc@plt>
   11280:	cmp	r0, #0
   11284:	mov	r5, r0
   11288:	str	r0, [r4, #8]
   1128c:	bne	1129c <grafo_novo@@Base+0x4c>
   11290:	mov	r0, r4
   11294:	bl	10c90 <free@plt>
   11298:	mov	r4, r5
   1129c:	mov	r0, r4
   112a0:	pop	{r4, r5, r6, pc}

000112a4 <grafo_apaga@@Base>:
   112a4:	push	{r4, r5, r6, lr}
   112a8:	subs	r4, r0, #0
   112ac:	popeq	{r4, r5, r6, pc}
   112b0:	ldr	r3, [r4, #8]
   112b4:	cmp	r3, #0
   112b8:	movne	r5, #0
   112bc:	bne	112f0 <grafo_apaga@@Base+0x4c>
   112c0:	mov	r0, r4
   112c4:	pop	{r4, r5, r6, lr}
   112c8:	b	10c90 <free@plt>
   112cc:	ldr	r2, [r0, #4]
   112d0:	str	r2, [r3, #4]
   112d4:	bl	10c90 <free@plt>
   112d8:	ldr	r3, [r4, #8]
   112dc:	add	r3, r3, r6
   112e0:	ldr	r0, [r3, #4]
   112e4:	cmp	r0, #0
   112e8:	bne	112cc <grafo_apaga@@Base+0x28>
   112ec:	add	r5, r5, #1
   112f0:	ldr	r3, [r4, #4]
   112f4:	cmp	r5, r3
   112f8:	lsllt	r6, r5, #3
   112fc:	blt	112d8 <grafo_apaga@@Base+0x34>
   11300:	ldr	r0, [r4, #8]
   11304:	bl	10c90 <free@plt>
   11308:	b	112c0 <grafo_apaga@@Base+0x1c>

0001130c <grafo_remove@@Base>:
   1130c:	push	{r4, r5, r6, lr}
   11310:	subs	r6, r0, #0
   11314:	popeq	{r4, r5, r6, pc}
   11318:	ldr	ip, [r6, #8]
   1131c:	add	ip, ip, r1, lsl #3
   11320:	ldr	r0, [ip, #4]
   11324:	cmp	r0, #0
   11328:	popeq	{r4, r5, r6, pc}
   1132c:	ldr	r3, [r0]
   11330:	mov	r5, r2
   11334:	cmp	r3, r2
   11338:	ldr	r3, [r0, #4]
   1133c:	mov	r4, r1
   11340:	streq	r3, [ip, #4]
   11344:	beq	11368 <grafo_remove@@Base+0x5c>
   11348:	cmp	r3, #0
   1134c:	beq	1136c <grafo_remove@@Base+0x60>
   11350:	ldr	r2, [r3]
   11354:	cmp	r5, r2
   11358:	ldr	r2, [r3, #4]
   1135c:	bne	113ac <grafo_remove@@Base+0xa0>
   11360:	str	r2, [r0, #4]
   11364:	mov	r0, r3
   11368:	bl	10c90 <free@plt>
   1136c:	ldr	r3, [r6]
   11370:	cmp	r3, #0
   11374:	popne	{r4, r5, r6, pc}
   11378:	ldr	r2, [r6, #8]
   1137c:	add	r5, r2, r5, lsl #3
   11380:	ldr	ip, [r5, #4]
   11384:	ldr	r3, [ip]
   11388:	cmp	r4, r3
   1138c:	ldr	r3, [ip, #4]
   11390:	moveq	r0, ip
   11394:	streq	r3, [r5, #4]
   11398:	beq	113cc <grafo_remove@@Base+0xc0>
   1139c:	cmp	r3, #0
   113a0:	mov	r0, r3
   113a4:	bne	113b8 <grafo_remove@@Base+0xac>
   113a8:	pop	{r4, r5, r6, pc}
   113ac:	mov	r0, r3
   113b0:	mov	r3, r2
   113b4:	b	11348 <grafo_remove@@Base+0x3c>
   113b8:	ldr	r3, [r0]
   113bc:	cmp	r4, r3
   113c0:	ldr	r3, [r0, #4]
   113c4:	bne	113d4 <grafo_remove@@Base+0xc8>
   113c8:	str	r3, [ip, #4]
   113cc:	pop	{r4, r5, r6, lr}
   113d0:	b	10c90 <free@plt>
   113d4:	mov	ip, r0
   113d8:	b	1139c <grafo_remove@@Base+0x90>

000113dc <grafo_existe@@Base>:
   113dc:	cmp	r0, #0
   113e0:	ldrne	r3, [r0, #8]
   113e4:	addne	r1, r3, r1, lsl #3
   113e8:	ldrne	r0, [r1, #4]
   113ec:	bne	11404 <grafo_existe@@Base+0x28>
   113f0:	bx	lr
   113f4:	ldr	r3, [r0]
   113f8:	cmp	r3, r2
   113fc:	beq	11410 <grafo_existe@@Base+0x34>
   11400:	ldr	r0, [r0, #4]
   11404:	cmp	r0, #0
   11408:	bne	113f4 <grafo_existe@@Base+0x18>
   1140c:	bx	lr
   11410:	mov	r0, #1
   11414:	bx	lr

00011418 <grafo_adiciona@@Base>:
   11418:	push	{r4, r5, r6, lr}
   1141c:	subs	r6, r0, #0
   11420:	popeq	{r4, r5, r6, pc}
   11424:	mov	r5, r1
   11428:	bl	113dc <grafo_existe@@Base>
   1142c:	cmp	r0, #0
   11430:	popne	{r4, r5, r6, pc}
   11434:	mov	r0, r2
   11438:	mov	r4, r2
   1143c:	bl	1122c <cria_no@@Base>
   11440:	ldr	r3, [r6, #8]
   11444:	add	r2, r3, r5, lsl #3
   11448:	ldr	r1, [r2, #4]
   1144c:	str	r1, [r0, #4]
   11450:	str	r0, [r2, #4]
   11454:	ldr	r2, [r3, r5, lsl #3]
   11458:	add	r2, r2, #1
   1145c:	str	r2, [r3, r5, lsl #3]
   11460:	ldr	r3, [r6]
   11464:	cmp	r3, #0
   11468:	popne	{r4, r5, r6, pc}
   1146c:	mov	r0, r5
   11470:	bl	1122c <cria_no@@Base>
   11474:	ldr	r3, [r6, #8]
   11478:	add	r2, r3, r4, lsl #3
   1147c:	ldr	r1, [r2, #4]
   11480:	str	r1, [r0, #4]
   11484:	str	r0, [r2, #4]
   11488:	ldr	r2, [r3, r4, lsl #3]
   1148c:	add	r2, r2, #1
   11490:	str	r2, [r3, r4, lsl #3]
   11494:	pop	{r4, r5, r6, pc}

00011498 <grafo_imprime@@Base>:
   11498:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1149c:	mov	r6, r0
   114a0:	ldr	r7, [pc, #108]	; 11514 <grafo_imprime@@Base+0x7c>
   114a4:	ldr	r8, [pc, #108]	; 11518 <grafo_imprime@@Base+0x80>
   114a8:	ldr	r9, [pc, #108]	; 1151c <grafo_imprime@@Base+0x84>
   114ac:	mov	r4, #0
   114b0:	ldr	r3, [r6, #4]
   114b4:	cmp	r4, r3
   114b8:	blt	114c0 <grafo_imprime@@Base+0x28>
   114bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   114c0:	ldr	r3, [r6, #8]
   114c4:	mov	r1, r4
   114c8:	add	r3, r3, r4, lsl #3
   114cc:	mov	r0, r7
   114d0:	ldr	r5, [r3, #4]
   114d4:	bl	10c6c <printf@plt>
   114d8:	cmp	r5, #0
   114dc:	movne	r0, r8
   114e0:	ldrne	r1, [r5]
   114e4:	bne	11500 <grafo_imprime@@Base+0x68>
   114e8:	mov	r0, #10
   114ec:	bl	10cf0 <putchar@plt>
   114f0:	add	r4, r4, #1
   114f4:	b	114b0 <grafo_imprime@@Base+0x18>
   114f8:	ldr	r1, [r5]
   114fc:	mov	r0, r9
   11500:	bl	10c6c <printf@plt>
   11504:	ldr	r5, [r5, #4]
   11508:	cmp	r5, #0
   1150c:	bne	114f8 <grafo_imprime@@Base+0x60>
   11510:	b	114e8 <grafo_imprime@@Base+0x50>
   11514:	andeq	r2, r1, fp, asr r3
   11518:	andeq	r2, r1, r2, ror #6
   1151c:	andeq	r2, r1, r0, ror #6

00011520 <dfs_helper@@Base>:
   11520:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11524:	ldr	r6, [sp, #40]	; 0x28
   11528:	ldr	r7, [r6, r1, lsl #2]
   1152c:	cmp	r7, #0
   11530:	movne	r0, #0
   11534:	bne	115b4 <dfs_helper@@Base+0x94>
   11538:	cmp	r1, r2
   1153c:	str	r3, [r6, r1, lsl #2]
   11540:	moveq	r0, r3
   11544:	beq	115b4 <dfs_helper@@Base+0x94>
   11548:	mov	r8, r2
   1154c:	mov	r9, r1
   11550:	mov	r5, r0
   11554:	mov	r4, r7
   11558:	add	sl, r3, #1
   1155c:	ldr	r3, [r5, #4]
   11560:	cmp	r4, r3
   11564:	movge	r3, #0
   11568:	strge	r3, [r6, r9, lsl #2]
   1156c:	movge	r0, r7
   11570:	bge	115b4 <dfs_helper@@Base+0x94>
   11574:	mov	r2, r4
   11578:	mov	r1, r9
   1157c:	mov	r0, r5
   11580:	bl	113dc <grafo_existe@@Base>
   11584:	cmp	r0, #0
   11588:	bne	11594 <dfs_helper@@Base+0x74>
   1158c:	add	r4, r4, #1
   11590:	b	1155c <dfs_helper@@Base+0x3c>
   11594:	str	r6, [sp]
   11598:	mov	r3, sl
   1159c:	mov	r2, r8
   115a0:	mov	r1, r4
   115a4:	mov	r0, r5
   115a8:	bl	11520 <dfs_helper@@Base>
   115ac:	cmp	r0, #0
   115b0:	beq	1158c <dfs_helper@@Base+0x6c>
   115b4:	add	sp, sp, #8
   115b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000115bc <grafo_dfs@@Base>:
   115bc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   115c0:	subs	r4, r0, #0
   115c4:	beq	11618 <grafo_dfs@@Base+0x5c>
   115c8:	mov	r8, r4
   115cc:	mov	r4, r1
   115d0:	ldr	r0, [r8, #4]
   115d4:	mov	r1, #4
   115d8:	mov	r7, r2
   115dc:	mov	r6, r3
   115e0:	bl	10c48 <calloc@plt>
   115e4:	mov	r2, r7
   115e8:	mov	r3, #1
   115ec:	mov	r1, r4
   115f0:	str	r0, [sp]
   115f4:	mov	r5, r0
   115f8:	mov	r0, r8
   115fc:	bl	11520 <dfs_helper@@Base>
   11600:	subs	r7, r0, #0
   11604:	bne	11624 <grafo_dfs@@Base+0x68>
   11608:	mov	r4, r7
   1160c:	mov	r0, r5
   11610:	bl	10c90 <free@plt>
   11614:	str	r7, [r6]
   11618:	mov	r0, r4
   1161c:	add	sp, sp, #8
   11620:	pop	{r4, r5, r6, r7, r8, pc}
   11624:	mov	r1, #4
   11628:	bl	10c48 <calloc@plt>
   1162c:	mov	r3, #0
   11630:	mov	r4, r0
   11634:	cmp	r3, r7
   11638:	bge	11670 <grafo_dfs@@Base+0xb4>
   1163c:	ldr	r0, [r8, #4]
   11640:	mov	r2, #0
   11644:	add	r1, r3, #1
   11648:	b	11650 <grafo_dfs@@Base+0x94>
   1164c:	add	r2, r2, #1
   11650:	cmp	r2, r0
   11654:	bge	11668 <grafo_dfs@@Base+0xac>
   11658:	ldr	ip, [r5, r2, lsl #2]
   1165c:	cmp	ip, r1
   11660:	bne	1164c <grafo_dfs@@Base+0x90>
   11664:	str	r2, [r4, r3, lsl #2]
   11668:	mov	r3, r1
   1166c:	b	11634 <grafo_dfs@@Base+0x78>
   11670:	str	r7, [r6]
   11674:	mov	r0, r5
   11678:	bl	10c90 <free@plt>
   1167c:	b	11618 <grafo_dfs@@Base+0x5c>

00011680 <grafo_bfs@@Base>:
   11680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11684:	sub	sp, sp, #20
   11688:	subs	fp, r0, #0
   1168c:	str	r3, [sp, #8]
   11690:	moveq	r8, fp
   11694:	beq	117d8 <grafo_bfs@@Base+0x158>
   11698:	ldr	r6, [fp, #4]
   1169c:	mov	r5, r1
   116a0:	mov	r0, r6
   116a4:	mov	r1, #4
   116a8:	mov	r7, r2
   116ac:	bl	10c48 <calloc@plt>
   116b0:	mov	r1, #4
   116b4:	mov	r4, r0
   116b8:	mov	r0, r6
   116bc:	bl	10c48 <calloc@plt>
   116c0:	mov	r3, #0
   116c4:	mvn	r2, #0
   116c8:	mov	r9, r0
   116cc:	cmp	r3, r6
   116d0:	blt	11734 <grafo_bfs@@Base+0xb4>
   116d4:	mov	r3, #1
   116d8:	mov	sl, #0
   116dc:	str	r5, [r4, r5, lsl #2]
   116e0:	str	r5, [r9]
   116e4:	str	r3, [sp, #12]
   116e8:	ldr	r3, [r9, sl, lsl #2]
   116ec:	add	r0, sl, #1
   116f0:	mov	r1, r6
   116f4:	str	r3, [sp, #4]
   116f8:	bl	12228 <lista_inverte@@Base+0x26c>
   116fc:	ldr	r3, [sp, #12]
   11700:	mov	r5, #0
   11704:	mov	sl, r1
   11708:	cmp	r5, r6
   1170c:	blt	11740 <grafo_bfs@@Base+0xc0>
   11710:	cmp	r3, sl
   11714:	bne	116e4 <grafo_bfs@@Base+0x64>
   11718:	ldr	r3, [r4, r7, lsl #2]
   1171c:	cmp	r3, #0
   11720:	movge	r3, r7
   11724:	movge	r6, #1
   11728:	bge	11798 <grafo_bfs@@Base+0x118>
   1172c:	mov	r6, #0
   11730:	b	117c0 <grafo_bfs@@Base+0x140>
   11734:	str	r2, [r4, r3, lsl #2]
   11738:	add	r3, r3, #1
   1173c:	b	116cc <grafo_bfs@@Base+0x4c>
   11740:	mov	r2, r5
   11744:	ldr	r1, [sp, #4]
   11748:	mov	r0, fp
   1174c:	str	r3, [sp, #12]
   11750:	bl	113dc <grafo_existe@@Base>
   11754:	ldr	r3, [sp, #12]
   11758:	cmp	r0, #0
   1175c:	beq	11788 <grafo_bfs@@Base+0x108>
   11760:	ldr	r2, [r4, r5, lsl #2]
   11764:	cmn	r2, #1
   11768:	bne	11788 <grafo_bfs@@Base+0x108>
   1176c:	ldr	r2, [sp, #4]
   11770:	add	r0, r3, #1
   11774:	mov	r1, r6
   11778:	str	r5, [r9, r3, lsl #2]
   1177c:	str	r2, [r4, r5, lsl #2]
   11780:	bl	12228 <lista_inverte@@Base+0x26c>
   11784:	mov	r3, r1
   11788:	add	r5, r5, #1
   1178c:	b	11708 <grafo_bfs@@Base+0x88>
   11790:	add	r6, r6, #1
   11794:	mov	r3, r2
   11798:	ldr	r2, [r4, r3, lsl #2]
   1179c:	cmp	r3, r2
   117a0:	bne	11790 <grafo_bfs@@Base+0x110>
   117a4:	lsl	r5, r6, #2
   117a8:	mov	r0, r5
   117ac:	bl	10cc0 <malloc@plt>
   117b0:	mov	r8, r0
   117b4:	add	r0, r0, r5
   117b8:	cmp	r8, r0
   117bc:	bne	117e4 <grafo_bfs@@Base+0x164>
   117c0:	mov	r0, r9
   117c4:	bl	10c90 <free@plt>
   117c8:	mov	r0, r4
   117cc:	bl	10c90 <free@plt>
   117d0:	ldr	r3, [sp, #8]
   117d4:	str	r6, [r3]
   117d8:	mov	r0, r8
   117dc:	add	sp, sp, #20
   117e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117e4:	str	r7, [r0, #-4]!
   117e8:	ldr	r7, [r4, r7, lsl #2]
   117ec:	b	117b8 <grafo_bfs@@Base+0x138>

000117f0 <heap_nova@@Base>:
   117f0:	push	{r4, r5, r6, lr}
   117f4:	mov	r5, r0
   117f8:	mov	r0, #12
   117fc:	bl	10cc0 <malloc@plt>
   11800:	subs	r4, r0, #0
   11804:	beq	11838 <heap_nova@@Base+0x48>
   11808:	mov	r3, #0
   1180c:	mov	r0, r5
   11810:	stm	r4, {r3, r5}
   11814:	mov	r1, #4
   11818:	bl	10c48 <calloc@plt>
   1181c:	cmp	r0, #0
   11820:	mov	r5, r0
   11824:	str	r0, [r4, #8]
   11828:	bne	11838 <heap_nova@@Base+0x48>
   1182c:	mov	r0, r4
   11830:	bl	10c90 <free@plt>
   11834:	mov	r4, r5
   11838:	mov	r0, r4
   1183c:	pop	{r4, r5, r6, pc}

00011840 <heap_apaga@@Base>:
   11840:	push	{r4, r5, r6, lr}
   11844:	subs	r4, r0, #0
   11848:	movne	r5, #0
   1184c:	movne	r6, r5
   11850:	bne	11880 <heap_apaga@@Base+0x40>
   11854:	pop	{r4, r5, r6, pc}
   11858:	ldr	r3, [r4, #8]
   1185c:	ldr	r3, [r3, r5, lsl #2]
   11860:	ldr	r0, [r3, #4]
   11864:	bl	10c90 <free@plt>
   11868:	ldr	r3, [r4, #8]
   1186c:	ldr	r0, [r3, r5, lsl #2]
   11870:	bl	10c90 <free@plt>
   11874:	ldr	r3, [r4, #8]
   11878:	str	r6, [r3, r5, lsl #2]
   1187c:	add	r5, r5, #1
   11880:	ldr	r3, [r4]
   11884:	cmp	r5, r3
   11888:	blt	11858 <heap_apaga@@Base+0x18>
   1188c:	ldr	r0, [r4, #8]
   11890:	bl	10c90 <free@plt>
   11894:	mov	r0, r4
   11898:	pop	{r4, r5, r6, lr}
   1189c:	b	10c90 <free@plt>

000118a0 <elemento_cria@@Base>:
   118a0:	push	{r4, r5, r6, r7, r8, lr}
   118a4:	mov	r7, r0
   118a8:	mov	r0, #8
   118ac:	mov	r6, r1
   118b0:	bl	10cc0 <malloc@plt>
   118b4:	subs	r4, r0, #0
   118b8:	beq	118ec <elemento_cria@@Base+0x4c>
   118bc:	mov	r0, r6
   118c0:	bl	10ce4 <strlen@plt>
   118c4:	mov	r1, #1
   118c8:	add	r0, r0, r1
   118cc:	bl	10c48 <calloc@plt>
   118d0:	cmp	r0, #0
   118d4:	mov	r5, r0
   118d8:	str	r0, [r4, #4]
   118dc:	bne	118f4 <elemento_cria@@Base+0x54>
   118e0:	mov	r0, r4
   118e4:	bl	10c90 <free@plt>
   118e8:	mov	r4, r5
   118ec:	mov	r0, r4
   118f0:	pop	{r4, r5, r6, r7, r8, pc}
   118f4:	mov	r1, r6
   118f8:	bl	10ca8 <strcpy@plt>
   118fc:	str	r7, [r4]
   11900:	b	118ec <elemento_cria@@Base+0x4c>

00011904 <mostraHeap@@Base>:
   11904:	ldr	r3, [r0]
   11908:	cmp	r3, r1
   1190c:	ble	119a8 <mostraHeap@@Base+0xa4>
   11910:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11914:	mov	r3, r1
   11918:	mov	r7, #0
   1191c:	cmp	r3, #0
   11920:	bgt	11988 <mostraHeap@@Base+0x84>
   11924:	lsl	r8, r1, #1
   11928:	mov	r6, r1
   1192c:	add	r1, r8, #1
   11930:	mov	r4, r0
   11934:	bl	11904 <mostraHeap@@Base>
   11938:	ldr	sl, [pc, #112]	; 119b0 <mostraHeap@@Base+0xac>
   1193c:	add	r9, r7, r7, lsl #1
   11940:	mov	r5, #0
   11944:	cmp	r5, r9
   11948:	bne	11998 <mostraHeap@@Base+0x94>
   1194c:	ldr	r3, [r4, #8]
   11950:	ldr	r0, [pc, #92]	; 119b4 <mostraHeap@@Base+0xb0>
   11954:	ldr	r3, [r3, r6, lsl #2]
   11958:	ldr	r1, [r3, #4]
   1195c:	ldr	r2, [r3]
   11960:	bl	10c6c <printf@plt>
   11964:	add	r1, r8, #2
   11968:	mov	r0, r4
   1196c:	bl	11904 <mostraHeap@@Base>
   11970:	cmp	r7, #0
   11974:	beq	1197c <mostraHeap@@Base+0x78>
   11978:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1197c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11980:	mov	r0, #10
   11984:	b	10cf0 <putchar@plt>
   11988:	sub	r3, r3, #1
   1198c:	add	r7, r7, #1
   11990:	asr	r3, r3, #1
   11994:	b	1191c <mostraHeap@@Base+0x18>
   11998:	mov	r0, sl
   1199c:	bl	10c6c <printf@plt>
   119a0:	add	r5, r5, #1
   119a4:	b	11944 <mostraHeap@@Base+0x40>
   119a8:	mov	r0, #10
   119ac:	b	11984 <mostraHeap@@Base+0x80>
   119b0:	andeq	r2, r1, r5, ror #6
   119b4:	andeq	r2, r1, fp, ror #6

000119b8 <menor_que@@Base>:
   119b8:	cmp	r1, #0
   119bc:	cmpne	r0, #0
   119c0:	beq	119dc <menor_que@@Base+0x24>
   119c4:	ldr	r0, [r0]
   119c8:	ldr	r3, [r1]
   119cc:	cmp	r0, r3
   119d0:	movge	r0, #0
   119d4:	movlt	r0, #1
   119d8:	bx	lr
   119dc:	mov	r0, #0
   119e0:	bx	lr

000119e4 <heap_insere@@Base>:
   119e4:	push	{r4, r5, r6, r7, r8, lr}
   119e8:	mov	r4, r0
   119ec:	ldr	r0, [r0]
   119f0:	ldr	r3, [r4, #4]
   119f4:	cmp	r0, r3
   119f8:	blt	11a04 <heap_insere@@Base+0x20>
   119fc:	mov	r0, #0
   11a00:	pop	{r4, r5, r6, r7, r8, pc}
   11a04:	mov	r0, r2
   11a08:	bl	118a0 <elemento_cria@@Base>
   11a0c:	cmp	r0, #0
   11a10:	beq	119fc <heap_insere@@Base+0x18>
   11a14:	ldr	r2, [r4]
   11a18:	ldr	r5, [r4, #8]
   11a1c:	add	r3, r2, #1
   11a20:	str	r0, [r5, r2, lsl #2]
   11a24:	str	r3, [r4]
   11a28:	cmp	r2, #0
   11a2c:	beq	11a5c <heap_insere@@Base+0x78>
   11a30:	ldr	r4, [r5, r2, lsl #2]
   11a34:	lsl	r7, r2, #2
   11a38:	sub	r2, r2, #1
   11a3c:	mov	r0, r4
   11a40:	add	r2, r2, r2, lsr #31
   11a44:	asr	r2, r2, #1
   11a48:	ldr	r6, [r5, r2, lsl #2]
   11a4c:	mov	r1, r6
   11a50:	bl	119b8 <menor_que@@Base>
   11a54:	cmp	r0, #0
   11a58:	bne	11a64 <heap_insere@@Base+0x80>
   11a5c:	mov	r0, #1
   11a60:	pop	{r4, r5, r6, r7, r8, pc}
   11a64:	str	r4, [r5, r2, lsl #2]
   11a68:	str	r6, [r5, r7]
   11a6c:	b	11a28 <heap_insere@@Base+0x44>

00011a70 <heap_remove@@Base>:
   11a70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a74:	subs	r4, r0, #0
   11a78:	beq	11b24 <heap_remove@@Base+0xb4>
   11a7c:	ldr	r3, [r4]
   11a80:	cmp	r3, #0
   11a84:	ble	11b24 <heap_remove@@Base+0xb4>
   11a88:	ldr	r3, [r4, #8]
   11a8c:	mov	r5, #0
   11a90:	ldr	r0, [r3]
   11a94:	ldr	r9, [r0, #4]
   11a98:	bl	10c90 <free@plt>
   11a9c:	ldr	r6, [r4]
   11aa0:	ldr	r2, [r4, #8]
   11aa4:	sub	r6, r6, #1
   11aa8:	str	r6, [r4]
   11aac:	ldr	r3, [r2, r6, lsl #2]
   11ab0:	str	r3, [r2]
   11ab4:	str	r5, [r2, r6, lsl #2]
   11ab8:	lsl	r8, r5, #1
   11abc:	add	r7, r8, #1
   11ac0:	cmp	r6, r7
   11ac4:	bgt	11ad0 <heap_remove@@Base+0x60>
   11ac8:	mov	r0, r9
   11acc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ad0:	add	r8, r8, #2
   11ad4:	cmp	r6, r8
   11ad8:	ble	11af8 <heap_remove@@Base+0x88>
   11adc:	add	r3, r5, #1
   11ae0:	add	r1, r2, r3, lsl #3
   11ae4:	ldr	r0, [r2, r3, lsl #3]
   11ae8:	ldr	r1, [r1, #-4]
   11aec:	bl	119b8 <menor_que@@Base>
   11af0:	cmp	r0, #0
   11af4:	movne	r7, r8
   11af8:	ldr	r4, [r2, r7, lsl #2]
   11afc:	ldr	r8, [r2, r5, lsl #2]
   11b00:	mov	r0, r4
   11b04:	mov	r1, r8
   11b08:	bl	119b8 <menor_que@@Base>
   11b0c:	cmp	r0, #0
   11b10:	beq	11ac8 <heap_remove@@Base+0x58>
   11b14:	str	r8, [r2, r7, lsl #2]
   11b18:	str	r4, [r2, r5, lsl #2]
   11b1c:	mov	r5, r7
   11b20:	b	11ab8 <heap_remove@@Base+0x48>
   11b24:	mov	r9, #0
   11b28:	b	11ac8 <heap_remove@@Base+0x58>

00011b2c <novo_str@@Base>:
   11b2c:	push	{r4, r5, r6, lr}
   11b30:	mov	r6, r0
   11b34:	mov	r0, #8
   11b38:	bl	10cc0 <malloc@plt>
   11b3c:	subs	r4, r0, #0
   11b40:	beq	11b70 <novo_str@@Base+0x44>
   11b44:	mov	r0, r6
   11b48:	bl	10ce4 <strlen@plt>
   11b4c:	add	r0, r0, #1
   11b50:	bl	10cc0 <malloc@plt>
   11b54:	cmp	r0, #0
   11b58:	mov	r5, r0
   11b5c:	str	r0, [r4]
   11b60:	bne	11b78 <novo_str@@Base+0x4c>
   11b64:	mov	r0, r4
   11b68:	bl	10c90 <free@plt>
   11b6c:	mov	r4, r5
   11b70:	mov	r0, r4
   11b74:	pop	{r4, r5, r6, pc}
   11b78:	mov	r1, r6
   11b7c:	bl	10ca8 <strcpy@plt>
   11b80:	mov	r3, #0
   11b84:	str	r3, [r4, #4]
   11b88:	b	11b70 <novo_str@@Base+0x44>

00011b8c <lista_nova@@Base>:
   11b8c:	push	{r4, lr}
   11b90:	mov	r0, #8
   11b94:	bl	10cc0 <malloc@plt>
   11b98:	cmp	r0, #0
   11b9c:	movne	r3, #0
   11ba0:	strne	r3, [r0]
   11ba4:	strne	r3, [r0, #4]
   11ba8:	pop	{r4, pc}

00011bac <lista_apaga@@Base>:
   11bac:	push	{r4, r5, r6, lr}
   11bb0:	subs	r5, r0, #0
   11bb4:	bne	11bd4 <lista_apaga@@Base+0x28>
   11bb8:	pop	{r4, r5, r6, pc}
   11bbc:	ldr	r3, [r4, #4]
   11bc0:	ldr	r0, [r4]
   11bc4:	str	r3, [r5]
   11bc8:	bl	10c90 <free@plt>
   11bcc:	mov	r0, r4
   11bd0:	bl	10c90 <free@plt>
   11bd4:	ldr	r4, [r5]
   11bd8:	cmp	r4, #0
   11bdc:	bne	11bbc <lista_apaga@@Base+0x10>
   11be0:	mov	r0, r5
   11be4:	pop	{r4, r5, r6, lr}
   11be8:	b	10c90 <free@plt>

00011bec <lista_tamanho@@Base>:
   11bec:	cmp	r0, #0
   11bf0:	ldrne	r0, [r0, #4]
   11bf4:	mvneq	r0, #0
   11bf8:	bx	lr

00011bfc <lista_elemento@@Base>:
   11bfc:	lsr	r3, r1, #31
   11c00:	cmp	r0, #0
   11c04:	orreq	r3, r3, #1
   11c08:	cmp	r3, #0
   11c0c:	ldreq	r0, [r0]
   11c10:	beq	11c24 <lista_elemento@@Base+0x28>
   11c14:	mov	r0, #0
   11c18:	bx	lr
   11c1c:	ldr	r0, [r0, #4]
   11c20:	add	r3, r3, #1
   11c24:	cmp	r0, #0
   11c28:	cmpne	r3, r1
   11c2c:	blt	11c1c <lista_elemento@@Base+0x20>
   11c30:	cmp	r0, #0
   11c34:	ldrne	r0, [r0]
   11c38:	bx	lr

00011c3c <lista_atribui@@Base>:
   11c3c:	lsr	r3, r1, #31
   11c40:	cmp	r0, #0
   11c44:	orreq	r3, r3, #1
   11c48:	cmp	r3, #0
   11c4c:	push	{r4, r5, r6, lr}
   11c50:	moveq	r5, r1
   11c54:	moveq	r6, r2
   11c58:	ldreq	r4, [r0]
   11c5c:	beq	11c70 <lista_atribui@@Base+0x34>
   11c60:	mvn	r5, #0
   11c64:	b	11ca4 <lista_atribui@@Base+0x68>
   11c68:	ldr	r4, [r4, #4]
   11c6c:	add	r3, r3, #1
   11c70:	cmp	r4, #0
   11c74:	cmpne	r3, r5
   11c78:	blt	11c68 <lista_atribui@@Base+0x2c>
   11c7c:	cmp	r4, #0
   11c80:	beq	11c60 <lista_atribui@@Base+0x24>
   11c84:	mov	r0, r6
   11c88:	bl	10ce4 <strlen@plt>
   11c8c:	add	r1, r0, #1
   11c90:	ldr	r0, [r4]
   11c94:	bl	10c9c <realloc@plt>
   11c98:	mov	r1, r6
   11c9c:	str	r0, [r4]
   11ca0:	bl	10ca8 <strcpy@plt>
   11ca4:	mov	r0, r5
   11ca8:	pop	{r4, r5, r6, pc}

00011cac <lista_insere@@Base>:
   11cac:	cmn	r2, #1
   11cb0:	movge	r3, #0
   11cb4:	movlt	r3, #1
   11cb8:	cmp	r0, #0
   11cbc:	orreq	r3, r3, #1
   11cc0:	cmp	r3, #0
   11cc4:	beq	11cd8 <lista_insere@@Base+0x2c>
   11cc8:	mvn	r0, #0
   11ccc:	bx	lr
   11cd0:	mvn	r0, #0
   11cd4:	pop	{r4, r5, r6, pc}
   11cd8:	cmp	r2, #0
   11cdc:	beq	11cec <lista_insere@@Base+0x40>
   11ce0:	ldr	r3, [r0, #4]
   11ce4:	cmp	r2, r3
   11ce8:	bge	11cc8 <lista_insere@@Base+0x1c>
   11cec:	push	{r4, r5, r6, lr}
   11cf0:	mov	r6, r0
   11cf4:	mov	r0, r1
   11cf8:	mov	r5, r2
   11cfc:	ldr	r4, [r6]
   11d00:	bl	11b2c <novo_str@@Base>
   11d04:	subs	r3, r0, #0
   11d08:	beq	11cd0 <lista_insere@@Base+0x24>
   11d0c:	ldr	r0, [r6, #4]
   11d10:	cmn	r5, #1
   11d14:	add	r2, r0, #1
   11d18:	str	r2, [r6, #4]
   11d1c:	bne	11d48 <lista_insere@@Base+0x9c>
   11d20:	cmp	r4, #0
   11d24:	bne	11d34 <lista_insere@@Base+0x88>
   11d28:	str	r3, [r6]
   11d2c:	pop	{r4, r5, r6, pc}
   11d30:	mov	r4, r2
   11d34:	ldr	r2, [r4, #4]
   11d38:	cmp	r2, #0
   11d3c:	bne	11d30 <lista_insere@@Base+0x84>
   11d40:	str	r3, [r4, #4]
   11d44:	pop	{r4, r5, r6, pc}
   11d48:	cmp	r5, #0
   11d4c:	streq	r4, [r3, #4]
   11d50:	movne	r2, #0
   11d54:	subne	r0, r5, #1
   11d58:	streq	r3, [r6]
   11d5c:	beq	11d90 <lista_insere@@Base+0xe4>
   11d60:	cmp	r2, r0
   11d64:	ldr	r1, [r4, #4]
   11d68:	bge	11d88 <lista_insere@@Base+0xdc>
   11d6c:	cmp	r4, #0
   11d70:	bne	11d7c <lista_insere@@Base+0xd0>
   11d74:	ldr	r3, [r4, #4]
   11d78:	udf	#0
   11d7c:	mov	r4, r1
   11d80:	add	r2, r2, #1
   11d84:	b	11d60 <lista_insere@@Base+0xb4>
   11d88:	str	r1, [r3, #4]
   11d8c:	str	r3, [r4, #4]
   11d90:	mov	r0, r5
   11d94:	pop	{r4, r5, r6, pc}

00011d98 <lista_remove@@Base>:
   11d98:	lsr	r3, r1, #31
   11d9c:	cmp	r0, #0
   11da0:	orreq	r3, r3, #1
   11da4:	cmp	r3, #0
   11da8:	push	{r4, r5, r6, lr}
   11dac:	bne	11e30 <lista_remove@@Base+0x98>
   11db0:	ldr	r2, [r0, #4]
   11db4:	mov	r4, r1
   11db8:	cmp	r1, r2
   11dbc:	bge	11e30 <lista_remove@@Base+0x98>
   11dc0:	sub	r2, r2, #1
   11dc4:	cmp	r1, #0
   11dc8:	ldr	r5, [r0]
   11dcc:	str	r2, [r0, #4]
   11dd0:	bne	11e08 <lista_remove@@Base+0x70>
   11dd4:	ldr	r3, [r5, #4]
   11dd8:	str	r3, [r0]
   11ddc:	ldr	r0, [r5]
   11de0:	bl	10c90 <free@plt>
   11de4:	mov	r0, r5
   11de8:	bl	10c90 <free@plt>
   11dec:	mov	r0, r4
   11df0:	pop	{r4, r5, r6, pc}
   11df4:	cmp	r2, #0
   11df8:	beq	11e14 <lista_remove@@Base+0x7c>
   11dfc:	mov	ip, r5
   11e00:	add	r3, r3, #1
   11e04:	mov	r5, r2
   11e08:	cmp	r3, r4
   11e0c:	ldr	r2, [r5, #4]
   11e10:	blt	11df4 <lista_remove@@Base+0x5c>
   11e14:	str	r2, [ip, #4]
   11e18:	ldr	r0, [r5]
   11e1c:	bl	10c90 <free@plt>
   11e20:	mov	r0, r5
   11e24:	bl	10c90 <free@plt>
   11e28:	mov	r4, #0
   11e2c:	b	11dec <lista_remove@@Base+0x54>
   11e30:	mvn	r4, #0
   11e34:	b	11dec <lista_remove@@Base+0x54>

00011e38 <lista_pesquisa@@Base>:
   11e38:	cmp	r0, #0
   11e3c:	push	{r4, r5, r6, r7, r8, lr}
   11e40:	mvneq	r4, #0
   11e44:	beq	11e64 <lista_pesquisa@@Base+0x2c>
   11e48:	ldr	r6, [r0]
   11e4c:	mov	r7, r2
   11e50:	mov	r8, r1
   11e54:	mvn	r4, #0
   11e58:	mov	r5, #0
   11e5c:	cmp	r6, #0
   11e60:	bne	11e6c <lista_pesquisa@@Base+0x34>
   11e64:	mov	r0, r4
   11e68:	pop	{r4, r5, r6, r7, r8, pc}
   11e6c:	mov	r1, r8
   11e70:	ldr	r0, [r6]
   11e74:	bl	10c60 <strcmp@plt>
   11e78:	cmp	r0, #0
   11e7c:	bne	11e90 <lista_pesquisa@@Base+0x58>
   11e80:	cmp	r7, #0
   11e84:	beq	11e9c <lista_pesquisa@@Base+0x64>
   11e88:	cmn	r7, #1
   11e8c:	moveq	r4, r5
   11e90:	ldr	r6, [r6, #4]
   11e94:	add	r5, r5, #1
   11e98:	b	11e5c <lista_pesquisa@@Base+0x24>
   11e9c:	mov	r4, r5
   11ea0:	b	11e64 <lista_pesquisa@@Base+0x2c>

00011ea4 <lista_ordena@@Base>:
   11ea4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ea8:	subs	r7, r0, #0
   11eac:	ldrne	r5, [r7]
   11eb0:	bne	11f1c <lista_ordena@@Base+0x78>
   11eb4:	mvn	r0, #0
   11eb8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ebc:	ldr	sl, [r4]
   11ec0:	ldr	r0, [r5]
   11ec4:	mov	r1, sl
   11ec8:	bl	10c60 <strcmp@plt>
   11ecc:	cmp	r0, #0
   11ed0:	ldrle	r5, [r5, #4]
   11ed4:	ble	11f1c <lista_ordena@@Base+0x78>
   11ed8:	ldr	r3, [r4, #4]
   11edc:	ldr	r8, [r7]
   11ee0:	str	r3, [r5, #4]
   11ee4:	ldr	fp, [r4, #4]
   11ee8:	mov	r9, r8
   11eec:	mov	r6, r8
   11ef0:	cmp	r5, fp
   11ef4:	beq	11f1c <lista_ordena@@Base+0x78>
   11ef8:	mov	r1, sl
   11efc:	ldr	r0, [r6]
   11f00:	bl	10c60 <strcmp@plt>
   11f04:	cmp	r0, #0
   11f08:	ble	11f30 <lista_ordena@@Base+0x8c>
   11f0c:	cmp	r6, r8
   11f10:	str	r6, [r4, #4]
   11f14:	streq	r4, [r7]
   11f18:	strne	r4, [r9, #4]
   11f1c:	ldr	r4, [r5, #4]
   11f20:	cmp	r4, #0
   11f24:	bne	11ebc <lista_ordena@@Base+0x18>
   11f28:	mov	r0, r4
   11f2c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f30:	mov	r9, r6
   11f34:	ldr	r6, [r6, #4]
   11f38:	b	11ef0 <lista_ordena@@Base+0x4c>

00011f3c <lista_compara@@Base>:
   11f3c:	cmp	r1, #0
   11f40:	cmpne	r0, #0
   11f44:	moveq	r3, #1
   11f48:	movne	r3, #0
   11f4c:	beq	11fa4 <lista_compara@@Base+0x68>
   11f50:	ldr	ip, [r0, #4]
   11f54:	ldr	r2, [r1, #4]
   11f58:	cmp	ip, r2
   11f5c:	bne	11fac <lista_compara@@Base+0x70>
   11f60:	push	{r4, r5, r6, lr}
   11f64:	ldr	r5, [r0]
   11f68:	ldr	r4, [r1]
   11f6c:	cmp	r5, #0
   11f70:	bne	11f84 <lista_compara@@Base+0x48>
   11f74:	cmp	r4, #0
   11f78:	mvnne	r0, #0
   11f7c:	moveq	r0, #1
   11f80:	pop	{r4, r5, r6, pc}
   11f84:	ldr	r1, [r4]
   11f88:	ldr	r0, [r5]
   11f8c:	bl	10c60 <strcmp@plt>
   11f90:	cmp	r0, #0
   11f94:	bne	11fb4 <lista_compara@@Base+0x78>
   11f98:	ldr	r5, [r5, #4]
   11f9c:	ldr	r4, [r4, #4]
   11fa0:	b	11f6c <lista_compara@@Base+0x30>
   11fa4:	mvn	r0, #0
   11fa8:	bx	lr
   11fac:	mov	r0, r3
   11fb0:	bx	lr
   11fb4:	mov	r0, #0
   11fb8:	pop	{r4, r5, r6, pc}

00011fbc <lista_inverte@@Base>:
   11fbc:	push	{r4, r5, r6, lr}
   11fc0:	subs	r4, r0, #0
   11fc4:	bne	11fd4 <lista_inverte@@Base+0x18>
   11fc8:	mov	r5, #0
   11fcc:	mov	r0, r5
   11fd0:	pop	{r4, r5, r6, pc}
   11fd4:	bl	11b8c <lista_nova@@Base>
   11fd8:	subs	r5, r0, #0
   11fdc:	movne	r6, #0
   11fe0:	ldrne	r4, [r4]
   11fe4:	beq	11fc8 <lista_inverte@@Base+0xc>
   11fe8:	cmp	r4, #0
   11fec:	beq	11fcc <lista_inverte@@Base+0x10>
   11ff0:	ldr	r1, [r4]
   11ff4:	mov	r2, r6
   11ff8:	mov	r0, r5
   11ffc:	bl	11cac <lista_insere@@Base>
   12000:	ldr	r4, [r4, #4]
   12004:	b	11fe8 <lista_inverte@@Base+0x2c>
   12008:	cmp	r1, #0
   1200c:	beq	12218 <lista_inverte@@Base+0x25c>
   12010:	eor	ip, r0, r1
   12014:	rsbmi	r1, r1, #0
   12018:	subs	r2, r1, #1
   1201c:	beq	121e4 <lista_inverte@@Base+0x228>
   12020:	movs	r3, r0
   12024:	rsbmi	r3, r0, #0
   12028:	cmp	r3, r1
   1202c:	bls	121f0 <lista_inverte@@Base+0x234>
   12030:	tst	r1, r2
   12034:	beq	12200 <lista_inverte@@Base+0x244>
   12038:	clz	r2, r3
   1203c:	clz	r0, r1
   12040:	sub	r2, r0, r2
   12044:	rsbs	r2, r2, #31
   12048:	addne	r2, r2, r2, lsl #1
   1204c:	mov	r0, #0
   12050:	addne	pc, pc, r2, lsl #2
   12054:	nop			; (mov r0, r0)
   12058:	cmp	r3, r1, lsl #31
   1205c:	adc	r0, r0, r0
   12060:	subcs	r3, r3, r1, lsl #31
   12064:	cmp	r3, r1, lsl #30
   12068:	adc	r0, r0, r0
   1206c:	subcs	r3, r3, r1, lsl #30
   12070:	cmp	r3, r1, lsl #29
   12074:	adc	r0, r0, r0
   12078:	subcs	r3, r3, r1, lsl #29
   1207c:	cmp	r3, r1, lsl #28
   12080:	adc	r0, r0, r0
   12084:	subcs	r3, r3, r1, lsl #28
   12088:	cmp	r3, r1, lsl #27
   1208c:	adc	r0, r0, r0
   12090:	subcs	r3, r3, r1, lsl #27
   12094:	cmp	r3, r1, lsl #26
   12098:	adc	r0, r0, r0
   1209c:	subcs	r3, r3, r1, lsl #26
   120a0:	cmp	r3, r1, lsl #25
   120a4:	adc	r0, r0, r0
   120a8:	subcs	r3, r3, r1, lsl #25
   120ac:	cmp	r3, r1, lsl #24
   120b0:	adc	r0, r0, r0
   120b4:	subcs	r3, r3, r1, lsl #24
   120b8:	cmp	r3, r1, lsl #23
   120bc:	adc	r0, r0, r0
   120c0:	subcs	r3, r3, r1, lsl #23
   120c4:	cmp	r3, r1, lsl #22
   120c8:	adc	r0, r0, r0
   120cc:	subcs	r3, r3, r1, lsl #22
   120d0:	cmp	r3, r1, lsl #21
   120d4:	adc	r0, r0, r0
   120d8:	subcs	r3, r3, r1, lsl #21
   120dc:	cmp	r3, r1, lsl #20
   120e0:	adc	r0, r0, r0
   120e4:	subcs	r3, r3, r1, lsl #20
   120e8:	cmp	r3, r1, lsl #19
   120ec:	adc	r0, r0, r0
   120f0:	subcs	r3, r3, r1, lsl #19
   120f4:	cmp	r3, r1, lsl #18
   120f8:	adc	r0, r0, r0
   120fc:	subcs	r3, r3, r1, lsl #18
   12100:	cmp	r3, r1, lsl #17
   12104:	adc	r0, r0, r0
   12108:	subcs	r3, r3, r1, lsl #17
   1210c:	cmp	r3, r1, lsl #16
   12110:	adc	r0, r0, r0
   12114:	subcs	r3, r3, r1, lsl #16
   12118:	cmp	r3, r1, lsl #15
   1211c:	adc	r0, r0, r0
   12120:	subcs	r3, r3, r1, lsl #15
   12124:	cmp	r3, r1, lsl #14
   12128:	adc	r0, r0, r0
   1212c:	subcs	r3, r3, r1, lsl #14
   12130:	cmp	r3, r1, lsl #13
   12134:	adc	r0, r0, r0
   12138:	subcs	r3, r3, r1, lsl #13
   1213c:	cmp	r3, r1, lsl #12
   12140:	adc	r0, r0, r0
   12144:	subcs	r3, r3, r1, lsl #12
   12148:	cmp	r3, r1, lsl #11
   1214c:	adc	r0, r0, r0
   12150:	subcs	r3, r3, r1, lsl #11
   12154:	cmp	r3, r1, lsl #10
   12158:	adc	r0, r0, r0
   1215c:	subcs	r3, r3, r1, lsl #10
   12160:	cmp	r3, r1, lsl #9
   12164:	adc	r0, r0, r0
   12168:	subcs	r3, r3, r1, lsl #9
   1216c:	cmp	r3, r1, lsl #8
   12170:	adc	r0, r0, r0
   12174:	subcs	r3, r3, r1, lsl #8
   12178:	cmp	r3, r1, lsl #7
   1217c:	adc	r0, r0, r0
   12180:	subcs	r3, r3, r1, lsl #7
   12184:	cmp	r3, r1, lsl #6
   12188:	adc	r0, r0, r0
   1218c:	subcs	r3, r3, r1, lsl #6
   12190:	cmp	r3, r1, lsl #5
   12194:	adc	r0, r0, r0
   12198:	subcs	r3, r3, r1, lsl #5
   1219c:	cmp	r3, r1, lsl #4
   121a0:	adc	r0, r0, r0
   121a4:	subcs	r3, r3, r1, lsl #4
   121a8:	cmp	r3, r1, lsl #3
   121ac:	adc	r0, r0, r0
   121b0:	subcs	r3, r3, r1, lsl #3
   121b4:	cmp	r3, r1, lsl #2
   121b8:	adc	r0, r0, r0
   121bc:	subcs	r3, r3, r1, lsl #2
   121c0:	cmp	r3, r1, lsl #1
   121c4:	adc	r0, r0, r0
   121c8:	subcs	r3, r3, r1, lsl #1
   121cc:	cmp	r3, r1
   121d0:	adc	r0, r0, r0
   121d4:	subcs	r3, r3, r1
   121d8:	cmp	ip, #0
   121dc:	rsbmi	r0, r0, #0
   121e0:	bx	lr
   121e4:	teq	ip, r0
   121e8:	rsbmi	r0, r0, #0
   121ec:	bx	lr
   121f0:	movcc	r0, #0
   121f4:	asreq	r0, ip, #31
   121f8:	orreq	r0, r0, #1
   121fc:	bx	lr
   12200:	clz	r2, r1
   12204:	rsb	r2, r2, #31
   12208:	cmp	ip, #0
   1220c:	lsr	r0, r3, r2
   12210:	rsbmi	r0, r0, #0
   12214:	bx	lr
   12218:	cmp	r0, #0
   1221c:	mvngt	r0, #-2147483648	; 0x80000000
   12220:	movlt	r0, #-2147483648	; 0x80000000
   12224:	b	12248 <lista_inverte@@Base+0x28c>
   12228:	cmp	r1, #0
   1222c:	beq	12218 <lista_inverte@@Base+0x25c>
   12230:	push	{r0, r1, lr}
   12234:	bl	12010 <lista_inverte@@Base+0x54>
   12238:	pop	{r1, r2, lr}
   1223c:	mul	r3, r2, r0
   12240:	sub	r1, r1, r3
   12244:	bx	lr
   12248:	push	{r1, lr}
   1224c:	mov	r0, #8
   12250:	bl	10c54 <raise@plt>
   12254:	pop	{r1, pc}

00012258 <__libc_csu_init@@Base>:
   12258:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1225c:	mov	r7, r0
   12260:	ldr	r6, [pc, #72]	; 122b0 <__libc_csu_init@@Base+0x58>
   12264:	ldr	r5, [pc, #72]	; 122b4 <__libc_csu_init@@Base+0x5c>
   12268:	add	r6, pc, r6
   1226c:	add	r5, pc, r5
   12270:	sub	r6, r6, r5
   12274:	mov	r8, r1
   12278:	mov	r9, r2
   1227c:	bl	10c28 <calloc@plt-0x20>
   12280:	asrs	r6, r6, #2
   12284:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12288:	mov	r4, #0
   1228c:	add	r4, r4, #1
   12290:	ldr	r3, [r5], #4
   12294:	mov	r2, r9
   12298:	mov	r1, r8
   1229c:	mov	r0, r7
   122a0:	blx	r3
   122a4:	cmp	r6, r4
   122a8:	bne	1228c <__libc_csu_init@@Base+0x34>
   122ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122b0:	andeq	r0, r1, r0, lsr #25
   122b4:	muleq	r1, r8, ip

000122b8 <__libc_csu_fini@@Base>:
   122b8:	bx	lr

Disassembly of section .fini:

000122bc <.fini>:
   122bc:	push	{r3, lr}
   122c0:	pop	{r3, pc}
