
../repos/charybdis/extensions/.libs/extb_hostmask.so:     file format elf32-littlearm


Disassembly of section .init:

00000378 <_init>:
 378:	push	{r3, lr}
 37c:	bl	3bc <call_weak_fn>
 380:	pop	{r3, pc}

Disassembly of section .plt:

00000384 <.plt>:
 384:	push	{lr}		; (str lr, [sp, #-4]!)
 388:	ldr	lr, [pc, #4]	; 394 <.plt+0x10>
 38c:	add	lr, pc, lr
 390:	ldr	pc, [lr, #8]!
 394:	.word	0x00010c6c

00000398 <__cxa_finalize@plt>:
 398:	add	ip, pc, #0, 12
 39c:	add	ip, ip, #16, 20	; 0x10000
 3a0:	ldr	pc, [ip, #3180]!	; 0xc6c

000003a4 <__gmon_start__@plt>:
 3a4:	add	ip, pc, #0, 12
 3a8:	add	ip, ip, #16, 20	; 0x10000
 3ac:	ldr	pc, [ip, #3172]!	; 0xc64

000003b0 <client_matches_mask@plt>:
 3b0:	add	ip, pc, #0, 12
 3b4:	add	ip, ip, #16, 20	; 0x10000
 3b8:	ldr	pc, [ip, #3164]!	; 0xc5c

Disassembly of section .text:

000003bc <call_weak_fn>:
 3bc:	ldr	r3, [pc, #20]	; 3d8 <call_weak_fn+0x1c>
 3c0:	ldr	r2, [pc, #20]	; 3dc <call_weak_fn+0x20>
 3c4:	add	r3, pc, r3
 3c8:	ldr	r2, [r3, r2]
 3cc:	cmp	r2, #0
 3d0:	bxeq	lr
 3d4:	b	3a4 <__gmon_start__@plt>
 3d8:	.word	0x00010c34
 3dc:	.word	0x00000020

000003e0 <deregister_tm_clones>:
 3e0:	ldr	r0, [pc, #44]	; 414 <deregister_tm_clones+0x34>
 3e4:	ldr	r3, [pc, #44]	; 418 <deregister_tm_clones+0x38>
 3e8:	add	r0, pc, r0
 3ec:	add	r3, pc, r3
 3f0:	cmp	r3, r0
 3f4:	ldr	r3, [pc, #32]	; 41c <deregister_tm_clones+0x3c>
 3f8:	add	r3, pc, r3
 3fc:	bxeq	lr
 400:	ldr	r2, [pc, #24]	; 420 <deregister_tm_clones+0x40>
 404:	ldr	r3, [r3, r2]
 408:	cmp	r3, #0
 40c:	bxeq	lr
 410:	bx	r3
 414:	.word	0x00010c68
 418:	.word	0x00010c64
 41c:	.word	0x00010c00
 420:	.word	0x0000001c

00000424 <register_tm_clones>:
 424:	ldr	r0, [pc, #56]	; 464 <register_tm_clones+0x40>
 428:	ldr	r3, [pc, #56]	; 468 <register_tm_clones+0x44>
 42c:	add	r0, pc, r0
 430:	add	r3, pc, r3
 434:	sub	r1, r3, r0
 438:	ldr	r3, [pc, #44]	; 46c <register_tm_clones+0x48>
 43c:	asr	r1, r1, #2
 440:	add	r3, pc, r3
 444:	add	r1, r1, r1, lsr #31
 448:	asrs	r1, r1, #1
 44c:	bxeq	lr
 450:	ldr	r2, [pc, #24]	; 470 <register_tm_clones+0x4c>
 454:	ldr	r3, [r3, r2]
 458:	cmp	r3, #0
 45c:	bxeq	lr
 460:	bx	r3
 464:	.word	0x00010c24
 468:	.word	0x00010c20
 46c:	.word	0x00010bb8
 470:	.word	0x00000028

00000474 <__do_global_dtors_aux>:
 474:	ldr	r3, [pc, #76]	; 4c8 <__do_global_dtors_aux+0x54>
 478:	ldr	r2, [pc, #76]	; 4cc <__do_global_dtors_aux+0x58>
 47c:	add	r3, pc, r3
 480:	add	r2, pc, r2
 484:	ldrb	r3, [r3]
 488:	cmp	r3, #0
 48c:	bxne	lr
 490:	ldr	r3, [pc, #56]	; 4d0 <__do_global_dtors_aux+0x5c>
 494:	push	{r4, lr}
 498:	ldr	r3, [r2, r3]
 49c:	cmp	r3, #0
 4a0:	beq	4b0 <__do_global_dtors_aux+0x3c>
 4a4:	ldr	r3, [pc, #40]	; 4d4 <__do_global_dtors_aux+0x60>
 4a8:	ldr	r0, [pc, r3]
 4ac:	bl	398 <__cxa_finalize@plt>
 4b0:	bl	3e0 <deregister_tm_clones>
 4b4:	ldr	r3, [pc, #28]	; 4d8 <__do_global_dtors_aux+0x64>
 4b8:	mov	r2, #1
 4bc:	add	r3, pc, r3
 4c0:	strb	r2, [r3]
 4c4:	pop	{r4, pc}
 4c8:	.word	0x00010bd4
 4cc:	.word	0x00010b78
 4d0:	.word	0x00000018
 4d4:	.word	0x00010b7c
 4d8:	.word	0x00010b94

000004dc <frame_dummy>:
 4dc:	b	424 <register_tm_clones>

000004e0 <_modinit>:
 4e0:	push	{fp}		; (str fp, [sp, #-4]!)
 4e4:	add	fp, sp, #0
 4e8:	ldr	r2, [pc, #40]	; 518 <_modinit+0x38>
 4ec:	add	r2, pc, r2
 4f0:	ldr	r3, [pc, #36]	; 51c <_modinit+0x3c>
 4f4:	ldr	r3, [r2, r3]
 4f8:	ldr	r2, [pc, #32]	; 520 <_modinit+0x40>
 4fc:	add	r2, pc, r2
 500:	str	r2, [r3, #436]	; 0x1b4
 504:	mov	r3, #0
 508:	mov	r0, r3
 50c:	add	sp, fp, #0
 510:	pop	{fp}		; (ldr fp, [sp], #4)
 514:	bx	lr
 518:	.word	0x00010b0c
 51c:	.word	0x00000024
 520:	.word	0x00000058

00000524 <_moddeinit>:
 524:	push	{fp}		; (str fp, [sp, #-4]!)
 528:	add	fp, sp, #0
 52c:	ldr	r2, [pc, #32]	; 554 <_moddeinit+0x30>
 530:	add	r2, pc, r2
 534:	ldr	r3, [pc, #28]	; 558 <_moddeinit+0x34>
 538:	ldr	r3, [r2, r3]
 53c:	mov	r2, #0
 540:	str	r2, [r3, #436]	; 0x1b4
 544:	nop	{0}
 548:	add	sp, fp, #0
 54c:	pop	{fp}		; (ldr fp, [sp], #4)
 550:	bx	lr
 554:	.word	0x00010ac8
 558:	.word	0x00000024

0000055c <eb_hostmask>:
 55c:	str	fp, [sp, #-8]!
 560:	str	lr, [sp, #4]
 564:	add	fp, sp, #4
 568:	sub	sp, sp, #16
 56c:	str	r0, [fp, #-8]
 570:	str	r1, [fp, #-12]
 574:	str	r2, [fp, #-16]
 578:	str	r3, [fp, #-20]	; 0xffffffec
 57c:	ldr	r1, [fp, #-8]
 580:	ldr	r0, [fp, #-12]
 584:	bl	3b0 <client_matches_mask@plt>
 588:	mov	r3, r0
 58c:	mov	r0, r3
 590:	sub	sp, fp, #4
 594:	ldr	fp, [sp]
 598:	add	sp, sp, #4
 59c:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

000005a0 <_fini>:
 5a0:	push	{r3, lr}
 5a4:	pop	{r3, pc}
