
../repos/inetutils/src/tftpd:     file format elf32-littlearm


Disassembly of section .init:

000111b4 <.init>:
   111b4:	push	{r3, lr}
   111b8:	bl	119cc <__assert_fail@plt+0x45c>
   111bc:	pop	{r3, pc}

Disassembly of section .plt:

000111c0 <fdopen@plt-0x14>:
   111c0:	push	{lr}		; (str lr, [sp, #-4]!)
   111c4:	ldr	lr, [pc, #4]	; 111d0 <fdopen@plt-0x4>
   111c8:	add	lr, pc, lr
   111cc:	ldr	pc, [lr, #8]!
   111d0:	andeq	r9, r1, r0, lsr lr

000111d4 <fdopen@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #102400	; 0x19000
   111dc:	ldr	pc, [ip, #3632]!	; 0xe30

000111e0 <calloc@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #102400	; 0x19000
   111e8:	ldr	pc, [ip, #3624]!	; 0xe28

000111ec <fputs_unlocked@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #102400	; 0x19000
   111f4:	ldr	pc, [ip, #3616]!	; 0xe20

000111f8 <strstr@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #102400	; 0x19000
   11200:	ldr	pc, [ip, #3608]!	; 0xe18

00011204 <getpwnam@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #102400	; 0x19000
   1120c:	ldr	pc, [ip, #3600]!	; 0xe10

00011210 <strcmp@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #102400	; 0x19000
   11218:	ldr	pc, [ip, #3592]!	; 0xe08

0001121c <strtol@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #102400	; 0x19000
   11224:	ldr	pc, [ip, #3584]!	; 0xe00

00011228 <printf@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #102400	; 0x19000
   11230:	ldr	pc, [ip, #3576]!	; 0xdf8

00011234 <read@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #102400	; 0x19000
   1123c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011240 <getuid@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #102400	; 0x19000
   11248:	ldr	pc, [ip, #3560]!	; 0xde8

0001124c <memmove@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #102400	; 0x19000
   11254:	ldr	pc, [ip, #3552]!	; 0xde0

00011258 <strchrnul@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #102400	; 0x19000
   11260:	ldr	pc, [ip, #3544]!	; 0xdd8

00011264 <free@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #102400	; 0x19000
   1126c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011270 <gai_strerror@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #102400	; 0x19000
   11278:	ldr	pc, [ip, #3528]!	; 0xdc8

0001127c <strndup@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #102400	; 0x19000
   11284:	ldr	pc, [ip, #3520]!	; 0xdc0

00011288 <memcpy@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #102400	; 0x19000
   11290:	ldr	pc, [ip, #3512]!	; 0xdb8

00011294 <signal@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #102400	; 0x19000
   1129c:	ldr	pc, [ip, #3504]!	; 0xdb0

000112a0 <fwrite_unlocked@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #102400	; 0x19000
   112a8:	ldr	pc, [ip, #3496]!	; 0xda8

000112ac <sleep@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #102400	; 0x19000
   112b4:	ldr	pc, [ip, #3488]!	; 0xda0

000112b8 <recvfrom@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #102400	; 0x19000
   112c0:	ldr	pc, [ip, #3480]!	; 0xd98

000112c4 <alarm@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #102400	; 0x19000
   112cc:	ldr	pc, [ip, #3472]!	; 0xd90

000112d0 <realloc@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #102400	; 0x19000
   112d8:	ldr	pc, [ip, #3464]!	; 0xd88

000112dc <chdir@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #102400	; 0x19000
   112e4:	ldr	pc, [ip, #3456]!	; 0xd80

000112e8 <strcasecmp@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #102400	; 0x19000
   112f0:	ldr	pc, [ip, #3448]!	; 0xd78

000112f4 <funlockfile@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #102400	; 0x19000
   112fc:	ldr	pc, [ip, #3440]!	; 0xd70

00011300 <fwrite@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #102400	; 0x19000
   11308:	ldr	pc, [ip, #3432]!	; 0xd68

0001130c <ioctl@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #102400	; 0x19000
   11314:	ldr	pc, [ip, #3424]!	; 0xd60

00011318 <chroot@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #102400	; 0x19000
   11320:	ldr	pc, [ip, #3416]!	; 0xd58

00011324 <error@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #102400	; 0x19000
   1132c:	ldr	pc, [ip, #3408]!	; 0xd50

00011330 <open64@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #102400	; 0x19000
   11338:	ldr	pc, [ip, #3400]!	; 0xd48

0001133c <getenv@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #102400	; 0x19000
   11344:	ldr	pc, [ip, #3392]!	; 0xd40

00011348 <setgid@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #102400	; 0x19000
   11350:	ldr	pc, [ip, #3384]!	; 0xd38

00011354 <malloc@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #102400	; 0x19000
   1135c:	ldr	pc, [ip, #3376]!	; 0xd30

00011360 <__libc_start_main@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #102400	; 0x19000
   11368:	ldr	pc, [ip, #3368]!	; 0xd28

0001136c <strerror@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #102400	; 0x19000
   11374:	ldr	pc, [ip, #3360]!	; 0xd20

00011378 <__ctype_tolower_loc@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #102400	; 0x19000
   11380:	ldr	pc, [ip, #3352]!	; 0xd18

00011384 <__gmon_start__@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #102400	; 0x19000
   1138c:	ldr	pc, [ip, #3344]!	; 0xd10

00011390 <mempcpy@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #102400	; 0x19000
   11398:	ldr	pc, [ip, #3336]!	; 0xd08

0001139c <__ctype_b_loc@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #102400	; 0x19000
   113a4:	ldr	pc, [ip, #3328]!	; 0xd00

000113a8 <exit@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #102400	; 0x19000
   113b0:	ldr	pc, [ip, #3320]!	; 0xcf8

000113b4 <strlen@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #102400	; 0x19000
   113bc:	ldr	pc, [ip, #3312]!	; 0xcf0

000113c0 <strchr@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #102400	; 0x19000
   113c8:	ldr	pc, [ip, #3304]!	; 0xce8

000113cc <fprintf@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #102400	; 0x19000
   113d4:	ldr	pc, [ip, #3296]!	; 0xce0

000113d8 <__errno_location@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #102400	; 0x19000
   113e0:	ldr	pc, [ip, #3288]!	; 0xcd8

000113e4 <strerror_r@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #102400	; 0x19000
   113ec:	ldr	pc, [ip, #3280]!	; 0xcd0

000113f0 <bind@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #102400	; 0x19000
   113f8:	ldr	pc, [ip, #3272]!	; 0xcc8

000113fc <memset@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #102400	; 0x19000
   11404:	ldr	pc, [ip, #3264]!	; 0xcc0

00011408 <write@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #102400	; 0x19000
   11410:	ldr	pc, [ip, #3256]!	; 0xcb8

00011414 <fileno@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #102400	; 0x19000
   1141c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011420 <memchr@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #102400	; 0x19000
   11428:	ldr	pc, [ip, #3240]!	; 0xca8

0001142c <fclose@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #102400	; 0x19000
   11434:	ldr	pc, [ip, #3232]!	; 0xca0

00011438 <fseeko64@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #102400	; 0x19000
   11440:	ldr	pc, [ip, #3224]!	; 0xc98

00011444 <sendto@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #102400	; 0x19000
   1144c:	ldr	pc, [ip, #3216]!	; 0xc90

00011450 <__overflow@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #102400	; 0x19000
   11458:	ldr	pc, [ip, #3208]!	; 0xc88

0001145c <fork@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #102400	; 0x19000
   11464:	ldr	pc, [ip, #3200]!	; 0xc80

00011468 <getnameinfo@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #102400	; 0x19000
   11470:	ldr	pc, [ip, #3192]!	; 0xc78

00011474 <strrchr@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #102400	; 0x19000
   1147c:	ldr	pc, [ip, #3184]!	; 0xc70

00011480 <vfprintf@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #102400	; 0x19000
   11488:	ldr	pc, [ip, #3176]!	; 0xc68

0001148c <__sigsetjmp@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #102400	; 0x19000
   11494:	ldr	pc, [ip, #3168]!	; 0xc60

00011498 <fputc@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #102400	; 0x19000
   114a0:	ldr	pc, [ip, #3160]!	; 0xc58

000114a4 <syslog@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #102400	; 0x19000
   114ac:	ldr	pc, [ip, #3152]!	; 0xc50

000114b0 <setuid@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #102400	; 0x19000
   114b8:	ldr	pc, [ip, #3144]!	; 0xc48

000114bc <sprintf@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #102400	; 0x19000
   114c4:	ldr	pc, [ip, #3136]!	; 0xc40

000114c8 <openlog@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #102400	; 0x19000
   114d0:	ldr	pc, [ip, #3128]!	; 0xc38

000114d4 <putc@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #102400	; 0x19000
   114dc:	ldr	pc, [ip, #3120]!	; 0xc30

000114e0 <flockfile@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #102400	; 0x19000
   114e8:	ldr	pc, [ip, #3112]!	; 0xc28

000114ec <vsnprintf@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #102400	; 0x19000
   114f4:	ldr	pc, [ip, #3104]!	; 0xc20

000114f8 <qsort@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #102400	; 0x19000
   11500:	ldr	pc, [ip, #3096]!	; 0xc18

00011504 <socket@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #102400	; 0x19000
   1150c:	ldr	pc, [ip, #3088]!	; 0xc10

00011510 <__xstat64@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #102400	; 0x19000
   11518:	ldr	pc, [ip, #3080]!	; 0xc08

0001151c <strncmp@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #102400	; 0x19000
   11524:	ldr	pc, [ip, #3072]!	; 0xc00

00011528 <abort@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #102400	; 0x19000
   11530:	ldr	pc, [ip, #3064]!	; 0xbf8

00011534 <getc@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #102400	; 0x19000
   1153c:	ldr	pc, [ip, #3056]!	; 0xbf0

00011540 <recv@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #102400	; 0x19000
   11548:	ldr	pc, [ip, #3048]!	; 0xbe8

0001154c <siglongjmp@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #102400	; 0x19000
   11554:	ldr	pc, [ip, #3040]!	; 0xbe0

00011558 <close@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #102400	; 0x19000
   11560:	ldr	pc, [ip, #3032]!	; 0xbd8

00011564 <getgrnam@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #102400	; 0x19000
   1156c:	ldr	pc, [ip, #3024]!	; 0xbd0

00011570 <__assert_fail@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #102400	; 0x19000
   11578:	ldr	pc, [ip, #3016]!	; 0xbc8

Disassembly of section .text:

0001157c <argp_parse@@Base-0x1cbc>:
   1157c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11580:	movw	r5, #45812	; 0xb2f4
   11584:	movt	r5, #2
   11588:	strd	r6, [sp, #8]
   1158c:	mov	r7, r0
   11590:	movw	r0, #39324	; 0x999c
   11594:	movt	r0, #1
   11598:	strd	r8, [sp, #16]
   1159c:	mov	r6, r1
   115a0:	strd	sl, [sp, #24]
   115a4:	str	lr, [sp, #32]
   115a8:	sub	sp, sp, #148	; 0x94
   115ac:	bl	14d10 <argp_parse@@Base+0x1ad8>
   115b0:	str	r0, [r5, #1356]	; 0x54c
   115b4:	ldr	r0, [r6]
   115b8:	bl	14378 <argp_parse@@Base+0x1140>
   115bc:	movw	r3, #49728	; 0xc240
   115c0:	movt	r3, #2
   115c4:	movw	r2, #39332	; 0x99a4
   115c8:	movt	r2, #1
   115cc:	movw	r1, #45720	; 0xb298
   115d0:	movt	r1, #2
   115d4:	movw	r0, #39356	; 0x99bc
   115d8:	movt	r0, #1
   115dc:	str	r2, [r3]
   115e0:	bl	14140 <argp_parse@@Base+0xf08>
   115e4:	mov	ip, #0
   115e8:	add	r3, sp, #8
   115ec:	ldr	r0, [pc, #916]	; 11988 <__assert_fail@plt+0x418>
   115f0:	mov	r2, r6
   115f4:	mov	r1, r7
   115f8:	stm	sp, {r3, ip}
   115fc:	mov	r3, ip
   11600:	bl	13238 <argp_parse@@Base>
   11604:	movw	r0, #39356	; 0x99bc
   11608:	movt	r0, #1
   1160c:	mov	r2, #88	; 0x58
   11610:	mov	r1, #9
   11614:	bl	114c8 <openlog@plt>
   11618:	ldr	r4, [sp, #8]
   1161c:	cmp	r4, r7
   11620:	bge	1167c <__assert_fail@plt+0x10c>
   11624:	add	r6, r6, r4, lsl #2
   11628:	add	r8, r5, #652	; 0x28c
   1162c:	add	r4, r4, #1
   11630:	add	r9, r5, #812	; 0x32c
   11634:	ldr	r3, [r6], #4
   11638:	ldrb	r2, [r3]
   1163c:	cmp	r2, #47	; 0x2f
   11640:	bne	11658 <__assert_fail@plt+0xe8>
   11644:	mov	r0, r3
   11648:	str	r3, [r8]
   1164c:	add	r8, r8, #8
   11650:	bl	113b4 <strlen@plt>
   11654:	str	r0, [r8, #-4]
   11658:	cmp	r8, r9
   1165c:	str	r4, [sp, #8]
   11660:	movcs	r2, #0
   11664:	movcc	r2, #1
   11668:	cmp	r4, r7
   1166c:	add	r4, r4, #1
   11670:	movge	r2, #0
   11674:	cmp	r2, #0
   11678:	bne	11634 <__assert_fail@plt+0xc4>
   1167c:	mov	r4, #1
   11680:	add	r2, sp, #12
   11684:	movw	r1, #21537	; 0x5421
   11688:	mov	r0, #0
   1168c:	str	r4, [sp, #12]
   11690:	bl	14348 <argp_parse@@Base+0x1110>
   11694:	cmp	r0, #0
   11698:	blt	1173c <__assert_fail@plt+0x1cc>
   1169c:	ldr	r6, [pc, #744]	; 1198c <__assert_fail@plt+0x41c>
   116a0:	mov	r7, #128	; 0x80
   116a4:	mov	r3, #0
   116a8:	mov	r0, r3
   116ac:	mov	r2, #516	; 0x204
   116b0:	str	r7, [r5, #648]	; 0x288
   116b4:	add	ip, r6, r7
   116b8:	sub	r1, r6, #520	; 0x208
   116bc:	stm	sp, {r6, ip}
   116c0:	bl	112b8 <recvfrom@plt>
   116c4:	subs	r9, r0, #0
   116c8:	addge	sl, sp, #16
   116cc:	subge	r8, r6, #520	; 0x208
   116d0:	blt	11808 <__assert_fail@plt+0x298>
   116d4:	bl	1145c <fork@plt>
   116d8:	subs	fp, r0, #0
   116dc:	bge	11754 <__assert_fail@plt+0x1e4>
   116e0:	mov	r0, r4
   116e4:	bl	112ac <sleep@plt>
   116e8:	mov	r3, #0
   116ec:	mov	r2, #516	; 0x204
   116f0:	stm	sp, {r6, sl}
   116f4:	mov	r0, r3
   116f8:	mov	r1, r8
   116fc:	str	r7, [sp, #16]
   11700:	bl	112b8 <recvfrom@plt>
   11704:	cmp	r0, #0
   11708:	ble	11718 <__assert_fail@plt+0x1a8>
   1170c:	ldr	r3, [sp, #16]
   11710:	mov	r9, r0
   11714:	str	r3, [r5, #648]	; 0x288
   11718:	add	r4, r0, #1
   1171c:	cmp	r4, #19
   11720:	ble	116d4 <__assert_fail@plt+0x164>
   11724:	movw	r1, #39512	; 0x9a58
   11728:	movt	r1, #1
   1172c:	mov	r0, #3
   11730:	bl	114a4 <syslog@plt>
   11734:	mov	r0, #1
   11738:	bl	113a8 <exit@plt>
   1173c:	mov	r0, #3
   11740:	movw	r1, #39364	; 0x99c4
   11744:	movt	r1, #1
   11748:	bl	114a4 <syslog@plt>
   1174c:	mov	r0, r4
   11750:	bl	113a8 <exit@plt>
   11754:	bne	11800 <__assert_fail@plt+0x290>
   11758:	bl	112c4 <alarm@plt>
   1175c:	mov	r0, fp
   11760:	bl	11558 <close@plt>
   11764:	mov	r0, #1
   11768:	bl	11558 <close@plt>
   1176c:	mov	r2, fp
   11770:	mov	r1, #2
   11774:	ldrh	r0, [r6]
   11778:	bl	11504 <socket@plt>
   1177c:	cmp	r0, #0
   11780:	mov	r4, r0
   11784:	str	r0, [r5, #516]	; 0x204
   11788:	blt	11820 <__assert_fail@plt+0x2b0>
   1178c:	mov	r2, #126	; 0x7e
   11790:	mov	r1, fp
   11794:	add	r0, sp, #18
   11798:	bl	113fc <memset@plt>
   1179c:	ldrh	r3, [r6]
   117a0:	mov	r0, r4
   117a4:	add	r1, sp, #16
   117a8:	ldr	r2, [r5, #648]	; 0x288
   117ac:	strh	r3, [sp, #16]
   117b0:	bl	113f0 <bind@plt>
   117b4:	cmp	r0, #0
   117b8:	blt	118f4 <__assert_fail@plt+0x384>
   117bc:	ldr	r3, [r5, #1352]	; 0x548
   117c0:	cmp	r3, #0
   117c4:	beq	117d4 <__assert_fail@plt+0x264>
   117c8:	ldrb	r3, [r3]
   117cc:	cmp	r3, #0
   117d0:	bne	11838 <__assert_fail@plt+0x2c8>
   117d4:	ldrh	r3, [r5]
   117d8:	rev16	r3, r3
   117dc:	sub	r2, r3, #1
   117e0:	uxth	r2, r2
   117e4:	strh	r3, [r5]
   117e8:	cmp	r2, #1
   117ec:	bhi	11734 <__assert_fail@plt+0x1c4>
   117f0:	movw	r0, #45812	; 0xb2f4
   117f4:	movt	r0, #2
   117f8:	mov	r1, r9
   117fc:	bl	124f0 <__assert_fail@plt+0xf80>
   11800:	mov	r0, #0
   11804:	bl	113a8 <exit@plt>
   11808:	mov	r0, #3
   1180c:	movw	r1, #39384	; 0x99d8
   11810:	movt	r1, #1
   11814:	bl	114a4 <syslog@plt>
   11818:	mov	r0, r4
   1181c:	bl	113a8 <exit@plt>
   11820:	mov	r0, #3
   11824:	movw	r1, #39400	; 0x99e8
   11828:	movt	r1, #1
   1182c:	bl	114a4 <syslog@plt>
   11830:	mov	r0, #1
   11834:	bl	113a8 <exit@plt>
   11838:	bl	11240 <getuid@plt>
   1183c:	cmp	r0, #0
   11840:	bne	11930 <__assert_fail@plt+0x3c0>
   11844:	ldr	r0, [r5, #1356]	; 0x54c
   11848:	bl	11204 <getpwnam@plt>
   1184c:	subs	r6, r0, #0
   11850:	movweq	r1, #39424	; 0x9a00
   11854:	ldreq	r2, [r5, #1356]	; 0x54c
   11858:	movteq	r1, #1
   1185c:	beq	11954 <__assert_fail@plt+0x3e4>
   11860:	ldr	fp, [r5, #1344]	; 0x540
   11864:	cmp	fp, #0
   11868:	beq	1187c <__assert_fail@plt+0x30c>
   1186c:	ldrb	r3, [fp]
   11870:	cmp	r3, #0
   11874:	moveq	fp, #0
   11878:	bne	11938 <__assert_fail@plt+0x3c8>
   1187c:	ldr	r4, [r5, #1352]	; 0x548
   11880:	mov	r0, r4
   11884:	bl	11318 <chroot@plt>
   11888:	cmp	r0, #0
   1188c:	bne	1190c <__assert_fail@plt+0x39c>
   11890:	movw	r0, #39484	; 0x9a3c
   11894:	movt	r0, #1
   11898:	bl	112dc <chdir@plt>
   1189c:	cmp	r0, #0
   118a0:	bne	1190c <__assert_fail@plt+0x39c>
   118a4:	cmp	r6, #0
   118a8:	beq	117d4 <__assert_fail@plt+0x264>
   118ac:	cmp	fp, #0
   118b0:	beq	1196c <__assert_fail@plt+0x3fc>
   118b4:	ldr	r0, [fp, #8]
   118b8:	bl	11348 <setgid@plt>
   118bc:	cmp	r0, #0
   118c0:	bne	1197c <__assert_fail@plt+0x40c>
   118c4:	ldr	r0, [r6, #8]
   118c8:	bl	114b0 <setuid@plt>
   118cc:	cmp	r0, #0
   118d0:	beq	117d4 <__assert_fail@plt+0x264>
   118d4:	movw	r1, #39500	; 0x9a4c
   118d8:	movt	r1, #1
   118dc:	mov	r0, #3
   118e0:	bl	114a4 <syslog@plt>
   118e4:	mov	r0, #7
   118e8:	bl	11a90 <__assert_fail@plt+0x520>
   118ec:	mov	r0, #1
   118f0:	bl	113a8 <exit@plt>
   118f4:	mov	r0, #3
   118f8:	movw	r1, #39412	; 0x99f4
   118fc:	movt	r1, #1
   11900:	bl	114a4 <syslog@plt>
   11904:	mov	r0, #1
   11908:	bl	113a8 <exit@plt>
   1190c:	mov	r2, r4
   11910:	mov	r0, #3
   11914:	movw	r1, #39464	; 0x9a28
   11918:	movt	r1, #1
   1191c:	bl	114a4 <syslog@plt>
   11920:	mov	r0, #2
   11924:	bl	11a90 <__assert_fail@plt+0x520>
   11928:	mov	r0, #1
   1192c:	bl	113a8 <exit@plt>
   11930:	mov	r6, fp
   11934:	b	1187c <__assert_fail@plt+0x30c>
   11938:	mov	r0, fp
   1193c:	bl	11564 <getgrnam@plt>
   11940:	subs	fp, r0, #0
   11944:	bne	1187c <__assert_fail@plt+0x30c>
   11948:	ldr	r2, [r5, #1344]	; 0x540
   1194c:	movw	r1, #39444	; 0x9a14
   11950:	movt	r1, #1
   11954:	mov	r0, #3
   11958:	bl	114a4 <syslog@plt>
   1195c:	mov	r0, #7
   11960:	bl	11a90 <__assert_fail@plt+0x520>
   11964:	mov	r0, #1
   11968:	bl	113a8 <exit@plt>
   1196c:	ldr	r0, [r6, #12]
   11970:	bl	11348 <setgid@plt>
   11974:	cmp	r0, #0
   11978:	beq	118c4 <__assert_fail@plt+0x354>
   1197c:	movw	r1, #39488	; 0x9a40
   11980:	movt	r1, #1
   11984:	b	118dc <__assert_fail@plt+0x36c>
   11988:	ldrdeq	fp, [r2], -r4
   1198c:	strdeq	fp, [r2], -ip
   11990:	mov	fp, #0
   11994:	mov	lr, #0
   11998:	pop	{r1}		; (ldr r1, [sp], #4)
   1199c:	mov	r2, sp
   119a0:	push	{r2}		; (str r2, [sp, #-4]!)
   119a4:	push	{r0}		; (str r0, [sp, #-4]!)
   119a8:	ldr	ip, [pc, #16]	; 119c0 <__assert_fail@plt+0x450>
   119ac:	push	{ip}		; (str ip, [sp, #-4]!)
   119b0:	ldr	r0, [pc, #12]	; 119c4 <__assert_fail@plt+0x454>
   119b4:	ldr	r3, [pc, #12]	; 119c8 <__assert_fail@plt+0x458>
   119b8:	bl	11360 <__libc_start_main@plt>
   119bc:	bl	11528 <abort@plt>
   119c0:	andeq	r9, r1, ip, asr #17
   119c4:	andeq	r1, r1, ip, ror r5
   119c8:	andeq	r9, r1, ip, ror #16
   119cc:	ldr	r3, [pc, #20]	; 119e8 <__assert_fail@plt+0x478>
   119d0:	ldr	r2, [pc, #20]	; 119ec <__assert_fail@plt+0x47c>
   119d4:	add	r3, pc, r3
   119d8:	ldr	r2, [r3, r2]
   119dc:	cmp	r2, #0
   119e0:	bxeq	lr
   119e4:	b	11384 <__gmon_start__@plt>
   119e8:	andeq	r9, r1, r4, lsr #12
   119ec:	andeq	r0, r0, r4, asr #2
   119f0:	ldr	r0, [pc, #24]	; 11a10 <__assert_fail@plt+0x4a0>
   119f4:	ldr	r3, [pc, #24]	; 11a14 <__assert_fail@plt+0x4a4>
   119f8:	cmp	r3, r0
   119fc:	bxeq	lr
   11a00:	ldr	r3, [pc, #16]	; 11a18 <__assert_fail@plt+0x4a8>
   11a04:	cmp	r3, #0
   11a08:	bxeq	lr
   11a0c:	bx	r3
   11a10:	andeq	fp, r2, r0, ror #5
   11a14:	andeq	fp, r2, r0, ror #5
   11a18:	andeq	r0, r0, r0
   11a1c:	ldr	r0, [pc, #36]	; 11a48 <__assert_fail@plt+0x4d8>
   11a20:	ldr	r1, [pc, #36]	; 11a4c <__assert_fail@plt+0x4dc>
   11a24:	sub	r1, r1, r0
   11a28:	asr	r1, r1, #2
   11a2c:	add	r1, r1, r1, lsr #31
   11a30:	asrs	r1, r1, #1
   11a34:	bxeq	lr
   11a38:	ldr	r3, [pc, #16]	; 11a50 <__assert_fail@plt+0x4e0>
   11a3c:	cmp	r3, #0
   11a40:	bxeq	lr
   11a44:	bx	r3
   11a48:	andeq	fp, r2, r0, ror #5
   11a4c:	andeq	fp, r2, r0, ror #5
   11a50:	andeq	r0, r0, r0
   11a54:	push	{r4, lr}
   11a58:	ldr	r4, [pc, #24]	; 11a78 <__assert_fail@plt+0x508>
   11a5c:	ldrb	r3, [r4]
   11a60:	cmp	r3, #0
   11a64:	popne	{r4, pc}
   11a68:	bl	119f0 <__assert_fail@plt+0x480>
   11a6c:	mov	r3, #1
   11a70:	strb	r3, [r4]
   11a74:	pop	{r4, pc}
   11a78:	strdeq	fp, [r2], -r0
   11a7c:	b	11a1c <__assert_fail@plt+0x4ac>
   11a80:	mov	r0, #0
   11a84:	str	r4, [sp, #-8]!
   11a88:	str	lr, [sp, #4]
   11a8c:	bl	113a8 <exit@plt>
   11a90:	movw	r3, #45392	; 0xb150
   11a94:	movt	r3, #2
   11a98:	strd	r4, [sp, #-16]!
   11a9c:	ldr	r2, [r3]
   11aa0:	movw	r5, #45812	; 0xb2f4
   11aa4:	movt	r5, #2
   11aa8:	rev16	ip, r0
   11aac:	mov	r1, #1280	; 0x500
   11ab0:	str	r6, [sp, #8]
   11ab4:	str	lr, [sp, #12]
   11ab8:	sub	sp, sp, #8
   11abc:	strh	r1, [r5]
   11ac0:	strh	ip, [r5, #2]
   11ac4:	cmp	r2, #0
   11ac8:	blt	11ba0 <__assert_fail@plt+0x630>
   11acc:	cmp	r0, r2
   11ad0:	bne	11ae4 <__assert_fail@plt+0x574>
   11ad4:	b	11ba8 <__assert_fail@plt+0x638>
   11ad8:	cmp	r2, r0
   11adc:	beq	11b98 <__assert_fail@plt+0x628>
   11ae0:	mov	r3, r4
   11ae4:	ldr	r2, [r3, #8]
   11ae8:	add	r4, r3, #8
   11aec:	cmp	r2, #0
   11af0:	bge	11ad8 <__assert_fail@plt+0x568>
   11af4:	sub	r0, r0, #100	; 0x64
   11af8:	bl	1136c <strerror@plt>
   11afc:	mov	r6, r0
   11b00:	mov	r3, #0
   11b04:	str	r0, [r4, #4]
   11b08:	strh	r3, [r5, #2]
   11b0c:	mov	r0, r6
   11b10:	bl	113b4 <strlen@plt>
   11b14:	mov	r4, r0
   11b18:	mov	r2, r0
   11b1c:	ldr	r0, [pc, #140]	; 11bb0 <__assert_fail@plt+0x640>
   11b20:	mov	r1, r6
   11b24:	add	r6, r4, #5
   11b28:	bl	11288 <memcpy@plt>
   11b2c:	ldr	r1, [pc, #128]	; 11bb4 <__assert_fail@plt+0x644>
   11b30:	mov	r0, #0
   11b34:	add	r4, r5, r4
   11b38:	mov	r3, r0
   11b3c:	mov	r2, r6
   11b40:	ldr	ip, [r5, #648]	; 0x288
   11b44:	strb	r0, [r4, #4]
   11b48:	ldr	r0, [r5, #516]	; 0x204
   11b4c:	stm	sp, {r1, ip}
   11b50:	sub	r1, r1, #520	; 0x208
   11b54:	bl	11444 <sendto@plt>
   11b58:	cmp	r0, r6
   11b5c:	beq	11b84 <__assert_fail@plt+0x614>
   11b60:	movw	r1, #39132	; 0x98dc
   11b64:	movt	r1, #1
   11b68:	mov	r0, #3
   11b6c:	add	sp, sp, #8
   11b70:	ldrd	r4, [sp]
   11b74:	ldr	r6, [sp, #8]
   11b78:	ldr	lr, [sp, #12]
   11b7c:	add	sp, sp, #16
   11b80:	b	114a4 <syslog@plt>
   11b84:	add	sp, sp, #8
   11b88:	ldrd	r4, [sp]
   11b8c:	ldr	r6, [sp, #8]
   11b90:	add	sp, sp, #12
   11b94:	pop	{pc}		; (ldr pc, [sp], #4)
   11b98:	ldr	r6, [r3, #12]
   11b9c:	b	11b0c <__assert_fail@plt+0x59c>
   11ba0:	mov	r4, r3
   11ba4:	b	11af4 <__assert_fail@plt+0x584>
   11ba8:	ldr	r6, [r3, #4]
   11bac:	b	11b0c <__assert_fail@plt+0x59c>
   11bb0:	strdeq	fp, [r2], -r8
   11bb4:	strdeq	fp, [r2], -ip
   11bb8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11bbc:	ldr	r4, [r0]
   11bc0:	strd	r6, [sp, #8]
   11bc4:	strd	r8, [sp, #16]
   11bc8:	mov	r8, r1
   11bcc:	movw	r1, #39148	; 0x98ec
   11bd0:	movt	r1, #1
   11bd4:	str	sl, [sp, #24]
   11bd8:	mov	sl, r0
   11bdc:	str	lr, [sp, #28]
   11be0:	sub	sp, sp, #104	; 0x68
   11be4:	mov	r0, r4
   11be8:	bl	111f8 <strstr@plt>
   11bec:	cmp	r0, #0
   11bf0:	bne	11ce8 <__assert_fail@plt+0x778>
   11bf4:	ldrb	r3, [r4]
   11bf8:	cmp	r3, #47	; 0x2f
   11bfc:	beq	11d08 <__assert_fail@plt+0x798>
   11c00:	cmp	r8, #1
   11c04:	bne	11ce8 <__assert_fail@plt+0x778>
   11c08:	movw	r1, #39156	; 0x98f4
   11c0c:	movt	r1, #1
   11c10:	mov	r2, #3
   11c14:	mov	r0, r4
   11c18:	bl	1151c <strncmp@plt>
   11c1c:	cmp	r0, #0
   11c20:	beq	11ce8 <__assert_fail@plt+0x778>
   11c24:	movw	r7, #45812	; 0xb2f4
   11c28:	movt	r7, #2
   11c2c:	ldr	r3, [r7, #652]	; 0x28c
   11c30:	cmp	r3, #0
   11c34:	beq	11e44 <__assert_fail@plt+0x8d4>
   11c38:	movw	r9, #39160	; 0x98f8
   11c3c:	movt	r9, #1
   11c40:	ldr	r5, [r7, #820]	; 0x334
   11c44:	add	r6, r7, #652	; 0x28c
   11c48:	b	11c58 <__assert_fail@plt+0x6e8>
   11c4c:	ldr	r3, [r6, #8]!
   11c50:	cmp	r3, #0
   11c54:	beq	11e44 <__assert_fail@plt+0x8d4>
   11c58:	mov	r0, r5
   11c5c:	bl	1421c <argp_parse@@Base+0xfe4>
   11c60:	ldr	r0, [r6]
   11c64:	bl	113b4 <strlen@plt>
   11c68:	mov	r5, r0
   11c6c:	mov	r0, r4
   11c70:	bl	113b4 <strlen@plt>
   11c74:	add	r0, r5, r0
   11c78:	add	r0, r0, #2
   11c7c:	bl	14ddc <argp_parse@@Base+0x1ba4>
   11c80:	cmp	r0, #0
   11c84:	mov	r3, r4
   11c88:	str	r0, [r7, #820]	; 0x334
   11c8c:	mov	r1, r9
   11c90:	beq	11df4 <__assert_fail@plt+0x884>
   11c94:	ldr	r2, [r6]
   11c98:	bl	114bc <sprintf@plt>
   11c9c:	ldr	r5, [r7, #820]	; 0x334
   11ca0:	mov	r2, sp
   11ca4:	mov	r0, #3
   11ca8:	mov	r1, r5
   11cac:	bl	11510 <__xstat64@plt>
   11cb0:	cmp	r0, #0
   11cb4:	bne	11c4c <__assert_fail@plt+0x6dc>
   11cb8:	ldr	r3, [sp, #16]
   11cbc:	and	r2, r3, #61440	; 0xf000
   11cc0:	cmp	r2, #32768	; 0x8000
   11cc4:	bne	11c4c <__assert_fail@plt+0x6dc>
   11cc8:	tst	r3, #4
   11ccc:	bne	11dfc <__assert_fail@plt+0x88c>
   11cd0:	mov	r8, #2
   11cd4:	b	11c4c <__assert_fail@plt+0x6dc>
   11cd8:	bl	113d8 <__errno_location@plt>
   11cdc:	ldr	r3, [r0]
   11ce0:	cmp	r3, #2
   11ce4:	beq	11e2c <__assert_fail@plt+0x8bc>
   11ce8:	mov	r0, #2
   11cec:	add	sp, sp, #104	; 0x68
   11cf0:	ldrd	r4, [sp]
   11cf4:	ldrd	r6, [sp, #8]
   11cf8:	ldrd	r8, [sp, #16]
   11cfc:	ldr	sl, [sp, #24]
   11d00:	add	sp, sp, #28
   11d04:	pop	{pc}		; (ldr pc, [sp], #4)
   11d08:	movw	r3, #45812	; 0xb2f4
   11d0c:	movt	r3, #2
   11d10:	ldr	r1, [r3, #652]	; 0x28c
   11d14:	cmp	r1, #0
   11d18:	beq	11d74 <__assert_fail@plt+0x804>
   11d1c:	ldr	r5, [r3, #656]	; 0x290
   11d20:	cmp	r5, #1
   11d24:	beq	11d74 <__assert_fail@plt+0x804>
   11d28:	add	r7, r3, #652	; 0x28c
   11d2c:	mov	r6, r7
   11d30:	b	11d40 <__assert_fail@plt+0x7d0>
   11d34:	ldr	r5, [r6, #4]
   11d38:	cmp	r5, #1
   11d3c:	beq	11d74 <__assert_fail@plt+0x804>
   11d40:	mov	r2, r5
   11d44:	mov	r0, r4
   11d48:	bl	1151c <strncmp@plt>
   11d4c:	cmp	r0, #0
   11d50:	bne	11d60 <__assert_fail@plt+0x7f0>
   11d54:	ldrb	r3, [r4, r5]
   11d58:	cmp	r3, #47	; 0x2f
   11d5c:	beq	11d74 <__assert_fail@plt+0x804>
   11d60:	ldr	r1, [r6, #8]!
   11d64:	cmp	r1, #0
   11d68:	bne	11d34 <__assert_fail@plt+0x7c4>
   11d6c:	cmp	r6, r7
   11d70:	bne	11ce8 <__assert_fail@plt+0x778>
   11d74:	mov	r2, sp
   11d78:	mov	r1, r4
   11d7c:	mov	r0, #3
   11d80:	bl	11510 <__xstat64@plt>
   11d84:	cmp	r0, #0
   11d88:	blt	11cd8 <__assert_fail@plt+0x768>
   11d8c:	ldr	r3, [sp, #16]
   11d90:	and	r2, r3, #61440	; 0xf000
   11d94:	cmp	r2, #32768	; 0x8000
   11d98:	bne	11e2c <__assert_fail@plt+0x8bc>
   11d9c:	cmp	r8, #1
   11da0:	beq	11e34 <__assert_fail@plt+0x8c4>
   11da4:	tst	r3, #2
   11da8:	beq	11ce8 <__assert_fail@plt+0x778>
   11dac:	mov	r0, r4
   11db0:	movw	r1, #513	; 0x201
   11db4:	bl	11330 <open64@plt>
   11db8:	cmp	r0, #0
   11dbc:	blt	11de4 <__assert_fail@plt+0x874>
   11dc0:	movw	r1, #39144	; 0x98e8
   11dc4:	movt	r1, #1
   11dc8:	bl	111d4 <fdopen@plt>
   11dcc:	movw	r3, #48684	; 0xbe2c
   11dd0:	movt	r3, #2
   11dd4:	cmp	r0, #0
   11dd8:	str	r0, [r3]
   11ddc:	movne	r0, #0
   11de0:	bne	11cec <__assert_fail@plt+0x77c>
   11de4:	bl	113d8 <__errno_location@plt>
   11de8:	ldr	r8, [r0]
   11dec:	add	r0, r8, #100	; 0x64
   11df0:	b	11cec <__assert_fail@plt+0x77c>
   11df4:	mov	r0, #12
   11df8:	b	11cec <__assert_fail@plt+0x77c>
   11dfc:	ldr	r3, [r6]
   11e00:	cmp	r3, #0
   11e04:	beq	11e44 <__assert_fail@plt+0x8d4>
   11e08:	str	r5, [sl]
   11e0c:	mov	r0, r5
   11e10:	mov	r1, #0
   11e14:	bl	11330 <open64@plt>
   11e18:	cmp	r0, #0
   11e1c:	blt	11de4 <__assert_fail@plt+0x874>
   11e20:	movw	r1, #42356	; 0xa574
   11e24:	movt	r1, #1
   11e28:	b	11dc8 <__assert_fail@plt+0x858>
   11e2c:	mov	r0, #1
   11e30:	b	11cec <__assert_fail@plt+0x77c>
   11e34:	tst	r3, #4
   11e38:	movne	r5, r4
   11e3c:	bne	11e0c <__assert_fail@plt+0x89c>
   11e40:	b	11ce8 <__assert_fail@plt+0x778>
   11e44:	mov	r0, r8
   11e48:	b	11cec <__assert_fail@plt+0x77c>
   11e4c:	movw	r3, #48680	; 0xbe28
   11e50:	movt	r3, #2
   11e54:	str	r4, [sp, #-8]!
   11e58:	ldr	r2, [r3]
   11e5c:	str	lr, [sp, #4]
   11e60:	add	r2, r2, #5
   11e64:	cmp	r2, #24
   11e68:	str	r2, [r3]
   11e6c:	ble	11e78 <__assert_fail@plt+0x908>
   11e70:	mov	r0, #1
   11e74:	bl	113a8 <exit@plt>
   11e78:	movw	r0, #48288	; 0xbca0
   11e7c:	movt	r0, #2
   11e80:	mov	r1, #1
   11e84:	bl	1154c <siglongjmp@plt>
   11e88:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e8c:	movw	r1, #7756	; 0x1e4c
   11e90:	movt	r1, #1
   11e94:	strd	r6, [sp, #8]
   11e98:	str	r8, [sp, #16]
   11e9c:	str	lr, [sp, #20]
   11ea0:	sub	sp, sp, #32
   11ea4:	str	r0, [sp, #12]
   11ea8:	mov	r0, #14
   11eac:	bl	11294 <signal@plt>
   11eb0:	bl	12810 <__assert_fail@plt+0x12a0>
   11eb4:	movw	r3, #45812	; 0xb2f4
   11eb8:	movt	r3, #2
   11ebc:	str	r0, [sp, #24]
   11ec0:	add	r3, r3, #824	; 0x338
   11ec4:	movw	r2, #48684	; 0xbe2c
   11ec8:	movt	r2, #2
   11ecc:	str	r3, [sp, #8]
   11ed0:	mov	r3, #1
   11ed4:	str	r2, [sp, #16]
   11ed8:	str	r3, [sp, #28]
   11edc:	ldr	r3, [sp, #16]
   11ee0:	add	r1, sp, #24
   11ee4:	ldr	r0, [r3]
   11ee8:	ldr	r3, [sp, #12]
   11eec:	ldr	r2, [r3, #16]
   11ef0:	bl	12994 <__assert_fail@plt+0x1424>
   11ef4:	subs	r3, r0, #0
   11ef8:	str	r3, [sp, #20]
   11efc:	blt	12088 <__assert_fail@plt+0xb18>
   11f00:	ldr	r2, [sp, #24]
   11f04:	mov	ip, #0
   11f08:	mov	r0, #3
   11f0c:	movw	r3, #48680	; 0xbe28
   11f10:	movt	r3, #2
   11f14:	ldr	r1, [sp, #28]
   11f18:	strb	ip, [r2]
   11f1c:	strb	r0, [r2, #1]
   11f20:	movw	r0, #48288	; 0xbca0
   11f24:	movt	r0, #2
   11f28:	rev16	r1, r1
   11f2c:	strh	r1, [r2, #2]
   11f30:	mov	r1, #14
   11f34:	str	ip, [r3]
   11f38:	bl	1148c <__sigsetjmp@plt>
   11f3c:	ldr	r3, [sp, #20]
   11f40:	add	r6, r3, #4
   11f44:	mov	r7, r6
   11f48:	movw	r0, #45812	; 0xb2f4
   11f4c:	movt	r0, #2
   11f50:	ldr	ip, [r0, #648]	; 0x288
   11f54:	add	r1, r0, #520	; 0x208
   11f58:	mov	r3, #0
   11f5c:	mov	r2, r7
   11f60:	str	r1, [sp]
   11f64:	ldr	r1, [sp, #24]
   11f68:	ldr	r0, [r0, #516]	; 0x204
   11f6c:	str	ip, [sp, #4]
   11f70:	bl	11444 <sendto@plt>
   11f74:	cmp	r6, r0
   11f78:	bne	1209c <__assert_fail@plt+0xb2c>
   11f7c:	ldr	r3, [sp, #16]
   11f80:	mov	r4, #0
   11f84:	ldr	r0, [r3]
   11f88:	movw	r3, #45812	; 0xb2f4
   11f8c:	movt	r3, #2
   11f90:	add	r5, r3, #824	; 0x338
   11f94:	ldr	r3, [sp, #12]
   11f98:	ldr	r1, [r3, #16]
   11f9c:	bl	12860 <__assert_fail@plt+0x12f0>
   11fa0:	b	11fd8 <__assert_fail@plt+0xa68>
   11fa4:	ldr	r0, [sp, #8]
   11fa8:	ldrsh	r2, [r0]
   11fac:	ldrh	r3, [r0, #2]
   11fb0:	rev16	r2, r2
   11fb4:	sxth	r1, r2
   11fb8:	rev16	r3, r3
   11fbc:	cmp	r1, #5
   11fc0:	strh	r2, [r0]
   11fc4:	uxth	r2, r3
   11fc8:	strh	r3, [r0, #2]
   11fcc:	beq	12020 <__assert_fail@plt+0xab0>
   11fd0:	cmp	r1, #4
   11fd4:	beq	12048 <__assert_fail@plt+0xad8>
   11fd8:	mov	r0, #5
   11fdc:	bl	112c4 <alarm@plt>
   11fe0:	movw	r1, #45812	; 0xb2f4
   11fe4:	movt	r1, #2
   11fe8:	mov	r3, r4
   11fec:	mov	r2, #516	; 0x204
   11ff0:	ldr	r0, [r1, #516]	; 0x204
   11ff4:	mov	r1, r5
   11ff8:	bl	11540 <recv@plt>
   11ffc:	mov	r8, r0
   12000:	mov	r0, r4
   12004:	bl	112c4 <alarm@plt>
   12008:	cmp	r8, #0
   1200c:	bge	11fa4 <__assert_fail@plt+0xa34>
   12010:	movw	r1, #39188	; 0x9914
   12014:	movt	r1, #1
   12018:	mov	r0, #3
   1201c:	bl	114a4 <syslog@plt>
   12020:	movw	r3, #48684	; 0xbe2c
   12024:	movt	r3, #2
   12028:	ldr	r0, [r3]
   1202c:	bl	1142c <fclose@plt>
   12030:	add	sp, sp, #32
   12034:	ldrd	r4, [sp]
   12038:	ldrd	r6, [sp, #8]
   1203c:	ldr	r8, [sp, #16]
   12040:	add	sp, sp, #20
   12044:	pop	{pc}		; (ldr pc, [sp], #4)
   12048:	ldr	r3, [sp, #28]
   1204c:	uxth	r3, r3
   12050:	cmp	r3, r2
   12054:	beq	120b0 <__assert_fail@plt+0xb40>
   12058:	movw	r3, #45812	; 0xb2f4
   1205c:	movt	r3, #2
   12060:	ldr	r0, [r3, #516]	; 0x204
   12064:	bl	12bf4 <__assert_fail@plt+0x1684>
   12068:	ldr	r2, [sp, #8]
   1206c:	ldr	r3, [sp, #28]
   12070:	ldrh	r2, [r2, #2]
   12074:	sub	r3, r3, #1
   12078:	uxth	r3, r3
   1207c:	cmp	r2, r3
   12080:	bne	11fd8 <__assert_fail@plt+0xa68>
   12084:	b	11f48 <__assert_fail@plt+0x9d8>
   12088:	bl	113d8 <__errno_location@plt>
   1208c:	ldr	r0, [r0]
   12090:	add	r0, r0, #100	; 0x64
   12094:	bl	11a90 <__assert_fail@plt+0x520>
   12098:	b	12020 <__assert_fail@plt+0xab0>
   1209c:	movw	r1, #39168	; 0x9900
   120a0:	movt	r1, #1
   120a4:	mov	r0, #3
   120a8:	bl	114a4 <syslog@plt>
   120ac:	b	12020 <__assert_fail@plt+0xab0>
   120b0:	ldr	r2, [sp, #20]
   120b4:	ldr	r3, [sp, #28]
   120b8:	cmp	r2, #512	; 0x200
   120bc:	add	r3, r3, #1
   120c0:	str	r3, [sp, #28]
   120c4:	bne	12020 <__assert_fail@plt+0xab0>
   120c8:	b	11edc <__assert_fail@plt+0x96c>
   120cc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   120d0:	movw	r1, #7756	; 0x1e4c
   120d4:	movt	r1, #1
   120d8:	strd	r6, [sp, #8]
   120dc:	strd	r8, [sp, #16]
   120e0:	str	lr, [sp, #24]
   120e4:	sub	sp, sp, #36	; 0x24
   120e8:	str	r0, [sp, #8]
   120ec:	mov	r0, #14
   120f0:	bl	11294 <signal@plt>
   120f4:	bl	127c4 <__assert_fail@plt+0x1254>
   120f8:	mov	r3, #0
   120fc:	movw	r2, #45812	; 0xb2f4
   12100:	movt	r2, #2
   12104:	str	r3, [sp, #28]
   12108:	movw	r3, #48680	; 0xbe28
   1210c:	movt	r3, #2
   12110:	str	r0, [sp, #24]
   12114:	str	r3, [sp, #12]
   12118:	movw	r3, #48288	; 0xbca0
   1211c:	movt	r3, #2
   12120:	str	r2, [sp, #20]
   12124:	str	r3, [sp, #16]
   12128:	ldr	r3, [sp, #12]
   1212c:	mov	ip, #0
   12130:	mov	lr, #0
   12134:	mov	r1, #14
   12138:	ldr	r0, [sp, #16]
   1213c:	ldr	r2, [sp, #28]
   12140:	str	ip, [r3]
   12144:	ldr	ip, [pc, #664]	; 123e4 <__assert_fail@plt+0xe74>
   12148:	ldr	r3, [sp, #28]
   1214c:	rev16	r2, r2
   12150:	strb	lr, [ip]
   12154:	mov	lr, #4
   12158:	add	r3, r3, #1
   1215c:	strb	lr, [ip, #1]
   12160:	strh	r2, [ip, #2]
   12164:	str	r3, [sp, #28]
   12168:	bl	1148c <__sigsetjmp@plt>
   1216c:	movw	r5, #48684	; 0xbe2c
   12170:	movt	r5, #2
   12174:	movw	r0, #45812	; 0xb2f4
   12178:	movt	r0, #2
   1217c:	ldr	ip, [r0, #648]	; 0x288
   12180:	add	lr, r0, #520	; 0x208
   12184:	add	r1, r0, #824	; 0x338
   12188:	mov	r3, #0
   1218c:	mov	r2, #4
   12190:	str	lr, [sp]
   12194:	ldr	r0, [r0, #516]	; 0x204
   12198:	str	ip, [sp, #4]
   1219c:	bl	11444 <sendto@plt>
   121a0:	cmp	r0, #4
   121a4:	bne	12294 <__assert_fail@plt+0xd24>
   121a8:	ldr	r3, [sp, #8]
   121ac:	mov	r4, #5
   121b0:	movw	r6, #45812	; 0xb2f4
   121b4:	movt	r6, #2
   121b8:	ldr	r0, [r5]
   121bc:	ldr	r1, [r3, #16]
   121c0:	bl	12a24 <__assert_fail@plt+0x14b4>
   121c4:	b	121fc <__assert_fail@plt+0xc8c>
   121c8:	ldr	r3, [sp, #24]
   121cc:	ldrsh	r1, [r3]
   121d0:	ldrh	r2, [r3, #2]
   121d4:	rev16	r1, r1
   121d8:	sxth	r7, r1
   121dc:	rev16	r2, r2
   121e0:	cmp	r7, #5
   121e4:	strh	r1, [r3]
   121e8:	uxth	r1, r2
   121ec:	strh	r2, [r3, #2]
   121f0:	beq	12244 <__assert_fail@plt+0xcd4>
   121f4:	cmp	r7, #3
   121f8:	beq	1225c <__assert_fail@plt+0xcec>
   121fc:	mov	r0, r4
   12200:	bl	112c4 <alarm@plt>
   12204:	movw	r0, #45812	; 0xb2f4
   12208:	movt	r0, #2
   1220c:	ldr	r1, [sp, #24]
   12210:	mov	r3, #0
   12214:	mov	r2, #516	; 0x204
   12218:	ldr	r0, [r0, #516]	; 0x204
   1221c:	bl	11540 <recv@plt>
   12220:	mov	r8, r0
   12224:	mov	r0, #0
   12228:	bl	112c4 <alarm@plt>
   1222c:	cmp	r8, #0
   12230:	bge	121c8 <__assert_fail@plt+0xc58>
   12234:	movw	r1, #39188	; 0x9914
   12238:	movt	r1, #1
   1223c:	mov	r0, #3
   12240:	bl	114a4 <syslog@plt>
   12244:	add	sp, sp, #36	; 0x24
   12248:	ldrd	r4, [sp]
   1224c:	ldrd	r6, [sp, #8]
   12250:	ldrd	r8, [sp, #16]
   12254:	add	sp, sp, #24
   12258:	pop	{pc}		; (ldr pc, [sp], #4)
   1225c:	ldr	r3, [sp, #28]
   12260:	cmp	r1, r3
   12264:	beq	122a8 <__assert_fail@plt+0xd38>
   12268:	movw	r3, #45812	; 0xb2f4
   1226c:	movt	r3, #2
   12270:	ldr	r0, [r3, #516]	; 0x204
   12274:	bl	12bf4 <__assert_fail@plt+0x1684>
   12278:	ldr	r2, [sp, #24]
   1227c:	ldr	r3, [sp, #28]
   12280:	ldrh	r2, [r2, #2]
   12284:	sub	r3, r3, #1
   12288:	cmp	r2, r3
   1228c:	bne	121fc <__assert_fail@plt+0xc8c>
   12290:	b	12174 <__assert_fail@plt+0xc04>
   12294:	movw	r1, #39168	; 0x9900
   12298:	movt	r1, #1
   1229c:	mov	r0, #3
   122a0:	bl	114a4 <syslog@plt>
   122a4:	b	12244 <__assert_fail@plt+0xcd4>
   122a8:	ldr	r3, [sp, #8]
   122ac:	sub	r8, r8, #4
   122b0:	movw	r5, #48684	; 0xbe2c
   122b4:	movt	r5, #2
   122b8:	mov	r2, r8
   122bc:	add	r1, sp, #24
   122c0:	ldr	r0, [r5]
   122c4:	ldr	r3, [r3, #16]
   122c8:	bl	12b5c <__assert_fail@plt+0x15ec>
   122cc:	cmp	r8, r0
   122d0:	beq	122e8 <__assert_fail@plt+0xd78>
   122d4:	cmp	r0, #0
   122d8:	blt	123d0 <__assert_fail@plt+0xe60>
   122dc:	mov	r0, r7
   122e0:	bl	11a90 <__assert_fail@plt+0x520>
   122e4:	b	12244 <__assert_fail@plt+0xcd4>
   122e8:	cmp	r8, #512	; 0x200
   122ec:	beq	12128 <__assert_fail@plt+0xbb8>
   122f0:	ldr	r3, [sp, #8]
   122f4:	mov	r4, #0
   122f8:	mov	r7, #4
   122fc:	add	r9, r6, #824	; 0x338
   12300:	add	r8, r6, #520	; 0x208
   12304:	ldr	r0, [r5]
   12308:	ldr	r1, [r3, #16]
   1230c:	bl	12a24 <__assert_fail@plt+0x14b4>
   12310:	ldr	r0, [r5]
   12314:	bl	1142c <fclose@plt>
   12318:	ldr	r0, [sp, #20]
   1231c:	mov	r3, r4
   12320:	mov	r2, r7
   12324:	mov	r1, r9
   12328:	str	r8, [sp]
   1232c:	ldr	ip, [sp, #28]
   12330:	ldr	lr, [r6, #648]	; 0x288
   12334:	strb	r4, [r0, #824]	; 0x338
   12338:	strb	r7, [r0, #825]	; 0x339
   1233c:	rev16	ip, ip
   12340:	ldr	r0, [r6, #516]	; 0x204
   12344:	str	lr, [sp, #4]
   12348:	strh	ip, [r9, #2]
   1234c:	bl	11444 <sendto@plt>
   12350:	movw	r1, #6784	; 0x1a80
   12354:	movt	r1, #1
   12358:	mov	r0, #14
   1235c:	bl	11294 <signal@plt>
   12360:	mov	r0, #5
   12364:	bl	112c4 <alarm@plt>
   12368:	mov	r3, r4
   1236c:	mov	r2, #516	; 0x204
   12370:	ldr	r0, [r6, #516]	; 0x204
   12374:	mov	r1, r6
   12378:	bl	11540 <recv@plt>
   1237c:	mov	r5, r0
   12380:	mov	r0, r4
   12384:	bl	112c4 <alarm@plt>
   12388:	cmp	r5, #3
   1238c:	ble	12244 <__assert_fail@plt+0xcd4>
   12390:	ldr	r3, [sp, #24]
   12394:	ldrsh	r2, [r3]
   12398:	cmp	r2, #3
   1239c:	bne	12244 <__assert_fail@plt+0xcd4>
   123a0:	ldrh	r2, [r3, #2]
   123a4:	ldr	r3, [sp, #28]
   123a8:	cmp	r2, r3
   123ac:	bne	12244 <__assert_fail@plt+0xcd4>
   123b0:	mov	r3, r4
   123b4:	mov	r2, r7
   123b8:	ldr	r0, [r6, #516]	; 0x204
   123bc:	mov	r1, r9
   123c0:	ldr	ip, [r6, #648]	; 0x288
   123c4:	stm	sp, {r8, ip}
   123c8:	bl	11444 <sendto@plt>
   123cc:	b	12244 <__assert_fail@plt+0xcd4>
   123d0:	bl	113d8 <__errno_location@plt>
   123d4:	ldr	r0, [r0]
   123d8:	add	r0, r0, #100	; 0x64
   123dc:	bl	11a90 <__assert_fail@plt+0x520>
   123e0:	b	12244 <__assert_fail@plt+0xcd4>
   123e4:	andeq	fp, r2, ip, lsr #12
   123e8:	sub	r0, r0, #103	; 0x67
   123ec:	strd	r4, [sp, #-16]!
   123f0:	mov	r4, r1
   123f4:	str	r6, [sp, #8]
   123f8:	str	lr, [sp, #12]
   123fc:	cmp	r0, #14
   12400:	ldrls	pc, [pc, r0, lsl #2]
   12404:	b	124e8 <__assert_fail@plt+0xf78>
   12408:	andeq	r2, r1, r8, ror r4
   1240c:	andeq	r2, r1, r8, ror #9
   12410:	andeq	r2, r1, r8, ror #9
   12414:	andeq	r2, r1, r8, ror #9
   12418:	andeq	r2, r1, r8, ror #9
   1241c:	muleq	r1, ip, r4
   12420:	andeq	r2, r1, r8, ror #9
   12424:			; <UNDEFINED> instruction: 0x000124b4
   12428:	andeq	r2, r1, r8, ror #9
   1242c:	andeq	r2, r1, r8, ror #9
   12430:	andeq	r2, r1, r8, ror #9
   12434:	andeq	r2, r1, r8, ror #9
   12438:	andeq	r2, r1, ip, asr #9
   1243c:	andeq	r2, r1, r8, ror #9
   12440:	andeq	r2, r1, r4, asr #8
   12444:	movw	r5, #45812	; 0xb2f4
   12448:	movt	r5, #2
   1244c:	ldr	r0, [r5, #1356]	; 0x54c
   12450:	bl	1421c <argp_parse@@Base+0xfe4>
   12454:	mov	r0, r4
   12458:	bl	14d10 <argp_parse@@Base+0x1ad8>
   1245c:	mov	r3, #0
   12460:	str	r0, [r5, #1356]	; 0x54c
   12464:	ldrd	r4, [sp]
   12468:	mov	r0, r3
   1246c:	ldr	r6, [sp, #8]
   12470:	add	sp, sp, #12
   12474:	pop	{pc}		; (ldr pc, [sp], #4)
   12478:	movw	r5, #45812	; 0xb2f4
   1247c:	movt	r5, #2
   12480:	ldr	r0, [r5, #1344]	; 0x540
   12484:	bl	1421c <argp_parse@@Base+0xfe4>
   12488:	mov	r0, r4
   1248c:	bl	14d10 <argp_parse@@Base+0x1ad8>
   12490:	mov	r3, #0
   12494:	str	r0, [r5, #1344]	; 0x540
   12498:	b	12464 <__assert_fail@plt+0xef4>
   1249c:	movw	r2, #45812	; 0xb2f4
   124a0:	movt	r2, #2
   124a4:	mov	r1, #1
   124a8:	mov	r3, #0
   124ac:	str	r1, [r2, #1340]	; 0x53c
   124b0:	b	12464 <__assert_fail@plt+0xef4>
   124b4:	movw	r2, #45812	; 0xb2f4
   124b8:	movt	r2, #2
   124bc:	mov	r1, #1
   124c0:	mov	r3, #0
   124c4:	str	r1, [r2, #1348]	; 0x544
   124c8:	b	12464 <__assert_fail@plt+0xef4>
   124cc:	mov	r0, r1
   124d0:	bl	14d10 <argp_parse@@Base+0x1ad8>
   124d4:	movw	r2, #45812	; 0xb2f4
   124d8:	movt	r2, #2
   124dc:	mov	r3, #0
   124e0:	str	r0, [r2, #1352]	; 0x548
   124e4:	b	12464 <__assert_fail@plt+0xef4>
   124e8:	mov	r3, #7
   124ec:	b	12464 <__assert_fail@plt+0xef4>
   124f0:	add	r2, r0, #2
   124f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   124f8:	movw	r5, #45812	; 0xb2f4
   124fc:	movt	r5, #2
   12500:	strd	r6, [sp, #8]
   12504:	add	r3, r0, #1
   12508:	strd	r8, [sp, #16]
   1250c:	add	r1, r5, r1
   12510:	mov	ip, #1
   12514:	strd	sl, [sp, #24]
   12518:	mov	r6, r0
   1251c:	str	lr, [sp, #32]
   12520:	sub	sp, sp, #36	; 0x24
   12524:	str	r2, [sp, #28]
   12528:	b	12548 <__assert_fail@plt+0xfd8>
   1252c:	cmp	r0, #0
   12530:	bne	126e0 <__assert_fail@plt+0x1170>
   12534:	cmp	ip, #0
   12538:	beq	12568 <__assert_fail@plt+0xff8>
   1253c:	add	r7, r3, #2
   12540:	mov	ip, #0
   12544:	mov	r3, r2
   12548:	add	r2, r3, #1
   1254c:	ldrb	r0, [r3, #1]
   12550:	cmp	r2, r1
   12554:	bcs	1252c <__assert_fail@plt+0xfbc>
   12558:	cmp	r0, #0
   1255c:	bne	12544 <__assert_fail@plt+0xfd4>
   12560:	cmp	ip, #0
   12564:	bne	1253c <__assert_fail@plt+0xfcc>
   12568:	ldrb	r4, [r7]
   1256c:	cmp	r4, #0
   12570:	beq	125b4 <__assert_fail@plt+0x1044>
   12574:	bl	1139c <__ctype_b_loc@plt>
   12578:	mov	r9, r0
   1257c:	mov	r8, r7
   12580:	ldr	r2, [r9]
   12584:	sxth	r4, r4
   12588:	lsl	r3, r4, #1
   1258c:	ldrh	r3, [r2, r3]
   12590:	tst	r3, #256	; 0x100
   12594:	beq	125a8 <__assert_fail@plt+0x1038>
   12598:	bl	11378 <__ctype_tolower_loc@plt>
   1259c:	ldr	r3, [r0]
   125a0:	ldr	r3, [r3, r4, lsl #2]
   125a4:	strb	r3, [r8]
   125a8:	ldrb	r4, [r8, #1]!
   125ac:	cmp	r4, #0
   125b0:	bne	12580 <__assert_fail@plt+0x1010>
   125b4:	movw	r8, #45392	; 0xb150
   125b8:	movt	r8, #2
   125bc:	ldr	r0, [r8, #72]	; 0x48
   125c0:	cmp	r0, #0
   125c4:	addne	r4, r8, #72	; 0x48
   125c8:	bne	125dc <__assert_fail@plt+0x106c>
   125cc:	b	126e0 <__assert_fail@plt+0x1170>
   125d0:	ldr	r0, [r4, #20]!
   125d4:	cmp	r0, #0
   125d8:	beq	126e0 <__assert_fail@plt+0x1170>
   125dc:	mov	r1, r7
   125e0:	bl	11210 <strcmp@plt>
   125e4:	cmp	r0, #0
   125e8:	bne	125d0 <__assert_fail@plt+0x1060>
   125ec:	ldrsh	r1, [r6]
   125f0:	add	r0, sp, #28
   125f4:	ldr	r3, [r4, #4]
   125f8:	blx	r3
   125fc:	ldr	r3, [r5, #1340]	; 0x53c
   12600:	mov	r7, r0
   12604:	cmp	r3, #0
   12608:	beq	1271c <__assert_fail@plt+0x11ac>
   1260c:	ldr	r3, [pc, #420]	; 127b8 <__assert_fail@plt+0x1248>
   12610:	ldrh	r2, [r3]
   12614:	cmp	r2, #2
   12618:	beq	12780 <__assert_fail@plt+0x1210>
   1261c:	movw	r3, #39208	; 0x9928
   12620:	movt	r3, #1
   12624:	cmp	r2, #10
   12628:	movw	r9, #39220	; 0x9934
   1262c:	movt	r9, #1
   12630:	movne	r9, r3
   12634:	ldr	r2, [pc, #384]	; 127bc <__assert_fail@plt+0x124c>
   12638:	mov	r1, #0
   1263c:	movw	r3, #1025	; 0x401
   12640:	str	r1, [sp]
   12644:	str	r1, [sp, #4]
   12648:	str	r1, [sp, #8]
   1264c:	sub	r0, r2, #840	; 0x348
   12650:	ldr	r1, [r5, #648]	; 0x288
   12654:	bl	11468 <getnameinfo@plt>
   12658:	cmp	r0, #0
   1265c:	ldreq	fp, [pc, #344]	; 127bc <__assert_fail@plt+0x124c>
   12660:	bne	1278c <__assert_fail@plt+0x121c>
   12664:	movw	r3, #39244	; 0x994c
   12668:	movt	r3, #1
   1266c:	ldrsh	r2, [r6]
   12670:	movw	sl, #39236	; 0x9944
   12674:	movt	sl, #1
   12678:	ldr	r1, [sp, #28]
   1267c:	cmp	r2, #2
   12680:	movne	sl, r3
   12684:	cmp	r7, #0
   12688:	str	r1, [sp, #20]
   1268c:	beq	126f0 <__assert_fail@plt+0x1180>
   12690:	ldr	r3, [r8]
   12694:	cmp	r3, #0
   12698:	blt	126c4 <__assert_fail@plt+0x1154>
   1269c:	cmp	r7, r3
   126a0:	movw	r2, #45392	; 0xb150
   126a4:	movt	r2, #2
   126a8:	bne	126b8 <__assert_fail@plt+0x1148>
   126ac:	b	127b0 <__assert_fail@plt+0x1240>
   126b0:	cmp	r7, r3
   126b4:	beq	127b0 <__assert_fail@plt+0x1240>
   126b8:	ldr	r3, [r2, #8]!
   126bc:	cmp	r3, #0
   126c0:	bge	126b0 <__assert_fail@plt+0x1140>
   126c4:	movw	r1, #39280	; 0x9970
   126c8:	movt	r1, #1
   126cc:	ldr	r0, [pc, #236]	; 127c0 <__assert_fail@plt+0x1250>
   126d0:	mov	r2, r7
   126d4:	bl	114bc <sprintf@plt>
   126d8:	ldr	ip, [pc, #224]	; 127c0 <__assert_fail@plt+0x1250>
   126dc:	b	126f8 <__assert_fail@plt+0x1188>
   126e0:	mov	r0, #4
   126e4:	bl	11a90 <__assert_fail@plt+0x520>
   126e8:	mov	r0, #1
   126ec:	bl	113a8 <exit@plt>
   126f0:	movw	ip, #39252	; 0x9954
   126f4:	movt	ip, #1
   126f8:	ldr	r0, [sp, #20]
   126fc:	movw	r1, #39292	; 0x997c
   12700:	movt	r1, #1
   12704:	mov	r3, r9
   12708:	mov	r2, fp
   1270c:	str	sl, [sp]
   12710:	stmib	sp, {r0, ip}
   12714:	mov	r0, #6
   12718:	bl	114a4 <syslog@plt>
   1271c:	cmp	r7, #0
   12720:	beq	12760 <__assert_fail@plt+0x11f0>
   12724:	ldr	r3, [r5, #1348]	; 0x544
   12728:	cmp	r3, #0
   1272c:	beq	12750 <__assert_fail@plt+0x11e0>
   12730:	ldr	r3, [sp, #28]
   12734:	ldrb	r2, [r3]
   12738:	subs	r3, r2, #47	; 0x2f
   1273c:	movne	r3, #1
   12740:	cmp	r7, #1
   12744:	movne	r3, #0
   12748:	cmp	r3, #0
   1274c:	bne	12778 <__assert_fail@plt+0x1208>
   12750:	mov	r0, r7
   12754:	bl	11a90 <__assert_fail@plt+0x520>
   12758:	mov	r0, #1
   1275c:	bl	113a8 <exit@plt>
   12760:	ldrsh	r3, [r6]
   12764:	mov	r0, r4
   12768:	cmp	r3, #2
   1276c:	ldreq	r3, [r4, #12]
   12770:	ldrne	r3, [r4, #8]
   12774:	blx	r3
   12778:	mov	r0, #0
   1277c:	bl	113a8 <exit@plt>
   12780:	movw	r9, #39212	; 0x992c
   12784:	movt	r9, #1
   12788:	b	12634 <__assert_fail@plt+0x10c4>
   1278c:	bl	11270 <gai_strerror@plt>
   12790:	mov	r2, r0
   12794:	movw	r1, #39260	; 0x995c
   12798:	movt	r1, #1
   1279c:	mov	r0, #3
   127a0:	movw	fp, #39228	; 0x993c
   127a4:	movt	fp, #1
   127a8:	bl	114a4 <syslog@plt>
   127ac:	b	12664 <__assert_fail@plt+0x10f4>
   127b0:	ldr	ip, [r2, #4]
   127b4:	b	126f8 <__assert_fail@plt+0x1188>
   127b8:	strdeq	fp, [r2], -ip
   127bc:	andeq	fp, r2, r4, asr #16
   127c0:	andeq	fp, r2, r8, asr #24
   127c4:	movw	r1, #45728	; 0xb2a0
   127c8:	movt	r1, #2
   127cc:	push	{lr}		; (str lr, [sp, #-4]!)
   127d0:	mvn	lr, #0
   127d4:	mvn	r0, #2
   127d8:	mvn	ip, #1
   127dc:	movw	r2, #48220	; 0xbc5c
   127e0:	movt	r2, #2
   127e4:	movw	r3, #48688	; 0xbe30
   127e8:	movt	r3, #2
   127ec:	str	lr, [r1]
   127f0:	mov	r1, #0
   127f4:	str	r0, [r3]
   127f8:	add	r0, r3, #4
   127fc:	str	r1, [r2]
   12800:	str	r1, [r2, #4]
   12804:	str	r1, [r2, #8]
   12808:	str	ip, [r3, #520]	; 0x208
   1280c:	pop	{pc}		; (ldr pc, [sp], #4)
   12810:	mov	ip, #1
   12814:	mvn	r0, #0
   12818:	push	{lr}		; (str lr, [sp, #-4]!)
   1281c:	movw	r2, #48220	; 0xbc5c
   12820:	movt	r2, #2
   12824:	movw	r1, #45728	; 0xb2a0
   12828:	movt	r1, #2
   1282c:	mvn	lr, #2
   12830:	movw	r3, #48688	; 0xbe30
   12834:	movt	r3, #2
   12838:	str	r0, [r1]
   1283c:	mov	r1, #0
   12840:	add	r0, r3, #4
   12844:	str	ip, [r2, #8]
   12848:	mvn	ip, #1
   1284c:	str	lr, [r3]
   12850:	str	r1, [r2]
   12854:	str	r1, [r2, #4]
   12858:	str	ip, [r3, #520]	; 0x208
   1285c:	pop	{pc}		; (ldr pc, [sp], #4)
   12860:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12864:	movw	r5, #48220	; 0xbc5c
   12868:	movt	r5, #2
   1286c:	strd	r6, [sp, #8]
   12870:	movw	r7, #48688	; 0xbe30
   12874:	movt	r7, #2
   12878:	strd	r8, [sp, #16]
   1287c:	ldr	r8, [r5, #8]
   12880:	strd	sl, [sp, #24]
   12884:	str	lr, [sp, #32]
   12888:	sub	sp, sp, #12
   1288c:	lsl	r3, r8, #6
   12890:	add	r4, r3, r8
   12894:	lsl	r4, r4, #3
   12898:	str	r3, [sp, #4]
   1289c:	ldr	r3, [r7, r4]
   128a0:	cmn	r3, #2
   128a4:	bne	12960 <__assert_fail@plt+0x13f0>
   128a8:	clz	r3, r8
   128ac:	add	r2, r4, #4
   128b0:	lsr	r3, r3, #5
   128b4:	add	r2, r7, r2
   128b8:	cmp	r1, #0
   128bc:	add	r1, r2, #4
   128c0:	str	r1, [sp]
   128c4:	str	r3, [r5, #8]
   128c8:	beq	1297c <__assert_fail@plt+0x140c>
   128cc:	movw	fp, #45728	; 0xb2a0
   128d0:	movt	fp, #2
   128d4:	ldr	r4, [sp]
   128d8:	mov	r6, r0
   128dc:	add	r9, r2, #516	; 0x204
   128e0:	mov	sl, #1
   128e4:	b	12908 <__assert_fail@plt+0x1398>
   128e8:	ldr	r3, [fp]
   128ec:	str	r0, [r5]
   128f0:	cmp	r3, #10
   128f4:	moveq	r3, #10
   128f8:	movne	r3, r0
   128fc:	strb	r3, [r4], #1
   12900:	cmp	r9, r4
   12904:	beq	1294c <__assert_fail@plt+0x13dc>
   12908:	ldr	r3, [r5]
   1290c:	mov	r0, #0
   12910:	cmp	r3, r0
   12914:	bne	128e8 <__assert_fail@plt+0x1378>
   12918:	mov	r0, r6
   1291c:	bl	11534 <getc@plt>
   12920:	cmn	r0, #1
   12924:	mov	r3, #13
   12928:	beq	1294c <__assert_fail@plt+0x13dc>
   1292c:	cmp	r0, r3
   12930:	cmpne	r0, #10
   12934:	uxtbne	r3, r0
   12938:	streq	sl, [r5]
   1293c:	streq	r0, [fp]
   12940:	strb	r3, [r4], #1
   12944:	cmp	r9, r4
   12948:	bne	12908 <__assert_fail@plt+0x1398>
   1294c:	ldr	r3, [sp, #4]
   12950:	add	r8, r3, r8
   12954:	ldr	r3, [sp]
   12958:	sub	r4, r4, r3
   1295c:	str	r4, [r7, r8, lsl #3]
   12960:	add	sp, sp, #12
   12964:	ldrd	r4, [sp]
   12968:	ldrd	r6, [sp, #8]
   1296c:	ldrd	r8, [sp, #16]
   12970:	ldrd	sl, [sp, #24]
   12974:	add	sp, sp, #32
   12978:	pop	{pc}		; (ldr pc, [sp], #4)
   1297c:	bl	11414 <fileno@plt>
   12980:	mov	r2, #512	; 0x200
   12984:	ldr	r1, [sp]
   12988:	bl	11234 <read@plt>
   1298c:	str	r0, [r7, r4]
   12990:	b	12960 <__assert_fail@plt+0x13f0>
   12994:	movw	ip, #48220	; 0xbc5c
   12998:	movt	ip, #2
   1299c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   129a0:	ldr	r3, [ip, #4]
   129a4:	movw	r4, #48688	; 0xbe30
   129a8:	movt	r4, #2
   129ac:	strd	r6, [sp, #8]
   129b0:	mov	r7, r1
   129b4:	str	r8, [sp, #16]
   129b8:	str	lr, [sp, #20]
   129bc:	mvn	lr, #1
   129c0:	clz	r5, r3
   129c4:	add	r3, r3, r3, lsl #6
   129c8:	lsr	r5, r5, #5
   129cc:	lsl	r6, r5, #6
   129d0:	str	lr, [r4, r3, lsl #3]
   129d4:	str	r5, [ip, #4]
   129d8:	add	r8, r6, r5
   129dc:	lsl	r8, r8, #3
   129e0:	ldr	r3, [r4, r8]
   129e4:	cmp	r3, lr
   129e8:	beq	12a14 <__assert_fail@plt+0x14a4>
   129ec:	add	r5, r6, r5
   129f0:	ldr	r8, [sp, #16]
   129f4:	mov	r0, r3
   129f8:	add	r4, r4, r5, lsl #3
   129fc:	add	r4, r4, #4
   12a00:	str	r4, [r7]
   12a04:	ldrd	r4, [sp]
   12a08:	ldrd	r6, [sp, #8]
   12a0c:	add	sp, sp, #20
   12a10:	pop	{pc}		; (ldr pc, [sp], #4)
   12a14:	mov	r1, r2
   12a18:	bl	12860 <__assert_fail@plt+0x12f0>
   12a1c:	ldr	r3, [r4, r8]
   12a20:	b	129ec <__assert_fail@plt+0x147c>
   12a24:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12a28:	movw	r4, #48220	; 0xbc5c
   12a2c:	movt	r4, #2
   12a30:	ldr	r3, [r4, #8]
   12a34:	strd	r6, [sp, #8]
   12a38:	str	lr, [sp, #28]
   12a3c:	movw	lr, #48688	; 0xbe30
   12a40:	movt	lr, #2
   12a44:	strd	r8, [sp, #16]
   12a48:	str	sl, [sp, #24]
   12a4c:	sub	sp, sp, #8
   12a50:	add	ip, r3, r3, lsl #6
   12a54:	lsl	ip, ip, #3
   12a58:	ldr	r9, [lr, ip]
   12a5c:	cmn	r9, #1
   12a60:	blt	12b20 <__assert_fail@plt+0x15b0>
   12a64:	clz	r3, r3
   12a68:	mvn	r5, #1
   12a6c:	lsr	r3, r3, #5
   12a70:	add	r6, ip, #4
   12a74:	cmp	r9, #0
   12a78:	add	r2, r6, lr
   12a7c:	str	r5, [lr, ip]
   12a80:	add	r5, r2, #4
   12a84:	str	r3, [r4, #8]
   12a88:	ble	12b54 <__assert_fail@plt+0x15e4>
   12a8c:	cmp	r1, #0
   12a90:	beq	12b28 <__assert_fail@plt+0x15b8>
   12a94:	movw	r7, #45728	; 0xb2a0
   12a98:	movt	r7, #2
   12a9c:	ldr	r3, [r7]
   12aa0:	add	r6, r9, #4
   12aa4:	mov	r8, r0
   12aa8:	mov	sl, #1
   12aac:	add	r6, r2, r6
   12ab0:	cmp	r3, #13
   12ab4:	ldrb	r4, [r5], #1
   12ab8:	bne	12acc <__assert_fail@plt+0x155c>
   12abc:	cmp	r4, #10
   12ac0:	beq	12b08 <__assert_fail@plt+0x1598>
   12ac4:	cmp	r4, #0
   12ac8:	beq	12ad8 <__assert_fail@plt+0x1568>
   12acc:	mov	r1, r8
   12ad0:	mov	r0, r4
   12ad4:	bl	114d4 <putc@plt>
   12ad8:	cmp	r6, r5
   12adc:	mov	r3, r4
   12ae0:	str	r4, [r7]
   12ae4:	bne	12ab0 <__assert_fail@plt+0x1540>
   12ae8:	mov	r0, r9
   12aec:	add	sp, sp, #8
   12af0:	ldrd	r4, [sp]
   12af4:	ldrd	r6, [sp, #8]
   12af8:	ldrd	r8, [sp, #16]
   12afc:	ldr	sl, [sp, #24]
   12b00:	add	sp, sp, #28
   12b04:	pop	{pc}		; (ldr pc, [sp], #4)
   12b08:	mvn	r2, #0
   12b0c:	mvn	r3, #0
   12b10:	str	sl, [sp]
   12b14:	mov	r0, r8
   12b18:	bl	11438 <fseeko64@plt>
   12b1c:	b	12acc <__assert_fail@plt+0x155c>
   12b20:	mov	r9, #0
   12b24:	b	12ae8 <__assert_fail@plt+0x1578>
   12b28:	bl	11414 <fileno@plt>
   12b2c:	mov	r2, r9
   12b30:	mov	r1, r5
   12b34:	add	sp, sp, #8
   12b38:	ldrd	r4, [sp]
   12b3c:	ldrd	r6, [sp, #8]
   12b40:	ldrd	r8, [sp, #16]
   12b44:	ldr	sl, [sp, #24]
   12b48:	ldr	lr, [sp, #28]
   12b4c:	add	sp, sp, #32
   12b50:	b	11408 <write@plt>
   12b54:	mvn	r9, #0
   12b58:	b	12ae8 <__assert_fail@plt+0x1578>
   12b5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12b60:	movw	r4, #48688	; 0xbe30
   12b64:	movt	r4, #2
   12b68:	strd	r6, [sp, #8]
   12b6c:	mov	r6, r2
   12b70:	mov	r7, r1
   12b74:	str	r8, [sp, #16]
   12b78:	movw	r8, #48220	; 0xbc5c
   12b7c:	movt	r8, #2
   12b80:	ldr	ip, [r8, #4]
   12b84:	str	lr, [sp, #20]
   12b88:	clz	lr, ip
   12b8c:	add	r5, ip, ip, lsl #6
   12b90:	lsr	lr, lr, #5
   12b94:	lsl	ip, lr, #6
   12b98:	str	r2, [r4, r5, lsl #3]
   12b9c:	str	lr, [r8, #4]
   12ba0:	add	r2, ip, lr
   12ba4:	ldr	r2, [r4, r2, lsl #3]
   12ba8:	cmn	r2, #2
   12bac:	beq	12bc0 <__assert_fail@plt+0x1650>
   12bb0:	mov	r1, r3
   12bb4:	bl	12a24 <__assert_fail@plt+0x14b4>
   12bb8:	ldr	lr, [r8, #4]
   12bbc:	lsl	ip, lr, #6
   12bc0:	add	ip, ip, lr
   12bc4:	mvn	r2, #2
   12bc8:	ldr	r8, [sp, #16]
   12bcc:	lsl	ip, ip, #3
   12bd0:	mov	r0, r6
   12bd4:	add	r3, ip, #4
   12bd8:	add	r3, r4, r3
   12bdc:	str	r2, [r4, ip]
   12be0:	ldrd	r4, [sp]
   12be4:	str	r3, [r7]
   12be8:	ldrd	r6, [sp, #8]
   12bec:	add	sp, sp, #20
   12bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bf4:	strd	r4, [sp, #-20]!	; 0xffffffec
   12bf8:	mov	r4, r0
   12bfc:	mov	r5, #0
   12c00:	strd	r6, [sp, #8]
   12c04:	mov	r7, #128	; 0x80
   12c08:	str	lr, [sp, #16]
   12c0c:	sub	sp, sp, #668	; 0x29c
   12c10:	add	r6, sp, #20
   12c14:	b	12c2c <__assert_fail@plt+0x16bc>
   12c18:	add	ip, sp, #16
   12c1c:	add	r5, r5, #1
   12c20:	stm	sp, {r6, ip}
   12c24:	str	r7, [sp, #16]
   12c28:	bl	112b8 <recvfrom@plt>
   12c2c:	add	r2, sp, #12
   12c30:	movw	r1, #21531	; 0x541b
   12c34:	mov	r0, r4
   12c38:	bl	14348 <argp_parse@@Base+0x1110>
   12c3c:	ldr	ip, [sp, #12]
   12c40:	mov	r3, #0
   12c44:	mov	r2, #516	; 0x204
   12c48:	add	r1, sp, #148	; 0x94
   12c4c:	mov	r0, r4
   12c50:	cmp	ip, r3
   12c54:	bne	12c18 <__assert_fail@plt+0x16a8>
   12c58:	mov	r0, r5
   12c5c:	add	sp, sp, #668	; 0x29c
   12c60:	ldrd	r4, [sp]
   12c64:	ldrd	r6, [sp, #8]
   12c68:	add	sp, sp, #16
   12c6c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c70:	ldr	r3, [r0]
   12c74:	strd	r4, [sp, #-16]!
   12c78:	ldr	r5, [r0, #16]
   12c7c:	str	r6, [sp, #8]
   12c80:	str	lr, [sp, #12]
   12c84:	cmp	r3, #0
   12c88:	beq	12d34 <__assert_fail@plt+0x17c4>
   12c8c:	ldr	r0, [r1, #8]
   12c90:	mov	r2, #0
   12c94:	add	r0, r0, #1
   12c98:	str	r0, [r1, #8]
   12c9c:	b	12ca4 <__assert_fail@plt+0x1734>
   12ca0:	add	r2, r2, #1
   12ca4:	add	r3, r3, #24
   12ca8:	ldr	r0, [r3, #-20]	; 0xffffffec
   12cac:	cmp	r0, #0
   12cb0:	bne	12ca0 <__assert_fail@plt+0x1730>
   12cb4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12cb8:	cmp	r0, #0
   12cbc:	bne	12ca0 <__assert_fail@plt+0x1730>
   12cc0:	ldr	r0, [r3, #-8]
   12cc4:	cmp	r0, #0
   12cc8:	bne	12ca0 <__assert_fail@plt+0x1730>
   12ccc:	ldr	r0, [r3, #-4]
   12cd0:	cmp	r0, #0
   12cd4:	bne	12ca0 <__assert_fail@plt+0x1730>
   12cd8:	ldm	r1, {r0, r3}
   12cdc:	add	ip, r2, r2, lsl #1
   12ce0:	add	r2, r3, r2
   12ce4:	add	r0, r0, ip
   12ce8:	stm	r1, {r0, r2}
   12cec:	cmp	r5, #0
   12cf0:	beq	12d24 <__assert_fail@plt+0x17b4>
   12cf4:	ldr	r0, [r5]
   12cf8:	cmp	r0, #0
   12cfc:	beq	12d24 <__assert_fail@plt+0x17b4>
   12d00:	mov	r4, r1
   12d04:	mov	r1, r4
   12d08:	bl	12c70 <__assert_fail@plt+0x1700>
   12d0c:	ldr	r3, [r4, #12]
   12d10:	ldr	r0, [r5, #16]!
   12d14:	add	r3, r3, #1
   12d18:	cmp	r0, #0
   12d1c:	str	r3, [r4, #12]
   12d20:	bne	12d04 <__assert_fail@plt+0x1794>
   12d24:	ldrd	r4, [sp]
   12d28:	ldr	r6, [sp, #8]
   12d2c:	add	sp, sp, #12
   12d30:	pop	{pc}		; (ldr pc, [sp], #4)
   12d34:	ldr	r3, [r0, #4]
   12d38:	cmp	r3, #0
   12d3c:	beq	12cec <__assert_fail@plt+0x177c>
   12d40:	ldr	r3, [r1, #8]
   12d44:	add	r3, r3, #1
   12d48:	str	r3, [r1, #8]
   12d4c:	b	12cec <__assert_fail@plt+0x177c>
   12d50:	cmp	r0, #86	; 0x56
   12d54:	beq	12d60 <__assert_fail@plt+0x17f0>
   12d58:	mov	r0, #7
   12d5c:	bx	lr
   12d60:	movw	r3, #48236	; 0xbc6c
   12d64:	movt	r3, #2
   12d68:	str	r4, [sp, #-8]!
   12d6c:	ldr	r3, [r3]
   12d70:	mov	r4, r2
   12d74:	str	lr, [sp, #4]
   12d78:	cmp	r3, #0
   12d7c:	beq	12dac <__assert_fail@plt+0x183c>
   12d80:	mov	r1, r2
   12d84:	ldr	r0, [r2, #48]	; 0x30
   12d88:	blx	r3
   12d8c:	ldr	r0, [r4, #16]
   12d90:	ands	r0, r0, #32
   12d94:	beq	12da8 <__assert_fail@plt+0x1838>
   12d98:	ldr	r4, [sp]
   12d9c:	add	sp, sp, #4
   12da0:	mov	r0, #0
   12da4:	pop	{pc}		; (ldr pc, [sp], #4)
   12da8:	bl	113a8 <exit@plt>
   12dac:	movw	r3, #49732	; 0xc244
   12db0:	movt	r3, #2
   12db4:	ldr	r2, [r3]
   12db8:	cmp	r2, #0
   12dbc:	beq	12dd4 <__assert_fail@plt+0x1864>
   12dc0:	movw	r1, #40820	; 0x9f74
   12dc4:	movt	r1, #1
   12dc8:	ldr	r0, [r4, #48]	; 0x30
   12dcc:	bl	113cc <fprintf@plt>
   12dd0:	b	12d8c <__assert_fail@plt+0x181c>
   12dd4:	movw	r2, #40408	; 0x9dd8
   12dd8:	movt	r2, #1
   12ddc:	movw	r1, #39320	; 0x9998
   12de0:	movt	r1, #1
   12de4:	mov	r0, r4
   12de8:	bl	182a4 <argp_error@@Base>
   12dec:	b	12d8c <__assert_fail@plt+0x181c>
   12df0:	cmn	r0, #3
   12df4:	str	r4, [sp, #-8]!
   12df8:	mov	r4, r2
   12dfc:	str	lr, [sp, #4]
   12e00:	sub	sp, sp, #8
   12e04:	beq	12f04 <__assert_fail@plt+0x1994>
   12e08:	ble	12e40 <__assert_fail@plt+0x18d0>
   12e0c:	cmn	r0, #2
   12e10:	beq	12eb8 <__assert_fail@plt+0x1948>
   12e14:	cmp	r0, #63	; 0x3f
   12e18:	bne	12ea4 <__assert_fail@plt+0x1934>
   12e1c:	mov	r0, r4
   12e20:	movw	r2, #634	; 0x27a
   12e24:	ldr	r1, [r4, #48]	; 0x30
   12e28:	bl	181e4 <argp_state_help@@Base>
   12e2c:	mov	r0, #0
   12e30:	add	sp, sp, #8
   12e34:	ldr	r4, [sp]
   12e38:	add	sp, sp, #4
   12e3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e40:	cmn	r0, #4
   12e44:	bne	12ea4 <__assert_fail@plt+0x1934>
   12e48:	cmp	r1, #0
   12e4c:	movw	r0, #40444	; 0x9dfc
   12e50:	movt	r0, #1
   12e54:	mov	r2, #10
   12e58:	movne	r0, r1
   12e5c:	movw	r4, #48232	; 0xbc68
   12e60:	movt	r4, #2
   12e64:	mov	r1, #0
   12e68:	bl	1121c <strtol@plt>
   12e6c:	str	r0, [r4]
   12e70:	b	12e7c <__assert_fail@plt+0x190c>
   12e74:	mov	r0, #1
   12e78:	bl	112ac <sleep@plt>
   12e7c:	ldr	r3, [r4]
   12e80:	sub	r2, r3, #1
   12e84:	cmp	r3, #0
   12e88:	str	r2, [r4]
   12e8c:	bgt	12e74 <__assert_fail@plt+0x1904>
   12e90:	mov	r0, #0
   12e94:	add	sp, sp, #8
   12e98:	ldr	r4, [sp]
   12e9c:	add	sp, sp, #4
   12ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ea4:	mov	r0, #7
   12ea8:	add	sp, sp, #8
   12eac:	ldr	r4, [sp]
   12eb0:	add	sp, sp, #4
   12eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb8:	movw	r3, #45796	; 0xb2e4
   12ebc:	movt	r3, #2
   12ec0:	str	r1, [sp, #4]
   12ec4:	mov	r0, r1
   12ec8:	str	r1, [r3]
   12ecc:	bl	14164 <argp_parse@@Base+0xf2c>
   12ed0:	ldr	r3, [r4, #16]
   12ed4:	movw	r2, #45792	; 0xb2e0
   12ed8:	movt	r2, #2
   12edc:	str	r0, [r4, #40]	; 0x28
   12ee0:	str	r0, [r2]
   12ee4:	ldr	r1, [sp, #4]
   12ee8:	and	r3, r3, #3
   12eec:	cmp	r3, #1
   12ef0:	bne	12e90 <__assert_fail@plt+0x1920>
   12ef4:	ldr	r3, [r4, #8]
   12ef8:	mov	r0, #0
   12efc:	str	r1, [r3]
   12f00:	b	12e30 <__assert_fail@plt+0x18c0>
   12f04:	ldr	r1, [r4, #48]	; 0x30
   12f08:	mov	r0, r4
   12f0c:	movw	r2, #513	; 0x201
   12f10:	bl	181e4 <argp_state_help@@Base>
   12f14:	mov	r0, #0
   12f18:	add	sp, sp, #8
   12f1c:	ldr	r4, [sp]
   12f20:	add	sp, sp, #4
   12f24:	pop	{pc}		; (ldr pc, [sp], #4)
   12f28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12f2c:	strd	r6, [sp, #8]
   12f30:	strd	r8, [sp, #16]
   12f34:	strd	sl, [sp, #24]
   12f38:	str	lr, [sp, #32]
   12f3c:	sub	sp, sp, #44	; 0x2c
   12f40:	ldr	fp, [r0]
   12f44:	str	r3, [sp, #16]
   12f48:	ldr	r3, [r0, #16]
   12f4c:	ldr	r7, [sp, #80]	; 0x50
   12f50:	cmp	fp, #0
   12f54:	str	r3, [sp, #24]
   12f58:	strd	r0, [sp, #28]
   12f5c:	str	r2, [sp, #36]	; 0x24
   12f60:	beq	1320c <__assert_fail@plt+0x1c9c>
   12f64:	ldr	r9, [r7, #4]
   12f68:	movw	r3, #36409	; 0x8e39
   12f6c:	movt	r3, #14563	; 0x38e3
   12f70:	mov	r4, fp
   12f74:	str	r3, [sp, #20]
   12f78:	ldr	r6, [r4, #4]
   12f7c:	cmp	r6, #0
   12f80:	bne	12f90 <__assert_fail@plt+0x1a20>
   12f84:	ldr	r3, [r4]
   12f88:	cmp	r3, #0
   12f8c:	beq	13104 <__assert_fail@plt+0x1b94>
   12f90:	ldr	r3, [r4, #12]
   12f94:	tst	r3, #4
   12f98:	moveq	r5, r3
   12f9c:	moveq	fp, r4
   12fa0:	ldrne	r5, [fp, #12]
   12fa4:	ands	r5, r5, #8
   12fa8:	bne	130ec <__assert_fail@plt+0x1b7c>
   12fac:	tst	r3, #8
   12fb0:	bne	13030 <__assert_fail@plt+0x1ac0>
   12fb4:	sub	r3, r6, #1
   12fb8:	cmp	r3, #254	; 0xfe
   12fbc:	bhi	13030 <__assert_fail@plt+0x1ac0>
   12fc0:	bl	1139c <__ctype_b_loc@plt>
   12fc4:	ldr	r1, [r0]
   12fc8:	lsl	r3, r6, #1
   12fcc:	ldrh	r3, [r1, r3]
   12fd0:	tst	r3, #16384	; 0x4000
   12fd4:	beq	13030 <__assert_fail@plt+0x1ac0>
   12fd8:	add	r3, r9, #1
   12fdc:	str	r3, [r7, #4]
   12fe0:	strb	r6, [r9]
   12fe4:	ldr	r3, [fp, #8]
   12fe8:	cmp	r3, #0
   12fec:	beq	13020 <__assert_fail@plt+0x1ab0>
   12ff0:	ldr	r3, [r7, #4]
   12ff4:	mov	r2, #58	; 0x3a
   12ff8:	add	r1, r3, #1
   12ffc:	str	r1, [r7, #4]
   13000:	strb	r2, [r3]
   13004:	ldr	r3, [fp, #12]
   13008:	tst	r3, #1
   1300c:	beq	13020 <__assert_fail@plt+0x1ab0>
   13010:	ldr	r3, [r7, #4]
   13014:	add	r1, r3, #1
   13018:	str	r1, [r7, #4]
   1301c:	strb	r2, [r3]
   13020:	ldr	r3, [r7, #4]
   13024:	mov	r2, #0
   13028:	strb	r2, [r3]
   1302c:	ldr	r9, [r7, #4]
   13030:	ldr	sl, [r4]
   13034:	cmp	sl, #0
   13038:	beq	130ec <__assert_fail@plt+0x1b7c>
   1303c:	ldr	r3, [r7]
   13040:	ldr	r8, [r3, #8]
   13044:	str	r3, [sp, #12]
   13048:	ldr	r0, [r8]
   1304c:	cmp	r0, #0
   13050:	beq	13074 <__assert_fail@plt+0x1b04>
   13054:	mov	r6, r8
   13058:	mov	r1, sl
   1305c:	bl	11210 <strcmp@plt>
   13060:	cmp	r0, #0
   13064:	beq	130f4 <__assert_fail@plt+0x1b84>
   13068:	ldr	r0, [r6, #16]!
   1306c:	cmp	r0, #0
   13070:	bne	13058 <__assert_fail@plt+0x1ae8>
   13074:	ldr	r0, [fp, #8]
   13078:	ldr	r1, [r7, #8]
   1307c:	cmp	r0, #0
   13080:	str	sl, [r1]
   13084:	beq	13098 <__assert_fail@plt+0x1b28>
   13088:	ldr	r3, [fp, #12]
   1308c:	tst	r3, #1
   13090:	movne	r5, #2
   13094:	moveq	r5, #1
   13098:	str	r5, [r1, #4]
   1309c:	mov	r3, #0
   130a0:	add	ip, r1, #16
   130a4:	ldr	r0, [r4, #4]
   130a8:	str	r3, [r1, #8]
   130ac:	ldr	r2, [sp, #16]
   130b0:	cmp	r0, r3
   130b4:	ldr	r3, [sp, #12]
   130b8:	ldreq	r0, [fp, #4]
   130bc:	ldr	r3, [r3, #48]	; 0x30
   130c0:	bic	r0, r0, #-16777216	; 0xff000000
   130c4:	sub	r3, r2, r3
   130c8:	ldr	r2, [sp, #20]
   130cc:	asr	r3, r3, #2
   130d0:	mul	r3, r2, r3
   130d4:	add	r3, r3, #1
   130d8:	add	r3, r0, r3, lsl #24
   130dc:	str	r3, [r1, #12]
   130e0:	mov	r3, #0
   130e4:	str	ip, [r7, #8]
   130e8:	str	r3, [r1, #16]
   130ec:	add	r4, r4, #24
   130f0:	b	12f78 <__assert_fail@plt+0x1a08>
   130f4:	sub	r6, r6, r8
   130f8:	cmp	r6, #0
   130fc:	bge	130ec <__assert_fail@plt+0x1b7c>
   13100:	b	13074 <__assert_fail@plt+0x1b04>
   13104:	ldr	r3, [r4, #16]
   13108:	cmp	r3, #0
   1310c:	bne	12f90 <__assert_fail@plt+0x1a20>
   13110:	ldr	r3, [r4, #20]
   13114:	cmp	r3, #0
   13118:	bne	12f90 <__assert_fail@plt+0x1a20>
   1311c:	ldr	r3, [sp, #28]
   13120:	ldr	r2, [r3, #4]
   13124:	mov	r3, #0
   13128:	ldr	r1, [sp, #16]
   1312c:	ldr	r0, [sp, #24]
   13130:	str	r2, [r1]
   13134:	mov	r2, r1
   13138:	ldr	r1, [sp, #28]
   1313c:	cmp	r0, r3
   13140:	stmib	r2, {r1, r9}
   13144:	ldr	r1, [sp, #32]
   13148:	str	r3, [r2, #12]
   1314c:	str	r1, [r2, #16]
   13150:	ldr	r1, [sp, #36]	; 0x24
   13154:	str	r3, [r2, #24]
   13158:	str	r3, [r2, #28]
   1315c:	str	r3, [r2, #32]
   13160:	str	r1, [r2, #20]
   13164:	beq	131a0 <__assert_fail@plt+0x1c30>
   13168:	ldr	r2, [r0]
   1316c:	cmp	r2, r3
   13170:	beq	13230 <__assert_fail@plt+0x1cc0>
   13174:	mov	r1, r0
   13178:	add	r3, r3, #1
   1317c:	ldr	r2, [r1, r3, lsl #4]
   13180:	cmp	r2, #0
   13184:	bne	13178 <__assert_fail@plt+0x1c08>
   13188:	lsl	r3, r3, #2
   1318c:	ldr	r2, [r7, #12]
   13190:	ldr	r1, [sp, #16]
   13194:	add	r3, r2, r3
   13198:	str	r2, [r1, #28]
   1319c:	str	r3, [r7, #12]
   131a0:	ldr	r3, [sp, #16]
   131a4:	add	r0, r3, #36	; 0x24
   131a8:	ldr	r5, [sp, #24]
   131ac:	cmp	r5, #0
   131b0:	beq	131f0 <__assert_fail@plt+0x1c80>
   131b4:	ldr	r1, [r5]
   131b8:	cmp	r1, #0
   131bc:	beq	131f0 <__assert_fail@plt+0x1c80>
   131c0:	ldr	r6, [sp, #16]
   131c4:	mov	r2, #0
   131c8:	add	r4, r2, #1
   131cc:	mov	r3, r0
   131d0:	str	r7, [sp]
   131d4:	mov	r0, r1
   131d8:	mov	r1, r6
   131dc:	bl	12f28 <__assert_fail@plt+0x19b8>
   131e0:	ldr	r1, [r5, r4, lsl #4]
   131e4:	mov	r2, r4
   131e8:	cmp	r1, #0
   131ec:	bne	131c8 <__assert_fail@plt+0x1c58>
   131f0:	add	sp, sp, #44	; 0x2c
   131f4:	ldrd	r4, [sp]
   131f8:	ldrd	r6, [sp, #8]
   131fc:	ldrd	r8, [sp, #16]
   13200:	ldrd	sl, [sp, #24]
   13204:	add	sp, sp, #32
   13208:	pop	{pc}		; (ldr pc, [sp], #4)
   1320c:	ldr	r3, [sp, #28]
   13210:	ldr	r2, [r3, #4]
   13214:	cmp	r2, #0
   13218:	beq	13224 <__assert_fail@plt+0x1cb4>
   1321c:	ldr	r9, [r7, #4]
   13220:	b	13124 <__assert_fail@plt+0x1bb4>
   13224:	ldr	r0, [sp, #16]
   13228:	str	r2, [sp, #16]
   1322c:	b	131a8 <__assert_fail@plt+0x1c38>
   13230:	mov	r3, r2
   13234:	b	1318c <__assert_fail@plt+0x1c1c>

00013238 <argp_parse@@Base>:
   13238:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1323c:	tst	r3, #1
   13240:	mov	r5, r3
   13244:	strd	r6, [sp, #8]
   13248:	mov	r7, r0
   1324c:	strd	r8, [sp, #16]
   13250:	strd	sl, [sp, #24]
   13254:	add	fp, sp, #32
   13258:	str	lr, [sp, #32]
   1325c:	sub	sp, sp, #236	; 0xec
   13260:	str	r1, [fp, #-244]	; 0xffffff0c
   13264:	str	r2, [fp, #-232]	; 0xffffff18
   13268:	bne	13294 <argp_parse@@Base+0x5c>
   1326c:	movw	r3, #45796	; 0xb2e4
   13270:	movt	r3, #2
   13274:	ldr	r2, [r3]
   13278:	cmp	r2, #0
   1327c:	beq	13cb8 <argp_parse@@Base+0xa80>
   13280:	movw	r4, #45792	; 0xb2e0
   13284:	movt	r4, #2
   13288:	ldr	r3, [r4]
   1328c:	cmp	r3, #0
   13290:	beq	13cc8 <argp_parse@@Base+0xa90>
   13294:	ands	r3, r5, #4
   13298:	moveq	r6, #1
   1329c:	movne	r6, #0
   132a0:	ands	ip, r5, #16
   132a4:	str	r3, [fp, #-236]	; 0xffffff14
   132a8:	beq	13300 <argp_parse@@Base+0xc8>
   132ac:	mov	r3, #0
   132b0:	sub	r4, fp, #196	; 0xc4
   132b4:	str	r6, [fp, #-228]	; 0xffffff1c
   132b8:	cmp	r7, r3
   132bc:	str	r3, [fp, #-224]	; 0xffffff20
   132c0:	str	r3, [fp, #-220]	; 0xffffff24
   132c4:	str	r3, [fp, #-216]	; 0xffffff28
   132c8:	str	r3, [r4, #8]
   132cc:	str	r3, [r4, #12]
   132d0:	str	r3, [r4, #16]
   132d4:	str	r3, [r4, #20]
   132d8:	str	r3, [r4, #24]
   132dc:	str	r3, [r4, #28]
   132e0:	str	r3, [r4, #32]
   132e4:	bne	133b0 <argp_parse@@Base+0x178>
   132e8:	mov	r3, #52	; 0x34
   132ec:	mov	sl, #36	; 0x24
   132f0:	mov	r9, r7
   132f4:	str	r3, [fp, #-236]	; 0xffffff14
   132f8:	mov	r3, sl
   132fc:	b	133e8 <argp_parse@@Base+0x1b0>
   13300:	sub	sp, sp, #64	; 0x40
   13304:	mov	r1, ip
   13308:	add	r3, sp, #8
   1330c:	sub	sp, sp, #32
   13310:	add	r4, sp, #8
   13314:	mov	r0, r3
   13318:	mov	r2, #64	; 0x40
   1331c:	str	ip, [r4]
   13320:	str	ip, [r4, #4]
   13324:	str	ip, [r4, #8]
   13328:	str	ip, [r4, #12]
   1332c:	str	r3, [r4, #16]
   13330:	str	ip, [r4, #20]
   13334:	str	ip, [r4, #24]
   13338:	bl	113fc <memset@plt>
   1333c:	movw	r2, #49732	; 0xc244
   13340:	movt	r2, #2
   13344:	ldr	r1, [r2]
   13348:	mov	r3, r0
   1334c:	cmp	r7, #0
   13350:	movw	r2, #40128	; 0x9cc0
   13354:	movt	r2, #1
   13358:	strne	r7, [r3], #16
   1335c:	str	r2, [r3]
   13360:	cmp	r1, #0
   13364:	beq	13e30 <argp_parse@@Base+0xbf8>
   13368:	ldr	r1, [pc, #3392]	; 140b0 <argp_parse@@Base+0xe78>
   1336c:	add	r2, r3, #32
   13370:	str	r1, [r3, #16]
   13374:	mov	r3, #0
   13378:	mov	r7, r4
   1337c:	str	r6, [fp, #-228]	; 0xffffff1c
   13380:	sub	r4, fp, #196	; 0xc4
   13384:	str	r3, [fp, #-224]	; 0xffffff20
   13388:	str	r3, [fp, #-220]	; 0xffffff24
   1338c:	str	r3, [fp, #-216]	; 0xffffff28
   13390:	str	r3, [r2]
   13394:	str	r3, [r4, #8]
   13398:	str	r3, [r4, #12]
   1339c:	str	r3, [r4, #16]
   133a0:	str	r3, [r4, #20]
   133a4:	str	r3, [r4, #24]
   133a8:	str	r3, [r4, #28]
   133ac:	str	r3, [r4, #32]
   133b0:	sub	r1, fp, #228	; 0xe4
   133b4:	mov	r0, r7
   133b8:	bl	12c70 <__assert_fail@plt+0x1700>
   133bc:	ldr	r6, [fp, #-228]	; 0xffffff1c
   133c0:	ldrd	r2, [fp, #-224]	; 0xffffff20
   133c4:	ldr	r9, [fp, #-216]	; 0xffffff28
   133c8:	add	r3, r3, #1
   133cc:	add	r2, r2, #1
   133d0:	add	r3, r3, r3, lsl #3
   133d4:	lsl	r9, r9, #2
   133d8:	lsl	r3, r3, #2
   133dc:	add	sl, r9, r3
   133e0:	add	r2, sl, r2, lsl #4
   133e4:	str	r2, [fp, #-236]	; 0xffffff14
   133e8:	str	r3, [fp, #-240]	; 0xffffff10
   133ec:	ldr	r3, [fp, #-236]	; 0xffffff14
   133f0:	add	r0, r6, r3
   133f4:	add	r0, r0, #1
   133f8:	bl	14ddc <argp_parse@@Base+0x1ba4>
   133fc:	cmp	r0, #0
   13400:	mov	r6, r0
   13404:	str	r0, [fp, #-40]	; 0xffffffd8
   13408:	moveq	r5, #12
   1340c:	ldr	r3, [fp, #-240]	; 0xffffff10
   13410:	beq	13930 <argp_parse@@Base+0x6f8>
   13414:	mov	r2, r9
   13418:	mov	r1, #1
   1341c:	ldrd	r8, [r4, #8]
   13420:	add	ip, r0, sl
   13424:	add	r3, r0, r3
   13428:	str	r0, [fp, #-112]	; 0xffffff90
   1342c:	ldr	lr, [fp, #-236]	; 0xffffff14
   13430:	str	r1, [fp, #-196]	; 0xffffff3c
   13434:	str	r1, [fp, #-192]	; 0xffffff40
   13438:	str	ip, [fp, #-240]	; 0xffffff10
   1343c:	strd	r8, [fp, #-140]	; 0xffffff74
   13440:	ldrd	r8, [r4, #16]
   13444:	add	sl, r0, lr
   13448:	str	r3, [fp, #-104]	; 0xffffff98
   1344c:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   13450:	strd	r8, [fp, #-252]	; 0xffffff04
   13454:	ldrd	r8, [r4, #24]
   13458:	str	sl, [fp, #-156]	; 0xffffff64
   1345c:	strd	r0, [fp, #-148]	; 0xffffff6c
   13460:	mov	r0, r3
   13464:	sub	r3, fp, #260	; 0x104
   13468:	str	ip, [fp, #-152]	; 0xffffff68
   1346c:	mov	r1, #0
   13470:	ldr	ip, [r4, #32]
   13474:	strd	r8, [r3]
   13478:	ldrd	r8, [fp, #-252]	; 0xffffff04
   1347c:	strd	r8, [fp, #-132]	; 0xffffff7c
   13480:	ldrd	r8, [r3]
   13484:	str	ip, [fp, #-116]	; 0xffffff8c
   13488:	strd	r8, [fp, #-124]	; 0xffffff84
   1348c:	bl	113fc <memset@plt>
   13490:	ldr	ip, [fp, #-240]	; 0xffffff10
   13494:	sub	r2, fp, #160	; 0xa0
   13498:	tst	r5, #8
   1349c:	str	r2, [fp, #-212]	; 0xffffff2c
   134a0:	str	sl, [fp, #-208]	; 0xffffff30
   134a4:	str	r0, [fp, #-200]	; 0xffffff38
   134a8:	str	ip, [fp, #-204]	; 0xffffff34
   134ac:	bne	13950 <argp_parse@@Base+0x718>
   134b0:	ands	r3, r5, #4
   134b4:	cmp	r3, #0
   134b8:	moveq	r3, sl
   134bc:	beq	134d0 <argp_parse@@Base+0x298>
   134c0:	add	r3, sl, #1
   134c4:	mov	r2, #43	; 0x2b
   134c8:	str	r3, [fp, #-208]	; 0xffffff30
   134cc:	strb	r2, [sl]
   134d0:	ldr	r2, [fp, #-204]	; 0xffffff34
   134d4:	mov	r4, #0
   134d8:	cmp	r7, r4
   134dc:	strb	r4, [r3]
   134e0:	str	r4, [r2]
   134e4:	str	r7, [fp, #-160]	; 0xffffff60
   134e8:	beq	13b38 <argp_parse@@Base+0x900>
   134ec:	sub	ip, fp, #212	; 0xd4
   134f0:	mov	r2, r4
   134f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   134f8:	mov	r1, r4
   134fc:	mov	r0, r7
   13500:	str	ip, [sp]
   13504:	bl	12f28 <__assert_fail@plt+0x19b8>
   13508:	movw	r1, #45800	; 0xb2e8
   1350c:	movt	r1, #2
   13510:	ldr	r6, [fp, #-232]	; 0xffffff18
   13514:	movw	r2, #45804	; 0xb2ec
   13518:	movt	r2, #2
   1351c:	str	r0, [fp, #-108]	; 0xffffff94
   13520:	mov	lr, #1
   13524:	ldr	r3, [fp, #-112]	; 0xffffff90
   13528:	ldr	ip, [r1]
   1352c:	str	lr, [fp, #-100]	; 0xffffff9c
   13530:	ldr	r1, [fp, #-244]	; 0xffffff0c
   13534:	cmp	r0, r3
   13538:	mov	r0, #0
   1353c:	ldr	r2, [r2]
   13540:	movls	r3, r6
   13544:	ldr	lr, [fp, #-160]	; 0xffffff60
   13548:	str	ip, [fp, #-52]	; 0xffffffcc
   1354c:	str	r1, [fp, #-92]	; 0xffffffa4
   13550:	mov	r1, #0
   13554:	str	r2, [fp, #-48]	; 0xffffffd0
   13558:	sub	r2, fp, #160	; 0xa0
   1355c:	str	lr, [fp, #-96]	; 0xffffffa0
   13560:	str	r6, [fp, #-88]	; 0xffffffa8
   13564:	strd	r4, [fp, #-84]	; 0xffffffac
   13568:	strd	r0, [fp, #-76]	; 0xffffffb4
   1356c:	strd	r0, [fp, #-68]	; 0xffffffbc
   13570:	strd	r0, [fp, #-60]	; 0xffffffc4
   13574:	str	r2, [fp, #-44]	; 0xffffffd4
   13578:	bls	13660 <argp_parse@@Base+0x428>
   1357c:	mov	r6, #3
   13580:	movt	r6, #256	; 0x100
   13584:	ldr	r8, [fp, #-232]	; 0xffffff18
   13588:	add	r4, r3, #36	; 0x24
   1358c:	ldr	r2, [fp, #8]
   13590:	str	r2, [r3, #24]
   13594:	b	135e0 <argp_parse@@Base+0x3a8>
   13598:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1359c:	ldr	ip, [r4, #-4]
   135a0:	str	ip, [fp, #-60]	; 0xffffffc4
   135a4:	ldr	ip, [r4, #-12]
   135a8:	str	ip, [fp, #-68]	; 0xffffffbc
   135ac:	ldr	ip, [r4, #-8]
   135b0:	str	lr, [fp, #-76]	; 0xffffffb4
   135b4:	str	ip, [fp, #-64]	; 0xffffffc0
   135b8:	blx	r3
   135bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   135c0:	str	r3, [r4, #-4]
   135c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   135c8:	cmp	r4, r3
   135cc:	bcs	13bec <argp_parse@@Base+0x9b4>
   135d0:	cmp	r0, #7
   135d4:	cmpne	r0, #0
   135d8:	bne	13bdc <argp_parse@@Base+0x9a4>
   135dc:	add	r4, r4, #36	; 0x24
   135e0:	ldr	r3, [r4, #-20]	; 0xffffffec
   135e4:	mov	r1, #0
   135e8:	sub	r2, fp, #96	; 0x60
   135ec:	mov	r0, r6
   135f0:	cmp	r3, r1
   135f4:	beq	13608 <argp_parse@@Base+0x3d0>
   135f8:	ldr	ip, [r4, #-16]
   135fc:	ldr	r3, [r3, #28]
   13600:	ldr	r3, [r3, ip, lsl #2]
   13604:	str	r3, [r4, #-12]
   13608:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1360c:	cmp	r3, #0
   13610:	bne	13598 <argp_parse@@Base+0x360>
   13614:	ldr	r3, [r4, #-32]	; 0xffffffe0
   13618:	ldr	r3, [r3, #16]
   1361c:	cmp	r3, #0
   13620:	beq	13648 <argp_parse@@Base+0x410>
   13624:	ldr	r3, [r3]
   13628:	cmp	r3, #0
   1362c:	beq	13648 <argp_parse@@Base+0x410>
   13630:	ldr	ip, [r4, #-12]
   13634:	ldr	r3, [r4, #-8]
   13638:	str	ip, [r3]
   1363c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13640:	cmp	r3, #0
   13644:	bne	13598 <argp_parse@@Base+0x360>
   13648:	ldr	r3, [fp, #-108]	; 0xffffff94
   1364c:	cmp	r4, r3
   13650:	bcc	135dc <argp_parse@@Base+0x3a4>
   13654:	str	r8, [fp, #-232]	; 0xffffff18
   13658:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1365c:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13660:	tst	r5, #2
   13664:	beq	13bac <argp_parse@@Base+0x974>
   13668:	mov	r2, #0
   1366c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13670:	tst	r5, #1
   13674:	subne	r3, r3, #4
   13678:	str	r2, [fp, #-144]	; 0xffffff70
   1367c:	ldr	r2, [fp, #-232]	; 0xffffff18
   13680:	strne	r3, [fp, #-88]	; 0xffffffa8
   13684:	addne	r4, r4, #1
   13688:	strne	r4, [fp, #-92]	; 0xffffffa4
   1368c:	cmp	r2, r3
   13690:	beq	13bc4 <argp_parse@@Base+0x98c>
   13694:	movw	r3, #45792	; 0xb2e0
   13698:	movt	r3, #2
   1369c:	ldr	r3, [r3]
   136a0:	str	r3, [fp, #-56]	; 0xffffffc8
   136a4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   136a8:	movw	r3, #40456	; 0x9e08
   136ac:	movt	r3, #1
   136b0:	mov	r9, #6
   136b4:	movt	r9, #256	; 0x100
   136b8:	ldr	r7, [fp, #-84]	; 0xffffffac
   136bc:	mov	r0, r4
   136c0:	str	r3, [fp, #-232]	; 0xffffff18
   136c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   136c8:	cmp	r3, #0
   136cc:	beq	137b4 <argp_parse@@Base+0x57c>
   136d0:	cmp	r3, r7
   136d4:	movgt	r3, #0
   136d8:	strgt	r3, [fp, #-72]	; 0xffffffb8
   136dc:	bgt	137b4 <argp_parse@@Base+0x57c>
   136e0:	cmp	r0, r7
   136e4:	ble	139fc <argp_parse@@Base+0x7c4>
   136e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   136ec:	tst	r3, #4
   136f0:	bne	13c10 <argp_parse@@Base+0x9d8>
   136f4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   136f8:	ldr	sl, [r3, r7, lsl #2]
   136fc:	str	sl, [fp, #-136]	; 0xffffff78
   13700:	ldr	r8, [fp, #-112]	; 0xffffff90
   13704:	str	r7, [fp, #-84]	; 0xffffffac
   13708:	ldr	ip, [fp, #-108]	; 0xffffff94
   1370c:	cmp	r8, ip
   13710:	bcs	139f4 <argp_parse@@Base+0x7bc>
   13714:	mov	lr, r7
   13718:	add	r4, r8, #36	; 0x24
   1371c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13720:	mov	r0, #0
   13724:	add	r6, lr, #1
   13728:	sub	r2, fp, #96	; 0x60
   1372c:	mov	r1, sl
   13730:	sub	r5, r4, #36	; 0x24
   13734:	mov	r8, r4
   13738:	str	r6, [fp, #-84]	; 0xffffffac
   1373c:	cmp	r3, r0
   13740:	beq	139e0 <argp_parse@@Base+0x7a8>
   13744:	ldr	lr, [r4, #-24]	; 0xffffffe8
   13748:	ldr	ip, [r4, #-4]
   1374c:	str	ip, [fp, #-60]	; 0xffffffc4
   13750:	ldr	ip, [r4, #-12]
   13754:	str	ip, [fp, #-68]	; 0xffffffbc
   13758:	ldr	ip, [r4, #-8]
   1375c:	str	lr, [fp, #-76]	; 0xffffffb4
   13760:	str	ip, [fp, #-64]	; 0xffffffc0
   13764:	blx	r3
   13768:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1376c:	cmp	r0, #7
   13770:	str	r3, [r4, #-4]
   13774:	beq	13968 <argp_parse@@Base+0x730>
   13778:	cmp	r0, #0
   1377c:	bne	13ab0 <argp_parse@@Base+0x878>
   13780:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13784:	ldr	r3, [fp, #-84]	; 0xffffffac
   13788:	cmp	r7, r3
   1378c:	bge	13ac8 <argp_parse@@Base+0x890>
   13790:	ldr	r1, [r4, #-24]	; 0xffffffe8
   13794:	sub	ip, r3, r7
   13798:	mov	r7, r3
   1379c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   137a0:	add	r3, r1, ip
   137a4:	str	r3, [r4, #-24]	; 0xffffffe8
   137a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   137ac:	cmp	r3, #0
   137b0:	bne	136d0 <argp_parse@@Base+0x498>
   137b4:	cmp	r2, #0
   137b8:	beq	136e0 <argp_parse@@Base+0x4a8>
   137bc:	mvn	r2, #0
   137c0:	str	r7, [fp, #-148]	; 0xffffff6c
   137c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   137c8:	str	r2, [fp, #-140]	; 0xffffff74
   137cc:	ldr	r2, [fp, #-156]	; 0xffffff64
   137d0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   137d4:	ands	ip, r3, #64	; 0x40
   137d8:	ldr	r3, [fp, #-152]	; 0xffffff68
   137dc:	beq	13adc <argp_parse@@Base+0x8a4>
   137e0:	mov	ip, #0
   137e4:	sub	lr, fp, #148	; 0x94
   137e8:	stm	sp, {ip, lr}
   137ec:	bl	1430c <argp_parse@@Base+0x10d4>
   137f0:	ldr	r7, [fp, #-148]	; 0xffffff6c
   137f4:	mov	r4, r0
   137f8:	cmn	r4, #1
   137fc:	str	r7, [fp, #-84]	; 0xffffffac
   13800:	beq	13b00 <argp_parse@@Base+0x8c8>
   13804:	cmp	r4, #63	; 0x3f
   13808:	beq	13820 <argp_parse@@Base+0x5e8>
   1380c:	cmp	r4, #1
   13810:	bne	13da4 <argp_parse@@Base+0xb6c>
   13814:	sub	r7, r7, #1
   13818:	ldr	sl, [fp, #-136]	; 0xffffff78
   1381c:	b	13700 <argp_parse@@Base+0x4c8>
   13820:	ldr	r3, [fp, #-140]	; 0xffffff74
   13824:	cmn	r3, #1
   13828:	beq	13cdc <argp_parse@@Base+0xaa4>
   1382c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13830:	sub	r7, fp, #96	; 0x60
   13834:	mov	r0, r7
   13838:	mov	r2, #260	; 0x104
   1383c:	mov	r5, #7
   13840:	bl	181e4 <argp_state_help@@Base>
   13844:	ldr	r3, [fp, #-112]	; 0xffffff90
   13848:	ldr	ip, [fp, #-108]	; 0xffffff94
   1384c:	cmp	r3, ip
   13850:	mov	r4, r3
   13854:	bcs	14040 <argp_parse@@Base+0xe08>
   13858:	mov	r6, #5
   1385c:	movt	r6, #256	; 0x100
   13860:	ldr	r3, [r4]
   13864:	mov	r1, #0
   13868:	sub	r2, fp, #96	; 0x60
   1386c:	mov	r0, r6
   13870:	cmp	r3, r1
   13874:	beq	138a8 <argp_parse@@Base+0x670>
   13878:	ldr	lr, [r4, #12]
   1387c:	ldr	ip, [r4, #32]
   13880:	str	ip, [fp, #-60]	; 0xffffffc4
   13884:	ldr	ip, [r4, #24]
   13888:	str	ip, [fp, #-68]	; 0xffffffbc
   1388c:	ldr	ip, [r4, #28]
   13890:	str	lr, [fp, #-76]	; 0xffffffb4
   13894:	str	ip, [fp, #-64]	; 0xffffffc0
   13898:	blx	r3
   1389c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   138a0:	str	r3, [r4, #32]
   138a4:	ldr	ip, [fp, #-108]	; 0xffffff94
   138a8:	add	r4, r4, #36	; 0x24
   138ac:	cmp	r4, ip
   138b0:	bcc	13860 <argp_parse@@Base+0x628>
   138b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   138b8:	sub	r4, ip, #36	; 0x24
   138bc:	cmp	r4, r3
   138c0:	bcc	13920 <argp_parse@@Base+0x6e8>
   138c4:	mov	r7, #7
   138c8:	movt	r7, #256	; 0x100
   138cc:	ldr	r6, [r4]
   138d0:	mov	r1, #0
   138d4:	sub	r2, fp, #96	; 0x60
   138d8:	mov	r0, r7
   138dc:	cmp	r6, r1
   138e0:	beq	13914 <argp_parse@@Base+0x6dc>
   138e4:	ldr	ip, [r4, #12]
   138e8:	ldr	r3, [r4, #32]
   138ec:	str	r3, [fp, #-60]	; 0xffffffc4
   138f0:	ldr	r3, [r4, #24]
   138f4:	str	r3, [fp, #-68]	; 0xffffffbc
   138f8:	ldr	r3, [r4, #28]
   138fc:	str	ip, [fp, #-76]	; 0xffffffb4
   13900:	str	r3, [fp, #-64]	; 0xffffffc0
   13904:	blx	r6
   13908:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1390c:	str	r3, [r4, #32]
   13910:	ldr	r3, [fp, #-112]	; 0xffffff90
   13914:	sub	r4, r4, #36	; 0x24
   13918:	cmp	r4, r3
   1391c:	bcs	138cc <argp_parse@@Base+0x694>
   13920:	cmp	r5, #7
   13924:	moveq	r5, #22
   13928:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1392c:	bl	1421c <argp_parse@@Base+0xfe4>
   13930:	mov	r0, r5
   13934:	sub	sp, fp, #32
   13938:	ldrd	r4, [sp]
   1393c:	ldrd	r6, [sp, #8]
   13940:	ldrd	r8, [sp, #16]
   13944:	ldrd	sl, [sp, #24]
   13948:	add	sp, sp, #32
   1394c:	pop	{pc}		; (ldr pc, [sp], #4)
   13950:	ldr	lr, [fp, #-236]	; 0xffffff14
   13954:	add	r3, sl, #1
   13958:	mov	r2, #45	; 0x2d
   1395c:	str	r3, [fp, #-208]	; 0xffffff30
   13960:	strb	r2, [r6, lr]
   13964:	b	134d0 <argp_parse@@Base+0x298>
   13968:	ldr	lr, [fp, #-84]	; 0xffffffac
   1396c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13970:	sub	lr, lr, #1
   13974:	cmp	r3, #0
   13978:	str	lr, [fp, #-84]	; 0xffffffac
   1397c:	beq	1407c <argp_parse@@Base+0xe44>
   13980:	ldr	r6, [r5, #12]
   13984:	sub	r2, fp, #96	; 0x60
   13988:	mov	r1, #0
   1398c:	mov	r0, r9
   13990:	ldr	ip, [r5, #24]
   13994:	ldr	lr, [r5, #32]
   13998:	str	ip, [fp, #-68]	; 0xffffffbc
   1399c:	ldr	ip, [r5, #28]
   139a0:	str	r6, [fp, #-76]	; 0xffffffb4
   139a4:	str	ip, [fp, #-64]	; 0xffffffc0
   139a8:	str	lr, [fp, #-60]	; 0xffffffc4
   139ac:	blx	r3
   139b0:	ldr	ip, [fp, #-108]	; 0xffffff94
   139b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   139b8:	cmp	ip, r4
   139bc:	movls	r2, #0
   139c0:	movhi	r2, #1
   139c4:	cmp	r0, #7
   139c8:	str	r3, [r5, #32]
   139cc:	movne	r2, #0
   139d0:	cmp	r2, #0
   139d4:	beq	14084 <argp_parse@@Base+0xe4c>
   139d8:	ldr	lr, [fp, #-84]	; 0xffffffac
   139dc:	b	13718 <argp_parse@@Base+0x4e0>
   139e0:	str	lr, [fp, #-84]	; 0xffffffac
   139e4:	add	r3, r4, #36	; 0x24
   139e8:	cmp	ip, r4
   139ec:	mov	r4, r3
   139f0:	bhi	1371c <argp_parse@@Base+0x4e4>
   139f4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   139f8:	ldr	r7, [fp, #-84]	; 0xffffffac
   139fc:	cmp	r7, r0
   13a00:	bne	13c10 <argp_parse@@Base+0x9d8>
   13a04:	ldr	r4, [fp, #-112]	; 0xffffff90
   13a08:	ldr	ip, [fp, #-108]	; 0xffffff94
   13a0c:	mov	r3, r4
   13a10:	cmp	r4, ip
   13a14:	bcs	14050 <argp_parse@@Base+0xe18>
   13a18:	mov	r6, #2
   13a1c:	movt	r6, #256	; 0x100
   13a20:	mov	r5, #0
   13a24:	b	13a6c <argp_parse@@Base+0x834>
   13a28:	ldr	ip, [r4, #-4]
   13a2c:	str	ip, [fp, #-60]	; 0xffffffc4
   13a30:	ldr	ip, [r4, #-12]
   13a34:	str	ip, [fp, #-68]	; 0xffffffbc
   13a38:	ldr	ip, [r4, #-8]
   13a3c:	str	r3, [fp, #-76]	; 0xffffffb4
   13a40:	str	ip, [fp, #-64]	; 0xffffffc0
   13a44:	blx	r5
   13a48:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13a4c:	mov	r5, r0
   13a50:	str	r3, [r4, #-4]
   13a54:	ldr	ip, [fp, #-108]	; 0xffffff94
   13a58:	cmp	ip, r4
   13a5c:	bls	13f24 <argp_parse@@Base+0xcec>
   13a60:	cmp	r5, #7
   13a64:	cmpne	r5, #0
   13a68:	bne	13eec <argp_parse@@Base+0xcb4>
   13a6c:	ldr	r3, [r4, #12]
   13a70:	sub	r2, fp, #96	; 0x60
   13a74:	mov	r0, r6
   13a78:	add	r4, r4, #36	; 0x24
   13a7c:	subs	r1, r3, #0
   13a80:	bne	13a58 <argp_parse@@Base+0x820>
   13a84:	ldr	r5, [r4, #-36]	; 0xffffffdc
   13a88:	cmp	r5, #0
   13a8c:	bne	13a28 <argp_parse@@Base+0x7f0>
   13a90:	cmp	r4, ip
   13a94:	mov	r5, #7
   13a98:	bcc	13a6c <argp_parse@@Base+0x834>
   13a9c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13aa0:	sub	r4, ip, #36	; 0x24
   13aa4:	cmp	r4, r3
   13aa8:	bcs	13f40 <argp_parse@@Base+0xd08>
   13aac:	b	13fc4 <argp_parse@@Base+0xd8c>
   13ab0:	mov	r5, r0
   13ab4:	cmp	r5, #7
   13ab8:	bne	13844 <argp_parse@@Base+0x60c>
   13abc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ac0:	sub	r7, fp, #96	; 0x60
   13ac4:	b	13834 <argp_parse@@Base+0x5fc>
   13ac8:	mov	r1, #1
   13acc:	mov	r7, r3
   13ad0:	mov	r2, r1
   13ad4:	str	r1, [fp, #-100]	; 0xffffff9c
   13ad8:	b	136c4 <argp_parse@@Base+0x48c>
   13adc:	str	ip, [sp]
   13ae0:	sub	ip, fp, #148	; 0x94
   13ae4:	str	ip, [sp, #4]
   13ae8:	bl	142a4 <argp_parse@@Base+0x106c>
   13aec:	ldr	r7, [fp, #-148]	; 0xffffff6c
   13af0:	mov	r4, r0
   13af4:	cmn	r4, #1
   13af8:	str	r7, [fp, #-84]	; 0xffffffac
   13afc:	bne	13804 <argp_parse@@Base+0x5cc>
   13b00:	mov	r3, #0
   13b04:	cmp	r7, #1
   13b08:	str	r3, [fp, #-100]	; 0xffffff9c
   13b0c:	ble	13be4 <argp_parse@@Base+0x9ac>
   13b10:	sub	r3, r7, #-1073741823	; 0xc0000001
   13b14:	ldr	r1, [fp, #-232]	; 0xffffff18
   13b18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13b1c:	ldr	r0, [r2, r3, lsl #2]
   13b20:	bl	11210 <strcmp@plt>
   13b24:	cmp	r0, #0
   13b28:	bne	13be4 <argp_parse@@Base+0x9ac>
   13b2c:	str	r7, [fp, #-72]	; 0xffffffb8
   13b30:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13b34:	b	136e0 <argp_parse@@Base+0x4a8>
   13b38:	ldr	r2, [fp, #-244]	; 0xffffff0c
   13b3c:	movw	r3, #45800	; 0xb2e8
   13b40:	movt	r3, #2
   13b44:	mov	r0, #1
   13b48:	tst	r5, #2
   13b4c:	ldr	r1, [r3]
   13b50:	movw	r3, #45804	; 0xb2ec
   13b54:	movt	r3, #2
   13b58:	str	r0, [fp, #-100]	; 0xffffff9c
   13b5c:	mov	r0, #0
   13b60:	ldr	ip, [fp, #-232]	; 0xffffff18
   13b64:	str	r7, [fp, #-96]	; 0xffffffa0
   13b68:	str	r2, [fp, #-92]	; 0xffffffa4
   13b6c:	ldr	r2, [r3]
   13b70:	ldr	r3, [fp, #-112]	; 0xffffff90
   13b74:	str	r1, [fp, #-52]	; 0xffffffcc
   13b78:	mov	r1, #0
   13b7c:	str	r2, [fp, #-48]	; 0xffffffd0
   13b80:	str	r3, [fp, #-108]	; 0xffffff94
   13b84:	sub	r3, fp, #160	; 0xa0
   13b88:	str	ip, [fp, #-88]	; 0xffffffa8
   13b8c:	str	r7, [fp, #-84]	; 0xffffffac
   13b90:	str	r5, [fp, #-80]	; 0xffffffb0
   13b94:	strd	r0, [fp, #-76]	; 0xffffffb4
   13b98:	strd	r0, [fp, #-68]	; 0xffffffbc
   13b9c:	strd	r0, [fp, #-60]	; 0xffffffc4
   13ba0:	str	r3, [fp, #-44]	; 0xffffffd4
   13ba4:	mov	r3, ip
   13ba8:	bne	13668 <argp_parse@@Base+0x430>
   13bac:	mov	r2, #1
   13bb0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13bb4:	str	r2, [fp, #-144]	; 0xffffff70
   13bb8:	ldr	r2, [fp, #-232]	; 0xffffff18
   13bbc:	cmp	r2, r3
   13bc0:	bne	13694 <argp_parse@@Base+0x45c>
   13bc4:	ldr	r0, [r2]
   13bc8:	cmp	r0, #0
   13bcc:	beq	13694 <argp_parse@@Base+0x45c>
   13bd0:	bl	14164 <argp_parse@@Base+0xf2c>
   13bd4:	str	r0, [fp, #-56]	; 0xffffffc8
   13bd8:	b	136a4 <argp_parse@@Base+0x46c>
   13bdc:	mov	r5, r0
   13be0:	b	13930 <argp_parse@@Base+0x6f8>
   13be4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13be8:	b	136e0 <argp_parse@@Base+0x4a8>
   13bec:	cmp	r0, #7
   13bf0:	mov	r5, r0
   13bf4:	str	r8, [fp, #-232]	; 0xffffff18
   13bf8:	beq	13658 <argp_parse@@Base+0x420>
   13bfc:	cmp	r0, #0
   13c00:	bne	13930 <argp_parse@@Base+0x6f8>
   13c04:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13c08:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13c0c:	b	13660 <argp_parse@@Base+0x428>
   13c10:	ldr	r3, [fp, #4]
   13c14:	cmp	r3, #0
   13c18:	beq	13d58 <argp_parse@@Base+0xb20>
   13c1c:	str	r7, [r3]
   13c20:	ldr	r3, [fp, #-112]	; 0xffffff90
   13c24:	ldr	ip, [fp, #-108]	; 0xffffff94
   13c28:	sub	r2, ip, #36	; 0x24
   13c2c:	cmp	r3, r2
   13c30:	movls	r6, #4
   13c34:	subls	r4, ip, #72	; 0x48
   13c38:	movtls	r6, #256	; 0x100
   13c3c:	bhi	13e6c <argp_parse@@Base+0xc34>
   13c40:	ldr	r5, [r4, #36]	; 0x24
   13c44:	mov	r1, #0
   13c48:	sub	r2, fp, #96	; 0x60
   13c4c:	mov	r0, r6
   13c50:	cmp	r5, r1
   13c54:	beq	13d90 <argp_parse@@Base+0xb58>
   13c58:	ldr	ip, [r4, #48]	; 0x30
   13c5c:	ldr	r3, [r4, #68]	; 0x44
   13c60:	str	r3, [fp, #-60]	; 0xffffffc4
   13c64:	ldr	r3, [r4, #60]	; 0x3c
   13c68:	str	r3, [fp, #-68]	; 0xffffffbc
   13c6c:	ldr	r3, [r4, #64]	; 0x40
   13c70:	str	ip, [fp, #-76]	; 0xffffffb4
   13c74:	str	r3, [fp, #-64]	; 0xffffffc0
   13c78:	blx	r5
   13c7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c80:	str	r3, [r4, #68]	; 0x44
   13c84:	ldr	r3, [fp, #-112]	; 0xffffff90
   13c88:	cmp	r3, r4
   13c8c:	sub	r4, r4, #36	; 0x24
   13c90:	bhi	13e4c <argp_parse@@Base+0xc14>
   13c94:	cmp	r0, #7
   13c98:	cmpne	r0, #0
   13c9c:	beq	13c40 <argp_parse@@Base+0xa08>
   13ca0:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ca4:	mov	r5, r0
   13ca8:	sub	r4, ip, #36	; 0x24
   13cac:	cmp	r4, r3
   13cb0:	bcs	138c4 <argp_parse@@Base+0x68c>
   13cb4:	b	13928 <argp_parse@@Base+0x6f0>
   13cb8:	ldr	r2, [fp, #-232]	; 0xffffff18
   13cbc:	ldr	r2, [r2]
   13cc0:	str	r2, [r3]
   13cc4:	b	13280 <argp_parse@@Base+0x48>
   13cc8:	ldr	r3, [fp, #-232]	; 0xffffff18
   13ccc:	ldr	r0, [r3]
   13cd0:	bl	14164 <argp_parse@@Base+0xf2c>
   13cd4:	str	r0, [r4]
   13cd8:	b	13294 <argp_parse@@Base+0x5c>
   13cdc:	mov	r1, r4
   13ce0:	ldr	r0, [fp, #-156]	; 0xffffff64
   13ce4:	bl	113c0 <strchr@plt>
   13ce8:	cmp	r0, #0
   13cec:	beq	13d28 <argp_parse@@Base+0xaf0>
   13cf0:	ldr	r5, [fp, #-112]	; 0xffffff90
   13cf4:	ldr	r2, [fp, #-108]	; 0xffffff94
   13cf8:	cmp	r5, r2
   13cfc:	bcs	13d28 <argp_parse@@Base+0xaf0>
   13d00:	ldr	r3, [r5, #8]
   13d04:	cmp	r3, r0
   13d08:	bls	13d1c <argp_parse@@Base+0xae4>
   13d0c:	b	13fe0 <argp_parse@@Base+0xda8>
   13d10:	ldr	r3, [r5, #8]
   13d14:	cmp	r0, r3
   13d18:	bcc	13fe0 <argp_parse@@Base+0xda8>
   13d1c:	add	r5, r5, #36	; 0x24
   13d20:	cmp	r5, r2
   13d24:	bcc	13d10 <argp_parse@@Base+0xad8>
   13d28:	sub	r7, fp, #96	; 0x60
   13d2c:	mov	r2, r4
   13d30:	add	r4, r4, #1
   13d34:	ldr	r3, [pc, #888]	; 140b4 <argp_parse@@Base+0xe7c>
   13d38:	movw	r1, #40460	; 0x9e0c
   13d3c:	movt	r1, #1
   13d40:	mov	r0, r7
   13d44:	bic	r4, r4, #2
   13d48:	bl	182a4 <argp_error@@Base>
   13d4c:	cmp	r4, #0
   13d50:	bne	13d88 <argp_parse@@Base+0xb50>
   13d54:	b	139f4 <argp_parse@@Base+0x7bc>
   13d58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13d5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13d60:	tst	r3, #2
   13d64:	bne	13ac0 <argp_parse@@Base+0x888>
   13d68:	cmp	r1, #0
   13d6c:	beq	13ac0 <argp_parse@@Base+0x888>
   13d70:	mov	r0, r1
   13d74:	movw	r1, #40480	; 0x9e20
   13d78:	movt	r1, #1
   13d7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13d80:	sub	r7, fp, #96	; 0x60
   13d84:	bl	113cc <fprintf@plt>
   13d88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13d8c:	b	13834 <argp_parse@@Base+0x5fc>
   13d90:	cmp	r4, r3
   13d94:	sub	r4, r4, #36	; 0x24
   13d98:	bcs	13c40 <argp_parse@@Base+0xa08>
   13d9c:	mov	r5, #7
   13da0:	b	13e50 <argp_parse@@Base+0xc18>
   13da4:	asrs	r8, r4, #24
   13da8:	beq	13cdc <argp_parse@@Base+0xaa4>
   13dac:	add	r3, r8, r8, lsl #3
   13db0:	ldr	r5, [fp, #-112]	; 0xffffff90
   13db4:	ands	r2, r4, #8388608	; 0x800000
   13db8:	movne	r2, #-16777216	; 0xff000000
   13dbc:	bic	r0, r4, #-16777216	; 0xff000000
   13dc0:	lsl	r3, r3, #2
   13dc4:	orr	r0, r0, r2
   13dc8:	sub	r3, r3, #36	; 0x24
   13dcc:	ldr	r6, [r5, r3]
   13dd0:	add	r5, r5, r3
   13dd4:	cmp	r6, #0
   13dd8:	beq	14048 <argp_parse@@Base+0xe10>
   13ddc:	add	r1, r5, #24
   13de0:	ldr	lr, [r5, #12]
   13de4:	sub	r7, fp, #96	; 0x60
   13de8:	ldm	r1, {r1, r3, ip}
   13dec:	mov	r2, r7
   13df0:	str	lr, [fp, #-76]	; 0xffffffb4
   13df4:	str	r1, [fp, #-68]	; 0xffffffbc
   13df8:	str	r3, [fp, #-64]	; 0xffffffc0
   13dfc:	str	ip, [fp, #-60]	; 0xffffffc4
   13e00:	ldr	r1, [fp, #-136]	; 0xffffff78
   13e04:	blx	r6
   13e08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13e0c:	str	r3, [r5, #32]
   13e10:	cmp	r0, #7
   13e14:	beq	13e74 <argp_parse@@Base+0xc3c>
   13e18:	cmp	r0, #0
   13e1c:	bne	13ab0 <argp_parse@@Base+0x878>
   13e20:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13e24:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13e28:	ldr	r7, [fp, #-84]	; 0xffffffac
   13e2c:	b	136c4 <argp_parse@@Base+0x48c>
   13e30:	movw	r2, #48236	; 0xbc6c
   13e34:	movt	r2, #2
   13e38:	ldr	r2, [r2]
   13e3c:	cmp	r2, #0
   13e40:	addeq	r2, r3, #16
   13e44:	bne	13368 <argp_parse@@Base+0x130>
   13e48:	b	13374 <argp_parse@@Base+0x13c>
   13e4c:	mov	r5, r0
   13e50:	ldr	ip, [fp, #-108]	; 0xffffff94
   13e54:	cmp	r5, #7
   13e58:	sub	r4, ip, #36	; 0x24
   13e5c:	bne	13cac <argp_parse@@Base+0xa74>
   13e60:	cmp	r4, r3
   13e64:	movcs	r5, #0
   13e68:	bcs	138c4 <argp_parse@@Base+0x68c>
   13e6c:	mov	r5, #0
   13e70:	b	13928 <argp_parse@@Base+0x6f0>
   13e74:	cmp	r8, #0
   13e78:	beq	13d2c <argp_parse@@Base+0xaf4>
   13e7c:	ldr	r3, [fp, #-152]	; 0xffffff68
   13e80:	ldr	r2, [r3]
   13e84:	ldr	r1, [r3, #12]
   13e88:	cmp	r4, r1
   13e8c:	bne	13ea8 <argp_parse@@Base+0xc70>
   13e90:	b	13ed8 <argp_parse@@Base+0xca0>
   13e94:	add	r3, r3, #16
   13e98:	ldr	r2, [r3]
   13e9c:	ldr	r1, [r3, #12]
   13ea0:	cmp	r4, r1
   13ea4:	beq	13ed8 <argp_parse@@Base+0xca0>
   13ea8:	cmp	r2, #0
   13eac:	bne	13e94 <argp_parse@@Base+0xc5c>
   13eb0:	movw	r2, #40452	; 0x9e04
   13eb4:	movt	r2, #1
   13eb8:	movw	r1, #40468	; 0x9e14
   13ebc:	movt	r1, #1
   13ec0:	ldr	r3, [pc, #492]	; 140b4 <argp_parse@@Base+0xe7c>
   13ec4:	mov	r0, r7
   13ec8:	add	r4, r4, #1
   13ecc:	bl	182a4 <argp_error@@Base>
   13ed0:	bic	r4, r4, #2
   13ed4:	b	13d4c <argp_parse@@Base+0xb14>
   13ed8:	movw	r3, #40452	; 0x9e04
   13edc:	movt	r3, #1
   13ee0:	cmp	r2, #0
   13ee4:	moveq	r2, r3
   13ee8:	b	13eb8 <argp_parse@@Base+0xc80>
   13eec:	ldr	r3, [fp, #-112]	; 0xffffff90
   13ef0:	sub	r2, ip, #36	; 0x24
   13ef4:	cmp	r3, r2
   13ef8:	bhi	1406c <argp_parse@@Base+0xe34>
   13efc:	ldr	r2, [fp, #4]
   13f00:	cmp	r2, #0
   13f04:	beq	13f14 <argp_parse@@Base+0xcdc>
   13f08:	ldr	r2, [fp, #-84]	; 0xffffffac
   13f0c:	ldr	r1, [fp, #4]
   13f10:	str	r2, [r1]
   13f14:	cmp	r5, #0
   13f18:	bne	13ab4 <argp_parse@@Base+0x87c>
   13f1c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13f20:	b	13c28 <argp_parse@@Base+0x9f0>
   13f24:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f28:	sub	r4, ip, #36	; 0x24
   13f2c:	cmp	r4, r3
   13f30:	bcc	14034 <argp_parse@@Base+0xdfc>
   13f34:	cmp	r5, #7
   13f38:	cmpne	r5, #0
   13f3c:	bne	13efc <argp_parse@@Base+0xcc4>
   13f40:	mov	r6, #1
   13f44:	movt	r6, #256	; 0x100
   13f48:	sub	r4, r4, #36	; 0x24
   13f4c:	ldr	r5, [r4, #36]	; 0x24
   13f50:	mov	r1, #0
   13f54:	sub	r2, fp, #96	; 0x60
   13f58:	mov	r0, r6
   13f5c:	cmp	r5, r1
   13f60:	beq	13fb4 <argp_parse@@Base+0xd7c>
   13f64:	ldr	ip, [r4, #48]	; 0x30
   13f68:	ldr	r3, [r4, #68]	; 0x44
   13f6c:	str	r3, [fp, #-60]	; 0xffffffc4
   13f70:	ldr	r3, [r4, #60]	; 0x3c
   13f74:	str	r3, [fp, #-68]	; 0xffffffbc
   13f78:	ldr	r3, [r4, #64]	; 0x40
   13f7c:	str	ip, [fp, #-76]	; 0xffffffb4
   13f80:	str	r3, [fp, #-64]	; 0xffffffc0
   13f84:	blx	r5
   13f88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13f8c:	str	r3, [r4, #68]	; 0x44
   13f90:	ldr	r3, [fp, #-112]	; 0xffffff90
   13f94:	cmp	r3, r4
   13f98:	sub	r4, r4, #36	; 0x24
   13f9c:	bhi	14030 <argp_parse@@Base+0xdf8>
   13fa0:	cmp	r0, #7
   13fa4:	cmpne	r0, #0
   13fa8:	beq	13f4c <argp_parse@@Base+0xd14>
   13fac:	mov	r5, r0
   13fb0:	b	13efc <argp_parse@@Base+0xcc4>
   13fb4:	cmp	r3, r4
   13fb8:	sub	r4, r4, #36	; 0x24
   13fbc:	bls	13f4c <argp_parse@@Base+0xd14>
   13fc0:	ldr	ip, [fp, #-108]	; 0xffffff94
   13fc4:	ldr	r2, [fp, #4]
   13fc8:	cmp	r2, #0
   13fcc:	beq	13c28 <argp_parse@@Base+0x9f0>
   13fd0:	ldr	r2, [fp, #-84]	; 0xffffffac
   13fd4:	ldr	r1, [fp, #4]
   13fd8:	str	r2, [r1]
   13fdc:	b	13c28 <argp_parse@@Base+0x9f0>
   13fe0:	ldr	r3, [r5]
   13fe4:	cmp	r3, #0
   13fe8:	beq	13d28 <argp_parse@@Base+0xaf0>
   13fec:	ldr	r6, [r5, #12]
   13ff0:	sub	r7, fp, #96	; 0x60
   13ff4:	mov	r0, r4
   13ff8:	mov	r2, r7
   13ffc:	mov	r8, #0
   14000:	ldr	ip, [r5, #24]
   14004:	ldr	r1, [r5, #28]
   14008:	ldr	lr, [r5, #32]
   1400c:	str	r6, [fp, #-76]	; 0xffffffb4
   14010:	str	ip, [fp, #-68]	; 0xffffffbc
   14014:	str	r1, [fp, #-64]	; 0xffffffc0
   14018:	ldr	r1, [fp, #-136]	; 0xffffff78
   1401c:	str	lr, [fp, #-60]	; 0xffffffc4
   14020:	blx	r3
   14024:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14028:	str	r3, [r5, #32]
   1402c:	b	13e10 <argp_parse@@Base+0xbd8>
   14030:	mov	r5, r0
   14034:	cmp	r5, #7
   14038:	beq	13fc0 <argp_parse@@Base+0xd88>
   1403c:	b	13efc <argp_parse@@Base+0xcc4>
   14040:	sub	r4, ip, #36	; 0x24
   14044:	b	138bc <argp_parse@@Base+0x684>
   14048:	sub	r7, fp, #96	; 0x60
   1404c:	b	13e7c <argp_parse@@Base+0xc44>
   14050:	sub	r4, ip, #36	; 0x24
   14054:	cmp	r3, r4
   14058:	bls	13f40 <argp_parse@@Base+0xd08>
   1405c:	ldr	r2, [fp, #4]
   14060:	cmp	r2, #0
   14064:	bne	13fd0 <argp_parse@@Base+0xd98>
   14068:	b	13e6c <argp_parse@@Base+0xc34>
   1406c:	ldr	r2, [fp, #4]
   14070:	cmp	r2, #0
   14074:	bne	13f08 <argp_parse@@Base+0xcd0>
   14078:	b	1384c <argp_parse@@Base+0x614>
   1407c:	ldr	ip, [fp, #-108]	; 0xffffff94
   14080:	b	139e4 <argp_parse@@Base+0x7ac>
   14084:	cmp	r0, #0
   14088:	beq	140a0 <argp_parse@@Base+0xe68>
   1408c:	cmp	r0, #7
   14090:	mov	r5, r0
   14094:	ldrne	r3, [fp, #-112]	; 0xffffff90
   14098:	beq	139f4 <argp_parse@@Base+0x7bc>
   1409c:	b	1384c <argp_parse@@Base+0x614>
   140a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140a4:	mov	r0, r3
   140a8:	str	r3, [fp, #-84]	; 0xffffffac
   140ac:	b	13788 <argp_parse@@Base+0x550>
   140b0:	ldrdeq	r9, [r1], -ip
   140b4:	strdeq	r9, [r1], -r8
   140b8:	cmp	r1, #0
   140bc:	beq	140fc <argp_parse@@Base+0xec4>
   140c0:	ldr	r2, [r1, #52]	; 0x34
   140c4:	ldr	r3, [r2, #48]	; 0x30
   140c8:	ldr	r1, [r2, #52]	; 0x34
   140cc:	cmp	r3, r1
   140d0:	bcs	140fc <argp_parse@@Base+0xec4>
   140d4:	ldr	r2, [r3, #4]
   140d8:	cmp	r0, r2
   140dc:	bne	140f0 <argp_parse@@Base+0xeb8>
   140e0:	b	14104 <argp_parse@@Base+0xecc>
   140e4:	ldr	r2, [r3, #4]
   140e8:	cmp	r2, r0
   140ec:	beq	14104 <argp_parse@@Base+0xecc>
   140f0:	add	r3, r3, #36	; 0x24
   140f4:	cmp	r3, r1
   140f8:	bcc	140e4 <argp_parse@@Base+0xeac>
   140fc:	mov	r0, #0
   14100:	bx	lr
   14104:	ldr	r0, [r3, #24]
   14108:	bx	lr
   1410c:	movw	r1, #48240	; 0xbc70
   14110:	movt	r1, #2
   14114:	push	{lr}		; (str lr, [sp, #-4]!)
   14118:	ldm	r1, {r1, ip}
   1411c:	sub	sp, sp, #12
   14120:	movw	r3, #40712	; 0x9f08
   14124:	movt	r3, #1
   14128:	movw	r2, #40728	; 0x9f18
   1412c:	movt	r2, #1
   14130:	str	ip, [sp]
   14134:	bl	14748 <argp_parse@@Base+0x1510>
   14138:	add	sp, sp, #12
   1413c:	pop	{pc}		; (ldr pc, [sp], #4)
   14140:	movw	r2, #48236	; 0xbc6c
   14144:	movt	r2, #2
   14148:	movw	ip, #16652	; 0x410c
   1414c:	movt	ip, #1
   14150:	movw	r3, #48240	; 0xbc70
   14154:	movt	r3, #2
   14158:	str	ip, [r2]
   1415c:	strd	r0, [r3]
   14160:	bx	lr
   14164:	ldrb	r3, [r0]
   14168:	cmp	r3, #47	; 0x2f
   1416c:	bne	1417c <argp_parse@@Base+0xf44>
   14170:	ldrb	r3, [r0, #1]!
   14174:	cmp	r3, #47	; 0x2f
   14178:	beq	14170 <argp_parse@@Base+0xf38>
   1417c:	cmp	r3, #0
   14180:	beq	141b0 <argp_parse@@Base+0xf78>
   14184:	mov	r2, r0
   14188:	mov	r1, #0
   1418c:	cmp	r3, #47	; 0x2f
   14190:	moveq	r1, #1
   14194:	beq	141a4 <argp_parse@@Base+0xf6c>
   14198:	cmp	r1, #0
   1419c:	movne	r0, r2
   141a0:	movne	r1, #0
   141a4:	ldrb	r3, [r2, #1]!
   141a8:	cmp	r3, #0
   141ac:	bne	1418c <argp_parse@@Base+0xf54>
   141b0:	bx	lr
   141b4:	str	r4, [sp, #-8]!
   141b8:	mov	r4, r0
   141bc:	str	lr, [sp, #4]
   141c0:	bl	113b4 <strlen@plt>
   141c4:	cmp	r0, #1
   141c8:	bls	141ec <argp_parse@@Base+0xfb4>
   141cc:	add	r2, r4, r0
   141d0:	mov	r3, r0
   141d4:	ldrb	r2, [r2, #-1]
   141d8:	cmp	r2, #47	; 0x2f
   141dc:	subeq	r3, r0, #2
   141e0:	rsbeq	r1, r4, #1
   141e4:	addeq	r3, r4, r3
   141e8:	beq	141f8 <argp_parse@@Base+0xfc0>
   141ec:	ldr	r4, [sp]
   141f0:	add	sp, sp, #4
   141f4:	pop	{pc}		; (ldr pc, [sp], #4)
   141f8:	cmp	r3, r4
   141fc:	add	r0, r1, r3
   14200:	beq	141ec <argp_parse@@Base+0xfb4>
   14204:	ldrb	r2, [r3], #-1
   14208:	cmp	r2, #47	; 0x2f
   1420c:	beq	141f8 <argp_parse@@Base+0xfc0>
   14210:	ldr	r4, [sp]
   14214:	add	sp, sp, #4
   14218:	pop	{pc}		; (ldr pc, [sp], #4)
   1421c:	strd	r4, [sp, #-12]!
   14220:	mov	r5, r0
   14224:	str	lr, [sp, #8]
   14228:	sub	sp, sp, #12
   1422c:	bl	113d8 <__errno_location@plt>
   14230:	mov	r4, r0
   14234:	mov	r2, #0
   14238:	ldr	r3, [r4]
   1423c:	mov	r0, r5
   14240:	str	r2, [r4]
   14244:	str	r3, [sp]
   14248:	str	r3, [sp, #4]
   1424c:	bl	11264 <free@plt>
   14250:	ldr	r3, [r4]
   14254:	add	r2, sp, #8
   14258:	clz	r3, r3
   1425c:	lsr	r3, r3, #5
   14260:	add	r3, r2, r3, lsl #2
   14264:	ldr	r3, [r3, #-8]
   14268:	str	r3, [r4]
   1426c:	add	sp, sp, #12
   14270:	ldrd	r4, [sp]
   14274:	add	sp, sp, #8
   14278:	pop	{pc}		; (ldr pc, [sp], #4)
   1427c:	push	{lr}		; (str lr, [sp, #-4]!)
   14280:	sub	sp, sp, #20
   14284:	mov	ip, #0
   14288:	ldr	lr, [sp, #24]
   1428c:	str	lr, [sp]
   14290:	str	ip, [sp, #4]
   14294:	str	ip, [sp, #8]
   14298:	bl	18fbc <argp_error@@Base+0xd18>
   1429c:	add	sp, sp, #20
   142a0:	pop	{pc}		; (ldr pc, [sp], #4)
   142a4:	str	r4, [sp, #-8]!
   142a8:	mov	ip, #0
   142ac:	str	lr, [sp, #4]
   142b0:	sub	sp, sp, #16
   142b4:	ldr	r4, [sp, #24]
   142b8:	str	ip, [sp, #12]
   142bc:	ldr	lr, [sp, #28]
   142c0:	stm	sp, {r4, ip, lr}
   142c4:	bl	18a24 <argp_error@@Base+0x780>
   142c8:	add	sp, sp, #16
   142cc:	ldr	r4, [sp]
   142d0:	add	sp, sp, #4
   142d4:	pop	{pc}		; (ldr pc, [sp], #4)
   142d8:	str	r4, [sp, #-8]!
   142dc:	mov	r4, #1
   142e0:	str	lr, [sp, #4]
   142e4:	sub	sp, sp, #16
   142e8:	mov	lr, #0
   142ec:	ldr	ip, [sp, #24]
   142f0:	str	ip, [sp]
   142f4:	stmib	sp, {r4, lr}
   142f8:	bl	18fbc <argp_error@@Base+0xd18>
   142fc:	add	sp, sp, #16
   14300:	ldr	r4, [sp]
   14304:	add	sp, sp, #4
   14308:	pop	{pc}		; (ldr pc, [sp], #4)
   1430c:	strd	r4, [sp, #-12]!
   14310:	mov	r4, #0
   14314:	mov	r5, #1
   14318:	str	lr, [sp, #8]
   1431c:	sub	sp, sp, #20
   14320:	ldr	lr, [sp, #32]
   14324:	ldr	ip, [sp, #36]	; 0x24
   14328:	str	lr, [sp]
   1432c:	str	r4, [sp, #12]
   14330:	stmib	sp, {r5, ip}
   14334:	bl	18a24 <argp_error@@Base+0x780>
   14338:	add	sp, sp, #20
   1433c:	ldrd	r4, [sp]
   14340:	add	sp, sp, #8
   14344:	pop	{pc}		; (ldr pc, [sp], #4)
   14348:	push	{r1, r2, r3}
   1434c:	push	{lr}		; (str lr, [sp, #-4]!)
   14350:	sub	sp, sp, #8
   14354:	ldr	r1, [sp, #12]
   14358:	add	r3, sp, #16
   1435c:	ldr	r2, [sp, #16]
   14360:	str	r3, [sp, #4]
   14364:	bl	1130c <ioctl@plt>
   14368:	add	sp, sp, #8
   1436c:	pop	{lr}		; (ldr lr, [sp], #4)
   14370:	add	sp, sp, #12
   14374:	bx	lr
   14378:	strd	r4, [sp, #-16]!
   1437c:	subs	r4, r0, #0
   14380:	str	r6, [sp, #8]
   14384:	str	lr, [sp, #12]
   14388:	beq	14420 <argp_parse@@Base+0x11e8>
   1438c:	mov	r1, #47	; 0x2f
   14390:	bl	11474 <strrchr@plt>
   14394:	subs	r5, r0, #0
   14398:	beq	143f8 <argp_parse@@Base+0x11c0>
   1439c:	add	r6, r5, #1
   143a0:	sub	r3, r6, r4
   143a4:	cmp	r3, #6
   143a8:	ble	143f8 <argp_parse@@Base+0x11c0>
   143ac:	movw	r1, #40800	; 0x9f60
   143b0:	movt	r1, #1
   143b4:	mov	r2, #7
   143b8:	sub	r0, r5, #6
   143bc:	bl	1151c <strncmp@plt>
   143c0:	cmp	r0, #0
   143c4:	bne	143f8 <argp_parse@@Base+0x11c0>
   143c8:	movw	r1, #40808	; 0x9f68
   143cc:	movt	r1, #1
   143d0:	mov	r2, #3
   143d4:	mov	r0, r6
   143d8:	bl	1151c <strncmp@plt>
   143dc:	cmp	r0, #0
   143e0:	movne	r4, r6
   143e4:	bne	143f8 <argp_parse@@Base+0x11c0>
   143e8:	add	r4, r5, #4
   143ec:	movw	r3, #45792	; 0xb2e0
   143f0:	movt	r3, #2
   143f4:	str	r4, [r3]
   143f8:	movw	r2, #48248	; 0xbc78
   143fc:	movt	r2, #2
   14400:	ldr	r6, [sp, #8]
   14404:	movw	r3, #45796	; 0xb2e4
   14408:	movt	r3, #2
   1440c:	str	r4, [r2]
   14410:	str	r4, [r3]
   14414:	ldrd	r4, [sp]
   14418:	add	sp, sp, #12
   1441c:	pop	{pc}		; (ldr pc, [sp], #4)
   14420:	movw	r3, #45800	; 0xb2e8
   14424:	movt	r3, #2
   14428:	movw	r0, #40744	; 0x9f28
   1442c:	movt	r0, #1
   14430:	ldr	r3, [r3]
   14434:	mov	r2, #55	; 0x37
   14438:	mov	r1, #1
   1443c:	bl	11300 <fwrite@plt>
   14440:	bl	11528 <abort@plt>
   14444:	cmp	r1, #0
   14448:	strd	r4, [sp, #-16]!
   1444c:	mov	r4, r0
   14450:	str	r6, [sp, #8]
   14454:	str	lr, [sp, #12]
   14458:	sub	sp, sp, #32
   1445c:	ldr	r5, [sp, #48]	; 0x30
   14460:	ldr	r6, [sp, #52]	; 0x34
   14464:	beq	14568 <argp_parse@@Base+0x1330>
   14468:	mov	ip, r3
   1446c:	mov	r3, r2
   14470:	mov	r2, r1
   14474:	movw	r1, #40812	; 0x9f6c
   14478:	movt	r1, #1
   1447c:	str	ip, [sp]
   14480:	bl	113cc <fprintf@plt>
   14484:	movw	r3, #2022	; 0x7e6
   14488:	movw	r2, #40832	; 0x9f80
   1448c:	movt	r2, #1
   14490:	movw	r1, #41600	; 0xa280
   14494:	movt	r1, #1
   14498:	mov	r0, r4
   1449c:	bl	113cc <fprintf@plt>
   144a0:	mov	r1, r4
   144a4:	mov	r0, #10
   144a8:	bl	11498 <fputc@plt>
   144ac:	movw	r2, #40836	; 0x9f84
   144b0:	movt	r2, #1
   144b4:	movw	r1, #40872	; 0x9fa8
   144b8:	movt	r1, #1
   144bc:	mov	r0, r4
   144c0:	bl	113cc <fprintf@plt>
   144c4:	mov	r1, r4
   144c8:	mov	r0, #10
   144cc:	bl	11498 <fputc@plt>
   144d0:	cmp	r6, #9
   144d4:	ldrls	pc, [pc, r6, lsl #2]
   144d8:	b	14734 <argp_parse@@Base+0x14fc>
   144dc:	andeq	r4, r1, r4, asr r5
   144e0:	andeq	r4, r1, r8, ror r5
   144e4:	andeq	r4, r1, r0, lsr #11
   144e8:	andeq	r4, r1, r8, asr #11
   144ec:	strdeq	r4, [r1], -r8
   144f0:	andeq	r4, r1, r4, lsr r6
   144f4:	andeq	r4, r1, r8, ror #12
   144f8:	andeq	r4, r1, r4, lsr #13
   144fc:	andeq	r4, r1, r8, ror #13
   14500:	andeq	r4, r1, r4, lsl #10
   14504:	ldr	ip, [r5, #8]
   14508:	movw	r1, #41312	; 0xa160
   1450c:	movt	r1, #1
   14510:	mov	r0, r4
   14514:	ldr	r3, [r5, #12]
   14518:	ldr	r2, [r5, #32]
   1451c:	str	ip, [sp]
   14520:	ldr	ip, [r5, #16]
   14524:	str	r2, [sp, #24]
   14528:	ldr	r2, [r5, #28]
   1452c:	str	r3, [sp, #4]
   14530:	ldr	r3, [r5, #20]
   14534:	str	ip, [sp, #8]
   14538:	ldr	ip, [r5, #24]
   1453c:	str	r2, [sp, #20]
   14540:	ldr	r2, [r5]
   14544:	str	r3, [sp, #12]
   14548:	ldr	r3, [r5, #4]
   1454c:	str	ip, [sp, #16]
   14550:	bl	113cc <fprintf@plt>
   14554:	add	sp, sp, #32
   14558:	ldrd	r4, [sp]
   1455c:	ldr	r6, [sp, #8]
   14560:	add	sp, sp, #12
   14564:	pop	{pc}		; (ldr pc, [sp], #4)
   14568:	movw	r1, #40824	; 0x9f78
   1456c:	movt	r1, #1
   14570:	bl	113cc <fprintf@plt>
   14574:	b	14484 <argp_parse@@Base+0x124c>
   14578:	ldr	r2, [r5]
   1457c:	mov	r0, r4
   14580:	movw	r1, #41044	; 0xa054
   14584:	movt	r1, #1
   14588:	add	sp, sp, #32
   1458c:	ldrd	r4, [sp]
   14590:	ldr	r6, [sp, #8]
   14594:	ldr	lr, [sp, #12]
   14598:	add	sp, sp, #16
   1459c:	b	113cc <fprintf@plt>
   145a0:	ldrd	r2, [r5]
   145a4:	mov	r0, r4
   145a8:	movw	r1, #41060	; 0xa064
   145ac:	movt	r1, #1
   145b0:	add	sp, sp, #32
   145b4:	ldrd	r4, [sp]
   145b8:	ldr	r6, [sp, #8]
   145bc:	ldr	lr, [sp, #12]
   145c0:	add	sp, sp, #16
   145c4:	b	113cc <fprintf@plt>
   145c8:	ldrd	r2, [r5]
   145cc:	mov	r0, r4
   145d0:	movw	r1, #41084	; 0xa07c
   145d4:	movt	r1, #1
   145d8:	ldr	ip, [r5, #8]
   145dc:	str	ip, [sp, #48]	; 0x30
   145e0:	add	sp, sp, #32
   145e4:	ldrd	r4, [sp]
   145e8:	ldr	r6, [sp, #8]
   145ec:	ldr	lr, [sp, #12]
   145f0:	add	sp, sp, #16
   145f4:	b	113cc <fprintf@plt>
   145f8:	ldr	r2, [r5]
   145fc:	mov	r0, r4
   14600:	movw	r1, #41112	; 0xa098
   14604:	movt	r1, #1
   14608:	ldr	r3, [r5, #8]
   1460c:	ldr	ip, [r5, #12]
   14610:	str	r3, [sp, #48]	; 0x30
   14614:	ldr	r3, [r5, #4]
   14618:	str	ip, [sp, #52]	; 0x34
   1461c:	add	sp, sp, #32
   14620:	ldrd	r4, [sp]
   14624:	ldr	r6, [sp, #8]
   14628:	ldr	lr, [sp, #12]
   1462c:	add	sp, sp, #16
   14630:	b	113cc <fprintf@plt>
   14634:	ldr	r2, [r5, #8]
   14638:	mov	r0, r4
   1463c:	movw	r1, #41144	; 0xa0b8
   14640:	movt	r1, #1
   14644:	ldr	ip, [r5, #12]
   14648:	ldr	r3, [r5, #16]
   1464c:	str	r2, [sp]
   14650:	ldr	r2, [r5]
   14654:	str	r3, [sp, #8]
   14658:	ldr	r3, [r5, #4]
   1465c:	str	ip, [sp, #4]
   14660:	bl	113cc <fprintf@plt>
   14664:	b	14554 <argp_parse@@Base+0x131c>
   14668:	ldr	ip, [r5, #8]
   1466c:	mov	r0, r4
   14670:	movw	r1, #41180	; 0xa0dc
   14674:	movt	r1, #1
   14678:	ldr	r3, [r5, #12]
   1467c:	ldr	r2, [r5, #20]
   14680:	str	ip, [sp]
   14684:	ldr	ip, [r5, #16]
   14688:	str	r2, [sp, #12]
   1468c:	ldr	r2, [r5]
   14690:	str	r3, [sp, #4]
   14694:	ldr	r3, [r5, #4]
   14698:	str	ip, [sp, #8]
   1469c:	bl	113cc <fprintf@plt>
   146a0:	b	14554 <argp_parse@@Base+0x131c>
   146a4:	ldr	r3, [r5, #8]
   146a8:	mov	r0, r4
   146ac:	movw	r1, #41220	; 0xa104
   146b0:	movt	r1, #1
   146b4:	ldr	r2, [r5, #12]
   146b8:	ldr	ip, [r5, #24]
   146bc:	str	r3, [sp]
   146c0:	ldr	r3, [r5, #16]
   146c4:	str	ip, [sp, #16]
   146c8:	ldr	ip, [r5, #20]
   146cc:	str	r2, [sp, #4]
   146d0:	ldr	r2, [r5]
   146d4:	str	r3, [sp, #8]
   146d8:	ldr	r3, [r5, #4]
   146dc:	str	ip, [sp, #12]
   146e0:	bl	113cc <fprintf@plt>
   146e4:	b	14554 <argp_parse@@Base+0x131c>
   146e8:	ldr	r2, [r5, #8]
   146ec:	mov	r0, r4
   146f0:	movw	r1, #41264	; 0xa130
   146f4:	movt	r1, #1
   146f8:	ldr	ip, [r5, #12]
   146fc:	ldr	r3, [r5, #28]
   14700:	str	r2, [sp]
   14704:	ldr	r2, [r5, #16]
   14708:	str	r3, [sp, #20]
   1470c:	ldr	r3, [r5, #24]
   14710:	str	ip, [sp, #4]
   14714:	ldr	ip, [r5, #20]
   14718:	str	r2, [sp, #8]
   1471c:	ldr	r2, [r5]
   14720:	str	r3, [sp, #16]
   14724:	ldr	r3, [r5, #4]
   14728:	str	ip, [sp, #12]
   1472c:	bl	113cc <fprintf@plt>
   14730:	b	14554 <argp_parse@@Base+0x131c>
   14734:	movw	r1, #41364	; 0xa194
   14738:	movt	r1, #1
   1473c:	ldr	ip, [r5, #8]
   14740:	mov	r0, r4
   14744:	b	14514 <argp_parse@@Base+0x12dc>
   14748:	strd	r4, [sp, #-12]!
   1474c:	str	lr, [sp, #8]
   14750:	sub	sp, sp, #12
   14754:	ldr	r5, [sp, #24]
   14758:	ldr	ip, [r5]
   1475c:	cmp	ip, #0
   14760:	beq	1477c <argp_parse@@Base+0x1544>
   14764:	mov	lr, r5
   14768:	mov	ip, #0
   1476c:	ldr	r4, [lr, #4]!
   14770:	add	ip, ip, #1
   14774:	cmp	r4, #0
   14778:	bne	1476c <argp_parse@@Base+0x1534>
   1477c:	stm	sp, {r5, ip}
   14780:	bl	14444 <argp_parse@@Base+0x120c>
   14784:	add	sp, sp, #12
   14788:	ldrd	r4, [sp]
   1478c:	add	sp, sp, #8
   14790:	pop	{pc}		; (ldr pc, [sp], #4)
   14794:	strd	r4, [sp, #-16]!
   14798:	mov	ip, #0
   1479c:	str	r6, [sp, #8]
   147a0:	str	lr, [sp, #12]
   147a4:	sub	sp, sp, #48	; 0x30
   147a8:	ldr	r5, [sp, #64]	; 0x40
   147ac:	add	r6, sp, #8
   147b0:	mov	r4, r6
   147b4:	ldr	lr, [r5], #4
   147b8:	cmp	lr, #0
   147bc:	str	lr, [r4], #4
   147c0:	beq	147d0 <argp_parse@@Base+0x1598>
   147c4:	add	ip, ip, #1
   147c8:	cmp	ip, #10
   147cc:	bne	147b4 <argp_parse@@Base+0x157c>
   147d0:	stm	sp, {r6, ip}
   147d4:	bl	14444 <argp_parse@@Base+0x120c>
   147d8:	add	sp, sp, #48	; 0x30
   147dc:	ldrd	r4, [sp]
   147e0:	ldr	r6, [sp, #8]
   147e4:	add	sp, sp, #12
   147e8:	pop	{pc}		; (ldr pc, [sp], #4)
   147ec:	push	{r3}		; (str r3, [sp, #-4]!)
   147f0:	mov	ip, #0
   147f4:	strd	r4, [sp, #-12]!
   147f8:	str	lr, [sp, #8]
   147fc:	sub	sp, sp, #56	; 0x38
   14800:	add	r3, sp, #72	; 0x48
   14804:	add	r5, sp, #16
   14808:	mov	r4, r3
   1480c:	mov	lr, r5
   14810:	str	r3, [sp, #12]
   14814:	ldr	r3, [r4], #4
   14818:	cmp	r3, #0
   1481c:	str	r3, [lr], #4
   14820:	beq	14830 <argp_parse@@Base+0x15f8>
   14824:	add	ip, ip, #1
   14828:	cmp	ip, #10
   1482c:	bne	14814 <argp_parse@@Base+0x15dc>
   14830:	ldr	r3, [sp, #68]	; 0x44
   14834:	stm	sp, {r5, ip}
   14838:	bl	14444 <argp_parse@@Base+0x120c>
   1483c:	add	sp, sp, #56	; 0x38
   14840:	ldrd	r4, [sp]
   14844:	ldr	lr, [sp, #8]
   14848:	add	sp, sp, #12
   1484c:	add	sp, sp, #4
   14850:	bx	lr
   14854:	movw	r3, #45804	; 0xb2ec
   14858:	movt	r3, #2
   1485c:	str	r4, [sp, #-8]!
   14860:	mov	r0, #10
   14864:	ldr	r1, [r3]
   14868:	str	lr, [sp, #4]
   1486c:	bl	11498 <fputc@plt>
   14870:	movw	r1, #41424	; 0xa1d0
   14874:	movt	r1, #1
   14878:	movw	r0, #41448	; 0xa1e8
   1487c:	movt	r0, #1
   14880:	bl	11228 <printf@plt>
   14884:	movw	r2, #41468	; 0xa1fc
   14888:	movt	r2, #1
   1488c:	movw	r1, #40728	; 0x9f18
   14890:	movt	r1, #1
   14894:	movw	r0, #41508	; 0xa224
   14898:	movt	r0, #1
   1489c:	bl	11228 <printf@plt>
   148a0:	movw	r1, #41528	; 0xa238
   148a4:	movt	r1, #1
   148a8:	ldr	r4, [sp]
   148ac:	movw	r0, #41560	; 0xa258
   148b0:	movt	r0, #1
   148b4:	ldr	lr, [sp, #4]
   148b8:	add	sp, sp, #8
   148bc:	b	11228 <printf@plt>
   148c0:	str	r4, [sp, #-8]!
   148c4:	str	lr, [sp, #4]
   148c8:	bl	14ddc <argp_parse@@Base+0x1ba4>
   148cc:	cmp	r0, #0
   148d0:	beq	148e0 <argp_parse@@Base+0x16a8>
   148d4:	ldr	r4, [sp]
   148d8:	add	sp, sp, #4
   148dc:	pop	{pc}		; (ldr pc, [sp], #4)
   148e0:	bl	14d38 <argp_parse@@Base+0x1b00>
   148e4:	str	r4, [sp, #-8]!
   148e8:	str	lr, [sp, #4]
   148ec:	bl	14ddc <argp_parse@@Base+0x1ba4>
   148f0:	cmp	r0, #0
   148f4:	beq	14904 <argp_parse@@Base+0x16cc>
   148f8:	ldr	r4, [sp]
   148fc:	add	sp, sp, #4
   14900:	pop	{pc}		; (ldr pc, [sp], #4)
   14904:	bl	14d38 <argp_parse@@Base+0x1b00>
   14908:	str	r4, [sp, #-8]!
   1490c:	str	lr, [sp, #4]
   14910:	bl	14ddc <argp_parse@@Base+0x1ba4>
   14914:	cmp	r0, #0
   14918:	beq	14928 <argp_parse@@Base+0x16f0>
   1491c:	ldr	r4, [sp]
   14920:	add	sp, sp, #4
   14924:	pop	{pc}		; (ldr pc, [sp], #4)
   14928:	bl	14d38 <argp_parse@@Base+0x1b00>
   1492c:	strd	r4, [sp, #-16]!
   14930:	mov	r5, r0
   14934:	mov	r4, r1
   14938:	str	r6, [sp, #8]
   1493c:	str	lr, [sp, #12]
   14940:	bl	14e18 <argp_parse@@Base+0x1be0>
   14944:	cmp	r0, #0
   14948:	beq	1495c <argp_parse@@Base+0x1724>
   1494c:	ldrd	r4, [sp]
   14950:	ldr	r6, [sp, #8]
   14954:	add	sp, sp, #12
   14958:	pop	{pc}		; (ldr pc, [sp], #4)
   1495c:	adds	r4, r4, #0
   14960:	movne	r4, #1
   14964:	cmp	r5, #0
   14968:	moveq	r4, #1
   1496c:	cmp	r4, #0
   14970:	beq	1494c <argp_parse@@Base+0x1714>
   14974:	bl	14d38 <argp_parse@@Base+0x1b00>
   14978:	cmp	r1, #0
   1497c:	orreq	r1, r1, #1
   14980:	str	r4, [sp, #-8]!
   14984:	str	lr, [sp, #4]
   14988:	bl	14e18 <argp_parse@@Base+0x1be0>
   1498c:	cmp	r0, #0
   14990:	beq	149a0 <argp_parse@@Base+0x1768>
   14994:	ldr	r4, [sp]
   14998:	add	sp, sp, #4
   1499c:	pop	{pc}		; (ldr pc, [sp], #4)
   149a0:	bl	14d38 <argp_parse@@Base+0x1b00>
   149a4:	strd	r4, [sp, #-16]!
   149a8:	mov	r4, r0
   149ac:	mov	r5, r2
   149b0:	str	r6, [sp, #8]
   149b4:	mov	r6, r1
   149b8:	str	lr, [sp, #12]
   149bc:	bl	19068 <argp_error@@Base+0xdc4>
   149c0:	cmp	r0, #0
   149c4:	beq	149d8 <argp_parse@@Base+0x17a0>
   149c8:	ldrd	r4, [sp]
   149cc:	ldr	r6, [sp, #8]
   149d0:	add	sp, sp, #12
   149d4:	pop	{pc}		; (ldr pc, [sp], #4)
   149d8:	cmp	r4, #0
   149dc:	beq	149ec <argp_parse@@Base+0x17b4>
   149e0:	cmp	r6, #0
   149e4:	cmpne	r5, #0
   149e8:	beq	149c8 <argp_parse@@Base+0x1790>
   149ec:	bl	14d38 <argp_parse@@Base+0x1b00>
   149f0:	b	149a4 <argp_parse@@Base+0x176c>
   149f4:	cmp	r2, #0
   149f8:	cmpne	r1, #0
   149fc:	str	r4, [sp, #-8]!
   14a00:	moveq	r2, #1
   14a04:	str	lr, [sp, #4]
   14a08:	moveq	r1, r2
   14a0c:	bl	19068 <argp_error@@Base+0xdc4>
   14a10:	cmp	r0, #0
   14a14:	beq	14a24 <argp_parse@@Base+0x17ec>
   14a18:	ldr	r4, [sp]
   14a1c:	add	sp, sp, #4
   14a20:	pop	{pc}		; (ldr pc, [sp], #4)
   14a24:	bl	14d38 <argp_parse@@Base+0x1b00>
   14a28:	mov	r2, r1
   14a2c:	mov	r1, r0
   14a30:	mov	r0, #0
   14a34:	b	149a4 <argp_parse@@Base+0x176c>
   14a38:	mov	r2, r1
   14a3c:	mov	r1, r0
   14a40:	mov	r0, #0
   14a44:	b	149f4 <argp_parse@@Base+0x17bc>
   14a48:	cmp	r0, #0
   14a4c:	strd	r4, [sp, #-16]!
   14a50:	mov	r5, r1
   14a54:	ldr	r4, [r1]
   14a58:	str	r6, [sp, #8]
   14a5c:	str	lr, [sp, #12]
   14a60:	beq	14a90 <argp_parse@@Base+0x1858>
   14a64:	lsr	r3, r4, #1
   14a68:	add	r3, r3, #1
   14a6c:	adds	r4, r4, r3
   14a70:	bcs	14aac <argp_parse@@Base+0x1874>
   14a74:	mov	r1, r4
   14a78:	bl	149a4 <argp_parse@@Base+0x176c>
   14a7c:	ldr	r6, [sp, #8]
   14a80:	str	r4, [r5]
   14a84:	ldrd	r4, [sp]
   14a88:	add	sp, sp, #12
   14a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a90:	cmp	r4, #0
   14a94:	bne	14a74 <argp_parse@@Base+0x183c>
   14a98:	mov	r4, #64	; 0x40
   14a9c:	udiv	r4, r4, r2
   14aa0:	cmp	r2, #64	; 0x40
   14aa4:	addhi	r4, r4, #1
   14aa8:	b	14a74 <argp_parse@@Base+0x183c>
   14aac:	bl	14d38 <argp_parse@@Base+0x1b00>
   14ab0:	mov	r2, #1
   14ab4:	b	14a48 <argp_parse@@Base+0x1810>
   14ab8:	ldr	ip, [r1]
   14abc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14ac0:	mov	r5, r1
   14ac4:	strd	r6, [sp, #8]
   14ac8:	str	lr, [sp, #28]
   14acc:	strd	r8, [sp, #16]
   14ad0:	asr	lr, ip, #1
   14ad4:	ldr	r8, [sp, #32]
   14ad8:	str	sl, [sp, #24]
   14adc:	adds	r4, ip, lr
   14ae0:	mvn	lr, r3
   14ae4:	lsr	lr, lr, #31
   14ae8:	mvnvs	r4, #-2147483648	; 0x80000000
   14aec:	cmp	r3, r4
   14af0:	movge	r1, #0
   14af4:	andlt	r1, lr, #1
   14af8:	cmp	r1, #0
   14afc:	movne	r4, r3
   14b00:	smull	r6, r7, r4, r8
   14b04:	cmp	r7, r6, asr #31
   14b08:	bne	14b90 <argp_parse@@Base+0x1958>
   14b0c:	cmp	r6, #63	; 0x3f
   14b10:	mov	r1, r6
   14b14:	ble	14b78 <argp_parse@@Base+0x1940>
   14b18:	cmp	r0, #0
   14b1c:	sub	r6, r4, ip
   14b20:	streq	r0, [r5]
   14b24:	cmp	r6, r2
   14b28:	bge	14b58 <argp_parse@@Base+0x1920>
   14b2c:	adds	r4, ip, r2
   14b30:	bvs	14b8c <argp_parse@@Base+0x1954>
   14b34:	cmp	r4, r3
   14b38:	movle	r3, #0
   14b3c:	andgt	r3, lr, #1
   14b40:	cmp	r3, #0
   14b44:	bne	14b8c <argp_parse@@Base+0x1954>
   14b48:	smull	r8, r9, r4, r8
   14b4c:	cmp	r9, r8, asr #31
   14b50:	mov	r1, r8
   14b54:	bne	14b8c <argp_parse@@Base+0x1954>
   14b58:	bl	1492c <argp_parse@@Base+0x16f4>
   14b5c:	ldrd	r6, [sp, #8]
   14b60:	ldrd	r8, [sp, #16]
   14b64:	ldr	sl, [sp, #24]
   14b68:	str	r4, [r5]
   14b6c:	ldrd	r4, [sp]
   14b70:	add	sp, sp, #28
   14b74:	pop	{pc}		; (ldr pc, [sp], #4)
   14b78:	mov	r6, #64	; 0x40
   14b7c:	sdiv	r4, r6, r8
   14b80:	mls	r1, r8, r4, r6
   14b84:	sub	r1, r6, r1
   14b88:	b	14b18 <argp_parse@@Base+0x18e0>
   14b8c:	bl	14d38 <argp_parse@@Base+0x1b00>
   14b90:	mvn	r6, #-2147483648	; 0x80000000
   14b94:	b	14b7c <argp_parse@@Base+0x1944>
   14b98:	mov	r1, #1
   14b9c:	str	r4, [sp, #-8]!
   14ba0:	str	lr, [sp, #4]
   14ba4:	bl	14d68 <argp_parse@@Base+0x1b30>
   14ba8:	cmp	r0, #0
   14bac:	beq	14bbc <argp_parse@@Base+0x1984>
   14bb0:	ldr	r4, [sp]
   14bb4:	add	sp, sp, #4
   14bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bbc:	bl	14d38 <argp_parse@@Base+0x1b00>
   14bc0:	mov	r1, #1
   14bc4:	str	r4, [sp, #-8]!
   14bc8:	str	lr, [sp, #4]
   14bcc:	bl	14d68 <argp_parse@@Base+0x1b30>
   14bd0:	cmp	r0, #0
   14bd4:	beq	14be4 <argp_parse@@Base+0x19ac>
   14bd8:	ldr	r4, [sp]
   14bdc:	add	sp, sp, #4
   14be0:	pop	{pc}		; (ldr pc, [sp], #4)
   14be4:	bl	14d38 <argp_parse@@Base+0x1b00>
   14be8:	str	r4, [sp, #-8]!
   14bec:	str	lr, [sp, #4]
   14bf0:	bl	14d68 <argp_parse@@Base+0x1b30>
   14bf4:	cmp	r0, #0
   14bf8:	beq	14c08 <argp_parse@@Base+0x19d0>
   14bfc:	ldr	r4, [sp]
   14c00:	add	sp, sp, #4
   14c04:	pop	{pc}		; (ldr pc, [sp], #4)
   14c08:	bl	14d38 <argp_parse@@Base+0x1b00>
   14c0c:	str	r4, [sp, #-8]!
   14c10:	str	lr, [sp, #4]
   14c14:	bl	14d68 <argp_parse@@Base+0x1b30>
   14c18:	cmp	r0, #0
   14c1c:	beq	14c2c <argp_parse@@Base+0x19f4>
   14c20:	ldr	r4, [sp]
   14c24:	add	sp, sp, #4
   14c28:	pop	{pc}		; (ldr pc, [sp], #4)
   14c2c:	bl	14d38 <argp_parse@@Base+0x1b00>
   14c30:	strd	r4, [sp, #-16]!
   14c34:	mov	r4, r1
   14c38:	str	r6, [sp, #8]
   14c3c:	mov	r6, r0
   14c40:	mov	r0, r1
   14c44:	str	lr, [sp, #12]
   14c48:	bl	14ddc <argp_parse@@Base+0x1ba4>
   14c4c:	subs	r5, r0, #0
   14c50:	beq	14c74 <argp_parse@@Base+0x1a3c>
   14c54:	mov	r2, r4
   14c58:	mov	r1, r6
   14c5c:	bl	11288 <memcpy@plt>
   14c60:	mov	r0, r5
   14c64:	ldrd	r4, [sp]
   14c68:	ldr	r6, [sp, #8]
   14c6c:	add	sp, sp, #12
   14c70:	pop	{pc}		; (ldr pc, [sp], #4)
   14c74:	bl	14d38 <argp_parse@@Base+0x1b00>
   14c78:	strd	r4, [sp, #-16]!
   14c7c:	mov	r4, r1
   14c80:	str	r6, [sp, #8]
   14c84:	mov	r6, r0
   14c88:	mov	r0, r1
   14c8c:	str	lr, [sp, #12]
   14c90:	bl	14ddc <argp_parse@@Base+0x1ba4>
   14c94:	subs	r5, r0, #0
   14c98:	beq	14cbc <argp_parse@@Base+0x1a84>
   14c9c:	mov	r2, r4
   14ca0:	mov	r1, r6
   14ca4:	bl	11288 <memcpy@plt>
   14ca8:	mov	r0, r5
   14cac:	ldrd	r4, [sp]
   14cb0:	ldr	r6, [sp, #8]
   14cb4:	add	sp, sp, #12
   14cb8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cbc:	bl	14d38 <argp_parse@@Base+0x1b00>
   14cc0:	strd	r4, [sp, #-16]!
   14cc4:	mov	r4, r1
   14cc8:	str	r6, [sp, #8]
   14ccc:	mov	r6, r0
   14cd0:	add	r0, r1, #1
   14cd4:	str	lr, [sp, #12]
   14cd8:	bl	14ddc <argp_parse@@Base+0x1ba4>
   14cdc:	subs	r5, r0, #0
   14ce0:	beq	14d0c <argp_parse@@Base+0x1ad4>
   14ce4:	mov	r3, #0
   14ce8:	mov	r1, r6
   14cec:	mov	r2, r4
   14cf0:	strb	r3, [r5, r4]
   14cf4:	bl	11288 <memcpy@plt>
   14cf8:	mov	r0, r5
   14cfc:	ldrd	r4, [sp]
   14d00:	ldr	r6, [sp, #8]
   14d04:	add	sp, sp, #12
   14d08:	pop	{pc}		; (ldr pc, [sp], #4)
   14d0c:	bl	14d38 <argp_parse@@Base+0x1b00>
   14d10:	str	r4, [sp, #-8]!
   14d14:	mov	r4, r0
   14d18:	str	lr, [sp, #4]
   14d1c:	bl	113b4 <strlen@plt>
   14d20:	add	r1, r0, #1
   14d24:	mov	r0, r4
   14d28:	ldr	r4, [sp]
   14d2c:	ldr	lr, [sp, #4]
   14d30:	add	sp, sp, #8
   14d34:	b	14c30 <argp_parse@@Base+0x19f8>
   14d38:	movw	r3, #45772	; 0xb2cc
   14d3c:	movt	r3, #2
   14d40:	str	r4, [sp, #-8]!
   14d44:	movw	r2, #39320	; 0x9998
   14d48:	movt	r2, #1
   14d4c:	ldr	r0, [r3]
   14d50:	mov	r1, #0
   14d54:	movw	r3, #41648	; 0xa2b0
   14d58:	movt	r3, #1
   14d5c:	str	lr, [sp, #4]
   14d60:	bl	11324 <error@plt>
   14d64:	bl	11528 <abort@plt>
   14d68:	cmp	r1, #0
   14d6c:	cmpne	r0, #0
   14d70:	beq	14dbc <argp_parse@@Base+0x1b84>
   14d74:	strd	r4, [sp, #-16]!
   14d78:	umull	r4, r5, r0, r1
   14d7c:	str	r6, [sp, #8]
   14d80:	str	lr, [sp, #12]
   14d84:	adds	r3, r5, #0
   14d88:	movne	r3, #1
   14d8c:	cmp	r4, #0
   14d90:	blt	14d9c <argp_parse@@Base+0x1b64>
   14d94:	cmp	r3, #0
   14d98:	beq	14dc8 <argp_parse@@Base+0x1b90>
   14d9c:	bl	113d8 <__errno_location@plt>
   14da0:	mov	r3, #12
   14da4:	ldrd	r4, [sp]
   14da8:	ldr	r6, [sp, #8]
   14dac:	add	sp, sp, #12
   14db0:	str	r3, [r0]
   14db4:	mov	r0, #0
   14db8:	pop	{pc}		; (ldr pc, [sp], #4)
   14dbc:	mov	r1, #1
   14dc0:	mov	r0, r1
   14dc4:	b	111e0 <calloc@plt>
   14dc8:	ldrd	r4, [sp]
   14dcc:	ldr	r6, [sp, #8]
   14dd0:	ldr	lr, [sp, #12]
   14dd4:	add	sp, sp, #16
   14dd8:	b	111e0 <calloc@plt>
   14ddc:	cmp	r0, #0
   14de0:	beq	14dec <argp_parse@@Base+0x1bb4>
   14de4:	blt	14df4 <argp_parse@@Base+0x1bbc>
   14de8:	b	11354 <malloc@plt>
   14dec:	mov	r0, #1
   14df0:	b	11354 <malloc@plt>
   14df4:	str	r4, [sp, #-8]!
   14df8:	str	lr, [sp, #4]
   14dfc:	bl	113d8 <__errno_location@plt>
   14e00:	mov	r3, #12
   14e04:	ldr	r4, [sp]
   14e08:	add	sp, sp, #4
   14e0c:	str	r3, [r0]
   14e10:	mov	r0, #0
   14e14:	pop	{pc}		; (ldr pc, [sp], #4)
   14e18:	cmp	r0, #0
   14e1c:	beq	14e44 <argp_parse@@Base+0x1c0c>
   14e20:	cmp	r1, #0
   14e24:	str	r4, [sp, #-8]!
   14e28:	str	lr, [sp, #4]
   14e2c:	beq	14e4c <argp_parse@@Base+0x1c14>
   14e30:	blt	14e60 <argp_parse@@Base+0x1c28>
   14e34:	ldr	r4, [sp]
   14e38:	ldr	lr, [sp, #4]
   14e3c:	add	sp, sp, #8
   14e40:	b	112d0 <realloc@plt>
   14e44:	mov	r0, r1
   14e48:	b	14ddc <argp_parse@@Base+0x1ba4>
   14e4c:	bl	1421c <argp_parse@@Base+0xfe4>
   14e50:	ldr	r4, [sp]
   14e54:	add	sp, sp, #4
   14e58:	mov	r0, #0
   14e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   14e60:	bl	113d8 <__errno_location@plt>
   14e64:	mov	r3, #12
   14e68:	str	r3, [r0]
   14e6c:	b	14e50 <argp_parse@@Base+0x1c18>
   14e70:	strd	r4, [sp, #-16]!
   14e74:	mov	r5, r0
   14e78:	ldr	r0, [r0, #12]
   14e7c:	str	r6, [sp, #8]
   14e80:	str	lr, [sp, #12]
   14e84:	cmp	r0, #0
   14e88:	beq	14e9c <argp_parse@@Base+0x1c64>
   14e8c:	ldr	r4, [r0, #24]
   14e90:	bl	1421c <argp_parse@@Base+0xfe4>
   14e94:	subs	r0, r4, #0
   14e98:	bne	14e8c <argp_parse@@Base+0x1c54>
   14e9c:	ldr	r3, [r5, #4]
   14ea0:	cmp	r3, #0
   14ea4:	bne	14ec0 <argp_parse@@Base+0x1c88>
   14ea8:	mov	r0, r5
   14eac:	ldrd	r4, [sp]
   14eb0:	ldr	r6, [sp, #8]
   14eb4:	ldr	lr, [sp, #12]
   14eb8:	add	sp, sp, #16
   14ebc:	b	1421c <argp_parse@@Base+0xfe4>
   14ec0:	ldr	r0, [r5]
   14ec4:	bl	1421c <argp_parse@@Base+0xfe4>
   14ec8:	ldr	r0, [r5, #8]
   14ecc:	bl	1421c <argp_parse@@Base+0xfe4>
   14ed0:	b	14ea8 <argp_parse@@Base+0x1c70>
   14ed4:	ldr	r3, [r0, #12]
   14ed8:	strd	r4, [sp, #-16]!
   14edc:	ldr	r2, [r1, #12]
   14ee0:	str	r6, [sp, #8]
   14ee4:	str	lr, [sp, #12]
   14ee8:	cmp	r3, r2
   14eec:	beq	14f4c <argp_parse@@Base+0x1d14>
   14ef0:	mov	r5, r1
   14ef4:	mov	r4, r0
   14ef8:	mov	r1, r2
   14efc:	mov	r0, r3
   14f00:	bl	14ed4 <argp_parse@@Base+0x1c9c>
   14f04:	cmp	r0, #0
   14f08:	bne	14f3c <argp_parse@@Base+0x1d04>
   14f0c:	ldr	r3, [r5, #8]
   14f10:	ldr	r0, [r4, #8]
   14f14:	mvn	r2, r3
   14f18:	lsr	r2, r2, #31
   14f1c:	cmp	r2, r0, lsr #31
   14f20:	subne	r0, r0, r3
   14f24:	subeq	r0, r3, r0
   14f28:	cmp	r0, #0
   14f2c:	bne	14f3c <argp_parse@@Base+0x1d04>
   14f30:	ldr	r0, [r4, #4]
   14f34:	ldr	r3, [r5, #4]
   14f38:	sub	r0, r3, r0
   14f3c:	ldrd	r4, [sp]
   14f40:	ldr	r6, [sp, #8]
   14f44:	add	sp, sp, #12
   14f48:	pop	{pc}		; (ldr pc, [sp], #4)
   14f4c:	ldr	lr, [r1, #4]
   14f50:	ldr	r3, [r1, #8]
   14f54:	ldr	r2, [r0, #8]
   14f58:	ldr	ip, [r0, #4]
   14f5c:	mvn	r1, r3
   14f60:	lsr	r1, r1, #31
   14f64:	ldrd	r4, [sp]
   14f68:	cmp	r1, r2, lsr #31
   14f6c:	ldr	r6, [sp, #8]
   14f70:	add	sp, sp, #12
   14f74:	subne	r0, r2, r3
   14f78:	subeq	r0, r3, r2
   14f7c:	cmp	r0, #0
   14f80:	subeq	r0, lr, ip
   14f84:	pop	{pc}		; (ldr pc, [sp], #4)
   14f88:	ldr	r2, [r0, #8]
   14f8c:	cmp	r2, #0
   14f90:	beq	14f9c <argp_parse@@Base+0x1d64>
   14f94:	mov	r0, #0
   14f98:	bx	lr
   14f9c:	ldr	r2, [r1, #8]
   14fa0:	cmp	r2, #0
   14fa4:	bne	14f94 <argp_parse@@Base+0x1d5c>
   14fa8:	ldr	r2, [r0, #12]
   14fac:	ldr	r1, [r1, #12]
   14fb0:	orr	r2, r2, r1
   14fb4:	tst	r2, #16
   14fb8:	bne	14f94 <argp_parse@@Base+0x1d5c>
   14fbc:	ldr	r2, [r3]
   14fc0:	ldr	r1, [r0, #4]
   14fc4:	add	r0, r2, #1
   14fc8:	str	r0, [r3]
   14fcc:	strb	r1, [r2]
   14fd0:	b	14f94 <argp_parse@@Base+0x1d5c>
   14fd4:	strd	r4, [sp, #-16]!
   14fd8:	ldr	r4, [r0, #12]
   14fdc:	str	r6, [sp, #8]
   14fe0:	str	lr, [sp, #12]
   14fe4:	ands	r4, r4, #8
   14fe8:	movne	r4, #0
   14fec:	bne	15018 <argp_parse@@Base+0x1de0>
   14ff0:	ldr	r5, [r0, #4]
   14ff4:	sub	r3, r5, #1
   14ff8:	cmp	r3, #254	; 0xfe
   14ffc:	bhi	15018 <argp_parse@@Base+0x1de0>
   15000:	bl	1139c <__ctype_b_loc@plt>
   15004:	ldr	r2, [r0]
   15008:	lsl	r3, r5, #1
   1500c:	ldrh	r3, [r2, r3]
   15010:	tst	r3, #16384	; 0x4000
   15014:	movne	r4, r5
   15018:	mov	r0, r4
   1501c:	ldrd	r4, [sp]
   15020:	ldr	r6, [sp, #8]
   15024:	add	sp, sp, #12
   15028:	pop	{pc}		; (ldr pc, [sp], #4)
   1502c:	str	r4, [sp, #-8]!
   15030:	mov	r4, r0
   15034:	str	lr, [sp, #4]
   15038:	bl	1139c <__ctype_b_loc@plt>
   1503c:	ldr	lr, [r0]
   15040:	ldr	r2, [r4]
   15044:	b	1504c <argp_parse@@Base+0x1e14>
   15048:	str	r2, [r4]
   1504c:	ldrb	r1, [r2]
   15050:	mov	r3, r2
   15054:	add	r2, r2, #1
   15058:	lsl	r0, r1, #1
   1505c:	ldrh	ip, [lr, r0]
   15060:	tst	ip, #8192	; 0x2000
   15064:	bne	15048 <argp_parse@@Base+0x1e10>
   15068:	subs	r0, r1, #45	; 0x2d
   1506c:	movne	r0, #1
   15070:	cmp	r1, #0
   15074:	beq	150a8 <argp_parse@@Base+0x1e70>
   15078:	tst	ip, #8
   1507c:	beq	15090 <argp_parse@@Base+0x1e58>
   15080:	b	150a8 <argp_parse@@Base+0x1e70>
   15084:	ldrh	r2, [lr, r1]
   15088:	tst	r2, #8
   1508c:	bne	150a8 <argp_parse@@Base+0x1e70>
   15090:	add	r3, r3, #1
   15094:	str	r3, [r4]
   15098:	ldrb	r2, [r3]
   1509c:	cmp	r2, #0
   150a0:	lsl	r1, r2, #1
   150a4:	bne	15084 <argp_parse@@Base+0x1e4c>
   150a8:	ldr	r4, [sp]
   150ac:	add	sp, sp, #4
   150b0:	pop	{pc}		; (ldr pc, [sp], #4)
   150b4:	cmp	r1, #0
   150b8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   150bc:	strd	r6, [sp, #8]
   150c0:	str	r8, [sp, #16]
   150c4:	str	lr, [sp, #20]
   150c8:	beq	15150 <argp_parse@@Base+0x1f18>
   150cc:	mov	r6, r0
   150d0:	mov	r8, r2
   150d4:	sub	r7, r1, #1
   150d8:	ldrd	r4, [r6]
   150dc:	cmp	r5, #0
   150e0:	sub	r5, r5, #1
   150e4:	beq	15124 <argp_parse@@Base+0x1eec>
   150e8:	add	r4, r4, #24
   150ec:	ldr	r0, [r4, #-24]	; 0xffffffe8
   150f0:	sub	r5, r5, #1
   150f4:	cmp	r0, #0
   150f8:	beq	15118 <argp_parse@@Base+0x1ee0>
   150fc:	ldr	r3, [r4, #-12]
   15100:	mov	r1, r8
   15104:	tst	r3, #2
   15108:	bne	15118 <argp_parse@@Base+0x1ee0>
   1510c:	bl	11210 <strcmp@plt>
   15110:	cmp	r0, #0
   15114:	beq	15138 <argp_parse@@Base+0x1f00>
   15118:	cmn	r5, #1
   1511c:	add	r4, r4, #24
   15120:	bne	150ec <argp_parse@@Base+0x1eb4>
   15124:	sub	r7, r7, #1
   15128:	add	r6, r6, #28
   1512c:	cmn	r7, #1
   15130:	bne	150d8 <argp_parse@@Base+0x1ea0>
   15134:	mov	r6, #0
   15138:	mov	r0, r6
   1513c:	ldrd	r4, [sp]
   15140:	ldrd	r6, [sp, #8]
   15144:	ldr	r8, [sp, #16]
   15148:	add	sp, sp, #20
   1514c:	pop	{pc}		; (ldr pc, [sp], #4)
   15150:	mov	r6, r1
   15154:	b	15138 <argp_parse@@Base+0x1f00>
   15158:	strd	r4, [sp, #-16]!
   1515c:	subs	r5, r0, #0
   15160:	mov	r4, r1
   15164:	str	r6, [sp, #8]
   15168:	str	lr, [sp, #12]
   1516c:	beq	15180 <argp_parse@@Base+0x1f48>
   15170:	mov	r1, #10
   15174:	bl	113c0 <strchr@plt>
   15178:	adds	r5, r0, #0
   1517c:	movne	r5, #1
   15180:	cmp	r4, #0
   15184:	beq	151b0 <argp_parse@@Base+0x1f78>
   15188:	ldr	r3, [r4]
   1518c:	cmp	r3, #0
   15190:	beq	151b0 <argp_parse@@Base+0x1f78>
   15194:	ldr	r0, [r3, #8]
   15198:	ldr	r1, [r3, #16]
   1519c:	bl	15158 <argp_parse@@Base+0x1f20>
   151a0:	ldr	r3, [r4, #16]!
   151a4:	add	r5, r5, r0
   151a8:	cmp	r3, #0
   151ac:	bne	15194 <argp_parse@@Base+0x1f5c>
   151b0:	mov	r0, r5
   151b4:	ldrd	r4, [sp]
   151b8:	ldr	r6, [sp, #8]
   151bc:	add	sp, sp, #12
   151c0:	pop	{pc}		; (ldr pc, [sp], #4)
   151c4:	strd	r4, [sp, #-16]!
   151c8:	mov	r5, r1
   151cc:	mov	r1, r3
   151d0:	str	r6, [sp, #8]
   151d4:	mov	r6, r0
   151d8:	mov	r0, r2
   151dc:	mov	r4, r2
   151e0:	str	lr, [sp, #12]
   151e4:	bl	140b8 <argp_parse@@Base+0xe80>
   151e8:	mov	r2, r0
   151ec:	mov	r1, r6
   151f0:	ldr	r6, [sp, #8]
   151f4:	mov	r0, r5
   151f8:	ldr	lr, [sp, #12]
   151fc:	ldr	r3, [r4, #20]
   15200:	ldrd	r4, [sp]
   15204:	add	sp, sp, #16
   15208:	bx	r3
   1520c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15210:	ldr	r4, [r0]
   15214:	strd	r6, [sp, #8]
   15218:	strd	r8, [sp, #16]
   1521c:	strd	sl, [sp, #24]
   15220:	str	lr, [sp, #32]
   15224:	sub	sp, sp, #52	; 0x34
   15228:	ldr	r7, [r0, #16]
   1522c:	str	r1, [sp]
   15230:	str	r0, [sp, #4]
   15234:	mov	r0, #16
   15238:	bl	14ddc <argp_parse@@Base+0x1ba4>
   1523c:	subs	fp, r0, #0
   15240:	beq	15874 <argp_parse@@Base+0x263c>
   15244:	mov	r3, #0
   15248:	cmp	r4, r3
   1524c:	str	r3, [fp, #4]
   15250:	str	r3, [fp, #12]
   15254:	beq	154b8 <argp_parse@@Base+0x2280>
   15258:	ldr	r0, [r4, #12]
   1525c:	ands	r0, r0, #4
   15260:	bne	158b0 <argp_parse@@Base+0x2678>
   15264:	mov	r9, r0
   15268:	add	r5, r4, #24
   1526c:	mov	r8, r0
   15270:	b	152c0 <argp_parse@@Base+0x2088>
   15274:	ldr	r3, [r5, #-12]
   15278:	tst	r3, #4
   1527c:	bne	1528c <argp_parse@@Base+0x2054>
   15280:	add	r9, r9, #1
   15284:	str	r9, [fp, #4]
   15288:	ldr	r3, [r5, #-12]
   1528c:	tst	r3, #8
   15290:	bne	152bc <argp_parse@@Base+0x2084>
   15294:	ldr	r6, [r5, #-20]	; 0xffffffec
   15298:	sub	r3, r6, #1
   1529c:	cmp	r3, #254	; 0xfe
   152a0:	bhi	152bc <argp_parse@@Base+0x2084>
   152a4:	bl	1139c <__ctype_b_loc@plt>
   152a8:	ldr	r3, [r0]
   152ac:	lsl	r6, r6, #1
   152b0:	ldrh	r3, [r3, r6]
   152b4:	tst	r3, #16384	; 0x4000
   152b8:	addne	r8, r8, #1
   152bc:	add	r5, r5, #24
   152c0:	ldr	r3, [r5, #-20]	; 0xffffffec
   152c4:	cmp	r3, #0
   152c8:	bne	15274 <argp_parse@@Base+0x203c>
   152cc:	ldr	r3, [r5, #-24]	; 0xffffffe8
   152d0:	cmp	r3, #0
   152d4:	bne	15274 <argp_parse@@Base+0x203c>
   152d8:	ldr	r3, [r5, #-8]
   152dc:	cmp	r3, #0
   152e0:	bne	15274 <argp_parse@@Base+0x203c>
   152e4:	ldr	sl, [r5, #-4]
   152e8:	cmp	sl, #0
   152ec:	bne	15274 <argp_parse@@Base+0x203c>
   152f0:	rsb	r9, r9, r9, lsl #3
   152f4:	lsl	r0, r9, #2
   152f8:	bl	14ddc <argp_parse@@Base+0x1ba4>
   152fc:	str	r0, [fp]
   15300:	add	r0, r8, #1
   15304:	bl	14ddc <argp_parse@@Base+0x1ba4>
   15308:	ldr	r5, [fp]
   1530c:	mov	r8, r0
   15310:	str	r0, [fp, #8]
   15314:	cmp	r5, #0
   15318:	cmpne	r0, #0
   1531c:	beq	15818 <argp_parse@@Base+0x25e0>
   15320:	ldr	r2, [fp, #4]
   15324:	movw	r3, #37449	; 0x9249
   15328:	movt	r3, #2340	; 0x924
   1532c:	cmp	r2, r3
   15330:	bhi	15838 <argp_parse@@Base+0x2600>
   15334:	mov	r6, r0
   15338:	mov	r0, sl
   1533c:	str	r7, [sp, #8]
   15340:	mov	r7, r8
   15344:	ldr	sl, [sp]
   15348:	add	r5, r5, #28
   1534c:	str	fp, [sp, #12]
   15350:	ldr	r3, [r4, #4]
   15354:	ldr	r8, [sp, #4]
   15358:	cmp	r3, #0
   1535c:	ldr	fp, [r4, #20]
   15360:	bne	15370 <argp_parse@@Base+0x2138>
   15364:	ldr	ip, [r4]
   15368:	cmp	ip, #0
   1536c:	beq	15450 <argp_parse@@Base+0x2218>
   15370:	mov	r2, #0
   15374:	cmp	fp, #0
   15378:	str	r4, [r5, #-28]	; 0xffffffe4
   1537c:	str	r2, [r5, #-24]	; 0xffffffe8
   15380:	str	r6, [r5, #-20]	; 0xffffffec
   15384:	bne	15398 <argp_parse@@Base+0x2160>
   15388:	ldr	r2, [r4]
   1538c:	orrs	r3, r2, r3
   15390:	movne	fp, r0
   15394:	beq	15470 <argp_parse@@Base+0x2238>
   15398:	mov	r3, #0
   1539c:	str	fp, [r5, #-16]
   153a0:	str	sl, [r5, #-12]
   153a4:	str	r8, [r5, #-8]
   153a8:	add	r3, r3, #1
   153ac:	str	r3, [r5, #-24]	; 0xffffffe8
   153b0:	ldr	r3, [r4, #12]
   153b4:	tst	r3, #8
   153b8:	bne	15420 <argp_parse@@Base+0x21e8>
   153bc:	ldr	r9, [r4, #4]
   153c0:	sub	r3, r9, #1
   153c4:	cmp	r3, #254	; 0xfe
   153c8:	bhi	15420 <argp_parse@@Base+0x21e8>
   153cc:	bl	1139c <__ctype_b_loc@plt>
   153d0:	ldr	r0, [r0]
   153d4:	lsl	r3, r9, #1
   153d8:	ldrh	r3, [r0, r3]
   153dc:	tst	r3, #16384	; 0x4000
   153e0:	beq	15420 <argp_parse@@Base+0x21e8>
   153e4:	cmp	r7, r6
   153e8:	uxtb	r9, r9
   153ec:	bcs	1541c <argp_parse@@Base+0x21e4>
   153f0:	ldrb	r3, [r7]
   153f4:	cmp	r3, r9
   153f8:	beq	15420 <argp_parse@@Base+0x21e8>
   153fc:	mov	r3, r7
   15400:	sub	r0, r6, #1
   15404:	b	15414 <argp_parse@@Base+0x21dc>
   15408:	ldrb	ip, [r3, #1]!
   1540c:	cmp	ip, r9
   15410:	beq	15420 <argp_parse@@Base+0x21e8>
   15414:	cmp	r0, r3
   15418:	bne	15408 <argp_parse@@Base+0x21d0>
   1541c:	strb	r9, [r6], #1
   15420:	add	r4, r4, #24
   15424:	ldr	r0, [r4, #4]
   15428:	cmp	r0, #0
   1542c:	bne	1543c <argp_parse@@Base+0x2204>
   15430:	ldr	r3, [r4]
   15434:	cmp	r3, #0
   15438:	beq	15478 <argp_parse@@Base+0x2240>
   1543c:	ldr	r3, [r4, #12]
   15440:	tst	r3, #4
   15444:	beq	1549c <argp_parse@@Base+0x2264>
   15448:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1544c:	b	153a8 <argp_parse@@Base+0x2170>
   15450:	ldr	ip, [r4, #16]
   15454:	cmp	ip, #0
   15458:	beq	154a4 <argp_parse@@Base+0x226c>
   1545c:	cmp	fp, #0
   15460:	str	r4, [r5, #-28]	; 0xffffffe4
   15464:	str	r3, [r5, #-24]	; 0xffffffe8
   15468:	str	r6, [r5, #-20]	; 0xffffffec
   1546c:	bne	15398 <argp_parse@@Base+0x2160>
   15470:	add	fp, r0, #1
   15474:	b	15398 <argp_parse@@Base+0x2160>
   15478:	ldr	r3, [r4, #16]
   1547c:	cmp	r3, #0
   15480:	bne	1543c <argp_parse@@Base+0x2204>
   15484:	ldr	r3, [r4, #20]
   15488:	cmp	r3, #0
   1548c:	bne	1543c <argp_parse@@Base+0x2204>
   15490:	add	r5, r5, #28
   15494:	mov	r0, fp
   15498:	b	15358 <argp_parse@@Base+0x2120>
   1549c:	mov	r3, r0
   154a0:	b	15490 <argp_parse@@Base+0x2258>
   154a4:	cmp	fp, #0
   154a8:	bne	155f4 <argp_parse@@Base+0x23bc>
   154ac:	ldr	r7, [sp, #8]
   154b0:	strb	r3, [r6]
   154b4:	ldr	fp, [sp, #12]
   154b8:	cmp	r7, #0
   154bc:	beq	155d4 <argp_parse@@Base+0x239c>
   154c0:	ldr	r3, [r7]
   154c4:	cmp	r3, #0
   154c8:	beq	155d4 <argp_parse@@Base+0x239c>
   154cc:	movw	r3, #37449	; 0x9249
   154d0:	movt	r3, #2340	; 0x924
   154d4:	mov	sl, r7
   154d8:	str	r3, [sp, #28]
   154dc:	add	r3, fp, #12
   154e0:	str	r3, [sp, #44]	; 0x2c
   154e4:	ldr	r6, [sl, #8]
   154e8:	ldr	r5, [sl, #12]
   154ec:	cmp	r5, #0
   154f0:	bne	154fc <argp_parse@@Base+0x22c4>
   154f4:	cmp	r6, #0
   154f8:	beq	157f8 <argp_parse@@Base+0x25c0>
   154fc:	ldr	r7, [sp, #4]
   15500:	mov	r0, #28
   15504:	ldr	r4, [r7, #16]
   15508:	bl	14ddc <argp_parse@@Base+0x1ba4>
   1550c:	subs	r1, r0, #0
   15510:	beq	15550 <argp_parse@@Base+0x2318>
   15514:	ldr	r3, [sp]
   15518:	sub	r4, sl, r4
   1551c:	asr	r4, r4, #4
   15520:	str	r6, [r1]
   15524:	ldr	r2, [fp, #12]
   15528:	str	r1, [fp, #12]
   1552c:	strd	r4, [r1, #4]
   15530:	cmp	r3, #0
   15534:	str	r3, [r1, #12]
   15538:	ldrne	r3, [r3, #20]
   1553c:	str	r7, [r1, #16]
   15540:	ldreq	r3, [sp]
   15544:	str	r2, [r1, #24]
   15548:	addne	r3, r3, #1
   1554c:	str	r3, [r1, #20]
   15550:	ldr	r0, [sl]
   15554:	bl	1520c <argp_parse@@Base+0x1fd4>
   15558:	ldr	r3, [fp, #12]
   1555c:	mov	r6, r0
   15560:	cmp	r3, #0
   15564:	bne	15570 <argp_parse@@Base+0x2338>
   15568:	b	15800 <argp_parse@@Base+0x25c8>
   1556c:	mov	r3, r2
   15570:	ldr	r2, [r3, #24]
   15574:	cmp	r2, #0
   15578:	bne	1556c <argp_parse@@Base+0x2334>
   1557c:	add	r3, r3, #24
   15580:	ldr	r2, [r6, #4]
   15584:	ldr	r1, [r6, #12]
   15588:	cmp	r2, #0
   1558c:	str	r1, [r3]
   15590:	mov	r3, #0
   15594:	str	r3, [r6, #12]
   15598:	beq	155c0 <argp_parse@@Base+0x2388>
   1559c:	ldr	r3, [fp, #4]
   155a0:	cmp	r3, #0
   155a4:	bne	15604 <argp_parse@@Base+0x23cc>
   155a8:	ldr	r1, [r6]
   155ac:	str	r2, [fp, #4]
   155b0:	ldr	r2, [r6, #8]
   155b4:	str	r1, [fp]
   155b8:	str	r2, [fp, #8]
   155bc:	str	r3, [r6, #4]
   155c0:	mov	r0, r6
   155c4:	bl	14e70 <argp_parse@@Base+0x1c38>
   155c8:	ldr	r3, [sl, #16]!
   155cc:	cmp	r3, #0
   155d0:	bne	154e4 <argp_parse@@Base+0x22ac>
   155d4:	mov	r0, fp
   155d8:	add	sp, sp, #52	; 0x34
   155dc:	ldrd	r4, [sp]
   155e0:	ldrd	r6, [sp, #8]
   155e4:	ldrd	r8, [sp, #16]
   155e8:	ldrd	sl, [sp, #24]
   155ec:	add	sp, sp, #32
   155f0:	pop	{pc}		; (ldr pc, [sp], #4)
   155f4:	str	r4, [r5, #-28]	; 0xffffffe4
   155f8:	str	r3, [r5, #-24]	; 0xffffffe8
   155fc:	str	r6, [r5, #-20]	; 0xffffffec
   15600:	b	15398 <argp_parse@@Base+0x2160>
   15604:	add	r3, r2, r3
   15608:	rsb	r0, r3, r3, lsl #3
   1560c:	str	r3, [sp, #12]
   15610:	lsl	r0, r0, #2
   15614:	bl	14ddc <argp_parse@@Base+0x1ba4>
   15618:	mov	r4, r0
   1561c:	ldr	r0, [fp, #8]
   15620:	str	r4, [sp, #8]
   15624:	bl	113b4 <strlen@plt>
   15628:	mov	r8, r0
   1562c:	ldr	r0, [r6, #8]
   15630:	bl	113b4 <strlen@plt>
   15634:	add	r0, r8, r0
   15638:	add	r0, r0, #1
   1563c:	bl	14ddc <argp_parse@@Base+0x1ba4>
   15640:	cmp	r4, #0
   15644:	cmpne	r0, #0
   15648:	mov	r9, r0
   1564c:	beq	15858 <argp_parse@@Base+0x2620>
   15650:	ldr	r3, [sp, #12]
   15654:	ldr	r2, [sp, #28]
   15658:	cmp	r3, r2
   1565c:	bhi	15894 <argp_parse@@Base+0x265c>
   15660:	ldm	fp, {r1, r5}
   15664:	ldr	r0, [sp, #8]
   15668:	rsb	r4, r5, r5, lsl #3
   1566c:	str	r1, [sp, #24]
   15670:	lsl	r4, r4, #2
   15674:	mov	r2, r4
   15678:	bl	11390 <mempcpy@plt>
   1567c:	ldm	r6, {r1, r3}
   15680:	rsb	r2, r3, r3, lsl #3
   15684:	str	r3, [sp, #16]
   15688:	lsl	r2, r2, #2
   1568c:	bl	11288 <memcpy@plt>
   15690:	ldr	r7, [fp, #8]
   15694:	mov	r2, r8
   15698:	mov	r0, r9
   1569c:	mov	r1, r7
   156a0:	bl	11288 <memcpy@plt>
   156a4:	cmp	r5, #0
   156a8:	ldr	r3, [sp, #16]
   156ac:	beq	15808 <argp_parse@@Base+0x25d0>
   156b0:	ldr	r1, [sp, #8]
   156b4:	subs	r5, r5, #1
   156b8:	add	r1, r1, #28
   156bc:	ldr	r2, [r1, #-20]	; 0xffffffec
   156c0:	sub	r2, r2, r7
   156c4:	add	r2, r9, r2
   156c8:	str	r2, [r1, #-20]	; 0xffffffec
   156cc:	bne	156b4 <argp_parse@@Base+0x247c>
   156d0:	ldr	r2, [sp, #8]
   156d4:	add	r4, r2, r4
   156d8:	add	r2, r9, r8
   156dc:	cmp	r3, #0
   156e0:	ldr	r1, [r6, #8]
   156e4:	str	r2, [sp, #16]
   156e8:	beq	15810 <argp_parse@@Base+0x25d8>
   156ec:	mov	r8, r2
   156f0:	add	r4, r4, #28
   156f4:	str	r6, [sp, #32]
   156f8:	sub	r2, r2, #1
   156fc:	strd	sl, [sp, #36]	; 0x24
   15700:	mov	sl, r1
   15704:	mov	fp, r3
   15708:	str	r2, [sp, #20]
   1570c:	str	r8, [r4, #-20]	; 0xffffffec
   15710:	ldr	r6, [r4, #-24]	; 0xffffffe8
   15714:	ldr	r7, [r4, #-28]	; 0xffffffe4
   15718:	cmp	r6, #0
   1571c:	beq	15770 <argp_parse@@Base+0x2538>
   15720:	ldr	r3, [r7, #12]
   15724:	tst	r3, #8
   15728:	bne	15764 <argp_parse@@Base+0x252c>
   1572c:	ldr	r5, [r7, #4]
   15730:	sub	r3, r5, #1
   15734:	cmp	r3, #254	; 0xfe
   15738:	bhi	15764 <argp_parse@@Base+0x252c>
   1573c:	bl	1139c <__ctype_b_loc@plt>
   15740:	ldr	r1, [r0]
   15744:	lsl	r2, r5, #1
   15748:	ldrb	r3, [sl]
   1574c:	ldrh	r2, [r1, r2]
   15750:	sub	r5, r3, r5
   15754:	clz	r5, r5
   15758:	lsr	r5, r5, #5
   1575c:	ands	r2, r5, r2, lsr #14
   15760:	bne	157b4 <argp_parse@@Base+0x257c>
   15764:	subs	r6, r6, #1
   15768:	add	r7, r7, #24
   1576c:	bne	15720 <argp_parse@@Base+0x24e8>
   15770:	subs	fp, fp, #1
   15774:	add	r4, r4, #28
   15778:	bne	1570c <argp_parse@@Base+0x24d4>
   1577c:	add	r6, sp, #32
   15780:	ldm	r6, {r6, sl, fp}
   15784:	mov	r3, #0
   15788:	strb	r3, [r8]
   1578c:	ldr	r0, [sp, #24]
   15790:	bl	1421c <argp_parse@@Base+0xfe4>
   15794:	ldr	r0, [fp, #8]
   15798:	bl	1421c <argp_parse@@Base+0xfe4>
   1579c:	ldr	r3, [sp, #8]
   157a0:	str	r3, [fp]
   157a4:	ldr	r3, [sp, #12]
   157a8:	str	r9, [fp, #8]
   157ac:	str	r3, [fp, #4]
   157b0:	b	155c0 <argp_parse@@Base+0x2388>
   157b4:	ldr	r2, [sp, #16]
   157b8:	cmp	r9, r2
   157bc:	bcs	157ec <argp_parse@@Base+0x25b4>
   157c0:	ldrb	r2, [r9]
   157c4:	cmp	r2, r3
   157c8:	beq	157f0 <argp_parse@@Base+0x25b8>
   157cc:	mov	r2, r9
   157d0:	ldr	r0, [sp, #20]
   157d4:	b	157e4 <argp_parse@@Base+0x25ac>
   157d8:	ldrb	r1, [r2, #1]!
   157dc:	cmp	r1, r3
   157e0:	beq	157f0 <argp_parse@@Base+0x25b8>
   157e4:	cmp	r2, r0
   157e8:	bne	157d8 <argp_parse@@Base+0x25a0>
   157ec:	strb	r3, [r8], #1
   157f0:	add	sl, sl, #1
   157f4:	b	15764 <argp_parse@@Base+0x252c>
   157f8:	ldr	r1, [sp]
   157fc:	b	15550 <argp_parse@@Base+0x2318>
   15800:	ldr	r3, [sp, #44]	; 0x2c
   15804:	b	15580 <argp_parse@@Base+0x2348>
   15808:	ldr	r4, [sp, #8]
   1580c:	b	156d8 <argp_parse@@Base+0x24a0>
   15810:	ldr	r8, [sp, #16]
   15814:	b	15784 <argp_parse@@Base+0x254c>
   15818:	movw	r3, #41668	; 0xa2c4
   1581c:	movt	r3, #1
   15820:	movw	r1, #41836	; 0xa36c
   15824:	movt	r1, #1
   15828:	movw	r0, #41868	; 0xa38c
   1582c:	movt	r0, #1
   15830:	movw	r2, #474	; 0x1da
   15834:	bl	11570 <__assert_fail@plt>
   15838:	movw	r3, #41668	; 0xa2c4
   1583c:	movt	r3, #1
   15840:	movw	r1, #41836	; 0xa36c
   15844:	movt	r1, #1
   15848:	movw	r0, #41904	; 0xa3b0
   1584c:	movt	r0, #1
   15850:	mov	r2, #476	; 0x1dc
   15854:	bl	11570 <__assert_fail@plt>
   15858:	movw	r1, #41836	; 0xa36c
   1585c:	movt	r1, #1
   15860:	ldr	r3, [pc, #104]	; 158d0 <argp_parse@@Base+0x2698>
   15864:	movw	r0, #41964	; 0xa3ec
   15868:	movt	r0, #1
   1586c:	movw	r2, #970	; 0x3ca
   15870:	bl	11570 <__assert_fail@plt>
   15874:	movw	r3, #41668	; 0xa2c4
   15878:	movt	r3, #1
   1587c:	movw	r1, #41836	; 0xa36c
   15880:	movt	r1, #1
   15884:	movw	r0, #41848	; 0xa378
   15888:	movt	r0, #1
   1588c:	movw	r2, #450	; 0x1c2
   15890:	bl	11570 <__assert_fail@plt>
   15894:	movw	r1, #41836	; 0xa36c
   15898:	movt	r1, #1
   1589c:	ldr	r3, [pc, #44]	; 158d0 <argp_parse@@Base+0x2698>
   158a0:	movw	r0, #41992	; 0xa408
   158a4:	movt	r0, #1
   158a8:	mov	r2, #972	; 0x3cc
   158ac:	bl	11570 <__assert_fail@plt>
   158b0:	movw	r3, #41668	; 0xa2c4
   158b4:	movt	r3, #1
   158b8:	movw	r1, #41836	; 0xa36c
   158bc:	movt	r1, #1
   158c0:	movw	r0, #41852	; 0xa37c
   158c4:	movt	r0, #1
   158c8:	mov	r2, #460	; 0x1cc
   158cc:	bl	11570 <__assert_fail@plt>
   158d0:	ldrdeq	sl, [r1], -r0
   158d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   158d8:	ldr	r5, [r0, #4]
   158dc:	strd	r6, [sp, #8]
   158e0:	strd	r8, [sp, #16]
   158e4:	strd	sl, [sp, #24]
   158e8:	str	lr, [sp, #32]
   158ec:	sub	sp, sp, #12
   158f0:	cmp	r5, #0
   158f4:	ldr	r7, [r0]
   158f8:	ldr	r6, [r0, #8]
   158fc:	beq	159cc <argp_parse@@Base+0x2794>
   15900:	mov	sl, r3
   15904:	mov	r4, r7
   15908:	stm	sp, {r1, r2}
   1590c:	ldr	fp, [r4, #12]
   15910:	ands	r8, fp, #8
   15914:	movne	r0, #1
   15918:	movne	r8, #0
   1591c:	bne	15958 <argp_parse@@Base+0x2720>
   15920:	ldr	r9, [r4, #4]
   15924:	sub	r1, r9, #1
   15928:	cmp	r1, #254	; 0xfe
   1592c:	bhi	15954 <argp_parse@@Base+0x271c>
   15930:	bl	1139c <__ctype_b_loc@plt>
   15934:	ldr	r0, [r0]
   15938:	lsl	r1, r9, #1
   1593c:	ldrh	r1, [r0, r1]
   15940:	tst	r1, #16384	; 0x4000
   15944:	beq	15954 <argp_parse@@Base+0x271c>
   15948:	ldrb	r1, [r6]
   1594c:	cmp	r1, r9
   15950:	beq	1598c <argp_parse@@Base+0x2754>
   15954:	mov	r0, #1
   15958:	subs	r5, r5, #1
   1595c:	add	r4, r4, #24
   15960:	moveq	r0, #0
   15964:	cmp	r0, #0
   15968:	bne	1590c <argp_parse@@Base+0x26d4>
   1596c:	mov	r0, r8
   15970:	add	sp, sp, #12
   15974:	ldrd	r4, [sp]
   15978:	ldrd	r6, [sp, #8]
   1597c:	ldrd	r8, [sp, #16]
   15980:	ldrd	sl, [sp, #24]
   15984:	add	sp, sp, #32
   15988:	pop	{pc}		; (ldr pc, [sp], #4)
   1598c:	tst	fp, #4
   15990:	moveq	r7, r4
   15994:	tst	fp, #2
   15998:	movne	r0, #1
   1599c:	bne	159c4 <argp_parse@@Base+0x278c>
   159a0:	mov	r3, sl
   159a4:	mov	r1, r7
   159a8:	ldr	ip, [sp]
   159ac:	mov	r0, r4
   159b0:	ldr	r2, [sp, #4]
   159b4:	blx	ip
   159b8:	mov	r8, r0
   159bc:	clz	r0, r0
   159c0:	lsr	r0, r0, #5
   159c4:	add	r6, r6, #1
   159c8:	b	15958 <argp_parse@@Base+0x2720>
   159cc:	mov	r8, r5
   159d0:	b	1596c <argp_parse@@Base+0x2734>
   159d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   159d8:	strd	r6, [sp, #8]
   159dc:	strd	r8, [sp, #16]
   159e0:	strd	sl, [sp, #24]
   159e4:	add	fp, sp, #32
   159e8:	str	lr, [sp, #32]
   159ec:	sub	sp, sp, #20
   159f0:	ldr	r5, [r0, #4]
   159f4:	cmp	r5, #0
   159f8:	beq	15b48 <argp_parse@@Base+0x2910>
   159fc:	mov	r6, r0
   15a00:	ldr	r0, [r0, #8]
   15a04:	mov	r9, r1
   15a08:	bl	113b4 <strlen@plt>
   15a0c:	add	r3, r0, #8
   15a10:	ldr	r4, [r6]
   15a14:	movw	r7, #20360	; 0x4f88
   15a18:	movt	r7, #1
   15a1c:	bic	r3, r3, #7
   15a20:	sub	sp, sp, r3
   15a24:	mov	r8, sp
   15a28:	str	r8, [fp, #-40]	; 0xffffffd8
   15a2c:	ldr	r2, [r4, #20]
   15a30:	mov	r0, r4
   15a34:	sub	r3, fp, #40	; 0x28
   15a38:	mov	r1, r7
   15a3c:	add	r4, r4, #28
   15a40:	ldr	r2, [r2, #24]
   15a44:	bl	158d4 <argp_parse@@Base+0x269c>
   15a48:	subs	r5, r5, #1
   15a4c:	bne	15a2c <argp_parse@@Base+0x27f4>
   15a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15a54:	cmp	r3, r8
   15a58:	bhi	15b88 <argp_parse@@Base+0x2950>
   15a5c:	ldrd	r4, [r6]
   15a60:	cmp	r5, #0
   15a64:	beq	15b48 <argp_parse@@Base+0x2910>
   15a68:	movw	r7, #24784	; 0x60d0
   15a6c:	movt	r7, #1
   15a70:	ldr	r2, [r4, #20]
   15a74:	mov	r0, r4
   15a78:	mov	r3, r9
   15a7c:	mov	r1, r7
   15a80:	add	r4, r4, #28
   15a84:	ldr	r2, [r2, #24]
   15a88:	bl	158d4 <argp_parse@@Base+0x269c>
   15a8c:	subs	r5, r5, #1
   15a90:	bne	15a70 <argp_parse@@Base+0x2838>
   15a94:	ldm	r6, {r7, r8}
   15a98:	cmp	r8, #0
   15a9c:	beq	15b48 <argp_parse@@Base+0x2910>
   15aa0:	movw	r3, #42052	; 0xa444
   15aa4:	movt	r3, #1
   15aa8:	movw	sl, #42068	; 0xa454
   15aac:	movt	sl, #1
   15ab0:	add	r7, r7, #28
   15ab4:	str	r3, [fp, #-48]	; 0xffffffd0
   15ab8:	movw	r3, #42080	; 0xa460
   15abc:	movt	r3, #1
   15ac0:	str	r3, [fp, #-52]	; 0xffffffcc
   15ac4:	ldr	r6, [r7, #-28]	; 0xffffffe4
   15ac8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15acc:	cmp	r5, #0
   15ad0:	movne	r4, r6
   15ad4:	beq	15b3c <argp_parse@@Base+0x2904>
   15ad8:	ldr	r2, [r4]
   15adc:	cmp	r2, #0
   15ae0:	beq	15b30 <argp_parse@@Base+0x28f8>
   15ae4:	ldr	r1, [r4, #12]
   15ae8:	tst	r1, #4
   15aec:	moveq	r6, r4
   15af0:	tst	r1, #2
   15af4:	bne	15b30 <argp_parse@@Base+0x28f8>
   15af8:	ldr	r3, [r4, #8]
   15afc:	ldr	r0, [r6, #12]
   15b00:	cmp	r3, #0
   15b04:	orr	r1, r1, r0
   15b08:	and	r0, r1, #16
   15b0c:	beq	15b64 <argp_parse@@Base+0x292c>
   15b10:	cmp	r0, #0
   15b14:	bne	15b30 <argp_parse@@Base+0x28f8>
   15b18:	tst	r1, #1
   15b1c:	movne	r0, r9
   15b20:	ldrne	r1, [fp, #-48]	; 0xffffffd0
   15b24:	moveq	r1, sl
   15b28:	moveq	r0, r9
   15b2c:	bl	197c4 <argp_error@@Base+0x1520>
   15b30:	subs	r5, r5, #1
   15b34:	add	r4, r4, #24
   15b38:	bne	15ad8 <argp_parse@@Base+0x28a0>
   15b3c:	subs	r8, r8, #1
   15b40:	add	r7, r7, #28
   15b44:	bne	15ac4 <argp_parse@@Base+0x288c>
   15b48:	sub	sp, fp, #32
   15b4c:	ldrd	r4, [sp]
   15b50:	ldrd	r6, [sp, #8]
   15b54:	ldrd	r8, [sp, #16]
   15b58:	ldrd	sl, [sp, #24]
   15b5c:	add	sp, sp, #32
   15b60:	pop	{pc}		; (ldr pc, [sp], #4)
   15b64:	cmp	r0, #0
   15b68:	bne	15b30 <argp_parse@@Base+0x28f8>
   15b6c:	ldr	r3, [r6, #8]
   15b70:	cmp	r3, #0
   15b74:	bne	15b18 <argp_parse@@Base+0x28e0>
   15b78:	mov	r0, r9
   15b7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b80:	bl	197c4 <argp_error@@Base+0x1520>
   15b84:	b	15b30 <argp_parse@@Base+0x28f8>
   15b88:	add	r0, r3, #1
   15b8c:	mov	r2, r8
   15b90:	movw	r1, #42044	; 0xa43c
   15b94:	movt	r1, #1
   15b98:	str	r0, [fp, #-40]	; 0xffffffd8
   15b9c:	mov	r0, r9
   15ba0:	strb	r5, [r3]
   15ba4:	bl	197c4 <argp_error@@Base+0x1520>
   15ba8:	ldrd	r4, [r6]
   15bac:	cmp	r5, #0
   15bb0:	bne	15a68 <argp_parse@@Base+0x2830>
   15bb4:	b	15b48 <argp_parse@@Base+0x2910>
   15bb8:	ldr	r3, [r0, #16]
   15bbc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15bc0:	strd	r6, [sp, #8]
   15bc4:	strd	r8, [sp, #16]
   15bc8:	str	lr, [sp, #24]
   15bcc:	sub	sp, sp, #12
   15bd0:	cmp	r3, #0
   15bd4:	movne	r2, r3
   15bd8:	bne	15be4 <argp_parse@@Base+0x29ac>
   15bdc:	b	15ee4 <argp_parse@@Base+0x2cac>
   15be0:	mov	r2, ip
   15be4:	ldr	ip, [r2, #12]
   15be8:	cmp	ip, #0
   15bec:	bne	15be0 <argp_parse@@Base+0x29a8>
   15bf0:	ldr	lr, [r2, #8]
   15bf4:	ldr	r2, [r1, #16]
   15bf8:	cmp	r2, #0
   15bfc:	movne	ip, r2
   15c00:	bne	15c0c <argp_parse@@Base+0x29d4>
   15c04:	b	15edc <argp_parse@@Base+0x2ca4>
   15c08:	mov	ip, r4
   15c0c:	ldr	r4, [ip, #12]
   15c10:	cmp	r4, #0
   15c14:	bne	15c08 <argp_parse@@Base+0x29d0>
   15c18:	ldr	r4, [ip, #8]
   15c1c:	mvn	ip, r4
   15c20:	lsr	ip, ip, #31
   15c24:	cmp	ip, lr, lsr #31
   15c28:	subne	r4, lr, r4
   15c2c:	subeq	r4, r4, lr
   15c30:	cmp	r4, #0
   15c34:	bne	15c9c <argp_parse@@Base+0x2a64>
   15c38:	adds	r4, r2, #0
   15c3c:	movne	r4, #1
   15c40:	cmp	r3, #0
   15c44:	rsbeq	r4, r4, #0
   15c48:	rsbne	r4, r4, #1
   15c4c:	cmp	r4, #0
   15c50:	bne	15c9c <argp_parse@@Base+0x2a64>
   15c54:	cmp	r3, #0
   15c58:	mov	r5, r1
   15c5c:	mov	r6, r0
   15c60:	beq	15cf4 <argp_parse@@Base+0x2abc>
   15c64:	ldr	r0, [r2, #20]
   15c68:	ldr	ip, [r3, #20]
   15c6c:	cmp	ip, r0
   15c70:	bgt	15cb8 <argp_parse@@Base+0x2a80>
   15c74:	bge	15ce0 <argp_parse@@Base+0x2aa8>
   15c78:	ldr	r2, [r2, #12]
   15c7c:	ldr	r1, [r2, #20]
   15c80:	cmp	ip, r1
   15c84:	blt	15c78 <argp_parse@@Base+0x2a40>
   15c88:	mov	r1, r2
   15c8c:	mov	r0, r3
   15c90:	bl	14ed4 <argp_parse@@Base+0x1c9c>
   15c94:	subs	r4, r0, #0
   15c98:	mvneq	r4, #0
   15c9c:	mov	r0, r4
   15ca0:	add	sp, sp, #12
   15ca4:	ldrd	r4, [sp]
   15ca8:	ldrd	r6, [sp, #8]
   15cac:	ldrd	r8, [sp, #16]
   15cb0:	add	sp, sp, #24
   15cb4:	pop	{pc}		; (ldr pc, [sp], #4)
   15cb8:	ldr	r3, [r3, #12]
   15cbc:	ldr	r1, [r3, #20]
   15cc0:	cmp	r0, r1
   15cc4:	blt	15cb8 <argp_parse@@Base+0x2a80>
   15cc8:	mov	r1, r2
   15ccc:	mov	r0, r3
   15cd0:	bl	14ed4 <argp_parse@@Base+0x1c9c>
   15cd4:	subs	r4, r0, #0
   15cd8:	moveq	r4, #1
   15cdc:	b	15c9c <argp_parse@@Base+0x2a64>
   15ce0:	mov	r1, r2
   15ce4:	mov	r0, r3
   15ce8:	bl	14ed4 <argp_parse@@Base+0x1c9c>
   15cec:	subs	r4, r0, #0
   15cf0:	bne	15c9c <argp_parse@@Base+0x2a64>
   15cf4:	ldr	r4, [r5, #12]
   15cf8:	ldr	r3, [r6, #12]
   15cfc:	mvn	r2, r4
   15d00:	lsr	r2, r2, #31
   15d04:	cmp	r2, r3, lsr #31
   15d08:	subne	r4, r3, r4
   15d0c:	subeq	r4, r4, r3
   15d10:	cmp	r4, #0
   15d14:	bne	15c9c <argp_parse@@Base+0x2a64>
   15d18:	ldr	r7, [r6]
   15d1c:	ldr	r2, [r6, #4]
   15d20:	cmp	r2, #0
   15d24:	beq	15d50 <argp_parse@@Base+0x2b18>
   15d28:	add	r3, r7, #24
   15d2c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15d30:	cmp	r1, #0
   15d34:	beq	15d44 <argp_parse@@Base+0x2b0c>
   15d38:	ldr	r0, [r3, #-12]
   15d3c:	tst	r0, #2
   15d40:	beq	15eec <argp_parse@@Base+0x2cb4>
   15d44:	subs	r2, r2, #1
   15d48:	add	r3, r3, #24
   15d4c:	bne	15d2c <argp_parse@@Base+0x2af4>
   15d50:	mov	lr, #0
   15d54:	ldr	ip, [r5]
   15d58:	ldr	r2, [r5, #4]
   15d5c:	str	lr, [sp]
   15d60:	cmp	r2, lr
   15d64:	beq	15f48 <argp_parse@@Base+0x2d10>
   15d68:	add	r3, ip, #24
   15d6c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15d70:	cmp	r1, #0
   15d74:	beq	15d84 <argp_parse@@Base+0x2b4c>
   15d78:	ldr	r0, [r3, #-12]
   15d7c:	tst	r0, #2
   15d80:	beq	15d94 <argp_parse@@Base+0x2b5c>
   15d84:	subs	r2, r2, #1
   15d88:	add	r3, r3, #24
   15d8c:	bne	15d6c <argp_parse@@Base+0x2b34>
   15d90:	mov	r1, r2
   15d94:	ldr	r3, [r7, #12]
   15d98:	str	r1, [sp, #4]
   15d9c:	ands	r3, lr, r3, lsr #3
   15da0:	bne	15f08 <argp_parse@@Base+0x2cd0>
   15da4:	ldr	r3, [ip, #12]
   15da8:	tst	r3, #8
   15dac:	beq	15dd4 <argp_parse@@Base+0x2b9c>
   15db0:	ldr	r3, [sp, #4]
   15db4:	cmp	r3, #0
   15db8:	beq	15dd4 <argp_parse@@Base+0x2b9c>
   15dbc:	add	r0, sp, #4
   15dc0:	bl	1502c <argp_parse@@Base+0x1df4>
   15dc4:	cmp	r0, #0
   15dc8:	subne	r4, r4, #1
   15dcc:	cmp	r4, #0
   15dd0:	bne	15c9c <argp_parse@@Base+0x2a64>
   15dd4:	ldr	r2, [r6, #20]
   15dd8:	mov	r0, r6
   15ddc:	mov	r3, #0
   15de0:	movw	r1, #20436	; 0x4fd4
   15de4:	movt	r1, #1
   15de8:	ldr	r2, [r2, #24]
   15dec:	bl	158d4 <argp_parse@@Base+0x269c>
   15df0:	ldr	r2, [r5, #20]
   15df4:	uxtb	r6, r0
   15df8:	movw	r1, #20436	; 0x4fd4
   15dfc:	movt	r1, #1
   15e00:	mov	r0, r5
   15e04:	mov	r3, #0
   15e08:	ldr	r2, [r2, #24]
   15e0c:	bl	158d4 <argp_parse@@Base+0x269c>
   15e10:	cmp	r6, #0
   15e14:	uxtb	r5, r0
   15e18:	movne	r7, r6
   15e1c:	lslne	r4, r6, #2
   15e20:	bne	15e3c <argp_parse@@Base+0x2c04>
   15e24:	ldr	r3, [sp]
   15e28:	cmp	r3, #0
   15e2c:	ldrbne	r7, [r3]
   15e30:	moveq	r4, r6
   15e34:	moveq	r7, r6
   15e38:	lslne	r4, r7, #2
   15e3c:	cmp	r5, #0
   15e40:	movne	r8, r5
   15e44:	lslne	r9, r5, #2
   15e48:	bne	15e64 <argp_parse@@Base+0x2c2c>
   15e4c:	ldr	r3, [sp, #4]
   15e50:	cmp	r3, #0
   15e54:	ldrbne	r8, [r3]
   15e58:	moveq	r9, r5
   15e5c:	moveq	r8, r5
   15e60:	lslne	r9, r8, #2
   15e64:	bl	11378 <__ctype_tolower_loc@plt>
   15e68:	ldr	r3, [r0]
   15e6c:	ldr	r4, [r3, r4]
   15e70:	ldr	r3, [r3, r9]
   15e74:	subs	r4, r4, r3
   15e78:	bne	15c9c <argp_parse@@Base+0x2a64>
   15e7c:	subs	r4, r8, r7
   15e80:	bne	15c9c <argp_parse@@Base+0x2a64>
   15e84:	adds	r4, r5, #0
   15e88:	movne	r4, #1
   15e8c:	cmp	r6, #0
   15e90:	rsbeq	r4, r4, #0
   15e94:	rsbne	r4, r4, #1
   15e98:	cmp	r4, #0
   15e9c:	bne	15c9c <argp_parse@@Base+0x2a64>
   15ea0:	cmp	r6, #0
   15ea4:	bne	15c9c <argp_parse@@Base+0x2a64>
   15ea8:	ldrd	r0, [sp]
   15eac:	adds	r4, r1, #0
   15eb0:	movne	r4, #1
   15eb4:	cmp	r0, #0
   15eb8:	rsbeq	r4, r4, #0
   15ebc:	rsbne	r4, r4, #1
   15ec0:	cmp	r4, #0
   15ec4:	bne	15c9c <argp_parse@@Base+0x2a64>
   15ec8:	cmp	r0, #0
   15ecc:	beq	15c9c <argp_parse@@Base+0x2a64>
   15ed0:	bl	112e8 <strcasecmp@plt>
   15ed4:	mov	r4, r0
   15ed8:	b	15c9c <argp_parse@@Base+0x2a64>
   15edc:	ldr	r4, [r1, #12]
   15ee0:	b	15c1c <argp_parse@@Base+0x29e4>
   15ee4:	ldr	lr, [r0, #12]
   15ee8:	b	15bf4 <argp_parse@@Base+0x29bc>
   15eec:	str	r1, [sp]
   15ef0:	ldr	r2, [r5, #4]
   15ef4:	ldr	ip, [r5]
   15ef8:	cmp	r2, #0
   15efc:	beq	15f50 <argp_parse@@Base+0x2d18>
   15f00:	mov	lr, #1
   15f04:	b	15d68 <argp_parse@@Base+0x2b30>
   15f08:	mov	r0, sp
   15f0c:	bl	1502c <argp_parse@@Base+0x1df4>
   15f10:	cmp	r0, #0
   15f14:	beq	15f40 <argp_parse@@Base+0x2d08>
   15f18:	ldr	r3, [r5]
   15f1c:	ldr	r3, [r3, #12]
   15f20:	tst	r3, #8
   15f24:	moveq	r4, #1
   15f28:	beq	15c9c <argp_parse@@Base+0x2a64>
   15f2c:	ldr	r3, [sp, #4]
   15f30:	mov	r4, #1
   15f34:	cmp	r3, #0
   15f38:	beq	15c9c <argp_parse@@Base+0x2a64>
   15f3c:	b	15dbc <argp_parse@@Base+0x2b84>
   15f40:	ldr	ip, [r5]
   15f44:	b	15da4 <argp_parse@@Base+0x2b6c>
   15f48:	str	r2, [sp, #4]
   15f4c:	b	15dd4 <argp_parse@@Base+0x2b9c>
   15f50:	mov	r1, r2
   15f54:	mov	lr, #1
   15f58:	b	15d94 <argp_parse@@Base+0x2b5c>
   15f5c:	strd	r4, [sp, #-16]!
   15f60:	mov	r5, r1
   15f64:	mov	r4, r0
   15f68:	ldr	r2, [r0, #16]
   15f6c:	ldr	r1, [r0, #24]
   15f70:	ldr	r3, [r0, #28]
   15f74:	str	r6, [sp, #8]
   15f78:	str	lr, [sp, #12]
   15f7c:	sub	r3, r3, r1
   15f80:	cmp	r3, r2
   15f84:	bhi	15fec <argp_parse@@Base+0x2db4>
   15f88:	ldr	r1, [r4, #20]
   15f8c:	mov	r6, #32
   15f90:	cmp	r1, #0
   15f94:	subge	r5, r5, r1
   15f98:	b	15fc8 <argp_parse@@Base+0x2d90>
   15f9c:	ldr	r3, [r4, #28]
   15fa0:	ldr	r2, [r4, #32]
   15fa4:	cmp	r3, r2
   15fa8:	bcc	15fbc <argp_parse@@Base+0x2d84>
   15fac:	bl	197a4 <argp_error@@Base+0x1500>
   15fb0:	cmp	r0, #0
   15fb4:	beq	15fc8 <argp_parse@@Base+0x2d90>
   15fb8:	ldr	r3, [r4, #28]
   15fbc:	add	r2, r3, #1
   15fc0:	str	r2, [r4, #28]
   15fc4:	strb	r6, [r3]
   15fc8:	cmp	r5, #0
   15fcc:	mov	r1, #1
   15fd0:	mov	r0, r4
   15fd4:	sub	r5, r5, #1
   15fd8:	bgt	15f9c <argp_parse@@Base+0x2d64>
   15fdc:	ldrd	r4, [sp]
   15fe0:	ldr	r6, [sp, #8]
   15fe4:	add	sp, sp, #12
   15fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   15fec:	bl	19138 <argp_error@@Base+0xe94>
   15ff0:	b	15f88 <argp_parse@@Base+0x2d50>
   15ff4:	ldrd	r2, [r0, #24]
   15ff8:	strd	r4, [sp, #-16]!
   15ffc:	mov	r5, r1
   16000:	mov	r4, r0
   16004:	ldr	r1, [r0, #16]
   16008:	str	r6, [sp, #8]
   1600c:	str	lr, [sp, #12]
   16010:	sub	r2, r3, r2
   16014:	cmp	r2, r1
   16018:	movls	ip, r3
   1601c:	bhi	160c0 <argp_parse@@Base+0x2e88>
   16020:	ldr	r0, [r4, #8]
   16024:	ldr	r1, [r4, #20]
   16028:	ldr	r2, [r4, #32]
   1602c:	cmp	r1, #0
   16030:	addge	r5, r5, r1
   16034:	cmp	r5, r0
   16038:	bcc	16080 <argp_parse@@Base+0x2e48>
   1603c:	cmp	r3, r2
   16040:	bcs	16064 <argp_parse@@Base+0x2e2c>
   16044:	add	r1, r3, #1
   16048:	mov	r2, #10
   1604c:	str	r1, [r4, #28]
   16050:	strb	r2, [r3]
   16054:	ldrd	r4, [sp]
   16058:	ldr	r6, [sp, #8]
   1605c:	add	sp, sp, #12
   16060:	pop	{pc}		; (ldr pc, [sp], #4)
   16064:	mov	r1, #1
   16068:	mov	r0, r4
   1606c:	bl	197a4 <argp_error@@Base+0x1500>
   16070:	cmp	r0, #0
   16074:	beq	16054 <argp_parse@@Base+0x2e1c>
   16078:	ldr	r3, [r4, #28]
   1607c:	b	16044 <argp_parse@@Base+0x2e0c>
   16080:	cmp	r3, r2
   16084:	bcc	160a0 <argp_parse@@Base+0x2e68>
   16088:	mov	r1, #1
   1608c:	mov	r0, r4
   16090:	bl	197a4 <argp_error@@Base+0x1500>
   16094:	cmp	r0, #0
   16098:	beq	16054 <argp_parse@@Base+0x2e1c>
   1609c:	ldr	ip, [r4, #28]
   160a0:	add	r2, ip, #1
   160a4:	mov	r3, #32
   160a8:	str	r2, [r4, #28]
   160ac:	strb	r3, [ip]
   160b0:	ldrd	r4, [sp]
   160b4:	ldr	r6, [sp, #8]
   160b8:	add	sp, sp, #12
   160bc:	pop	{pc}		; (ldr pc, [sp], #4)
   160c0:	bl	19138 <argp_error@@Base+0xe94>
   160c4:	ldr	r3, [r4, #28]
   160c8:	mov	ip, r3
   160cc:	b	16020 <argp_parse@@Base+0x2de8>
   160d0:	strd	r4, [sp, #-16]!
   160d4:	ldr	r5, [r0, #8]
   160d8:	str	r6, [sp, #8]
   160dc:	str	lr, [sp, #12]
   160e0:	cmp	r5, #0
   160e4:	beq	16138 <argp_parse@@Base+0x2f00>
   160e8:	ldr	r2, [r0, #12]
   160ec:	ldr	r1, [r1, #12]
   160f0:	orr	r2, r2, r1
   160f4:	tst	r2, #16
   160f8:	bne	16124 <argp_parse@@Base+0x2eec>
   160fc:	tst	r2, #1
   16100:	mov	r6, r3
   16104:	mov	r4, r0
   16108:	beq	16148 <argp_parse@@Base+0x2f10>
   1610c:	movw	r1, #42088	; 0xa468
   16110:	movt	r1, #1
   16114:	ldr	r2, [r4, #4]
   16118:	mov	r3, r5
   1611c:	mov	r0, r6
   16120:	bl	197c4 <argp_error@@Base+0x1520>
   16124:	ldrd	r4, [sp]
   16128:	mov	r0, #0
   1612c:	ldr	r6, [sp, #8]
   16130:	add	sp, sp, #12
   16134:	pop	{pc}		; (ldr pc, [sp], #4)
   16138:	ldr	r5, [r1, #8]
   1613c:	cmp	r5, #0
   16140:	beq	16124 <argp_parse@@Base+0x2eec>
   16144:	b	160e8 <argp_parse@@Base+0x2eb0>
   16148:	mov	r0, r5
   1614c:	bl	113b4 <strlen@plt>
   16150:	add	r1, r0, #6
   16154:	mov	r0, r6
   16158:	bl	15ff4 <argp_parse@@Base+0x2dbc>
   1615c:	mov	r3, r5
   16160:	mov	r0, r6
   16164:	ldr	r2, [r4, #4]
   16168:	movw	r1, #42100	; 0xa474
   1616c:	movt	r1, #1
   16170:	bl	197c4 <argp_error@@Base+0x1520>
   16174:	b	16124 <argp_parse@@Base+0x2eec>
   16178:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1617c:	mov	r4, r3
   16180:	ldr	ip, [r0, #8]
   16184:	ldr	r3, [r0, #20]
   16188:	cmp	r3, #0
   1618c:	ldr	r3, [r0, #16]
   16190:	strd	r6, [sp, #8]
   16194:	strd	r8, [sp, #16]
   16198:	mov	r8, r2
   1619c:	ldr	r2, [r2]
   161a0:	strd	sl, [sp, #24]
   161a4:	mov	sl, r1
   161a8:	str	lr, [sp, #32]
   161ac:	sub	sp, sp, #28
   161b0:	ldr	r7, [sp, #64]	; 0x40
   161b4:	str	r3, [sp, #8]
   161b8:	str	ip, [sp, #12]
   161bc:	str	r2, [sp, #16]
   161c0:	beq	16390 <argp_parse@@Base+0x3158>
   161c4:	mov	r2, r0
   161c8:	mov	r1, #6
   161cc:	movt	r1, #512	; 0x200
   161d0:	mov	r3, sl
   161d4:	mov	r0, ip
   161d8:	bl	151c4 <argp_parse@@Base+0x1f8c>
   161dc:	mov	r9, r0
   161e0:	cmp	r9, #0
   161e4:	beq	16360 <argp_parse@@Base+0x3128>
   161e8:	mov	r1, #10
   161ec:	mov	r0, r9
   161f0:	bl	11258 <strchrnul@plt>
   161f4:	ldrb	r3, [r0]
   161f8:	mov	r5, r0
   161fc:	cmp	r3, #0
   16200:	moveq	r6, r9
   16204:	streq	r3, [sp, #20]
   16208:	beq	16258 <argp_parse@@Base+0x3020>
   1620c:	ldr	r3, [sp, #16]
   16210:	ldrb	r3, [r3]
   16214:	cmp	r3, #0
   16218:	beq	163b0 <argp_parse@@Base+0x3178>
   1621c:	mov	fp, #0
   16220:	mov	r5, r3
   16224:	add	r6, r0, #1
   16228:	add	fp, fp, #1
   1622c:	mov	r0, r6
   16230:	mov	r1, #10
   16234:	bl	11258 <strchrnul@plt>
   16238:	cmp	fp, r5
   1623c:	bne	16224 <argp_parse@@Base+0x2fec>
   16240:	mov	r5, r0
   16244:	ldr	r3, [r8]
   16248:	mov	r2, #1
   1624c:	str	r2, [sp, #20]
   16250:	add	r3, r3, r2
   16254:	str	r3, [r8]
   16258:	add	r1, r5, #1
   1625c:	mov	r0, r7
   16260:	sub	r1, r1, r6
   16264:	sub	fp, r5, r6
   16268:	bl	15ff4 <argp_parse@@Base+0x2dbc>
   1626c:	ldr	r0, [r7, #28]
   16270:	ldr	r2, [r7, #32]
   16274:	add	r3, r0, fp
   16278:	cmp	r2, r3
   1627c:	bcs	16298 <argp_parse@@Base+0x3060>
   16280:	mov	r1, fp
   16284:	mov	r0, r7
   16288:	bl	197a4 <argp_error@@Base+0x1500>
   1628c:	cmp	r0, #0
   16290:	beq	162b0 <argp_parse@@Base+0x3078>
   16294:	ldr	r0, [r7, #28]
   16298:	mov	r2, fp
   1629c:	mov	r1, r6
   162a0:	bl	11288 <memcpy@plt>
   162a4:	ldr	r3, [r7, #28]
   162a8:	add	fp, r3, fp
   162ac:	str	fp, [r7, #28]
   162b0:	ldr	r3, [sp, #12]
   162b4:	cmp	r3, r9
   162b8:	beq	162c4 <argp_parse@@Base+0x308c>
   162bc:	mov	r0, r9
   162c0:	bl	1421c <argp_parse@@Base+0xfe4>
   162c4:	ldr	r3, [sp, #8]
   162c8:	cmp	r3, #0
   162cc:	beq	16310 <argp_parse@@Base+0x30d8>
   162d0:	ldr	r2, [r3]
   162d4:	cmp	r2, #0
   162d8:	beq	16310 <argp_parse@@Base+0x30d8>
   162dc:	ldr	r6, [sp, #8]
   162e0:	mov	r3, r4
   162e4:	mov	r0, r2
   162e8:	mov	r1, sl
   162ec:	str	r7, [sp]
   162f0:	mov	r2, r8
   162f4:	bl	16178 <argp_parse@@Base+0x2f40>
   162f8:	ldr	r2, [r6, #16]!
   162fc:	clz	r3, r0
   16300:	lsr	r3, r3, #5
   16304:	cmp	r2, #0
   16308:	bne	162e4 <argp_parse@@Base+0x30ac>
   1630c:	mov	r4, r3
   16310:	ldr	r3, [sp, #20]
   16314:	cmp	r4, #0
   16318:	moveq	r3, #0
   1631c:	cmp	r3, #0
   16320:	beq	16384 <argp_parse@@Base+0x314c>
   16324:	ldrb	r3, [r5]
   16328:	ldr	r2, [sp, #16]
   1632c:	cmp	r3, #0
   16330:	ldrb	r0, [r2]
   16334:	beq	16398 <argp_parse@@Base+0x3160>
   16338:	add	r4, r0, #1
   1633c:	mov	r0, #1
   16340:	strb	r4, [r2]
   16344:	add	sp, sp, #28
   16348:	ldrd	r4, [sp]
   1634c:	ldrd	r6, [sp, #8]
   16350:	ldrd	r8, [sp, #16]
   16354:	ldrd	sl, [sp, #24]
   16358:	add	sp, sp, #32
   1635c:	pop	{pc}		; (ldr pc, [sp], #4)
   16360:	ldr	r3, [sp, #8]
   16364:	cmp	r3, #0
   16368:	beq	16384 <argp_parse@@Base+0x314c>
   1636c:	ldr	r3, [sp, #8]
   16370:	ldr	r2, [r3]
   16374:	cmp	r2, #0
   16378:	movne	r5, r9
   1637c:	strne	r5, [sp, #20]
   16380:	bne	162dc <argp_parse@@Base+0x30a4>
   16384:	clz	r0, r4
   16388:	lsr	r0, r0, #5
   1638c:	b	16344 <argp_parse@@Base+0x310c>
   16390:	ldr	r9, [sp, #12]
   16394:	b	161e0 <argp_parse@@Base+0x2fa8>
   16398:	cmp	r0, #0
   1639c:	beq	16344 <argp_parse@@Base+0x310c>
   163a0:	ldr	r2, [sp, #16]
   163a4:	mov	r0, r3
   163a8:	strb	r3, [r2]
   163ac:	b	16344 <argp_parse@@Base+0x310c>
   163b0:	mov	r6, r9
   163b4:	b	16244 <argp_parse@@Base+0x300c>
   163b8:	cmp	r1, #0
   163bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   163c0:	strd	r6, [sp, #8]
   163c4:	mov	r6, r2
   163c8:	strd	r8, [sp, #16]
   163cc:	mov	r8, r0
   163d0:	strd	sl, [sp, #24]
   163d4:	str	lr, [sp, #32]
   163d8:	sub	sp, sp, #12
   163dc:	beq	16408 <argp_parse@@Base+0x31d0>
   163e0:	ldr	r3, [r1, #20]
   163e4:	cmp	r3, #0
   163e8:	beq	16408 <argp_parse@@Base+0x31d0>
   163ec:	mov	r2, r1
   163f0:	mov	r1, #3
   163f4:	movt	r1, #512	; 0x200
   163f8:	ldr	r3, [r6, #16]
   163fc:	bl	151c4 <argp_parse@@Base+0x1f8c>
   16400:	mov	r4, r0
   16404:	b	1640c <argp_parse@@Base+0x31d4>
   16408:	mov	r4, r8
   1640c:	cmp	r4, #0
   16410:	beq	1642c <argp_parse@@Base+0x31f4>
   16414:	ldrb	r2, [r4]
   16418:	ldr	r3, [r6, #8]
   1641c:	cmp	r2, #0
   16420:	bne	16458 <argp_parse@@Base+0x3220>
   16424:	mov	r2, #1
   16428:	str	r2, [r3, #4]
   1642c:	cmp	r8, r4
   16430:	beq	16538 <argp_parse@@Base+0x3300>
   16434:	mov	r0, r4
   16438:	add	sp, sp, #12
   1643c:	ldrd	r4, [sp]
   16440:	ldrd	r6, [sp, #8]
   16444:	ldrd	r8, [sp, #16]
   16448:	ldrd	sl, [sp, #24]
   1644c:	ldr	lr, [sp, #32]
   16450:	add	sp, sp, #36	; 0x24
   16454:	b	1421c <argp_parse@@Base+0xfe4>
   16458:	ldr	r3, [r3]
   1645c:	ldr	r5, [r6, #4]
   16460:	cmp	r3, #0
   16464:	beq	164a4 <argp_parse@@Base+0x326c>
   16468:	ldr	r3, [r5, #28]
   1646c:	ldr	r2, [r5, #32]
   16470:	cmp	r3, r2
   16474:	bcc	16490 <argp_parse@@Base+0x3258>
   16478:	mov	r1, #1
   1647c:	mov	r0, r5
   16480:	bl	197a4 <argp_error@@Base+0x1500>
   16484:	cmp	r0, #0
   16488:	ldrne	r3, [r5, #28]
   1648c:	beq	164a0 <argp_parse@@Base+0x3268>
   16490:	add	r1, r3, #1
   16494:	mov	r2, #10
   16498:	str	r1, [r5, #28]
   1649c:	strb	r2, [r3]
   164a0:	ldr	r5, [r6, #4]
   164a4:	movw	r9, #45732	; 0xb2a4
   164a8:	movt	r9, #2
   164ac:	mov	r0, r5
   164b0:	ldr	r1, [r9, #24]
   164b4:	bl	15f5c <argp_parse@@Base+0x2d24>
   164b8:	ldr	r5, [r6, #4]
   164bc:	ldr	sl, [r9, #24]
   164c0:	ldr	r1, [r5, #16]
   164c4:	ldr	r3, [r5, #24]
   164c8:	ldr	r7, [r5, #28]
   164cc:	sub	r3, r7, r3
   164d0:	cmp	r3, r1
   164d4:	movls	fp, r5
   164d8:	strls	sl, [r5, #4]
   164dc:	bhi	165d4 <argp_parse@@Base+0x339c>
   164e0:	mov	r0, r4
   164e4:	str	sl, [fp, #12]
   164e8:	bl	113b4 <strlen@plt>
   164ec:	subs	r9, r0, #0
   164f0:	bne	16584 <argp_parse@@Base+0x334c>
   164f4:	ldr	r2, [r5, #16]
   164f8:	ldr	r3, [r5, #24]
   164fc:	sub	r3, r7, r3
   16500:	cmp	r3, r2
   16504:	movls	r9, r5
   16508:	bhi	16570 <argp_parse@@Base+0x3338>
   1650c:	ldr	r3, [r9, #32]
   16510:	mov	r2, #0
   16514:	str	r2, [r5, #4]
   16518:	cmp	r3, r7
   1651c:	bls	16554 <argp_parse@@Base+0x331c>
   16520:	add	r2, r7, #1
   16524:	mov	r3, #10
   16528:	str	r2, [r9, #28]
   1652c:	strb	r3, [r7]
   16530:	ldr	r3, [r6, #8]
   16534:	b	16424 <argp_parse@@Base+0x31ec>
   16538:	add	sp, sp, #12
   1653c:	ldrd	r4, [sp]
   16540:	ldrd	r6, [sp, #8]
   16544:	ldrd	r8, [sp, #16]
   16548:	ldrd	sl, [sp, #24]
   1654c:	add	sp, sp, #32
   16550:	pop	{pc}		; (ldr pc, [sp], #4)
   16554:	mov	r1, #1
   16558:	mov	r0, r9
   1655c:	bl	197a4 <argp_error@@Base+0x1500>
   16560:	cmp	r0, #0
   16564:	ldrne	r7, [r9, #28]
   16568:	bne	16520 <argp_parse@@Base+0x32e8>
   1656c:	b	16530 <argp_parse@@Base+0x32f8>
   16570:	mov	r0, r5
   16574:	bl	19138 <argp_error@@Base+0xe94>
   16578:	ldr	r9, [r6, #4]
   1657c:	ldr	r7, [r9, #28]
   16580:	b	1650c <argp_parse@@Base+0x32d4>
   16584:	ldr	r2, [r5, #32]
   16588:	add	r3, r7, r9
   1658c:	cmp	r2, r3
   16590:	bcs	165ac <argp_parse@@Base+0x3374>
   16594:	mov	r1, r9
   16598:	mov	r0, r5
   1659c:	bl	197a4 <argp_error@@Base+0x1500>
   165a0:	cmp	r0, #0
   165a4:	beq	165c8 <argp_parse@@Base+0x3390>
   165a8:	ldr	r7, [r5, #28]
   165ac:	mov	r2, r9
   165b0:	mov	r0, r7
   165b4:	mov	r1, r4
   165b8:	bl	11288 <memcpy@plt>
   165bc:	ldr	r3, [r5, #28]
   165c0:	add	r9, r3, r9
   165c4:	str	r9, [r5, #28]
   165c8:	ldr	r5, [r6, #4]
   165cc:	ldr	r7, [r5, #28]
   165d0:	b	164f4 <argp_parse@@Base+0x32bc>
   165d4:	mov	r0, r5
   165d8:	str	sl, [sp, #4]
   165dc:	bl	19138 <argp_error@@Base+0xe94>
   165e0:	ldr	fp, [r6, #4]
   165e4:	ldr	r2, [sp, #4]
   165e8:	ldr	sl, [r9, #24]
   165ec:	ldr	r1, [fp, #16]
   165f0:	ldr	r3, [fp, #24]
   165f4:	ldr	r7, [fp, #28]
   165f8:	str	r2, [r5, #4]
   165fc:	sub	r3, r7, r3
   16600:	cmp	r3, r1
   16604:	bls	1661c <argp_parse@@Base+0x33e4>
   16608:	mov	r0, fp
   1660c:	bl	19138 <argp_error@@Base+0xe94>
   16610:	ldr	r5, [r6, #4]
   16614:	ldr	r7, [r5, #28]
   16618:	b	164e0 <argp_parse@@Base+0x32a8>
   1661c:	mov	r5, fp
   16620:	b	164e0 <argp_parse@@Base+0x32a8>
   16624:	ldr	r3, [r1, #12]
   16628:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1662c:	mov	r4, r1
   16630:	ldr	r5, [r1, #4]
   16634:	strd	r6, [sp, #8]
   16638:	mov	r7, r0
   1663c:	str	r8, [sp, #16]
   16640:	cmp	r3, #0
   16644:	str	lr, [sp, #20]
   16648:	beq	16774 <argp_parse@@Base+0x353c>
   1664c:	ldr	r2, [r1]
   16650:	ldr	r3, [r1, #8]
   16654:	ldr	r6, [r2, #16]
   16658:	ldr	r8, [r3]
   1665c:	ldr	r3, [r3, #4]
   16660:	cmp	r3, #0
   16664:	cmpne	r8, #0
   16668:	bne	1671c <argp_parse@@Base+0x34e4>
   1666c:	cmp	r6, #0
   16670:	beq	166f4 <argp_parse@@Base+0x34bc>
   16674:	ldr	r0, [r6]
   16678:	cmp	r0, #0
   1667c:	beq	166f4 <argp_parse@@Base+0x34bc>
   16680:	ldrb	r3, [r0]
   16684:	cmp	r3, #0
   16688:	beq	166f4 <argp_parse@@Base+0x34bc>
   1668c:	cmp	r8, #0
   16690:	beq	166c0 <argp_parse@@Base+0x3488>
   16694:	ldr	r3, [r8, #16]
   16698:	cmp	r3, r6
   1669c:	beq	166f4 <argp_parse@@Base+0x34bc>
   166a0:	cmp	r3, #0
   166a4:	beq	166c0 <argp_parse@@Base+0x3488>
   166a8:	ldr	r3, [r3, #12]
   166ac:	cmp	r3, #0
   166b0:	cmpne	r6, r3
   166b4:	bne	166a8 <argp_parse@@Base+0x3470>
   166b8:	cmp	r6, r3
   166bc:	beq	166f4 <argp_parse@@Base+0x34bc>
   166c0:	mov	r2, r4
   166c4:	ldr	r1, [r6, #16]
   166c8:	ldr	r8, [r5, #12]
   166cc:	bl	163b8 <argp_parse@@Base+0x3180>
   166d0:	ldr	r6, [r4, #4]
   166d4:	ldr	r2, [r6, #16]
   166d8:	ldr	r1, [r6, #24]
   166dc:	ldr	r3, [r6, #28]
   166e0:	sub	r3, r3, r1
   166e4:	cmp	r3, r2
   166e8:	movls	r5, r6
   166ec:	bhi	167c4 <argp_parse@@Base+0x358c>
   166f0:	str	r8, [r6, #12]
   166f4:	mov	r3, #0
   166f8:	str	r3, [r4, #12]
   166fc:	mov	r1, r7
   16700:	mov	r0, r5
   16704:	ldrd	r4, [sp]
   16708:	ldrd	r6, [sp, #8]
   1670c:	ldr	r8, [sp, #16]
   16710:	ldr	lr, [sp, #20]
   16714:	add	sp, sp, #24
   16718:	b	15f5c <argp_parse@@Base+0x2d24>
   1671c:	ldr	r2, [r2, #12]
   16720:	ldr	r3, [r8, #12]
   16724:	cmp	r2, r3
   16728:	beq	1666c <argp_parse@@Base+0x3434>
   1672c:	ldr	r3, [r5, #28]
   16730:	ldr	r2, [r5, #32]
   16734:	cmp	r3, r2
   16738:	bcc	16754 <argp_parse@@Base+0x351c>
   1673c:	mov	r1, #1
   16740:	mov	r0, r5
   16744:	bl	197a4 <argp_error@@Base+0x1500>
   16748:	cmp	r0, #0
   1674c:	ldrne	r3, [r5, #28]
   16750:	beq	16764 <argp_parse@@Base+0x352c>
   16754:	add	r1, r3, #1
   16758:	mov	r2, #10
   1675c:	str	r1, [r5, #28]
   16760:	strb	r2, [r3]
   16764:	cmp	r6, #0
   16768:	ldr	r5, [r4, #4]
   1676c:	bne	16674 <argp_parse@@Base+0x343c>
   16770:	b	166f4 <argp_parse@@Base+0x34bc>
   16774:	ldr	r3, [r5, #28]
   16778:	ldr	r1, [r5, #32]
   1677c:	add	r2, r3, #2
   16780:	cmp	r1, r2
   16784:	bcs	167a0 <argp_parse@@Base+0x3568>
   16788:	mov	r1, #2
   1678c:	mov	r0, r5
   16790:	bl	197a4 <argp_error@@Base+0x1500>
   16794:	cmp	r0, #0
   16798:	beq	167bc <argp_parse@@Base+0x3584>
   1679c:	ldr	r3, [r5, #28]
   167a0:	movw	r2, #42112	; 0xa480
   167a4:	movt	r2, #1
   167a8:	ldrh	r2, [r2]
   167ac:	strh	r2, [r3]
   167b0:	ldr	r3, [r5, #28]
   167b4:	add	r3, r3, #2
   167b8:	str	r3, [r5, #28]
   167bc:	ldr	r5, [r4, #4]
   167c0:	b	166fc <argp_parse@@Base+0x34c4>
   167c4:	mov	r0, r6
   167c8:	bl	19138 <argp_error@@Base+0xe94>
   167cc:	ldr	r5, [r4, #4]
   167d0:	b	166f0 <argp_parse@@Base+0x34b8>
   167d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   167d8:	strd	r6, [sp, #8]
   167dc:	mov	r7, r0
   167e0:	ldr	r6, [r0, #12]
   167e4:	strd	r8, [sp, #16]
   167e8:	mov	r8, r2
   167ec:	strd	sl, [sp, #24]
   167f0:	mov	sl, r3
   167f4:	mov	fp, r1
   167f8:	ldr	r3, [r0, #16]
   167fc:	str	lr, [sp, #32]
   16800:	sub	sp, sp, #28
   16804:	cmp	r6, #0
   16808:	ldr	r5, [sp, #68]	; 0x44
   1680c:	str	r3, [sp, #8]
   16810:	ldr	r3, [r0, #20]
   16814:	beq	16b84 <argp_parse@@Base+0x394c>
   16818:	mov	r1, #11
   1681c:	mov	r0, r6
   16820:	str	r3, [sp, #12]
   16824:	bl	113c0 <strchr@plt>
   16828:	cmp	r8, #0
   1682c:	mov	r9, r0
   16830:	ldr	r3, [sp, #12]
   16834:	bne	16a80 <argp_parse@@Base+0x3848>
   16838:	cmp	r0, #0
   1683c:	beq	16d7c <argp_parse@@Base+0x3b44>
   16840:	subs	r1, r0, r6
   16844:	movne	r4, #1
   16848:	moveq	r4, #0
   1684c:	cmp	r3, #0
   16850:	str	r1, [sp, #20]
   16854:	beq	16d20 <argp_parse@@Base+0x3ae8>
   16858:	cmp	r1, #0
   1685c:	beq	16d70 <argp_parse@@Base+0x3b38>
   16860:	mov	r0, r6
   16864:	mov	r4, #1
   16868:	bl	1127c <strndup@plt>
   1686c:	adds	r3, r0, #0
   16870:	mov	r6, r0
   16874:	movne	r3, #1
   16878:	str	r3, [sp, #16]
   1687c:	mov	r1, fp
   16880:	mov	r0, r7
   16884:	bl	140b8 <argp_parse@@Base+0xe80>
   16888:	mov	r2, r0
   1688c:	mov	r1, r6
   16890:	ldr	r3, [r7, #20]
   16894:	mov	r0, #1
   16898:	movt	r0, #512	; 0x200
   1689c:	str	r2, [sp, #12]
   168a0:	blx	r3
   168a4:	subs	r9, r0, #0
   168a8:	moveq	r4, r9
   168ac:	beq	1693c <argp_parse@@Base+0x3704>
   168b0:	cmp	r6, r9
   168b4:	movne	r4, #0
   168b8:	andeq	r4, r4, #1
   168bc:	cmp	sl, #0
   168c0:	ldr	r2, [r5, #28]
   168c4:	bne	16bc8 <argp_parse@@Base+0x3990>
   168c8:	cmp	r4, #0
   168cc:	beq	16b24 <argp_parse@@Base+0x38ec>
   168d0:	ldr	r3, [sp, #20]
   168d4:	ldr	r0, [r5, #32]
   168d8:	add	r1, r2, r3
   168dc:	cmp	r0, r1
   168e0:	bcs	16adc <argp_parse@@Base+0x38a4>
   168e4:	mov	r1, r3
   168e8:	mov	r0, r5
   168ec:	bl	197a4 <argp_error@@Base+0x1500>
   168f0:	cmp	r0, #0
   168f4:	ldr	r2, [r5, #28]
   168f8:	bne	16adc <argp_parse@@Base+0x38a4>
   168fc:	ldr	r0, [r5, #16]
   16900:	ldr	r1, [r5, #24]
   16904:	sub	r2, r2, r1
   16908:	cmp	r2, r0
   1690c:	bhi	16c10 <argp_parse@@Base+0x39d8>
   16910:	ldr	r1, [r5, #4]
   16914:	ldr	r2, [r5, #20]
   16918:	bic	r2, r2, r2, asr #31
   1691c:	cmp	r1, r2
   16920:	bcc	16bec <argp_parse@@Base+0x39b4>
   16924:	cmp	r9, r6
   16928:	moveq	r4, #1
   1692c:	beq	1693c <argp_parse@@Base+0x3704>
   16930:	mov	r0, r9
   16934:	mov	r4, #1
   16938:	bl	1421c <argp_parse@@Base+0xfe4>
   1693c:	ldr	r3, [sp, #16]
   16940:	cmp	r3, #0
   16944:	beq	1695c <argp_parse@@Base+0x3724>
   16948:	ldr	r3, [r7, #20]
   1694c:	cmp	r3, #0
   16950:	beq	169dc <argp_parse@@Base+0x37a4>
   16954:	mov	r0, r6
   16958:	bl	1421c <argp_parse@@Base+0xfe4>
   1695c:	cmp	r8, #0
   16960:	beq	169dc <argp_parse@@Base+0x37a4>
   16964:	ldr	r3, [r7, #20]
   16968:	cmp	r3, #0
   1696c:	beq	169dc <argp_parse@@Base+0x37a4>
   16970:	mov	r0, #4
   16974:	movt	r0, #512	; 0x200
   16978:	ldr	r2, [sp, #12]
   1697c:	mov	r1, #0
   16980:	blx	r3
   16984:	subs	r6, r0, #0
   16988:	beq	169dc <argp_parse@@Base+0x37a4>
   1698c:	orrs	r3, sl, r4
   16990:	bne	16cac <argp_parse@@Base+0x3a74>
   16994:	mov	r0, r6
   16998:	bl	113b4 <strlen@plt>
   1699c:	subs	r4, r0, #0
   169a0:	bne	16c64 <argp_parse@@Base+0x3a2c>
   169a4:	mov	r0, r6
   169a8:	bl	1421c <argp_parse@@Base+0xfe4>
   169ac:	ldr	r2, [r5, #16]
   169b0:	ldr	r1, [r5, #24]
   169b4:	ldr	r3, [r5, #28]
   169b8:	sub	r3, r3, r1
   169bc:	cmp	r3, r2
   169c0:	bhi	16cf8 <argp_parse@@Base+0x3ac0>
   169c4:	ldr	r2, [r5, #4]
   169c8:	ldr	r3, [r5, #20]
   169cc:	bic	r3, r3, r3, asr #31
   169d0:	cmp	r2, r3
   169d4:	bcc	16cd0 <argp_parse@@Base+0x3a98>
   169d8:	mov	r4, #1
   169dc:	ldr	r7, [sp, #8]
   169e0:	cmp	r7, #0
   169e4:	beq	16a60 <argp_parse@@Base+0x3828>
   169e8:	ldr	r3, [r7]
   169ec:	cmp	r3, #0
   169f0:	beq	16a60 <argp_parse@@Base+0x3828>
   169f4:	ldr	r2, [sp, #64]	; 0x40
   169f8:	eor	r6, r2, #1
   169fc:	eor	r2, r4, #1
   16a00:	orr	r2, r2, r6
   16a04:	and	r6, r6, #1
   16a08:	tst	r2, #1
   16a0c:	beq	16d30 <argp_parse@@Base+0x3af8>
   16a10:	ldr	r9, [sp, #64]	; 0x40
   16a14:	orrs	r2, r4, sl
   16a18:	mov	r0, r3
   16a1c:	str	r9, [sp]
   16a20:	movne	r3, #1
   16a24:	moveq	r3, #0
   16a28:	str	r5, [sp, #4]
   16a2c:	mov	r2, r8
   16a30:	mov	r1, fp
   16a34:	bl	167d4 <argp_parse@@Base+0x359c>
   16a38:	ldr	r3, [r7, #16]
   16a3c:	orr	r4, r4, r0
   16a40:	add	r7, r7, #16
   16a44:	cmp	r3, #0
   16a48:	beq	16a60 <argp_parse@@Base+0x3828>
   16a4c:	cmp	r4, #0
   16a50:	movne	r2, r6
   16a54:	moveq	r2, #1
   16a58:	cmp	r2, #0
   16a5c:	bne	16a14 <argp_parse@@Base+0x37dc>
   16a60:	mov	r0, r4
   16a64:	add	sp, sp, #28
   16a68:	ldrd	r4, [sp]
   16a6c:	ldrd	r6, [sp, #8]
   16a70:	ldrd	r8, [sp, #16]
   16a74:	ldrd	sl, [sp, #24]
   16a78:	add	sp, sp, #32
   16a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a80:	cmp	r0, #0
   16a84:	beq	16d04 <argp_parse@@Base+0x3acc>
   16a88:	cmp	r3, #0
   16a8c:	add	r6, r0, #1
   16a90:	movne	r1, fp
   16a94:	movne	r0, r7
   16a98:	beq	16b00 <argp_parse@@Base+0x38c8>
   16a9c:	bl	140b8 <argp_parse@@Base+0xe80>
   16aa0:	ldr	r3, [r7, #20]
   16aa4:	str	r0, [sp, #12]
   16aa8:	mov	r0, #2
   16aac:	movt	r0, #512	; 0x200
   16ab0:	mov	r1, r6
   16ab4:	ldr	r2, [sp, #12]
   16ab8:	blx	r3
   16abc:	subs	r9, r0, #0
   16ac0:	moveq	r4, r9
   16ac4:	beq	1695c <argp_parse@@Base+0x3724>
   16ac8:	mov	r3, #0
   16acc:	mov	r4, r3
   16ad0:	str	r3, [sp, #16]
   16ad4:	str	r3, [sp, #20]
   16ad8:	b	168b0 <argp_parse@@Base+0x3678>
   16adc:	ldr	r4, [sp, #20]
   16ae0:	mov	r0, r2
   16ae4:	mov	r1, r6
   16ae8:	mov	r2, r4
   16aec:	bl	11288 <memcpy@plt>
   16af0:	ldr	r2, [r5, #28]
   16af4:	add	r2, r2, r4
   16af8:	str	r2, [r5, #28]
   16afc:	b	168fc <argp_parse@@Base+0x36c4>
   16b00:	cmp	r6, #0
   16b04:	moveq	r4, r6
   16b08:	beq	169dc <argp_parse@@Base+0x37a4>
   16b0c:	cmp	sl, #0
   16b10:	ldr	r2, [r5, #28]
   16b14:	bne	16bb4 <argp_parse@@Base+0x397c>
   16b18:	mov	r9, r6
   16b1c:	str	sl, [sp, #12]
   16b20:	str	sl, [sp, #16]
   16b24:	mov	r0, r9
   16b28:	str	r2, [sp, #20]
   16b2c:	bl	113b4 <strlen@plt>
   16b30:	subs	r4, r0, #0
   16b34:	ldr	r2, [sp, #20]
   16b38:	beq	168fc <argp_parse@@Base+0x36c4>
   16b3c:	ldr	r0, [r5, #32]
   16b40:	add	r1, r2, r4
   16b44:	cmp	r0, r1
   16b48:	bcs	16b64 <argp_parse@@Base+0x392c>
   16b4c:	mov	r1, r4
   16b50:	mov	r0, r5
   16b54:	bl	197a4 <argp_error@@Base+0x1500>
   16b58:	cmp	r0, #0
   16b5c:	ldr	r2, [r5, #28]
   16b60:	beq	168fc <argp_parse@@Base+0x36c4>
   16b64:	mov	r0, r2
   16b68:	mov	r1, r9
   16b6c:	mov	r2, r4
   16b70:	bl	11288 <memcpy@plt>
   16b74:	ldr	r2, [r5, #28]
   16b78:	add	r2, r2, r4
   16b7c:	str	r2, [r5, #28]
   16b80:	b	168fc <argp_parse@@Base+0x36c4>
   16b84:	cmp	r3, #0
   16b88:	beq	16d18 <argp_parse@@Base+0x3ae0>
   16b8c:	bl	140b8 <argp_parse@@Base+0xe80>
   16b90:	mov	r2, #1
   16b94:	movt	r2, #512	; 0x200
   16b98:	str	r0, [sp, #12]
   16b9c:	cmp	r8, #0
   16ba0:	mov	r0, #2
   16ba4:	movt	r0, #512	; 0x200
   16ba8:	moveq	r0, r2
   16bac:	ldr	r3, [r7, #20]
   16bb0:	b	16ab0 <argp_parse@@Base+0x3878>
   16bb4:	mov	r4, #0
   16bb8:	mov	r9, r6
   16bbc:	str	r4, [sp, #12]
   16bc0:	str	r4, [sp, #16]
   16bc4:	str	r4, [sp, #20]
   16bc8:	ldr	r1, [r5, #32]
   16bcc:	cmp	r1, r2
   16bd0:	bls	16c1c <argp_parse@@Base+0x39e4>
   16bd4:	add	r0, r2, #1
   16bd8:	mov	r1, #10
   16bdc:	str	r0, [r5, #28]
   16be0:	strb	r1, [r2]
   16be4:	ldr	r2, [r5, #28]
   16be8:	b	168c8 <argp_parse@@Base+0x3690>
   16bec:	ldr	r2, [r5, #28]
   16bf0:	ldr	r1, [r5, #32]
   16bf4:	cmp	r2, r1
   16bf8:	bcs	16c38 <argp_parse@@Base+0x3a00>
   16bfc:	add	r0, r2, #1
   16c00:	mov	r1, #10
   16c04:	str	r0, [r5, #28]
   16c08:	strb	r1, [r2]
   16c0c:	b	16924 <argp_parse@@Base+0x36ec>
   16c10:	mov	r0, r5
   16c14:	bl	19138 <argp_error@@Base+0xe94>
   16c18:	b	16910 <argp_parse@@Base+0x36d8>
   16c1c:	mov	r1, #1
   16c20:	mov	r0, r5
   16c24:	bl	197a4 <argp_error@@Base+0x1500>
   16c28:	cmp	r0, #0
   16c2c:	ldr	r2, [r5, #28]
   16c30:	bne	16bd4 <argp_parse@@Base+0x399c>
   16c34:	b	168c8 <argp_parse@@Base+0x3690>
   16c38:	mov	r1, #1
   16c3c:	mov	r0, r5
   16c40:	bl	197a4 <argp_error@@Base+0x1500>
   16c44:	cmp	r0, #0
   16c48:	beq	16924 <argp_parse@@Base+0x36ec>
   16c4c:	ldr	r2, [r5, #28]
   16c50:	mov	r1, #10
   16c54:	add	r0, r2, #1
   16c58:	str	r0, [r5, #28]
   16c5c:	strb	r1, [r2]
   16c60:	b	16924 <argp_parse@@Base+0x36ec>
   16c64:	ldr	r0, [r5, #28]
   16c68:	ldr	r2, [r5, #32]
   16c6c:	add	r3, r0, r4
   16c70:	cmp	r2, r3
   16c74:	bcs	16c90 <argp_parse@@Base+0x3a58>
   16c78:	mov	r1, r4
   16c7c:	mov	r0, r5
   16c80:	bl	197a4 <argp_error@@Base+0x1500>
   16c84:	cmp	r0, #0
   16c88:	beq	169a4 <argp_parse@@Base+0x376c>
   16c8c:	ldr	r0, [r5, #28]
   16c90:	mov	r2, r4
   16c94:	mov	r1, r6
   16c98:	bl	11288 <memcpy@plt>
   16c9c:	ldr	r3, [r5, #28]
   16ca0:	add	r4, r3, r4
   16ca4:	str	r4, [r5, #28]
   16ca8:	b	169a4 <argp_parse@@Base+0x376c>
   16cac:	ldr	r3, [r5, #28]
   16cb0:	ldr	r2, [r5, #32]
   16cb4:	cmp	r3, r2
   16cb8:	bcs	16d54 <argp_parse@@Base+0x3b1c>
   16cbc:	add	r1, r3, #1
   16cc0:	mov	r2, #10
   16cc4:	str	r1, [r5, #28]
   16cc8:	strb	r2, [r3]
   16ccc:	b	16994 <argp_parse@@Base+0x375c>
   16cd0:	ldr	r3, [r5, #28]
   16cd4:	ldr	r2, [r5, #32]
   16cd8:	cmp	r3, r2
   16cdc:	bcs	16d38 <argp_parse@@Base+0x3b00>
   16ce0:	add	r1, r3, #1
   16ce4:	mov	r2, #10
   16ce8:	mov	r4, #1
   16cec:	str	r1, [r5, #28]
   16cf0:	strb	r2, [r3]
   16cf4:	b	169dc <argp_parse@@Base+0x37a4>
   16cf8:	mov	r0, r5
   16cfc:	bl	19138 <argp_error@@Base+0xe94>
   16d00:	b	169c4 <argp_parse@@Base+0x378c>
   16d04:	cmp	r3, #0
   16d08:	movne	r1, fp
   16d0c:	movne	r0, r7
   16d10:	movne	r6, r9
   16d14:	bne	16a9c <argp_parse@@Base+0x3864>
   16d18:	mov	r4, r3
   16d1c:	b	169dc <argp_parse@@Base+0x37a4>
   16d20:	mov	r9, r6
   16d24:	str	r8, [sp, #12]
   16d28:	str	r4, [sp, #16]
   16d2c:	b	168b0 <argp_parse@@Base+0x3678>
   16d30:	mov	r4, #1
   16d34:	b	16a60 <argp_parse@@Base+0x3828>
   16d38:	mov	r1, #1
   16d3c:	mov	r0, r5
   16d40:	bl	197a4 <argp_error@@Base+0x1500>
   16d44:	cmp	r0, #0
   16d48:	beq	169d8 <argp_parse@@Base+0x37a0>
   16d4c:	ldr	r3, [r5, #28]
   16d50:	b	16ce0 <argp_parse@@Base+0x3aa8>
   16d54:	mov	r1, #1
   16d58:	mov	r0, r5
   16d5c:	bl	197a4 <argp_error@@Base+0x1500>
   16d60:	cmp	r0, #0
   16d64:	beq	16994 <argp_parse@@Base+0x375c>
   16d68:	ldr	r3, [r5, #28]
   16d6c:	b	16cbc <argp_parse@@Base+0x3a84>
   16d70:	ldr	r4, [sp, #20]
   16d74:	str	r4, [sp, #16]
   16d78:	b	1687c <argp_parse@@Base+0x3644>
   16d7c:	cmp	r3, #0
   16d80:	beq	16b0c <argp_parse@@Base+0x38d4>
   16d84:	mov	r1, fp
   16d88:	mov	r0, r7
   16d8c:	bl	140b8 <argp_parse@@Base+0xe80>
   16d90:	str	r0, [sp, #12]
   16d94:	mov	r0, #1
   16d98:	movt	r0, #512	; 0x200
   16d9c:	ldr	r3, [r7, #20]
   16da0:	b	16ab0 <argp_parse@@Base+0x3878>

00016da4 <argp_failure@@Base>:
   16da4:	push	{r3}		; (str r3, [sp, #-4]!)
   16da8:	strd	r4, [sp, #-20]!	; 0xffffffec
   16dac:	subs	r5, r0, #0
   16db0:	strd	r6, [sp, #8]
   16db4:	mov	r7, r1
   16db8:	mov	r6, r2
   16dbc:	str	lr, [sp, #16]
   16dc0:	sub	sp, sp, #200	; 0xc8
   16dc4:	beq	16f20 <argp_failure@@Base+0x17c>
   16dc8:	ldr	r3, [r5, #16]
   16dcc:	tst	r3, #2
   16dd0:	bne	16f04 <argp_failure@@Base+0x160>
   16dd4:	ldr	r4, [r5, #44]	; 0x2c
   16dd8:	cmp	r4, #0
   16ddc:	beq	16f04 <argp_failure@@Base+0x160>
   16de0:	mov	r0, r4
   16de4:	bl	114e0 <flockfile@plt>
   16de8:	ldr	r0, [r5, #40]	; 0x28
   16dec:	mov	r1, r4
   16df0:	bl	111ec <fputs_unlocked@plt>
   16df4:	ldr	r3, [sp, #220]	; 0xdc
   16df8:	cmp	r3, #0
   16dfc:	beq	16e58 <argp_failure@@Base+0xb4>
   16e00:	ldr	r3, [r4, #20]
   16e04:	add	r1, sp, #224	; 0xe0
   16e08:	ldr	r2, [r4, #24]
   16e0c:	str	r1, [sp]
   16e10:	cmp	r3, r2
   16e14:	addcc	r1, r3, #1
   16e18:	movcc	r2, #58	; 0x3a
   16e1c:	strcc	r1, [r4, #20]
   16e20:	strbcc	r2, [r3]
   16e24:	bcs	16f90 <argp_failure@@Base+0x1ec>
   16e28:	ldr	r3, [r4, #20]
   16e2c:	ldr	r2, [r4, #24]
   16e30:	cmp	r3, r2
   16e34:	addcc	r1, r3, #1
   16e38:	movcc	r2, #32
   16e3c:	strcc	r1, [r4, #20]
   16e40:	strbcc	r2, [r3]
   16e44:	bcs	16f80 <argp_failure@@Base+0x1dc>
   16e48:	mov	r0, r4
   16e4c:	ldr	r2, [sp]
   16e50:	ldr	r1, [sp, #220]	; 0xdc
   16e54:	bl	11480 <vfprintf@plt>
   16e58:	cmp	r6, #0
   16e5c:	ldr	r3, [r4, #20]
   16e60:	ldr	r2, [r4, #24]
   16e64:	beq	16ec8 <argp_failure@@Base+0x124>
   16e68:	cmp	r2, r3
   16e6c:	addhi	r1, r3, #1
   16e70:	movhi	r2, #58	; 0x3a
   16e74:	strhi	r1, [r4, #20]
   16e78:	strbhi	r2, [r3]
   16e7c:	bls	16fb0 <argp_failure@@Base+0x20c>
   16e80:	ldr	r3, [r4, #20]
   16e84:	ldr	r2, [r4, #24]
   16e88:	cmp	r3, r2
   16e8c:	addcc	r1, r3, #1
   16e90:	movcc	r2, #32
   16e94:	strcc	r1, [r4, #20]
   16e98:	strbcc	r2, [r3]
   16e9c:	bcs	16fa0 <argp_failure@@Base+0x1fc>
   16ea0:	mov	r2, #200	; 0xc8
   16ea4:	mov	r1, sp
   16ea8:	mov	r0, r6
   16eac:	bl	113e4 <strerror_r@plt>
   16eb0:	cmp	r0, #0
   16eb4:	beq	16f64 <argp_failure@@Base+0x1c0>
   16eb8:	mov	r1, r4
   16ebc:	bl	111ec <fputs_unlocked@plt>
   16ec0:	ldr	r3, [r4, #20]
   16ec4:	ldr	r2, [r4, #24]
   16ec8:	cmp	r3, r2
   16ecc:	addcc	r1, r3, #1
   16ed0:	movcc	r2, #10
   16ed4:	strcc	r1, [r4, #20]
   16ed8:	strbcc	r2, [r3]
   16edc:	bcs	16f54 <argp_failure@@Base+0x1b0>
   16ee0:	mov	r0, r4
   16ee4:	bl	112f4 <funlockfile@plt>
   16ee8:	cmp	r7, #0
   16eec:	beq	16f04 <argp_failure@@Base+0x160>
   16ef0:	cmp	r5, #0
   16ef4:	beq	16f4c <argp_failure@@Base+0x1a8>
   16ef8:	ldr	r3, [r5, #16]
   16efc:	tst	r3, #32
   16f00:	beq	16f4c <argp_failure@@Base+0x1a8>
   16f04:	add	sp, sp, #200	; 0xc8
   16f08:	ldrd	r4, [sp]
   16f0c:	ldrd	r6, [sp, #8]
   16f10:	ldr	lr, [sp, #16]
   16f14:	add	sp, sp, #20
   16f18:	add	sp, sp, #4
   16f1c:	bx	lr
   16f20:	movw	r3, #45800	; 0xb2e8
   16f24:	movt	r3, #2
   16f28:	ldr	r4, [r3]
   16f2c:	cmp	r4, #0
   16f30:	beq	16f04 <argp_failure@@Base+0x160>
   16f34:	mov	r0, r4
   16f38:	bl	114e0 <flockfile@plt>
   16f3c:	movw	r3, #45792	; 0xb2e0
   16f40:	movt	r3, #2
   16f44:	ldr	r0, [r3]
   16f48:	b	16dec <argp_failure@@Base+0x48>
   16f4c:	mov	r0, r7
   16f50:	bl	113a8 <exit@plt>
   16f54:	mov	r1, #10
   16f58:	mov	r0, r4
   16f5c:	bl	11450 <__overflow@plt>
   16f60:	b	16ee0 <argp_failure@@Base+0x13c>
   16f64:	mov	r0, r6
   16f68:	bl	1136c <strerror@plt>
   16f6c:	cmp	r0, #0
   16f70:	movw	r3, #42116	; 0xa484
   16f74:	movt	r3, #1
   16f78:	moveq	r0, r3
   16f7c:	b	16eb8 <argp_failure@@Base+0x114>
   16f80:	mov	r1, #32
   16f84:	mov	r0, r4
   16f88:	bl	11450 <__overflow@plt>
   16f8c:	b	16e48 <argp_failure@@Base+0xa4>
   16f90:	mov	r1, #58	; 0x3a
   16f94:	mov	r0, r4
   16f98:	bl	11450 <__overflow@plt>
   16f9c:	b	16e28 <argp_failure@@Base+0x84>
   16fa0:	mov	r1, #32
   16fa4:	mov	r0, r4
   16fa8:	bl	11450 <__overflow@plt>
   16fac:	b	16ea0 <argp_failure@@Base+0xfc>
   16fb0:	mov	r1, #58	; 0x3a
   16fb4:	mov	r0, r4
   16fb8:	bl	11450 <__overflow@plt>
   16fbc:	b	16e80 <argp_failure@@Base+0xdc>
   16fc0:	cmp	r2, #0
   16fc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16fc8:	strd	r6, [sp, #8]
   16fcc:	strd	r8, [sp, #16]
   16fd0:	strd	sl, [sp, #24]
   16fd4:	add	fp, sp, #32
   16fd8:	str	lr, [sp, #32]
   16fdc:	sub	sp, sp, #124	; 0x7c
   16fe0:	str	r2, [fp, #-128]	; 0xffffff80
   16fe4:	strd	r0, [fp, #-108]	; 0xffffff94
   16fe8:	str	r3, [fp, #-100]	; 0xffffff9c
   16fec:	beq	17460 <argp_failure@@Base+0x6bc>
   16ff0:	mov	r0, r2
   16ff4:	movw	r8, #45732	; 0xb2a4
   16ff8:	movt	r8, #2
   16ffc:	bl	114e0 <flockfile@plt>
   17000:	ldr	r3, [r8, #36]	; 0x24
   17004:	cmp	r3, #0
   17008:	beq	1747c <argp_failure@@Base+0x6d8>
   1700c:	mov	r3, #0
   17010:	ldr	r0, [fp, #-128]	; 0xffffff80
   17014:	mov	r1, r3
   17018:	ldr	r2, [r8, #32]
   1701c:	bl	190a0 <argp_error@@Base+0xdfc>
   17020:	subs	r7, r0, #0
   17024:	beq	17f9c <argp_failure@@Base+0x11f8>
   17028:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1702c:	ands	r3, r3, #11
   17030:	streq	r3, [fp, #-136]	; 0xffffff78
   17034:	bne	177ac <argp_failure@@Base+0xa08>
   17038:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1703c:	ands	r4, r3, #3
   17040:	bne	1763c <argp_failure@@Base+0x898>
   17044:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17048:	tst	r3, #16
   1704c:	bne	17608 <argp_failure@@Base+0x864>
   17050:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17054:	tst	r3, #4
   17058:	and	r5, r3, #8
   1705c:	bne	17584 <argp_failure@@Base+0x7e0>
   17060:	cmp	r5, #0
   17064:	beq	173f8 <argp_failure@@Base+0x654>
   17068:	ldr	r3, [fp, #-136]	; 0xffffff78
   1706c:	ldr	r3, [r3, #4]
   17070:	cmp	r3, #0
   17074:	str	r3, [fp, #-112]	; 0xffffff90
   17078:	beq	173f8 <argp_failure@@Base+0x654>
   1707c:	cmp	r4, #0
   17080:	bne	175b4 <argp_failure@@Base+0x810>
   17084:	ldr	r3, [fp, #-136]	; 0xffffff78
   17088:	ldr	r3, [r3]
   1708c:	str	r4, [fp, #-88]	; 0xffffffa8
   17090:	str	r4, [fp, #-84]	; 0xffffffac
   17094:	str	r4, [fp, #-80]	; 0xffffffb0
   17098:	mov	r2, r3
   1709c:	movw	r3, #40464	; 0x9e10
   170a0:	movt	r3, #1
   170a4:	mov	r5, r2
   170a8:	str	r3, [fp, #-140]	; 0xffffff74
   170ac:	movw	r3, #42548	; 0xa634
   170b0:	movt	r3, #1
   170b4:	str	r8, [fp, #-96]	; 0xffffffa0
   170b8:	str	r3, [fp, #-144]	; 0xffffff70
   170bc:	ldr	r0, [r7, #16]
   170c0:	ldr	r3, [r7, #24]
   170c4:	ldr	r2, [r7, #28]
   170c8:	ldr	r4, [r5]
   170cc:	ldr	r9, [r5, #8]
   170d0:	sub	r2, r2, r3
   170d4:	cmp	r2, r0
   170d8:	bhi	17c8c <argp_failure@@Base+0xee8>
   170dc:	ldr	r1, [r7, #4]
   170e0:	mov	r3, #1
   170e4:	ldr	r8, [r4, #12]
   170e8:	str	r1, [fp, #-120]	; 0xffffff88
   170ec:	mov	r1, #0
   170f0:	str	r1, [r7, #4]
   170f4:	ldr	r1, [r7, #12]
   170f8:	str	r3, [fp, #-64]	; 0xffffffc0
   170fc:	ldr	r3, [fp, #-104]	; 0xffffff98
   17100:	str	r1, [fp, #-116]	; 0xffffff8c
   17104:	ands	r1, r8, #8
   17108:	str	r5, [fp, #-76]	; 0xffffffb4
   1710c:	str	r1, [fp, #-124]	; 0xffffff84
   17110:	sub	r1, fp, #88	; 0x58
   17114:	str	r7, [fp, #-72]	; 0xffffffb8
   17118:	str	r3, [fp, #-60]	; 0xffffffc4
   1711c:	movne	r3, #0
   17120:	str	r1, [fp, #-68]	; 0xffffffbc
   17124:	strne	r3, [fp, #-124]	; 0xffffff84
   17128:	bne	17160 <argp_failure@@Base+0x3bc>
   1712c:	ldr	r1, [r5, #4]
   17130:	cmp	r1, #0
   17134:	beq	17160 <argp_failure@@Base+0x3bc>
   17138:	add	r3, r4, #24
   1713c:	ldr	ip, [r3, #-24]	; 0xffffffe8
   17140:	cmp	ip, #0
   17144:	beq	17154 <argp_failure@@Base+0x3b0>
   17148:	ldr	ip, [r3, #-12]
   1714c:	tst	ip, #2
   17150:	beq	17dac <argp_failure@@Base+0x1008>
   17154:	subs	r1, r1, #1
   17158:	add	r3, r3, #24
   1715c:	bne	1713c <argp_failure@@Base+0x398>
   17160:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17164:	cmp	r2, r0
   17168:	ldr	r6, [r3, #8]
   1716c:	bhi	17ce8 <argp_failure@@Base+0xf44>
   17170:	str	r6, [r7, #12]
   17174:	ldr	sl, [r5, #4]
   17178:	cmp	sl, #0
   1717c:	movne	r6, r4
   17180:	strne	r5, [fp, #-132]	; 0xffffff7c
   17184:	movne	r5, r4
   17188:	movne	r4, r9
   1718c:	beq	171e4 <argp_failure@@Base+0x440>
   17190:	ldr	r9, [r6, #12]
   17194:	tst	r9, #8
   17198:	bne	171d0 <argp_failure@@Base+0x42c>
   1719c:	ldr	r8, [r6, #4]
   171a0:	sub	r2, r8, #1
   171a4:	cmp	r2, #254	; 0xfe
   171a8:	bhi	171d0 <argp_failure@@Base+0x42c>
   171ac:	bl	1139c <__ctype_b_loc@plt>
   171b0:	ldr	r1, [r0]
   171b4:	lsl	r2, r8, #1
   171b8:	ldrh	r2, [r1, r2]
   171bc:	tst	r2, #16384	; 0x4000
   171c0:	beq	171d0 <argp_failure@@Base+0x42c>
   171c4:	ldrb	r2, [r4]
   171c8:	cmp	r8, r2
   171cc:	beq	17914 <argp_failure@@Base+0xb70>
   171d0:	subs	sl, sl, #1
   171d4:	add	r6, r6, #24
   171d8:	bne	17190 <argp_failure@@Base+0x3ec>
   171dc:	mov	r4, r5
   171e0:	ldr	r5, [fp, #-132]	; 0xffffff7c
   171e4:	ldr	r2, [r4, #12]
   171e8:	ldr	r1, [r7, #24]
   171ec:	ldr	r3, [r7, #28]
   171f0:	tst	r2, #8
   171f4:	ldr	r2, [r7, #16]
   171f8:	sub	r3, r3, r1
   171fc:	beq	17a04 <argp_failure@@Base+0xc60>
   17200:	cmp	r3, r2
   17204:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17208:	ldr	r6, [r3, #16]
   1720c:	bhi	17de8 <argp_failure@@Base+0x1044>
   17210:	str	r6, [r7, #12]
   17214:	ldr	r8, [r5, #4]
   17218:	cmp	r8, #0
   1721c:	addne	r6, r4, #24
   17220:	bne	17234 <argp_failure@@Base+0x490>
   17224:	b	172c4 <argp_failure@@Base+0x520>
   17228:	subs	r8, r8, #1
   1722c:	add	r6, r6, #24
   17230:	beq	172c4 <argp_failure@@Base+0x520>
   17234:	ldr	r3, [r6, #-24]	; 0xffffffe8
   17238:	cmp	r3, #0
   1723c:	beq	17228 <argp_failure@@Base+0x484>
   17240:	ldr	r3, [r6, #-12]
   17244:	tst	r3, #2
   17248:	bne	17228 <argp_failure@@Base+0x484>
   1724c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17250:	sub	r1, fp, #76	; 0x4c
   17254:	ldr	r0, [r3, #16]
   17258:	bl	16624 <argp_parse@@Base+0x33ec>
   1725c:	ldr	sl, [r6, #-24]	; 0xffffffe8
   17260:	mov	r0, sl
   17264:	bl	113b4 <strlen@plt>
   17268:	subs	r9, r0, #0
   1726c:	beq	17228 <argp_failure@@Base+0x484>
   17270:	ldr	ip, [r7, #28]
   17274:	mov	r1, r9
   17278:	mov	r0, r7
   1727c:	ldr	lr, [r7, #32]
   17280:	add	r2, ip, r9
   17284:	cmp	lr, r2
   17288:	bcs	1729c <argp_failure@@Base+0x4f8>
   1728c:	bl	197a4 <argp_error@@Base+0x1500>
   17290:	cmp	r0, #0
   17294:	beq	17228 <argp_failure@@Base+0x484>
   17298:	ldr	ip, [r7, #28]
   1729c:	mov	r2, r9
   172a0:	mov	r1, sl
   172a4:	mov	r0, ip
   172a8:	add	r6, r6, #24
   172ac:	bl	11288 <memcpy@plt>
   172b0:	ldr	r2, [r7, #28]
   172b4:	subs	r8, r8, #1
   172b8:	add	r3, r2, r9
   172bc:	str	r3, [r7, #28]
   172c0:	bne	17234 <argp_failure@@Base+0x490>
   172c4:	ldr	r2, [r7, #16]
   172c8:	ldr	r1, [r7, #24]
   172cc:	ldr	r3, [r7, #28]
   172d0:	sub	r3, r3, r1
   172d4:	cmp	r3, r2
   172d8:	bhi	17cdc <argp_failure@@Base+0xf38>
   172dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   172e0:	mov	r2, #0
   172e4:	str	r2, [r7, #4]
   172e8:	cmp	r3, r2
   172ec:	beq	17924 <argp_failure@@Base+0xb80>
   172f0:	ldr	r3, [r4, #12]
   172f4:	tst	r3, #8
   172f8:	bne	17324 <argp_failure@@Base+0x580>
   172fc:	ldr	r6, [r4, #4]
   17300:	sub	r3, r6, #1
   17304:	cmp	r3, #254	; 0xfe
   17308:	bhi	17324 <argp_failure@@Base+0x580>
   1730c:	bl	1139c <__ctype_b_loc@plt>
   17310:	ldr	r3, [r0]
   17314:	lsl	r6, r6, #1
   17318:	ldrh	r3, [r3, r6]
   1731c:	tst	r3, #16384	; 0x4000
   17320:	bne	17330 <argp_failure@@Base+0x58c>
   17324:	ldr	r3, [r4]
   17328:	cmp	r3, #0
   1732c:	beq	17e18 <argp_failure@@Base+0x1074>
   17330:	ldr	r2, [r7, #16]
   17334:	ldr	r1, [r7, #24]
   17338:	ldr	r3, [r7, #28]
   1733c:	sub	r3, r3, r1
   17340:	cmp	r3, r2
   17344:	bhi	17ca8 <argp_failure@@Base+0xf04>
   17348:	ldr	r3, [fp, #-120]	; 0xffffff88
   1734c:	str	r3, [r7, #4]
   17350:	ldr	r3, [fp, #-112]	; 0xffffff90
   17354:	add	r5, r5, #28
   17358:	subs	r3, r3, #1
   1735c:	str	r3, [fp, #-112]	; 0xffffff90
   17360:	ldr	r3, [fp, #-116]	; 0xffffff8c
   17364:	str	r3, [r7, #12]
   17368:	bne	170bc <argp_failure@@Base+0x318>
   1736c:	ldr	r8, [fp, #-96]	; 0xffffffa0
   17370:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17374:	cmp	r3, #0
   17378:	beq	173f4 <argp_failure@@Base+0x650>
   1737c:	ldr	r3, [r8, #4]
   17380:	cmp	r3, #0
   17384:	beq	173f4 <argp_failure@@Base+0x650>
   17388:	ldr	ip, [fp, #-104]	; 0xffffff98
   1738c:	cmp	ip, #0
   17390:	beq	18158 <argp_failure@@Base+0x13b4>
   17394:	ldr	r2, [ip]
   17398:	cmp	r2, #0
   1739c:	beq	180c8 <argp_failure@@Base+0x1324>
   173a0:	ldr	r3, [r2, #20]
   173a4:	cmp	r3, #0
   173a8:	beq	180c8 <argp_failure@@Base+0x1324>
   173ac:	movw	r5, #42140	; 0xa49c
   173b0:	movt	r5, #1
   173b4:	mov	r0, r5
   173b8:	mov	r1, #5
   173bc:	movt	r1, #512	; 0x200
   173c0:	mov	r3, ip
   173c4:	bl	151c4 <argp_parse@@Base+0x1f8c>
   173c8:	subs	r4, r0, #0
   173cc:	beq	173f4 <argp_failure@@Base+0x650>
   173d0:	ldrb	r3, [r4]
   173d4:	subs	r5, r4, r5
   173d8:	movne	r5, #1
   173dc:	cmp	r3, #0
   173e0:	bne	180d4 <argp_failure@@Base+0x1330>
   173e4:	cmp	r5, #0
   173e8:	beq	173f4 <argp_failure@@Base+0x650>
   173ec:	mov	r0, r4
   173f0:	bl	1421c <argp_parse@@Base+0xfe4>
   173f4:	mov	r4, #1
   173f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   173fc:	tst	r3, #32
   17400:	bne	178b4 <argp_failure@@Base+0xb10>
   17404:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17408:	tst	r3, #64	; 0x40
   1740c:	beq	1743c <argp_failure@@Base+0x698>
   17410:	movw	r5, #49728	; 0xc240
   17414:	movt	r5, #2
   17418:	ldr	r2, [r5]
   1741c:	cmp	r2, #0
   17420:	beq	1743c <argp_failure@@Base+0x698>
   17424:	cmp	r4, #0
   17428:	bne	178ec <argp_failure@@Base+0xb48>
   1742c:	movw	r1, #42580	; 0xa654
   17430:	movt	r1, #1
   17434:	mov	r0, r7
   17438:	bl	197c4 <argp_error@@Base+0x1520>
   1743c:	ldr	r0, [fp, #-128]	; 0xffffff80
   17440:	bl	112f4 <funlockfile@plt>
   17444:	ldr	r3, [fp, #-136]	; 0xffffff78
   17448:	cmp	r3, #0
   1744c:	beq	17458 <argp_failure@@Base+0x6b4>
   17450:	mov	r0, r3
   17454:	bl	14e70 <argp_parse@@Base+0x1c38>
   17458:	mov	r0, r7
   1745c:	bl	19674 <argp_error@@Base+0x13d0>
   17460:	sub	sp, fp, #32
   17464:	ldrd	r4, [sp]
   17468:	ldrd	r6, [sp, #8]
   1746c:	ldrd	r8, [sp, #16]
   17470:	ldrd	sl, [sp, #24]
   17474:	add	sp, sp, #32
   17478:	pop	{pc}		; (ldr pc, [sp], #4)
   1747c:	movw	r0, #42256	; 0xa510
   17480:	movt	r0, #1
   17484:	bl	1133c <getenv@plt>
   17488:	subs	r5, r0, #0
   1748c:	ldrd	r2, [r8]
   17490:	sub	ip, fp, #76	; 0x4c
   17494:	ldrd	r0, [r8, #8]
   17498:	str	ip, [fp, #-96]	; 0xffffffa0
   1749c:	ldrd	r6, [r8, #16]
   174a0:	strd	r2, [fp, #-76]	; 0xffffffb4
   174a4:	ldrd	r2, [r8, #24]
   174a8:	strd	r0, [fp, #-68]	; 0xffffffbc
   174ac:	ldrd	r0, [r8, #32]
   174b0:	strd	r6, [fp, #-60]	; 0xffffffc4
   174b4:	strd	r2, [fp, #-52]	; 0xffffffcc
   174b8:	strd	r0, [fp, #-44]	; 0xffffffd4
   174bc:	beq	1700c <argp_failure@@Base+0x268>
   174c0:	ldrb	sl, [r5]
   174c4:	movw	r3, #42320	; 0xa550
   174c8:	movt	r3, #1
   174cc:	ldr	r9, [pc, #3300]	; 181b8 <argp_failure@@Base+0x1414>
   174d0:	str	r3, [fp, #-116]	; 0xffffff8c
   174d4:	movw	r3, #42272	; 0xa520
   174d8:	movt	r3, #1
   174dc:	str	r3, [fp, #-120]	; 0xffffff88
   174e0:	cmp	sl, #0
   174e4:	beq	1751c <argp_failure@@Base+0x778>
   174e8:	bl	1139c <__ctype_b_loc@plt>
   174ec:	mov	r7, r0
   174f0:	ldr	r1, [r0]
   174f4:	b	174fc <argp_failure@@Base+0x758>
   174f8:	ldrb	sl, [r5, #1]!
   174fc:	lsl	r3, sl, #1
   17500:	ldrh	r6, [r1, r3]
   17504:	tst	r6, #8192	; 0x2000
   17508:	bne	174f8 <argp_failure@@Base+0x754>
   1750c:	ands	r2, r6, #1024	; 0x400
   17510:	bne	17b80 <argp_failure@@Base+0xddc>
   17514:	cmp	sl, #0
   17518:	bne	17fa8 <argp_failure@@Base+0x1204>
   1751c:	ldr	r1, [pc, #3224]	; 181bc <argp_failure@@Base+0x1418>
   17520:	ldr	lr, [fp, #-44]	; 0xffffffd4
   17524:	add	r3, r1, #16
   17528:	cmp	r3, r9
   1752c:	mov	r1, r3
   17530:	beq	17e84 <argp_failure@@Base+0x10e0>
   17534:	ldrb	r2, [r3, #14]
   17538:	cmp	r2, #0
   1753c:	bne	17524 <argp_failure@@Base+0x780>
   17540:	ldrb	r0, [r3, #15]
   17544:	sub	ip, fp, #36	; 0x24
   17548:	cmp	r0, #32
   1754c:	add	ip, ip, r0
   17550:	beq	17524 <argp_failure@@Base+0x780>
   17554:	ldr	r0, [ip, #-40]	; 0xffffffd8
   17558:	cmp	r0, lr
   1755c:	blt	17524 <argp_failure@@Base+0x780>
   17560:	movw	r0, #42444	; 0xa5cc
   17564:	movt	r0, #1
   17568:	mov	r1, r2
   1756c:	stm	sp, {r0, r3}
   17570:	movw	r3, #42392	; 0xa598
   17574:	movt	r3, #1
   17578:	ldr	r0, [fp, #-104]	; 0xffffff98
   1757c:	bl	16da4 <argp_failure@@Base>
   17580:	b	1700c <argp_failure@@Base+0x268>
   17584:	ldr	r3, [fp, #4]
   17588:	movw	r1, #42492	; 0xa5fc
   1758c:	movt	r1, #1
   17590:	mov	r0, r7
   17594:	mov	r2, r3
   17598:	bl	197c4 <argp_error@@Base+0x1520>
   1759c:	cmp	r5, #0
   175a0:	beq	173f4 <argp_failure@@Base+0x650>
   175a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   175a8:	ldr	r3, [r3, #4]
   175ac:	cmp	r3, #0
   175b0:	beq	173f4 <argp_failure@@Base+0x650>
   175b4:	ldr	r3, [r7, #28]
   175b8:	ldr	r2, [r7, #32]
   175bc:	cmp	r3, r2
   175c0:	bcs	18010 <argp_failure@@Base+0x126c>
   175c4:	add	r1, r3, #1
   175c8:	mov	r2, #10
   175cc:	str	r1, [r7, #28]
   175d0:	strb	r2, [r3]
   175d4:	ldr	r3, [fp, #-136]	; 0xffffff78
   175d8:	ldr	r3, [r3, #4]
   175dc:	str	r3, [fp, #-112]	; 0xffffff90
   175e0:	mov	r3, #0
   175e4:	ldr	r2, [fp, #-112]	; 0xffffff90
   175e8:	cmp	r2, r3
   175ec:	ldr	r2, [fp, #-136]	; 0xffffff78
   175f0:	ldr	r2, [r2]
   175f4:	str	r3, [fp, #-88]	; 0xffffffa8
   175f8:	str	r3, [fp, #-84]	; 0xffffffac
   175fc:	str	r3, [fp, #-80]	; 0xffffffb0
   17600:	bne	1709c <argp_failure@@Base+0x2f8>
   17604:	b	173f4 <argp_failure@@Base+0x650>
   17608:	mov	r0, #1
   1760c:	mov	r3, #0
   17610:	ldr	r1, [fp, #-104]	; 0xffffff98
   17614:	mov	r2, r3
   17618:	stm	sp, {r0, r7}
   1761c:	ldr	r0, [fp, #-108]	; 0xffffff94
   17620:	bl	167d4 <argp_parse@@Base+0x359c>
   17624:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17628:	orr	r4, r4, r0
   1762c:	tst	r3, #4
   17630:	and	r5, r3, #8
   17634:	beq	17060 <argp_failure@@Base+0x2bc>
   17638:	b	17584 <argp_failure@@Base+0x7e0>
   1763c:	ldr	r3, [fp, #-108]	; 0xffffff94
   17640:	movw	r2, #42468	; 0xa5e4
   17644:	movt	r2, #1
   17648:	movw	sl, #42460	; 0xa5dc
   1764c:	movt	sl, #1
   17650:	str	r2, [fp, #-120]	; 0xffffff88
   17654:	mov	r4, #1
   17658:	ldr	r0, [r3, #8]
   1765c:	ldr	r1, [r3, #16]
   17660:	movw	r3, #42452	; 0xa5d4
   17664:	movt	r3, #1
   17668:	str	r3, [fp, #-124]	; 0xffffff84
   1766c:	bl	15158 <argp_parse@@Base+0x1f20>
   17670:	add	r3, r0, #7
   17674:	mov	r2, r0
   17678:	bic	r3, r3, #7
   1767c:	mov	r1, #0
   17680:	sub	sp, sp, r3
   17684:	add	r9, sp, #8
   17688:	mov	r0, r9
   1768c:	bl	113fc <memset@plt>
   17690:	sub	r3, fp, #76	; 0x4c
   17694:	str	sl, [fp, #-116]	; 0xffffff8c
   17698:	str	r9, [fp, #-112]	; 0xffffff90
   1769c:	str	r3, [fp, #-96]	; 0xffffffa0
   176a0:	ldr	r9, [fp, #-136]	; 0xffffff78
   176a4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   176a8:	b	17784 <argp_failure@@Base+0x9e0>
   176ac:	cmp	r4, #0
   176b0:	mov	r0, r7
   176b4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   176b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   176bc:	ldrne	r2, [fp, #-124]	; 0xffffff84
   176c0:	ldreq	r2, [fp, #-120]	; 0xffffff88
   176c4:	ldr	r4, [r7, #12]
   176c8:	str	r5, [r7, #12]
   176cc:	str	r3, [fp, #-76]	; 0xffffffb4
   176d0:	ldr	r3, [fp, #4]
   176d4:	bl	197c4 <argp_error@@Base+0x1520>
   176d8:	ldr	r2, [r7, #16]
   176dc:	ldr	r1, [r7, #24]
   176e0:	ldr	r3, [r7, #28]
   176e4:	ldr	r5, [r8, #28]
   176e8:	sub	r3, r3, r1
   176ec:	cmp	r3, r2
   176f0:	bhi	178a8 <argp_failure@@Base+0xb04>
   176f4:	tst	sl, #2
   176f8:	ldr	r6, [r7, #4]
   176fc:	str	r5, [r7, #4]
   17700:	beq	17894 <argp_failure@@Base+0xaf0>
   17704:	ldr	r3, [r9, #4]
   17708:	cmp	r3, #0
   1770c:	bne	17e2c <argp_failure@@Base+0x1088>
   17710:	mov	r3, #1
   17714:	str	r7, [sp]
   17718:	ldrd	r0, [fp, #-108]	; 0xffffff94
   1771c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17720:	bl	16178 <argp_parse@@Base+0x2f40>
   17724:	ldr	r1, [r7, #16]
   17728:	mov	r5, r0
   1772c:	ldrd	r2, [r7, #24]
   17730:	sub	r2, r3, r2
   17734:	cmp	r2, r1
   17738:	strls	r4, [r7, #12]
   1773c:	bhi	17864 <argp_failure@@Base+0xac0>
   17740:	ldr	r2, [r7, #32]
   17744:	str	r6, [r7, #4]
   17748:	cmp	r2, r3
   1774c:	bhi	17768 <argp_failure@@Base+0x9c4>
   17750:	mov	r1, #1
   17754:	mov	r0, r7
   17758:	bl	197a4 <argp_error@@Base+0x1500>
   1775c:	cmp	r0, #0
   17760:	beq	17778 <argp_failure@@Base+0x9d4>
   17764:	ldr	r3, [r7, #28]
   17768:	add	r1, r3, #1
   1776c:	mov	r2, #10
   17770:	str	r1, [r7, #28]
   17774:	strb	r2, [r3]
   17778:	cmp	r5, #0
   1777c:	mov	r4, #0
   17780:	beq	178d4 <argp_failure@@Base+0xb30>
   17784:	ldr	r2, [r7, #16]
   17788:	ldr	r1, [r7, #24]
   1778c:	ldr	r3, [r7, #28]
   17790:	ldr	r5, [r8, #28]
   17794:	sub	r3, r3, r1
   17798:	cmp	r3, r2
   1779c:	bls	176ac <argp_failure@@Base+0x908>
   177a0:	mov	r0, r7
   177a4:	bl	19138 <argp_error@@Base+0xe94>
   177a8:	b	176ac <argp_failure@@Base+0x908>
   177ac:	mov	r1, #0
   177b0:	ldr	r0, [fp, #-108]	; 0xffffff94
   177b4:	bl	1520c <argp_parse@@Base+0x1fd4>
   177b8:	ldr	r5, [r0]
   177bc:	mov	r6, r0
   177c0:	movw	r2, #40544	; 0x9e60
   177c4:	movt	r2, #1
   177c8:	ldr	r4, [r0, #4]
   177cc:	str	r6, [fp, #-136]	; 0xffffff78
   177d0:	mov	r0, r5
   177d4:	mov	r1, r4
   177d8:	bl	150b4 <argp_parse@@Base+0x1e7c>
   177dc:	cmp	r0, #0
   177e0:	beq	177f0 <argp_failure@@Base+0xa4c>
   177e4:	mvn	r3, #0
   177e8:	str	r3, [r0, #12]
   177ec:	ldr	r4, [r6, #4]
   177f0:	movw	r2, #40512	; 0x9e40
   177f4:	movt	r2, #1
   177f8:	mov	r1, r4
   177fc:	mov	r0, r5
   17800:	bl	150b4 <argp_parse@@Base+0x1e7c>
   17804:	cmp	r0, #0
   17808:	beq	1781c <argp_failure@@Base+0xa78>
   1780c:	mvn	r3, #0
   17810:	str	r3, [r0, #12]
   17814:	ldr	r3, [fp, #-136]	; 0xffffff78
   17818:	ldr	r4, [r3, #4]
   1781c:	cmp	r4, #0
   17820:	beq	17038 <argp_failure@@Base+0x294>
   17824:	mov	r3, r5
   17828:	mov	r1, #0
   1782c:	str	r1, [r3, #24]
   17830:	add	r1, r1, #1
   17834:	add	r3, r3, #28
   17838:	cmp	r1, r4
   1783c:	bne	1782c <argp_failure@@Base+0xa88>
   17840:	mov	r0, r5
   17844:	movw	r3, #23480	; 0x5bb8
   17848:	movt	r3, #1
   1784c:	mov	r2, #28
   17850:	bl	114f8 <qsort@plt>
   17854:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17858:	ands	r4, r3, #3
   1785c:	beq	17044 <argp_failure@@Base+0x2a0>
   17860:	b	1763c <argp_failure@@Base+0x898>
   17864:	mov	r0, r7
   17868:	bl	19138 <argp_error@@Base+0xe94>
   1786c:	ldr	r1, [r7, #16]
   17870:	str	r4, [r7, #12]
   17874:	ldrd	r2, [r7, #24]
   17878:	sub	r2, r3, r2
   1787c:	cmp	r2, r1
   17880:	bls	17740 <argp_failure@@Base+0x99c>
   17884:	mov	r0, r7
   17888:	bl	19138 <argp_error@@Base+0xe94>
   1788c:	ldr	r3, [r7, #28]
   17890:	b	17740 <argp_failure@@Base+0x99c>
   17894:	mov	r1, r7
   17898:	mov	r0, r9
   1789c:	orr	sl, sl, #2
   178a0:	bl	159d4 <argp_parse@@Base+0x279c>
   178a4:	b	17710 <argp_failure@@Base+0x96c>
   178a8:	mov	r0, r7
   178ac:	bl	19138 <argp_error@@Base+0xe94>
   178b0:	b	176f4 <argp_failure@@Base+0x950>
   178b4:	mov	r2, #0
   178b8:	mov	r3, r4
   178bc:	ldrd	r0, [fp, #-108]	; 0xffffff94
   178c0:	stm	sp, {r2, r7}
   178c4:	mov	r2, #1
   178c8:	bl	167d4 <argp_parse@@Base+0x359c>
   178cc:	orr	r4, r4, r0
   178d0:	b	17404 <argp_failure@@Base+0x660>
   178d4:	str	sl, [fp, #-100]	; 0xffffff9c
   178d8:	mov	r4, #1
   178dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   178e0:	tst	r3, #16
   178e4:	beq	17050 <argp_failure@@Base+0x2ac>
   178e8:	b	17608 <argp_failure@@Base+0x864>
   178ec:	ldr	r3, [r7, #28]
   178f0:	ldr	r2, [r7, #32]
   178f4:	cmp	r3, r2
   178f8:	bcs	17fe0 <argp_failure@@Base+0x123c>
   178fc:	add	r1, r3, #1
   17900:	mov	r2, #10
   17904:	str	r1, [r7, #28]
   17908:	strb	r2, [r3]
   1790c:	ldr	r2, [r5]
   17910:	b	1742c <argp_failure@@Base+0x688>
   17914:	tst	r9, #2
   17918:	beq	17cfc <argp_failure@@Base+0xf58>
   1791c:	add	r4, r4, #1
   17920:	b	171d0 <argp_failure@@Base+0x42c>
   17924:	ldr	r2, [r5, #20]
   17928:	ldr	r6, [r4, #16]
   1792c:	cmp	r2, #0
   17930:	beq	17cf4 <argp_failure@@Base+0xf50>
   17934:	ldr	r3, [r2, #20]
   17938:	cmp	r3, #0
   1793c:	beq	17cf4 <argp_failure@@Base+0xf50>
   17940:	mov	r0, r6
   17944:	ldr	r3, [fp, #-104]	; 0xffffff98
   17948:	ldr	r1, [r4, #4]
   1794c:	bl	151c4 <argp_parse@@Base+0x1f8c>
   17950:	mov	r4, r0
   17954:	cmp	r4, #0
   17958:	beq	17b28 <argp_failure@@Base+0xd84>
   1795c:	ldrb	r3, [r4]
   17960:	cmp	r3, #0
   17964:	beq	17b18 <argp_failure@@Base+0xd74>
   17968:	ldr	r2, [r7, #16]
   1796c:	ldr	r1, [r7, #24]
   17970:	ldr	r3, [r7, #28]
   17974:	sub	r3, r3, r1
   17978:	cmp	r3, r2
   1797c:	bhi	17f30 <argp_failure@@Base+0x118c>
   17980:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17984:	ldr	r9, [r7, #20]
   17988:	ldr	r8, [r3, #20]
   1798c:	bic	r9, r9, r9, asr #31
   17990:	mov	sl, r8
   17994:	str	r8, [r7, #4]
   17998:	add	r3, r8, #3
   1799c:	str	sl, [r7, #12]
   179a0:	cmp	r3, r9
   179a4:	bcc	17f0c <argp_failure@@Base+0x1168>
   179a8:	cmp	r8, r9
   179ac:	bhi	17ab8 <argp_failure@@Base+0xd14>
   179b0:	ldr	r3, [r7, #28]
   179b4:	ldr	r1, [r7, #32]
   179b8:	add	r2, r3, #3
   179bc:	cmp	r1, r2
   179c0:	bcs	179dc <argp_failure@@Base+0xc38>
   179c4:	mov	r1, #3
   179c8:	mov	r0, r7
   179cc:	bl	197a4 <argp_error@@Base+0x1500>
   179d0:	cmp	r0, #0
   179d4:	beq	17ac4 <argp_failure@@Base+0xd20>
   179d8:	ldr	r3, [r7, #28]
   179dc:	movw	r2, #42576	; 0xa650
   179e0:	movt	r2, #1
   179e4:	ldrh	r1, [r2]
   179e8:	ldrb	r2, [r2, #2]
   179ec:	strh	r1, [r3]
   179f0:	strb	r2, [r3, #2]
   179f4:	ldr	r3, [r7, #28]
   179f8:	add	r3, r3, #3
   179fc:	str	r3, [r7, #28]
   17a00:	b	17ac4 <argp_failure@@Base+0xd20>
   17a04:	cmp	r3, r2
   17a08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a0c:	ldr	r6, [r3, #12]
   17a10:	bhi	17dcc <argp_failure@@Base+0x1028>
   17a14:	str	r6, [r7, #12]
   17a18:	ldr	sl, [r5, #4]
   17a1c:	cmp	sl, #0
   17a20:	beq	172c4 <argp_failure@@Base+0x520>
   17a24:	movw	r3, #42564	; 0xa644
   17a28:	movt	r3, #1
   17a2c:	movw	r8, #42556	; 0xa63c
   17a30:	movt	r8, #1
   17a34:	movw	r9, #42572	; 0xa64c
   17a38:	movt	r9, #1
   17a3c:	str	r3, [fp, #-124]	; 0xffffff84
   17a40:	add	r6, r4, #24
   17a44:	b	17a54 <argp_failure@@Base+0xcb0>
   17a48:	subs	sl, sl, #1
   17a4c:	add	r6, r6, #24
   17a50:	beq	172c4 <argp_failure@@Base+0x520>
   17a54:	ldr	r3, [r6, #-24]	; 0xffffffe8
   17a58:	cmp	r3, #0
   17a5c:	beq	17a48 <argp_failure@@Base+0xca4>
   17a60:	ldr	r3, [r6, #-12]
   17a64:	tst	r3, #2
   17a68:	bne	17a48 <argp_failure@@Base+0xca4>
   17a6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a70:	sub	r1, fp, #76	; 0x4c
   17a74:	ldr	r0, [r3, #12]
   17a78:	bl	16624 <argp_parse@@Base+0x33ec>
   17a7c:	mov	r1, r8
   17a80:	mov	r0, r7
   17a84:	ldr	r2, [r6, #-24]	; 0xffffffe8
   17a88:	bl	197c4 <argp_error@@Base+0x1520>
   17a8c:	ldr	r3, [r4, #8]
   17a90:	cmp	r3, #0
   17a94:	beq	17a48 <argp_failure@@Base+0xca4>
   17a98:	ldr	ip, [r4, #12]
   17a9c:	mov	r1, r9
   17aa0:	mov	r2, r3
   17aa4:	mov	r0, r7
   17aa8:	tst	ip, #1
   17aac:	ldrne	r1, [fp, #-124]	; 0xffffff84
   17ab0:	bl	197c4 <argp_error@@Base+0x1520>
   17ab4:	b	17a48 <argp_failure@@Base+0xca4>
   17ab8:	mov	r1, r8
   17abc:	mov	r0, r7
   17ac0:	bl	15f5c <argp_parse@@Base+0x2d24>
   17ac4:	mov	r0, r4
   17ac8:	bl	113b4 <strlen@plt>
   17acc:	subs	r8, r0, #0
   17ad0:	beq	17b18 <argp_failure@@Base+0xd74>
   17ad4:	ldr	r0, [r7, #28]
   17ad8:	ldr	r2, [r7, #32]
   17adc:	add	r3, r0, r8
   17ae0:	cmp	r2, r3
   17ae4:	bcs	17b00 <argp_failure@@Base+0xd5c>
   17ae8:	mov	r1, r8
   17aec:	mov	r0, r7
   17af0:	bl	197a4 <argp_error@@Base+0x1500>
   17af4:	cmp	r0, #0
   17af8:	beq	17b18 <argp_failure@@Base+0xd74>
   17afc:	ldr	r0, [r7, #28]
   17b00:	mov	r2, r8
   17b04:	mov	r1, r4
   17b08:	bl	11288 <memcpy@plt>
   17b0c:	ldr	r3, [r7, #28]
   17b10:	add	r8, r3, r8
   17b14:	str	r8, [r7, #28]
   17b18:	cmp	r6, r4
   17b1c:	beq	17b28 <argp_failure@@Base+0xd84>
   17b20:	mov	r0, r4
   17b24:	bl	1421c <argp_parse@@Base+0xfe4>
   17b28:	ldr	r1, [r7, #16]
   17b2c:	ldrd	r2, [r7, #24]
   17b30:	sub	r2, r3, r2
   17b34:	cmp	r2, r1
   17b38:	bhi	17dd8 <argp_failure@@Base+0x1034>
   17b3c:	mov	r2, #0
   17b40:	str	r2, [r7, #4]
   17b44:	ldr	r2, [r7, #32]
   17b48:	cmp	r2, r3
   17b4c:	bhi	17b68 <argp_failure@@Base+0xdc4>
   17b50:	mov	r1, #1
   17b54:	mov	r0, r7
   17b58:	bl	197a4 <argp_error@@Base+0x1500>
   17b5c:	cmp	r0, #0
   17b60:	beq	17b78 <argp_failure@@Base+0xdd4>
   17b64:	ldr	r3, [r7, #28]
   17b68:	add	r1, r3, #1
   17b6c:	mov	r2, #10
   17b70:	str	r1, [r7, #28]
   17b74:	strb	r2, [r3]
   17b78:	str	r5, [fp, #-88]	; 0xffffffa8
   17b7c:	b	17330 <argp_failure@@Base+0x58c>
   17b80:	cmp	sl, #95	; 0x5f
   17b84:	cmpne	sl, #45	; 0x2d
   17b88:	ubfx	r6, r6, #3, #1
   17b8c:	moveq	r3, #1
   17b90:	movne	r3, #0
   17b94:	orrs	r6, r3, r6
   17b98:	beq	180bc <argp_failure@@Base+0x1318>
   17b9c:	mov	r4, r5
   17ba0:	ldrb	r3, [r4, #1]!
   17ba4:	lsl	r2, r3, #1
   17ba8:	cmp	r3, #45	; 0x2d
   17bac:	cmpne	r3, #95	; 0x5f
   17bb0:	moveq	ip, #1
   17bb4:	movne	ip, #0
   17bb8:	ldrh	r2, [r1, r2]
   17bbc:	ubfx	r0, r2, #3, #1
   17bc0:	orrs	r0, ip, r0
   17bc4:	bne	17ba0 <argp_failure@@Base+0xdfc>
   17bc8:	tst	r2, #8192	; 0x2000
   17bcc:	sub	r6, r4, r5
   17bd0:	beq	17be8 <argp_failure@@Base+0xe44>
   17bd4:	ldrb	r3, [r4, #1]!
   17bd8:	lsl	r2, r3, #1
   17bdc:	ldrh	r2, [r1, r2]
   17be0:	tst	r2, #8192	; 0x2000
   17be4:	bne	17bd4 <argp_failure@@Base+0xe30>
   17be8:	cmp	r3, #44	; 0x2c
   17bec:	cmpne	r3, #0
   17bf0:	beq	17db8 <argp_failure@@Base+0x1014>
   17bf4:	cmp	r3, #61	; 0x3d
   17bf8:	beq	1802c <argp_failure@@Base+0x1288>
   17bfc:	ldrb	r3, [r4]
   17c00:	lsl	r3, r3, #1
   17c04:	ldrh	r3, [r1, r3]
   17c08:	ands	r3, r3, #2048	; 0x800
   17c0c:	moveq	r7, r3
   17c10:	streq	r7, [fp, #-112]	; 0xffffff90
   17c14:	bne	1805c <argp_failure@@Base+0x12b8>
   17c18:	ldr	sl, [pc, #1436]	; 181bc <argp_failure@@Base+0x1418>
   17c1c:	b	17c2c <argp_failure@@Base+0xe88>
   17c20:	add	sl, sl, #16
   17c24:	cmp	sl, r9
   17c28:	beq	17ebc <argp_failure@@Base+0x1118>
   17c2c:	mov	r0, sl
   17c30:	bl	113b4 <strlen@plt>
   17c34:	cmp	r0, r6
   17c38:	bne	17c20 <argp_failure@@Base+0xe7c>
   17c3c:	mov	r2, r6
   17c40:	mov	r1, sl
   17c44:	mov	r0, r5
   17c48:	bl	1151c <strncmp@plt>
   17c4c:	cmp	r0, #0
   17c50:	bne	17c20 <argp_failure@@Base+0xe7c>
   17c54:	cmp	r7, #0
   17c58:	bne	17ffc <argp_failure@@Base+0x1258>
   17c5c:	ldrb	r3, [sl, #15]
   17c60:	sub	r2, fp, #36	; 0x24
   17c64:	add	r3, r2, r3
   17c68:	ldr	r2, [fp, #-112]	; 0xffffff90
   17c6c:	str	r2, [r3, #-40]	; 0xffffffd8
   17c70:	ldrb	sl, [r4]
   17c74:	cmp	sl, #44	; 0x2c
   17c78:	movne	r5, r4
   17c7c:	bne	174e0 <argp_failure@@Base+0x73c>
   17c80:	add	r5, r4, #1
   17c84:	ldrb	sl, [r4, #1]
   17c88:	b	174e0 <argp_failure@@Base+0x73c>
   17c8c:	mov	r0, r7
   17c90:	bl	19138 <argp_error@@Base+0xe94>
   17c94:	ldr	r0, [r7, #16]
   17c98:	ldr	r3, [r7, #24]
   17c9c:	ldr	r2, [r7, #28]
   17ca0:	sub	r2, r2, r3
   17ca4:	b	170dc <argp_failure@@Base+0x338>
   17ca8:	mov	r0, r7
   17cac:	bl	19138 <argp_error@@Base+0xe94>
   17cb0:	ldr	r3, [fp, #-120]	; 0xffffff88
   17cb4:	ldr	r2, [r7, #16]
   17cb8:	ldr	r1, [r7, #24]
   17cbc:	str	r3, [r7, #4]
   17cc0:	ldr	r3, [r7, #28]
   17cc4:	sub	r3, r3, r1
   17cc8:	cmp	r3, r2
   17ccc:	bls	17350 <argp_failure@@Base+0x5ac>
   17cd0:	mov	r0, r7
   17cd4:	bl	19138 <argp_error@@Base+0xe94>
   17cd8:	b	17350 <argp_failure@@Base+0x5ac>
   17cdc:	mov	r0, r7
   17ce0:	bl	19138 <argp_error@@Base+0xe94>
   17ce4:	b	172dc <argp_failure@@Base+0x538>
   17ce8:	mov	r0, r7
   17cec:	bl	19138 <argp_error@@Base+0xe94>
   17cf0:	b	17170 <argp_failure@@Base+0x3cc>
   17cf4:	mov	r4, r6
   17cf8:	b	17954 <argp_failure@@Base+0xbb0>
   17cfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d00:	sub	r1, fp, #76	; 0x4c
   17d04:	ldr	r0, [r3, #8]
   17d08:	bl	16624 <argp_parse@@Base+0x33ec>
   17d0c:	ldr	r2, [r7, #28]
   17d10:	ldr	r1, [r7, #32]
   17d14:	cmp	r2, r1
   17d18:	bcc	17d34 <argp_failure@@Base+0xf90>
   17d1c:	mov	r1, #1
   17d20:	mov	r0, r7
   17d24:	bl	197a4 <argp_error@@Base+0x1500>
   17d28:	cmp	r0, #0
   17d2c:	beq	17d44 <argp_failure@@Base+0xfa0>
   17d30:	ldr	r2, [r7, #28]
   17d34:	add	r0, r2, #1
   17d38:	mov	r1, #45	; 0x2d
   17d3c:	str	r0, [r7, #28]
   17d40:	strb	r1, [r2]
   17d44:	ldr	r2, [r7, #28]
   17d48:	ldr	r1, [r7, #32]
   17d4c:	ldrb	r8, [r4]
   17d50:	cmp	r2, r1
   17d54:	bcc	17d70 <argp_failure@@Base+0xfcc>
   17d58:	mov	r1, #1
   17d5c:	mov	r0, r7
   17d60:	bl	197a4 <argp_error@@Base+0x1500>
   17d64:	cmp	r0, #0
   17d68:	beq	17d7c <argp_failure@@Base+0xfd8>
   17d6c:	ldr	r2, [r7, #28]
   17d70:	add	r1, r2, #1
   17d74:	str	r1, [r7, #28]
   17d78:	strb	r8, [r2]
   17d7c:	ldr	r3, [fp, #-124]	; 0xffffff84
   17d80:	ldr	r2, [r5, #8]
   17d84:	cmp	r3, #0
   17d88:	beq	17df4 <argp_failure@@Base+0x1050>
   17d8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d90:	ldr	r1, [r3]
   17d94:	cmp	r1, #0
   17d98:	bne	17df4 <argp_failure@@Base+0x1050>
   17d9c:	cmp	r2, #0
   17da0:	movne	r2, #1
   17da4:	strne	r2, [fp, #-80]	; 0xffffffb0
   17da8:	b	1791c <argp_failure@@Base+0xb78>
   17dac:	mov	r3, #1
   17db0:	str	r3, [fp, #-124]	; 0xffffff84
   17db4:	b	17160 <argp_failure@@Base+0x3bc>
   17db8:	cmp	sl, #110	; 0x6e
   17dbc:	beq	17edc <argp_failure@@Base+0x1138>
   17dc0:	mov	r7, #1
   17dc4:	str	r7, [fp, #-112]	; 0xffffff90
   17dc8:	b	17c18 <argp_failure@@Base+0xe74>
   17dcc:	mov	r0, r7
   17dd0:	bl	19138 <argp_error@@Base+0xe94>
   17dd4:	b	17a14 <argp_failure@@Base+0xc70>
   17dd8:	mov	r0, r7
   17ddc:	bl	19138 <argp_error@@Base+0xe94>
   17de0:	ldr	r3, [r7, #28]
   17de4:	b	17b3c <argp_failure@@Base+0xd98>
   17de8:	mov	r0, r7
   17dec:	bl	19138 <argp_error@@Base+0xe94>
   17df0:	b	17210 <argp_failure@@Base+0x46c>
   17df4:	cmp	r2, #0
   17df8:	beq	1791c <argp_failure@@Base+0xb78>
   17dfc:	ldr	r1, [r5, #12]
   17e00:	mov	r0, r7
   17e04:	tst	r1, #1
   17e08:	ldrne	r1, [fp, #-144]	; 0xffffff70
   17e0c:	ldreq	r1, [fp, #-140]	; 0xffffff74
   17e10:	bl	197c4 <argp_error@@Base+0x1520>
   17e14:	b	1791c <argp_failure@@Base+0xb78>
   17e18:	sub	r2, fp, #76	; 0x4c
   17e1c:	ldr	r0, [r4, #16]
   17e20:	ldr	r1, [r5, #20]
   17e24:	bl	163b8 <argp_parse@@Base+0x3180>
   17e28:	b	17b78 <argp_failure@@Base+0xdd4>
   17e2c:	ldr	r3, [r7, #28]
   17e30:	ldr	r1, [r7, #32]
   17e34:	add	r2, r3, #12
   17e38:	cmp	r1, r2
   17e3c:	bcs	17e58 <argp_failure@@Base+0x10b4>
   17e40:	mov	r1, #12
   17e44:	mov	r0, r7
   17e48:	bl	197a4 <argp_error@@Base+0x1500>
   17e4c:	cmp	r0, #0
   17e50:	beq	17710 <argp_failure@@Base+0x96c>
   17e54:	ldr	r3, [r7, #28]
   17e58:	movw	r2, #42476	; 0xa5ec
   17e5c:	movt	r2, #1
   17e60:	ldrd	r0, [r2]
   17e64:	ldr	r2, [r2, #8]
   17e68:	str	r0, [r3]
   17e6c:	str	r1, [r3, #4]
   17e70:	str	r2, [r3, #8]
   17e74:	ldr	r3, [r7, #28]
   17e78:	add	r3, r3, #12
   17e7c:	str	r3, [r7, #28]
   17e80:	b	17710 <argp_failure@@Base+0x96c>
   17e84:	ldr	lr, [fp, #-96]	; 0xffffffa0
   17e88:	mov	ip, #1
   17e8c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   17e90:	ldrd	r4, [lr, #8]
   17e94:	ldrd	r2, [lr, #32]
   17e98:	strd	r0, [r8]
   17e9c:	ldrd	r0, [lr, #24]
   17ea0:	strd	r4, [r8, #8]
   17ea4:	strd	r2, [r8, #32]
   17ea8:	ldrd	r2, [lr, #16]
   17eac:	strd	r2, [r8, #16]
   17eb0:	strd	r0, [r8, #24]
   17eb4:	str	ip, [r8, #36]	; 0x24
   17eb8:	b	1700c <argp_failure@@Base+0x268>
   17ebc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   17ec0:	mov	r2, #0
   17ec4:	mov	r1, r2
   17ec8:	str	r6, [sp]
   17ecc:	str	r5, [sp, #4]
   17ed0:	ldr	r0, [fp, #-104]	; 0xffffff98
   17ed4:	bl	16da4 <argp_failure@@Base>
   17ed8:	b	17c70 <argp_failure@@Base+0xecc>
   17edc:	ldrb	r3, [r5, #1]
   17ee0:	cmp	r3, #111	; 0x6f
   17ee4:	bne	17dc0 <argp_failure@@Base+0x101c>
   17ee8:	ldrb	r3, [r5, #2]
   17eec:	cmp	r3, #45	; 0x2d
   17ef0:	bne	17dc0 <argp_failure@@Base+0x101c>
   17ef4:	mov	r3, #0
   17ef8:	add	r5, r5, #3
   17efc:	sub	r6, r6, #3
   17f00:	mov	r7, #1
   17f04:	str	r3, [fp, #-112]	; 0xffffff90
   17f08:	b	17c18 <argp_failure@@Base+0xe74>
   17f0c:	ldr	r3, [r7, #28]
   17f10:	ldr	r2, [r7, #32]
   17f14:	cmp	r3, r2
   17f18:	bcs	17fc4 <argp_failure@@Base+0x1220>
   17f1c:	add	r1, r3, #1
   17f20:	mov	r2, #10
   17f24:	str	r1, [r7, #28]
   17f28:	strb	r2, [r3]
   17f2c:	b	17ac4 <argp_failure@@Base+0xd20>
   17f30:	mov	r0, r7
   17f34:	bl	19138 <argp_error@@Base+0xe94>
   17f38:	ldr	r2, [r7, #16]
   17f3c:	ldr	r1, [r7, #24]
   17f40:	ldr	r3, [r7, #28]
   17f44:	ldr	sl, [fp, #-96]	; 0xffffffa0
   17f48:	ldr	r9, [r7, #20]
   17f4c:	sub	r3, r3, r1
   17f50:	cmp	r3, r2
   17f54:	ldr	r8, [sl, #20]
   17f58:	bic	r9, r9, r9, asr #31
   17f5c:	bls	17990 <argp_failure@@Base+0xbec>
   17f60:	mov	r0, r7
   17f64:	bl	19138 <argp_error@@Base+0xe94>
   17f68:	ldr	r2, [r7, #16]
   17f6c:	str	r8, [r7, #4]
   17f70:	mov	r8, sl
   17f74:	ldr	r1, [r7, #24]
   17f78:	ldr	r3, [r7, #28]
   17f7c:	ldr	sl, [sl, #20]
   17f80:	sub	r3, r3, r1
   17f84:	cmp	r3, r2
   17f88:	bls	181b0 <argp_failure@@Base+0x140c>
   17f8c:	mov	r0, r7
   17f90:	bl	19138 <argp_error@@Base+0xe94>
   17f94:	ldr	r8, [r8, #20]
   17f98:	b	17998 <argp_failure@@Base+0xbf4>
   17f9c:	ldr	r0, [fp, #-128]	; 0xffffff80
   17fa0:	bl	112f4 <funlockfile@plt>
   17fa4:	b	17460 <argp_failure@@Base+0x6bc>
   17fa8:	movw	r3, #42360	; 0xa578
   17fac:	movt	r3, #1
   17fb0:	str	r5, [sp]
   17fb4:	mov	r1, r2
   17fb8:	ldr	r0, [fp, #-104]	; 0xffffff98
   17fbc:	bl	16da4 <argp_failure@@Base>
   17fc0:	b	1751c <argp_failure@@Base+0x778>
   17fc4:	mov	r1, #1
   17fc8:	mov	r0, r7
   17fcc:	bl	197a4 <argp_error@@Base+0x1500>
   17fd0:	cmp	r0, #0
   17fd4:	beq	17ac4 <argp_failure@@Base+0xd20>
   17fd8:	ldr	r3, [r7, #28]
   17fdc:	b	17f1c <argp_failure@@Base+0x1178>
   17fe0:	mov	r1, #1
   17fe4:	mov	r0, r7
   17fe8:	bl	197a4 <argp_error@@Base+0x1500>
   17fec:	cmp	r0, #0
   17ff0:	ldrne	r3, [r7, #28]
   17ff4:	bne	178fc <argp_failure@@Base+0xb58>
   17ff8:	b	1790c <argp_failure@@Base+0xb68>
   17ffc:	ldrb	r2, [sl, #14]
   18000:	cmp	r2, #0
   18004:	bne	17c5c <argp_failure@@Base+0xeb8>
   18008:	ldr	r3, [fp, #-120]	; 0xffffff88
   1800c:	b	17ec4 <argp_failure@@Base+0x1120>
   18010:	mov	r1, #1
   18014:	mov	r0, r7
   18018:	bl	197a4 <argp_error@@Base+0x1500>
   1801c:	cmp	r0, #0
   18020:	ldrne	r3, [r7, #28]
   18024:	bne	175c4 <argp_failure@@Base+0x820>
   18028:	b	175d4 <argp_failure@@Base+0x830>
   1802c:	ldrb	r3, [r4, #1]
   18030:	add	r4, r4, #1
   18034:	lsl	r3, r3, #1
   18038:	ldrh	r3, [r1, r3]
   1803c:	tst	r3, #8192	; 0x2000
   18040:	beq	17c08 <argp_failure@@Base+0xe64>
   18044:	ldrb	r3, [r4, #1]!
   18048:	lsl	r3, r3, #1
   1804c:	ldrh	r3, [r1, r3]
   18050:	tst	r3, #8192	; 0x2000
   18054:	bne	18044 <argp_failure@@Base+0x12a0>
   18058:	b	17c08 <argp_failure@@Base+0xe64>
   1805c:	mov	r2, #10
   18060:	mov	r1, #0
   18064:	mov	r0, r4
   18068:	bl	1121c <strtol@plt>
   1806c:	ldrb	r3, [r4]
   18070:	ldr	r2, [r7]
   18074:	lsl	r3, r3, #1
   18078:	ldrh	r7, [r2, r3]
   1807c:	str	r0, [fp, #-112]	; 0xffffff90
   18080:	tst	r7, #2048	; 0x800
   18084:	beq	1809c <argp_failure@@Base+0x12f8>
   18088:	ldrb	r3, [r4, #1]!
   1808c:	lsl	r3, r3, #1
   18090:	ldrh	r7, [r2, r3]
   18094:	tst	r7, #2048	; 0x800
   18098:	bne	18088 <argp_failure@@Base+0x12e4>
   1809c:	ands	r7, r7, #8192	; 0x2000
   180a0:	beq	17c18 <argp_failure@@Base+0xe74>
   180a4:	ldrb	r3, [r4, #1]!
   180a8:	lsl	r3, r3, #1
   180ac:	ldrh	r7, [r2, r3]
   180b0:	ands	r7, r7, #8192	; 0x2000
   180b4:	bne	180a4 <argp_failure@@Base+0x1300>
   180b8:	b	17c18 <argp_failure@@Base+0xe74>
   180bc:	mov	r3, sl
   180c0:	mov	r4, r5
   180c4:	b	17be8 <argp_failure@@Base+0xe44>
   180c8:	ldr	r5, [fp, #-112]	; 0xffffff90
   180cc:	movw	r4, #42140	; 0xa49c
   180d0:	movt	r4, #1
   180d4:	ldr	r3, [r7, #28]
   180d8:	ldr	r2, [r7, #32]
   180dc:	cmp	r3, r2
   180e0:	bcc	180fc <argp_failure@@Base+0x1358>
   180e4:	mov	r1, #1
   180e8:	mov	r0, r7
   180ec:	bl	197a4 <argp_error@@Base+0x1500>
   180f0:	cmp	r0, #0
   180f4:	beq	1810c <argp_failure@@Base+0x1368>
   180f8:	ldr	r3, [r7, #28]
   180fc:	add	r1, r3, #1
   18100:	mov	r2, #10
   18104:	str	r1, [r7, #28]
   18108:	strb	r2, [r3]
   1810c:	mov	r0, r4
   18110:	bl	113b4 <strlen@plt>
   18114:	subs	r6, r0, #0
   18118:	ldr	r0, [r7, #28]
   1811c:	ldr	r3, [r7, #32]
   18120:	bne	18168 <argp_failure@@Base+0x13c4>
   18124:	cmp	r0, r3
   18128:	bcc	18144 <argp_failure@@Base+0x13a0>
   1812c:	mov	r1, #1
   18130:	mov	r0, r7
   18134:	bl	197a4 <argp_error@@Base+0x1500>
   18138:	cmp	r0, #0
   1813c:	beq	173e4 <argp_failure@@Base+0x640>
   18140:	ldr	r0, [r7, #28]
   18144:	add	r2, r0, #1
   18148:	mov	r3, #10
   1814c:	str	r2, [r7, #28]
   18150:	strb	r3, [r0]
   18154:	b	173e4 <argp_failure@@Base+0x640>
   18158:	movw	r4, #42140	; 0xa49c
   1815c:	movt	r4, #1
   18160:	ldr	r5, [fp, #-104]	; 0xffffff98
   18164:	b	180d4 <argp_failure@@Base+0x1330>
   18168:	add	r2, r0, r6
   1816c:	cmp	r3, r2
   18170:	bcs	18190 <argp_failure@@Base+0x13ec>
   18174:	mov	r1, r6
   18178:	mov	r0, r7
   1817c:	bl	197a4 <argp_error@@Base+0x1500>
   18180:	cmp	r0, #0
   18184:	ldr	r0, [r7, #28]
   18188:	ldreq	r3, [r7, #32]
   1818c:	beq	18124 <argp_failure@@Base+0x1380>
   18190:	mov	r2, r6
   18194:	mov	r1, r4
   18198:	bl	11288 <memcpy@plt>
   1819c:	ldr	r0, [r7, #28]
   181a0:	ldr	r3, [r7, #32]
   181a4:	add	r0, r0, r6
   181a8:	str	r0, [r7, #28]
   181ac:	b	18124 <argp_failure@@Base+0x1380>
   181b0:	mov	r8, sl
   181b4:	b	17998 <argp_failure@@Base+0xbf4>
   181b8:	andeq	sl, r1, ip, ror #6
   181bc:	ldrdeq	sl, [r1], -ip

000181c0 <argp_help@@Base>:
   181c0:	push	{lr}		; (str lr, [sp, #-4]!)
   181c4:	sub	sp, sp, #12
   181c8:	str	r3, [sp]
   181cc:	mov	r3, r2
   181d0:	mov	r2, r1
   181d4:	mov	r1, #0
   181d8:	bl	16fc0 <argp_failure@@Base+0x21c>
   181dc:	add	sp, sp, #12
   181e0:	pop	{pc}		; (ldr pc, [sp], #4)

000181e4 <argp_state_help@@Base>:
   181e4:	strd	r4, [sp, #-12]!
   181e8:	subs	r4, r0, #0
   181ec:	mov	r5, r2
   181f0:	str	lr, [sp, #8]
   181f4:	sub	sp, sp, #12
   181f8:	beq	18268 <argp_state_help@@Base+0x84>
   181fc:	ldr	r3, [r4, #16]
   18200:	adds	r2, r1, #0
   18204:	movne	r2, #1
   18208:	eor	r0, r3, #2
   1820c:	ands	r2, r2, r0, lsr #1
   18210:	bne	18224 <argp_state_help@@Base+0x40>
   18214:	add	sp, sp, #12
   18218:	ldrd	r4, [sp]
   1821c:	add	sp, sp, #8
   18220:	pop	{pc}		; (ldr pc, [sp], #4)
   18224:	ldr	r0, [r4, #40]	; 0x28
   18228:	tst	r3, #64	; 0x40
   1822c:	mov	r2, r1
   18230:	orrne	r5, r5, #128	; 0x80
   18234:	mov	r1, r4
   18238:	mov	r3, r5
   1823c:	str	r0, [sp]
   18240:	ldr	r0, [r4]
   18244:	bl	16fc0 <argp_failure@@Base+0x21c>
   18248:	ldr	r3, [r4, #16]
   1824c:	tst	r3, #32
   18250:	bne	18214 <argp_state_help@@Base+0x30>
   18254:	ands	r0, r5, #256	; 0x100
   18258:	bne	18294 <argp_state_help@@Base+0xb0>
   1825c:	tst	r5, #512	; 0x200
   18260:	beq	18214 <argp_state_help@@Base+0x30>
   18264:	bl	113a8 <exit@plt>
   18268:	cmp	r1, #0
   1826c:	beq	18214 <argp_state_help@@Base+0x30>
   18270:	movw	r3, #45792	; 0xb2e0
   18274:	movt	r3, #2
   18278:	ldr	ip, [r3]
   1827c:	mov	r2, r1
   18280:	mov	r3, r5
   18284:	mov	r1, r4
   18288:	str	ip, [sp]
   1828c:	bl	16fc0 <argp_failure@@Base+0x21c>
   18290:	b	18254 <argp_state_help@@Base+0x70>
   18294:	movw	r3, #45788	; 0xb2dc
   18298:	movt	r3, #2
   1829c:	ldr	r0, [r3]
   182a0:	bl	113a8 <exit@plt>

000182a4 <argp_error@@Base>:
   182a4:	push	{r1, r2, r3}
   182a8:	strd	r4, [sp, #-12]!
   182ac:	subs	r5, r0, #0
   182b0:	str	lr, [sp, #8]
   182b4:	sub	sp, sp, #8
   182b8:	beq	18390 <argp_error@@Base+0xec>
   182bc:	ldr	r3, [r5, #16]
   182c0:	tst	r3, #2
   182c4:	bne	18378 <argp_error@@Base+0xd4>
   182c8:	ldr	r4, [r5, #44]	; 0x2c
   182cc:	cmp	r4, #0
   182d0:	beq	18378 <argp_error@@Base+0xd4>
   182d4:	mov	r0, r4
   182d8:	bl	114e0 <flockfile@plt>
   182dc:	ldr	r0, [r5, #40]	; 0x28
   182e0:	add	r3, sp, #24
   182e4:	str	r3, [sp, #4]
   182e8:	mov	r1, r4
   182ec:	bl	111ec <fputs_unlocked@plt>
   182f0:	ldr	r3, [r4, #20]
   182f4:	ldr	r2, [r4, #24]
   182f8:	cmp	r3, r2
   182fc:	addcc	r1, r3, #1
   18300:	movcc	r2, #58	; 0x3a
   18304:	strcc	r1, [r4, #20]
   18308:	strbcc	r2, [r3]
   1830c:	bcs	183d4 <argp_error@@Base+0x130>
   18310:	ldr	r3, [r4, #20]
   18314:	ldr	r2, [r4, #24]
   18318:	cmp	r3, r2
   1831c:	addcc	r1, r3, #1
   18320:	movcc	r2, #32
   18324:	strcc	r1, [r4, #20]
   18328:	strbcc	r2, [r3]
   1832c:	bcs	183e4 <argp_error@@Base+0x140>
   18330:	mov	r0, r4
   18334:	ldr	r2, [sp, #4]
   18338:	ldr	r1, [sp, #20]
   1833c:	bl	11480 <vfprintf@plt>
   18340:	ldr	r3, [r4, #20]
   18344:	ldr	r2, [r4, #24]
   18348:	cmp	r3, r2
   1834c:	addcc	r1, r3, #1
   18350:	movcc	r2, #10
   18354:	strcc	r1, [r4, #20]
   18358:	strbcc	r2, [r3]
   1835c:	bcs	183c4 <argp_error@@Base+0x120>
   18360:	mov	r0, r5
   18364:	mov	r2, #260	; 0x104
   18368:	mov	r1, r4
   1836c:	bl	181e4 <argp_state_help@@Base>
   18370:	mov	r0, r4
   18374:	bl	112f4 <funlockfile@plt>
   18378:	add	sp, sp, #8
   1837c:	ldrd	r4, [sp]
   18380:	ldr	lr, [sp, #8]
   18384:	add	sp, sp, #12
   18388:	add	sp, sp, #12
   1838c:	bx	lr
   18390:	movw	r3, #45800	; 0xb2e8
   18394:	movt	r3, #2
   18398:	ldr	r4, [r3]
   1839c:	cmp	r4, #0
   183a0:	beq	18378 <argp_error@@Base+0xd4>
   183a4:	mov	r0, r4
   183a8:	bl	114e0 <flockfile@plt>
   183ac:	add	r2, sp, #24
   183b0:	movw	r3, #45792	; 0xb2e0
   183b4:	movt	r3, #2
   183b8:	str	r2, [sp, #4]
   183bc:	ldr	r0, [r3]
   183c0:	b	182e8 <argp_error@@Base+0x44>
   183c4:	mov	r1, #10
   183c8:	mov	r0, r4
   183cc:	bl	11450 <__overflow@plt>
   183d0:	b	18360 <argp_error@@Base+0xbc>
   183d4:	mov	r1, #58	; 0x3a
   183d8:	mov	r0, r4
   183dc:	bl	11450 <__overflow@plt>
   183e0:	b	18310 <argp_error@@Base+0x6c>
   183e4:	mov	r1, #32
   183e8:	mov	r0, r4
   183ec:	bl	11450 <__overflow@plt>
   183f0:	b	18330 <argp_error@@Base+0x8c>
   183f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   183f8:	ldr	r4, [r1, #32]
   183fc:	strd	r6, [sp, #8]
   18400:	strd	r8, [sp, #16]
   18404:	ldr	r7, [r1]
   18408:	str	sl, [sp, #24]
   1840c:	ldr	r8, [r1, #28]
   18410:	add	r6, r0, r4, lsl #2
   18414:	str	lr, [sp, #28]
   18418:	mov	r5, r7
   1841c:	mov	r3, r8
   18420:	cmp	r5, r4
   18424:	movle	r2, #0
   18428:	movgt	r2, #1
   1842c:	cmp	r3, r4
   18430:	movge	r2, #0
   18434:	cmp	r2, #0
   18438:	beq	184ac <argp_error@@Base+0x208>
   1843c:	sub	r2, r5, r4
   18440:	sub	lr, r4, r3
   18444:	cmp	r2, lr
   18448:	ble	1847c <argp_error@@Base+0x1d8>
   1844c:	sub	r5, r5, lr
   18450:	add	lr, lr, r3
   18454:	add	r2, r0, r3, lsl #2
   18458:	add	lr, r0, lr, lsl #2
   1845c:	add	ip, r0, r5, lsl #2
   18460:	ldr	sl, [ip]
   18464:	ldr	r9, [r2]
   18468:	str	sl, [r2], #4
   1846c:	cmp	lr, r2
   18470:	str	r9, [ip], #4
   18474:	bne	18460 <argp_error@@Base+0x1bc>
   18478:	b	18420 <argp_error@@Base+0x17c>
   1847c:	add	sl, r2, r3
   18480:	add	r3, r0, r3, lsl #2
   18484:	mov	r2, r6
   18488:	add	r9, r0, sl, lsl #2
   1848c:	ldr	lr, [r2]
   18490:	ldr	ip, [r3]
   18494:	str	lr, [r3], #4
   18498:	cmp	r3, r9
   1849c:	str	ip, [r2], #4
   184a0:	bne	1848c <argp_error@@Base+0x1e8>
   184a4:	mov	r3, sl
   184a8:	b	18420 <argp_error@@Base+0x17c>
   184ac:	sub	r4, r7, r4
   184b0:	str	r7, [r1, #32]
   184b4:	add	r8, r4, r8
   184b8:	ldrd	r4, [sp]
   184bc:	str	r8, [r1, #28]
   184c0:	ldrd	r6, [sp, #8]
   184c4:	ldrd	r8, [sp, #16]
   184c8:	ldr	sl, [sp, #24]
   184cc:	add	sp, sp, #28
   184d0:	pop	{pc}		; (ldr pc, [sp], #4)
   184d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   184d8:	strd	r6, [sp, #8]
   184dc:	strd	r8, [sp, #16]
   184e0:	strd	sl, [sp, #24]
   184e4:	str	lr, [sp, #32]
   184e8:	sub	sp, sp, #52	; 0x34
   184ec:	str	r3, [sp, #12]
   184f0:	ldr	r3, [sp, #96]	; 0x60
   184f4:	str	r1, [sp, #28]
   184f8:	str	r2, [sp, #32]
   184fc:	str	r0, [sp, #36]	; 0x24
   18500:	ldr	r8, [r3, #20]
   18504:	ldrb	r5, [r8]
   18508:	mov	r9, r8
   1850c:	cmp	r5, #61	; 0x3d
   18510:	cmpne	r5, #0
   18514:	movne	r5, #1
   18518:	moveq	r5, #0
   1851c:	beq	18534 <argp_error@@Base+0x290>
   18520:	ldrb	r3, [r9, #1]!
   18524:	cmp	r3, #0
   18528:	cmpne	r3, #61	; 0x3d
   1852c:	bne	18520 <argp_error@@Base+0x27c>
   18530:	sub	r5, r9, r8
   18534:	ldr	r3, [sp, #12]
   18538:	ldr	r3, [r3]
   1853c:	cmp	r3, #0
   18540:	str	r3, [sp, #16]
   18544:	beq	1870c <argp_error@@Base+0x468>
   18548:	ldr	fp, [sp, #12]
   1854c:	mov	r6, #0
   18550:	ldr	r4, [sp, #16]
   18554:	str	fp, [sp, #24]
   18558:	b	18560 <argp_error@@Base+0x2bc>
   1855c:	mov	r6, r7
   18560:	mov	r2, r5
   18564:	mov	r1, r8
   18568:	mov	r0, r4
   1856c:	add	r7, r6, #1
   18570:	bl	1151c <strncmp@plt>
   18574:	cmp	r0, #0
   18578:	mov	sl, fp
   1857c:	mov	r0, r4
   18580:	bne	18590 <argp_error@@Base+0x2ec>
   18584:	bl	113b4 <strlen@plt>
   18588:	cmp	r0, r5
   1858c:	beq	18644 <argp_error@@Base+0x3a0>
   18590:	ldr	r4, [fp, #16]!
   18594:	cmp	r4, #0
   18598:	bne	1855c <argp_error@@Base+0x2b8>
   1859c:	ldr	r0, [sp, #16]
   185a0:	mvn	r3, #0
   185a4:	mov	r1, r8
   185a8:	str	r7, [sp, #16]
   185ac:	mov	sl, r4
   185b0:	mov	r8, r4
   185b4:	ldr	fp, [sp, #24]
   185b8:	str	r4, [sp, #20]
   185bc:	ldr	r7, [sp, #96]	; 0x60
   185c0:	str	r3, [sp, #40]	; 0x28
   185c4:	str	r4, [sp, #44]	; 0x2c
   185c8:	mov	r2, r5
   185cc:	bl	1151c <strncmp@plt>
   185d0:	cmp	r0, #0
   185d4:	bne	18614 <argp_error@@Base+0x370>
   185d8:	cmp	sl, #0
   185dc:	beq	18700 <argp_error@@Base+0x45c>
   185e0:	ldr	r3, [sp, #92]	; 0x5c
   185e4:	cmp	r3, #0
   185e8:	beq	186b4 <argp_error@@Base+0x410>
   185ec:	ldr	r3, [sp, #20]
   185f0:	cmp	r3, #0
   185f4:	bne	18614 <argp_error@@Base+0x370>
   185f8:	ldr	r3, [sp, #100]	; 0x64
   185fc:	cmp	r3, #0
   18600:	beq	18784 <argp_error@@Base+0x4e0>
   18604:	cmp	r4, #0
   18608:	beq	188ac <argp_error@@Base+0x608>
   1860c:	mov	r3, #1
   18610:	strb	r3, [r4, r8]
   18614:	ldr	r0, [fp, #16]!
   18618:	add	r8, r8, #1
   1861c:	cmp	r0, #0
   18620:	beq	1862c <argp_error@@Base+0x388>
   18624:	ldr	r1, [r7, #20]
   18628:	b	185c8 <argp_error@@Base+0x324>
   1862c:	ldr	r3, [sp, #20]
   18630:	orrs	r3, r4, r3
   18634:	bne	187d4 <argp_error@@Base+0x530>
   18638:	cmp	sl, #0
   1863c:	ldrne	r6, [sp, #40]	; 0x28
   18640:	beq	1870c <argp_error@@Base+0x468>
   18644:	ldr	r3, [sp, #96]	; 0x60
   18648:	mov	r2, #0
   1864c:	ldr	r1, [sp, #96]	; 0x60
   18650:	ldr	r0, [sl, #4]
   18654:	ldr	r3, [r3]
   18658:	str	r2, [r1, #20]
   1865c:	add	r2, r3, #1
   18660:	str	r2, [r1]
   18664:	ldrb	r1, [r9]
   18668:	cmp	r1, #0
   1866c:	bne	186e8 <argp_error@@Base+0x444>
   18670:	cmp	r0, #1
   18674:	beq	18864 <argp_error@@Base+0x5c0>
   18678:	ldr	r3, [sp, #88]	; 0x58
   1867c:	cmp	r3, #0
   18680:	strne	r6, [r3]
   18684:	ldr	r3, [sl, #8]
   18688:	ldr	r0, [sl, #12]
   1868c:	cmp	r3, #0
   18690:	strne	r0, [r3]
   18694:	movne	r0, #0
   18698:	add	sp, sp, #52	; 0x34
   1869c:	ldrd	r4, [sp]
   186a0:	ldrd	r6, [sp, #8]
   186a4:	ldrd	r8, [sp, #16]
   186a8:	ldrd	sl, [sp, #24]
   186ac:	add	sp, sp, #32
   186b0:	pop	{pc}		; (ldr pc, [sp], #4)
   186b4:	ldr	r1, [sl, #4]
   186b8:	ldr	r2, [fp, #4]
   186bc:	cmp	r1, r2
   186c0:	bne	185ec <argp_error@@Base+0x348>
   186c4:	ldr	r1, [sl, #8]
   186c8:	ldr	r2, [fp, #8]
   186cc:	cmp	r1, r2
   186d0:	bne	185ec <argp_error@@Base+0x348>
   186d4:	ldr	r1, [sl, #12]
   186d8:	ldr	r2, [fp, #12]
   186dc:	cmp	r1, r2
   186e0:	bne	185ec <argp_error@@Base+0x348>
   186e4:	b	18614 <argp_error@@Base+0x370>
   186e8:	cmp	r0, #0
   186ec:	beq	1888c <argp_error@@Base+0x5e8>
   186f0:	ldr	r3, [sp, #96]	; 0x60
   186f4:	add	r9, r9, #1
   186f8:	str	r9, [r3, #12]
   186fc:	b	18678 <argp_error@@Base+0x3d4>
   18700:	mov	sl, fp
   18704:	str	r8, [sp, #40]	; 0x28
   18708:	b	18614 <argp_error@@Base+0x370>
   1870c:	ldr	r3, [sp, #92]	; 0x5c
   18710:	cmp	r3, #0
   18714:	beq	18750 <argp_error@@Base+0x4ac>
   18718:	ldr	r2, [sp, #28]
   1871c:	ldr	r3, [sp, #96]	; 0x60
   18720:	ldr	r3, [r3]
   18724:	ldr	r3, [r2, r3, lsl #2]
   18728:	ldrb	r3, [r3, #1]
   1872c:	cmp	r3, #45	; 0x2d
   18730:	beq	18750 <argp_error@@Base+0x4ac>
   18734:	ldr	r0, [sp, #32]
   18738:	ldr	r3, [sp, #96]	; 0x60
   1873c:	ldr	r3, [r3, #20]
   18740:	ldrb	r1, [r3]
   18744:	bl	113c0 <strchr@plt>
   18748:	cmp	r0, #0
   1874c:	bne	1891c <argp_error@@Base+0x678>
   18750:	ldr	r3, [sp, #100]	; 0x64
   18754:	cmp	r3, #0
   18758:	bne	187a0 <argp_error@@Base+0x4fc>
   1875c:	ldr	r3, [sp, #96]	; 0x60
   18760:	mov	r2, #0
   18764:	mov	r0, #63	; 0x3f
   18768:	ldr	r1, [sp, #96]	; 0x60
   1876c:	ldr	r3, [r3]
   18770:	str	r2, [r1, #8]
   18774:	str	r2, [r1, #20]
   18778:	add	r3, r3, #1
   1877c:	str	r3, [r1]
   18780:	b	18698 <argp_error@@Base+0x3f4>
   18784:	mov	r3, #1
   18788:	cmp	r4, #0
   1878c:	str	r3, [sp, #20]
   18790:	beq	18614 <argp_error@@Base+0x370>
   18794:	mov	r3, #1
   18798:	strb	r3, [r4, r8]
   1879c:	b	18614 <argp_error@@Base+0x370>
   187a0:	ldr	r3, [sp, #96]	; 0x60
   187a4:	movw	r0, #45800	; 0xb2e8
   187a8:	movt	r0, #2
   187ac:	movw	r1, #42688	; 0xa6c0
   187b0:	movt	r1, #1
   187b4:	ldr	r0, [r0]
   187b8:	ldr	ip, [r3, #20]
   187bc:	ldr	r3, [sp, #28]
   187c0:	ldr	r2, [r3]
   187c4:	str	ip, [sp]
   187c8:	ldr	r3, [sp, #104]	; 0x68
   187cc:	bl	113cc <fprintf@plt>
   187d0:	b	1875c <argp_error@@Base+0x4b8>
   187d4:	ldr	r3, [sp, #100]	; 0x64
   187d8:	cmp	r3, #0
   187dc:	beq	1881c <argp_error@@Base+0x578>
   187e0:	ldr	r3, [sp, #20]
   187e4:	movw	r5, #45800	; 0xb2e8
   187e8:	movt	r5, #2
   187ec:	ldr	r0, [r5]
   187f0:	cmp	r3, #0
   187f4:	beq	18954 <argp_error@@Base+0x6b0>
   187f8:	ldr	r2, [sp, #28]
   187fc:	movw	r1, #42600	; 0xa668
   18800:	movt	r1, #1
   18804:	ldr	r3, [sp, #96]	; 0x60
   18808:	ldr	r2, [r2]
   1880c:	ldr	ip, [r3, #20]
   18810:	ldr	r3, [sp, #104]	; 0x68
   18814:	str	ip, [sp]
   18818:	bl	113cc <fprintf@plt>
   1881c:	ldr	r3, [sp, #44]	; 0x2c
   18820:	cmp	r3, #0
   18824:	bne	18910 <argp_error@@Base+0x66c>
   18828:	ldr	r3, [sp, #96]	; 0x60
   1882c:	ldr	r4, [r3, #20]
   18830:	mov	r0, r4
   18834:	bl	113b4 <strlen@plt>
   18838:	ldr	r3, [sp, #96]	; 0x60
   1883c:	add	r4, r4, r0
   18840:	mov	r2, #0
   18844:	mov	r0, #63	; 0x3f
   18848:	ldr	r1, [sp, #96]	; 0x60
   1884c:	ldr	r3, [r3]
   18850:	str	r2, [r1, #8]
   18854:	str	r4, [r1, #20]
   18858:	add	r3, r3, #1
   1885c:	str	r3, [r1]
   18860:	b	18698 <argp_error@@Base+0x3f4>
   18864:	ldr	r1, [sp, #36]	; 0x24
   18868:	cmp	r2, r1
   1886c:	bge	18924 <argp_error@@Base+0x680>
   18870:	ldr	r1, [sp, #28]
   18874:	add	r3, r3, #2
   18878:	ldr	r2, [r1, r2, lsl #2]
   1887c:	ldr	r1, [sp, #96]	; 0x60
   18880:	str	r3, [r1]
   18884:	str	r2, [r1, #12]
   18888:	b	18678 <argp_error@@Base+0x3d4>
   1888c:	ldr	r3, [sp, #100]	; 0x64
   18890:	cmp	r3, #0
   18894:	bne	188e0 <argp_error@@Base+0x63c>
   18898:	ldr	r3, [sl, #12]
   1889c:	mov	r0, #63	; 0x3f
   188a0:	ldr	r2, [sp, #96]	; 0x60
   188a4:	str	r3, [r2, #8]
   188a8:	b	18698 <argp_error@@Base+0x3f4>
   188ac:	ldr	r0, [sp, #16]
   188b0:	bl	14ddc <argp_parse@@Base+0x1ba4>
   188b4:	subs	r4, r0, #0
   188b8:	beq	18a18 <argp_error@@Base+0x774>
   188bc:	ldr	r2, [sp, #16]
   188c0:	ldr	r1, [sp, #20]
   188c4:	bl	113fc <memset@plt>
   188c8:	mov	r3, #1
   188cc:	mov	r2, #1
   188d0:	str	r3, [sp, #44]	; 0x2c
   188d4:	ldr	r3, [sp, #40]	; 0x28
   188d8:	strb	r2, [r4, r3]
   188dc:	b	1860c <argp_error@@Base+0x368>
   188e0:	ldr	ip, [sl]
   188e4:	movw	r0, #45800	; 0xb2e8
   188e8:	movt	r0, #2
   188ec:	movw	r1, #42720	; 0xa6e0
   188f0:	movt	r1, #1
   188f4:	ldr	r3, [sp, #28]
   188f8:	ldr	r0, [r0]
   188fc:	ldr	r2, [r3]
   18900:	str	ip, [sp]
   18904:	ldr	r3, [sp, #104]	; 0x68
   18908:	bl	113cc <fprintf@plt>
   1890c:	b	18898 <argp_error@@Base+0x5f4>
   18910:	mov	r0, r4
   18914:	bl	1421c <argp_parse@@Base+0xfe4>
   18918:	b	18828 <argp_error@@Base+0x584>
   1891c:	mvn	r0, #0
   18920:	b	18698 <argp_error@@Base+0x3f4>
   18924:	ldr	r3, [sp, #100]	; 0x64
   18928:	cmp	r3, #0
   1892c:	bne	189e8 <argp_error@@Base+0x744>
   18930:	ldr	r3, [sl, #12]
   18934:	ldr	r2, [sp, #96]	; 0x60
   18938:	str	r3, [r2, #8]
   1893c:	ldr	r3, [sp, #32]
   18940:	ldrb	r3, [r3]
   18944:	cmp	r3, #58	; 0x3a
   18948:	moveq	r0, #58	; 0x3a
   1894c:	movne	r0, #63	; 0x3f
   18950:	b	18698 <argp_error@@Base+0x3f4>
   18954:	bl	114e0 <flockfile@plt>
   18958:	ldr	r2, [sp, #28]
   1895c:	movw	r1, #42632	; 0xa688
   18960:	movt	r1, #1
   18964:	movw	r7, #42680	; 0xa6b8
   18968:	movt	r7, #1
   1896c:	ldr	r3, [sp, #96]	; 0x60
   18970:	add	r6, r4, r6
   18974:	sub	r8, r4, #1
   18978:	ldr	r2, [r2]
   1897c:	ldr	r0, [r3, #20]
   18980:	ldr	r3, [sp, #104]	; 0x68
   18984:	str	r0, [sp]
   18988:	ldr	r0, [r5]
   1898c:	bl	113cc <fprintf@plt>
   18990:	ldr	r0, [r5]
   18994:	ldr	sl, [sp, #12]
   18998:	ldr	r9, [sp, #20]
   1899c:	b	189ac <argp_error@@Base+0x708>
   189a0:	cmp	r6, r8
   189a4:	add	r9, r9, #1
   189a8:	beq	189d0 <argp_error@@Base+0x72c>
   189ac:	ldrb	r3, [r8, #1]!
   189b0:	cmp	r3, #0
   189b4:	beq	189a0 <argp_error@@Base+0x6fc>
   189b8:	mov	r1, r7
   189bc:	ldr	r3, [sl, r9, lsl #4]
   189c0:	ldr	r2, [sp, #104]	; 0x68
   189c4:	bl	113cc <fprintf@plt>
   189c8:	ldr	r0, [r5]
   189cc:	b	189a0 <argp_error@@Base+0x6fc>
   189d0:	mov	r1, r0
   189d4:	mov	r0, #10
   189d8:	bl	11498 <fputc@plt>
   189dc:	ldr	r0, [r5]
   189e0:	bl	112f4 <funlockfile@plt>
   189e4:	b	1881c <argp_error@@Base+0x578>
   189e8:	ldr	ip, [sl]
   189ec:	movw	r0, #45800	; 0xb2e8
   189f0:	movt	r0, #2
   189f4:	movw	r1, #42768	; 0xa710
   189f8:	movt	r1, #1
   189fc:	ldr	r3, [sp, #28]
   18a00:	ldr	r0, [r0]
   18a04:	ldr	r2, [r3]
   18a08:	str	ip, [sp]
   18a0c:	ldr	r3, [sp, #104]	; 0x68
   18a10:	bl	113cc <fprintf@plt>
   18a14:	b	18930 <argp_error@@Base+0x68c>
   18a18:	mov	r3, #1
   18a1c:	str	r3, [sp, #20]
   18a20:	b	18614 <argp_error@@Base+0x370>
   18a24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18a28:	subs	r5, r0, #0
   18a2c:	strd	r6, [sp, #8]
   18a30:	strd	r8, [sp, #16]
   18a34:	strd	sl, [sp, #24]
   18a38:	str	lr, [sp, #32]
   18a3c:	sub	sp, sp, #36	; 0x24
   18a40:	ldr	r4, [sp, #80]	; 0x50
   18a44:	ldr	r7, [r4, #4]
   18a48:	ble	18c38 <argp_error@@Base+0x994>
   18a4c:	mov	r6, r2
   18a50:	mov	sl, r3
   18a54:	ldr	r2, [r4]
   18a58:	mov	r3, #0
   18a5c:	mov	r9, r1
   18a60:	str	r3, [r4, #12]
   18a64:	cmp	r2, r3
   18a68:	beq	18ce0 <argp_error@@Base+0xa3c>
   18a6c:	ldr	r3, [r4, #16]
   18a70:	cmp	r3, #0
   18a74:	bne	18c04 <argp_error@@Base+0x960>
   18a78:	mov	r3, #0
   18a7c:	str	r3, [r4, #20]
   18a80:	str	r2, [r4, #28]
   18a84:	str	r2, [r4, #32]
   18a88:	ldrb	r2, [r6]
   18a8c:	cmp	r2, #45	; 0x2d
   18a90:	moveq	r2, #2
   18a94:	addeq	r6, r6, #1
   18a98:	streq	r2, [r4, #24]
   18a9c:	beq	18ac4 <argp_error@@Base+0x820>
   18aa0:	cmp	r2, #43	; 0x2b
   18aa4:	addeq	r6, r6, #1
   18aa8:	streq	r3, [r4, #24]
   18aac:	beq	18ac4 <argp_error@@Base+0x820>
   18ab0:	ldr	r2, [sp, #84]	; 0x54
   18ab4:	cmp	r2, #0
   18ab8:	beq	18e10 <argp_error@@Base+0xb6c>
   18abc:	mov	r2, #0
   18ac0:	str	r2, [r4, #24]
   18ac4:	mov	r2, #1
   18ac8:	str	r2, [r4, #16]
   18acc:	ldrb	r2, [r6]
   18ad0:	cmp	r2, #58	; 0x3a
   18ad4:	moveq	r7, #0
   18ad8:	cmp	r3, #0
   18adc:	beq	18b70 <argp_error@@Base+0x8cc>
   18ae0:	ldrb	r2, [r3]
   18ae4:	cmp	r2, #0
   18ae8:	beq	18b70 <argp_error@@Base+0x8cc>
   18aec:	add	fp, r3, #1
   18af0:	mov	r0, r6
   18af4:	str	r3, [sp, #28]
   18af8:	str	fp, [r4, #20]
   18afc:	ldrb	r8, [r3]
   18b00:	mov	r1, r8
   18b04:	str	r8, [sp, #24]
   18b08:	bl	113c0 <strchr@plt>
   18b0c:	ldrd	r2, [sp, #24]
   18b10:	ldrb	r1, [r3, #1]
   18b14:	cmp	r1, #0
   18b18:	bne	18b28 <argp_error@@Base+0x884>
   18b1c:	ldr	r1, [r4]
   18b20:	add	r1, r1, #1
   18b24:	str	r1, [r4]
   18b28:	sub	r1, r8, #58	; 0x3a
   18b2c:	cmp	r0, #0
   18b30:	cmpne	r1, #1
   18b34:	bls	18e8c <argp_error@@Base+0xbe8>
   18b38:	ldrb	ip, [r0]
   18b3c:	ldrb	r1, [r0, #1]
   18b40:	cmp	ip, #87	; 0x57
   18b44:	beq	18d90 <argp_error@@Base+0xaec>
   18b48:	cmp	r1, #58	; 0x3a
   18b4c:	beq	18e34 <argp_error@@Base+0xb90>
   18b50:	mov	r0, r2
   18b54:	add	sp, sp, #36	; 0x24
   18b58:	ldrd	r4, [sp]
   18b5c:	ldrd	r6, [sp, #8]
   18b60:	ldrd	r8, [sp, #16]
   18b64:	ldrd	sl, [sp, #24]
   18b68:	add	sp, sp, #32
   18b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b70:	ldr	r8, [r4]
   18b74:	ldr	r3, [r4, #32]
   18b78:	cmp	r3, r8
   18b7c:	ldr	r3, [r4, #28]
   18b80:	strgt	r8, [r4, #32]
   18b84:	cmp	r8, r3
   18b88:	ldr	r3, [r4, #24]
   18b8c:	strlt	r8, [r4, #28]
   18b90:	cmp	r3, #1
   18b94:	beq	18c40 <argp_error@@Base+0x99c>
   18b98:	cmp	r5, r8
   18b9c:	beq	18c20 <argp_error@@Base+0x97c>
   18ba0:	ldr	r3, [r9, r8, lsl #2]
   18ba4:	movw	fp, #40456	; 0x9e08
   18ba8:	movt	fp, #1
   18bac:	mov	r1, fp
   18bb0:	mov	r0, r3
   18bb4:	str	r3, [sp, #24]
   18bb8:	bl	11210 <strcmp@plt>
   18bbc:	cmp	r0, #0
   18bc0:	ldr	r3, [sp, #24]
   18bc4:	bne	18cb4 <argp_error@@Base+0xa10>
   18bc8:	ldr	r3, [r4, #28]
   18bcc:	add	r8, r8, #1
   18bd0:	ldr	r2, [r4, #32]
   18bd4:	str	r8, [r4]
   18bd8:	cmp	r3, r2
   18bdc:	beq	18ea0 <argp_error@@Base+0xbfc>
   18be0:	cmp	r8, r2
   18be4:	beq	18bf8 <argp_error@@Base+0x954>
   18be8:	mov	r0, r9
   18bec:	mov	r1, r4
   18bf0:	bl	183f4 <argp_error@@Base+0x150>
   18bf4:	ldr	r3, [r4, #28]
   18bf8:	str	r5, [r4]
   18bfc:	str	r5, [r4, #32]
   18c00:	b	18c28 <argp_error@@Base+0x984>
   18c04:	ldrb	r2, [r6]
   18c08:	ldr	r3, [r4, #20]
   18c0c:	sub	r1, r2, #43	; 0x2b
   18c10:	tst	r1, #253	; 0xfd
   18c14:	ldrbeq	r2, [r6, #1]
   18c18:	addeq	r6, r6, #1
   18c1c:	b	18ad0 <argp_error@@Base+0x82c>
   18c20:	ldr	r3, [r4, #28]
   18c24:	ldr	r5, [r4, #32]
   18c28:	cmp	r5, r3
   18c2c:	mvnne	r2, #0
   18c30:	strne	r3, [r4]
   18c34:	bne	18b50 <argp_error@@Base+0x8ac>
   18c38:	mvn	r2, #0
   18c3c:	b	18b50 <argp_error@@Base+0x8ac>
   18c40:	ldrd	r2, [r4, #28]
   18c44:	cmp	r2, r3
   18c48:	beq	18e74 <argp_error@@Base+0xbd0>
   18c4c:	cmp	r8, r3
   18c50:	beq	18c64 <argp_error@@Base+0x9c0>
   18c54:	mov	r1, r4
   18c58:	mov	r0, r9
   18c5c:	bl	183f4 <argp_error@@Base+0x150>
   18c60:	ldr	r3, [r4]
   18c64:	cmp	r5, r3
   18c68:	ble	18e84 <argp_error@@Base+0xbe0>
   18c6c:	add	r1, r9, r3, lsl #2
   18c70:	b	18c84 <argp_error@@Base+0x9e0>
   18c74:	add	r3, r3, #1
   18c78:	cmp	r3, r5
   18c7c:	str	r3, [r4]
   18c80:	beq	18e84 <argp_error@@Base+0xbe0>
   18c84:	ldr	r2, [r1], #4
   18c88:	ldrb	r0, [r2]
   18c8c:	cmp	r0, #45	; 0x2d
   18c90:	bne	18c74 <argp_error@@Base+0x9d0>
   18c94:	ldrb	r2, [r2, #1]
   18c98:	cmp	r2, #0
   18c9c:	beq	18c74 <argp_error@@Base+0x9d0>
   18ca0:	ldr	r8, [r4]
   18ca4:	cmp	r5, r8
   18ca8:	str	r3, [r4, #32]
   18cac:	bne	18ba0 <argp_error@@Base+0x8fc>
   18cb0:	b	18c20 <argp_error@@Base+0x97c>
   18cb4:	ldrb	r2, [r3]
   18cb8:	cmp	r2, #45	; 0x2d
   18cbc:	beq	18cf0 <argp_error@@Base+0xa4c>
   18cc0:	ldr	r2, [r4, #24]
   18cc4:	cmp	r2, #0
   18cc8:	beq	18c38 <argp_error@@Base+0x994>
   18ccc:	add	r8, r8, #1
   18cd0:	mov	r2, #1
   18cd4:	str	r8, [r4]
   18cd8:	str	r3, [r4, #12]
   18cdc:	b	18b50 <argp_error@@Base+0x8ac>
   18ce0:	mov	r3, #1
   18ce4:	mov	r2, r3
   18ce8:	str	r3, [r4]
   18cec:	b	18a78 <argp_error@@Base+0x7d4>
   18cf0:	ldrb	r1, [r3, #1]
   18cf4:	cmp	r1, #0
   18cf8:	beq	18cc0 <argp_error@@Base+0xa1c>
   18cfc:	cmp	sl, #0
   18d00:	beq	18d88 <argp_error@@Base+0xae4>
   18d04:	cmp	r1, #45	; 0x2d
   18d08:	beq	18f20 <argp_error@@Base+0xc7c>
   18d0c:	ldr	r2, [sp, #76]	; 0x4c
   18d10:	cmp	r2, #0
   18d14:	beq	18d88 <argp_error@@Base+0xae4>
   18d18:	ldrb	r2, [r3, #2]
   18d1c:	cmp	r2, #0
   18d20:	bne	18d3c <argp_error@@Base+0xa98>
   18d24:	mov	r0, r6
   18d28:	str	r3, [sp, #24]
   18d2c:	bl	113c0 <strchr@plt>
   18d30:	cmp	r0, #0
   18d34:	ldr	r3, [sp, #24]
   18d38:	bne	18d88 <argp_error@@Base+0xae4>
   18d3c:	ldr	r2, [sp, #72]	; 0x48
   18d40:	add	ip, r3, #1
   18d44:	movw	r0, #42824	; 0xa748
   18d48:	movt	r0, #1
   18d4c:	mov	r3, sl
   18d50:	ldr	r1, [sp, #76]	; 0x4c
   18d54:	str	r2, [sp]
   18d58:	mov	r2, r6
   18d5c:	str	r0, [sp, #16]
   18d60:	mov	r0, r5
   18d64:	stmib	sp, {r1, r4, r7}
   18d68:	mov	r1, r9
   18d6c:	str	ip, [r4, #20]
   18d70:	bl	184d4 <argp_error@@Base+0x230>
   18d74:	cmn	r0, #1
   18d78:	mov	r2, r0
   18d7c:	bne	18b50 <argp_error@@Base+0x8ac>
   18d80:	ldr	r3, [r4]
   18d84:	ldr	r3, [r9, r3, lsl #2]
   18d88:	add	r3, r3, #1
   18d8c:	b	18aec <argp_error@@Base+0x848>
   18d90:	sub	ip, r1, #59	; 0x3b
   18d94:	cmp	sl, #0
   18d98:	clz	ip, ip
   18d9c:	lsr	ip, ip, #5
   18da0:	moveq	ip, #0
   18da4:	cmp	ip, #0
   18da8:	beq	18b48 <argp_error@@Base+0x8a4>
   18dac:	ldrb	r3, [r3, #1]
   18db0:	cmp	r3, #0
   18db4:	bne	18dc8 <argp_error@@Base+0xb24>
   18db8:	ldr	r3, [r4]
   18dbc:	cmp	r3, r5
   18dc0:	beq	18f54 <argp_error@@Base+0xcb0>
   18dc4:	ldr	fp, [r9, r3, lsl #2]
   18dc8:	mov	lr, #0
   18dcc:	movw	ip, #42900	; 0xa794
   18dd0:	movt	ip, #1
   18dd4:	ldr	r3, [sp, #72]	; 0x48
   18dd8:	mov	r2, r6
   18ddc:	mov	r1, r9
   18de0:	mov	r0, r5
   18de4:	str	r3, [sp]
   18de8:	mov	r3, sl
   18dec:	str	r4, [sp, #8]
   18df0:	str	r7, [sp, #12]
   18df4:	str	ip, [sp, #16]
   18df8:	str	fp, [r4, #20]
   18dfc:	str	lr, [sp, #4]
   18e00:	str	lr, [r4, #12]
   18e04:	bl	184d4 <argp_error@@Base+0x230>
   18e08:	mov	r2, r0
   18e0c:	b	18b50 <argp_error@@Base+0x8ac>
   18e10:	movw	r0, #42808	; 0xa738
   18e14:	movt	r0, #1
   18e18:	bl	1133c <getenv@plt>
   18e1c:	cmp	r0, #0
   18e20:	ldr	r3, [r4, #20]
   18e24:	bne	18abc <argp_error@@Base+0x818>
   18e28:	mov	r2, #1
   18e2c:	str	r2, [r4, #24]
   18e30:	b	18ac4 <argp_error@@Base+0x820>
   18e34:	ldrb	r1, [r0, #2]
   18e38:	ldrb	r3, [r3, #1]
   18e3c:	cmp	r1, #58	; 0x3a
   18e40:	beq	18ee0 <argp_error@@Base+0xc3c>
   18e44:	cmp	r3, #0
   18e48:	ldr	r3, [r4]
   18e4c:	bne	18eac <argp_error@@Base+0xc08>
   18e50:	cmp	r5, r3
   18e54:	beq	18f00 <argp_error@@Base+0xc5c>
   18e58:	ldr	r1, [r9, r3, lsl #2]
   18e5c:	add	r3, r3, #1
   18e60:	str	r3, [r4]
   18e64:	str	r1, [r4, #12]
   18e68:	mov	r3, #0
   18e6c:	str	r3, [r4, #20]
   18e70:	b	18b50 <argp_error@@Base+0x8ac>
   18e74:	cmp	r8, r3
   18e78:	movne	r3, r8
   18e7c:	strne	r8, [r4, #28]
   18e80:	b	18c64 <argp_error@@Base+0x9c0>
   18e84:	mov	r8, r3
   18e88:	b	18ca4 <argp_error@@Base+0xa00>
   18e8c:	cmp	r7, #0
   18e90:	bne	18ebc <argp_error@@Base+0xc18>
   18e94:	mov	r2, #63	; 0x3f
   18e98:	str	r8, [r4, #8]
   18e9c:	b	18b50 <argp_error@@Base+0x8ac>
   18ea0:	mov	r3, r8
   18ea4:	str	r8, [r4, #28]
   18ea8:	b	18bf8 <argp_error@@Base+0x954>
   18eac:	add	r3, r3, #1
   18eb0:	str	r3, [r4]
   18eb4:	str	fp, [r4, #12]
   18eb8:	b	18e68 <argp_error@@Base+0xbc4>
   18ebc:	movw	r0, #45800	; 0xb2e8
   18ec0:	movt	r0, #2
   18ec4:	ldr	r2, [r9]
   18ec8:	movw	r1, #42828	; 0xa74c
   18ecc:	movt	r1, #1
   18ed0:	mov	r3, r8
   18ed4:	ldr	r0, [r0]
   18ed8:	bl	113cc <fprintf@plt>
   18edc:	b	18e94 <argp_error@@Base+0xbf0>
   18ee0:	cmp	r3, #0
   18ee4:	streq	r3, [r4, #12]
   18ee8:	beq	18e68 <argp_error@@Base+0xbc4>
   18eec:	ldr	r3, [r4]
   18ef0:	str	fp, [r4, #12]
   18ef4:	add	r3, r3, #1
   18ef8:	str	r3, [r4]
   18efc:	b	18e68 <argp_error@@Base+0xbc4>
   18f00:	cmp	r7, #0
   18f04:	bne	18f74 <argp_error@@Base+0xcd0>
   18f08:	str	r8, [r4, #8]
   18f0c:	ldrb	r3, [r6]
   18f10:	cmp	r3, #58	; 0x3a
   18f14:	moveq	r2, #58	; 0x3a
   18f18:	movne	r2, #63	; 0x3f
   18f1c:	b	18e68 <argp_error@@Base+0xbc4>
   18f20:	ldr	r2, [sp, #72]	; 0x48
   18f24:	add	ip, r3, #2
   18f28:	mov	r1, r9
   18f2c:	mov	r3, sl
   18f30:	ldr	r0, [sp, #76]	; 0x4c
   18f34:	str	r2, [sp]
   18f38:	mov	r2, r6
   18f3c:	stmib	sp, {r0, r4, r7, fp}
   18f40:	mov	r0, r5
   18f44:	str	ip, [r4, #20]
   18f48:	bl	184d4 <argp_error@@Base+0x230>
   18f4c:	mov	r2, r0
   18f50:	b	18b50 <argp_error@@Base+0x8ac>
   18f54:	cmp	r7, #0
   18f58:	bne	18f98 <argp_error@@Base+0xcf4>
   18f5c:	str	r8, [r4, #8]
   18f60:	ldrb	r3, [r6]
   18f64:	cmp	r3, #58	; 0x3a
   18f68:	moveq	r2, #58	; 0x3a
   18f6c:	movne	r2, #63	; 0x3f
   18f70:	b	18b50 <argp_error@@Base+0x8ac>
   18f74:	movw	r0, #45800	; 0xb2e8
   18f78:	movt	r0, #2
   18f7c:	ldr	r2, [r9]
   18f80:	movw	r1, #42856	; 0xa768
   18f84:	movt	r1, #1
   18f88:	mov	r3, r8
   18f8c:	ldr	r0, [r0]
   18f90:	bl	113cc <fprintf@plt>
   18f94:	b	18f08 <argp_error@@Base+0xc64>
   18f98:	movw	r0, #45800	; 0xb2e8
   18f9c:	movt	r0, #2
   18fa0:	ldr	r2, [r9]
   18fa4:	movw	r1, #42856	; 0xa768
   18fa8:	movt	r1, #1
   18fac:	mov	r3, r8
   18fb0:	ldr	r0, [r0]
   18fb4:	bl	113cc <fprintf@plt>
   18fb8:	b	18f5c <argp_error@@Base+0xcb8>
   18fbc:	strd	r4, [sp, #-16]!
   18fc0:	movw	r5, #45776	; 0xb2d0
   18fc4:	movt	r5, #2
   18fc8:	str	r6, [sp, #8]
   18fcc:	movw	r4, #48252	; 0xbc7c
   18fd0:	movt	r4, #2
   18fd4:	str	lr, [sp, #12]
   18fd8:	sub	sp, sp, #16
   18fdc:	ldr	lr, [sp, #32]
   18fe0:	ldr	ip, [r5]
   18fe4:	ldr	r6, [sp, #36]	; 0x24
   18fe8:	str	lr, [sp]
   18fec:	ldr	lr, [sp, #40]	; 0x28
   18ff0:	str	ip, [r4]
   18ff4:	ldr	ip, [r5, #4]
   18ff8:	str	r6, [sp, #4]
   18ffc:	str	r4, [sp, #8]
   19000:	str	lr, [sp, #12]
   19004:	str	ip, [r4, #4]
   19008:	bl	18a24 <argp_error@@Base+0x780>
   1900c:	ldr	ip, [r4]
   19010:	movw	r3, #49736	; 0xc248
   19014:	movt	r3, #2
   19018:	ldr	r1, [r4, #8]
   1901c:	ldr	r2, [r4, #12]
   19020:	str	ip, [r5]
   19024:	str	r1, [r5, #8]
   19028:	str	r2, [r3]
   1902c:	add	sp, sp, #16
   19030:	ldrd	r4, [sp]
   19034:	ldr	r6, [sp, #8]
   19038:	add	sp, sp, #12
   1903c:	pop	{pc}		; (ldr pc, [sp], #4)
   19040:	mov	ip, #0
   19044:	push	{lr}		; (str lr, [sp, #-4]!)
   19048:	mov	lr, #1
   1904c:	sub	sp, sp, #20
   19050:	mov	r3, ip
   19054:	str	ip, [sp]
   19058:	stmib	sp, {ip, lr}
   1905c:	bl	18fbc <argp_error@@Base+0xd18>
   19060:	add	sp, sp, #20
   19064:	pop	{pc}		; (ldr pc, [sp], #4)
   19068:	umull	r2, r3, r1, r2
   1906c:	cmp	r3, #0
   19070:	bne	1907c <argp_error@@Base+0xdd8>
   19074:	mov	r1, r2
   19078:	b	14e18 <argp_parse@@Base+0x1be0>
   1907c:	str	r4, [sp, #-8]!
   19080:	str	lr, [sp, #4]
   19084:	bl	113d8 <__errno_location@plt>
   19088:	mov	r3, #12
   1908c:	ldr	r4, [sp]
   19090:	add	sp, sp, #4
   19094:	str	r3, [r0]
   19098:	mov	r0, #0
   1909c:	pop	{pc}		; (ldr pc, [sp], #4)
   190a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   190a4:	mov	r5, r3
   190a8:	strd	r6, [sp, #8]
   190ac:	mov	r7, r1
   190b0:	mov	r6, r2
   190b4:	str	r8, [sp, #16]
   190b8:	mov	r8, r0
   190bc:	mov	r0, #36	; 0x24
   190c0:	str	lr, [sp, #20]
   190c4:	bl	14ddc <argp_parse@@Base+0x1ba4>
   190c8:	subs	r4, r0, #0
   190cc:	beq	19110 <argp_error@@Base+0xe6c>
   190d0:	mov	r3, #0
   190d4:	mov	r0, #200	; 0xc8
   190d8:	str	r8, [r4]
   190dc:	str	r7, [r4, #4]
   190e0:	str	r6, [r4, #8]
   190e4:	str	r5, [r4, #12]
   190e8:	str	r3, [r4, #16]
   190ec:	str	r3, [r4, #20]
   190f0:	bl	14ddc <argp_parse@@Base+0x1ba4>
   190f4:	cmp	r0, #0
   190f8:	mov	r3, r0
   190fc:	str	r0, [r4, #24]
   19100:	addne	r2, r0, #200	; 0xc8
   19104:	strne	r0, [r4, #28]
   19108:	strne	r2, [r4, #32]
   1910c:	beq	19128 <argp_error@@Base+0xe84>
   19110:	mov	r0, r4
   19114:	ldrd	r4, [sp]
   19118:	ldrd	r6, [sp, #8]
   1911c:	ldr	r8, [sp, #16]
   19120:	add	sp, sp, #20
   19124:	pop	{pc}		; (ldr pc, [sp], #4)
   19128:	mov	r0, r4
   1912c:	mov	r4, r3
   19130:	bl	1421c <argp_parse@@Base+0xfe4>
   19134:	b	19110 <argp_error@@Base+0xe6c>
   19138:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1913c:	mov	r5, r0
   19140:	ldr	r3, [r0, #16]
   19144:	ldr	r4, [r0, #24]
   19148:	strd	r6, [sp, #8]
   1914c:	strd	r8, [sp, #16]
   19150:	ldr	r8, [r0, #28]
   19154:	strd	sl, [sp, #24]
   19158:	add	r4, r4, r3
   1915c:	str	lr, [sp, #32]
   19160:	sub	sp, sp, #12
   19164:	cmp	r4, r8
   19168:	bcs	1927c <argp_error@@Base+0xfd8>
   1916c:	ldr	r6, [r5, #20]
   19170:	cmp	r6, #0
   19174:	bne	191d4 <argp_error@@Base+0xf30>
   19178:	ldr	r7, [r5, #4]
   1917c:	cmp	r7, #0
   19180:	beq	1945c <argp_error@@Base+0x11b8>
   19184:	ldr	r2, [r5, #32]
   19188:	add	r3, r8, r7
   1918c:	cmp	r2, r3
   19190:	bls	19548 <argp_error@@Base+0x12a4>
   19194:	add	r6, r4, r7
   19198:	sub	r2, r8, r4
   1919c:	mov	r1, r4
   191a0:	mov	r0, r6
   191a4:	bl	1124c <memmove@plt>
   191a8:	ldr	r3, [r5, #28]
   191ac:	mov	r0, r4
   191b0:	mov	r2, r7
   191b4:	mov	r1, #32
   191b8:	mov	r4, r6
   191bc:	add	r3, r3, r7
   191c0:	str	r3, [r5, #28]
   191c4:	bl	113fc <memset@plt>
   191c8:	ldr	r8, [r5, #28]
   191cc:	mov	r6, r7
   191d0:	str	r7, [r5, #20]
   191d4:	sub	r9, r8, r4
   191d8:	mov	r1, #10
   191dc:	mov	r2, r9
   191e0:	mov	r0, r4
   191e4:	bl	11420 <memchr@plt>
   191e8:	cmp	r6, #0
   191ec:	mov	fp, r0
   191f0:	bge	191fc <argp_error@@Base+0xf58>
   191f4:	mov	r6, #0
   191f8:	str	r6, [r5, #20]
   191fc:	cmp	fp, #0
   19200:	ldr	r3, [r5, #8]
   19204:	beq	192a4 <argp_error@@Base+0x1000>
   19208:	sub	r2, fp, r4
   1920c:	add	r2, r2, r6
   19210:	cmp	r2, r3
   19214:	blt	19478 <argp_error@@Base+0x11d4>
   19218:	ldr	sl, [r5, #12]
   1921c:	sub	r7, r3, #1
   19220:	str	r3, [sp, #4]
   19224:	cmp	sl, #0
   19228:	bge	192c4 <argp_error@@Base+0x1020>
   1922c:	cmp	r8, fp
   19230:	bls	195fc <argp_error@@Base+0x1358>
   19234:	sub	r0, r7, r6
   19238:	sub	r2, r8, fp
   1923c:	add	r0, r4, r0
   19240:	mov	r1, fp
   19244:	bl	1124c <memmove@plt>
   19248:	ldr	r2, [r5, #20]
   1924c:	mov	r3, #0
   19250:	str	r3, [r5, #20]
   19254:	ldr	r3, [sp, #4]
   19258:	ldr	r8, [r5, #28]
   1925c:	sub	r7, r7, r2
   19260:	add	r7, r4, r7
   19264:	sub	fp, r7, fp
   19268:	add	r4, r4, r3
   1926c:	sub	r8, r8, fp
   19270:	cmp	r4, r8
   19274:	str	r8, [r5, #28]
   19278:	bcc	1916c <argp_error@@Base+0xec8>
   1927c:	ldr	r3, [r5, #24]
   19280:	sub	r8, r8, r3
   19284:	str	r8, [r5, #16]
   19288:	add	sp, sp, #12
   1928c:	ldrd	r4, [sp]
   19290:	ldrd	r6, [sp, #8]
   19294:	ldrd	r8, [sp, #16]
   19298:	ldrd	sl, [sp, #24]
   1929c:	add	sp, sp, #32
   192a0:	pop	{pc}		; (ldr pc, [sp], #4)
   192a4:	add	r1, r6, r9
   192a8:	cmp	r1, r3
   192ac:	bcc	19668 <argp_error@@Base+0x13c4>
   192b0:	ldr	sl, [r5, #12]
   192b4:	sub	r7, r3, #1
   192b8:	cmp	sl, #0
   192bc:	blt	19600 <argp_error@@Base+0x135c>
   192c0:	mov	fp, r8
   192c4:	add	r7, r7, #1
   192c8:	sub	r6, r7, r6
   192cc:	adds	r6, r4, r6
   192d0:	bcs	194bc <argp_error@@Base+0x1218>
   192d4:	bl	1139c <__ctype_b_loc@plt>
   192d8:	mov	r3, r6
   192dc:	ldr	ip, [r0]
   192e0:	b	192f0 <argp_error@@Base+0x104c>
   192e4:	cmp	r4, r0
   192e8:	mov	r3, r0
   192ec:	bhi	194c0 <argp_error@@Base+0x121c>
   192f0:	ldrb	r1, [r3]
   192f4:	mov	r7, r3
   192f8:	sub	r0, r3, #1
   192fc:	lsl	r1, r1, #1
   19300:	ldrh	r1, [ip, r1]
   19304:	tst	r1, #1
   19308:	beq	192e4 <argp_error@@Base+0x1040>
   1930c:	add	r0, r3, #1
   19310:	cmp	r4, r0
   19314:	bcs	194d0 <argp_error@@Base+0x122c>
   19318:	cmp	r4, r3
   1931c:	movhi	r6, r0
   19320:	movhi	r7, r6
   19324:	bls	19340 <argp_error@@Base+0x109c>
   19328:	b	19354 <argp_error@@Base+0x10b0>
   1932c:	ldrb	r1, [r6, #-1]
   19330:	lsl	r1, r1, #1
   19334:	ldrh	r1, [ip, r1]
   19338:	tst	r1, #1
   1933c:	beq	19350 <argp_error@@Base+0x10ac>
   19340:	cmp	r4, r3
   19344:	mov	r6, r3
   19348:	sub	r3, r3, #1
   1934c:	bne	1932c <argp_error@@Base+0x1088>
   19350:	mov	r7, r0
   19354:	add	r3, r9, #1
   19358:	add	r3, r4, r3
   1935c:	cmp	r7, r3
   19360:	beq	1948c <argp_error@@Base+0x11e8>
   19364:	add	r1, r6, #1
   19368:	sub	r3, r7, r1
   1936c:	cmp	r3, sl
   19370:	bge	194a4 <argp_error@@Base+0x1200>
   19374:	cmp	r7, r8
   19378:	bcs	1949c <argp_error@@Base+0x11f8>
   1937c:	ldr	r3, [r5, #32]
   19380:	add	sl, sl, #1
   19384:	sub	r3, r3, r8
   19388:	cmp	r3, sl
   1938c:	bgt	19614 <argp_error@@Base+0x1370>
   19390:	ldr	r3, [r5]
   19394:	ldr	r0, [r5, #24]
   19398:	cmp	r0, r6
   1939c:	bcs	193b0 <argp_error@@Base+0x110c>
   193a0:	sub	r2, r6, r0
   193a4:	mov	r1, #1
   193a8:	bl	112a0 <fwrite_unlocked@plt>
   193ac:	ldr	r3, [r5]
   193b0:	ldr	r2, [r3, #20]
   193b4:	ldr	r1, [r3, #24]
   193b8:	cmp	r2, r1
   193bc:	addcc	r1, r2, #1
   193c0:	strcc	r1, [r3, #20]
   193c4:	movcc	r3, #10
   193c8:	strbcc	r3, [r2]
   193cc:	bcs	19658 <argp_error@@Base+0x13b4>
   193d0:	ldr	fp, [r5, #24]
   193d4:	sub	r4, r4, fp
   193d8:	sub	r3, r7, fp
   193dc:	add	r9, r9, r4
   193e0:	mov	r8, r3
   193e4:	mov	r4, fp
   193e8:	ldr	r2, [r5, #12]
   193ec:	cmp	r2, r3
   193f0:	ble	19414 <argp_error@@Base+0x1170>
   193f4:	add	r3, r9, #1
   193f8:	add	r3, fp, r3
   193fc:	cmp	r7, r3
   19400:	bne	19504 <argp_error@@Base+0x1260>
   19404:	ldr	r3, [r5, #32]
   19408:	sub	r3, r3, r7
   1940c:	cmp	r2, r3
   19410:	bgt	19504 <argp_error@@Base+0x1260>
   19414:	cmp	r2, #0
   19418:	ble	19438 <argp_error@@Base+0x1194>
   1941c:	mov	r3, #0
   19420:	mov	r1, #32
   19424:	strb	r1, [r4], #1
   19428:	add	r3, r3, #1
   1942c:	ldr	r2, [r5, #12]
   19430:	cmp	r2, r3
   19434:	bgt	19424 <argp_error@@Base+0x1180>
   19438:	cmp	r4, r7
   1943c:	bcc	19594 <argp_error@@Base+0x12f0>
   19440:	sub	r8, r9, r8
   19444:	cmp	r2, #0
   19448:	add	r8, r4, r8
   1944c:	mvneq	r2, #0
   19450:	str	r2, [r5, #20]
   19454:	str	r8, [r5, #28]
   19458:	b	19164 <argp_error@@Base+0xec0>
   1945c:	sub	r9, r8, r4
   19460:	mov	r1, #10
   19464:	mov	r2, r9
   19468:	mov	r0, r4
   1946c:	bl	11420 <memchr@plt>
   19470:	mov	fp, r0
   19474:	b	191fc <argp_error@@Base+0xf58>
   19478:	mov	r3, #0
   1947c:	add	r4, fp, #1
   19480:	ldr	r8, [r5, #28]
   19484:	str	r3, [r5, #20]
   19488:	b	19164 <argp_error@@Base+0xec0>
   1948c:	ldr	r3, [r5, #32]
   19490:	sub	r3, r3, r6
   19494:	cmp	r3, sl
   19498:	ble	19374 <argp_error@@Base+0x10d0>
   1949c:	add	r1, r6, #1
   194a0:	sub	r3, r7, r1
   194a4:	mov	r2, #10
   194a8:	sub	r8, r7, r4
   194ac:	mov	fp, r4
   194b0:	mov	r4, r1
   194b4:	strb	r2, [r6]
   194b8:	b	193e8 <argp_error@@Base+0x1144>
   194bc:	add	r7, r6, #1
   194c0:	cmp	r4, r7
   194c4:	bcs	194d0 <argp_error@@Base+0x122c>
   194c8:	mov	r6, r7
   194cc:	b	19354 <argp_error@@Base+0x10b0>
   194d0:	cmp	r6, fp
   194d4:	bcc	195c4 <argp_error@@Base+0x1320>
   194d8:	cmp	r6, fp
   194dc:	beq	195b0 <argp_error@@Base+0x130c>
   194e0:	bl	1139c <__ctype_b_loc@plt>
   194e4:	ldr	r1, [r0]
   194e8:	mov	r7, r6
   194ec:	ldrb	r3, [r7, #1]!
   194f0:	lsl	r3, r3, #1
   194f4:	ldrh	r3, [r1, r3]
   194f8:	tst	r3, #1
   194fc:	bne	194ec <argp_error@@Base+0x1248>
   19500:	b	19354 <argp_error@@Base+0x10b0>
   19504:	cmp	r2, #0
   19508:	movgt	r6, #0
   1950c:	movgt	sl, #32
   19510:	ble	19438 <argp_error@@Base+0x1194>
   19514:	ldr	r0, [r5]
   19518:	ldr	r2, [r0, #20]
   1951c:	ldr	r1, [r0, #24]
   19520:	add	ip, r2, #1
   19524:	cmp	r2, r1
   19528:	strcc	ip, [r0, #20]
   1952c:	strbcc	sl, [r2]
   19530:	bcs	19588 <argp_error@@Base+0x12e4>
   19534:	ldr	r2, [r5, #12]
   19538:	add	r6, r6, #1
   1953c:	cmp	r2, r6
   19540:	bgt	19514 <argp_error@@Base+0x1270>
   19544:	b	19438 <argp_error@@Base+0x1194>
   19548:	mov	r8, #32
   1954c:	b	1955c <argp_error@@Base+0x12b8>
   19550:	add	r6, r6, #1
   19554:	cmp	r7, r6
   19558:	beq	191c8 <argp_error@@Base+0xf24>
   1955c:	ldr	r0, [r5]
   19560:	ldr	r3, [r0, #20]
   19564:	ldr	r2, [r0, #24]
   19568:	add	r1, r3, #1
   1956c:	cmp	r3, r2
   19570:	strcc	r1, [r0, #20]
   19574:	strbcc	r8, [r3]
   19578:	bcc	19550 <argp_error@@Base+0x12ac>
   1957c:	mov	r1, #32
   19580:	bl	11450 <__overflow@plt>
   19584:	b	19550 <argp_error@@Base+0x12ac>
   19588:	mov	r1, #32
   1958c:	bl	11450 <__overflow@plt>
   19590:	b	19534 <argp_error@@Base+0x1290>
   19594:	add	r2, fp, r9
   19598:	mov	r1, r7
   1959c:	sub	r2, r2, r7
   195a0:	mov	r0, r4
   195a4:	bl	1124c <memmove@plt>
   195a8:	ldr	r2, [r5, #12]
   195ac:	b	19440 <argp_error@@Base+0x119c>
   195b0:	mov	r3, #0
   195b4:	add	r4, r6, #1
   195b8:	ldr	r8, [r5, #28]
   195bc:	str	r3, [r5, #20]
   195c0:	b	19164 <argp_error@@Base+0xec0>
   195c4:	add	r7, r6, #1
   195c8:	b	195ec <argp_error@@Base+0x1348>
   195cc:	bl	1139c <__ctype_b_loc@plt>
   195d0:	ldrb	r3, [r7]
   195d4:	add	r7, r7, #1
   195d8:	ldr	r1, [r0]
   195dc:	lsl	r3, r3, #1
   195e0:	ldrh	r3, [r1, r3]
   195e4:	tst	r3, #1
   195e8:	bne	194e8 <argp_error@@Base+0x1244>
   195ec:	cmp	fp, r7
   195f0:	mov	r6, r7
   195f4:	bne	195cc <argp_error@@Base+0x1328>
   195f8:	b	194d8 <argp_error@@Base+0x1234>
   195fc:	add	r1, r9, r6
   19600:	sub	r7, r7, r1
   19604:	str	r1, [r5, #20]
   19608:	add	r8, r8, r7
   1960c:	str	r8, [r5, #28]
   19610:	b	1927c <argp_error@@Base+0xfd8>
   19614:	sub	r8, r8, r7
   19618:	mov	r1, r7
   1961c:	mov	r2, r8
   19620:	add	r0, r6, sl
   19624:	bl	1124c <memmove@plt>
   19628:	ldr	r3, [r5, #12]
   1962c:	mov	r2, r6
   19630:	mov	r1, #10
   19634:	mov	fp, r4
   19638:	strb	r1, [r2], #1
   1963c:	add	r7, r3, #1
   19640:	add	r7, r6, r7
   19644:	add	r9, r7, r8
   19648:	sub	r8, r7, r4
   1964c:	sub	r9, r9, r4
   19650:	mov	r4, r2
   19654:	b	193e8 <argp_error@@Base+0x1144>
   19658:	mov	r0, r3
   1965c:	mov	r1, #10
   19660:	bl	11450 <__overflow@plt>
   19664:	b	193d0 <argp_error@@Base+0x112c>
   19668:	str	r1, [r5, #20]
   1966c:	ldr	r8, [r5, #28]
   19670:	b	1927c <argp_error@@Base+0xfd8>
   19674:	str	r4, [sp, #-8]!
   19678:	mov	r4, r0
   1967c:	str	lr, [sp, #4]
   19680:	bl	19138 <argp_error@@Base+0xe94>
   19684:	ldr	r0, [r4, #24]
   19688:	ldr	r2, [r4, #28]
   1968c:	cmp	r2, r0
   19690:	bls	196a8 <argp_error@@Base+0x1404>
   19694:	sub	r2, r2, r0
   19698:	mov	r1, #1
   1969c:	ldr	r3, [r4]
   196a0:	bl	112a0 <fwrite_unlocked@plt>
   196a4:	ldr	r0, [r4, #24]
   196a8:	bl	1421c <argp_parse@@Base+0xfe4>
   196ac:	mov	r0, r4
   196b0:	ldr	r4, [sp]
   196b4:	ldr	lr, [sp, #4]
   196b8:	add	sp, sp, #8
   196bc:	b	1421c <argp_parse@@Base+0xfe4>
   196c0:	strd	r4, [sp, #-16]!
   196c4:	mov	r4, r0
   196c8:	mov	r5, r1
   196cc:	str	r6, [sp, #8]
   196d0:	str	lr, [sp, #12]
   196d4:	bl	19138 <argp_error@@Base+0xe94>
   196d8:	mov	r1, #1
   196dc:	ldr	r3, [r4]
   196e0:	ldr	r2, [r4, #24]
   196e4:	ldr	ip, [r4, #28]
   196e8:	mov	r0, r2
   196ec:	sub	r2, ip, r2
   196f0:	bl	112a0 <fwrite_unlocked@plt>
   196f4:	mov	ip, r0
   196f8:	ldr	r0, [r4, #24]
   196fc:	ldr	r3, [r4, #28]
   19700:	sub	r2, r3, r0
   19704:	cmp	ip, r2
   19708:	bne	19768 <argp_error@@Base+0x14c4>
   1970c:	ldr	r1, [r4, #32]
   19710:	mov	r3, #0
   19714:	str	r3, [r4, #16]
   19718:	str	r0, [r4, #28]
   1971c:	sub	r1, r1, r0
   19720:	cmp	r1, r5
   19724:	movcs	r3, #1
   19728:	bcs	19754 <argp_error@@Base+0x14b0>
   1972c:	adds	r5, r1, r5
   19730:	bcs	19790 <argp_error@@Base+0x14ec>
   19734:	mov	r1, r5
   19738:	bl	14e18 <argp_parse@@Base+0x1be0>
   1973c:	cmp	r0, #0
   19740:	beq	19790 <argp_error@@Base+0x14ec>
   19744:	add	r1, r0, r5
   19748:	mov	r3, #1
   1974c:	str	r0, [r4, #24]
   19750:	strd	r0, [r4, #28]
   19754:	ldrd	r4, [sp]
   19758:	mov	r0, r3
   1975c:	ldr	r6, [sp, #8]
   19760:	add	sp, sp, #12
   19764:	pop	{pc}		; (ldr pc, [sp], #4)
   19768:	ldr	lr, [r4, #16]
   1976c:	sub	r3, r3, ip
   19770:	add	r1, r0, ip
   19774:	sub	r2, r3, r0
   19778:	str	r3, [r4, #28]
   1977c:	sub	ip, lr, ip
   19780:	str	ip, [r4, #16]
   19784:	bl	1124c <memmove@plt>
   19788:	mov	r3, #0
   1978c:	b	19754 <argp_error@@Base+0x14b0>
   19790:	bl	113d8 <__errno_location@plt>
   19794:	mov	r2, #12
   19798:	mov	r3, #0
   1979c:	str	r2, [r0]
   197a0:	b	19754 <argp_error@@Base+0x14b0>
   197a4:	ldr	ip, [r0, #28]
   197a8:	ldr	r3, [r0, #32]
   197ac:	sub	r3, r3, ip
   197b0:	cmp	r3, r1
   197b4:	bcc	197c0 <argp_error@@Base+0x151c>
   197b8:	mov	r0, #1
   197bc:	bx	lr
   197c0:	b	196c0 <argp_error@@Base+0x141c>
   197c4:	push	{r1, r2, r3}
   197c8:	mov	r1, #150	; 0x96
   197cc:	strd	r4, [sp, #-20]!	; 0xffffffec
   197d0:	mov	r5, r0
   197d4:	strd	r6, [sp, #8]
   197d8:	str	lr, [sp, #16]
   197dc:	sub	sp, sp, #8
   197e0:	ldr	r7, [sp, #28]
   197e4:	add	r6, sp, #32
   197e8:	ldr	r0, [r5, #28]
   197ec:	ldr	r3, [r5, #32]
   197f0:	sub	r2, r3, r0
   197f4:	cmp	r1, r2
   197f8:	bhi	19848 <argp_error@@Base+0x15a4>
   197fc:	sub	r4, r3, r0
   19800:	mov	r2, r7
   19804:	str	r6, [sp, #4]
   19808:	mov	r1, r4
   1980c:	mov	r3, r6
   19810:	bl	114ec <vsnprintf@plt>
   19814:	cmp	r0, r4
   19818:	add	r1, r0, #1
   1981c:	bcs	197e8 <argp_error@@Base+0x1544>
   19820:	ldr	r3, [r5, #28]
   19824:	add	r3, r3, r0
   19828:	str	r3, [r5, #28]
   1982c:	add	sp, sp, #8
   19830:	ldrd	r4, [sp]
   19834:	ldrd	r6, [sp, #8]
   19838:	ldr	lr, [sp, #16]
   1983c:	add	sp, sp, #20
   19840:	add	sp, sp, #12
   19844:	bx	lr
   19848:	mov	r0, r5
   1984c:	bl	196c0 <argp_error@@Base+0x141c>
   19850:	cmp	r0, #0
   19854:	beq	19864 <argp_error@@Base+0x15c0>
   19858:	ldr	r0, [r5, #28]
   1985c:	ldr	r3, [r5, #32]
   19860:	b	197fc <argp_error@@Base+0x1558>
   19864:	mvn	r0, #0
   19868:	b	1982c <argp_error@@Base+0x1588>
   1986c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19870:	mov	r7, r0
   19874:	ldr	r6, [pc, #72]	; 198c4 <argp_error@@Base+0x1620>
   19878:	ldr	r5, [pc, #72]	; 198c8 <argp_error@@Base+0x1624>
   1987c:	add	r6, pc, r6
   19880:	add	r5, pc, r5
   19884:	sub	r6, r6, r5
   19888:	mov	r8, r1
   1988c:	mov	r9, r2
   19890:	bl	111b4 <fdopen@plt-0x20>
   19894:	asrs	r6, r6, #2
   19898:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1989c:	mov	r4, #0
   198a0:	add	r4, r4, #1
   198a4:	ldr	r3, [r5], #4
   198a8:	mov	r2, r9
   198ac:	mov	r1, r8
   198b0:	mov	r0, r7
   198b4:	blx	r3
   198b8:	cmp	r6, r4
   198bc:	bne	198a0 <argp_error@@Base+0x15fc>
   198c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   198c4:	andeq	r1, r1, r8, lsl #13
   198c8:	andeq	r1, r1, r0, lsl #13
   198cc:	bx	lr

Disassembly of section .fini:

000198d0 <.fini>:
   198d0:	push	{r3, lr}
   198d4:	pop	{r3, pc}
