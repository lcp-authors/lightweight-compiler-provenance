
../repos/charybdis/modules/.libs/m_help.so:     file format elf32-littlearm


Disassembly of section .init:

000004c4 <_init>:
 4c4:	push	{r3, lr}
 4c8:	bl	514 <call_weak_fn>
 4cc:	pop	{r3, pc}

Disassembly of section .plt:

000004d0 <.plt>:
 4d0:	push	{lr}		; (str lr, [sp, #-4]!)
 4d4:	ldr	lr, [pc, #4]	; 4e0 <.plt+0x10>
 4d8:	add	lr, pc, lr
 4dc:	ldr	pc, [lr, #8]!
 4e0:	.word	0x00010b20

000004e4 <__cxa_finalize@plt>:
 4e4:	add	ip, pc, #0, 12
 4e8:	add	ip, ip, #16, 20	; 0x10000
 4ec:	ldr	pc, [ip, #2848]!	; 0xb20

000004f0 <sendto_one@plt>:
 4f0:	add	ip, pc, #0, 12
 4f4:	add	ip, ip, #16, 20	; 0x10000
 4f8:	ldr	pc, [ip, #2840]!	; 0xb18

000004fc <__gmon_start__@plt>:
 4fc:	add	ip, pc, #0, 12
 500:	add	ip, ip, #16, 20	; 0x10000
 504:	ldr	pc, [ip, #2832]!	; 0xb10

00000508 <rb_dictionary_retrieve@plt>:
 508:	add	ip, pc, #0, 12
 50c:	add	ip, ip, #16, 20	; 0x10000
 510:	ldr	pc, [ip, #2824]!	; 0xb08

Disassembly of section .text:

00000514 <call_weak_fn>:
 514:	ldr	r3, [pc, #20]	; 530 <call_weak_fn+0x1c>
 518:	ldr	r2, [pc, #20]	; 534 <call_weak_fn+0x20>
 51c:	add	r3, pc, r3
 520:	ldr	r2, [r3, r2]
 524:	cmp	r2, #0
 528:	bxeq	lr
 52c:	b	4fc <__gmon_start__@plt>
 530:	.word	0x00010adc
 534:	.word	0x00000028

00000538 <deregister_tm_clones>:
 538:	ldr	r3, [pc, #52]	; 574 <deregister_tm_clones+0x3c>
 53c:	ldr	r0, [pc, #52]	; 578 <deregister_tm_clones+0x40>
 540:	add	r3, pc, r3
 544:	add	r0, pc, r0
 548:	add	r3, r3, #3
 54c:	sub	r3, r3, r0
 550:	cmp	r3, #6
 554:	ldr	r3, [pc, #32]	; 57c <deregister_tm_clones+0x44>
 558:	add	r3, pc, r3
 55c:	bxls	lr
 560:	ldr	r2, [pc, #24]	; 580 <deregister_tm_clones+0x48>
 564:	ldr	r3, [r3, r2]
 568:	cmp	r3, #0
 56c:	bxeq	lr
 570:	bx	r3
 574:	.word	0x00010bb4
 578:	.word	0x00010bb0
 57c:	.word	0x00010aa0
 580:	.word	0x00000024

00000584 <register_tm_clones>:
 584:	ldr	r1, [pc, #56]	; 5c4 <register_tm_clones+0x40>
 588:	ldr	r0, [pc, #56]	; 5c8 <register_tm_clones+0x44>
 58c:	add	r1, pc, r1
 590:	add	r0, pc, r0
 594:	sub	r1, r1, r0
 598:	ldr	r3, [pc, #44]	; 5cc <register_tm_clones+0x48>
 59c:	asr	r1, r1, #2
 5a0:	add	r3, pc, r3
 5a4:	add	r1, r1, r1, lsr #31
 5a8:	asrs	r1, r1, #1
 5ac:	bxeq	lr
 5b0:	ldr	r2, [pc, #24]	; 5d0 <register_tm_clones+0x4c>
 5b4:	ldr	r3, [r3, r2]
 5b8:	cmp	r3, #0
 5bc:	bxeq	lr
 5c0:	bx	r3
 5c4:	.word	0x00010b68
 5c8:	.word	0x00010b64
 5cc:	.word	0x00010a58
 5d0:	.word	0x00000030

000005d4 <__do_global_dtors_aux>:
 5d4:	ldr	r3, [pc, #76]	; 628 <__do_global_dtors_aux+0x54>
 5d8:	ldr	r2, [pc, #76]	; 62c <__do_global_dtors_aux+0x58>
 5dc:	add	r3, pc, r3
 5e0:	add	r2, pc, r2
 5e4:	ldrb	r3, [r3]
 5e8:	cmp	r3, #0
 5ec:	bxne	lr
 5f0:	ldr	r3, [pc, #56]	; 630 <__do_global_dtors_aux+0x5c>
 5f4:	push	{r4, lr}
 5f8:	ldr	r3, [r2, r3]
 5fc:	cmp	r3, #0
 600:	beq	610 <__do_global_dtors_aux+0x3c>
 604:	ldr	r3, [pc, #40]	; 634 <__do_global_dtors_aux+0x60>
 608:	ldr	r0, [pc, r3]
 60c:	bl	4e4 <__cxa_finalize@plt>
 610:	bl	538 <deregister_tm_clones>
 614:	ldr	r3, [pc, #28]	; 638 <__do_global_dtors_aux+0x64>
 618:	mov	r2, #1
 61c:	add	r3, pc, r3
 620:	strb	r2, [r3]
 624:	pop	{r4, pc}
 628:	.word	0x00010b18
 62c:	.word	0x00010a18
 630:	.word	0x00000020
 634:	.word	0x00010a2c
 638:	.word	0x00010ad8

0000063c <frame_dummy>:
 63c:	ldr	r0, [pc, #56]	; 67c <frame_dummy+0x40>
 640:	ldr	r3, [pc, #56]	; 680 <frame_dummy+0x44>
 644:	add	r0, pc, r0
 648:	ldr	r2, [r0]
 64c:	add	r3, pc, r3
 650:	cmp	r2, #0
 654:	bne	65c <frame_dummy+0x20>
 658:	b	584 <register_tm_clones>
 65c:	ldr	r2, [pc, #32]	; 684 <frame_dummy+0x48>
 660:	ldr	r3, [r3, r2]
 664:	cmp	r3, #0
 668:	beq	658 <frame_dummy+0x1c>
 66c:	push	{r4, lr}
 670:	blx	r3
 674:	pop	{r4, lr}
 678:	b	584 <register_tm_clones>
 67c:	.word	0x000108b0
 680:	.word	0x000109ac
 684:	.word	0x0000002c

00000688 <dohelp>:
 688:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 68c:	sub	sp, sp, #8
 690:	mov	r6, r0
 694:	mov	r4, r1
 698:	ldr	r9, [pc, #320]	; 7e0 <dohelp+0x158>
 69c:	add	r9, pc, r9
 6a0:	subs	r5, r2, #0
 6a4:	beq	714 <dohelp+0x8c>
 6a8:	ldrb	r3, [r5]
 6ac:	cmp	r3, #0
 6b0:	ldreq	r5, [pc, #300]	; 7e4 <dohelp+0x15c>
 6b4:	addeq	r5, pc, r5
 6b8:	tst	r4, #2
 6bc:	beq	720 <dohelp+0x98>
 6c0:	ldr	r3, [pc, #288]	; 7e8 <dohelp+0x160>
 6c4:	ldr	r3, [r9, r3]
 6c8:	ldr	r0, [r3]
 6cc:	mov	r1, r5
 6d0:	bl	508 <rb_dictionary_retrieve@plt>
 6d4:	cmp	r0, #0
 6d8:	beq	6e8 <dohelp+0x60>
 6dc:	ldr	r3, [r0, #44]	; 0x2c
 6e0:	tst	r4, r3
 6e4:	bne	730 <dohelp+0xa8>
 6e8:	ldr	r3, [pc, #252]	; 7ec <dohelp+0x164>
 6ec:	ldr	r2, [r9, r3]
 6f0:	str	r5, [sp]
 6f4:	add	r3, r6, #88	; 0x58
 6f8:	add	r2, r2, #88	; 0x58
 6fc:	ldr	r1, [pc, #236]	; 7f0 <dohelp+0x168>
 700:	add	r1, pc, r1
 704:	mov	r0, r6
 708:	bl	4f0 <sendto_one@plt>
 70c:	add	sp, sp, #8
 710:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 714:	ldr	r5, [pc, #216]	; 7f4 <dohelp+0x16c>
 718:	add	r5, pc, r5
 71c:	b	6b8 <dohelp+0x30>
 720:	ldr	r3, [pc, #208]	; 7f8 <dohelp+0x170>
 724:	ldr	r3, [r9, r3]
 728:	ldr	r0, [r3]
 72c:	b	6cc <dohelp+0x44>
 730:	ldr	r4, [r0, #32]
 734:	add	r7, r6, #88	; 0x58
 738:	ldr	r3, [pc, #172]	; 7ec <dohelp+0x164>
 73c:	ldr	r2, [r9, r3]
 740:	ldr	r3, [r4]
 744:	ldr	r3, [r3]
 748:	str	r3, [sp, #4]
 74c:	str	r5, [sp]
 750:	mov	r3, r7
 754:	add	r2, r2, #88	; 0x58
 758:	ldr	r1, [pc, #156]	; 7fc <dohelp+0x174>
 75c:	add	r1, pc, r1
 760:	mov	r0, r6
 764:	bl	4f0 <sendto_one@plt>
 768:	ldr	r4, [r4, #8]
 76c:	cmp	r4, #0
 770:	beq	7b8 <dohelp+0x130>
 774:	ldr	r3, [pc, #112]	; 7ec <dohelp+0x164>
 778:	ldr	r8, [r9, r3]
 77c:	add	r8, r8, #88	; 0x58
 780:	ldr	sl, [pc, #120]	; 800 <dohelp+0x178>
 784:	add	sl, pc, sl
 788:	ldr	r3, [r4]
 78c:	ldr	r3, [r3]
 790:	str	r3, [sp, #4]
 794:	str	r5, [sp]
 798:	mov	r3, r7
 79c:	mov	r2, r8
 7a0:	mov	r1, sl
 7a4:	mov	r0, r6
 7a8:	bl	4f0 <sendto_one@plt>
 7ac:	ldr	r4, [r4, #8]
 7b0:	cmp	r4, #0
 7b4:	bne	788 <dohelp+0x100>
 7b8:	ldr	r3, [pc, #44]	; 7ec <dohelp+0x164>
 7bc:	ldr	r2, [r9, r3]
 7c0:	str	r5, [sp]
 7c4:	mov	r3, r7
 7c8:	add	r2, r2, #88	; 0x58
 7cc:	ldr	r1, [pc, #48]	; 804 <dohelp+0x17c>
 7d0:	add	r1, pc, r1
 7d4:	mov	r0, r6
 7d8:	bl	4f0 <sendto_one@plt>
 7dc:	b	70c <dohelp+0x84>
 7e0:	.word	0x0001095c
 7e4:	.word	0x000001c0
 7e8:	.word	0x00000034
 7ec:	.word	0x00000038
 7f0:	.word	0x000001c0
 7f4:	.word	0x0000015c
 7f8:	.word	0x0000001c
 7fc:	.word	0x00000184
 800:	.word	0x00000170
 804:	.word	0x00000138

00000808 <mo_help>:
 808:	push	{r4, lr}
 80c:	mov	r0, r2
 810:	cmp	r3, #1
 814:	ldrgt	r3, [sp, #8]
 818:	ldrgt	r2, [r3, #4]
 81c:	movle	r2, #0
 820:	mov	r1, #2
 824:	bl	688 <dohelp>
 828:	pop	{r4, pc}

0000082c <m_help>:
 82c:	push	{r4, lr}
 830:	mov	r0, r2
 834:	cmp	r3, #1
 838:	ldrgt	r3, [sp, #8]
 83c:	ldrgt	r2, [r3, #4]
 840:	movle	r2, #0
 844:	mov	r1, #1
 848:	bl	688 <dohelp>
 84c:	pop	{r4, pc}

00000850 <mo_uhelp>:
 850:	push	{r4, lr}
 854:	mov	r0, r2
 858:	cmp	r3, #1
 85c:	ldrgt	r3, [sp, #8]
 860:	ldrgt	r2, [r3, #4]
 864:	movle	r2, #0
 868:	mov	r1, #1
 86c:	bl	688 <dohelp>
 870:	pop	{r4, pc}

Disassembly of section .fini:

00000874 <_fini>:
 874:	push	{r3, lr}
 878:	pop	{r3, pc}
