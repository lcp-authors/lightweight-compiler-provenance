
../repos/charybdis/extensions/.libs/example_module.so:     file format elf32-littlearm


Disassembly of section .init:

000004cc <_init>:
 4cc:	push	{r3, lr}
 4d0:	bl	528 <call_weak_fn>
 4d4:	pop	{r3, pc}

Disassembly of section .plt:

000004d8 <.plt>:
 4d8:	push	{lr}		; (str lr, [sp, #-4]!)
 4dc:	ldr	lr, [pc, #4]	; 4e8 <.plt+0x10>
 4e0:	add	lr, pc, lr
 4e4:	ldr	pc, [lr, #8]!
 4e8:	.word	0x00010b18

000004ec <__cxa_finalize@plt>:
 4ec:	add	ip, pc, #0, 12
 4f0:	add	ip, ip, #16, 20	; 0x10000
 4f4:	ldr	pc, [ip, #2840]!	; 0xb18

000004f8 <sendto_realops_snomask@plt>:
 4f8:	add	ip, pc, #0, 12
 4fc:	add	ip, ip, #16, 20	; 0x10000
 500:	ldr	pc, [ip, #2832]!	; 0xb10

00000504 <__gmon_start__@plt>:
 504:	add	ip, pc, #0, 12
 508:	add	ip, ip, #16, 20	; 0x10000
 50c:	ldr	pc, [ip, #2824]!	; 0xb08

00000510 <sendto_one_notice@plt>:
 510:	add	ip, pc, #0, 12
 514:	add	ip, ip, #16, 20	; 0x10000
 518:	ldr	pc, [ip, #2816]!	; 0xb00

0000051c <call_hook@plt>:
 51c:	add	ip, pc, #0, 12
 520:	add	ip, ip, #16, 20	; 0x10000
 524:	ldr	pc, [ip, #2808]!	; 0xaf8

Disassembly of section .text:

00000528 <call_weak_fn>:
 528:	ldr	r3, [pc, #20]	; 544 <call_weak_fn+0x1c>
 52c:	ldr	r2, [pc, #20]	; 548 <call_weak_fn+0x20>
 530:	add	r3, pc, r3
 534:	ldr	r2, [r3, r2]
 538:	cmp	r2, #0
 53c:	bxeq	lr
 540:	b	504 <__gmon_start__@plt>
 544:	.word	0x00010ac8
 548:	.word	0x0000002c

0000054c <deregister_tm_clones>:
 54c:	ldr	r0, [pc, #44]	; 580 <deregister_tm_clones+0x34>
 550:	ldr	r3, [pc, #44]	; 584 <deregister_tm_clones+0x38>
 554:	add	r0, pc, r0
 558:	add	r3, pc, r3
 55c:	cmp	r3, r0
 560:	ldr	r3, [pc, #32]	; 588 <deregister_tm_clones+0x3c>
 564:	add	r3, pc, r3
 568:	bxeq	lr
 56c:	ldr	r2, [pc, #24]	; 58c <deregister_tm_clones+0x40>
 570:	ldr	r3, [r3, r2]
 574:	cmp	r3, #0
 578:	bxeq	lr
 57c:	bx	r3
 580:	.word	0x00010ba8
 584:	.word	0x00010ba4
 588:	.word	0x00010a94
 58c:	.word	0x00000028

00000590 <register_tm_clones>:
 590:	ldr	r0, [pc, #56]	; 5d0 <register_tm_clones+0x40>
 594:	ldr	r3, [pc, #56]	; 5d4 <register_tm_clones+0x44>
 598:	add	r0, pc, r0
 59c:	add	r3, pc, r3
 5a0:	sub	r1, r3, r0
 5a4:	ldr	r3, [pc, #44]	; 5d8 <register_tm_clones+0x48>
 5a8:	asr	r1, r1, #2
 5ac:	add	r3, pc, r3
 5b0:	add	r1, r1, r1, lsr #31
 5b4:	asrs	r1, r1, #1
 5b8:	bxeq	lr
 5bc:	ldr	r2, [pc, #24]	; 5dc <register_tm_clones+0x4c>
 5c0:	ldr	r3, [r3, r2]
 5c4:	cmp	r3, #0
 5c8:	bxeq	lr
 5cc:	bx	r3
 5d0:	.word	0x00010b64
 5d4:	.word	0x00010b60
 5d8:	.word	0x00010a4c
 5dc:	.word	0x00000030

000005e0 <__do_global_dtors_aux>:
 5e0:	ldr	r3, [pc, #76]	; 634 <__do_global_dtors_aux+0x54>
 5e4:	ldr	r2, [pc, #76]	; 638 <__do_global_dtors_aux+0x58>
 5e8:	add	r3, pc, r3
 5ec:	add	r2, pc, r2
 5f0:	ldrb	r3, [r3]
 5f4:	cmp	r3, #0
 5f8:	bxne	lr
 5fc:	ldr	r3, [pc, #56]	; 63c <__do_global_dtors_aux+0x5c>
 600:	push	{r4, lr}
 604:	ldr	r3, [r2, r3]
 608:	cmp	r3, #0
 60c:	beq	61c <__do_global_dtors_aux+0x3c>
 610:	ldr	r3, [pc, #40]	; 640 <__do_global_dtors_aux+0x60>
 614:	ldr	r0, [pc, r3]
 618:	bl	4ec <__cxa_finalize@plt>
 61c:	bl	54c <deregister_tm_clones>
 620:	ldr	r3, [pc, #28]	; 644 <__do_global_dtors_aux+0x64>
 624:	mov	r2, #1
 628:	add	r3, pc, r3
 62c:	strb	r2, [r3]
 630:	pop	{r4, pc}
 634:	.word	0x00010b14
 638:	.word	0x00010a0c
 63c:	.word	0x00000024
 640:	.word	0x00010a18
 644:	.word	0x00010ad4

00000648 <frame_dummy>:
 648:	b	590 <register_tm_clones>

0000064c <munreg_test>:
 64c:	push	{fp, lr}
 650:	mov	fp, sp
 654:	mov	r0, r2
 658:	cmp	r3, #1
 65c:	bgt	670 <munreg_test+0x24>
 660:	ldr	r1, [pc, #52]	; 69c <munreg_test+0x50>
 664:	add	r1, pc, r1
 668:	bl	510 <sendto_one_notice@plt>
 66c:	b	684 <munreg_test+0x38>
 670:	ldr	r1, [fp, #8]
 674:	ldr	r2, [r1, #4]
 678:	ldr	r1, [pc, #32]	; 6a0 <munreg_test+0x54>
 67c:	add	r1, pc, r1
 680:	bl	510 <sendto_one_notice@plt>
 684:	ldr	r0, [pc, #24]	; 6a4 <munreg_test+0x58>
 688:	mov	r1, #0
 68c:	ldr	r0, [pc, r0]
 690:	ldr	r0, [r0]
 694:	pop	{fp, lr}
 698:	b	51c <call_hook@plt>
 69c:	.word	0x00000188
 6a0:	.word	0x0000019d
 6a4:	.word	0x0001098c

000006a8 <mclient_test>:
 6a8:	push	{fp, lr}
 6ac:	mov	fp, sp
 6b0:	mov	r0, r2
 6b4:	cmp	r3, #1
 6b8:	bgt	6cc <mclient_test+0x24>
 6bc:	ldr	r1, [pc, #52]	; 6f8 <mclient_test+0x50>
 6c0:	add	r1, pc, r1
 6c4:	bl	510 <sendto_one_notice@plt>
 6c8:	b	6e0 <mclient_test+0x38>
 6cc:	ldr	r1, [fp, #8]
 6d0:	ldr	r2, [r1, #4]
 6d4:	ldr	r1, [pc, #32]	; 6fc <mclient_test+0x54>
 6d8:	add	r1, pc, r1
 6dc:	bl	510 <sendto_one_notice@plt>
 6e0:	ldr	r0, [pc, #24]	; 700 <mclient_test+0x58>
 6e4:	mov	r1, #0
 6e8:	ldr	r0, [pc, r0]
 6ec:	ldr	r0, [r0]
 6f0:	pop	{fp, lr}
 6f4:	b	51c <call_hook@plt>
 6f8:	.word	0x00000186
 6fc:	.word	0x0000019d
 700:	.word	0x00010930

00000704 <mrclient_test>:
 704:	mov	r0, r2
 708:	cmp	r3, #1
 70c:	bgt	71c <mrclient_test+0x18>
 710:	ldr	r1, [pc, #24]	; 730 <mrclient_test+0x2c>
 714:	add	r1, pc, r1
 718:	b	510 <sendto_one_notice@plt>
 71c:	ldr	r1, [sp]
 720:	ldr	r2, [r1, #4]
 724:	ldr	r1, [pc, #8]	; 734 <mrclient_test+0x30>
 728:	add	r1, pc, r1
 72c:	b	510 <sendto_one_notice@plt>
 730:	.word	0x00000191
 734:	.word	0x000001ae

00000738 <mserver_test>:
 738:	mov	r0, r2
 73c:	cmp	r3, #1
 740:	bgt	750 <mserver_test+0x18>
 744:	ldr	r1, [pc, #24]	; 764 <mserver_test+0x2c>
 748:	add	r1, pc, r1
 74c:	b	510 <sendto_one_notice@plt>
 750:	ldr	r1, [sp]
 754:	ldr	r2, [r1, #4]
 758:	ldr	r1, [pc, #8]	; 768 <mserver_test+0x30>
 75c:	add	r1, pc, r1
 760:	b	510 <sendto_one_notice@plt>
 764:	.word	0x000001c0
 768:	.word	0x000001d6

0000076c <moper_test>:
 76c:	mov	r0, r2
 770:	cmp	r3, #1
 774:	bgt	784 <moper_test+0x18>
 778:	ldr	r1, [pc, #24]	; 798 <moper_test+0x2c>
 77c:	add	r1, pc, r1
 780:	b	510 <sendto_one_notice@plt>
 784:	ldr	r1, [sp]
 788:	ldr	r2, [r1, #4]
 78c:	ldr	r1, [pc, #8]	; 79c <moper_test+0x30>
 790:	add	r1, pc, r1
 794:	b	510 <sendto_one_notice@plt>
 798:	.word	0x000001e1
 79c:	.word	0x000001fa

000007a0 <show_example_hook>:
 7a0:	ldr	r2, [pc, #12]	; 7b4 <show_example_hook+0x14>
 7a4:	mov	r0, #256	; 0x100
 7a8:	mov	r1, #0
 7ac:	add	r2, pc, r2
 7b0:	b	4f8 <sendto_realops_snomask@plt>
 7b4:	.word	0x0000020c

000007b8 <modinit>:
 7b8:	mov	r0, #0
 7bc:	bx	lr

000007c0 <moddeinit>:
 7c0:	bx	lr

Disassembly of section .fini:

000007c4 <_fini>:
 7c4:	push	{r3, lr}
 7c8:	pop	{r3, pc}
