
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

00011098 <.init>:
   11098:	push	{r3, lr}
   1109c:	bl	11874 <__assert_fail@plt+0x4bc>
   110a0:	pop	{r3, pc}

Disassembly of section .plt:

000110a4 <fdopen@plt-0x14>:
   110a4:	push	{lr}		; (str lr, [sp, #-4]!)
   110a8:	ldr	lr, [pc, #4]	; 110b4 <fdopen@plt-0x4>
   110ac:	add	lr, pc, lr
   110b0:	ldr	pc, [lr, #8]!
   110b4:	andeq	lr, r1, ip, asr #30

000110b8 <fdopen@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #122880	; 0x1e000
   110c0:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c4 <calloc@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #122880	; 0x1e000
   110cc:	ldr	pc, [ip, #3908]!	; 0xf44

000110d0 <fputs_unlocked@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #122880	; 0x1e000
   110d8:	ldr	pc, [ip, #3900]!	; 0xf3c

000110dc <raise@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #122880	; 0x1e000
   110e4:	ldr	pc, [ip, #3892]!	; 0xf34

000110e8 <inet_aton@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #122880	; 0x1e000
   110f0:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f4 <strcmp@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #122880	; 0x1e000
   110fc:	ldr	pc, [ip, #3876]!	; 0xf24

00011100 <strtol@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #122880	; 0x1e000
   11108:	ldr	pc, [ip, #3868]!	; 0xf1c

0001110c <printf@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #122880	; 0x1e000
   11114:	ldr	pc, [ip, #3860]!	; 0xf14

00011118 <memmove@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #122880	; 0x1e000
   11120:	ldr	pc, [ip, #3852]!	; 0xf0c

00011124 <strchrnul@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #122880	; 0x1e000
   1112c:	ldr	pc, [ip, #3844]!	; 0xf04

00011130 <free@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #122880	; 0x1e000
   11138:	ldr	pc, [ip, #3836]!	; 0xefc

0001113c <gai_strerror@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #122880	; 0x1e000
   11144:	ldr	pc, [ip, #3828]!	; 0xef4

00011148 <fgets@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #122880	; 0x1e000
   11150:	ldr	pc, [ip, #3820]!	; 0xeec

00011154 <ferror@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #122880	; 0x1e000
   1115c:	ldr	pc, [ip, #3812]!	; 0xee4

00011160 <strndup@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #122880	; 0x1e000
   11168:	ldr	pc, [ip, #3804]!	; 0xedc

0001116c <memcpy@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #122880	; 0x1e000
   11174:	ldr	pc, [ip, #3796]!	; 0xed4

00011178 <signal@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #122880	; 0x1e000
   11180:	ldr	pc, [ip, #3788]!	; 0xecc

00011184 <fwrite_unlocked@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #122880	; 0x1e000
   1118c:	ldr	pc, [ip, #3780]!	; 0xec4

00011190 <sleep@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #122880	; 0x1e000
   11198:	ldr	pc, [ip, #3772]!	; 0xebc

0001119c <realloc@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #122880	; 0x1e000
   111a4:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a8 <strcasecmp@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #122880	; 0x1e000
   111b0:	ldr	pc, [ip, #3756]!	; 0xeac

000111b4 <funlockfile@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #122880	; 0x1e000
   111bc:	ldr	pc, [ip, #3748]!	; 0xea4

000111c0 <fwrite@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #122880	; 0x1e000
   111c8:	ldr	pc, [ip, #3740]!	; 0xe9c

000111cc <strcat@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #122880	; 0x1e000
   111d4:	ldr	pc, [ip, #3732]!	; 0xe94

000111d8 <strcpy@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #122880	; 0x1e000
   111e0:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e4 <error@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #122880	; 0x1e000
   111ec:	ldr	pc, [ip, #3716]!	; 0xe84

000111f0 <getenv@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #122880	; 0x1e000
   111f8:	ldr	pc, [ip, #3708]!	; 0xe7c

000111fc <puts@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #122880	; 0x1e000
   11204:	ldr	pc, [ip, #3700]!	; 0xe74

00011208 <malloc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #122880	; 0x1e000
   11210:	ldr	pc, [ip, #3692]!	; 0xe6c

00011214 <__libc_start_main@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #122880	; 0x1e000
   1121c:	ldr	pc, [ip, #3684]!	; 0xe64

00011220 <strerror@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #122880	; 0x1e000
   11228:	ldr	pc, [ip, #3676]!	; 0xe5c

0001122c <__ctype_tolower_loc@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #122880	; 0x1e000
   11234:	ldr	pc, [ip, #3668]!	; 0xe54

00011238 <__gmon_start__@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #122880	; 0x1e000
   11240:	ldr	pc, [ip, #3660]!	; 0xe4c

00011244 <mempcpy@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #122880	; 0x1e000
   1124c:	ldr	pc, [ip, #3652]!	; 0xe44

00011250 <__ctype_b_loc@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #122880	; 0x1e000
   11258:	ldr	pc, [ip, #3644]!	; 0xe3c

0001125c <exit@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #122880	; 0x1e000
   11264:	ldr	pc, [ip, #3636]!	; 0xe34

00011268 <strlen@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #122880	; 0x1e000
   11270:	ldr	pc, [ip, #3628]!	; 0xe2c

00011274 <strchr@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #122880	; 0x1e000
   1127c:	ldr	pc, [ip, #3620]!	; 0xe24

00011280 <fprintf@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #122880	; 0x1e000
   11288:	ldr	pc, [ip, #3612]!	; 0xe1c

0001128c <__errno_location@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #122880	; 0x1e000
   11294:	ldr	pc, [ip, #3604]!	; 0xe14

00011298 <strncasecmp@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #122880	; 0x1e000
   112a0:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a4 <strerror_r@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #122880	; 0x1e000
   112ac:	ldr	pc, [ip, #3588]!	; 0xe04

000112b0 <memset@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #122880	; 0x1e000
   112b8:	ldr	pc, [ip, #3580]!	; 0xdfc

000112bc <write@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #122880	; 0x1e000
   112c4:	ldr	pc, [ip, #3572]!	; 0xdf4

000112c8 <memchr@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #122880	; 0x1e000
   112d0:	ldr	pc, [ip, #3564]!	; 0xdec

000112d4 <__overflow@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #122880	; 0x1e000
   112dc:	ldr	pc, [ip, #3556]!	; 0xde4

000112e0 <strrchr@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #122880	; 0x1e000
   112e8:	ldr	pc, [ip, #3548]!	; 0xddc

000112ec <vfprintf@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #122880	; 0x1e000
   112f4:	ldr	pc, [ip, #3540]!	; 0xdd4

000112f8 <fputc@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #122880	; 0x1e000
   11300:	ldr	pc, [ip, #3532]!	; 0xdcc

00011304 <sscanf@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #122880	; 0x1e000
   1130c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011310 <sprintf@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #122880	; 0x1e000
   11318:	ldr	pc, [ip, #3516]!	; 0xdbc

0001131c <flockfile@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #122880	; 0x1e000
   11324:	ldr	pc, [ip, #3508]!	; 0xdb4

00011328 <vsnprintf@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #122880	; 0x1e000
   11330:	ldr	pc, [ip, #3500]!	; 0xdac

00011334 <qsort@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #122880	; 0x1e000
   1133c:	ldr	pc, [ip, #3492]!	; 0xda4

00011340 <strpbrk@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #122880	; 0x1e000
   11348:	ldr	pc, [ip, #3484]!	; 0xd9c

0001134c <freeaddrinfo@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #122880	; 0x1e000
   11354:	ldr	pc, [ip, #3476]!	; 0xd94

00011358 <getaddrinfo@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #122880	; 0x1e000
   11360:	ldr	pc, [ip, #3468]!	; 0xd8c

00011364 <socket@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #122880	; 0x1e000
   1136c:	ldr	pc, [ip, #3460]!	; 0xd84

00011370 <gethostbyname@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #122880	; 0x1e000
   11378:	ldr	pc, [ip, #3452]!	; 0xd7c

0001137c <fputs@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #122880	; 0x1e000
   11384:	ldr	pc, [ip, #3444]!	; 0xd74

00011388 <strncmp@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #122880	; 0x1e000
   11390:	ldr	pc, [ip, #3436]!	; 0xd6c

00011394 <abort@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #122880	; 0x1e000
   1139c:	ldr	pc, [ip, #3428]!	; 0xd64

000113a0 <close@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #122880	; 0x1e000
   113a8:	ldr	pc, [ip, #3420]!	; 0xd5c

000113ac <connect@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #122880	; 0x1e000
   113b4:	ldr	pc, [ip, #3412]!	; 0xd54

000113b8 <__assert_fail@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #122880	; 0x1e000
   113c0:	ldr	pc, [ip, #3404]!	; 0xd4c

Disassembly of section .text:

000113c4 <argp_parse@@Base-0x2584>:
   113c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113c8:	mov	r5, r0
   113cc:	sub	sp, sp, #20
   113d0:	ldr	r0, [r1]
   113d4:	mov	r8, r1
   113d8:	ldr	r4, [pc, #1012]	; 117d4 <__assert_fail@plt+0x41c>
   113dc:	bl	14df0 <_obstack_memory_used@@Base+0x34>
   113e0:	ldr	r3, [pc, #1008]	; 117d8 <__assert_fail@plt+0x420>
   113e4:	mov	r2, #0
   113e8:	mov	r1, r2
   113ec:	str	r3, [sp]
   113f0:	mov	r0, r4
   113f4:	ldr	r3, [pc, #992]	; 117dc <__assert_fail@plt+0x424>
   113f8:	bl	14a00 <_obstack_begin@@Base>
   113fc:	ldr	r3, [pc, #988]	; 117e0 <__assert_fail@plt+0x428>
   11400:	ldr	r2, [pc, #988]	; 117e4 <__assert_fail@plt+0x42c>
   11404:	ldr	r1, [pc, #988]	; 117e8 <__assert_fail@plt+0x430>
   11408:	ldr	r0, [pc, #988]	; 117ec <__assert_fail@plt+0x434>
   1140c:	str	r2, [r3]
   11410:	bl	147f0 <argp_parse@@Base+0xea8>
   11414:	mov	r0, #0
   11418:	add	r3, sp, #12
   1141c:	mov	r2, r8
   11420:	str	r0, [sp, #4]
   11424:	str	r3, [sp]
   11428:	mov	r1, r5
   1142c:	mov	r3, #8
   11430:	ldr	r0, [pc, #952]	; 117f0 <__assert_fail@plt+0x438>
   11434:	bl	13948 <argp_parse@@Base>
   11438:	ldr	r3, [r4, #12]
   1143c:	ldr	r2, [r4, #16]
   11440:	cmp	r2, r3
   11444:	beq	116a0 <__assert_fail@plt+0x2e8>
   11448:	mov	r2, #0
   1144c:	add	r1, r3, #1
   11450:	str	r1, [r4, #12]
   11454:	strb	r2, [r3]
   11458:	ldr	r3, [r4, #12]
   1145c:	ldr	r9, [r4, #8]
   11460:	ldr	r1, [r4, #24]
   11464:	cmp	r9, r3
   11468:	ldr	r0, [r4, #16]
   1146c:	ldrbeq	r2, [r4, #40]	; 0x28
   11470:	add	r3, r3, r1
   11474:	bic	r3, r3, r1
   11478:	orreq	r2, r2, #2
   1147c:	strbeq	r2, [r4, #40]	; 0x28
   11480:	ldr	r2, [r4, #4]
   11484:	ldr	r6, [sp, #12]
   11488:	sub	r1, r3, r2
   1148c:	sub	r2, r0, r2
   11490:	cmp	r1, r2
   11494:	str	r3, [r4, #12]
   11498:	movhi	r3, r0
   1149c:	strhi	r0, [r4, #12]
   114a0:	subs	r5, r5, r6
   114a4:	ldr	r7, [pc, #840]	; 117f4 <__assert_fail@plt+0x43c>
   114a8:	str	r3, [r4, #8]
   114ac:	bne	115c8 <__assert_fail@plt+0x210>
   114b0:	ldr	r1, [r7]
   114b4:	cmp	r1, #0
   114b8:	beq	1167c <__assert_fail@plt+0x2c4>
   114bc:	ldr	r3, [r4, #12]
   114c0:	ldr	r2, [r4, #16]
   114c4:	cmp	r2, r3
   114c8:	beq	1168c <__assert_fail@plt+0x2d4>
   114cc:	mov	r2, #0
   114d0:	add	r1, r3, #1
   114d4:	str	r1, [r4, #12]
   114d8:	strb	r2, [r3]
   114dc:	ldr	r3, [r4, #12]
   114e0:	ldr	r5, [r4, #8]
   114e4:	ldr	r0, [r4, #16]
   114e8:	cmp	r5, r3
   114ec:	ldr	r1, [r4, #4]
   114f0:	ldrbeq	r2, [r4, #40]	; 0x28
   114f4:	orreq	r2, r2, #2
   114f8:	strbeq	r2, [r4, #40]	; 0x28
   114fc:	ldr	r2, [r4, #24]
   11500:	add	r3, r3, r2
   11504:	bic	r3, r3, r2
   11508:	sub	r2, r3, r1
   1150c:	sub	r1, r0, r1
   11510:	cmp	r2, r1
   11514:	ldr	r2, [r7, #4]
   11518:	str	r3, [r4, #12]
   1151c:	movhi	r3, r0
   11520:	strhi	r0, [r4, #12]
   11524:	cmp	r2, #0
   11528:	str	r3, [r4, #8]
   1152c:	beq	116b4 <__assert_fail@plt+0x2fc>
   11530:	ldr	r6, [pc, #704]	; 117f8 <__assert_fail@plt+0x440>
   11534:	ldr	r0, [pc, #704]	; 117fc <__assert_fail@plt+0x444>
   11538:	bl	111f0 <getenv@plt>
   1153c:	mov	r1, r9
   11540:	cmp	r0, #0
   11544:	movne	r2, #0
   11548:	ldrne	r3, [pc, #688]	; 11800 <__assert_fail@plt+0x448>
   1154c:	ldr	r0, [r7, #4]
   11550:	strne	r2, [r3]
   11554:	mov	r2, r5
   11558:	bl	121b8 <__assert_fail@plt+0xe00>
   1155c:	ldr	r3, [r7, #12]
   11560:	cmp	r3, #0
   11564:	mov	r4, r0
   11568:	bne	1166c <__assert_fail@plt+0x2b4>
   1156c:	mov	r0, r4
   11570:	bl	11268 <strlen@plt>
   11574:	ldr	r3, [pc, #648]	; 11804 <__assert_fail@plt+0x44c>
   11578:	ldr	r1, [pc, #648]	; 11808 <__assert_fail@plt+0x450>
   1157c:	ldrh	ip, [r3]
   11580:	ldrb	r3, [r3, #2]
   11584:	add	r2, r4, r0
   11588:	strh	ip, [r4, r0]
   1158c:	strb	r3, [r2, #2]
   11590:	mov	r0, #15
   11594:	bl	11178 <signal@plt>
   11598:	ldr	r1, [pc, #616]	; 11808 <__assert_fail@plt+0x450>
   1159c:	mov	r0, #2
   115a0:	bl	11178 <signal@plt>
   115a4:	ldmib	r7, {r0, r1}
   115a8:	bl	1297c <__assert_fail@plt+0x15c4>
   115ac:	mov	r1, r4
   115b0:	str	r0, [r6]
   115b4:	bl	12aa8 <__assert_fail@plt+0x16f0>
   115b8:	ldr	r0, [r6]
   115bc:	bl	113a0 <close@plt>
   115c0:	mov	r0, #0
   115c4:	bl	1125c <exit@plt>
   115c8:	ldr	r3, [r7]
   115cc:	cmp	r3, #0
   115d0:	bne	114bc <__assert_fail@plt+0x104>
   115d4:	add	r6, r8, r6, lsl #2
   115d8:	sub	r5, r5, #1
   115dc:	mov	r8, #32
   115e0:	b	11620 <__assert_fail@plt+0x268>
   115e4:	mov	r1, sl
   115e8:	mov	r2, fp
   115ec:	bl	1116c <memcpy@plt>
   115f0:	ldr	r0, [r4, #12]
   115f4:	cmp	r5, #0
   115f8:	add	r0, r0, fp
   115fc:	str	r0, [r4, #12]
   11600:	beq	114bc <__assert_fail@plt+0x104>
   11604:	ldr	r3, [r4, #16]
   11608:	cmp	r3, r0
   1160c:	beq	11658 <__assert_fail@plt+0x2a0>
   11610:	sub	r5, r5, #1
   11614:	add	r3, r0, #1
   11618:	str	r3, [r4, #12]
   1161c:	strb	r8, [r0]
   11620:	ldr	sl, [r6], #4
   11624:	mov	r0, sl
   11628:	bl	11268 <strlen@plt>
   1162c:	ldr	r1, [r4, #16]
   11630:	mov	fp, r0
   11634:	ldr	r0, [r4, #12]
   11638:	sub	r1, r1, r0
   1163c:	cmp	fp, r1
   11640:	bls	115e4 <__assert_fail@plt+0x22c>
   11644:	ldr	r0, [pc, #392]	; 117d4 <__assert_fail@plt+0x41c>
   11648:	mov	r1, fp
   1164c:	bl	14b94 <_obstack_newchunk@@Base>
   11650:	ldr	r0, [r4, #12]
   11654:	b	115e4 <__assert_fail@plt+0x22c>
   11658:	ldr	r0, [pc, #372]	; 117d4 <__assert_fail@plt+0x41c>
   1165c:	mov	r1, #1
   11660:	bl	14b94 <_obstack_newchunk@@Base>
   11664:	ldr	r0, [r4, #12]
   11668:	b	11610 <__assert_fail@plt+0x258>
   1166c:	mov	r1, r0
   11670:	ldr	r0, [pc, #404]	; 1180c <__assert_fail@plt+0x454>
   11674:	bl	1110c <printf@plt>
   11678:	b	1156c <__assert_fail@plt+0x1b4>
   1167c:	ldr	r2, [pc, #396]	; 11810 <__assert_fail@plt+0x458>
   11680:	mov	r0, #1
   11684:	bl	111e4 <error@plt>
   11688:	b	114bc <__assert_fail@plt+0x104>
   1168c:	mov	r1, #1
   11690:	ldr	r0, [pc, #316]	; 117d4 <__assert_fail@plt+0x41c>
   11694:	bl	14b94 <_obstack_newchunk@@Base>
   11698:	ldr	r3, [r4, #12]
   1169c:	b	114cc <__assert_fail@plt+0x114>
   116a0:	mov	r1, #1
   116a4:	mov	r0, r4
   116a8:	bl	14b94 <_obstack_newchunk@@Base>
   116ac:	ldr	r3, [r4, #12]
   116b0:	b	11448 <__assert_fail@plt+0x90>
   116b4:	ldr	r1, [pc, #344]	; 11814 <__assert_fail@plt+0x45c>
   116b8:	mov	r0, r5
   116bc:	bl	125d0 <__assert_fail@plt+0x1218>
   116c0:	cmp	r0, #0
   116c4:	beq	1171c <__assert_fail@plt+0x364>
   116c8:	ldr	r3, [r7, #12]
   116cc:	cmp	r3, #0
   116d0:	bne	117c8 <__assert_fail@plt+0x410>
   116d4:	mov	r1, #0
   116d8:	ldr	r0, [pc, #312]	; 11818 <__assert_fail@plt+0x460>
   116dc:	bl	1297c <__assert_fail@plt+0x15c4>
   116e0:	ldr	r6, [pc, #272]	; 117f8 <__assert_fail@plt+0x440>
   116e4:	mov	r1, r5
   116e8:	str	r0, [r6]
   116ec:	bl	1277c <__assert_fail@plt+0x13c4>
   116f0:	str	r0, [r7, #4]
   116f4:	ldr	r0, [r6]
   116f8:	bl	113a0 <close@plt>
   116fc:	ldr	r1, [r7, #4]
   11700:	cmp	r1, #0
   11704:	beq	1175c <__assert_fail@plt+0x3a4>
   11708:	ldr	r0, [pc, #268]	; 1181c <__assert_fail@plt+0x464>
   1170c:	bl	1110c <printf@plt>
   11710:	ldr	r3, [r7, #4]
   11714:	cmp	r3, #0
   11718:	bne	11534 <__assert_fail@plt+0x17c>
   1171c:	mov	r0, r5
   11720:	bl	11c10 <__assert_fail@plt+0x858>
   11724:	str	r0, [r7, #4]
   11728:	ldrb	r3, [r0]
   1172c:	cmp	r3, #3
   11730:	ldrls	pc, [pc, r3, lsl #2]
   11734:	b	117ac <__assert_fail@plt+0x3f4>
   11738:	andeq	r1, r1, r4, ror r7
   1173c:	andeq	r1, r1, r8, asr #14
   11740:	andeq	r1, r1, r0, asr r7
   11744:	andeq	r1, r1, r4, ror #14
   11748:	ldr	r0, [pc, #208]	; 11820 <__assert_fail@plt+0x468>
   1174c:	bl	111fc <puts@plt>
   11750:	ldr	r0, [r7, #4]
   11754:	add	r0, r0, #1
   11758:	bl	111fc <puts@plt>
   1175c:	mov	r0, #0
   11760:	bl	1125c <exit@plt>
   11764:	ldr	r0, [pc, #184]	; 11824 <__assert_fail@plt+0x46c>
   11768:	bl	111fc <puts@plt>
   1176c:	mov	r0, #0
   11770:	bl	1125c <exit@plt>
   11774:	ldr	r0, [pc, #172]	; 11828 <__assert_fail@plt+0x470>
   11778:	bl	111f0 <getenv@plt>
   1177c:	cmp	r0, #0
   11780:	str	r0, [r7, #4]
   11784:	ldreq	r3, [pc, #140]	; 11818 <__assert_fail@plt+0x460>
   11788:	streq	r3, [r7, #4]
   1178c:	ldr	r3, [r7, #12]
   11790:	cmp	r3, #0
   11794:	beq	11530 <__assert_fail@plt+0x178>
   11798:	ldr	r1, [r7, #4]
   1179c:	ldr	r0, [pc, #136]	; 1182c <__assert_fail@plt+0x474>
   117a0:	bl	1110c <printf@plt>
   117a4:	ldr	r6, [pc, #76]	; 117f8 <__assert_fail@plt+0x440>
   117a8:	b	11534 <__assert_fail@plt+0x17c>
   117ac:	ldr	r3, [r7, #12]
   117b0:	cmp	r3, #0
   117b4:	beq	11530 <__assert_fail@plt+0x178>
   117b8:	mov	r1, r0
   117bc:	ldr	r0, [pc, #108]	; 11830 <__assert_fail@plt+0x478>
   117c0:	bl	1110c <printf@plt>
   117c4:	b	11530 <__assert_fail@plt+0x178>
   117c8:	ldr	r0, [pc, #100]	; 11834 <__assert_fail@plt+0x47c>
   117cc:	bl	111fc <puts@plt>
   117d0:	b	116d4 <__assert_fail@plt+0x31c>
   117d4:	andeq	r3, r3, ip, lsl #18
   117d8:	andeq	r4, r1, r4, asr #17
   117dc:	andeq	r6, r1, ip, asr #5
   117e0:	andeq	r3, r3, ip, lsr r9
   117e4:	andeq	sp, r1, r8, lsr #2
   117e8:	ldrdeq	r3, [r3], -r0
   117ec:	andeq	sp, r1, r8, rrx
   117f0:	ldrdeq	r3, [r3], -r8
   117f4:	andeq	r3, r3, r4, asr #17
   117f8:	andeq	r3, r3, r8, lsr r9
   117fc:	andeq	sp, r1, ip, asr r2
   11800:	andeq	r0, r3, ip, lsl r1
   11804:	andeq	sp, r1, r8, lsr #32
   11808:			; <UNDEFINED> instruction: 0x00012db8
   1180c:	andeq	sp, r1, r8, ror #4
   11810:	andeq	sp, r1, r0, asr #2
   11814:	strdeq	r3, [r3], -r4
   11818:	andeq	sp, r1, ip, ror r1
   1181c:	muleq	r1, r0, r1
   11820:	andeq	sp, r1, r0, ror #3
   11824:	andeq	sp, r1, r8, lsr #4
   11828:			; <UNDEFINED> instruction: 0x0001d1b4
   1182c:	andeq	sp, r1, r4, asr #3
   11830:	andeq	sp, r1, r8, asr #4
   11834:	andeq	sp, r1, r8, asr r1
   11838:	mov	fp, #0
   1183c:	mov	lr, #0
   11840:	pop	{r1}		; (ldr r1, [sp], #4)
   11844:	mov	r2, sp
   11848:	push	{r2}		; (str r2, [sp, #-4]!)
   1184c:	push	{r0}		; (str r0, [sp, #-4]!)
   11850:	ldr	ip, [pc, #16]	; 11868 <__assert_fail@plt+0x4b0>
   11854:	push	{ip}		; (str ip, [sp, #-4]!)
   11858:	ldr	r0, [pc, #12]	; 1186c <__assert_fail@plt+0x4b4>
   1185c:	ldr	r3, [pc, #12]	; 11870 <__assert_fail@plt+0x4b8>
   11860:	bl	11214 <__libc_start_main@plt>
   11864:	bl	11394 <abort@plt>
   11868:	andeq	ip, r1, r4, lsr #27
   1186c:	andeq	r1, r1, r4, asr #7
   11870:	andeq	ip, r1, r4, asr #26
   11874:	ldr	r3, [pc, #20]	; 11890 <__assert_fail@plt+0x4d8>
   11878:	ldr	r2, [pc, #20]	; 11894 <__assert_fail@plt+0x4dc>
   1187c:	add	r3, pc, r3
   11880:	ldr	r2, [r3, r2]
   11884:	cmp	r2, #0
   11888:	bxeq	lr
   1188c:	b	11238 <__gmon_start__@plt>
   11890:	andeq	lr, r1, ip, ror r7
   11894:	andeq	r0, r0, r0, lsl r1
   11898:	ldr	r3, [pc, #28]	; 118bc <__assert_fail@plt+0x504>
   1189c:	ldr	r0, [pc, #28]	; 118c0 <__assert_fail@plt+0x508>
   118a0:	sub	r3, r3, r0
   118a4:	cmp	r3, #6
   118a8:	bxls	lr
   118ac:	ldr	r3, [pc, #16]	; 118c4 <__assert_fail@plt+0x50c>
   118b0:	cmp	r3, #0
   118b4:	bxeq	lr
   118b8:	bx	r3
   118bc:			; <UNDEFINED> instruction: 0x000338b3
   118c0:			; <UNDEFINED> instruction: 0x000338b0
   118c4:	andeq	r0, r0, r0
   118c8:	ldr	r1, [pc, #36]	; 118f4 <__assert_fail@plt+0x53c>
   118cc:	ldr	r0, [pc, #36]	; 118f8 <__assert_fail@plt+0x540>
   118d0:	sub	r1, r1, r0
   118d4:	asr	r1, r1, #2
   118d8:	add	r1, r1, r1, lsr #31
   118dc:	asrs	r1, r1, #1
   118e0:	bxeq	lr
   118e4:	ldr	r3, [pc, #16]	; 118fc <__assert_fail@plt+0x544>
   118e8:	cmp	r3, #0
   118ec:	bxeq	lr
   118f0:	bx	r3
   118f4:			; <UNDEFINED> instruction: 0x000338b0
   118f8:			; <UNDEFINED> instruction: 0x000338b0
   118fc:	andeq	r0, r0, r0
   11900:	push	{r4, lr}
   11904:	ldr	r4, [pc, #24]	; 11924 <__assert_fail@plt+0x56c>
   11908:	ldrb	r3, [r4]
   1190c:	cmp	r3, #0
   11910:	popne	{r4, pc}
   11914:	bl	11898 <__assert_fail@plt+0x4e0>
   11918:	mov	r3, #1
   1191c:	strb	r3, [r4]
   11920:	pop	{r4, pc}
   11924:	andeq	r3, r3, r0, asr #17
   11928:	ldr	r0, [pc, #40]	; 11958 <__assert_fail@plt+0x5a0>
   1192c:	ldr	r3, [r0]
   11930:	cmp	r3, #0
   11934:	bne	1193c <__assert_fail@plt+0x584>
   11938:	b	118c8 <__assert_fail@plt+0x510>
   1193c:	ldr	r3, [pc, #24]	; 1195c <__assert_fail@plt+0x5a4>
   11940:	cmp	r3, #0
   11944:	beq	11938 <__assert_fail@plt+0x580>
   11948:	push	{r4, lr}
   1194c:	blx	r3
   11950:	pop	{r4, lr}
   11954:	b	118c8 <__assert_fail@plt+0x510>
   11958:	andeq	pc, r2, r4, lsl pc	; <UNPREDICTABLE>
   1195c:	andeq	r0, r0, r0
   11960:	sub	r3, r0, #1
   11964:	cmp	r3, #126	; 0x7e
   11968:	bls	11974 <__assert_fail@plt+0x5bc>
   1196c:	mov	r0, #7
   11970:	bx	lr
   11974:	bic	r3, r0, #2
   11978:	cmp	r0, #113	; 0x71
   1197c:	cmpne	r3, #116	; 0x74
   11980:	push	{r4, r5, r6, lr}
   11984:	moveq	r2, #1
   11988:	ldreq	r3, [pc, #264]	; 11a98 <__assert_fail@plt+0x6e0>
   1198c:	ldr	r4, [pc, #264]	; 11a9c <__assert_fail@plt+0x6e4>
   11990:	mov	r6, r1
   11994:	streq	r2, [r3]
   11998:	ldr	r3, [r4, #12]
   1199c:	ldr	r2, [r4, #16]
   119a0:	mov	r5, r0
   119a4:	cmp	r2, r3
   119a8:	beq	11a68 <__assert_fail@plt+0x6b0>
   119ac:	add	r1, r3, #1
   119b0:	mov	r2, #45	; 0x2d
   119b4:	str	r1, [r4, #12]
   119b8:	strb	r2, [r3]
   119bc:	ldr	r3, [r4, #12]
   119c0:	ldr	r2, [r4, #16]
   119c4:	cmp	r2, r3
   119c8:	beq	11a54 <__assert_fail@plt+0x69c>
   119cc:	add	r2, r3, #1
   119d0:	cmp	r6, #0
   119d4:	str	r2, [r4, #12]
   119d8:	strb	r5, [r3]
   119dc:	beq	11a90 <__assert_fail@plt+0x6d8>
   119e0:	ldr	r3, [r4, #12]
   119e4:	ldr	r2, [r4, #16]
   119e8:	cmp	r2, r3
   119ec:	beq	11a7c <__assert_fail@plt+0x6c4>
   119f0:	add	r1, r3, #1
   119f4:	mov	r2, #32
   119f8:	str	r1, [r4, #12]
   119fc:	mov	r0, r6
   11a00:	strb	r2, [r3]
   11a04:	bl	11268 <strlen@plt>
   11a08:	ldr	r3, [r4, #16]
   11a0c:	mov	r5, r0
   11a10:	ldr	r0, [r4, #12]
   11a14:	sub	r3, r3, r0
   11a18:	cmp	r5, r3
   11a1c:	bhi	11a40 <__assert_fail@plt+0x688>
   11a20:	mov	r2, r5
   11a24:	mov	r1, r6
   11a28:	bl	1116c <memcpy@plt>
   11a2c:	ldr	r3, [r4, #12]
   11a30:	mov	r0, #0
   11a34:	add	r5, r3, r5
   11a38:	str	r5, [r4, #12]
   11a3c:	pop	{r4, r5, r6, pc}
   11a40:	ldr	r0, [pc, #84]	; 11a9c <__assert_fail@plt+0x6e4>
   11a44:	mov	r1, r5
   11a48:	bl	14b94 <_obstack_newchunk@@Base>
   11a4c:	ldr	r0, [r4, #12]
   11a50:	b	11a20 <__assert_fail@plt+0x668>
   11a54:	mov	r1, #1
   11a58:	ldr	r0, [pc, #60]	; 11a9c <__assert_fail@plt+0x6e4>
   11a5c:	bl	14b94 <_obstack_newchunk@@Base>
   11a60:	ldr	r3, [r4, #12]
   11a64:	b	119cc <__assert_fail@plt+0x614>
   11a68:	mov	r1, #1
   11a6c:	mov	r0, r4
   11a70:	bl	14b94 <_obstack_newchunk@@Base>
   11a74:	ldr	r3, [r4, #12]
   11a78:	b	119ac <__assert_fail@plt+0x5f4>
   11a7c:	mov	r1, #1
   11a80:	ldr	r0, [pc, #20]	; 11a9c <__assert_fail@plt+0x6e4>
   11a84:	bl	14b94 <_obstack_newchunk@@Base>
   11a88:	ldr	r3, [r4, #12]
   11a8c:	b	119f0 <__assert_fail@plt+0x638>
   11a90:	mov	r0, r6
   11a94:	pop	{r4, r5, r6, pc}
   11a98:	andeq	r3, r3, r4, asr #17
   11a9c:	andeq	r3, r3, ip, lsl #18
   11aa0:	sub	r0, r0, #72	; 0x48
   11aa4:	push	{r4, r5, r6, r7, r8, lr}
   11aa8:	mov	r6, r1
   11aac:	cmp	r0, #40	; 0x28
   11ab0:	ldrls	pc, [pc, r0, lsl #2]
   11ab4:	b	11c00 <__assert_fail@plt+0x848>
   11ab8:	andeq	r1, r1, ip, ror #23
   11abc:	andeq	r1, r1, r0, lsl #24
   11ac0:	andeq	r1, r1, r0, lsl #24
   11ac4:	andeq	r1, r1, r0, lsl #24
   11ac8:	andeq	r1, r1, r0, lsl #24
   11acc:	andeq	r1, r1, r0, lsl #24
   11ad0:	andeq	r1, r1, r0, lsl #24
   11ad4:	andeq	r1, r1, r0, lsl #24
   11ad8:	andeq	r1, r1, r0, lsl #24
   11adc:	andeq	r1, r1, r0, lsl #24
   11ae0:	andeq	r1, r1, r0, lsl #24
   11ae4:	andeq	r1, r1, r0, lsl #24
   11ae8:	andeq	r1, r1, r0, lsl #24
   11aec:	andeq	r1, r1, r0, lsl #24
   11af0:	ldrdeq	r1, [r1], -r8
   11af4:	andeq	r1, r1, r0, lsl #24
   11af8:	andeq	r1, r1, r0, lsl #24
   11afc:	andeq	r1, r1, r0, lsl #24
   11b00:	andeq	r1, r1, r0, lsl #24
   11b04:	andeq	r1, r1, r0, lsl #24
   11b08:	andeq	r1, r1, r0, lsl #24
   11b0c:	andeq	r1, r1, r0, lsl #24
   11b10:	andeq	r1, r1, r0, lsl #24
   11b14:	andeq	r1, r1, r0, lsl #24
   11b18:	andeq	r1, r1, r0, lsl #24
   11b1c:	andeq	r1, r1, r0, lsl #24
   11b20:	andeq	r1, r1, r0, lsl #24
   11b24:	andeq	r1, r1, r0, lsl #24
   11b28:	andeq	r1, r1, r0, lsl #24
   11b2c:	andeq	r1, r1, r0, lsl #24
   11b30:	andeq	r1, r1, r0, lsl #24
   11b34:	andeq	r1, r1, r0, lsl #24
   11b38:	andeq	r1, r1, ip, ror #22
   11b3c:	andeq	r1, r1, r0, lsl #24
   11b40:	andeq	r1, r1, r0, lsl #24
   11b44:	andeq	r1, r1, r0, lsl #24
   11b48:	andeq	r1, r1, r0, lsl #24
   11b4c:	andeq	r1, r1, r0, lsl #24
   11b50:	andeq	r1, r1, r0, lsl #24
   11b54:	andeq	r1, r1, r0, lsl #24
   11b58:	andeq	r1, r1, ip, asr fp
   11b5c:	ldr	r3, [pc, #164]	; 11c08 <__assert_fail@plt+0x850>
   11b60:	mov	r0, #0
   11b64:	str	r1, [r3, #8]
   11b68:	pop	{r4, r5, r6, r7, r8, pc}
   11b6c:	mov	r0, r1
   11b70:	bl	11268 <strlen@plt>
   11b74:	ldr	r7, [pc, #140]	; 11c08 <__assert_fail@plt+0x850>
   11b78:	add	r0, r0, #1
   11b7c:	bl	15c10 <_obstack_memory_used@@Base+0xe54>
   11b80:	str	r0, [r7, #4]
   11b84:	ldrb	r4, [r6]
   11b88:	mov	r5, r0
   11b8c:	cmp	r4, #58	; 0x3a
   11b90:	cmpne	r4, #0
   11b94:	beq	11bc0 <__assert_fail@plt+0x808>
   11b98:	bl	1122c <__ctype_tolower_loc@plt>
   11b9c:	add	r3, r6, #1
   11ba0:	ldr	r1, [r0]
   11ba4:	ldr	r2, [r1, r4, lsl #2]
   11ba8:	mov	r6, r3
   11bac:	ldrb	r4, [r3], #1
   11bb0:	strb	r2, [r5], #1
   11bb4:	cmp	r4, #0
   11bb8:	cmpne	r4, #58	; 0x3a
   11bbc:	bne	11ba4 <__assert_fail@plt+0x7ec>
   11bc0:	cmp	r4, #58	; 0x3a
   11bc4:	addeq	r6, r6, #1
   11bc8:	mov	r0, #0
   11bcc:	streq	r6, [r7, #8]
   11bd0:	strb	r0, [r5]
   11bd4:	pop	{r4, r5, r6, r7, r8, pc}
   11bd8:	ldr	r3, [pc, #40]	; 11c08 <__assert_fail@plt+0x850>
   11bdc:	mov	r2, #1
   11be0:	mov	r0, #0
   11be4:	str	r2, [r3, #12]
   11be8:	pop	{r4, r5, r6, r7, r8, pc}
   11bec:	ldr	r2, [pc, #24]	; 11c0c <__assert_fail@plt+0x854>
   11bf0:	mov	r3, #0
   11bf4:	mov	r0, r3
   11bf8:	str	r3, [r2]
   11bfc:	pop	{r4, r5, r6, r7, r8, pc}
   11c00:	mov	r0, #7
   11c04:	pop	{r4, r5, r6, r7, r8, pc}
   11c08:	andeq	r3, r3, r4, asr #17
   11c0c:	andeq	r0, r3, ip, lsl r1
   11c10:	ldrb	r3, [r0]
   11c14:	cmp	r3, #0
   11c18:	beq	11da4 <__assert_fail@plt+0x9ec>
   11c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c20:	mov	r4, r0
   11c24:	sub	sp, sp, #28
   11c28:	b	11c38 <__assert_fail@plt+0x880>
   11c2c:	ldrb	r3, [r4, #2]!
   11c30:	cmp	r3, #0
   11c34:	beq	11c64 <__assert_fail@plt+0x8ac>
   11c38:	ldrb	r3, [r4, #1]
   11c3c:	cmp	r3, #32
   11c40:	beq	11c2c <__assert_fail@plt+0x874>
   11c44:	mov	r1, #64	; 0x40
   11c48:	mov	r0, r4
   11c4c:	bl	11274 <strchr@plt>
   11c50:	subs	r5, r0, #0
   11c54:	beq	11c70 <__assert_fail@plt+0x8b8>
   11c58:	ldr	r0, [pc, #996]	; 12044 <__assert_fail@plt+0xc8c>
   11c5c:	add	sp, sp, #28
   11c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c64:	ldr	r0, [pc, #988]	; 12048 <__assert_fail@plt+0xc90>
   11c68:	add	sp, sp, #28
   11c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c70:	ldr	r1, [pc, #980]	; 1204c <__assert_fail@plt+0xc94>
   11c74:	mov	r0, r4
   11c78:	bl	11340 <strpbrk@plt>
   11c7c:	cmp	r0, #0
   11c80:	moveq	r5, r4
   11c84:	beq	11d40 <__assert_fail@plt+0x988>
   11c88:	mov	r1, #58	; 0x3a
   11c8c:	mov	r0, r4
   11c90:	bl	11274 <strchr@plt>
   11c94:	cmp	r0, #0
   11c98:	beq	11dac <__assert_fail@plt+0x9f4>
   11c9c:	add	r3, sp, #24
   11ca0:	mov	r0, r4
   11ca4:	str	r5, [r3, #-4]!
   11ca8:	add	r2, sp, #16
   11cac:	ldr	r1, [pc, #924]	; 12050 <__assert_fail@plt+0xc98>
   11cb0:	str	r5, [sp, #16]
   11cb4:	bl	11304 <sscanf@plt>
   11cb8:	cmp	r0, #0
   11cbc:	beq	11c58 <__assert_fail@plt+0x8a0>
   11cc0:	ldr	r3, [pc, #908]	; 12054 <__assert_fail@plt+0xc9c>
   11cc4:	ldr	r2, [sp, #16]
   11cc8:	ldrh	ip, [sp, #20]
   11ccc:	ldr	r0, [r3, #236]	; 0xec
   11cd0:	cmp	r0, #0
   11cd4:	orr	ip, ip, r2, lsl #16
   11cd8:	beq	11d1c <__assert_fail@plt+0x964>
   11cdc:	ldr	r2, [r3, #232]	; 0xe8
   11ce0:	ldr	r1, [r3, #228]	; 0xe4
   11ce4:	and	r2, r2, ip
   11ce8:	cmp	r1, r2
   11cec:	addne	r3, r3, #228	; 0xe4
   11cf0:	bne	11d0c <__assert_fail@plt+0x954>
   11cf4:	b	11c5c <__assert_fail@plt+0x8a4>
   11cf8:	ldr	r2, [r2, #16]
   11cfc:	ldr	r1, [r3, #12]!
   11d00:	and	r2, r2, ip
   11d04:	cmp	r2, r1
   11d08:	beq	11c5c <__assert_fail@plt+0x8a4>
   11d0c:	ldr	r0, [r3, #20]
   11d10:	mov	r2, r3
   11d14:	cmp	r0, #0
   11d18:	bne	11cf8 <__assert_fail@plt+0x940>
   11d1c:	ldr	r3, [pc, #820]	; 12058 <__assert_fail@plt+0xca0>
   11d20:	ldr	r3, [r3, #12]
   11d24:	cmp	r3, #0
   11d28:	beq	11d34 <__assert_fail@plt+0x97c>
   11d2c:	ldr	r0, [pc, #808]	; 1205c <__assert_fail@plt+0xca4>
   11d30:	bl	111fc <puts@plt>
   11d34:	ldr	r0, [pc, #804]	; 12060 <__assert_fail@plt+0xca8>
   11d38:	b	11c5c <__assert_fail@plt+0x8a4>
   11d3c:	mov	r5, r2
   11d40:	ldrb	r3, [r5, #1]
   11d44:	add	r2, r5, #1
   11d48:	cmp	r3, #0
   11d4c:	bne	11d3c <__assert_fail@plt+0x984>
   11d50:	ldr	r1, [pc, #780]	; 12064 <__assert_fail@plt+0xcac>
   11d54:	mov	r2, #2
   11d58:	mov	r0, r4
   11d5c:	bl	11298 <strncasecmp@plt>
   11d60:	subs	r1, r0, #0
   11d64:	bne	11d7c <__assert_fail@plt+0x9c4>
   11d68:	ldrb	r3, [r4, #2]
   11d6c:	sub	r2, r3, #48	; 0x30
   11d70:	cmp	r3, #32
   11d74:	cmpne	r2, #9
   11d78:	bls	11f68 <__assert_fail@plt+0xbb0>
   11d7c:	mov	r2, #2
   11d80:	sub	r0, r5, #1
   11d84:	ldr	r1, [pc, #732]	; 12068 <__assert_fail@plt+0xcb0>
   11d88:	bl	11298 <strncasecmp@plt>
   11d8c:	ldr	r2, [pc, #688]	; 12044 <__assert_fail@plt+0xc8c>
   11d90:	ldr	r3, [pc, #724]	; 1206c <__assert_fail@plt+0xcb4>
   11d94:	cmp	r0, #0
   11d98:	movne	r0, r2
   11d9c:	moveq	r0, r3
   11da0:	b	11c5c <__assert_fail@plt+0x8a4>
   11da4:	ldr	r0, [pc, #668]	; 12048 <__assert_fail@plt+0xc90>
   11da8:	bx	lr
   11dac:	add	r2, sp, #20
   11db0:	add	r3, sp, #16
   11db4:	str	r2, [sp, #4]
   11db8:	str	r3, [sp]
   11dbc:	add	r2, sp, #8
   11dc0:	add	r3, sp, #12
   11dc4:	ldr	r1, [pc, #676]	; 12070 <__assert_fail@plt+0xcb8>
   11dc8:	mov	r0, r4
   11dcc:	bl	11304 <sscanf@plt>
   11dd0:	cmp	r0, #4
   11dd4:	beq	11ed4 <__assert_fail@plt+0xb1c>
   11dd8:	ldr	r7, [pc, #660]	; 12074 <__assert_fail@plt+0xcbc>
   11ddc:	ldr	sl, [r7, #3120]	; 0xc30
   11de0:	cmp	sl, #0
   11de4:	beq	11e98 <__assert_fail@plt+0xae0>
   11de8:	ldrb	r9, [r4]
   11dec:	mov	fp, #0
   11df0:	add	r8, r7, #3120	; 0xc30
   11df4:	cmp	r9, #0
   11df8:	mov	r3, r4
   11dfc:	beq	11e0c <__assert_fail@plt+0xa54>
   11e00:	ldrb	r2, [r3, #1]!
   11e04:	cmp	r2, #0
   11e08:	bne	11e00 <__assert_fail@plt+0xa48>
   11e0c:	ldrb	r2, [sl]
   11e10:	sub	r6, r3, #1
   11e14:	mov	r5, sl
   11e18:	cmp	r2, #0
   11e1c:	beq	11e2c <__assert_fail@plt+0xa74>
   11e20:	ldrb	r3, [r5, #1]!
   11e24:	cmp	r3, #0
   11e28:	bne	11e20 <__assert_fail@plt+0xa68>
   11e2c:	sub	r5, r5, #1
   11e30:	cmp	r6, r4
   11e34:	cmpcs	r5, sl
   11e38:	bcc	11e88 <__assert_fail@plt+0xad0>
   11e3c:	bl	1122c <__ctype_tolower_loc@plt>
   11e40:	mov	r3, r6
   11e44:	ldr	r0, [r0]
   11e48:	b	11e74 <__assert_fail@plt+0xabc>
   11e4c:	cmp	sl, r5
   11e50:	sub	r5, r5, #1
   11e54:	beq	11ec8 <__assert_fail@plt+0xb10>
   11e58:	cmp	r4, r3
   11e5c:	movhi	r2, #0
   11e60:	movls	r2, #1
   11e64:	cmp	r5, sl
   11e68:	movcc	r2, #0
   11e6c:	cmp	r2, #0
   11e70:	beq	11e88 <__assert_fail@plt+0xad0>
   11e74:	ldrb	r1, [r3], #-1
   11e78:	ldrb	r2, [r5]
   11e7c:	ldr	r1, [r0, r1, lsl #2]
   11e80:	cmp	r1, r2
   11e84:	beq	11e4c <__assert_fail@plt+0xa94>
   11e88:	add	fp, fp, #2
   11e8c:	ldr	sl, [r8, fp, lsl #2]
   11e90:	cmp	sl, #0
   11e94:	bne	11df4 <__assert_fail@plt+0xa3c>
   11e98:	mov	r1, #46	; 0x2e
   11e9c:	mov	r0, r4
   11ea0:	bl	11274 <strchr@plt>
   11ea4:	cmp	r0, #0
   11ea8:	beq	11fd0 <__assert_fail@plt+0xc18>
   11eac:	ldr	r3, [pc, #420]	; 12058 <__assert_fail@plt+0xca0>
   11eb0:	ldr	r3, [r3, #12]
   11eb4:	cmp	r3, #0
   11eb8:	beq	11c58 <__assert_fail@plt+0x8a0>
   11ebc:	ldr	r0, [pc, #436]	; 12078 <__assert_fail@plt+0xcc0>
   11ec0:	bl	111fc <puts@plt>
   11ec4:	b	11c58 <__assert_fail@plt+0x8a0>
   11ec8:	add	r7, r7, fp, lsl #2
   11ecc:	ldr	r0, [r7, #3124]	; 0xc34
   11ed0:	b	11c5c <__assert_fail@plt+0x8a4>
   11ed4:	ldr	r1, [sp, #12]
   11ed8:	ldr	r3, [sp, #8]
   11edc:	ldr	r2, [sp, #16]
   11ee0:	lsl	r1, r1, #16
   11ee4:	add	r1, r1, r3, lsl #24
   11ee8:	ldr	r3, [sp, #20]
   11eec:	add	r1, r1, r2, lsl #8
   11ef0:	adds	r1, r1, r3
   11ef4:	beq	11dd8 <__assert_fail@plt+0xa20>
   11ef8:	ldr	r3, [pc, #340]	; 12054 <__assert_fail@plt+0xc9c>
   11efc:	ldr	r0, [r3, #524]	; 0x20c
   11f00:	cmp	r0, #0
   11f04:	beq	11f48 <__assert_fail@plt+0xb90>
   11f08:	ldr	r2, [r3, #520]	; 0x208
   11f0c:	ldr	ip, [r3, #516]	; 0x204
   11f10:	and	r2, r2, r1
   11f14:	cmp	r2, ip
   11f18:	addne	r3, r3, #516	; 0x204
   11f1c:	bne	11f38 <__assert_fail@plt+0xb80>
   11f20:	b	11c5c <__assert_fail@plt+0x8a4>
   11f24:	ldr	r2, [r2, #16]
   11f28:	ldr	ip, [r3, #12]!
   11f2c:	and	r2, r2, r1
   11f30:	cmp	r2, ip
   11f34:	beq	11c5c <__assert_fail@plt+0x8a4>
   11f38:	ldr	r0, [r3, #20]
   11f3c:	mov	r2, r3
   11f40:	cmp	r0, #0
   11f44:	bne	11f24 <__assert_fail@plt+0xb6c>
   11f48:	ldr	r3, [pc, #264]	; 12058 <__assert_fail@plt+0xca0>
   11f4c:	ldr	r3, [r3, #12]
   11f50:	cmp	r3, #0
   11f54:	beq	11d34 <__assert_fail@plt+0x97c>
   11f58:	ldr	r0, [pc, #284]	; 1207c <__assert_fail@plt+0xcc4>
   11f5c:	bl	111fc <puts@plt>
   11f60:	ldr	r0, [pc, #248]	; 12060 <__assert_fail@plt+0xca8>
   11f64:	b	11c5c <__assert_fail@plt+0x8a4>
   11f68:	add	r0, r4, #2
   11f6c:	mov	r2, #10
   11f70:	bl	11100 <strtol@plt>
   11f74:	ldr	r3, [pc, #260]	; 12080 <__assert_fail@plt+0xcc8>
   11f78:	cmp	r0, r3
   11f7c:	mov	r4, r0
   11f80:	ble	11f8c <__assert_fail@plt+0xbd4>
   11f84:	ldr	r0, [pc, #248]	; 12084 <__assert_fail@plt+0xccc>
   11f88:	bl	111fc <puts@plt>
   11f8c:	ldr	r3, [pc, #192]	; 12054 <__assert_fail@plt+0xc9c>
   11f90:	ldr	r0, [r3, #8]
   11f94:	cmp	r0, #0
   11f98:	beq	11d34 <__assert_fail@plt+0x97c>
   11f9c:	add	r3, r3, #12
   11fa0:	b	11fb4 <__assert_fail@plt+0xbfc>
   11fa4:	add	r3, r3, #8
   11fa8:	ldr	r0, [r3, #-4]
   11fac:	cmp	r0, #0
   11fb0:	beq	11d34 <__assert_fail@plt+0x97c>
   11fb4:	ldrh	r2, [r3, #-8]
   11fb8:	cmp	r4, r2
   11fbc:	blt	11fa4 <__assert_fail@plt+0xbec>
   11fc0:	ldrh	r2, [r3, #-6]
   11fc4:	cmp	r4, r2
   11fc8:	bgt	11fa4 <__assert_fail@plt+0xbec>
   11fcc:	b	11c5c <__assert_fail@plt+0x8a4>
   11fd0:	ldr	r6, [r7, #3048]	; 0xbe8
   11fd4:	cmp	r6, #0
   11fd8:	beq	12024 <__assert_fail@plt+0xc6c>
   11fdc:	ldr	r8, [pc, #164]	; 12088 <__assert_fail@plt+0xcd0>
   11fe0:	mov	r5, r0
   11fe4:	b	11ff8 <__assert_fail@plt+0xc40>
   11fe8:	add	r5, r5, #2
   11fec:	ldr	r6, [r8, r5, lsl #2]
   11ff0:	cmp	r6, #0
   11ff4:	beq	12024 <__assert_fail@plt+0xc6c>
   11ff8:	mov	r0, r6
   11ffc:	bl	11268 <strlen@plt>
   12000:	mov	r1, r6
   12004:	mov	r2, r0
   12008:	mov	r0, r4
   1200c:	bl	11298 <strncasecmp@plt>
   12010:	cmp	r0, #0
   12014:	bne	11fe8 <__assert_fail@plt+0xc30>
   12018:	add	r5, r7, r5, lsl #2
   1201c:	ldr	r0, [r5, #3052]	; 0xbec
   12020:	b	11c5c <__assert_fail@plt+0x8a4>
   12024:	ldr	r3, [pc, #44]	; 12058 <__assert_fail@plt+0xca0>
   12028:	ldr	r3, [r3, #12]
   1202c:	cmp	r3, #0
   12030:	beq	11d34 <__assert_fail@plt+0x97c>
   12034:	ldr	r0, [pc, #80]	; 1208c <__assert_fail@plt+0xcd4>
   12038:	bl	111fc <puts@plt>
   1203c:	ldr	r0, [pc, #28]	; 12060 <__assert_fail@plt+0xca8>
   12040:	b	11c5c <__assert_fail@plt+0x8a4>
   12044:	andeq	sp, r1, ip, ror r2
   12048:	andeq	ip, r1, r4, asr #27
   1204c:	andeq	ip, r1, r4, ror #27
   12050:	andeq	ip, r1, r0, lsr #28
   12054:	andeq	r0, r3, ip, lsl r1
   12058:	andeq	r3, r3, r4, asr #17
   1205c:	andeq	ip, r1, r8, lsr #28
   12060:			; <UNDEFINED> instruction: 0x0001cdb4
   12064:	andeq	ip, r1, r8, ror #27
   12068:	andeq	ip, r1, ip, lsl lr
   1206c:	ldrdeq	ip, [r1], -r4
   12070:	andeq	ip, r1, r4, lsl #29
   12074:	andeq	r2, r3, r4, lsl r1
   12078:	andeq	ip, r1, ip, lsr #30
   1207c:	muleq	r1, r0, lr
   12080:	andeq	r1, r6, pc, asr #7
   12084:	andeq	ip, r1, ip, ror #27
   12088:	strdeq	r2, [r3], -ip
   1208c:	andeq	ip, r1, r8, ror #29
   12090:	ldr	r3, [pc, #92]	; 120f4 <__assert_fail@plt+0xd3c>
   12094:	push	{r4, r5, r6, lr}
   12098:	cmp	r0, r3
   1209c:	mov	r5, r0
   120a0:	mov	r4, r1
   120a4:	bgt	120e8 <__assert_fail@plt+0xd30>
   120a8:	ldr	r0, [r4, #4]
   120ac:	cmp	r0, #0
   120b0:	beq	120e0 <__assert_fail@plt+0xd28>
   120b4:	add	r1, r4, #8
   120b8:	ldrh	r3, [r1, #-8]
   120bc:	cmp	r5, r3
   120c0:	blt	120d0 <__assert_fail@plt+0xd18>
   120c4:	ldrh	r3, [r1, #-6]
   120c8:	cmp	r5, r3
   120cc:	pople	{r4, r5, r6, pc}
   120d0:	add	r1, r1, #8
   120d4:	ldr	r0, [r1, #-4]
   120d8:	cmp	r0, #0
   120dc:	bne	120b8 <__assert_fail@plt+0xd00>
   120e0:	ldr	r0, [pc, #16]	; 120f8 <__assert_fail@plt+0xd40>
   120e4:	pop	{r4, r5, r6, pc}
   120e8:	ldr	r0, [pc, #12]	; 120fc <__assert_fail@plt+0xd44>
   120ec:	bl	111fc <puts@plt>
   120f0:	b	120a8 <__assert_fail@plt+0xcf0>
   120f4:	andeq	r1, r6, pc, asr #7
   120f8:			; <UNDEFINED> instruction: 0x0001cdb4
   120fc:	andeq	ip, r1, ip, ror #27
   12100:	push	{r4, r5, r6, r7, lr}
   12104:	sub	sp, sp, #12
   12108:	mov	r5, r0
   1210c:	mov	r6, r1
   12110:	mov	r0, r1
   12114:	add	r1, sp, #4
   12118:	bl	110e8 <inet_aton@plt>
   1211c:	ldr	r4, [r5]
   12120:	cmp	r4, #0
   12124:	movne	r7, r0
   12128:	bne	1213c <__assert_fail@plt+0xd84>
   1212c:	b	121ac <__assert_fail@plt+0xdf4>
   12130:	ldr	r4, [r5, #4]!
   12134:	cmp	r4, #0
   12138:	beq	121ac <__assert_fail@plt+0xdf4>
   1213c:	mov	r1, r6
   12140:	mov	r0, r4
   12144:	bl	110f4 <strcmp@plt>
   12148:	cmp	r0, #0
   1214c:	beq	121a0 <__assert_fail@plt+0xde8>
   12150:	cmp	r7, #0
   12154:	beq	12130 <__assert_fail@plt+0xd78>
   12158:	mov	r0, r4
   1215c:	bl	11370 <gethostbyname@plt>
   12160:	cmp	r0, #0
   12164:	beq	12130 <__assert_fail@plt+0xd78>
   12168:	ldr	r2, [r0, #16]
   1216c:	ldr	r3, [r2]
   12170:	cmp	r3, #0
   12174:	beq	12130 <__assert_fail@plt+0xd78>
   12178:	ldr	r3, [r3]
   1217c:	ldr	r1, [sp, #4]
   12180:	cmp	r3, r1
   12184:	beq	121a0 <__assert_fail@plt+0xde8>
   12188:	ldr	r3, [r2, #4]!
   1218c:	cmp	r3, #0
   12190:	beq	12130 <__assert_fail@plt+0xd78>
   12194:	ldr	r3, [r3]
   12198:	cmp	r3, r1
   1219c:	bne	12188 <__assert_fail@plt+0xdd0>
   121a0:	mov	r0, #1
   121a4:	add	sp, sp, #12
   121a8:	pop	{r4, r5, r6, r7, pc}
   121ac:	mov	r0, #0
   121b0:	add	sp, sp, #12
   121b4:	pop	{r4, r5, r6, r7, pc}
   121b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121bc:	mov	r4, r0
   121c0:	sub	sp, sp, #12
   121c4:	mov	r0, r1
   121c8:	mov	r9, r2
   121cc:	mov	r8, r1
   121d0:	bl	11268 <strlen@plt>
   121d4:	ldr	sl, [pc, #772]	; 124e0 <__assert_fail@plt+0x1128>
   121d8:	mov	r5, r0
   121dc:	mov	r0, r9
   121e0:	bl	11268 <strlen@plt>
   121e4:	add	r0, r5, r0
   121e8:	add	r0, r0, #13
   121ec:	bl	15c10 <_obstack_memory_used@@Base+0xe54>
   121f0:	mov	r3, #0
   121f4:	add	r1, sp, #4
   121f8:	mov	r6, r0
   121fc:	mov	r0, r4
   12200:	strb	r3, [r6]
   12204:	bl	110e8 <inet_aton@plt>
   12208:	ldr	fp, [sl, #-3072]	; 0xfffff400
   1220c:	cmp	fp, #0
   12210:	beq	12388 <__assert_fail@plt+0xfd0>
   12214:	mov	r7, r0
   12218:	sub	r5, sl, #3072	; 0xc00
   1221c:	b	1222c <__assert_fail@plt+0xe74>
   12220:	ldr	fp, [r5, #4]!
   12224:	cmp	fp, #0
   12228:	beq	12388 <__assert_fail@plt+0xfd0>
   1222c:	mov	r1, r4
   12230:	mov	r0, fp
   12234:	bl	110f4 <strcmp@plt>
   12238:	cmp	r0, #0
   1223c:	beq	12290 <__assert_fail@plt+0xed8>
   12240:	cmp	r7, #0
   12244:	beq	12220 <__assert_fail@plt+0xe68>
   12248:	mov	r0, fp
   1224c:	bl	11370 <gethostbyname@plt>
   12250:	cmp	r0, #0
   12254:	beq	12220 <__assert_fail@plt+0xe68>
   12258:	ldr	r2, [r0, #16]
   1225c:	ldr	r3, [r2]
   12260:	cmp	r3, #0
   12264:	beq	12220 <__assert_fail@plt+0xe68>
   12268:	ldr	r3, [r3]
   1226c:	ldr	r1, [sp, #4]
   12270:	cmp	r1, r3
   12274:	beq	12290 <__assert_fail@plt+0xed8>
   12278:	ldr	r3, [r2, #4]!
   1227c:	cmp	r3, #0
   12280:	beq	12220 <__assert_fail@plt+0xe68>
   12284:	ldr	r3, [r3]
   12288:	cmp	r3, r1
   1228c:	bne	12278 <__assert_fail@plt+0xec0>
   12290:	mov	r0, r6
   12294:	bl	11268 <strlen@plt>
   12298:	ldr	r3, [pc, #580]	; 124e4 <__assert_fail@plt+0x112c>
   1229c:	ldrb	r2, [r8]
   122a0:	cmp	r2, #0
   122a4:	mov	ip, r0
   122a8:	ldm	r3!, {r0, r1}
   122ac:	add	r2, r6, ip
   122b0:	ldrb	r3, [r3]
   122b4:	str	r0, [r6, ip]
   122b8:	str	r1, [r2, #4]
   122bc:	strb	r3, [r2, #8]
   122c0:	beq	12358 <__assert_fail@plt+0xfa0>
   122c4:	mov	r5, #1
   122c8:	mov	r1, r8
   122cc:	mov	r0, r6
   122d0:	bl	111cc <strcat@plt>
   122d4:	cmp	r5, #0
   122d8:	bne	12358 <__assert_fail@plt+0xfa0>
   122dc:	ldr	r1, [pc, #516]	; 124e8 <__assert_fail@plt+0x1130>
   122e0:	mov	r0, r4
   122e4:	bl	110f4 <strcmp@plt>
   122e8:	cmp	r0, #0
   122ec:	bne	12370 <__assert_fail@plt+0xfb8>
   122f0:	mov	r2, #2
   122f4:	ldr	r1, [pc, #496]	; 124ec <__assert_fail@plt+0x1134>
   122f8:	mov	r0, r9
   122fc:	bl	11298 <strncasecmp@plt>
   12300:	cmp	r0, #0
   12304:	beq	1244c <__assert_fail@plt+0x1094>
   12308:	ldr	r1, [pc, #480]	; 124f0 <__assert_fail@plt+0x1138>
   1230c:	mov	r0, r4
   12310:	bl	110f4 <strcmp@plt>
   12314:	cmp	r0, #0
   12318:	beq	124b0 <__assert_fail@plt+0x10f8>
   1231c:	ldr	r1, [pc, #464]	; 124f4 <__assert_fail@plt+0x113c>
   12320:	mov	r0, r4
   12324:	bl	110f4 <strcmp@plt>
   12328:	cmp	r0, #0
   1232c:	bne	12344 <__assert_fail@plt+0xf8c>
   12330:	mov	r1, #32
   12334:	mov	r0, r9
   12338:	bl	11274 <strchr@plt>
   1233c:	cmp	r0, #0
   12340:	beq	124cc <__assert_fail@plt+0x1114>
   12344:	mov	r0, r4
   12348:	ldr	r1, [pc, #424]	; 124f8 <__assert_fail@plt+0x1140>
   1234c:	bl	110f4 <strcmp@plt>
   12350:	cmp	r0, #0
   12354:	beq	12470 <__assert_fail@plt+0x10b8>
   12358:	mov	r1, r9
   1235c:	mov	r0, r6
   12360:	bl	111cc <strcat@plt>
   12364:	mov	r0, r6
   12368:	add	sp, sp, #12
   1236c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12370:	ldr	r1, [pc, #388]	; 124fc <__assert_fail@plt+0x1144>
   12374:	mov	r0, r4
   12378:	bl	110f4 <strcmp@plt>
   1237c:	cmp	r0, #0
   12380:	bne	12308 <__assert_fail@plt+0xf50>
   12384:	b	122f0 <__assert_fail@plt+0xf38>
   12388:	add	r1, sp, #4
   1238c:	mov	r0, r4
   12390:	bl	110e8 <inet_aton@plt>
   12394:	ldr	sl, [sl, #-3012]	; 0xfffff43c
   12398:	cmp	sl, #0
   1239c:	ldrne	r7, [pc, #348]	; 12500 <__assert_fail@plt+0x1148>
   123a0:	mov	r5, r0
   123a4:	bne	123b8 <__assert_fail@plt+0x1000>
   123a8:	b	12420 <__assert_fail@plt+0x1068>
   123ac:	ldr	sl, [r7, #4]!
   123b0:	cmp	sl, #0
   123b4:	beq	12420 <__assert_fail@plt+0x1068>
   123b8:	mov	r1, r4
   123bc:	mov	r0, sl
   123c0:	bl	110f4 <strcmp@plt>
   123c4:	cmp	r0, #0
   123c8:	beq	12290 <__assert_fail@plt+0xed8>
   123cc:	cmp	r5, #0
   123d0:	beq	123ac <__assert_fail@plt+0xff4>
   123d4:	mov	r0, sl
   123d8:	bl	11370 <gethostbyname@plt>
   123dc:	cmp	r0, #0
   123e0:	beq	123ac <__assert_fail@plt+0xff4>
   123e4:	ldr	r2, [r0, #16]
   123e8:	ldr	r3, [r2]
   123ec:	cmp	r3, #0
   123f0:	beq	123ac <__assert_fail@plt+0xff4>
   123f4:	ldr	r3, [r3]
   123f8:	ldr	r1, [sp, #4]
   123fc:	cmp	r3, r1
   12400:	beq	12290 <__assert_fail@plt+0xed8>
   12404:	ldr	r3, [r2, #4]!
   12408:	cmp	r3, #0
   1240c:	beq	123ac <__assert_fail@plt+0xff4>
   12410:	ldr	r3, [r3]
   12414:	cmp	r3, r1
   12418:	bne	12404 <__assert_fail@plt+0x104c>
   1241c:	b	12290 <__assert_fail@plt+0xed8>
   12420:	ldrb	r3, [r8]
   12424:	cmp	r3, #0
   12428:	beq	122dc <__assert_fail@plt+0xf24>
   1242c:	ldr	r1, [pc, #188]	; 124f0 <__assert_fail@plt+0x1138>
   12430:	mov	r0, r4
   12434:	bl	110f4 <strcmp@plt>
   12438:	subs	r5, r0, #0
   1243c:	beq	122c8 <__assert_fail@plt+0xf10>
   12440:	ldr	r0, [pc, #188]	; 12504 <__assert_fail@plt+0x114c>
   12444:	bl	111fc <puts@plt>
   12448:	b	122dc <__assert_fail@plt+0xf24>
   1244c:	ldrb	r3, [r9, #2]
   12450:	sub	r3, r3, #48	; 0x30
   12454:	cmp	r3, #9
   12458:	bhi	12308 <__assert_fail@plt+0xf50>
   1245c:	add	r2, r9, #2
   12460:	ldr	r1, [pc, #160]	; 12508 <__assert_fail@plt+0x1150>
   12464:	mov	r0, r6
   12468:	bl	11310 <sprintf@plt>
   1246c:	b	12364 <__assert_fail@plt+0xfac>
   12470:	ldr	r0, [pc, #148]	; 1250c <__assert_fail@plt+0x1154>
   12474:	bl	111f0 <getenv@plt>
   12478:	cmp	r0, #0
   1247c:	beq	12494 <__assert_fail@plt+0x10dc>
   12480:	mov	r2, #2
   12484:	ldr	r1, [pc, #132]	; 12510 <__assert_fail@plt+0x1158>
   12488:	bl	11388 <strncmp@plt>
   1248c:	cmp	r0, #0
   12490:	beq	12358 <__assert_fail@plt+0xfa0>
   12494:	mov	r2, r9
   12498:	ldr	r1, [pc, #116]	; 12514 <__assert_fail@plt+0x115c>
   1249c:	mov	r0, r6
   124a0:	bl	11310 <sprintf@plt>
   124a4:	mov	r0, r6
   124a8:	add	sp, sp, #12
   124ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124b0:	mov	r2, r9
   124b4:	ldr	r1, [pc, #92]	; 12518 <__assert_fail@plt+0x1160>
   124b8:	mov	r0, r6
   124bc:	bl	11310 <sprintf@plt>
   124c0:	mov	r0, r6
   124c4:	add	sp, sp, #12
   124c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124cc:	mov	r2, r9
   124d0:	ldr	r1, [pc, #68]	; 1251c <__assert_fail@plt+0x1164>
   124d4:	mov	r0, r6
   124d8:	bl	11310 <sprintf@plt>
   124dc:	b	12364 <__assert_fail@plt+0xfac>
   124e0:	andeq	r4, r3, ip, lsl #2
   124e4:	andeq	sp, r1, r4, lsl r0
   124e8:			; <UNDEFINED> instruction: 0x0001cdb4
   124ec:	andeq	ip, r1, r4, asr #31
   124f0:	andeq	ip, r1, r8, ror #30
   124f4:	andeq	ip, r1, r0, ror #31
   124f8:	ldrdeq	ip, [r1], -r4
   124fc:			; <UNDEFINED> instruction: 0x0001cfb4
   12500:	andeq	r3, r3, r8, asr #10
   12504:	andeq	ip, r1, ip, ror pc
   12508:	andeq	ip, r1, r8, asr #31
   1250c:	andeq	sp, r1, r0
   12510:	andeq	sp, r1, r8
   12514:	andeq	sp, r1, ip
   12518:	ldrdeq	ip, [r1], -r0
   1251c:	strdeq	ip, [r1], -r4
   12520:	b	113a0 <close@plt>
   12524:	push	{r4, r5, r6, r7, r8, lr}
   12528:	ldrb	r3, [r0]
   1252c:	cmp	r3, #0
   12530:	mov	r3, r0
   12534:	beq	12544 <__assert_fail@plt+0x118c>
   12538:	ldrb	r2, [r3, #1]!
   1253c:	cmp	r2, #0
   12540:	bne	12538 <__assert_fail@plt+0x1180>
   12544:	ldrb	r2, [r1]
   12548:	sub	r5, r3, #1
   1254c:	mov	r4, r1
   12550:	cmp	r2, #0
   12554:	beq	12564 <__assert_fail@plt+0x11ac>
   12558:	ldrb	r3, [r4, #1]!
   1255c:	cmp	r3, #0
   12560:	bne	12558 <__assert_fail@plt+0x11a0>
   12564:	sub	r4, r4, #1
   12568:	cmp	r1, r4
   1256c:	cmpls	r0, r5
   12570:	bhi	125c0 <__assert_fail@plt+0x1208>
   12574:	mov	r6, r1
   12578:	mov	r7, r0
   1257c:	bl	1122c <__ctype_tolower_loc@plt>
   12580:	mov	r3, r5
   12584:	ldr	ip, [r0]
   12588:	b	125ac <__assert_fail@plt+0x11f4>
   1258c:	cmp	r6, r4
   12590:	sub	r4, r4, #1
   12594:	beq	125c8 <__assert_fail@plt+0x1210>
   12598:	cmp	r7, r3
   1259c:	cmpls	r6, r4
   125a0:	movls	r0, #1
   125a4:	movhi	r0, #0
   125a8:	pophi	{r4, r5, r6, r7, r8, pc}
   125ac:	ldrb	r1, [r3], #-1
   125b0:	ldrb	r2, [r4]
   125b4:	ldr	r1, [ip, r1, lsl #2]
   125b8:	cmp	r1, r2
   125bc:	beq	1258c <__assert_fail@plt+0x11d4>
   125c0:	mov	r0, #0
   125c4:	pop	{r4, r5, r6, r7, r8, pc}
   125c8:	mov	r0, #1
   125cc:	pop	{r4, r5, r6, r7, r8, pc}
   125d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125d4:	ldr	r6, [r1]
   125d8:	cmp	r6, #0
   125dc:	beq	1269c <__assert_fail@plt+0x12e4>
   125e0:	ldrb	r7, [r0]
   125e4:	mov	r8, r0
   125e8:	mov	r9, r1
   125ec:	cmp	r7, #0
   125f0:	mov	r3, r8
   125f4:	beq	12604 <__assert_fail@plt+0x124c>
   125f8:	ldrb	r2, [r3, #1]!
   125fc:	cmp	r2, #0
   12600:	bne	125f8 <__assert_fail@plt+0x1240>
   12604:	ldrb	r2, [r6]
   12608:	sub	r5, r3, #1
   1260c:	mov	r4, r6
   12610:	cmp	r2, #0
   12614:	beq	12624 <__assert_fail@plt+0x126c>
   12618:	ldrb	r3, [r4, #1]!
   1261c:	cmp	r3, #0
   12620:	bne	12618 <__assert_fail@plt+0x1260>
   12624:	sub	r4, r4, #1
   12628:	cmp	r4, r6
   1262c:	movcc	r3, #0
   12630:	movcs	r3, #1
   12634:	cmp	r8, r5
   12638:	movhi	r3, #0
   1263c:	cmp	r3, #0
   12640:	beq	12690 <__assert_fail@plt+0x12d8>
   12644:	bl	1122c <__ctype_tolower_loc@plt>
   12648:	mov	r3, r5
   1264c:	ldr	r0, [r0]
   12650:	b	1267c <__assert_fail@plt+0x12c4>
   12654:	cmp	r6, r4
   12658:	sub	r4, r4, #1
   1265c:	beq	126a4 <__assert_fail@plt+0x12ec>
   12660:	cmp	r8, r3
   12664:	movhi	r2, #0
   12668:	movls	r2, #1
   1266c:	cmp	r4, r6
   12670:	movcc	r2, #0
   12674:	cmp	r2, #0
   12678:	beq	12690 <__assert_fail@plt+0x12d8>
   1267c:	ldrb	r1, [r3], #-1
   12680:	ldrb	r2, [r4]
   12684:	ldr	r1, [r0, r1, lsl #2]
   12688:	cmp	r1, r2
   1268c:	beq	12654 <__assert_fail@plt+0x129c>
   12690:	ldr	r6, [r9, #4]!
   12694:	cmp	r6, #0
   12698:	bne	125ec <__assert_fail@plt+0x1234>
   1269c:	mov	r0, r6
   126a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126a4:	mov	r0, #1
   126a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126ac:	cmp	r0, #0
   126b0:	beq	12718 <__assert_fail@plt+0x1360>
   126b4:	push	{lr}		; (str lr, [sp, #-4]!)
   126b8:	sub	sp, sp, #28
   126bc:	add	r2, sp, #20
   126c0:	add	r3, sp, #16
   126c4:	str	r2, [sp, #4]
   126c8:	str	r3, [sp]
   126cc:	add	r2, sp, #8
   126d0:	add	r3, sp, #12
   126d4:	ldr	r1, [pc, #68]	; 12720 <__assert_fail@plt+0x1368>
   126d8:	bl	11304 <sscanf@plt>
   126dc:	cmp	r0, #4
   126e0:	movne	r0, #0
   126e4:	beq	126f0 <__assert_fail@plt+0x1338>
   126e8:	add	sp, sp, #28
   126ec:	pop	{pc}		; (ldr pc, [sp], #4)
   126f0:	ldr	r0, [sp, #12]
   126f4:	ldr	r3, [sp, #8]
   126f8:	ldr	r2, [sp, #16]
   126fc:	lsl	r0, r0, #16
   12700:	add	r0, r0, r3, lsl #24
   12704:	ldr	r3, [sp, #20]
   12708:	add	r0, r0, r2, lsl #8
   1270c:	add	r0, r0, r3
   12710:	add	sp, sp, #28
   12714:	pop	{pc}		; (ldr pc, [sp], #4)
   12718:	mov	r0, #0
   1271c:	bx	lr
   12720:	andeq	ip, r1, r4, lsl #29
   12724:	ldr	r4, [pc, #72]	; 12774 <__assert_fail@plt+0x13bc>
   12728:	push	{r0, r1, r2, r3}
   1272c:	push	{lr}		; (str lr, [sp, #-4]!)
   12730:	sub	sp, sp, #12
   12734:	add	r3, sp, #20
   12738:	mov	r2, r3
   1273c:	ldr	r1, [sp, #16]
   12740:	ldr	r0, [r4]
   12744:	str	r3, [sp, #4]
   12748:	bl	112ec <vfprintf@plt>
   1274c:	bl	1128c <__errno_location@plt>
   12750:	ldr	r4, [r4]
   12754:	ldr	r0, [r0]
   12758:	bl	11220 <strerror@plt>
   1275c:	ldr	r1, [pc, #20]	; 12778 <__assert_fail@plt+0x13c0>
   12760:	mov	r2, r0
   12764:	mov	r0, r4
   12768:	bl	11280 <fprintf@plt>
   1276c:	mov	r0, #1
   12770:	bl	1125c <exit@plt>
   12774:			; <UNDEFINED> instruction: 0x000338b8
   12778:	andeq	sp, r1, r0, lsr #32
   1277c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12780:	mov	r4, r0
   12784:	sub	sp, sp, #116	; 0x74
   12788:	mov	r0, r1
   1278c:	mov	r5, r1
   12790:	bl	11268 <strlen@plt>
   12794:	add	r0, r0, #4
   12798:	bl	15c10 <_obstack_memory_used@@Base+0xe54>
   1279c:	mov	r3, #61	; 0x3d
   127a0:	mov	r1, r5
   127a4:	mov	sl, r0
   127a8:	strb	r3, [r0], #1
   127ac:	bl	111d8 <strcpy@plt>
   127b0:	mov	r0, sl
   127b4:	bl	11268 <strlen@plt>
   127b8:	ldr	r2, [pc, #356]	; 12924 <__assert_fail@plt+0x156c>
   127bc:	ldr	r1, [pc, #356]	; 12928 <__assert_fail@plt+0x1570>
   127c0:	ldrh	lr, [r2]
   127c4:	ldrb	r2, [r2, #2]
   127c8:	mov	r3, r0
   127cc:	add	ip, sl, r0
   127d0:	strh	lr, [sl, r3]
   127d4:	mov	r0, r4
   127d8:	strb	r2, [ip, #2]
   127dc:	bl	110b8 <fdopen@plt>
   127e0:	mov	r5, r0
   127e4:	mov	r0, sl
   127e8:	bl	11268 <strlen@plt>
   127ec:	mov	r1, sl
   127f0:	mov	r2, r0
   127f4:	mov	r0, r4
   127f8:	bl	112bc <write@plt>
   127fc:	cmp	r0, #0
   12800:	blt	1291c <__assert_fail@plt+0x1564>
   12804:	mov	r4, #0
   12808:	mov	fp, r4
   1280c:	mov	r6, #100	; 0x64
   12810:	mov	r9, #16
   12814:	ldr	r8, [pc, #272]	; 1292c <__assert_fail@plt+0x1574>
   12818:	ldr	r7, [pc, #272]	; 12930 <__assert_fail@plt+0x1578>
   1281c:	b	1282c <__assert_fail@plt+0x1474>
   12820:	ldr	r1, [r7]
   12824:	add	r0, sp, #12
   12828:	bl	1137c <fputs@plt>
   1282c:	mov	r2, r5
   12830:	mov	r1, r6
   12834:	add	r0, sp, #12
   12838:	bl	11148 <fgets@plt>
   1283c:	cmp	r0, #0
   12840:	beq	128e8 <__assert_fail@plt+0x1530>
   12844:	mov	r2, r9
   12848:	mov	r1, r8
   1284c:	add	r0, sp, #12
   12850:	bl	11388 <strncmp@plt>
   12854:	cmp	r0, #0
   12858:	cmpeq	r4, #0
   1285c:	bne	12820 <__assert_fail@plt+0x1468>
   12860:	ldrb	r3, [sp, #12]
   12864:	add	r0, sp, #12
   12868:	cmp	r3, #58	; 0x3a
   1286c:	beq	1287c <__assert_fail@plt+0x14c4>
   12870:	ldrb	r3, [r0, #1]!
   12874:	cmp	r3, #58	; 0x3a
   12878:	bne	12870 <__assert_fail@plt+0x14b8>
   1287c:	ldrb	r3, [r0, #1]
   12880:	add	r2, r0, #1
   12884:	cmp	r3, #32
   12888:	bne	12898 <__assert_fail@plt+0x14e0>
   1288c:	ldrb	r3, [r2, #1]!
   12890:	cmp	r3, #32
   12894:	beq	1288c <__assert_fail@plt+0x14d4>
   12898:	mov	r0, r2
   1289c:	str	r2, [sp, #4]
   128a0:	bl	11268 <strlen@plt>
   128a4:	add	r0, r0, #1
   128a8:	bl	15c10 <_obstack_memory_used@@Base+0xe54>
   128ac:	ldr	r2, [sp, #4]
   128b0:	ldrb	r3, [r2]
   128b4:	cmp	r3, #13
   128b8:	cmpne	r3, #10
   128bc:	mov	r4, r0
   128c0:	beq	1290c <__assert_fail@plt+0x1554>
   128c4:	mov	r0, r2
   128c8:	mov	r2, r4
   128cc:	strb	r3, [r2], #1
   128d0:	ldrb	r3, [r0, #1]!
   128d4:	cmp	r3, #10
   128d8:	cmpne	r3, #13
   128dc:	bne	128cc <__assert_fail@plt+0x1514>
   128e0:	strb	fp, [r2]
   128e4:	b	12820 <__assert_fail@plt+0x1468>
   128e8:	mov	r0, r5
   128ec:	bl	11154 <ferror@plt>
   128f0:	cmp	r0, #0
   128f4:	bne	12914 <__assert_fail@plt+0x155c>
   128f8:	mov	r0, sl
   128fc:	bl	148c4 <argp_parse@@Base+0xf7c>
   12900:	mov	r0, r4
   12904:	add	sp, sp, #116	; 0x74
   12908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1290c:	mov	r2, r0
   12910:	b	128e0 <__assert_fail@plt+0x1528>
   12914:	ldr	r0, [pc, #24]	; 12934 <__assert_fail@plt+0x157c>
   12918:	bl	12724 <__assert_fail@plt+0x136c>
   1291c:	ldr	r0, [pc, #20]	; 12938 <__assert_fail@plt+0x1580>
   12920:	bl	12724 <__assert_fail@plt+0x136c>
   12924:	andeq	sp, r1, r8, lsr #32
   12928:	andeq	pc, r1, r8, lsr #8
   1292c:	andeq	sp, r1, r4, lsr r0
   12930:			; <UNDEFINED> instruction: 0x000338bc
   12934:	andeq	sp, r1, r8, asr #32
   12938:	andeq	sp, r1, ip, lsr #32
   1293c:	ldr	r4, [pc, #52]	; 12978 <__assert_fail@plt+0x15c0>
   12940:	push	{r0, r1, r2, r3}
   12944:	push	{lr}		; (str lr, [sp, #-4]!)
   12948:	sub	sp, sp, #12
   1294c:	add	r3, sp, #20
   12950:	mov	r2, r3
   12954:	ldr	r1, [sp, #16]
   12958:	ldr	r0, [r4]
   1295c:	str	r3, [sp, #4]
   12960:	bl	112ec <vfprintf@plt>
   12964:	ldr	r1, [r4]
   12968:	mov	r0, #10
   1296c:	bl	112f8 <fputc@plt>
   12970:	mov	r0, #1
   12974:	bl	1125c <exit@plt>
   12978:			; <UNDEFINED> instruction: 0x000338b8
   1297c:	push	{r4, r5, r6, lr}
   12980:	sub	sp, sp, #40	; 0x28
   12984:	mov	r4, r1
   12988:	mov	r5, r0
   1298c:	mov	r2, #32
   12990:	add	r0, sp, #8
   12994:	mov	r1, #0
   12998:	bl	112b0 <memset@plt>
   1299c:	mov	r3, #1
   129a0:	cmp	r4, #0
   129a4:	str	r3, [sp, #16]
   129a8:	beq	12a28 <__assert_fail@plt+0x1670>
   129ac:	add	r6, sp, #4
   129b0:	mov	r3, r6
   129b4:	add	r2, sp, #8
   129b8:	mov	r1, r4
   129bc:	mov	r0, r5
   129c0:	bl	11358 <getaddrinfo@plt>
   129c4:	cmp	r0, #0
   129c8:	bne	12a4c <__assert_fail@plt+0x1694>
   129cc:	ldr	r5, [sp, #4]
   129d0:	cmp	r5, #0
   129d4:	beq	12a20 <__assert_fail@plt+0x1668>
   129d8:	mov	r3, r5
   129dc:	ldmib	r3, {r0, r1, r2}
   129e0:	bl	11364 <socket@plt>
   129e4:	subs	r4, r0, #0
   129e8:	blt	12a0c <__assert_fail@plt+0x1654>
   129ec:	ldr	r3, [sp, #4]
   129f0:	ldr	r2, [r3, #16]
   129f4:	ldr	r1, [r3, #20]
   129f8:	bl	113ac <connect@plt>
   129fc:	cmp	r0, #0
   12a00:	beq	12a78 <__assert_fail@plt+0x16c0>
   12a04:	mov	r0, r4
   12a08:	bl	113a0 <close@plt>
   12a0c:	ldr	r3, [sp, #4]
   12a10:	ldr	r3, [r3, #28]
   12a14:	cmp	r3, #0
   12a18:	str	r3, [sp, #4]
   12a1c:	bne	129dc <__assert_fail@plt+0x1624>
   12a20:	ldr	r0, [pc, #112]	; 12a98 <__assert_fail@plt+0x16e0>
   12a24:	bl	12724 <__assert_fail@plt+0x136c>
   12a28:	add	r6, sp, #4
   12a2c:	mov	r3, r6
   12a30:	add	r2, sp, #8
   12a34:	ldr	r1, [pc, #96]	; 12a9c <__assert_fail@plt+0x16e4>
   12a38:	mov	r0, r5
   12a3c:	bl	11358 <getaddrinfo@plt>
   12a40:	cmp	r0, #0
   12a44:	beq	129cc <__assert_fail@plt+0x1614>
   12a48:	ldr	r4, [pc, #80]	; 12aa0 <__assert_fail@plt+0x16e8>
   12a4c:	mov	r3, r6
   12a50:	add	r2, sp, #8
   12a54:	mov	r1, r4
   12a58:	mov	r0, r5
   12a5c:	bl	11358 <getaddrinfo@plt>
   12a60:	cmp	r0, #0
   12a64:	beq	129cc <__assert_fail@plt+0x1614>
   12a68:	bl	1113c <gai_strerror@plt>
   12a6c:	mov	r1, r0
   12a70:	ldr	r0, [pc, #44]	; 12aa4 <__assert_fail@plt+0x16ec>
   12a74:	bl	1293c <__assert_fail@plt+0x1584>
   12a78:	ldr	r3, [sp, #4]
   12a7c:	cmp	r3, #0
   12a80:	beq	12a20 <__assert_fail@plt+0x1668>
   12a84:	mov	r0, r5
   12a88:	bl	1134c <freeaddrinfo@plt>
   12a8c:	mov	r0, r4
   12a90:	add	sp, sp, #40	; 0x28
   12a94:	pop	{r4, r5, r6, pc}
   12a98:	andeq	sp, r1, r0, ror r0
   12a9c:	andeq	sp, r1, r8, rrx
   12aa0:	andeq	sp, r1, r0, asr r0
   12aa4:	andeq	sp, r1, r8, asr r0
   12aa8:	ldr	r3, [pc, #720]	; 12d80 <__assert_fail@plt+0x19c8>
   12aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ab0:	sub	sp, sp, #1504	; 0x5e0
   12ab4:	sub	sp, sp, #12
   12ab8:	mov	r5, r1
   12abc:	ldr	r1, [pc, #704]	; 12d84 <__assert_fail@plt+0x19cc>
   12ac0:	ldr	r4, [r3]
   12ac4:	mov	r6, r0
   12ac8:	bl	110b8 <fdopen@plt>
   12acc:	mov	r7, r0
   12ad0:	mov	r0, r5
   12ad4:	bl	11268 <strlen@plt>
   12ad8:	mov	r1, r5
   12adc:	mov	r2, r0
   12ae0:	mov	r0, r6
   12ae4:	bl	112bc <write@plt>
   12ae8:	cmp	r0, #0
   12aec:	blt	12d78 <__assert_fail@plt+0x19c0>
   12af0:	ldr	r8, [pc, #656]	; 12d88 <__assert_fail@plt+0x19d0>
   12af4:	ldr	r9, [pc, #656]	; 12d8c <__assert_fail@plt+0x19d4>
   12af8:	ldr	fp, [pc, #656]	; 12d90 <__assert_fail@plt+0x19d8>
   12afc:	ldr	sl, [pc, #656]	; 12d94 <__assert_fail@plt+0x19dc>
   12b00:	sub	r6, r8, #4
   12b04:	mov	r5, #0
   12b08:	add	r8, r8, #2976	; 0xba0
   12b0c:	mov	r2, r7
   12b10:	mov	r1, #200	; 0xc8
   12b14:	add	r0, sp, #32
   12b18:	bl	11148 <fgets@plt>
   12b1c:	cmp	r0, #0
   12b20:	beq	12d38 <__assert_fail@plt+0x1980>
   12b24:	cmp	r4, #1
   12b28:	beq	12b90 <__assert_fail@plt+0x17d8>
   12b2c:	cmp	r4, #0
   12b30:	bne	12bf8 <__assert_fail@plt+0x1840>
   12b34:	ldr	r4, [r8, #-2980]	; 0xfffff45c
   12b38:	cmp	r4, #0
   12b3c:	beq	12bf4 <__assert_fail@plt+0x183c>
   12b40:	mov	r5, #0
   12b44:	b	12b58 <__assert_fail@plt+0x17a0>
   12b48:	add	r5, r5, #2
   12b4c:	ldr	r4, [r6, r5, lsl #2]
   12b50:	cmp	r4, #0
   12b54:	beq	12bf8 <__assert_fail@plt+0x1840>
   12b58:	mov	r0, r4
   12b5c:	bl	11268 <strlen@plt>
   12b60:	mov	r1, r4
   12b64:	mov	r2, r0
   12b68:	add	r0, sp, #32
   12b6c:	bl	11388 <strncmp@plt>
   12b70:	cmp	r0, #0
   12b74:	bne	12b48 <__assert_fail@plt+0x1790>
   12b78:	mov	r2, r7
   12b7c:	mov	r1, #200	; 0xc8
   12b80:	add	r0, sp, #32
   12b84:	bl	11148 <fgets@plt>
   12b88:	cmp	r0, #0
   12b8c:	beq	12bdc <__assert_fail@plt+0x1824>
   12b90:	add	r5, r5, #1
   12b94:	mov	r4, #200	; 0xc8
   12b98:	add	r5, r8, r5, lsl #2
   12b9c:	ldr	r1, [r5, #-2980]	; 0xfffff45c
   12ba0:	mov	r0, r1
   12ba4:	str	r1, [sp, #12]
   12ba8:	bl	11268 <strlen@plt>
   12bac:	ldr	r1, [sp, #12]
   12bb0:	mov	r2, r0
   12bb4:	add	r0, sp, #32
   12bb8:	bl	11388 <strncmp@plt>
   12bbc:	mov	r2, r7
   12bc0:	cmp	r0, #0
   12bc4:	beq	12d08 <__assert_fail@plt+0x1950>
   12bc8:	mov	r1, r4
   12bcc:	add	r0, sp, #32
   12bd0:	bl	11148 <fgets@plt>
   12bd4:	cmp	r0, #0
   12bd8:	bne	12b9c <__assert_fail@plt+0x17e4>
   12bdc:	mov	r0, r7
   12be0:	bl	11154 <ferror@plt>
   12be4:	cmp	r0, #0
   12be8:	beq	12d70 <__assert_fail@plt+0x19b8>
   12bec:	ldr	r0, [pc, #420]	; 12d98 <__assert_fail@plt+0x19e0>
   12bf0:	bl	12724 <__assert_fail@plt+0x136c>
   12bf4:	mov	r5, r4
   12bf8:	mov	r2, #10
   12bfc:	mov	r1, r9
   12c00:	add	r0, sp, #32
   12c04:	bl	11388 <strncmp@plt>
   12c08:	cmp	r0, #0
   12c0c:	beq	12c74 <__assert_fail@plt+0x18bc>
   12c10:	ldrb	r2, [sp, #32]
   12c14:	cmp	r2, #13
   12c18:	bls	12c5c <__assert_fail@plt+0x18a4>
   12c1c:	add	r0, sp, #32
   12c20:	ldr	r1, [pc, #372]	; 12d9c <__assert_fail@plt+0x19e4>
   12c24:	ldrb	r3, [r0, #1]!
   12c28:	cmp	r3, #13
   12c2c:	mvn	r2, r1, lsr r3
   12c30:	movhi	r3, #1
   12c34:	andls	r3, r2, #1
   12c38:	cmp	r3, #0
   12c3c:	bne	12c24 <__assert_fail@plt+0x186c>
   12c40:	mov	r3, #0
   12c44:	strb	r3, [r0]
   12c48:	add	r2, sp, #32
   12c4c:	mov	r1, sl
   12c50:	ldr	r0, [fp]
   12c54:	bl	11280 <fprintf@plt>
   12c58:	b	12b0c <__assert_fail@plt+0x1754>
   12c5c:	ldr	r3, [pc, #312]	; 12d9c <__assert_fail@plt+0x19e4>
   12c60:	add	r0, sp, #32
   12c64:	mvn	r3, r3, lsr r2
   12c68:	tst	r3, #1
   12c6c:	beq	12c40 <__assert_fail@plt+0x1888>
   12c70:	b	12c20 <__assert_fail@plt+0x1868>
   12c74:	add	r1, sp, #488	; 0x1e8
   12c78:	add	r3, sp, #16
   12c7c:	str	r1, [sp]
   12c80:	add	r2, sp, #232	; 0xe8
   12c84:	ldr	r1, [pc, #276]	; 12da0 <__assert_fail@plt+0x19e8>
   12c88:	add	r0, sp, #32
   12c8c:	str	r3, [sp, #12]
   12c90:	bl	11304 <sscanf@plt>
   12c94:	cmp	r0, #3
   12c98:	bne	12c10 <__assert_fail@plt+0x1858>
   12c9c:	ldr	r3, [pc, #256]	; 12da4 <__assert_fail@plt+0x19ec>
   12ca0:	ldr	r3, [r3, #12]
   12ca4:	cmp	r3, #0
   12ca8:	bne	12d5c <__assert_fail@plt+0x19a4>
   12cac:	add	r0, sp, #488	; 0x1e8
   12cb0:	bl	11268 <strlen@plt>
   12cb4:	ldr	r2, [pc, #236]	; 12da8 <__assert_fail@plt+0x19f0>
   12cb8:	add	r1, sp, #488	; 0x1e8
   12cbc:	ldrh	lr, [r2]
   12cc0:	ldrb	r2, [r2, #2]
   12cc4:	add	ip, r1, r0
   12cc8:	mov	r3, r0
   12ccc:	ldr	r1, [sp, #12]
   12cd0:	str	r2, [sp, #12]
   12cd4:	add	r2, sp, #488	; 0x1e8
   12cd8:	add	r0, sp, #232	; 0xe8
   12cdc:	strh	lr, [r2, r3]
   12ce0:	ldrb	r3, [sp, #12]
   12ce4:	strb	r3, [ip, #2]
   12ce8:	bl	1297c <__assert_fail@plt+0x15c4>
   12cec:	add	r1, sp, #488	; 0x1e8
   12cf0:	str	r0, [sp, #12]
   12cf4:	bl	12aa8 <__assert_fail@plt+0x16f0>
   12cf8:	ldr	r3, [sp, #12]
   12cfc:	mov	r0, r3
   12d00:	bl	113a0 <close@plt>
   12d04:	b	12b0c <__assert_fail@plt+0x1754>
   12d08:	mov	r1, #200	; 0xc8
   12d0c:	add	r0, sp, #32
   12d10:	bl	11148 <fgets@plt>
   12d14:	cmp	r0, #0
   12d18:	bne	12b34 <__assert_fail@plt+0x177c>
   12d1c:	mov	r0, r7
   12d20:	bl	11154 <ferror@plt>
   12d24:	cmp	r0, #0
   12d28:	bne	12bec <__assert_fail@plt+0x1834>
   12d2c:	add	sp, sp, #1504	; 0x5e0
   12d30:	add	sp, sp, #12
   12d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d38:	mov	r0, r7
   12d3c:	bl	11154 <ferror@plt>
   12d40:	cmp	r0, #0
   12d44:	bne	12bec <__assert_fail@plt+0x1834>
   12d48:	cmp	r4, #1
   12d4c:	beq	12d70 <__assert_fail@plt+0x19b8>
   12d50:	add	sp, sp, #1504	; 0x5e0
   12d54:	add	sp, sp, #12
   12d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d5c:	add	r2, sp, #232	; 0xe8
   12d60:	add	r1, sp, #488	; 0x1e8
   12d64:	ldr	r0, [pc, #64]	; 12dac <__assert_fail@plt+0x19f4>
   12d68:	bl	1110c <printf@plt>
   12d6c:	b	12cac <__assert_fail@plt+0x18f4>
   12d70:	ldr	r0, [pc, #56]	; 12db0 <__assert_fail@plt+0x19f8>
   12d74:	bl	1293c <__assert_fail@plt+0x1584>
   12d78:	ldr	r0, [pc, #52]	; 12db4 <__assert_fail@plt+0x19fc>
   12d7c:	bl	12724 <__assert_fail@plt+0x136c>
   12d80:	andeq	r0, r3, ip, lsl r1
   12d84:	andeq	pc, r1, r8, lsr #8
   12d88:	andeq	r3, r3, ip, ror #10
   12d8c:	andeq	sp, r1, r8, ror r0
   12d90:			; <UNDEFINED> instruction: 0x000338bc
   12d94:	andeq	lr, r1, ip, lsr lr
   12d98:	andeq	sp, r1, r8, asr #32
   12d9c:	andeq	r2, r0, r1, lsl #8
   12da0:	andeq	sp, r1, r4, lsl #1
   12da4:	andeq	r3, r3, r4, asr #17
   12da8:	andeq	sp, r1, r8, lsr #32
   12dac:	strheq	sp, [r1], -r4
   12db0:	ldrdeq	sp, [r1], -r4
   12db4:	andeq	sp, r1, ip, lsr #32
   12db8:	ldr	r3, [pc, #24]	; 12dd8 <__assert_fail@plt+0x1a20>
   12dbc:	push	{r4, lr}
   12dc0:	mov	r4, r0
   12dc4:	ldr	r0, [r3]
   12dc8:	bl	113a0 <close@plt>
   12dcc:	mov	r1, r4
   12dd0:	ldr	r0, [pc, #4]	; 12ddc <__assert_fail@plt+0x1a24>
   12dd4:	bl	1293c <__assert_fail@plt+0x1584>
   12dd8:	andeq	r3, r3, r8, lsr r9
   12ddc:	andeq	sp, r1, r0, lsl #5
   12de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12de4:	sub	sp, sp, #36	; 0x24
   12de8:	ldr	sl, [r0]
   12dec:	str	r0, [sp, #12]
   12df0:	cmp	sl, #0
   12df4:	str	r1, [sp, #16]
   12df8:	str	r2, [sp, #20]
   12dfc:	mov	r9, r3
   12e00:	ldr	r8, [r0, #16]
   12e04:	ldr	r7, [sp, #72]	; 0x48
   12e08:	beq	12fd4 <__assert_fail@plt+0x1c1c>
   12e0c:	add	fp, sl, #24
   12e10:	str	r8, [sp, #28]
   12e14:	str	r3, [sp, #24]
   12e18:	ldr	r4, [fp, #-20]	; 0xffffffec
   12e1c:	sub	r1, fp, #24
   12e20:	cmp	r4, #0
   12e24:	bne	12e34 <__assert_fail@plt+0x1a7c>
   12e28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e2c:	cmp	r3, #0
   12e30:	beq	12fa8 <__assert_fail@plt+0x1bf0>
   12e34:	ldr	r3, [fp, #-12]
   12e38:	tst	r3, #4
   12e3c:	moveq	sl, r1
   12e40:	moveq	r5, r3
   12e44:	ldrne	r5, [sl, #12]
   12e48:	ands	r5, r5, #8
   12e4c:	bne	12f90 <__assert_fail@plt+0x1bd8>
   12e50:	tst	r3, #8
   12e54:	bne	12ed0 <__assert_fail@plt+0x1b18>
   12e58:	sub	r3, r4, #1
   12e5c:	cmp	r3, #254	; 0xfe
   12e60:	bhi	12ed0 <__assert_fail@plt+0x1b18>
   12e64:	bl	11250 <__ctype_b_loc@plt>
   12e68:	lsl	r3, r4, #1
   12e6c:	ldr	r1, [r0]
   12e70:	ldrh	r3, [r1, r3]
   12e74:	tst	r3, #16384	; 0x4000
   12e78:	beq	12ed0 <__assert_fail@plt+0x1b18>
   12e7c:	ldr	r3, [r7, #4]
   12e80:	add	r1, r3, #1
   12e84:	str	r1, [r7, #4]
   12e88:	strb	r4, [r3]
   12e8c:	ldr	r3, [sl, #8]
   12e90:	cmp	r3, #0
   12e94:	beq	12ec4 <__assert_fail@plt+0x1b0c>
   12e98:	ldr	r3, [r7, #4]
   12e9c:	mov	r2, #58	; 0x3a
   12ea0:	add	r1, r3, #1
   12ea4:	str	r1, [r7, #4]
   12ea8:	strb	r2, [r3]
   12eac:	ldr	r3, [sl, #12]
   12eb0:	tst	r3, #1
   12eb4:	ldrne	r3, [r7, #4]
   12eb8:	addne	r1, r3, #1
   12ebc:	strne	r1, [r7, #4]
   12ec0:	strbne	r2, [r3]
   12ec4:	ldr	r3, [r7, #4]
   12ec8:	mov	r2, #0
   12ecc:	strb	r2, [r3]
   12ed0:	ldr	r4, [fp, #-24]	; 0xffffffe8
   12ed4:	cmp	r4, #0
   12ed8:	beq	12f90 <__assert_fail@plt+0x1bd8>
   12edc:	ldr	r8, [r7]
   12ee0:	ldr	r6, [r8, #8]
   12ee4:	ldr	r0, [r6]
   12ee8:	cmp	r0, #0
   12eec:	beq	12f10 <__assert_fail@plt+0x1b58>
   12ef0:	mov	r9, r6
   12ef4:	mov	r1, r4
   12ef8:	bl	110f4 <strcmp@plt>
   12efc:	cmp	r0, #0
   12f00:	beq	12f98 <__assert_fail@plt+0x1be0>
   12f04:	ldr	r0, [r9, #16]!
   12f08:	cmp	r0, #0
   12f0c:	bne	12ef4 <__assert_fail@plt+0x1b3c>
   12f10:	ldr	r3, [sl, #8]
   12f14:	ldr	r1, [r7, #8]
   12f18:	cmp	r3, #0
   12f1c:	str	r4, [r1]
   12f20:	beq	12f34 <__assert_fail@plt+0x1b7c>
   12f24:	ldr	r3, [sl, #12]
   12f28:	tst	r3, #1
   12f2c:	moveq	r5, #1
   12f30:	movne	r5, #2
   12f34:	str	r5, [r1, #4]
   12f38:	ldr	ip, [fp, #-20]	; 0xffffffec
   12f3c:	mov	r3, #0
   12f40:	cmp	ip, r3
   12f44:	str	r3, [r1, #8]
   12f48:	ldr	r2, [sp, #24]
   12f4c:	ldr	r3, [r8, #48]	; 0x30
   12f50:	ldreq	ip, [sl, #4]
   12f54:	sub	r3, r2, r3
   12f58:	bic	ip, ip, #-16777216	; 0xff000000
   12f5c:	asr	r3, r3, #2
   12f60:	add	lr, r1, #16
   12f64:	rsb	r0, r3, r3, lsl #3
   12f68:	add	r0, r0, r0, lsl #6
   12f6c:	add	r0, r3, r0, lsl #3
   12f70:	rsb	r0, r0, r0, lsl #15
   12f74:	add	r3, r3, r0, lsl #3
   12f78:	add	r3, r3, #1
   12f7c:	add	r3, ip, r3, lsl #24
   12f80:	str	r3, [r1, #12]
   12f84:	mov	r3, #0
   12f88:	str	lr, [r7, #8]
   12f8c:	str	r3, [r1, #16]
   12f90:	add	fp, fp, #24
   12f94:	b	12e18 <__assert_fail@plt+0x1a60>
   12f98:	sub	r6, r9, r6
   12f9c:	cmn	r6, #15
   12fa0:	bge	12f90 <__assert_fail@plt+0x1bd8>
   12fa4:	b	12f10 <__assert_fail@plt+0x1b58>
   12fa8:	ldr	r3, [fp, #-8]
   12fac:	cmp	r3, #0
   12fb0:	bne	12e34 <__assert_fail@plt+0x1a7c>
   12fb4:	ldr	r3, [fp, #-4]
   12fb8:	cmp	r3, #0
   12fbc:	bne	12e34 <__assert_fail@plt+0x1a7c>
   12fc0:	ldr	r3, [sp, #12]
   12fc4:	ldr	r8, [sp, #28]
   12fc8:	ldr	r9, [sp, #24]
   12fcc:	ldr	r3, [r3, #4]
   12fd0:	b	12fe8 <__assert_fail@plt+0x1c30>
   12fd4:	ldr	r3, [r0, #4]
   12fd8:	cmp	r3, #0
   12fdc:	moveq	r0, r9
   12fe0:	moveq	r9, r3
   12fe4:	beq	13058 <__assert_fail@plt+0x1ca0>
   12fe8:	ldr	r2, [r7, #4]
   12fec:	ldr	r1, [sp, #12]
   12ff0:	str	r3, [r9]
   12ff4:	cmp	r8, #0
   12ff8:	stmib	r9, {r1, r2}
   12ffc:	ldr	r2, [sp, #16]
   13000:	mov	r3, #0
   13004:	str	r2, [r9, #16]
   13008:	ldr	r2, [sp, #20]
   1300c:	str	r3, [r9, #12]
   13010:	str	r2, [r9, #20]
   13014:	str	r3, [r9, #24]
   13018:	str	r3, [r9, #32]
   1301c:	str	r3, [r9, #28]
   13020:	beq	13054 <__assert_fail@plt+0x1c9c>
   13024:	ldr	r2, [r8]
   13028:	cmp	r2, r3
   1302c:	beq	130a0 <__assert_fail@plt+0x1ce8>
   13030:	add	r3, r3, #1
   13034:	ldr	r2, [r8, r3, lsl #4]
   13038:	cmp	r2, #0
   1303c:	bne	13030 <__assert_fail@plt+0x1c78>
   13040:	lsl	r3, r3, #2
   13044:	ldr	r2, [r7, #12]
   13048:	add	r3, r2, r3
   1304c:	str	r2, [r9, #28]
   13050:	str	r3, [r7, #12]
   13054:	add	r0, r9, #36	; 0x24
   13058:	cmp	r8, #0
   1305c:	beq	13098 <__assert_fail@plt+0x1ce0>
   13060:	ldr	r1, [r8]
   13064:	cmp	r1, #0
   13068:	beq	13098 <__assert_fail@plt+0x1ce0>
   1306c:	mov	r2, #0
   13070:	add	r4, r2, #1
   13074:	mov	r3, r0
   13078:	str	r7, [sp]
   1307c:	mov	r0, r1
   13080:	mov	r1, r9
   13084:	bl	12de0 <__assert_fail@plt+0x1a28>
   13088:	ldr	r1, [r8, r4, lsl #4]
   1308c:	mov	r2, r4
   13090:	cmp	r1, #0
   13094:	bne	13070 <__assert_fail@plt+0x1cb8>
   13098:	add	sp, sp, #36	; 0x24
   1309c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130a0:	mov	r3, r2
   130a4:	b	13044 <__assert_fail@plt+0x1c8c>
   130a8:	cmp	r0, #86	; 0x56
   130ac:	beq	130b8 <__assert_fail@plt+0x1d00>
   130b0:	mov	r0, #7
   130b4:	bx	lr
   130b8:	ldr	r3, [pc, #104]	; 13128 <__assert_fail@plt+0x1d70>
   130bc:	push	{r4, lr}
   130c0:	mov	r4, r2
   130c4:	ldr	r3, [r3]
   130c8:	cmp	r3, #0
   130cc:	beq	130f0 <__assert_fail@plt+0x1d38>
   130d0:	mov	r1, r2
   130d4:	ldr	r0, [r2, #48]	; 0x30
   130d8:	blx	r3
   130dc:	ldr	r0, [r4, #16]
   130e0:	ands	r0, r0, #32
   130e4:	beq	13124 <__assert_fail@plt+0x1d6c>
   130e8:	mov	r0, #0
   130ec:	pop	{r4, pc}
   130f0:	ldr	r3, [pc, #52]	; 1312c <__assert_fail@plt+0x1d74>
   130f4:	ldr	r2, [r3]
   130f8:	cmp	r2, #0
   130fc:	beq	13110 <__assert_fail@plt+0x1d58>
   13100:	ldr	r1, [pc, #40]	; 13130 <__assert_fail@plt+0x1d78>
   13104:	ldr	r0, [r4, #48]	; 0x30
   13108:	bl	11280 <fprintf@plt>
   1310c:	b	130dc <__assert_fail@plt+0x1d24>
   13110:	ldr	r2, [pc, #28]	; 13134 <__assert_fail@plt+0x1d7c>
   13114:	ldr	r1, [pc, #28]	; 13138 <__assert_fail@plt+0x1d80>
   13118:	mov	r0, r4
   1311c:	bl	1a698 <argp_error@@Base>
   13120:	b	130dc <__assert_fail@plt+0x1d24>
   13124:	bl	1125c <exit@plt>
   13128:	ldrdeq	r3, [r3], -r8
   1312c:	andeq	r3, r3, r0, asr #18
   13130:	andeq	lr, r1, ip, lsr lr
   13134:	andeq	lr, r1, r8, lsl #25
   13138:	andeq	lr, r1, ip, lsr #25
   1313c:	cmn	r0, #3
   13140:	push	{r4, r5, lr}
   13144:	mov	r4, r2
   13148:	sub	sp, sp, #12
   1314c:	beq	13230 <__assert_fail@plt+0x1e78>
   13150:	ble	131c0 <__assert_fail@plt+0x1e08>
   13154:	cmn	r0, #2
   13158:	beq	13180 <__assert_fail@plt+0x1dc8>
   1315c:	cmp	r0, #63	; 0x3f
   13160:	bne	13224 <__assert_fail@plt+0x1e6c>
   13164:	mov	r0, r4
   13168:	ldr	r2, [pc, #236]	; 1325c <__assert_fail@plt+0x1ea4>
   1316c:	ldr	r1, [r4, #48]	; 0x30
   13170:	bl	1a5e8 <argp_state_help@@Base>
   13174:	mov	r0, #0
   13178:	add	sp, sp, #12
   1317c:	pop	{r4, r5, pc}
   13180:	ldr	r3, [pc, #216]	; 13260 <__assert_fail@plt+0x1ea8>
   13184:	mov	r0, r1
   13188:	str	r1, [sp, #4]
   1318c:	str	r1, [r3]
   13190:	bl	14818 <argp_parse@@Base+0xed0>
   13194:	ldr	r3, [r4, #16]
   13198:	ldr	r2, [pc, #196]	; 13264 <__assert_fail@plt+0x1eac>
   1319c:	and	r3, r3, #3
   131a0:	cmp	r3, #1
   131a4:	ldr	r1, [sp, #4]
   131a8:	str	r0, [r4, #40]	; 0x28
   131ac:	str	r0, [r2]
   131b0:	beq	1324c <__assert_fail@plt+0x1e94>
   131b4:	mov	r0, #0
   131b8:	add	sp, sp, #12
   131bc:	pop	{r4, r5, pc}
   131c0:	cmn	r0, #4
   131c4:	bne	13224 <__assert_fail@plt+0x1e6c>
   131c8:	cmp	r1, #0
   131cc:	ldr	r0, [pc, #148]	; 13268 <__assert_fail@plt+0x1eb0>
   131d0:	mov	r2, #10
   131d4:	movne	r0, r1
   131d8:	mov	r1, #0
   131dc:	bl	11100 <strtol@plt>
   131e0:	ldr	r4, [pc, #132]	; 1326c <__assert_fail@plt+0x1eb4>
   131e4:	str	r0, [r4]
   131e8:	ldr	r3, [r4]
   131ec:	cmp	r3, #0
   131f0:	sub	r3, r3, #1
   131f4:	str	r3, [r4]
   131f8:	ble	131b4 <__assert_fail@plt+0x1dfc>
   131fc:	mov	r5, #1
   13200:	mov	r0, r5
   13204:	bl	11190 <sleep@plt>
   13208:	ldr	r3, [r4]
   1320c:	cmp	r3, #0
   13210:	sub	r3, r3, #1
   13214:	str	r3, [r4]
   13218:	bgt	13200 <__assert_fail@plt+0x1e48>
   1321c:	mov	r0, #0
   13220:	b	131b8 <__assert_fail@plt+0x1e00>
   13224:	mov	r0, #7
   13228:	add	sp, sp, #12
   1322c:	pop	{r4, r5, pc}
   13230:	mov	r0, r4
   13234:	ldr	r2, [pc, #52]	; 13270 <__assert_fail@plt+0x1eb8>
   13238:	ldr	r1, [r4, #48]	; 0x30
   1323c:	bl	1a5e8 <argp_state_help@@Base>
   13240:	mov	r0, #0
   13244:	add	sp, sp, #12
   13248:	pop	{r4, r5, pc}
   1324c:	ldr	r3, [r4, #8]
   13250:	mov	r0, #0
   13254:	str	r1, [r3]
   13258:	b	13178 <__assert_fail@plt+0x1dc0>
   1325c:	andeq	r0, r0, sl, ror r2
   13260:			; <UNDEFINED> instruction: 0x000338b4
   13264:			; <UNDEFINED> instruction: 0x000338b0
   13268:			; <UNDEFINED> instruction: 0x0001ecb0
   1326c:	ldrdeq	r3, [r3], -r4
   13270:	andeq	r0, r0, r1, lsl #4
   13274:	ldr	r3, [r0]
   13278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1327c:	cmp	r3, #0
   13280:	sub	sp, sp, #12
   13284:	ldr	lr, [r0, #16]
   13288:	beq	132c0 <__assert_fail@plt+0x1f08>
   1328c:	ldr	r0, [r1, #8]
   13290:	mov	r2, #0
   13294:	add	r0, r0, #1
   13298:	str	r0, [r1, #8]
   1329c:	add	r3, r3, #24
   132a0:	ldr	r0, [r3, #-20]	; 0xffffffec
   132a4:	cmp	r0, #0
   132a8:	bne	132b8 <__assert_fail@plt+0x1f00>
   132ac:	ldr	r0, [r3, #-24]	; 0xffffffe8
   132b0:	cmp	r0, #0
   132b4:	beq	13878 <__assert_fail@plt+0x24c0>
   132b8:	add	r2, r2, #1
   132bc:	b	1329c <__assert_fail@plt+0x1ee4>
   132c0:	ldr	r3, [r0, #4]
   132c4:	cmp	r3, #0
   132c8:	ldrne	r3, [r1, #8]
   132cc:	addne	r3, r3, #1
   132d0:	strne	r3, [r1, #8]
   132d4:	cmp	lr, #0
   132d8:	beq	13664 <__assert_fail@plt+0x22ac>
   132dc:	ldr	r0, [lr]
   132e0:	cmp	r0, #0
   132e4:	beq	13664 <__assert_fail@plt+0x22ac>
   132e8:	mov	r6, r1
   132ec:	str	lr, [sp]
   132f0:	ldr	r2, [r0]
   132f4:	ldr	r7, [r0, #16]
   132f8:	cmp	r2, #0
   132fc:	beq	13334 <__assert_fail@plt+0x1f7c>
   13300:	ldr	r0, [r6, #8]
   13304:	mov	r1, #0
   13308:	add	r0, r0, #1
   1330c:	str	r0, [r6, #8]
   13310:	add	r2, r2, #24
   13314:	ldr	r0, [r2, #-20]	; 0xffffffec
   13318:	cmp	r0, #0
   1331c:	bne	1332c <__assert_fail@plt+0x1f74>
   13320:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13324:	cmp	r0, #0
   13328:	beq	138a8 <__assert_fail@plt+0x24f0>
   1332c:	add	r1, r1, #1
   13330:	b	13310 <__assert_fail@plt+0x1f58>
   13334:	ldr	r2, [r0, #4]
   13338:	cmp	r2, #0
   1333c:	ldrne	r2, [r6, #8]
   13340:	addne	r2, r2, #1
   13344:	strne	r2, [r6, #8]
   13348:	cmp	r7, #0
   1334c:	beq	13908 <__assert_fail@plt+0x2550>
   13350:	ldr	r1, [r7]
   13354:	cmp	r1, #0
   13358:	beq	13908 <__assert_fail@plt+0x2550>
   1335c:	str	r7, [sp, #4]
   13360:	ldr	r2, [r1]
   13364:	ldr	r8, [r1, #16]
   13368:	cmp	r2, #0
   1336c:	beq	133a4 <__assert_fail@plt+0x1fec>
   13370:	ldr	r0, [r6, #8]
   13374:	mov	r1, #0
   13378:	add	r0, r0, #1
   1337c:	str	r0, [r6, #8]
   13380:	add	r2, r2, #24
   13384:	ldr	r0, [r2, #-20]	; 0xffffffec
   13388:	cmp	r0, #0
   1338c:	bne	1339c <__assert_fail@plt+0x1fe4>
   13390:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13394:	cmp	r0, #0
   13398:	beq	138d8 <__assert_fail@plt+0x2520>
   1339c:	add	r1, r1, #1
   133a0:	b	13380 <__assert_fail@plt+0x1fc8>
   133a4:	ldr	r2, [r1, #4]
   133a8:	cmp	r2, #0
   133ac:	ldrne	r2, [r6, #8]
   133b0:	addne	r2, r2, #1
   133b4:	strne	r2, [r6, #8]
   133b8:	cmp	r8, #0
   133bc:	beq	13910 <__assert_fail@plt+0x2558>
   133c0:	ldr	r1, [r8]
   133c4:	cmp	r1, #0
   133c8:	beq	13910 <__assert_fail@plt+0x2558>
   133cc:	ldr	r2, [r1]
   133d0:	ldr	r9, [r1, #16]
   133d4:	cmp	r2, #0
   133d8:	beq	13410 <__assert_fail@plt+0x2058>
   133dc:	ldr	r0, [r6, #8]
   133e0:	mov	r1, #0
   133e4:	add	r0, r0, #1
   133e8:	str	r0, [r6, #8]
   133ec:	add	r2, r2, #24
   133f0:	ldr	r0, [r2, #-20]	; 0xffffffec
   133f4:	cmp	r0, #0
   133f8:	bne	13408 <__assert_fail@plt+0x2050>
   133fc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13400:	cmp	r0, #0
   13404:	beq	13918 <__assert_fail@plt+0x2560>
   13408:	add	r1, r1, #1
   1340c:	b	133ec <__assert_fail@plt+0x2034>
   13410:	ldr	r2, [r1, #4]
   13414:	cmp	r2, #0
   13418:	ldrne	r2, [r6, #8]
   1341c:	addne	r2, r2, #1
   13420:	strne	r2, [r6, #8]
   13424:	cmp	r9, #0
   13428:	beq	13614 <__assert_fail@plt+0x225c>
   1342c:	ldr	r1, [r9]
   13430:	cmp	r1, #0
   13434:	beq	13614 <__assert_fail@plt+0x225c>
   13438:	ldr	r2, [r1]
   1343c:	ldr	sl, [r1, #16]
   13440:	cmp	r2, #0
   13444:	beq	134ac <__assert_fail@plt+0x20f4>
   13448:	ldr	r0, [r6, #8]
   1344c:	mov	r1, #0
   13450:	add	r0, r0, #1
   13454:	str	r0, [r6, #8]
   13458:	b	13460 <__assert_fail@plt+0x20a8>
   1345c:	add	r1, r1, #1
   13460:	add	r2, r2, #24
   13464:	ldr	r0, [r2, #-20]	; 0xffffffec
   13468:	cmp	r0, #0
   1346c:	bne	1345c <__assert_fail@plt+0x20a4>
   13470:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13474:	cmp	r0, #0
   13478:	bne	1345c <__assert_fail@plt+0x20a4>
   1347c:	ldr	r0, [r2, #-8]
   13480:	cmp	r0, #0
   13484:	bne	1345c <__assert_fail@plt+0x20a4>
   13488:	ldr	r0, [r2, #-4]
   1348c:	cmp	r0, #0
   13490:	bne	1345c <__assert_fail@plt+0x20a4>
   13494:	ldm	r6, {r0, r2}
   13498:	add	ip, r1, r1, lsl #1
   1349c:	add	r0, r0, ip
   134a0:	add	r1, r2, r1
   134a4:	stm	r6, {r0, r1}
   134a8:	b	134c0 <__assert_fail@plt+0x2108>
   134ac:	ldr	r2, [r1, #4]
   134b0:	cmp	r2, #0
   134b4:	ldrne	r2, [r6, #8]
   134b8:	addne	r2, r2, #1
   134bc:	strne	r2, [r6, #8]
   134c0:	cmp	sl, #0
   134c4:	beq	13870 <__assert_fail@plt+0x24b8>
   134c8:	ldr	r1, [sl]
   134cc:	cmp	r1, #0
   134d0:	beq	13870 <__assert_fail@plt+0x24b8>
   134d4:	ldr	r2, [r1]
   134d8:	ldr	fp, [r1, #16]
   134dc:	cmp	r2, #0
   134e0:	beq	13848 <__assert_fail@plt+0x2490>
   134e4:	ldr	r0, [r6, #8]
   134e8:	mov	r1, #0
   134ec:	add	r0, r0, #1
   134f0:	str	r0, [r6, #8]
   134f4:	b	134fc <__assert_fail@plt+0x2144>
   134f8:	add	r1, r1, #1
   134fc:	add	r2, r2, #24
   13500:	ldr	r0, [r2, #-20]	; 0xffffffec
   13504:	cmp	r0, #0
   13508:	bne	134f8 <__assert_fail@plt+0x2140>
   1350c:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13510:	cmp	r0, #0
   13514:	bne	134f8 <__assert_fail@plt+0x2140>
   13518:	ldr	r0, [r2, #-8]
   1351c:	cmp	r0, #0
   13520:	bne	134f8 <__assert_fail@plt+0x2140>
   13524:	ldr	r0, [r2, #-4]
   13528:	cmp	r0, #0
   1352c:	bne	134f8 <__assert_fail@plt+0x2140>
   13530:	ldm	r6, {r0, r2}
   13534:	add	ip, r1, r1, lsl #1
   13538:	add	r0, r0, ip
   1353c:	add	r1, r2, r1
   13540:	stm	r6, {r0, r1}
   13544:	cmp	fp, #0
   13548:	beq	13868 <__assert_fail@plt+0x24b0>
   1354c:	ldr	r0, [fp]
   13550:	cmp	r0, #0
   13554:	beq	13868 <__assert_fail@plt+0x24b0>
   13558:	ldr	r2, [r0]
   1355c:	ldr	r5, [r0, #16]
   13560:	cmp	r2, #0
   13564:	beq	1366c <__assert_fail@plt+0x22b4>
   13568:	ldr	r0, [r6, #8]
   1356c:	mov	r1, #0
   13570:	add	r0, r0, #1
   13574:	str	r0, [r6, #8]
   13578:	b	13580 <__assert_fail@plt+0x21c8>
   1357c:	add	r1, r1, #1
   13580:	add	r2, r2, #24
   13584:	ldr	r0, [r2, #-20]	; 0xffffffec
   13588:	cmp	r0, #0
   1358c:	bne	1357c <__assert_fail@plt+0x21c4>
   13590:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13594:	cmp	r0, #0
   13598:	bne	1357c <__assert_fail@plt+0x21c4>
   1359c:	ldr	r0, [r2, #-8]
   135a0:	cmp	r0, #0
   135a4:	bne	1357c <__assert_fail@plt+0x21c4>
   135a8:	ldr	r0, [r2, #-4]
   135ac:	cmp	r0, #0
   135b0:	bne	1357c <__assert_fail@plt+0x21c4>
   135b4:	ldm	r6, {r0, r2}
   135b8:	add	ip, r1, r1, lsl #1
   135bc:	cmp	r5, #0
   135c0:	add	r0, r0, ip
   135c4:	add	r1, r2, r1
   135c8:	stm	r6, {r0, r1}
   135cc:	bne	13688 <__assert_fail@plt+0x22d0>
   135d0:	ldr	r1, [r6, #12]
   135d4:	ldr	r0, [fp, #16]!
   135d8:	add	r2, r1, #1
   135dc:	cmp	r0, #0
   135e0:	str	r2, [r6, #12]
   135e4:	bne	13558 <__assert_fail@plt+0x21a0>
   135e8:	ldr	r1, [sl, #16]!
   135ec:	add	r2, r2, #1
   135f0:	cmp	r1, #0
   135f4:	str	r2, [r6, #12]
   135f8:	bne	134d4 <__assert_fail@plt+0x211c>
   135fc:	ldr	r1, [r9, #16]!
   13600:	add	r2, r2, #1
   13604:	cmp	r1, #0
   13608:	str	r2, [r6, #12]
   1360c:	bne	13438 <__assert_fail@plt+0x2080>
   13610:	b	13618 <__assert_fail@plt+0x2260>
   13614:	ldr	r2, [r6, #12]
   13618:	ldr	r1, [r8, #16]!
   1361c:	add	r2, r2, #1
   13620:	cmp	r1, #0
   13624:	str	r2, [r6, #12]
   13628:	bne	133cc <__assert_fail@plt+0x2014>
   1362c:	ldr	r3, [sp, #4]
   13630:	add	r2, r2, #1
   13634:	ldr	r1, [r3, #16]!
   13638:	str	r2, [r6, #12]
   1363c:	cmp	r1, #0
   13640:	str	r3, [sp, #4]
   13644:	bne	13360 <__assert_fail@plt+0x1fa8>
   13648:	ldr	r3, [sp]
   1364c:	add	r2, r2, #1
   13650:	ldr	r0, [r3, #16]!
   13654:	str	r2, [r6, #12]
   13658:	cmp	r0, #0
   1365c:	str	r3, [sp]
   13660:	bne	132f0 <__assert_fail@plt+0x1f38>
   13664:	add	sp, sp, #12
   13668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1366c:	ldr	r2, [r0, #4]
   13670:	cmp	r2, #0
   13674:	ldrne	r2, [r6, #8]
   13678:	addne	r2, r2, #1
   1367c:	strne	r2, [r6, #8]
   13680:	cmp	r5, #0
   13684:	beq	135d0 <__assert_fail@plt+0x2218>
   13688:	ldr	r0, [r5]
   1368c:	cmp	r0, #0
   13690:	beq	135d0 <__assert_fail@plt+0x2218>
   13694:	ldr	r2, [r0]
   13698:	ldr	r4, [r0, #16]
   1369c:	cmp	r2, #0
   136a0:	beq	13800 <__assert_fail@plt+0x2448>
   136a4:	ldr	r0, [r6, #8]
   136a8:	mov	r1, #0
   136ac:	add	r0, r0, #1
   136b0:	str	r0, [r6, #8]
   136b4:	b	136bc <__assert_fail@plt+0x2304>
   136b8:	add	r1, r1, #1
   136bc:	add	r2, r2, #24
   136c0:	ldr	r0, [r2, #-20]	; 0xffffffec
   136c4:	cmp	r0, #0
   136c8:	bne	136b8 <__assert_fail@plt+0x2300>
   136cc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   136d0:	cmp	r0, #0
   136d4:	bne	136b8 <__assert_fail@plt+0x2300>
   136d8:	ldr	r0, [r2, #-8]
   136dc:	cmp	r0, #0
   136e0:	bne	136b8 <__assert_fail@plt+0x2300>
   136e4:	ldr	r0, [r2, #-4]
   136e8:	cmp	r0, #0
   136ec:	bne	136b8 <__assert_fail@plt+0x2300>
   136f0:	ldm	r6, {r0, r2}
   136f4:	add	ip, r1, r1, lsl #1
   136f8:	add	r0, r0, ip
   136fc:	add	r1, r2, r1
   13700:	stm	r6, {r0, r1}
   13704:	cmp	r4, #0
   13708:	beq	13820 <__assert_fail@plt+0x2468>
   1370c:	ldr	r0, [r4]
   13710:	cmp	r0, #0
   13714:	beq	13820 <__assert_fail@plt+0x2468>
   13718:	ldr	r1, [r0]
   1371c:	ldr	r2, [r0, #16]
   13720:	cmp	r1, #0
   13724:	beq	13830 <__assert_fail@plt+0x2478>
   13728:	ldr	ip, [r6, #8]
   1372c:	mov	r0, #0
   13730:	add	ip, ip, #1
   13734:	str	ip, [r6, #8]
   13738:	b	13740 <__assert_fail@plt+0x2388>
   1373c:	add	r0, r0, #1
   13740:	add	r1, r1, #24
   13744:	ldr	ip, [r1, #-20]	; 0xffffffec
   13748:	cmp	ip, #0
   1374c:	bne	1373c <__assert_fail@plt+0x2384>
   13750:	ldr	ip, [r1, #-24]	; 0xffffffe8
   13754:	cmp	ip, #0
   13758:	bne	1373c <__assert_fail@plt+0x2384>
   1375c:	ldr	ip, [r1, #-8]
   13760:	cmp	ip, #0
   13764:	bne	1373c <__assert_fail@plt+0x2384>
   13768:	ldr	ip, [r1, #-4]
   1376c:	cmp	ip, #0
   13770:	bne	1373c <__assert_fail@plt+0x2384>
   13774:	ldr	ip, [r6]
   13778:	ldr	r1, [r6, #4]
   1377c:	add	lr, r0, r0, lsl #1
   13780:	add	ip, ip, lr
   13784:	add	r0, r1, r0
   13788:	str	ip, [r6]
   1378c:	str	r0, [r6, #4]
   13790:	cmp	r2, #0
   13794:	beq	13828 <__assert_fail@plt+0x2470>
   13798:	ldr	r0, [r2]
   1379c:	cmp	r0, #0
   137a0:	beq	13828 <__assert_fail@plt+0x2470>
   137a4:	mov	r7, r2
   137a8:	mov	r1, r6
   137ac:	bl	13274 <__assert_fail@plt+0x1ebc>
   137b0:	ldr	r1, [r6, #12]
   137b4:	ldr	r0, [r7, #16]!
   137b8:	add	r1, r1, #1
   137bc:	cmp	r0, #0
   137c0:	str	r1, [r6, #12]
   137c4:	bne	137a8 <__assert_fail@plt+0x23f0>
   137c8:	ldr	r0, [r4, #16]!
   137cc:	add	r1, r1, #1
   137d0:	cmp	r0, #0
   137d4:	str	r1, [r6, #12]
   137d8:	bne	13718 <__assert_fail@plt+0x2360>
   137dc:	ldr	r0, [r5, #16]!
   137e0:	add	r1, r1, #1
   137e4:	cmp	r0, #0
   137e8:	str	r1, [r6, #12]
   137ec:	beq	135d4 <__assert_fail@plt+0x221c>
   137f0:	ldr	r2, [r0]
   137f4:	ldr	r4, [r0, #16]
   137f8:	cmp	r2, #0
   137fc:	bne	136a4 <__assert_fail@plt+0x22ec>
   13800:	ldr	r2, [r0, #4]
   13804:	cmp	r2, #0
   13808:	beq	13704 <__assert_fail@plt+0x234c>
   1380c:	ldr	r2, [r6, #8]
   13810:	cmp	r4, #0
   13814:	add	r2, r2, #1
   13818:	str	r2, [r6, #8]
   1381c:	bne	1370c <__assert_fail@plt+0x2354>
   13820:	ldr	r1, [r6, #12]
   13824:	b	137dc <__assert_fail@plt+0x2424>
   13828:	ldr	r1, [r6, #12]
   1382c:	b	137c8 <__assert_fail@plt+0x2410>
   13830:	ldr	r1, [r0, #4]
   13834:	cmp	r1, #0
   13838:	ldrne	r1, [r6, #8]
   1383c:	addne	r1, r1, #1
   13840:	strne	r1, [r6, #8]
   13844:	b	13790 <__assert_fail@plt+0x23d8>
   13848:	ldr	r2, [r1, #4]
   1384c:	cmp	r2, #0
   13850:	beq	13544 <__assert_fail@plt+0x218c>
   13854:	ldr	r2, [r6, #8]
   13858:	cmp	fp, #0
   1385c:	add	r2, r2, #1
   13860:	str	r2, [r6, #8]
   13864:	bne	1354c <__assert_fail@plt+0x2194>
   13868:	ldr	r2, [r6, #12]
   1386c:	b	135e8 <__assert_fail@plt+0x2230>
   13870:	ldr	r2, [r6, #12]
   13874:	b	135fc <__assert_fail@plt+0x2244>
   13878:	ldr	r0, [r3, #-8]
   1387c:	cmp	r0, #0
   13880:	bne	132b8 <__assert_fail@plt+0x1f00>
   13884:	ldr	r0, [r3, #-4]
   13888:	cmp	r0, #0
   1388c:	bne	132b8 <__assert_fail@plt+0x1f00>
   13890:	ldm	r1, {r0, r3}
   13894:	add	ip, r2, r2, lsl #1
   13898:	add	r0, r0, ip
   1389c:	add	r2, r3, r2
   138a0:	stm	r1, {r0, r2}
   138a4:	b	132d4 <__assert_fail@plt+0x1f1c>
   138a8:	ldr	r0, [r2, #-8]
   138ac:	cmp	r0, #0
   138b0:	bne	1332c <__assert_fail@plt+0x1f74>
   138b4:	ldr	r0, [r2, #-4]
   138b8:	cmp	r0, #0
   138bc:	bne	1332c <__assert_fail@plt+0x1f74>
   138c0:	ldm	r6, {r0, r2}
   138c4:	add	ip, r1, r1, lsl #1
   138c8:	add	r0, r0, ip
   138cc:	add	r1, r2, r1
   138d0:	stm	r6, {r0, r1}
   138d4:	b	13348 <__assert_fail@plt+0x1f90>
   138d8:	ldr	r0, [r2, #-8]
   138dc:	cmp	r0, #0
   138e0:	bne	1339c <__assert_fail@plt+0x1fe4>
   138e4:	ldr	r0, [r2, #-4]
   138e8:	cmp	r0, #0
   138ec:	bne	1339c <__assert_fail@plt+0x1fe4>
   138f0:	ldm	r6, {r0, r2}
   138f4:	add	ip, r1, r1, lsl #1
   138f8:	add	r0, r0, ip
   138fc:	add	r1, r2, r1
   13900:	stm	r6, {r0, r1}
   13904:	b	133b8 <__assert_fail@plt+0x2000>
   13908:	ldr	r2, [r6, #12]
   1390c:	b	13648 <__assert_fail@plt+0x2290>
   13910:	ldr	r2, [r6, #12]
   13914:	b	1362c <__assert_fail@plt+0x2274>
   13918:	ldr	r0, [r2, #-8]
   1391c:	cmp	r0, #0
   13920:	bne	13408 <__assert_fail@plt+0x2050>
   13924:	ldr	r0, [r2, #-4]
   13928:	cmp	r0, #0
   1392c:	bne	13408 <__assert_fail@plt+0x2050>
   13930:	ldm	r6, {r0, r2}
   13934:	add	ip, r1, r1, lsl #1
   13938:	add	r0, r0, ip
   1393c:	add	r1, r2, r1
   13940:	stm	r6, {r0, r1}
   13944:	b	13424 <__assert_fail@plt+0x206c>

00013948 <argp_parse@@Base>:
   13948:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1394c:	add	fp, sp, #32
   13950:	tst	r3, #1
   13954:	sub	sp, sp, #220	; 0xdc
   13958:	mov	r7, r3
   1395c:	mov	r8, r0
   13960:	str	r1, [fp, #-240]	; 0xffffff10
   13964:	str	r2, [fp, #-236]	; 0xffffff14
   13968:	bne	13994 <argp_parse@@Base+0x4c>
   1396c:	ldr	r3, [pc, #3488]	; 14714 <argp_parse@@Base+0xdcc>
   13970:	ldr	r4, [pc, #3488]	; 14718 <argp_parse@@Base+0xdd0>
   13974:	ldr	r2, [r3]
   13978:	cmp	r2, #0
   1397c:	ldreq	r2, [fp, #-236]	; 0xffffff14
   13980:	ldreq	r2, [r2]
   13984:	streq	r2, [r3]
   13988:	ldr	r3, [r4]
   1398c:	cmp	r3, #0
   13990:	beq	14074 <argp_parse@@Base+0x72c>
   13994:	ands	r3, r7, #16
   13998:	beq	13f58 <argp_parse@@Base+0x610>
   1399c:	sub	r5, fp, #196	; 0xc4
   139a0:	mov	r0, r5
   139a4:	mov	r2, #36	; 0x24
   139a8:	mov	r1, #0
   139ac:	bl	112b0 <memset@plt>
   139b0:	ands	r3, r7, #4
   139b4:	str	r3, [fp, #-244]	; 0xffffff0c
   139b8:	mov	r3, #0
   139bc:	moveq	r0, #1
   139c0:	movne	r0, #0
   139c4:	cmp	r8, r3
   139c8:	str	r3, [fp, #-224]	; 0xffffff20
   139cc:	str	r3, [fp, #-220]	; 0xffffff24
   139d0:	str	r3, [fp, #-216]	; 0xffffff28
   139d4:	str	r0, [fp, #-228]	; 0xffffff1c
   139d8:	beq	13a4c <argp_parse@@Base+0x104>
   139dc:	ldr	r4, [r8, #16]
   139e0:	ldr	r3, [r8]
   139e4:	cmp	r3, #0
   139e8:	movne	r2, #1
   139ec:	strne	r2, [fp, #-220]	; 0xffffff24
   139f0:	movne	r2, #0
   139f4:	bne	13a00 <argp_parse@@Base+0xb8>
   139f8:	b	14540 <argp_parse@@Base+0xbf8>
   139fc:	add	r2, r2, #1
   13a00:	add	r3, r3, #24
   13a04:	ldr	r1, [r3, #-20]	; 0xffffffec
   13a08:	cmp	r1, #0
   13a0c:	bne	139fc <argp_parse@@Base+0xb4>
   13a10:	ldr	r1, [r3, #-24]	; 0xffffffe8
   13a14:	cmp	r1, #0
   13a18:	bne	139fc <argp_parse@@Base+0xb4>
   13a1c:	ldr	r1, [r3, #-8]
   13a20:	cmp	r1, #0
   13a24:	bne	139fc <argp_parse@@Base+0xb4>
   13a28:	ldr	r1, [r3, #-4]
   13a2c:	cmp	r1, #0
   13a30:	bne	139fc <argp_parse@@Base+0xb4>
   13a34:	add	r3, r2, r2, lsl #1
   13a38:	add	r0, r3, r0
   13a3c:	str	r2, [fp, #-224]	; 0xffffff20
   13a40:	str	r0, [fp, #-228]	; 0xffffff1c
   13a44:	mov	r6, #72	; 0x48
   13a48:	b	14558 <argp_parse@@Base+0xc10>
   13a4c:	mov	sl, #36	; 0x24
   13a50:	mov	r6, sl
   13a54:	mov	r4, r8
   13a58:	mov	r3, #52	; 0x34
   13a5c:	str	r3, [fp, #-232]	; 0xffffff18
   13a60:	add	r0, r3, r0
   13a64:	add	r0, r0, #1
   13a68:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   13a6c:	cmp	r0, #0
   13a70:	mov	r9, r0
   13a74:	str	r0, [fp, #-40]	; 0xffffffd8
   13a78:	moveq	r5, #12
   13a7c:	beq	13e78 <argp_parse@@Base+0x530>
   13a80:	mov	lr, r5
   13a84:	mov	r3, #1
   13a88:	str	r3, [fp, #-196]	; 0xffffff3c
   13a8c:	str	r3, [fp, #-192]	; 0xffffff40
   13a90:	ldm	lr!, {r0, r1, r2, r3}
   13a94:	sub	ip, fp, #148	; 0x94
   13a98:	add	r5, r9, sl
   13a9c:	ldr	sl, [fp, #-232]	; 0xffffff18
   13aa0:	stmia	ip!, {r0, r1, r2, r3}
   13aa4:	add	r6, r9, r6
   13aa8:	ldm	lr!, {r0, r1, r2, r3}
   13aac:	add	sl, r9, sl
   13ab0:	str	r6, [fp, #-104]	; 0xffffff98
   13ab4:	str	r5, [fp, #-152]	; 0xffffff68
   13ab8:	ldr	lr, [lr]
   13abc:	stmia	ip!, {r0, r1, r2, r3}
   13ac0:	mov	r2, r4
   13ac4:	mov	r0, r6
   13ac8:	mov	r1, #0
   13acc:	str	r9, [fp, #-112]	; 0xffffff90
   13ad0:	str	lr, [ip]
   13ad4:	str	sl, [fp, #-156]	; 0xffffff64
   13ad8:	sub	r4, fp, #160	; 0xa0
   13adc:	bl	112b0 <memset@plt>
   13ae0:	tst	r7, #8
   13ae4:	str	r5, [fp, #-204]	; 0xffffff34
   13ae8:	str	sl, [fp, #-208]	; 0xffffff30
   13aec:	str	r6, [fp, #-200]	; 0xffffff38
   13af0:	str	r4, [fp, #-212]	; 0xffffff2c
   13af4:	beq	1400c <argp_parse@@Base+0x6c4>
   13af8:	ldr	r2, [fp, #-232]	; 0xffffff18
   13afc:	add	sl, sl, #1
   13b00:	mov	r3, #45	; 0x2d
   13b04:	str	sl, [fp, #-208]	; 0xffffff30
   13b08:	strb	r3, [r9, r2]
   13b0c:	mov	r2, #0
   13b10:	strb	r2, [sl]
   13b14:	ldr	r3, [fp, #-204]	; 0xffffff34
   13b18:	cmp	r8, r2
   13b1c:	str	r2, [r3]
   13b20:	str	r8, [fp, #-160]	; 0xffffff60
   13b24:	beq	1403c <argp_parse@@Base+0x6f4>
   13b28:	sub	r1, fp, #212	; 0xd4
   13b2c:	mov	r0, r8
   13b30:	str	r1, [sp]
   13b34:	ldr	r3, [fp, #-112]	; 0xffffff90
   13b38:	mov	r1, r2
   13b3c:	bl	12de0 <__assert_fail@plt+0x1a28>
   13b40:	ldr	r8, [fp, #-160]	; 0xffffff60
   13b44:	ldr	r5, [fp, #-112]	; 0xffffff90
   13b48:	mov	r6, r0
   13b4c:	str	r0, [fp, #-108]	; 0xffffff94
   13b50:	mov	r2, #56	; 0x38
   13b54:	mov	r1, #0
   13b58:	sub	r0, fp, #96	; 0x60
   13b5c:	bl	112b0 <memset@plt>
   13b60:	ldr	r2, [pc, #2996]	; 1471c <argp_parse@@Base+0xdd4>
   13b64:	ldr	r3, [pc, #2996]	; 14720 <argp_parse@@Base+0xdd8>
   13b68:	ldr	r0, [fp, #-240]	; 0xffffff10
   13b6c:	ldr	r1, [r2]
   13b70:	str	r0, [fp, #-92]	; 0xffffffa4
   13b74:	ldr	r2, [r3]
   13b78:	ldr	r0, [fp, #-236]	; 0xffffff14
   13b7c:	mov	r3, #1
   13b80:	cmp	r5, r6
   13b84:	str	r8, [fp, #-96]	; 0xffffffa0
   13b88:	str	r0, [fp, #-88]	; 0xffffffa8
   13b8c:	str	r7, [fp, #-80]	; 0xffffffb0
   13b90:	str	r4, [fp, #-44]	; 0xffffffd4
   13b94:	str	r1, [fp, #-52]	; 0xffffffcc
   13b98:	str	r2, [fp, #-48]	; 0xffffffd0
   13b9c:	str	r3, [fp, #-100]	; 0xffffff9c
   13ba0:	bcc	13e84 <argp_parse@@Base+0x53c>
   13ba4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ba8:	tst	r3, #2
   13bac:	bne	1404c <argp_parse@@Base+0x704>
   13bb0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13bb4:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13bb8:	mov	r2, #1
   13bbc:	str	r2, [fp, #-144]	; 0xffffff70
   13bc0:	ldr	r2, [fp, #-236]	; 0xffffff14
   13bc4:	cmp	r2, r3
   13bc8:	beq	145ec <argp_parse@@Base+0xca4>
   13bcc:	ldr	r3, [pc, #2884]	; 14718 <argp_parse@@Base+0xdd0>
   13bd0:	ldr	r3, [r3]
   13bd4:	str	r3, [fp, #-56]	; 0xffffffc8
   13bd8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13bdc:	ldr	r5, [fp, #-84]	; 0xffffffac
   13be0:	ldr	sl, [pc, #2876]	; 14724 <argp_parse@@Base+0xddc>
   13be4:	mov	r0, r4
   13be8:	mov	r6, #0
   13bec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13bf0:	cmp	r3, #0
   13bf4:	beq	14088 <argp_parse@@Base+0x740>
   13bf8:	cmp	r3, r5
   13bfc:	strgt	r6, [fp, #-72]	; 0xffffffb8
   13c00:	bgt	14088 <argp_parse@@Base+0x740>
   13c04:	cmp	r5, r0
   13c08:	blt	14424 <argp_parse@@Base+0xadc>
   13c0c:	cmp	r5, r0
   13c10:	bne	14430 <argp_parse@@Base+0xae8>
   13c14:	ldr	r6, [fp, #-112]	; 0xffffff90
   13c18:	ldr	ip, [fp, #-108]	; 0xffffff94
   13c1c:	cmp	r6, ip
   13c20:	bcs	146b4 <argp_parse@@Base+0xd6c>
   13c24:	mov	r5, #0
   13c28:	add	r6, r6, #36	; 0x24
   13c2c:	mov	r8, r5
   13c30:	ldr	r7, [pc, #2800]	; 14728 <argp_parse@@Base+0xde0>
   13c34:	mov	r0, r5
   13c38:	b	13c80 <argp_parse@@Base+0x338>
   13c3c:	ldr	ip, [r6, #-4]
   13c40:	str	ip, [fp, #-60]	; 0xffffffc4
   13c44:	ldr	ip, [r6, #-12]
   13c48:	str	ip, [fp, #-68]	; 0xffffffbc
   13c4c:	ldr	ip, [r6, #-8]
   13c50:	str	r3, [fp, #-76]	; 0xffffffb4
   13c54:	str	ip, [fp, #-64]	; 0xffffffc0
   13c58:	blx	r4
   13c5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c60:	str	r3, [r6, #-4]
   13c64:	ldr	ip, [fp, #-108]	; 0xffffff94
   13c68:	cmp	ip, r6
   13c6c:	bls	1465c <argp_parse@@Base+0xd14>
   13c70:	cmp	r0, #7
   13c74:	cmpne	r0, #0
   13c78:	bne	1461c <argp_parse@@Base+0xcd4>
   13c7c:	add	r6, r6, #36	; 0x24
   13c80:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13c84:	cmp	r3, #0
   13c88:	bne	13c68 <argp_parse@@Base+0x320>
   13c8c:	ldr	r4, [r6, #-36]	; 0xffffffdc
   13c90:	sub	r2, fp, #96	; 0x60
   13c94:	cmp	r4, #0
   13c98:	mov	r1, r8
   13c9c:	mov	r0, r7
   13ca0:	bne	13c3c <argp_parse@@Base+0x2f4>
   13ca4:	cmp	ip, r6
   13ca8:	mov	r0, #7
   13cac:	bhi	13c7c <argp_parse@@Base+0x334>
   13cb0:	ldr	r6, [fp, #-112]	; 0xffffff90
   13cb4:	sub	r4, ip, #36	; 0x24
   13cb8:	cmp	r6, r4
   13cbc:	movls	r5, #7
   13cc0:	bhi	13d48 <argp_parse@@Base+0x400>
   13cc4:	cmp	r5, #7
   13cc8:	cmpne	r5, #0
   13ccc:	bne	14630 <argp_parse@@Base+0xce8>
   13cd0:	sub	r4, r4, #36	; 0x24
   13cd4:	mov	r8, #0
   13cd8:	ldr	r7, [pc, #2636]	; 1472c <argp_parse@@Base+0xde4>
   13cdc:	b	13d28 <argp_parse@@Base+0x3e0>
   13ce0:	ldr	ip, [r4, #68]	; 0x44
   13ce4:	ldr	lr, [r4, #48]	; 0x30
   13ce8:	str	ip, [fp, #-60]	; 0xffffffc4
   13cec:	ldr	ip, [r4, #60]	; 0x3c
   13cf0:	str	ip, [fp, #-68]	; 0xffffffbc
   13cf4:	ldr	ip, [r4, #64]	; 0x40
   13cf8:	str	lr, [fp, #-76]	; 0xffffffb4
   13cfc:	str	ip, [fp, #-64]	; 0xffffffc0
   13d00:	blx	r3
   13d04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d08:	str	r3, [r4, #68]	; 0x44
   13d0c:	ldr	r6, [fp, #-112]	; 0xffffff90
   13d10:	cmp	r6, r4
   13d14:	bhi	146ac <argp_parse@@Base+0xd64>
   13d18:	cmp	r0, #7
   13d1c:	cmpne	r0, #0
   13d20:	bne	14640 <argp_parse@@Base+0xcf8>
   13d24:	sub	r4, r4, #36	; 0x24
   13d28:	ldr	r3, [r4, #36]	; 0x24
   13d2c:	sub	r2, fp, #96	; 0x60
   13d30:	cmp	r3, #0
   13d34:	mov	r1, r8
   13d38:	mov	r0, r7
   13d3c:	bne	13ce0 <argp_parse@@Base+0x398>
   13d40:	cmp	r6, r4
   13d44:	bls	13d24 <argp_parse@@Base+0x3dc>
   13d48:	ldr	r3, [fp, #4]
   13d4c:	cmp	r3, #0
   13d50:	beq	13d6c <argp_parse@@Base+0x424>
   13d54:	mov	r5, #0
   13d58:	ldr	r2, [fp, #4]
   13d5c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13d60:	str	r3, [r2]
   13d64:	cmp	r5, #0
   13d68:	bne	14650 <argp_parse@@Base+0xd08>
   13d6c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13d70:	b	14448 <argp_parse@@Base+0xb00>
   13d74:	ldr	r6, [fp, #-112]	; 0xffffff90
   13d78:	mov	r5, r0
   13d7c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13d80:	cmp	r6, ip
   13d84:	mov	r4, ip
   13d88:	subcs	r4, ip, #36	; 0x24
   13d8c:	bcs	13dfc <argp_parse@@Base+0x4b4>
   13d90:	ldr	r8, [pc, #2456]	; 14730 <argp_parse@@Base+0xde8>
   13d94:	add	r6, r6, #36	; 0x24
   13d98:	mov	r9, #0
   13d9c:	ldr	r3, [r6, #-36]	; 0xffffffdc
   13da0:	sub	r2, fp, #96	; 0x60
   13da4:	cmp	r3, #0
   13da8:	mov	r1, r9
   13dac:	mov	r0, r8
   13db0:	mov	r7, r6
   13db4:	beq	13de8 <argp_parse@@Base+0x4a0>
   13db8:	ldr	ip, [r6, #-4]
   13dbc:	ldr	lr, [r6, #-24]	; 0xffffffe8
   13dc0:	str	ip, [fp, #-60]	; 0xffffffc4
   13dc4:	ldr	ip, [r6, #-12]
   13dc8:	str	ip, [fp, #-68]	; 0xffffffbc
   13dcc:	ldr	ip, [r6, #-8]
   13dd0:	str	lr, [fp, #-76]	; 0xffffffb4
   13dd4:	str	ip, [fp, #-64]	; 0xffffffc0
   13dd8:	blx	r3
   13ddc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13de0:	str	r3, [r6, #-4]
   13de4:	ldr	r4, [fp, #-108]	; 0xffffff94
   13de8:	cmp	r7, r4
   13dec:	add	r6, r6, #36	; 0x24
   13df0:	bcc	13d9c <argp_parse@@Base+0x454>
   13df4:	ldr	r6, [fp, #-112]	; 0xffffff90
   13df8:	sub	r4, r4, #36	; 0x24
   13dfc:	cmp	r6, r4
   13e00:	bhi	13e68 <argp_parse@@Base+0x520>
   13e04:	ldr	r8, [pc, #2344]	; 14734 <argp_parse@@Base+0xdec>
   13e08:	sub	r4, r4, #36	; 0x24
   13e0c:	mov	r9, #0
   13e10:	ldr	r3, [r4, #36]	; 0x24
   13e14:	sub	r2, fp, #96	; 0x60
   13e18:	cmp	r3, #0
   13e1c:	mov	r1, r9
   13e20:	mov	r0, r8
   13e24:	mov	r7, r4
   13e28:	beq	13e5c <argp_parse@@Base+0x514>
   13e2c:	ldr	ip, [r4, #68]	; 0x44
   13e30:	ldr	lr, [r4, #48]	; 0x30
   13e34:	str	ip, [fp, #-60]	; 0xffffffc4
   13e38:	ldr	ip, [r4, #60]	; 0x3c
   13e3c:	str	ip, [fp, #-68]	; 0xffffffbc
   13e40:	ldr	ip, [r4, #64]	; 0x40
   13e44:	str	lr, [fp, #-76]	; 0xffffffb4
   13e48:	str	ip, [fp, #-64]	; 0xffffffc0
   13e4c:	blx	r3
   13e50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13e54:	str	r3, [r4, #68]	; 0x44
   13e58:	ldr	r6, [fp, #-112]	; 0xffffff90
   13e5c:	cmp	r6, r7
   13e60:	sub	r4, r4, #36	; 0x24
   13e64:	bls	13e10 <argp_parse@@Base+0x4c8>
   13e68:	cmp	r5, #7
   13e6c:	moveq	r5, #22
   13e70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e74:	bl	148c4 <argp_parse@@Base+0xf7c>
   13e78:	mov	r0, r5
   13e7c:	sub	sp, fp, #32
   13e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e84:	ldr	r3, [fp, #8]
   13e88:	add	r4, r5, #36	; 0x24
   13e8c:	str	r3, [r5, #24]
   13e90:	mov	r7, #0
   13e94:	ldr	r6, [pc, #2204]	; 14738 <argp_parse@@Base+0xdf0>
   13e98:	b	13ef0 <argp_parse@@Base+0x5a8>
   13e9c:	ldr	r2, [r4, #-4]
   13ea0:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13ea4:	str	r2, [fp, #-60]	; 0xffffffc4
   13ea8:	ldr	r1, [r4, #-12]
   13eac:	sub	r2, fp, #96	; 0x60
   13eb0:	str	r1, [fp, #-68]	; 0xffffffbc
   13eb4:	ldr	ip, [r4, #-8]
   13eb8:	mov	r1, r7
   13ebc:	str	r0, [fp, #-76]	; 0xffffffb4
   13ec0:	str	ip, [fp, #-64]	; 0xffffffc0
   13ec4:	mov	r0, r6
   13ec8:	blx	r3
   13ecc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ed0:	str	r3, [r4, #-4]
   13ed4:	ldr	r3, [fp, #-108]	; 0xffffff94
   13ed8:	cmp	r3, r4
   13edc:	bls	146e8 <argp_parse@@Base+0xda0>
   13ee0:	cmp	r0, #7
   13ee4:	cmpne	r0, #0
   13ee8:	bne	1402c <argp_parse@@Base+0x6e4>
   13eec:	add	r4, r4, #36	; 0x24
   13ef0:	ldr	r3, [r4, #-20]	; 0xffffffec
   13ef4:	cmp	r3, #0
   13ef8:	ldrne	r3, [r3, #28]
   13efc:	ldrne	r2, [r4, #-16]
   13f00:	ldrne	r3, [r3, r2, lsl #2]
   13f04:	strne	r3, [r4, #-12]
   13f08:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13f0c:	cmp	r3, #0
   13f10:	bne	13e9c <argp_parse@@Base+0x554>
   13f14:	ldr	r3, [r4, #-32]	; 0xffffffe0
   13f18:	ldr	r3, [r3, #16]
   13f1c:	cmp	r3, #0
   13f20:	beq	13f48 <argp_parse@@Base+0x600>
   13f24:	ldr	r3, [r3]
   13f28:	cmp	r3, #0
   13f2c:	beq	13f48 <argp_parse@@Base+0x600>
   13f30:	ldr	r3, [r4, #-8]
   13f34:	ldr	r2, [r4, #-12]
   13f38:	str	r2, [r3]
   13f3c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13f40:	cmp	r3, #0
   13f44:	bne	13e9c <argp_parse@@Base+0x554>
   13f48:	ldr	r3, [fp, #-108]	; 0xffffff94
   13f4c:	cmp	r3, r4
   13f50:	bhi	13eec <argp_parse@@Base+0x5a4>
   13f54:	b	13ba4 <argp_parse@@Base+0x25c>
   13f58:	sub	sp, sp, #72	; 0x48
   13f5c:	add	r4, sp, #8
   13f60:	sub	sp, sp, #40	; 0x28
   13f64:	add	r6, sp, #8
   13f68:	mov	r1, r3
   13f6c:	str	r3, [r6]
   13f70:	str	r3, [r6, #4]
   13f74:	str	r3, [r6, #8]
   13f78:	str	r3, [r6, #12]
   13f7c:	str	r3, [r6, #20]
   13f80:	str	r3, [r6, #24]
   13f84:	mov	r2, #64	; 0x40
   13f88:	mov	r0, r4
   13f8c:	str	r4, [r6, #16]
   13f90:	bl	112b0 <memset@plt>
   13f94:	ldr	r2, [pc, #1952]	; 1473c <argp_parse@@Base+0xdf4>
   13f98:	cmp	r8, #0
   13f9c:	addne	r3, r4, #16
   13fa0:	ldr	r2, [r2]
   13fa4:	moveq	r3, r4
   13fa8:	ldr	r1, [pc, #1936]	; 14740 <argp_parse@@Base+0xdf8>
   13fac:	strne	r8, [r4]
   13fb0:	cmp	r2, #0
   13fb4:	str	r1, [r3]
   13fb8:	beq	14604 <argp_parse@@Base+0xcbc>
   13fbc:	ldr	r2, [pc, #1920]	; 14744 <argp_parse@@Base+0xdfc>
   13fc0:	add	ip, r3, #32
   13fc4:	str	r2, [r3, #16]
   13fc8:	mov	r9, #0
   13fcc:	sub	r5, fp, #196	; 0xc4
   13fd0:	mov	r1, r9
   13fd4:	mov	r0, r5
   13fd8:	mov	r2, #36	; 0x24
   13fdc:	str	r9, [ip]
   13fe0:	bl	112b0 <memset@plt>
   13fe4:	ands	r3, r7, #4
   13fe8:	moveq	r0, #1
   13fec:	movne	r0, r9
   13ff0:	str	r3, [fp, #-244]	; 0xffffff0c
   13ff4:	mov	r8, r6
   13ff8:	str	r9, [fp, #-224]	; 0xffffff20
   13ffc:	str	r9, [fp, #-220]	; 0xffffff24
   14000:	str	r9, [fp, #-216]	; 0xffffff28
   14004:	str	r0, [fp, #-228]	; 0xffffff1c
   14008:	b	139e0 <argp_parse@@Base+0x98>
   1400c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   14010:	cmp	r3, #0
   14014:	addne	r3, sl, #1
   14018:	movne	r2, #43	; 0x2b
   1401c:	strbne	r2, [sl]
   14020:	strne	r3, [fp, #-208]	; 0xffffff30
   14024:	movne	sl, r3
   14028:	b	13b0c <argp_parse@@Base+0x1c4>
   1402c:	mov	r5, r0
   14030:	mov	r0, r5
   14034:	sub	sp, fp, #32
   14038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1403c:	ldr	r5, [fp, #-112]	; 0xffffff90
   14040:	mov	r6, r5
   14044:	str	r5, [fp, #-108]	; 0xffffff94
   14048:	b	13b50 <argp_parse@@Base+0x208>
   1404c:	tst	r3, #1
   14050:	mov	r3, #0
   14054:	str	r3, [fp, #-144]	; 0xffffff70
   14058:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1405c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14060:	subne	r3, r3, #4
   14064:	addne	r4, r4, #1
   14068:	strne	r3, [fp, #-88]	; 0xffffffa8
   1406c:	strne	r4, [fp, #-92]	; 0xffffffa4
   14070:	b	13bc0 <argp_parse@@Base+0x278>
   14074:	ldr	r3, [fp, #-236]	; 0xffffff14
   14078:	ldr	r0, [r3]
   1407c:	bl	14818 <argp_parse@@Base+0xed0>
   14080:	str	r0, [r4]
   14084:	b	13994 <argp_parse@@Base+0x4c>
   14088:	cmp	r2, #0
   1408c:	beq	13c04 <argp_parse@@Base+0x2bc>
   14090:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14094:	str	r5, [fp, #-148]	; 0xffffff6c
   14098:	ands	ip, r3, #64	; 0x40
   1409c:	mvn	r3, #0
   140a0:	str	r3, [fp, #-140]	; 0xffffff74
   140a4:	ldr	r2, [fp, #-156]	; 0xffffff64
   140a8:	ldr	r3, [fp, #-152]	; 0xffffff68
   140ac:	ldr	r1, [fp, #-88]	; 0xffffffa8
   140b0:	beq	143d0 <argp_parse@@Base+0xa88>
   140b4:	sub	ip, fp, #148	; 0x94
   140b8:	stm	sp, {r6, ip}
   140bc:	bl	14998 <argp_parse@@Base+0x1050>
   140c0:	ldr	r5, [fp, #-148]	; 0xffffff6c
   140c4:	str	r5, [fp, #-84]	; 0xffffffac
   140c8:	mov	r7, r0
   140cc:	cmn	r7, #1
   140d0:	beq	143f0 <argp_parse@@Base+0xaa8>
   140d4:	cmp	r7, #63	; 0x3f
   140d8:	beq	144f4 <argp_parse@@Base+0xbac>
   140dc:	cmp	r7, #1
   140e0:	beq	14238 <argp_parse@@Base+0x8f0>
   140e4:	asrs	r8, r7, #24
   140e8:	bne	14194 <argp_parse@@Base+0x84c>
   140ec:	mov	r1, r7
   140f0:	ldr	r0, [fp, #-156]	; 0xffffff64
   140f4:	bl	11274 <strchr@plt>
   140f8:	cmp	r0, #0
   140fc:	beq	14204 <argp_parse@@Base+0x8bc>
   14100:	ldr	r4, [fp, #-112]	; 0xffffff90
   14104:	ldr	r2, [fp, #-108]	; 0xffffff94
   14108:	cmp	r4, r2
   1410c:	bcc	14120 <argp_parse@@Base+0x7d8>
   14110:	b	14204 <argp_parse@@Base+0x8bc>
   14114:	add	r4, r4, #36	; 0x24
   14118:	cmp	r4, r2
   1411c:	bcs	14204 <argp_parse@@Base+0x8bc>
   14120:	ldr	r3, [r4, #8]
   14124:	cmp	r0, r3
   14128:	bcs	14114 <argp_parse@@Base+0x7cc>
   1412c:	ldr	r3, [r4]
   14130:	cmp	r3, #0
   14134:	beq	14204 <argp_parse@@Base+0x8bc>
   14138:	ldr	r2, [r4, #32]
   1413c:	ldr	r0, [r4, #28]
   14140:	ldr	ip, [r4, #24]
   14144:	str	r2, [fp, #-60]	; 0xffffffc4
   14148:	ldr	r2, [r4, #12]
   1414c:	ldr	r1, [fp, #-136]	; 0xffffff78
   14150:	str	r0, [fp, #-64]	; 0xffffffc0
   14154:	str	r2, [fp, #-76]	; 0xffffffb4
   14158:	str	ip, [fp, #-68]	; 0xffffffbc
   1415c:	sub	r2, fp, #96	; 0x60
   14160:	mov	r0, r7
   14164:	blx	r3
   14168:	mov	r8, r6
   1416c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14170:	str	r3, [r4, #32]
   14174:	cmp	r0, #7
   14178:	beq	141fc <argp_parse@@Base+0x8b4>
   1417c:	cmp	r0, #0
   14180:	bne	13d74 <argp_parse@@Base+0x42c>
   14184:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14188:	ldr	r5, [fp, #-84]	; 0xffffffac
   1418c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14190:	b	13bec <argp_parse@@Base+0x2a4>
   14194:	add	r3, r8, r8, lsl #3
   14198:	ldr	r2, [fp, #-112]	; 0xffffff90
   1419c:	lsl	r3, r3, #2
   141a0:	sub	r3, r3, #36	; 0x24
   141a4:	add	r4, r2, r3
   141a8:	ldr	r5, [r2, r3]
   141ac:	ands	r3, r7, #8388608	; 0x800000
   141b0:	movne	r3, #-16777216	; 0xff000000
   141b4:	cmp	r5, #0
   141b8:	beq	14388 <argp_parse@@Base+0xa40>
   141bc:	ldr	r0, [r4, #32]
   141c0:	ldr	r2, [r4, #24]
   141c4:	str	r0, [fp, #-60]	; 0xffffffc4
   141c8:	ldr	r0, [r4, #28]
   141cc:	str	r2, [fp, #-68]	; 0xffffffbc
   141d0:	ldr	r2, [r4, #12]
   141d4:	str	r0, [fp, #-64]	; 0xffffffc0
   141d8:	bic	r0, r7, #-16777216	; 0xff000000
   141dc:	str	r2, [fp, #-76]	; 0xffffffb4
   141e0:	orr	r0, r0, r3
   141e4:	ldr	r1, [fp, #-136]	; 0xffffff78
   141e8:	sub	r2, fp, #96	; 0x60
   141ec:	blx	r5
   141f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   141f4:	str	r3, [r4, #32]
   141f8:	b	14174 <argp_parse@@Base+0x82c>
   141fc:	cmp	r8, #0
   14200:	bne	14388 <argp_parse@@Base+0xa40>
   14204:	mov	r2, r7
   14208:	ldr	r3, [pc, #1336]	; 14748 <argp_parse@@Base+0xe00>
   1420c:	ldr	r1, [pc, #1336]	; 1474c <argp_parse@@Base+0xe04>
   14210:	sub	r0, fp, #96	; 0x60
   14214:	bl	1a698 <argp_error@@Base>
   14218:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1421c:	mov	r2, #260	; 0x104
   14220:	sub	r0, fp, #96	; 0x60
   14224:	bl	1a5e8 <argp_state_help@@Base>
   14228:	mov	r5, #7
   1422c:	ldr	r6, [fp, #-112]	; 0xffffff90
   14230:	ldr	ip, [fp, #-108]	; 0xffffff94
   14234:	b	13d80 <argp_parse@@Base+0x438>
   14238:	ldr	r7, [fp, #-136]	; 0xffffff78
   1423c:	ldr	r3, [fp, #-112]	; 0xffffff90
   14240:	ldr	ip, [fp, #-108]	; 0xffffff94
   14244:	sub	r8, r5, #1
   14248:	cmp	r3, ip
   1424c:	str	r8, [fp, #-84]	; 0xffffffac
   14250:	bcs	1437c <argp_parse@@Base+0xa34>
   14254:	mov	lr, r8
   14258:	add	r4, r3, #36	; 0x24
   1425c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   14260:	add	r5, lr, #1
   14264:	cmp	r3, #0
   14268:	str	r5, [fp, #-84]	; 0xffffffac
   1426c:	sub	r2, fp, #96	; 0x60
   14270:	mov	r1, r7
   14274:	mov	r0, r6
   14278:	sub	r5, r4, #36	; 0x24
   1427c:	mov	r9, r4
   14280:	streq	lr, [fp, #-84]	; 0xffffffac
   14284:	beq	14370 <argp_parse@@Base+0xa28>
   14288:	ldr	ip, [r4, #-4]
   1428c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   14290:	str	ip, [fp, #-60]	; 0xffffffc4
   14294:	ldr	ip, [r4, #-12]
   14298:	str	ip, [fp, #-68]	; 0xffffffbc
   1429c:	ldr	ip, [r4, #-8]
   142a0:	str	lr, [fp, #-76]	; 0xffffffb4
   142a4:	str	ip, [fp, #-64]	; 0xffffffc0
   142a8:	blx	r3
   142ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   142b0:	str	r3, [r4, #-4]
   142b4:	cmp	r0, #7
   142b8:	beq	142f4 <argp_parse@@Base+0x9ac>
   142bc:	cmp	r0, #0
   142c0:	bne	13d74 <argp_parse@@Base+0x42c>
   142c4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   142c8:	ldr	r5, [fp, #-84]	; 0xffffffac
   142cc:	cmp	r8, r5
   142d0:	sublt	r8, r5, r8
   142d4:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   142d8:	movge	r3, #1
   142dc:	addlt	r8, r3, r8
   142e0:	strlt	r8, [r4, #-24]	; 0xffffffe8
   142e4:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   142e8:	strge	r3, [fp, #-100]	; 0xffffff9c
   142ec:	movge	r2, r3
   142f0:	b	13bec <argp_parse@@Base+0x2a4>
   142f4:	ldr	lr, [fp, #-84]	; 0xffffffac
   142f8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   142fc:	sub	lr, lr, #1
   14300:	cmp	r3, #0
   14304:	str	lr, [fp, #-84]	; 0xffffffac
   14308:	beq	1436c <argp_parse@@Base+0xa24>
   1430c:	add	r0, r5, #24
   14310:	ldr	r2, [r5, #12]
   14314:	ldm	r0, {r0, r1, ip}
   14318:	str	r2, [fp, #-76]	; 0xffffffb4
   1431c:	sub	r2, fp, #96	; 0x60
   14320:	str	ip, [fp, #-60]	; 0xffffffc4
   14324:	str	r0, [fp, #-68]	; 0xffffffbc
   14328:	str	r1, [fp, #-64]	; 0xffffffc0
   1432c:	mov	r0, sl
   14330:	mov	r1, r6
   14334:	blx	r3
   14338:	ldr	ip, [fp, #-108]	; 0xffffff94
   1433c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14340:	cmp	r4, ip
   14344:	movcs	r1, #0
   14348:	movcc	r1, #1
   1434c:	mov	r3, r4
   14350:	str	r2, [r5, #32]
   14354:	cmp	r0, #7
   14358:	movne	r1, #0
   1435c:	cmp	r1, #0
   14360:	beq	146d0 <argp_parse@@Base+0xd88>
   14364:	ldr	lr, [fp, #-84]	; 0xffffffac
   14368:	b	14258 <argp_parse@@Base+0x910>
   1436c:	ldr	ip, [fp, #-108]	; 0xffffff94
   14370:	cmp	r9, ip
   14374:	add	r4, r4, #36	; 0x24
   14378:	bcc	1425c <argp_parse@@Base+0x914>
   1437c:	ldr	r5, [fp, #-84]	; 0xffffffac
   14380:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14384:	b	13c0c <argp_parse@@Base+0x2c4>
   14388:	ldr	r3, [fp, #-152]	; 0xffffff68
   1438c:	ldr	r2, [r3, #12]
   14390:	cmp	r7, r2
   14394:	bne	143ac <argp_parse@@Base+0xa64>
   14398:	b	144e0 <argp_parse@@Base+0xb98>
   1439c:	add	r3, r3, #16
   143a0:	ldr	r2, [r3, #12]
   143a4:	cmp	r7, r2
   143a8:	beq	144e0 <argp_parse@@Base+0xb98>
   143ac:	ldr	r2, [r3]
   143b0:	cmp	r2, #0
   143b4:	bne	1439c <argp_parse@@Base+0xa54>
   143b8:	ldr	r2, [pc, #912]	; 14750 <argp_parse@@Base+0xe08>
   143bc:	ldr	r3, [pc, #900]	; 14748 <argp_parse@@Base+0xe00>
   143c0:	ldr	r1, [pc, #908]	; 14754 <argp_parse@@Base+0xe0c>
   143c4:	sub	r0, fp, #96	; 0x60
   143c8:	bl	1a698 <argp_error@@Base>
   143cc:	b	14218 <argp_parse@@Base+0x8d0>
   143d0:	sub	lr, fp, #148	; 0x94
   143d4:	stm	sp, {ip, lr}
   143d8:	bl	14944 <argp_parse@@Base+0xffc>
   143dc:	ldr	r5, [fp, #-148]	; 0xffffff6c
   143e0:	str	r5, [fp, #-84]	; 0xffffffac
   143e4:	mov	r7, r0
   143e8:	cmn	r7, #1
   143ec:	bne	140d4 <argp_parse@@Base+0x78c>
   143f0:	cmp	r5, #1
   143f4:	str	r6, [fp, #-100]	; 0xffffff9c
   143f8:	ble	14418 <argp_parse@@Base+0xad0>
   143fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14400:	sub	r3, r5, #-1073741823	; 0xc0000001
   14404:	ldr	r1, [pc, #844]	; 14758 <argp_parse@@Base+0xe10>
   14408:	ldr	r0, [r2, r3, lsl #2]
   1440c:	bl	110f4 <strcmp@plt>
   14410:	cmp	r0, #0
   14414:	streq	r5, [fp, #-72]	; 0xffffffb8
   14418:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1441c:	cmp	r5, r0
   14420:	bge	13c0c <argp_parse@@Base+0x2c4>
   14424:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14428:	tst	r3, #4
   1442c:	beq	14504 <argp_parse@@Base+0xbbc>
   14430:	ldr	r3, [fp, #4]
   14434:	cmp	r3, #0
   14438:	beq	1467c <argp_parse@@Base+0xd34>
   1443c:	ldr	r6, [fp, #-112]	; 0xffffff90
   14440:	ldr	ip, [fp, #-108]	; 0xffffff94
   14444:	str	r5, [r3]
   14448:	sub	r3, ip, #36	; 0x24
   1444c:	cmp	r6, r3
   14450:	bhi	14538 <argp_parse@@Base+0xbf0>
   14454:	ldr	r7, [pc, #768]	; 1475c <argp_parse@@Base+0xe14>
   14458:	sub	r4, ip, #72	; 0x48
   1445c:	mov	r8, #0
   14460:	ldr	r3, [r4, #36]	; 0x24
   14464:	sub	r2, fp, #96	; 0x60
   14468:	cmp	r3, #0
   1446c:	mov	r1, r8
   14470:	mov	r0, r7
   14474:	beq	144d0 <argp_parse@@Base+0xb88>
   14478:	ldr	ip, [r4, #68]	; 0x44
   1447c:	ldr	lr, [r4, #48]	; 0x30
   14480:	str	ip, [fp, #-60]	; 0xffffffc4
   14484:	ldr	ip, [r4, #60]	; 0x3c
   14488:	str	ip, [fp, #-68]	; 0xffffffbc
   1448c:	ldr	ip, [r4, #64]	; 0x40
   14490:	str	lr, [fp, #-76]	; 0xffffffb4
   14494:	str	ip, [fp, #-64]	; 0xffffffc0
   14498:	blx	r3
   1449c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   144a0:	str	r3, [r4, #68]	; 0x44
   144a4:	ldr	r6, [fp, #-112]	; 0xffffff90
   144a8:	cmp	r6, r4
   144ac:	bhi	14518 <argp_parse@@Base+0xbd0>
   144b0:	cmp	r0, #7
   144b4:	cmpne	r0, #0
   144b8:	sub	r4, r4, #36	; 0x24
   144bc:	beq	14460 <argp_parse@@Base+0xb18>
   144c0:	ldr	r4, [fp, #-108]	; 0xffffff94
   144c4:	mov	r5, r0
   144c8:	sub	r4, r4, #36	; 0x24
   144cc:	b	13dfc <argp_parse@@Base+0x4b4>
   144d0:	cmp	r6, r4
   144d4:	bhi	14524 <argp_parse@@Base+0xbdc>
   144d8:	sub	r4, r4, #36	; 0x24
   144dc:	b	14460 <argp_parse@@Base+0xb18>
   144e0:	ldr	r2, [r3]
   144e4:	ldr	r3, [pc, #612]	; 14750 <argp_parse@@Base+0xe08>
   144e8:	cmp	r2, #0
   144ec:	moveq	r2, r3
   144f0:	b	143bc <argp_parse@@Base+0xa74>
   144f4:	ldr	r3, [fp, #-140]	; 0xffffff74
   144f8:	cmn	r3, #1
   144fc:	bne	14218 <argp_parse@@Base+0x8d0>
   14500:	b	140ec <argp_parse@@Base+0x7a4>
   14504:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14508:	ldr	r7, [r3, r5, lsl #2]
   1450c:	add	r5, r5, #1
   14510:	str	r7, [fp, #-136]	; 0xffffff78
   14514:	b	1423c <argp_parse@@Base+0x8f4>
   14518:	cmp	r0, #7
   1451c:	mov	r5, r0
   14520:	bne	145e0 <argp_parse@@Base+0xc98>
   14524:	ldr	r4, [fp, #-108]	; 0xffffff94
   14528:	sub	r4, r4, #36	; 0x24
   1452c:	cmp	r6, r4
   14530:	movls	r5, #0
   14534:	bls	13e04 <argp_parse@@Base+0x4bc>
   14538:	mov	r5, #0
   1453c:	b	13e70 <argp_parse@@Base+0x528>
   14540:	ldr	r3, [r8, #4]
   14544:	cmp	r3, #0
   14548:	moveq	r6, #36	; 0x24
   1454c:	movne	r6, #72	; 0x48
   14550:	movne	r3, #1
   14554:	strne	r3, [fp, #-220]	; 0xffffff24
   14558:	cmp	r4, #0
   1455c:	beq	145bc <argp_parse@@Base+0xc74>
   14560:	ldr	r0, [r4]
   14564:	cmp	r0, #0
   14568:	beq	145bc <argp_parse@@Base+0xc74>
   1456c:	sub	r1, fp, #228	; 0xe4
   14570:	bl	13274 <__assert_fail@plt+0x1ebc>
   14574:	ldr	r3, [fp, #-216]	; 0xffffff28
   14578:	ldr	r0, [r4, #16]!
   1457c:	add	r3, r3, #1
   14580:	cmp	r0, #0
   14584:	str	r3, [fp, #-216]	; 0xffffff28
   14588:	bne	1456c <argp_parse@@Base+0xc24>
   1458c:	ldr	r6, [fp, #-220]	; 0xffffff24
   14590:	ldr	r2, [fp, #-224]	; 0xffffff20
   14594:	add	r6, r6, #1
   14598:	lsl	r4, r3, #2
   1459c:	add	r6, r6, r6, lsl #3
   145a0:	add	r3, r2, #1
   145a4:	lsl	r6, r6, #2
   145a8:	add	sl, r4, r6
   145ac:	add	r3, sl, r3, lsl #4
   145b0:	str	r3, [fp, #-232]	; 0xffffff18
   145b4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   145b8:	b	13a60 <argp_parse@@Base+0x118>
   145bc:	ldr	r4, [fp, #-216]	; 0xffffff28
   145c0:	ldr	r3, [fp, #-224]	; 0xffffff20
   145c4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   145c8:	lsl	r4, r4, #2
   145cc:	add	r3, r3, #1
   145d0:	add	sl, r4, r6
   145d4:	add	r3, sl, r3, lsl #4
   145d8:	str	r3, [fp, #-232]	; 0xffffff18
   145dc:	b	13a60 <argp_parse@@Base+0x118>
   145e0:	ldr	r4, [fp, #-108]	; 0xffffff94
   145e4:	sub	r4, r4, #36	; 0x24
   145e8:	b	13dfc <argp_parse@@Base+0x4b4>
   145ec:	ldr	r0, [r2]
   145f0:	cmp	r0, #0
   145f4:	beq	13bcc <argp_parse@@Base+0x284>
   145f8:	bl	14818 <argp_parse@@Base+0xed0>
   145fc:	str	r0, [fp, #-56]	; 0xffffffc8
   14600:	b	13bd8 <argp_parse@@Base+0x290>
   14604:	ldr	r2, [pc, #340]	; 14760 <argp_parse@@Base+0xe18>
   14608:	ldr	r2, [r2]
   1460c:	cmp	r2, #0
   14610:	addeq	ip, r3, #16
   14614:	bne	13fbc <argp_parse@@Base+0x674>
   14618:	b	13fc8 <argp_parse@@Base+0x680>
   1461c:	ldr	r6, [fp, #-112]	; 0xffffff90
   14620:	sub	ip, ip, #36	; 0x24
   14624:	cmp	r6, ip
   14628:	mov	r5, r0
   1462c:	bls	14644 <argp_parse@@Base+0xcfc>
   14630:	ldr	r3, [fp, #4]
   14634:	cmp	r3, #0
   14638:	bne	13d58 <argp_parse@@Base+0x410>
   1463c:	b	13d64 <argp_parse@@Base+0x41c>
   14640:	mov	r5, r0
   14644:	ldr	r3, [fp, #4]
   14648:	cmp	r3, #0
   1464c:	bne	13d58 <argp_parse@@Base+0x410>
   14650:	cmp	r5, #7
   14654:	bne	13d7c <argp_parse@@Base+0x434>
   14658:	b	14218 <argp_parse@@Base+0x8d0>
   1465c:	ldr	r6, [fp, #-112]	; 0xffffff90
   14660:	sub	r4, ip, #36	; 0x24
   14664:	cmp	r4, r6
   14668:	mov	r5, r0
   1466c:	bcs	13cc4 <argp_parse@@Base+0x37c>
   14670:	cmp	r5, #7
   14674:	beq	13d48 <argp_parse@@Base+0x400>
   14678:	b	14630 <argp_parse@@Base+0xce8>
   1467c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14680:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14684:	tst	r3, #2
   14688:	bne	1421c <argp_parse@@Base+0x8d4>
   1468c:	cmp	r1, #0
   14690:	beq	1421c <argp_parse@@Base+0x8d4>
   14694:	mov	r0, r1
   14698:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1469c:	ldr	r1, [pc, #192]	; 14764 <argp_parse@@Base+0xe1c>
   146a0:	bl	11280 <fprintf@plt>
   146a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   146a8:	b	1421c <argp_parse@@Base+0x8d4>
   146ac:	mov	r5, r0
   146b0:	b	14670 <argp_parse@@Base+0xd28>
   146b4:	sub	r4, ip, #36	; 0x24
   146b8:	cmp	r6, r4
   146bc:	bls	13cd0 <argp_parse@@Base+0x388>
   146c0:	ldr	r3, [fp, #4]
   146c4:	cmp	r3, #0
   146c8:	bne	13d54 <argp_parse@@Base+0x40c>
   146cc:	b	14448 <argp_parse@@Base+0xb00>
   146d0:	cmp	r0, #0
   146d4:	bne	14700 <argp_parse@@Base+0xdb8>
   146d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   146dc:	mov	r5, r0
   146e0:	str	r0, [fp, #-84]	; 0xffffffac
   146e4:	b	142cc <argp_parse@@Base+0x984>
   146e8:	cmp	r0, #7
   146ec:	mov	r5, r0
   146f0:	beq	13ba4 <argp_parse@@Base+0x25c>
   146f4:	cmp	r0, #0
   146f8:	bne	13e78 <argp_parse@@Base+0x530>
   146fc:	b	13ba4 <argp_parse@@Base+0x25c>
   14700:	cmp	r0, #7
   14704:	mov	r5, r0
   14708:	beq	1437c <argp_parse@@Base+0xa34>
   1470c:	ldr	r6, [fp, #-112]	; 0xffffff90
   14710:	b	13d80 <argp_parse@@Base+0x438>
   14714:			; <UNDEFINED> instruction: 0x000338b4
   14718:			; <UNDEFINED> instruction: 0x000338b0
   1471c:			; <UNDEFINED> instruction: 0x000338b8
   14720:			; <UNDEFINED> instruction: 0x000338bc
   14724:	tsteq	r0, r6
   14728:	tsteq	r0, r2
   1472c:	tsteq	r0, r1
   14730:	tsteq	r0, r5
   14734:	tsteq	r0, r7
   14738:	tsteq	r0, r3
   1473c:	andeq	r3, r3, r0, asr #18
   14740:	andeq	lr, r1, r0, ror fp
   14744:	andeq	lr, r1, ip, lsl #23
   14748:	andeq	lr, r1, r8, lsr #23
   1474c:	andeq	lr, r1, r0, asr #25
   14750:			; <UNDEFINED> instruction: 0x0001ecb8
   14754:	andeq	lr, r1, r8, asr #25
   14758:			; <UNDEFINED> instruction: 0x0001ecbc
   1475c:	tsteq	r0, r4
   14760:	ldrdeq	r3, [r3], -r8
   14764:	ldrdeq	lr, [r1], -r4
   14768:	cmp	r1, #0
   1476c:	beq	147ac <argp_parse@@Base+0xe64>
   14770:	ldr	r2, [r1, #52]	; 0x34
   14774:	ldr	r3, [r2, #48]	; 0x30
   14778:	ldr	r1, [r2, #52]	; 0x34
   1477c:	cmp	r3, r1
   14780:	bcs	147ac <argp_parse@@Base+0xe64>
   14784:	ldr	r2, [r3, #4]
   14788:	cmp	r0, r2
   1478c:	bne	147a0 <argp_parse@@Base+0xe58>
   14790:	b	147b4 <argp_parse@@Base+0xe6c>
   14794:	ldr	r2, [r3, #4]
   14798:	cmp	r2, r0
   1479c:	beq	147b4 <argp_parse@@Base+0xe6c>
   147a0:	add	r3, r3, #36	; 0x24
   147a4:	cmp	r3, r1
   147a8:	bcc	14794 <argp_parse@@Base+0xe4c>
   147ac:	mov	r0, #0
   147b0:	bx	lr
   147b4:	ldr	r0, [r3, #24]
   147b8:	bx	lr
   147bc:	ldr	ip, [pc, #32]	; 147e4 <argp_parse@@Base+0xe9c>
   147c0:	push	{lr}		; (str lr, [sp, #-4]!)
   147c4:	sub	sp, sp, #12
   147c8:	ldm	ip, {r1, ip}
   147cc:	ldr	r3, [pc, #20]	; 147e8 <argp_parse@@Base+0xea0>
   147d0:	ldr	r2, [pc, #20]	; 147ec <argp_parse@@Base+0xea4>
   147d4:	str	ip, [sp]
   147d8:	bl	1514c <_obstack_memory_used@@Base+0x390>
   147dc:	add	sp, sp, #12
   147e0:	pop	{pc}		; (ldr pc, [sp], #4)
   147e4:	ldrdeq	r3, [r3], -ip
   147e8:			; <UNDEFINED> instruction: 0x0001edbc
   147ec:	andeq	lr, r1, ip, asr #27
   147f0:	ldr	r3, [pc, #20]	; 1480c <argp_parse@@Base+0xec4>
   147f4:	ldr	r2, [pc, #20]	; 14810 <argp_parse@@Base+0xec8>
   147f8:	ldr	ip, [pc, #20]	; 14814 <argp_parse@@Base+0xecc>
   147fc:	str	r0, [r3]
   14800:	str	ip, [r2]
   14804:	str	r1, [r3, #4]
   14808:	bx	lr
   1480c:	ldrdeq	r3, [r3], -ip
   14810:	ldrdeq	r3, [r3], -r8
   14814:			; <UNDEFINED> instruction: 0x000147bc
   14818:	ldrb	r3, [r0]
   1481c:	cmp	r3, #47	; 0x2f
   14820:	bne	14830 <argp_parse@@Base+0xee8>
   14824:	ldrb	r3, [r0, #1]!
   14828:	cmp	r3, #47	; 0x2f
   1482c:	beq	14824 <argp_parse@@Base+0xedc>
   14830:	cmp	r3, #0
   14834:	bxeq	lr
   14838:	mov	r2, #0
   1483c:	push	{lr}		; (str lr, [sp, #-4]!)
   14840:	mov	ip, r2
   14844:	mov	r1, r0
   14848:	mov	lr, #1
   1484c:	cmp	r3, #47	; 0x2f
   14850:	moveq	r2, lr
   14854:	beq	14864 <argp_parse@@Base+0xf1c>
   14858:	cmp	r2, #0
   1485c:	movne	r0, r1
   14860:	movne	r2, ip
   14864:	ldrb	r3, [r1, #1]!
   14868:	cmp	r3, #0
   1486c:	bne	1484c <argp_parse@@Base+0xf04>
   14870:	pop	{pc}		; (ldr pc, [sp], #4)
   14874:	push	{r4, lr}
   14878:	mov	r4, r0
   1487c:	bl	11268 <strlen@plt>
   14880:	cmp	r0, #1
   14884:	popls	{r4, pc}
   14888:	sub	r3, r0, #1
   1488c:	add	r2, r4, r3
   14890:	ldrb	r1, [r4, r3]
   14894:	cmp	r1, #47	; 0x2f
   14898:	popne	{r4, pc}
   1489c:	cmp	r3, #1
   148a0:	beq	148b4 <argp_parse@@Base+0xf6c>
   148a4:	ldrb	r1, [r2, #-1]!
   148a8:	sub	r0, r3, #1
   148ac:	cmp	r1, #47	; 0x2f
   148b0:	beq	148bc <argp_parse@@Base+0xf74>
   148b4:	mov	r0, r3
   148b8:	pop	{r4, pc}
   148bc:	mov	r3, r0
   148c0:	b	1489c <argp_parse@@Base+0xf54>
   148c4:	push	{r4, r5, lr}
   148c8:	sub	sp, sp, #12
   148cc:	mov	r5, r0
   148d0:	bl	1128c <__errno_location@plt>
   148d4:	mov	r2, #0
   148d8:	mov	r4, r0
   148dc:	ldr	r3, [r0]
   148e0:	str	r2, [r4]
   148e4:	mov	r0, r5
   148e8:	str	r3, [sp]
   148ec:	str	r3, [sp, #4]
   148f0:	bl	11130 <free@plt>
   148f4:	ldr	r3, [r4]
   148f8:	add	r2, sp, #8
   148fc:	cmp	r3, #0
   14900:	moveq	r3, #4
   14904:	movne	r3, #0
   14908:	add	r3, r2, r3
   1490c:	ldr	r3, [r3, #-8]
   14910:	str	r3, [r4]
   14914:	add	sp, sp, #12
   14918:	pop	{r4, r5, pc}
   1491c:	push	{lr}		; (str lr, [sp, #-4]!)
   14920:	sub	sp, sp, #20
   14924:	mov	ip, #0
   14928:	ldr	lr, [sp, #24]
   1492c:	str	ip, [sp, #8]
   14930:	str	lr, [sp]
   14934:	str	ip, [sp, #4]
   14938:	bl	1b588 <argp_error@@Base+0xef0>
   1493c:	add	sp, sp, #20
   14940:	pop	{pc}		; (ldr pc, [sp], #4)
   14944:	push	{r4, lr}
   14948:	sub	sp, sp, #16
   1494c:	mov	ip, #0
   14950:	ldr	r4, [sp, #24]
   14954:	ldr	lr, [sp, #28]
   14958:	str	r4, [sp]
   1495c:	str	lr, [sp, #8]
   14960:	str	ip, [sp, #12]
   14964:	str	ip, [sp, #4]
   14968:	bl	1b014 <argp_error@@Base+0x97c>
   1496c:	add	sp, sp, #16
   14970:	pop	{r4, pc}
   14974:	push	{r4, lr}
   14978:	sub	sp, sp, #16
   1497c:	mov	lr, #0
   14980:	ldr	r4, [sp, #24]
   14984:	mov	ip, #1
   14988:	stm	sp, {r4, ip, lr}
   1498c:	bl	1b588 <argp_error@@Base+0xef0>
   14990:	add	sp, sp, #16
   14994:	pop	{r4, pc}
   14998:	push	{r4, r5, lr}
   1499c:	sub	sp, sp, #20
   149a0:	mov	lr, #0
   149a4:	ldr	r5, [sp, #32]
   149a8:	ldr	r4, [sp, #36]	; 0x24
   149ac:	mov	ip, #1
   149b0:	str	r5, [sp]
   149b4:	str	r4, [sp, #8]
   149b8:	str	lr, [sp, #12]
   149bc:	str	ip, [sp, #4]
   149c0:	bl	1b014 <argp_error@@Base+0x97c>
   149c4:	add	sp, sp, #20
   149c8:	pop	{r4, r5, pc}
   149cc:	ldr	r3, [pc, #28]	; 149f0 <argp_parse@@Base+0x10a8>
   149d0:	push	{r4, lr}
   149d4:	ldr	r0, [r3]
   149d8:	ldr	r2, [pc, #20]	; 149f4 <argp_parse@@Base+0x10ac>
   149dc:	ldr	r1, [pc, #20]	; 149f8 <argp_parse@@Base+0x10b0>
   149e0:	bl	11280 <fprintf@plt>
   149e4:	ldr	r3, [pc, #16]	; 149fc <argp_parse@@Base+0x10b4>
   149e8:	ldr	r0, [r3]
   149ec:	bl	1125c <exit@plt>
   149f0:			; <UNDEFINED> instruction: 0x000338b8
   149f4:	ldrdeq	lr, [r1], -ip
   149f8:	andeq	lr, r1, ip, lsr lr
   149fc:	muleq	r3, ip, r8

00014a00 <_obstack_begin@@Base>:
   14a00:	push	{r4, r5, r6, lr}
   14a04:	mov	r4, r0
   14a08:	ldrb	r0, [r0, #40]	; 0x28
   14a0c:	subs	r5, r2, #0
   14a10:	subne	r6, r5, #1
   14a14:	bic	r0, r0, #1
   14a18:	strb	r0, [r4, #40]	; 0x28
   14a1c:	ldrb	r2, [r4, #40]	; 0x28
   14a20:	ldr	r0, [pc, #152]	; 14ac0 <_obstack_begin@@Base+0xc0>
   14a24:	moveq	r6, #7
   14a28:	ldr	ip, [sp, #16]
   14a2c:	moveq	r5, #8
   14a30:	cmp	r1, #0
   14a34:	moveq	r1, r0
   14a38:	tst	r2, #1
   14a3c:	str	r3, [r4, #28]
   14a40:	str	ip, [r4, #32]
   14a44:	str	r6, [r4, #24]
   14a48:	str	r1, [r4]
   14a4c:	bne	14aa8 <_obstack_begin@@Base+0xa8>
   14a50:	mov	r0, r1
   14a54:	blx	r3
   14a58:	cmp	r0, #0
   14a5c:	str	r0, [r4, #4]
   14a60:	beq	14ab4 <_obstack_begin@@Base+0xb4>
   14a64:	ldr	r3, [r4]
   14a68:	add	r2, r0, #8
   14a6c:	rsb	r5, r5, #0
   14a70:	add	r2, r2, r6
   14a74:	add	r3, r0, r3
   14a78:	and	r2, r2, r5
   14a7c:	mov	r1, #0
   14a80:	str	r2, [r4, #8]
   14a84:	str	r2, [r4, #12]
   14a88:	str	r3, [r0]
   14a8c:	str	r3, [r4, #16]
   14a90:	str	r1, [r0, #4]
   14a94:	ldrb	r3, [r4, #40]	; 0x28
   14a98:	mov	r0, #1
   14a9c:	and	r3, r3, #249	; 0xf9
   14aa0:	strb	r3, [r4, #40]	; 0x28
   14aa4:	pop	{r4, r5, r6, pc}
   14aa8:	ldr	r0, [r4, #36]	; 0x24
   14aac:	blx	r3
   14ab0:	b	14a58 <_obstack_begin@@Base+0x58>
   14ab4:	ldr	r3, [pc, #8]	; 14ac4 <_obstack_begin@@Base+0xc4>
   14ab8:	ldr	r3, [r3]
   14abc:	blx	r3
   14ac0:	andeq	r0, r0, r8, ror #31
   14ac4:	andeq	r3, r3, r0, ror r8

00014ac8 <_obstack_begin_1@@Base>:
   14ac8:	ldrb	ip, [r0, #40]	; 0x28
   14acc:	push	{r4, r5, r6, lr}
   14ad0:	mov	r4, r0
   14ad4:	orr	ip, ip, #1
   14ad8:	subs	r5, r2, #0
   14adc:	strb	ip, [r4, #40]	; 0x28
   14ae0:	ldrb	r2, [r4, #40]	; 0x28
   14ae4:	ldr	ip, [pc, #160]	; 14b8c <_obstack_begin_1@@Base+0xc4>
   14ae8:	subne	r6, r5, #1
   14aec:	moveq	r6, #7
   14af0:	ldr	lr, [sp, #16]
   14af4:	ldr	r0, [sp, #20]
   14af8:	moveq	r5, #8
   14afc:	cmp	r1, #0
   14b00:	moveq	r1, ip
   14b04:	tst	r2, #1
   14b08:	str	r3, [r4, #28]
   14b0c:	str	lr, [r4, #32]
   14b10:	str	r0, [r4, #36]	; 0x24
   14b14:	str	r6, [r4, #24]
   14b18:	str	r1, [r4]
   14b1c:	bne	14b78 <_obstack_begin_1@@Base+0xb0>
   14b20:	mov	r0, r1
   14b24:	blx	r3
   14b28:	cmp	r0, #0
   14b2c:	str	r0, [r4, #4]
   14b30:	beq	14b80 <_obstack_begin_1@@Base+0xb8>
   14b34:	ldr	r3, [r4]
   14b38:	add	r2, r0, #8
   14b3c:	rsb	r5, r5, #0
   14b40:	add	r2, r2, r6
   14b44:	add	r3, r0, r3
   14b48:	and	r2, r2, r5
   14b4c:	mov	r1, #0
   14b50:	str	r2, [r4, #8]
   14b54:	str	r2, [r4, #12]
   14b58:	str	r3, [r0]
   14b5c:	str	r3, [r4, #16]
   14b60:	str	r1, [r0, #4]
   14b64:	ldrb	r3, [r4, #40]	; 0x28
   14b68:	mov	r0, #1
   14b6c:	and	r3, r3, #249	; 0xf9
   14b70:	strb	r3, [r4, #40]	; 0x28
   14b74:	pop	{r4, r5, r6, pc}
   14b78:	blx	r3
   14b7c:	b	14b28 <_obstack_begin_1@@Base+0x60>
   14b80:	ldr	r3, [pc, #8]	; 14b90 <_obstack_begin_1@@Base+0xc8>
   14b84:	ldr	r3, [r3]
   14b88:	blx	r3
   14b8c:	andeq	r0, r0, r8, ror #31
   14b90:	andeq	r3, r3, r0, ror r8

00014b94 <_obstack_newchunk@@Base>:
   14b94:	ldr	r2, [r0, #8]
   14b98:	push	{r4, r5, r6, r7, r8, lr}
   14b9c:	ldr	r6, [r0, #12]
   14ba0:	ldr	r3, [r0, #24]
   14ba4:	sub	r6, r6, r2
   14ba8:	add	r1, r6, r1
   14bac:	adds	r3, r1, r3
   14bb0:	movcc	r2, #1
   14bb4:	movcs	r2, #0
   14bb8:	cmp	r6, r1
   14bbc:	movhi	r1, #0
   14bc0:	andls	r1, r2, #1
   14bc4:	cmp	r1, #0
   14bc8:	bne	14bd8 <_obstack_newchunk@@Base+0x44>
   14bcc:	ldr	r3, [pc, #272]	; 14ce4 <_obstack_newchunk@@Base+0x150>
   14bd0:	ldr	r3, [r3]
   14bd4:	blx	r3
   14bd8:	ldr	r5, [r0]
   14bdc:	add	r1, r3, r6, lsr #3
   14be0:	cmp	r3, r5
   14be4:	ldrb	r2, [r0, #40]	; 0x28
   14be8:	movcc	r3, r5
   14bec:	add	r1, r1, #100	; 0x64
   14bf0:	cmp	r3, r1
   14bf4:	movcs	r5, r3
   14bf8:	movcc	r5, r1
   14bfc:	tst	r2, #1
   14c00:	mov	r4, r0
   14c04:	ldr	r7, [r0, #4]
   14c08:	ldr	r3, [r0, #28]
   14c0c:	bne	14c9c <_obstack_newchunk@@Base+0x108>
   14c10:	mov	r0, r5
   14c14:	blx	r3
   14c18:	mov	r8, r0
   14c1c:	cmp	r8, #0
   14c20:	beq	14bcc <_obstack_newchunk@@Base+0x38>
   14c24:	ldr	r2, [r4, #24]
   14c28:	mov	r3, r8
   14c2c:	add	r1, r8, r5
   14c30:	str	r8, [r4, #4]
   14c34:	str	r7, [r8, #4]
   14c38:	str	r1, [r4, #16]
   14c3c:	str	r1, [r3], #8
   14c40:	add	r3, r3, r2
   14c44:	bic	r5, r3, r2
   14c48:	mov	r0, r5
   14c4c:	mov	r2, r6
   14c50:	ldr	r1, [r4, #8]
   14c54:	bl	1116c <memcpy@plt>
   14c58:	ldrb	r2, [r4, #40]	; 0x28
   14c5c:	tst	r2, #2
   14c60:	bne	14c80 <_obstack_newchunk@@Base+0xec>
   14c64:	ldr	r1, [r4, #24]
   14c68:	add	r3, r7, #8
   14c6c:	add	r3, r3, r1
   14c70:	ldr	r0, [r4, #8]
   14c74:	bic	r3, r3, r1
   14c78:	cmp	r0, r3
   14c7c:	beq	14cb0 <_obstack_newchunk@@Base+0x11c>
   14c80:	ldrb	r3, [r4, #40]	; 0x28
   14c84:	add	r2, r5, r6
   14c88:	str	r2, [r4, #12]
   14c8c:	bic	r3, r3, #2
   14c90:	str	r5, [r4, #8]
   14c94:	strb	r3, [r4, #40]	; 0x28
   14c98:	pop	{r4, r5, r6, r7, r8, pc}
   14c9c:	mov	r1, r5
   14ca0:	ldr	r0, [r0, #36]	; 0x24
   14ca4:	blx	r3
   14ca8:	mov	r8, r0
   14cac:	b	14c1c <_obstack_newchunk@@Base+0x88>
   14cb0:	ldr	r3, [r7, #4]
   14cb4:	tst	r2, #1
   14cb8:	str	r3, [r8, #4]
   14cbc:	bne	14cd0 <_obstack_newchunk@@Base+0x13c>
   14cc0:	mov	r0, r7
   14cc4:	ldr	r3, [r4, #32]
   14cc8:	blx	r3
   14ccc:	b	14c80 <_obstack_newchunk@@Base+0xec>
   14cd0:	mov	r1, r7
   14cd4:	ldr	r3, [r4, #32]
   14cd8:	ldr	r0, [r4, #36]	; 0x24
   14cdc:	blx	r3
   14ce0:	b	14c80 <_obstack_newchunk@@Base+0xec>
   14ce4:	andeq	r3, r3, r0, ror r8

00014ce8 <_obstack_allocated_p@@Base>:
   14ce8:	ldr	r0, [r0, #4]
   14cec:	cmp	r0, #0
   14cf0:	bne	14d04 <_obstack_allocated_p@@Base+0x1c>
   14cf4:	b	14d20 <_obstack_allocated_p@@Base+0x38>
   14cf8:	ldr	r0, [r0, #4]
   14cfc:	cmp	r0, #0
   14d00:	bxeq	lr
   14d04:	cmp	r1, r0
   14d08:	bls	14cf8 <_obstack_allocated_p@@Base+0x10>
   14d0c:	ldr	r3, [r0]
   14d10:	cmp	r1, r3
   14d14:	bhi	14cf8 <_obstack_allocated_p@@Base+0x10>
   14d18:	mov	r0, #1
   14d1c:	bx	lr
   14d20:	bx	lr

00014d24 <_obstack_free@@Base>:
   14d24:	push	{r4, r5, r6, lr}
   14d28:	mov	r4, r0
   14d2c:	ldr	r0, [r0, #4]
   14d30:	mov	r6, r1
   14d34:	cmp	r0, #0
   14d38:	bne	14d60 <_obstack_free@@Base+0x3c>
   14d3c:	b	14dac <_obstack_free@@Base+0x88>
   14d40:	ldr	r3, [r4, #32]
   14d44:	blx	r3
   14d48:	ldrb	r3, [r4, #40]	; 0x28
   14d4c:	cmp	r5, #0
   14d50:	orr	r3, r3, #2
   14d54:	strb	r3, [r4, #40]	; 0x28
   14d58:	beq	14dac <_obstack_free@@Base+0x88>
   14d5c:	mov	r0, r5
   14d60:	cmp	r6, r0
   14d64:	bls	14d74 <_obstack_free@@Base+0x50>
   14d68:	ldr	r3, [r0]
   14d6c:	cmp	r6, r3
   14d70:	bls	14d98 <_obstack_free@@Base+0x74>
   14d74:	ldrb	r3, [r4, #40]	; 0x28
   14d78:	ldr	r5, [r0, #4]
   14d7c:	tst	r3, #1
   14d80:	beq	14d40 <_obstack_free@@Base+0x1c>
   14d84:	mov	r1, r0
   14d88:	ldr	r3, [r4, #32]
   14d8c:	ldr	r0, [r4, #36]	; 0x24
   14d90:	blx	r3
   14d94:	b	14d48 <_obstack_free@@Base+0x24>
   14d98:	str	r6, [r4, #12]
   14d9c:	str	r6, [r4, #8]
   14da0:	str	r3, [r4, #16]
   14da4:	str	r0, [r4, #4]
   14da8:	pop	{r4, r5, r6, pc}
   14dac:	cmp	r6, #0
   14db0:	bne	14db8 <_obstack_free@@Base+0x94>
   14db4:	pop	{r4, r5, r6, pc}
   14db8:	bl	11394 <abort@plt>

00014dbc <_obstack_memory_used@@Base>:
   14dbc:	ldr	r3, [r0, #4]
   14dc0:	cmp	r3, #0
   14dc4:	beq	14de8 <_obstack_memory_used@@Base+0x2c>
   14dc8:	mov	r0, #0
   14dcc:	ldr	r2, [r3]
   14dd0:	sub	r2, r2, r3
   14dd4:	ldr	r3, [r3, #4]
   14dd8:	add	r0, r0, r2
   14ddc:	cmp	r3, #0
   14de0:	bne	14dcc <_obstack_memory_used@@Base+0x10>
   14de4:	bx	lr
   14de8:	mov	r0, r3
   14dec:	bx	lr
   14df0:	push	{r4, r5, r6, lr}
   14df4:	subs	r4, r0, #0
   14df8:	beq	14e6c <_obstack_memory_used@@Base+0xb0>
   14dfc:	mov	r1, #47	; 0x2f
   14e00:	bl	112e0 <strrchr@plt>
   14e04:	subs	r5, r0, #0
   14e08:	beq	14e58 <_obstack_memory_used@@Base+0x9c>
   14e0c:	add	r6, r5, #1
   14e10:	sub	r3, r6, r4
   14e14:	cmp	r3, #6
   14e18:	ble	14e58 <_obstack_memory_used@@Base+0x9c>
   14e1c:	mov	r2, #7
   14e20:	ldr	r1, [pc, #96]	; 14e88 <_obstack_memory_used@@Base+0xcc>
   14e24:	sub	r0, r5, #6
   14e28:	bl	11388 <strncmp@plt>
   14e2c:	cmp	r0, #0
   14e30:	bne	14e58 <_obstack_memory_used@@Base+0x9c>
   14e34:	mov	r2, #3
   14e38:	ldr	r1, [pc, #76]	; 14e8c <_obstack_memory_used@@Base+0xd0>
   14e3c:	mov	r0, r6
   14e40:	bl	11388 <strncmp@plt>
   14e44:	cmp	r0, #0
   14e48:	movne	r4, r6
   14e4c:	ldreq	r3, [pc, #60]	; 14e90 <_obstack_memory_used@@Base+0xd4>
   14e50:	addeq	r4, r5, #4
   14e54:	streq	r4, [r3]
   14e58:	ldr	r2, [pc, #52]	; 14e94 <_obstack_memory_used@@Base+0xd8>
   14e5c:	ldr	r3, [pc, #52]	; 14e98 <_obstack_memory_used@@Base+0xdc>
   14e60:	str	r4, [r2]
   14e64:	str	r4, [r3]
   14e68:	pop	{r4, r5, r6, pc}
   14e6c:	ldr	r3, [pc, #40]	; 14e9c <_obstack_memory_used@@Base+0xe0>
   14e70:	mov	r2, #55	; 0x37
   14e74:	mov	r1, #1
   14e78:	ldr	r3, [r3]
   14e7c:	ldr	r0, [pc, #28]	; 14ea0 <_obstack_memory_used@@Base+0xe4>
   14e80:	bl	111c0 <fwrite@plt>
   14e84:	bl	11394 <abort@plt>
   14e88:	andeq	lr, r1, r8, lsr #28
   14e8c:	andeq	lr, r1, r0, lsr lr
   14e90:			; <UNDEFINED> instruction: 0x000338b0
   14e94:	andeq	r3, r3, r4, ror #17
   14e98:			; <UNDEFINED> instruction: 0x000338b4
   14e9c:			; <UNDEFINED> instruction: 0x000338b8
   14ea0:	strdeq	lr, [r1], -r0
   14ea4:	push	{r4, r5, r6, r7, lr}
   14ea8:	sub	sp, sp, #36	; 0x24
   14eac:	cmp	r1, #0
   14eb0:	mov	r4, r0
   14eb4:	ldr	r5, [sp, #56]	; 0x38
   14eb8:	ldr	r6, [sp, #60]	; 0x3c
   14ebc:	beq	150fc <_obstack_memory_used@@Base+0x340>
   14ec0:	str	r3, [sp]
   14ec4:	mov	r3, r2
   14ec8:	mov	r2, r1
   14ecc:	ldr	r1, [pc, #564]	; 15108 <_obstack_memory_used@@Base+0x34c>
   14ed0:	bl	11280 <fprintf@plt>
   14ed4:	ldr	r3, [pc, #560]	; 1510c <_obstack_memory_used@@Base+0x350>
   14ed8:	ldr	r2, [pc, #560]	; 15110 <_obstack_memory_used@@Base+0x354>
   14edc:	ldr	r1, [pc, #560]	; 15114 <_obstack_memory_used@@Base+0x358>
   14ee0:	mov	r0, r4
   14ee4:	bl	11280 <fprintf@plt>
   14ee8:	mov	r1, r4
   14eec:	mov	r0, #10
   14ef0:	bl	112f8 <fputc@plt>
   14ef4:	ldr	r1, [pc, #540]	; 15118 <_obstack_memory_used@@Base+0x35c>
   14ef8:	ldr	r2, [pc, #540]	; 1511c <_obstack_memory_used@@Base+0x360>
   14efc:	mov	r0, r4
   14f00:	bl	11280 <fprintf@plt>
   14f04:	mov	r1, r4
   14f08:	mov	r0, #10
   14f0c:	bl	112f8 <fputc@plt>
   14f10:	cmp	r6, #9
   14f14:	ldrls	pc, [pc, r6, lsl #2]
   14f18:	b	14f44 <_obstack_memory_used@@Base+0x188>
   14f1c:	andeq	r4, r1, r4, lsl #31
   14f20:	ldrdeq	r4, [r1], -r0
   14f24:	andeq	r4, r1, r8, ror #31
   14f28:	andeq	r5, r1, r0
   14f2c:	andeq	r5, r1, r0, lsr #32
   14f30:	andeq	r5, r1, r8, asr #32
   14f34:	andeq	r5, r1, r8, rrx
   14f38:	muleq	r1, r0, r0
   14f3c:	andeq	r5, r1, r0, asr #1
   14f40:	andeq	r4, r1, ip, lsl #31
   14f44:	ldr	ip, [r5, #32]
   14f48:	ldr	r1, [r5, #28]
   14f4c:	ldm	r5, {r2, r3}
   14f50:	ldr	r7, [r5, #24]
   14f54:	ldr	r6, [r5, #20]
   14f58:	str	ip, [sp, #24]
   14f5c:	ldr	lr, [r5, #16]
   14f60:	str	r1, [sp, #20]
   14f64:	ldr	r1, [r5, #8]
   14f68:	ldr	ip, [r5, #12]
   14f6c:	mov	r0, r4
   14f70:	str	r7, [sp, #16]
   14f74:	stm	sp, {r1, ip, lr}
   14f78:	str	r6, [sp, #12]
   14f7c:	ldr	r1, [pc, #412]	; 15120 <_obstack_memory_used@@Base+0x364>
   14f80:	bl	11280 <fprintf@plt>
   14f84:	add	sp, sp, #36	; 0x24
   14f88:	pop	{r4, r5, r6, r7, pc}
   14f8c:	ldr	ip, [r5, #32]
   14f90:	ldr	r1, [r5, #28]
   14f94:	ldm	r5, {r2, r3}
   14f98:	ldr	r7, [r5, #24]
   14f9c:	ldr	r6, [r5, #20]
   14fa0:	str	ip, [sp, #24]
   14fa4:	ldr	lr, [r5, #16]
   14fa8:	str	r1, [sp, #20]
   14fac:	ldr	r1, [r5, #8]
   14fb0:	ldr	ip, [r5, #12]
   14fb4:	mov	r0, r4
   14fb8:	str	r7, [sp, #16]
   14fbc:	stm	sp, {r1, ip, lr}
   14fc0:	str	r6, [sp, #12]
   14fc4:	ldr	r1, [pc, #344]	; 15124 <_obstack_memory_used@@Base+0x368>
   14fc8:	bl	11280 <fprintf@plt>
   14fcc:	b	14f84 <_obstack_memory_used@@Base+0x1c8>
   14fd0:	ldr	r2, [r5]
   14fd4:	mov	r0, r4
   14fd8:	ldr	r1, [pc, #328]	; 15128 <_obstack_memory_used@@Base+0x36c>
   14fdc:	add	sp, sp, #36	; 0x24
   14fe0:	pop	{r4, r5, r6, r7, lr}
   14fe4:	b	11280 <fprintf@plt>
   14fe8:	mov	r0, r4
   14fec:	ldm	r5, {r2, r3}
   14ff0:	ldr	r1, [pc, #308]	; 1512c <_obstack_memory_used@@Base+0x370>
   14ff4:	add	sp, sp, #36	; 0x24
   14ff8:	pop	{r4, r5, r6, r7, lr}
   14ffc:	b	11280 <fprintf@plt>
   15000:	ldr	r1, [r5, #8]
   15004:	ldm	r5, {r2, r3}
   15008:	mov	r0, r4
   1500c:	str	r1, [sp, #56]	; 0x38
   15010:	ldr	r1, [pc, #280]	; 15130 <_obstack_memory_used@@Base+0x374>
   15014:	add	sp, sp, #36	; 0x24
   15018:	pop	{r4, r5, r6, r7, lr}
   1501c:	b	11280 <fprintf@plt>
   15020:	ldr	r1, [r5, #8]
   15024:	ldr	ip, [r5, #12]
   15028:	ldm	r5, {r2, r3}
   1502c:	mov	r0, r4
   15030:	str	r1, [sp, #56]	; 0x38
   15034:	str	ip, [sp, #60]	; 0x3c
   15038:	ldr	r1, [pc, #244]	; 15134 <_obstack_memory_used@@Base+0x378>
   1503c:	add	sp, sp, #36	; 0x24
   15040:	pop	{r4, r5, r6, r7, lr}
   15044:	b	11280 <fprintf@plt>
   15048:	add	r1, r5, #8
   1504c:	ldm	r5, {r2, r3}
   15050:	ldm	r1, {r1, ip, lr}
   15054:	mov	r0, r4
   15058:	stm	sp, {r1, ip, lr}
   1505c:	ldr	r1, [pc, #212]	; 15138 <_obstack_memory_used@@Base+0x37c>
   15060:	bl	11280 <fprintf@plt>
   15064:	b	14f84 <_obstack_memory_used@@Base+0x1c8>
   15068:	add	r1, r5, #8
   1506c:	ldr	r6, [r5, #20]
   15070:	ldm	r1, {r1, ip, lr}
   15074:	mov	r0, r4
   15078:	ldm	r5, {r2, r3}
   1507c:	str	r6, [sp, #12]
   15080:	stm	sp, {r1, ip, lr}
   15084:	ldr	r1, [pc, #176]	; 1513c <_obstack_memory_used@@Base+0x380>
   15088:	bl	11280 <fprintf@plt>
   1508c:	b	14f84 <_obstack_memory_used@@Base+0x1c8>
   15090:	add	r1, r5, #8
   15094:	ldr	r7, [r5, #24]
   15098:	ldm	r1, {r1, ip, lr}
   1509c:	mov	r0, r4
   150a0:	ldr	r6, [r5, #20]
   150a4:	ldm	r5, {r2, r3}
   150a8:	stm	sp, {r1, ip, lr}
   150ac:	str	r7, [sp, #16]
   150b0:	str	r6, [sp, #12]
   150b4:	ldr	r1, [pc, #132]	; 15140 <_obstack_memory_used@@Base+0x384>
   150b8:	bl	11280 <fprintf@plt>
   150bc:	b	14f84 <_obstack_memory_used@@Base+0x1c8>
   150c0:	ldr	r1, [r5, #28]
   150c4:	ldm	r5, {r2, r3}
   150c8:	ldr	r7, [r5, #24]
   150cc:	ldr	r6, [r5, #20]
   150d0:	ldr	lr, [r5, #16]
   150d4:	str	r1, [sp, #20]
   150d8:	ldr	r1, [r5, #8]
   150dc:	ldr	ip, [r5, #12]
   150e0:	mov	r0, r4
   150e4:	str	r7, [sp, #16]
   150e8:	stm	sp, {r1, ip, lr}
   150ec:	str	r6, [sp, #12]
   150f0:	ldr	r1, [pc, #76]	; 15144 <_obstack_memory_used@@Base+0x388>
   150f4:	bl	11280 <fprintf@plt>
   150f8:	b	14f84 <_obstack_memory_used@@Base+0x1c8>
   150fc:	ldr	r1, [pc, #68]	; 15148 <_obstack_memory_used@@Base+0x38c>
   15100:	bl	11280 <fprintf@plt>
   15104:	b	14ed4 <_obstack_memory_used@@Base+0x118>
   15108:	andeq	lr, r1, r4, lsr lr
   1510c:	andeq	r0, r0, r6, ror #15
   15110:	andeq	lr, r1, r8, asr #28
   15114:	andeq	pc, r1, r8, asr #2
   15118:	andeq	lr, r1, r0, ror lr
   1511c:	andeq	lr, r1, ip, asr #28
   15120:	andeq	pc, r1, ip, asr r0	; <UNPREDICTABLE>
   15124:	andeq	pc, r1, r8, lsr #32
   15128:	andeq	lr, r1, ip, lsl pc
   1512c:	andeq	lr, r1, ip, lsr #30
   15130:	andeq	lr, r1, r4, asr #30
   15134:	andeq	lr, r1, r0, ror #30
   15138:	andeq	lr, r1, r0, lsl #31
   1513c:	andeq	lr, r1, r4, lsr #31
   15140:	andeq	lr, r1, ip, asr #31
   15144:	strdeq	lr, [r1], -r8
   15148:	andeq	lr, r1, r0, asr #28
   1514c:	push	{r4, r5, r6, r7, lr}
   15150:	sub	sp, sp, #36	; 0x24
   15154:	mov	r6, r0
   15158:	ldr	r5, [sp, #56]	; 0x38
   1515c:	ldr	r4, [r5]
   15160:	cmp	r4, #0
   15164:	beq	15180 <_obstack_memory_used@@Base+0x3c4>
   15168:	mov	r0, r5
   1516c:	mov	r4, #0
   15170:	ldr	ip, [r0, #4]!
   15174:	add	r4, r4, #1
   15178:	cmp	ip, #0
   1517c:	bne	15170 <_obstack_memory_used@@Base+0x3b4>
   15180:	cmp	r1, #0
   15184:	beq	153c0 <_obstack_memory_used@@Base+0x604>
   15188:	str	r3, [sp]
   1518c:	mov	r0, r6
   15190:	mov	r3, r2
   15194:	mov	r2, r1
   15198:	ldr	r1, [pc, #560]	; 153d0 <_obstack_memory_used@@Base+0x614>
   1519c:	bl	11280 <fprintf@plt>
   151a0:	ldr	r3, [pc, #556]	; 153d4 <_obstack_memory_used@@Base+0x618>
   151a4:	ldr	r2, [pc, #556]	; 153d8 <_obstack_memory_used@@Base+0x61c>
   151a8:	ldr	r1, [pc, #556]	; 153dc <_obstack_memory_used@@Base+0x620>
   151ac:	mov	r0, r6
   151b0:	bl	11280 <fprintf@plt>
   151b4:	mov	r1, r6
   151b8:	mov	r0, #10
   151bc:	bl	112f8 <fputc@plt>
   151c0:	ldr	r1, [pc, #536]	; 153e0 <_obstack_memory_used@@Base+0x624>
   151c4:	ldr	r2, [pc, #536]	; 153e4 <_obstack_memory_used@@Base+0x628>
   151c8:	mov	r0, r6
   151cc:	bl	11280 <fprintf@plt>
   151d0:	mov	r1, r6
   151d4:	mov	r0, #10
   151d8:	bl	112f8 <fputc@plt>
   151dc:	cmp	r4, #9
   151e0:	ldrls	pc, [pc, r4, lsl #2]
   151e4:	b	15210 <_obstack_memory_used@@Base+0x454>
   151e8:	andeq	r5, r1, r0, asr r2
   151ec:	muleq	r1, ip, r2
   151f0:			; <UNDEFINED> instruction: 0x000152b4
   151f4:	andeq	r5, r1, ip, asr #5
   151f8:	andeq	r5, r1, ip, ror #5
   151fc:	andeq	r5, r1, ip, lsl #6
   15200:	andeq	r5, r1, ip, lsr #6
   15204:	andeq	r5, r1, r4, asr r3
   15208:	andeq	r5, r1, r4, lsl #7
   1520c:	andeq	r5, r1, r8, asr r2
   15210:	ldr	ip, [r5, #32]
   15214:	ldr	r1, [r5, #28]
   15218:	ldm	r5, {r2, r3}
   1521c:	ldr	r7, [r5, #24]
   15220:	ldr	r4, [r5, #20]
   15224:	str	ip, [sp, #24]
   15228:	ldr	lr, [r5, #16]
   1522c:	str	r1, [sp, #20]
   15230:	ldr	r1, [r5, #8]
   15234:	ldr	ip, [r5, #12]
   15238:	mov	r0, r6
   1523c:	str	r7, [sp, #16]
   15240:	stm	sp, {r1, ip, lr}
   15244:	str	r4, [sp, #12]
   15248:	ldr	r1, [pc, #408]	; 153e8 <_obstack_memory_used@@Base+0x62c>
   1524c:	bl	11280 <fprintf@plt>
   15250:	add	sp, sp, #36	; 0x24
   15254:	pop	{r4, r5, r6, r7, pc}
   15258:	ldr	ip, [r5, #32]
   1525c:	ldr	r1, [r5, #28]
   15260:	ldm	r5, {r2, r3}
   15264:	ldr	r7, [r5, #24]
   15268:	ldr	r4, [r5, #20]
   1526c:	str	ip, [sp, #24]
   15270:	ldr	lr, [r5, #16]
   15274:	str	r1, [sp, #20]
   15278:	ldr	r1, [r5, #8]
   1527c:	ldr	ip, [r5, #12]
   15280:	mov	r0, r6
   15284:	str	r7, [sp, #16]
   15288:	stm	sp, {r1, ip, lr}
   1528c:	str	r4, [sp, #12]
   15290:	ldr	r1, [pc, #340]	; 153ec <_obstack_memory_used@@Base+0x630>
   15294:	bl	11280 <fprintf@plt>
   15298:	b	15250 <_obstack_memory_used@@Base+0x494>
   1529c:	ldr	r2, [r5]
   152a0:	mov	r0, r6
   152a4:	ldr	r1, [pc, #324]	; 153f0 <_obstack_memory_used@@Base+0x634>
   152a8:	add	sp, sp, #36	; 0x24
   152ac:	pop	{r4, r5, r6, r7, lr}
   152b0:	b	11280 <fprintf@plt>
   152b4:	mov	r0, r6
   152b8:	ldm	r5, {r2, r3}
   152bc:	ldr	r1, [pc, #304]	; 153f4 <_obstack_memory_used@@Base+0x638>
   152c0:	add	sp, sp, #36	; 0x24
   152c4:	pop	{r4, r5, r6, r7, lr}
   152c8:	b	11280 <fprintf@plt>
   152cc:	ldr	r1, [r5, #8]
   152d0:	ldm	r5, {r2, r3}
   152d4:	mov	r0, r6
   152d8:	str	r1, [sp, #56]	; 0x38
   152dc:	ldr	r1, [pc, #276]	; 153f8 <_obstack_memory_used@@Base+0x63c>
   152e0:	add	sp, sp, #36	; 0x24
   152e4:	pop	{r4, r5, r6, r7, lr}
   152e8:	b	11280 <fprintf@plt>
   152ec:	ldr	r1, [r5, #8]
   152f0:	ldr	ip, [r5, #12]
   152f4:	ldm	r5, {r2, r3}
   152f8:	mov	r0, r6
   152fc:	stm	sp, {r1, ip}
   15300:	ldr	r1, [pc, #244]	; 153fc <_obstack_memory_used@@Base+0x640>
   15304:	bl	11280 <fprintf@plt>
   15308:	b	15250 <_obstack_memory_used@@Base+0x494>
   1530c:	add	r1, r5, #8
   15310:	ldm	r5, {r2, r3}
   15314:	ldm	r1, {r1, ip, lr}
   15318:	mov	r0, r6
   1531c:	stm	sp, {r1, ip, lr}
   15320:	ldr	r1, [pc, #216]	; 15400 <_obstack_memory_used@@Base+0x644>
   15324:	bl	11280 <fprintf@plt>
   15328:	b	15250 <_obstack_memory_used@@Base+0x494>
   1532c:	add	r1, r5, #8
   15330:	ldr	r4, [r5, #20]
   15334:	ldm	r1, {r1, ip, lr}
   15338:	mov	r0, r6
   1533c:	ldm	r5, {r2, r3}
   15340:	str	r4, [sp, #12]
   15344:	stm	sp, {r1, ip, lr}
   15348:	ldr	r1, [pc, #180]	; 15404 <_obstack_memory_used@@Base+0x648>
   1534c:	bl	11280 <fprintf@plt>
   15350:	b	15250 <_obstack_memory_used@@Base+0x494>
   15354:	add	r1, r5, #8
   15358:	ldr	r7, [r5, #24]
   1535c:	ldm	r1, {r1, ip, lr}
   15360:	mov	r0, r6
   15364:	ldr	r4, [r5, #20]
   15368:	ldm	r5, {r2, r3}
   1536c:	stm	sp, {r1, ip, lr}
   15370:	str	r7, [sp, #16]
   15374:	str	r4, [sp, #12]
   15378:	ldr	r1, [pc, #136]	; 15408 <_obstack_memory_used@@Base+0x64c>
   1537c:	bl	11280 <fprintf@plt>
   15380:	b	15250 <_obstack_memory_used@@Base+0x494>
   15384:	ldr	r1, [r5, #28]
   15388:	ldm	r5, {r2, r3}
   1538c:	ldr	r7, [r5, #24]
   15390:	ldr	r4, [r5, #20]
   15394:	ldr	lr, [r5, #16]
   15398:	str	r1, [sp, #20]
   1539c:	ldr	r1, [r5, #8]
   153a0:	ldr	ip, [r5, #12]
   153a4:	mov	r0, r6
   153a8:	str	r7, [sp, #16]
   153ac:	stm	sp, {r1, ip, lr}
   153b0:	str	r4, [sp, #12]
   153b4:	ldr	r1, [pc, #80]	; 1540c <_obstack_memory_used@@Base+0x650>
   153b8:	bl	11280 <fprintf@plt>
   153bc:	b	15250 <_obstack_memory_used@@Base+0x494>
   153c0:	ldr	r1, [pc, #72]	; 15410 <_obstack_memory_used@@Base+0x654>
   153c4:	mov	r0, r6
   153c8:	bl	11280 <fprintf@plt>
   153cc:	b	151a0 <_obstack_memory_used@@Base+0x3e4>
   153d0:	andeq	lr, r1, r4, lsr lr
   153d4:	andeq	r0, r0, r6, ror #15
   153d8:	andeq	lr, r1, r8, asr #28
   153dc:	andeq	pc, r1, r8, asr #2
   153e0:	andeq	lr, r1, r0, ror lr
   153e4:	andeq	lr, r1, ip, asr #28
   153e8:	andeq	pc, r1, ip, asr r0	; <UNPREDICTABLE>
   153ec:	andeq	pc, r1, r8, lsr #32
   153f0:	andeq	lr, r1, ip, lsl pc
   153f4:	andeq	lr, r1, ip, lsr #30
   153f8:	andeq	lr, r1, r4, asr #30
   153fc:	andeq	lr, r1, r0, ror #30
   15400:	andeq	lr, r1, r0, lsl #31
   15404:	andeq	lr, r1, r4, lsr #31
   15408:	andeq	lr, r1, ip, asr #31
   1540c:	strdeq	lr, [r1], -r8
   15410:	andeq	lr, r1, r0, asr #28
   15414:	push	{r4, r5, r6, lr}
   15418:	sub	sp, sp, #72	; 0x48
   1541c:	mov	r5, r0
   15420:	ldr	ip, [sp, #88]	; 0x58
   15424:	ldr	r0, [ip]
   15428:	cmp	r0, #0
   1542c:	str	r0, [sp, #32]
   15430:	beq	15738 <_obstack_memory_used@@Base+0x97c>
   15434:	ldr	r0, [ip, #4]
   15438:	cmp	r0, #0
   1543c:	str	r0, [sp, #36]	; 0x24
   15440:	beq	15740 <_obstack_memory_used@@Base+0x984>
   15444:	ldr	r0, [ip, #8]
   15448:	cmp	r0, #0
   1544c:	str	r0, [sp, #40]	; 0x28
   15450:	beq	15748 <_obstack_memory_used@@Base+0x98c>
   15454:	ldr	r0, [ip, #12]
   15458:	cmp	r0, #0
   1545c:	str	r0, [sp, #44]	; 0x2c
   15460:	beq	15750 <_obstack_memory_used@@Base+0x994>
   15464:	ldr	r0, [ip, #16]
   15468:	cmp	r0, #0
   1546c:	str	r0, [sp, #48]	; 0x30
   15470:	beq	15758 <_obstack_memory_used@@Base+0x99c>
   15474:	ldr	r0, [ip, #20]
   15478:	cmp	r0, #0
   1547c:	str	r0, [sp, #52]	; 0x34
   15480:	beq	15760 <_obstack_memory_used@@Base+0x9a4>
   15484:	ldr	r0, [ip, #24]
   15488:	cmp	r0, #0
   1548c:	str	r0, [sp, #56]	; 0x38
   15490:	beq	15768 <_obstack_memory_used@@Base+0x9ac>
   15494:	ldr	r0, [ip, #28]
   15498:	cmp	r0, #0
   1549c:	str	r0, [sp, #60]	; 0x3c
   154a0:	beq	15770 <_obstack_memory_used@@Base+0x9b4>
   154a4:	ldr	r0, [ip, #32]
   154a8:	cmp	r0, #0
   154ac:	str	r0, [sp, #64]	; 0x40
   154b0:	beq	15778 <_obstack_memory_used@@Base+0x9bc>
   154b4:	ldr	r0, [ip, #36]	; 0x24
   154b8:	cmp	r0, #0
   154bc:	movne	r4, #10
   154c0:	moveq	r4, #9
   154c4:	cmp	r1, #0
   154c8:	beq	15728 <_obstack_memory_used@@Base+0x96c>
   154cc:	str	r3, [sp]
   154d0:	mov	r0, r5
   154d4:	mov	r3, r2
   154d8:	mov	r2, r1
   154dc:	ldr	r1, [pc, #668]	; 15780 <_obstack_memory_used@@Base+0x9c4>
   154e0:	bl	11280 <fprintf@plt>
   154e4:	ldr	r3, [pc, #664]	; 15784 <_obstack_memory_used@@Base+0x9c8>
   154e8:	ldr	r2, [pc, #664]	; 15788 <_obstack_memory_used@@Base+0x9cc>
   154ec:	ldr	r1, [pc, #664]	; 1578c <_obstack_memory_used@@Base+0x9d0>
   154f0:	mov	r0, r5
   154f4:	bl	11280 <fprintf@plt>
   154f8:	mov	r1, r5
   154fc:	mov	r0, #10
   15500:	bl	112f8 <fputc@plt>
   15504:	ldr	r1, [pc, #644]	; 15790 <_obstack_memory_used@@Base+0x9d4>
   15508:	ldr	r2, [pc, #644]	; 15794 <_obstack_memory_used@@Base+0x9d8>
   1550c:	mov	r0, r5
   15510:	bl	11280 <fprintf@plt>
   15514:	mov	r1, r5
   15518:	mov	r0, #10
   1551c:	bl	112f8 <fputc@plt>
   15520:	cmp	r4, #9
   15524:	ldrls	pc, [pc, r4, lsl #2]
   15528:	b	15554 <_obstack_memory_used@@Base+0x798>
   1552c:	muleq	r1, r8, r5
   15530:	andeq	r5, r1, r8, ror #11
   15534:	andeq	r5, r1, r0, lsl #12
   15538:	andeq	r5, r1, ip, lsl r6
   1553c:	andeq	r5, r1, r0, asr #12
   15540:	andeq	r5, r1, r4, ror #12
   15544:	andeq	r5, r1, r8, lsl #13
   15548:			; <UNDEFINED> instruction: 0x000156b4
   1554c:	andeq	r5, r1, r8, ror #13
   15550:	andeq	r5, r1, r0, lsr #11
   15554:	ldr	ip, [sp, #64]	; 0x40
   15558:	ldr	r1, [sp, #60]	; 0x3c
   1555c:	ldr	lr, [sp, #48]	; 0x30
   15560:	str	ip, [sp, #24]
   15564:	str	r1, [sp, #20]
   15568:	ldr	ip, [sp, #44]	; 0x2c
   1556c:	ldr	r1, [sp, #40]	; 0x28
   15570:	ldr	r6, [sp, #56]	; 0x38
   15574:	ldr	r4, [sp, #52]	; 0x34
   15578:	stm	sp, {r1, ip, lr}
   1557c:	mov	r0, r5
   15580:	ldr	r3, [sp, #36]	; 0x24
   15584:	ldr	r2, [sp, #32]
   15588:	str	r6, [sp, #16]
   1558c:	str	r4, [sp, #12]
   15590:	ldr	r1, [pc, #512]	; 15798 <_obstack_memory_used@@Base+0x9dc>
   15594:	bl	11280 <fprintf@plt>
   15598:	add	sp, sp, #72	; 0x48
   1559c:	pop	{r4, r5, r6, pc}
   155a0:	ldr	ip, [sp, #64]	; 0x40
   155a4:	ldr	r1, [sp, #60]	; 0x3c
   155a8:	ldr	lr, [sp, #48]	; 0x30
   155ac:	str	ip, [sp, #24]
   155b0:	str	r1, [sp, #20]
   155b4:	ldr	ip, [sp, #44]	; 0x2c
   155b8:	ldr	r1, [sp, #40]	; 0x28
   155bc:	ldr	r6, [sp, #56]	; 0x38
   155c0:	ldr	r4, [sp, #52]	; 0x34
   155c4:	stm	sp, {r1, ip, lr}
   155c8:	mov	r0, r5
   155cc:	ldr	r3, [sp, #36]	; 0x24
   155d0:	ldr	r2, [sp, #32]
   155d4:	str	r6, [sp, #16]
   155d8:	str	r4, [sp, #12]
   155dc:	ldr	r1, [pc, #440]	; 1579c <_obstack_memory_used@@Base+0x9e0>
   155e0:	bl	11280 <fprintf@plt>
   155e4:	b	15598 <_obstack_memory_used@@Base+0x7dc>
   155e8:	mov	r0, r5
   155ec:	ldr	r2, [sp, #32]
   155f0:	ldr	r1, [pc, #424]	; 157a0 <_obstack_memory_used@@Base+0x9e4>
   155f4:	add	sp, sp, #72	; 0x48
   155f8:	pop	{r4, r5, r6, lr}
   155fc:	b	11280 <fprintf@plt>
   15600:	mov	r0, r5
   15604:	ldr	r3, [sp, #36]	; 0x24
   15608:	ldr	r2, [sp, #32]
   1560c:	ldr	r1, [pc, #400]	; 157a4 <_obstack_memory_used@@Base+0x9e8>
   15610:	add	sp, sp, #72	; 0x48
   15614:	pop	{r4, r5, r6, lr}
   15618:	b	11280 <fprintf@plt>
   1561c:	ldr	r1, [sp, #40]	; 0x28
   15620:	ldr	r3, [sp, #36]	; 0x24
   15624:	str	r1, [sp, #88]	; 0x58
   15628:	ldr	r2, [sp, #32]
   1562c:	mov	r0, r5
   15630:	ldr	r1, [pc, #368]	; 157a8 <_obstack_memory_used@@Base+0x9ec>
   15634:	add	sp, sp, #72	; 0x48
   15638:	pop	{r4, r5, r6, lr}
   1563c:	b	11280 <fprintf@plt>
   15640:	ldr	r1, [sp, #40]	; 0x28
   15644:	ldr	ip, [sp, #44]	; 0x2c
   15648:	ldr	r3, [sp, #36]	; 0x24
   1564c:	ldr	r2, [sp, #32]
   15650:	stm	sp, {r1, ip}
   15654:	mov	r0, r5
   15658:	ldr	r1, [pc, #332]	; 157ac <_obstack_memory_used@@Base+0x9f0>
   1565c:	bl	11280 <fprintf@plt>
   15660:	b	15598 <_obstack_memory_used@@Base+0x7dc>
   15664:	add	r1, sp, #40	; 0x28
   15668:	ldr	r3, [sp, #36]	; 0x24
   1566c:	ldm	r1, {r1, ip, lr}
   15670:	mov	r0, r5
   15674:	ldr	r2, [sp, #32]
   15678:	stm	sp, {r1, ip, lr}
   1567c:	ldr	r1, [pc, #300]	; 157b0 <_obstack_memory_used@@Base+0x9f4>
   15680:	bl	11280 <fprintf@plt>
   15684:	b	15598 <_obstack_memory_used@@Base+0x7dc>
   15688:	add	r1, sp, #40	; 0x28
   1568c:	ldr	r4, [sp, #52]	; 0x34
   15690:	ldm	r1, {r1, ip, lr}
   15694:	mov	r0, r5
   15698:	ldr	r3, [sp, #36]	; 0x24
   1569c:	ldr	r2, [sp, #32]
   156a0:	stm	sp, {r1, ip, lr}
   156a4:	str	r4, [sp, #12]
   156a8:	ldr	r1, [pc, #260]	; 157b4 <_obstack_memory_used@@Base+0x9f8>
   156ac:	bl	11280 <fprintf@plt>
   156b0:	b	15598 <_obstack_memory_used@@Base+0x7dc>
   156b4:	add	r1, sp, #40	; 0x28
   156b8:	ldr	r6, [sp, #56]	; 0x38
   156bc:	ldm	r1, {r1, ip, lr}
   156c0:	mov	r0, r5
   156c4:	ldr	r4, [sp, #52]	; 0x34
   156c8:	ldr	r3, [sp, #36]	; 0x24
   156cc:	stm	sp, {r1, ip, lr}
   156d0:	ldr	r2, [sp, #32]
   156d4:	str	r6, [sp, #16]
   156d8:	str	r4, [sp, #12]
   156dc:	ldr	r1, [pc, #212]	; 157b8 <_obstack_memory_used@@Base+0x9fc>
   156e0:	bl	11280 <fprintf@plt>
   156e4:	b	15598 <_obstack_memory_used@@Base+0x7dc>
   156e8:	ldr	r1, [sp, #60]	; 0x3c
   156ec:	ldr	lr, [sp, #48]	; 0x30
   156f0:	ldr	ip, [sp, #44]	; 0x2c
   156f4:	str	r1, [sp, #20]
   156f8:	ldr	r1, [sp, #40]	; 0x28
   156fc:	ldr	r6, [sp, #56]	; 0x38
   15700:	ldr	r4, [sp, #52]	; 0x34
   15704:	stm	sp, {r1, ip, lr}
   15708:	mov	r0, r5
   1570c:	ldr	r3, [sp, #36]	; 0x24
   15710:	ldr	r2, [sp, #32]
   15714:	str	r6, [sp, #16]
   15718:	str	r4, [sp, #12]
   1571c:	ldr	r1, [pc, #152]	; 157bc <_obstack_memory_used@@Base+0xa00>
   15720:	bl	11280 <fprintf@plt>
   15724:	b	15598 <_obstack_memory_used@@Base+0x7dc>
   15728:	ldr	r1, [pc, #144]	; 157c0 <_obstack_memory_used@@Base+0xa04>
   1572c:	mov	r0, r5
   15730:	bl	11280 <fprintf@plt>
   15734:	b	154e4 <_obstack_memory_used@@Base+0x728>
   15738:	mov	r4, r0
   1573c:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15740:	mov	r4, #1
   15744:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15748:	mov	r4, #2
   1574c:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15750:	mov	r4, #3
   15754:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15758:	mov	r4, #4
   1575c:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15760:	mov	r4, #5
   15764:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15768:	mov	r4, #6
   1576c:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15770:	mov	r4, #7
   15774:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15778:	mov	r4, #8
   1577c:	b	154c4 <_obstack_memory_used@@Base+0x708>
   15780:	andeq	lr, r1, r4, lsr lr
   15784:	andeq	r0, r0, r6, ror #15
   15788:	andeq	lr, r1, r8, asr #28
   1578c:	andeq	pc, r1, r8, asr #2
   15790:	andeq	lr, r1, r0, ror lr
   15794:	andeq	lr, r1, ip, asr #28
   15798:	andeq	pc, r1, ip, asr r0	; <UNPREDICTABLE>
   1579c:	andeq	pc, r1, r8, lsr #32
   157a0:	andeq	lr, r1, ip, lsl pc
   157a4:	andeq	lr, r1, ip, lsr #30
   157a8:	andeq	lr, r1, r4, asr #30
   157ac:	andeq	lr, r1, r0, ror #30
   157b0:	andeq	lr, r1, r0, lsl #31
   157b4:	andeq	lr, r1, r4, lsr #31
   157b8:	andeq	lr, r1, ip, asr #31
   157bc:	strdeq	lr, [r1], -r8
   157c0:	andeq	lr, r1, r0, asr #28
   157c4:	push	{r3}		; (str r3, [sp, #-4]!)
   157c8:	push	{r4, r5, r6, lr}
   157cc:	sub	sp, sp, #84	; 0x54
   157d0:	add	ip, sp, #104	; 0x68
   157d4:	ldr	lr, [sp, #104]	; 0x68
   157d8:	mov	r5, r0
   157dc:	cmp	lr, #0
   157e0:	str	lr, [sp, #40]	; 0x28
   157e4:	str	ip, [sp, #36]	; 0x24
   157e8:	beq	15af0 <_obstack_memory_used@@Base+0xd34>
   157ec:	ldr	r0, [sp, #108]	; 0x6c
   157f0:	cmp	r0, #0
   157f4:	str	r0, [sp, #44]	; 0x2c
   157f8:	beq	15af8 <_obstack_memory_used@@Base+0xd3c>
   157fc:	ldr	r0, [sp, #112]	; 0x70
   15800:	cmp	r0, #0
   15804:	str	r0, [sp, #48]	; 0x30
   15808:	beq	15b00 <_obstack_memory_used@@Base+0xd44>
   1580c:	ldr	r0, [sp, #116]	; 0x74
   15810:	cmp	r0, #0
   15814:	str	r0, [sp, #52]	; 0x34
   15818:	beq	15b08 <_obstack_memory_used@@Base+0xd4c>
   1581c:	ldr	r0, [sp, #120]	; 0x78
   15820:	cmp	r0, #0
   15824:	str	r0, [sp, #56]	; 0x38
   15828:	beq	15b10 <_obstack_memory_used@@Base+0xd54>
   1582c:	ldr	r0, [sp, #124]	; 0x7c
   15830:	cmp	r0, #0
   15834:	str	r0, [sp, #60]	; 0x3c
   15838:	beq	15b18 <_obstack_memory_used@@Base+0xd5c>
   1583c:	ldr	r0, [sp, #128]	; 0x80
   15840:	cmp	r0, #0
   15844:	str	r0, [sp, #64]	; 0x40
   15848:	beq	15b20 <_obstack_memory_used@@Base+0xd64>
   1584c:	ldr	r0, [sp, #132]	; 0x84
   15850:	cmp	r0, #0
   15854:	str	r0, [sp, #68]	; 0x44
   15858:	beq	15b28 <_obstack_memory_used@@Base+0xd6c>
   1585c:	ldr	r3, [sp, #136]	; 0x88
   15860:	cmp	r3, #0
   15864:	str	r3, [sp, #72]	; 0x48
   15868:	beq	15b30 <_obstack_memory_used@@Base+0xd74>
   1586c:	ldr	lr, [sp, #140]	; 0x8c
   15870:	cmp	lr, #0
   15874:	movne	r4, #10
   15878:	moveq	r4, #9
   1587c:	cmp	r1, #0
   15880:	ldr	r3, [sp, #100]	; 0x64
   15884:	beq	15ae0 <_obstack_memory_used@@Base+0xd24>
   15888:	str	r3, [sp]
   1588c:	mov	r0, r5
   15890:	mov	r3, r2
   15894:	mov	r2, r1
   15898:	ldr	r1, [pc, #664]	; 15b38 <_obstack_memory_used@@Base+0xd7c>
   1589c:	bl	11280 <fprintf@plt>
   158a0:	ldr	r3, [pc, #660]	; 15b3c <_obstack_memory_used@@Base+0xd80>
   158a4:	ldr	r2, [pc, #660]	; 15b40 <_obstack_memory_used@@Base+0xd84>
   158a8:	ldr	r1, [pc, #660]	; 15b44 <_obstack_memory_used@@Base+0xd88>
   158ac:	mov	r0, r5
   158b0:	bl	11280 <fprintf@plt>
   158b4:	mov	r1, r5
   158b8:	mov	r0, #10
   158bc:	bl	112f8 <fputc@plt>
   158c0:	ldr	r1, [pc, #640]	; 15b48 <_obstack_memory_used@@Base+0xd8c>
   158c4:	ldr	r2, [pc, #640]	; 15b4c <_obstack_memory_used@@Base+0xd90>
   158c8:	mov	r0, r5
   158cc:	bl	11280 <fprintf@plt>
   158d0:	mov	r1, r5
   158d4:	mov	r0, #10
   158d8:	bl	112f8 <fputc@plt>
   158dc:	cmp	r4, #9
   158e0:	ldrls	pc, [pc, r4, lsl #2]
   158e4:	b	15910 <_obstack_memory_used@@Base+0xb54>
   158e8:	andeq	r5, r1, r4, asr r9
   158ec:	andeq	r5, r1, ip, lsr #19
   158f0:	andeq	r5, r1, r0, asr #19
   158f4:	ldrdeq	r5, [r1], -r8
   158f8:	strdeq	r5, [r1], -r8
   158fc:	andeq	r5, r1, ip, lsl sl
   15900:	andeq	r5, r1, r0, asr #20
   15904:	andeq	r5, r1, ip, ror #20
   15908:	andeq	r5, r1, r0, lsr #21
   1590c:	andeq	r5, r1, r4, ror #18
   15910:	ldr	ip, [sp, #72]	; 0x48
   15914:	ldr	r1, [sp, #68]	; 0x44
   15918:	ldr	lr, [sp, #56]	; 0x38
   1591c:	str	ip, [sp, #24]
   15920:	str	r1, [sp, #20]
   15924:	ldr	ip, [sp, #52]	; 0x34
   15928:	ldr	r1, [sp, #48]	; 0x30
   1592c:	ldr	r6, [sp, #64]	; 0x40
   15930:	ldr	r4, [sp, #60]	; 0x3c
   15934:	stm	sp, {r1, ip, lr}
   15938:	mov	r0, r5
   1593c:	ldr	r3, [sp, #44]	; 0x2c
   15940:	ldr	r2, [sp, #40]	; 0x28
   15944:	str	r6, [sp, #16]
   15948:	str	r4, [sp, #12]
   1594c:	ldr	r1, [pc, #508]	; 15b50 <_obstack_memory_used@@Base+0xd94>
   15950:	bl	11280 <fprintf@plt>
   15954:	add	sp, sp, #84	; 0x54
   15958:	pop	{r4, r5, r6, lr}
   1595c:	add	sp, sp, #4
   15960:	bx	lr
   15964:	ldr	ip, [sp, #72]	; 0x48
   15968:	ldr	r1, [sp, #68]	; 0x44
   1596c:	ldr	lr, [sp, #56]	; 0x38
   15970:	str	ip, [sp, #24]
   15974:	str	r1, [sp, #20]
   15978:	ldr	ip, [sp, #52]	; 0x34
   1597c:	ldr	r1, [sp, #48]	; 0x30
   15980:	ldr	r6, [sp, #64]	; 0x40
   15984:	ldr	r4, [sp, #60]	; 0x3c
   15988:	stm	sp, {r1, ip, lr}
   1598c:	mov	r0, r5
   15990:	ldr	r3, [sp, #44]	; 0x2c
   15994:	ldr	r2, [sp, #40]	; 0x28
   15998:	str	r6, [sp, #16]
   1599c:	str	r4, [sp, #12]
   159a0:	ldr	r1, [pc, #428]	; 15b54 <_obstack_memory_used@@Base+0xd98>
   159a4:	bl	11280 <fprintf@plt>
   159a8:	b	15954 <_obstack_memory_used@@Base+0xb98>
   159ac:	mov	r0, r5
   159b0:	ldr	r2, [sp, #40]	; 0x28
   159b4:	ldr	r1, [pc, #412]	; 15b58 <_obstack_memory_used@@Base+0xd9c>
   159b8:	bl	11280 <fprintf@plt>
   159bc:	b	15954 <_obstack_memory_used@@Base+0xb98>
   159c0:	mov	r0, r5
   159c4:	ldr	r3, [sp, #44]	; 0x2c
   159c8:	ldr	r2, [sp, #40]	; 0x28
   159cc:	ldr	r1, [pc, #392]	; 15b5c <_obstack_memory_used@@Base+0xda0>
   159d0:	bl	11280 <fprintf@plt>
   159d4:	b	15954 <_obstack_memory_used@@Base+0xb98>
   159d8:	ldr	r1, [sp, #48]	; 0x30
   159dc:	ldr	r3, [sp, #44]	; 0x2c
   159e0:	str	r1, [sp]
   159e4:	ldr	r2, [sp, #40]	; 0x28
   159e8:	mov	r0, r5
   159ec:	ldr	r1, [pc, #364]	; 15b60 <_obstack_memory_used@@Base+0xda4>
   159f0:	bl	11280 <fprintf@plt>
   159f4:	b	15954 <_obstack_memory_used@@Base+0xb98>
   159f8:	ldr	r1, [sp, #48]	; 0x30
   159fc:	ldr	ip, [sp, #52]	; 0x34
   15a00:	ldr	r3, [sp, #44]	; 0x2c
   15a04:	ldr	r2, [sp, #40]	; 0x28
   15a08:	stm	sp, {r1, ip}
   15a0c:	mov	r0, r5
   15a10:	ldr	r1, [pc, #332]	; 15b64 <_obstack_memory_used@@Base+0xda8>
   15a14:	bl	11280 <fprintf@plt>
   15a18:	b	15954 <_obstack_memory_used@@Base+0xb98>
   15a1c:	add	r1, sp, #48	; 0x30
   15a20:	ldr	r3, [sp, #44]	; 0x2c
   15a24:	ldm	r1, {r1, ip, lr}
   15a28:	mov	r0, r5
   15a2c:	ldr	r2, [sp, #40]	; 0x28
   15a30:	stm	sp, {r1, ip, lr}
   15a34:	ldr	r1, [pc, #300]	; 15b68 <_obstack_memory_used@@Base+0xdac>
   15a38:	bl	11280 <fprintf@plt>
   15a3c:	b	15954 <_obstack_memory_used@@Base+0xb98>
   15a40:	add	r1, sp, #48	; 0x30
   15a44:	ldr	r4, [sp, #60]	; 0x3c
   15a48:	ldm	r1, {r1, ip, lr}
   15a4c:	mov	r0, r5
   15a50:	ldr	r3, [sp, #44]	; 0x2c
   15a54:	ldr	r2, [sp, #40]	; 0x28
   15a58:	stm	sp, {r1, ip, lr}
   15a5c:	str	r4, [sp, #12]
   15a60:	ldr	r1, [pc, #260]	; 15b6c <_obstack_memory_used@@Base+0xdb0>
   15a64:	bl	11280 <fprintf@plt>
   15a68:	b	15954 <_obstack_memory_used@@Base+0xb98>
   15a6c:	add	r1, sp, #48	; 0x30
   15a70:	ldr	r6, [sp, #64]	; 0x40
   15a74:	ldm	r1, {r1, ip, lr}
   15a78:	mov	r0, r5
   15a7c:	ldr	r4, [sp, #60]	; 0x3c
   15a80:	ldr	r3, [sp, #44]	; 0x2c
   15a84:	stm	sp, {r1, ip, lr}
   15a88:	ldr	r2, [sp, #40]	; 0x28
   15a8c:	str	r6, [sp, #16]
   15a90:	str	r4, [sp, #12]
   15a94:	ldr	r1, [pc, #212]	; 15b70 <_obstack_memory_used@@Base+0xdb4>
   15a98:	bl	11280 <fprintf@plt>
   15a9c:	b	15954 <_obstack_memory_used@@Base+0xb98>
   15aa0:	ldr	r1, [sp, #68]	; 0x44
   15aa4:	ldr	lr, [sp, #56]	; 0x38
   15aa8:	ldr	ip, [sp, #52]	; 0x34
   15aac:	str	r1, [sp, #20]
   15ab0:	ldr	r1, [sp, #48]	; 0x30
   15ab4:	ldr	r6, [sp, #64]	; 0x40
   15ab8:	ldr	r4, [sp, #60]	; 0x3c
   15abc:	stm	sp, {r1, ip, lr}
   15ac0:	mov	r0, r5
   15ac4:	ldr	r3, [sp, #44]	; 0x2c
   15ac8:	ldr	r2, [sp, #40]	; 0x28
   15acc:	str	r6, [sp, #16]
   15ad0:	str	r4, [sp, #12]
   15ad4:	ldr	r1, [pc, #152]	; 15b74 <_obstack_memory_used@@Base+0xdb8>
   15ad8:	bl	11280 <fprintf@plt>
   15adc:	b	15954 <_obstack_memory_used@@Base+0xb98>
   15ae0:	ldr	r1, [pc, #144]	; 15b78 <_obstack_memory_used@@Base+0xdbc>
   15ae4:	mov	r0, r5
   15ae8:	bl	11280 <fprintf@plt>
   15aec:	b	158a0 <_obstack_memory_used@@Base+0xae4>
   15af0:	mov	r4, lr
   15af4:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15af8:	mov	r4, #1
   15afc:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b00:	mov	r4, #2
   15b04:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b08:	mov	r4, #3
   15b0c:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b10:	mov	r4, #4
   15b14:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b18:	mov	r4, #5
   15b1c:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b20:	mov	r4, #6
   15b24:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b28:	mov	r4, #7
   15b2c:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b30:	mov	r4, #8
   15b34:	b	1587c <_obstack_memory_used@@Base+0xac0>
   15b38:	andeq	lr, r1, r4, lsr lr
   15b3c:	andeq	r0, r0, r6, ror #15
   15b40:	andeq	lr, r1, r8, asr #28
   15b44:	andeq	pc, r1, r8, asr #2
   15b48:	andeq	lr, r1, r0, ror lr
   15b4c:	andeq	lr, r1, ip, asr #28
   15b50:	andeq	pc, r1, ip, asr r0	; <UNPREDICTABLE>
   15b54:	andeq	pc, r1, r8, lsr #32
   15b58:	andeq	lr, r1, ip, lsl pc
   15b5c:	andeq	lr, r1, ip, lsr #30
   15b60:	andeq	lr, r1, r4, asr #30
   15b64:	andeq	lr, r1, r0, ror #30
   15b68:	andeq	lr, r1, r0, lsl #31
   15b6c:	andeq	lr, r1, r4, lsr #31
   15b70:	andeq	lr, r1, ip, asr #31
   15b74:	strdeq	lr, [r1], -r8
   15b78:	andeq	lr, r1, r0, asr #28
   15b7c:	ldr	r3, [pc, #56]	; 15bbc <_obstack_memory_used@@Base+0xe00>
   15b80:	push	{r4, lr}
   15b84:	mov	r0, #10
   15b88:	ldr	r1, [r3]
   15b8c:	bl	112f8 <fputc@plt>
   15b90:	ldr	r1, [pc, #40]	; 15bc0 <_obstack_memory_used@@Base+0xe04>
   15b94:	ldr	r0, [pc, #40]	; 15bc4 <_obstack_memory_used@@Base+0xe08>
   15b98:	bl	1110c <printf@plt>
   15b9c:	ldr	r1, [pc, #36]	; 15bc8 <_obstack_memory_used@@Base+0xe0c>
   15ba0:	ldr	r2, [pc, #36]	; 15bcc <_obstack_memory_used@@Base+0xe10>
   15ba4:	ldr	r0, [pc, #36]	; 15bd0 <_obstack_memory_used@@Base+0xe14>
   15ba8:	bl	1110c <printf@plt>
   15bac:	ldr	r1, [pc, #32]	; 15bd4 <_obstack_memory_used@@Base+0xe18>
   15bb0:	ldr	r0, [pc, #32]	; 15bd8 <_obstack_memory_used@@Base+0xe1c>
   15bb4:	pop	{r4, lr}
   15bb8:	b	1110c <printf@plt>
   15bbc:			; <UNDEFINED> instruction: 0x000338bc
   15bc0:	muleq	r1, r8, r0
   15bc4:	strheq	pc, [r1], -r0	; <UNPREDICTABLE>
   15bc8:	andeq	lr, r1, ip, asr #27
   15bcc:	andeq	pc, r1, r4, asr #1
   15bd0:	andeq	pc, r1, ip, ror #1
   15bd4:	andeq	pc, r1, r0, lsl #2
   15bd8:	andeq	pc, r1, r0, lsr #2
   15bdc:	push	{r4, r5, r6, lr}
   15be0:	mov	r6, r0
   15be4:	mov	r5, r1
   15be8:	mov	r4, r2
   15bec:	bl	1c02c <argp_error@@Base+0x1994>
   15bf0:	cmp	r0, #0
   15bf4:	popne	{r4, r5, r6, pc}
   15bf8:	cmp	r6, #0
   15bfc:	beq	15c0c <_obstack_memory_used@@Base+0xe50>
   15c00:	cmp	r5, #0
   15c04:	cmpne	r4, #0
   15c08:	popeq	{r4, r5, r6, pc}
   15c0c:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15c10:	push	{r4, lr}
   15c14:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   15c18:	cmp	r0, #0
   15c1c:	popne	{r4, pc}
   15c20:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15c24:	push	{r4, lr}
   15c28:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   15c2c:	cmp	r0, #0
   15c30:	popne	{r4, pc}
   15c34:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15c38:	push	{r4, lr}
   15c3c:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   15c40:	cmp	r0, #0
   15c44:	popne	{r4, pc}
   15c48:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15c4c:	push	{r4, r5, r6, lr}
   15c50:	mov	r5, r0
   15c54:	mov	r4, r1
   15c58:	bl	162f8 <_obstack_memory_used@@Base+0x153c>
   15c5c:	cmp	r0, #0
   15c60:	popne	{r4, r5, r6, pc}
   15c64:	adds	r4, r4, #0
   15c68:	movne	r4, #1
   15c6c:	cmp	r5, #0
   15c70:	orreq	r4, r4, #1
   15c74:	cmp	r4, #0
   15c78:	popeq	{r4, r5, r6, pc}
   15c7c:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15c80:	push	{r4, lr}
   15c84:	cmp	r1, #0
   15c88:	orreq	r1, r1, #1
   15c8c:	bl	162f8 <_obstack_memory_used@@Base+0x153c>
   15c90:	cmp	r0, #0
   15c94:	popne	{r4, pc}
   15c98:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15c9c:	push	{r4, r5, r6, lr}
   15ca0:	mov	r6, r0
   15ca4:	mov	r5, r1
   15ca8:	mov	r4, r2
   15cac:	bl	1c02c <argp_error@@Base+0x1994>
   15cb0:	cmp	r0, #0
   15cb4:	popne	{r4, r5, r6, pc}
   15cb8:	cmp	r6, #0
   15cbc:	beq	15ccc <_obstack_memory_used@@Base+0xf10>
   15cc0:	cmp	r5, #0
   15cc4:	cmpne	r4, #0
   15cc8:	popeq	{r4, r5, r6, pc}
   15ccc:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15cd0:	cmp	r2, #0
   15cd4:	cmpne	r1, #0
   15cd8:	moveq	r2, #1
   15cdc:	moveq	r1, r2
   15ce0:	push	{r4, lr}
   15ce4:	bl	1c02c <argp_error@@Base+0x1994>
   15ce8:	cmp	r0, #0
   15cec:	popne	{r4, pc}
   15cf0:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15cf4:	push	{r4, lr}
   15cf8:	mov	r2, r1
   15cfc:	mov	r1, r0
   15d00:	mov	r0, #0
   15d04:	bl	1c02c <argp_error@@Base+0x1994>
   15d08:	cmp	r0, #0
   15d0c:	popne	{r4, pc}
   15d10:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15d14:	cmp	r1, #0
   15d18:	cmpne	r0, #0
   15d1c:	moveq	r2, #1
   15d20:	movne	r2, r1
   15d24:	moveq	r1, r2
   15d28:	movne	r1, r0
   15d2c:	push	{r4, lr}
   15d30:	mov	r0, #0
   15d34:	bl	1c02c <argp_error@@Base+0x1994>
   15d38:	cmp	r0, #0
   15d3c:	popne	{r4, pc}
   15d40:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15d44:	cmp	r0, #0
   15d48:	push	{r4, r5, r6, lr}
   15d4c:	mov	r5, r1
   15d50:	ldr	r4, [r1]
   15d54:	beq	15d90 <_obstack_memory_used@@Base+0xfd4>
   15d58:	lsr	r2, r4, #1
   15d5c:	add	r3, r2, #1
   15d60:	mvn	r3, r3
   15d64:	cmp	r4, r3
   15d68:	bhi	15dac <_obstack_memory_used@@Base+0xff0>
   15d6c:	add	r4, r4, #1
   15d70:	add	r4, r4, r2
   15d74:	mov	r1, r4
   15d78:	mov	r2, #1
   15d7c:	bl	1c02c <argp_error@@Base+0x1994>
   15d80:	cmp	r0, #0
   15d84:	beq	15db0 <_obstack_memory_used@@Base+0xff4>
   15d88:	str	r4, [r5]
   15d8c:	pop	{r4, r5, r6, pc}
   15d90:	cmp	r4, #0
   15d94:	moveq	r4, #64	; 0x40
   15d98:	mov	r1, r4
   15d9c:	mov	r2, #1
   15da0:	bl	1c02c <argp_error@@Base+0x1994>
   15da4:	cmp	r0, #0
   15da8:	bne	15d88 <_obstack_memory_used@@Base+0xfcc>
   15dac:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15db0:	cmp	r4, #0
   15db4:	bne	15dac <_obstack_memory_used@@Base+0xff0>
   15db8:	str	r4, [r5]
   15dbc:	pop	{r4, r5, r6, pc}
   15dc0:	cmp	r0, #0
   15dc4:	push	{r4, r5, r6, lr}
   15dc8:	mov	r5, r1
   15dcc:	ldr	r4, [r1]
   15dd0:	mov	r6, r2
   15dd4:	beq	15e18 <_obstack_memory_used@@Base+0x105c>
   15dd8:	lsr	r1, r4, #1
   15ddc:	add	r3, r1, #1
   15de0:	mvn	r3, r3
   15de4:	cmp	r4, r3
   15de8:	bhi	15e50 <_obstack_memory_used@@Base+0x1094>
   15dec:	add	r4, r4, #1
   15df0:	add	r4, r4, r1
   15df4:	mov	r1, r4
   15df8:	bl	1c02c <argp_error@@Base+0x1994>
   15dfc:	cmp	r0, #0
   15e00:	bne	15e10 <_obstack_memory_used@@Base+0x1054>
   15e04:	cmp	r4, #0
   15e08:	cmpne	r6, #0
   15e0c:	bne	15e50 <_obstack_memory_used@@Base+0x1094>
   15e10:	str	r4, [r5]
   15e14:	pop	{r4, r5, r6, pc}
   15e18:	cmp	r4, #0
   15e1c:	bne	15e38 <_obstack_memory_used@@Base+0x107c>
   15e20:	mov	r1, r2
   15e24:	mov	r0, #64	; 0x40
   15e28:	bl	1c8e8 <argp_error@@Base+0x2250>
   15e2c:	cmp	r0, #0
   15e30:	movne	r4, r0
   15e34:	addeq	r4, r0, #1
   15e38:	mov	r2, r6
   15e3c:	mov	r1, r4
   15e40:	mov	r0, #0
   15e44:	bl	1c02c <argp_error@@Base+0x1994>
   15e48:	cmp	r0, #0
   15e4c:	bne	15e10 <_obstack_memory_used@@Base+0x1054>
   15e50:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   15e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e58:	sub	sp, sp, #12
   15e5c:	ldr	r6, [r1]
   15e60:	mov	r8, r1
   15e64:	mov	r9, r0
   15e68:	asrs	r4, r6, #1
   15e6c:	mov	sl, r2
   15e70:	mov	fp, r3
   15e74:	ldr	r7, [sp, #48]	; 0x30
   15e78:	bmi	15ff4 <_obstack_memory_used@@Base+0x1238>
   15e7c:	mvn	r1, #-2147483648	; 0x80000000
   15e80:	sub	r1, r1, r4
   15e84:	cmp	r6, r1
   15e88:	movle	r1, #0
   15e8c:	movgt	r1, #1
   15e90:	mvn	r3, fp
   15e94:	cmp	r1, #0
   15e98:	addeq	r4, r4, r6
   15e9c:	mvnne	r4, #-2147483648	; 0x80000000
   15ea0:	lsr	r3, r3, #31
   15ea4:	cmp	fp, r4
   15ea8:	movge	r2, #0
   15eac:	andlt	r2, r3, #1
   15eb0:	cmp	r2, #0
   15eb4:	beq	15fa4 <_obstack_memory_used@@Base+0x11e8>
   15eb8:	cmp	r7, #0
   15ebc:	blt	1608c <_obstack_memory_used@@Base+0x12d0>
   15ec0:	bne	16084 <_obstack_memory_used@@Base+0x12c8>
   15ec4:	mov	r5, #64	; 0x40
   15ec8:	mov	r1, r7
   15ecc:	mov	r0, r5
   15ed0:	str	r3, [sp, #4]
   15ed4:	bl	1caf4 <argp_error@@Base+0x245c>
   15ed8:	mov	r1, r7
   15edc:	mov	r4, r0
   15ee0:	mov	r0, r5
   15ee4:	bl	1cd14 <argp_error@@Base+0x267c>
   15ee8:	ldr	r3, [sp, #4]
   15eec:	sub	r5, r5, r1
   15ef0:	cmp	r9, #0
   15ef4:	sub	r2, r4, r6
   15ef8:	streq	r9, [r8]
   15efc:	cmp	r2, sl
   15f00:	bge	15f84 <_obstack_memory_used@@Base+0x11c8>
   15f04:	cmp	sl, #0
   15f08:	blt	16024 <_obstack_memory_used@@Base+0x1268>
   15f0c:	cmp	r6, #0
   15f10:	blt	15f30 <_obstack_memory_used@@Base+0x1174>
   15f14:	mvn	r2, #-2147483648	; 0x80000000
   15f18:	sub	r2, r2, sl
   15f1c:	cmp	r6, r2
   15f20:	movle	r2, #0
   15f24:	movgt	r2, #1
   15f28:	cmp	r2, #0
   15f2c:	bne	16020 <_obstack_memory_used@@Base+0x1264>
   15f30:	add	r6, r6, sl
   15f34:	cmp	fp, r6
   15f38:	movge	r3, #0
   15f3c:	andlt	r3, r3, #1
   15f40:	cmp	r3, #0
   15f44:	mov	r4, r6
   15f48:	bne	16020 <_obstack_memory_used@@Base+0x1264>
   15f4c:	cmp	r7, #0
   15f50:	blt	16038 <_obstack_memory_used@@Base+0x127c>
   15f54:	beq	15f80 <_obstack_memory_used@@Base+0x11c4>
   15f58:	cmp	r6, #0
   15f5c:	blt	160dc <_obstack_memory_used@@Base+0x1320>
   15f60:	mov	r1, r7
   15f64:	mvn	r0, #-2147483648	; 0x80000000
   15f68:	bl	1caf4 <argp_error@@Base+0x245c>
   15f6c:	cmp	r6, r0
   15f70:	movle	r0, #0
   15f74:	movgt	r0, #1
   15f78:	cmp	r0, #0
   15f7c:	bne	16020 <_obstack_memory_used@@Base+0x1264>
   15f80:	mul	r5, r6, r7
   15f84:	mov	r1, r5
   15f88:	mov	r0, r9
   15f8c:	bl	162f8 <_obstack_memory_used@@Base+0x153c>
   15f90:	cmp	r0, #0
   15f94:	beq	16008 <_obstack_memory_used@@Base+0x124c>
   15f98:	str	r4, [r8]
   15f9c:	add	sp, sp, #12
   15fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fa4:	cmp	r7, #0
   15fa8:	blt	16064 <_obstack_memory_used@@Base+0x12a8>
   15fac:	beq	15ec4 <_obstack_memory_used@@Base+0x1108>
   15fb0:	cmp	r4, #0
   15fb4:	blt	16094 <_obstack_memory_used@@Base+0x12d8>
   15fb8:	mov	r1, r7
   15fbc:	mvn	r0, #-2147483648	; 0x80000000
   15fc0:	str	r3, [sp, #4]
   15fc4:	bl	1caf4 <argp_error@@Base+0x245c>
   15fc8:	ldr	r3, [sp, #4]
   15fcc:	cmp	r0, r4
   15fd0:	movge	r0, #0
   15fd4:	movlt	r0, #1
   15fd8:	cmp	r0, #0
   15fdc:	mvnne	r5, #-2147483648	; 0x80000000
   15fe0:	bne	15ec8 <_obstack_memory_used@@Base+0x110c>
   15fe4:	mul	r5, r7, r4
   15fe8:	cmp	r5, #63	; 0x3f
   15fec:	bgt	15ef0 <_obstack_memory_used@@Base+0x1134>
   15ff0:	b	15ec4 <_obstack_memory_used@@Base+0x1108>
   15ff4:	rsb	r1, r4, #-2147483648	; 0x80000000
   15ff8:	cmp	r6, r1
   15ffc:	movge	r1, #0
   16000:	movlt	r1, #1
   16004:	b	15e90 <_obstack_memory_used@@Base+0x10d4>
   16008:	adds	r5, r5, #0
   1600c:	movne	r5, #1
   16010:	cmp	r9, #0
   16014:	orreq	r5, r5, #1
   16018:	cmp	r5, #0
   1601c:	beq	15f98 <_obstack_memory_used@@Base+0x11dc>
   16020:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   16024:	rsb	r2, sl, #-2147483648	; 0x80000000
   16028:	cmp	r6, r2
   1602c:	movge	r2, #0
   16030:	movlt	r2, #1
   16034:	b	15f28 <_obstack_memory_used@@Base+0x116c>
   16038:	cmp	r6, #0
   1603c:	blt	160c0 <_obstack_memory_used@@Base+0x1304>
   16040:	cmn	r7, #1
   16044:	beq	15f80 <_obstack_memory_used@@Base+0x11c4>
   16048:	mov	r1, r7
   1604c:	mov	r0, #-2147483648	; 0x80000000
   16050:	bl	1caf4 <argp_error@@Base+0x245c>
   16054:	cmp	r6, r0
   16058:	movle	r0, #0
   1605c:	movgt	r0, #1
   16060:	b	15f78 <_obstack_memory_used@@Base+0x11bc>
   16064:	cmp	r4, #0
   16068:	blt	16100 <_obstack_memory_used@@Base+0x1344>
   1606c:	cmn	r7, #1
   16070:	beq	15fe4 <_obstack_memory_used@@Base+0x1228>
   16074:	str	r3, [sp, #4]
   16078:	mov	r1, r7
   1607c:	mov	r0, #-2147483648	; 0x80000000
   16080:	b	15fc4 <_obstack_memory_used@@Base+0x1208>
   16084:	mov	r4, fp
   16088:	b	15fb8 <_obstack_memory_used@@Base+0x11fc>
   1608c:	mov	r4, fp
   16090:	b	1606c <_obstack_memory_used@@Base+0x12b0>
   16094:	cmn	r4, #1
   16098:	beq	15fe4 <_obstack_memory_used@@Base+0x1228>
   1609c:	mov	r1, r4
   160a0:	mov	r0, #-2147483648	; 0x80000000
   160a4:	str	r3, [sp, #4]
   160a8:	bl	1caf4 <argp_error@@Base+0x245c>
   160ac:	ldr	r3, [sp, #4]
   160b0:	cmp	r7, r0
   160b4:	movle	r0, #0
   160b8:	movgt	r0, #1
   160bc:	b	15fd8 <_obstack_memory_used@@Base+0x121c>
   160c0:	mov	r1, r7
   160c4:	mvn	r0, #-2147483648	; 0x80000000
   160c8:	bl	1caf4 <argp_error@@Base+0x245c>
   160cc:	cmp	r6, r0
   160d0:	movge	r0, #0
   160d4:	movlt	r0, #1
   160d8:	b	15f78 <_obstack_memory_used@@Base+0x11bc>
   160dc:	cmn	r6, #1
   160e0:	beq	15f80 <_obstack_memory_used@@Base+0x11c4>
   160e4:	mov	r1, r6
   160e8:	mov	r0, #-2147483648	; 0x80000000
   160ec:	bl	1caf4 <argp_error@@Base+0x245c>
   160f0:	cmp	r7, r0
   160f4:	movle	r0, #0
   160f8:	movgt	r0, #1
   160fc:	b	15f78 <_obstack_memory_used@@Base+0x11bc>
   16100:	mov	r1, r7
   16104:	mvn	r0, #-2147483648	; 0x80000000
   16108:	str	r3, [sp, #4]
   1610c:	bl	1caf4 <argp_error@@Base+0x245c>
   16110:	ldr	r3, [sp, #4]
   16114:	cmp	r0, r4
   16118:	movle	r0, #0
   1611c:	movgt	r0, #1
   16120:	b	15fd8 <_obstack_memory_used@@Base+0x121c>
   16124:	push	{r4, lr}
   16128:	mov	r1, #1
   1612c:	bl	16284 <_obstack_memory_used@@Base+0x14c8>
   16130:	cmp	r0, #0
   16134:	popne	{r4, pc}
   16138:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   1613c:	push	{r4, lr}
   16140:	mov	r1, #1
   16144:	bl	16284 <_obstack_memory_used@@Base+0x14c8>
   16148:	cmp	r0, #0
   1614c:	popne	{r4, pc}
   16150:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   16154:	push	{r4, lr}
   16158:	bl	16284 <_obstack_memory_used@@Base+0x14c8>
   1615c:	cmp	r0, #0
   16160:	popne	{r4, pc}
   16164:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   16168:	push	{r4, lr}
   1616c:	bl	16284 <_obstack_memory_used@@Base+0x14c8>
   16170:	cmp	r0, #0
   16174:	popne	{r4, pc}
   16178:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   1617c:	push	{r4, r5, r6, lr}
   16180:	mov	r6, r0
   16184:	mov	r0, r1
   16188:	mov	r4, r1
   1618c:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   16190:	subs	r5, r0, #0
   16194:	beq	161ac <_obstack_memory_used@@Base+0x13f0>
   16198:	mov	r2, r4
   1619c:	mov	r1, r6
   161a0:	bl	1116c <memcpy@plt>
   161a4:	mov	r0, r5
   161a8:	pop	{r4, r5, r6, pc}
   161ac:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   161b0:	push	{r4, r5, r6, lr}
   161b4:	mov	r6, r0
   161b8:	mov	r0, r1
   161bc:	mov	r4, r1
   161c0:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   161c4:	subs	r5, r0, #0
   161c8:	beq	161e0 <_obstack_memory_used@@Base+0x1424>
   161cc:	mov	r2, r4
   161d0:	mov	r1, r6
   161d4:	bl	1116c <memcpy@plt>
   161d8:	mov	r0, r5
   161dc:	pop	{r4, r5, r6, pc}
   161e0:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   161e4:	push	{r4, r5, r6, lr}
   161e8:	mov	r6, r0
   161ec:	add	r0, r1, #1
   161f0:	mov	r4, r1
   161f4:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   161f8:	subs	r5, r0, #0
   161fc:	beq	1621c <_obstack_memory_used@@Base+0x1460>
   16200:	mov	r3, #0
   16204:	mov	r1, r6
   16208:	strb	r3, [r5, r4]
   1620c:	mov	r2, r4
   16210:	bl	1116c <memcpy@plt>
   16214:	mov	r0, r5
   16218:	pop	{r4, r5, r6, pc}
   1621c:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   16220:	push	{r4, r5, r6, lr}
   16224:	mov	r6, r0
   16228:	bl	11268 <strlen@plt>
   1622c:	add	r4, r0, #1
   16230:	mov	r0, r4
   16234:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   16238:	subs	r5, r0, #0
   1623c:	beq	16254 <_obstack_memory_used@@Base+0x1498>
   16240:	mov	r2, r4
   16244:	mov	r1, r6
   16248:	bl	1116c <memcpy@plt>
   1624c:	mov	r0, r5
   16250:	pop	{r4, r5, r6, pc}
   16254:	bl	16258 <_obstack_memory_used@@Base+0x149c>
   16258:	ldr	r1, [pc, #24]	; 16278 <_obstack_memory_used@@Base+0x14bc>
   1625c:	push	{r4, lr}
   16260:	ldr	r0, [r1]
   16264:	ldr	r3, [pc, #16]	; 1627c <_obstack_memory_used@@Base+0x14c0>
   16268:	ldr	r2, [pc, #16]	; 16280 <_obstack_memory_used@@Base+0x14c4>
   1626c:	mov	r1, #0
   16270:	bl	111e4 <error@plt>
   16274:	bl	11394 <abort@plt>
   16278:	muleq	r3, ip, r8
   1627c:	ldrdeq	lr, [r1], -ip
   16280:	andeq	lr, r1, ip, lsr #25
   16284:	cmp	r1, #0
   16288:	cmpne	r0, #0
   1628c:	moveq	r1, #1
   16290:	moveq	r0, r1
   16294:	umull	r2, r3, r0, r1
   16298:	adds	r3, r3, #0
   1629c:	movne	r3, #1
   162a0:	cmp	r2, #0
   162a4:	blt	162b4 <_obstack_memory_used@@Base+0x14f8>
   162a8:	cmp	r3, #0
   162ac:	bne	162b4 <_obstack_memory_used@@Base+0x14f8>
   162b0:	b	110c4 <calloc@plt>
   162b4:	push	{r4, lr}
   162b8:	bl	1128c <__errno_location@plt>
   162bc:	mov	r3, #12
   162c0:	str	r3, [r0]
   162c4:	mov	r0, #0
   162c8:	pop	{r4, pc}
   162cc:	cmp	r0, #0
   162d0:	moveq	r0, #1
   162d4:	cmp	r0, #0
   162d8:	blt	162e0 <_obstack_memory_used@@Base+0x1524>
   162dc:	b	11208 <malloc@plt>
   162e0:	push	{r4, lr}
   162e4:	bl	1128c <__errno_location@plt>
   162e8:	mov	r3, #12
   162ec:	str	r3, [r0]
   162f0:	mov	r0, #0
   162f4:	pop	{r4, pc}
   162f8:	cmp	r0, #0
   162fc:	beq	16320 <_obstack_memory_used@@Base+0x1564>
   16300:	cmp	r1, #0
   16304:	push	{lr}		; (str lr, [sp, #-4]!)
   16308:	sub	sp, sp, #12
   1630c:	beq	16328 <_obstack_memory_used@@Base+0x156c>
   16310:	blt	16340 <_obstack_memory_used@@Base+0x1584>
   16314:	add	sp, sp, #12
   16318:	pop	{lr}		; (ldr lr, [sp], #4)
   1631c:	b	1119c <realloc@plt>
   16320:	mov	r0, r1
   16324:	b	162cc <_obstack_memory_used@@Base+0x1510>
   16328:	str	r1, [sp, #4]
   1632c:	bl	148c4 <argp_parse@@Base+0xf7c>
   16330:	ldr	r3, [sp, #4]
   16334:	mov	r0, r3
   16338:	add	sp, sp, #12
   1633c:	pop	{pc}		; (ldr pc, [sp], #4)
   16340:	bl	1128c <__errno_location@plt>
   16344:	mov	r2, #12
   16348:	mov	r3, #0
   1634c:	str	r2, [r0]
   16350:	b	16334 <_obstack_memory_used@@Base+0x1578>
   16354:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16358:	mov	r7, r3
   1635c:	ldr	sl, [r0, #12]
   16360:	sub	sp, sp, #36	; 0x24
   16364:	ldr	r3, [r0, #16]
   16368:	cmp	sl, #0
   1636c:	mov	fp, r0
   16370:	mov	r6, r2
   16374:	str	r3, [sp, #16]
   16378:	mov	r9, r1
   1637c:	ldr	r8, [sp, #72]	; 0x48
   16380:	ldr	r5, [sp, #76]	; 0x4c
   16384:	beq	16754 <_obstack_memory_used@@Base+0x1998>
   16388:	mov	r1, #11
   1638c:	mov	r0, sl
   16390:	bl	11274 <strchr@plt>
   16394:	cmp	r6, #0
   16398:	bne	16670 <_obstack_memory_used@@Base+0x18b4>
   1639c:	cmp	r0, #0
   163a0:	ldr	r3, [fp, #20]
   163a4:	beq	168ac <_obstack_memory_used@@Base+0x1af0>
   163a8:	cmp	r3, #0
   163ac:	sub	r4, r0, sl
   163b0:	beq	16844 <_obstack_memory_used@@Base+0x1a88>
   163b4:	cmp	r4, #0
   163b8:	beq	167e4 <_obstack_memory_used@@Base+0x1a28>
   163bc:	mov	r0, sl
   163c0:	mov	r1, r4
   163c4:	bl	11160 <strndup@plt>
   163c8:	mov	r3, #1
   163cc:	str	r3, [sp, #24]
   163d0:	mov	sl, r0
   163d4:	adds	r3, r0, #0
   163d8:	movne	r3, #1
   163dc:	str	r3, [sp, #20]
   163e0:	mov	r1, r9
   163e4:	mov	r0, fp
   163e8:	bl	14768 <argp_parse@@Base+0xe20>
   163ec:	ldr	r3, [fp, #20]
   163f0:	str	r0, [sp, #12]
   163f4:	ldr	r0, [pc, #1272]	; 168f4 <_obstack_memory_used@@Base+0x1b38>
   163f8:	ldr	r2, [sp, #12]
   163fc:	mov	r1, sl
   16400:	blx	r3
   16404:	subs	r3, r0, #0
   16408:	beq	16794 <_obstack_memory_used@@Base+0x19d8>
   1640c:	cmp	r7, #0
   16410:	beq	16434 <_obstack_memory_used@@Base+0x1678>
   16414:	ldr	r2, [r5, #28]
   16418:	ldr	r1, [r5, #32]
   1641c:	cmp	r2, r1
   16420:	bcs	1679c <_obstack_memory_used@@Base+0x19e0>
   16424:	add	r0, r2, #1
   16428:	mov	r1, #10
   1642c:	str	r0, [r5, #28]
   16430:	strb	r1, [r2]
   16434:	ldr	r2, [sp, #24]
   16438:	cmp	sl, r3
   1643c:	movne	r2, #0
   16440:	andeq	r2, r2, #1
   16444:	cmp	r2, #0
   16448:	beq	166b4 <_obstack_memory_used@@Base+0x18f8>
   1644c:	ldr	r0, [r5, #28]
   16450:	ldr	r1, [r5, #32]
   16454:	add	r2, r0, r4
   16458:	cmp	r1, r2
   1645c:	bcs	16714 <_obstack_memory_used@@Base+0x1958>
   16460:	mov	r1, r4
   16464:	mov	r0, r5
   16468:	str	r3, [sp, #24]
   1646c:	bl	1c6a0 <argp_error@@Base+0x2008>
   16470:	ldr	r3, [sp, #24]
   16474:	cmp	r0, #0
   16478:	bne	16710 <_obstack_memory_used@@Base+0x1954>
   1647c:	ldr	r4, [r5, #28]
   16480:	ldr	r1, [r5, #24]
   16484:	ldr	r2, [r5, #16]
   16488:	sub	r4, r4, r1
   1648c:	cmp	r4, r2
   16490:	bhi	16738 <_obstack_memory_used@@Base+0x197c>
   16494:	ldr	r2, [r5, #20]
   16498:	ldr	r1, [r5, #4]
   1649c:	bic	r2, r2, r2, asr #31
   164a0:	cmp	r1, r2
   164a4:	bcs	164c8 <_obstack_memory_used@@Base+0x170c>
   164a8:	ldr	r2, [r5, #28]
   164ac:	ldr	r1, [r5, #32]
   164b0:	cmp	r2, r1
   164b4:	bcs	167c0 <_obstack_memory_used@@Base+0x1a04>
   164b8:	add	r0, r2, #1
   164bc:	mov	r1, #10
   164c0:	str	r0, [r5, #28]
   164c4:	strb	r1, [r2]
   164c8:	cmp	sl, r3
   164cc:	moveq	r4, #1
   164d0:	beq	164e0 <_obstack_memory_used@@Base+0x1724>
   164d4:	mov	r0, r3
   164d8:	bl	148c4 <argp_parse@@Base+0xf7c>
   164dc:	mov	r4, #1
   164e0:	ldr	r3, [sp, #20]
   164e4:	cmp	r3, #0
   164e8:	beq	16500 <_obstack_memory_used@@Base+0x1744>
   164ec:	ldr	r3, [fp, #20]
   164f0:	cmp	r3, #0
   164f4:	beq	165e4 <_obstack_memory_used@@Base+0x1828>
   164f8:	mov	r0, sl
   164fc:	bl	148c4 <argp_parse@@Base+0xf7c>
   16500:	cmp	r6, #0
   16504:	beq	165e4 <_obstack_memory_used@@Base+0x1828>
   16508:	ldr	r3, [fp, #20]
   1650c:	cmp	r3, #0
   16510:	beq	165e4 <_obstack_memory_used@@Base+0x1828>
   16514:	ldr	r2, [sp, #12]
   16518:	mov	r1, #0
   1651c:	ldr	r0, [pc, #980]	; 168f8 <_obstack_memory_used@@Base+0x1b3c>
   16520:	blx	r3
   16524:	subs	sl, r0, #0
   16528:	beq	165e4 <_obstack_memory_used@@Base+0x1828>
   1652c:	orrs	r3, r7, r4
   16530:	beq	16554 <_obstack_memory_used@@Base+0x1798>
   16534:	ldr	r3, [r5, #28]
   16538:	ldr	r2, [r5, #32]
   1653c:	cmp	r3, r2
   16540:	bcs	1687c <_obstack_memory_used@@Base+0x1ac0>
   16544:	add	r1, r3, #1
   16548:	mov	r2, #10
   1654c:	str	r1, [r5, #28]
   16550:	strb	r2, [r3]
   16554:	mov	r0, sl
   16558:	bl	11268 <strlen@plt>
   1655c:	subs	r4, r0, #0
   16560:	beq	1658c <_obstack_memory_used@@Base+0x17d0>
   16564:	ldr	r0, [r5, #28]
   16568:	ldr	r2, [r5, #32]
   1656c:	add	r3, r0, r4
   16570:	cmp	r2, r3
   16574:	bcs	167f4 <_obstack_memory_used@@Base+0x1a38>
   16578:	mov	r1, r4
   1657c:	mov	r0, r5
   16580:	bl	1c6a0 <argp_error@@Base+0x2008>
   16584:	cmp	r0, #0
   16588:	bne	167f0 <_obstack_memory_used@@Base+0x1a34>
   1658c:	mov	r0, sl
   16590:	bl	148c4 <argp_parse@@Base+0xf7c>
   16594:	ldr	r3, [r5, #28]
   16598:	ldr	r1, [r5, #24]
   1659c:	ldr	r2, [r5, #16]
   165a0:	sub	r3, r3, r1
   165a4:	cmp	r3, r2
   165a8:	bhi	16810 <_obstack_memory_used@@Base+0x1a54>
   165ac:	ldr	r3, [r5, #20]
   165b0:	ldr	r2, [r5, #4]
   165b4:	bic	r3, r3, r3, asr #31
   165b8:	cmp	r2, r3
   165bc:	bcs	1674c <_obstack_memory_used@@Base+0x1990>
   165c0:	ldr	r3, [r5, #28]
   165c4:	ldr	r2, [r5, #32]
   165c8:	cmp	r3, r2
   165cc:	bcs	16860 <_obstack_memory_used@@Base+0x1aa4>
   165d0:	mov	r4, #1
   165d4:	add	r2, r3, r4
   165d8:	str	r2, [r5, #28]
   165dc:	mov	r2, #10
   165e0:	strb	r2, [r3]
   165e4:	ldr	fp, [sp, #16]
   165e8:	cmp	fp, #0
   165ec:	beq	16664 <_obstack_memory_used@@Base+0x18a8>
   165f0:	ldr	r3, [fp]
   165f4:	cmp	r3, #0
   165f8:	beq	16664 <_obstack_memory_used@@Base+0x18a8>
   165fc:	eor	r2, r4, #1
   16600:	and	r2, r2, #1
   16604:	clz	sl, r8
   16608:	lsr	sl, sl, #5
   1660c:	orrs	r2, sl, r2
   16610:	bne	1662c <_obstack_memory_used@@Base+0x1870>
   16614:	b	16898 <_obstack_memory_used@@Base+0x1adc>
   16618:	cmp	r4, #0
   1661c:	movne	r2, sl
   16620:	orreq	r2, sl, #1
   16624:	cmp	r2, #0
   16628:	beq	16664 <_obstack_memory_used@@Base+0x18a8>
   1662c:	orrs	r2, r7, r4
   16630:	mov	r0, r3
   16634:	str	r5, [sp, #4]
   16638:	movne	r3, #1
   1663c:	moveq	r3, #0
   16640:	str	r8, [sp]
   16644:	mov	r2, r6
   16648:	mov	r1, r9
   1664c:	bl	16354 <_obstack_memory_used@@Base+0x1598>
   16650:	ldr	r3, [fp, #16]
   16654:	add	fp, fp, #16
   16658:	cmp	r3, #0
   1665c:	orr	r4, r4, r0
   16660:	bne	16618 <_obstack_memory_used@@Base+0x185c>
   16664:	mov	r0, r4
   16668:	add	sp, sp, #36	; 0x24
   1666c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16670:	cmp	r0, #0
   16674:	addne	sl, r0, #1
   16678:	beq	1683c <_obstack_memory_used@@Base+0x1a80>
   1667c:	ldr	r3, [fp, #20]
   16680:	cmp	r3, #0
   16684:	beq	1681c <_obstack_memory_used@@Base+0x1a60>
   16688:	mov	r3, #0
   1668c:	mov	r1, r9
   16690:	mov	r0, fp
   16694:	mov	r4, r3
   16698:	str	r3, [sp, #20]
   1669c:	bl	14768 <argp_parse@@Base+0xe20>
   166a0:	str	r4, [sp, #24]
   166a4:	ldr	r3, [fp, #20]
   166a8:	str	r0, [sp, #12]
   166ac:	ldr	r0, [pc, #584]	; 168fc <_obstack_memory_used@@Base+0x1b40>
   166b0:	b	163f8 <_obstack_memory_used@@Base+0x163c>
   166b4:	mov	r0, r3
   166b8:	str	r3, [sp, #24]
   166bc:	bl	11268 <strlen@plt>
   166c0:	ldr	r3, [sp, #24]
   166c4:	subs	r4, r0, #0
   166c8:	beq	1647c <_obstack_memory_used@@Base+0x16c0>
   166cc:	ldr	r0, [r5, #28]
   166d0:	ldr	r1, [r5, #32]
   166d4:	add	r2, r0, r4
   166d8:	cmp	r1, r2
   166dc:	bcs	16700 <_obstack_memory_used@@Base+0x1944>
   166e0:	mov	r1, r4
   166e4:	mov	r0, r5
   166e8:	str	r3, [sp, #24]
   166ec:	bl	1c6a0 <argp_error@@Base+0x2008>
   166f0:	ldr	r3, [sp, #24]
   166f4:	cmp	r0, #0
   166f8:	beq	1647c <_obstack_memory_used@@Base+0x16c0>
   166fc:	ldr	r0, [r5, #28]
   16700:	mov	r2, r4
   16704:	mov	r1, r3
   16708:	str	r3, [sp, #24]
   1670c:	b	16720 <_obstack_memory_used@@Base+0x1964>
   16710:	ldr	r0, [r5, #28]
   16714:	mov	r2, r4
   16718:	mov	r1, sl
   1671c:	str	r3, [sp, #24]
   16720:	bl	1116c <memcpy@plt>
   16724:	ldr	r2, [r5, #28]
   16728:	ldr	r3, [sp, #24]
   1672c:	add	r4, r2, r4
   16730:	str	r4, [r5, #28]
   16734:	b	16480 <_obstack_memory_used@@Base+0x16c4>
   16738:	mov	r0, r5
   1673c:	str	r3, [sp, #24]
   16740:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   16744:	ldr	r3, [sp, #24]
   16748:	b	16494 <_obstack_memory_used@@Base+0x16d8>
   1674c:	mov	r4, #1
   16750:	b	165e4 <_obstack_memory_used@@Base+0x1828>
   16754:	ldr	r4, [r0, #20]
   16758:	cmp	r4, #0
   1675c:	beq	168a4 <_obstack_memory_used@@Base+0x1ae8>
   16760:	bl	14768 <argp_parse@@Base+0xe20>
   16764:	cmp	r6, #0
   16768:	ldr	r3, [fp, #20]
   1676c:	strne	sl, [sp, #20]
   16770:	strne	sl, [sp, #24]
   16774:	movne	r4, sl
   16778:	streq	r6, [sp, #20]
   1677c:	streq	r6, [sp, #24]
   16780:	moveq	r4, r6
   16784:	str	r0, [sp, #12]
   16788:	ldrne	r0, [pc, #364]	; 168fc <_obstack_memory_used@@Base+0x1b40>
   1678c:	ldreq	r0, [pc, #352]	; 168f4 <_obstack_memory_used@@Base+0x1b38>
   16790:	b	163f8 <_obstack_memory_used@@Base+0x163c>
   16794:	mov	r4, r3
   16798:	b	164e0 <_obstack_memory_used@@Base+0x1724>
   1679c:	mov	r1, #1
   167a0:	mov	r0, r5
   167a4:	str	r3, [sp, #28]
   167a8:	bl	1c6a0 <argp_error@@Base+0x2008>
   167ac:	ldr	r3, [sp, #28]
   167b0:	cmp	r0, #0
   167b4:	beq	16434 <_obstack_memory_used@@Base+0x1678>
   167b8:	ldr	r2, [r5, #28]
   167bc:	b	16424 <_obstack_memory_used@@Base+0x1668>
   167c0:	mov	r1, #1
   167c4:	mov	r0, r5
   167c8:	str	r3, [sp, #24]
   167cc:	bl	1c6a0 <argp_error@@Base+0x2008>
   167d0:	ldr	r3, [sp, #24]
   167d4:	cmp	r0, #0
   167d8:	beq	164c8 <_obstack_memory_used@@Base+0x170c>
   167dc:	ldr	r2, [r5, #28]
   167e0:	b	164b8 <_obstack_memory_used@@Base+0x16fc>
   167e4:	str	r4, [sp, #20]
   167e8:	str	r4, [sp, #24]
   167ec:	b	163e0 <_obstack_memory_used@@Base+0x1624>
   167f0:	ldr	r0, [r5, #28]
   167f4:	mov	r2, r4
   167f8:	mov	r1, sl
   167fc:	bl	1116c <memcpy@plt>
   16800:	ldr	r3, [r5, #28]
   16804:	add	r4, r3, r4
   16808:	str	r4, [r5, #28]
   1680c:	b	1658c <_obstack_memory_used@@Base+0x17d0>
   16810:	mov	r0, r5
   16814:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   16818:	b	165ac <_obstack_memory_used@@Base+0x17f0>
   1681c:	cmp	sl, #0
   16820:	beq	168a0 <_obstack_memory_used@@Base+0x1ae4>
   16824:	str	r3, [sp, #20]
   16828:	str	r3, [sp, #24]
   1682c:	mov	r4, r3
   16830:	str	r3, [sp, #12]
   16834:	mov	r3, sl
   16838:	b	1640c <_obstack_memory_used@@Base+0x1650>
   1683c:	mov	sl, r0
   16840:	b	1667c <_obstack_memory_used@@Base+0x18c0>
   16844:	adds	r3, r4, #0
   16848:	movne	r3, #1
   1684c:	str	r3, [sp, #24]
   16850:	str	r3, [sp, #20]
   16854:	str	r6, [sp, #12]
   16858:	mov	r3, sl
   1685c:	b	1640c <_obstack_memory_used@@Base+0x1650>
   16860:	mov	r1, #1
   16864:	mov	r0, r5
   16868:	bl	1c6a0 <argp_error@@Base+0x2008>
   1686c:	cmp	r0, #0
   16870:	beq	1674c <_obstack_memory_used@@Base+0x1990>
   16874:	ldr	r3, [r5, #28]
   16878:	b	165d0 <_obstack_memory_used@@Base+0x1814>
   1687c:	mov	r1, #1
   16880:	mov	r0, r5
   16884:	bl	1c6a0 <argp_error@@Base+0x2008>
   16888:	cmp	r0, #0
   1688c:	beq	16554 <_obstack_memory_used@@Base+0x1798>
   16890:	ldr	r3, [r5, #28]
   16894:	b	16544 <_obstack_memory_used@@Base+0x1788>
   16898:	mov	r4, #1
   1689c:	b	16664 <_obstack_memory_used@@Base+0x18a8>
   168a0:	mov	r4, sl
   168a4:	str	r4, [sp, #12]
   168a8:	b	16500 <_obstack_memory_used@@Base+0x1744>
   168ac:	cmp	r3, #0
   168b0:	beq	168dc <_obstack_memory_used@@Base+0x1b20>
   168b4:	mov	r1, r9
   168b8:	mov	r0, fp
   168bc:	bl	14768 <argp_parse@@Base+0xe20>
   168c0:	mov	r4, r6
   168c4:	ldr	r3, [fp, #20]
   168c8:	str	r6, [sp, #20]
   168cc:	str	r6, [sp, #24]
   168d0:	str	r0, [sp, #12]
   168d4:	ldr	r0, [pc, #24]	; 168f4 <_obstack_memory_used@@Base+0x1b38>
   168d8:	b	163f8 <_obstack_memory_used@@Base+0x163c>
   168dc:	mov	r3, sl
   168e0:	str	r6, [sp, #20]
   168e4:	str	r6, [sp, #24]
   168e8:	mov	r4, r6
   168ec:	str	r6, [sp, #12]
   168f0:	b	1640c <_obstack_memory_used@@Base+0x1650>
   168f4:	andeq	r0, r0, #1
   168f8:	andeq	r0, r0, #4
   168fc:	andeq	r0, r0, #2
   16900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16904:	sub	sp, sp, #52	; 0x34
   16908:	mov	r3, r0
   1690c:	str	r0, [sp, #20]
   16910:	mov	r0, #16
   16914:	ldr	r6, [r3, #16]
   16918:	ldr	r4, [r3]
   1691c:	str	r1, [sp, #28]
   16920:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   16924:	subs	r3, r0, #0
   16928:	str	r3, [sp, #16]
   1692c:	beq	16f1c <_obstack_memory_used@@Base+0x2160>
   16930:	mov	r2, r3
   16934:	cmp	r4, #0
   16938:	mov	r3, #0
   1693c:	str	r3, [r2, #4]
   16940:	str	r3, [r2, #12]
   16944:	beq	16b58 <_obstack_memory_used@@Base+0x1d9c>
   16948:	ldr	fp, [r4, #12]
   1694c:	ands	fp, fp, #4
   16950:	bne	16f30 <_obstack_memory_used@@Base+0x2174>
   16954:	add	r5, r4, #24
   16958:	mov	r7, r4
   1695c:	mov	r9, fp
   16960:	mov	sl, fp
   16964:	mov	r4, r2
   16968:	b	169ac <_obstack_memory_used@@Base+0x1bf0>
   1696c:	ldr	r3, [r5, #-12]
   16970:	tst	r3, #4
   16974:	addeq	r9, r9, #1
   16978:	streq	r9, [r4, #4]
   1697c:	tst	r3, #8
   16980:	bne	169a8 <_obstack_memory_used@@Base+0x1bec>
   16984:	sub	r3, r8, #1
   16988:	cmp	r3, #254	; 0xfe
   1698c:	bhi	169a8 <_obstack_memory_used@@Base+0x1bec>
   16990:	bl	11250 <__ctype_b_loc@plt>
   16994:	lsl	r8, r8, #1
   16998:	ldr	r3, [r0]
   1699c:	ldrh	r3, [r3, r8]
   169a0:	tst	r3, #16384	; 0x4000
   169a4:	addne	sl, sl, #1
   169a8:	add	r5, r5, #24
   169ac:	ldr	r8, [r5, #-20]	; 0xffffffec
   169b0:	cmp	r8, #0
   169b4:	bne	1696c <_obstack_memory_used@@Base+0x1bb0>
   169b8:	ldr	r3, [r5, #-24]	; 0xffffffe8
   169bc:	cmp	r3, #0
   169c0:	bne	1696c <_obstack_memory_used@@Base+0x1bb0>
   169c4:	ldr	r3, [r5, #-8]
   169c8:	cmp	r3, #0
   169cc:	bne	1696c <_obstack_memory_used@@Base+0x1bb0>
   169d0:	ldr	r3, [r5, #-4]
   169d4:	cmp	r3, #0
   169d8:	bne	1696c <_obstack_memory_used@@Base+0x1bb0>
   169dc:	rsb	r9, r9, r9, lsl #3
   169e0:	mov	r4, r7
   169e4:	lsl	r0, r9, #2
   169e8:	mov	r7, r3
   169ec:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   169f0:	ldr	r5, [sp, #16]
   169f4:	str	r0, [r5]
   169f8:	add	r0, sl, #1
   169fc:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   16a00:	ldr	r8, [r5]
   16a04:	mov	r3, r5
   16a08:	cmp	r0, #0
   16a0c:	cmpne	r8, #0
   16a10:	mov	sl, r0
   16a14:	str	r0, [r3, #8]
   16a18:	beq	16fd8 <_obstack_memory_used@@Base+0x221c>
   16a1c:	ldr	r2, [sp, #16]
   16a20:	ldr	r3, [pc, #1476]	; 16fec <_obstack_memory_used@@Base+0x2230>
   16a24:	ldr	r2, [r2, #4]
   16a28:	cmp	r2, r3
   16a2c:	bhi	16fc4 <_obstack_memory_used@@Base+0x2208>
   16a30:	add	r8, r8, #28
   16a34:	mov	r9, sl
   16a38:	mov	r2, fp
   16a3c:	ldr	r3, [r4, #4]
   16a40:	mov	fp, sl
   16a44:	mov	sl, r8
   16a48:	ldr	r8, [sp, #28]
   16a4c:	str	r6, [sp, #4]
   16a50:	cmp	r3, #0
   16a54:	bne	16a64 <_obstack_memory_used@@Base+0x1ca8>
   16a58:	ldr	r0, [r4]
   16a5c:	cmp	r0, #0
   16a60:	beq	16f7c <_obstack_memory_used@@Base+0x21c0>
   16a64:	str	r7, [sl, #-24]	; 0xffffffe8
   16a68:	ldr	r5, [r4, #20]
   16a6c:	str	r4, [sl, #-28]	; 0xffffffe4
   16a70:	cmp	r5, #0
   16a74:	str	fp, [sl, #-20]	; 0xffffffec
   16a78:	bne	16a90 <_obstack_memory_used@@Base+0x1cd4>
   16a7c:	ldr	r0, [r4]
   16a80:	cmp	r0, #0
   16a84:	cmpeq	r3, #0
   16a88:	movne	r5, r2
   16a8c:	beq	16fa0 <_obstack_memory_used@@Base+0x21e4>
   16a90:	ldr	r2, [sp, #20]
   16a94:	mov	r3, r7
   16a98:	str	r5, [sl, #-16]
   16a9c:	str	r8, [sl, #-12]
   16aa0:	str	r2, [sl, #-8]
   16aa4:	add	r3, r3, #1
   16aa8:	str	r3, [sl, #-24]	; 0xffffffe8
   16aac:	ldr	r3, [r4, #12]
   16ab0:	tst	r3, #8
   16ab4:	bne	16b20 <_obstack_memory_used@@Base+0x1d64>
   16ab8:	ldr	r6, [r4, #4]
   16abc:	sub	r2, r6, #1
   16ac0:	cmp	r2, #254	; 0xfe
   16ac4:	bhi	16b20 <_obstack_memory_used@@Base+0x1d64>
   16ac8:	bl	11250 <__ctype_b_loc@plt>
   16acc:	lsl	r2, r6, #1
   16ad0:	ldr	r0, [r0]
   16ad4:	ldrh	r2, [r0, r2]
   16ad8:	tst	r2, #16384	; 0x4000
   16adc:	beq	16b20 <_obstack_memory_used@@Base+0x1d64>
   16ae0:	cmp	r9, fp
   16ae4:	uxtb	r0, r6
   16ae8:	bcs	16b18 <_obstack_memory_used@@Base+0x1d5c>
   16aec:	ldrb	r3, [r9]
   16af0:	cmp	r3, r0
   16af4:	movne	r3, r9
   16af8:	subne	ip, fp, #1
   16afc:	bne	16b10 <_obstack_memory_used@@Base+0x1d54>
   16b00:	b	16b20 <_obstack_memory_used@@Base+0x1d64>
   16b04:	ldrb	r2, [r3, #1]!
   16b08:	cmp	r2, r0
   16b0c:	beq	16b20 <_obstack_memory_used@@Base+0x1d64>
   16b10:	cmp	ip, r3
   16b14:	bne	16b04 <_obstack_memory_used@@Base+0x1d48>
   16b18:	strb	r0, [fp]
   16b1c:	add	fp, fp, #1
   16b20:	add	r4, r4, #24
   16b24:	ldr	r3, [r4, #4]
   16b28:	cmp	r3, #0
   16b2c:	bne	16b3c <_obstack_memory_used@@Base+0x1d80>
   16b30:	ldr	r2, [r4]
   16b34:	cmp	r2, #0
   16b38:	beq	16f58 <_obstack_memory_used@@Base+0x219c>
   16b3c:	ldr	r2, [r4, #12]
   16b40:	tst	r2, #4
   16b44:	beq	16f70 <_obstack_memory_used@@Base+0x21b4>
   16b48:	ldr	r3, [sl, #-24]	; 0xffffffe8
   16b4c:	b	16aa4 <_obstack_memory_used@@Base+0x1ce8>
   16b50:	ldr	r6, [sp, #4]
   16b54:	strb	r3, [fp]
   16b58:	cmp	r6, #0
   16b5c:	beq	16c98 <_obstack_memory_used@@Base+0x1edc>
   16b60:	ldr	r0, [r6]
   16b64:	cmp	r0, #0
   16b68:	beq	16c98 <_obstack_memory_used@@Base+0x1edc>
   16b6c:	add	r3, r6, #16
   16b70:	str	r3, [sp, #8]
   16b74:	ldr	r3, [sp, #16]
   16b78:	add	r3, r3, #12
   16b7c:	str	r3, [sp, #44]	; 0x2c
   16b80:	ldr	r3, [sp, #8]
   16b84:	ldr	r5, [r3, #-4]
   16b88:	ldr	r6, [r3, #-8]
   16b8c:	cmp	r5, #0
   16b90:	bne	16b9c <_obstack_memory_used@@Base+0x1de0>
   16b94:	cmp	r6, #0
   16b98:	beq	16ef0 <_obstack_memory_used@@Base+0x2134>
   16b9c:	ldr	r3, [sp, #20]
   16ba0:	mov	r0, #28
   16ba4:	ldr	r2, [r3, #16]
   16ba8:	ldr	r3, [sp, #8]
   16bac:	sub	r3, r3, #16
   16bb0:	sub	r3, r3, r2
   16bb4:	asr	r4, r3, #4
   16bb8:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   16bbc:	subs	r1, r0, #0
   16bc0:	beq	16c04 <_obstack_memory_used@@Base+0x1e48>
   16bc4:	ldr	r3, [sp, #28]
   16bc8:	ldr	r0, [sp, #16]
   16bcc:	cmp	r3, #0
   16bd0:	ldr	r2, [sp, #20]
   16bd4:	str	r3, [r1, #12]
   16bd8:	ldrne	r3, [r3, #20]
   16bdc:	str	r2, [r1, #16]
   16be0:	ldr	r2, [r0, #12]
   16be4:	addne	r3, r3, #1
   16be8:	moveq	r3, #0
   16bec:	str	r5, [r1, #8]
   16bf0:	str	r6, [r1]
   16bf4:	str	r4, [r1, #4]
   16bf8:	str	r3, [r1, #20]
   16bfc:	str	r2, [r1, #24]
   16c00:	str	r1, [r0, #12]
   16c04:	ldr	r3, [sp, #8]
   16c08:	ldr	r0, [r3, #-16]
   16c0c:	bl	16900 <_obstack_memory_used@@Base+0x1b44>
   16c10:	ldr	r3, [sp, #16]
   16c14:	ldr	r2, [r3, #12]
   16c18:	cmp	r2, #0
   16c1c:	mov	sl, r0
   16c20:	bne	16c2c <_obstack_memory_used@@Base+0x1e70>
   16c24:	b	16ef8 <_obstack_memory_used@@Base+0x213c>
   16c28:	mov	r2, r3
   16c2c:	ldr	r3, [r2, #24]
   16c30:	cmp	r3, #0
   16c34:	bne	16c28 <_obstack_memory_used@@Base+0x1e6c>
   16c38:	add	r2, r2, #24
   16c3c:	ldr	r3, [sl, #4]
   16c40:	ldr	r1, [sl, #12]
   16c44:	cmp	r3, #0
   16c48:	str	r1, [r2]
   16c4c:	mov	r2, #0
   16c50:	str	r2, [sl, #12]
   16c54:	beq	16c7c <_obstack_memory_used@@Base+0x1ec0>
   16c58:	ldr	ip, [sp, #16]
   16c5c:	ldr	r2, [ip, #4]
   16c60:	cmp	r2, #0
   16c64:	bne	16ca4 <_obstack_memory_used@@Base+0x1ee8>
   16c68:	ldr	r0, [sl]
   16c6c:	ldr	r1, [sl, #8]
   16c70:	stm	ip, {r0, r3}
   16c74:	str	r1, [ip, #8]
   16c78:	str	r2, [sl, #4]
   16c7c:	mov	r0, sl
   16c80:	bl	148c4 <argp_parse@@Base+0xf7c>
   16c84:	ldr	r3, [sp, #8]
   16c88:	ldr	r0, [r3], #16
   16c8c:	cmp	r0, #0
   16c90:	str	r3, [sp, #8]
   16c94:	bne	16b84 <_obstack_memory_used@@Base+0x1dc8>
   16c98:	ldr	r0, [sp, #16]
   16c9c:	add	sp, sp, #52	; 0x34
   16ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ca4:	add	r3, r3, r2
   16ca8:	str	r3, [sp, #32]
   16cac:	rsb	r0, r3, r3, lsl #3
   16cb0:	lsl	r0, r0, #2
   16cb4:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   16cb8:	ldr	r3, [sp, #16]
   16cbc:	mov	r4, r0
   16cc0:	str	r0, [sp, #24]
   16cc4:	ldr	r0, [r3, #8]
   16cc8:	bl	11268 <strlen@plt>
   16ccc:	mov	r5, r0
   16cd0:	ldr	r0, [sl, #8]
   16cd4:	bl	11268 <strlen@plt>
   16cd8:	add	r0, r5, r0
   16cdc:	add	r0, r0, #1
   16ce0:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   16ce4:	cmp	r4, #0
   16ce8:	cmpne	r0, #0
   16cec:	mov	r7, r0
   16cf0:	beq	16f08 <_obstack_memory_used@@Base+0x214c>
   16cf4:	ldr	r3, [sp, #32]
   16cf8:	ldr	r2, [pc, #748]	; 16fec <_obstack_memory_used@@Base+0x2230>
   16cfc:	cmp	r3, r2
   16d00:	bhi	16f44 <_obstack_memory_used@@Base+0x2188>
   16d04:	ldr	r6, [sp, #16]
   16d08:	ldr	r8, [sp, #24]
   16d0c:	ldm	r6, {r3, r4}
   16d10:	mov	r0, r8
   16d14:	rsb	r9, r4, r4, lsl #3
   16d18:	mov	r1, r3
   16d1c:	lsl	r9, r9, #2
   16d20:	mov	r2, r9
   16d24:	str	r3, [sp, #36]	; 0x24
   16d28:	bl	11244 <mempcpy@plt>
   16d2c:	ldr	r3, [sl, #4]
   16d30:	ldr	r1, [sl]
   16d34:	str	r3, [sp, #4]
   16d38:	rsb	r2, r3, r3, lsl #3
   16d3c:	lsl	r2, r2, #2
   16d40:	bl	1116c <memcpy@plt>
   16d44:	ldr	r6, [r6, #8]
   16d48:	mov	r2, r5
   16d4c:	mov	r1, r6
   16d50:	mov	r0, r7
   16d54:	bl	1116c <memcpy@plt>
   16d58:	cmp	r4, #0
   16d5c:	beq	16f00 <_obstack_memory_used@@Base+0x2144>
   16d60:	mov	r2, r8
   16d64:	ldr	r3, [r2, #8]
   16d68:	subs	r4, r4, #1
   16d6c:	sub	r3, r3, r6
   16d70:	add	r3, r7, r3
   16d74:	str	r3, [r2, #8]
   16d78:	add	r2, r2, #28
   16d7c:	bne	16d64 <_obstack_memory_used@@Base+0x1fa8>
   16d80:	ldr	r3, [sp, #24]
   16d84:	add	r1, r3, r9
   16d88:	ldr	r3, [sp, #4]
   16d8c:	ldr	r9, [sl, #8]
   16d90:	cmp	r3, #0
   16d94:	add	r3, r7, r5
   16d98:	str	r3, [sp, #12]
   16d9c:	beq	16e88 <_obstack_memory_used@@Base+0x20cc>
   16da0:	add	fp, r1, #28
   16da4:	sub	r8, r3, #1
   16da8:	str	sl, [sp, #40]	; 0x28
   16dac:	mov	r6, r3
   16db0:	mov	sl, r9
   16db4:	mov	r9, fp
   16db8:	mov	fp, r8
   16dbc:	ldr	r5, [r9, #-24]	; 0xffffffe8
   16dc0:	str	r6, [r9, #-20]	; 0xffffffec
   16dc4:	cmp	r5, #0
   16dc8:	ldr	r4, [r9, #-28]	; 0xffffffe4
   16dcc:	bne	16de0 <_obstack_memory_used@@Base+0x2024>
   16dd0:	b	16e6c <_obstack_memory_used@@Base+0x20b0>
   16dd4:	subs	r5, r5, #1
   16dd8:	add	r4, r4, #24
   16ddc:	beq	16e6c <_obstack_memory_used@@Base+0x20b0>
   16de0:	ldr	r3, [r4, #12]
   16de4:	tst	r3, #8
   16de8:	bne	16dd4 <_obstack_memory_used@@Base+0x2018>
   16dec:	ldr	r8, [r4, #4]
   16df0:	sub	r3, r8, #1
   16df4:	cmp	r3, #254	; 0xfe
   16df8:	bhi	16dd4 <_obstack_memory_used@@Base+0x2018>
   16dfc:	bl	11250 <__ctype_b_loc@plt>
   16e00:	lsl	r3, r8, #1
   16e04:	ldr	r2, [r0]
   16e08:	ldrh	r3, [r2, r3]
   16e0c:	tst	r3, #16384	; 0x4000
   16e10:	beq	16dd4 <_obstack_memory_used@@Base+0x2018>
   16e14:	ldrb	r1, [sl]
   16e18:	cmp	r1, r8
   16e1c:	bne	16dd4 <_obstack_memory_used@@Base+0x2018>
   16e20:	ldr	r3, [sp, #12]
   16e24:	cmp	r7, r3
   16e28:	bcs	16e54 <_obstack_memory_used@@Base+0x2098>
   16e2c:	ldrb	r3, [r7]
   16e30:	cmp	r3, r1
   16e34:	movne	r3, r7
   16e38:	bne	16e4c <_obstack_memory_used@@Base+0x2090>
   16e3c:	b	16e5c <_obstack_memory_used@@Base+0x20a0>
   16e40:	ldrb	r2, [r3, #1]!
   16e44:	cmp	r2, r1
   16e48:	beq	16e5c <_obstack_memory_used@@Base+0x20a0>
   16e4c:	cmp	fp, r3
   16e50:	bne	16e40 <_obstack_memory_used@@Base+0x2084>
   16e54:	strb	r1, [r6]
   16e58:	add	r6, r6, #1
   16e5c:	subs	r5, r5, #1
   16e60:	add	sl, sl, #1
   16e64:	add	r4, r4, #24
   16e68:	bne	16de0 <_obstack_memory_used@@Base+0x2024>
   16e6c:	ldr	r3, [sp, #4]
   16e70:	add	r9, r9, #28
   16e74:	subs	r3, r3, #1
   16e78:	str	r3, [sp, #4]
   16e7c:	bne	16dbc <_obstack_memory_used@@Base+0x2000>
   16e80:	ldr	sl, [sp, #40]	; 0x28
   16e84:	mov	r3, r6
   16e88:	mov	r2, #0
   16e8c:	strb	r2, [r3]
   16e90:	ldr	r0, [sp, #36]	; 0x24
   16e94:	bl	148c4 <argp_parse@@Base+0xf7c>
   16e98:	ldr	r4, [sp, #16]
   16e9c:	ldr	r0, [r4, #8]
   16ea0:	bl	148c4 <argp_parse@@Base+0xf7c>
   16ea4:	ldr	r2, [sp, #24]
   16ea8:	ldr	r0, [sl, #12]
   16eac:	str	r2, [r4]
   16eb0:	ldr	r2, [sp, #32]
   16eb4:	cmp	r0, #0
   16eb8:	stmib	r4, {r2, r7}
   16ebc:	beq	16ed0 <_obstack_memory_used@@Base+0x2114>
   16ec0:	ldr	r4, [r0, #24]
   16ec4:	bl	148c4 <argp_parse@@Base+0xf7c>
   16ec8:	subs	r0, r4, #0
   16ecc:	bne	16ec0 <_obstack_memory_used@@Base+0x2104>
   16ed0:	ldr	r3, [sl, #4]
   16ed4:	cmp	r3, #0
   16ed8:	beq	16c7c <_obstack_memory_used@@Base+0x1ec0>
   16edc:	ldr	r0, [sl]
   16ee0:	bl	148c4 <argp_parse@@Base+0xf7c>
   16ee4:	ldr	r0, [sl, #8]
   16ee8:	bl	148c4 <argp_parse@@Base+0xf7c>
   16eec:	b	16c7c <_obstack_memory_used@@Base+0x1ec0>
   16ef0:	ldr	r1, [sp, #28]
   16ef4:	b	16c0c <_obstack_memory_used@@Base+0x1e50>
   16ef8:	ldr	r2, [sp, #44]	; 0x2c
   16efc:	b	16c3c <_obstack_memory_used@@Base+0x1e80>
   16f00:	ldr	r1, [sp, #24]
   16f04:	b	16d88 <_obstack_memory_used@@Base+0x1fcc>
   16f08:	ldr	r3, [pc, #224]	; 16ff0 <_obstack_memory_used@@Base+0x2234>
   16f0c:	ldr	r2, [pc, #224]	; 16ff4 <_obstack_memory_used@@Base+0x2238>
   16f10:	ldr	r1, [pc, #224]	; 16ff8 <_obstack_memory_used@@Base+0x223c>
   16f14:	ldr	r0, [pc, #224]	; 16ffc <_obstack_memory_used@@Base+0x2240>
   16f18:	bl	113b8 <__assert_fail@plt>
   16f1c:	ldr	r3, [pc, #220]	; 17000 <_obstack_memory_used@@Base+0x2244>
   16f20:	ldr	r2, [pc, #220]	; 17004 <_obstack_memory_used@@Base+0x2248>
   16f24:	ldr	r1, [pc, #204]	; 16ff8 <_obstack_memory_used@@Base+0x223c>
   16f28:	ldr	r0, [pc, #216]	; 17008 <_obstack_memory_used@@Base+0x224c>
   16f2c:	bl	113b8 <__assert_fail@plt>
   16f30:	ldr	r3, [pc, #200]	; 17000 <_obstack_memory_used@@Base+0x2244>
   16f34:	mov	r2, #460	; 0x1cc
   16f38:	ldr	r1, [pc, #184]	; 16ff8 <_obstack_memory_used@@Base+0x223c>
   16f3c:	ldr	r0, [pc, #200]	; 1700c <_obstack_memory_used@@Base+0x2250>
   16f40:	bl	113b8 <__assert_fail@plt>
   16f44:	ldr	r3, [pc, #164]	; 16ff0 <_obstack_memory_used@@Base+0x2234>
   16f48:	mov	r2, #972	; 0x3cc
   16f4c:	ldr	r1, [pc, #164]	; 16ff8 <_obstack_memory_used@@Base+0x223c>
   16f50:	ldr	r0, [pc, #184]	; 17010 <_obstack_memory_used@@Base+0x2254>
   16f54:	bl	113b8 <__assert_fail@plt>
   16f58:	ldr	r2, [r4, #16]
   16f5c:	cmp	r2, #0
   16f60:	bne	16b3c <_obstack_memory_used@@Base+0x1d80>
   16f64:	ldr	r2, [r4, #20]
   16f68:	cmp	r2, #0
   16f6c:	bne	16b3c <_obstack_memory_used@@Base+0x1d80>
   16f70:	add	sl, sl, #28
   16f74:	mov	r2, r5
   16f78:	b	16a50 <_obstack_memory_used@@Base+0x1c94>
   16f7c:	ldr	r0, [r4, #16]
   16f80:	cmp	r0, #0
   16f84:	beq	16fa8 <_obstack_memory_used@@Base+0x21ec>
   16f88:	str	r3, [sl, #-24]	; 0xffffffe8
   16f8c:	ldr	r5, [r4, #20]
   16f90:	str	r4, [sl, #-28]	; 0xffffffe4
   16f94:	cmp	r5, #0
   16f98:	str	fp, [sl, #-20]	; 0xffffffec
   16f9c:	bne	16a90 <_obstack_memory_used@@Base+0x1cd4>
   16fa0:	add	r5, r2, #1
   16fa4:	b	16a90 <_obstack_memory_used@@Base+0x1cd4>
   16fa8:	ldr	r5, [r4, #20]
   16fac:	cmp	r5, #0
   16fb0:	beq	16b50 <_obstack_memory_used@@Base+0x1d94>
   16fb4:	str	r4, [sl, #-28]	; 0xffffffe4
   16fb8:	str	r3, [sl, #-24]	; 0xffffffe8
   16fbc:	str	fp, [sl, #-20]	; 0xffffffec
   16fc0:	b	16a90 <_obstack_memory_used@@Base+0x1cd4>
   16fc4:	ldr	r3, [pc, #52]	; 17000 <_obstack_memory_used@@Base+0x2244>
   16fc8:	mov	r2, #476	; 0x1dc
   16fcc:	ldr	r1, [pc, #36]	; 16ff8 <_obstack_memory_used@@Base+0x223c>
   16fd0:	ldr	r0, [pc, #60]	; 17014 <_obstack_memory_used@@Base+0x2258>
   16fd4:	bl	113b8 <__assert_fail@plt>
   16fd8:	ldr	r3, [pc, #32]	; 17000 <_obstack_memory_used@@Base+0x2244>
   16fdc:	ldr	r2, [pc, #52]	; 17018 <_obstack_memory_used@@Base+0x225c>
   16fe0:	ldr	r1, [pc, #16]	; 16ff8 <_obstack_memory_used@@Base+0x223c>
   16fe4:	ldr	r0, [pc, #48]	; 1701c <_obstack_memory_used@@Base+0x2260>
   16fe8:	bl	113b8 <__assert_fail@plt>
   16fec:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   16ff0:	andeq	pc, r1, r4, lsl #3
   16ff4:	andeq	r0, r0, sl, asr #7
   16ff8:	andeq	pc, r1, r0, lsr #4
   16ffc:	andeq	pc, r1, r0, lsr #5
   17000:	andeq	pc, r1, r8, ror r1	; <UNPREDICTABLE>
   17004:	andeq	r0, r0, r2, asr #3
   17008:	andeq	pc, r1, ip, lsr #4
   1700c:	andeq	pc, r1, r0, lsr r2	; <UNPREDICTABLE>
   17010:			; <UNDEFINED> instruction: 0x0001f2bc
   17014:	andeq	pc, r1, r4, ror #4
   17018:	ldrdeq	r0, [r0], -sl
   1701c:	andeq	pc, r1, r0, asr #4
   17020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17024:	mov	r7, r2
   17028:	sub	sp, sp, #28
   1702c:	mov	r4, r3
   17030:	ldr	r3, [r7]
   17034:	ldr	r2, [r0, #20]
   17038:	str	r3, [sp, #20]
   1703c:	ldr	r3, [r0, #16]
   17040:	cmp	r2, #0
   17044:	str	r3, [sp, #12]
   17048:	ldr	r3, [r0, #8]
   1704c:	mov	r8, r1
   17050:	mov	r9, r3
   17054:	str	r3, [sp, #16]
   17058:	ldr	r5, [sp, #64]	; 0x40
   1705c:	beq	172b4 <_obstack_memory_used@@Base+0x24f8>
   17060:	mov	r6, r0
   17064:	bl	14768 <argp_parse@@Base+0xe20>
   17068:	ldr	r3, [r6, #20]
   1706c:	mov	r1, r9
   17070:	mov	r2, r0
   17074:	ldr	r0, [pc, #640]	; 172fc <_obstack_memory_used@@Base+0x2540>
   17078:	blx	r3
   1707c:	mov	r3, r0
   17080:	str	r0, [sp, #8]
   17084:	cmp	r3, #0
   17088:	beq	17254 <_obstack_memory_used@@Base+0x2498>
   1708c:	mov	r1, #10
   17090:	mov	r0, r3
   17094:	bl	11124 <strchrnul@plt>
   17098:	ldrb	sl, [r0]
   1709c:	mov	r6, r0
   170a0:	cmp	sl, #0
   170a4:	bne	171ec <_obstack_memory_used@@Base+0x2430>
   170a8:	ldr	fp, [sp, #8]
   170ac:	ldr	r3, [r5, #28]
   170b0:	ldr	r1, [r5, #24]
   170b4:	ldr	r0, [r5, #16]
   170b8:	sub	r1, r3, r1
   170bc:	cmp	r1, r0
   170c0:	add	r9, r6, #1
   170c4:	mov	r1, r3
   170c8:	sub	r9, r9, fp
   170cc:	bhi	17284 <_obstack_memory_used@@Base+0x24c8>
   170d0:	ldr	r0, [r5, #20]
   170d4:	ldr	ip, [r5, #8]
   170d8:	cmp	r0, #0
   170dc:	addge	r9, r9, r0
   170e0:	cmp	r9, ip
   170e4:	bcc	17234 <_obstack_memory_used@@Base+0x2478>
   170e8:	ldr	r1, [r5, #32]
   170ec:	cmp	r1, r3
   170f0:	bls	172bc <_obstack_memory_used@@Base+0x2500>
   170f4:	add	r0, r3, #1
   170f8:	mov	r1, #10
   170fc:	str	r0, [r5, #28]
   17100:	strb	r1, [r3]
   17104:	ldr	r0, [r5, #28]
   17108:	sub	r9, r6, fp
   1710c:	ldr	r1, [r5, #32]
   17110:	add	r3, r0, r9
   17114:	cmp	r1, r3
   17118:	bcs	17134 <_obstack_memory_used@@Base+0x2378>
   1711c:	mov	r1, r9
   17120:	mov	r0, r5
   17124:	bl	1c6a0 <argp_error@@Base+0x2008>
   17128:	cmp	r0, #0
   1712c:	beq	1714c <_obstack_memory_used@@Base+0x2390>
   17130:	ldr	r0, [r5, #28]
   17134:	mov	r2, r9
   17138:	mov	r1, fp
   1713c:	bl	1116c <memcpy@plt>
   17140:	ldr	r3, [r5, #28]
   17144:	add	r9, r3, r9
   17148:	str	r9, [r5, #28]
   1714c:	ldr	r3, [sp, #16]
   17150:	ldr	r2, [sp, #8]
   17154:	cmp	r3, r2
   17158:	beq	17164 <_obstack_memory_used@@Base+0x23a8>
   1715c:	mov	r0, r2
   17160:	bl	148c4 <argp_parse@@Base+0xf7c>
   17164:	ldr	r3, [sp, #12]
   17168:	cmp	r3, #0
   1716c:	beq	171b0 <_obstack_memory_used@@Base+0x23f4>
   17170:	ldr	r2, [r3]
   17174:	cmp	r2, #0
   17178:	beq	171b0 <_obstack_memory_used@@Base+0x23f4>
   1717c:	ldr	r9, [sp, #12]
   17180:	mov	r3, r4
   17184:	mov	r0, r2
   17188:	str	r5, [sp]
   1718c:	mov	r2, r7
   17190:	mov	r1, r8
   17194:	bl	17020 <_obstack_memory_used@@Base+0x2264>
   17198:	ldr	r2, [r9, #16]!
   1719c:	cmp	r2, #0
   171a0:	clz	r3, r0
   171a4:	lsr	r3, r3, #5
   171a8:	bne	17184 <_obstack_memory_used@@Base+0x23c8>
   171ac:	mov	r4, r3
   171b0:	cmp	r4, #0
   171b4:	moveq	sl, #0
   171b8:	andne	sl, sl, #1
   171bc:	cmp	sl, #0
   171c0:	beq	17274 <_obstack_memory_used@@Base+0x24b8>
   171c4:	ldrb	r0, [r6]
   171c8:	cmp	r0, #0
   171cc:	bne	17298 <_obstack_memory_used@@Base+0x24dc>
   171d0:	ldr	r3, [sp, #20]
   171d4:	ldrb	r4, [r3]
   171d8:	cmp	r4, #0
   171dc:	moveq	r0, r4
   171e0:	strbne	r0, [r3]
   171e4:	add	sp, sp, #28
   171e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171ec:	ldr	r3, [sp, #20]
   171f0:	ldrb	r9, [r3]
   171f4:	cmp	r9, #0
   171f8:	beq	172f4 <_obstack_memory_used@@Base+0x2538>
   171fc:	mov	sl, #0
   17200:	add	fp, r0, #1
   17204:	add	sl, sl, #1
   17208:	mov	r0, fp
   1720c:	mov	r1, #10
   17210:	bl	11124 <strchrnul@plt>
   17214:	cmp	sl, r9
   17218:	bne	17200 <_obstack_memory_used@@Base+0x2444>
   1721c:	mov	r6, r0
   17220:	ldr	r3, [r7]
   17224:	mov	sl, #1
   17228:	add	r3, r3, sl
   1722c:	str	r3, [r7]
   17230:	b	170ac <_obstack_memory_used@@Base+0x22f0>
   17234:	ldr	r0, [r5, #32]
   17238:	cmp	r0, r3
   1723c:	bls	172d8 <_obstack_memory_used@@Base+0x251c>
   17240:	add	r0, r1, #1
   17244:	mov	r3, #32
   17248:	str	r0, [r5, #28]
   1724c:	strb	r3, [r1]
   17250:	b	17104 <_obstack_memory_used@@Base+0x2348>
   17254:	ldr	r3, [sp, #12]
   17258:	cmp	r3, #0
   1725c:	beq	17274 <_obstack_memory_used@@Base+0x24b8>
   17260:	ldr	r2, [r3]
   17264:	cmp	r2, #0
   17268:	ldrne	r6, [sp, #8]
   1726c:	movne	sl, r6
   17270:	bne	1717c <_obstack_memory_used@@Base+0x23c0>
   17274:	clz	r0, r4
   17278:	lsr	r0, r0, #5
   1727c:	add	sp, sp, #28
   17280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17284:	mov	r0, r5
   17288:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1728c:	ldr	r3, [r5, #28]
   17290:	mov	r1, r3
   17294:	b	170d0 <_obstack_memory_used@@Base+0x2314>
   17298:	ldr	r2, [sp, #20]
   1729c:	mov	r0, #1
   172a0:	ldrb	r3, [r2]
   172a4:	add	r3, r3, r0
   172a8:	strb	r3, [r2]
   172ac:	add	sp, sp, #28
   172b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172b4:	str	r3, [sp, #8]
   172b8:	b	17084 <_obstack_memory_used@@Base+0x22c8>
   172bc:	mov	r1, #1
   172c0:	mov	r0, r5
   172c4:	bl	1c6a0 <argp_error@@Base+0x2008>
   172c8:	cmp	r0, #0
   172cc:	beq	17104 <_obstack_memory_used@@Base+0x2348>
   172d0:	ldr	r3, [r5, #28]
   172d4:	b	170f4 <_obstack_memory_used@@Base+0x2338>
   172d8:	mov	r1, #1
   172dc:	mov	r0, r5
   172e0:	bl	1c6a0 <argp_error@@Base+0x2008>
   172e4:	cmp	r0, #0
   172e8:	beq	17104 <_obstack_memory_used@@Base+0x2348>
   172ec:	ldr	r1, [r5, #28]
   172f0:	b	17240 <_obstack_memory_used@@Base+0x2484>
   172f4:	ldr	fp, [sp, #8]
   172f8:	b	17220 <_obstack_memory_used@@Base+0x2464>
   172fc:	andeq	r0, r0, #6
   17300:	subs	r3, r0, #0
   17304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17308:	moveq	r0, r3
   1730c:	sub	sp, sp, #52	; 0x34
   17310:	mov	r4, r1
   17314:	beq	17328 <_obstack_memory_used@@Base+0x256c>
   17318:	mov	r1, #10
   1731c:	bl	11274 <strchr@plt>
   17320:	adds	r0, r0, #0
   17324:	movne	r0, #1
   17328:	cmp	r4, #0
   1732c:	str	r0, [sp, #20]
   17330:	beq	17640 <_obstack_memory_used@@Base+0x2884>
   17334:	ldr	r3, [r4]
   17338:	cmp	r3, #0
   1733c:	beq	17640 <_obstack_memory_used@@Base+0x2884>
   17340:	mov	r9, #0
   17344:	mov	r8, #10
   17348:	str	r4, [sp, #24]
   1734c:	ldr	r0, [r3, #8]
   17350:	ldr	r4, [r3, #16]
   17354:	cmp	r0, #0
   17358:	moveq	r0, r9
   1735c:	beq	17370 <_obstack_memory_used@@Base+0x25b4>
   17360:	mov	r1, r8
   17364:	bl	11274 <strchr@plt>
   17368:	adds	r0, r0, #0
   1736c:	movne	r0, #1
   17370:	cmp	r4, #0
   17374:	str	r0, [sp]
   17378:	beq	1761c <_obstack_memory_used@@Base+0x2860>
   1737c:	ldr	r3, [r4]
   17380:	cmp	r3, #0
   17384:	beq	1761c <_obstack_memory_used@@Base+0x2860>
   17388:	str	r4, [sp, #28]
   1738c:	ldr	r0, [r3, #8]
   17390:	ldr	r4, [r3, #16]
   17394:	cmp	r0, #0
   17398:	moveq	r0, r9
   1739c:	beq	173b0 <_obstack_memory_used@@Base+0x25f4>
   173a0:	mov	r1, r8
   173a4:	bl	11274 <strchr@plt>
   173a8:	adds	r0, r0, #0
   173ac:	movne	r0, #1
   173b0:	cmp	r4, #0
   173b4:	str	r0, [sp, #4]
   173b8:	beq	175fc <_obstack_memory_used@@Base+0x2840>
   173bc:	ldr	r3, [r4]
   173c0:	cmp	r3, #0
   173c4:	beq	175fc <_obstack_memory_used@@Base+0x2840>
   173c8:	str	r4, [sp, #32]
   173cc:	ldr	r0, [r3, #8]
   173d0:	ldr	r4, [r3, #16]
   173d4:	cmp	r0, #0
   173d8:	moveq	r0, r9
   173dc:	beq	173f0 <_obstack_memory_used@@Base+0x2634>
   173e0:	mov	r1, r8
   173e4:	bl	11274 <strchr@plt>
   173e8:	adds	r0, r0, #0
   173ec:	movne	r0, #1
   173f0:	cmp	r4, #0
   173f4:	str	r0, [sp, #8]
   173f8:	beq	175dc <_obstack_memory_used@@Base+0x2820>
   173fc:	ldr	r3, [r4]
   17400:	cmp	r3, #0
   17404:	beq	175dc <_obstack_memory_used@@Base+0x2820>
   17408:	str	r4, [sp, #36]	; 0x24
   1740c:	ldr	r0, [r3, #8]
   17410:	ldr	r4, [r3, #16]
   17414:	cmp	r0, #0
   17418:	moveq	r0, r9
   1741c:	beq	17430 <_obstack_memory_used@@Base+0x2674>
   17420:	mov	r1, r8
   17424:	bl	11274 <strchr@plt>
   17428:	adds	r0, r0, #0
   1742c:	movne	r0, #1
   17430:	cmp	r4, #0
   17434:	str	r0, [sp, #12]
   17438:	beq	175b8 <_obstack_memory_used@@Base+0x27fc>
   1743c:	ldr	r3, [r4]
   17440:	cmp	r3, #0
   17444:	beq	175b8 <_obstack_memory_used@@Base+0x27fc>
   17448:	str	r4, [sp, #40]	; 0x28
   1744c:	ldr	r0, [r3, #8]
   17450:	ldr	fp, [r3, #16]
   17454:	cmp	r0, #0
   17458:	moveq	r0, r9
   1745c:	beq	17470 <_obstack_memory_used@@Base+0x26b4>
   17460:	mov	r1, r8
   17464:	bl	11274 <strchr@plt>
   17468:	adds	r0, r0, #0
   1746c:	movne	r0, #1
   17470:	cmp	fp, #0
   17474:	str	r0, [sp, #16]
   17478:	beq	17594 <_obstack_memory_used@@Base+0x27d8>
   1747c:	ldr	r3, [fp]
   17480:	cmp	r3, #0
   17484:	beq	17594 <_obstack_memory_used@@Base+0x27d8>
   17488:	str	fp, [sp, #44]	; 0x2c
   1748c:	ldr	r0, [r3, #8]
   17490:	ldr	r7, [r3, #16]
   17494:	cmp	r0, #0
   17498:	moveq	r0, r9
   1749c:	beq	174b0 <_obstack_memory_used@@Base+0x26f4>
   174a0:	mov	r1, r8
   174a4:	bl	11274 <strchr@plt>
   174a8:	adds	r0, r0, #0
   174ac:	movne	r0, #1
   174b0:	cmp	r7, #0
   174b4:	mov	r6, r0
   174b8:	beq	17574 <_obstack_memory_used@@Base+0x27b8>
   174bc:	ldr	r3, [r7]
   174c0:	cmp	r3, #0
   174c4:	beq	17574 <_obstack_memory_used@@Base+0x27b8>
   174c8:	ldr	r0, [r3, #8]
   174cc:	ldr	r5, [r3, #16]
   174d0:	cmp	r0, #0
   174d4:	moveq	sl, r9
   174d8:	beq	174ec <_obstack_memory_used@@Base+0x2730>
   174dc:	mov	r1, r8
   174e0:	bl	11274 <strchr@plt>
   174e4:	adds	sl, r0, #0
   174e8:	movne	sl, #1
   174ec:	cmp	r5, #0
   174f0:	beq	17564 <_obstack_memory_used@@Base+0x27a8>
   174f4:	ldr	r3, [r5]
   174f8:	cmp	r3, #0
   174fc:	beq	17564 <_obstack_memory_used@@Base+0x27a8>
   17500:	ldr	r0, [r3, #8]
   17504:	ldr	r4, [r3, #16]
   17508:	cmp	r0, #0
   1750c:	moveq	fp, r9
   17510:	beq	17524 <_obstack_memory_used@@Base+0x2768>
   17514:	mov	r1, r8
   17518:	bl	11274 <strchr@plt>
   1751c:	adds	fp, r0, #0
   17520:	movne	fp, #1
   17524:	cmp	r4, #0
   17528:	beq	17554 <_obstack_memory_used@@Base+0x2798>
   1752c:	ldr	r3, [r4]
   17530:	cmp	r3, #0
   17534:	beq	17554 <_obstack_memory_used@@Base+0x2798>
   17538:	ldr	r1, [r3, #16]
   1753c:	ldr	r0, [r3, #8]
   17540:	bl	17300 <_obstack_memory_used@@Base+0x2544>
   17544:	ldr	r3, [r4, #16]!
   17548:	cmp	r3, #0
   1754c:	add	fp, fp, r0
   17550:	bne	17538 <_obstack_memory_used@@Base+0x277c>
   17554:	ldr	r3, [r5, #16]!
   17558:	add	sl, sl, fp
   1755c:	cmp	r3, #0
   17560:	bne	17500 <_obstack_memory_used@@Base+0x2744>
   17564:	ldr	r3, [r7, #16]!
   17568:	add	r6, r6, sl
   1756c:	cmp	r3, #0
   17570:	bne	174c8 <_obstack_memory_used@@Base+0x270c>
   17574:	ldr	r2, [sp, #44]	; 0x2c
   17578:	ldr	r3, [r2, #16]!
   1757c:	str	r2, [sp, #44]	; 0x2c
   17580:	ldr	r2, [sp, #16]
   17584:	cmp	r3, #0
   17588:	add	r2, r2, r6
   1758c:	str	r2, [sp, #16]
   17590:	bne	1748c <_obstack_memory_used@@Base+0x26d0>
   17594:	ldr	r2, [sp, #40]	; 0x28
   17598:	ldr	r1, [sp, #16]
   1759c:	ldr	r3, [r2, #16]!
   175a0:	str	r2, [sp, #40]	; 0x28
   175a4:	ldr	r2, [sp, #12]
   175a8:	cmp	r3, #0
   175ac:	add	r2, r2, r1
   175b0:	str	r2, [sp, #12]
   175b4:	bne	1744c <_obstack_memory_used@@Base+0x2690>
   175b8:	ldr	r2, [sp, #36]	; 0x24
   175bc:	ldr	r1, [sp, #12]
   175c0:	ldr	r3, [r2, #16]!
   175c4:	str	r2, [sp, #36]	; 0x24
   175c8:	ldr	r2, [sp, #8]
   175cc:	cmp	r3, #0
   175d0:	add	r2, r2, r1
   175d4:	str	r2, [sp, #8]
   175d8:	bne	1740c <_obstack_memory_used@@Base+0x2650>
   175dc:	ldr	r2, [sp, #32]
   175e0:	ldr	r3, [r2, #16]!
   175e4:	str	r2, [sp, #32]
   175e8:	ldmib	sp, {r1, r2}
   175ec:	cmp	r3, #0
   175f0:	add	r2, r2, r1
   175f4:	str	r2, [sp, #4]
   175f8:	bne	173cc <_obstack_memory_used@@Base+0x2610>
   175fc:	ldr	r2, [sp, #28]
   17600:	ldr	r3, [r2, #16]!
   17604:	str	r2, [sp, #28]
   17608:	ldm	sp, {r1, r2}
   1760c:	cmp	r3, #0
   17610:	add	r2, r2, r1
   17614:	str	r2, [sp]
   17618:	bne	1738c <_obstack_memory_used@@Base+0x25d0>
   1761c:	ldr	r2, [sp, #24]
   17620:	ldr	r1, [sp]
   17624:	ldr	r3, [r2, #16]!
   17628:	str	r2, [sp, #24]
   1762c:	ldr	r2, [sp, #20]
   17630:	cmp	r3, #0
   17634:	add	r2, r2, r1
   17638:	str	r2, [sp, #20]
   1763c:	bne	1734c <_obstack_memory_used@@Base+0x2590>
   17640:	ldr	r0, [sp, #20]
   17644:	add	sp, sp, #52	; 0x34
   17648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1764c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17650:	add	fp, sp, #32
   17654:	sub	sp, sp, #36	; 0x24
   17658:	ldr	r3, [r0, #4]
   1765c:	cmp	r3, #0
   17660:	str	r3, [fp, #-40]	; 0xffffffd8
   17664:	bne	17670 <_obstack_memory_used@@Base+0x28b4>
   17668:	sub	sp, fp, #32
   1766c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17670:	mov	r4, r0
   17674:	str	r0, [fp, #-60]	; 0xffffffc4
   17678:	ldr	r0, [r0, #8]
   1767c:	str	r1, [fp, #-44]	; 0xffffffd4
   17680:	bl	11268 <strlen@plt>
   17684:	ldr	r3, [r4]
   17688:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1768c:	add	r3, r3, #28
   17690:	mov	r9, r3
   17694:	str	r3, [fp, #-64]	; 0xffffffc0
   17698:	mov	sl, r9
   1769c:	str	r2, [fp, #-48]	; 0xffffffd0
   176a0:	add	r3, r0, #15
   176a4:	bic	r3, r3, #7
   176a8:	sub	sp, sp, r3
   176ac:	str	sp, [fp, #-56]	; 0xffffffc8
   176b0:	str	sp, [fp, #-52]	; 0xffffffcc
   176b4:	ldr	r5, [sl, #-24]	; 0xffffffe8
   176b8:	ldr	r4, [sl, #-28]	; 0xffffffe4
   176bc:	cmp	r5, #0
   176c0:	ldr	r9, [sl, #-20]	; 0xffffffec
   176c4:	beq	1773c <_obstack_memory_used@@Base+0x2980>
   176c8:	mov	r8, r4
   176cc:	b	176dc <_obstack_memory_used@@Base+0x2920>
   176d0:	subs	r5, r5, #1
   176d4:	add	r4, r4, #24
   176d8:	beq	1773c <_obstack_memory_used@@Base+0x2980>
   176dc:	ldr	r6, [r4, #12]
   176e0:	tst	r6, #8
   176e4:	bne	176d0 <_obstack_memory_used@@Base+0x2914>
   176e8:	ldr	r7, [r4, #4]
   176ec:	sub	r3, r7, #1
   176f0:	cmp	r3, #254	; 0xfe
   176f4:	bhi	176d0 <_obstack_memory_used@@Base+0x2914>
   176f8:	bl	11250 <__ctype_b_loc@plt>
   176fc:	lsl	r3, r7, #1
   17700:	ldr	r2, [r0]
   17704:	ldrh	r3, [r2, r3]
   17708:	tst	r3, #16384	; 0x4000
   1770c:	beq	176d0 <_obstack_memory_used@@Base+0x2914>
   17710:	ldrb	r3, [r9]
   17714:	cmp	r7, r3
   17718:	bne	176d0 <_obstack_memory_used@@Base+0x2914>
   1771c:	tst	r6, #4
   17720:	moveq	r8, r4
   17724:	tst	r6, #2
   17728:	beq	178b0 <_obstack_memory_used@@Base+0x2af4>
   1772c:	subs	r5, r5, #1
   17730:	add	r9, r9, #1
   17734:	add	r4, r4, #24
   17738:	bne	176dc <_obstack_memory_used@@Base+0x2920>
   1773c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17740:	add	sl, sl, #28
   17744:	subs	r3, r3, #1
   17748:	str	r3, [fp, #-48]	; 0xffffffd0
   1774c:	bne	176b4 <_obstack_memory_used@@Base+0x28f8>
   17750:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17754:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17758:	cmp	r3, r2
   1775c:	bcc	17a64 <_obstack_memory_used@@Base+0x2ca8>
   17760:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17764:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17768:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1776c:	cmp	r5, #0
   17770:	ldr	r6, [r7, #-20]	; 0xffffffec
   17774:	movne	r8, r4
   17778:	bne	1778c <_obstack_memory_used@@Base+0x29d0>
   1777c:	b	177ec <_obstack_memory_used@@Base+0x2a30>
   17780:	subs	r5, r5, #1
   17784:	add	r4, r4, #24
   17788:	beq	177ec <_obstack_memory_used@@Base+0x2a30>
   1778c:	ldr	r9, [r4, #12]
   17790:	tst	r9, #8
   17794:	bne	17780 <_obstack_memory_used@@Base+0x29c4>
   17798:	ldr	sl, [r4, #4]
   1779c:	sub	r3, sl, #1
   177a0:	cmp	r3, #254	; 0xfe
   177a4:	bhi	17780 <_obstack_memory_used@@Base+0x29c4>
   177a8:	bl	11250 <__ctype_b_loc@plt>
   177ac:	lsl	r3, sl, #1
   177b0:	ldr	r1, [r0]
   177b4:	ldrh	r3, [r1, r3]
   177b8:	tst	r3, #16384	; 0x4000
   177bc:	beq	17780 <_obstack_memory_used@@Base+0x29c4>
   177c0:	ldrb	r3, [r6]
   177c4:	cmp	sl, r3
   177c8:	bne	17780 <_obstack_memory_used@@Base+0x29c4>
   177cc:	tst	r9, #4
   177d0:	moveq	r8, r4
   177d4:	tst	r9, #2
   177d8:	beq	178e8 <_obstack_memory_used@@Base+0x2b2c>
   177dc:	subs	r5, r5, #1
   177e0:	add	r6, r6, #1
   177e4:	add	r4, r4, #24
   177e8:	bne	1778c <_obstack_memory_used@@Base+0x29d0>
   177ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   177f0:	add	r7, r7, #28
   177f4:	subs	r3, r3, #1
   177f8:	str	r3, [fp, #-40]	; 0xffffffd8
   177fc:	bne	17764 <_obstack_memory_used@@Base+0x29a8>
   17800:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17804:	ldm	r3, {r7, r8}
   17808:	cmp	r8, #0
   1780c:	beq	17668 <_obstack_memory_used@@Base+0x28ac>
   17810:	ldr	sl, [pc, #652]	; 17aa4 <_obstack_memory_used@@Base+0x2ce8>
   17814:	ldr	r9, [pc, #652]	; 17aa8 <_obstack_memory_used@@Base+0x2cec>
   17818:	add	r7, r7, #28
   1781c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17820:	ldr	r4, [r7, #-28]	; 0xffffffe4
   17824:	cmp	r5, #0
   17828:	movne	r6, r4
   1782c:	bne	17840 <_obstack_memory_used@@Base+0x2a84>
   17830:	b	1789c <_obstack_memory_used@@Base+0x2ae0>
   17834:	subs	r5, r5, #1
   17838:	add	r4, r4, #24
   1783c:	beq	1789c <_obstack_memory_used@@Base+0x2ae0>
   17840:	ldr	r2, [r4]
   17844:	cmp	r2, #0
   17848:	beq	17834 <_obstack_memory_used@@Base+0x2a78>
   1784c:	ldr	r1, [r4, #12]
   17850:	tst	r1, #4
   17854:	moveq	r6, r4
   17858:	tst	r1, #2
   1785c:	bne	17834 <_obstack_memory_used@@Base+0x2a78>
   17860:	ldr	r3, [r4, #8]
   17864:	ldr	r0, [r6, #12]
   17868:	cmp	r3, #0
   1786c:	orr	r1, r1, r0
   17870:	beq	17994 <_obstack_memory_used@@Base+0x2bd8>
   17874:	tst	r1, #16
   17878:	bne	17834 <_obstack_memory_used@@Base+0x2a78>
   1787c:	tst	r1, #1
   17880:	movne	r1, r9
   17884:	moveq	r1, sl
   17888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1788c:	bl	1c7a0 <argp_error@@Base+0x2108>
   17890:	subs	r5, r5, #1
   17894:	add	r4, r4, #24
   17898:	bne	17840 <_obstack_memory_used@@Base+0x2a84>
   1789c:	subs	r8, r8, #1
   178a0:	add	r7, r7, #28
   178a4:	bne	1781c <_obstack_memory_used@@Base+0x2a60>
   178a8:	sub	sp, fp, #32
   178ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   178b0:	ldr	r3, [r4, #8]
   178b4:	cmp	r3, #0
   178b8:	bne	1772c <_obstack_memory_used@@Base+0x2970>
   178bc:	ldr	r3, [r8, #8]
   178c0:	cmp	r3, #0
   178c4:	bne	1772c <_obstack_memory_used@@Base+0x2970>
   178c8:	ldr	r3, [r8, #12]
   178cc:	orr	r6, r6, r3
   178d0:	tst	r6, #16
   178d4:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   178d8:	strbeq	r7, [r3]
   178dc:	addeq	r3, r3, #1
   178e0:	streq	r3, [fp, #-52]	; 0xffffffcc
   178e4:	b	1772c <_obstack_memory_used@@Base+0x2970>
   178e8:	ldr	r3, [r4, #8]
   178ec:	ldr	r1, [r8, #12]
   178f0:	cmp	r3, #0
   178f4:	orr	r9, r9, r1
   178f8:	beq	179f0 <_obstack_memory_used@@Base+0x2c34>
   178fc:	tst	r9, #16
   17900:	bne	177dc <_obstack_memory_used@@Base+0x2a20>
   17904:	tst	r9, #1
   17908:	bne	179b8 <_obstack_memory_used@@Base+0x2bfc>
   1790c:	mov	r0, r3
   17910:	str	r3, [fp, #-48]	; 0xffffffd0
   17914:	bl	11268 <strlen@plt>
   17918:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1791c:	ldr	r1, [r3, #28]
   17920:	ldr	r2, [r3, #24]
   17924:	sub	r2, r1, r2
   17928:	mov	r9, r0
   1792c:	ldr	r0, [r3, #16]
   17930:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17934:	cmp	r2, r0
   17938:	bhi	17a4c <_obstack_memory_used@@Base+0x2c90>
   1793c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   17940:	ldr	r2, [ip, #20]
   17944:	ldr	r0, [ip, #8]
   17948:	bic	r2, r2, r2, asr #31
   1794c:	add	r2, r2, #6
   17950:	add	r2, r2, r9
   17954:	cmp	r2, r0
   17958:	bcc	179cc <_obstack_memory_used@@Base+0x2c10>
   1795c:	ldr	r2, [ip, #32]
   17960:	mov	r0, ip
   17964:	cmp	r2, r1
   17968:	bls	17a00 <_obstack_memory_used@@Base+0x2c44>
   1796c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17970:	add	r2, r1, #1
   17974:	str	r2, [r0, #28]
   17978:	mov	r2, #10
   1797c:	strb	r2, [r1]
   17980:	ldr	r2, [r4, #4]
   17984:	ldr	r1, [pc, #288]	; 17aac <_obstack_memory_used@@Base+0x2cf0>
   17988:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1798c:	bl	1c7a0 <argp_error@@Base+0x2108>
   17990:	b	177dc <_obstack_memory_used@@Base+0x2a20>
   17994:	tst	r1, #16
   17998:	bne	17834 <_obstack_memory_used@@Base+0x2a78>
   1799c:	ldr	r3, [r6, #8]
   179a0:	cmp	r3, #0
   179a4:	bne	1787c <_obstack_memory_used@@Base+0x2ac0>
   179a8:	ldr	r1, [pc, #256]	; 17ab0 <_obstack_memory_used@@Base+0x2cf4>
   179ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179b0:	bl	1c7a0 <argp_error@@Base+0x2108>
   179b4:	b	17834 <_obstack_memory_used@@Base+0x2a78>
   179b8:	mov	r2, sl
   179bc:	ldr	r1, [pc, #240]	; 17ab4 <_obstack_memory_used@@Base+0x2cf8>
   179c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179c4:	bl	1c7a0 <argp_error@@Base+0x2108>
   179c8:	b	177dc <_obstack_memory_used@@Base+0x2a20>
   179cc:	ldr	r2, [ip, #32]
   179d0:	cmp	r2, r1
   179d4:	bls	17a24 <_obstack_memory_used@@Base+0x2c68>
   179d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   179dc:	add	r2, r1, #1
   179e0:	str	r2, [r0, #28]
   179e4:	mov	r2, #32
   179e8:	strb	r2, [r1]
   179ec:	b	17980 <_obstack_memory_used@@Base+0x2bc4>
   179f0:	ldr	r3, [r8, #8]
   179f4:	cmp	r3, #0
   179f8:	beq	177dc <_obstack_memory_used@@Base+0x2a20>
   179fc:	b	178fc <_obstack_memory_used@@Base+0x2b40>
   17a00:	mov	r1, #1
   17a04:	str	r3, [fp, #-48]	; 0xffffffd0
   17a08:	mov	r9, ip
   17a0c:	bl	1c6a0 <argp_error@@Base+0x2008>
   17a10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17a14:	cmp	r0, #0
   17a18:	beq	17980 <_obstack_memory_used@@Base+0x2bc4>
   17a1c:	ldr	r1, [r9, #28]
   17a20:	b	1796c <_obstack_memory_used@@Base+0x2bb0>
   17a24:	ldr	r9, [fp, #-44]	; 0xffffffd4
   17a28:	mov	r1, #1
   17a2c:	mov	r0, r9
   17a30:	str	r3, [fp, #-48]	; 0xffffffd0
   17a34:	bl	1c6a0 <argp_error@@Base+0x2008>
   17a38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17a3c:	cmp	r0, #0
   17a40:	beq	17980 <_obstack_memory_used@@Base+0x2bc4>
   17a44:	ldr	r1, [r9, #28]
   17a48:	b	179d8 <_obstack_memory_used@@Base+0x2c1c>
   17a4c:	ldr	sl, [fp, #-44]	; 0xffffffd4
   17a50:	mov	r0, sl
   17a54:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   17a58:	ldr	r1, [sl, #28]
   17a5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17a60:	b	1793c <_obstack_memory_used@@Base+0x2b80>
   17a64:	mov	r2, r3
   17a68:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   17a6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17a70:	ldr	r1, [pc, #64]	; 17ab8 <_obstack_memory_used@@Base+0x2cfc>
   17a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17a78:	strb	ip, [r3]
   17a7c:	bl	1c7a0 <argp_error@@Base+0x2108>
   17a80:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17a84:	ldr	r3, [r2, #4]
   17a88:	cmp	r3, #0
   17a8c:	str	r3, [fp, #-40]	; 0xffffffd8
   17a90:	beq	17668 <_obstack_memory_used@@Base+0x28ac>
   17a94:	ldr	r3, [r2]
   17a98:	add	r3, r3, #28
   17a9c:	str	r3, [fp, #-64]	; 0xffffffc0
   17aa0:	b	17760 <_obstack_memory_used@@Base+0x29a4>
   17aa4:	andeq	pc, r1, r0, lsr #6
   17aa8:	andeq	pc, r1, r0, lsl r3	; <UNPREDICTABLE>
   17aac:	andeq	pc, r1, r4, lsl #6
   17ab0:	andeq	pc, r1, ip, lsr #6
   17ab4:	strdeq	pc, [r1], -r8
   17ab8:	strdeq	pc, [r1], -r0
   17abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ac0:	subs	r4, r1, #0
   17ac4:	sub	sp, sp, #12
   17ac8:	mov	r8, r0
   17acc:	mov	r7, r2
   17ad0:	beq	17ca4 <_obstack_memory_used@@Base+0x2ee8>
   17ad4:	ldr	r3, [r4, #20]
   17ad8:	cmp	r3, #0
   17adc:	beq	17ca4 <_obstack_memory_used@@Base+0x2ee8>
   17ae0:	ldr	r1, [r2, #16]
   17ae4:	mov	r0, r4
   17ae8:	bl	14768 <argp_parse@@Base+0xe20>
   17aec:	ldr	r3, [r4, #20]
   17af0:	mov	r1, r8
   17af4:	mov	r2, r0
   17af8:	ldr	r0, [pc, #628]	; 17d74 <_obstack_memory_used@@Base+0x2fb8>
   17afc:	blx	r3
   17b00:	mov	r6, r0
   17b04:	cmp	r6, #0
   17b08:	beq	17c70 <_obstack_memory_used@@Base+0x2eb4>
   17b0c:	ldrb	r3, [r6]
   17b10:	cmp	r3, #0
   17b14:	beq	17c64 <_obstack_memory_used@@Base+0x2ea8>
   17b18:	ldr	r3, [r7, #8]
   17b1c:	ldr	r3, [r3]
   17b20:	cmp	r3, #0
   17b24:	beq	17b4c <_obstack_memory_used@@Base+0x2d90>
   17b28:	ldr	r4, [r7, #4]
   17b2c:	ldr	r3, [r4, #28]
   17b30:	ldr	r2, [r4, #32]
   17b34:	cmp	r3, r2
   17b38:	bcs	17d58 <_obstack_memory_used@@Base+0x2f9c>
   17b3c:	add	r1, r3, #1
   17b40:	mov	r2, #10
   17b44:	str	r1, [r4, #28]
   17b48:	strb	r2, [r3]
   17b4c:	ldr	r4, [r7, #4]
   17b50:	ldr	sl, [pc, #544]	; 17d78 <_obstack_memory_used@@Base+0x2fbc>
   17b54:	ldr	r3, [r4, #28]
   17b58:	ldr	r1, [r4, #24]
   17b5c:	ldr	r2, [r4, #16]
   17b60:	sub	r3, r3, r1
   17b64:	cmp	r3, r2
   17b68:	ldr	r5, [sl, #24]
   17b6c:	bhi	17d30 <_obstack_memory_used@@Base+0x2f74>
   17b70:	ldr	r3, [r4, #20]
   17b74:	mov	fp, #32
   17b78:	cmp	r3, #0
   17b7c:	subge	r5, r5, r3
   17b80:	mov	r9, #1
   17b84:	cmp	r5, #0
   17b88:	sub	r5, r5, #1
   17b8c:	ble	17bb8 <_obstack_memory_used@@Base+0x2dfc>
   17b90:	ldr	r3, [r4, #28]
   17b94:	ldr	r2, [r4, #32]
   17b98:	cmp	r3, r2
   17b9c:	bcs	17c88 <_obstack_memory_used@@Base+0x2ecc>
   17ba0:	add	r2, r3, #1
   17ba4:	cmp	r5, #0
   17ba8:	str	r2, [r4, #28]
   17bac:	sub	r5, r5, #1
   17bb0:	strb	fp, [r3]
   17bb4:	bgt	17b90 <_obstack_memory_used@@Base+0x2dd4>
   17bb8:	ldr	r4, [r7, #4]
   17bbc:	ldr	r9, [sl, #24]
   17bc0:	ldr	r5, [r4, #28]
   17bc4:	ldr	r3, [r4, #24]
   17bc8:	ldr	r2, [r4, #16]
   17bcc:	sub	r3, r5, r3
   17bd0:	cmp	r3, r2
   17bd4:	strls	r9, [r4, #4]
   17bd8:	movls	fp, r4
   17bdc:	bhi	17ce4 <_obstack_memory_used@@Base+0x2f28>
   17be0:	str	r9, [fp, #12]
   17be4:	mov	r0, r6
   17be8:	bl	11268 <strlen@plt>
   17bec:	subs	r9, r0, #0
   17bf0:	beq	17c28 <_obstack_memory_used@@Base+0x2e6c>
   17bf4:	ldr	r2, [r4, #32]
   17bf8:	add	r3, r5, r9
   17bfc:	cmp	r2, r3
   17c00:	bcc	17cb4 <_obstack_memory_used@@Base+0x2ef8>
   17c04:	mov	r2, r9
   17c08:	mov	r0, r5
   17c0c:	mov	r1, r6
   17c10:	bl	1116c <memcpy@plt>
   17c14:	ldr	r3, [r4, #28]
   17c18:	add	r9, r3, r9
   17c1c:	str	r9, [r4, #28]
   17c20:	ldr	r4, [r7, #4]
   17c24:	ldr	r5, [r4, #28]
   17c28:	ldr	r3, [r4, #24]
   17c2c:	ldr	r2, [r4, #16]
   17c30:	sub	r3, r5, r3
   17c34:	cmp	r3, r2
   17c38:	movls	r9, r4
   17c3c:	bhi	17cd0 <_obstack_memory_used@@Base+0x2f14>
   17c40:	ldr	r2, [r9, #32]
   17c44:	mov	r3, #0
   17c48:	cmp	r2, r5
   17c4c:	str	r3, [r4, #4]
   17c50:	bls	17d3c <_obstack_memory_used@@Base+0x2f80>
   17c54:	add	r2, r5, #1
   17c58:	mov	r3, #10
   17c5c:	str	r2, [r9, #28]
   17c60:	strb	r3, [r5]
   17c64:	ldr	r3, [r7, #8]
   17c68:	mov	r2, #1
   17c6c:	str	r2, [r3, #4]
   17c70:	cmp	r8, r6
   17c74:	beq	17cac <_obstack_memory_used@@Base+0x2ef0>
   17c78:	mov	r0, r6
   17c7c:	add	sp, sp, #12
   17c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c84:	b	148c4 <argp_parse@@Base+0xf7c>
   17c88:	mov	r1, r9
   17c8c:	mov	r0, r4
   17c90:	bl	1c6a0 <argp_error@@Base+0x2008>
   17c94:	cmp	r0, #0
   17c98:	beq	17b84 <_obstack_memory_used@@Base+0x2dc8>
   17c9c:	ldr	r3, [r4, #28]
   17ca0:	b	17ba0 <_obstack_memory_used@@Base+0x2de4>
   17ca4:	mov	r6, r8
   17ca8:	b	17b04 <_obstack_memory_used@@Base+0x2d48>
   17cac:	add	sp, sp, #12
   17cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17cb4:	mov	r1, r9
   17cb8:	mov	r0, r4
   17cbc:	bl	1c6a0 <argp_error@@Base+0x2008>
   17cc0:	cmp	r0, #0
   17cc4:	beq	17c20 <_obstack_memory_used@@Base+0x2e64>
   17cc8:	ldr	r5, [r4, #28]
   17ccc:	b	17c04 <_obstack_memory_used@@Base+0x2e48>
   17cd0:	mov	r0, r4
   17cd4:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   17cd8:	ldr	r9, [r7, #4]
   17cdc:	ldr	r5, [r9, #28]
   17ce0:	b	17c40 <_obstack_memory_used@@Base+0x2e84>
   17ce4:	mov	r0, r4
   17ce8:	str	r9, [sp, #4]
   17cec:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   17cf0:	ldr	fp, [r7, #4]
   17cf4:	ldr	r3, [sp, #4]
   17cf8:	ldr	r9, [sl, #24]
   17cfc:	ldr	r5, [fp, #28]
   17d00:	ldr	r2, [fp, #24]
   17d04:	ldr	r1, [fp, #16]
   17d08:	sub	r2, r5, r2
   17d0c:	cmp	r2, r1
   17d10:	str	r3, [r4, #4]
   17d14:	movls	r4, fp
   17d18:	bls	17be0 <_obstack_memory_used@@Base+0x2e24>
   17d1c:	mov	r0, fp
   17d20:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   17d24:	ldr	r4, [r7, #4]
   17d28:	ldr	r5, [r4, #28]
   17d2c:	b	17be0 <_obstack_memory_used@@Base+0x2e24>
   17d30:	mov	r0, r4
   17d34:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   17d38:	b	17b70 <_obstack_memory_used@@Base+0x2db4>
   17d3c:	mov	r1, #1
   17d40:	mov	r0, r9
   17d44:	bl	1c6a0 <argp_error@@Base+0x2008>
   17d48:	cmp	r0, #0
   17d4c:	beq	17c64 <_obstack_memory_used@@Base+0x2ea8>
   17d50:	ldr	r5, [r9, #28]
   17d54:	b	17c54 <_obstack_memory_used@@Base+0x2e98>
   17d58:	mov	r1, #1
   17d5c:	mov	r0, r4
   17d60:	bl	1c6a0 <argp_error@@Base+0x2008>
   17d64:	cmp	r0, #0
   17d68:	beq	17b4c <_obstack_memory_used@@Base+0x2d90>
   17d6c:	ldr	r3, [r4, #28]
   17d70:	b	17b3c <_obstack_memory_used@@Base+0x2d80>
   17d74:	andeq	r0, r0, #3
   17d78:	andeq	r3, r3, r4, ror r8
   17d7c:	ldr	r3, [r1, #12]
   17d80:	push	{r4, r5, r6, r7, r8, lr}
   17d84:	cmp	r3, #0
   17d88:	mov	r6, r1
   17d8c:	mov	r5, r0
   17d90:	beq	17e78 <_obstack_memory_used@@Base+0x30bc>
   17d94:	ldr	r3, [r1, #8]
   17d98:	ldr	r2, [r1]
   17d9c:	ldr	r7, [r3]
   17da0:	ldr	r3, [r3, #4]
   17da4:	ldr	r4, [r2, #16]
   17da8:	cmp	r3, #0
   17dac:	cmpne	r7, #0
   17db0:	beq	17de8 <_obstack_memory_used@@Base+0x302c>
   17db4:	ldr	r2, [r2, #12]
   17db8:	ldr	r3, [r7, #12]
   17dbc:	cmp	r2, r3
   17dc0:	beq	17de8 <_obstack_memory_used@@Base+0x302c>
   17dc4:	ldr	r8, [r1, #4]
   17dc8:	ldr	r3, [r8, #28]
   17dcc:	ldr	r2, [r8, #32]
   17dd0:	cmp	r3, r2
   17dd4:	bcs	17fb0 <_obstack_memory_used@@Base+0x31f4>
   17dd8:	add	r1, r3, #1
   17ddc:	mov	r2, #10
   17de0:	str	r1, [r8, #28]
   17de4:	strb	r2, [r3]
   17de8:	cmp	r4, #0
   17dec:	beq	17f2c <_obstack_memory_used@@Base+0x3170>
   17df0:	ldr	r0, [r4]
   17df4:	cmp	r0, #0
   17df8:	beq	17f2c <_obstack_memory_used@@Base+0x3170>
   17dfc:	ldrb	r3, [r0]
   17e00:	cmp	r3, #0
   17e04:	beq	17f2c <_obstack_memory_used@@Base+0x3170>
   17e08:	cmp	r7, #0
   17e0c:	beq	17e3c <_obstack_memory_used@@Base+0x3080>
   17e10:	ldr	r3, [r7, #16]
   17e14:	cmp	r4, r3
   17e18:	beq	17f2c <_obstack_memory_used@@Base+0x3170>
   17e1c:	cmp	r3, #0
   17e20:	beq	17e3c <_obstack_memory_used@@Base+0x3080>
   17e24:	ldr	r3, [r3, #12]
   17e28:	cmp	r3, #0
   17e2c:	cmpne	r4, r3
   17e30:	bne	17e24 <_obstack_memory_used@@Base+0x3068>
   17e34:	cmp	r4, r3
   17e38:	beq	17f2c <_obstack_memory_used@@Base+0x3170>
   17e3c:	ldr	r3, [r6, #4]
   17e40:	ldr	r1, [r4, #16]
   17e44:	mov	r2, r6
   17e48:	ldr	r7, [r3, #12]
   17e4c:	bl	17abc <_obstack_memory_used@@Base+0x2d00>
   17e50:	ldr	r8, [r6, #4]
   17e54:	ldr	r3, [r8, #28]
   17e58:	ldr	r1, [r8, #24]
   17e5c:	ldr	r2, [r8, #16]
   17e60:	sub	r3, r3, r1
   17e64:	cmp	r3, r2
   17e68:	movls	r4, r8
   17e6c:	bhi	17f90 <_obstack_memory_used@@Base+0x31d4>
   17e70:	str	r7, [r8, #12]
   17e74:	b	17f40 <_obstack_memory_used@@Base+0x3184>
   17e78:	ldr	r7, [r1, #4]
   17e7c:	ldr	r3, [r7, #28]
   17e80:	ldr	r1, [r7, #32]
   17e84:	add	r2, r3, #2
   17e88:	cmp	r1, r2
   17e8c:	bcc	17f10 <_obstack_memory_used@@Base+0x3154>
   17e90:	ldr	r2, [pc, #308]	; 17fcc <_obstack_memory_used@@Base+0x3210>
   17e94:	ldrh	r2, [r2]
   17e98:	strh	r2, [r3]
   17e9c:	ldr	r4, [r6, #4]
   17ea0:	ldr	r3, [r7, #28]
   17ea4:	add	r3, r3, #2
   17ea8:	str	r3, [r7, #28]
   17eac:	ldr	r1, [r4, #24]
   17eb0:	ldr	r3, [r4, #28]
   17eb4:	ldr	r2, [r4, #16]
   17eb8:	sub	r3, r3, r1
   17ebc:	cmp	r3, r2
   17ec0:	bhi	17f50 <_obstack_memory_used@@Base+0x3194>
   17ec4:	ldr	r3, [r4, #20]
   17ec8:	mov	r6, #32
   17ecc:	cmp	r3, #0
   17ed0:	subge	r5, r5, r3
   17ed4:	mov	r7, #1
   17ed8:	cmp	r5, #0
   17edc:	sub	r5, r5, #1
   17ee0:	ble	17f0c <_obstack_memory_used@@Base+0x3150>
   17ee4:	ldr	r3, [r4, #28]
   17ee8:	ldr	r2, [r4, #32]
   17eec:	cmp	r3, r2
   17ef0:	bcs	17f5c <_obstack_memory_used@@Base+0x31a0>
   17ef4:	add	r2, r3, #1
   17ef8:	cmp	r5, #0
   17efc:	str	r2, [r4, #28]
   17f00:	sub	r5, r5, #1
   17f04:	strb	r6, [r3]
   17f08:	bgt	17ee4 <_obstack_memory_used@@Base+0x3128>
   17f0c:	pop	{r4, r5, r6, r7, r8, pc}
   17f10:	mov	r1, #2
   17f14:	mov	r0, r7
   17f18:	bl	1c6a0 <argp_error@@Base+0x2008>
   17f1c:	cmp	r0, #0
   17f20:	beq	17f78 <_obstack_memory_used@@Base+0x31bc>
   17f24:	ldr	r3, [r7, #28]
   17f28:	b	17e90 <_obstack_memory_used@@Base+0x30d4>
   17f2c:	ldr	r4, [r6, #4]
   17f30:	ldr	r3, [r4, #28]
   17f34:	ldr	r1, [r4, #24]
   17f38:	ldr	r2, [r4, #16]
   17f3c:	sub	r3, r3, r1
   17f40:	mov	r1, #0
   17f44:	cmp	r3, r2
   17f48:	str	r1, [r6, #12]
   17f4c:	bls	17ec4 <_obstack_memory_used@@Base+0x3108>
   17f50:	mov	r0, r4
   17f54:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   17f58:	b	17ec4 <_obstack_memory_used@@Base+0x3108>
   17f5c:	mov	r1, r7
   17f60:	mov	r0, r4
   17f64:	bl	1c6a0 <argp_error@@Base+0x2008>
   17f68:	cmp	r0, #0
   17f6c:	beq	17ed8 <_obstack_memory_used@@Base+0x311c>
   17f70:	ldr	r3, [r4, #28]
   17f74:	b	17ef4 <_obstack_memory_used@@Base+0x3138>
   17f78:	ldr	r4, [r6, #4]
   17f7c:	ldr	r3, [r4, #28]
   17f80:	ldr	r1, [r4, #24]
   17f84:	ldr	r2, [r4, #16]
   17f88:	sub	r3, r3, r1
   17f8c:	b	17ebc <_obstack_memory_used@@Base+0x3100>
   17f90:	mov	r0, r8
   17f94:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   17f98:	ldr	r4, [r6, #4]
   17f9c:	ldr	r3, [r4, #28]
   17fa0:	ldr	r1, [r4, #24]
   17fa4:	ldr	r2, [r4, #16]
   17fa8:	sub	r3, r3, r1
   17fac:	b	17e70 <_obstack_memory_used@@Base+0x30b4>
   17fb0:	mov	r1, #1
   17fb4:	mov	r0, r8
   17fb8:	bl	1c6a0 <argp_error@@Base+0x2008>
   17fbc:	cmp	r0, #0
   17fc0:	beq	17de8 <_obstack_memory_used@@Base+0x302c>
   17fc4:	ldr	r3, [r8, #28]
   17fc8:	b	17dd8 <_obstack_memory_used@@Base+0x301c>
   17fcc:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   17fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fd4:	sub	sp, sp, #28
   17fd8:	ldr	r6, [r0, #12]
   17fdc:	ldr	r7, [r1, #12]
   17fe0:	cmp	r6, r7
   17fe4:	beq	1825c <_obstack_memory_used@@Base+0x34a0>
   17fe8:	ldr	r8, [r6, #12]
   17fec:	ldr	r9, [r7, #12]
   17ff0:	mov	r5, r1
   17ff4:	cmp	r8, r9
   17ff8:	mov	r4, r0
   17ffc:	beq	18224 <_obstack_memory_used@@Base+0x3468>
   18000:	ldr	sl, [r8, #12]
   18004:	ldr	fp, [r9, #12]
   18008:	cmp	sl, fp
   1800c:	beq	182c4 <_obstack_memory_used@@Base+0x3508>
   18010:	ldr	r3, [sl, #12]
   18014:	ldr	r2, [fp, #12]
   18018:	cmp	r3, r2
   1801c:	beq	182f8 <_obstack_memory_used@@Base+0x353c>
   18020:	ldr	r1, [r3, #12]
   18024:	ldr	r0, [r2, #12]
   18028:	str	r1, [sp]
   1802c:	cmp	r1, r0
   18030:	str	r0, [sp, #4]
   18034:	beq	18290 <_obstack_memory_used@@Base+0x34d4>
   18038:	ldr	r1, [r1, #12]
   1803c:	ldr	r0, [r0, #12]
   18040:	str	r1, [sp, #8]
   18044:	cmp	r1, r0
   18048:	str	r0, [sp, #12]
   1804c:	beq	1832c <_obstack_memory_used@@Base+0x3570>
   18050:	ldr	r0, [r1, #12]
   18054:	ldr	r1, [sp, #12]
   18058:	ldr	r1, [r1, #12]
   1805c:	cmp	r0, r1
   18060:	beq	1836c <_obstack_memory_used@@Base+0x35b0>
   18064:	str	r2, [sp, #20]
   18068:	str	r3, [sp, #16]
   1806c:	bl	17fd0 <_obstack_memory_used@@Base+0x3214>
   18070:	cmp	r0, #0
   18074:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   18078:	ldr	r3, [sp, #12]
   1807c:	ldr	r2, [sp, #20]
   18080:	ldr	r1, [r3, #8]
   18084:	ldr	r3, [sp, #8]
   18088:	mvn	ip, r1
   1808c:	ldr	r0, [r3, #8]
   18090:	lsr	ip, ip, #31
   18094:	ldr	r3, [sp, #16]
   18098:	cmp	ip, r0, lsr #31
   1809c:	subne	r0, r0, r1
   180a0:	subeq	r0, r1, r0
   180a4:	cmp	r0, #0
   180a8:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   180ac:	ldr	r1, [sp, #12]
   180b0:	ldr	r0, [sp, #8]
   180b4:	ldr	r1, [r1, #4]
   180b8:	ldr	r0, [r0, #4]
   180bc:	sub	r0, r1, r0
   180c0:	cmp	r0, #0
   180c4:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   180c8:	ldr	r1, [sp, #4]
   180cc:	ldr	r0, [sp]
   180d0:	ldr	r1, [r1, #8]
   180d4:	ldr	r0, [r0, #8]
   180d8:	mvn	ip, r1
   180dc:	lsr	ip, ip, #31
   180e0:	cmp	ip, r0, lsr #31
   180e4:	subne	r0, r0, r1
   180e8:	subeq	r0, r1, r0
   180ec:	cmp	r0, #0
   180f0:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   180f4:	ldr	r1, [sp, #4]
   180f8:	ldr	r0, [sp]
   180fc:	ldr	r1, [r1, #4]
   18100:	ldr	r0, [r0, #4]
   18104:	sub	r0, r1, r0
   18108:	cmp	r0, #0
   1810c:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   18110:	ldr	r1, [r2, #8]
   18114:	ldr	r0, [r3, #8]
   18118:	mvn	ip, r1
   1811c:	lsr	ip, ip, #31
   18120:	cmp	ip, r0, lsr #31
   18124:	subne	r0, r0, r1
   18128:	subeq	r0, r1, r0
   1812c:	cmp	r0, #0
   18130:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   18134:	ldr	r2, [r2, #4]
   18138:	ldr	r0, [r3, #4]
   1813c:	sub	r0, r2, r0
   18140:	cmp	r0, #0
   18144:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   18148:	ldr	r3, [fp, #8]
   1814c:	ldr	r0, [sl, #8]
   18150:	mvn	r2, r3
   18154:	lsr	r2, r2, #31
   18158:	cmp	r2, r0, lsr #31
   1815c:	subne	r0, r0, r3
   18160:	subeq	r0, r3, r0
   18164:	cmp	r0, #0
   18168:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   1816c:	ldr	r3, [fp, #4]
   18170:	ldr	r0, [sl, #4]
   18174:	sub	r0, r3, r0
   18178:	cmp	r0, #0
   1817c:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   18180:	ldr	r3, [r9, #8]
   18184:	ldr	r0, [r8, #8]
   18188:	mvn	r2, r3
   1818c:	lsr	r2, r2, #31
   18190:	cmp	r2, r0, lsr #31
   18194:	subne	r0, r0, r3
   18198:	subeq	r0, r3, r0
   1819c:	cmp	r0, #0
   181a0:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   181a4:	ldr	r3, [r9, #4]
   181a8:	ldr	r0, [r8, #4]
   181ac:	sub	r0, r3, r0
   181b0:	cmp	r0, #0
   181b4:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   181b8:	ldr	r3, [r7, #8]
   181bc:	ldr	r0, [r6, #8]
   181c0:	mvn	r2, r3
   181c4:	lsr	r2, r2, #31
   181c8:	cmp	r2, r0, lsr #31
   181cc:	subne	r0, r0, r3
   181d0:	subeq	r0, r3, r0
   181d4:	cmp	r0, #0
   181d8:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   181dc:	ldr	r3, [r7, #4]
   181e0:	ldr	r0, [r6, #4]
   181e4:	sub	r0, r3, r0
   181e8:	cmp	r0, #0
   181ec:	bne	1821c <_obstack_memory_used@@Base+0x3460>
   181f0:	ldr	r3, [r5, #8]
   181f4:	ldr	r0, [r4, #8]
   181f8:	mvn	r2, r3
   181fc:	lsr	r2, r2, #31
   18200:	cmp	r2, r0, lsr #31
   18204:	subne	r0, r0, r3
   18208:	subeq	r0, r3, r0
   1820c:	cmp	r0, #0
   18210:	ldreq	r3, [r5, #4]
   18214:	ldreq	r0, [r4, #4]
   18218:	subeq	r0, r3, r0
   1821c:	add	sp, sp, #28
   18220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18224:	ldr	r3, [r7, #8]
   18228:	ldr	r0, [r6, #8]
   1822c:	mvn	r2, r3
   18230:	ldr	r1, [r7, #4]
   18234:	lsr	r2, r2, #31
   18238:	cmp	r2, r0, lsr #31
   1823c:	subne	r0, r0, r3
   18240:	subeq	r0, r3, r0
   18244:	ldr	r2, [r6, #4]
   18248:	cmp	r0, #0
   1824c:	subeq	r0, r1, r2
   18250:	beq	181e8 <_obstack_memory_used@@Base+0x342c>
   18254:	add	sp, sp, #28
   18258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1825c:	ldr	r2, [r1, #8]
   18260:	ldr	r3, [r0, #8]
   18264:	mvn	ip, r2
   18268:	ldr	lr, [r1, #4]
   1826c:	lsr	ip, ip, #31
   18270:	cmp	ip, r3, lsr #31
   18274:	ldr	r1, [r0, #4]
   18278:	subne	r0, r3, r2
   1827c:	subeq	r0, r2, r3
   18280:	cmp	r0, #0
   18284:	subeq	r0, lr, r1
   18288:	add	sp, sp, #28
   1828c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18290:	ldr	r1, [r2, #8]
   18294:	ldr	r0, [r3, #8]
   18298:	mvn	ip, r1
   1829c:	ldr	r2, [r2, #4]
   182a0:	lsr	ip, ip, #31
   182a4:	cmp	ip, r0, lsr #31
   182a8:	subne	r0, r0, r1
   182ac:	subeq	r0, r1, r0
   182b0:	ldr	r3, [r3, #4]
   182b4:	cmp	r0, #0
   182b8:	subeq	r0, r2, r3
   182bc:	beq	18140 <_obstack_memory_used@@Base+0x3384>
   182c0:	b	1821c <_obstack_memory_used@@Base+0x3460>
   182c4:	ldr	r3, [r9, #8]
   182c8:	ldr	r0, [r8, #8]
   182cc:	mvn	r2, r3
   182d0:	ldr	r1, [r9, #4]
   182d4:	lsr	r2, r2, #31
   182d8:	cmp	r2, r0, lsr #31
   182dc:	subne	r0, r0, r3
   182e0:	subeq	r0, r3, r0
   182e4:	ldr	r2, [r8, #4]
   182e8:	cmp	r0, #0
   182ec:	subeq	r0, r1, r2
   182f0:	beq	181b0 <_obstack_memory_used@@Base+0x33f4>
   182f4:	b	1821c <_obstack_memory_used@@Base+0x3460>
   182f8:	ldr	r3, [fp, #8]
   182fc:	ldr	r0, [sl, #8]
   18300:	mvn	r2, r3
   18304:	ldr	r1, [fp, #4]
   18308:	lsr	r2, r2, #31
   1830c:	cmp	r2, r0, lsr #31
   18310:	subne	r0, r0, r3
   18314:	subeq	r0, r3, r0
   18318:	ldr	r2, [sl, #4]
   1831c:	cmp	r0, #0
   18320:	subeq	r0, r1, r2
   18324:	beq	18178 <_obstack_memory_used@@Base+0x33bc>
   18328:	b	1821c <_obstack_memory_used@@Base+0x3460>
   1832c:	ldr	ip, [sp, #4]
   18330:	ldr	r1, [sp]
   18334:	ldr	lr, [ip, #8]
   18338:	ldr	r0, [r1, #8]
   1833c:	mvn	r1, lr
   18340:	ldr	ip, [ip, #4]
   18344:	lsr	r1, r1, #31
   18348:	cmp	r1, r0, lsr #31
   1834c:	ldr	r1, [sp]
   18350:	subne	r0, r0, lr
   18354:	subeq	r0, lr, r0
   18358:	ldr	r1, [r1, #4]
   1835c:	cmp	r0, #0
   18360:	subeq	r0, ip, r1
   18364:	beq	18108 <_obstack_memory_used@@Base+0x334c>
   18368:	b	1821c <_obstack_memory_used@@Base+0x3460>
   1836c:	ldr	ip, [sp, #12]
   18370:	ldr	r1, [sp, #8]
   18374:	ldr	lr, [ip, #8]
   18378:	ldr	r0, [r1, #8]
   1837c:	mvn	r1, lr
   18380:	ldr	ip, [ip, #4]
   18384:	lsr	r1, r1, #31
   18388:	cmp	r1, r0, lsr #31
   1838c:	ldr	r1, [sp, #8]
   18390:	subne	r0, r0, lr
   18394:	subeq	r0, lr, r0
   18398:	ldr	r1, [r1, #4]
   1839c:	cmp	r0, #0
   183a0:	subeq	r0, ip, r1
   183a4:	beq	180c0 <_obstack_memory_used@@Base+0x3304>
   183a8:	b	1821c <_obstack_memory_used@@Base+0x3460>
   183ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   183b0:	mov	r6, r1
   183b4:	ldr	r4, [r0, #16]
   183b8:	sub	sp, sp, #28
   183bc:	cmp	r4, #0
   183c0:	movne	r2, r4
   183c4:	bne	183d0 <_obstack_memory_used@@Base+0x3614>
   183c8:	b	189f8 <_obstack_memory_used@@Base+0x3c3c>
   183cc:	mov	r2, r3
   183d0:	ldr	r3, [r2, #12]
   183d4:	cmp	r3, #0
   183d8:	bne	183cc <_obstack_memory_used@@Base+0x3610>
   183dc:	ldr	r5, [r6, #16]
   183e0:	ldr	ip, [r2, #8]
   183e4:	cmp	r5, #0
   183e8:	movne	r2, r5
   183ec:	bne	183f8 <_obstack_memory_used@@Base+0x363c>
   183f0:	b	18a0c <_obstack_memory_used@@Base+0x3c50>
   183f4:	mov	r2, r3
   183f8:	ldr	r3, [r2, #12]
   183fc:	cmp	r3, #0
   18400:	bne	183f4 <_obstack_memory_used@@Base+0x3638>
   18404:	ldr	r3, [r2, #8]
   18408:	mvn	r2, r3
   1840c:	lsr	r2, r2, #31
   18410:	cmp	r2, ip, lsr #31
   18414:	subne	r1, ip, r3
   18418:	subeq	r1, r3, ip
   1841c:	cmp	r1, #0
   18420:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18424:	adds	r1, r5, #0
   18428:	movne	r1, #1
   1842c:	cmp	r4, #0
   18430:	rsbeq	r1, r1, #0
   18434:	rsbne	r1, r1, #1
   18438:	cmp	r1, #0
   1843c:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18440:	cmp	r4, #0
   18444:	mov	fp, r0
   18448:	beq	18794 <_obstack_memory_used@@Base+0x39d8>
   1844c:	ldr	r1, [r4, #20]
   18450:	ldr	r2, [r5, #20]
   18454:	cmp	r1, r2
   18458:	bgt	185a8 <_obstack_memory_used@@Base+0x37ec>
   1845c:	bge	18740 <_obstack_memory_used@@Base+0x3984>
   18460:	ldr	r5, [r5, #12]
   18464:	ldr	r3, [r5, #20]
   18468:	cmp	r1, r3
   1846c:	blt	18460 <_obstack_memory_used@@Base+0x36a4>
   18470:	ldr	r6, [r4, #12]
   18474:	ldr	r7, [r5, #12]
   18478:	cmp	r6, r7
   1847c:	beq	18c7c <_obstack_memory_used@@Base+0x3ec0>
   18480:	ldr	r8, [r6, #12]
   18484:	ldr	r9, [r7, #12]
   18488:	cmp	r8, r9
   1848c:	beq	18bb4 <_obstack_memory_used@@Base+0x3df8>
   18490:	ldr	sl, [r8, #12]
   18494:	ldr	fp, [r9, #12]
   18498:	cmp	sl, fp
   1849c:	beq	18ce4 <_obstack_memory_used@@Base+0x3f28>
   184a0:	ldr	r0, [sl, #12]
   184a4:	ldr	r1, [fp, #12]
   184a8:	cmp	r0, r1
   184ac:	beq	18d90 <_obstack_memory_used@@Base+0x3fd4>
   184b0:	bl	17fd0 <_obstack_memory_used@@Base+0x3214>
   184b4:	subs	r1, r0, #0
   184b8:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   184bc:	ldr	r1, [fp, #8]
   184c0:	ldr	r3, [sl, #8]
   184c4:	mvn	r2, r1
   184c8:	lsr	r2, r2, #31
   184cc:	cmp	r2, r3, lsr #31
   184d0:	subne	r1, r3, r1
   184d4:	subeq	r1, r1, r3
   184d8:	cmp	r1, #0
   184dc:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   184e0:	ldr	r1, [fp, #4]
   184e4:	ldr	r3, [sl, #4]
   184e8:	sub	r1, r1, r3
   184ec:	cmp	r1, #0
   184f0:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   184f4:	ldr	r1, [r9, #8]
   184f8:	ldr	r3, [r8, #8]
   184fc:	mvn	r2, r1
   18500:	lsr	r2, r2, #31
   18504:	cmp	r2, r3, lsr #31
   18508:	subne	r1, r3, r1
   1850c:	subeq	r1, r1, r3
   18510:	cmp	r1, #0
   18514:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18518:	ldr	r1, [r9, #4]
   1851c:	ldr	r3, [r8, #4]
   18520:	sub	r1, r1, r3
   18524:	cmp	r1, #0
   18528:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   1852c:	ldr	r1, [r7, #8]
   18530:	ldr	r3, [r6, #8]
   18534:	mvn	r2, r1
   18538:	lsr	r2, r2, #31
   1853c:	cmp	r2, r3, lsr #31
   18540:	subne	r1, r3, r1
   18544:	subeq	r1, r1, r3
   18548:	cmp	r1, #0
   1854c:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18550:	ldr	r1, [r7, #4]
   18554:	ldr	r3, [r6, #4]
   18558:	sub	r1, r1, r3
   1855c:	cmp	r1, #0
   18560:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18564:	ldr	r1, [r5, #8]
   18568:	ldr	r3, [r4, #8]
   1856c:	mvn	r2, r1
   18570:	lsr	r2, r2, #31
   18574:	cmp	r2, r3, lsr #31
   18578:	subne	r1, r3, r1
   1857c:	subeq	r1, r1, r3
   18580:	cmp	r1, #0
   18584:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18588:	ldr	r1, [r5, #4]
   1858c:	ldr	r3, [r4, #4]
   18590:	sub	r1, r1, r3
   18594:	cmp	r1, #0
   18598:	mvneq	r1, #0
   1859c:	mov	r0, r1
   185a0:	add	sp, sp, #28
   185a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   185a8:	ldr	r4, [r4, #12]
   185ac:	ldr	r3, [r4, #20]
   185b0:	cmp	r2, r3
   185b4:	blt	185a8 <_obstack_memory_used@@Base+0x37ec>
   185b8:	ldr	r6, [r4, #12]
   185bc:	ldr	r7, [r5, #12]
   185c0:	cmp	r6, r7
   185c4:	beq	18c1c <_obstack_memory_used@@Base+0x3e60>
   185c8:	ldr	r8, [r6, #12]
   185cc:	ldr	r9, [r7, #12]
   185d0:	cmp	r8, r9
   185d4:	beq	18cb0 <_obstack_memory_used@@Base+0x3ef4>
   185d8:	ldr	sl, [r8, #12]
   185dc:	ldr	fp, [r9, #12]
   185e0:	cmp	sl, fp
   185e4:	beq	18be8 <_obstack_memory_used@@Base+0x3e2c>
   185e8:	ldr	r3, [sl, #12]
   185ec:	ldr	r2, [fp, #12]
   185f0:	cmp	r3, r2
   185f4:	beq	18d18 <_obstack_memory_used@@Base+0x3f5c>
   185f8:	ldr	r0, [r3, #12]
   185fc:	ldr	r1, [r2, #12]
   18600:	cmp	r0, r1
   18604:	beq	18dc4 <_obstack_memory_used@@Base+0x4008>
   18608:	str	r2, [sp, #8]
   1860c:	str	r3, [sp, #4]
   18610:	bl	17fd0 <_obstack_memory_used@@Base+0x3214>
   18614:	subs	r1, r0, #0
   18618:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   1861c:	ldr	r2, [sp, #8]
   18620:	ldr	r3, [sp, #4]
   18624:	ldr	r0, [r2, #8]
   18628:	ldr	r1, [r3, #8]
   1862c:	mvn	ip, r0
   18630:	lsr	ip, ip, #31
   18634:	cmp	ip, r1, lsr #31
   18638:	subne	r1, r1, r0
   1863c:	subeq	r1, r0, r1
   18640:	cmp	r1, #0
   18644:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18648:	ldr	r1, [r2, #4]
   1864c:	ldr	r3, [r3, #4]
   18650:	sub	r1, r1, r3
   18654:	cmp	r1, #0
   18658:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   1865c:	ldr	r1, [fp, #8]
   18660:	ldr	r3, [sl, #8]
   18664:	mvn	r2, r1
   18668:	lsr	r2, r2, #31
   1866c:	cmp	r2, r3, lsr #31
   18670:	subne	r1, r3, r1
   18674:	subeq	r1, r1, r3
   18678:	cmp	r1, #0
   1867c:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18680:	ldr	r1, [fp, #4]
   18684:	ldr	r3, [sl, #4]
   18688:	sub	r1, r1, r3
   1868c:	cmp	r1, #0
   18690:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18694:	ldr	r1, [r9, #8]
   18698:	ldr	r3, [r8, #8]
   1869c:	mvn	r2, r1
   186a0:	lsr	r2, r2, #31
   186a4:	cmp	r2, r3, lsr #31
   186a8:	subne	r1, r3, r1
   186ac:	subeq	r1, r1, r3
   186b0:	cmp	r1, #0
   186b4:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   186b8:	ldr	r1, [r9, #4]
   186bc:	ldr	r3, [r8, #4]
   186c0:	sub	r1, r1, r3
   186c4:	cmp	r1, #0
   186c8:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   186cc:	ldr	r1, [r7, #8]
   186d0:	ldr	r3, [r6, #8]
   186d4:	mvn	r2, r1
   186d8:	lsr	r2, r2, #31
   186dc:	cmp	r2, r3, lsr #31
   186e0:	subne	r1, r3, r1
   186e4:	subeq	r1, r1, r3
   186e8:	cmp	r1, #0
   186ec:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   186f0:	ldr	r1, [r7, #4]
   186f4:	ldr	r3, [r6, #4]
   186f8:	sub	r1, r1, r3
   186fc:	cmp	r1, #0
   18700:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18704:	ldr	r1, [r5, #8]
   18708:	ldr	r3, [r4, #8]
   1870c:	mvn	r2, r1
   18710:	lsr	r2, r2, #31
   18714:	cmp	r2, r3, lsr #31
   18718:	subne	r1, r3, r1
   1871c:	subeq	r1, r1, r3
   18720:	cmp	r1, #0
   18724:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18728:	ldr	r1, [r5, #4]
   1872c:	ldr	r3, [r4, #4]
   18730:	sub	r1, r1, r3
   18734:	cmp	r1, #0
   18738:	moveq	r1, #1
   1873c:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18740:	ldr	r0, [r4, #12]
   18744:	ldr	r1, [r5, #12]
   18748:	cmp	r0, r1
   1874c:	beq	18d4c <_obstack_memory_used@@Base+0x3f90>
   18750:	bl	17fd0 <_obstack_memory_used@@Base+0x3214>
   18754:	subs	r1, r0, #0
   18758:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   1875c:	ldr	r1, [r5, #8]
   18760:	ldr	r3, [r4, #8]
   18764:	mvn	r2, r1
   18768:	lsr	r2, r2, #31
   1876c:	cmp	r2, r3, lsr #31
   18770:	subne	r1, r3, r1
   18774:	subeq	r1, r1, r3
   18778:	cmp	r1, #0
   1877c:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18780:	ldr	r1, [r5, #4]
   18784:	ldr	r3, [r4, #4]
   18788:	sub	r1, r1, r3
   1878c:	cmp	r1, #0
   18790:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18794:	ldr	r1, [r6, #12]
   18798:	ldr	r3, [fp, #12]
   1879c:	mvn	r2, r1
   187a0:	lsr	r2, r2, #31
   187a4:	cmp	r2, r3, lsr #31
   187a8:	subne	r1, r3, r1
   187ac:	subeq	r1, r1, r3
   187b0:	cmp	r1, #0
   187b4:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   187b8:	ldm	fp, {r8, r9}
   187bc:	cmp	r9, #0
   187c0:	beq	18df8 <_obstack_memory_used@@Base+0x403c>
   187c4:	add	r3, r8, #24
   187c8:	mov	r2, r9
   187cc:	ldr	r4, [r3, #-24]	; 0xffffffe8
   187d0:	cmp	r4, #0
   187d4:	beq	187e4 <_obstack_memory_used@@Base+0x3a28>
   187d8:	ldr	r0, [r3, #-12]
   187dc:	tst	r0, #2
   187e0:	beq	187f4 <_obstack_memory_used@@Base+0x3a38>
   187e4:	subs	r2, r2, #1
   187e8:	add	r3, r3, #24
   187ec:	bne	187cc <_obstack_memory_used@@Base+0x3a10>
   187f0:	mov	r4, r2
   187f4:	ldm	r6, {r7, sl}
   187f8:	cmp	sl, #0
   187fc:	beq	18e00 <_obstack_memory_used@@Base+0x4044>
   18800:	add	r3, r7, #24
   18804:	mov	r2, sl
   18808:	ldr	r5, [r3, #-24]	; 0xffffffe8
   1880c:	cmp	r5, #0
   18810:	beq	18820 <_obstack_memory_used@@Base+0x3a64>
   18814:	ldr	r0, [r3, #-12]
   18818:	tst	r0, #2
   1881c:	beq	18830 <_obstack_memory_used@@Base+0x3a74>
   18820:	subs	r2, r2, #1
   18824:	add	r3, r3, #24
   18828:	bne	18808 <_obstack_memory_used@@Base+0x3a4c>
   1882c:	mov	r5, r2
   18830:	ldr	r3, [r8, #12]
   18834:	tst	r3, #8
   18838:	beq	188a4 <_obstack_memory_used@@Base+0x3ae8>
   1883c:	cmp	r4, #0
   18840:	beq	188a4 <_obstack_memory_used@@Base+0x3ae8>
   18844:	str	r1, [sp, #4]
   18848:	bl	11250 <__ctype_b_loc@plt>
   1884c:	ldr	r1, [sp, #4]
   18850:	mov	ip, r4
   18854:	ldr	r0, [r0]
   18858:	ldrb	r2, [ip]
   1885c:	mov	r4, ip
   18860:	add	ip, ip, #1
   18864:	lsl	r3, r2, #1
   18868:	ldrh	r3, [r0, r3]
   1886c:	tst	r3, #8192	; 0x2000
   18870:	bne	18858 <_obstack_memory_used@@Base+0x3a9c>
   18874:	cmp	r2, #0
   18878:	bne	18894 <_obstack_memory_used@@Base+0x3ad8>
   1887c:	b	18ba0 <_obstack_memory_used@@Base+0x3de4>
   18880:	ldrb	r3, [r4, #1]!
   18884:	cmp	r3, #0
   18888:	lsl	r3, r3, #1
   1888c:	beq	1889c <_obstack_memory_used@@Base+0x3ae0>
   18890:	ldrh	r3, [r0, r3]
   18894:	tst	r3, #8
   18898:	beq	18880 <_obstack_memory_used@@Base+0x3ac4>
   1889c:	cmp	r2, #45	; 0x2d
   188a0:	bne	18ba0 <_obstack_memory_used@@Base+0x3de4>
   188a4:	ldr	r3, [r7, #12]
   188a8:	tst	r3, #8
   188ac:	beq	18938 <_obstack_memory_used@@Base+0x3b7c>
   188b0:	cmp	r5, #0
   188b4:	movne	r2, r1
   188b8:	beq	18938 <_obstack_memory_used@@Base+0x3b7c>
   188bc:	str	r1, [sp, #8]
   188c0:	str	r2, [sp, #4]
   188c4:	bl	11250 <__ctype_b_loc@plt>
   188c8:	ldr	r2, [sp, #4]
   188cc:	ldr	r1, [sp, #8]
   188d0:	mov	r3, r5
   188d4:	ldr	ip, [r0]
   188d8:	ldrb	r0, [r3]
   188dc:	mov	r5, r3
   188e0:	add	r3, r3, #1
   188e4:	lsl	lr, r0, #1
   188e8:	ldrh	lr, [ip, lr]
   188ec:	tst	lr, #8192	; 0x2000
   188f0:	bne	188d8 <_obstack_memory_used@@Base+0x3b1c>
   188f4:	cmp	r0, #0
   188f8:	beq	18924 <_obstack_memory_used@@Base+0x3b68>
   188fc:	tst	lr, #8
   18900:	beq	18914 <_obstack_memory_used@@Base+0x3b58>
   18904:	b	18924 <_obstack_memory_used@@Base+0x3b68>
   18908:	ldrh	r3, [ip, r3]
   1890c:	tst	r3, #8
   18910:	bne	18924 <_obstack_memory_used@@Base+0x3b68>
   18914:	ldrb	r3, [r5, #1]!
   18918:	cmp	r3, #0
   1891c:	lsl	r3, r3, #1
   18920:	bne	18908 <_obstack_memory_used@@Base+0x3b4c>
   18924:	cmp	r0, #45	; 0x2d
   18928:	subne	r2, r2, #1
   1892c:	cmp	r2, #0
   18930:	movne	r1, r2
   18934:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18938:	ldr	r3, [fp, #8]
   1893c:	cmp	r9, #0
   18940:	mov	r2, r3
   18944:	beq	18e08 <_obstack_memory_used@@Base+0x404c>
   18948:	str	r7, [sp, #16]
   1894c:	str	r6, [sp, #20]
   18950:	mov	r3, #1
   18954:	str	r4, [sp, #8]
   18958:	str	r5, [sp, #12]
   1895c:	mov	r7, r1
   18960:	mov	r6, r2
   18964:	b	18980 <_obstack_memory_used@@Base+0x3bc4>
   18968:	subs	r9, r9, #1
   1896c:	moveq	ip, #0
   18970:	andne	ip, ip, #1
   18974:	cmp	ip, #0
   18978:	add	r8, r8, #24
   1897c:	beq	18a14 <_obstack_memory_used@@Base+0x3c58>
   18980:	ldr	r4, [r8, #12]
   18984:	mov	ip, r3
   18988:	ands	fp, r4, #8
   1898c:	movne	fp, r7
   18990:	bne	18968 <_obstack_memory_used@@Base+0x3bac>
   18994:	ldr	r5, [r8, #4]
   18998:	sub	r0, r5, #1
   1899c:	cmp	r0, #254	; 0xfe
   189a0:	bhi	18968 <_obstack_memory_used@@Base+0x3bac>
   189a4:	str	r3, [sp, #4]
   189a8:	bl	11250 <__ctype_b_loc@plt>
   189ac:	lsl	lr, r5, #1
   189b0:	ldr	r3, [sp, #4]
   189b4:	mov	ip, r3
   189b8:	ldr	r0, [r0]
   189bc:	ldrh	r0, [r0, lr]
   189c0:	tst	r0, #16384	; 0x4000
   189c4:	beq	18968 <_obstack_memory_used@@Base+0x3bac>
   189c8:	ldrb	r0, [r6]
   189cc:	mov	ip, r3
   189d0:	cmp	r5, r0
   189d4:	bne	18968 <_obstack_memory_used@@Base+0x3bac>
   189d8:	and	r4, r4, #10
   189dc:	cmp	r4, #0
   189e0:	moveq	fp, r5
   189e4:	movne	fp, #0
   189e8:	add	r6, r6, #1
   189ec:	movne	ip, #1
   189f0:	moveq	ip, #0
   189f4:	b	18968 <_obstack_memory_used@@Base+0x3bac>
   189f8:	ldr	r5, [r6, #16]
   189fc:	ldr	ip, [r0, #12]
   18a00:	cmp	r5, #0
   18a04:	movne	r2, r5
   18a08:	bne	183f8 <_obstack_memory_used@@Base+0x363c>
   18a0c:	ldr	r3, [r6, #12]
   18a10:	b	18408 <_obstack_memory_used@@Base+0x364c>
   18a14:	mov	r3, fp
   18a18:	ldr	r6, [sp, #20]
   18a1c:	uxtb	r3, r3
   18a20:	cmp	sl, #0
   18a24:	str	fp, [sp, #4]
   18a28:	mov	r1, r7
   18a2c:	ldr	r4, [sp, #8]
   18a30:	ldr	r7, [sp, #16]
   18a34:	ldr	r5, [sp, #12]
   18a38:	ldr	fp, [r6, #8]
   18a3c:	str	r3, [sp, #16]
   18a40:	beq	18c50 <_obstack_memory_used@@Base+0x3e94>
   18a44:	str	r4, [sp, #8]
   18a48:	mov	r8, #1
   18a4c:	str	r5, [sp, #12]
   18a50:	mov	r4, r1
   18a54:	b	18a70 <_obstack_memory_used@@Base+0x3cb4>
   18a58:	subs	sl, sl, #1
   18a5c:	moveq	r3, #0
   18a60:	andne	r3, r3, #1
   18a64:	cmp	r3, #0
   18a68:	add	r7, r7, #24
   18a6c:	beq	18adc <_obstack_memory_used@@Base+0x3d20>
   18a70:	ldr	r6, [r7, #12]
   18a74:	mov	r3, r8
   18a78:	ands	r9, r6, #8
   18a7c:	movne	r9, r4
   18a80:	bne	18a58 <_obstack_memory_used@@Base+0x3c9c>
   18a84:	ldr	r5, [r7, #4]
   18a88:	sub	r0, r5, #1
   18a8c:	cmp	r0, #254	; 0xfe
   18a90:	bhi	18a58 <_obstack_memory_used@@Base+0x3c9c>
   18a94:	bl	11250 <__ctype_b_loc@plt>
   18a98:	lsl	ip, r5, #1
   18a9c:	mov	r3, r8
   18aa0:	ldr	r0, [r0]
   18aa4:	ldrh	r0, [r0, ip]
   18aa8:	tst	r0, #16384	; 0x4000
   18aac:	beq	18a58 <_obstack_memory_used@@Base+0x3c9c>
   18ab0:	ldrb	r0, [fp]
   18ab4:	mov	r3, r8
   18ab8:	cmp	r5, r0
   18abc:	bne	18a58 <_obstack_memory_used@@Base+0x3c9c>
   18ac0:	and	r6, r6, #2
   18ac4:	cmp	r6, #0
   18ac8:	moveq	r9, r5
   18acc:	add	fp, fp, #1
   18ad0:	movne	r3, #1
   18ad4:	moveq	r3, #0
   18ad8:	b	18a58 <_obstack_memory_used@@Base+0x3c9c>
   18adc:	mov	r1, r4
   18ae0:	ldmib	sp, {r3, r4}
   18ae4:	ldr	r5, [sp, #12]
   18ae8:	uxtb	r6, r9
   18aec:	cmp	r3, #0
   18af0:	beq	18b8c <_obstack_memory_used@@Base+0x3dd0>
   18af4:	ldr	r3, [sp, #16]
   18af8:	mov	r7, r3
   18afc:	lsl	r8, r3, #2
   18b00:	cmp	r9, #0
   18b04:	beq	18c68 <_obstack_memory_used@@Base+0x3eac>
   18b08:	lsl	sl, r6, #2
   18b0c:	bl	1122c <__ctype_tolower_loc@plt>
   18b10:	ldr	r3, [r0]
   18b14:	ldr	r1, [r3, r8]
   18b18:	ldr	r3, [r3, sl]
   18b1c:	subs	r1, r1, r3
   18b20:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18b24:	subs	r1, r6, r7
   18b28:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18b2c:	adds	r1, r9, #0
   18b30:	ldr	r3, [sp, #4]
   18b34:	movne	r1, #1
   18b38:	cmp	r3, #0
   18b3c:	rsbeq	r1, r1, #0
   18b40:	rsbne	r1, r1, #1
   18b44:	cmp	r1, #0
   18b48:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18b4c:	cmp	r3, #0
   18b50:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18b54:	adds	r1, r5, #0
   18b58:	movne	r1, #1
   18b5c:	cmp	r4, #0
   18b60:	rsbeq	r1, r1, #0
   18b64:	rsbne	r1, r1, #1
   18b68:	cmp	r1, #0
   18b6c:	bne	1859c <_obstack_memory_used@@Base+0x37e0>
   18b70:	cmp	r4, #0
   18b74:	beq	1859c <_obstack_memory_used@@Base+0x37e0>
   18b78:	mov	r1, r5
   18b7c:	mov	r0, r4
   18b80:	add	sp, sp, #28
   18b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b88:	b	111a8 <strcasecmp@plt>
   18b8c:	cmp	r4, #0
   18b90:	beq	18e34 <_obstack_memory_used@@Base+0x4078>
   18b94:	ldrb	r7, [r4]
   18b98:	lsl	r8, r7, #2
   18b9c:	b	18b00 <_obstack_memory_used@@Base+0x3d44>
   18ba0:	ldr	r3, [r7, #12]
   18ba4:	tst	r3, #8
   18ba8:	bne	18d80 <_obstack_memory_used@@Base+0x3fc4>
   18bac:	mov	r1, #1
   18bb0:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18bb4:	ldr	r1, [r7, #8]
   18bb8:	ldr	r3, [r6, #8]
   18bbc:	mvn	r2, r1
   18bc0:	ldr	r0, [r7, #4]
   18bc4:	lsr	r2, r2, #31
   18bc8:	cmp	r2, r3, lsr #31
   18bcc:	subne	r1, r3, r1
   18bd0:	subeq	r1, r1, r3
   18bd4:	ldr	r2, [r6, #4]
   18bd8:	cmp	r1, #0
   18bdc:	subeq	r1, r0, r2
   18be0:	beq	1855c <_obstack_memory_used@@Base+0x37a0>
   18be4:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18be8:	ldr	r1, [r9, #8]
   18bec:	ldr	r3, [r8, #8]
   18bf0:	mvn	r2, r1
   18bf4:	ldr	r0, [r9, #4]
   18bf8:	lsr	r2, r2, #31
   18bfc:	cmp	r2, r3, lsr #31
   18c00:	subne	r1, r3, r1
   18c04:	subeq	r1, r1, r3
   18c08:	ldr	r2, [r8, #4]
   18c0c:	cmp	r1, #0
   18c10:	subeq	r1, r0, r2
   18c14:	beq	186c4 <_obstack_memory_used@@Base+0x3908>
   18c18:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18c1c:	ldr	r1, [r5, #8]
   18c20:	ldr	r3, [r4, #8]
   18c24:	mvn	r2, r1
   18c28:	ldr	r0, [r5, #4]
   18c2c:	lsr	r2, r2, #31
   18c30:	cmp	r2, r3, lsr #31
   18c34:	subne	r1, r3, r1
   18c38:	subeq	r1, r1, r3
   18c3c:	ldr	r2, [r4, #4]
   18c40:	cmp	r1, #0
   18c44:	subeq	r1, r0, r2
   18c48:	beq	18734 <_obstack_memory_used@@Base+0x3978>
   18c4c:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18c50:	ldr	r3, [sp, #4]
   18c54:	cmp	r3, #0
   18c58:	beq	18e40 <_obstack_memory_used@@Base+0x4084>
   18c5c:	ldr	r3, [sp, #16]
   18c60:	mov	r7, r3
   18c64:	lsl	r8, r3, #2
   18c68:	cmp	r5, #0
   18c6c:	beq	18e24 <_obstack_memory_used@@Base+0x4068>
   18c70:	ldrb	r6, [r5]
   18c74:	mov	r9, r1
   18c78:	b	18b08 <_obstack_memory_used@@Base+0x3d4c>
   18c7c:	ldr	r1, [r5, #8]
   18c80:	ldr	r3, [r4, #8]
   18c84:	mvn	r2, r1
   18c88:	ldr	r0, [r5, #4]
   18c8c:	lsr	r2, r2, #31
   18c90:	cmp	r2, r3, lsr #31
   18c94:	subne	r1, r3, r1
   18c98:	subeq	r1, r1, r3
   18c9c:	ldr	r2, [r4, #4]
   18ca0:	cmp	r1, #0
   18ca4:	subeq	r1, r0, r2
   18ca8:	beq	18594 <_obstack_memory_used@@Base+0x37d8>
   18cac:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18cb0:	ldr	r1, [r7, #8]
   18cb4:	ldr	r3, [r6, #8]
   18cb8:	mvn	r2, r1
   18cbc:	ldr	r0, [r7, #4]
   18cc0:	lsr	r2, r2, #31
   18cc4:	cmp	r2, r3, lsr #31
   18cc8:	subne	r1, r3, r1
   18ccc:	subeq	r1, r1, r3
   18cd0:	ldr	r2, [r6, #4]
   18cd4:	cmp	r1, #0
   18cd8:	subeq	r1, r0, r2
   18cdc:	beq	186fc <_obstack_memory_used@@Base+0x3940>
   18ce0:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18ce4:	ldr	r1, [r9, #8]
   18ce8:	ldr	r3, [r8, #8]
   18cec:	mvn	r2, r1
   18cf0:	ldr	r0, [r9, #4]
   18cf4:	lsr	r2, r2, #31
   18cf8:	cmp	r2, r3, lsr #31
   18cfc:	subne	r1, r3, r1
   18d00:	subeq	r1, r1, r3
   18d04:	ldr	r2, [r8, #4]
   18d08:	cmp	r1, #0
   18d0c:	subeq	r1, r0, r2
   18d10:	beq	18524 <_obstack_memory_used@@Base+0x3768>
   18d14:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18d18:	ldr	r1, [fp, #8]
   18d1c:	ldr	r3, [sl, #8]
   18d20:	mvn	r2, r1
   18d24:	ldr	r0, [fp, #4]
   18d28:	lsr	r2, r2, #31
   18d2c:	cmp	r2, r3, lsr #31
   18d30:	subne	r1, r3, r1
   18d34:	subeq	r1, r1, r3
   18d38:	ldr	r2, [sl, #4]
   18d3c:	cmp	r1, #0
   18d40:	subeq	r1, r0, r2
   18d44:	beq	1868c <_obstack_memory_used@@Base+0x38d0>
   18d48:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18d4c:	ldr	r1, [r5, #8]
   18d50:	ldr	r3, [r4, #8]
   18d54:	mvn	r2, r1
   18d58:	ldr	r0, [r5, #4]
   18d5c:	lsr	r2, r2, #31
   18d60:	cmp	r2, r3, lsr #31
   18d64:	subne	r1, r3, r1
   18d68:	subeq	r1, r1, r3
   18d6c:	ldr	r2, [r4, #4]
   18d70:	cmp	r1, #0
   18d74:	subeq	r1, r0, r2
   18d78:	beq	1878c <_obstack_memory_used@@Base+0x39d0>
   18d7c:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18d80:	cmp	r5, #0
   18d84:	beq	18bac <_obstack_memory_used@@Base+0x3df0>
   18d88:	mov	r2, #1
   18d8c:	b	188bc <_obstack_memory_used@@Base+0x3b00>
   18d90:	ldr	r1, [fp, #8]
   18d94:	ldr	r3, [sl, #8]
   18d98:	mvn	r2, r1
   18d9c:	ldr	r0, [fp, #4]
   18da0:	lsr	r2, r2, #31
   18da4:	cmp	r2, r3, lsr #31
   18da8:	subne	r1, r3, r1
   18dac:	subeq	r1, r1, r3
   18db0:	ldr	r2, [sl, #4]
   18db4:	cmp	r1, #0
   18db8:	subeq	r1, r0, r2
   18dbc:	beq	184ec <_obstack_memory_used@@Base+0x3730>
   18dc0:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18dc4:	ldr	r0, [r2, #8]
   18dc8:	ldr	r1, [r3, #8]
   18dcc:	mvn	ip, r0
   18dd0:	ldr	r2, [r2, #4]
   18dd4:	lsr	ip, ip, #31
   18dd8:	cmp	ip, r1, lsr #31
   18ddc:	subne	r1, r1, r0
   18de0:	subeq	r1, r0, r1
   18de4:	ldr	r3, [r3, #4]
   18de8:	cmp	r1, #0
   18dec:	subeq	r1, r2, r3
   18df0:	beq	18654 <_obstack_memory_used@@Base+0x3898>
   18df4:	b	1859c <_obstack_memory_used@@Base+0x37e0>
   18df8:	mov	r4, r1
   18dfc:	b	187f4 <_obstack_memory_used@@Base+0x3a38>
   18e00:	mov	r5, sl
   18e04:	b	18830 <_obstack_memory_used@@Base+0x3a74>
   18e08:	cmp	sl, #0
   18e0c:	ldr	fp, [r6, #8]
   18e10:	streq	r1, [sp, #4]
   18e14:	beq	18e40 <_obstack_memory_used@@Base+0x4084>
   18e18:	str	r9, [sp, #16]
   18e1c:	str	r1, [sp, #4]
   18e20:	b	18a44 <_obstack_memory_used@@Base+0x3c88>
   18e24:	mov	r9, r1
   18e28:	mov	sl, r5
   18e2c:	mov	r6, r5
   18e30:	b	18b0c <_obstack_memory_used@@Base+0x3d50>
   18e34:	mov	r8, r4
   18e38:	mov	r7, r4
   18e3c:	b	18b00 <_obstack_memory_used@@Base+0x3d44>
   18e40:	cmp	r4, #0
   18e44:	moveq	r8, r4
   18e48:	moveq	r7, r4
   18e4c:	beq	18c68 <_obstack_memory_used@@Base+0x3eac>
   18e50:	mov	r9, r1
   18e54:	mov	r6, #0
   18e58:	b	18b94 <_obstack_memory_used@@Base+0x3dd8>

00018e5c <argp_failure@@Base>:
   18e5c:	push	{r3}		; (str r3, [sp, #-4]!)
   18e60:	push	{r4, r5, r6, r7, lr}
   18e64:	subs	r5, r0, #0
   18e68:	sub	sp, sp, #200	; 0xc8
   18e6c:	mov	r7, r1
   18e70:	mov	r6, r2
   18e74:	beq	18fc4 <argp_failure@@Base+0x168>
   18e78:	ldr	r3, [r5, #16]
   18e7c:	tst	r3, #2
   18e80:	bne	18fb4 <argp_failure@@Base+0x158>
   18e84:	ldr	r4, [r5, #44]	; 0x2c
   18e88:	cmp	r4, #0
   18e8c:	beq	18fb4 <argp_failure@@Base+0x158>
   18e90:	mov	r0, r4
   18e94:	bl	1131c <flockfile@plt>
   18e98:	ldr	r0, [r5, #40]	; 0x28
   18e9c:	mov	r1, r4
   18ea0:	bl	110d0 <fputs_unlocked@plt>
   18ea4:	ldr	r3, [sp, #220]	; 0xdc
   18ea8:	cmp	r3, #0
   18eac:	beq	18f08 <argp_failure@@Base+0xac>
   18eb0:	ldr	r3, [r4, #20]
   18eb4:	ldr	r1, [r4, #24]
   18eb8:	add	r2, sp, #224	; 0xe0
   18ebc:	cmp	r3, r1
   18ec0:	str	r2, [sp]
   18ec4:	addcc	r1, r3, #1
   18ec8:	movcc	r2, #58	; 0x3a
   18ecc:	strcc	r1, [r4, #20]
   18ed0:	strbcc	r2, [r3]
   18ed4:	bcs	19010 <argp_failure@@Base+0x1b4>
   18ed8:	ldr	r3, [r4, #20]
   18edc:	ldr	r2, [r4, #24]
   18ee0:	cmp	r3, r2
   18ee4:	addcc	r1, r3, #1
   18ee8:	movcc	r2, #32
   18eec:	strcc	r1, [r4, #20]
   18ef0:	strbcc	r2, [r3]
   18ef4:	bcs	19000 <argp_failure@@Base+0x1a4>
   18ef8:	ldr	r2, [sp]
   18efc:	ldr	r1, [sp, #220]	; 0xdc
   18f00:	mov	r0, r4
   18f04:	bl	112ec <vfprintf@plt>
   18f08:	cmp	r6, #0
   18f0c:	beq	18f70 <argp_failure@@Base+0x114>
   18f10:	ldr	r3, [r4, #20]
   18f14:	ldr	r2, [r4, #24]
   18f18:	cmp	r3, r2
   18f1c:	addcc	r1, r3, #1
   18f20:	movcc	r2, #58	; 0x3a
   18f24:	strcc	r1, [r4, #20]
   18f28:	strbcc	r2, [r3]
   18f2c:	bcs	19030 <argp_failure@@Base+0x1d4>
   18f30:	ldr	r3, [r4, #20]
   18f34:	ldr	r2, [r4, #24]
   18f38:	cmp	r3, r2
   18f3c:	addcc	r1, r3, #1
   18f40:	movcc	r2, #32
   18f44:	strcc	r1, [r4, #20]
   18f48:	strbcc	r2, [r3]
   18f4c:	bcs	19020 <argp_failure@@Base+0x1c4>
   18f50:	mov	r2, #200	; 0xc8
   18f54:	mov	r1, sp
   18f58:	mov	r0, r6
   18f5c:	bl	112a4 <strerror_r@plt>
   18f60:	cmp	r0, #0
   18f64:	beq	19040 <argp_failure@@Base+0x1e4>
   18f68:	mov	r1, r4
   18f6c:	bl	110d0 <fputs_unlocked@plt>
   18f70:	ldr	r3, [r4, #20]
   18f74:	ldr	r2, [r4, #24]
   18f78:	cmp	r3, r2
   18f7c:	addcc	r1, r3, #1
   18f80:	movcc	r2, #10
   18f84:	strcc	r1, [r4, #20]
   18f88:	strbcc	r2, [r3]
   18f8c:	bcs	18fe8 <argp_failure@@Base+0x18c>
   18f90:	mov	r0, r4
   18f94:	bl	111b4 <funlockfile@plt>
   18f98:	cmp	r7, #0
   18f9c:	beq	18fb4 <argp_failure@@Base+0x158>
   18fa0:	cmp	r5, #0
   18fa4:	beq	18ff8 <argp_failure@@Base+0x19c>
   18fa8:	ldr	r3, [r5, #16]
   18fac:	tst	r3, #32
   18fb0:	beq	18ff8 <argp_failure@@Base+0x19c>
   18fb4:	add	sp, sp, #200	; 0xc8
   18fb8:	pop	{r4, r5, r6, r7, lr}
   18fbc:	add	sp, sp, #4
   18fc0:	bx	lr
   18fc4:	ldr	r3, [pc, #140]	; 19058 <argp_failure@@Base+0x1fc>
   18fc8:	ldr	r4, [r3]
   18fcc:	cmp	r4, #0
   18fd0:	beq	18fb4 <argp_failure@@Base+0x158>
   18fd4:	mov	r0, r4
   18fd8:	bl	1131c <flockfile@plt>
   18fdc:	ldr	r3, [pc, #120]	; 1905c <argp_failure@@Base+0x200>
   18fe0:	ldr	r0, [r3]
   18fe4:	b	18e9c <argp_failure@@Base+0x40>
   18fe8:	mov	r1, #10
   18fec:	mov	r0, r4
   18ff0:	bl	112d4 <__overflow@plt>
   18ff4:	b	18f90 <argp_failure@@Base+0x134>
   18ff8:	mov	r0, r7
   18ffc:	bl	1125c <exit@plt>
   19000:	mov	r1, #32
   19004:	mov	r0, r4
   19008:	bl	112d4 <__overflow@plt>
   1900c:	b	18ef8 <argp_failure@@Base+0x9c>
   19010:	mov	r1, #58	; 0x3a
   19014:	mov	r0, r4
   19018:	bl	112d4 <__overflow@plt>
   1901c:	b	18ed8 <argp_failure@@Base+0x7c>
   19020:	mov	r1, #32
   19024:	mov	r0, r4
   19028:	bl	112d4 <__overflow@plt>
   1902c:	b	18f50 <argp_failure@@Base+0xf4>
   19030:	mov	r1, #58	; 0x3a
   19034:	mov	r0, r4
   19038:	bl	112d4 <__overflow@plt>
   1903c:	b	18f30 <argp_failure@@Base+0xd4>
   19040:	mov	r0, r6
   19044:	bl	11220 <strerror@plt>
   19048:	ldr	r3, [pc, #16]	; 19060 <argp_failure@@Base+0x204>
   1904c:	cmp	r0, #0
   19050:	moveq	r0, r3
   19054:	b	18f68 <argp_failure@@Base+0x10c>
   19058:			; <UNDEFINED> instruction: 0x000338b8
   1905c:			; <UNDEFINED> instruction: 0x000338b0
   19060:	andeq	pc, r1, r8, lsr r3	; <UNPREDICTABLE>
   19064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19068:	add	fp, sp, #32
   1906c:	cmp	r2, #0
   19070:	sub	sp, sp, #116	; 0x74
   19074:	str	r2, [fp, #-136]	; 0xffffff78
   19078:	str	r0, [fp, #-116]	; 0xffffff8c
   1907c:	str	r1, [fp, #-104]	; 0xffffff98
   19080:	str	r3, [fp, #-100]	; 0xffffff9c
   19084:	beq	191a8 <argp_failure@@Base+0x34c>
   19088:	ldr	r3, [pc, #4076]	; 1a07c <argp_failure@@Base+0x1220>
   1908c:	mov	r0, r2
   19090:	mov	r4, r3
   19094:	str	r3, [fp, #-96]	; 0xffffffa0
   19098:	bl	1131c <flockfile@plt>
   1909c:	ldr	sl, [r4, #36]	; 0x24
   190a0:	cmp	sl, #0
   190a4:	beq	195bc <argp_failure@@Base+0x760>
   190a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   190ac:	mov	r3, #0
   190b0:	mov	r1, r3
   190b4:	ldr	r2, [r2, #32]
   190b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   190bc:	bl	1c078 <argp_error@@Base+0x19e0>
   190c0:	subs	sl, r0, #0
   190c4:	beq	1a3d8 <argp_failure@@Base+0x157c>
   190c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   190cc:	ands	r3, r3, #11
   190d0:	streq	r3, [fp, #-108]	; 0xffffff94
   190d4:	bne	199e8 <argp_failure@@Base+0xb8c>
   190d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   190dc:	ands	r4, r3, #3
   190e0:	bne	19b10 <argp_failure@@Base+0xcb4>
   190e4:	tst	r3, #16
   190e8:	bne	19ae8 <argp_failure@@Base+0xc8c>
   190ec:	tst	r3, #4
   190f0:	bne	199c8 <argp_failure@@Base+0xb6c>
   190f4:	tst	r3, #8
   190f8:	bne	191b0 <argp_failure@@Base+0x354>
   190fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19100:	tst	r3, #32
   19104:	bne	19578 <argp_failure@@Base+0x71c>
   19108:	tst	r3, #64	; 0x40
   1910c:	beq	19158 <argp_failure@@Base+0x2fc>
   19110:	ldr	r5, [pc, #3944]	; 1a080 <argp_failure@@Base+0x1224>
   19114:	ldr	r2, [r5]
   19118:	cmp	r2, #0
   1911c:	beq	19158 <argp_failure@@Base+0x2fc>
   19120:	cmp	r4, #0
   19124:	beq	1914c <argp_failure@@Base+0x2f0>
   19128:	ldr	r3, [sl, #28]
   1912c:	ldr	r2, [sl, #32]
   19130:	cmp	r3, r2
   19134:	bcs	1a3a8 <argp_failure@@Base+0x154c>
   19138:	add	r1, r3, #1
   1913c:	mov	r2, #10
   19140:	str	r1, [sl, #28]
   19144:	strb	r2, [r3]
   19148:	ldr	r2, [r5]
   1914c:	ldr	r1, [pc, #3888]	; 1a084 <argp_failure@@Base+0x1228>
   19150:	mov	r0, sl
   19154:	bl	1c7a0 <argp_error@@Base+0x2108>
   19158:	ldr	r0, [fp, #-136]	; 0xffffff78
   1915c:	bl	111b4 <funlockfile@plt>
   19160:	ldr	r3, [fp, #-108]	; 0xffffff94
   19164:	cmp	r3, #0
   19168:	beq	191a0 <argp_failure@@Base+0x344>
   1916c:	ldr	r0, [r3, #12]
   19170:	cmp	r0, #0
   19174:	beq	1918c <argp_failure@@Base+0x330>
   19178:	ldr	r4, [r0, #24]
   1917c:	bl	148c4 <argp_parse@@Base+0xf7c>
   19180:	subs	r0, r4, #0
   19184:	bne	19178 <argp_failure@@Base+0x31c>
   19188:	ldr	r3, [fp, #-108]	; 0xffffff94
   1918c:	ldr	r3, [r3, #4]
   19190:	cmp	r3, #0
   19194:	bne	195a4 <argp_failure@@Base+0x748>
   19198:	ldr	r0, [fp, #-108]	; 0xffffff94
   1919c:	bl	148c4 <argp_parse@@Base+0xf7c>
   191a0:	mov	r0, sl
   191a4:	bl	1c660 <argp_error@@Base+0x1fc8>
   191a8:	sub	sp, fp, #32
   191ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   191b4:	ldr	r3, [r3, #4]
   191b8:	cmp	r3, #0
   191bc:	str	r3, [fp, #-112]	; 0xffffff90
   191c0:	beq	190fc <argp_failure@@Base+0x2a0>
   191c4:	cmp	r4, #0
   191c8:	beq	1a2b8 <argp_failure@@Base+0x145c>
   191cc:	ldr	r3, [sl, #28]
   191d0:	ldr	r2, [sl, #32]
   191d4:	cmp	r3, r2
   191d8:	bcs	1a524 <argp_failure@@Base+0x16c8>
   191dc:	add	r1, r3, #1
   191e0:	mov	r2, #10
   191e4:	str	r1, [sl, #28]
   191e8:	strb	r2, [r3]
   191ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   191f0:	ldr	r2, [fp, #-108]	; 0xffffff94
   191f4:	ldr	r3, [r3, #4]
   191f8:	ldr	r8, [r2]
   191fc:	str	r3, [fp, #-112]	; 0xffffff90
   19200:	cmp	r3, #0
   19204:	mov	r3, #0
   19208:	str	r3, [fp, #-88]	; 0xffffffa8
   1920c:	str	r3, [fp, #-84]	; 0xffffffac
   19210:	str	r3, [fp, #-80]	; 0xffffffb0
   19214:	beq	19568 <argp_failure@@Base+0x70c>
   19218:	ldr	ip, [sl, #28]
   1921c:	ldr	r3, [sl, #24]
   19220:	ldr	lr, [sl, #16]
   19224:	sub	ip, ip, r3
   19228:	cmp	ip, lr
   1922c:	ldr	r6, [r8]
   19230:	ldr	r9, [r8, #8]
   19234:	bhi	1a118 <argp_failure@@Base+0x12bc>
   19238:	ldr	r3, [sl, #4]
   1923c:	ldr	r0, [r6, #12]
   19240:	str	r3, [fp, #-120]	; 0xffffff88
   19244:	ldr	r3, [sl, #12]
   19248:	mov	r7, #0
   1924c:	str	r3, [fp, #-124]	; 0xffffff84
   19250:	sub	r3, fp, #88	; 0x58
   19254:	str	r7, [sl, #4]
   19258:	str	r3, [fp, #-68]	; 0xffffffbc
   1925c:	ldr	r3, [fp, #-104]	; 0xffffff98
   19260:	ands	r0, r0, #8
   19264:	mov	r2, #1
   19268:	str	r2, [fp, #-64]	; 0xffffffc0
   1926c:	str	r8, [fp, #-76]	; 0xffffffb4
   19270:	str	sl, [fp, #-72]	; 0xffffffb8
   19274:	str	r3, [fp, #-60]	; 0xffffffc4
   19278:	strne	r7, [fp, #-132]	; 0xffffff7c
   1927c:	bne	192b8 <argp_failure@@Base+0x45c>
   19280:	ldr	r1, [r8, #4]
   19284:	cmp	r1, r7
   19288:	beq	192b4 <argp_failure@@Base+0x458>
   1928c:	add	r2, r6, #24
   19290:	ldr	r3, [r2, #-24]	; 0xffffffe8
   19294:	cmp	r3, #0
   19298:	beq	192a8 <argp_failure@@Base+0x44c>
   1929c:	ldr	r3, [r2, #-12]
   192a0:	tst	r3, #2
   192a4:	beq	1a15c <argp_failure@@Base+0x1300>
   192a8:	subs	r1, r1, #1
   192ac:	add	r2, r2, #24
   192b0:	bne	19290 <argp_failure@@Base+0x434>
   192b4:	str	r0, [fp, #-132]	; 0xffffff7c
   192b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   192bc:	cmp	ip, lr
   192c0:	ldr	r4, [r3, #8]
   192c4:	bhi	1a104 <argp_failure@@Base+0x12a8>
   192c8:	str	r4, [sl, #12]
   192cc:	ldr	r5, [r8, #4]
   192d0:	cmp	r5, #0
   192d4:	beq	19358 <argp_failure@@Base+0x4fc>
   192d8:	str	r8, [fp, #-128]	; 0xffffff80
   192dc:	mov	r4, r6
   192e0:	mov	r8, r9
   192e4:	b	192f4 <argp_failure@@Base+0x498>
   192e8:	subs	r5, r5, #1
   192ec:	add	r4, r4, #24
   192f0:	beq	1934c <argp_failure@@Base+0x4f0>
   192f4:	ldr	r7, [r4, #12]
   192f8:	tst	r7, #8
   192fc:	bne	192e8 <argp_failure@@Base+0x48c>
   19300:	ldr	r9, [r4, #4]
   19304:	sub	r2, r9, #1
   19308:	cmp	r2, #254	; 0xfe
   1930c:	bhi	192e8 <argp_failure@@Base+0x48c>
   19310:	bl	11250 <__ctype_b_loc@plt>
   19314:	lsl	r2, r9, #1
   19318:	ldr	r1, [r0]
   1931c:	ldrh	r2, [r1, r2]
   19320:	tst	r2, #16384	; 0x4000
   19324:	beq	192e8 <argp_failure@@Base+0x48c>
   19328:	ldrb	r2, [r8]
   1932c:	cmp	r9, r2
   19330:	bne	192e8 <argp_failure@@Base+0x48c>
   19334:	tst	r7, #2
   19338:	beq	19e7c <argp_failure@@Base+0x1020>
   1933c:	subs	r5, r5, #1
   19340:	add	r8, r8, #1
   19344:	add	r4, r4, #24
   19348:	bne	192f4 <argp_failure@@Base+0x498>
   1934c:	ldr	r0, [r6, #12]
   19350:	ldr	r8, [fp, #-128]	; 0xffffff80
   19354:	and	r0, r0, #8
   19358:	ldr	r3, [sl, #28]
   1935c:	ldr	r1, [sl, #24]
   19360:	cmp	r0, #0
   19364:	ldr	r2, [sl, #16]
   19368:	sub	r3, r3, r1
   1936c:	beq	19de8 <argp_failure@@Base+0xf8c>
   19370:	cmp	r3, r2
   19374:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19378:	ldr	r4, [r3, #16]
   1937c:	bhi	1a174 <argp_failure@@Base+0x1318>
   19380:	str	r4, [sl, #12]
   19384:	ldr	r5, [r8, #4]
   19388:	cmp	r5, #0
   1938c:	addne	r4, r6, #24
   19390:	bne	193a4 <argp_failure@@Base+0x548>
   19394:	b	19434 <argp_failure@@Base+0x5d8>
   19398:	subs	r5, r5, #1
   1939c:	add	r4, r4, #24
   193a0:	beq	19434 <argp_failure@@Base+0x5d8>
   193a4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   193a8:	cmp	r3, #0
   193ac:	beq	19398 <argp_failure@@Base+0x53c>
   193b0:	ldr	r3, [r4, #-12]
   193b4:	tst	r3, #2
   193b8:	bne	19398 <argp_failure@@Base+0x53c>
   193bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   193c0:	sub	r1, fp, #76	; 0x4c
   193c4:	ldr	r0, [r3, #16]
   193c8:	bl	17d7c <_obstack_memory_used@@Base+0x2fc0>
   193cc:	ldr	r9, [r4, #-24]	; 0xffffffe8
   193d0:	mov	r0, r9
   193d4:	bl	11268 <strlen@plt>
   193d8:	subs	r7, r0, #0
   193dc:	beq	19398 <argp_failure@@Base+0x53c>
   193e0:	ldr	r2, [sl, #28]
   193e4:	ldr	lr, [sl, #32]
   193e8:	add	ip, r2, r7
   193ec:	cmp	lr, ip
   193f0:	mov	r1, r7
   193f4:	mov	r0, sl
   193f8:	bcs	1940c <argp_failure@@Base+0x5b0>
   193fc:	bl	1c6a0 <argp_error@@Base+0x2008>
   19400:	cmp	r0, #0
   19404:	beq	19398 <argp_failure@@Base+0x53c>
   19408:	ldr	r2, [sl, #28]
   1940c:	mov	r0, r2
   19410:	mov	r1, r9
   19414:	mov	r2, r7
   19418:	bl	1116c <memcpy@plt>
   1941c:	ldr	r2, [sl, #28]
   19420:	subs	r5, r5, #1
   19424:	add	r3, r2, r7
   19428:	str	r3, [sl, #28]
   1942c:	add	r4, r4, #24
   19430:	bne	193a4 <argp_failure@@Base+0x548>
   19434:	ldr	r3, [sl, #28]
   19438:	ldr	r1, [sl, #24]
   1943c:	ldr	r2, [sl, #16]
   19440:	sub	r3, r3, r1
   19444:	cmp	r3, r2
   19448:	bhi	1a03c <argp_failure@@Base+0x11e0>
   1944c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19450:	mov	r3, #0
   19454:	cmp	r2, r3
   19458:	str	r3, [sl, #4]
   1945c:	beq	19efc <argp_failure@@Base+0x10a0>
   19460:	ldr	r3, [r6, #12]
   19464:	tst	r3, #8
   19468:	bne	19494 <argp_failure@@Base+0x638>
   1946c:	ldr	r4, [r6, #4]
   19470:	sub	r3, r4, #1
   19474:	cmp	r3, #254	; 0xfe
   19478:	bhi	19494 <argp_failure@@Base+0x638>
   1947c:	bl	11250 <__ctype_b_loc@plt>
   19480:	lsl	r4, r4, #1
   19484:	ldr	r3, [r0]
   19488:	ldrh	r3, [r3, r4]
   1948c:	tst	r3, #16384	; 0x4000
   19490:	bne	194a0 <argp_failure@@Base+0x644>
   19494:	ldr	r3, [r6]
   19498:	cmp	r3, #0
   1949c:	beq	1a3c4 <argp_failure@@Base+0x1568>
   194a0:	ldr	r3, [sl, #28]
   194a4:	ldr	r1, [sl, #24]
   194a8:	ldr	r2, [sl, #16]
   194ac:	sub	r3, r3, r1
   194b0:	cmp	r3, r2
   194b4:	bhi	1a048 <argp_failure@@Base+0x11ec>
   194b8:	ldr	r3, [fp, #-120]	; 0xffffff88
   194bc:	str	r3, [sl, #4]
   194c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   194c4:	add	r8, r8, #28
   194c8:	subs	r3, r3, #1
   194cc:	str	r3, [fp, #-112]	; 0xffffff90
   194d0:	ldr	r3, [fp, #-124]	; 0xffffff84
   194d4:	str	r3, [sl, #12]
   194d8:	bne	19218 <argp_failure@@Base+0x3bc>
   194dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   194e0:	cmp	r3, #0
   194e4:	beq	19568 <argp_failure@@Base+0x70c>
   194e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   194ec:	ldr	r3, [r3, #4]
   194f0:	cmp	r3, #0
   194f4:	beq	19568 <argp_failure@@Base+0x70c>
   194f8:	ldr	r1, [fp, #-104]	; 0xffffff98
   194fc:	cmp	r1, #0
   19500:	beq	1a588 <argp_failure@@Base+0x172c>
   19504:	ldr	r4, [r1]
   19508:	cmp	r4, #0
   1950c:	beq	1a5b8 <argp_failure@@Base+0x175c>
   19510:	ldr	r3, [r4, #20]
   19514:	cmp	r3, #0
   19518:	beq	1a488 <argp_failure@@Base+0x162c>
   1951c:	mov	r0, r4
   19520:	bl	14768 <argp_parse@@Base+0xe20>
   19524:	ldr	r9, [pc, #3028]	; 1a100 <argp_failure@@Base+0x12a4>
   19528:	ldr	r3, [r4, #20]
   1952c:	mov	r1, r9
   19530:	mov	r2, r0
   19534:	ldr	r0, [pc, #2892]	; 1a088 <argp_failure@@Base+0x122c>
   19538:	blx	r3
   1953c:	subs	r4, r0, #0
   19540:	beq	19568 <argp_failure@@Base+0x70c>
   19544:	ldrb	r3, [r4]
   19548:	subs	r9, r4, r9
   1954c:	movne	r9, #1
   19550:	cmp	r3, #0
   19554:	bne	1a490 <argp_failure@@Base+0x1634>
   19558:	cmp	r9, #0
   1955c:	beq	19568 <argp_failure@@Base+0x70c>
   19560:	mov	r0, r4
   19564:	bl	148c4 <argp_parse@@Base+0xf7c>
   19568:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1956c:	mov	r4, #1
   19570:	tst	r3, #32
   19574:	beq	19108 <argp_failure@@Base+0x2ac>
   19578:	mov	r3, #0
   1957c:	str	r3, [sp]
   19580:	str	sl, [sp, #4]
   19584:	mov	r3, r4
   19588:	ldr	r1, [fp, #-104]	; 0xffffff98
   1958c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19590:	mov	r2, #1
   19594:	bl	16354 <_obstack_memory_used@@Base+0x1598>
   19598:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1959c:	orr	r4, r4, r0
   195a0:	b	19108 <argp_failure@@Base+0x2ac>
   195a4:	ldr	r4, [fp, #-108]	; 0xffffff94
   195a8:	ldr	r0, [r4]
   195ac:	bl	148c4 <argp_parse@@Base+0xf7c>
   195b0:	ldr	r0, [r4, #8]
   195b4:	bl	148c4 <argp_parse@@Base+0xf7c>
   195b8:	b	19198 <argp_failure@@Base+0x33c>
   195bc:	ldr	r0, [pc, #2760]	; 1a08c <argp_failure@@Base+0x1230>
   195c0:	bl	111f0 <getenv@plt>
   195c4:	ldr	lr, [fp, #-96]	; 0xffffffa0
   195c8:	sub	r3, fp, #76	; 0x4c
   195cc:	mov	ip, r3
   195d0:	str	r3, [fp, #-112]	; 0xffffff90
   195d4:	mov	r5, r0
   195d8:	ldm	lr!, {r0, r1, r2, r3}
   195dc:	cmp	r5, #0
   195e0:	stmia	ip!, {r0, r1, r2, r3}
   195e4:	ldm	lr!, {r0, r1, r2, r3}
   195e8:	stmia	ip!, {r0, r1, r2, r3}
   195ec:	ldm	lr, {r0, r1}
   195f0:	stm	ip, {r0, r1}
   195f4:	beq	190a8 <argp_failure@@Base+0x24c>
   195f8:	ldrb	r8, [r5]
   195fc:	ldr	r9, [pc, #2700]	; 1a090 <argp_failure@@Base+0x1234>
   19600:	str	sl, [fp, #-120]	; 0xffffff88
   19604:	cmp	r8, #0
   19608:	beq	197bc <argp_failure@@Base+0x960>
   1960c:	bl	11250 <__ctype_b_loc@plt>
   19610:	mov	r7, r0
   19614:	ldr	r0, [r0]
   19618:	b	19620 <argp_failure@@Base+0x7c4>
   1961c:	ldrb	r8, [r5, #1]!
   19620:	lsl	r3, r8, #1
   19624:	ldrh	r1, [r0, r3]
   19628:	tst	r1, #8192	; 0x2000
   1962c:	bne	1961c <argp_failure@@Base+0x7c0>
   19630:	ands	r2, r1, #1024	; 0x400
   19634:	beq	197b4 <argp_failure@@Base+0x958>
   19638:	cmp	r8, #95	; 0x5f
   1963c:	cmpne	r8, #45	; 0x2d
   19640:	lsl	r3, r1, #28
   19644:	moveq	r6, #1
   19648:	movne	r6, #0
   1964c:	orrs	r6, r6, r3, lsr #31
   19650:	beq	1a258 <argp_failure@@Base+0x13fc>
   19654:	mov	r4, r5
   19658:	ldrb	r3, [r4, #1]!
   1965c:	cmp	r3, #95	; 0x5f
   19660:	cmpne	r3, #45	; 0x2d
   19664:	lsl	r1, r3, #1
   19668:	moveq	r2, #1
   1966c:	ldrh	r1, [r0, r1]
   19670:	movne	r2, #0
   19674:	lsl	ip, r1, #28
   19678:	orrs	r2, r2, ip, lsr #31
   1967c:	bne	19658 <argp_failure@@Base+0x7fc>
   19680:	tst	r1, #8192	; 0x2000
   19684:	sub	r6, r4, r5
   19688:	beq	196a0 <argp_failure@@Base+0x844>
   1968c:	ldrb	r3, [r4, #1]!
   19690:	lsl	r2, r3, #1
   19694:	ldrh	r1, [r0, r2]
   19698:	tst	r1, #8192	; 0x2000
   1969c:	bne	1968c <argp_failure@@Base+0x830>
   196a0:	cmp	r3, #44	; 0x2c
   196a4:	cmpne	r3, #0
   196a8:	beq	19840 <argp_failure@@Base+0x9e4>
   196ac:	cmp	r3, #61	; 0x3d
   196b0:	beq	19db8 <argp_failure@@Base+0xf5c>
   196b4:	tst	r1, #2048	; 0x800
   196b8:	bne	19d28 <argp_failure@@Base+0xecc>
   196bc:	ldr	r3, [fp, #-120]	; 0xffffff88
   196c0:	mov	sl, r3
   196c4:	str	r3, [fp, #-108]	; 0xffffff94
   196c8:	mov	r0, r9
   196cc:	bl	11268 <strlen@plt>
   196d0:	cmp	r6, r0
   196d4:	beq	19860 <argp_failure@@Base+0xa04>
   196d8:	ldr	r0, [pc, #2484]	; 1a094 <argp_failure@@Base+0x1238>
   196dc:	bl	11268 <strlen@plt>
   196e0:	cmp	r6, r0
   196e4:	mov	r7, r0
   196e8:	beq	198f4 <argp_failure@@Base+0xa98>
   196ec:	ldr	r0, [pc, #2556]	; 1a0f0 <argp_failure@@Base+0x1294>
   196f0:	bl	11268 <strlen@plt>
   196f4:	cmp	r6, r0
   196f8:	mov	r7, r0
   196fc:	beq	198a8 <argp_failure@@Base+0xa4c>
   19700:	ldr	r0, [pc, #2532]	; 1a0ec <argp_failure@@Base+0x1290>
   19704:	bl	11268 <strlen@plt>
   19708:	cmp	r6, r0
   1970c:	mov	r7, r0
   19710:	beq	19914 <argp_failure@@Base+0xab8>
   19714:	ldr	r0, [pc, #2500]	; 1a0e0 <argp_failure@@Base+0x1284>
   19718:	bl	11268 <strlen@plt>
   1971c:	cmp	r6, r0
   19720:	mov	r7, r0
   19724:	beq	19934 <argp_failure@@Base+0xad8>
   19728:	ldr	r8, [pc, #2504]	; 1a0f8 <argp_failure@@Base+0x129c>
   1972c:	mov	r0, r8
   19730:	bl	11268 <strlen@plt>
   19734:	cmp	r6, r0
   19738:	mov	r7, r0
   1973c:	beq	19954 <argp_failure@@Base+0xaf8>
   19740:	ldr	r8, [pc, #2476]	; 1a0f4 <argp_failure@@Base+0x1298>
   19744:	mov	r0, r8
   19748:	bl	11268 <strlen@plt>
   1974c:	cmp	r6, r0
   19750:	mov	r7, r0
   19754:	beq	19970 <argp_failure@@Base+0xb14>
   19758:	ldr	r8, [pc, #2460]	; 1a0fc <argp_failure@@Base+0x12a0>
   1975c:	mov	r0, r8
   19760:	bl	11268 <strlen@plt>
   19764:	cmp	r6, r0
   19768:	mov	r7, r0
   1976c:	beq	1998c <argp_failure@@Base+0xb30>
   19770:	ldr	r8, [pc, #2336]	; 1a098 <argp_failure@@Base+0x123c>
   19774:	mov	r0, r8
   19778:	bl	11268 <strlen@plt>
   1977c:	cmp	r0, r6
   19780:	beq	199a8 <argp_failure@@Base+0xb4c>
   19784:	mov	r2, #0
   19788:	str	r5, [sp, #4]
   1978c:	str	r6, [sp]
   19790:	mov	r1, r2
   19794:	ldr	r3, [pc, #2304]	; 1a09c <argp_failure@@Base+0x1240>
   19798:	ldr	r0, [fp, #-104]	; 0xffffff98
   1979c:	bl	18e5c <argp_failure@@Base>
   197a0:	ldrb	r8, [r4]
   197a4:	cmp	r8, #44	; 0x2c
   197a8:	beq	1989c <argp_failure@@Base+0xa40>
   197ac:	mov	r5, r4
   197b0:	b	19604 <argp_failure@@Base+0x7a8>
   197b4:	cmp	r8, #0
   197b8:	bne	1a364 <argp_failure@@Base+0x1508>
   197bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   197c0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   197c4:	cmp	r3, r2
   197c8:	ble	1a548 <argp_failure@@Base+0x16ec>
   197cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   197d0:	cmp	r3, r2
   197d4:	ble	1a3a0 <argp_failure@@Base+0x1544>
   197d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   197dc:	cmp	r3, r2
   197e0:	ble	1a37c <argp_failure@@Base+0x1520>
   197e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   197e8:	cmp	r3, r2
   197ec:	ble	1a580 <argp_failure@@Base+0x1724>
   197f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   197f4:	cmp	r3, r2
   197f8:	ble	1a578 <argp_failure@@Base+0x171c>
   197fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19800:	cmp	r3, r2
   19804:	ble	1a594 <argp_failure@@Base+0x1738>
   19808:	ldr	lr, [fp, #-112]	; 0xffffff90
   1980c:	ldr	r3, [pc, #2152]	; 1a07c <argp_failure@@Base+0x1220>
   19810:	mov	r4, #1
   19814:	mov	r5, r3
   19818:	str	r3, [fp, #-96]	; 0xffffffa0
   1981c:	ldm	lr!, {r0, r1, r2, r3}
   19820:	mov	ip, r5
   19824:	stmia	ip!, {r0, r1, r2, r3}
   19828:	ldm	lr!, {r0, r1, r2, r3}
   1982c:	stmia	ip!, {r0, r1, r2, r3}
   19830:	ldm	lr, {r0, r1}
   19834:	stm	ip, {r0, r1}
   19838:	str	r4, [r5, #36]	; 0x24
   1983c:	b	190a8 <argp_failure@@Base+0x24c>
   19840:	cmp	r8, #110	; 0x6e
   19844:	beq	19d88 <argp_failure@@Base+0xf2c>
   19848:	mov	sl, #1
   1984c:	mov	r0, r9
   19850:	str	sl, [fp, #-108]	; 0xffffff94
   19854:	bl	11268 <strlen@plt>
   19858:	cmp	r6, r0
   1985c:	bne	196d8 <argp_failure@@Base+0x87c>
   19860:	mov	r2, r6
   19864:	mov	r1, r9
   19868:	mov	r0, r5
   1986c:	bl	11388 <strncmp@plt>
   19870:	cmp	r0, #0
   19874:	bne	196d8 <argp_failure@@Base+0x87c>
   19878:	mov	r8, r9
   1987c:	ldrb	r3, [r8, #15]
   19880:	ldrb	r8, [r4]
   19884:	sub	r2, fp, #36	; 0x24
   19888:	add	r3, r2, r3
   1988c:	ldr	r2, [fp, #-108]	; 0xffffff94
   19890:	cmp	r8, #44	; 0x2c
   19894:	str	r2, [r3, #-40]	; 0xffffffd8
   19898:	bne	197ac <argp_failure@@Base+0x950>
   1989c:	ldrb	r8, [r4, #1]
   198a0:	add	r4, r4, #1
   198a4:	b	197ac <argp_failure@@Base+0x950>
   198a8:	mov	r2, r0
   198ac:	ldr	r1, [pc, #2108]	; 1a0f0 <argp_failure@@Base+0x1294>
   198b0:	mov	r0, r5
   198b4:	bl	11388 <strncmp@plt>
   198b8:	cmp	r0, #0
   198bc:	bne	19700 <argp_failure@@Base+0x8a4>
   198c0:	ldr	r8, [pc, #2088]	; 1a0f0 <argp_failure@@Base+0x1294>
   198c4:	cmp	sl, #0
   198c8:	beq	1987c <argp_failure@@Base+0xa20>
   198cc:	ldrb	r2, [r8, #14]
   198d0:	cmp	r2, #0
   198d4:	bne	1987c <argp_failure@@Base+0xa20>
   198d8:	str	r5, [sp, #4]
   198dc:	str	r7, [sp]
   198e0:	ldr	r3, [pc, #1976]	; 1a0a0 <argp_failure@@Base+0x1244>
   198e4:	mov	r1, r2
   198e8:	ldr	r0, [fp, #-104]	; 0xffffff98
   198ec:	bl	18e5c <argp_failure@@Base>
   198f0:	b	197a0 <argp_failure@@Base+0x944>
   198f4:	mov	r2, r0
   198f8:	ldr	r1, [pc, #1940]	; 1a094 <argp_failure@@Base+0x1238>
   198fc:	mov	r0, r5
   19900:	bl	11388 <strncmp@plt>
   19904:	cmp	r0, #0
   19908:	bne	196ec <argp_failure@@Base+0x890>
   1990c:	ldr	r8, [pc, #1920]	; 1a094 <argp_failure@@Base+0x1238>
   19910:	b	198c4 <argp_failure@@Base+0xa68>
   19914:	mov	r2, r0
   19918:	ldr	r1, [pc, #1996]	; 1a0ec <argp_failure@@Base+0x1290>
   1991c:	mov	r0, r5
   19920:	bl	11388 <strncmp@plt>
   19924:	cmp	r0, #0
   19928:	bne	19714 <argp_failure@@Base+0x8b8>
   1992c:	ldr	r8, [pc, #1976]	; 1a0ec <argp_failure@@Base+0x1290>
   19930:	b	198c4 <argp_failure@@Base+0xa68>
   19934:	mov	r2, r0
   19938:	ldr	r1, [pc, #1952]	; 1a0e0 <argp_failure@@Base+0x1284>
   1993c:	mov	r0, r5
   19940:	bl	11388 <strncmp@plt>
   19944:	cmp	r0, #0
   19948:	bne	19728 <argp_failure@@Base+0x8cc>
   1994c:	ldr	r8, [pc, #1932]	; 1a0e0 <argp_failure@@Base+0x1284>
   19950:	b	198c4 <argp_failure@@Base+0xa68>
   19954:	mov	r2, r0
   19958:	mov	r1, r8
   1995c:	mov	r0, r5
   19960:	bl	11388 <strncmp@plt>
   19964:	cmp	r0, #0
   19968:	bne	19740 <argp_failure@@Base+0x8e4>
   1996c:	b	198c4 <argp_failure@@Base+0xa68>
   19970:	mov	r2, r0
   19974:	mov	r1, r8
   19978:	mov	r0, r5
   1997c:	bl	11388 <strncmp@plt>
   19980:	cmp	r0, #0
   19984:	bne	19758 <argp_failure@@Base+0x8fc>
   19988:	b	198c4 <argp_failure@@Base+0xa68>
   1998c:	mov	r2, r0
   19990:	mov	r1, r8
   19994:	mov	r0, r5
   19998:	bl	11388 <strncmp@plt>
   1999c:	cmp	r0, #0
   199a0:	bne	19770 <argp_failure@@Base+0x914>
   199a4:	b	198c4 <argp_failure@@Base+0xa68>
   199a8:	mov	r2, r6
   199ac:	mov	r1, r8
   199b0:	mov	r0, r5
   199b4:	bl	11388 <strncmp@plt>
   199b8:	cmp	r0, #0
   199bc:	moveq	r7, r6
   199c0:	bne	19784 <argp_failure@@Base+0x928>
   199c4:	b	198c4 <argp_failure@@Base+0xa68>
   199c8:	ldr	r3, [fp, #4]
   199cc:	ldr	r1, [pc, #1744]	; 1a0a4 <argp_failure@@Base+0x1248>
   199d0:	mov	r2, r3
   199d4:	mov	r0, sl
   199d8:	bl	1c7a0 <argp_error@@Base+0x2108>
   199dc:	mov	r4, #1
   199e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   199e4:	b	190f4 <argp_failure@@Base+0x298>
   199e8:	mov	r1, #0
   199ec:	ldr	r0, [fp, #-116]	; 0xffffff8c
   199f0:	bl	16900 <_obstack_memory_used@@Base+0x1b44>
   199f4:	ldr	r2, [r0, #4]
   199f8:	ldr	r3, [r0]
   199fc:	cmp	r2, #0
   19a00:	str	r0, [fp, #-108]	; 0xffffff94
   19a04:	str	r2, [fp, #-120]	; 0xffffff88
   19a08:	str	r3, [fp, #-112]	; 0xffffff90
   19a0c:	sub	r6, r2, #1
   19a10:	beq	190d8 <argp_failure@@Base+0x27c>
   19a14:	ldr	r5, [pc, #1676]	; 1a0a8 <argp_failure@@Base+0x124c>
   19a18:	mov	r8, r6
   19a1c:	mov	r7, r3
   19a20:	ldm	r7, {r4, r9}
   19a24:	cmp	r9, #0
   19a28:	sub	r9, r9, #1
   19a2c:	beq	19a6c <argp_failure@@Base+0xc10>
   19a30:	add	r4, r4, #24
   19a34:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19a38:	mov	r1, r5
   19a3c:	subs	r0, r3, #0
   19a40:	sub	r9, r9, #1
   19a44:	beq	19a60 <argp_failure@@Base+0xc04>
   19a48:	ldr	r3, [r4, #-12]
   19a4c:	tst	r3, #2
   19a50:	bne	19a60 <argp_failure@@Base+0xc04>
   19a54:	bl	110f4 <strcmp@plt>
   19a58:	cmp	r0, #0
   19a5c:	beq	1a200 <argp_failure@@Base+0x13a4>
   19a60:	cmn	r9, #1
   19a64:	add	r4, r4, #24
   19a68:	bne	19a34 <argp_failure@@Base+0xbd8>
   19a6c:	sub	r8, r8, #1
   19a70:	cmn	r8, #1
   19a74:	add	r7, r7, #28
   19a78:	bne	19a20 <argp_failure@@Base+0xbc4>
   19a7c:	ldr	r7, [fp, #-112]	; 0xffffff90
   19a80:	ldr	r9, [pc, #1572]	; 1a0ac <argp_failure@@Base+0x1250>
   19a84:	ldm	r7, {r4, r5}
   19a88:	cmp	r5, #0
   19a8c:	sub	r5, r5, #1
   19a90:	beq	19ad0 <argp_failure@@Base+0xc74>
   19a94:	add	r4, r4, #24
   19a98:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19a9c:	mov	r1, r9
   19aa0:	subs	r0, r3, #0
   19aa4:	sub	r5, r5, #1
   19aa8:	beq	19ac4 <argp_failure@@Base+0xc68>
   19aac:	ldr	r3, [r4, #-12]
   19ab0:	tst	r3, #2
   19ab4:	bne	19ac4 <argp_failure@@Base+0xc68>
   19ab8:	bl	110f4 <strcmp@plt>
   19abc:	cmp	r0, #0
   19ac0:	beq	1a1b8 <argp_failure@@Base+0x135c>
   19ac4:	cmn	r5, #1
   19ac8:	add	r4, r4, #24
   19acc:	bne	19a98 <argp_failure@@Base+0xc3c>
   19ad0:	cmp	r6, #0
   19ad4:	add	r7, r7, #28
   19ad8:	sub	r6, r6, #1
   19adc:	bne	19a84 <argp_failure@@Base+0xc28>
   19ae0:	ldr	r1, [fp, #-120]	; 0xffffff88
   19ae4:	b	1a1d0 <argp_failure@@Base+0x1374>
   19ae8:	mov	r2, #1
   19aec:	mov	r3, #0
   19af0:	stm	sp, {r2, sl}
   19af4:	ldr	r1, [fp, #-104]	; 0xffffff98
   19af8:	mov	r2, r3
   19afc:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19b00:	bl	16354 <_obstack_memory_used@@Base+0x1598>
   19b04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b08:	orr	r4, r4, r0
   19b0c:	b	190ec <argp_failure@@Base+0x290>
   19b10:	ldr	r3, [fp, #-116]	; 0xffffff8c
   19b14:	mov	r4, #1
   19b18:	ldr	r8, [pc, #1424]	; 1a0b0 <argp_failure@@Base+0x1254>
   19b1c:	ldr	r1, [r3, #16]
   19b20:	ldr	r0, [r3, #8]
   19b24:	bl	17300 <_obstack_memory_used@@Base+0x2544>
   19b28:	mov	r1, #0
   19b2c:	mov	r6, r4
   19b30:	add	r3, r0, #14
   19b34:	bic	r3, r3, #7
   19b38:	sub	sp, sp, r3
   19b3c:	add	r7, sp, #8
   19b40:	mov	r2, r0
   19b44:	mov	r0, r7
   19b48:	bl	112b0 <memset@plt>
   19b4c:	sub	r3, fp, #76	; 0x4c
   19b50:	str	r3, [fp, #-112]	; 0xffffff90
   19b54:	str	r7, [fp, #-120]	; 0xffffff88
   19b58:	ldr	r5, [fp, #-96]	; 0xffffffa0
   19b5c:	b	19c7c <argp_failure@@Base+0xe20>
   19b60:	cmp	r4, #0
   19b64:	ldr	r3, [fp, #-120]	; 0xffffff88
   19b68:	ldr	r7, [sl, #12]
   19b6c:	ldrne	r2, [pc, #1344]	; 1a0b4 <argp_failure@@Base+0x1258>
   19b70:	str	r9, [sl, #12]
   19b74:	ldreq	r2, [pc, #1340]	; 1a0b8 <argp_failure@@Base+0x125c>
   19b78:	str	r3, [fp, #-76]	; 0xffffffb4
   19b7c:	mov	r1, r8
   19b80:	ldr	r3, [fp, #4]
   19b84:	mov	r0, sl
   19b88:	bl	1c7a0 <argp_error@@Base+0x2108>
   19b8c:	ldr	r3, [sl, #28]
   19b90:	ldr	r1, [sl, #24]
   19b94:	ldr	r2, [sl, #16]
   19b98:	sub	r3, r3, r1
   19b9c:	cmp	r3, r2
   19ba0:	ldr	r9, [r5, #28]
   19ba4:	bhi	19cf4 <argp_failure@@Base+0xe98>
   19ba8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19bac:	ldr	r4, [sl, #4]
   19bb0:	tst	r3, #2
   19bb4:	str	r9, [sl, #4]
   19bb8:	beq	19d00 <argp_failure@@Base+0xea4>
   19bbc:	ldr	r3, [fp, #-108]	; 0xffffff94
   19bc0:	ldr	r3, [r3, #4]
   19bc4:	cmp	r3, #0
   19bc8:	beq	19c18 <argp_failure@@Base+0xdbc>
   19bcc:	ldr	ip, [sl, #28]
   19bd0:	ldr	r2, [sl, #32]
   19bd4:	add	r3, ip, #12
   19bd8:	cmp	r2, r3
   19bdc:	bcs	19bf8 <argp_failure@@Base+0xd9c>
   19be0:	mov	r1, #12
   19be4:	mov	r0, sl
   19be8:	bl	1c6a0 <argp_error@@Base+0x2008>
   19bec:	cmp	r0, #0
   19bf0:	beq	19c18 <argp_failure@@Base+0xdbc>
   19bf4:	ldr	ip, [sl, #28]
   19bf8:	ldr	r3, [pc, #1212]	; 1a0bc <argp_failure@@Base+0x1260>
   19bfc:	ldm	r3!, {r0, r1, r2}
   19c00:	str	r0, [ip]
   19c04:	str	r1, [ip, #4]
   19c08:	str	r2, [ip, #8]
   19c0c:	ldr	r3, [sl, #28]
   19c10:	add	r3, r3, #12
   19c14:	str	r3, [sl, #28]
   19c18:	mov	r3, r6
   19c1c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19c20:	str	sl, [sp]
   19c24:	ldr	r2, [fp, #-112]	; 0xffffff90
   19c28:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19c2c:	bl	17020 <_obstack_memory_used@@Base+0x2264>
   19c30:	ldr	r3, [sl, #28]
   19c34:	ldr	r1, [sl, #24]
   19c38:	sub	r1, r3, r1
   19c3c:	mov	r9, r0
   19c40:	ldr	r0, [sl, #16]
   19c44:	cmp	r1, r0
   19c48:	strls	r7, [sl, #12]
   19c4c:	bhi	19cc0 <argp_failure@@Base+0xe64>
   19c50:	ldr	r1, [sl, #32]
   19c54:	str	r4, [sl, #4]
   19c58:	cmp	r1, r3
   19c5c:	bls	19ca4 <argp_failure@@Base+0xe48>
   19c60:	add	r1, r3, #1
   19c64:	mov	r2, #10
   19c68:	str	r1, [sl, #28]
   19c6c:	strb	r2, [r3]
   19c70:	cmp	r9, #0
   19c74:	mov	r4, #0
   19c78:	beq	19d1c <argp_failure@@Base+0xec0>
   19c7c:	ldr	r3, [sl, #28]
   19c80:	ldr	r1, [sl, #24]
   19c84:	ldr	r2, [sl, #16]
   19c88:	sub	r3, r3, r1
   19c8c:	cmp	r3, r2
   19c90:	ldr	r9, [r5, #28]
   19c94:	bls	19b60 <argp_failure@@Base+0xd04>
   19c98:	mov	r0, sl
   19c9c:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   19ca0:	b	19b60 <argp_failure@@Base+0xd04>
   19ca4:	mov	r1, r6
   19ca8:	mov	r0, sl
   19cac:	bl	1c6a0 <argp_error@@Base+0x2008>
   19cb0:	cmp	r0, #0
   19cb4:	beq	19c70 <argp_failure@@Base+0xe14>
   19cb8:	ldr	r3, [sl, #28]
   19cbc:	b	19c60 <argp_failure@@Base+0xe04>
   19cc0:	mov	r0, sl
   19cc4:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   19cc8:	ldr	r3, [sl, #28]
   19ccc:	ldr	r1, [sl, #24]
   19cd0:	ldr	r0, [sl, #16]
   19cd4:	sub	r1, r3, r1
   19cd8:	cmp	r1, r0
   19cdc:	str	r7, [sl, #12]
   19ce0:	bls	19c50 <argp_failure@@Base+0xdf4>
   19ce4:	mov	r0, sl
   19ce8:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   19cec:	ldr	r3, [sl, #28]
   19cf0:	b	19c50 <argp_failure@@Base+0xdf4>
   19cf4:	mov	r0, sl
   19cf8:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   19cfc:	b	19ba8 <argp_failure@@Base+0xd4c>
   19d00:	mov	r1, sl
   19d04:	ldr	r0, [fp, #-108]	; 0xffffff94
   19d08:	bl	1764c <_obstack_memory_used@@Base+0x2890>
   19d0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d10:	orr	r3, r3, #2
   19d14:	str	r3, [fp, #-100]	; 0xffffff9c
   19d18:	b	19c18 <argp_failure@@Base+0xdbc>
   19d1c:	mov	r4, #1
   19d20:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19d24:	b	190e4 <argp_failure@@Base+0x288>
   19d28:	mov	r2, #10
   19d2c:	mov	r1, #0
   19d30:	mov	r0, r4
   19d34:	bl	11100 <strtol@plt>
   19d38:	ldrb	r3, [r4]
   19d3c:	ldr	r2, [r7]
   19d40:	lsl	r3, r3, #1
   19d44:	ldrh	r3, [r2, r3]
   19d48:	tst	r3, #2048	; 0x800
   19d4c:	str	r0, [fp, #-108]	; 0xffffff94
   19d50:	beq	19d78 <argp_failure@@Base+0xf1c>
   19d54:	ldrb	r3, [r4, #1]!
   19d58:	lsl	r3, r3, #1
   19d5c:	ldrh	r3, [r2, r3]
   19d60:	tst	r3, #2048	; 0x800
   19d64:	bne	19d54 <argp_failure@@Base+0xef8>
   19d68:	b	19d78 <argp_failure@@Base+0xf1c>
   19d6c:	ldrb	r3, [r4, #1]!
   19d70:	lsl	r3, r3, #1
   19d74:	ldrh	r3, [r2, r3]
   19d78:	tst	r3, #8192	; 0x2000
   19d7c:	bne	19d6c <argp_failure@@Base+0xf10>
   19d80:	ldr	sl, [fp, #-120]	; 0xffffff88
   19d84:	b	196c8 <argp_failure@@Base+0x86c>
   19d88:	ldrb	r3, [r5, #1]
   19d8c:	cmp	r3, #111	; 0x6f
   19d90:	bne	19848 <argp_failure@@Base+0x9ec>
   19d94:	ldrb	r3, [r5, #2]
   19d98:	cmp	r3, #45	; 0x2d
   19d9c:	bne	19848 <argp_failure@@Base+0x9ec>
   19da0:	ldr	r3, [fp, #-120]	; 0xffffff88
   19da4:	add	r5, r5, #3
   19da8:	sub	r6, r6, #3
   19dac:	str	r3, [fp, #-108]	; 0xffffff94
   19db0:	mov	sl, #1
   19db4:	b	196c8 <argp_failure@@Base+0x86c>
   19db8:	ldrb	r3, [r4, #1]
   19dbc:	add	r4, r4, #1
   19dc0:	lsl	r3, r3, #1
   19dc4:	ldrh	r1, [r0, r3]
   19dc8:	tst	r1, #8192	; 0x2000
   19dcc:	beq	196b4 <argp_failure@@Base+0x858>
   19dd0:	ldrb	r3, [r4, #1]!
   19dd4:	lsl	r3, r3, #1
   19dd8:	ldrh	r1, [r0, r3]
   19ddc:	tst	r1, #8192	; 0x2000
   19de0:	bne	19dd0 <argp_failure@@Base+0xf74>
   19de4:	b	196b4 <argp_failure@@Base+0x858>
   19de8:	cmp	r3, r2
   19dec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19df0:	ldr	r4, [r3, #12]
   19df4:	bhi	1a168 <argp_failure@@Base+0x130c>
   19df8:	str	r4, [sl, #12]
   19dfc:	ldr	r5, [r8, #4]
   19e00:	cmp	r5, #0
   19e04:	beq	19434 <argp_failure@@Base+0x5d8>
   19e08:	add	r4, r6, #24
   19e0c:	ldr	r7, [fp, #-96]	; 0xffffffa0
   19e10:	b	19e20 <argp_failure@@Base+0xfc4>
   19e14:	subs	r5, r5, #1
   19e18:	add	r4, r4, #24
   19e1c:	beq	19434 <argp_failure@@Base+0x5d8>
   19e20:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19e24:	cmp	r3, #0
   19e28:	beq	19e14 <argp_failure@@Base+0xfb8>
   19e2c:	ldr	r3, [r4, #-12]
   19e30:	tst	r3, #2
   19e34:	bne	19e14 <argp_failure@@Base+0xfb8>
   19e38:	sub	r1, fp, #76	; 0x4c
   19e3c:	ldr	r0, [r7, #12]
   19e40:	bl	17d7c <_obstack_memory_used@@Base+0x2fc0>
   19e44:	ldr	r2, [r4, #-24]	; 0xffffffe8
   19e48:	ldr	r1, [pc, #624]	; 1a0c0 <argp_failure@@Base+0x1264>
   19e4c:	mov	r0, sl
   19e50:	bl	1c7a0 <argp_error@@Base+0x2108>
   19e54:	ldr	r3, [r6, #8]
   19e58:	ldr	r1, [pc, #612]	; 1a0c4 <argp_failure@@Base+0x1268>
   19e5c:	subs	r2, r3, #0
   19e60:	mov	r0, sl
   19e64:	beq	19e14 <argp_failure@@Base+0xfb8>
   19e68:	ldr	ip, [r6, #12]
   19e6c:	tst	ip, #1
   19e70:	ldrne	r1, [pc, #592]	; 1a0c8 <argp_failure@@Base+0x126c>
   19e74:	bl	1c7a0 <argp_error@@Base+0x2108>
   19e78:	b	19e14 <argp_failure@@Base+0xfb8>
   19e7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19e80:	sub	r1, fp, #76	; 0x4c
   19e84:	ldr	r0, [r3, #8]
   19e88:	bl	17d7c <_obstack_memory_used@@Base+0x2fc0>
   19e8c:	ldr	r2, [sl, #28]
   19e90:	ldr	r1, [sl, #32]
   19e94:	cmp	r2, r1
   19e98:	bcs	1a19c <argp_failure@@Base+0x1340>
   19e9c:	add	r1, r2, #1
   19ea0:	mov	r3, #45	; 0x2d
   19ea4:	str	r1, [sl, #28]
   19ea8:	strb	r3, [r2]
   19eac:	ldr	r2, [sl, #28]
   19eb0:	ldr	r1, [sl, #32]
   19eb4:	ldrb	r7, [r8]
   19eb8:	cmp	r2, r1
   19ebc:	bcs	1a180 <argp_failure@@Base+0x1324>
   19ec0:	add	r1, r2, #1
   19ec4:	str	r1, [sl, #28]
   19ec8:	strb	r7, [r2]
   19ecc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   19ed0:	cmp	r3, #0
   19ed4:	beq	1a134 <argp_failure@@Base+0x12d8>
   19ed8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19edc:	ldr	r2, [r3]
   19ee0:	cmp	r2, #0
   19ee4:	bne	1a134 <argp_failure@@Base+0x12d8>
   19ee8:	ldr	r2, [r6, #8]
   19eec:	cmp	r2, #0
   19ef0:	movne	r3, #1
   19ef4:	strne	r3, [fp, #-80]	; 0xffffffb0
   19ef8:	b	1933c <argp_failure@@Base+0x4e0>
   19efc:	ldr	r5, [r8, #20]
   19f00:	ldr	r9, [r6, #16]
   19f04:	cmp	r5, #0
   19f08:	beq	1a224 <argp_failure@@Base+0x13c8>
   19f0c:	ldr	r3, [r5, #20]
   19f10:	cmp	r3, #0
   19f14:	beq	1a224 <argp_failure@@Base+0x13c8>
   19f18:	ldr	r1, [fp, #-104]	; 0xffffff98
   19f1c:	mov	r0, r5
   19f20:	ldr	r4, [r6, #4]
   19f24:	bl	14768 <argp_parse@@Base+0xe20>
   19f28:	ldr	r3, [r5, #20]
   19f2c:	mov	r1, r9
   19f30:	mov	r2, r0
   19f34:	mov	r0, r4
   19f38:	blx	r3
   19f3c:	mov	r4, r0
   19f40:	cmp	r4, #0
   19f44:	beq	19ff8 <argp_failure@@Base+0x119c>
   19f48:	ldrb	r3, [r4]
   19f4c:	cmp	r3, #0
   19f50:	beq	19fe8 <argp_failure@@Base+0x118c>
   19f54:	ldr	r3, [sl, #28]
   19f58:	ldr	r2, [sl, #24]
   19f5c:	ldr	r1, [sl, #16]
   19f60:	sub	r2, r3, r2
   19f64:	cmp	r2, r1
   19f68:	bhi	1a2f0 <argp_failure@@Base+0x1494>
   19f6c:	ldr	r6, [sl, #20]
   19f70:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19f74:	bic	r6, r6, r6, asr #31
   19f78:	ldr	r5, [r2, #20]
   19f7c:	mov	r7, r5
   19f80:	str	r5, [sl, #4]
   19f84:	add	r2, r5, #3
   19f88:	cmp	r2, r6
   19f8c:	str	r7, [sl, #12]
   19f90:	bcs	1a264 <argp_failure@@Base+0x1408>
   19f94:	ldr	r2, [sl, #32]
   19f98:	cmp	r2, r3
   19f9c:	bls	1a46c <argp_failure@@Base+0x1610>
   19fa0:	add	r1, r3, #1
   19fa4:	mov	r2, #10
   19fa8:	str	r1, [sl, #28]
   19fac:	strb	r2, [r3]
   19fb0:	mov	r0, r4
   19fb4:	bl	11268 <strlen@plt>
   19fb8:	subs	r5, r0, #0
   19fbc:	beq	19fe8 <argp_failure@@Base+0x118c>
   19fc0:	ldr	r0, [sl, #28]
   19fc4:	ldr	r2, [sl, #32]
   19fc8:	add	r3, r0, r5
   19fcc:	cmp	r2, r3
   19fd0:	bcs	1a2d4 <argp_failure@@Base+0x1478>
   19fd4:	mov	r1, r5
   19fd8:	mov	r0, sl
   19fdc:	bl	1c6a0 <argp_error@@Base+0x2008>
   19fe0:	cmp	r0, #0
   19fe4:	bne	1a2d0 <argp_failure@@Base+0x1474>
   19fe8:	cmp	r9, r4
   19fec:	beq	19ff8 <argp_failure@@Base+0x119c>
   19ff0:	mov	r0, r4
   19ff4:	bl	148c4 <argp_parse@@Base+0xf7c>
   19ff8:	ldr	r3, [sl, #28]
   19ffc:	ldr	r2, [sl, #24]
   1a000:	ldr	r1, [sl, #16]
   1a004:	sub	r2, r3, r2
   1a008:	cmp	r2, r1
   1a00c:	bhi	1a248 <argp_failure@@Base+0x13ec>
   1a010:	ldr	r1, [sl, #32]
   1a014:	mov	r2, #0
   1a018:	cmp	r1, r3
   1a01c:	str	r2, [sl, #4]
   1a020:	bls	1a22c <argp_failure@@Base+0x13d0>
   1a024:	add	r1, r3, #1
   1a028:	mov	r2, #10
   1a02c:	str	r1, [sl, #28]
   1a030:	strb	r2, [r3]
   1a034:	str	r8, [fp, #-88]	; 0xffffffa8
   1a038:	b	194a0 <argp_failure@@Base+0x644>
   1a03c:	mov	r0, sl
   1a040:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a044:	b	1944c <argp_failure@@Base+0x5f0>
   1a048:	mov	r0, sl
   1a04c:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a050:	ldr	r2, [fp, #-120]	; 0xffffff88
   1a054:	ldr	r3, [sl, #28]
   1a058:	ldr	r1, [sl, #24]
   1a05c:	str	r2, [sl, #4]
   1a060:	ldr	r2, [sl, #16]
   1a064:	sub	r3, r3, r1
   1a068:	cmp	r3, r2
   1a06c:	bls	194c0 <argp_failure@@Base+0x664>
   1a070:	mov	r0, sl
   1a074:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a078:	b	194c0 <argp_failure@@Base+0x664>
   1a07c:	andeq	r3, r3, r4, ror r8
   1a080:	andeq	r3, r3, ip, lsr r9
   1a084:	andeq	pc, r1, r8, lsl #10
   1a088:	andeq	r0, r0, #5
   1a08c:	andeq	pc, r1, r4, asr #7
   1a090:	muleq	r1, r0, r1
   1a094:	andeq	pc, r1, r0, lsr #3
   1a098:	andeq	pc, r1, r0, lsl r2	; <UNPREDICTABLE>
   1a09c:	andeq	pc, r1, r4, lsl #8
   1a0a0:	ldrdeq	pc, [r1], -r4
   1a0a4:			; <UNDEFINED> instruction: 0x0001f4b0
   1a0a8:	andeq	lr, r1, r4, lsl sp
   1a0ac:	strdeq	lr, [r1], -r4
   1a0b0:	muleq	r1, r0, r4
   1a0b4:	andeq	pc, r1, r8, lsl #9
   1a0b8:	muleq	r1, r8, r4
   1a0bc:	andeq	pc, r1, r0, lsr #9
   1a0c0:	strdeq	pc, [r1], -r0
   1a0c4:	andeq	pc, r1, r0, lsl #10
   1a0c8:	strdeq	pc, [r1], -r8
   1a0cc:	andeq	pc, r1, r8, ror #9
   1a0d0:	andeq	lr, r1, r4, asr #25
   1a0d4:	andeq	r8, r1, ip, lsr #7
   1a0d8:	andeq	pc, r1, r4, lsl #10
   1a0dc:	andeq	pc, r1, ip, lsr #8
   1a0e0:	ldrdeq	pc, [r1], -r0
   1a0e4:	andeq	pc, r1, r0, lsl #9
   1a0e8:	andeq	pc, r1, ip, asr #8
   1a0ec:	andeq	pc, r1, r0, asr #3
   1a0f0:			; <UNDEFINED> instruction: 0x0001f1b0
   1a0f4:	strdeq	pc, [r1], -r0
   1a0f8:	andeq	pc, r1, r0, ror #3
   1a0fc:	andeq	pc, r1, r0, lsl #4
   1a100:	andeq	pc, r1, r0, asr r3	; <UNPREDICTABLE>
   1a104:	mov	r0, sl
   1a108:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a10c:	ldr	r0, [r6, #12]
   1a110:	and	r0, r0, #8
   1a114:	b	192c8 <argp_failure@@Base+0x46c>
   1a118:	mov	r0, sl
   1a11c:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a120:	ldr	ip, [sl, #28]
   1a124:	ldr	r2, [sl, #24]
   1a128:	ldr	lr, [sl, #16]
   1a12c:	sub	ip, ip, r2
   1a130:	b	19238 <argp_failure@@Base+0x3dc>
   1a134:	ldr	r2, [r6, #8]
   1a138:	cmp	r2, #0
   1a13c:	beq	1933c <argp_failure@@Base+0x4e0>
   1a140:	ldr	r1, [r6, #12]
   1a144:	mov	r0, sl
   1a148:	tst	r1, #1
   1a14c:	ldrne	r1, [pc, #-136]	; 1a0cc <argp_failure@@Base+0x1270>
   1a150:	ldreq	r1, [pc, #-136]	; 1a0d0 <argp_failure@@Base+0x1274>
   1a154:	bl	1c7a0 <argp_error@@Base+0x2108>
   1a158:	b	1933c <argp_failure@@Base+0x4e0>
   1a15c:	mov	r3, #1
   1a160:	str	r3, [fp, #-132]	; 0xffffff7c
   1a164:	b	192b8 <argp_failure@@Base+0x45c>
   1a168:	mov	r0, sl
   1a16c:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a170:	b	19df8 <argp_failure@@Base+0xf9c>
   1a174:	mov	r0, sl
   1a178:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a17c:	b	19380 <argp_failure@@Base+0x524>
   1a180:	mov	r1, #1
   1a184:	mov	r0, sl
   1a188:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a18c:	cmp	r0, #0
   1a190:	beq	19ecc <argp_failure@@Base+0x1070>
   1a194:	ldr	r2, [sl, #28]
   1a198:	b	19ec0 <argp_failure@@Base+0x1064>
   1a19c:	mov	r1, #1
   1a1a0:	mov	r0, sl
   1a1a4:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a1a8:	cmp	r0, #0
   1a1ac:	beq	19eac <argp_failure@@Base+0x1050>
   1a1b0:	ldr	r2, [sl, #28]
   1a1b4:	b	19e9c <argp_failure@@Base+0x1040>
   1a1b8:	mvn	r3, #0
   1a1bc:	str	r3, [r7, #12]
   1a1c0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a1c4:	ldr	r1, [r3, #4]
   1a1c8:	cmp	r1, #0
   1a1cc:	beq	190d8 <argp_failure@@Base+0x27c>
   1a1d0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a1d4:	mov	r3, #0
   1a1d8:	str	r3, [r2, #24]
   1a1dc:	add	r3, r3, #1
   1a1e0:	cmp	r3, r1
   1a1e4:	add	r2, r2, #28
   1a1e8:	bcc	1a1d8 <argp_failure@@Base+0x137c>
   1a1ec:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a1f0:	ldr	r3, [pc, #-292]	; 1a0d4 <argp_failure@@Base+0x1278>
   1a1f4:	mov	r2, #28
   1a1f8:	bl	11334 <qsort@plt>
   1a1fc:	b	190d8 <argp_failure@@Base+0x27c>
   1a200:	mvn	r3, #0
   1a204:	str	r3, [r7, #12]
   1a208:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a20c:	ldr	r3, [r3, #4]
   1a210:	cmp	r3, #0
   1a214:	str	r3, [fp, #-120]	; 0xffffff88
   1a218:	sub	r6, r3, #1
   1a21c:	bne	19a7c <argp_failure@@Base+0xc20>
   1a220:	b	190d8 <argp_failure@@Base+0x27c>
   1a224:	mov	r4, r9
   1a228:	b	19f40 <argp_failure@@Base+0x10e4>
   1a22c:	mov	r1, #1
   1a230:	mov	r0, sl
   1a234:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a238:	cmp	r0, #0
   1a23c:	beq	1a034 <argp_failure@@Base+0x11d8>
   1a240:	ldr	r3, [sl, #28]
   1a244:	b	1a024 <argp_failure@@Base+0x11c8>
   1a248:	mov	r0, sl
   1a24c:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a250:	ldr	r3, [sl, #28]
   1a254:	b	1a010 <argp_failure@@Base+0x11b4>
   1a258:	mov	r3, r8
   1a25c:	mov	r4, r5
   1a260:	b	196a0 <argp_failure@@Base+0x844>
   1a264:	cmp	r5, r6
   1a268:	bhi	1a3e4 <argp_failure@@Base+0x1588>
   1a26c:	ldr	r1, [sl, #32]
   1a270:	add	r2, r3, #3
   1a274:	cmp	r1, r2
   1a278:	bcs	1a294 <argp_failure@@Base+0x1438>
   1a27c:	mov	r1, #3
   1a280:	mov	r0, sl
   1a284:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a288:	cmp	r0, #0
   1a28c:	beq	19fb0 <argp_failure@@Base+0x1154>
   1a290:	ldr	r3, [sl, #28]
   1a294:	ldr	r2, [pc, #-452]	; 1a0d8 <argp_failure@@Base+0x127c>
   1a298:	ldrh	r1, [r2]
   1a29c:	ldrb	r2, [r2, #2]
   1a2a0:	strh	r1, [r3]
   1a2a4:	strb	r2, [r3, #2]
   1a2a8:	ldr	r3, [sl, #28]
   1a2ac:	add	r3, r3, #3
   1a2b0:	str	r3, [sl, #28]
   1a2b4:	b	19fb0 <argp_failure@@Base+0x1154>
   1a2b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a2bc:	ldr	r8, [r3]
   1a2c0:	str	r4, [fp, #-88]	; 0xffffffa8
   1a2c4:	str	r4, [fp, #-84]	; 0xffffffac
   1a2c8:	str	r4, [fp, #-80]	; 0xffffffb0
   1a2cc:	b	19218 <argp_failure@@Base+0x3bc>
   1a2d0:	ldr	r0, [sl, #28]
   1a2d4:	mov	r2, r5
   1a2d8:	mov	r1, r4
   1a2dc:	bl	1116c <memcpy@plt>
   1a2e0:	ldr	r3, [sl, #28]
   1a2e4:	add	r5, r3, r5
   1a2e8:	str	r5, [sl, #28]
   1a2ec:	b	19fe8 <argp_failure@@Base+0x118c>
   1a2f0:	mov	r0, sl
   1a2f4:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a2f8:	ldr	r3, [sl, #28]
   1a2fc:	ldr	r2, [sl, #24]
   1a300:	ldr	r1, [sl, #16]
   1a304:	ldr	r6, [sl, #20]
   1a308:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1a30c:	sub	r2, r3, r2
   1a310:	cmp	r2, r1
   1a314:	bic	r6, r6, r6, asr #31
   1a318:	ldr	r5, [r7, #20]
   1a31c:	bls	19f7c <argp_failure@@Base+0x1120>
   1a320:	mov	r0, sl
   1a324:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a328:	ldr	r3, [sl, #28]
   1a32c:	ldr	r2, [sl, #24]
   1a330:	ldr	r1, [sl, #16]
   1a334:	sub	r2, r3, r2
   1a338:	str	r5, [sl, #4]
   1a33c:	mov	r5, r7
   1a340:	ldr	r7, [r7, #20]
   1a344:	cmp	r2, r1
   1a348:	movls	r5, r7
   1a34c:	bls	19f84 <argp_failure@@Base+0x1128>
   1a350:	mov	r0, sl
   1a354:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a358:	ldr	r5, [r5, #20]
   1a35c:	ldr	r3, [sl, #28]
   1a360:	b	19f84 <argp_failure@@Base+0x1128>
   1a364:	str	r5, [sp]
   1a368:	ldr	r3, [pc, #-660]	; 1a0dc <argp_failure@@Base+0x1280>
   1a36c:	mov	r1, r2
   1a370:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a374:	bl	18e5c <argp_failure@@Base>
   1a378:	b	197bc <argp_failure@@Base+0x960>
   1a37c:	ldr	r3, [pc, #-676]	; 1a0e0 <argp_failure@@Base+0x1284>
   1a380:	ldr	r1, [pc, #-676]	; 1a0e4 <argp_failure@@Base+0x1288>
   1a384:	mov	r2, #0
   1a388:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a38c:	stm	sp, {r1, r3}
   1a390:	mov	r1, r2
   1a394:	ldr	r3, [pc, #-692]	; 1a0e8 <argp_failure@@Base+0x128c>
   1a398:	bl	18e5c <argp_failure@@Base>
   1a39c:	b	190a8 <argp_failure@@Base+0x24c>
   1a3a0:	ldr	r3, [pc, #-700]	; 1a0ec <argp_failure@@Base+0x1290>
   1a3a4:	b	1a380 <argp_failure@@Base+0x1524>
   1a3a8:	mov	r1, #1
   1a3ac:	mov	r0, sl
   1a3b0:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a3b4:	cmp	r0, #0
   1a3b8:	beq	19148 <argp_failure@@Base+0x2ec>
   1a3bc:	ldr	r3, [sl, #28]
   1a3c0:	b	19138 <argp_failure@@Base+0x2dc>
   1a3c4:	ldr	r0, [r6, #16]
   1a3c8:	sub	r2, fp, #76	; 0x4c
   1a3cc:	ldr	r1, [r8, #20]
   1a3d0:	bl	17abc <_obstack_memory_used@@Base+0x2d00>
   1a3d4:	b	1a034 <argp_failure@@Base+0x11d8>
   1a3d8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a3dc:	bl	111b4 <funlockfile@plt>
   1a3e0:	b	191a8 <argp_failure@@Base+0x34c>
   1a3e4:	ldr	r2, [sl, #24]
   1a3e8:	ldr	r1, [sl, #16]
   1a3ec:	sub	r3, r3, r2
   1a3f0:	cmp	r3, r1
   1a3f4:	bhi	1a56c <argp_failure@@Base+0x1710>
   1a3f8:	ldr	r3, [sl, #20]
   1a3fc:	mov	r6, #32
   1a400:	cmp	r3, #0
   1a404:	subge	r5, r5, r3
   1a408:	mov	r7, #1
   1a40c:	cmp	r5, #0
   1a410:	sub	r5, r5, #1
   1a414:	ble	19fb0 <argp_failure@@Base+0x1154>
   1a418:	ldr	r3, [sl, #28]
   1a41c:	ldr	r2, [sl, #32]
   1a420:	cmp	r3, r2
   1a424:	bcs	1a450 <argp_failure@@Base+0x15f4>
   1a428:	add	r2, r3, #1
   1a42c:	cmp	r5, #0
   1a430:	str	r2, [sl, #28]
   1a434:	sub	r5, r5, #1
   1a438:	strb	r6, [r3]
   1a43c:	ble	19fb0 <argp_failure@@Base+0x1154>
   1a440:	ldr	r3, [sl, #28]
   1a444:	ldr	r2, [sl, #32]
   1a448:	cmp	r3, r2
   1a44c:	bcc	1a428 <argp_failure@@Base+0x15cc>
   1a450:	mov	r1, r7
   1a454:	mov	r0, sl
   1a458:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a45c:	cmp	r0, #0
   1a460:	beq	1a40c <argp_failure@@Base+0x15b0>
   1a464:	ldr	r3, [sl, #28]
   1a468:	b	1a428 <argp_failure@@Base+0x15cc>
   1a46c:	mov	r1, #1
   1a470:	mov	r0, sl
   1a474:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a478:	cmp	r0, #0
   1a47c:	beq	19fb0 <argp_failure@@Base+0x1154>
   1a480:	ldr	r3, [sl, #28]
   1a484:	b	19fa0 <argp_failure@@Base+0x1144>
   1a488:	ldr	r4, [pc, #-912]	; 1a100 <argp_failure@@Base+0x12a4>
   1a48c:	ldr	r9, [fp, #-112]	; 0xffffff90
   1a490:	ldr	r3, [sl, #28]
   1a494:	ldr	r2, [sl, #32]
   1a498:	cmp	r3, r2
   1a49c:	bcs	1a550 <argp_failure@@Base+0x16f4>
   1a4a0:	add	r1, r3, #1
   1a4a4:	mov	r2, #10
   1a4a8:	str	r1, [sl, #28]
   1a4ac:	strb	r2, [r3]
   1a4b0:	mov	r0, r4
   1a4b4:	bl	11268 <strlen@plt>
   1a4b8:	subs	r6, r0, #0
   1a4bc:	beq	1a540 <argp_failure@@Base+0x16e4>
   1a4c0:	ldr	r0, [sl, #28]
   1a4c4:	ldr	r2, [sl, #32]
   1a4c8:	add	r3, r0, r6
   1a4cc:	cmp	r2, r3
   1a4d0:	bcs	1a4ec <argp_failure@@Base+0x1690>
   1a4d4:	mov	r1, r6
   1a4d8:	mov	r0, sl
   1a4dc:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a4e0:	cmp	r0, #0
   1a4e4:	beq	1a540 <argp_failure@@Base+0x16e4>
   1a4e8:	ldr	r0, [sl, #28]
   1a4ec:	mov	r2, r6
   1a4f0:	mov	r1, r4
   1a4f4:	bl	1116c <memcpy@plt>
   1a4f8:	ldr	r3, [sl, #28]
   1a4fc:	add	r3, r3, r6
   1a500:	str	r3, [sl, #28]
   1a504:	ldr	r2, [sl, #32]
   1a508:	cmp	r2, r3
   1a50c:	bls	1a59c <argp_failure@@Base+0x1740>
   1a510:	add	r1, r3, #1
   1a514:	mov	r2, #10
   1a518:	str	r1, [sl, #28]
   1a51c:	strb	r2, [r3]
   1a520:	b	19558 <argp_failure@@Base+0x6fc>
   1a524:	mov	r1, #1
   1a528:	mov	r0, sl
   1a52c:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a530:	cmp	r0, #0
   1a534:	beq	191ec <argp_failure@@Base+0x390>
   1a538:	ldr	r3, [sl, #28]
   1a53c:	b	191dc <argp_failure@@Base+0x380>
   1a540:	ldr	r3, [sl, #28]
   1a544:	b	1a504 <argp_failure@@Base+0x16a8>
   1a548:	ldr	r3, [pc, #-1120]	; 1a0f0 <argp_failure@@Base+0x1294>
   1a54c:	b	1a380 <argp_failure@@Base+0x1524>
   1a550:	mov	r1, #1
   1a554:	mov	r0, sl
   1a558:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a55c:	cmp	r0, #0
   1a560:	beq	1a4b0 <argp_failure@@Base+0x1654>
   1a564:	ldr	r3, [sl, #28]
   1a568:	b	1a4a0 <argp_failure@@Base+0x1644>
   1a56c:	mov	r0, sl
   1a570:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1a574:	b	1a3f8 <argp_failure@@Base+0x159c>
   1a578:	ldr	r3, [pc, #-1164]	; 1a0f4 <argp_failure@@Base+0x1298>
   1a57c:	b	1a380 <argp_failure@@Base+0x1524>
   1a580:	ldr	r3, [pc, #-1168]	; 1a0f8 <argp_failure@@Base+0x129c>
   1a584:	b	1a380 <argp_failure@@Base+0x1524>
   1a588:	mov	r9, r1
   1a58c:	ldr	r4, [pc, #-1172]	; 1a100 <argp_failure@@Base+0x12a4>
   1a590:	b	1a490 <argp_failure@@Base+0x1634>
   1a594:	ldr	r3, [pc, #-1184]	; 1a0fc <argp_failure@@Base+0x12a0>
   1a598:	b	1a380 <argp_failure@@Base+0x1524>
   1a59c:	mov	r1, #1
   1a5a0:	mov	r0, sl
   1a5a4:	bl	1c6a0 <argp_error@@Base+0x2008>
   1a5a8:	cmp	r0, #0
   1a5ac:	beq	19558 <argp_failure@@Base+0x6fc>
   1a5b0:	ldr	r3, [sl, #28]
   1a5b4:	b	1a510 <argp_failure@@Base+0x16b4>
   1a5b8:	ldr	r9, [fp, #-112]	; 0xffffff90
   1a5bc:	ldr	r4, [pc, #-1220]	; 1a100 <argp_failure@@Base+0x12a4>
   1a5c0:	b	1a490 <argp_failure@@Base+0x1634>

0001a5c4 <argp_help@@Base>:
   1a5c4:	push	{lr}		; (str lr, [sp, #-4]!)
   1a5c8:	sub	sp, sp, #12
   1a5cc:	str	r3, [sp]
   1a5d0:	mov	r3, r2
   1a5d4:	mov	r2, r1
   1a5d8:	mov	r1, #0
   1a5dc:	bl	19064 <argp_failure@@Base+0x208>
   1a5e0:	add	sp, sp, #12
   1a5e4:	pop	{pc}		; (ldr pc, [sp], #4)

0001a5e8 <argp_state_help@@Base>:
   1a5e8:	push	{r4, r5, lr}
   1a5ec:	subs	r4, r0, #0
   1a5f0:	sub	sp, sp, #12
   1a5f4:	mov	r5, r2
   1a5f8:	beq	1a658 <argp_state_help@@Base+0x70>
   1a5fc:	ldr	r3, [r4, #16]
   1a600:	tst	r3, #2
   1a604:	bne	1a650 <argp_state_help@@Base+0x68>
   1a608:	cmp	r1, #0
   1a60c:	beq	1a650 <argp_state_help@@Base+0x68>
   1a610:	tst	r3, #64	; 0x40
   1a614:	ldr	r3, [r4, #40]	; 0x28
   1a618:	orrne	r5, r5, #128	; 0x80
   1a61c:	ldr	r0, [r4]
   1a620:	mov	r2, r1
   1a624:	str	r3, [sp]
   1a628:	mov	r1, r4
   1a62c:	mov	r3, r5
   1a630:	bl	19064 <argp_failure@@Base+0x208>
   1a634:	ldr	r3, [r4, #16]
   1a638:	tst	r3, #32
   1a63c:	bne	1a650 <argp_state_help@@Base+0x68>
   1a640:	ands	r0, r5, #256	; 0x100
   1a644:	bne	1a684 <argp_state_help@@Base+0x9c>
   1a648:	tst	r5, #512	; 0x200
   1a64c:	bne	1a680 <argp_state_help@@Base+0x98>
   1a650:	add	sp, sp, #12
   1a654:	pop	{r4, r5, pc}
   1a658:	cmp	r1, #0
   1a65c:	beq	1a650 <argp_state_help@@Base+0x68>
   1a660:	ldr	r3, [pc, #40]	; 1a690 <argp_state_help@@Base+0xa8>
   1a664:	mov	r2, r1
   1a668:	mov	r1, r4
   1a66c:	ldr	ip, [r3]
   1a670:	mov	r3, r5
   1a674:	str	ip, [sp]
   1a678:	bl	19064 <argp_failure@@Base+0x208>
   1a67c:	b	1a640 <argp_state_help@@Base+0x58>
   1a680:	bl	1125c <exit@plt>
   1a684:	ldr	r3, [pc, #8]	; 1a694 <argp_state_help@@Base+0xac>
   1a688:	ldr	r0, [r3]
   1a68c:	bl	1125c <exit@plt>
   1a690:			; <UNDEFINED> instruction: 0x000338b0
   1a694:	andeq	r3, r3, ip, lsr #17

0001a698 <argp_error@@Base>:
   1a698:	push	{r1, r2, r3}
   1a69c:	push	{r4, r5, lr}
   1a6a0:	subs	r5, r0, #0
   1a6a4:	sub	sp, sp, #16
   1a6a8:	beq	1a7b8 <argp_error@@Base+0x120>
   1a6ac:	ldr	r3, [r5, #16]
   1a6b0:	tst	r3, #2
   1a6b4:	bne	1a7a8 <argp_error@@Base+0x110>
   1a6b8:	ldr	r4, [r5, #44]	; 0x2c
   1a6bc:	cmp	r4, #0
   1a6c0:	beq	1a7a8 <argp_error@@Base+0x110>
   1a6c4:	mov	r0, r4
   1a6c8:	bl	1131c <flockfile@plt>
   1a6cc:	ldr	r0, [r5, #40]	; 0x28
   1a6d0:	add	r3, sp, #32
   1a6d4:	str	r3, [sp, #12]
   1a6d8:	mov	r1, r4
   1a6dc:	bl	110d0 <fputs_unlocked@plt>
   1a6e0:	ldr	r3, [r4, #20]
   1a6e4:	ldr	r2, [r4, #24]
   1a6e8:	cmp	r3, r2
   1a6ec:	addcc	r1, r3, #1
   1a6f0:	movcc	r2, #58	; 0x3a
   1a6f4:	strcc	r1, [r4, #20]
   1a6f8:	strbcc	r2, [r3]
   1a6fc:	bcs	1a7e4 <argp_error@@Base+0x14c>
   1a700:	ldr	r3, [r4, #20]
   1a704:	ldr	r2, [r4, #24]
   1a708:	cmp	r3, r2
   1a70c:	addcc	r1, r3, #1
   1a710:	movcc	r2, #32
   1a714:	strcc	r1, [r4, #20]
   1a718:	strbcc	r2, [r3]
   1a71c:	bcs	1a804 <argp_error@@Base+0x16c>
   1a720:	ldr	r1, [sp, #28]
   1a724:	ldr	r2, [sp, #12]
   1a728:	mov	r0, r4
   1a72c:	bl	112ec <vfprintf@plt>
   1a730:	ldr	r3, [r4, #20]
   1a734:	ldr	r2, [r4, #24]
   1a738:	cmp	r3, r2
   1a73c:	addcc	r1, r3, #1
   1a740:	movcc	r2, #10
   1a744:	strcc	r1, [r4, #20]
   1a748:	strbcc	r2, [r3]
   1a74c:	bcs	1a7f4 <argp_error@@Base+0x15c>
   1a750:	cmp	r5, #0
   1a754:	beq	1a814 <argp_error@@Base+0x17c>
   1a758:	ldr	r3, [r5, #16]
   1a75c:	tst	r3, #2
   1a760:	bne	1a7a0 <argp_error@@Base+0x108>
   1a764:	ldr	r2, [r5, #40]	; 0x28
   1a768:	tst	r3, #64	; 0x40
   1a76c:	moveq	r3, #260	; 0x104
   1a770:	movne	r3, #388	; 0x184
   1a774:	ldr	r0, [r5]
   1a778:	mov	r1, r5
   1a77c:	str	r2, [sp]
   1a780:	mov	r2, r4
   1a784:	bl	19064 <argp_failure@@Base+0x208>
   1a788:	ldr	r3, [r5, #16]
   1a78c:	tst	r3, #32
   1a790:	bne	1a7a0 <argp_error@@Base+0x108>
   1a794:	ldr	r3, [pc, #156]	; 1a838 <argp_error@@Base+0x1a0>
   1a798:	ldr	r0, [r3]
   1a79c:	bl	1125c <exit@plt>
   1a7a0:	mov	r0, r4
   1a7a4:	bl	111b4 <funlockfile@plt>
   1a7a8:	add	sp, sp, #16
   1a7ac:	pop	{r4, r5, lr}
   1a7b0:	add	sp, sp, #12
   1a7b4:	bx	lr
   1a7b8:	ldr	r3, [pc, #124]	; 1a83c <argp_error@@Base+0x1a4>
   1a7bc:	ldr	r4, [r3]
   1a7c0:	cmp	r4, #0
   1a7c4:	beq	1a7a8 <argp_error@@Base+0x110>
   1a7c8:	mov	r0, r4
   1a7cc:	bl	1131c <flockfile@plt>
   1a7d0:	ldr	r2, [pc, #104]	; 1a840 <argp_error@@Base+0x1a8>
   1a7d4:	add	r3, sp, #32
   1a7d8:	str	r3, [sp, #12]
   1a7dc:	ldr	r0, [r2]
   1a7e0:	b	1a6d8 <argp_error@@Base+0x40>
   1a7e4:	mov	r1, #58	; 0x3a
   1a7e8:	mov	r0, r4
   1a7ec:	bl	112d4 <__overflow@plt>
   1a7f0:	b	1a700 <argp_error@@Base+0x68>
   1a7f4:	mov	r1, #10
   1a7f8:	mov	r0, r4
   1a7fc:	bl	112d4 <__overflow@plt>
   1a800:	b	1a750 <argp_error@@Base+0xb8>
   1a804:	mov	r1, #32
   1a808:	mov	r0, r4
   1a80c:	bl	112d4 <__overflow@plt>
   1a810:	b	1a720 <argp_error@@Base+0x88>
   1a814:	ldr	r1, [pc, #36]	; 1a840 <argp_error@@Base+0x1a8>
   1a818:	mov	r2, r4
   1a81c:	mov	r3, #260	; 0x104
   1a820:	ldr	r0, [r1]
   1a824:	mov	r1, r5
   1a828:	str	r0, [sp]
   1a82c:	mov	r0, r5
   1a830:	bl	19064 <argp_failure@@Base+0x208>
   1a834:	b	1a794 <argp_error@@Base+0xfc>
   1a838:	andeq	r3, r3, ip, lsr #17
   1a83c:			; <UNDEFINED> instruction: 0x000338b8
   1a840:			; <UNDEFINED> instruction: 0x000338b0
   1a844:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a848:	ldr	r4, [r1, #32]
   1a84c:	ldr	r8, [r1, #28]
   1a850:	ldr	r7, [r1]
   1a854:	add	r6, r0, r4, lsl #2
   1a858:	mov	r2, r8
   1a85c:	mov	r5, r7
   1a860:	cmp	r5, r4
   1a864:	movle	r3, #0
   1a868:	movgt	r3, #1
   1a86c:	cmp	r2, r4
   1a870:	movge	r3, #0
   1a874:	cmp	r3, #0
   1a878:	beq	1a8ec <argp_error@@Base+0x254>
   1a87c:	sub	r3, r5, r4
   1a880:	sub	sl, r4, r2
   1a884:	cmp	r3, sl
   1a888:	ble	1a8bc <argp_error@@Base+0x224>
   1a88c:	sub	r5, r5, sl
   1a890:	add	sl, sl, r2
   1a894:	add	ip, r0, r5, lsl #2
   1a898:	add	sl, r0, sl, lsl #2
   1a89c:	add	r3, r0, r2, lsl #2
   1a8a0:	ldr	r9, [ip]
   1a8a4:	ldr	lr, [r3]
   1a8a8:	str	r9, [r3], #4
   1a8ac:	cmp	r3, sl
   1a8b0:	str	lr, [ip], #4
   1a8b4:	bne	1a8a0 <argp_error@@Base+0x208>
   1a8b8:	b	1a860 <argp_error@@Base+0x1c8>
   1a8bc:	add	sl, r3, r2
   1a8c0:	add	r3, r0, r2, lsl #2
   1a8c4:	add	r9, r0, sl, lsl #2
   1a8c8:	mov	r2, r6
   1a8cc:	ldr	lr, [r2]
   1a8d0:	ldr	ip, [r3]
   1a8d4:	str	lr, [r3], #4
   1a8d8:	cmp	r9, r3
   1a8dc:	str	ip, [r2], #4
   1a8e0:	bne	1a8cc <argp_error@@Base+0x234>
   1a8e4:	mov	r2, sl
   1a8e8:	b	1a860 <argp_error@@Base+0x1c8>
   1a8ec:	sub	r4, r7, r4
   1a8f0:	add	r8, r4, r8
   1a8f4:	str	r8, [r1, #28]
   1a8f8:	str	r7, [r1, #32]
   1a8fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a904:	sub	sp, sp, #52	; 0x34
   1a908:	str	r1, [sp, #24]
   1a90c:	ldr	r1, [sp, #96]	; 0x60
   1a910:	str	r0, [sp, #28]
   1a914:	str	r2, [sp, #32]
   1a918:	ldr	r8, [r1, #20]
   1a91c:	str	r3, [sp, #12]
   1a920:	mov	r7, r8
   1a924:	ldrb	r5, [r8]
   1a928:	cmp	r5, #61	; 0x3d
   1a92c:	cmpne	r5, #0
   1a930:	movne	r5, #1
   1a934:	moveq	r5, #0
   1a938:	beq	1a954 <argp_error@@Base+0x2bc>
   1a93c:	ldrb	r3, [r7, #1]!
   1a940:	cmp	r3, #0
   1a944:	cmpne	r3, #61	; 0x3d
   1a948:	bne	1a93c <argp_error@@Base+0x2a4>
   1a94c:	ldr	r3, [sp, #12]
   1a950:	sub	r5, r7, r8
   1a954:	ldr	sl, [r3]
   1a958:	cmp	sl, #0
   1a95c:	beq	1ad34 <argp_error@@Base+0x69c>
   1a960:	mov	fp, r3
   1a964:	mov	r4, sl
   1a968:	mov	r6, #0
   1a96c:	str	r3, [sp, #20]
   1a970:	mov	r2, r5
   1a974:	mov	r1, r8
   1a978:	mov	r0, r4
   1a97c:	bl	11388 <strncmp@plt>
   1a980:	mov	r9, fp
   1a984:	cmp	r0, #0
   1a988:	mov	r0, r4
   1a98c:	bne	1a99c <argp_error@@Base+0x304>
   1a990:	bl	11268 <strlen@plt>
   1a994:	cmp	r0, r5
   1a998:	beq	1aa5c <argp_error@@Base+0x3c4>
   1a99c:	ldr	r4, [fp, #16]!
   1a9a0:	add	r6, r6, #1
   1a9a4:	cmp	r4, #0
   1a9a8:	bne	1a970 <argp_error@@Base+0x2d8>
   1a9ac:	ldr	r3, [sp, #100]	; 0x64
   1a9b0:	cmp	r3, #0
   1a9b4:	ldr	r3, [sp, #92]	; 0x5c
   1a9b8:	beq	1ab00 <argp_error@@Base+0x468>
   1a9bc:	cmp	r3, #0
   1a9c0:	bne	1ac18 <argp_error@@Base+0x580>
   1a9c4:	mov	fp, r3
   1a9c8:	mov	r0, sl
   1a9cc:	ldr	r4, [sp, #12]
   1a9d0:	ldr	sl, [sp, #96]	; 0x60
   1a9d4:	mov	r9, fp
   1a9d8:	mov	r1, r8
   1a9dc:	str	r3, [sp, #16]
   1a9e0:	str	r3, [sp, #44]	; 0x2c
   1a9e4:	mvn	r3, #0
   1a9e8:	str	r3, [sp, #40]	; 0x28
   1a9ec:	str	fp, [sp, #36]	; 0x24
   1a9f0:	mov	r2, r5
   1a9f4:	bl	11388 <strncmp@plt>
   1a9f8:	cmp	r0, #0
   1a9fc:	bne	1aa38 <argp_error@@Base+0x3a0>
   1aa00:	cmp	r9, #0
   1aa04:	beq	1af6c <argp_error@@Base+0x8d4>
   1aa08:	ldr	r2, [r9, #4]
   1aa0c:	ldr	r3, [r4, #4]
   1aa10:	cmp	r2, r3
   1aa14:	beq	1afc8 <argp_error@@Base+0x930>
   1aa18:	ldr	r3, [sp, #16]
   1aa1c:	cmp	r3, #0
   1aa20:	bne	1aa38 <argp_error@@Base+0x3a0>
   1aa24:	ldr	r3, [sp, #36]	; 0x24
   1aa28:	cmp	r3, #0
   1aa2c:	beq	1aea4 <argp_error@@Base+0x80c>
   1aa30:	mov	r2, #1
   1aa34:	strb	r2, [r3, fp]
   1aa38:	ldr	r0, [r4, #16]!
   1aa3c:	add	fp, fp, #1
   1aa40:	cmp	r0, #0
   1aa44:	beq	1ab74 <argp_error@@Base+0x4dc>
   1aa48:	ldr	r1, [sl, #20]
   1aa4c:	b	1a9f0 <argp_error@@Base+0x358>
   1aa50:	cmp	r9, #0
   1aa54:	beq	1ad34 <argp_error@@Base+0x69c>
   1aa58:	ldr	r6, [sp, #40]	; 0x28
   1aa5c:	ldr	r3, [sp, #96]	; 0x60
   1aa60:	ldr	r0, [sp, #96]	; 0x60
   1aa64:	mov	r1, #0
   1aa68:	ldr	r2, [r3]
   1aa6c:	str	r1, [r0, #20]
   1aa70:	add	r3, r2, #1
   1aa74:	str	r3, [r0]
   1aa78:	ldrb	r1, [r7]
   1aa7c:	cmp	r1, #0
   1aa80:	bne	1aac0 <argp_error@@Base+0x428>
   1aa84:	ldr	r1, [r9, #4]
   1aa88:	cmp	r1, #1
   1aa8c:	beq	1ada4 <argp_error@@Base+0x70c>
   1aa90:	ldr	r3, [sp, #88]	; 0x58
   1aa94:	ldr	r2, [r9, #8]
   1aa98:	cmp	r3, #0
   1aa9c:	strne	r6, [r3]
   1aaa0:	cmp	r2, #0
   1aaa4:	movne	r3, #0
   1aaa8:	ldreq	r3, [r9, #12]
   1aaac:	ldrne	r1, [r9, #12]
   1aab0:	strne	r1, [r2]
   1aab4:	mov	r0, r3
   1aab8:	add	sp, sp, #52	; 0x34
   1aabc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aac0:	ldr	r3, [r9, #4]
   1aac4:	cmp	r3, #0
   1aac8:	movne	r3, r0
   1aacc:	addne	r7, r7, #1
   1aad0:	strne	r7, [r3, #12]
   1aad4:	bne	1aa90 <argp_error@@Base+0x3f8>
   1aad8:	ldr	r3, [sp, #100]	; 0x64
   1aadc:	cmp	r3, #0
   1aae0:	bne	1acfc <argp_error@@Base+0x664>
   1aae4:	ldr	r1, [sp, #96]	; 0x60
   1aae8:	ldr	r2, [r9, #12]
   1aaec:	mov	r3, #63	; 0x3f
   1aaf0:	str	r2, [r1, #8]
   1aaf4:	mov	r0, r3
   1aaf8:	add	sp, sp, #52	; 0x34
   1aafc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab00:	cmp	r3, #0
   1ab04:	bne	1ac94 <argp_error@@Base+0x5fc>
   1ab08:	mov	fp, r3
   1ab0c:	ldr	r4, [sp, #12]
   1ab10:	mov	r9, fp
   1ab14:	mov	r0, sl
   1ab18:	str	r3, [sp, #16]
   1ab1c:	mvn	r3, #0
   1ab20:	str	r3, [sp, #40]	; 0x28
   1ab24:	mov	r2, r5
   1ab28:	mov	r1, r8
   1ab2c:	bl	11388 <strncmp@plt>
   1ab30:	cmp	r0, #0
   1ab34:	bne	1ab58 <argp_error@@Base+0x4c0>
   1ab38:	cmp	r9, #0
   1ab3c:	beq	1af60 <argp_error@@Base+0x8c8>
   1ab40:	ldr	r2, [r9, #4]
   1ab44:	ldr	r3, [r4, #4]
   1ab48:	cmp	r2, r3
   1ab4c:	beq	1af9c <argp_error@@Base+0x904>
   1ab50:	mov	r3, #1
   1ab54:	str	r3, [sp, #16]
   1ab58:	ldr	r0, [r4, #16]!
   1ab5c:	add	fp, fp, #1
   1ab60:	cmp	r0, #0
   1ab64:	bne	1ab24 <argp_error@@Base+0x48c>
   1ab68:	ldr	r3, [sp, #92]	; 0x5c
   1ab6c:	str	r0, [sp, #36]	; 0x24
   1ab70:	str	r3, [sp, #44]	; 0x2c
   1ab74:	ldr	r2, [sp, #36]	; 0x24
   1ab78:	ldr	r3, [sp, #16]
   1ab7c:	cmp	r3, #0
   1ab80:	cmpeq	r2, #0
   1ab84:	beq	1aa50 <argp_error@@Base+0x3b8>
   1ab88:	ldr	r2, [sp, #100]	; 0x64
   1ab8c:	cmp	r2, #0
   1ab90:	beq	1adf4 <argp_error@@Base+0x75c>
   1ab94:	cmp	r3, #0
   1ab98:	bne	1adcc <argp_error@@Base+0x734>
   1ab9c:	ldr	r5, [pc, #1108]	; 1aff8 <argp_error@@Base+0x960>
   1aba0:	ldr	r3, [sp, #36]	; 0x24
   1aba4:	ldr	r7, [pc, #1104]	; 1affc <argp_error@@Base+0x964>
   1aba8:	ldr	r0, [r5]
   1abac:	add	r6, r3, r6
   1abb0:	mov	r4, r3
   1abb4:	bl	1131c <flockfile@plt>
   1abb8:	ldr	r3, [sp, #24]
   1abbc:	ldr	r0, [r5]
   1abc0:	ldr	r1, [pc, #1080]	; 1b000 <argp_error@@Base+0x968>
   1abc4:	ldr	r2, [r3]
   1abc8:	ldr	r3, [sp, #96]	; 0x60
   1abcc:	ldr	r3, [r3, #20]
   1abd0:	str	r3, [sp]
   1abd4:	ldr	r3, [sp, #104]	; 0x68
   1abd8:	bl	11280 <fprintf@plt>
   1abdc:	ldr	r8, [sp, #16]
   1abe0:	ldr	r9, [sp, #12]
   1abe4:	b	1abf4 <argp_error@@Base+0x55c>
   1abe8:	cmp	r4, r6
   1abec:	add	r8, r8, #1
   1abf0:	beq	1af84 <argp_error@@Base+0x8ec>
   1abf4:	ldrb	r3, [r4], #1
   1abf8:	cmp	r3, #0
   1abfc:	beq	1abe8 <argp_error@@Base+0x550>
   1ac00:	ldr	r3, [r9, r8, lsl #4]
   1ac04:	ldr	r2, [sp, #104]	; 0x68
   1ac08:	mov	r1, r7
   1ac0c:	ldr	r0, [r5]
   1ac10:	bl	11280 <fprintf@plt>
   1ac14:	b	1abe8 <argp_error@@Base+0x550>
   1ac18:	mov	r9, r4
   1ac1c:	str	r4, [sp, #16]
   1ac20:	str	r4, [sp, #44]	; 0x2c
   1ac24:	str	r4, [sp, #36]	; 0x24
   1ac28:	mov	r1, r8
   1ac2c:	mov	r0, sl
   1ac30:	mov	r8, r4
   1ac34:	ldr	sl, [sp, #20]
   1ac38:	ldr	r4, [sp, #96]	; 0x60
   1ac3c:	mov	fp, #1
   1ac40:	mvn	r3, #0
   1ac44:	str	r3, [sp, #40]	; 0x28
   1ac48:	mov	r2, r5
   1ac4c:	bl	11388 <strncmp@plt>
   1ac50:	cmp	r0, #0
   1ac54:	bne	1ac7c <argp_error@@Base+0x5e4>
   1ac58:	cmp	r9, #0
   1ac5c:	beq	1af78 <argp_error@@Base+0x8e0>
   1ac60:	ldr	r3, [sp, #16]
   1ac64:	cmp	r3, #0
   1ac68:	bne	1ac7c <argp_error@@Base+0x5e4>
   1ac6c:	ldr	r3, [sp, #36]	; 0x24
   1ac70:	cmp	r3, #0
   1ac74:	beq	1aee8 <argp_error@@Base+0x850>
   1ac78:	strb	fp, [r3, r8]
   1ac7c:	ldr	r0, [sl, #16]!
   1ac80:	add	r8, r8, #1
   1ac84:	cmp	r0, #0
   1ac88:	beq	1ab74 <argp_error@@Base+0x4dc>
   1ac8c:	ldr	r1, [r4, #20]
   1ac90:	b	1ac48 <argp_error@@Base+0x5b0>
   1ac94:	ldr	r3, [sp, #100]	; 0x64
   1ac98:	mov	r0, sl
   1ac9c:	mov	r4, r3
   1aca0:	ldr	sl, [sp, #20]
   1aca4:	mov	r9, r4
   1aca8:	str	r3, [sp, #16]
   1acac:	mvn	r3, #0
   1acb0:	str	r3, [sp, #40]	; 0x28
   1acb4:	mov	r2, r5
   1acb8:	mov	r1, r8
   1acbc:	bl	11388 <strncmp@plt>
   1acc0:	cmp	r0, #0
   1acc4:	bne	1acdc <argp_error@@Base+0x644>
   1acc8:	cmp	r9, #0
   1accc:	moveq	r9, sl
   1acd0:	movne	r3, #1
   1acd4:	strne	r3, [sp, #16]
   1acd8:	streq	r4, [sp, #40]	; 0x28
   1acdc:	ldr	r0, [sl, #16]!
   1ace0:	add	r4, r4, #1
   1ace4:	cmp	r0, #0
   1ace8:	bne	1acb4 <argp_error@@Base+0x61c>
   1acec:	ldr	r3, [sp, #100]	; 0x64
   1acf0:	str	r0, [sp, #36]	; 0x24
   1acf4:	str	r3, [sp, #44]	; 0x2c
   1acf8:	b	1ab74 <argp_error@@Base+0x4dc>
   1acfc:	ldr	r3, [sp, #24]
   1ad00:	ldr	r1, [pc, #752]	; 1aff8 <argp_error@@Base+0x960>
   1ad04:	ldr	r2, [r3]
   1ad08:	ldr	r3, [r9]
   1ad0c:	ldr	r0, [r1]
   1ad10:	str	r3, [sp]
   1ad14:	ldr	r1, [pc, #744]	; 1b004 <argp_error@@Base+0x96c>
   1ad18:	ldr	r3, [sp, #104]	; 0x68
   1ad1c:	bl	11280 <fprintf@plt>
   1ad20:	ldr	r1, [sp, #96]	; 0x60
   1ad24:	ldr	r2, [r9, #12]
   1ad28:	mov	r3, #63	; 0x3f
   1ad2c:	str	r2, [r1, #8]
   1ad30:	b	1aaf4 <argp_error@@Base+0x45c>
   1ad34:	ldr	r3, [sp, #92]	; 0x5c
   1ad38:	cmp	r3, #0
   1ad3c:	bne	1af20 <argp_error@@Base+0x888>
   1ad40:	ldr	r3, [sp, #100]	; 0x64
   1ad44:	cmp	r3, #0
   1ad48:	beq	1ad74 <argp_error@@Base+0x6dc>
   1ad4c:	ldr	r3, [sp, #24]
   1ad50:	ldr	r1, [pc, #672]	; 1aff8 <argp_error@@Base+0x960>
   1ad54:	ldr	r2, [r3]
   1ad58:	ldr	r3, [sp, #96]	; 0x60
   1ad5c:	ldr	r0, [r1]
   1ad60:	ldr	r1, [pc, #672]	; 1b008 <argp_error@@Base+0x970>
   1ad64:	ldr	r3, [r3, #20]
   1ad68:	str	r3, [sp]
   1ad6c:	ldr	r3, [sp, #104]	; 0x68
   1ad70:	bl	11280 <fprintf@plt>
   1ad74:	ldr	r3, [sp, #96]	; 0x60
   1ad78:	ldr	r1, [sp, #96]	; 0x60
   1ad7c:	mov	r2, #0
   1ad80:	ldr	r3, [r3]
   1ad84:	str	r2, [r1, #20]
   1ad88:	add	r3, r3, #1
   1ad8c:	str	r3, [r1]
   1ad90:	mov	r3, #63	; 0x3f
   1ad94:	mov	r0, r3
   1ad98:	str	r2, [r1, #8]
   1ad9c:	add	sp, sp, #52	; 0x34
   1ada0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ada4:	ldr	r1, [sp, #28]
   1ada8:	cmp	r3, r1
   1adac:	bge	1ae4c <argp_error@@Base+0x7b4>
   1adb0:	ldr	r1, [sp, #24]
   1adb4:	add	r2, r2, #2
   1adb8:	ldr	r3, [r1, r3, lsl #2]
   1adbc:	ldr	r1, [sp, #96]	; 0x60
   1adc0:	str	r3, [r1, #12]
   1adc4:	str	r2, [r1]
   1adc8:	b	1aa90 <argp_error@@Base+0x3f8>
   1adcc:	ldr	r3, [sp, #24]
   1add0:	ldr	r1, [pc, #544]	; 1aff8 <argp_error@@Base+0x960>
   1add4:	ldr	r2, [r3]
   1add8:	ldr	r3, [sp, #96]	; 0x60
   1addc:	ldr	r0, [r1]
   1ade0:	ldr	r1, [pc, #548]	; 1b00c <argp_error@@Base+0x974>
   1ade4:	ldr	r3, [r3, #20]
   1ade8:	str	r3, [sp]
   1adec:	ldr	r3, [sp, #104]	; 0x68
   1adf0:	bl	11280 <fprintf@plt>
   1adf4:	ldr	r3, [sp, #44]	; 0x2c
   1adf8:	cmp	r3, #0
   1adfc:	beq	1ae08 <argp_error@@Base+0x770>
   1ae00:	ldr	r0, [sp, #36]	; 0x24
   1ae04:	bl	148c4 <argp_parse@@Base+0xf7c>
   1ae08:	ldr	r3, [sp, #96]	; 0x60
   1ae0c:	ldr	r4, [r3, #20]
   1ae10:	mov	r0, r4
   1ae14:	bl	11268 <strlen@plt>
   1ae18:	ldr	r3, [sp, #96]	; 0x60
   1ae1c:	ldr	r1, [sp, #96]	; 0x60
   1ae20:	mov	r2, #0
   1ae24:	ldr	r3, [r3]
   1ae28:	str	r2, [r1, #8]
   1ae2c:	add	r3, r3, #1
   1ae30:	str	r3, [r1]
   1ae34:	mov	r3, #63	; 0x3f
   1ae38:	add	r0, r4, r0
   1ae3c:	str	r0, [r1, #20]
   1ae40:	mov	r0, r3
   1ae44:	add	sp, sp, #52	; 0x34
   1ae48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae4c:	ldr	r3, [sp, #100]	; 0x64
   1ae50:	cmp	r3, #0
   1ae54:	bne	1ae7c <argp_error@@Base+0x7e4>
   1ae58:	ldr	r2, [sp, #96]	; 0x60
   1ae5c:	ldr	r3, [r9, #12]
   1ae60:	str	r3, [r2, #8]
   1ae64:	ldr	r3, [sp, #32]
   1ae68:	ldrb	r3, [r3]
   1ae6c:	cmp	r3, #58	; 0x3a
   1ae70:	movne	r3, #63	; 0x3f
   1ae74:	moveq	r3, #58	; 0x3a
   1ae78:	b	1aab4 <argp_error@@Base+0x41c>
   1ae7c:	ldr	r3, [sp, #24]
   1ae80:	ldr	r1, [pc, #368]	; 1aff8 <argp_error@@Base+0x960>
   1ae84:	ldr	r2, [r3]
   1ae88:	ldr	r3, [r9]
   1ae8c:	ldr	r0, [r1]
   1ae90:	str	r3, [sp]
   1ae94:	ldr	r1, [pc, #372]	; 1b010 <argp_error@@Base+0x978>
   1ae98:	ldr	r3, [sp, #104]	; 0x68
   1ae9c:	bl	11280 <fprintf@plt>
   1aea0:	b	1ae58 <argp_error@@Base+0x7c0>
   1aea4:	mov	r0, r6
   1aea8:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   1aeac:	subs	r3, r0, #0
   1aeb0:	mov	r8, r3
   1aeb4:	str	r3, [sp, #36]	; 0x24
   1aeb8:	mov	r3, #1
   1aebc:	streq	r3, [sp, #16]
   1aec0:	beq	1aa38 <argp_error@@Base+0x3a0>
   1aec4:	mov	r2, r6
   1aec8:	mov	r1, #0
   1aecc:	str	r3, [sp, #44]	; 0x2c
   1aed0:	bl	112b0 <memset@plt>
   1aed4:	ldr	r2, [sp, #40]	; 0x28
   1aed8:	mov	r1, #1
   1aedc:	ldr	r3, [sp, #36]	; 0x24
   1aee0:	strb	r1, [r8, r2]
   1aee4:	b	1aa30 <argp_error@@Base+0x398>
   1aee8:	mov	r0, r6
   1aeec:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   1aef0:	subs	r3, r0, #0
   1aef4:	str	r3, [sp, #36]	; 0x24
   1aef8:	beq	1afec <argp_error@@Base+0x954>
   1aefc:	mov	r2, r6
   1af00:	mov	r1, #0
   1af04:	bl	112b0 <memset@plt>
   1af08:	mov	r2, #1
   1af0c:	str	r2, [sp, #44]	; 0x2c
   1af10:	ldr	r3, [sp, #36]	; 0x24
   1af14:	ldr	r2, [sp, #40]	; 0x28
   1af18:	strb	fp, [r3, r2]
   1af1c:	b	1ac78 <argp_error@@Base+0x5e0>
   1af20:	ldr	r3, [sp, #96]	; 0x60
   1af24:	ldr	r2, [sp, #24]
   1af28:	ldr	r3, [r3]
   1af2c:	ldr	r3, [r2, r3, lsl #2]
   1af30:	ldrb	r3, [r3, #1]
   1af34:	cmp	r3, #45	; 0x2d
   1af38:	beq	1ad40 <argp_error@@Base+0x6a8>
   1af3c:	ldr	r3, [sp, #96]	; 0x60
   1af40:	ldr	r0, [sp, #32]
   1af44:	ldr	r3, [r3, #20]
   1af48:	ldrb	r1, [r3]
   1af4c:	bl	11274 <strchr@plt>
   1af50:	cmp	r0, #0
   1af54:	beq	1ad40 <argp_error@@Base+0x6a8>
   1af58:	mvn	r3, #0
   1af5c:	b	1aab4 <argp_error@@Base+0x41c>
   1af60:	str	fp, [sp, #40]	; 0x28
   1af64:	mov	r9, r4
   1af68:	b	1ab58 <argp_error@@Base+0x4c0>
   1af6c:	str	fp, [sp, #40]	; 0x28
   1af70:	mov	r9, r4
   1af74:	b	1aa38 <argp_error@@Base+0x3a0>
   1af78:	str	r8, [sp, #40]	; 0x28
   1af7c:	mov	r9, sl
   1af80:	b	1ac7c <argp_error@@Base+0x5e4>
   1af84:	ldr	r1, [r5]
   1af88:	mov	r0, #10
   1af8c:	bl	112f8 <fputc@plt>
   1af90:	ldr	r0, [r5]
   1af94:	bl	111b4 <funlockfile@plt>
   1af98:	b	1adf4 <argp_error@@Base+0x75c>
   1af9c:	ldr	r2, [r9, #8]
   1afa0:	ldr	r3, [r4, #8]
   1afa4:	cmp	r2, r3
   1afa8:	bne	1ab50 <argp_error@@Base+0x4b8>
   1afac:	ldr	r2, [r9, #12]
   1afb0:	ldr	r3, [r4, #12]
   1afb4:	ldr	r1, [sp, #16]
   1afb8:	cmp	r2, r3
   1afbc:	movne	r1, #1
   1afc0:	str	r1, [sp, #16]
   1afc4:	b	1ab58 <argp_error@@Base+0x4c0>
   1afc8:	ldr	r2, [r9, #8]
   1afcc:	ldr	r3, [r4, #8]
   1afd0:	cmp	r2, r3
   1afd4:	bne	1aa18 <argp_error@@Base+0x380>
   1afd8:	ldr	r2, [r9, #12]
   1afdc:	ldr	r3, [r4, #12]
   1afe0:	cmp	r2, r3
   1afe4:	bne	1aa18 <argp_error@@Base+0x380>
   1afe8:	b	1aa38 <argp_error@@Base+0x3a0>
   1afec:	mov	r3, #1
   1aff0:	str	r3, [sp, #16]
   1aff4:	b	1ac7c <argp_error@@Base+0x5e4>
   1aff8:			; <UNDEFINED> instruction: 0x000338b8
   1affc:	andeq	pc, r1, ip, ror #10
   1b000:	andeq	pc, r1, ip, lsr r5	; <UNPREDICTABLE>
   1b004:	muleq	r1, r4, r5
   1b008:	andeq	pc, r1, r4, ror r5	; <UNPREDICTABLE>
   1b00c:	andeq	pc, r1, ip, lsl r5	; <UNPREDICTABLE>
   1b010:	andeq	pc, r1, r4, asr #11
   1b014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b018:	sub	sp, sp, #36	; 0x24
   1b01c:	subs	r6, r0, #0
   1b020:	ldr	r4, [sp, #80]	; 0x50
   1b024:	ldr	r8, [r4, #4]
   1b028:	ble	1b1fc <argp_error@@Base+0xb64>
   1b02c:	mov	sl, r3
   1b030:	ldr	r3, [r4]
   1b034:	mov	r7, r2
   1b038:	mov	r2, #0
   1b03c:	cmp	r3, r2
   1b040:	mov	r9, r1
   1b044:	str	r2, [r4, #12]
   1b048:	beq	1b284 <argp_error@@Base+0xbec>
   1b04c:	ldr	r2, [r4, #16]
   1b050:	cmp	r2, #0
   1b054:	bne	1b208 <argp_error@@Base+0xb70>
   1b058:	mov	r5, #0
   1b05c:	str	r3, [r4, #32]
   1b060:	str	r3, [r4, #28]
   1b064:	str	r5, [r4, #20]
   1b068:	ldrb	r3, [r7]
   1b06c:	cmp	r3, #45	; 0x2d
   1b070:	moveq	r3, #2
   1b074:	addeq	r7, r7, #1
   1b078:	streq	r3, [r4, #24]
   1b07c:	beq	1b0a4 <argp_error@@Base+0xa0c>
   1b080:	cmp	r3, #43	; 0x2b
   1b084:	streq	r5, [r4, #24]
   1b088:	addeq	r7, r7, #1
   1b08c:	beq	1b0a4 <argp_error@@Base+0xa0c>
   1b090:	ldr	r3, [sp, #84]	; 0x54
   1b094:	cmp	r3, #0
   1b098:	beq	1b314 <argp_error@@Base+0xc7c>
   1b09c:	mov	r3, #0
   1b0a0:	str	r3, [r4, #24]
   1b0a4:	mov	r3, #1
   1b0a8:	str	r3, [r4, #16]
   1b0ac:	ldrb	r3, [r7]
   1b0b0:	cmp	r3, #58	; 0x3a
   1b0b4:	moveq	r8, #0
   1b0b8:	cmp	r5, #0
   1b0bc:	beq	1b164 <argp_error@@Base+0xacc>
   1b0c0:	ldrb	r3, [r5]
   1b0c4:	cmp	r3, #0
   1b0c8:	beq	1b164 <argp_error@@Base+0xacc>
   1b0cc:	add	r3, r5, #1
   1b0d0:	str	r3, [r4, #20]
   1b0d4:	ldrb	fp, [r5]
   1b0d8:	mov	r0, r7
   1b0dc:	str	r3, [sp, #28]
   1b0e0:	mov	r1, fp
   1b0e4:	bl	11274 <strchr@plt>
   1b0e8:	ldrb	r1, [r5, #1]
   1b0ec:	ldr	r3, [sp, #28]
   1b0f0:	cmp	r1, #0
   1b0f4:	ldreq	r1, [r4]
   1b0f8:	addeq	r1, r1, #1
   1b0fc:	streq	r1, [r4]
   1b100:	sub	r1, fp, #58	; 0x3a
   1b104:	mov	r2, r0
   1b108:	cmp	r2, #0
   1b10c:	cmpne	r1, #1
   1b110:	mov	r0, fp
   1b114:	bls	1b254 <argp_error@@Base+0xbbc>
   1b118:	ldrb	r1, [r2]
   1b11c:	cmp	r1, #87	; 0x57
   1b120:	ldrb	r1, [r2, #1]
   1b124:	beq	1b3a0 <argp_error@@Base+0xd08>
   1b128:	cmp	r1, #58	; 0x3a
   1b12c:	bne	1b24c <argp_error@@Base+0xbb4>
   1b130:	ldrb	r2, [r2, #2]
   1b134:	cmp	r2, #58	; 0x3a
   1b138:	ldrb	r2, [r5, #1]
   1b13c:	beq	1b498 <argp_error@@Base+0xe00>
   1b140:	cmp	r2, #0
   1b144:	beq	1b478 <argp_error@@Base+0xde0>
   1b148:	ldr	r2, [r4]
   1b14c:	str	r3, [r4, #12]
   1b150:	add	r3, r2, #1
   1b154:	str	r3, [r4]
   1b158:	mov	r3, #0
   1b15c:	str	r3, [r4, #20]
   1b160:	b	1b24c <argp_error@@Base+0xbb4>
   1b164:	ldr	fp, [r4]
   1b168:	ldr	r3, [r4, #32]
   1b16c:	ldr	r2, [r4, #28]
   1b170:	cmp	r3, fp
   1b174:	ldr	r3, [r4, #24]
   1b178:	strgt	fp, [r4, #32]
   1b17c:	cmp	fp, r2
   1b180:	movlt	r2, fp
   1b184:	strlt	fp, [r4, #28]
   1b188:	cmp	r3, #1
   1b18c:	beq	1b294 <argp_error@@Base+0xbfc>
   1b190:	cmp	r6, fp
   1b194:	beq	1b2fc <argp_error@@Base+0xc64>
   1b198:	ldr	r3, [pc, #972]	; 1b56c <argp_error@@Base+0xed4>
   1b19c:	ldr	r5, [r9, fp, lsl #2]
   1b1a0:	mov	r1, r3
   1b1a4:	mov	r0, r5
   1b1a8:	str	r3, [sp, #28]
   1b1ac:	bl	110f4 <strcmp@plt>
   1b1b0:	ldr	r3, [sp, #28]
   1b1b4:	cmp	r0, #0
   1b1b8:	bne	1b224 <argp_error@@Base+0xb8c>
   1b1bc:	ldr	r3, [r4, #28]
   1b1c0:	ldr	r2, [r4, #32]
   1b1c4:	add	fp, fp, #1
   1b1c8:	cmp	r3, r2
   1b1cc:	str	fp, [r4]
   1b1d0:	beq	1b394 <argp_error@@Base+0xcfc>
   1b1d4:	cmp	fp, r2
   1b1d8:	beq	1b1ec <argp_error@@Base+0xb54>
   1b1dc:	mov	r0, r9
   1b1e0:	mov	r1, r4
   1b1e4:	bl	1a844 <argp_error@@Base+0x1ac>
   1b1e8:	ldr	r3, [r4, #28]
   1b1ec:	cmp	r6, r3
   1b1f0:	str	r6, [r4]
   1b1f4:	str	r6, [r4, #32]
   1b1f8:	strne	r3, [r4]
   1b1fc:	mvn	r0, #0
   1b200:	add	sp, sp, #36	; 0x24
   1b204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b208:	ldrb	r3, [r7]
   1b20c:	ldr	r5, [r4, #20]
   1b210:	sub	r2, r3, #43	; 0x2b
   1b214:	tst	r2, #253	; 0xfd
   1b218:	ldrbeq	r3, [r7, #1]
   1b21c:	addeq	r7, r7, #1
   1b220:	b	1b0b0 <argp_error@@Base+0xa18>
   1b224:	ldrb	r2, [r5]
   1b228:	cmp	r2, #45	; 0x2d
   1b22c:	beq	1b348 <argp_error@@Base+0xcb0>
   1b230:	ldr	r3, [r4, #24]
   1b234:	cmp	r3, #0
   1b238:	beq	1b1fc <argp_error@@Base+0xb64>
   1b23c:	mov	r0, #1
   1b240:	add	fp, fp, #1
   1b244:	str	fp, [r4]
   1b248:	str	r5, [r4, #12]
   1b24c:	add	sp, sp, #36	; 0x24
   1b250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b254:	cmp	r8, #0
   1b258:	beq	1b274 <argp_error@@Base+0xbdc>
   1b25c:	ldr	r1, [pc, #780]	; 1b570 <argp_error@@Base+0xed8>
   1b260:	ldr	r2, [r9]
   1b264:	mov	r3, fp
   1b268:	ldr	r0, [r1]
   1b26c:	ldr	r1, [pc, #768]	; 1b574 <argp_error@@Base+0xedc>
   1b270:	bl	11280 <fprintf@plt>
   1b274:	mov	r0, #63	; 0x3f
   1b278:	str	fp, [r4, #8]
   1b27c:	add	sp, sp, #36	; 0x24
   1b280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b284:	mov	r2, #1
   1b288:	mov	r3, r2
   1b28c:	str	r2, [r4]
   1b290:	b	1b058 <argp_error@@Base+0x9c0>
   1b294:	ldr	r3, [r4, #32]
   1b298:	cmp	r3, r2
   1b29c:	beq	1b414 <argp_error@@Base+0xd7c>
   1b2a0:	cmp	fp, r3
   1b2a4:	beq	1b2b8 <argp_error@@Base+0xc20>
   1b2a8:	mov	r1, r4
   1b2ac:	mov	r0, r9
   1b2b0:	bl	1a844 <argp_error@@Base+0x1ac>
   1b2b4:	ldr	r3, [r4]
   1b2b8:	cmp	r6, r3
   1b2bc:	addgt	r1, r9, r3, lsl #2
   1b2c0:	bgt	1b2d8 <argp_error@@Base+0xc40>
   1b2c4:	b	1b2f4 <argp_error@@Base+0xc5c>
   1b2c8:	add	r3, r3, #1
   1b2cc:	cmp	r6, r3
   1b2d0:	str	r3, [r4]
   1b2d4:	beq	1b334 <argp_error@@Base+0xc9c>
   1b2d8:	ldr	r2, [r1], #4
   1b2dc:	ldrb	r0, [r2]
   1b2e0:	cmp	r0, #45	; 0x2d
   1b2e4:	bne	1b2c8 <argp_error@@Base+0xc30>
   1b2e8:	ldrb	r2, [r2, #1]
   1b2ec:	cmp	r2, #0
   1b2f0:	beq	1b2c8 <argp_error@@Base+0xc30>
   1b2f4:	mov	fp, r3
   1b2f8:	b	1b338 <argp_error@@Base+0xca0>
   1b2fc:	ldr	r3, [r4, #28]
   1b300:	ldr	r6, [r4, #32]
   1b304:	mvn	r0, #0
   1b308:	cmp	r6, r3
   1b30c:	strne	r3, [r4]
   1b310:	b	1b200 <argp_error@@Base+0xb68>
   1b314:	ldr	r0, [pc, #604]	; 1b578 <argp_error@@Base+0xee0>
   1b318:	bl	111f0 <getenv@plt>
   1b31c:	ldr	r5, [r4, #20]
   1b320:	cmp	r0, #0
   1b324:	bne	1b09c <argp_error@@Base+0xa04>
   1b328:	mov	r3, #1
   1b32c:	str	r3, [r4, #24]
   1b330:	b	1b0a4 <argp_error@@Base+0xa0c>
   1b334:	mov	fp, r6
   1b338:	cmp	r6, fp
   1b33c:	str	fp, [r4, #32]
   1b340:	bne	1b198 <argp_error@@Base+0xb00>
   1b344:	b	1b2fc <argp_error@@Base+0xc64>
   1b348:	ldrb	r1, [r5, #1]
   1b34c:	cmp	r1, #0
   1b350:	beq	1b230 <argp_error@@Base+0xb98>
   1b354:	cmp	sl, #0
   1b358:	beq	1b38c <argp_error@@Base+0xcf4>
   1b35c:	cmp	r1, #45	; 0x2d
   1b360:	beq	1b4bc <argp_error@@Base+0xe24>
   1b364:	ldr	r3, [sp, #76]	; 0x4c
   1b368:	cmp	r3, #0
   1b36c:	beq	1b38c <argp_error@@Base+0xcf4>
   1b370:	ldrb	r3, [r5, #2]
   1b374:	cmp	r3, #0
   1b378:	bne	1b428 <argp_error@@Base+0xd90>
   1b37c:	mov	r0, r7
   1b380:	bl	11274 <strchr@plt>
   1b384:	cmp	r0, #0
   1b388:	beq	1b428 <argp_error@@Base+0xd90>
   1b38c:	add	r5, r5, #1
   1b390:	b	1b0cc <argp_error@@Base+0xa34>
   1b394:	mov	r3, fp
   1b398:	str	fp, [r4, #28]
   1b39c:	b	1b1ec <argp_error@@Base+0xb54>
   1b3a0:	adds	ip, sl, #0
   1b3a4:	movne	ip, #1
   1b3a8:	cmp	r1, #59	; 0x3b
   1b3ac:	movne	ip, #0
   1b3b0:	cmp	ip, #0
   1b3b4:	beq	1b128 <argp_error@@Base+0xa90>
   1b3b8:	ldrb	r2, [r5, #1]
   1b3bc:	cmp	r2, #0
   1b3c0:	bne	1b3d4 <argp_error@@Base+0xd3c>
   1b3c4:	ldr	r3, [r4]
   1b3c8:	cmp	r6, r3
   1b3cc:	ldrne	r3, [r9, r3, lsl #2]
   1b3d0:	beq	1b518 <argp_error@@Base+0xe80>
   1b3d4:	str	r3, [r4, #20]
   1b3d8:	ldr	lr, [pc, #412]	; 1b57c <argp_error@@Base+0xee4>
   1b3dc:	ldr	r3, [sp, #72]	; 0x48
   1b3e0:	mov	ip, #0
   1b3e4:	str	r3, [sp]
   1b3e8:	str	r8, [sp, #12]
   1b3ec:	str	r4, [sp, #8]
   1b3f0:	str	lr, [sp, #16]
   1b3f4:	mov	r3, sl
   1b3f8:	str	ip, [r4, #12]
   1b3fc:	mov	r2, r7
   1b400:	mov	r1, r9
   1b404:	mov	r0, r6
   1b408:	str	ip, [sp, #4]
   1b40c:	bl	1a900 <argp_error@@Base+0x268>
   1b410:	b	1b24c <argp_error@@Base+0xbb4>
   1b414:	cmp	fp, r2
   1b418:	strne	fp, [r4, #28]
   1b41c:	movne	r3, fp
   1b420:	moveq	r3, r2
   1b424:	b	1b2b8 <argp_error@@Base+0xc20>
   1b428:	ldr	r2, [sp, #76]	; 0x4c
   1b42c:	add	r5, r5, #1
   1b430:	str	r5, [r4, #20]
   1b434:	ldr	r3, [pc, #324]	; 1b580 <argp_error@@Base+0xee8>
   1b438:	str	r2, [sp, #4]
   1b43c:	ldr	r2, [sp, #72]	; 0x48
   1b440:	str	r3, [sp, #16]
   1b444:	str	r2, [sp]
   1b448:	str	r8, [sp, #12]
   1b44c:	str	r4, [sp, #8]
   1b450:	mov	r3, sl
   1b454:	mov	r2, r7
   1b458:	mov	r1, r9
   1b45c:	mov	r0, r6
   1b460:	bl	1a900 <argp_error@@Base+0x268>
   1b464:	cmn	r0, #1
   1b468:	bne	1b24c <argp_error@@Base+0xbb4>
   1b46c:	ldr	r3, [r4]
   1b470:	ldr	r5, [r9, r3, lsl #2]
   1b474:	b	1b38c <argp_error@@Base+0xcf4>
   1b478:	ldr	r3, [r4]
   1b47c:	cmp	r6, r3
   1b480:	beq	1b4f8 <argp_error@@Base+0xe60>
   1b484:	ldr	r2, [r9, r3, lsl #2]
   1b488:	add	r3, r3, #1
   1b48c:	str	r2, [r4, #12]
   1b490:	str	r3, [r4]
   1b494:	b	1b158 <argp_error@@Base+0xac0>
   1b498:	cmp	r2, #0
   1b49c:	moveq	r3, r2
   1b4a0:	ldrne	r2, [r4]
   1b4a4:	str	r3, [r4, #12]
   1b4a8:	addne	r2, r2, #1
   1b4ac:	strne	r2, [r4]
   1b4b0:	mov	r2, #0
   1b4b4:	str	r2, [r4, #20]
   1b4b8:	b	1b24c <argp_error@@Base+0xbb4>
   1b4bc:	add	r5, r5, #2
   1b4c0:	str	r5, [r4, #20]
   1b4c4:	str	r3, [sp, #16]
   1b4c8:	ldr	r3, [sp, #76]	; 0x4c
   1b4cc:	str	r8, [sp, #12]
   1b4d0:	str	r3, [sp, #4]
   1b4d4:	ldr	r3, [sp, #72]	; 0x48
   1b4d8:	str	r4, [sp, #8]
   1b4dc:	str	r3, [sp]
   1b4e0:	mov	r2, r7
   1b4e4:	mov	r3, sl
   1b4e8:	mov	r1, r9
   1b4ec:	mov	r0, r6
   1b4f0:	bl	1a900 <argp_error@@Base+0x268>
   1b4f4:	b	1b24c <argp_error@@Base+0xbb4>
   1b4f8:	cmp	r8, #0
   1b4fc:	bne	1b550 <argp_error@@Base+0xeb8>
   1b500:	str	fp, [r4, #8]
   1b504:	ldrb	r0, [r7]
   1b508:	cmp	r0, #58	; 0x3a
   1b50c:	movne	r0, #63	; 0x3f
   1b510:	moveq	r0, #58	; 0x3a
   1b514:	b	1b158 <argp_error@@Base+0xac0>
   1b518:	cmp	r8, #0
   1b51c:	beq	1b538 <argp_error@@Base+0xea0>
   1b520:	ldr	r1, [pc, #72]	; 1b570 <argp_error@@Base+0xed8>
   1b524:	ldr	r2, [r9]
   1b528:	mov	r3, fp
   1b52c:	ldr	r0, [r1]
   1b530:	ldr	r1, [pc, #76]	; 1b584 <argp_error@@Base+0xeec>
   1b534:	bl	11280 <fprintf@plt>
   1b538:	str	fp, [r4, #8]
   1b53c:	ldrb	r0, [r7]
   1b540:	cmp	r0, #58	; 0x3a
   1b544:	movne	r0, #63	; 0x3f
   1b548:	moveq	r0, #58	; 0x3a
   1b54c:	b	1b24c <argp_error@@Base+0xbb4>
   1b550:	ldr	r1, [pc, #24]	; 1b570 <argp_error@@Base+0xed8>
   1b554:	ldr	r2, [r9]
   1b558:	mov	r3, fp
   1b55c:	ldr	r0, [r1]
   1b560:	ldr	r1, [pc, #28]	; 1b584 <argp_error@@Base+0xeec>
   1b564:	bl	11280 <fprintf@plt>
   1b568:	b	1b500 <argp_error@@Base+0xe68>
   1b56c:			; <UNDEFINED> instruction: 0x0001ecbc
   1b570:			; <UNDEFINED> instruction: 0x000338b8
   1b574:	strdeq	pc, [r1], -ip
   1b578:	andeq	pc, r1, ip, ror #11
   1b57c:	andeq	pc, r1, r4, asr #12
   1b580:	andeq	lr, r1, r4, ror #17
   1b584:	andeq	pc, r1, r8, lsl r6	; <UNPREDICTABLE>
   1b588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b58c:	sub	sp, sp, #44	; 0x2c
   1b590:	ldr	r7, [pc, #1572]	; 1bbbc <argp_error@@Base+0x1524>
   1b594:	ldr	r4, [pc, #1572]	; 1bbc0 <argp_error@@Base+0x1528>
   1b598:	subs	r6, r0, #0
   1b59c:	ldm	r7, {r5, sl}
   1b5a0:	str	r1, [sp, #32]
   1b5a4:	str	r3, [sp, #36]	; 0x24
   1b5a8:	stm	r4, {r5, sl}
   1b5ac:	ble	1b758 <argp_error@@Base+0x10c0>
   1b5b0:	mov	r3, #0
   1b5b4:	cmp	r5, #0
   1b5b8:	mov	fp, r2
   1b5bc:	str	r3, [r4, #12]
   1b5c0:	beq	1b814 <argp_error@@Base+0x117c>
   1b5c4:	ldr	r3, [r4, #16]
   1b5c8:	cmp	r3, #0
   1b5cc:	bne	1b770 <argp_error@@Base+0x10d8>
   1b5d0:	mov	r3, #0
   1b5d4:	str	r5, [r4, #32]
   1b5d8:	str	r5, [r4, #28]
   1b5dc:	str	r3, [r4, #20]
   1b5e0:	ldrb	r2, [fp]
   1b5e4:	cmp	r2, #45	; 0x2d
   1b5e8:	beq	1b8c4 <argp_error@@Base+0x122c>
   1b5ec:	cmp	r2, #43	; 0x2b
   1b5f0:	streq	r3, [r4, #24]
   1b5f4:	addeq	fp, fp, #1
   1b5f8:	moveq	r5, r3
   1b5fc:	beq	1b618 <argp_error@@Base+0xf80>
   1b600:	ldr	r2, [sp, #88]	; 0x58
   1b604:	cmp	r2, #0
   1b608:	movne	r5, r3
   1b60c:	beq	1b8a4 <argp_error@@Base+0x120c>
   1b610:	mov	r3, #0
   1b614:	str	r3, [r4, #24]
   1b618:	mov	r3, #1
   1b61c:	str	r3, [r4, #16]
   1b620:	ldrb	r3, [fp]
   1b624:	cmp	r3, #58	; 0x3a
   1b628:	moveq	sl, #0
   1b62c:	cmp	r5, #0
   1b630:	beq	1b6b4 <argp_error@@Base+0x101c>
   1b634:	ldrb	r3, [r5]
   1b638:	cmp	r3, #0
   1b63c:	beq	1b6b4 <argp_error@@Base+0x101c>
   1b640:	add	r9, r5, #1
   1b644:	str	r9, [r4, #20]
   1b648:	ldrb	r8, [r5]
   1b64c:	mov	r0, fp
   1b650:	mov	r1, r8
   1b654:	bl	11274 <strchr@plt>
   1b658:	ldrb	r3, [r5, #1]
   1b65c:	str	r8, [sp, #28]
   1b660:	cmp	r3, #0
   1b664:	ldreq	r3, [r4]
   1b668:	addeq	r3, r3, #1
   1b66c:	streq	r3, [r4]
   1b670:	sub	r3, r8, #58	; 0x3a
   1b674:	cmp	r0, #0
   1b678:	cmpne	r3, #1
   1b67c:	bls	1b7d8 <argp_error@@Base+0x1140>
   1b680:	ldrb	r3, [r0]
   1b684:	cmp	r3, #87	; 0x57
   1b688:	ldrb	r3, [r0, #1]
   1b68c:	beq	1b94c <argp_error@@Base+0x12b4>
   1b690:	cmp	r3, #58	; 0x3a
   1b694:	beq	1b9f0 <argp_error@@Base+0x1358>
   1b698:	ldr	r3, [r4, #8]
   1b69c:	mov	r0, r8
   1b6a0:	ldr	r9, [r4, #12]
   1b6a4:	ldr	r5, [r4]
   1b6a8:	str	r3, [sp, #28]
   1b6ac:	mov	r2, r3
   1b6b0:	b	1b7c0 <argp_error@@Base+0x1128>
   1b6b4:	ldr	r5, [r4]
   1b6b8:	ldr	r8, [r4, #32]
   1b6bc:	ldr	r3, [r4, #28]
   1b6c0:	cmp	r8, r5
   1b6c4:	ldr	r2, [r4, #24]
   1b6c8:	movgt	r8, r5
   1b6cc:	strgt	r5, [r4, #32]
   1b6d0:	cmp	r5, r3
   1b6d4:	movlt	r3, r5
   1b6d8:	strlt	r5, [r4, #28]
   1b6dc:	cmp	r2, #1
   1b6e0:	beq	1b824 <argp_error@@Base+0x118c>
   1b6e4:	cmp	r6, r5
   1b6e8:	beq	1b88c <argp_error@@Base+0x11f4>
   1b6ec:	ldr	r3, [sp, #32]
   1b6f0:	ldr	r9, [r3, r5, lsl #2]
   1b6f4:	ldr	r3, [pc, #1224]	; 1bbc4 <argp_error@@Base+0x152c>
   1b6f8:	mov	r0, r9
   1b6fc:	mov	r1, r3
   1b700:	str	r3, [sp, #28]
   1b704:	bl	110f4 <strcmp@plt>
   1b708:	ldr	r3, [sp, #28]
   1b70c:	cmp	r0, #0
   1b710:	bne	1b78c <argp_error@@Base+0x10f4>
   1b714:	add	r3, r5, #1
   1b718:	ldr	r5, [r4, #28]
   1b71c:	str	r3, [r4]
   1b720:	cmp	r5, r8
   1b724:	beq	1b940 <argp_error@@Base+0x12a8>
   1b728:	cmp	r3, r8
   1b72c:	beq	1b740 <argp_error@@Base+0x10a8>
   1b730:	ldr	r0, [sp, #32]
   1b734:	ldr	r1, [pc, #1156]	; 1bbc0 <argp_error@@Base+0x1528>
   1b738:	bl	1a844 <argp_error@@Base+0x1ac>
   1b73c:	ldr	r5, [r4, #28]
   1b740:	mov	r8, r6
   1b744:	cmp	r8, r5
   1b748:	str	r6, [r4, #32]
   1b74c:	str	r6, [r4]
   1b750:	moveq	r5, r6
   1b754:	bne	1b89c <argp_error@@Base+0x1204>
   1b758:	ldr	r3, [r4, #8]
   1b75c:	ldr	r9, [r4, #12]
   1b760:	str	r3, [sp, #28]
   1b764:	mvn	r0, #0
   1b768:	mov	r2, r3
   1b76c:	b	1b7c0 <argp_error@@Base+0x1128>
   1b770:	ldrb	r3, [r2]
   1b774:	ldr	r5, [r4, #20]
   1b778:	sub	r2, r3, #43	; 0x2b
   1b77c:	tst	r2, #253	; 0xfd
   1b780:	ldrbeq	r3, [fp, #1]
   1b784:	addeq	fp, fp, #1
   1b788:	b	1b624 <argp_error@@Base+0xf8c>
   1b78c:	ldrb	r2, [r9]
   1b790:	cmp	r2, #45	; 0x2d
   1b794:	beq	1b8f0 <argp_error@@Base+0x1258>
   1b798:	ldr	r3, [r4, #24]
   1b79c:	cmp	r3, #0
   1b7a0:	beq	1b758 <argp_error@@Base+0x10c0>
   1b7a4:	ldr	r3, [r4, #8]
   1b7a8:	mov	r0, #1
   1b7ac:	mov	r2, r3
   1b7b0:	add	r5, r5, #1
   1b7b4:	str	r5, [r4]
   1b7b8:	str	r9, [r4, #12]
   1b7bc:	str	r3, [sp, #28]
   1b7c0:	ldr	r3, [pc, #1024]	; 1bbc8 <argp_error@@Base+0x1530>
   1b7c4:	str	r5, [r7]
   1b7c8:	str	r2, [r7, #8]
   1b7cc:	str	r9, [r3]
   1b7d0:	add	sp, sp, #44	; 0x2c
   1b7d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7d8:	cmp	sl, #0
   1b7dc:	beq	1b7fc <argp_error@@Base+0x1164>
   1b7e0:	ldr	r1, [pc, #996]	; 1bbcc <argp_error@@Base+0x1534>
   1b7e4:	ldr	r3, [sp, #32]
   1b7e8:	ldr	r0, [r1]
   1b7ec:	ldr	r2, [r3]
   1b7f0:	ldr	r1, [pc, #984]	; 1bbd0 <argp_error@@Base+0x1538>
   1b7f4:	mov	r3, r8
   1b7f8:	bl	11280 <fprintf@plt>
   1b7fc:	str	r8, [r4, #8]
   1b800:	ldr	r5, [r4]
   1b804:	ldr	r9, [r4, #12]
   1b808:	mov	r0, #63	; 0x3f
   1b80c:	ldr	r2, [sp, #28]
   1b810:	b	1b7c0 <argp_error@@Base+0x1128>
   1b814:	mov	r3, #1
   1b818:	mov	r5, r3
   1b81c:	str	r3, [r4]
   1b820:	b	1b5d0 <argp_error@@Base+0xf38>
   1b824:	cmp	r8, r3
   1b828:	beq	1b9e0 <argp_error@@Base+0x1348>
   1b82c:	cmp	r5, r8
   1b830:	beq	1b844 <argp_error@@Base+0x11ac>
   1b834:	ldr	r1, [pc, #900]	; 1bbc0 <argp_error@@Base+0x1528>
   1b838:	ldr	r0, [sp, #32]
   1b83c:	bl	1a844 <argp_error@@Base+0x1ac>
   1b840:	ldr	r8, [r4]
   1b844:	cmp	r6, r8
   1b848:	ldrgt	r3, [sp, #32]
   1b84c:	addgt	r2, r3, r8, lsl #2
   1b850:	bgt	1b868 <argp_error@@Base+0x11d0>
   1b854:	b	1b884 <argp_error@@Base+0x11ec>
   1b858:	add	r8, r8, #1
   1b85c:	cmp	r6, r8
   1b860:	str	r8, [r4]
   1b864:	beq	1b8d8 <argp_error@@Base+0x1240>
   1b868:	ldr	r3, [r2], #4
   1b86c:	ldrb	r1, [r3]
   1b870:	cmp	r1, #45	; 0x2d
   1b874:	bne	1b858 <argp_error@@Base+0x11c0>
   1b878:	ldrb	r3, [r3, #1]
   1b87c:	cmp	r3, #0
   1b880:	beq	1b858 <argp_error@@Base+0x11c0>
   1b884:	mov	r5, r8
   1b888:	b	1b8dc <argp_error@@Base+0x1244>
   1b88c:	ldr	r5, [r4, #28]
   1b890:	cmp	r8, r5
   1b894:	moveq	r5, r6
   1b898:	beq	1b758 <argp_error@@Base+0x10c0>
   1b89c:	str	r5, [r4]
   1b8a0:	b	1b758 <argp_error@@Base+0x10c0>
   1b8a4:	ldr	r0, [pc, #808]	; 1bbd4 <argp_error@@Base+0x153c>
   1b8a8:	bl	111f0 <getenv@plt>
   1b8ac:	ldr	r5, [r4, #20]
   1b8b0:	cmp	r0, #0
   1b8b4:	bne	1b610 <argp_error@@Base+0xf78>
   1b8b8:	mov	r3, #1
   1b8bc:	str	r3, [r4, #24]
   1b8c0:	b	1b618 <argp_error@@Base+0xf80>
   1b8c4:	mov	r2, #2
   1b8c8:	add	fp, fp, #1
   1b8cc:	mov	r5, r3
   1b8d0:	str	r2, [r4, #24]
   1b8d4:	b	1b618 <argp_error@@Base+0xf80>
   1b8d8:	mov	r5, r6
   1b8dc:	cmp	r6, r5
   1b8e0:	mov	r8, r5
   1b8e4:	str	r5, [r4, #32]
   1b8e8:	bne	1b6ec <argp_error@@Base+0x1054>
   1b8ec:	b	1b88c <argp_error@@Base+0x11f4>
   1b8f0:	ldrb	r1, [r9, #1]
   1b8f4:	cmp	r1, #0
   1b8f8:	beq	1b798 <argp_error@@Base+0x1100>
   1b8fc:	ldr	r2, [sp, #36]	; 0x24
   1b900:	cmp	r2, #0
   1b904:	beq	1b938 <argp_error@@Base+0x12a0>
   1b908:	cmp	r1, #45	; 0x2d
   1b90c:	beq	1baec <argp_error@@Base+0x1454>
   1b910:	ldr	r3, [sp, #84]	; 0x54
   1b914:	cmp	r3, #0
   1b918:	beq	1b938 <argp_error@@Base+0x12a0>
   1b91c:	ldrb	r3, [r9, #2]
   1b920:	cmp	r3, #0
   1b924:	bne	1ba34 <argp_error@@Base+0x139c>
   1b928:	mov	r0, fp
   1b92c:	bl	11274 <strchr@plt>
   1b930:	cmp	r0, #0
   1b934:	beq	1ba34 <argp_error@@Base+0x139c>
   1b938:	add	r5, r9, #1
   1b93c:	b	1b640 <argp_error@@Base+0xfa8>
   1b940:	mov	r5, r3
   1b944:	str	r3, [r4, #28]
   1b948:	b	1b740 <argp_error@@Base+0x10a8>
   1b94c:	ldr	r1, [sp, #36]	; 0x24
   1b950:	sub	r2, r3, #59	; 0x3b
   1b954:	cmp	r1, #0
   1b958:	clz	r2, r2
   1b95c:	lsr	r2, r2, #5
   1b960:	moveq	r2, #0
   1b964:	cmp	r2, #0
   1b968:	beq	1b690 <argp_error@@Base+0xff8>
   1b96c:	ldrb	r3, [r5, #1]
   1b970:	cmp	r3, #0
   1b974:	bne	1b98c <argp_error@@Base+0x12f4>
   1b978:	ldr	r3, [r4]
   1b97c:	cmp	r6, r3
   1b980:	beq	1bb54 <argp_error@@Base+0x14bc>
   1b984:	ldr	r2, [sp, #32]
   1b988:	ldr	r9, [r2, r3, lsl #2]
   1b98c:	ldr	r3, [sp, #80]	; 0x50
   1b990:	ldr	r1, [sp, #32]
   1b994:	str	r3, [sp]
   1b998:	ldr	r3, [sp, #36]	; 0x24
   1b99c:	ldr	lr, [pc, #564]	; 1bbd8 <argp_error@@Base+0x1540>
   1b9a0:	mov	r2, fp
   1b9a4:	mov	r0, r6
   1b9a8:	mov	ip, #0
   1b9ac:	str	sl, [sp, #12]
   1b9b0:	str	r4, [sp, #8]
   1b9b4:	str	lr, [sp, #16]
   1b9b8:	str	ip, [sp, #4]
   1b9bc:	str	r9, [r4, #20]
   1b9c0:	str	ip, [r4, #12]
   1b9c4:	bl	1a900 <argp_error@@Base+0x268>
   1b9c8:	ldr	r3, [r4, #8]
   1b9cc:	ldr	r5, [r4]
   1b9d0:	ldr	r9, [r4, #12]
   1b9d4:	str	r3, [sp, #28]
   1b9d8:	mov	r2, r3
   1b9dc:	b	1b7c0 <argp_error@@Base+0x1128>
   1b9e0:	cmp	r5, r8
   1b9e4:	movne	r8, r5
   1b9e8:	strne	r5, [r4, #28]
   1b9ec:	b	1b844 <argp_error@@Base+0x11ac>
   1b9f0:	ldrb	r3, [r0, #2]
   1b9f4:	cmp	r3, #58	; 0x3a
   1b9f8:	ldrb	r3, [r5, #1]
   1b9fc:	beq	1bab4 <argp_error@@Base+0x141c>
   1ba00:	cmp	r3, #0
   1ba04:	ldr	r5, [r4]
   1ba08:	beq	1ba88 <argp_error@@Base+0x13f0>
   1ba0c:	ldr	r3, [r4, #8]
   1ba10:	mov	r0, r8
   1ba14:	add	r5, r5, #1
   1ba18:	str	r9, [r4, #12]
   1ba1c:	str	r5, [r4]
   1ba20:	str	r3, [sp, #28]
   1ba24:	mov	r3, #0
   1ba28:	str	r3, [r4, #20]
   1ba2c:	ldr	r2, [sp, #28]
   1ba30:	b	1b7c0 <argp_error@@Base+0x1128>
   1ba34:	ldr	r2, [sp, #84]	; 0x54
   1ba38:	ldr	r3, [pc, #412]	; 1bbdc <argp_error@@Base+0x1544>
   1ba3c:	str	r2, [sp, #4]
   1ba40:	ldr	r2, [sp, #80]	; 0x50
   1ba44:	str	r3, [sp, #16]
   1ba48:	str	r2, [sp]
   1ba4c:	add	r9, r9, #1
   1ba50:	str	sl, [sp, #12]
   1ba54:	str	r4, [sp, #8]
   1ba58:	ldr	r3, [sp, #36]	; 0x24
   1ba5c:	mov	r2, fp
   1ba60:	ldr	r1, [sp, #32]
   1ba64:	mov	r0, r6
   1ba68:	str	r9, [r4, #20]
   1ba6c:	bl	1a900 <argp_error@@Base+0x268>
   1ba70:	cmn	r0, #1
   1ba74:	bne	1b9c8 <argp_error@@Base+0x1330>
   1ba78:	ldr	r3, [r4]
   1ba7c:	ldr	r2, [sp, #32]
   1ba80:	ldr	r9, [r2, r3, lsl #2]
   1ba84:	b	1b938 <argp_error@@Base+0x12a0>
   1ba88:	cmp	r6, r5
   1ba8c:	beq	1bb24 <argp_error@@Base+0x148c>
   1ba90:	ldr	r3, [r4, #8]
   1ba94:	mov	r0, r8
   1ba98:	str	r3, [sp, #28]
   1ba9c:	ldr	r3, [sp, #32]
   1baa0:	ldr	r9, [r3, r5, lsl #2]
   1baa4:	add	r5, r5, #1
   1baa8:	str	r9, [r4, #12]
   1baac:	str	r5, [r4]
   1bab0:	b	1ba24 <argp_error@@Base+0x138c>
   1bab4:	cmp	r3, #0
   1bab8:	moveq	r9, r3
   1babc:	ldrne	r5, [r4]
   1bac0:	mov	r3, #0
   1bac4:	str	r3, [r4, #20]
   1bac8:	ldr	r3, [r4, #8]
   1bacc:	addne	r5, r5, #1
   1bad0:	ldreq	r5, [r4]
   1bad4:	strne	r5, [r4]
   1bad8:	str	r9, [r4, #12]
   1badc:	mov	r0, r8
   1bae0:	str	r3, [sp, #28]
   1bae4:	mov	r2, r3
   1bae8:	b	1b7c0 <argp_error@@Base+0x1128>
   1baec:	str	r3, [sp, #16]
   1baf0:	ldr	r3, [sp, #84]	; 0x54
   1baf4:	add	r9, r9, #2
   1baf8:	str	r3, [sp, #4]
   1bafc:	ldr	r3, [sp, #80]	; 0x50
   1bb00:	str	sl, [sp, #12]
   1bb04:	str	r3, [sp]
   1bb08:	str	r4, [sp, #8]
   1bb0c:	mov	r3, r2
   1bb10:	ldr	r1, [sp, #32]
   1bb14:	mov	r2, fp
   1bb18:	mov	r0, r6
   1bb1c:	str	r9, [r4, #20]
   1bb20:	b	1b9c4 <argp_error@@Base+0x132c>
   1bb24:	cmp	sl, #0
   1bb28:	bne	1bb9c <argp_error@@Base+0x1504>
   1bb2c:	str	r8, [r4, #8]
   1bb30:	ldrb	r8, [fp]
   1bb34:	cmp	r8, #58	; 0x3a
   1bb38:	moveq	r0, r8
   1bb3c:	ldreq	r5, [r4]
   1bb40:	ldreq	r9, [r4, #12]
   1bb44:	ldrne	r5, [r4]
   1bb48:	ldrne	r9, [r4, #12]
   1bb4c:	movne	r0, #63	; 0x3f
   1bb50:	b	1ba24 <argp_error@@Base+0x138c>
   1bb54:	cmp	sl, #0
   1bb58:	beq	1bb78 <argp_error@@Base+0x14e0>
   1bb5c:	ldr	r1, [pc, #104]	; 1bbcc <argp_error@@Base+0x1534>
   1bb60:	ldr	r3, [sp, #32]
   1bb64:	ldr	r0, [r1]
   1bb68:	ldr	r2, [r3]
   1bb6c:	ldr	r1, [pc, #108]	; 1bbe0 <argp_error@@Base+0x1548>
   1bb70:	mov	r3, r8
   1bb74:	bl	11280 <fprintf@plt>
   1bb78:	str	r8, [r4, #8]
   1bb7c:	ldrb	r8, [fp]
   1bb80:	ldr	r5, [r4]
   1bb84:	ldr	r9, [r4, #12]
   1bb88:	cmp	r8, #58	; 0x3a
   1bb8c:	movne	r0, #63	; 0x3f
   1bb90:	moveq	r0, #58	; 0x3a
   1bb94:	ldr	r2, [sp, #28]
   1bb98:	b	1b7c0 <argp_error@@Base+0x1128>
   1bb9c:	ldr	r3, [sp, #32]
   1bba0:	ldr	r1, [pc, #36]	; 1bbcc <argp_error@@Base+0x1534>
   1bba4:	ldr	r2, [r3]
   1bba8:	ldr	r0, [r1]
   1bbac:	mov	r3, r8
   1bbb0:	ldr	r1, [pc, #40]	; 1bbe0 <argp_error@@Base+0x1548>
   1bbb4:	bl	11280 <fprintf@plt>
   1bbb8:	b	1bb2c <argp_error@@Base+0x1494>
   1bbbc:	andeq	r3, r3, r0, lsr #17
   1bbc0:	andeq	r3, r3, r8, ror #17
   1bbc4:			; <UNDEFINED> instruction: 0x0001ecbc
   1bbc8:	andeq	r3, r3, r4, asr #18
   1bbcc:			; <UNDEFINED> instruction: 0x000338b8
   1bbd0:	strdeq	pc, [r1], -ip
   1bbd4:	andeq	pc, r1, ip, ror #11
   1bbd8:	andeq	pc, r1, r4, asr #12
   1bbdc:	andeq	lr, r1, r4, ror #17
   1bbe0:	andeq	pc, r1, r8, lsl r6	; <UNPREDICTABLE>
   1bbe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bbe8:	sub	sp, sp, #20
   1bbec:	ldr	r7, [pc, #1052]	; 1c010 <argp_error@@Base+0x1978>
   1bbf0:	ldr	r4, [pc, #1052]	; 1c014 <argp_error@@Base+0x197c>
   1bbf4:	subs	r6, r0, #0
   1bbf8:	ldr	r5, [r7]
   1bbfc:	ldr	r3, [r7, #4]
   1bc00:	str	r1, [sp, #4]
   1bc04:	str	r5, [r4]
   1bc08:	str	r3, [r4, #4]
   1bc0c:	ble	1bee4 <argp_error@@Base+0x184c>
   1bc10:	mov	sl, r2
   1bc14:	cmp	r5, #0
   1bc18:	mov	r2, #0
   1bc1c:	str	r2, [r4, #12]
   1bc20:	beq	1bccc <argp_error@@Base+0x1634>
   1bc24:	ldr	r2, [r4, #16]
   1bc28:	cmp	r2, #0
   1bc2c:	beq	1bcd8 <argp_error@@Base+0x1640>
   1bc30:	ldrb	r2, [sl]
   1bc34:	sub	r1, r2, #43	; 0x2b
   1bc38:	tst	r1, #253	; 0xfd
   1bc3c:	ldrbeq	r2, [sl, #1]
   1bc40:	addeq	sl, sl, #1
   1bc44:	cmp	r2, #58	; 0x3a
   1bc48:	ldr	r2, [r4, #20]
   1bc4c:	moveq	r3, #0
   1bc50:	cmp	r2, #0
   1bc54:	beq	1bd2c <argp_error@@Base+0x1694>
   1bc58:	ldrb	r1, [r2]
   1bc5c:	cmp	r1, #0
   1bc60:	beq	1bd2c <argp_error@@Base+0x1694>
   1bc64:	add	r9, r2, #1
   1bc68:	str	r9, [r4, #20]
   1bc6c:	ldrb	r8, [r2]
   1bc70:	mov	r0, sl
   1bc74:	str	r3, [sp, #12]
   1bc78:	mov	r1, r8
   1bc7c:	str	r2, [sp, #8]
   1bc80:	bl	11274 <strchr@plt>
   1bc84:	ldr	r2, [sp, #8]
   1bc88:	mov	fp, r8
   1bc8c:	ldr	r3, [sp, #12]
   1bc90:	ldrb	r1, [r2, #1]
   1bc94:	cmp	r1, #0
   1bc98:	addeq	r5, r5, #1
   1bc9c:	sub	r1, r8, #58	; 0x3a
   1bca0:	streq	r5, [r4]
   1bca4:	cmp	r0, #0
   1bca8:	cmpne	r1, #1
   1bcac:	bls	1be18 <argp_error@@Base+0x1780>
   1bcb0:	ldrb	r1, [r0, #1]
   1bcb4:	cmp	r1, #58	; 0x3a
   1bcb8:	beq	1bf24 <argp_error@@Base+0x188c>
   1bcbc:	mov	r0, r8
   1bcc0:	ldr	r9, [r4, #12]
   1bcc4:	ldr	fp, [r4, #8]
   1bcc8:	b	1be00 <argp_error@@Base+0x1768>
   1bccc:	mov	r2, #1
   1bcd0:	mov	r5, r2
   1bcd4:	str	r2, [r4]
   1bcd8:	mov	r2, #0
   1bcdc:	str	r5, [r4, #32]
   1bce0:	str	r5, [r4, #28]
   1bce4:	str	r2, [r4, #20]
   1bce8:	ldrb	r1, [sl]
   1bcec:	cmp	r1, #45	; 0x2d
   1bcf0:	moveq	r1, #2
   1bcf4:	addeq	sl, sl, #1
   1bcf8:	streq	r1, [r4, #24]
   1bcfc:	beq	1bd18 <argp_error@@Base+0x1680>
   1bd00:	cmp	r1, #43	; 0x2b
   1bd04:	addeq	sl, sl, #1
   1bd08:	moveq	r1, r2
   1bd0c:	movne	r1, r2
   1bd10:	streq	r2, [r4, #24]
   1bd14:	strne	r2, [r4, #24]
   1bd18:	mov	r2, #1
   1bd1c:	str	r2, [r4, #16]
   1bd20:	ldrb	r2, [sl]
   1bd24:	cmp	r2, #58	; 0x3a
   1bd28:	beq	1be50 <argp_error@@Base+0x17b8>
   1bd2c:	add	r1, r4, #24
   1bd30:	ldm	r1, {r1, r2, r8}
   1bd34:	cmp	r8, r5
   1bd38:	movgt	r8, r5
   1bd3c:	strgt	r5, [r4, #32]
   1bd40:	cmp	r5, r2
   1bd44:	movlt	r2, r5
   1bd48:	strlt	r5, [r4, #28]
   1bd4c:	cmp	r1, #1
   1bd50:	beq	1be64 <argp_error@@Base+0x17cc>
   1bd54:	cmp	r6, r5
   1bd58:	str	r3, [sp, #8]
   1bd5c:	beq	1bed4 <argp_error@@Base+0x183c>
   1bd60:	ldr	fp, [sp, #4]
   1bd64:	ldr	r1, [pc, #684]	; 1c018 <argp_error@@Base+0x1980>
   1bd68:	ldr	r9, [fp, r5, lsl #2]
   1bd6c:	mov	r0, r9
   1bd70:	bl	110f4 <strcmp@plt>
   1bd74:	ldr	r3, [sp, #8]
   1bd78:	cmp	r0, #0
   1bd7c:	bne	1bdd4 <argp_error@@Base+0x173c>
   1bd80:	add	r3, r5, #1
   1bd84:	ldr	r5, [r4, #28]
   1bd88:	str	r3, [r4]
   1bd8c:	cmp	r5, r8
   1bd90:	beq	1bf18 <argp_error@@Base+0x1880>
   1bd94:	cmp	r3, r8
   1bd98:	beq	1bdac <argp_error@@Base+0x1714>
   1bd9c:	mov	r0, fp
   1bda0:	ldr	r1, [pc, #620]	; 1c014 <argp_error@@Base+0x197c>
   1bda4:	bl	1a844 <argp_error@@Base+0x1ac>
   1bda8:	ldr	r5, [r4, #28]
   1bdac:	mov	r8, r6
   1bdb0:	cmp	r8, r5
   1bdb4:	str	r6, [r4, #32]
   1bdb8:	str	r6, [r4]
   1bdbc:	beq	1bee0 <argp_error@@Base+0x1848>
   1bdc0:	str	r5, [r4]
   1bdc4:	ldr	r9, [r4, #12]
   1bdc8:	ldr	fp, [r4, #8]
   1bdcc:	mvn	r0, #0
   1bdd0:	b	1be00 <argp_error@@Base+0x1768>
   1bdd4:	ldrb	r2, [r9]
   1bdd8:	cmp	r2, #45	; 0x2d
   1bddc:	beq	1bf04 <argp_error@@Base+0x186c>
   1bde0:	ldr	r3, [r4, #24]
   1bde4:	cmp	r3, #0
   1bde8:	beq	1bee4 <argp_error@@Base+0x184c>
   1bdec:	ldr	fp, [r4, #8]
   1bdf0:	mov	r0, #1
   1bdf4:	add	r5, r5, #1
   1bdf8:	str	r5, [r4]
   1bdfc:	str	r9, [r4, #12]
   1be00:	ldr	r3, [pc, #532]	; 1c01c <argp_error@@Base+0x1984>
   1be04:	str	r5, [r7]
   1be08:	str	fp, [r7, #8]
   1be0c:	str	r9, [r3]
   1be10:	add	sp, sp, #20
   1be14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be18:	cmp	r3, #0
   1be1c:	beq	1be40 <argp_error@@Base+0x17a8>
   1be20:	ldr	r3, [sp, #4]
   1be24:	ldr	r1, [pc, #500]	; 1c020 <argp_error@@Base+0x1988>
   1be28:	ldr	r2, [r3]
   1be2c:	ldr	r0, [r1]
   1be30:	mov	r3, r8
   1be34:	ldr	r1, [pc, #488]	; 1c024 <argp_error@@Base+0x198c>
   1be38:	bl	11280 <fprintf@plt>
   1be3c:	ldr	r5, [r4]
   1be40:	str	r8, [r4, #8]
   1be44:	ldr	r9, [r4, #12]
   1be48:	mov	r0, #63	; 0x3f
   1be4c:	b	1be00 <argp_error@@Base+0x1768>
   1be50:	cmp	r1, #1
   1be54:	mov	r8, r5
   1be58:	mov	r2, r5
   1be5c:	mov	r3, #0
   1be60:	bne	1bd54 <argp_error@@Base+0x16bc>
   1be64:	cmp	r2, r8
   1be68:	beq	1bf5c <argp_error@@Base+0x18c4>
   1be6c:	cmp	r5, r8
   1be70:	beq	1be8c <argp_error@@Base+0x17f4>
   1be74:	ldr	r1, [pc, #408]	; 1c014 <argp_error@@Base+0x197c>
   1be78:	ldr	r0, [sp, #4]
   1be7c:	str	r3, [sp, #8]
   1be80:	bl	1a844 <argp_error@@Base+0x1ac>
   1be84:	ldr	r8, [r4]
   1be88:	ldr	r3, [sp, #8]
   1be8c:	cmp	r6, r8
   1be90:	ldrgt	r2, [sp, #4]
   1be94:	addgt	r1, r2, r8, lsl #2
   1be98:	bgt	1beb0 <argp_error@@Base+0x1818>
   1be9c:	b	1becc <argp_error@@Base+0x1834>
   1bea0:	add	r8, r8, #1
   1bea4:	cmp	r6, r8
   1bea8:	str	r8, [r4]
   1beac:	beq	1bef4 <argp_error@@Base+0x185c>
   1beb0:	ldr	r2, [r1], #4
   1beb4:	ldrb	r0, [r2]
   1beb8:	cmp	r0, #45	; 0x2d
   1bebc:	bne	1bea0 <argp_error@@Base+0x1808>
   1bec0:	ldrb	r2, [r2, #1]
   1bec4:	cmp	r2, #0
   1bec8:	beq	1bea0 <argp_error@@Base+0x1808>
   1becc:	mov	r5, r8
   1bed0:	b	1bef8 <argp_error@@Base+0x1860>
   1bed4:	ldr	r5, [r4, #28]
   1bed8:	cmp	r8, r5
   1bedc:	bne	1bdc0 <argp_error@@Base+0x1728>
   1bee0:	mov	r5, r6
   1bee4:	ldr	r9, [r4, #12]
   1bee8:	ldr	fp, [r4, #8]
   1beec:	mvn	r0, #0
   1bef0:	b	1be00 <argp_error@@Base+0x1768>
   1bef4:	mov	r5, r6
   1bef8:	mov	r8, r5
   1befc:	str	r5, [r4, #32]
   1bf00:	b	1bd54 <argp_error@@Base+0x16bc>
   1bf04:	ldrb	r2, [r9, #1]
   1bf08:	cmp	r2, #0
   1bf0c:	beq	1bde0 <argp_error@@Base+0x1748>
   1bf10:	add	r2, r9, #1
   1bf14:	b	1bc64 <argp_error@@Base+0x15cc>
   1bf18:	mov	r5, r3
   1bf1c:	str	r3, [r4, #28]
   1bf20:	b	1bdac <argp_error@@Base+0x1714>
   1bf24:	ldrb	r1, [r0, #2]
   1bf28:	cmp	r1, #58	; 0x3a
   1bf2c:	beq	1bf98 <argp_error@@Base+0x1900>
   1bf30:	ldrb	r2, [r2, #1]
   1bf34:	cmp	r2, #0
   1bf38:	beq	1bf6c <argp_error@@Base+0x18d4>
   1bf3c:	ldr	fp, [r4, #8]
   1bf40:	mov	r0, r8
   1bf44:	add	r5, r5, #1
   1bf48:	str	r5, [r4]
   1bf4c:	str	r9, [r4, #12]
   1bf50:	mov	r3, #0
   1bf54:	str	r3, [r4, #20]
   1bf58:	b	1be00 <argp_error@@Base+0x1768>
   1bf5c:	cmp	r5, r8
   1bf60:	movne	r8, r5
   1bf64:	strne	r5, [r4, #28]
   1bf68:	b	1be8c <argp_error@@Base+0x17f4>
   1bf6c:	cmp	r6, r5
   1bf70:	beq	1bfc4 <argp_error@@Base+0x192c>
   1bf74:	ldr	r2, [sp, #4]
   1bf78:	add	r3, r5, #1
   1bf7c:	ldr	fp, [r4, #8]
   1bf80:	ldr	r9, [r2, r5, lsl #2]
   1bf84:	mov	r0, r8
   1bf88:	mov	r5, r3
   1bf8c:	str	r9, [r4, #12]
   1bf90:	str	r3, [r4]
   1bf94:	b	1bf50 <argp_error@@Base+0x18b8>
   1bf98:	ldrb	r3, [r2, #1]
   1bf9c:	mov	r0, r8
   1bfa0:	ldr	fp, [r4, #8]
   1bfa4:	cmp	r3, #0
   1bfa8:	moveq	r9, r3
   1bfac:	addne	r5, r5, #1
   1bfb0:	mov	r3, #0
   1bfb4:	strne	r5, [r4]
   1bfb8:	str	r9, [r4, #12]
   1bfbc:	str	r3, [r4, #20]
   1bfc0:	b	1be00 <argp_error@@Base+0x1768>
   1bfc4:	cmp	r3, #0
   1bfc8:	beq	1bfec <argp_error@@Base+0x1954>
   1bfcc:	ldr	r3, [sp, #4]
   1bfd0:	ldr	r1, [pc, #72]	; 1c020 <argp_error@@Base+0x1988>
   1bfd4:	ldr	r2, [r3]
   1bfd8:	ldr	r0, [r1]
   1bfdc:	mov	r3, r8
   1bfe0:	ldr	r1, [pc, #64]	; 1c028 <argp_error@@Base+0x1990>
   1bfe4:	bl	11280 <fprintf@plt>
   1bfe8:	ldr	r6, [r4]
   1bfec:	str	r8, [r4, #8]
   1bff0:	ldrb	r8, [sl]
   1bff4:	mov	r5, r6
   1bff8:	cmp	r8, #58	; 0x3a
   1bffc:	moveq	r0, r8
   1c000:	ldreq	r9, [r4, #12]
   1c004:	ldrne	r9, [r4, #12]
   1c008:	movne	r0, #63	; 0x3f
   1c00c:	b	1bf50 <argp_error@@Base+0x18b8>
   1c010:	andeq	r3, r3, r0, lsr #17
   1c014:	andeq	r3, r3, r8, ror #17
   1c018:			; <UNDEFINED> instruction: 0x0001ecbc
   1c01c:	andeq	r3, r3, r4, asr #18
   1c020:			; <UNDEFINED> instruction: 0x000338b8
   1c024:	strdeq	pc, [r1], -ip
   1c028:	andeq	pc, r1, r8, lsl r6	; <UNPREDICTABLE>
   1c02c:	push	{r4, r5, r6, lr}
   1c030:	subs	r4, r2, #0
   1c034:	mov	r6, r0
   1c038:	mov	r5, r1
   1c03c:	beq	1c068 <argp_error@@Base+0x19d0>
   1c040:	mov	r1, r4
   1c044:	mvn	r0, #0
   1c048:	bl	1c8e8 <argp_error@@Base+0x2250>
   1c04c:	cmp	r0, r5
   1c050:	bcs	1c068 <argp_error@@Base+0x19d0>
   1c054:	bl	1128c <__errno_location@plt>
   1c058:	mov	r3, #12
   1c05c:	str	r3, [r0]
   1c060:	mov	r0, #0
   1c064:	pop	{r4, r5, r6, pc}
   1c068:	mul	r1, r5, r4
   1c06c:	mov	r0, r6
   1c070:	pop	{r4, r5, r6, lr}
   1c074:	b	162f8 <_obstack_memory_used@@Base+0x153c>
   1c078:	push	{r4, r5, r6, r7, r8, lr}
   1c07c:	mov	r8, r0
   1c080:	mov	r0, #36	; 0x24
   1c084:	mov	r7, r1
   1c088:	mov	r6, r2
   1c08c:	mov	r5, r3
   1c090:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   1c094:	subs	r4, r0, #0
   1c098:	beq	1c0dc <argp_error@@Base+0x1a44>
   1c09c:	mov	r0, #0
   1c0a0:	str	r5, [r4, #12]
   1c0a4:	str	r0, [r4, #20]
   1c0a8:	str	r0, [r4, #16]
   1c0ac:	str	r8, [r4]
   1c0b0:	str	r7, [r4, #4]
   1c0b4:	str	r6, [r4, #8]
   1c0b8:	mov	r0, #200	; 0xc8
   1c0bc:	bl	162cc <_obstack_memory_used@@Base+0x1510>
   1c0c0:	cmp	r0, #0
   1c0c4:	addne	r3, r0, #200	; 0xc8
   1c0c8:	mov	r5, r0
   1c0cc:	str	r0, [r4, #24]
   1c0d0:	strne	r0, [r4, #28]
   1c0d4:	strne	r3, [r4, #32]
   1c0d8:	beq	1c0e4 <argp_error@@Base+0x1a4c>
   1c0dc:	mov	r0, r4
   1c0e0:	pop	{r4, r5, r6, r7, r8, pc}
   1c0e4:	mov	r0, r4
   1c0e8:	bl	148c4 <argp_parse@@Base+0xf7c>
   1c0ec:	mov	r4, r5
   1c0f0:	b	1c0dc <argp_error@@Base+0x1a44>
   1c0f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0f8:	mov	r7, r0
   1c0fc:	ldr	r4, [r0, #24]
   1c100:	ldr	r3, [r0, #16]
   1c104:	ldr	r9, [r0, #28]
   1c108:	sub	sp, sp, #12
   1c10c:	add	r4, r4, r3
   1c110:	mov	sl, #32
   1c114:	cmp	r4, r9
   1c118:	bcs	1c1ec <argp_error@@Base+0x1b54>
   1c11c:	ldr	r8, [r7, #20]
   1c120:	cmp	r8, #0
   1c124:	bne	1c190 <argp_error@@Base+0x1af8>
   1c128:	ldr	r5, [r7, #4]
   1c12c:	cmp	r5, #0
   1c130:	beq	1c460 <argp_error@@Base+0x1dc8>
   1c134:	ldr	r2, [r7, #32]
   1c138:	add	r3, r9, r5
   1c13c:	cmp	r2, r3
   1c140:	bls	1c158 <argp_error@@Base+0x1ac0>
   1c144:	b	1c588 <argp_error@@Base+0x1ef0>
   1c148:	cmp	r5, r8
   1c14c:	str	r1, [r0, #20]
   1c150:	strb	sl, [r3]
   1c154:	beq	1c184 <argp_error@@Base+0x1aec>
   1c158:	ldr	r0, [r7]
   1c15c:	add	r8, r8, #1
   1c160:	ldr	r3, [r0, #20]
   1c164:	ldr	r2, [r0, #24]
   1c168:	add	r1, r3, #1
   1c16c:	cmp	r3, r2
   1c170:	bcc	1c148 <argp_error@@Base+0x1ab0>
   1c174:	mov	r1, sl
   1c178:	bl	112d4 <__overflow@plt>
   1c17c:	cmp	r5, r8
   1c180:	bne	1c158 <argp_error@@Base+0x1ac0>
   1c184:	ldr	r9, [r7, #28]
   1c188:	mov	r8, r5
   1c18c:	str	r5, [r7, #20]
   1c190:	sub	fp, r9, r4
   1c194:	mov	r2, fp
   1c198:	mov	r1, #10
   1c19c:	mov	r0, r4
   1c1a0:	bl	112c8 <memchr@plt>
   1c1a4:	cmp	r8, #0
   1c1a8:	movlt	r8, #0
   1c1ac:	movlt	r3, r8
   1c1b0:	mov	r5, r0
   1c1b4:	strlt	r3, [r7, #20]
   1c1b8:	cmp	r5, #0
   1c1bc:	beq	1c480 <argp_error@@Base+0x1de8>
   1c1c0:	sub	r2, r5, r4
   1c1c4:	ldr	r3, [r7, #8]
   1c1c8:	add	r2, r2, r8
   1c1cc:	cmp	r2, r3
   1c1d0:	bge	1c200 <argp_error@@Base+0x1b68>
   1c1d4:	ldr	r9, [r7, #28]
   1c1d8:	add	r4, r5, #1
   1c1dc:	mov	r3, #0
   1c1e0:	cmp	r4, r9
   1c1e4:	str	r3, [r7, #20]
   1c1e8:	bcc	1c11c <argp_error@@Base+0x1a84>
   1c1ec:	ldr	r3, [r7, #24]
   1c1f0:	sub	r9, r9, r3
   1c1f4:	str	r9, [r7, #16]
   1c1f8:	add	sp, sp, #12
   1c1fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c200:	ldr	r2, [r7, #12]
   1c204:	sub	r6, r3, #1
   1c208:	cmp	r2, #0
   1c20c:	str	r2, [sp, #4]
   1c210:	blt	1c538 <argp_error@@Base+0x1ea0>
   1c214:	add	r6, r6, #1
   1c218:	sub	r8, r6, r8
   1c21c:	adds	r8, r4, r8
   1c220:	bcs	1c4b8 <argp_error@@Base+0x1e20>
   1c224:	bl	11250 <__ctype_b_loc@plt>
   1c228:	mov	r3, r8
   1c22c:	ldr	r0, [r0]
   1c230:	b	1c23c <argp_error@@Base+0x1ba4>
   1c234:	cmp	r3, r4
   1c238:	bcc	1c4bc <argp_error@@Base+0x1e24>
   1c23c:	mov	r1, r3
   1c240:	sub	r3, r3, #1
   1c244:	ldrb	r2, [r1]
   1c248:	mov	r6, r3
   1c24c:	lsl	r2, r2, #1
   1c250:	ldrh	r2, [r0, r2]
   1c254:	tst	r2, #1
   1c258:	beq	1c234 <argp_error@@Base+0x1b9c>
   1c25c:	add	r6, r1, #1
   1c260:	cmp	r6, r4
   1c264:	bls	1c4d0 <argp_error@@Base+0x1e38>
   1c268:	cmp	r4, r1
   1c26c:	bhi	1c4c8 <argp_error@@Base+0x1e30>
   1c270:	mov	r1, r3
   1c274:	sub	r8, r4, #1
   1c278:	b	1c294 <argp_error@@Base+0x1bfc>
   1c27c:	ldrb	r3, [r1]
   1c280:	sub	r1, r1, #1
   1c284:	lsl	r3, r3, #1
   1c288:	ldrh	r3, [r0, r3]
   1c28c:	tst	r3, #1
   1c290:	beq	1c5c0 <argp_error@@Base+0x1f28>
   1c294:	cmp	r8, r1
   1c298:	mov	r2, r1
   1c29c:	bne	1c27c <argp_error@@Base+0x1be4>
   1c2a0:	add	r8, r8, #1
   1c2a4:	add	r3, fp, #1
   1c2a8:	add	r3, r4, r3
   1c2ac:	cmp	r6, r3
   1c2b0:	beq	1c390 <argp_error@@Base+0x1cf8>
   1c2b4:	add	r5, r8, #1
   1c2b8:	ldr	r3, [sp, #4]
   1c2bc:	sub	r1, r6, r5
   1c2c0:	cmp	r1, r3
   1c2c4:	bge	1c3ac <argp_error@@Base+0x1d14>
   1c2c8:	cmp	r6, r9
   1c2cc:	bcs	1c3a4 <argp_error@@Base+0x1d0c>
   1c2d0:	ldr	r3, [r7, #32]
   1c2d4:	ldr	r2, [sp, #4]
   1c2d8:	sub	r3, r3, r9
   1c2dc:	add	r0, r2, #1
   1c2e0:	cmp	r3, r0
   1c2e4:	bgt	1c5f0 <argp_error@@Base+0x1f58>
   1c2e8:	ldr	r0, [r7, #24]
   1c2ec:	cmp	r8, r0
   1c2f0:	bls	1c304 <argp_error@@Base+0x1c6c>
   1c2f4:	sub	r2, r8, r0
   1c2f8:	ldr	r3, [r7]
   1c2fc:	mov	r1, #1
   1c300:	bl	11184 <fwrite_unlocked@plt>
   1c304:	ldr	r0, [r7]
   1c308:	ldr	r2, [r0, #24]
   1c30c:	ldr	r3, [r0, #20]
   1c310:	cmp	r3, r2
   1c314:	addcc	r2, r3, #1
   1c318:	strcc	r2, [r0, #20]
   1c31c:	movcc	r2, #10
   1c320:	strbcc	r2, [r3]
   1c324:	bcs	1c630 <argp_error@@Base+0x1f98>
   1c328:	ldr	r5, [r7, #24]
   1c32c:	sub	r4, r4, r5
   1c330:	sub	r1, r6, r5
   1c334:	add	fp, fp, r4
   1c338:	mov	r9, r1
   1c33c:	mov	r2, r5
   1c340:	ldr	r3, [r7, #12]
   1c344:	cmp	r3, r1
   1c348:	bgt	1c3c8 <argp_error@@Base+0x1d30>
   1c34c:	cmp	r3, #0
   1c350:	mov	r4, r5
   1c354:	ble	1c36c <argp_error@@Base+0x1cd4>
   1c358:	strb	sl, [r4], #1
   1c35c:	ldr	r3, [r7, #12]
   1c360:	sub	r1, r4, r5
   1c364:	cmp	r1, r3
   1c368:	blt	1c358 <argp_error@@Base+0x1cc0>
   1c36c:	cmp	r4, r6
   1c370:	bcc	1c444 <argp_error@@Base+0x1dac>
   1c374:	sub	r9, fp, r9
   1c378:	cmp	r3, #0
   1c37c:	add	r9, r4, r9
   1c380:	mvneq	r3, #0
   1c384:	str	r9, [r7, #28]
   1c388:	str	r3, [r7, #20]
   1c38c:	b	1c114 <argp_error@@Base+0x1a7c>
   1c390:	ldr	r3, [r7, #32]
   1c394:	ldr	r2, [sp, #4]
   1c398:	sub	r3, r3, r8
   1c39c:	cmp	r3, r2
   1c3a0:	ble	1c2c8 <argp_error@@Base+0x1c30>
   1c3a4:	add	r5, r8, #1
   1c3a8:	sub	r1, r6, r5
   1c3ac:	mov	r3, #10
   1c3b0:	strb	r3, [r8]
   1c3b4:	ldr	r3, [r7, #12]
   1c3b8:	sub	r9, r6, r4
   1c3bc:	cmp	r3, r1
   1c3c0:	mov	r2, r4
   1c3c4:	ble	1c34c <argp_error@@Base+0x1cb4>
   1c3c8:	add	r1, fp, #1
   1c3cc:	add	r1, r2, r1
   1c3d0:	cmp	r6, r1
   1c3d4:	beq	1c5dc <argp_error@@Base+0x1f44>
   1c3d8:	cmp	r3, #0
   1c3dc:	ble	1c438 <argp_error@@Base+0x1da0>
   1c3e0:	mov	r4, #0
   1c3e4:	mov	r8, r2
   1c3e8:	b	1c404 <argp_error@@Base+0x1d6c>
   1c3ec:	str	ip, [r0, #20]
   1c3f0:	strb	sl, [r3]
   1c3f4:	ldr	r3, [r7, #12]
   1c3f8:	add	r4, r4, #1
   1c3fc:	cmp	r3, r4
   1c400:	ble	1c434 <argp_error@@Base+0x1d9c>
   1c404:	ldr	r0, [r7]
   1c408:	ldr	r3, [r0, #20]
   1c40c:	ldr	r1, [r0, #24]
   1c410:	add	ip, r3, #1
   1c414:	cmp	r3, r1
   1c418:	bcc	1c3ec <argp_error@@Base+0x1d54>
   1c41c:	mov	r1, sl
   1c420:	bl	112d4 <__overflow@plt>
   1c424:	ldr	r3, [r7, #12]
   1c428:	add	r4, r4, #1
   1c42c:	cmp	r3, r4
   1c430:	bgt	1c404 <argp_error@@Base+0x1d6c>
   1c434:	mov	r2, r8
   1c438:	mov	r4, r5
   1c43c:	cmp	r4, r6
   1c440:	bcs	1c374 <argp_error@@Base+0x1cdc>
   1c444:	add	r2, r2, fp
   1c448:	sub	r2, r2, r6
   1c44c:	mov	r1, r6
   1c450:	mov	r0, r4
   1c454:	bl	11118 <memmove@plt>
   1c458:	ldr	r3, [r7, #12]
   1c45c:	b	1c374 <argp_error@@Base+0x1cdc>
   1c460:	sub	fp, r9, r4
   1c464:	mov	r2, fp
   1c468:	mov	r1, #10
   1c46c:	mov	r0, r4
   1c470:	bl	112c8 <memchr@plt>
   1c474:	mov	r5, r0
   1c478:	cmp	r5, #0
   1c47c:	bne	1c1c0 <argp_error@@Base+0x1b28>
   1c480:	ldr	r6, [r7, #8]
   1c484:	add	r3, fp, r8
   1c488:	cmp	r3, r6
   1c48c:	bcc	1c654 <argp_error@@Base+0x1fbc>
   1c490:	ldr	r2, [r7, #12]
   1c494:	sub	r6, r6, #1
   1c498:	cmp	r2, #0
   1c49c:	str	r2, [sp, #4]
   1c4a0:	blt	1c640 <argp_error@@Base+0x1fa8>
   1c4a4:	add	r6, r6, #1
   1c4a8:	sub	r8, r6, r8
   1c4ac:	adds	r8, r4, r8
   1c4b0:	mov	r5, r9
   1c4b4:	bcc	1c224 <argp_error@@Base+0x1b8c>
   1c4b8:	mov	r6, r8
   1c4bc:	add	r6, r6, #1
   1c4c0:	cmp	r4, r6
   1c4c4:	bcs	1c4d0 <argp_error@@Base+0x1e38>
   1c4c8:	mov	r8, r6
   1c4cc:	b	1c2a4 <argp_error@@Base+0x1c0c>
   1c4d0:	cmp	r8, r5
   1c4d4:	bcs	1c50c <argp_error@@Base+0x1e74>
   1c4d8:	add	r6, r8, #1
   1c4dc:	b	1c500 <argp_error@@Base+0x1e68>
   1c4e0:	bl	11250 <__ctype_b_loc@plt>
   1c4e4:	ldrb	r3, [r6]
   1c4e8:	add	r6, r6, #1
   1c4ec:	lsl	r3, r3, #1
   1c4f0:	ldr	r2, [r0]
   1c4f4:	ldrh	r3, [r2, r3]
   1c4f8:	tst	r3, #1
   1c4fc:	bne	1c51c <argp_error@@Base+0x1e84>
   1c500:	cmp	r6, r5
   1c504:	mov	r8, r6
   1c508:	bne	1c4e0 <argp_error@@Base+0x1e48>
   1c50c:	cmp	r8, r5
   1c510:	beq	1c5c8 <argp_error@@Base+0x1f30>
   1c514:	bl	11250 <__ctype_b_loc@plt>
   1c518:	ldr	r2, [r0]
   1c51c:	mov	r6, r8
   1c520:	ldrb	r3, [r6, #1]!
   1c524:	lsl	r3, r3, #1
   1c528:	ldrh	r3, [r2, r3]
   1c52c:	tst	r3, #1
   1c530:	bne	1c520 <argp_error@@Base+0x1e88>
   1c534:	b	1c2a4 <argp_error@@Base+0x1c0c>
   1c538:	cmp	r9, r5
   1c53c:	str	r3, [sp, #4]
   1c540:	bls	1c63c <argp_error@@Base+0x1fa4>
   1c544:	sub	r0, r6, r8
   1c548:	sub	r2, r9, r5
   1c54c:	add	r0, r4, r0
   1c550:	mov	r1, r5
   1c554:	bl	11118 <memmove@plt>
   1c558:	ldr	r2, [r7, #20]
   1c55c:	ldr	r9, [r7, #28]
   1c560:	sub	r6, r6, r2
   1c564:	add	r6, r4, r6
   1c568:	mov	r3, #0
   1c56c:	sub	r5, r6, r5
   1c570:	str	r3, [r7, #20]
   1c574:	ldr	r3, [sp, #4]
   1c578:	sub	r9, r9, r5
   1c57c:	add	r4, r4, r3
   1c580:	str	r9, [r7, #28]
   1c584:	b	1c114 <argp_error@@Base+0x1a7c>
   1c588:	add	r6, r4, r5
   1c58c:	sub	r2, r9, r4
   1c590:	mov	r1, r4
   1c594:	mov	r0, r6
   1c598:	bl	11118 <memmove@plt>
   1c59c:	ldr	r3, [r7, #28]
   1c5a0:	mov	r0, r4
   1c5a4:	add	r3, r3, r5
   1c5a8:	str	r3, [r7, #28]
   1c5ac:	mov	r2, r5
   1c5b0:	mov	r1, sl
   1c5b4:	mov	r4, r6
   1c5b8:	bl	112b0 <memset@plt>
   1c5bc:	b	1c184 <argp_error@@Base+0x1aec>
   1c5c0:	add	r8, r2, #1
   1c5c4:	b	1c2a4 <argp_error@@Base+0x1c0c>
   1c5c8:	mov	r3, #0
   1c5cc:	str	r3, [r7, #20]
   1c5d0:	add	r4, r8, #1
   1c5d4:	ldr	r9, [r7, #28]
   1c5d8:	b	1c114 <argp_error@@Base+0x1a7c>
   1c5dc:	ldr	r1, [r7, #32]
   1c5e0:	sub	r1, r1, r6
   1c5e4:	cmp	r3, r1
   1c5e8:	ble	1c34c <argp_error@@Base+0x1cb4>
   1c5ec:	b	1c3d8 <argp_error@@Base+0x1d40>
   1c5f0:	sub	r9, r9, r6
   1c5f4:	mov	r1, r6
   1c5f8:	mov	r2, r9
   1c5fc:	add	r0, r8, r0
   1c600:	bl	11118 <memmove@plt>
   1c604:	ldr	r1, [r7, #12]
   1c608:	mov	r3, #10
   1c60c:	add	r6, r1, #1
   1c610:	add	r6, r8, r6
   1c614:	add	r9, r6, r9
   1c618:	sub	fp, r9, r4
   1c61c:	add	r5, r8, #1
   1c620:	strb	r3, [r8]
   1c624:	sub	r9, r6, r4
   1c628:	mov	r2, r4
   1c62c:	b	1c340 <argp_error@@Base+0x1ca8>
   1c630:	mov	r1, #10
   1c634:	bl	112d4 <__overflow@plt>
   1c638:	b	1c328 <argp_error@@Base+0x1c90>
   1c63c:	add	r3, r8, fp
   1c640:	sub	r6, r6, r3
   1c644:	add	r9, r9, r6
   1c648:	str	r9, [r7, #28]
   1c64c:	str	r3, [r7, #20]
   1c650:	b	1c1ec <argp_error@@Base+0x1b54>
   1c654:	str	r3, [r7, #20]
   1c658:	ldr	r9, [r7, #28]
   1c65c:	b	1c1ec <argp_error@@Base+0x1b54>
   1c660:	push	{r4, lr}
   1c664:	mov	r4, r0
   1c668:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1c66c:	ldr	r2, [r4, #28]
   1c670:	ldr	r0, [r4, #24]
   1c674:	cmp	r2, r0
   1c678:	bls	1c690 <argp_error@@Base+0x1ff8>
   1c67c:	sub	r2, r2, r0
   1c680:	ldr	r3, [r4]
   1c684:	mov	r1, #1
   1c688:	bl	11184 <fwrite_unlocked@plt>
   1c68c:	ldr	r0, [r4, #24]
   1c690:	bl	148c4 <argp_parse@@Base+0xf7c>
   1c694:	mov	r0, r4
   1c698:	pop	{r4, lr}
   1c69c:	b	148c4 <argp_parse@@Base+0xf7c>
   1c6a0:	ldr	r3, [r0, #32]
   1c6a4:	ldr	r2, [r0, #28]
   1c6a8:	sub	r3, r3, r2
   1c6ac:	cmp	r3, r1
   1c6b0:	bcc	1c6c0 <argp_error@@Base+0x2028>
   1c6b4:	mov	r3, #1
   1c6b8:	mov	r0, r3
   1c6bc:	bx	lr
   1c6c0:	push	{r4, r5, r6, lr}
   1c6c4:	mov	r4, r0
   1c6c8:	mov	r5, r1
   1c6cc:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1c6d0:	ldr	r3, [r4, #24]
   1c6d4:	ldr	r2, [r4, #28]
   1c6d8:	mov	r0, r3
   1c6dc:	sub	r2, r2, r3
   1c6e0:	mov	r1, #1
   1c6e4:	ldr	r3, [r4]
   1c6e8:	bl	11184 <fwrite_unlocked@plt>
   1c6ec:	ldr	r2, [r4, #28]
   1c6f0:	ldr	r3, [r4, #24]
   1c6f4:	sub	r1, r2, r3
   1c6f8:	cmp	r0, r1
   1c6fc:	bne	1c744 <argp_error@@Base+0x20ac>
   1c700:	ldr	r1, [r4, #32]
   1c704:	mov	r2, #0
   1c708:	sub	r1, r1, r3
   1c70c:	cmp	r5, r1
   1c710:	str	r3, [r4, #28]
   1c714:	str	r2, [r4, #16]
   1c718:	bls	1c738 <argp_error@@Base+0x20a0>
   1c71c:	adds	r5, r5, r1
   1c720:	bcc	1c774 <argp_error@@Base+0x20dc>
   1c724:	bl	1128c <__errno_location@plt>
   1c728:	mov	r2, #12
   1c72c:	mov	r3, #0
   1c730:	str	r2, [r0]
   1c734:	b	1c73c <argp_error@@Base+0x20a4>
   1c738:	mov	r3, #1
   1c73c:	mov	r0, r3
   1c740:	pop	{r4, r5, r6, pc}
   1c744:	ldr	r1, [r4, #16]
   1c748:	sub	r2, r2, r0
   1c74c:	sub	r1, r1, r0
   1c750:	str	r2, [r4, #28]
   1c754:	str	r1, [r4, #16]
   1c758:	sub	r2, r2, r3
   1c75c:	add	r1, r3, r0
   1c760:	mov	r0, r3
   1c764:	bl	11118 <memmove@plt>
   1c768:	mov	r3, #0
   1c76c:	mov	r0, r3
   1c770:	pop	{r4, r5, r6, pc}
   1c774:	mov	r0, r3
   1c778:	mov	r1, r5
   1c77c:	bl	162f8 <_obstack_memory_used@@Base+0x153c>
   1c780:	cmp	r0, #0
   1c784:	beq	1c724 <argp_error@@Base+0x208c>
   1c788:	add	r5, r0, r5
   1c78c:	mov	r3, #1
   1c790:	str	r5, [r4, #32]
   1c794:	str	r0, [r4, #24]
   1c798:	str	r0, [r4, #28]
   1c79c:	b	1c73c <argp_error@@Base+0x20a4>
   1c7a0:	push	{r1, r2, r3}
   1c7a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c7a8:	sub	sp, sp, #8
   1c7ac:	mov	r5, r0
   1c7b0:	ldr	r7, [sp, #36]	; 0x24
   1c7b4:	mov	r4, #150	; 0x96
   1c7b8:	mov	r8, #1
   1c7bc:	mov	r9, #0
   1c7c0:	add	r6, sp, #40	; 0x28
   1c7c4:	ldr	r1, [r5, #32]
   1c7c8:	ldr	r0, [r5, #28]
   1c7cc:	sub	r3, r1, r0
   1c7d0:	cmp	r4, r3
   1c7d4:	bhi	1c81c <argp_error@@Base+0x2184>
   1c7d8:	sub	r4, r1, r0
   1c7dc:	mov	r1, r4
   1c7e0:	mov	r3, r6
   1c7e4:	mov	r2, r7
   1c7e8:	str	r6, [sp, #4]
   1c7ec:	bl	11328 <vsnprintf@plt>
   1c7f0:	cmp	r4, r0
   1c7f4:	bls	1c814 <argp_error@@Base+0x217c>
   1c7f8:	ldr	r3, [r5, #28]
   1c7fc:	add	r3, r3, r0
   1c800:	str	r3, [r5, #28]
   1c804:	add	sp, sp, #8
   1c808:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1c80c:	add	sp, sp, #12
   1c810:	bx	lr
   1c814:	add	r4, r0, #1
   1c818:	b	1c7c4 <argp_error@@Base+0x212c>
   1c81c:	mov	r0, r5
   1c820:	bl	1c0f4 <argp_error@@Base+0x1a5c>
   1c824:	ldr	r3, [r5, #24]
   1c828:	ldr	r2, [r5, #28]
   1c82c:	mov	r0, r3
   1c830:	sub	r2, r2, r3
   1c834:	mov	r1, r8
   1c838:	ldr	r3, [r5]
   1c83c:	bl	11184 <fwrite_unlocked@plt>
   1c840:	ldr	r2, [r5, #28]
   1c844:	ldr	r3, [r5, #24]
   1c848:	sub	r1, r2, r3
   1c84c:	cmp	r0, r1
   1c850:	bne	1c898 <argp_error@@Base+0x2200>
   1c854:	ldr	r1, [r5, #32]
   1c858:	str	r3, [r5, #28]
   1c85c:	sub	r0, r1, r3
   1c860:	cmp	r4, r0
   1c864:	str	r9, [r5, #16]
   1c868:	movls	r0, r3
   1c86c:	bls	1c7d8 <argp_error@@Base+0x2140>
   1c870:	adds	r4, r4, r0
   1c874:	bcc	1c8c0 <argp_error@@Base+0x2228>
   1c878:	bl	1128c <__errno_location@plt>
   1c87c:	mov	r3, #12
   1c880:	str	r3, [r0]
   1c884:	mvn	r0, #0
   1c888:	add	sp, sp, #8
   1c88c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1c890:	add	sp, sp, #12
   1c894:	bx	lr
   1c898:	ldr	r1, [r5, #16]
   1c89c:	sub	r2, r2, r0
   1c8a0:	sub	r1, r1, r0
   1c8a4:	str	r2, [r5, #28]
   1c8a8:	str	r1, [r5, #16]
   1c8ac:	sub	r2, r2, r3
   1c8b0:	add	r1, r3, r0
   1c8b4:	mov	r0, r3
   1c8b8:	bl	11118 <memmove@plt>
   1c8bc:	b	1c884 <argp_error@@Base+0x21ec>
   1c8c0:	mov	r1, r4
   1c8c4:	mov	r0, r3
   1c8c8:	bl	162f8 <_obstack_memory_used@@Base+0x153c>
   1c8cc:	cmp	r0, #0
   1c8d0:	add	r1, r0, r4
   1c8d4:	beq	1c878 <argp_error@@Base+0x21e0>
   1c8d8:	str	r0, [r5, #24]
   1c8dc:	str	r1, [r5, #32]
   1c8e0:	str	r0, [r5, #28]
   1c8e4:	b	1c7d8 <argp_error@@Base+0x2140>
   1c8e8:	subs	r2, r1, #1
   1c8ec:	bxeq	lr
   1c8f0:	bcc	1cac8 <argp_error@@Base+0x2430>
   1c8f4:	cmp	r0, r1
   1c8f8:	bls	1caac <argp_error@@Base+0x2414>
   1c8fc:	tst	r1, r2
   1c900:	beq	1cab8 <argp_error@@Base+0x2420>
   1c904:	clz	r3, r0
   1c908:	clz	r2, r1
   1c90c:	sub	r3, r2, r3
   1c910:	rsbs	r3, r3, #31
   1c914:	addne	r3, r3, r3, lsl #1
   1c918:	mov	r2, #0
   1c91c:	addne	pc, pc, r3, lsl #2
   1c920:	nop			; (mov r0, r0)
   1c924:	cmp	r0, r1, lsl #31
   1c928:	adc	r2, r2, r2
   1c92c:	subcs	r0, r0, r1, lsl #31
   1c930:	cmp	r0, r1, lsl #30
   1c934:	adc	r2, r2, r2
   1c938:	subcs	r0, r0, r1, lsl #30
   1c93c:	cmp	r0, r1, lsl #29
   1c940:	adc	r2, r2, r2
   1c944:	subcs	r0, r0, r1, lsl #29
   1c948:	cmp	r0, r1, lsl #28
   1c94c:	adc	r2, r2, r2
   1c950:	subcs	r0, r0, r1, lsl #28
   1c954:	cmp	r0, r1, lsl #27
   1c958:	adc	r2, r2, r2
   1c95c:	subcs	r0, r0, r1, lsl #27
   1c960:	cmp	r0, r1, lsl #26
   1c964:	adc	r2, r2, r2
   1c968:	subcs	r0, r0, r1, lsl #26
   1c96c:	cmp	r0, r1, lsl #25
   1c970:	adc	r2, r2, r2
   1c974:	subcs	r0, r0, r1, lsl #25
   1c978:	cmp	r0, r1, lsl #24
   1c97c:	adc	r2, r2, r2
   1c980:	subcs	r0, r0, r1, lsl #24
   1c984:	cmp	r0, r1, lsl #23
   1c988:	adc	r2, r2, r2
   1c98c:	subcs	r0, r0, r1, lsl #23
   1c990:	cmp	r0, r1, lsl #22
   1c994:	adc	r2, r2, r2
   1c998:	subcs	r0, r0, r1, lsl #22
   1c99c:	cmp	r0, r1, lsl #21
   1c9a0:	adc	r2, r2, r2
   1c9a4:	subcs	r0, r0, r1, lsl #21
   1c9a8:	cmp	r0, r1, lsl #20
   1c9ac:	adc	r2, r2, r2
   1c9b0:	subcs	r0, r0, r1, lsl #20
   1c9b4:	cmp	r0, r1, lsl #19
   1c9b8:	adc	r2, r2, r2
   1c9bc:	subcs	r0, r0, r1, lsl #19
   1c9c0:	cmp	r0, r1, lsl #18
   1c9c4:	adc	r2, r2, r2
   1c9c8:	subcs	r0, r0, r1, lsl #18
   1c9cc:	cmp	r0, r1, lsl #17
   1c9d0:	adc	r2, r2, r2
   1c9d4:	subcs	r0, r0, r1, lsl #17
   1c9d8:	cmp	r0, r1, lsl #16
   1c9dc:	adc	r2, r2, r2
   1c9e0:	subcs	r0, r0, r1, lsl #16
   1c9e4:	cmp	r0, r1, lsl #15
   1c9e8:	adc	r2, r2, r2
   1c9ec:	subcs	r0, r0, r1, lsl #15
   1c9f0:	cmp	r0, r1, lsl #14
   1c9f4:	adc	r2, r2, r2
   1c9f8:	subcs	r0, r0, r1, lsl #14
   1c9fc:	cmp	r0, r1, lsl #13
   1ca00:	adc	r2, r2, r2
   1ca04:	subcs	r0, r0, r1, lsl #13
   1ca08:	cmp	r0, r1, lsl #12
   1ca0c:	adc	r2, r2, r2
   1ca10:	subcs	r0, r0, r1, lsl #12
   1ca14:	cmp	r0, r1, lsl #11
   1ca18:	adc	r2, r2, r2
   1ca1c:	subcs	r0, r0, r1, lsl #11
   1ca20:	cmp	r0, r1, lsl #10
   1ca24:	adc	r2, r2, r2
   1ca28:	subcs	r0, r0, r1, lsl #10
   1ca2c:	cmp	r0, r1, lsl #9
   1ca30:	adc	r2, r2, r2
   1ca34:	subcs	r0, r0, r1, lsl #9
   1ca38:	cmp	r0, r1, lsl #8
   1ca3c:	adc	r2, r2, r2
   1ca40:	subcs	r0, r0, r1, lsl #8
   1ca44:	cmp	r0, r1, lsl #7
   1ca48:	adc	r2, r2, r2
   1ca4c:	subcs	r0, r0, r1, lsl #7
   1ca50:	cmp	r0, r1, lsl #6
   1ca54:	adc	r2, r2, r2
   1ca58:	subcs	r0, r0, r1, lsl #6
   1ca5c:	cmp	r0, r1, lsl #5
   1ca60:	adc	r2, r2, r2
   1ca64:	subcs	r0, r0, r1, lsl #5
   1ca68:	cmp	r0, r1, lsl #4
   1ca6c:	adc	r2, r2, r2
   1ca70:	subcs	r0, r0, r1, lsl #4
   1ca74:	cmp	r0, r1, lsl #3
   1ca78:	adc	r2, r2, r2
   1ca7c:	subcs	r0, r0, r1, lsl #3
   1ca80:	cmp	r0, r1, lsl #2
   1ca84:	adc	r2, r2, r2
   1ca88:	subcs	r0, r0, r1, lsl #2
   1ca8c:	cmp	r0, r1, lsl #1
   1ca90:	adc	r2, r2, r2
   1ca94:	subcs	r0, r0, r1, lsl #1
   1ca98:	cmp	r0, r1
   1ca9c:	adc	r2, r2, r2
   1caa0:	subcs	r0, r0, r1
   1caa4:	mov	r0, r2
   1caa8:	bx	lr
   1caac:	moveq	r0, #1
   1cab0:	movne	r0, #0
   1cab4:	bx	lr
   1cab8:	clz	r2, r1
   1cabc:	rsb	r2, r2, #31
   1cac0:	lsr	r0, r0, r2
   1cac4:	bx	lr
   1cac8:	cmp	r0, #0
   1cacc:	mvnne	r0, #0
   1cad0:	b	1cd34 <argp_error@@Base+0x269c>
   1cad4:	cmp	r1, #0
   1cad8:	beq	1cac8 <argp_error@@Base+0x2430>
   1cadc:	push	{r0, r1, lr}
   1cae0:	bl	1c8e8 <argp_error@@Base+0x2250>
   1cae4:	pop	{r1, r2, lr}
   1cae8:	mul	r3, r2, r0
   1caec:	sub	r1, r1, r3
   1caf0:	bx	lr
   1caf4:	cmp	r1, #0
   1caf8:	beq	1cd04 <argp_error@@Base+0x266c>
   1cafc:	eor	ip, r0, r1
   1cb00:	rsbmi	r1, r1, #0
   1cb04:	subs	r2, r1, #1
   1cb08:	beq	1ccd0 <argp_error@@Base+0x2638>
   1cb0c:	movs	r3, r0
   1cb10:	rsbmi	r3, r0, #0
   1cb14:	cmp	r3, r1
   1cb18:	bls	1ccdc <argp_error@@Base+0x2644>
   1cb1c:	tst	r1, r2
   1cb20:	beq	1ccec <argp_error@@Base+0x2654>
   1cb24:	clz	r2, r3
   1cb28:	clz	r0, r1
   1cb2c:	sub	r2, r0, r2
   1cb30:	rsbs	r2, r2, #31
   1cb34:	addne	r2, r2, r2, lsl #1
   1cb38:	mov	r0, #0
   1cb3c:	addne	pc, pc, r2, lsl #2
   1cb40:	nop			; (mov r0, r0)
   1cb44:	cmp	r3, r1, lsl #31
   1cb48:	adc	r0, r0, r0
   1cb4c:	subcs	r3, r3, r1, lsl #31
   1cb50:	cmp	r3, r1, lsl #30
   1cb54:	adc	r0, r0, r0
   1cb58:	subcs	r3, r3, r1, lsl #30
   1cb5c:	cmp	r3, r1, lsl #29
   1cb60:	adc	r0, r0, r0
   1cb64:	subcs	r3, r3, r1, lsl #29
   1cb68:	cmp	r3, r1, lsl #28
   1cb6c:	adc	r0, r0, r0
   1cb70:	subcs	r3, r3, r1, lsl #28
   1cb74:	cmp	r3, r1, lsl #27
   1cb78:	adc	r0, r0, r0
   1cb7c:	subcs	r3, r3, r1, lsl #27
   1cb80:	cmp	r3, r1, lsl #26
   1cb84:	adc	r0, r0, r0
   1cb88:	subcs	r3, r3, r1, lsl #26
   1cb8c:	cmp	r3, r1, lsl #25
   1cb90:	adc	r0, r0, r0
   1cb94:	subcs	r3, r3, r1, lsl #25
   1cb98:	cmp	r3, r1, lsl #24
   1cb9c:	adc	r0, r0, r0
   1cba0:	subcs	r3, r3, r1, lsl #24
   1cba4:	cmp	r3, r1, lsl #23
   1cba8:	adc	r0, r0, r0
   1cbac:	subcs	r3, r3, r1, lsl #23
   1cbb0:	cmp	r3, r1, lsl #22
   1cbb4:	adc	r0, r0, r0
   1cbb8:	subcs	r3, r3, r1, lsl #22
   1cbbc:	cmp	r3, r1, lsl #21
   1cbc0:	adc	r0, r0, r0
   1cbc4:	subcs	r3, r3, r1, lsl #21
   1cbc8:	cmp	r3, r1, lsl #20
   1cbcc:	adc	r0, r0, r0
   1cbd0:	subcs	r3, r3, r1, lsl #20
   1cbd4:	cmp	r3, r1, lsl #19
   1cbd8:	adc	r0, r0, r0
   1cbdc:	subcs	r3, r3, r1, lsl #19
   1cbe0:	cmp	r3, r1, lsl #18
   1cbe4:	adc	r0, r0, r0
   1cbe8:	subcs	r3, r3, r1, lsl #18
   1cbec:	cmp	r3, r1, lsl #17
   1cbf0:	adc	r0, r0, r0
   1cbf4:	subcs	r3, r3, r1, lsl #17
   1cbf8:	cmp	r3, r1, lsl #16
   1cbfc:	adc	r0, r0, r0
   1cc00:	subcs	r3, r3, r1, lsl #16
   1cc04:	cmp	r3, r1, lsl #15
   1cc08:	adc	r0, r0, r0
   1cc0c:	subcs	r3, r3, r1, lsl #15
   1cc10:	cmp	r3, r1, lsl #14
   1cc14:	adc	r0, r0, r0
   1cc18:	subcs	r3, r3, r1, lsl #14
   1cc1c:	cmp	r3, r1, lsl #13
   1cc20:	adc	r0, r0, r0
   1cc24:	subcs	r3, r3, r1, lsl #13
   1cc28:	cmp	r3, r1, lsl #12
   1cc2c:	adc	r0, r0, r0
   1cc30:	subcs	r3, r3, r1, lsl #12
   1cc34:	cmp	r3, r1, lsl #11
   1cc38:	adc	r0, r0, r0
   1cc3c:	subcs	r3, r3, r1, lsl #11
   1cc40:	cmp	r3, r1, lsl #10
   1cc44:	adc	r0, r0, r0
   1cc48:	subcs	r3, r3, r1, lsl #10
   1cc4c:	cmp	r3, r1, lsl #9
   1cc50:	adc	r0, r0, r0
   1cc54:	subcs	r3, r3, r1, lsl #9
   1cc58:	cmp	r3, r1, lsl #8
   1cc5c:	adc	r0, r0, r0
   1cc60:	subcs	r3, r3, r1, lsl #8
   1cc64:	cmp	r3, r1, lsl #7
   1cc68:	adc	r0, r0, r0
   1cc6c:	subcs	r3, r3, r1, lsl #7
   1cc70:	cmp	r3, r1, lsl #6
   1cc74:	adc	r0, r0, r0
   1cc78:	subcs	r3, r3, r1, lsl #6
   1cc7c:	cmp	r3, r1, lsl #5
   1cc80:	adc	r0, r0, r0
   1cc84:	subcs	r3, r3, r1, lsl #5
   1cc88:	cmp	r3, r1, lsl #4
   1cc8c:	adc	r0, r0, r0
   1cc90:	subcs	r3, r3, r1, lsl #4
   1cc94:	cmp	r3, r1, lsl #3
   1cc98:	adc	r0, r0, r0
   1cc9c:	subcs	r3, r3, r1, lsl #3
   1cca0:	cmp	r3, r1, lsl #2
   1cca4:	adc	r0, r0, r0
   1cca8:	subcs	r3, r3, r1, lsl #2
   1ccac:	cmp	r3, r1, lsl #1
   1ccb0:	adc	r0, r0, r0
   1ccb4:	subcs	r3, r3, r1, lsl #1
   1ccb8:	cmp	r3, r1
   1ccbc:	adc	r0, r0, r0
   1ccc0:	subcs	r3, r3, r1
   1ccc4:	cmp	ip, #0
   1ccc8:	rsbmi	r0, r0, #0
   1cccc:	bx	lr
   1ccd0:	teq	ip, r0
   1ccd4:	rsbmi	r0, r0, #0
   1ccd8:	bx	lr
   1ccdc:	movcc	r0, #0
   1cce0:	asreq	r0, ip, #31
   1cce4:	orreq	r0, r0, #1
   1cce8:	bx	lr
   1ccec:	clz	r2, r1
   1ccf0:	rsb	r2, r2, #31
   1ccf4:	cmp	ip, #0
   1ccf8:	lsr	r0, r3, r2
   1ccfc:	rsbmi	r0, r0, #0
   1cd00:	bx	lr
   1cd04:	cmp	r0, #0
   1cd08:	mvngt	r0, #-2147483648	; 0x80000000
   1cd0c:	movlt	r0, #-2147483648	; 0x80000000
   1cd10:	b	1cd34 <argp_error@@Base+0x269c>
   1cd14:	cmp	r1, #0
   1cd18:	beq	1cd04 <argp_error@@Base+0x266c>
   1cd1c:	push	{r0, r1, lr}
   1cd20:	bl	1cafc <argp_error@@Base+0x2464>
   1cd24:	pop	{r1, r2, lr}
   1cd28:	mul	r3, r2, r0
   1cd2c:	sub	r1, r1, r3
   1cd30:	bx	lr
   1cd34:	push	{r1, lr}
   1cd38:	mov	r0, #8
   1cd3c:	bl	110dc <raise@plt>
   1cd40:	pop	{r1, pc}
   1cd44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cd48:	mov	r7, r0
   1cd4c:	ldr	r6, [pc, #72]	; 1cd9c <argp_error@@Base+0x2704>
   1cd50:	ldr	r5, [pc, #72]	; 1cda0 <argp_error@@Base+0x2708>
   1cd54:	add	r6, pc, r6
   1cd58:	add	r5, pc, r5
   1cd5c:	sub	r6, r6, r5
   1cd60:	mov	r8, r1
   1cd64:	mov	r9, r2
   1cd68:	bl	11098 <fdopen@plt-0x20>
   1cd6c:	asrs	r6, r6, #2
   1cd70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd74:	mov	r4, #0
   1cd78:	add	r4, r4, #1
   1cd7c:	ldr	r3, [r5], #4
   1cd80:	mov	r2, r9
   1cd84:	mov	r1, r8
   1cd88:	mov	r0, r7
   1cd8c:	blx	r3
   1cd90:	cmp	r6, r4
   1cd94:	bne	1cd78 <argp_error@@Base+0x26e0>
   1cd98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd9c:			; <UNDEFINED> instruction: 0x000131b4
   1cda0:	andeq	r3, r1, ip, lsr #3
   1cda4:	bx	lr

Disassembly of section .fini:

0001cda8 <.fini>:
   1cda8:	push	{r3, lr}
   1cdac:	pop	{r3, pc}
