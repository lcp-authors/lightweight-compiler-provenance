
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

00013ea0 <.init>:
   13ea0:	push	{r3, lr}
   13ea4:	bl	141d0 <_start@@Base+0x3c>
   13ea8:	pop	{r3, pc}

Disassembly of section .plt:

00013eac <calloc@plt-0x14>:
   13eac:	push	{lr}		; (str lr, [sp, #-4]!)
   13eb0:	ldr	lr, [pc, #4]	; 13ebc <calloc@plt-0x4>
   13eb4:	add	lr, pc, lr
   13eb8:	ldr	pc, [lr, #8]!
   13ebc:	andeq	r6, r4, r4, asr #2

00013ec0 <calloc@plt>:
   13ec0:	add	ip, pc, #0, 12
   13ec4:	add	ip, ip, #286720	; 0x46000
   13ec8:	ldr	pc, [ip, #324]!	; 0x144

00013ecc <raise@plt>:
   13ecc:	add	ip, pc, #0, 12
   13ed0:	add	ip, ip, #286720	; 0x46000
   13ed4:	ldr	pc, [ip, #316]!	; 0x13c

00013ed8 <strcmp@plt>:
   13ed8:	add	ip, pc, #0, 12
   13edc:	add	ip, ip, #286720	; 0x46000
   13ee0:	ldr	pc, [ip, #308]!	; 0x134

00013ee4 <fopen@plt>:
   13ee4:	add	ip, pc, #0, 12
   13ee8:	add	ip, ip, #286720	; 0x46000
   13eec:	ldr	pc, [ip, #300]!	; 0x12c

00013ef0 <free@plt>:
   13ef0:	add	ip, pc, #0, 12
   13ef4:	add	ip, ip, #286720	; 0x46000
   13ef8:	ldr	pc, [ip, #292]!	; 0x124

00013efc <memcpy@plt>:
   13efc:	add	ip, pc, #0, 12
   13f00:	add	ip, ip, #286720	; 0x46000
   13f04:	ldr	pc, [ip, #284]!	; 0x11c

00013f08 <ftell@plt>:
   13f08:	add	ip, pc, #0, 12
   13f0c:	add	ip, ip, #286720	; 0x46000
   13f10:	ldr	pc, [ip, #276]!	; 0x114

00013f14 <memcmp@plt>:
   13f14:	add	ip, pc, #0, 12
   13f18:	add	ip, ip, #286720	; 0x46000
   13f1c:	ldr	pc, [ip, #268]!	; 0x10c

00013f20 <rewind@plt>:
   13f20:	add	ip, pc, #0, 12
   13f24:	add	ip, ip, #286720	; 0x46000
   13f28:	ldr	pc, [ip, #260]!	; 0x104

00013f2c <realloc@plt>:
   13f2c:	add	ip, pc, #0, 12
   13f30:	add	ip, ip, #286720	; 0x46000
   13f34:	ldr	pc, [ip, #252]!	; 0xfc

00013f38 <fwrite@plt>:
   13f38:	add	ip, pc, #0, 12
   13f3c:	add	ip, ip, #286720	; 0x46000
   13f40:	ldr	pc, [ip, #244]!	; 0xf4

00013f44 <strcpy@plt>:
   13f44:	add	ip, pc, #0, 12
   13f48:	add	ip, ip, #286720	; 0x46000
   13f4c:	ldr	pc, [ip, #236]!	; 0xec

00013f50 <fread@plt>:
   13f50:	add	ip, pc, #0, 12
   13f54:	add	ip, ip, #286720	; 0x46000
   13f58:	ldr	pc, [ip, #228]!	; 0xe4

00013f5c <puts@plt>:
   13f5c:	add	ip, pc, #0, 12
   13f60:	add	ip, ip, #286720	; 0x46000
   13f64:	ldr	pc, [ip, #220]!	; 0xdc

00013f68 <malloc@plt>:
   13f68:	add	ip, pc, #0, 12
   13f6c:	add	ip, ip, #286720	; 0x46000
   13f70:	ldr	pc, [ip, #212]!	; 0xd4

00013f74 <__libc_start_main@plt>:
   13f74:	add	ip, pc, #0, 12
   13f78:	add	ip, ip, #286720	; 0x46000
   13f7c:	ldr	pc, [ip, #204]!	; 0xcc

00013f80 <__ctype_toupper_loc@plt>:
   13f80:	add	ip, pc, #0, 12
   13f84:	add	ip, ip, #286720	; 0x46000
   13f88:	ldr	pc, [ip, #196]!	; 0xc4

00013f8c <__gmon_start__@plt>:
   13f8c:	add	ip, pc, #0, 12
   13f90:	add	ip, ip, #286720	; 0x46000
   13f94:	ldr	pc, [ip, #188]!	; 0xbc

00013f98 <exit@plt>:
   13f98:	add	ip, pc, #0, 12
   13f9c:	add	ip, ip, #286720	; 0x46000
   13fa0:	ldr	pc, [ip, #180]!	; 0xb4

00013fa4 <strlen@plt>:
   13fa4:	add	ip, pc, #0, 12
   13fa8:	add	ip, ip, #286720	; 0x46000
   13fac:	ldr	pc, [ip, #172]!	; 0xac

00013fb0 <fprintf@plt>:
   13fb0:	add	ip, pc, #0, 12
   13fb4:	add	ip, ip, #286720	; 0x46000
   13fb8:	ldr	pc, [ip, #164]!	; 0xa4

00013fbc <posix_memalign@plt>:
   13fbc:	add	ip, pc, #0, 12
   13fc0:	add	ip, ip, #286720	; 0x46000
   13fc4:	ldr	pc, [ip, #156]!	; 0x9c

00013fc8 <memset@plt>:
   13fc8:	add	ip, pc, #0, 12
   13fcc:	add	ip, ip, #286720	; 0x46000
   13fd0:	ldr	pc, [ip, #148]!	; 0x94

00013fd4 <strncpy@plt>:
   13fd4:	add	ip, pc, #0, 12
   13fd8:	add	ip, ip, #286720	; 0x46000
   13fdc:	ldr	pc, [ip, #140]!	; 0x8c

00013fe0 <strtod@plt>:
   13fe0:	add	ip, pc, #0, 12
   13fe4:	add	ip, ip, #286720	; 0x46000
   13fe8:	ldr	pc, [ip, #132]!	; 0x84

00013fec <memchr@plt>:
   13fec:	add	ip, pc, #0, 12
   13ff0:	add	ip, ip, #286720	; 0x46000
   13ff4:	ldr	pc, [ip, #124]!	; 0x7c

00013ff8 <fclose@plt>:
   13ff8:	add	ip, pc, #0, 12
   13ffc:	add	ip, ip, #286720	; 0x46000
   14000:	ldr	pc, [ip, #116]!	; 0x74

00014004 <vfprintf@plt>:
   14004:	add	ip, pc, #0, 12
   14008:	add	ip, ip, #286720	; 0x46000
   1400c:	ldr	pc, [ip, #108]!	; 0x6c

00014010 <fputc@plt>:
   14010:	add	ip, pc, #0, 12
   14014:	add	ip, ip, #286720	; 0x46000
   14018:	ldr	pc, [ip, #100]!	; 0x64

0001401c <sprintf@plt>:
   1401c:	add	ip, pc, #0, 12
   14020:	add	ip, ip, #286720	; 0x46000
   14024:	ldr	pc, [ip, #92]!	; 0x5c

00014028 <vsnprintf@plt>:
   14028:	add	ip, pc, #0, 12
   1402c:	add	ip, ip, #286720	; 0x46000
   14030:	ldr	pc, [ip, #84]!	; 0x54

00014034 <qsort@plt>:
   14034:	add	ip, pc, #0, 12
   14038:	add	ip, ip, #286720	; 0x46000
   1403c:	ldr	pc, [ip, #76]!	; 0x4c

00014040 <fseek@plt>:
   14040:	add	ip, pc, #0, 12
   14044:	add	ip, ip, #286720	; 0x46000
   14048:	ldr	pc, [ip, #68]!	; 0x44

0001404c <fputs@plt>:
   1404c:	add	ip, pc, #0, 12
   14050:	add	ip, ip, #286720	; 0x46000
   14054:	ldr	pc, [ip, #60]!	; 0x3c

00014058 <strncmp@plt>:
   14058:	add	ip, pc, #0, 12
   1405c:	add	ip, ip, #286720	; 0x46000
   14060:	ldr	pc, [ip, #52]!	; 0x34

00014064 <abort@plt>:
   14064:	add	ip, pc, #0, 12
   14068:	add	ip, ip, #286720	; 0x46000
   1406c:	ldr	pc, [ip, #44]!	; 0x2c

00014070 <__assert_fail@plt>:
   14070:	add	ip, pc, #0, 12
   14074:	add	ip, ip, #286720	; 0x46000
   14078:	ldr	pc, [ip, #36]!	; 0x24

Disassembly of section .text:

00014080 <main@@Base>:
   14080:	push	{r4, r5, r6, lr}
   14084:	sub	sp, sp, #3952	; 0xf70
   14088:	movw	r2, #3735	; 0xe97
   1408c:	sub	sp, sp, #8
   14090:	add	r0, sp, #224	; 0xe0
   14094:	ldr	r1, [pc, #208]	; 1416c <main@@Base+0xec>
   14098:	bl	13efc <memcpy@plt>
   1409c:	mov	r0, sp
   140a0:	ldr	r4, [pc, #200]	; 14170 <main@@Base+0xf0>
   140a4:	bl	142bc <flatcc_init_options@@Base>
   140a8:	mov	r3, #1
   140ac:	ldr	r1, [pc, #192]	; 14174 <main@@Base+0xf4>
   140b0:	mov	r0, sp
   140b4:	str	r3, [sp, #108]	; 0x6c
   140b8:	str	r3, [sp, #144]	; 0x90
   140bc:	str	r3, [sp, #148]	; 0x94
   140c0:	str	r3, [sp, #152]	; 0x98
   140c4:	str	r3, [sp, #156]	; 0x9c
   140c8:	mov	r3, #0
   140cc:	mov	r2, r3
   140d0:	bl	14374 <flatcc_create_context@@Base>
   140d4:	subs	r6, r0, #0
   140d8:	bne	140fc <main@@Base+0x7c>
   140dc:	ldr	r0, [pc, #148]	; 14178 <main@@Base+0xf8>
   140e0:	mvn	r5, #0
   140e4:	ldr	r1, [r4]
   140e8:	bl	1404c <fputs@plt>
   140ec:	mov	r0, r5
   140f0:	add	sp, sp, #3952	; 0xf70
   140f4:	add	sp, sp, #8
   140f8:	pop	{r4, r5, r6, pc}
   140fc:	add	r1, sp, #224	; 0xe0
   14100:	movw	r2, #3735	; 0xe97
   14104:	bl	143d4 <flatcc_parse_buffer@@Base>
   14108:	subs	r5, r0, #0
   1410c:	ldr	r1, [r4]
   14110:	ldrne	r0, [pc, #100]	; 1417c <main@@Base+0xfc>
   14114:	bne	14144 <main@@Base+0xc4>
   14118:	ldr	r0, [pc, #96]	; 14180 <main@@Base+0x100>
   1411c:	bl	1404c <fputs@plt>
   14120:	ldr	r0, [pc, #92]	; 14184 <main@@Base+0x104>
   14124:	ldr	r1, [r4]
   14128:	bl	1404c <fputs@plt>
   1412c:	mov	r0, r6
   14130:	bl	14498 <flatcc_generate_files@@Base>
   14134:	cmp	r0, #0
   14138:	beq	14154 <main@@Base+0xd4>
   1413c:	ldr	r0, [pc, #68]	; 14188 <main@@Base+0x108>
   14140:	ldr	r1, [r4]
   14144:	bl	1404c <fputs@plt>
   14148:	mov	r0, r6
   1414c:	bl	145bc <flatcc_destroy_context@@Base>
   14150:	b	140ec <main@@Base+0x6c>
   14154:	ldr	r3, [pc, #48]	; 1418c <main@@Base+0x10c>
   14158:	add	r2, sp, #224	; 0xe0
   1415c:	ldr	r1, [pc, #44]	; 14190 <main@@Base+0x110>
   14160:	ldr	r0, [r3]
   14164:	bl	13fb0 <fprintf@plt>
   14168:	b	14148 <main@@Base+0xc8>
   1416c:	andeq	lr, r2, r5, ror #18
   14170:	strheq	sl, [r5], -r0
   14174:	andeq	lr, r2, r4, ror r8
   14178:	andeq	lr, r2, r1, lsl #17
   1417c:	andeq	lr, r2, fp, lsr #17
   14180:	andeq	lr, r2, r0, asr #17
   14184:	ldrdeq	lr, [r2], -r2
   14188:	strdeq	lr, [r2], -r2
   1418c:	strheq	sl, [r5], -r4
   14190:	andeq	lr, r2, r3, lsl r9

00014194 <_start@@Base>:
   14194:	mov	fp, #0
   14198:	mov	lr, #0
   1419c:	pop	{r1}		; (ldr r1, [sp], #4)
   141a0:	mov	r2, sp
   141a4:	push	{r2}		; (str r2, [sp, #-4]!)
   141a8:	push	{r0}		; (str r0, [sp, #-4]!)
   141ac:	ldr	ip, [pc, #16]	; 141c4 <_start@@Base+0x30>
   141b0:	push	{ip}		; (str ip, [sp, #-4]!)
   141b4:	ldr	r0, [pc, #12]	; 141c8 <_start@@Base+0x34>
   141b8:	ldr	r3, [pc, #12]	; 141cc <_start@@Base+0x38>
   141bc:	bl	13f74 <__libc_start_main@plt>
   141c0:	bl	14064 <abort@plt>
   141c4:	andeq	lr, r2, r0, ror #16
   141c8:	andeq	r4, r1, r0, lsl #1
   141cc:	andeq	lr, r2, r0, lsl #16
   141d0:	ldr	r3, [pc, #20]	; 141ec <_start@@Base+0x58>
   141d4:	ldr	r2, [pc, #20]	; 141f0 <_start@@Base+0x5c>
   141d8:	add	r3, pc, r3
   141dc:	ldr	r2, [r3, r2]
   141e0:	cmp	r2, #0
   141e4:	bxeq	lr
   141e8:	b	13f8c <__gmon_start__@plt>
   141ec:	andeq	r5, r4, r0, lsr #28
   141f0:	andeq	r0, r0, r0, lsr #1
   141f4:	ldr	r0, [pc, #24]	; 14214 <_start@@Base+0x80>
   141f8:	ldr	r3, [pc, #24]	; 14218 <_start@@Base+0x84>
   141fc:	cmp	r3, r0
   14200:	bxeq	lr
   14204:	ldr	r3, [pc, #16]	; 1421c <_start@@Base+0x88>
   14208:	cmp	r3, #0
   1420c:	bxeq	lr
   14210:	bx	r3
   14214:	andeq	sl, r5, ip, lsr #1
   14218:	andeq	sl, r5, ip, lsr #1
   1421c:	andeq	r0, r0, r0
   14220:	ldr	r0, [pc, #36]	; 1424c <_start@@Base+0xb8>
   14224:	ldr	r1, [pc, #36]	; 14250 <_start@@Base+0xbc>
   14228:	sub	r1, r1, r0
   1422c:	asr	r1, r1, #2
   14230:	add	r1, r1, r1, lsr #31
   14234:	asrs	r1, r1, #1
   14238:	bxeq	lr
   1423c:	ldr	r3, [pc, #16]	; 14254 <_start@@Base+0xc0>
   14240:	cmp	r3, #0
   14244:	bxeq	lr
   14248:	bx	r3
   1424c:	andeq	sl, r5, ip, lsr #1
   14250:	andeq	sl, r5, ip, lsr #1
   14254:	andeq	r0, r0, r0
   14258:	push	{r4, lr}
   1425c:	ldr	r4, [pc, #24]	; 1427c <_start@@Base+0xe8>
   14260:	ldrb	r3, [r4]
   14264:	cmp	r3, #0
   14268:	popne	{r4, pc}
   1426c:	bl	141f4 <_start@@Base+0x60>
   14270:	mov	r3, #1
   14274:	strb	r3, [r4]
   14278:	pop	{r4, pc}
   1427c:	strheq	sl, [r5], -r8
   14280:	b	14220 <_start@@Base+0x8c>
   14284:	mov	r2, #1
   14288:	add	r0, r0, #172	; 0xac
   1428c:	b	21ffc <ptr_set_insert_item@@Base>
   14290:	cmp	r0, #0
   14294:	bxne	lr
   14298:	ldr	r3, [pc, #20]	; 142b4 <_start@@Base+0x120>
   1429c:	push	{r4, lr}
   142a0:	ldr	r0, [pc, #16]	; 142b8 <_start@@Base+0x124>
   142a4:	ldr	r1, [r3]
   142a8:	bl	1404c <fputs@plt>
   142ac:	mov	r0, #1
   142b0:	bl	13f98 <exit@plt>
   142b4:	strheq	sl, [r5], -r0
   142b8:	andeq	pc, r2, r6, lsl r8	; <UNPREDICTABLE>

000142bc <flatcc_init_options@@Base>:
   142bc:	push	{r4, lr}
   142c0:	mov	r2, #212	; 0xd4
   142c4:	mov	r4, r0
   142c8:	mov	r1, #0
   142cc:	add	r0, r0, #12
   142d0:	bl	13fc8 <memset@plt>
   142d4:	mov	r1, #2
   142d8:	movw	r0, #65534	; 0xfffe
   142dc:	mov	r3, #65536	; 0x10000
   142e0:	mov	r2, #4
   142e4:	str	r1, [r4, #68]	; 0x44
   142e8:	mov	r1, #0
   142ec:	str	r3, [r4]
   142f0:	mov	r3, #100	; 0x64
   142f4:	strd	r0, [r4, #88]	; 0x58
   142f8:	ldr	r1, [pc, #104]	; 14368 <flatcc_init_options@@Base+0xac>
   142fc:	str	r3, [r4, #4]
   14300:	str	r3, [r4, #8]
   14304:	mov	r3, #1
   14308:	str	r2, [r4, #64]	; 0x40
   1430c:	str	r3, [r4, #16]
   14310:	str	r3, [r4, #20]
   14314:	str	r1, [r4, #96]	; 0x60
   14318:	ldr	r1, [pc, #76]	; 1436c <flatcc_init_options@@Base+0xb0>
   1431c:	str	r3, [r4, #24]
   14320:	str	r3, [r4, #28]
   14324:	str	r3, [r4, #32]
   14328:	str	r3, [r4, #36]	; 0x24
   1432c:	str	r3, [r4, #40]	; 0x28
   14330:	str	r1, [r4, #100]	; 0x64
   14334:	ldr	r1, [pc, #52]	; 14370 <flatcc_init_options@@Base+0xb4>
   14338:	str	r3, [r4, #44]	; 0x2c
   1433c:	str	r3, [r4, #48]	; 0x30
   14340:	str	r3, [r4, #52]	; 0x34
   14344:	str	r3, [r4, #72]	; 0x48
   14348:	str	r3, [r4, #76]	; 0x4c
   1434c:	str	r3, [r4, #84]	; 0x54
   14350:	str	r1, [r4, #104]	; 0x68
   14354:	str	r3, [r4, #136]	; 0x88
   14358:	str	r3, [r4, #140]	; 0x8c
   1435c:	str	r2, [r4, #176]	; 0xb0
   14360:	str	r3, [r4, #184]	; 0xb8
   14364:	pop	{r4, pc}
   14368:	andeq	lr, r2, ip, ror r8
   1436c:	andeq	pc, r2, r9, lsr r8	; <UNPREDICTABLE>
   14370:	andeq	pc, r2, pc, lsr r8	; <UNPREDICTABLE>

00014374 <flatcc_create_context@@Base>:
   14374:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14378:	mov	r6, r0
   1437c:	mov	r0, #560	; 0x230
   14380:	mov	r7, r1
   14384:	mov	r8, r2
   14388:	mov	r9, r3
   1438c:	bl	13f68 <malloc@plt>
   14390:	subs	r4, r0, #0
   14394:	beq	143c8 <flatcc_create_context@@Base+0x54>
   14398:	mov	r5, #0
   1439c:	mov	r3, r8
   143a0:	str	r9, [sp]
   143a4:	mov	r2, r7
   143a8:	mov	r1, r6
   143ac:	str	r5, [sp, #4]
   143b0:	bl	249ac <__flatcc_fb_init_parser@@Base>
   143b4:	cmp	r0, r5
   143b8:	beq	143c8 <flatcc_create_context@@Base+0x54>
   143bc:	mov	r0, r4
   143c0:	mov	r4, r5
   143c4:	bl	13ef0 <free@plt>
   143c8:	mov	r0, r4
   143cc:	add	sp, sp, #12
   143d0:	pop	{r4, r5, r6, r7, r8, r9, pc}

000143d4 <flatcc_parse_buffer@@Base>:
   143d4:	ldr	r3, [r0, #128]	; 0x80
   143d8:	push	{r4, r5, r6, r7, r8, lr}
   143dc:	mov	r6, r2
   143e0:	mov	r2, #1
   143e4:	str	r2, [r0, #140]	; 0x8c
   143e8:	cmp	r3, #0
   143ec:	cmpne	r3, r6
   143f0:	movcc	r5, #1
   143f4:	movcs	r5, #0
   143f8:	bcs	1440c <flatcc_parse_buffer@@Base+0x38>
   143fc:	ldr	r1, [pc, #80]	; 14454 <flatcc_parse_buffer@@Base+0x80>
   14400:	bl	23a20 <__flatcc_fb_print_error@@Base>
   14404:	mvn	r0, #0
   14408:	pop	{r4, r5, r6, r7, r8, pc}
   1440c:	mov	r4, r0
   14410:	mov	r7, r1
   14414:	add	r1, r0, #352	; 0x160
   14418:	add	r0, r0, #524	; 0x20c
   1441c:	bl	21ffc <ptr_set_insert_item@@Base>
   14420:	mov	r3, r5
   14424:	mov	r2, r6
   14428:	mov	r1, r7
   1442c:	mov	r0, r4
   14430:	bl	24ba0 <__flatcc_fb_parse@@Base>
   14434:	cmp	r0, #0
   14438:	bne	14404 <flatcc_parse_buffer@@Base+0x30>
   1443c:	mov	r0, r4
   14440:	bl	27a9c <__flatcc_fb_build_schema@@Base>
   14444:	adds	r0, r0, #0
   14448:	movne	r0, #1
   1444c:	rsb	r0, r0, #0
   14450:	pop	{r4, r5, r6, r7, r8, pc}
   14454:	andeq	pc, r2, r4, asr #16

00014458 <flatcc_generate_binary_schema_to_buffer@@Base>:
   14458:	push	{r0, r1, r2, lr}
   1445c:	add	r3, sp, #4
   14460:	str	r2, [sp, #4]
   14464:	mov	r2, r1
   14468:	add	r1, r0, #352	; 0x160
   1446c:	add	r0, r0, #128	; 0x80
   14470:	bl	213e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   14474:	cmp	r0, #0
   14478:	ldrne	r0, [sp, #4]
   1447c:	mvneq	r0, #0
   14480:	add	sp, sp, #12
   14484:	pop	{pc}		; (ldr pc, [sp], #4)

00014488 <flatcc_generate_binary_schema@@Base>:
   14488:	mov	r2, r1
   1448c:	add	r1, r0, #352	; 0x160
   14490:	add	r0, r0, #128	; 0x80
   14494:	b	21450 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00014498 <flatcc_generate_files@@Base>:
   14498:	push	{r4, r5, r6, lr}
   1449c:	subs	r4, r0, #0
   144a0:	sub	sp, sp, #232	; 0xe8
   144a4:	bne	144b8 <flatcc_generate_files@@Base+0x20>
   144a8:	mvn	r6, #0
   144ac:	mov	r0, r6
   144b0:	add	sp, sp, #232	; 0xe8
   144b4:	pop	{r4, r5, r6, pc}
   144b8:	ldr	r3, [r4, #108]	; 0x6c
   144bc:	cmp	r3, #0
   144c0:	moveq	r5, r4
   144c4:	bne	144a8 <flatcc_generate_files@@Base+0x10>
   144c8:	ldr	r2, [r5]
   144cc:	str	r3, [r5, #4]
   144d0:	mov	r3, r5
   144d4:	cmp	r2, #0
   144d8:	bne	14524 <flatcc_generate_files@@Base+0x8c>
   144dc:	ldr	r3, [r4, #308]	; 0x134
   144e0:	add	r6, r4, #128	; 0x80
   144e4:	cmp	r3, #0
   144e8:	bne	1452c <flatcc_generate_files@@Base+0x94>
   144ec:	mov	r1, r6
   144f0:	mov	r0, sp
   144f4:	bl	14cac <__flatcc_fb_init_output_c@@Base>
   144f8:	cmp	r0, #0
   144fc:	bne	144a8 <flatcc_generate_files@@Base+0x10>
   14500:	ldr	r3, [r4, #256]	; 0x100
   14504:	cmp	r3, #0
   14508:	beq	14544 <flatcc_generate_files@@Base+0xac>
   1450c:	ldr	r6, [r4, #120]	; 0x78
   14510:	cmp	r6, #0
   14514:	bne	14558 <flatcc_generate_files@@Base+0xc0>
   14518:	mov	r0, sp
   1451c:	bl	14c78 <__flatcc_fb_end_output_c@@Base>
   14520:	b	144ac <flatcc_generate_files@@Base+0x14>
   14524:	mov	r5, r2
   14528:	b	144c8 <flatcc_generate_files@@Base+0x30>
   1452c:	add	r1, r4, #352	; 0x160
   14530:	mov	r0, r6
   14534:	bl	214b4 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   14538:	cmp	r0, #0
   1453c:	beq	144ec <flatcc_generate_files@@Base+0x54>
   14540:	b	144a8 <flatcc_generate_files@@Base+0x10>
   14544:	mov	r0, sp
   14548:	bl	1509c <__flatcc_fb_codegen_common_c@@Base>
   1454c:	subs	r6, r0, #0
   14550:	beq	1450c <flatcc_generate_files@@Base+0x74>
   14554:	b	14518 <flatcc_generate_files@@Base+0x80>
   14558:	ldr	r3, [r4, #300]	; 0x12c
   1455c:	cmp	r3, #0
   14560:	bne	14578 <flatcc_generate_files@@Base+0xe0>
   14564:	add	r1, r4, #352	; 0x160
   14568:	mov	r0, sp
   1456c:	bl	1514c <__flatcc_fb_codegen_c@@Base>
   14570:	mov	r6, r0
   14574:	b	14518 <flatcc_generate_files@@Base+0x80>
   14578:	ldr	r3, [r5, #108]	; 0x6c
   1457c:	cmp	r3, #0
   14580:	movne	r6, #1
   14584:	bne	1459c <flatcc_generate_files@@Base+0x104>
   14588:	add	r1, r5, #352	; 0x160
   1458c:	mov	r0, sp
   14590:	bl	1514c <__flatcc_fb_codegen_c@@Base>
   14594:	adds	r6, r0, #0
   14598:	movne	r6, #1
   1459c:	ldr	r5, [r5, #4]
   145a0:	eor	r3, r6, #1
   145a4:	cmp	r5, #0
   145a8:	moveq	r3, #0
   145ac:	andne	r3, r3, #1
   145b0:	cmp	r3, #0
   145b4:	bne	14578 <flatcc_generate_files@@Base+0xe0>
   145b8:	b	14518 <flatcc_generate_files@@Base+0x80>

000145bc <flatcc_destroy_context@@Base>:
   145bc:	push	{r4, r5, r6, lr}
   145c0:	mov	r4, r0
   145c4:	cmp	r4, #0
   145c8:	popeq	{r4, r5, r6, pc}
   145cc:	mov	r0, r4
   145d0:	ldr	r5, [r4]
   145d4:	bl	26af8 <__flatcc_fb_clear_parser@@Base>
   145d8:	mov	r0, r4
   145dc:	bl	13ef0 <free@plt>
   145e0:	mov	r4, r5
   145e4:	b	145c4 <flatcc_destroy_context@@Base+0x8>

000145e8 <flatcc_parse_file@@Base>:
   145e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145ec:	mov	r4, r0
   145f0:	sub	sp, sp, #28
   145f4:	mov	r0, r1
   145f8:	mov	r7, r1
   145fc:	add	r8, r4, #352	; 0x160
   14600:	bl	13fa4 <strlen@plt>
   14604:	mov	sl, r0
   14608:	ldr	r0, [r4, #412]	; 0x19c
   1460c:	mov	r2, #1
   14610:	mov	r1, r8
   14614:	add	r0, r0, #32
   14618:	bl	23130 <fb_schema_table_insert_item@@Base>
   1461c:	subs	r5, r0, #0
   14620:	beq	14634 <flatcc_parse_file@@Base+0x4c>
   14624:	mov	r9, #0
   14628:	mov	r0, r9
   1462c:	add	sp, sp, #28
   14630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14634:	ldr	r6, [r4, #552]	; 0x228
   14638:	cmp	r6, #0
   1463c:	beq	146f4 <flatcc_parse_file@@Base+0x10c>
   14640:	mov	r9, #0
   14644:	ldr	r3, [r4, #336]	; 0x150
   14648:	cmp	r3, r9
   1464c:	bgt	147f8 <flatcc_parse_file@@Base+0x210>
   14650:	cmp	r6, #0
   14654:	beq	146d0 <flatcc_parse_file@@Base+0xe8>
   14658:	ldr	r5, [r4, #552]	; 0x228
   1465c:	mov	r0, r5
   14660:	bl	13fa4 <strlen@plt>
   14664:	mov	r1, r0
   14668:	mov	r0, r5
   1466c:	bl	23540 <__flatcc_fb_find_basename@@Base>
   14670:	mov	r3, #1
   14674:	mov	r1, r0
   14678:	mov	r2, r7
   1467c:	mov	r0, r5
   14680:	str	r3, [sp, #4]
   14684:	ldr	r3, [pc, #1156]	; 14b10 <flatcc_parse_file@@Base+0x528>
   14688:	str	r3, [sp]
   1468c:	mov	r3, sl
   14690:	bl	23248 <__flatcc_fb_create_join_path_n@@Base>
   14694:	mov	r9, r0
   14698:	bl	14290 <_start@@Base+0xfc>
   1469c:	add	r2, sp, #20
   146a0:	mov	r0, r9
   146a4:	ldr	r1, [r4, #128]	; 0x80
   146a8:	bl	235c8 <__flatcc_fb_read_file@@Base>
   146ac:	subs	r5, r0, #0
   146b0:	bne	14758 <flatcc_parse_file@@Base+0x170>
   146b4:	mov	r0, r9
   146b8:	bl	13ef0 <free@plt>
   146bc:	ldr	r2, [sp, #20]
   146c0:	ldr	r3, [r4, #128]	; 0x80
   146c4:	cmp	r3, #0
   146c8:	cmpne	r3, r2
   146cc:	bcc	1472c <flatcc_parse_file@@Base+0x144>
   146d0:	mov	r2, r7
   146d4:	ldr	r1, [pc, #1080]	; 14b14 <flatcc_parse_file@@Base+0x52c>
   146d8:	mov	r0, r4
   146dc:	bl	23a20 <__flatcc_fb_print_error@@Base>
   146e0:	cmp	r5, #0
   146e4:	beq	14738 <flatcc_parse_file@@Base+0x150>
   146e8:	mov	r0, r5
   146ec:	bl	13ef0 <free@plt>
   146f0:	b	14738 <flatcc_parse_file@@Base+0x150>
   146f4:	add	r2, sp, #20
   146f8:	mov	r0, r7
   146fc:	ldr	r1, [r4, #128]	; 0x80
   14700:	bl	235c8 <__flatcc_fb_read_file@@Base>
   14704:	subs	fp, r0, #0
   14708:	bne	14740 <flatcc_parse_file@@Base+0x158>
   1470c:	ldr	r1, [sp, #20]
   14710:	ldr	r3, [r4, #412]	; 0x19c
   14714:	ldr	r2, [r4, #128]	; 0x80
   14718:	ldr	r3, [r3, #56]	; 0x38
   1471c:	add	r3, r3, r1
   14720:	cmp	r2, #0
   14724:	cmpne	r3, r2
   14728:	bls	14640 <flatcc_parse_file@@Base+0x58>
   1472c:	ldr	r1, [pc, #996]	; 14b18 <flatcc_parse_file@@Base+0x530>
   14730:	mov	r0, r4
   14734:	bl	23a20 <__flatcc_fb_print_error@@Base>
   14738:	mvn	r9, #0
   1473c:	b	14628 <flatcc_parse_file@@Base+0x40>
   14740:	mov	r0, r7
   14744:	bl	231c0 <__flatcc_fb_copy_path@@Base>
   14748:	mov	r5, r0
   1474c:	bl	14290 <_start@@Base+0xfc>
   14750:	mov	r9, r5
   14754:	mov	r5, fp
   14758:	ldr	r1, [r4, #412]	; 0x19c
   1475c:	mov	r0, r4
   14760:	ldr	r2, [sp, #20]
   14764:	ldr	r3, [r1, #56]	; 0x38
   14768:	add	r3, r3, r2
   1476c:	str	r3, [r1, #56]	; 0x38
   14770:	mov	r3, #1
   14774:	mov	r1, r5
   14778:	str	r9, [r4, #548]	; 0x224
   1477c:	bl	24ba0 <__flatcc_fb_parse@@Base>
   14780:	subs	r9, r0, #0
   14784:	addeq	r3, r4, #128	; 0x80
   14788:	ldreq	fp, [r4, #352]	; 0x160
   1478c:	streq	r3, [sp, #12]
   14790:	bne	14624 <flatcc_parse_file@@Base+0x3c>
   14794:	cmp	fp, #0
   14798:	bne	1487c <flatcc_parse_file@@Base+0x294>
   1479c:	mov	r2, #1
   147a0:	mov	r1, r8
   147a4:	add	r0, r4, #524	; 0x20c
   147a8:	bl	21ffc <ptr_set_insert_item@@Base>
   147ac:	mov	r0, r4
   147b0:	bl	27a9c <__flatcc_fb_build_schema@@Base>
   147b4:	subs	r9, r0, #0
   147b8:	bne	14624 <flatcc_parse_file@@Base+0x3c>
   147bc:	ldr	r3, [r4, #240]	; 0xf0
   147c0:	clz	r6, r6
   147c4:	lsr	r6, r6, #5
   147c8:	cmp	r3, #0
   147cc:	moveq	r6, #0
   147d0:	cmp	r6, #0
   147d4:	beq	14624 <flatcc_parse_file@@Base+0x3c>
   147d8:	ldr	r3, [r4, #552]	; 0x228
   147dc:	cmp	r3, #0
   147e0:	beq	149ac <flatcc_parse_file@@Base+0x3c4>
   147e4:	ldr	r3, [pc, #816]	; 14b1c <flatcc_parse_file@@Base+0x534>
   147e8:	mov	r2, #220	; 0xdc
   147ec:	ldr	r1, [pc, #812]	; 14b20 <flatcc_parse_file@@Base+0x538>
   147f0:	ldr	r0, [pc, #812]	; 14b24 <flatcc_parse_file@@Base+0x53c>
   147f4:	bl	14070 <__assert_fail@plt>
   147f8:	ldr	r3, [r4, #328]	; 0x148
   147fc:	ldr	r5, [r3, r9, lsl #2]
   14800:	mov	r0, r5
   14804:	bl	13fa4 <strlen@plt>
   14808:	mov	r3, #1
   1480c:	mov	r1, r0
   14810:	mov	r2, r7
   14814:	mov	r0, r5
   14818:	str	r3, [sp, #4]
   1481c:	ldr	r3, [pc, #748]	; 14b10 <flatcc_parse_file@@Base+0x528>
   14820:	str	r3, [sp]
   14824:	mov	r3, sl
   14828:	bl	23248 <__flatcc_fb_create_join_path_n@@Base>
   1482c:	mov	r5, r0
   14830:	bl	14290 <_start@@Base+0xfc>
   14834:	add	r2, sp, #20
   14838:	mov	r0, r5
   1483c:	ldr	r1, [r4, #128]	; 0x80
   14840:	bl	235c8 <__flatcc_fb_read_file@@Base>
   14844:	subs	fp, r0, #0
   14848:	bne	1486c <flatcc_parse_file@@Base+0x284>
   1484c:	mov	r0, r5
   14850:	bl	13ef0 <free@plt>
   14854:	ldr	r1, [sp, #20]
   14858:	ldr	r2, [r4, #128]	; 0x80
   1485c:	cmp	r2, #0
   14860:	cmpne	r2, r1
   14864:	bcc	1472c <flatcc_parse_file@@Base+0x144>
   14868:	mov	r5, fp
   1486c:	cmp	fp, #0
   14870:	add	r9, r9, #1
   14874:	beq	14644 <flatcc_parse_file@@Base+0x5c>
   14878:	b	14750 <flatcc_parse_file@@Base+0x168>
   1487c:	ldrd	r0, [fp, #8]
   14880:	bl	23174 <__flatcc_fb_copy_path_n@@Base>
   14884:	mov	sl, r0
   14888:	bl	14290 <_start@@Base+0xfc>
   1488c:	ldr	r3, [r4, #132]	; 0x84
   14890:	ldr	r7, [r4, #412]	; 0x19c
   14894:	ldr	r2, [r7, #52]	; 0x34
   14898:	cmp	r2, r3
   1489c:	cmpge	r3, #0
   148a0:	ble	148c4 <flatcc_parse_file@@Base+0x2dc>
   148a4:	ldr	r1, [pc, #636]	; 14b28 <flatcc_parse_file@@Base+0x540>
   148a8:	mov	r0, r4
   148ac:	bl	23a20 <__flatcc_fb_print_error@@Base>
   148b0:	cmp	sl, #0
   148b4:	beq	14624 <flatcc_parse_file@@Base+0x3c>
   148b8:	mov	r0, sl
   148bc:	bl	13ef0 <free@plt>
   148c0:	b	14628 <flatcc_parse_file@@Base+0x40>
   148c4:	ldr	r2, [r7, #48]	; 0x30
   148c8:	ldr	r3, [r4, #136]	; 0x88
   148cc:	cmp	r2, r3
   148d0:	cmpge	r3, #0
   148d4:	ldrgt	r1, [pc, #592]	; 14b2c <flatcc_parse_file@@Base+0x544>
   148d8:	bgt	148a8 <flatcc_parse_file@@Base+0x2c0>
   148dc:	mov	r0, #560	; 0x230
   148e0:	bl	13f68 <malloc@plt>
   148e4:	subs	r5, r0, #0
   148e8:	beq	148b0 <flatcc_parse_file@@Base+0x2c8>
   148ec:	str	r7, [sp, #4]
   148f0:	mov	r2, sl
   148f4:	ldr	r3, [r4, #12]
   148f8:	ldr	r1, [sp, #12]
   148fc:	str	r3, [sp]
   14900:	ldr	r3, [r4, #8]
   14904:	bl	249ac <__flatcc_fb_init_parser@@Base>
   14908:	cmp	r0, #0
   1490c:	beq	1491c <flatcc_parse_file@@Base+0x334>
   14910:	mov	r0, r5
   14914:	bl	13ef0 <free@plt>
   14918:	b	148b0 <flatcc_parse_file@@Base+0x2c8>
   1491c:	add	r1, r5, #352	; 0x160
   14920:	add	r0, r7, #32
   14924:	bl	23154 <fb_schema_table_find_item@@Base>
   14928:	cmp	r0, #0
   1492c:	beq	14958 <flatcc_parse_file@@Base+0x370>
   14930:	add	r0, r0, #172	; 0xac
   14934:	mov	r2, r8
   14938:	ldr	r1, [pc, #496]	; 14b30 <flatcc_parse_file@@Base+0x548>
   1493c:	bl	22018 <ptr_set_visit@@Base>
   14940:	mov	r0, r5
   14944:	bl	145bc <flatcc_destroy_context@@Base>
   14948:	mov	r0, sl
   1494c:	bl	13ef0 <free@plt>
   14950:	ldr	fp, [fp]
   14954:	b	14794 <flatcc_parse_file@@Base+0x1ac>
   14958:	ldr	r3, [r4]
   1495c:	mov	r1, sl
   14960:	mov	r0, r5
   14964:	str	r5, [r4]
   14968:	str	r3, [r5]
   1496c:	ldr	r3, [r4, #548]	; 0x224
   14970:	str	r3, [r5, #552]	; 0x228
   14974:	ldr	r3, [r7, #52]	; 0x34
   14978:	add	r3, r3, #1
   1497c:	str	r3, [r7, #52]	; 0x34
   14980:	ldr	r3, [r7, #48]	; 0x30
   14984:	add	r3, r3, #1
   14988:	str	r3, [r7, #48]	; 0x30
   1498c:	bl	145e8 <flatcc_parse_file@@Base>
   14990:	cmp	r0, #0
   14994:	bne	148b0 <flatcc_parse_file@@Base+0x2c8>
   14998:	mov	r2, r8
   1499c:	ldr	r1, [pc, #396]	; 14b30 <flatcc_parse_file@@Base+0x548>
   149a0:	add	r0, r5, #524	; 0x20c
   149a4:	bl	22018 <ptr_set_visit@@Base>
   149a8:	b	14948 <flatcc_parse_file@@Base+0x360>
   149ac:	ldr	r2, [pc, #348]	; 14b10 <flatcc_parse_file@@Base+0x528>
   149b0:	ldr	r5, [r4, #344]	; 0x158
   149b4:	ldr	r1, [r4, #244]	; 0xf4
   149b8:	ldr	r3, [r4, #248]	; 0xf8
   149bc:	cmp	r5, #0
   149c0:	ldr	r8, [r4, #512]	; 0x200
   149c4:	moveq	r5, r2
   149c8:	cmp	r1, #0
   149cc:	movne	r0, r2
   149d0:	moveq	r0, r5
   149d4:	ldreq	r2, [pc, #344]	; 14b34 <flatcc_parse_file@@Base+0x54c>
   149d8:	moveq	r1, r8
   149dc:	cmp	r3, #0
   149e0:	bne	14a9c <flatcc_parse_file@@Base+0x4b4>
   149e4:	ldr	ip, [r4, #308]	; 0x134
   149e8:	ldr	r3, [pc, #328]	; 14b38 <flatcc_parse_file@@Base+0x550>
   149ec:	ldr	r7, [pc, #328]	; 14b3c <flatcc_parse_file@@Base+0x554>
   149f0:	cmp	ip, #0
   149f4:	moveq	r7, r3
   149f8:	mov	r3, #1
   149fc:	bl	2336c <__flatcc_fb_create_join_path@@Base>
   14a00:	mov	r6, r0
   14a04:	bl	14290 <_start@@Base+0xfc>
   14a08:	mov	r2, r7
   14a0c:	mov	r3, #1
   14a10:	mov	r1, r8
   14a14:	mov	r0, r5
   14a18:	bl	2336c <__flatcc_fb_create_join_path@@Base>
   14a1c:	mov	r5, r0
   14a20:	bl	14290 <_start@@Base+0xfc>
   14a24:	mov	r0, r5
   14a28:	bl	23524 <__flatcc_fb_create_make_path@@Base>
   14a2c:	mov	r7, r0
   14a30:	bl	14290 <_start@@Base+0xfc>
   14a34:	cmp	r5, #0
   14a38:	beq	14a44 <flatcc_parse_file@@Base+0x45c>
   14a3c:	mov	r0, r5
   14a40:	bl	13ef0 <free@plt>
   14a44:	ldr	r1, [pc, #244]	; 14b40 <flatcc_parse_file@@Base+0x558>
   14a48:	mov	r0, r6
   14a4c:	bl	13ee4 <fopen@plt>
   14a50:	subs	r5, r0, #0
   14a54:	bne	14aac <flatcc_parse_file@@Base+0x4c4>
   14a58:	mov	r2, r6
   14a5c:	ldr	r1, [pc, #224]	; 14b44 <flatcc_parse_file@@Base+0x55c>
   14a60:	mov	r0, r4
   14a64:	bl	23a20 <__flatcc_fb_print_error@@Base>
   14a68:	cmp	r6, #0
   14a6c:	beq	14a78 <flatcc_parse_file@@Base+0x490>
   14a70:	mov	r0, r6
   14a74:	bl	13ef0 <free@plt>
   14a78:	cmp	r7, #0
   14a7c:	beq	14a88 <flatcc_parse_file@@Base+0x4a0>
   14a80:	mov	r0, r7
   14a84:	bl	13ef0 <free@plt>
   14a88:	cmp	r5, #0
   14a8c:	beq	14624 <flatcc_parse_file@@Base+0x3c>
   14a90:	mov	r0, r5
   14a94:	bl	13ff8 <fclose@plt>
   14a98:	b	14628 <flatcc_parse_file@@Base+0x40>
   14a9c:	ldr	r5, [pc, #108]	; 14b10 <flatcc_parse_file@@Base+0x528>
   14aa0:	mov	r8, r3
   14aa4:	mov	r7, r5
   14aa8:	b	149f8 <flatcc_parse_file@@Base+0x410>
   14aac:	mov	r2, r7
   14ab0:	ldr	r1, [pc, #144]	; 14b48 <flatcc_parse_file@@Base+0x560>
   14ab4:	bl	13fb0 <fprintf@plt>
   14ab8:	ldr	sl, [pc, #140]	; 14b4c <flatcc_parse_file@@Base+0x564>
   14abc:	ldr	r4, [r4]
   14ac0:	cmp	r4, #0
   14ac4:	bne	14ad8 <flatcc_parse_file@@Base+0x4f0>
   14ac8:	mov	r1, r5
   14acc:	mov	r0, #10
   14ad0:	bl	14010 <fputc@plt>
   14ad4:	b	14a68 <flatcc_parse_file@@Base+0x480>
   14ad8:	ldr	r0, [r4, #548]	; 0x224
   14adc:	bl	23524 <__flatcc_fb_create_make_path@@Base>
   14ae0:	mov	r8, r0
   14ae4:	bl	14290 <_start@@Base+0xfc>
   14ae8:	mov	r2, r8
   14aec:	mov	r1, sl
   14af0:	mov	r0, r5
   14af4:	bl	13fb0 <fprintf@plt>
   14af8:	cmp	r8, #0
   14afc:	ldr	r4, [r4]
   14b00:	beq	14ac0 <flatcc_parse_file@@Base+0x4d8>
   14b04:	mov	r0, r8
   14b08:	bl	13ef0 <free@plt>
   14b0c:	b	14ac0 <flatcc_parse_file@@Base+0x4d8>
   14b10:	andeq	r1, r3, fp, lsr #2
   14b14:	andeq	pc, r2, pc, ror #16
   14b18:	andeq	pc, r2, r4, asr #16
   14b1c:	strdeq	pc, [r2], -ip
   14b20:	ldrdeq	pc, [r2], -r5
   14b24:	andeq	pc, r2, fp, lsl r9	; <UNPREDICTABLE>
   14b28:	muleq	r2, r7, r8
   14b2c:			; <UNDEFINED> instruction: 0x0002f8b7
   14b30:	andeq	r4, r1, r4, lsl #5
   14b34:	andeq	pc, r2, r8, ror #16
   14b38:	andeq	r5, r4, r7, asr #30
   14b3c:	andeq	pc, r2, r9, lsr r8	; <UNPREDICTABLE>
   14b40:	andeq	pc, r2, r0, lsr r9	; <UNPREDICTABLE>
   14b44:	andeq	pc, r2, r3, lsr r9	; <UNPREDICTABLE>
   14b48:	andeq	pc, r2, r2, ror #18
   14b4c:	andeq	pc, r2, r6, ror #18
   14b50:	mov	r0, r1
   14b54:	b	13ef0 <free@plt>
   14b58:	ldr	r3, [pc, #20]	; 14b74 <flatcc_parse_file@@Base+0x58c>
   14b5c:	push	{r4, lr}
   14b60:	ldr	r0, [pc, #16]	; 14b78 <flatcc_parse_file@@Base+0x590>
   14b64:	ldr	r1, [r3]
   14b68:	bl	1404c <fputs@plt>
   14b6c:	mov	r0, #1
   14b70:	bl	13f98 <exit@plt>
   14b74:	strheq	sl, [r5], -r0
   14b78:	andeq	pc, r2, r6, lsl r8	; <UNPREDICTABLE>

00014b7c <__flatcc_fb_open_output_file@@Base>:
   14b7c:	ldr	ip, [r0, #212]	; 0xd4
   14b80:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14b84:	ldr	r4, [r0, #204]	; 0xcc
   14b88:	ldr	r5, [ip, #216]	; 0xd8
   14b8c:	ldr	ip, [pc, #148]	; 14c28 <__flatcc_fb_open_output_file@@Base+0xac>
   14b90:	cmp	r5, #0
   14b94:	moveq	r5, ip
   14b98:	cmp	r4, #0
   14b9c:	movne	r4, #0
   14ba0:	bne	14c1c <__flatcc_fb_open_output_file@@Base+0xa0>
   14ba4:	mov	r9, r0
   14ba8:	mov	r0, r5
   14bac:	mov	r8, r3
   14bb0:	mov	r7, r2
   14bb4:	mov	r6, r1
   14bb8:	bl	13fa4 <strlen@plt>
   14bbc:	mov	r3, #1
   14bc0:	mov	r1, r0
   14bc4:	str	r8, [sp]
   14bc8:	mov	r0, r5
   14bcc:	mov	r2, r6
   14bd0:	str	r3, [sp, #4]
   14bd4:	mov	r3, r7
   14bd8:	bl	23248 <__flatcc_fb_create_join_path_n@@Base>
   14bdc:	subs	r5, r0, #0
   14be0:	bne	14be8 <__flatcc_fb_open_output_file@@Base+0x6c>
   14be4:	bl	14b58 <flatcc_parse_file@@Base+0x570>
   14be8:	ldr	r1, [pc, #60]	; 14c2c <__flatcc_fb_open_output_file@@Base+0xb0>
   14bec:	bl	13ee4 <fopen@plt>
   14bf0:	cmp	r0, #0
   14bf4:	str	r0, [r9, #204]	; 0xcc
   14bf8:	bne	14c14 <__flatcc_fb_open_output_file@@Base+0x98>
   14bfc:	ldr	r3, [pc, #44]	; 14c30 <__flatcc_fb_open_output_file@@Base+0xb4>
   14c00:	mov	r2, r5
   14c04:	mvn	r4, #0
   14c08:	ldr	r1, [pc, #36]	; 14c34 <__flatcc_fb_open_output_file@@Base+0xb8>
   14c0c:	ldr	r0, [r3]
   14c10:	bl	13fb0 <fprintf@plt>
   14c14:	mov	r0, r5
   14c18:	bl	13ef0 <free@plt>
   14c1c:	mov	r0, r4
   14c20:	add	sp, sp, #12
   14c24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14c28:	andeq	r1, r3, fp, lsr #2
   14c2c:	andeq	pc, r2, r0, lsr r9	; <UNPREDICTABLE>
   14c30:	strheq	sl, [r5], -r0
   14c34:	andeq	pc, r2, sl, ror #18

00014c38 <__flatcc_fb_close_output_file@@Base>:
   14c38:	ldr	r3, [r0, #212]	; 0xd4
   14c3c:	ldr	r2, [r3, #124]	; 0x7c
   14c40:	cmp	r2, #0
   14c44:	bxne	lr
   14c48:	push	{r4, r5, r6, lr}
   14c4c:	ldr	r5, [r3, #108]	; 0x6c
   14c50:	cmp	r5, #0
   14c54:	popne	{r4, r5, r6, pc}
   14c58:	ldr	r3, [r0, #204]	; 0xcc
   14c5c:	cmp	r3, #0
   14c60:	popeq	{r4, r5, r6, pc}
   14c64:	mov	r4, r0
   14c68:	mov	r0, r3
   14c6c:	bl	13ff8 <fclose@plt>
   14c70:	str	r5, [r4, #204]	; 0xcc
   14c74:	pop	{r4, r5, r6, pc}

00014c78 <__flatcc_fb_end_output_c@@Base>:
   14c78:	ldr	r3, [pc, #40]	; 14ca8 <__flatcc_fb_end_output_c@@Base+0x30>
   14c7c:	push	{r4, lr}
   14c80:	mov	r4, r0
   14c84:	ldr	r0, [r0, #204]	; 0xcc
   14c88:	ldr	r3, [r3]
   14c8c:	cmp	r3, r0
   14c90:	cmpne	r0, #0
   14c94:	beq	14c9c <__flatcc_fb_end_output_c@@Base+0x24>
   14c98:	bl	13ff8 <fclose@plt>
   14c9c:	mov	r3, #0
   14ca0:	str	r3, [r4, #204]	; 0xcc
   14ca4:	pop	{r4, pc}
   14ca8:	strheq	sl, [r5], -r4

00014cac <__flatcc_fb_init_output_c@@Base>:
   14cac:	ldr	r2, [r1, #128]	; 0x80
   14cb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14cb4:	mov	r5, r1
   14cb8:	mov	r4, r0
   14cbc:	ldr	r3, [pc, #344]	; 14e1c <__flatcc_fb_init_output_c@@Base+0x170>
   14cc0:	cmp	r2, #0
   14cc4:	mov	r2, #232	; 0xe8
   14cc8:	ldr	r8, [r1, #216]	; 0xd8
   14ccc:	mov	r1, #0
   14cd0:	ldr	r9, [pc, #328]	; 14e20 <__flatcc_fb_init_output_c@@Base+0x174>
   14cd4:	moveq	r9, r3
   14cd8:	ldr	r3, [pc, #324]	; 14e24 <__flatcc_fb_init_output_c@@Base+0x178>
   14cdc:	cmp	r8, #0
   14ce0:	moveq	r8, r3
   14ce4:	bl	13fc8 <memset@plt>
   14ce8:	ldr	r7, [r5, #196]	; 0xc4
   14cec:	str	r5, [r4, #212]	; 0xd4
   14cf0:	cmp	r7, #0
   14cf4:	beq	14d2c <__flatcc_fb_init_output_c@@Base+0x80>
   14cf8:	mov	r0, r7
   14cfc:	bl	13fa4 <strlen@plt>
   14d00:	cmp	r0, #100	; 0x64
   14d04:	mov	r6, r0
   14d08:	bls	14d34 <__flatcc_fb_init_output_c@@Base+0x88>
   14d0c:	ldr	r3, [pc, #276]	; 14e28 <__flatcc_fb_init_output_c@@Base+0x17c>
   14d10:	mov	r2, #100	; 0x64
   14d14:	mvn	r5, #0
   14d18:	ldr	r1, [pc, #268]	; 14e2c <__flatcc_fb_init_output_c@@Base+0x180>
   14d1c:	ldr	r0, [r3]
   14d20:	bl	13fb0 <fprintf@plt>
   14d24:	mov	r0, r5
   14d28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d2c:	ldr	r7, [pc, #252]	; 14e30 <__flatcc_fb_init_output_c@@Base+0x184>
   14d30:	mov	r6, #11
   14d34:	mov	r1, r7
   14d38:	mov	r2, #100	; 0x64
   14d3c:	mov	r0, r4
   14d40:	add	sl, r4, #102	; 0x66
   14d44:	bl	13fd4 <strncpy@plt>
   14d48:	mov	r2, #0
   14d4c:	cmp	r6, r2
   14d50:	movne	r3, r4
   14d54:	movne	r1, #95	; 0x5f
   14d58:	strb	r2, [r4, #100]	; 0x64
   14d5c:	strbne	r1, [r3, r6]!
   14d60:	strbne	r2, [r3, #1]
   14d64:	ldrb	r7, [sl, #-102]	; 0xffffff9a
   14d68:	cmp	r7, #0
   14d6c:	bne	14da4 <__flatcc_fb_init_output_c@@Base+0xf8>
   14d70:	add	r6, r4, r6
   14d74:	strb	r7, [sl]
   14d78:	strb	r7, [r6, #102]	; 0x66
   14d7c:	ldr	r3, [r5, #176]	; 0xb0
   14d80:	ldr	r5, [r5, #108]	; 0x6c
   14d84:	str	r3, [r4, #224]	; 0xe0
   14d88:	cmp	r5, #0
   14d8c:	beq	14db8 <__flatcc_fb_init_output_c@@Base+0x10c>
   14d90:	ldr	r3, [pc, #156]	; 14e34 <__flatcc_fb_init_output_c@@Base+0x188>
   14d94:	mov	r5, r7
   14d98:	ldr	r3, [r3]
   14d9c:	str	r3, [r4, #204]	; 0xcc
   14da0:	b	14d24 <__flatcc_fb_init_output_c@@Base+0x78>
   14da4:	bl	13f80 <__ctype_toupper_loc@plt>
   14da8:	ldr	r3, [r0]
   14dac:	ldr	r3, [r3, r7, lsl #2]
   14db0:	strb	r3, [sl], #1
   14db4:	b	14d64 <__flatcc_fb_init_output_c@@Base+0xb8>
   14db8:	ldr	r3, [r4, #212]	; 0xd4
   14dbc:	ldr	r1, [r3, #124]	; 0x7c
   14dc0:	cmp	r1, #0
   14dc4:	beq	14d24 <__flatcc_fb_init_output_c@@Base+0x78>
   14dc8:	mov	r3, #1
   14dcc:	ldr	r2, [pc, #80]	; 14e24 <__flatcc_fb_init_output_c@@Base+0x178>
   14dd0:	mov	r0, r8
   14dd4:	bl	2336c <__flatcc_fb_create_join_path@@Base>
   14dd8:	subs	r6, r0, #0
   14ddc:	bne	14de4 <__flatcc_fb_init_output_c@@Base+0x138>
   14de0:	bl	14b58 <flatcc_parse_file@@Base+0x570>
   14de4:	mov	r1, r9
   14de8:	bl	13ee4 <fopen@plt>
   14dec:	cmp	r0, #0
   14df0:	str	r0, [r4, #204]	; 0xcc
   14df4:	bne	14e10 <__flatcc_fb_init_output_c@@Base+0x164>
   14df8:	ldr	r3, [pc, #40]	; 14e28 <__flatcc_fb_init_output_c@@Base+0x17c>
   14dfc:	mov	r2, r6
   14e00:	mvn	r5, #0
   14e04:	ldr	r1, [pc, #44]	; 14e38 <__flatcc_fb_init_output_c@@Base+0x18c>
   14e08:	ldr	r0, [r3]
   14e0c:	bl	13fb0 <fprintf@plt>
   14e10:	mov	r0, r6
   14e14:	bl	13ef0 <free@plt>
   14e18:	b	14d24 <__flatcc_fb_init_output_c@@Base+0x78>
   14e1c:	andeq	pc, r2, r0, lsr r9	; <UNPREDICTABLE>
   14e20:	andeq	pc, r2, ip, lsl #19
   14e24:	andeq	r1, r3, fp, lsr #2
   14e28:	strheq	sl, [r5], -r0
   14e2c:	muleq	r2, fp, r9
   14e30:	andeq	pc, r2, pc, lsl #19
   14e34:	strheq	sl, [r5], -r4
   14e38:	andeq	pc, r2, sl, ror #18

00014e3c <__flatcc_fb_gen_c_includes@@Base>:
   14e3c:	ldr	r3, [r0, #208]	; 0xd0
   14e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e44:	mov	r6, r0
   14e48:	sub	sp, sp, #36	; 0x24
   14e4c:	mov	r0, #0
   14e50:	mov	r9, r1
   14e54:	mov	r1, #0
   14e58:	mov	sl, r2
   14e5c:	ldr	fp, [pc, #224]	; 14f44 <__flatcc_fb_gen_c_includes@@Base+0x108>
   14e60:	ldr	r4, [r3]
   14e64:	strd	r0, [sp, #16]
   14e68:	strd	r0, [sp, #24]
   14e6c:	ldr	r0, [r3, #164]	; 0xa4
   14e70:	bl	231c0 <__flatcc_fb_copy_path@@Base>
   14e74:	mov	r1, r0
   14e78:	mov	r2, #1
   14e7c:	add	r0, sp, #16
   14e80:	bl	21af4 <str_set_insert_item@@Base>
   14e84:	cmp	r4, #0
   14e88:	bne	14ea4 <__flatcc_fb_gen_c_includes@@Base+0x68>
   14e8c:	ldr	r1, [pc, #180]	; 14f48 <__flatcc_fb_gen_c_includes@@Base+0x10c>
   14e90:	mov	r2, r4
   14e94:	add	r0, sp, #16
   14e98:	bl	21a7c <str_set_destroy@@Base>
   14e9c:	add	sp, sp, #36	; 0x24
   14ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ea4:	ldr	r3, [r6, #212]	; 0xd4
   14ea8:	ldrd	r0, [r4, #8]
   14eac:	ldr	r2, [r3, #96]	; 0x60
   14eb0:	bl	23570 <__flatcc_fb_create_basename@@Base>
   14eb4:	subs	r7, r0, #0
   14eb8:	bne	14ec0 <__flatcc_fb_gen_c_includes@@Base+0x84>
   14ebc:	bl	14b58 <flatcc_parse_file@@Base+0x570>
   14ec0:	ldr	r4, [r4]
   14ec4:	bl	231c0 <__flatcc_fb_copy_path@@Base>
   14ec8:	subs	r5, r0, #0
   14ecc:	beq	14ebc <__flatcc_fb_gen_c_includes@@Base+0x80>
   14ed0:	sub	r8, r5, #1
   14ed4:	ldrb	r3, [r8, #1]!
   14ed8:	cmp	r3, #0
   14edc:	bne	14f0c <__flatcc_fb_gen_c_includes@@Base+0xd0>
   14ee0:	mov	r2, #1
   14ee4:	mov	r1, r5
   14ee8:	add	r0, sp, #16
   14eec:	bl	21af4 <str_set_insert_item@@Base>
   14ef0:	cmp	r0, #0
   14ef4:	beq	14f28 <__flatcc_fb_gen_c_includes@@Base+0xec>
   14ef8:	mov	r0, r5
   14efc:	bl	13ef0 <free@plt>
   14f00:	mov	r0, r7
   14f04:	bl	13ef0 <free@plt>
   14f08:	b	14e84 <__flatcc_fb_gen_c_includes@@Base+0x48>
   14f0c:	str	r3, [sp, #12]
   14f10:	bl	13f80 <__ctype_toupper_loc@plt>
   14f14:	ldr	r2, [r0]
   14f18:	ldr	r3, [sp, #12]
   14f1c:	ldr	r3, [r2, r3, lsl #2]
   14f20:	strb	r3, [r8]
   14f24:	b	14ed4 <__flatcc_fb_gen_c_includes@@Base+0x98>
   14f28:	mov	r3, sl
   14f2c:	mov	r2, r5
   14f30:	ldr	r0, [r6, #204]	; 0xcc
   14f34:	mov	r1, fp
   14f38:	stm	sp, {r7, r9}
   14f3c:	bl	13fb0 <fprintf@plt>
   14f40:	b	14f00 <__flatcc_fb_gen_c_includes@@Base+0xc4>
   14f44:	ldrdeq	pc, [r2], -r2
   14f48:	andeq	r4, r1, r0, asr fp

00014f4c <__flatcc_fb_copy_scope@@Base>:
   14f4c:	push	{r4, r5, r6, r7, r8, lr}
   14f50:	ldr	r3, [r0]
   14f54:	ldr	r4, [r0, #24]
   14f58:	mov	r2, r4
   14f5c:	cmp	r3, #0
   14f60:	bne	14f78 <__flatcc_fb_copy_scope@@Base+0x2c>
   14f64:	cmp	r2, #101	; 0x65
   14f68:	bls	14f8c <__flatcc_fb_copy_scope@@Base+0x40>
   14f6c:	mvn	r0, #0
   14f70:	strb	r3, [r1]
   14f74:	pop	{r4, r5, r6, r7, r8, pc}
   14f78:	ldm	r3, {r3, ip}
   14f7c:	ldr	ip, [ip, #4]
   14f80:	add	ip, ip, #1
   14f84:	add	r2, r2, ip
   14f88:	b	14f5c <__flatcc_fb_copy_scope@@Base+0x10>
   14f8c:	mov	r6, r0
   14f90:	mov	r5, r1
   14f94:	mov	r0, r1
   14f98:	mov	r2, r4
   14f9c:	ldr	r1, [r6, #20]
   14fa0:	bl	13efc <memcpy@plt>
   14fa4:	ldr	r6, [r6]
   14fa8:	mov	r8, #95	; 0x5f
   14fac:	cmp	r6, #0
   14fb0:	add	r0, r5, r4
   14fb4:	bne	14fc4 <__flatcc_fb_copy_scope@@Base+0x78>
   14fb8:	strb	r6, [r0]
   14fbc:	mov	r0, r4
   14fc0:	pop	{r4, r5, r6, r7, r8, pc}
   14fc4:	ldr	r3, [r6, #4]
   14fc8:	ldm	r3, {r1, r7}
   14fcc:	mov	r2, r7
   14fd0:	add	r7, r4, r7
   14fd4:	bl	13efc <memcpy@plt>
   14fd8:	add	r4, r7, #1
   14fdc:	strb	r8, [r5, r7]
   14fe0:	ldr	r6, [r6]
   14fe4:	b	14fac <__flatcc_fb_copy_scope@@Base+0x60>

00014fe8 <__flatcc_fb_scoped_symbol_name@@Base>:
   14fe8:	ldr	r3, [r2, #204]	; 0xcc
   14fec:	push	{r4, r5, r6, lr}
   14ff0:	mov	r4, r2
   14ff4:	ldr	r5, [r1, #4]
   14ff8:	cmp	r3, r0
   14ffc:	beq	1502c <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   15000:	mov	r1, r2
   15004:	bl	14f4c <__flatcc_fb_copy_scope@@Base>
   15008:	cmp	r0, #0
   1500c:	strge	r0, [r4, #208]	; 0xd0
   15010:	bge	1502c <__flatcc_fb_scoped_symbol_name@@Base+0x44>
   15014:	mov	r3, #0
   15018:	ldr	r0, [pc, #112]	; 15090 <__flatcc_fb_scoped_symbol_name@@Base+0xa8>
   1501c:	str	r3, [r4, #208]	; 0xd0
   15020:	ldr	r3, [pc, #108]	; 15094 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15024:	ldr	r1, [r3]
   15028:	bl	1404c <fputs@plt>
   1502c:	ldr	r2, [r5, #4]
   15030:	ldr	r3, [r4, #208]	; 0xd0
   15034:	add	r3, r2, r3
   15038:	cmp	r3, #203	; 0xcb
   1503c:	strd	r2, [r4, #212]	; 0xd4
   15040:	ble	1506c <__flatcc_fb_scoped_symbol_name@@Base+0x84>
   15044:	ldr	r0, [pc, #72]	; 15094 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15048:	ldr	r1, [pc, #72]	; 15098 <__flatcc_fb_scoped_symbol_name@@Base+0xb0>
   1504c:	ldr	r3, [r5]
   15050:	ldr	r0, [r0]
   15054:	bl	13fb0 <fprintf@plt>
   15058:	ldr	r3, [r4, #208]	; 0xd0
   1505c:	rsb	r3, r3, #203	; 0xcb
   15060:	str	r3, [r4, #212]	; 0xd4
   15064:	mov	r3, #203	; 0xcb
   15068:	str	r3, [r4, #216]	; 0xd8
   1506c:	ldr	r0, [r4, #208]	; 0xd0
   15070:	ldr	r1, [r5]
   15074:	ldr	r2, [r4, #212]	; 0xd4
   15078:	add	r0, r4, r0
   1507c:	bl	13efc <memcpy@plt>
   15080:	ldr	r3, [r4, #216]	; 0xd8
   15084:	mov	r2, #0
   15088:	strb	r2, [r4, r3]
   1508c:	pop	{r4, r5, r6, pc}
   15090:	strdeq	pc, [r2], -r7
   15094:	strheq	sl, [r5], -r0
   15098:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>

0001509c <__flatcc_fb_codegen_common_c@@Base>:
   1509c:	push	{r4, r5, r6, lr}
   150a0:	mov	r4, r0
   150a4:	bl	13fa4 <strlen@plt>
   150a8:	ldr	r3, [r4, #212]	; 0xd4
   150ac:	sub	r6, r0, #1
   150b0:	ldr	r3, [r3, #144]	; 0x90
   150b4:	cmp	r3, #0
   150b8:	bne	150fc <__flatcc_fb_codegen_common_c@@Base+0x60>
   150bc:	ldr	r3, [r4, #212]	; 0xd4
   150c0:	ldr	r5, [r3, #148]	; 0x94
   150c4:	cmp	r5, #0
   150c8:	beq	1511c <__flatcc_fb_codegen_common_c@@Base+0x80>
   150cc:	ldr	r3, [pc, #112]	; 15144 <__flatcc_fb_codegen_common_c@@Base+0xa8>
   150d0:	mov	r2, r6
   150d4:	mov	r1, r4
   150d8:	mov	r0, r4
   150dc:	bl	14b7c <__flatcc_fb_open_output_file@@Base>
   150e0:	subs	r5, r0, #0
   150e4:	bne	15118 <__flatcc_fb_codegen_common_c@@Base+0x7c>
   150e8:	mov	r0, r4
   150ec:	bl	19814 <__flatcc_fb_gen_common_c_builder_header@@Base>
   150f0:	mov	r0, r4
   150f4:	bl	14c38 <__flatcc_fb_close_output_file@@Base>
   150f8:	b	1511c <__flatcc_fb_codegen_common_c@@Base+0x80>
   150fc:	ldr	r3, [pc, #68]	; 15148 <__flatcc_fb_codegen_common_c@@Base+0xac>
   15100:	mov	r2, r6
   15104:	mov	r1, r4
   15108:	mov	r0, r4
   1510c:	bl	14b7c <__flatcc_fb_open_output_file@@Base>
   15110:	cmp	r0, #0
   15114:	beq	15124 <__flatcc_fb_codegen_common_c@@Base+0x88>
   15118:	mvn	r5, #0
   1511c:	mov	r0, r5
   15120:	pop	{r4, r5, r6, pc}
   15124:	mov	r0, r4
   15128:	bl	16bf0 <__flatcc_fb_gen_common_c_header@@Base>
   1512c:	mov	r5, r0
   15130:	mov	r0, r4
   15134:	bl	14c38 <__flatcc_fb_close_output_file@@Base>
   15138:	cmp	r5, #0
   1513c:	beq	150bc <__flatcc_fb_codegen_common_c@@Base+0x20>
   15140:	b	1511c <__flatcc_fb_codegen_common_c@@Base+0x80>
   15144:	andeq	pc, r2, fp, asr #20
   15148:	andeq	pc, r2, sl, lsr sl	; <UNPREDICTABLE>

0001514c <__flatcc_fb_codegen_c@@Base>:
   1514c:	push	{r4, r5, r6, lr}
   15150:	mov	r4, r0
   15154:	mov	r2, #0
   15158:	ldr	r0, [r1, #60]	; 0x3c
   1515c:	str	r1, [r4, #208]	; 0xd0
   15160:	mov	r1, r2
   15164:	bl	22c14 <fb_scope_table_find@@Base>
   15168:	ldr	r3, [r4, #208]	; 0xd0
   1516c:	ldr	r5, [r3, #160]	; 0xa0
   15170:	str	r0, [r4, #216]	; 0xd8
   15174:	mov	r0, r5
   15178:	bl	13fa4 <strlen@plt>
   1517c:	ldr	r3, [r4, #212]	; 0xd4
   15180:	mov	r6, r0
   15184:	ldr	r3, [r3, #152]	; 0x98
   15188:	cmp	r3, #0
   1518c:	beq	151d0 <__flatcc_fb_codegen_c@@Base+0x84>
   15190:	mov	r2, r0
   15194:	ldr	r3, [pc, #344]	; 152f4 <__flatcc_fb_codegen_c@@Base+0x1a8>
   15198:	mov	r1, r5
   1519c:	mov	r0, r4
   151a0:	bl	14b7c <__flatcc_fb_open_output_file@@Base>
   151a4:	cmp	r0, #0
   151a8:	beq	151b8 <__flatcc_fb_codegen_c@@Base+0x6c>
   151ac:	mvn	r5, #0
   151b0:	mov	r0, r5
   151b4:	pop	{r4, r5, r6, pc}
   151b8:	mov	r0, r4
   151bc:	bl	17800 <__flatcc_fb_gen_c_reader@@Base>
   151c0:	subs	r5, r0, #0
   151c4:	bne	151b0 <__flatcc_fb_codegen_c@@Base+0x64>
   151c8:	mov	r0, r4
   151cc:	bl	14c38 <__flatcc_fb_close_output_file@@Base>
   151d0:	ldr	r3, [r4, #212]	; 0xd4
   151d4:	ldr	r3, [r3, #156]	; 0x9c
   151d8:	cmp	r3, #0
   151dc:	beq	15218 <__flatcc_fb_codegen_c@@Base+0xcc>
   151e0:	ldr	r1, [r4, #208]	; 0xd0
   151e4:	mov	r2, r6
   151e8:	mov	r0, r4
   151ec:	ldr	r3, [pc, #260]	; 152f8 <__flatcc_fb_codegen_c@@Base+0x1ac>
   151f0:	ldr	r1, [r1, #160]	; 0xa0
   151f4:	bl	14b7c <__flatcc_fb_open_output_file@@Base>
   151f8:	cmp	r0, #0
   151fc:	bne	151ac <__flatcc_fb_codegen_c@@Base+0x60>
   15200:	mov	r0, r4
   15204:	bl	1a084 <__flatcc_fb_gen_c_builder@@Base>
   15208:	subs	r5, r0, #0
   1520c:	bne	151b0 <__flatcc_fb_codegen_c@@Base+0x64>
   15210:	mov	r0, r4
   15214:	bl	14c38 <__flatcc_fb_close_output_file@@Base>
   15218:	ldr	r3, [r4, #212]	; 0xd4
   1521c:	ldr	r3, [r3, #160]	; 0xa0
   15220:	cmp	r3, #0
   15224:	beq	15260 <__flatcc_fb_codegen_c@@Base+0x114>
   15228:	ldr	r1, [r4, #208]	; 0xd0
   1522c:	mov	r2, r6
   15230:	mov	r0, r4
   15234:	ldr	r3, [pc, #192]	; 152fc <__flatcc_fb_codegen_c@@Base+0x1b0>
   15238:	ldr	r1, [r1, #160]	; 0xa0
   1523c:	bl	14b7c <__flatcc_fb_open_output_file@@Base>
   15240:	cmp	r0, #0
   15244:	bne	151ac <__flatcc_fb_codegen_c@@Base+0x60>
   15248:	mov	r0, r4
   1524c:	bl	1ac74 <__flatcc_fb_gen_c_verifier@@Base>
   15250:	subs	r5, r0, #0
   15254:	bne	151b0 <__flatcc_fb_codegen_c@@Base+0x64>
   15258:	mov	r0, r4
   1525c:	bl	14c38 <__flatcc_fb_close_output_file@@Base>
   15260:	ldr	r3, [r4, #212]	; 0xd4
   15264:	ldr	r3, [r3, #164]	; 0xa4
   15268:	cmp	r3, #0
   1526c:	beq	152a8 <__flatcc_fb_codegen_c@@Base+0x15c>
   15270:	ldr	r1, [r4, #208]	; 0xd0
   15274:	mov	r2, r6
   15278:	mov	r0, r4
   1527c:	ldr	r3, [pc, #124]	; 15300 <__flatcc_fb_codegen_c@@Base+0x1b4>
   15280:	ldr	r1, [r1, #160]	; 0xa0
   15284:	bl	14b7c <__flatcc_fb_open_output_file@@Base>
   15288:	cmp	r0, #0
   1528c:	bne	151ac <__flatcc_fb_codegen_c@@Base+0x60>
   15290:	mov	r0, r4
   15294:	bl	1d8e4 <__flatcc_fb_gen_c_json_parser@@Base>
   15298:	subs	r5, r0, #0
   1529c:	bne	151b0 <__flatcc_fb_codegen_c@@Base+0x64>
   152a0:	mov	r0, r4
   152a4:	bl	14c38 <__flatcc_fb_close_output_file@@Base>
   152a8:	ldr	r3, [r4, #212]	; 0xd4
   152ac:	ldr	r5, [r3, #168]	; 0xa8
   152b0:	cmp	r5, #0
   152b4:	beq	151b0 <__flatcc_fb_codegen_c@@Base+0x64>
   152b8:	ldr	r1, [r4, #208]	; 0xd0
   152bc:	mov	r2, r6
   152c0:	mov	r0, r4
   152c4:	ldr	r3, [pc, #56]	; 15304 <__flatcc_fb_codegen_c@@Base+0x1b8>
   152c8:	ldr	r1, [r1, #160]	; 0xa0
   152cc:	bl	14b7c <__flatcc_fb_open_output_file@@Base>
   152d0:	cmp	r0, #0
   152d4:	bne	151ac <__flatcc_fb_codegen_c@@Base+0x60>
   152d8:	mov	r0, r4
   152dc:	bl	1fd38 <__flatcc_fb_gen_c_json_printer@@Base>
   152e0:	subs	r5, r0, #0
   152e4:	bne	151b0 <__flatcc_fb_codegen_c@@Base+0x64>
   152e8:	mov	r0, r4
   152ec:	bl	14c38 <__flatcc_fb_close_output_file@@Base>
   152f0:	b	151b0 <__flatcc_fb_codegen_c@@Base+0x64>
   152f4:	andeq	r5, r4, r7, asr #30
   152f8:	andeq	r5, r4, fp, asr lr
   152fc:	andeq	pc, r2, sp, asr sl	; <UNPREDICTABLE>
   15300:	andeq	pc, r2, r9, ror #20
   15304:	andeq	pc, r2, r8, ror sl	; <UNPREDICTABLE>
   15308:	mov	r2, r1
   1530c:	mov	r1, r0
   15310:	ldr	r0, [r0, #12]
   15314:	b	14fe8 <__flatcc_fb_scoped_symbol_name@@Base>
   15318:	push	{r4, r5, lr}
   1531c:	sub	sp, sp, #228	; 0xe4
   15320:	mov	r5, r1
   15324:	mov	r4, r0
   15328:	mov	r2, #220	; 0xdc
   1532c:	mov	r1, #0
   15330:	add	r0, sp, #4
   15334:	bl	13fc8 <memset@plt>
   15338:	ldrh	r3, [r5, #8]
   1533c:	cmp	r3, #1
   15340:	bls	15358 <__flatcc_fb_codegen_c@@Base+0x20c>
   15344:	ldr	r3, [pc, #232]	; 15434 <__flatcc_fb_codegen_c@@Base+0x2e8>
   15348:	movw	r2, #863	; 0x35f
   1534c:	ldr	r1, [pc, #228]	; 15438 <__flatcc_fb_codegen_c@@Base+0x2ec>
   15350:	ldr	r0, [pc, #228]	; 1543c <__flatcc_fb_codegen_c@@Base+0x2f0>
   15354:	bl	14070 <__assert_fail@plt>
   15358:	add	r1, sp, #4
   1535c:	mov	r0, r5
   15360:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   15364:	ldrh	r3, [r5, #8]
   15368:	cmp	r3, #1
   1536c:	bne	153f8 <__flatcc_fb_codegen_c@@Base+0x2ac>
   15370:	ldrd	r2, [r5, #112]	; 0x70
   15374:	ldr	r0, [r4, #204]	; 0xcc
   15378:	orrs	r3, r2, r3
   1537c:	bne	153e4 <__flatcc_fb_codegen_c@@Base+0x298>
   15380:	add	r2, sp, #4
   15384:	ldr	r1, [pc, #180]	; 15440 <__flatcc_fb_codegen_c@@Base+0x2f4>
   15388:	bl	13fb0 <fprintf@plt>
   1538c:	add	r3, sp, #4
   15390:	ldr	r1, [pc, #172]	; 15444 <__flatcc_fb_codegen_c@@Base+0x2f8>
   15394:	mov	r2, r3
   15398:	ldr	r0, [r4, #204]	; 0xcc
   1539c:	bl	13fb0 <fprintf@plt>
   153a0:	add	r3, sp, #4
   153a4:	ldr	r1, [pc, #156]	; 15448 <__flatcc_fb_codegen_c@@Base+0x2fc>
   153a8:	mov	r2, r3
   153ac:	ldr	r0, [r4, #204]	; 0xcc
   153b0:	bl	13fb0 <fprintf@plt>
   153b4:	add	r3, sp, #4
   153b8:	ldr	r1, [pc, #140]	; 1544c <__flatcc_fb_codegen_c@@Base+0x300>
   153bc:	mov	r2, r3
   153c0:	ldr	r0, [r4, #204]	; 0xcc
   153c4:	bl	13fb0 <fprintf@plt>
   153c8:	ldr	r1, [pc, #128]	; 15450 <__flatcc_fb_codegen_c@@Base+0x304>
   153cc:	add	r3, sp, #4
   153d0:	mov	r2, r3
   153d4:	ldr	r0, [r4, #204]	; 0xcc
   153d8:	bl	13fb0 <fprintf@plt>
   153dc:	add	sp, sp, #228	; 0xe4
   153e0:	pop	{r4, r5, pc}
   153e4:	add	r3, sp, #4
   153e8:	ldr	r1, [pc, #100]	; 15454 <__flatcc_fb_codegen_c@@Base+0x308>
   153ec:	mov	r2, r3
   153f0:	bl	13fb0 <fprintf@plt>
   153f4:	b	1538c <__flatcc_fb_codegen_c@@Base+0x240>
   153f8:	add	r3, sp, #4
   153fc:	ldr	r1, [pc, #84]	; 15458 <__flatcc_fb_codegen_c@@Base+0x30c>
   15400:	mov	r2, r3
   15404:	ldr	r0, [r4, #204]	; 0xcc
   15408:	bl	13fb0 <fprintf@plt>
   1540c:	add	r3, sp, #4
   15410:	mov	r2, r4
   15414:	ldr	r1, [pc, #64]	; 1545c <__flatcc_fb_codegen_c@@Base+0x310>
   15418:	ldr	r0, [r4, #204]	; 0xcc
   1541c:	bl	13fb0 <fprintf@plt>
   15420:	add	r3, sp, #4
   15424:	mov	r2, r4
   15428:	ldr	r1, [pc, #48]	; 15460 <__flatcc_fb_codegen_c@@Base+0x314>
   1542c:	ldr	r0, [r4, #204]	; 0xcc
   15430:	b	153d8 <__flatcc_fb_codegen_c@@Base+0x28c>
   15434:	andeq	pc, r2, r8, lsl #21
   15438:	andeq	pc, r2, r4, ror #23
   1543c:	andeq	pc, r2, r4, lsr ip	; <UNPREDICTABLE>
   15440:	andeq	pc, r2, r6, ror ip	; <UNPREDICTABLE>
   15444:			; <UNDEFINED> instruction: 0x0002fcb6
   15448:	ldrdeq	pc, [r2], -r8
   1544c:	strdeq	pc, [r2], -ip
   15450:	andeq	pc, r2, fp, lsl sp	; <UNPREDICTABLE>
   15454:	muleq	r2, sp, ip
   15458:	andeq	pc, r2, ip, lsr sp	; <UNPREDICTABLE>
   1545c:	andeq	pc, r2, r8, ror #26
   15460:	andeq	pc, r2, lr, lsl #27
   15464:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15468:	subs	r4, r2, #0
   1546c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15470:	mov	r5, r0
   15474:	mov	r6, r1
   15478:	ldr	r8, [pc, #116]	; 154f4 <__flatcc_fb_codegen_c@@Base+0x3a8>
   1547c:	mov	r3, #1
   15480:	mov	r2, #0
   15484:	ldr	r9, [pc, #108]	; 154f8 <__flatcc_fb_codegen_c@@Base+0x3ac>
   15488:	ldr	r7, [pc, #108]	; 154fc <__flatcc_fb_codegen_c@@Base+0x3b0>
   1548c:	ldr	r1, [r4, #4]
   15490:	ldr	r1, [r1, #8]
   15494:	cmp	r1, r2
   15498:	beq	154b4 <__flatcc_fb_codegen_c@@Base+0x368>
   1549c:	cmp	r3, #0
   154a0:	mov	r2, r6
   154a4:	ldr	r0, [r5]
   154a8:	movne	r1, r9
   154ac:	moveq	r1, r8
   154b0:	bl	13fb0 <fprintf@plt>
   154b4:	ldr	r2, [r4, #4]
   154b8:	mov	r1, r7
   154bc:	ldr	r0, [r5]
   154c0:	ldr	r3, [r2]
   154c4:	ldr	r2, [r2, #4]
   154c8:	bl	13fb0 <fprintf@plt>
   154cc:	ldr	r3, [r4, #4]
   154d0:	ldr	r4, [r4]
   154d4:	ldr	r2, [r3, #8]
   154d8:	mov	r3, #0
   154dc:	cmp	r4, r3
   154e0:	bne	1548c <__flatcc_fb_codegen_c@@Base+0x340>
   154e4:	ldr	r0, [pc, #20]	; 15500 <__flatcc_fb_codegen_c@@Base+0x3b4>
   154e8:	ldr	r1, [r5]
   154ec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   154f0:	b	1404c <fputs@plt>
   154f4:			; <UNDEFINED> instruction: 0x0002fdbd
   154f8:			; <UNDEFINED> instruction: 0x0002fdb6
   154fc:	andeq	r8, r3, pc, ror r1
   15500:	andeq	r5, r4, fp, asr #17
   15504:	push	{r0, r1, r2, lr}
   15508:	ldr	r4, [pc, #48]	; 15540 <__flatcc_fb_codegen_c@@Base+0x3f4>
   1550c:	ldr	r3, [pc, #48]	; 15544 <__flatcc_fb_codegen_c@@Base+0x3f8>
   15510:	ldr	r0, [pc, #48]	; 15548 <__flatcc_fb_codegen_c@@Base+0x3fc>
   15514:	mov	r2, r4
   15518:	ldr	r1, [pc, #44]	; 1554c <__flatcc_fb_codegen_c@@Base+0x400>
   1551c:	str	r3, [sp]
   15520:	mov	r3, #141	; 0x8d
   15524:	ldr	r0, [r0]
   15528:	bl	13fb0 <fprintf@plt>
   1552c:	ldr	r3, [pc, #28]	; 15550 <__flatcc_fb_codegen_c@@Base+0x404>
   15530:	mov	r2, #141	; 0x8d
   15534:	mov	r1, r4
   15538:	ldr	r0, [pc, #20]	; 15554 <__flatcc_fb_codegen_c@@Base+0x408>
   1553c:	bl	14070 <__assert_fail@plt>
   15540:	andeq	pc, r2, r4, asr #27
   15544:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   15548:	strheq	sl, [r5], -r0
   1554c:	andeq	pc, r2, sp, lsl #28
   15550:	muleq	r2, r9, sl
   15554:	andeq	r8, r3, pc, ror #2
   15558:	push	{r0, r1, r2, lr}
   1555c:	ldr	r4, [pc, #48]	; 15594 <__flatcc_fb_codegen_c@@Base+0x448>
   15560:	ldr	r3, [pc, #48]	; 15598 <__flatcc_fb_codegen_c@@Base+0x44c>
   15564:	ldr	r0, [pc, #48]	; 1559c <__flatcc_fb_codegen_c@@Base+0x450>
   15568:	mov	r2, r4
   1556c:	ldr	r1, [pc, #44]	; 155a0 <__flatcc_fb_codegen_c@@Base+0x454>
   15570:	str	r3, [sp]
   15574:	mov	r3, #96	; 0x60
   15578:	ldr	r0, [r0]
   1557c:	bl	13fb0 <fprintf@plt>
   15580:	ldr	r3, [pc, #28]	; 155a4 <__flatcc_fb_codegen_c@@Base+0x458>
   15584:	mov	r2, #96	; 0x60
   15588:	mov	r1, r4
   1558c:	ldr	r0, [pc, #20]	; 155a8 <__flatcc_fb_codegen_c@@Base+0x45c>
   15590:	bl	14070 <__assert_fail@plt>
   15594:	andeq	pc, r2, r4, asr #27
   15598:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   1559c:	strheq	sl, [r5], -r0
   155a0:	andeq	pc, r2, sp, lsl #28
   155a4:	andeq	pc, r2, sl, lsr #21
   155a8:	andeq	r8, r3, pc, ror #2
   155ac:	push	{r0, r1, r2, lr}
   155b0:	ldr	r4, [pc, #48]	; 155e8 <__flatcc_fb_codegen_c@@Base+0x49c>
   155b4:	ldr	r3, [pc, #48]	; 155ec <__flatcc_fb_codegen_c@@Base+0x4a0>
   155b8:	ldr	r0, [pc, #48]	; 155f0 <__flatcc_fb_codegen_c@@Base+0x4a4>
   155bc:	mov	r2, r4
   155c0:	ldr	r1, [pc, #44]	; 155f4 <__flatcc_fb_codegen_c@@Base+0x4a8>
   155c4:	str	r3, [sp]
   155c8:	mov	r3, #226	; 0xe2
   155cc:	ldr	r0, [r0]
   155d0:	bl	13fb0 <fprintf@plt>
   155d4:	ldr	r3, [pc, #28]	; 155f8 <__flatcc_fb_codegen_c@@Base+0x4ac>
   155d8:	mov	r2, #226	; 0xe2
   155dc:	mov	r1, r4
   155e0:	ldr	r0, [pc, #20]	; 155fc <__flatcc_fb_codegen_c@@Base+0x4b0>
   155e4:	bl	14070 <__assert_fail@plt>
   155e8:	andeq	pc, r2, r4, asr #27
   155ec:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   155f0:	strheq	sl, [r5], -r0
   155f4:	andeq	pc, r2, sp, lsl #28
   155f8:			; <UNDEFINED> instruction: 0x0002fabd
   155fc:	andeq	r8, r3, pc, ror #2
   15600:	push	{r0, r1, r2, r4, r5, lr}
   15604:	mov	r3, r0
   15608:	mov	r0, r2
   1560c:	ldrh	r2, [r1, #8]
   15610:	sub	r2, r2, #3
   15614:	cmp	r2, #3
   15618:	ldrls	pc, [pc, r2, lsl #2]
   1561c:	b	156e4 <__flatcc_fb_codegen_c@@Base+0x598>
   15620:			; <UNDEFINED> instruction: 0x000156b8
   15624:	andeq	r5, r1, r4, ror #12
   15628:	andeq	r5, r1, r0, lsr r6
   1562c:	andeq	r5, r1, ip, lsl #13
   15630:	sub	r3, r3, #1
   15634:	cmp	r3, #8
   15638:	bhi	15660 <__flatcc_fb_codegen_c@@Base+0x514>
   1563c:	ldr	r2, [pc, #212]	; 15718 <__flatcc_fb_codegen_c@@Base+0x5cc>
   15640:	ldrd	r4, [r1]
   15644:	ldr	r1, [pc, #208]	; 1571c <__flatcc_fb_codegen_c@@Base+0x5d0>
   15648:	add	r3, r2, r3, lsl #2
   1564c:	ldr	r2, [r3, #68]	; 0x44
   15650:	strd	r4, [sp]
   15654:	bl	1401c <sprintf@plt>
   15658:	add	sp, sp, #12
   1565c:	pop	{r4, r5, pc}
   15660:	bl	155ac <__flatcc_fb_codegen_c@@Base+0x460>
   15664:	sub	r3, r3, #1
   15668:	cmp	r3, #8
   1566c:	bhi	15660 <__flatcc_fb_codegen_c@@Base+0x514>
   15670:	ldr	r2, [pc, #160]	; 15718 <__flatcc_fb_codegen_c@@Base+0x5cc>
   15674:	ldrd	r4, [r1]
   15678:	ldr	r1, [pc, #160]	; 15720 <__flatcc_fb_codegen_c@@Base+0x5d4>
   1567c:	add	r3, r2, r3, lsl #2
   15680:	strd	r4, [sp]
   15684:	ldr	r2, [r3, #68]	; 0x44
   15688:	b	15654 <__flatcc_fb_codegen_c@@Base+0x508>
   1568c:	sub	r3, r3, #1
   15690:	cmp	r3, #8
   15694:	bhi	15660 <__flatcc_fb_codegen_c@@Base+0x514>
   15698:	ldr	r2, [pc, #120]	; 15718 <__flatcc_fb_codegen_c@@Base+0x5cc>
   1569c:	add	r2, r2, r3, lsl #2
   156a0:	ldrb	r3, [r1]
   156a4:	ldr	r1, [pc, #120]	; 15724 <__flatcc_fb_codegen_c@@Base+0x5d8>
   156a8:	ldr	r2, [r2, #68]	; 0x44
   156ac:	add	sp, sp, #12
   156b0:	pop	{r4, r5, lr}
   156b4:	b	1401c <sprintf@plt>
   156b8:	cmp	r3, #11
   156bc:	ldrdne	r2, [r1]
   156c0:	vldreq	d7, [r1]
   156c4:	ldrne	r1, [pc, #92]	; 15728 <__flatcc_fb_codegen_c@@Base+0x5dc>
   156c8:	ldreq	r1, [pc, #92]	; 1572c <__flatcc_fb_codegen_c@@Base+0x5e0>
   156cc:	vcvteq.f32.f64	s14, d7
   156d0:	vcvteq.f64.f32	d7, s14
   156d4:	vmoveq	r2, r3, d7
   156d8:	add	sp, sp, #12
   156dc:	pop	{r4, r5, lr}
   156e0:	b	1401c <sprintf@plt>
   156e4:	ldr	r3, [pc, #68]	; 15730 <__flatcc_fb_codegen_c@@Base+0x5e4>
   156e8:	ldr	r0, [pc, #68]	; 15734 <__flatcc_fb_codegen_c@@Base+0x5e8>
   156ec:	ldr	r2, [pc, #68]	; 15738 <__flatcc_fb_codegen_c@@Base+0x5ec>
   156f0:	str	r3, [sp]
   156f4:	mov	r3, #260	; 0x104
   156f8:	ldr	r1, [pc, #60]	; 1573c <__flatcc_fb_codegen_c@@Base+0x5f0>
   156fc:	ldr	r0, [r0]
   15700:	bl	13fb0 <fprintf@plt>
   15704:	ldr	r3, [pc, #52]	; 15740 <__flatcc_fb_codegen_c@@Base+0x5f4>
   15708:	mov	r2, #260	; 0x104
   1570c:	ldr	r1, [pc, #36]	; 15738 <__flatcc_fb_codegen_c@@Base+0x5ec>
   15710:	ldr	r0, [pc, #44]	; 15744 <__flatcc_fb_codegen_c@@Base+0x5f8>
   15714:	bl	14070 <__assert_fail@plt>
   15718:	andeq	pc, r2, r8, lsl #21
   1571c:	andeq	pc, r2, pc, asr #28
   15720:	andeq	pc, r2, r8, asr lr	; <UNPREDICTABLE>
   15724:	andeq	pc, r2, r1, ror #28
   15728:	andeq	pc, r2, ip, ror #28
   1572c:	andeq	pc, r2, r8, ror #28
   15730:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   15734:	strheq	sl, [r5], -r0
   15738:	andeq	pc, r2, r4, asr #27
   1573c:	andeq	pc, r2, sp, lsl #28
   15740:	strdeq	pc, [r2], -r0
   15744:	andeq	r8, r3, pc, ror #2
   15748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1574c:	sub	sp, sp, #348	; 0x15c
   15750:	mov	r6, r1
   15754:	add	r5, sp, #124	; 0x7c
   15758:	mov	r4, r0
   1575c:	mov	r2, #220	; 0xdc
   15760:	mov	r1, #0
   15764:	mov	r0, r5
   15768:	bl	13fc8 <memset@plt>
   1576c:	ldrh	r7, [r6, #8]
   15770:	sub	r3, r7, #3
   15774:	cmp	r3, #1
   15778:	bls	15790 <__flatcc_fb_codegen_c@@Base+0x644>
   1577c:	ldr	r3, [pc, #672]	; 15a24 <__flatcc_fb_codegen_c@@Base+0x8d8>
   15780:	movw	r2, #1204	; 0x4b4
   15784:	ldr	r1, [pc, #668]	; 15a28 <__flatcc_fb_codegen_c@@Base+0x8dc>
   15788:	ldr	r0, [pc, #668]	; 15a2c <__flatcc_fb_codegen_c@@Base+0x8e0>
   1578c:	bl	14070 <__assert_fail@plt>
   15790:	ldrh	r3, [r6, #48]	; 0x30
   15794:	cmp	r3, #8
   15798:	beq	157b0 <__flatcc_fb_codegen_c@@Base+0x664>
   1579c:	ldr	r3, [pc, #640]	; 15a24 <__flatcc_fb_codegen_c@@Base+0x8d8>
   157a0:	movw	r2, #1205	; 0x4b5
   157a4:	ldr	r1, [pc, #636]	; 15a28 <__flatcc_fb_codegen_c@@Base+0x8dc>
   157a8:	ldr	r0, [pc, #640]	; 15a30 <__flatcc_fb_codegen_c@@Base+0x8e4>
   157ac:	b	1578c <__flatcc_fb_codegen_c@@Base+0x640>
   157b0:	ldr	r3, [r6, #40]	; 0x28
   157b4:	ldr	sl, [pc, #632]	; 15a34 <__flatcc_fb_codegen_c@@Base+0x8e8>
   157b8:	cmp	r3, #5
   157bc:	sub	r3, r3, #1
   157c0:	moveq	fp, r4
   157c4:	movne	fp, sl
   157c8:	cmp	r3, #10
   157cc:	bhi	15940 <__flatcc_fb_codegen_c@@Base+0x7f4>
   157d0:	ldr	r2, [pc, #608]	; 15a38 <__flatcc_fb_codegen_c@@Base+0x8ec>
   157d4:	cmp	r7, #3
   157d8:	mov	r1, r5
   157dc:	mov	r0, r6
   157e0:	ldr	r9, [r6, #112]	; 0x70
   157e4:	ldr	r8, [pc, #592]	; 15a3c <__flatcc_fb_codegen_c@@Base+0x8f0>
   157e8:	add	r3, r2, r3, lsl #2
   157ec:	ldr	r2, [pc, #588]	; 15a40 <__flatcc_fb_codegen_c@@Base+0x8f4>
   157f0:	lsl	r9, r9, #3
   157f4:	ldr	r3, [r3, #128]	; 0x80
   157f8:	moveq	r8, r2
   157fc:	str	r3, [sp, #20]
   15800:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   15804:	add	r3, r4, #204	; 0xcc
   15808:	mov	r1, sl
   1580c:	ldr	r2, [r6, #32]
   15810:	mov	r0, r3
   15814:	str	r3, [sp, #16]
   15818:	bl	15464 <__flatcc_fb_codegen_c@@Base+0x318>
   1581c:	mov	r2, fp
   15820:	ldr	r1, [pc, #540]	; 15a44 <__flatcc_fb_codegen_c@@Base+0x8f8>
   15824:	ldr	r3, [sp, #20]
   15828:	ldr	r0, [r4, #204]	; 0xcc
   1582c:	stm	sp, {r5, r8}
   15830:	bl	13fb0 <fprintf@plt>
   15834:	mov	r3, r5
   15838:	mov	r2, r4
   1583c:	ldr	r1, [pc, #516]	; 15a48 <__flatcc_fb_codegen_c@@Base+0x8fc>
   15840:	ldr	r0, [r4, #204]	; 0xcc
   15844:	stm	sp, {r5, r8, r9}
   15848:	bl	13fb0 <fprintf@plt>
   1584c:	cmp	r7, #3
   15850:	beq	1586c <__flatcc_fb_codegen_c@@Base+0x720>
   15854:	mov	r3, r4
   15858:	mov	r2, r4
   1585c:	ldr	r1, [pc, #488]	; 15a4c <__flatcc_fb_codegen_c@@Base+0x900>
   15860:	ldr	r0, [r4, #204]	; 0xcc
   15864:	str	r5, [sp]
   15868:	bl	13fb0 <fprintf@plt>
   1586c:	ldr	r9, [r6, #20]
   15870:	add	sl, sp, #24
   15874:	cmp	r9, #0
   15878:	bne	15944 <__flatcc_fb_codegen_c@@Base+0x7f8>
   1587c:	mov	r0, #10
   15880:	ldr	r1, [r4, #204]	; 0xcc
   15884:	bl	14010 <fputc@plt>
   15888:	cmp	r7, #3
   1588c:	mov	r3, r5
   15890:	mov	r2, r5
   15894:	beq	15998 <__flatcc_fb_codegen_c@@Base+0x84c>
   15898:	ldr	r1, [pc, #432]	; 15a50 <__flatcc_fb_codegen_c@@Base+0x904>
   1589c:	ldr	r0, [r4, #204]	; 0xcc
   158a0:	bl	13fb0 <fprintf@plt>
   158a4:	ldr	r0, [pc, #424]	; 15a54 <__flatcc_fb_codegen_c@@Base+0x908>
   158a8:	ldr	r1, [r4, #204]	; 0xcc
   158ac:	bl	1404c <fputs@plt>
   158b0:	ldr	r9, [pc, #416]	; 15a58 <__flatcc_fb_codegen_c@@Base+0x90c>
   158b4:	ldr	sl, [pc, #416]	; 15a5c <__flatcc_fb_codegen_c@@Base+0x910>
   158b8:	ldr	r8, [r6, #20]
   158bc:	cmp	r8, #0
   158c0:	ldr	r0, [r4, #204]	; 0xcc
   158c4:	bne	159b0 <__flatcc_fb_codegen_c@@Base+0x864>
   158c8:	mov	r1, r0
   158cc:	ldr	r0, [pc, #396]	; 15a60 <__flatcc_fb_codegen_c@@Base+0x914>
   158d0:	bl	1404c <fputs@plt>
   158d4:	mov	r0, #10
   158d8:	ldr	r1, [r4, #204]	; 0xcc
   158dc:	bl	14010 <fputc@plt>
   158e0:	cmp	r7, #3
   158e4:	mov	r3, r5
   158e8:	mov	r2, r5
   158ec:	beq	159e0 <__flatcc_fb_codegen_c@@Base+0x894>
   158f0:	ldr	r1, [pc, #364]	; 15a64 <__flatcc_fb_codegen_c@@Base+0x918>
   158f4:	ldr	r0, [r4, #204]	; 0xcc
   158f8:	bl	13fb0 <fprintf@plt>
   158fc:	ldr	r0, [pc, #336]	; 15a54 <__flatcc_fb_codegen_c@@Base+0x908>
   15900:	ldr	r1, [r4, #204]	; 0xcc
   15904:	bl	1404c <fputs@plt>
   15908:	ldr	r7, [pc, #344]	; 15a68 <__flatcc_fb_codegen_c@@Base+0x91c>
   1590c:	ldr	r8, [pc, #344]	; 15a6c <__flatcc_fb_codegen_c@@Base+0x920>
   15910:	ldr	r6, [r6, #20]
   15914:	cmp	r6, #0
   15918:	ldr	r0, [r4, #204]	; 0xcc
   1591c:	bne	159f8 <__flatcc_fb_codegen_c@@Base+0x8ac>
   15920:	mov	r1, r0
   15924:	ldr	r0, [pc, #324]	; 15a70 <__flatcc_fb_codegen_c@@Base+0x924>
   15928:	bl	1404c <fputs@plt>
   1592c:	ldr	r1, [r4, #204]	; 0xcc
   15930:	mov	r0, #10
   15934:	bl	14010 <fputc@plt>
   15938:	add	sp, sp, #348	; 0x15c
   1593c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15940:	bl	15504 <__flatcc_fb_codegen_c@@Base+0x3b8>
   15944:	ldr	r1, [pc, #232]	; 15a34 <__flatcc_fb_codegen_c@@Base+0x8e8>
   15948:	ldr	r0, [sp, #16]
   1594c:	ldr	r2, [r9, #68]	; 0x44
   15950:	bl	15464 <__flatcc_fb_codegen_c@@Base+0x318>
   15954:	ldr	r2, [r9, #4]
   15958:	add	r1, r9, #48	; 0x30
   1595c:	ldr	r0, [r6, #40]	; 0x28
   15960:	ldr	fp, [r2]
   15964:	ldr	r3, [r2, #4]
   15968:	mov	r2, sl
   1596c:	str	r3, [sp, #20]
   15970:	bl	15600 <__flatcc_fb_codegen_c@@Base+0x4b4>
   15974:	mov	r2, r5
   15978:	ldr	r1, [pc, #244]	; 15a74 <__flatcc_fb_codegen_c@@Base+0x928>
   1597c:	ldr	r3, [sp, #20]
   15980:	ldr	r0, [r4, #204]	; 0xcc
   15984:	str	fp, [sp]
   15988:	stmib	sp, {r5, r8, sl}
   1598c:	bl	13fb0 <fprintf@plt>
   15990:	ldr	r9, [r9]
   15994:	b	15874 <__flatcc_fb_codegen_c@@Base+0x728>
   15998:	ldr	r1, [pc, #216]	; 15a78 <__flatcc_fb_codegen_c@@Base+0x92c>
   1599c:	ldr	r0, [r4, #204]	; 0xcc
   159a0:	bl	13fb0 <fprintf@plt>
   159a4:	ldr	r0, [pc, #208]	; 15a7c <__flatcc_fb_codegen_c@@Base+0x930>
   159a8:	ldr	r1, [r4, #204]	; 0xcc
   159ac:	b	158ac <__flatcc_fb_codegen_c@@Base+0x760>
   159b0:	ldr	r2, [r8, #4]
   159b4:	ldrh	r1, [r8, #10]
   159b8:	ldrd	r2, [r2]
   159bc:	tst	r1, #4
   159c0:	movne	r1, sl
   159c4:	moveq	r1, r9
   159c8:	strd	r2, [sp]
   159cc:	str	r2, [sp, #8]
   159d0:	mov	r2, r5
   159d4:	bl	13fb0 <fprintf@plt>
   159d8:	ldr	r8, [r8]
   159dc:	b	158bc <__flatcc_fb_codegen_c@@Base+0x770>
   159e0:	ldr	r1, [pc, #152]	; 15a80 <__flatcc_fb_codegen_c@@Base+0x934>
   159e4:	ldr	r0, [r4, #204]	; 0xcc
   159e8:	bl	13fb0 <fprintf@plt>
   159ec:	ldr	r0, [pc, #136]	; 15a7c <__flatcc_fb_codegen_c@@Base+0x930>
   159f0:	ldr	r1, [r4, #204]	; 0xcc
   159f4:	b	15904 <__flatcc_fb_codegen_c@@Base+0x7b8>
   159f8:	ldr	r2, [r6, #4]
   159fc:	ldrh	r1, [r6, #10]
   15a00:	ldrd	r2, [r2]
   15a04:	tst	r1, #4
   15a08:	movne	r1, r8
   15a0c:	moveq	r1, r7
   15a10:	str	r2, [sp]
   15a14:	mov	r2, r5
   15a18:	bl	13fb0 <fprintf@plt>
   15a1c:	ldr	r6, [r6]
   15a20:	b	15914 <__flatcc_fb_codegen_c@@Base+0x7c8>
   15a24:	strdeq	pc, [r2], -lr
   15a28:	andeq	pc, r2, r4, ror #23
   15a2c:	andeq	pc, r2, fp, ror lr	; <UNPREDICTABLE>
   15a30:			; <UNDEFINED> instruction: 0x0002febb
   15a34:	andeq	r1, r3, fp, lsr #2
   15a38:	andeq	pc, r2, r8, lsl #21
   15a3c:	andeq	pc, r2, r0, ror lr	; <UNPREDICTABLE>
   15a40:	andeq	r7, r4, r9, lsr r4
   15a44:	ldrdeq	pc, [r2], -fp
   15a48:	strdeq	pc, [r2], -r2
   15a4c:	andeq	pc, r2, ip, lsl pc	; <UNPREDICTABLE>
   15a50:	andeq	pc, r2, r5, asr pc	; <UNPREDICTABLE>
   15a54:	andeq	r5, r4, r3, lsl #22
   15a58:	andeq	r0, r3, r5, lsl r0
   15a5c:	andeq	pc, r2, r1, ror #31
   15a60:	andeq	r0, r3, r7, lsr r0
   15a64:	andeq	r0, r3, r8, asr r0
   15a68:	strdeq	r0, [r3], -fp
   15a6c:	andeq	r0, r3, ip, asr #1
   15a70:	andeq	r0, r3, r8, lsl r1
   15a74:	andeq	pc, r2, r6, lsr pc	; <UNPREDICTABLE>
   15a78:	muleq	r2, r5, pc	; <UNPREDICTABLE>
   15a7c:	andeq	pc, r2, fp, asr #31
   15a80:	muleq	r3, r4, r0
   15a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a88:	sub	sp, sp, #1040	; 0x410
   15a8c:	sub	sp, sp, #4
   15a90:	ldrh	r9, [r1, #8]
   15a94:	str	r1, [sp, #44]	; 0x2c
   15a98:	cmp	r9, #0
   15a9c:	beq	15ab4 <__flatcc_fb_codegen_c@@Base+0x968>
   15aa0:	ldr	r3, [pc, #2204]	; 16344 <__flatcc_fb_codegen_c@@Base+0x11f8>
   15aa4:	movw	r2, #1362	; 0x552
   15aa8:	ldr	r1, [pc, #2200]	; 16348 <__flatcc_fb_codegen_c@@Base+0x11fc>
   15aac:	ldr	r0, [pc, #2200]	; 1634c <__flatcc_fb_codegen_c@@Base+0x1200>
   15ab0:	bl	14070 <__assert_fail@plt>
   15ab4:	add	r5, sp, #160	; 0xa0
   15ab8:	mov	r4, r0
   15abc:	mov	r2, #220	; 0xdc
   15ac0:	mov	r1, r9
   15ac4:	mov	r0, r5
   15ac8:	bl	13fc8 <memset@plt>
   15acc:	mov	r2, #220	; 0xdc
   15ad0:	mov	r1, r9
   15ad4:	add	r0, sp, #380	; 0x17c
   15ad8:	bl	13fc8 <memset@plt>
   15adc:	mov	r3, r4
   15ae0:	mov	r0, #10
   15ae4:	ldr	r1, [r3, #204]!	; 0xcc
   15ae8:	str	r3, [sp, #48]	; 0x30
   15aec:	bl	14010 <fputc@plt>
   15af0:	mov	r1, r5
   15af4:	ldr	r0, [sp, #44]	; 0x2c
   15af8:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   15afc:	ldr	r3, [sp, #44]	; 0x2c
   15b00:	ldr	r1, [pc, #2120]	; 16350 <__flatcc_fb_codegen_c@@Base+0x1204>
   15b04:	ldr	r0, [sp, #48]	; 0x30
   15b08:	ldr	r2, [r3, #32]
   15b0c:	bl	15464 <__flatcc_fb_codegen_c@@Base+0x318>
   15b10:	mov	r2, r5
   15b14:	ldr	r1, [pc, #2104]	; 16354 <__flatcc_fb_codegen_c@@Base+0x1208>
   15b18:	ldr	r0, [r4, #204]	; 0xcc
   15b1c:	bl	13fb0 <fprintf@plt>
   15b20:	mov	r3, r5
   15b24:	mov	r2, r5
   15b28:	ldr	r1, [pc, #2088]	; 16358 <__flatcc_fb_codegen_c@@Base+0x120c>
   15b2c:	str	r4, [sp]
   15b30:	ldr	r0, [r4, #204]	; 0xcc
   15b34:	bl	13fb0 <fprintf@plt>
   15b38:	mov	r3, r5
   15b3c:	mov	r2, r5
   15b40:	ldr	r1, [pc, #2068]	; 1635c <__flatcc_fb_codegen_c@@Base+0x1210>
   15b44:	str	r5, [sp]
   15b48:	strd	r4, [sp, #4]
   15b4c:	ldr	r0, [r4, #204]	; 0xcc
   15b50:	bl	13fb0 <fprintf@plt>
   15b54:	mov	r3, r5
   15b58:	mov	r2, r4
   15b5c:	ldr	r1, [pc, #2044]	; 16360 <__flatcc_fb_codegen_c@@Base+0x1214>
   15b60:	ldr	r0, [r4, #204]	; 0xcc
   15b64:	bl	13fb0 <fprintf@plt>
   15b68:	mov	r0, #10
   15b6c:	ldr	r1, [r4, #204]	; 0xcc
   15b70:	bl	14010 <fputc@plt>
   15b74:	ldr	r3, [sp, #44]	; 0x2c
   15b78:	ldr	r5, [r3, #20]
   15b7c:	cmp	r5, #0
   15b80:	bne	15b90 <__flatcc_fb_codegen_c@@Base+0xa44>
   15b84:	add	sp, sp, #1040	; 0x410
   15b88:	add	sp, sp, #4
   15b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b90:	ldr	r1, [pc, #1976]	; 16350 <__flatcc_fb_codegen_c@@Base+0x1204>
   15b94:	add	r8, sp, #160	; 0xa0
   15b98:	ldr	r0, [sp, #48]	; 0x30
   15b9c:	ldr	r2, [r5, #68]	; 0x44
   15ba0:	bl	15464 <__flatcc_fb_codegen_c@@Base+0x318>
   15ba4:	ldrh	fp, [r5, #72]	; 0x48
   15ba8:	ldr	r3, [r5, #4]
   15bac:	tst	fp, #4
   15bb0:	ldr	r7, [r3]
   15bb4:	ldr	r6, [r3, #4]
   15bb8:	beq	15bdc <__flatcc_fb_codegen_c@@Base+0xa90>
   15bbc:	mov	r3, r6
   15bc0:	mov	r2, r8
   15bc4:	str	r7, [sp]
   15bc8:	ldr	r1, [pc, #1940]	; 16364 <__flatcc_fb_codegen_c@@Base+0x1218>
   15bcc:	ldr	r0, [r4, #204]	; 0xcc
   15bd0:	bl	13fb0 <fprintf@plt>
   15bd4:	ldr	r5, [r5]
   15bd8:	b	15b7c <__flatcc_fb_codegen_c@@Base+0xa30>
   15bdc:	ldrh	r3, [r5, #24]
   15be0:	ubfx	fp, fp, #8, #1
   15be4:	sub	r3, r3, #7
   15be8:	cmp	r3, #8
   15bec:	ldrls	pc, [pc, r3, lsl #2]
   15bf0:	b	16318 <__flatcc_fb_codegen_c@@Base+0x11cc>
   15bf4:	andeq	r5, r1, ip, ror #27
   15bf8:	andeq	r5, r1, r8, lsl ip
   15bfc:	andeq	r6, r1, r4, asr r0
   15c00:	andeq	r5, r1, r0, ror #30
   15c04:	andeq	r6, r1, r8, lsl r3
   15c08:	andeq	r6, r1, r8, lsl r3
   15c0c:	andeq	r6, r1, r8, lsl r3
   15c10:	andeq	r6, r1, r0, lsl #1
   15c14:	andeq	r6, r1, r4, lsl #5
   15c18:	ldr	r0, [r5, #16]
   15c1c:	ldr	sl, [pc, #1836]	; 16350 <__flatcc_fb_codegen_c@@Base+0x1204>
   15c20:	cmp	r0, #5
   15c24:	sub	r2, r0, #1
   15c28:	moveq	sl, r4
   15c2c:	cmp	r2, #10
   15c30:	bhi	15d50 <__flatcc_fb_codegen_c@@Base+0xc04>
   15c34:	ldr	r3, [pc, #1836]	; 16368 <__flatcc_fb_codegen_c@@Base+0x121c>
   15c38:	add	r8, sp, #60	; 0x3c
   15c3c:	add	r1, r5, #48	; 0x30
   15c40:	add	r3, r3, r2, lsl #2
   15c44:	mov	r2, r8
   15c48:	ldr	fp, [r3, #128]	; 0x80
   15c4c:	ldr	r3, [r3, #184]	; 0xb8
   15c50:	str	r3, [sp, #52]	; 0x34
   15c54:	bl	15600 <__flatcc_fb_codegen_c@@Base+0x4b4>
   15c58:	ldr	r3, [sp, #52]	; 0x34
   15c5c:	strd	r6, [sp, #12]
   15c60:	str	r8, [sp, #36]	; 0x24
   15c64:	add	r8, sp, #160	; 0xa0
   15c68:	ldr	r1, [pc, #1788]	; 1636c <__flatcc_fb_codegen_c@@Base+0x1220>
   15c6c:	str	r8, [sp, #8]
   15c70:	str	r4, [sp, #20]
   15c74:	str	r3, [sp, #24]
   15c78:	strd	sl, [sp, #28]
   15c7c:	ldrd	r2, [r5, #96]	; 0x60
   15c80:	strd	r2, [sp]
   15c84:	mov	r2, r4
   15c88:	ldr	r0, [r4, #204]	; 0xcc
   15c8c:	bl	13fb0 <fprintf@plt>
   15c90:	ldr	r3, [r4, #212]	; 0xd4
   15c94:	ldr	r0, [r3, #32]
   15c98:	cmp	r0, #0
   15c9c:	beq	15d54 <__flatcc_fb_codegen_c@@Base+0xc08>
   15ca0:	ldrh	r0, [r5, #72]	; 0x48
   15ca4:	ands	r0, r0, #128	; 0x80
   15ca8:	beq	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   15cac:	cmp	r9, #0
   15cb0:	beq	15cc0 <__flatcc_fb_codegen_c@@Base+0xb74>
   15cb4:	ldr	r0, [pc, #1716]	; 16370 <__flatcc_fb_codegen_c@@Base+0x1224>
   15cb8:	ldr	r1, [r4, #204]	; 0xcc
   15cbc:	bl	1404c <fputs@plt>
   15cc0:	ldr	r0, [pc, #1708]	; 16374 <__flatcc_fb_codegen_c@@Base+0x1228>
   15cc4:	ldr	r1, [r4, #204]	; 0xcc
   15cc8:	bl	1404c <fputs@plt>
   15ccc:	mov	r3, r8
   15cd0:	mov	r2, r4
   15cd4:	ldr	r1, [pc, #1692]	; 16378 <__flatcc_fb_codegen_c@@Base+0x122c>
   15cd8:	strd	r6, [sp]
   15cdc:	strd	sl, [sp, #8]
   15ce0:	ldr	r0, [r4, #204]	; 0xcc
   15ce4:	bl	13fb0 <fprintf@plt>
   15ce8:	ldr	r3, [r4, #212]	; 0xd4
   15cec:	ldr	r3, [r3, #136]	; 0x88
   15cf0:	cmp	r3, #0
   15cf4:	beq	15d18 <__flatcc_fb_codegen_c@@Base+0xbcc>
   15cf8:	mov	r3, r8
   15cfc:	mov	r2, r4
   15d00:	ldr	r1, [pc, #1652]	; 1637c <__flatcc_fb_codegen_c@@Base+0x1230>
   15d04:	strd	r6, [sp]
   15d08:	strd	sl, [sp, #8]
   15d0c:	str	r4, [sp, #16]
   15d10:	ldr	r0, [r4, #204]	; 0xcc
   15d14:	bl	13fb0 <fprintf@plt>
   15d18:	cmp	r9, #0
   15d1c:	beq	15d80 <__flatcc_fb_codegen_c@@Base+0xc34>
   15d20:	mov	r0, #1
   15d24:	mov	r9, r0
   15d28:	ldrh	r3, [r5, #72]	; 0x48
   15d2c:	eor	r6, r0, #1
   15d30:	and	r6, r6, #1
   15d34:	ands	r3, r6, r3, lsr #7
   15d38:	beq	15bd4 <__flatcc_fb_codegen_c@@Base+0xa88>
   15d3c:	ldr	r0, [pc, #1596]	; 16380 <__flatcc_fb_codegen_c@@Base+0x1234>
   15d40:	mov	r9, #1
   15d44:	ldr	r1, [r4, #204]	; 0xcc
   15d48:	bl	1404c <fputs@plt>
   15d4c:	b	15bd4 <__flatcc_fb_codegen_c@@Base+0xa88>
   15d50:	bl	15504 <__flatcc_fb_codegen_c@@Base+0x3b8>
   15d54:	ldrh	r3, [r5, #72]	; 0x48
   15d58:	tst	r3, #128	; 0x80
   15d5c:	beq	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   15d60:	mov	r3, r8
   15d64:	mov	r2, r4
   15d68:	ldr	r1, [pc, #1556]	; 16384 <__flatcc_fb_codegen_c@@Base+0x1238>
   15d6c:	strd	r6, [sp]
   15d70:	strd	sl, [sp, #8]
   15d74:	ldr	r0, [r4, #204]	; 0xcc
   15d78:	bl	13fb0 <fprintf@plt>
   15d7c:	b	15ca0 <__flatcc_fb_codegen_c@@Base+0xb54>
   15d80:	mov	r3, r8
   15d84:	mov	r2, r4
   15d88:	ldr	r1, [pc, #1528]	; 16388 <__flatcc_fb_codegen_c@@Base+0x123c>
   15d8c:	strd	r6, [sp]
   15d90:	strd	sl, [sp, #8]
   15d94:	ldr	r0, [r4, #204]	; 0xcc
   15d98:	bl	13fb0 <fprintf@plt>
   15d9c:	mov	r3, r8
   15da0:	mov	r2, r4
   15da4:	ldr	r1, [pc, #1504]	; 1638c <__flatcc_fb_codegen_c@@Base+0x1240>
   15da8:	strd	r6, [sp]
   15dac:	strd	sl, [sp, #8]
   15db0:	ldr	r0, [r4, #204]	; 0xcc
   15db4:	bl	13fb0 <fprintf@plt>
   15db8:	ldr	r3, [r4, #212]	; 0xd4
   15dbc:	ldr	r3, [r3, #136]	; 0x88
   15dc0:	cmp	r3, #0
   15dc4:	beq	15d20 <__flatcc_fb_codegen_c@@Base+0xbd4>
   15dc8:	mov	r3, r8
   15dcc:	mov	r2, r8
   15dd0:	ldr	r1, [pc, #1464]	; 16390 <__flatcc_fb_codegen_c@@Base+0x1244>
   15dd4:	mov	r9, #1
   15dd8:	strd	r6, [sp]
   15ddc:	ldr	r0, [r4, #204]	; 0xcc
   15de0:	bl	13fb0 <fprintf@plt>
   15de4:	mov	r0, r9
   15de8:	b	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   15dec:	ldr	r3, [r5, #16]
   15df0:	sub	r3, r3, #1
   15df4:	cmp	r3, #10
   15df8:	bhi	15e48 <__flatcc_fb_codegen_c@@Base+0xcfc>
   15dfc:	ldr	sl, [pc, #1380]	; 16368 <__flatcc_fb_codegen_c@@Base+0x121c>
   15e00:	str	r8, [sp, #8]
   15e04:	strd	r6, [sp, #12]
   15e08:	str	r4, [sp, #20]
   15e0c:	str	fp, [sp, #28]
   15e10:	add	r3, sl, r3, lsl #2
   15e14:	ldr	r1, [pc, #1400]	; 16394 <__flatcc_fb_codegen_c@@Base+0x1248>
   15e18:	ldr	r3, [r3, #228]	; 0xe4
   15e1c:	str	r3, [sp, #24]
   15e20:	ldrd	r2, [r5, #96]	; 0x60
   15e24:	strd	r2, [sp]
   15e28:	mov	r2, r4
   15e2c:	ldr	r0, [r4, #204]	; 0xcc
   15e30:	bl	13fb0 <fprintf@plt>
   15e34:	ldr	r6, [r5, #104]	; 0x68
   15e38:	cmp	r6, #0
   15e3c:	bne	15e7c <__flatcc_fb_codegen_c@@Base+0xd30>
   15e40:	mov	r0, #0
   15e44:	b	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   15e48:	ldr	r3, [pc, #1352]	; 16398 <__flatcc_fb_codegen_c@@Base+0x124c>
   15e4c:	ldr	r0, [pc, #1352]	; 1639c <__flatcc_fb_codegen_c@@Base+0x1250>
   15e50:	ldr	r2, [pc, #1352]	; 163a0 <__flatcc_fb_codegen_c@@Base+0x1254>
   15e54:	str	r3, [sp]
   15e58:	mov	r3, #186	; 0xba
   15e5c:	ldr	r1, [pc, #1344]	; 163a4 <__flatcc_fb_codegen_c@@Base+0x1258>
   15e60:	ldr	r0, [r0]
   15e64:	bl	13fb0 <fprintf@plt>
   15e68:	ldr	r3, [pc, #1336]	; 163a8 <__flatcc_fb_codegen_c@@Base+0x125c>
   15e6c:	mov	r2, #186	; 0xba
   15e70:	ldr	r1, [pc, #1320]	; 163a0 <__flatcc_fb_codegen_c@@Base+0x1254>
   15e74:	ldr	r0, [pc, #1328]	; 163ac <__flatcc_fb_codegen_c@@Base+0x1260>
   15e78:	b	15ab0 <__flatcc_fb_codegen_c@@Base+0x964>
   15e7c:	add	r7, sp, #600	; 0x258
   15e80:	mov	r2, #220	; 0xdc
   15e84:	mov	r1, #0
   15e88:	mov	r0, r7
   15e8c:	bl	13fc8 <memset@plt>
   15e90:	mov	r2, #220	; 0xdc
   15e94:	mov	r1, #0
   15e98:	add	r0, sp, #820	; 0x334
   15e9c:	bl	13fc8 <memset@plt>
   15ea0:	ldrh	r3, [r6, #8]
   15ea4:	cmp	r3, #0
   15ea8:	beq	15ee4 <__flatcc_fb_codegen_c@@Base+0xd98>
   15eac:	cmp	r3, #1
   15eb0:	beq	15f18 <__flatcc_fb_codegen_c@@Base+0xdcc>
   15eb4:	ldr	r3, [pc, #1268]	; 163b0 <__flatcc_fb_codegen_c@@Base+0x1264>
   15eb8:	ldr	r0, [pc, #1244]	; 1639c <__flatcc_fb_codegen_c@@Base+0x1250>
   15ebc:	ldr	r2, [pc, #1156]	; 16348 <__flatcc_fb_codegen_c@@Base+0x11fc>
   15ec0:	str	r3, [sp]
   15ec4:	movw	r3, #1339	; 0x53b
   15ec8:	ldr	r1, [pc, #1236]	; 163a4 <__flatcc_fb_codegen_c@@Base+0x1258>
   15ecc:	ldr	r0, [r0]
   15ed0:	bl	13fb0 <fprintf@plt>
   15ed4:	add	r3, sl, #296	; 0x128
   15ed8:	movw	r2, #1339	; 0x53b
   15edc:	ldr	r1, [pc, #1124]	; 16348 <__flatcc_fb_codegen_c@@Base+0x11fc>
   15ee0:	b	15e74 <__flatcc_fb_codegen_c@@Base+0xd28>
   15ee4:	ldr	r8, [pc, #1224]	; 163b4 <__flatcc_fb_codegen_c@@Base+0x1268>
   15ee8:	mov	r0, r6
   15eec:	mov	r1, r7
   15ef0:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   15ef4:	ldr	r3, [sp, #44]	; 0x2c
   15ef8:	ldrh	r6, [r3, #8]
   15efc:	cmp	r6, #0
   15f00:	beq	15f20 <__flatcc_fb_codegen_c@@Base+0xdd4>
   15f04:	ldr	r3, [pc, #1196]	; 163b8 <__flatcc_fb_codegen_c@@Base+0x126c>
   15f08:	movw	r2, #1343	; 0x53f
   15f0c:	ldr	r1, [pc, #1076]	; 16348 <__flatcc_fb_codegen_c@@Base+0x11fc>
   15f10:	ldr	r0, [pc, #1188]	; 163bc <__flatcc_fb_codegen_c@@Base+0x1270>
   15f14:	b	15ab0 <__flatcc_fb_codegen_c@@Base+0x964>
   15f18:	ldr	r8, [pc, #1184]	; 163c0 <__flatcc_fb_codegen_c@@Base+0x1274>
   15f1c:	b	15ee8 <__flatcc_fb_codegen_c@@Base+0xd9c>
   15f20:	add	r1, sp, #820	; 0x334
   15f24:	ldr	r0, [sp, #44]	; 0x2c
   15f28:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   15f2c:	ldr	r3, [r5, #4]
   15f30:	str	r7, [sp, #8]
   15f34:	str	r8, [sp, #12]
   15f38:	ldr	r1, [pc, #1156]	; 163c4 <__flatcc_fb_codegen_c@@Base+0x1278>
   15f3c:	ldr	r2, [r3]
   15f40:	str	r2, [sp, #4]
   15f44:	mov	r2, r4
   15f48:	ldr	r3, [r3, #4]
   15f4c:	str	r3, [sp]
   15f50:	add	r3, sp, #820	; 0x334
   15f54:	ldr	r0, [r4, #204]	; 0xcc
   15f58:	bl	13fb0 <fprintf@plt>
   15f5c:	b	15e40 <__flatcc_fb_codegen_c@@Base+0xcf4>
   15f60:	str	r8, [sp, #8]
   15f64:	strd	r6, [sp, #12]
   15f68:	str	fp, [sp, #20]
   15f6c:	ldrd	r2, [r5, #96]	; 0x60
   15f70:	ldr	r1, [pc, #1104]	; 163c8 <__flatcc_fb_codegen_c@@Base+0x127c>
   15f74:	strd	r2, [sp]
   15f78:	mov	r2, r4
   15f7c:	ldr	r0, [r4, #204]	; 0xcc
   15f80:	bl	13fb0 <fprintf@plt>
   15f84:	ldr	r3, [r4, #212]	; 0xd4
   15f88:	ldr	r0, [r3, #32]
   15f8c:	cmp	r0, #0
   15f90:	bne	15fb8 <__flatcc_fb_codegen_c@@Base+0xe6c>
   15f94:	ldrh	r3, [r5, #72]	; 0x48
   15f98:	tst	r3, #128	; 0x80
   15f9c:	beq	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   15fa0:	mov	r3, r8
   15fa4:	mov	r2, r4
   15fa8:	ldr	r1, [pc, #1052]	; 163cc <__flatcc_fb_codegen_c@@Base+0x1280>
   15fac:	strd	r6, [sp]
   15fb0:	ldr	r0, [r4, #204]	; 0xcc
   15fb4:	bl	13fb0 <fprintf@plt>
   15fb8:	ldrh	r0, [r5, #72]	; 0x48
   15fbc:	ands	r0, r0, #128	; 0x80
   15fc0:	beq	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   15fc4:	cmp	r9, #0
   15fc8:	beq	15fd8 <__flatcc_fb_codegen_c@@Base+0xe8c>
   15fcc:	ldr	r0, [pc, #924]	; 16370 <__flatcc_fb_codegen_c@@Base+0x1224>
   15fd0:	ldr	r1, [r4, #204]	; 0xcc
   15fd4:	bl	1404c <fputs@plt>
   15fd8:	mov	r3, r8
   15fdc:	mov	r2, r4
   15fe0:	ldr	r1, [pc, #1000]	; 163d0 <__flatcc_fb_codegen_c@@Base+0x1284>
   15fe4:	strd	r6, [sp]
   15fe8:	ldr	r0, [r4, #204]	; 0xcc
   15fec:	bl	13fb0 <fprintf@plt>
   15ff0:	ldr	r3, [r4, #212]	; 0xd4
   15ff4:	ldr	r3, [r3, #136]	; 0x88
   15ff8:	cmp	r3, #0
   15ffc:	beq	16018 <__flatcc_fb_codegen_c@@Base+0xecc>
   16000:	mov	r3, r8
   16004:	mov	r2, r4
   16008:	ldr	r1, [pc, #964]	; 163d4 <__flatcc_fb_codegen_c@@Base+0x1288>
   1600c:	strd	r6, [sp]
   16010:	ldr	r0, [r4, #204]	; 0xcc
   16014:	bl	13fb0 <fprintf@plt>
   16018:	cmp	r9, #0
   1601c:	bne	15d20 <__flatcc_fb_codegen_c@@Base+0xbd4>
   16020:	mov	r3, r8
   16024:	mov	r2, r4
   16028:	ldr	r1, [pc, #936]	; 163d8 <__flatcc_fb_codegen_c@@Base+0x128c>
   1602c:	strd	r6, [sp]
   16030:	ldr	r0, [r4, #204]	; 0xcc
   16034:	bl	13fb0 <fprintf@plt>
   16038:	mov	r3, r8
   1603c:	mov	r2, r4
   16040:	ldr	r1, [pc, #916]	; 163dc <__flatcc_fb_codegen_c@@Base+0x1290>
   16044:	strd	r6, [sp]
   16048:	ldr	r0, [r4, #204]	; 0xcc
   1604c:	bl	13fb0 <fprintf@plt>
   16050:	b	15db8 <__flatcc_fb_codegen_c@@Base+0xc6c>
   16054:	str	r8, [sp, #8]
   16058:	strd	r6, [sp, #12]
   1605c:	str	r4, [sp, #20]
   16060:	str	fp, [sp, #24]
   16064:	ldrd	r2, [r5, #96]	; 0x60
   16068:	ldr	r1, [pc, #880]	; 163e0 <__flatcc_fb_codegen_c@@Base+0x1294>
   1606c:	strd	r2, [sp]
   16070:	mov	r2, r4
   16074:	ldr	r0, [r4, #204]	; 0xcc
   16078:	bl	13fb0 <fprintf@plt>
   1607c:	b	15e40 <__flatcc_fb_codegen_c@@Base+0xcf4>
   16080:	add	sl, sp, #380	; 0x17c
   16084:	ldr	r0, [r5, #16]
   16088:	mov	r1, sl
   1608c:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16090:	ldr	r3, [r5, #16]
   16094:	ldrh	r2, [r3, #8]
   16098:	cmp	r2, #4
   1609c:	ldrls	pc, [pc, r2, lsl #2]
   160a0:	b	16258 <__flatcc_fb_codegen_c@@Base+0x110c>
   160a4:	ldrdeq	r6, [r1], -r8
   160a8:	strheq	r6, [r1], -r8
   160ac:	andeq	r6, r1, r8, asr r2
   160b0:	strdeq	r6, [r1], -r8
   160b4:	andeq	r6, r1, ip, lsr #4
   160b8:	str	r8, [sp, #8]
   160bc:	strd	r6, [sp, #12]
   160c0:	strd	sl, [sp, #20]
   160c4:	ldrd	r2, [r5, #96]	; 0x60
   160c8:	ldr	r1, [pc, #788]	; 163e4 <__flatcc_fb_codegen_c@@Base+0x1298>
   160cc:	strd	r2, [sp]
   160d0:	mov	r2, r4
   160d4:	b	16074 <__flatcc_fb_codegen_c@@Base+0xf28>
   160d8:	str	r8, [sp, #8]
   160dc:	strd	r6, [sp, #12]
   160e0:	strd	sl, [sp, #20]
   160e4:	ldrd	r2, [r5, #96]	; 0x60
   160e8:	ldr	r1, [pc, #760]	; 163e8 <__flatcc_fb_codegen_c@@Base+0x129c>
   160ec:	strd	r2, [sp]
   160f0:	mov	r2, r4
   160f4:	b	16074 <__flatcc_fb_codegen_c@@Base+0xf28>
   160f8:	add	fp, sp, #60	; 0x3c
   160fc:	add	r1, r5, #48	; 0x30
   16100:	ldr	r0, [r3, #40]	; 0x28
   16104:	mov	r2, fp
   16108:	bl	15600 <__flatcc_fb_codegen_c@@Base+0x4b4>
   1610c:	str	r8, [sp, #8]
   16110:	strd	r6, [sp, #12]
   16114:	str	sl, [sp, #20]
   16118:	strd	sl, [sp, #24]
   1611c:	ldrd	r2, [r5, #96]	; 0x60
   16120:	ldr	r1, [pc, #708]	; 163ec <__flatcc_fb_codegen_c@@Base+0x12a0>
   16124:	strd	r2, [sp]
   16128:	mov	r2, r4
   1612c:	ldr	r0, [r4, #204]	; 0xcc
   16130:	bl	13fb0 <fprintf@plt>
   16134:	ldr	r3, [r4, #212]	; 0xd4
   16138:	ldr	r0, [r3, #32]
   1613c:	cmp	r0, #0
   16140:	bne	1616c <__flatcc_fb_codegen_c@@Base+0x1020>
   16144:	ldrh	r3, [r5, #72]	; 0x48
   16148:	tst	r3, #128	; 0x80
   1614c:	beq	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   16150:	mov	r3, r8
   16154:	mov	r2, r4
   16158:	ldr	r1, [pc, #656]	; 163f0 <__flatcc_fb_codegen_c@@Base+0x12a4>
   1615c:	strd	r6, [sp]
   16160:	str	sl, [sp, #8]
   16164:	ldr	r0, [r4, #204]	; 0xcc
   16168:	bl	13fb0 <fprintf@plt>
   1616c:	ldrh	r0, [r5, #72]	; 0x48
   16170:	ands	r0, r0, #128	; 0x80
   16174:	beq	15d28 <__flatcc_fb_codegen_c@@Base+0xbdc>
   16178:	cmp	r9, #0
   1617c:	beq	1618c <__flatcc_fb_codegen_c@@Base+0x1040>
   16180:	ldr	r0, [pc, #488]	; 16370 <__flatcc_fb_codegen_c@@Base+0x1224>
   16184:	ldr	r1, [r4, #204]	; 0xcc
   16188:	bl	1404c <fputs@plt>
   1618c:	add	fp, sp, #380	; 0x17c
   16190:	ldr	r0, [pc, #476]	; 16374 <__flatcc_fb_codegen_c@@Base+0x1228>
   16194:	ldr	r1, [r4, #204]	; 0xcc
   16198:	bl	1404c <fputs@plt>
   1619c:	mov	r3, r8
   161a0:	mov	r2, r4
   161a4:	ldr	r1, [pc, #584]	; 163f4 <__flatcc_fb_codegen_c@@Base+0x12a8>
   161a8:	strd	r6, [sp]
   161ac:	str	fp, [sp, #8]
   161b0:	ldr	r0, [r4, #204]	; 0xcc
   161b4:	bl	13fb0 <fprintf@plt>
   161b8:	ldr	r3, [r4, #212]	; 0xd4
   161bc:	ldr	r3, [r3, #136]	; 0x88
   161c0:	cmp	r3, #0
   161c4:	beq	161e8 <__flatcc_fb_codegen_c@@Base+0x109c>
   161c8:	mov	r3, r8
   161cc:	mov	r2, r4
   161d0:	ldr	r1, [pc, #544]	; 163f8 <__flatcc_fb_codegen_c@@Base+0x12ac>
   161d4:	strd	r6, [sp]
   161d8:	str	fp, [sp, #8]
   161dc:	str	r4, [sp, #12]
   161e0:	ldr	r0, [r4, #204]	; 0xcc
   161e4:	bl	13fb0 <fprintf@plt>
   161e8:	cmp	r9, #0
   161ec:	bne	15d20 <__flatcc_fb_codegen_c@@Base+0xbd4>
   161f0:	mov	r3, r8
   161f4:	mov	r2, r4
   161f8:	ldr	r1, [pc, #508]	; 163fc <__flatcc_fb_codegen_c@@Base+0x12b0>
   161fc:	strd	r6, [sp]
   16200:	str	sl, [sp, #8]
   16204:	ldr	r0, [r4, #204]	; 0xcc
   16208:	bl	13fb0 <fprintf@plt>
   1620c:	mov	r3, r8
   16210:	mov	r2, r4
   16214:	ldr	r1, [pc, #484]	; 16400 <__flatcc_fb_codegen_c@@Base+0x12b4>
   16218:	strd	r6, [sp]
   1621c:	str	sl, [sp, #8]
   16220:	ldr	r0, [r4, #204]	; 0xcc
   16224:	bl	13fb0 <fprintf@plt>
   16228:	b	15db8 <__flatcc_fb_codegen_c@@Base+0xc6c>
   1622c:	str	r8, [sp, #8]
   16230:	strd	r6, [sp, #12]
   16234:	strd	sl, [sp, #20]
   16238:	ldrd	r2, [r5, #96]	; 0x60
   1623c:	ldr	r1, [pc, #448]	; 16404 <__flatcc_fb_codegen_c@@Base+0x12b8>
   16240:	strd	r2, [sp]
   16244:	mov	r3, r4
   16248:	mov	r2, r4
   1624c:	ldr	r0, [r4, #204]	; 0xcc
   16250:	bl	13fb0 <fprintf@plt>
   16254:	b	15e40 <__flatcc_fb_codegen_c@@Base+0xcf4>
   16258:	ldr	r3, [pc, #424]	; 16408 <__flatcc_fb_codegen_c@@Base+0x12bc>
   1625c:	ldr	r0, [pc, #312]	; 1639c <__flatcc_fb_codegen_c@@Base+0x1250>
   16260:	ldr	r2, [pc, #224]	; 16348 <__flatcc_fb_codegen_c@@Base+0x11fc>
   16264:	str	r3, [sp]
   16268:	mov	r3, #1568	; 0x620
   1626c:	ldr	r1, [pc, #304]	; 163a4 <__flatcc_fb_codegen_c@@Base+0x1258>
   16270:	ldr	r0, [r0]
   16274:	bl	13fb0 <fprintf@plt>
   16278:	ldr	r3, [pc, #196]	; 16344 <__flatcc_fb_codegen_c@@Base+0x11f8>
   1627c:	mov	r2, #1568	; 0x620
   16280:	b	15edc <__flatcc_fb_codegen_c@@Base+0xd90>
   16284:	add	sl, sp, #380	; 0x17c
   16288:	ldr	r0, [r5, #16]
   1628c:	mov	r1, sl
   16290:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16294:	ldr	r3, [r5, #16]
   16298:	ldrh	r1, [r3, #8]
   1629c:	cmp	r1, #4
   162a0:	bhi	162b4 <__flatcc_fb_codegen_c@@Base+0x1168>
   162a4:	mov	r3, #1
   162a8:	lsl	r3, r3, r1
   162ac:	tst	r3, #27
   162b0:	bne	162e0 <__flatcc_fb_codegen_c@@Base+0x1194>
   162b4:	ldr	r3, [pc, #336]	; 1640c <__flatcc_fb_codegen_c@@Base+0x12c0>
   162b8:	ldr	r0, [pc, #220]	; 1639c <__flatcc_fb_codegen_c@@Base+0x1250>
   162bc:	ldr	r2, [pc, #132]	; 16348 <__flatcc_fb_codegen_c@@Base+0x11fc>
   162c0:	str	r3, [sp]
   162c4:	mov	r3, #1584	; 0x630
   162c8:	ldr	r1, [pc, #212]	; 163a4 <__flatcc_fb_codegen_c@@Base+0x1258>
   162cc:	ldr	r0, [r0]
   162d0:	bl	13fb0 <fprintf@plt>
   162d4:	ldr	r3, [pc, #104]	; 16344 <__flatcc_fb_codegen_c@@Base+0x11f8>
   162d8:	mov	r2, #1584	; 0x630
   162dc:	b	15edc <__flatcc_fb_codegen_c@@Base+0xd90>
   162e0:	ldrd	r2, [r5, #96]	; 0x60
   162e4:	cmp	r1, #4
   162e8:	ldrne	r1, [pc, #288]	; 16410 <__flatcc_fb_codegen_c@@Base+0x12c4>
   162ec:	ldr	r0, [r4, #204]	; 0xcc
   162f0:	strd	r2, [sp]
   162f4:	movne	r2, r4
   162f8:	str	r8, [sp, #8]
   162fc:	strd	r6, [sp, #12]
   16300:	strd	sl, [sp, #20]
   16304:	bne	16078 <__flatcc_fb_codegen_c@@Base+0xf2c>
   16308:	mov	r3, r4
   1630c:	mov	r2, r4
   16310:	ldr	r1, [pc, #252]	; 16414 <__flatcc_fb_codegen_c@@Base+0x12c8>
   16314:	b	16250 <__flatcc_fb_codegen_c@@Base+0x1104>
   16318:	ldr	r3, [pc, #248]	; 16418 <__flatcc_fb_codegen_c@@Base+0x12cc>
   1631c:	ldr	r0, [pc, #120]	; 1639c <__flatcc_fb_codegen_c@@Base+0x1250>
   16320:	ldr	r2, [pc, #32]	; 16348 <__flatcc_fb_codegen_c@@Base+0x11fc>
   16324:	str	r3, [sp]
   16328:	movw	r3, #1599	; 0x63f
   1632c:	ldr	r1, [pc, #112]	; 163a4 <__flatcc_fb_codegen_c@@Base+0x1258>
   16330:	ldr	r0, [r0]
   16334:	bl	13fb0 <fprintf@plt>
   16338:	ldr	r3, [pc, #4]	; 16344 <__flatcc_fb_codegen_c@@Base+0x11f8>
   1633c:	movw	r2, #1599	; 0x63f
   16340:	b	15edc <__flatcc_fb_codegen_c@@Base+0xd90>
   16344:	andeq	pc, r2, r4, lsr fp	; <UNPREDICTABLE>
   16348:	andeq	pc, r2, r4, ror #23
   1634c:	andeq	pc, r2, r7, asr ip	; <UNPREDICTABLE>
   16350:	andeq	r1, r3, fp, lsr #2
   16354:	andeq	r0, r3, r7, asr #2
   16358:	andeq	r0, r3, r0, ror r1
   1635c:			; <UNDEFINED> instruction: 0x000301b0
   16360:	andeq	r0, r3, r5, lsl r2
   16364:	andeq	r0, r3, ip, lsr #4
   16368:	andeq	pc, r2, r8, lsl #21
   1636c:	andeq	r0, r3, r9, asr r2
   16370:	andeq	r0, r3, r3, asr #5
   16374:	andeq	r0, r3, r6, lsl #6
   16378:	andeq	r0, r3, r4, asr #6
   1637c:	andeq	r0, r3, r5, ror r3
   16380:	andeq	r0, r3, lr, lsr #19
   16384:	muleq	r3, r2, r2
   16388:			; <UNDEFINED> instruction: 0x000303b3
   1638c:	andeq	r0, r3, ip, ror #7
   16390:	andeq	r0, r3, r5, lsr #8
   16394:	andeq	r0, r3, lr, asr #8
   16398:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   1639c:	strheq	sl, [r5], -r0
   163a0:	andeq	pc, r2, r4, asr #27
   163a4:	andeq	pc, r2, sp, lsl #28
   163a8:	muleq	r2, r8, fp
   163ac:	andeq	r8, r3, pc, ror #2
   163b0:	andeq	r0, r3, r1, lsl #9
   163b4:	andeq	r0, r3, r8, lsr r1
   163b8:			; <UNDEFINED> instruction: 0x0002fbb0
   163bc:			; <UNDEFINED> instruction: 0x000304b5
   163c0:	andeq	r0, r3, pc, lsr r1
   163c4:	ldrdeq	r0, [r3], -r4
   163c8:	andeq	r0, r3, r1, lsl #10
   163cc:	andeq	r0, r3, lr, lsr #10
   163d0:	andeq	r0, r3, r9, asr r5
   163d4:	andeq	r0, r3, r4, lsl #11
   163d8:	andeq	r0, r3, pc, lsr #11
   163dc:	andeq	r0, r3, r2, ror #11
   163e0:	andeq	r0, r3, r5, lsl r6
   163e4:	andeq	r0, r3, r2, asr r6
   163e8:	andeq	r0, r3, ip, lsl #13
   163ec:	andeq	r0, r3, r4, asr #13
   163f0:	andeq	r0, r3, r0, lsl #14
   163f4:	andeq	r0, r3, r6, lsr r7
   163f8:	andeq	r0, r3, ip, ror #14
   163fc:	andeq	r0, r3, pc, lsr #15
   16400:	andeq	r0, r3, sp, ror #15
   16404:	andeq	r0, r3, fp, lsr #16
   16408:	andeq	r0, r3, pc, asr r8
   1640c:	andeq	r0, r3, r8, lsr #17
   16410:	andeq	r0, r3, r3, lsr r9
   16414:	strdeq	r0, [r3], -r8
   16418:	andeq	r0, r3, sl, ror #18
   1641c:	ldr	r3, [r0, #212]	; 0xd4
   16420:	mov	r2, #220	; 0xdc
   16424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16428:	sub	sp, sp, #492	; 0x1ec
   1642c:	mov	r7, r1
   16430:	add	r5, sp, #48	; 0x30
   16434:	mov	r1, #0
   16438:	mov	r4, r0
   1643c:	mov	r0, r5
   16440:	ldr	r8, [r3, #132]	; 0x84
   16444:	bl	13fc8 <memset@plt>
   16448:	mov	r2, #220	; 0xdc
   1644c:	mov	r1, #0
   16450:	add	r0, sp, #268	; 0x10c
   16454:	bl	13fc8 <memset@plt>
   16458:	ldrh	r3, [r7, #8]
   1645c:	cmp	r3, #1
   16460:	beq	16478 <__flatcc_fb_codegen_c@@Base+0x132c>
   16464:	ldr	r3, [pc, #1720]	; 16b24 <__flatcc_fb_codegen_c@@Base+0x19d8>
   16468:	mov	r2, #936	; 0x3a8
   1646c:	ldr	r1, [pc, #1716]	; 16b28 <__flatcc_fb_codegen_c@@Base+0x19dc>
   16470:	ldr	r0, [pc, #1716]	; 16b2c <__flatcc_fb_codegen_c@@Base+0x19e0>
   16474:	bl	14070 <__assert_fail@plt>
   16478:	ldrh	r3, [r7, #104]	; 0x68
   1647c:	cmp	r3, #0
   16480:	bne	164a4 <__flatcc_fb_codegen_c@@Base+0x1358>
   16484:	ldrd	r2, [r7, #96]	; 0x60
   16488:	orrs	r3, r2, r3
   1648c:	beq	164a4 <__flatcc_fb_codegen_c@@Base+0x1358>
   16490:	ldr	r3, [pc, #1676]	; 16b24 <__flatcc_fb_codegen_c@@Base+0x19d8>
   16494:	movw	r2, #937	; 0x3a9
   16498:	ldr	r1, [pc, #1672]	; 16b28 <__flatcc_fb_codegen_c@@Base+0x19dc>
   1649c:	ldr	r0, [pc, #1676]	; 16b30 <__flatcc_fb_codegen_c@@Base+0x19e4>
   164a0:	b	16474 <__flatcc_fb_codegen_c@@Base+0x1328>
   164a4:	ldrd	r2, [r7, #112]	; 0x70
   164a8:	orrs	r3, r2, r3
   164ac:	bne	164d0 <__flatcc_fb_codegen_c@@Base+0x1384>
   164b0:	ldrd	r2, [r7, #96]	; 0x60
   164b4:	orrs	r3, r2, r3
   164b8:	beq	164d0 <__flatcc_fb_codegen_c@@Base+0x1384>
   164bc:	ldr	r3, [pc, #1632]	; 16b24 <__flatcc_fb_codegen_c@@Base+0x19d8>
   164c0:	movw	r2, #938	; 0x3aa
   164c4:	ldr	r1, [pc, #1628]	; 16b28 <__flatcc_fb_codegen_c@@Base+0x19dc>
   164c8:	ldr	r0, [pc, #1636]	; 16b34 <__flatcc_fb_codegen_c@@Base+0x19e8>
   164cc:	b	16474 <__flatcc_fb_codegen_c@@Base+0x1328>
   164d0:	mov	r1, r5
   164d4:	mov	r0, r7
   164d8:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   164dc:	add	r3, r4, #204	; 0xcc
   164e0:	ldr	r1, [pc, #1616]	; 16b38 <__flatcc_fb_codegen_c@@Base+0x19ec>
   164e4:	mov	r0, r3
   164e8:	ldr	r2, [r7, #32]
   164ec:	str	r3, [sp, #40]	; 0x28
   164f0:	bl	15464 <__flatcc_fb_codegen_c@@Base+0x318>
   164f4:	ldrd	r2, [r7, #112]	; 0x70
   164f8:	orrs	r3, r2, r3
   164fc:	bne	165d0 <__flatcc_fb_codegen_c@@Base+0x1484>
   16500:	mov	r2, r5
   16504:	ldr	r1, [pc, #1584]	; 16b3c <__flatcc_fb_codegen_c@@Base+0x19f0>
   16508:	ldr	r0, [r4, #204]	; 0xcc
   1650c:	bl	13fb0 <fprintf@plt>
   16510:	mov	r3, r5
   16514:	mov	r2, r5
   16518:	ldr	r1, [pc, #1568]	; 16b40 <__flatcc_fb_codegen_c@@Base+0x19f4>
   1651c:	ldr	r0, [r4, #204]	; 0xcc
   16520:	str	r5, [sp]
   16524:	bl	13fb0 <fprintf@plt>
   16528:	mov	r3, r5
   1652c:	mov	r2, r5
   16530:	ldr	r1, [pc, #1548]	; 16b44 <__flatcc_fb_codegen_c@@Base+0x19f8>
   16534:	ldr	r0, [r4, #204]	; 0xcc
   16538:	str	r5, [sp]
   1653c:	bl	13fb0 <fprintf@plt>
   16540:	mov	r3, r5
   16544:	mov	r2, r5
   16548:	ldr	r1, [pc, #1528]	; 16b48 <__flatcc_fb_codegen_c@@Base+0x19fc>
   1654c:	ldr	r0, [r4, #204]	; 0xcc
   16550:	str	r5, [sp]
   16554:	bl	13fb0 <fprintf@plt>
   16558:	ldrd	r2, [r7, #112]	; 0x70
   1655c:	mov	r9, #0
   16560:	mov	fp, r9
   16564:	ldr	r1, [pc, #1504]	; 16b4c <__flatcc_fb_codegen_c@@Base+0x1a00>
   16568:	ldr	r0, [r4, #204]	; 0xcc
   1656c:	strd	r2, [sp]
   16570:	mov	r2, r5
   16574:	bl	13fb0 <fprintf@plt>
   16578:	mov	r3, r5
   1657c:	mov	r2, r5
   16580:	ldr	r1, [pc, #1480]	; 16b50 <__flatcc_fb_codegen_c@@Base+0x1a04>
   16584:	ldr	r0, [r4, #204]	; 0xcc
   16588:	str	r4, [sp]
   1658c:	bl	13fb0 <fprintf@plt>
   16590:	mov	r3, r5
   16594:	mov	r2, r4
   16598:	ldr	r1, [pc, #1460]	; 16b54 <__flatcc_fb_codegen_c@@Base+0x1a08>
   1659c:	ldr	r0, [r4, #204]	; 0xcc
   165a0:	bl	13fb0 <fprintf@plt>
   165a4:	mov	r0, #10
   165a8:	ldr	r1, [r4, #204]	; 0xcc
   165ac:	bl	14010 <fputc@plt>
   165b0:	ldr	r6, [r7, #20]
   165b4:	cmp	r6, #0
   165b8:	bne	168d8 <__flatcc_fb_codegen_c@@Base+0x178c>
   165bc:	ldr	r1, [r4, #204]	; 0xcc
   165c0:	mov	r0, #10
   165c4:	bl	14010 <fputc@plt>
   165c8:	add	sp, sp, #492	; 0x1ec
   165cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165d0:	cmp	r8, #0
   165d4:	beq	165e4 <__flatcc_fb_codegen_c@@Base+0x1498>
   165d8:	ldr	r0, [pc, #1400]	; 16b58 <__flatcc_fb_codegen_c@@Base+0x1a0c>
   165dc:	ldr	r1, [r4, #204]	; 0xcc
   165e0:	bl	1404c <fputs@plt>
   165e4:	mov	r2, r5
   165e8:	ldr	r1, [pc, #1388]	; 16b5c <__flatcc_fb_codegen_c@@Base+0x1a10>
   165ec:	mov	r9, #0
   165f0:	ldr	r0, [r4, #204]	; 0xcc
   165f4:	bl	13fb0 <fprintf@plt>
   165f8:	ldr	r6, [r7, #20]
   165fc:	mov	r3, r9
   16600:	str	r9, [sp, #28]
   16604:	cmp	r6, #0
   16608:	bne	166b8 <__flatcc_fb_codegen_c@@Base+0x156c>
   1660c:	cmp	r8, #0
   16610:	beq	16630 <__flatcc_fb_codegen_c@@Base+0x14e4>
   16614:	ldr	r2, [r7, #112]	; 0x70
   16618:	subs	r3, r2, r3
   1661c:	beq	16630 <__flatcc_fb_codegen_c@@Base+0x14e4>
   16620:	ldr	r1, [pc, #1336]	; 16b60 <__flatcc_fb_codegen_c@@Base+0x1a14>
   16624:	ldr	r2, [sp, #28]
   16628:	ldr	r0, [r4, #204]	; 0xcc
   1662c:	bl	13fb0 <fprintf@plt>
   16630:	ldr	r0, [pc, #1324]	; 16b64 <__flatcc_fb_codegen_c@@Base+0x1a18>
   16634:	ldr	r1, [r4, #204]	; 0xcc
   16638:	bl	1404c <fputs@plt>
   1663c:	cmp	r8, #0
   16640:	beq	16650 <__flatcc_fb_codegen_c@@Base+0x1504>
   16644:	ldr	r0, [pc, #1308]	; 16b68 <__flatcc_fb_codegen_c@@Base+0x1a1c>
   16648:	ldr	r1, [r4, #204]	; 0xcc
   1664c:	bl	1404c <fputs@plt>
   16650:	ldrd	r2, [r7, #112]	; 0x70
   16654:	ldr	r1, [pc, #1296]	; 16b6c <__flatcc_fb_codegen_c@@Base+0x1a20>
   16658:	ldr	r0, [r4, #204]	; 0xcc
   1665c:	strd	r2, [sp]
   16660:	mov	r2, r5
   16664:	bl	13fb0 <fprintf@plt>
   16668:	mov	r3, r5
   1666c:	mov	r2, r5
   16670:	ldr	r1, [pc, #1272]	; 16b70 <__flatcc_fb_codegen_c@@Base+0x1a24>
   16674:	ldr	r0, [r4, #204]	; 0xcc
   16678:	str	r5, [sp]
   1667c:	bl	13fb0 <fprintf@plt>
   16680:	mov	r3, r5
   16684:	mov	r2, r5
   16688:	ldr	r1, [pc, #1252]	; 16b74 <__flatcc_fb_codegen_c@@Base+0x1a28>
   1668c:	ldr	r0, [r4, #204]	; 0xcc
   16690:	str	r5, [sp]
   16694:	bl	13fb0 <fprintf@plt>
   16698:	mov	r3, r5
   1669c:	mov	r2, r5
   166a0:	ldr	r1, [pc, #1232]	; 16b78 <__flatcc_fb_codegen_c@@Base+0x1a2c>
   166a4:	ldr	r0, [r4, #204]	; 0xcc
   166a8:	str	r5, [sp]
   166ac:	str	r4, [sp, #4]
   166b0:	bl	13fb0 <fprintf@plt>
   166b4:	b	16558 <__flatcc_fb_codegen_c@@Base+0x140c>
   166b8:	ldr	r1, [pc, #1212]	; 16b7c <__flatcc_fb_codegen_c@@Base+0x1a30>
   166bc:	str	r3, [sp, #44]	; 0x2c
   166c0:	ldr	r0, [sp, #40]	; 0x28
   166c4:	ldr	r2, [r6, #68]	; 0x44
   166c8:	bl	15464 <__flatcc_fb_codegen_c@@Base+0x318>
   166cc:	ldr	r2, [r6, #4]
   166d0:	ldr	r3, [r2, #4]
   166d4:	str	r3, [sp, #32]
   166d8:	ldr	r3, [r2]
   166dc:	str	r3, [sp, #36]	; 0x24
   166e0:	ldr	r3, [sp, #44]	; 0x2c
   166e4:	cmp	r3, #0
   166e8:	ldrheq	sl, [r7, #104]	; 0x68
   166ec:	ldrhne	sl, [r6, #74]	; 0x4a
   166f0:	cmp	r8, #0
   166f4:	beq	1671c <__flatcc_fb_codegen_c@@Base+0x15d0>
   166f8:	ldr	r2, [r6, #80]	; 0x50
   166fc:	subs	r3, r2, r3
   16700:	beq	1671c <__flatcc_fb_codegen_c@@Base+0x15d0>
   16704:	ldr	r2, [sp, #28]
   16708:	ldr	r1, [pc, #1104]	; 16b60 <__flatcc_fb_codegen_c@@Base+0x1a14>
   1670c:	ldr	r0, [r4, #204]	; 0xcc
   16710:	add	fp, r2, #1
   16714:	bl	13fb0 <fprintf@plt>
   16718:	str	fp, [sp, #28]
   1671c:	ldrh	r3, [r6, #72]	; 0x48
   16720:	tst	r3, #4
   16724:	beq	16794 <__flatcc_fb_codegen_c@@Base+0x1648>
   16728:	cmp	r8, #0
   1672c:	add	fp, r9, #1
   16730:	ldr	r2, [sp, #36]	; 0x24
   16734:	ldr	r3, [r6, #88]	; 0x58
   16738:	ldr	r0, [r4, #204]	; 0xcc
   1673c:	beq	16770 <__flatcc_fb_codegen_c@@Base+0x1624>
   16740:	str	r2, [sp, #4]
   16744:	ldr	r2, [sp, #32]
   16748:	ldr	r1, [pc, #1072]	; 16b80 <__flatcc_fb_codegen_c@@Base+0x1a34>
   1674c:	str	r2, [sp]
   16750:	mov	r2, r9
   16754:	bl	13fb0 <fprintf@plt>
   16758:	ldr	r2, [r6, #80]	; 0x50
   1675c:	mov	r9, fp
   16760:	ldr	r3, [r6, #88]	; 0x58
   16764:	add	r3, r2, r3
   16768:	ldr	r6, [r6]
   1676c:	b	16604 <__flatcc_fb_codegen_c@@Base+0x14b8>
   16770:	ldr	r1, [pc, #1036]	; 16b84 <__flatcc_fb_codegen_c@@Base+0x1a38>
   16774:	str	r2, [sp, #8]
   16778:	ldr	r2, [sp, #32]
   1677c:	str	r3, [sp]
   16780:	mov	r3, r9
   16784:	str	r2, [sp, #4]
   16788:	mov	r2, sl
   1678c:	bl	13fb0 <fprintf@plt>
   16790:	b	16758 <__flatcc_fb_codegen_c@@Base+0x160c>
   16794:	ldrh	r3, [r6, #24]
   16798:	cmp	r3, #8
   1679c:	beq	167ec <__flatcc_fb_codegen_c@@Base+0x16a0>
   167a0:	cmp	r3, #14
   167a4:	beq	16864 <__flatcc_fb_codegen_c@@Base+0x1718>
   167a8:	ldr	r2, [pc, #984]	; 16b88 <__flatcc_fb_codegen_c@@Base+0x1a3c>
   167ac:	ldr	r1, [pc, #984]	; 16b8c <__flatcc_fb_codegen_c@@Base+0x1a40>
   167b0:	ldr	r0, [r4, #204]	; 0xcc
   167b4:	bl	13fb0 <fprintf@plt>
   167b8:	ldr	r3, [pc, #976]	; 16b90 <__flatcc_fb_codegen_c@@Base+0x1a44>
   167bc:	ldr	r0, [pc, #976]	; 16b94 <__flatcc_fb_codegen_c@@Base+0x1a48>
   167c0:	ldr	r2, [pc, #864]	; 16b28 <__flatcc_fb_codegen_c@@Base+0x19dc>
   167c4:	str	r3, [sp]
   167c8:	movw	r3, #1029	; 0x405
   167cc:	ldr	r1, [pc, #964]	; 16b98 <__flatcc_fb_codegen_c@@Base+0x1a4c>
   167d0:	ldr	r0, [r0]
   167d4:	bl	13fb0 <fprintf@plt>
   167d8:	ldr	r3, [pc, #836]	; 16b24 <__flatcc_fb_codegen_c@@Base+0x19d8>
   167dc:	movw	r2, #1029	; 0x405
   167e0:	ldr	r1, [pc, #832]	; 16b28 <__flatcc_fb_codegen_c@@Base+0x19dc>
   167e4:	ldr	r0, [pc, #944]	; 16b9c <__flatcc_fb_codegen_c@@Base+0x1a50>
   167e8:	b	16474 <__flatcc_fb_codegen_c@@Base+0x1328>
   167ec:	ldr	r3, [r6, #16]
   167f0:	ldr	r2, [pc, #832]	; 16b38 <__flatcc_fb_codegen_c@@Base+0x19ec>
   167f4:	cmp	r3, #5
   167f8:	sub	r3, r3, #1
   167fc:	moveq	r2, r4
   16800:	cmp	r3, #10
   16804:	bhi	16838 <__flatcc_fb_codegen_c@@Base+0x16ec>
   16808:	ldr	r1, [pc, #912]	; 16ba0 <__flatcc_fb_codegen_c@@Base+0x1a54>
   1680c:	cmp	r8, #0
   16810:	ldr	r0, [r4, #204]	; 0xcc
   16814:	add	r3, r1, r3, lsl #2
   16818:	ldr	r3, [r3, #128]	; 0x80
   1681c:	bne	1683c <__flatcc_fb_codegen_c@@Base+0x16f0>
   16820:	str	r3, [sp]
   16824:	mov	r3, r2
   16828:	mov	r2, sl
   1682c:	ldr	r1, [pc, #880]	; 16ba4 <__flatcc_fb_codegen_c@@Base+0x1a58>
   16830:	bl	13fb0 <fprintf@plt>
   16834:	b	16844 <__flatcc_fb_codegen_c@@Base+0x16f8>
   16838:	bl	15504 <__flatcc_fb_codegen_c@@Base+0x3b8>
   1683c:	ldr	r1, [pc, #868]	; 16ba8 <__flatcc_fb_codegen_c@@Base+0x1a5c>
   16840:	bl	13fb0 <fprintf@plt>
   16844:	ldr	r1, [pc, #864]	; 16bac <__flatcc_fb_codegen_c@@Base+0x1a60>
   16848:	ldrd	r2, [sp, #32]
   1684c:	ldr	r0, [r4, #204]	; 0xcc
   16850:	bl	13fb0 <fprintf@plt>
   16854:	ldr	r2, [r6, #80]	; 0x50
   16858:	ldr	r3, [r6, #88]	; 0x58
   1685c:	add	r3, r2, r3
   16860:	b	16768 <__flatcc_fb_codegen_c@@Base+0x161c>
   16864:	ldr	r0, [r6, #16]
   16868:	ldrh	r3, [r0, #8]
   1686c:	bic	r2, r3, #2
   16870:	cmp	r2, #1
   16874:	beq	1688c <__flatcc_fb_codegen_c@@Base+0x1740>
   16878:	ldr	r3, [pc, #676]	; 16b24 <__flatcc_fb_codegen_c@@Base+0x19d8>
   1687c:	movw	r2, #1018	; 0x3fa
   16880:	ldr	r1, [pc, #672]	; 16b28 <__flatcc_fb_codegen_c@@Base+0x19dc>
   16884:	ldr	r0, [pc, #804]	; 16bb0 <__flatcc_fb_codegen_c@@Base+0x1a64>
   16888:	b	16474 <__flatcc_fb_codegen_c@@Base+0x1328>
   1688c:	ldr	r2, [pc, #800]	; 16bb4 <__flatcc_fb_codegen_c@@Base+0x1a68>
   16890:	cmp	r3, #1
   16894:	add	r1, sp, #268	; 0x10c
   16898:	ldr	fp, [pc, #664]	; 16b38 <__flatcc_fb_codegen_c@@Base+0x19ec>
   1689c:	movne	fp, r2
   168a0:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   168a4:	cmp	r8, #0
   168a8:	beq	168c0 <__flatcc_fb_codegen_c@@Base+0x1774>
   168ac:	mov	r3, fp
   168b0:	add	r2, sp, #268	; 0x10c
   168b4:	ldr	r1, [pc, #764]	; 16bb8 <__flatcc_fb_codegen_c@@Base+0x1a6c>
   168b8:	ldr	r0, [r4, #204]	; 0xcc
   168bc:	b	16840 <__flatcc_fb_codegen_c@@Base+0x16f4>
   168c0:	add	r3, sp, #268	; 0x10c
   168c4:	mov	r2, sl
   168c8:	ldr	r1, [pc, #748]	; 16bbc <__flatcc_fb_codegen_c@@Base+0x1a70>
   168cc:	ldr	r0, [r4, #204]	; 0xcc
   168d0:	str	fp, [sp]
   168d4:	b	16830 <__flatcc_fb_codegen_c@@Base+0x16e4>
   168d8:	ldrh	r3, [r6, #72]	; 0x48
   168dc:	tst	r3, #4
   168e0:	bne	16928 <__flatcc_fb_codegen_c@@Base+0x17dc>
   168e4:	ldr	r3, [r6, #4]
   168e8:	ldr	r8, [r3]
   168ec:	ldr	r7, [r3, #4]
   168f0:	ldrh	r3, [r6, #24]
   168f4:	cmp	r3, #8
   168f8:	beq	16930 <__flatcc_fb_codegen_c@@Base+0x17e4>
   168fc:	cmp	r3, #14
   16900:	beq	16988 <__flatcc_fb_codegen_c@@Base+0x183c>
   16904:	ldrh	r3, [r6, #72]	; 0x48
   16908:	tst	r3, #128	; 0x80
   1690c:	beq	16928 <__flatcc_fb_codegen_c@@Base+0x17dc>
   16910:	cmp	fp, #0
   16914:	bne	16928 <__flatcc_fb_codegen_c@@Base+0x17dc>
   16918:	ldr	r0, [pc, #672]	; 16bc0 <__flatcc_fb_codegen_c@@Base+0x1a74>
   1691c:	mov	r9, #1
   16920:	ldr	r1, [r4, #204]	; 0xcc
   16924:	bl	1404c <fputs@plt>
   16928:	ldr	r6, [r6]
   1692c:	b	165b4 <__flatcc_fb_codegen_c@@Base+0x1468>
   16930:	ldr	r3, [r6, #16]
   16934:	ldr	r2, [pc, #508]	; 16b38 <__flatcc_fb_codegen_c@@Base+0x19ec>
   16938:	cmp	r3, #5
   1693c:	sub	r3, r3, #1
   16940:	moveq	r2, r4
   16944:	cmp	r3, #10
   16948:	bhi	16838 <__flatcc_fb_codegen_c@@Base+0x16ec>
   1694c:	ldr	r1, [pc, #588]	; 16ba0 <__flatcc_fb_codegen_c@@Base+0x1a54>
   16950:	ldr	r0, [r4, #204]	; 0xcc
   16954:	stm	sp, {r7, r8}
   16958:	str	r4, [sp, #8]
   1695c:	add	r3, r1, r3, lsl #2
   16960:	str	r2, [sp, #16]
   16964:	mov	r2, r4
   16968:	ldr	r1, [r3, #128]	; 0x80
   1696c:	ldr	r3, [r3, #184]	; 0xb8
   16970:	str	r3, [sp, #12]
   16974:	mov	r3, r5
   16978:	str	r1, [sp, #20]
   1697c:	ldr	r1, [pc, #576]	; 16bc4 <__flatcc_fb_codegen_c@@Base+0x1a78>
   16980:	bl	13fb0 <fprintf@plt>
   16984:	b	16904 <__flatcc_fb_codegen_c@@Base+0x17b8>
   16988:	add	sl, sp, #268	; 0x10c
   1698c:	ldr	r0, [r6, #16]
   16990:	mov	r1, sl
   16994:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   16998:	ldr	r3, [r6, #16]
   1699c:	ldrh	r2, [r3, #8]
   169a0:	cmp	r2, #1
   169a4:	beq	16b08 <__flatcc_fb_codegen_c@@Base+0x19bc>
   169a8:	cmp	r2, #3
   169ac:	bne	16904 <__flatcc_fb_codegen_c@@Base+0x17b8>
   169b0:	ldr	r3, [r3, #40]	; 0x28
   169b4:	sub	r3, r3, #1
   169b8:	cmp	r3, #10
   169bc:	bhi	16a70 <__flatcc_fb_codegen_c@@Base+0x1924>
   169c0:	mov	r3, r5
   169c4:	mov	r2, r4
   169c8:	ldr	r1, [pc, #504]	; 16bc8 <__flatcc_fb_codegen_c@@Base+0x1a7c>
   169cc:	ldr	r0, [r4, #204]	; 0xcc
   169d0:	stm	sp, {r7, r8, sl}
   169d4:	str	sl, [sp, #12]
   169d8:	bl	13fb0 <fprintf@plt>
   169dc:	ldr	r3, [r4, #212]	; 0xd4
   169e0:	ldr	r3, [r3, #32]
   169e4:	cmp	r3, #0
   169e8:	beq	16a74 <__flatcc_fb_codegen_c@@Base+0x1928>
   169ec:	ldrh	r3, [r6, #72]	; 0x48
   169f0:	tst	r3, #128	; 0x80
   169f4:	beq	16904 <__flatcc_fb_codegen_c@@Base+0x17b8>
   169f8:	cmp	r9, #0
   169fc:	beq	16a0c <__flatcc_fb_codegen_c@@Base+0x18c0>
   16a00:	ldr	r0, [pc, #452]	; 16bcc <__flatcc_fb_codegen_c@@Base+0x1a80>
   16a04:	ldr	r1, [r4, #204]	; 0xcc
   16a08:	bl	1404c <fputs@plt>
   16a0c:	ldr	r0, [pc, #444]	; 16bd0 <__flatcc_fb_codegen_c@@Base+0x1a84>
   16a10:	ldr	r1, [r4, #204]	; 0xcc
   16a14:	bl	1404c <fputs@plt>
   16a18:	mov	r3, r5
   16a1c:	mov	r2, r4
   16a20:	ldr	r1, [pc, #428]	; 16bd4 <__flatcc_fb_codegen_c@@Base+0x1a88>
   16a24:	ldr	r0, [r4, #204]	; 0xcc
   16a28:	stm	sp, {r7, r8, sl}
   16a2c:	bl	13fb0 <fprintf@plt>
   16a30:	ldr	r3, [r4, #212]	; 0xd4
   16a34:	ldr	r3, [r3, #136]	; 0x88
   16a38:	cmp	r3, #0
   16a3c:	beq	16a5c <__flatcc_fb_codegen_c@@Base+0x1910>
   16a40:	mov	r3, r5
   16a44:	mov	r2, r4
   16a48:	ldr	r1, [pc, #392]	; 16bd8 <__flatcc_fb_codegen_c@@Base+0x1a8c>
   16a4c:	ldr	r0, [r4, #204]	; 0xcc
   16a50:	stm	sp, {r7, r8, sl}
   16a54:	str	r5, [sp, #12]
   16a58:	bl	13fb0 <fprintf@plt>
   16a5c:	cmp	r9, #0
   16a60:	beq	16a9c <__flatcc_fb_codegen_c@@Base+0x1950>
   16a64:	mov	r9, #1
   16a68:	mov	fp, r9
   16a6c:	b	16904 <__flatcc_fb_codegen_c@@Base+0x17b8>
   16a70:	bl	15558 <__flatcc_fb_codegen_c@@Base+0x40c>
   16a74:	ldrh	r3, [r6, #72]	; 0x48
   16a78:	tst	r3, #128	; 0x80
   16a7c:	beq	16904 <__flatcc_fb_codegen_c@@Base+0x17b8>
   16a80:	mov	r3, r5
   16a84:	mov	r2, r4
   16a88:	ldr	r1, [pc, #332]	; 16bdc <__flatcc_fb_codegen_c@@Base+0x1a90>
   16a8c:	ldr	r0, [r4, #204]	; 0xcc
   16a90:	stm	sp, {r7, r8, sl}
   16a94:	bl	13fb0 <fprintf@plt>
   16a98:	b	169ec <__flatcc_fb_codegen_c@@Base+0x18a0>
   16a9c:	add	r3, sp, #268	; 0x10c
   16aa0:	mov	r2, r4
   16aa4:	ldr	r1, [pc, #308]	; 16be0 <__flatcc_fb_codegen_c@@Base+0x1a94>
   16aa8:	ldr	r0, [r4, #204]	; 0xcc
   16aac:	stm	sp, {r7, r8}
   16ab0:	str	r3, [sp, #8]
   16ab4:	mov	r3, r5
   16ab8:	bl	13fb0 <fprintf@plt>
   16abc:	add	r3, sp, #268	; 0x10c
   16ac0:	mov	r2, r4
   16ac4:	ldr	r1, [pc, #280]	; 16be4 <__flatcc_fb_codegen_c@@Base+0x1a98>
   16ac8:	ldr	r0, [r4, #204]	; 0xcc
   16acc:	stm	sp, {r7, r8}
   16ad0:	str	r3, [sp, #8]
   16ad4:	mov	r3, r5
   16ad8:	bl	13fb0 <fprintf@plt>
   16adc:	ldr	r3, [r4, #212]	; 0xd4
   16ae0:	ldr	r3, [r3, #136]	; 0x88
   16ae4:	cmp	r3, #0
   16ae8:	beq	16a64 <__flatcc_fb_codegen_c@@Base+0x1918>
   16aec:	mov	r3, r5
   16af0:	mov	r2, r5
   16af4:	ldr	r1, [pc, #236]	; 16be8 <__flatcc_fb_codegen_c@@Base+0x1a9c>
   16af8:	ldr	r0, [r4, #204]	; 0xcc
   16afc:	stm	sp, {r7, r8}
   16b00:	bl	13fb0 <fprintf@plt>
   16b04:	b	16a64 <__flatcc_fb_codegen_c@@Base+0x1918>
   16b08:	mov	r3, r5
   16b0c:	mov	r2, r4
   16b10:	ldr	r1, [pc, #212]	; 16bec <__flatcc_fb_codegen_c@@Base+0x1aa0>
   16b14:	ldr	r0, [r4, #204]	; 0xcc
   16b18:	stm	sp, {r7, r8, sl}
   16b1c:	bl	13fb0 <fprintf@plt>
   16b20:	b	16904 <__flatcc_fb_codegen_c@@Base+0x17b8>
   16b24:	andeq	pc, r2, r0, asr #23
   16b28:	andeq	pc, r2, r4, ror #23
   16b2c:	andeq	r0, r3, r9, lsl #20
   16b30:	andeq	r0, r3, r9, lsr #20
   16b34:	andeq	r0, r3, r9, asr #20
   16b38:	andeq	r1, r3, fp, lsr #2
   16b3c:	andeq	r0, r3, r8, ror #20
   16b40:	andeq	r0, r3, r9, asr #21
   16b44:	andeq	r0, r3, sp, lsl fp
   16b48:	andeq	r0, r3, pc, asr fp
   16b4c:	andeq	r0, r3, fp, ror #28
   16b50:	andeq	r0, r3, r0, ror r1
   16b54:	muleq	r3, sp, lr
   16b58:	andeq	r0, r3, ip, lsr #23
   16b5c:			; <UNDEFINED> instruction: 0x00030bbd
   16b60:	andeq	r0, r3, sl, asr #23
   16b64:	andeq	r8, r3, sl, ror r6
   16b68:	andeq	r0, r3, r7, lsr #26
   16b6c:	andeq	r0, r3, r7, lsr sp
   16b70:	andeq	r0, r3, r6, ror sp
   16b74:	andeq	r0, r3, lr, asr #27
   16b78:	andeq	r0, r3, r4, lsl lr
   16b7c:	andeq	r4, r4, r9, lsl #30
   16b80:	andeq	r0, r3, r8, ror #23
   16b84:	andeq	r0, r3, fp, lsl ip
   16b88:	strdeq	r0, [r3], -r9
   16b8c:	andeq	r0, r3, r8, lsl sp
   16b90:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   16b94:	strheq	sl, [r5], -r0
   16b98:	andeq	pc, r2, sp, lsl #28
   16b9c:	andeq	r8, r3, pc, ror #2
   16ba0:	andeq	pc, r2, r8, lsl #21
   16ba4:	andeq	r0, r3, r4, ror #24
   16ba8:	andeq	r0, r3, sl, asr ip
   16bac:	andeq	r0, r3, r0, lsr #26
   16bb0:	andeq	r0, r3, sl, ror ip
   16bb4:	andeq	r0, r3, r3, lsl #20
   16bb8:	ldrdeq	r0, [r3], -r5
   16bbc:	andeq	r0, r3, r1, ror #25
   16bc0:	andeq	r0, r3, lr, lsr #19
   16bc4:			; <UNDEFINED> instruction: 0x00030eb5
   16bc8:	andeq	r0, r3, fp, ror #29
   16bcc:	andeq	r0, r3, r3, asr #5
   16bd0:	andeq	r0, r3, r6, lsl #6
   16bd4:	andeq	r0, r3, r6, lsr r7
   16bd8:	andeq	r0, r3, r4, lsr #30
   16bdc:	andeq	r0, r3, r0, lsl #14
   16be0:	andeq	r0, r3, pc, lsr #15
   16be4:	andeq	r0, r3, sp, ror #15
   16be8:	andeq	r0, r3, r5, lsr #8
   16bec:	andeq	r0, r3, r0, ror #30

00016bf0 <__flatcc_fb_gen_common_c_header@@Base>:
   16bf0:	push	{r4, r5, lr}
   16bf4:	add	r5, r0, #102	; 0x66
   16bf8:	mov	r4, r0
   16bfc:	mov	r3, r5
   16c00:	sub	sp, sp, #236	; 0xec
   16c04:	mov	r2, r5
   16c08:	ldr	r1, [pc, #2736]	; 176c0 <__flatcc_fb_gen_common_c_header@@Base+0xad0>
   16c0c:	ldr	r0, [r0, #204]	; 0xcc
   16c10:	bl	13fb0 <fprintf@plt>
   16c14:	ldr	r0, [pc, #2728]	; 176c4 <__flatcc_fb_gen_common_c_header@@Base+0xad4>
   16c18:	ldr	r1, [r4, #204]	; 0xcc
   16c1c:	bl	1404c <fputs@plt>
   16c20:	ldr	r0, [pc, #2720]	; 176c8 <__flatcc_fb_gen_common_c_header@@Base+0xad8>
   16c24:	ldr	r1, [r4, #204]	; 0xcc
   16c28:	bl	1404c <fputs@plt>
   16c2c:	ldr	r3, [r4, #212]	; 0xd4
   16c30:	ldr	r3, [r3, #136]	; 0x88
   16c34:	cmp	r3, #0
   16c38:	bne	16c48 <__flatcc_fb_gen_common_c_header@@Base+0x58>
   16c3c:	ldr	r0, [pc, #2696]	; 176cc <__flatcc_fb_gen_common_c_header@@Base+0xadc>
   16c40:	ldr	r1, [r4, #204]	; 0xcc
   16c44:	bl	1404c <fputs@plt>
   16c48:	ldr	r3, [r4, #212]	; 0xd4
   16c4c:	ldr	r3, [r3, #140]	; 0x8c
   16c50:	cmp	r3, #0
   16c54:	beq	16c64 <__flatcc_fb_gen_common_c_header@@Base+0x74>
   16c58:	ldr	r0, [pc, #2672]	; 176d0 <__flatcc_fb_gen_common_c_header@@Base+0xae0>
   16c5c:	ldr	r1, [r4, #204]	; 0xcc
   16c60:	bl	1404c <fputs@plt>
   16c64:	ldr	r0, [pc, #2664]	; 176d4 <__flatcc_fb_gen_common_c_header@@Base+0xae4>
   16c68:	ldr	r1, [r4, #204]	; 0xcc
   16c6c:	bl	1404c <fputs@plt>
   16c70:	ldr	r1, [pc, #2656]	; 176d8 <__flatcc_fb_gen_common_c_header@@Base+0xae8>
   16c74:	mov	r0, r4
   16c78:	bl	13ed8 <strcmp@plt>
   16c7c:	cmp	r0, #0
   16c80:	beq	16cf4 <__flatcc_fb_gen_common_c_header@@Base+0x104>
   16c84:	mov	r3, r4
   16c88:	mov	r2, r4
   16c8c:	ldr	r1, [pc, #2632]	; 176dc <__flatcc_fb_gen_common_c_header@@Base+0xaec>
   16c90:	ldr	r0, [r4, #204]	; 0xcc
   16c94:	str	r4, [sp]
   16c98:	str	r4, [sp, #4]
   16c9c:	str	r4, [sp, #8]
   16ca0:	bl	13fb0 <fprintf@plt>
   16ca4:	mov	r3, r4
   16ca8:	ldr	r2, [pc, #2608]	; 176e0 <__flatcc_fb_gen_common_c_header@@Base+0xaf0>
   16cac:	ldr	r1, [pc, #2608]	; 176e4 <__flatcc_fb_gen_common_c_header@@Base+0xaf4>
   16cb0:	ldr	r0, [r4, #204]	; 0xcc
   16cb4:	str	r4, [sp]
   16cb8:	str	r4, [sp, #4]
   16cbc:	bl	13fb0 <fprintf@plt>
   16cc0:	mov	r3, r4
   16cc4:	mov	r2, r4
   16cc8:	ldr	r1, [pc, #2584]	; 176e8 <__flatcc_fb_gen_common_c_header@@Base+0xaf8>
   16ccc:	ldr	r0, [r4, #204]	; 0xcc
   16cd0:	str	r4, [sp]
   16cd4:	str	r4, [sp, #4]
   16cd8:	str	r4, [sp, #8]
   16cdc:	bl	13fb0 <fprintf@plt>
   16ce0:	mov	r3, r5
   16ce4:	mov	r2, r5
   16ce8:	ldr	r1, [pc, #2556]	; 176ec <__flatcc_fb_gen_common_c_header@@Base+0xafc>
   16cec:	ldr	r0, [r4, #204]	; 0xcc
   16cf0:	bl	13fb0 <fprintf@plt>
   16cf4:	mov	r3, r4
   16cf8:	mov	r2, r4
   16cfc:	ldr	r1, [pc, #2540]	; 176f0 <__flatcc_fb_gen_common_c_header@@Base+0xb00>
   16d00:	ldr	r0, [r4, #204]	; 0xcc
   16d04:	bl	13fb0 <fprintf@plt>
   16d08:	mov	r3, r4
   16d0c:	mov	r2, r4
   16d10:	ldr	r1, [pc, #2524]	; 176f4 <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   16d14:	ldr	r0, [r4, #204]	; 0xcc
   16d18:	str	r4, [sp]
   16d1c:	str	r4, [sp, #4]
   16d20:	str	r4, [sp, #8]
   16d24:	str	r4, [sp, #12]
   16d28:	str	r4, [sp, #16]
   16d2c:	bl	13fb0 <fprintf@plt>
   16d30:	mov	r3, r4
   16d34:	mov	r2, r4
   16d38:	ldr	r1, [pc, #2488]	; 176f8 <__flatcc_fb_gen_common_c_header@@Base+0xb08>
   16d3c:	ldr	r0, [r4, #204]	; 0xcc
   16d40:	bl	13fb0 <fprintf@plt>
   16d44:	mov	r3, r4
   16d48:	mov	r2, r4
   16d4c:	ldr	r1, [pc, #2472]	; 176fc <__flatcc_fb_gen_common_c_header@@Base+0xb0c>
   16d50:	ldr	r0, [r4, #204]	; 0xcc
   16d54:	str	r4, [sp]
   16d58:	str	r4, [sp, #4]
   16d5c:	bl	13fb0 <fprintf@plt>
   16d60:	ldr	r3, [r4, #212]	; 0xd4
   16d64:	ldr	r3, [r3, #32]
   16d68:	cmp	r3, #0
   16d6c:	beq	17670 <__flatcc_fb_gen_common_c_header@@Base+0xa80>
   16d70:	mov	r2, r4
   16d74:	ldr	r1, [pc, #2436]	; 17700 <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   16d78:	ldr	r0, [r4, #204]	; 0xcc
   16d7c:	bl	13fb0 <fprintf@plt>
   16d80:	mov	r3, r4
   16d84:	mov	r2, r4
   16d88:	ldr	r1, [pc, #2420]	; 17704 <__flatcc_fb_gen_common_c_header@@Base+0xb14>
   16d8c:	ldr	r0, [r4, #204]	; 0xcc
   16d90:	bl	13fb0 <fprintf@plt>
   16d94:	mov	r3, r4
   16d98:	mov	r2, r4
   16d9c:	ldr	r1, [pc, #2404]	; 17708 <__flatcc_fb_gen_common_c_header@@Base+0xb18>
   16da0:	ldr	r0, [r4, #204]	; 0xcc
   16da4:	str	r4, [sp]
   16da8:	str	r4, [sp, #4]
   16dac:	str	r4, [sp, #8]
   16db0:	bl	13fb0 <fprintf@plt>
   16db4:	mov	r3, r4
   16db8:	mov	r2, r4
   16dbc:	ldr	r1, [pc, #2376]	; 1770c <__flatcc_fb_gen_common_c_header@@Base+0xb1c>
   16dc0:	ldr	r0, [r4, #204]	; 0xcc
   16dc4:	str	r4, [sp]
   16dc8:	str	r4, [sp, #4]
   16dcc:	str	r4, [sp, #8]
   16dd0:	bl	13fb0 <fprintf@plt>
   16dd4:	mov	r3, r4
   16dd8:	mov	r2, r4
   16ddc:	ldr	r1, [pc, #2348]	; 17710 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   16de0:	ldr	r0, [r4, #204]	; 0xcc
   16de4:	str	r4, [sp]
   16de8:	bl	13fb0 <fprintf@plt>
   16dec:	mov	r3, r4
   16df0:	mov	r2, r4
   16df4:	ldr	r1, [pc, #2328]	; 17714 <__flatcc_fb_gen_common_c_header@@Base+0xb24>
   16df8:	ldr	r0, [r4, #204]	; 0xcc
   16dfc:	str	r4, [sp]
   16e00:	bl	13fb0 <fprintf@plt>
   16e04:	mov	r3, r4
   16e08:	mov	r2, r4
   16e0c:	ldr	r1, [pc, #2308]	; 17718 <__flatcc_fb_gen_common_c_header@@Base+0xb28>
   16e10:	ldr	r0, [r4, #204]	; 0xcc
   16e14:	str	r4, [sp]
   16e18:	bl	13fb0 <fprintf@plt>
   16e1c:	mov	r3, r4
   16e20:	mov	r2, r4
   16e24:	ldr	r1, [pc, #2288]	; 1771c <__flatcc_fb_gen_common_c_header@@Base+0xb2c>
   16e28:	ldr	r0, [r4, #204]	; 0xcc
   16e2c:	str	r4, [sp]
   16e30:	str	r4, [sp, #4]
   16e34:	str	r4, [sp, #8]
   16e38:	bl	13fb0 <fprintf@plt>
   16e3c:	ldr	r3, [r4, #212]	; 0xd4
   16e40:	ldr	r3, [r3, #32]
   16e44:	cmp	r3, #0
   16e48:	beq	17680 <__flatcc_fb_gen_common_c_header@@Base+0xa90>
   16e4c:	mov	r2, r4
   16e50:	ldr	r1, [pc, #2248]	; 17720 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   16e54:	ldr	r0, [r4, #204]	; 0xcc
   16e58:	bl	13fb0 <fprintf@plt>
   16e5c:	mov	r3, r4
   16e60:	mov	r2, r4
   16e64:	ldr	r1, [pc, #2232]	; 17724 <__flatcc_fb_gen_common_c_header@@Base+0xb34>
   16e68:	ldr	r0, [r4, #204]	; 0xcc
   16e6c:	str	r4, [sp]
   16e70:	str	r4, [sp, #4]
   16e74:	bl	13fb0 <fprintf@plt>
   16e78:	mov	r3, r4
   16e7c:	mov	r2, r4
   16e80:	ldr	r1, [pc, #2208]	; 17728 <__flatcc_fb_gen_common_c_header@@Base+0xb38>
   16e84:	ldr	r0, [r4, #204]	; 0xcc
   16e88:	bl	13fb0 <fprintf@plt>
   16e8c:	mov	r3, r4
   16e90:	mov	r2, r4
   16e94:	ldr	r1, [pc, #2192]	; 1772c <__flatcc_fb_gen_common_c_header@@Base+0xb3c>
   16e98:	ldr	r0, [r4, #204]	; 0xcc
   16e9c:	str	r4, [sp]
   16ea0:	bl	13fb0 <fprintf@plt>
   16ea4:	mov	r3, r4
   16ea8:	mov	r2, r4
   16eac:	ldr	r1, [pc, #2172]	; 17730 <__flatcc_fb_gen_common_c_header@@Base+0xb40>
   16eb0:	ldr	r0, [r4, #204]	; 0xcc
   16eb4:	bl	13fb0 <fprintf@plt>
   16eb8:	mov	r3, r4
   16ebc:	mov	r2, r4
   16ec0:	ldr	r1, [pc, #2156]	; 17734 <__flatcc_fb_gen_common_c_header@@Base+0xb44>
   16ec4:	ldr	r0, [r4, #204]	; 0xcc
   16ec8:	str	r4, [sp]
   16ecc:	str	r4, [sp, #4]
   16ed0:	bl	13fb0 <fprintf@plt>
   16ed4:	mov	r3, r4
   16ed8:	mov	r2, r4
   16edc:	ldr	r1, [pc, #2132]	; 17738 <__flatcc_fb_gen_common_c_header@@Base+0xb48>
   16ee0:	ldr	r0, [r4, #204]	; 0xcc
   16ee4:	bl	13fb0 <fprintf@plt>
   16ee8:	mov	r3, r4
   16eec:	mov	r2, r4
   16ef0:	ldr	r1, [pc, #2116]	; 1773c <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   16ef4:	ldr	r0, [r4, #204]	; 0xcc
   16ef8:	bl	13fb0 <fprintf@plt>
   16efc:	mov	r3, r4
   16f00:	mov	r2, r4
   16f04:	ldr	r1, [pc, #2100]	; 17740 <__flatcc_fb_gen_common_c_header@@Base+0xb50>
   16f08:	ldr	r0, [r4, #204]	; 0xcc
   16f0c:	str	r4, [sp]
   16f10:	str	r4, [sp, #4]
   16f14:	bl	13fb0 <fprintf@plt>
   16f18:	mov	r3, r4
   16f1c:	mov	r2, r4
   16f20:	ldr	r1, [pc, #2076]	; 17744 <__flatcc_fb_gen_common_c_header@@Base+0xb54>
   16f24:	ldr	r0, [r4, #204]	; 0xcc
   16f28:	str	r4, [sp]
   16f2c:	str	r4, [sp, #4]
   16f30:	str	r4, [sp, #8]
   16f34:	str	r4, [sp, #12]
   16f38:	str	r4, [sp, #16]
   16f3c:	str	r4, [sp, #20]
   16f40:	str	r4, [sp, #24]
   16f44:	str	r4, [sp, #28]
   16f48:	str	r4, [sp, #32]
   16f4c:	str	r4, [sp, #36]	; 0x24
   16f50:	bl	13fb0 <fprintf@plt>
   16f54:	mov	r2, r4
   16f58:	ldr	r1, [pc, #2024]	; 17748 <__flatcc_fb_gen_common_c_header@@Base+0xb58>
   16f5c:	ldr	r0, [r4, #204]	; 0xcc
   16f60:	bl	13fb0 <fprintf@plt>
   16f64:	mov	r3, r4
   16f68:	mov	r2, r4
   16f6c:	ldr	r1, [pc, #2008]	; 1774c <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   16f70:	ldr	r0, [r4, #204]	; 0xcc
   16f74:	str	r4, [sp]
   16f78:	str	r4, [sp, #4]
   16f7c:	bl	13fb0 <fprintf@plt>
   16f80:	mov	r3, r4
   16f84:	mov	r2, r4
   16f88:	ldr	r1, [pc, #1984]	; 17750 <__flatcc_fb_gen_common_c_header@@Base+0xb60>
   16f8c:	ldr	r0, [r4, #204]	; 0xcc
   16f90:	str	r4, [sp]
   16f94:	str	r4, [sp, #4]
   16f98:	str	r4, [sp, #8]
   16f9c:	str	r4, [sp, #12]
   16fa0:	str	r4, [sp, #16]
   16fa4:	str	r4, [sp, #20]
   16fa8:	str	r4, [sp, #24]
   16fac:	str	r4, [sp, #28]
   16fb0:	str	r4, [sp, #32]
   16fb4:	str	r4, [sp, #36]	; 0x24
   16fb8:	str	r4, [sp, #40]	; 0x28
   16fbc:	str	r4, [sp, #44]	; 0x2c
   16fc0:	str	r4, [sp, #48]	; 0x30
   16fc4:	str	r4, [sp, #52]	; 0x34
   16fc8:	str	r4, [sp, #56]	; 0x38
   16fcc:	bl	13fb0 <fprintf@plt>
   16fd0:	mov	r3, r4
   16fd4:	mov	r2, r4
   16fd8:	ldr	r1, [pc, #1908]	; 17754 <__flatcc_fb_gen_common_c_header@@Base+0xb64>
   16fdc:	ldr	r0, [r4, #204]	; 0xcc
   16fe0:	str	r4, [sp]
   16fe4:	str	r4, [sp, #4]
   16fe8:	str	r4, [sp, #8]
   16fec:	str	r4, [sp, #12]
   16ff0:	str	r4, [sp, #16]
   16ff4:	str	r4, [sp, #20]
   16ff8:	bl	13fb0 <fprintf@plt>
   16ffc:	mov	r3, r4
   17000:	mov	r2, r4
   17004:	ldr	r1, [pc, #1868]	; 17758 <__flatcc_fb_gen_common_c_header@@Base+0xb68>
   17008:	ldr	r0, [r4, #204]	; 0xcc
   1700c:	str	r4, [sp]
   17010:	str	r4, [sp, #4]
   17014:	bl	13fb0 <fprintf@plt>
   17018:	mov	r3, r4
   1701c:	mov	r2, r4
   17020:	ldr	r1, [pc, #1844]	; 1775c <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   17024:	ldr	r0, [r4, #204]	; 0xcc
   17028:	str	r4, [sp]
   1702c:	str	r4, [sp, #4]
   17030:	bl	13fb0 <fprintf@plt>
   17034:	mov	r2, r4
   17038:	ldr	r1, [pc, #1824]	; 17760 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
   1703c:	ldr	r0, [r4, #204]	; 0xcc
   17040:	bl	13fb0 <fprintf@plt>
   17044:	mov	r2, r4
   17048:	ldr	r1, [pc, #1812]	; 17764 <__flatcc_fb_gen_common_c_header@@Base+0xb74>
   1704c:	ldr	r0, [r4, #204]	; 0xcc
   17050:	bl	13fb0 <fprintf@plt>
   17054:	mov	r2, r4
   17058:	ldr	r1, [pc, #1800]	; 17768 <__flatcc_fb_gen_common_c_header@@Base+0xb78>
   1705c:	ldr	r0, [r4, #204]	; 0xcc
   17060:	bl	13fb0 <fprintf@plt>
   17064:	mov	r2, r4
   17068:	ldr	r1, [pc, #1788]	; 1776c <__flatcc_fb_gen_common_c_header@@Base+0xb7c>
   1706c:	ldr	r0, [r4, #204]	; 0xcc
   17070:	bl	13fb0 <fprintf@plt>
   17074:	mov	r2, r4
   17078:	ldr	r1, [pc, #1776]	; 17770 <__flatcc_fb_gen_common_c_header@@Base+0xb80>
   1707c:	ldr	r0, [r4, #204]	; 0xcc
   17080:	bl	13fb0 <fprintf@plt>
   17084:	mov	r3, r4
   17088:	mov	r2, r4
   1708c:	ldr	r1, [pc, #1760]	; 17774 <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   17090:	ldr	r0, [r4, #204]	; 0xcc
   17094:	str	r4, [sp]
   17098:	str	r4, [sp, #4]
   1709c:	bl	13fb0 <fprintf@plt>
   170a0:	mov	r3, r4
   170a4:	mov	r2, r4
   170a8:	ldr	r1, [pc, #1736]	; 17778 <__flatcc_fb_gen_common_c_header@@Base+0xb88>
   170ac:	ldr	r0, [r4, #204]	; 0xcc
   170b0:	str	r4, [sp]
   170b4:	str	r4, [sp, #4]
   170b8:	str	r4, [sp, #8]
   170bc:	str	r4, [sp, #12]
   170c0:	bl	13fb0 <fprintf@plt>
   170c4:	mov	r3, r4
   170c8:	mov	r2, r4
   170cc:	ldr	r1, [pc, #1704]	; 1777c <__flatcc_fb_gen_common_c_header@@Base+0xb8c>
   170d0:	ldr	r0, [r4, #204]	; 0xcc
   170d4:	str	r4, [sp]
   170d8:	bl	13fb0 <fprintf@plt>
   170dc:	mov	r3, r4
   170e0:	mov	r2, r4
   170e4:	ldr	r1, [pc, #1684]	; 17780 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
   170e8:	ldr	r0, [r4, #204]	; 0xcc
   170ec:	str	r4, [sp]
   170f0:	str	r4, [sp, #4]
   170f4:	str	r4, [sp, #8]
   170f8:	str	r4, [sp, #12]
   170fc:	str	r4, [sp, #16]
   17100:	str	r4, [sp, #20]
   17104:	str	r4, [sp, #24]
   17108:	str	r4, [sp, #28]
   1710c:	str	r4, [sp, #32]
   17110:	bl	13fb0 <fprintf@plt>
   17114:	mov	r3, r4
   17118:	mov	r2, r4
   1711c:	ldr	r1, [pc, #1632]	; 17784 <__flatcc_fb_gen_common_c_header@@Base+0xb94>
   17120:	ldr	r0, [r4, #204]	; 0xcc
   17124:	bl	13fb0 <fprintf@plt>
   17128:	mov	r3, r4
   1712c:	mov	r2, r4
   17130:	ldr	r1, [pc, #1616]	; 17788 <__flatcc_fb_gen_common_c_header@@Base+0xb98>
   17134:	ldr	r0, [r4, #204]	; 0xcc
   17138:	str	r4, [sp]
   1713c:	bl	13fb0 <fprintf@plt>
   17140:	mov	r3, r4
   17144:	mov	r2, r4
   17148:	ldr	r1, [pc, #1596]	; 1778c <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   1714c:	ldr	r0, [r4, #204]	; 0xcc
   17150:	str	r4, [sp]
   17154:	bl	13fb0 <fprintf@plt>
   17158:	mov	r2, r4
   1715c:	ldr	r1, [pc, #1580]	; 17790 <__flatcc_fb_gen_common_c_header@@Base+0xba0>
   17160:	ldr	r0, [r4, #204]	; 0xcc
   17164:	bl	13fb0 <fprintf@plt>
   17168:	mov	r2, r4
   1716c:	ldr	r1, [pc, #1568]	; 17794 <__flatcc_fb_gen_common_c_header@@Base+0xba4>
   17170:	ldr	r0, [r4, #204]	; 0xcc
   17174:	bl	13fb0 <fprintf@plt>
   17178:	mov	r3, r4
   1717c:	mov	r2, r4
   17180:	ldr	r1, [pc, #1552]	; 17798 <__flatcc_fb_gen_common_c_header@@Base+0xba8>
   17184:	ldr	r0, [r4, #204]	; 0xcc
   17188:	bl	13fb0 <fprintf@plt>
   1718c:	mov	r3, r4
   17190:	mov	r2, r4
   17194:	ldr	r1, [pc, #1536]	; 1779c <__flatcc_fb_gen_common_c_header@@Base+0xbac>
   17198:	ldr	r0, [r4, #204]	; 0xcc
   1719c:	bl	13fb0 <fprintf@plt>
   171a0:	mov	r3, r4
   171a4:	mov	r2, r4
   171a8:	ldr	r1, [pc, #1520]	; 177a0 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
   171ac:	ldr	r0, [r4, #204]	; 0xcc
   171b0:	str	r4, [sp]
   171b4:	str	r4, [sp, #4]
   171b8:	str	r4, [sp, #8]
   171bc:	str	r4, [sp, #12]
   171c0:	str	r4, [sp, #16]
   171c4:	str	r4, [sp, #20]
   171c8:	str	r4, [sp, #24]
   171cc:	str	r4, [sp, #28]
   171d0:	str	r4, [sp, #32]
   171d4:	bl	13fb0 <fprintf@plt>
   171d8:	mov	r3, r4
   171dc:	mov	r2, r4
   171e0:	ldr	r1, [pc, #1468]	; 177a4 <__flatcc_fb_gen_common_c_header@@Base+0xbb4>
   171e4:	ldr	r0, [r4, #204]	; 0xcc
   171e8:	str	r4, [sp]
   171ec:	str	r4, [sp, #4]
   171f0:	str	r4, [sp, #8]
   171f4:	str	r4, [sp, #12]
   171f8:	str	r4, [sp, #16]
   171fc:	str	r4, [sp, #20]
   17200:	str	r4, [sp, #24]
   17204:	str	r4, [sp, #28]
   17208:	str	r4, [sp, #32]
   1720c:	bl	13fb0 <fprintf@plt>
   17210:	mov	r3, r4
   17214:	mov	r2, r4
   17218:	ldr	r1, [pc, #1416]	; 177a8 <__flatcc_fb_gen_common_c_header@@Base+0xbb8>
   1721c:	ldr	r0, [r4, #204]	; 0xcc
   17220:	str	r4, [sp]
   17224:	str	r4, [sp, #4]
   17228:	str	r4, [sp, #8]
   1722c:	str	r4, [sp, #12]
   17230:	str	r4, [sp, #16]
   17234:	bl	13fb0 <fprintf@plt>
   17238:	mov	r3, r4
   1723c:	mov	r2, r4
   17240:	ldr	r1, [pc, #1380]	; 177ac <__flatcc_fb_gen_common_c_header@@Base+0xbbc>
   17244:	ldr	r0, [r4, #204]	; 0xcc
   17248:	str	r4, [sp]
   1724c:	str	r4, [sp, #4]
   17250:	str	r4, [sp, #8]
   17254:	str	r4, [sp, #12]
   17258:	str	r4, [sp, #16]
   1725c:	str	r4, [sp, #20]
   17260:	str	r4, [sp, #24]
   17264:	str	r4, [sp, #28]
   17268:	str	r4, [sp, #32]
   1726c:	bl	13fb0 <fprintf@plt>
   17270:	mov	r3, r4
   17274:	mov	r2, r4
   17278:	ldr	r1, [pc, #1328]	; 177b0 <__flatcc_fb_gen_common_c_header@@Base+0xbc0>
   1727c:	ldr	r0, [r4, #204]	; 0xcc
   17280:	str	r4, [sp]
   17284:	str	r4, [sp, #4]
   17288:	str	r4, [sp, #8]
   1728c:	str	r4, [sp, #12]
   17290:	str	r4, [sp, #16]
   17294:	str	r4, [sp, #20]
   17298:	str	r4, [sp, #24]
   1729c:	str	r4, [sp, #28]
   172a0:	str	r4, [sp, #32]
   172a4:	str	r4, [sp, #36]	; 0x24
   172a8:	str	r4, [sp, #40]	; 0x28
   172ac:	bl	13fb0 <fprintf@plt>
   172b0:	mov	r2, r4
   172b4:	ldr	r1, [pc, #1272]	; 177b4 <__flatcc_fb_gen_common_c_header@@Base+0xbc4>
   172b8:	ldr	r0, [r4, #204]	; 0xcc
   172bc:	bl	13fb0 <fprintf@plt>
   172c0:	mov	r2, r4
   172c4:	ldr	r1, [pc, #1260]	; 177b8 <__flatcc_fb_gen_common_c_header@@Base+0xbc8>
   172c8:	ldr	r0, [r4, #204]	; 0xcc
   172cc:	bl	13fb0 <fprintf@plt>
   172d0:	ldr	r3, [r4, #212]	; 0xd4
   172d4:	ldr	r3, [r3, #136]	; 0x88
   172d8:	cmp	r3, #0
   172dc:	beq	17690 <__flatcc_fb_gen_common_c_header@@Base+0xaa0>
   172e0:	mov	r0, r4
   172e4:	bl	17c50 <__flatcc_gen_sort@@Base>
   172e8:	mov	r3, r4
   172ec:	mov	r2, r4
   172f0:	ldr	r1, [pc, #1220]	; 177bc <__flatcc_fb_gen_common_c_header@@Base+0xbcc>
   172f4:	ldr	r0, [r4, #204]	; 0xcc
   172f8:	str	r4, [sp]
   172fc:	str	r4, [sp, #4]
   17300:	str	r4, [sp, #8]
   17304:	bl	13fb0 <fprintf@plt>
   17308:	ldr	r3, [r4, #212]	; 0xd4
   1730c:	ldr	r3, [r3, #136]	; 0x88
   17310:	cmp	r3, #0
   17314:	beq	176a0 <__flatcc_fb_gen_common_c_header@@Base+0xab0>
   17318:	mov	r2, r4
   1731c:	ldr	r1, [pc, #1180]	; 177c0 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
   17320:	ldr	r0, [r4, #204]	; 0xcc
   17324:	bl	13fb0 <fprintf@plt>
   17328:	mov	r0, #10
   1732c:	ldr	r1, [r4, #204]	; 0xcc
   17330:	bl	14010 <fputc@plt>
   17334:	mov	r3, r4
   17338:	mov	r2, r4
   1733c:	ldr	r1, [pc, #1152]	; 177c4 <__flatcc_fb_gen_common_c_header@@Base+0xbd4>
   17340:	ldr	r0, [r4, #204]	; 0xcc
   17344:	str	r4, [sp]
   17348:	bl	13fb0 <fprintf@plt>
   1734c:	mov	r3, r4
   17350:	mov	r2, r4
   17354:	ldr	r1, [pc, #1132]	; 177c8 <__flatcc_fb_gen_common_c_header@@Base+0xbd8>
   17358:	ldr	r0, [r4, #204]	; 0xcc
   1735c:	str	r4, [sp]
   17360:	str	r4, [sp, #4]
   17364:	str	r4, [sp, #8]
   17368:	str	r4, [sp, #12]
   1736c:	str	r4, [sp, #16]
   17370:	str	r4, [sp, #20]
   17374:	str	r4, [sp, #24]
   17378:	str	r4, [sp, #28]
   1737c:	str	r4, [sp, #32]
   17380:	str	r4, [sp, #36]	; 0x24
   17384:	str	r4, [sp, #40]	; 0x28
   17388:	str	r4, [sp, #44]	; 0x2c
   1738c:	str	r4, [sp, #48]	; 0x30
   17390:	str	r4, [sp, #52]	; 0x34
   17394:	str	r4, [sp, #56]	; 0x38
   17398:	str	r4, [sp, #60]	; 0x3c
   1739c:	str	r4, [sp, #64]	; 0x40
   173a0:	str	r4, [sp, #68]	; 0x44
   173a4:	str	r4, [sp, #72]	; 0x48
   173a8:	str	r4, [sp, #76]	; 0x4c
   173ac:	str	r4, [sp, #80]	; 0x50
   173b0:	str	r4, [sp, #84]	; 0x54
   173b4:	str	r4, [sp, #88]	; 0x58
   173b8:	str	r4, [sp, #92]	; 0x5c
   173bc:	bl	13fb0 <fprintf@plt>
   173c0:	mov	r3, r4
   173c4:	mov	r2, r4
   173c8:	ldr	r1, [pc, #1020]	; 177cc <__flatcc_fb_gen_common_c_header@@Base+0xbdc>
   173cc:	ldr	r0, [r4, #204]	; 0xcc
   173d0:	str	r4, [sp]
   173d4:	str	r4, [sp, #4]
   173d8:	str	r4, [sp, #8]
   173dc:	str	r4, [sp, #12]
   173e0:	str	r4, [sp, #16]
   173e4:	str	r4, [sp, #20]
   173e8:	str	r4, [sp, #24]
   173ec:	str	r4, [sp, #28]
   173f0:	str	r4, [sp, #32]
   173f4:	str	r4, [sp, #36]	; 0x24
   173f8:	bl	13fb0 <fprintf@plt>
   173fc:	mov	r3, r4
   17400:	mov	r2, r4
   17404:	ldr	r1, [pc, #964]	; 177d0 <__flatcc_fb_gen_common_c_header@@Base+0xbe0>
   17408:	str	r4, [sp, #104]	; 0x68
   1740c:	str	r4, [sp, #108]	; 0x6c
   17410:	str	r4, [sp, #112]	; 0x70
   17414:	str	r4, [sp, #116]	; 0x74
   17418:	str	r4, [sp, #120]	; 0x78
   1741c:	str	r4, [sp, #124]	; 0x7c
   17420:	str	r4, [sp, #128]	; 0x80
   17424:	str	r4, [sp, #132]	; 0x84
   17428:	str	r4, [sp, #136]	; 0x88
   1742c:	str	r4, [sp, #140]	; 0x8c
   17430:	str	r4, [sp, #144]	; 0x90
   17434:	str	r4, [sp, #148]	; 0x94
   17438:	str	r4, [sp, #152]	; 0x98
   1743c:	str	r4, [sp, #156]	; 0x9c
   17440:	str	r4, [sp, #160]	; 0xa0
   17444:	str	r4, [sp, #164]	; 0xa4
   17448:	str	r4, [sp, #168]	; 0xa8
   1744c:	str	r4, [sp, #172]	; 0xac
   17450:	str	r4, [sp, #176]	; 0xb0
   17454:	str	r4, [sp, #180]	; 0xb4
   17458:	str	r4, [sp, #184]	; 0xb8
   1745c:	str	r4, [sp, #188]	; 0xbc
   17460:	str	r4, [sp, #192]	; 0xc0
   17464:	str	r4, [sp, #196]	; 0xc4
   17468:	str	r4, [sp, #200]	; 0xc8
   1746c:	str	r4, [sp, #204]	; 0xcc
   17470:	str	r4, [sp, #208]	; 0xd0
   17474:	str	r4, [sp, #212]	; 0xd4
   17478:	str	r4, [sp, #216]	; 0xd8
   1747c:	str	r4, [sp, #220]	; 0xdc
   17480:	str	r4, [sp, #224]	; 0xe0
   17484:	str	r4, [sp, #228]	; 0xe4
   17488:	str	r4, [sp, #100]	; 0x64
   1748c:	str	r4, [sp]
   17490:	str	r4, [sp, #4]
   17494:	str	r4, [sp, #8]
   17498:	str	r4, [sp, #12]
   1749c:	str	r4, [sp, #16]
   174a0:	str	r4, [sp, #20]
   174a4:	str	r4, [sp, #24]
   174a8:	str	r4, [sp, #28]
   174ac:	str	r4, [sp, #32]
   174b0:	str	r4, [sp, #36]	; 0x24
   174b4:	str	r4, [sp, #40]	; 0x28
   174b8:	str	r4, [sp, #44]	; 0x2c
   174bc:	str	r4, [sp, #48]	; 0x30
   174c0:	str	r4, [sp, #52]	; 0x34
   174c4:	str	r4, [sp, #56]	; 0x38
   174c8:	str	r4, [sp, #60]	; 0x3c
   174cc:	str	r4, [sp, #64]	; 0x40
   174d0:	str	r4, [sp, #68]	; 0x44
   174d4:	str	r4, [sp, #72]	; 0x48
   174d8:	str	r4, [sp, #76]	; 0x4c
   174dc:	str	r4, [sp, #80]	; 0x50
   174e0:	str	r4, [sp, #84]	; 0x54
   174e4:	str	r4, [sp, #88]	; 0x58
   174e8:	str	r4, [sp, #92]	; 0x5c
   174ec:	str	r4, [sp, #96]	; 0x60
   174f0:	ldr	r0, [r4, #204]	; 0xcc
   174f4:	bl	13fb0 <fprintf@plt>
   174f8:	ldr	r3, [r4, #212]	; 0xd4
   174fc:	ldr	r3, [r3, #136]	; 0x88
   17500:	cmp	r3, #0
   17504:	beq	17518 <__flatcc_fb_gen_common_c_header@@Base+0x928>
   17508:	mov	r2, r4
   1750c:	ldr	r1, [pc, #704]	; 177d4 <__flatcc_fb_gen_common_c_header@@Base+0xbe4>
   17510:	ldr	r0, [r4, #204]	; 0xcc
   17514:	bl	13fb0 <fprintf@plt>
   17518:	mov	r3, r4
   1751c:	mov	r2, r4
   17520:	ldr	r1, [pc, #688]	; 177d8 <__flatcc_fb_gen_common_c_header@@Base+0xbe8>
   17524:	ldr	r0, [r4, #204]	; 0xcc
   17528:	bl	13fb0 <fprintf@plt>
   1752c:	ldr	r3, [r4, #212]	; 0xd4
   17530:	ldr	r3, [r3, #32]
   17534:	cmp	r3, #0
   17538:	beq	176b0 <__flatcc_fb_gen_common_c_header@@Base+0xac0>
   1753c:	mov	r2, r4
   17540:	ldr	r1, [pc, #440]	; 17700 <__flatcc_fb_gen_common_c_header@@Base+0xb10>
   17544:	ldr	r0, [r4, #204]	; 0xcc
   17548:	bl	13fb0 <fprintf@plt>
   1754c:	mov	r2, r4
   17550:	ldr	r1, [pc, #644]	; 177dc <__flatcc_fb_gen_common_c_header@@Base+0xbec>
   17554:	ldr	r0, [r4, #204]	; 0xcc
   17558:	bl	13fb0 <fprintf@plt>
   1755c:	mov	r3, r4
   17560:	mov	r2, r4
   17564:	ldr	r1, [pc, #628]	; 177e0 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
   17568:	ldr	r0, [r4, #204]	; 0xcc
   1756c:	str	r4, [sp]
   17570:	str	r4, [sp, #4]
   17574:	str	r4, [sp, #8]
   17578:	str	r4, [sp, #12]
   1757c:	str	r4, [sp, #16]
   17580:	str	r4, [sp, #20]
   17584:	str	r4, [sp, #24]
   17588:	str	r4, [sp, #28]
   1758c:	str	r4, [sp, #32]
   17590:	str	r4, [sp, #36]	; 0x24
   17594:	str	r4, [sp, #40]	; 0x28
   17598:	str	r4, [sp, #44]	; 0x2c
   1759c:	bl	13fb0 <fprintf@plt>
   175a0:	mov	r3, r4
   175a4:	mov	r2, r4
   175a8:	ldr	r1, [pc, #564]	; 177e4 <__flatcc_fb_gen_common_c_header@@Base+0xbf4>
   175ac:	ldr	r0, [r4, #204]	; 0xcc
   175b0:	str	r4, [sp]
   175b4:	bl	13fb0 <fprintf@plt>
   175b8:	mov	r3, r4
   175bc:	mov	r2, r4
   175c0:	ldr	r1, [pc, #544]	; 177e8 <__flatcc_fb_gen_common_c_header@@Base+0xbf8>
   175c4:	ldr	r0, [r4, #204]	; 0xcc
   175c8:	str	r4, [sp]
   175cc:	str	r4, [sp, #4]
   175d0:	str	r4, [sp, #8]
   175d4:	str	r4, [sp, #12]
   175d8:	bl	13fb0 <fprintf@plt>
   175dc:	mov	r3, r4
   175e0:	mov	r2, r4
   175e4:	ldr	r1, [pc, #512]	; 177ec <__flatcc_fb_gen_common_c_header@@Base+0xbfc>
   175e8:	ldr	r0, [r4, #204]	; 0xcc
   175ec:	str	r4, [sp]
   175f0:	str	r4, [sp, #4]
   175f4:	bl	13fb0 <fprintf@plt>
   175f8:	mov	r3, r4
   175fc:	mov	r2, r4
   17600:	ldr	r1, [pc, #488]	; 177f0 <__flatcc_fb_gen_common_c_header@@Base+0xc00>
   17604:	ldr	r0, [r4, #204]	; 0xcc
   17608:	str	r4, [sp]
   1760c:	str	r4, [sp, #4]
   17610:	str	r4, [sp, #8]
   17614:	str	r4, [sp, #12]
   17618:	str	r4, [sp, #16]
   1761c:	str	r4, [sp, #20]
   17620:	str	r4, [sp, #24]
   17624:	str	r4, [sp, #28]
   17628:	bl	13fb0 <fprintf@plt>
   1762c:	mov	r0, #10
   17630:	ldr	r1, [r4, #204]	; 0xcc
   17634:	bl	14010 <fputc@plt>
   17638:	ldr	r3, [r4, #212]	; 0xd4
   1763c:	ldr	r3, [r3, #140]	; 0x8c
   17640:	cmp	r3, #0
   17644:	beq	17654 <__flatcc_fb_gen_common_c_header@@Base+0xa64>
   17648:	ldr	r0, [pc, #420]	; 177f4 <__flatcc_fb_gen_common_c_header@@Base+0xc04>
   1764c:	ldr	r1, [r4, #204]	; 0xcc
   17650:	bl	1404c <fputs@plt>
   17654:	ldr	r1, [pc, #412]	; 177f8 <__flatcc_fb_gen_common_c_header@@Base+0xc08>
   17658:	mov	r2, r5
   1765c:	ldr	r0, [r4, #204]	; 0xcc
   17660:	bl	13fb0 <fprintf@plt>
   17664:	mov	r0, #0
   17668:	add	sp, sp, #236	; 0xec
   1766c:	pop	{r4, r5, pc}
   17670:	mov	r0, #10
   17674:	ldr	r1, [r4, #204]	; 0xcc
   17678:	bl	14010 <fputc@plt>
   1767c:	b	16d80 <__flatcc_fb_gen_common_c_header@@Base+0x190>
   17680:	mov	r0, #10
   17684:	ldr	r1, [r4, #204]	; 0xcc
   17688:	bl	14010 <fputc@plt>
   1768c:	b	16e5c <__flatcc_fb_gen_common_c_header@@Base+0x26c>
   17690:	ldr	r0, [pc, #356]	; 177fc <__flatcc_fb_gen_common_c_header@@Base+0xc0c>
   17694:	ldr	r1, [r4, #204]	; 0xcc
   17698:	bl	1404c <fputs@plt>
   1769c:	b	172e8 <__flatcc_fb_gen_common_c_header@@Base+0x6f8>
   176a0:	mov	r0, #10
   176a4:	ldr	r1, [r4, #204]	; 0xcc
   176a8:	bl	14010 <fputc@plt>
   176ac:	b	17328 <__flatcc_fb_gen_common_c_header@@Base+0x738>
   176b0:	mov	r0, #10
   176b4:	ldr	r1, [r4, #204]	; 0xcc
   176b8:	bl	14010 <fputc@plt>
   176bc:	b	1754c <__flatcc_fb_gen_common_c_header@@Base+0x95c>
   176c0:	muleq	r3, r7, pc	; <UNPREDICTABLE>
   176c4:	andeq	r0, r3, lr, asr #31
   176c8:	andeq	r1, r3, r0, lsr #32
   176cc:	andeq	r1, r3, r5, asr r0
   176d0:	ldrdeq	r1, [r3], -sp
   176d4:	andeq	r1, r3, r2, lsl #2
   176d8:	andeq	r1, r3, ip, lsr #2
   176dc:	andeq	r1, r3, r9, lsr r1
   176e0:	andeq	r1, r3, sl, lsr #2
   176e4:	andeq	r1, r3, r8, lsl #4
   176e8:	andeq	r1, r3, pc, asr r3
   176ec:	andeq	r1, r3, r5, asr #11
   176f0:	andeq	r1, r3, r5, lsl r6
   176f4:	andeq	r1, r3, r2, lsr #13
   176f8:	andeq	r1, r3, r5, lsl r8
   176fc:	andeq	r1, r3, sl, ror #16
   17700:	andeq	r1, r3, pc, lsl #19
   17704:			; <UNDEFINED> instruction: 0x000319bc
   17708:	andeq	r1, r3, pc, lsl #21
   1770c:	andeq	r1, r3, r9, lsr ip
   17710:	ldrdeq	r1, [r3], -r9
   17714:			; <UNDEFINED> instruction: 0x00031db3
   17718:	andeq	r1, r3, sp, lsl #29
   1771c:	andeq	r1, r3, r5, ror #30
   17720:	andeq	r2, r3, sp, asr #32
   17724:	andeq	r2, r3, r7, ror r0
   17728:	andeq	r2, r3, r6, lsl r1
   1772c:	andeq	r2, r3, r8, asr r1
   17730:	andeq	r2, r3, r2, ror #3
   17734:	andeq	r2, r3, r4, asr r2
   17738:	andeq	r2, r3, r4, ror r3
   1773c:	andeq	r2, r3, fp, ror #7
   17740:	andeq	r2, r3, fp, ror #8
   17744:	andeq	r2, r3, lr, asr #9
   17748:	andeq	r2, r3, pc, ror #11
   1774c:	andeq	r2, r3, r1, lsl r6
   17750:	muleq	r3, r8, r6
   17754:	andeq	r2, r3, r7, asr #16
   17758:	andeq	r2, r3, sl, lsl #18
   1775c:	andeq	r2, r3, r3, lsr #19
   17760:	andeq	r2, r3, sl, lsl sl
   17764:	andeq	r2, r3, fp, ror #25
   17768:	andeq	r2, r3, sp, ror pc
   1776c:	strdeq	r2, [r3], -lr
   17770:	andeq	r3, r3, ip, rrx
   17774:	andeq	r3, r3, r0, asr r2
   17778:	strdeq	r3, [r3], -r9
   1777c:	ldrdeq	r3, [r3], -r4
   17780:	andeq	r3, r3, lr, ror #13
   17784:	andeq	r3, r3, r5, asr #16
   17788:	andeq	r3, r3, r4, lsl r9
   1778c:	andeq	r3, r3, r9, asr #19
   17790:	andeq	r3, r3, lr, ror fp
   17794:	andeq	r3, r3, r8, lsr #24
   17798:	andeq	r3, r3, r5, asr sp
   1779c:	andeq	r3, r3, r5, lsr #29
   177a0:	andeq	r3, r3, r9, ror pc
   177a4:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   177a8:	andeq	r4, r3, r5, ror r2
   177ac:	andeq	r4, r3, sl, asr #11
   177b0:	andeq	r4, r3, sl, ror #17
   177b4:			; <UNDEFINED> instruction: 0x00034fb3
   177b8:	andeq	r5, r3, r3, lsl #4
   177bc:	ldrdeq	r5, [r3], -r9
   177c0:			; <UNDEFINED> instruction: 0x000357ba
   177c4:	ldrdeq	r5, [r3], -sl
   177c8:	andeq	r5, r3, sl, asr r8
   177cc:	andeq	r5, r3, sp, ror #20
   177d0:			; <UNDEFINED> instruction: 0x00035bb7
   177d4:	andeq	r6, r3, r0, ror r2
   177d8:	andeq	r6, r3, sl, lsl #5
   177dc:	andeq	r6, r3, r3, lsr #6
   177e0:	andeq	r6, r3, r2, lsr #7
   177e4:	andeq	r6, r3, fp, ror #13
   177e8:	andeq	r6, r3, r2, lsr #15
   177ec:	andeq	r6, r3, r9, ror #18
   177f0:	andeq	r6, r3, r5, ror #23
   177f4:	andeq	r6, r3, r7, asr #29
   177f8:	andeq	r6, r3, ip, ror #29
   177fc:	andeq	r5, r3, r4, asr #13

00017800 <__flatcc_fb_gen_c_reader@@Base>:
   17800:	ldr	r3, [r0, #212]	; 0xd4
   17804:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17808:	mov	r4, r0
   1780c:	sub	sp, sp, #248	; 0xf8
   17810:	add	r6, r0, #102	; 0x66
   17814:	ldr	r1, [pc, #980]	; 17bf0 <__flatcc_fb_gen_c_reader@@Base+0x3f0>
   17818:	ldr	r5, [r3, #132]	; 0x84
   1781c:	ldr	r3, [r0, #208]	; 0xd0
   17820:	ldr	r0, [r0, #204]	; 0xcc
   17824:	ldr	r3, [r3, #164]	; 0xa4
   17828:	mov	r2, r3
   1782c:	bl	13fb0 <fprintf@plt>
   17830:	ldr	r0, [pc, #956]	; 17bf4 <__flatcc_fb_gen_c_reader@@Base+0x3f4>
   17834:	ldr	r1, [r4, #204]	; 0xcc
   17838:	bl	1404c <fputs@plt>
   1783c:	cmp	r5, #0
   17840:	beq	17850 <__flatcc_fb_gen_c_reader@@Base+0x50>
   17844:	ldr	r0, [pc, #940]	; 17bf8 <__flatcc_fb_gen_c_reader@@Base+0x3f8>
   17848:	ldr	r1, [r4, #204]	; 0xcc
   1784c:	bl	1404c <fputs@plt>
   17850:	mov	r3, r4
   17854:	mov	r2, r6
   17858:	ldr	r1, [pc, #924]	; 17bfc <__flatcc_fb_gen_c_reader@@Base+0x3fc>
   1785c:	ldr	r0, [r4, #204]	; 0xcc
   17860:	bl	13fb0 <fprintf@plt>
   17864:	ldr	r2, [pc, #916]	; 17c00 <__flatcc_fb_gen_c_reader@@Base+0x400>
   17868:	mov	r0, r4
   1786c:	ldr	r1, [pc, #912]	; 17c04 <__flatcc_fb_gen_c_reader@@Base+0x404>
   17870:	bl	14e3c <__flatcc_fb_gen_c_includes@@Base>
   17874:	ldr	r0, [pc, #908]	; 17c08 <__flatcc_fb_gen_c_reader@@Base+0x408>
   17878:	ldr	r1, [r4, #204]	; 0xcc
   1787c:	bl	1404c <fputs@plt>
   17880:	cmp	r5, #0
   17884:	bne	17894 <__flatcc_fb_gen_c_reader@@Base+0x94>
   17888:	ldr	r0, [pc, #892]	; 17c0c <__flatcc_fb_gen_c_reader@@Base+0x40c>
   1788c:	ldr	r1, [r4, #204]	; 0xcc
   17890:	bl	1404c <fputs@plt>
   17894:	ldr	r3, [r4, #212]	; 0xd4
   17898:	ldr	r3, [r3, #140]	; 0x8c
   1789c:	cmp	r3, #0
   178a0:	beq	178b0 <__flatcc_fb_gen_c_reader@@Base+0xb0>
   178a4:	ldr	r0, [pc, #868]	; 17c10 <__flatcc_fb_gen_c_reader@@Base+0x410>
   178a8:	ldr	r1, [r4, #204]	; 0xcc
   178ac:	bl	1404c <fputs@plt>
   178b0:	ldr	r0, [r4, #204]	; 0xcc
   178b4:	ldr	r3, [r4, #208]	; 0xd0
   178b8:	ldrh	r2, [r3, #16]
   178bc:	cmp	r2, #2
   178c0:	bne	179fc <__flatcc_fb_gen_c_reader@@Base+0x1fc>
   178c4:	ldr	r2, [r3, #8]
   178c8:	ldr	r1, [pc, #836]	; 17c14 <__flatcc_fb_gen_c_reader@@Base+0x414>
   178cc:	str	r2, [sp, #4]
   178d0:	mov	r2, r4
   178d4:	ldr	r3, [r3, #12]
   178d8:	str	r3, [sp]
   178dc:	mov	r3, r4
   178e0:	bl	13fb0 <fprintf@plt>
   178e4:	ldr	r0, [r4, #204]	; 0xcc
   178e8:	ldr	r3, [r4, #208]	; 0xd0
   178ec:	ldrh	r2, [r3, #32]
   178f0:	cmp	r2, #2
   178f4:	bne	17a10 <__flatcc_fb_gen_c_reader@@Base+0x210>
   178f8:	ldr	r2, [r3, #24]
   178fc:	ldr	r1, [pc, #788]	; 17c18 <__flatcc_fb_gen_c_reader@@Base+0x418>
   17900:	str	r2, [sp, #4]
   17904:	mov	r2, r4
   17908:	ldr	r3, [r3, #28]
   1790c:	str	r3, [sp]
   17910:	mov	r3, r4
   17914:	bl	13fb0 <fprintf@plt>
   17918:	mov	r0, #10
   1791c:	ldr	r1, [r4, #204]	; 0xcc
   17920:	bl	14010 <fputc@plt>
   17924:	ldr	r3, [r4, #208]	; 0xd0
   17928:	ldr	r5, [r3, #44]	; 0x2c
   1792c:	cmp	r5, #0
   17930:	bne	17a30 <__flatcc_fb_gen_c_reader@@Base+0x230>
   17934:	mov	r0, #10
   17938:	ldr	r1, [r4, #204]	; 0xcc
   1793c:	bl	14010 <fputc@plt>
   17940:	ldr	r3, [r4, #208]	; 0xd0
   17944:	ldr	r5, [r3, #40]	; 0x28
   17948:	cmp	r5, #0
   1794c:	bne	17a44 <__flatcc_fb_gen_c_reader@@Base+0x244>
   17950:	ldr	r3, [r4, #208]	; 0xd0
   17954:	ldr	r7, [pc, #704]	; 17c1c <__flatcc_fb_gen_c_reader@@Base+0x41c>
   17958:	ldr	r8, [pc, #704]	; 17c20 <__flatcc_fb_gen_c_reader@@Base+0x420>
   1795c:	ldr	r9, [pc, #704]	; 17c24 <__flatcc_fb_gen_c_reader@@Base+0x424>
   17960:	ldr	r5, [r3, #40]	; 0x28
   17964:	cmp	r5, #0
   17968:	bne	17a64 <__flatcc_fb_gen_c_reader@@Base+0x264>
   1796c:	mov	r0, #10
   17970:	ldr	r1, [r4, #204]	; 0xcc
   17974:	bl	14010 <fputc@plt>
   17978:	ldr	r3, [r4, #208]	; 0xd0
   1797c:	ldr	r5, [r3, #40]	; 0x28
   17980:	cmp	r5, #0
   17984:	bne	17b40 <__flatcc_fb_gen_c_reader@@Base+0x340>
   17988:	mov	r0, #10
   1798c:	ldr	r1, [r4, #204]	; 0xcc
   17990:	bl	14010 <fputc@plt>
   17994:	ldr	r3, [r4, #208]	; 0xd0
   17998:	ldr	r5, [r3, #44]	; 0x2c
   1799c:	cmp	r5, #0
   179a0:	bne	17b60 <__flatcc_fb_gen_c_reader@@Base+0x360>
   179a4:	ldr	r3, [r4, #208]	; 0xd0
   179a8:	ldr	r5, [r3, #40]	; 0x28
   179ac:	cmp	r5, #0
   179b0:	bne	17b74 <__flatcc_fb_gen_c_reader@@Base+0x374>
   179b4:	mov	r0, #10
   179b8:	ldr	r1, [r4, #204]	; 0xcc
   179bc:	bl	14010 <fputc@plt>
   179c0:	ldr	r3, [r4, #212]	; 0xd4
   179c4:	ldr	r3, [r3, #140]	; 0x8c
   179c8:	cmp	r3, #0
   179cc:	beq	179dc <__flatcc_fb_gen_c_reader@@Base+0x1dc>
   179d0:	ldr	r0, [pc, #592]	; 17c28 <__flatcc_fb_gen_c_reader@@Base+0x428>
   179d4:	ldr	r1, [r4, #204]	; 0xcc
   179d8:	bl	1404c <fputs@plt>
   179dc:	ldr	r1, [pc, #584]	; 17c2c <__flatcc_fb_gen_c_reader@@Base+0x42c>
   179e0:	ldr	r3, [r4, #208]	; 0xd0
   179e4:	ldr	r0, [r4, #204]	; 0xcc
   179e8:	ldr	r2, [r3, #164]	; 0xa4
   179ec:	bl	13fb0 <fprintf@plt>
   179f0:	mov	r0, #0
   179f4:	add	sp, sp, #248	; 0xf8
   179f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   179fc:	mov	r3, r4
   17a00:	mov	r2, r4
   17a04:	ldr	r1, [pc, #548]	; 17c30 <__flatcc_fb_gen_c_reader@@Base+0x430>
   17a08:	bl	13fb0 <fprintf@plt>
   17a0c:	b	178e4 <__flatcc_fb_gen_c_reader@@Base+0xe4>
   17a10:	ldr	r3, [r4, #212]	; 0xd4
   17a14:	mov	r2, r4
   17a18:	ldr	r1, [pc, #532]	; 17c34 <__flatcc_fb_gen_c_reader@@Base+0x434>
   17a1c:	ldr	r3, [r3, #104]	; 0x68
   17a20:	str	r3, [sp]
   17a24:	mov	r3, r4
   17a28:	bl	13fb0 <fprintf@plt>
   17a2c:	b	17918 <__flatcc_fb_gen_c_reader@@Base+0x118>
   17a30:	mov	r1, r5
   17a34:	mov	r0, r4
   17a38:	bl	15318 <__flatcc_fb_codegen_c@@Base+0x1cc>
   17a3c:	ldr	r5, [r5, #120]	; 0x78
   17a40:	b	1792c <__flatcc_fb_gen_c_reader@@Base+0x12c>
   17a44:	ldrh	r3, [r5, #8]
   17a48:	cmp	r3, #0
   17a4c:	bne	17a5c <__flatcc_fb_gen_c_reader@@Base+0x25c>
   17a50:	mov	r1, r5
   17a54:	mov	r0, r4
   17a58:	bl	15318 <__flatcc_fb_codegen_c@@Base+0x1cc>
   17a5c:	ldr	r5, [r5]
   17a60:	b	17948 <__flatcc_fb_gen_c_reader@@Base+0x148>
   17a64:	ldrh	r3, [r5, #8]
   17a68:	cmp	r3, #1
   17a6c:	bhi	17af4 <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   17a70:	mov	r2, #220	; 0xdc
   17a74:	mov	r1, #0
   17a78:	add	r0, sp, #28
   17a7c:	bl	13fc8 <memset@plt>
   17a80:	add	r1, sp, #28
   17a84:	mov	r0, r5
   17a88:	bl	15308 <__flatcc_fb_codegen_c@@Base+0x1bc>
   17a8c:	ldr	r6, [r5, #88]	; 0x58
   17a90:	add	r3, sp, #28
   17a94:	mov	r1, r7
   17a98:	mov	r2, r3
   17a9c:	ldr	r0, [r4, #204]	; 0xcc
   17aa0:	str	r4, [sp]
   17aa4:	bl	13fb0 <fprintf@plt>
   17aa8:	mov	r3, r4
   17aac:	add	r2, sp, #28
   17ab0:	ldr	r0, [r4, #204]	; 0xcc
   17ab4:	mov	r1, r8
   17ab8:	str	r6, [sp]
   17abc:	bl	13fb0 <fprintf@plt>
   17ac0:	add	r2, sp, #8
   17ac4:	mov	r0, #4
   17ac8:	mov	r3, r2
   17acc:	mov	ip, #92	; 0x5c
   17ad0:	mov	lr, #120	; 0x78
   17ad4:	subs	r0, r0, #1
   17ad8:	bcs	17afc <__flatcc_fb_gen_c_reader@@Base+0x2fc>
   17adc:	mov	r2, #0
   17ae0:	mov	r1, r9
   17ae4:	ldr	r0, [r4, #204]	; 0xcc
   17ae8:	strb	r2, [sp, #24]
   17aec:	add	r2, sp, #28
   17af0:	bl	13fb0 <fprintf@plt>
   17af4:	ldr	r5, [r5]
   17af8:	b	17964 <__flatcc_fb_gen_c_reader@@Base+0x164>
   17afc:	and	r1, r6, #15
   17b00:	add	r2, r2, #4
   17b04:	strb	ip, [r2, #-4]
   17b08:	cmp	r1, #9
   17b0c:	strb	lr, [r2, #-3]
   17b10:	movhi	sl, #87	; 0x57
   17b14:	movls	sl, #48	; 0x30
   17b18:	add	r1, r1, sl
   17b1c:	strb	r1, [r2, #-1]
   17b20:	ubfx	r1, r6, #4, #4
   17b24:	lsr	r6, r6, #8
   17b28:	cmp	r1, #9
   17b2c:	movhi	sl, #87	; 0x57
   17b30:	movls	sl, #48	; 0x30
   17b34:	add	r1, r1, sl
   17b38:	strb	r1, [r2, #-2]
   17b3c:	b	17ad4 <__flatcc_fb_gen_c_reader@@Base+0x2d4>
   17b40:	ldrh	r3, [r5, #8]
   17b44:	cmp	r3, #3
   17b48:	bne	17b58 <__flatcc_fb_gen_c_reader@@Base+0x358>
   17b4c:	mov	r1, r5
   17b50:	mov	r0, r4
   17b54:	bl	15748 <__flatcc_fb_codegen_c@@Base+0x5fc>
   17b58:	ldr	r5, [r5]
   17b5c:	b	17980 <__flatcc_fb_gen_c_reader@@Base+0x180>
   17b60:	mov	r1, r5
   17b64:	mov	r0, r4
   17b68:	bl	1641c <__flatcc_fb_codegen_c@@Base+0x12d0>
   17b6c:	ldr	r5, [r5, #120]	; 0x78
   17b70:	b	1799c <__flatcc_fb_gen_c_reader@@Base+0x19c>
   17b74:	ldrh	r3, [r5, #8]
   17b78:	cmp	r3, #4
   17b7c:	ldrls	pc, [pc, r3, lsl #2]
   17b80:	b	17bbc <__flatcc_fb_gen_c_reader@@Base+0x3bc>
   17b84:	andeq	r7, r1, ip, lsr #23
   17b88:	andeq	r7, r1, r4, lsr #23
   17b8c:	andeq	r7, r1, r4, lsr #23
   17b90:	andeq	r7, r1, r4, lsr #23
   17b94:	muleq	r1, r8, fp
   17b98:	mov	r1, r5
   17b9c:	mov	r0, r4
   17ba0:	bl	15748 <__flatcc_fb_codegen_c@@Base+0x5fc>
   17ba4:	ldr	r5, [r5]
   17ba8:	b	179ac <__flatcc_fb_gen_c_reader@@Base+0x1ac>
   17bac:	mov	r1, r5
   17bb0:	mov	r0, r4
   17bb4:	bl	15a84 <__flatcc_fb_codegen_c@@Base+0x938>
   17bb8:	b	17ba4 <__flatcc_fb_gen_c_reader@@Base+0x3a4>
   17bbc:	ldr	r3, [pc, #116]	; 17c38 <__flatcc_fb_gen_c_reader@@Base+0x438>
   17bc0:	ldr	r0, [pc, #116]	; 17c3c <__flatcc_fb_gen_c_reader@@Base+0x43c>
   17bc4:	ldr	r2, [pc, #116]	; 17c40 <__flatcc_fb_gen_c_reader@@Base+0x440>
   17bc8:	str	r3, [sp]
   17bcc:	movw	r3, #1672	; 0x688
   17bd0:	ldr	r1, [pc, #108]	; 17c44 <__flatcc_fb_gen_c_reader@@Base+0x444>
   17bd4:	ldr	r0, [r0]
   17bd8:	bl	13fb0 <fprintf@plt>
   17bdc:	ldr	r3, [pc, #100]	; 17c48 <__flatcc_fb_gen_c_reader@@Base+0x448>
   17be0:	movw	r2, #1672	; 0x688
   17be4:	ldr	r1, [pc, #84]	; 17c40 <__flatcc_fb_gen_c_reader@@Base+0x440>
   17be8:	ldr	r0, [pc, #92]	; 17c4c <__flatcc_fb_gen_c_reader@@Base+0x44c>
   17bec:	bl	14070 <__assert_fail@plt>
   17bf0:	andeq	r6, r3, r6, lsl #30
   17bf4:	andeq	r0, r3, lr, asr #31
   17bf8:	andeq	r6, r3, pc, lsr #30
   17bfc:	andeq	r7, r3, fp, ror #1
   17c00:	andeq	r7, r3, fp, lsr #2
   17c04:	andeq	r5, r4, r7, asr #30
   17c08:	andeq	r7, r3, r5, lsr r1
   17c0c:	andeq	r7, r3, sp, asr r1
   17c10:	ldrdeq	r1, [r3], -sp
   17c14:	muleq	r3, r8, r1
   17c18:	strdeq	r7, [r3], -sp
   17c1c:	andeq	r7, r3, r2, ror #4
   17c20:	andeq	r7, r3, r3, lsr #5
   17c24:	andeq	r7, r3, ip, asr #5
   17c28:	andeq	r6, r3, r7, asr #29
   17c2c:	andeq	r7, r3, r9, lsl r3
   17c30:	andeq	r7, r3, r9, asr #3
   17c34:	andeq	r7, r3, sp, lsr #4
   17c38:	andeq	r7, r3, sp, ror #5
   17c3c:	strheq	sl, [r5], -r0
   17c40:	andeq	pc, r2, r4, ror #23
   17c44:	andeq	pc, r2, sp, lsl #28
   17c48:	andeq	pc, r2, fp, asr #23
   17c4c:	andeq	r8, r3, pc, ror #2

00017c50 <__flatcc_gen_sort@@Base>:
   17c50:	push	{r4, lr}
   17c54:	mov	r2, r0
   17c58:	mov	r4, r0
   17c5c:	sub	sp, sp, #24
   17c60:	ldr	r1, [pc, #240]	; 17d58 <__flatcc_gen_sort@@Base+0x108>
   17c64:	ldr	r0, [r0, #204]	; 0xcc
   17c68:	bl	13fb0 <fprintf@plt>
   17c6c:	mov	r3, r4
   17c70:	mov	r2, r4
   17c74:	ldr	r1, [pc, #224]	; 17d5c <__flatcc_gen_sort@@Base+0x10c>
   17c78:	ldr	r0, [r4, #204]	; 0xcc
   17c7c:	bl	13fb0 <fprintf@plt>
   17c80:	mov	r3, r4
   17c84:	mov	r2, r4
   17c88:	ldr	r1, [pc, #208]	; 17d60 <__flatcc_gen_sort@@Base+0x110>
   17c8c:	ldr	r0, [r4, #204]	; 0xcc
   17c90:	str	r4, [sp]
   17c94:	bl	13fb0 <fprintf@plt>
   17c98:	mov	r3, r4
   17c9c:	mov	r2, r4
   17ca0:	ldr	r1, [pc, #188]	; 17d64 <__flatcc_gen_sort@@Base+0x114>
   17ca4:	ldr	r0, [r4, #204]	; 0xcc
   17ca8:	str	r4, [sp]
   17cac:	str	r4, [sp, #4]
   17cb0:	bl	13fb0 <fprintf@plt>
   17cb4:	mov	r3, r4
   17cb8:	mov	r2, r4
   17cbc:	ldr	r1, [pc, #164]	; 17d68 <__flatcc_gen_sort@@Base+0x118>
   17cc0:	ldr	r0, [r4, #204]	; 0xcc
   17cc4:	bl	13fb0 <fprintf@plt>
   17cc8:	mov	r3, r4
   17ccc:	mov	r2, r4
   17cd0:	ldr	r1, [pc, #148]	; 17d6c <__flatcc_gen_sort@@Base+0x11c>
   17cd4:	ldr	r0, [r4, #204]	; 0xcc
   17cd8:	str	r4, [sp]
   17cdc:	str	r4, [sp, #4]
   17ce0:	bl	13fb0 <fprintf@plt>
   17ce4:	mov	r3, r4
   17ce8:	mov	r2, r4
   17cec:	ldr	r1, [pc, #124]	; 17d70 <__flatcc_gen_sort@@Base+0x120>
   17cf0:	ldr	r0, [r4, #204]	; 0xcc
   17cf4:	str	r4, [sp]
   17cf8:	str	r4, [sp, #4]
   17cfc:	str	r4, [sp, #8]
   17d00:	str	r4, [sp, #12]
   17d04:	bl	13fb0 <fprintf@plt>
   17d08:	mov	r3, r4
   17d0c:	mov	r2, r4
   17d10:	ldr	r1, [pc, #92]	; 17d74 <__flatcc_gen_sort@@Base+0x124>
   17d14:	ldr	r0, [r4, #204]	; 0xcc
   17d18:	str	r4, [sp]
   17d1c:	str	r4, [sp, #4]
   17d20:	bl	13fb0 <fprintf@plt>
   17d24:	ldr	r1, [pc, #76]	; 17d78 <__flatcc_gen_sort@@Base+0x128>
   17d28:	mov	r3, r4
   17d2c:	mov	r2, r4
   17d30:	str	r4, [sp]
   17d34:	str	r4, [sp, #4]
   17d38:	str	r4, [sp, #8]
   17d3c:	str	r4, [sp, #12]
   17d40:	str	r4, [sp, #16]
   17d44:	ldr	r0, [r4, #204]	; 0xcc
   17d48:	bl	13fb0 <fprintf@plt>
   17d4c:	mov	r0, #0
   17d50:	add	sp, sp, #24
   17d54:	pop	{r4, pc}
   17d58:	strdeq	r7, [r3], -pc	; <UNPREDICTABLE>
   17d5c:	andeq	r7, r3, sp, asr #15
   17d60:	ldrdeq	r7, [r3], -sp
   17d64:			; <UNDEFINED> instruction: 0x000379b1
   17d68:	andeq	r7, r3, r5, asr #20
   17d6c:	ldrdeq	r7, [r3], -ip
   17d70:	andeq	r7, r3, r1, ror #24
   17d74:	andeq	r7, r3, pc, ror #25
   17d78:	andeq	r7, r3, r0, asr sp
   17d7c:	mov	r2, r1
   17d80:	mov	r1, r0
   17d84:	ldr	r0, [r0, #12]
   17d88:	b	14fe8 <__flatcc_fb_scoped_symbol_name@@Base>
   17d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d90:	sub	sp, sp, #484	; 0x1e4
   17d94:	mov	sl, r2
   17d98:	mov	fp, r3
   17d9c:	add	r7, sp, #40	; 0x28
   17da0:	mov	r4, r0
   17da4:	mov	r9, r1
   17da8:	ldr	r3, [pc, #400]	; 17f40 <__flatcc_gen_sort@@Base+0x2f0>
   17dac:	mov	r1, #0
   17db0:	mov	r0, r7
   17db4:	add	r8, sp, #260	; 0x104
   17db8:	ldr	r2, [sp, #524]	; 0x20c
   17dbc:	ldr	r5, [sp, #520]	; 0x208
   17dc0:	ldr	r6, [pc, #380]	; 17f44 <__flatcc_gen_sort@@Base+0x2f4>
   17dc4:	cmp	r2, #0
   17dc8:	mov	r2, #220	; 0xdc
   17dcc:	moveq	r6, r3
   17dd0:	bl	13fc8 <memset@plt>
   17dd4:	mov	r2, #220	; 0xdc
   17dd8:	mov	r1, #0
   17ddc:	mov	r0, r8
   17de0:	bl	13fc8 <memset@plt>
   17de4:	mov	r0, r5
   17de8:	mov	r1, r7
   17dec:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   17df0:	ldr	r5, [r5, #20]
   17df4:	cmp	r5, #0
   17df8:	bne	17e08 <__flatcc_gen_sort@@Base+0x1b8>
   17dfc:	mov	r0, r5
   17e00:	add	sp, sp, #484	; 0x1e4
   17e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e08:	ldrh	r1, [r5, #24]
   17e0c:	ldr	r2, [r5, #4]
   17e10:	cmp	r1, #10
   17e14:	ldrd	r2, [r2]
   17e18:	beq	17eec <__flatcc_gen_sort@@Base+0x29c>
   17e1c:	cmp	r1, #14
   17e20:	beq	17e34 <__flatcc_gen_sort@@Base+0x1e4>
   17e24:	cmp	r1, #0
   17e28:	bne	17f14 <__flatcc_gen_sort@@Base+0x2c4>
   17e2c:	ldr	r5, [r5]
   17e30:	b	17df4 <__flatcc_gen_sort@@Base+0x1a4>
   17e34:	mov	r1, r8
   17e38:	ldr	r0, [r5, #16]
   17e3c:	str	r3, [sp, #32]
   17e40:	str	r2, [sp, #36]	; 0x24
   17e44:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   17e48:	ldr	r1, [r5, #16]
   17e4c:	ldr	r3, [sp, #32]
   17e50:	ldr	r2, [sp, #36]	; 0x24
   17e54:	ldrh	r1, [r1, #8]
   17e58:	cmp	r1, #0
   17e5c:	beq	17e9c <__flatcc_gen_sort@@Base+0x24c>
   17e60:	cmp	r1, #1
   17e64:	beq	17ec8 <__flatcc_gen_sort@@Base+0x278>
   17e68:	ldr	r3, [pc, #216]	; 17f48 <__flatcc_gen_sort@@Base+0x2f8>
   17e6c:	ldr	r0, [pc, #216]	; 17f4c <__flatcc_gen_sort@@Base+0x2fc>
   17e70:	ldr	r2, [pc, #216]	; 17f50 <__flatcc_gen_sort@@Base+0x300>
   17e74:	str	r3, [sp]
   17e78:	movw	r3, #1358	; 0x54e
   17e7c:	ldr	r1, [pc, #208]	; 17f54 <__flatcc_gen_sort@@Base+0x304>
   17e80:	ldr	r0, [r0]
   17e84:	bl	13fb0 <fprintf@plt>
   17e88:	ldr	r3, [pc, #200]	; 17f58 <__flatcc_gen_sort@@Base+0x308>
   17e8c:	movw	r2, #1358	; 0x54e
   17e90:	ldr	r1, [pc, #184]	; 17f50 <__flatcc_gen_sort@@Base+0x300>
   17e94:	ldr	r0, [pc, #192]	; 17f5c <__flatcc_gen_sort@@Base+0x30c>
   17e98:	bl	14070 <__assert_fail@plt>
   17e9c:	ldr	r1, [pc, #188]	; 17f60 <__flatcc_gen_sort@@Base+0x310>
   17ea0:	stm	sp, {r4, r9, sl, fp}
   17ea4:	str	r3, [sp, #20]
   17ea8:	mov	r3, r6
   17eac:	str	r2, [sp, #24]
   17eb0:	mov	r2, r4
   17eb4:	str	r7, [sp, #16]
   17eb8:	str	r8, [sp, #28]
   17ebc:	ldr	r0, [r4, #204]	; 0xcc
   17ec0:	bl	13fb0 <fprintf@plt>
   17ec4:	b	17e2c <__flatcc_gen_sort@@Base+0x1dc>
   17ec8:	ldr	r1, [pc, #148]	; 17f64 <__flatcc_gen_sort@@Base+0x314>
   17ecc:	stm	sp, {r4, r9, sl, fp}
   17ed0:	str	r7, [sp, #16]
   17ed4:	str	r3, [sp, #20]
   17ed8:	mov	r3, r6
   17edc:	str	r2, [sp, #24]
   17ee0:	mov	r2, r4
   17ee4:	str	r8, [sp, #28]
   17ee8:	b	17ebc <__flatcc_gen_sort@@Base+0x26c>
   17eec:	ldr	r1, [pc, #116]	; 17f68 <__flatcc_gen_sort@@Base+0x318>
   17ef0:	ldr	r0, [r4, #204]	; 0xcc
   17ef4:	stm	sp, {r4, r9, sl, fp}
   17ef8:	str	r7, [sp, #16]
   17efc:	str	r3, [sp, #20]
   17f00:	mov	r3, r6
   17f04:	str	r2, [sp, #24]
   17f08:	mov	r2, r4
   17f0c:	bl	13fb0 <fprintf@plt>
   17f10:	b	17e2c <__flatcc_gen_sort@@Base+0x1dc>
   17f14:	ldr	r3, [pc, #80]	; 17f6c <__flatcc_gen_sort@@Base+0x31c>
   17f18:	ldr	r0, [pc, #44]	; 17f4c <__flatcc_gen_sort@@Base+0x2fc>
   17f1c:	ldr	r2, [pc, #44]	; 17f50 <__flatcc_gen_sort@@Base+0x300>
   17f20:	str	r3, [sp]
   17f24:	movw	r3, #1368	; 0x558
   17f28:	ldr	r1, [pc, #36]	; 17f54 <__flatcc_gen_sort@@Base+0x304>
   17f2c:	ldr	r0, [r0]
   17f30:	bl	13fb0 <fprintf@plt>
   17f34:	ldr	r3, [pc, #28]	; 17f58 <__flatcc_gen_sort@@Base+0x308>
   17f38:	movw	r2, #1368	; 0x558
   17f3c:	b	17e90 <__flatcc_gen_sort@@Base+0x240>
   17f40:	andeq	r8, r4, fp, asr #5
   17f44:	andeq	r7, r3, fp, lsl pc
   17f48:	strdeq	r7, [r3], -r0
   17f4c:	strheq	sl, [r5], -r0
   17f50:	muleq	r3, pc, pc	; <UNPREDICTABLE>
   17f54:	andeq	pc, r2, sp, lsl #28
   17f58:	andeq	r7, r3, r8, asr #27
   17f5c:	andeq	r8, r3, pc, ror #2
   17f60:	andeq	r7, r3, r8, lsr #30
   17f64:	andeq	r7, r3, r3, ror #30
   17f68:	andeq	r8, r3, r6, lsr #32
   17f6c:	andeq	r8, r3, lr, asr r0
   17f70:	push	{r4, r5, r6, lr}
   17f74:	mov	r4, r0
   17f78:	mov	r5, #0
   17f7c:	cmp	r4, #0
   17f80:	bne	17f8c <__flatcc_gen_sort@@Base+0x33c>
   17f84:	mov	r0, r5
   17f88:	pop	{r4, r5, r6, pc}
   17f8c:	ldrh	r3, [r4, #72]	; 0x48
   17f90:	tst	r3, #4
   17f94:	bne	17fc0 <__flatcc_gen_sort@@Base+0x370>
   17f98:	ldrh	r3, [r4, #24]
   17f9c:	cmp	r3, #14
   17fa0:	bne	17fc8 <__flatcc_gen_sort@@Base+0x378>
   17fa4:	ldr	r3, [r4, #16]
   17fa8:	ldrh	r2, [r3, #8]
   17fac:	cmp	r2, #1
   17fb0:	bne	17fc8 <__flatcc_gen_sort@@Base+0x378>
   17fb4:	ldr	r0, [r3, #20]
   17fb8:	bl	17f70 <__flatcc_gen_sort@@Base+0x320>
   17fbc:	add	r5, r5, r0
   17fc0:	ldr	r4, [r4]
   17fc4:	b	17f7c <__flatcc_gen_sort@@Base+0x32c>
   17fc8:	add	r5, r5, #1
   17fcc:	b	17fc0 <__flatcc_gen_sort@@Base+0x370>
   17fd0:	ldr	ip, [pc, #96]	; 18038 <__flatcc_gen_sort@@Base+0x3e8>
   17fd4:	cmp	r3, #0
   17fd8:	push	{lr}		; (str lr, [sp, #-4]!)
   17fdc:	ldr	lr, [pc, #88]	; 1803c <__flatcc_gen_sort@@Base+0x3ec>
   17fe0:	movne	r3, ip
   17fe4:	moveq	r3, lr
   17fe8:	cmp	r2, #0
   17fec:	popeq	{pc}		; (ldreq pc, [sp], #4)
   17ff0:	cmp	r1, #0
   17ff4:	ldr	r0, [r0]
   17ff8:	bne	18014 <__flatcc_gen_sort@@Base+0x3c4>
   17ffc:	cmp	r2, #4
   18000:	bgt	18028 <__flatcc_gen_sort@@Base+0x3d8>
   18004:	mov	r1, r0
   18008:	ldr	r0, [pc, #48]	; 18040 <__flatcc_gen_sort@@Base+0x3f0>
   1800c:	pop	{lr}		; (ldr lr, [sp], #4)
   18010:	b	1404c <fputs@plt>
   18014:	tst	r1, #3
   18018:	bne	18004 <__flatcc_gen_sort@@Base+0x3b4>
   1801c:	sub	r2, r2, r1
   18020:	cmp	r2, #2
   18024:	b	18000 <__flatcc_gen_sort@@Base+0x3b0>
   18028:	mov	r2, r3
   1802c:	ldr	r1, [pc, #16]	; 18044 <__flatcc_gen_sort@@Base+0x3f4>
   18030:	pop	{lr}		; (ldr lr, [sp], #4)
   18034:	b	13fb0 <fprintf@plt>
   18038:	andeq	r2, r3, r4, asr #16
   1803c:	andeq	r1, r3, sl, lsr #2
   18040:	andeq	r5, r4, r1, asr #25
   18044:	andeq	r8, r3, fp, lsl #1
   18048:	push	{r0, r1, r2, lr}
   1804c:	ldr	r4, [pc, #48]	; 18084 <__flatcc_gen_sort@@Base+0x434>
   18050:	ldr	r3, [pc, #48]	; 18088 <__flatcc_gen_sort@@Base+0x438>
   18054:	ldr	r0, [pc, #48]	; 1808c <__flatcc_gen_sort@@Base+0x43c>
   18058:	mov	r2, r4
   1805c:	ldr	r1, [pc, #44]	; 18090 <__flatcc_gen_sort@@Base+0x440>
   18060:	str	r3, [sp]
   18064:	mov	r3, #141	; 0x8d
   18068:	ldr	r0, [r0]
   1806c:	bl	13fb0 <fprintf@plt>
   18070:	ldr	r3, [pc, #28]	; 18094 <__flatcc_gen_sort@@Base+0x444>
   18074:	mov	r2, #141	; 0x8d
   18078:	mov	r1, r4
   1807c:	ldr	r0, [pc, #20]	; 18098 <__flatcc_gen_sort@@Base+0x448>
   18080:	bl	14070 <__assert_fail@plt>
   18084:	andeq	pc, r2, r4, asr #27
   18088:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   1808c:	strheq	sl, [r5], -r0
   18090:	andeq	pc, r2, sp, lsl #28
   18094:	ldrdeq	r7, [r3], -r9
   18098:	andeq	r8, r3, pc, ror #2
   1809c:	push	{r0, r1, r2, lr}
   180a0:	ldr	r4, [pc, #48]	; 180d8 <__flatcc_gen_sort@@Base+0x488>
   180a4:	ldr	r3, [pc, #48]	; 180dc <__flatcc_gen_sort@@Base+0x48c>
   180a8:	ldr	r0, [pc, #48]	; 180e0 <__flatcc_gen_sort@@Base+0x490>
   180ac:	mov	r2, r4
   180b0:	ldr	r1, [pc, #44]	; 180e4 <__flatcc_gen_sort@@Base+0x494>
   180b4:	str	r3, [sp]
   180b8:	mov	r3, #96	; 0x60
   180bc:	ldr	r0, [r0]
   180c0:	bl	13fb0 <fprintf@plt>
   180c4:	ldr	r3, [pc, #28]	; 180e8 <__flatcc_gen_sort@@Base+0x498>
   180c8:	mov	r2, #96	; 0x60
   180cc:	mov	r1, r4
   180d0:	ldr	r0, [pc, #20]	; 180ec <__flatcc_gen_sort@@Base+0x49c>
   180d4:	bl	14070 <__assert_fail@plt>
   180d8:	andeq	pc, r2, r4, asr #27
   180dc:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   180e0:	strheq	sl, [r5], -r0
   180e4:	andeq	pc, r2, sp, lsl #28
   180e8:	andeq	r7, r3, sl, ror #27
   180ec:	andeq	r8, r3, pc, ror #2
   180f0:	push	{r0, r1, r2, lr}
   180f4:	ldr	r4, [pc, #48]	; 1812c <__flatcc_gen_sort@@Base+0x4dc>
   180f8:	ldr	r3, [pc, #48]	; 18130 <__flatcc_gen_sort@@Base+0x4e0>
   180fc:	ldr	r0, [pc, #48]	; 18134 <__flatcc_gen_sort@@Base+0x4e4>
   18100:	mov	r2, r4
   18104:	ldr	r1, [pc, #44]	; 18138 <__flatcc_gen_sort@@Base+0x4e8>
   18108:	str	r3, [sp]
   1810c:	mov	r3, #226	; 0xe2
   18110:	ldr	r0, [r0]
   18114:	bl	13fb0 <fprintf@plt>
   18118:	ldr	r3, [pc, #28]	; 1813c <__flatcc_gen_sort@@Base+0x4ec>
   1811c:	mov	r2, #226	; 0xe2
   18120:	mov	r1, r4
   18124:	ldr	r0, [pc, #20]	; 18140 <__flatcc_gen_sort@@Base+0x4f0>
   18128:	bl	14070 <__assert_fail@plt>
   1812c:	andeq	pc, r2, r4, asr #27
   18130:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   18134:	strheq	sl, [r5], -r0
   18138:	andeq	pc, r2, sp, lsl #28
   1813c:	strdeq	r7, [r3], -sp
   18140:	andeq	r8, r3, pc, ror #2
   18144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18148:	sub	sp, sp, #236	; 0xec
   1814c:	mov	r5, r1
   18150:	mov	r6, r0
   18154:	mov	r4, r2
   18158:	mov	r1, #0
   1815c:	mov	r2, #220	; 0xdc
   18160:	add	r0, sp, #12
   18164:	mov	r7, r3
   18168:	ldr	r8, [pc, #316]	; 182ac <__flatcc_gen_sort@@Base+0x65c>
   1816c:	bl	13fc8 <memset@plt>
   18170:	ldr	r9, [pc, #312]	; 182b0 <__flatcc_gen_sort@@Base+0x660>
   18174:	ldr	sl, [pc, #312]	; 182b4 <__flatcc_gen_sort@@Base+0x664>
   18178:	ldr	r5, [r5]
   1817c:	cmp	r5, #0
   18180:	bne	18190 <__flatcc_gen_sort@@Base+0x540>
   18184:	mov	r0, r4
   18188:	add	sp, sp, #236	; 0xec
   1818c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18190:	ldrh	r3, [r5, #72]	; 0x48
   18194:	tst	r3, #4
   18198:	bne	181e0 <__flatcc_gen_sort@@Base+0x590>
   1819c:	ldrh	r3, [r5, #24]
   181a0:	cmp	r3, #8
   181a4:	beq	18224 <__flatcc_gen_sort@@Base+0x5d4>
   181a8:	cmp	r3, #14
   181ac:	bne	18278 <__flatcc_gen_sort@@Base+0x628>
   181b0:	ldr	r1, [r5, #16]
   181b4:	ldrh	r3, [r1, #8]
   181b8:	cmp	r3, #1
   181bc:	ldr	r3, [sp, #272]	; 0x110
   181c0:	bne	181e8 <__flatcc_gen_sort@@Base+0x598>
   181c4:	mov	r2, r4
   181c8:	add	r1, r1, #20
   181cc:	str	r3, [sp]
   181d0:	mov	r0, r6
   181d4:	mov	r3, r7
   181d8:	bl	18144 <__flatcc_gen_sort@@Base+0x4f4>
   181dc:	mov	r4, r0
   181e0:	ldr	r5, [r5]
   181e4:	b	1817c <__flatcc_gen_sort@@Base+0x52c>
   181e8:	mov	r2, r7
   181ec:	mov	r1, r4
   181f0:	add	r0, r6, #204	; 0xcc
   181f4:	add	fp, r4, #1
   181f8:	bl	17fd0 <__flatcc_gen_sort@@Base+0x380>
   181fc:	add	r1, sp, #12
   18200:	ldr	r0, [r5, #16]
   18204:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18208:	mov	r3, r4
   1820c:	add	r2, sp, #12
   18210:	ldr	r1, [pc, #160]	; 182b8 <__flatcc_gen_sort@@Base+0x668>
   18214:	ldr	r0, [r6, #204]	; 0xcc
   18218:	bl	13fb0 <fprintf@plt>
   1821c:	mov	r4, fp
   18220:	b	181e0 <__flatcc_gen_sort@@Base+0x590>
   18224:	mov	r2, r7
   18228:	mov	r1, r4
   1822c:	ldr	r3, [sp, #272]	; 0x110
   18230:	add	r0, r6, #204	; 0xcc
   18234:	bl	17fd0 <__flatcc_gen_sort@@Base+0x380>
   18238:	ldr	r3, [r5, #16]
   1823c:	cmp	r3, #5
   18240:	sub	r3, r3, #1
   18244:	moveq	r2, r6
   18248:	movne	r2, r8
   1824c:	cmp	r3, #10
   18250:	bhi	18274 <__flatcc_gen_sort@@Base+0x624>
   18254:	add	r3, r9, r3, lsl #2
   18258:	mov	r1, sl
   1825c:	ldr	r0, [r6, #204]	; 0xcc
   18260:	str	r4, [sp]
   18264:	add	fp, r4, #1
   18268:	ldr	r3, [r3, #68]	; 0x44
   1826c:	bl	13fb0 <fprintf@plt>
   18270:	b	1821c <__flatcc_gen_sort@@Base+0x5cc>
   18274:	bl	18048 <__flatcc_gen_sort@@Base+0x3f8>
   18278:	ldr	r3, [pc, #60]	; 182bc <__flatcc_gen_sort@@Base+0x66c>
   1827c:	ldr	r0, [pc, #60]	; 182c0 <__flatcc_gen_sort@@Base+0x670>
   18280:	ldr	r2, [pc, #60]	; 182c4 <__flatcc_gen_sort@@Base+0x674>
   18284:	str	r3, [sp]
   18288:	movw	r3, #850	; 0x352
   1828c:	ldr	r1, [pc, #52]	; 182c8 <__flatcc_gen_sort@@Base+0x678>
   18290:	ldr	r0, [r0]
   18294:	bl	13fb0 <fprintf@plt>
   18298:	ldr	r3, [pc, #44]	; 182cc <__flatcc_gen_sort@@Base+0x67c>
   1829c:	movw	r2, #850	; 0x352
   182a0:	ldr	r1, [pc, #28]	; 182c4 <__flatcc_gen_sort@@Base+0x674>
   182a4:	ldr	r0, [pc, #36]	; 182d0 <__flatcc_gen_sort@@Base+0x680>
   182a8:	bl	14070 <__assert_fail@plt>
   182ac:	andeq	r1, r3, fp, lsr #2
   182b0:	andeq	r7, r3, r8, asr #27
   182b4:	muleq	r3, pc, r0	; <UNPREDICTABLE>
   182b8:	muleq	r3, r1, r0
   182bc:	andeq	r8, r3, r8, lsr #1
   182c0:	strheq	sl, [r5], -r0
   182c4:	muleq	r3, pc, pc	; <UNPREDICTABLE>
   182c8:	andeq	pc, r2, sp, lsl #28
   182cc:	andeq	r7, r3, r8, lsr lr
   182d0:	andeq	r8, r3, pc, ror #2
   182d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182d8:	sub	sp, sp, #260	; 0x104
   182dc:	mov	r8, r3
   182e0:	mov	r9, r0
   182e4:	mov	r4, r1
   182e8:	add	r0, sp, #36	; 0x24
   182ec:	mov	r1, #0
   182f0:	str	r2, [sp, #24]
   182f4:	mov	r2, #220	; 0xdc
   182f8:	bl	13fc8 <memset@plt>
   182fc:	cmp	r8, #1
   18300:	ldreq	r3, [pc, #916]	; 1869c <__flatcc_gen_sort@@Base+0xa4c>
   18304:	streq	r3, [sp, #20]
   18308:	beq	18320 <__flatcc_gen_sort@@Base+0x6d0>
   1830c:	ldr	r3, [pc, #908]	; 186a0 <__flatcc_gen_sort@@Base+0xa50>
   18310:	cmp	r8, #2
   18314:	ldr	r2, [pc, #904]	; 186a4 <__flatcc_gen_sort@@Base+0xa54>
   18318:	movne	r2, r3
   1831c:	str	r2, [sp, #20]
   18320:	mov	r6, #0
   18324:	ldr	r5, [r4]
   18328:	mov	r4, r6
   1832c:	cmp	r5, #0
   18330:	bne	18358 <__flatcc_gen_sort@@Base+0x708>
   18334:	ldr	r3, [sp, #24]
   18338:	cmp	r3, #0
   1833c:	ble	1834c <__flatcc_gen_sort@@Base+0x6fc>
   18340:	ldr	r0, [pc, #864]	; 186a8 <__flatcc_gen_sort@@Base+0xa58>
   18344:	ldr	r1, [r9, #204]	; 0xcc
   18348:	bl	1404c <fputs@plt>
   1834c:	mov	r0, r4
   18350:	add	sp, sp, #260	; 0x104
   18354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18358:	ldr	r3, [r5, #4]
   1835c:	cmp	r4, #0
   18360:	ldr	sl, [r3]
   18364:	ldr	r7, [r3, #4]
   18368:	ble	18380 <__flatcc_gen_sort@@Base+0x730>
   1836c:	tst	r4, #3
   18370:	ldreq	r0, [pc, #816]	; 186a8 <__flatcc_gen_sort@@Base+0xa58>
   18374:	ldrne	r0, [pc, #816]	; 186ac <__flatcc_gen_sort@@Base+0xa5c>
   18378:	ldr	r1, [r9, #204]	; 0xcc
   1837c:	bl	1404c <fputs@plt>
   18380:	ldrh	r3, [r5, #24]
   18384:	cmp	r3, #8
   18388:	beq	18588 <__flatcc_gen_sort@@Base+0x938>
   1838c:	cmp	r3, #14
   18390:	bne	18668 <__flatcc_gen_sort@@Base+0xa18>
   18394:	add	r1, sp, #36	; 0x24
   18398:	ldr	r0, [r5, #16]
   1839c:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   183a0:	ldr	r3, [r5, #16]
   183a4:	ldr	r0, [r9, #204]	; 0xcc
   183a8:	ldrh	r3, [r3, #8]
   183ac:	cmp	r3, #1
   183b0:	ldrh	r3, [r5, #72]	; 0x48
   183b4:	bne	184a4 <__flatcc_gen_sort@@Base+0x854>
   183b8:	tst	r3, #4
   183bc:	beq	183f0 <__flatcc_gen_sort@@Base+0x7a0>
   183c0:	mov	r3, r6
   183c4:	mov	r2, r6
   183c8:	ldr	r1, [pc, #736]	; 186b0 <__flatcc_gen_sort@@Base+0xa60>
   183cc:	bl	13fb0 <fprintf@plt>
   183d0:	ldr	r3, [r5, #16]
   183d4:	add	r6, r6, #1
   183d8:	ldr	r0, [r3, #20]
   183dc:	bl	17f70 <__flatcc_gen_sort@@Base+0x320>
   183e0:	add	fp, r4, r0
   183e4:	mov	r4, fp
   183e8:	ldr	r5, [r5]
   183ec:	b	1832c <__flatcc_gen_sort@@Base+0x6dc>
   183f0:	ldr	r3, [sp, #296]	; 0x128
   183f4:	cmp	r3, #0
   183f8:	beq	18420 <__flatcc_gen_sort@@Base+0x7d0>
   183fc:	add	r2, sp, #36	; 0x24
   18400:	ldr	r1, [pc, #684]	; 186b4 <__flatcc_gen_sort@@Base+0xa64>
   18404:	add	fp, r4, #1
   18408:	stm	sp, {r7, sl}
   1840c:	str	r7, [sp, #8]
   18410:	str	sl, [sp, #12]
   18414:	ldr	r3, [sp, #20]
   18418:	bl	13fb0 <fprintf@plt>
   1841c:	b	183e4 <__flatcc_gen_sort@@Base+0x794>
   18420:	add	r2, sp, #36	; 0x24
   18424:	ldr	r1, [pc, #652]	; 186b8 <__flatcc_gen_sort@@Base+0xa68>
   18428:	stm	sp, {r7, sl}
   1842c:	add	sl, r9, #204	; 0xcc
   18430:	ldr	r3, [sp, #20]
   18434:	bl	13fb0 <fprintf@plt>
   18438:	ldr	r3, [r5, #16]
   1843c:	ldr	r0, [r3, #20]
   18440:	bl	17f70 <__flatcc_gen_sort@@Base+0x320>
   18444:	ldr	r7, [sp, #296]	; 0x128
   18448:	mov	fp, r0
   1844c:	add	r3, r7, r4
   18450:	cmp	fp, r7
   18454:	str	r3, [sp, #28]
   18458:	bgt	18478 <__flatcc_gen_sort@@Base+0x828>
   1845c:	mov	r0, #41	; 0x29
   18460:	ldr	r1, [r9, #204]	; 0xcc
   18464:	cmp	fp, #0
   18468:	addge	fp, r4, fp
   1846c:	addlt	fp, r4, #0
   18470:	bl	14010 <fputc@plt>
   18474:	b	183e4 <__flatcc_gen_sort@@Base+0x794>
   18478:	mov	r1, r7
   1847c:	mov	r0, sl
   18480:	ldr	r2, [sp, #24]
   18484:	mov	r3, #0
   18488:	add	r7, r7, #1
   1848c:	bl	17fd0 <__flatcc_gen_sort@@Base+0x380>
   18490:	ldr	r1, [pc, #548]	; 186bc <__flatcc_gen_sort@@Base+0xa6c>
   18494:	ldr	r2, [sp, #28]
   18498:	ldr	r0, [r9, #204]	; 0xcc
   1849c:	bl	13fb0 <fprintf@plt>
   184a0:	b	1844c <__flatcc_gen_sort@@Base+0x7fc>
   184a4:	tst	r3, #4
   184a8:	add	fp, r4, #1
   184ac:	beq	184c8 <__flatcc_gen_sort@@Base+0x878>
   184b0:	mov	r2, r6
   184b4:	add	r4, r6, #1
   184b8:	ldr	r1, [pc, #512]	; 186c0 <__flatcc_gen_sort@@Base+0xa70>
   184bc:	bl	13fb0 <fprintf@plt>
   184c0:	mov	r6, r4
   184c4:	b	183e4 <__flatcc_gen_sort@@Base+0x794>
   184c8:	ldrd	r2, [r5, #88]	; 0x58
   184cc:	cmp	r3, #0
   184d0:	cmpeq	r2, #1
   184d4:	beq	184e8 <__flatcc_gen_sort@@Base+0x898>
   184d8:	cmp	r8, #1
   184dc:	beq	18508 <__flatcc_gen_sort@@Base+0x8b8>
   184e0:	cmp	r8, #2
   184e4:	beq	1854c <__flatcc_gen_sort@@Base+0x8fc>
   184e8:	ldr	r3, [sp, #296]	; 0x128
   184ec:	cmp	r3, #0
   184f0:	beq	18650 <__flatcc_gen_sort@@Base+0xa00>
   184f4:	mov	r3, sl
   184f8:	mov	r2, r7
   184fc:	ldr	r1, [pc, #448]	; 186c4 <__flatcc_gen_sort@@Base+0xa74>
   18500:	stm	sp, {r7, sl}
   18504:	b	18544 <__flatcc_gen_sort@@Base+0x8f4>
   18508:	ldr	r3, [sp, #296]	; 0x128
   1850c:	cmp	r3, #0
   18510:	beq	18530 <__flatcc_gen_sort@@Base+0x8e0>
   18514:	ldr	r1, [pc, #428]	; 186c8 <__flatcc_gen_sort@@Base+0xa78>
   18518:	mov	r3, r7
   1851c:	add	r2, sp, #36	; 0x24
   18520:	str	sl, [sp]
   18524:	stmib	sp, {r7, sl}
   18528:	bl	13fb0 <fprintf@plt>
   1852c:	b	183e4 <__flatcc_gen_sort@@Base+0x794>
   18530:	ldr	r1, [pc, #404]	; 186cc <__flatcc_gen_sort@@Base+0xa7c>
   18534:	mov	r3, r7
   18538:	add	r2, sp, #36	; 0x24
   1853c:	str	sl, [sp]
   18540:	str	r4, [sp, #4]
   18544:	bl	13fb0 <fprintf@plt>
   18548:	b	183e4 <__flatcc_gen_sort@@Base+0x794>
   1854c:	ldr	r3, [sp, #296]	; 0x128
   18550:	cmp	r3, #0
   18554:	beq	18570 <__flatcc_gen_sort@@Base+0x920>
   18558:	mov	r3, r7
   1855c:	add	r2, sp, #36	; 0x24
   18560:	ldr	r1, [pc, #360]	; 186d0 <__flatcc_gen_sort@@Base+0xa80>
   18564:	str	sl, [sp]
   18568:	stmib	sp, {r7, sl}
   1856c:	b	18528 <__flatcc_gen_sort@@Base+0x8d8>
   18570:	mov	r3, r7
   18574:	add	r2, sp, #36	; 0x24
   18578:	ldr	r1, [pc, #340]	; 186d4 <__flatcc_gen_sort@@Base+0xa84>
   1857c:	str	sl, [sp]
   18580:	str	r4, [sp, #4]
   18584:	b	18544 <__flatcc_gen_sort@@Base+0x8f4>
   18588:	ldr	r3, [r5, #16]
   1858c:	sub	r1, r3, #1
   18590:	cmp	r1, #10
   18594:	bhi	185fc <__flatcc_gen_sort@@Base+0x9ac>
   18598:	ldrh	r2, [r5, #72]	; 0x48
   1859c:	add	fp, r4, #1
   185a0:	ldr	r0, [r9, #204]	; 0xcc
   185a4:	tst	r2, #4
   185a8:	bne	184b0 <__flatcc_gen_sort@@Base+0x860>
   185ac:	ldrd	r2, [r5, #88]	; 0x58
   185b0:	cmp	r3, #0
   185b4:	cmpeq	r2, #1
   185b8:	beq	184e8 <__flatcc_gen_sort@@Base+0x898>
   185bc:	ldr	r2, [pc, #276]	; 186d8 <__flatcc_gen_sort@@Base+0xa88>
   185c0:	cmp	r8, #1
   185c4:	add	r3, r2, r1, lsl #2
   185c8:	ldr	r3, [r3, #136]	; 0x88
   185cc:	beq	18600 <__flatcc_gen_sort@@Base+0x9b0>
   185d0:	cmp	r8, #2
   185d4:	bne	184e8 <__flatcc_gen_sort@@Base+0x898>
   185d8:	ldr	r2, [sp, #296]	; 0x128
   185dc:	cmp	r2, #0
   185e0:	beq	1863c <__flatcc_gen_sort@@Base+0x9ec>
   185e4:	mov	r2, r9
   185e8:	ldr	r1, [pc, #236]	; 186dc <__flatcc_gen_sort@@Base+0xa8c>
   185ec:	stm	sp, {r7, sl}
   185f0:	str	r7, [sp, #8]
   185f4:	str	sl, [sp, #12]
   185f8:	b	18620 <__flatcc_gen_sort@@Base+0x9d0>
   185fc:	bl	1809c <__flatcc_gen_sort@@Base+0x44c>
   18600:	ldr	r2, [sp, #296]	; 0x128
   18604:	cmp	r2, #0
   18608:	beq	18628 <__flatcc_gen_sort@@Base+0x9d8>
   1860c:	ldr	r1, [pc, #204]	; 186e0 <__flatcc_gen_sort@@Base+0xa90>
   18610:	mov	r2, r9
   18614:	stm	sp, {r7, sl}
   18618:	str	r7, [sp, #8]
   1861c:	str	sl, [sp, #12]
   18620:	bl	13fb0 <fprintf@plt>
   18624:	b	183e4 <__flatcc_gen_sort@@Base+0x794>
   18628:	mov	r2, r9
   1862c:	ldr	r1, [pc, #176]	; 186e4 <__flatcc_gen_sort@@Base+0xa94>
   18630:	stm	sp, {r7, sl}
   18634:	str	r4, [sp, #8]
   18638:	b	18528 <__flatcc_gen_sort@@Base+0x8d8>
   1863c:	mov	r2, r9
   18640:	ldr	r1, [pc, #160]	; 186e8 <__flatcc_gen_sort@@Base+0xa98>
   18644:	stm	sp, {r7, sl}
   18648:	str	r4, [sp, #8]
   1864c:	b	18528 <__flatcc_gen_sort@@Base+0x8d8>
   18650:	mov	r3, sl
   18654:	mov	r2, r7
   18658:	ldr	r1, [pc, #140]	; 186ec <__flatcc_gen_sort@@Base+0xa9c>
   1865c:	str	r4, [sp]
   18660:	bl	13fb0 <fprintf@plt>
   18664:	b	183e4 <__flatcc_gen_sort@@Base+0x794>
   18668:	ldr	r3, [pc, #128]	; 186f0 <__flatcc_gen_sort@@Base+0xaa0>
   1866c:	ldr	r0, [pc, #128]	; 186f4 <__flatcc_gen_sort@@Base+0xaa4>
   18670:	ldr	r2, [pc, #128]	; 186f8 <__flatcc_gen_sort@@Base+0xaa8>
   18674:	str	r3, [sp]
   18678:	movw	r3, #993	; 0x3e1
   1867c:	ldr	r1, [pc, #120]	; 186fc <__flatcc_gen_sort@@Base+0xaac>
   18680:	ldr	r0, [r0]
   18684:	bl	13fb0 <fprintf@plt>
   18688:	ldr	r3, [pc, #112]	; 18700 <__flatcc_gen_sort@@Base+0xab0>
   1868c:	movw	r2, #993	; 0x3e1
   18690:	ldr	r1, [pc, #96]	; 186f8 <__flatcc_gen_sort@@Base+0xaa8>
   18694:	ldr	r0, [pc, #104]	; 18704 <__flatcc_gen_sort@@Base+0xab4>
   18698:	bl	14070 <__assert_fail@plt>
   1869c:	ldrdeq	r8, [r3], -sp
   186a0:	andeq	r1, r3, fp, lsr #2
   186a4:	ldrdeq	r8, [r3], -r6
   186a8:	andeq	r8, r3, r6, ror #1
   186ac:	andeq	r8, r3, fp, ror #1
   186b0:	andeq	r8, r3, lr, ror #1
   186b4:	andeq	r8, r3, r7, lsr #2
   186b8:	andeq	r8, r3, r6, asr #2
   186bc:	andeq	r8, r3, lr, lsl #3
   186c0:	andeq	r8, r3, fp, asr r1
   186c4:	andeq	r8, r3, r1, ror r1
   186c8:	muleq	r3, r4, r1
   186cc:			; <UNDEFINED> instruction: 0x000381bb
   186d0:	ldrdeq	r8, [r3], -lr
   186d4:	andeq	r8, r3, r3, lsl #4
   186d8:	andeq	r7, r3, r8, asr #27
   186dc:	ldrdeq	r8, [r3], -ip
   186e0:	muleq	r3, r2, r1
   186e4:			; <UNDEFINED> instruction: 0x000381b9
   186e8:	andeq	r8, r3, r1, lsl #4
   186ec:	andeq	r8, r3, r4, lsl #3
   186f0:	andeq	r8, r3, r2, lsr #4
   186f4:	strheq	sl, [r5], -r0
   186f8:	muleq	r3, pc, pc	; <UNPREDICTABLE>
   186fc:	andeq	pc, r2, sp, lsl #28
   18700:	andeq	r7, r3, ip, ror lr
   18704:	andeq	r8, r3, pc, ror #2
   18708:	push	{r0, r1, r2, r4, r5, lr}
   1870c:	mov	r3, r0
   18710:	mov	r0, r2
   18714:	ldrh	r2, [r1, #8]
   18718:	sub	r2, r2, #3
   1871c:	cmp	r2, #3
   18720:	ldrls	pc, [pc, r2, lsl #2]
   18724:	b	187ec <__flatcc_gen_sort@@Base+0xb9c>
   18728:	andeq	r8, r1, r0, asr #15
   1872c:	andeq	r8, r1, ip, ror #14
   18730:	andeq	r8, r1, r8, lsr r7
   18734:	muleq	r1, r4, r7
   18738:	sub	r3, r3, #1
   1873c:	cmp	r3, #8
   18740:	bhi	18768 <__flatcc_gen_sort@@Base+0xb18>
   18744:	ldr	r2, [pc, #212]	; 18820 <__flatcc_gen_sort@@Base+0xbd0>
   18748:	ldrd	r4, [r1]
   1874c:	ldr	r1, [pc, #208]	; 18824 <__flatcc_gen_sort@@Base+0xbd4>
   18750:	add	r3, r2, r3, lsl #2
   18754:	ldr	r2, [r3, #212]	; 0xd4
   18758:	strd	r4, [sp]
   1875c:	bl	1401c <sprintf@plt>
   18760:	add	sp, sp, #12
   18764:	pop	{r4, r5, pc}
   18768:	bl	180f0 <__flatcc_gen_sort@@Base+0x4a0>
   1876c:	sub	r3, r3, #1
   18770:	cmp	r3, #8
   18774:	bhi	18768 <__flatcc_gen_sort@@Base+0xb18>
   18778:	ldr	r2, [pc, #160]	; 18820 <__flatcc_gen_sort@@Base+0xbd0>
   1877c:	ldrd	r4, [r1]
   18780:	ldr	r1, [pc, #160]	; 18828 <__flatcc_gen_sort@@Base+0xbd8>
   18784:	add	r3, r2, r3, lsl #2
   18788:	strd	r4, [sp]
   1878c:	ldr	r2, [r3, #212]	; 0xd4
   18790:	b	1875c <__flatcc_gen_sort@@Base+0xb0c>
   18794:	sub	r3, r3, #1
   18798:	cmp	r3, #8
   1879c:	bhi	18768 <__flatcc_gen_sort@@Base+0xb18>
   187a0:	ldr	r2, [pc, #120]	; 18820 <__flatcc_gen_sort@@Base+0xbd0>
   187a4:	add	r2, r2, r3, lsl #2
   187a8:	ldrb	r3, [r1]
   187ac:	ldr	r1, [pc, #120]	; 1882c <__flatcc_gen_sort@@Base+0xbdc>
   187b0:	ldr	r2, [r2, #212]	; 0xd4
   187b4:	add	sp, sp, #12
   187b8:	pop	{r4, r5, lr}
   187bc:	b	1401c <sprintf@plt>
   187c0:	cmp	r3, #11
   187c4:	ldrdne	r2, [r1]
   187c8:	vldreq	d7, [r1]
   187cc:	ldrne	r1, [pc, #92]	; 18830 <__flatcc_gen_sort@@Base+0xbe0>
   187d0:	ldreq	r1, [pc, #92]	; 18834 <__flatcc_gen_sort@@Base+0xbe4>
   187d4:	vcvteq.f32.f64	s14, d7
   187d8:	vcvteq.f64.f32	d7, s14
   187dc:	vmoveq	r2, r3, d7
   187e0:	add	sp, sp, #12
   187e4:	pop	{r4, r5, lr}
   187e8:	b	1401c <sprintf@plt>
   187ec:	ldr	r3, [pc, #68]	; 18838 <__flatcc_gen_sort@@Base+0xbe8>
   187f0:	ldr	r0, [pc, #68]	; 1883c <__flatcc_gen_sort@@Base+0xbec>
   187f4:	ldr	r2, [pc, #68]	; 18840 <__flatcc_gen_sort@@Base+0xbf0>
   187f8:	str	r3, [sp]
   187fc:	mov	r3, #260	; 0x104
   18800:	ldr	r1, [pc, #60]	; 18844 <__flatcc_gen_sort@@Base+0xbf4>
   18804:	ldr	r0, [r0]
   18808:	bl	13fb0 <fprintf@plt>
   1880c:	ldr	r3, [pc, #52]	; 18848 <__flatcc_gen_sort@@Base+0xbf8>
   18810:	mov	r2, #260	; 0x104
   18814:	ldr	r1, [pc, #36]	; 18840 <__flatcc_gen_sort@@Base+0xbf0>
   18818:	ldr	r0, [pc, #44]	; 1884c <__flatcc_gen_sort@@Base+0xbfc>
   1881c:	bl	14070 <__assert_fail@plt>
   18820:	andeq	r7, r3, r8, asr #27
   18824:	andeq	pc, r2, pc, asr #28
   18828:	andeq	pc, r2, r8, asr lr	; <UNPREDICTABLE>
   1882c:	andeq	pc, r2, r1, ror #28
   18830:	andeq	pc, r2, ip, ror #28
   18834:	andeq	pc, r2, r8, ror #28
   18838:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   1883c:	strheq	sl, [r5], -r0
   18840:	andeq	pc, r2, r4, asr #27
   18844:	andeq	pc, r2, sp, lsl #28
   18848:	andeq	r7, r3, r0, asr #29
   1884c:	andeq	r8, r3, pc, ror #2
   18850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18854:	sub	sp, sp, #612	; 0x264
   18858:	mov	r5, r1
   1885c:	add	r7, sp, #168	; 0xa8
   18860:	mov	r2, #220	; 0xdc
   18864:	mov	r1, #0
   18868:	mov	r4, r0
   1886c:	add	r6, sp, #388	; 0x184
   18870:	mov	r0, r7
   18874:	bl	13fc8 <memset@plt>
   18878:	mov	r2, #220	; 0xdc
   1887c:	mov	r1, #0
   18880:	mov	r0, r6
   18884:	bl	13fc8 <memset@plt>
   18888:	mov	r0, r5
   1888c:	mov	r1, r7
   18890:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18894:	ldr	r5, [r5, #20]
   18898:	cmp	r5, #0
   1889c:	bne	188b8 <__flatcc_gen_sort@@Base+0xc68>
   188a0:	ldr	r1, [r4, #204]	; 0xcc
   188a4:	mov	r0, #10
   188a8:	bl	14010 <fputc@plt>
   188ac:	mov	r0, r5
   188b0:	add	sp, sp, #612	; 0x264
   188b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   188b8:	ldr	r3, [r5, #4]
   188bc:	ldr	r9, [r3]
   188c0:	ldr	r8, [r3, #4]
   188c4:	ldrh	r3, [r5, #72]	; 0x48
   188c8:	tst	r3, #4
   188cc:	beq	188f0 <__flatcc_gen_sort@@Base+0xca0>
   188d0:	mov	r3, r8
   188d4:	mov	r2, r7
   188d8:	ldr	r1, [pc, #1316]	; 18e04 <__flatcc_gen_sort@@Base+0x11b4>
   188dc:	ldr	r0, [r4, #204]	; 0xcc
   188e0:	str	r9, [sp]
   188e4:	bl	13fb0 <fprintf@plt>
   188e8:	ldr	r5, [r5]
   188ec:	b	18898 <__flatcc_gen_sort@@Base+0xc48>
   188f0:	ldrh	r3, [r5, #24]
   188f4:	sub	r3, r3, #7
   188f8:	cmp	r3, #8
   188fc:	ldrls	pc, [pc, r3, lsl #2]
   18900:	b	18dd8 <__flatcc_gen_sort@@Base+0x1188>
   18904:	andeq	r8, r1, r4, asr #19
   18908:	andeq	r8, r1, r8, lsr #18
   1890c:	andeq	r8, r1, ip, lsl #22
   18910:	andeq	r8, r1, r4, ror #21
   18914:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18918:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1891c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18920:	andeq	r8, r1, ip, lsr #22
   18924:	muleq	r1, ip, ip
   18928:	ldr	r0, [r5, #16]
   1892c:	ldr	sl, [pc, #1236]	; 18e08 <__flatcc_gen_sort@@Base+0x11b8>
   18930:	cmp	r0, #5
   18934:	sub	r3, r0, #1
   18938:	moveq	sl, r4
   1893c:	cmp	r3, #10
   18940:	bhi	189c0 <__flatcc_gen_sort@@Base+0xd70>
   18944:	ldr	r2, [pc, #1216]	; 18e0c <__flatcc_gen_sort@@Base+0x11bc>
   18948:	add	fp, sp, #68	; 0x44
   1894c:	add	r1, r5, #48	; 0x30
   18950:	add	r2, r2, r3, lsl #2
   18954:	ldr	r3, [r2, #68]	; 0x44
   18958:	str	r3, [sp, #60]	; 0x3c
   1895c:	ldr	r3, [r2, #136]	; 0x88
   18960:	mov	r2, fp
   18964:	str	r3, [sp, #56]	; 0x38
   18968:	bl	18708 <__flatcc_gen_sort@@Base+0xab8>
   1896c:	str	fp, [sp, #52]	; 0x34
   18970:	ldrh	r2, [r5, #74]	; 0x4a
   18974:	ldr	r3, [sp, #60]	; 0x3c
   18978:	str	r2, [sp, #48]	; 0x30
   1897c:	ldrd	r0, [r5, #88]	; 0x58
   18980:	str	r4, [sp, #8]
   18984:	str	r3, [sp, #36]	; 0x24
   18988:	ldr	r3, [sp, #56]	; 0x38
   1898c:	str	r7, [sp, #12]
   18990:	strd	r8, [sp, #16]
   18994:	str	r4, [sp, #24]
   18998:	str	sl, [sp, #32]
   1899c:	strd	r0, [sp, #40]	; 0x28
   189a0:	ldr	r0, [r4, #204]	; 0xcc
   189a4:	str	r3, [sp, #28]
   189a8:	ldrd	r2, [r5, #96]	; 0x60
   189ac:	ldr	r1, [pc, #1116]	; 18e10 <__flatcc_gen_sort@@Base+0x11c0>
   189b0:	strd	r2, [sp]
   189b4:	mov	r2, r4
   189b8:	bl	13fb0 <fprintf@plt>
   189bc:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   189c0:	bl	18048 <__flatcc_gen_sort@@Base+0x3f8>
   189c4:	ldr	r3, [r5, #16]
   189c8:	ldr	r1, [pc, #1080]	; 18e08 <__flatcc_gen_sort@@Base+0x11b8>
   189cc:	cmp	r3, #5
   189d0:	sub	r3, r3, #1
   189d4:	moveq	r1, r4
   189d8:	cmp	r3, #10
   189dc:	bhi	189c0 <__flatcc_gen_sort@@Base+0xd70>
   189e0:	ldr	r2, [pc, #1060]	; 18e0c <__flatcc_gen_sort@@Base+0x11bc>
   189e4:	ldr	r0, [r4, #204]	; 0xcc
   189e8:	str	r4, [sp, #8]
   189ec:	str	r7, [sp, #12]
   189f0:	add	r3, r2, r3, lsl #2
   189f4:	strd	r8, [sp, #16]
   189f8:	str	r4, [sp, #24]
   189fc:	ldr	r2, [r3, #68]	; 0x44
   18a00:	str	r1, [sp, #32]
   18a04:	ldr	r3, [r3, #136]	; 0x88
   18a08:	ldr	r1, [pc, #1028]	; 18e14 <__flatcc_gen_sort@@Base+0x11c4>
   18a0c:	str	r3, [sp, #28]
   18a10:	str	r2, [sp, #36]	; 0x24
   18a14:	ldrd	r2, [r5, #96]	; 0x60
   18a18:	strd	r2, [sp]
   18a1c:	mov	r2, r4
   18a20:	bl	13fb0 <fprintf@plt>
   18a24:	ldr	r0, [r5, #104]	; 0x68
   18a28:	cmp	r0, #0
   18a2c:	beq	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18a30:	ldrh	r3, [r0, #8]
   18a34:	cmp	r3, #0
   18a38:	beq	18a78 <__flatcc_gen_sort@@Base+0xe28>
   18a3c:	cmp	r3, #1
   18a40:	beq	18aa8 <__flatcc_gen_sort@@Base+0xe58>
   18a44:	ldr	r3, [pc, #972]	; 18e18 <__flatcc_gen_sort@@Base+0x11c8>
   18a48:	ldr	r0, [pc, #972]	; 18e1c <__flatcc_gen_sort@@Base+0x11cc>
   18a4c:	ldr	r2, [pc, #972]	; 18e20 <__flatcc_gen_sort@@Base+0x11d0>
   18a50:	str	r3, [sp]
   18a54:	movw	r3, #1430	; 0x596
   18a58:	ldr	r1, [pc, #964]	; 18e24 <__flatcc_gen_sort@@Base+0x11d4>
   18a5c:	ldr	r0, [r0]
   18a60:	bl	13fb0 <fprintf@plt>
   18a64:	ldr	r3, [pc, #956]	; 18e28 <__flatcc_gen_sort@@Base+0x11d8>
   18a68:	movw	r2, #1430	; 0x596
   18a6c:	ldr	r1, [pc, #940]	; 18e20 <__flatcc_gen_sort@@Base+0x11d0>
   18a70:	ldr	r0, [pc, #948]	; 18e2c <__flatcc_gen_sort@@Base+0x11dc>
   18a74:	bl	14070 <__assert_fail@plt>
   18a78:	mov	r1, r6
   18a7c:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18a80:	mov	r3, r4
   18a84:	mov	r2, r4
   18a88:	ldr	r1, [pc, #928]	; 18e30 <__flatcc_gen_sort@@Base+0x11e0>
   18a8c:	ldr	r0, [r4, #204]	; 0xcc
   18a90:	stm	sp, {r7, r8, r9}
   18a94:	str	r6, [sp, #12]
   18a98:	str	r6, [sp, #16]
   18a9c:	str	r6, [sp, #20]
   18aa0:	bl	13fb0 <fprintf@plt>
   18aa4:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18aa8:	mov	r1, r6
   18aac:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18ab0:	ldr	r0, [r4, #204]	; 0xcc
   18ab4:	mov	r2, r4
   18ab8:	str	r6, [sp, #20]
   18abc:	str	r6, [sp, #24]
   18ac0:	ldr	r3, [r5, #104]	; 0x68
   18ac4:	ldr	r1, [pc, #872]	; 18e34 <__flatcc_gen_sort@@Base+0x11e4>
   18ac8:	ldrh	r3, [r3, #104]	; 0x68
   18acc:	stm	sp, {r7, r8, r9}
   18ad0:	str	r6, [sp, #12]
   18ad4:	str	r3, [sp, #16]
   18ad8:	mov	r3, r4
   18adc:	bl	13fb0 <fprintf@plt>
   18ae0:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18ae4:	str	r4, [sp, #8]
   18ae8:	str	r7, [sp, #12]
   18aec:	strd	r8, [sp, #16]
   18af0:	ldrd	r2, [r5, #96]	; 0x60
   18af4:	ldr	r1, [pc, #828]	; 18e38 <__flatcc_gen_sort@@Base+0x11e8>
   18af8:	strd	r2, [sp]
   18afc:	mov	r2, r4
   18b00:	ldr	r0, [r4, #204]	; 0xcc
   18b04:	bl	13fb0 <fprintf@plt>
   18b08:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18b0c:	str	r4, [sp, #8]
   18b10:	str	r7, [sp, #12]
   18b14:	strd	r8, [sp, #16]
   18b18:	ldrd	r2, [r5, #96]	; 0x60
   18b1c:	ldr	r1, [pc, #792]	; 18e3c <__flatcc_gen_sort@@Base+0x11ec>
   18b20:	strd	r2, [sp]
   18b24:	mov	r2, r4
   18b28:	b	18b00 <__flatcc_gen_sort@@Base+0xeb0>
   18b2c:	mov	r1, r6
   18b30:	ldr	r0, [r5, #16]
   18b34:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18b38:	ldr	r3, [r5, #16]
   18b3c:	ldrh	r2, [r3, #8]
   18b40:	cmp	r2, #4
   18b44:	ldrls	pc, [pc, r2, lsl #2]
   18b48:	b	18c70 <__flatcc_gen_sort@@Base+0x1020>
   18b4c:	muleq	r1, ip, fp
   18b50:	andeq	r8, r1, r0, ror #22
   18b54:	andeq	r8, r1, r0, ror ip
   18b58:	andeq	r8, r1, r8, asr #23
   18b5c:	andeq	r8, r1, r0, lsr #24
   18b60:	ldrh	r3, [r5, #74]	; 0x4a
   18b64:	ldr	r0, [r4, #204]	; 0xcc
   18b68:	ldr	r1, [pc, #720]	; 18e40 <__flatcc_gen_sort@@Base+0x11f0>
   18b6c:	str	r3, [sp, #40]	; 0x28
   18b70:	ldrd	r2, [r5, #88]	; 0x58
   18b74:	str	r4, [sp, #8]
   18b78:	str	r7, [sp, #12]
   18b7c:	strd	r8, [sp, #16]
   18b80:	str	r6, [sp, #24]
   18b84:	strd	r2, [sp, #32]
   18b88:	ldrd	r2, [r5, #96]	; 0x60
   18b8c:	strd	r2, [sp]
   18b90:	mov	r2, r4
   18b94:	bl	13fb0 <fprintf@plt>
   18b98:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18b9c:	str	r4, [sp, #8]
   18ba0:	str	r7, [sp, #12]
   18ba4:	strd	r8, [sp, #16]
   18ba8:	str	r6, [sp, #24]
   18bac:	ldrd	r2, [r5, #96]	; 0x60
   18bb0:	ldr	r1, [pc, #652]	; 18e44 <__flatcc_gen_sort@@Base+0x11f4>
   18bb4:	strd	r2, [sp]
   18bb8:	mov	r2, r4
   18bbc:	ldr	r0, [r4, #204]	; 0xcc
   18bc0:	bl	13fb0 <fprintf@plt>
   18bc4:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18bc8:	add	sl, sp, #68	; 0x44
   18bcc:	add	r1, r5, #48	; 0x30
   18bd0:	ldr	r0, [r3, #40]	; 0x28
   18bd4:	mov	r2, sl
   18bd8:	bl	18708 <__flatcc_gen_sort@@Base+0xab8>
   18bdc:	ldr	r0, [r4, #204]	; 0xcc
   18be0:	str	sl, [sp, #44]	; 0x2c
   18be4:	ldrh	r3, [r5, #74]	; 0x4a
   18be8:	ldr	r1, [pc, #600]	; 18e48 <__flatcc_gen_sort@@Base+0x11f8>
   18bec:	str	r3, [sp, #40]	; 0x28
   18bf0:	ldrd	r2, [r5, #88]	; 0x58
   18bf4:	str	r4, [sp, #8]
   18bf8:	str	r7, [sp, #12]
   18bfc:	strd	r8, [sp, #16]
   18c00:	str	r6, [sp, #24]
   18c04:	str	r6, [sp, #28]
   18c08:	strd	r2, [sp, #32]
   18c0c:	ldrd	r2, [r5, #96]	; 0x60
   18c10:	strd	r2, [sp]
   18c14:	mov	r2, r4
   18c18:	bl	13fb0 <fprintf@plt>
   18c1c:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18c20:	ldr	r0, [r4, #204]	; 0xcc
   18c24:	str	r4, [sp, #8]
   18c28:	str	r7, [sp, #12]
   18c2c:	strd	r8, [sp, #16]
   18c30:	str	r6, [sp, #24]
   18c34:	ldrd	r2, [r5, #96]	; 0x60
   18c38:	ldr	r1, [pc, #524]	; 18e4c <__flatcc_gen_sort@@Base+0x11fc>
   18c3c:	strd	r2, [sp]
   18c40:	mov	r2, r4
   18c44:	bl	13fb0 <fprintf@plt>
   18c48:	mov	r3, #0
   18c4c:	str	r3, [sp, #4]
   18c50:	mov	r2, r8
   18c54:	mov	r1, r7
   18c58:	ldr	r3, [r5, #16]
   18c5c:	mov	r0, r4
   18c60:	str	r3, [sp]
   18c64:	mov	r3, r9
   18c68:	bl	17d8c <__flatcc_gen_sort@@Base+0x13c>
   18c6c:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18c70:	ldr	r3, [pc, #472]	; 18e50 <__flatcc_gen_sort@@Base+0x1200>
   18c74:	ldr	r0, [pc, #416]	; 18e1c <__flatcc_gen_sort@@Base+0x11cc>
   18c78:	ldr	r2, [pc, #416]	; 18e20 <__flatcc_gen_sort@@Base+0x11d0>
   18c7c:	str	r3, [sp]
   18c80:	mov	r3, #1472	; 0x5c0
   18c84:	ldr	r1, [pc, #408]	; 18e24 <__flatcc_gen_sort@@Base+0x11d4>
   18c88:	ldr	r0, [r0]
   18c8c:	bl	13fb0 <fprintf@plt>
   18c90:	ldr	r3, [pc, #400]	; 18e28 <__flatcc_gen_sort@@Base+0x11d8>
   18c94:	mov	r2, #1472	; 0x5c0
   18c98:	b	18a6c <__flatcc_gen_sort@@Base+0xe1c>
   18c9c:	mov	r1, r6
   18ca0:	ldr	r0, [r5, #16]
   18ca4:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18ca8:	ldr	r3, [r5, #16]
   18cac:	ldrh	r2, [r3, #8]
   18cb0:	cmp	r2, #4
   18cb4:	ldrls	pc, [pc, r2, lsl #2]
   18cb8:	b	18dac <__flatcc_gen_sort@@Base+0x115c>
   18cbc:	andeq	r8, r1, r8, lsl sp
   18cc0:	ldrdeq	r8, [r1], -r0
   18cc4:	andeq	r8, r1, ip, lsr #27
   18cc8:	andeq	r8, r1, r4, asr sp
   18ccc:	andeq	r8, r1, ip, ror sp
   18cd0:	ldrh	r3, [r3, #10]
   18cd4:	tst	r3, #8
   18cd8:	beq	18ce8 <__flatcc_gen_sort@@Base+0x1098>
   18cdc:	ldr	r0, [pc, #368]	; 18e54 <__flatcc_gen_sort@@Base+0x1204>
   18ce0:	ldr	r1, [r4, #204]	; 0xcc
   18ce4:	bl	1404c <fputs@plt>
   18ce8:	str	r4, [sp, #8]
   18cec:	str	r7, [sp, #12]
   18cf0:	strd	r8, [sp, #16]
   18cf4:	str	r6, [sp, #24]
   18cf8:	str	r6, [sp, #28]
   18cfc:	ldrd	r2, [r5, #96]	; 0x60
   18d00:	ldr	r1, [pc, #336]	; 18e58 <__flatcc_gen_sort@@Base+0x1208>
   18d04:	strd	r2, [sp]
   18d08:	mov	r2, r4
   18d0c:	ldr	r0, [r4, #204]	; 0xcc
   18d10:	bl	13fb0 <fprintf@plt>
   18d14:	b	188e8 <__flatcc_gen_sort@@Base+0xc98>
   18d18:	ldrh	r3, [r3, #10]
   18d1c:	tst	r3, #8
   18d20:	beq	18d30 <__flatcc_gen_sort@@Base+0x10e0>
   18d24:	ldr	r0, [pc, #296]	; 18e54 <__flatcc_gen_sort@@Base+0x1204>
   18d28:	ldr	r1, [r4, #204]	; 0xcc
   18d2c:	bl	1404c <fputs@plt>
   18d30:	str	r4, [sp, #8]
   18d34:	str	r7, [sp, #12]
   18d38:	strd	r8, [sp, #16]
   18d3c:	str	r6, [sp, #24]
   18d40:	ldrd	r2, [r5, #96]	; 0x60
   18d44:	ldr	r1, [pc, #272]	; 18e5c <__flatcc_gen_sort@@Base+0x120c>
   18d48:	strd	r2, [sp]
   18d4c:	mov	r2, r4
   18d50:	b	18bbc <__flatcc_gen_sort@@Base+0xf6c>
   18d54:	str	r4, [sp, #8]
   18d58:	str	r7, [sp, #12]
   18d5c:	strd	r8, [sp, #16]
   18d60:	str	r6, [sp, #24]
   18d64:	str	r6, [sp, #28]
   18d68:	ldrd	r2, [r5, #96]	; 0x60
   18d6c:	ldr	r1, [pc, #236]	; 18e60 <__flatcc_gen_sort@@Base+0x1210>
   18d70:	strd	r2, [sp]
   18d74:	mov	r2, r4
   18d78:	b	18d0c <__flatcc_gen_sort@@Base+0x10bc>
   18d7c:	ldr	r0, [r4, #204]	; 0xcc
   18d80:	str	r4, [sp, #8]
   18d84:	str	r7, [sp, #12]
   18d88:	strd	r8, [sp, #16]
   18d8c:	str	r6, [sp, #24]
   18d90:	ldrd	r2, [r5, #96]	; 0x60
   18d94:	ldr	r1, [pc, #200]	; 18e64 <__flatcc_gen_sort@@Base+0x1214>
   18d98:	strd	r2, [sp]
   18d9c:	mov	r2, r4
   18da0:	bl	13fb0 <fprintf@plt>
   18da4:	mov	r3, #1
   18da8:	b	18c4c <__flatcc_gen_sort@@Base+0xffc>
   18dac:	ldr	r3, [pc, #180]	; 18e68 <__flatcc_gen_sort@@Base+0x1218>
   18db0:	ldr	r0, [pc, #100]	; 18e1c <__flatcc_gen_sort@@Base+0x11cc>
   18db4:	ldr	r2, [pc, #100]	; 18e20 <__flatcc_gen_sort@@Base+0x11d0>
   18db8:	str	r3, [sp]
   18dbc:	movw	r3, #1507	; 0x5e3
   18dc0:	ldr	r1, [pc, #92]	; 18e24 <__flatcc_gen_sort@@Base+0x11d4>
   18dc4:	ldr	r0, [r0]
   18dc8:	bl	13fb0 <fprintf@plt>
   18dcc:	ldr	r3, [pc, #84]	; 18e28 <__flatcc_gen_sort@@Base+0x11d8>
   18dd0:	movw	r2, #1507	; 0x5e3
   18dd4:	b	18a6c <__flatcc_gen_sort@@Base+0xe1c>
   18dd8:	ldr	r3, [pc, #140]	; 18e6c <__flatcc_gen_sort@@Base+0x121c>
   18ddc:	ldr	r0, [pc, #56]	; 18e1c <__flatcc_gen_sort@@Base+0x11cc>
   18de0:	ldr	r2, [pc, #56]	; 18e20 <__flatcc_gen_sort@@Base+0x11d0>
   18de4:	str	r3, [sp]
   18de8:	movw	r3, #1512	; 0x5e8
   18dec:	ldr	r1, [pc, #48]	; 18e24 <__flatcc_gen_sort@@Base+0x11d4>
   18df0:	ldr	r0, [r0]
   18df4:	bl	13fb0 <fprintf@plt>
   18df8:	ldr	r3, [pc, #40]	; 18e28 <__flatcc_gen_sort@@Base+0x11d8>
   18dfc:	movw	r2, #1512	; 0x5e8
   18e00:	b	18a6c <__flatcc_gen_sort@@Base+0xe1c>
   18e04:	andeq	r8, r3, sp, lsr r2
   18e08:	andeq	r1, r3, fp, lsr #2
   18e0c:	andeq	r7, r3, r8, asr #27
   18e10:	andeq	r8, r3, r3, ror r2
   18e14:			; <UNDEFINED> instruction: 0x000382b8
   18e18:	muleq	r3, r6, r3
   18e1c:	strheq	sl, [r5], -r0
   18e20:	muleq	r3, pc, pc	; <UNPREDICTABLE>
   18e24:	andeq	pc, r2, sp, lsl #28
   18e28:	andeq	r7, r3, lr, asr #29
   18e2c:	andeq	r8, r3, pc, ror #2
   18e30:	andeq	r8, r3, pc, ror #5
   18e34:	andeq	r8, r3, r0, asr #6
   18e38:			; <UNDEFINED> instruction: 0x000383bd
   18e3c:	andeq	r8, r3, r8, ror #7
   18e40:	andeq	r8, r3, sl, lsl r4
   18e44:	andeq	r8, r3, r3, asr r4
   18e48:	andeq	r8, r3, r1, lsl #9
   18e4c:	andeq	r8, r3, r9, asr #9
   18e50:	andeq	r0, r3, pc, asr r8
   18e54:	strdeq	r8, [r3], -r7
   18e58:	andeq	r8, r3, r8, lsl r5
   18e5c:	andeq	r8, r3, sp, asr #10
   18e60:	andeq	r8, r3, r2, lsl #11
   18e64:			; <UNDEFINED> instruction: 0x000385bc
   18e68:	andeq	r0, r3, r8, lsr #17
   18e6c:	andeq	r0, r3, sl, ror #18
   18e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e74:	sub	sp, sp, #484	; 0x1e4
   18e78:	mov	r4, r0
   18e7c:	add	sl, sp, #260	; 0x104
   18e80:	mov	r2, #220	; 0xdc
   18e84:	mov	r1, #0
   18e88:	mov	r0, sl
   18e8c:	bl	13fc8 <memset@plt>
   18e90:	ldr	r3, [r4, #208]	; 0xd0
   18e94:	ldr	r6, [pc, #2252]	; 19768 <__flatcc_gen_sort@@Base+0x1b18>
   18e98:	ldr	r5, [r3, #40]	; 0x28
   18e9c:	mov	r3, #0
   18ea0:	cmp	r5, #0
   18ea4:	bne	18f60 <__flatcc_gen_sort@@Base+0x1310>
   18ea8:	cmp	r3, #0
   18eac:	beq	18ebc <__flatcc_gen_sort@@Base+0x126c>
   18eb0:	mov	r0, #10
   18eb4:	ldr	r1, [r4, #204]	; 0xcc
   18eb8:	bl	14010 <fputc@plt>
   18ebc:	ldr	r3, [r4, #208]	; 0xd0
   18ec0:	ldr	fp, [pc, #2212]	; 1976c <__flatcc_gen_sort@@Base+0x1b1c>
   18ec4:	ldr	r6, [r3, #40]	; 0x28
   18ec8:	mov	r3, #0
   18ecc:	str	r3, [sp, #32]
   18ed0:	cmp	r6, #0
   18ed4:	bne	18f9c <__flatcc_gen_sort@@Base+0x134c>
   18ed8:	ldr	r3, [r4, #208]	; 0xd0
   18edc:	ldr	r6, [r3, #40]	; 0x28
   18ee0:	cmp	r6, #0
   18ee4:	bne	190c0 <__flatcc_gen_sort@@Base+0x1470>
   18ee8:	ldr	r3, [sp, #32]
   18eec:	cmp	r3, #0
   18ef0:	beq	18f00 <__flatcc_gen_sort@@Base+0x12b0>
   18ef4:	mov	r0, #10
   18ef8:	ldr	r1, [r4, #204]	; 0xcc
   18efc:	bl	14010 <fputc@plt>
   18f00:	ldr	r3, [r4, #208]	; 0xd0
   18f04:	ldr	r8, [pc, #2148]	; 19770 <__flatcc_gen_sort@@Base+0x1b20>
   18f08:	ldr	r9, [pc, #2148]	; 19774 <__flatcc_gen_sort@@Base+0x1b24>
   18f0c:	ldr	fp, [pc, #2148]	; 19778 <__flatcc_gen_sort@@Base+0x1b28>
   18f10:	ldr	r7, [r3, #40]	; 0x28
   18f14:	mov	r3, #0
   18f18:	cmp	r7, #0
   18f1c:	bne	19444 <__flatcc_gen_sort@@Base+0x17f4>
   18f20:	cmp	r3, #0
   18f24:	beq	18f34 <__flatcc_gen_sort@@Base+0x12e4>
   18f28:	mov	r0, #10
   18f2c:	ldr	r1, [r4, #204]	; 0xcc
   18f30:	bl	14010 <fputc@plt>
   18f34:	ldr	r3, [sp, #32]
   18f38:	cmp	r3, #0
   18f3c:	beq	18f54 <__flatcc_gen_sort@@Base+0x1304>
   18f40:	ldr	r3, [r4, #208]	; 0xd0
   18f44:	ldr	fp, [pc, #2096]	; 1977c <__flatcc_gen_sort@@Base+0x1b2c>
   18f48:	ldr	r5, [r3, #40]	; 0x28
   18f4c:	cmp	r5, #0
   18f50:	bne	1958c <__flatcc_gen_sort@@Base+0x193c>
   18f54:	mov	r0, #0
   18f58:	add	sp, sp, #484	; 0x1e4
   18f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f60:	ldrh	r2, [r5, #8]
   18f64:	cmp	r2, #4
   18f68:	bne	18f94 <__flatcc_gen_sort@@Base+0x1344>
   18f6c:	mov	r1, sl
   18f70:	mov	r0, r5
   18f74:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18f78:	mov	r3, sl
   18f7c:	mov	r2, r4
   18f80:	ldr	r0, [r4, #204]	; 0xcc
   18f84:	mov	r1, r6
   18f88:	stm	sp, {r4, sl}
   18f8c:	bl	13fb0 <fprintf@plt>
   18f90:	mov	r3, #1
   18f94:	ldr	r5, [r5]
   18f98:	b	18ea0 <__flatcc_gen_sort@@Base+0x1250>
   18f9c:	ldrh	r7, [r6, #8]
   18fa0:	cmp	r7, #0
   18fa4:	bne	1904c <__flatcc_gen_sort@@Base+0x13fc>
   18fa8:	mov	r2, #220	; 0xdc
   18fac:	mov	r1, r7
   18fb0:	mov	r0, sl
   18fb4:	bl	13fc8 <memset@plt>
   18fb8:	ldr	r5, [r6, #20]
   18fbc:	cmp	r5, #0
   18fc0:	bne	19054 <__flatcc_gen_sort@@Base+0x1404>
   18fc4:	mov	r1, sl
   18fc8:	mov	r0, r6
   18fcc:	mov	r9, r4
   18fd0:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   18fd4:	mov	r3, sl
   18fd8:	mov	r2, r4
   18fdc:	ldr	r1, [pc, #1948]	; 19780 <__flatcc_gen_sort@@Base+0x1b30>
   18fe0:	ldr	r0, [r9, #204]!	; 0xcc
   18fe4:	bl	13fb0 <fprintf@plt>
   18fe8:	ldr	r8, [r6, #20]
   18fec:	cmp	r8, #0
   18ff0:	bne	19068 <__flatcc_gen_sort@@Base+0x1418>
   18ff4:	cmp	r5, #0
   18ff8:	ldr	r1, [r4, #204]	; 0xcc
   18ffc:	ldrne	r0, [pc, #1920]	; 19784 <__flatcc_gen_sort@@Base+0x1b34>
   19000:	ldreq	r0, [pc, #1920]	; 19788 <__flatcc_gen_sort@@Base+0x1b38>
   19004:	bl	1404c <fputs@plt>
   19008:	mov	r2, #220	; 0xdc
   1900c:	mov	r1, #0
   19010:	mov	r0, sl
   19014:	bl	13fc8 <memset@plt>
   19018:	mov	r1, sl
   1901c:	mov	r0, r6
   19020:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   19024:	ldrd	r2, [r6, #96]	; 0x60
   19028:	mov	r1, fp
   1902c:	ldr	r0, [r4, #204]	; 0xcc
   19030:	str	sl, [sp]
   19034:	strd	r2, [sp, #8]
   19038:	mov	r3, r4
   1903c:	mov	r2, r4
   19040:	bl	13fb0 <fprintf@plt>
   19044:	mov	r3, #1
   19048:	str	r3, [sp, #32]
   1904c:	ldr	r6, [r6]
   19050:	b	18ed0 <__flatcc_gen_sort@@Base+0x1280>
   19054:	ldrh	r3, [r5, #72]	; 0x48
   19058:	ldr	r5, [r5]
   1905c:	tst	r3, #4
   19060:	addeq	r7, r7, #1
   19064:	b	18fbc <__flatcc_gen_sort@@Base+0x136c>
   19068:	ldrh	r2, [r8, #72]	; 0x48
   1906c:	ands	r3, r2, #4
   19070:	bne	190a8 <__flatcc_gen_sort@@Base+0x1458>
   19074:	tst	r2, #256	; 0x100
   19078:	beq	190a8 <__flatcc_gen_sort@@Base+0x1458>
   1907c:	cmp	r5, #0
   19080:	beq	190b0 <__flatcc_gen_sort@@Base+0x1460>
   19084:	mov	r2, r7
   19088:	mov	r1, r5
   1908c:	mov	r0, r9
   19090:	bl	17fd0 <__flatcc_gen_sort@@Base+0x380>
   19094:	ldr	r1, [pc, #1776]	; 1978c <__flatcc_gen_sort@@Base+0x1b3c>
   19098:	add	r5, r5, #1
   1909c:	ldr	r2, [r8, #96]	; 0x60
   190a0:	ldr	r0, [r4, #204]	; 0xcc
   190a4:	bl	13fb0 <fprintf@plt>
   190a8:	ldr	r8, [r8]
   190ac:	b	18fec <__flatcc_gen_sort@@Base+0x139c>
   190b0:	mov	r0, #32
   190b4:	ldr	r1, [r4, #204]	; 0xcc
   190b8:	bl	14010 <fputc@plt>
   190bc:	b	19094 <__flatcc_gen_sort@@Base+0x1444>
   190c0:	ldrh	fp, [r6, #8]
   190c4:	cmp	fp, #0
   190c8:	bne	19170 <__flatcc_gen_sort@@Base+0x1520>
   190cc:	add	r7, sp, #40	; 0x28
   190d0:	mov	r2, #220	; 0xdc
   190d4:	mov	r1, fp
   190d8:	mov	r0, r7
   190dc:	bl	13fc8 <memset@plt>
   190e0:	mov	r1, r7
   190e4:	mov	r0, r6
   190e8:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   190ec:	ldr	r8, [r6, #20]
   190f0:	cmp	r8, #0
   190f4:	bne	19178 <__flatcc_gen_sort@@Base+0x1528>
   190f8:	mov	r2, r7
   190fc:	ldr	r1, [pc, #1676]	; 19790 <__flatcc_gen_sort@@Base+0x1b40>
   19100:	ldr	r0, [r4, #204]	; 0xcc
   19104:	bl	13fb0 <fprintf@plt>
   19108:	mov	r1, r8
   1910c:	mov	r2, #220	; 0xdc
   19110:	ldr	r9, [pc, #1660]	; 19794 <__flatcc_gen_sort@@Base+0x1b44>
   19114:	mov	r0, sl
   19118:	bl	13fc8 <memset@plt>
   1911c:	ldr	r5, [r6, #20]
   19120:	mov	r1, r8
   19124:	cmp	r5, #0
   19128:	bne	1918c <__flatcc_gen_sort@@Base+0x153c>
   1912c:	mov	r9, r4
   19130:	mov	r2, r7
   19134:	ldr	r1, [pc, #1628]	; 19798 <__flatcc_gen_sort@@Base+0x1b48>
   19138:	ldr	r0, [r9, #204]!	; 0xcc
   1913c:	bl	13fb0 <fprintf@plt>
   19140:	ldr	r8, [r6, #20]
   19144:	cmp	r8, #0
   19148:	bne	19408 <__flatcc_gen_sort@@Base+0x17b8>
   1914c:	mov	r0, #10
   19150:	ldr	r1, [r4, #204]	; 0xcc
   19154:	bl	14010 <fputc@plt>
   19158:	mov	r3, r7
   1915c:	mov	r2, r7
   19160:	ldr	r1, [pc, #1588]	; 1979c <__flatcc_gen_sort@@Base+0x1b4c>
   19164:	ldr	r0, [r4, #204]	; 0xcc
   19168:	stm	sp, {r4, r7}
   1916c:	bl	13fb0 <fprintf@plt>
   19170:	ldr	r6, [r6]
   19174:	b	18ee0 <__flatcc_gen_sort@@Base+0x1290>
   19178:	ldrh	r3, [r8, #72]	; 0x48
   1917c:	ldr	r8, [r8]
   19180:	tst	r3, #4
   19184:	addeq	fp, fp, #1
   19188:	b	190f0 <__flatcc_gen_sort@@Base+0x14a0>
   1918c:	ldrh	r3, [r5, #72]	; 0x48
   19190:	tst	r3, #4
   19194:	bne	19400 <__flatcc_gen_sort@@Base+0x17b0>
   19198:	mov	r3, #1
   1919c:	mov	r2, fp
   191a0:	add	r0, r4, #204	; 0xcc
   191a4:	add	r8, r1, #1
   191a8:	bl	17fd0 <__flatcc_gen_sort@@Base+0x380>
   191ac:	ldrh	r3, [r5, #24]
   191b0:	sub	r3, r3, #7
   191b4:	cmp	r3, #8
   191b8:	ldrls	pc, [pc, r3, lsl #2]
   191bc:	b	193d4 <__flatcc_gen_sort@@Base+0x1784>
   191c0:	andeq	r9, r1, r8, ror r3
   191c4:	andeq	r9, r1, ip, lsr #6
   191c8:	andeq	r9, r1, r0, asr #7
   191cc:	andeq	r9, r1, ip, lsr #7
   191d0:	ldrdeq	r9, [r1], -r4
   191d4:	ldrdeq	r9, [r1], -r4
   191d8:	ldrdeq	r9, [r1], -r4
   191dc:	andeq	r9, r1, r4, ror #3
   191e0:	andeq	r9, r1, r4, lsr #5
   191e4:	mov	r1, sl
   191e8:	ldr	r0, [r5, #16]
   191ec:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   191f0:	ldr	r3, [r5, #16]
   191f4:	ldrh	r3, [r3, #8]
   191f8:	cmp	r3, #4
   191fc:	ldrls	pc, [pc, r3, lsl #2]
   19200:	b	19270 <__flatcc_gen_sort@@Base+0x1620>
   19204:	andeq	r9, r1, r8, asr #4
   19208:	andeq	r9, r1, r8, lsl r2
   1920c:	andeq	r9, r1, r0, ror r2
   19210:	andeq	r9, r1, r4, lsr r2
   19214:	andeq	r9, r1, ip, asr r2
   19218:	ldrd	r2, [r5, #96]	; 0x60
   1921c:	ldr	r1, [pc, #1404]	; 197a0 <__flatcc_gen_sort@@Base+0x1b50>
   19220:	strd	r2, [sp]
   19224:	mov	r2, sl
   19228:	ldr	r0, [r4, #204]	; 0xcc
   1922c:	bl	13fb0 <fprintf@plt>
   19230:	b	19368 <__flatcc_gen_sort@@Base+0x1718>
   19234:	ldrd	r2, [r5, #96]	; 0x60
   19238:	ldr	r1, [pc, #1380]	; 197a4 <__flatcc_gen_sort@@Base+0x1b54>
   1923c:	strd	r2, [sp]
   19240:	mov	r2, sl
   19244:	b	19228 <__flatcc_gen_sort@@Base+0x15d8>
   19248:	ldrd	r2, [r5, #96]	; 0x60
   1924c:	ldr	r1, [pc, #1364]	; 197a8 <__flatcc_gen_sort@@Base+0x1b58>
   19250:	strd	r2, [sp]
   19254:	mov	r2, sl
   19258:	b	19228 <__flatcc_gen_sort@@Base+0x15d8>
   1925c:	ldrd	r2, [r5, #96]	; 0x60
   19260:	ldr	r1, [pc, #1348]	; 197ac <__flatcc_gen_sort@@Base+0x1b5c>
   19264:	strd	r2, [sp]
   19268:	mov	r2, sl
   1926c:	b	19228 <__flatcc_gen_sort@@Base+0x15d8>
   19270:	ldr	r3, [pc, #1336]	; 197b0 <__flatcc_gen_sort@@Base+0x1b60>
   19274:	ldr	r0, [pc, #1336]	; 197b4 <__flatcc_gen_sort@@Base+0x1b64>
   19278:	ldr	r2, [pc, #1336]	; 197b8 <__flatcc_gen_sort@@Base+0x1b68>
   1927c:	str	r3, [sp]
   19280:	movw	r3, #1173	; 0x495
   19284:	ldr	r1, [pc, #1328]	; 197bc <__flatcc_gen_sort@@Base+0x1b6c>
   19288:	ldr	r0, [r0]
   1928c:	bl	13fb0 <fprintf@plt>
   19290:	ldr	r3, [pc, #1320]	; 197c0 <__flatcc_gen_sort@@Base+0x1b70>
   19294:	movw	r2, #1173	; 0x495
   19298:	ldr	r1, [pc, #1304]	; 197b8 <__flatcc_gen_sort@@Base+0x1b68>
   1929c:	ldr	r0, [pc, #1312]	; 197c4 <__flatcc_gen_sort@@Base+0x1b74>
   192a0:	bl	14070 <__assert_fail@plt>
   192a4:	mov	r1, sl
   192a8:	ldr	r0, [r5, #16]
   192ac:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   192b0:	ldr	r3, [r5, #16]
   192b4:	ldrh	r3, [r3, #8]
   192b8:	cmp	r3, #4
   192bc:	ldrls	pc, [pc, r3, lsl #2]
   192c0:	b	19300 <__flatcc_gen_sort@@Base+0x16b0>
   192c4:	ldrdeq	r9, [r1], -r8
   192c8:	ldrdeq	r9, [r1], -r8
   192cc:	andeq	r9, r1, r0, lsl #6
   192d0:	ldrdeq	r9, [r1], -r8
   192d4:	andeq	r9, r1, ip, ror #5
   192d8:	ldrd	r2, [r5, #96]	; 0x60
   192dc:	ldr	r1, [pc, #1252]	; 197c8 <__flatcc_gen_sort@@Base+0x1b78>
   192e0:	strd	r2, [sp]
   192e4:	mov	r2, sl
   192e8:	b	19228 <__flatcc_gen_sort@@Base+0x15d8>
   192ec:	ldrd	r2, [r5, #96]	; 0x60
   192f0:	ldr	r1, [pc, #1236]	; 197cc <__flatcc_gen_sort@@Base+0x1b7c>
   192f4:	strd	r2, [sp]
   192f8:	mov	r2, sl
   192fc:	b	19228 <__flatcc_gen_sort@@Base+0x15d8>
   19300:	ldr	r3, [pc, #1224]	; 197d0 <__flatcc_gen_sort@@Base+0x1b80>
   19304:	ldr	r0, [pc, #1192]	; 197b4 <__flatcc_gen_sort@@Base+0x1b64>
   19308:	ldr	r2, [pc, #1192]	; 197b8 <__flatcc_gen_sort@@Base+0x1b68>
   1930c:	str	r3, [sp]
   19310:	movw	r3, #1189	; 0x4a5
   19314:	ldr	r1, [pc, #1184]	; 197bc <__flatcc_gen_sort@@Base+0x1b6c>
   19318:	ldr	r0, [r0]
   1931c:	bl	13fb0 <fprintf@plt>
   19320:	ldr	r3, [pc, #1176]	; 197c0 <__flatcc_gen_sort@@Base+0x1b70>
   19324:	movw	r2, #1189	; 0x4a5
   19328:	b	19298 <__flatcc_gen_sort@@Base+0x1648>
   1932c:	ldr	r3, [r5, #16]
   19330:	ldr	r2, [pc, #1180]	; 197d4 <__flatcc_gen_sort@@Base+0x1b84>
   19334:	cmp	r3, #5
   19338:	sub	r3, r3, #1
   1933c:	moveq	r2, r4
   19340:	cmp	r3, #10
   19344:	bhi	19374 <__flatcc_gen_sort@@Base+0x1724>
   19348:	ldr	r1, [pc, #1160]	; 197d8 <__flatcc_gen_sort@@Base+0x1b88>
   1934c:	add	r3, r1, r3, lsl #2
   19350:	ldrd	r0, [r5, #96]	; 0x60
   19354:	ldr	r3, [r3, #68]	; 0x44
   19358:	strd	r0, [sp]
   1935c:	ldr	r1, [pc, #1144]	; 197dc <__flatcc_gen_sort@@Base+0x1b8c>
   19360:	ldr	r0, [r4, #204]	; 0xcc
   19364:	bl	13fb0 <fprintf@plt>
   19368:	mov	r1, r8
   1936c:	ldr	r5, [r5]
   19370:	b	19124 <__flatcc_gen_sort@@Base+0x14d4>
   19374:	bl	18048 <__flatcc_gen_sort@@Base+0x3f8>
   19378:	ldr	r3, [r5, #16]
   1937c:	sub	r3, r3, #1
   19380:	cmp	r3, #10
   19384:	bhi	193a8 <__flatcc_gen_sort@@Base+0x1758>
   19388:	ldr	r2, [pc, #1096]	; 197d8 <__flatcc_gen_sort@@Base+0x1b88>
   1938c:	add	r1, r2, r3, lsl #2
   19390:	ldrd	r2, [r5, #96]	; 0x60
   19394:	strd	r2, [sp]
   19398:	mov	r2, r4
   1939c:	ldr	r3, [r1, #136]	; 0x88
   193a0:	ldr	r1, [pc, #1080]	; 197e0 <__flatcc_gen_sort@@Base+0x1b90>
   193a4:	b	19360 <__flatcc_gen_sort@@Base+0x1710>
   193a8:	bl	1809c <__flatcc_gen_sort@@Base+0x44c>
   193ac:	ldrd	r2, [r5, #96]	; 0x60
   193b0:	mov	r1, r9
   193b4:	strd	r2, [sp]
   193b8:	mov	r2, r4
   193bc:	b	19228 <__flatcc_gen_sort@@Base+0x15d8>
   193c0:	ldrd	r2, [r5, #96]	; 0x60
   193c4:	ldr	r1, [pc, #1048]	; 197e4 <__flatcc_gen_sort@@Base+0x1b94>
   193c8:	strd	r2, [sp]
   193cc:	mov	r2, r4
   193d0:	b	19228 <__flatcc_gen_sort@@Base+0x15d8>
   193d4:	ldr	r3, [pc, #1036]	; 197e8 <__flatcc_gen_sort@@Base+0x1b98>
   193d8:	ldr	r0, [pc, #980]	; 197b4 <__flatcc_gen_sort@@Base+0x1b64>
   193dc:	ldr	r2, [pc, #980]	; 197b8 <__flatcc_gen_sort@@Base+0x1b68>
   193e0:	str	r3, [sp]
   193e4:	movw	r3, #1209	; 0x4b9
   193e8:	ldr	r1, [pc, #972]	; 197bc <__flatcc_gen_sort@@Base+0x1b6c>
   193ec:	ldr	r0, [r0]
   193f0:	bl	13fb0 <fprintf@plt>
   193f4:	ldr	r3, [pc, #964]	; 197c0 <__flatcc_gen_sort@@Base+0x1b70>
   193f8:	movw	r2, #1209	; 0x4b9
   193fc:	b	19298 <__flatcc_gen_sort@@Base+0x1648>
   19400:	mov	r8, r1
   19404:	b	19368 <__flatcc_gen_sort@@Base+0x1718>
   19408:	ldrh	r3, [r8, #72]	; 0x48
   1940c:	tst	r3, #4
   19410:	bne	1943c <__flatcc_gen_sort@@Base+0x17ec>
   19414:	mov	r1, r5
   19418:	mov	r3, #1
   1941c:	mov	r2, fp
   19420:	mov	r0, r9
   19424:	bl	17fd0 <__flatcc_gen_sort@@Base+0x380>
   19428:	ldr	r1, [pc, #956]	; 197ec <__flatcc_gen_sort@@Base+0x1b9c>
   1942c:	add	r5, r5, #1
   19430:	ldrd	r2, [r8, #96]	; 0x60
   19434:	ldr	r0, [r4, #204]	; 0xcc
   19438:	bl	13fb0 <fprintf@plt>
   1943c:	ldr	r8, [r8]
   19440:	b	19144 <__flatcc_gen_sort@@Base+0x14f4>
   19444:	ldrh	r2, [r7, #8]
   19448:	cmp	r2, #4
   1944c:	bne	194a8 <__flatcc_gen_sort@@Base+0x1858>
   19450:	add	r5, sp, #40	; 0x28
   19454:	mov	r2, #220	; 0xdc
   19458:	mov	r1, #0
   1945c:	mov	r0, r5
   19460:	bl	13fc8 <memset@plt>
   19464:	mov	r2, #220	; 0xdc
   19468:	mov	r1, #0
   1946c:	mov	r0, sl
   19470:	bl	13fc8 <memset@plt>
   19474:	mov	r1, r5
   19478:	mov	r0, r7
   1947c:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   19480:	ldr	r6, [r7, #20]
   19484:	cmp	r6, #0
   19488:	bne	194b0 <__flatcc_gen_sort@@Base+0x1860>
   1948c:	mov	r3, r4
   19490:	mov	r2, r4
   19494:	ldr	r1, [pc, #852]	; 197f0 <__flatcc_gen_sort@@Base+0x1ba0>
   19498:	ldr	r0, [r4, #204]	; 0xcc
   1949c:	str	r5, [sp]
   194a0:	bl	13fb0 <fprintf@plt>
   194a4:	mov	r3, #1
   194a8:	ldr	r7, [r7]
   194ac:	b	18f18 <__flatcc_gen_sort@@Base+0x12c8>
   194b0:	ldrh	r3, [r6, #24]
   194b4:	cmp	r3, #10
   194b8:	beq	19534 <__flatcc_gen_sort@@Base+0x18e4>
   194bc:	cmp	r3, #14
   194c0:	beq	194ec <__flatcc_gen_sort@@Base+0x189c>
   194c4:	cmp	r3, #0
   194c8:	bne	19560 <__flatcc_gen_sort@@Base+0x1910>
   194cc:	mov	r3, r5
   194d0:	mov	r2, r5
   194d4:	ldr	r0, [r4, #204]	; 0xcc
   194d8:	mov	r1, fp
   194dc:	str	r5, [sp]
   194e0:	str	r5, [sp, #4]
   194e4:	bl	13fb0 <fprintf@plt>
   194e8:	b	1952c <__flatcc_gen_sort@@Base+0x18dc>
   194ec:	mov	r1, sl
   194f0:	ldr	r0, [r6, #16]
   194f4:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   194f8:	ldr	r2, [r6, #4]
   194fc:	mov	r1, r9
   19500:	ldrd	r2, [r2]
   19504:	str	r3, [sp]
   19508:	stmib	sp, {r2, sl}
   1950c:	str	r5, [sp, #12]
   19510:	str	r3, [sp, #20]
   19514:	mov	r3, r5
   19518:	str	r2, [sp, #24]
   1951c:	mov	r2, r5
   19520:	str	r5, [sp, #16]
   19524:	ldr	r0, [r4, #204]	; 0xcc
   19528:	bl	13fb0 <fprintf@plt>
   1952c:	ldr	r6, [r6]
   19530:	b	19484 <__flatcc_gen_sort@@Base+0x1834>
   19534:	ldr	r2, [r6, #4]
   19538:	mov	r1, r8
   1953c:	ldrd	r2, [r2]
   19540:	str	r3, [sp]
   19544:	stmib	sp, {r2, r4, r5}
   19548:	str	r5, [sp, #16]
   1954c:	str	r3, [sp, #20]
   19550:	mov	r3, r5
   19554:	str	r2, [sp, #24]
   19558:	mov	r2, r5
   1955c:	b	19524 <__flatcc_gen_sort@@Base+0x18d4>
   19560:	ldr	r3, [pc, #652]	; 197f4 <__flatcc_gen_sort@@Base+0x1ba4>
   19564:	ldr	r0, [pc, #584]	; 197b4 <__flatcc_gen_sort@@Base+0x1b64>
   19568:	ldr	r2, [pc, #584]	; 197b8 <__flatcc_gen_sort@@Base+0x1b68>
   1956c:	str	r3, [sp]
   19570:	movw	r3, #1608	; 0x648
   19574:	ldr	r1, [pc, #576]	; 197bc <__flatcc_gen_sort@@Base+0x1b6c>
   19578:	ldr	r0, [r0]
   1957c:	bl	13fb0 <fprintf@plt>
   19580:	ldr	r3, [pc, #624]	; 197f8 <__flatcc_gen_sort@@Base+0x1ba8>
   19584:	movw	r2, #1608	; 0x648
   19588:	b	19298 <__flatcc_gen_sort@@Base+0x1648>
   1958c:	ldrh	r7, [r5, #8]
   19590:	cmp	r7, #0
   19594:	bne	19670 <__flatcc_gen_sort@@Base+0x1a20>
   19598:	mov	r1, r5
   1959c:	mov	r0, r4
   195a0:	ldr	r9, [pc, #596]	; 197fc <__flatcc_gen_sort@@Base+0x1bac>
   195a4:	bl	18850 <__flatcc_gen_sort@@Base+0xc00>
   195a8:	ldrh	r8, [r5, #92]	; 0x5c
   195ac:	mov	r2, #220	; 0xdc
   195b0:	mov	r1, r7
   195b4:	mov	r0, sl
   195b8:	ands	r8, r8, #8
   195bc:	moveq	r3, #1
   195c0:	movne	r3, #0
   195c4:	str	r3, [sp, #36]	; 0x24
   195c8:	bl	13fc8 <memset@plt>
   195cc:	mov	r1, sl
   195d0:	mov	r0, r5
   195d4:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   195d8:	mov	r3, sl
   195dc:	mov	r2, sl
   195e0:	ldr	r1, [pc, #536]	; 19800 <__flatcc_gen_sort@@Base+0x1bb0>
   195e4:	ldr	r0, [r4, #204]	; 0xcc
   195e8:	stm	sp, {r4, sl}
   195ec:	bl	13fb0 <fprintf@plt>
   195f0:	mov	r2, sl
   195f4:	ldr	r1, [pc, #520]	; 19804 <__flatcc_gen_sort@@Base+0x1bb4>
   195f8:	ldr	r0, [r4, #204]	; 0xcc
   195fc:	bl	13fb0 <fprintf@plt>
   19600:	ldr	r6, [r5, #24]
   19604:	cmp	r6, #0
   19608:	bne	19678 <__flatcc_gen_sort@@Base+0x1a28>
   1960c:	ldr	r3, [sp, #36]	; 0x24
   19610:	tst	r7, r3
   19614:	bne	19700 <__flatcc_gen_sort@@Base+0x1ab0>
   19618:	mov	r2, sl
   1961c:	ldr	r1, [pc, #484]	; 19808 <__flatcc_gen_sort@@Base+0x1bb8>
   19620:	ldr	r0, [r4, #204]	; 0xcc
   19624:	bl	13fb0 <fprintf@plt>
   19628:	mov	r2, #220	; 0xdc
   1962c:	mov	r1, #0
   19630:	mov	r0, sl
   19634:	bl	13fc8 <memset@plt>
   19638:	mov	r1, sl
   1963c:	mov	r0, r5
   19640:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   19644:	ldr	r1, [pc, #448]	; 1980c <__flatcc_gen_sort@@Base+0x1bbc>
   19648:	mov	r3, r4
   1964c:	mov	r2, r4
   19650:	ldr	r0, [r4, #204]	; 0xcc
   19654:	str	sl, [sp]
   19658:	str	sl, [sp, #4]
   1965c:	str	sl, [sp, #8]
   19660:	bl	13fb0 <fprintf@plt>
   19664:	mov	r0, #10
   19668:	ldr	r1, [r4, #204]	; 0xcc
   1966c:	bl	14010 <fputc@plt>
   19670:	ldr	r5, [r5]
   19674:	b	18f4c <__flatcc_gen_sort@@Base+0x12fc>
   19678:	ldrh	r3, [r6, #72]	; 0x48
   1967c:	tst	r3, #4
   19680:	bne	196dc <__flatcc_gen_sort@@Base+0x1a8c>
   19684:	ldrh	lr, [r6, #24]
   19688:	ldr	r3, [r6, #4]
   1968c:	ldr	r0, [r4, #204]	; 0xcc
   19690:	cmp	lr, #14
   19694:	ldr	ip, [r3]
   19698:	ldr	r1, [r3, #4]
   1969c:	ldrd	r2, [r6, #96]	; 0x60
   196a0:	bne	196e4 <__flatcc_gen_sort@@Base+0x1a94>
   196a4:	ldr	lr, [r6, #16]
   196a8:	ldrh	lr, [lr, #8]
   196ac:	cmp	lr, #4
   196b0:	bne	196e4 <__flatcc_gen_sort@@Base+0x1a94>
   196b4:	cmp	r8, #0
   196b8:	ldrne	r7, [sp, #32]
   196bc:	bne	196e4 <__flatcc_gen_sort@@Base+0x1a94>
   196c0:	str	ip, [sp]
   196c4:	strd	r2, [sp, #8]
   196c8:	mov	r3, r1
   196cc:	mov	r2, sl
   196d0:	mov	r1, r9
   196d4:	bl	13fb0 <fprintf@plt>
   196d8:	ldr	r7, [sp, #32]
   196dc:	ldr	r6, [r6, #108]	; 0x6c
   196e0:	b	19604 <__flatcc_gen_sort@@Base+0x19b4>
   196e4:	str	ip, [sp]
   196e8:	strd	r2, [sp, #8]
   196ec:	mov	r3, r1
   196f0:	mov	r2, sl
   196f4:	mov	r1, fp
   196f8:	bl	13fb0 <fprintf@plt>
   196fc:	b	196dc <__flatcc_gen_sort@@Base+0x1a8c>
   19700:	ldr	r7, [pc, #264]	; 19810 <__flatcc_gen_sort@@Base+0x1bc0>
   19704:	ldr	r6, [r5, #24]
   19708:	cmp	r6, #0
   1970c:	beq	19618 <__flatcc_gen_sort@@Base+0x19c8>
   19710:	ldrh	r3, [r6, #72]	; 0x48
   19714:	tst	r3, #4
   19718:	bne	19760 <__flatcc_gen_sort@@Base+0x1b10>
   1971c:	ldrh	r3, [r6, #24]
   19720:	cmp	r3, #14
   19724:	bne	19760 <__flatcc_gen_sort@@Base+0x1b10>
   19728:	ldr	r3, [r6, #16]
   1972c:	ldrh	r3, [r3, #8]
   19730:	cmp	r3, #4
   19734:	bne	19760 <__flatcc_gen_sort@@Base+0x1b10>
   19738:	ldr	r1, [r6, #4]
   1973c:	ldrd	r2, [r6, #96]	; 0x60
   19740:	ldr	r0, [r4, #204]	; 0xcc
   19744:	strd	r2, [sp, #8]
   19748:	mov	r2, sl
   1974c:	ldr	r3, [r1]
   19750:	str	r3, [sp]
   19754:	ldr	r3, [r1, #4]
   19758:	mov	r1, r7
   1975c:	bl	13fb0 <fprintf@plt>
   19760:	ldr	r6, [r6, #108]	; 0x6c
   19764:	b	19708 <__flatcc_gen_sort@@Base+0x1ab8>
   19768:	strdeq	r8, [r3], -r1
   1976c:	andeq	r8, r3, lr, ror r6
   19770:	muleq	r3, r7, r8
   19774:	andeq	r8, r3, r3, lsl r8
   19778:	andeq	r8, r3, r1, lsr #18
   1977c:	andeq	r8, r3, r4, ror #20
   19780:	andeq	r8, r3, r6, asr #12
   19784:	andeq	r8, r3, r6, ror r6
   19788:	andeq	r8, r3, r7, ror r6
   1978c:	andeq	r8, r3, r3, ror r6
   19790:	muleq	r3, sp, r6
   19794:	andeq	r8, r3, r8, lsl #15
   19798:			; <UNDEFINED> instruction: 0x000387b6
   1979c:	andeq	r8, r3, pc, asr #15
   197a0:			; <UNDEFINED> instruction: 0x000386b7
   197a4:	andeq	r8, r3, r3, asr #13
   197a8:	ldrdeq	r8, [r3], -r3
   197ac:	andeq	r8, r3, r2, ror #13
   197b0:	strdeq	r8, [r3], -r7
   197b4:	strheq	sl, [r5], -r0
   197b8:	muleq	r3, pc, pc	; <UNPREDICTABLE>
   197bc:	andeq	pc, r2, sp, lsl #28
   197c0:	andeq	r7, r3, r7, ror #29
   197c4:	andeq	r8, r3, pc, ror #2
   197c8:	andeq	r8, r3, r5, ror r7
   197cc:	andeq	r8, r3, r3, lsr #14
   197d0:	andeq	r8, r3, ip, lsr r7
   197d4:	andeq	r1, r3, fp, lsr #2
   197d8:	andeq	r7, r3, r8, asr #27
   197dc:	andeq	r8, r3, r8, ror #14
   197e0:	andeq	r8, r3, r3, ror r7
   197e4:	muleq	r3, sp, r7
   197e8:	andeq	r8, r3, r8, lsr #1
   197ec:	andeq	r8, r3, sp, ror #14
   197f0:	andeq	r8, r3, r3, asr #19
   197f4:	muleq	r3, r7, r9
   197f8:	strdeq	r7, [r3], -lr
   197fc:	andeq	r8, r3, ip, lsr sl
   19800:	andeq	r8, r3, r3, ror #19
   19804:	andeq	r8, r3, r6, lsr #20
   19808:	andeq	r8, r3, r6, lsl #21
   1980c:			; <UNDEFINED> instruction: 0x00038abb
   19810:	strdeq	r8, [r3], -lr

00019814 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   19814:	push	{r0, r1, r2, r4, r5, lr}
   19818:	add	r5, r0, #102	; 0x66
   1981c:	mov	r4, r0
   19820:	mov	r2, r5
   19824:	ldr	r1, [pc, #1764]	; 19f10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6fc>
   19828:	ldr	r0, [r0, #204]	; 0xcc
   1982c:	bl	13fb0 <fprintf@plt>
   19830:	mov	r2, r5
   19834:	ldr	r1, [pc, #1752]	; 19f14 <__flatcc_fb_gen_common_c_builder_header@@Base+0x700>
   19838:	ldr	r0, [r4, #204]	; 0xcc
   1983c:	bl	13fb0 <fprintf@plt>
   19840:	ldr	r0, [pc, #1744]	; 19f18 <__flatcc_fb_gen_common_c_builder_header@@Base+0x704>
   19844:	ldr	r1, [r4, #204]	; 0xcc
   19848:	bl	1404c <fputs@plt>
   1984c:	ldr	r0, [pc, #1736]	; 19f1c <__flatcc_fb_gen_common_c_builder_header@@Base+0x708>
   19850:	ldr	r1, [r4, #204]	; 0xcc
   19854:	bl	1404c <fputs@plt>
   19858:	ldr	r3, [r4, #212]	; 0xd4
   1985c:	ldr	r3, [r3, #140]	; 0x8c
   19860:	cmp	r3, #0
   19864:	beq	19874 <__flatcc_fb_gen_common_c_builder_header@@Base+0x60>
   19868:	ldr	r0, [pc, #1712]	; 19f20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x70c>
   1986c:	ldr	r1, [r4, #204]	; 0xcc
   19870:	bl	1404c <fputs@plt>
   19874:	ldr	r0, [pc, #1704]	; 19f24 <__flatcc_fb_gen_common_c_builder_header@@Base+0x710>
   19878:	ldr	r1, [r4, #204]	; 0xcc
   1987c:	bl	1404c <fputs@plt>
   19880:	ldr	r0, [pc, #1696]	; 19f28 <__flatcc_fb_gen_common_c_builder_header@@Base+0x714>
   19884:	ldr	r1, [r4, #204]	; 0xcc
   19888:	bl	1404c <fputs@plt>
   1988c:	ldr	r0, [pc, #1688]	; 19f2c <__flatcc_fb_gen_common_c_builder_header@@Base+0x718>
   19890:	ldr	r1, [r4, #204]	; 0xcc
   19894:	bl	1404c <fputs@plt>
   19898:	ldr	r1, [pc, #1680]	; 19f30 <__flatcc_fb_gen_common_c_builder_header@@Base+0x71c>
   1989c:	mov	r0, r4
   198a0:	bl	13ed8 <strcmp@plt>
   198a4:	cmp	r0, #0
   198a8:	beq	1990c <__flatcc_fb_gen_common_c_builder_header@@Base+0xf8>
   198ac:	mov	r2, r4
   198b0:	ldr	r1, [pc, #1660]	; 19f34 <__flatcc_fb_gen_common_c_builder_header@@Base+0x720>
   198b4:	ldr	r0, [r4, #204]	; 0xcc
   198b8:	bl	13fb0 <fprintf@plt>
   198bc:	mov	r2, r4
   198c0:	ldr	r1, [pc, #1648]	; 19f38 <__flatcc_fb_gen_common_c_builder_header@@Base+0x724>
   198c4:	ldr	r0, [r4, #204]	; 0xcc
   198c8:	bl	13fb0 <fprintf@plt>
   198cc:	mov	r2, r4
   198d0:	ldr	r1, [pc, #1636]	; 19f3c <__flatcc_fb_gen_common_c_builder_header@@Base+0x728>
   198d4:	ldr	r0, [r4, #204]	; 0xcc
   198d8:	bl	13fb0 <fprintf@plt>
   198dc:	mov	r2, r4
   198e0:	ldr	r1, [pc, #1624]	; 19f40 <__flatcc_fb_gen_common_c_builder_header@@Base+0x72c>
   198e4:	ldr	r0, [r4, #204]	; 0xcc
   198e8:	bl	13fb0 <fprintf@plt>
   198ec:	mov	r2, r4
   198f0:	ldr	r1, [pc, #1612]	; 19f44 <__flatcc_fb_gen_common_c_builder_header@@Base+0x730>
   198f4:	ldr	r0, [r4, #204]	; 0xcc
   198f8:	bl	13fb0 <fprintf@plt>
   198fc:	mov	r2, r4
   19900:	ldr	r1, [pc, #1600]	; 19f48 <__flatcc_fb_gen_common_c_builder_header@@Base+0x734>
   19904:	ldr	r0, [r4, #204]	; 0xcc
   19908:	bl	13fb0 <fprintf@plt>
   1990c:	mov	r3, r4
   19910:	mov	r2, r4
   19914:	ldr	r1, [pc, #1584]	; 19f4c <__flatcc_fb_gen_common_c_builder_header@@Base+0x738>
   19918:	ldr	r0, [r4, #204]	; 0xcc
   1991c:	bl	13fb0 <fprintf@plt>
   19920:	mov	r3, r4
   19924:	mov	r2, r4
   19928:	ldr	r1, [pc, #1568]	; 19f50 <__flatcc_fb_gen_common_c_builder_header@@Base+0x73c>
   1992c:	ldr	r0, [r4, #204]	; 0xcc
   19930:	bl	13fb0 <fprintf@plt>
   19934:	ldr	r1, [pc, #1560]	; 19f54 <__flatcc_fb_gen_common_c_builder_header@@Base+0x740>
   19938:	mov	r0, r4
   1993c:	bl	13ed8 <strcmp@plt>
   19940:	cmp	r0, #0
   19944:	beq	19968 <__flatcc_fb_gen_common_c_builder_header@@Base+0x154>
   19948:	mov	r2, r4
   1994c:	ldr	r1, [pc, #1540]	; 19f58 <__flatcc_fb_gen_common_c_builder_header@@Base+0x744>
   19950:	ldr	r0, [r4, #204]	; 0xcc
   19954:	bl	13fb0 <fprintf@plt>
   19958:	mov	r2, r4
   1995c:	ldr	r1, [pc, #1528]	; 19f5c <__flatcc_fb_gen_common_c_builder_header@@Base+0x748>
   19960:	ldr	r0, [r4, #204]	; 0xcc
   19964:	bl	13fb0 <fprintf@plt>
   19968:	mov	r0, #10
   1996c:	ldr	r1, [r4, #204]	; 0xcc
   19970:	bl	14010 <fputc@plt>
   19974:	mov	r2, r4
   19978:	ldr	r1, [pc, #1504]	; 19f60 <__flatcc_fb_gen_common_c_builder_header@@Base+0x74c>
   1997c:	ldr	r0, [r4, #204]	; 0xcc
   19980:	bl	13fb0 <fprintf@plt>
   19984:	mov	r2, r4
   19988:	ldr	r1, [pc, #1492]	; 19f64 <__flatcc_fb_gen_common_c_builder_header@@Base+0x750>
   1998c:	ldr	r0, [r4, #204]	; 0xcc
   19990:	bl	13fb0 <fprintf@plt>
   19994:	mov	r3, r4
   19998:	mov	r2, r4
   1999c:	ldr	r1, [pc, #1476]	; 19f68 <__flatcc_fb_gen_common_c_builder_header@@Base+0x754>
   199a0:	ldr	r0, [r4, #204]	; 0xcc
   199a4:	str	r4, [sp]
   199a8:	bl	13fb0 <fprintf@plt>
   199ac:	mov	r2, r4
   199b0:	ldr	r1, [pc, #1460]	; 19f6c <__flatcc_fb_gen_common_c_builder_header@@Base+0x758>
   199b4:	ldr	r0, [r4, #204]	; 0xcc
   199b8:	bl	13fb0 <fprintf@plt>
   199bc:	mov	r2, r4
   199c0:	ldr	r1, [pc, #1448]	; 19f70 <__flatcc_fb_gen_common_c_builder_header@@Base+0x75c>
   199c4:	ldr	r0, [r4, #204]	; 0xcc
   199c8:	bl	13fb0 <fprintf@plt>
   199cc:	mov	r2, r4
   199d0:	ldr	r1, [pc, #1436]	; 19f74 <__flatcc_fb_gen_common_c_builder_header@@Base+0x760>
   199d4:	ldr	r0, [r4, #204]	; 0xcc
   199d8:	bl	13fb0 <fprintf@plt>
   199dc:	mov	r2, r4
   199e0:	ldr	r1, [pc, #1424]	; 19f78 <__flatcc_fb_gen_common_c_builder_header@@Base+0x764>
   199e4:	ldr	r0, [r4, #204]	; 0xcc
   199e8:	bl	13fb0 <fprintf@plt>
   199ec:	mov	r3, r4
   199f0:	mov	r2, r4
   199f4:	ldr	r1, [pc, #1408]	; 19f7c <__flatcc_fb_gen_common_c_builder_header@@Base+0x768>
   199f8:	ldr	r0, [r4, #204]	; 0xcc
   199fc:	bl	13fb0 <fprintf@plt>
   19a00:	mov	r3, r4
   19a04:	mov	r2, r4
   19a08:	ldr	r1, [pc, #1392]	; 19f80 <__flatcc_fb_gen_common_c_builder_header@@Base+0x76c>
   19a0c:	ldr	r0, [r4, #204]	; 0xcc
   19a10:	str	r4, [sp]
   19a14:	bl	13fb0 <fprintf@plt>
   19a18:	mov	r2, r4
   19a1c:	ldr	r1, [pc, #1376]	; 19f84 <__flatcc_fb_gen_common_c_builder_header@@Base+0x770>
   19a20:	ldr	r0, [r4, #204]	; 0xcc
   19a24:	bl	13fb0 <fprintf@plt>
   19a28:	mov	r2, r4
   19a2c:	ldr	r1, [pc, #1364]	; 19f88 <__flatcc_fb_gen_common_c_builder_header@@Base+0x774>
   19a30:	ldr	r0, [r4, #204]	; 0xcc
   19a34:	bl	13fb0 <fprintf@plt>
   19a38:	mov	r2, r4
   19a3c:	ldr	r1, [pc, #1352]	; 19f8c <__flatcc_fb_gen_common_c_builder_header@@Base+0x778>
   19a40:	ldr	r0, [r4, #204]	; 0xcc
   19a44:	bl	13fb0 <fprintf@plt>
   19a48:	mov	r3, r4
   19a4c:	mov	r2, r4
   19a50:	ldr	r1, [pc, #1336]	; 19f90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x77c>
   19a54:	ldr	r0, [r4, #204]	; 0xcc
   19a58:	bl	13fb0 <fprintf@plt>
   19a5c:	mov	r2, r4
   19a60:	ldr	r1, [pc, #1324]	; 19f94 <__flatcc_fb_gen_common_c_builder_header@@Base+0x780>
   19a64:	ldr	r0, [r4, #204]	; 0xcc
   19a68:	bl	13fb0 <fprintf@plt>
   19a6c:	mov	r3, r4
   19a70:	mov	r2, r4
   19a74:	ldr	r1, [pc, #1308]	; 19f98 <__flatcc_fb_gen_common_c_builder_header@@Base+0x784>
   19a78:	ldr	r0, [r4, #204]	; 0xcc
   19a7c:	str	r4, [sp]
   19a80:	bl	13fb0 <fprintf@plt>
   19a84:	mov	r3, r4
   19a88:	mov	r2, r4
   19a8c:	ldr	r1, [pc, #1288]	; 19f9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x788>
   19a90:	ldr	r0, [r4, #204]	; 0xcc
   19a94:	str	r4, [sp]
   19a98:	str	r4, [sp, #4]
   19a9c:	bl	13fb0 <fprintf@plt>
   19aa0:	mov	r3, r4
   19aa4:	mov	r2, r4
   19aa8:	ldr	r1, [pc, #1264]	; 19fa0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x78c>
   19aac:	ldr	r0, [r4, #204]	; 0xcc
   19ab0:	bl	13fb0 <fprintf@plt>
   19ab4:	mov	r3, r4
   19ab8:	mov	r2, r4
   19abc:	ldr	r1, [pc, #1248]	; 19fa4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x790>
   19ac0:	ldr	r0, [r4, #204]	; 0xcc
   19ac4:	str	r4, [sp]
   19ac8:	str	r4, [sp, #4]
   19acc:	bl	13fb0 <fprintf@plt>
   19ad0:	mov	r3, r4
   19ad4:	mov	r2, r4
   19ad8:	ldr	r1, [pc, #1224]	; 19fa8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x794>
   19adc:	ldr	r0, [r4, #204]	; 0xcc
   19ae0:	bl	13fb0 <fprintf@plt>
   19ae4:	mov	r2, r4
   19ae8:	ldr	r1, [pc, #1212]	; 19fac <__flatcc_fb_gen_common_c_builder_header@@Base+0x798>
   19aec:	ldr	r0, [r4, #204]	; 0xcc
   19af0:	bl	13fb0 <fprintf@plt>
   19af4:	mov	r2, r4
   19af8:	ldr	r1, [pc, #1200]	; 19fb0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x79c>
   19afc:	ldr	r0, [r4, #204]	; 0xcc
   19b00:	bl	13fb0 <fprintf@plt>
   19b04:	mov	r2, r4
   19b08:	ldr	r1, [pc, #1188]	; 19fb4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a0>
   19b0c:	ldr	r0, [r4, #204]	; 0xcc
   19b10:	bl	13fb0 <fprintf@plt>
   19b14:	mov	r2, r4
   19b18:	ldr	r1, [pc, #1176]	; 19fb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a4>
   19b1c:	ldr	r0, [r4, #204]	; 0xcc
   19b20:	bl	13fb0 <fprintf@plt>
   19b24:	mov	r3, r4
   19b28:	mov	r2, r4
   19b2c:	ldr	r1, [pc, #1160]	; 19fbc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7a8>
   19b30:	ldr	r0, [r4, #204]	; 0xcc
   19b34:	bl	13fb0 <fprintf@plt>
   19b38:	mov	r2, r4
   19b3c:	ldr	r1, [pc, #1148]	; 19fc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ac>
   19b40:	ldr	r0, [r4, #204]	; 0xcc
   19b44:	bl	13fb0 <fprintf@plt>
   19b48:	mov	r2, r4
   19b4c:	ldr	r1, [pc, #1136]	; 19fc4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b0>
   19b50:	ldr	r0, [r4, #204]	; 0xcc
   19b54:	bl	13fb0 <fprintf@plt>
   19b58:	mov	r3, r4
   19b5c:	mov	r2, r4
   19b60:	ldr	r1, [pc, #1120]	; 19fc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b4>
   19b64:	ldr	r0, [r4, #204]	; 0xcc
   19b68:	bl	13fb0 <fprintf@plt>
   19b6c:	mov	r3, r4
   19b70:	mov	r2, r4
   19b74:	ldr	r1, [pc, #1104]	; 19fcc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7b8>
   19b78:	ldr	r0, [r4, #204]	; 0xcc
   19b7c:	bl	13fb0 <fprintf@plt>
   19b80:	mov	r3, r4
   19b84:	mov	r2, r4
   19b88:	ldr	r1, [pc, #1088]	; 19fd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7bc>
   19b8c:	ldr	r0, [r4, #204]	; 0xcc
   19b90:	bl	13fb0 <fprintf@plt>
   19b94:	mov	r3, r4
   19b98:	mov	r2, r4
   19b9c:	ldr	r1, [pc, #1072]	; 19fd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c0>
   19ba0:	ldr	r0, [r4, #204]	; 0xcc
   19ba4:	bl	13fb0 <fprintf@plt>
   19ba8:	mov	r3, r4
   19bac:	mov	r2, r4
   19bb0:	ldr	r1, [pc, #1056]	; 19fd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c4>
   19bb4:	ldr	r0, [r4, #204]	; 0xcc
   19bb8:	str	r4, [sp]
   19bbc:	bl	13fb0 <fprintf@plt>
   19bc0:	mov	r3, r4
   19bc4:	mov	r2, r4
   19bc8:	ldr	r1, [pc, #1036]	; 19fdc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c8>
   19bcc:	ldr	r0, [r4, #204]	; 0xcc
   19bd0:	bl	13fb0 <fprintf@plt>
   19bd4:	mov	r2, r4
   19bd8:	ldr	r1, [pc, #1024]	; 19fe0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7cc>
   19bdc:	ldr	r0, [r4, #204]	; 0xcc
   19be0:	bl	13fb0 <fprintf@plt>
   19be4:	mov	r2, r4
   19be8:	ldr	r1, [pc, #1012]	; 19fe4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d0>
   19bec:	ldr	r0, [r4, #204]	; 0xcc
   19bf0:	bl	13fb0 <fprintf@plt>
   19bf4:	mov	r2, r4
   19bf8:	ldr	r1, [pc, #1000]	; 19fe8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d4>
   19bfc:	ldr	r0, [r4, #204]	; 0xcc
   19c00:	bl	13fb0 <fprintf@plt>
   19c04:	mov	r3, r4
   19c08:	mov	r2, r4
   19c0c:	ldr	r1, [pc, #984]	; 19fec <__flatcc_fb_gen_common_c_builder_header@@Base+0x7d8>
   19c10:	ldr	r0, [r4, #204]	; 0xcc
   19c14:	str	r4, [sp]
   19c18:	bl	13fb0 <fprintf@plt>
   19c1c:	mov	r2, r4
   19c20:	ldr	r1, [pc, #968]	; 19ff0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   19c24:	ldr	r0, [r4, #204]	; 0xcc
   19c28:	bl	13fb0 <fprintf@plt>
   19c2c:	mov	r2, r4
   19c30:	ldr	r1, [pc, #956]	; 19ff4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e0>
   19c34:	ldr	r0, [r4, #204]	; 0xcc
   19c38:	bl	13fb0 <fprintf@plt>
   19c3c:	mov	r2, r4
   19c40:	ldr	r1, [pc, #944]	; 19ff8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e4>
   19c44:	ldr	r0, [r4, #204]	; 0xcc
   19c48:	bl	13fb0 <fprintf@plt>
   19c4c:	mov	r2, r4
   19c50:	ldr	r1, [pc, #932]	; 19ffc <__flatcc_fb_gen_common_c_builder_header@@Base+0x7e8>
   19c54:	ldr	r0, [r4, #204]	; 0xcc
   19c58:	bl	13fb0 <fprintf@plt>
   19c5c:	mov	r3, r4
   19c60:	mov	r2, r4
   19c64:	ldr	r1, [pc, #916]	; 1a000 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7ec>
   19c68:	ldr	r0, [r4, #204]	; 0xcc
   19c6c:	bl	13fb0 <fprintf@plt>
   19c70:	mov	r2, r4
   19c74:	ldr	r1, [pc, #904]	; 1a004 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f0>
   19c78:	ldr	r0, [r4, #204]	; 0xcc
   19c7c:	bl	13fb0 <fprintf@plt>
   19c80:	mov	r2, r4
   19c84:	ldr	r1, [pc, #892]	; 1a008 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f4>
   19c88:	ldr	r0, [r4, #204]	; 0xcc
   19c8c:	bl	13fb0 <fprintf@plt>
   19c90:	mov	r2, r4
   19c94:	ldr	r1, [pc, #880]	; 1a00c <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   19c98:	ldr	r0, [r4, #204]	; 0xcc
   19c9c:	bl	13fb0 <fprintf@plt>
   19ca0:	mov	r2, r4
   19ca4:	ldr	r1, [pc, #868]	; 1a010 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7fc>
   19ca8:	ldr	r0, [r4, #204]	; 0xcc
   19cac:	bl	13fb0 <fprintf@plt>
   19cb0:	mov	r2, r4
   19cb4:	ldr	r1, [pc, #856]	; 1a014 <__flatcc_fb_gen_common_c_builder_header@@Base+0x800>
   19cb8:	ldr	r0, [r4, #204]	; 0xcc
   19cbc:	bl	13fb0 <fprintf@plt>
   19cc0:	mov	r2, r4
   19cc4:	ldr	r1, [pc, #844]	; 1a018 <__flatcc_fb_gen_common_c_builder_header@@Base+0x804>
   19cc8:	ldr	r0, [r4, #204]	; 0xcc
   19ccc:	bl	13fb0 <fprintf@plt>
   19cd0:	mov	r2, r4
   19cd4:	ldr	r1, [pc, #832]	; 1a01c <__flatcc_fb_gen_common_c_builder_header@@Base+0x808>
   19cd8:	ldr	r0, [r4, #204]	; 0xcc
   19cdc:	bl	13fb0 <fprintf@plt>
   19ce0:	mov	r2, r4
   19ce4:	ldr	r1, [pc, #820]	; 1a020 <__flatcc_fb_gen_common_c_builder_header@@Base+0x80c>
   19ce8:	ldr	r0, [r4, #204]	; 0xcc
   19cec:	bl	13fb0 <fprintf@plt>
   19cf0:	mov	r2, r4
   19cf4:	ldr	r1, [pc, #808]	; 1a024 <__flatcc_fb_gen_common_c_builder_header@@Base+0x810>
   19cf8:	ldr	r0, [r4, #204]	; 0xcc
   19cfc:	bl	13fb0 <fprintf@plt>
   19d00:	mov	r2, r4
   19d04:	ldr	r1, [pc, #796]	; 1a028 <__flatcc_fb_gen_common_c_builder_header@@Base+0x814>
   19d08:	ldr	r0, [r4, #204]	; 0xcc
   19d0c:	bl	13fb0 <fprintf@plt>
   19d10:	mov	r2, r4
   19d14:	ldr	r1, [pc, #784]	; 1a02c <__flatcc_fb_gen_common_c_builder_header@@Base+0x818>
   19d18:	ldr	r0, [r4, #204]	; 0xcc
   19d1c:	bl	13fb0 <fprintf@plt>
   19d20:	mov	r2, r4
   19d24:	ldr	r1, [pc, #772]	; 1a030 <__flatcc_fb_gen_common_c_builder_header@@Base+0x81c>
   19d28:	ldr	r0, [r4, #204]	; 0xcc
   19d2c:	bl	13fb0 <fprintf@plt>
   19d30:	mov	r2, r4
   19d34:	ldr	r1, [pc, #760]	; 1a034 <__flatcc_fb_gen_common_c_builder_header@@Base+0x820>
   19d38:	ldr	r0, [r4, #204]	; 0xcc
   19d3c:	bl	13fb0 <fprintf@plt>
   19d40:	mov	r2, r4
   19d44:	ldr	r1, [pc, #748]	; 1a038 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   19d48:	ldr	r0, [r4, #204]	; 0xcc
   19d4c:	bl	13fb0 <fprintf@plt>
   19d50:	mov	r2, r4
   19d54:	ldr	r1, [pc, #736]	; 1a03c <__flatcc_fb_gen_common_c_builder_header@@Base+0x828>
   19d58:	ldr	r0, [r4, #204]	; 0xcc
   19d5c:	bl	13fb0 <fprintf@plt>
   19d60:	mov	r2, r4
   19d64:	ldr	r1, [pc, #724]	; 1a040 <__flatcc_fb_gen_common_c_builder_header@@Base+0x82c>
   19d68:	ldr	r0, [r4, #204]	; 0xcc
   19d6c:	bl	13fb0 <fprintf@plt>
   19d70:	mov	r2, r4
   19d74:	ldr	r1, [pc, #712]	; 1a044 <__flatcc_fb_gen_common_c_builder_header@@Base+0x830>
   19d78:	ldr	r0, [r4, #204]	; 0xcc
   19d7c:	bl	13fb0 <fprintf@plt>
   19d80:	mov	r0, #10
   19d84:	ldr	r1, [r4, #204]	; 0xcc
   19d88:	bl	14010 <fputc@plt>
   19d8c:	mov	r3, r4
   19d90:	mov	r2, r4
   19d94:	ldr	r1, [pc, #684]	; 1a048 <__flatcc_fb_gen_common_c_builder_header@@Base+0x834>
   19d98:	ldr	r0, [r4, #204]	; 0xcc
   19d9c:	str	r4, [sp]
   19da0:	bl	13fb0 <fprintf@plt>
   19da4:	mov	r3, r4
   19da8:	mov	r2, r4
   19dac:	ldr	r1, [pc, #664]	; 1a04c <__flatcc_fb_gen_common_c_builder_header@@Base+0x838>
   19db0:	ldr	r0, [r4, #204]	; 0xcc
   19db4:	str	r4, [sp]
   19db8:	bl	13fb0 <fprintf@plt>
   19dbc:	mov	r3, r4
   19dc0:	mov	r2, r4
   19dc4:	ldr	r1, [pc, #644]	; 1a050 <__flatcc_fb_gen_common_c_builder_header@@Base+0x83c>
   19dc8:	ldr	r0, [r4, #204]	; 0xcc
   19dcc:	str	r4, [sp]
   19dd0:	str	r4, [sp, #4]
   19dd4:	bl	13fb0 <fprintf@plt>
   19dd8:	mov	r3, r4
   19ddc:	mov	r2, r4
   19de0:	ldr	r1, [pc, #620]	; 1a054 <__flatcc_fb_gen_common_c_builder_header@@Base+0x840>
   19de4:	ldr	r0, [r4, #204]	; 0xcc
   19de8:	str	r4, [sp]
   19dec:	bl	13fb0 <fprintf@plt>
   19df0:	mov	r3, r4
   19df4:	mov	r2, r4
   19df8:	ldr	r1, [pc, #600]	; 1a058 <__flatcc_fb_gen_common_c_builder_header@@Base+0x844>
   19dfc:	ldr	r0, [r4, #204]	; 0xcc
   19e00:	str	r4, [sp]
   19e04:	bl	13fb0 <fprintf@plt>
   19e08:	mov	r3, r4
   19e0c:	mov	r2, r4
   19e10:	ldr	r1, [pc, #580]	; 1a05c <__flatcc_fb_gen_common_c_builder_header@@Base+0x848>
   19e14:	ldr	r0, [r4, #204]	; 0xcc
   19e18:	str	r4, [sp]
   19e1c:	bl	13fb0 <fprintf@plt>
   19e20:	mov	r3, r4
   19e24:	mov	r2, r4
   19e28:	ldr	r1, [pc, #560]	; 1a060 <__flatcc_fb_gen_common_c_builder_header@@Base+0x84c>
   19e2c:	ldr	r0, [r4, #204]	; 0xcc
   19e30:	str	r4, [sp]
   19e34:	bl	13fb0 <fprintf@plt>
   19e38:	mov	r3, r4
   19e3c:	mov	r2, r4
   19e40:	ldr	r1, [pc, #540]	; 1a064 <__flatcc_fb_gen_common_c_builder_header@@Base+0x850>
   19e44:	ldr	r0, [r4, #204]	; 0xcc
   19e48:	str	r4, [sp]
   19e4c:	bl	13fb0 <fprintf@plt>
   19e50:	mov	r3, r4
   19e54:	mov	r2, r4
   19e58:	ldr	r1, [pc, #520]	; 1a068 <__flatcc_fb_gen_common_c_builder_header@@Base+0x854>
   19e5c:	ldr	r0, [r4, #204]	; 0xcc
   19e60:	str	r4, [sp]
   19e64:	bl	13fb0 <fprintf@plt>
   19e68:	mov	r3, r4
   19e6c:	mov	r2, r4
   19e70:	ldr	r1, [pc, #500]	; 1a06c <__flatcc_fb_gen_common_c_builder_header@@Base+0x858>
   19e74:	ldr	r0, [r4, #204]	; 0xcc
   19e78:	str	r4, [sp]
   19e7c:	bl	13fb0 <fprintf@plt>
   19e80:	mov	r3, r4
   19e84:	mov	r2, r4
   19e88:	ldr	r1, [pc, #480]	; 1a070 <__flatcc_fb_gen_common_c_builder_header@@Base+0x85c>
   19e8c:	ldr	r0, [r4, #204]	; 0xcc
   19e90:	str	r4, [sp]
   19e94:	bl	13fb0 <fprintf@plt>
   19e98:	mov	r0, #10
   19e9c:	ldr	r1, [r4, #204]	; 0xcc
   19ea0:	bl	14010 <fputc@plt>
   19ea4:	mov	r3, r4
   19ea8:	mov	r2, r4
   19eac:	ldr	r1, [pc, #448]	; 1a074 <__flatcc_fb_gen_common_c_builder_header@@Base+0x860>
   19eb0:	ldr	r0, [r4, #204]	; 0xcc
   19eb4:	bl	13fb0 <fprintf@plt>
   19eb8:	mov	r0, #10
   19ebc:	ldr	r1, [r4, #204]	; 0xcc
   19ec0:	bl	14010 <fputc@plt>
   19ec4:	mov	r3, r4
   19ec8:	mov	r2, r4
   19ecc:	ldr	r1, [pc, #420]	; 1a078 <__flatcc_fb_gen_common_c_builder_header@@Base+0x864>
   19ed0:	ldr	r0, [r4, #204]	; 0xcc
   19ed4:	bl	13fb0 <fprintf@plt>
   19ed8:	ldr	r3, [r4, #212]	; 0xd4
   19edc:	ldr	r3, [r3, #140]	; 0x8c
   19ee0:	cmp	r3, #0
   19ee4:	beq	19ef4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x6e0>
   19ee8:	ldr	r0, [pc, #396]	; 1a07c <__flatcc_fb_gen_common_c_builder_header@@Base+0x868>
   19eec:	ldr	r1, [r4, #204]	; 0xcc
   19ef0:	bl	1404c <fputs@plt>
   19ef4:	ldr	r1, [pc, #388]	; 1a080 <__flatcc_fb_gen_common_c_builder_header@@Base+0x86c>
   19ef8:	mov	r2, r5
   19efc:	ldr	r0, [r4, #204]	; 0xcc
   19f00:	bl	13fb0 <fprintf@plt>
   19f04:	mov	r0, #0
   19f08:	add	sp, sp, #12
   19f0c:	pop	{r4, r5, pc}
   19f10:	andeq	r8, r3, sl, lsr #22
   19f14:	andeq	r8, r3, r7, asr #22
   19f18:	andeq	r0, r3, lr, asr #31
   19f1c:	andeq	r8, r3, r4, ror #22
   19f20:	ldrdeq	r1, [r3], -sp
   19f24:	muleq	r3, sl, fp
   19f28:			; <UNDEFINED> instruction: 0x00038bb1
   19f2c:	andeq	r7, r3, r3, lsr #2
   19f30:	ldrdeq	r8, [r3], -r5
   19f34:	andeq	r8, r3, r5, ror #23
   19f38:	andeq	r8, r3, ip, lsl #24
   19f3c:	andeq	r8, r3, r3, lsr ip
   19f40:	andeq	r8, r3, lr, asr ip
   19f44:	muleq	r3, r1, ip
   19f48:	andeq	r8, r3, ip, asr #25
   19f4c:	andeq	r8, r3, r4, lsr #26
   19f50:	andeq	r8, r3, pc, lsr sp
   19f54:	andeq	r1, r3, ip, lsr #2
   19f58:	andeq	r8, r3, r6, ror #26
   19f5c:	muleq	r3, r7, sp
   19f60:			; <UNDEFINED> instruction: 0x00038dbb
   19f64:	andeq	r9, r3, lr, lsr #2
   19f68:	strdeq	r9, [r3], -r7
   19f6c:	andeq	r9, r3, r0, lsl #17
   19f70:	andeq	sl, r3, fp, lsr r3
   19f74:	andeq	sl, r3, r6, lsl r7
   19f78:	andeq	sl, r3, ip, asr #26
   19f7c:	andeq	fp, r3, r8, asr #3
   19f80:	andeq	fp, r3, fp, lsr r9
   19f84:	andeq	fp, r3, r3, lsl #29
   19f88:	andeq	ip, r3, r1, lsl #6
   19f8c:	andeq	ip, r3, pc, lsl #9
   19f90:	andeq	ip, r3, r9, ror #15
   19f94:	andeq	ip, r3, lr, ror #19
   19f98:	andeq	ip, r3, r7, asr sp
   19f9c:	andeq	sp, r3, r3, asr r2
   19fa0:	andeq	sp, r3, ip, asr r3
   19fa4:	andeq	sp, r3, r4, asr #13
   19fa8:	andeq	sp, r3, r2, asr #25
   19fac:	andeq	sp, r3, r5, ror lr
   19fb0:	muleq	r3, sl, r0
   19fb4:	andeq	lr, r3, sl, asr r4
   19fb8:	andeq	lr, r3, r7, lsl r7
   19fbc:	andeq	lr, r3, fp, lsr #22
   19fc0:	andeq	lr, r3, r7, lsl ip
   19fc4:	andeq	lr, r3, r8, ror lr
   19fc8:	andeq	pc, r3, pc, ror #3
   19fcc:	andeq	pc, r3, lr, lsr r6	; <UNPREDICTABLE>
   19fd0:	ldrdeq	pc, [r3], -r6
   19fd4:	ldrdeq	pc, [r3], -r2
   19fd8:	ldrdeq	pc, [r3], -lr
   19fdc:	andeq	pc, r3, r9, ror #28
   19fe0:			; <UNDEFINED> instruction: 0x000401b5
   19fe4:	andeq	r0, r4, sp, lsr r4
   19fe8:	andeq	r0, r4, fp, asr #13
   19fec:	andeq	r0, r4, r1, lsl #25
   19ff0:	andeq	r0, r4, r0, lsl sp
   19ff4:	andeq	r0, r4, ip, lsr sp
   19ff8:	andeq	r0, r4, lr, asr sp
   19ffc:	andeq	r0, r4, r8, lsl #27
   1a000:	andeq	r0, r4, r9, lsr #27
   1a004:	ldrdeq	r0, [r4], -r5
   1a008:	strdeq	r0, [r4], -r6
   1a00c:	andeq	r0, r4, r4, lsr #28
   1a010:	andeq	r0, r4, r7, asr #28
   1a014:	andeq	r0, r4, r5, ror lr
   1a018:	muleq	r4, r8, lr
   1a01c:	andeq	r0, r4, r6, asr #29
   1a020:	andeq	r0, r4, r9, ror #29
   1a024:	andeq	r0, r4, r5, lsl pc
   1a028:	andeq	r0, r4, r7, lsr pc
   1a02c:	andeq	r0, r4, r3, ror #30
   1a030:	andeq	r0, r4, r5, lsl #31
   1a034:			; <UNDEFINED> instruction: 0x00040fb1
   1a038:	ldrdeq	r0, [r4], -r3
   1a03c:	strdeq	r0, [r4], -sp
   1a040:	andeq	r1, r4, pc, lsl r0
   1a044:	andeq	r1, r4, fp, asr #32
   1a048:	andeq	r1, r4, lr, rrx
   1a04c:	muleq	r4, r6, r0
   1a050:	strheq	r1, [r4], -ip
   1a054:	andeq	r1, r4, r4, ror #1
   1a058:	andeq	r1, r4, lr, lsl #2
   1a05c:	andeq	r1, r4, r8, lsr r1
   1a060:	andeq	r1, r4, r2, ror #2
   1a064:	andeq	r1, r4, sl, lsl #3
   1a068:			; <UNDEFINED> instruction: 0x000411b2
   1a06c:	ldrdeq	r1, [r4], -sl
   1a070:	andeq	r1, r4, r0, lsl #4
   1a074:	andeq	r1, r4, r8, lsr #4
   1a078:	andeq	r1, r4, lr, lsr r2
   1a07c:	andeq	r6, r3, r7, asr #29
   1a080:	andeq	r1, r4, r4, asr r2

0001a084 <__flatcc_fb_gen_c_builder@@Base>:
   1a084:	ldr	r3, [r0, #208]	; 0xd0
   1a088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a08c:	mov	r4, r0
   1a090:	sub	sp, sp, #268	; 0x10c
   1a094:	ldr	r1, [pc, #1392]	; 1a60c <__flatcc_fb_gen_c_builder@@Base+0x588>
   1a098:	ldr	r3, [r3, #164]	; 0xa4
   1a09c:	ldr	r0, [r0, #204]	; 0xcc
   1a0a0:	mov	r2, r3
   1a0a4:	bl	13fb0 <fprintf@plt>
   1a0a8:	ldr	r0, [pc, #1376]	; 1a610 <__flatcc_fb_gen_c_builder@@Base+0x58c>
   1a0ac:	ldr	r1, [r4, #204]	; 0xcc
   1a0b0:	bl	1404c <fputs@plt>
   1a0b4:	ldr	r1, [pc, #1368]	; 1a614 <__flatcc_fb_gen_c_builder@@Base+0x590>
   1a0b8:	ldr	r3, [r4, #208]	; 0xd0
   1a0bc:	ldr	r0, [r4, #204]	; 0xcc
   1a0c0:	ldr	r2, [r3, #164]	; 0xa4
   1a0c4:	bl	13fb0 <fprintf@plt>
   1a0c8:	ldr	r1, [pc, #1352]	; 1a618 <__flatcc_fb_gen_c_builder@@Base+0x594>
   1a0cc:	ldr	r3, [r4, #208]	; 0xd0
   1a0d0:	ldr	r0, [r4, #204]	; 0xcc
   1a0d4:	ldr	r2, [r3, #160]	; 0xa0
   1a0d8:	bl	13fb0 <fprintf@plt>
   1a0dc:	ldr	r0, [pc, #1336]	; 1a61c <__flatcc_fb_gen_c_builder@@Base+0x598>
   1a0e0:	ldr	r1, [r4, #204]	; 0xcc
   1a0e4:	bl	1404c <fputs@plt>
   1a0e8:	add	r2, r4, #102	; 0x66
   1a0ec:	ldr	r1, [pc, #1324]	; 1a620 <__flatcc_fb_gen_c_builder@@Base+0x59c>
   1a0f0:	ldr	r0, [r4, #204]	; 0xcc
   1a0f4:	bl	13fb0 <fprintf@plt>
   1a0f8:	mov	r2, r4
   1a0fc:	ldr	r1, [pc, #1312]	; 1a624 <__flatcc_fb_gen_c_builder@@Base+0x5a0>
   1a100:	ldr	r0, [r4, #204]	; 0xcc
   1a104:	bl	13fb0 <fprintf@plt>
   1a108:	ldr	r0, [pc, #1292]	; 1a61c <__flatcc_fb_gen_c_builder@@Base+0x598>
   1a10c:	ldr	r1, [r4, #204]	; 0xcc
   1a110:	bl	1404c <fputs@plt>
   1a114:	ldr	r2, [pc, #1292]	; 1a628 <__flatcc_fb_gen_c_builder@@Base+0x5a4>
   1a118:	mov	r0, r4
   1a11c:	ldr	r1, [pc, #1288]	; 1a62c <__flatcc_fb_gen_c_builder@@Base+0x5a8>
   1a120:	bl	14e3c <__flatcc_fb_gen_c_includes@@Base>
   1a124:	ldr	r3, [r4, #212]	; 0xd4
   1a128:	ldr	r3, [r3, #140]	; 0x8c
   1a12c:	cmp	r3, #0
   1a130:	beq	1a140 <__flatcc_fb_gen_c_builder@@Base+0xbc>
   1a134:	ldr	r0, [pc, #1268]	; 1a630 <__flatcc_fb_gen_c_builder@@Base+0x5ac>
   1a138:	ldr	r1, [r4, #204]	; 0xcc
   1a13c:	bl	1404c <fputs@plt>
   1a140:	ldr	r0, [r4, #204]	; 0xcc
   1a144:	ldr	r3, [r4, #208]	; 0xd0
   1a148:	ldrh	r2, [r3, #16]
   1a14c:	cmp	r2, #2
   1a150:	bne	1a24c <__flatcc_fb_gen_c_builder@@Base+0x1c8>
   1a154:	ldr	r2, [r3, #8]
   1a158:	ldr	r1, [pc, #1236]	; 1a634 <__flatcc_fb_gen_c_builder@@Base+0x5b0>
   1a15c:	str	r2, [sp, #4]
   1a160:	mov	r2, r4
   1a164:	ldr	r3, [r3, #12]
   1a168:	str	r3, [sp]
   1a16c:	mov	r3, r4
   1a170:	bl	13fb0 <fprintf@plt>
   1a174:	ldr	r0, [r4, #204]	; 0xcc
   1a178:	ldr	r3, [r4, #208]	; 0xd0
   1a17c:	ldrh	r2, [r3, #32]
   1a180:	cmp	r2, #2
   1a184:	bne	1a260 <__flatcc_fb_gen_c_builder@@Base+0x1dc>
   1a188:	ldr	r2, [r3, #24]
   1a18c:	ldr	r1, [pc, #1188]	; 1a638 <__flatcc_fb_gen_c_builder@@Base+0x5b4>
   1a190:	str	r2, [sp, #4]
   1a194:	mov	r2, r4
   1a198:	ldr	r3, [r3, #28]
   1a19c:	str	r3, [sp]
   1a1a0:	mov	r3, r4
   1a1a4:	bl	13fb0 <fprintf@plt>
   1a1a8:	mov	r0, #10
   1a1ac:	add	r5, sp, #44	; 0x2c
   1a1b0:	ldr	r1, [r4, #204]	; 0xcc
   1a1b4:	bl	14010 <fputc@plt>
   1a1b8:	mov	r2, #220	; 0xdc
   1a1bc:	mov	r1, #0
   1a1c0:	ldr	r7, [pc, #1140]	; 1a63c <__flatcc_fb_gen_c_builder@@Base+0x5b8>
   1a1c4:	mov	r0, r5
   1a1c8:	bl	13fc8 <memset@plt>
   1a1cc:	ldr	r3, [r4, #208]	; 0xd0
   1a1d0:	ldr	r8, [pc, #1128]	; 1a640 <__flatcc_fb_gen_c_builder@@Base+0x5bc>
   1a1d4:	ldr	r6, [r3, #40]	; 0x28
   1a1d8:	mov	r3, #0
   1a1dc:	cmp	r6, #0
   1a1e0:	bne	1a280 <__flatcc_fb_gen_c_builder@@Base+0x1fc>
   1a1e4:	cmp	r3, #0
   1a1e8:	beq	1a1f8 <__flatcc_fb_gen_c_builder@@Base+0x174>
   1a1ec:	mov	r0, #10
   1a1f0:	ldr	r1, [r4, #204]	; 0xcc
   1a1f4:	bl	14010 <fputc@plt>
   1a1f8:	ldr	r3, [r4, #208]	; 0xd0
   1a1fc:	ldr	r8, [r3, #44]	; 0x2c
   1a200:	cmp	r8, #0
   1a204:	bne	1a2d8 <__flatcc_fb_gen_c_builder@@Base+0x254>
   1a208:	mov	r0, r4
   1a20c:	bl	18e70 <__flatcc_gen_sort@@Base+0x1220>
   1a210:	ldr	r3, [r4, #212]	; 0xd4
   1a214:	ldr	r3, [r3, #140]	; 0x8c
   1a218:	cmp	r3, #0
   1a21c:	beq	1a22c <__flatcc_fb_gen_c_builder@@Base+0x1a8>
   1a220:	ldr	r0, [pc, #1052]	; 1a644 <__flatcc_fb_gen_c_builder@@Base+0x5c0>
   1a224:	ldr	r1, [r4, #204]	; 0xcc
   1a228:	bl	1404c <fputs@plt>
   1a22c:	ldr	r1, [pc, #1044]	; 1a648 <__flatcc_fb_gen_c_builder@@Base+0x5c4>
   1a230:	ldr	r3, [r4, #208]	; 0xd0
   1a234:	ldr	r0, [r4, #204]	; 0xcc
   1a238:	ldr	r2, [r3, #164]	; 0xa4
   1a23c:	bl	13fb0 <fprintf@plt>
   1a240:	mov	r0, #0
   1a244:	add	sp, sp, #268	; 0x10c
   1a248:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a24c:	mov	r3, r4
   1a250:	mov	r2, r4
   1a254:	ldr	r1, [pc, #1008]	; 1a64c <__flatcc_fb_gen_c_builder@@Base+0x5c8>
   1a258:	bl	13fb0 <fprintf@plt>
   1a25c:	b	1a174 <__flatcc_fb_gen_c_builder@@Base+0xf0>
   1a260:	ldr	r3, [r4, #212]	; 0xd4
   1a264:	mov	r2, r4
   1a268:	ldr	r1, [pc, #992]	; 1a650 <__flatcc_fb_gen_c_builder@@Base+0x5cc>
   1a26c:	ldr	r3, [r3, #104]	; 0x68
   1a270:	str	r3, [sp]
   1a274:	mov	r3, r4
   1a278:	bl	13fb0 <fprintf@plt>
   1a27c:	b	1a1a8 <__flatcc_fb_gen_c_builder@@Base+0x124>
   1a280:	ldrh	r2, [r6, #8]
   1a284:	cmp	r2, #3
   1a288:	bne	1a2d0 <__flatcc_fb_gen_c_builder@@Base+0x24c>
   1a28c:	mov	r1, r5
   1a290:	mov	r0, r6
   1a294:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   1a298:	mov	r3, r5
   1a29c:	mov	r2, r5
   1a2a0:	ldr	r0, [r4, #204]	; 0xcc
   1a2a4:	mov	r1, r7
   1a2a8:	str	r5, [sp]
   1a2ac:	bl	13fb0 <fprintf@plt>
   1a2b0:	mov	r3, r4
   1a2b4:	mov	r2, r4
   1a2b8:	ldr	r0, [r4, #204]	; 0xcc
   1a2bc:	mov	r1, r8
   1a2c0:	str	r5, [sp]
   1a2c4:	str	r5, [sp, #4]
   1a2c8:	bl	13fb0 <fprintf@plt>
   1a2cc:	mov	r3, #1
   1a2d0:	ldr	r6, [r6]
   1a2d4:	b	1a1dc <__flatcc_fb_gen_c_builder@@Base+0x158>
   1a2d8:	mov	r2, #220	; 0xdc
   1a2dc:	mov	r1, #0
   1a2e0:	mov	r0, r5
   1a2e4:	bl	13fc8 <memset@plt>
   1a2e8:	ldrh	r9, [r8, #8]
   1a2ec:	cmp	r9, #1
   1a2f0:	beq	1a308 <__flatcc_fb_gen_c_builder@@Base+0x284>
   1a2f4:	ldr	r3, [pc, #856]	; 1a654 <__flatcc_fb_gen_c_builder@@Base+0x5d0>
   1a2f8:	movw	r2, #1010	; 0x3f2
   1a2fc:	ldr	r1, [pc, #852]	; 1a658 <__flatcc_fb_gen_c_builder@@Base+0x5d4>
   1a300:	ldr	r0, [pc, #852]	; 1a65c <__flatcc_fb_gen_c_builder@@Base+0x5d8>
   1a304:	bl	14070 <__assert_fail@plt>
   1a308:	mov	r1, r5
   1a30c:	mov	r0, r8
   1a310:	mov	r6, r8
   1a314:	mov	sl, r4
   1a318:	bl	17d7c <__flatcc_gen_sort@@Base+0x12c>
   1a31c:	ldr	r0, [r6, #20]!
   1a320:	bl	17f70 <__flatcc_gen_sort@@Base+0x320>
   1a324:	mov	r7, r0
   1a328:	mov	r2, r5
   1a32c:	ldr	r1, [pc, #812]	; 1a660 <__flatcc_fb_gen_c_builder@@Base+0x5dc>
   1a330:	ldr	r0, [r4, #204]	; 0xcc
   1a334:	bl	13fb0 <fprintf@plt>
   1a338:	mov	r3, r7
   1a33c:	mov	r2, #0
   1a340:	str	r9, [sp]
   1a344:	mov	r1, r6
   1a348:	mov	r0, r4
   1a34c:	bl	18144 <__flatcc_gen_sort@@Base+0x4f4>
   1a350:	mov	r2, r5
   1a354:	ldr	r1, [pc, #776]	; 1a664 <__flatcc_fb_gen_c_builder@@Base+0x5e0>
   1a358:	mov	r9, #0
   1a35c:	ldr	r0, [sl, #204]!	; 0xcc
   1a360:	bl	13fb0 <fprintf@plt>
   1a364:	ldr	r0, [r8, #20]
   1a368:	bl	17f70 <__flatcc_gen_sort@@Base+0x320>
   1a36c:	mov	fp, r0
   1a370:	cmp	fp, r9
   1a374:	bgt	1a5d4 <__flatcc_fb_gen_c_builder@@Base+0x550>
   1a378:	mov	r9, #0
   1a37c:	mov	r0, #10
   1a380:	ldr	r1, [r4, #204]	; 0xcc
   1a384:	bl	14010 <fputc@plt>
   1a388:	mov	r3, r5
   1a38c:	mov	r2, r5
   1a390:	ldr	r1, [pc, #720]	; 1a668 <__flatcc_fb_gen_c_builder@@Base+0x5e4>
   1a394:	mov	sl, #1
   1a398:	ldr	r0, [r4, #204]	; 0xcc
   1a39c:	str	r5, [sp]
   1a3a0:	bl	13fb0 <fprintf@plt>
   1a3a4:	mov	r3, r7
   1a3a8:	mov	r2, r9
   1a3ac:	str	r9, [sp]
   1a3b0:	mov	r1, r6
   1a3b4:	mov	r0, r4
   1a3b8:	bl	18144 <__flatcc_gen_sort@@Base+0x4f4>
   1a3bc:	ldr	r0, [pc, #680]	; 1a66c <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1a3c0:	ldr	r1, [r4, #204]	; 0xcc
   1a3c4:	bl	1404c <fputs@plt>
   1a3c8:	mov	r3, r9
   1a3cc:	mov	r2, r7
   1a3d0:	str	r9, [sp]
   1a3d4:	mov	r1, r6
   1a3d8:	mov	r0, r4
   1a3dc:	bl	182d4 <__flatcc_gen_sort@@Base+0x684>
   1a3e0:	ldr	r0, [pc, #648]	; 1a670 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1a3e4:	ldr	r1, [r4, #204]	; 0xcc
   1a3e8:	bl	1404c <fputs@plt>
   1a3ec:	mov	r3, r5
   1a3f0:	mov	r2, r5
   1a3f4:	ldr	r1, [pc, #632]	; 1a674 <__flatcc_fb_gen_c_builder@@Base+0x5f0>
   1a3f8:	ldr	r0, [r4, #204]	; 0xcc
   1a3fc:	str	r5, [sp]
   1a400:	str	r5, [sp, #4]
   1a404:	bl	13fb0 <fprintf@plt>
   1a408:	ldr	r0, [pc, #616]	; 1a678 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1a40c:	ldr	r1, [r4, #204]	; 0xcc
   1a410:	bl	1404c <fputs@plt>
   1a414:	mov	r3, r9
   1a418:	mov	r2, r7
   1a41c:	str	sl, [sp]
   1a420:	mov	r1, r6
   1a424:	mov	r0, r4
   1a428:	bl	182d4 <__flatcc_gen_sort@@Base+0x684>
   1a42c:	ldr	r0, [pc, #572]	; 1a670 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1a430:	ldr	r1, [r4, #204]	; 0xcc
   1a434:	bl	1404c <fputs@plt>
   1a438:	mov	r3, r5
   1a43c:	mov	r2, r5
   1a440:	ldr	r1, [pc, #564]	; 1a67c <__flatcc_fb_gen_c_builder@@Base+0x5f8>
   1a444:	ldr	r0, [r4, #204]	; 0xcc
   1a448:	str	r5, [sp]
   1a44c:	bl	13fb0 <fprintf@plt>
   1a450:	mov	r3, r7
   1a454:	mov	r2, r9
   1a458:	str	r9, [sp]
   1a45c:	mov	r1, r6
   1a460:	mov	r0, r4
   1a464:	bl	18144 <__flatcc_gen_sort@@Base+0x4f4>
   1a468:	ldr	r0, [pc, #508]	; 1a66c <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1a46c:	ldr	r1, [r4, #204]	; 0xcc
   1a470:	bl	1404c <fputs@plt>
   1a474:	mov	r3, #2
   1a478:	mov	r2, r7
   1a47c:	str	r9, [sp]
   1a480:	mov	r1, r6
   1a484:	mov	r0, r4
   1a488:	bl	182d4 <__flatcc_gen_sort@@Base+0x684>
   1a48c:	ldr	r0, [pc, #476]	; 1a670 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1a490:	ldr	r1, [r4, #204]	; 0xcc
   1a494:	bl	1404c <fputs@plt>
   1a498:	mov	r3, r5
   1a49c:	mov	r2, r5
   1a4a0:	ldr	r1, [pc, #472]	; 1a680 <__flatcc_fb_gen_c_builder@@Base+0x5fc>
   1a4a4:	ldr	r0, [r4, #204]	; 0xcc
   1a4a8:	str	r5, [sp]
   1a4ac:	str	r5, [sp, #4]
   1a4b0:	bl	13fb0 <fprintf@plt>
   1a4b4:	ldr	r0, [pc, #444]	; 1a678 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1a4b8:	ldr	r1, [r4, #204]	; 0xcc
   1a4bc:	bl	1404c <fputs@plt>
   1a4c0:	mov	r3, #2
   1a4c4:	mov	r2, r7
   1a4c8:	str	sl, [sp]
   1a4cc:	mov	r1, r6
   1a4d0:	mov	r0, r4
   1a4d4:	bl	182d4 <__flatcc_gen_sort@@Base+0x684>
   1a4d8:	ldr	r0, [pc, #400]	; 1a670 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1a4dc:	ldr	r1, [r4, #204]	; 0xcc
   1a4e0:	bl	1404c <fputs@plt>
   1a4e4:	mov	r3, r5
   1a4e8:	mov	r2, r5
   1a4ec:	ldr	r1, [pc, #400]	; 1a684 <__flatcc_fb_gen_c_builder@@Base+0x600>
   1a4f0:	ldr	r0, [r4, #204]	; 0xcc
   1a4f4:	str	r5, [sp]
   1a4f8:	bl	13fb0 <fprintf@plt>
   1a4fc:	mov	r3, r7
   1a500:	mov	r2, r9
   1a504:	str	r9, [sp]
   1a508:	mov	r1, r6
   1a50c:	mov	r0, r4
   1a510:	bl	18144 <__flatcc_gen_sort@@Base+0x4f4>
   1a514:	ldr	r0, [pc, #336]	; 1a66c <__flatcc_fb_gen_c_builder@@Base+0x5e8>
   1a518:	ldr	r1, [r4, #204]	; 0xcc
   1a51c:	bl	1404c <fputs@plt>
   1a520:	mov	r3, sl
   1a524:	mov	r2, r7
   1a528:	str	r9, [sp]
   1a52c:	mov	r1, r6
   1a530:	mov	r0, r4
   1a534:	bl	182d4 <__flatcc_gen_sort@@Base+0x684>
   1a538:	ldr	r0, [pc, #304]	; 1a670 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1a53c:	ldr	r1, [r4, #204]	; 0xcc
   1a540:	bl	1404c <fputs@plt>
   1a544:	mov	r3, r5
   1a548:	mov	r2, r5
   1a54c:	ldr	r1, [pc, #308]	; 1a688 <__flatcc_fb_gen_c_builder@@Base+0x604>
   1a550:	ldr	r0, [r4, #204]	; 0xcc
   1a554:	str	r5, [sp]
   1a558:	str	r5, [sp, #4]
   1a55c:	bl	13fb0 <fprintf@plt>
   1a560:	ldr	r0, [pc, #272]	; 1a678 <__flatcc_fb_gen_c_builder@@Base+0x5f4>
   1a564:	ldr	r1, [r4, #204]	; 0xcc
   1a568:	bl	1404c <fputs@plt>
   1a56c:	mov	r3, sl
   1a570:	mov	r2, r7
   1a574:	str	sl, [sp]
   1a578:	mov	r1, r6
   1a57c:	mov	r0, r4
   1a580:	bl	182d4 <__flatcc_gen_sort@@Base+0x684>
   1a584:	ldr	r0, [pc, #228]	; 1a670 <__flatcc_fb_gen_c_builder@@Base+0x5ec>
   1a588:	ldr	r1, [r4, #204]	; 0xcc
   1a58c:	bl	1404c <fputs@plt>
   1a590:	ldr	r0, [r4, #204]	; 0xcc
   1a594:	str	r5, [sp, #20]
   1a598:	str	r5, [sp, #24]
   1a59c:	ldrh	r3, [r8, #104]	; 0x68
   1a5a0:	ldr	r1, [pc, #228]	; 1a68c <__flatcc_fb_gen_c_builder@@Base+0x608>
   1a5a4:	str	r3, [sp, #16]
   1a5a8:	ldrd	r2, [r8, #112]	; 0x70
   1a5ac:	str	r5, [sp]
   1a5b0:	strd	r2, [sp, #8]
   1a5b4:	mov	r3, r4
   1a5b8:	mov	r2, r4
   1a5bc:	bl	13fb0 <fprintf@plt>
   1a5c0:	mov	r0, #10
   1a5c4:	ldr	r1, [r4, #204]	; 0xcc
   1a5c8:	bl	14010 <fputc@plt>
   1a5cc:	ldr	r8, [r8, #120]	; 0x78
   1a5d0:	b	1a200 <__flatcc_fb_gen_c_builder@@Base+0x17c>
   1a5d4:	mov	r1, r9
   1a5d8:	mov	r3, #1
   1a5dc:	mov	r2, r7
   1a5e0:	mov	r0, sl
   1a5e4:	bl	17fd0 <__flatcc_gen_sort@@Base+0x380>
   1a5e8:	add	r3, r9, #1
   1a5ec:	mov	r2, r9
   1a5f0:	ldr	r1, [pc, #152]	; 1a690 <__flatcc_fb_gen_c_builder@@Base+0x60c>
   1a5f4:	ldr	r0, [r4, #204]	; 0xcc
   1a5f8:	str	r3, [sp, #36]	; 0x24
   1a5fc:	bl	13fb0 <fprintf@plt>
   1a600:	ldr	r3, [sp, #36]	; 0x24
   1a604:	mov	r9, r3
   1a608:	b	1a370 <__flatcc_fb_gen_c_builder@@Base+0x2ec>
   1a60c:	andeq	r1, r4, r6, ror r2
   1a610:	andeq	r0, r3, lr, asr #31
   1a614:	andeq	r1, r4, r1, lsr #5
   1a618:			; <UNDEFINED> instruction: 0x000412b6
   1a61c:	andeq	r7, r3, r3, lsr #2
   1a620:	andeq	r8, r3, sl, lsr #22
   1a624:	andeq	r1, r4, lr, asr #5
   1a628:	andeq	r1, r4, sp, ror #5
   1a62c:	andeq	r5, r4, fp, asr lr
   1a630:	ldrdeq	r1, [r3], -sp
   1a634:	muleq	r3, r8, r1
   1a638:	strdeq	r7, [r3], -sp
   1a63c:	strdeq	r1, [r4], -r8
   1a640:	andeq	r1, r4, sp, lsr r3
   1a644:	andeq	r6, r3, r7, asr #29
   1a648:	ldrdeq	r1, [r4], -lr
   1a64c:	andeq	r7, r3, r9, asr #3
   1a650:	andeq	r7, r3, sp, lsr #4
   1a654:	andeq	r7, r3, r8, lsl #30
   1a658:	muleq	r3, pc, pc	; <UNPREDICTABLE>
   1a65c:	andeq	r0, r3, r9, lsl #20
   1a660:	muleq	r3, sp, r6
   1a664:			; <UNDEFINED> instruction: 0x000387b6
   1a668:	andeq	r1, r4, r2, ror #6
   1a66c:	andeq	r1, r4, r8, lsl #7
   1a670:	andeq	r0, r3, r0, lsl fp
   1a674:	andeq	r1, r4, sp, lsl #7
   1a678:	andeq	r1, r4, sl, lsl #7
   1a67c:	andeq	r1, r4, r3, asr #7
   1a680:	andeq	r1, r4, pc, ror #7
   1a684:	andeq	r1, r4, fp, lsr #8
   1a688:	andeq	r1, r4, r9, asr r4
   1a68c:	muleq	r4, r7, r4
   1a690:	andeq	r8, r3, lr, lsl #3
   1a694:	mov	r2, r1
   1a698:	mov	r1, r0
   1a69c:	ldr	r0, [r0, #12]
   1a6a0:	b	14fe8 <__flatcc_fb_scoped_symbol_name@@Base>
   1a6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6a8:	sub	sp, sp, #492	; 0x1ec
   1a6ac:	mov	r4, r1
   1a6b0:	add	r6, sp, #48	; 0x30
   1a6b4:	mov	r5, r0
   1a6b8:	mov	r2, #220	; 0xdc
   1a6bc:	mov	r1, #0
   1a6c0:	mov	r0, r6
   1a6c4:	add	sl, sp, #268	; 0x10c
   1a6c8:	bl	13fc8 <memset@plt>
   1a6cc:	mov	r2, #220	; 0xdc
   1a6d0:	mov	r1, #0
   1a6d4:	mov	r0, sl
   1a6d8:	bl	13fc8 <memset@plt>
   1a6dc:	mov	r0, r4
   1a6e0:	mov	r1, r6
   1a6e4:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1a6e8:	mov	r2, r6
   1a6ec:	ldr	r1, [pc, #848]	; 1aa44 <__flatcc_fb_gen_c_builder@@Base+0x9c0>
   1a6f0:	ldr	r0, [r5, #204]	; 0xcc
   1a6f4:	bl	13fb0 <fprintf@plt>
   1a6f8:	ldr	r4, [r4, #20]
   1a6fc:	mov	r3, #1
   1a700:	cmp	r4, #0
   1a704:	ldr	r1, [r5, #204]	; 0xcc
   1a708:	bne	1a79c <__flatcc_fb_gen_c_builder@@Base+0x718>
   1a70c:	cmp	r3, #0
   1a710:	bne	1a71c <__flatcc_fb_gen_c_builder@@Base+0x698>
   1a714:	ldr	r0, [pc, #812]	; 1aa48 <__flatcc_fb_gen_c_builder@@Base+0x9c4>
   1a718:	bl	1404c <fputs@plt>
   1a71c:	ldr	r0, [pc, #808]	; 1aa4c <__flatcc_fb_gen_c_builder@@Base+0x9c8>
   1a720:	ldr	r1, [r5, #204]	; 0xcc
   1a724:	bl	1404c <fputs@plt>
   1a728:	ldr	r0, [pc, #800]	; 1aa50 <__flatcc_fb_gen_c_builder@@Base+0x9cc>
   1a72c:	ldr	r1, [r5, #204]	; 0xcc
   1a730:	bl	1404c <fputs@plt>
   1a734:	mov	r3, r6
   1a738:	mov	r2, r6
   1a73c:	ldr	r1, [pc, #784]	; 1aa54 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   1a740:	ldr	r0, [r5, #204]	; 0xcc
   1a744:	str	r6, [sp]
   1a748:	bl	13fb0 <fprintf@plt>
   1a74c:	mov	r3, r6
   1a750:	mov	r2, r6
   1a754:	ldr	r1, [pc, #764]	; 1aa58 <__flatcc_fb_gen_c_builder@@Base+0x9d4>
   1a758:	ldr	r0, [r5, #204]	; 0xcc
   1a75c:	str	r6, [sp]
   1a760:	bl	13fb0 <fprintf@plt>
   1a764:	mov	r3, r6
   1a768:	mov	r2, r6
   1a76c:	ldr	r1, [pc, #744]	; 1aa5c <__flatcc_fb_gen_c_builder@@Base+0x9d8>
   1a770:	ldr	r0, [r5, #204]	; 0xcc
   1a774:	bl	13fb0 <fprintf@plt>
   1a778:	ldr	r1, [pc, #736]	; 1aa60 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1a77c:	mov	r3, r5
   1a780:	mov	r2, r6
   1a784:	str	r6, [sp]
   1a788:	ldr	r0, [r5, #204]	; 0xcc
   1a78c:	bl	13fb0 <fprintf@plt>
   1a790:	mov	r0, #0
   1a794:	add	sp, sp, #492	; 0x1ec
   1a798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a79c:	ldrh	r2, [r4, #72]	; 0x48
   1a7a0:	tst	r2, #4
   1a7a4:	bne	1a858 <__flatcc_fb_gen_c_builder@@Base+0x7d4>
   1a7a8:	cmp	r3, #0
   1a7ac:	ldrne	r0, [pc, #688]	; 1aa64 <__flatcc_fb_gen_c_builder@@Base+0x9e0>
   1a7b0:	ldreq	r0, [pc, #688]	; 1aa68 <__flatcc_fb_gen_c_builder@@Base+0x9e4>
   1a7b4:	bl	1404c <fputs@plt>
   1a7b8:	ldrh	r3, [r4, #24]
   1a7bc:	ldrh	r7, [r4, #72]	; 0x48
   1a7c0:	sub	r3, r3, #7
   1a7c4:	ubfx	r7, r7, #8, #1
   1a7c8:	cmp	r3, #8
   1a7cc:	ldrls	pc, [pc, r3, lsl #2]
   1a7d0:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1a7d4:	strdeq	sl, [r1], -r8
   1a7d8:	andeq	sl, r1, r4, ror #17
   1a7dc:	andeq	sl, r1, r0, lsr #17
   1a7e0:	andeq	sl, r1, r8, lsl #17
   1a7e4:	andeq	sl, r1, ip, lsr r8
   1a7e8:	andeq	sl, r1, ip, lsr r8
   1a7ec:	andeq	sl, r1, ip, lsr r8
   1a7f0:			; <UNDEFINED> instruction: 0x0001a8b0
   1a7f4:	andeq	sl, r1, r4, ror #18
   1a7f8:	ldr	r0, [r4, #104]	; 0x68
   1a7fc:	cmp	r0, #0
   1a800:	beq	1a9a8 <__flatcc_fb_gen_c_builder@@Base+0x924>
   1a804:	mov	r1, sl
   1a808:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1a80c:	ldr	r3, [r4, #104]	; 0x68
   1a810:	ldrh	r3, [r3, #8]
   1a814:	cmp	r3, #0
   1a818:	bne	1a860 <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   1a81c:	ldr	r0, [r5, #204]	; 0xcc
   1a820:	str	sl, [sp, #8]
   1a824:	ldrh	r3, [r4, #74]	; 0x4a
   1a828:	str	r7, [sp]
   1a82c:	ldr	r1, [pc, #568]	; 1aa6c <__flatcc_fb_gen_c_builder@@Base+0x9e8>
   1a830:	str	r3, [sp, #4]
   1a834:	ldrd	r2, [r4, #96]	; 0x60
   1a838:	bl	13fb0 <fprintf@plt>
   1a83c:	ldr	r2, [r4, #4]
   1a840:	ldr	r1, [pc, #552]	; 1aa70 <__flatcc_fb_gen_c_builder@@Base+0x9ec>
   1a844:	ldr	r0, [r5, #204]	; 0xcc
   1a848:	ldr	r3, [r2]
   1a84c:	ldr	r2, [r2, #4]
   1a850:	bl	13fb0 <fprintf@plt>
   1a854:	mov	r3, #0
   1a858:	ldr	r4, [r4]
   1a85c:	b	1a700 <__flatcc_fb_gen_c_builder@@Base+0x67c>
   1a860:	ldrh	r3, [r4, #74]	; 0x4a
   1a864:	ldr	r0, [r5, #204]	; 0xcc
   1a868:	ldr	r1, [pc, #516]	; 1aa74 <__flatcc_fb_gen_c_builder@@Base+0x9f0>
   1a86c:	str	r3, [sp, #16]
   1a870:	ldrd	r2, [r4, #88]	; 0x58
   1a874:	str	r7, [sp]
   1a878:	strd	r2, [sp, #8]
   1a87c:	ldrd	r2, [r4, #96]	; 0x60
   1a880:	bl	13fb0 <fprintf@plt>
   1a884:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1a888:	ldr	r1, [pc, #488]	; 1aa78 <__flatcc_fb_gen_c_builder@@Base+0x9f4>
   1a88c:	str	r7, [sp]
   1a890:	ldrd	r2, [r4, #96]	; 0x60
   1a894:	ldr	r0, [r5, #204]	; 0xcc
   1a898:	bl	13fb0 <fprintf@plt>
   1a89c:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1a8a0:	ldr	r1, [pc, #468]	; 1aa7c <__flatcc_fb_gen_c_builder@@Base+0x9f8>
   1a8a4:	str	r7, [sp]
   1a8a8:	ldrd	r2, [r4, #96]	; 0x60
   1a8ac:	b	1a894 <__flatcc_fb_gen_c_builder@@Base+0x810>
   1a8b0:	mov	r1, sl
   1a8b4:	ldr	r0, [r4, #16]
   1a8b8:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1a8bc:	ldr	r3, [r4, #16]
   1a8c0:	ldrh	r3, [r3, #8]
   1a8c4:	cmp	r3, #4
   1a8c8:	ldrls	pc, [pc, r3, lsl #2]
   1a8cc:	b	1a930 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1a8d0:	andeq	sl, r1, r8, lsl #18
   1a8d4:	andeq	sl, r1, r4, ror #17
   1a8d8:	andeq	sl, r1, r0, lsr r9
   1a8dc:	andeq	sl, r1, r4, ror #17
   1a8e0:	andeq	sl, r1, r0, lsr #18
   1a8e4:	ldrh	r3, [r4, #74]	; 0x4a
   1a8e8:	ldr	r0, [r5, #204]	; 0xcc
   1a8ec:	ldr	r1, [pc, #396]	; 1aa80 <__flatcc_fb_gen_c_builder@@Base+0x9fc>
   1a8f0:	str	r3, [sp, #8]
   1a8f4:	ldrd	r2, [r4, #88]	; 0x58
   1a8f8:	strd	r2, [sp]
   1a8fc:	ldrd	r2, [r4, #96]	; 0x60
   1a900:	bl	13fb0 <fprintf@plt>
   1a904:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1a908:	ldr	r1, [pc, #372]	; 1aa84 <__flatcc_fb_gen_c_builder@@Base+0xa00>
   1a90c:	stm	sp, {r7, sl}
   1a910:	ldrd	r2, [r4, #96]	; 0x60
   1a914:	ldr	r0, [r5, #204]	; 0xcc
   1a918:	bl	13fb0 <fprintf@plt>
   1a91c:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1a920:	ldr	r1, [pc, #352]	; 1aa88 <__flatcc_fb_gen_c_builder@@Base+0xa04>
   1a924:	stm	sp, {r7, sl}
   1a928:	ldrd	r2, [r4, #96]	; 0x60
   1a92c:	b	1a914 <__flatcc_fb_gen_c_builder@@Base+0x890>
   1a930:	ldr	r3, [pc, #340]	; 1aa8c <__flatcc_fb_gen_c_builder@@Base+0xa08>
   1a934:	ldr	r0, [pc, #340]	; 1aa90 <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1a938:	ldr	r2, [pc, #340]	; 1aa94 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1a93c:	str	r3, [sp]
   1a940:	mov	r3, #178	; 0xb2
   1a944:	ldr	r1, [pc, #332]	; 1aa98 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   1a948:	ldr	r0, [r0]
   1a94c:	bl	13fb0 <fprintf@plt>
   1a950:	ldr	r3, [pc, #324]	; 1aa9c <__flatcc_fb_gen_c_builder@@Base+0xa18>
   1a954:	mov	r2, #178	; 0xb2
   1a958:	ldr	r1, [pc, #308]	; 1aa94 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1a95c:	ldr	r0, [pc, #316]	; 1aaa0 <__flatcc_fb_gen_c_builder@@Base+0xa1c>
   1a960:	bl	14070 <__assert_fail@plt>
   1a964:	mov	r1, sl
   1a968:	ldr	r0, [r4, #16]
   1a96c:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1a970:	ldr	r3, [r4, #16]
   1a974:	ldrh	r3, [r3, #8]
   1a978:	cmp	r3, #4
   1a97c:	ldrls	pc, [pc, r3, lsl #2]
   1a980:	b	1aa18 <__flatcc_fb_gen_c_builder@@Base+0x994>
   1a984:	muleq	r1, r8, r9
   1a988:	andeq	sl, r1, r8, lsr #19
   1a98c:	andeq	sl, r1, r8, lsl sl
   1a990:	andeq	sl, r1, r8, lsr #19
   1a994:	andeq	sl, r1, r8, lsl #20
   1a998:	ldr	r1, [pc, #260]	; 1aaa4 <__flatcc_fb_gen_c_builder@@Base+0xa20>
   1a99c:	stm	sp, {r7, sl}
   1a9a0:	ldrd	r2, [r4, #96]	; 0x60
   1a9a4:	b	1a914 <__flatcc_fb_gen_c_builder@@Base+0x890>
   1a9a8:	ldr	r3, [r5, #204]	; 0xcc
   1a9ac:	ldrd	r8, [r4, #88]	; 0x58
   1a9b0:	ldrh	fp, [r4, #74]	; 0x4a
   1a9b4:	str	r3, [sp, #36]	; 0x24
   1a9b8:	ldrd	r2, [r4, #96]	; 0x60
   1a9bc:	strd	r2, [sp, #40]	; 0x28
   1a9c0:	orrs	r3, r8, r9
   1a9c4:	mvneq	r0, #0
   1a9c8:	moveq	r1, #0
   1a9cc:	beq	1a9e4 <__flatcc_fb_gen_c_builder@@Base+0x960>
   1a9d0:	mov	r2, r8
   1a9d4:	mov	r3, r9
   1a9d8:	mvn	r0, #0
   1a9dc:	mov	r1, #0
   1a9e0:	bl	2e5b4 <fb_value_set_visit@@Base+0x614>
   1a9e4:	str	r7, [sp]
   1a9e8:	strd	r8, [sp, #8]
   1a9ec:	str	fp, [sp, #16]
   1a9f0:	strd	r0, [sp, #24]
   1a9f4:	ldr	r1, [pc, #172]	; 1aaa8 <__flatcc_fb_gen_c_builder@@Base+0xa24>
   1a9f8:	ldr	r0, [sp, #36]	; 0x24
   1a9fc:	ldrd	r2, [sp, #40]	; 0x28
   1aa00:	bl	13fb0 <fprintf@plt>
   1aa04:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1aa08:	ldr	r1, [pc, #156]	; 1aaac <__flatcc_fb_gen_c_builder@@Base+0xa28>
   1aa0c:	stm	sp, {r7, sl}
   1aa10:	ldrd	r2, [r4, #96]	; 0x60
   1aa14:	b	1a914 <__flatcc_fb_gen_c_builder@@Base+0x890>
   1aa18:	ldr	r3, [pc, #144]	; 1aab0 <__flatcc_fb_gen_c_builder@@Base+0xa2c>
   1aa1c:	ldr	r0, [pc, #108]	; 1aa90 <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1aa20:	ldr	r2, [pc, #108]	; 1aa94 <__flatcc_fb_gen_c_builder@@Base+0xa10>
   1aa24:	str	r3, [sp]
   1aa28:	mov	r3, #202	; 0xca
   1aa2c:	ldr	r1, [pc, #100]	; 1aa98 <__flatcc_fb_gen_c_builder@@Base+0xa14>
   1aa30:	ldr	r0, [r0]
   1aa34:	bl	13fb0 <fprintf@plt>
   1aa38:	ldr	r3, [pc, #92]	; 1aa9c <__flatcc_fb_gen_c_builder@@Base+0xa18>
   1aa3c:	mov	r2, #202	; 0xca
   1aa40:	b	1a958 <__flatcc_fb_gen_c_builder@@Base+0x8d4>
   1aa44:	andeq	r1, r4, pc, lsl r5
   1aa48:			; <UNDEFINED> instruction: 0x000418b8
   1aa4c:	andeq	r1, r4, r8, asr #17
   1aa50:	andeq	r5, r4, fp, ror r6
   1aa54:	andeq	r1, r4, r6, ror #17
   1aa58:	andeq	r1, r4, r6, lsl #19
   1aa5c:	andeq	r1, r4, r1, lsr sl
   1aa60:	andeq	r1, r4, r8, ror #21
   1aa64:	andeq	r1, r4, r5, ror #10
   1aa68:	andeq	r1, r4, r2, lsl #11
   1aa6c:	andeq	r1, r4, r9, asr #11
   1aa70:	andeq	r2, r4, sp, lsl #11
   1aa74:	andeq	r1, r4, r2, lsl r6
   1aa78:	muleq	r4, r4, r6
   1aa7c:			; <UNDEFINED> instruction: 0x000416bd
   1aa80:	andeq	r1, r4, r1, lsr #11
   1aa84:	andeq	r1, r4, sp, ror #13
   1aa88:	andeq	r1, r4, r7, lsr #14
   1aa8c:			; <UNDEFINED> instruction: 0x000417b5
   1aa90:	strheq	sl, [r5], -r0
   1aa94:	andeq	r1, r4, r3, ror #14
   1aa98:	andeq	pc, r2, sp, lsl #28
   1aa9c:	strdeq	r1, [r4], -r9
   1aaa0:	andeq	r8, r3, pc, ror #2
   1aaa4:	strdeq	r1, [r4], -r1	; <UNPREDICTABLE>
   1aaa8:	andeq	r1, r4, r2, asr r6
   1aaac:	andeq	r1, r4, r2, lsr r8
   1aab0:	andeq	r1, r4, r5, ror r8
   1aab4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aab8:	sub	sp, sp, #464	; 0x1d0
   1aabc:	mov	r4, r1
   1aac0:	mov	r5, r0
   1aac4:	mov	r2, #220	; 0xdc
   1aac8:	mov	r1, #0
   1aacc:	add	r0, sp, #24
   1aad0:	bl	13fc8 <memset@plt>
   1aad4:	mov	r2, #220	; 0xdc
   1aad8:	mov	r1, #0
   1aadc:	ldr	r8, [pc, #352]	; 1ac44 <__flatcc_fb_gen_c_builder@@Base+0xbc0>
   1aae0:	add	r0, sp, #244	; 0xf4
   1aae4:	bl	13fc8 <memset@plt>
   1aae8:	mov	r0, r4
   1aaec:	add	r1, sp, #24
   1aaf0:	ldr	r9, [pc, #336]	; 1ac48 <__flatcc_fb_gen_c_builder@@Base+0xbc4>
   1aaf4:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1aaf8:	add	r2, sp, #24
   1aafc:	ldr	r1, [pc, #328]	; 1ac4c <__flatcc_fb_gen_c_builder@@Base+0xbc8>
   1ab00:	ldr	r0, [r5]
   1ab04:	bl	13fb0 <fprintf@plt>
   1ab08:	ldr	sl, [pc, #320]	; 1ac50 <__flatcc_fb_gen_c_builder@@Base+0xbcc>
   1ab0c:	ldr	r4, [r4, #20]
   1ab10:	cmp	r4, #0
   1ab14:	bne	1ab30 <__flatcc_fb_gen_c_builder@@Base+0xaac>
   1ab18:	ldr	r1, [r5]
   1ab1c:	ldr	r0, [pc, #304]	; 1ac54 <__flatcc_fb_gen_c_builder@@Base+0xbd0>
   1ab20:	bl	1404c <fputs@plt>
   1ab24:	mov	r0, r4
   1ab28:	add	sp, sp, #464	; 0x1d0
   1ab2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ab30:	ldr	r3, [r4, #4]
   1ab34:	ldr	r7, [r3]
   1ab38:	ldr	r6, [r3, #4]
   1ab3c:	ldrh	r3, [r4, #24]
   1ab40:	cmp	r3, #10
   1ab44:	beq	1abfc <__flatcc_fb_gen_c_builder@@Base+0xb78>
   1ab48:	cmp	r3, #14
   1ab4c:	beq	1ab60 <__flatcc_fb_gen_c_builder@@Base+0xadc>
   1ab50:	cmp	r3, #0
   1ab54:	bne	1ac18 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1ab58:	ldr	r4, [r4]
   1ab5c:	b	1ab10 <__flatcc_fb_gen_c_builder@@Base+0xa8c>
   1ab60:	add	r1, sp, #244	; 0xf4
   1ab64:	ldr	r0, [r4, #16]
   1ab68:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1ab6c:	ldr	r3, [r4, #16]
   1ab70:	ldrh	r2, [r3, #8]
   1ab74:	cmp	r2, #0
   1ab78:	beq	1abb8 <__flatcc_fb_gen_c_builder@@Base+0xb34>
   1ab7c:	cmp	r2, #1
   1ab80:	beq	1abd4 <__flatcc_fb_gen_c_builder@@Base+0xb50>
   1ab84:	ldr	r3, [pc, #204]	; 1ac58 <__flatcc_fb_gen_c_builder@@Base+0xbd4>
   1ab88:	ldr	r0, [pc, #204]	; 1ac5c <__flatcc_fb_gen_c_builder@@Base+0xbd8>
   1ab8c:	ldr	r2, [pc, #204]	; 1ac60 <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   1ab90:	str	r3, [sp]
   1ab94:	mov	r3, #74	; 0x4a
   1ab98:	ldr	r1, [pc, #196]	; 1ac64 <__flatcc_fb_gen_c_builder@@Base+0xbe0>
   1ab9c:	ldr	r0, [r0]
   1aba0:	bl	13fb0 <fprintf@plt>
   1aba4:	ldr	r3, [pc, #188]	; 1ac68 <__flatcc_fb_gen_c_builder@@Base+0xbe4>
   1aba8:	mov	r2, #74	; 0x4a
   1abac:	ldr	r1, [pc, #172]	; 1ac60 <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   1abb0:	ldr	r0, [pc, #180]	; 1ac6c <__flatcc_fb_gen_c_builder@@Base+0xbe8>
   1abb4:	bl	14070 <__assert_fail@plt>
   1abb8:	add	r3, sp, #244	; 0xf4
   1abbc:	mov	r1, r9
   1abc0:	ldr	r0, [r5]
   1abc4:	strd	r6, [sp]
   1abc8:	ldr	r2, [r4, #48]	; 0x30
   1abcc:	bl	13fb0 <fprintf@plt>
   1abd0:	b	1ab58 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1abd4:	ldr	r0, [r5]
   1abd8:	mov	r1, sl
   1abdc:	strd	r6, [sp, #12]
   1abe0:	ldrh	r2, [r3, #104]	; 0x68
   1abe4:	str	r2, [sp, #8]
   1abe8:	ldrd	r2, [r3, #112]	; 0x70
   1abec:	strd	r2, [sp]
   1abf0:	ldr	r2, [r4, #48]	; 0x30
   1abf4:	bl	13fb0 <fprintf@plt>
   1abf8:	b	1ab58 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1abfc:	mov	r3, r6
   1ac00:	mov	r1, r8
   1ac04:	ldr	r0, [r5]
   1ac08:	str	r7, [sp]
   1ac0c:	ldr	r2, [r4, #48]	; 0x30
   1ac10:	bl	13fb0 <fprintf@plt>
   1ac14:	b	1ab58 <__flatcc_fb_gen_c_builder@@Base+0xad4>
   1ac18:	ldr	r3, [pc, #80]	; 1ac70 <__flatcc_fb_gen_c_builder@@Base+0xbec>
   1ac1c:	ldr	r0, [pc, #56]	; 1ac5c <__flatcc_fb_gen_c_builder@@Base+0xbd8>
   1ac20:	ldr	r2, [pc, #56]	; 1ac60 <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   1ac24:	str	r3, [sp]
   1ac28:	mov	r3, #83	; 0x53
   1ac2c:	ldr	r1, [pc, #48]	; 1ac64 <__flatcc_fb_gen_c_builder@@Base+0xbe0>
   1ac30:	ldr	r0, [r0]
   1ac34:	bl	13fb0 <fprintf@plt>
   1ac38:	ldr	r3, [pc, #40]	; 1ac68 <__flatcc_fb_gen_c_builder@@Base+0xbe4>
   1ac3c:	mov	r2, #83	; 0x53
   1ac40:	b	1abac <__flatcc_fb_gen_c_builder@@Base+0xb28>
   1ac44:	ldrdeq	r1, [r4], -ip
   1ac48:	andeq	r1, r4, r6, lsl #24
   1ac4c:	andeq	r1, r4, r6, lsr #23
   1ac50:	andeq	r1, r4, r6, asr ip
   1ac54:	andeq	r1, r4, pc, asr #26
   1ac58:	andeq	r1, r4, r0, lsr #25
   1ac5c:	strheq	sl, [r5], -r0
   1ac60:	andeq	r1, r4, r3, ror #14
   1ac64:	andeq	pc, r2, sp, lsl #28
   1ac68:	andeq	r1, r4, ip, lsl #10
   1ac6c:	andeq	r8, r3, pc, ror #2
   1ac70:	andeq	r1, r4, ip, lsl sp

0001ac74 <__flatcc_fb_gen_c_verifier@@Base>:
   1ac74:	ldr	r3, [r0, #208]	; 0xd0
   1ac78:	push	{r4, r5, r6, r7, r8, lr}
   1ac7c:	mov	r4, r0
   1ac80:	sub	sp, sp, #240	; 0xf0
   1ac84:	ldr	r1, [pc, #616]	; 1aef4 <__flatcc_fb_gen_c_verifier@@Base+0x280>
   1ac88:	ldr	r3, [r3, #164]	; 0xa4
   1ac8c:	ldr	r0, [r0, #204]	; 0xcc
   1ac90:	mov	r2, r3
   1ac94:	bl	13fb0 <fprintf@plt>
   1ac98:	ldr	r0, [pc, #600]	; 1aef8 <__flatcc_fb_gen_c_verifier@@Base+0x284>
   1ac9c:	ldr	r1, [r4, #204]	; 0xcc
   1aca0:	bl	1404c <fputs@plt>
   1aca4:	ldr	r1, [pc, #592]	; 1aefc <__flatcc_fb_gen_c_verifier@@Base+0x288>
   1aca8:	ldr	r3, [r4, #208]	; 0xd0
   1acac:	ldr	r0, [r4, #204]	; 0xcc
   1acb0:	ldr	r2, [r3, #164]	; 0xa4
   1acb4:	bl	13fb0 <fprintf@plt>
   1acb8:	ldr	r1, [pc, #576]	; 1af00 <__flatcc_fb_gen_c_verifier@@Base+0x28c>
   1acbc:	ldr	r3, [r4, #208]	; 0xd0
   1acc0:	ldr	r0, [r4, #204]	; 0xcc
   1acc4:	ldr	r2, [r3, #160]	; 0xa0
   1acc8:	bl	13fb0 <fprintf@plt>
   1accc:	ldr	r0, [pc, #560]	; 1af04 <__flatcc_fb_gen_c_verifier@@Base+0x290>
   1acd0:	ldr	r1, [r4, #204]	; 0xcc
   1acd4:	bl	1404c <fputs@plt>
   1acd8:	ldr	r0, [pc, #552]	; 1af08 <__flatcc_fb_gen_c_verifier@@Base+0x294>
   1acdc:	ldr	r1, [r4, #204]	; 0xcc
   1ace0:	bl	1404c <fputs@plt>
   1ace4:	ldr	r2, [pc, #544]	; 1af0c <__flatcc_fb_gen_c_verifier@@Base+0x298>
   1ace8:	mov	r0, r4
   1acec:	ldr	r1, [pc, #540]	; 1af10 <__flatcc_fb_gen_c_verifier@@Base+0x29c>
   1acf0:	bl	14e3c <__flatcc_fb_gen_c_includes@@Base>
   1acf4:	ldr	r3, [r4, #212]	; 0xd4
   1acf8:	ldr	r3, [r3, #140]	; 0x8c
   1acfc:	cmp	r3, #0
   1ad00:	beq	1ad10 <__flatcc_fb_gen_c_verifier@@Base+0x9c>
   1ad04:	ldr	r0, [pc, #520]	; 1af14 <__flatcc_fb_gen_c_verifier@@Base+0x2a0>
   1ad08:	ldr	r1, [r4, #204]	; 0xcc
   1ad0c:	bl	1404c <fputs@plt>
   1ad10:	mov	r0, #10
   1ad14:	ldr	r1, [r4, #204]	; 0xcc
   1ad18:	bl	14010 <fputc@plt>
   1ad1c:	mov	r2, #220	; 0xdc
   1ad20:	mov	r1, #0
   1ad24:	ldr	r6, [pc, #492]	; 1af18 <__flatcc_fb_gen_c_verifier@@Base+0x2a4>
   1ad28:	add	r0, sp, #20
   1ad2c:	bl	13fc8 <memset@plt>
   1ad30:	ldr	r3, [r4, #208]	; 0xd0
   1ad34:	ldr	r5, [r3, #40]	; 0x28
   1ad38:	cmp	r5, #0
   1ad3c:	bne	1adc8 <__flatcc_fb_gen_c_verifier@@Base+0x154>
   1ad40:	mov	r0, #10
   1ad44:	ldr	r1, [r4, #204]	; 0xcc
   1ad48:	add	r6, r4, #204	; 0xcc
   1ad4c:	bl	14010 <fputc@plt>
   1ad50:	ldr	r3, [r4, #208]	; 0xd0
   1ad54:	ldr	r5, [r3, #40]	; 0x28
   1ad58:	cmp	r5, #0
   1ad5c:	bne	1adf8 <__flatcc_fb_gen_c_verifier@@Base+0x184>
   1ad60:	ldr	r3, [r4, #208]	; 0xd0
   1ad64:	ldr	r6, [pc, #432]	; 1af1c <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1ad68:	ldr	r7, [pc, #432]	; 1af20 <__flatcc_fb_gen_c_verifier@@Base+0x2ac>
   1ad6c:	ldr	r8, [pc, #432]	; 1af24 <__flatcc_fb_gen_c_verifier@@Base+0x2b0>
   1ad70:	ldr	r5, [r3, #40]	; 0x28
   1ad74:	cmp	r5, #0
   1ad78:	bne	1ae18 <__flatcc_fb_gen_c_verifier@@Base+0x1a4>
   1ad7c:	ldr	r3, [r4, #208]	; 0xd0
   1ad80:	ldr	r5, [r3, #40]	; 0x28
   1ad84:	cmp	r5, #0
   1ad88:	bne	1aed4 <__flatcc_fb_gen_c_verifier@@Base+0x260>
   1ad8c:	ldr	r3, [r4, #212]	; 0xd4
   1ad90:	ldr	r3, [r3, #140]	; 0x8c
   1ad94:	cmp	r3, #0
   1ad98:	beq	1ada8 <__flatcc_fb_gen_c_verifier@@Base+0x134>
   1ad9c:	ldr	r0, [pc, #388]	; 1af28 <__flatcc_fb_gen_c_verifier@@Base+0x2b4>
   1ada0:	ldr	r1, [r4, #204]	; 0xcc
   1ada4:	bl	1404c <fputs@plt>
   1ada8:	ldr	r1, [pc, #380]	; 1af2c <__flatcc_fb_gen_c_verifier@@Base+0x2b8>
   1adac:	ldr	r3, [r4, #208]	; 0xd0
   1adb0:	ldr	r0, [r4, #204]	; 0xcc
   1adb4:	ldr	r2, [r3, #164]	; 0xa4
   1adb8:	bl	13fb0 <fprintf@plt>
   1adbc:	mov	r0, #0
   1adc0:	add	sp, sp, #240	; 0xf0
   1adc4:	pop	{r4, r5, r6, r7, r8, pc}
   1adc8:	ldrh	r3, [r5, #8]
   1adcc:	cmp	r3, #0
   1add0:	bne	1adf0 <__flatcc_fb_gen_c_verifier@@Base+0x17c>
   1add4:	add	r1, sp, #20
   1add8:	mov	r0, r5
   1addc:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1ade0:	add	r2, sp, #20
   1ade4:	mov	r1, r6
   1ade8:	ldr	r0, [r4, #204]	; 0xcc
   1adec:	bl	13fb0 <fprintf@plt>
   1adf0:	ldr	r5, [r5]
   1adf4:	b	1ad38 <__flatcc_fb_gen_c_verifier@@Base+0xc4>
   1adf8:	ldrh	r3, [r5, #8]
   1adfc:	cmp	r3, #4
   1ae00:	bne	1ae10 <__flatcc_fb_gen_c_verifier@@Base+0x19c>
   1ae04:	mov	r1, r5
   1ae08:	mov	r0, r6
   1ae0c:	bl	1aab4 <__flatcc_fb_gen_c_builder@@Base+0xa30>
   1ae10:	ldr	r5, [r5]
   1ae14:	b	1ad58 <__flatcc_fb_gen_c_verifier@@Base+0xe4>
   1ae18:	ldrh	r3, [r5, #8]
   1ae1c:	cmp	r3, #1
   1ae20:	bne	1aecc <__flatcc_fb_gen_c_verifier@@Base+0x258>
   1ae24:	mov	r2, #220	; 0xdc
   1ae28:	mov	r1, #0
   1ae2c:	add	r0, sp, #20
   1ae30:	bl	13fc8 <memset@plt>
   1ae34:	add	r1, sp, #20
   1ae38:	mov	r0, r5
   1ae3c:	bl	1a694 <__flatcc_fb_gen_c_builder@@Base+0x610>
   1ae40:	ldrh	r3, [r5, #104]	; 0x68
   1ae44:	mov	r1, r6
   1ae48:	ldr	r0, [r4, #204]	; 0xcc
   1ae4c:	str	r3, [sp, #8]
   1ae50:	ldrd	r2, [r5, #112]	; 0x70
   1ae54:	strd	r2, [sp]
   1ae58:	add	r3, sp, #20
   1ae5c:	mov	r2, r3
   1ae60:	bl	13fb0 <fprintf@plt>
   1ae64:	ldrh	r3, [r5, #104]	; 0x68
   1ae68:	mov	r1, r7
   1ae6c:	ldr	r0, [r4, #204]	; 0xcc
   1ae70:	str	r3, [sp, #8]
   1ae74:	ldrd	r2, [r5, #112]	; 0x70
   1ae78:	strd	r2, [sp]
   1ae7c:	add	r3, sp, #20
   1ae80:	mov	r2, r3
   1ae84:	bl	13fb0 <fprintf@plt>
   1ae88:	ldrh	r3, [r5, #104]	; 0x68
   1ae8c:	mov	r1, r8
   1ae90:	ldr	r0, [r4, #204]	; 0xcc
   1ae94:	str	r3, [sp, #8]
   1ae98:	ldrd	r2, [r5, #112]	; 0x70
   1ae9c:	strd	r2, [sp]
   1aea0:	mov	r3, r4
   1aea4:	add	r2, sp, #20
   1aea8:	bl	13fb0 <fprintf@plt>
   1aeac:	ldrh	r3, [r5, #104]	; 0x68
   1aeb0:	ldr	r0, [r4, #204]	; 0xcc
   1aeb4:	ldr	r1, [pc, #116]	; 1af30 <__flatcc_fb_gen_c_verifier@@Base+0x2bc>
   1aeb8:	str	r3, [sp, #8]
   1aebc:	ldrd	r2, [r5, #112]	; 0x70
   1aec0:	strd	r2, [sp]
   1aec4:	add	r2, sp, #20
   1aec8:	bl	13fb0 <fprintf@plt>
   1aecc:	ldr	r5, [r5]
   1aed0:	b	1ad74 <__flatcc_fb_gen_c_verifier@@Base+0x100>
   1aed4:	ldrh	r3, [r5, #8]
   1aed8:	cmp	r3, #0
   1aedc:	bne	1aeec <__flatcc_fb_gen_c_verifier@@Base+0x278>
   1aee0:	mov	r1, r5
   1aee4:	mov	r0, r4
   1aee8:	bl	1a6a4 <__flatcc_fb_gen_c_builder@@Base+0x620>
   1aeec:	ldr	r5, [r5]
   1aef0:	b	1ad84 <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1aef4:	andeq	r1, r4, pc, ror sp
   1aef8:	andeq	r0, r3, lr, asr #31
   1aefc:	andeq	r1, r4, r1, lsr #5
   1af00:			; <UNDEFINED> instruction: 0x000412b6
   1af04:	andeq	r7, r3, r3, lsr #2
   1af08:	andeq	r1, r4, ip, lsr #27
   1af0c:	ldrdeq	r1, [r4], -r1	; <UNPREDICTABLE>
   1af10:	andeq	pc, r2, sp, asr sl	; <UNPREDICTABLE>
   1af14:	ldrdeq	r1, [r3], -sp
   1af18:	ldrdeq	r1, [r4], -sp
   1af1c:	andeq	r1, r4, r2, lsr #28
   1af20:			; <UNDEFINED> instruction: 0x00041ebb
   1af24:	andeq	r1, r4, pc, asr pc
   1af28:	andeq	r6, r3, r7, asr #29
   1af2c:	andeq	r2, r4, r6, asr #1
   1af30:	andeq	r2, r4, r6, lsl r0
   1af34:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af38:	mov	r8, r3
   1af3c:	ldr	r3, [r0, #4]
   1af40:	ldr	r7, [sp, #48]	; 0x30
   1af44:	ldr	r6, [sp, #52]	; 0x34
   1af48:	cmp	r3, r1
   1af4c:	movlt	ip, #0
   1af50:	movlt	r0, ip
   1af54:	blt	1afb8 <__flatcc_fb_gen_c_verifier@@Base+0x344>
   1af58:	ldr	ip, [r0]
   1af5c:	sub	r0, r3, r1
   1af60:	mov	r3, #0
   1af64:	cmp	r0, #8
   1af68:	mvn	sl, #7
   1af6c:	movge	r0, #8
   1af70:	mov	r9, r3
   1af74:	mov	lr, r0
   1af78:	add	ip, ip, r1
   1af7c:	subs	lr, lr, #1
   1af80:	bcs	1afd0 <__flatcc_fb_gen_c_verifier@@Base+0x35c>
   1af84:	rsb	r1, r0, #8
   1af88:	mov	lr, #1
   1af8c:	stm	r2, {r3, r9}
   1af90:	lsl	r1, r1, #3
   1af94:	mov	r3, #0
   1af98:	sub	r5, r1, #32
   1af9c:	rsb	r4, r1, #32
   1afa0:	lsl	r2, lr, r1
   1afa4:	orr	r3, r3, lr, lsl r5
   1afa8:	rsbs	r2, r2, #0
   1afac:	orr	r3, r3, lr, lsr r4
   1afb0:	rsc	r3, r3, #0
   1afb4:	strd	r2, [r8]
   1afb8:	cmp	r7, #0
   1afbc:	strne	ip, [r7]
   1afc0:	cmp	r6, #0
   1afc4:	strne	r0, [r6]
   1afc8:	add	sp, sp, #12
   1afcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afd0:	ldrb	r4, [ip, lr]
   1afd4:	mov	r5, #0
   1afd8:	mul	r1, sl, lr
   1afdc:	strd	r4, [sp]
   1afe0:	add	r5, r1, #56	; 0x38
   1afe4:	add	r1, r1, #24
   1afe8:	ldr	r4, [sp]
   1afec:	rsb	fp, r5, #32
   1aff0:	lsl	r1, r4, r1
   1aff4:	orr	r3, r3, r4, lsl r5
   1aff8:	orr	r1, r1, r4, lsr fp
   1affc:	orr	r9, r1, r9
   1b000:	b	1af7c <__flatcc_fb_gen_c_verifier@@Base+0x308>
   1b004:	ldrh	r3, [r0, #24]
   1b008:	sub	r3, r3, #14
   1b00c:	cmp	r3, #1
   1b010:	ldrls	r3, [r0, #16]
   1b014:	ldrhls	r0, [r3, #8]
   1b018:	subls	r0, r0, #4
   1b01c:	clzls	r0, r0
   1b020:	lsrls	r0, r0, #5
   1b024:	movhi	r0, #0
   1b028:	bx	lr
   1b02c:	push	{r1, r2, r3}
   1b030:	push	{r0, r1, r2, r4, r5, r6, r7, r8, lr}
   1b034:	mov	r5, r0
   1b038:	ldr	r3, [r0, #212]	; 0xd4
   1b03c:	ldr	r7, [r0, #220]	; 0xdc
   1b040:	ldr	r0, [pc, #152]	; 1b0e0 <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1b044:	ldr	r4, [r3, #176]	; 0xb0
   1b048:	ldr	r6, [sp, #36]	; 0x24
   1b04c:	ldrb	r3, [r0]
   1b050:	cmp	r3, #0
   1b054:	bne	1b064 <__flatcc_fb_gen_c_verifier@@Base+0x3f0>
   1b058:	mov	r2, #64	; 0x40
   1b05c:	mov	r1, #32
   1b060:	bl	13fc8 <memset@plt>
   1b064:	ldrb	r3, [r6]
   1b068:	cmp	r3, #0
   1b06c:	beq	1b0ac <__flatcc_fb_gen_c_verifier@@Base+0x438>
   1b070:	mul	r4, r4, r7
   1b074:	ldr	r8, [pc, #104]	; 1b0e4 <__flatcc_fb_gen_c_verifier@@Base+0x470>
   1b078:	ldr	r7, [pc, #96]	; 1b0e0 <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1b07c:	cmp	r4, #64	; 0x40
   1b080:	ldr	r0, [r5, #204]	; 0xcc
   1b084:	bgt	1b0c8 <__flatcc_fb_gen_c_verifier@@Base+0x454>
   1b088:	mov	r2, r4
   1b08c:	ldr	r1, [pc, #80]	; 1b0e4 <__flatcc_fb_gen_c_verifier@@Base+0x470>
   1b090:	ldr	r3, [pc, #72]	; 1b0e0 <__flatcc_fb_gen_c_verifier@@Base+0x46c>
   1b094:	bl	13fb0 <fprintf@plt>
   1b098:	add	r2, sp, #40	; 0x28
   1b09c:	mov	r1, r6
   1b0a0:	ldr	r0, [r5, #204]	; 0xcc
   1b0a4:	str	r2, [sp, #4]
   1b0a8:	bl	14004 <vfprintf@plt>
   1b0ac:	ldr	r1, [r5, #204]	; 0xcc
   1b0b0:	mov	r0, #10
   1b0b4:	bl	14010 <fputc@plt>
   1b0b8:	add	sp, sp, #12
   1b0bc:	pop	{r4, r5, r6, r7, r8, lr}
   1b0c0:	add	sp, sp, #12
   1b0c4:	bx	lr
   1b0c8:	mov	r3, r7
   1b0cc:	mov	r2, #64	; 0x40
   1b0d0:	mov	r1, r8
   1b0d4:	sub	r4, r4, #64	; 0x40
   1b0d8:	bl	13fb0 <fprintf@plt>
   1b0dc:	b	1b07c <__flatcc_fb_gen_c_verifier@@Base+0x408>
   1b0e0:	strheq	sl, [r5], -r9
   1b0e4:	andeq	r8, r3, pc, ror r1
   1b0e8:	ldr	r1, [pc]	; 1b0f0 <__flatcc_fb_gen_c_verifier@@Base+0x47c>
   1b0ec:	b	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b0f0:	andeq	r2, r4, sl, asr #5
   1b0f4:	ldr	r1, [pc]	; 1b0fc <__flatcc_fb_gen_c_verifier@@Base+0x488>
   1b0f8:	b	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b0fc:	andeq	r2, r4, r4, lsl #6
   1b100:	b	1b0f4 <__flatcc_fb_gen_c_verifier@@Base+0x480>
   1b104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b108:	mov	r8, r2
   1b10c:	mov	r9, r3
   1b110:	sub	r6, r9, r8
   1b114:	sub	sp, sp, #44	; 0x2c
   1b118:	add	r6, r6, #1
   1b11c:	mov	r2, #0
   1b120:	mov	r3, #0
   1b124:	add	r6, r6, r6, lsr #31
   1b128:	mov	r4, r0
   1b12c:	ldr	r0, [r1]
   1b130:	mov	r5, r1
   1b134:	add	r6, r8, r6, asr #1
   1b138:	strd	r2, [sp, #24]
   1b13c:	strd	r2, [sp, #32]
   1b140:	add	r3, sp, #20
   1b144:	add	r2, sp, #24
   1b148:	lsl	fp, r6, #4
   1b14c:	ldr	r1, [sp, #80]	; 0x50
   1b150:	str	r3, [sp, #4]
   1b154:	add	r3, sp, #16
   1b158:	add	r0, r0, fp
   1b15c:	ldr	r7, [sp, #84]	; 0x54
   1b160:	str	r3, [sp]
   1b164:	add	r3, sp, #32
   1b168:	bl	1af34 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1b16c:	cmp	r0, #8
   1b170:	mov	sl, r0
   1b174:	ldrd	r2, [sp, #16]
   1b178:	bne	1b224 <__flatcc_fb_gen_c_verifier@@Base+0x5b0>
   1b17c:	ldr	r1, [pc, #592]	; 1b3d4 <__flatcc_fb_gen_c_verifier@@Base+0x760>
   1b180:	mov	r0, r4
   1b184:	str	r3, [sp]
   1b188:	str	r2, [sp, #4]
   1b18c:	ldrd	r2, [sp, #24]
   1b190:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b194:	ldr	r3, [r4, #220]	; 0xdc
   1b198:	cmp	r8, r6
   1b19c:	add	r3, r3, #1
   1b1a0:	str	r3, [r4, #220]	; 0xdc
   1b1a4:	bne	1b2e0 <__flatcc_fb_gen_c_verifier@@Base+0x66c>
   1b1a8:	ldm	r5, {r3, r6}
   1b1ac:	mov	r0, r4
   1b1b0:	ldr	r1, [r5, #12]
   1b1b4:	str	sl, [sp]
   1b1b8:	add	fp, r3, fp
   1b1bc:	ldrd	r2, [fp, #8]
   1b1c0:	blx	r6
   1b1c4:	cmp	r7, #0
   1b1c8:	ble	1b248 <__flatcc_fb_gen_c_verifier@@Base+0x5d4>
   1b1cc:	mov	r2, r7
   1b1d0:	ldr	r1, [pc, #512]	; 1b3d8 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1b1d4:	mov	r0, r4
   1b1d8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b1dc:	ldr	r3, [r4, #220]	; 0xdc
   1b1e0:	cmp	r3, #0
   1b1e4:	ldreq	r3, [pc, #496]	; 1b3dc <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1b1e8:	moveq	r2, #888	; 0x378
   1b1ec:	beq	1b218 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1b1f0:	sub	r3, r3, #1
   1b1f4:	mov	r0, r4
   1b1f8:	ldr	r1, [pc, #480]	; 1b3e0 <__flatcc_fb_gen_c_verifier@@Base+0x76c>
   1b1fc:	str	r3, [r4, #220]	; 0xdc
   1b200:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b204:	ldr	r3, [r4, #220]	; 0xdc
   1b208:	cmp	r3, #0
   1b20c:	bne	1b258 <__flatcc_fb_gen_c_verifier@@Base+0x5e4>
   1b210:	ldr	r3, [pc, #452]	; 1b3dc <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1b214:	movw	r2, #889	; 0x379
   1b218:	ldr	r1, [pc, #452]	; 1b3e4 <__flatcc_fb_gen_c_verifier@@Base+0x770>
   1b21c:	ldr	r0, [pc, #452]	; 1b3e8 <__flatcc_fb_gen_c_verifier@@Base+0x774>
   1b220:	bl	14070 <__assert_fail@plt>
   1b224:	str	r3, [sp, #8]
   1b228:	mov	r0, r4
   1b22c:	str	r2, [sp, #12]
   1b230:	ldrd	r2, [sp, #24]
   1b234:	ldr	r1, [pc, #432]	; 1b3ec <__flatcc_fb_gen_c_verifier@@Base+0x778>
   1b238:	strd	r2, [sp]
   1b23c:	ldrd	r2, [sp, #32]
   1b240:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b244:	b	1b194 <__flatcc_fb_gen_c_verifier@@Base+0x520>
   1b248:	mov	r0, r4
   1b24c:	ldr	r3, [r5, #8]
   1b250:	blx	r3
   1b254:	b	1b1dc <__flatcc_fb_gen_c_verifier@@Base+0x568>
   1b258:	sub	r3, r3, #1
   1b25c:	ldr	r1, [pc, #396]	; 1b3f0 <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1b260:	mov	r0, r4
   1b264:	str	r3, [r4, #220]	; 0xdc
   1b268:	ldr	r3, [sp, #16]
   1b26c:	ldr	r2, [sp, #20]
   1b270:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b274:	ldr	r3, [r4, #220]	; 0xdc
   1b278:	cmp	r7, #0
   1b27c:	add	r3, r3, #1
   1b280:	str	r3, [r4, #220]	; 0xdc
   1b284:	ble	1b2d0 <__flatcc_fb_gen_c_verifier@@Base+0x65c>
   1b288:	mov	r2, r7
   1b28c:	ldr	r1, [pc, #324]	; 1b3d8 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1b290:	mov	r0, r4
   1b294:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b298:	ldr	r3, [r4, #220]	; 0xdc
   1b29c:	cmp	r3, #0
   1b2a0:	ldreq	r3, [pc, #308]	; 1b3dc <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1b2a4:	movweq	r2, #910	; 0x38e
   1b2a8:	beq	1b218 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1b2ac:	sub	r3, r3, #1
   1b2b0:	mov	r0, r4
   1b2b4:	ldr	r1, [pc, #312]	; 1b3f4 <__flatcc_fb_gen_c_verifier@@Base+0x780>
   1b2b8:	str	r3, [r4, #220]	; 0xdc
   1b2bc:	ldr	r3, [sp, #16]
   1b2c0:	ldr	r2, [sp, #20]
   1b2c4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b2c8:	add	sp, sp, #44	; 0x2c
   1b2cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2d0:	mov	r0, r4
   1b2d4:	ldr	r3, [r5, #8]
   1b2d8:	blx	r3
   1b2dc:	b	1b298 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1b2e0:	cmp	r9, r6
   1b2e4:	bne	1b3b4 <__flatcc_fb_gen_c_verifier@@Base+0x740>
   1b2e8:	ldm	r5, {r3, r9}
   1b2ec:	mov	r0, r4
   1b2f0:	ldr	r1, [r5, #12]
   1b2f4:	str	sl, [sp]
   1b2f8:	add	fp, r3, fp
   1b2fc:	ldrd	r2, [fp, #8]
   1b300:	blx	r9
   1b304:	cmp	r7, #0
   1b308:	ble	1b3a4 <__flatcc_fb_gen_c_verifier@@Base+0x730>
   1b30c:	mov	r2, r7
   1b310:	ldr	r1, [pc, #192]	; 1b3d8 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1b314:	mov	r0, r4
   1b318:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b31c:	ldr	r3, [r4, #220]	; 0xdc
   1b320:	cmp	r3, #0
   1b324:	ldreq	r3, [pc, #176]	; 1b3dc <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1b328:	movweq	r2, #903	; 0x387
   1b32c:	beq	1b218 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1b330:	sub	r3, r3, #1
   1b334:	mov	r0, r4
   1b338:	ldr	r1, [pc, #160]	; 1b3e0 <__flatcc_fb_gen_c_verifier@@Base+0x76c>
   1b33c:	str	r3, [r4, #220]	; 0xdc
   1b340:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b344:	ldr	r3, [r4, #220]	; 0xdc
   1b348:	cmp	r3, #0
   1b34c:	ldreq	r3, [pc, #136]	; 1b3dc <__flatcc_fb_gen_c_verifier@@Base+0x768>
   1b350:	movweq	r2, #907	; 0x38b
   1b354:	beq	1b218 <__flatcc_fb_gen_c_verifier@@Base+0x5a4>
   1b358:	sub	r3, r3, #1
   1b35c:	mov	r0, r4
   1b360:	ldr	r1, [pc, #136]	; 1b3f0 <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1b364:	str	r3, [r4, #220]	; 0xdc
   1b368:	ldr	r3, [sp, #16]
   1b36c:	ldr	r2, [sp, #20]
   1b370:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b374:	ldr	r3, [r4, #220]	; 0xdc
   1b378:	mov	r2, r8
   1b37c:	mov	r1, r5
   1b380:	mov	r0, r4
   1b384:	add	r3, r3, #1
   1b388:	str	r3, [r4, #220]	; 0xdc
   1b38c:	ldr	r3, [sp, #80]	; 0x50
   1b390:	str	r3, [sp]
   1b394:	sub	r3, r6, #1
   1b398:	str	r7, [sp, #4]
   1b39c:	bl	1b104 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1b3a0:	b	1b298 <__flatcc_fb_gen_c_verifier@@Base+0x624>
   1b3a4:	mov	r0, r4
   1b3a8:	ldr	r3, [r5, #8]
   1b3ac:	blx	r3
   1b3b0:	b	1b31c <__flatcc_fb_gen_c_verifier@@Base+0x6a8>
   1b3b4:	ldr	r3, [sp, #80]	; 0x50
   1b3b8:	mov	r2, r6
   1b3bc:	mov	r1, r5
   1b3c0:	mov	r0, r4
   1b3c4:	stm	sp, {r3, r7}
   1b3c8:	mov	r3, r9
   1b3cc:	bl	1b104 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1b3d0:	b	1b344 <__flatcc_fb_gen_c_verifier@@Base+0x6d0>
   1b3d4:	andeq	r2, r4, r6, lsl r3
   1b3d8:	andeq	r2, r4, r1, ror #6
   1b3dc:	andeq	r2, r4, r4, ror #1
   1b3e0:	andeq	r6, r3, r1, lsr #6
   1b3e4:	andeq	r2, r4, r1, ror r3
   1b3e8:	andeq	r2, r4, r6, asr #7
   1b3ec:	andeq	r2, r4, r6, lsr r3
   1b3f0:	ldrdeq	r2, [r4], -r2	; <UNPREDICTABLE>
   1b3f4:	andeq	r2, r4, r8, ror #7
   1b3f8:	push	{r4, lr}
   1b3fc:	sub	sp, sp, #208	; 0xd0
   1b400:	mov	r4, r0
   1b404:	mov	r0, r1
   1b408:	add	r1, sp, #4
   1b40c:	bl	14f4c <__flatcc_fb_copy_scope@@Base>
   1b410:	ldr	r2, [r4, #208]	; 0xd0
   1b414:	add	r3, sp, #4
   1b418:	mov	r0, r4
   1b41c:	ldr	r1, [pc, #24]	; 1b43c <__flatcc_fb_gen_c_verifier@@Base+0x7c8>
   1b420:	ldr	r2, [r2, #160]	; 0xa0
   1b424:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b428:	ldr	r1, [pc, #16]	; 1b440 <__flatcc_fb_gen_c_verifier@@Base+0x7cc>
   1b42c:	mov	r0, r4
   1b430:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b434:	add	sp, sp, #208	; 0xd0
   1b438:	pop	{r4, pc}
   1b43c:	strdeq	r2, [r4], -r7
   1b440:	andeq	r2, r4, r3, ror #8
   1b444:	mov	r2, r1
   1b448:	mov	r1, r0
   1b44c:	ldr	r0, [r0, #12]
   1b450:	b	14fe8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b454:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b458:	sub	sp, sp, #448	; 0x1c0
   1b45c:	mov	r4, r0
   1b460:	mov	r5, r1
   1b464:	mov	r2, #220	; 0xdc
   1b468:	mov	r1, #0
   1b46c:	add	r0, sp, #8
   1b470:	bl	13fc8 <memset@plt>
   1b474:	mov	r2, #220	; 0xdc
   1b478:	mov	r1, #0
   1b47c:	add	r0, sp, #228	; 0xe4
   1b480:	bl	13fc8 <memset@plt>
   1b484:	add	r1, sp, #8
   1b488:	mov	r0, r5
   1b48c:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1b490:	add	r2, sp, #8
   1b494:	ldr	r1, [pc, #904]	; 1b824 <__flatcc_fb_gen_c_verifier@@Base+0xbb0>
   1b498:	mov	r0, r4
   1b49c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b4a0:	ldr	r1, [pc, #896]	; 1b828 <__flatcc_fb_gen_c_verifier@@Base+0xbb4>
   1b4a4:	mov	r0, r4
   1b4a8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b4ac:	ldr	r3, [r4, #220]	; 0xdc
   1b4b0:	mov	r0, r4
   1b4b4:	ldr	r1, [pc, #880]	; 1b82c <__flatcc_fb_gen_c_verifier@@Base+0xbb8>
   1b4b8:	add	r3, r3, #1
   1b4bc:	str	r3, [r4, #220]	; 0xdc
   1b4c0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b4c4:	ldr	r1, [pc, #868]	; 1b830 <__flatcc_fb_gen_c_verifier@@Base+0xbbc>
   1b4c8:	mov	r0, r4
   1b4cc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b4d0:	ldr	r1, [pc, #860]	; 1b834 <__flatcc_fb_gen_c_verifier@@Base+0xbc0>
   1b4d4:	mov	r0, r4
   1b4d8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b4dc:	ldr	r1, [pc, #852]	; 1b838 <__flatcc_fb_gen_c_verifier@@Base+0xbc4>
   1b4e0:	mov	r0, r4
   1b4e4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b4e8:	ldr	r3, [r4, #220]	; 0xdc
   1b4ec:	mov	r0, r4
   1b4f0:	ldr	r1, [pc, #836]	; 1b83c <__flatcc_fb_gen_c_verifier@@Base+0xbc8>
   1b4f4:	add	r3, r3, #1
   1b4f8:	str	r3, [r4, #220]	; 0xdc
   1b4fc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b500:	ldr	r3, [r4, #220]	; 0xdc
   1b504:	cmp	r3, #0
   1b508:	ldreq	r3, [pc, #816]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b50c:	movweq	r2, #1503	; 0x5df
   1b510:	beq	1b758 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1b514:	sub	r3, r3, #1
   1b518:	ldr	r6, [pc, #804]	; 1b844 <__flatcc_fb_gen_c_verifier@@Base+0xbd0>
   1b51c:	ldr	r8, [pc, #804]	; 1b848 <__flatcc_fb_gen_c_verifier@@Base+0xbd4>
   1b520:	ldr	r7, [pc, #804]	; 1b84c <__flatcc_fb_gen_c_verifier@@Base+0xbd8>
   1b524:	ldr	r5, [r5, #20]
   1b528:	str	r3, [r4, #220]	; 0xdc
   1b52c:	cmp	r5, #0
   1b530:	bne	1b67c <__flatcc_fb_gen_c_verifier@@Base+0xa08>
   1b534:	ldr	r1, [pc, #788]	; 1b850 <__flatcc_fb_gen_c_verifier@@Base+0xbdc>
   1b538:	mov	r0, r4
   1b53c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b540:	ldr	r3, [r4, #220]	; 0xdc
   1b544:	mov	r0, r4
   1b548:	ldr	r1, [pc, #772]	; 1b854 <__flatcc_fb_gen_c_verifier@@Base+0xbe0>
   1b54c:	add	r3, r3, #1
   1b550:	str	r3, [r4, #220]	; 0xdc
   1b554:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b558:	ldr	r3, [r4, #220]	; 0xdc
   1b55c:	mov	r0, r4
   1b560:	ldr	r1, [pc, #752]	; 1b858 <__flatcc_fb_gen_c_verifier@@Base+0xbe4>
   1b564:	add	r3, r3, #1
   1b568:	str	r3, [r4, #220]	; 0xdc
   1b56c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b570:	ldr	r3, [r4, #220]	; 0xdc
   1b574:	cmp	r3, #0
   1b578:	ldreq	r3, [pc, #704]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b57c:	movweq	r2, #1543	; 0x607
   1b580:	beq	1b758 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1b584:	sub	r3, r3, #1
   1b588:	mov	r0, r4
   1b58c:	ldr	r1, [pc, #712]	; 1b85c <__flatcc_fb_gen_c_verifier@@Base+0xbe8>
   1b590:	str	r3, [r4, #220]	; 0xdc
   1b594:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b598:	ldr	r3, [r4, #220]	; 0xdc
   1b59c:	mov	r0, r4
   1b5a0:	ldr	r1, [pc, #696]	; 1b860 <__flatcc_fb_gen_c_verifier@@Base+0xbec>
   1b5a4:	add	r3, r3, #1
   1b5a8:	str	r3, [r4, #220]	; 0xdc
   1b5ac:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b5b0:	ldr	r3, [r4, #220]	; 0xdc
   1b5b4:	cmp	r3, #0
   1b5b8:	ldreq	r3, [pc, #640]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b5bc:	movweq	r2, #1545	; 0x609
   1b5c0:	beq	1b758 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1b5c4:	sub	r3, r3, #1
   1b5c8:	mov	r0, r4
   1b5cc:	ldr	r1, [pc, #656]	; 1b864 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1b5d0:	str	r3, [r4, #220]	; 0xdc
   1b5d4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b5d8:	ldr	r3, [r4, #220]	; 0xdc
   1b5dc:	cmp	r3, #0
   1b5e0:	ldreq	r3, [pc, #600]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b5e4:	movweq	r2, #1546	; 0x60a
   1b5e8:	beq	1b758 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1b5ec:	sub	r3, r3, #1
   1b5f0:	mov	r0, r4
   1b5f4:	ldr	r1, [pc, #616]	; 1b864 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1b5f8:	str	r3, [r4, #220]	; 0xdc
   1b5fc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b600:	ldr	r1, [pc, #608]	; 1b868 <__flatcc_fb_gen_c_verifier@@Base+0xbf4>
   1b604:	mov	r0, r4
   1b608:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b60c:	ldr	r1, [pc, #600]	; 1b86c <__flatcc_fb_gen_c_verifier@@Base+0xbf8>
   1b610:	mov	r0, r4
   1b614:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b618:	ldr	r3, [r4, #220]	; 0xdc
   1b61c:	mov	r0, r4
   1b620:	ldr	r1, [pc, #584]	; 1b870 <__flatcc_fb_gen_c_verifier@@Base+0xbfc>
   1b624:	add	r3, r3, #1
   1b628:	str	r3, [r4, #220]	; 0xdc
   1b62c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b630:	ldr	r3, [r4, #220]	; 0xdc
   1b634:	cmp	r3, #0
   1b638:	ldreq	r3, [pc, #512]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b63c:	movweq	r2, #1550	; 0x60e
   1b640:	beq	1b758 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1b644:	sub	r3, r3, #1
   1b648:	mov	r0, r4
   1b64c:	ldr	r1, [pc, #528]	; 1b864 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1b650:	str	r3, [r4, #220]	; 0xdc
   1b654:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b658:	ldr	r1, [pc, #532]	; 1b874 <__flatcc_fb_gen_c_verifier@@Base+0xc00>
   1b65c:	mov	r0, r4
   1b660:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b664:	ldr	r3, [r4, #220]	; 0xdc
   1b668:	cmp	r3, #0
   1b66c:	bne	1b7f8 <__flatcc_fb_gen_c_verifier@@Base+0xb84>
   1b670:	ldr	r3, [pc, #456]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b674:	mov	r2, #1552	; 0x610
   1b678:	b	1b758 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1b67c:	ldrh	r2, [r5, #24]
   1b680:	ldr	r3, [r5, #4]
   1b684:	cmp	r2, #10
   1b688:	ldr	sl, [r3]
   1b68c:	ldr	r9, [r3, #4]
   1b690:	beq	1b770 <__flatcc_fb_gen_c_verifier@@Base+0xafc>
   1b694:	cmp	r2, #14
   1b698:	beq	1b6ac <__flatcc_fb_gen_c_verifier@@Base+0xa38>
   1b69c:	cmp	r2, #0
   1b6a0:	bne	1b7cc <__flatcc_fb_gen_c_verifier@@Base+0xb58>
   1b6a4:	ldr	r5, [r5]
   1b6a8:	b	1b52c <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   1b6ac:	add	r1, sp, #228	; 0xe4
   1b6b0:	ldr	r0, [r5, #16]
   1b6b4:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1b6b8:	mov	r3, r9
   1b6bc:	mov	r1, r6
   1b6c0:	str	sl, [sp]
   1b6c4:	mov	r0, r4
   1b6c8:	ldr	r2, [r5, #48]	; 0x30
   1b6cc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b6d0:	ldr	r3, [r4, #220]	; 0xdc
   1b6d4:	add	r3, r3, #1
   1b6d8:	str	r3, [r4, #220]	; 0xdc
   1b6dc:	ldr	r3, [r5, #16]
   1b6e0:	ldrh	r3, [r3, #8]
   1b6e4:	cmp	r3, #0
   1b6e8:	beq	1b728 <__flatcc_fb_gen_c_verifier@@Base+0xab4>
   1b6ec:	cmp	r3, #1
   1b6f0:	beq	1b764 <__flatcc_fb_gen_c_verifier@@Base+0xaf0>
   1b6f4:	ldr	r3, [pc, #380]	; 1b878 <__flatcc_fb_gen_c_verifier@@Base+0xc04>
   1b6f8:	ldr	r0, [pc, #380]	; 1b87c <__flatcc_fb_gen_c_verifier@@Base+0xc08>
   1b6fc:	ldr	r2, [pc, #380]	; 1b880 <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1b700:	str	r3, [sp]
   1b704:	movw	r3, #1522	; 0x5f2
   1b708:	ldr	r1, [pc, #372]	; 1b884 <__flatcc_fb_gen_c_verifier@@Base+0xc10>
   1b70c:	ldr	r0, [r0]
   1b710:	bl	13fb0 <fprintf@plt>
   1b714:	ldr	r3, [pc, #292]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b718:	movw	r2, #1522	; 0x5f2
   1b71c:	ldr	r1, [pc, #348]	; 1b880 <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1b720:	ldr	r0, [pc, #352]	; 1b888 <__flatcc_fb_gen_c_verifier@@Base+0xc14>
   1b724:	bl	14070 <__assert_fail@plt>
   1b728:	ldr	r1, [pc, #348]	; 1b88c <__flatcc_fb_gen_c_verifier@@Base+0xc18>
   1b72c:	add	r2, sp, #228	; 0xe4
   1b730:	mov	r0, r4
   1b734:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b738:	mov	r1, r7
   1b73c:	mov	r0, r4
   1b740:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b744:	ldr	r3, [r4, #220]	; 0xdc
   1b748:	cmp	r3, #0
   1b74c:	bne	1b7c0 <__flatcc_fb_gen_c_verifier@@Base+0xb4c>
   1b750:	ldr	r3, [pc, #232]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b754:	movw	r2, #1526	; 0x5f6
   1b758:	ldr	r1, [pc, #288]	; 1b880 <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1b75c:	ldr	r0, [pc, #300]	; 1b890 <__flatcc_fb_gen_c_verifier@@Base+0xc1c>
   1b760:	b	1b724 <__flatcc_fb_gen_c_verifier@@Base+0xab0>
   1b764:	add	r2, sp, #228	; 0xe4
   1b768:	ldr	r1, [pc, #292]	; 1b894 <__flatcc_fb_gen_c_verifier@@Base+0xc20>
   1b76c:	b	1b730 <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1b770:	mov	r3, r9
   1b774:	mov	r1, r6
   1b778:	str	sl, [sp]
   1b77c:	mov	r0, r4
   1b780:	ldr	r2, [r5, #48]	; 0x30
   1b784:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b788:	ldr	r3, [r4, #220]	; 0xdc
   1b78c:	mov	r1, r8
   1b790:	mov	r0, r4
   1b794:	add	r3, r3, #1
   1b798:	str	r3, [r4, #220]	; 0xdc
   1b79c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b7a0:	mov	r1, r7
   1b7a4:	mov	r0, r4
   1b7a8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b7ac:	ldr	r3, [r4, #220]	; 0xdc
   1b7b0:	cmp	r3, #0
   1b7b4:	ldreq	r3, [pc, #132]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b7b8:	movweq	r2, #1532	; 0x5fc
   1b7bc:	beq	1b758 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1b7c0:	sub	r3, r3, #1
   1b7c4:	str	r3, [r4, #220]	; 0xdc
   1b7c8:	b	1b6a4 <__flatcc_fb_gen_c_verifier@@Base+0xa30>
   1b7cc:	ldr	r3, [pc, #196]	; 1b898 <__flatcc_fb_gen_c_verifier@@Base+0xc24>
   1b7d0:	ldr	r0, [pc, #164]	; 1b87c <__flatcc_fb_gen_c_verifier@@Base+0xc08>
   1b7d4:	ldr	r2, [pc, #164]	; 1b880 <__flatcc_fb_gen_c_verifier@@Base+0xc0c>
   1b7d8:	str	r3, [sp]
   1b7dc:	movw	r3, #1535	; 0x5ff
   1b7e0:	ldr	r1, [pc, #156]	; 1b884 <__flatcc_fb_gen_c_verifier@@Base+0xc10>
   1b7e4:	ldr	r0, [r0]
   1b7e8:	bl	13fb0 <fprintf@plt>
   1b7ec:	ldr	r3, [pc, #76]	; 1b840 <__flatcc_fb_gen_c_verifier@@Base+0xbcc>
   1b7f0:	movw	r2, #1535	; 0x5ff
   1b7f4:	b	1b71c <__flatcc_fb_gen_c_verifier@@Base+0xaa8>
   1b7f8:	sub	r3, r3, #1
   1b7fc:	mov	r0, r4
   1b800:	ldr	r1, [pc, #92]	; 1b864 <__flatcc_fb_gen_c_verifier@@Base+0xbf0>
   1b804:	str	r3, [r4, #220]	; 0xdc
   1b808:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b80c:	ldr	r1, [pc, #24]	; 1b82c <__flatcc_fb_gen_c_verifier@@Base+0xbb8>
   1b810:	mov	r0, r4
   1b814:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b818:	mov	r0, r5
   1b81c:	add	sp, sp, #448	; 0x1c0
   1b820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b824:	muleq	r4, r6, r4
   1b828:	andeq	r4, r4, r6, lsl #30
   1b82c:	andeq	r1, r3, fp, lsr #2
   1b830:	andeq	r2, r4, r6, lsr #10
   1b834:	andeq	r2, r4, r3, lsr r5
   1b838:	andeq	r2, r4, r3, asr #10
   1b83c:	andeq	r2, r4, r6, asr r5
   1b840:	strdeq	r2, [r4], -r4
   1b844:	andeq	r2, r4, r5, lsl #11
   1b848:	andeq	r2, r4, ip, lsr r6
   1b84c:	andeq	r2, r4, r5, lsr r6
   1b850:	andeq	r2, r4, r8, lsr #13
   1b854:			; <UNDEFINED> instruction: 0x000426b1
   1b858:	andeq	r2, r4, sl, ror #13
   1b85c:	andeq	r2, r4, r6, asr #14
   1b860:	andeq	r2, r4, pc, asr #14
   1b864:	andeq	r6, r3, r1, lsr #6
   1b868:	andeq	r2, r4, r6, lsl #15
   1b86c:	andeq	r2, r4, r2, lsr #15
   1b870:			; <UNDEFINED> instruction: 0x000427b2
   1b874:	muleq	r4, r6, r7
   1b878:	strdeq	r2, [r4], -lr
   1b87c:	strheq	sl, [r5], -r0
   1b880:	andeq	r2, r4, r1, ror r3
   1b884:	andeq	pc, r2, sp, lsl #28
   1b888:	andeq	r8, r3, pc, ror #2
   1b88c:	muleq	r4, r9, r5
   1b890:	andeq	r2, r4, r6, asr #7
   1b894:	andeq	r2, r4, fp, asr #11
   1b898:	andeq	r2, r4, sl, ror r6
   1b89c:	push	{r4, r5, r6, r7, lr}
   1b8a0:	sub	sp, sp, #452	; 0x1c4
   1b8a4:	mov	r4, r0
   1b8a8:	mov	r5, r1
   1b8ac:	mov	r2, #220	; 0xdc
   1b8b0:	mov	r1, #0
   1b8b4:	add	r0, sp, #8
   1b8b8:	bl	13fc8 <memset@plt>
   1b8bc:	mov	r2, #220	; 0xdc
   1b8c0:	mov	r1, #0
   1b8c4:	ldr	r6, [pc, #284]	; 1b9e8 <__flatcc_fb_gen_c_verifier@@Base+0xd74>
   1b8c8:	add	r0, sp, #228	; 0xe4
   1b8cc:	bl	13fc8 <memset@plt>
   1b8d0:	mov	r0, r5
   1b8d4:	add	r1, sp, #8
   1b8d8:	ldr	r7, [pc, #268]	; 1b9ec <__flatcc_fb_gen_c_verifier@@Base+0xd78>
   1b8dc:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1b8e0:	add	r2, sp, #8
   1b8e4:	ldr	r1, [pc, #260]	; 1b9f0 <__flatcc_fb_gen_c_verifier@@Base+0xd7c>
   1b8e8:	mov	r0, r4
   1b8ec:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b8f0:	ldr	r1, [pc, #252]	; 1b9f4 <__flatcc_fb_gen_c_verifier@@Base+0xd80>
   1b8f4:	mov	r0, r4
   1b8f8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b8fc:	ldr	r3, [r4, #220]	; 0xdc
   1b900:	mov	r0, r4
   1b904:	ldr	r1, [pc, #236]	; 1b9f8 <__flatcc_fb_gen_c_verifier@@Base+0xd84>
   1b908:	add	r3, r3, #1
   1b90c:	str	r3, [r4, #220]	; 0xdc
   1b910:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b914:	ldr	r5, [r5, #20]
   1b918:	cmp	r5, #0
   1b91c:	bne	1b978 <__flatcc_fb_gen_c_verifier@@Base+0xd04>
   1b920:	ldr	r1, [pc, #212]	; 1b9fc <__flatcc_fb_gen_c_verifier@@Base+0xd88>
   1b924:	mov	r0, r4
   1b928:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b92c:	ldr	r3, [r4, #220]	; 0xdc
   1b930:	add	r2, r3, #1
   1b934:	cmp	r2, #0
   1b938:	ldreq	r3, [pc, #192]	; 1ba00 <__flatcc_fb_gen_c_verifier@@Base+0xd8c>
   1b93c:	str	r2, [r4, #220]	; 0xdc
   1b940:	movweq	r2, #1582	; 0x62e
   1b944:	beq	1b96c <__flatcc_fb_gen_c_verifier@@Base+0xcf8>
   1b948:	ldr	r1, [pc, #180]	; 1ba04 <__flatcc_fb_gen_c_verifier@@Base+0xd90>
   1b94c:	mov	r0, r4
   1b950:	str	r3, [r4, #220]	; 0xdc
   1b954:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b958:	ldr	r3, [r4, #220]	; 0xdc
   1b95c:	cmp	r3, #0
   1b960:	bne	1b9bc <__flatcc_fb_gen_c_verifier@@Base+0xd48>
   1b964:	ldr	r3, [pc, #148]	; 1ba00 <__flatcc_fb_gen_c_verifier@@Base+0xd8c>
   1b968:	movw	r2, #1583	; 0x62f
   1b96c:	ldr	r1, [pc, #148]	; 1ba08 <__flatcc_fb_gen_c_verifier@@Base+0xd94>
   1b970:	ldr	r0, [pc, #148]	; 1ba0c <__flatcc_fb_gen_c_verifier@@Base+0xd98>
   1b974:	bl	14070 <__assert_fail@plt>
   1b978:	ldrh	r3, [r5, #24]
   1b97c:	cmp	r3, #0
   1b980:	bne	1b998 <__flatcc_fb_gen_c_verifier@@Base+0xd24>
   1b984:	mov	r1, r7
   1b988:	mov	r0, r4
   1b98c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b990:	ldr	r5, [r5]
   1b994:	b	1b918 <__flatcc_fb_gen_c_verifier@@Base+0xca4>
   1b998:	ldr	r3, [r5, #4]
   1b99c:	mov	r1, r6
   1b9a0:	mov	r0, r4
   1b9a4:	ldr	r2, [r3]
   1b9a8:	str	r2, [sp]
   1b9ac:	ldr	r3, [r3, #4]
   1b9b0:	ldr	r2, [r5, #48]	; 0x30
   1b9b4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b9b8:	b	1b990 <__flatcc_fb_gen_c_verifier@@Base+0xd1c>
   1b9bc:	sub	r3, r3, #1
   1b9c0:	mov	r0, r4
   1b9c4:	ldr	r1, [pc, #56]	; 1ba04 <__flatcc_fb_gen_c_verifier@@Base+0xd90>
   1b9c8:	str	r3, [r4, #220]	; 0xdc
   1b9cc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b9d0:	ldr	r1, [pc, #56]	; 1ba10 <__flatcc_fb_gen_c_verifier@@Base+0xd9c>
   1b9d4:	mov	r0, r4
   1b9d8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1b9dc:	mov	r0, r5
   1b9e0:	add	sp, sp, #452	; 0x1c4
   1b9e4:	pop	{r4, r5, r6, r7, pc}
   1b9e8:	andeq	r2, r4, r8, asr r8
   1b9ec:	andeq	r2, r4, fp, lsr r8
   1b9f0:	andeq	r2, r4, r8, lsl #16
   1b9f4:	andeq	r4, r4, r6, lsl #30
   1b9f8:	andeq	r2, r4, r3, lsr r5
   1b9fc:	andeq	r2, r4, r6, ror r8
   1ba00:	andeq	r2, r4, r5, lsl #2
   1ba04:	andeq	r6, r3, r1, lsr #6
   1ba08:	andeq	r2, r4, r1, ror r3
   1ba0c:	andeq	r2, r4, r6, asr #7
   1ba10:	andeq	r1, r3, fp, lsr #2
   1ba14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba18:	sub	sp, sp, #516	; 0x204
   1ba1c:	mov	r5, r1
   1ba20:	mov	r7, r2
   1ba24:	mov	r1, #0
   1ba28:	mov	r2, #220	; 0xdc
   1ba2c:	mov	r4, r0
   1ba30:	add	r0, sp, #292	; 0x124
   1ba34:	str	r3, [sp, #36]	; 0x24
   1ba38:	bl	13fc8 <memset@plt>
   1ba3c:	add	r1, sp, #88	; 0x58
   1ba40:	ldr	r0, [r5, #12]
   1ba44:	bl	14f4c <__flatcc_fb_copy_scope@@Base>
   1ba48:	ldrh	r3, [r5, #8]
   1ba4c:	cmp	r3, #1
   1ba50:	str	r3, [sp, #76]	; 0x4c
   1ba54:	movne	r3, #0
   1ba58:	moveq	r3, #1
   1ba5c:	str	r3, [sp, #84]	; 0x54
   1ba60:	ldrh	r3, [r7, #24]
   1ba64:	sub	r3, r3, #7
   1ba68:	uxth	r2, r3
   1ba6c:	cmp	r2, #8
   1ba70:	bhi	1bc0c <__flatcc_fb_gen_c_verifier@@Base+0xf98>
   1ba74:	mov	r0, #1
   1ba78:	movw	r1, #261	; 0x105
   1ba7c:	ands	r2, r1, r0, lsl r2
   1ba80:	movne	r6, r0
   1ba84:	moveq	r6, #0
   1ba88:	cmp	r3, #8
   1ba8c:	ldrls	pc, [pc, r3, lsl #2]
   1ba90:	b	1bc3c <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
   1ba94:			; <UNDEFINED> instruction: 0x0001bbbc
   1ba98:	strdeq	fp, [r1], -ip
   1ba9c:			; <UNDEFINED> instruction: 0x0001bab8
   1baa0:			; <UNDEFINED> instruction: 0x0001bab8
   1baa4:	andeq	fp, r1, ip, lsr ip
   1baa8:	andeq	fp, r1, ip, lsr ip
   1baac:	andeq	fp, r1, ip, lsr ip
   1bab0:	andeq	fp, r1, ip, lsr fp
   1bab4:	andeq	fp, r1, ip, lsr fp
   1bab8:	mov	r5, #0
   1babc:	mov	r3, #1
   1bac0:	mov	r9, r5
   1bac4:	mov	r8, r5
   1bac8:	mov	fp, r5
   1bacc:	mov	sl, r5
   1bad0:	str	r5, [sp, #20]
   1bad4:	str	r5, [sp, #24]
   1bad8:	str	r5, [sp, #28]
   1badc:	str	r3, [sp, #32]
   1bae0:	str	r5, [sp, #40]	; 0x28
   1bae4:	ldr	r3, [sp, #20]
   1bae8:	ldr	r2, [sp, #28]
   1baec:	orrs	r3, r3, r2
   1baf0:	str	r3, [sp, #60]	; 0x3c
   1baf4:	beq	1bc9c <__flatcc_fb_gen_c_verifier@@Base+0x1028>
   1baf8:	eor	sl, r6, #1
   1bafc:	cmp	r5, #4
   1bb00:	orrne	sl, sl, #1
   1bb04:	cmp	sl, #0
   1bb08:	beq	1c434 <__flatcc_fb_gen_c_verifier@@Base+0x17c0>
   1bb0c:	ldr	r3, [pc, #2380]	; 1c460 <__flatcc_fb_gen_c_verifier@@Base+0x17ec>
   1bb10:	ldr	r0, [pc, #2380]	; 1c464 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1bb14:	ldr	r2, [pc, #2380]	; 1c468 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1bb18:	str	r3, [sp]
   1bb1c:	movw	r3, #466	; 0x1d2
   1bb20:	ldr	r1, [pc, #2372]	; 1c46c <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1bb24:	ldr	r0, [r0]
   1bb28:	bl	13fb0 <fprintf@plt>
   1bb2c:	ldr	r3, [pc, #2364]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1bb30:	movw	r2, #466	; 0x1d2
   1bb34:	ldr	r1, [pc, #2348]	; 1c468 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1bb38:	b	1be90 <__flatcc_fb_gen_c_verifier@@Base+0x121c>
   1bb3c:	add	r1, sp, #292	; 0x124
   1bb40:	ldr	r0, [r7, #16]
   1bb44:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1bb48:	ldr	r1, [r7, #16]
   1bb4c:	ldrh	r3, [r1, #8]
   1bb50:	sub	r2, r3, #3
   1bb54:	cmp	r3, #1
   1bb58:	clz	r2, r2
   1bb5c:	clz	fp, r3
   1bb60:	lsr	r2, r2, #5
   1bb64:	lsr	fp, fp, #5
   1bb68:	str	r2, [sp, #40]	; 0x28
   1bb6c:	movne	r2, #0
   1bb70:	moveq	r2, #1
   1bb74:	str	r2, [sp, #24]
   1bb78:	ldr	r2, [sp, #36]	; 0x24
   1bb7c:	cmp	r3, #4
   1bb80:	cmpeq	r2, #0
   1bb84:	moveq	r2, #1
   1bb88:	movne	r2, #0
   1bb8c:	beq	1bc64 <__flatcc_fb_gen_c_verifier@@Base+0xff0>
   1bb90:	cmp	r3, #3
   1bb94:	bne	1bc84 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
   1bb98:	mov	sl, #1
   1bb9c:	mov	r9, r2
   1bba0:	str	r2, [sp, #20]
   1bba4:	mov	r8, r2
   1bba8:	str	r2, [sp, #28]
   1bbac:	str	r2, [sp, #32]
   1bbb0:	str	sl, [sp, #40]	; 0x28
   1bbb4:	ldr	r5, [r1, #40]	; 0x28
   1bbb8:	b	1bae4 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1bbbc:	ldr	r3, [r7, #104]	; 0x68
   1bbc0:	adds	r9, r3, #0
   1bbc4:	ldrh	r3, [r7, #72]	; 0x48
   1bbc8:	movne	r9, #1
   1bbcc:	and	r2, r3, #1024	; 0x400
   1bbd0:	and	r3, r3, #2048	; 0x800
   1bbd4:	str	r2, [sp, #20]
   1bbd8:	str	r3, [sp, #28]
   1bbdc:	mov	r8, #0
   1bbe0:	mov	sl, #1
   1bbe4:	ldr	r5, [r7, #16]
   1bbe8:	mov	fp, r8
   1bbec:	str	r8, [sp, #24]
   1bbf0:	str	r8, [sp, #32]
   1bbf4:	str	r8, [sp, #40]	; 0x28
   1bbf8:	b	1bae4 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1bbfc:	mov	r9, #0
   1bc00:	str	r9, [sp, #20]
   1bc04:	str	r9, [sp, #28]
   1bc08:	b	1bbdc <__flatcc_fb_gen_c_verifier@@Base+0xf68>
   1bc0c:	mov	r6, #0
   1bc10:	mov	r5, r6
   1bc14:	mov	r9, r6
   1bc18:	mov	r8, r6
   1bc1c:	mov	fp, r6
   1bc20:	str	r6, [sp, #20]
   1bc24:	mov	sl, r6
   1bc28:	str	r6, [sp, #24]
   1bc2c:	str	r6, [sp, #28]
   1bc30:	str	r6, [sp, #32]
   1bc34:	str	r6, [sp, #40]	; 0x28
   1bc38:	b	1bae4 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1bc3c:	mov	r5, #0
   1bc40:	mov	r9, r5
   1bc44:	mov	r8, r5
   1bc48:	mov	fp, r5
   1bc4c:	str	r5, [sp, #20]
   1bc50:	str	r5, [sp, #24]
   1bc54:	str	r5, [sp, #28]
   1bc58:	mov	sl, r5
   1bc5c:	str	r5, [sp, #40]	; 0x28
   1bc60:	b	1bc7c <__flatcc_fb_gen_c_verifier@@Base+0x1008>
   1bc64:	mov	r5, #0
   1bc68:	mov	r8, #1
   1bc6c:	mov	r9, r5
   1bc70:	mov	sl, r5
   1bc74:	str	r5, [sp, #20]
   1bc78:	str	r5, [sp, #28]
   1bc7c:	str	r5, [sp, #32]
   1bc80:	b	1bae4 <__flatcc_fb_gen_c_verifier@@Base+0xe70>
   1bc84:	mov	r5, r2
   1bc88:	mov	r9, r2
   1bc8c:	str	r2, [sp, #20]
   1bc90:	mov	r8, r2
   1bc94:	str	r2, [sp, #28]
   1bc98:	b	1bc58 <__flatcc_fb_gen_c_verifier@@Base+0xfe4>
   1bc9c:	ldr	r3, [sp, #36]	; 0x24
   1bca0:	cmp	r3, #0
   1bca4:	beq	1bdbc <__flatcc_fb_gen_c_verifier@@Base+0x1148>
   1bca8:	ldr	sl, [sp, #60]	; 0x3c
   1bcac:	str	r6, [sp, #52]	; 0x34
   1bcb0:	mov	r6, sl
   1bcb4:	str	sl, [sp, #44]	; 0x2c
   1bcb8:	cmp	r9, #1
   1bcbc:	bne	1bcd8 <__flatcc_fb_gen_c_verifier@@Base+0x1064>
   1bcc0:	ldr	r1, [pc, #1964]	; 1c474 <__flatcc_fb_gen_c_verifier@@Base+0x1800>
   1bcc4:	mov	r0, r4
   1bcc8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bccc:	ldr	r3, [r4, #220]	; 0xdc
   1bcd0:	add	r3, r3, #1
   1bcd4:	str	r3, [r4, #220]	; 0xdc
   1bcd8:	ldr	r3, [pc, #1944]	; 1c478 <__flatcc_fb_gen_c_verifier@@Base+0x1804>
   1bcdc:	str	r3, [sp, #56]	; 0x38
   1bce0:	str	r3, [sp, #72]	; 0x48
   1bce4:	ldr	r3, [sp, #24]
   1bce8:	cmp	sl, #0
   1bcec:	ldr	r2, [sp, #36]	; 0x24
   1bcf0:	orr	r3, sl, r3
   1bcf4:	orr	r3, r3, r2
   1bcf8:	str	r3, [sp, #48]	; 0x30
   1bcfc:	beq	1be98 <__flatcc_fb_gen_c_verifier@@Base+0x1224>
   1bd00:	sub	r2, r5, #1
   1bd04:	cmp	r2, #10
   1bd08:	bhi	1be64 <__flatcc_fb_gen_c_verifier@@Base+0x11f0>
   1bd0c:	ldr	r3, [pc, #1896]	; 1c47c <__flatcc_fb_gen_c_verifier@@Base+0x1808>
   1bd10:	cmp	r5, #5
   1bd14:	add	r3, r3, r2, lsl #2
   1bd18:	ldr	r2, [r3, #80]	; 0x50
   1bd1c:	ldreq	r3, [pc, #1884]	; 1c480 <__flatcc_fb_gen_c_verifier@@Base+0x180c>
   1bd20:	str	r2, [sp, #56]	; 0x38
   1bd24:	ldrne	r3, [r3, #144]	; 0x90
   1bd28:	cmp	r6, #0
   1bd2c:	str	r3, [sp, #72]	; 0x48
   1bd30:	bne	1bf88 <__flatcc_fb_gen_c_verifier@@Base+0x1314>
   1bd34:	ldr	r1, [pc, #1864]	; 1c484 <__flatcc_fb_gen_c_verifier@@Base+0x1810>
   1bd38:	mov	r0, r4
   1bd3c:	ldr	r2, [sp, #72]	; 0x48
   1bd40:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bd44:	ldr	r1, [pc, #1852]	; 1c488 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   1bd48:	mov	r0, r4
   1bd4c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bd50:	ldr	r3, [r4, #220]	; 0xdc
   1bd54:	add	r3, r3, #2
   1bd58:	str	r3, [r4, #220]	; 0xdc
   1bd5c:	ldr	r3, [sp, #40]	; 0x28
   1bd60:	cmp	r3, #0
   1bd64:	beq	1bd78 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   1bd68:	add	r2, sp, #292	; 0x124
   1bd6c:	ldr	r1, [pc, #1816]	; 1c48c <__flatcc_fb_gen_c_verifier@@Base+0x1818>
   1bd70:	mov	r0, r4
   1bd74:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bd78:	ldr	r2, [r4, #208]	; 0xd0
   1bd7c:	add	r3, sp, #88	; 0x58
   1bd80:	mov	r0, r4
   1bd84:	ldr	r1, [pc, #1796]	; 1c490 <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1bd88:	ldr	r2, [r2, #160]	; 0xa0
   1bd8c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bd90:	ldr	r3, [r4, #208]	; 0xd0
   1bd94:	mov	r0, r4
   1bd98:	ldr	r1, [pc, #1780]	; 1c494 <__flatcc_fb_gen_c_verifier@@Base+0x1820>
   1bd9c:	ldr	r2, [r3, #160]	; 0xa0
   1bda0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bda4:	ldr	r3, [r4, #220]	; 0xdc
   1bda8:	cmp	r3, #0
   1bdac:	bne	1bfdc <__flatcc_fb_gen_c_verifier@@Base+0x1368>
   1bdb0:	ldr	r3, [pc, #1720]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1bdb4:	movw	r2, #539	; 0x21b
   1bdb8:	b	1bdf0 <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1bdbc:	ands	r3, r8, r6
   1bdc0:	movne	r6, #0
   1bdc4:	str	r3, [sp, #44]	; 0x2c
   1bdc8:	strne	r6, [sp, #52]	; 0x34
   1bdcc:	bne	1bcb8 <__flatcc_fb_gen_c_verifier@@Base+0x1044>
   1bdd0:	ands	r3, r8, r6
   1bdd4:	str	r3, [sp, #52]	; 0x34
   1bdd8:	b	1bcb8 <__flatcc_fb_gen_c_verifier@@Base+0x1044>
   1bddc:	ldr	r3, [r4, #220]	; 0xdc
   1bde0:	cmp	r3, #0
   1bde4:	bne	1bdfc <__flatcc_fb_gen_c_verifier@@Base+0x1188>
   1bde8:	ldr	r3, [pc, #1664]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1bdec:	movw	r2, #490	; 0x1ea
   1bdf0:	ldr	r1, [pc, #1648]	; 1c468 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1bdf4:	ldr	r0, [pc, #1692]	; 1c498 <__flatcc_fb_gen_c_verifier@@Base+0x1824>
   1bdf8:	bl	14070 <__assert_fail@plt>
   1bdfc:	sub	r3, r3, #1
   1be00:	mov	r0, r4
   1be04:	ldr	r1, [pc, #1680]	; 1c49c <__flatcc_fb_gen_c_verifier@@Base+0x1828>
   1be08:	mov	r6, #0
   1be0c:	str	r3, [r4, #220]	; 0xdc
   1be10:	mov	sl, r6
   1be14:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1be18:	ldr	r3, [r4, #220]	; 0xdc
   1be1c:	add	r1, sp, #292	; 0x124
   1be20:	ldr	r0, [r7, #104]	; 0x68
   1be24:	add	r3, r3, #1
   1be28:	str	r3, [r4, #220]	; 0xdc
   1be2c:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1be30:	ldr	r3, [r7, #104]	; 0x68
   1be34:	mov	r0, r4
   1be38:	ldr	r1, [pc, #1632]	; 1c4a0 <__flatcc_fb_gen_c_verifier@@Base+0x182c>
   1be3c:	ldrh	r3, [r3, #8]
   1be40:	cmp	r3, #0
   1be44:	ldr	r3, [sp, #24]
   1be48:	movne	r3, #1
   1be4c:	movne	r9, fp
   1be50:	mov	fp, r9
   1be54:	mov	r9, #2
   1be58:	str	r3, [sp, #24]
   1be5c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1be60:	b	1bce4 <__flatcc_fb_gen_c_verifier@@Base+0x1070>
   1be64:	ldr	r3, [pc, #1592]	; 1c4a4 <__flatcc_fb_gen_c_verifier@@Base+0x1830>
   1be68:	ldr	r0, [pc, #1524]	; 1c464 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1be6c:	ldr	r2, [pc, #1588]	; 1c4a8 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1be70:	str	r3, [sp]
   1be74:	mov	r3, #96	; 0x60
   1be78:	ldr	r1, [pc, #1516]	; 1c46c <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1be7c:	ldr	r0, [r0]
   1be80:	bl	13fb0 <fprintf@plt>
   1be84:	ldr	r3, [pc, #1568]	; 1c4ac <__flatcc_fb_gen_c_verifier@@Base+0x1838>
   1be88:	mov	r2, #96	; 0x60
   1be8c:	ldr	r1, [pc, #1556]	; 1c4a8 <__flatcc_fb_gen_c_verifier@@Base+0x1834>
   1be90:	ldr	r0, [pc, #1560]	; 1c4b0 <__flatcc_fb_gen_c_verifier@@Base+0x183c>
   1be94:	b	1bdf8 <__flatcc_fb_gen_c_verifier@@Base+0x1184>
   1be98:	cmp	r6, #0
   1be9c:	beq	1bee4 <__flatcc_fb_gen_c_verifier@@Base+0x1270>
   1bea0:	ldr	r3, [sp, #48]	; 0x30
   1bea4:	cmp	r3, #0
   1bea8:	bne	1bf88 <__flatcc_fb_gen_c_verifier@@Base+0x1314>
   1beac:	ldr	r1, [pc, #1536]	; 1c4b4 <__flatcc_fb_gen_c_verifier@@Base+0x1840>
   1beb0:	mov	r0, r4
   1beb4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1beb8:	ldr	r1, [pc, #1528]	; 1c4b8 <__flatcc_fb_gen_c_verifier@@Base+0x1844>
   1bebc:	mov	r0, r4
   1bec0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bec4:	ldr	r1, [pc, #1520]	; 1c4bc <__flatcc_fb_gen_c_verifier@@Base+0x1848>
   1bec8:	mov	r0, r4
   1becc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bed0:	ldr	r3, [r4, #220]	; 0xdc
   1bed4:	cmp	sl, #0
   1bed8:	add	r3, r3, #1
   1bedc:	str	r3, [r4, #220]	; 0xdc
   1bee0:	bne	1bd34 <__flatcc_fb_gen_c_verifier@@Base+0x10c0>
   1bee4:	ldr	r3, [sp, #48]	; 0x30
   1bee8:	cmp	r3, #0
   1beec:	movne	r3, r6
   1bef0:	moveq	r3, #0
   1bef4:	cmp	r3, #0
   1bef8:	beq	1bf08 <__flatcc_fb_gen_c_verifier@@Base+0x1294>
   1befc:	ldr	r1, [pc, #1468]	; 1c4c0 <__flatcc_fb_gen_c_verifier@@Base+0x184c>
   1bf00:	mov	r0, r4
   1bf04:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf08:	ldr	r3, [sp, #76]	; 0x4c
   1bf0c:	cmp	r3, #1
   1bf10:	bne	1bff8 <__flatcc_fb_gen_c_verifier@@Base+0x1384>
   1bf14:	ldr	r1, [pc, #1448]	; 1c4c4 <__flatcc_fb_gen_c_verifier@@Base+0x1850>
   1bf18:	mov	r0, r4
   1bf1c:	ldrd	r2, [r7, #80]	; 0x50
   1bf20:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf24:	cmp	sl, #0
   1bf28:	beq	1c1d8 <__flatcc_fb_gen_c_verifier@@Base+0x1564>
   1bf2c:	ldr	r1, [pc, #1428]	; 1c4c8 <__flatcc_fb_gen_c_verifier@@Base+0x1854>
   1bf30:	mov	r0, r4
   1bf34:	ldr	r2, [sp, #56]	; 0x38
   1bf38:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf3c:	ldr	r1, [pc, #1416]	; 1c4cc <__flatcc_fb_gen_c_verifier@@Base+0x1858>
   1bf40:	mov	r0, r4
   1bf44:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf48:	ldr	r3, [r4, #220]	; 0xdc
   1bf4c:	mov	r0, r4
   1bf50:	ldr	r1, [pc, #1400]	; 1c4d0 <__flatcc_fb_gen_c_verifier@@Base+0x185c>
   1bf54:	ldr	r2, [sp, #56]	; 0x38
   1bf58:	add	r3, r3, #1
   1bf5c:	str	r3, [r4, #220]	; 0xdc
   1bf60:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf64:	ldr	r1, [pc, #1384]	; 1c4d4 <__flatcc_fb_gen_c_verifier@@Base+0x1860>
   1bf68:	mov	r0, r4
   1bf6c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bf70:	ldr	r3, [r4, #220]	; 0xdc
   1bf74:	cmp	r3, #0
   1bf78:	bne	1c04c <__flatcc_fb_gen_c_verifier@@Base+0x13d8>
   1bf7c:	ldr	r3, [pc, #1260]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1bf80:	movw	r2, #559	; 0x22f
   1bf84:	b	1bdf0 <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1bf88:	ldrd	r2, [r7, #88]	; 0x58
   1bf8c:	strd	r2, [sp, #64]	; 0x40
   1bf90:	ldrsh	r3, [r7, #74]	; 0x4a
   1bf94:	str	r3, [sp, #80]	; 0x50
   1bf98:	ldrd	r2, [sp, #64]	; 0x40
   1bf9c:	orrs	r3, r2, r3
   1bfa0:	mvneq	r0, #0
   1bfa4:	moveq	r1, #0
   1bfa8:	beq	1bfbc <__flatcc_fb_gen_c_verifier@@Base+0x1348>
   1bfac:	mvn	r0, #0
   1bfb0:	mov	r1, #0
   1bfb4:	ldrd	r2, [sp, #64]	; 0x40
   1bfb8:	bl	2e5b4 <fb_value_set_visit@@Base+0x614>
   1bfbc:	ldr	r3, [sp, #80]	; 0x50
   1bfc0:	str	r3, [sp]
   1bfc4:	strd	r0, [sp, #8]
   1bfc8:	mov	r0, r4
   1bfcc:	ldr	r1, [pc, #1284]	; 1c4d8 <__flatcc_fb_gen_c_verifier@@Base+0x1864>
   1bfd0:	ldrd	r2, [sp, #64]	; 0x40
   1bfd4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1bfd8:	b	1beb8 <__flatcc_fb_gen_c_verifier@@Base+0x1244>
   1bfdc:	cmp	r3, #1
   1bfe0:	moveq	r3, #0
   1bfe4:	streq	r3, [r4, #220]	; 0xdc
   1bfe8:	beq	1bdb0 <__flatcc_fb_gen_c_verifier@@Base+0x113c>
   1bfec:	sub	r3, r3, #2
   1bff0:	str	r3, [r4, #220]	; 0xdc
   1bff4:	b	1bee4 <__flatcc_fb_gen_c_verifier@@Base+0x1270>
   1bff8:	ldr	r2, [sp, #24]
   1bffc:	eor	r3, r6, #1
   1c000:	tst	r3, r2
   1c004:	beq	1bf24 <__flatcc_fb_gen_c_verifier@@Base+0x12b0>
   1c008:	ldrh	r3, [r7, #74]	; 0x4a
   1c00c:	mov	r0, r4
   1c010:	ldr	r1, [pc, #1220]	; 1c4dc <__flatcc_fb_gen_c_verifier@@Base+0x1868>
   1c014:	str	r3, [sp, #8]
   1c018:	ldrd	r2, [r7, #88]	; 0x58
   1c01c:	strd	r2, [sp]
   1c020:	ldrd	r2, [r7, #96]	; 0x60
   1c024:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c028:	cmp	sl, #0
   1c02c:	bne	1bf2c <__flatcc_fb_gen_c_verifier@@Base+0x12b8>
   1c030:	add	r2, sp, #292	; 0x124
   1c034:	ldr	r1, [pc, #1188]	; 1c4e0 <__flatcc_fb_gen_c_verifier@@Base+0x186c>
   1c038:	mov	r0, r4
   1c03c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c040:	cmp	r6, #0
   1c044:	bne	1c38c <__flatcc_fb_gen_c_verifier@@Base+0x1718>
   1c048:	b	1c168 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   1c04c:	sub	r3, r3, #1
   1c050:	ldr	r1, [pc, #1164]	; 1c4e4 <__flatcc_fb_gen_c_verifier@@Base+0x1870>
   1c054:	mov	r0, r4
   1c058:	str	r3, [r4, #220]	; 0xdc
   1c05c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c060:	ldr	r3, [sp, #84]	; 0x54
   1c064:	orr	sl, r6, r3
   1c068:	ldr	r3, [sp, #60]	; 0x3c
   1c06c:	orrs	r3, r3, sl
   1c070:	bne	1c0d4 <__flatcc_fb_gen_c_verifier@@Base+0x1460>
   1c074:	ldrh	r3, [r7, #56]	; 0x38
   1c078:	sub	r3, r3, #3
   1c07c:	cmp	r3, #3
   1c080:	ldrls	pc, [pc, r3, lsl #2]
   1c084:	b	1c128 <__flatcc_fb_gen_c_verifier@@Base+0x14b4>
   1c088:	andeq	ip, r1, r4, lsl r1
   1c08c:	andeq	ip, r1, r8, lsl #2
   1c090:	muleq	r1, r8, r0
   1c094:	muleq	r1, r8, r0
   1c098:	ldr	r1, [pc, #1096]	; 1c4e8 <__flatcc_fb_gen_c_verifier@@Base+0x1874>
   1c09c:	ldrd	r2, [r7, #48]	; 0x30
   1c0a0:	mov	r0, r4
   1c0a4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c0a8:	ldr	r3, [r4, #220]	; 0xdc
   1c0ac:	mov	r0, r4
   1c0b0:	ldr	r1, [pc, #1076]	; 1c4ec <__flatcc_fb_gen_c_verifier@@Base+0x1878>
   1c0b4:	add	r3, r3, #1
   1c0b8:	str	r3, [r4, #220]	; 0xdc
   1c0bc:	ldrsh	r3, [r7, #74]	; 0x4a
   1c0c0:	str	r3, [sp, #8]
   1c0c4:	ldrd	r2, [r7, #88]	; 0x58
   1c0c8:	strd	r2, [sp]
   1c0cc:	ldrd	r2, [r7, #96]	; 0x60
   1c0d0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c0d4:	mov	r2, r4
   1c0d8:	ldr	r1, [pc, #1040]	; 1c4f0 <__flatcc_fb_gen_c_verifier@@Base+0x187c>
   1c0dc:	mov	r0, r4
   1c0e0:	ldr	r3, [sp, #56]	; 0x38
   1c0e4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c0e8:	cmp	sl, #0
   1c0ec:	bne	1c040 <__flatcc_fb_gen_c_verifier@@Base+0x13cc>
   1c0f0:	ldr	r3, [r4, #220]	; 0xdc
   1c0f4:	cmp	r3, #0
   1c0f8:	bne	1c154 <__flatcc_fb_gen_c_verifier@@Base+0x14e0>
   1c0fc:	ldr	r3, [pc, #876]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c100:	movw	r2, #602	; 0x25a
   1c104:	b	1bdf0 <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1c108:	ldr	r1, [pc, #996]	; 1c4f4 <__flatcc_fb_gen_c_verifier@@Base+0x1880>
   1c10c:	ldrd	r2, [r7, #48]	; 0x30
   1c110:	b	1c0a0 <__flatcc_fb_gen_c_verifier@@Base+0x142c>
   1c114:	ldr	r1, [pc, #988]	; 1c4f8 <__flatcc_fb_gen_c_verifier@@Base+0x1884>
   1c118:	mov	r0, r4
   1c11c:	ldrd	r2, [r7, #48]	; 0x30
   1c120:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c124:	b	1c0a8 <__flatcc_fb_gen_c_verifier@@Base+0x1434>
   1c128:	ldr	r3, [pc, #972]	; 1c4fc <__flatcc_fb_gen_c_verifier@@Base+0x1888>
   1c12c:	ldr	r0, [pc, #816]	; 1c464 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1c130:	ldr	r2, [pc, #816]	; 1c468 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1c134:	str	r3, [sp]
   1c138:	movw	r3, #590	; 0x24e
   1c13c:	ldr	r1, [pc, #808]	; 1c46c <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1c140:	ldr	r0, [r0]
   1c144:	bl	13fb0 <fprintf@plt>
   1c148:	ldr	r3, [pc, #800]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c14c:	movw	r2, #590	; 0x24e
   1c150:	b	1bb34 <__flatcc_fb_gen_c_verifier@@Base+0xec0>
   1c154:	ldr	r1, [pc, #904]	; 1c4e4 <__flatcc_fb_gen_c_verifier@@Base+0x1870>
   1c158:	sub	r3, r3, #1
   1c15c:	str	r3, [r4, #220]	; 0xdc
   1c160:	mov	r0, r4
   1c164:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c168:	cmp	r9, #1
   1c16c:	beq	1bddc <__flatcc_fb_gen_c_verifier@@Base+0x1168>
   1c170:	cmp	r9, #2
   1c174:	bne	1c404 <__flatcc_fb_gen_c_verifier@@Base+0x1790>
   1c178:	ldr	r1, [pc, #896]	; 1c500 <__flatcc_fb_gen_c_verifier@@Base+0x188c>
   1c17c:	mov	r0, r4
   1c180:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c184:	ldr	r1, [pc, #888]	; 1c504 <__flatcc_fb_gen_c_verifier@@Base+0x1890>
   1c188:	mov	r0, r4
   1c18c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c190:	ldr	r3, [r4, #220]	; 0xdc
   1c194:	cmp	r3, #0
   1c198:	ldreq	r3, [pc, #720]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c19c:	movweq	r2, #661	; 0x295
   1c1a0:	beq	1bdf0 <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1c1a4:	sub	r3, r3, #1
   1c1a8:	mov	r0, r4
   1c1ac:	ldr	r1, [pc, #852]	; 1c508 <__flatcc_fb_gen_c_verifier@@Base+0x1894>
   1c1b0:	str	r3, [r4, #220]	; 0xdc
   1c1b4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c1b8:	mov	r0, r4
   1c1bc:	ldr	r1, [pc, #840]	; 1c50c <__flatcc_fb_gen_c_verifier@@Base+0x1898>
   1c1c0:	ldrd	r2, [r7, #96]	; 0x60
   1c1c4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c1c8:	ldr	r1, [pc, #832]	; 1c510 <__flatcc_fb_gen_c_verifier@@Base+0x189c>
   1c1cc:	mov	r0, r4
   1c1d0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c1d4:	b	1c428 <__flatcc_fb_gen_c_verifier@@Base+0x17b4>
   1c1d8:	ldr	r3, [sp, #24]
   1c1dc:	cmp	r3, #0
   1c1e0:	bne	1c030 <__flatcc_fb_gen_c_verifier@@Base+0x13bc>
   1c1e4:	ldr	r3, [sp, #32]
   1c1e8:	cmp	r3, #0
   1c1ec:	beq	1c214 <__flatcc_fb_gen_c_verifier@@Base+0x15a0>
   1c1f0:	ldr	r1, [pc, #796]	; 1c514 <__flatcc_fb_gen_c_verifier@@Base+0x18a0>
   1c1f4:	mov	r0, r4
   1c1f8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c1fc:	cmp	r6, #0
   1c200:	beq	1c168 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   1c204:	ldr	r3, [sp, #48]	; 0x30
   1c208:	cmp	r3, #0
   1c20c:	beq	1c374 <__flatcc_fb_gen_c_verifier@@Base+0x1700>
   1c210:	b	1c38c <__flatcc_fb_gen_c_verifier@@Base+0x1718>
   1c214:	ldr	r3, [sp, #60]	; 0x3c
   1c218:	cmp	r3, #0
   1c21c:	beq	1c23c <__flatcc_fb_gen_c_verifier@@Base+0x15c8>
   1c220:	ldr	r3, [sp, #20]
   1c224:	ldr	r1, [pc, #748]	; 1c518 <__flatcc_fb_gen_c_verifier@@Base+0x18a4>
   1c228:	clz	r2, r3
   1c22c:	lsr	r2, r2, #5
   1c230:	mov	r0, r4
   1c234:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c238:	b	1c1fc <__flatcc_fb_gen_c_verifier@@Base+0x1588>
   1c23c:	cmp	fp, #0
   1c240:	addne	r2, sp, #292	; 0x124
   1c244:	ldrne	r1, [pc, #720]	; 1c51c <__flatcc_fb_gen_c_verifier@@Base+0x18a8>
   1c248:	bne	1c230 <__flatcc_fb_gen_c_verifier@@Base+0x15bc>
   1c24c:	cmp	r8, #0
   1c250:	beq	1c28c <__flatcc_fb_gen_c_verifier@@Base+0x1618>
   1c254:	ldr	r3, [sp, #44]	; 0x2c
   1c258:	ldrd	r0, [r7, #96]	; 0x60
   1c25c:	ldr	r2, [r7, #112]	; 0x70
   1c260:	cmp	r3, #0
   1c264:	add	r3, sp, #292	; 0x124
   1c268:	strd	r0, [sp]
   1c26c:	mov	r0, r4
   1c270:	ldrne	r1, [pc, #680]	; 1c520 <__flatcc_fb_gen_c_verifier@@Base+0x18ac>
   1c274:	str	r3, [sp, #8]
   1c278:	movne	r3, fp
   1c27c:	ldreq	r1, [pc, #672]	; 1c524 <__flatcc_fb_gen_c_verifier@@Base+0x18b0>
   1c280:	ldreq	r3, [sp, #44]	; 0x2c
   1c284:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c288:	b	1c1fc <__flatcc_fb_gen_c_verifier@@Base+0x1588>
   1c28c:	ldr	r3, [sp, #36]	; 0x24
   1c290:	cmp	r3, #0
   1c294:	beq	1c36c <__flatcc_fb_gen_c_verifier@@Base+0x16f8>
   1c298:	ldr	r1, [pc, #488]	; 1c488 <__flatcc_fb_gen_c_verifier@@Base+0x1814>
   1c29c:	mov	r0, r4
   1c2a0:	add	sl, sp, #292	; 0x124
   1c2a4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c2a8:	ldr	r3, [r4, #220]	; 0xdc
   1c2ac:	mov	r2, sl
   1c2b0:	mov	r0, r4
   1c2b4:	ldr	r1, [pc, #464]	; 1c48c <__flatcc_fb_gen_c_verifier@@Base+0x1818>
   1c2b8:	add	r3, r3, #2
   1c2bc:	str	r3, [r4, #220]	; 0xdc
   1c2c0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c2c4:	ldr	r2, [r4, #208]	; 0xd0
   1c2c8:	add	r3, sp, #88	; 0x58
   1c2cc:	mov	r0, r4
   1c2d0:	ldr	r1, [pc, #440]	; 1c490 <__flatcc_fb_gen_c_verifier@@Base+0x181c>
   1c2d4:	ldr	r2, [r2, #160]	; 0xa0
   1c2d8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c2dc:	ldr	r3, [r4, #208]	; 0xd0
   1c2e0:	mov	r0, r4
   1c2e4:	ldr	r1, [pc, #424]	; 1c494 <__flatcc_fb_gen_c_verifier@@Base+0x1820>
   1c2e8:	ldr	r2, [r3, #160]	; 0xa0
   1c2ec:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c2f0:	ldr	r3, [r4, #220]	; 0xdc
   1c2f4:	cmp	r3, #0
   1c2f8:	bne	1c308 <__flatcc_fb_gen_c_verifier@@Base+0x1694>
   1c2fc:	ldr	r3, [pc, #364]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c300:	movw	r2, #627	; 0x273
   1c304:	b	1bdf0 <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1c308:	cmp	r3, #1
   1c30c:	streq	r8, [r4, #220]	; 0xdc
   1c310:	beq	1c2fc <__flatcc_fb_gen_c_verifier@@Base+0x1688>
   1c314:	sub	r3, r3, #2
   1c318:	ldrd	r0, [r7, #96]	; 0x60
   1c31c:	ldr	r2, [r7, #112]	; 0x70
   1c320:	str	r3, [r4, #220]	; 0xdc
   1c324:	ldr	r3, [sp, #52]	; 0x34
   1c328:	cmp	r3, #0
   1c32c:	beq	1c350 <__flatcc_fb_gen_c_verifier@@Base+0x16dc>
   1c330:	mov	r3, #0
   1c334:	strd	r0, [sp]
   1c338:	mov	r0, r4
   1c33c:	ldr	r1, [pc, #484]	; 1c528 <__flatcc_fb_gen_c_verifier@@Base+0x18b4>
   1c340:	str	sl, [sp, #8]
   1c344:	str	sl, [sp, #12]
   1c348:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c34c:	b	1c040 <__flatcc_fb_gen_c_verifier@@Base+0x13cc>
   1c350:	mov	r3, #0
   1c354:	strd	r0, [sp]
   1c358:	mov	r0, r4
   1c35c:	ldr	r1, [pc, #456]	; 1c52c <__flatcc_fb_gen_c_verifier@@Base+0x18b8>
   1c360:	str	sl, [sp, #8]
   1c364:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c368:	b	1c040 <__flatcc_fb_gen_c_verifier@@Base+0x13cc>
   1c36c:	cmp	r6, #0
   1c370:	beq	1c3b0 <__flatcc_fb_gen_c_verifier@@Base+0x173c>
   1c374:	ldr	r1, [pc, #436]	; 1c530 <__flatcc_fb_gen_c_verifier@@Base+0x18bc>
   1c378:	mov	r0, r4
   1c37c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c380:	ldr	r1, [pc, #392]	; 1c510 <__flatcc_fb_gen_c_verifier@@Base+0x189c>
   1c384:	mov	r0, r4
   1c388:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c38c:	ldr	r1, [pc, #416]	; 1c534 <__flatcc_fb_gen_c_verifier@@Base+0x18c0>
   1c390:	mov	r0, r4
   1c394:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c398:	ldr	r3, [r4, #220]	; 0xdc
   1c39c:	cmp	r3, #0
   1c3a0:	bne	1c3dc <__flatcc_fb_gen_c_verifier@@Base+0x1768>
   1c3a4:	ldr	r3, [pc, #196]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c3a8:	movw	r2, #647	; 0x287
   1c3ac:	b	1bdf0 <__flatcc_fb_gen_c_verifier@@Base+0x117c>
   1c3b0:	ldr	r3, [pc, #384]	; 1c538 <__flatcc_fb_gen_c_verifier@@Base+0x18c4>
   1c3b4:	ldr	r0, [pc, #168]	; 1c464 <__flatcc_fb_gen_c_verifier@@Base+0x17f0>
   1c3b8:	ldr	r2, [pc, #168]	; 1c468 <__flatcc_fb_gen_c_verifier@@Base+0x17f4>
   1c3bc:	str	r3, [sp]
   1c3c0:	mov	r3, #636	; 0x27c
   1c3c4:	ldr	r1, [pc, #160]	; 1c46c <__flatcc_fb_gen_c_verifier@@Base+0x17f8>
   1c3c8:	ldr	r0, [r0]
   1c3cc:	bl	13fb0 <fprintf@plt>
   1c3d0:	ldr	r3, [pc, #152]	; 1c470 <__flatcc_fb_gen_c_verifier@@Base+0x17fc>
   1c3d4:	mov	r2, #636	; 0x27c
   1c3d8:	b	1bb34 <__flatcc_fb_gen_c_verifier@@Base+0xec0>
   1c3dc:	sub	r3, r3, #1
   1c3e0:	ldr	r1, [pc, #252]	; 1c4e4 <__flatcc_fb_gen_c_verifier@@Base+0x1870>
   1c3e4:	mov	r0, r4
   1c3e8:	str	r3, [r4, #220]	; 0xdc
   1c3ec:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c3f0:	ldr	r3, [sp, #48]	; 0x30
   1c3f4:	cmp	r3, #0
   1c3f8:	ldreq	r1, [pc, #316]	; 1c53c <__flatcc_fb_gen_c_verifier@@Base+0x18c8>
   1c3fc:	ldrne	r1, [pc, #316]	; 1c540 <__flatcc_fb_gen_c_verifier@@Base+0x18cc>
   1c400:	b	1c160 <__flatcc_fb_gen_c_verifier@@Base+0x14ec>
   1c404:	ldr	r2, [sp, #20]
   1c408:	ldr	r3, [sp, #32]
   1c40c:	orr	r3, r3, r2
   1c410:	ldr	r2, [sp, #28]
   1c414:	orr	r3, r3, r2
   1c418:	orr	r6, r3, r6
   1c41c:	orr	r6, r6, fp
   1c420:	orrs	r3, r6, r9
   1c424:	bne	1c1b8 <__flatcc_fb_gen_c_verifier@@Base+0x1544>
   1c428:	mov	r0, #0
   1c42c:	add	sp, sp, #516	; 0x204
   1c430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c434:	ldr	r3, [sp, #36]	; 0x24
   1c438:	cmp	r3, #0
   1c43c:	moveq	r9, r3
   1c440:	moveq	sl, r9
   1c444:	moveq	r6, sl
   1c448:	beq	1bdbc <__flatcc_fb_gen_c_verifier@@Base+0x1148>
   1c44c:	mov	r6, sl
   1c450:	mov	r9, sl
   1c454:	str	sl, [sp, #44]	; 0x2c
   1c458:	str	sl, [sp, #52]	; 0x34
   1c45c:	b	1bcd8 <__flatcc_fb_gen_c_verifier@@Base+0x1064>
   1c460:	andeq	r2, r4, sp, lsl #17
   1c464:	strheq	sl, [r5], -r0
   1c468:	andeq	r2, r4, r1, ror r3
   1c46c:	andeq	pc, r2, sp, lsl #28
   1c470:	andeq	r2, r4, fp, lsl r1
   1c474:	andeq	r2, r4, r8, asr #17
   1c478:	andeq	r2, r4, r9, lsl #17
   1c47c:	andeq	r2, r4, r4, ror #1
   1c480:	strdeq	r7, [r3], -r0
   1c484:	andeq	r2, r4, r0, lsr sl
   1c488:	andeq	r2, r4, ip, lsr sl
   1c48c:	andeq	r2, r4, r0, lsl #21
   1c490:	muleq	r4, r4, sl
   1c494:			; <UNDEFINED> instruction: 0x00042ab1
   1c498:	andeq	r2, r4, r6, asr #7
   1c49c:	strdeq	r2, [r4], -ip
   1c4a0:	andeq	r2, r4, r2, lsl r9
   1c4a4:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   1c4a8:	andeq	pc, r2, r4, asr #27
   1c4ac:	andeq	r2, r4, r0, ror #2
   1c4b0:	andeq	r8, r3, pc, ror #2
   1c4b4:	andeq	r2, r4, r3, asr r9
   1c4b8:	andeq	r2, r4, r5, ror #19
   1c4bc:	andeq	r2, r4, r1, lsr #20
   1c4c0:	ldrdeq	r2, [r4], -r2	; <UNPREDICTABLE>
   1c4c4:	andeq	r2, r4, r8, lsl fp
   1c4c8:	andeq	r2, r4, ip, asr #23
   1c4cc:	andeq	r2, r4, r7, lsl #24
   1c4d0:	andeq	r2, r4, sl, lsl ip
   1c4d4:	andeq	r2, r4, r0, ror ip
   1c4d8:	muleq	r4, r2, r9
   1c4dc:	andeq	r2, r4, r5, asr #22
   1c4e0:	muleq	r4, r4, fp
   1c4e4:	andeq	r6, r3, r1, lsr #6
   1c4e8:	muleq	r4, ip, ip
   1c4ec:	muleq	r4, r6, sp
   1c4f0:	andeq	r2, r4, r6, ror #27
   1c4f4:	andeq	r2, r4, r0, ror #25
   1c4f8:	andeq	r2, r4, r4, lsr #26
   1c4fc:	andeq	r2, r4, r7, ror #26
   1c500:	andeq	r3, r4, r5, lsr #3
   1c504:			; <UNDEFINED> instruction: 0x000431bc
   1c508:	andeq	r3, r4, ip, ror #3
   1c50c:	strdeq	r3, [r4], -pc	; <UNPREDICTABLE>
   1c510:	ldrdeq	r3, [r4], -r0
   1c514:	andeq	r2, r4, r3, lsl #28
   1c518:	andeq	r2, r4, pc, lsr lr
   1c51c:	andeq	r2, r4, ip, lsl #29
   1c520:			; <UNDEFINED> instruction: 0x00042ebc
   1c524:	andeq	r2, r4, sp, lsl pc
   1c528:	andeq	r2, r4, r7, ror pc
   1c52c:	andeq	r3, r4, sl
   1c530:	andeq	r3, r4, fp, ror r0
   1c534:	andeq	r3, r4, lr, lsl #2
   1c538:	ldrdeq	r3, [r4], -sp
   1c53c:	andeq	r3, r4, r8, asr #2
   1c540:	andeq	r3, r4, sl, ror r1
   1c544:	add	r3, r1, #4
   1c548:	mov	r2, r0
   1c54c:	ldr	r1, [pc, #4]	; 1c558 <__flatcc_fb_gen_c_verifier@@Base+0x18e4>
   1c550:	mov	r0, r3
   1c554:	b	22554 <fb_symbol_table_visit@@Base>
   1c558:	andeq	ip, r1, r0, lsl #19
   1c55c:	add	r3, r1, #4
   1c560:	mov	r2, r0
   1c564:	ldr	r1, [pc, #4]	; 1c570 <__flatcc_fb_gen_c_verifier@@Base+0x18fc>
   1c568:	mov	r0, r3
   1c56c:	b	22554 <fb_symbol_table_visit@@Base>
   1c570:	andeq	ip, r1, r4, ror #23
   1c574:	push	{r4, r5, r6, lr}
   1c578:	mov	r2, #8
   1c57c:	mov	r5, r0
   1c580:	mov	r4, r1
   1c584:	ldr	r3, [pc, #28]	; 1c5a8 <__flatcc_fb_gen_c_verifier@@Base+0x1934>
   1c588:	bl	14034 <qsort@plt>
   1c58c:	mov	r3, #0
   1c590:	cmp	r3, r4
   1c594:	popge	{r4, r5, r6, pc}
   1c598:	ldr	r2, [r5, r3, lsl #3]
   1c59c:	str	r3, [r2, #124]	; 0x7c
   1c5a0:	add	r3, r3, #1
   1c5a4:	b	1c590 <__flatcc_fb_gen_c_verifier@@Base+0x191c>
   1c5a8:	andeq	ip, r1, ip, lsr #12
   1c5ac:	push	{r4, r5, r6, lr}
   1c5b0:	ldm	r0, {r0, r5}
   1c5b4:	ldm	r1, {r1, r4}
   1c5b8:	cmp	r5, r4
   1c5bc:	movlt	r2, r5
   1c5c0:	movge	r2, r4
   1c5c4:	bl	13f14 <memcmp@plt>
   1c5c8:	cmp	r0, #0
   1c5cc:	subeq	r0, r5, r4
   1c5d0:	pop	{r4, r5, r6, pc}
   1c5d4:	cmp	r0, #0
   1c5d8:	bxeq	lr
   1c5dc:	b	13ef0 <free@plt>
   1c5e0:	push	{r4, lr}
   1c5e4:	mov	r4, r0
   1c5e8:	ldr	r0, [r0, #16]
   1c5ec:	cmp	r0, #0
   1c5f0:	beq	1c5f8 <__flatcc_fb_gen_c_verifier@@Base+0x1984>
   1c5f4:	bl	13ef0 <free@plt>
   1c5f8:	ldr	r0, [r4, #20]
   1c5fc:	cmp	r0, #0
   1c600:	beq	1c608 <__flatcc_fb_gen_c_verifier@@Base+0x1994>
   1c604:	bl	13ef0 <free@plt>
   1c608:	ldr	r0, [r4, #24]
   1c60c:	cmp	r0, #0
   1c610:	beq	1c618 <__flatcc_fb_gen_c_verifier@@Base+0x19a4>
   1c614:	bl	13ef0 <free@plt>
   1c618:	mov	r0, r4
   1c61c:	mov	r2, #44	; 0x2c
   1c620:	pop	{r4, lr}
   1c624:	mov	r1, #0
   1c628:	b	13fc8 <memset@plt>
   1c62c:	ldr	r0, [r0, #4]
   1c630:	ldr	r1, [r1, #4]
   1c634:	b	13ed8 <strcmp@plt>
   1c638:	push	{r0, r1, r4, r5, r6, lr}
   1c63c:	mov	r4, r0
   1c640:	mov	r6, r1
   1c644:	mov	r5, r2
   1c648:	ldr	r1, [pc, #248]	; 1c748 <__flatcc_fb_gen_c_verifier@@Base+0x1ad4>
   1c64c:	ldr	r2, [sp, #24]
   1c650:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c654:	ldr	r1, [pc, #240]	; 1c74c <__flatcc_fb_gen_c_verifier@@Base+0x1ad8>
   1c658:	mov	r0, r4
   1c65c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c660:	ldr	r3, [r4, #220]	; 0xdc
   1c664:	add	r3, r3, #1
   1c668:	str	r3, [r4, #220]	; 0xdc
   1c66c:	ldr	r3, [r6, #40]	; 0x28
   1c670:	sub	r3, r3, #1
   1c674:	cmp	r3, #8
   1c678:	ldrls	pc, [pc, r3, lsl #2]
   1c67c:	b	1c6ec <__flatcc_fb_gen_c_verifier@@Base+0x1a78>
   1c680:	andeq	ip, r1, r4, lsr #13
   1c684:	andeq	ip, r1, r4, lsr #13
   1c688:	andeq	ip, r1, r4, lsr #13
   1c68c:	andeq	ip, r1, r4, lsr #13
   1c690:	andeq	ip, r1, r4, lsr #13
   1c694:			; <UNDEFINED> instruction: 0x0001c6b0
   1c698:			; <UNDEFINED> instruction: 0x0001c6b0
   1c69c:			; <UNDEFINED> instruction: 0x0001c6b0
   1c6a0:			; <UNDEFINED> instruction: 0x0001c6b0
   1c6a4:	ldrd	r2, [r5, #48]	; 0x30
   1c6a8:	ldr	r1, [pc, #160]	; 1c750 <__flatcc_fb_gen_c_verifier@@Base+0x1adc>
   1c6ac:	b	1c6c4 <__flatcc_fb_gen_c_verifier@@Base+0x1a50>
   1c6b0:	ldrd	r2, [r5, #48]	; 0x30
   1c6b4:	cmp	r2, #0
   1c6b8:	sbcs	r1, r3, #0
   1c6bc:	ldrlt	r1, [pc, #144]	; 1c754 <__flatcc_fb_gen_c_verifier@@Base+0x1ae0>
   1c6c0:	bge	1c6a8 <__flatcc_fb_gen_c_verifier@@Base+0x1a34>
   1c6c4:	mov	r0, r4
   1c6c8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c6cc:	ldr	r3, [r4, #220]	; 0xdc
   1c6d0:	cmp	r3, #0
   1c6d4:	bne	1c720 <__flatcc_fb_gen_c_verifier@@Base+0x1aac>
   1c6d8:	ldr	r3, [pc, #120]	; 1c758 <__flatcc_fb_gen_c_verifier@@Base+0x1ae4>
   1c6dc:	movw	r2, #719	; 0x2cf
   1c6e0:	ldr	r1, [pc, #116]	; 1c75c <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1c6e4:	ldr	r0, [pc, #116]	; 1c760 <__flatcc_fb_gen_c_verifier@@Base+0x1aec>
   1c6e8:	b	1c71c <__flatcc_fb_gen_c_verifier@@Base+0x1aa8>
   1c6ec:	ldr	r3, [pc, #112]	; 1c764 <__flatcc_fb_gen_c_verifier@@Base+0x1af0>
   1c6f0:	ldr	r0, [pc, #112]	; 1c768 <__flatcc_fb_gen_c_verifier@@Base+0x1af4>
   1c6f4:	ldr	r2, [pc, #96]	; 1c75c <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1c6f8:	str	r3, [sp]
   1c6fc:	movw	r3, #710	; 0x2c6
   1c700:	ldr	r1, [pc, #100]	; 1c76c <__flatcc_fb_gen_c_verifier@@Base+0x1af8>
   1c704:	ldr	r0, [r0]
   1c708:	bl	13fb0 <fprintf@plt>
   1c70c:	ldr	r3, [pc, #92]	; 1c770 <__flatcc_fb_gen_c_verifier@@Base+0x1afc>
   1c710:	movw	r2, #710	; 0x2c6
   1c714:	ldr	r1, [pc, #64]	; 1c75c <__flatcc_fb_gen_c_verifier@@Base+0x1ae8>
   1c718:	ldr	r0, [pc, #84]	; 1c774 <__flatcc_fb_gen_c_verifier@@Base+0x1b00>
   1c71c:	bl	14070 <__assert_fail@plt>
   1c720:	sub	r3, r3, #1
   1c724:	ldr	r1, [pc, #76]	; 1c778 <__flatcc_fb_gen_c_verifier@@Base+0x1b04>
   1c728:	mov	r0, r4
   1c72c:	str	r3, [r4, #220]	; 0xdc
   1c730:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c734:	ldr	r3, [r4, #220]	; 0xdc
   1c738:	add	r3, r3, #1
   1c73c:	str	r3, [r4, #220]	; 0xdc
   1c740:	add	sp, sp, #8
   1c744:	pop	{r4, r5, r6, pc}
   1c748:	andeq	r3, r4, r3, asr r2
   1c74c:	andeq	r3, r4, r3, lsr #5
   1c750:			; <UNDEFINED> instruction: 0x000432b6
   1c754:	andeq	r3, r4, r0, ror #5
   1c758:			; <UNDEFINED> instruction: 0x000421b7
   1c75c:	andeq	r2, r4, r1, ror r3
   1c760:	andeq	r2, r4, r6, asr #7
   1c764:	andeq	r3, r4, sl, lsl #6
   1c768:	strheq	sl, [r5], -r0
   1c76c:	andeq	pc, r2, sp, lsl #28
   1c770:	andeq	r2, r4, r0, lsr #3
   1c774:	andeq	r8, r3, pc, ror #2
   1c778:	andeq	r2, r4, r6, asr #14
   1c77c:	push	{r4, r5, lr}
   1c780:	sub	sp, sp, #228	; 0xe4
   1c784:	mov	r4, r0
   1c788:	mov	r5, r2
   1c78c:	ldr	r1, [pc, #180]	; 1c848 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   1c790:	ldr	r2, [sp, #240]	; 0xf0
   1c794:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c798:	ldr	r1, [pc, #172]	; 1c84c <__flatcc_fb_gen_c_verifier@@Base+0x1bd8>
   1c79c:	mov	r0, r4
   1c7a0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c7a4:	ldr	r3, [r4, #220]	; 0xdc
   1c7a8:	add	r3, r3, #1
   1c7ac:	str	r3, [r4, #220]	; 0xdc
   1c7b0:	ldrh	r3, [r5, #8]
   1c7b4:	sub	r3, r3, #3
   1c7b8:	cmp	r3, #1
   1c7bc:	bls	1c7d4 <__flatcc_fb_gen_c_verifier@@Base+0x1b60>
   1c7c0:	ldr	r3, [pc, #136]	; 1c850 <__flatcc_fb_gen_c_verifier@@Base+0x1bdc>
   1c7c4:	movw	r2, #729	; 0x2d9
   1c7c8:	ldr	r1, [pc, #132]	; 1c854 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   1c7cc:	ldr	r0, [pc, #132]	; 1c858 <__flatcc_fb_gen_c_verifier@@Base+0x1be4>
   1c7d0:	bl	14070 <__assert_fail@plt>
   1c7d4:	mov	r2, #220	; 0xdc
   1c7d8:	mov	r1, #0
   1c7dc:	add	r0, sp, #4
   1c7e0:	bl	13fc8 <memset@plt>
   1c7e4:	add	r1, sp, #4
   1c7e8:	mov	r0, r5
   1c7ec:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1c7f0:	add	r2, sp, #4
   1c7f4:	ldr	r1, [pc, #96]	; 1c85c <__flatcc_fb_gen_c_verifier@@Base+0x1be8>
   1c7f8:	mov	r0, r4
   1c7fc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c800:	ldr	r3, [r4, #220]	; 0xdc
   1c804:	cmp	r3, #0
   1c808:	bne	1c820 <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   1c80c:	ldr	r3, [pc, #76]	; 1c860 <__flatcc_fb_gen_c_verifier@@Base+0x1bec>
   1c810:	movw	r2, #742	; 0x2e6
   1c814:	ldr	r1, [pc, #56]	; 1c854 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   1c818:	ldr	r0, [pc, #68]	; 1c864 <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
   1c81c:	b	1c7d0 <__flatcc_fb_gen_c_verifier@@Base+0x1b5c>
   1c820:	sub	r3, r3, #1
   1c824:	ldr	r1, [pc, #60]	; 1c868 <__flatcc_fb_gen_c_verifier@@Base+0x1bf4>
   1c828:	mov	r0, r4
   1c82c:	str	r3, [r4, #220]	; 0xdc
   1c830:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c834:	ldr	r3, [r4, #220]	; 0xdc
   1c838:	add	r3, r3, #1
   1c83c:	str	r3, [r4, #220]	; 0xdc
   1c840:	add	sp, sp, #228	; 0xe4
   1c844:	pop	{r4, r5, pc}
   1c848:	andeq	r3, r4, sp, lsr #6
   1c84c:	andeq	r3, r4, r3, lsr #5
   1c850:	andeq	r2, r4, r6, asr #3
   1c854:	andeq	r2, r4, r1, ror r3
   1c858:	andeq	pc, r2, fp, ror lr	; <UNPREDICTABLE>
   1c85c:	andeq	r3, r4, pc, ror #6
   1c860:	ldrdeq	r2, [r4], -lr
   1c864:	andeq	r2, r4, r6, asr #7
   1c868:	andeq	r2, r4, r6, asr #14
   1c86c:	push	{r4, r5, r6, r7, r8, lr}
   1c870:	mov	r4, r0
   1c874:	mov	r5, r1
   1c878:	mov	r6, r2
   1c87c:	mov	r7, r3
   1c880:	ldr	r1, [pc, #116]	; 1c8fc <__flatcc_fb_gen_c_verifier@@Base+0x1c88>
   1c884:	ldr	r2, [sp, #24]
   1c888:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c88c:	ldr	r1, [pc, #108]	; 1c900 <__flatcc_fb_gen_c_verifier@@Base+0x1c8c>
   1c890:	mov	r0, r4
   1c894:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c898:	ldr	r2, [r4, #220]	; 0xdc
   1c89c:	mov	r3, r7
   1c8a0:	mov	r1, r5
   1c8a4:	mov	r0, r4
   1c8a8:	add	r2, r2, #1
   1c8ac:	str	r2, [r4, #220]	; 0xdc
   1c8b0:	mov	r2, r6
   1c8b4:	bl	1ba14 <__flatcc_fb_gen_c_verifier@@Base+0xda0>
   1c8b8:	ldr	r3, [r4, #220]	; 0xdc
   1c8bc:	cmp	r3, #0
   1c8c0:	bne	1c8d8 <__flatcc_fb_gen_c_verifier@@Base+0x1c64>
   1c8c4:	ldr	r3, [pc, #56]	; 1c904 <__flatcc_fb_gen_c_verifier@@Base+0x1c90>
   1c8c8:	movw	r2, #675	; 0x2a3
   1c8cc:	ldr	r1, [pc, #52]	; 1c908 <__flatcc_fb_gen_c_verifier@@Base+0x1c94>
   1c8d0:	ldr	r0, [pc, #52]	; 1c90c <__flatcc_fb_gen_c_verifier@@Base+0x1c98>
   1c8d4:	bl	14070 <__assert_fail@plt>
   1c8d8:	sub	r3, r3, #1
   1c8dc:	ldr	r1, [pc, #44]	; 1c910 <__flatcc_fb_gen_c_verifier@@Base+0x1c9c>
   1c8e0:	mov	r0, r4
   1c8e4:	str	r3, [r4, #220]	; 0xdc
   1c8e8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1c8ec:	ldr	r3, [r4, #220]	; 0xdc
   1c8f0:	add	r3, r3, #1
   1c8f4:	str	r3, [r4, #220]	; 0xdc
   1c8f8:	pop	{r4, r5, r6, r7, r8, pc}
   1c8fc:			; <UNDEFINED> instruction: 0x000433b6
   1c900:	strdeq	r3, [r4], -r9
   1c904:	andeq	r2, r4, lr, ror #3
   1c908:	andeq	r2, r4, r1, ror r3
   1c90c:	andeq	r2, r4, r6, asr #7
   1c910:	andeq	r2, r4, r6, asr #14
   1c914:	push	{r4, lr}
   1c918:	add	r0, r0, #172	; 0xac
   1c91c:	mov	r4, r1
   1c920:	ldr	r1, [r1, #16]
   1c924:	bl	2200c <ptr_set_find_item@@Base>
   1c928:	cmp	r0, #0
   1c92c:	movne	r0, r4
   1c930:	moveq	r0, #0
   1c934:	pop	{r4, pc}
   1c938:	ldrh	r3, [r1, #8]
   1c93c:	sub	r3, r3, #3
   1c940:	cmp	r3, #1
   1c944:	bxhi	lr
   1c948:	push	{r4, r5, r6, lr}
   1c94c:	mov	r4, r0
   1c950:	mov	r5, r1
   1c954:	ldr	r0, [r0, #4]
   1c958:	bl	1c914 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1c95c:	cmp	r0, #0
   1c960:	popeq	{r4, r5, r6, pc}
   1c964:	ldr	r2, [r5, #4]
   1c968:	ldr	r3, [r4, #8]
   1c96c:	ldm	r2, {r1, r2}
   1c970:	stm	r3, {r1, r2, r5}
   1c974:	add	r3, r3, #16
   1c978:	str	r3, [r4, #8]
   1c97c:	pop	{r4, r5, r6, pc}
   1c980:	ldrh	r3, [r1, #8]
   1c984:	cmp	r3, #4
   1c988:	bxhi	lr
   1c98c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c990:	mov	r4, r0
   1c994:	mov	r5, r1
   1c998:	ldr	r0, [r0, #40]	; 0x28
   1c99c:	bl	1c914 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1c9a0:	cmp	r0, #0
   1c9a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c9a8:	ldr	r3, [r4]
   1c9ac:	ldr	r6, [r4, #36]	; 0x24
   1c9b0:	cmp	r3, #0
   1c9b4:	moveq	r3, r6
   1c9b8:	beq	1c9d4 <__flatcc_fb_gen_c_verifier@@Base+0x1d60>
   1c9bc:	ldr	r3, [r0, #12]
   1c9c0:	mov	r9, #46	; 0x2e
   1c9c4:	ldr	r7, [r3]
   1c9c8:	mov	r3, r6
   1c9cc:	cmp	r7, #0
   1c9d0:	bne	1ca20 <__flatcc_fb_gen_c_verifier@@Base+0x1dac>
   1c9d4:	ldr	r1, [r5, #4]
   1c9d8:	mov	r0, r3
   1c9dc:	ldm	r1, {r1, r7}
   1c9e0:	mov	r2, r7
   1c9e4:	bl	13efc <memcpy@plt>
   1c9e8:	add	r2, r0, r7
   1c9ec:	mov	r1, #0
   1c9f0:	add	r3, r2, #1
   1c9f4:	strb	r1, [r0, r7]
   1c9f8:	str	r3, [r4, #36]	; 0x24
   1c9fc:	ldrh	r3, [r5, #8]
   1ca00:	cmp	r3, #4
   1ca04:	ldrls	pc, [pc, r3, lsl #2]
   1ca08:	b	1ca68 <__flatcc_fb_gen_c_verifier@@Base+0x1df4>
   1ca0c:	andeq	ip, r1, r4, asr #20
   1ca10:	andeq	ip, r1, r4, asr #20
   1ca14:	andeq	ip, r1, r8, ror #20
   1ca18:	andeq	ip, r1, r8, asr sl
   1ca1c:	andeq	ip, r1, r8, asr sl
   1ca20:	ldr	r1, [r7, #4]
   1ca24:	mov	r0, r3
   1ca28:	ldm	r1, {r1, r8}
   1ca2c:	mov	r2, r8
   1ca30:	bl	13efc <memcpy@plt>
   1ca34:	add	r3, r0, r8
   1ca38:	strb	r9, [r3], #1
   1ca3c:	ldr	r7, [r7]
   1ca40:	b	1c9cc <__flatcc_fb_gen_c_verifier@@Base+0x1d58>
   1ca44:	ldr	r3, [r4, #28]
   1ca48:	stm	r3, {r5, r6}
   1ca4c:	add	r3, r3, #8
   1ca50:	str	r3, [r4, #28]
   1ca54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ca58:	ldr	r3, [r4, #32]
   1ca5c:	stm	r3, {r5, r6}
   1ca60:	add	r3, r3, #8
   1ca64:	str	r3, [r4, #32]
   1ca68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ca6c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca70:	mov	r2, #0
   1ca74:	mov	r6, r0
   1ca78:	mov	r4, r0
   1ca7c:	mov	r7, r2
   1ca80:	cmp	r4, #0
   1ca84:	bne	1cae4 <__flatcc_fb_gen_c_verifier@@Base+0x1e70>
   1ca88:	cmp	r7, #0
   1ca8c:	str	r7, [r1]
   1ca90:	beq	1cad8 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   1ca94:	lsl	r8, r7, #4
   1ca98:	add	r0, r2, r8
   1ca9c:	bl	13f68 <malloc@plt>
   1caa0:	subs	r9, r0, #0
   1caa4:	beq	1cad8 <__flatcc_fb_gen_c_verifier@@Base+0x1e64>
   1caa8:	ldr	sl, [pc, #248]	; 1cba8 <__flatcc_fb_gen_c_verifier@@Base+0x1f34>
   1caac:	add	r8, r9, r8
   1cab0:	mov	r5, r9
   1cab4:	mov	fp, #1
   1cab8:	cmp	r6, #0
   1cabc:	bne	1cb20 <__flatcc_fb_gen_c_verifier@@Base+0x1eac>
   1cac0:	ldr	r3, [pc, #228]	; 1cbac <__flatcc_fb_gen_c_verifier@@Base+0x1f38>
   1cac4:	mov	r2, #16
   1cac8:	mov	r1, r7
   1cacc:	mov	r0, r9
   1cad0:	mov	r4, r9
   1cad4:	bl	14034 <qsort@plt>
   1cad8:	mov	r0, r4
   1cadc:	add	sp, sp, #12
   1cae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cae4:	ldrh	r3, [r4, #72]	; 0x48
   1cae8:	tst	r3, #4
   1caec:	bne	1cb18 <__flatcc_fb_gen_c_verifier@@Base+0x1ea4>
   1caf0:	mov	r0, r4
   1caf4:	bl	1b004 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   1caf8:	cmp	r0, #0
   1cafc:	beq	1cb14 <__flatcc_fb_gen_c_verifier@@Base+0x1ea0>
   1cb00:	ldr	r3, [r4, #4]
   1cb04:	add	r7, r7, #1
   1cb08:	ldr	r3, [r3, #4]
   1cb0c:	add	r3, r3, #6
   1cb10:	add	r2, r2, r3
   1cb14:	add	r7, r7, #1
   1cb18:	ldr	r4, [r4]
   1cb1c:	b	1ca80 <__flatcc_fb_gen_c_verifier@@Base+0x1e0c>
   1cb20:	ldrh	r3, [r6, #72]	; 0x48
   1cb24:	ands	r3, r3, #4
   1cb28:	bne	1cba0 <__flatcc_fb_gen_c_verifier@@Base+0x1f2c>
   1cb2c:	ldr	r2, [r6, #4]
   1cb30:	mov	r0, r6
   1cb34:	ldm	r2, {r1, r2}
   1cb38:	stm	r5, {r1, r2, r6}
   1cb3c:	str	r3, [r5, #12]
   1cb40:	bl	1b004 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   1cb44:	cmp	r0, #0
   1cb48:	addeq	r5, r5, #16
   1cb4c:	beq	1cba0 <__flatcc_fb_gen_c_verifier@@Base+0x1f2c>
   1cb50:	add	r0, r2, #5
   1cb54:	add	r3, r4, #1
   1cb58:	str	r4, [r6, #112]	; 0x70
   1cb5c:	str	r8, [r5, #16]
   1cb60:	add	r5, r5, #32
   1cb64:	str	r0, [r5, #-12]
   1cb68:	mov	r0, r8
   1cb6c:	str	r3, [sp, #4]
   1cb70:	bl	13efc <memcpy@plt>
   1cb74:	ldr	r2, [r6, #4]
   1cb78:	mov	r1, sl
   1cb7c:	ldr	r2, [r2, #4]
   1cb80:	add	r8, r8, r2
   1cb84:	mov	r0, r8
   1cb88:	add	r8, r8, #6
   1cb8c:	bl	13f44 <strcpy@plt>
   1cb90:	ldr	r3, [sp, #4]
   1cb94:	str	r6, [r5, #-8]
   1cb98:	str	fp, [r5, #-4]
   1cb9c:	mov	r4, r3
   1cba0:	ldr	r6, [r6]
   1cba4:	b	1cab8 <__flatcc_fb_gen_c_verifier@@Base+0x1e44>
   1cba8:	andeq	pc, r2, r5, ror lr	; <UNPREDICTABLE>
   1cbac:	andeq	ip, r1, ip, lsr #11
   1cbb0:	ldrh	r3, [r1, #8]
   1cbb4:	sub	r3, r3, #3
   1cbb8:	cmp	r3, #1
   1cbbc:	bxhi	lr
   1cbc0:	push	{r4, lr}
   1cbc4:	mov	r4, r0
   1cbc8:	ldr	r0, [r0, #4]
   1cbcc:	bl	1c914 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1cbd0:	cmp	r0, #0
   1cbd4:	ldrne	r3, [r4]
   1cbd8:	addne	r3, r3, #1
   1cbdc:	strne	r3, [r4]
   1cbe0:	pop	{r4, pc}
   1cbe4:	ldrh	r3, [r1, #8]
   1cbe8:	cmp	r3, #4
   1cbec:	bxhi	lr
   1cbf0:	push	{r4, r5, r6, lr}
   1cbf4:	mov	r4, r0
   1cbf8:	mov	r5, r1
   1cbfc:	ldr	r0, [r0, #40]	; 0x28
   1cc00:	bl	1c914 <__flatcc_fb_gen_c_verifier@@Base+0x1ca0>
   1cc04:	cmp	r0, #0
   1cc08:	popeq	{r4, r5, r6, pc}
   1cc0c:	ldr	r3, [r4]
   1cc10:	cmp	r3, #0
   1cc14:	ldrne	r3, [r0, #12]
   1cc18:	movne	r2, #0
   1cc1c:	ldrne	r3, [r3]
   1cc20:	bne	1cc40 <__flatcc_fb_gen_c_verifier@@Base+0x1fcc>
   1cc24:	mov	r2, r3
   1cc28:	b	1cc48 <__flatcc_fb_gen_c_verifier@@Base+0x1fd4>
   1cc2c:	ldr	r1, [r3, #4]
   1cc30:	ldr	r3, [r3]
   1cc34:	ldr	r1, [r1, #4]
   1cc38:	add	r1, r1, #1
   1cc3c:	add	r2, r2, r1
   1cc40:	cmp	r3, #0
   1cc44:	bne	1cc2c <__flatcc_fb_gen_c_verifier@@Base+0x1fb8>
   1cc48:	ldr	r3, [r5, #4]
   1cc4c:	ldr	r1, [r4, #12]
   1cc50:	ldr	r3, [r3, #4]
   1cc54:	add	r3, r3, r1
   1cc58:	add	r3, r3, #1
   1cc5c:	add	r3, r3, r2
   1cc60:	str	r3, [r4, #12]
   1cc64:	ldrh	r3, [r5, #8]
   1cc68:	cmp	r3, #4
   1cc6c:	ldrls	pc, [pc, r3, lsl #2]
   1cc70:	b	1cca4 <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   1cc74:	andeq	ip, r1, r8, lsl #25
   1cc78:	andeq	ip, r1, r8, lsl #25
   1cc7c:	andeq	ip, r1, r4, lsr #25
   1cc80:	muleq	r1, r8, ip
   1cc84:	muleq	r1, r8, ip
   1cc88:	ldr	r3, [r4, #4]
   1cc8c:	add	r3, r3, #1
   1cc90:	str	r3, [r4, #4]
   1cc94:	pop	{r4, r5, r6, pc}
   1cc98:	ldr	r3, [r4, #8]
   1cc9c:	add	r3, r3, #1
   1cca0:	str	r3, [r4, #8]
   1cca4:	pop	{r4, r5, r6, pc}
   1cca8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ccac:	sub	sp, sp, #108	; 0x6c
   1ccb0:	mov	r6, r2
   1ccb4:	mov	r2, #0
   1ccb8:	mov	r4, r0
   1ccbc:	mov	r5, r1
   1ccc0:	str	r3, [sp, #8]
   1ccc4:	mov	r3, #0
   1ccc8:	ldr	fp, [r1]
   1cccc:	strd	r2, [sp, #56]	; 0x38
   1ccd0:	strd	r2, [sp, #64]	; 0x40
   1ccd4:	ldr	r3, [pc, #1640]	; 1d344 <__flatcc_fb_gen_c_verifier@@Base+0x26d0>
   1ccd8:	ldr	r9, [sp, #144]	; 0x90
   1ccdc:	str	r3, [sp, #48]	; 0x30
   1cce0:	mov	r3, #0
   1cce4:	str	r3, [sp, #52]	; 0x34
   1cce8:	add	r3, fp, r6, lsl #4
   1ccec:	add	r2, r9, #7
   1ccf0:	ldr	r3, [r3, #4]
   1ccf4:	str	r2, [sp, #40]	; 0x28
   1ccf8:	cmp	r3, r2
   1ccfc:	ble	1cd0c <__flatcc_fb_gen_c_verifier@@Base+0x2098>
   1cd00:	sub	r3, r3, r9
   1cd04:	cmp	r3, #8
   1cd08:	bne	1cd70 <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   1cd0c:	ldr	r3, [sp, #8]
   1cd10:	cmp	r6, r3
   1cd14:	beq	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x20d4>
   1cd18:	ldr	r2, [sp, #8]
   1cd1c:	add	r3, r6, #1
   1cd20:	cmp	r3, r2
   1cd24:	bne	1cd70 <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   1cd28:	add	r3, fp, r2, lsl #4
   1cd2c:	add	r2, r9, #7
   1cd30:	ldr	r3, [r3, #4]
   1cd34:	cmp	r3, r2
   1cd38:	ble	1cd48 <__flatcc_fb_gen_c_verifier@@Base+0x20d4>
   1cd3c:	sub	r3, r3, r9
   1cd40:	cmp	r3, #8
   1cd44:	bne	1cd70 <__flatcc_fb_gen_c_verifier@@Base+0x20fc>
   1cd48:	mov	r3, #0
   1cd4c:	mov	r2, r6
   1cd50:	str	r9, [sp]
   1cd54:	mov	r1, r5
   1cd58:	mov	r0, r4
   1cd5c:	str	r3, [sp, #4]
   1cd60:	ldr	r3, [sp, #8]
   1cd64:	bl	1b104 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1cd68:	add	sp, sp, #108	; 0x6c
   1cd6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd70:	ldr	r3, [sp, #8]
   1cd74:	mov	r2, #0
   1cd78:	mov	sl, #0
   1cd7c:	sub	r3, r3, r6
   1cd80:	add	r3, r3, r3, lsr #31
   1cd84:	add	r3, r6, r3, asr #1
   1cd88:	str	r3, [sp, #12]
   1cd8c:	mov	r3, #0
   1cd90:	ldr	r7, [sp, #12]
   1cd94:	strd	r2, [sp, #72]	; 0x48
   1cd98:	strd	r2, [sp, #80]	; 0x50
   1cd9c:	strd	r2, [sp, #88]	; 0x58
   1cda0:	strd	r2, [sp, #96]	; 0x60
   1cda4:	ldr	r3, [sp, #12]
   1cda8:	lsl	r3, r3, #4
   1cdac:	add	fp, fp, r3
   1cdb0:	str	r3, [sp, #16]
   1cdb4:	cmp	r6, r7
   1cdb8:	blt	1cde8 <__flatcc_fb_gen_c_verifier@@Base+0x2174>
   1cdbc:	mov	r3, #0
   1cdc0:	mov	r2, #0
   1cdc4:	ldr	r7, [r5]
   1cdc8:	mov	r8, #0
   1cdcc:	strd	r2, [sp, #72]	; 0x48
   1cdd0:	strd	r2, [sp, #80]	; 0x50
   1cdd4:	strd	r2, [sp, #88]	; 0x58
   1cdd8:	strd	r2, [sp, #96]	; 0x60
   1cddc:	ldr	r3, [sp, #16]
   1cde0:	add	r7, r7, r3
   1cde4:	b	1cef8 <__flatcc_fb_gen_c_verifier@@Base+0x2284>
   1cde8:	sub	r3, fp, #16
   1cdec:	add	r2, sp, #72	; 0x48
   1cdf0:	str	sl, [sp]
   1cdf4:	mov	r1, r9
   1cdf8:	str	sl, [sp, #4]
   1cdfc:	sub	r8, r7, #1
   1ce00:	str	r3, [sp, #20]
   1ce04:	add	r3, sp, #88	; 0x58
   1ce08:	ldr	r0, [sp, #20]
   1ce0c:	bl	1af34 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1ce10:	lsl	r3, r7, #4
   1ce14:	add	r2, sp, #80	; 0x50
   1ce18:	mov	r1, r9
   1ce1c:	mov	r0, fp
   1ce20:	str	sl, [sp]
   1ce24:	str	sl, [sp, #4]
   1ce28:	str	r3, [sp, #44]	; 0x2c
   1ce2c:	add	r3, sp, #96	; 0x60
   1ce30:	bl	1af34 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1ce34:	ldr	fp, [sp, #20]
   1ce38:	ldr	r2, [sp, #72]	; 0x48
   1ce3c:	ldr	r3, [sp, #80]	; 0x50
   1ce40:	ldr	r1, [sp, #84]	; 0x54
   1ce44:	eor	r2, r2, r3
   1ce48:	ldr	r3, [sp, #76]	; 0x4c
   1ce4c:	eor	r3, r3, r1
   1ce50:	ldr	r1, [sp, #88]	; 0x58
   1ce54:	and	r2, r2, r1
   1ce58:	str	r2, [sp, #24]
   1ce5c:	ldr	r2, [sp, #92]	; 0x5c
   1ce60:	and	r3, r3, r2
   1ce64:	str	r3, [sp, #28]
   1ce68:	ldrd	r2, [sp, #24]
   1ce6c:	orrs	r3, r2, r3
   1ce70:	bne	1d2b4 <__flatcc_fb_gen_c_verifier@@Base+0x2640>
   1ce74:	mov	r7, r8
   1ce78:	b	1cdb4 <__flatcc_fb_gen_c_verifier@@Base+0x2140>
   1ce7c:	sub	r3, r3, #1
   1ce80:	ldr	r1, [pc, #1216]	; 1d348 <__flatcc_fb_gen_c_verifier@@Base+0x26d4>
   1ce84:	mov	r0, r4
   1ce88:	str	r3, [r4, #220]	; 0xdc
   1ce8c:	ldr	r3, [sp, #48]	; 0x30
   1ce90:	ldr	r2, [sp, #52]	; 0x34
   1ce94:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ce98:	ldr	r3, [r4, #220]	; 0xdc
   1ce9c:	mov	r2, r7
   1cea0:	mov	r1, r5
   1cea4:	mov	r0, r4
   1cea8:	add	r3, r3, #1
   1ceac:	str	r3, [r4, #220]	; 0xdc
   1ceb0:	str	r9, [sp]
   1ceb4:	ldr	r3, [sp, #8]
   1ceb8:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1cebc:	ldr	r3, [r4, #220]	; 0xdc
   1cec0:	cmp	r3, #0
   1cec4:	ldreq	r3, [pc, #1152]	; 1d34c <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1cec8:	movweq	r2, #975	; 0x3cf
   1cecc:	beq	1d338 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1ced0:	sub	r3, r3, #1
   1ced4:	ldr	r1, [pc, #1140]	; 1d350 <__flatcc_fb_gen_c_verifier@@Base+0x26dc>
   1ced8:	str	r3, [r4, #220]	; 0xdc
   1cedc:	ldr	r3, [sp, #48]	; 0x30
   1cee0:	ldr	r2, [sp, #52]	; 0x34
   1cee4:	mov	r0, r4
   1cee8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ceec:	b	1cd68 <__flatcc_fb_gen_c_verifier@@Base+0x20f4>
   1cef0:	ldr	r3, [sp, #16]
   1cef4:	str	r3, [sp, #12]
   1cef8:	ldr	r3, [sp, #12]
   1cefc:	ldr	r2, [sp, #12]
   1cf00:	add	r3, r3, #1
   1cf04:	str	r3, [sp, #16]
   1cf08:	ldr	r3, [sp, #8]
   1cf0c:	cmp	r3, r2
   1cf10:	ble	1cf8c <__flatcc_fb_gen_c_verifier@@Base+0x2318>
   1cf14:	add	r3, sp, #88	; 0x58
   1cf18:	add	r2, sp, #72	; 0x48
   1cf1c:	str	r8, [sp]
   1cf20:	mov	r1, r9
   1cf24:	mov	r0, r7
   1cf28:	str	r8, [sp, #4]
   1cf2c:	add	r7, r7, #16
   1cf30:	bl	1af34 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1cf34:	add	r3, sp, #96	; 0x60
   1cf38:	add	r2, sp, #80	; 0x50
   1cf3c:	str	r8, [sp]
   1cf40:	mov	r1, r9
   1cf44:	mov	r0, r7
   1cf48:	str	r8, [sp, #4]
   1cf4c:	bl	1af34 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1cf50:	ldr	r2, [sp, #72]	; 0x48
   1cf54:	ldr	r3, [sp, #80]	; 0x50
   1cf58:	ldr	r1, [sp, #84]	; 0x54
   1cf5c:	eor	r2, r2, r3
   1cf60:	ldr	r3, [sp, #76]	; 0x4c
   1cf64:	eor	r3, r3, r1
   1cf68:	ldr	r1, [sp, #88]	; 0x58
   1cf6c:	and	r2, r2, r1
   1cf70:	str	r2, [sp, #32]
   1cf74:	ldr	r2, [sp, #92]	; 0x5c
   1cf78:	and	r3, r3, r2
   1cf7c:	str	r3, [sp, #36]	; 0x24
   1cf80:	ldrd	r2, [sp, #32]
   1cf84:	orrs	r3, r2, r3
   1cf88:	beq	1cef0 <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   1cf8c:	ldr	r0, [r5]
   1cf90:	mov	r7, r6
   1cf94:	add	r2, r0, #4
   1cf98:	ldr	r3, [sp, #12]
   1cf9c:	cmp	r7, r3
   1cfa0:	ble	1d1ec <__flatcc_fb_gen_c_verifier@@Base+0x2578>
   1cfa4:	ldr	r3, [sp, #16]
   1cfa8:	cmp	r7, r3
   1cfac:	bge	1d220 <__flatcc_fb_gen_c_verifier@@Base+0x25ac>
   1cfb0:	cmp	r6, r7
   1cfb4:	add	fp, r9, #8
   1cfb8:	bge	1d210 <__flatcc_fb_gen_c_verifier@@Base+0x259c>
   1cfbc:	add	r3, r0, r7, lsl #4
   1cfc0:	ldr	r8, [r3, #-12]
   1cfc4:	cmp	r8, fp
   1cfc8:	bgt	1d210 <__flatcc_fb_gen_c_verifier@@Base+0x259c>
   1cfcc:	sub	r8, r8, r9
   1cfd0:	sub	r8, r8, #8
   1cfd4:	clz	r8, r8
   1cfd8:	lsr	r8, r8, #5
   1cfdc:	add	r3, sp, #52	; 0x34
   1cfe0:	lsl	sl, r7, #4
   1cfe4:	add	r2, sp, #56	; 0x38
   1cfe8:	mov	r1, r9
   1cfec:	str	r3, [sp, #4]
   1cff0:	add	r3, sp, #48	; 0x30
   1cff4:	add	r0, r0, sl
   1cff8:	str	r3, [sp]
   1cffc:	add	r3, sp, #64	; 0x40
   1d000:	bl	1af34 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d004:	ldr	r3, [sp, #48]	; 0x30
   1d008:	mov	r0, r4
   1d00c:	ldr	r1, [pc, #832]	; 1d354 <__flatcc_fb_gen_c_verifier@@Base+0x26e0>
   1d010:	str	r3, [sp, #4]
   1d014:	ldr	r3, [sp, #52]	; 0x34
   1d018:	str	r3, [sp]
   1d01c:	ldrd	r2, [sp, #56]	; 0x38
   1d020:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d024:	ldr	r3, [r4, #220]	; 0xdc
   1d028:	cmp	r8, #0
   1d02c:	add	r3, r3, #1
   1d030:	str	r3, [r4, #220]	; 0xdc
   1d034:	beq	1d084 <__flatcc_fb_gen_c_verifier@@Base+0x2410>
   1d038:	ldr	r1, [pc, #792]	; 1d358 <__flatcc_fb_gen_c_verifier@@Base+0x26e4>
   1d03c:	mov	r0, r4
   1d040:	sub	sl, sl, #16
   1d044:	ldr	r3, [sp, #48]	; 0x30
   1d048:	ldr	r2, [sp, #52]	; 0x34
   1d04c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d050:	ldm	r5, {r3, ip}
   1d054:	mov	r0, r4
   1d058:	ldr	r1, [r5, #12]
   1d05c:	add	sl, r3, sl
   1d060:	mov	r3, #8
   1d064:	str	r3, [sp]
   1d068:	ldrd	r2, [sl, #8]
   1d06c:	blx	ip
   1d070:	ldr	r1, [pc, #740]	; 1d35c <__flatcc_fb_gen_c_verifier@@Base+0x26e8>
   1d074:	mov	r0, r4
   1d078:	ldr	r3, [sp, #48]	; 0x30
   1d07c:	ldr	r2, [sp, #52]	; 0x34
   1d080:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d084:	ldr	r1, [pc, #724]	; 1d360 <__flatcc_fb_gen_c_verifier@@Base+0x26ec>
   1d088:	mov	r0, r4
   1d08c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d090:	ldr	r1, [pc, #716]	; 1d364 <__flatcc_fb_gen_c_verifier@@Base+0x26f0>
   1d094:	mov	r0, r4
   1d098:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d09c:	mov	r2, r7
   1d0a0:	mov	r1, r5
   1d0a4:	str	fp, [sp]
   1d0a8:	mov	r0, r4
   1d0ac:	ldr	r3, [sp, #12]
   1d0b0:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1d0b4:	cmp	r8, #0
   1d0b8:	beq	1d218 <__flatcc_fb_gen_c_verifier@@Base+0x25a4>
   1d0bc:	ldr	r3, [r4, #220]	; 0xdc
   1d0c0:	cmp	r3, #0
   1d0c4:	ldreq	r3, [pc, #640]	; 1d34c <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1d0c8:	moveq	r2, #1040	; 0x410
   1d0cc:	beq	1d338 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1d0d0:	sub	r3, r3, #1
   1d0d4:	mov	r0, r4
   1d0d8:	ldr	r1, [pc, #648]	; 1d368 <__flatcc_fb_gen_c_verifier@@Base+0x26f4>
   1d0dc:	sub	sl, r7, #1
   1d0e0:	str	r3, [r4, #220]	; 0xdc
   1d0e4:	ldr	r3, [sp, #48]	; 0x30
   1d0e8:	ldr	r2, [sp, #52]	; 0x34
   1d0ec:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d0f0:	ldr	r3, [r4, #220]	; 0xdc
   1d0f4:	cmp	r3, #0
   1d0f8:	ldreq	r3, [pc, #588]	; 1d34c <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1d0fc:	movweq	r2, #1044	; 0x414
   1d100:	beq	1d338 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1d104:	sub	r3, r3, #1
   1d108:	mov	r0, r4
   1d10c:	ldr	r1, [pc, #600]	; 1d36c <__flatcc_fb_gen_c_verifier@@Base+0x26f8>
   1d110:	str	r3, [r4, #220]	; 0xdc
   1d114:	ldr	r3, [sp, #48]	; 0x30
   1d118:	ldr	r2, [sp, #52]	; 0x34
   1d11c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d120:	ldr	r3, [r4, #220]	; 0xdc
   1d124:	add	r3, r3, #1
   1d128:	str	r3, [r4, #220]	; 0xdc
   1d12c:	ldr	r3, [sp, #8]
   1d130:	ldr	r2, [sp, #16]
   1d134:	cmp	r3, r2
   1d138:	cmpge	sl, r6
   1d13c:	ldrgt	r8, [r5, #24]
   1d140:	movgt	fp, #1
   1d144:	movle	fp, #0
   1d148:	addgt	r8, r8, #1
   1d14c:	strgt	r8, [r5, #24]
   1d150:	bgt	1d160 <__flatcc_fb_gen_c_verifier@@Base+0x24ec>
   1d154:	cmp	sl, r6
   1d158:	mov	r8, fp
   1d15c:	ble	1d184 <__flatcc_fb_gen_c_verifier@@Base+0x2510>
   1d160:	sub	r3, sl, #1
   1d164:	mov	r2, r6
   1d168:	str	r9, [sp]
   1d16c:	mov	r1, r5
   1d170:	mov	r0, r4
   1d174:	str	r8, [sp, #4]
   1d178:	bl	1b104 <__flatcc_fb_gen_c_verifier@@Base+0x490>
   1d17c:	cmp	fp, #0
   1d180:	bne	1d228 <__flatcc_fb_gen_c_verifier@@Base+0x25b4>
   1d184:	ldr	r3, [sp, #8]
   1d188:	ldr	r2, [sp, #16]
   1d18c:	cmp	r3, r2
   1d190:	blt	1d264 <__flatcc_fb_gen_c_verifier@@Base+0x25f0>
   1d194:	mov	r1, r5
   1d198:	mov	r0, r4
   1d19c:	str	r9, [sp]
   1d1a0:	ldr	r3, [sp, #8]
   1d1a4:	ldr	r2, [sp, #16]
   1d1a8:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1d1ac:	cmp	fp, #0
   1d1b0:	bne	1d27c <__flatcc_fb_gen_c_verifier@@Base+0x2608>
   1d1b4:	ldr	r3, [sp, #16]
   1d1b8:	cmp	r7, r3
   1d1bc:	bge	1cd68 <__flatcc_fb_gen_c_verifier@@Base+0x20f4>
   1d1c0:	ldr	r3, [r4, #220]	; 0xdc
   1d1c4:	cmp	r3, #0
   1d1c8:	ldreq	r3, [pc, #380]	; 1d34c <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1d1cc:	moveq	r2, #1072	; 0x430
   1d1d0:	beq	1d338 <__flatcc_fb_gen_c_verifier@@Base+0x26c4>
   1d1d4:	sub	r3, r3, #1
   1d1d8:	ldr	r1, [pc, #400]	; 1d370 <__flatcc_fb_gen_c_verifier@@Base+0x26fc>
   1d1dc:	str	r3, [r4, #220]	; 0xdc
   1d1e0:	ldr	r3, [sp, #48]	; 0x30
   1d1e4:	ldr	r2, [sp, #52]	; 0x34
   1d1e8:	b	1cee4 <__flatcc_fb_gen_c_verifier@@Base+0x2270>
   1d1ec:	ldr	r3, [r2, r7, lsl #4]
   1d1f0:	ldr	r1, [sp, #40]	; 0x28
   1d1f4:	cmp	r1, r3
   1d1f8:	bge	1d208 <__flatcc_fb_gen_c_verifier@@Base+0x2594>
   1d1fc:	sub	r3, r3, r9
   1d200:	cmp	r3, #8
   1d204:	bgt	1cfa4 <__flatcc_fb_gen_c_verifier@@Base+0x2330>
   1d208:	add	r7, r7, #1
   1d20c:	b	1cf98 <__flatcc_fb_gen_c_verifier@@Base+0x2324>
   1d210:	mov	r8, #0
   1d214:	b	1cfdc <__flatcc_fb_gen_c_verifier@@Base+0x2368>
   1d218:	mov	sl, r7
   1d21c:	b	1d0f0 <__flatcc_fb_gen_c_verifier@@Base+0x247c>
   1d220:	mov	sl, r7
   1d224:	b	1d12c <__flatcc_fb_gen_c_verifier@@Base+0x24b8>
   1d228:	mov	r2, r8
   1d22c:	ldr	r1, [pc, #320]	; 1d374 <__flatcc_fb_gen_c_verifier@@Base+0x2700>
   1d230:	mov	r0, r4
   1d234:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d238:	ldr	r3, [r4, #220]	; 0xdc
   1d23c:	mov	r2, r8
   1d240:	mov	r0, r4
   1d244:	ldr	r1, [pc, #300]	; 1d378 <__flatcc_fb_gen_c_verifier@@Base+0x2704>
   1d248:	str	r3, [r4, #228]	; 0xe4
   1d24c:	mov	r3, #0
   1d250:	str	r3, [r4, #220]	; 0xdc
   1d254:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d258:	ldr	r3, [r4, #228]	; 0xe4
   1d25c:	str	r3, [r4, #220]	; 0xdc
   1d260:	b	1d194 <__flatcc_fb_gen_c_verifier@@Base+0x2520>
   1d264:	cmp	sl, r6
   1d268:	bgt	1d1b4 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   1d26c:	mov	r0, r4
   1d270:	ldr	r3, [r5, #8]
   1d274:	blx	r3
   1d278:	b	1d1b4 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   1d27c:	ldr	r3, [r4, #220]	; 0xdc
   1d280:	mov	r0, r4
   1d284:	mov	r2, r8
   1d288:	ldr	r1, [pc, #236]	; 1d37c <__flatcc_fb_gen_c_verifier@@Base+0x2708>
   1d28c:	str	r3, [r4, #228]	; 0xe4
   1d290:	mov	r3, #0
   1d294:	str	r3, [r4, #220]	; 0xdc
   1d298:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d29c:	ldr	r3, [r4, #228]	; 0xe4
   1d2a0:	mov	r0, r4
   1d2a4:	ldr	r1, [pc, #212]	; 1d380 <__flatcc_fb_gen_c_verifier@@Base+0x270c>
   1d2a8:	str	r3, [r4, #220]	; 0xdc
   1d2ac:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d2b0:	b	1d1b4 <__flatcc_fb_gen_c_verifier@@Base+0x2540>
   1d2b4:	ldr	r0, [r5]
   1d2b8:	add	r3, sp, #52	; 0x34
   1d2bc:	lsl	ip, r7, #4
   1d2c0:	add	r2, sp, #56	; 0x38
   1d2c4:	mov	r1, r9
   1d2c8:	str	r3, [sp, #4]
   1d2cc:	add	r3, sp, #48	; 0x30
   1d2d0:	str	r3, [sp]
   1d2d4:	add	r3, sp, #64	; 0x40
   1d2d8:	add	r0, r0, ip
   1d2dc:	bl	1af34 <__flatcc_fb_gen_c_verifier@@Base+0x2c0>
   1d2e0:	ldr	r3, [sp, #48]	; 0x30
   1d2e4:	mov	r0, r4
   1d2e8:	ldr	r1, [pc, #148]	; 1d384 <__flatcc_fb_gen_c_verifier@@Base+0x2710>
   1d2ec:	str	r3, [sp, #4]
   1d2f0:	ldr	r3, [sp, #52]	; 0x34
   1d2f4:	str	r3, [sp]
   1d2f8:	ldrd	r2, [sp, #56]	; 0x38
   1d2fc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d300:	ldr	r3, [r4, #220]	; 0xdc
   1d304:	mov	r2, r6
   1d308:	mov	r1, r5
   1d30c:	mov	r0, r4
   1d310:	add	r3, r3, #1
   1d314:	str	r3, [r4, #220]	; 0xdc
   1d318:	mov	r3, r8
   1d31c:	str	r9, [sp]
   1d320:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1d324:	ldr	r3, [r4, #220]	; 0xdc
   1d328:	cmp	r3, #0
   1d32c:	bne	1ce7c <__flatcc_fb_gen_c_verifier@@Base+0x2208>
   1d330:	ldr	r3, [pc, #20]	; 1d34c <__flatcc_fb_gen_c_verifier@@Base+0x26d8>
   1d334:	movw	r2, #973	; 0x3cd
   1d338:	ldr	r1, [pc, #72]	; 1d388 <__flatcc_fb_gen_c_verifier@@Base+0x2714>
   1d33c:	ldr	r0, [pc, #72]	; 1d38c <__flatcc_fb_gen_c_verifier@@Base+0x2718>
   1d340:	bl	14070 <__assert_fail@plt>
   1d344:	andeq	r1, r3, fp, lsr #2
   1d348:	andeq	r3, r4, ip, lsl #8
   1d34c:	strdeq	r2, [r4], -lr
   1d350:	andeq	r3, r4, r9, lsr #8
   1d354:	andeq	r3, r4, pc, lsr r4
   1d358:	andeq	r3, r4, r7, ror #8
   1d35c:	andeq	r3, r4, r7, lsl #9
   1d360:	andeq	r3, r4, r3, lsr #9
   1d364:	andeq	r3, r4, sp, lsr #9
   1d368:	ldrdeq	r3, [r4], -fp
   1d36c:	strdeq	r3, [r4], -r8
   1d370:	andeq	r3, r4, r0, asr #10
   1d374:	andeq	r3, r4, r6, lsl r5
   1d378:	andeq	r3, r4, ip, lsr #10
   1d37c:	andeq	r3, r4, r9, lsr #10
   1d380:	andeq	r3, r4, r7, lsr r5
   1d384:	andeq	r3, r4, r7, asr r5
   1d388:	andeq	r2, r4, r1, ror r3
   1d38c:	andeq	r2, r4, r6, asr #7
   1d390:	push	{r4, r5, r6, r7, lr}
   1d394:	sub	sp, sp, #260	; 0x104
   1d398:	mov	r6, r1
   1d39c:	mov	r2, #28
   1d3a0:	mov	r4, r0
   1d3a4:	mov	r1, #0
   1d3a8:	add	r0, sp, #24
   1d3ac:	bl	13fc8 <memset@plt>
   1d3b0:	add	r1, sp, #52	; 0x34
   1d3b4:	mov	r0, r6
   1d3b8:	bl	14f4c <__flatcc_fb_copy_scope@@Base>
   1d3bc:	ldr	r2, [r4, #208]	; 0xd0
   1d3c0:	mov	r3, #0
   1d3c4:	add	r6, r6, #4
   1d3c8:	mov	r0, r6
   1d3cc:	ldr	r1, [pc, #528]	; 1d5e4 <__flatcc_fb_gen_c_verifier@@Base+0x2970>
   1d3d0:	str	r3, [sp, #12]
   1d3d4:	strd	r2, [sp, #16]
   1d3d8:	add	r2, sp, #12
   1d3dc:	bl	22554 <fb_symbol_table_visit@@Base>
   1d3e0:	ldr	r5, [sp, #12]
   1d3e4:	cmp	r5, #0
   1d3e8:	streq	r5, [sp, #24]
   1d3ec:	beq	1d46c <__flatcc_fb_gen_c_verifier@@Base+0x27f8>
   1d3f0:	lsl	r0, r5, #4
   1d3f4:	bl	13f68 <malloc@plt>
   1d3f8:	subs	r7, r0, #0
   1d3fc:	bne	1d440 <__flatcc_fb_gen_c_verifier@@Base+0x27cc>
   1d400:	cmp	r5, #0
   1d404:	str	r7, [sp, #24]
   1d408:	ble	1d46c <__flatcc_fb_gen_c_verifier@@Base+0x27f8>
   1d40c:	ldr	r3, [pc, #468]	; 1d5e8 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   1d410:	ldr	r0, [pc, #468]	; 1d5ec <__flatcc_fb_gen_c_verifier@@Base+0x2978>
   1d414:	ldr	r2, [pc, #468]	; 1d5f0 <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   1d418:	str	r3, [sp]
   1d41c:	movw	r3, #1140	; 0x474
   1d420:	ldr	r1, [pc, #460]	; 1d5f4 <__flatcc_fb_gen_c_verifier@@Base+0x2980>
   1d424:	ldr	r0, [r0]
   1d428:	bl	13fb0 <fprintf@plt>
   1d42c:	ldr	r3, [pc, #452]	; 1d5f8 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1d430:	movw	r2, #1140	; 0x474
   1d434:	ldr	r1, [pc, #436]	; 1d5f0 <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   1d438:	ldr	r0, [pc, #444]	; 1d5fc <__flatcc_fb_gen_c_verifier@@Base+0x2988>
   1d43c:	bl	14070 <__assert_fail@plt>
   1d440:	add	r2, sp, #12
   1d444:	ldr	r1, [pc, #436]	; 1d600 <__flatcc_fb_gen_c_verifier@@Base+0x298c>
   1d448:	mov	r0, r6
   1d44c:	str	r7, [sp, #20]
   1d450:	bl	22554 <fb_symbol_table_visit@@Base>
   1d454:	ldr	r3, [pc, #424]	; 1d604 <__flatcc_fb_gen_c_verifier@@Base+0x2990>
   1d458:	mov	r2, #16
   1d45c:	mov	r0, r7
   1d460:	ldr	r1, [sp, #12]
   1d464:	bl	14034 <qsort@plt>
   1d468:	str	r7, [sp, #24]
   1d46c:	mov	r3, #3
   1d470:	ldr	r2, [r4, #208]	; 0xd0
   1d474:	mov	r6, #0
   1d478:	mov	r0, r4
   1d47c:	ldr	r1, [pc, #388]	; 1d608 <__flatcc_fb_gen_c_verifier@@Base+0x2994>
   1d480:	str	r3, [sp, #40]	; 0x28
   1d484:	ldr	r3, [pc, #384]	; 1d60c <__flatcc_fb_gen_c_verifier@@Base+0x2998>
   1d488:	ldr	r2, [r2, #160]	; 0xa0
   1d48c:	str	r3, [sp, #28]
   1d490:	ldr	r3, [pc, #376]	; 1d610 <__flatcc_fb_gen_c_verifier@@Base+0x299c>
   1d494:	str	r6, [sp, #36]	; 0x24
   1d498:	str	r3, [sp, #32]
   1d49c:	add	r3, sp, #52	; 0x34
   1d4a0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d4a4:	ldr	r3, [r4, #220]	; 0xdc
   1d4a8:	mov	r0, r4
   1d4ac:	ldr	r1, [pc, #352]	; 1d614 <__flatcc_fb_gen_c_verifier@@Base+0x29a0>
   1d4b0:	add	r3, r3, #2
   1d4b4:	str	r3, [r4, #220]	; 0xdc
   1d4b8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d4bc:	ldr	r3, [r4, #220]	; 0xdc
   1d4c0:	cmp	r3, r6
   1d4c4:	bne	1d4dc <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   1d4c8:	ldr	r3, [pc, #296]	; 1d5f8 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1d4cc:	mov	r2, #1152	; 0x480
   1d4d0:	ldr	r1, [pc, #280]	; 1d5f0 <__flatcc_fb_gen_c_verifier@@Base+0x297c>
   1d4d4:	ldr	r0, [pc, #316]	; 1d618 <__flatcc_fb_gen_c_verifier@@Base+0x29a4>
   1d4d8:	b	1d43c <__flatcc_fb_gen_c_verifier@@Base+0x27c8>
   1d4dc:	cmp	r3, #1
   1d4e0:	streq	r6, [r4, #220]	; 0xdc
   1d4e4:	beq	1d4c8 <__flatcc_fb_gen_c_verifier@@Base+0x2854>
   1d4e8:	sub	r3, r3, #2
   1d4ec:	ldr	r1, [pc, #296]	; 1d61c <__flatcc_fb_gen_c_verifier@@Base+0x29a8>
   1d4f0:	mov	r0, r4
   1d4f4:	str	r3, [r4, #220]	; 0xdc
   1d4f8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d4fc:	ldr	r3, [r4, #220]	; 0xdc
   1d500:	cmp	r5, #0
   1d504:	add	r3, r3, #1
   1d508:	str	r3, [r4, #220]	; 0xdc
   1d50c:	bne	1d56c <__flatcc_fb_gen_c_verifier@@Base+0x28f8>
   1d510:	ldr	r1, [pc, #264]	; 1d620 <__flatcc_fb_gen_c_verifier@@Base+0x29ac>
   1d514:	mov	r0, r4
   1d518:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d51c:	ldr	r1, [pc, #256]	; 1d624 <__flatcc_fb_gen_c_verifier@@Base+0x29b0>
   1d520:	mov	r0, r4
   1d524:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d528:	ldr	r3, [r4, #220]	; 0xdc
   1d52c:	cmp	r3, #0
   1d530:	ldreq	r3, [pc, #192]	; 1d5f8 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1d534:	movweq	r2, #1157	; 0x485
   1d538:	beq	1d4d0 <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   1d53c:	sub	r3, r3, #1
   1d540:	mov	r0, r4
   1d544:	ldr	r1, [pc, #220]	; 1d628 <__flatcc_fb_gen_c_verifier@@Base+0x29b4>
   1d548:	str	r3, [r4, #220]	; 0xdc
   1d54c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d550:	ldr	r1, [pc, #212]	; 1d62c <__flatcc_fb_gen_c_verifier@@Base+0x29b8>
   1d554:	mov	r0, r4
   1d558:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d55c:	ldr	r0, [sp, #24]
   1d560:	bl	1c5d4 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1d564:	add	sp, sp, #260	; 0x104
   1d568:	pop	{r4, r5, r6, r7, pc}
   1d56c:	ldr	r1, [pc, #188]	; 1d630 <__flatcc_fb_gen_c_verifier@@Base+0x29bc>
   1d570:	mov	r0, r4
   1d574:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d578:	ldr	r1, [pc, #180]	; 1d634 <__flatcc_fb_gen_c_verifier@@Base+0x29c0>
   1d57c:	mov	r0, r4
   1d580:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d584:	ldr	r1, [pc, #172]	; 1d638 <__flatcc_fb_gen_c_verifier@@Base+0x29c4>
   1d588:	mov	r0, r4
   1d58c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d590:	ldr	r1, [pc, #148]	; 1d62c <__flatcc_fb_gen_c_verifier@@Base+0x29b8>
   1d594:	mov	r0, r4
   1d598:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d59c:	ldr	r1, [pc, #152]	; 1d63c <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
   1d5a0:	mov	r0, r4
   1d5a4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d5a8:	sub	r3, r5, #1
   1d5ac:	mov	r2, r6
   1d5b0:	str	r6, [sp]
   1d5b4:	add	r1, sp, #24
   1d5b8:	mov	r0, r4
   1d5bc:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1d5c0:	ldr	r1, [pc, #120]	; 1d640 <__flatcc_fb_gen_c_verifier@@Base+0x29cc>
   1d5c4:	mov	r0, r4
   1d5c8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d5cc:	ldr	r3, [r4, #220]	; 0xdc
   1d5d0:	cmp	r3, #0
   1d5d4:	ldreq	r3, [pc, #28]	; 1d5f8 <__flatcc_fb_gen_c_verifier@@Base+0x2984>
   1d5d8:	movweq	r2, #1166	; 0x48e
   1d5dc:	bne	1d53c <__flatcc_fb_gen_c_verifier@@Base+0x28c8>
   1d5e0:	b	1d4d0 <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   1d5e4:			; <UNDEFINED> instruction: 0x0001cbb0
   1d5e8:	andeq	r3, r4, sp, ror r5
   1d5ec:	strheq	sl, [r5], -r0
   1d5f0:	andeq	r2, r4, r1, ror r3
   1d5f4:	andeq	pc, r2, sp, lsl #28
   1d5f8:	andeq	r2, r4, r7, lsl #4
   1d5fc:	andeq	r8, r3, pc, ror #2
   1d600:	andeq	ip, r1, r8, lsr r9
   1d604:	andeq	ip, r1, ip, lsr #11
   1d608:	strdeq	r2, [r4], -r7
   1d60c:	andeq	ip, r1, ip, ror r7
   1d610:	andeq	fp, r1, r0, lsl #2
   1d614:			; <UNDEFINED> instruction: 0x000435b9
   1d618:	andeq	r2, r4, r6, asr #7
   1d61c:	andeq	r4, r4, r6, lsl #30
   1d620:	andeq	r3, r4, fp, ror #11
   1d624:	andeq	r3, r4, sp, lsl r6
   1d628:	andeq	r6, r3, r1, lsr #6
   1d62c:	andeq	r1, r3, fp, lsr #2
   1d630:	andeq	r3, r4, sl, lsr r6
   1d634:	andeq	r3, r4, r7, asr r6
   1d638:	andeq	r3, r4, r9, ror #12
   1d63c:	andeq	r3, r4, sp, lsr #9
   1d640:	muleq	r4, r6, r7
   1d644:	push	{r4, r5, lr}
   1d648:	mov	r5, r1
   1d64c:	sub	sp, sp, #268	; 0x10c
   1d650:	mov	r1, #0
   1d654:	mov	r4, r0
   1d658:	mov	r2, #28
   1d65c:	add	r0, sp, #16
   1d660:	str	r1, [sp, #12]
   1d664:	bl	13fc8 <memset@plt>
   1d668:	ldrh	r3, [r5, #8]
   1d66c:	sub	r3, r3, #3
   1d670:	cmp	r3, #1
   1d674:	bls	1d68c <__flatcc_fb_gen_c_verifier@@Base+0x2a18>
   1d678:	ldr	r3, [pc, #520]	; 1d888 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1d67c:	movw	r2, #1246	; 0x4de
   1d680:	ldr	r1, [pc, #516]	; 1d88c <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1d684:	ldr	r0, [pc, #516]	; 1d890 <__flatcc_fb_gen_c_verifier@@Base+0x2c1c>
   1d688:	bl	14070 <__assert_fail@plt>
   1d68c:	add	r1, sp, #12
   1d690:	ldr	r0, [r5, #20]
   1d694:	bl	1ca6c <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1d698:	cmp	r0, #0
   1d69c:	str	r0, [sp, #16]
   1d6a0:	bne	1d6e4 <__flatcc_fb_gen_c_verifier@@Base+0x2a70>
   1d6a4:	ldr	r3, [sp, #12]
   1d6a8:	cmp	r3, #0
   1d6ac:	ble	1d6e4 <__flatcc_fb_gen_c_verifier@@Base+0x2a70>
   1d6b0:	ldr	r3, [pc, #476]	; 1d894 <__flatcc_fb_gen_c_verifier@@Base+0x2c20>
   1d6b4:	ldr	r0, [pc, #476]	; 1d898 <__flatcc_fb_gen_c_verifier@@Base+0x2c24>
   1d6b8:	ldr	r2, [pc, #460]	; 1d88c <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1d6bc:	str	r3, [sp]
   1d6c0:	movw	r3, #1249	; 0x4e1
   1d6c4:	ldr	r1, [pc, #464]	; 1d89c <__flatcc_fb_gen_c_verifier@@Base+0x2c28>
   1d6c8:	ldr	r0, [r0]
   1d6cc:	bl	13fb0 <fprintf@plt>
   1d6d0:	ldr	r3, [pc, #432]	; 1d888 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1d6d4:	movw	r2, #1249	; 0x4e1
   1d6d8:	ldr	r1, [pc, #428]	; 1d88c <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1d6dc:	ldr	r0, [pc, #444]	; 1d8a0 <__flatcc_fb_gen_c_verifier@@Base+0x2c2c>
   1d6e0:	b	1d688 <__flatcc_fb_gen_c_verifier@@Base+0x2a14>
   1d6e4:	mov	r3, #2
   1d6e8:	mov	r2, #220	; 0xdc
   1d6ec:	str	r5, [sp, #28]
   1d6f0:	mov	r1, #0
   1d6f4:	add	r0, sp, #44	; 0x2c
   1d6f8:	str	r3, [sp, #32]
   1d6fc:	ldr	r3, [pc, #416]	; 1d8a4 <__flatcc_fb_gen_c_verifier@@Base+0x2c30>
   1d700:	str	r3, [sp, #20]
   1d704:	ldr	r3, [pc, #412]	; 1d8a8 <__flatcc_fb_gen_c_verifier@@Base+0x2c34>
   1d708:	str	r3, [sp, #24]
   1d70c:	bl	13fc8 <memset@plt>
   1d710:	add	r1, sp, #44	; 0x2c
   1d714:	mov	r0, r5
   1d718:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1d71c:	add	r2, sp, #44	; 0x2c
   1d720:	ldr	r1, [pc, #388]	; 1d8ac <__flatcc_fb_gen_c_verifier@@Base+0x2c38>
   1d724:	mov	r0, r4
   1d728:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d72c:	ldr	r3, [r4, #220]	; 0xdc
   1d730:	mov	r0, r4
   1d734:	ldr	r1, [pc, #372]	; 1d8b0 <__flatcc_fb_gen_c_verifier@@Base+0x2c3c>
   1d738:	add	r3, r3, #2
   1d73c:	str	r3, [r4, #220]	; 0xdc
   1d740:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d744:	ldr	r3, [r4, #220]	; 0xdc
   1d748:	cmp	r3, #0
   1d74c:	bne	1d764 <__flatcc_fb_gen_c_verifier@@Base+0x2af0>
   1d750:	ldr	r3, [pc, #304]	; 1d888 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1d754:	movw	r2, #1263	; 0x4ef
   1d758:	ldr	r1, [pc, #300]	; 1d88c <__flatcc_fb_gen_c_verifier@@Base+0x2c18>
   1d75c:	ldr	r0, [pc, #336]	; 1d8b4 <__flatcc_fb_gen_c_verifier@@Base+0x2c40>
   1d760:	b	1d688 <__flatcc_fb_gen_c_verifier@@Base+0x2a14>
   1d764:	cmp	r3, #1
   1d768:	moveq	r3, #0
   1d76c:	streq	r3, [r4, #220]	; 0xdc
   1d770:	beq	1d750 <__flatcc_fb_gen_c_verifier@@Base+0x2adc>
   1d774:	sub	r3, r3, #2
   1d778:	ldr	r1, [pc, #312]	; 1d8b8 <__flatcc_fb_gen_c_verifier@@Base+0x2c44>
   1d77c:	mov	r0, r4
   1d780:	str	r3, [r4, #220]	; 0xdc
   1d784:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d788:	ldr	r3, [r4, #220]	; 0xdc
   1d78c:	add	r3, r3, #1
   1d790:	str	r3, [r4, #220]	; 0xdc
   1d794:	ldr	r3, [sp, #12]
   1d798:	cmp	r3, #0
   1d79c:	bne	1d80c <__flatcc_fb_gen_c_verifier@@Base+0x2b98>
   1d7a0:	ldr	r1, [pc, #276]	; 1d8bc <__flatcc_fb_gen_c_verifier@@Base+0x2c48>
   1d7a4:	mov	r0, r4
   1d7a8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d7ac:	ldr	r1, [pc, #268]	; 1d8c0 <__flatcc_fb_gen_c_verifier@@Base+0x2c4c>
   1d7b0:	mov	r0, r4
   1d7b4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d7b8:	ldr	r1, [pc, #260]	; 1d8c4 <__flatcc_fb_gen_c_verifier@@Base+0x2c50>
   1d7bc:	mov	r0, r4
   1d7c0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d7c4:	ldr	r3, [r4, #220]	; 0xdc
   1d7c8:	cmp	r3, #0
   1d7cc:	ldreq	r3, [pc, #180]	; 1d888 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1d7d0:	movweq	r2, #1269	; 0x4f5
   1d7d4:	beq	1d758 <__flatcc_fb_gen_c_verifier@@Base+0x2ae4>
   1d7d8:	sub	r3, r3, #1
   1d7dc:	mov	r0, r4
   1d7e0:	ldr	r1, [pc, #224]	; 1d8c8 <__flatcc_fb_gen_c_verifier@@Base+0x2c54>
   1d7e4:	str	r3, [r4, #220]	; 0xdc
   1d7e8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d7ec:	ldr	r1, [pc, #216]	; 1d8cc <__flatcc_fb_gen_c_verifier@@Base+0x2c58>
   1d7f0:	mov	r0, r4
   1d7f4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d7f8:	ldr	r0, [sp, #16]
   1d7fc:	bl	1c5d4 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1d800:	mov	r0, #0
   1d804:	add	sp, sp, #268	; 0x10c
   1d808:	pop	{r4, r5, pc}
   1d80c:	ldr	r1, [pc, #188]	; 1d8d0 <__flatcc_fb_gen_c_verifier@@Base+0x2c5c>
   1d810:	mov	r0, r4
   1d814:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d818:	ldr	r1, [pc, #180]	; 1d8d4 <__flatcc_fb_gen_c_verifier@@Base+0x2c60>
   1d81c:	mov	r0, r4
   1d820:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d824:	ldr	r1, [pc, #172]	; 1d8d8 <__flatcc_fb_gen_c_verifier@@Base+0x2c64>
   1d828:	mov	r0, r4
   1d82c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d830:	ldr	r1, [pc, #148]	; 1d8cc <__flatcc_fb_gen_c_verifier@@Base+0x2c58>
   1d834:	mov	r0, r4
   1d838:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d83c:	ldr	r1, [pc, #152]	; 1d8dc <__flatcc_fb_gen_c_verifier@@Base+0x2c68>
   1d840:	mov	r0, r4
   1d844:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d848:	ldr	r3, [sp, #12]
   1d84c:	mov	r2, #0
   1d850:	add	r1, sp, #16
   1d854:	mov	r0, r4
   1d858:	str	r2, [sp]
   1d85c:	sub	r3, r3, #1
   1d860:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1d864:	ldr	r1, [pc, #116]	; 1d8e0 <__flatcc_fb_gen_c_verifier@@Base+0x2c6c>
   1d868:	mov	r0, r4
   1d86c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d870:	ldr	r3, [r4, #220]	; 0xdc
   1d874:	cmp	r3, #0
   1d878:	bne	1d7d8 <__flatcc_fb_gen_c_verifier@@Base+0x2b64>
   1d87c:	ldr	r3, [pc, #4]	; 1d888 <__flatcc_fb_gen_c_verifier@@Base+0x2c14>
   1d880:	movw	r2, #1278	; 0x4fe
   1d884:	b	1d758 <__flatcc_fb_gen_c_verifier@@Base+0x2ae4>
   1d888:	andeq	r2, r4, lr, lsl r2
   1d88c:	andeq	r2, r4, r1, ror r3
   1d890:	andeq	pc, r2, fp, ror lr	; <UNPREDICTABLE>
   1d894:	andeq	r3, r4, sp, ror r5
   1d898:	strheq	sl, [r5], -r0
   1d89c:	andeq	pc, r2, sp, lsl #28
   1d8a0:	andeq	r8, r3, pc, ror #2
   1d8a4:	andeq	ip, r1, r8, lsr r6
   1d8a8:	strdeq	fp, [r1], -r4
   1d8ac:	andeq	r3, r4, r5, ror r6
   1d8b0:	ldrdeq	r3, [r4], -r8
   1d8b4:	andeq	r2, r4, r6, asr #7
   1d8b8:	andeq	r4, r4, r6, lsl #30
   1d8bc:	andeq	r3, r4, sl, lsl #14
   1d8c0:	andeq	r3, r4, r4, lsr #14
   1d8c4:	andeq	r3, r4, sp, lsl r6
   1d8c8:	andeq	r6, r3, r1, lsr #6
   1d8cc:	andeq	r1, r3, fp, lsr #2
   1d8d0:	andeq	r3, r4, sl, lsr r6
   1d8d4:	andeq	r3, r4, r7, asr r6
   1d8d8:	andeq	r3, r4, r9, ror #12
   1d8dc:	andeq	r3, r4, sp, lsr #9
   1d8e0:	muleq	r4, r6, r7

0001d8e4 <__flatcc_fb_gen_c_json_parser@@Base>:
   1d8e4:	ldr	r3, [r0, #208]	; 0xd0
   1d8e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d8ec:	mov	r4, r0
   1d8f0:	sub	sp, sp, #276	; 0x114
   1d8f4:	ldr	r1, [pc, #3996]	; 1e898 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   1d8f8:	ldr	r2, [r3, #164]	; 0xa4
   1d8fc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d900:	ldr	r3, [r4, #208]	; 0xd0
   1d904:	mov	r0, r4
   1d908:	ldr	r1, [pc, #3980]	; 1e89c <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   1d90c:	ldr	r2, [r3, #164]	; 0xa4
   1d910:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d914:	ldr	r1, [pc, #3972]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1d918:	mov	r0, r4
   1d91c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d920:	ldr	r1, [pc, #3964]	; 1e8a4 <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   1d924:	mov	r0, r4
   1d928:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d92c:	ldr	r1, [pc, #3948]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1d930:	mov	r0, r4
   1d934:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d938:	ldr	r1, [pc, #3944]	; 1e8a8 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   1d93c:	mov	r0, r4
   1d940:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d944:	ldr	r2, [pc, #3936]	; 1e8ac <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   1d948:	mov	r0, r4
   1d94c:	ldr	r1, [pc, #3932]	; 1e8b0 <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   1d950:	bl	14e3c <__flatcc_fb_gen_c_includes@@Base>
   1d954:	ldr	r3, [r4, #212]	; 0xd4
   1d958:	ldr	r3, [r3, #140]	; 0x8c
   1d95c:	cmp	r3, #0
   1d960:	beq	1d970 <__flatcc_fb_gen_c_json_parser@@Base+0x8c>
   1d964:	ldr	r0, [pc, #3912]	; 1e8b4 <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   1d968:	ldr	r1, [r4, #204]	; 0xcc
   1d96c:	bl	1404c <fputs@plt>
   1d970:	ldr	r1, [pc, #3880]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1d974:	mov	r0, r4
   1d978:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d97c:	ldr	r3, [r4, #208]	; 0xd0
   1d980:	mov	r2, #220	; 0xdc
   1d984:	mov	r1, #0
   1d988:	add	r0, sp, #52	; 0x34
   1d98c:	ldr	r5, [r3, #52]	; 0x34
   1d990:	bl	13fc8 <memset@plt>
   1d994:	cmp	r5, #0
   1d998:	beq	1da84 <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1d99c:	ldrh	r3, [r5, #8]
   1d9a0:	cmp	r3, #1
   1d9a4:	bhi	1da84 <__flatcc_fb_gen_c_json_parser@@Base+0x1a0>
   1d9a8:	ldr	r1, [pc, #3848]	; 1e8b8 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   1d9ac:	mov	r0, r4
   1d9b0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d9b4:	ldr	r1, [pc, #3840]	; 1e8bc <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   1d9b8:	mov	r0, r4
   1d9bc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d9c0:	ldr	r1, [pc, #3832]	; 1e8c0 <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   1d9c4:	mov	r0, r4
   1d9c8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d9cc:	ldr	r1, [pc, #3824]	; 1e8c4 <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   1d9d0:	mov	r0, r4
   1d9d4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d9d8:	ldr	r1, [pc, #3816]	; 1e8c8 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   1d9dc:	mov	r0, r4
   1d9e0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d9e4:	ldr	r1, [pc, #3808]	; 1e8cc <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   1d9e8:	mov	r0, r4
   1d9ec:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d9f0:	ldr	r1, [pc, #3800]	; 1e8d0 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   1d9f4:	mov	r0, r4
   1d9f8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1d9fc:	ldr	r1, [pc, #3792]	; 1e8d4 <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   1da00:	mov	r0, r4
   1da04:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da08:	ldr	r1, [pc, #3784]	; 1e8d8 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1da0c:	mov	r0, r4
   1da10:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da14:	ldr	r3, [r4, #208]	; 0xd0
   1da18:	mov	r0, r4
   1da1c:	ldr	r1, [pc, #3768]	; 1e8dc <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   1da20:	ldr	r2, [r3, #160]	; 0xa0
   1da24:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da28:	ldr	r3, [r4, #220]	; 0xdc
   1da2c:	mov	r0, r4
   1da30:	ldr	r1, [pc, #3752]	; 1e8e0 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1da34:	add	r3, r3, #2
   1da38:	str	r3, [r4, #220]	; 0xdc
   1da3c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da40:	ldr	r3, [r4, #220]	; 0xdc
   1da44:	cmp	r3, #0
   1da48:	bne	1da60 <__flatcc_fb_gen_c_json_parser@@Base+0x17c>
   1da4c:	ldr	r3, [pc, #3728]	; 1e8e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1da50:	movw	r2, #1716	; 0x6b4
   1da54:	ldr	r1, [pc, #3724]	; 1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1da58:	ldr	r0, [pc, #3724]	; 1e8ec <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   1da5c:	bl	14070 <__assert_fail@plt>
   1da60:	cmp	r3, #1
   1da64:	moveq	r3, #0
   1da68:	streq	r3, [r4, #220]	; 0xdc
   1da6c:	beq	1da4c <__flatcc_fb_gen_c_json_parser@@Base+0x168>
   1da70:	sub	r3, r3, #2
   1da74:	ldr	r1, [pc, #3620]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1da78:	mov	r0, r4
   1da7c:	str	r3, [r4, #220]	; 0xdc
   1da80:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1da84:	ldr	r3, [r4, #208]	; 0xd0
   1da88:	ldr	r6, [pc, #3680]	; 1e8f0 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   1da8c:	ldr	r7, [pc, #3680]	; 1e8f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1da90:	ldr	r8, [pc, #3680]	; 1e8f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   1da94:	ldr	r5, [r3, #40]	; 0x28
   1da98:	cmp	r5, #0
   1da9c:	bne	1daf8 <__flatcc_fb_gen_c_json_parser@@Base+0x214>
   1daa0:	ldr	r3, [r4, #208]	; 0xd0
   1daa4:	mov	r2, r4
   1daa8:	ldr	r1, [pc, #3660]	; 1e8fc <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   1daac:	ldr	r0, [r3, #60]	; 0x3c
   1dab0:	bl	22c34 <fb_scope_table_visit@@Base>
   1dab4:	ldr	r3, [r4, #208]	; 0xd0
   1dab8:	mov	r0, r4
   1dabc:	ldr	r1, [pc, #3644]	; 1e900 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1dac0:	ldr	r2, [r3, #160]	; 0xa0
   1dac4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dac8:	ldr	r3, [r4, #220]	; 0xdc
   1dacc:	mov	r0, r4
   1dad0:	ldr	r1, [pc, #3612]	; 1e8f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1dad4:	add	r3, r3, #2
   1dad8:	str	r3, [r4, #220]	; 0xdc
   1dadc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dae0:	ldr	r3, [r4, #220]	; 0xdc
   1dae4:	cmp	r3, #0
   1dae8:	bne	1dc54 <__flatcc_fb_gen_c_json_parser@@Base+0x370>
   1daec:	ldr	r3, [pc, #3568]	; 1e8e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1daf0:	movw	r2, #1755	; 0x6db
   1daf4:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1daf8:	ldrh	r3, [r5, #8]
   1dafc:	cmp	r3, #4
   1db00:	ldrls	pc, [pc, r3, lsl #2]
   1db04:	b	1dbc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1db08:	ldrdeq	sp, [r1], -r0
   1db0c:	muleq	r1, ip, fp
   1db10:	andeq	sp, r1, r8, asr #23
   1db14:	andeq	sp, r1, r8, ror #23
   1db18:	andeq	sp, r1, ip, lsl fp
   1db1c:	add	r1, sp, #52	; 0x34
   1db20:	mov	r0, r5
   1db24:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1db28:	add	r2, sp, #52	; 0x34
   1db2c:	ldr	r1, [pc, #3536]	; 1e904 <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   1db30:	mov	r0, r4
   1db34:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1db38:	add	r2, sp, #52	; 0x34
   1db3c:	ldr	r1, [pc, #3524]	; 1e908 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   1db40:	mov	r0, r4
   1db44:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1db48:	add	r2, sp, #52	; 0x34
   1db4c:	mov	r1, r6
   1db50:	mov	r0, r4
   1db54:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1db58:	ldr	r3, [r4, #220]	; 0xdc
   1db5c:	mov	r1, r7
   1db60:	mov	r0, r4
   1db64:	add	r3, r3, #2
   1db68:	str	r3, [r4, #220]	; 0xdc
   1db6c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1db70:	ldr	r3, [r4, #220]	; 0xdc
   1db74:	cmp	r3, #0
   1db78:	bne	1db88 <__flatcc_fb_gen_c_json_parser@@Base+0x2a4>
   1db7c:	ldr	r3, [pc, #3424]	; 1e8e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1db80:	movw	r2, #1731	; 0x6c3
   1db84:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1db88:	cmp	r3, #1
   1db8c:	bne	1dc48 <__flatcc_fb_gen_c_json_parser@@Base+0x364>
   1db90:	mov	r3, #0
   1db94:	str	r3, [r4, #220]	; 0xdc
   1db98:	b	1db7c <__flatcc_fb_gen_c_json_parser@@Base+0x298>
   1db9c:	add	r1, sp, #52	; 0x34
   1dba0:	mov	r0, r5
   1dba4:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1dba8:	add	r2, sp, #52	; 0x34
   1dbac:	ldr	r1, [pc, #3416]	; 1e90c <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1dbb0:	mov	r0, r4
   1dbb4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dbb8:	ldr	r1, [pc, #3408]	; 1e910 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   1dbbc:	add	r2, sp, #52	; 0x34
   1dbc0:	mov	r0, r4
   1dbc4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dbc8:	ldr	r5, [r5]
   1dbcc:	b	1da98 <__flatcc_fb_gen_c_json_parser@@Base+0x1b4>
   1dbd0:	add	r1, sp, #52	; 0x34
   1dbd4:	mov	r0, r5
   1dbd8:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1dbdc:	add	r2, sp, #52	; 0x34
   1dbe0:	mov	r1, r8
   1dbe4:	b	1dbc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc>
   1dbe8:	add	r1, sp, #52	; 0x34
   1dbec:	mov	r0, r5
   1dbf0:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1dbf4:	add	r2, sp, #52	; 0x34
   1dbf8:	mov	r1, r6
   1dbfc:	mov	r0, r4
   1dc00:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dc04:	ldr	r3, [r4, #220]	; 0xdc
   1dc08:	add	r2, sp, #52	; 0x34
   1dc0c:	mov	r1, r7
   1dc10:	mov	r0, r4
   1dc14:	add	r3, r3, #2
   1dc18:	str	r3, [r4, #220]	; 0xdc
   1dc1c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dc20:	ldr	r3, [r4, #220]	; 0xdc
   1dc24:	cmp	r3, #0
   1dc28:	bne	1dc38 <__flatcc_fb_gen_c_json_parser@@Base+0x354>
   1dc2c:	ldr	r3, [pc, #3248]	; 1e8e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1dc30:	movw	r2, #1747	; 0x6d3
   1dc34:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1dc38:	cmp	r3, #1
   1dc3c:	moveq	r3, #0
   1dc40:	streq	r3, [r4, #220]	; 0xdc
   1dc44:	beq	1dc2c <__flatcc_fb_gen_c_json_parser@@Base+0x348>
   1dc48:	sub	r3, r3, #2
   1dc4c:	str	r3, [r4, #220]	; 0xdc
   1dc50:	b	1dbc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4>
   1dc54:	cmp	r3, #1
   1dc58:	streq	r5, [r4, #220]	; 0xdc
   1dc5c:	beq	1daec <__flatcc_fb_gen_c_json_parser@@Base+0x208>
   1dc60:	sub	r3, r3, #2
   1dc64:	ldr	r1, [pc, #3124]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1dc68:	mov	r0, r4
   1dc6c:	str	r3, [r4, #220]	; 0xdc
   1dc70:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dc74:	ldr	r3, [r4, #208]	; 0xd0
   1dc78:	ldr	r8, [pc, #3220]	; 1e914 <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   1dc7c:	ldr	r9, [pc, #3220]	; 1e918 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   1dc80:	ldr	r5, [r3, #40]	; 0x28
   1dc84:	cmp	r5, #0
   1dc88:	bne	1dde8 <__flatcc_fb_gen_c_json_parser@@Base+0x504>
   1dc8c:	ldr	r3, [r4, #208]	; 0xd0
   1dc90:	mov	r2, r4
   1dc94:	ldr	r1, [pc, #3200]	; 1e91c <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   1dc98:	ldr	r0, [r3, #60]	; 0x3c
   1dc9c:	bl	22c34 <fb_scope_table_visit@@Base>
   1dca0:	mov	r2, #28
   1dca4:	mov	r1, r5
   1dca8:	add	r0, sp, #24
   1dcac:	bl	13fc8 <memset@plt>
   1dcb0:	ldr	r6, [r4, #208]	; 0xd0
   1dcb4:	mov	r2, #36	; 0x24
   1dcb8:	mov	r1, r5
   1dcbc:	add	r0, sp, #56	; 0x38
   1dcc0:	ldr	r8, [r6, #60]	; 0x3c
   1dcc4:	bl	13fc8 <memset@plt>
   1dcc8:	mov	r3, #1
   1dccc:	add	r2, sp, #52	; 0x34
   1dcd0:	ldr	r1, [pc, #3144]	; 1e920 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   1dcd4:	str	r3, [sp, #52]	; 0x34
   1dcd8:	mov	r0, r8
   1dcdc:	str	r6, [sp, #92]	; 0x5c
   1dce0:	bl	22c34 <fb_scope_table_visit@@Base>
   1dce4:	ldr	r9, [sp, #56]	; 0x38
   1dce8:	mov	r1, #8
   1dcec:	mov	r0, r9
   1dcf0:	bl	13ec0 <calloc@plt>
   1dcf4:	ldr	r7, [sp, #60]	; 0x3c
   1dcf8:	mov	fp, r0
   1dcfc:	mov	r1, #8
   1dd00:	str	fp, [sp, #68]	; 0x44
   1dd04:	mov	r0, r7
   1dd08:	bl	13ec0 <calloc@plt>
   1dd0c:	ldr	r6, [sp, #64]	; 0x40
   1dd10:	mov	sl, r0
   1dd14:	str	sl, [sp, #72]	; 0x48
   1dd18:	mov	r0, r6
   1dd1c:	bl	13f68 <malloc@plt>
   1dd20:	cmp	r9, #0
   1dd24:	str	r0, [sp, #76]	; 0x4c
   1dd28:	movle	r9, #0
   1dd2c:	movgt	r9, #1
   1dd30:	str	fp, [sp, #80]	; 0x50
   1dd34:	cmp	fp, #0
   1dd38:	str	sl, [sp, #84]	; 0x54
   1dd3c:	movne	r9, #0
   1dd40:	str	r0, [sp, #88]	; 0x58
   1dd44:	cmp	r9, #0
   1dd48:	bne	1dd80 <__flatcc_fb_gen_c_json_parser@@Base+0x49c>
   1dd4c:	cmp	r7, #0
   1dd50:	movle	r7, #0
   1dd54:	movgt	r7, #1
   1dd58:	cmp	sl, #0
   1dd5c:	movne	r7, #0
   1dd60:	cmp	r7, #0
   1dd64:	bne	1dd80 <__flatcc_fb_gen_c_json_parser@@Base+0x49c>
   1dd68:	adds	r6, r6, #0
   1dd6c:	movne	r6, #1
   1dd70:	cmp	r0, #0
   1dd74:	movne	r6, #0
   1dd78:	cmp	r6, #0
   1dd7c:	beq	1e6c4 <__flatcc_fb_gen_c_json_parser@@Base+0xde0>
   1dd80:	add	r0, sp, #52	; 0x34
   1dd84:	bl	1c5e0 <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   1dd88:	ldr	r3, [r4, #208]	; 0xd0
   1dd8c:	ldr	r5, [r3, #52]	; 0x34
   1dd90:	cmp	r5, #0
   1dd94:	beq	1ddac <__flatcc_fb_gen_c_json_parser@@Base+0x4c8>
   1dd98:	ldrh	r6, [r5, #8]
   1dd9c:	cmp	r6, #0
   1dda0:	beq	1eae0 <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   1dda4:	cmp	r6, #1
   1dda8:	beq	1ec94 <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   1ddac:	ldr	r3, [r4, #212]	; 0xd4
   1ddb0:	ldr	r3, [r3, #140]	; 0x8c
   1ddb4:	cmp	r3, #0
   1ddb8:	beq	1ddc8 <__flatcc_fb_gen_c_json_parser@@Base+0x4e4>
   1ddbc:	ldr	r0, [pc, #2912]	; 1e924 <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   1ddc0:	ldr	r1, [r4, #204]	; 0xcc
   1ddc4:	bl	1404c <fputs@plt>
   1ddc8:	ldr	r3, [r4, #208]	; 0xd0
   1ddcc:	mov	r0, r4
   1ddd0:	ldr	r1, [pc, #2896]	; 1e928 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   1ddd4:	ldr	r2, [r3, #164]	; 0xa4
   1ddd8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dddc:	mov	r0, #0
   1dde0:	add	sp, sp, #276	; 0x114
   1dde4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dde8:	ldrh	r3, [r5, #8]
   1ddec:	cmp	r3, #4
   1ddf0:	ldrls	pc, [pc, r3, lsl #2]
   1ddf4:	b	1e22c <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1ddf8:	andeq	lr, r1, r4, lsr r2
   1ddfc:	andeq	sp, r1, r4, lsr lr
   1de00:	andeq	lr, r1, ip, lsr #4
   1de04:	andeq	sp, r1, r4, lsr #28
   1de08:	andeq	sp, r1, ip, lsl #28
   1de0c:	mov	r1, r5
   1de10:	mov	r0, r4
   1de14:	bl	1b454 <__flatcc_fb_gen_c_verifier@@Base+0x7e0>
   1de18:	mov	r1, r5
   1de1c:	mov	r0, r4
   1de20:	bl	1b89c <__flatcc_fb_gen_c_verifier@@Base+0xc28>
   1de24:	mov	r1, r5
   1de28:	mov	r0, r4
   1de2c:	bl	1d644 <__flatcc_fb_gen_c_verifier@@Base+0x29d0>
   1de30:	b	1e22c <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1de34:	mov	r2, #28
   1de38:	mov	r1, #0
   1de3c:	add	r0, sp, #24
   1de40:	bl	13fc8 <memset@plt>
   1de44:	ldrh	r3, [r5, #8]
   1de48:	cmp	r3, #1
   1de4c:	beq	1de64 <__flatcc_fb_gen_c_json_parser@@Base+0x580>
   1de50:	ldr	r3, [pc, #2772]	; 1e92c <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1de54:	movw	r2, #1301	; 0x515
   1de58:	ldr	r1, [pc, #2696]	; 1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1de5c:	ldr	r0, [pc, #2764]	; 1e930 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   1de60:	b	1da5c <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1de64:	add	r1, sp, #20
   1de68:	ldr	r0, [r5, #20]
   1de6c:	bl	1ca6c <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1de70:	cmp	r0, #0
   1de74:	str	r0, [sp, #24]
   1de78:	bne	1debc <__flatcc_fb_gen_c_json_parser@@Base+0x5d8>
   1de7c:	ldr	r3, [sp, #20]
   1de80:	cmp	r3, #0
   1de84:	ble	1debc <__flatcc_fb_gen_c_json_parser@@Base+0x5d8>
   1de88:	ldr	r3, [pc, #2724]	; 1e934 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1de8c:	ldr	r0, [pc, #2724]	; 1e938 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1de90:	ldr	r2, [pc, #2640]	; 1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1de94:	str	r3, [sp]
   1de98:	movw	r3, #1303	; 0x517
   1de9c:	ldr	r1, [pc, #2712]	; 1e93c <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1dea0:	ldr	r0, [r0]
   1dea4:	bl	13fb0 <fprintf@plt>
   1dea8:	ldr	r3, [pc, #2684]	; 1e92c <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1deac:	movw	r2, #1303	; 0x517
   1deb0:	ldr	r1, [pc, #2608]	; 1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1deb4:	ldr	r0, [pc, #2692]	; 1e940 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1deb8:	b	1da5c <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1debc:	mov	r3, #1
   1dec0:	mov	r2, #220	; 0xdc
   1dec4:	strd	r8, [sp, #28]
   1dec8:	mov	r1, #0
   1decc:	add	r0, sp, #52	; 0x34
   1ded0:	str	r5, [sp, #36]	; 0x24
   1ded4:	str	r3, [sp, #40]	; 0x28
   1ded8:	bl	13fc8 <memset@plt>
   1dedc:	add	r1, sp, #52	; 0x34
   1dee0:	mov	r0, r5
   1dee4:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1dee8:	add	r2, sp, #52	; 0x34
   1deec:	ldr	r1, [pc, #2640]	; 1e944 <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1def0:	mov	r0, r4
   1def4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1def8:	ldr	r1, [pc, #2856]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1defc:	mov	r0, r4
   1df00:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df04:	ldr	r3, [r4, #220]	; 0xdc
   1df08:	mov	r0, r4
   1df0c:	ldr	r1, [pc, #2612]	; 1e948 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1df10:	add	r3, r3, #1
   1df14:	str	r3, [r4, #220]	; 0xdc
   1df18:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df1c:	ldr	r3, [sp, #20]
   1df20:	cmp	r3, #0
   1df24:	ble	1df58 <__flatcc_fb_gen_c_json_parser@@Base+0x674>
   1df28:	ldr	r1, [pc, #2588]	; 1e94c <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1df2c:	mov	r0, r4
   1df30:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df34:	ldr	r1, [pc, #2580]	; 1e950 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1df38:	mov	r0, r4
   1df3c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df40:	ldr	r1, [pc, #2740]	; 1e9fc <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1df44:	mov	r0, r4
   1df48:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df4c:	ldr	r1, [pc, #2732]	; 1ea00 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1df50:	mov	r0, r4
   1df54:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df58:	ldr	r1, [pc, #2368]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1df5c:	mov	r0, r4
   1df60:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df64:	ldr	r1, [pc, #2536]	; 1e954 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1df68:	mov	r0, r4
   1df6c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df70:	ldr	r1, [pc, #2528]	; 1e958 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1df74:	mov	r0, r4
   1df78:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1df7c:	ldr	r3, [r4, #220]	; 0xdc
   1df80:	add	r3, r3, #1
   1df84:	str	r3, [r4, #220]	; 0xdc
   1df88:	ldr	r3, [sp, #20]
   1df8c:	cmp	r3, #0
   1df90:	bne	1dfd0 <__flatcc_fb_gen_c_json_parser@@Base+0x6ec>
   1df94:	ldr	r1, [pc, #2496]	; 1e95c <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1df98:	mov	r0, r4
   1df9c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dfa0:	ldr	r1, [pc, #2488]	; 1e960 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1dfa4:	mov	r0, r4
   1dfa8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dfac:	ldr	r1, [pc, #2480]	; 1e964 <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1dfb0:	mov	r0, r4
   1dfb4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dfb8:	ldr	r3, [r4, #220]	; 0xdc
   1dfbc:	cmp	r3, #0
   1dfc0:	bne	1e008 <__flatcc_fb_gen_c_json_parser@@Base+0x724>
   1dfc4:	ldr	r3, [pc, #2400]	; 1e92c <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1dfc8:	movw	r2, #1334	; 0x536
   1dfcc:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1dfd0:	mov	r0, r4
   1dfd4:	ldr	r1, [pc, #2444]	; 1e968 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   1dfd8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dfdc:	mov	r0, r4
   1dfe0:	ldr	r1, [pc, #2588]	; 1ea04 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1dfe4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1dfe8:	ldr	r3, [sp, #20]
   1dfec:	mov	r2, #0
   1dff0:	add	r1, sp, #24
   1dff4:	mov	r0, r4
   1dff8:	str	r2, [sp]
   1dffc:	sub	r3, r3, #1
   1e000:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1e004:	b	1dfac <__flatcc_fb_gen_c_json_parser@@Base+0x6c8>
   1e008:	sub	r3, r3, #1
   1e00c:	ldr	r1, [pc, #2620]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e010:	mov	r0, r4
   1e014:	str	r3, [r4, #220]	; 0xdc
   1e018:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e01c:	ldr	r1, [pc, #2532]	; 1ea08 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1e020:	mov	r0, r4
   1e024:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e028:	ldr	r3, [sp, #20]
   1e02c:	cmp	r3, #0
   1e030:	ble	1e064 <__flatcc_fb_gen_c_json_parser@@Base+0x780>
   1e034:	ldr	r3, [r4, #220]	; 0xdc
   1e038:	mov	r0, r4
   1e03c:	ldr	r1, [pc, #2344]	; 1e96c <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1e040:	str	r3, [r4, #228]	; 0xe4
   1e044:	mov	r3, #0
   1e048:	str	r3, [r4, #220]	; 0xdc
   1e04c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e050:	ldr	r3, [r4, #228]	; 0xe4
   1e054:	mov	r0, r4
   1e058:	ldr	r1, [pc, #2320]	; 1e970 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1e05c:	str	r3, [r4, #220]	; 0xdc
   1e060:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e064:	ldr	r3, [r4, #220]	; 0xdc
   1e068:	cmp	r3, #0
   1e06c:	ldreq	r3, [pc, #2232]	; 1e92c <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1e070:	movweq	r2, #1343	; 0x53f
   1e074:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e078:	sub	r3, r3, #1
   1e07c:	ldr	r1, [pc, #2508]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e080:	mov	r0, r4
   1e084:	str	r3, [r4, #220]	; 0xdc
   1e088:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e08c:	ldr	r1, [pc, #2060]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e090:	mov	r0, r4
   1e094:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e098:	ldr	r0, [sp, #24]
   1e09c:	bl	1c5d4 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1e0a0:	ldrh	r3, [r5, #8]
   1e0a4:	cmp	r3, #1
   1e0a8:	ldrne	r3, [pc, #2244]	; 1e974 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1e0ac:	movwne	r2, #1353	; 0x549
   1e0b0:	bne	1de58 <__flatcc_fb_gen_c_json_parser@@Base+0x574>
   1e0b4:	mov	r2, #220	; 0xdc
   1e0b8:	mov	r1, #0
   1e0bc:	add	r0, sp, #52	; 0x34
   1e0c0:	bl	13fc8 <memset@plt>
   1e0c4:	add	r1, sp, #52	; 0x34
   1e0c8:	mov	r0, r5
   1e0cc:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e0d0:	add	r2, sp, #52	; 0x34
   1e0d4:	ldr	r1, [pc, #2204]	; 1e978 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   1e0d8:	mov	r0, r4
   1e0dc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e0e0:	ldr	r1, [pc, #2368]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1e0e4:	mov	r0, r4
   1e0e8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e0ec:	ldr	r3, [r4, #220]	; 0xdc
   1e0f0:	mov	r0, r4
   1e0f4:	ldr	r1, [pc, #2132]	; 1e950 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1e0f8:	add	r3, r3, #1
   1e0fc:	str	r3, [r4, #220]	; 0xdc
   1e100:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e104:	ldr	r1, [pc, #1940]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e108:	mov	r0, r4
   1e10c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e110:	ldr	r1, [pc, #2148]	; 1e97c <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1e114:	mov	r0, r4
   1e118:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e11c:	ldrh	r3, [r5, #104]	; 0x68
   1e120:	mov	r0, r4
   1e124:	ldr	r1, [pc, #2132]	; 1e980 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1e128:	str	r3, [sp]
   1e12c:	ldrd	r2, [r5, #112]	; 0x70
   1e130:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e134:	add	r2, sp, #52	; 0x34
   1e138:	ldr	r1, [pc, #2116]	; 1e984 <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   1e13c:	mov	r0, r4
   1e140:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e144:	ldr	r1, [pc, #2108]	; 1e988 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   1e148:	mov	r0, r4
   1e14c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e150:	ldr	r1, [pc, #2224]	; 1ea08 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1e154:	mov	r0, r4
   1e158:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e15c:	ldr	r3, [r4, #220]	; 0xdc
   1e160:	mov	r0, r4
   1e164:	ldr	r1, [pc, #2048]	; 1e96c <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1e168:	str	r3, [r4, #228]	; 0xe4
   1e16c:	mov	r3, #0
   1e170:	str	r3, [r4, #220]	; 0xdc
   1e174:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e178:	ldr	r3, [r4, #228]	; 0xe4
   1e17c:	mov	r0, r4
   1e180:	ldr	r1, [pc, #2024]	; 1e970 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1e184:	str	r3, [r4, #220]	; 0xdc
   1e188:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e18c:	ldr	r3, [r4, #220]	; 0xdc
   1e190:	cmp	r3, #0
   1e194:	ldreq	r3, [pc, #2008]	; 1e974 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1e198:	movweq	r2, #1370	; 0x55a
   1e19c:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e1a0:	sub	r3, r3, #1
   1e1a4:	ldr	r1, [pc, #2212]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e1a8:	mov	r0, r4
   1e1ac:	str	r3, [r4, #220]	; 0xdc
   1e1b0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1b4:	ldr	r1, [pc, #1764]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e1b8:	mov	r0, r4
   1e1bc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1c0:	add	r2, sp, #52	; 0x34
   1e1c4:	ldr	r1, [pc, #1984]	; 1e98c <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   1e1c8:	mov	r0, r4
   1e1cc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1d0:	ldr	r1, [pc, #2128]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1e1d4:	mov	r0, r4
   1e1d8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1dc:	ldr	r3, [r4, #220]	; 0xdc
   1e1e0:	add	r2, sp, #52	; 0x34
   1e1e4:	mov	r0, r4
   1e1e8:	ldr	r1, [pc, #1952]	; 1e990 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   1e1ec:	add	r3, r3, #1
   1e1f0:	str	r3, [r4, #220]	; 0xdc
   1e1f4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e1f8:	ldr	r3, [r4, #220]	; 0xdc
   1e1fc:	cmp	r3, #0
   1e200:	ldreq	r3, [pc, #1900]	; 1e974 <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   1e204:	moveq	r2, #1376	; 0x560
   1e208:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e20c:	sub	r3, r3, #1
   1e210:	ldr	r1, [pc, #2104]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e214:	mov	r0, r4
   1e218:	str	r3, [r4, #220]	; 0xdc
   1e21c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e220:	ldr	r1, [pc, #1656]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e224:	mov	r0, r4
   1e228:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e22c:	ldr	r5, [r5]
   1e230:	b	1dc84 <__flatcc_fb_gen_c_json_parser@@Base+0x3a0>
   1e234:	mov	r2, #28
   1e238:	mov	r1, #0
   1e23c:	add	r0, sp, #24
   1e240:	bl	13fc8 <memset@plt>
   1e244:	ldrh	r3, [r5, #8]
   1e248:	cmp	r3, #0
   1e24c:	beq	1e264 <__flatcc_fb_gen_c_json_parser@@Base+0x980>
   1e250:	ldr	r3, [pc, #1852]	; 1e994 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e254:	movw	r2, #1390	; 0x56e
   1e258:	ldr	r1, [pc, #1672]	; 1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e25c:	ldr	r0, [pc, #1844]	; 1e998 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   1e260:	b	1da5c <__flatcc_fb_gen_c_json_parser@@Base+0x178>
   1e264:	add	r1, sp, #20
   1e268:	ldr	r0, [r5, #20]
   1e26c:	bl	1ca6c <__flatcc_fb_gen_c_verifier@@Base+0x1df8>
   1e270:	cmp	r0, #0
   1e274:	str	r0, [sp, #24]
   1e278:	ldr	ip, [sp, #20]
   1e27c:	bne	1e2b4 <__flatcc_fb_gen_c_json_parser@@Base+0x9d0>
   1e280:	cmp	ip, #0
   1e284:	ble	1e2b4 <__flatcc_fb_gen_c_json_parser@@Base+0x9d0>
   1e288:	ldr	r3, [pc, #1700]	; 1e934 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1e28c:	ldr	r0, [pc, #1700]	; 1e938 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1e290:	ldr	r2, [pc, #1616]	; 1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e294:	str	r3, [sp]
   1e298:	mov	r3, #1392	; 0x570
   1e29c:	ldr	r1, [pc, #1688]	; 1e93c <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1e2a0:	ldr	r0, [r0]
   1e2a4:	bl	13fb0 <fprintf@plt>
   1e2a8:	ldr	r3, [pc, #1764]	; 1e994 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e2ac:	mov	r2, #1392	; 0x570
   1e2b0:	b	1deb0 <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   1e2b4:	mov	r3, #0
   1e2b8:	add	r0, r0, #12
   1e2bc:	strd	r8, [sp, #28]
   1e2c0:	mov	r1, r3
   1e2c4:	mov	r2, r3
   1e2c8:	str	r5, [sp, #36]	; 0x24
   1e2cc:	str	r3, [sp, #40]	; 0x28
   1e2d0:	str	r3, [sp, #44]	; 0x2c
   1e2d4:	cmp	r2, ip
   1e2d8:	blt	1e454 <__flatcc_fb_gen_c_json_parser@@Base+0xb70>
   1e2dc:	cmp	r3, #0
   1e2e0:	mov	r2, #220	; 0xdc
   1e2e4:	add	r0, sp, #52	; 0x34
   1e2e8:	strne	r1, [sp, #44]	; 0x2c
   1e2ec:	mov	r1, #0
   1e2f0:	bl	13fc8 <memset@plt>
   1e2f4:	add	r1, sp, #52	; 0x34
   1e2f8:	mov	r0, r5
   1e2fc:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1e300:	add	r2, sp, #52	; 0x34
   1e304:	ldr	r1, [pc, #1680]	; 1e99c <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   1e308:	mov	r0, r4
   1e30c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e310:	ldr	r1, [pc, #1808]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1e314:	mov	r0, r4
   1e318:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e31c:	ldr	r3, [r4, #220]	; 0xdc
   1e320:	mov	r0, r4
   1e324:	ldr	r1, [pc, #1564]	; 1e948 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1e328:	add	r3, r3, #1
   1e32c:	str	r3, [r4, #220]	; 0xdc
   1e330:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e334:	ldr	r3, [sp, #20]
   1e338:	cmp	r3, #0
   1e33c:	ble	1e370 <__flatcc_fb_gen_c_json_parser@@Base+0xa8c>
   1e340:	ldr	r1, [pc, #1544]	; 1e950 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1e344:	mov	r0, r4
   1e348:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e34c:	ldr	r1, [pc, #1612]	; 1e9a0 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   1e350:	mov	r0, r4
   1e354:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e358:	ldr	r1, [pc, #1692]	; 1e9fc <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1e35c:	mov	r0, r4
   1e360:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e364:	ldr	r1, [pc, #1684]	; 1ea00 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1e368:	mov	r0, r4
   1e36c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e370:	ldr	r3, [sp, #44]	; 0x2c
   1e374:	cmp	r3, #0
   1e378:	beq	1e388 <__flatcc_fb_gen_c_json_parser@@Base+0xaa4>
   1e37c:	ldr	r1, [pc, #1568]	; 1e9a4 <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   1e380:	mov	r0, r4
   1e384:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e388:	ldr	r1, [pc, #1296]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e38c:	mov	r0, r4
   1e390:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e394:	ldr	r1, [pc, #1504]	; 1e97c <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   1e398:	mov	r0, r4
   1e39c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3a0:	ldr	r1, [pc, #1536]	; 1e9a8 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   1e3a4:	mov	r0, r4
   1e3a8:	ldrd	r2, [r5, #96]	; 0x60
   1e3ac:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3b0:	ldr	r2, [sp, #44]	; 0x2c
   1e3b4:	cmp	r2, #0
   1e3b8:	beq	1e3cc <__flatcc_fb_gen_c_json_parser@@Base+0xae8>
   1e3bc:	asr	r3, r2, #31
   1e3c0:	ldr	r1, [pc, #1508]	; 1e9ac <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   1e3c4:	mov	r0, r4
   1e3c8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3cc:	ldr	r1, [pc, #1408]	; 1e954 <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1e3d0:	mov	r0, r4
   1e3d4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3d8:	ldr	r1, [pc, #1400]	; 1e958 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1e3dc:	mov	r0, r4
   1e3e0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3e4:	ldr	r3, [r4, #220]	; 0xdc
   1e3e8:	mov	r0, r4
   1e3ec:	ldr	r1, [pc, #1396]	; 1e968 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   1e3f0:	add	r3, r3, #1
   1e3f4:	str	r3, [r4, #220]	; 0xdc
   1e3f8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e3fc:	ldr	r3, [sp, #20]
   1e400:	cmp	r3, #0
   1e404:	ble	1e46c <__flatcc_fb_gen_c_json_parser@@Base+0xb88>
   1e408:	ldr	r1, [pc, #1524]	; 1ea04 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1e40c:	mov	r0, r4
   1e410:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e414:	ldr	r3, [sp, #20]
   1e418:	mov	r2, #0
   1e41c:	add	r1, sp, #24
   1e420:	mov	r0, r4
   1e424:	str	r2, [sp]
   1e428:	sub	r3, r3, #1
   1e42c:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1e430:	ldr	r1, [pc, #1400]	; 1e9b0 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   1e434:	mov	r0, r4
   1e438:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e43c:	ldr	r3, [r4, #220]	; 0xdc
   1e440:	cmp	r3, #0
   1e444:	bne	1e488 <__flatcc_fb_gen_c_json_parser@@Base+0xba4>
   1e448:	ldr	r3, [pc, #1348]	; 1e994 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e44c:	movw	r2, #1438	; 0x59e
   1e450:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e454:	ldr	r3, [r0, r2, lsl #4]
   1e458:	add	r2, r2, #1
   1e45c:	cmp	r3, #0
   1e460:	addne	r1, r1, #1
   1e464:	mov	r3, #1
   1e468:	b	1e2d4 <__flatcc_fb_gen_c_json_parser@@Base+0x9f0>
   1e46c:	mov	r0, r4
   1e470:	ldr	r1, [pc, #1340]	; 1e9b4 <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   1e474:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e478:	ldr	r1, [pc, #1248]	; 1e960 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1e47c:	mov	r0, r4
   1e480:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e484:	b	1e430 <__flatcc_fb_gen_c_json_parser@@Base+0xb4c>
   1e488:	sub	r3, r3, #1
   1e48c:	ldr	r1, [pc, #1468]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e490:	mov	r0, r4
   1e494:	mov	r6, #0
   1e498:	mov	r7, #1
   1e49c:	str	r3, [r4, #220]	; 0xdc
   1e4a0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e4a4:	ldr	r1, [pc, #1292]	; 1e9b8 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   1e4a8:	mov	r0, r4
   1e4ac:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e4b0:	ldr	r3, [sp, #20]
   1e4b4:	cmp	r6, r3
   1e4b8:	blt	1e4dc <__flatcc_fb_gen_c_json_parser@@Base+0xbf8>
   1e4bc:	cmp	r7, #0
   1e4c0:	bne	1e5b8 <__flatcc_fb_gen_c_json_parser@@Base+0xcd4>
   1e4c4:	ldr	r3, [r4, #220]	; 0xdc
   1e4c8:	cmp	r3, #0
   1e4cc:	bne	1e558 <__flatcc_fb_gen_c_json_parser@@Base+0xc74>
   1e4d0:	ldr	r3, [pc, #1212]	; 1e994 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e4d4:	movw	r2, #1458	; 0x5b2
   1e4d8:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e4dc:	ldr	r3, [sp, #24]
   1e4e0:	add	r3, r3, r6, lsl #4
   1e4e4:	ldr	r2, [r3, #8]
   1e4e8:	ldrh	r3, [r2, #72]	; 0x48
   1e4ec:	ands	r1, r3, #4
   1e4f0:	str	r1, [sp, #12]
   1e4f4:	bne	1e540 <__flatcc_fb_gen_c_json_parser@@Base+0xc5c>
   1e4f8:	tst	r3, #256	; 0x100
   1e4fc:	beq	1e540 <__flatcc_fb_gen_c_json_parser@@Base+0xc5c>
   1e500:	mov	r0, r2
   1e504:	bl	1b004 <__flatcc_fb_gen_c_verifier@@Base+0x390>
   1e508:	ldrd	r2, [r2, #96]	; 0x60
   1e50c:	subs	sl, r2, r0
   1e510:	sbc	fp, r3, r0, asr #31
   1e514:	cmp	r7, #0
   1e518:	mov	r2, sl
   1e51c:	mov	r3, fp
   1e520:	beq	1e548 <__flatcc_fb_gen_c_json_parser@@Base+0xc64>
   1e524:	ldr	r1, [pc, #1168]	; 1e9bc <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   1e528:	mov	r0, r4
   1e52c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e530:	ldr	r3, [r4, #220]	; 0xdc
   1e534:	ldr	r7, [sp, #12]
   1e538:	add	r3, r3, #1
   1e53c:	str	r3, [r4, #220]	; 0xdc
   1e540:	add	r6, r6, #1
   1e544:	b	1e4b0 <__flatcc_fb_gen_c_json_parser@@Base+0xbcc>
   1e548:	ldr	r1, [pc, #1136]	; 1e9c0 <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   1e54c:	mov	r0, r4
   1e550:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e554:	b	1e540 <__flatcc_fb_gen_c_json_parser@@Base+0xc5c>
   1e558:	sub	r3, r3, #1
   1e55c:	ldr	r1, [pc, #1120]	; 1e9c4 <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   1e560:	mov	r0, r4
   1e564:	str	r3, [r4, #220]	; 0xdc
   1e568:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e56c:	ldr	r3, [r4, #220]	; 0xdc
   1e570:	mov	r0, r4
   1e574:	ldr	r1, [pc, #1100]	; 1e9c8 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   1e578:	add	r3, r3, #1
   1e57c:	str	r3, [r4, #220]	; 0xdc
   1e580:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e584:	ldr	r1, [pc, #1088]	; 1e9cc <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   1e588:	mov	r0, r4
   1e58c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e590:	ldr	r3, [r4, #220]	; 0xdc
   1e594:	cmp	r3, #0
   1e598:	ldreq	r3, [pc, #1012]	; 1e994 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e59c:	movweq	r2, #1461	; 0x5b5
   1e5a0:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e5a4:	sub	r3, r3, #1
   1e5a8:	ldr	r1, [pc, #1184]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e5ac:	mov	r0, r4
   1e5b0:	str	r3, [r4, #220]	; 0xdc
   1e5b4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e5b8:	ldr	r3, [sp, #44]	; 0x2c
   1e5bc:	cmp	r3, #0
   1e5c0:	beq	1e5d0 <__flatcc_fb_gen_c_json_parser@@Base+0xcec>
   1e5c4:	ldr	r1, [pc, #1028]	; 1e9d0 <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   1e5c8:	mov	r0, r4
   1e5cc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e5d0:	ldr	r1, [pc, #1020]	; 1e9d4 <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   1e5d4:	mov	r0, r4
   1e5d8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e5dc:	ldr	r1, [pc, #1060]	; 1ea08 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1e5e0:	mov	r0, r4
   1e5e4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e5e8:	ldr	r3, [r4, #220]	; 0xdc
   1e5ec:	mov	r0, r4
   1e5f0:	ldr	r1, [pc, #884]	; 1e96c <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1e5f4:	str	r3, [r4, #228]	; 0xe4
   1e5f8:	mov	r3, #0
   1e5fc:	str	r3, [r4, #220]	; 0xdc
   1e600:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e604:	ldr	r3, [r4, #228]	; 0xe4
   1e608:	mov	r0, r4
   1e60c:	ldr	r1, [pc, #860]	; 1e970 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1e610:	str	r3, [r4, #220]	; 0xdc
   1e614:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e618:	ldr	r3, [r4, #220]	; 0xdc
   1e61c:	cmp	r3, #0
   1e620:	ldreq	r3, [pc, #876]	; 1e994 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e624:	movweq	r2, #1473	; 0x5c1
   1e628:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e62c:	sub	r3, r3, #1
   1e630:	ldr	r1, [pc, #1048]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e634:	mov	r0, r4
   1e638:	str	r3, [r4, #220]	; 0xdc
   1e63c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e640:	ldr	r1, [pc, #600]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e644:	mov	r0, r4
   1e648:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e64c:	add	r2, sp, #52	; 0x34
   1e650:	ldr	r1, [pc, #820]	; 1e98c <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   1e654:	mov	r0, r4
   1e658:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e65c:	ldr	r1, [pc, #964]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1e660:	mov	r0, r4
   1e664:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e668:	ldr	r3, [r4, #220]	; 0xdc
   1e66c:	add	r2, sp, #52	; 0x34
   1e670:	mov	r0, r4
   1e674:	ldr	r1, [pc, #860]	; 1e9d8 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   1e678:	add	r3, r3, #1
   1e67c:	str	r3, [r4, #220]	; 0xdc
   1e680:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e684:	ldr	r3, [r4, #220]	; 0xdc
   1e688:	cmp	r3, #0
   1e68c:	ldreq	r3, [pc, #768]	; 1e994 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   1e690:	movweq	r2, #1479	; 0x5c7
   1e694:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e698:	sub	r3, r3, #1
   1e69c:	mov	r0, r4
   1e6a0:	ldr	r1, [pc, #936]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e6a4:	str	r3, [r4, #220]	; 0xdc
   1e6a8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e6ac:	mov	r0, r4
   1e6b0:	ldr	r1, [pc, #488]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e6b4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e6b8:	ldr	r0, [sp, #24]
   1e6bc:	bl	1c5d4 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1e6c0:	b	1e22c <__flatcc_fb_gen_c_json_parser@@Base+0x948>
   1e6c4:	add	r2, sp, #52	; 0x34
   1e6c8:	ldr	r1, [pc, #780]	; 1e9dc <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   1e6cc:	mov	r0, r8
   1e6d0:	bl	22c34 <fb_scope_table_visit@@Base>
   1e6d4:	ldr	r1, [sp, #56]	; 0x38
   1e6d8:	ldr	r0, [sp, #68]	; 0x44
   1e6dc:	bl	1c574 <__flatcc_fb_gen_c_verifier@@Base+0x1900>
   1e6e0:	ldr	r1, [sp, #60]	; 0x3c
   1e6e4:	ldr	r0, [sp, #72]	; 0x48
   1e6e8:	bl	1c574 <__flatcc_fb_gen_c_verifier@@Base+0x1900>
   1e6ec:	ldr	r7, [sp, #60]	; 0x3c
   1e6f0:	cmp	r7, #0
   1e6f4:	beq	1e714 <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
   1e6f8:	lsl	r0, r7, #4
   1e6fc:	bl	13f68 <malloc@plt>
   1e700:	subs	r5, r0, #0
   1e704:	movne	r8, r5
   1e708:	movne	sl, r6
   1e70c:	ldrne	r9, [sp, #72]	; 0x48
   1e710:	bne	1e780 <__flatcc_fb_gen_c_json_parser@@Base+0xe9c>
   1e714:	cmp	r7, #0
   1e718:	str	r5, [sp, #24]
   1e71c:	movle	r6, #0
   1e720:	movgt	r6, #1
   1e724:	cmp	r5, #0
   1e728:	movne	r6, #0
   1e72c:	cmp	r6, #0
   1e730:	beq	1e7ac <__flatcc_fb_gen_c_json_parser@@Base+0xec8>
   1e734:	add	r0, sp, #52	; 0x34
   1e738:	bl	1c5e0 <__flatcc_fb_gen_c_verifier@@Base+0x196c>
   1e73c:	ldr	r3, [pc, #496]	; 1e934 <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1e740:	ldr	r0, [pc, #496]	; 1e938 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1e744:	ldr	r2, [pc, #412]	; 1e8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1e748:	str	r3, [sp]
   1e74c:	movw	r3, #1194	; 0x4aa
   1e750:	ldr	r1, [pc, #484]	; 1e93c <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1e754:	ldr	r0, [r0]
   1e758:	bl	13fb0 <fprintf@plt>
   1e75c:	ldr	r3, [pc, #680]	; 1ea0c <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1e760:	movw	r2, #1194	; 0x4aa
   1e764:	b	1deb0 <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   1e768:	ldr	r0, [r9, #-4]
   1e76c:	add	r6, r6, #1
   1e770:	str	r0, [r8, #-16]
   1e774:	bl	13fa4 <strlen@plt>
   1e778:	ldr	r3, [r9, #-8]
   1e77c:	stmdb	r8, {r0, r3, sl}
   1e780:	cmp	r7, r6
   1e784:	add	r9, r9, #8
   1e788:	add	r8, r8, #16
   1e78c:	bgt	1e768 <__flatcc_fb_gen_c_json_parser@@Base+0xe84>
   1e790:	mov	r1, r7
   1e794:	ldr	r3, [pc, #580]	; 1e9e0 <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   1e798:	mov	r2, #16
   1e79c:	mov	r0, r5
   1e7a0:	bl	14034 <qsort@plt>
   1e7a4:	ldr	r7, [sp, #60]	; 0x3c
   1e7a8:	b	1e714 <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
   1e7ac:	mov	r3, #4
   1e7b0:	ldr	r1, [pc, #328]	; 1e900 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1e7b4:	mov	r0, r4
   1e7b8:	str	r6, [sp, #36]	; 0x24
   1e7bc:	str	r3, [sp, #40]	; 0x28
   1e7c0:	ldr	r3, [pc, #540]	; 1e9e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   1e7c4:	str	r3, [sp, #28]
   1e7c8:	ldr	r3, [pc, #536]	; 1e9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   1e7cc:	str	r3, [sp, #32]
   1e7d0:	ldr	r3, [r4, #208]	; 0xd0
   1e7d4:	ldr	r2, [r3, #160]	; 0xa0
   1e7d8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e7dc:	ldr	r3, [r4, #220]	; 0xdc
   1e7e0:	mov	r0, r4
   1e7e4:	ldr	r1, [pc, #512]	; 1e9ec <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   1e7e8:	add	r3, r3, #2
   1e7ec:	str	r3, [r4, #220]	; 0xdc
   1e7f0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e7f4:	ldr	r3, [r4, #220]	; 0xdc
   1e7f8:	cmp	r3, #0
   1e7fc:	bne	1e80c <__flatcc_fb_gen_c_json_parser@@Base+0xf28>
   1e800:	ldr	r3, [pc, #516]	; 1ea0c <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1e804:	movw	r2, #1205	; 0x4b5
   1e808:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e80c:	cmp	r3, #1
   1e810:	streq	r6, [r4, #220]	; 0xdc
   1e814:	beq	1e800 <__flatcc_fb_gen_c_json_parser@@Base+0xf1c>
   1e818:	sub	r3, r3, #2
   1e81c:	ldr	r1, [pc, #516]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1e820:	mov	r0, r4
   1e824:	str	r3, [r4, #220]	; 0xdc
   1e828:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e82c:	ldr	r3, [r4, #220]	; 0xdc
   1e830:	cmp	r7, #0
   1e834:	add	r3, r3, #1
   1e838:	str	r3, [r4, #220]	; 0xdc
   1e83c:	bne	1ea68 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   1e840:	ldr	r1, [pc, #424]	; 1e9f0 <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   1e844:	mov	r0, r4
   1e848:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e84c:	ldr	r1, [pc, #416]	; 1e9f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   1e850:	mov	r0, r4
   1e854:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e858:	ldr	r3, [r4, #220]	; 0xdc
   1e85c:	cmp	r3, #0
   1e860:	ldreq	r3, [pc, #420]	; 1ea0c <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1e864:	movweq	r2, #1210	; 0x4ba
   1e868:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1e86c:	sub	r3, r3, #1
   1e870:	mov	r0, r4
   1e874:	ldr	r1, [pc, #468]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1e878:	str	r3, [r4, #220]	; 0xdc
   1e87c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e880:	mov	r0, r4
   1e884:	ldr	r1, [pc, #20]	; 1e8a0 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   1e888:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1e88c:	ldr	r0, [sp, #24]
   1e890:	bl	1c5d4 <__flatcc_fb_gen_c_verifier@@Base+0x1960>
   1e894:	b	1dd80 <__flatcc_fb_gen_c_json_parser@@Base+0x49c>
   1e898:	andeq	r3, r4, r4, lsr r7
   1e89c:	andeq	r3, r4, sp, asr #14
   1e8a0:	andeq	r1, r3, fp, lsr #2
   1e8a4:	andeq	r3, r4, r6, ror #14
   1e8a8:			; <UNDEFINED> instruction: 0x000437b5
   1e8ac:	andeq	r3, r4, r7, asr r7
   1e8b0:	andeq	pc, r2, r9, ror #20
   1e8b4:	ldrdeq	r1, [r3], -sp
   1e8b8:	ldrdeq	r3, [r4], -ip
   1e8bc:	ldrdeq	r3, [r4], -pc	; <UNPREDICTABLE>
   1e8c0:	andeq	r3, r4, r5, lsr r8
   1e8c4:	andeq	r3, r4, r8, lsr r8
   1e8c8:	andeq	r3, r4, ip, ror r8
   1e8cc:			; <UNDEFINED> instruction: 0x000438b2
   1e8d0:	ldrdeq	r3, [r4], -sl
   1e8d4:	andeq	r3, r4, r2, lsr #18
   1e8d8:	andeq	r2, r4, sp, asr r3
   1e8dc:	andeq	r3, r4, r0, ror #18
   1e8e0:	andeq	r3, r4, r9, lsr #19
   1e8e4:	andeq	r2, r4, lr, lsr #4
   1e8e8:	andeq	r2, r4, r1, ror r3
   1e8ec:	andeq	r2, r4, r6, asr #7
   1e8f0:	andeq	r3, r4, r5, ror r6
   1e8f4:	andeq	r2, r4, r3, ror #8
   1e8f8:	muleq	r4, ip, fp
   1e8fc:	strdeq	fp, [r1], -r8
   1e900:	andeq	r3, r4, pc, lsl ip
   1e904:	ldrdeq	r3, [r4], -r5
   1e908:	andeq	r3, r4, r4, ror #20
   1e90c:	muleq	r4, r8, sl
   1e910:	andeq	r3, r4, r8, lsl fp
   1e914:	andeq	ip, r1, ip, ror #16
   1e918:	andeq	fp, r1, r8, ror #1
   1e91c:	muleq	r1, r0, r3
   1e920:	andeq	ip, r1, ip, asr r5
   1e924:	andeq	r6, r3, r7, asr #29
   1e928:	strdeq	r4, [r4], -fp
   1e92c:	andeq	r2, r4, r9, asr #4
   1e930:	andeq	r0, r3, r9, lsl #20
   1e934:	andeq	r3, r4, sp, ror r5
   1e938:	strheq	sl, [r5], -r0
   1e93c:	andeq	pc, r2, sp, lsl #28
   1e940:	andeq	r8, r3, pc, ror #2
   1e944:	andeq	r3, r4, sl, lsl #25
   1e948:	andeq	r3, r4, r9, lsl #26
   1e94c:	andeq	r3, r4, r3, lsl sp
   1e950:	andeq	r3, r4, sp, lsr #26
   1e954:	andeq	r3, r4, r9, lsr sp
   1e958:	andeq	r2, r4, r1, lsr #20
   1e95c:	andeq	r3, r4, r6, ror sp
   1e960:	andeq	r2, r4, sl, asr #5
   1e964:	andeq	r3, r4, r0, asr #27
   1e968:	andeq	r3, r4, sl, lsl #27
   1e96c:	strdeq	r3, [r4], -ip
   1e970:			; <UNDEFINED> instruction: 0x000427b2
   1e974:	andeq	r2, r4, r2, ror #4
   1e978:	andeq	r3, r4, r4, lsl #28
   1e97c:	andeq	r2, r4, r6, lsr #10
   1e980:	andeq	r3, r4, r7, lsl #29
   1e984:	muleq	r4, r4, fp
   1e988:	ldrdeq	r3, [r4], -r3	; <UNPREDICTABLE>
   1e98c:	andeq	r3, r4, r4, lsr #30
   1e990:			; <UNDEFINED> instruction: 0x00043fb8
   1e994:	andeq	r2, r4, r4, ror r2
   1e998:	andeq	pc, r2, r7, asr ip	; <UNPREDICTABLE>
   1e99c:	andeq	r4, r4, r9, lsl r0
   1e9a0:	muleq	r4, fp, r0
   1e9a4:	strheq	r4, [r4], -ip
   1e9a8:	andeq	r4, r4, sp, asr #1
   1e9ac:	andeq	r4, r4, sl, lsl #2
   1e9b0:	andeq	r4, r4, r0, lsl #3
   1e9b4:	andeq	r4, r4, r5, ror #2
   1e9b8:			; <UNDEFINED> instruction: 0x000441bb
   1e9bc:	ldrdeq	r4, [r4], -r8
   1e9c0:	andeq	r4, r4, r1, lsl r2
   1e9c4:	andeq	r2, r4, r0, lsr #26
   1e9c8:	andeq	r4, r4, sl, asr #4
   1e9cc:	andeq	r2, r4, fp, lsl #22
   1e9d0:	andeq	r4, r4, r0, lsr #5
   1e9d4:	andeq	r4, r4, r3, ror #5
   1e9d8:	andeq	r4, r4, r5, lsr #6
   1e9dc:	andeq	ip, r1, r4, asr #10
   1e9e0:	andeq	ip, r1, ip, lsr #11
   1e9e4:	andeq	ip, r1, ip, ror r7
   1e9e8:	andeq	fp, r1, r0, lsl #2
   1e9ec:			; <UNDEFINED> instruction: 0x000435b9
   1e9f0:	andeq	r4, r4, r4, lsl #7
   1e9f4:	andeq	r3, r4, sp, lsl r6
   1e9f8:	andeq	r3, r4, sl, lsr r6
   1e9fc:	andeq	r3, r4, r7, asr r6
   1ea00:	andeq	r3, r4, r9, ror #12
   1ea04:	andeq	r3, r4, sp, lsr #9
   1ea08:	muleq	r4, r6, r7
   1ea0c:	andeq	r2, r4, r5, lsl #5
   1ea10:	andeq	r4, r4, r8, ror #7
   1ea14:	andeq	r4, r4, r0, lsr #8
   1ea18:	andeq	r4, r4, fp, ror #9
   1ea1c:	muleq	r4, sp, r2
   1ea20:	andeq	r3, r4, r0, ror #18
   1ea24:			; <UNDEFINED> instruction: 0x000443bd
   1ea28:	andeq	r4, r4, r6, lsl #30
   1ea2c:	andeq	r4, r4, ip, lsl #11
   1ea30:	andeq	r4, r4, r5, lsl #8
   1ea34:	andeq	r1, r3, fp, lsr #2
   1ea38:	andeq	r4, r4, r7, lsr #11
   1ea3c:	andeq	r4, r4, fp, lsr r4
   1ea40:	andeq	r4, r4, r6, ror r4
   1ea44:	andeq	r4, r4, r0, asr #11
   1ea48:	andeq	r4, r4, pc, lsl r5
   1ea4c:	andeq	r4, r4, r1, lsr r5
   1ea50:	andeq	r6, r3, r1, lsr #6
   1ea54:	andeq	r4, r4, r4, asr #10
   1ea58:	andeq	r4, r4, r8, ror r5
   1ea5c:	andeq	r2, r4, pc, ror r8
   1ea60:			; <UNDEFINED> instruction: 0x000422b3
   1ea64:			; <UNDEFINED> instruction: 0x000444b3
   1ea68:	ldr	r1, [pc, #-120]	; 1e9f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   1ea6c:	mov	r0, r4
   1ea70:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea74:	ldr	r1, [pc, #-128]	; 1e9fc <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   1ea78:	mov	r0, r4
   1ea7c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea80:	ldr	r1, [pc, #-136]	; 1ea00 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   1ea84:	mov	r0, r4
   1ea88:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea8c:	ldr	r1, [pc, #-96]	; 1ea34 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1ea90:	mov	r0, r4
   1ea94:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ea98:	ldr	r1, [pc, #-156]	; 1ea04 <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1ea9c:	mov	r0, r4
   1eaa0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eaa4:	sub	r3, r7, #1
   1eaa8:	mov	r2, r6
   1eaac:	str	r6, [sp]
   1eab0:	add	r1, sp, #24
   1eab4:	mov	r0, r4
   1eab8:	bl	1cca8 <__flatcc_fb_gen_c_verifier@@Base+0x2034>
   1eabc:	ldr	r1, [pc, #-188]	; 1ea08 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   1eac0:	mov	r0, r4
   1eac4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eac8:	ldr	r3, [r4, #220]	; 0xdc
   1eacc:	cmp	r3, #0
   1ead0:	ldreq	r3, [pc, #-204]	; 1ea0c <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1ead4:	movweq	r2, #1219	; 0x4c3
   1ead8:	bne	1e86c <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
   1eadc:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1eae0:	mov	r2, #220	; 0xdc
   1eae4:	mov	r1, r6
   1eae8:	add	r0, sp, #52	; 0x34
   1eaec:	bl	13fc8 <memset@plt>
   1eaf0:	add	r1, sp, #52	; 0x34
   1eaf4:	mov	r0, r5
   1eaf8:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1eafc:	ldr	r3, [r4, #208]	; 0xd0
   1eb00:	mov	r0, r4
   1eb04:	ldr	r1, [pc, #-236]	; 1ea20 <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   1eb08:	ldr	r2, [r3, #160]	; 0xa0
   1eb0c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb10:	ldr	r3, [r4, #220]	; 0xdc
   1eb14:	mov	r0, r4
   1eb18:	ldr	r1, [pc, #-252]	; 1ea24 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   1eb1c:	add	r3, r3, #2
   1eb20:	str	r3, [r4, #220]	; 0xdc
   1eb24:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb28:	ldr	r3, [r4, #220]	; 0xdc
   1eb2c:	cmp	r3, #0
   1eb30:	bne	1eb40 <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   1eb34:	ldr	r3, [pc, #-288]	; 1ea1c <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1eb38:	movw	r2, #1610	; 0x64a
   1eb3c:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1eb40:	cmp	r3, #1
   1eb44:	streq	r6, [r4, #220]	; 0xdc
   1eb48:	beq	1eb34 <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   1eb4c:	sub	r3, r3, #2
   1eb50:	ldr	r1, [pc, #-304]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1eb54:	mov	r0, r4
   1eb58:	str	r3, [r4, #220]	; 0xdc
   1eb5c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb60:	ldr	r3, [r4, #220]	; 0xdc
   1eb64:	mov	r0, r4
   1eb68:	ldr	r1, [pc, #-352]	; 1ea10 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   1eb6c:	add	r3, r3, #1
   1eb70:	str	r3, [r4, #220]	; 0xdc
   1eb74:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb78:	ldr	r1, [pc, #-336]	; 1ea30 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   1eb7c:	mov	r0, r4
   1eb80:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb84:	ldr	r1, [pc, #-344]	; 1ea34 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1eb88:	mov	r0, r4
   1eb8c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb90:	ldr	r1, [pc, #-388]	; 1ea14 <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   1eb94:	mov	r0, r4
   1eb98:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eb9c:	ldr	r1, [pc, #-360]	; 1ea3c <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1eba0:	mov	r0, r4
   1eba4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eba8:	ldr	r2, [r4, #208]	; 0xd0
   1ebac:	ldrh	r3, [r2, #16]
   1ebb0:	cmp	r3, #2
   1ebb4:	bne	1ec84 <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   1ebb8:	ldr	r1, [pc, #-384]	; 1ea40 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1ebbc:	mov	r0, r4
   1ebc0:	ldr	r3, [r2, #8]
   1ebc4:	ldr	r2, [r2, #12]
   1ebc8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebcc:	add	r2, sp, #52	; 0x34
   1ebd0:	ldr	r1, [pc, #-448]	; 1ea18 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   1ebd4:	mov	r0, r4
   1ebd8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebdc:	ldr	r1, [pc, #-412]	; 1ea48 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1ebe0:	mov	r0, r4
   1ebe4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ebe8:	ldr	r3, [r4, #220]	; 0xdc
   1ebec:	mov	r0, r4
   1ebf0:	ldr	r1, [pc, #-428]	; 1ea4c <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1ebf4:	add	r3, r3, #1
   1ebf8:	str	r3, [r4, #220]	; 0xdc
   1ebfc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec00:	ldr	r3, [r4, #220]	; 0xdc
   1ec04:	cmp	r3, #0
   1ec08:	ldreq	r3, [pc, #-500]	; 1ea1c <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1ec0c:	movweq	r2, #1626	; 0x65a
   1ec10:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ec14:	sub	r3, r3, #1
   1ec18:	mov	r0, r4
   1ec1c:	ldr	r1, [pc, #-468]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1ec20:	str	r3, [r4, #220]	; 0xdc
   1ec24:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec28:	ldr	r1, [pc, #-476]	; 1ea54 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   1ec2c:	mov	r0, r4
   1ec30:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec34:	ldr	r1, [pc, #-484]	; 1ea58 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   1ec38:	mov	r0, r4
   1ec3c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec40:	ldr	r1, [pc, #-492]	; 1ea5c <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   1ec44:	mov	r0, r4
   1ec48:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec4c:	ldr	r3, [r4, #220]	; 0xdc
   1ec50:	cmp	r3, #0
   1ec54:	ldreq	r3, [pc, #-576]	; 1ea1c <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   1ec58:	movweq	r2, #1630	; 0x65e
   1ec5c:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ec60:	sub	r3, r3, #1
   1ec64:	mov	r0, r4
   1ec68:	ldr	r1, [pc, #-544]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1ec6c:	str	r3, [r4, #220]	; 0xdc
   1ec70:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec74:	ldr	r1, [pc, #-584]	; 1ea34 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1ec78:	mov	r0, r4
   1ec7c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec80:	b	1ddac <__flatcc_fb_gen_c_json_parser@@Base+0x4c8>
   1ec84:	ldr	r1, [pc, #-552]	; 1ea64 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   1ec88:	mov	r0, r4
   1ec8c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ec90:	b	1ebcc <__flatcc_fb_gen_c_json_parser@@Base+0x12e8>
   1ec94:	mov	r2, #220	; 0xdc
   1ec98:	mov	r1, #0
   1ec9c:	add	r0, sp, #52	; 0x34
   1eca0:	bl	13fc8 <memset@plt>
   1eca4:	add	r1, sp, #52	; 0x34
   1eca8:	mov	r0, r5
   1ecac:	bl	1b444 <__flatcc_fb_gen_c_verifier@@Base+0x7d0>
   1ecb0:	ldr	r3, [r4, #208]	; 0xd0
   1ecb4:	mov	r0, r4
   1ecb8:	ldr	r1, [pc, #-672]	; 1ea20 <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   1ecbc:	ldr	r2, [r3, #160]	; 0xa0
   1ecc0:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ecc4:	ldr	r3, [r4, #220]	; 0xdc
   1ecc8:	mov	r0, r4
   1eccc:	ldr	r1, [pc, #-688]	; 1ea24 <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   1ecd0:	add	r3, r3, #2
   1ecd4:	str	r3, [r4, #220]	; 0xdc
   1ecd8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ecdc:	ldr	r3, [r4, #220]	; 0xdc
   1ece0:	cmp	r3, #0
   1ece4:	bne	1ecf4 <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   1ece8:	ldr	r3, [pc, #-656]	; 1ea60 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1ecec:	movw	r2, #1645	; 0x66d
   1ecf0:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ecf4:	cmp	r3, #1
   1ecf8:	moveq	r3, #0
   1ecfc:	streq	r3, [r4, #220]	; 0xdc
   1ed00:	beq	1ece8 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   1ed04:	sub	r3, r3, #2
   1ed08:	ldr	r1, [pc, #-744]	; 1ea28 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   1ed0c:	mov	r0, r4
   1ed10:	str	r3, [r4, #220]	; 0xdc
   1ed14:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed18:	ldr	r3, [r4, #220]	; 0xdc
   1ed1c:	mov	r0, r4
   1ed20:	ldr	r1, [pc, #-764]	; 1ea2c <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   1ed24:	add	r3, r3, #1
   1ed28:	str	r3, [r4, #220]	; 0xdc
   1ed2c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed30:	ldr	r1, [pc, #-776]	; 1ea30 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   1ed34:	mov	r0, r4
   1ed38:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed3c:	ldr	r1, [pc, #-784]	; 1ea34 <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   1ed40:	mov	r0, r4
   1ed44:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed48:	ldr	r1, [pc, #-792]	; 1ea38 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   1ed4c:	mov	r0, r4
   1ed50:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed54:	ldr	r1, [pc, #-800]	; 1ea3c <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   1ed58:	mov	r0, r4
   1ed5c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed60:	ldr	r2, [r4, #208]	; 0xd0
   1ed64:	ldrh	r3, [r2, #16]
   1ed68:	cmp	r3, #2
   1ed6c:	bne	1ee1c <__flatcc_fb_gen_c_json_parser@@Base+0x1538>
   1ed70:	ldr	r1, [pc, #-824]	; 1ea40 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   1ed74:	mov	r0, r4
   1ed78:	ldr	r3, [r2, #8]
   1ed7c:	ldr	r2, [r2, #12]
   1ed80:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed84:	add	r2, sp, #52	; 0x34
   1ed88:	ldr	r1, [pc, #-844]	; 1ea44 <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1ed8c:	mov	r0, r4
   1ed90:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ed94:	ldr	r1, [pc, #-852]	; 1ea48 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   1ed98:	mov	r0, r4
   1ed9c:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1eda0:	ldr	r3, [r4, #220]	; 0xdc
   1eda4:	mov	r0, r4
   1eda8:	ldr	r1, [pc, #-868]	; 1ea4c <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1edac:	add	r3, r3, #1
   1edb0:	str	r3, [r4, #220]	; 0xdc
   1edb4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1edb8:	ldr	r3, [r4, #220]	; 0xdc
   1edbc:	cmp	r3, #0
   1edc0:	ldreq	r3, [pc, #-872]	; 1ea60 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1edc4:	movweq	r2, #1661	; 0x67d
   1edc8:	beq	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1edcc:	sub	r3, r3, #1
   1edd0:	mov	r0, r4
   1edd4:	ldr	r1, [pc, #-908]	; 1ea50 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1edd8:	str	r3, [r4, #220]	; 0xdc
   1eddc:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ede0:	ldr	r1, [pc, #-916]	; 1ea54 <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   1ede4:	mov	r0, r4
   1ede8:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1edec:	ldr	r1, [pc, #-924]	; 1ea58 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   1edf0:	mov	r0, r4
   1edf4:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1edf8:	ldr	r1, [pc, #-932]	; 1ea5c <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   1edfc:	mov	r0, r4
   1ee00:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ee04:	ldr	r3, [r4, #220]	; 0xdc
   1ee08:	cmp	r3, #0
   1ee0c:	ldreq	r3, [pc, #-948]	; 1ea60 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   1ee10:	movweq	r2, #1665	; 0x681
   1ee14:	bne	1ec60 <__flatcc_fb_gen_c_json_parser@@Base+0x137c>
   1ee18:	b	1da54 <__flatcc_fb_gen_c_json_parser@@Base+0x170>
   1ee1c:	ldr	r1, [pc, #-960]	; 1ea64 <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   1ee20:	mov	r0, r4
   1ee24:	bl	1b02c <__flatcc_fb_gen_c_verifier@@Base+0x3b8>
   1ee28:	b	1ed84 <__flatcc_fb_gen_c_json_parser@@Base+0x14a0>
   1ee2c:	mov	r2, r1
   1ee30:	mov	r1, r0
   1ee34:	ldr	r0, [r0, #12]
   1ee38:	b	14fe8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ee3c:	push	{r0, r1, r2, lr}
   1ee40:	sub	r0, r0, #1
   1ee44:	cmp	r0, #10
   1ee48:	bls	1ee80 <__flatcc_fb_gen_c_json_parser@@Base+0x159c>
   1ee4c:	ldr	r3, [pc, #60]	; 1ee90 <__flatcc_fb_gen_c_json_parser@@Base+0x15ac>
   1ee50:	ldr	r0, [pc, #60]	; 1ee94 <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
   1ee54:	ldr	r2, [pc, #60]	; 1ee98 <__flatcc_fb_gen_c_json_parser@@Base+0x15b4>
   1ee58:	str	r3, [sp]
   1ee5c:	mov	r3, #96	; 0x60
   1ee60:	ldr	r1, [pc, #52]	; 1ee9c <__flatcc_fb_gen_c_json_parser@@Base+0x15b8>
   1ee64:	ldr	r0, [r0]
   1ee68:	bl	13fb0 <fprintf@plt>
   1ee6c:	ldr	r3, [pc, #44]	; 1eea0 <__flatcc_fb_gen_c_json_parser@@Base+0x15bc>
   1ee70:	mov	r2, #96	; 0x60
   1ee74:	ldr	r1, [pc, #28]	; 1ee98 <__flatcc_fb_gen_c_json_parser@@Base+0x15b4>
   1ee78:	ldr	r0, [pc, #36]	; 1eea4 <__flatcc_fb_gen_c_json_parser@@Base+0x15c0>
   1ee7c:	bl	14070 <__assert_fail@plt>
   1ee80:	ldr	r3, [pc, #32]	; 1eea8 <__flatcc_fb_gen_c_json_parser@@Base+0x15c4>
   1ee84:	ldr	r0, [r3, r0, lsl #2]
   1ee88:	add	sp, sp, #12
   1ee8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee90:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   1ee94:	strheq	sl, [r5], -r0
   1ee98:	andeq	pc, r2, r4, asr #27
   1ee9c:	andeq	pc, r2, sp, lsl #28
   1eea0:	andeq	r4, r4, ip, asr #12
   1eea4:	andeq	r8, r3, pc, ror #2
   1eea8:	andeq	r4, r4, r0, lsr #12
   1eeac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eeb0:	sub	sp, sp, #468	; 0x1d4
   1eeb4:	mov	r7, r1
   1eeb8:	mov	r2, #220	; 0xdc
   1eebc:	mov	r1, #0
   1eec0:	mov	r6, r0
   1eec4:	add	r0, sp, #24
   1eec8:	bl	13fc8 <memset@plt>
   1eecc:	mov	r2, #220	; 0xdc
   1eed0:	mov	r1, #0
   1eed4:	add	r0, sp, #244	; 0xf4
   1eed8:	bl	13fc8 <memset@plt>
   1eedc:	add	r1, sp, #24
   1eee0:	mov	r0, r7
   1eee4:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1eee8:	ldr	r4, [r7, #40]	; 0x28
   1eeec:	mov	r0, r4
   1eef0:	bl	1ee3c <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1eef4:	sub	r1, r4, #1
   1eef8:	cmp	r1, #10
   1eefc:	bhi	1f030 <__flatcc_fb_gen_c_json_parser@@Base+0x174c>
   1ef00:	ldr	r2, [pc, #908]	; 1f294 <__flatcc_fb_gen_c_json_parser@@Base+0x19b0>
   1ef04:	mov	sl, r0
   1ef08:	cmp	r4, #5
   1ef0c:	moveq	r3, r6
   1ef10:	ldrh	r0, [r7, #92]	; 0x5c
   1ef14:	add	r1, r2, r1, lsl #2
   1ef18:	ldr	fp, [r1, #64]	; 0x40
   1ef1c:	ldr	r1, [pc, #884]	; 1f298 <__flatcc_fb_gen_c_json_parser@@Base+0x19b4>
   1ef20:	movne	r3, r1
   1ef24:	ands	r0, r0, #32
   1ef28:	str	r0, [sp, #20]
   1ef2c:	beq	1f0c0 <__flatcc_fb_gen_c_json_parser@@Base+0x17dc>
   1ef30:	ldr	r1, [r7, #112]	; 0x70
   1ef34:	ldr	r0, [r7, #116]	; 0x74
   1ef38:	subs	r8, r1, #1
   1ef3c:	sbc	r9, r0, #0
   1ef40:	cmp	r9, #0
   1ef44:	cmpeq	r8, #3
   1ef48:	bhi	1f064 <__flatcc_fb_gen_c_json_parser@@Base+0x1780>
   1ef4c:	add	r1, r2, r8, lsl #3
   1ef50:	add	r8, r2, r8, lsl #2
   1ef54:	ldrd	r4, [r1, #128]	; 0x80
   1ef58:	ldr	r9, [r8, #160]	; 0xa0
   1ef5c:	ldr	r8, [r8, #176]	; 0xb0
   1ef60:	ldr	r2, [r7, #20]
   1ef64:	cmp	r2, #0
   1ef68:	bne	1f078 <__flatcc_fb_gen_c_json_parser@@Base+0x1794>
   1ef6c:	add	r2, sp, #24
   1ef70:	ldr	r1, [pc, #804]	; 1f29c <__flatcc_fb_gen_c_json_parser@@Base+0x19b8>
   1ef74:	ldr	r0, [r6, #204]	; 0xcc
   1ef78:	str	fp, [sp]
   1ef7c:	bl	13fb0 <fprintf@plt>
   1ef80:	ldr	r3, [sp, #20]
   1ef84:	cmp	r3, #0
   1ef88:	beq	1f198 <__flatcc_fb_gen_c_json_parser@@Base+0x18b4>
   1ef8c:	mov	r1, fp
   1ef90:	mov	r0, r8
   1ef94:	bl	13ed8 <strcmp@plt>
   1ef98:	cmp	r0, #0
   1ef9c:	ldr	ip, [r6, #204]	; 0xcc
   1efa0:	beq	1f0d4 <__flatcc_fb_gen_c_json_parser@@Base+0x17f0>
   1efa4:	mov	r3, r8
   1efa8:	mov	r2, r8
   1efac:	ldr	r1, [pc, #748]	; 1f2a0 <__flatcc_fb_gen_c_json_parser@@Base+0x19bc>
   1efb0:	mov	r0, ip
   1efb4:	bl	13fb0 <fprintf@plt>
   1efb8:	ldr	r0, [pc, #740]	; 1f2a4 <__flatcc_fb_gen_c_json_parser@@Base+0x19c0>
   1efbc:	ldr	r1, [r6, #204]	; 0xcc
   1efc0:	bl	1404c <fputs@plt>
   1efc4:	mov	r0, #10
   1efc8:	ldr	r1, [r6, #204]	; 0xcc
   1efcc:	bl	14010 <fputc@plt>
   1efd0:	orrs	r3, r4, r5
   1efd4:	beq	1eff0 <__flatcc_fb_gen_c_json_parser@@Base+0x170c>
   1efd8:	mov	r2, r4
   1efdc:	mov	r3, r5
   1efe0:	ldr	r1, [pc, #704]	; 1f2a8 <__flatcc_fb_gen_c_json_parser@@Base+0x19c4>
   1efe4:	ldr	r0, [r6, #204]	; 0xcc
   1efe8:	str	sl, [sp]
   1efec:	bl	13fb0 <fprintf@plt>
   1eff0:	ldr	r0, [pc, #692]	; 1f2ac <__flatcc_fb_gen_c_json_parser@@Base+0x19c8>
   1eff4:	ldr	r1, [r6, #204]	; 0xcc
   1eff8:	bl	1404c <fputs@plt>
   1effc:	ldr	r5, [pc, #684]	; 1f2b0 <__flatcc_fb_gen_c_json_parser@@Base+0x19cc>
   1f000:	ldr	r4, [r7, #20]
   1f004:	cmp	r4, #0
   1f008:	bne	1f0e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1804>
   1f00c:	ldr	r0, [pc, #664]	; 1f2ac <__flatcc_fb_gen_c_json_parser@@Base+0x19c8>
   1f010:	ldr	r1, [r6, #204]	; 0xcc
   1f014:	bl	1404c <fputs@plt>
   1f018:	ldr	r1, [r6, #204]	; 0xcc
   1f01c:	ldr	r0, [pc, #656]	; 1f2b4 <__flatcc_fb_gen_c_json_parser@@Base+0x19d0>
   1f020:	bl	1404c <fputs@plt>
   1f024:	mov	r0, #0
   1f028:	add	sp, sp, #468	; 0x1d4
   1f02c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f030:	ldr	r3, [pc, #640]	; 1f2b8 <__flatcc_fb_gen_c_json_parser@@Base+0x19d4>
   1f034:	ldr	r0, [pc, #640]	; 1f2bc <__flatcc_fb_gen_c_json_parser@@Base+0x19d8>
   1f038:	ldr	r2, [pc, #640]	; 1f2c0 <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   1f03c:	str	r3, [sp]
   1f040:	mov	r3, #141	; 0x8d
   1f044:	ldr	r1, [pc, #632]	; 1f2c4 <__flatcc_fb_gen_c_json_parser@@Base+0x19e0>
   1f048:	ldr	r0, [r0]
   1f04c:	bl	13fb0 <fprintf@plt>
   1f050:	ldr	r3, [pc, #624]	; 1f2c8 <__flatcc_fb_gen_c_json_parser@@Base+0x19e4>
   1f054:	mov	r2, #141	; 0x8d
   1f058:	ldr	r1, [pc, #608]	; 1f2c0 <__flatcc_fb_gen_c_json_parser@@Base+0x19dc>
   1f05c:	ldr	r0, [pc, #616]	; 1f2cc <__flatcc_fb_gen_c_json_parser@@Base+0x19e8>
   1f060:	bl	14070 <__assert_fail@plt>
   1f064:	ldr	r8, [pc, #612]	; 1f2d0 <__flatcc_fb_gen_c_json_parser@@Base+0x19ec>
   1f068:	mvn	r4, #0
   1f06c:	mvn	r5, #0
   1f070:	ldr	r9, [pc, #604]	; 1f2d4 <__flatcc_fb_gen_c_json_parser@@Base+0x19f0>
   1f074:	b	1ef60 <__flatcc_fb_gen_c_json_parser@@Base+0x167c>
   1f078:	ldrh	r1, [r2, #56]	; 0x38
   1f07c:	cmp	r1, #5
   1f080:	beq	1f094 <__flatcc_fb_gen_c_json_parser@@Base+0x17b0>
   1f084:	cmp	r1, #6
   1f088:	beq	1f0b0 <__flatcc_fb_gen_c_json_parser@@Base+0x17cc>
   1f08c:	cmp	r1, #4
   1f090:	bne	1f0a8 <__flatcc_fb_gen_c_json_parser@@Base+0x17c4>
   1f094:	ldrd	r0, [r2, #48]	; 0x30
   1f098:	bic	r0, r4, r0
   1f09c:	bic	r1, r5, r1
   1f0a0:	mov	r4, r0
   1f0a4:	mov	r5, r1
   1f0a8:	ldr	r2, [r2]
   1f0ac:	b	1ef64 <__flatcc_fb_gen_c_json_parser@@Base+0x1680>
   1f0b0:	ldrb	r0, [r2, #48]	; 0x30
   1f0b4:	mov	r1, r5
   1f0b8:	bic	r0, r4, r0
   1f0bc:	b	1f0a0 <__flatcc_fb_gen_c_json_parser@@Base+0x17bc>
   1f0c0:	mov	r8, r1
   1f0c4:	mov	r9, r1
   1f0c8:	mov	r4, #0
   1f0cc:	mov	r5, #0
   1f0d0:	b	1ef6c <__flatcc_fb_gen_c_json_parser@@Base+0x1688>
   1f0d4:	mov	r2, r8
   1f0d8:	ldr	r1, [pc, #504]	; 1f2d8 <__flatcc_fb_gen_c_json_parser@@Base+0x19f4>
   1f0dc:	mov	r0, ip
   1f0e0:	bl	13fb0 <fprintf@plt>
   1f0e4:	b	1efb8 <__flatcc_fb_gen_c_json_parser@@Base+0x16d4>
   1f0e8:	ldrh	r3, [r4, #56]	; 0x38
   1f0ec:	cmp	r3, #5
   1f0f0:	beq	1f104 <__flatcc_fb_gen_c_json_parser@@Base+0x1820>
   1f0f4:	cmp	r3, #6
   1f0f8:	beq	1f138 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   1f0fc:	cmp	r3, #4
   1f100:	bne	1f168 <__flatcc_fb_gen_c_json_parser@@Base+0x1884>
   1f104:	ldr	r2, [r4, #4]
   1f108:	ldr	r3, [r2, #4]
   1f10c:	str	r3, [sp, #12]
   1f110:	ldr	r2, [r2]
   1f114:	str	r9, [sp]
   1f118:	str	r3, [sp, #4]
   1f11c:	str	r2, [sp, #8]
   1f120:	ldrd	r2, [r4, #48]	; 0x30
   1f124:	mov	r1, r5
   1f128:	ldr	r0, [r6, #204]	; 0xcc
   1f12c:	bl	13fb0 <fprintf@plt>
   1f130:	ldr	r4, [r4]
   1f134:	b	1f004 <__flatcc_fb_gen_c_json_parser@@Base+0x1720>
   1f138:	ldr	r2, [r4, #4]
   1f13c:	mov	r1, #0
   1f140:	ldrb	r0, [r4, #48]	; 0x30
   1f144:	ldr	r3, [r2, #4]
   1f148:	str	r3, [sp, #12]
   1f14c:	ldr	r2, [r2]
   1f150:	str	r9, [sp]
   1f154:	str	r3, [sp, #4]
   1f158:	mov	r3, r1
   1f15c:	str	r2, [sp, #8]
   1f160:	mov	r2, r0
   1f164:	b	1f124 <__flatcc_fb_gen_c_json_parser@@Base+0x1840>
   1f168:	ldr	r3, [pc, #364]	; 1f2dc <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   1f16c:	ldr	r0, [pc, #328]	; 1f2bc <__flatcc_fb_gen_c_json_parser@@Base+0x19d8>
   1f170:	ldr	r2, [pc, #360]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x19fc>
   1f174:	str	r3, [sp]
   1f178:	mov	r3, #134	; 0x86
   1f17c:	ldr	r1, [pc, #320]	; 1f2c4 <__flatcc_fb_gen_c_json_parser@@Base+0x19e0>
   1f180:	ldr	r0, [r0]
   1f184:	bl	13fb0 <fprintf@plt>
   1f188:	ldr	r3, [pc, #340]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a00>
   1f18c:	mov	r2, #134	; 0x86
   1f190:	ldr	r1, [pc, #328]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x19fc>
   1f194:	b	1f05c <__flatcc_fb_gen_c_json_parser@@Base+0x1778>
   1f198:	ldr	r0, [pc, #328]	; 1f2e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a04>
   1f19c:	ldr	r1, [r6, #204]	; 0xcc
   1f1a0:	bl	1404c <fputs@plt>
   1f1a4:	ldr	r5, [pc, #320]	; 1f2ec <__flatcc_fb_gen_c_json_parser@@Base+0x1a08>
   1f1a8:	ldr	r8, [pc, #320]	; 1f2f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a0c>
   1f1ac:	ldr	r4, [r7, #20]
   1f1b0:	ldr	r7, [pc, #316]	; 1f2f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a10>
   1f1b4:	cmp	r4, #0
   1f1b8:	bne	1f1d0 <__flatcc_fb_gen_c_json_parser@@Base+0x18ec>
   1f1bc:	mov	r2, sl
   1f1c0:	ldr	r1, [pc, #304]	; 1f2f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a14>
   1f1c4:	ldr	r0, [r6, #204]	; 0xcc
   1f1c8:	bl	13fb0 <fprintf@plt>
   1f1cc:	b	1f018 <__flatcc_fb_gen_c_json_parser@@Base+0x1734>
   1f1d0:	ldrh	r3, [r4, #56]	; 0x38
   1f1d4:	cmp	r3, #5
   1f1d8:	beq	1f210 <__flatcc_fb_gen_c_json_parser@@Base+0x192c>
   1f1dc:	cmp	r3, #6
   1f1e0:	beq	1f240 <__flatcc_fb_gen_c_json_parser@@Base+0x195c>
   1f1e4:	cmp	r3, #4
   1f1e8:	bne	1f268 <__flatcc_fb_gen_c_json_parser@@Base+0x1984>
   1f1ec:	ldr	r2, [r4, #4]
   1f1f0:	mov	r1, r8
   1f1f4:	ldr	r3, [r2, #4]
   1f1f8:	str	r3, [sp, #8]
   1f1fc:	ldr	r2, [r2]
   1f200:	str	r3, [sp]
   1f204:	str	r2, [sp, #4]
   1f208:	ldrd	r2, [r4, #48]	; 0x30
   1f20c:	b	1f230 <__flatcc_fb_gen_c_json_parser@@Base+0x194c>
   1f210:	ldr	r2, [r4, #4]
   1f214:	mov	r1, r5
   1f218:	ldr	r3, [r2, #4]
   1f21c:	str	r3, [sp, #8]
   1f220:	ldr	r2, [r2]
   1f224:	str	r3, [sp]
   1f228:	str	r2, [sp, #4]
   1f22c:	ldrd	r2, [r4, #48]	; 0x30
   1f230:	ldr	r0, [r6, #204]	; 0xcc
   1f234:	bl	13fb0 <fprintf@plt>
   1f238:	ldr	r4, [r4]
   1f23c:	b	1f1b4 <__flatcc_fb_gen_c_json_parser@@Base+0x18d0>
   1f240:	ldr	r1, [r4, #4]
   1f244:	ldrb	r2, [r4, #48]	; 0x30
   1f248:	ldr	r0, [r6, #204]	; 0xcc
   1f24c:	ldr	r3, [r1, #4]
   1f250:	str	r3, [sp, #4]
   1f254:	ldr	r1, [r1]
   1f258:	str	r1, [sp]
   1f25c:	mov	r1, r7
   1f260:	bl	13fb0 <fprintf@plt>
   1f264:	b	1f238 <__flatcc_fb_gen_c_json_parser@@Base+0x1954>
   1f268:	ldr	r3, [pc, #108]	; 1f2dc <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   1f26c:	ldr	r0, [pc, #72]	; 1f2bc <__flatcc_fb_gen_c_json_parser@@Base+0x19d8>
   1f270:	ldr	r2, [pc, #104]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x19fc>
   1f274:	str	r3, [sp]
   1f278:	mov	r3, #157	; 0x9d
   1f27c:	ldr	r1, [pc, #64]	; 1f2c4 <__flatcc_fb_gen_c_json_parser@@Base+0x19e0>
   1f280:	ldr	r0, [r0]
   1f284:	bl	13fb0 <fprintf@plt>
   1f288:	ldr	r3, [pc, #84]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a00>
   1f28c:	mov	r2, #157	; 0x9d
   1f290:	b	1f190 <__flatcc_fb_gen_c_json_parser@@Base+0x18ac>
   1f294:	andeq	r4, r4, r0, lsr #12
   1f298:	andeq	r1, r3, fp, lsr #2
   1f29c:	andeq	r4, r4, pc, lsr #14
   1f2a0:	andeq	r4, r4, r5, ror r7
   1f2a4:	muleq	r4, r7, r7
   1f2a8:	andeq	r4, r4, lr, asr #15
   1f2ac:	andeq	r4, r4, pc, lsr #16
   1f2b0:	andeq	r4, r4, fp, ror #16
   1f2b4:	andeq	r5, r4, fp, ror r6
   1f2b8:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   1f2bc:	strheq	sl, [r5], -r0
   1f2c0:	andeq	pc, r2, r4, asr #27
   1f2c4:	andeq	pc, r2, sp, lsl #28
   1f2c8:	andeq	r4, r4, ip, lsl #13
   1f2cc:	andeq	r8, r3, pc, ror #2
   1f2d0:	ldrdeq	r7, [r3], -r5
   1f2d4:	andeq	r4, r4, fp, lsr #14
   1f2d8:	andeq	r4, r4, r8, lsl #15
   1f2dc:	andeq	r4, r4, lr, lsl #18
   1f2e0:			; <UNDEFINED> instruction: 0x000448b8
   1f2e4:	andeq	r4, r4, r0, ror #13
   1f2e8:	andeq	r4, r4, r8, asr #18
   1f2ec:	andeq	r4, r4, fp, asr r9
   1f2f0:	muleq	r4, lr, r9
   1f2f4:	andeq	r4, r4, r1, ror #19
   1f2f8:	andeq	r4, r4, r2, lsr #20
   1f2fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f300:	sub	sp, sp, #464	; 0x1d0
   1f304:	mov	r4, r1
   1f308:	mov	r5, r0
   1f30c:	mov	r2, #220	; 0xdc
   1f310:	mov	r1, #0
   1f314:	add	r0, sp, #24
   1f318:	add	r7, sp, #244	; 0xf4
   1f31c:	ldr	r8, [pc, #380]	; 1f4a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bbc>
   1f320:	mov	r6, #0
   1f324:	bl	13fc8 <memset@plt>
   1f328:	mov	r2, #220	; 0xdc
   1f32c:	mov	r1, #0
   1f330:	ldr	r9, [pc, #364]	; 1f4a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc0>
   1f334:	mov	r0, r7
   1f338:	bl	13fc8 <memset@plt>
   1f33c:	mov	r0, r4
   1f340:	add	r1, sp, #24
   1f344:	ldr	sl, [pc, #348]	; 1f4a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1bc4>
   1f348:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f34c:	add	r2, sp, #24
   1f350:	ldr	r1, [pc, #340]	; 1f4ac <__flatcc_fb_gen_c_json_parser@@Base+0x1bc8>
   1f354:	ldr	r0, [r5]
   1f358:	bl	13fb0 <fprintf@plt>
   1f35c:	ldr	r4, [r4, #20]
   1f360:	cmp	r4, #0
   1f364:	bne	1f394 <__flatcc_fb_gen_c_json_parser@@Base+0x1ab0>
   1f368:	ldr	r0, [pc, #320]	; 1f4b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   1f36c:	ldr	r1, [r5]
   1f370:	bl	1404c <fputs@plt>
   1f374:	ldr	r1, [pc, #312]	; 1f4b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd0>
   1f378:	add	r3, sp, #24
   1f37c:	mov	r2, r3
   1f380:	ldr	r0, [r5]
   1f384:	bl	13fb0 <fprintf@plt>
   1f388:	mov	r0, r4
   1f38c:	add	sp, sp, #464	; 0x1d0
   1f390:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f394:	ldrh	r3, [r4, #72]	; 0x48
   1f398:	tst	r3, #4
   1f39c:	bne	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1f3a0:	ldrh	r3, [r4, #24]
   1f3a4:	cmp	r3, #8
   1f3a8:	beq	1f3c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1adc>
   1f3ac:	cmp	r3, #14
   1f3b0:	beq	1f400 <__flatcc_fb_gen_c_json_parser@@Base+0x1b1c>
   1f3b4:	add	r6, r6, #1
   1f3b8:	ldr	r4, [r4]
   1f3bc:	b	1f360 <__flatcc_fb_gen_c_json_parser@@Base+0x1a7c>
   1f3c0:	ldr	r0, [r4, #16]
   1f3c4:	bl	1ee3c <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1f3c8:	ldr	r2, [r4, #4]
   1f3cc:	mov	r1, r8
   1f3d0:	ldr	r3, [r2, #4]
   1f3d4:	str	r3, [sp, #16]
   1f3d8:	ldr	r2, [r2]
   1f3dc:	str	r3, [sp, #8]
   1f3e0:	str	r2, [sp, #12]
   1f3e4:	ldrd	r2, [r4, #80]	; 0x50
   1f3e8:	strd	r2, [sp]
   1f3ec:	mov	r2, r0
   1f3f0:	mov	r3, r6
   1f3f4:	ldr	r0, [r5]
   1f3f8:	bl	13fb0 <fprintf@plt>
   1f3fc:	b	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1f400:	mov	r1, r7
   1f404:	ldr	r0, [r4, #16]
   1f408:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f40c:	ldr	r3, [r4, #16]
   1f410:	ldrh	r2, [r3, #8]
   1f414:	cmp	r2, #1
   1f418:	beq	1f468 <__flatcc_fb_gen_c_json_parser@@Base+0x1b84>
   1f41c:	cmp	r2, #3
   1f420:	bne	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1f424:	ldr	r0, [r3, #40]	; 0x28
   1f428:	bl	1ee3c <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1f42c:	ldr	r2, [r4, #4]
   1f430:	mov	r1, sl
   1f434:	ldr	r3, [r2, #4]
   1f438:	str	r3, [sp, #16]
   1f43c:	str	r7, [sp, #20]
   1f440:	ldr	r2, [r2]
   1f444:	str	r3, [sp, #8]
   1f448:	str	r2, [sp, #12]
   1f44c:	ldrd	r2, [r4, #80]	; 0x50
   1f450:	strd	r2, [sp]
   1f454:	mov	r2, r0
   1f458:	mov	r3, r6
   1f45c:	ldr	r0, [r5]
   1f460:	bl	13fb0 <fprintf@plt>
   1f464:	b	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1f468:	ldr	r2, [r4, #4]
   1f46c:	mov	r1, r9
   1f470:	ldr	r0, [r5]
   1f474:	ldr	r3, [r2, #4]
   1f478:	str	r3, [sp, #16]
   1f47c:	str	r7, [sp, #20]
   1f480:	ldr	r2, [r2]
   1f484:	str	r3, [sp, #8]
   1f488:	str	r2, [sp, #12]
   1f48c:	ldrd	r2, [r4, #80]	; 0x50
   1f490:	strd	r2, [sp]
   1f494:	mov	r2, r6
   1f498:	bl	13fb0 <fprintf@plt>
   1f49c:	b	1f3b4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
   1f4a0:	andeq	r4, r4, ip, lsr #21
   1f4a4:	andeq	r4, r4, r7, asr fp
   1f4a8:	strdeq	r4, [r4], -r5
   1f4ac:	andeq	r4, r4, sp, asr sl
   1f4b0:	andeq	r5, r4, fp, ror r6
   1f4b4:			; <UNDEFINED> instruction: 0x00044bbc
   1f4b8:	push	{r4, r5, r6, r7, r8, lr}
   1f4bc:	sub	sp, sp, #448	; 0x1c0
   1f4c0:	mov	r4, r1
   1f4c4:	mov	r5, r0
   1f4c8:	mov	r2, #220	; 0xdc
   1f4cc:	mov	r1, #0
   1f4d0:	add	r0, sp, #8
   1f4d4:	bl	13fc8 <memset@plt>
   1f4d8:	mov	r2, #220	; 0xdc
   1f4dc:	mov	r1, #0
   1f4e0:	ldr	r6, [pc, #316]	; 1f624 <__flatcc_fb_gen_c_json_parser@@Base+0x1d40>
   1f4e4:	add	r0, sp, #228	; 0xe4
   1f4e8:	bl	13fc8 <memset@plt>
   1f4ec:	mov	r0, r4
   1f4f0:	add	r1, sp, #8
   1f4f4:	ldr	r7, [pc, #300]	; 1f628 <__flatcc_fb_gen_c_json_parser@@Base+0x1d44>
   1f4f8:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f4fc:	add	r2, sp, #8
   1f500:	ldr	r1, [pc, #292]	; 1f62c <__flatcc_fb_gen_c_json_parser@@Base+0x1d48>
   1f504:	ldr	r0, [r5]
   1f508:	bl	13fb0 <fprintf@plt>
   1f50c:	ldr	r8, [pc, #284]	; 1f630 <__flatcc_fb_gen_c_json_parser@@Base+0x1d4c>
   1f510:	ldr	r4, [r4, #20]
   1f514:	cmp	r4, #0
   1f518:	bne	1f540 <__flatcc_fb_gen_c_json_parser@@Base+0x1c5c>
   1f51c:	ldr	r0, [pc, #272]	; 1f634 <__flatcc_fb_gen_c_json_parser@@Base+0x1d50>
   1f520:	ldr	r1, [r5]
   1f524:	bl	1404c <fputs@plt>
   1f528:	ldr	r1, [r5]
   1f52c:	ldr	r0, [pc, #260]	; 1f638 <__flatcc_fb_gen_c_json_parser@@Base+0x1d54>
   1f530:	bl	1404c <fputs@plt>
   1f534:	mov	r0, r4
   1f538:	add	sp, sp, #448	; 0x1c0
   1f53c:	pop	{r4, r5, r6, r7, r8, pc}
   1f540:	ldrh	r3, [r4, #24]
   1f544:	cmp	r3, #10
   1f548:	beq	1f5e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d00>
   1f54c:	cmp	r3, #14
   1f550:	beq	1f564 <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   1f554:	cmp	r3, #0
   1f558:	bne	1f5f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d14>
   1f55c:	ldr	r4, [r4]
   1f560:	b	1f514 <__flatcc_fb_gen_c_json_parser@@Base+0x1c30>
   1f564:	add	r1, sp, #228	; 0xe4
   1f568:	ldr	r0, [r4, #16]
   1f56c:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f570:	ldr	r3, [r4, #16]
   1f574:	ldrh	r3, [r3, #8]
   1f578:	cmp	r3, #0
   1f57c:	beq	1f5bc <__flatcc_fb_gen_c_json_parser@@Base+0x1cd8>
   1f580:	cmp	r3, #1
   1f584:	beq	1f5d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   1f588:	ldr	r3, [pc, #172]	; 1f63c <__flatcc_fb_gen_c_json_parser@@Base+0x1d58>
   1f58c:	ldr	r0, [pc, #172]	; 1f640 <__flatcc_fb_gen_c_json_parser@@Base+0x1d5c>
   1f590:	ldr	r2, [pc, #172]	; 1f644 <__flatcc_fb_gen_c_json_parser@@Base+0x1d60>
   1f594:	str	r3, [sp]
   1f598:	mov	r3, #240	; 0xf0
   1f59c:	ldr	r1, [pc, #164]	; 1f648 <__flatcc_fb_gen_c_json_parser@@Base+0x1d64>
   1f5a0:	ldr	r0, [r0]
   1f5a4:	bl	13fb0 <fprintf@plt>
   1f5a8:	ldr	r3, [pc, #156]	; 1f64c <__flatcc_fb_gen_c_json_parser@@Base+0x1d68>
   1f5ac:	mov	r2, #240	; 0xf0
   1f5b0:	ldr	r1, [pc, #140]	; 1f644 <__flatcc_fb_gen_c_json_parser@@Base+0x1d60>
   1f5b4:	ldr	r0, [pc, #148]	; 1f650 <__flatcc_fb_gen_c_json_parser@@Base+0x1d6c>
   1f5b8:	bl	14070 <__assert_fail@plt>
   1f5bc:	ldr	r2, [r4, #48]	; 0x30
   1f5c0:	add	r3, sp, #228	; 0xe4
   1f5c4:	mov	r1, r7
   1f5c8:	ldr	r0, [r5]
   1f5cc:	bl	13fb0 <fprintf@plt>
   1f5d0:	b	1f55c <__flatcc_fb_gen_c_json_parser@@Base+0x1c78>
   1f5d4:	add	r3, sp, #228	; 0xe4
   1f5d8:	mov	r1, r8
   1f5dc:	ldr	r2, [r4, #48]	; 0x30
   1f5e0:	b	1f5c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ce4>
   1f5e4:	mov	r1, r6
   1f5e8:	ldr	r0, [r5]
   1f5ec:	ldr	r2, [r4, #48]	; 0x30
   1f5f0:	bl	13fb0 <fprintf@plt>
   1f5f4:	b	1f55c <__flatcc_fb_gen_c_json_parser@@Base+0x1c78>
   1f5f8:	ldr	r3, [pc, #60]	; 1f63c <__flatcc_fb_gen_c_json_parser@@Base+0x1d58>
   1f5fc:	ldr	r0, [pc, #60]	; 1f640 <__flatcc_fb_gen_c_json_parser@@Base+0x1d5c>
   1f600:	ldr	r2, [pc, #60]	; 1f644 <__flatcc_fb_gen_c_json_parser@@Base+0x1d60>
   1f604:	str	r3, [sp]
   1f608:	mov	r3, #251	; 0xfb
   1f60c:	ldr	r1, [pc, #52]	; 1f648 <__flatcc_fb_gen_c_json_parser@@Base+0x1d64>
   1f610:	ldr	r0, [r0]
   1f614:	bl	13fb0 <fprintf@plt>
   1f618:	ldr	r3, [pc, #44]	; 1f64c <__flatcc_fb_gen_c_json_parser@@Base+0x1d68>
   1f61c:	mov	r2, #251	; 0xfb
   1f620:	b	1f5b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ccc>
   1f624:	andeq	r4, r4, r7, lsl #28
   1f628:	andeq	r4, r4, r6, lsl sp
   1f62c:	muleq	r4, r3, ip
   1f630:	andeq	r4, r4, sl, ror sp
   1f634:	andeq	r4, r4, r7, asr lr
   1f638:	andeq	r1, r4, r5, ror sp
   1f63c:	andeq	r4, r4, r0, ror #27
   1f640:	strheq	sl, [r5], -r0
   1f644:			; <UNDEFINED> instruction: 0x000448b8
   1f648:	andeq	pc, r2, sp, lsl #28
   1f64c:	strdeq	r4, [r4], -r6
   1f650:	andeq	r8, r3, pc, ror #2
   1f654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f658:	sub	sp, sp, #484	; 0x1e4
   1f65c:	mov	r6, r1
   1f660:	mov	r2, #220	; 0xdc
   1f664:	mov	r1, #0
   1f668:	mov	r4, r0
   1f66c:	add	r5, sp, #260	; 0x104
   1f670:	add	r0, sp, #40	; 0x28
   1f674:	bl	13fc8 <memset@plt>
   1f678:	mov	r2, #220	; 0xdc
   1f67c:	mov	r1, #0
   1f680:	mov	r0, r5
   1f684:	bl	13fc8 <memset@plt>
   1f688:	add	r1, sp, #40	; 0x28
   1f68c:	mov	r0, r6
   1f690:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f694:	ldr	r7, [r6, #96]	; 0x60
   1f698:	mov	r1, #4
   1f69c:	ldr	r8, [r6, #100]	; 0x64
   1f6a0:	mov	r0, r7
   1f6a4:	bl	13ec0 <calloc@plt>
   1f6a8:	orrs	r3, r7, r8
   1f6ac:	movne	r3, #1
   1f6b0:	moveq	r3, #0
   1f6b4:	cmp	r0, #0
   1f6b8:	movne	r3, #0
   1f6bc:	cmp	r3, #0
   1f6c0:	moveq	r7, r0
   1f6c4:	ldreq	r3, [r6, #20]
   1f6c8:	beq	1f70c <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   1f6cc:	ldr	r3, [pc, #1508]	; 1fcb8 <__flatcc_fb_gen_c_json_parser@@Base+0x23d4>
   1f6d0:	ldr	r0, [pc, #1508]	; 1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   1f6d4:	ldr	r2, [pc, #1508]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   1f6d8:	str	r3, [sp]
   1f6dc:	movw	r3, #361	; 0x169
   1f6e0:	ldr	r1, [pc, #1500]	; 1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   1f6e4:	ldr	r0, [r0]
   1f6e8:	bl	13fb0 <fprintf@plt>
   1f6ec:	ldr	r3, [pc, #1492]	; 1fcc8 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   1f6f0:	movw	r2, #361	; 0x169
   1f6f4:	ldr	r1, [pc, #1476]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   1f6f8:	ldr	r0, [pc, #1484]	; 1fccc <__flatcc_fb_gen_c_json_parser@@Base+0x23e8>
   1f6fc:	bl	14070 <__assert_fail@plt>
   1f700:	ldr	r2, [r3, #96]	; 0x60
   1f704:	str	r3, [r7, r2, lsl #2]
   1f708:	ldr	r3, [r3]
   1f70c:	cmp	r3, #0
   1f710:	bne	1f700 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   1f714:	add	r2, sp, #40	; 0x28
   1f718:	ldr	r1, [pc, #1456]	; 1fcd0 <__flatcc_fb_gen_c_json_parser@@Base+0x23ec>
   1f71c:	mov	r8, #0
   1f720:	mov	r9, #0
   1f724:	ldr	r0, [r4]
   1f728:	ldr	sl, [pc, #1444]	; 1fcd4 <__flatcc_fb_gen_c_json_parser@@Base+0x23f0>
   1f72c:	bl	13fb0 <fprintf@plt>
   1f730:	ldrd	r2, [r6, #96]	; 0x60
   1f734:	ldr	r1, [r4]
   1f738:	cmp	r9, r3
   1f73c:	cmpeq	r8, r2
   1f740:	bcc	1f77c <__flatcc_fb_gen_c_json_parser@@Base+0x1e98>
   1f744:	ldr	r0, [pc, #1420]	; 1fcd8 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
   1f748:	bl	1404c <fputs@plt>
   1f74c:	add	r3, sp, #40	; 0x28
   1f750:	ldr	r1, [pc, #1412]	; 1fcdc <__flatcc_fb_gen_c_json_parser@@Base+0x23f8>
   1f754:	mov	r2, r3
   1f758:	ldr	r0, [r4]
   1f75c:	bl	13fb0 <fprintf@plt>
   1f760:	cmp	r7, #0
   1f764:	beq	1f770 <__flatcc_fb_gen_c_json_parser@@Base+0x1e8c>
   1f768:	mov	r0, r7
   1f76c:	bl	13ef0 <free@plt>
   1f770:	mov	r0, #0
   1f774:	add	sp, sp, #484	; 0x1e4
   1f778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f77c:	lsl	r3, r8, #2
   1f780:	ldr	fp, [r7, r3]
   1f784:	cmp	fp, #0
   1f788:	beq	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1f78c:	ldrh	r3, [fp, #72]	; 0x48
   1f790:	tst	r3, #4
   1f794:	bne	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1f798:	ldr	r0, [pc, #1344]	; 1fce0 <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   1f79c:	bl	1404c <fputs@plt>
   1f7a0:	ldrh	r3, [fp, #24]
   1f7a4:	sub	r3, r3, #7
   1f7a8:	cmp	r3, #8
   1f7ac:	ldrls	pc, [pc, r3, lsl #2]
   1f7b0:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1f7b4:	ldrdeq	pc, [r1], -ip
   1f7b8:	ldrdeq	pc, [r1], -r8
   1f7bc:	andeq	pc, r1, r8, asr #19
   1f7c0:	muleq	r1, ip, r9
   1f7c4:	andeq	pc, r1, ip, lsr r8	; <UNPREDICTABLE>
   1f7c8:	andeq	pc, r1, ip, lsr r8	; <UNPREDICTABLE>
   1f7cc:	andeq	pc, r1, ip, lsr r8	; <UNPREDICTABLE>
   1f7d0:	andeq	pc, r1, ip, ror #19
   1f7d4:	muleq	r1, r0, fp
   1f7d8:	ldr	r0, [fp, #16]
   1f7dc:	bl	1ee3c <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1f7e0:	ldrh	r3, [fp, #56]	; 0x38
   1f7e4:	mov	r2, r0
   1f7e8:	sub	r3, r3, #3
   1f7ec:	cmp	r3, #3
   1f7f0:	ldrls	pc, [pc, r3, lsl #2]
   1f7f4:	b	1f8b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1fcc>
   1f7f8:	andeq	pc, r1, r8, ror r8	; <UNPREDICTABLE>
   1f7fc:	andeq	pc, r1, r8, asr #16
   1f800:	andeq	pc, r1, r8, lsl #16
   1f804:	andeq	pc, r1, r8, lsl #16
   1f808:	ldr	ip, [fp, #4]
   1f80c:	ldrd	r0, [fp, #48]	; 0x30
   1f810:	ldr	r3, [ip, #4]
   1f814:	str	r3, [sp, #16]
   1f818:	strd	r0, [sp, #24]
   1f81c:	ldr	r1, [ip]
   1f820:	str	r3, [sp, #8]
   1f824:	str	r1, [sp, #12]
   1f828:	ldrd	r0, [fp, #96]	; 0x60
   1f82c:	strd	r0, [sp]
   1f830:	ldr	r1, [pc, #1196]	; 1fce4 <__flatcc_fb_gen_c_json_parser@@Base+0x2400>
   1f834:	ldr	r0, [r4]
   1f838:	bl	13fb0 <fprintf@plt>
   1f83c:	adds	r8, r8, #1
   1f840:	adc	r9, r9, #0
   1f844:	b	1f730 <__flatcc_fb_gen_c_json_parser@@Base+0x1e4c>
   1f848:	ldr	ip, [fp, #4]
   1f84c:	ldrd	r0, [fp, #48]	; 0x30
   1f850:	ldr	r3, [ip, #4]
   1f854:	str	r3, [sp, #16]
   1f858:	strd	r0, [sp, #24]
   1f85c:	ldr	r1, [ip]
   1f860:	str	r3, [sp, #8]
   1f864:	str	r1, [sp, #12]
   1f868:	ldrd	r0, [fp, #96]	; 0x60
   1f86c:	strd	r0, [sp]
   1f870:	ldr	r1, [pc, #1136]	; 1fce8 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   1f874:	b	1f834 <__flatcc_fb_gen_c_json_parser@@Base+0x1f50>
   1f878:	ldr	r1, [fp, #4]
   1f87c:	vldr	d7, [fp, #48]	; 0x30
   1f880:	ldr	r3, [r1, #4]
   1f884:	str	r3, [sp, #16]
   1f888:	vstr	d7, [sp, #24]
   1f88c:	ldr	r1, [r1]
   1f890:	str	r3, [sp, #8]
   1f894:	str	r1, [sp, #12]
   1f898:	ldrd	r0, [fp, #96]	; 0x60
   1f89c:	strd	r0, [sp]
   1f8a0:	ldr	r1, [pc, #1092]	; 1fcec <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
   1f8a4:	ldr	r0, [r4]
   1f8a8:	bl	13fb0 <fprintf@plt>
   1f8ac:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1f8b0:	ldr	r3, [pc, #1080]	; 1fcf0 <__flatcc_fb_gen_c_json_parser@@Base+0x240c>
   1f8b4:	ldr	r0, [pc, #1024]	; 1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   1f8b8:	ldr	r2, [pc, #1024]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   1f8bc:	str	r3, [sp]
   1f8c0:	movw	r3, #406	; 0x196
   1f8c4:	ldr	r1, [pc, #1016]	; 1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   1f8c8:	ldr	r0, [r0]
   1f8cc:	bl	13fb0 <fprintf@plt>
   1f8d0:	ldr	r3, [pc, #1008]	; 1fcc8 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   1f8d4:	movw	r2, #406	; 0x196
   1f8d8:	b	1f6f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   1f8dc:	ldrh	r3, [fp, #72]	; 0x48
   1f8e0:	tst	r3, #3072	; 0xc00
   1f8e4:	beq	1f918 <__flatcc_fb_gen_c_json_parser@@Base+0x2034>
   1f8e8:	ldr	r1, [fp, #4]
   1f8ec:	eor	r3, r3, #1024	; 0x400
   1f8f0:	ubfx	r3, r3, #10, #1
   1f8f4:	ldr	r2, [r1, #4]
   1f8f8:	strd	r2, [sp, #8]
   1f8fc:	ldr	r3, [r1]
   1f900:	ldr	r1, [pc, #1004]	; 1fcf4 <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   1f904:	strd	r2, [sp]
   1f908:	ldrd	r2, [fp, #96]	; 0x60
   1f90c:	ldr	r0, [r4]
   1f910:	bl	13fb0 <fprintf@plt>
   1f914:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1f918:	ldr	r0, [fp, #104]	; 0x68
   1f91c:	cmp	r0, #0
   1f920:	beq	1f960 <__flatcc_fb_gen_c_json_parser@@Base+0x207c>
   1f924:	mov	r1, r5
   1f928:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f92c:	ldr	r3, [fp, #104]	; 0x68
   1f930:	ldrh	r3, [r3, #8]
   1f934:	cmp	r3, #0
   1f938:	ldr	r3, [fp, #4]
   1f93c:	ldrne	r1, [pc, #948]	; 1fcf8 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   1f940:	ldreq	r1, [pc, #948]	; 1fcfc <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   1f944:	ldr	r2, [r3, #4]
   1f948:	str	r2, [sp, #8]
   1f94c:	str	r5, [sp, #12]
   1f950:	ldr	r3, [r3]
   1f954:	strd	r2, [sp]
   1f958:	ldrd	r2, [fp, #96]	; 0x60
   1f95c:	b	1f90c <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   1f960:	ldr	r0, [fp, #16]
   1f964:	bl	1ee3c <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1f968:	ldr	r2, [fp, #4]
   1f96c:	ldr	r1, [pc, #908]	; 1fd00 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   1f970:	ldr	r3, [r2, #4]
   1f974:	str	r3, [sp, #16]
   1f978:	ldr	r2, [r2]
   1f97c:	str	r3, [sp, #8]
   1f980:	str	r2, [sp, #12]
   1f984:	ldrd	r2, [fp, #96]	; 0x60
   1f988:	strd	r2, [sp]
   1f98c:	mov	r2, r0
   1f990:	ldr	r0, [r4]
   1f994:	bl	13fb0 <fprintf@plt>
   1f998:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1f99c:	ldr	r2, [fp, #4]
   1f9a0:	ldr	r1, [pc, #860]	; 1fd04 <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   1f9a4:	ldr	r3, [r2, #4]
   1f9a8:	str	r3, [sp, #8]
   1f9ac:	ldr	r2, [r2]
   1f9b0:	str	r3, [sp]
   1f9b4:	str	r2, [sp, #4]
   1f9b8:	ldrd	r2, [fp, #96]	; 0x60
   1f9bc:	ldr	r0, [r4]
   1f9c0:	bl	13fb0 <fprintf@plt>
   1f9c4:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1f9c8:	ldr	r2, [fp, #4]
   1f9cc:	ldr	r1, [pc, #820]	; 1fd08 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   1f9d0:	ldr	r3, [r2, #4]
   1f9d4:	str	r3, [sp, #8]
   1f9d8:	ldr	r2, [r2]
   1f9dc:	str	r3, [sp]
   1f9e0:	str	r2, [sp, #4]
   1f9e4:	ldrd	r2, [fp, #96]	; 0x60
   1f9e8:	b	1f9bc <__flatcc_fb_gen_c_json_parser@@Base+0x20d8>
   1f9ec:	mov	r1, r5
   1f9f0:	ldr	r0, [fp, #16]
   1f9f4:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1f9f8:	ldr	r3, [fp, #16]
   1f9fc:	ldrh	r2, [r3, #8]
   1fa00:	cmp	r2, #4
   1fa04:	ldrls	pc, [pc, r2, lsl #2]
   1fa08:	b	1fb64 <__flatcc_fb_gen_c_json_parser@@Base+0x2280>
   1fa0c:	andeq	pc, r1, r8, lsl #22
   1fa10:	andeq	pc, r1, r0, ror #21
   1fa14:	andeq	pc, r1, r4, ror #22
   1fa18:	andeq	pc, r1, r0, lsr #20
   1fa1c:	andeq	pc, r1, r0, lsr fp	; <UNPREDICTABLE>
   1fa20:	ldr	r0, [r3, #40]	; 0x28
   1fa24:	bl	1ee3c <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1fa28:	ldrh	r3, [fp, #56]	; 0x38
   1fa2c:	mov	r2, r0
   1fa30:	cmp	r3, #4
   1fa34:	beq	1fa80 <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   1fa38:	bcc	1fab4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d0>
   1fa3c:	cmp	r3, #6
   1fa40:	bhi	1fab4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d0>
   1fa44:	ldr	ip, [fp, #4]
   1fa48:	ldr	r3, [ip, #4]
   1fa4c:	str	r5, [sp, #32]
   1fa50:	ldrd	r0, [fp, #48]	; 0x30
   1fa54:	str	r3, [sp, #16]
   1fa58:	strd	r0, [sp, #24]
   1fa5c:	ldr	r1, [ip]
   1fa60:	str	r3, [sp, #8]
   1fa64:	str	r1, [sp, #12]
   1fa68:	ldrd	r0, [fp, #96]	; 0x60
   1fa6c:	strd	r0, [sp]
   1fa70:	ldr	r1, [pc, #660]	; 1fd0c <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   1fa74:	ldr	r0, [r4]
   1fa78:	bl	13fb0 <fprintf@plt>
   1fa7c:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1fa80:	ldr	ip, [fp, #4]
   1fa84:	ldr	r3, [ip, #4]
   1fa88:	str	r5, [sp, #32]
   1fa8c:	ldrd	r0, [fp, #48]	; 0x30
   1fa90:	str	r3, [sp, #16]
   1fa94:	strd	r0, [sp, #24]
   1fa98:	ldr	r1, [ip]
   1fa9c:	str	r3, [sp, #8]
   1faa0:	str	r1, [sp, #12]
   1faa4:	ldrd	r0, [fp, #96]	; 0x60
   1faa8:	strd	r0, [sp]
   1faac:	ldr	r1, [pc, #604]	; 1fd10 <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   1fab0:	b	1fa74 <__flatcc_fb_gen_c_json_parser@@Base+0x2190>
   1fab4:	ldr	r3, [pc, #600]	; 1fd14 <__flatcc_fb_gen_c_json_parser@@Base+0x2430>
   1fab8:	ldr	r0, [pc, #508]	; 1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   1fabc:	ldr	r2, [pc, #508]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   1fac0:	str	r3, [sp]
   1fac4:	movw	r3, #483	; 0x1e3
   1fac8:	ldr	r1, [pc, #500]	; 1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   1facc:	ldr	r0, [r0]
   1fad0:	bl	13fb0 <fprintf@plt>
   1fad4:	ldr	r3, [pc, #492]	; 1fcc8 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   1fad8:	movw	r2, #483	; 0x1e3
   1fadc:	b	1f6f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   1fae0:	ldr	r2, [fp, #4]
   1fae4:	ldr	r1, [pc, #556]	; 1fd18 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   1fae8:	ldr	r3, [r2, #4]
   1faec:	str	r3, [sp, #8]
   1faf0:	str	r5, [sp, #12]
   1faf4:	ldr	r2, [r2]
   1faf8:	str	r3, [sp]
   1fafc:	str	r2, [sp, #4]
   1fb00:	ldrd	r2, [fp, #96]	; 0x60
   1fb04:	b	1f90c <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   1fb08:	ldr	r2, [fp, #4]
   1fb0c:	ldr	r1, [pc, #520]	; 1fd1c <__flatcc_fb_gen_c_json_parser@@Base+0x2438>
   1fb10:	ldr	r3, [r2, #4]
   1fb14:	str	r3, [sp, #8]
   1fb18:	str	r5, [sp, #12]
   1fb1c:	ldr	r2, [r2]
   1fb20:	str	r3, [sp]
   1fb24:	str	r2, [sp, #4]
   1fb28:	ldrd	r2, [fp, #96]	; 0x60
   1fb2c:	b	1f90c <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   1fb30:	ldr	r2, [fp, #4]
   1fb34:	ldr	r1, [pc, #484]	; 1fd20 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   1fb38:	ldr	r3, [r2, #4]
   1fb3c:	str	r3, [sp, #8]
   1fb40:	str	r5, [sp, #12]
   1fb44:	str	r5, [sp, #16]
   1fb48:	ldr	r2, [r2]
   1fb4c:	str	r3, [sp]
   1fb50:	str	r2, [sp, #4]
   1fb54:	ldrd	r2, [fp, #96]	; 0x60
   1fb58:	ldr	r0, [r4]
   1fb5c:	bl	13fb0 <fprintf@plt>
   1fb60:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1fb64:	ldr	r3, [pc, #440]	; 1fd24 <__flatcc_fb_gen_c_json_parser@@Base+0x2440>
   1fb68:	ldr	r0, [pc, #332]	; 1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   1fb6c:	ldr	r2, [pc, #332]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   1fb70:	str	r3, [sp]
   1fb74:	mov	r3, #504	; 0x1f8
   1fb78:	ldr	r1, [pc, #324]	; 1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   1fb7c:	ldr	r0, [r0]
   1fb80:	bl	13fb0 <fprintf@plt>
   1fb84:	ldr	r3, [pc, #316]	; 1fcc8 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   1fb88:	mov	r2, #504	; 0x1f8
   1fb8c:	b	1f6f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   1fb90:	mov	r1, r5
   1fb94:	ldr	r0, [fp, #16]
   1fb98:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1fb9c:	ldr	r3, [fp, #16]
   1fba0:	ldrh	r3, [r3, #8]
   1fba4:	cmp	r3, #4
   1fba8:	ldrls	pc, [pc, r3, lsl #2]
   1fbac:	b	1fc8c <__flatcc_fb_gen_c_json_parser@@Base+0x23a8>
   1fbb0:	andeq	pc, r1, r4, asr #23
   1fbb4:	andeq	pc, r1, ip, lsr #24
   1fbb8:	andeq	pc, r1, ip, lsl #25
   1fbbc:	andeq	pc, r1, ip, ror #23
   1fbc0:	andeq	pc, r1, r0, ror #24
   1fbc4:	ldr	r2, [fp, #4]
   1fbc8:	ldr	r1, [pc, #344]	; 1fd28 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   1fbcc:	ldr	r3, [r2, #4]
   1fbd0:	str	r3, [sp, #8]
   1fbd4:	str	r5, [sp, #12]
   1fbd8:	ldr	r2, [r2]
   1fbdc:	str	r3, [sp]
   1fbe0:	str	r2, [sp, #4]
   1fbe4:	ldrd	r2, [fp, #96]	; 0x60
   1fbe8:	b	1f90c <__flatcc_fb_gen_c_json_parser@@Base+0x2028>
   1fbec:	ldr	r0, [fp, #16]
   1fbf0:	bl	1ee3c <__flatcc_fb_gen_c_json_parser@@Base+0x1558>
   1fbf4:	ldr	ip, [fp, #4]
   1fbf8:	ldrd	r2, [r6, #112]	; 0x70
   1fbfc:	ldr	r1, [ip, #4]
   1fc00:	str	r5, [sp, #32]
   1fc04:	str	r1, [sp, #16]
   1fc08:	strd	r2, [sp, #24]
   1fc0c:	ldr	r3, [ip]
   1fc10:	str	r1, [sp, #8]
   1fc14:	ldr	r1, [pc, #272]	; 1fd2c <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   1fc18:	str	r3, [sp, #12]
   1fc1c:	ldrd	r2, [fp, #96]	; 0x60
   1fc20:	strd	r2, [sp]
   1fc24:	mov	r2, r0
   1fc28:	b	1fa74 <__flatcc_fb_gen_c_json_parser@@Base+0x2190>
   1fc2c:	ldr	r0, [fp, #4]
   1fc30:	ldr	r1, [r0, #4]
   1fc34:	str	r5, [sp, #24]
   1fc38:	ldrd	r2, [fp, #88]	; 0x58
   1fc3c:	str	r1, [sp, #8]
   1fc40:	strd	r2, [sp, #16]
   1fc44:	ldr	r3, [r0]
   1fc48:	ldr	r0, [r4]
   1fc4c:	stm	sp, {r1, r3}
   1fc50:	mov	r1, sl
   1fc54:	ldrd	r2, [fp, #96]	; 0x60
   1fc58:	bl	13fb0 <fprintf@plt>
   1fc5c:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1fc60:	ldr	r2, [fp, #4]
   1fc64:	ldr	r1, [pc, #196]	; 1fd30 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1fc68:	ldr	r3, [r2, #4]
   1fc6c:	str	r3, [sp, #8]
   1fc70:	str	r5, [sp, #12]
   1fc74:	str	r5, [sp, #16]
   1fc78:	ldr	r2, [r2]
   1fc7c:	str	r3, [sp]
   1fc80:	str	r2, [sp, #4]
   1fc84:	ldrd	r2, [fp, #96]	; 0x60
   1fc88:	b	1fb58 <__flatcc_fb_gen_c_json_parser@@Base+0x2274>
   1fc8c:	ldr	r3, [pc, #160]	; 1fd34 <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1fc90:	ldr	r0, [pc, #36]	; 1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   1fc94:	ldr	r2, [pc, #36]	; 1fcc0 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   1fc98:	str	r3, [sp]
   1fc9c:	movw	r3, #543	; 0x21f
   1fca0:	ldr	r1, [pc, #28]	; 1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   1fca4:	ldr	r0, [r0]
   1fca8:	bl	13fb0 <fprintf@plt>
   1fcac:	ldr	r3, [pc, #20]	; 1fcc8 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   1fcb0:	movw	r2, #543	; 0x21f
   1fcb4:	b	1f6f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
   1fcb8:	andeq	r4, r4, r4, ror lr
   1fcbc:	strheq	sl, [r5], -r0
   1fcc0:			; <UNDEFINED> instruction: 0x000448b8
   1fcc4:	andeq	pc, r2, sp, lsl #28
   1fcc8:	andeq	r4, r4, r4, lsl r7
   1fccc:	andeq	r8, r3, pc, ror #2
   1fcd0:	muleq	r4, lr, lr
   1fcd4:	muleq	r4, r1, r4
   1fcd8:	andeq	r5, r4, sl, ror r6
   1fcdc:	andeq	r5, r4, sl, lsr #11
   1fce0:	andeq	r4, r4, r8, lsl #30
   1fce4:	andeq	r4, r4, lr, lsl #30
   1fce8:	andeq	r4, r4, lr, asr #30
   1fcec:	andeq	r4, r4, lr, lsl #31
   1fcf0:	andeq	r2, r4, r7, ror #26
   1fcf4:	andeq	r4, r4, sp, asr #31
   1fcf8:	andeq	r5, r4, sl, ror r0
   1fcfc:	andeq	r5, r4, ip, lsl r0
   1fd00:	ldrdeq	r5, [r4], -sl
   1fd04:	andeq	r5, r4, fp, lsl r1
   1fd08:	andeq	r5, r4, r9, asr r1
   1fd0c:	muleq	r4, lr, r1
   1fd10:	strdeq	r5, [r4], -r7
   1fd14:	andeq	r5, r4, r0, asr r2
   1fd18:	andeq	r5, r4, r8, lsl #5
   1fd1c:	ldrdeq	r5, [r4], -ip
   1fd20:	andeq	r5, r4, lr, lsr #6
   1fd24:	muleq	r4, sl, r3
   1fd28:	ldrdeq	r5, [r4], -r8
   1fd2c:	andeq	r5, r4, r1, lsr r4
   1fd30:	strdeq	r5, [r4], -r2
   1fd34:	andeq	r5, r4, r5, ror #10

0001fd38 <__flatcc_fb_gen_c_json_printer@@Base>:
   1fd38:	ldr	r3, [r0, #208]	; 0xd0
   1fd3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fd40:	mov	r4, r0
   1fd44:	sub	sp, sp, #232	; 0xe8
   1fd48:	ldr	r1, [pc, #900]	; 200d4 <__flatcc_fb_gen_c_json_printer@@Base+0x39c>
   1fd4c:	ldr	r3, [r3, #164]	; 0xa4
   1fd50:	ldr	r0, [r0, #204]	; 0xcc
   1fd54:	mov	r2, r3
   1fd58:	bl	13fb0 <fprintf@plt>
   1fd5c:	ldr	r0, [pc, #884]	; 200d8 <__flatcc_fb_gen_c_json_printer@@Base+0x3a0>
   1fd60:	ldr	r1, [r4, #204]	; 0xcc
   1fd64:	bl	1404c <fputs@plt>
   1fd68:	ldr	r0, [pc, #876]	; 200dc <__flatcc_fb_gen_c_json_printer@@Base+0x3a4>
   1fd6c:	ldr	r1, [r4, #204]	; 0xcc
   1fd70:	bl	1404c <fputs@plt>
   1fd74:	ldr	r2, [pc, #868]	; 200e0 <__flatcc_fb_gen_c_json_printer@@Base+0x3a8>
   1fd78:	mov	r0, r4
   1fd7c:	ldr	r1, [pc, #864]	; 200e4 <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   1fd80:	bl	14e3c <__flatcc_fb_gen_c_includes@@Base>
   1fd84:	ldr	r3, [r4, #212]	; 0xd4
   1fd88:	ldr	r3, [r3, #140]	; 0x8c
   1fd8c:	cmp	r3, #0
   1fd90:	beq	1fda0 <__flatcc_fb_gen_c_json_printer@@Base+0x68>
   1fd94:	ldr	r0, [pc, #844]	; 200e8 <__flatcc_fb_gen_c_json_printer@@Base+0x3b0>
   1fd98:	ldr	r1, [r4, #204]	; 0xcc
   1fd9c:	bl	1404c <fputs@plt>
   1fda0:	mov	r0, #10
   1fda4:	ldr	r1, [r4, #204]	; 0xcc
   1fda8:	bl	14010 <fputc@plt>
   1fdac:	ldr	r3, [r4, #208]	; 0xd0
   1fdb0:	mov	r2, #220	; 0xdc
   1fdb4:	mov	r1, #0
   1fdb8:	add	r0, sp, #12
   1fdbc:	ldr	r5, [r3, #52]	; 0x34
   1fdc0:	bl	13fc8 <memset@plt>
   1fdc4:	cmp	r5, #0
   1fdc8:	beq	1fdf8 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   1fdcc:	ldrh	r3, [r5, #8]
   1fdd0:	cmp	r3, #1
   1fdd4:	bhi	1fdf8 <__flatcc_fb_gen_c_json_printer@@Base+0xc0>
   1fdd8:	ldr	r0, [pc, #780]	; 200ec <__flatcc_fb_gen_c_json_printer@@Base+0x3b4>
   1fddc:	ldr	r1, [r4, #204]	; 0xcc
   1fde0:	bl	1404c <fputs@plt>
   1fde4:	ldr	r1, [pc, #772]	; 200f0 <__flatcc_fb_gen_c_json_printer@@Base+0x3b8>
   1fde8:	ldr	r3, [r4, #208]	; 0xd0
   1fdec:	ldr	r0, [r4, #204]	; 0xcc
   1fdf0:	ldr	r2, [r3, #160]	; 0xa0
   1fdf4:	bl	13fb0 <fprintf@plt>
   1fdf8:	ldr	r3, [r4, #208]	; 0xd0
   1fdfc:	ldr	r6, [pc, #752]	; 200f4 <__flatcc_fb_gen_c_json_printer@@Base+0x3bc>
   1fe00:	ldr	r7, [pc, #752]	; 200f8 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
   1fe04:	ldr	r8, [pc, #752]	; 200fc <__flatcc_fb_gen_c_json_printer@@Base+0x3c4>
   1fe08:	ldr	r5, [r3, #40]	; 0x28
   1fe0c:	cmp	r5, #0
   1fe10:	bne	1ff3c <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   1fe14:	mov	r0, #10
   1fe18:	ldr	r1, [r4, #204]	; 0xcc
   1fe1c:	bl	14010 <fputc@plt>
   1fe20:	ldr	r3, [r4, #208]	; 0xd0
   1fe24:	ldr	r5, [r3, #40]	; 0x28
   1fe28:	cmp	r5, #0
   1fe2c:	bne	1ffb8 <__flatcc_fb_gen_c_json_printer@@Base+0x280>
   1fe30:	ldr	r3, [r4, #208]	; 0xd0
   1fe34:	ldr	r7, [pc, #708]	; 20100 <__flatcc_fb_gen_c_json_printer@@Base+0x3c8>
   1fe38:	ldr	r8, [pc, #708]	; 20104 <__flatcc_fb_gen_c_json_printer@@Base+0x3cc>
   1fe3c:	ldr	r9, [pc, #708]	; 20108 <__flatcc_fb_gen_c_json_printer@@Base+0x3d0>
   1fe40:	ldr	r5, [r3, #40]	; 0x28
   1fe44:	cmp	r5, #0
   1fe48:	bne	1ffd8 <__flatcc_fb_gen_c_json_printer@@Base+0x2a0>
   1fe4c:	ldr	r3, [r4, #208]	; 0xd0
   1fe50:	add	r6, r4, #204	; 0xcc
   1fe54:	ldr	r5, [r3, #40]	; 0x28
   1fe58:	cmp	r5, #0
   1fe5c:	bne	20084 <__flatcc_fb_gen_c_json_printer@@Base+0x34c>
   1fe60:	ldr	r3, [r4, #208]	; 0xd0
   1fe64:	add	r6, r4, #204	; 0xcc
   1fe68:	ldr	r5, [r3, #40]	; 0x28
   1fe6c:	cmp	r5, #0
   1fe70:	bne	200a4 <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   1fe74:	ldr	r3, [r4, #208]	; 0xd0
   1fe78:	ldr	r6, [r3, #52]	; 0x34
   1fe7c:	cmp	r6, #0
   1fe80:	beq	1ff00 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   1fe84:	ldrh	r3, [r6, #8]
   1fe88:	cmp	r3, #1
   1fe8c:	bhi	1ff00 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   1fe90:	mov	r2, #220	; 0xdc
   1fe94:	mov	r1, r5
   1fe98:	add	r0, sp, #12
   1fe9c:	bl	13fc8 <memset@plt>
   1fea0:	add	r1, sp, #12
   1fea4:	mov	r0, r6
   1fea8:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1feac:	ldr	r1, [pc, #600]	; 2010c <__flatcc_fb_gen_c_json_printer@@Base+0x3d4>
   1feb0:	ldr	r3, [r4, #208]	; 0xd0
   1feb4:	ldr	r0, [r4, #204]	; 0xcc
   1feb8:	ldr	r2, [r3, #160]	; 0xa0
   1febc:	bl	13fb0 <fprintf@plt>
   1fec0:	add	r2, sp, #12
   1fec4:	ldr	r1, [pc, #580]	; 20110 <__flatcc_fb_gen_c_json_printer@@Base+0x3d8>
   1fec8:	ldr	r0, [r4, #204]	; 0xcc
   1fecc:	bl	13fb0 <fprintf@plt>
   1fed0:	ldr	r2, [r4, #208]	; 0xd0
   1fed4:	ldrh	r3, [r2, #16]
   1fed8:	cmp	r3, #2
   1fedc:	bne	200c4 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   1fee0:	ldr	r1, [pc, #556]	; 20114 <__flatcc_fb_gen_c_json_printer@@Base+0x3dc>
   1fee4:	ldr	r3, [r2, #8]
   1fee8:	ldr	r2, [r2, #12]
   1feec:	ldr	r0, [r4, #204]	; 0xcc
   1fef0:	bl	13fb0 <fprintf@plt>
   1fef4:	ldr	r0, [pc, #540]	; 20118 <__flatcc_fb_gen_c_json_printer@@Base+0x3e0>
   1fef8:	ldr	r1, [r4, #204]	; 0xcc
   1fefc:	bl	1404c <fputs@plt>
   1ff00:	ldr	r3, [r4, #212]	; 0xd4
   1ff04:	ldr	r3, [r3, #140]	; 0x8c
   1ff08:	cmp	r3, #0
   1ff0c:	beq	1ff1c <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   1ff10:	ldr	r0, [pc, #516]	; 2011c <__flatcc_fb_gen_c_json_printer@@Base+0x3e4>
   1ff14:	ldr	r1, [r4, #204]	; 0xcc
   1ff18:	bl	1404c <fputs@plt>
   1ff1c:	ldr	r1, [pc, #508]	; 20120 <__flatcc_fb_gen_c_json_printer@@Base+0x3e8>
   1ff20:	ldr	r3, [r4, #208]	; 0xd0
   1ff24:	ldr	r0, [r4, #204]	; 0xcc
   1ff28:	ldr	r2, [r3, #164]	; 0xa4
   1ff2c:	bl	13fb0 <fprintf@plt>
   1ff30:	mov	r0, #0
   1ff34:	add	sp, sp, #232	; 0xe8
   1ff38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ff3c:	ldrh	r3, [r5, #8]
   1ff40:	cmp	r3, #1
   1ff44:	beq	1ffa0 <__flatcc_fb_gen_c_json_printer@@Base+0x268>
   1ff48:	cmp	r3, #0
   1ff4c:	beq	1ff80 <__flatcc_fb_gen_c_json_printer@@Base+0x248>
   1ff50:	cmp	r3, #4
   1ff54:	bne	1ff78 <__flatcc_fb_gen_c_json_printer@@Base+0x240>
   1ff58:	add	r1, sp, #12
   1ff5c:	mov	r0, r5
   1ff60:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1ff64:	add	r3, sp, #12
   1ff68:	mov	r1, r8
   1ff6c:	ldr	r0, [r4, #204]	; 0xcc
   1ff70:	mov	r2, r3
   1ff74:	bl	13fb0 <fprintf@plt>
   1ff78:	ldr	r5, [r5]
   1ff7c:	b	1fe0c <__flatcc_fb_gen_c_json_printer@@Base+0xd4>
   1ff80:	add	r1, sp, #12
   1ff84:	mov	r0, r5
   1ff88:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1ff8c:	add	r2, sp, #12
   1ff90:	mov	r1, r7
   1ff94:	ldr	r0, [r4, #204]	; 0xcc
   1ff98:	bl	13fb0 <fprintf@plt>
   1ff9c:	b	1ff78 <__flatcc_fb_gen_c_json_printer@@Base+0x240>
   1ffa0:	add	r1, sp, #12
   1ffa4:	mov	r0, r5
   1ffa8:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   1ffac:	add	r2, sp, #12
   1ffb0:	mov	r1, r6
   1ffb4:	b	1ff94 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   1ffb8:	ldrh	r3, [r5, #8]
   1ffbc:	cmp	r3, #3
   1ffc0:	bne	1ffd0 <__flatcc_fb_gen_c_json_printer@@Base+0x298>
   1ffc4:	mov	r1, r5
   1ffc8:	mov	r0, r4
   1ffcc:	bl	1eeac <__flatcc_fb_gen_c_json_parser@@Base+0x15c8>
   1ffd0:	ldr	r5, [r5]
   1ffd4:	b	1fe28 <__flatcc_fb_gen_c_json_printer@@Base+0xf0>
   1ffd8:	ldrh	r3, [r5, #8]
   1ffdc:	cmp	r3, #4
   1ffe0:	bne	20048 <__flatcc_fb_gen_c_json_printer@@Base+0x310>
   1ffe4:	mov	r2, #220	; 0xdc
   1ffe8:	mov	r1, #0
   1ffec:	add	r0, sp, #12
   1fff0:	add	sl, r4, #204	; 0xcc
   1fff4:	bl	13fc8 <memset@plt>
   1fff8:	add	r1, sp, #12
   1fffc:	mov	r0, r5
   20000:	bl	1ee2c <__flatcc_fb_gen_c_json_parser@@Base+0x1548>
   20004:	add	r2, sp, #12
   20008:	mov	r1, r7
   2000c:	ldr	r0, [r4, #204]	; 0xcc
   20010:	bl	13fb0 <fprintf@plt>
   20014:	ldr	r6, [r5, #20]
   20018:	cmp	r6, #0
   2001c:	ldr	r0, [r4, #204]	; 0xcc
   20020:	bne	20050 <__flatcc_fb_gen_c_json_printer@@Base+0x318>
   20024:	mov	r1, r0
   20028:	mov	r0, r9
   2002c:	bl	1404c <fputs@plt>
   20030:	ldr	r0, [pc, #236]	; 20124 <__flatcc_fb_gen_c_json_printer@@Base+0x3ec>
   20034:	ldr	r1, [r4, #204]	; 0xcc
   20038:	bl	1404c <fputs@plt>
   2003c:	mov	r1, r5
   20040:	mov	r0, sl
   20044:	bl	1f4b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd4>
   20048:	ldr	r5, [r5]
   2004c:	b	1fe44 <__flatcc_fb_gen_c_json_printer@@Base+0x10c>
   20050:	ldrh	r3, [r6, #24]
   20054:	cmp	r3, #0
   20058:	beq	2007c <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   2005c:	ldr	r2, [r6, #4]
   20060:	mov	r1, r8
   20064:	ldr	r3, [r2, #4]
   20068:	str	r3, [sp, #4]
   2006c:	ldr	r2, [r2]
   20070:	str	r2, [sp]
   20074:	ldr	r2, [r6, #48]	; 0x30
   20078:	bl	13fb0 <fprintf@plt>
   2007c:	ldr	r6, [r6]
   20080:	b	20018 <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   20084:	ldrh	r3, [r5, #8]
   20088:	cmp	r3, #1
   2008c:	bne	2009c <__flatcc_fb_gen_c_json_printer@@Base+0x364>
   20090:	mov	r1, r5
   20094:	mov	r0, r6
   20098:	bl	1f2fc <__flatcc_fb_gen_c_json_parser@@Base+0x1a18>
   2009c:	ldr	r5, [r5]
   200a0:	b	1fe58 <__flatcc_fb_gen_c_json_printer@@Base+0x120>
   200a4:	ldrh	r3, [r5, #8]
   200a8:	cmp	r3, #0
   200ac:	bne	200bc <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   200b0:	mov	r1, r5
   200b4:	mov	r0, r6
   200b8:	bl	1f654 <__flatcc_fb_gen_c_json_parser@@Base+0x1d70>
   200bc:	ldr	r5, [r5]
   200c0:	b	1fe6c <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   200c4:	ldr	r0, [pc, #92]	; 20128 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   200c8:	ldr	r1, [r4, #204]	; 0xcc
   200cc:	bl	1404c <fputs@plt>
   200d0:	b	1fef4 <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   200d4:	andeq	r5, r4, pc, ror r6
   200d8:	andeq	r0, r3, lr, asr #31
   200dc:			; <UNDEFINED> instruction: 0x000456b4
   200e0:	ldrdeq	r5, [r4], -sp
   200e4:	andeq	pc, r2, r8, ror sl	; <UNPREDICTABLE>
   200e8:	ldrdeq	r1, [r3], -sp
   200ec:	andeq	r5, r4, sp, ror #13
   200f0:	ldrdeq	r5, [r4], -r0
   200f4:	andeq	r5, r4, r8, asr sl
   200f8:	andeq	r5, r4, lr, ror #19
   200fc:	andeq	r5, r4, r8, lsr #18
   20100:	andeq	r5, r4, r6, lsr #21
   20104:	andeq	r5, r4, r8, lsl fp
   20108:	andeq	r5, r4, r9, ror #22
   2010c:			; <UNDEFINED> instruction: 0x00045bb8
   20110:	andeq	r5, r4, lr, lsl #24
   20114:	andeq	r5, r4, r4, asr #25
   20118:	andeq	r5, r4, fp, ror r6
   2011c:	andeq	r6, r3, r7, asr #29
   20120:	ldrdeq	r5, [r4], -r2
   20124:	andeq	r1, r4, r5, ror sp
   20128:	andeq	r5, r4, lr, asr #25
   2012c:	push	{r4, lr}
   20130:	mov	r4, r0
   20134:	ldr	r0, [r0, #16]
   20138:	cmp	r0, #0
   2013c:	beq	20144 <__flatcc_fb_gen_c_json_printer@@Base+0x40c>
   20140:	bl	13ef0 <free@plt>
   20144:	ldr	r0, [r4, #20]
   20148:	cmp	r0, #0
   2014c:	beq	20154 <__flatcc_fb_gen_c_json_printer@@Base+0x41c>
   20150:	bl	13ef0 <free@plt>
   20154:	ldr	r0, [r4, #24]
   20158:	cmp	r0, #0
   2015c:	beq	20164 <__flatcc_fb_gen_c_json_printer@@Base+0x42c>
   20160:	bl	13ef0 <free@plt>
   20164:	mov	r0, r4
   20168:	mov	r2, #44	; 0x2c
   2016c:	pop	{r4, lr}
   20170:	mov	r1, #0
   20174:	b	13fc8 <memset@plt>
   20178:	add	r3, r1, #4
   2017c:	mov	r2, r0
   20180:	ldr	r1, [pc, #4]	; 2018c <__flatcc_fb_gen_c_json_printer@@Base+0x454>
   20184:	mov	r0, r3
   20188:	b	22554 <fb_symbol_table_visit@@Base>
   2018c:	ldrdeq	r0, [r2], -ip
   20190:	add	r3, r1, #4
   20194:	mov	r2, r0
   20198:	ldr	r1, [pc, #4]	; 201a4 <__flatcc_fb_gen_c_json_printer@@Base+0x46c>
   2019c:	mov	r0, r3
   201a0:	b	22554 <fb_symbol_table_visit@@Base>
   201a4:	andeq	r1, r2, r4, lsl #3
   201a8:	push	{r4, r5, r6, lr}
   201ac:	mov	r2, #8
   201b0:	mov	r5, r0
   201b4:	mov	r4, r1
   201b8:	ldr	r3, [pc, #28]	; 201dc <__flatcc_fb_gen_c_json_printer@@Base+0x4a4>
   201bc:	bl	14034 <qsort@plt>
   201c0:	mov	r3, #0
   201c4:	cmp	r3, r4
   201c8:	popge	{r4, r5, r6, pc}
   201cc:	ldr	r2, [r5, r3, lsl #3]
   201d0:	str	r3, [r2, #124]	; 0x7c
   201d4:	add	r3, r3, #1
   201d8:	b	201c4 <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   201dc:	andeq	r0, r2, r0, ror #3
   201e0:	ldr	r0, [r0, #4]
   201e4:	ldr	r1, [r1, #4]
   201e8:	b	13ed8 <strcmp@plt>
   201ec:	push	{r4, lr}
   201f0:	subs	r4, r1, #0
   201f4:	bne	20200 <__flatcc_fb_gen_c_json_printer@@Base+0x4c8>
   201f8:	mvn	r0, #0
   201fc:	pop	{r4, pc}
   20200:	mov	r1, #0
   20204:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   20208:	cmp	r0, #0
   2020c:	beq	201f8 <__flatcc_fb_gen_c_json_printer@@Base+0x4c0>
   20210:	str	r4, [r0]
   20214:	mov	r0, #0
   20218:	pop	{r4, pc}
   2021c:	push	{r4, lr}
   20220:	subs	r4, r1, #0
   20224:	bne	20230 <__flatcc_fb_gen_c_json_printer@@Base+0x4f8>
   20228:	mvn	r0, #0
   2022c:	pop	{r4, pc}
   20230:	mov	r1, #1
   20234:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   20238:	cmp	r0, #0
   2023c:	beq	20228 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   20240:	str	r4, [r0]
   20244:	mov	r0, #0
   20248:	pop	{r4, pc}
   2024c:	cmp	r1, #0
   20250:	beq	20280 <__flatcc_fb_gen_c_json_printer@@Base+0x548>
   20254:	mov	r3, #1
   20258:	push	{r4, lr}
   2025c:	mov	r1, #2
   20260:	mov	r2, r3
   20264:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20268:	cmp	r0, #0
   2026c:	beq	20288 <__flatcc_fb_gen_c_json_printer@@Base+0x550>
   20270:	mov	r3, #1
   20274:	strb	r3, [r0]
   20278:	mov	r0, #0
   2027c:	pop	{r4, pc}
   20280:	mov	r0, r1
   20284:	bx	lr
   20288:	mvn	r0, #0
   2028c:	pop	{r4, pc}
   20290:	push	{r4, r5, r6, r7, r8, lr}
   20294:	mov	r6, r1
   20298:	mov	r1, #3
   2029c:	mov	r4, r0
   202a0:	mov	r5, r2
   202a4:	mov	r7, r3
   202a8:	bl	2adcc <flatcc_builder_start_table@@Base>
   202ac:	cmp	r0, #0
   202b0:	bne	20364 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   202b4:	cmn	r7, #1
   202b8:	beq	202dc <__flatcc_fb_gen_c_json_printer@@Base+0x5a4>
   202bc:	mov	r3, #4
   202c0:	mov	r1, #2
   202c4:	mov	r2, r3
   202c8:	mov	r0, r4
   202cc:	bl	2bd50 <flatcc_builder_table_add@@Base>
   202d0:	cmp	r0, #0
   202d4:	beq	20364 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   202d8:	str	r7, [r0]
   202dc:	cmp	r6, #0
   202e0:	beq	20304 <__flatcc_fb_gen_c_json_printer@@Base+0x5cc>
   202e4:	mov	r3, #1
   202e8:	mov	r1, #0
   202ec:	mov	r2, r3
   202f0:	mov	r0, r4
   202f4:	bl	2bd50 <flatcc_builder_table_add@@Base>
   202f8:	cmp	r0, #0
   202fc:	beq	20364 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   20300:	strb	r6, [r0]
   20304:	cmp	r5, #0
   20308:	beq	2032c <__flatcc_fb_gen_c_json_printer@@Base+0x5f4>
   2030c:	mov	r3, #1
   20310:	mov	r0, r4
   20314:	mov	r2, r3
   20318:	mov	r1, r3
   2031c:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20320:	cmp	r0, #0
   20324:	beq	20364 <__flatcc_fb_gen_c_json_printer@@Base+0x62c>
   20328:	strb	r5, [r0]
   2032c:	mov	r2, #0
   20330:	ldr	r1, [pc, #52]	; 2036c <__flatcc_fb_gen_c_json_printer@@Base+0x634>
   20334:	mov	r0, r4
   20338:	bl	2b378 <flatcc_builder_check_required@@Base>
   2033c:	cmp	r0, #0
   20340:	bne	20358 <__flatcc_fb_gen_c_json_printer@@Base+0x620>
   20344:	ldr	r3, [pc, #36]	; 20370 <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   20348:	mov	r2, #23
   2034c:	ldr	r1, [pc, #32]	; 20374 <__flatcc_fb_gen_c_json_printer@@Base+0x63c>
   20350:	ldr	r0, [pc, #32]	; 20378 <__flatcc_fb_gen_c_json_printer@@Base+0x640>
   20354:	bl	14070 <__assert_fail@plt>
   20358:	mov	r0, r4
   2035c:	pop	{r4, r5, r6, r7, r8, lr}
   20360:	b	2b3f4 <flatcc_builder_end_table@@Base>
   20364:	mov	r0, #0
   20368:	pop	{r4, r5, r6, r7, r8, pc}
   2036c:	strdeq	r5, [r4], -r8
   20370:	strdeq	r5, [r4], -sl
   20374:	andeq	r5, r4, r7, lsl #28
   20378:	andeq	r5, r4, r6, ror #28
   2037c:	push	{r4, lr}
   20380:	mov	r4, r0
   20384:	bl	2b6b0 <flatcc_builder_end_offset_vector@@Base>
   20388:	mov	r1, r0
   2038c:	mov	r0, r4
   20390:	pop	{r4, lr}
   20394:	b	2021c <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   20398:	cmp	r0, #0
   2039c:	push	{r4, r5, r6, lr}
   203a0:	mov	r5, r2
   203a4:	moveq	r4, r0
   203a8:	ldrne	r4, [r0, #-4]
   203ac:	cmp	r2, r4
   203b0:	movcs	r2, r4
   203b4:	bl	14058 <strncmp@plt>
   203b8:	cmp	r0, #0
   203bc:	popne	{r4, r5, r6, pc}
   203c0:	cmp	r5, r4
   203c4:	bhi	203d4 <__flatcc_fb_gen_c_json_printer@@Base+0x69c>
   203c8:	movcc	r0, #1
   203cc:	movcs	r0, #0
   203d0:	pop	{r4, r5, r6, pc}
   203d4:	mvn	r0, #0
   203d8:	pop	{r4, r5, r6, pc}
   203dc:	ldrh	r3, [r1, #8]
   203e0:	cmp	r3, #4
   203e4:	bxhi	lr
   203e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   203ec:	mov	r4, r0
   203f0:	mov	r5, r1
   203f4:	ldr	r0, [r0, #40]	; 0x28
   203f8:	ldr	r1, [r1, #16]
   203fc:	add	r0, r0, #172	; 0xac
   20400:	bl	2200c <ptr_set_find_item@@Base>
   20404:	cmp	r0, #0
   20408:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2040c:	ldr	r3, [r4]
   20410:	ldr	r6, [r4, #36]	; 0x24
   20414:	cmp	r3, #0
   20418:	moveq	r3, r6
   2041c:	beq	20438 <__flatcc_fb_gen_c_json_printer@@Base+0x700>
   20420:	ldr	r3, [r5, #12]
   20424:	mov	r9, #46	; 0x2e
   20428:	ldr	r7, [r3]
   2042c:	mov	r3, r6
   20430:	cmp	r7, #0
   20434:	bne	20484 <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   20438:	ldr	r1, [r5, #4]
   2043c:	mov	r0, r3
   20440:	ldm	r1, {r1, r7}
   20444:	mov	r2, r7
   20448:	bl	13efc <memcpy@plt>
   2044c:	add	r2, r0, r7
   20450:	mov	r1, #0
   20454:	add	r3, r2, #1
   20458:	strb	r1, [r0, r7]
   2045c:	str	r3, [r4, #36]	; 0x24
   20460:	ldrh	r3, [r5, #8]
   20464:	cmp	r3, #4
   20468:	ldrls	pc, [pc, r3, lsl #2]
   2046c:	b	204cc <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   20470:	andeq	r0, r2, r8, lsr #9
   20474:	andeq	r0, r2, r8, lsr #9
   20478:	andeq	r0, r2, ip, asr #9
   2047c:			; <UNDEFINED> instruction: 0x000204bc
   20480:			; <UNDEFINED> instruction: 0x000204bc
   20484:	ldr	r1, [r7, #4]
   20488:	mov	r0, r3
   2048c:	ldm	r1, {r1, r8}
   20490:	mov	r2, r8
   20494:	bl	13efc <memcpy@plt>
   20498:	add	r3, r0, r8
   2049c:	strb	r9, [r3], #1
   204a0:	ldr	r7, [r7]
   204a4:	b	20430 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
   204a8:	ldr	r3, [r4, #28]
   204ac:	stm	r3, {r5, r6}
   204b0:	add	r3, r3, #8
   204b4:	str	r3, [r4, #28]
   204b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   204bc:	ldr	r3, [r4, #32]
   204c0:	stm	r3, {r5, r6}
   204c4:	add	r3, r3, #8
   204c8:	str	r3, [r4, #32]
   204cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   204d0:	push	{r4, lr}
   204d4:	subs	r4, r1, #0
   204d8:	beq	204f8 <__flatcc_fb_gen_c_json_printer@@Base+0x7c0>
   204dc:	mov	r3, #2
   204e0:	mov	r2, r3
   204e4:	mov	r1, r3
   204e8:	bl	2bd50 <flatcc_builder_table_add@@Base>
   204ec:	cmp	r0, #0
   204f0:	beq	20500 <__flatcc_fb_gen_c_json_printer@@Base+0x7c8>
   204f4:	strh	r4, [r0]
   204f8:	mov	r0, #0
   204fc:	pop	{r4, pc}
   20500:	mvn	r0, #0
   20504:	pop	{r4, pc}
   20508:	push	{r4, lr}
   2050c:	subs	r4, r1, #0
   20510:	beq	20530 <__flatcc_fb_gen_c_json_printer@@Base+0x7f8>
   20514:	mov	r3, #2
   20518:	mov	r1, #3
   2051c:	mov	r2, r3
   20520:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20524:	cmp	r0, #0
   20528:	beq	20538 <__flatcc_fb_gen_c_json_printer@@Base+0x800>
   2052c:	strh	r4, [r0]
   20530:	mov	r0, #0
   20534:	pop	{r4, pc}
   20538:	mvn	r0, #0
   2053c:	pop	{r4, pc}
   20540:	cmp	r0, #0
   20544:	add	r2, r0, r1, lsl #2
   20548:	beq	20558 <__flatcc_fb_gen_c_json_printer@@Base+0x820>
   2054c:	ldr	r3, [r0, #-4]
   20550:	cmp	r1, r3
   20554:	bcc	20570 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   20558:	push	{r4, lr}
   2055c:	mov	r2, #192	; 0xc0
   20560:	ldr	r3, [pc, #20]	; 2057c <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   20564:	ldr	r1, [pc, #20]	; 20580 <__flatcc_fb_gen_c_json_printer@@Base+0x848>
   20568:	ldr	r0, [pc, #20]	; 20584 <__flatcc_fb_gen_c_json_printer@@Base+0x84c>
   2056c:	bl	14070 <__assert_fail@plt>
   20570:	ldr	r0, [r0, r1, lsl #2]
   20574:	add	r0, r2, r0
   20578:	bx	lr
   2057c:	andeq	r5, r4, lr, lsl #26
   20580:	strdeq	r5, [r4], -r3
   20584:	andeq	r5, r4, r1, asr pc
   20588:	cmp	r0, #0
   2058c:	push	{r4, lr}
   20590:	bne	205a8 <__flatcc_fb_gen_c_json_printer@@Base+0x870>
   20594:	ldr	r3, [pc, #84]	; 205f0 <__flatcc_fb_gen_c_json_printer@@Base+0x8b8>
   20598:	mov	r2, #195	; 0xc3
   2059c:	ldr	r1, [pc, #80]	; 205f4 <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   205a0:	ldr	r0, [pc, #80]	; 205f8 <__flatcc_fb_gen_c_json_printer@@Base+0x8c0>
   205a4:	bl	14070 <__assert_fail@plt>
   205a8:	ldr	r3, [r0]
   205ac:	sub	r3, r0, r3
   205b0:	ldrh	r2, [r3]
   205b4:	cmp	r2, #5
   205b8:	bls	205c8 <__flatcc_fb_gen_c_json_printer@@Base+0x890>
   205bc:	ldrh	r2, [r3, #4]
   205c0:	cmp	r2, #0
   205c4:	bne	205dc <__flatcc_fb_gen_c_json_printer@@Base+0x8a4>
   205c8:	ldr	r3, [pc, #32]	; 205f0 <__flatcc_fb_gen_c_json_printer@@Base+0x8b8>
   205cc:	mov	r2, #195	; 0xc3
   205d0:	ldr	r1, [pc, #28]	; 205f4 <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   205d4:	ldr	r0, [pc, #32]	; 205fc <__flatcc_fb_gen_c_json_printer@@Base+0x8c4>
   205d8:	b	205a4 <__flatcc_fb_gen_c_json_printer@@Base+0x86c>
   205dc:	add	r3, r0, r2
   205e0:	ldr	r0, [r0, r2]
   205e4:	add	r0, r0, #4
   205e8:	add	r0, r3, r0
   205ec:	pop	{r4, pc}
   205f0:	andeq	r5, r4, r6, lsr #26
   205f4:	strdeq	r5, [r4], -r3
   205f8:	andeq	r5, r4, r8, lsl #31
   205fc:	andeq	r5, r4, lr, lsr #31
   20600:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20604:	mov	r5, r0
   20608:	mov	r6, r1
   2060c:	mov	r7, r2
   20610:	lsl	r4, r6, #1
   20614:	cmp	r4, r7
   20618:	pophi	{r4, r5, r6, r7, r8, r9, sl, pc}
   2061c:	bcs	20664 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   20620:	mov	r1, r4
   20624:	mov	r0, r5
   20628:	bl	20540 <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   2062c:	bl	20588 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   20630:	add	r8, r4, #1
   20634:	mov	r9, r0
   20638:	mov	r1, r8
   2063c:	mov	r0, r5
   20640:	bl	20540 <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   20644:	bl	20588 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   20648:	subs	r1, r0, #0
   2064c:	mov	r0, r9
   20650:	ldrne	r2, [r1, #-4]
   20654:	moveq	r2, r1
   20658:	bl	20398 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
   2065c:	cmp	r0, #0
   20660:	movlt	r4, r8
   20664:	mov	r1, r6
   20668:	mov	r0, r5
   2066c:	bl	20540 <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   20670:	bl	20588 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   20674:	mov	r8, r0
   20678:	mov	r1, r4
   2067c:	mov	r0, r5
   20680:	bl	20540 <__flatcc_fb_gen_c_json_printer@@Base+0x808>
   20684:	bl	20588 <__flatcc_fb_gen_c_json_printer@@Base+0x850>
   20688:	subs	r1, r0, #0
   2068c:	mov	r0, r8
   20690:	ldrne	r2, [r1, #-4]
   20694:	moveq	r2, r1
   20698:	bl	20398 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
   2069c:	cmp	r0, #0
   206a0:	popge	{r4, r5, r6, r7, r8, r9, sl, pc}
   206a4:	sub	r3, r6, r4
   206a8:	ldr	r2, [r5, r6, lsl #2]
   206ac:	lsl	r3, r3, #2
   206b0:	ldr	r1, [r5, r4, lsl #2]
   206b4:	add	r2, r3, r2
   206b8:	sub	r3, r1, r3
   206bc:	str	r3, [r5, r6, lsl #2]
   206c0:	mov	r6, r4
   206c4:	str	r2, [r5, r4, lsl #2]
   206c8:	b	20610 <__flatcc_fb_gen_c_json_printer@@Base+0x8d8>
   206cc:	sub	r2, r2, #2
   206d0:	push	{lr}		; (str lr, [sp, #-4]!)
   206d4:	cmp	r2, #13
   206d8:	ldrls	pc, [pc, r2, lsl #2]
   206dc:	b	20824 <__flatcc_fb_gen_c_json_printer@@Base+0xaec>
   206e0:	andeq	r0, r2, ip, ror #14
   206e4:	andeq	r0, r2, r4, lsr #16
   206e8:	andeq	r0, r2, r4, lsr #16
   206ec:	andeq	r0, r2, r4, lsr #16
   206f0:	andeq	r0, r2, r4, lsr #16
   206f4:	andeq	r0, r2, ip, lsl #16
   206f8:	andeq	r0, r2, r8, lsl r7
   206fc:	andeq	r0, r2, r8, lsr #14
   20700:	andeq	r0, r2, r4, lsr #16
   20704:	andeq	r0, r2, r4, lsr #16
   20708:	andeq	r0, r2, r4, lsr #16
   2070c:	andeq	r0, r2, r4, lsr #16
   20710:	andeq	r0, r2, ip, ror r7
   20714:	andeq	r0, r2, ip, lsr r7
   20718:	mov	r2, #0
   2071c:	mov	lr, r2
   20720:	mvn	r3, #0
   20724:	b	207cc <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   20728:	mov	r2, #13
   2072c:	mov	lr, #14
   20730:	mvn	r3, #0
   20734:	mov	r1, #0
   20738:	b	207cc <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   2073c:	ldrh	r2, [r1, #8]
   20740:	ldr	r3, [r1, #124]	; 0x7c
   20744:	cmp	r2, #1
   20748:	bls	20818 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
   2074c:	cmp	r2, #3
   20750:	moveq	r2, #0
   20754:	moveq	lr, #14
   20758:	ldreq	r1, [r1, #40]	; 0x28
   2075c:	beq	207cc <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   20760:	mov	r2, #0
   20764:	mov	lr, r2
   20768:	b	207ac <__flatcc_fb_gen_c_json_printer@@Base+0xa74>
   2076c:	mov	r2, #0
   20770:	mov	lr, #13
   20774:	mvn	r3, #0
   20778:	b	207ac <__flatcc_fb_gen_c_json_printer@@Base+0xa74>
   2077c:	ldrh	r2, [r1, #8]
   20780:	ldr	r3, [r1, #124]	; 0x7c
   20784:	cmp	r2, #4
   20788:	ldrls	pc, [pc, r2, lsl #2]
   2078c:	b	20824 <__flatcc_fb_gen_c_json_printer@@Base+0xaec>
   20790:			; <UNDEFINED> instruction: 0x000207b4
   20794:			; <UNDEFINED> instruction: 0x000207b4
   20798:	andeq	r0, r2, r4, lsr #16
   2079c:	andeq	r0, r2, r0, asr #15
   207a0:	andeq	r0, r2, r4, lsr #15
   207a4:	mov	r2, #0
   207a8:	mov	lr, #16
   207ac:	mov	r1, r2
   207b0:	b	207cc <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   207b4:	mov	r2, #0
   207b8:	mov	lr, #15
   207bc:	b	207ac <__flatcc_fb_gen_c_json_printer@@Base+0xa74>
   207c0:	ldr	r1, [r1, #40]	; 0x28
   207c4:	mov	r2, #0
   207c8:	mov	lr, r2
   207cc:	sub	ip, r1, #1
   207d0:	cmp	ip, #10
   207d4:	ldrls	r1, [pc, #84]	; 20830 <__flatcc_fb_gen_c_json_printer@@Base+0xaf8>
   207d8:	movhi	r1, #0
   207dc:	addls	r1, r1, ip
   207e0:	ldrsbls	r1, [r1, #68]	; 0x44
   207e4:	cmp	lr, #0
   207e8:	moveq	lr, r1
   207ec:	beq	20800 <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
   207f0:	cmp	lr, #14
   207f4:	bne	20800 <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
   207f8:	cmp	r2, #0
   207fc:	moveq	r2, r1
   20800:	mov	r1, lr
   20804:	pop	{lr}		; (ldr lr, [sp], #4)
   20808:	b	20290 <__flatcc_fb_gen_c_json_printer@@Base+0x558>
   2080c:	mov	r2, #0
   20810:	mov	lr, #14
   20814:	b	20720 <__flatcc_fb_gen_c_json_printer@@Base+0x9e8>
   20818:	mov	r2, #15
   2081c:	mov	lr, #14
   20820:	b	20734 <__flatcc_fb_gen_c_json_printer@@Base+0x9fc>
   20824:	mov	r2, #0
   20828:	mov	lr, r2
   2082c:	b	20774 <__flatcc_fb_gen_c_json_printer@@Base+0xa3c>
   20830:	strdeq	r5, [r4], -r8
   20834:	push	{r4, lr}
   20838:	mov	r2, #2
   2083c:	mov	r4, r0
   20840:	ldr	r1, [pc, #56]	; 20880 <__flatcc_fb_gen_c_json_printer@@Base+0xb48>
   20844:	bl	2b378 <flatcc_builder_check_required@@Base>
   20848:	cmp	r0, #0
   2084c:	bne	20864 <__flatcc_fb_gen_c_json_printer@@Base+0xb2c>
   20850:	ldr	r3, [pc, #44]	; 20884 <__flatcc_fb_gen_c_json_printer@@Base+0xb4c>
   20854:	mov	r2, #29
   20858:	ldr	r1, [pc, #40]	; 20888 <__flatcc_fb_gen_c_json_printer@@Base+0xb50>
   2085c:	ldr	r0, [pc, #40]	; 2088c <__flatcc_fb_gen_c_json_printer@@Base+0xb54>
   20860:	bl	14070 <__assert_fail@plt>
   20864:	mov	r0, r4
   20868:	bl	2b3f4 <flatcc_builder_end_table@@Base>
   2086c:	subs	r1, r0, #0
   20870:	popeq	{r4, pc}
   20874:	mov	r0, r4
   20878:	pop	{r4, lr}
   2087c:	b	2a954 <flatcc_builder_offset_vector_push@@Base>
   20880:	andeq	r5, r4, r8, asr #26
   20884:	andeq	r5, r4, lr, asr #26
   20888:	andeq	r5, r4, r7, lsl #28
   2088c:	andeq	r5, r4, pc, asr #31
   20890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20894:	mov	r4, r0
   20898:	mov	r7, r1
   2089c:	vpush	{d8}
   208a0:	sub	sp, sp, #84	; 0x54
   208a4:	add	r0, sp, #40	; 0x28
   208a8:	ldr	r8, [r2, #60]	; 0x3c
   208ac:	str	r2, [sp]
   208b0:	mov	r2, #36	; 0x24
   208b4:	ldr	r5, [r1, #184]	; 0xb8
   208b8:	mov	r1, #0
   208bc:	bl	13fc8 <memset@plt>
   208c0:	ldr	r3, [sp]
   208c4:	add	r2, sp, #36	; 0x24
   208c8:	mov	r0, r8
   208cc:	ldr	r1, [pc, #2156]	; 21140 <__flatcc_fb_gen_c_json_printer@@Base+0x1408>
   208d0:	str	r5, [sp, #36]	; 0x24
   208d4:	str	r3, [sp, #76]	; 0x4c
   208d8:	bl	22c34 <fb_scope_table_visit@@Base>
   208dc:	ldr	r9, [sp, #40]	; 0x28
   208e0:	mov	r1, #8
   208e4:	mov	r0, r9
   208e8:	bl	13ec0 <calloc@plt>
   208ec:	ldr	r6, [sp, #44]	; 0x2c
   208f0:	mov	fp, r0
   208f4:	mov	r1, #8
   208f8:	str	r0, [sp, #52]	; 0x34
   208fc:	mov	r0, r6
   20900:	bl	13ec0 <calloc@plt>
   20904:	ldr	r5, [sp, #48]	; 0x30
   20908:	mov	sl, r0
   2090c:	str	r0, [sp, #56]	; 0x38
   20910:	mov	r0, r5
   20914:	bl	13f68 <malloc@plt>
   20918:	cmp	r9, #0
   2091c:	str	r0, [sp, #60]	; 0x3c
   20920:	movle	r9, #0
   20924:	movgt	r9, #1
   20928:	str	fp, [sp, #64]	; 0x40
   2092c:	cmp	fp, #0
   20930:	str	sl, [sp, #68]	; 0x44
   20934:	movne	r9, #0
   20938:	str	r0, [sp, #72]	; 0x48
   2093c:	cmp	r9, #0
   20940:	bne	2097c <__flatcc_fb_gen_c_json_printer@@Base+0xc44>
   20944:	cmp	r6, #0
   20948:	movle	r6, #0
   2094c:	movgt	r6, #1
   20950:	cmp	sl, #0
   20954:	movne	r6, #0
   20958:	cmp	r6, #0
   2095c:	bne	2097c <__flatcc_fb_gen_c_json_printer@@Base+0xc44>
   20960:	adds	r5, r5, #0
   20964:	movne	r5, #1
   20968:	cmp	r0, #0
   2096c:	moveq	fp, r5
   20970:	movne	fp, #0
   20974:	cmp	fp, #0
   20978:	beq	20994 <__flatcc_fb_gen_c_json_printer@@Base+0xc5c>
   2097c:	add	r0, sp, #36	; 0x24
   20980:	bl	2012c <__flatcc_fb_gen_c_json_printer@@Base+0x3f4>
   20984:	mvn	r0, #0
   20988:	add	sp, sp, #84	; 0x54
   2098c:	vpop	{d8}
   20990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20994:	add	r2, sp, #36	; 0x24
   20998:	ldr	r1, [pc, #1956]	; 21144 <__flatcc_fb_gen_c_json_printer@@Base+0x140c>
   2099c:	mov	r0, r8
   209a0:	bl	22c34 <fb_scope_table_visit@@Base>
   209a4:	ldr	r1, [sp, #40]	; 0x28
   209a8:	ldr	r0, [sp, #52]	; 0x34
   209ac:	bl	201a8 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
   209b0:	ldr	r1, [sp, #44]	; 0x2c
   209b4:	ldr	r0, [sp, #56]	; 0x38
   209b8:	bl	201a8 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
   209bc:	ldr	r0, [sp, #40]	; 0x28
   209c0:	cmp	r0, #0
   209c4:	ble	209d8 <__flatcc_fb_gen_c_json_printer@@Base+0xca0>
   209c8:	lsl	r0, r0, #2
   209cc:	bl	13f68 <malloc@plt>
   209d0:	subs	fp, r0, #0
   209d4:	beq	2097c <__flatcc_fb_gen_c_json_printer@@Base+0xc44>
   209d8:	ldr	r3, [r7, #188]	; 0xbc
   209dc:	mov	r2, #0
   209e0:	mov	r0, r4
   209e4:	ldr	r1, [pc, #1884]	; 21148 <__flatcc_fb_gen_c_json_printer@@Base+0x1410>
   209e8:	cmp	r3, #0
   209ec:	movne	r3, #2
   209f0:	bl	2a5f0 <flatcc_builder_start_buffer@@Base>
   209f4:	cmp	r0, #0
   209f8:	bne	20a08 <__flatcc_fb_gen_c_json_printer@@Base+0xcd0>
   209fc:	mov	r1, #5
   20a00:	mov	r0, r4
   20a04:	bl	2adcc <flatcc_builder_start_table@@Base>
   20a08:	ldr	r3, [sp]
   20a0c:	ldrh	r5, [r3, #16]
   20a10:	cmp	r5, #2
   20a14:	bne	20a44 <__flatcc_fb_gen_c_json_printer@@Base+0xd0c>
   20a18:	mov	r0, r4
   20a1c:	ldr	r1, [r3, #8]
   20a20:	ldr	r2, [r3, #12]
   20a24:	bl	2bbc4 <flatcc_builder_create_string@@Base>
   20a28:	subs	r6, r0, #0
   20a2c:	beq	20a44 <__flatcc_fb_gen_c_json_printer@@Base+0xd0c>
   20a30:	mov	r1, r5
   20a34:	mov	r0, r4
   20a38:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   20a3c:	cmp	r0, #0
   20a40:	strne	r6, [r0]
   20a44:	ldr	r3, [sp]
   20a48:	ldrh	r3, [r3, #32]
   20a4c:	cmp	r3, #2
   20a50:	bne	20a84 <__flatcc_fb_gen_c_json_printer@@Base+0xd4c>
   20a54:	ldr	r3, [sp]
   20a58:	mov	r0, r4
   20a5c:	ldr	r1, [r3, #24]
   20a60:	ldr	r2, [r3, #28]
   20a64:	bl	2bbc4 <flatcc_builder_create_string@@Base>
   20a68:	subs	r5, r0, #0
   20a6c:	beq	20a84 <__flatcc_fb_gen_c_json_printer@@Base+0xd4c>
   20a70:	mov	r1, #3
   20a74:	mov	r0, r4
   20a78:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   20a7c:	cmp	r0, #0
   20a80:	strne	r5, [r0]
   20a84:	ldr	r3, [sp, #52]	; 0x34
   20a88:	mov	r8, #0
   20a8c:	str	r3, [sp, #12]
   20a90:	ldr	r3, [sp, #40]	; 0x28
   20a94:	str	r3, [sp, #16]
   20a98:	ldr	r3, [sp, #16]
   20a9c:	cmp	r3, r8
   20aa0:	bgt	20b60 <__flatcc_fb_gen_c_json_printer@@Base+0xe28>
   20aa4:	mov	r2, r3
   20aa8:	mov	r1, fp
   20aac:	ldr	sl, [pc, #1688]	; 2114c <__flatcc_fb_gen_c_json_printer@@Base+0x1414>
   20ab0:	mov	r0, r4
   20ab4:	mov	r6, #0
   20ab8:	bl	2b70c <flatcc_builder_create_offset_vector@@Base>
   20abc:	mov	r1, r0
   20ac0:	mov	r0, r4
   20ac4:	bl	201ec <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   20ac8:	ldr	r3, [sp, #56]	; 0x38
   20acc:	mov	r0, r4
   20ad0:	str	r3, [sp, #4]
   20ad4:	ldr	r3, [sp, #44]	; 0x2c
   20ad8:	str	r3, [sp, #12]
   20adc:	bl	2ad0c <flatcc_builder_start_offset_vector@@Base>
   20ae0:	ldr	r3, [sp, #12]
   20ae4:	cmp	r3, r6
   20ae8:	bgt	20f38 <__flatcc_fb_gen_c_json_printer@@Base+0x1200>
   20aec:	mov	r0, r4
   20af0:	bl	2037c <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   20af4:	ldr	r3, [sp]
   20af8:	ldr	r3, [r3, #52]	; 0x34
   20afc:	cmp	r3, #0
   20b00:	beq	20b34 <__flatcc_fb_gen_c_json_printer@@Base+0xdfc>
   20b04:	ldrh	r2, [r3, #8]
   20b08:	cmp	r2, #0
   20b0c:	bne	20b34 <__flatcc_fb_gen_c_json_printer@@Base+0xdfc>
   20b10:	ldr	r3, [r3, #124]	; 0x7c
   20b14:	ldr	r5, [fp, r3, lsl #2]
   20b18:	cmp	r5, #0
   20b1c:	beq	20b34 <__flatcc_fb_gen_c_json_printer@@Base+0xdfc>
   20b20:	mov	r1, #4
   20b24:	mov	r0, r4
   20b28:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   20b2c:	cmp	r0, #0
   20b30:	strne	r5, [r0]
   20b34:	mov	r2, #2
   20b38:	ldr	r1, [pc, #1552]	; 21150 <__flatcc_fb_gen_c_json_printer@@Base+0x1418>
   20b3c:	mov	r0, r4
   20b40:	bl	2b378 <flatcc_builder_check_required@@Base>
   20b44:	cmp	r0, #0
   20b48:	bne	21110 <__flatcc_fb_gen_c_json_printer@@Base+0x13d8>
   20b4c:	ldr	r3, [pc, #1536]	; 21154 <__flatcc_fb_gen_c_json_printer@@Base+0x141c>
   20b50:	mov	r2, #33	; 0x21
   20b54:	ldr	r1, [pc, #1532]	; 21158 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   20b58:	ldr	r0, [pc, #1532]	; 2115c <__flatcc_fb_gen_c_json_printer@@Base+0x1424>
   20b5c:	b	20c50 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   20b60:	ldr	r3, [sp, #12]
   20b64:	mov	r1, #5
   20b68:	mov	r0, r4
   20b6c:	ldr	r9, [r3, r8, lsl #3]
   20b70:	bl	2adcc <flatcc_builder_start_table@@Base>
   20b74:	ldr	r3, [sp, #12]
   20b78:	mov	r0, r4
   20b7c:	add	r3, r3, #4
   20b80:	ldr	r1, [r3, r8, lsl #3]
   20b84:	bl	2bc5c <flatcc_builder_create_string_str@@Base>
   20b88:	mov	r1, r0
   20b8c:	mov	r0, r4
   20b90:	bl	201ec <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   20b94:	mov	r0, r4
   20b98:	bl	2ad0c <flatcc_builder_start_offset_vector@@Base>
   20b9c:	ldr	r5, [r9, #20]
   20ba0:	mov	r3, #0
   20ba4:	str	r3, [sp, #4]
   20ba8:	cmp	r5, #0
   20bac:	bne	20c54 <__flatcc_fb_gen_c_json_printer@@Base+0xf1c>
   20bb0:	mov	r0, r4
   20bb4:	bl	2037c <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   20bb8:	ldrh	r3, [r9, #8]
   20bbc:	cmp	r3, #1
   20bc0:	moveq	r6, #1
   20bc4:	movne	r6, #0
   20bc8:	bne	20bf4 <__flatcc_fb_gen_c_json_printer@@Base+0xebc>
   20bcc:	ldr	r5, [r9, #112]	; 0x70
   20bd0:	cmp	r5, #0
   20bd4:	beq	20bf4 <__flatcc_fb_gen_c_json_printer@@Base+0xebc>
   20bd8:	mov	r3, #4
   20bdc:	mov	r0, r4
   20be0:	mov	r2, r3
   20be4:	mov	r1, r3
   20be8:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20bec:	cmp	r0, #0
   20bf0:	strne	r5, [r0]
   20bf4:	mov	r1, r6
   20bf8:	mov	r0, r4
   20bfc:	bl	2024c <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   20c00:	ldrh	r5, [r9, #104]	; 0x68
   20c04:	cmp	r5, #0
   20c08:	beq	20c28 <__flatcc_fb_gen_c_json_printer@@Base+0xef0>
   20c0c:	mov	r3, #4
   20c10:	mov	r1, #3
   20c14:	mov	r2, r3
   20c18:	mov	r0, r4
   20c1c:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20c20:	cmp	r0, #0
   20c24:	strne	r5, [r0]
   20c28:	mov	r2, #2
   20c2c:	ldr	r1, [pc, #1324]	; 21160 <__flatcc_fb_gen_c_json_printer@@Base+0x1428>
   20c30:	mov	r0, r4
   20c34:	bl	2b378 <flatcc_builder_check_required@@Base>
   20c38:	cmp	r0, #0
   20c3c:	bne	20f24 <__flatcc_fb_gen_c_json_printer@@Base+0x11ec>
   20c40:	ldr	r3, [pc, #1308]	; 21164 <__flatcc_fb_gen_c_json_printer@@Base+0x142c>
   20c44:	mov	r2, #31
   20c48:	ldr	r1, [pc, #1288]	; 21158 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   20c4c:	ldr	r0, [pc, #1300]	; 21168 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
   20c50:	bl	14070 <__assert_fail@plt>
   20c54:	ldr	r3, [sp, #4]
   20c58:	ldrh	sl, [r5, #72]	; 0x48
   20c5c:	cmp	r3, #0
   20c60:	movne	r3, #0
   20c64:	ubfxeq	r3, sl, #7, #1
   20c68:	str	r3, [sp, #8]
   20c6c:	ldrb	r3, [sp, #8]
   20c70:	str	r3, [sp, #20]
   20c74:	and	r3, sl, #4
   20c78:	str	r3, [sp, #24]
   20c7c:	ubfx	r3, sl, #2, #1
   20c80:	str	r3, [sp, #28]
   20c84:	ldrh	r3, [r5, #24]
   20c88:	cmp	r3, #14
   20c8c:	bne	20d68 <__flatcc_fb_gen_c_json_printer@@Base+0x1030>
   20c90:	ldr	r3, [r5, #16]
   20c94:	ldrh	r3, [r3, #8]
   20c98:	cmp	r3, #4
   20c9c:	bne	20d68 <__flatcc_fb_gen_c_json_printer@@Base+0x1030>
   20ca0:	mov	r1, #9
   20ca4:	mov	r0, r4
   20ca8:	bl	2adcc <flatcc_builder_start_table@@Base>
   20cac:	mov	r0, r4
   20cb0:	bl	2ad54 <flatcc_builder_start_string@@Base>
   20cb4:	ldr	r3, [r5, #4]
   20cb8:	mov	r0, r4
   20cbc:	ldm	r3, {r1, r2}
   20cc0:	bl	2aa90 <flatcc_builder_append_string@@Base>
   20cc4:	mov	r2, #5
   20cc8:	ldr	r1, [pc, #1180]	; 2116c <__flatcc_fb_gen_c_json_printer@@Base+0x1434>
   20ccc:	mov	r0, r4
   20cd0:	bl	2aa90 <flatcc_builder_append_string@@Base>
   20cd4:	mov	r0, r4
   20cd8:	bl	2bcbc <flatcc_builder_end_string@@Base>
   20cdc:	mov	r1, r0
   20ce0:	mov	r0, r4
   20ce4:	bl	201ec <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   20ce8:	mvn	r3, #0
   20cec:	mov	r2, #0
   20cf0:	mov	r1, #1
   20cf4:	mov	r0, r4
   20cf8:	bl	20290 <__flatcc_fb_gen_c_json_printer@@Base+0x558>
   20cfc:	mov	r1, r0
   20d00:	mov	r0, r4
   20d04:	bl	2021c <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   20d08:	ldrh	r1, [r5, #96]	; 0x60
   20d0c:	mov	r0, r4
   20d10:	add	r1, r1, #1
   20d14:	lsl	r1, r1, #1
   20d18:	uxth	r1, r1
   20d1c:	bl	20508 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   20d20:	ldrh	r1, [r5, #96]	; 0x60
   20d24:	mov	r0, r4
   20d28:	sub	r1, r1, #1
   20d2c:	uxth	r1, r1
   20d30:	bl	204d0 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   20d34:	and	r3, sl, #4
   20d38:	cmp	r3, #0
   20d3c:	beq	20d60 <__flatcc_fb_gen_c_json_printer@@Base+0x1028>
   20d40:	mov	r3, #1
   20d44:	mov	r1, #6
   20d48:	mov	r2, r3
   20d4c:	mov	r0, r4
   20d50:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20d54:	cmp	r0, #0
   20d58:	ubfxne	r3, sl, #2, #1
   20d5c:	strbne	r3, [r0]
   20d60:	mov	r0, r4
   20d64:	bl	20834 <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   20d68:	mov	r1, #9
   20d6c:	mov	r0, r4
   20d70:	bl	2adcc <flatcc_builder_start_table@@Base>
   20d74:	ldr	r3, [r5, #4]
   20d78:	mov	r0, r4
   20d7c:	ldm	r3, {r1, r2}
   20d80:	bl	2bbc4 <flatcc_builder_create_string@@Base>
   20d84:	mov	r1, r0
   20d88:	mov	r0, r4
   20d8c:	bl	201ec <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   20d90:	ldrh	r2, [r5, #24]
   20d94:	mov	r0, r4
   20d98:	ldr	r1, [r5, #16]
   20d9c:	bl	206cc <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   20da0:	mov	r1, r0
   20da4:	mov	r0, r4
   20da8:	bl	2021c <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   20dac:	ldrh	r3, [r9, #8]
   20db0:	cmp	r3, #0
   20db4:	beq	20e0c <__flatcc_fb_gen_c_json_printer@@Base+0x10d4>
   20db8:	cmp	r3, #1
   20dbc:	beq	20f14 <__flatcc_fb_gen_c_json_printer@@Base+0x11dc>
   20dc0:	ldr	r3, [sp, #24]
   20dc4:	cmp	r3, #0
   20dc8:	beq	20dec <__flatcc_fb_gen_c_json_printer@@Base+0x10b4>
   20dcc:	mov	r3, #1
   20dd0:	mov	r1, #6
   20dd4:	mov	r2, r3
   20dd8:	mov	r0, r4
   20ddc:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20de0:	cmp	r0, #0
   20de4:	ldrne	r3, [sp, #28]
   20de8:	strbne	r3, [r0]
   20dec:	mov	r0, r4
   20df0:	bl	20834 <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   20df4:	ldr	r3, [sp, #4]
   20df8:	ldr	r2, [sp, #20]
   20dfc:	ldr	r5, [r5]
   20e00:	orr	r3, r3, r2
   20e04:	str	r3, [sp, #4]
   20e08:	b	20ba8 <__flatcc_fb_gen_c_json_printer@@Base+0xe70>
   20e0c:	ldrh	r3, [r5, #56]	; 0x38
   20e10:	sub	r3, r3, #3
   20e14:	cmp	r3, #3
   20e18:	ldrls	pc, [pc, r3, lsl #2]
   20e1c:	b	20e78 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   20e20:	andeq	r0, r2, r8, ror #28
   20e24:	andeq	r0, r2, r0, lsr lr
   20e28:	andeq	r0, r2, r0, lsr lr
   20e2c:	andeq	r0, r2, ip, asr lr
   20e30:	ldrd	r6, [r5, #48]	; 0x30
   20e34:	orrs	r3, r6, r7
   20e38:	beq	20e78 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   20e3c:	mov	r3, #8
   20e40:	mov	r1, #4
   20e44:	mov	r2, r3
   20e48:	mov	r0, r4
   20e4c:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20e50:	cmp	r0, #0
   20e54:	strdne	r6, [r0]
   20e58:	b	20e78 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   20e5c:	ldrb	r6, [r5, #48]	; 0x30
   20e60:	mov	r7, #0
   20e64:	b	20e34 <__flatcc_fb_gen_c_json_printer@@Base+0x10fc>
   20e68:	vldr	d8, [r5, #48]	; 0x30
   20e6c:	vcmp.f64	d8, #0.0
   20e70:	vmrs	APSR_nzcv, fpscr
   20e74:	bne	20ef4 <__flatcc_fb_gen_c_json_printer@@Base+0x11bc>
   20e78:	ldrh	r1, [r5, #96]	; 0x60
   20e7c:	mov	r0, r4
   20e80:	bl	204d0 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   20e84:	ldrh	r1, [r5, #96]	; 0x60
   20e88:	mov	r0, r4
   20e8c:	add	r1, r1, #2
   20e90:	lsl	r1, r1, #1
   20e94:	uxth	r1, r1
   20e98:	bl	20508 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   20e9c:	ldr	r3, [sp, #8]
   20ea0:	cmp	r3, #0
   20ea4:	beq	20ec8 <__flatcc_fb_gen_c_json_printer@@Base+0x1190>
   20ea8:	mov	r3, #1
   20eac:	mov	r1, #8
   20eb0:	mov	r2, r3
   20eb4:	mov	r0, r4
   20eb8:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20ebc:	cmp	r0, #0
   20ec0:	movne	r3, #1
   20ec4:	strbne	r3, [r0]
   20ec8:	tst	sl, #256	; 0x100
   20ecc:	beq	20dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1088>
   20ed0:	mov	r3, #1
   20ed4:	mov	r1, #7
   20ed8:	mov	r2, r3
   20edc:	mov	r0, r4
   20ee0:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20ee4:	cmp	r0, #0
   20ee8:	movne	r3, #1
   20eec:	strbne	r3, [r0]
   20ef0:	b	20dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1088>
   20ef4:	mov	r3, #8
   20ef8:	mov	r1, #5
   20efc:	mov	r2, r3
   20f00:	mov	r0, r4
   20f04:	bl	2bd50 <flatcc_builder_table_add@@Base>
   20f08:	cmp	r0, #0
   20f0c:	vstrne	d8, [r0]
   20f10:	b	20e78 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   20f14:	ldrh	r1, [r5, #80]	; 0x50
   20f18:	mov	r0, r4
   20f1c:	bl	20508 <__flatcc_fb_gen_c_json_printer@@Base+0x7d0>
   20f20:	b	20dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1088>
   20f24:	mov	r0, r4
   20f28:	bl	2b3f4 <flatcc_builder_end_table@@Base>
   20f2c:	str	r0, [fp, r8, lsl #2]
   20f30:	add	r8, r8, #1
   20f34:	b	20a98 <__flatcc_fb_gen_c_json_printer@@Base+0xd60>
   20f38:	ldr	r3, [sp, #4]
   20f3c:	mov	r1, #4
   20f40:	mov	r0, r4
   20f44:	ldr	r7, [r3, r6, lsl #3]
   20f48:	ldrh	r8, [r7, #8]
   20f4c:	sub	r3, r8, #4
   20f50:	clz	r3, r3
   20f54:	lsr	r3, r3, #5
   20f58:	str	r3, [sp, #16]
   20f5c:	bl	2adcc <flatcc_builder_start_table@@Base>
   20f60:	ldr	r3, [sp, #4]
   20f64:	mov	r0, r4
   20f68:	add	r3, r3, #4
   20f6c:	ldr	r1, [r3, r6, lsl #3]
   20f70:	bl	2bc5c <flatcc_builder_create_string_str@@Base>
   20f74:	mov	r1, r0
   20f78:	mov	r0, r4
   20f7c:	bl	201ec <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   20f80:	mov	r0, r4
   20f84:	bl	2ad0c <flatcc_builder_start_offset_vector@@Base>
   20f88:	ldr	r5, [r7, #20]
   20f8c:	cmp	r8, #4
   20f90:	moveq	r3, fp
   20f94:	movne	r3, #0
   20f98:	str	r3, [sp, #8]
   20f9c:	cmp	r5, #0
   20fa0:	bne	21010 <__flatcc_fb_gen_c_json_printer@@Base+0x12d8>
   20fa4:	mov	r0, r4
   20fa8:	bl	2037c <__flatcc_fb_gen_c_json_printer@@Base+0x644>
   20fac:	mov	r0, r4
   20fb0:	ldr	r1, [sp, #16]
   20fb4:	bl	2024c <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   20fb8:	ldrh	r2, [r7, #48]	; 0x30
   20fbc:	mov	r0, r4
   20fc0:	ldr	r1, [r7, #40]	; 0x28
   20fc4:	bl	206cc <__flatcc_fb_gen_c_json_printer@@Base+0x994>
   20fc8:	subs	r5, r0, #0
   20fcc:	beq	20fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x12ac>
   20fd0:	mov	r1, #3
   20fd4:	mov	r0, r4
   20fd8:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   20fdc:	cmp	r0, #0
   20fe0:	strne	r5, [r0]
   20fe4:	mov	r2, #3
   20fe8:	ldr	r1, [pc, #384]	; 21170 <__flatcc_fb_gen_c_json_printer@@Base+0x1438>
   20fec:	mov	r0, r4
   20ff0:	bl	2b378 <flatcc_builder_check_required@@Base>
   20ff4:	cmp	r0, #0
   20ff8:	bne	210f0 <__flatcc_fb_gen_c_json_printer@@Base+0x13b8>
   20ffc:	ldr	r3, [pc, #368]	; 21174 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   21000:	mov	r2, #27
   21004:	ldr	r1, [pc, #332]	; 21158 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   21008:	ldr	r0, [pc, #360]	; 21178 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   2100c:	b	20c50 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   21010:	mov	r1, #3
   21014:	mov	r0, r4
   21018:	bl	2adcc <flatcc_builder_start_table@@Base>
   2101c:	ldr	r3, [r5, #4]
   21020:	mov	r0, r4
   21024:	ldm	r3, {r1, r2}
   21028:	bl	2bbc4 <flatcc_builder_create_string@@Base>
   2102c:	mov	r1, r0
   21030:	mov	r0, r4
   21034:	bl	201ec <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   21038:	ldr	r3, [sp, #8]
   2103c:	cmp	r3, #0
   21040:	beq	2107c <__flatcc_fb_gen_c_json_printer@@Base+0x1344>
   21044:	ldrh	r3, [r5, #24]
   21048:	cmp	r3, #14
   2104c:	bne	2107c <__flatcc_fb_gen_c_json_printer@@Base+0x1344>
   21050:	ldr	r3, [r5, #16]
   21054:	ldr	r2, [sp, #8]
   21058:	ldr	r3, [r3, #124]	; 0x7c
   2105c:	ldr	r8, [r2, r3, lsl #2]
   21060:	cmp	r8, #0
   21064:	beq	2107c <__flatcc_fb_gen_c_json_printer@@Base+0x1344>
   21068:	mov	r1, #2
   2106c:	mov	r0, r4
   21070:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   21074:	cmp	r0, #0
   21078:	strne	r8, [r0]
   2107c:	ldrd	r8, [r5, #48]	; 0x30
   21080:	orrs	r3, r8, r9
   21084:	beq	210a4 <__flatcc_fb_gen_c_json_printer@@Base+0x136c>
   21088:	mov	r3, #8
   2108c:	mov	r1, #1
   21090:	mov	r2, r3
   21094:	mov	r0, r4
   21098:	bl	2bd50 <flatcc_builder_table_add@@Base>
   2109c:	cmp	r0, #0
   210a0:	strdne	r8, [r0]
   210a4:	mov	r2, #1
   210a8:	mov	r1, sl
   210ac:	mov	r0, r4
   210b0:	bl	2b378 <flatcc_builder_check_required@@Base>
   210b4:	cmp	r0, #0
   210b8:	bne	210d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1398>
   210bc:	ldr	r3, [pc, #184]	; 2117c <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   210c0:	mov	r2, #25
   210c4:	ldr	r1, [pc, #140]	; 21158 <__flatcc_fb_gen_c_json_printer@@Base+0x1420>
   210c8:	ldr	r0, [pc, #176]	; 21180 <__flatcc_fb_gen_c_json_printer@@Base+0x1448>
   210cc:	b	20c50 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   210d0:	mov	r0, r4
   210d4:	bl	2b3f4 <flatcc_builder_end_table@@Base>
   210d8:	subs	r1, r0, #0
   210dc:	beq	210e8 <__flatcc_fb_gen_c_json_printer@@Base+0x13b0>
   210e0:	mov	r0, r4
   210e4:	bl	2a954 <flatcc_builder_offset_vector_push@@Base>
   210e8:	ldr	r5, [r5]
   210ec:	b	20f9c <__flatcc_fb_gen_c_json_printer@@Base+0x1264>
   210f0:	mov	r0, r4
   210f4:	bl	2b3f4 <flatcc_builder_end_table@@Base>
   210f8:	subs	r1, r0, #0
   210fc:	beq	21108 <__flatcc_fb_gen_c_json_printer@@Base+0x13d0>
   21100:	mov	r0, r4
   21104:	bl	2a954 <flatcc_builder_offset_vector_push@@Base>
   21108:	add	r6, r6, #1
   2110c:	b	20ae0 <__flatcc_fb_gen_c_json_printer@@Base+0xda8>
   21110:	mov	r0, r4
   21114:	bl	2b3f4 <flatcc_builder_end_table@@Base>
   21118:	mov	r1, r0
   2111c:	mov	r0, r4
   21120:	bl	2a68c <flatcc_builder_end_buffer@@Base>
   21124:	add	r0, sp, #36	; 0x24
   21128:	bl	2012c <__flatcc_fb_gen_c_json_printer@@Base+0x3f4>
   2112c:	subs	r0, fp, #0
   21130:	beq	20988 <__flatcc_fb_gen_c_json_printer@@Base+0xc50>
   21134:	bl	13ef0 <free@plt>
   21138:	mov	r0, #0
   2113c:	b	20988 <__flatcc_fb_gen_c_json_printer@@Base+0xc50>
   21140:	muleq	r2, r0, r1
   21144:	andeq	r0, r2, r8, ror r1
   21148:	andeq	r6, r4, pc, asr r0
   2114c:	andeq	r5, r4, r0, lsl #27
   21150:			; <UNDEFINED> instruction: 0x00045db8
   21154:			; <UNDEFINED> instruction: 0x00045dbe
   21158:	andeq	r5, r4, r7, lsl #28
   2115c:	andeq	r6, r4, sl, lsl r2
   21160:	andeq	r5, r4, r4, ror #26
   21164:	andeq	r5, r4, sl, ror #26
   21168:	andeq	r6, r4, r4, rrx
   2116c:	andeq	pc, r2, r5, ror lr	; <UNPREDICTABLE>
   21170:	muleq	r4, ip, sp
   21174:	andeq	r5, r4, r4, lsr #27
   21178:	andeq	r6, r4, sp, lsl #3
   2117c:	andeq	r5, r4, r4, lsl #27
   21180:	strdeq	r6, [r4], -r7
   21184:	ldrh	r3, [r1, #8]
   21188:	cmp	r3, #4
   2118c:	bxhi	lr
   21190:	push	{r4, r5, r6, lr}
   21194:	mov	r4, r0
   21198:	mov	r5, r1
   2119c:	ldr	r0, [r0, #40]	; 0x28
   211a0:	ldr	r1, [r1, #16]
   211a4:	add	r0, r0, #172	; 0xac
   211a8:	bl	2200c <ptr_set_find_item@@Base>
   211ac:	cmp	r0, #0
   211b0:	popeq	{r4, r5, r6, pc}
   211b4:	ldr	r3, [r4]
   211b8:	cmp	r3, #0
   211bc:	ldrne	r3, [r5, #12]
   211c0:	movne	r2, #0
   211c4:	ldrne	r3, [r3]
   211c8:	bne	211e8 <__flatcc_fb_gen_c_json_printer@@Base+0x14b0>
   211cc:	mov	r2, r3
   211d0:	b	211f0 <__flatcc_fb_gen_c_json_printer@@Base+0x14b8>
   211d4:	ldr	r1, [r3, #4]
   211d8:	ldr	r3, [r3]
   211dc:	ldr	r1, [r1, #4]
   211e0:	add	r1, r1, #1
   211e4:	add	r2, r2, r1
   211e8:	cmp	r3, #0
   211ec:	bne	211d4 <__flatcc_fb_gen_c_json_printer@@Base+0x149c>
   211f0:	ldr	r3, [r5, #4]
   211f4:	ldr	r1, [r4, #12]
   211f8:	ldr	r3, [r3, #4]
   211fc:	add	r3, r3, r1
   21200:	add	r3, r3, #1
   21204:	add	r3, r3, r2
   21208:	str	r3, [r4, #12]
   2120c:	ldrh	r3, [r5, #8]
   21210:	cmp	r3, #4
   21214:	ldrls	pc, [pc, r3, lsl #2]
   21218:	b	2124c <__flatcc_fb_gen_c_json_printer@@Base+0x1514>
   2121c:	andeq	r1, r2, r0, lsr r2
   21220:	andeq	r1, r2, r0, lsr r2
   21224:	andeq	r1, r2, ip, asr #4
   21228:	andeq	r1, r2, r0, asr #4
   2122c:	andeq	r1, r2, r0, asr #4
   21230:	ldr	r3, [r4, #4]
   21234:	add	r3, r3, #1
   21238:	str	r3, [r4, #4]
   2123c:	pop	{r4, r5, r6, pc}
   21240:	ldr	r3, [r4, #8]
   21244:	add	r3, r3, #1
   21248:	str	r3, [r4, #8]
   2124c:	pop	{r4, r5, r6, pc}
   21250:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   21254:	cmp	r0, #0
   21258:	beq	2127c <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   2125c:	ldr	r3, [pc, #356]	; 213c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   21260:	ldr	r2, [r0, #4]
   21264:	str	r3, [sp, #4]
   21268:	cmp	r2, r3
   2126c:	bne	2127c <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   21270:	ldr	r3, [r0]
   21274:	adds	r2, r0, r3
   21278:	bne	21290 <__flatcc_fb_gen_c_json_printer@@Base+0x1558>
   2127c:	ldr	r3, [pc, #328]	; 213cc <__flatcc_fb_gen_c_json_printer@@Base+0x1694>
   21280:	mov	r2, #237	; 0xed
   21284:	ldr	r1, [pc, #324]	; 213d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   21288:	ldr	r0, [pc, #324]	; 213d4 <__flatcc_fb_gen_c_json_printer@@Base+0x169c>
   2128c:	b	212f8 <__flatcc_fb_gen_c_json_printer@@Base+0x15c0>
   21290:	ldr	r3, [r0, r3]
   21294:	sub	r3, r2, r3
   21298:	ldrh	r1, [r3]
   2129c:	cmp	r1, #5
   212a0:	bls	212e8 <__flatcc_fb_gen_c_json_printer@@Base+0x15b0>
   212a4:	ldrh	r3, [r3, #4]
   212a8:	cmp	r3, #0
   212ac:	beq	212e8 <__flatcc_fb_gen_c_json_printer@@Base+0x15b0>
   212b0:	add	r7, r2, r3
   212b4:	ldr	r3, [r2, r3]
   212b8:	mov	r8, #0
   212bc:	mvn	r9, #3
   212c0:	add	r3, r3, #4
   212c4:	add	r7, r7, r3
   212c8:	mov	sl, r7
   212cc:	cmp	r7, #0
   212d0:	beq	212e0 <__flatcc_fb_gen_c_json_printer@@Base+0x15a8>
   212d4:	ldr	r3, [r7, #-4]
   212d8:	cmp	r8, r3
   212dc:	bcc	212fc <__flatcc_fb_gen_c_json_printer@@Base+0x15c4>
   212e0:	add	sp, sp, #8
   212e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   212e8:	ldr	r3, [pc, #220]	; 213cc <__flatcc_fb_gen_c_json_printer@@Base+0x1694>
   212ec:	mov	r2, #237	; 0xed
   212f0:	ldr	r1, [pc, #216]	; 213d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   212f4:	ldr	r0, [pc, #220]	; 213d8 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   212f8:	bl	14070 <__assert_fail@plt>
   212fc:	mov	r3, sl
   21300:	add	sl, sl, #4
   21304:	ldr	r1, [r3]
   21308:	adds	r2, r3, r1
   2130c:	ldreq	r3, [pc, #200]	; 213dc <__flatcc_fb_gen_c_json_printer@@Base+0x16a4>
   21310:	moveq	r2, #224	; 0xe0
   21314:	beq	21284 <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
   21318:	ldr	r3, [r3, r1]
   2131c:	sub	r3, r2, r3
   21320:	ldrh	r1, [r3]
   21324:	cmp	r1, #7
   21328:	bls	21354 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   2132c:	ldrh	r3, [r3, #6]
   21330:	cmp	r3, #0
   21334:	beq	21354 <__flatcc_fb_gen_c_json_printer@@Base+0x161c>
   21338:	add	r4, r2, r3
   2133c:	ldr	r3, [r2, r3]
   21340:	add	r3, r3, #4
   21344:	adds	r4, r4, r3
   21348:	bne	21360 <__flatcc_fb_gen_c_json_printer@@Base+0x1628>
   2134c:	add	r8, r8, #1
   21350:	b	212cc <__flatcc_fb_gen_c_json_printer@@Base+0x1594>
   21354:	ldr	r3, [pc, #128]	; 213dc <__flatcc_fb_gen_c_json_printer@@Base+0x16a4>
   21358:	mov	r2, #224	; 0xe0
   2135c:	b	212f0 <__flatcc_fb_gen_c_json_printer@@Base+0x15b8>
   21360:	ldr	r6, [r4, #-4]
   21364:	cmp	r6, #0
   21368:	beq	2134c <__flatcc_fb_gen_c_json_printer@@Base+0x1614>
   2136c:	sub	r5, r6, #1
   21370:	lsr	r6, r6, #1
   21374:	mov	r1, r6
   21378:	mov	r2, r5
   2137c:	mov	r0, r4
   21380:	bl	20600 <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   21384:	subs	r6, r6, #1
   21388:	bcs	21374 <__flatcc_fb_gen_c_json_printer@@Base+0x163c>
   2138c:	cmp	r5, #0
   21390:	beq	2134c <__flatcc_fb_gen_c_json_printer@@Base+0x1614>
   21394:	ldr	r2, [r4, r5, lsl #2]
   21398:	mul	r1, r9, r5
   2139c:	mov	r0, r4
   213a0:	ldr	r3, [r4]
   213a4:	sub	r2, r2, r1
   213a8:	add	r3, r1, r3
   213ac:	str	r2, [r4]
   213b0:	mov	r1, #0
   213b4:	str	r3, [r4, r5, lsl #2]
   213b8:	sub	r5, r5, #1
   213bc:	mov	r2, r5
   213c0:	bl	20600 <__flatcc_fb_gen_c_json_printer@@Base+0x8c8>
   213c4:	b	2138c <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   213c8:	movtpl	r4, #9794	; 0x2642
   213cc:	ldrdeq	r5, [r4], -r4
   213d0:	strdeq	r5, [r4], -r3
   213d4:	andeq	r5, r4, r8, lsl #31
   213d8:	andeq	r5, r4, lr, lsr #31
   213dc:	andeq	r5, r4, lr, ror #27

000213e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   213e0:	push	{r4, r5, r6, r7, lr}
   213e4:	sub	sp, sp, #236	; 0xec
   213e8:	mov	r7, r1
   213ec:	mov	r6, r0
   213f0:	mov	r0, sp
   213f4:	mov	r5, r3
   213f8:	mov	r4, r2
   213fc:	bl	29f10 <flatcc_builder_init@@Base>
   21400:	mov	r2, r7
   21404:	mov	r1, r6
   21408:	mov	r0, sp
   2140c:	bl	20890 <__flatcc_fb_gen_c_json_printer@@Base+0xb58>
   21410:	mov	r1, r4
   21414:	mov	r0, sp
   21418:	ldr	r2, [r5]
   2141c:	bl	2c318 <flatcc_builder_copy_buffer@@Base>
   21420:	cmp	r0, #0
   21424:	beq	21430 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x50>
   21428:	mov	r0, r4
   2142c:	bl	21250 <__flatcc_fb_gen_c_json_printer@@Base+0x1518>
   21430:	mov	r0, sp
   21434:	bl	2c24c <flatcc_builder_get_buffer_size@@Base>
   21438:	str	r0, [r5]
   2143c:	mov	r0, sp
   21440:	bl	2a08c <flatcc_builder_clear@@Base>
   21444:	mov	r0, r4
   21448:	add	sp, sp, #236	; 0xec
   2144c:	pop	{r4, r5, r6, r7, pc}

00021450 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   21450:	push	{r4, r5, r6, lr}
   21454:	sub	sp, sp, #232	; 0xe8
   21458:	mov	r6, r1
   2145c:	mov	r5, r0
   21460:	mov	r0, sp
   21464:	mov	r4, r2
   21468:	bl	29f10 <flatcc_builder_init@@Base>
   2146c:	mov	r2, r6
   21470:	mov	r1, r5
   21474:	mov	r0, sp
   21478:	bl	20890 <__flatcc_fb_gen_c_json_printer@@Base+0xb58>
   2147c:	cmp	r0, #0
   21480:	movne	r4, #0
   21484:	bne	214a0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   21488:	mov	r1, r4
   2148c:	mov	r0, sp
   21490:	bl	2c360 <flatcc_builder_finalize_buffer@@Base>
   21494:	subs	r4, r0, #0
   21498:	beq	214a0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x50>
   2149c:	bl	21250 <__flatcc_fb_gen_c_json_printer@@Base+0x1518>
   214a0:	mov	r0, sp
   214a4:	bl	2a08c <flatcc_builder_clear@@Base>
   214a8:	mov	r0, r4
   214ac:	add	sp, sp, #232	; 0xe8
   214b0:	pop	{r4, r5, r6, pc}

000214b4 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   214b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   214b8:	mov	r5, r0
   214bc:	sub	sp, sp, #20
   214c0:	mov	r6, r1
   214c4:	ldr	r4, [r0, #216]	; 0xd8
   214c8:	ldr	r3, [pc, #304]	; 21600 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14c>
   214cc:	cmp	r4, #0
   214d0:	moveq	r4, r3
   214d4:	ldr	r3, [r0, #108]	; 0x6c
   214d8:	cmp	r3, #0
   214dc:	ldrne	r3, [pc, #288]	; 21604 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
   214e0:	ldrne	r4, [r3]
   214e4:	bne	2156c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8>
   214e8:	mov	r0, r4
   214ec:	mov	r8, #1
   214f0:	bl	13fa4 <strlen@plt>
   214f4:	ldr	r7, [r6, #160]	; 0xa0
   214f8:	mov	r9, r0
   214fc:	mov	r0, r7
   21500:	bl	13fa4 <strlen@plt>
   21504:	ldr	r3, [pc, #252]	; 21608 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x154>
   21508:	mov	r2, r7
   2150c:	mov	r1, r9
   21510:	stm	sp, {r3, r8}
   21514:	mov	r3, r0
   21518:	mov	r0, r4
   2151c:	bl	23248 <__flatcc_fb_create_join_path_n@@Base>
   21520:	subs	r7, r0, #0
   21524:	bne	21540 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8c>
   21528:	ldr	r3, [pc, #220]	; 2160c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   2152c:	ldr	r0, [pc, #220]	; 21610 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   21530:	ldr	r1, [r3]
   21534:	bl	1404c <fputs@plt>
   21538:	mov	r0, r8
   2153c:	bl	13f98 <exit@plt>
   21540:	ldr	r1, [pc, #204]	; 21614 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   21544:	bl	13ee4 <fopen@plt>
   21548:	subs	r4, r0, #0
   2154c:	bne	21564 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb0>
   21550:	ldr	r3, [pc, #180]	; 2160c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   21554:	mov	r2, r7
   21558:	ldr	r1, [pc, #184]	; 21618 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x164>
   2155c:	ldr	r0, [r3]
   21560:	bl	13fb0 <fprintf@plt>
   21564:	mov	r0, r7
   21568:	bl	13ef0 <free@plt>
   2156c:	cmp	r4, #0
   21570:	mvneq	r5, #0
   21574:	beq	215b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x100>
   21578:	mov	r1, r6
   2157c:	add	r2, sp, #12
   21580:	mov	r0, r5
   21584:	bl	21450 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   21588:	subs	r6, r0, #0
   2158c:	bne	215c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10c>
   21590:	ldr	r0, [pc, #132]	; 2161c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   21594:	mvn	r5, #0
   21598:	bl	13f5c <puts@plt>
   2159c:	ldr	r3, [pc, #96]	; 21604 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
   215a0:	ldr	r3, [r3]
   215a4:	cmp	r4, r3
   215a8:	beq	215b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x100>
   215ac:	mov	r0, r4
   215b0:	bl	13ff8 <fclose@plt>
   215b4:	mov	r0, r5
   215b8:	add	sp, sp, #20
   215bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   215c0:	mov	r3, r4
   215c4:	mov	r1, #1
   215c8:	ldr	r2, [sp, #12]
   215cc:	bl	13f38 <fwrite@plt>
   215d0:	ldr	r3, [sp, #12]
   215d4:	cmp	r0, r3
   215d8:	moveq	r5, #0
   215dc:	beq	215f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x140>
   215e0:	ldr	r3, [pc, #36]	; 2160c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x158>
   215e4:	mvn	r5, #0
   215e8:	ldr	r0, [pc, #48]	; 21620 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16c>
   215ec:	ldr	r1, [r3]
   215f0:	bl	1404c <fputs@plt>
   215f4:	mov	r0, r6
   215f8:	bl	13ef0 <free@plt>
   215fc:	b	2159c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe8>
   21600:	andeq	r1, r3, fp, lsr #2
   21604:	strheq	sl, [r5], -r4
   21608:	andeq	pc, r2, r9, lsr r8	; <UNPREDICTABLE>
   2160c:	strheq	sl, [r5], -r0
   21610:	andeq	pc, r2, r6, lsl r8	; <UNPREDICTABLE>
   21614:	andeq	pc, r2, r0, lsr r9	; <UNPREDICTABLE>
   21618:	andeq	r6, r4, sp, lsr #5
   2161c:	ldrdeq	r6, [r4], -pc	; <UNPREDICTABLE>
   21620:	andeq	r6, r4, r0, lsl #6
   21624:	push	{r4, r5, r6, r7, r8, lr}
   21628:	mov	r5, r0
   2162c:	mov	r7, r1
   21630:	mov	r8, r2
   21634:	mov	r4, #0
   21638:	ldr	r6, [r0]
   2163c:	ldr	r3, [r5, #12]
   21640:	cmp	r3, r4
   21644:	popls	{r4, r5, r6, r7, r8, pc}
   21648:	ldr	r1, [r6, r4, lsl #2]
   2164c:	cmp	r1, #0
   21650:	cmpne	r1, #2
   21654:	beq	21660 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   21658:	mov	r0, r8
   2165c:	blx	r7
   21660:	add	r4, r4, #1
   21664:	b	2163c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x188>
   21668:	push	{r4, lr}
   2166c:	mov	r4, r0
   21670:	ldr	r0, [r0]
   21674:	cmp	r0, #0
   21678:	beq	21680 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   2167c:	bl	13ef0 <free@plt>
   21680:	mov	r0, r4
   21684:	mov	r2, #16
   21688:	pop	{r4, lr}
   2168c:	mov	r1, #0
   21690:	b	13fc8 <memset@plt>
   21694:	push	{r0, r1, r2, r3, r4, lr}
   21698:	add	r3, sp, #8
   2169c:	mov	r2, r1
   216a0:	str	r3, [sp, #4]
   216a4:	ldr	r3, [pc, #20]	; 216c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x20c>
   216a8:	str	r3, [sp]
   216ac:	mov	r3, #0
   216b0:	bl	2c980 <cmetrohash64_1@@Base>
   216b4:	ldr	r0, [sp, #8]
   216b8:	add	sp, sp, #20
   216bc:	pop	{pc}		; (ldr pc, [sp], #4)
   216c0:	svccs	0x00693b52
   216c4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216c8:	subs	r8, r3, #0
   216cc:	str	r1, [sp]
   216d0:	bne	216e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x234>
   216d4:	ldr	r3, [pc, #384]	; 2185c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   216d8:	mov	r2, #114	; 0x72
   216dc:	ldr	r1, [pc, #380]	; 21860 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   216e0:	ldr	r0, [pc, #380]	; 21864 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   216e4:	bl	14070 <__assert_fail@plt>
   216e8:	cmp	r8, #2
   216ec:	bne	21704 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x250>
   216f0:	ldr	r3, [pc, #356]	; 2185c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   216f4:	mov	r2, #115	; 0x73
   216f8:	ldr	r1, [pc, #352]	; 21860 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   216fc:	ldr	r0, [pc, #356]	; 21868 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   21700:	b	216e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
   21704:	cmp	r8, #1
   21708:	bne	21720 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x26c>
   2170c:	ldr	r3, [pc, #328]	; 2185c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3a8>
   21710:	mov	r2, #116	; 0x74
   21714:	ldr	r1, [pc, #324]	; 21860 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ac>
   21718:	ldr	r0, [pc, #332]	; 2186c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b8>
   2171c:	b	216e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
   21720:	mov	fp, r2
   21724:	mov	r3, #179	; 0xb3
   21728:	ldr	r1, [r0, #8]
   2172c:	mov	r6, r0
   21730:	ldr	r2, [r0, #12]
   21734:	mul	r3, r3, r2
   21738:	cmp	r1, r3, lsr #8
   2173c:	bcc	2176c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   21740:	lsl	r1, r1, #1
   21744:	bl	2187c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c8>
   21748:	cmp	r0, #0
   2174c:	beq	2176c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   21750:	ldr	r3, [pc, #280]	; 21870 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3bc>
   21754:	ldr	r2, [pc, #280]	; 21874 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c0>
   21758:	ldr	r1, [pc, #280]	; 21878 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   2175c:	ldr	r0, [r3]
   21760:	bl	13fb0 <fprintf@plt>
   21764:	mov	r0, #1
   21768:	bl	13f98 <exit@plt>
   2176c:	mov	r1, fp
   21770:	ldr	r0, [sp]
   21774:	ldr	sl, [r6]
   21778:	ldr	r9, [r6, #12]
   2177c:	bl	21694 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   21780:	ldr	r3, [sp, #48]	; 0x30
   21784:	add	r4, r0, #1
   21788:	sub	r9, r9, #1
   2178c:	and	r2, r9, r0
   21790:	sub	r3, r3, #2
   21794:	cmp	r3, #1
   21798:	ldrls	r3, [r6, #8]
   2179c:	movhi	r7, #0
   217a0:	addls	r3, r3, #1
   217a4:	strls	r3, [r6, #8]
   217a8:	bls	217e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x32c>
   217ac:	ldr	r5, [sl, r2, lsl #2]
   217b0:	add	r3, sl, r2, lsl #2
   217b4:	cmp	r5, #0
   217b8:	bne	21810 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x35c>
   217bc:	cmp	r7, #0
   217c0:	moveq	r7, r3
   217c4:	ldr	r3, [r6, #8]
   217c8:	add	r3, r3, #1
   217cc:	str	r3, [r6, #8]
   217d0:	str	r8, [r7]
   217d4:	b	21804 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   217d8:	and	r2, r9, r4
   217dc:	add	r4, r4, #1
   217e0:	ldr	r3, [sl, r2, lsl #2]
   217e4:	add	r1, sl, r2, lsl #2
   217e8:	subs	r5, r3, #2
   217ec:	movne	r5, #1
   217f0:	cmp	r3, #0
   217f4:	moveq	r5, #0
   217f8:	cmp	r5, #0
   217fc:	bne	217d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   21800:	str	r8, [r1]
   21804:	mov	r0, r5
   21808:	add	sp, sp, #12
   2180c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21810:	cmp	r5, #2
   21814:	bne	2182c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x378>
   21818:	cmp	r7, #0
   2181c:	moveq	r7, r3
   21820:	and	r2, r9, r4
   21824:	add	r4, r4, #1
   21828:	b	217ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f8>
   2182c:	mov	r2, fp
   21830:	mov	r1, r5
   21834:	ldr	r0, [sp]
   21838:	str	r3, [sp, #4]
   2183c:	bl	14058 <strncmp@plt>
   21840:	cmp	r0, #0
   21844:	ldr	r3, [sp, #4]
   21848:	bne	21820 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36c>
   2184c:	ldr	r2, [sp, #48]	; 0x30
   21850:	cmp	r2, #0
   21854:	streq	r8, [r3]
   21858:	b	21804 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
   2185c:	andeq	r6, r4, r8, lsr #6
   21860:	andeq	r6, r4, r0, asr #6
   21864:	muleq	r4, r0, r3
   21868:	andeq	r6, r4, r7, lsr #7
   2186c:			; <UNDEFINED> instruction: 0x000463be
   21870:	strheq	sl, [r5], -r0
   21874:	ldrdeq	r6, [r4], -r3
   21878:	andeq	r6, r4, r6, lsl #8
   2187c:	ldr	r3, [r0, #8]
   21880:	mov	r2, #179	; 0xb3
   21884:	push	{r4, r5, r6, r7, r8, lr}
   21888:	mov	r4, r0
   2188c:	sub	sp, sp, #24
   21890:	mov	r6, #4
   21894:	ldr	r7, [r0]
   21898:	cmp	r1, r3
   2189c:	movcc	r1, r3
   218a0:	mul	r3, r2, r6
   218a4:	cmp	r1, r3, lsr #8
   218a8:	bhi	21924 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x470>
   218ac:	mov	r1, #4
   218b0:	mov	r0, r6
   218b4:	bl	13ec0 <calloc@plt>
   218b8:	cmp	r0, #0
   218bc:	str	r0, [sp, #8]
   218c0:	mvneq	r0, #0
   218c4:	beq	2191c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x468>
   218c8:	mov	r5, #0
   218cc:	mov	r8, #3
   218d0:	str	r5, [sp, #12]
   218d4:	str	r5, [sp, #16]
   218d8:	str	r6, [sp, #20]
   218dc:	ldr	r3, [r4, #12]
   218e0:	cmp	r3, r5
   218e4:	bhi	2192c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x478>
   218e8:	mov	r0, r4
   218ec:	bl	21668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   218f0:	add	r2, sp, #8
   218f4:	add	ip, sp, #24
   218f8:	mov	r3, r2
   218fc:	add	r4, r4, #8
   21900:	ldm	r3!, {r0, r1}
   21904:	cmp	r3, ip
   21908:	mov	r2, r3
   2190c:	str	r0, [r4, #-8]
   21910:	str	r1, [r4, #-4]
   21914:	bne	218f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x444>
   21918:	mov	r0, #0
   2191c:	add	sp, sp, #24
   21920:	pop	{r4, r5, r6, r7, r8, pc}
   21924:	lsl	r6, r6, #1
   21928:	b	218a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3ec>
   2192c:	ldr	r6, [r7, r5, lsl #2]
   21930:	cmp	r6, #0
   21934:	cmpne	r6, #2
   21938:	beq	2195c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a8>
   2193c:	mov	r0, r6
   21940:	bl	13fa4 <strlen@plt>
   21944:	mov	r2, r0
   21948:	mov	r3, r6
   2194c:	str	r8, [sp]
   21950:	mov	r1, r6
   21954:	add	r0, sp, #8
   21958:	bl	216c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
   2195c:	add	r5, r5, #1
   21960:	b	218dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x428>
   21964:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21968:	ldr	r9, [r0]
   2196c:	cmp	r9, #0
   21970:	bne	21980 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   21974:	mov	r5, #0
   21978:	mov	r0, r5
   2197c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21980:	ldr	r6, [r0, #12]
   21984:	mov	r7, r1
   21988:	mov	r1, r2
   2198c:	mov	r0, r7
   21990:	mov	r8, r2
   21994:	bl	21694 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   21998:	add	r4, r0, #1
   2199c:	sub	r6, r6, #1
   219a0:	and	r3, r6, r0
   219a4:	ldr	r5, [r9, r3, lsl #2]
   219a8:	cmp	r5, #0
   219ac:	beq	21974 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   219b0:	cmp	r5, #2
   219b4:	beq	219d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51c>
   219b8:	mov	r2, r8
   219bc:	mov	r1, r5
   219c0:	mov	r0, r7
   219c4:	bl	14058 <strncmp@plt>
   219c8:	cmp	r0, #0
   219cc:	beq	21978 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c4>
   219d0:	and	r3, r6, r4
   219d4:	add	r4, r4, #1
   219d8:	b	219a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f0>
   219dc:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   219e0:	ldr	sl, [r0]
   219e4:	cmp	sl, #0
   219e8:	bne	219fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x548>
   219ec:	mov	r6, #0
   219f0:	mov	r0, r6
   219f4:	add	sp, sp, #4
   219f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219fc:	mov	r5, r0
   21a00:	mov	r8, r1
   21a04:	ldr	r7, [r5, #12]
   21a08:	mov	r1, r2
   21a0c:	mov	r0, r8
   21a10:	mov	r9, r2
   21a14:	bl	21694 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1e0>
   21a18:	add	r4, r0, #1
   21a1c:	sub	r7, r7, #1
   21a20:	and	r3, r7, r0
   21a24:	ldr	r6, [sl, r3, lsl #2]
   21a28:	add	fp, sl, r3, lsl #2
   21a2c:	cmp	r6, #0
   21a30:	beq	219ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x538>
   21a34:	cmp	r6, #2
   21a38:	beq	21a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b8>
   21a3c:	mov	r2, r9
   21a40:	mov	r1, r6
   21a44:	mov	r0, r8
   21a48:	bl	14058 <strncmp@plt>
   21a4c:	cmp	r0, #0
   21a50:	bne	21a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b8>
   21a54:	mov	r3, #2
   21a58:	str	r3, [fp]
   21a5c:	ldr	r3, [r5, #8]
   21a60:	sub	r3, r3, #1
   21a64:	str	r3, [r5, #8]
   21a68:	b	219f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x53c>
   21a6c:	and	r3, r4, r7
   21a70:	add	r4, r4, #1
   21a74:	b	21a24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>

00021a78 <str_set_clear@@Base>:
   21a78:	b	21668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>

00021a7c <str_set_destroy@@Base>:
   21a7c:	cmp	r1, #0
   21a80:	push	{r4, lr}
   21a84:	mov	r4, r0
   21a88:	beq	21a90 <str_set_destroy@@Base+0x14>
   21a8c:	bl	21624 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   21a90:	mov	r0, r4
   21a94:	pop	{r4, lr}
   21a98:	b	21668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>

00021a9c <str_set_init@@Base>:
   21a9c:	push	{r4, r5, r6, lr}
   21aa0:	mov	r2, #179	; 0xb3
   21aa4:	mov	r5, r0
   21aa8:	mov	r4, #4
   21aac:	mul	r3, r2, r4
   21ab0:	cmp	r1, r3, lsr #8
   21ab4:	bhi	21ae4 <str_set_init@@Base+0x48>
   21ab8:	mov	r1, #4
   21abc:	mov	r0, r4
   21ac0:	bl	13ec0 <calloc@plt>
   21ac4:	cmp	r0, #0
   21ac8:	str	r0, [r5]
   21acc:	movne	r0, #0
   21ad0:	mvneq	r0, #0
   21ad4:	strne	r4, [r5, #12]
   21ad8:	strne	r0, [r5, #4]
   21adc:	strne	r0, [r5, #8]
   21ae0:	pop	{r4, r5, r6, pc}
   21ae4:	lsl	r4, r4, #1
   21ae8:	b	21aac <str_set_init@@Base+0x10>

00021aec <str_set_resize@@Base>:
   21aec:	b	2187c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c8>

00021af0 <str_set_insert@@Base>:
   21af0:	b	216c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>

00021af4 <str_set_insert_item@@Base>:
   21af4:	push	{r0, r1, r4, r5, r6, lr}
   21af8:	mov	r6, r2
   21afc:	mov	r5, r0
   21b00:	mov	r0, r1
   21b04:	mov	r4, r1
   21b08:	bl	13fa4 <strlen@plt>
   21b0c:	mov	r2, r0
   21b10:	mov	r3, r4
   21b14:	str	r6, [sp]
   21b18:	mov	r1, r4
   21b1c:	mov	r0, r5
   21b20:	bl	216c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
   21b24:	add	sp, sp, #8
   21b28:	pop	{r4, r5, r6, pc}

00021b2c <str_set_find@@Base>:
   21b2c:	b	21964 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>

00021b30 <str_set_find_item@@Base>:
   21b30:	push	{r4, r5, r6, lr}
   21b34:	mov	r5, r0
   21b38:	mov	r0, r1
   21b3c:	mov	r4, r1
   21b40:	bl	13fa4 <strlen@plt>
   21b44:	mov	r2, r0
   21b48:	mov	r1, r4
   21b4c:	mov	r0, r5
   21b50:	pop	{r4, r5, r6, lr}
   21b54:	b	21964 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>

00021b58 <str_set_remove@@Base>:
   21b58:	b	219dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x528>

00021b5c <str_set_remove_item@@Base>:
   21b5c:	push	{r4, r5, r6, lr}
   21b60:	mov	r5, r0
   21b64:	mov	r0, r1
   21b68:	mov	r4, r1
   21b6c:	bl	13fa4 <strlen@plt>
   21b70:	mov	r2, r0
   21b74:	mov	r1, r4
   21b78:	mov	r0, r5
   21b7c:	pop	{r4, r5, r6, lr}
   21b80:	b	219dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x528>

00021b84 <str_set_visit@@Base>:
   21b84:	b	21624 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x170>
   21b88:	push	{r4, r5, r6, r7, r8, lr}
   21b8c:	mov	r5, r0
   21b90:	mov	r7, r1
   21b94:	mov	r8, r2
   21b98:	mov	r4, #0
   21b9c:	ldr	r6, [r0]
   21ba0:	ldr	r3, [r5, #12]
   21ba4:	cmp	r3, r4
   21ba8:	popls	{r4, r5, r6, r7, r8, pc}
   21bac:	ldr	r1, [r6, r4, lsl #2]
   21bb0:	cmp	r1, #0
   21bb4:	cmpne	r1, #2
   21bb8:	beq	21bc4 <str_set_visit@@Base+0x40>
   21bbc:	mov	r0, r8
   21bc0:	blx	r7
   21bc4:	add	r4, r4, #1
   21bc8:	b	21ba0 <str_set_visit@@Base+0x1c>
   21bcc:	push	{r4, lr}
   21bd0:	mov	r4, r0
   21bd4:	ldr	r0, [r0]
   21bd8:	cmp	r0, #0
   21bdc:	beq	21be4 <str_set_visit@@Base+0x60>
   21be0:	bl	13ef0 <free@plt>
   21be4:	mov	r0, r4
   21be8:	mov	r2, #16
   21bec:	pop	{r4, lr}
   21bf0:	mov	r1, #0
   21bf4:	b	13fc8 <memset@plt>
   21bf8:	push	{r0, r1, r2, r3, r4, lr}
   21bfc:	add	r3, sp, #8
   21c00:	mov	r2, #4
   21c04:	str	r3, [sp, #4]
   21c08:	ldr	r3, [pc, #20]	; 21c24 <str_set_visit@@Base+0xa0>
   21c0c:	str	r3, [sp]
   21c10:	mov	r3, #0
   21c14:	bl	2c980 <cmetrohash64_1@@Base>
   21c18:	ldr	r0, [sp, #8]
   21c1c:	add	sp, sp, #20
   21c20:	pop	{pc}		; (ldr pc, [sp], #4)
   21c24:	svccs	0x00693b52
   21c28:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   21c2c:	subs	r5, r2, #0
   21c30:	bne	21c48 <str_set_visit@@Base+0xc4>
   21c34:	ldr	r3, [pc, #352]	; 21d9c <str_set_visit@@Base+0x218>
   21c38:	mov	r2, #114	; 0x72
   21c3c:	ldr	r1, [pc, #348]	; 21da0 <str_set_visit@@Base+0x21c>
   21c40:	ldr	r0, [pc, #348]	; 21da4 <str_set_visit@@Base+0x220>
   21c44:	bl	14070 <__assert_fail@plt>
   21c48:	cmp	r5, #2
   21c4c:	bne	21c64 <str_set_visit@@Base+0xe0>
   21c50:	ldr	r3, [pc, #324]	; 21d9c <str_set_visit@@Base+0x218>
   21c54:	mov	r2, #115	; 0x73
   21c58:	ldr	r1, [pc, #320]	; 21da0 <str_set_visit@@Base+0x21c>
   21c5c:	ldr	r0, [pc, #324]	; 21da8 <str_set_visit@@Base+0x224>
   21c60:	b	21c44 <str_set_visit@@Base+0xc0>
   21c64:	cmp	r5, #1
   21c68:	bne	21c80 <str_set_visit@@Base+0xfc>
   21c6c:	ldr	r3, [pc, #296]	; 21d9c <str_set_visit@@Base+0x218>
   21c70:	mov	r2, #116	; 0x74
   21c74:	ldr	r1, [pc, #292]	; 21da0 <str_set_visit@@Base+0x21c>
   21c78:	ldr	r0, [pc, #300]	; 21dac <str_set_visit@@Base+0x228>
   21c7c:	b	21c44 <str_set_visit@@Base+0xc0>
   21c80:	ldr	r2, [r0, #12]
   21c84:	mov	r6, r1
   21c88:	mov	r7, r3
   21c8c:	mov	r3, #179	; 0xb3
   21c90:	mov	r4, r0
   21c94:	ldr	r1, [r0, #8]
   21c98:	mul	r3, r3, r2
   21c9c:	cmp	r1, r3, lsr #8
   21ca0:	bcc	21cd0 <str_set_visit@@Base+0x14c>
   21ca4:	lsl	r1, r1, #1
   21ca8:	bl	21dbc <str_set_visit@@Base+0x238>
   21cac:	cmp	r0, #0
   21cb0:	beq	21cd0 <str_set_visit@@Base+0x14c>
   21cb4:	ldr	r3, [pc, #244]	; 21db0 <str_set_visit@@Base+0x22c>
   21cb8:	ldr	r2, [pc, #244]	; 21db4 <str_set_visit@@Base+0x230>
   21cbc:	ldr	r1, [pc, #244]	; 21db8 <str_set_visit@@Base+0x234>
   21cc0:	ldr	r0, [r3]
   21cc4:	bl	13fb0 <fprintf@plt>
   21cc8:	mov	r0, #1
   21ccc:	bl	13f98 <exit@plt>
   21cd0:	add	r0, sp, #4
   21cd4:	str	r6, [sp, #4]
   21cd8:	ldr	r9, [r4]
   21cdc:	ldr	r8, [r4, #12]
   21ce0:	bl	21bf8 <str_set_visit@@Base+0x74>
   21ce4:	sub	r3, r7, #2
   21ce8:	cmp	r3, #1
   21cec:	add	r3, r0, #1
   21cf0:	ldrls	r2, [r4, #8]
   21cf4:	movhi	r2, #0
   21cf8:	sub	r8, r8, #1
   21cfc:	and	r1, r8, r0
   21d00:	addls	r2, r2, #1
   21d04:	strls	r2, [r4, #8]
   21d08:	bls	21d40 <str_set_visit@@Base+0x1bc>
   21d0c:	ldr	r0, [r9, r1, lsl #2]
   21d10:	add	ip, r9, r1, lsl #2
   21d14:	cmp	r0, #0
   21d18:	bne	21d68 <str_set_visit@@Base+0x1e4>
   21d1c:	ldr	r3, [r4, #8]
   21d20:	cmp	r2, #0
   21d24:	moveq	r2, ip
   21d28:	add	r3, r3, #1
   21d2c:	str	r3, [r4, #8]
   21d30:	str	r5, [r2]
   21d34:	b	21d94 <str_set_visit@@Base+0x210>
   21d38:	and	r1, r8, r3
   21d3c:	add	r3, r3, #1
   21d40:	ldr	r2, [r9, r1, lsl #2]
   21d44:	add	ip, r9, r1, lsl #2
   21d48:	subs	r0, r2, #2
   21d4c:	movne	r0, #1
   21d50:	cmp	r2, #0
   21d54:	moveq	r0, #0
   21d58:	cmp	r0, #0
   21d5c:	bne	21d38 <str_set_visit@@Base+0x1b4>
   21d60:	str	r5, [ip]
   21d64:	b	21d94 <str_set_visit@@Base+0x210>
   21d68:	cmp	r0, #2
   21d6c:	bne	21d84 <str_set_visit@@Base+0x200>
   21d70:	cmp	r2, #0
   21d74:	moveq	r2, ip
   21d78:	and	r1, r8, r3
   21d7c:	add	r3, r3, #1
   21d80:	b	21d0c <str_set_visit@@Base+0x188>
   21d84:	cmp	r6, r0
   21d88:	bne	21d78 <str_set_visit@@Base+0x1f4>
   21d8c:	cmp	r7, #0
   21d90:	beq	21d60 <str_set_visit@@Base+0x1dc>
   21d94:	add	sp, sp, #12
   21d98:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21d9c:	andeq	r6, r4, r0, lsr #8
   21da0:	andeq	r6, r4, r0, asr #6
   21da4:	muleq	r4, r0, r3
   21da8:	andeq	r6, r4, r7, lsr #7
   21dac:			; <UNDEFINED> instruction: 0x000463be
   21db0:	strheq	sl, [r5], -r0
   21db4:	ldrdeq	r6, [r4], -r3
   21db8:	andeq	r6, r4, r6, lsl #8
   21dbc:	ldr	r3, [r0, #8]
   21dc0:	mov	r2, #179	; 0xb3
   21dc4:	push	{r4, r5, r6, r7, lr}
   21dc8:	mov	r4, r0
   21dcc:	sub	sp, sp, #20
   21dd0:	mov	r6, #4
   21dd4:	ldr	r7, [r0]
   21dd8:	cmp	r1, r3
   21ddc:	movcc	r1, r3
   21de0:	mul	r3, r2, r6
   21de4:	cmp	r1, r3, lsr #8
   21de8:	bhi	21e60 <str_set_visit@@Base+0x2dc>
   21dec:	mov	r1, #4
   21df0:	mov	r0, r6
   21df4:	bl	13ec0 <calloc@plt>
   21df8:	cmp	r0, #0
   21dfc:	str	r0, [sp]
   21e00:	mvneq	r0, #0
   21e04:	beq	21e58 <str_set_visit@@Base+0x2d4>
   21e08:	mov	r5, #0
   21e0c:	str	r5, [sp, #4]
   21e10:	str	r5, [sp, #8]
   21e14:	str	r6, [sp, #12]
   21e18:	ldr	r3, [r4, #12]
   21e1c:	cmp	r3, r5
   21e20:	bhi	21e68 <str_set_visit@@Base+0x2e4>
   21e24:	mov	r0, r4
   21e28:	bl	21bcc <str_set_visit@@Base+0x48>
   21e2c:	mov	r2, sp
   21e30:	add	ip, sp, #16
   21e34:	mov	r3, r2
   21e38:	add	r4, r4, #8
   21e3c:	ldm	r3!, {r0, r1}
   21e40:	cmp	r3, ip
   21e44:	mov	r2, r3
   21e48:	str	r0, [r4, #-8]
   21e4c:	str	r1, [r4, #-4]
   21e50:	bne	21e34 <str_set_visit@@Base+0x2b0>
   21e54:	mov	r0, #0
   21e58:	add	sp, sp, #20
   21e5c:	pop	{r4, r5, r6, r7, pc}
   21e60:	lsl	r6, r6, #1
   21e64:	b	21de0 <str_set_visit@@Base+0x25c>
   21e68:	ldr	r2, [r7, r5, lsl #2]
   21e6c:	cmp	r2, #0
   21e70:	cmpne	r2, #2
   21e74:	beq	21e88 <str_set_visit@@Base+0x304>
   21e78:	mov	r3, #3
   21e7c:	mov	r1, r2
   21e80:	mov	r0, sp
   21e84:	bl	21c28 <str_set_visit@@Base+0xa4>
   21e88:	add	r5, r5, #1
   21e8c:	b	21e18 <str_set_visit@@Base+0x294>
   21e90:	push	{r0, r1, r4, r5, r6, lr}
   21e94:	ldr	r6, [r0]
   21e98:	cmp	r6, #0
   21e9c:	bne	21eac <str_set_visit@@Base+0x328>
   21ea0:	mov	r0, #0
   21ea4:	add	sp, sp, #8
   21ea8:	pop	{r4, r5, r6, pc}
   21eac:	ldr	r4, [r0, #12]
   21eb0:	add	r0, sp, #4
   21eb4:	mov	r5, r1
   21eb8:	str	r1, [sp, #4]
   21ebc:	bl	21bf8 <str_set_visit@@Base+0x74>
   21ec0:	add	r3, r0, #1
   21ec4:	sub	r4, r4, #1
   21ec8:	and	r2, r4, r0
   21ecc:	ldr	r0, [r6, r2, lsl #2]
   21ed0:	cmp	r0, #0
   21ed4:	beq	21ea0 <str_set_visit@@Base+0x31c>
   21ed8:	cmp	r0, #2
   21edc:	beq	21ee8 <str_set_visit@@Base+0x364>
   21ee0:	cmp	r5, r0
   21ee4:	beq	21ea4 <str_set_visit@@Base+0x320>
   21ee8:	and	r2, r4, r3
   21eec:	add	r3, r3, #1
   21ef0:	b	21ecc <str_set_visit@@Base+0x348>
   21ef4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   21ef8:	ldr	r7, [r0]
   21efc:	cmp	r7, #0
   21f00:	bne	21f10 <str_set_visit@@Base+0x38c>
   21f04:	mov	r0, #0
   21f08:	add	sp, sp, #12
   21f0c:	pop	{r4, r5, r6, r7, pc}
   21f10:	mov	r4, r0
   21f14:	add	r0, sp, #4
   21f18:	str	r1, [sp, #4]
   21f1c:	ldr	r5, [r4, #12]
   21f20:	mov	r6, r1
   21f24:	bl	21bf8 <str_set_visit@@Base+0x74>
   21f28:	add	r3, r0, #1
   21f2c:	sub	r5, r5, #1
   21f30:	and	r2, r5, r0
   21f34:	ldr	r0, [r7, r2, lsl #2]
   21f38:	add	r1, r7, r2, lsl #2
   21f3c:	cmp	r0, #0
   21f40:	beq	21f04 <str_set_visit@@Base+0x380>
   21f44:	cmp	r0, #2
   21f48:	beq	21f6c <str_set_visit@@Base+0x3e8>
   21f4c:	cmp	r6, r0
   21f50:	bne	21f6c <str_set_visit@@Base+0x3e8>
   21f54:	mov	r3, #2
   21f58:	str	r3, [r1]
   21f5c:	ldr	r3, [r4, #8]
   21f60:	sub	r3, r3, #1
   21f64:	str	r3, [r4, #8]
   21f68:	b	21f08 <str_set_visit@@Base+0x384>
   21f6c:	and	r2, r5, r3
   21f70:	add	r3, r3, #1
   21f74:	b	21f34 <str_set_visit@@Base+0x3b0>

00021f78 <ptr_set_clear@@Base>:
   21f78:	b	21bcc <str_set_visit@@Base+0x48>

00021f7c <ptr_set_destroy@@Base>:
   21f7c:	cmp	r1, #0
   21f80:	push	{r4, lr}
   21f84:	mov	r4, r0
   21f88:	beq	21f90 <ptr_set_destroy@@Base+0x14>
   21f8c:	bl	21b88 <str_set_visit@@Base+0x4>
   21f90:	mov	r0, r4
   21f94:	pop	{r4, lr}
   21f98:	b	21bcc <str_set_visit@@Base+0x48>

00021f9c <ptr_set_init@@Base>:
   21f9c:	push	{r4, r5, r6, lr}
   21fa0:	mov	r2, #179	; 0xb3
   21fa4:	mov	r5, r0
   21fa8:	mov	r4, #4
   21fac:	mul	r3, r2, r4
   21fb0:	cmp	r1, r3, lsr #8
   21fb4:	bhi	21fe4 <ptr_set_init@@Base+0x48>
   21fb8:	mov	r1, #4
   21fbc:	mov	r0, r4
   21fc0:	bl	13ec0 <calloc@plt>
   21fc4:	cmp	r0, #0
   21fc8:	str	r0, [r5]
   21fcc:	movne	r0, #0
   21fd0:	mvneq	r0, #0
   21fd4:	strne	r4, [r5, #12]
   21fd8:	strne	r0, [r5, #4]
   21fdc:	strne	r0, [r5, #8]
   21fe0:	pop	{r4, r5, r6, pc}
   21fe4:	lsl	r4, r4, #1
   21fe8:	b	21fac <ptr_set_init@@Base+0x10>

00021fec <ptr_set_resize@@Base>:
   21fec:	b	21dbc <str_set_visit@@Base+0x238>

00021ff0 <ptr_set_insert@@Base>:
   21ff0:	mov	r2, r3
   21ff4:	ldr	r3, [sp]
   21ff8:	b	21c28 <str_set_visit@@Base+0xa4>

00021ffc <ptr_set_insert_item@@Base>:
   21ffc:	mov	r3, r2
   22000:	mov	r2, r1
   22004:	b	21c28 <str_set_visit@@Base+0xa4>

00022008 <ptr_set_find@@Base>:
   22008:	b	21e90 <str_set_visit@@Base+0x30c>

0002200c <ptr_set_find_item@@Base>:
   2200c:	b	21e90 <str_set_visit@@Base+0x30c>

00022010 <ptr_set_remove@@Base>:
   22010:	b	21ef4 <str_set_visit@@Base+0x370>

00022014 <ptr_set_remove_item@@Base>:
   22014:	b	21ef4 <str_set_visit@@Base+0x370>

00022018 <ptr_set_visit@@Base>:
   22018:	b	21b88 <str_set_visit@@Base+0x4>
   2201c:	push	{r4, r5, r6, r7, r8, lr}
   22020:	mov	r5, r0
   22024:	mov	r7, r1
   22028:	mov	r8, r2
   2202c:	mov	r4, #0
   22030:	ldr	r6, [r0]
   22034:	ldr	r3, [r5, #12]
   22038:	cmp	r3, r4
   2203c:	popls	{r4, r5, r6, r7, r8, pc}
   22040:	ldr	r1, [r6, r4, lsl #2]
   22044:	cmp	r1, #0
   22048:	cmpne	r1, #2
   2204c:	beq	22058 <ptr_set_visit@@Base+0x40>
   22050:	mov	r0, r8
   22054:	blx	r7
   22058:	add	r4, r4, #1
   2205c:	b	22034 <ptr_set_visit@@Base+0x1c>
   22060:	push	{r4, lr}
   22064:	mov	r4, r0
   22068:	ldr	r0, [r0]
   2206c:	cmp	r0, #0
   22070:	beq	22078 <ptr_set_visit@@Base+0x60>
   22074:	bl	13ef0 <free@plt>
   22078:	mov	r0, r4
   2207c:	mov	r2, #16
   22080:	pop	{r4, lr}
   22084:	mov	r1, #0
   22088:	b	13fc8 <memset@plt>
   2208c:	push	{r0, r1, r2, r3, r4, lr}
   22090:	add	r3, sp, #8
   22094:	mov	r2, r1
   22098:	str	r3, [sp, #4]
   2209c:	ldr	r3, [pc, #20]	; 220b8 <ptr_set_visit@@Base+0xa0>
   220a0:	str	r3, [sp]
   220a4:	mov	r3, #0
   220a8:	bl	2c980 <cmetrohash64_1@@Base>
   220ac:	ldr	r0, [sp, #8]
   220b0:	add	sp, sp, #20
   220b4:	pop	{pc}		; (ldr pc, [sp], #4)
   220b8:	svccs	0x00693b52
   220bc:	ldr	r3, [r2, #4]
   220c0:	ldr	r2, [r3, #4]
   220c4:	cmp	r1, r2
   220c8:	bne	220e8 <ptr_set_visit@@Base+0xd0>
   220cc:	mov	r2, r1
   220d0:	push	{r4, lr}
   220d4:	ldr	r1, [r3]
   220d8:	bl	13f14 <memcmp@plt>
   220dc:	clz	r0, r0
   220e0:	lsr	r0, r0, #5
   220e4:	pop	{r4, pc}
   220e8:	mov	r0, #0
   220ec:	bx	lr
   220f0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   220f4:	subs	r8, r3, #0
   220f8:	str	r1, [sp]
   220fc:	bne	22114 <ptr_set_visit@@Base+0xfc>
   22100:	ldr	r3, [pc, #384]	; 22288 <ptr_set_visit@@Base+0x270>
   22104:	mov	r2, #114	; 0x72
   22108:	ldr	r1, [pc, #380]	; 2228c <ptr_set_visit@@Base+0x274>
   2210c:	ldr	r0, [pc, #380]	; 22290 <ptr_set_visit@@Base+0x278>
   22110:	bl	14070 <__assert_fail@plt>
   22114:	cmp	r8, #2
   22118:	bne	22130 <ptr_set_visit@@Base+0x118>
   2211c:	ldr	r3, [pc, #356]	; 22288 <ptr_set_visit@@Base+0x270>
   22120:	mov	r2, #115	; 0x73
   22124:	ldr	r1, [pc, #352]	; 2228c <ptr_set_visit@@Base+0x274>
   22128:	ldr	r0, [pc, #356]	; 22294 <ptr_set_visit@@Base+0x27c>
   2212c:	b	22110 <ptr_set_visit@@Base+0xf8>
   22130:	cmp	r8, #1
   22134:	bne	2214c <ptr_set_visit@@Base+0x134>
   22138:	ldr	r3, [pc, #328]	; 22288 <ptr_set_visit@@Base+0x270>
   2213c:	mov	r2, #116	; 0x74
   22140:	ldr	r1, [pc, #324]	; 2228c <ptr_set_visit@@Base+0x274>
   22144:	ldr	r0, [pc, #332]	; 22298 <ptr_set_visit@@Base+0x280>
   22148:	b	22110 <ptr_set_visit@@Base+0xf8>
   2214c:	mov	fp, r2
   22150:	mov	r3, #179	; 0xb3
   22154:	ldr	r1, [r0, #8]
   22158:	mov	r6, r0
   2215c:	ldr	r2, [r0, #12]
   22160:	mul	r3, r3, r2
   22164:	cmp	r1, r3, lsr #8
   22168:	bcc	22198 <ptr_set_visit@@Base+0x180>
   2216c:	lsl	r1, r1, #1
   22170:	bl	222a8 <ptr_set_visit@@Base+0x290>
   22174:	cmp	r0, #0
   22178:	beq	22198 <ptr_set_visit@@Base+0x180>
   2217c:	ldr	r3, [pc, #280]	; 2229c <ptr_set_visit@@Base+0x284>
   22180:	ldr	r2, [pc, #280]	; 222a0 <ptr_set_visit@@Base+0x288>
   22184:	ldr	r1, [pc, #280]	; 222a4 <ptr_set_visit@@Base+0x28c>
   22188:	ldr	r0, [r3]
   2218c:	bl	13fb0 <fprintf@plt>
   22190:	mov	r0, #1
   22194:	bl	13f98 <exit@plt>
   22198:	mov	r1, fp
   2219c:	ldr	r0, [sp]
   221a0:	ldr	sl, [r6]
   221a4:	ldr	r9, [r6, #12]
   221a8:	bl	2208c <ptr_set_visit@@Base+0x74>
   221ac:	ldr	r3, [sp, #48]	; 0x30
   221b0:	add	r4, r0, #1
   221b4:	sub	r9, r9, #1
   221b8:	and	r2, r9, r0
   221bc:	sub	r3, r3, #2
   221c0:	cmp	r3, #1
   221c4:	ldrls	r3, [r6, #8]
   221c8:	movhi	r7, #0
   221cc:	addls	r3, r3, #1
   221d0:	strls	r3, [r6, #8]
   221d4:	bls	2220c <ptr_set_visit@@Base+0x1f4>
   221d8:	ldr	r5, [sl, r2, lsl #2]
   221dc:	add	r3, sl, r2, lsl #2
   221e0:	cmp	r5, #0
   221e4:	bne	2223c <ptr_set_visit@@Base+0x224>
   221e8:	cmp	r7, #0
   221ec:	moveq	r7, r3
   221f0:	ldr	r3, [r6, #8]
   221f4:	add	r3, r3, #1
   221f8:	str	r3, [r6, #8]
   221fc:	str	r8, [r7]
   22200:	b	22230 <ptr_set_visit@@Base+0x218>
   22204:	and	r2, r9, r4
   22208:	add	r4, r4, #1
   2220c:	ldr	r3, [sl, r2, lsl #2]
   22210:	add	r1, sl, r2, lsl #2
   22214:	subs	r5, r3, #2
   22218:	movne	r5, #1
   2221c:	cmp	r3, #0
   22220:	moveq	r5, #0
   22224:	cmp	r5, #0
   22228:	bne	22204 <ptr_set_visit@@Base+0x1ec>
   2222c:	str	r8, [r1]
   22230:	mov	r0, r5
   22234:	add	sp, sp, #12
   22238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2223c:	cmp	r5, #2
   22240:	bne	22258 <ptr_set_visit@@Base+0x240>
   22244:	cmp	r7, #0
   22248:	moveq	r7, r3
   2224c:	and	r2, r9, r4
   22250:	add	r4, r4, #1
   22254:	b	221d8 <ptr_set_visit@@Base+0x1c0>
   22258:	mov	r2, r5
   2225c:	mov	r1, fp
   22260:	ldr	r0, [sp]
   22264:	str	r3, [sp, #4]
   22268:	bl	220bc <ptr_set_visit@@Base+0xa4>
   2226c:	cmp	r0, #0
   22270:	ldr	r3, [sp, #4]
   22274:	beq	2224c <ptr_set_visit@@Base+0x234>
   22278:	ldr	r2, [sp, #48]	; 0x30
   2227c:	cmp	r2, #0
   22280:	streq	r8, [r3]
   22284:	b	22230 <ptr_set_visit@@Base+0x218>
   22288:	andeq	r6, r4, r8, lsr r4
   2228c:	andeq	r6, r4, r0, asr #6
   22290:	muleq	r4, r0, r3
   22294:	andeq	r6, r4, r7, lsr #7
   22298:			; <UNDEFINED> instruction: 0x000463be
   2229c:	strheq	sl, [r5], -r0
   222a0:	ldrdeq	r6, [r4], -r3
   222a4:	andeq	r6, r4, r6, lsl #8
   222a8:	ldr	r3, [r0, #8]
   222ac:	mov	r2, #179	; 0xb3
   222b0:	push	{r4, r5, r6, r7, lr}
   222b4:	mov	r4, r0
   222b8:	sub	sp, sp, #28
   222bc:	mov	r6, #4
   222c0:	ldr	r7, [r0]
   222c4:	cmp	r1, r3
   222c8:	movcc	r1, r3
   222cc:	mul	r3, r2, r6
   222d0:	cmp	r1, r3, lsr #8
   222d4:	bhi	22350 <ptr_set_visit@@Base+0x338>
   222d8:	mov	r1, #4
   222dc:	mov	r0, r6
   222e0:	bl	13ec0 <calloc@plt>
   222e4:	cmp	r0, #0
   222e8:	str	r0, [sp, #8]
   222ec:	mvneq	r0, #0
   222f0:	beq	22348 <ptr_set_visit@@Base+0x330>
   222f4:	mov	r5, #0
   222f8:	str	r6, [sp, #20]
   222fc:	mov	r6, #3
   22300:	str	r5, [sp, #12]
   22304:	str	r5, [sp, #16]
   22308:	ldr	r3, [r4, #12]
   2230c:	cmp	r3, r5
   22310:	bhi	22358 <ptr_set_visit@@Base+0x340>
   22314:	mov	r0, r4
   22318:	bl	22060 <ptr_set_visit@@Base+0x48>
   2231c:	add	r2, sp, #8
   22320:	add	ip, sp, #24
   22324:	mov	r3, r2
   22328:	add	r4, r4, #8
   2232c:	ldm	r3!, {r0, r1}
   22330:	cmp	r3, ip
   22334:	mov	r2, r3
   22338:	str	r0, [r4, #-8]
   2233c:	str	r1, [r4, #-4]
   22340:	bne	22324 <ptr_set_visit@@Base+0x30c>
   22344:	mov	r0, #0
   22348:	add	sp, sp, #28
   2234c:	pop	{r4, r5, r6, r7, pc}
   22350:	lsl	r6, r6, #1
   22354:	b	222cc <ptr_set_visit@@Base+0x2b4>
   22358:	ldr	r3, [r7, r5, lsl #2]
   2235c:	cmp	r3, #0
   22360:	cmpne	r3, #2
   22364:	beq	2237c <ptr_set_visit@@Base+0x364>
   22368:	ldr	r1, [r3, #4]
   2236c:	add	r0, sp, #8
   22370:	str	r6, [sp]
   22374:	ldm	r1, {r1, r2}
   22378:	bl	220f0 <ptr_set_visit@@Base+0xd8>
   2237c:	add	r5, r5, #1
   22380:	b	22308 <ptr_set_visit@@Base+0x2f0>
   22384:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22388:	ldr	r9, [r0]
   2238c:	cmp	r9, #0
   22390:	bne	223a0 <ptr_set_visit@@Base+0x388>
   22394:	mov	r5, #0
   22398:	mov	r0, r5
   2239c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223a0:	ldr	r6, [r0, #12]
   223a4:	mov	r7, r1
   223a8:	mov	r1, r2
   223ac:	mov	r0, r7
   223b0:	mov	r8, r2
   223b4:	bl	2208c <ptr_set_visit@@Base+0x74>
   223b8:	add	r4, r0, #1
   223bc:	sub	r6, r6, #1
   223c0:	and	r3, r6, r0
   223c4:	ldr	r5, [r9, r3, lsl #2]
   223c8:	cmp	r5, #0
   223cc:	beq	22394 <ptr_set_visit@@Base+0x37c>
   223d0:	cmp	r5, #2
   223d4:	beq	223f0 <ptr_set_visit@@Base+0x3d8>
   223d8:	mov	r2, r5
   223dc:	mov	r1, r8
   223e0:	mov	r0, r7
   223e4:	bl	220bc <ptr_set_visit@@Base+0xa4>
   223e8:	cmp	r0, #0
   223ec:	bne	22398 <ptr_set_visit@@Base+0x380>
   223f0:	and	r3, r6, r4
   223f4:	add	r4, r4, #1
   223f8:	b	223c4 <ptr_set_visit@@Base+0x3ac>
   223fc:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22400:	ldr	sl, [r0]
   22404:	cmp	sl, #0
   22408:	bne	2241c <ptr_set_visit@@Base+0x404>
   2240c:	mov	r6, #0
   22410:	mov	r0, r6
   22414:	add	sp, sp, #4
   22418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2241c:	mov	r5, r0
   22420:	mov	r8, r1
   22424:	ldr	r7, [r5, #12]
   22428:	mov	r1, r2
   2242c:	mov	r0, r8
   22430:	mov	r9, r2
   22434:	bl	2208c <ptr_set_visit@@Base+0x74>
   22438:	add	r4, r0, #1
   2243c:	sub	r7, r7, #1
   22440:	and	r3, r7, r0
   22444:	ldr	r6, [sl, r3, lsl #2]
   22448:	add	fp, sl, r3, lsl #2
   2244c:	cmp	r6, #0
   22450:	beq	2240c <ptr_set_visit@@Base+0x3f4>
   22454:	cmp	r6, #2
   22458:	beq	2248c <ptr_set_visit@@Base+0x474>
   2245c:	mov	r2, r6
   22460:	mov	r1, r9
   22464:	mov	r0, r8
   22468:	bl	220bc <ptr_set_visit@@Base+0xa4>
   2246c:	cmp	r0, #0
   22470:	beq	2248c <ptr_set_visit@@Base+0x474>
   22474:	mov	r3, #2
   22478:	str	r3, [fp]
   2247c:	ldr	r3, [r5, #8]
   22480:	sub	r3, r3, #1
   22484:	str	r3, [r5, #8]
   22488:	b	22410 <ptr_set_visit@@Base+0x3f8>
   2248c:	and	r3, r4, r7
   22490:	add	r4, r4, #1
   22494:	b	22444 <ptr_set_visit@@Base+0x42c>

00022498 <fb_symbol_table_clear@@Base>:
   22498:	b	22060 <ptr_set_visit@@Base+0x48>

0002249c <fb_symbol_table_destroy@@Base>:
   2249c:	cmp	r1, #0
   224a0:	push	{r4, lr}
   224a4:	mov	r4, r0
   224a8:	beq	224b0 <fb_symbol_table_destroy@@Base+0x14>
   224ac:	bl	2201c <ptr_set_visit@@Base+0x4>
   224b0:	mov	r0, r4
   224b4:	pop	{r4, lr}
   224b8:	b	22060 <ptr_set_visit@@Base+0x48>

000224bc <fb_symbol_table_init@@Base>:
   224bc:	push	{r4, r5, r6, lr}
   224c0:	mov	r2, #179	; 0xb3
   224c4:	mov	r5, r0
   224c8:	mov	r4, #4
   224cc:	mul	r3, r2, r4
   224d0:	cmp	r1, r3, lsr #8
   224d4:	bhi	22504 <fb_symbol_table_init@@Base+0x48>
   224d8:	mov	r1, #4
   224dc:	mov	r0, r4
   224e0:	bl	13ec0 <calloc@plt>
   224e4:	cmp	r0, #0
   224e8:	str	r0, [r5]
   224ec:	movne	r0, #0
   224f0:	mvneq	r0, #0
   224f4:	strne	r4, [r5, #12]
   224f8:	strne	r0, [r5, #4]
   224fc:	strne	r0, [r5, #8]
   22500:	pop	{r4, r5, r6, pc}
   22504:	lsl	r4, r4, #1
   22508:	b	224cc <fb_symbol_table_init@@Base+0x10>

0002250c <fb_symbol_table_resize@@Base>:
   2250c:	b	222a8 <ptr_set_visit@@Base+0x290>

00022510 <fb_symbol_table_insert@@Base>:
   22510:	b	220f0 <ptr_set_visit@@Base+0xd8>

00022514 <fb_symbol_table_insert_item@@Base>:
   22514:	ldr	ip, [r1, #4]
   22518:	mov	r3, r1
   2251c:	push	{r0, r1, r2, lr}
   22520:	str	r2, [sp]
   22524:	ldm	ip, {r1, r2}
   22528:	bl	220f0 <ptr_set_visit@@Base+0xd8>
   2252c:	add	sp, sp, #12
   22530:	pop	{pc}		; (ldr pc, [sp], #4)

00022534 <fb_symbol_table_find@@Base>:
   22534:	b	22384 <ptr_set_visit@@Base+0x36c>

00022538 <fb_symbol_table_find_item@@Base>:
   22538:	ldr	r3, [r1, #4]
   2253c:	ldm	r3, {r1, r2}
   22540:	b	22384 <ptr_set_visit@@Base+0x36c>

00022544 <fb_symbol_table_remove@@Base>:
   22544:	b	223fc <ptr_set_visit@@Base+0x3e4>

00022548 <fb_symbol_table_remove_item@@Base>:
   22548:	ldr	r3, [r1, #4]
   2254c:	ldm	r3, {r1, r2}
   22550:	b	223fc <ptr_set_visit@@Base+0x3e4>

00022554 <fb_symbol_table_visit@@Base>:
   22554:	b	2201c <ptr_set_visit@@Base+0x4>
   22558:	push	{r4, r5, r6, r7, r8, lr}
   2255c:	mov	r5, r0
   22560:	mov	r7, r1
   22564:	mov	r8, r2
   22568:	mov	r4, #0
   2256c:	ldr	r6, [r0]
   22570:	ldr	r3, [r5, #12]
   22574:	cmp	r3, r4
   22578:	popls	{r4, r5, r6, r7, r8, pc}
   2257c:	ldr	r1, [r6, r4, lsl #2]
   22580:	cmp	r1, #0
   22584:	cmpne	r1, #2
   22588:	beq	22594 <fb_symbol_table_visit@@Base+0x40>
   2258c:	mov	r0, r8
   22590:	blx	r7
   22594:	add	r4, r4, #1
   22598:	b	22570 <fb_symbol_table_visit@@Base+0x1c>
   2259c:	push	{r4, lr}
   225a0:	mov	r4, r0
   225a4:	ldr	r0, [r0]
   225a8:	cmp	r0, #0
   225ac:	beq	225b4 <fb_symbol_table_visit@@Base+0x60>
   225b0:	bl	13ef0 <free@plt>
   225b4:	mov	r0, r4
   225b8:	mov	r2, #16
   225bc:	pop	{r4, lr}
   225c0:	mov	r1, #0
   225c4:	b	13fc8 <memset@plt>
   225c8:	cmp	r1, #0
   225cc:	push	{r4, r5, r6, lr}
   225d0:	mov	r5, r0
   225d4:	mov	r4, r2
   225d8:	movle	r6, r1
   225dc:	ble	22638 <fb_symbol_table_visit@@Base+0xe4>
   225e0:	cmp	r4, #0
   225e4:	bne	22654 <fb_symbol_table_visit@@Base+0x100>
   225e8:	mov	r0, #0
   225ec:	pop	{r4, r5, r6, pc}
   225f0:	ldr	r3, [r4, #4]
   225f4:	ldr	r1, [r5, #4]
   225f8:	ldr	r2, [r3, #4]
   225fc:	ldr	r0, [r1, #4]
   22600:	cmp	r2, r0
   22604:	bne	225e8 <fb_symbol_table_visit@@Base+0x94>
   22608:	ldr	r1, [r1]
   2260c:	ldr	r0, [r3]
   22610:	bl	14058 <strncmp@plt>
   22614:	cmp	r0, #0
   22618:	bne	225e8 <fb_symbol_table_visit@@Base+0x94>
   2261c:	adds	r6, r6, #1
   22620:	ldr	r4, [r4]
   22624:	ldr	r5, [r5]
   22628:	bne	22638 <fb_symbol_table_visit@@Base+0xe4>
   2262c:	clz	r0, r4
   22630:	lsr	r0, r0, #5
   22634:	pop	{r4, r5, r6, pc}
   22638:	cmp	r4, #0
   2263c:	cmpne	r5, #0
   22640:	bne	225f0 <fb_symbol_table_visit@@Base+0x9c>
   22644:	orrs	r3, r4, r5
   22648:	moveq	r0, #1
   2264c:	movne	r0, #0
   22650:	pop	{r4, r5, r6, pc}
   22654:	ldr	r3, [r4, #4]
   22658:	ldm	r3, {r0, r3}
   2265c:	cmp	r3, r1
   22660:	bhi	225e8 <fb_symbol_table_visit@@Base+0x94>
   22664:	mov	r2, #0
   22668:	cmp	r3, r2
   2266c:	bne	22684 <fb_symbol_table_visit@@Base+0x130>
   22670:	cmp	r3, r1
   22674:	bne	2269c <fb_symbol_table_visit@@Base+0x148>
   22678:	ldr	r0, [r4]
   2267c:	clz	r0, r0
   22680:	b	22630 <fb_symbol_table_visit@@Base+0xdc>
   22684:	ldrb	lr, [r0, r2]
   22688:	ldrb	ip, [r5, r2]
   2268c:	cmp	lr, ip
   22690:	bne	225e8 <fb_symbol_table_visit@@Base+0x94>
   22694:	add	r2, r2, #1
   22698:	b	22668 <fb_symbol_table_visit@@Base+0x114>
   2269c:	ldrb	r2, [r5, r3]
   226a0:	cmp	r2, #46	; 0x2e
   226a4:	bne	225e8 <fb_symbol_table_visit@@Base+0x94>
   226a8:	mvn	r2, r3
   226ac:	add	r3, r3, #1
   226b0:	ldr	r4, [r4]
   226b4:	add	r1, r1, r2
   226b8:	add	r5, r5, r3
   226bc:	b	225e0 <fb_symbol_table_visit@@Base+0x8c>
   226c0:	cmp	r1, #0
   226c4:	push	{r4, r5, r6, r7, r8, lr}
   226c8:	mov	ip, r0
   226cc:	ble	22758 <fb_symbol_table_visit@@Base+0x204>
   226d0:	mov	r0, #0
   226d4:	ldr	r7, [pc, #236]	; 227c8 <fb_symbol_table_visit@@Base+0x274>
   226d8:	ldr	r5, [pc, #236]	; 227cc <fb_symbol_table_visit@@Base+0x278>
   226dc:	ldr	r6, [pc, #236]	; 227d0 <fb_symbol_table_visit@@Base+0x27c>
   226e0:	mov	r3, #0
   226e4:	cmp	r3, r1
   226e8:	bne	22770 <fb_symbol_table_visit@@Base+0x21c>
   226ec:	sub	r4, r3, #1
   226f0:	mov	lr, ip
   226f4:	add	r4, ip, r4
   226f8:	mov	r2, r7
   226fc:	b	2278c <fb_symbol_table_visit@@Base+0x238>
   22700:	ldr	r3, [ip, #4]
   22704:	ldm	r3, {r1, r2}
   22708:	mov	r3, r4
   2270c:	sub	r2, r2, #1
   22710:	add	r2, r1, r2
   22714:	cmp	r2, r1
   22718:	beq	22728 <fb_symbol_table_visit@@Base+0x1d4>
   2271c:	ldrb	r7, [r1], #1
   22720:	cmp	r7, #0
   22724:	bne	2274c <fb_symbol_table_visit@@Base+0x1f8>
   22728:	eor	r2, r0, r3
   2272c:	adds	lr, lr, #1
   22730:	ldr	ip, [ip]
   22734:	eor	r2, r2, r5
   22738:	mul	r0, r6, r2
   2273c:	popeq	{r4, r5, r6, r7, r8, pc}
   22740:	cmp	ip, #0
   22744:	bne	22700 <fb_symbol_table_visit@@Base+0x1ac>
   22748:	pop	{r4, r5, r6, r7, r8, pc}
   2274c:	add	r3, r3, r3, lsl #5
   22750:	eor	r3, r3, r7
   22754:	b	22714 <fb_symbol_table_visit@@Base+0x1c0>
   22758:	mov	lr, r1
   2275c:	mov	r0, #0
   22760:	ldr	r4, [pc, #96]	; 227c8 <fb_symbol_table_visit@@Base+0x274>
   22764:	ldr	r5, [pc, #96]	; 227cc <fb_symbol_table_visit@@Base+0x278>
   22768:	ldr	r6, [pc, #96]	; 227d0 <fb_symbol_table_visit@@Base+0x27c>
   2276c:	b	22740 <fb_symbol_table_visit@@Base+0x1ec>
   22770:	ldrb	r2, [ip, r3]
   22774:	cmp	r2, #46	; 0x2e
   22778:	beq	226ec <fb_symbol_table_visit@@Base+0x198>
   2277c:	add	r3, r3, #1
   22780:	b	226e4 <fb_symbol_table_visit@@Base+0x190>
   22784:	add	r2, r2, r2, lsl #5
   22788:	eor	r2, r2, r8
   2278c:	cmp	r4, lr
   22790:	beq	227a0 <fb_symbol_table_visit@@Base+0x24c>
   22794:	ldrb	r8, [lr], #1
   22798:	cmp	r8, #0
   2279c:	bne	22784 <fb_symbol_table_visit@@Base+0x230>
   227a0:	eor	r2, r2, r0
   227a4:	cmp	r1, r3
   227a8:	eor	r2, r2, r5
   227ac:	mul	r0, r6, r2
   227b0:	popeq	{r4, r5, r6, r7, r8, pc}
   227b4:	mvn	r2, r3
   227b8:	add	r3, r3, #1
   227bc:	add	r1, r1, r2
   227c0:	add	ip, ip, r3
   227c4:	b	226e0 <fb_symbol_table_visit@@Base+0x18c>
   227c8:	svccs	0x00692e57
   227cc:	svccs	0x00693b52
   227d0:			; <UNDEFINED> instruction: 0x9e3779b1
   227d4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   227d8:	subs	r8, r3, #0
   227dc:	str	r1, [sp]
   227e0:	bne	227f8 <fb_symbol_table_visit@@Base+0x2a4>
   227e4:	ldr	r3, [pc, #384]	; 2296c <fb_symbol_table_visit@@Base+0x418>
   227e8:	mov	r2, #114	; 0x72
   227ec:	ldr	r1, [pc, #380]	; 22970 <fb_symbol_table_visit@@Base+0x41c>
   227f0:	ldr	r0, [pc, #380]	; 22974 <fb_symbol_table_visit@@Base+0x420>
   227f4:	bl	14070 <__assert_fail@plt>
   227f8:	cmp	r8, #2
   227fc:	bne	22814 <fb_symbol_table_visit@@Base+0x2c0>
   22800:	ldr	r3, [pc, #356]	; 2296c <fb_symbol_table_visit@@Base+0x418>
   22804:	mov	r2, #115	; 0x73
   22808:	ldr	r1, [pc, #352]	; 22970 <fb_symbol_table_visit@@Base+0x41c>
   2280c:	ldr	r0, [pc, #356]	; 22978 <fb_symbol_table_visit@@Base+0x424>
   22810:	b	227f4 <fb_symbol_table_visit@@Base+0x2a0>
   22814:	cmp	r8, #1
   22818:	bne	22830 <fb_symbol_table_visit@@Base+0x2dc>
   2281c:	ldr	r3, [pc, #328]	; 2296c <fb_symbol_table_visit@@Base+0x418>
   22820:	mov	r2, #116	; 0x74
   22824:	ldr	r1, [pc, #324]	; 22970 <fb_symbol_table_visit@@Base+0x41c>
   22828:	ldr	r0, [pc, #332]	; 2297c <fb_symbol_table_visit@@Base+0x428>
   2282c:	b	227f4 <fb_symbol_table_visit@@Base+0x2a0>
   22830:	mov	fp, r2
   22834:	mov	r3, #179	; 0xb3
   22838:	ldr	r1, [r0, #8]
   2283c:	mov	r6, r0
   22840:	ldr	r2, [r0, #12]
   22844:	mul	r3, r3, r2
   22848:	cmp	r1, r3, lsr #8
   2284c:	bcc	2287c <fb_symbol_table_visit@@Base+0x328>
   22850:	lsl	r1, r1, #1
   22854:	bl	2298c <fb_symbol_table_visit@@Base+0x438>
   22858:	cmp	r0, #0
   2285c:	beq	2287c <fb_symbol_table_visit@@Base+0x328>
   22860:	ldr	r3, [pc, #280]	; 22980 <fb_symbol_table_visit@@Base+0x42c>
   22864:	ldr	r2, [pc, #280]	; 22984 <fb_symbol_table_visit@@Base+0x430>
   22868:	ldr	r1, [pc, #280]	; 22988 <fb_symbol_table_visit@@Base+0x434>
   2286c:	ldr	r0, [r3]
   22870:	bl	13fb0 <fprintf@plt>
   22874:	mov	r0, #1
   22878:	bl	13f98 <exit@plt>
   2287c:	mov	r1, fp
   22880:	ldr	r0, [sp]
   22884:	bl	226c0 <fb_symbol_table_visit@@Base+0x16c>
   22888:	ldr	r3, [sp, #48]	; 0x30
   2288c:	add	r4, r0, #1
   22890:	ldr	sl, [r6]
   22894:	ldr	r9, [r6, #12]
   22898:	sub	r3, r3, #2
   2289c:	cmp	r3, #1
   228a0:	ldrls	r3, [r6, #8]
   228a4:	movhi	r7, #0
   228a8:	sub	r9, r9, #1
   228ac:	and	r2, r9, r0
   228b0:	addls	r3, r3, #1
   228b4:	strls	r3, [r6, #8]
   228b8:	bls	228f0 <fb_symbol_table_visit@@Base+0x39c>
   228bc:	ldr	r5, [sl, r2, lsl #2]
   228c0:	add	r3, sl, r2, lsl #2
   228c4:	cmp	r5, #0
   228c8:	bne	22920 <fb_symbol_table_visit@@Base+0x3cc>
   228cc:	cmp	r7, #0
   228d0:	moveq	r7, r3
   228d4:	ldr	r3, [r6, #8]
   228d8:	add	r3, r3, #1
   228dc:	str	r3, [r6, #8]
   228e0:	str	r8, [r7]
   228e4:	b	22914 <fb_symbol_table_visit@@Base+0x3c0>
   228e8:	and	r2, r9, r4
   228ec:	add	r4, r4, #1
   228f0:	ldr	r3, [sl, r2, lsl #2]
   228f4:	add	r1, sl, r2, lsl #2
   228f8:	subs	r5, r3, #2
   228fc:	movne	r5, #1
   22900:	cmp	r3, #0
   22904:	moveq	r5, #0
   22908:	cmp	r5, #0
   2290c:	bne	228e8 <fb_symbol_table_visit@@Base+0x394>
   22910:	str	r8, [r1]
   22914:	mov	r0, r5
   22918:	add	sp, sp, #12
   2291c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22920:	cmp	r5, #2
   22924:	bne	2293c <fb_symbol_table_visit@@Base+0x3e8>
   22928:	cmp	r7, #0
   2292c:	moveq	r7, r3
   22930:	and	r2, r9, r4
   22934:	add	r4, r4, #1
   22938:	b	228bc <fb_symbol_table_visit@@Base+0x368>
   2293c:	mov	r1, fp
   22940:	ldr	r2, [r5]
   22944:	str	r3, [sp, #4]
   22948:	ldr	r0, [sp]
   2294c:	bl	225c8 <fb_symbol_table_visit@@Base+0x74>
   22950:	cmp	r0, #0
   22954:	ldr	r3, [sp, #4]
   22958:	beq	22930 <fb_symbol_table_visit@@Base+0x3dc>
   2295c:	ldr	r2, [sp, #48]	; 0x30
   22960:	cmp	r2, #0
   22964:	streq	r8, [r3]
   22968:	b	22914 <fb_symbol_table_visit@@Base+0x3c0>
   2296c:	andeq	r6, r4, r0, asr r4
   22970:	andeq	r6, r4, r0, asr #6
   22974:	muleq	r4, r0, r3
   22978:	andeq	r6, r4, r7, lsr #7
   2297c:			; <UNDEFINED> instruction: 0x000463be
   22980:	strheq	sl, [r5], -r0
   22984:	ldrdeq	r6, [r4], -r3
   22988:	andeq	r6, r4, r6, lsl #8
   2298c:	ldr	r3, [r0, #8]
   22990:	mov	r2, #179	; 0xb3
   22994:	push	{r4, r5, r6, r7, lr}
   22998:	mov	r4, r0
   2299c:	sub	sp, sp, #28
   229a0:	mov	r6, #4
   229a4:	ldr	r7, [r0]
   229a8:	cmp	r1, r3
   229ac:	movcc	r1, r3
   229b0:	mul	r3, r2, r6
   229b4:	cmp	r1, r3, lsr #8
   229b8:	bhi	22a34 <fb_symbol_table_visit@@Base+0x4e0>
   229bc:	mov	r1, #4
   229c0:	mov	r0, r6
   229c4:	bl	13ec0 <calloc@plt>
   229c8:	cmp	r0, #0
   229cc:	str	r0, [sp, #8]
   229d0:	mvneq	r0, #0
   229d4:	beq	22a2c <fb_symbol_table_visit@@Base+0x4d8>
   229d8:	mov	r5, #0
   229dc:	str	r6, [sp, #20]
   229e0:	mov	r6, #3
   229e4:	str	r5, [sp, #12]
   229e8:	str	r5, [sp, #16]
   229ec:	ldr	r3, [r4, #12]
   229f0:	cmp	r3, r5
   229f4:	bhi	22a3c <fb_symbol_table_visit@@Base+0x4e8>
   229f8:	mov	r0, r4
   229fc:	bl	2259c <fb_symbol_table_visit@@Base+0x48>
   22a00:	add	r2, sp, #8
   22a04:	add	ip, sp, #24
   22a08:	mov	r3, r2
   22a0c:	add	r4, r4, #8
   22a10:	ldm	r3!, {r0, r1}
   22a14:	cmp	r3, ip
   22a18:	mov	r2, r3
   22a1c:	str	r0, [r4, #-8]
   22a20:	str	r1, [r4, #-4]
   22a24:	bne	22a08 <fb_symbol_table_visit@@Base+0x4b4>
   22a28:	mov	r0, #0
   22a2c:	add	sp, sp, #28
   22a30:	pop	{r4, r5, r6, r7, pc}
   22a34:	lsl	r6, r6, #1
   22a38:	b	229b0 <fb_symbol_table_visit@@Base+0x45c>
   22a3c:	ldr	r3, [r7, r5, lsl #2]
   22a40:	cmp	r3, #0
   22a44:	cmpne	r3, #2
   22a48:	beq	22a60 <fb_symbol_table_visit@@Base+0x50c>
   22a4c:	mov	r2, #0
   22a50:	add	r0, sp, #8
   22a54:	str	r6, [sp]
   22a58:	ldr	r1, [r3]
   22a5c:	bl	227d4 <fb_symbol_table_visit@@Base+0x280>
   22a60:	add	r5, r5, #1
   22a64:	b	229ec <fb_symbol_table_visit@@Base+0x498>
   22a68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22a6c:	ldr	r9, [r0]
   22a70:	cmp	r9, #0
   22a74:	moveq	r5, r9
   22a78:	beq	22aac <fb_symbol_table_visit@@Base+0x558>
   22a7c:	ldr	r6, [r0, #12]
   22a80:	mov	r7, r1
   22a84:	mov	r1, r2
   22a88:	mov	r0, r7
   22a8c:	mov	r8, r2
   22a90:	bl	226c0 <fb_symbol_table_visit@@Base+0x16c>
   22a94:	add	r4, r0, #1
   22a98:	sub	r6, r6, #1
   22a9c:	and	r3, r6, r0
   22aa0:	ldr	r5, [r9, r3, lsl #2]
   22aa4:	cmp	r5, #0
   22aa8:	bne	22ab4 <fb_symbol_table_visit@@Base+0x560>
   22aac:	mov	r0, r5
   22ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22ab4:	cmp	r5, #2
   22ab8:	beq	22ad4 <fb_symbol_table_visit@@Base+0x580>
   22abc:	mov	r1, r8
   22ac0:	mov	r0, r7
   22ac4:	ldr	r2, [r5]
   22ac8:	bl	225c8 <fb_symbol_table_visit@@Base+0x74>
   22acc:	cmp	r0, #0
   22ad0:	bne	22aac <fb_symbol_table_visit@@Base+0x558>
   22ad4:	and	r3, r6, r4
   22ad8:	add	r4, r4, #1
   22adc:	b	22aa0 <fb_symbol_table_visit@@Base+0x54c>
   22ae0:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ae4:	ldr	r7, [r0]
   22ae8:	cmp	r7, #0
   22aec:	moveq	r6, r7
   22af0:	beq	22b60 <fb_symbol_table_visit@@Base+0x60c>
   22af4:	mov	r9, r1
   22af8:	mov	r5, r0
   22afc:	mov	r1, r2
   22b00:	mov	r0, r9
   22b04:	mov	sl, r2
   22b08:	bl	226c0 <fb_symbol_table_visit@@Base+0x16c>
   22b0c:	ldr	r8, [r5, #12]
   22b10:	add	r4, r0, #1
   22b14:	sub	r8, r8, #1
   22b18:	and	r3, r8, r0
   22b1c:	ldr	r6, [r7, r3, lsl #2]
   22b20:	add	fp, r7, r3, lsl #2
   22b24:	cmp	r6, #0
   22b28:	beq	22b60 <fb_symbol_table_visit@@Base+0x60c>
   22b2c:	cmp	r6, #2
   22b30:	beq	22b6c <fb_symbol_table_visit@@Base+0x618>
   22b34:	mov	r1, sl
   22b38:	mov	r0, r9
   22b3c:	ldr	r2, [r6]
   22b40:	bl	225c8 <fb_symbol_table_visit@@Base+0x74>
   22b44:	cmp	r0, #0
   22b48:	beq	22b6c <fb_symbol_table_visit@@Base+0x618>
   22b4c:	mov	r3, #2
   22b50:	str	r3, [fp]
   22b54:	ldr	r3, [r5, #8]
   22b58:	sub	r3, r3, #1
   22b5c:	str	r3, [r5, #8]
   22b60:	mov	r0, r6
   22b64:	add	sp, sp, #4
   22b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b6c:	and	r3, r4, r8
   22b70:	add	r4, r4, #1
   22b74:	b	22b1c <fb_symbol_table_visit@@Base+0x5c8>

00022b78 <fb_scope_table_clear@@Base>:
   22b78:	b	2259c <fb_symbol_table_visit@@Base+0x48>

00022b7c <fb_scope_table_destroy@@Base>:
   22b7c:	cmp	r1, #0
   22b80:	push	{r4, lr}
   22b84:	mov	r4, r0
   22b88:	beq	22b90 <fb_scope_table_destroy@@Base+0x14>
   22b8c:	bl	22558 <fb_symbol_table_visit@@Base+0x4>
   22b90:	mov	r0, r4
   22b94:	pop	{r4, lr}
   22b98:	b	2259c <fb_symbol_table_visit@@Base+0x48>

00022b9c <fb_scope_table_init@@Base>:
   22b9c:	push	{r4, r5, r6, lr}
   22ba0:	mov	r2, #179	; 0xb3
   22ba4:	mov	r5, r0
   22ba8:	mov	r4, #4
   22bac:	mul	r3, r2, r4
   22bb0:	cmp	r1, r3, lsr #8
   22bb4:	bhi	22be4 <fb_scope_table_init@@Base+0x48>
   22bb8:	mov	r1, #4
   22bbc:	mov	r0, r4
   22bc0:	bl	13ec0 <calloc@plt>
   22bc4:	cmp	r0, #0
   22bc8:	str	r0, [r5]
   22bcc:	movne	r0, #0
   22bd0:	mvneq	r0, #0
   22bd4:	strne	r4, [r5, #12]
   22bd8:	strne	r0, [r5, #4]
   22bdc:	strne	r0, [r5, #8]
   22be0:	pop	{r4, r5, r6, pc}
   22be4:	lsl	r4, r4, #1
   22be8:	b	22bac <fb_scope_table_init@@Base+0x10>

00022bec <fb_scope_table_resize@@Base>:
   22bec:	b	2298c <fb_symbol_table_visit@@Base+0x438>

00022bf0 <fb_scope_table_insert@@Base>:
   22bf0:	b	227d4 <fb_symbol_table_visit@@Base+0x280>

00022bf4 <fb_scope_table_insert_item@@Base>:
   22bf4:	push	{r0, r1, r2, lr}
   22bf8:	mov	r3, r1
   22bfc:	ldr	r1, [r1]
   22c00:	str	r2, [sp]
   22c04:	mov	r2, #0
   22c08:	bl	227d4 <fb_symbol_table_visit@@Base+0x280>
   22c0c:	add	sp, sp, #12
   22c10:	pop	{pc}		; (ldr pc, [sp], #4)

00022c14 <fb_scope_table_find@@Base>:
   22c14:	b	22a68 <fb_symbol_table_visit@@Base+0x514>

00022c18 <fb_scope_table_find_item@@Base>:
   22c18:	mov	r2, #0
   22c1c:	ldr	r1, [r1]
   22c20:	b	22a68 <fb_symbol_table_visit@@Base+0x514>

00022c24 <fb_scope_table_remove@@Base>:
   22c24:	b	22ae0 <fb_symbol_table_visit@@Base+0x58c>

00022c28 <fb_scope_table_remove_item@@Base>:
   22c28:	mov	r2, #0
   22c2c:	ldr	r1, [r1]
   22c30:	b	22ae0 <fb_symbol_table_visit@@Base+0x58c>

00022c34 <fb_scope_table_visit@@Base>:
   22c34:	b	22558 <fb_symbol_table_visit@@Base+0x4>
   22c38:	push	{r4, r5, r6, r7, r8, lr}
   22c3c:	mov	r5, r0
   22c40:	mov	r7, r1
   22c44:	mov	r8, r2
   22c48:	mov	r4, #0
   22c4c:	ldr	r6, [r0]
   22c50:	ldr	r3, [r5, #12]
   22c54:	cmp	r3, r4
   22c58:	popls	{r4, r5, r6, r7, r8, pc}
   22c5c:	ldr	r1, [r6, r4, lsl #2]
   22c60:	cmp	r1, #0
   22c64:	cmpne	r1, #2
   22c68:	beq	22c74 <fb_scope_table_visit@@Base+0x40>
   22c6c:	mov	r0, r8
   22c70:	blx	r7
   22c74:	add	r4, r4, #1
   22c78:	b	22c50 <fb_scope_table_visit@@Base+0x1c>
   22c7c:	push	{r4, lr}
   22c80:	mov	r4, r0
   22c84:	ldr	r0, [r0]
   22c88:	cmp	r0, #0
   22c8c:	beq	22c94 <fb_scope_table_visit@@Base+0x60>
   22c90:	bl	13ef0 <free@plt>
   22c94:	mov	r0, r4
   22c98:	mov	r2, #16
   22c9c:	pop	{r4, lr}
   22ca0:	mov	r1, #0
   22ca4:	b	13fc8 <memset@plt>
   22ca8:	push	{r0, r1, r2, r3, r4, lr}
   22cac:	add	r3, sp, #8
   22cb0:	mov	r2, r1
   22cb4:	str	r3, [sp, #4]
   22cb8:	ldr	r3, [pc, #20]	; 22cd4 <fb_scope_table_visit@@Base+0xa0>
   22cbc:	str	r3, [sp]
   22cc0:	mov	r3, #0
   22cc4:	bl	2c980 <cmetrohash64_1@@Base>
   22cc8:	ldr	r0, [sp, #8]
   22ccc:	add	sp, sp, #20
   22cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   22cd4:	svccs	0x00693b52
   22cd8:	ldr	ip, [r2, #148]	; 0x94
   22cdc:	cmp	ip, r1
   22ce0:	bne	22d04 <fb_scope_table_visit@@Base+0xd0>
   22ce4:	mov	r3, r2
   22ce8:	push	{r4, lr}
   22cec:	mov	r2, ip
   22cf0:	ldr	r1, [r3, #144]	; 0x90
   22cf4:	bl	13f14 <memcmp@plt>
   22cf8:	clz	r0, r0
   22cfc:	lsr	r0, r0, #5
   22d00:	pop	{r4, pc}
   22d04:	mov	r0, #0
   22d08:	bx	lr
   22d0c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d10:	subs	r8, r3, #0
   22d14:	str	r1, [sp]
   22d18:	bne	22d30 <fb_scope_table_visit@@Base+0xfc>
   22d1c:	ldr	r3, [pc, #384]	; 22ea4 <fb_scope_table_visit@@Base+0x270>
   22d20:	mov	r2, #114	; 0x72
   22d24:	ldr	r1, [pc, #380]	; 22ea8 <fb_scope_table_visit@@Base+0x274>
   22d28:	ldr	r0, [pc, #380]	; 22eac <fb_scope_table_visit@@Base+0x278>
   22d2c:	bl	14070 <__assert_fail@plt>
   22d30:	cmp	r8, #2
   22d34:	bne	22d4c <fb_scope_table_visit@@Base+0x118>
   22d38:	ldr	r3, [pc, #356]	; 22ea4 <fb_scope_table_visit@@Base+0x270>
   22d3c:	mov	r2, #115	; 0x73
   22d40:	ldr	r1, [pc, #352]	; 22ea8 <fb_scope_table_visit@@Base+0x274>
   22d44:	ldr	r0, [pc, #356]	; 22eb0 <fb_scope_table_visit@@Base+0x27c>
   22d48:	b	22d2c <fb_scope_table_visit@@Base+0xf8>
   22d4c:	cmp	r8, #1
   22d50:	bne	22d68 <fb_scope_table_visit@@Base+0x134>
   22d54:	ldr	r3, [pc, #328]	; 22ea4 <fb_scope_table_visit@@Base+0x270>
   22d58:	mov	r2, #116	; 0x74
   22d5c:	ldr	r1, [pc, #324]	; 22ea8 <fb_scope_table_visit@@Base+0x274>
   22d60:	ldr	r0, [pc, #332]	; 22eb4 <fb_scope_table_visit@@Base+0x280>
   22d64:	b	22d2c <fb_scope_table_visit@@Base+0xf8>
   22d68:	mov	fp, r2
   22d6c:	mov	r3, #179	; 0xb3
   22d70:	ldr	r1, [r0, #8]
   22d74:	mov	r6, r0
   22d78:	ldr	r2, [r0, #12]
   22d7c:	mul	r3, r3, r2
   22d80:	cmp	r1, r3, lsr #8
   22d84:	bcc	22db4 <fb_scope_table_visit@@Base+0x180>
   22d88:	lsl	r1, r1, #1
   22d8c:	bl	22ec4 <fb_scope_table_visit@@Base+0x290>
   22d90:	cmp	r0, #0
   22d94:	beq	22db4 <fb_scope_table_visit@@Base+0x180>
   22d98:	ldr	r3, [pc, #280]	; 22eb8 <fb_scope_table_visit@@Base+0x284>
   22d9c:	ldr	r2, [pc, #280]	; 22ebc <fb_scope_table_visit@@Base+0x288>
   22da0:	ldr	r1, [pc, #280]	; 22ec0 <fb_scope_table_visit@@Base+0x28c>
   22da4:	ldr	r0, [r3]
   22da8:	bl	13fb0 <fprintf@plt>
   22dac:	mov	r0, #1
   22db0:	bl	13f98 <exit@plt>
   22db4:	mov	r1, fp
   22db8:	ldr	r0, [sp]
   22dbc:	ldr	sl, [r6]
   22dc0:	ldr	r9, [r6, #12]
   22dc4:	bl	22ca8 <fb_scope_table_visit@@Base+0x74>
   22dc8:	ldr	r3, [sp, #48]	; 0x30
   22dcc:	add	r4, r0, #1
   22dd0:	sub	r9, r9, #1
   22dd4:	and	r2, r9, r0
   22dd8:	sub	r3, r3, #2
   22ddc:	cmp	r3, #1
   22de0:	ldrls	r3, [r6, #8]
   22de4:	movhi	r7, #0
   22de8:	addls	r3, r3, #1
   22dec:	strls	r3, [r6, #8]
   22df0:	bls	22e28 <fb_scope_table_visit@@Base+0x1f4>
   22df4:	ldr	r5, [sl, r2, lsl #2]
   22df8:	add	r3, sl, r2, lsl #2
   22dfc:	cmp	r5, #0
   22e00:	bne	22e58 <fb_scope_table_visit@@Base+0x224>
   22e04:	cmp	r7, #0
   22e08:	moveq	r7, r3
   22e0c:	ldr	r3, [r6, #8]
   22e10:	add	r3, r3, #1
   22e14:	str	r3, [r6, #8]
   22e18:	str	r8, [r7]
   22e1c:	b	22e4c <fb_scope_table_visit@@Base+0x218>
   22e20:	and	r2, r9, r4
   22e24:	add	r4, r4, #1
   22e28:	ldr	r3, [sl, r2, lsl #2]
   22e2c:	add	r1, sl, r2, lsl #2
   22e30:	subs	r5, r3, #2
   22e34:	movne	r5, #1
   22e38:	cmp	r3, #0
   22e3c:	moveq	r5, #0
   22e40:	cmp	r5, #0
   22e44:	bne	22e20 <fb_scope_table_visit@@Base+0x1ec>
   22e48:	str	r8, [r1]
   22e4c:	mov	r0, r5
   22e50:	add	sp, sp, #12
   22e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e58:	cmp	r5, #2
   22e5c:	bne	22e74 <fb_scope_table_visit@@Base+0x240>
   22e60:	cmp	r7, #0
   22e64:	moveq	r7, r3
   22e68:	and	r2, r9, r4
   22e6c:	add	r4, r4, #1
   22e70:	b	22df4 <fb_scope_table_visit@@Base+0x1c0>
   22e74:	mov	r2, r5
   22e78:	mov	r1, fp
   22e7c:	ldr	r0, [sp]
   22e80:	str	r3, [sp, #4]
   22e84:	bl	22cd8 <fb_scope_table_visit@@Base+0xa4>
   22e88:	cmp	r0, #0
   22e8c:	ldr	r3, [sp, #4]
   22e90:	beq	22e68 <fb_scope_table_visit@@Base+0x234>
   22e94:	ldr	r2, [sp, #48]	; 0x30
   22e98:	cmp	r2, #0
   22e9c:	streq	r8, [r3]
   22ea0:	b	22e4c <fb_scope_table_visit@@Base+0x218>
   22ea4:	andeq	r6, r4, r8, ror #8
   22ea8:	andeq	r6, r4, r0, asr #6
   22eac:	muleq	r4, r0, r3
   22eb0:	andeq	r6, r4, r7, lsr #7
   22eb4:			; <UNDEFINED> instruction: 0x000463be
   22eb8:	strheq	sl, [r5], -r0
   22ebc:	ldrdeq	r6, [r4], -r3
   22ec0:	andeq	r6, r4, r6, lsl #8
   22ec4:	ldr	r3, [r0, #8]
   22ec8:	mov	r2, #179	; 0xb3
   22ecc:	push	{r4, r5, r6, r7, lr}
   22ed0:	mov	r4, r0
   22ed4:	sub	sp, sp, #28
   22ed8:	mov	r6, #4
   22edc:	ldr	r7, [r0]
   22ee0:	cmp	r1, r3
   22ee4:	movcc	r1, r3
   22ee8:	mul	r3, r2, r6
   22eec:	cmp	r1, r3, lsr #8
   22ef0:	bhi	22f6c <fb_scope_table_visit@@Base+0x338>
   22ef4:	mov	r1, #4
   22ef8:	mov	r0, r6
   22efc:	bl	13ec0 <calloc@plt>
   22f00:	cmp	r0, #0
   22f04:	str	r0, [sp, #8]
   22f08:	mvneq	r0, #0
   22f0c:	beq	22f64 <fb_scope_table_visit@@Base+0x330>
   22f10:	mov	r5, #0
   22f14:	str	r6, [sp, #20]
   22f18:	mov	r6, #3
   22f1c:	str	r5, [sp, #12]
   22f20:	str	r5, [sp, #16]
   22f24:	ldr	r3, [r4, #12]
   22f28:	cmp	r3, r5
   22f2c:	bhi	22f74 <fb_scope_table_visit@@Base+0x340>
   22f30:	mov	r0, r4
   22f34:	bl	22c7c <fb_scope_table_visit@@Base+0x48>
   22f38:	add	r2, sp, #8
   22f3c:	add	ip, sp, #24
   22f40:	mov	r3, r2
   22f44:	add	r4, r4, #8
   22f48:	ldm	r3!, {r0, r1}
   22f4c:	cmp	r3, ip
   22f50:	mov	r2, r3
   22f54:	str	r0, [r4, #-8]
   22f58:	str	r1, [r4, #-4]
   22f5c:	bne	22f40 <fb_scope_table_visit@@Base+0x30c>
   22f60:	mov	r0, #0
   22f64:	add	sp, sp, #28
   22f68:	pop	{r4, r5, r6, r7, pc}
   22f6c:	lsl	r6, r6, #1
   22f70:	b	22ee8 <fb_scope_table_visit@@Base+0x2b4>
   22f74:	ldr	r3, [r7, r5, lsl #2]
   22f78:	cmp	r3, #0
   22f7c:	cmpne	r3, #2
   22f80:	beq	22f98 <fb_scope_table_visit@@Base+0x364>
   22f84:	add	r0, sp, #8
   22f88:	str	r6, [sp]
   22f8c:	ldr	r1, [r3, #144]	; 0x90
   22f90:	ldr	r2, [r3, #148]	; 0x94
   22f94:	bl	22d0c <fb_scope_table_visit@@Base+0xd8>
   22f98:	add	r5, r5, #1
   22f9c:	b	22f24 <fb_scope_table_visit@@Base+0x2f0>
   22fa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22fa4:	ldr	r9, [r0]
   22fa8:	cmp	r9, #0
   22fac:	bne	22fbc <fb_scope_table_visit@@Base+0x388>
   22fb0:	mov	r5, #0
   22fb4:	mov	r0, r5
   22fb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22fbc:	ldr	r6, [r0, #12]
   22fc0:	mov	r7, r1
   22fc4:	mov	r1, r2
   22fc8:	mov	r0, r7
   22fcc:	mov	r8, r2
   22fd0:	bl	22ca8 <fb_scope_table_visit@@Base+0x74>
   22fd4:	add	r4, r0, #1
   22fd8:	sub	r6, r6, #1
   22fdc:	and	r3, r6, r0
   22fe0:	ldr	r5, [r9, r3, lsl #2]
   22fe4:	cmp	r5, #0
   22fe8:	beq	22fb0 <fb_scope_table_visit@@Base+0x37c>
   22fec:	cmp	r5, #2
   22ff0:	beq	2300c <fb_scope_table_visit@@Base+0x3d8>
   22ff4:	mov	r2, r5
   22ff8:	mov	r1, r8
   22ffc:	mov	r0, r7
   23000:	bl	22cd8 <fb_scope_table_visit@@Base+0xa4>
   23004:	cmp	r0, #0
   23008:	bne	22fb4 <fb_scope_table_visit@@Base+0x380>
   2300c:	and	r3, r6, r4
   23010:	add	r4, r4, #1
   23014:	b	22fe0 <fb_scope_table_visit@@Base+0x3ac>
   23018:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2301c:	ldr	sl, [r0]
   23020:	cmp	sl, #0
   23024:	bne	23038 <fb_scope_table_visit@@Base+0x404>
   23028:	mov	r6, #0
   2302c:	mov	r0, r6
   23030:	add	sp, sp, #4
   23034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23038:	mov	r5, r0
   2303c:	mov	r8, r1
   23040:	ldr	r7, [r5, #12]
   23044:	mov	r1, r2
   23048:	mov	r0, r8
   2304c:	mov	r9, r2
   23050:	bl	22ca8 <fb_scope_table_visit@@Base+0x74>
   23054:	add	r4, r0, #1
   23058:	sub	r7, r7, #1
   2305c:	and	r3, r7, r0
   23060:	ldr	r6, [sl, r3, lsl #2]
   23064:	add	fp, sl, r3, lsl #2
   23068:	cmp	r6, #0
   2306c:	beq	23028 <fb_scope_table_visit@@Base+0x3f4>
   23070:	cmp	r6, #2
   23074:	beq	230a8 <fb_scope_table_visit@@Base+0x474>
   23078:	mov	r2, r6
   2307c:	mov	r1, r9
   23080:	mov	r0, r8
   23084:	bl	22cd8 <fb_scope_table_visit@@Base+0xa4>
   23088:	cmp	r0, #0
   2308c:	beq	230a8 <fb_scope_table_visit@@Base+0x474>
   23090:	mov	r3, #2
   23094:	str	r3, [fp]
   23098:	ldr	r3, [r5, #8]
   2309c:	sub	r3, r3, #1
   230a0:	str	r3, [r5, #8]
   230a4:	b	2302c <fb_scope_table_visit@@Base+0x3f8>
   230a8:	and	r3, r4, r7
   230ac:	add	r4, r4, #1
   230b0:	b	23060 <fb_scope_table_visit@@Base+0x42c>

000230b4 <fb_schema_table_clear@@Base>:
   230b4:	b	22c7c <fb_scope_table_visit@@Base+0x48>

000230b8 <fb_schema_table_destroy@@Base>:
   230b8:	cmp	r1, #0
   230bc:	push	{r4, lr}
   230c0:	mov	r4, r0
   230c4:	beq	230cc <fb_schema_table_destroy@@Base+0x14>
   230c8:	bl	22c38 <fb_scope_table_visit@@Base+0x4>
   230cc:	mov	r0, r4
   230d0:	pop	{r4, lr}
   230d4:	b	22c7c <fb_scope_table_visit@@Base+0x48>

000230d8 <fb_schema_table_init@@Base>:
   230d8:	push	{r4, r5, r6, lr}
   230dc:	mov	r2, #179	; 0xb3
   230e0:	mov	r5, r0
   230e4:	mov	r4, #4
   230e8:	mul	r3, r2, r4
   230ec:	cmp	r1, r3, lsr #8
   230f0:	bhi	23120 <fb_schema_table_init@@Base+0x48>
   230f4:	mov	r1, #4
   230f8:	mov	r0, r4
   230fc:	bl	13ec0 <calloc@plt>
   23100:	cmp	r0, #0
   23104:	str	r0, [r5]
   23108:	movne	r0, #0
   2310c:	mvneq	r0, #0
   23110:	strne	r4, [r5, #12]
   23114:	strne	r0, [r5, #4]
   23118:	strne	r0, [r5, #8]
   2311c:	pop	{r4, r5, r6, pc}
   23120:	lsl	r4, r4, #1
   23124:	b	230e8 <fb_schema_table_init@@Base+0x10>

00023128 <fb_schema_table_resize@@Base>:
   23128:	b	22ec4 <fb_scope_table_visit@@Base+0x290>

0002312c <fb_schema_table_insert@@Base>:
   2312c:	b	22d0c <fb_scope_table_visit@@Base+0xd8>

00023130 <fb_schema_table_insert_item@@Base>:
   23130:	mov	r3, r1
   23134:	push	{r0, r1, r2, lr}
   23138:	str	r2, [sp]
   2313c:	ldr	r1, [r1, #144]	; 0x90
   23140:	ldr	r2, [r3, #148]	; 0x94
   23144:	bl	22d0c <fb_scope_table_visit@@Base+0xd8>
   23148:	add	sp, sp, #12
   2314c:	pop	{pc}		; (ldr pc, [sp], #4)

00023150 <fb_schema_table_find@@Base>:
   23150:	b	22fa0 <fb_scope_table_visit@@Base+0x36c>

00023154 <fb_schema_table_find_item@@Base>:
   23154:	ldr	r2, [r1, #148]	; 0x94
   23158:	ldr	r1, [r1, #144]	; 0x90
   2315c:	b	22fa0 <fb_scope_table_visit@@Base+0x36c>

00023160 <fb_schema_table_remove@@Base>:
   23160:	b	23018 <fb_scope_table_visit@@Base+0x3e4>

00023164 <fb_schema_table_remove_item@@Base>:
   23164:	ldr	r2, [r1, #148]	; 0x94
   23168:	ldr	r1, [r1, #144]	; 0x90
   2316c:	b	23018 <fb_scope_table_visit@@Base+0x3e4>

00023170 <fb_schema_table_visit@@Base>:
   23170:	b	22c38 <fb_scope_table_visit@@Base+0x4>

00023174 <__flatcc_fb_copy_path_n@@Base>:
   23174:	push	{r4, r5, r6, lr}
   23178:	mov	r2, r1
   2317c:	mov	r4, r1
   23180:	mov	r1, #0
   23184:	mov	r6, r0
   23188:	bl	13fec <memchr@plt>
   2318c:	cmp	r0, #0
   23190:	subne	r4, r0, r6
   23194:	add	r0, r4, #1
   23198:	bl	13f68 <malloc@plt>
   2319c:	subs	r5, r0, #0
   231a0:	beq	231b8 <__flatcc_fb_copy_path_n@@Base+0x44>
   231a4:	mov	r2, r4
   231a8:	mov	r1, r6
   231ac:	bl	13efc <memcpy@plt>
   231b0:	mov	r3, #0
   231b4:	strb	r3, [r5, r4]
   231b8:	mov	r0, r5
   231bc:	pop	{r4, r5, r6, pc}

000231c0 <__flatcc_fb_copy_path@@Base>:
   231c0:	push	{r4, r5, r6, lr}
   231c4:	mov	r6, r0
   231c8:	bl	13fa4 <strlen@plt>
   231cc:	mov	r4, r0
   231d0:	add	r0, r0, #1
   231d4:	bl	13f68 <malloc@plt>
   231d8:	subs	r5, r0, #0
   231dc:	beq	231f4 <__flatcc_fb_copy_path@@Base+0x34>
   231e0:	mov	r2, r4
   231e4:	mov	r1, r6
   231e8:	bl	13efc <memcpy@plt>
   231ec:	mov	r3, #0
   231f0:	strb	r3, [r5, r4]
   231f4:	mov	r0, r5
   231f8:	pop	{r4, r5, r6, pc}

000231fc <__flatcc_fb_chomp@@Base>:
   231fc:	push	{r4, r5, r6, r7, r8, lr}
   23200:	subs	r5, r2, #0
   23204:	mov	r7, r0
   23208:	mov	r4, r1
   2320c:	moveq	r2, r5
   23210:	beq	23220 <__flatcc_fb_chomp@@Base+0x24>
   23214:	mov	r0, r5
   23218:	bl	13fa4 <strlen@plt>
   2321c:	mov	r2, r0
   23220:	cmp	r2, r4
   23224:	bcs	23240 <__flatcc_fb_chomp@@Base+0x44>
   23228:	sub	r6, r4, r2
   2322c:	mov	r1, r5
   23230:	add	r0, r7, r6
   23234:	bl	14058 <strncmp@plt>
   23238:	cmp	r0, #0
   2323c:	moveq	r4, r6
   23240:	mov	r0, r4
   23244:	pop	{r4, r5, r6, r7, r8, pc}

00023248 <__flatcc_fb_create_join_path_n@@Base>:
   23248:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2324c:	mov	r9, r0
   23250:	mov	r4, r1
   23254:	mov	fp, r2
   23258:	mov	r8, r3
   2325c:	ldr	sl, [sp, #40]	; 0x28
   23260:	ldr	r5, [sp, #44]	; 0x2c
   23264:	cmp	sl, #0
   23268:	moveq	r6, sl
   2326c:	beq	2327c <__flatcc_fb_create_join_path_n@@Base+0x34>
   23270:	mov	r0, sl
   23274:	bl	13fa4 <strlen@plt>
   23278:	mov	r6, r0
   2327c:	cmp	r9, #0
   23280:	moveq	r4, r9
   23284:	moveq	r5, r9
   23288:	beq	232e4 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   2328c:	cmp	r8, #0
   23290:	beq	232c0 <__flatcc_fb_create_join_path_n@@Base+0x78>
   23294:	ldrb	r3, [fp]
   23298:	cmp	r3, #92	; 0x5c
   2329c:	cmpne	r3, #47	; 0x2f
   232a0:	moveq	r3, #1
   232a4:	movne	r3, #0
   232a8:	beq	23358 <__flatcc_fb_create_join_path_n@@Base+0x110>
   232ac:	cmp	r8, #1
   232b0:	bls	232c0 <__flatcc_fb_create_join_path_n@@Base+0x78>
   232b4:	ldrb	r2, [fp, #1]
   232b8:	cmp	r2, #58	; 0x3a
   232bc:	beq	23364 <__flatcc_fb_create_join_path_n@@Base+0x11c>
   232c0:	cmp	r5, #0
   232c4:	beq	232e4 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   232c8:	cmp	r4, #0
   232cc:	beq	2335c <__flatcc_fb_create_join_path_n@@Base+0x114>
   232d0:	add	r3, r9, r4
   232d4:	ldrb	r3, [r3, #-1]
   232d8:	cmp	r3, #92	; 0x5c
   232dc:	cmpne	r3, #47	; 0x2f
   232e0:	moveq	r5, #0
   232e4:	add	r0, r8, #1
   232e8:	add	r0, r0, r6
   232ec:	add	r0, r0, r4
   232f0:	add	r0, r0, r5
   232f4:	bl	13f68 <malloc@plt>
   232f8:	subs	r7, r0, #0
   232fc:	beq	2334c <__flatcc_fb_create_join_path_n@@Base+0x104>
   23300:	mov	r2, r4
   23304:	mov	r1, r9
   23308:	bl	13efc <memcpy@plt>
   2330c:	cmp	r5, #0
   23310:	mov	r2, r8
   23314:	movne	r3, #47	; 0x2f
   23318:	mov	r1, fp
   2331c:	strbne	r3, [r7, r4]
   23320:	addne	r4, r4, #1
   23324:	add	r0, r7, r4
   23328:	add	r4, r4, r8
   2332c:	bl	13efc <memcpy@plt>
   23330:	mov	r2, r6
   23334:	mov	r1, sl
   23338:	add	r0, r7, r4
   2333c:	add	r6, r7, r6
   23340:	bl	13efc <memcpy@plt>
   23344:	mov	r3, #0
   23348:	strb	r3, [r6, r4]
   2334c:	mov	r0, r7
   23350:	add	sp, sp, #4
   23354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23358:	mov	r4, #0
   2335c:	mov	r5, r4
   23360:	b	232e4 <__flatcc_fb_create_join_path_n@@Base+0x9c>
   23364:	mov	r4, r3
   23368:	b	2335c <__flatcc_fb_create_join_path_n@@Base+0x114>

0002336c <__flatcc_fb_create_join_path@@Base>:
   2336c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   23370:	subs	r5, r0, #0
   23374:	mov	r4, r1
   23378:	mov	r7, r2
   2337c:	mov	r8, r3
   23380:	moveq	r6, r5
   23384:	beq	23390 <__flatcc_fb_create_join_path@@Base+0x24>
   23388:	bl	13fa4 <strlen@plt>
   2338c:	mov	r6, r0
   23390:	cmp	r4, #0
   23394:	moveq	r3, r4
   23398:	beq	233a8 <__flatcc_fb_create_join_path@@Base+0x3c>
   2339c:	mov	r0, r4
   233a0:	bl	13fa4 <strlen@plt>
   233a4:	mov	r3, r0
   233a8:	mov	r2, r4
   233ac:	mov	r1, r6
   233b0:	stm	sp, {r7, r8}
   233b4:	mov	r0, r5
   233b8:	bl	23248 <__flatcc_fb_create_join_path_n@@Base>
   233bc:	add	sp, sp, #8
   233c0:	pop	{r4, r5, r6, r7, r8, pc}

000233c4 <__flatcc_fb_create_path_ext_n@@Base>:
   233c4:	mov	ip, #0
   233c8:	push	{r0, r1, r2, lr}
   233cc:	mov	r3, r1
   233d0:	mov	r1, ip
   233d4:	stm	sp, {r2, ip}
   233d8:	mov	r2, r0
   233dc:	mov	r0, ip
   233e0:	bl	23248 <__flatcc_fb_create_join_path_n@@Base>
   233e4:	add	sp, sp, #12
   233e8:	pop	{pc}		; (ldr pc, [sp], #4)

000233ec <__flatcc_fb_create_path_ext@@Base>:
   233ec:	mov	r3, #0
   233f0:	mov	r2, r1
   233f4:	mov	r1, r0
   233f8:	mov	r0, r3
   233fc:	b	2336c <__flatcc_fb_create_join_path@@Base>

00023400 <__flatcc_fb_create_make_path_n@@Base>:
   23400:	cmp	r1, #1
   23404:	push	{r4, r5, r6, lr}
   23408:	mov	r4, r0
   2340c:	bne	23448 <__flatcc_fb_create_make_path_n@@Base+0x48>
   23410:	ldrb	r5, [r0]
   23414:	cmp	r5, #92	; 0x5c
   23418:	cmpne	r5, #32
   2341c:	bne	23454 <__flatcc_fb_create_make_path_n@@Base+0x54>
   23420:	mov	r0, #3
   23424:	bl	13f68 <malloc@plt>
   23428:	cmp	r0, #0
   2342c:	popeq	{r4, r5, r6, pc}
   23430:	mov	r3, #92	; 0x5c
   23434:	strb	r3, [r0]
   23438:	mov	r3, #0
   2343c:	strb	r5, [r0, #1]
   23440:	strb	r3, [r0, #2]
   23444:	pop	{r4, r5, r6, pc}
   23448:	movhi	r3, r0
   2344c:	addhi	r5, r1, r0
   23450:	bhi	2347c <__flatcc_fb_create_make_path_n@@Base+0x7c>
   23454:	mov	r0, r4
   23458:	pop	{r4, r5, r6, lr}
   2345c:	b	23174 <__flatcc_fb_copy_path_n@@Base>
   23460:	cmp	r0, #92	; 0x5c
   23464:	ldrb	r2, [r3]
   23468:	bne	23474 <__flatcc_fb_create_make_path_n@@Base+0x74>
   2346c:	cmp	r2, #32
   23470:	addeq	r1, r1, #1
   23474:	cmp	r0, #32
   23478:	addeq	r1, r1, #1
   2347c:	ldrb	r0, [r3], #1
   23480:	cmp	r5, r3
   23484:	bne	23460 <__flatcc_fb_create_make_path_n@@Base+0x60>
   23488:	add	r1, r1, #1
   2348c:	cmp	r0, #32
   23490:	movne	r0, r1
   23494:	addeq	r0, r1, #1
   23498:	bl	13f68 <malloc@plt>
   2349c:	cmp	r0, #0
   234a0:	addne	r4, r4, #1
   234a4:	movne	r3, #0
   234a8:	movne	r6, #92	; 0x5c
   234ac:	popeq	{r4, r5, r6, pc}
   234b0:	add	ip, r3, #1
   234b4:	add	lr, r0, r3
   234b8:	ldrb	r2, [r4, #-1]
   234bc:	ldrb	r1, [r4], #1
   234c0:	cmp	r2, #92	; 0x5c
   234c4:	bne	23510 <__flatcc_fb_create_make_path_n@@Base+0x110>
   234c8:	cmp	r1, #32
   234cc:	strbeq	r2, [lr]
   234d0:	beq	2351c <__flatcc_fb_create_make_path_n@@Base+0x11c>
   234d4:	cmp	r5, r4
   234d8:	strb	r2, [r0, r3]
   234dc:	add	r2, r3, #1
   234e0:	bne	23508 <__flatcc_fb_create_make_path_n@@Base+0x108>
   234e4:	cmp	r1, #32
   234e8:	moveq	ip, #92	; 0x5c
   234ec:	strbeq	ip, [r0, r2]
   234f0:	addeq	r2, r3, #2
   234f4:	mov	r3, r0
   234f8:	strb	r1, [r3, r2]!
   234fc:	mov	r2, #0
   23500:	strb	r2, [r3, #1]
   23504:	pop	{r4, r5, r6, pc}
   23508:	mov	r3, r2
   2350c:	b	234b0 <__flatcc_fb_create_make_path_n@@Base+0xb0>
   23510:	cmp	r2, #32
   23514:	bne	234d4 <__flatcc_fb_create_make_path_n@@Base+0xd4>
   23518:	strb	r6, [lr]
   2351c:	mov	r3, ip
   23520:	b	234d4 <__flatcc_fb_create_make_path_n@@Base+0xd4>

00023524 <__flatcc_fb_create_make_path@@Base>:
   23524:	push	{r4, lr}
   23528:	mov	r4, r0
   2352c:	bl	13fa4 <strlen@plt>
   23530:	mov	r1, r0
   23534:	mov	r0, r4
   23538:	pop	{r4, lr}
   2353c:	b	23400 <__flatcc_fb_create_make_path_n@@Base>

00023540 <__flatcc_fb_find_basename@@Base>:
   23540:	add	r1, r0, r1
   23544:	cmp	r1, r0
   23548:	bne	23554 <__flatcc_fb_find_basename@@Base+0x14>
   2354c:	sub	r0, r1, r0
   23550:	bx	lr
   23554:	ldrb	r3, [r1, #-1]
   23558:	sub	r2, r1, #1
   2355c:	cmp	r3, #92	; 0x5c
   23560:	cmpne	r3, #47	; 0x2f
   23564:	beq	2354c <__flatcc_fb_find_basename@@Base+0xc>
   23568:	mov	r1, r2
   2356c:	b	23544 <__flatcc_fb_find_basename@@Base+0x4>

00023570 <__flatcc_fb_create_basename@@Base>:
   23570:	push	{r4, r5, r6, lr}
   23574:	mov	r5, r1
   23578:	mov	r6, r2
   2357c:	mov	r4, r0
   23580:	bl	23540 <__flatcc_fb_find_basename@@Base>
   23584:	add	r4, r4, r0
   23588:	sub	r1, r5, r0
   2358c:	mov	r2, r6
   23590:	mov	r0, r4
   23594:	bl	231fc <__flatcc_fb_chomp@@Base>
   23598:	mov	r5, r0
   2359c:	add	r0, r0, #1
   235a0:	bl	13f68 <malloc@plt>
   235a4:	subs	r6, r0, #0
   235a8:	beq	235c0 <__flatcc_fb_create_basename@@Base+0x50>
   235ac:	mov	r2, r5
   235b0:	mov	r1, r4
   235b4:	bl	13efc <memcpy@plt>
   235b8:	mov	r3, #0
   235bc:	strb	r3, [r6, r5]
   235c0:	mov	r0, r6
   235c4:	pop	{r4, r5, r6, pc}

000235c8 <__flatcc_fb_read_file@@Base>:
   235c8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   235cc:	subs	r8, r2, #0
   235d0:	mov	r6, r1
   235d4:	addeq	r8, sp, #4
   235d8:	ldr	r1, [pc, #212]	; 236b4 <__flatcc_fb_read_file@@Base+0xec>
   235dc:	bl	13ee4 <fopen@plt>
   235e0:	subs	r7, r0, #0
   235e4:	beq	23684 <__flatcc_fb_read_file@@Base+0xbc>
   235e8:	mov	r2, #2
   235ec:	mov	r1, #0
   235f0:	bl	14040 <fseek@plt>
   235f4:	mov	r0, r7
   235f8:	bl	13f08 <ftell@plt>
   235fc:	cmp	r0, r6
   23600:	mov	r5, r0
   23604:	str	r0, [r8]
   23608:	movls	r4, #0
   2360c:	movhi	r4, #1
   23610:	cmp	r6, #0
   23614:	moveq	r4, #0
   23618:	cmp	r4, #0
   2361c:	bne	2368c <__flatcc_fb_read_file@@Base+0xc4>
   23620:	mov	r0, r7
   23624:	bl	13f20 <rewind@plt>
   23628:	cmp	r5, #0
   2362c:	movne	r0, r5
   23630:	moveq	r0, #1
   23634:	bl	13f68 <malloc@plt>
   23638:	subs	r6, r0, #0
   2363c:	beq	2368c <__flatcc_fb_read_file@@Base+0xc4>
   23640:	mov	r3, r7
   23644:	sub	r2, r5, r4
   23648:	mov	r1, #1
   2364c:	add	r0, r6, r4
   23650:	bl	13f50 <fread@plt>
   23654:	cmp	r0, #0
   23658:	bne	2367c <__flatcc_fb_read_file@@Base+0xb4>
   2365c:	cmp	r4, r5
   23660:	bne	23690 <__flatcc_fb_read_file@@Base+0xc8>
   23664:	mov	r0, r7
   23668:	bl	13ff8 <fclose@plt>
   2366c:	str	r4, [r8]
   23670:	mov	r0, r6
   23674:	add	sp, sp, #8
   23678:	pop	{r4, r5, r6, r7, r8, pc}
   2367c:	add	r4, r4, r0
   23680:	b	23640 <__flatcc_fb_read_file@@Base+0x78>
   23684:	mov	r5, r7
   23688:	b	236a8 <__flatcc_fb_read_file@@Base+0xe0>
   2368c:	mov	r6, #0
   23690:	mov	r0, r7
   23694:	bl	13ff8 <fclose@plt>
   23698:	cmp	r6, #0
   2369c:	beq	236a8 <__flatcc_fb_read_file@@Base+0xe0>
   236a0:	mov	r0, r6
   236a4:	bl	13ef0 <free@plt>
   236a8:	mov	r6, #0
   236ac:	str	r5, [r8]
   236b0:	b	23670 <__flatcc_fb_read_file@@Base+0xa8>
   236b4:	andeq	r6, r4, r0, lsl #9
   236b8:	ldr	r3, [r0]
   236bc:	mov	r2, #0
   236c0:	cmp	r3, #0
   236c4:	bne	236d0 <__flatcc_fb_read_file@@Base+0x108>
   236c8:	str	r2, [r0]
   236cc:	bx	lr
   236d0:	ldr	r1, [r3]
   236d4:	str	r2, [r3]
   236d8:	mov	r2, r3
   236dc:	mov	r3, r1
   236e0:	b	236c0 <__flatcc_fb_read_file@@Base+0xf8>

000236e4 <__flatcc_fb_default_error_out@@Base>:
   236e4:	ldr	r3, [pc, #12]	; 236f8 <__flatcc_fb_default_error_out@@Base+0x14>
   236e8:	mov	r0, r1
   236ec:	mov	r1, #1
   236f0:	ldr	r3, [r3]
   236f4:	b	13f38 <fwrite@plt>
   236f8:	strheq	sl, [r5], -r0
   236fc:	add	r0, r1, #4
   23700:	b	22498 <fb_symbol_table_clear@@Base>
   23704:	ldr	r3, [pc, #20]	; 23720 <__flatcc_fb_default_error_out@@Base+0x3c>
   23708:	push	{r4, lr}
   2370c:	ldr	r0, [pc, #16]	; 23724 <__flatcc_fb_default_error_out@@Base+0x40>
   23710:	ldr	r1, [r3]
   23714:	bl	1404c <fputs@plt>
   23718:	mov	r0, #1
   2371c:	bl	13f98 <exit@plt>
   23720:	strheq	sl, [r5], -r0
   23724:	andeq	pc, r2, r6, lsl r8	; <UNPREDICTABLE>
   23728:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2372c:	mov	r4, r0
   23730:	mov	r6, r1
   23734:	mov	r5, r2
   23738:	mov	r7, r3
   2373c:	mov	r2, #20
   23740:	ldr	r0, [r0, #20]
   23744:	ldr	r1, [r4, #28]
   23748:	ldr	r3, [r4, #40]	; 0x28
   2374c:	mla	r2, r2, r1, r0
   23750:	cmp	r2, r3
   23754:	str	r2, [r4, #24]
   23758:	bne	237a0 <__flatcc_fb_default_error_out@@Base+0xbc>
   2375c:	cmp	r1, #0
   23760:	mov	r9, #20
   23764:	lslne	r1, r1, #1
   23768:	moveq	r1, #1024	; 0x400
   2376c:	sub	r8, r2, r0
   23770:	str	r1, [r4, #28]
   23774:	mul	r1, r9, r1
   23778:	bl	13f2c <realloc@plt>
   2377c:	cmp	r0, #0
   23780:	str	r0, [r4, #20]
   23784:	bne	2378c <__flatcc_fb_default_error_out@@Base+0xa8>
   23788:	bl	23704 <__flatcc_fb_default_error_out@@Base+0x20>
   2378c:	ldr	r3, [r4, #28]
   23790:	mla	r3, r9, r3, r0
   23794:	add	r0, r0, r8
   23798:	str	r3, [r4, #24]
   2379c:	str	r0, [r4, #40]	; 0x28
   237a0:	ldr	r1, [r4, #40]	; 0x28
   237a4:	sub	r7, r7, r5
   237a8:	ldrd	r2, [r4, #60]	; 0x3c
   237ac:	stm	r1, {r5, r7}
   237b0:	add	r1, r1, #20
   237b4:	sub	r5, r5, r2
   237b8:	str	r3, [r1, #-12]
   237bc:	add	r5, r5, #1
   237c0:	str	r6, [r1, #-4]
   237c4:	str	r5, [r1, #-8]
   237c8:	str	r1, [r4, #40]	; 0x28
   237cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   237d0:	mov	r3, r2
   237d4:	ldr	r2, [r0, #32]
   237d8:	cmp	r2, #0
   237dc:	bxeq	lr
   237e0:	mov	r2, r1
   237e4:	ldr	r1, [pc]	; 237ec <__flatcc_fb_default_error_out@@Base+0x108>
   237e8:	b	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   237ec:			; <UNDEFINED> instruction: 0xfffffc3c
   237f0:	push	{r4, r5, r6, lr}
   237f4:	mov	r4, r0
   237f8:	add	r1, r1, #15
   237fc:	bic	r5, r1, #15
   23800:	ldr	r0, [r0, #52]	; 0x34
   23804:	ldr	r3, [r4, #44]	; 0x2c
   23808:	add	r2, r5, r0
   2380c:	cmp	r2, r3
   23810:	bls	23848 <__flatcc_fb_default_error_out@@Base+0x164>
   23814:	mov	r1, #1
   23818:	mov	r0, #65536	; 0x10000
   2381c:	bl	13ec0 <calloc@plt>
   23820:	subs	r3, r0, #0
   23824:	bne	2382c <__flatcc_fb_default_error_out@@Base+0x148>
   23828:	bl	23704 <__flatcc_fb_default_error_out@@Base+0x20>
   2382c:	ldr	r2, [r4, #48]	; 0x30
   23830:	add	r0, r3, #16
   23834:	str	r3, [r4, #48]	; 0x30
   23838:	str	r0, [r4, #52]	; 0x34
   2383c:	str	r2, [r3]
   23840:	add	r3, r3, #65536	; 0x10000
   23844:	str	r3, [r4, #44]	; 0x2c
   23848:	ldr	r1, [r4, #52]	; 0x34
   2384c:	add	r5, r1, r5
   23850:	str	r5, [r4, #52]	; 0x34
   23854:	pop	{r4, r5, r6, pc}
   23858:	push	{r4, r5, r6, lr}
   2385c:	mov	r2, #0
   23860:	mov	r5, r0
   23864:	mov	r6, r1
   23868:	ldr	r0, [r0, #412]	; 0x19c
   2386c:	bl	22c14 <fb_scope_table_find@@Base>
   23870:	subs	r4, r0, #0
   23874:	bne	238ac <__flatcc_fb_default_error_out@@Base+0x1c8>
   23878:	mov	r1, #28
   2387c:	mov	r0, r5
   23880:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   23884:	add	r2, r5, #476	; 0x1dc
   23888:	mov	r3, r0
   2388c:	mov	r4, r0
   23890:	ldm	r2, {r0, r1}
   23894:	mov	r2, #1
   23898:	str	r6, [r3], #20
   2389c:	stm	r3, {r0, r1}
   238a0:	mov	r1, r4
   238a4:	ldr	r0, [r5, #412]	; 0x19c
   238a8:	bl	22bf4 <fb_scope_table_insert_item@@Base>
   238ac:	mov	r0, r4
   238b0:	pop	{r4, r5, r6, pc}
   238b4:	push	{r4, r5, r6, lr}
   238b8:	mov	r4, r0
   238bc:	ldr	r2, [r4, #24]
   238c0:	ldr	r3, [r4, #40]	; 0x28
   238c4:	add	r5, r3, #20
   238c8:	cmp	r5, r2
   238cc:	str	r5, [r4, #40]	; 0x28
   238d0:	bne	238ec <__flatcc_fb_default_error_out@@Base+0x208>
   238d4:	movw	r2, #341	; 0x155
   238d8:	ldr	r1, [pc, #60]	; 2391c <__flatcc_fb_default_error_out@@Base+0x238>
   238dc:	str	r3, [r4, #40]	; 0x28
   238e0:	ldr	r0, [pc, #56]	; 23920 <__flatcc_fb_default_error_out@@Base+0x23c>
   238e4:	ldr	r3, [pc, #56]	; 23924 <__flatcc_fb_default_error_out@@Base+0x240>
   238e8:	bl	14070 <__assert_fail@plt>
   238ec:	ldr	r3, [r3, #36]	; 0x24
   238f0:	cmn	r3, #964	; 0x3c4
   238f4:	bne	23914 <__flatcc_fb_default_error_out@@Base+0x230>
   238f8:	mov	r1, #12
   238fc:	mov	r0, r4
   23900:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   23904:	ldr	r3, [r4, #36]	; 0x24
   23908:	stm	r0, {r3, r5}
   2390c:	str	r0, [r4, #36]	; 0x24
   23910:	b	238bc <__flatcc_fb_default_error_out@@Base+0x1d8>
   23914:	mov	r0, r5
   23918:	pop	{r4, r5, r6, pc}
   2391c:	andeq	r6, r4, r5, lsr #11
   23920:	andeq	r8, r3, pc, ror #2
   23924:	andeq	r6, r4, r3, lsl #9
   23928:	push	{r4, lr}
   2392c:	ldr	r4, [r0, #40]	; 0x28
   23930:	ldr	r3, [r4, #16]
   23934:	cmp	r3, r1
   23938:	movne	r4, #0
   2393c:	bne	23944 <__flatcc_fb_default_error_out@@Base+0x260>
   23940:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   23944:	mov	r0, r4
   23948:	pop	{r4, pc}
   2394c:	push	{r4, lr}
   23950:	mov	r4, r0
   23954:	ldr	r3, [r4, #40]	; 0x28
   23958:	ldr	r3, [r3, #16]
   2395c:	cmp	r3, #0
   23960:	popeq	{r4, pc}
   23964:	cmp	r3, #59	; 0x3b
   23968:	bne	23980 <__flatcc_fb_default_error_out@@Base+0x29c>
   2396c:	mov	r0, r4
   23970:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   23974:	mov	r3, #0
   23978:	str	r3, [r4, #36]	; 0x24
   2397c:	pop	{r4, pc}
   23980:	cmp	r3, #125	; 0x7d
   23984:	beq	23974 <__flatcc_fb_default_error_out@@Base+0x290>
   23988:	mov	r0, r4
   2398c:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   23990:	b	23954 <__flatcc_fb_default_error_out@@Base+0x270>
   23994:	push	{r4, r5, r6, lr}
   23998:	mov	r4, r0
   2399c:	mov	r5, r1
   239a0:	ldr	r3, [r4, #40]	; 0x28
   239a4:	ldr	r3, [r3, #16]
   239a8:	cmp	r3, #0
   239ac:	popeq	{r4, r5, r6, pc}
   239b0:	cmp	r5, r3
   239b4:	mov	r0, r4
   239b8:	bne	239cc <__flatcc_fb_default_error_out@@Base+0x2e8>
   239bc:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   239c0:	mov	r3, #0
   239c4:	str	r3, [r4, #36]	; 0x24
   239c8:	pop	{r4, r5, r6, pc}
   239cc:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   239d0:	b	239a0 <__flatcc_fb_default_error_out@@Base+0x2bc>
   239d4:	push	{r4, r5, r6, lr}
   239d8:	mov	r6, r1
   239dc:	mov	r1, #120	; 0x78
   239e0:	mov	r5, r0
   239e4:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   239e8:	ldr	r3, [r6]
   239ec:	mov	r4, r0
   239f0:	add	r0, r5, #36	; 0x24
   239f4:	str	r3, [r4]
   239f8:	mov	r3, #5
   239fc:	strh	r3, [r4, #8]
   23a00:	str	r4, [r6]
   23a04:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   23a08:	ldr	r3, [r5, #36]	; 0x24
   23a0c:	mov	r0, r4
   23a10:	str	r3, [r4, #68]	; 0x44
   23a14:	mov	r3, #0
   23a18:	str	r3, [r5, #36]	; 0x24
   23a1c:	pop	{r4, r5, r6, pc}

00023a20 <__flatcc_fb_print_error@@Base>:
   23a20:	push	{r1, r2, r3}
   23a24:	mov	r1, #200	; 0xc8
   23a28:	push	{r4, r5, lr}
   23a2c:	sub	sp, sp, #208	; 0xd0
   23a30:	mov	r5, r0
   23a34:	add	r3, sp, #224	; 0xe0
   23a38:	add	r0, sp, #8
   23a3c:	ldr	r2, [sp, #220]	; 0xdc
   23a40:	str	r3, [sp, #4]
   23a44:	bl	14028 <vsnprintf@plt>
   23a48:	cmp	r0, #199	; 0xc7
   23a4c:	movle	r4, r0
   23a50:	ble	23a64 <__flatcc_fb_print_error@@Base+0x44>
   23a54:	ldr	r1, [pc, #48]	; 23a8c <__flatcc_fb_print_error@@Base+0x6c>
   23a58:	add	r0, sp, #203	; 0xcb
   23a5c:	mov	r4, #199	; 0xc7
   23a60:	bl	13f44 <strcpy@plt>
   23a64:	ldr	r3, [r5, #8]
   23a68:	mov	r2, r4
   23a6c:	add	r1, sp, #8
   23a70:	ldr	r0, [r5, #12]
   23a74:	blx	r3
   23a78:	mov	r0, r4
   23a7c:	add	sp, sp, #208	; 0xd0
   23a80:	pop	{r4, r5, lr}
   23a84:	add	sp, sp, #12
   23a88:	bx	lr
   23a8c:	andeq	pc, r2, r4, lsr r8	; <UNPREDICTABLE>

00023a90 <__flatcc_error_find_file_of_token@@Base>:
   23a90:	cmp	r0, #0
   23a94:	bne	23aa0 <__flatcc_error_find_file_of_token@@Base+0x10>
   23a98:	ldr	r0, [pc, #40]	; 23ac8 <__flatcc_error_find_file_of_token@@Base+0x38>
   23a9c:	bx	lr
   23aa0:	ldr	r3, [r0, #20]
   23aa4:	cmp	r3, r1
   23aa8:	bhi	23ac0 <__flatcc_error_find_file_of_token@@Base+0x30>
   23aac:	ldr	r3, [r0, #24]
   23ab0:	cmp	r3, r1
   23ab4:	bls	23ac0 <__flatcc_error_find_file_of_token@@Base+0x30>
   23ab8:	ldr	r0, [r0, #520]	; 0x208
   23abc:	bx	lr
   23ac0:	ldr	r0, [r0]
   23ac4:	b	23a90 <__flatcc_error_find_file_of_token@@Base>
   23ac8:	andeq	r1, r3, fp, lsr #2

00023acc <__flatcc_error_report@@Base>:
   23acc:	push	{r4, r5, r6, r7, r8, r9, lr}
   23ad0:	sub	sp, sp, #44	; 0x2c
   23ad4:	mov	r4, r3
   23ad8:	adds	r3, r1, #0
   23adc:	mov	r6, r1
   23ae0:	movne	r3, #1
   23ae4:	mov	r5, r0
   23ae8:	ldr	r7, [sp, #72]	; 0x48
   23aec:	ldr	r8, [sp, #76]	; 0x4c
   23af0:	cmp	r7, #0
   23af4:	moveq	r1, r3
   23af8:	movne	r1, #0
   23afc:	cmp	r1, #0
   23b00:	ldr	r1, [pc, #320]	; 23c48 <__flatcc_error_report@@Base+0x17c>
   23b04:	ldmne	r6, {r7, r8}
   23b08:	cmp	r2, #0
   23b0c:	moveq	r2, r1
   23b10:	cmp	r7, #0
   23b14:	moveq	r8, r7
   23b18:	moveq	r7, r1
   23b1c:	cmp	r4, #0
   23b20:	moveq	r1, r3
   23b24:	movne	r1, #0
   23b28:	cmp	r1, #0
   23b2c:	beq	23b64 <__flatcc_error_report@@Base+0x98>
   23b30:	mov	r1, r6
   23b34:	bl	23a90 <__flatcc_error_find_file_of_token@@Base>
   23b38:	str	r8, [sp, #4]
   23b3c:	str	r7, [sp, #8]
   23b40:	str	r2, [sp, #12]
   23b44:	mov	r2, r0
   23b48:	ldr	r3, [r6, #12]
   23b4c:	ldr	r1, [pc, #248]	; 23c4c <__flatcc_error_report@@Base+0x180>
   23b50:	str	r3, [sp]
   23b54:	ldr	r3, [r6, #8]
   23b58:	mov	r0, r5
   23b5c:	bl	23a20 <__flatcc_fb_print_error@@Base>
   23b60:	b	23bd8 <__flatcc_error_report@@Base+0x10c>
   23b64:	cmp	r4, #0
   23b68:	moveq	r3, #0
   23b6c:	cmp	r3, #0
   23b70:	beq	23bec <__flatcc_error_report@@Base+0x120>
   23b74:	mov	r1, r6
   23b78:	bl	23a90 <__flatcc_error_find_file_of_token@@Base>
   23b7c:	mov	r9, r0
   23b80:	mov	r1, r4
   23b84:	mov	r0, r5
   23b88:	bl	23a90 <__flatcc_error_find_file_of_token@@Base>
   23b8c:	ldr	r3, [r4]
   23b90:	str	r8, [sp, #4]
   23b94:	str	r7, [sp, #8]
   23b98:	str	r2, [sp, #12]
   23b9c:	mov	r2, r9
   23ba0:	str	r0, [sp, #16]
   23ba4:	mov	r0, r5
   23ba8:	str	r3, [sp, #32]
   23bac:	ldr	r3, [r4, #4]
   23bb0:	ldr	r1, [pc, #152]	; 23c50 <__flatcc_error_report@@Base+0x184>
   23bb4:	str	r3, [sp, #28]
   23bb8:	ldr	r3, [r4, #12]
   23bbc:	str	r3, [sp, #24]
   23bc0:	ldr	r3, [r4, #8]
   23bc4:	str	r3, [sp, #20]
   23bc8:	ldr	r3, [r6, #12]
   23bcc:	str	r3, [sp]
   23bd0:	ldr	r3, [r6, #8]
   23bd4:	bl	23a20 <__flatcc_fb_print_error@@Base>
   23bd8:	ldr	r3, [r5, #108]	; 0x6c
   23bdc:	add	r3, r3, #1
   23be0:	str	r3, [r5, #108]	; 0x6c
   23be4:	add	sp, sp, #44	; 0x2c
   23be8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23bec:	orrs	r3, r6, r4
   23bf0:	bne	23c00 <__flatcc_error_report@@Base+0x134>
   23bf4:	ldr	r1, [pc, #88]	; 23c54 <__flatcc_error_report@@Base+0x188>
   23bf8:	bl	23a20 <__flatcc_fb_print_error@@Base>
   23bfc:	b	23bd8 <__flatcc_error_report@@Base+0x10c>
   23c00:	cmp	r4, #0
   23c04:	beq	23c3c <__flatcc_error_report@@Base+0x170>
   23c08:	mov	r1, r4
   23c0c:	bl	23a90 <__flatcc_error_find_file_of_token@@Base>
   23c10:	ldr	r3, [r4]
   23c14:	ldr	r1, [pc, #60]	; 23c58 <__flatcc_error_report@@Base+0x18c>
   23c18:	str	r3, [sp, #12]
   23c1c:	ldr	r3, [r4, #4]
   23c20:	str	r3, [sp, #8]
   23c24:	ldr	r3, [r4, #12]
   23c28:	str	r3, [sp, #4]
   23c2c:	ldr	r3, [r4, #8]
   23c30:	str	r3, [sp]
   23c34:	mov	r3, r0
   23c38:	b	23b58 <__flatcc_error_report@@Base+0x8c>
   23c3c:	ldr	r1, [pc, #24]	; 23c5c <__flatcc_error_report@@Base+0x190>
   23c40:	bl	23a20 <__flatcc_fb_print_error@@Base>
   23c44:	b	23bd8 <__flatcc_error_report@@Base+0x10c>
   23c48:	andeq	r1, r3, fp, lsr #2
   23c4c:	andeq	r6, r4, fp, ror #11
   23c50:	andeq	r6, r4, sl, lsl #12
   23c54:	andeq	r6, r4, sp, lsr r6
   23c58:	andeq	r6, r4, r8, asr #12
   23c5c:	andeq	r6, r4, r7, ror #12
   23c60:	mov	r3, #0
   23c64:	push	{r0, r1, r2, lr}
   23c68:	str	r3, [sp]
   23c6c:	str	r3, [sp, #4]
   23c70:	bl	23acc <__flatcc_error_report@@Base>
   23c74:	add	sp, sp, #12
   23c78:	pop	{pc}		; (ldr pc, [sp], #4)
   23c7c:	push	{r4, lr}
   23c80:	ldr	r4, [r0, #40]	; 0x28
   23c84:	ldr	r3, [r4, #16]
   23c88:	cmp	r3, r1
   23c8c:	bne	23c9c <__flatcc_error_report@@Base+0x1d0>
   23c90:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   23c94:	mov	r0, r4
   23c98:	pop	{r4, pc}
   23c9c:	mov	r1, r4
   23ca0:	mov	r4, #0
   23ca4:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   23ca8:	b	23c94 <__flatcc_error_report@@Base+0x1c8>
   23cac:	push	{r4, r5, r6, lr}
   23cb0:	mov	r5, r1
   23cb4:	mov	r1, #12
   23cb8:	mov	r4, r0
   23cbc:	ldr	r6, [r0, #40]	; 0x28
   23cc0:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   23cc4:	str	r6, [r0, #4]
   23cc8:	str	r0, [r5]
   23ccc:	mov	r0, r4
   23cd0:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   23cd4:	ldr	r6, [r5]
   23cd8:	mov	r1, #46	; 0x2e
   23cdc:	mov	r0, r4
   23ce0:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   23ce4:	cmp	r0, #0
   23ce8:	popeq	{r4, r5, r6, pc}
   23cec:	ldr	r5, [r4, #40]	; 0x28
   23cf0:	ldr	r3, [r5, #16]
   23cf4:	cmp	r3, #9
   23cf8:	beq	23d10 <__flatcc_error_report@@Base+0x244>
   23cfc:	mov	r1, r5
   23d00:	mov	r0, r4
   23d04:	ldr	r2, [pc, #40]	; 23d34 <__flatcc_error_report@@Base+0x268>
   23d08:	pop	{r4, r5, r6, lr}
   23d0c:	b	23c60 <__flatcc_error_report@@Base+0x194>
   23d10:	mov	r1, #12
   23d14:	mov	r0, r4
   23d18:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   23d1c:	str	r5, [r0, #4]
   23d20:	str	r0, [r6]
   23d24:	mov	r6, r0
   23d28:	mov	r0, r4
   23d2c:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   23d30:	b	23cd8 <__flatcc_error_report@@Base+0x20c>
   23d34:	andeq	r6, r4, r9, lsl #13
   23d38:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   23d3c:	mov	r3, #2
   23d40:	mov	r5, r0
   23d44:	mov	r4, r1
   23d48:	ldr	r6, [pc, #300]	; 23e7c <__flatcc_error_report@@Base+0x3b0>
   23d4c:	strh	r3, [r1, #8]
   23d50:	mov	r3, #0
   23d54:	ldr	r7, [pc, #292]	; 23e80 <__flatcc_error_report@@Base+0x3b4>
   23d58:	str	r3, [r1]
   23d5c:	ldr	r8, [pc, #288]	; 23e84 <__flatcc_error_report@@Base+0x3b8>
   23d60:	str	r3, [r1, #4]
   23d64:	ldr	r1, [r5, #40]	; 0x28
   23d68:	ldr	r3, [r1, #16]
   23d6c:	sub	r3, r3, #6
   23d70:	cmp	r3, #17
   23d74:	ldrls	pc, [pc, r3, lsl #2]
   23d78:	b	23e2c <__flatcc_error_report@@Base+0x360>
   23d7c:	strdeq	r3, [r2], -r8
   23d80:	andeq	r3, r2, ip, lsr #28
   23d84:	andeq	r3, r2, ip, lsr #28
   23d88:	andeq	r3, r2, ip, lsr #28
   23d8c:	andeq	r3, r2, ip, lsr #28
   23d90:	andeq	r3, r2, ip, lsr #28
   23d94:	andeq	r3, r2, ip, lsr #28
   23d98:	andeq	r3, r2, ip, lsr #28
   23d9c:	andeq	r3, r2, ip, lsr #28
   23da0:	andeq	r3, r2, ip, lsr #28
   23da4:	andeq	r3, r2, ip, lsr #28
   23da8:	andeq	r3, r2, ip, lsr #28
   23dac:	andeq	r3, r2, ip, lsl lr
   23db0:	andeq	r3, r2, ip, lsr #28
   23db4:	andeq	r3, r2, r4, asr #27
   23db8:	andeq	r3, r2, r0, ror #27
   23dbc:	andeq	r3, r2, r0, asr #28
   23dc0:	andeq	r3, r2, r0, asr #28
   23dc4:	ldr	r3, [r4]
   23dc8:	cmp	r3, #0
   23dcc:	ldreq	r3, [r1]
   23dd0:	streq	r3, [r4]
   23dd4:	mov	r0, r5
   23dd8:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   23ddc:	b	23d64 <__flatcc_error_report@@Base+0x298>
   23de0:	ldr	r2, [pc, #160]	; 23e88 <__flatcc_error_report@@Base+0x3bc>
   23de4:	mov	r3, #1
   23de8:	strh	r3, [r4, #8]
   23dec:	mov	r0, r5
   23df0:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   23df4:	b	23dd4 <__flatcc_error_report@@Base+0x308>
   23df8:	mov	r3, #1
   23dfc:	mov	r2, r8
   23e00:	mov	r0, r5
   23e04:	strh	r3, [r4, #8]
   23e08:	str	r7, [sp]
   23e0c:	str	r3, [sp, #4]
   23e10:	mov	r3, #0
   23e14:	bl	23acc <__flatcc_error_report@@Base>
   23e18:	b	23dd4 <__flatcc_error_report@@Base+0x308>
   23e1c:	mov	r3, #1
   23e20:	mov	r2, r6
   23e24:	strh	r3, [r4, #8]
   23e28:	b	23dec <__flatcc_error_report@@Base+0x320>
   23e2c:	ldr	r2, [pc, #88]	; 23e8c <__flatcc_error_report@@Base+0x3c0>
   23e30:	mov	r0, r5
   23e34:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   23e38:	mov	r3, #1
   23e3c:	strh	r3, [r4, #8]
   23e40:	ldr	r2, [r4]
   23e44:	mov	r1, #22
   23e48:	mov	r0, r5
   23e4c:	cmp	r2, #0
   23e50:	ldrne	r3, [r5, #40]	; 0x28
   23e54:	ldrne	r3, [r3]
   23e58:	subne	r3, r3, r2
   23e5c:	ldr	r2, [pc, #44]	; 23e90 <__flatcc_error_report@@Base+0x3c4>
   23e60:	strne	r3, [r4, #4]
   23e64:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   23e68:	cmp	r0, #0
   23e6c:	moveq	r3, #1
   23e70:	strheq	r3, [r4, #8]
   23e74:	add	sp, sp, #8
   23e78:	pop	{r4, r5, r6, r7, r8, pc}
   23e7c:	strdeq	r6, [r4], -r8
   23e80:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   23e84:	andeq	r6, r4, ip, asr #13
   23e88:	andeq	r6, r4, lr, lsr #13
   23e8c:	andeq	r6, r4, r7, lsl r7
   23e90:	andeq	r6, r4, r2, asr #14
   23e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e98:	mov	r6, r0
   23e9c:	sub	sp, sp, #36	; 0x24
   23ea0:	mov	r4, r1
   23ea4:	mov	r1, #45	; 0x2d
   23ea8:	mov	r7, r3
   23eac:	mov	r8, r2
   23eb0:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   23eb4:	ldr	r5, [r6, #40]	; 0x28
   23eb8:	mov	sl, r0
   23ebc:	ldr	r3, [r5, #16]
   23ec0:	cmp	r3, #10
   23ec4:	beq	240fc <__flatcc_error_report@@Base+0x630>
   23ec8:	bgt	23f1c <__flatcc_error_report@@Base+0x450>
   23ecc:	ldr	r2, [pc, #1040]	; 242e4 <__flatcc_error_report@@Base+0x818>
   23ed0:	cmp	r3, r2
   23ed4:	beq	241f4 <__flatcc_error_report@@Base+0x728>
   23ed8:	cmp	r3, #9
   23edc:	beq	24248 <__flatcc_error_report@@Base+0x77c>
   23ee0:	cmn	r3, #988	; 0x3dc
   23ee4:	bne	24274 <__flatcc_error_report@@Base+0x7a8>
   23ee8:	mov	r3, #1
   23eec:	strb	r3, [r4]
   23ef0:	mov	r3, #6
   23ef4:	cmp	sl, #0
   23ef8:	strh	r3, [r4, #8]
   23efc:	beq	242d0 <__flatcc_error_report@@Base+0x804>
   23f00:	mov	r3, #1
   23f04:	ldr	r2, [pc, #988]	; 242e8 <__flatcc_error_report@@Base+0x81c>
   23f08:	mov	r1, r5
   23f0c:	mov	r0, r6
   23f10:	strh	r3, [r4, #8]
   23f14:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   23f18:	b	242d0 <__flatcc_error_report@@Base+0x804>
   23f1c:	cmp	r3, #14
   23f20:	beq	23f90 <__flatcc_error_report@@Base+0x4c4>
   23f24:	cmp	r3, #19
   23f28:	beq	241fc <__flatcc_error_report@@Base+0x730>
   23f2c:	cmp	r3, #11
   23f30:	bne	24274 <__flatcc_error_report@@Base+0x7a8>
   23f34:	mov	r3, #3
   23f38:	add	r1, sp, #28
   23f3c:	ldr	r0, [r5]
   23f40:	strh	r3, [r4, #8]
   23f44:	bl	13fe0 <strtod@plt>
   23f48:	ldrd	r2, [r5]
   23f4c:	vstr	d0, [r4]
   23f50:	ldr	r1, [sp, #28]
   23f54:	add	r3, r2, r3
   23f58:	cmp	r1, r3
   23f5c:	beq	241c4 <__flatcc_error_report@@Base+0x6f8>
   23f60:	ldr	r2, [pc, #900]	; 242ec <__flatcc_error_report@@Base+0x820>
   23f64:	mov	r3, #1
   23f68:	strh	r3, [r4, #8]
   23f6c:	mov	r1, r5
   23f70:	mov	r0, r6
   23f74:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   23f78:	cmp	sl, #0
   23f7c:	beq	242d0 <__flatcc_error_report@@Base+0x804>
   23f80:	ldrh	r3, [r4, #8]
   23f84:	cmp	r3, #6
   23f88:	bne	242d0 <__flatcc_error_report@@Base+0x804>
   23f8c:	b	23f00 <__flatcc_error_report@@Base+0x434>
   23f90:	mov	r3, #5
   23f94:	ldr	r2, [r5, #4]
   23f98:	strh	r3, [r4, #8]
   23f9c:	ldr	r3, [r5]
   23fa0:	add	lr, r3, r2
   23fa4:	cmp	r3, lr
   23fa8:	beq	240ac <__flatcc_error_report@@Base+0x5e0>
   23fac:	ldrb	r9, [r3]
   23fb0:	sub	r0, r9, #45	; 0x2d
   23fb4:	clz	r0, r0
   23fb8:	lsr	r0, r0, #5
   23fbc:	sub	r2, r2, r0
   23fc0:	cmp	r2, #1
   23fc4:	ble	240ac <__flatcc_error_report@@Base+0x5e0>
   23fc8:	add	r1, r3, r0
   23fcc:	ldrb	r3, [r3, r0]
   23fd0:	cmp	r3, #48	; 0x30
   23fd4:	bne	240ac <__flatcc_error_report@@Base+0x5e0>
   23fd8:	ldrb	r3, [r1, #1]
   23fdc:	orr	r3, r3, #32
   23fe0:	cmp	r3, #120	; 0x78
   23fe4:	bne	240ac <__flatcc_error_report@@Base+0x5e0>
   23fe8:	add	r8, r1, #2
   23fec:	sub	r3, lr, r8
   23ff0:	cmp	r3, #16
   23ff4:	addgt	r1, r1, #18
   23ff8:	movle	r1, lr
   23ffc:	mov	r7, r8
   24000:	mov	r2, #0
   24004:	mov	r3, #0
   24008:	b	24044 <__flatcc_error_report@@Base+0x578>
   2400c:	ldrb	r0, [r7], #1
   24010:	sub	fp, r0, #48	; 0x30
   24014:	cmp	fp, #9
   24018:	bhi	240c8 <__flatcc_error_report@@Base+0x5fc>
   2401c:	lsl	ip, r3, #4
   24020:	lsl	fp, r2, #4
   24024:	orr	ip, ip, r2, lsr #28
   24028:	subs	r3, fp, #48	; 0x30
   2402c:	str	r3, [sp]
   24030:	sbc	r3, ip, #0
   24034:	str	r3, [sp, #4]
   24038:	ldrd	r2, [sp]
   2403c:	adds	r2, r2, r0
   24040:	adc	r3, r3, #0
   24044:	cmp	r1, r7
   24048:	mov	ip, r7
   2404c:	bne	2400c <__flatcc_error_report@@Base+0x540>
   24050:	cmp	r8, ip
   24054:	beq	240ac <__flatcc_error_report@@Base+0x5e0>
   24058:	cmp	lr, ip
   2405c:	beq	240a0 <__flatcc_error_report@@Base+0x5d4>
   24060:	cmp	ip, r1
   24064:	ldrb	r0, [ip]
   24068:	bne	24088 <__flatcc_error_report@@Base+0x5bc>
   2406c:	sub	r1, r0, #48	; 0x30
   24070:	cmp	r1, #9
   24074:	bls	240ac <__flatcc_error_report@@Base+0x5e0>
   24078:	orr	r0, r0, #32
   2407c:	sub	r1, r0, #97	; 0x61
   24080:	cmp	r1, #5
   24084:	bls	240ac <__flatcc_error_report@@Base+0x5e0>
   24088:	cmp	r0, #80	; 0x50
   2408c:	beq	240ac <__flatcc_error_report@@Base+0x5e0>
   24090:	cmp	r0, #112	; 0x70
   24094:	beq	240ac <__flatcc_error_report@@Base+0x5e0>
   24098:	cmp	r0, #46	; 0x2e
   2409c:	beq	240ac <__flatcc_error_report@@Base+0x5e0>
   240a0:	cmp	r9, #45	; 0x2d
   240a4:	strd	r2, [r4]
   240a8:	bne	242b0 <__flatcc_error_report@@Base+0x7e4>
   240ac:	ldr	r2, [pc, #572]	; 242f0 <__flatcc_error_report@@Base+0x824>
   240b0:	mov	r3, #1
   240b4:	strh	r3, [r4, #8]
   240b8:	mov	r1, r5
   240bc:	mov	r0, r6
   240c0:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   240c4:	b	242b0 <__flatcc_error_report@@Base+0x7e4>
   240c8:	orr	r0, r0, #32
   240cc:	sub	fp, r0, #97	; 0x61
   240d0:	cmp	fp, #5
   240d4:	bhi	24050 <__flatcc_error_report@@Base+0x584>
   240d8:	lsl	ip, r3, #4
   240dc:	lsl	fp, r2, #4
   240e0:	orr	ip, ip, r2, lsr #28
   240e4:	subs	r3, fp, #87	; 0x57
   240e8:	str	r3, [sp, #8]
   240ec:	sbc	r3, ip, #0
   240f0:	str	r3, [sp, #12]
   240f4:	ldrd	r2, [sp, #8]
   240f8:	b	2403c <__flatcc_error_report@@Base+0x570>
   240fc:	ldr	lr, [r5]
   24100:	mov	r2, #5
   24104:	ldr	ip, [r5, #4]
   24108:	strh	r2, [r4, #8]
   2410c:	add	ip, lr, ip
   24110:	cmp	lr, ip
   24114:	beq	24160 <__flatcc_error_report@@Base+0x694>
   24118:	ldrb	r9, [lr]
   2411c:	mov	r0, #0
   24120:	mov	r1, #0
   24124:	mov	fp, r3
   24128:	strd	r0, [sp]
   2412c:	cmp	r9, #45	; 0x2d
   24130:	movne	r8, lr
   24134:	addeq	r8, lr, #1
   24138:	mov	r7, r8
   2413c:	cmp	ip, r7
   24140:	mov	r1, r7
   24144:	beq	242dc <__flatcc_error_report@@Base+0x810>
   24148:	ldrb	r2, [r7], #1
   2414c:	sub	r0, r2, #48	; 0x30
   24150:	cmp	r0, #9
   24154:	bls	24170 <__flatcc_error_report@@Base+0x6a4>
   24158:	cmp	lr, r1
   2415c:	bne	2427c <__flatcc_error_report@@Base+0x7b0>
   24160:	mov	r3, #1
   24164:	ldr	r2, [pc, #392]	; 242f4 <__flatcc_error_report@@Base+0x828>
   24168:	strh	r3, [r4, #8]
   2416c:	b	240b8 <__flatcc_error_report@@Base+0x5ec>
   24170:	ldr	r3, [sp]
   24174:	umull	r0, r1, r3, fp
   24178:	ldr	r3, [sp, #4]
   2417c:	mla	r1, fp, r3, r1
   24180:	subs	r3, r0, #48	; 0x30
   24184:	str	r3, [sp, #16]
   24188:	sbc	r3, r1, #0
   2418c:	str	r3, [sp, #20]
   24190:	ldrd	r0, [sp, #16]
   24194:	adds	r0, r0, r2
   24198:	ldrd	r2, [sp]
   2419c:	adc	r1, r1, #0
   241a0:	cmp	r3, r1
   241a4:	cmpeq	r2, r0
   241a8:	bhi	24160 <__flatcc_error_report@@Base+0x694>
   241ac:	strd	r0, [sp]
   241b0:	b	2413c <__flatcc_error_report@@Base+0x670>
   241b4:	cmp	r2, #101	; 0x65
   241b8:	beq	24160 <__flatcc_error_report@@Base+0x694>
   241bc:	cmp	r2, #112	; 0x70
   241c0:	b	2429c <__flatcc_error_report@@Base+0x7d0>
   241c4:	ldrb	r3, [r2]
   241c8:	cmp	r3, #46	; 0x2e
   241cc:	bne	241e0 <__flatcc_error_report@@Base+0x714>
   241d0:	mov	r3, #1
   241d4:	ldr	r2, [pc, #284]	; 242f8 <__flatcc_error_report@@Base+0x82c>
   241d8:	strh	r3, [r4, #8]
   241dc:	b	23f6c <__flatcc_error_report@@Base+0x4a0>
   241e0:	cmp	sl, #0
   241e4:	vnegne.f64	d0, d0
   241e8:	vstrne	d0, [r4]
   241ec:	bne	23f80 <__flatcc_error_report@@Base+0x4b4>
   241f0:	b	242d0 <__flatcc_error_report@@Base+0x804>
   241f4:	mov	r3, #0
   241f8:	b	23eec <__flatcc_error_report@@Base+0x420>
   241fc:	mov	r0, r6
   24200:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   24204:	mov	r1, r4
   24208:	mov	r0, r6
   2420c:	bl	23d38 <__flatcc_error_report@@Base+0x26c>
   24210:	tst	r8, #1
   24214:	moveq	r3, #1
   24218:	strheq	r3, [r4, #8]
   2421c:	beq	24274 <__flatcc_error_report@@Base+0x7a8>
   24220:	cmp	sl, #0
   24224:	beq	24240 <__flatcc_error_report@@Base+0x774>
   24228:	ldr	r2, [pc, #204]	; 242fc <__flatcc_error_report@@Base+0x830>
   2422c:	mov	r3, #1
   24230:	strh	r3, [r4, #8]
   24234:	mov	r1, r5
   24238:	mov	r0, r6
   2423c:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   24240:	add	sp, sp, #36	; 0x24
   24244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24248:	mov	r1, r4
   2424c:	mov	r0, r6
   24250:	bl	23cac <__flatcc_error_report@@Base+0x1e0>
   24254:	cmp	sl, #0
   24258:	moveq	r3, #13
   2425c:	strheq	r3, [r4, #8]
   24260:	beq	24240 <__flatcc_error_report@@Base+0x774>
   24264:	mov	r3, #1
   24268:	ldr	r2, [pc, #144]	; 24300 <__flatcc_error_report@@Base+0x834>
   2426c:	strh	r3, [r4, #8]
   24270:	b	24234 <__flatcc_error_report@@Base+0x768>
   24274:	mov	r2, r7
   24278:	b	24234 <__flatcc_error_report@@Base+0x768>
   2427c:	cmp	r8, r1
   24280:	beq	24160 <__flatcc_error_report@@Base+0x694>
   24284:	cmp	r2, #80	; 0x50
   24288:	beq	24160 <__flatcc_error_report@@Base+0x694>
   2428c:	bhi	241b4 <__flatcc_error_report@@Base+0x6e8>
   24290:	cmp	r2, #46	; 0x2e
   24294:	beq	24160 <__flatcc_error_report@@Base+0x694>
   24298:	cmp	r2, #69	; 0x45
   2429c:	beq	24160 <__flatcc_error_report@@Base+0x694>
   242a0:	ldrd	r2, [sp]
   242a4:	cmp	r9, #45	; 0x2d
   242a8:	strd	r2, [r4]
   242ac:	beq	24160 <__flatcc_error_report@@Base+0x694>
   242b0:	cmp	sl, #0
   242b4:	beq	242d0 <__flatcc_error_report@@Base+0x804>
   242b8:	ldrd	r2, [r4]
   242bc:	rsbs	r2, r2, #0
   242c0:	rsc	r3, r3, #0
   242c4:	strd	r2, [r4]
   242c8:	mov	r3, #4
   242cc:	strh	r3, [r4, #8]
   242d0:	mov	r0, r6
   242d4:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   242d8:	b	24240 <__flatcc_error_report@@Base+0x774>
   242dc:	cmp	r8, ip
   242e0:	b	2429c <__flatcc_error_report@@Base+0x7d0>
   242e4:			; <UNDEFINED> instruction: 0xfffffc26
   242e8:	andeq	r6, r4, r4, lsl #16
   242ec:	andeq	r6, r4, r8, lsl #15
   242f0:	andeq	r6, r4, r6, asr r7
   242f4:	andeq	r6, r4, r1, ror r7
   242f8:	muleq	r4, sp, r7
   242fc:	andeq	r6, r4, r4, asr #15
   24300:	andeq	r6, r4, r6, ror #15
   24304:	push	{r0, r1, r2, r4, r5, lr}
   24308:	mov	lr, #0
   2430c:	ldr	r5, [r0, #40]	; 0x28
   24310:	ldr	ip, [r5, #16]
   24314:	str	lr, [r0, #36]	; 0x24
   24318:	cmp	ip, r1
   2431c:	bne	2432c <__flatcc_error_report@@Base+0x860>
   24320:	add	sp, sp, #12
   24324:	pop	{r4, r5, lr}
   24328:	b	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   2432c:	mov	r4, r0
   24330:	mov	r1, r5
   24334:	str	lr, [sp]
   24338:	str	lr, [sp, #4]
   2433c:	bl	23acc <__flatcc_error_report@@Base>
   24340:	ldr	r0, [r4, #40]	; 0x28
   24344:	add	sp, sp, #12
   24348:	pop	{r4, r5, pc}
   2434c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24350:	mov	r1, #40	; 0x28
   24354:	mov	r5, r0
   24358:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   2435c:	subs	r6, r0, #0
   24360:	moveq	r4, r6
   24364:	beq	2442c <__flatcc_error_report@@Base+0x960>
   24368:	mov	r1, #9
   2436c:	mov	r0, r5
   24370:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   24374:	subs	r4, r0, #0
   24378:	beq	24408 <__flatcc_error_report@@Base+0x93c>
   2437c:	ldr	sl, [pc, #196]	; 24448 <__flatcc_error_report@@Base+0x97c>
   24380:	mov	r7, r4
   24384:	mov	r8, #0
   24388:	ldr	r9, [pc, #188]	; 2444c <__flatcc_error_report@@Base+0x980>
   2438c:	mov	r1, #24
   24390:	mov	r0, r5
   24394:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   24398:	mov	r4, r0
   2439c:	mov	r1, #58	; 0x3a
   243a0:	mov	r0, r5
   243a4:	str	r8, [r4]
   243a8:	str	r7, [r4, #4]
   243ac:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   243b0:	cmp	r0, #0
   243b4:	beq	243cc <__flatcc_error_report@@Base+0x900>
   243b8:	mov	r3, sl
   243bc:	mov	r2, #1
   243c0:	add	r1, r4, #8
   243c4:	mov	r0, r5
   243c8:	bl	23e94 <__flatcc_error_report@@Base+0x3c8>
   243cc:	ldr	r3, [r5, #108]	; 0x6c
   243d0:	cmp	r3, #9
   243d4:	bgt	2442c <__flatcc_error_report@@Base+0x960>
   243d8:	mov	r1, #44	; 0x2c
   243dc:	mov	r0, r5
   243e0:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   243e4:	cmp	r0, #0
   243e8:	beq	24408 <__flatcc_error_report@@Base+0x93c>
   243ec:	mov	r2, r9
   243f0:	mov	r1, #9
   243f4:	mov	r0, r5
   243f8:	mov	r8, r4
   243fc:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   24400:	subs	r7, r0, #0
   24404:	bne	2438c <__flatcc_error_report@@Base+0x8c0>
   24408:	mov	r3, r6
   2440c:	ldr	r2, [pc, #60]	; 24450 <__flatcc_error_report@@Base+0x984>
   24410:	mov	r1, #41	; 0x29
   24414:	mov	r0, r5
   24418:	bl	24304 <__flatcc_error_report@@Base+0x838>
   2441c:	mov	r3, r4
   24420:	mov	r4, #0
   24424:	cmp	r3, #0
   24428:	bne	24434 <__flatcc_error_report@@Base+0x968>
   2442c:	mov	r0, r4
   24430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24434:	ldr	r2, [r3]
   24438:	str	r4, [r3]
   2443c:	mov	r4, r3
   24440:	mov	r3, r2
   24444:	b	24424 <__flatcc_error_report@@Base+0x958>
   24448:	andeq	r6, r4, r7, lsr #16
   2444c:	andeq	r6, r4, r7, asr #16
   24450:	andeq	r6, r4, r4, ror r8
   24454:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   24458:	mov	r3, #1
   2445c:	mov	r4, r0
   24460:	mov	r6, r1
   24464:	mov	r5, #0
   24468:	ldr	r7, [r0, #40]	; 0x28
   2446c:	strh	r3, [r1, #8]
   24470:	mov	r1, #91	; 0x5b
   24474:	mov	r0, r4
   24478:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   2447c:	cmp	r0, #0
   24480:	bne	24530 <__flatcc_error_report@@Base+0xa64>
   24484:	cmp	r5, #1
   24488:	ble	2449c <__flatcc_error_report@@Base+0x9d0>
   2448c:	ldr	r2, [pc, #404]	; 24628 <__flatcc_error_report@@Base+0xb5c>
   24490:	mov	r1, r7
   24494:	mov	r0, r4
   24498:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   2449c:	ldr	r2, [r4, #40]	; 0x28
   244a0:	ldr	r3, [r2, #16]
   244a4:	cmn	r3, #984	; 0x3d8
   244a8:	bgt	24558 <__flatcc_error_report@@Base+0xa8c>
   244ac:	mvn	r1, #984	; 0x3d8
   244b0:	cmp	r3, r1
   244b4:	bge	244d8 <__flatcc_error_report@@Base+0xa0c>
   244b8:	cmn	r3, #988	; 0x3dc
   244bc:	bge	24538 <__flatcc_error_report@@Base+0xa6c>
   244c0:	cmn	r3, #996	; 0x3e4
   244c4:	bge	244d8 <__flatcc_error_report@@Base+0xa0c>
   244c8:	add	r3, r3, #996	; 0x3e4
   244cc:	add	r3, r3, #3
   244d0:	cmp	r3, #1
   244d4:	bhi	24544 <__flatcc_error_report@@Base+0xa78>
   244d8:	cmp	r5, #0
   244dc:	str	r2, [r6]
   244e0:	movne	r3, #7
   244e4:	moveq	r3, #8
   244e8:	mov	r0, r4
   244ec:	strh	r3, [r6, #8]
   244f0:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   244f4:	mov	r1, #93	; 0x5d
   244f8:	mov	r0, r4
   244fc:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   24500:	cmp	r0, #0
   24504:	beq	245d4 <__flatcc_error_report@@Base+0xb08>
   24508:	subs	r5, r5, #1
   2450c:	bcs	244f4 <__flatcc_error_report@@Base+0xa28>
   24510:	mov	r1, #0
   24514:	mov	r3, r7
   24518:	ldr	r2, [pc, #268]	; 2462c <__flatcc_error_report@@Base+0xb60>
   2451c:	mov	r0, r4
   24520:	str	r1, [sp]
   24524:	str	r1, [sp, #4]
   24528:	bl	23acc <__flatcc_error_report@@Base>
   2452c:	b	245dc <__flatcc_error_report@@Base+0xb10>
   24530:	add	r5, r5, #1
   24534:	b	24470 <__flatcc_error_report@@Base+0x9a4>
   24538:	ldr	r1, [pc, #240]	; 24630 <__flatcc_error_report@@Base+0xb64>
   2453c:	cmp	r3, r1
   24540:	beq	244d8 <__flatcc_error_report@@Base+0xa0c>
   24544:	ldr	r2, [pc, #232]	; 24634 <__flatcc_error_report@@Base+0xb68>
   24548:	mov	r1, #0
   2454c:	mov	r0, r4
   24550:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   24554:	b	244f4 <__flatcc_error_report@@Base+0xa28>
   24558:	ldr	r1, [pc, #216]	; 24638 <__flatcc_error_report@@Base+0xb6c>
   2455c:	cmp	r3, r1
   24560:	beq	245a0 <__flatcc_error_report@@Base+0xad4>
   24564:	bgt	24584 <__flatcc_error_report@@Base+0xab8>
   24568:	sub	r1, r1, #8
   2456c:	cmp	r3, r1
   24570:	blt	24544 <__flatcc_error_report@@Base+0xa78>
   24574:	cmn	r3, #976	; 0x3d0
   24578:	blt	244d8 <__flatcc_error_report@@Base+0xa0c>
   2457c:	add	r1, r1, #7
   24580:	b	2453c <__flatcc_error_report@@Base+0xa70>
   24584:	cmp	r3, #9
   24588:	beq	245b4 <__flatcc_error_report@@Base+0xae8>
   2458c:	cmp	r3, #93	; 0x5d
   24590:	ldreq	r2, [pc, #164]	; 2463c <__flatcc_error_report@@Base+0xb70>
   24594:	beq	24548 <__flatcc_error_report@@Base+0xa7c>
   24598:	cmn	r3, #972	; 0x3cc
   2459c:	b	24540 <__flatcc_error_report@@Base+0xa74>
   245a0:	cmp	r5, #0
   245a4:	str	r2, [r6]
   245a8:	movne	r3, #9
   245ac:	moveq	r3, #10
   245b0:	b	244e8 <__flatcc_error_report@@Base+0xa1c>
   245b4:	mov	r1, r6
   245b8:	mov	r0, r4
   245bc:	bl	23cac <__flatcc_error_report@@Base+0x1e0>
   245c0:	cmp	r5, #0
   245c4:	movne	r3, #11
   245c8:	moveq	r3, #12
   245cc:	strh	r3, [r6, #8]
   245d0:	b	244f4 <__flatcc_error_report@@Base+0xa28>
   245d4:	cmp	r5, #0
   245d8:	bne	24510 <__flatcc_error_report@@Base+0xa44>
   245dc:	mov	r1, #93	; 0x5d
   245e0:	mov	r0, r4
   245e4:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   245e8:	subs	r1, r0, #0
   245ec:	beq	24620 <__flatcc_error_report@@Base+0xb54>
   245f0:	mov	r3, #0
   245f4:	ldr	r2, [pc, #68]	; 24640 <__flatcc_error_report@@Base+0xb74>
   245f8:	mov	r0, r4
   245fc:	str	r3, [sp]
   24600:	str	r3, [sp, #4]
   24604:	mov	r3, r7
   24608:	bl	23acc <__flatcc_error_report@@Base>
   2460c:	mov	r1, #93	; 0x5d
   24610:	mov	r0, r4
   24614:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   24618:	cmp	r0, #0
   2461c:	bne	2460c <__flatcc_error_report@@Base+0xb40>
   24620:	add	sp, sp, #12
   24624:	pop	{r4, r5, r6, r7, pc}
   24628:	muleq	r4, r3, r8
   2462c:	andeq	r6, r4, lr, ror #17
   24630:			; <UNDEFINED> instruction: 0xfffffc25
   24634:	ldrdeq	r6, [r4], -r7
   24638:			; <UNDEFINED> instruction: 0xfffffc32
   2463c:			; <UNDEFINED> instruction: 0x000468bb
   24640:	andeq	r6, r4, pc, lsl #18
   24644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24648:	mov	r6, r1
   2464c:	sub	sp, sp, #20
   24650:	mov	r8, r2
   24654:	mov	r1, #9
   24658:	mov	r4, r0
   2465c:	ldr	r2, [pc, #564]	; 24898 <__flatcc_error_report@@Base+0xdcc>
   24660:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   24664:	cmp	r0, #0
   24668:	beq	247d4 <__flatcc_error_report@@Base+0xd08>
   2466c:	str	r0, [r6, #4]
   24670:	mov	r0, r4
   24674:	bl	2434c <__flatcc_error_report@@Base+0x880>
   24678:	ldr	r2, [pc, #540]	; 2489c <__flatcc_error_report@@Base+0xdd0>
   2467c:	mov	r1, #123	; 0x7b
   24680:	str	r0, [r6, #28]
   24684:	mov	r0, r4
   24688:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   2468c:	cmp	r0, #0
   24690:	beq	247d4 <__flatcc_error_report@@Base+0xd08>
   24694:	ldr	r9, [pc, #516]	; 248a0 <__flatcc_error_report@@Base+0xdd4>
   24698:	ldr	sl, [pc, #516]	; 248a4 <__flatcc_error_report@@Base+0xdd8>
   2469c:	ldr	fp, [pc, #516]	; 248a8 <__flatcc_error_report@@Base+0xddc>
   246a0:	ldr	r7, [r4, #40]	; 0x28
   246a4:	add	r5, r6, #20
   246a8:	ldr	r3, [r4, #40]	; 0x28
   246ac:	ldr	r1, [r3, #16]
   246b0:	cmp	r1, #125	; 0x7d
   246b4:	bne	24708 <__flatcc_error_report@@Base+0xc3c>
   246b8:	mov	r0, r4
   246bc:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   246c0:	clz	r0, r0
   246c4:	cmp	r7, #0
   246c8:	lsr	r0, r0, #5
   246cc:	moveq	r0, #0
   246d0:	cmp	r0, #0
   246d4:	beq	246f8 <__flatcc_error_report@@Base+0xc2c>
   246d8:	mov	r3, #0
   246dc:	ldr	r2, [pc, #456]	; 248ac <__flatcc_error_report@@Base+0xde0>
   246e0:	mov	r0, r4
   246e4:	ldr	r1, [r4, #40]	; 0x28
   246e8:	str	r3, [sp]
   246ec:	str	r3, [sp, #4]
   246f0:	mov	r3, r7
   246f4:	bl	23acc <__flatcc_error_report@@Base>
   246f8:	mov	r0, r5
   246fc:	add	sp, sp, #20
   24700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24704:	b	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   24708:	cmp	r8, r9
   2470c:	mov	r1, r5
   24710:	mov	r0, r4
   24714:	bne	24810 <__flatcc_error_report@@Base+0xd44>
   24718:	bl	239d4 <__flatcc_fb_default_error_out@@Base+0x2f0>
   2471c:	mov	r5, r0
   24720:	ldr	r2, [pc, #392]	; 248b0 <__flatcc_error_report@@Base+0xde4>
   24724:	mov	r1, #9
   24728:	mov	r0, r4
   2472c:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   24730:	cmp	r0, #0
   24734:	beq	247c0 <__flatcc_error_report@@Base+0xcf4>
   24738:	ldr	r2, [pc, #372]	; 248b4 <__flatcc_error_report@@Base+0xde8>
   2473c:	mov	r1, #40	; 0x28
   24740:	str	r0, [r5, #4]
   24744:	mov	r0, r4
   24748:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   2474c:	cmp	r0, #0
   24750:	beq	247c0 <__flatcc_error_report@@Base+0xcf4>
   24754:	add	r1, r5, #32
   24758:	mov	r0, r4
   2475c:	bl	24454 <__flatcc_error_report@@Base+0x988>
   24760:	ldr	r2, [pc, #336]	; 248b8 <__flatcc_error_report@@Base+0xdec>
   24764:	mov	r1, #41	; 0x29
   24768:	mov	r0, r4
   2476c:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   24770:	cmp	r0, #0
   24774:	beq	247c0 <__flatcc_error_report@@Base+0xcf4>
   24778:	ldr	r2, [pc, #316]	; 248bc <__flatcc_error_report@@Base+0xdf0>
   2477c:	mov	r1, #58	; 0x3a
   24780:	mov	r0, r4
   24784:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   24788:	cmp	r0, #0
   2478c:	beq	247c0 <__flatcc_error_report@@Base+0xcf4>
   24790:	add	r1, r5, #16
   24794:	mov	r0, r4
   24798:	bl	24454 <__flatcc_error_report@@Base+0x988>
   2479c:	mov	r1, #61	; 0x3d
   247a0:	mov	r0, r4
   247a4:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   247a8:	subs	r3, r0, #0
   247ac:	beq	247e8 <__flatcc_error_report@@Base+0xd1c>
   247b0:	ldr	r2, [pc, #264]	; 248c0 <__flatcc_error_report@@Base+0xdf4>
   247b4:	mov	r1, r3
   247b8:	mov	r0, r4
   247bc:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   247c0:	mov	r0, r4
   247c4:	bl	2394c <__flatcc_fb_default_error_out@@Base+0x268>
   247c8:	ldr	r3, [r4, #108]	; 0x6c
   247cc:	cmp	r3, #9
   247d0:	ble	246a4 <__flatcc_error_report@@Base+0xbd8>
   247d4:	mov	r1, #125	; 0x7d
   247d8:	mov	r0, r4
   247dc:	add	sp, sp, #20
   247e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   247e4:	b	23994 <__flatcc_fb_default_error_out@@Base+0x2b0>
   247e8:	mov	r0, r4
   247ec:	str	r3, [sp, #12]
   247f0:	bl	2434c <__flatcc_error_report@@Base+0x880>
   247f4:	ldr	r2, [pc, #200]	; 248c4 <__flatcc_error_report@@Base+0xdf8>
   247f8:	str	r0, [r5, #64]	; 0x40
   247fc:	ldr	r3, [sp, #12]
   24800:	mov	r1, #59	; 0x3b
   24804:	mov	r0, r4
   24808:	bl	24304 <__flatcc_error_report@@Base+0x838>
   2480c:	b	247c8 <__flatcc_error_report@@Base+0xcfc>
   24810:	bl	239d4 <__flatcc_fb_default_error_out@@Base+0x2f0>
   24814:	mov	r5, r0
   24818:	mov	r2, sl
   2481c:	mov	r1, #9
   24820:	mov	r0, r4
   24824:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   24828:	cmp	r0, #0
   2482c:	beq	247c0 <__flatcc_error_report@@Base+0xcf4>
   24830:	mov	r2, fp
   24834:	mov	r1, #58	; 0x3a
   24838:	str	r0, [r5, #4]
   2483c:	mov	r0, r4
   24840:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   24844:	cmp	r0, #0
   24848:	beq	247c0 <__flatcc_error_report@@Base+0xcf4>
   2484c:	add	r1, r5, #16
   24850:	mov	r0, r4
   24854:	bl	24454 <__flatcc_error_report@@Base+0x988>
   24858:	mov	r1, #61	; 0x3d
   2485c:	mov	r0, r4
   24860:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   24864:	cmp	r0, #0
   24868:	beq	24880 <__flatcc_error_report@@Base+0xdb4>
   2486c:	ldr	r3, [pc, #84]	; 248c8 <__flatcc_error_report@@Base+0xdfc>
   24870:	mov	r2, #2
   24874:	add	r1, r5, #48	; 0x30
   24878:	mov	r0, r4
   2487c:	bl	23e94 <__flatcc_error_report@@Base+0x3c8>
   24880:	mov	r0, r4
   24884:	bl	2434c <__flatcc_error_report@@Base+0x880>
   24888:	mov	r3, #0
   2488c:	ldr	r2, [pc, #56]	; 248cc <__flatcc_error_report@@Base+0xe00>
   24890:	str	r0, [r5, #64]	; 0x40
   24894:	b	24800 <__flatcc_error_report@@Base+0xd34>
   24898:	andeq	r6, r4, r6, lsr #18
   2489c:	andeq	r6, r4, r9, asr #18
   248a0:			; <UNDEFINED> instruction: 0xfffffc39
   248a4:	andeq	r6, r4, r5, asr #20
   248a8:	andeq	r6, r4, pc, asr sl
   248ac:	andeq	r6, r4, sp, asr #21
   248b0:	andeq	r6, r4, r2, ror #18
   248b4:	andeq	r6, r4, sp, ror r9
   248b8:	andeq	r6, r4, r2, lsr #19
   248bc:	andeq	r6, r4, r9, asr #19
   248c0:	strdeq	r6, [r4], -ip
   248c4:	andeq	r6, r4, r2, lsr #20
   248c8:	andeq	r6, r4, r8, lsl #21
   248cc:	andeq	r6, r4, fp, lsr #21

000248d0 <error_ref_sym@@Base>:
   248d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   248d4:	mov	sl, r0
   248d8:	sub	sp, sp, #68	; 0x44
   248dc:	mov	r9, r1
   248e0:	mov	fp, r2
   248e4:	mov	r7, r3
   248e8:	mov	r8, r1
   248ec:	mov	r4, #0
   248f0:	mov	r6, #50	; 0x32
   248f4:	cmp	r6, #0
   248f8:	add	r3, sp, #12
   248fc:	movle	r2, #0
   24900:	movgt	r2, #1
   24904:	cmp	r8, #0
   24908:	moveq	r2, #0
   2490c:	cmp	r2, #0
   24910:	bne	24964 <error_ref_sym@@Base+0x94>
   24914:	add	r1, sp, #64	; 0x40
   24918:	cmp	r4, #0
   2491c:	add	r1, r1, r4
   24920:	subgt	r4, r4, #1
   24924:	cmp	r6, #0
   24928:	mov	r0, sl
   2492c:	strb	r2, [r1, #-52]	; 0xffffffcc
   24930:	movle	r4, #50	; 0x32
   24934:	ldrle	r2, [pc, #108]	; 249a8 <error_ref_sym@@Base+0xd8>
   24938:	ldr	r1, [r9, #4]
   2493c:	ldrle	r2, [r2]
   24940:	strle	r2, [sp, #59]	; 0x3b
   24944:	cmp	r7, #0
   24948:	mov	r2, fp
   2494c:	ldrne	r7, [r7, #4]
   24950:	stm	sp, {r3, r4}
   24954:	mov	r3, r7
   24958:	bl	23acc <__flatcc_error_report@@Base>
   2495c:	add	sp, sp, #68	; 0x44
   24960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24964:	ldr	r1, [r8, #4]
   24968:	add	r0, r3, r4
   2496c:	ldm	r1, {r1, r5}
   24970:	cmp	r6, r5
   24974:	movlt	r5, r6
   24978:	mov	r2, r5
   2497c:	add	r4, r4, r5
   24980:	bl	13efc <memcpy@plt>
   24984:	add	r3, sp, #64	; 0x40
   24988:	sub	r6, r6, r5
   2498c:	add	r2, r3, r4
   24990:	mov	r3, #46	; 0x2e
   24994:	sub	r6, r6, #1
   24998:	add	r4, r4, #1
   2499c:	strb	r3, [r2, #-52]	; 0xffffffcc
   249a0:	ldr	r8, [r8]
   249a4:	b	248f4 <error_ref_sym@@Base+0x24>
   249a8:	andeq	r6, r4, r8, lsl #9

000249ac <__flatcc_fb_init_parser@@Base>:
   249ac:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249b0:	mov	r8, r3
   249b4:	mov	r6, r1
   249b8:	mov	r5, r2
   249bc:	mov	r1, #0
   249c0:	mov	r2, #560	; 0x230
   249c4:	mov	r4, r0
   249c8:	ldr	r7, [sp, #52]	; 0x34
   249cc:	bl	13fc8 <memset@plt>
   249d0:	cmp	r8, #0
   249d4:	add	r0, r4, #128	; 0x80
   249d8:	ldrne	r3, [sp, #48]	; 0x30
   249dc:	strne	r8, [r4, #8]
   249e0:	ldreq	r3, [pc, #408]	; 24b80 <__flatcc_fb_init_parser@@Base+0x1d4>
   249e4:	strne	r3, [r4, #12]
   249e8:	streq	r3, [r4, #8]
   249ec:	cmp	r6, #0
   249f0:	beq	24a44 <__flatcc_fb_init_parser@@Base+0x98>
   249f4:	mov	r2, #224	; 0xe0
   249f8:	mov	r1, r6
   249fc:	bl	13efc <memcpy@plt>
   24a00:	ldr	r2, [r4, #192]	; 0xc0
   24a04:	cmp	r7, #0
   24a08:	addeq	r7, r4, #416	; 0x1a0
   24a0c:	str	r7, [r4, #412]	; 0x19c
   24a10:	cmp	r2, #8
   24a14:	bhi	24a28 <__flatcc_fb_init_parser@@Base+0x7c>
   24a18:	mov	r3, #1
   24a1c:	lsl	r2, r3, r2
   24a20:	tst	r2, #276	; 0x114
   24a24:	bne	24a4c <__flatcc_fb_init_parser@@Base+0xa0>
   24a28:	ldr	r2, [pc, #340]	; 24b84 <__flatcc_fb_init_parser@@Base+0x1d8>
   24a2c:	mov	r0, r4
   24a30:	mov	r1, #0
   24a34:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   24a38:	mvn	r0, #0
   24a3c:	add	sp, sp, #12
   24a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a44:	bl	142bc <flatcc_init_options@@Base>
   24a48:	b	24a00 <__flatcc_fb_init_parser@@Base+0x54>
   24a4c:	ldr	r2, [r4, #196]	; 0xc4
   24a50:	cmp	r2, #8
   24a54:	bhi	24a64 <__flatcc_fb_init_parser@@Base+0xb8>
   24a58:	lsl	r3, r3, r2
   24a5c:	tst	r3, #276	; 0x114
   24a60:	bne	24a6c <__flatcc_fb_init_parser@@Base+0xc0>
   24a64:	ldr	r2, [pc, #284]	; 24b88 <__flatcc_fb_init_parser@@Base+0x1dc>
   24a68:	b	24a2c <__flatcc_fb_init_parser@@Base+0x80>
   24a6c:	ldr	r3, [pc, #280]	; 24b8c <__flatcc_fb_init_parser@@Base+0x1e0>
   24a70:	cmp	r5, #0
   24a74:	moveq	r5, r3
   24a78:	mov	r0, r5
   24a7c:	bl	13fa4 <strlen@plt>
   24a80:	mov	r1, r0
   24a84:	mov	sl, r0
   24a88:	ldr	r2, [r6, #96]	; 0x60
   24a8c:	mov	r0, r5
   24a90:	bl	23570 <__flatcc_fb_create_basename@@Base>
   24a94:	cmp	r0, #0
   24a98:	mov	r7, r0
   24a9c:	str	r0, [r4, #512]	; 0x200
   24aa0:	bne	24aa8 <__flatcc_fb_init_parser@@Base+0xfc>
   24aa4:	bl	23704 <__flatcc_fb_default_error_out@@Base+0x20>
   24aa8:	bl	13fa4 <strlen@plt>
   24aac:	mov	r9, r0
   24ab0:	mov	r1, r0
   24ab4:	mov	r0, r7
   24ab8:	bl	23174 <__flatcc_fb_copy_path_n@@Base>
   24abc:	subs	r7, r0, #0
   24ac0:	movne	r8, r7
   24ac4:	addne	r3, r7, r9
   24ac8:	beq	24aa4 <__flatcc_fb_init_parser@@Base+0xf8>
   24acc:	cmp	r8, r3
   24ad0:	beq	24ae0 <__flatcc_fb_init_parser@@Base+0x134>
   24ad4:	ldrb	fp, [r8]
   24ad8:	cmp	fp, #0
   24adc:	bne	24b64 <__flatcc_fb_init_parser@@Base+0x1b8>
   24ae0:	ldr	r2, [pc, #168]	; 24b90 <__flatcc_fb_init_parser@@Base+0x1e4>
   24ae4:	mov	r1, sl
   24ae8:	mov	r0, r5
   24aec:	str	r7, [r4, #496]	; 0x1f0
   24af0:	str	r9, [r4, #500]	; 0x1f4
   24af4:	str	r7, [r4, #516]	; 0x204
   24af8:	bl	23570 <__flatcc_fb_create_basename@@Base>
   24afc:	cmp	r0, #0
   24b00:	str	r0, [r4, #520]	; 0x208
   24b04:	beq	24aa4 <__flatcc_fb_init_parser@@Base+0xf8>
   24b08:	ldr	r0, [r6, #192]	; 0xc0
   24b0c:	cmp	r0, #0
   24b10:	beq	24b20 <__flatcc_fb_init_parser@@Base+0x174>
   24b14:	str	r0, [r4, #476]	; 0x1dc
   24b18:	bl	13fa4 <strlen@plt>
   24b1c:	str	r0, [r4, #480]	; 0x1e0
   24b20:	mov	r1, #0
   24b24:	mov	r0, r4
   24b28:	bl	23858 <__flatcc_fb_default_error_out@@Base+0x174>
   24b2c:	mov	r5, r0
   24b30:	mov	r2, #0
   24b34:	ldr	r0, [r4, #412]	; 0x19c
   24b38:	mov	r1, r2
   24b3c:	str	r5, [r4, #544]	; 0x220
   24b40:	bl	22c14 <fb_scope_table_find@@Base>
   24b44:	cmp	r5, r0
   24b48:	moveq	r0, #0
   24b4c:	beq	24a3c <__flatcc_fb_init_parser@@Base+0x90>
   24b50:	ldr	r3, [pc, #60]	; 24b94 <__flatcc_fb_init_parser@@Base+0x1e8>
   24b54:	movw	r2, #1331	; 0x533
   24b58:	ldr	r1, [pc, #56]	; 24b98 <__flatcc_fb_init_parser@@Base+0x1ec>
   24b5c:	ldr	r0, [pc, #56]	; 24b9c <__flatcc_fb_init_parser@@Base+0x1f0>
   24b60:	bl	14070 <__assert_fail@plt>
   24b64:	str	r3, [sp, #4]
   24b68:	bl	13f80 <__ctype_toupper_loc@plt>
   24b6c:	ldr	r2, [r0]
   24b70:	ldr	r3, [sp, #4]
   24b74:	ldr	r2, [r2, fp, lsl #2]
   24b78:	strb	r2, [r8], #1
   24b7c:	b	24acc <__flatcc_fb_init_parser@@Base+0x120>
   24b80:	andeq	r3, r2, r4, ror #13
   24b84:	strdeq	r6, [r4], -fp
   24b88:	andeq	r6, r4, r3, lsr fp
   24b8c:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   24b90:	andeq	r1, r3, fp, lsr #2
   24b94:	andeq	r6, r4, sp, lsl #9
   24b98:	andeq	r6, r4, r5, lsr #11
   24b9c:	andeq	r6, r4, ip, ror #22

00024ba0 <__flatcc_fb_parse@@Base>:
   24ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24ba4:	mov	r5, r1
   24ba8:	mov	r4, r0
   24bac:	sub	sp, sp, #28
   24bb0:	add	r7, r5, r2
   24bb4:	str	r1, [r0, #60]	; 0x3c
   24bb8:	mov	r1, #1
   24bbc:	ldr	r8, [pc, #4024]	; 25b7c <__flatcc_fb_parse@@Base+0xfdc>
   24bc0:	str	r1, [r0, #64]	; 0x40
   24bc4:	mov	r1, #9
   24bc8:	ldr	r9, [pc, #4016]	; 25b80 <__flatcc_fb_parse@@Base+0xfe0>
   24bcc:	str	r1, [r0, #84]	; 0x54
   24bd0:	ldr	r1, [pc, #4012]	; 25b84 <__flatcc_fb_parse@@Base+0xfe4>
   24bd4:	str	r1, [r0, #68]	; 0x44
   24bd8:	mov	r1, #4
   24bdc:	str	r1, [r0, #72]	; 0x48
   24be0:	mov	r1, #0
   24be4:	cmp	r3, r1
   24be8:	str	r1, [r0, #76]	; 0x4c
   24bec:	str	r1, [r0, #80]	; 0x50
   24bf0:	str	r1, [r0, #96]	; 0x60
   24bf4:	str	r1, [r0, #100]	; 0x64
   24bf8:	ldr	r0, [pc, #3976]	; 25b88 <__flatcc_fb_parse@@Base+0xfe8>
   24bfc:	strne	r5, [r4, #16]
   24c00:	str	r0, [r4, #104]	; 0x68
   24c04:	ldr	r0, [pc, #3968]	; 25b8c <__flatcc_fb_parse@@Base+0xfec>
   24c08:	str	r0, [r4, #88]	; 0x58
   24c0c:	mov	r0, #5
   24c10:	str	r0, [r4, #92]	; 0x5c
   24c14:	ldr	sl, [pc, #3956]	; 25b90 <__flatcc_fb_parse@@Base+0xff0>
   24c18:	cmp	r7, r5
   24c1c:	beq	24ec8 <__flatcc_fb_parse@@Base+0x328>
   24c20:	ldrb	r1, [r5]
   24c24:	cmp	r1, #57	; 0x39
   24c28:	bhi	25128 <__flatcc_fb_parse@@Base+0x588>
   24c2c:	cmp	r1, #49	; 0x31
   24c30:	bcs	25880 <__flatcc_fb_parse@@Base+0xce0>
   24c34:	cmp	r1, #38	; 0x26
   24c38:	beq	25450 <__flatcc_fb_parse@@Base+0x8b0>
   24c3c:	bhi	2507c <__flatcc_fb_parse@@Base+0x4dc>
   24c40:	cmp	r1, #13
   24c44:	beq	252e4 <__flatcc_fb_parse@@Base+0x744>
   24c48:	bhi	25004 <__flatcc_fb_parse@@Base+0x464>
   24c4c:	cmp	r1, #9
   24c50:	beq	25018 <__flatcc_fb_parse@@Base+0x478>
   24c54:	cmp	r1, #10
   24c58:	beq	252b8 <__flatcc_fb_parse@@Base+0x718>
   24c5c:	cmp	r1, #0
   24c60:	beq	24ec8 <__flatcc_fb_parse@@Base+0x328>
   24c64:	cmp	r1, #127	; 0x7f
   24c68:	cmpne	r1, #31
   24c6c:	add	r6, r5, #1
   24c70:	mov	r3, r6
   24c74:	mov	r2, r5
   24c78:	movls	r1, #5
   24c7c:	movhi	r1, #8
   24c80:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   24c84:	mov	sl, r6
   24c88:	b	24d0c <__flatcc_fb_parse@@Base+0x16c>
   24c8c:	cmp	r3, #0
   24c90:	cmpne	r7, r6
   24c94:	bne	24cb4 <__flatcc_fb_parse@@Base+0x114>
   24c98:	mov	r3, r6
   24c9c:	mov	r2, r6
   24ca0:	mov	r1, #23
   24ca4:	mov	r0, r4
   24ca8:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24cac:	mov	r5, r6
   24cb0:	b	24c14 <__flatcc_fb_parse@@Base+0x74>
   24cb4:	cmp	r3, #92	; 0x5c
   24cb8:	bne	24de8 <__flatcc_fb_parse@@Base+0x248>
   24cbc:	add	r5, sl, #2
   24cc0:	mov	r2, r6
   24cc4:	mov	r3, r5
   24cc8:	mov	r1, #21
   24ccc:	mov	r0, r4
   24cd0:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24cd4:	cmp	r7, r5
   24cd8:	beq	24ce8 <__flatcc_fb_parse@@Base+0x148>
   24cdc:	ldrb	r3, [r6, #1]
   24ce0:	cmp	r3, #0
   24ce4:	bne	24cf8 <__flatcc_fb_parse@@Base+0x158>
   24ce8:	mov	r3, r5
   24cec:	mov	r2, r5
   24cf0:	mov	r1, #23
   24cf4:	b	24d6c <__flatcc_fb_parse@@Base+0x1cc>
   24cf8:	cmp	r3, #34	; 0x22
   24cfc:	cmpne	r3, #92	; 0x5c
   24d00:	bne	24d78 <__flatcc_fb_parse@@Base+0x1d8>
   24d04:	add	sl, r6, #2
   24d08:	sub	sl, sl, #1
   24d0c:	add	r6, sl, #1
   24d10:	cmp	r7, r6
   24d14:	beq	24d34 <__flatcc_fb_parse@@Base+0x194>
   24d18:	ldrb	r3, [sl, #1]
   24d1c:	cmp	r3, #34	; 0x22
   24d20:	cmpne	r3, #92	; 0x5c
   24d24:	beq	24d34 <__flatcc_fb_parse@@Base+0x194>
   24d28:	cmp	r3, #127	; 0x7f
   24d2c:	cmpne	r3, #31
   24d30:	bhi	24c84 <__flatcc_fb_parse@@Base+0xe4>
   24d34:	cmp	r6, r5
   24d38:	beq	24d50 <__flatcc_fb_parse@@Base+0x1b0>
   24d3c:	mov	r3, r6
   24d40:	mov	r2, r5
   24d44:	mov	r1, #20
   24d48:	mov	r0, r4
   24d4c:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24d50:	ldrb	r3, [r6]
   24d54:	cmp	r3, #34	; 0x22
   24d58:	bne	24c8c <__flatcc_fb_parse@@Base+0xec>
   24d5c:	add	r5, sl, #2
   24d60:	mov	r2, r6
   24d64:	mov	r3, r5
   24d68:	mov	r1, #22
   24d6c:	mov	r0, r4
   24d70:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24d74:	b	24c14 <__flatcc_fb_parse@@Base+0x74>
   24d78:	cmp	r3, #10
   24d7c:	bne	24dc4 <__flatcc_fb_parse@@Base+0x224>
   24d80:	add	sl, r6, #2
   24d84:	cmp	r7, sl
   24d88:	beq	24d98 <__flatcc_fb_parse@@Base+0x1f8>
   24d8c:	ldrb	r3, [r6, #2]
   24d90:	cmp	r3, #13
   24d94:	addeq	sl, r6, #3
   24d98:	ldr	r3, [r4, #64]	; 0x40
   24d9c:	mov	r2, r5
   24da0:	mov	r1, #18
   24da4:	str	sl, [r4, #60]	; 0x3c
   24da8:	add	r3, r3, #1
   24dac:	str	r3, [r4, #64]	; 0x40
   24db0:	mov	r3, sl
   24db4:	mov	r0, r4
   24db8:	mov	r5, sl
   24dbc:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24dc0:	b	24d08 <__flatcc_fb_parse@@Base+0x168>
   24dc4:	cmp	r3, #13
   24dc8:	movne	r6, r5
   24dcc:	bne	24de8 <__flatcc_fb_parse@@Base+0x248>
   24dd0:	add	sl, r6, #2
   24dd4:	cmp	r7, sl
   24dd8:	beq	24d98 <__flatcc_fb_parse@@Base+0x1f8>
   24ddc:	ldrb	r3, [r6, #2]
   24de0:	cmp	r3, #10
   24de4:	b	24d94 <__flatcc_fb_parse@@Base+0x1f4>
   24de8:	ldrb	r3, [r6]
   24dec:	cmp	r3, #13
   24df0:	cmpne	r3, #10
   24df4:	beq	24c98 <__flatcc_fb_parse@@Base+0xf8>
   24df8:	add	sl, r6, #1
   24dfc:	mov	r2, r6
   24e00:	mov	r3, sl
   24e04:	mov	r1, #6
   24e08:	b	24db4 <__flatcc_fb_parse@@Base+0x214>
   24e0c:	mov	sl, r5
   24e10:	b	24e70 <__flatcc_fb_parse@@Base+0x2d0>
   24e14:	ldrb	r3, [r5]
   24e18:	cmp	r3, #0
   24e1c:	beq	24eac <__flatcc_fb_parse@@Base+0x30c>
   24e20:	cmp	r3, #13
   24e24:	cmpne	r3, #10
   24e28:	moveq	r3, #0
   24e2c:	streq	r3, [r4, #32]
   24e30:	beq	24c14 <__flatcc_fb_parse@@Base+0x74>
   24e34:	cmp	r3, #9
   24e38:	cmpne	r3, #32
   24e3c:	add	r6, sl, #2
   24e40:	bne	24e58 <__flatcc_fb_parse@@Base+0x2b8>
   24e44:	mov	r2, r6
   24e48:	mov	r1, r5
   24e4c:	mov	r0, r4
   24e50:	bl	237d0 <__flatcc_fb_default_error_out@@Base+0xec>
   24e54:	b	24e6c <__flatcc_fb_parse@@Base+0x2cc>
   24e58:	mov	r3, r6
   24e5c:	mov	r2, r5
   24e60:	mov	r1, #7
   24e64:	mov	r0, r4
   24e68:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24e6c:	sub	sl, r6, #1
   24e70:	add	r5, sl, #1
   24e74:	cmp	r7, r5
   24e78:	beq	26ae4 <__flatcc_fb_parse@@Base+0x1f44>
   24e7c:	ldrb	r3, [sl, #1]
   24e80:	cmp	r3, #127	; 0x7f
   24e84:	cmpne	r3, #31
   24e88:	bhi	24e0c <__flatcc_fb_parse@@Base+0x26c>
   24e8c:	cmp	r6, r5
   24e90:	beq	24e14 <__flatcc_fb_parse@@Base+0x274>
   24e94:	mov	r2, r5
   24e98:	mov	r1, r6
   24e9c:	mov	r0, r4
   24ea0:	bl	237d0 <__flatcc_fb_default_error_out@@Base+0xec>
   24ea4:	cmp	r7, r5
   24ea8:	bne	24e14 <__flatcc_fb_parse@@Base+0x274>
   24eac:	mov	r3, r5
   24eb0:	mov	r2, r5
   24eb4:	mov	r1, #27
   24eb8:	mov	r0, r4
   24ebc:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24ec0:	cmp	r7, r5
   24ec4:	bne	26104 <__flatcc_fb_parse@@Base+0x1564>
   24ec8:	mov	r3, r5
   24ecc:	mov	r2, r5
   24ed0:	mov	r1, #0
   24ed4:	b	26118 <__flatcc_fb_parse@@Base+0x1578>
   24ed8:	cmp	r3, #47	; 0x2f
   24edc:	bne	24eec <__flatcc_fb_parse@@Base+0x34c>
   24ee0:	ldrb	r3, [r6, #-1]
   24ee4:	cmp	r3, #42	; 0x2a
   24ee8:	beq	24ef4 <__flatcc_fb_parse@@Base+0x354>
   24eec:	mov	r5, r6
   24ef0:	b	24f5c <__flatcc_fb_parse@@Base+0x3bc>
   24ef4:	cmp	sl, r5
   24ef8:	beq	24f14 <__flatcc_fb_parse@@Base+0x374>
   24efc:	mov	r6, r5
   24f00:	mov	r2, r6
   24f04:	mov	r1, sl
   24f08:	mov	r0, r4
   24f0c:	mov	r5, r6
   24f10:	bl	237d0 <__flatcc_fb_default_error_out@@Base+0xec>
   24f14:	cmp	r5, r7
   24f18:	beq	24eac <__flatcc_fb_parse@@Base+0x30c>
   24f1c:	ldrb	r3, [r5]
   24f20:	cmp	r3, #0
   24f24:	beq	24eac <__flatcc_fb_parse@@Base+0x30c>
   24f28:	cmp	r3, #10
   24f2c:	bne	24f88 <__flatcc_fb_parse@@Base+0x3e8>
   24f30:	add	sl, r5, #1
   24f34:	cmp	r7, sl
   24f38:	beq	24f48 <__flatcc_fb_parse@@Base+0x3a8>
   24f3c:	ldrb	r3, [r5, #1]
   24f40:	cmp	r3, #13
   24f44:	addeq	sl, r5, #2
   24f48:	ldr	r3, [r4, #64]	; 0x40
   24f4c:	str	sl, [r4, #60]	; 0x3c
   24f50:	add	r3, r3, #1
   24f54:	str	r3, [r4, #64]	; 0x40
   24f58:	sub	r5, sl, #1
   24f5c:	add	r6, r5, #1
   24f60:	cmp	r7, r6
   24f64:	beq	26ad4 <__flatcc_fb_parse@@Base+0x1f34>
   24f68:	ldrb	r3, [r5, #1]
   24f6c:	cmp	r3, #127	; 0x7f
   24f70:	cmpne	r3, #31
   24f74:	bhi	24ed8 <__flatcc_fb_parse@@Base+0x338>
   24f78:	cmp	sl, r6
   24f7c:	moveq	r5, sl
   24f80:	beq	24f1c <__flatcc_fb_parse@@Base+0x37c>
   24f84:	b	24f00 <__flatcc_fb_parse@@Base+0x360>
   24f88:	cmp	r3, #13
   24f8c:	bne	24fa8 <__flatcc_fb_parse@@Base+0x408>
   24f90:	add	sl, r5, #1
   24f94:	cmp	r7, sl
   24f98:	beq	24f48 <__flatcc_fb_parse@@Base+0x3a8>
   24f9c:	ldrb	r3, [r5, #1]
   24fa0:	cmp	r3, #10
   24fa4:	b	24f44 <__flatcc_fb_parse@@Base+0x3a4>
   24fa8:	cmp	r3, #127	; 0x7f
   24fac:	cmpne	r3, #31
   24fb0:	movls	r2, #1
   24fb4:	movhi	r2, #0
   24fb8:	bhi	24ff8 <__flatcc_fb_parse@@Base+0x458>
   24fbc:	cmp	r3, #9
   24fc0:	cmpne	r3, #32
   24fc4:	add	sl, r5, #1
   24fc8:	bne	24fe0 <__flatcc_fb_parse@@Base+0x440>
   24fcc:	mov	r2, sl
   24fd0:	mov	r1, r5
   24fd4:	mov	r0, r4
   24fd8:	bl	237d0 <__flatcc_fb_default_error_out@@Base+0xec>
   24fdc:	b	24f58 <__flatcc_fb_parse@@Base+0x3b8>
   24fe0:	mov	r3, sl
   24fe4:	mov	r2, r5
   24fe8:	mov	r1, #7
   24fec:	mov	r0, r4
   24ff0:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   24ff4:	b	24f58 <__flatcc_fb_parse@@Base+0x3b8>
   24ff8:	add	r5, r5, #2
   24ffc:	str	r2, [r4, #32]
   25000:	b	24c14 <__flatcc_fb_parse@@Base+0x74>
   25004:	cmp	r1, #33	; 0x21
   25008:	beq	25050 <__flatcc_fb_parse@@Base+0x4b0>
   2500c:	bhi	25040 <__flatcc_fb_parse@@Base+0x4a0>
   25010:	cmp	r1, #32
   25014:	bne	24c64 <__flatcc_fb_parse@@Base+0xc4>
   25018:	add	r5, r5, #1
   2501c:	cmp	r7, r5
   25020:	mov	r6, r5
   25024:	beq	25038 <__flatcc_fb_parse@@Base+0x498>
   25028:	ldrb	r3, [r5], #1
   2502c:	cmp	r3, #9
   25030:	cmpne	r3, #32
   25034:	beq	2501c <__flatcc_fb_parse@@Base+0x47c>
   25038:	mov	r5, r6
   2503c:	b	24c18 <__flatcc_fb_parse@@Base+0x78>
   25040:	cmp	r1, #34	; 0x22
   25044:	beq	252fc <__flatcc_fb_parse@@Base+0x75c>
   25048:	cmp	r1, #37	; 0x25
   2504c:	bne	24c64 <__flatcc_fb_parse@@Base+0xc4>
   25050:	add	r6, r5, #1
   25054:	cmp	r7, r6
   25058:	beq	250a4 <__flatcc_fb_parse@@Base+0x504>
   2505c:	ldrb	r3, [r5, #1]
   25060:	cmp	r3, #61	; 0x3d
   25064:	bne	250a4 <__flatcc_fb_parse@@Base+0x504>
   25068:	add	r6, r5, #2
   2506c:	mov	r2, r5
   25070:	mov	r3, r6
   25074:	orr	r1, r1, #15616	; 0x3d00
   25078:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   2507c:	cmp	r1, #44	; 0x2c
   25080:	beq	250a0 <__flatcc_fb_parse@@Base+0x500>
   25084:	add	r3, r5, #1
   25088:	bhi	250b0 <__flatcc_fb_parse@@Base+0x510>
   2508c:	cmp	r1, #42	; 0x2a
   25090:	beq	255ac <__flatcc_fb_parse@@Base+0xa0c>
   25094:	bhi	257b8 <__flatcc_fb_parse@@Base+0xc18>
   25098:	cmp	r1, #40	; 0x28
   2509c:	bcc	24c64 <__flatcc_fb_parse@@Base+0xc4>
   250a0:	add	r6, r5, #1
   250a4:	mov	r3, r6
   250a8:	mov	r2, r5
   250ac:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   250b0:	cmp	r1, #46	; 0x2e
   250b4:	beq	2580c <__flatcc_fb_parse@@Base+0xc6c>
   250b8:	bcc	25748 <__flatcc_fb_parse@@Base+0xba8>
   250bc:	cmp	r1, #47	; 0x2f
   250c0:	beq	25310 <__flatcc_fb_parse@@Base+0x770>
   250c4:	cmp	r1, #48	; 0x30
   250c8:	bne	24c64 <__flatcc_fb_parse@@Base+0xc4>
   250cc:	cmp	r7, r3
   250d0:	beq	25880 <__flatcc_fb_parse@@Base+0xce0>
   250d4:	ldrb	r3, [r5, #1]
   250d8:	cmp	r3, #88	; 0x58
   250dc:	beq	250e8 <__flatcc_fb_parse@@Base+0x548>
   250e0:	cmp	r3, #120	; 0x78
   250e4:	bne	25880 <__flatcc_fb_parse@@Base+0xce0>
   250e8:	add	r2, r5, #2
   250ec:	cmp	r2, r7
   250f0:	mov	r6, r2
   250f4:	beq	25118 <__flatcc_fb_parse@@Base+0x578>
   250f8:	ldrb	r3, [r2], #1
   250fc:	sub	r1, r3, #48	; 0x30
   25100:	cmp	r1, #9
   25104:	bls	250ec <__flatcc_fb_parse@@Base+0x54c>
   25108:	orr	r3, r3, #32
   2510c:	sub	r3, r3, #97	; 0x61
   25110:	cmp	r3, #5
   25114:	bls	250ec <__flatcc_fb_parse@@Base+0x54c>
   25118:	mov	r3, r6
   2511c:	mov	r2, r5
   25120:	mov	r1, #14
   25124:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25128:	cmp	r1, #93	; 0x5d
   2512c:	add	r3, r5, #1
   25130:	bhi	25278 <__flatcc_fb_parse@@Base+0x6d8>
   25134:	cmp	r1, #91	; 0x5b
   25138:	bcs	250a0 <__flatcc_fb_parse@@Base+0x500>
   2513c:	cmp	r1, #61	; 0x3d
   25140:	beq	254ac <__flatcc_fb_parse@@Base+0x90c>
   25144:	bhi	25190 <__flatcc_fb_parse@@Base+0x5f0>
   25148:	cmp	r1, #59	; 0x3b
   2514c:	beq	250a0 <__flatcc_fb_parse@@Base+0x500>
   25150:	bls	25530 <__flatcc_fb_parse@@Base+0x990>
   25154:	cmp	r7, r3
   25158:	mov	r6, r3
   2515c:	beq	2567c <__flatcc_fb_parse@@Base+0xadc>
   25160:	ldrb	r2, [r5, #1]
   25164:	cmp	r2, #60	; 0x3c
   25168:	beq	255fc <__flatcc_fb_parse@@Base+0xa5c>
   2516c:	cmp	r2, #61	; 0x3d
   25170:	beq	255e8 <__flatcc_fb_parse@@Base+0xa48>
   25174:	cmp	r2, #45	; 0x2d
   25178:	bne	2567c <__flatcc_fb_parse@@Base+0xadc>
   2517c:	add	r6, r5, #2
   25180:	mov	r2, r5
   25184:	mov	r3, r6
   25188:	movw	r1, #11580	; 0x2d3c
   2518c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25190:	cmp	r1, #63	; 0x3f
   25194:	beq	250a0 <__flatcc_fb_parse@@Base+0x500>
   25198:	bcc	25688 <__flatcc_fb_parse@@Base+0xae8>
   2519c:	cmp	r1, #65	; 0x41
   251a0:	bcc	24c64 <__flatcc_fb_parse@@Base+0xc4>
   251a4:	cmp	r7, r3
   251a8:	lsl	r1, r1, #8
   251ac:	mov	r6, r3
   251b0:	beq	251f8 <__flatcc_fb_parse@@Base+0x658>
   251b4:	ldrb	r2, [r5, #1]
   251b8:	ldr	r3, [pc, #2516]	; 25b94 <__flatcc_fb_parse@@Base+0xff4>
   251bc:	add	r0, r3, r2
   251c0:	ldrb	r0, [r0, #34]	; 0x22
   251c4:	cmp	r0, #0
   251c8:	beq	251f8 <__flatcc_fb_parse@@Base+0x658>
   251cc:	orr	r1, r1, r2, lsl #16
   251d0:	add	r2, r5, #2
   251d4:	cmp	r7, r2
   251d8:	mov	r6, r2
   251dc:	beq	251f8 <__flatcc_fb_parse@@Base+0x658>
   251e0:	ldrb	r0, [r6]
   251e4:	add	r2, r2, #1
   251e8:	add	r0, r3, r0
   251ec:	ldrb	r0, [r0, #34]	; 0x22
   251f0:	cmp	r0, #0
   251f4:	bne	251d4 <__flatcc_fb_parse@@Base+0x634>
   251f8:	ldrb	r3, [r6, #-1]
   251fc:	orr	r1, r1, r3, lsl #24
   25200:	sub	r3, r6, r5
   25204:	uxtb	r3, r3
   25208:	add	r3, r3, #48	; 0x30
   2520c:	orr	r1, r3, r1
   25210:	cmp	r1, r8
   25214:	beq	260ac <__flatcc_fb_parse@@Base+0x150c>
   25218:	bhi	25a90 <__flatcc_fb_parse@@Base+0xef0>
   2521c:	ldr	r3, [pc, #2420]	; 25b98 <__flatcc_fb_parse@@Base+0xff8>
   25220:	cmp	r1, r3
   25224:	beq	25f34 <__flatcc_fb_parse@@Base+0x1394>
   25228:	bhi	259c0 <__flatcc_fb_parse@@Base+0xe20>
   2522c:	add	r3, r3, #-67108863	; 0xfc000001
   25230:	cmp	r1, r3
   25234:	beq	26000 <__flatcc_fb_parse@@Base+0x1460>
   25238:	bhi	25944 <__flatcc_fb_parse@@Base+0xda4>
   2523c:	ldr	r3, [pc, #2392]	; 25b9c <__flatcc_fb_parse@@Base+0xffc>
   25240:	cmp	r1, r3
   25244:	beq	26038 <__flatcc_fb_parse@@Base+0x1498>
   25248:	add	r3, r3, #131072	; 0x20000
   2524c:	add	r3, r3, #764	; 0x2fc
   25250:	add	r3, r3, #2
   25254:	cmp	r1, r3
   25258:	beq	25ee0 <__flatcc_fb_parse@@Base+0x1340>
   2525c:	add	r3, r3, #-67108863	; 0xfc000001
   25260:	add	r3, r3, #66584576	; 0x3f80000
   25264:	add	r3, r3, #199680	; 0x30c00
   25268:	cmp	r1, r3
   2526c:	beq	25fc8 <__flatcc_fb_parse@@Base+0x1428>
   25270:	mov	r1, #9
   25274:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25278:	cmp	r1, #122	; 0x7a
   2527c:	bhi	2529c <__flatcc_fb_parse@@Base+0x6fc>
   25280:	cmp	r1, #97	; 0x61
   25284:	bcs	251a4 <__flatcc_fb_parse@@Base+0x604>
   25288:	cmp	r1, #94	; 0x5e
   2528c:	beq	25050 <__flatcc_fb_parse@@Base+0x4b0>
   25290:	cmp	r1, #95	; 0x5f
   25294:	beq	251a4 <__flatcc_fb_parse@@Base+0x604>
   25298:	b	24c64 <__flatcc_fb_parse@@Base+0xc4>
   2529c:	cmp	r1, #124	; 0x7c
   252a0:	beq	253f0 <__flatcc_fb_parse@@Base+0x850>
   252a4:	bcc	250a0 <__flatcc_fb_parse@@Base+0x500>
   252a8:	cmp	r1, #125	; 0x7d
   252ac:	beq	250a0 <__flatcc_fb_parse@@Base+0x500>
   252b0:	cmp	r1, #126	; 0x7e
   252b4:	b	2504c <__flatcc_fb_parse@@Base+0x4ac>
   252b8:	add	r6, r5, #1
   252bc:	cmp	r7, r6
   252c0:	beq	252d0 <__flatcc_fb_parse@@Base+0x730>
   252c4:	ldrb	r3, [r5, #1]
   252c8:	cmp	r3, #13
   252cc:	addeq	r6, r5, #2
   252d0:	ldr	r3, [r4, #64]	; 0x40
   252d4:	str	r6, [r4, #60]	; 0x3c
   252d8:	add	r3, r3, #1
   252dc:	str	r3, [r4, #64]	; 0x40
   252e0:	b	25038 <__flatcc_fb_parse@@Base+0x498>
   252e4:	add	r6, r5, #1
   252e8:	cmp	r7, r6
   252ec:	beq	252d0 <__flatcc_fb_parse@@Base+0x730>
   252f0:	ldrb	r3, [r5, #1]
   252f4:	cmp	r3, #10
   252f8:	b	252cc <__flatcc_fb_parse@@Base+0x72c>
   252fc:	add	sl, r5, #1
   25300:	mov	r2, r5
   25304:	mov	r3, sl
   25308:	mov	r1, #19
   2530c:	b	24db4 <__flatcc_fb_parse@@Base+0x214>
   25310:	cmp	r7, r3
   25314:	mov	r6, r3
   25318:	beq	253e4 <__flatcc_fb_parse@@Base+0x844>
   2531c:	ldrb	r2, [r5, #1]
   25320:	cmp	r2, #47	; 0x2f
   25324:	beq	25380 <__flatcc_fb_parse@@Base+0x7e0>
   25328:	cmp	r2, #61	; 0x3d
   2532c:	beq	253c8 <__flatcc_fb_parse@@Base+0x828>
   25330:	cmp	r2, #42	; 0x2a
   25334:	bne	253e4 <__flatcc_fb_parse@@Base+0x844>
   25338:	add	sl, r5, #2
   2533c:	cmp	r7, sl
   25340:	moveq	r3, #0
   25344:	beq	2535c <__flatcc_fb_parse@@Base+0x7bc>
   25348:	ldrb	r3, [r5, #2]
   2534c:	cmp	r3, #33	; 0x21
   25350:	cmpne	r3, #42	; 0x2a
   25354:	moveq	r3, #1
   25358:	movne	r3, #0
   2535c:	add	sl, sl, r3
   25360:	sub	r5, sl, r5
   25364:	mov	r2, sl
   25368:	sub	r5, r5, #3
   2536c:	mov	r1, sl
   25370:	clz	r5, r5
   25374:	lsr	r5, r5, #5
   25378:	str	r5, [r4, #32]
   2537c:	b	24fd4 <__flatcc_fb_parse@@Base+0x434>
   25380:	add	r6, r5, #2
   25384:	cmp	r7, r6
   25388:	moveq	r3, #0
   2538c:	beq	253a4 <__flatcc_fb_parse@@Base+0x804>
   25390:	ldrb	r3, [r5, #2]
   25394:	cmp	r3, #33	; 0x21
   25398:	cmpne	r3, #47	; 0x2f
   2539c:	moveq	r3, #1
   253a0:	movne	r3, #0
   253a4:	add	r6, r6, r3
   253a8:	sub	r5, r6, r5
   253ac:	mov	r2, r6
   253b0:	sub	r5, r5, #3
   253b4:	mov	r1, r6
   253b8:	clz	r5, r5
   253bc:	lsr	r5, r5, #5
   253c0:	str	r5, [r4, #32]
   253c4:	b	24e4c <__flatcc_fb_parse@@Base+0x2ac>
   253c8:	add	r6, r5, #2
   253cc:	mov	r2, r5
   253d0:	mov	r3, r6
   253d4:	movw	r1, #15663	; 0x3d2f
   253d8:	mov	r0, r4
   253dc:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   253e0:	b	25038 <__flatcc_fb_parse@@Base+0x498>
   253e4:	mov	r2, r5
   253e8:	mov	r1, #47	; 0x2f
   253ec:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   253f0:	cmp	r7, r3
   253f4:	mov	r6, r3
   253f8:	beq	25410 <__flatcc_fb_parse@@Base+0x870>
   253fc:	ldrb	r3, [r5, #1]
   25400:	cmp	r3, #61	; 0x3d
   25404:	beq	25420 <__flatcc_fb_parse@@Base+0x880>
   25408:	cmp	r3, #124	; 0x7c
   2540c:	beq	25434 <__flatcc_fb_parse@@Base+0x894>
   25410:	mov	r3, r6
   25414:	mov	r2, r5
   25418:	mov	r1, #124	; 0x7c
   2541c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25420:	add	r6, r5, #2
   25424:	mov	r2, r5
   25428:	mov	r3, r6
   2542c:	movw	r1, #15740	; 0x3d7c
   25430:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25434:	add	r6, r5, #2
   25438:	mov	r2, r5
   2543c:	mov	r3, r6
   25440:	movw	r1, #31868	; 0x7c7c
   25444:	mov	r0, r4
   25448:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   2544c:	b	25410 <__flatcc_fb_parse@@Base+0x870>
   25450:	add	r6, r5, #1
   25454:	cmp	r7, r6
   25458:	beq	2549c <__flatcc_fb_parse@@Base+0x8fc>
   2545c:	ldrb	r3, [r5, #1]
   25460:	cmp	r3, #38	; 0x26
   25464:	beq	25484 <__flatcc_fb_parse@@Base+0x8e4>
   25468:	cmp	r3, #61	; 0x3d
   2546c:	bne	2549c <__flatcc_fb_parse@@Base+0x8fc>
   25470:	add	r6, r5, #2
   25474:	mov	r2, r5
   25478:	mov	r3, r6
   2547c:	movw	r1, #15654	; 0x3d26
   25480:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25484:	add	r6, r5, #2
   25488:	mov	r2, r5
   2548c:	mov	r3, r6
   25490:	movw	r1, #9766	; 0x2626
   25494:	mov	r0, r4
   25498:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   2549c:	mov	r3, r6
   254a0:	mov	r2, r5
   254a4:	mov	r1, #38	; 0x26
   254a8:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   254ac:	cmp	r7, r3
   254b0:	mov	r6, r3
   254b4:	beq	25520 <__flatcc_fb_parse@@Base+0x980>
   254b8:	ldrb	r3, [r5, #1]
   254bc:	cmp	r3, #61	; 0x3d
   254c0:	beq	254e0 <__flatcc_fb_parse@@Base+0x940>
   254c4:	cmp	r3, #62	; 0x3e
   254c8:	bne	25520 <__flatcc_fb_parse@@Base+0x980>
   254cc:	add	r6, r5, #2
   254d0:	mov	r2, r5
   254d4:	mov	r3, r6
   254d8:	movw	r1, #15933	; 0x3e3d
   254dc:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   254e0:	add	r6, r5, #2
   254e4:	cmp	r7, r6
   254e8:	beq	2550c <__flatcc_fb_parse@@Base+0x96c>
   254ec:	ldrb	r3, [r5, #2]
   254f0:	cmp	r3, #61	; 0x3d
   254f4:	bne	2550c <__flatcc_fb_parse@@Base+0x96c>
   254f8:	add	r6, r5, #3
   254fc:	mov	r2, r5
   25500:	ldr	r1, [pc, #1688]	; 25ba0 <__flatcc_fb_parse@@Base+0x1000>
   25504:	mov	r3, r6
   25508:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   2550c:	mov	r3, r6
   25510:	mov	r2, r5
   25514:	movw	r1, #15677	; 0x3d3d
   25518:	mov	r0, r4
   2551c:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   25520:	mov	r3, r6
   25524:	mov	r2, r5
   25528:	mov	r1, #61	; 0x3d
   2552c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25530:	cmp	r7, r3
   25534:	mov	r6, r3
   25538:	beq	255a0 <__flatcc_fb_parse@@Base+0xa00>
   2553c:	ldrb	r2, [r5, #1]
   25540:	cmp	r2, #58	; 0x3a
   25544:	beq	25564 <__flatcc_fb_parse@@Base+0x9c4>
   25548:	cmp	r2, #61	; 0x3d
   2554c:	bne	255a0 <__flatcc_fb_parse@@Base+0xa00>
   25550:	add	r6, r5, #2
   25554:	mov	r2, r5
   25558:	mov	r3, r6
   2555c:	movw	r1, #15674	; 0x3d3a
   25560:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25564:	add	r6, r5, #2
   25568:	cmp	r7, r6
   2556c:	beq	25590 <__flatcc_fb_parse@@Base+0x9f0>
   25570:	ldrb	r3, [r5, #2]
   25574:	cmp	r3, #61	; 0x3d
   25578:	bne	25590 <__flatcc_fb_parse@@Base+0x9f0>
   2557c:	add	r6, r5, #3
   25580:	mov	r2, r5
   25584:	ldr	r1, [pc, #1560]	; 25ba4 <__flatcc_fb_parse@@Base+0x1004>
   25588:	mov	r3, r6
   2558c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25590:	mov	r3, r6
   25594:	mov	r2, r5
   25598:	movw	r1, #14906	; 0x3a3a
   2559c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   255a0:	mov	r2, r5
   255a4:	mov	r1, #58	; 0x3a
   255a8:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   255ac:	cmp	r7, r3
   255b0:	mov	r6, r3
   255b4:	beq	255dc <__flatcc_fb_parse@@Base+0xa3c>
   255b8:	ldrb	r2, [r5, #1]
   255bc:	cmp	r2, #42	; 0x2a
   255c0:	moveq	r2, r5
   255c4:	movweq	r1, #10794	; 0x2a2a
   255c8:	beq	253d8 <__flatcc_fb_parse@@Base+0x838>
   255cc:	cmp	r2, #61	; 0x3d
   255d0:	moveq	r2, r5
   255d4:	movweq	r1, #15658	; 0x3d2a
   255d8:	beq	253d8 <__flatcc_fb_parse@@Base+0x838>
   255dc:	mov	r2, r5
   255e0:	mov	r1, #42	; 0x2a
   255e4:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   255e8:	add	r6, r5, #2
   255ec:	mov	r2, r5
   255f0:	mov	r3, r6
   255f4:	movw	r1, #15676	; 0x3d3c
   255f8:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   255fc:	add	r6, r5, #2
   25600:	cmp	r7, r6
   25604:	beq	2566c <__flatcc_fb_parse@@Base+0xacc>
   25608:	ldrb	r3, [r5, #2]
   2560c:	cmp	r3, #60	; 0x3c
   25610:	beq	25630 <__flatcc_fb_parse@@Base+0xa90>
   25614:	cmp	r3, #61	; 0x3d
   25618:	bne	2566c <__flatcc_fb_parse@@Base+0xacc>
   2561c:	add	r6, r5, #3
   25620:	mov	r2, r5
   25624:	ldr	r1, [pc, #1404]	; 25ba8 <__flatcc_fb_parse@@Base+0x1008>
   25628:	mov	r3, r6
   2562c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25630:	add	r6, r5, #3
   25634:	cmp	r7, r6
   25638:	beq	2565c <__flatcc_fb_parse@@Base+0xabc>
   2563c:	ldrb	r3, [r5, #3]
   25640:	cmp	r3, #61	; 0x3d
   25644:	bne	2565c <__flatcc_fb_parse@@Base+0xabc>
   25648:	add	r6, r5, #4
   2564c:	mov	r2, r5
   25650:	ldr	r1, [pc, #1364]	; 25bac <__flatcc_fb_parse@@Base+0x100c>
   25654:	mov	r3, r6
   25658:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   2565c:	mov	r3, r6
   25660:	mov	r2, r5
   25664:	ldr	r1, [pc, #1348]	; 25bb0 <__flatcc_fb_parse@@Base+0x1010>
   25668:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   2566c:	mov	r3, r6
   25670:	mov	r2, r5
   25674:	movw	r1, #15420	; 0x3c3c
   25678:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   2567c:	mov	r2, r5
   25680:	mov	r1, #60	; 0x3c
   25684:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25688:	cmp	r7, r3
   2568c:	mov	r6, r3
   25690:	beq	256a8 <__flatcc_fb_parse@@Base+0xb08>
   25694:	ldrb	r2, [r5, #1]
   25698:	cmp	r2, #61	; 0x3d
   2569c:	beq	256b4 <__flatcc_fb_parse@@Base+0xb14>
   256a0:	cmp	r2, #62	; 0x3e
   256a4:	beq	256c8 <__flatcc_fb_parse@@Base+0xb28>
   256a8:	mov	r2, r5
   256ac:	mov	r1, #62	; 0x3e
   256b0:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   256b4:	add	r6, r5, #2
   256b8:	mov	r2, r5
   256bc:	mov	r3, r6
   256c0:	movw	r1, #15678	; 0x3d3e
   256c4:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   256c8:	add	r6, r5, #2
   256cc:	cmp	r7, r6
   256d0:	beq	256e8 <__flatcc_fb_parse@@Base+0xb48>
   256d4:	ldrb	r3, [r5, #2]
   256d8:	cmp	r3, #61	; 0x3d
   256dc:	beq	256f8 <__flatcc_fb_parse@@Base+0xb58>
   256e0:	cmp	r3, #62	; 0x3e
   256e4:	beq	2570c <__flatcc_fb_parse@@Base+0xb6c>
   256e8:	mov	r3, r6
   256ec:	mov	r2, r5
   256f0:	movw	r1, #15934	; 0x3e3e
   256f4:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   256f8:	add	r6, r5, #3
   256fc:	mov	r2, r5
   25700:	ldr	r1, [pc, #1196]	; 25bb4 <__flatcc_fb_parse@@Base+0x1014>
   25704:	mov	r3, r6
   25708:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   2570c:	add	r6, r5, #3
   25710:	cmp	r7, r6
   25714:	beq	25738 <__flatcc_fb_parse@@Base+0xb98>
   25718:	ldrb	r3, [r5, #3]
   2571c:	cmp	r3, #61	; 0x3d
   25720:	bne	25738 <__flatcc_fb_parse@@Base+0xb98>
   25724:	add	r6, r5, #4
   25728:	mov	r2, r5
   2572c:	ldr	r1, [pc, #1156]	; 25bb8 <__flatcc_fb_parse@@Base+0x1018>
   25730:	mov	r3, r6
   25734:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25738:	mov	r3, r6
   2573c:	mov	r2, r5
   25740:	ldr	r1, [pc, #1140]	; 25bbc <__flatcc_fb_parse@@Base+0x101c>
   25744:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25748:	cmp	r7, r3
   2574c:	mov	r6, r3
   25750:	beq	257ac <__flatcc_fb_parse@@Base+0xc0c>
   25754:	ldrb	r2, [r5, #1]
   25758:	cmp	r2, #61	; 0x3d
   2575c:	beq	25784 <__flatcc_fb_parse@@Base+0xbe4>
   25760:	cmp	r2, #62	; 0x3e
   25764:	beq	25798 <__flatcc_fb_parse@@Base+0xbf8>
   25768:	cmp	r2, #45	; 0x2d
   2576c:	bne	257ac <__flatcc_fb_parse@@Base+0xc0c>
   25770:	add	r6, r5, #2
   25774:	mov	r2, r5
   25778:	mov	r3, r6
   2577c:	movw	r1, #11565	; 0x2d2d
   25780:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25784:	add	r6, r5, #2
   25788:	mov	r2, r5
   2578c:	mov	r3, r6
   25790:	movw	r1, #15661	; 0x3d2d
   25794:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25798:	add	r6, r5, #2
   2579c:	mov	r2, r5
   257a0:	mov	r3, r6
   257a4:	movw	r1, #15917	; 0x3e2d
   257a8:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   257ac:	mov	r2, r5
   257b0:	mov	r1, #45	; 0x2d
   257b4:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   257b8:	cmp	r7, r3
   257bc:	mov	r6, r3
   257c0:	beq	25800 <__flatcc_fb_parse@@Base+0xc60>
   257c4:	ldrb	r2, [r5, #1]
   257c8:	cmp	r2, #43	; 0x2b
   257cc:	beq	257ec <__flatcc_fb_parse@@Base+0xc4c>
   257d0:	cmp	r2, #61	; 0x3d
   257d4:	bne	25800 <__flatcc_fb_parse@@Base+0xc60>
   257d8:	add	r6, r5, #2
   257dc:	mov	r2, r5
   257e0:	mov	r3, r6
   257e4:	movw	r1, #15659	; 0x3d2b
   257e8:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   257ec:	add	r6, r5, #2
   257f0:	mov	r2, r5
   257f4:	mov	r3, r6
   257f8:	movw	r1, #11051	; 0x2b2b
   257fc:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25800:	mov	r2, r5
   25804:	mov	r1, #43	; 0x2b
   25808:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   2580c:	cmp	r7, r3
   25810:	mov	r6, r3
   25814:	beq	25838 <__flatcc_fb_parse@@Base+0xc98>
   25818:	ldrb	r2, [r5, #1]
   2581c:	cmp	r2, #46	; 0x2e
   25820:	beq	25844 <__flatcc_fb_parse@@Base+0xca4>
   25824:	bcc	25838 <__flatcc_fb_parse@@Base+0xc98>
   25828:	sub	r2, r2, #48	; 0x30
   2582c:	cmp	r2, #9
   25830:	movls	r2, r5
   25834:	bls	258ac <__flatcc_fb_parse@@Base+0xd0c>
   25838:	mov	r2, r5
   2583c:	mov	r1, #46	; 0x2e
   25840:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25844:	add	r6, r5, #2
   25848:	cmp	r7, r6
   2584c:	beq	25870 <__flatcc_fb_parse@@Base+0xcd0>
   25850:	ldrb	r3, [r5, #2]
   25854:	cmp	r3, #46	; 0x2e
   25858:	bne	25870 <__flatcc_fb_parse@@Base+0xcd0>
   2585c:	add	r6, r5, #3
   25860:	mov	r2, r5
   25864:	ldr	r1, [pc, #852]	; 25bc0 <__flatcc_fb_parse@@Base+0x1020>
   25868:	mov	r3, r6
   2586c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25870:	mov	r3, r6
   25874:	mov	r2, r5
   25878:	movw	r1, #11822	; 0x2e2e
   2587c:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25880:	add	r3, r5, #1
   25884:	subs	r6, r3, #0
   25888:	beq	26af0 <__flatcc_fb_parse@@Base+0x1f50>
   2588c:	ldrb	r2, [r3]
   25890:	add	r3, r6, #1
   25894:	sub	r1, r2, #48	; 0x30
   25898:	cmp	r1, #9
   2589c:	bls	25884 <__flatcc_fb_parse@@Base+0xce4>
   258a0:	cmp	r2, #46	; 0x2e
   258a4:	bne	26ac4 <__flatcc_fb_parse@@Base+0x1f24>
   258a8:	mov	r2, r6
   258ac:	add	r3, r6, #1
   258b0:	cmp	r7, r3
   258b4:	mov	r6, r3
   258b8:	beq	25920 <__flatcc_fb_parse@@Base+0xd80>
   258bc:	ldrb	r1, [r6]
   258c0:	add	r3, r3, #1
   258c4:	sub	r1, r1, #48	; 0x30
   258c8:	cmp	r1, #9
   258cc:	bls	258b0 <__flatcc_fb_parse@@Base+0xd10>
   258d0:	ldrb	r3, [r6]
   258d4:	and	r3, r3, #223	; 0xdf
   258d8:	cmp	r3, #69	; 0x45
   258dc:	bne	25920 <__flatcc_fb_parse@@Base+0xd80>
   258e0:	add	r3, r6, #1
   258e4:	cmp	r7, r3
   258e8:	beq	258fc <__flatcc_fb_parse@@Base+0xd5c>
   258ec:	ldrb	r1, [r6, #1]
   258f0:	sub	r1, r1, #43	; 0x2b
   258f4:	tst	r1, #253	; 0xfd
   258f8:	movne	r3, r6
   258fc:	add	r3, r3, #1
   25900:	cmp	r7, r3
   25904:	mov	r6, r3
   25908:	beq	25920 <__flatcc_fb_parse@@Base+0xd80>
   2590c:	ldrb	r1, [r6]
   25910:	add	r3, r3, #1
   25914:	sub	r1, r1, #48	; 0x30
   25918:	cmp	r1, #9
   2591c:	bls	25900 <__flatcc_fb_parse@@Base+0xd60>
   25920:	cmp	r6, r2
   25924:	movne	r3, r6
   25928:	movne	r2, r5
   2592c:	movne	r1, #11
   25930:	bne	253d8 <__flatcc_fb_parse@@Base+0x838>
   25934:	mov	r3, r6
   25938:	mov	r2, r5
   2593c:	mov	r1, #10
   25940:	b	253d8 <__flatcc_fb_parse@@Base+0x838>
   25944:	ldr	r3, [pc, #632]	; 25bc4 <__flatcc_fb_parse@@Base+0x1024>
   25948:	cmp	r1, r3
   2594c:	beq	25efc <__flatcc_fb_parse@@Base+0x135c>
   25950:	bhi	25984 <__flatcc_fb_parse@@Base+0xde4>
   25954:	sub	r3, r3, #131072	; 0x20000
   25958:	sub	r3, r3, #764	; 0x2fc
   2595c:	sub	r3, r3, #2
   25960:	cmp	r1, r3
   25964:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25968:	mov	r1, r5
   2596c:	mov	r2, #7
   25970:	ldr	r0, [pc, #592]	; 25bc8 <__flatcc_fb_parse@@Base+0x1028>
   25974:	bl	13f14 <memcmp@plt>
   25978:	cmp	r0, #0
   2597c:	ldr	r1, [pc, #584]	; 25bcc <__flatcc_fb_parse@@Base+0x102c>
   25980:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25984:	ldr	r3, [pc, #580]	; 25bd0 <__flatcc_fb_parse@@Base+0x1030>
   25988:	cmp	r1, r3
   2598c:	beq	25fe4 <__flatcc_fb_parse@@Base+0x1444>
   25990:	add	r3, r3, #323584	; 0x4f000
   25994:	add	r3, r3, #1020	; 0x3fc
   25998:	add	r3, r3, #3
   2599c:	cmp	r1, r3
   259a0:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   259a4:	mov	r1, r5
   259a8:	mov	r2, #5
   259ac:	ldr	r0, [pc, #544]	; 25bd4 <__flatcc_fb_parse@@Base+0x1034>
   259b0:	bl	13f14 <memcmp@plt>
   259b4:	cmp	r0, #0
   259b8:	ldr	r1, [pc, #536]	; 25bd8 <__flatcc_fb_parse@@Base+0x1038>
   259bc:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   259c0:	ldr	r3, [pc, #532]	; 25bdc <__flatcc_fb_parse@@Base+0x103c>
   259c4:	cmp	r1, r3
   259c8:	beq	25f18 <__flatcc_fb_parse@@Base+0x1378>
   259cc:	bhi	25a18 <__flatcc_fb_parse@@Base+0xe78>
   259d0:	sub	r3, r3, #3584	; 0xe00
   259d4:	cmp	r1, r3
   259d8:	beq	25ec4 <__flatcc_fb_parse@@Base+0x1324>
   259dc:	add	r3, r3, #2048	; 0x800
   259e0:	add	r3, r3, #4
   259e4:	cmp	r1, r3
   259e8:	beq	2608c <__flatcc_fb_parse@@Base+0x14ec>
   259ec:	ldr	r3, [pc, #492]	; 25be0 <__flatcc_fb_parse@@Base+0x1040>
   259f0:	cmp	r1, r3
   259f4:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   259f8:	mov	r1, r5
   259fc:	mov	r2, #4
   25a00:	ldr	r0, [pc, #476]	; 25be4 <__flatcc_fb_parse@@Base+0x1044>
   25a04:	bl	13f14 <memcmp@plt>
   25a08:	cmp	r0, #0
   25a0c:	movne	r1, #9
   25a10:	mvneq	r1, #992	; 0x3e0
   25a14:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25a18:	ldr	r3, [pc, #456]	; 25be8 <__flatcc_fb_parse@@Base+0x1048>
   25a1c:	cmp	r1, r3
   25a20:	beq	26054 <__flatcc_fb_parse@@Base+0x14b4>
   25a24:	bhi	25a58 <__flatcc_fb_parse@@Base+0xeb8>
   25a28:	sub	r3, r3, #782336	; 0xbf000
   25a2c:	sub	r3, r3, #1024	; 0x400
   25a30:	sub	r3, r3, #2
   25a34:	cmp	r1, r3
   25a38:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25a3c:	mov	r1, r5
   25a40:	mov	r2, #5
   25a44:	ldr	r0, [pc, #320]	; 25b8c <__flatcc_fb_parse@@Base+0xfec>
   25a48:	bl	13f14 <memcmp@plt>
   25a4c:	cmp	r0, #0
   25a50:	ldr	r1, [pc, #304]	; 25b88 <__flatcc_fb_parse@@Base+0xfe8>
   25a54:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25a58:	ldr	r3, [pc, #396]	; 25bec <__flatcc_fb_parse@@Base+0x104c>
   25a5c:	cmp	r1, r3
   25a60:	beq	25f90 <__flatcc_fb_parse@@Base+0x13f0>
   25a64:	add	r3, r3, #3584	; 0xe00
   25a68:	add	r3, r3, #3
   25a6c:	cmp	r1, r3
   25a70:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25a74:	mov	r1, r5
   25a78:	mov	r2, #9
   25a7c:	ldr	r0, [pc, #364]	; 25bf0 <__flatcc_fb_parse@@Base+0x1050>
   25a80:	bl	13f14 <memcmp@plt>
   25a84:	cmp	r0, #0
   25a88:	ldr	r1, [pc, #356]	; 25bf4 <__flatcc_fb_parse@@Base+0x1054>
   25a8c:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25a90:	cmp	r1, r9
   25a94:	beq	260c8 <__flatcc_fb_parse@@Base+0x1528>
   25a98:	bhi	25d78 <__flatcc_fb_parse@@Base+0x11d8>
   25a9c:	ldr	r3, [pc, #340]	; 25bf8 <__flatcc_fb_parse@@Base+0x1058>
   25aa0:	cmp	r1, r3
   25aa4:	beq	25f54 <__flatcc_fb_parse@@Base+0x13b4>
   25aa8:	bhi	25afc <__flatcc_fb_parse@@Base+0xf5c>
   25aac:	sub	r3, r3, #33030144	; 0x1f80000
   25ab0:	sub	r3, r3, #5056	; 0x13c0
   25ab4:	sub	r3, r3, #60	; 0x3c
   25ab8:	cmp	r1, r3
   25abc:	beq	26070 <__flatcc_fb_parse@@Base+0x14d0>
   25ac0:	add	r3, r3, #327680	; 0x50000
   25ac4:	add	r3, r3, #251	; 0xfb
   25ac8:	cmp	r1, r3
   25acc:	beq	25e8c <__flatcc_fb_parse@@Base+0x12ec>
   25ad0:	sub	r3, r3, #450560	; 0x6e000
   25ad4:	sub	r3, r3, #3584	; 0xe00
   25ad8:	cmp	r1, r3
   25adc:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25ae0:	mov	r1, r5
   25ae4:	mov	r2, #4
   25ae8:	ldr	r0, [pc, #268]	; 25bfc <__flatcc_fb_parse@@Base+0x105c>
   25aec:	bl	13f14 <memcmp@plt>
   25af0:	cmp	r0, #0
   25af4:	ldr	r1, [pc, #260]	; 25c00 <__flatcc_fb_parse@@Base+0x1060>
   25af8:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25afc:	ldr	r3, [pc, #256]	; 25c04 <__flatcc_fb_parse@@Base+0x1064>
   25b00:	cmp	r1, r3
   25b04:	beq	25fac <__flatcc_fb_parse@@Base+0x140c>
   25b08:	bhi	25b40 <__flatcc_fb_parse@@Base+0xfa0>
   25b0c:	sub	r3, r3, #327680	; 0x50000
   25b10:	sub	r3, r3, #1792	; 0x700
   25b14:	sub	r3, r3, #2
   25b18:	cmp	r1, r3
   25b1c:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25b20:	mov	r1, r5
   25b24:	mov	r2, #4
   25b28:	ldr	r0, [pc, #216]	; 25c08 <__flatcc_fb_parse@@Base+0x1068>
   25b2c:	bl	13f14 <memcmp@plt>
   25b30:	cmp	r0, #0
   25b34:	movne	r1, #9
   25b38:	mvneq	r1, #988	; 0x3dc
   25b3c:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25b40:	ldr	r3, [pc, #196]	; 25c0c <__flatcc_fb_parse@@Base+0x106c>
   25b44:	cmp	r1, r3
   25b48:	beq	25e70 <__flatcc_fb_parse@@Base+0x12d0>
   25b4c:	add	r3, r3, #16711680	; 0xff0000
   25b50:	add	r3, r3, #768	; 0x300
   25b54:	cmp	r1, r3
   25b58:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25b5c:	mov	r1, r5
   25b60:	mov	r2, #4
   25b64:	ldr	r0, [pc, #164]	; 25c10 <__flatcc_fb_parse@@Base+0x1070>
   25b68:	bl	13f14 <memcmp@plt>
   25b6c:	cmp	r0, #0
   25b70:	movne	r1, #9
   25b74:	mvneq	r1, #996	; 0x3e4
   25b78:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25b7c:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   25b80:	mcrvs	6, 3, r6, cr9, cr14, {1}
   25b84:			; <UNDEFINED> instruction: 0x00046bbf
   25b88:			; <UNDEFINED> instruction: 0xfffffc2a
   25b8c:	andeq	r8, r4, r6
   25b90:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   25b94:	andeq	r6, r4, r3, lsl #9
   25b98:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   25b9c:	rsbcc	r6, ip, #57671680	; 0x3700000
   25ba0:	eorseq	r3, sp, sp, lsr sp
   25ba4:	eorseq	r3, sp, sl, lsr sl
   25ba8:	eorseq	r3, sp, ip, lsr ip
   25bac:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10
   25bb0:	eorseq	r3, ip, ip, lsr ip
   25bb4:	eorseq	r3, sp, lr, lsr lr
   25bb8:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   25bbc:	eorseq	r3, lr, lr, lsr lr
   25bc0:	eoreq	r2, lr, lr, lsr #28
   25bc4:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   25bc8:	andeq	r6, r4, r4, ror #23
   25bcc:			; <UNDEFINED> instruction: 0xfffffc1d
   25bd0:			; <UNDEFINED> instruction: 0x36697536
   25bd4:			; <UNDEFINED> instruction: 0x000373bc
   25bd8:			; <UNDEFINED> instruction: 0xfffffc20
   25bdc:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   25be0:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   25be4:	andeq	r7, r3, r3, asr #7
   25be8:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   25bec:	strbvs	r6, [pc, #-1078]!	; 257be <__flatcc_fb_parse@@Base+0xc1e>
   25bf0:	andeq	r6, r4, r8, lsl #24
   25bf4:			; <UNDEFINED> instruction: 0xfffffc38
   25bf8:			; <UNDEFINED> instruction: 0x676c7535
   25bfc:	muleq	r4, r4, r6
   25c00:			; <UNDEFINED> instruction: 0xfffffc24
   25c04:			; <UNDEFINED> instruction: 0x67747336
   25c08:	ldrdeq	r6, [r4], -r0
   25c0c:	sfmvs	f6, 2, [pc], #-208	; 25b44 <__flatcc_fb_parse@@Base+0xfa4>
   25c10:	andeq	r7, r4, r9, lsr r4
   25c14:	rsbvc	r6, r9, #66060288	; 0x3f00000
   25c18:			; <UNDEFINED> instruction: 0x0002feb5
   25c1c:			; <UNDEFINED> instruction: 0xfffffc30
   25c20:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   25c24:	andeq	r7, r3, pc, asr #7
   25c28:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   25c2c:			; <UNDEFINED> instruction: 0x000475b9
   25c30:	ldrdeq	r5, [r4], -r4
   25c34:			; <UNDEFINED> instruction: 0xfffffc1e
   25c38:	andeq	r7, r4, r0, lsl #9
   25c3c:			; <UNDEFINED> instruction: 0xfffffc19
   25c40:	andeq	r8, r4, r7
   25c44:			; <UNDEFINED> instruction: 0xfffffc1a
   25c48:	andeq	r6, r4, r4, asr #23
   25c4c:			; <UNDEFINED> instruction: 0xfffffc25
   25c50:	andeq	r6, r4, r9, asr #23
   25c54:			; <UNDEFINED> instruction: 0xfffffc26
   25c58:			; <UNDEFINED> instruction: 0x000373b5
   25c5c:			; <UNDEFINED> instruction: 0xfffffc21
   25c60:	andeq	r7, r3, lr, lsr #7
   25c64:			; <UNDEFINED> instruction: 0xfffffc22
   25c68:	andeq	r8, r4, r6, lsr #14
   25c6c:			; <UNDEFINED> instruction: 0xfffffc29
   25c70:	andeq	r7, r3, r2, asr #7
   25c74:	andeq	r6, r4, pc, asr #23
   25c78:	ldrdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   25c7c:			; <UNDEFINED> instruction: 0xfffffc28
   25c80:	andeq	r7, r3, r8, asr #7
   25c84:			; <UNDEFINED> instruction: 0xfffffc31
   25c88:	andeq	r7, r4, lr, lsl r3
   25c8c:			; <UNDEFINED> instruction: 0xfffffc32
   25c90:			; <UNDEFINED> instruction: 0x000373b4
   25c94:			; <UNDEFINED> instruction: 0xfffffc2d
   25c98:			; <UNDEFINED> instruction: 0x000373bb
   25c9c:			; <UNDEFINED> instruction: 0xfffffc2c
   25ca0:	andeq	r7, r3, sp, lsr #7
   25ca4:			; <UNDEFINED> instruction: 0xfffffc2e
   25ca8:	ldrdeq	r6, [r4], -r5
   25cac:			; <UNDEFINED> instruction: 0xfffffc34
   25cb0:	ldrdeq	r6, [r4], -ip
   25cb4:			; <UNDEFINED> instruction: 0xfffffc1c
   25cb8:	andeq	r6, r4, ip, ror #23
   25cbc:	strdeq	r6, [r4], -r4
   25cc0:	strdeq	r6, [r4], -lr
   25cc4:	andeq	r6, r4, r2, lsl ip
   25cc8:	andeq	r6, r4, lr, lsl ip
   25ccc:	andeq	r6, r4, sp, lsr #24
   25cd0:			; <UNDEFINED> instruction: 0xfffffc35
   25cd4:	andeq	r6, r4, sp, lsr ip
   25cd8:	andeq	r6, r4, r5, ror ip
   25cdc:	andeq	r6, r4, lr, ror lr
   25ce0:	eoreq	r0, r0, r3, lsl #16
   25ce4:	andeq	r6, r4, r3, lsr #29
   25ce8:			; <UNDEFINED> instruction: 0x00046eba
   25cec:	ldrdeq	r6, [r4], -r8
   25cf0:	andeq	r6, r4, r3, lsr #25
   25cf4:			; <UNDEFINED> instruction: 0xfffffc36
   25cf8:	andeq	r6, r4, sp, ror #31
   25cfc:	strdeq	r7, [r4], -sl
   25d00:			; <UNDEFINED> instruction: 0xfffffc3a
   25d04:	andeq	r6, r4, r5, ror #26
   25d08:	andeq	r6, r4, r1, lsl #27
   25d0c:	andeq	r6, r4, r9, lsr #27
   25d10:	andeq	r6, r4, lr, asr #27
   25d14:	strheq	r7, [r4], -r7	; <UNPREDICTABLE>
   25d18:	andeq	r6, r4, r2, asr #25
   25d1c:	andeq	r6, r4, r2, ror #25
   25d20:	andeq	r7, r4, r0, lsr #2
   25d24:	andeq	r6, r4, r7, lsl #26
   25d28:	andeq	r6, r4, r2, lsr #26
   25d2c:	andeq	r6, r4, r9, asr #26
   25d30:	andeq	r6, r4, fp, ror #27
   25d34:	andeq	r6, r4, r1, lsl #28
   25d38:	andeq	r6, r4, r6, lsr #28
   25d3c:	andeq	r6, r4, r8, asr #28
   25d40:	andeq	r6, r4, r7, ror #28
   25d44:			; <UNDEFINED> instruction: 0xfffffc39
   25d48:	andeq	r6, r4, lr, lsl #30
   25d4c:	andeq	r6, r4, r0, lsr pc
   25d50:	andeq	r6, r4, r6, asr pc
   25d54:	muleq	r4, r1, pc	; <UNPREDICTABLE>
   25d58:	andeq	r6, r4, r5, ror pc
   25d5c:	strdeq	r6, [r4], -r3
   25d60:	andeq	r6, r4, sl, asr #31
   25d64:	andeq	r7, r4, r3, lsr #32
   25d68:	andeq	r7, r4, r5, lsl #1
   25d6c:	strdeq	r6, [r4], -r6	; <UNPREDICTABLE>
   25d70:	ldrdeq	r7, [r4], -pc	; <UNPREDICTABLE>
   25d74:	strdeq	r7, [r4], -r4
   25d78:	cmp	r1, sl
   25d7c:	beq	25ea8 <__flatcc_fb_parse@@Base+0x1308>
   25d80:	bhi	25dd4 <__flatcc_fb_parse@@Base+0x1234>
   25d84:	ldr	r3, [pc, #-376]	; 25c14 <__flatcc_fb_parse@@Base+0x1074>
   25d88:	cmp	r1, r3
   25d8c:	beq	260e4 <__flatcc_fb_parse@@Base+0x1544>
   25d90:	add	r3, r3, #33292288	; 0x1fc0000
   25d94:	add	r3, r3, #199680	; 0x30c00
   25d98:	add	r3, r3, #246	; 0xf6
   25d9c:	cmp	r1, r3
   25da0:	beq	25f74 <__flatcc_fb_parse@@Base+0x13d4>
   25da4:	add	r3, r3, #-100663296	; 0xfa000000
   25da8:	add	r3, r3, #393216	; 0x60000
   25dac:	add	r3, r3, #512	; 0x200
   25db0:	cmp	r1, r3
   25db4:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25db8:	mov	r1, r5
   25dbc:	mov	r2, #5
   25dc0:	ldr	r0, [pc, #-432]	; 25c18 <__flatcc_fb_parse@@Base+0x1078>
   25dc4:	bl	13f14 <memcmp@plt>
   25dc8:	cmp	r0, #0
   25dcc:	ldr	r1, [pc, #-440]	; 25c1c <__flatcc_fb_parse@@Base+0x107c>
   25dd0:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25dd4:	ldr	r3, [pc, #-444]	; 25c20 <__flatcc_fb_parse@@Base+0x1080>
   25dd8:	cmp	r1, r3
   25ddc:	beq	25e50 <__flatcc_fb_parse@@Base+0x12b0>
   25de0:	bhi	25e18 <__flatcc_fb_parse@@Base+0x1278>
   25de4:	sub	r3, r3, #131072	; 0x20000
   25de8:	sub	r3, r3, #764	; 0x2fc
   25dec:	sub	r3, r3, #2
   25df0:	cmp	r1, r3
   25df4:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25df8:	mov	r1, r5
   25dfc:	mov	r2, #5
   25e00:	ldr	r0, [pc, #-484]	; 25c24 <__flatcc_fb_parse@@Base+0x1084>
   25e04:	bl	13f14 <memcmp@plt>
   25e08:	cmp	r0, #0
   25e0c:	movne	r1, #9
   25e10:	mvneq	r1, #984	; 0x3d8
   25e14:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25e18:	ldr	r3, [pc, #-504]	; 25c28 <__flatcc_fb_parse@@Base+0x1088>
   25e1c:	cmp	r1, r3
   25e20:	beq	2601c <__flatcc_fb_parse@@Base+0x147c>
   25e24:	add	r3, r3, #65024	; 0xfe00
   25e28:	cmp	r1, r3
   25e2c:	bne	25270 <__flatcc_fb_parse@@Base+0x6d0>
   25e30:	mov	r1, r5
   25e34:	mov	r2, #6
   25e38:	ldr	r0, [pc, #-532]	; 25c2c <__flatcc_fb_parse@@Base+0x108c>
   25e3c:	bl	13f14 <memcmp@plt>
   25e40:	cmp	r0, #0
   25e44:	movne	r1, #9
   25e48:	mvneq	r1, #972	; 0x3cc
   25e4c:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25e50:	mov	r1, r5
   25e54:	mov	r2, #3
   25e58:	ldr	r0, [pc, #-560]	; 25c30 <__flatcc_fb_parse@@Base+0x1090>
   25e5c:	bl	13f14 <memcmp@plt>
   25e60:	ldr	r1, [pc, #-564]	; 25c34 <__flatcc_fb_parse@@Base+0x1094>
   25e64:	cmp	r0, #0
   25e68:	movne	r1, #9
   25e6c:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25e70:	mov	r1, r5
   25e74:	mov	r2, #4
   25e78:	ldr	r0, [pc, #-584]	; 25c38 <__flatcc_fb_parse@@Base+0x1098>
   25e7c:	bl	13f14 <memcmp@plt>
   25e80:	cmp	r0, #0
   25e84:	ldr	r1, [pc, #-592]	; 25c3c <__flatcc_fb_parse@@Base+0x109c>
   25e88:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25e8c:	mov	r1, r5
   25e90:	mov	r2, #4
   25e94:	ldr	r0, [pc, #-604]	; 25c40 <__flatcc_fb_parse@@Base+0x10a0>
   25e98:	bl	13f14 <memcmp@plt>
   25e9c:	cmp	r0, #0
   25ea0:	ldr	r1, [pc, #-612]	; 25c44 <__flatcc_fb_parse@@Base+0x10a4>
   25ea4:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25ea8:	mov	r1, r5
   25eac:	mov	r2, #4
   25eb0:	ldr	r0, [pc, #-624]	; 25c48 <__flatcc_fb_parse@@Base+0x10a8>
   25eb4:	bl	13f14 <memcmp@plt>
   25eb8:	cmp	r0, #0
   25ebc:	ldr	r1, [pc, #-632]	; 25c4c <__flatcc_fb_parse@@Base+0x10ac>
   25ec0:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25ec4:	mov	r1, r5
   25ec8:	mov	r2, #5
   25ecc:	ldr	r0, [pc, #-644]	; 25c50 <__flatcc_fb_parse@@Base+0x10b0>
   25ed0:	bl	13f14 <memcmp@plt>
   25ed4:	cmp	r0, #0
   25ed8:	ldr	r1, [pc, #-652]	; 25c54 <__flatcc_fb_parse@@Base+0x10b4>
   25edc:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25ee0:	mov	r1, r5
   25ee4:	mov	r2, #5
   25ee8:	ldr	r0, [pc, #-664]	; 25c58 <__flatcc_fb_parse@@Base+0x10b8>
   25eec:	bl	13f14 <memcmp@plt>
   25ef0:	cmp	r0, #0
   25ef4:	ldr	r1, [pc, #-672]	; 25c5c <__flatcc_fb_parse@@Base+0x10bc>
   25ef8:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25efc:	mov	r1, r5
   25f00:	mov	r2, #5
   25f04:	ldr	r0, [pc, #-684]	; 25c60 <__flatcc_fb_parse@@Base+0x10c0>
   25f08:	bl	13f14 <memcmp@plt>
   25f0c:	cmp	r0, #0
   25f10:	ldr	r1, [pc, #-692]	; 25c64 <__flatcc_fb_parse@@Base+0x10c4>
   25f14:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25f18:	mov	r1, r5
   25f1c:	mov	r2, #5
   25f20:	ldr	r0, [pc, #-704]	; 25c68 <__flatcc_fb_parse@@Base+0x10c8>
   25f24:	bl	13f14 <memcmp@plt>
   25f28:	cmp	r0, #0
   25f2c:	ldr	r1, [pc, #-712]	; 25c6c <__flatcc_fb_parse@@Base+0x10cc>
   25f30:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25f34:	mov	r1, r5
   25f38:	mov	r2, #5
   25f3c:	ldr	r0, [pc, #-724]	; 25c70 <__flatcc_fb_parse@@Base+0x10d0>
   25f40:	bl	13f14 <memcmp@plt>
   25f44:	cmp	r0, #0
   25f48:	movne	r1, #9
   25f4c:	mvneq	r1, #980	; 0x3d4
   25f50:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25f54:	mov	r1, r5
   25f58:	mov	r2, #5
   25f5c:	ldr	r0, [pc, #-752]	; 25c74 <__flatcc_fb_parse@@Base+0x10d4>
   25f60:	bl	13f14 <memcmp@plt>
   25f64:	cmp	r0, #0
   25f68:	movne	r1, #9
   25f6c:	mvneq	r1, #976	; 0x3d0
   25f70:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   25f74:	mov	r1, r5
   25f78:	mov	r2, #5
   25f7c:	ldr	r0, [pc, #-780]	; 25c78 <__flatcc_fb_parse@@Base+0x10d8>
   25f80:	bl	13f14 <memcmp@plt>
   25f84:	cmp	r0, #0
   25f88:	ldr	r1, [pc, #-788]	; 25c7c <__flatcc_fb_parse@@Base+0x10dc>
   25f8c:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25f90:	mov	r1, r5
   25f94:	mov	r2, #6
   25f98:	ldr	r0, [pc, #-800]	; 25c80 <__flatcc_fb_parse@@Base+0x10e0>
   25f9c:	bl	13f14 <memcmp@plt>
   25fa0:	cmp	r0, #0
   25fa4:	ldr	r1, [pc, #-808]	; 25c84 <__flatcc_fb_parse@@Base+0x10e4>
   25fa8:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25fac:	mov	r1, r5
   25fb0:	mov	r2, #6
   25fb4:	ldr	r0, [pc, #-820]	; 25c88 <__flatcc_fb_parse@@Base+0x10e8>
   25fb8:	bl	13f14 <memcmp@plt>
   25fbc:	cmp	r0, #0
   25fc0:	ldr	r1, [pc, #-828]	; 25c8c <__flatcc_fb_parse@@Base+0x10ec>
   25fc4:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25fc8:	mov	r1, r5
   25fcc:	mov	r2, #6
   25fd0:	ldr	r0, [pc, #-840]	; 25c90 <__flatcc_fb_parse@@Base+0x10f0>
   25fd4:	bl	13f14 <memcmp@plt>
   25fd8:	cmp	r0, #0
   25fdc:	ldr	r1, [pc, #-848]	; 25c94 <__flatcc_fb_parse@@Base+0x10f4>
   25fe0:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   25fe4:	mov	r1, r5
   25fe8:	mov	r2, #6
   25fec:	ldr	r0, [pc, #-860]	; 25c98 <__flatcc_fb_parse@@Base+0x10f8>
   25ff0:	bl	13f14 <memcmp@plt>
   25ff4:	cmp	r0, #0
   25ff8:	ldr	r1, [pc, #-868]	; 25c9c <__flatcc_fb_parse@@Base+0x10fc>
   25ffc:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   26000:	mov	r1, r5
   26004:	mov	r2, #6
   26008:	ldr	r0, [pc, #-880]	; 25ca0 <__flatcc_fb_parse@@Base+0x1100>
   2600c:	bl	13f14 <memcmp@plt>
   26010:	cmp	r0, #0
   26014:	ldr	r1, [pc, #-888]	; 25ca4 <__flatcc_fb_parse@@Base+0x1104>
   26018:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   2601c:	mov	r1, r5
   26020:	mov	r2, #6
   26024:	ldr	r0, [pc, #-900]	; 25ca8 <__flatcc_fb_parse@@Base+0x1108>
   26028:	bl	13f14 <memcmp@plt>
   2602c:	cmp	r0, #0
   26030:	ldr	r1, [pc, #-908]	; 25cac <__flatcc_fb_parse@@Base+0x110c>
   26034:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   26038:	mov	r1, r5
   2603c:	mov	r2, #7
   26040:	ldr	r0, [pc, #-920]	; 25cb0 <__flatcc_fb_parse@@Base+0x1110>
   26044:	bl	13f14 <memcmp@plt>
   26048:	cmp	r0, #0
   2604c:	ldr	r1, [pc, #-928]	; 25cb4 <__flatcc_fb_parse@@Base+0x1114>
   26050:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   26054:	mov	r1, r5
   26058:	mov	r2, #7
   2605c:	ldr	r0, [pc, #-940]	; 25cb8 <__flatcc_fb_parse@@Base+0x1118>
   26060:	bl	13f14 <memcmp@plt>
   26064:	cmp	r0, #0
   26068:	ldr	r1, [pc, #-928]	; 25cd0 <__flatcc_fb_parse@@Base+0x1130>
   2606c:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   26070:	mov	r1, r5
   26074:	mov	r2, #9
   26078:	ldr	r0, [pc, #-964]	; 25cbc <__flatcc_fb_parse@@Base+0x111c>
   2607c:	bl	13f14 <memcmp@plt>
   26080:	cmp	r0, #0
   26084:	ldr	r1, [pc, #-920]	; 25cf4 <__flatcc_fb_parse@@Base+0x1154>
   26088:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   2608c:	mov	r1, r5
   26090:	mov	r2, #9
   26094:	ldr	r0, [pc, #-988]	; 25cc0 <__flatcc_fb_parse@@Base+0x1120>
   26098:	bl	13f14 <memcmp@plt>
   2609c:	cmp	r0, #0
   260a0:	movne	r1, #9
   260a4:	mvneq	r1, #968	; 0x3c8
   260a8:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   260ac:	mov	r1, r5
   260b0:	mov	r2, #11
   260b4:	ldr	r0, [pc, #-1016]	; 25cc4 <__flatcc_fb_parse@@Base+0x1124>
   260b8:	bl	13f14 <memcmp@plt>
   260bc:	cmp	r0, #0
   260c0:	ldr	r1, [pc, #-900]	; 25d44 <__flatcc_fb_parse@@Base+0x11a4>
   260c4:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   260c8:	mov	r1, r5
   260cc:	mov	r2, #14
   260d0:	ldr	r0, [pc, #-1040]	; 25cc8 <__flatcc_fb_parse@@Base+0x1128>
   260d4:	bl	13f14 <memcmp@plt>
   260d8:	cmp	r0, #0
   260dc:	ldr	r1, [pc, #-996]	; 25d00 <__flatcc_fb_parse@@Base+0x1160>
   260e0:	b	25e68 <__flatcc_fb_parse@@Base+0x12c8>
   260e4:	mov	r1, r5
   260e8:	mov	r2, #15
   260ec:	ldr	r0, [pc, #-1064]	; 25ccc <__flatcc_fb_parse@@Base+0x112c>
   260f0:	bl	13f14 <memcmp@plt>
   260f4:	cmp	r0, #0
   260f8:	movne	r1, #9
   260fc:	mvneq	r1, #964	; 0x3c4
   26100:	b	250a4 <__flatcc_fb_parse@@Base+0x504>
   26104:	ldrb	r1, [r5]
   26108:	cmp	r1, #0
   2610c:	moveq	r3, r5
   26110:	moveq	r2, r3
   26114:	bne	24ec8 <__flatcc_fb_parse@@Base+0x328>
   26118:	mov	r0, r4
   2611c:	bl	23728 <__flatcc_fb_default_error_out@@Base+0x44>
   26120:	ldr	r5, [r4, #20]
   26124:	ldr	r3, [r4, #40]	; 0x28
   26128:	ldr	r0, [r4, #216]	; 0xd8
   2612c:	str	r3, [r4, #24]
   26130:	str	r5, [r4, #40]	; 0x28
   26134:	bl	13f68 <malloc@plt>
   26138:	cmp	r0, #0
   2613c:	str	r0, [r4, #112]	; 0x70
   26140:	bne	26148 <__flatcc_fb_parse@@Base+0x15a8>
   26144:	bl	23704 <__flatcc_fb_default_error_out@@Base+0x20>
   26148:	ldr	r3, [r5, #16]
   2614c:	cmn	r3, #964	; 0x3c4
   26150:	bne	2615c <__flatcc_fb_parse@@Base+0x15bc>
   26154:	mov	r0, r4
   26158:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   2615c:	ldr	r5, [pc, #-1172]	; 25cd0 <__flatcc_fb_parse@@Base+0x1130>
   26160:	ldr	r7, [pc, #-1172]	; 25cd4 <__flatcc_fb_parse@@Base+0x1134>
   26164:	ldr	r8, [pc, #-1172]	; 25cd8 <__flatcc_fb_parse@@Base+0x1138>
   26168:	ldr	r6, [r4, #40]	; 0x28
   2616c:	mov	r1, r5
   26170:	mov	r0, r4
   26174:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   26178:	cmp	r0, #0
   2617c:	beq	261a8 <__flatcc_fb_parse@@Base+0x1608>
   26180:	ldr	r3, [r4, #140]	; 0x8c
   26184:	cmp	r3, #0
   26188:	beq	2619c <__flatcc_fb_parse@@Base+0x15fc>
   2618c:	mov	r2, r7
   26190:	mov	r1, r6
   26194:	mov	r0, r4
   26198:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   2619c:	ldr	r3, [r4, #108]	; 0x6c
   261a0:	cmp	r3, #9
   261a4:	ble	263a0 <__flatcc_fb_parse@@Base+0x1800>
   261a8:	ldr	r6, [r4, #40]	; 0x28
   261ac:	ldr	r3, [r6, #16]
   261b0:	cmp	r3, #0
   261b4:	beq	26a94 <__flatcc_fb_parse@@Base+0x1ef4>
   261b8:	ldr	r3, [r4, #108]	; 0x6c
   261bc:	cmp	r3, #9
   261c0:	bgt	265d8 <__flatcc_fb_parse@@Base+0x1a38>
   261c4:	ldr	r1, [r4, #40]	; 0x28
   261c8:	ldr	r5, [r1, #16]
   261cc:	cmn	r5, #968	; 0x3c8
   261d0:	beq	26658 <__flatcc_fb_parse@@Base+0x1ab8>
   261d4:	bgt	2642c <__flatcc_fb_parse@@Base+0x188c>
   261d8:	mvn	r3, #972	; 0x3cc
   261dc:	cmp	r5, r3
   261e0:	beq	26728 <__flatcc_fb_parse@@Base+0x1b88>
   261e4:	cmn	r5, #972	; 0x3cc
   261e8:	bge	26404 <__flatcc_fb_parse@@Base+0x1864>
   261ec:	sub	r3, r3, #10
   261f0:	cmp	r5, r3
   261f4:	beq	26788 <__flatcc_fb_parse@@Base+0x1be8>
   261f8:	cmn	r5, #976	; 0x3d0
   261fc:	beq	26854 <__flatcc_fb_parse@@Base+0x1cb4>
   26200:	mvn	r3, #996	; 0x3e4
   26204:	cmp	r5, r3
   26208:	bne	26424 <__flatcc_fb_parse@@Base+0x1884>
   2620c:	mov	r0, r4
   26210:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26214:	mov	r1, #128	; 0x80
   26218:	mov	r0, r4
   2621c:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   26220:	ldr	r3, [r4, #392]	; 0x188
   26224:	mov	r5, r0
   26228:	add	r0, r4, #36	; 0x24
   2622c:	str	r3, [r5]
   26230:	mov	r3, #3
   26234:	strh	r3, [r5, #8]
   26238:	ldr	r3, [r4, #544]	; 0x220
   2623c:	str	r5, [r4, #392]	; 0x188
   26240:	str	r3, [r5, #12]
   26244:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   26248:	ldr	r3, [r4, #36]	; 0x24
   2624c:	mov	r1, #9
   26250:	mov	r0, r4
   26254:	ldr	r2, [pc, #-1408]	; 25cdc <__flatcc_fb_parse@@Base+0x113c>
   26258:	str	r3, [r5, #32]
   2625c:	mov	r3, #0
   26260:	str	r3, [r4, #36]	; 0x24
   26264:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   26268:	cmp	r0, #0
   2626c:	str	r0, [r5, #4]
   26270:	beq	2684c <__flatcc_fb_parse@@Base+0x1cac>
   26274:	mov	r1, #58	; 0x3a
   26278:	mov	r0, r4
   2627c:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   26280:	cmp	r0, #0
   26284:	beq	262d8 <__flatcc_fb_parse@@Base+0x1738>
   26288:	add	r1, r5, #40	; 0x28
   2628c:	mov	r0, r4
   26290:	bl	24454 <__flatcc_error_report@@Base+0x988>
   26294:	ldrh	r3, [r5, #48]	; 0x30
   26298:	cmp	r3, #8
   2629c:	ldrne	r2, [pc, #-1472]	; 25ce4 <__flatcc_fb_parse@@Base+0x1144>
   262a0:	ldrne	r1, [r5, #40]	; 0x28
   262a4:	bne	262d0 <__flatcc_fb_parse@@Base+0x1730>
   262a8:	ldr	r1, [r5, #40]	; 0x28
   262ac:	ldr	r3, [r1, #16]
   262b0:	add	r3, r3, #996	; 0x3e4
   262b4:	cmp	r3, #21
   262b8:	bhi	262d8 <__flatcc_fb_parse@@Base+0x1738>
   262bc:	ldr	r0, [pc, #-1508]	; 25ce0 <__flatcc_fb_parse@@Base+0x1140>
   262c0:	mov	r2, #1
   262c4:	ands	r3, r0, r2, lsl r3
   262c8:	beq	262d8 <__flatcc_fb_parse@@Base+0x1738>
   262cc:	ldr	r2, [pc, #-1520]	; 25ce4 <__flatcc_fb_parse@@Base+0x1144>
   262d0:	mov	r0, r4
   262d4:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   262d8:	mov	r0, r4
   262dc:	bl	2434c <__flatcc_error_report@@Base+0x880>
   262e0:	ldr	r2, [pc, #-1536]	; 25ce8 <__flatcc_fb_parse@@Base+0x1148>
   262e4:	mov	r1, #123	; 0x7b
   262e8:	str	r0, [r5, #28]
   262ec:	mov	r0, r4
   262f0:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   262f4:	subs	r9, r0, #0
   262f8:	beq	2684c <__flatcc_fb_parse@@Base+0x1cac>
   262fc:	ldr	sl, [pc, #-1560]	; 25cec <__flatcc_fb_parse@@Base+0x114c>
   26300:	ldr	fp, [pc, #-1452]	; 25d5c <__flatcc_fb_parse@@Base+0x11bc>
   26304:	mov	r2, sl
   26308:	mov	r1, #9
   2630c:	mov	r0, r4
   26310:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   26314:	subs	r3, r0, #0
   26318:	str	r3, [sp, #12]
   2631c:	beq	2684c <__flatcc_fb_parse@@Base+0x1cac>
   26320:	ldr	r2, [r4, #108]	; 0x6c
   26324:	cmp	r2, #9
   26328:	bgt	2684c <__flatcc_fb_parse@@Base+0x1cac>
   2632c:	add	r7, r5, #20
   26330:	mov	r0, r4
   26334:	mov	r1, r7
   26338:	bl	239d4 <__flatcc_fb_default_error_out@@Base+0x2f0>
   2633c:	ldr	r3, [sp, #12]
   26340:	mov	r8, r0
   26344:	mov	r1, #61	; 0x3d
   26348:	mov	r0, r4
   2634c:	str	r3, [r8, #4]
   26350:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   26354:	cmp	r0, #0
   26358:	beq	26370 <__flatcc_fb_parse@@Base+0x17d0>
   2635c:	mov	r3, fp
   26360:	mov	r2, #0
   26364:	add	r1, r8, #48	; 0x30
   26368:	mov	r0, r4
   2636c:	bl	23e94 <__flatcc_error_report@@Base+0x3c8>
   26370:	mov	r1, #44	; 0x2c
   26374:	mov	r0, r4
   26378:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   2637c:	cmp	r0, #0
   26380:	beq	2682c <__flatcc_fb_parse@@Base+0x1c8c>
   26384:	ldr	r3, [r4, #40]	; 0x28
   26388:	ldr	r3, [r3, #16]
   2638c:	cmp	r3, #125	; 0x7d
   26390:	beq	2682c <__flatcc_fb_parse@@Base+0x1c8c>
   26394:	mov	r3, #0
   26398:	str	r3, [r4, #36]	; 0x24
   2639c:	b	26304 <__flatcc_fb_parse@@Base+0x1764>
   263a0:	mov	r2, r8
   263a4:	mov	r1, #19
   263a8:	mov	r0, r4
   263ac:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   263b0:	cmp	r0, #0
   263b4:	bne	263c4 <__flatcc_fb_parse@@Base+0x1824>
   263b8:	mov	r1, #59	; 0x3b
   263bc:	mov	r0, r4
   263c0:	bl	23994 <__flatcc_fb_default_error_out@@Base+0x2b0>
   263c4:	mov	r1, #24
   263c8:	mov	r0, r4
   263cc:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   263d0:	ldr	r3, [r4, #352]	; 0x160
   263d4:	add	r1, r0, #8
   263d8:	str	r3, [r0]
   263dc:	str	r0, [r4, #352]	; 0x160
   263e0:	mov	r0, r4
   263e4:	bl	23d38 <__flatcc_error_report@@Base+0x26c>
   263e8:	ldr	r2, [pc, #-1792]	; 25cf0 <__flatcc_fb_parse@@Base+0x1150>
   263ec:	mov	r1, #59	; 0x3b
   263f0:	mov	r0, r4
   263f4:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   263f8:	b	2616c <__flatcc_fb_parse@@Base+0x15cc>
   263fc:	mov	r6, r3
   26400:	b	261ac <__flatcc_fb_parse@@Base+0x160c>
   26404:	ldr	r3, [pc, #-1816]	; 25cf4 <__flatcc_fb_parse@@Base+0x1154>
   26408:	cmp	r5, r3
   2640c:	beq	266b0 <__flatcc_fb_parse@@Base+0x1b10>
   26410:	bgt	26524 <__flatcc_fb_parse@@Base+0x1984>
   26414:	sub	r3, r3, #1
   26418:	cmp	r5, r3
   2641c:	ldreq	r2, [pc, #-1836]	; 25cf8 <__flatcc_fb_parse@@Base+0x1158>
   26420:	beq	26a48 <__flatcc_fb_parse@@Base+0x1ea8>
   26424:	ldr	r2, [pc, #-1840]	; 25cfc <__flatcc_fb_parse@@Base+0x115c>
   26428:	b	26a48 <__flatcc_fb_parse@@Base+0x1ea8>
   2642c:	cmp	r5, #5
   26430:	beq	26a54 <__flatcc_fb_parse@@Base+0x1eb4>
   26434:	bgt	264f0 <__flatcc_fb_parse@@Base+0x1950>
   26438:	ldr	r3, [pc, #-1856]	; 25d00 <__flatcc_fb_parse@@Base+0x1160>
   2643c:	cmp	r5, r3
   26440:	beq	265e4 <__flatcc_fb_parse@@Base+0x1a44>
   26444:	blt	267d4 <__flatcc_fb_parse@@Base+0x1c34>
   26448:	mvn	r3, #964	; 0x3c4
   2644c:	cmp	r5, r3
   26450:	bne	26424 <__flatcc_fb_parse@@Base+0x1884>
   26454:	mov	r0, r4
   26458:	add	r5, r4, #360	; 0x168
   2645c:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26460:	ldrh	r3, [r5, #8]
   26464:	cmp	r3, #0
   26468:	beq	26490 <__flatcc_fb_parse@@Base+0x18f0>
   2646c:	ldr	r1, [r4, #40]	; 0x28
   26470:	mov	r0, r4
   26474:	ldr	r3, [r4, #364]	; 0x16c
   26478:	ldr	r2, [pc, #-1916]	; 25d04 <__flatcc_fb_parse@@Base+0x1164>
   2647c:	str	r3, [sp, #4]
   26480:	ldr	r3, [r4, #360]	; 0x168
   26484:	str	r3, [sp]
   26488:	mov	r3, #0
   2648c:	bl	23acc <__flatcc_error_report@@Base>
   26490:	ldr	r2, [pc, #-1936]	; 25d08 <__flatcc_fb_parse@@Base+0x1168>
   26494:	mov	r1, #19
   26498:	mov	r0, r4
   2649c:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   264a0:	cmp	r0, #0
   264a4:	beq	26570 <__flatcc_fb_parse@@Base+0x19d0>
   264a8:	mov	r1, r5
   264ac:	mov	r0, r4
   264b0:	ldr	r7, [r4, #40]	; 0x28
   264b4:	bl	23d38 <__flatcc_error_report@@Base+0x26c>
   264b8:	ldr	r3, [r4, #360]	; 0x168
   264bc:	cmp	r3, #0
   264c0:	beq	264e8 <__flatcc_fb_parse@@Base+0x1948>
   264c4:	ldr	r3, [r4, #364]	; 0x16c
   264c8:	cmp	r3, #4
   264cc:	beq	264e8 <__flatcc_fb_parse@@Base+0x1948>
   264d0:	mov	r3, #1
   264d4:	ldr	r2, [pc, #-2000]	; 25d0c <__flatcc_fb_parse@@Base+0x116c>
   264d8:	mov	r1, r7
   264dc:	mov	r0, r4
   264e0:	strh	r3, [r5, #8]
   264e4:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   264e8:	ldr	r2, [pc, #-2016]	; 25d10 <__flatcc_fb_parse@@Base+0x1170>
   264ec:	b	26648 <__flatcc_fb_parse@@Base+0x1aa8>
   264f0:	cmp	r5, #27
   264f4:	beq	26a78 <__flatcc_fb_parse@@Base+0x1ed8>
   264f8:	cmp	r5, #123	; 0x7b
   264fc:	beq	26a44 <__flatcc_fb_parse@@Base+0x1ea4>
   26500:	cmp	r5, #7
   26504:	bne	26424 <__flatcc_fb_parse@@Base+0x1884>
   26508:	mov	r3, #1
   2650c:	ldr	r2, [pc, #-2048]	; 25d14 <__flatcc_fb_parse@@Base+0x1174>
   26510:	str	r3, [sp, #4]
   26514:	ldr	r3, [pc, #-1968]	; 25d6c <__flatcc_fb_parse@@Base+0x11cc>
   26518:	str	r3, [sp]
   2651c:	mov	r3, #0
   26520:	b	26a6c <__flatcc_fb_parse@@Base+0x1ecc>
   26524:	mov	r0, r4
   26528:	mov	r7, #0
   2652c:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26530:	ldr	r5, [r4, #40]	; 0x28
   26534:	mov	r1, #59	; 0x3b
   26538:	mov	r0, r4
   2653c:	str	r7, [sp, #20]
   26540:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   26544:	cmp	r0, r7
   26548:	cmpne	r5, r7
   2654c:	strne	r7, [r4, #544]	; 0x220
   26550:	bne	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26554:	ldr	r1, [r4, #40]	; 0x28
   26558:	ldr	r3, [r1, #16]
   2655c:	cmp	r3, #9
   26560:	beq	26580 <__flatcc_fb_parse@@Base+0x19e0>
   26564:	ldr	r2, [pc, #-2132]	; 25d18 <__flatcc_fb_parse@@Base+0x1178>
   26568:	mov	r0, r4
   2656c:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   26570:	mov	r1, #59	; 0x3b
   26574:	mov	r0, r4
   26578:	bl	23994 <__flatcc_fb_default_error_out@@Base+0x2b0>
   2657c:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26580:	add	r1, sp, #20
   26584:	mov	r0, r4
   26588:	bl	23cac <__flatcc_error_report@@Base+0x1e0>
   2658c:	mov	r3, r5
   26590:	ldr	r2, [pc, #-2172]	; 25d1c <__flatcc_fb_parse@@Base+0x117c>
   26594:	mov	r1, #59	; 0x3b
   26598:	mov	r0, r4
   2659c:	bl	24304 <__flatcc_error_report@@Base+0x838>
   265a0:	mov	r0, r4
   265a4:	ldr	r1, [sp, #20]
   265a8:	bl	23858 <__flatcc_fb_default_error_out@@Base+0x174>
   265ac:	str	r0, [r4, #544]	; 0x220
   265b0:	ldr	r3, [r4, #40]	; 0x28
   265b4:	cmp	r6, r3
   265b8:	bne	263fc <__flatcc_fb_parse@@Base+0x185c>
   265bc:	ldr	r3, [r4, #108]	; 0x6c
   265c0:	cmp	r3, #0
   265c4:	bne	265d8 <__flatcc_fb_parse@@Base+0x1a38>
   265c8:	ldr	r2, [pc, #-2224]	; 25d20 <__flatcc_fb_parse@@Base+0x1180>
   265cc:	mov	r1, r6
   265d0:	mov	r0, r4
   265d4:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   265d8:	ldr	r0, [r4, #108]	; 0x6c
   265dc:	add	sp, sp, #28
   265e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   265e4:	mov	r0, r4
   265e8:	add	r5, r4, #376	; 0x178
   265ec:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   265f0:	ldrh	r3, [r5, #8]
   265f4:	cmp	r3, #2
   265f8:	bne	26620 <__flatcc_fb_parse@@Base+0x1a80>
   265fc:	ldr	r1, [r4, #40]	; 0x28
   26600:	mov	r0, r4
   26604:	ldr	r3, [r4, #380]	; 0x17c
   26608:	ldr	r2, [pc, #-2284]	; 25d24 <__flatcc_fb_parse@@Base+0x1184>
   2660c:	str	r3, [sp, #4]
   26610:	ldr	r3, [r4, #376]	; 0x178
   26614:	str	r3, [sp]
   26618:	mov	r3, #0
   2661c:	bl	23acc <__flatcc_error_report@@Base>
   26620:	ldr	r2, [pc, #-2304]	; 25d28 <__flatcc_fb_parse@@Base+0x1188>
   26624:	mov	r1, #19
   26628:	mov	r0, r4
   2662c:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   26630:	cmp	r0, #0
   26634:	beq	26570 <__flatcc_fb_parse@@Base+0x19d0>
   26638:	mov	r1, r5
   2663c:	mov	r0, r4
   26640:	bl	23d38 <__flatcc_error_report@@Base+0x26c>
   26644:	ldr	r2, [pc, #-2336]	; 25d2c <__flatcc_fb_parse@@Base+0x118c>
   26648:	mov	r1, #59	; 0x3b
   2664c:	mov	r0, r4
   26650:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   26654:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26658:	mov	r0, r4
   2665c:	add	r7, r4, #400	; 0x190
   26660:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26664:	ldr	r5, [r4, #40]	; 0x28
   26668:	ldr	r3, [r4, #400]	; 0x190
   2666c:	cmp	r3, #0
   26670:	beq	26684 <__flatcc_fb_parse@@Base+0x1ae4>
   26674:	ldr	r2, [pc, #-2380]	; 25d30 <__flatcc_fb_parse@@Base+0x1190>
   26678:	mov	r1, r5
   2667c:	mov	r0, r4
   26680:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   26684:	mov	r1, r7
   26688:	mov	r0, r4
   2668c:	bl	23cac <__flatcc_error_report@@Base+0x1e0>
   26690:	ldr	r3, [r4, #544]	; 0x220
   26694:	mov	r1, #59	; 0x3b
   26698:	mov	r0, r4
   2669c:	ldr	r2, [pc, #-2416]	; 25d34 <__flatcc_fb_parse@@Base+0x1194>
   266a0:	str	r3, [r4, #408]	; 0x198
   266a4:	mov	r3, r5
   266a8:	bl	24304 <__flatcc_error_report@@Base+0x838>
   266ac:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   266b0:	mov	r0, r4
   266b4:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   266b8:	mov	r1, #32
   266bc:	mov	r0, r4
   266c0:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   266c4:	mov	r5, r0
   266c8:	ldr	r2, [pc, #-2456]	; 25d38 <__flatcc_fb_parse@@Base+0x1198>
   266cc:	mov	r1, #19
   266d0:	mov	r0, r4
   266d4:	ldr	r3, [r4, #356]	; 0x164
   266d8:	ldr	r7, [r4, #40]	; 0x28
   266dc:	str	r3, [r5]
   266e0:	str	r5, [r4, #356]	; 0x164
   266e4:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   266e8:	cmp	r0, #0
   266ec:	beq	26720 <__flatcc_fb_parse@@Base+0x1b80>
   266f0:	add	r1, r5, #8
   266f4:	mov	r0, r4
   266f8:	bl	23d38 <__flatcc_error_report@@Base+0x26c>
   266fc:	ldr	r3, [r5, #12]
   26700:	cmp	r3, #0
   26704:	bne	26720 <__flatcc_fb_parse@@Base+0x1b80>
   26708:	ldr	r2, [pc, #-2516]	; 25d3c <__flatcc_fb_parse@@Base+0x119c>
   2670c:	mov	r1, r7
   26710:	mov	r0, r4
   26714:	str	r3, [sp]
   26718:	str	r3, [sp, #4]
   2671c:	bl	23acc <__flatcc_error_report@@Base>
   26720:	ldr	r2, [pc, #-2536]	; 25d40 <__flatcc_fb_parse@@Base+0x11a0>
   26724:	b	26648 <__flatcc_fb_parse@@Base+0x1aa8>
   26728:	mov	r0, r4
   2672c:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26730:	mov	r1, #128	; 0x80
   26734:	mov	r0, r4
   26738:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   2673c:	ldr	r3, [r4, #392]	; 0x188
   26740:	mov	r7, r0
   26744:	add	r0, r4, #36	; 0x24
   26748:	str	r3, [r7]
   2674c:	mov	r3, #1
   26750:	strh	r3, [r7, #8]
   26754:	ldr	r3, [r4, #544]	; 0x220
   26758:	str	r7, [r4, #392]	; 0x188
   2675c:	str	r3, [r7, #12]
   26760:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   26764:	ldr	r3, [r4, #36]	; 0x24
   26768:	str	r3, [r7, #32]
   2676c:	mov	r3, #0
   26770:	str	r3, [r4, #36]	; 0x24
   26774:	mov	r2, r5
   26778:	mov	r1, r7
   2677c:	mov	r0, r4
   26780:	bl	24644 <__flatcc_error_report@@Base+0xb78>
   26784:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26788:	mov	r0, r4
   2678c:	mov	r8, #0
   26790:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   26794:	mov	r1, #128	; 0x80
   26798:	mov	r0, r4
   2679c:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   267a0:	ldr	r3, [r4, #392]	; 0x188
   267a4:	mov	r7, r0
   267a8:	add	r0, r4, #36	; 0x24
   267ac:	str	r3, [r7]
   267b0:	ldr	r3, [r4, #544]	; 0x220
   267b4:	strh	r8, [r7, #8]
   267b8:	str	r7, [r4, #392]	; 0x188
   267bc:	str	r3, [r7, #12]
   267c0:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   267c4:	ldr	r3, [r4, #36]	; 0x24
   267c8:	str	r3, [r7, #32]
   267cc:	str	r8, [r4, #36]	; 0x24
   267d0:	b	26774 <__flatcc_fb_parse@@Base+0x1bd4>
   267d4:	mov	r0, r4
   267d8:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   267dc:	mov	r1, #128	; 0x80
   267e0:	mov	r0, r4
   267e4:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   267e8:	ldr	r3, [r4, #392]	; 0x188
   267ec:	mov	r5, r0
   267f0:	add	r0, r4, #36	; 0x24
   267f4:	str	r3, [r5]
   267f8:	mov	r3, #2
   267fc:	strh	r3, [r5, #8]
   26800:	ldr	r3, [r4, #544]	; 0x220
   26804:	str	r5, [r4, #392]	; 0x188
   26808:	str	r3, [r5, #12]
   2680c:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   26810:	ldr	r3, [r4, #36]	; 0x24
   26814:	mov	r1, r5
   26818:	ldr	r2, [pc, #-2780]	; 25d44 <__flatcc_fb_parse@@Base+0x11a4>
   2681c:	str	r3, [r5, #32]
   26820:	mov	r3, #0
   26824:	str	r3, [r4, #36]	; 0x24
   26828:	b	2677c <__flatcc_fb_parse@@Base+0x1bdc>
   2682c:	mov	r3, r9
   26830:	ldr	r2, [pc, #-2800]	; 25d48 <__flatcc_fb_parse@@Base+0x11a8>
   26834:	mov	r1, #125	; 0x7d
   26838:	mov	r0, r4
   2683c:	bl	24304 <__flatcc_error_report@@Base+0x838>
   26840:	mov	r0, r7
   26844:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   26848:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   2684c:	mov	r1, #125	; 0x7d
   26850:	b	26574 <__flatcc_fb_parse@@Base+0x19d4>
   26854:	mov	r0, r4
   26858:	bl	238b4 <__flatcc_fb_default_error_out@@Base+0x1d0>
   2685c:	mov	r1, #128	; 0x80
   26860:	mov	r0, r4
   26864:	bl	237f0 <__flatcc_fb_default_error_out@@Base+0x10c>
   26868:	ldr	r3, [r4, #392]	; 0x188
   2686c:	mov	r5, r0
   26870:	add	r0, r4, #36	; 0x24
   26874:	str	r3, [r5]
   26878:	mov	r3, #4
   2687c:	strh	r3, [r5, #8]
   26880:	ldr	r3, [r4, #544]	; 0x220
   26884:	str	r5, [r4, #392]	; 0x188
   26888:	str	r3, [r5, #12]
   2688c:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   26890:	ldr	r3, [r4, #36]	; 0x24
   26894:	mov	r1, #9
   26898:	mov	r0, r4
   2689c:	ldr	r2, [pc, #-2904]	; 25d4c <__flatcc_fb_parse@@Base+0x11ac>
   268a0:	str	r3, [r5, #32]
   268a4:	mov	r3, #0
   268a8:	str	r3, [r4, #36]	; 0x24
   268ac:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   268b0:	cmp	r0, #0
   268b4:	str	r0, [r5, #4]
   268b8:	beq	26904 <__flatcc_fb_parse@@Base+0x1d64>
   268bc:	mov	r0, r4
   268c0:	bl	2434c <__flatcc_error_report@@Base+0x880>
   268c4:	ldr	r2, [pc, #-2940]	; 25d50 <__flatcc_fb_parse@@Base+0x11b0>
   268c8:	mov	r1, #123	; 0x7b
   268cc:	str	r0, [r5, #28]
   268d0:	mov	r0, r4
   268d4:	bl	23c7c <__flatcc_error_report@@Base+0x1b0>
   268d8:	subs	r9, r0, #0
   268dc:	beq	26904 <__flatcc_fb_parse@@Base+0x1d64>
   268e0:	ldr	sl, [pc, #-2964]	; 25d54 <__flatcc_fb_parse@@Base+0x11b4>
   268e4:	ldr	fp, [r4, #40]	; 0x28
   268e8:	ldr	r3, [fp, #16]
   268ec:	cmp	r3, #9
   268f0:	beq	26910 <__flatcc_fb_parse@@Base+0x1d70>
   268f4:	ldr	r2, [pc, #-2980]	; 25d58 <__flatcc_fb_parse@@Base+0x11b8>
   268f8:	mov	r1, fp
   268fc:	mov	r0, r4
   26900:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   26904:	mov	r0, r4
   26908:	bl	2394c <__flatcc_fb_default_error_out@@Base+0x268>
   2690c:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26910:	ldr	r3, [r4, #108]	; 0x6c
   26914:	cmp	r3, #9
   26918:	bgt	26904 <__flatcc_fb_parse@@Base+0x1d64>
   2691c:	add	r8, r5, #20
   26920:	mov	r0, r4
   26924:	mov	r1, r8
   26928:	bl	239d4 <__flatcc_fb_default_error_out@@Base+0x2f0>
   2692c:	mov	r7, r0
   26930:	add	r1, sp, #20
   26934:	mov	r0, r4
   26938:	bl	23cac <__flatcc_error_report@@Base+0x1e0>
   2693c:	ldr	r3, [sp, #20]
   26940:	mov	r2, #12
   26944:	strh	r2, [r7, #24]
   26948:	mov	r2, #0
   2694c:	str	r3, [r7, #16]
   26950:	ldr	r1, [r3]
   26954:	cmp	r1, #0
   26958:	bne	26a04 <__flatcc_fb_parse@@Base+0x1e64>
   2695c:	cmp	r2, #0
   26960:	mov	r1, #58	; 0x3a
   26964:	mov	r0, r4
   26968:	strne	r3, [sp, #20]
   2696c:	ldr	r3, [r3, #4]
   26970:	str	r3, [r7, #4]
   26974:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   26978:	cmp	r0, #0
   2697c:	beq	269ac <__flatcc_fb_parse@@Base+0x1e0c>
   26980:	ldr	r3, [r7, #16]
   26984:	ldr	r3, [r3]
   26988:	cmp	r3, #0
   2698c:	beq	269a0 <__flatcc_fb_parse@@Base+0x1e00>
   26990:	mov	r2, sl
   26994:	mov	r1, fp
   26998:	mov	r0, r4
   2699c:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   269a0:	add	r1, r7, #16
   269a4:	mov	r0, r4
   269a8:	bl	24454 <__flatcc_error_report@@Base+0x988>
   269ac:	mov	r1, #61	; 0x3d
   269b0:	mov	r0, r4
   269b4:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   269b8:	cmp	r0, #0
   269bc:	beq	269d4 <__flatcc_fb_parse@@Base+0x1e34>
   269c0:	ldr	r3, [pc, #-3180]	; 25d5c <__flatcc_fb_parse@@Base+0x11bc>
   269c4:	mov	r2, #0
   269c8:	add	r1, r7, #48	; 0x30
   269cc:	mov	r0, r4
   269d0:	bl	23e94 <__flatcc_error_report@@Base+0x3c8>
   269d4:	mov	r1, #44	; 0x2c
   269d8:	mov	r0, r4
   269dc:	bl	23928 <__flatcc_fb_default_error_out@@Base+0x244>
   269e0:	cmp	r0, #0
   269e4:	beq	26a10 <__flatcc_fb_parse@@Base+0x1e70>
   269e8:	ldr	r3, [r4, #40]	; 0x28
   269ec:	ldr	r3, [r3, #16]
   269f0:	cmp	r3, #125	; 0x7d
   269f4:	beq	26a10 <__flatcc_fb_parse@@Base+0x1e70>
   269f8:	mov	r3, #0
   269fc:	str	r3, [r4, #36]	; 0x24
   26a00:	b	268e4 <__flatcc_fb_parse@@Base+0x1d44>
   26a04:	mov	r2, #1
   26a08:	mov	r3, r1
   26a0c:	b	26950 <__flatcc_fb_parse@@Base+0x1db0>
   26a10:	mov	r3, r9
   26a14:	ldr	r2, [pc, #-3260]	; 25d60 <__flatcc_fb_parse@@Base+0x11c0>
   26a18:	mov	r1, #125	; 0x7d
   26a1c:	mov	r0, r4
   26a20:	bl	24304 <__flatcc_error_report@@Base+0x838>
   26a24:	mov	r0, r8
   26a28:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   26a2c:	mov	r1, r8
   26a30:	mov	r0, r4
   26a34:	bl	239d4 <__flatcc_fb_default_error_out@@Base+0x2f0>
   26a38:	add	r3, r4, #68	; 0x44
   26a3c:	str	r3, [r0, #4]
   26a40:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26a44:	ldr	r2, [pc, #-3304]	; 25d64 <__flatcc_fb_parse@@Base+0x11c4>
   26a48:	mov	r0, r4
   26a4c:	bl	23c60 <__flatcc_error_report@@Base+0x194>
   26a50:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26a54:	mov	r3, #1
   26a58:	ldr	r2, [pc, #-3320]	; 25d68 <__flatcc_fb_parse@@Base+0x11c8>
   26a5c:	str	r3, [sp, #4]
   26a60:	ldr	r3, [pc, #-3324]	; 25d6c <__flatcc_fb_parse@@Base+0x11cc>
   26a64:	str	r3, [sp]
   26a68:	mov	r3, #0
   26a6c:	mov	r0, r4
   26a70:	bl	23acc <__flatcc_error_report@@Base>
   26a74:	b	265b0 <__flatcc_fb_parse@@Base+0x1a10>
   26a78:	mov	r3, #5
   26a7c:	ldr	r2, [pc, #-3348]	; 25d70 <__flatcc_fb_parse@@Base+0x11d0>
   26a80:	str	r3, [sp, #4]
   26a84:	ldr	r3, [pc, #-3352]	; 25d74 <__flatcc_fb_parse@@Base+0x11d4>
   26a88:	str	r3, [sp]
   26a8c:	mov	r3, #0
   26a90:	b	26a6c <__flatcc_fb_parse@@Base+0x1ecc>
   26a94:	ldr	r2, [r4, #356]	; 0x164
   26a98:	cmp	r2, #0
   26a9c:	bne	26ab0 <__flatcc_fb_parse@@Base+0x1f10>
   26aa0:	add	r0, r4, #392	; 0x188
   26aa4:	str	r3, [r4, #356]	; 0x164
   26aa8:	bl	236b8 <__flatcc_fb_read_file@@Base+0xf0>
   26aac:	b	265d8 <__flatcc_fb_parse@@Base+0x1a38>
   26ab0:	ldr	r1, [r2]
   26ab4:	str	r3, [r2]
   26ab8:	mov	r3, r2
   26abc:	mov	r2, r1
   26ac0:	b	26a98 <__flatcc_fb_parse@@Base+0x1ef8>
   26ac4:	cmp	r7, r6
   26ac8:	movne	r2, r6
   26acc:	bne	258d0 <__flatcc_fb_parse@@Base+0xd30>
   26ad0:	b	25934 <__flatcc_fb_parse@@Base+0xd94>
   26ad4:	cmp	sl, r7
   26ad8:	bne	24f00 <__flatcc_fb_parse@@Base+0x360>
   26adc:	mov	r5, r7
   26ae0:	b	24eac <__flatcc_fb_parse@@Base+0x30c>
   26ae4:	cmp	r6, r7
   26ae8:	bne	24e94 <__flatcc_fb_parse@@Base+0x2f4>
   26aec:	b	24eac <__flatcc_fb_parse@@Base+0x30c>
   26af0:	ldrb	r3, [r3]
   26af4:	udf	#0

00026af8 <__flatcc_fb_clear_parser@@Base>:
   26af8:	push	{r4, r5, r6, lr}
   26afc:	mov	r4, r0
   26b00:	ldr	r5, [r0, #392]	; 0x188
   26b04:	cmp	r5, #0
   26b08:	bne	26bc4 <__flatcc_fb_clear_parser@@Base+0xcc>
   26b0c:	add	r0, r4, #448	; 0x1c0
   26b10:	bl	230b4 <fb_schema_table_clear@@Base>
   26b14:	add	r0, r4, #432	; 0x1b0
   26b18:	bl	2d984 <fb_name_table_clear@@Base>
   26b1c:	add	r0, r4, #524	; 0x20c
   26b20:	bl	21f78 <ptr_set_clear@@Base>
   26b24:	ldr	r0, [r4, #112]	; 0x70
   26b28:	cmp	r0, #0
   26b2c:	beq	26b34 <__flatcc_fb_clear_parser@@Base+0x3c>
   26b30:	bl	13ef0 <free@plt>
   26b34:	ldr	r0, [r4, #20]
   26b38:	cmp	r0, #0
   26b3c:	beq	26b44 <__flatcc_fb_clear_parser@@Base+0x4c>
   26b40:	bl	13ef0 <free@plt>
   26b44:	ldr	r0, [r4, #512]	; 0x200
   26b48:	cmp	r0, #0
   26b4c:	beq	26b54 <__flatcc_fb_clear_parser@@Base+0x5c>
   26b50:	bl	13ef0 <free@plt>
   26b54:	ldr	r0, [r4, #516]	; 0x204
   26b58:	cmp	r0, #0
   26b5c:	beq	26b64 <__flatcc_fb_clear_parser@@Base+0x6c>
   26b60:	bl	13ef0 <free@plt>
   26b64:	ldr	r0, [r4, #520]	; 0x208
   26b68:	cmp	r0, #0
   26b6c:	beq	26b74 <__flatcc_fb_clear_parser@@Base+0x7c>
   26b70:	bl	13ef0 <free@plt>
   26b74:	ldr	r0, [r4, #548]	; 0x224
   26b78:	cmp	r0, #0
   26b7c:	beq	26b84 <__flatcc_fb_clear_parser@@Base+0x8c>
   26b80:	bl	13ef0 <free@plt>
   26b84:	add	r0, r4, #416	; 0x1a0
   26b88:	mov	r2, #0
   26b8c:	ldr	r1, [pc, #100]	; 26bf8 <__flatcc_fb_clear_parser@@Base+0x100>
   26b90:	bl	22b7c <fb_scope_table_destroy@@Base>
   26b94:	ldr	r0, [r4, #48]	; 0x30
   26b98:	cmp	r0, #0
   26b9c:	bne	26be8 <__flatcc_fb_clear_parser@@Base+0xf0>
   26ba0:	ldr	r0, [r4, #16]
   26ba4:	cmp	r0, #0
   26ba8:	beq	26bb0 <__flatcc_fb_clear_parser@@Base+0xb8>
   26bac:	bl	13ef0 <free@plt>
   26bb0:	mov	r0, r4
   26bb4:	mov	r2, #560	; 0x230
   26bb8:	pop	{r4, r5, r6, lr}
   26bbc:	mov	r1, #0
   26bc0:	b	13fc8 <memset@plt>
   26bc4:	ldrh	r3, [r5, #8]
   26bc8:	cmp	r3, #4
   26bcc:	bhi	26be0 <__flatcc_fb_clear_parser@@Base+0xe8>
   26bd0:	add	r0, r5, #56	; 0x38
   26bd4:	bl	22498 <fb_symbol_table_clear@@Base>
   26bd8:	add	r0, r5, #72	; 0x48
   26bdc:	bl	2df00 <fb_value_set_clear@@Base>
   26be0:	ldr	r5, [r5]
   26be4:	b	26b04 <__flatcc_fb_clear_parser@@Base+0xc>
   26be8:	ldr	r5, [r0]
   26bec:	bl	13ef0 <free@plt>
   26bf0:	mov	r0, r5
   26bf4:	b	26b98 <__flatcc_fb_clear_parser@@Base+0xa0>
   26bf8:	strdeq	r3, [r2], -ip
   26bfc:	mov	ip, #0
   26c00:	push	{r0, r1, r2, lr}
   26c04:	str	ip, [sp]
   26c08:	str	ip, [sp, #4]
   26c0c:	bl	23acc <__flatcc_error_report@@Base>
   26c10:	add	sp, sp, #12
   26c14:	pop	{pc}		; (ldr pc, [sp], #4)
   26c18:	mov	r3, #0
   26c1c:	b	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   26c20:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26c24:	mov	r5, r0
   26c28:	mov	r4, r1
   26c2c:	mov	r9, r2
   26c30:	mov	r1, #0
   26c34:	mov	r2, #48	; 0x30
   26c38:	mov	r0, r3
   26c3c:	ldr	sl, [pc, #328]	; 26d8c <__flatcc_fb_clear_parser@@Base+0x294>
   26c40:	mov	r7, #100	; 0x64
   26c44:	mov	r6, #0
   26c48:	mov	r8, r3
   26c4c:	ldr	fp, [pc, #316]	; 26d90 <__flatcc_fb_clear_parser@@Base+0x298>
   26c50:	bl	13fc8 <memset@plt>
   26c54:	cmp	r4, #0
   26c58:	cmpne	r7, #0
   26c5c:	bne	26c84 <__flatcc_fb_clear_parser@@Base+0x18c>
   26c60:	cmp	r4, #0
   26c64:	beq	26c78 <__flatcc_fb_clear_parser@@Base+0x180>
   26c68:	ldr	r2, [pc, #292]	; 26d94 <__flatcc_fb_clear_parser@@Base+0x29c>
   26c6c:	mov	r0, r5
   26c70:	ldr	r1, [r4, #4]
   26c74:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   26c78:	mov	r0, r6
   26c7c:	add	sp, sp, #4
   26c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26c84:	ldr	r3, [r4, #4]
   26c88:	ldr	r0, [r5, #412]	; 0x19c
   26c8c:	ldm	r3, {r1, r2}
   26c90:	add	r0, r0, #16
   26c94:	bl	2da20 <fb_name_table_find@@Base>
   26c98:	cmp	r0, #0
   26c9c:	ldreq	r2, [pc, #244]	; 26d98 <__flatcc_fb_clear_parser@@Base+0x2a0>
   26ca0:	beq	26d24 <__flatcc_fb_clear_parser@@Base+0x22c>
   26ca4:	ldr	r3, [r0, #24]
   26ca8:	cmp	r3, #0
   26cac:	beq	26d00 <__flatcc_fb_clear_parser@@Base+0x208>
   26cb0:	asr	r2, r9, r3
   26cb4:	tst	r2, #1
   26cb8:	ldreq	r2, [pc, #220]	; 26d9c <__flatcc_fb_clear_parser@@Base+0x2a4>
   26cbc:	beq	26d24 <__flatcc_fb_clear_parser@@Base+0x22c>
   26cc0:	mov	r2, #1
   26cc4:	orr	r6, r6, r2, lsl r3
   26cc8:	ldr	r2, [r8, r3, lsl #2]
   26ccc:	uxth	r6, r6
   26cd0:	cmp	r2, #0
   26cd4:	ldrne	r2, [pc, #196]	; 26da0 <__flatcc_fb_clear_parser@@Base+0x2a8>
   26cd8:	bne	26d24 <__flatcc_fb_clear_parser@@Base+0x22c>
   26cdc:	str	r4, [r8, r3, lsl #2]
   26ce0:	ldr	r2, [pc, #188]	; 26da4 <__flatcc_fb_clear_parser@@Base+0x2ac>
   26ce4:	ldr	r3, [r2, r3, lsl #2]
   26ce8:	cmp	r3, #0
   26cec:	bne	26d0c <__flatcc_fb_clear_parser@@Base+0x214>
   26cf0:	ldrh	r3, [r4, #16]
   26cf4:	cmp	r3, #0
   26cf8:	ldrne	r2, [pc, #168]	; 26da8 <__flatcc_fb_clear_parser@@Base+0x2b0>
   26cfc:	bne	26d24 <__flatcc_fb_clear_parser@@Base+0x22c>
   26d00:	sub	r7, r7, #1
   26d04:	ldr	r4, [r4]
   26d08:	b	26c54 <__flatcc_fb_clear_parser@@Base+0x15c>
   26d0c:	cmp	r3, #2
   26d10:	bne	26d34 <__flatcc_fb_clear_parser@@Base+0x23c>
   26d14:	ldrh	r3, [r4, #16]
   26d18:	cmp	r3, #2
   26d1c:	ldrne	r2, [pc, #136]	; 26dac <__flatcc_fb_clear_parser@@Base+0x2b4>
   26d20:	beq	26d00 <__flatcc_fb_clear_parser@@Base+0x208>
   26d24:	mov	r0, r5
   26d28:	ldr	r1, [r4, #4]
   26d2c:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   26d30:	b	26d00 <__flatcc_fb_clear_parser@@Base+0x208>
   26d34:	cmp	r3, #5
   26d38:	bne	26d50 <__flatcc_fb_clear_parser@@Base+0x258>
   26d3c:	ldrh	r3, [r4, #16]
   26d40:	cmp	r3, #5
   26d44:	ldrne	r2, [pc, #100]	; 26db0 <__flatcc_fb_clear_parser@@Base+0x2b8>
   26d48:	beq	26d00 <__flatcc_fb_clear_parser@@Base+0x208>
   26d4c:	b	26d24 <__flatcc_fb_clear_parser@@Base+0x22c>
   26d50:	cmp	r3, #4
   26d54:	bne	26d70 <__flatcc_fb_clear_parser@@Base+0x278>
   26d58:	ldrh	r3, [r4, #16]
   26d5c:	sub	r3, r3, #4
   26d60:	cmp	r3, #1
   26d64:	movhi	r2, fp
   26d68:	bls	26d00 <__flatcc_fb_clear_parser@@Base+0x208>
   26d6c:	b	26d24 <__flatcc_fb_clear_parser@@Base+0x22c>
   26d70:	cmp	r3, #6
   26d74:	bne	26d00 <__flatcc_fb_clear_parser@@Base+0x208>
   26d78:	ldrh	r3, [r4, #16]
   26d7c:	cmp	r3, #6
   26d80:	beq	26d00 <__flatcc_fb_clear_parser@@Base+0x208>
   26d84:	mov	r2, sl
   26d88:	b	26d24 <__flatcc_fb_clear_parser@@Base+0x22c>
   26d8c:	andeq	r7, r4, r4, ror r3
   26d90:	andeq	r7, r4, r1, asr r3
   26d94:	muleq	r4, lr, r3
   26d98:	andeq	r7, r4, sl, ror #4
   26d9c:	andeq	r7, r4, r9, lsl #5
   26da0:			; <UNDEFINED> instruction: 0x000472b6
   26da4:	andeq	r7, r4, r8, lsr r1
   26da8:	ldrdeq	r7, [r4], -ip
   26dac:	andeq	r7, r4, r4, lsl #6
   26db0:	andeq	r7, r4, r5, lsr #6
   26db4:	cmp	r0, #0
   26db8:	beq	26dd0 <__flatcc_fb_clear_parser@@Base+0x2d8>
   26dbc:	ldr	r0, [r0, #60]	; 0x3c
   26dc0:	cmp	r0, #0
   26dc4:	beq	26dd0 <__flatcc_fb_clear_parser@@Base+0x2d8>
   26dc8:	rsb	r2, r2, #0
   26dcc:	b	22c14 <fb_scope_table_find@@Base>
   26dd0:	mov	r0, #0
   26dd4:	bx	lr
   26dd8:	push	{r4, lr}
   26ddc:	mov	r2, #108	; 0x6c
   26de0:	ldr	r3, [pc, #8]	; 26df0 <__flatcc_fb_clear_parser@@Base+0x2f8>
   26de4:	ldr	r1, [pc, #8]	; 26df4 <__flatcc_fb_clear_parser@@Base+0x2fc>
   26de8:	ldr	r0, [pc, #8]	; 26df8 <__flatcc_fb_clear_parser@@Base+0x300>
   26dec:	bl	14070 <__assert_fail@plt>
   26df0:	andeq	r7, r4, r8, ror #2
   26df4:			; <UNDEFINED> instruction: 0x000473b2
   26df8:	strdeq	r7, [r4], -fp
   26dfc:	push	{r4, r5, r6, lr}
   26e00:	subs	r6, r1, #0
   26e04:	movne	r5, r0
   26e08:	movne	r4, #0
   26e0c:	ldrne	r0, [r6]
   26e10:	bne	26e24 <__flatcc_fb_clear_parser@@Base+0x32c>
   26e14:	mov	r0, r6
   26e18:	pop	{r4, r5, r6, pc}
   26e1c:	ldr	r0, [r0]
   26e20:	add	r4, r4, #1
   26e24:	cmp	r0, #0
   26e28:	bne	26e1c <__flatcc_fb_clear_parser@@Base+0x324>
   26e2c:	cmp	r4, #0
   26e30:	addne	r5, r5, #352	; 0x160
   26e34:	popeq	{r4, r5, r6, pc}
   26e38:	subs	r4, r4, #1
   26e3c:	mov	r2, r4
   26e40:	bne	26e54 <__flatcc_fb_clear_parser@@Base+0x35c>
   26e44:	mov	r1, r4
   26e48:	mov	r0, r5
   26e4c:	pop	{r4, r5, r6, lr}
   26e50:	b	26db4 <__flatcc_fb_clear_parser@@Base+0x2bc>
   26e54:	mov	r0, r5
   26e58:	ldr	r1, [r6]
   26e5c:	bl	26db4 <__flatcc_fb_clear_parser@@Base+0x2bc>
   26e60:	cmp	r0, #0
   26e64:	beq	26e38 <__flatcc_fb_clear_parser@@Base+0x340>
   26e68:	pop	{r4, r5, r6, pc}
   26e6c:	push	{r4, lr}
   26e70:	add	r0, r0, #172	; 0xac
   26e74:	mov	r4, r1
   26e78:	ldr	r1, [r1, #16]
   26e7c:	bl	2200c <ptr_set_find_item@@Base>
   26e80:	cmp	r0, #0
   26e84:	movne	r0, r4
   26e88:	moveq	r0, #0
   26e8c:	pop	{r4, pc}
   26e90:	push	{r4, r5, r6, r7, r8, lr}
   26e94:	mov	r6, r0
   26e98:	mov	r7, r1
   26e9c:	mov	r0, r2
   26ea0:	mov	r1, r2
   26ea4:	mov	r2, #0
   26ea8:	mov	r5, r2
   26eac:	mov	ip, r2
   26eb0:	cmp	r0, #0
   26eb4:	bne	26edc <__flatcc_fb_clear_parser@@Base+0x3e4>
   26eb8:	cmp	r3, #0
   26ebc:	subne	r2, r2, #1
   26ec0:	strne	r5, [r3]
   26ec4:	movne	r5, ip
   26ec8:	cmp	r5, #0
   26ecc:	bne	26ef0 <__flatcc_fb_clear_parser@@Base+0x3f8>
   26ed0:	mov	r4, #0
   26ed4:	mov	r0, r4
   26ed8:	pop	{r4, r5, r6, r7, r8, pc}
   26edc:	mov	ip, r5
   26ee0:	add	r2, r2, #1
   26ee4:	mov	r5, r0
   26ee8:	ldr	r0, [r0]
   26eec:	b	26eb0 <__flatcc_fb_clear_parser@@Base+0x3b8>
   26ef0:	sub	r3, r2, #1
   26ef4:	cmp	r7, #0
   26ef8:	clz	r3, r3
   26efc:	lsr	r3, r3, #5
   26f00:	moveq	r3, #0
   26f04:	cmp	r3, #0
   26f08:	beq	26f64 <__flatcc_fb_clear_parser@@Base+0x46c>
   26f0c:	add	r8, r6, #352	; 0x160
   26f10:	ldr	r3, [r5, #4]
   26f14:	add	r0, r7, #4
   26f18:	ldm	r3, {r1, r2}
   26f1c:	bl	22534 <fb_symbol_table_find@@Base>
   26f20:	subs	r4, r0, #0
   26f24:	bne	26f40 <__flatcc_fb_clear_parser@@Base+0x448>
   26f28:	mov	r1, r7
   26f2c:	mov	r0, r6
   26f30:	bl	26dfc <__flatcc_fb_clear_parser@@Base+0x304>
   26f34:	subs	r7, r0, #0
   26f38:	bne	26f10 <__flatcc_fb_clear_parser@@Base+0x418>
   26f3c:	b	26ed0 <__flatcc_fb_clear_parser@@Base+0x3d8>
   26f40:	ldrh	r3, [r4, #8]
   26f44:	cmp	r3, #4
   26f48:	bhi	26f28 <__flatcc_fb_clear_parser@@Base+0x430>
   26f4c:	mov	r1, r4
   26f50:	mov	r0, r8
   26f54:	bl	26e6c <__flatcc_fb_clear_parser@@Base+0x374>
   26f58:	cmp	r0, #0
   26f5c:	beq	26f28 <__flatcc_fb_clear_parser@@Base+0x430>
   26f60:	b	26ed4 <__flatcc_fb_clear_parser@@Base+0x3dc>
   26f64:	cmp	r2, #1
   26f68:	add	r6, r6, #352	; 0x160
   26f6c:	moveq	r1, #0
   26f70:	sub	r2, r2, #1
   26f74:	mov	r0, r6
   26f78:	bl	26db4 <__flatcc_fb_clear_parser@@Base+0x2bc>
   26f7c:	cmp	r0, #0
   26f80:	beq	26ed0 <__flatcc_fb_clear_parser@@Base+0x3d8>
   26f84:	ldr	r3, [r5, #4]
   26f88:	add	r0, r0, #4
   26f8c:	ldm	r3, {r1, r2}
   26f90:	bl	22534 <fb_symbol_table_find@@Base>
   26f94:	subs	r4, r0, #0
   26f98:	beq	26ed0 <__flatcc_fb_clear_parser@@Base+0x3d8>
   26f9c:	ldrh	r3, [r4, #8]
   26fa0:	cmp	r3, #4
   26fa4:	bhi	26ed0 <__flatcc_fb_clear_parser@@Base+0x3d8>
   26fa8:	mov	r1, r4
   26fac:	mov	r0, r6
   26fb0:	bl	26e6c <__flatcc_fb_clear_parser@@Base+0x374>
   26fb4:	cmp	r0, #0
   26fb8:	bne	26ed4 <__flatcc_fb_clear_parser@@Base+0x3dc>
   26fbc:	b	26ed0 <__flatcc_fb_clear_parser@@Base+0x3d8>
   26fc0:	push	{r0, r1, r4, r5, r6, lr}
   26fc4:	mov	r5, r2
   26fc8:	mov	r2, #0
   26fcc:	subs	r6, r3, #0
   26fd0:	str	r2, [sp, #4]
   26fd4:	ldr	r4, [sp, #24]
   26fd8:	bne	26ff0 <__flatcc_fb_clear_parser@@Base+0x4f8>
   26fdc:	ldr	r3, [pc, #176]	; 27094 <__flatcc_fb_clear_parser@@Base+0x59c>
   26fe0:	movw	r2, #347	; 0x15b
   26fe4:	ldr	r1, [pc, #172]	; 27098 <__flatcc_fb_clear_parser@@Base+0x5a0>
   26fe8:	ldr	r0, [pc, #172]	; 2709c <__flatcc_fb_clear_parser@@Base+0x5a4>
   26fec:	bl	14070 <__assert_fail@plt>
   26ff0:	cmp	r5, #0
   26ff4:	beq	27018 <__flatcc_fb_clear_parser@@Base+0x520>
   26ff8:	ldrh	r3, [r5, #8]
   26ffc:	cmp	r3, #3
   27000:	beq	27018 <__flatcc_fb_clear_parser@@Base+0x520>
   27004:	ldr	r3, [pc, #136]	; 27094 <__flatcc_fb_clear_parser@@Base+0x59c>
   27008:	mov	r2, #348	; 0x15c
   2700c:	ldr	r1, [pc, #132]	; 27098 <__flatcc_fb_clear_parser@@Base+0x5a0>
   27010:	ldr	r0, [pc, #136]	; 270a0 <__flatcc_fb_clear_parser@@Base+0x5a8>
   27014:	b	26fec <__flatcc_fb_clear_parser@@Base+0x4f4>
   27018:	add	r3, sp, #4
   2701c:	mov	r2, r6
   27020:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   27024:	cmp	r0, #0
   27028:	beq	27038 <__flatcc_fb_clear_parser@@Base+0x540>
   2702c:	ldrh	r3, [r0, #8]
   27030:	cmp	r3, #3
   27034:	beq	27064 <__flatcc_fb_clear_parser@@Base+0x56c>
   27038:	ldr	r2, [r6]
   2703c:	clz	r3, r5
   27040:	lsr	r3, r3, #5
   27044:	cmp	r2, #0
   27048:	movne	r3, #1
   2704c:	cmp	r3, #0
   27050:	moveq	r0, r5
   27054:	beq	27064 <__flatcc_fb_clear_parser@@Base+0x56c>
   27058:	mvn	r0, #0
   2705c:	add	sp, sp, #8
   27060:	pop	{r4, r5, r6, pc}
   27064:	ldr	r3, [sp, #4]
   27068:	add	r0, r0, #56	; 0x38
   2706c:	ldr	r3, [r3, #4]
   27070:	ldm	r3, {r1, r2}
   27074:	bl	22534 <fb_symbol_table_find@@Base>
   27078:	cmp	r0, #0
   2707c:	beq	27058 <__flatcc_fb_clear_parser@@Base+0x560>
   27080:	add	r0, r0, #48	; 0x30
   27084:	ldm	r0, {r0, r1, r2, r3}
   27088:	stm	r4, {r0, r1, r2, r3}
   2708c:	mov	r0, #0
   27090:	b	2705c <__flatcc_fb_clear_parser@@Base+0x564>
   27094:	andeq	r7, r4, r1, ror r1
   27098:			; <UNDEFINED> instruction: 0x000473b2
   2709c:	andeq	r7, r4, r1, lsl r4
   270a0:	andeq	r7, r4, r5, lsl r4
   270a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   270a8:	mov	r5, r0
   270ac:	sub	sp, sp, #92	; 0x5c
   270b0:	mov	r6, r1
   270b4:	ldrh	r8, [r1, #8]
   270b8:	cmp	r8, #4
   270bc:	beq	271c8 <__flatcc_fb_clear_parser@@Base+0x6d0>
   270c0:	cmp	r8, #3
   270c4:	beq	270dc <__flatcc_fb_clear_parser@@Base+0x5e4>
   270c8:	ldr	r3, [pc, #1384]	; 27638 <__flatcc_fb_clear_parser@@Base+0xb40>
   270cc:	movw	r2, #1229	; 0x4cd
   270d0:	ldr	r1, [pc, #1380]	; 2763c <__flatcc_fb_clear_parser@@Base+0xb44>
   270d4:	ldr	r0, [pc, #1380]	; 27640 <__flatcc_fb_clear_parser@@Base+0xb48>
   270d8:	bl	14070 <__assert_fail@plt>
   270dc:	ldrh	r3, [r1, #48]	; 0x30
   270e0:	cmp	r3, #0
   270e4:	bne	27104 <__flatcc_fb_clear_parser@@Base+0x60c>
   270e8:	ldr	r2, [pc, #1364]	; 27644 <__flatcc_fb_clear_parser@@Base+0xb4c>
   270ec:	mov	r3, #1
   270f0:	strh	r3, [r1, #48]	; 0x30
   270f4:	ldr	r1, [r6, #4]
   270f8:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   270fc:	mvn	r0, #0
   27100:	b	271b8 <__flatcc_fb_clear_parser@@Base+0x6c0>
   27104:	cmp	r3, #8
   27108:	bne	271c0 <__flatcc_fb_clear_parser@@Base+0x6c8>
   2710c:	ldr	r3, [r1, #40]	; 0x28
   27110:	ldr	r2, [pc, #1328]	; 27648 <__flatcc_fb_clear_parser@@Base+0xb50>
   27114:	ldr	r3, [r3, #16]
   27118:	add	r3, r3, #996	; 0x3e4
   2711c:	add	r3, r3, #3
   27120:	cmp	r3, #27
   27124:	addls	r3, r2, r3
   27128:	movhi	r3, #0
   2712c:	ldrbls	r3, [r3, #87]	; 0x57
   27130:	add	r2, r2, r3, lsl #2
   27134:	str	r3, [r1, #40]	; 0x28
   27138:	ldr	r3, [r2, #116]	; 0x74
   2713c:	mov	r2, #0
   27140:	str	r3, [r1, #112]	; 0x70
   27144:	str	r2, [r1, #116]	; 0x74
   27148:	mov	r2, #32
   2714c:	mov	r0, r5
   27150:	strh	r3, [r6, #104]	; 0x68
   27154:	add	r3, sp, #40	; 0x28
   27158:	ldr	r1, [r6, #28]
   2715c:	add	r7, sp, #8
   27160:	bl	26c20 <__flatcc_fb_clear_parser@@Base+0x128>
   27164:	ands	r9, r0, #32
   27168:	strh	r0, [r6, #92]	; 0x5c
   2716c:	movne	r2, #0
   27170:	movne	r3, #0
   27174:	movne	r9, #1
   27178:	strdne	r2, [sp, #8]
   2717c:	ldr	r2, [r6, #40]	; 0x28
   27180:	cmp	r2, #5
   27184:	bne	271f8 <__flatcc_fb_clear_parser@@Base+0x700>
   27188:	mov	r3, #0
   2718c:	strb	r3, [sp, #8]
   27190:	mov	r3, #6
   27194:	strh	r3, [sp, #16]
   27198:	ldm	r7, {r0, r1, r2, r3}
   2719c:	add	ip, sp, #24
   271a0:	mov	fp, #1
   271a4:	ldr	r4, [r6, #20]
   271a8:	stm	ip, {r0, r1, r2, r3}
   271ac:	cmp	r4, #0
   271b0:	bne	27234 <__flatcc_fb_clear_parser@@Base+0x73c>
   271b4:	mov	r0, r4
   271b8:	add	sp, sp, #92	; 0x5c
   271bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   271c0:	ldr	r2, [pc, #1156]	; 2764c <__flatcc_fb_clear_parser@@Base+0xb54>
   271c4:	b	270f4 <__flatcc_fb_clear_parser@@Base+0x5fc>
   271c8:	ldrh	r3, [r1, #48]	; 0x30
   271cc:	cmp	r3, #0
   271d0:	ldrne	r2, [pc, #1144]	; 27650 <__flatcc_fb_clear_parser@@Base+0xb58>
   271d4:	bne	270f4 <__flatcc_fb_clear_parser@@Base+0x5fc>
   271d8:	mov	r3, #8
   271dc:	mov	r2, #1
   271e0:	str	r8, [r1, #40]	; 0x28
   271e4:	strh	r3, [r1, #48]	; 0x30
   271e8:	mov	r3, #0
   271ec:	strd	r2, [r1, #112]	; 0x70
   271f0:	mov	r3, #1
   271f4:	b	27148 <__flatcc_fb_clear_parser@@Base+0x650>
   271f8:	mov	r0, #0
   271fc:	mov	r1, #0
   27200:	mov	r3, #4
   27204:	strd	r0, [sp, #8]
   27208:	mov	r1, r6
   2720c:	mov	r0, r5
   27210:	strh	r3, [sp, #16]
   27214:	mov	r3, r7
   27218:	bl	29230 <__flatcc_fb_coerce_scalar_type@@Base>
   2721c:	cmp	r0, #0
   27220:	ldrne	r2, [pc, #1068]	; 27654 <__flatcc_fb_clear_parser@@Base+0xb5c>
   27224:	movne	r1, #0
   27228:	beq	27198 <__flatcc_fb_clear_parser@@Base+0x6a0>
   2722c:	mov	r0, r5
   27230:	b	270f8 <__flatcc_fb_clear_parser@@Base+0x600>
   27234:	mov	r2, #1
   27238:	mov	r1, r4
   2723c:	add	r0, r6, #56	; 0x38
   27240:	bl	22514 <fb_symbol_table_insert_item@@Base>
   27244:	cmp	r0, #0
   27248:	beq	27284 <__flatcc_fb_clear_parser@@Base+0x78c>
   2724c:	ldr	r3, [r0, #4]
   27250:	add	r2, r5, #68	; 0x44
   27254:	ldr	r1, [r4, #4]
   27258:	cmp	r3, r2
   2725c:	ldreq	r2, [pc, #1012]	; 27658 <__flatcc_fb_clear_parser@@Base+0xb60>
   27260:	beq	27390 <__flatcc_fb_clear_parser@@Base+0x898>
   27264:	ldr	r2, [pc, #1008]	; 2765c <__flatcc_fb_clear_parser@@Base+0xb64>
   27268:	mov	r0, r5
   2726c:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   27270:	mov	r3, #1
   27274:	strh	r3, [r4, #24]
   27278:	mov	fp, #0
   2727c:	ldr	r4, [r4]
   27280:	b	271ac <__flatcc_fb_clear_parser@@Base+0x6b4>
   27284:	ldrh	r3, [r4, #8]
   27288:	cmp	r3, #5
   2728c:	beq	2729c <__flatcc_fb_clear_parser@@Base+0x7a4>
   27290:	ldr	r2, [pc, #968]	; 27660 <__flatcc_fb_clear_parser@@Base+0xb68>
   27294:	ldr	r1, [r4, #4]
   27298:	b	2722c <__flatcc_fb_clear_parser@@Base+0x734>
   2729c:	ldr	r3, [r4, #64]	; 0x40
   272a0:	cmp	r3, #0
   272a4:	beq	272bc <__flatcc_fb_clear_parser@@Base+0x7c4>
   272a8:	ldr	r3, [pc, #904]	; 27638 <__flatcc_fb_clear_parser@@Base+0xb40>
   272ac:	movw	r2, #1315	; 0x523
   272b0:	ldr	r1, [pc, #900]	; 2763c <__flatcc_fb_clear_parser@@Base+0xb44>
   272b4:	ldr	r0, [pc, #936]	; 27664 <__flatcc_fb_clear_parser@@Base+0xb6c>
   272b8:	b	270d8 <__flatcc_fb_clear_parser@@Base+0x5e0>
   272bc:	cmp	r8, #4
   272c0:	bne	272f0 <__flatcc_fb_clear_parser@@Base+0x7f8>
   272c4:	ldr	r1, [r4, #4]
   272c8:	add	r2, r5, #68	; 0x44
   272cc:	cmp	r1, r2
   272d0:	strheq	r3, [r4, #24]
   272d4:	beq	272f0 <__flatcc_fb_clear_parser@@Base+0x7f8>
   272d8:	ldrh	r2, [r4, #24]
   272dc:	cmp	r2, #10
   272e0:	bne	2737c <__flatcc_fb_clear_parser@@Base+0x884>
   272e4:	mov	r2, #0
   272e8:	mov	r3, #0
   272ec:	strd	r2, [r4, #88]	; 0x58
   272f0:	ldrh	r3, [r4, #56]	; 0x38
   272f4:	eor	fp, fp, #1
   272f8:	cmp	r3, #0
   272fc:	moveq	r3, fp
   27300:	movne	r3, #0
   27304:	cmp	r3, #0
   27308:	beq	27358 <__flatcc_fb_clear_parser@@Base+0x860>
   2730c:	ldrh	r3, [sp, #16]
   27310:	cmp	r3, #5
   27314:	bne	273f4 <__flatcc_fb_clear_parser@@Base+0x8fc>
   27318:	ldr	r3, [r6, #40]	; 0x28
   2731c:	cmp	r3, #6
   27320:	bne	27340 <__flatcc_fb_clear_parser@@Base+0x848>
   27324:	ldrd	r2, [sp, #8]
   27328:	mvn	r1, #0
   2732c:	mvn	r0, #0
   27330:	cmp	r3, r1
   27334:	cmpeq	r2, r0
   27338:	ldreq	r2, [pc, #808]	; 27668 <__flatcc_fb_clear_parser@@Base+0xb70>
   2733c:	beq	27424 <__flatcc_fb_clear_parser@@Base+0x92c>
   27340:	ldr	r3, [sp, #8]
   27344:	ldr	r2, [sp, #12]
   27348:	adds	r3, r3, #1
   2734c:	adc	r2, r2, #0
   27350:	str	r3, [sp, #8]
   27354:	str	r2, [sp, #12]
   27358:	cmp	r9, #0
   2735c:	ldrh	r3, [r4, #56]	; 0x38
   27360:	beq	27558 <__flatcc_fb_clear_parser@@Base+0xa60>
   27364:	cmp	r3, #0
   27368:	beq	27470 <__flatcc_fb_clear_parser@@Base+0x978>
   2736c:	cmp	r3, #5
   27370:	beq	27464 <__flatcc_fb_clear_parser@@Base+0x96c>
   27374:	ldr	r2, [pc, #752]	; 2766c <__flatcc_fb_clear_parser@@Base+0xb74>
   27378:	b	27294 <__flatcc_fb_clear_parser@@Base+0x79c>
   2737c:	cmp	r2, #12
   27380:	beq	2739c <__flatcc_fb_clear_parser@@Base+0x8a4>
   27384:	cmp	r2, #1
   27388:	beq	27278 <__flatcc_fb_clear_parser@@Base+0x780>
   2738c:	ldr	r2, [pc, #732]	; 27670 <__flatcc_fb_clear_parser@@Base+0xb78>
   27390:	mov	r0, r5
   27394:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27398:	b	27270 <__flatcc_fb_clear_parser@@Base+0x778>
   2739c:	mov	r0, r5
   273a0:	ldr	r1, [r6, #12]
   273a4:	ldr	r2, [r4, #16]
   273a8:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   273ac:	cmp	r0, #0
   273b0:	bne	273cc <__flatcc_fb_clear_parser@@Base+0x8d4>
   273b4:	mov	r3, r4
   273b8:	ldr	r2, [pc, #692]	; 27674 <__flatcc_fb_clear_parser@@Base+0xb7c>
   273bc:	mov	r0, r5
   273c0:	ldr	r1, [r4, #16]
   273c4:	bl	248d0 <error_ref_sym@@Base>
   273c8:	b	27270 <__flatcc_fb_clear_parser@@Base+0x778>
   273cc:	ldrh	r3, [r0, #8]
   273d0:	cmp	r3, #1
   273d4:	movls	r3, #14
   273d8:	strls	r0, [r4, #16]
   273dc:	strhls	r3, [r4, #24]
   273e0:	bls	272e4 <__flatcc_fb_clear_parser@@Base+0x7ec>
   273e4:	ldr	r2, [pc, #652]	; 27678 <__flatcc_fb_clear_parser@@Base+0xb80>
   273e8:	ldr	r3, [r0, #4]
   273ec:	ldr	r1, [r4, #4]
   273f0:	b	27268 <__flatcc_fb_clear_parser@@Base+0x770>
   273f4:	cmp	r3, #4
   273f8:	bne	27434 <__flatcc_fb_clear_parser@@Base+0x93c>
   273fc:	ldr	r3, [r6, #40]	; 0x28
   27400:	cmp	r3, #6
   27404:	bne	27340 <__flatcc_fb_clear_parser@@Base+0x848>
   27408:	ldrd	r2, [sp, #8]
   2740c:	mvn	r1, #-2147483648	; 0x80000000
   27410:	mvn	r0, #0
   27414:	cmp	r3, r1
   27418:	cmpeq	r2, r0
   2741c:	bne	27340 <__flatcc_fb_clear_parser@@Base+0x848>
   27420:	ldr	r2, [pc, #596]	; 2767c <__flatcc_fb_clear_parser@@Base+0xb84>
   27424:	mov	r0, r5
   27428:	ldr	r1, [r4, #4]
   2742c:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27430:	b	27340 <__flatcc_fb_clear_parser@@Base+0x848>
   27434:	cmp	r3, #6
   27438:	bne	27358 <__flatcc_fb_clear_parser@@Base+0x860>
   2743c:	ldrb	r3, [sp, #8]
   27440:	cmp	r3, #1
   27444:	bne	27458 <__flatcc_fb_clear_parser@@Base+0x960>
   27448:	ldr	r2, [pc, #560]	; 27680 <__flatcc_fb_clear_parser@@Base+0xb88>
   2744c:	mov	r0, r5
   27450:	ldr	r1, [r4, #4]
   27454:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27458:	mov	r3, #1
   2745c:	strb	r3, [sp, #8]
   27460:	b	27358 <__flatcc_fb_clear_parser@@Base+0x860>
   27464:	add	r3, r4, #48	; 0x30
   27468:	ldm	r3, {r0, r1, r2, r3}
   2746c:	stm	r7, {r0, r1, r2, r3}
   27470:	ldrd	r2, [sp, #8]
   27474:	ldr	ip, [r6, #40]	; 0x28
   27478:	strd	r2, [sp]
   2747c:	ldr	r3, [pc, #452]	; 27648 <__flatcc_fb_clear_parser@@Base+0xb50>
   27480:	add	r1, r3, ip, lsl #2
   27484:	ldrd	r2, [sp]
   27488:	ldr	r0, [r1, #116]	; 0x74
   2748c:	mov	r1, #0
   27490:	cmp	r3, r1
   27494:	lsl	r0, r0, #3
   27498:	cmpeq	r2, r0
   2749c:	bcc	274a8 <__flatcc_fb_clear_parser@@Base+0x9b0>
   274a0:	ldr	r2, [pc, #476]	; 27684 <__flatcc_fb_clear_parser@@Base+0xb8c>
   274a4:	b	27294 <__flatcc_fb_clear_parser@@Base+0x79c>
   274a8:	ldr	r3, [sp]
   274ac:	mov	r1, #1
   274b0:	ldr	r2, [sp]
   274b4:	sub	r3, r3, #32
   274b8:	lsl	r3, r1, r3
   274bc:	rsb	r0, r2, #32
   274c0:	lsl	r2, r1, r2
   274c4:	orr	r3, r3, r1, lsr r0
   274c8:	mov	r1, r4
   274cc:	mov	r0, r5
   274d0:	strd	r2, [r4, #48]	; 0x30
   274d4:	mov	r3, #5
   274d8:	mov	r2, ip
   274dc:	strh	r3, [r4, #56]	; 0x38
   274e0:	add	r3, r4, #48	; 0x30
   274e4:	bl	29230 <__flatcc_fb_coerce_scalar_type@@Base>
   274e8:	cmp	r0, #0
   274ec:	bne	274a0 <__flatcc_fb_clear_parser@@Base+0x9a8>
   274f0:	cmp	fp, #0
   274f4:	beq	275b4 <__flatcc_fb_clear_parser@@Base+0xabc>
   274f8:	ldr	r3, [r5, #180]	; 0xb4
   274fc:	cmp	r3, #0
   27500:	beq	275b4 <__flatcc_fb_clear_parser@@Base+0xabc>
   27504:	ldrh	r3, [sp, #16]
   27508:	cmp	r3, #5
   2750c:	bne	27598 <__flatcc_fb_clear_parser@@Base+0xaa0>
   27510:	ldrd	r0, [sp, #8]
   27514:	ldrd	r2, [sp, #24]
   27518:	cmp	r1, r3
   2751c:	cmpeq	r0, r2
   27520:	bhi	275b4 <__flatcc_fb_clear_parser@@Base+0xabc>
   27524:	cmp	r8, #4
   27528:	ldr	r1, [r4, #4]
   2752c:	bne	27540 <__flatcc_fb_clear_parser@@Base+0xa48>
   27530:	ldrd	r2, [sp, #24]
   27534:	orrs	r3, r2, r3
   27538:	ldreq	r2, [pc, #328]	; 27688 <__flatcc_fb_clear_parser@@Base+0xb90>
   2753c:	beq	27544 <__flatcc_fb_clear_parser@@Base+0xa4c>
   27540:	ldr	r2, [pc, #324]	; 2768c <__flatcc_fb_clear_parser@@Base+0xb94>
   27544:	mov	r0, r5
   27548:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   2754c:	mov	r3, #1
   27550:	strh	r3, [r4, #56]	; 0x38
   27554:	b	270fc <__flatcc_fb_clear_parser@@Base+0x604>
   27558:	cmp	r3, #0
   2755c:	add	sl, r4, #48	; 0x30
   27560:	bne	27570 <__flatcc_fb_clear_parser@@Base+0xa78>
   27564:	ldm	r7, {r0, r1, r2, r3}
   27568:	stm	sl, {r0, r1, r2, r3}
   2756c:	b	274f0 <__flatcc_fb_clear_parser@@Base+0x9f8>
   27570:	ldm	sl, {r0, r1, r2, r3}
   27574:	stm	r7, {r0, r1, r2, r3}
   27578:	mov	r3, r7
   2757c:	mov	r1, r4
   27580:	mov	r0, r5
   27584:	ldr	r2, [r6, #40]	; 0x28
   27588:	bl	29230 <__flatcc_fb_coerce_scalar_type@@Base>
   2758c:	cmp	r0, #0
   27590:	beq	27564 <__flatcc_fb_clear_parser@@Base+0xa6c>
   27594:	b	270fc <__flatcc_fb_clear_parser@@Base+0x604>
   27598:	cmp	r3, #4
   2759c:	bne	275e8 <__flatcc_fb_clear_parser@@Base+0xaf0>
   275a0:	ldrd	r2, [sp, #8]
   275a4:	ldrd	r0, [sp, #24]
   275a8:	cmp	r0, r2
   275ac:	sbcs	r3, r1, r3
   275b0:	bge	27524 <__flatcc_fb_clear_parser@@Base+0xa2c>
   275b4:	ldm	r7, {r0, r1, r2, r3}
   275b8:	add	ip, sp, #24
   275bc:	stm	ip, {r0, r1, r2, r3}
   275c0:	mov	r2, #1
   275c4:	add	r1, r4, #48	; 0x30
   275c8:	add	r0, r6, #72	; 0x48
   275cc:	bl	2df84 <fb_value_set_insert_item@@Base>
   275d0:	cmp	r0, #0
   275d4:	beq	27618 <__flatcc_fb_clear_parser@@Base+0xb20>
   275d8:	cmp	r8, #4
   275dc:	bne	2760c <__flatcc_fb_clear_parser@@Base+0xb14>
   275e0:	ldr	r2, [pc, #168]	; 27690 <__flatcc_fb_clear_parser@@Base+0xb98>
   275e4:	b	27604 <__flatcc_fb_clear_parser@@Base+0xb0c>
   275e8:	cmp	r3, #6
   275ec:	bne	275b4 <__flatcc_fb_clear_parser@@Base+0xabc>
   275f0:	ldrb	r2, [sp, #8]
   275f4:	ldrb	r3, [sp, #24]
   275f8:	cmp	r2, r3
   275fc:	bhi	275b4 <__flatcc_fb_clear_parser@@Base+0xabc>
   27600:	ldr	r2, [pc, #140]	; 27694 <__flatcc_fb_clear_parser@@Base+0xb9c>
   27604:	ldr	r1, [r4, #4]
   27608:	b	27544 <__flatcc_fb_clear_parser@@Base+0xa4c>
   2760c:	ldrh	r3, [r4, #10]
   27610:	orr	r3, r3, #4
   27614:	strh	r3, [r4, #10]
   27618:	ldr	r3, [r4, #64]	; 0x40
   2761c:	cmp	r3, #0
   27620:	beq	27278 <__flatcc_fb_clear_parser@@Base+0x780>
   27624:	ldr	r2, [pc, #108]	; 27698 <__flatcc_fb_clear_parser@@Base+0xba0>
   27628:	mov	r0, r5
   2762c:	ldr	r1, [r4, #4]
   27630:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27634:	b	27278 <__flatcc_fb_clear_parser@@Base+0x780>
   27638:	andeq	r7, r4, r2, lsl #3
   2763c:			; <UNDEFINED> instruction: 0x000473b2
   27640:	andeq	r7, r4, r0, lsr #8
   27644:	andeq	r7, r4, lr, lsr r4
   27648:	andeq	r7, r4, r8, lsr r1
   2764c:	andeq	r7, r4, r4, asr r4
   27650:	andeq	r7, r4, r5, lsl #9
   27654:	andeq	r7, r4, r4, asr #9
   27658:	andeq	r7, r4, r2, lsl #10
   2765c:	andeq	r7, r4, pc, lsl r5
   27660:	andeq	r7, r4, sl, lsr r5
   27664:	andeq	r7, r4, r3, ror #10
   27668:	andeq	r7, r4, r4, lsr r6
   2766c:	muleq	r4, r9, r6
   27670:	andeq	r7, r4, r9, ror r5
   27674:	andeq	r7, r4, r0, asr #11
   27678:	andeq	r7, r4, lr, ror #11
   2767c:	andeq	r7, r4, r1, asr r6
   27680:	andeq	r7, r4, ip, ror #12
   27684:	ldrdeq	r7, [r4], -r4
   27688:	andeq	r7, r4, r7, lsl #14
   2768c:	andeq	r7, r4, r8, asr #14
   27690:	andeq	r7, r4, pc, lsr #15
   27694:	andeq	r7, r4, pc, ror #14
   27698:	strdeq	r7, [r4], -r9
   2769c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   276a0:	sub	sp, sp, #36	; 0x24
   276a4:	ldrh	r7, [r1, #8]
   276a8:	cmp	r7, #1
   276ac:	beq	276c4 <__flatcc_fb_clear_parser@@Base+0xbcc>
   276b0:	ldr	r3, [pc, #940]	; 27a64 <__flatcc_fb_clear_parser@@Base+0xf6c>
   276b4:	movw	r2, #502	; 0x1f6
   276b8:	ldr	r1, [pc, #936]	; 27a68 <__flatcc_fb_clear_parser@@Base+0xf70>
   276bc:	ldr	r0, [pc, #936]	; 27a6c <__flatcc_fb_clear_parser@@Base+0xf74>
   276c0:	bl	14070 <__assert_fail@plt>
   276c4:	ldrh	r3, [r1, #10]
   276c8:	mov	r6, r0
   276cc:	mov	r5, r1
   276d0:	ands	r0, r3, #1
   276d4:	beq	276ec <__flatcc_fb_clear_parser@@Base+0xbf4>
   276d8:	ldr	r3, [pc, #900]	; 27a64 <__flatcc_fb_clear_parser@@Base+0xf6c>
   276dc:	mov	r2, #504	; 0x1f8
   276e0:	ldr	r1, [pc, #896]	; 27a68 <__flatcc_fb_clear_parser@@Base+0xf70>
   276e4:	ldr	r0, [pc, #900]	; 27a70 <__flatcc_fb_clear_parser@@Base+0xf78>
   276e8:	b	276c0 <__flatcc_fb_clear_parser@@Base+0xbc8>
   276ec:	tst	r3, #2
   276f0:	bne	277f8 <__flatcc_fb_clear_parser@@Base+0xd00>
   276f4:	ldr	r2, [r1, #120]	; 0x78
   276f8:	cmp	r2, #0
   276fc:	beq	27714 <__flatcc_fb_clear_parser@@Base+0xc1c>
   27700:	ldr	r3, [pc, #860]	; 27a64 <__flatcc_fb_clear_parser@@Base+0xf6c>
   27704:	mov	r2, #508	; 0x1fc
   27708:	ldr	r1, [pc, #856]	; 27a68 <__flatcc_fb_clear_parser@@Base+0xf70>
   2770c:	ldr	r0, [pc, #864]	; 27a74 <__flatcc_fb_clear_parser@@Base+0xf7c>
   27710:	b	276c0 <__flatcc_fb_clear_parser@@Base+0xbc8>
   27714:	ldr	sl, [pc, #860]	; 27a78 <__flatcc_fb_clear_parser@@Base+0xf80>
   27718:	orr	r3, r3, #1
   2771c:	ldr	fp, [pc, #856]	; 27a7c <__flatcc_fb_clear_parser@@Base+0xf84>
   27720:	strh	r3, [r1, #10]
   27724:	ldr	r4, [r1, #20]
   27728:	cmp	r4, #0
   2772c:	bne	277b4 <__flatcc_fb_clear_parser@@Base+0xcbc>
   27730:	ldrh	r3, [r5, #104]	; 0x68
   27734:	cmp	r3, #0
   27738:	beq	27754 <__flatcc_fb_clear_parser@@Base+0xc5c>
   2773c:	cmp	r3, r7
   27740:	bcs	27758 <__flatcc_fb_clear_parser@@Base+0xc60>
   27744:	ldr	r2, [pc, #820]	; 27a80 <__flatcc_fb_clear_parser@@Base+0xf88>
   27748:	mov	r0, r6
   2774c:	ldr	r1, [r5, #4]
   27750:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27754:	strh	r7, [r5, #104]	; 0x68
   27758:	ldrh	r2, [r5, #104]	; 0x68
   2775c:	mov	r3, #0
   27760:	ldr	r1, [r5, #112]	; 0x70
   27764:	ldr	r0, [r5, #116]	; 0x74
   27768:	subs	ip, r2, #1
   2776c:	str	ip, [sp, #24]
   27770:	sbc	ip, r3, #0
   27774:	str	ip, [sp, #28]
   27778:	ldrd	r8, [sp, #24]
   2777c:	cmp	r9, #0
   27780:	cmpeq	r8, #255	; 0xff
   27784:	bhi	278a8 <__flatcc_fb_clear_parser@@Base+0xdb0>
   27788:	mov	r8, #1
   2778c:	mov	r9, #0
   27790:	cmp	r3, r9
   27794:	cmpeq	r2, r8
   27798:	beq	27a18 <__flatcc_fb_clear_parser@@Base+0xf20>
   2779c:	adds	r8, r8, r8
   277a0:	adc	r9, r9, r9
   277a4:	cmp	r3, r9
   277a8:	cmpeq	r2, r8
   277ac:	bcs	27790 <__flatcc_fb_clear_parser@@Base+0xc98>
   277b0:	b	278a8 <__flatcc_fb_clear_parser@@Base+0xdb0>
   277b4:	ldr	r3, [r6, #116]	; 0x74
   277b8:	cmp	r3, #99	; 0x63
   277bc:	ble	277d4 <__flatcc_fb_clear_parser@@Base+0xcdc>
   277c0:	ldr	r2, [pc, #700]	; 27a84 <__flatcc_fb_clear_parser@@Base+0xf8c>
   277c4:	mov	r1, #0
   277c8:	mov	r0, r6
   277cc:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   277d0:	b	277f4 <__flatcc_fb_clear_parser@@Base+0xcfc>
   277d4:	ldrh	r3, [r4, #24]
   277d8:	cmp	r3, #8
   277dc:	beq	27800 <__flatcc_fb_clear_parser@@Base+0xd08>
   277e0:	cmp	r3, #14
   277e4:	beq	278ac <__flatcc_fb_clear_parser@@Base+0xdb4>
   277e8:	cmp	r3, #1
   277ec:	ldrne	r2, [pc, #660]	; 27a88 <__flatcc_fb_clear_parser@@Base+0xf90>
   277f0:	bne	27960 <__flatcc_fb_clear_parser@@Base+0xe68>
   277f4:	mvn	r0, #0
   277f8:	add	sp, sp, #36	; 0x24
   277fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27800:	ldr	r3, [r4, #16]
   27804:	ldr	r2, [r3, #16]
   27808:	add	r2, r2, #996	; 0x3e4
   2780c:	add	r2, r2, #3
   27810:	cmp	r2, #27
   27814:	addls	r2, sl, r2
   27818:	movhi	r2, #0
   2781c:	ldrbls	r2, [r2, #87]	; 0x57
   27820:	str	r2, [r4, #16]
   27824:	add	r2, sl, r2, lsl #2
   27828:	ldr	r2, [r2, #116]	; 0x74
   2782c:	cmp	r2, #0
   27830:	bne	27848 <__flatcc_fb_clear_parser@@Base+0xd50>
   27834:	ldr	r2, [pc, #588]	; 27a88 <__flatcc_fb_clear_parser@@Base+0xf90>
   27838:	mov	r0, r6
   2783c:	ldr	r1, [r4, #4]
   27840:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   27844:	b	277f4 <__flatcc_fb_clear_parser@@Base+0xcfc>
   27848:	mov	r3, #0
   2784c:	strh	r2, [r4, #74]	; 0x4a
   27850:	strd	r2, [r4, #88]	; 0x58
   27854:	ldrh	r2, [r4, #74]	; 0x4a
   27858:	mov	r3, #0
   2785c:	ldrd	r8, [r5, #112]	; 0x70
   27860:	subs	r1, r2, #1
   27864:	str	r1, [sp, #16]
   27868:	sbc	r1, r3, #0
   2786c:	str	r1, [sp, #20]
   27870:	ldrd	r0, [sp, #16]
   27874:	cmp	r1, #0
   27878:	cmpeq	r0, #255	; 0xff
   2787c:	bhi	278a8 <__flatcc_fb_clear_parser@@Base+0xdb0>
   27880:	mov	r0, #1
   27884:	mov	r1, #0
   27888:	cmp	r3, r1
   2788c:	cmpeq	r2, r0
   27890:	beq	279a4 <__flatcc_fb_clear_parser@@Base+0xeac>
   27894:	adds	r0, r0, r0
   27898:	adc	r1, r1, r1
   2789c:	cmp	r3, r1
   278a0:	cmpeq	r2, r0
   278a4:	bcs	27888 <__flatcc_fb_clear_parser@@Base+0xd90>
   278a8:	bl	26dd8 <__flatcc_fb_clear_parser@@Base+0x2e0>
   278ac:	ldr	r8, [r4, #16]
   278b0:	ldrh	r3, [r8, #8]
   278b4:	cmp	r3, #3
   278b8:	bne	278d4 <__flatcc_fb_clear_parser@@Base+0xddc>
   278bc:	ldr	r3, [r8, #112]	; 0x70
   278c0:	ldr	r2, [r8, #116]	; 0x74
   278c4:	strh	r3, [r4, #74]	; 0x4a
   278c8:	str	r3, [r4, #88]	; 0x58
   278cc:	str	r2, [r4, #92]	; 0x5c
   278d0:	b	27854 <__flatcc_fb_clear_parser@@Base+0xd5c>
   278d4:	cmp	r3, #1
   278d8:	bne	2795c <__flatcc_fb_clear_parser@@Base+0xe64>
   278dc:	ldrh	r3, [r8, #10]
   278e0:	tst	r3, #1
   278e4:	ldrne	r2, [pc, #416]	; 27a8c <__flatcc_fb_clear_parser@@Base+0xf94>
   278e8:	ldrne	r3, [r8, #4]
   278ec:	bne	27838 <__flatcc_fb_clear_parser@@Base+0xd40>
   278f0:	tst	r3, #2
   278f4:	beq	2790c <__flatcc_fb_clear_parser@@Base+0xe14>
   278f8:	ldrh	r3, [r8, #104]	; 0x68
   278fc:	strh	r3, [r4, #74]	; 0x4a
   27900:	ldrd	r2, [r8, #112]	; 0x70
   27904:	strd	r2, [r4, #88]	; 0x58
   27908:	b	27854 <__flatcc_fb_clear_parser@@Base+0xd5c>
   2790c:	ldr	r3, [r6, #188]	; 0xbc
   27910:	cmp	r3, #0
   27914:	beq	2792c <__flatcc_fb_clear_parser@@Base+0xe34>
   27918:	mov	r2, fp
   2791c:	mov	r0, r6
   27920:	ldr	r1, [r4, #4]
   27924:	ldr	r3, [r8, #4]
   27928:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   2792c:	ldr	r3, [r6, #116]	; 0x74
   27930:	mov	r1, r8
   27934:	mov	r0, r6
   27938:	add	r3, r3, #1
   2793c:	str	r3, [r6, #116]	; 0x74
   27940:	bl	2769c <__flatcc_fb_clear_parser@@Base+0xba4>
   27944:	ldr	r3, [r6, #116]	; 0x74
   27948:	cmp	r0, #0
   2794c:	sub	r3, r3, #1
   27950:	str	r3, [r6, #116]	; 0x74
   27954:	beq	278f8 <__flatcc_fb_clear_parser@@Base+0xe00>
   27958:	b	277f8 <__flatcc_fb_clear_parser@@Base+0xd00>
   2795c:	ldr	r2, [pc, #300]	; 27a90 <__flatcc_fb_clear_parser@@Base+0xf98>
   27960:	ldr	r1, [r4, #4]
   27964:	b	277c8 <__flatcc_fb_clear_parser@@Base+0xcd0>
   27968:	mov	r3, #0
   2796c:	movw	r2, #65535	; 0xffff
   27970:	cmp	r9, r3
   27974:	cmpeq	r8, r2
   27978:	bls	2798c <__flatcc_fb_clear_parser@@Base+0xe94>
   2797c:	ldr	r2, [pc, #272]	; 27a94 <__flatcc_fb_clear_parser@@Base+0xf9c>
   27980:	mov	r0, r6
   27984:	ldr	r1, [r4, #4]
   27988:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   2798c:	ldrh	r3, [r4, #74]	; 0x4a
   27990:	ldr	r4, [r4]
   27994:	strd	r8, [r5, #112]	; 0x70
   27998:	cmp	r3, r7
   2799c:	movcs	r7, r3
   279a0:	b	27728 <__flatcc_fb_clear_parser@@Base+0xc30>
   279a4:	subs	r1, r8, #1
   279a8:	sbc	r0, r9, #0
   279ac:	adds	r1, r1, r2
   279b0:	adc	r0, r0, r3
   279b4:	rsbs	r2, r2, #0
   279b8:	rsc	r3, r3, #0
   279bc:	and	r1, r1, r2
   279c0:	and	r3, r0, r3
   279c4:	stm	sp, {r1, r3}
   279c8:	ldrd	r2, [sp]
   279cc:	cmp	r9, r3
   279d0:	strd	r2, [r4, #80]	; 0x50
   279d4:	cmpeq	r8, r2
   279d8:	bhi	27a10 <__flatcc_fb_clear_parser@@Base+0xf18>
   279dc:	mov	r2, #0
   279e0:	mov	r3, #0
   279e4:	ldrd	r0, [sp]
   279e8:	strd	r2, [sp, #8]
   279ec:	ldrd	r2, [r4, #88]	; 0x58
   279f0:	adds	r8, r2, r0
   279f4:	adcs	r9, r3, r1
   279f8:	movcs	r2, #1
   279fc:	movcs	r3, #0
   27a00:	strdcs	r2, [sp, #8]
   27a04:	ldrd	r2, [sp, #8]
   27a08:	orrs	r3, r2, r3
   27a0c:	beq	27968 <__flatcc_fb_clear_parser@@Base+0xe70>
   27a10:	ldr	r2, [pc, #128]	; 27a98 <__flatcc_fb_clear_parser@@Base+0xfa0>
   27a14:	b	27960 <__flatcc_fb_clear_parser@@Base+0xe68>
   27a18:	subs	r1, r1, #1
   27a1c:	sbc	r0, r0, #0
   27a20:	adds	r1, r1, r2
   27a24:	adc	r0, r0, r3
   27a28:	rsbs	r2, r2, #0
   27a2c:	rsc	r3, r3, #0
   27a30:	and	r1, r1, r2
   27a34:	and	r3, r3, r0
   27a38:	mov	r0, #0
   27a3c:	str	r1, [r5, #112]	; 0x70
   27a40:	str	r3, [r5, #116]	; 0x74
   27a44:	ldrh	r3, [r5, #10]
   27a48:	bic	r3, r3, #1
   27a4c:	orr	r3, r3, #2
   27a50:	strh	r3, [r5, #10]
   27a54:	ldr	r3, [r6, #396]	; 0x18c
   27a58:	str	r3, [r5, #120]	; 0x78
   27a5c:	str	r5, [r6, #396]	; 0x18c
   27a60:	b	277f8 <__flatcc_fb_clear_parser@@Base+0xd00>
   27a64:	ldrdeq	r7, [r4], -ip
   27a68:			; <UNDEFINED> instruction: 0x000473b2
   27a6c:	andeq	r0, r3, r9, lsl #20
   27a70:	andeq	r7, r4, ip, lsl r8
   27a74:	andeq	r7, r4, r3, asr #16
   27a78:	andeq	r7, r4, r8, lsr r1
   27a7c:	andeq	r7, r4, r7, asr #17
   27a80:	andeq	r7, r4, r9, ror r9
   27a84:	andeq	r7, r4, lr, asr #16
   27a88:	muleq	r4, r7, r8
   27a8c:	andeq	r7, r4, r7, lsr #17
   27a90:	andeq	r7, r4, lr, lsl #18
   27a94:	andeq	r7, r4, r6, asr #18
   27a98:	andeq	r7, r4, r1, lsr r9

00027a9c <__flatcc_fb_build_schema@@Base>:
   27a9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27aa0:	add	r3, r0, #352	; 0x160
   27aa4:	sub	sp, sp, #212	; 0xd4
   27aa8:	mov	r4, r0
   27aac:	mov	r1, r3
   27ab0:	add	r0, r0, #524	; 0x20c
   27ab4:	str	r3, [sp, #44]	; 0x2c
   27ab8:	bl	2200c <ptr_set_find_item@@Base>
   27abc:	cmp	r0, #0
   27ac0:	bne	27ad8 <__flatcc_fb_build_schema@@Base+0x3c>
   27ac4:	ldr	r3, [pc, #3992]	; 28a64 <__flatcc_fb_build_schema@@Base+0xfc8>
   27ac8:	movw	r2, #1558	; 0x616
   27acc:	ldr	r1, [pc, #3988]	; 28a68 <__flatcc_fb_build_schema@@Base+0xfcc>
   27ad0:	ldr	r0, [pc, #3988]	; 28a6c <__flatcc_fb_build_schema@@Base+0xfd0>
   27ad4:	bl	14070 <__assert_fail@plt>
   27ad8:	ldr	r6, [pc, #3984]	; 28a70 <__flatcc_fb_build_schema@@Base+0xfd4>
   27adc:	ldr	r7, [pc, #3984]	; 28a74 <__flatcc_fb_build_schema@@Base+0xfd8>
   27ae0:	ldr	r5, [r4, #392]	; 0x188
   27ae4:	cmp	r5, #0
   27ae8:	bne	27b44 <__flatcc_fb_build_schema@@Base+0xa8>
   27aec:	ldr	r5, [pc, #3972]	; 28a78 <__flatcc_fb_build_schema@@Base+0xfdc>
   27af0:	ldr	r7, [r4, #356]	; 0x164
   27af4:	cmp	r7, #0
   27af8:	bne	27c20 <__flatcc_fb_build_schema@@Base+0x184>
   27afc:	ldr	r5, [pc, #3960]	; 28a7c <__flatcc_fb_build_schema@@Base+0xfe0>
   27b00:	mov	r6, #2
   27b04:	ldr	r3, [r4, #44]	; 0x2c
   27b08:	ldr	r8, [r4, #52]	; 0x34
   27b0c:	add	r2, r8, #32
   27b10:	cmp	r2, r3
   27b14:	bls	27c84 <__flatcc_fb_build_schema@@Base+0x1e8>
   27b18:	mov	r1, #1
   27b1c:	mov	r0, #65536	; 0x10000
   27b20:	bl	13ec0 <calloc@plt>
   27b24:	cmp	r0, #0
   27b28:	bne	27c68 <__flatcc_fb_build_schema@@Base+0x1cc>
   27b2c:	ldr	r3, [pc, #3916]	; 28a80 <__flatcc_fb_build_schema@@Base+0xfe4>
   27b30:	ldr	r0, [pc, #3916]	; 28a84 <__flatcc_fb_build_schema@@Base+0xfe8>
   27b34:	ldr	r1, [r3]
   27b38:	bl	1404c <fputs@plt>
   27b3c:	mov	r0, #1
   27b40:	bl	13f98 <exit@plt>
   27b44:	ldrh	r3, [r5, #8]
   27b48:	cmp	r3, #4
   27b4c:	bhi	27bcc <__flatcc_fb_build_schema@@Base+0x130>
   27b50:	ldr	r0, [r5, #12]
   27b54:	cmp	r0, #0
   27b58:	beq	27c08 <__flatcc_fb_build_schema@@Base+0x16c>
   27b5c:	ldr	r3, [pc, #3856]	; 28a74 <__flatcc_fb_build_schema@@Base+0xfd8>
   27b60:	ldr	r2, [r0]
   27b64:	cmp	r2, #0
   27b68:	bne	27bd4 <__flatcc_fb_build_schema@@Base+0x138>
   27b6c:	ldr	r1, [r5, #4]
   27b70:	ldr	r2, [r1]
   27b74:	ldr	r1, [r1, #4]
   27b78:	add	r1, r2, r1
   27b7c:	cmp	r2, r1
   27b80:	bne	27c10 <__flatcc_fb_build_schema@@Base+0x174>
   27b84:	cmp	r3, #0
   27b88:	moveq	r3, r7
   27b8c:	cmp	r0, #0
   27b90:	str	r3, [r5, #88]	; 0x58
   27b94:	ldr	r3, [sp, #44]	; 0x2c
   27b98:	str	r3, [r5, #16]
   27b9c:	beq	27bcc <__flatcc_fb_build_schema@@Base+0x130>
   27ba0:	mov	r2, #1
   27ba4:	mov	r1, r5
   27ba8:	add	r0, r0, #4
   27bac:	bl	22514 <fb_symbol_table_insert_item@@Base>
   27bb0:	cmp	r0, #0
   27bb4:	beq	27bcc <__flatcc_fb_build_schema@@Base+0x130>
   27bb8:	ldr	r2, [pc, #3784]	; 28a88 <__flatcc_fb_build_schema@@Base+0xfec>
   27bbc:	ldr	r3, [r0, #4]
   27bc0:	mov	r0, r4
   27bc4:	ldr	r1, [r5, #4]
   27bc8:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   27bcc:	ldr	r5, [r5]
   27bd0:	b	27ae4 <__flatcc_fb_build_schema@@Base+0x48>
   27bd4:	ldr	ip, [r2, #4]
   27bd8:	ldm	ip, {r1, ip}
   27bdc:	add	ip, r1, ip
   27be0:	cmp	r1, ip
   27be4:	bne	27bf8 <__flatcc_fb_build_schema@@Base+0x15c>
   27be8:	eor	r3, r3, #46	; 0x2e
   27bec:	ldr	r2, [r2]
   27bf0:	mul	r3, r6, r3
   27bf4:	b	27b64 <__flatcc_fb_build_schema@@Base+0xc8>
   27bf8:	ldrb	lr, [r1], #1
   27bfc:	eor	r3, r3, lr
   27c00:	mul	r3, r6, r3
   27c04:	b	27be0 <__flatcc_fb_build_schema@@Base+0x144>
   27c08:	ldr	r3, [pc, #3684]	; 28a74 <__flatcc_fb_build_schema@@Base+0xfd8>
   27c0c:	b	27b6c <__flatcc_fb_build_schema@@Base+0xd0>
   27c10:	ldrb	ip, [r2], #1
   27c14:	eor	r3, r3, ip
   27c18:	mul	r3, r6, r3
   27c1c:	b	27b7c <__flatcc_fb_build_schema@@Base+0xe0>
   27c20:	ldr	r0, [r4, #412]	; 0x19c
   27c24:	mov	r2, #1
   27c28:	mov	r1, r7
   27c2c:	add	r0, r0, #16
   27c30:	bl	2da00 <fb_name_table_insert_item@@Base>
   27c34:	cmp	r0, #0
   27c38:	beq	27c60 <__flatcc_fb_build_schema@@Base+0x1c4>
   27c3c:	ldr	r3, [r7, #12]
   27c40:	mov	r2, r5
   27c44:	mov	r0, r4
   27c48:	str	r3, [sp, #4]
   27c4c:	ldr	r3, [r7, #8]
   27c50:	str	r3, [sp]
   27c54:	mov	r3, #0
   27c58:	mov	r1, r3
   27c5c:	bl	23acc <__flatcc_error_report@@Base>
   27c60:	ldr	r7, [r7]
   27c64:	b	27af4 <__flatcc_fb_build_schema@@Base+0x58>
   27c68:	ldr	r3, [r4, #48]	; 0x30
   27c6c:	add	r8, r0, #16
   27c70:	str	r0, [r4, #48]	; 0x30
   27c74:	str	r8, [r4, #52]	; 0x34
   27c78:	str	r3, [r0]
   27c7c:	add	r0, r0, #65536	; 0x10000
   27c80:	str	r0, [r4, #44]	; 0x2c
   27c84:	ldr	r3, [r4, #52]	; 0x34
   27c88:	ldr	r0, [r5], #4
   27c8c:	add	r3, r3, #32
   27c90:	str	r3, [r4, #52]	; 0x34
   27c94:	str	r0, [r8, #8]
   27c98:	str	r7, [r8, #24]
   27c9c:	bl	13fa4 <strlen@plt>
   27ca0:	str	r0, [r8, #12]
   27ca4:	mov	r3, #0
   27ca8:	mov	r2, #1
   27cac:	ldr	r0, [r4, #412]	; 0x19c
   27cb0:	mov	r1, r8
   27cb4:	str	r3, [r8]
   27cb8:	strh	r6, [r8, #16]
   27cbc:	add	r0, r0, #16
   27cc0:	bl	2da00 <fb_name_table_insert_item@@Base>
   27cc4:	cmp	r0, #0
   27cc8:	strne	r7, [r0, #24]
   27ccc:	add	r7, r7, #1
   27cd0:	cmp	r7, #12
   27cd4:	bne	27b04 <__flatcc_fb_build_schema@@Base+0x68>
   27cd8:	ldr	r3, [r4, #184]	; 0xb8
   27cdc:	cmp	r3, #0
   27ce0:	moveq	r6, #1
   27ce4:	ldreq	r5, [r4, #392]	; 0x188
   27ce8:	beq	27d9c <__flatcc_fb_build_schema@@Base+0x300>
   27cec:	ldr	r8, [pc, #3480]	; 28a8c <__flatcc_fb_build_schema@@Base+0xff0>
   27cf0:	ldr	r9, [pc, #3480]	; 28a90 <__flatcc_fb_build_schema@@Base+0xff4>
   27cf4:	ldr	sl, [pc, #3480]	; 28a94 <__flatcc_fb_build_schema@@Base+0xff8>
   27cf8:	ldr	r6, [r4, #392]	; 0x188
   27cfc:	cmp	r6, #0
   27d00:	bne	27da8 <__flatcc_fb_build_schema@@Base+0x30c>
   27d04:	ldr	r5, [r4, #392]	; 0x188
   27d08:	cmp	r5, #0
   27d0c:	bne	2809c <__flatcc_fb_build_schema@@Base+0x600>
   27d10:	ldr	r7, [r4, #392]	; 0x188
   27d14:	cmp	r7, #0
   27d18:	bne	280d0 <__flatcc_fb_build_schema@@Base+0x634>
   27d1c:	ldr	r3, [r4, #396]	; 0x18c
   27d20:	cmp	r3, #0
   27d24:	bne	28f8c <__flatcc_fb_build_schema@@Base+0x14f0>
   27d28:	ldr	r5, [r4, #392]	; 0x188
   27d2c:	str	r7, [r4, #396]	; 0x18c
   27d30:	mov	r7, #1
   27d34:	cmp	r5, #0
   27d38:	bne	28fa0 <__flatcc_fb_build_schema@@Base+0x1504>
   27d3c:	ldr	r2, [r4, #400]	; 0x190
   27d40:	cmp	r2, #0
   27d44:	bne	2916c <__flatcc_fb_build_schema@@Base+0x16d0>
   27d48:	ldr	r3, [r4, #208]	; 0xd0
   27d4c:	cmp	r3, #0
   27d50:	beq	27d64 <__flatcc_fb_build_schema@@Base+0x2c8>
   27d54:	ldr	r2, [pc, #3388]	; 28a98 <__flatcc_fb_build_schema@@Base+0xffc>
   27d58:	mov	r1, r5
   27d5c:	mov	r0, r4
   27d60:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27d64:	ldr	r0, [r4, #108]	; 0x6c
   27d68:	clz	r3, r0
   27d6c:	lsr	r3, r3, #5
   27d70:	str	r3, [r4, #120]	; 0x78
   27d74:	b	28094 <__flatcc_fb_build_schema@@Base+0x5f8>
   27d78:	ldrh	r3, [r5, #8]
   27d7c:	cmp	r3, #3
   27d80:	bne	27d98 <__flatcc_fb_build_schema@@Base+0x2fc>
   27d84:	mov	r1, r5
   27d88:	mov	r0, r4
   27d8c:	bl	270a4 <__flatcc_fb_clear_parser@@Base+0x5ac>
   27d90:	cmp	r0, #0
   27d94:	strhne	r6, [r5, #48]	; 0x30
   27d98:	ldr	r5, [r5]
   27d9c:	cmp	r5, #0
   27da0:	bne	27d78 <__flatcc_fb_build_schema@@Base+0x2dc>
   27da4:	b	27cec <__flatcc_fb_build_schema@@Base+0x250>
   27da8:	ldrh	r3, [r6, #8]
   27dac:	cmp	r3, #4
   27db0:	ldrls	pc, [pc, r3, lsl #2]
   27db4:	b	28080 <__flatcc_fb_build_schema@@Base+0x5e4>
   27db8:	andeq	r8, r2, r8, ror r0
   27dbc:	andeq	r7, r2, ip, asr #27
   27dc0:	andeq	r8, r2, r8, ror r0
   27dc4:	andeq	r8, r2, r8, asr r0
   27dc8:	andeq	r8, r2, r4, rrx
   27dcc:	ldrh	r3, [r6, #48]	; 0x30
   27dd0:	cmp	r3, #0
   27dd4:	ldrne	r2, [pc, #3264]	; 28a9c <__flatcc_fb_build_schema@@Base+0x1000>
   27dd8:	bne	27e98 <__flatcc_fb_build_schema@@Base+0x3fc>
   27ddc:	add	r3, sp, #108	; 0x6c
   27de0:	mov	r2, #16
   27de4:	mov	r0, r4
   27de8:	ldr	r1, [r6, #28]
   27dec:	bl	26c20 <__flatcc_fb_clear_parser@@Base+0x128>
   27df0:	ldr	r3, [sp, #124]	; 0x7c
   27df4:	strh	r0, [r6, #92]	; 0x5c
   27df8:	cmp	r3, #0
   27dfc:	beq	27e5c <__flatcc_fb_build_schema@@Base+0x3c0>
   27e00:	ldrd	r0, [r3, #8]
   27e04:	subs	r3, r0, #1
   27e08:	str	r3, [sp, #8]
   27e0c:	sbc	r3, r1, #0
   27e10:	str	r3, [sp, #12]
   27e14:	ldrd	r2, [sp, #8]
   27e18:	cmp	r3, #0
   27e1c:	cmpeq	r2, #255	; 0xff
   27e20:	bhi	27e4c <__flatcc_fb_build_schema@@Base+0x3b0>
   27e24:	mov	r2, #1
   27e28:	mov	r3, #0
   27e2c:	cmp	r1, r3
   27e30:	cmpeq	r0, r2
   27e34:	beq	291dc <__flatcc_fb_build_schema@@Base+0x1740>
   27e38:	adds	r2, r2, r2
   27e3c:	adc	r3, r3, r3
   27e40:	cmp	r1, r3
   27e44:	cmpeq	r0, r2
   27e48:	bcs	27e2c <__flatcc_fb_build_schema@@Base+0x390>
   27e4c:	ldr	r2, [pc, #3148]	; 28aa0 <__flatcc_fb_build_schema@@Base+0x1004>
   27e50:	mov	r0, r4
   27e54:	ldr	r1, [r6, #4]
   27e58:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27e5c:	ldr	r5, [r6, #20]
   27e60:	mov	r7, #0
   27e64:	cmp	r5, #0
   27e68:	bne	27ea0 <__flatcc_fb_build_schema@@Base+0x404>
   27e6c:	cmp	r7, #0
   27e70:	beq	28078 <__flatcc_fb_build_schema@@Base+0x5dc>
   27e74:	ldrh	r3, [r6, #10]
   27e78:	cmp	r7, #1
   27e7c:	orr	r3, r3, #8
   27e80:	strh	r3, [r6, #10]
   27e84:	beq	28078 <__flatcc_fb_build_schema@@Base+0x5dc>
   27e88:	ldr	r3, [r4, #156]	; 0x9c
   27e8c:	cmp	r3, #0
   27e90:	bne	28078 <__flatcc_fb_build_schema@@Base+0x5dc>
   27e94:	ldr	r2, [pc, #3080]	; 28aa4 <__flatcc_fb_build_schema@@Base+0x1008>
   27e98:	ldr	r1, [r6, #4]
   27e9c:	b	27ee8 <__flatcc_fb_build_schema@@Base+0x44c>
   27ea0:	mov	r2, #1
   27ea4:	mov	r1, r5
   27ea8:	add	r0, r6, #56	; 0x38
   27eac:	bl	22514 <fb_symbol_table_insert_item@@Base>
   27eb0:	cmp	r0, #0
   27eb4:	beq	27ed4 <__flatcc_fb_build_schema@@Base+0x438>
   27eb8:	mov	r2, sl
   27ebc:	ldr	r3, [r0, #4]
   27ec0:	mov	r0, r4
   27ec4:	ldr	r1, [r5, #4]
   27ec8:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   27ecc:	ldr	r5, [r5]
   27ed0:	b	27e64 <__flatcc_fb_build_schema@@Base+0x3c8>
   27ed4:	ldrh	r3, [r5, #8]
   27ed8:	cmp	r3, #5
   27edc:	beq	27ef4 <__flatcc_fb_build_schema@@Base+0x458>
   27ee0:	ldr	r2, [pc, #3008]	; 28aa8 <__flatcc_fb_build_schema@@Base+0x100c>
   27ee4:	ldr	r1, [r5, #4]
   27ee8:	mov	r0, r4
   27eec:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27ef0:	b	27fe8 <__flatcc_fb_build_schema@@Base+0x54c>
   27ef4:	ldr	r3, [r4, #172]	; 0xac
   27ef8:	mov	r0, r4
   27efc:	ldr	r1, [r5, #64]	; 0x40
   27f00:	cmp	r3, #0
   27f04:	ldr	r3, [r4, #168]	; 0xa8
   27f08:	movne	r2, #128	; 0x80
   27f0c:	moveq	r2, #0
   27f10:	cmp	r3, #0
   27f14:	add	r3, sp, #108	; 0x6c
   27f18:	orrne	r2, r2, #4
   27f1c:	bl	26c20 <__flatcc_fb_clear_parser@@Base+0x128>
   27f20:	ldrh	r3, [r5, #24]
   27f24:	strh	r0, [r5, #72]	; 0x48
   27f28:	cmp	r3, #8
   27f2c:	beq	28024 <__flatcc_fb_build_schema@@Base+0x588>
   27f30:	cmp	r3, #12
   27f34:	bne	28050 <__flatcc_fb_build_schema@@Base+0x5b4>
   27f38:	mov	r3, #0
   27f3c:	mov	r0, r4
   27f40:	ldr	r1, [r6, #12]
   27f44:	ldr	r2, [r5, #16]
   27f48:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   27f4c:	cmp	r0, #0
   27f50:	bne	27f74 <__flatcc_fb_build_schema@@Base+0x4d8>
   27f54:	mov	r3, r5
   27f58:	mov	r2, r9
   27f5c:	ldr	r1, [r5, #16]
   27f60:	mov	r0, r4
   27f64:	bl	248d0 <error_ref_sym@@Base>
   27f68:	mov	r3, #1
   27f6c:	strh	r3, [r5, #24]
   27f70:	b	27ecc <__flatcc_fb_build_schema@@Base+0x430>
   27f74:	ldrh	fp, [r0, #8]
   27f78:	mov	r3, #14
   27f7c:	str	r0, [r5, #16]
   27f80:	strh	r3, [r5, #24]
   27f84:	cmp	fp, #1
   27f88:	beq	28000 <__flatcc_fb_build_schema@@Base+0x564>
   27f8c:	ldr	r3, [r4, #152]	; 0x98
   27f90:	cmp	r3, #0
   27f94:	beq	27ff4 <__flatcc_fb_build_schema@@Base+0x558>
   27f98:	cmp	fp, #3
   27f9c:	beq	27fb8 <__flatcc_fb_build_schema@@Base+0x51c>
   27fa0:	ldr	r2, [pc, #2820]	; 28aac <__flatcc_fb_build_schema@@Base+0x1010>
   27fa4:	ldr	r3, [r0, #4]
   27fa8:	mov	r0, r4
   27fac:	ldr	r1, [r5, #4]
   27fb0:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   27fb4:	b	27fe0 <__flatcc_fb_build_schema@@Base+0x544>
   27fb8:	ldrh	r3, [r5, #72]	; 0x48
   27fbc:	tst	r3, #128	; 0x80
   27fc0:	beq	28030 <__flatcc_fb_build_schema@@Base+0x594>
   27fc4:	ldr	r3, [r4, #148]	; 0x94
   27fc8:	cmp	r3, #0
   27fcc:	bne	2802c <__flatcc_fb_build_schema@@Base+0x590>
   27fd0:	ldr	r2, [pc, #2776]	; 28ab0 <__flatcc_fb_build_schema@@Base+0x1014>
   27fd4:	mov	r0, r4
   27fd8:	ldr	r1, [r5, #4]
   27fdc:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   27fe0:	mov	r3, #1
   27fe4:	strh	r3, [r5, #24]
   27fe8:	mov	r3, #1
   27fec:	strh	r3, [r6, #48]	; 0x30
   27ff0:	b	28078 <__flatcc_fb_build_schema@@Base+0x5dc>
   27ff4:	ldr	r2, [pc, #2744]	; 28ab4 <__flatcc_fb_build_schema@@Base+0x1018>
   27ff8:	ldr	r3, [r0, #4]
   27ffc:	b	27fa8 <__flatcc_fb_build_schema@@Base+0x50c>
   28000:	ldrh	r3, [r5, #72]	; 0x48
   28004:	tst	r3, #128	; 0x80
   28008:	beq	28030 <__flatcc_fb_build_schema@@Base+0x594>
   2800c:	ldr	r2, [pc, #2716]	; 28ab0 <__flatcc_fb_build_schema@@Base+0x1014>
   28010:	mov	r0, r4
   28014:	ldr	r1, [r5, #4]
   28018:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   2801c:	strh	fp, [r5, #24]
   28020:	b	27fe8 <__flatcc_fb_build_schema@@Base+0x54c>
   28024:	tst	r0, #128	; 0x80
   28028:	beq	28030 <__flatcc_fb_build_schema@@Base+0x594>
   2802c:	add	r7, r7, #1
   28030:	ldrh	r3, [r5, #56]	; 0x38
   28034:	cmp	r3, #0
   28038:	beq	27ecc <__flatcc_fb_build_schema@@Base+0x430>
   2803c:	mov	r2, r8
   28040:	mov	r0, r4
   28044:	ldr	r1, [r5, #4]
   28048:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   2804c:	b	27ecc <__flatcc_fb_build_schema@@Base+0x430>
   28050:	ldr	r2, [pc, #2656]	; 28ab8 <__flatcc_fb_build_schema@@Base+0x101c>
   28054:	b	27ee4 <__flatcc_fb_build_schema@@Base+0x448>
   28058:	ldr	r3, [r4, #184]	; 0xb8
   2805c:	cmp	r3, #0
   28060:	beq	28078 <__flatcc_fb_build_schema@@Base+0x5dc>
   28064:	mov	r1, r6
   28068:	mov	r0, r4
   2806c:	bl	270a4 <__flatcc_fb_clear_parser@@Base+0x5ac>
   28070:	cmp	r0, #0
   28074:	bne	27fe8 <__flatcc_fb_build_schema@@Base+0x54c>
   28078:	ldr	r6, [r6]
   2807c:	b	27cfc <__flatcc_fb_build_schema@@Base+0x260>
   28080:	mov	r0, r4
   28084:	ldr	r2, [pc, #2608]	; 28abc <__flatcc_fb_build_schema@@Base+0x1020>
   28088:	ldr	r1, [r6, #4]
   2808c:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28090:	mvn	r0, #0
   28094:	add	sp, sp, #212	; 0xd4
   28098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2809c:	ldrh	r6, [r5, #8]
   280a0:	cmp	r6, #1
   280a4:	bne	280c8 <__flatcc_fb_build_schema@@Base+0x62c>
   280a8:	ldrh	r3, [r5, #48]	; 0x30
   280ac:	cmp	r3, #1
   280b0:	beq	280c8 <__flatcc_fb_build_schema@@Base+0x62c>
   280b4:	mov	r1, r5
   280b8:	mov	r0, r4
   280bc:	bl	2769c <__flatcc_fb_clear_parser@@Base+0xba4>
   280c0:	cmp	r0, #0
   280c4:	strhne	r6, [r5, #48]	; 0x30
   280c8:	ldr	r5, [r5]
   280cc:	b	27d08 <__flatcc_fb_build_schema@@Base+0x26c>
   280d0:	ldrh	r3, [r7, #8]
   280d4:	cmp	r3, #0
   280d8:	beq	280ec <__flatcc_fb_build_schema@@Base+0x650>
   280dc:	cmp	r3, #2
   280e0:	beq	28de8 <__flatcc_fb_build_schema@@Base+0x134c>
   280e4:	ldr	r7, [r7]
   280e8:	b	27d14 <__flatcc_fb_build_schema@@Base+0x278>
   280ec:	ldrh	r6, [r7, #48]	; 0x30
   280f0:	cmp	r6, #1
   280f4:	beq	280e4 <__flatcc_fb_build_schema@@Base+0x648>
   280f8:	cmp	r6, #0
   280fc:	beq	28114 <__flatcc_fb_build_schema@@Base+0x678>
   28100:	ldr	r3, [pc, #2488]	; 28ac0 <__flatcc_fb_build_schema@@Base+0x1024>
   28104:	movw	r2, #770	; 0x302
   28108:	ldr	r1, [pc, #2392]	; 28a68 <__flatcc_fb_build_schema@@Base+0xfcc>
   2810c:	ldr	r0, [pc, #2480]	; 28ac4 <__flatcc_fb_build_schema@@Base+0x1028>
   28110:	b	27ad4 <__flatcc_fb_build_schema@@Base+0x38>
   28114:	add	r3, sp, #60	; 0x3c
   28118:	mov	r2, #8
   2811c:	ldr	r1, [r7, #28]
   28120:	mov	r0, r4
   28124:	bl	26c20 <__flatcc_fb_clear_parser@@Base+0x128>
   28128:	ldr	r5, [r7, #20]
   2812c:	mov	r2, #0
   28130:	mov	r3, #0
   28134:	str	r6, [sp, #16]
   28138:	str	r6, [sp, #20]
   2813c:	strd	r2, [sp, #32]
   28140:	mov	r2, #0
   28144:	mov	r3, #0
   28148:	strh	r0, [r7, #92]	; 0x5c
   2814c:	strd	r2, [sp, #8]
   28150:	str	r6, [sp, #40]	; 0x28
   28154:	cmp	r5, #0
   28158:	bne	281fc <__flatcc_fb_build_schema@@Base+0x760>
   2815c:	cmp	r6, #0
   28160:	bne	291f4 <__flatcc_fb_build_schema@@Base+0x1758>
   28164:	ldrd	r2, [sp, #8]
   28168:	strd	r2, [r7, #96]	; 0x60
   2816c:	ldr	r3, [sp, #16]
   28170:	cmp	r3, #0
   28174:	beq	29204 <__flatcc_fb_build_schema@@Base+0x1768>
   28178:	ldr	r3, [sp, #8]
   2817c:	ldrd	r0, [sp, #8]
   28180:	ldr	r2, [sp, #12]
   28184:	ldrd	r8, [sp, #32]
   28188:	orrs	r3, r3, r2
   2818c:	movne	r3, #1
   28190:	moveq	r3, #0
   28194:	cmp	r1, r9
   28198:	cmpeq	r0, r8
   2819c:	movhi	r3, #0
   281a0:	andls	r3, r3, #1
   281a4:	cmp	r3, #0
   281a8:	bne	28dd4 <__flatcc_fb_build_schema@@Base+0x1338>
   281ac:	ldr	r3, [sp, #40]	; 0x28
   281b0:	cmp	r3, #0
   281b4:	beq	280e4 <__flatcc_fb_build_schema@@Base+0x648>
   281b8:	str	r6, [sp, #16]
   281bc:	ldrh	r3, [r7, #10]
   281c0:	orr	r3, r3, #8
   281c4:	strh	r3, [r7, #10]
   281c8:	ldr	r3, [sp, #40]	; 0x28
   281cc:	cmp	r3, #1
   281d0:	beq	291e4 <__flatcc_fb_build_schema@@Base+0x1748>
   281d4:	ldr	r3, [r4, #156]	; 0x9c
   281d8:	cmp	r3, #0
   281dc:	bne	291e4 <__flatcc_fb_build_schema@@Base+0x1748>
   281e0:	ldr	r2, [pc, #2236]	; 28aa4 <__flatcc_fb_build_schema@@Base+0x1008>
   281e4:	ldr	r1, [r7, #4]
   281e8:	mov	r0, r4
   281ec:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   281f0:	mov	r3, #1
   281f4:	strh	r3, [r7, #48]	; 0x30
   281f8:	b	280e4 <__flatcc_fb_build_schema@@Base+0x648>
   281fc:	mov	r2, #1
   28200:	mov	r1, r5
   28204:	add	r0, r7, #56	; 0x38
   28208:	bl	22514 <fb_symbol_table_insert_item@@Base>
   2820c:	subs	r8, r0, #0
   28210:	beq	28230 <__flatcc_fb_build_schema@@Base+0x794>
   28214:	ldr	r2, [pc, #2220]	; 28ac8 <__flatcc_fb_build_schema@@Base+0x102c>
   28218:	mov	r0, r4
   2821c:	ldr	r1, [r5, #4]
   28220:	ldr	r3, [r8, #4]
   28224:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   28228:	ldr	r5, [r5]
   2822c:	b	28154 <__flatcc_fb_build_schema@@Base+0x6b8>
   28230:	ldrh	r3, [r5, #8]
   28234:	cmp	r3, #5
   28238:	beq	28248 <__flatcc_fb_build_schema@@Base+0x7ac>
   2823c:	ldr	r2, [pc, #2184]	; 28acc <__flatcc_fb_build_schema@@Base+0x1030>
   28240:	ldr	r1, [r5, #4]
   28244:	b	281e8 <__flatcc_fb_build_schema@@Base+0x74c>
   28248:	ldrh	r3, [r5, #24]
   2824c:	cmp	r3, #1
   28250:	beq	28228 <__flatcc_fb_build_schema@@Base+0x78c>
   28254:	sub	r3, r3, #7
   28258:	cmp	r3, #1
   2825c:	bhi	28288 <__flatcc_fb_build_schema@@Base+0x7ec>
   28260:	ldr	r3, [r5, #16]
   28264:	ldr	r3, [r3, #16]
   28268:	add	r3, r3, #996	; 0x3e4
   2826c:	add	r3, r3, #3
   28270:	cmp	r3, #27
   28274:	ldrls	r2, [pc, #2132]	; 28ad0 <__flatcc_fb_build_schema@@Base+0x1034>
   28278:	movhi	r3, r8
   2827c:	addls	r3, r2, r3
   28280:	ldrbls	r3, [r3, #87]	; 0x57
   28284:	str	r3, [r5, #16]
   28288:	add	r3, sp, #60	; 0x3c
   2828c:	movw	r2, #4038	; 0xfc6
   28290:	ldr	r1, [r5, #64]	; 0x40
   28294:	mov	r0, r4
   28298:	bl	26c20 <__flatcc_fb_clear_parser@@Base+0x128>
   2829c:	ldr	r9, [sp, #84]	; 0x54
   282a0:	strh	r0, [r5, #72]	; 0x48
   282a4:	cmp	r9, #0
   282a8:	beq	282d8 <__flatcc_fb_build_schema@@Base+0x83c>
   282ac:	ldrh	r2, [r5, #24]
   282b0:	ldr	r3, [r7, #12]
   282b4:	cmp	r2, #7
   282b8:	bne	282c8 <__flatcc_fb_build_schema@@Base+0x82c>
   282bc:	ldr	r2, [r5, #16]
   282c0:	cmp	r2, #4
   282c4:	beq	28448 <__flatcc_fb_build_schema@@Base+0x9ac>
   282c8:	ldr	r2, [pc, #2052]	; 28ad4 <__flatcc_fb_build_schema@@Base+0x1038>
   282cc:	mov	r0, r4
   282d0:	ldr	r1, [r9, #4]
   282d4:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   282d8:	ldrh	r3, [r5, #72]	; 0x48
   282dc:	tst	r3, #256	; 0x100
   282e0:	beq	28300 <__flatcc_fb_build_schema@@Base+0x864>
   282e4:	ldrh	r3, [r5, #24]
   282e8:	cmp	r3, #8
   282ec:	bne	28300 <__flatcc_fb_build_schema@@Base+0x864>
   282f0:	ldr	r2, [pc, #2016]	; 28ad8 <__flatcc_fb_build_schema@@Base+0x103c>
   282f4:	mov	r0, r4
   282f8:	ldr	r1, [r5, #4]
   282fc:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28300:	ldrh	r3, [r5, #72]	; 0x48
   28304:	tst	r3, #1024	; 0x400
   28308:	beq	28334 <__flatcc_fb_build_schema@@Base+0x898>
   2830c:	ldrh	r3, [r5, #24]
   28310:	cmp	r3, #7
   28314:	bne	28324 <__flatcc_fb_build_schema@@Base+0x888>
   28318:	ldr	r3, [r5, #16]
   2831c:	cmp	r3, #4
   28320:	beq	28334 <__flatcc_fb_build_schema@@Base+0x898>
   28324:	ldr	r2, [pc, #1968]	; 28adc <__flatcc_fb_build_schema@@Base+0x1040>
   28328:	mov	r0, r4
   2832c:	ldr	r1, [r5, #4]
   28330:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28334:	ldrh	r3, [r5, #72]	; 0x48
   28338:	tst	r3, #2048	; 0x800
   2833c:	beq	28368 <__flatcc_fb_build_schema@@Base+0x8cc>
   28340:	ldrh	r3, [r5, #24]
   28344:	cmp	r3, #7
   28348:	bne	28358 <__flatcc_fb_build_schema@@Base+0x8bc>
   2834c:	ldr	r3, [r5, #16]
   28350:	cmp	r3, #4
   28354:	beq	28368 <__flatcc_fb_build_schema@@Base+0x8cc>
   28358:	ldr	r2, [pc, #1920]	; 28ae0 <__flatcc_fb_build_schema@@Base+0x1044>
   2835c:	mov	r0, r4
   28360:	ldr	r1, [r5, #4]
   28364:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28368:	ldrh	r3, [r5, #72]	; 0x48
   2836c:	and	r3, r3, #3072	; 0xc00
   28370:	cmp	r3, #3072	; 0xc00
   28374:	bne	28388 <__flatcc_fb_build_schema@@Base+0x8ec>
   28378:	ldr	r2, [pc, #1892]	; 28ae4 <__flatcc_fb_build_schema@@Base+0x1048>
   2837c:	mov	r0, r4
   28380:	ldr	r1, [r5, #4]
   28384:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28388:	ldr	r2, [sp, #12]
   2838c:	ldr	sl, [sp, #64]	; 0x40
   28390:	adds	r3, sl, #0
   28394:	movne	r3, #1
   28398:	str	r3, [sp, #48]	; 0x30
   2839c:	ldr	r3, [sp, #8]
   283a0:	orrs	r3, r3, r2
   283a4:	ldr	r3, [sp, #48]	; 0x30
   283a8:	movne	r3, #0
   283ac:	cmp	r3, #0
   283b0:	beq	283d4 <__flatcc_fb_build_schema@@Base+0x938>
   283b4:	ldr	r3, [r4, #112]	; 0x70
   283b8:	mov	r1, #0
   283bc:	ldr	r2, [r4, #216]	; 0xd8
   283c0:	mov	r0, r3
   283c4:	str	r3, [sp, #20]
   283c8:	bl	13fc8 <memset@plt>
   283cc:	mov	r3, #1
   283d0:	str	r3, [sp, #16]
   283d4:	cmp	r6, #0
   283d8:	bne	2841c <__flatcc_fb_build_schema@@Base+0x980>
   283dc:	ldrd	r0, [sp, #8]
   283e0:	ldrd	r2, [r4, #216]	; 0xd8
   283e4:	cmp	r1, r3
   283e8:	cmpeq	r0, r2
   283ec:	bcc	285c0 <__flatcc_fb_build_schema@@Base+0xb24>
   283f0:	ldr	r2, [pc, #1776]	; 28ae8 <__flatcc_fb_build_schema@@Base+0x104c>
   283f4:	mov	r0, r4
   283f8:	mov	r6, #1
   283fc:	ldr	r1, [r5, #4]
   28400:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28404:	ldr	r3, [sp, #8]
   28408:	adds	r3, r3, #1
   2840c:	str	r3, [sp, #8]
   28410:	ldr	r3, [sp, #12]
   28414:	adc	r3, r3, #0
   28418:	str	r3, [sp, #12]
   2841c:	ldrh	r3, [r5, #24]
   28420:	sub	r3, r3, #7
   28424:	cmp	r3, #5
   28428:	ldrls	pc, [pc, r3, lsl #2]
   2842c:	b	28c90 <__flatcc_fb_build_schema@@Base+0x11f4>
   28430:	andeq	r8, r2, ip, asr r7
   28434:	andeq	r8, r2, r4, ror #11
   28438:			; <UNDEFINED> instruction: 0x000287b4
   2843c:	muleq	r2, ip, r7
   28440:	andeq	r8, r2, ip, ror #19
   28444:	andeq	r8, r2, r8, asr #15
   28448:	ldrh	r2, [r9, #16]
   2844c:	cmp	r2, #2
   28450:	ldreq	sl, [r9, #12]
   28454:	ldreq	r1, [r9, #8]
   28458:	moveq	r2, sl
   2845c:	bne	282d8 <__flatcc_fb_build_schema@@Base+0x83c>
   28460:	cmp	r2, #0
   28464:	movle	fp, r1
   28468:	ble	28488 <__flatcc_fb_build_schema@@Base+0x9ec>
   2846c:	sub	r0, r2, #1
   28470:	ldrb	ip, [r1, r0]
   28474:	cmp	ip, #46	; 0x2e
   28478:	bne	28500 <__flatcc_fb_build_schema@@Base+0xa64>
   2847c:	add	fp, r1, r2
   28480:	sub	sl, sl, #1
   28484:	mov	r2, r0
   28488:	clz	r0, r2
   2848c:	cmp	r3, #0
   28490:	lsr	r0, r0, #5
   28494:	moveq	r0, #0
   28498:	sub	sl, sl, r2
   2849c:	cmp	r0, #0
   284a0:	beq	28570 <__flatcc_fb_build_schema@@Base+0xad4>
   284a4:	mov	r2, sl
   284a8:	add	r0, r3, #4
   284ac:	str	r3, [sp, #48]	; 0x30
   284b0:	mov	r1, fp
   284b4:	bl	22534 <fb_symbol_table_find@@Base>
   284b8:	subs	r2, r0, #0
   284bc:	ldr	r3, [sp, #48]	; 0x30
   284c0:	bne	28508 <__flatcc_fb_build_schema@@Base+0xa6c>
   284c4:	mov	r1, r3
   284c8:	mov	r0, r4
   284cc:	bl	26dfc <__flatcc_fb_clear_parser@@Base+0x304>
   284d0:	subs	r3, r0, #0
   284d4:	bne	284a4 <__flatcc_fb_build_schema@@Base+0xa08>
   284d8:	ldr	r3, [r9, #12]
   284dc:	mov	r0, r4
   284e0:	ldr	r2, [pc, #1540]	; 28aec <__flatcc_fb_build_schema@@Base+0x1050>
   284e4:	str	r3, [sp, #4]
   284e8:	ldr	r3, [r9, #8]
   284ec:	str	r3, [sp]
   284f0:	mov	r3, #0
   284f4:	ldr	r1, [r9, #4]
   284f8:	bl	23acc <__flatcc_error_report@@Base>
   284fc:	b	282d8 <__flatcc_fb_build_schema@@Base+0x83c>
   28500:	mov	r2, r0
   28504:	b	28460 <__flatcc_fb_build_schema@@Base+0x9c4>
   28508:	ldrh	r1, [r2, #8]
   2850c:	cmp	r1, #4
   28510:	bhi	284c4 <__flatcc_fb_build_schema@@Base+0xa28>
   28514:	mov	r1, r2
   28518:	ldr	r0, [sp, #44]	; 0x2c
   2851c:	strd	r2, [sp, #48]	; 0x30
   28520:	bl	26e6c <__flatcc_fb_clear_parser@@Base+0x374>
   28524:	cmp	r0, #0
   28528:	ldrd	r2, [sp, #48]	; 0x30
   2852c:	beq	284c4 <__flatcc_fb_build_schema@@Base+0xa28>
   28530:	ldrh	r3, [r2, #8]
   28534:	cmp	r3, #0
   28538:	beq	285b8 <__flatcc_fb_build_schema@@Base+0xb1c>
   2853c:	ldr	r1, [r4, #176]	; 0xb0
   28540:	cmp	r1, #0
   28544:	ldreq	r3, [r2, #4]
   28548:	ldreq	r2, [pc, #1440]	; 28af0 <__flatcc_fb_build_schema@@Base+0x1054>
   2854c:	beq	28560 <__flatcc_fb_build_schema@@Base+0xac4>
   28550:	cmp	r3, #1
   28554:	beq	285b8 <__flatcc_fb_build_schema@@Base+0xb1c>
   28558:	ldr	r3, [r2, #4]
   2855c:	ldr	r2, [pc, #1424]	; 28af4 <__flatcc_fb_build_schema@@Base+0x1058>
   28560:	mov	r0, r4
   28564:	ldr	r1, [r9, #4]
   28568:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   2856c:	b	282d8 <__flatcc_fb_build_schema@@Base+0x83c>
   28570:	ldr	r3, [sp, #44]	; 0x2c
   28574:	cmp	r3, #0
   28578:	beq	284d8 <__flatcc_fb_build_schema@@Base+0xa3c>
   2857c:	ldr	r0, [r4, #412]	; 0x19c
   28580:	cmp	r0, #0
   28584:	beq	284d8 <__flatcc_fb_build_schema@@Base+0xa3c>
   28588:	cmp	r2, #0
   2858c:	moveq	r1, #0
   28590:	bl	22c14 <fb_scope_table_find@@Base>
   28594:	cmp	r0, #0
   28598:	beq	284d8 <__flatcc_fb_build_schema@@Base+0xa3c>
   2859c:	mov	r2, sl
   285a0:	mov	r1, fp
   285a4:	add	r0, r0, #4
   285a8:	bl	22534 <fb_symbol_table_find@@Base>
   285ac:	subs	r2, r0, #0
   285b0:	bne	28530 <__flatcc_fb_build_schema@@Base+0xa94>
   285b4:	b	284d8 <__flatcc_fb_build_schema@@Base+0xa3c>
   285b8:	str	r2, [r5, #104]	; 0x68
   285bc:	b	282d8 <__flatcc_fb_build_schema@@Base+0x83c>
   285c0:	ldr	r3, [sp, #16]
   285c4:	cmp	r3, #0
   285c8:	bne	28404 <__flatcc_fb_build_schema@@Base+0x968>
   285cc:	ldrh	r3, [sp, #8]
   285d0:	str	r3, [r5, #96]	; 0x60
   285d4:	ldr	r3, [sp, #16]
   285d8:	mov	r6, r3
   285dc:	str	r3, [r5, #100]	; 0x64
   285e0:	b	28404 <__flatcc_fb_build_schema@@Base+0x968>
   285e4:	ldrh	r3, [r5, #56]	; 0x38
   285e8:	add	r9, r5, #48	; 0x30
   285ec:	cmp	r3, #13
   285f0:	bne	2861c <__flatcc_fb_build_schema@@Base+0xb80>
   285f4:	mov	r2, #0
   285f8:	mov	r0, r4
   285fc:	str	r9, [sp]
   28600:	ldr	r1, [r7, #12]
   28604:	ldr	r3, [r5, #48]	; 0x30
   28608:	bl	26fc0 <__flatcc_fb_clear_parser@@Base+0x4c8>
   2860c:	cmp	r0, #0
   28610:	movne	r3, r5
   28614:	ldrne	r2, [pc, #1244]	; 28af8 <__flatcc_fb_build_schema@@Base+0x105c>
   28618:	bne	288fc <__flatcc_fb_build_schema@@Base+0xe60>
   2861c:	ldrh	r3, [r5, #56]	; 0x38
   28620:	cmp	r3, #0
   28624:	bne	2863c <__flatcc_fb_build_schema@@Base+0xba0>
   28628:	mov	r3, #5
   2862c:	mov	r2, #0
   28630:	strh	r3, [r5, #56]	; 0x38
   28634:	mov	r3, #0
   28638:	strd	r2, [r5, #48]	; 0x30
   2863c:	mov	r3, r9
   28640:	mov	r1, r5
   28644:	ldr	r2, [r5, #16]
   28648:	mov	r0, r4
   2864c:	bl	29230 <__flatcc_fb_coerce_scalar_type@@Base>
   28650:	cmp	r0, #0
   28654:	beq	28664 <__flatcc_fb_build_schema@@Base+0xbc8>
   28658:	mov	r3, #1
   2865c:	strh	r3, [r5, #24]
   28660:	b	28228 <__flatcc_fb_build_schema@@Base+0x78c>
   28664:	ldr	r3, [pc, #1124]	; 28ad0 <__flatcc_fb_build_schema@@Base+0x1034>
   28668:	mov	r9, #1
   2866c:	str	r0, [r5, #92]	; 0x5c
   28670:	ldr	r2, [r5, #16]
   28674:	add	r3, r3, r2, lsl #2
   28678:	ldr	r3, [r3, #116]	; 0x74
   2867c:	strh	r3, [r5, #74]	; 0x4a
   28680:	str	r3, [r5, #88]	; 0x58
   28684:	cmp	r6, #0
   28688:	beq	28c10 <__flatcc_fb_build_schema@@Base+0x1174>
   2868c:	ldr	r3, [sp, #16]
   28690:	eor	fp, r6, #1
   28694:	ands	fp, fp, r3
   28698:	beq	28728 <__flatcc_fb_build_schema@@Base+0xc8c>
   2869c:	ldr	r1, [sp, #20]
   286a0:	ldr	r3, [r5, #96]	; 0x60
   286a4:	ldr	r2, [sp, #20]
   286a8:	ldrb	r6, [r1, r3]
   286ac:	add	r2, r2, r3
   286b0:	cmp	r6, #2
   286b4:	bne	28ce4 <__flatcc_fb_build_schema@@Base+0x1248>
   286b8:	ldr	r2, [pc, #1084]	; 28afc <__flatcc_fb_build_schema@@Base+0x1060>
   286bc:	mov	r0, r4
   286c0:	mov	r6, fp
   286c4:	ldr	r1, [sl, #4]
   286c8:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   286cc:	eor	r3, r6, #1
   286d0:	cmp	r8, #0
   286d4:	moveq	r3, #0
   286d8:	andne	r3, r3, #1
   286dc:	cmp	r3, #0
   286e0:	beq	28728 <__flatcc_fb_build_schema@@Base+0xc8c>
   286e4:	ldrh	r3, [r8, #8]
   286e8:	cmp	r3, #4
   286ec:	movne	r6, #0
   286f0:	bne	28728 <__flatcc_fb_build_schema@@Base+0xc8c>
   286f4:	ldrd	r0, [r5, #96]	; 0x60
   286f8:	ldrh	r3, [r5, #24]
   286fc:	cmp	r1, #0
   28700:	cmpeq	r0, #1
   28704:	bhi	28d0c <__flatcc_fb_build_schema@@Base+0x1270>
   28708:	ldr	r1, [pc, #1008]	; 28b00 <__flatcc_fb_build_schema@@Base+0x1064>
   2870c:	ldr	r2, [pc, #1008]	; 28b04 <__flatcc_fb_build_schema@@Base+0x1068>
   28710:	cmp	r3, #11
   28714:	moveq	r2, r1
   28718:	mov	r0, r4
   2871c:	ldr	r1, [sl, #4]
   28720:	mov	r6, fp
   28724:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28728:	ldrh	r3, [r5, #72]	; 0x48
   2872c:	tst	r3, #128	; 0x80
   28730:	beq	28228 <__flatcc_fb_build_schema@@Base+0x78c>
   28734:	ldr	r3, [sp, #40]	; 0x28
   28738:	cmp	r9, #0
   2873c:	add	r3, r3, #1
   28740:	str	r3, [sp, #40]	; 0x28
   28744:	bne	28228 <__flatcc_fb_build_schema@@Base+0x78c>
   28748:	ldr	r2, [pc, #952]	; 28b08 <__flatcc_fb_build_schema@@Base+0x106c>
   2874c:	mov	r0, r4
   28750:	ldr	r1, [r5, #4]
   28754:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28758:	b	28228 <__flatcc_fb_build_schema@@Base+0x78c>
   2875c:	ldr	r3, [pc, #876]	; 28ad0 <__flatcc_fb_build_schema@@Base+0x1034>
   28760:	ldr	r2, [r5, #16]
   28764:	ldrh	r9, [r5, #56]	; 0x38
   28768:	add	r3, r3, r2, lsl #2
   2876c:	mov	r2, #0
   28770:	ldr	r3, [r3, #116]	; 0x74
   28774:	cmp	r9, r2
   28778:	strh	r3, [r5, #74]	; 0x4a
   2877c:	str	r3, [r5, #88]	; 0x58
   28780:	str	r2, [r5, #92]	; 0x5c
   28784:	ldrne	r2, [pc, #896]	; 28b0c <__flatcc_fb_build_schema@@Base+0x1070>
   28788:	beq	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   2878c:	mov	r0, r4
   28790:	ldr	r1, [r5, #4]
   28794:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28798:	b	28658 <__flatcc_fb_build_schema@@Base+0xbbc>
   2879c:	ldrh	r3, [r5, #56]	; 0x38
   287a0:	cmp	r3, #0
   287a4:	ldreq	r9, [r4, #164]	; 0xa4
   287a8:	ldrne	r2, [pc, #864]	; 28b10 <__flatcc_fb_build_schema@@Base+0x1074>
   287ac:	beq	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   287b0:	b	2878c <__flatcc_fb_build_schema@@Base+0xcf0>
   287b4:	ldrh	r9, [r5, #56]	; 0x38
   287b8:	cmp	r9, #0
   287bc:	ldrne	r2, [pc, #848]	; 28b14 <__flatcc_fb_build_schema@@Base+0x1078>
   287c0:	beq	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   287c4:	b	2878c <__flatcc_fb_build_schema@@Base+0xcf0>
   287c8:	mov	r3, #0
   287cc:	mov	r0, r4
   287d0:	ldr	r1, [r7, #12]
   287d4:	ldr	r2, [r5, #16]
   287d8:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   287dc:	subs	r8, r0, #0
   287e0:	bne	28804 <__flatcc_fb_build_schema@@Base+0xd68>
   287e4:	mov	r6, #1
   287e8:	mov	r3, r5
   287ec:	ldr	r2, [pc, #804]	; 28b18 <__flatcc_fb_build_schema@@Base+0x107c>
   287f0:	mov	r0, r4
   287f4:	ldr	r1, [r5, #16]
   287f8:	bl	248d0 <error_ref_sym@@Base>
   287fc:	strh	r6, [r5, #24]
   28800:	b	28228 <__flatcc_fb_build_schema@@Base+0x78c>
   28804:	ldrh	r3, [r8, #8]
   28808:	cmp	r3, #4
   2880c:	ldrls	pc, [pc, r3, lsl #2]
   28810:	b	28924 <__flatcc_fb_build_schema@@Base+0xe88>
   28814:	andeq	r8, r2, r0, lsr r9
   28818:	andeq	r8, r2, r0, lsr r9
   2881c:	andeq	r8, r2, ip, lsl #18
   28820:	andeq	r8, r2, r8, lsr #16
   28824:	andeq	r8, r2, r0, lsr r9
   28828:	ldrh	r3, [r5, #72]	; 0x48
   2882c:	tst	r3, #256	; 0x100
   28830:	beq	28844 <__flatcc_fb_build_schema@@Base+0xda8>
   28834:	ldr	r2, [pc, #736]	; 28b1c <__flatcc_fb_build_schema@@Base+0x1080>
   28838:	mov	r0, r4
   2883c:	ldr	r1, [r5, #4]
   28840:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28844:	ldr	r9, [r4, #148]	; 0x94
   28848:	mov	r3, #14
   2884c:	str	r8, [r5, #16]
   28850:	strh	r3, [r5, #24]
   28854:	ldrd	r2, [r8, #112]	; 0x70
   28858:	strd	r2, [r5, #88]	; 0x58
   2885c:	eor	r2, r6, #1
   28860:	ldrh	r3, [r8, #104]	; 0x68
   28864:	strh	r3, [r5, #74]	; 0x4a
   28868:	ldrh	r3, [r8, #8]
   2886c:	cmp	r3, #4
   28870:	movne	r2, #0
   28874:	andeq	r2, r2, #1
   28878:	cmp	r2, #0
   2887c:	beq	288b0 <__flatcc_fb_build_schema@@Base+0xe14>
   28880:	ldr	r2, [sp, #16]
   28884:	cmp	r2, #0
   28888:	ldrheq	r2, [sp, #8]
   2888c:	streq	r2, [r5, #96]	; 0x60
   28890:	ldreq	r2, [sp, #16]
   28894:	streq	r2, [r5, #100]	; 0x64
   28898:	ldr	r2, [sp, #8]
   2889c:	adds	r2, r2, #1
   288a0:	str	r2, [sp, #8]
   288a4:	ldr	r2, [sp, #12]
   288a8:	adc	r2, r2, #0
   288ac:	str	r2, [sp, #12]
   288b0:	ldrh	r2, [r5, #56]	; 0x38
   288b4:	cmp	r2, #0
   288b8:	beq	28980 <__flatcc_fb_build_schema@@Base+0xee4>
   288bc:	cmp	r3, #3
   288c0:	ldrne	r2, [pc, #600]	; 28b20 <__flatcc_fb_build_schema@@Base+0x1084>
   288c4:	bne	2878c <__flatcc_fb_build_schema@@Base+0xcf0>
   288c8:	cmp	r2, #13
   288cc:	add	fp, r5, #48	; 0x30
   288d0:	bne	28938 <__flatcc_fb_build_schema@@Base+0xe9c>
   288d4:	mov	r2, r8
   288d8:	mov	r0, r4
   288dc:	str	fp, [sp]
   288e0:	ldr	r1, [r7, #12]
   288e4:	ldr	r3, [r5, #48]	; 0x30
   288e8:	bl	26fc0 <__flatcc_fb_clear_parser@@Base+0x4c8>
   288ec:	cmp	r0, #0
   288f0:	beq	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   288f4:	ldr	r2, [pc, #552]	; 28b24 <__flatcc_fb_build_schema@@Base+0x1088>
   288f8:	mov	r3, r5
   288fc:	ldr	r1, [r5, #48]	; 0x30
   28900:	mov	r0, r4
   28904:	bl	248d0 <error_ref_sym@@Base>
   28908:	b	28658 <__flatcc_fb_build_schema@@Base+0xbbc>
   2890c:	ldr	r2, [pc, #532]	; 28b28 <__flatcc_fb_build_schema@@Base+0x108c>
   28910:	ldr	r3, [r8, #4]
   28914:	mov	r0, r4
   28918:	ldr	r1, [r5, #4]
   2891c:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   28920:	b	28658 <__flatcc_fb_build_schema@@Base+0xbbc>
   28924:	ldr	r2, [pc, #512]	; 28b2c <__flatcc_fb_build_schema@@Base+0x1090>
   28928:	ldr	r3, [r8, #4]
   2892c:	b	28914 <__flatcc_fb_build_schema@@Base+0xe78>
   28930:	mov	r9, #0
   28934:	b	28848 <__flatcc_fb_build_schema@@Base+0xdac>
   28938:	mov	r3, fp
   2893c:	mov	r1, r5
   28940:	ldr	r2, [r8, #40]	; 0x28
   28944:	mov	r0, r4
   28948:	bl	29230 <__flatcc_fb_coerce_scalar_type@@Base>
   2894c:	cmp	r0, #0
   28950:	bne	28658 <__flatcc_fb_build_schema@@Base+0xbbc>
   28954:	ldr	r3, [r4, #212]	; 0xd4
   28958:	cmp	r3, #0
   2895c:	beq	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   28960:	ldr	r0, [r5, #16]
   28964:	mov	r1, fp
   28968:	add	r0, r0, #72	; 0x48
   2896c:	bl	2df94 <fb_value_set_find_item@@Base>
   28970:	cmp	r0, #0
   28974:	ldreq	r2, [pc, #436]	; 28b30 <__flatcc_fb_build_schema@@Base+0x1094>
   28978:	bne	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   2897c:	b	2878c <__flatcc_fb_build_schema@@Base+0xcf0>
   28980:	cmp	r3, #3
   28984:	bne	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   28988:	mov	r3, #5
   2898c:	mov	fp, r5
   28990:	mov	r2, #0
   28994:	mov	r1, r8
   28998:	strh	r3, [r5, #56]	; 0x38
   2899c:	mov	r3, #0
   289a0:	mov	r0, r4
   289a4:	strd	r2, [fp, #48]!	; 0x30
   289a8:	mov	r3, fp
   289ac:	ldr	r2, [r8, #40]	; 0x28
   289b0:	bl	29230 <__flatcc_fb_coerce_scalar_type@@Base>
   289b4:	cmp	r0, #0
   289b8:	bne	28658 <__flatcc_fb_build_schema@@Base+0xbbc>
   289bc:	ldr	r3, [r4, #212]	; 0xd4
   289c0:	cmp	r3, #0
   289c4:	beq	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   289c8:	ldr	r0, [r5, #16]
   289cc:	mov	r1, fp
   289d0:	add	r0, r0, #72	; 0x48
   289d4:	bl	2df94 <fb_value_set_find_item@@Base>
   289d8:	cmp	r0, #0
   289dc:	ldreq	r2, [pc, #336]	; 28b34 <__flatcc_fb_build_schema@@Base+0x1098>
   289e0:	ldreq	r3, [r8, #4]
   289e4:	bne	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   289e8:	b	28914 <__flatcc_fb_build_schema@@Base+0xe78>
   289ec:	mov	r3, #0
   289f0:	mov	r0, r4
   289f4:	ldr	r1, [r7, #12]
   289f8:	ldr	r2, [r5, #16]
   289fc:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   28a00:	subs	r8, r0, #0
   28a04:	bne	28a18 <__flatcc_fb_build_schema@@Base+0xf7c>
   28a08:	mov	r3, r5
   28a0c:	ldr	r2, [pc, #292]	; 28b38 <__flatcc_fb_build_schema@@Base+0x109c>
   28a10:	ldr	r1, [r5, #16]
   28a14:	b	28900 <__flatcc_fb_build_schema@@Base+0xe64>
   28a18:	ldrh	r1, [r8, #8]
   28a1c:	cmp	r1, #4
   28a20:	bhi	28a34 <__flatcc_fb_build_schema@@Base+0xf98>
   28a24:	mov	fp, #1
   28a28:	lsl	r3, fp, r1
   28a2c:	tst	r3, #27
   28a30:	bne	28a40 <__flatcc_fb_build_schema@@Base+0xfa4>
   28a34:	ldr	r2, [pc, #256]	; 28b3c <__flatcc_fb_build_schema@@Base+0x10a0>
   28a38:	ldr	r3, [r5, #16]
   28a3c:	b	28914 <__flatcc_fb_build_schema@@Base+0xe78>
   28a40:	ldrh	r9, [r5, #56]	; 0x38
   28a44:	cmp	r9, #0
   28a48:	beq	28bb0 <__flatcc_fb_build_schema@@Base+0x1114>
   28a4c:	ldr	r2, [pc, #204]	; 28b20 <__flatcc_fb_build_schema@@Base+0x1084>
   28a50:	mov	r0, r4
   28a54:	ldr	r1, [r5, #4]
   28a58:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28a5c:	strh	fp, [r5, #24]
   28a60:	b	28228 <__flatcc_fb_build_schema@@Base+0x78c>
   28a64:	andeq	r7, r4, fp, ror #3
   28a68:			; <UNDEFINED> instruction: 0x000473b2
   28a6c:	andeq	r7, r4, fp, lsr #23
   28a70:			; <UNDEFINED> instruction: 0x01000193
   28a74:	tsthi	ip, r5, asr #27
   28a78:	strdeq	r7, [r4], -sp
   28a7c:	andeq	r7, r4, r4, lsl #4
   28a80:	strheq	sl, [r5], -r0
   28a84:	andeq	pc, r2, r6, lsl r8	; <UNPREDICTABLE>
   28a88:	andeq	r7, r4, r1, ror #23
   28a8c:	andeq	r7, r4, r9, ror #27
   28a90:	ldrdeq	r7, [r4], -r0
   28a94:	andeq	r7, r4, sl, lsl #25
   28a98:	andeq	r8, r4, r1, asr #13
   28a9c:	andeq	r7, r4, r7, lsl ip
   28aa0:	andeq	r7, r4, r1, asr #24
   28aa4:	andeq	r7, r4, sl, lsl lr
   28aa8:	andeq	r7, r4, ip, lsr #25
   28aac:	strdeq	r7, [r4], -lr
   28ab0:	andeq	r7, r4, r2, asr #26
   28ab4:	andeq	r7, r4, r3, ror sp
   28ab8:	andeq	r7, r4, pc, lsr #27
   28abc:	andeq	r7, r4, r6, asr lr
   28ac0:	andeq	r7, r4, r4, lsr r2
   28ac4:	andeq	r7, r4, r8, lsl #29
   28ac8:	muleq	r4, r7, lr
   28acc:			; <UNDEFINED> instruction: 0x00047eb9
   28ad0:	andeq	r7, r4, r8, lsr r1
   28ad4:	ldrdeq	r7, [r4], -lr
   28ad8:	muleq	r4, r8, pc	; <UNPREDICTABLE>
   28adc:	ldrdeq	r7, [r4], -r0
   28ae0:	andeq	r8, r4, ip
   28ae4:	andeq	r8, r4, fp, asr #32
   28ae8:	andeq	r8, r4, r2, lsl #1
   28aec:	andeq	r7, r4, fp, lsl pc
   28af0:	andeq	r7, r4, r6, lsr pc
   28af4:	andeq	r7, r4, r1, ror #30
   28af8:	andeq	r8, r4, r2, lsr #1
   28afc:	andeq	r8, r4, r9, asr #8
   28b00:			; <UNDEFINED> instruction: 0x000479b4
   28b04:	andeq	r7, r4, r4, lsl #20
   28b08:	andeq	r8, r4, pc, lsr #9
   28b0c:	ldrdeq	r8, [r4], -r4
   28b10:	strdeq	r8, [r4], -lr
   28b14:	andeq	r8, r4, r1, lsr #2
   28b18:	andeq	r8, r4, fp, asr #2
   28b1c:	andeq	r8, r4, r8, ror r1
   28b20:	andeq	r8, r4, r0, lsl #4
   28b24:	andeq	r8, r4, ip, lsr #4
   28b28:	andeq	r8, r4, lr, lsr #3
   28b2c:	ldrdeq	r8, [r4], -sl
   28b30:	andeq	r8, r4, ip, asr r2
   28b34:	andeq	r8, r4, ip, lsl #5
   28b38:	ldrdeq	r8, [r4], -r1
   28b3c:	andeq	r8, r4, r5, lsl #6
   28b40:	andeq	r8, r4, r8, ror r3
   28b44:			; <UNDEFINED> instruction: 0x000483b5
   28b48:	andeq	r8, r4, pc, ror #7
   28b4c:	andeq	r8, r4, r0, asr r3
   28b50:	andeq	r8, r4, sp, lsl #8
   28b54:	andeq	r8, r4, sp, lsr #8
   28b58:	andeq	r8, r4, pc, ror r4
   28b5c:	andeq	r7, r4, sp, asr #20
   28b60:	andeq	r7, r4, lr, lsr #21
   28b64:	andeq	r7, r4, sp, asr fp
   28b68:	andeq	r7, r4, r8, lsl #22
   28b6c:	andeq	r8, r4, r0, ror #9
   28b70:	strdeq	r8, [r4], -r6
   28b74:	andeq	r7, r4, r2, asr #4
   28b78:	andeq	r8, r4, r8, lsr #10
   28b7c:	andeq	r8, r4, r4, lsl #13
   28b80:	andeq	r8, r4, r1, asr r6
   28b84:	andeq	r8, r4, ip, asr #10
   28b88:	andeq	r8, r4, ip, ror #10
   28b8c:	andeq	r8, r4, ip, lsr #11
   28b90:	andeq	r8, r4, r9, ror #11
   28b94:	andeq	r8, r4, fp, lsl r6
   28b98:	andeq	r7, r4, r6, asr r2
   28b9c:			; <UNDEFINED> instruction: 0x000473b2
   28ba0:			; <UNDEFINED> instruction: 0x000486bb
   28ba4:	ldrdeq	r8, [r4], -r8	; <UNPREDICTABLE>
   28ba8:	andeq	r8, r4, ip, ror #13
   28bac:	andeq	r8, r4, r2, lsl r7
   28bb0:	mov	r3, #15
   28bb4:	cmp	r1, #4
   28bb8:	str	r8, [r5, #16]
   28bbc:	strh	r3, [r5, #24]
   28bc0:	ldrd	r2, [r8, #112]	; 0x70
   28bc4:	strd	r2, [r5, #88]	; 0x58
   28bc8:	ldrh	r3, [r8, #104]	; 0x68
   28bcc:	strh	r3, [r5, #74]	; 0x4a
   28bd0:	bne	28684 <__flatcc_fb_build_schema@@Base+0xbe8>
   28bd4:	cmp	r6, #0
   28bd8:	bne	2868c <__flatcc_fb_build_schema@@Base+0xbf0>
   28bdc:	ldr	r3, [sp, #16]
   28be0:	mov	r9, #0
   28be4:	cmp	r3, #0
   28be8:	ldrheq	r3, [sp, #8]
   28bec:	streq	r3, [r5, #96]	; 0x60
   28bf0:	ldreq	r3, [sp, #16]
   28bf4:	streq	r3, [r5, #100]	; 0x64
   28bf8:	ldr	r3, [sp, #8]
   28bfc:	adds	r3, r3, #1
   28c00:	str	r3, [sp, #8]
   28c04:	ldr	r3, [sp, #12]
   28c08:	adc	r3, r3, #0
   28c0c:	str	r3, [sp, #12]
   28c10:	ldr	r3, [sp, #16]
   28c14:	adds	r2, sl, #0
   28c18:	movne	r2, #1
   28c1c:	eor	r3, r3, #1
   28c20:	tst	r3, r2
   28c24:	ldrne	r2, [pc, #-236]	; 28b40 <__flatcc_fb_build_schema@@Base+0x10a4>
   28c28:	ldrne	r1, [sl, #4]
   28c2c:	bne	28c80 <__flatcc_fb_build_schema@@Base+0x11e4>
   28c30:	cmp	sl, #0
   28c34:	ldr	r3, [sp, #16]
   28c38:	movne	ip, #0
   28c3c:	andeq	ip, r3, #1
   28c40:	cmp	ip, #0
   28c44:	ldrne	r2, [pc, #-264]	; 28b44 <__flatcc_fb_build_schema@@Base+0x10a8>
   28c48:	bne	28c7c <__flatcc_fb_build_schema@@Base+0x11e0>
   28c4c:	cmp	sl, #0
   28c50:	moveq	r6, sl
   28c54:	beq	2868c <__flatcc_fb_build_schema@@Base+0xbf0>
   28c58:	ldrh	r3, [sl, #16]
   28c5c:	cmp	r3, #5
   28c60:	bne	28cd0 <__flatcc_fb_build_schema@@Base+0x1234>
   28c64:	ldrd	r0, [sl, #8]
   28c68:	ldrd	r2, [r4, #216]	; 0xd8
   28c6c:	cmp	r1, r3
   28c70:	cmpeq	r0, r2
   28c74:	bcc	28c98 <__flatcc_fb_build_schema@@Base+0x11fc>
   28c78:	ldr	r2, [pc, #-312]	; 28b48 <__flatcc_fb_build_schema@@Base+0x10ac>
   28c7c:	ldr	r1, [r5, #4]
   28c80:	mov	r0, r4
   28c84:	mov	r6, #1
   28c88:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28c8c:	b	2868c <__flatcc_fb_build_schema@@Base+0xbf0>
   28c90:	ldr	r2, [pc, #-332]	; 28b4c <__flatcc_fb_build_schema@@Base+0x10b0>
   28c94:	b	2878c <__flatcc_fb_build_schema@@Base+0xcf0>
   28c98:	uxth	r3, r0
   28c9c:	mov	r6, #0
   28ca0:	str	r3, [sp, #24]
   28ca4:	str	ip, [sp, #28]
   28ca8:	ldrd	r2, [sp, #24]
   28cac:	ldrd	r0, [sp, #24]
   28cb0:	strd	r2, [r5, #96]	; 0x60
   28cb4:	ldrd	r2, [sp, #32]
   28cb8:	cmp	r3, r1
   28cbc:	cmpeq	r2, r0
   28cc0:	movcc	r2, r0
   28cc4:	movcc	r3, r1
   28cc8:	strdcc	r2, [sp, #32]
   28ccc:	b	2868c <__flatcc_fb_build_schema@@Base+0xbf0>
   28cd0:	cmp	r3, #4
   28cd4:	ldr	r1, [sl, #4]
   28cd8:	ldreq	r2, [pc, #-400]	; 28b50 <__flatcc_fb_build_schema@@Base+0x10b4>
   28cdc:	ldrne	r2, [pc, #-400]	; 28b54 <__flatcc_fb_build_schema@@Base+0x10b8>
   28ce0:	b	28c80 <__flatcc_fb_build_schema@@Base+0x11e4>
   28ce4:	cmp	r6, #0
   28ce8:	moveq	r3, #1
   28cec:	strbeq	r3, [r2]
   28cf0:	beq	286cc <__flatcc_fb_build_schema@@Base+0xc30>
   28cf4:	ldr	r2, [pc, #-420]	; 28b58 <__flatcc_fb_build_schema@@Base+0x10bc>
   28cf8:	mov	r0, r4
   28cfc:	mov	r6, #0
   28d00:	ldr	r1, [sl, #4]
   28d04:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28d08:	b	286cc <__flatcc_fb_build_schema@@Base+0xc30>
   28d0c:	ldr	r1, [sp, #20]
   28d10:	sub	r0, r0, #1
   28d14:	ldr	r2, [sp, #20]
   28d18:	ldrb	r6, [r1, r0]
   28d1c:	add	r2, r2, r0
   28d20:	cmp	r6, #2
   28d24:	ldreq	r1, [pc, #-464]	; 28b5c <__flatcc_fb_build_schema@@Base+0x10c0>
   28d28:	ldreq	r2, [pc, #-464]	; 28b60 <__flatcc_fb_build_schema@@Base+0x10c4>
   28d2c:	beq	28710 <__flatcc_fb_build_schema@@Base+0xc74>
   28d30:	cmp	r6, #0
   28d34:	moveq	r3, #2
   28d38:	strbeq	r3, [r2]
   28d3c:	beq	28728 <__flatcc_fb_build_schema@@Base+0xc8c>
   28d40:	ldr	r1, [pc, #-484]	; 28b64 <__flatcc_fb_build_schema@@Base+0x10c8>
   28d44:	cmp	r3, #11
   28d48:	ldr	r2, [pc, #-488]	; 28b68 <__flatcc_fb_build_schema@@Base+0x10cc>
   28d4c:	movne	r2, r1
   28d50:	b	28718 <__flatcc_fb_build_schema@@Base+0xc7c>
   28d54:	mov	r3, r9
   28d58:	mov	r2, r8
   28d5c:	mov	r1, r5
   28d60:	add	r0, sp, #108	; 0x6c
   28d64:	bl	1401c <sprintf@plt>
   28d68:	add	r2, sp, #108	; 0x6c
   28d6c:	mov	r0, r4
   28d70:	ldr	r1, [r7, #4]
   28d74:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28d78:	mov	r3, r6
   28d7c:	adds	r8, r8, #1
   28d80:	adc	r9, r9, #0
   28d84:	ldrd	r0, [sp, #32]
   28d88:	cmp	r1, r9
   28d8c:	cmpeq	r0, r8
   28d90:	beq	28dc4 <__flatcc_fb_build_schema@@Base+0x1328>
   28d94:	ldr	r2, [sp, #20]
   28d98:	add	r2, r2, r8
   28d9c:	ldrb	r2, [r2]
   28da0:	cmp	r2, #0
   28da4:	bne	28d7c <__flatcc_fb_build_schema@@Base+0x12e0>
   28da8:	cmp	r3, #0
   28dac:	sub	r6, r3, #1
   28db0:	bne	28d54 <__flatcc_fb_build_schema@@Base+0x12b8>
   28db4:	ldr	r2, [pc, #-592]	; 28b6c <__flatcc_fb_build_schema@@Base+0x10d0>
   28db8:	mov	r0, r4
   28dbc:	ldr	r1, [r7, #4]
   28dc0:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28dc4:	ldr	r3, [sp, #40]	; 0x28
   28dc8:	cmp	r3, #0
   28dcc:	bne	281bc <__flatcc_fb_build_schema@@Base+0x720>
   28dd0:	b	281f0 <__flatcc_fb_build_schema@@Base+0x754>
   28dd4:	mov	r3, #10
   28dd8:	mov	r8, #0
   28ddc:	ldr	r5, [pc, #-628]	; 28b70 <__flatcc_fb_build_schema@@Base+0x10d4>
   28de0:	mov	r9, #0
   28de4:	b	28d84 <__flatcc_fb_build_schema@@Base+0x12e8>
   28de8:	ldrh	r3, [r7, #48]	; 0x30
   28dec:	cmp	r3, #1
   28df0:	beq	280e4 <__flatcc_fb_build_schema@@Base+0x648>
   28df4:	cmp	r3, #0
   28df8:	ldrne	r3, [pc, #-652]	; 28b74 <__flatcc_fb_build_schema@@Base+0x10d8>
   28dfc:	movwne	r2, #1129	; 0x469
   28e00:	bne	28108 <__flatcc_fb_build_schema@@Base+0x66c>
   28e04:	ldr	r3, [r7, #28]
   28e08:	cmp	r3, #0
   28e0c:	beq	28e20 <__flatcc_fb_build_schema@@Base+0x1384>
   28e10:	ldr	r2, [pc, #-672]	; 28b78 <__flatcc_fb_build_schema@@Base+0x10dc>
   28e14:	mov	r0, r4
   28e18:	ldr	r1, [r7, #4]
   28e1c:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28e20:	ldr	r8, [pc, #-684]	; 28b7c <__flatcc_fb_build_schema@@Base+0x10e0>
   28e24:	ldr	r9, [pc, #-684]	; 28b80 <__flatcc_fb_build_schema@@Base+0x10e4>
   28e28:	ldr	r5, [r7, #20]
   28e2c:	cmp	r5, #0
   28e30:	beq	280e4 <__flatcc_fb_build_schema@@Base+0x648>
   28e34:	mov	r2, #1
   28e38:	mov	r1, r5
   28e3c:	add	r0, r7, #56	; 0x38
   28e40:	bl	22514 <fb_symbol_table_insert_item@@Base>
   28e44:	cmp	r0, #0
   28e48:	beq	28e68 <__flatcc_fb_build_schema@@Base+0x13cc>
   28e4c:	ldr	r2, [pc, #-720]	; 28b84 <__flatcc_fb_build_schema@@Base+0x10e8>
   28e50:	ldr	r3, [r0, #4]
   28e54:	mov	r0, r4
   28e58:	ldr	r1, [r5, #4]
   28e5c:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   28e60:	ldr	r5, [r5]
   28e64:	b	28e2c <__flatcc_fb_build_schema@@Base+0x1390>
   28e68:	ldrh	r3, [r5, #8]
   28e6c:	cmp	r3, #5
   28e70:	bne	2823c <__flatcc_fb_build_schema@@Base+0x7a0>
   28e74:	ldrh	r3, [r5, #56]	; 0x38
   28e78:	cmp	r3, #0
   28e7c:	beq	28e90 <__flatcc_fb_build_schema@@Base+0x13f4>
   28e80:	ldr	r2, [pc, #-768]	; 28b88 <__flatcc_fb_build_schema@@Base+0x10ec>
   28e84:	mov	r0, r4
   28e88:	ldr	r1, [r5, #4]
   28e8c:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28e90:	ldrh	r3, [r5, #24]
   28e94:	cmp	r3, #1
   28e98:	beq	28e60 <__flatcc_fb_build_schema@@Base+0x13c4>
   28e9c:	cmp	r3, #12
   28ea0:	beq	28eb4 <__flatcc_fb_build_schema@@Base+0x1418>
   28ea4:	ldr	r2, [pc, #-800]	; 28b8c <__flatcc_fb_build_schema@@Base+0x10f0>
   28ea8:	mov	r0, r4
   28eac:	ldr	r1, [r5, #4]
   28eb0:	bl	26c18 <__flatcc_fb_clear_parser@@Base+0x120>
   28eb4:	mov	r3, #0
   28eb8:	mov	r0, r4
   28ebc:	ldr	r1, [r7, #12]
   28ec0:	ldr	r2, [r5, #32]
   28ec4:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   28ec8:	cmp	r0, #0
   28ecc:	bne	28ee8 <__flatcc_fb_build_schema@@Base+0x144c>
   28ed0:	ldr	r2, [pc, #-840]	; 28b90 <__flatcc_fb_build_schema@@Base+0x10f4>
   28ed4:	mov	r3, r5
   28ed8:	ldr	r1, [r5, #32]
   28edc:	mov	r0, r4
   28ee0:	bl	248d0 <error_ref_sym@@Base>
   28ee4:	b	28f08 <__flatcc_fb_build_schema@@Base+0x146c>
   28ee8:	ldrh	r3, [r0, #8]
   28eec:	cmp	r3, #0
   28ef0:	beq	28f14 <__flatcc_fb_build_schema@@Base+0x1478>
   28ef4:	ldr	r2, [pc, #-872]	; 28b94 <__flatcc_fb_build_schema@@Base+0x10f8>
   28ef8:	ldr	r3, [r0, #4]
   28efc:	mov	r0, r4
   28f00:	ldr	r1, [r5, #4]
   28f04:	bl	26bfc <__flatcc_fb_clear_parser@@Base+0x104>
   28f08:	mov	r3, #1
   28f0c:	strh	r3, [r5, #24]
   28f10:	b	28e60 <__flatcc_fb_build_schema@@Base+0x13c4>
   28f14:	mov	r6, #14
   28f18:	ldr	r1, [r7, #12]
   28f1c:	str	r0, [r5, #32]
   28f20:	mov	r0, r4
   28f24:	strh	r6, [r5, #40]	; 0x28
   28f28:	ldr	r2, [r5, #16]
   28f2c:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   28f30:	cmp	r0, #0
   28f34:	bne	28f48 <__flatcc_fb_build_schema@@Base+0x14ac>
   28f38:	mov	r3, r5
   28f3c:	mov	r2, r9
   28f40:	ldr	r1, [r5, #16]
   28f44:	b	28edc <__flatcc_fb_build_schema@@Base+0x1440>
   28f48:	ldrh	r3, [r0, #8]
   28f4c:	cmp	r3, #0
   28f50:	movne	r2, r8
   28f54:	ldrne	r3, [r0, #4]
   28f58:	bne	28efc <__flatcc_fb_build_schema@@Base+0x1460>
   28f5c:	mov	r2, #0
   28f60:	mov	r3, #0
   28f64:	str	r0, [r5, #16]
   28f68:	mov	r0, r4
   28f6c:	strh	r6, [r5, #24]
   28f70:	strd	r2, [r5, #88]	; 0x58
   28f74:	add	r3, sp, #108	; 0x6c
   28f78:	mov	r2, #4
   28f7c:	ldr	r1, [r5, #64]	; 0x40
   28f80:	bl	26c20 <__flatcc_fb_clear_parser@@Base+0x128>
   28f84:	strh	r0, [r5, #72]	; 0x48
   28f88:	b	28e60 <__flatcc_fb_build_schema@@Base+0x13c4>
   28f8c:	ldr	r2, [r3, #120]	; 0x78
   28f90:	str	r7, [r3, #120]	; 0x78
   28f94:	mov	r7, r3
   28f98:	mov	r3, r2
   28f9c:	b	27d20 <__flatcc_fb_build_schema@@Base+0x284>
   28fa0:	ldrh	r3, [r5, #8]
   28fa4:	cmp	r3, #0
   28fa8:	bne	29078 <__flatcc_fb_build_schema@@Base+0x15dc>
   28fac:	ldrh	r8, [r5, #92]	; 0x5c
   28fb0:	ldr	r6, [r5, #20]
   28fb4:	ands	r8, r8, #8
   28fb8:	strne	r3, [sp, #108]	; 0x6c
   28fbc:	addne	r3, sp, #108	; 0x6c
   28fc0:	bne	29064 <__flatcc_fb_build_schema@@Base+0x15c8>
   28fc4:	mov	r2, #36	; 0x24
   28fc8:	mov	r1, r8
   28fcc:	add	r0, sp, #60	; 0x3c
   28fd0:	bl	13fc8 <memset@plt>
   28fd4:	mov	r2, #36	; 0x24
   28fd8:	mov	r1, r8
   28fdc:	add	r0, sp, #108	; 0x6c
   28fe0:	bl	13fc8 <memset@plt>
   28fe4:	mov	r3, r6
   28fe8:	movw	r0, #34432	; 0x8680
   28fec:	cmp	r3, #0
   28ff0:	bne	29080 <__flatcc_fb_build_schema@@Base+0x15e4>
   28ff4:	add	r3, sp, #92	; 0x5c
   28ff8:	mov	r2, #8
   28ffc:	str	r3, [sp, #140]	; 0x8c
   29000:	sub	r1, r2, #1
   29004:	add	r3, sp, #60	; 0x3c
   29008:	uxth	r1, r1
   2900c:	add	r1, r3, r1, lsl #2
   29010:	mov	r3, r2
   29014:	ldr	r0, [r1], #-4
   29018:	sub	r3, r3, #1
   2901c:	uxth	r3, r3
   29020:	cmp	r0, #0
   29024:	bne	29030 <__flatcc_fb_build_schema@@Base+0x1594>
   29028:	cmp	r3, #0
   2902c:	bne	29014 <__flatcc_fb_build_schema@@Base+0x1578>
   29030:	add	r1, sp, #208	; 0xd0
   29034:	add	r0, sp, #208	; 0xd0
   29038:	add	r1, r1, r3, lsl #2
   2903c:	cmp	r3, #0
   29040:	add	r2, r0, r2, lsl #2
   29044:	ldr	r1, [r1, #-148]	; 0xffffff6c
   29048:	ldr	r2, [r2, #-100]	; 0xffffff9c
   2904c:	str	r1, [r2]
   29050:	bne	29164 <__flatcc_fb_build_schema@@Base+0x16c8>
   29054:	ldr	r3, [sp, #92]	; 0x5c
   29058:	b	29074 <__flatcc_fb_build_schema@@Base+0x15d8>
   2905c:	mov	r3, r6
   29060:	ldr	r6, [r3], #108	; 0x6c
   29064:	cmp	r6, #0
   29068:	str	r6, [r3]
   2906c:	bne	2905c <__flatcc_fb_build_schema@@Base+0x15c0>
   29070:	ldr	r3, [sp, #108]	; 0x6c
   29074:	str	r3, [r5, #24]
   29078:	ldr	r5, [r5]
   2907c:	b	27d34 <__flatcc_fb_build_schema@@Base+0x298>
   29080:	ldrh	r2, [r3, #24]
   29084:	ldrh	r1, [r3, #74]	; 0x4a
   29088:	cmp	r2, #15
   2908c:	bhi	290c8 <__flatcc_fb_build_schema@@Base+0x162c>
   29090:	lsl	r2, r7, r2
   29094:	ands	ip, r2, r0
   29098:	bne	290e4 <__flatcc_fb_build_schema@@Base+0x1648>
   2909c:	tst	r2, #2
   290a0:	bne	290ec <__flatcc_fb_build_schema@@Base+0x1650>
   290a4:	tst	r2, #16384	; 0x4000
   290a8:	beq	290c8 <__flatcc_fb_build_schema@@Base+0x162c>
   290ac:	ldr	r2, [r3, #16]
   290b0:	ldrh	r1, [r2, #8]
   290b4:	cmp	r1, #1
   290b8:	beq	290c4 <__flatcc_fb_build_schema@@Base+0x1628>
   290bc:	cmp	r1, #3
   290c0:	bne	290e4 <__flatcc_fb_build_schema@@Base+0x1648>
   290c4:	ldrh	r1, [r2, #104]	; 0x68
   290c8:	cmp	r1, #0
   290cc:	bne	29110 <__flatcc_fb_build_schema@@Base+0x1674>
   290d0:	ldr	r3, [pc, #-1344]	; 28b98 <__flatcc_fb_build_schema@@Base+0x10fc>
   290d4:	movw	r2, #1521	; 0x5f1
   290d8:	ldr	r1, [pc, #-1348]	; 28b9c <__flatcc_fb_build_schema@@Base+0x1100>
   290dc:	ldr	r0, [pc, #-1348]	; 28ba0 <__flatcc_fb_build_schema@@Base+0x1104>
   290e0:	b	27ad4 <__flatcc_fb_build_schema@@Base+0x38>
   290e4:	ldrh	r1, [r4, #192]	; 0xc0
   290e8:	b	290c8 <__flatcc_fb_build_schema@@Base+0x162c>
   290ec:	add	r3, sp, #56	; 0x38
   290f0:	str	ip, [sp, #56]	; 0x38
   290f4:	cmp	r6, #0
   290f8:	str	r6, [r3]
   290fc:	ldreq	r3, [sp, #56]	; 0x38
   29100:	beq	29074 <__flatcc_fb_build_schema@@Base+0x15d8>
   29104:	mov	r3, r6
   29108:	ldr	r6, [r3], #108	; 0x6c
   2910c:	b	290f4 <__flatcc_fb_build_schema@@Base+0x1658>
   29110:	mov	ip, #0
   29114:	lsrs	r1, r1, #1
   29118:	uxth	r2, ip
   2911c:	add	ip, ip, #1
   29120:	bne	29114 <__flatcc_fb_build_schema@@Base+0x1678>
   29124:	cmp	r2, #7
   29128:	add	r1, sp, #208	; 0xd0
   2912c:	movcs	r2, #7
   29130:	lsl	r2, r2, #2
   29134:	add	r1, r1, r2
   29138:	ldr	ip, [r1, #-148]	; 0xffffff6c
   2913c:	cmp	ip, #0
   29140:	ldrne	r1, [r1, #-100]	; 0xffffff9c
   29144:	streq	r3, [r1, #-148]	; 0xffffff6c
   29148:	strne	r3, [r1]
   2914c:	add	r1, sp, #208	; 0xd0
   29150:	add	r2, r1, r2
   29154:	add	r1, r3, #108	; 0x6c
   29158:	ldr	r3, [r3]
   2915c:	str	r1, [r2, #-100]	; 0xffffff9c
   29160:	b	28fec <__flatcc_fb_build_schema@@Base+0x1550>
   29164:	mov	r2, r3
   29168:	b	29000 <__flatcc_fb_build_schema@@Base+0x1564>
   2916c:	mov	r3, r5
   29170:	mov	r0, r4
   29174:	ldr	r1, [r4, #408]	; 0x198
   29178:	bl	26e90 <__flatcc_fb_clear_parser@@Base+0x398>
   2917c:	cmp	r0, #0
   29180:	str	r0, [r4, #404]	; 0x194
   29184:	moveq	r3, r5
   29188:	ldreq	r2, [pc, #-1516]	; 28ba4 <__flatcc_fb_build_schema@@Base+0x1108>
   2918c:	beq	291cc <__flatcc_fb_build_schema@@Base+0x1730>
   29190:	ldr	r2, [r4, #176]	; 0xb0
   29194:	ldrh	r3, [r0, #8]
   29198:	cmp	r2, #0
   2919c:	beq	291bc <__flatcc_fb_build_schema@@Base+0x1720>
   291a0:	cmp	r3, #1
   291a4:	movhi	r3, r5
   291a8:	ldrhi	r2, [pc, #-1544]	; 28ba8 <__flatcc_fb_build_schema@@Base+0x110c>
   291ac:	bhi	291cc <__flatcc_fb_build_schema@@Base+0x1730>
   291b0:	mov	r3, #0
   291b4:	str	r3, [r4, #400]	; 0x190
   291b8:	b	27d64 <__flatcc_fb_build_schema@@Base+0x2c8>
   291bc:	cmp	r3, #0
   291c0:	beq	291b0 <__flatcc_fb_build_schema@@Base+0x1714>
   291c4:	ldr	r2, [pc, #-1568]	; 28bac <__flatcc_fb_build_schema@@Base+0x1110>
   291c8:	mov	r3, r5
   291cc:	mov	r0, r4
   291d0:	ldr	r1, [r4, #400]	; 0x190
   291d4:	bl	248d0 <error_ref_sym@@Base>
   291d8:	b	291b0 <__flatcc_fb_build_schema@@Base+0x1714>
   291dc:	strh	r0, [r6, #104]	; 0x68
   291e0:	b	27e5c <__flatcc_fb_build_schema@@Base+0x3c0>
   291e4:	ldr	r3, [sp, #16]
   291e8:	cmp	r3, #0
   291ec:	beq	280e4 <__flatcc_fb_build_schema@@Base+0x648>
   291f0:	b	281f0 <__flatcc_fb_build_schema@@Base+0x754>
   291f4:	ldr	r3, [sp, #40]	; 0x28
   291f8:	cmp	r3, #0
   291fc:	bne	281b8 <__flatcc_fb_build_schema@@Base+0x71c>
   29200:	b	281f0 <__flatcc_fb_build_schema@@Base+0x754>
   29204:	ldr	r3, [sp, #40]	; 0x28
   29208:	cmp	r3, #0
   2920c:	beq	280e4 <__flatcc_fb_build_schema@@Base+0x648>
   29210:	b	281bc <__flatcc_fb_build_schema@@Base+0x720>
   29214:	mov	r3, #0
   29218:	push	{r0, r1, r2, lr}
   2921c:	str	r3, [sp]
   29220:	str	r3, [sp, #4]
   29224:	bl	23acc <__flatcc_error_report@@Base>
   29228:	add	sp, sp, #12
   2922c:	pop	{pc}		; (ldr pc, [sp], #4)

00029230 <__flatcc_fb_coerce_scalar_type@@Base>:
   29230:	ldrh	ip, [r3, #8]
   29234:	cmp	ip, #0
   29238:	bne	29244 <__flatcc_fb_coerce_scalar_type@@Base+0x14>
   2923c:	mov	r0, #0
   29240:	bx	lr
   29244:	cmp	ip, #4
   29248:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2924c:	vpush	{d8}
   29250:	bne	29268 <__flatcc_fb_coerce_scalar_type@@Base+0x38>
   29254:	ldrd	r4, [r3]
   29258:	cmp	r4, #0
   2925c:	sbcs	ip, r5, #0
   29260:	movge	ip, #5
   29264:	strhge	ip, [r3, #8]
   29268:	ldrh	ip, [r3, #8]
   2926c:	cmp	ip, #1
   29270:	beq	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29274:	cmp	ip, #6
   29278:	mov	r4, r3
   2927c:	mov	sl, r1
   29280:	mov	r5, r0
   29284:	bne	292d0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
   29288:	cmp	r2, #5
   2928c:	beq	29500 <__flatcc_fb_coerce_scalar_type@@Base+0x2d0>
   29290:	ldr	r3, [r0, #144]	; 0x90
   29294:	cmp	r3, #0
   29298:	beq	292d0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
   2929c:	ldrb	r0, [r4]
   292a0:	mov	r1, #0
   292a4:	mov	r3, #5
   292a8:	cmp	r1, #0
   292ac:	cmpeq	r0, #1
   292b0:	strd	r0, [r4]
   292b4:	strh	r3, [r4, #8]
   292b8:	bls	292d0 <__flatcc_fb_coerce_scalar_type@@Base+0xa0>
   292bc:	ldr	r3, [pc, #884]	; 29638 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   292c0:	mov	r2, #52	; 0x34
   292c4:	ldr	r1, [pc, #880]	; 2963c <__flatcc_fb_coerce_scalar_type@@Base+0x40c>
   292c8:	ldr	r0, [pc, #880]	; 29640 <__flatcc_fb_coerce_scalar_type@@Base+0x410>
   292cc:	bl	14070 <__assert_fail@plt>
   292d0:	sub	r2, r2, #1
   292d4:	cmp	r2, #10
   292d8:	ldrls	pc, [pc, r2, lsl #2]
   292dc:	b	29630 <__flatcc_fb_coerce_scalar_type@@Base+0x400>
   292e0:	andeq	r9, r2, ip, lsl #6
   292e4:	andeq	r9, r2, r4, lsr #6
   292e8:	andeq	r9, r2, r0, ror r3
   292ec:	andeq	r9, r2, r0, lsr #7
   292f0:	andeq	r9, r2, r0, lsl #10
   292f4:	andeq	r9, r2, r8, asr #7
   292f8:	andeq	r9, r2, r4, lsl #8
   292fc:	andeq	r9, r2, r8, asr r4
   29300:	andeq	r9, r2, ip, lsr #9
   29304:	andeq	r9, r2, r0, asr #10
   29308:			; <UNDEFINED> instruction: 0x000295bc
   2930c:	ldrh	r3, [r4, #8]
   29310:	cmp	r3, #5
   29314:	ldrne	r2, [pc, #808]	; 29644 <__flatcc_fb_coerce_scalar_type@@Base+0x414>
   29318:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   2931c:	mov	r0, #0
   29320:	b	29368 <__flatcc_fb_coerce_scalar_type@@Base+0x138>
   29324:	ldrh	r3, [r4, #8]
   29328:	cmp	r3, #5
   2932c:	ldrne	r2, [pc, #788]	; 29648 <__flatcc_fb_coerce_scalar_type@@Base+0x418>
   29330:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29334:	mov	r1, #0
   29338:	mvn	r0, #0
   2933c:	ldrd	r2, [r4]
   29340:	cmp	r3, r1
   29344:	cmpeq	r2, r0
   29348:	ldrhi	r2, [pc, #764]	; 2964c <__flatcc_fb_coerce_scalar_type@@Base+0x41c>
   2934c:	bls	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29350:	mov	r0, r5
   29354:	ldr	r1, [sl, #4]
   29358:	bl	29214 <__flatcc_fb_build_schema@@Base+0x1778>
   2935c:	mov	r3, #1
   29360:	mvn	r0, #0
   29364:	strh	r3, [r4, #8]
   29368:	vpop	{d8}
   2936c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29370:	ldrh	r3, [r4, #8]
   29374:	cmp	r3, #5
   29378:	ldrne	r2, [pc, #720]	; 29650 <__flatcc_fb_coerce_scalar_type@@Base+0x420>
   2937c:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29380:	mov	r1, #0
   29384:	movw	r0, #65535	; 0xffff
   29388:	ldrd	r2, [r4]
   2938c:	cmp	r3, r1
   29390:	cmpeq	r2, r0
   29394:	ldrhi	r2, [pc, #696]	; 29654 <__flatcc_fb_coerce_scalar_type@@Base+0x424>
   29398:	bls	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   2939c:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   293a0:	ldrh	r3, [r4, #8]
   293a4:	cmp	r3, #5
   293a8:	ldrne	r2, [pc, #680]	; 29658 <__flatcc_fb_coerce_scalar_type@@Base+0x428>
   293ac:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   293b0:	ldrd	r2, [r4]
   293b4:	cmp	r3, #0
   293b8:	cmpeq	r2, #255	; 0xff
   293bc:	ldrhi	r2, [pc, #664]	; 2965c <__flatcc_fb_coerce_scalar_type@@Base+0x42c>
   293c0:	bls	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   293c4:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   293c8:	ldrh	r3, [r4, #8]
   293cc:	cmp	r3, #4
   293d0:	beq	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   293d4:	cmp	r3, #5
   293d8:	bne	293fc <__flatcc_fb_coerce_scalar_type@@Base+0x1cc>
   293dc:	ldrd	r2, [r4]
   293e0:	cmp	r2, #0
   293e4:	sbcs	r3, r3, #0
   293e8:	ldrlt	r2, [pc, #624]	; 29660 <__flatcc_fb_coerce_scalar_type@@Base+0x430>
   293ec:	blt	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   293f0:	mov	r3, #4
   293f4:	strh	r3, [r4, #8]
   293f8:	b	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   293fc:	ldr	r2, [pc, #608]	; 29664 <__flatcc_fb_coerce_scalar_type@@Base+0x434>
   29400:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29404:	ldrh	r3, [r4, #8]
   29408:	cmp	r3, #4
   2940c:	bne	29430 <__flatcc_fb_coerce_scalar_type@@Base+0x200>
   29410:	ldrd	r2, [r4]
   29414:	mov	r0, #-2147483648	; 0x80000000
   29418:	mvn	r1, #0
   2941c:	cmp	r2, r0
   29420:	sbcs	r3, r3, r1
   29424:	ldrlt	r2, [pc, #572]	; 29668 <__flatcc_fb_coerce_scalar_type@@Base+0x438>
   29428:	bge	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   2942c:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29430:	cmp	r3, #5
   29434:	bne	29450 <__flatcc_fb_coerce_scalar_type@@Base+0x220>
   29438:	ldrd	r2, [r4]
   2943c:	cmp	r2, #-2147483648	; 0x80000000
   29440:	sbcs	r3, r3, #0
   29444:	ldrge	r2, [pc, #544]	; 2966c <__flatcc_fb_coerce_scalar_type@@Base+0x43c>
   29448:	blt	293f0 <__flatcc_fb_coerce_scalar_type@@Base+0x1c0>
   2944c:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29450:	ldr	r2, [pc, #536]	; 29670 <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   29454:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29458:	ldrh	r3, [r4, #8]
   2945c:	cmp	r3, #4
   29460:	bne	29484 <__flatcc_fb_coerce_scalar_type@@Base+0x254>
   29464:	ldr	r0, [pc, #520]	; 29674 <__flatcc_fb_coerce_scalar_type@@Base+0x444>
   29468:	mvn	r1, #0
   2946c:	ldrd	r2, [r4]
   29470:	cmp	r2, r0
   29474:	sbcs	r3, r3, r1
   29478:	ldrlt	r2, [pc, #504]	; 29678 <__flatcc_fb_coerce_scalar_type@@Base+0x448>
   2947c:	bge	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29480:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29484:	cmp	r3, #5
   29488:	bne	294a4 <__flatcc_fb_coerce_scalar_type@@Base+0x274>
   2948c:	ldrd	r2, [r4]
   29490:	cmp	r2, #32768	; 0x8000
   29494:	sbcs	r3, r3, #0
   29498:	ldrge	r2, [pc, #476]	; 2967c <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   2949c:	blt	293f0 <__flatcc_fb_coerce_scalar_type@@Base+0x1c0>
   294a0:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   294a4:	ldr	r2, [pc, #468]	; 29680 <__flatcc_fb_coerce_scalar_type@@Base+0x450>
   294a8:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   294ac:	ldrh	r3, [r4, #8]
   294b0:	cmp	r3, #4
   294b4:	bne	294d8 <__flatcc_fb_coerce_scalar_type@@Base+0x2a8>
   294b8:	ldrd	r2, [r4]
   294bc:	mvn	r0, #127	; 0x7f
   294c0:	mvn	r1, #0
   294c4:	cmp	r2, r0
   294c8:	sbcs	r3, r3, r1
   294cc:	ldrlt	r2, [pc, #432]	; 29684 <__flatcc_fb_coerce_scalar_type@@Base+0x454>
   294d0:	bge	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   294d4:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   294d8:	cmp	r3, #5
   294dc:	bne	294f8 <__flatcc_fb_coerce_scalar_type@@Base+0x2c8>
   294e0:	ldrd	r2, [r4]
   294e4:	cmp	r2, #128	; 0x80
   294e8:	sbcs	r3, r3, #0
   294ec:	ldrge	r2, [pc, #404]	; 29688 <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   294f0:	blt	293f0 <__flatcc_fb_coerce_scalar_type@@Base+0x1c0>
   294f4:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   294f8:	ldr	r2, [pc, #396]	; 2968c <__flatcc_fb_coerce_scalar_type@@Base+0x45c>
   294fc:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29500:	ldrh	r3, [r4, #8]
   29504:	cmp	r3, #5
   29508:	bne	29530 <__flatcc_fb_coerce_scalar_type@@Base+0x300>
   2950c:	ldr	r3, [r5, #144]	; 0x90
   29510:	cmp	r3, #0
   29514:	beq	29538 <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   29518:	ldrd	r2, [r4]
   2951c:	cmp	r3, #0
   29520:	cmpeq	r2, #1
   29524:	ldrhi	r2, [pc, #356]	; 29690 <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   29528:	bls	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   2952c:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29530:	cmp	r3, #6
   29534:	beq	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29538:	ldr	r2, [pc, #340]	; 29694 <__flatcc_fb_coerce_scalar_type@@Base+0x464>
   2953c:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29540:	ldrh	r3, [r4, #8]
   29544:	cmp	r3, #4
   29548:	beq	29564 <__flatcc_fb_coerce_scalar_type@@Base+0x334>
   2954c:	cmp	r3, #5
   29550:	beq	2959c <__flatcc_fb_coerce_scalar_type@@Base+0x36c>
   29554:	cmp	r3, #3
   29558:	ldrne	r2, [pc, #312]	; 29698 <__flatcc_fb_coerce_scalar_type@@Base+0x468>
   2955c:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29560:	b	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   29564:	ldrd	r6, [r4]
   29568:	mov	r0, r6
   2956c:	mov	r1, r7
   29570:	bl	2e304 <fb_value_set_visit@@Base+0x364>
   29574:	mov	r8, r0
   29578:	mov	r9, r1
   2957c:	bl	2e62c <fb_value_set_visit@@Base+0x68c>
   29580:	cmp	r7, r1
   29584:	cmpeq	r6, r0
   29588:	ldrne	r2, [pc, #268]	; 2969c <__flatcc_fb_coerce_scalar_type@@Base+0x46c>
   2958c:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29590:	strd	r8, [r4]
   29594:	mov	r3, #3
   29598:	b	293f4 <__flatcc_fb_coerce_scalar_type@@Base+0x1c4>
   2959c:	ldrd	r6, [r4]
   295a0:	mov	r0, r6
   295a4:	mov	r1, r7
   295a8:	bl	2e2f0 <fb_value_set_visit@@Base+0x350>
   295ac:	mov	r8, r0
   295b0:	mov	r9, r1
   295b4:	bl	2e698 <fb_value_set_visit@@Base+0x6f8>
   295b8:	b	29580 <__flatcc_fb_coerce_scalar_type@@Base+0x350>
   295bc:	ldrh	r3, [r4, #8]
   295c0:	cmp	r3, #4
   295c4:	beq	295e0 <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   295c8:	cmp	r3, #5
   295cc:	beq	29614 <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   295d0:	cmp	r3, #3
   295d4:	ldrne	r2, [pc, #196]	; 296a0 <__flatcc_fb_coerce_scalar_type@@Base+0x470>
   295d8:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   295dc:	b	2931c <__flatcc_fb_coerce_scalar_type@@Base+0xec>
   295e0:	ldrd	r6, [r4]
   295e4:	mov	r0, r6
   295e8:	mov	r1, r7
   295ec:	bl	2e538 <fb_value_set_visit@@Base+0x598>
   295f0:	vmov	s16, r0
   295f4:	bl	2e600 <fb_value_set_visit@@Base+0x660>
   295f8:	cmp	r7, r1
   295fc:	cmpeq	r6, r0
   29600:	ldrne	r2, [pc, #156]	; 296a4 <__flatcc_fb_coerce_scalar_type@@Base+0x474>
   29604:	bne	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29608:	vcvt.f64.f32	d8, s16
   2960c:	vstr	d8, [r4]
   29610:	b	29594 <__flatcc_fb_coerce_scalar_type@@Base+0x364>
   29614:	ldrd	r6, [r4]
   29618:	mov	r0, r6
   2961c:	mov	r1, r7
   29620:	bl	2e528 <fb_value_set_visit@@Base+0x588>
   29624:	vmov	s16, r0
   29628:	bl	2e658 <fb_value_set_visit@@Base+0x6b8>
   2962c:	b	295f8 <__flatcc_fb_coerce_scalar_type@@Base+0x3c8>
   29630:	ldr	r2, [pc, #112]	; 296a8 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   29634:	b	29350 <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   29638:	muleq	r4, r4, r7
   2963c:			; <UNDEFINED> instruction: 0x000487b3
   29640:	strdeq	r8, [r4], -r9
   29644:	andeq	r8, r4, r8, lsl r8
   29648:	andeq	r8, r4, ip, asr #16
   2964c:	andeq	r8, r4, r4, lsl #17
   29650:	andeq	r8, r4, r1, lsr #17
   29654:	ldrdeq	r8, [r4], -fp
   29658:	strdeq	r8, [r4], -sl
   2965c:	andeq	r8, r4, r2, lsr r9
   29660:	andeq	r8, r4, pc, asr #18
   29664:	andeq	r8, r4, lr, ror #18
   29668:	muleq	r4, r8, r9
   2966c:			; <UNDEFINED> instruction: 0x000489b4
   29670:	andeq	r8, r4, pc, asr #19
   29674:			; <UNDEFINED> instruction: 0xffff8000
   29678:	strdeq	r8, [r4], -ip
   2967c:	andeq	r8, r4, sl, lsl sl
   29680:	andeq	r8, r4, r7, lsr sl
   29684:	andeq	r8, r4, r6, ror #20
   29688:	andeq	r8, r4, r2, lsl #21
   2968c:	muleq	r4, sp, sl
   29690:	andeq	r8, r4, sl, asr #21
   29694:	andeq	r8, r4, r8, lsl #22
   29698:	andeq	r8, r4, lr, ror #22
   2969c:	andeq	r8, r4, lr, lsr fp
   296a0:	ldrdeq	r8, [r4], -r6
   296a4:	andeq	r8, r4, r7, lsr #23
   296a8:	andeq	r8, r4, lr, lsl #24
   296ac:	ldr	ip, [r0, #28]
   296b0:	ldrd	r2, [r0, #60]	; 0x3c
   296b4:	sub	r3, r3, ip
   296b8:	add	r2, r2, ip
   296bc:	cmp	r3, r1
   296c0:	strls	r3, [r0, #24]
   296c4:	strhi	r1, [r0, #24]
   296c8:	ldr	r3, [r0, #32]
   296cc:	str	r2, [r0, #16]
   296d0:	str	r1, [r3, #4]
   296d4:	bx	lr
   296d8:	push	{r0, r1, r4, r5, r6, lr}
   296dc:	mov	r6, r2
   296e0:	mov	r3, #1
   296e4:	mov	r4, r0
   296e8:	ldr	r2, [r0, #28]
   296ec:	str	r3, [sp]
   296f0:	ldr	r5, [r0, #48]	; 0x30
   296f4:	add	r2, r1, r2
   296f8:	add	r1, r0, #60	; 0x3c
   296fc:	ldr	r0, [r0, #40]	; 0x28
   29700:	blx	r5
   29704:	subs	r5, r0, #0
   29708:	mvnne	r5, #0
   2970c:	bne	2971c <__flatcc_fb_coerce_scalar_type@@Base+0x4ec>
   29710:	mov	r1, r6
   29714:	mov	r0, r4
   29718:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2971c:	mov	r0, r5
   29720:	add	sp, sp, #8
   29724:	pop	{r4, r5, r6, pc}
   29728:	push	{r4, r5, r6, lr}
   2972c:	mov	r4, r0
   29730:	ldr	r5, [r0, #20]
   29734:	ldr	r3, [r0, #24]
   29738:	add	r1, r5, r1
   2973c:	cmp	r1, r3
   29740:	str	r1, [r0, #20]
   29744:	bcs	29754 <__flatcc_fb_coerce_scalar_type@@Base+0x524>
   29748:	ldr	r0, [r4, #16]
   2974c:	add	r0, r0, r5
   29750:	pop	{r4, r5, r6, pc}
   29754:	mvn	r2, #3
   29758:	add	r1, r1, #1
   2975c:	bl	296d8 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   29760:	cmp	r0, #0
   29764:	beq	29748 <__flatcc_fb_coerce_scalar_type@@Base+0x518>
   29768:	mov	r0, #0
   2976c:	pop	{r4, r5, r6, pc}
   29770:	push	{r4, lr}
   29774:	mov	r1, #0
   29778:	mov	r4, r0
   2977c:	ldr	r2, [r0, #20]
   29780:	ldr	r0, [r0, #16]
   29784:	bl	13fc8 <memset@plt>
   29788:	ldr	r3, [r4, #32]
   2978c:	mov	r0, r4
   29790:	ldmib	r3, {r1, r2}
   29794:	str	r2, [r4, #20]
   29798:	ldr	r2, [r3]
   2979c:	str	r2, [r4, #28]
   297a0:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   297a4:	ldrh	r3, [r4, #130]	; 0x82
   297a8:	ldrh	r2, [r4, #128]	; 0x80
   297ac:	cmp	r2, r3
   297b0:	strhcc	r3, [r4, #128]	; 0x80
   297b4:	ldr	r3, [r4, #32]
   297b8:	ldrh	r2, [r3, #12]
   297bc:	sub	r3, r3, #36	; 0x24
   297c0:	str	r3, [r4, #32]
   297c4:	ldr	r3, [r4, #156]	; 0x9c
   297c8:	strh	r2, [r4, #130]	; 0x82
   297cc:	sub	r3, r3, #1
   297d0:	str	r3, [r4, #156]	; 0x9c
   297d4:	pop	{r4, pc}
   297d8:	ldr	r3, [r0, #20]
   297dc:	mov	r2, r1
   297e0:	mov	r1, #0
   297e4:	sub	r3, r3, r2
   297e8:	str	r3, [r0, #20]
   297ec:	ldr	r0, [r0, #16]
   297f0:	add	r0, r0, r3
   297f4:	b	13fc8 <memset@plt>
   297f8:	push	{r4, r5, r6, lr}
   297fc:	mov	r6, r1
   29800:	mov	r1, r2
   29804:	mov	r4, r2
   29808:	bl	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2980c:	subs	r5, r0, #0
   29810:	beq	29820 <__flatcc_fb_coerce_scalar_type@@Base+0x5f0>
   29814:	mov	r2, r4
   29818:	mov	r1, r6
   2981c:	bl	13efc <memcpy@plt>
   29820:	mov	r0, r5
   29824:	pop	{r4, r5, r6, pc}
   29828:	push	{r0, r1, r4, lr}
   2982c:	cmp	r0, #4
   29830:	mov	r4, #0
   29834:	mov	r2, r1
   29838:	movcs	r1, r0
   2983c:	movcc	r1, #4
   29840:	add	r0, sp, #4
   29844:	str	r4, [sp, #4]
   29848:	bl	13fbc <posix_memalign@plt>
   2984c:	cmp	r0, r4
   29850:	beq	29868 <__flatcc_fb_coerce_scalar_type@@Base+0x638>
   29854:	ldr	r0, [sp, #4]
   29858:	cmp	r0, r4
   2985c:	beq	29868 <__flatcc_fb_coerce_scalar_type@@Base+0x638>
   29860:	bl	13ef0 <free@plt>
   29864:	str	r4, [sp, #4]
   29868:	ldr	r0, [sp, #4]
   2986c:	add	sp, sp, #8
   29870:	pop	{r4, pc}

00029874 <flatcc_builder_default_alloc@@Base>:
   29874:	push	{r4, r5, r6, r7, r8, lr}
   29878:	subs	r6, r2, #0
   2987c:	mov	r5, r1
   29880:	bne	298a4 <flatcc_builder_default_alloc@@Base+0x30>
   29884:	ldr	r0, [r1]
   29888:	cmp	r0, #0
   2988c:	popeq	{r4, r5, r6, r7, r8, pc}
   29890:	bl	13ef0 <free@plt>
   29894:	str	r6, [r5]
   29898:	str	r6, [r5, #4]
   2989c:	mov	r0, #0
   298a0:	pop	{r4, r5, r6, r7, r8, pc}
   298a4:	ldr	r2, [sp, #24]
   298a8:	mov	r7, r3
   298ac:	sub	r2, r2, #1
   298b0:	cmp	r2, #6
   298b4:	ldrls	pc, [pc, r2, lsl #2]
   298b8:	b	2994c <flatcc_builder_default_alloc@@Base+0xd8>
   298bc:	andeq	r9, r2, r4, asr r9
   298c0:	andeq	r9, r2, ip, asr #18
   298c4:	andeq	r9, r2, ip, asr #18
   298c8:	andeq	r9, r2, ip, lsr r9
   298cc:	ldrdeq	r9, [r2], -r8
   298d0:	andeq	r9, r2, ip, asr #18
   298d4:	andeq	r9, r2, r4, asr #18
   298d8:	mov	r4, r6
   298dc:	cmp	r6, r4
   298e0:	bhi	2995c <flatcc_builder_default_alloc@@Base+0xe8>
   298e4:	ldr	r2, [r5, #4]
   298e8:	cmp	r6, r2
   298ec:	bhi	298f8 <flatcc_builder_default_alloc@@Base+0x84>
   298f0:	cmp	r4, r2, lsr #1
   298f4:	bls	2989c <flatcc_builder_default_alloc@@Base+0x28>
   298f8:	mov	r1, r4
   298fc:	ldr	r0, [r5]
   29900:	bl	13f2c <realloc@plt>
   29904:	subs	r6, r0, #0
   29908:	beq	29964 <flatcc_builder_default_alloc@@Base+0xf0>
   2990c:	cmp	r7, #0
   29910:	beq	29930 <flatcc_builder_default_alloc@@Base+0xbc>
   29914:	ldr	r0, [r5, #4]
   29918:	cmp	r4, r0
   2991c:	bls	29930 <flatcc_builder_default_alloc@@Base+0xbc>
   29920:	sub	r2, r4, r0
   29924:	mov	r1, #0
   29928:	add	r0, r6, r0
   2992c:	bl	13fc8 <memset@plt>
   29930:	str	r6, [r5]
   29934:	str	r4, [r5, #4]
   29938:	b	2989c <flatcc_builder_default_alloc@@Base+0x28>
   2993c:	mov	r4, #288	; 0x120
   29940:	b	298dc <flatcc_builder_default_alloc@@Base+0x68>
   29944:	mov	r4, #64	; 0x40
   29948:	b	298dc <flatcc_builder_default_alloc@@Base+0x68>
   2994c:	mov	r4, #32
   29950:	b	298dc <flatcc_builder_default_alloc@@Base+0x68>
   29954:	mov	r4, #256	; 0x100
   29958:	b	298dc <flatcc_builder_default_alloc@@Base+0x68>
   2995c:	lsl	r4, r4, #1
   29960:	b	298dc <flatcc_builder_default_alloc@@Base+0x68>
   29964:	mvn	r0, #0
   29968:	pop	{r4, r5, r6, r7, r8, pc}
   2996c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   29970:	add	r6, r0, #52	; 0x34
   29974:	mov	r4, r1
   29978:	add	r1, r6, r1, lsl #3
   2997c:	mov	r5, r2
   29980:	add	r2, r2, r3
   29984:	ldr	r3, [r1, #4]
   29988:	cmp	r2, r3
   2998c:	bls	299c0 <flatcc_builder_default_alloc@@Base+0x14c>
   29990:	str	r4, [sp]
   29994:	ldr	r3, [sp, #32]
   29998:	ldr	r7, [r0, #48]	; 0x30
   2999c:	ldr	r0, [r0, #40]	; 0x28
   299a0:	blx	r7
   299a4:	cmp	r0, #0
   299a8:	beq	299c0 <flatcc_builder_default_alloc@@Base+0x14c>
   299ac:	ldr	r3, [pc, #28]	; 299d0 <flatcc_builder_default_alloc@@Base+0x15c>
   299b0:	mov	r2, #308	; 0x134
   299b4:	ldr	r1, [pc, #24]	; 299d4 <flatcc_builder_default_alloc@@Base+0x160>
   299b8:	ldr	r0, [pc, #24]	; 299d8 <flatcc_builder_default_alloc@@Base+0x164>
   299bc:	bl	14070 <__assert_fail@plt>
   299c0:	ldr	r0, [r6, r4, lsl #3]
   299c4:	add	r0, r0, r5
   299c8:	add	sp, sp, #12
   299cc:	pop	{r4, r5, r6, r7, pc}
   299d0:	andeq	r8, r4, r3, lsr #24
   299d4:	andeq	r9, r4, r2, lsr #6
   299d8:	andeq	r8, r3, pc, ror #2
   299dc:	ldrd	r2, [r0, #156]	; 0x9c
   299e0:	push	{r0, r1, r4, r5, r6, lr}
   299e4:	mov	r5, r1
   299e8:	mov	r4, r0
   299ec:	add	r1, r2, #1
   299f0:	cmp	r1, r3
   299f4:	str	r1, [r0, #156]	; 0x9c
   299f8:	ble	29aa4 <flatcc_builder_default_alloc@@Base+0x230>
   299fc:	ldr	r3, [r0, #176]	; 0xb0
   29a00:	cmp	r1, r3
   29a04:	cmpgt	r3, #0
   29a08:	movgt	r3, #1
   29a0c:	movle	r3, #0
   29a10:	ble	29a20 <flatcc_builder_default_alloc@@Base+0x1ac>
   29a14:	mvn	r0, #0
   29a18:	add	sp, sp, #8
   29a1c:	pop	{r4, r5, r6, pc}
   29a20:	mov	r6, #36	; 0x24
   29a24:	mov	r1, #4
   29a28:	str	r3, [sp]
   29a2c:	mov	r3, r6
   29a30:	mul	r2, r6, r2
   29a34:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   29a38:	cmp	r0, #0
   29a3c:	str	r0, [r4, #32]
   29a40:	beq	29a14 <flatcc_builder_default_alloc@@Base+0x1a0>
   29a44:	ldr	r3, [r4, #88]	; 0x58
   29a48:	ldr	r2, [r4, #176]	; 0xb0
   29a4c:	udiv	r3, r3, r6
   29a50:	cmp	r2, #0
   29a54:	cmpgt	r3, r2
   29a58:	movgt	r3, r2
   29a5c:	str	r3, [r4, #160]	; 0xa0
   29a60:	ldrh	r1, [r4, #130]	; 0x82
   29a64:	mvn	r0, #3
   29a68:	ldr	r3, [r4, #20]
   29a6c:	ldr	r2, [r4, #32]
   29a70:	str	r3, [r2, #8]
   29a74:	strh	r1, [r2, #12]
   29a78:	ldr	r1, [r4, #28]
   29a7c:	strh	r5, [r4, #130]	; 0x82
   29a80:	add	r3, r3, r1
   29a84:	str	r0, [r2, #4]
   29a88:	mov	r0, #0
   29a8c:	add	r3, r3, #7
   29a90:	str	r1, [r2]
   29a94:	bic	r3, r3, #7
   29a98:	str	r0, [r4, #20]
   29a9c:	str	r3, [r4, #28]
   29aa0:	b	29a18 <flatcc_builder_default_alloc@@Base+0x1a4>
   29aa4:	ldr	r3, [r0, #32]
   29aa8:	add	r3, r3, #36	; 0x24
   29aac:	str	r3, [r0, #32]
   29ab0:	b	29a60 <flatcc_builder_default_alloc@@Base+0x1ec>
   29ab4:	ldr	r3, [r0, #32]
   29ab8:	push	{r0, r1, r2, r4, r5, lr}
   29abc:	add	r1, r1, #2
   29ac0:	mov	r4, r0
   29ac4:	lsl	r5, r1, #1
   29ac8:	ldrh	r1, [r3, #28]
   29acc:	ldr	r2, [r3, #16]
   29ad0:	mov	r3, #1
   29ad4:	str	r3, [sp]
   29ad8:	mov	r3, r5
   29adc:	add	r2, r2, r1, lsl #1
   29ae0:	mov	r1, #0
   29ae4:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   29ae8:	cmp	r0, #0
   29aec:	streq	r0, [r4, #4]
   29af0:	mvneq	r0, #0
   29af4:	beq	29b30 <flatcc_builder_default_alloc@@Base+0x2bc>
   29af8:	ldr	r2, [r4, #32]
   29afc:	add	r0, r0, #4
   29b00:	mov	r3, #0
   29b04:	mov	r1, #3
   29b08:	str	r0, [r4, #4]
   29b0c:	mov	r0, r4
   29b10:	str	r3, [sp]
   29b14:	sub	r3, r5, #3
   29b18:	ldr	r2, [r2, #20]
   29b1c:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   29b20:	str	r0, [r4]
   29b24:	clz	r0, r0
   29b28:	lsr	r0, r0, #5
   29b2c:	rsb	r0, r0, #0
   29b30:	add	sp, sp, #12
   29b34:	pop	{r4, r5, pc}
   29b38:	push	{r0, r1, r2, r4, r5, lr}
   29b3c:	ldr	r3, [r1]
   29b40:	ldr	r4, [r0, #140]	; 0x8c
   29b44:	add	r2, r3, r4
   29b48:	cmp	r2, r4
   29b4c:	ldrlt	r3, [pc, #76]	; 29ba0 <flatcc_builder_default_alloc@@Base+0x32c>
   29b50:	str	r2, [r0, #140]	; 0x8c
   29b54:	movwlt	r2, #673	; 0x2a1
   29b58:	blt	29b88 <flatcc_builder_default_alloc@@Base+0x314>
   29b5c:	add	r1, r1, #8
   29b60:	str	r3, [sp]
   29b64:	mov	r3, r4
   29b68:	ldr	r2, [r1, #-4]
   29b6c:	ldr	r5, [r0, #44]	; 0x2c
   29b70:	ldr	r0, [r0, #36]	; 0x24
   29b74:	blx	r5
   29b78:	cmp	r0, #0
   29b7c:	beq	29b94 <flatcc_builder_default_alloc@@Base+0x320>
   29b80:	ldr	r3, [pc, #24]	; 29ba0 <flatcc_builder_default_alloc@@Base+0x32c>
   29b84:	movw	r2, #677	; 0x2a5
   29b88:	ldr	r1, [pc, #20]	; 29ba4 <flatcc_builder_default_alloc@@Base+0x330>
   29b8c:	ldr	r0, [pc, #20]	; 29ba8 <flatcc_builder_default_alloc@@Base+0x334>
   29b90:	bl	14070 <__assert_fail@plt>
   29b94:	add	r0, r4, #1
   29b98:	add	sp, sp, #12
   29b9c:	pop	{r4, r5, pc}
   29ba0:	andeq	r8, r4, r2, lsr ip
   29ba4:	andeq	r9, r4, r2, lsr #6
   29ba8:	andeq	r8, r3, pc, ror #2
   29bac:	cmp	r2, #0
   29bb0:	bne	29bc0 <flatcc_builder_default_alloc@@Base+0x34c>
   29bb4:	ldrh	r2, [r0, #132]	; 0x84
   29bb8:	cmp	r2, #0
   29bbc:	moveq	r2, #1
   29bc0:	ldrh	ip, [r1]
   29bc4:	cmp	ip, #3
   29bc8:	movls	ip, #4
   29bcc:	strhls	ip, [r1]
   29bd0:	ldrh	ip, [r1]
   29bd4:	cmp	ip, r2
   29bd8:	strhcc	r2, [r1]
   29bdc:	cmp	r3, #0
   29be0:	bne	29c40 <flatcc_builder_default_alloc@@Base+0x3cc>
   29be4:	ldr	r3, [r0, #140]	; 0x8c
   29be8:	sub	r2, r2, #1
   29bec:	ands	r2, r2, r3
   29bf0:	beq	29c40 <flatcc_builder_default_alloc@@Base+0x3cc>
   29bf4:	push	{r4, lr}
   29bf8:	mov	r3, #1
   29bfc:	sub	sp, sp, #72	; 0x48
   29c00:	mov	r1, sp
   29c04:	ldr	r4, [pc, #60]	; 29c48 <flatcc_builder_default_alloc@@Base+0x3d4>
   29c08:	strd	r2, [sp]
   29c0c:	str	r4, [sp, #8]
   29c10:	str	r2, [sp, #12]
   29c14:	bl	29b38 <flatcc_builder_default_alloc@@Base+0x2c4>
   29c18:	cmp	r0, #0
   29c1c:	bne	29c34 <flatcc_builder_default_alloc@@Base+0x3c0>
   29c20:	add	r3, r4, #512	; 0x200
   29c24:	movw	r2, #702	; 0x2be
   29c28:	ldr	r1, [pc, #28]	; 29c4c <flatcc_builder_default_alloc@@Base+0x3d8>
   29c2c:	ldr	r0, [pc, #28]	; 29c50 <flatcc_builder_default_alloc@@Base+0x3dc>
   29c30:	bl	14070 <__assert_fail@plt>
   29c34:	mov	r0, #0
   29c38:	add	sp, sp, #72	; 0x48
   29c3c:	pop	{r4, pc}
   29c40:	mov	r0, #0
   29c44:	bx	lr
   29c48:	andeq	r8, r4, ip, lsr ip
   29c4c:	andeq	r9, r4, r2, lsr #6
   29c50:	andeq	r8, r3, pc, ror #2
   29c54:	ldr	r3, [r1]
   29c58:	push	{r0, r1, r4, r5, r6, lr}
   29c5c:	ldr	r2, [r0, #136]	; 0x88
   29c60:	sub	r4, r2, r3
   29c64:	cmp	r2, r4
   29c68:	ldrle	r3, [pc, #80]	; 29cc0 <flatcc_builder_default_alloc@@Base+0x44c>
   29c6c:	movwle	r2, #647	; 0x287
   29c70:	ble	29ca4 <flatcc_builder_default_alloc@@Base+0x430>
   29c74:	mov	r5, r0
   29c78:	add	r1, r1, #8
   29c7c:	str	r3, [sp]
   29c80:	mov	r3, r4
   29c84:	ldr	r2, [r1, #-4]
   29c88:	ldr	r0, [r0, #36]	; 0x24
   29c8c:	ldr	r6, [r5, #44]	; 0x2c
   29c90:	blx	r6
   29c94:	cmp	r0, #0
   29c98:	beq	29cb0 <flatcc_builder_default_alloc@@Base+0x43c>
   29c9c:	ldr	r3, [pc, #28]	; 29cc0 <flatcc_builder_default_alloc@@Base+0x44c>
   29ca0:	movw	r2, #651	; 0x28b
   29ca4:	ldr	r1, [pc, #24]	; 29cc4 <flatcc_builder_default_alloc@@Base+0x450>
   29ca8:	ldr	r0, [pc, #24]	; 29cc8 <flatcc_builder_default_alloc@@Base+0x454>
   29cac:	bl	14070 <__assert_fail@plt>
   29cb0:	mov	r0, r4
   29cb4:	str	r4, [r5, #136]	; 0x88
   29cb8:	add	sp, sp, #8
   29cbc:	pop	{r4, r5, r6, pc}
   29cc0:	andeq	r8, r4, fp, asr #28
   29cc4:	andeq	r9, r4, r2, lsr #6
   29cc8:	andeq	r8, r3, pc, ror #2
   29ccc:	ldr	r3, [r0, #20]
   29cd0:	adds	r1, r3, r1
   29cd4:	movcs	r3, #1
   29cd8:	movcc	r3, #0
   29cdc:	cmp	r1, r2
   29ce0:	movls	r2, r3
   29ce4:	orrhi	r2, r3, #1
   29ce8:	cmp	r2, #0
   29cec:	beq	29d08 <flatcc_builder_default_alloc@@Base+0x494>
   29cf0:	push	{r4, lr}
   29cf4:	mov	r2, #892	; 0x37c
   29cf8:	ldr	r3, [pc, #20]	; 29d14 <flatcc_builder_default_alloc@@Base+0x4a0>
   29cfc:	ldr	r1, [pc, #20]	; 29d18 <flatcc_builder_default_alloc@@Base+0x4a4>
   29d00:	ldr	r0, [pc, #20]	; 29d1c <flatcc_builder_default_alloc@@Base+0x4a8>
   29d04:	bl	14070 <__assert_fail@plt>
   29d08:	str	r1, [r0, #20]
   29d0c:	mov	r0, r2
   29d10:	bx	lr
   29d14:	andeq	r8, r4, r6, asr lr
   29d18:	andeq	r9, r4, r2, lsr #6
   29d1c:	andeq	r9, r4, r8, ror #6
   29d20:	ldrh	ip, [r0, #128]	; 0x80
   29d24:	push	{r4, r5, r6, lr}
   29d28:	sub	sp, sp, #80	; 0x50
   29d2c:	ldr	r5, [r0, #136]	; 0x88
   29d30:	cmp	ip, #3
   29d34:	movls	ip, #4
   29d38:	strhls	ip, [r0, #128]	; 0x80
   29d3c:	mov	ip, #4
   29d40:	add	lr, sp, ip
   29d44:	and	r4, r5, #3
   29d48:	stmib	sp, {r2, ip}
   29d4c:	str	lr, [sp, #16]
   29d50:	str	ip, [sp, #20]
   29d54:	mov	ip, #1
   29d58:	str	ip, [sp, #12]
   29d5c:	lsls	ip, r2, #2
   29d60:	beq	29d7c <flatcc_builder_default_alloc@@Base+0x508>
   29d64:	add	lr, ip, #4
   29d68:	str	ip, [sp, #28]
   29d6c:	mov	ip, #2
   29d70:	str	lr, [sp, #8]
   29d74:	str	ip, [sp, #12]
   29d78:	str	r1, [sp, #24]
   29d7c:	cmp	r4, #0
   29d80:	beq	29db0 <flatcc_builder_default_alloc@@Base+0x53c>
   29d84:	ldr	ip, [sp, #8]
   29d88:	add	lr, sp, #80	; 0x50
   29d8c:	ldr	r6, [pc, #204]	; 29e60 <flatcc_builder_default_alloc@@Base+0x5ec>
   29d90:	add	ip, ip, r4
   29d94:	str	ip, [sp, #8]
   29d98:	ldr	ip, [sp, #12]
   29d9c:	add	ip, ip, #1
   29da0:	add	lr, lr, ip, lsl #3
   29da4:	str	ip, [sp, #12]
   29da8:	str	r6, [lr, #-72]	; 0xffffffb8
   29dac:	str	r4, [lr, #-68]	; 0xffffffbc
   29db0:	ldr	lr, [sp, #8]
   29db4:	mov	ip, #0
   29db8:	mvn	r6, #3
   29dbc:	sub	lr, lr, #4
   29dc0:	sub	lr, lr, r5
   29dc4:	cmp	r2, ip
   29dc8:	bne	29ddc <flatcc_builder_default_alloc@@Base+0x568>
   29dcc:	add	r1, sp, #8
   29dd0:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   29dd4:	add	sp, sp, #80	; 0x50
   29dd8:	pop	{r4, r5, r6, pc}
   29ddc:	ldr	r5, [r1, ip, lsl #2]
   29de0:	cmp	r5, #0
   29de4:	beq	29e1c <flatcc_builder_default_alloc@@Base+0x5a8>
   29de8:	mla	r4, r6, ip, lr
   29dec:	cmp	r3, #0
   29df0:	add	r4, r4, r5
   29df4:	str	r4, [r1, ip, lsl #2]
   29df8:	beq	29e58 <flatcc_builder_default_alloc@@Base+0x5e4>
   29dfc:	ldrb	r4, [r3, ip]
   29e00:	cmp	r4, #0
   29e04:	bne	29e58 <flatcc_builder_default_alloc@@Base+0x5e4>
   29e08:	ldr	r3, [pc, #84]	; 29e64 <flatcc_builder_default_alloc@@Base+0x5f0>
   29e0c:	movw	r2, #1457	; 0x5b1
   29e10:	ldr	r1, [pc, #80]	; 29e68 <flatcc_builder_default_alloc@@Base+0x5f4>
   29e14:	ldr	r0, [pc, #80]	; 29e6c <flatcc_builder_default_alloc@@Base+0x5f8>
   29e18:	bl	14070 <__assert_fail@plt>
   29e1c:	cmp	r3, #0
   29e20:	beq	29e44 <flatcc_builder_default_alloc@@Base+0x5d0>
   29e24:	ldrb	r4, [r3, ip]
   29e28:	cmp	r4, #0
   29e2c:	beq	29e58 <flatcc_builder_default_alloc@@Base+0x5e4>
   29e30:	ldr	r3, [pc, #44]	; 29e64 <flatcc_builder_default_alloc@@Base+0x5f0>
   29e34:	movw	r2, #1461	; 0x5b5
   29e38:	ldr	r1, [pc, #40]	; 29e68 <flatcc_builder_default_alloc@@Base+0x5f4>
   29e3c:	ldr	r0, [pc, #44]	; 29e70 <flatcc_builder_default_alloc@@Base+0x5fc>
   29e40:	b	29e18 <flatcc_builder_default_alloc@@Base+0x5a4>
   29e44:	ldr	r3, [pc, #24]	; 29e64 <flatcc_builder_default_alloc@@Base+0x5f0>
   29e48:	movw	r2, #1463	; 0x5b7
   29e4c:	ldr	r1, [pc, #20]	; 29e68 <flatcc_builder_default_alloc@@Base+0x5f4>
   29e50:	ldr	r0, [pc, #28]	; 29e74 <flatcc_builder_default_alloc@@Base+0x600>
   29e54:	b	29e18 <flatcc_builder_default_alloc@@Base+0x5a4>
   29e58:	add	ip, ip, #1
   29e5c:	b	29dc4 <flatcc_builder_default_alloc@@Base+0x550>
   29e60:	andeq	r8, r4, ip, lsr ip
   29e64:	andeq	r8, r4, r7, ror #28
   29e68:	andeq	r9, r4, r2, lsr #6
   29e6c:	andeq	r9, r4, r3, lsl #7
   29e70:	muleq	r4, r1, r3
   29e74:	andeq	r8, r3, pc, ror #2

00029e78 <flatcc_builder_flush_vtable_cache@@Base>:
   29e78:	ldr	r3, [r0, #116]	; 0x74
   29e7c:	cmp	r3, #0
   29e80:	bxeq	lr
   29e84:	push	{r4, lr}
   29e88:	mov	r4, r0
   29e8c:	mov	r1, #0
   29e90:	ldr	r0, [r0, #92]	; 0x5c
   29e94:	ldr	r2, [r4, #96]	; 0x60
   29e98:	bl	13fc8 <memset@plt>
   29e9c:	mov	r0, #0
   29ea0:	mov	r1, #16
   29ea4:	strd	r0, [r4, #120]	; 0x78
   29ea8:	pop	{r4, pc}

00029eac <flatcc_builder_custom_init@@Base>:
   29eac:	push	{r4, r5, r6, r7, r8, lr}
   29eb0:	mov	r6, r1
   29eb4:	mov	r7, r2
   29eb8:	mov	r1, #0
   29ebc:	mov	r2, #232	; 0xe8
   29ec0:	mov	r4, r0
   29ec4:	mov	r5, r3
   29ec8:	bl	13fc8 <memset@plt>
   29ecc:	cmp	r6, #0
   29ed0:	mov	r0, #0
   29ed4:	moveq	r3, #1
   29ed8:	addeq	r7, r4, #188	; 0xbc
   29edc:	ldreq	r6, [pc, #36]	; 29f08 <flatcc_builder_custom_init@@Base+0x5c>
   29ee0:	streq	r3, [r4, #184]	; 0xb8
   29ee4:	cmp	r5, #0
   29ee8:	ldr	r3, [pc, #28]	; 29f0c <flatcc_builder_custom_init@@Base+0x60>
   29eec:	str	r7, [r4, #36]	; 0x24
   29ef0:	str	r6, [r4, #44]	; 0x2c
   29ef4:	moveq	r5, r3
   29ef8:	ldr	r3, [sp, #24]
   29efc:	str	r3, [r4, #40]	; 0x28
   29f00:	str	r5, [r4, #48]	; 0x30
   29f04:	pop	{r4, r5, r6, r7, r8, pc}
   29f08:			; <UNDEFINED> instruction: 0x0002c5bc
   29f0c:	andeq	r9, r2, r4, ror r8

00029f10 <flatcc_builder_init@@Base>:
   29f10:	push	{r4, lr}
   29f14:	mov	r2, #232	; 0xe8
   29f18:	mov	r1, #0
   29f1c:	bl	13fc8 <memset@plt>
   29f20:	mov	r3, r0
   29f24:	mov	r2, #1
   29f28:	mov	r0, #0
   29f2c:	str	r2, [r3, #184]	; 0xb8
   29f30:	ldr	r2, [pc, #20]	; 29f4c <flatcc_builder_init@@Base+0x3c>
   29f34:	str	r2, [r3, #48]	; 0x30
   29f38:	add	r2, r3, #188	; 0xbc
   29f3c:	str	r2, [r3, #36]	; 0x24
   29f40:	ldr	r2, [pc, #8]	; 29f50 <flatcc_builder_init@@Base+0x40>
   29f44:	str	r2, [r3, #44]	; 0x2c
   29f48:	pop	{r4, pc}
   29f4c:	andeq	r9, r2, r4, ror r8
   29f50:			; <UNDEFINED> instruction: 0x0002c5bc

00029f54 <flatcc_builder_custom_reset@@Base>:
   29f54:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   29f58:	mov	r4, r0
   29f5c:	mov	r7, r1
   29f60:	mov	r8, r2
   29f64:	mov	r5, r0
   29f68:	mov	r6, #0
   29f6c:	ldr	r3, [r5, #52]	; 0x34
   29f70:	add	r1, r5, #52	; 0x34
   29f74:	cmp	r3, #0
   29f78:	beq	2a054 <flatcc_builder_custom_reset@@Base+0x100>
   29f7c:	cmp	r6, #5
   29f80:	cmpne	r8, #0
   29f84:	bne	2a02c <flatcc_builder_custom_reset@@Base+0xd8>
   29f88:	mov	r1, #0
   29f8c:	ldr	r0, [r5, #52]	; 0x34
   29f90:	ldr	r2, [r5, #56]	; 0x38
   29f94:	bl	13fc8 <memset@plt>
   29f98:	add	r6, r6, #1
   29f9c:	add	r5, r5, #8
   29fa0:	cmp	r6, #8
   29fa4:	bne	29f6c <flatcc_builder_custom_reset@@Base+0x18>
   29fa8:	ldr	r2, [r4, #124]	; 0x7c
   29fac:	mov	r3, #0
   29fb0:	ldr	r0, [r4, #184]	; 0xb8
   29fb4:	str	r3, [r4, #24]
   29fb8:	str	r3, [r4, #32]
   29fbc:	cmp	r2, r3
   29fc0:	str	r3, [r4, #120]	; 0x78
   29fc4:	movne	r2, #16
   29fc8:	strh	r3, [r4, #128]	; 0x80
   29fcc:	str	r3, [r4, #136]	; 0x88
   29fd0:	strne	r2, [r4, #124]	; 0x7c
   29fd4:	cmp	r7, #0
   29fd8:	ldr	r2, [r4, #60]	; 0x3c
   29fdc:	strne	r3, [r4, #172]	; 0xac
   29fe0:	strne	r3, [r4, #176]	; 0xb0
   29fe4:	strne	r3, [r4, #180]	; 0xb4
   29fe8:	cmp	r0, #0
   29fec:	strd	r2, [r4, #16]
   29ff0:	ldr	r2, [r4, #76]	; 0x4c
   29ff4:	str	r2, [r4]
   29ff8:	ldr	r2, [r4, #52]	; 0x34
   29ffc:	str	r3, [r4, #140]	; 0x8c
   2a000:	str	r3, [r4, #148]	; 0x94
   2a004:	str	r3, [r4, #152]	; 0x98
   2a008:	str	r3, [r4, #156]	; 0x9c
   2a00c:	str	r2, [r4, #4]
   2a010:	str	r3, [r4, #160]	; 0xa0
   2a014:	beq	2a024 <flatcc_builder_custom_reset@@Base+0xd0>
   2a018:	add	r0, r4, #188	; 0xbc
   2a01c:	bl	2c4bc <flatcc_emitter_reset@@Base>
   2a020:	mov	r0, #0
   2a024:	add	sp, sp, #12
   2a028:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a02c:	mov	r3, #1
   2a030:	ldr	r0, [r4, #40]	; 0x28
   2a034:	mov	r2, r3
   2a038:	ldr	r9, [r4, #48]	; 0x30
   2a03c:	str	r6, [sp]
   2a040:	blx	r9
   2a044:	cmp	r0, #0
   2a048:	beq	29f88 <flatcc_builder_custom_reset@@Base+0x34>
   2a04c:	mvn	r0, #0
   2a050:	b	2a024 <flatcc_builder_custom_reset@@Base+0xd0>
   2a054:	ldr	r3, [r5, #56]	; 0x38
   2a058:	cmp	r3, #0
   2a05c:	beq	29f98 <flatcc_builder_custom_reset@@Base+0x44>
   2a060:	ldr	r3, [pc, #12]	; 2a074 <flatcc_builder_custom_reset@@Base+0x120>
   2a064:	movw	r2, #434	; 0x1b2
   2a068:	ldr	r1, [pc, #8]	; 2a078 <flatcc_builder_custom_reset@@Base+0x124>
   2a06c:	ldr	r0, [pc, #8]	; 2a07c <flatcc_builder_custom_reset@@Base+0x128>
   2a070:	bl	14070 <__assert_fail@plt>
   2a074:	andeq	r8, r4, r4, lsl #29
   2a078:	andeq	r9, r4, r2, lsr #6
   2a07c:	muleq	r4, pc, r3	; <UNPREDICTABLE>

0002a080 <flatcc_builder_reset@@Base>:
   2a080:	mov	r2, #0
   2a084:	mov	r1, r2
   2a088:	b	29f54 <flatcc_builder_custom_reset@@Base>

0002a08c <flatcc_builder_clear@@Base>:
   2a08c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2a090:	mov	r4, r0
   2a094:	add	r6, r0, #52	; 0x34
   2a098:	mov	r5, #0
   2a09c:	mov	r3, #0
   2a0a0:	mov	r1, r6
   2a0a4:	mov	r2, r3
   2a0a8:	ldr	r0, [r4, #40]	; 0x28
   2a0ac:	add	r6, r6, #8
   2a0b0:	ldr	r7, [r4, #48]	; 0x30
   2a0b4:	str	r5, [sp]
   2a0b8:	add	r5, r5, #1
   2a0bc:	blx	r7
   2a0c0:	cmp	r5, #8
   2a0c4:	bne	2a09c <flatcc_builder_clear@@Base+0x10>
   2a0c8:	ldr	r3, [r4, #184]	; 0xb8
   2a0cc:	cmp	r3, #0
   2a0d0:	beq	2a0dc <flatcc_builder_clear@@Base+0x50>
   2a0d4:	add	r0, r4, #188	; 0xbc
   2a0d8:	bl	2c564 <flatcc_emitter_clear@@Base>
   2a0dc:	mov	r2, #232	; 0xe8
   2a0e0:	mov	r1, #0
   2a0e4:	mov	r0, r4
   2a0e8:	add	sp, sp, #12
   2a0ec:	pop	{r4, r5, r6, r7, lr}
   2a0f0:	b	13fc8 <memset@plt>

0002a0f4 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2a0f4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2a0f8:	add	r5, r1, #3
   2a0fc:	mov	r7, #0
   2a100:	bic	r5, r5, #3
   2a104:	mov	r1, #7
   2a108:	add	r5, r5, #4
   2a10c:	mov	r6, r0
   2a110:	mov	r3, r5
   2a114:	str	r7, [sp]
   2a118:	ldr	r2, [r0, #228]	; 0xe4
   2a11c:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   2a120:	subs	r4, r0, #0
   2a124:	beq	2a150 <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
   2a128:	mov	r2, r5
   2a12c:	mov	r1, r7
   2a130:	bl	13fc8 <memset@plt>
   2a134:	ldr	r3, [r6, #224]	; 0xe0
   2a138:	str	r3, [r4], #4
   2a13c:	ldr	r1, [r6, #228]	; 0xe4
   2a140:	add	r3, r1, #4
   2a144:	add	r5, r1, r5
   2a148:	str	r3, [r6, #224]	; 0xe0
   2a14c:	str	r5, [r6, #228]	; 0xe4
   2a150:	mov	r0, r4
   2a154:	add	sp, sp, #12
   2a158:	pop	{r4, r5, r6, r7, pc}

0002a15c <flatcc_builder_enter_user_frame@@Base>:
   2a15c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2a160:	add	r4, r1, #3
   2a164:	mov	r7, #0
   2a168:	bic	r4, r4, #3
   2a16c:	mov	r1, #7
   2a170:	add	r4, r4, #4
   2a174:	mov	r6, r0
   2a178:	mov	r3, r4
   2a17c:	str	r7, [sp]
   2a180:	ldr	r2, [r0, #228]	; 0xe4
   2a184:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   2a188:	subs	r5, r0, #0
   2a18c:	moveq	r0, r5
   2a190:	beq	2a1bc <flatcc_builder_enter_user_frame@@Base+0x60>
   2a194:	mov	r2, r4
   2a198:	mov	r1, r7
   2a19c:	bl	13fc8 <memset@plt>
   2a1a0:	ldr	r3, [r6, #224]	; 0xe0
   2a1a4:	str	r3, [r5]
   2a1a8:	ldr	r1, [r6, #228]	; 0xe4
   2a1ac:	add	r0, r1, #4
   2a1b0:	add	r4, r1, r4
   2a1b4:	str	r0, [r6, #224]	; 0xe0
   2a1b8:	str	r4, [r6, #228]	; 0xe4
   2a1bc:	add	sp, sp, #12
   2a1c0:	pop	{r4, r5, r6, r7, pc}

0002a1c4 <flatcc_builder_exit_user_frame@@Base>:
   2a1c4:	ldr	r3, [r0, #224]	; 0xe0
   2a1c8:	cmp	r3, #0
   2a1cc:	bne	2a1e8 <flatcc_builder_exit_user_frame@@Base+0x24>
   2a1d0:	push	{r4, lr}
   2a1d4:	movw	r2, #542	; 0x21e
   2a1d8:	ldr	r3, [pc, #40]	; 2a208 <flatcc_builder_exit_user_frame@@Base+0x44>
   2a1dc:	ldr	r1, [pc, #40]	; 2a20c <flatcc_builder_exit_user_frame@@Base+0x48>
   2a1e0:	ldr	r0, [pc, #40]	; 2a210 <flatcc_builder_exit_user_frame@@Base+0x4c>
   2a1e4:	bl	14070 <__assert_fail@plt>
   2a1e8:	ldr	r1, [r0, #108]	; 0x6c
   2a1ec:	mov	r2, r0
   2a1f0:	add	r1, r1, r3
   2a1f4:	sub	r3, r3, #4
   2a1f8:	str	r3, [r0, #228]	; 0xe4
   2a1fc:	ldr	r0, [r1, #-4]
   2a200:	str	r0, [r2, #224]	; 0xe0
   2a204:	bx	lr
   2a208:	andeq	r8, r4, r0, lsr #29
   2a20c:	andeq	r9, r4, r2, lsr #6
   2a210:			; <UNDEFINED> instruction: 0x000493b1

0002a214 <flatcc_builder_exit_user_frame_at@@Base>:
   2a214:	ldr	r2, [r0, #224]	; 0xe0
   2a218:	cmp	r2, r1
   2a21c:	bcs	2a238 <flatcc_builder_exit_user_frame_at@@Base+0x24>
   2a220:	push	{r4, lr}
   2a224:	movw	r2, #551	; 0x227
   2a228:	ldr	r3, [pc, #16]	; 2a240 <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   2a22c:	ldr	r1, [pc, #16]	; 2a244 <flatcc_builder_exit_user_frame_at@@Base+0x30>
   2a230:	ldr	r0, [pc, #16]	; 2a248 <flatcc_builder_exit_user_frame_at@@Base+0x34>
   2a234:	bl	14070 <__assert_fail@plt>
   2a238:	str	r1, [r0, #224]	; 0xe0
   2a23c:	b	2a1c4 <flatcc_builder_exit_user_frame@@Base>
   2a240:			; <UNDEFINED> instruction: 0x00048ebf
   2a244:	andeq	r9, r4, r2, lsr #6
   2a248:	andeq	r9, r4, sl, asr #7

0002a24c <flatcc_builder_get_current_user_frame@@Base>:
   2a24c:	ldr	r0, [r0, #224]	; 0xe0
   2a250:	bx	lr

0002a254 <flatcc_builder_get_user_frame_ptr@@Base>:
   2a254:	ldr	r0, [r0, #108]	; 0x6c
   2a258:	add	r0, r0, r1
   2a25c:	bx	lr

0002a260 <flatcc_builder_embed_buffer@@Base>:
   2a260:	push	{r4, r5, r6, lr}
   2a264:	mov	r4, r3
   2a268:	sub	sp, sp, #80	; 0x50
   2a26c:	mov	r6, r2
   2a270:	mov	r2, r1
   2a274:	add	r1, sp, #96	; 0x60
   2a278:	mov	r5, r0
   2a27c:	ldr	r3, [r0, #152]	; 0x98
   2a280:	adds	r3, r3, #0
   2a284:	movne	r3, #1
   2a288:	bl	29bac <flatcc_builder_default_alloc@@Base+0x338>
   2a28c:	cmp	r0, #0
   2a290:	movne	r0, #0
   2a294:	bne	2a368 <flatcc_builder_embed_buffer@@Base+0x108>
   2a298:	ldr	r3, [sp, #100]	; 0x64
   2a29c:	str	r0, [sp, #8]
   2a2a0:	str	r0, [sp, #12]
   2a2a4:	tst	r3, #2
   2a2a8:	ldr	r3, [r5, #136]	; 0x88
   2a2ac:	movne	r2, #4
   2a2b0:	moveq	r2, #0
   2a2b4:	sub	r3, r3, r4
   2a2b8:	sub	r3, r3, r2
   2a2bc:	ldrh	r2, [sp, #96]	; 0x60
   2a2c0:	sub	r2, r2, #1
   2a2c4:	and	r3, r3, r2
   2a2c8:	add	r2, r4, r3
   2a2cc:	str	r2, [sp, #4]
   2a2d0:	ldr	r2, [r5, #152]	; 0x98
   2a2d4:	cmp	r2, #0
   2a2d8:	beq	2a2f8 <flatcc_builder_embed_buffer@@Base+0x98>
   2a2dc:	mov	r2, #4
   2a2e0:	add	r1, sp, r2
   2a2e4:	str	r2, [sp, #8]
   2a2e8:	str	r1, [sp, #16]
   2a2ec:	str	r2, [sp, #20]
   2a2f0:	mov	r2, #1
   2a2f4:	str	r2, [sp, #12]
   2a2f8:	cmp	r4, #0
   2a2fc:	beq	2a328 <flatcc_builder_embed_buffer@@Base+0xc8>
   2a300:	ldr	r2, [sp, #8]
   2a304:	add	r1, sp, #80	; 0x50
   2a308:	add	r2, r2, r4
   2a30c:	str	r2, [sp, #8]
   2a310:	ldr	r2, [sp, #12]
   2a314:	add	r2, r2, #1
   2a318:	add	r1, r1, r2, lsl #3
   2a31c:	str	r2, [sp, #12]
   2a320:	str	r6, [r1, #-72]	; 0xffffffb8
   2a324:	str	r4, [r1, #-68]	; 0xffffffbc
   2a328:	cmp	r3, #0
   2a32c:	beq	2a35c <flatcc_builder_embed_buffer@@Base+0xfc>
   2a330:	ldr	r2, [sp, #8]
   2a334:	add	r1, sp, #80	; 0x50
   2a338:	ldr	r0, [pc, #48]	; 2a370 <flatcc_builder_embed_buffer@@Base+0x110>
   2a33c:	add	r2, r2, r3
   2a340:	str	r2, [sp, #8]
   2a344:	ldr	r2, [sp, #12]
   2a348:	add	r2, r2, #1
   2a34c:	add	r1, r1, r2, lsl #3
   2a350:	str	r2, [sp, #12]
   2a354:	str	r0, [r1, #-72]	; 0xffffffb8
   2a358:	str	r3, [r1, #-68]	; 0xffffffbc
   2a35c:	add	r1, sp, #8
   2a360:	mov	r0, r5
   2a364:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   2a368:	add	sp, sp, #80	; 0x50
   2a36c:	pop	{r4, r5, r6, pc}
   2a370:	andeq	r8, r4, ip, lsr ip

0002a374 <flatcc_builder_create_buffer@@Base>:
   2a374:	push	{r4, r5, r6, r7, r8, r9, lr}
   2a378:	sub	sp, sp, #92	; 0x5c
   2a37c:	mov	r8, #0
   2a380:	mov	r9, r1
   2a384:	mov	r5, r3
   2a388:	add	r1, sp, #120	; 0x78
   2a38c:	mov	r4, r0
   2a390:	ldr	r7, [sp, #124]	; 0x7c
   2a394:	str	r8, [sp, #12]
   2a398:	and	r6, r7, #1
   2a39c:	mov	r3, r6
   2a3a0:	bl	29bac <flatcc_builder_default_alloc@@Base+0x338>
   2a3a4:	cmp	r0, r8
   2a3a8:	bne	2a518 <flatcc_builder_create_buffer@@Base+0x1a4>
   2a3ac:	ldrh	r3, [r4, #128]	; 0x80
   2a3b0:	ldrh	r1, [sp, #120]	; 0x78
   2a3b4:	ldr	r2, [r4, #136]	; 0x88
   2a3b8:	cmp	r3, r1
   2a3bc:	strhcc	r1, [r4, #128]	; 0x80
   2a3c0:	cmp	r9, #0
   2a3c4:	sub	r1, r1, #1
   2a3c8:	ldrne	r3, [r9]
   2a3cc:	strne	r3, [sp, #12]
   2a3d0:	sub	r3, r2, #4
   2a3d4:	ldr	r0, [sp, #12]
   2a3d8:	cmp	r0, #0
   2a3dc:	movne	r0, #4
   2a3e0:	tst	r7, #2
   2a3e4:	movne	ip, #4
   2a3e8:	moveq	ip, #0
   2a3ec:	sub	r3, r3, r0
   2a3f0:	ands	r7, r7, #3
   2a3f4:	sub	r3, r3, ip
   2a3f8:	and	r3, r3, r1
   2a3fc:	mov	r1, #0
   2a400:	str	r1, [sp, #16]
   2a404:	str	r1, [sp, #20]
   2a408:	beq	2a428 <flatcc_builder_create_buffer@@Base+0xb4>
   2a40c:	mov	r1, #4
   2a410:	add	ip, sp, #8
   2a414:	str	r1, [sp, #16]
   2a418:	str	ip, [sp, #24]
   2a41c:	str	r1, [sp, #28]
   2a420:	mov	r1, #1
   2a424:	str	r1, [sp, #20]
   2a428:	ldr	ip, [sp, #16]
   2a42c:	add	r8, sp, #88	; 0x58
   2a430:	add	r9, sp, #4
   2a434:	cmp	r0, #0
   2a438:	ldr	lr, [sp, #20]
   2a43c:	add	ip, ip, #4
   2a440:	add	r1, lr, #1
   2a444:	str	ip, [sp, #16]
   2a448:	add	r8, r8, r1, lsl #3
   2a44c:	str	r1, [sp, #20]
   2a450:	str	r9, [r8, #-72]	; 0xffffffb8
   2a454:	mov	r9, #4
   2a458:	str	r9, [r8, #-68]	; 0xffffffbc
   2a45c:	beq	2a488 <flatcc_builder_create_buffer@@Base+0x114>
   2a460:	add	ip, ip, r0
   2a464:	add	r1, lr, #2
   2a468:	add	lr, lr, #2
   2a46c:	str	ip, [sp, #16]
   2a470:	add	ip, sp, #88	; 0x58
   2a474:	add	r1, ip, r1, lsl #3
   2a478:	add	ip, sp, #12
   2a47c:	str	lr, [sp, #20]
   2a480:	str	ip, [r1, #-72]	; 0xffffffb8
   2a484:	str	r0, [r1, #-68]	; 0xffffffbc
   2a488:	cmp	r3, #0
   2a48c:	beq	2a4bc <flatcc_builder_create_buffer@@Base+0x148>
   2a490:	ldr	r1, [sp, #16]
   2a494:	add	r0, sp, #88	; 0x58
   2a498:	ldr	ip, [pc, #132]	; 2a524 <flatcc_builder_create_buffer@@Base+0x1b0>
   2a49c:	add	r1, r1, r3
   2a4a0:	str	r1, [sp, #16]
   2a4a4:	ldr	r1, [sp, #20]
   2a4a8:	add	r1, r1, #1
   2a4ac:	add	r0, r0, r1, lsl #3
   2a4b0:	str	r1, [sp, #20]
   2a4b4:	str	ip, [r0, #-72]	; 0xffffffb8
   2a4b8:	str	r3, [r0, #-68]	; 0xffffffbc
   2a4bc:	ldr	r3, [sp, #16]
   2a4c0:	cmp	r7, #0
   2a4c4:	add	r1, sp, #16
   2a4c8:	mov	r0, r4
   2a4cc:	sub	r3, r2, r3
   2a4d0:	movne	r2, #4
   2a4d4:	moveq	r2, #0
   2a4d8:	cmp	r6, #0
   2a4dc:	add	r3, r3, r2
   2a4e0:	ldrne	r2, [r4, #144]	; 0x90
   2a4e4:	ldreq	r2, [r4, #140]	; 0x8c
   2a4e8:	sub	r2, r2, r3
   2a4ec:	sub	r3, r5, r3
   2a4f0:	str	r3, [sp, #4]
   2a4f4:	str	r2, [sp, #8]
   2a4f8:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   2a4fc:	cmp	r0, #0
   2a500:	bne	2a51c <flatcc_builder_create_buffer@@Base+0x1a8>
   2a504:	ldr	r3, [pc, #28]	; 2a528 <flatcc_builder_create_buffer@@Base+0x1b4>
   2a508:	mov	r2, #772	; 0x304
   2a50c:	ldr	r1, [pc, #24]	; 2a52c <flatcc_builder_create_buffer@@Base+0x1b8>
   2a510:	ldr	r0, [pc, #24]	; 2a530 <flatcc_builder_create_buffer@@Base+0x1bc>
   2a514:	bl	14070 <__assert_fail@plt>
   2a518:	mov	r0, r8
   2a51c:	add	sp, sp, #92	; 0x5c
   2a520:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a524:	andeq	r8, r4, ip, lsr ip
   2a528:	andeq	r8, r4, r1, ror #29
   2a52c:	andeq	r9, r4, r2, lsr #6
   2a530:	andeq	r8, r3, pc, ror #2

0002a534 <flatcc_builder_create_struct@@Base>:
   2a534:	cmp	r3, #0
   2a538:	push	{lr}		; (str lr, [sp, #-4]!)
   2a53c:	sub	sp, sp, #76	; 0x4c
   2a540:	bne	2a558 <flatcc_builder_create_struct@@Base+0x24>
   2a544:	ldr	r3, [pc, #148]	; 2a5e0 <flatcc_builder_create_struct@@Base+0xac>
   2a548:	movw	r2, #783	; 0x30f
   2a54c:	ldr	r1, [pc, #144]	; 2a5e4 <flatcc_builder_create_struct@@Base+0xb0>
   2a550:	ldr	r0, [pc, #144]	; 2a5e8 <flatcc_builder_create_struct@@Base+0xb4>
   2a554:	bl	14070 <__assert_fail@plt>
   2a558:	ldrh	ip, [r0, #128]	; 0x80
   2a55c:	cmp	ip, r3
   2a560:	ldr	ip, [r0, #136]	; 0x88
   2a564:	strhcc	r3, [r0, #128]	; 0x80
   2a568:	sub	r3, r3, #1
   2a56c:	sub	ip, ip, r2
   2a570:	and	r3, r3, ip
   2a574:	mov	ip, #0
   2a578:	cmp	r2, ip
   2a57c:	str	ip, [sp]
   2a580:	str	ip, [sp, #4]
   2a584:	beq	2a59c <flatcc_builder_create_struct@@Base+0x68>
   2a588:	str	r2, [sp]
   2a58c:	str	r1, [sp, #8]
   2a590:	str	r2, [sp, #12]
   2a594:	mov	r2, #1
   2a598:	str	r2, [sp, #4]
   2a59c:	cmp	r3, #0
   2a5a0:	beq	2a5d0 <flatcc_builder_create_struct@@Base+0x9c>
   2a5a4:	ldr	r2, [sp]
   2a5a8:	add	r1, sp, #72	; 0x48
   2a5ac:	ldr	ip, [pc, #56]	; 2a5ec <flatcc_builder_create_struct@@Base+0xb8>
   2a5b0:	add	r2, r2, r3
   2a5b4:	str	r2, [sp]
   2a5b8:	ldr	r2, [sp, #4]
   2a5bc:	add	r2, r2, #1
   2a5c0:	add	r1, r1, r2, lsl #3
   2a5c4:	str	r2, [sp, #4]
   2a5c8:	str	ip, [r1, #-72]	; 0xffffffb8
   2a5cc:	str	r3, [r1, #-68]	; 0xffffffbc
   2a5d0:	mov	r1, sp
   2a5d4:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   2a5d8:	add	sp, sp, #76	; 0x4c
   2a5dc:	pop	{pc}		; (ldr pc, [sp], #4)
   2a5e0:	strdeq	r8, [r4], -lr
   2a5e4:	andeq	r9, r4, r2, lsr #6
   2a5e8:	andeq	r9, r4, r9, ror #7
   2a5ec:	andeq	r8, r4, ip, lsr ip

0002a5f0 <flatcc_builder_start_buffer@@Base>:
   2a5f0:	push	{r4, r5, r6, r7, r8, lr}
   2a5f4:	mov	r5, r1
   2a5f8:	mov	r4, r0
   2a5fc:	mov	r7, r2
   2a600:	mov	r6, r3
   2a604:	ldrh	r1, [r0, #128]	; 0x80
   2a608:	bl	299dc <flatcc_builder_default_alloc@@Base+0x168>
   2a60c:	cmp	r0, #0
   2a610:	bne	2a680 <flatcc_builder_start_buffer@@Base+0x90>
   2a614:	ldrh	r3, [r4, #132]	; 0x84
   2a618:	mov	ip, #1
   2a61c:	cmp	r5, #0
   2a620:	ldr	r1, [r4, #32]
   2a624:	strh	ip, [r4, #128]	; 0x80
   2a628:	strh	r3, [r1, #34]	; 0x22
   2a62c:	ldrh	r3, [r4, #164]	; 0xa4
   2a630:	strh	r7, [r4, #132]	; 0x84
   2a634:	strh	r3, [r1, #32]
   2a638:	ldr	r3, [r4, #144]	; 0x90
   2a63c:	strh	r6, [r4, #164]	; 0xa4
   2a640:	str	r3, [r1, #20]
   2a644:	ldr	r3, [r4, #152]	; 0x98
   2a648:	str	r3, [r1, #28]
   2a64c:	ldr	r3, [r4, #136]	; 0x88
   2a650:	str	r3, [r4, #144]	; 0x90
   2a654:	ldr	r3, [r4, #148]	; 0x94
   2a658:	add	r2, r3, ip
   2a65c:	strd	r2, [r4, #148]	; 0x94
   2a660:	ldr	r3, [r4, #168]	; 0xa8
   2a664:	str	r3, [r1, #16]
   2a668:	ldr	r3, [pc, #24]	; 2a688 <flatcc_builder_start_buffer@@Base+0x98>
   2a66c:	moveq	r5, r3
   2a670:	ldr	r3, [r5]
   2a674:	str	r3, [r4, #168]	; 0xa8
   2a678:	strh	ip, [r1, #14]
   2a67c:	pop	{r4, r5, r6, r7, r8, pc}
   2a680:	mvn	r0, #0
   2a684:	pop	{r4, r5, r6, r7, r8, pc}
   2a688:	andeq	r8, r4, ip, lsr ip

0002a68c <flatcc_builder_end_buffer@@Base>:
   2a68c:	push	{r0, r1, r2, r4, r5, lr}
   2a690:	mov	r4, r0
   2a694:	ldrh	r0, [r0, #164]	; 0xa4
   2a698:	ldr	r2, [r4, #152]	; 0x98
   2a69c:	and	r0, r0, #2
   2a6a0:	cmp	r2, #0
   2a6a4:	orrne	r0, r0, #1
   2a6a8:	ldr	r2, [r4, #32]
   2a6ac:	ldrh	r2, [r2, #14]
   2a6b0:	cmp	r2, #1
   2a6b4:	beq	2a6cc <flatcc_builder_end_buffer@@Base+0x40>
   2a6b8:	ldr	r3, [pc, #120]	; 2a738 <flatcc_builder_end_buffer@@Base+0xac>
   2a6bc:	movw	r2, #838	; 0x346
   2a6c0:	ldr	r1, [pc, #116]	; 2a73c <flatcc_builder_end_buffer@@Base+0xb0>
   2a6c4:	ldr	r0, [pc, #116]	; 2a740 <flatcc_builder_end_buffer@@Base+0xb4>
   2a6c8:	bl	14070 <__assert_fail@plt>
   2a6cc:	ldrh	r2, [r4, #132]	; 0x84
   2a6d0:	mov	r3, r1
   2a6d4:	ldrh	r1, [r4, #128]	; 0x80
   2a6d8:	cmp	r1, r2
   2a6dc:	strhcc	r2, [r4, #128]	; 0x80
   2a6e0:	ldrh	r1, [r4, #128]	; 0x80
   2a6e4:	str	r1, [sp]
   2a6e8:	add	r1, r4, #168	; 0xa8
   2a6ec:	str	r0, [sp, #4]
   2a6f0:	mov	r0, r4
   2a6f4:	bl	2a374 <flatcc_builder_create_buffer@@Base>
   2a6f8:	subs	r5, r0, #0
   2a6fc:	beq	2a72c <flatcc_builder_end_buffer@@Base+0xa0>
   2a700:	ldr	r3, [r4, #32]
   2a704:	mov	r0, r4
   2a708:	ldr	r2, [r3, #20]
   2a70c:	str	r2, [r4, #144]	; 0x90
   2a710:	ldr	r2, [r3, #28]
   2a714:	str	r2, [r4, #152]	; 0x98
   2a718:	ldr	r2, [r3, #16]
   2a71c:	ldrh	r3, [r3, #32]
   2a720:	strh	r3, [r4, #164]	; 0xa4
   2a724:	str	r2, [r4, #168]	; 0xa8
   2a728:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2a72c:	mov	r0, r5
   2a730:	add	sp, sp, #12
   2a734:	pop	{r4, r5, pc}
   2a738:	andeq	r8, r4, fp, lsl pc
   2a73c:	andeq	r9, r4, r2, lsr #6
   2a740:	strdeq	r9, [r4], -r4

0002a744 <flatcc_builder_start_struct@@Base>:
   2a744:	push	{r4, r5, r6, lr}
   2a748:	mov	r5, r1
   2a74c:	mov	r1, r2
   2a750:	mov	r4, r0
   2a754:	bl	299dc <flatcc_builder_default_alloc@@Base+0x168>
   2a758:	cmp	r0, #0
   2a75c:	bne	2a784 <flatcc_builder_start_struct@@Base+0x40>
   2a760:	ldr	r3, [r4, #32]
   2a764:	mov	r2, #2
   2a768:	mvn	r1, #3
   2a76c:	mov	r0, r4
   2a770:	strh	r2, [r3, #14]
   2a774:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2a778:	mov	r1, r5
   2a77c:	pop	{r4, r5, r6, lr}
   2a780:	b	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2a784:	mov	r0, #0
   2a788:	pop	{r4, r5, r6, pc}

0002a78c <flatcc_builder_struct_edit@@Base>:
   2a78c:	ldr	r0, [r0, #16]
   2a790:	bx	lr

0002a794 <flatcc_builder_end_struct@@Base>:
   2a794:	ldr	r3, [r0, #32]
   2a798:	push	{r4, r5, r6, lr}
   2a79c:	ldrh	r3, [r3, #14]
   2a7a0:	cmp	r3, #2
   2a7a4:	beq	2a7bc <flatcc_builder_end_struct@@Base+0x28>
   2a7a8:	ldr	r3, [pc, #56]	; 2a7e8 <flatcc_builder_end_struct@@Base+0x54>
   2a7ac:	mov	r2, #872	; 0x368
   2a7b0:	ldr	r1, [pc, #52]	; 2a7ec <flatcc_builder_end_struct@@Base+0x58>
   2a7b4:	ldr	r0, [pc, #52]	; 2a7f0 <flatcc_builder_end_struct@@Base+0x5c>
   2a7b8:	bl	14070 <__assert_fail@plt>
   2a7bc:	ldrh	r3, [r0, #130]	; 0x82
   2a7c0:	mov	r4, r0
   2a7c4:	ldr	r1, [r0, #16]
   2a7c8:	ldr	r2, [r0, #20]
   2a7cc:	bl	2a534 <flatcc_builder_create_struct@@Base>
   2a7d0:	subs	r5, r0, #0
   2a7d4:	beq	2a7e0 <flatcc_builder_end_struct@@Base+0x4c>
   2a7d8:	mov	r0, r4
   2a7dc:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2a7e0:	mov	r0, r5
   2a7e4:	pop	{r4, r5, r6, pc}
   2a7e8:	andeq	r8, r4, r5, lsr pc
   2a7ec:	andeq	r9, r4, r2, lsr #6
   2a7f0:	andeq	r9, r4, r0, lsr #8

0002a7f4 <flatcc_builder_extend_vector@@Base>:
   2a7f4:	push	{r4, r5, r6, lr}
   2a7f8:	mov	r4, r0
   2a7fc:	mov	r5, r1
   2a800:	ldr	r0, [r0, #32]
   2a804:	ldr	r2, [r0, #24]
   2a808:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2a80c:	cmp	r0, #0
   2a810:	bne	2a82c <flatcc_builder_extend_vector@@Base+0x38>
   2a814:	ldr	r3, [r4, #32]
   2a818:	mov	r0, r4
   2a81c:	ldr	r1, [r3, #16]
   2a820:	mul	r1, r1, r5
   2a824:	pop	{r4, r5, r6, lr}
   2a828:	b	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2a82c:	mov	r0, #0
   2a830:	pop	{r4, r5, r6, pc}

0002a834 <flatcc_builder_vector_push@@Base>:
   2a834:	ldr	r3, [r0, #32]
   2a838:	push	{r4, lr}
   2a83c:	ldrh	r2, [r3, #14]
   2a840:	cmp	r2, #4
   2a844:	beq	2a85c <flatcc_builder_vector_push@@Base+0x28>
   2a848:	ldr	r3, [pc, #68]	; 2a894 <flatcc_builder_vector_push@@Base+0x60>
   2a84c:	movw	r2, #907	; 0x38b
   2a850:	ldr	r1, [pc, #64]	; 2a898 <flatcc_builder_vector_push@@Base+0x64>
   2a854:	ldr	r0, [pc, #64]	; 2a89c <flatcc_builder_vector_push@@Base+0x68>
   2a858:	bl	14070 <__assert_fail@plt>
   2a85c:	ldr	r2, [r3, #20]
   2a860:	ldr	ip, [r3, #24]
   2a864:	cmp	r2, ip
   2a868:	bls	2a880 <flatcc_builder_vector_push@@Base+0x4c>
   2a86c:	ldr	r3, [pc, #32]	; 2a894 <flatcc_builder_vector_push@@Base+0x60>
   2a870:	mov	r2, #908	; 0x38c
   2a874:	ldr	r1, [pc, #28]	; 2a898 <flatcc_builder_vector_push@@Base+0x64>
   2a878:	ldr	r0, [pc, #32]	; 2a8a0 <flatcc_builder_vector_push@@Base+0x6c>
   2a87c:	b	2a858 <flatcc_builder_vector_push@@Base+0x24>
   2a880:	add	r2, r2, #1
   2a884:	pop	{r4, lr}
   2a888:	str	r2, [r3, #20]
   2a88c:	ldr	r2, [r3, #16]
   2a890:	b	297f8 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2a894:	andeq	r8, r4, pc, asr #30
   2a898:	andeq	r9, r4, r2, lsr #6
   2a89c:	andeq	r9, r4, ip, asr #8
   2a8a0:	andeq	r9, r4, r8, ror r4

0002a8a4 <flatcc_builder_append_vector@@Base>:
   2a8a4:	push	{r4, r5, r6, lr}
   2a8a8:	mov	r4, r0
   2a8ac:	ldr	r0, [r0, #32]
   2a8b0:	ldrh	r3, [r0, #14]
   2a8b4:	cmp	r3, #4
   2a8b8:	beq	2a8d0 <flatcc_builder_append_vector@@Base+0x2c>
   2a8bc:	ldr	r3, [pc, #76]	; 2a910 <flatcc_builder_append_vector@@Base+0x6c>
   2a8c0:	movw	r2, #915	; 0x393
   2a8c4:	ldr	r1, [pc, #72]	; 2a914 <flatcc_builder_append_vector@@Base+0x70>
   2a8c8:	ldr	r0, [pc, #72]	; 2a918 <flatcc_builder_append_vector@@Base+0x74>
   2a8cc:	bl	14070 <__assert_fail@plt>
   2a8d0:	mov	r6, r1
   2a8d4:	mov	r5, r2
   2a8d8:	mov	r1, r2
   2a8dc:	ldr	r2, [r0, #24]
   2a8e0:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2a8e4:	cmp	r0, #0
   2a8e8:	bne	2a908 <flatcc_builder_append_vector@@Base+0x64>
   2a8ec:	ldr	r3, [r4, #32]
   2a8f0:	mov	r1, r6
   2a8f4:	mov	r0, r4
   2a8f8:	ldr	r2, [r3, #16]
   2a8fc:	mul	r2, r2, r5
   2a900:	pop	{r4, r5, r6, lr}
   2a904:	b	297f8 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2a908:	mov	r0, #0
   2a90c:	pop	{r4, r5, r6, pc}
   2a910:	andeq	r8, r4, sl, ror #30
   2a914:	andeq	r9, r4, r2, lsr #6
   2a918:	andeq	r9, r4, ip, asr #8

0002a91c <flatcc_builder_extend_offset_vector@@Base>:
   2a91c:	push	{r4, r5, r6, lr}
   2a920:	mvn	r2, #-1073741824	; 0xc0000000
   2a924:	mov	r4, r0
   2a928:	mov	r5, r1
   2a92c:	ldr	r0, [r0, #32]
   2a930:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2a934:	cmp	r0, #0
   2a938:	bne	2a94c <flatcc_builder_extend_offset_vector@@Base+0x30>
   2a93c:	lsl	r1, r5, #2
   2a940:	mov	r0, r4
   2a944:	pop	{r4, r5, r6, lr}
   2a948:	b	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2a94c:	mov	r0, #0
   2a950:	pop	{r4, r5, r6, pc}

0002a954 <flatcc_builder_offset_vector_push@@Base>:
   2a954:	ldr	r2, [r0, #32]
   2a958:	push	{r4, lr}
   2a95c:	ldrh	r3, [r2, #14]
   2a960:	cmp	r3, #5
   2a964:	beq	2a97c <flatcc_builder_offset_vector_push@@Base+0x28>
   2a968:	ldr	r3, [pc, #64]	; 2a9b0 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2a96c:	movw	r2, #934	; 0x3a6
   2a970:	ldr	r1, [pc, #60]	; 2a9b4 <flatcc_builder_offset_vector_push@@Base+0x60>
   2a974:	ldr	r0, [pc, #60]	; 2a9b8 <flatcc_builder_offset_vector_push@@Base+0x64>
   2a978:	bl	14070 <__assert_fail@plt>
   2a97c:	ldr	r3, [r2, #20]
   2a980:	cmn	r3, #-1073741823	; 0xc0000001
   2a984:	beq	2a9a8 <flatcc_builder_offset_vector_push@@Base+0x54>
   2a988:	add	r3, r3, #1
   2a98c:	mov	r4, r1
   2a990:	mov	r1, #4
   2a994:	str	r3, [r2, #20]
   2a998:	bl	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2a99c:	cmp	r0, #0
   2a9a0:	strne	r4, [r0]
   2a9a4:	pop	{r4, pc}
   2a9a8:	mov	r0, #0
   2a9ac:	pop	{r4, pc}
   2a9b0:	andeq	r8, r4, r7, lsl #31
   2a9b4:	andeq	r9, r4, r2, lsr #6
   2a9b8:			; <UNDEFINED> instruction: 0x000494b5

0002a9bc <flatcc_builder_append_offset_vector@@Base>:
   2a9bc:	push	{r4, r5, r6, lr}
   2a9c0:	mov	r4, r0
   2a9c4:	ldr	r0, [r0, #32]
   2a9c8:	ldrh	r3, [r0, #14]
   2a9cc:	cmp	r3, #5
   2a9d0:	beq	2a9e8 <flatcc_builder_append_offset_vector@@Base+0x2c>
   2a9d4:	ldr	r3, [pc, #68]	; 2aa20 <flatcc_builder_append_offset_vector@@Base+0x64>
   2a9d8:	mov	r2, #948	; 0x3b4
   2a9dc:	ldr	r1, [pc, #64]	; 2aa24 <flatcc_builder_append_offset_vector@@Base+0x68>
   2a9e0:	ldr	r0, [pc, #64]	; 2aa28 <flatcc_builder_append_offset_vector@@Base+0x6c>
   2a9e4:	bl	14070 <__assert_fail@plt>
   2a9e8:	mov	r5, r2
   2a9ec:	mov	r6, r1
   2a9f0:	mvn	r2, #-1073741824	; 0xc0000000
   2a9f4:	mov	r1, r5
   2a9f8:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2a9fc:	cmp	r0, #0
   2aa00:	bne	2aa18 <flatcc_builder_append_offset_vector@@Base+0x5c>
   2aa04:	lsl	r2, r5, #2
   2aa08:	mov	r1, r6
   2aa0c:	mov	r0, r4
   2aa10:	pop	{r4, r5, r6, lr}
   2aa14:	b	297f8 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2aa18:	mov	r0, #0
   2aa1c:	pop	{r4, r5, r6, pc}
   2aa20:	andeq	r8, r4, r9, lsr #31
   2aa24:	andeq	r9, r4, r2, lsr #6
   2aa28:			; <UNDEFINED> instruction: 0x000494b5

0002aa2c <flatcc_builder_extend_string@@Base>:
   2aa2c:	push	{r4, r5, r6, lr}
   2aa30:	mov	r4, r0
   2aa34:	ldr	r0, [r0, #32]
   2aa38:	ldrh	r3, [r0, #14]
   2aa3c:	cmp	r3, #6
   2aa40:	beq	2aa58 <flatcc_builder_extend_string@@Base+0x2c>
   2aa44:	ldr	r3, [pc, #56]	; 2aa84 <flatcc_builder_extend_string@@Base+0x58>
   2aa48:	movw	r2, #957	; 0x3bd
   2aa4c:	ldr	r1, [pc, #52]	; 2aa88 <flatcc_builder_extend_string@@Base+0x5c>
   2aa50:	ldr	r0, [pc, #52]	; 2aa8c <flatcc_builder_extend_string@@Base+0x60>
   2aa54:	bl	14070 <__assert_fail@plt>
   2aa58:	mvn	r2, #0
   2aa5c:	mov	r5, r1
   2aa60:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2aa64:	cmp	r0, #0
   2aa68:	bne	2aa7c <flatcc_builder_extend_string@@Base+0x50>
   2aa6c:	mov	r1, r5
   2aa70:	mov	r0, r4
   2aa74:	pop	{r4, r5, r6, lr}
   2aa78:	b	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2aa7c:	mov	r0, #0
   2aa80:	pop	{r4, r5, r6, pc}
   2aa84:	andeq	r8, r4, sp, asr #31
   2aa88:	andeq	r9, r4, r2, lsr #6
   2aa8c:	andeq	r9, r4, r8, ror #9

0002aa90 <flatcc_builder_append_string@@Base>:
   2aa90:	push	{r4, r5, r6, lr}
   2aa94:	mov	r4, r0
   2aa98:	ldr	r0, [r0, #32]
   2aa9c:	ldrh	r3, [r0, #14]
   2aaa0:	cmp	r3, #6
   2aaa4:	beq	2aabc <flatcc_builder_append_string@@Base+0x2c>
   2aaa8:	ldr	r3, [pc, #68]	; 2aaf4 <flatcc_builder_append_string@@Base+0x64>
   2aaac:	movw	r2, #966	; 0x3c6
   2aab0:	ldr	r1, [pc, #64]	; 2aaf8 <flatcc_builder_append_string@@Base+0x68>
   2aab4:	ldr	r0, [pc, #64]	; 2aafc <flatcc_builder_append_string@@Base+0x6c>
   2aab8:	bl	14070 <__assert_fail@plt>
   2aabc:	mov	r5, r2
   2aac0:	mov	r6, r1
   2aac4:	mvn	r2, #0
   2aac8:	mov	r1, r5
   2aacc:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2aad0:	cmp	r0, #0
   2aad4:	bne	2aaec <flatcc_builder_append_string@@Base+0x5c>
   2aad8:	mov	r2, r5
   2aadc:	mov	r1, r6
   2aae0:	mov	r0, r4
   2aae4:	pop	{r4, r5, r6, lr}
   2aae8:	b	297f8 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2aaec:	mov	r0, #0
   2aaf0:	pop	{r4, r5, r6, pc}
   2aaf4:	andeq	r8, r4, sl, ror #31
   2aaf8:	andeq	r9, r4, r2, lsr #6
   2aafc:	andeq	r9, r4, r8, ror #9

0002ab00 <flatcc_builder_append_string_str@@Base>:
   2ab00:	push	{r4, r5, r6, lr}
   2ab04:	mov	r5, r0
   2ab08:	mov	r0, r1
   2ab0c:	mov	r4, r1
   2ab10:	bl	13fa4 <strlen@plt>
   2ab14:	mov	r2, r0
   2ab18:	mov	r1, r4
   2ab1c:	mov	r0, r5
   2ab20:	pop	{r4, r5, r6, lr}
   2ab24:	b	2aa90 <flatcc_builder_append_string@@Base>

0002ab28 <flatcc_builder_append_string_strn@@Base>:
   2ab28:	push	{r4, r5, r6, lr}
   2ab2c:	mov	r4, r1
   2ab30:	mov	r6, r0
   2ab34:	mov	r1, #0
   2ab38:	mov	r0, r4
   2ab3c:	mov	r5, r2
   2ab40:	bl	13fec <memchr@plt>
   2ab44:	cmp	r0, #0
   2ab48:	mov	r1, r4
   2ab4c:	subne	r5, r0, r4
   2ab50:	mov	r0, r6
   2ab54:	mov	r2, r5
   2ab58:	pop	{r4, r5, r6, lr}
   2ab5c:	b	2aa90 <flatcc_builder_append_string@@Base>

0002ab60 <flatcc_builder_truncate_vector@@Base>:
   2ab60:	ldr	r3, [r0, #32]
   2ab64:	push	{r4, lr}
   2ab68:	ldrh	r2, [r3, #14]
   2ab6c:	cmp	r2, #4
   2ab70:	beq	2ab88 <flatcc_builder_truncate_vector@@Base+0x28>
   2ab74:	ldr	r3, [pc, #72]	; 2abc4 <flatcc_builder_truncate_vector@@Base+0x64>
   2ab78:	movw	r2, #985	; 0x3d9
   2ab7c:	ldr	r1, [pc, #68]	; 2abc8 <flatcc_builder_truncate_vector@@Base+0x68>
   2ab80:	ldr	r0, [pc, #68]	; 2abcc <flatcc_builder_truncate_vector@@Base+0x6c>
   2ab84:	bl	14070 <__assert_fail@plt>
   2ab88:	ldr	r2, [r3, #20]
   2ab8c:	cmp	r2, r1
   2ab90:	bcs	2aba8 <flatcc_builder_truncate_vector@@Base+0x48>
   2ab94:	ldr	r3, [pc, #40]	; 2abc4 <flatcc_builder_truncate_vector@@Base+0x64>
   2ab98:	movw	r2, #986	; 0x3da
   2ab9c:	ldr	r1, [pc, #36]	; 2abc8 <flatcc_builder_truncate_vector@@Base+0x68>
   2aba0:	ldr	r0, [pc, #40]	; 2abd0 <flatcc_builder_truncate_vector@@Base+0x70>
   2aba4:	b	2ab84 <flatcc_builder_truncate_vector@@Base+0x24>
   2aba8:	sub	r2, r2, r1
   2abac:	str	r2, [r3, #20]
   2abb0:	ldr	r3, [r3, #16]
   2abb4:	mul	r1, r3, r1
   2abb8:	bl	297d8 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2abbc:	mov	r0, #0
   2abc0:	pop	{r4, pc}
   2abc4:	andeq	r9, r4, r7
   2abc8:	andeq	r9, r4, r2, lsr #6
   2abcc:	andeq	r9, r4, ip, asr #8
   2abd0:	andeq	r9, r4, r4, lsl r5

0002abd4 <flatcc_builder_truncate_offset_vector@@Base>:
   2abd4:	ldr	r3, [r0, #32]
   2abd8:	push	{r4, lr}
   2abdc:	ldrh	r2, [r3, #14]
   2abe0:	cmp	r2, #5
   2abe4:	beq	2abfc <flatcc_builder_truncate_offset_vector@@Base+0x28>
   2abe8:	ldr	r3, [pc, #72]	; 2ac38 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2abec:	movw	r2, #994	; 0x3e2
   2abf0:	ldr	r1, [pc, #68]	; 2ac3c <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2abf4:	ldr	r0, [pc, #68]	; 2ac40 <flatcc_builder_truncate_offset_vector@@Base+0x6c>
   2abf8:	bl	14070 <__assert_fail@plt>
   2abfc:	ldr	r2, [r3, #20]
   2ac00:	cmp	r2, r1
   2ac04:	bcs	2ac1c <flatcc_builder_truncate_offset_vector@@Base+0x48>
   2ac08:	ldr	r3, [pc, #40]	; 2ac38 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2ac0c:	movw	r2, #995	; 0x3e3
   2ac10:	ldr	r1, [pc, #36]	; 2ac3c <flatcc_builder_truncate_offset_vector@@Base+0x68>
   2ac14:	ldr	r0, [pc, #40]	; 2ac44 <flatcc_builder_truncate_offset_vector@@Base+0x70>
   2ac18:	b	2abf8 <flatcc_builder_truncate_offset_vector@@Base+0x24>
   2ac1c:	sub	r2, r2, r1
   2ac20:	str	r2, [r3, #20]
   2ac24:	ldr	r3, [r3, #16]
   2ac28:	mul	r1, r3, r1
   2ac2c:	bl	297d8 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2ac30:	mov	r0, #0
   2ac34:	pop	{r4, pc}
   2ac38:	andeq	r9, r4, r6, lsr #32
   2ac3c:	andeq	r9, r4, r2, lsr #6
   2ac40:			; <UNDEFINED> instruction: 0x000494b5
   2ac44:	andeq	r9, r4, r8, lsr r5

0002ac48 <flatcc_builder_truncate_string@@Base>:
   2ac48:	ldr	r2, [r0, #32]
   2ac4c:	push	{r4, lr}
   2ac50:	ldrh	r3, [r2, #14]
   2ac54:	cmp	r3, #6
   2ac58:	beq	2ac70 <flatcc_builder_truncate_string@@Base+0x28>
   2ac5c:	ldr	r3, [pc, #64]	; 2aca4 <flatcc_builder_truncate_string@@Base+0x5c>
   2ac60:	movw	r2, #1003	; 0x3eb
   2ac64:	ldr	r1, [pc, #60]	; 2aca8 <flatcc_builder_truncate_string@@Base+0x60>
   2ac68:	ldr	r0, [pc, #60]	; 2acac <flatcc_builder_truncate_string@@Base+0x64>
   2ac6c:	bl	14070 <__assert_fail@plt>
   2ac70:	ldr	r3, [r2, #20]
   2ac74:	cmp	r3, r1
   2ac78:	bcs	2ac90 <flatcc_builder_truncate_string@@Base+0x48>
   2ac7c:	ldr	r3, [pc, #32]	; 2aca4 <flatcc_builder_truncate_string@@Base+0x5c>
   2ac80:	mov	r2, #1004	; 0x3ec
   2ac84:	ldr	r1, [pc, #28]	; 2aca8 <flatcc_builder_truncate_string@@Base+0x60>
   2ac88:	ldr	r0, [pc, #32]	; 2acb0 <flatcc_builder_truncate_string@@Base+0x68>
   2ac8c:	b	2ac6c <flatcc_builder_truncate_string@@Base+0x24>
   2ac90:	sub	r3, r3, r1
   2ac94:	str	r3, [r2, #20]
   2ac98:	bl	297d8 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2ac9c:	mov	r0, #0
   2aca0:	pop	{r4, pc}
   2aca4:	andeq	r9, r4, ip, asr #32
   2aca8:	andeq	r9, r4, r2, lsr #6
   2acac:	andeq	r9, r4, r8, ror #9
   2acb0:	andeq	r9, r4, r3, ror r5

0002acb4 <flatcc_builder_start_vector@@Base>:
   2acb4:	cmp	r2, #4
   2acb8:	push	{r4, r5, r6, r7, r8, lr}
   2acbc:	mov	r7, r1
   2acc0:	movcs	r1, r2
   2acc4:	movcc	r1, #4
   2acc8:	mov	r5, r0
   2accc:	mov	r6, r3
   2acd0:	bl	299dc <flatcc_builder_default_alloc@@Base+0x168>
   2acd4:	subs	r4, r0, #0
   2acd8:	mvnne	r4, #0
   2acdc:	bne	2ad04 <flatcc_builder_start_vector@@Base+0x50>
   2ace0:	ldr	r2, [r5, #32]
   2ace4:	mov	r3, #4
   2ace8:	mvn	r1, #3
   2acec:	mov	r0, r5
   2acf0:	strh	r3, [r2, #14]
   2acf4:	str	r7, [r2, #16]
   2acf8:	str	r4, [r2, #20]
   2acfc:	str	r6, [r2, #24]
   2ad00:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2ad04:	mov	r0, r4
   2ad08:	pop	{r4, r5, r6, r7, r8, pc}

0002ad0c <flatcc_builder_start_offset_vector@@Base>:
   2ad0c:	push	{r4, r5, r6, lr}
   2ad10:	mov	r1, #4
   2ad14:	mov	r5, r0
   2ad18:	bl	299dc <flatcc_builder_default_alloc@@Base+0x168>
   2ad1c:	subs	r4, r0, #0
   2ad20:	mvnne	r4, #0
   2ad24:	bne	2ad4c <flatcc_builder_start_offset_vector@@Base+0x40>
   2ad28:	ldr	r3, [r5, #32]
   2ad2c:	mov	r2, #4
   2ad30:	mvn	r1, #3
   2ad34:	mov	r0, r5
   2ad38:	str	r2, [r3, #16]
   2ad3c:	mov	r2, #5
   2ad40:	strh	r2, [r3, #14]
   2ad44:	str	r4, [r3, #20]
   2ad48:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2ad4c:	mov	r0, r4
   2ad50:	pop	{r4, r5, r6, pc}

0002ad54 <flatcc_builder_start_string@@Base>:
   2ad54:	push	{r4, r5, r6, lr}
   2ad58:	mov	r1, #1
   2ad5c:	mov	r5, r0
   2ad60:	bl	299dc <flatcc_builder_default_alloc@@Base+0x168>
   2ad64:	subs	r4, r0, #0
   2ad68:	mvnne	r4, #0
   2ad6c:	bne	2ad94 <flatcc_builder_start_string@@Base+0x40>
   2ad70:	ldr	r3, [r5, #32]
   2ad74:	mov	r2, #1
   2ad78:	mvn	r1, #3
   2ad7c:	mov	r0, r5
   2ad80:	str	r2, [r3, #16]
   2ad84:	mov	r2, #6
   2ad88:	strh	r2, [r3, #14]
   2ad8c:	str	r4, [r3, #20]
   2ad90:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2ad94:	mov	r0, r4
   2ad98:	pop	{r4, r5, r6, pc}

0002ad9c <flatcc_builder_reserve_table@@Base>:
   2ad9c:	cmp	r1, #0
   2ada0:	bge	2adbc <flatcc_builder_reserve_table@@Base+0x20>
   2ada4:	push	{r4, lr}
   2ada8:	movw	r2, #1065	; 0x429
   2adac:	ldr	r3, [pc, #12]	; 2adc0 <flatcc_builder_reserve_table@@Base+0x24>
   2adb0:	ldr	r1, [pc, #12]	; 2adc4 <flatcc_builder_reserve_table@@Base+0x28>
   2adb4:	ldr	r0, [pc, #12]	; 2adc8 <flatcc_builder_reserve_table@@Base+0x2c>
   2adb8:	bl	14070 <__assert_fail@plt>
   2adbc:	b	29ab4 <flatcc_builder_default_alloc@@Base+0x240>
   2adc0:	andeq	r9, r4, fp, rrx
   2adc4:	andeq	r9, r4, r2, lsr #6
   2adc8:	andeq	r9, r4, fp, lsr #11

0002adcc <flatcc_builder_start_table@@Base>:
   2adcc:	push	{r4, r5, r6, lr}
   2add0:	mov	r5, r1
   2add4:	mov	r1, #4
   2add8:	mov	r4, r0
   2addc:	bl	299dc <flatcc_builder_default_alloc@@Base+0x168>
   2ade0:	cmp	r0, #0
   2ade4:	beq	2adf4 <flatcc_builder_start_table@@Base+0x28>
   2ade8:	mvn	r5, #0
   2adec:	mov	r0, r5
   2adf0:	pop	{r4, r5, r6, pc}
   2adf4:	ldr	r2, [r4, #4]
   2adf8:	ldr	r3, [r4, #32]
   2adfc:	ldr	r1, [r4, #52]	; 0x34
   2ae00:	sub	r2, r2, r1
   2ae04:	ldr	r1, [r4, #76]	; 0x4c
   2ae08:	str	r2, [r3, #16]
   2ae0c:	ldr	r2, [r4]
   2ae10:	sub	r2, r2, r1
   2ae14:	mov	r1, r5
   2ae18:	str	r2, [r3, #20]
   2ae1c:	ldr	r2, [r4, #12]
   2ae20:	str	r2, [r3, #24]
   2ae24:	ldrh	r2, [r4, #8]
   2ae28:	strh	r2, [r3, #28]
   2ae2c:	ldr	r2, [pc, #44]	; 2ae60 <flatcc_builder_start_table@@Base+0x94>
   2ae30:	strh	r0, [r4, #8]
   2ae34:	mov	r0, r4
   2ae38:	str	r2, [r4, #12]
   2ae3c:	mov	r2, #3
   2ae40:	strh	r2, [r3, #14]
   2ae44:	bl	29ab4 <flatcc_builder_default_alloc@@Base+0x240>
   2ae48:	subs	r5, r0, #0
   2ae4c:	bne	2ade8 <flatcc_builder_start_table@@Base+0x1c>
   2ae50:	movw	r1, #65532	; 0xfffc
   2ae54:	mov	r0, r4
   2ae58:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2ae5c:	b	2adec <flatcc_builder_start_table@@Base+0x20>
   2ae60:	svccs	0x00693b52

0002ae64 <flatcc_builder_create_vtable@@Base>:
   2ae64:	mov	r3, #0
   2ae68:	push	{lr}		; (str lr, [sp, #-4]!)
   2ae6c:	sub	sp, sp, #76	; 0x4c
   2ae70:	cmp	r2, #0
   2ae74:	str	r3, [sp]
   2ae78:	str	r3, [sp, #4]
   2ae7c:	movne	r3, #1
   2ae80:	strne	r1, [sp, #8]
   2ae84:	mov	r1, sp
   2ae88:	strdne	r2, [sp]
   2ae8c:	ldr	r3, [r0, #152]	; 0x98
   2ae90:	strne	r2, [sp, #12]
   2ae94:	cmp	r3, #0
   2ae98:	bne	2aeb4 <flatcc_builder_create_vtable@@Base+0x50>
   2ae9c:	ldr	r3, [r0, #180]	; 0xb4
   2aea0:	cmp	r3, #0
   2aea4:	bne	2aeb4 <flatcc_builder_create_vtable@@Base+0x50>
   2aea8:	bl	29b38 <flatcc_builder_default_alloc@@Base+0x2c4>
   2aeac:	add	sp, sp, #76	; 0x4c
   2aeb0:	pop	{pc}		; (ldr pc, [sp], #4)
   2aeb4:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   2aeb8:	cmp	r0, #0
   2aebc:	addne	r0, r0, #1
   2aec0:	b	2aeac <flatcc_builder_create_vtable@@Base+0x48>

0002aec4 <flatcc_builder_create_cached_vtable@@Base>:
   2aec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aec8:	mov	r6, r3
   2aecc:	sub	sp, sp, #20
   2aed0:	mov	r4, r0
   2aed4:	mov	sl, r1
   2aed8:	mov	r7, r2
   2aedc:	ldr	r3, [r0, #116]	; 0x74
   2aee0:	cmp	r3, #0
   2aee4:	bne	2af8c <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2aee8:	ldr	r5, [r0, #124]	; 0x7c
   2aeec:	add	r9, r0, #92	; 0x5c
   2aef0:	cmp	r5, #0
   2aef4:	beq	2af0c <flatcc_builder_create_cached_vtable@@Base+0x48>
   2aef8:	ldr	r3, [pc, #560]	; 2b130 <flatcc_builder_create_cached_vtable@@Base+0x26c>
   2aefc:	movw	r2, #342	; 0x156
   2af00:	ldr	r1, [pc, #556]	; 2b134 <flatcc_builder_create_cached_vtable@@Base+0x270>
   2af04:	ldr	r0, [pc, #556]	; 2b138 <flatcc_builder_create_cached_vtable@@Base+0x274>
   2af08:	bl	14070 <__assert_fail@plt>
   2af0c:	mov	r3, #16
   2af10:	mov	r2, r5
   2af14:	str	r5, [sp]
   2af18:	mov	r1, #6
   2af1c:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   2af20:	cmp	r0, #0
   2af24:	bne	2af34 <flatcc_builder_create_cached_vtable@@Base+0x70>
   2af28:	mov	r0, #0
   2af2c:	add	sp, sp, #20
   2af30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2af34:	mov	r3, #16
   2af38:	mov	r1, r9
   2af3c:	ldr	r0, [r4, #40]	; 0x28
   2af40:	mov	r2, #256	; 0x100
   2af44:	str	r3, [r4, #124]	; 0x7c
   2af48:	mov	r3, #5
   2af4c:	ldr	r8, [r4, #48]	; 0x30
   2af50:	str	r3, [sp]
   2af54:	mov	r3, #1
   2af58:	blx	r8
   2af5c:	cmp	r0, #0
   2af60:	moveq	r3, #256	; 0x100
   2af64:	ldreq	r1, [r4, #96]	; 0x60
   2af68:	bne	2af28 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2af6c:	lsl	r2, r3, #1
   2af70:	cmp	r2, r1
   2af74:	bls	2b04c <flatcc_builder_create_cached_vtable@@Base+0x188>
   2af78:	lsr	r3, r3, #2
   2af7c:	mov	r2, #1
   2af80:	cmp	r3, r2, lsl r5
   2af84:	bhi	2b054 <flatcc_builder_create_cached_vtable@@Base+0x190>
   2af88:	str	r5, [r4, #116]	; 0x74
   2af8c:	ldr	r8, [r4, #92]	; 0x5c
   2af90:	ldr	r3, [r4, #116]	; 0x74
   2af94:	rsb	r3, r3, #32
   2af98:	lsr	r6, r6, r3
   2af9c:	adds	r3, r8, r6, lsl #2
   2afa0:	ldrne	r9, [r8, r6, lsl #2]
   2afa4:	movne	fp, #0
   2afa8:	str	r3, [sp, #8]
   2afac:	beq	2af28 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2afb0:	cmp	r9, #0
   2afb4:	bne	2b05c <flatcc_builder_create_cached_vtable@@Base+0x198>
   2afb8:	mov	r3, #16
   2afbc:	mov	r1, #6
   2afc0:	ldr	r2, [r4, #124]	; 0x7c
   2afc4:	mov	r0, r4
   2afc8:	str	r9, [sp]
   2afcc:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   2afd0:	subs	r5, r0, #0
   2afd4:	beq	2af28 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2afd8:	ldr	r3, [r4, #124]	; 0x7c
   2afdc:	mov	r1, sl
   2afe0:	mov	r0, r4
   2afe4:	add	r2, r3, #16
   2afe8:	str	r2, [r4, #124]	; 0x7c
   2afec:	ldr	r2, [r4, #152]	; 0x98
   2aff0:	str	r2, [r5, #4]
   2aff4:	ldr	r2, [r8, r6, lsl #2]
   2aff8:	str	r2, [r5, #12]
   2affc:	mov	r2, r7
   2b000:	str	r3, [r8, r6, lsl #2]
   2b004:	bl	2ae64 <flatcc_builder_create_vtable@@Base>
   2b008:	cmp	r0, #0
   2b00c:	str	r0, [r5]
   2b010:	beq	2af28 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2b014:	cmp	fp, #0
   2b018:	ldrne	r3, [fp, #8]
   2b01c:	strne	r3, [r5, #8]
   2b020:	bne	2b0e4 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2b024:	ldr	r2, [r4, #120]	; 0x78
   2b028:	ldr	r3, [r4, #172]	; 0xac
   2b02c:	cmp	r3, #0
   2b030:	beq	2b0ec <flatcc_builder_create_cached_vtable@@Base+0x228>
   2b034:	add	r1, r7, r2
   2b038:	cmp	r3, r1
   2b03c:	bcs	2b0ec <flatcc_builder_create_cached_vtable@@Base+0x228>
   2b040:	mov	r0, r4
   2b044:	bl	29e78 <flatcc_builder_flush_vtable_cache@@Base>
   2b048:	b	2b0e4 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2b04c:	mov	r3, r2
   2b050:	b	2af6c <flatcc_builder_create_cached_vtable@@Base+0xa8>
   2b054:	add	r5, r5, #1
   2b058:	b	2af80 <flatcc_builder_create_cached_vtable@@Base+0xbc>
   2b05c:	ldr	r0, [r4, #68]	; 0x44
   2b060:	str	r3, [sp, #12]
   2b064:	ldr	r5, [r4, #100]	; 0x64
   2b068:	add	r5, r5, r9
   2b06c:	ldr	r2, [r5, #8]
   2b070:	add	r1, r0, r2
   2b074:	ldrh	r2, [r0, r2]
   2b078:	cmp	r2, r7
   2b07c:	bne	2b098 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2b080:	mov	r2, r7
   2b084:	mov	r0, sl
   2b088:	bl	13f14 <memcmp@plt>
   2b08c:	cmp	r0, #0
   2b090:	ldr	r3, [sp, #12]
   2b094:	beq	2b0a4 <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   2b098:	add	r3, r5, #12
   2b09c:	ldr	r9, [r5, #12]
   2b0a0:	b	2afb0 <flatcc_builder_create_cached_vtable@@Base+0xec>
   2b0a4:	ldr	r1, [r5, #4]
   2b0a8:	ldr	r2, [r4, #152]	; 0x98
   2b0ac:	cmp	r1, r2
   2b0b0:	beq	2b0c4 <flatcc_builder_create_cached_vtable@@Base+0x200>
   2b0b4:	add	r3, r5, #12
   2b0b8:	mov	fp, r5
   2b0bc:	ldr	r9, [r5, #12]
   2b0c0:	b	2afb0 <flatcc_builder_create_cached_vtable@@Base+0xec>
   2b0c4:	ldr	r2, [sp, #8]
   2b0c8:	cmp	r3, r2
   2b0cc:	beq	2b0e4 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2b0d0:	ldr	r2, [r5, #12]
   2b0d4:	str	r2, [r3]
   2b0d8:	ldr	r3, [r8, r6, lsl #2]
   2b0dc:	str	r3, [r5, #12]
   2b0e0:	str	r9, [r8, r6, lsl #2]
   2b0e4:	ldr	r0, [r5]
   2b0e8:	b	2af2c <flatcc_builder_create_cached_vtable@@Base+0x68>
   2b0ec:	mov	r3, #0
   2b0f0:	mov	r1, #2
   2b0f4:	mov	r0, r4
   2b0f8:	str	r3, [sp]
   2b0fc:	mov	r3, r7
   2b100:	bl	2996c <flatcc_builder_default_alloc@@Base+0xf8>
   2b104:	cmp	r0, #0
   2b108:	mvneq	r0, #0
   2b10c:	beq	2af2c <flatcc_builder_create_cached_vtable@@Base+0x68>
   2b110:	ldr	r3, [r4, #120]	; 0x78
   2b114:	mov	r2, r7
   2b118:	mov	r1, sl
   2b11c:	str	r3, [r5, #8]
   2b120:	add	r3, r3, r7
   2b124:	str	r3, [r4, #120]	; 0x78
   2b128:	bl	13efc <memcpy@plt>
   2b12c:	b	2b0e4 <flatcc_builder_create_cached_vtable@@Base+0x220>
   2b130:	andeq	r9, r4, r8, lsl #1
   2b134:	andeq	r9, r4, r2, lsr #6
   2b138:	muleq	r4, r5, r5

0002b13c <flatcc_builder_create_table@@Base>:
   2b13c:	push	{r4, r5, r6, r7, lr}
   2b140:	sub	sp, sp, #84	; 0x54
   2b144:	ldr	r4, [sp, #108]	; 0x6c
   2b148:	ldr	ip, [sp, #112]	; 0x70
   2b14c:	cmp	r4, #0
   2b150:	bge	2b168 <flatcc_builder_create_table@@Base+0x2c>
   2b154:	ldr	r3, [pc, #276]	; 2b270 <flatcc_builder_create_table@@Base+0x134>
   2b158:	movw	r2, #1237	; 0x4d5
   2b15c:	ldr	r1, [pc, #272]	; 2b274 <flatcc_builder_create_table@@Base+0x138>
   2b160:	ldr	r0, [pc, #272]	; 2b278 <flatcc_builder_create_table@@Base+0x13c>
   2b164:	bl	14070 <__assert_fail@plt>
   2b168:	tst	ip, #1
   2b16c:	bne	2b184 <flatcc_builder_create_table@@Base+0x48>
   2b170:	ldr	r3, [pc, #248]	; 2b270 <flatcc_builder_create_table@@Base+0x134>
   2b174:	movw	r2, #1243	; 0x4db
   2b178:	ldr	r1, [pc, #244]	; 2b274 <flatcc_builder_create_table@@Base+0x138>
   2b17c:	ldr	r0, [pc, #248]	; 2b27c <flatcc_builder_create_table@@Base+0x140>
   2b180:	b	2b164 <flatcc_builder_create_table@@Base+0x28>
   2b184:	cmp	r3, #4
   2b188:	sub	ip, ip, #1
   2b18c:	movcs	lr, r3
   2b190:	ldrh	r3, [r0, #128]	; 0x80
   2b194:	movcc	lr, #4
   2b198:	cmp	r3, lr
   2b19c:	ldr	r3, [r0, #136]	; 0x88
   2b1a0:	strhcc	lr, [r0, #128]	; 0x80
   2b1a4:	sub	lr, lr, #1
   2b1a8:	sub	r5, r3, r2
   2b1ac:	sub	r3, r5, #4
   2b1b0:	and	lr, lr, r5
   2b1b4:	sub	ip, r3, ip
   2b1b8:	sub	r3, lr, r3
   2b1bc:	sub	ip, ip, lr
   2b1c0:	sub	r3, r3, #4
   2b1c4:	str	ip, [sp, #4]
   2b1c8:	ldr	ip, [sp, #104]	; 0x68
   2b1cc:	add	r4, ip, r4, lsl #1
   2b1d0:	cmp	r4, ip
   2b1d4:	bne	2b258 <flatcc_builder_create_table@@Base+0x11c>
   2b1d8:	mov	r3, #4
   2b1dc:	cmp	r2, #0
   2b1e0:	add	ip, sp, r3
   2b1e4:	str	r3, [sp, #8]
   2b1e8:	str	ip, [sp, #16]
   2b1ec:	str	r3, [sp, #20]
   2b1f0:	mov	r3, #1
   2b1f4:	str	r3, [sp, #12]
   2b1f8:	beq	2b214 <flatcc_builder_create_table@@Base+0xd8>
   2b1fc:	add	r3, r2, #4
   2b200:	str	r3, [sp, #8]
   2b204:	mov	r3, #2
   2b208:	str	r1, [sp, #24]
   2b20c:	str	r3, [sp, #12]
   2b210:	str	r2, [sp, #28]
   2b214:	cmp	lr, #0
   2b218:	beq	2b248 <flatcc_builder_create_table@@Base+0x10c>
   2b21c:	ldr	r3, [sp, #8]
   2b220:	add	r2, sp, #80	; 0x50
   2b224:	ldr	r1, [pc, #84]	; 2b280 <flatcc_builder_create_table@@Base+0x144>
   2b228:	add	r3, r3, lr
   2b22c:	str	r3, [sp, #8]
   2b230:	ldr	r3, [sp, #12]
   2b234:	add	r3, r3, #1
   2b238:	add	r2, r2, r3, lsl #3
   2b23c:	str	r3, [sp, #12]
   2b240:	str	r1, [r2, #-72]	; 0xffffffb8
   2b244:	str	lr, [r2, #-68]	; 0xffffffbc
   2b248:	add	r1, sp, #8
   2b24c:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   2b250:	add	sp, sp, #84	; 0x54
   2b254:	pop	{r4, r5, r6, r7, pc}
   2b258:	ldrh	r5, [ip], #2
   2b25c:	ldr	r6, [r1, r5]
   2b260:	sub	r7, r3, r5
   2b264:	add	r6, r6, r7
   2b268:	str	r6, [r1, r5]
   2b26c:	b	2b1d0 <flatcc_builder_create_table@@Base+0x94>
   2b270:	muleq	r4, r1, r0
   2b274:	andeq	r9, r4, r2, lsr #6
   2b278:	andeq	r9, r4, r4, lsr #11
   2b27c:			; <UNDEFINED> instruction: 0x000495b6
   2b280:	andeq	r8, r4, ip, lsr ip

0002b284 <flatcc_builder_check_required_field@@Base>:
   2b284:	ldr	r3, [r0, #32]
   2b288:	ldrh	r3, [r3, #14]
   2b28c:	cmp	r3, #3
   2b290:	beq	2b2ac <flatcc_builder_check_required_field@@Base+0x28>
   2b294:	push	{r4, lr}
   2b298:	movw	r2, #1272	; 0x4f8
   2b29c:	ldr	r3, [pc, #52]	; 2b2d8 <flatcc_builder_check_required_field@@Base+0x54>
   2b2a0:	ldr	r1, [pc, #52]	; 2b2dc <flatcc_builder_check_required_field@@Base+0x58>
   2b2a4:	ldr	r0, [pc, #52]	; 2b2e0 <flatcc_builder_check_required_field@@Base+0x5c>
   2b2a8:	bl	14070 <__assert_fail@plt>
   2b2ac:	ldrh	r3, [r0, #8]
   2b2b0:	cmp	r3, r1
   2b2b4:	bls	2b2d0 <flatcc_builder_check_required_field@@Base+0x4c>
   2b2b8:	ldr	r3, [r0, #4]
   2b2bc:	lsl	r1, r1, #1
   2b2c0:	ldrh	r0, [r3, r1]
   2b2c4:	adds	r0, r0, #0
   2b2c8:	movne	r0, #1
   2b2cc:	bx	lr
   2b2d0:	mov	r0, #0
   2b2d4:	bx	lr
   2b2d8:	andeq	r9, r4, sp, lsr #1
   2b2dc:	andeq	r9, r4, r2, lsr #6
   2b2e0:	andeq	r9, r4, r1, asr #11

0002b2e4 <flatcc_builder_check_union_field@@Base>:
   2b2e4:	ldr	r3, [r0, #32]
   2b2e8:	ldrh	r3, [r3, #14]
   2b2ec:	cmp	r3, #3
   2b2f0:	beq	2b30c <flatcc_builder_check_union_field@@Base+0x28>
   2b2f4:	push	{r4, lr}
   2b2f8:	movw	r2, #1279	; 0x4ff
   2b2fc:	ldr	r3, [pc, #104]	; 2b36c <flatcc_builder_check_union_field@@Base+0x88>
   2b300:	ldr	r1, [pc, #104]	; 2b370 <flatcc_builder_check_union_field@@Base+0x8c>
   2b304:	ldr	r0, [pc, #104]	; 2b374 <flatcc_builder_check_union_field@@Base+0x90>
   2b308:	bl	14070 <__assert_fail@plt>
   2b30c:	cmp	r1, #0
   2b310:	beq	2b364 <flatcc_builder_check_union_field@@Base+0x80>
   2b314:	ldrh	r3, [r0, #8]
   2b318:	cmp	r3, r1
   2b31c:	bls	2b364 <flatcc_builder_check_union_field@@Base+0x80>
   2b320:	ldr	r3, [r0, #4]
   2b324:	sub	r1, r1, #-2147483647	; 0x80000001
   2b328:	lsl	r1, r1, #1
   2b32c:	ldrh	r2, [r3, r1]!
   2b330:	cmp	r2, #0
   2b334:	ldrh	r1, [r3, #2]
   2b338:	bne	2b348 <flatcc_builder_check_union_field@@Base+0x64>
   2b33c:	clz	r0, r1
   2b340:	lsr	r0, r0, #5
   2b344:	bx	lr
   2b348:	ldr	r3, [r0, #16]
   2b34c:	ldrb	r3, [r3, r2]
   2b350:	cmp	r3, #0
   2b354:	beq	2b33c <flatcc_builder_check_union_field@@Base+0x58>
   2b358:	adds	r0, r1, #0
   2b35c:	movne	r0, #1
   2b360:	bx	lr
   2b364:	mov	r0, #0
   2b368:	bx	lr
   2b36c:	ldrdeq	r9, [r4], -r1
   2b370:	andeq	r9, r4, r2, lsr #6
   2b374:	andeq	r9, r4, r1, asr #11

0002b378 <flatcc_builder_check_required@@Base>:
   2b378:	ldr	r3, [r0, #32]
   2b37c:	push	{r4, lr}
   2b380:	ldrh	r3, [r3, #14]
   2b384:	cmp	r3, #3
   2b388:	beq	2b3a0 <flatcc_builder_check_required@@Base+0x28>
   2b38c:	ldr	r3, [pc, #84]	; 2b3e8 <flatcc_builder_check_required@@Base+0x70>
   2b390:	movw	r2, #1297	; 0x511
   2b394:	ldr	r1, [pc, #80]	; 2b3ec <flatcc_builder_check_required@@Base+0x74>
   2b398:	ldr	r0, [pc, #80]	; 2b3f0 <flatcc_builder_check_required@@Base+0x78>
   2b39c:	bl	14070 <__assert_fail@plt>
   2b3a0:	ldrh	r3, [r0, #8]
   2b3a4:	cmp	r3, r2
   2b3a8:	subge	r1, r1, #2
   2b3ac:	movge	ip, #0
   2b3b0:	bge	2b3d8 <flatcc_builder_check_required@@Base+0x60>
   2b3b4:	mov	r0, #0
   2b3b8:	pop	{r4, pc}
   2b3bc:	ldrh	r3, [r1, #2]!
   2b3c0:	ldr	lr, [r0, #4]
   2b3c4:	lsl	r3, r3, #1
   2b3c8:	ldrh	r3, [lr, r3]
   2b3cc:	cmp	r3, #0
   2b3d0:	beq	2b3b4 <flatcc_builder_check_required@@Base+0x3c>
   2b3d4:	add	ip, ip, #1
   2b3d8:	cmp	ip, r2
   2b3dc:	blt	2b3bc <flatcc_builder_check_required@@Base+0x44>
   2b3e0:	mov	r0, #1
   2b3e4:	pop	{r4, pc}
   2b3e8:	strdeq	r9, [r4], -r2
   2b3ec:	andeq	r9, r4, r2, lsr #6
   2b3f0:	andeq	r9, r4, r1, asr #11

0002b3f4 <flatcc_builder_end_table@@Base>:
   2b3f4:	ldr	r3, [r0, #32]
   2b3f8:	push	{r4, r5, r6, r7, lr}
   2b3fc:	sub	sp, sp, #20
   2b400:	ldrh	r3, [r3, #14]
   2b404:	cmp	r3, #3
   2b408:	beq	2b420 <flatcc_builder_end_table@@Base+0x2c>
   2b40c:	ldr	r3, [pc, #260]	; 2b518 <flatcc_builder_end_table@@Base+0x124>
   2b410:	movw	r2, #1317	; 0x525
   2b414:	ldr	r1, [pc, #256]	; 2b51c <flatcc_builder_end_table@@Base+0x128>
   2b418:	ldr	r0, [pc, #256]	; 2b520 <flatcc_builder_end_table@@Base+0x12c>
   2b41c:	bl	14070 <__assert_fail@plt>
   2b420:	ldrh	r5, [r0, #8]
   2b424:	mov	r4, r0
   2b428:	ldr	r1, [r0, #4]
   2b42c:	ldr	r3, [r0, #20]
   2b430:	add	r5, r5, #2
   2b434:	lsl	r5, r5, #1
   2b438:	sub	r6, r1, #4
   2b43c:	uxth	r5, r5
   2b440:	add	r3, r3, #4
   2b444:	uxth	r2, r3
   2b448:	ldr	r3, [r0, #12]
   2b44c:	strh	r5, [r1, #-4]
   2b450:	strh	r2, [r1, #-2]
   2b454:	ldr	r1, [pc, #200]	; 2b524 <flatcc_builder_end_table@@Base+0x130>
   2b458:	eor	r3, r3, r5
   2b45c:	mul	r3, r1, r3
   2b460:	eor	r3, r3, r2
   2b464:	mov	r2, r5
   2b468:	mul	r3, r1, r3
   2b46c:	mov	r1, r6
   2b470:	str	r3, [r0, #12]
   2b474:	bl	2aec4 <flatcc_builder_create_cached_vtable@@Base>
   2b478:	subs	r7, r0, #0
   2b47c:	beq	2b50c <flatcc_builder_end_table@@Base+0x118>
   2b480:	mov	r2, r5
   2b484:	mov	r1, #0
   2b488:	mov	r0, r6
   2b48c:	bl	13fc8 <memset@plt>
   2b490:	ldr	r3, [r4, #32]
   2b494:	mov	r0, r4
   2b498:	ldr	r2, [r4, #76]	; 0x4c
   2b49c:	ldr	r3, [r3, #20]
   2b4a0:	str	r7, [sp, #8]
   2b4a4:	add	r2, r2, r3
   2b4a8:	ldr	r3, [r4]
   2b4ac:	sub	r3, r3, r2
   2b4b0:	asr	r3, r3, #1
   2b4b4:	strd	r2, [sp]
   2b4b8:	ldrh	r3, [r4, #130]	; 0x82
   2b4bc:	ldr	r1, [r4, #16]
   2b4c0:	ldr	r2, [r4, #20]
   2b4c4:	bl	2b13c <flatcc_builder_create_table@@Base>
   2b4c8:	subs	r7, r0, #0
   2b4cc:	beq	2b50c <flatcc_builder_end_table@@Base+0x118>
   2b4d0:	ldr	r3, [r4, #32]
   2b4d4:	mov	r0, r4
   2b4d8:	ldr	r1, [r3, #16]
   2b4dc:	ldr	r2, [r3, #24]
   2b4e0:	str	r2, [r4, #12]
   2b4e4:	ldrh	r2, [r3, #28]
   2b4e8:	ldr	r3, [r3, #20]
   2b4ec:	strh	r2, [r4, #8]
   2b4f0:	ldr	r2, [r4, #52]	; 0x34
   2b4f4:	add	r2, r2, r1
   2b4f8:	str	r2, [r4, #4]
   2b4fc:	ldr	r2, [r4, #76]	; 0x4c
   2b500:	add	r3, r2, r3
   2b504:	str	r3, [r4]
   2b508:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b50c:	mov	r0, r7
   2b510:	add	sp, sp, #20
   2b514:	pop	{r4, r5, r6, r7, pc}
   2b518:	andeq	r9, r4, r0, lsl r1
   2b51c:	andeq	r9, r4, r2, lsr #6
   2b520:	andeq	r9, r4, r1, asr #11
   2b524:			; <UNDEFINED> instruction: 0x9e3779b1

0002b528 <flatcc_builder_create_vector@@Base>:
   2b528:	push	{lr}		; (str lr, [sp, #-4]!)
   2b52c:	sub	sp, sp, #84	; 0x54
   2b530:	ldr	lr, [sp, #92]	; 0x5c
   2b534:	ldrh	ip, [sp, #88]	; 0x58
   2b538:	cmp	r2, lr
   2b53c:	bls	2b554 <flatcc_builder_create_vector@@Base+0x2c>
   2b540:	ldr	r3, [pc, #184]	; 2b600 <flatcc_builder_create_vector@@Base+0xd8>
   2b544:	movw	r2, #1365	; 0x555
   2b548:	ldr	r1, [pc, #180]	; 2b604 <flatcc_builder_create_vector@@Base+0xdc>
   2b54c:	ldr	r0, [pc, #180]	; 2b608 <flatcc_builder_create_vector@@Base+0xe0>
   2b550:	bl	14070 <__assert_fail@plt>
   2b554:	ldrh	lr, [r0, #128]	; 0x80
   2b558:	mul	r3, r3, r2
   2b55c:	cmp	ip, #4
   2b560:	str	r2, [sp, #4]
   2b564:	movcc	ip, #4
   2b568:	ldr	r2, [r0, #136]	; 0x88
   2b56c:	cmp	lr, ip
   2b570:	sub	r2, r2, r3
   2b574:	strhcc	ip, [r0, #128]	; 0x80
   2b578:	sub	ip, ip, #1
   2b57c:	and	ip, ip, r2
   2b580:	mov	r2, #4
   2b584:	add	lr, sp, r2
   2b588:	cmp	r3, #0
   2b58c:	str	r2, [sp, #8]
   2b590:	str	lr, [sp, #16]
   2b594:	str	r2, [sp, #20]
   2b598:	mov	r2, #1
   2b59c:	str	r2, [sp, #12]
   2b5a0:	beq	2b5bc <flatcc_builder_create_vector@@Base+0x94>
   2b5a4:	add	r2, r3, #4
   2b5a8:	str	r3, [sp, #28]
   2b5ac:	mov	r3, #2
   2b5b0:	str	r2, [sp, #8]
   2b5b4:	str	r3, [sp, #12]
   2b5b8:	str	r1, [sp, #24]
   2b5bc:	cmp	ip, #0
   2b5c0:	beq	2b5f0 <flatcc_builder_create_vector@@Base+0xc8>
   2b5c4:	ldr	r3, [sp, #8]
   2b5c8:	add	r2, sp, #80	; 0x50
   2b5cc:	ldr	r1, [pc, #56]	; 2b60c <flatcc_builder_create_vector@@Base+0xe4>
   2b5d0:	add	r3, r3, ip
   2b5d4:	str	r3, [sp, #8]
   2b5d8:	ldr	r3, [sp, #12]
   2b5dc:	add	r3, r3, #1
   2b5e0:	add	r2, r2, r3, lsl #3
   2b5e4:	str	r3, [sp, #12]
   2b5e8:	str	r1, [r2, #-72]	; 0xffffffb8
   2b5ec:	str	ip, [r2, #-68]	; 0xffffffbc
   2b5f0:	add	r1, sp, #8
   2b5f4:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   2b5f8:	add	sp, sp, #84	; 0x54
   2b5fc:	pop	{pc}		; (ldr pc, [sp], #4)
   2b600:	andeq	r9, r4, r9, lsr #2
   2b604:	andeq	r9, r4, r2, lsr #6
   2b608:	andeq	r9, r4, ip, ror #11
   2b60c:	andeq	r8, r4, ip, lsr ip

0002b610 <flatcc_builder_end_vector@@Base>:
   2b610:	push	{r0, r1, r2, r4, r5, lr}
   2b614:	ldr	r2, [r0, #32]
   2b618:	ldrh	r3, [r2, #14]
   2b61c:	cmp	r3, #4
   2b620:	beq	2b638 <flatcc_builder_end_vector@@Base+0x28>
   2b624:	ldr	r3, [pc, #76]	; 2b678 <flatcc_builder_end_vector@@Base+0x68>
   2b628:	movw	r2, #1400	; 0x578
   2b62c:	ldr	r1, [pc, #72]	; 2b67c <flatcc_builder_end_vector@@Base+0x6c>
   2b630:	ldr	r0, [pc, #72]	; 2b680 <flatcc_builder_end_vector@@Base+0x70>
   2b634:	bl	14070 <__assert_fail@plt>
   2b638:	ldr	r3, [r2, #24]
   2b63c:	mov	r4, r0
   2b640:	str	r3, [sp, #4]
   2b644:	ldrh	r3, [r0, #130]	; 0x82
   2b648:	str	r3, [sp]
   2b64c:	ldr	r3, [r2, #16]
   2b650:	ldr	r1, [r0, #16]
   2b654:	ldr	r2, [r2, #20]
   2b658:	bl	2b528 <flatcc_builder_create_vector@@Base>
   2b65c:	subs	r5, r0, #0
   2b660:	beq	2b66c <flatcc_builder_end_vector@@Base+0x5c>
   2b664:	mov	r0, r4
   2b668:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b66c:	mov	r0, r5
   2b670:	add	sp, sp, #12
   2b674:	pop	{r4, r5, pc}
   2b678:	andeq	r9, r4, r6, asr #2
   2b67c:	andeq	r9, r4, r2, lsr #6
   2b680:	andeq	r9, r4, ip, asr #8

0002b684 <flatcc_builder_vector_count@@Base>:
   2b684:	ldr	r3, [r0, #32]
   2b688:	ldr	r0, [r3, #20]
   2b68c:	bx	lr

0002b690 <flatcc_builder_vector_edit@@Base>:
   2b690:	ldr	r0, [r0, #16]
   2b694:	bx	lr

0002b698 <flatcc_builder_create_offset_vector_direct@@Base>:
   2b698:	cmn	r2, #-1073741823	; 0xc0000001
   2b69c:	bhi	2b6a8 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   2b6a0:	mov	r3, #0
   2b6a4:	b	29d20 <flatcc_builder_default_alloc@@Base+0x4ac>
   2b6a8:	mov	r0, #0
   2b6ac:	bx	lr

0002b6b0 <flatcc_builder_end_offset_vector@@Base>:
   2b6b0:	ldr	r3, [r0, #32]
   2b6b4:	push	{r4, r5, r6, lr}
   2b6b8:	ldrh	r2, [r3, #14]
   2b6bc:	cmp	r2, #5
   2b6c0:	beq	2b6d8 <flatcc_builder_end_offset_vector@@Base+0x28>
   2b6c4:	ldr	r3, [pc, #52]	; 2b700 <flatcc_builder_end_offset_vector@@Base+0x50>
   2b6c8:	movw	r2, #1480	; 0x5c8
   2b6cc:	ldr	r1, [pc, #48]	; 2b704 <flatcc_builder_end_offset_vector@@Base+0x54>
   2b6d0:	ldr	r0, [pc, #48]	; 2b708 <flatcc_builder_end_offset_vector@@Base+0x58>
   2b6d4:	bl	14070 <__assert_fail@plt>
   2b6d8:	ldr	r1, [r0, #16]
   2b6dc:	mov	r4, r0
   2b6e0:	ldr	r2, [r3, #20]
   2b6e4:	bl	2b698 <flatcc_builder_create_offset_vector_direct@@Base>
   2b6e8:	subs	r5, r0, #0
   2b6ec:	beq	2b6f8 <flatcc_builder_end_offset_vector@@Base+0x48>
   2b6f0:	mov	r0, r4
   2b6f4:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b6f8:	mov	r0, r5
   2b6fc:	pop	{r4, r5, r6, pc}
   2b700:	andeq	r9, r4, r0, ror #2
   2b704:	andeq	r9, r4, r2, lsr #6
   2b708:			; <UNDEFINED> instruction: 0x000494b5

0002b70c <flatcc_builder_create_offset_vector@@Base>:
   2b70c:	push	{r4, r5, r6, lr}
   2b710:	mov	r4, r0
   2b714:	mov	r6, r1
   2b718:	mov	r5, r2
   2b71c:	bl	2ad0c <flatcc_builder_start_offset_vector@@Base>
   2b720:	cmp	r0, #0
   2b724:	bne	2b754 <flatcc_builder_create_offset_vector@@Base+0x48>
   2b728:	mov	r1, r5
   2b72c:	mov	r0, r4
   2b730:	bl	2a91c <flatcc_builder_extend_offset_vector@@Base>
   2b734:	cmp	r0, #0
   2b738:	beq	2b754 <flatcc_builder_create_offset_vector@@Base+0x48>
   2b73c:	lsl	r2, r5, #2
   2b740:	mov	r1, r6
   2b744:	bl	13efc <memcpy@plt>
   2b748:	mov	r0, r4
   2b74c:	pop	{r4, r5, r6, lr}
   2b750:	b	2b6b0 <flatcc_builder_end_offset_vector@@Base>
   2b754:	mov	r0, #0
   2b758:	pop	{r4, r5, r6, pc}

0002b75c <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2b75c:	ldr	r2, [r0, #32]
   2b760:	mov	r3, r1
   2b764:	push	{r4, r5, r6, lr}
   2b768:	ldrh	r1, [r2, #14]
   2b76c:	cmp	r1, #5
   2b770:	beq	2b788 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   2b774:	ldr	r3, [pc, #64]	; 2b7bc <flatcc_builder_end_offset_vector_for_unions@@Base+0x60>
   2b778:	movw	r2, #1493	; 0x5d5
   2b77c:	ldr	r1, [pc, #60]	; 2b7c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0x64>
   2b780:	ldr	r0, [pc, #60]	; 2b7c4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x68>
   2b784:	bl	14070 <__assert_fail@plt>
   2b788:	ldr	r2, [r2, #20]
   2b78c:	cmn	r2, #-1073741823	; 0xc0000001
   2b790:	movhi	r5, #0
   2b794:	bhi	2b7b4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2b798:	ldr	r1, [r0, #16]
   2b79c:	mov	r4, r0
   2b7a0:	bl	29d20 <flatcc_builder_default_alloc@@Base+0x4ac>
   2b7a4:	subs	r5, r0, #0
   2b7a8:	beq	2b7b4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x58>
   2b7ac:	mov	r0, r4
   2b7b0:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b7b4:	mov	r0, r5
   2b7b8:	pop	{r4, r5, r6, pc}
   2b7bc:	andeq	r9, r4, r1, lsl #3
   2b7c0:	andeq	r9, r4, r2, lsr #6
   2b7c4:			; <UNDEFINED> instruction: 0x000494b5

0002b7c8 <flatcc_builder_offset_vector_edit@@Base>:
   2b7c8:	ldr	r0, [r0, #16]
   2b7cc:	bx	lr

0002b7d0 <flatcc_builder_offset_vector_count@@Base>:
   2b7d0:	ldr	r3, [r0, #32]
   2b7d4:	ldr	r0, [r3, #20]
   2b7d8:	bx	lr

0002b7dc <flatcc_builder_create_union_vector_direct@@Base>:
   2b7dc:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   2b7e0:	mov	r4, r0
   2b7e4:	ldr	r5, [sp, #32]
   2b7e8:	cmn	r5, #-1073741823	; 0xc0000001
   2b7ec:	bls	2b808 <flatcc_builder_create_union_vector_direct@@Base+0x2c>
   2b7f0:	mov	r3, #0
   2b7f4:	str	r3, [r4]
   2b7f8:	str	r3, [r4, #4]
   2b7fc:	mov	r0, r4
   2b800:	add	sp, sp, #8
   2b804:	pop	{r4, r5, r6, r7, r8, pc}
   2b808:	mov	r7, r1
   2b80c:	mov	r8, r2
   2b810:	mov	r1, r3
   2b814:	mov	r0, r7
   2b818:	mov	r3, r2
   2b81c:	mov	r2, r5
   2b820:	bl	29d20 <flatcc_builder_default_alloc@@Base+0x4ac>
   2b824:	subs	r6, r0, #0
   2b828:	beq	2b7f0 <flatcc_builder_create_union_vector_direct@@Base+0x14>
   2b82c:	mvn	r3, #0
   2b830:	mov	r2, r5
   2b834:	mov	r1, r8
   2b838:	mov	r0, r7
   2b83c:	str	r3, [sp, #4]
   2b840:	mov	r3, #1
   2b844:	str	r3, [sp]
   2b848:	bl	2b528 <flatcc_builder_create_vector@@Base>
   2b84c:	stm	r4, {r0, r6}
   2b850:	b	2b7fc <flatcc_builder_create_union_vector_direct@@Base+0x20>

0002b854 <flatcc_builder_create_union_vector@@Base>:
   2b854:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   2b858:	mov	r6, r0
   2b85c:	mov	r0, r1
   2b860:	mov	r5, r1
   2b864:	mov	r8, r2
   2b868:	mov	r7, r3
   2b86c:	bl	2ad0c <flatcc_builder_start_offset_vector@@Base>
   2b870:	subs	r4, r0, #0
   2b874:	beq	2b890 <flatcc_builder_create_union_vector@@Base+0x3c>
   2b878:	mov	r3, #0
   2b87c:	str	r3, [r6]
   2b880:	str	r3, [r6, #4]
   2b884:	mov	r0, r6
   2b888:	add	sp, sp, #16
   2b88c:	pop	{r4, r5, r6, r7, r8, pc}
   2b890:	mov	r1, r7
   2b894:	mov	r0, r5
   2b898:	bl	2a91c <flatcc_builder_extend_offset_vector@@Base>
   2b89c:	cmp	r0, #0
   2b8a0:	beq	2b878 <flatcc_builder_create_union_vector@@Base+0x24>
   2b8a4:	mov	r1, r7
   2b8a8:	mov	r0, r5
   2b8ac:	bl	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2b8b0:	subs	r2, r0, #0
   2b8b4:	movne	r1, r4
   2b8b8:	addne	r0, r8, #4
   2b8bc:	ldrne	r3, [r5, #16]
   2b8c0:	beq	2b878 <flatcc_builder_create_union_vector@@Base+0x24>
   2b8c4:	cmp	r1, r7
   2b8c8:	bne	2b8f8 <flatcc_builder_create_union_vector@@Base+0xa4>
   2b8cc:	add	r0, sp, #8
   2b8d0:	str	r1, [sp]
   2b8d4:	mov	r1, r5
   2b8d8:	bl	2b7dc <flatcc_builder_create_union_vector_direct@@Base>
   2b8dc:	ldr	r7, [sp, #8]
   2b8e0:	mov	r0, r5
   2b8e4:	ldr	r4, [sp, #12]
   2b8e8:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b8ec:	str	r7, [r6]
   2b8f0:	str	r4, [r6, #4]
   2b8f4:	b	2b884 <flatcc_builder_create_union_vector@@Base+0x30>
   2b8f8:	ldrb	ip, [r8, r1, lsl #3]
   2b8fc:	strb	ip, [r2, r1]
   2b900:	ldr	ip, [r0, r1, lsl #3]
   2b904:	str	ip, [r3, r1, lsl #2]
   2b908:	add	r1, r1, #1
   2b90c:	b	2b8c4 <flatcc_builder_create_union_vector@@Base+0x70>

0002b910 <flatcc_builder_start_union_vector@@Base>:
   2b910:	push	{r4, r5, r6, lr}
   2b914:	mov	r1, #4
   2b918:	mov	r5, r0
   2b91c:	bl	299dc <flatcc_builder_default_alloc@@Base+0x168>
   2b920:	subs	r4, r0, #0
   2b924:	mvnne	r4, #0
   2b928:	bne	2b950 <flatcc_builder_start_union_vector@@Base+0x40>
   2b92c:	ldr	r3, [r5, #32]
   2b930:	mov	r2, #8
   2b934:	mvn	r1, #3
   2b938:	mov	r0, r5
   2b93c:	str	r2, [r3, #16]
   2b940:	mov	r2, #7
   2b944:	strh	r2, [r3, #14]
   2b948:	str	r4, [r3, #20]
   2b94c:	bl	296ac <__flatcc_fb_coerce_scalar_type@@Base+0x47c>
   2b950:	mov	r0, r4
   2b954:	pop	{r4, r5, r6, pc}

0002b958 <flatcc_builder_end_union_vector@@Base>:
   2b958:	ldr	r3, [r1, #32]
   2b95c:	push	{r4, r5, r6, r7, lr}
   2b960:	sub	sp, sp, #20
   2b964:	ldrh	r2, [r3, #14]
   2b968:	cmp	r2, #7
   2b96c:	beq	2b984 <flatcc_builder_end_union_vector@@Base+0x2c>
   2b970:	ldr	r3, [pc, #156]	; 2ba14 <flatcc_builder_end_union_vector@@Base+0xbc>
   2b974:	movw	r2, #1617	; 0x651
   2b978:	ldr	r1, [pc, #152]	; 2ba18 <flatcc_builder_end_union_vector@@Base+0xc0>
   2b97c:	ldr	r0, [pc, #152]	; 2ba1c <flatcc_builder_end_union_vector@@Base+0xc4>
   2b980:	bl	14070 <__assert_fail@plt>
   2b984:	ldr	r7, [r3, #20]
   2b988:	mov	r4, r0
   2b98c:	mov	r5, r1
   2b990:	mov	r0, r1
   2b994:	lsl	r6, r7, #2
   2b998:	add	r1, r6, r7
   2b99c:	bl	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2b9a0:	subs	r3, r0, #0
   2b9a4:	streq	r3, [r4]
   2b9a8:	streq	r3, [r4, #4]
   2b9ac:	beq	2b9f0 <flatcc_builder_end_union_vector@@Base+0x98>
   2b9b0:	ldr	r0, [r5, #16]
   2b9b4:	add	r2, r3, r6
   2b9b8:	mov	r1, #0
   2b9bc:	add	ip, r0, #4
   2b9c0:	cmp	r1, r7
   2b9c4:	bne	2b9fc <flatcc_builder_end_union_vector@@Base+0xa4>
   2b9c8:	add	r0, sp, #8
   2b9cc:	str	r1, [sp]
   2b9d0:	mov	r1, r5
   2b9d4:	bl	2b7dc <flatcc_builder_create_union_vector_direct@@Base>
   2b9d8:	ldr	r7, [sp, #8]
   2b9dc:	mov	r0, r5
   2b9e0:	ldr	r6, [sp, #12]
   2b9e4:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2b9e8:	str	r7, [r4]
   2b9ec:	str	r6, [r4, #4]
   2b9f0:	mov	r0, r4
   2b9f4:	add	sp, sp, #20
   2b9f8:	pop	{r4, r5, r6, r7, pc}
   2b9fc:	ldrb	lr, [r0, r1, lsl #3]
   2ba00:	strb	lr, [r2, r1]
   2ba04:	ldr	lr, [ip, r1, lsl #3]
   2ba08:	str	lr, [r3, r1, lsl #2]
   2ba0c:	add	r1, r1, #1
   2ba10:	b	2b9c0 <flatcc_builder_end_union_vector@@Base+0x68>
   2ba14:	andeq	r9, r4, sp, lsr #3
   2ba18:	andeq	r9, r4, r2, lsr #6
   2ba1c:	strdeq	r9, [r4], -pc	; <UNPREDICTABLE>

0002ba20 <flatcc_builder_union_vector_edit@@Base>:
   2ba20:	ldr	r0, [r0, #16]
   2ba24:	bx	lr

0002ba28 <flatcc_builder_union_vector_count@@Base>:
   2ba28:	ldr	r3, [r0, #32]
   2ba2c:	ldr	r0, [r3, #20]
   2ba30:	bx	lr

0002ba34 <flatcc_builder_extend_union_vector@@Base>:
   2ba34:	push	{r4, r5, r6, lr}
   2ba38:	mvn	r2, #-536870912	; 0xe0000000
   2ba3c:	mov	r4, r0
   2ba40:	mov	r5, r1
   2ba44:	ldr	r0, [r0, #32]
   2ba48:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2ba4c:	cmp	r0, #0
   2ba50:	bne	2ba64 <flatcc_builder_extend_union_vector@@Base+0x30>
   2ba54:	lsl	r1, r5, #3
   2ba58:	mov	r0, r4
   2ba5c:	pop	{r4, r5, r6, lr}
   2ba60:	b	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2ba64:	mov	r0, #0
   2ba68:	pop	{r4, r5, r6, pc}

0002ba6c <flatcc_builder_truncate_union_vector@@Base>:
   2ba6c:	ldr	r3, [r0, #32]
   2ba70:	push	{r4, lr}
   2ba74:	ldrh	r2, [r3, #14]
   2ba78:	cmp	r2, #7
   2ba7c:	beq	2ba94 <flatcc_builder_truncate_union_vector@@Base+0x28>
   2ba80:	ldr	r3, [pc, #72]	; 2bad0 <flatcc_builder_truncate_union_vector@@Base+0x64>
   2ba84:	movw	r2, #1665	; 0x681
   2ba88:	ldr	r1, [pc, #68]	; 2bad4 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2ba8c:	ldr	r0, [pc, #68]	; 2bad8 <flatcc_builder_truncate_union_vector@@Base+0x6c>
   2ba90:	bl	14070 <__assert_fail@plt>
   2ba94:	ldr	r2, [r3, #20]
   2ba98:	cmp	r2, r1
   2ba9c:	bcs	2bab4 <flatcc_builder_truncate_union_vector@@Base+0x48>
   2baa0:	ldr	r3, [pc, #40]	; 2bad0 <flatcc_builder_truncate_union_vector@@Base+0x64>
   2baa4:	movw	r2, #1666	; 0x682
   2baa8:	ldr	r1, [pc, #36]	; 2bad4 <flatcc_builder_truncate_union_vector@@Base+0x68>
   2baac:	ldr	r0, [pc, #40]	; 2badc <flatcc_builder_truncate_union_vector@@Base+0x70>
   2bab0:	b	2ba90 <flatcc_builder_truncate_union_vector@@Base+0x24>
   2bab4:	sub	r2, r2, r1
   2bab8:	str	r2, [r3, #20]
   2babc:	ldr	r3, [r3, #16]
   2bac0:	mul	r1, r3, r1
   2bac4:	bl	297d8 <__flatcc_fb_coerce_scalar_type@@Base+0x5a8>
   2bac8:	mov	r0, #0
   2bacc:	pop	{r4, pc}
   2bad0:	andeq	r9, r4, sp, asr #3
   2bad4:	andeq	r9, r4, r2, lsr #6
   2bad8:	strdeq	r9, [r4], -pc	; <UNPREDICTABLE>
   2badc:	andeq	r9, r4, r8, lsr r5

0002bae0 <flatcc_builder_union_vector_push@@Base>:
   2bae0:	push	{r0, r1, r4, lr}
   2bae4:	mov	r4, sp
   2bae8:	stm	r4, {r1, r2}
   2baec:	ldr	r2, [r0, #32]
   2baf0:	ldrh	r3, [r2, #14]
   2baf4:	cmp	r3, #7
   2baf8:	beq	2bb10 <flatcc_builder_union_vector_push@@Base+0x30>
   2bafc:	ldr	r3, [pc, #68]	; 2bb48 <flatcc_builder_union_vector_push@@Base+0x68>
   2bb00:	movw	r2, #1677	; 0x68d
   2bb04:	ldr	r1, [pc, #64]	; 2bb4c <flatcc_builder_union_vector_push@@Base+0x6c>
   2bb08:	ldr	r0, [pc, #64]	; 2bb50 <flatcc_builder_union_vector_push@@Base+0x70>
   2bb0c:	bl	14070 <__assert_fail@plt>
   2bb10:	ldr	r3, [r2, #20]
   2bb14:	cmn	r3, #-536870911	; 0xe0000001
   2bb18:	moveq	r3, #0
   2bb1c:	beq	2bb3c <flatcc_builder_union_vector_push@@Base+0x5c>
   2bb20:	add	r3, r3, #1
   2bb24:	mov	r1, #8
   2bb28:	str	r3, [r2, #20]
   2bb2c:	bl	29728 <__flatcc_fb_coerce_scalar_type@@Base+0x4f8>
   2bb30:	subs	r3, r0, #0
   2bb34:	ldmne	r4, {r0, r1}
   2bb38:	stmne	r3, {r0, r1}
   2bb3c:	mov	r0, r3
   2bb40:	add	sp, sp, #8
   2bb44:	pop	{r4, pc}
   2bb48:	strdeq	r9, [r4], -r2
   2bb4c:	andeq	r9, r4, r2, lsr #6
   2bb50:	strdeq	r9, [r4], -pc	; <UNPREDICTABLE>

0002bb54 <flatcc_builder_append_union_vector@@Base>:
   2bb54:	push	{r4, r5, r6, lr}
   2bb58:	mov	r4, r0
   2bb5c:	ldr	r0, [r0, #32]
   2bb60:	ldrh	r3, [r0, #14]
   2bb64:	cmp	r3, #7
   2bb68:	beq	2bb80 <flatcc_builder_append_union_vector@@Base+0x2c>
   2bb6c:	ldr	r3, [pc, #68]	; 2bbb8 <flatcc_builder_append_union_vector@@Base+0x64>
   2bb70:	movw	r2, #1692	; 0x69c
   2bb74:	ldr	r1, [pc, #64]	; 2bbbc <flatcc_builder_append_union_vector@@Base+0x68>
   2bb78:	ldr	r0, [pc, #64]	; 2bbc0 <flatcc_builder_append_union_vector@@Base+0x6c>
   2bb7c:	bl	14070 <__assert_fail@plt>
   2bb80:	mov	r5, r2
   2bb84:	mov	r6, r1
   2bb88:	mvn	r2, #-536870912	; 0xe0000000
   2bb8c:	mov	r1, r5
   2bb90:	bl	29ccc <flatcc_builder_default_alloc@@Base+0x458>
   2bb94:	cmp	r0, #0
   2bb98:	bne	2bbb0 <flatcc_builder_append_union_vector@@Base+0x5c>
   2bb9c:	lsl	r2, r5, #3
   2bba0:	mov	r1, r6
   2bba4:	mov	r0, r4
   2bba8:	pop	{r4, r5, r6, lr}
   2bbac:	b	297f8 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
   2bbb0:	mov	r0, #0
   2bbb4:	pop	{r4, r5, r6, pc}
   2bbb8:	andeq	r9, r4, r3, lsl r2
   2bbbc:	andeq	r9, r4, r2, lsr #6
   2bbc0:	strdeq	r9, [r4], -pc	; <UNPREDICTABLE>

0002bbc4 <flatcc_builder_create_string@@Base>:
   2bbc4:	ldr	r3, [r0, #136]	; 0x88
   2bbc8:	mov	ip, #4
   2bbcc:	cmp	r2, #0
   2bbd0:	push	{lr}		; (str lr, [sp, #-4]!)
   2bbd4:	sub	sp, sp, #84	; 0x54
   2bbd8:	add	lr, sp, ip
   2bbdc:	stmib	sp, {r2, ip}
   2bbe0:	sub	r3, r3, r2
   2bbe4:	str	lr, [sp, #16]
   2bbe8:	sub	r3, r3, #1
   2bbec:	str	ip, [sp, #20]
   2bbf0:	mov	ip, #1
   2bbf4:	and	r3, r3, #3
   2bbf8:	add	r3, r3, #1
   2bbfc:	str	ip, [sp, #12]
   2bc00:	beq	2bc1c <flatcc_builder_create_string@@Base+0x58>
   2bc04:	add	ip, r2, #4
   2bc08:	str	r2, [sp, #28]
   2bc0c:	mov	r2, #2
   2bc10:	str	ip, [sp, #8]
   2bc14:	str	r2, [sp, #12]
   2bc18:	str	r1, [sp, #24]
   2bc1c:	ldr	r2, [sp, #8]
   2bc20:	add	r1, sp, #80	; 0x50
   2bc24:	ldr	ip, [pc, #44]	; 2bc58 <flatcc_builder_create_string@@Base+0x94>
   2bc28:	add	r2, r2, r3
   2bc2c:	str	r2, [sp, #8]
   2bc30:	ldr	r2, [sp, #12]
   2bc34:	add	r2, r2, #1
   2bc38:	add	r1, r1, r2, lsl #3
   2bc3c:	str	r2, [sp, #12]
   2bc40:	str	ip, [r1, #-72]	; 0xffffffb8
   2bc44:	str	r3, [r1, #-68]	; 0xffffffbc
   2bc48:	add	r1, sp, #8
   2bc4c:	bl	29c54 <flatcc_builder_default_alloc@@Base+0x3e0>
   2bc50:	add	sp, sp, #84	; 0x54
   2bc54:	pop	{pc}		; (ldr pc, [sp], #4)
   2bc58:	andeq	r8, r4, ip, lsr ip

0002bc5c <flatcc_builder_create_string_str@@Base>:
   2bc5c:	push	{r4, r5, r6, lr}
   2bc60:	mov	r5, r0
   2bc64:	mov	r0, r1
   2bc68:	mov	r4, r1
   2bc6c:	bl	13fa4 <strlen@plt>
   2bc70:	mov	r2, r0
   2bc74:	mov	r1, r4
   2bc78:	mov	r0, r5
   2bc7c:	pop	{r4, r5, r6, lr}
   2bc80:	b	2bbc4 <flatcc_builder_create_string@@Base>

0002bc84 <flatcc_builder_create_string_strn@@Base>:
   2bc84:	push	{r4, r5, r6, lr}
   2bc88:	mov	r4, r1
   2bc8c:	mov	r6, r0
   2bc90:	mov	r1, #0
   2bc94:	mov	r0, r4
   2bc98:	mov	r5, r2
   2bc9c:	bl	13fec <memchr@plt>
   2bca0:	cmp	r0, #0
   2bca4:	mov	r1, r4
   2bca8:	subne	r5, r0, r4
   2bcac:	mov	r0, r6
   2bcb0:	mov	r2, r5
   2bcb4:	pop	{r4, r5, r6, lr}
   2bcb8:	b	2bbc4 <flatcc_builder_create_string@@Base>

0002bcbc <flatcc_builder_end_string@@Base>:
   2bcbc:	ldr	r3, [r0, #32]
   2bcc0:	push	{r4, r5, r6, lr}
   2bcc4:	ldrh	r2, [r3, #14]
   2bcc8:	cmp	r2, #6
   2bccc:	beq	2bce4 <flatcc_builder_end_string@@Base+0x28>
   2bcd0:	ldr	r3, [pc, #84]	; 2bd2c <flatcc_builder_end_string@@Base+0x70>
   2bcd4:	movw	r2, #1732	; 0x6c4
   2bcd8:	ldr	r1, [pc, #80]	; 2bd30 <flatcc_builder_end_string@@Base+0x74>
   2bcdc:	ldr	r0, [pc, #80]	; 2bd34 <flatcc_builder_end_string@@Base+0x78>
   2bce0:	bl	14070 <__assert_fail@plt>
   2bce4:	ldr	r2, [r3, #20]
   2bce8:	mov	r4, r0
   2bcec:	ldr	r1, [r0, #20]
   2bcf0:	cmp	r2, r1
   2bcf4:	beq	2bd0c <flatcc_builder_end_string@@Base+0x50>
   2bcf8:	ldr	r3, [pc, #44]	; 2bd2c <flatcc_builder_end_string@@Base+0x70>
   2bcfc:	movw	r2, #1733	; 0x6c5
   2bd00:	ldr	r1, [pc, #40]	; 2bd30 <flatcc_builder_end_string@@Base+0x74>
   2bd04:	ldr	r0, [pc, #44]	; 2bd38 <flatcc_builder_end_string@@Base+0x7c>
   2bd08:	b	2bce0 <flatcc_builder_end_string@@Base+0x24>
   2bd0c:	ldr	r1, [r0, #16]
   2bd10:	bl	2bbc4 <flatcc_builder_create_string@@Base>
   2bd14:	subs	r5, r0, #0
   2bd18:	beq	2bd24 <flatcc_builder_end_string@@Base+0x68>
   2bd1c:	mov	r0, r4
   2bd20:	bl	29770 <__flatcc_fb_coerce_scalar_type@@Base+0x540>
   2bd24:	mov	r0, r5
   2bd28:	pop	{r4, r5, r6, pc}
   2bd2c:	andeq	r9, r4, r6, lsr r2
   2bd30:	andeq	r9, r4, r2, lsr #6
   2bd34:	andeq	r9, r4, r8, ror #9
   2bd38:	andeq	r9, r4, r1, lsr r6

0002bd3c <flatcc_builder_string_edit@@Base>:
   2bd3c:	ldr	r0, [r0, #16]
   2bd40:	bx	lr

0002bd44 <flatcc_builder_string_len@@Base>:
   2bd44:	ldr	r3, [r0, #32]
   2bd48:	ldr	r0, [r3, #20]
   2bd4c:	bx	lr

0002bd50 <flatcc_builder_table_add@@Base>:
   2bd50:	push	{r4, r5, r6, r7, r8, lr}
   2bd54:	mov	r4, r0
   2bd58:	ldr	r0, [r0, #32]
   2bd5c:	ldrh	r0, [r0, #14]
   2bd60:	cmp	r0, #3
   2bd64:	beq	2bd7c <flatcc_builder_table_add@@Base+0x2c>
   2bd68:	ldr	r3, [pc, #240]	; 2be60 <flatcc_builder_table_add@@Base+0x110>
   2bd6c:	movw	r2, #1773	; 0x6ed
   2bd70:	ldr	r1, [pc, #236]	; 2be64 <flatcc_builder_table_add@@Base+0x114>
   2bd74:	ldr	r0, [pc, #236]	; 2be68 <flatcc_builder_table_add@@Base+0x118>
   2bd78:	bl	14070 <__assert_fail@plt>
   2bd7c:	movw	r0, #32764	; 0x7ffc
   2bd80:	cmp	r1, r0
   2bd84:	bls	2bd9c <flatcc_builder_table_add@@Base+0x4c>
   2bd88:	ldr	r3, [pc, #208]	; 2be60 <flatcc_builder_table_add@@Base+0x110>
   2bd8c:	movw	r2, #1774	; 0x6ee
   2bd90:	ldr	r1, [pc, #204]	; 2be64 <flatcc_builder_table_add@@Base+0x114>
   2bd94:	ldr	r0, [pc, #208]	; 2be6c <flatcc_builder_table_add@@Base+0x11c>
   2bd98:	b	2bd78 <flatcc_builder_table_add@@Base+0x28>
   2bd9c:	ldrh	r0, [r4, #130]	; 0x82
   2bda0:	lsl	r7, r1, #1
   2bda4:	cmp	r0, r3
   2bda8:	ldr	r0, [r4, #4]
   2bdac:	strhcc	r3, [r4, #130]	; 0x82
   2bdb0:	ldrh	r5, [r0, r7]
   2bdb4:	cmp	r5, #0
   2bdb8:	beq	2bdd0 <flatcc_builder_table_add@@Base+0x80>
   2bdbc:	ldr	r3, [pc, #156]	; 2be60 <flatcc_builder_table_add@@Base+0x110>
   2bdc0:	movw	r2, #1784	; 0x6f8
   2bdc4:	ldr	r1, [pc, #152]	; 2be64 <flatcc_builder_table_add@@Base+0x114>
   2bdc8:	ldr	r0, [pc, #160]	; 2be70 <flatcc_builder_table_add@@Base+0x120>
   2bdcc:	b	2bd78 <flatcc_builder_table_add@@Base+0x28>
   2bdd0:	ldr	ip, [r4, #12]
   2bdd4:	sub	r0, r3, #1
   2bdd8:	rsb	r3, r3, #0
   2bddc:	uxth	r8, r1
   2bde0:	ldr	lr, [pc, #140]	; 2be74 <flatcc_builder_table_add@@Base+0x124>
   2bde4:	ldr	r6, [r4, #20]
   2bde8:	eor	ip, ip, r1
   2bdec:	mul	ip, lr, ip
   2bdf0:	add	r0, r0, r6
   2bdf4:	and	r6, r0, r3
   2bdf8:	ldr	r3, [r4, #24]
   2bdfc:	eor	ip, ip, r2
   2be00:	add	r1, r2, r6
   2be04:	mul	ip, lr, ip
   2be08:	cmp	r1, r3
   2be0c:	str	ip, [r4, #12]
   2be10:	str	r1, [r4, #20]
   2be14:	bcs	2be40 <flatcc_builder_table_add@@Base+0xf0>
   2be18:	ldr	r3, [r4, #4]
   2be1c:	add	r2, r6, #4
   2be20:	ldr	r0, [r4, #16]
   2be24:	strh	r2, [r3, r7]
   2be28:	ldrh	r3, [r4, #8]
   2be2c:	add	r0, r0, r6
   2be30:	cmp	r3, r8
   2be34:	addls	r1, r8, #1
   2be38:	strhls	r1, [r4, #8]
   2be3c:	pop	{r4, r5, r6, r7, r8, pc}
   2be40:	movw	r2, #65532	; 0xfffc
   2be44:	add	r1, r1, #1
   2be48:	mov	r0, r4
   2be4c:	bl	296d8 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   2be50:	cmp	r0, #0
   2be54:	beq	2be18 <flatcc_builder_table_add@@Base+0xc8>
   2be58:	mov	r0, r5
   2be5c:	pop	{r4, r5, r6, r7, r8, pc}
   2be60:	andeq	r9, r4, r0, asr r2
   2be64:	andeq	r9, r4, r2, lsr #6
   2be68:	andeq	r9, r4, r1, asr #11
   2be6c:	andeq	r9, r4, r5, asr r6
   2be70:	andeq	r8, r3, pc, ror #2
   2be74:			; <UNDEFINED> instruction: 0x9e3779b1

0002be78 <flatcc_builder_table_edit@@Base>:
   2be78:	ldr	r3, [r0, #32]
   2be7c:	ldrh	r3, [r3, #14]
   2be80:	cmp	r3, #3
   2be84:	beq	2bea0 <flatcc_builder_table_edit@@Base+0x28>
   2be88:	push	{r4, lr}
   2be8c:	movw	r2, #1794	; 0x702
   2be90:	ldr	r3, [pc, #28]	; 2beb4 <flatcc_builder_table_edit@@Base+0x3c>
   2be94:	ldr	r1, [pc, #28]	; 2beb8 <flatcc_builder_table_edit@@Base+0x40>
   2be98:	ldr	r0, [pc, #28]	; 2bebc <flatcc_builder_table_edit@@Base+0x44>
   2be9c:	bl	14070 <__assert_fail@plt>
   2bea0:	ldr	r3, [r0, #20]
   2bea4:	ldr	r0, [r0, #16]
   2bea8:	sub	r3, r3, r1
   2beac:	add	r0, r0, r3
   2beb0:	bx	lr
   2beb4:	andeq	r9, r4, r9, ror #4
   2beb8:	andeq	r9, r4, r2, lsr #6
   2bebc:	andeq	r9, r4, r1, asr #11

0002bec0 <flatcc_builder_table_add_copy@@Base>:
   2bec0:	push	{r4, r5, r6, lr}
   2bec4:	mov	r4, r3
   2bec8:	mov	r6, r2
   2becc:	mov	r2, r4
   2bed0:	ldrh	r3, [sp, #16]
   2bed4:	bl	2bd50 <flatcc_builder_table_add@@Base>
   2bed8:	subs	r5, r0, #0
   2bedc:	beq	2beec <flatcc_builder_table_add_copy@@Base+0x2c>
   2bee0:	mov	r2, r4
   2bee4:	mov	r1, r6
   2bee8:	bl	13efc <memcpy@plt>
   2beec:	mov	r0, r5
   2bef0:	pop	{r4, r5, r6, pc}

0002bef4 <flatcc_builder_table_add_offset@@Base>:
   2bef4:	ldr	r3, [r0, #32]
   2bef8:	push	{r4, r5, r6, r7, r8, lr}
   2befc:	ldrh	r3, [r3, #14]
   2bf00:	cmp	r3, #3
   2bf04:	beq	2bf1c <flatcc_builder_table_add_offset@@Base+0x28>
   2bf08:	ldr	r3, [pc, #236]	; 2bffc <flatcc_builder_table_add_offset@@Base+0x108>
   2bf0c:	movw	r2, #1811	; 0x713
   2bf10:	ldr	r1, [pc, #232]	; 2c000 <flatcc_builder_table_add_offset@@Base+0x10c>
   2bf14:	ldr	r0, [pc, #232]	; 2c004 <flatcc_builder_table_add_offset@@Base+0x110>
   2bf18:	bl	14070 <__assert_fail@plt>
   2bf1c:	movw	r3, #32764	; 0x7ffc
   2bf20:	cmp	r1, r3
   2bf24:	bls	2bf3c <flatcc_builder_table_add_offset@@Base+0x48>
   2bf28:	ldr	r3, [pc, #204]	; 2bffc <flatcc_builder_table_add_offset@@Base+0x108>
   2bf2c:	movw	r2, #1812	; 0x714
   2bf30:	ldr	r1, [pc, #200]	; 2c000 <flatcc_builder_table_add_offset@@Base+0x10c>
   2bf34:	ldr	r0, [pc, #204]	; 2c008 <flatcc_builder_table_add_offset@@Base+0x114>
   2bf38:	b	2bf18 <flatcc_builder_table_add_offset@@Base+0x24>
   2bf3c:	ldr	r3, [r0, #4]
   2bf40:	lsl	r7, r1, #1
   2bf44:	mov	r4, r0
   2bf48:	ldrh	r6, [r3, r7]
   2bf4c:	cmp	r6, #0
   2bf50:	beq	2bf68 <flatcc_builder_table_add_offset@@Base+0x74>
   2bf54:	ldr	r3, [pc, #160]	; 2bffc <flatcc_builder_table_add_offset@@Base+0x108>
   2bf58:	movw	r2, #1819	; 0x71b
   2bf5c:	ldr	r1, [pc, #156]	; 2c000 <flatcc_builder_table_add_offset@@Base+0x10c>
   2bf60:	ldr	r0, [pc, #164]	; 2c00c <flatcc_builder_table_add_offset@@Base+0x118>
   2bf64:	b	2bf18 <flatcc_builder_table_add_offset@@Base+0x24>
   2bf68:	ldr	r3, [r0, #12]
   2bf6c:	uxth	r5, r1
   2bf70:	ldr	r2, [pc, #152]	; 2c010 <flatcc_builder_table_add_offset@@Base+0x11c>
   2bf74:	ldr	r8, [r0, #20]
   2bf78:	eor	r3, r3, r1
   2bf7c:	mul	r3, r2, r3
   2bf80:	add	r8, r8, #3
   2bf84:	eor	r3, r3, #4
   2bf88:	bic	r8, r8, #3
   2bf8c:	add	r1, r8, #4
   2bf90:	mul	r3, r2, r3
   2bf94:	str	r3, [r0, #12]
   2bf98:	ldr	r3, [r0, #24]
   2bf9c:	str	r1, [r0, #20]
   2bfa0:	cmp	r1, r3
   2bfa4:	bhi	2bfe4 <flatcc_builder_table_add_offset@@Base+0xf0>
   2bfa8:	ldr	r3, [r4, #4]
   2bfac:	uxth	r2, r8
   2bfb0:	add	r1, r2, #4
   2bfb4:	ldr	r0, [r4, #16]
   2bfb8:	strh	r1, [r3, r7]
   2bfbc:	ldrh	r3, [r4, #8]
   2bfc0:	add	r0, r0, r8
   2bfc4:	cmp	r3, r5
   2bfc8:	ldr	r3, [r4]
   2bfcc:	addls	r1, r5, #1
   2bfd0:	strhls	r1, [r4, #8]
   2bfd4:	add	r1, r3, #2
   2bfd8:	str	r1, [r4]
   2bfdc:	strh	r2, [r3]
   2bfe0:	pop	{r4, r5, r6, r7, r8, pc}
   2bfe4:	movw	r2, #65532	; 0xfffc
   2bfe8:	bl	296d8 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   2bfec:	cmp	r0, #0
   2bff0:	beq	2bfa8 <flatcc_builder_table_add_offset@@Base+0xb4>
   2bff4:	mov	r0, r6
   2bff8:	pop	{r4, r5, r6, r7, r8, pc}
   2bffc:	andeq	r9, r4, r3, lsl #5
   2c000:	andeq	r9, r4, r2, lsr #6
   2c004:	andeq	r9, r4, r1, asr #11
   2c008:	andeq	r9, r4, r5, asr r6
   2c00c:	andeq	r8, r3, pc, ror #2
   2c010:			; <UNDEFINED> instruction: 0x9e3779b1

0002c014 <flatcc_builder_table_add_union@@Base>:
   2c014:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2c018:	add	ip, sp, #8
   2c01c:	stmdb	ip, {r2, r3}
   2c020:	ldr	r3, [r0, #32]
   2c024:	ldrb	r5, [sp]
   2c028:	ldr	r4, [sp, #4]
   2c02c:	ldrh	r3, [r3, #14]
   2c030:	cmp	r3, #3
   2c034:	beq	2c04c <flatcc_builder_table_add_union@@Base+0x38>
   2c038:	ldr	r3, [pc, #164]	; 2c0e4 <flatcc_builder_table_add_union@@Base+0xd0>
   2c03c:	movw	r2, #1518	; 0x5ee
   2c040:	ldr	r1, [pc, #160]	; 2c0e8 <flatcc_builder_table_add_union@@Base+0xd4>
   2c044:	ldr	r0, [pc, #160]	; 2c0ec <flatcc_builder_table_add_union@@Base+0xd8>
   2c048:	bl	14070 <__assert_fail@plt>
   2c04c:	cmp	r5, #0
   2c050:	mov	r6, r0
   2c054:	mov	r7, r1
   2c058:	bne	2c078 <flatcc_builder_table_add_union@@Base+0x64>
   2c05c:	cmp	r4, #0
   2c060:	beq	2c0a4 <flatcc_builder_table_add_union@@Base+0x90>
   2c064:	ldr	r3, [pc, #120]	; 2c0e4 <flatcc_builder_table_add_union@@Base+0xd0>
   2c068:	movw	r2, #1519	; 0x5ef
   2c06c:	ldr	r1, [pc, #116]	; 2c0e8 <flatcc_builder_table_add_union@@Base+0xd4>
   2c070:	ldr	r0, [pc, #120]	; 2c0f0 <flatcc_builder_table_add_union@@Base+0xdc>
   2c074:	b	2c048 <flatcc_builder_table_add_union@@Base+0x34>
   2c078:	cmp	r4, #0
   2c07c:	beq	2c0a4 <flatcc_builder_table_add_union@@Base+0x90>
   2c080:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   2c084:	cmp	r0, #0
   2c088:	strne	r4, [r0]
   2c08c:	bne	2c0a4 <flatcc_builder_table_add_union@@Base+0x90>
   2c090:	ldr	r3, [pc, #76]	; 2c0e4 <flatcc_builder_table_add_union@@Base+0xd0>
   2c094:	movw	r2, #1522	; 0x5f2
   2c098:	ldr	r1, [pc, #72]	; 2c0e8 <flatcc_builder_table_add_union@@Base+0xd4>
   2c09c:	ldr	r0, [pc, #80]	; 2c0f4 <flatcc_builder_table_add_union@@Base+0xe0>
   2c0a0:	b	2c048 <flatcc_builder_table_add_union@@Base+0x34>
   2c0a4:	mov	r3, #1
   2c0a8:	sub	r1, r7, #1
   2c0ac:	mov	r2, r3
   2c0b0:	mov	r0, r6
   2c0b4:	bl	2bd50 <flatcc_builder_table_add@@Base>
   2c0b8:	cmp	r0, #0
   2c0bc:	bne	2c0d4 <flatcc_builder_table_add_union@@Base+0xc0>
   2c0c0:	ldr	r3, [pc, #28]	; 2c0e4 <flatcc_builder_table_add_union@@Base+0xd0>
   2c0c4:	movw	r2, #1526	; 0x5f6
   2c0c8:	ldr	r1, [pc, #24]	; 2c0e8 <flatcc_builder_table_add_union@@Base+0xd4>
   2c0cc:	ldr	r0, [pc, #36]	; 2c0f8 <flatcc_builder_table_add_union@@Base+0xe4>
   2c0d0:	b	2c048 <flatcc_builder_table_add_union@@Base+0x34>
   2c0d4:	strb	r5, [r0]
   2c0d8:	mov	r0, #0
   2c0dc:	add	sp, sp, #12
   2c0e0:	pop	{r4, r5, r6, r7, pc}
   2c0e4:	andeq	r9, r4, r3, lsr #5
   2c0e8:	andeq	r9, r4, r2, lsr #6
   2c0ec:	andeq	r9, r4, r1, asr #11
   2c0f0:	muleq	r4, r9, r6
   2c0f4:			; <UNDEFINED> instruction: 0x000496bb
   2c0f8:	andeq	r9, r4, r5, asr #13

0002c0fc <flatcc_builder_table_add_union_vector@@Base>:
   2c0fc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2c100:	mov	r7, r1
   2c104:	add	r1, sp, #8
   2c108:	stmdb	r1, {r2, r3}
   2c10c:	ldr	r3, [r0, #32]
   2c110:	ldrd	r4, [sp]
   2c114:	ldrh	r3, [r3, #14]
   2c118:	cmp	r3, #3
   2c11c:	beq	2c134 <flatcc_builder_table_add_union_vector@@Base+0x38>
   2c120:	ldr	r3, [pc, #176]	; 2c1d8 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2c124:	mov	r2, #1536	; 0x600
   2c128:	ldr	r1, [pc, #172]	; 2c1dc <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2c12c:	ldr	r0, [pc, #172]	; 2c1e0 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2c130:	bl	14070 <__assert_fail@plt>
   2c134:	clz	r3, r5
   2c138:	clz	r2, r4
   2c13c:	lsr	r3, r3, #5
   2c140:	lsr	r2, r2, #5
   2c144:	cmp	r2, r3
   2c148:	beq	2c174 <flatcc_builder_table_add_union_vector@@Base+0x78>
   2c14c:	adds	r4, r4, #0
   2c150:	movne	r4, #1
   2c154:	cmp	r4, r3
   2c158:	mvnne	r4, #0
   2c15c:	bne	2c1cc <flatcc_builder_table_add_union_vector@@Base+0xd0>
   2c160:	ldr	r3, [pc, #112]	; 2c1d8 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2c164:	movw	r2, #1537	; 0x601
   2c168:	ldr	r1, [pc, #108]	; 2c1dc <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2c16c:	ldr	r0, [pc, #112]	; 2c1e4 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   2c170:	b	2c130 <flatcc_builder_table_add_union_vector@@Base+0x34>
   2c174:	cmp	r4, #0
   2c178:	beq	2c1cc <flatcc_builder_table_add_union_vector@@Base+0xd0>
   2c17c:	sub	r1, r7, #1
   2c180:	mov	r6, r0
   2c184:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   2c188:	cmp	r0, #0
   2c18c:	ldreq	r3, [pc, #68]	; 2c1d8 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2c190:	movweq	r2, #1540	; 0x604
   2c194:	beq	2c1c0 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   2c198:	mov	r1, r7
   2c19c:	str	r4, [r0]
   2c1a0:	mov	r0, r6
   2c1a4:	bl	2bef4 <flatcc_builder_table_add_offset@@Base>
   2c1a8:	cmp	r0, #0
   2c1ac:	movne	r4, #0
   2c1b0:	strne	r5, [r0]
   2c1b4:	bne	2c1cc <flatcc_builder_table_add_union_vector@@Base+0xd0>
   2c1b8:	ldr	r3, [pc, #24]	; 2c1d8 <flatcc_builder_table_add_union_vector@@Base+0xdc>
   2c1bc:	movw	r2, #1544	; 0x608
   2c1c0:	ldr	r1, [pc, #20]	; 2c1dc <flatcc_builder_table_add_union_vector@@Base+0xe0>
   2c1c4:	ldr	r0, [pc, #28]	; 2c1e8 <flatcc_builder_table_add_union_vector@@Base+0xec>
   2c1c8:	b	2c130 <flatcc_builder_table_add_union_vector@@Base+0x34>
   2c1cc:	mov	r0, r4
   2c1d0:	add	sp, sp, #12
   2c1d4:	pop	{r4, r5, r6, r7, pc}
   2c1d8:	andeq	r9, r4, r2, asr #5
   2c1dc:	andeq	r9, r4, r2, lsr #6
   2c1e0:	andeq	r9, r4, r1, asr #11
   2c1e4:	ldrdeq	r9, [r4], -r1
   2c1e8:			; <UNDEFINED> instruction: 0x000496bb

0002c1ec <flatcc_builder_push_buffer_alignment@@Base>:
   2c1ec:	mov	r3, r0
   2c1f0:	mov	r2, #4
   2c1f4:	ldrh	r0, [r0, #128]	; 0x80
   2c1f8:	strh	r2, [r3, #128]	; 0x80
   2c1fc:	bx	lr

0002c200 <flatcc_builder_pop_buffer_alignment@@Base>:
   2c200:	ldrh	r3, [r0, #128]	; 0x80
   2c204:	cmp	r3, r1
   2c208:	strhcc	r1, [r0, #128]	; 0x80
   2c20c:	bx	lr

0002c210 <flatcc_builder_get_buffer_alignment@@Base>:
   2c210:	ldrh	r0, [r0, #128]	; 0x80
   2c214:	bx	lr

0002c218 <flatcc_builder_set_vtable_clustering@@Base>:
   2c218:	clz	r1, r1
   2c21c:	lsr	r1, r1, #5
   2c220:	str	r1, [r0, #180]	; 0xb4
   2c224:	bx	lr

0002c228 <flatcc_builder_set_block_align@@Base>:
   2c228:	strh	r1, [r0, #132]	; 0x84
   2c22c:	bx	lr

0002c230 <flatcc_builder_get_level@@Base>:
   2c230:	ldr	r0, [r0, #156]	; 0x9c
   2c234:	bx	lr

0002c238 <flatcc_builder_set_max_level@@Base>:
   2c238:	ldr	r3, [r0, #160]	; 0xa0
   2c23c:	str	r1, [r0, #176]	; 0xb0
   2c240:	cmp	r3, r1
   2c244:	strlt	r1, [r0, #160]	; 0xa0
   2c248:	bx	lr

0002c24c <flatcc_builder_get_buffer_size@@Base>:
   2c24c:	ldr	r2, [r0, #140]	; 0x8c
   2c250:	ldr	r0, [r0, #136]	; 0x88
   2c254:	sub	r0, r2, r0
   2c258:	bx	lr

0002c25c <flatcc_builder_get_buffer_start@@Base>:
   2c25c:	ldr	r0, [r0, #136]	; 0x88
   2c260:	bx	lr

0002c264 <flatcc_builder_get_buffer_end@@Base>:
   2c264:	ldr	r0, [r0, #140]	; 0x8c
   2c268:	bx	lr

0002c26c <flatcc_builder_set_vtable_cache_limit@@Base>:
   2c26c:	str	r1, [r0, #172]	; 0xac
   2c270:	bx	lr

0002c274 <flatcc_builder_set_identifier@@Base>:
   2c274:	ldr	r3, [pc, #16]	; 2c28c <flatcc_builder_set_identifier@@Base+0x18>
   2c278:	cmp	r1, #0
   2c27c:	moveq	r1, r3
   2c280:	ldr	r3, [r1]
   2c284:	str	r3, [r0, #168]	; 0xa8
   2c288:	bx	lr
   2c28c:	andeq	r8, r4, ip, lsr ip

0002c290 <flatcc_builder_get_type@@Base>:
   2c290:	ldr	r0, [r0, #32]
   2c294:	cmp	r0, #0
   2c298:	ldrhne	r0, [r0, #14]
   2c29c:	bx	lr

0002c2a0 <flatcc_builder_get_type_at@@Base>:
   2c2a0:	cmp	r1, #0
   2c2a4:	ble	2c2cc <flatcc_builder_get_type_at@@Base+0x2c>
   2c2a8:	ldr	r3, [r0, #156]	; 0x9c
   2c2ac:	cmp	r3, r1
   2c2b0:	blt	2c2cc <flatcc_builder_get_type_at@@Base+0x2c>
   2c2b4:	sub	r1, r1, r3
   2c2b8:	ldr	r3, [r0, #32]
   2c2bc:	mov	r2, #36	; 0x24
   2c2c0:	mla	r1, r2, r1, r3
   2c2c4:	ldrh	r0, [r1, #14]
   2c2c8:	bx	lr
   2c2cc:	mov	r0, #0
   2c2d0:	bx	lr

0002c2d4 <flatcc_builder_get_direct_buffer@@Base>:
   2c2d4:	ldr	r3, [r0, #184]	; 0xb8
   2c2d8:	cmp	r3, #0
   2c2dc:	beq	2c304 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2c2e0:	ldrd	r2, [r0, #188]	; 0xbc
   2c2e4:	cmp	r2, r3
   2c2e8:	bne	2c304 <flatcc_builder_get_direct_buffer@@Base+0x30>
   2c2ec:	cmp	r1, #0
   2c2f0:	ldrne	r3, [r0, #212]	; 0xd4
   2c2f4:	strne	r3, [r1]
   2c2f8:	ldr	r1, [r0, #196]	; 0xc4
   2c2fc:	mov	r0, r1
   2c300:	bx	lr
   2c304:	cmp	r1, #0
   2c308:	movne	r3, #0
   2c30c:	strne	r3, [r1]
   2c310:	movne	r1, r3
   2c314:	b	2c2fc <flatcc_builder_get_direct_buffer@@Base+0x28>

0002c318 <flatcc_builder_copy_buffer@@Base>:
   2c318:	ldr	r3, [r0, #184]	; 0xb8
   2c31c:	cmp	r3, #0
   2c320:	beq	2c34c <flatcc_builder_copy_buffer@@Base+0x34>
   2c324:	push	{r4, lr}
   2c328:	add	r0, r0, #188	; 0xbc
   2c32c:	bl	2c8c0 <flatcc_emitter_copy_buffer@@Base>
   2c330:	cmp	r0, #0
   2c334:	popne	{r4, pc}
   2c338:	ldr	r3, [pc, #20]	; 2c354 <flatcc_builder_copy_buffer@@Base+0x3c>
   2c33c:	movw	r2, #1926	; 0x786
   2c340:	ldr	r1, [pc, #16]	; 2c358 <flatcc_builder_copy_buffer@@Base+0x40>
   2c344:	ldr	r0, [pc, #16]	; 2c35c <flatcc_builder_copy_buffer@@Base+0x44>
   2c348:	bl	14070 <__assert_fail@plt>
   2c34c:	mov	r0, r3
   2c350:	bx	lr
   2c354:	andeq	r9, r4, r8, ror #5
   2c358:	andeq	r9, r4, r2, lsr #6
   2c35c:	andeq	r9, r4, r9, lsl r4

0002c360 <flatcc_builder_finalize_buffer@@Base>:
   2c360:	push	{r4, r5, r6, lr}
   2c364:	cmp	r1, #0
   2c368:	mov	r5, r0
   2c36c:	ldr	r2, [r0, #136]	; 0x88
   2c370:	ldr	r4, [r0, #140]	; 0x8c
   2c374:	sub	r4, r4, r2
   2c378:	mov	r0, r4
   2c37c:	strne	r4, [r1]
   2c380:	bl	13f68 <malloc@plt>
   2c384:	subs	r6, r0, #0
   2c388:	ldreq	r3, [pc, #56]	; 2c3c8 <flatcc_builder_finalize_buffer@@Base+0x68>
   2c38c:	movweq	r2, #1944	; 0x798
   2c390:	beq	2c3b4 <flatcc_builder_finalize_buffer@@Base+0x54>
   2c394:	mov	r2, r4
   2c398:	mov	r1, r6
   2c39c:	mov	r0, r5
   2c3a0:	bl	2c318 <flatcc_builder_copy_buffer@@Base>
   2c3a4:	cmp	r0, #0
   2c3a8:	bne	2c3c0 <flatcc_builder_finalize_buffer@@Base+0x60>
   2c3ac:	ldr	r3, [pc, #20]	; 2c3c8 <flatcc_builder_finalize_buffer@@Base+0x68>
   2c3b0:	movw	r2, #1948	; 0x79c
   2c3b4:	ldr	r1, [pc, #16]	; 2c3cc <flatcc_builder_finalize_buffer@@Base+0x6c>
   2c3b8:	ldr	r0, [pc, #16]	; 2c3d0 <flatcc_builder_finalize_buffer@@Base+0x70>
   2c3bc:	bl	14070 <__assert_fail@plt>
   2c3c0:	mov	r0, r6
   2c3c4:	pop	{r4, r5, r6, pc}
   2c3c8:	andeq	r9, r4, r3, lsl #6
   2c3cc:	andeq	r9, r4, r2, lsr #6
   2c3d0:	andeq	r8, r3, pc, ror #2

0002c3d4 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2c3d4:	push	{r4, r5, r6, r7, r8, lr}
   2c3d8:	mov	r6, r0
   2c3dc:	subs	r7, r1, #0
   2c3e0:	ldr	r2, [r0, #136]	; 0x88
   2c3e4:	ldr	r4, [r0, #140]	; 0x8c
   2c3e8:	ldrh	r0, [r0, #128]	; 0x80
   2c3ec:	sub	r2, r4, r2
   2c3f0:	sub	r4, r0, #1
   2c3f4:	strne	r2, [r7]
   2c3f8:	add	r4, r4, r2
   2c3fc:	rsb	r2, r0, #0
   2c400:	and	r4, r4, r2
   2c404:	mov	r1, r4
   2c408:	bl	29828 <__flatcc_fb_coerce_scalar_type@@Base+0x5f8>
   2c40c:	subs	r5, r0, #0
   2c410:	beq	2c438 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2c414:	mov	r2, r4
   2c418:	mov	r1, r5
   2c41c:	mov	r0, r6
   2c420:	bl	2c318 <flatcc_builder_copy_buffer@@Base>
   2c424:	subs	r4, r0, #0
   2c428:	bne	2c438 <flatcc_builder_finalize_aligned_buffer@@Base+0x64>
   2c42c:	mov	r0, r5
   2c430:	mov	r5, r4
   2c434:	bl	13ef0 <free@plt>
   2c438:	adds	r3, r7, #0
   2c43c:	mov	r0, r5
   2c440:	movne	r3, #1
   2c444:	cmp	r5, #0
   2c448:	movne	r3, #0
   2c44c:	cmp	r3, #0
   2c450:	movne	r3, #0
   2c454:	strne	r3, [r7]
   2c458:	pop	{r4, r5, r6, r7, r8, pc}

0002c45c <flatcc_builder_aligned_alloc@@Base>:
   2c45c:	b	29828 <__flatcc_fb_coerce_scalar_type@@Base+0x5f8>

0002c460 <flatcc_builder_aligned_free@@Base>:
   2c460:	b	13ef0 <free@plt>

0002c464 <flatcc_builder_get_emit_context@@Base>:
   2c464:	ldr	r0, [r0, #36]	; 0x24
   2c468:	bx	lr

0002c46c <flatcc_emitter_recycle_page@@Base>:
   2c46c:	ldr	r3, [r0]
   2c470:	cmp	r3, r1
   2c474:	beq	2c4b4 <flatcc_emitter_recycle_page@@Base+0x48>
   2c478:	ldr	r2, [r0, #4]
   2c47c:	cmp	r2, r1
   2c480:	beq	2c4b4 <flatcc_emitter_recycle_page@@Base+0x48>
   2c484:	ldr	r0, [r1, #2944]	; 0xb80
   2c488:	ldr	r2, [r1, #2948]	; 0xb84
   2c48c:	str	r2, [r0, #2948]	; 0xb84
   2c490:	str	r0, [r2, #2944]	; 0xb80
   2c494:	mov	r0, #0
   2c498:	ldr	r2, [r3, #2948]	; 0xb84
   2c49c:	str	r3, [r1, #2944]	; 0xb80
   2c4a0:	str	r2, [r1, #2948]	; 0xb84
   2c4a4:	str	r1, [r2, #2944]	; 0xb80
   2c4a8:	ldr	r3, [r1, #2944]	; 0xb80
   2c4ac:	str	r1, [r3, #2948]	; 0xb84
   2c4b0:	bx	lr
   2c4b4:	mvn	r0, #0
   2c4b8:	bx	lr

0002c4bc <flatcc_emitter_reset@@Base>:
   2c4bc:	ldr	r3, [r0]
   2c4c0:	cmp	r3, #0
   2c4c4:	bxeq	lr
   2c4c8:	add	r2, r3, #1472	; 0x5c0
   2c4cc:	push	{r4, lr}
   2c4d0:	mov	r4, r0
   2c4d4:	str	r3, [r0, #4]
   2c4d8:	str	r2, [r0, #8]
   2c4dc:	str	r2, [r0, #16]
   2c4e0:	mov	r2, #1472	; 0x5c0
   2c4e4:	str	r2, [r0, #12]
   2c4e8:	str	r2, [r0, #20]
   2c4ec:	sub	r2, r2, #2944	; 0xb80
   2c4f0:	str	r2, [r3, #2952]	; 0xb88
   2c4f4:	ldr	r3, [r0, #24]
   2c4f8:	ldr	r2, [r0, #32]
   2c4fc:	cmp	r2, #0
   2c500:	streq	r3, [r0, #32]
   2c504:	lsr	r3, r3, #2
   2c508:	ldr	r2, [r0, #32]
   2c50c:	add	r2, r2, r2, lsl #1
   2c510:	add	r3, r3, r2, lsr #2
   2c514:	str	r3, [r0, #32]
   2c518:	mov	r3, #0
   2c51c:	str	r3, [r0, #24]
   2c520:	ldr	r3, [r4, #28]
   2c524:	ldr	r2, [r4, #32]
   2c528:	cmp	r3, r2, lsl #1
   2c52c:	popls	{r4, pc}
   2c530:	ldrd	r2, [r4]
   2c534:	ldr	r0, [r3, #2944]	; 0xb80
   2c538:	cmp	r0, r2
   2c53c:	popeq	{r4, pc}
   2c540:	ldr	r2, [r0, #2944]	; 0xb80
   2c544:	str	r2, [r3, #2944]	; 0xb80
   2c548:	ldr	r2, [r0, #2944]	; 0xb80
   2c54c:	str	r3, [r2, #2948]	; 0xb84
   2c550:	bl	13ef0 <free@plt>
   2c554:	ldr	r3, [r4, #28]
   2c558:	sub	r3, r3, #2944	; 0xb80
   2c55c:	str	r3, [r4, #28]
   2c560:	b	2c520 <flatcc_emitter_reset@@Base+0x64>

0002c564 <flatcc_emitter_clear@@Base>:
   2c564:	ldr	r3, [r0]
   2c568:	cmp	r3, #0
   2c56c:	bxeq	lr
   2c570:	push	{r4, r5, r6, lr}
   2c574:	mov	r1, #0
   2c578:	mov	r4, r0
   2c57c:	ldr	r2, [r3, #2948]	; 0xb84
   2c580:	str	r1, [r2, #2944]	; 0xb80
   2c584:	ldr	r5, [r3, #2944]	; 0xb80
   2c588:	cmp	r5, #0
   2c58c:	bne	2c5ac <flatcc_emitter_clear@@Base+0x48>
   2c590:	mov	r0, r3
   2c594:	bl	13ef0 <free@plt>
   2c598:	mov	r1, r5
   2c59c:	mov	r0, r4
   2c5a0:	pop	{r4, r5, r6, lr}
   2c5a4:	mov	r2, #36	; 0x24
   2c5a8:	b	13fc8 <memset@plt>
   2c5ac:	ldr	r0, [r5, #2948]	; 0xb84
   2c5b0:	bl	13ef0 <free@plt>
   2c5b4:	mov	r3, r5
   2c5b8:	b	2c584 <flatcc_emitter_clear@@Base+0x20>

0002c5bc <flatcc_emitter@@Base>:
   2c5bc:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c5c0:	mov	r4, r0
   2c5c4:	mov	r6, r2
   2c5c8:	cmp	r3, #0
   2c5cc:	ldr	r0, [r0, #24]
   2c5d0:	ldr	r2, [sp, #40]	; 0x28
   2c5d4:	add	r0, r0, r2
   2c5d8:	str	r0, [r4, #24]
   2c5dc:	bge	2c774 <flatcc_emitter@@Base+0x1b8>
   2c5e0:	ldr	r0, [r4, #12]
   2c5e4:	cmp	r0, r2
   2c5e8:	bcc	2c62c <flatcc_emitter@@Base+0x70>
   2c5ec:	ldr	r3, [r4, #8]
   2c5f0:	sub	r3, r3, r2
   2c5f4:	sub	r2, r0, r2
   2c5f8:	str	r3, [r4, #8]
   2c5fc:	str	r2, [r4, #12]
   2c600:	mov	r4, r1
   2c604:	sub	r6, r6, #1
   2c608:	add	r4, r4, #8
   2c60c:	cmn	r6, #1
   2c610:	beq	2c640 <flatcc_emitter@@Base+0x84>
   2c614:	mov	r0, r3
   2c618:	ldmdb	r4, {r1, r2}
   2c61c:	bl	13efc <memcpy@plt>
   2c620:	ldr	r2, [r4, #-4]
   2c624:	add	r3, r0, r2
   2c628:	b	2c604 <flatcc_emitter@@Base+0x48>
   2c62c:	ldr	r9, [pc, #648]	; 2c8bc <flatcc_emitter@@Base+0x300>
   2c630:	add	r5, r1, r6, lsl #3
   2c634:	mov	r8, #2944	; 0xb80
   2c638:	cmp	r6, #0
   2c63c:	bne	2c648 <flatcc_emitter@@Base+0x8c>
   2c640:	mov	r0, #0
   2c644:	b	2c6e0 <flatcc_emitter@@Base+0x124>
   2c648:	ldr	sl, [r5, #-8]
   2c64c:	ldr	r7, [r5, #-4]
   2c650:	add	sl, sl, r7
   2c654:	cmp	r7, #0
   2c658:	subeq	r5, r5, #8
   2c65c:	subeq	r6, r6, #1
   2c660:	beq	2c638 <flatcc_emitter@@Base+0x7c>
   2c664:	ldr	r3, [r4, #12]
   2c668:	cmp	r3, r7
   2c66c:	bcs	2c744 <flatcc_emitter@@Base+0x188>
   2c670:	cmp	r3, #0
   2c674:	movne	r2, r3
   2c678:	bne	2c748 <flatcc_emitter@@Base+0x18c>
   2c67c:	ldr	fp, [r4]
   2c680:	cmp	fp, #0
   2c684:	beq	2c6cc <flatcc_emitter@@Base+0x110>
   2c688:	ldr	r2, [r4, #4]
   2c68c:	ldr	r3, [fp, #2948]	; 0xb84
   2c690:	cmp	r3, r2
   2c694:	beq	2c6cc <flatcc_emitter@@Base+0x110>
   2c698:	ldr	r2, [fp, #2952]	; 0xb88
   2c69c:	sub	r2, r2, #2944	; 0xb80
   2c6a0:	str	r2, [r3, #2952]	; 0xb88
   2c6a4:	str	r3, [r4]
   2c6a8:	ldr	r3, [r4]
   2c6ac:	str	r8, [r4, #12]
   2c6b0:	add	r2, r3, #2944	; 0xb80
   2c6b4:	str	r2, [r4, #8]
   2c6b8:	ldr	r2, [r3, #2944]	; 0xb80
   2c6bc:	ldr	r2, [r2, #2952]	; 0xb88
   2c6c0:	sub	r2, r2, #2944	; 0xb80
   2c6c4:	str	r2, [r3, #2952]	; 0xb88
   2c6c8:	b	2c654 <flatcc_emitter@@Base+0x98>
   2c6cc:	movw	r0, #2956	; 0xb8c
   2c6d0:	bl	13f68 <malloc@plt>
   2c6d4:	cmp	r0, #0
   2c6d8:	bne	2c6e8 <flatcc_emitter@@Base+0x12c>
   2c6dc:	mvn	r0, #0
   2c6e0:	add	sp, sp, #4
   2c6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c6e8:	ldr	r3, [r4, #28]
   2c6ec:	cmp	fp, #0
   2c6f0:	add	r3, r3, #2944	; 0xb80
   2c6f4:	str	r3, [r4, #28]
   2c6f8:	beq	2c718 <flatcc_emitter@@Base+0x15c>
   2c6fc:	ldr	r3, [r4, #4]
   2c700:	str	fp, [r0, #2944]	; 0xb80
   2c704:	str	r3, [r0, #2948]	; 0xb84
   2c708:	str	r0, [fp, #2948]	; 0xb84
   2c70c:	str	r0, [r3, #2944]	; 0xb80
   2c710:	str	r0, [r4]
   2c714:	b	2c6a8 <flatcc_emitter@@Base+0xec>
   2c718:	add	r3, r0, #1472	; 0x5c0
   2c71c:	str	r0, [r4]
   2c720:	str	r0, [r0, #2944]	; 0xb80
   2c724:	stmib	r4, {r0, r3}
   2c728:	str	r3, [r4, #16]
   2c72c:	mov	r3, #1472	; 0x5c0
   2c730:	str	r0, [r0, #2948]	; 0xb84
   2c734:	str	r3, [r4, #12]
   2c738:	str	r3, [r4, #20]
   2c73c:	str	r9, [r0, #2952]	; 0xb88
   2c740:	b	2c654 <flatcc_emitter@@Base+0x98>
   2c744:	mov	r2, r7
   2c748:	ldr	r0, [r4, #8]
   2c74c:	rsb	r1, r2, #0
   2c750:	sub	r3, r3, r2
   2c754:	add	sl, sl, r1
   2c758:	sub	r7, r7, r2
   2c75c:	str	r3, [r4, #12]
   2c760:	add	r0, r0, r1
   2c764:	mov	r1, sl
   2c768:	str	r0, [r4, #8]
   2c76c:	bl	13efc <memcpy@plt>
   2c770:	b	2c654 <flatcc_emitter@@Base+0x98>
   2c774:	ldr	r0, [r4, #20]
   2c778:	cmp	r0, r2
   2c77c:	bcs	2c7b0 <flatcc_emitter@@Base+0x1f4>
   2c780:	ldr	sl, [pc, #308]	; 2c8bc <flatcc_emitter@@Base+0x300>
   2c784:	add	r5, r1, #8
   2c788:	mov	r9, #2944	; 0xb80
   2c78c:	cmp	r6, #0
   2c790:	beq	2c640 <flatcc_emitter@@Base+0x84>
   2c794:	ldr	fp, [r5, #-8]
   2c798:	ldr	r8, [r5, #-4]
   2c79c:	cmp	r8, #0
   2c7a0:	bne	2c7c8 <flatcc_emitter@@Base+0x20c>
   2c7a4:	sub	r6, r6, #1
   2c7a8:	add	r5, r5, #8
   2c7ac:	b	2c78c <flatcc_emitter@@Base+0x1d0>
   2c7b0:	ldr	r3, [r4, #16]
   2c7b4:	add	ip, r3, r2
   2c7b8:	sub	r2, r0, r2
   2c7bc:	str	ip, [r4, #16]
   2c7c0:	str	r2, [r4, #20]
   2c7c4:	b	2c600 <flatcc_emitter@@Base+0x44>
   2c7c8:	ldr	r7, [r4, #20]
   2c7cc:	cmp	r7, r8
   2c7d0:	bcs	2c884 <flatcc_emitter@@Base+0x2c8>
   2c7d4:	cmp	r7, #0
   2c7d8:	bne	2c888 <flatcc_emitter@@Base+0x2cc>
   2c7dc:	ldr	r7, [r4, #4]
   2c7e0:	cmp	r7, #0
   2c7e4:	beq	2c7fc <flatcc_emitter@@Base+0x240>
   2c7e8:	ldr	r2, [r4]
   2c7ec:	ldr	r3, [r7, #2944]	; 0xb80
   2c7f0:	cmp	r3, r2
   2c7f4:	strne	r3, [r4, #4]
   2c7f8:	bne	2c838 <flatcc_emitter@@Base+0x27c>
   2c7fc:	movw	r0, #2956	; 0xb8c
   2c800:	bl	13f68 <malloc@plt>
   2c804:	cmp	r0, #0
   2c808:	beq	2c6dc <flatcc_emitter@@Base+0x120>
   2c80c:	ldr	r3, [r4, #28]
   2c810:	cmp	r7, #0
   2c814:	add	r3, r3, #2944	; 0xb80
   2c818:	str	r3, [r4, #28]
   2c81c:	beq	2c858 <flatcc_emitter@@Base+0x29c>
   2c820:	ldr	r3, [r4]
   2c824:	str	r3, [r0, #2944]	; 0xb80
   2c828:	str	r7, [r0, #2948]	; 0xb84
   2c82c:	str	r0, [r3, #2948]	; 0xb84
   2c830:	str	r0, [r7, #2944]	; 0xb80
   2c834:	str	r0, [r4, #4]
   2c838:	ldr	r3, [r4, #4]
   2c83c:	ldr	r2, [r3, #2948]	; 0xb84
   2c840:	ldr	r2, [r2, #2952]	; 0xb88
   2c844:	str	r3, [r4, #16]
   2c848:	str	r9, [r4, #20]
   2c84c:	add	r2, r2, #2944	; 0xb80
   2c850:	str	r2, [r3, #2952]	; 0xb88
   2c854:	b	2c79c <flatcc_emitter@@Base+0x1e0>
   2c858:	add	r3, r0, #1472	; 0x5c0
   2c85c:	str	r0, [r4]
   2c860:	str	r0, [r0, #2944]	; 0xb80
   2c864:	stmib	r4, {r0, r3}
   2c868:	str	r3, [r4, #16]
   2c86c:	mov	r3, #1472	; 0x5c0
   2c870:	str	r0, [r0, #2948]	; 0xb84
   2c874:	str	r3, [r4, #12]
   2c878:	str	r3, [r4, #20]
   2c87c:	str	sl, [r0, #2952]	; 0xb88
   2c880:	b	2c79c <flatcc_emitter@@Base+0x1e0>
   2c884:	mov	r7, r8
   2c888:	mov	r2, r7
   2c88c:	mov	r1, fp
   2c890:	ldr	r0, [r4, #16]
   2c894:	bl	13efc <memcpy@plt>
   2c898:	ldr	r3, [r4, #16]
   2c89c:	sub	r8, r8, r7
   2c8a0:	add	fp, fp, r7
   2c8a4:	add	r3, r3, r7
   2c8a8:	str	r3, [r4, #16]
   2c8ac:	ldr	r3, [r4, #20]
   2c8b0:	sub	r7, r3, r7
   2c8b4:	str	r7, [r4, #20]
   2c8b8:	b	2c79c <flatcc_emitter@@Base+0x1e0>
   2c8bc:			; <UNDEFINED> instruction: 0xfffffa40

0002c8c0 <flatcc_emitter_copy_buffer@@Base>:
   2c8c0:	ldr	ip, [r0, #24]
   2c8c4:	push	{r4, r5, r6, lr}
   2c8c8:	cmp	ip, r2
   2c8cc:	movhi	r6, #0
   2c8d0:	bhi	2c908 <flatcc_emitter_copy_buffer@@Base+0x48>
   2c8d4:	ldr	r6, [r0]
   2c8d8:	cmp	r6, #0
   2c8dc:	beq	2c908 <flatcc_emitter_copy_buffer@@Base+0x48>
   2c8e0:	ldr	r2, [r0, #4]
   2c8e4:	mov	r5, r1
   2c8e8:	mov	r4, r0
   2c8ec:	ldr	r1, [r0, #8]
   2c8f0:	cmp	r6, r2
   2c8f4:	bne	2c910 <flatcc_emitter_copy_buffer@@Base+0x50>
   2c8f8:	mov	r2, ip
   2c8fc:	mov	r0, r5
   2c900:	mov	r6, r5
   2c904:	bl	13efc <memcpy@plt>
   2c908:	mov	r0, r6
   2c90c:	pop	{r4, r5, r6, pc}
   2c910:	ldr	r3, [r4, #12]
   2c914:	mov	r0, r5
   2c918:	rsb	r6, r3, #2944	; 0xb80
   2c91c:	mov	r2, r6
   2c920:	add	r6, r5, r6
   2c924:	bl	13efc <memcpy@plt>
   2c928:	ldr	r2, [r4]
   2c92c:	ldr	r5, [r2, #2944]	; 0xb80
   2c930:	ldr	r2, [r4, #4]
   2c934:	cmp	r2, r5
   2c938:	bne	2c954 <flatcc_emitter_copy_buffer@@Base+0x94>
   2c93c:	ldr	r2, [r4, #20]
   2c940:	mov	r1, r5
   2c944:	mov	r0, r6
   2c948:	rsb	r2, r2, #2944	; 0xb80
   2c94c:	bl	13efc <memcpy@plt>
   2c950:	b	2c908 <flatcc_emitter_copy_buffer@@Base+0x48>
   2c954:	mov	r1, r5
   2c958:	mov	r0, r6
   2c95c:	mov	r2, #2944	; 0xb80
   2c960:	add	r6, r6, #2944	; 0xb80
   2c964:	bl	13efc <memcpy@plt>
   2c968:	ldr	r5, [r5, #2944]	; 0xb80
   2c96c:	b	2c930 <flatcc_emitter_copy_buffer@@Base+0x70>
   2c970:	mov	r3, r0
   2c974:	ldr	r0, [r0]
   2c978:	ldr	r1, [r3, #4]
   2c97c:	bx	lr

0002c980 <cmetrohash64_1@@Base>:
   2c980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c984:	add	r1, r0, r2
   2c988:	sub	sp, sp, #44	; 0x2c
   2c98c:	mov	r4, r0
   2c990:	str	r1, [sp, #8]
   2c994:	ldr	r1, [pc, #1404]	; 2cf18 <cmetrohash64_1@@Base+0x598>
   2c998:	ldr	r0, [sp, #80]	; 0x50
   2c99c:	adds	r6, r2, r1
   2c9a0:	add	r1, r1, #-1308622848	; 0xb2000000
   2c9a4:	sub	r1, r1, #2359296	; 0x240000
   2c9a8:	sub	r1, r1, #416	; 0x1a0
   2c9ac:	adc	r7, r3, r1
   2c9b0:	ldr	r1, [pc, #1380]	; 2cf1c <cmetrohash64_1@@Base+0x59c>
   2c9b4:	cmp	r3, #0
   2c9b8:	cmpeq	r2, #31
   2c9bc:	umlal	r6, r7, r1, r0
   2c9c0:	mov	r2, r1
   2c9c4:	strd	r6, [sp]
   2c9c8:	strd	r6, [sp, #32]
   2c9cc:	bls	2cc44 <cmetrohash64_1@@Base+0x2c4>
   2c9d0:	ldr	r3, [sp]
   2c9d4:	ldr	fp, [sp]
   2c9d8:	ldr	r1, [sp, #8]
   2c9dc:	str	r3, [sp, #12]
   2c9e0:	ldr	r3, [sp, #4]
   2c9e4:	mov	r8, fp
   2c9e8:	ldr	r5, [pc, #1328]	; 2cf20 <cmetrohash64_1@@Base+0x5a0>
   2c9ec:	sub	r1, r1, #32
   2c9f0:	str	r3, [sp, #16]
   2c9f4:	ldr	r3, [sp]
   2c9f8:	str	r3, [sp, #20]
   2c9fc:	ldr	r3, [sp, #4]
   2ca00:	str	r1, [sp, #28]
   2ca04:	mov	r9, r3
   2ca08:	mov	sl, r3
   2ca0c:	str	r3, [sp, #24]
   2ca10:	mov	r0, r4
   2ca14:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2ca18:	umull	r6, r7, r0, r2
   2ca1c:	add	r0, r4, #8
   2ca20:	mla	r3, r2, r1, r7
   2ca24:	adds	r1, r6, r8
   2ca28:	lsr	r8, r1, #29
   2ca2c:	mov	r7, r3
   2ca30:	ldr	r3, [sp, #20]
   2ca34:	adc	sl, r7, sl
   2ca38:	orr	r8, r8, sl, lsl #3
   2ca3c:	lsr	sl, sl, #29
   2ca40:	adds	r8, r8, r3
   2ca44:	ldr	r3, [sp, #24]
   2ca48:	orr	sl, sl, r1, lsl #3
   2ca4c:	adc	sl, sl, r3
   2ca50:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2ca54:	umull	r6, r7, r0, r5
   2ca58:	add	r0, r4, #16
   2ca5c:	mla	r3, r5, r1, r7
   2ca60:	adds	lr, r6, fp
   2ca64:	lsr	fp, lr, #29
   2ca68:	mov	r7, r3
   2ca6c:	ldr	r3, [sp, #12]
   2ca70:	adc	r1, r7, r9
   2ca74:	orr	fp, fp, r1, lsl #3
   2ca78:	lsr	r1, r1, #29
   2ca7c:	adds	fp, fp, r3
   2ca80:	ldr	r3, [sp, #16]
   2ca84:	orr	r1, r1, lr, lsl #3
   2ca88:	adc	r9, r1, r3
   2ca8c:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2ca90:	ldr	r3, [pc, #1164]	; 2cf24 <cmetrohash64_1@@Base+0x5a4>
   2ca94:	umull	r6, r7, r0, r3
   2ca98:	ldr	r0, [sp, #24]
   2ca9c:	mla	r3, r3, r1, r7
   2caa0:	ldr	r1, [sp, #20]
   2caa4:	mov	r7, r3
   2caa8:	adds	r1, r6, r1
   2caac:	lsr	r6, r1, #29
   2cab0:	adc	r7, r7, r0
   2cab4:	add	r0, r4, #24
   2cab8:	add	r4, r4, #32
   2cabc:	orr	r6, r6, r7, lsl #3
   2cac0:	lsr	r7, r7, #29
   2cac4:	adds	r3, r6, r8
   2cac8:	orr	r7, r7, r1, lsl #3
   2cacc:	str	r3, [sp, #20]
   2cad0:	adc	r3, r7, sl
   2cad4:	str	r3, [sp, #24]
   2cad8:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2cadc:	ldr	r3, [pc, #1092]	; 2cf28 <cmetrohash64_1@@Base+0x5a8>
   2cae0:	umull	r6, r7, r0, r3
   2cae4:	ldr	r0, [sp, #12]
   2cae8:	mla	r1, r3, r1, r7
   2caec:	adds	ip, r6, r0
   2caf0:	ldr	r0, [sp, #16]
   2caf4:	mov	r7, r1
   2caf8:	adc	r1, r7, r0
   2cafc:	lsr	r0, ip, #29
   2cb00:	orr	r0, r0, r1, lsl #3
   2cb04:	lsr	r1, r1, #29
   2cb08:	adds	r0, r0, fp
   2cb0c:	orr	r1, r1, ip, lsl #3
   2cb10:	adc	r1, r1, r9
   2cb14:	strd	r0, [sp, #12]
   2cb18:	ldr	r1, [sp, #28]
   2cb1c:	cmp	r4, r1
   2cb20:	bls	2ca10 <cmetrohash64_1@@Base+0x90>
   2cb24:	ldr	r3, [sp, #16]
   2cb28:	adds	r0, r8, r0
   2cb2c:	umull	r0, r1, r0, r2
   2cb30:	adc	r3, sl, r3
   2cb34:	mla	r1, r2, r3, r1
   2cb38:	adds	r3, r0, fp
   2cb3c:	lsl	r0, r3, #31
   2cb40:	adc	r1, r1, r9
   2cb44:	orr	r0, r0, r1, lsr #1
   2cb48:	lsl	ip, r1, #31
   2cb4c:	umull	r0, r1, r0, r5
   2cb50:	orr	ip, ip, r3, lsr #1
   2cb54:	ldr	r3, [sp, #20]
   2cb58:	mla	r1, r5, ip, r1
   2cb5c:	ldr	ip, [sp, #24]
   2cb60:	eor	r3, r3, r0
   2cb64:	adds	r6, fp, r3
   2cb68:	eor	ip, ip, r1
   2cb6c:	umull	r6, r7, r6, r5
   2cb70:	adc	r1, r9, ip
   2cb74:	mla	r7, r5, r1, r7
   2cb78:	adds	r1, r6, r8
   2cb7c:	adc	r6, r7, sl
   2cb80:	lsl	lr, r6, #31
   2cb84:	orr	lr, lr, r1, lsr #1
   2cb88:	lsl	r1, r1, #31
   2cb8c:	orr	r1, r1, r6, lsr #1
   2cb90:	ldr	r6, [sp, #16]
   2cb94:	umull	r0, r1, r1, r2
   2cb98:	mla	r1, r2, lr, r1
   2cb9c:	ldr	lr, [sp, #12]
   2cba0:	eor	r1, r1, r6
   2cba4:	adds	r6, r8, r3
   2cba8:	eor	r8, r8, fp
   2cbac:	umull	r6, r7, r6, r2
   2cbb0:	str	r1, [sp, #12]
   2cbb4:	eor	lr, r0, lr
   2cbb8:	adc	r1, sl, ip
   2cbbc:	ldr	r0, [sp, #12]
   2cbc0:	eor	sl, sl, r9
   2cbc4:	mla	r7, r2, r1, r7
   2cbc8:	adds	r1, r6, lr
   2cbcc:	adc	r7, r7, r0
   2cbd0:	adds	lr, fp, lr
   2cbd4:	lsl	r6, r7, #31
   2cbd8:	orr	r6, r6, r1, lsr #1
   2cbdc:	lsl	r1, r1, #31
   2cbe0:	orr	r1, r1, r7, lsr #1
   2cbe4:	umull	r0, r1, r1, r5
   2cbe8:	mla	r1, r5, r6, r1
   2cbec:	eor	r8, r8, r0
   2cbf0:	eor	sl, sl, r1
   2cbf4:	ldr	r1, [sp, #12]
   2cbf8:	adc	r9, r9, r1
   2cbfc:	umull	r0, r1, lr, r5
   2cc00:	mla	r1, r5, r9, r1
   2cc04:	adds	r3, r0, r3
   2cc08:	adc	r0, r1, ip
   2cc0c:	lsl	lr, r0, #31
   2cc10:	orr	lr, lr, r3, lsr #1
   2cc14:	lsl	r3, r3, #31
   2cc18:	orr	r0, r3, r0, lsr #1
   2cc1c:	umull	r0, r1, r0, r2
   2cc20:	mla	r1, r2, lr, r1
   2cc24:	eor	r3, r8, r0
   2cc28:	eor	ip, sl, r1
   2cc2c:	ldr	r1, [sp]
   2cc30:	adds	r3, r3, r1
   2cc34:	ldr	r1, [sp, #4]
   2cc38:	str	r3, [sp, #32]
   2cc3c:	adc	ip, ip, r1
   2cc40:	str	ip, [sp, #36]	; 0x24
   2cc44:	ldr	r3, [sp, #8]
   2cc48:	sub	r3, r3, r4
   2cc4c:	cmp	r3, #15
   2cc50:	ble	2cd64 <cmetrohash64_1@@Base+0x3e4>
   2cc54:	mov	r0, r4
   2cc58:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2cc5c:	umull	r6, r7, r0, r2
   2cc60:	ldr	r5, [sp, #32]
   2cc64:	ldr	r8, [sp, #36]	; 0x24
   2cc68:	mla	r7, r2, r1, r7
   2cc6c:	adds	r0, r6, r5
   2cc70:	ldr	r6, [pc, #680]	; 2cf20 <cmetrohash64_1@@Base+0x5a0>
   2cc74:	adc	r9, r7, r8
   2cc78:	lsl	sl, r9, #31
   2cc7c:	orr	r3, sl, r0, lsr #1
   2cc80:	lsl	r0, r0, #31
   2cc84:	orr	r9, r0, r9, lsr #1
   2cc88:	str	r3, [sp, #12]
   2cc8c:	umull	r0, r1, r9, r6
   2cc90:	strd	r0, [sp]
   2cc94:	add	r0, r4, #8
   2cc98:	add	r4, r4, #16
   2cc9c:	ldr	r1, [sp, #4]
   2cca0:	mla	r3, r6, r3, r1
   2cca4:	str	r3, [sp, #4]
   2cca8:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2ccac:	umull	sl, fp, r0, r6
   2ccb0:	ldr	r0, [pc, #628]	; 2cf2c <cmetrohash64_1@@Base+0x5ac>
   2ccb4:	ldr	ip, [sp, #12]
   2ccb8:	mla	fp, r6, r1, fp
   2ccbc:	adds	r3, sl, r5
   2ccc0:	adc	r1, fp, r8
   2ccc4:	lsl	lr, r1, #31
   2ccc8:	orr	lr, lr, r3, lsr #1
   2cccc:	lsl	r3, r3, #31
   2ccd0:	orr	r3, r3, r1, lsr #1
   2ccd4:	ldr	r1, [pc, #584]	; 2cf24 <cmetrohash64_1@@Base+0x5a4>
   2ccd8:	umull	r6, r7, r3, r1
   2ccdc:	mla	r7, r1, lr, r7
   2cce0:	ldr	r1, [pc, #584]	; 2cf30 <cmetrohash64_1@@Base+0x5b0>
   2cce4:	mul	r1, r1, r9
   2cce8:	mla	sl, r0, ip, r1
   2ccec:	umull	r0, r1, r9, r0
   2ccf0:	lsl	ip, r0, #29
   2ccf4:	add	r1, sl, r1
   2ccf8:	lsl	sl, r1, #29
   2ccfc:	orr	ip, ip, r1, lsr #3
   2cd00:	ldr	r1, [sp]
   2cd04:	orr	r9, sl, r0, lsr #3
   2cd08:	adds	ip, ip, r6
   2cd0c:	ldr	r0, [pc, #544]	; 2cf34 <cmetrohash64_1@@Base+0x5b4>
   2cd10:	adc	r9, r9, r7
   2cd14:	eor	sl, ip, r1
   2cd18:	ldr	r1, [sp, #4]
   2cd1c:	eor	fp, r9, r1
   2cd20:	ldr	r1, [pc, #528]	; 2cf38 <cmetrohash64_1@@Base+0x5b8>
   2cd24:	mul	r1, r1, r3
   2cd28:	mla	lr, r0, lr, r1
   2cd2c:	umull	r0, r1, r3, r0
   2cd30:	add	r1, lr, r1
   2cd34:	lsl	r3, r0, #29
   2cd38:	lsl	lr, r1, #29
   2cd3c:	orr	r3, r3, r1, lsr #3
   2cd40:	orr	ip, lr, r0, lsr #3
   2cd44:	adds	sl, sl, r3
   2cd48:	adc	fp, fp, ip
   2cd4c:	eor	r1, r6, sl
   2cd50:	adds	r5, r1, r5
   2cd54:	eor	r3, r7, fp
   2cd58:	adc	r8, r3, r8
   2cd5c:	str	r5, [sp, #32]
   2cd60:	str	r8, [sp, #36]	; 0x24
   2cd64:	ldr	r3, [sp, #8]
   2cd68:	sub	r3, r3, r4
   2cd6c:	cmp	r3, #7
   2cd70:	ble	2cdc8 <cmetrohash64_1@@Base+0x448>
   2cd74:	mov	r0, r4
   2cd78:	add	r4, r4, #8
   2cd7c:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2cd80:	ldr	r3, [pc, #416]	; 2cf28 <cmetrohash64_1@@Base+0x5a8>
   2cd84:	ldr	r5, [sp, #32]
   2cd88:	ldr	ip, [sp, #36]	; 0x24
   2cd8c:	umull	r6, r7, r0, r3
   2cd90:	mla	r7, r3, r1, r7
   2cd94:	adds	r3, r6, r5
   2cd98:	ldr	r5, [pc, #384]	; 2cf20 <cmetrohash64_1@@Base+0x5a0>
   2cd9c:	lsl	r0, r3, #31
   2cda0:	adc	ip, r7, ip
   2cda4:	orr	r0, r0, ip, lsr #1
   2cda8:	lsl	lr, ip, #31
   2cdac:	umull	r0, r1, r0, r5
   2cdb0:	orr	lr, lr, r3, lsr #1
   2cdb4:	eor	r3, r3, r0
   2cdb8:	mla	r1, r5, lr, r1
   2cdbc:	str	r3, [sp, #32]
   2cdc0:	eor	ip, ip, r1
   2cdc4:	str	ip, [sp, #36]	; 0x24
   2cdc8:	ldr	r3, [sp, #8]
   2cdcc:	sub	r3, r3, r4
   2cdd0:	cmp	r3, #3
   2cdd4:	ble	2ce14 <cmetrohash64_1@@Base+0x494>
   2cdd8:	ldr	ip, [r4], #4
   2cddc:	ldr	r3, [pc, #324]	; 2cf28 <cmetrohash64_1@@Base+0x5a8>
   2cde0:	ldrd	r0, [sp, #32]
   2cde4:	umlal	r0, r1, r3, ip
   2cde8:	ldr	ip, [pc, #304]	; 2cf20 <cmetrohash64_1@@Base+0x5a0>
   2cdec:	lsr	r6, r0, #15
   2cdf0:	lsr	r3, r1, #15
   2cdf4:	orr	r6, r6, r1, lsl #17
   2cdf8:	orr	r3, r3, r0, lsl #17
   2cdfc:	umull	r6, r7, r6, ip
   2ce00:	mla	r7, ip, r3, r7
   2ce04:	eor	r0, r0, r6
   2ce08:	str	r0, [sp, #32]
   2ce0c:	eor	r3, r7, r1
   2ce10:	str	r3, [sp, #36]	; 0x24
   2ce14:	ldr	r3, [sp, #8]
   2ce18:	sub	r3, r3, r4
   2ce1c:	cmp	r3, #1
   2ce20:	ble	2ce60 <cmetrohash64_1@@Base+0x4e0>
   2ce24:	ldrh	ip, [r4], #2
   2ce28:	ldr	r3, [pc, #248]	; 2cf28 <cmetrohash64_1@@Base+0x5a8>
   2ce2c:	ldrd	r0, [sp, #32]
   2ce30:	umlal	r0, r1, r3, ip
   2ce34:	ldr	ip, [pc, #228]	; 2cf20 <cmetrohash64_1@@Base+0x5a0>
   2ce38:	lsr	r6, r0, #13
   2ce3c:	lsr	r3, r1, #13
   2ce40:	orr	r6, r6, r1, lsl #19
   2ce44:	orr	r3, r3, r0, lsl #19
   2ce48:	umull	r6, r7, r6, ip
   2ce4c:	mla	r7, ip, r3, r7
   2ce50:	eor	r0, r0, r6
   2ce54:	str	r0, [sp, #32]
   2ce58:	eor	r3, r7, r1
   2ce5c:	str	r3, [sp, #36]	; 0x24
   2ce60:	ldr	r3, [sp, #8]
   2ce64:	sub	r3, r3, r4
   2ce68:	cmp	r3, #0
   2ce6c:	ble	2ceb8 <cmetrohash64_1@@Base+0x538>
   2ce70:	ldrb	r0, [r4]
   2ce74:	ldr	r3, [pc, #172]	; 2cf28 <cmetrohash64_1@@Base+0x5a8>
   2ce78:	ldr	ip, [sp, #36]	; 0x24
   2ce7c:	ldr	r4, [pc, #156]	; 2cf20 <cmetrohash64_1@@Base+0x5a0>
   2ce80:	umull	r0, r1, r0, r3
   2ce84:	ldr	r3, [sp, #32]
   2ce88:	adds	r3, r0, r3
   2ce8c:	lsr	r0, r3, #25
   2ce90:	adc	ip, r1, ip
   2ce94:	lsr	lr, ip, #25
   2ce98:	orr	r0, r0, ip, lsl #7
   2ce9c:	orr	lr, lr, r3, lsl #7
   2cea0:	umull	r0, r1, r0, r4
   2cea4:	mla	r1, r4, lr, r1
   2cea8:	eor	r3, r3, r0
   2ceac:	str	r3, [sp, #32]
   2ceb0:	eor	ip, ip, r1
   2ceb4:	str	ip, [sp, #36]	; 0x24
   2ceb8:	ldr	ip, [sp, #32]
   2cebc:	ldr	r1, [sp, #36]	; 0x24
   2cec0:	lsl	r0, ip, #31
   2cec4:	lsl	r3, r1, #31
   2cec8:	orr	r0, r0, r1, lsr #1
   2cecc:	orr	r3, r3, ip, lsr #1
   2ced0:	eor	r0, r0, ip
   2ced4:	eor	r3, r3, r1
   2ced8:	umull	r0, r1, r0, r2
   2cedc:	mla	r1, r2, r3, r1
   2cee0:	lsl	r2, r0, #31
   2cee4:	lsl	r3, r1, #31
   2cee8:	orr	r2, r2, r1, lsr #1
   2ceec:	orr	r3, r3, r0, lsr #1
   2cef0:	eor	r2, r2, r0
   2cef4:	eor	r3, r3, r1
   2cef8:	strd	r2, [sp, #32]
   2cefc:	add	r3, sp, #32
   2cf00:	ldm	r3!, {r0, r1}
   2cf04:	ldr	r3, [sp, #84]	; 0x54
   2cf08:	str	r0, [r3]
   2cf0c:	str	r1, [r3, #4]
   2cf10:	add	sp, sp, #44	; 0x2c
   2cf14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cf18:	svcge	0x00065edb
   2cf1c:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   2cf20:			; <UNDEFINED> instruction: 0x8648dbdb
   2cf24:	blvc	ff7dd018 <__bss_end__@@Base+0xff782f1c>
   2cf28:	svccs	0x005870a5
   2cf2c:	eorcc	r4, lr, #128974848	; 0x7b00000
   2cf30:	stmdbvs	r7, {r1, r3, r6, r7, sl, sp, pc}
   2cf34:	mvnscc	fp, #7340032	; 0x700000
   2cf38:	usatne	fp, #8, lr, asr #0

0002cf3c <cmetrohash64_2@@Base>:
   2cf3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cf40:	add	r1, r0, r2
   2cf44:	sub	sp, sp, #44	; 0x2c
   2cf48:	mov	r4, r0
   2cf4c:	str	r1, [sp, #8]
   2cf50:	ldr	r1, [pc, #1416]	; 2d4e0 <cmetrohash64_2@@Base+0x5a4>
   2cf54:	ldr	r0, [sp, #80]	; 0x50
   2cf58:	adds	r6, r2, r1
   2cf5c:	ldr	r1, [pc, #1408]	; 2d4e4 <cmetrohash64_2@@Base+0x5a8>
   2cf60:	adc	r7, r3, r1
   2cf64:	ldr	r1, [pc, #1404]	; 2d4e8 <cmetrohash64_2@@Base+0x5ac>
   2cf68:	cmp	r3, #0
   2cf6c:	cmpeq	r2, #31
   2cf70:	umlal	r6, r7, r1, r0
   2cf74:	mov	r2, r1
   2cf78:	strd	r6, [sp]
   2cf7c:	strd	r6, [sp, #32]
   2cf80:	bls	2d1f4 <cmetrohash64_2@@Base+0x2b8>
   2cf84:	ldr	r3, [sp]
   2cf88:	ldr	sl, [sp]
   2cf8c:	ldr	r5, [pc, #1368]	; 2d4ec <cmetrohash64_2@@Base+0x5b0>
   2cf90:	str	r3, [sp, #12]
   2cf94:	ldr	r3, [sp, #4]
   2cf98:	mov	r8, sl
   2cf9c:	str	r3, [sp, #16]
   2cfa0:	ldr	r3, [sp]
   2cfa4:	str	r3, [sp, #20]
   2cfa8:	ldr	r3, [sp, #4]
   2cfac:	mov	fp, r3
   2cfb0:	mov	r9, r3
   2cfb4:	str	r3, [sp, #24]
   2cfb8:	ldr	r3, [sp, #8]
   2cfbc:	sub	r3, r3, #32
   2cfc0:	mov	r0, r4
   2cfc4:	str	r3, [sp, #28]
   2cfc8:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2cfcc:	umull	r6, r7, r0, r2
   2cfd0:	add	r0, r4, #8
   2cfd4:	mla	r3, r2, r1, r7
   2cfd8:	adds	r1, r6, r8
   2cfdc:	lsr	r8, r1, #29
   2cfe0:	mov	r7, r3
   2cfe4:	ldr	r3, [sp, #20]
   2cfe8:	adc	r9, r7, r9
   2cfec:	orr	r8, r8, r9, lsl #3
   2cff0:	lsr	r9, r9, #29
   2cff4:	adds	r8, r8, r3
   2cff8:	ldr	r3, [sp, #24]
   2cffc:	orr	r9, r9, r1, lsl #3
   2d000:	adc	r9, r9, r3
   2d004:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d008:	umull	r6, r7, r0, r5
   2d00c:	mla	r3, r5, r1, r7
   2d010:	adds	r0, r6, sl
   2d014:	lsr	sl, r0, #29
   2d018:	mov	r7, r3
   2d01c:	ldr	r3, [sp, #12]
   2d020:	adc	fp, r7, fp
   2d024:	orr	sl, sl, fp, lsl #3
   2d028:	lsr	fp, fp, #29
   2d02c:	adds	sl, sl, r3
   2d030:	ldr	r3, [sp, #16]
   2d034:	orr	fp, fp, r0, lsl #3
   2d038:	add	r0, r4, #16
   2d03c:	adc	fp, fp, r3
   2d040:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d044:	ldr	ip, [pc, #1188]	; 2d4f0 <cmetrohash64_2@@Base+0x5b4>
   2d048:	umull	r6, r7, r0, ip
   2d04c:	mla	r3, ip, r1, r7
   2d050:	ldr	r1, [sp, #20]
   2d054:	mov	r7, r3
   2d058:	adds	ip, r6, r1
   2d05c:	ldr	r1, [sp, #24]
   2d060:	lsr	r0, ip, #29
   2d064:	adc	r1, r7, r1
   2d068:	orr	r0, r0, r1, lsl #3
   2d06c:	lsr	r1, r1, #29
   2d070:	adds	r3, r0, r8
   2d074:	add	r0, r4, #24
   2d078:	orr	r1, r1, ip, lsl #3
   2d07c:	add	r4, r4, #32
   2d080:	str	r3, [sp, #20]
   2d084:	adc	r3, r1, r9
   2d088:	str	r3, [sp, #24]
   2d08c:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d090:	ldr	ip, [pc, #1116]	; 2d4f4 <cmetrohash64_2@@Base+0x5b8>
   2d094:	umull	r6, r7, r0, ip
   2d098:	mla	r3, ip, r1, r7
   2d09c:	ldr	r1, [sp, #12]
   2d0a0:	mov	r7, r3
   2d0a4:	adds	ip, r6, r1
   2d0a8:	ldr	r1, [sp, #16]
   2d0ac:	lsr	r0, ip, #29
   2d0b0:	adc	r1, r7, r1
   2d0b4:	orr	r0, r0, r1, lsl #3
   2d0b8:	lsr	r1, r1, #29
   2d0bc:	adds	r3, r0, sl
   2d0c0:	orr	r1, r1, ip, lsl #3
   2d0c4:	str	r3, [sp, #12]
   2d0c8:	adc	r3, r1, fp
   2d0cc:	str	r3, [sp, #16]
   2d0d0:	ldr	r3, [sp, #28]
   2d0d4:	cmp	r4, r3
   2d0d8:	bls	2cfc0 <cmetrohash64_2@@Base+0x84>
   2d0dc:	ldr	r3, [sp, #12]
   2d0e0:	ldr	r1, [sp, #20]
   2d0e4:	adds	r0, r8, r3
   2d0e8:	ldr	r3, [sp, #16]
   2d0ec:	umull	r6, r7, r0, r2
   2d0f0:	adc	r3, r9, r3
   2d0f4:	adds	r0, r6, sl
   2d0f8:	lsr	r6, r0, #30
   2d0fc:	mla	r7, r2, r3, r7
   2d100:	adc	r3, r7, fp
   2d104:	orr	r6, r6, r3, lsl #2
   2d108:	lsr	r3, r3, #30
   2d10c:	umull	r6, r7, r6, r5
   2d110:	orr	r3, r3, r0, lsl #2
   2d114:	eor	r1, r1, r6
   2d118:	mla	r7, r5, r3, r7
   2d11c:	ldr	r3, [sp, #24]
   2d120:	adds	r6, sl, r1
   2d124:	eor	r3, r3, r7
   2d128:	umull	r6, r7, r6, r5
   2d12c:	adc	r0, fp, r3
   2d130:	mla	r7, r5, r0, r7
   2d134:	adds	ip, r6, r8
   2d138:	lsr	r6, ip, #30
   2d13c:	adc	r0, r7, r9
   2d140:	orr	r6, r6, r0, lsl #2
   2d144:	lsr	r0, r0, #30
   2d148:	umull	r6, r7, r6, r2
   2d14c:	orr	r0, r0, ip, lsl #2
   2d150:	ldr	ip, [sp, #16]
   2d154:	mla	r7, r2, r0, r7
   2d158:	ldr	r0, [sp, #12]
   2d15c:	eor	ip, r7, ip
   2d160:	eor	r0, r6, r0
   2d164:	adds	r6, r8, r1
   2d168:	adc	lr, r9, r3
   2d16c:	eor	r8, r8, sl
   2d170:	umull	r6, r7, r6, r2
   2d174:	eor	r9, r9, fp
   2d178:	mla	r7, r2, lr, r7
   2d17c:	adds	lr, r6, r0
   2d180:	lsr	r6, lr, #30
   2d184:	adc	r7, r7, ip
   2d188:	adds	sl, sl, r0
   2d18c:	adc	ip, fp, ip
   2d190:	orr	r6, r6, r7, lsl #2
   2d194:	umull	sl, fp, sl, r5
   2d198:	lsr	r7, r7, #30
   2d19c:	mla	fp, r5, ip, fp
   2d1a0:	adds	r1, sl, r1
   2d1a4:	lsr	r0, r1, #30
   2d1a8:	orr	lr, r7, lr, lsl #2
   2d1ac:	adc	r3, fp, r3
   2d1b0:	umull	r6, r7, r6, r5
   2d1b4:	orr	r0, r0, r3, lsl #2
   2d1b8:	lsr	r3, r3, #30
   2d1bc:	mla	r7, r5, lr, r7
   2d1c0:	eor	r8, r8, r6
   2d1c4:	orr	r3, r3, r1, lsl #2
   2d1c8:	umull	r0, r1, r0, r2
   2d1cc:	eor	r9, r9, r7
   2d1d0:	mla	r1, r2, r3, r1
   2d1d4:	eor	r3, r8, r0
   2d1d8:	eor	ip, r9, r1
   2d1dc:	ldr	r1, [sp]
   2d1e0:	adds	r3, r3, r1
   2d1e4:	ldr	r1, [sp, #4]
   2d1e8:	str	r3, [sp, #32]
   2d1ec:	adc	ip, ip, r1
   2d1f0:	str	ip, [sp, #36]	; 0x24
   2d1f4:	ldr	r3, [sp, #8]
   2d1f8:	sub	r3, r3, r4
   2d1fc:	cmp	r3, #15
   2d200:	ble	2d32c <cmetrohash64_2@@Base+0x3f0>
   2d204:	ldr	r6, [pc, #740]	; 2d4f0 <cmetrohash64_2@@Base+0x5b4>
   2d208:	mov	r0, r4
   2d20c:	ldr	r3, [sp, #36]	; 0x24
   2d210:	ldr	r5, [sp, #32]
   2d214:	str	r3, [sp, #12]
   2d218:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d21c:	umull	sl, fp, r0, r6
   2d220:	mla	fp, r6, r1, fp
   2d224:	ldr	r1, [sp, #12]
   2d228:	adds	r3, sl, r5
   2d22c:	lsr	r0, r3, #29
   2d230:	adc	r9, fp, r1
   2d234:	ldr	fp, [pc, #696]	; 2d4f4 <cmetrohash64_2@@Base+0x5b8>
   2d238:	orr	sl, r0, r9, lsl #3
   2d23c:	lsr	r9, r9, #29
   2d240:	orr	r3, r9, r3, lsl #3
   2d244:	umull	r0, r1, sl, fp
   2d248:	strd	r0, [sp]
   2d24c:	add	r0, r4, #8
   2d250:	add	r4, r4, #16
   2d254:	str	r3, [sp, #16]
   2d258:	ldr	r3, [sp, #4]
   2d25c:	ldr	r1, [sp, #16]
   2d260:	mla	r3, fp, r1, r3
   2d264:	str	r3, [sp, #4]
   2d268:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d26c:	umull	r8, r9, r0, r6
   2d270:	ldr	r0, [sp, #12]
   2d274:	mla	r3, r6, r1, r9
   2d278:	ldr	r1, [sp, #16]
   2d27c:	mov	r9, r3
   2d280:	adds	r3, r8, r5
   2d284:	lsr	lr, r3, #29
   2d288:	adc	ip, r9, r0
   2d28c:	ldr	r0, [pc, #612]	; 2d4f8 <cmetrohash64_2@@Base+0x5bc>
   2d290:	orr	lr, lr, ip, lsl #3
   2d294:	lsr	ip, ip, #29
   2d298:	orr	ip, ip, r3, lsl #3
   2d29c:	ldr	r3, [pc, #600]	; 2d4fc <cmetrohash64_2@@Base+0x5c0>
   2d2a0:	umull	r6, r7, lr, fp
   2d2a4:	mla	r7, fp, ip, r7
   2d2a8:	mul	r3, r3, sl
   2d2ac:	mla	r9, r0, r1, r3
   2d2b0:	umull	r0, r1, sl, r0
   2d2b4:	lsl	r3, r0, #30
   2d2b8:	add	r1, r9, r1
   2d2bc:	lsl	sl, r1, #30
   2d2c0:	orr	r3, r3, r1, lsr #2
   2d2c4:	ldr	r1, [sp]
   2d2c8:	orr	r9, sl, r0, lsr #2
   2d2cc:	adds	r3, r3, r6
   2d2d0:	ldr	r0, [pc, #552]	; 2d500 <cmetrohash64_2@@Base+0x5c4>
   2d2d4:	adc	r9, r9, r7
   2d2d8:	eor	sl, r3, r1
   2d2dc:	ldr	r3, [sp, #4]
   2d2e0:	eor	fp, r9, r3
   2d2e4:	ldr	r3, [pc, #536]	; 2d504 <cmetrohash64_2@@Base+0x5c8>
   2d2e8:	mul	r3, r3, lr
   2d2ec:	mla	ip, r0, ip, r3
   2d2f0:	umull	r0, r1, lr, r0
   2d2f4:	lsl	r3, r0, #30
   2d2f8:	add	r1, ip, r1
   2d2fc:	lsl	lr, r1, #30
   2d300:	orr	r3, r3, r1, lsr #2
   2d304:	orr	ip, lr, r0, lsr #2
   2d308:	adds	sl, sl, r3
   2d30c:	eor	r1, r6, sl
   2d310:	adc	fp, fp, ip
   2d314:	adds	r5, r1, r5
   2d318:	ldr	r1, [sp, #12]
   2d31c:	eor	r3, r7, fp
   2d320:	str	r5, [sp, #32]
   2d324:	adc	r8, r3, r1
   2d328:	str	r8, [sp, #36]	; 0x24
   2d32c:	ldr	r3, [sp, #8]
   2d330:	sub	r3, r3, r4
   2d334:	cmp	r3, #7
   2d338:	ble	2d390 <cmetrohash64_2@@Base+0x454>
   2d33c:	mov	r0, r4
   2d340:	add	r4, r4, #8
   2d344:	bl	2c970 <flatcc_emitter_copy_buffer@@Base+0xb0>
   2d348:	ldr	r3, [pc, #420]	; 2d4f4 <cmetrohash64_2@@Base+0x5b8>
   2d34c:	ldr	r5, [sp, #32]
   2d350:	ldr	ip, [sp, #36]	; 0x24
   2d354:	umull	r6, r7, r0, r3
   2d358:	mla	r7, r3, r1, r7
   2d35c:	adds	r3, r6, r5
   2d360:	ldr	r5, [pc, #388]	; 2d4ec <cmetrohash64_2@@Base+0x5b0>
   2d364:	lsl	r0, r3, #28
   2d368:	adc	ip, r7, ip
   2d36c:	orr	r0, r0, ip, lsr #4
   2d370:	lsl	lr, ip, #28
   2d374:	umull	r0, r1, r0, r5
   2d378:	orr	lr, lr, r3, lsr #4
   2d37c:	eor	r3, r3, r0
   2d380:	mla	r1, r5, lr, r1
   2d384:	str	r3, [sp, #32]
   2d388:	eor	ip, ip, r1
   2d38c:	str	ip, [sp, #36]	; 0x24
   2d390:	ldr	r3, [sp, #8]
   2d394:	sub	r3, r3, r4
   2d398:	cmp	r3, #3
   2d39c:	ble	2d3dc <cmetrohash64_2@@Base+0x4a0>
   2d3a0:	ldr	ip, [r4], #4
   2d3a4:	ldr	r3, [pc, #328]	; 2d4f4 <cmetrohash64_2@@Base+0x5b8>
   2d3a8:	ldrd	r0, [sp, #32]
   2d3ac:	umlal	r0, r1, r3, ip
   2d3b0:	ldr	ip, [pc, #308]	; 2d4ec <cmetrohash64_2@@Base+0x5b0>
   2d3b4:	lsr	r6, r0, #15
   2d3b8:	lsr	r3, r1, #15
   2d3bc:	orr	r6, r6, r1, lsl #17
   2d3c0:	orr	r3, r3, r0, lsl #17
   2d3c4:	umull	r6, r7, r6, ip
   2d3c8:	mla	r7, ip, r3, r7
   2d3cc:	eor	r0, r0, r6
   2d3d0:	str	r0, [sp, #32]
   2d3d4:	eor	r3, r7, r1
   2d3d8:	str	r3, [sp, #36]	; 0x24
   2d3dc:	ldr	r3, [sp, #8]
   2d3e0:	sub	r3, r3, r4
   2d3e4:	cmp	r3, #1
   2d3e8:	ble	2d428 <cmetrohash64_2@@Base+0x4ec>
   2d3ec:	ldrh	ip, [r4], #2
   2d3f0:	ldr	r3, [pc, #252]	; 2d4f4 <cmetrohash64_2@@Base+0x5b8>
   2d3f4:	ldrd	r0, [sp, #32]
   2d3f8:	umlal	r0, r1, r3, ip
   2d3fc:	ldr	ip, [pc, #232]	; 2d4ec <cmetrohash64_2@@Base+0x5b0>
   2d400:	lsr	r6, r0, #15
   2d404:	lsr	r3, r1, #15
   2d408:	orr	r6, r6, r1, lsl #17
   2d40c:	orr	r3, r3, r0, lsl #17
   2d410:	umull	r6, r7, r6, ip
   2d414:	mla	r7, ip, r3, r7
   2d418:	eor	r0, r0, r6
   2d41c:	str	r0, [sp, #32]
   2d420:	eor	r3, r7, r1
   2d424:	str	r3, [sp, #36]	; 0x24
   2d428:	ldr	r3, [sp, #8]
   2d42c:	sub	r3, r3, r4
   2d430:	cmp	r3, #0
   2d434:	ble	2d480 <cmetrohash64_2@@Base+0x544>
   2d438:	ldrb	r0, [r4]
   2d43c:	ldr	r3, [pc, #176]	; 2d4f4 <cmetrohash64_2@@Base+0x5b8>
   2d440:	ldr	ip, [sp, #36]	; 0x24
   2d444:	ldr	r4, [pc, #160]	; 2d4ec <cmetrohash64_2@@Base+0x5b0>
   2d448:	umull	r0, r1, r0, r3
   2d44c:	ldr	r3, [sp, #32]
   2d450:	adds	r3, r0, r3
   2d454:	lsr	r0, r3, #23
   2d458:	adc	ip, r1, ip
   2d45c:	lsr	lr, ip, #23
   2d460:	orr	r0, r0, ip, lsl #9
   2d464:	orr	lr, lr, r3, lsl #9
   2d468:	umull	r0, r1, r0, r4
   2d46c:	mla	r1, r4, lr, r1
   2d470:	eor	r3, r3, r0
   2d474:	str	r3, [sp, #32]
   2d478:	eor	ip, ip, r1
   2d47c:	str	ip, [sp, #36]	; 0x24
   2d480:	ldr	ip, [sp, #32]
   2d484:	ldr	r1, [sp, #36]	; 0x24
   2d488:	lsr	r0, ip, #28
   2d48c:	lsr	r3, r1, #28
   2d490:	orr	r0, r0, r1, lsl #4
   2d494:	orr	r3, r3, ip, lsl #4
   2d498:	eor	r0, r0, ip
   2d49c:	eor	r3, r3, r1
   2d4a0:	umull	r0, r1, r0, r2
   2d4a4:	mla	r1, r2, r3, r1
   2d4a8:	lsr	r2, r0, #29
   2d4ac:	lsr	r3, r1, #29
   2d4b0:	orr	r2, r2, r1, lsl #3
   2d4b4:	orr	r3, r3, r0, lsl #3
   2d4b8:	eor	r2, r2, r0
   2d4bc:	eor	r3, r3, r1
   2d4c0:	strd	r2, [sp, #32]
   2d4c4:	add	r3, sp, #32
   2d4c8:	ldm	r3!, {r0, r1}
   2d4cc:	ldr	r3, [sp, #84]	; 0x54
   2d4d0:	str	r0, [r3]
   2d4d4:	str	r1, [r3, #4]
   2d4d8:	add	sp, sp, #44	; 0x2c
   2d4dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d4e0:	blle	ff9603bc <__bss_end__@@Base+0xff9062c0>
   2d4e4:	adcspl	r3, ip, #-134217725	; 0xf8000003
   2d4e8:			; <UNDEFINED> instruction: 0xd6d018f5
   2d4ec:	adcge	r0, sl, #-335544320	; 0xec000000
   2d4f0:	addsvs	r2, r9, #772	; 0x304
   2d4f4:	adcscc	r5, ip, r9, lsr #22
   2d4f8:	ldrge	r1, [pc], #-1597	; 2d500 <cmetrohash64_2@@Base+0x5c4>
   2d4fc:	stmiacs	r5!, {r1, r2, r3, r4, r5, r6, r7, r8, ip}^
   2d500:	strtvs	r2, [lr], #3217	; 0xc91
   2d504:	stmdbeq	r7, {r0, r2, r6, r7, sl, fp, sp}^
   2d508:	push	{r4, r5, r6, r7, r8, lr}
   2d50c:	mov	r5, r0
   2d510:	mov	r7, r1
   2d514:	mov	r8, r2
   2d518:	mov	r4, #0
   2d51c:	ldr	r6, [r0]
   2d520:	ldr	r3, [r5, #12]
   2d524:	cmp	r3, r4
   2d528:	popls	{r4, r5, r6, r7, r8, pc}
   2d52c:	ldr	r1, [r6, r4, lsl #2]
   2d530:	cmp	r1, #0
   2d534:	cmpne	r1, #2
   2d538:	beq	2d544 <cmetrohash64_2@@Base+0x608>
   2d53c:	mov	r0, r8
   2d540:	blx	r7
   2d544:	add	r4, r4, #1
   2d548:	b	2d520 <cmetrohash64_2@@Base+0x5e4>
   2d54c:	push	{r4, lr}
   2d550:	mov	r4, r0
   2d554:	ldr	r0, [r0]
   2d558:	cmp	r0, #0
   2d55c:	beq	2d564 <cmetrohash64_2@@Base+0x628>
   2d560:	bl	13ef0 <free@plt>
   2d564:	mov	r0, r4
   2d568:	mov	r2, #16
   2d56c:	pop	{r4, lr}
   2d570:	mov	r1, #0
   2d574:	b	13fc8 <memset@plt>
   2d578:	push	{r0, r1, r2, r3, r4, lr}
   2d57c:	add	r3, sp, #8
   2d580:	mov	r2, r1
   2d584:	str	r3, [sp, #4]
   2d588:	ldr	r3, [pc, #20]	; 2d5a4 <cmetrohash64_2@@Base+0x668>
   2d58c:	str	r3, [sp]
   2d590:	mov	r3, #0
   2d594:	bl	2c980 <cmetrohash64_1@@Base>
   2d598:	ldr	r0, [sp, #8]
   2d59c:	add	sp, sp, #20
   2d5a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d5a4:	svccs	0x00693b52
   2d5a8:	ldr	ip, [r2, #12]
   2d5ac:	cmp	ip, r1
   2d5b0:	bne	2d5d4 <cmetrohash64_2@@Base+0x698>
   2d5b4:	mov	r3, r2
   2d5b8:	push	{r4, lr}
   2d5bc:	mov	r2, ip
   2d5c0:	ldr	r1, [r3, #8]
   2d5c4:	bl	13f14 <memcmp@plt>
   2d5c8:	clz	r0, r0
   2d5cc:	lsr	r0, r0, #5
   2d5d0:	pop	{r4, pc}
   2d5d4:	mov	r0, #0
   2d5d8:	bx	lr
   2d5dc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d5e0:	subs	r8, r3, #0
   2d5e4:	str	r1, [sp]
   2d5e8:	bne	2d600 <cmetrohash64_2@@Base+0x6c4>
   2d5ec:	ldr	r3, [pc, #384]	; 2d774 <cmetrohash64_2@@Base+0x838>
   2d5f0:	mov	r2, #114	; 0x72
   2d5f4:	ldr	r1, [pc, #380]	; 2d778 <cmetrohash64_2@@Base+0x83c>
   2d5f8:	ldr	r0, [pc, #380]	; 2d77c <cmetrohash64_2@@Base+0x840>
   2d5fc:	bl	14070 <__assert_fail@plt>
   2d600:	cmp	r8, #2
   2d604:	bne	2d61c <cmetrohash64_2@@Base+0x6e0>
   2d608:	ldr	r3, [pc, #356]	; 2d774 <cmetrohash64_2@@Base+0x838>
   2d60c:	mov	r2, #115	; 0x73
   2d610:	ldr	r1, [pc, #352]	; 2d778 <cmetrohash64_2@@Base+0x83c>
   2d614:	ldr	r0, [pc, #356]	; 2d780 <cmetrohash64_2@@Base+0x844>
   2d618:	b	2d5fc <cmetrohash64_2@@Base+0x6c0>
   2d61c:	cmp	r8, #1
   2d620:	bne	2d638 <cmetrohash64_2@@Base+0x6fc>
   2d624:	ldr	r3, [pc, #328]	; 2d774 <cmetrohash64_2@@Base+0x838>
   2d628:	mov	r2, #116	; 0x74
   2d62c:	ldr	r1, [pc, #324]	; 2d778 <cmetrohash64_2@@Base+0x83c>
   2d630:	ldr	r0, [pc, #332]	; 2d784 <cmetrohash64_2@@Base+0x848>
   2d634:	b	2d5fc <cmetrohash64_2@@Base+0x6c0>
   2d638:	mov	fp, r2
   2d63c:	mov	r3, #179	; 0xb3
   2d640:	ldr	r1, [r0, #8]
   2d644:	mov	r6, r0
   2d648:	ldr	r2, [r0, #12]
   2d64c:	mul	r3, r3, r2
   2d650:	cmp	r1, r3, lsr #8
   2d654:	bcc	2d684 <cmetrohash64_2@@Base+0x748>
   2d658:	lsl	r1, r1, #1
   2d65c:	bl	2d794 <cmetrohash64_2@@Base+0x858>
   2d660:	cmp	r0, #0
   2d664:	beq	2d684 <cmetrohash64_2@@Base+0x748>
   2d668:	ldr	r3, [pc, #280]	; 2d788 <cmetrohash64_2@@Base+0x84c>
   2d66c:	ldr	r2, [pc, #280]	; 2d78c <cmetrohash64_2@@Base+0x850>
   2d670:	ldr	r1, [pc, #280]	; 2d790 <cmetrohash64_2@@Base+0x854>
   2d674:	ldr	r0, [r3]
   2d678:	bl	13fb0 <fprintf@plt>
   2d67c:	mov	r0, #1
   2d680:	bl	13f98 <exit@plt>
   2d684:	mov	r1, fp
   2d688:	ldr	r0, [sp]
   2d68c:	ldr	sl, [r6]
   2d690:	ldr	r9, [r6, #12]
   2d694:	bl	2d578 <cmetrohash64_2@@Base+0x63c>
   2d698:	ldr	r3, [sp, #48]	; 0x30
   2d69c:	add	r4, r0, #1
   2d6a0:	sub	r9, r9, #1
   2d6a4:	and	r2, r9, r0
   2d6a8:	sub	r3, r3, #2
   2d6ac:	cmp	r3, #1
   2d6b0:	ldrls	r3, [r6, #8]
   2d6b4:	movhi	r7, #0
   2d6b8:	addls	r3, r3, #1
   2d6bc:	strls	r3, [r6, #8]
   2d6c0:	bls	2d6f8 <cmetrohash64_2@@Base+0x7bc>
   2d6c4:	ldr	r5, [sl, r2, lsl #2]
   2d6c8:	add	r3, sl, r2, lsl #2
   2d6cc:	cmp	r5, #0
   2d6d0:	bne	2d728 <cmetrohash64_2@@Base+0x7ec>
   2d6d4:	cmp	r7, #0
   2d6d8:	moveq	r7, r3
   2d6dc:	ldr	r3, [r6, #8]
   2d6e0:	add	r3, r3, #1
   2d6e4:	str	r3, [r6, #8]
   2d6e8:	str	r8, [r7]
   2d6ec:	b	2d71c <cmetrohash64_2@@Base+0x7e0>
   2d6f0:	and	r2, r9, r4
   2d6f4:	add	r4, r4, #1
   2d6f8:	ldr	r3, [sl, r2, lsl #2]
   2d6fc:	add	r1, sl, r2, lsl #2
   2d700:	subs	r5, r3, #2
   2d704:	movne	r5, #1
   2d708:	cmp	r3, #0
   2d70c:	moveq	r5, #0
   2d710:	cmp	r5, #0
   2d714:	bne	2d6f0 <cmetrohash64_2@@Base+0x7b4>
   2d718:	str	r8, [r1]
   2d71c:	mov	r0, r5
   2d720:	add	sp, sp, #12
   2d724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d728:	cmp	r5, #2
   2d72c:	bne	2d744 <cmetrohash64_2@@Base+0x808>
   2d730:	cmp	r7, #0
   2d734:	moveq	r7, r3
   2d738:	and	r2, r9, r4
   2d73c:	add	r4, r4, #1
   2d740:	b	2d6c4 <cmetrohash64_2@@Base+0x788>
   2d744:	mov	r2, r5
   2d748:	mov	r1, fp
   2d74c:	ldr	r0, [sp]
   2d750:	str	r3, [sp, #4]
   2d754:	bl	2d5a8 <cmetrohash64_2@@Base+0x66c>
   2d758:	cmp	r0, #0
   2d75c:	ldr	r3, [sp, #4]
   2d760:	beq	2d738 <cmetrohash64_2@@Base+0x7fc>
   2d764:	ldr	r2, [sp, #48]	; 0x30
   2d768:	cmp	r2, #0
   2d76c:	streq	r8, [r3]
   2d770:	b	2d71c <cmetrohash64_2@@Base+0x7e0>
   2d774:	strdeq	r9, [r4], -ip
   2d778:	andeq	r6, r4, r0, asr #6
   2d77c:	muleq	r4, r0, r3
   2d780:	andeq	r6, r4, r7, lsr #7
   2d784:			; <UNDEFINED> instruction: 0x000463be
   2d788:	strheq	sl, [r5], -r0
   2d78c:	ldrdeq	r6, [r4], -r3
   2d790:	andeq	r6, r4, r6, lsl #8
   2d794:	ldr	r3, [r0, #8]
   2d798:	mov	r2, #179	; 0xb3
   2d79c:	push	{r4, r5, r6, r7, lr}
   2d7a0:	mov	r4, r0
   2d7a4:	sub	sp, sp, #28
   2d7a8:	mov	r6, #4
   2d7ac:	ldr	r7, [r0]
   2d7b0:	cmp	r1, r3
   2d7b4:	movcc	r1, r3
   2d7b8:	mul	r3, r2, r6
   2d7bc:	cmp	r1, r3, lsr #8
   2d7c0:	bhi	2d83c <cmetrohash64_2@@Base+0x900>
   2d7c4:	mov	r1, #4
   2d7c8:	mov	r0, r6
   2d7cc:	bl	13ec0 <calloc@plt>
   2d7d0:	cmp	r0, #0
   2d7d4:	str	r0, [sp, #8]
   2d7d8:	mvneq	r0, #0
   2d7dc:	beq	2d834 <cmetrohash64_2@@Base+0x8f8>
   2d7e0:	mov	r5, #0
   2d7e4:	str	r6, [sp, #20]
   2d7e8:	mov	r6, #3
   2d7ec:	str	r5, [sp, #12]
   2d7f0:	str	r5, [sp, #16]
   2d7f4:	ldr	r3, [r4, #12]
   2d7f8:	cmp	r3, r5
   2d7fc:	bhi	2d844 <cmetrohash64_2@@Base+0x908>
   2d800:	mov	r0, r4
   2d804:	bl	2d54c <cmetrohash64_2@@Base+0x610>
   2d808:	add	r2, sp, #8
   2d80c:	add	ip, sp, #24
   2d810:	mov	r3, r2
   2d814:	add	r4, r4, #8
   2d818:	ldm	r3!, {r0, r1}
   2d81c:	cmp	r3, ip
   2d820:	mov	r2, r3
   2d824:	str	r0, [r4, #-8]
   2d828:	str	r1, [r4, #-4]
   2d82c:	bne	2d810 <cmetrohash64_2@@Base+0x8d4>
   2d830:	mov	r0, #0
   2d834:	add	sp, sp, #28
   2d838:	pop	{r4, r5, r6, r7, pc}
   2d83c:	lsl	r6, r6, #1
   2d840:	b	2d7b8 <cmetrohash64_2@@Base+0x87c>
   2d844:	ldr	r3, [r7, r5, lsl #2]
   2d848:	cmp	r3, #0
   2d84c:	cmpne	r3, #2
   2d850:	beq	2d868 <cmetrohash64_2@@Base+0x92c>
   2d854:	add	r0, sp, #8
   2d858:	str	r6, [sp]
   2d85c:	ldr	r1, [r3, #8]
   2d860:	ldr	r2, [r3, #12]
   2d864:	bl	2d5dc <cmetrohash64_2@@Base+0x6a0>
   2d868:	add	r5, r5, #1
   2d86c:	b	2d7f4 <cmetrohash64_2@@Base+0x8b8>
   2d870:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2d874:	ldr	r9, [r0]
   2d878:	cmp	r9, #0
   2d87c:	bne	2d88c <cmetrohash64_2@@Base+0x950>
   2d880:	mov	r5, #0
   2d884:	mov	r0, r5
   2d888:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2d88c:	ldr	r6, [r0, #12]
   2d890:	mov	r7, r1
   2d894:	mov	r1, r2
   2d898:	mov	r0, r7
   2d89c:	mov	r8, r2
   2d8a0:	bl	2d578 <cmetrohash64_2@@Base+0x63c>
   2d8a4:	add	r4, r0, #1
   2d8a8:	sub	r6, r6, #1
   2d8ac:	and	r3, r6, r0
   2d8b0:	ldr	r5, [r9, r3, lsl #2]
   2d8b4:	cmp	r5, #0
   2d8b8:	beq	2d880 <cmetrohash64_2@@Base+0x944>
   2d8bc:	cmp	r5, #2
   2d8c0:	beq	2d8dc <cmetrohash64_2@@Base+0x9a0>
   2d8c4:	mov	r2, r5
   2d8c8:	mov	r1, r8
   2d8cc:	mov	r0, r7
   2d8d0:	bl	2d5a8 <cmetrohash64_2@@Base+0x66c>
   2d8d4:	cmp	r0, #0
   2d8d8:	bne	2d884 <cmetrohash64_2@@Base+0x948>
   2d8dc:	and	r3, r6, r4
   2d8e0:	add	r4, r4, #1
   2d8e4:	b	2d8b0 <cmetrohash64_2@@Base+0x974>
   2d8e8:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d8ec:	ldr	sl, [r0]
   2d8f0:	cmp	sl, #0
   2d8f4:	bne	2d908 <cmetrohash64_2@@Base+0x9cc>
   2d8f8:	mov	r6, #0
   2d8fc:	mov	r0, r6
   2d900:	add	sp, sp, #4
   2d904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d908:	mov	r5, r0
   2d90c:	mov	r8, r1
   2d910:	ldr	r7, [r5, #12]
   2d914:	mov	r1, r2
   2d918:	mov	r0, r8
   2d91c:	mov	r9, r2
   2d920:	bl	2d578 <cmetrohash64_2@@Base+0x63c>
   2d924:	add	r4, r0, #1
   2d928:	sub	r7, r7, #1
   2d92c:	and	r3, r7, r0
   2d930:	ldr	r6, [sl, r3, lsl #2]
   2d934:	add	fp, sl, r3, lsl #2
   2d938:	cmp	r6, #0
   2d93c:	beq	2d8f8 <cmetrohash64_2@@Base+0x9bc>
   2d940:	cmp	r6, #2
   2d944:	beq	2d978 <cmetrohash64_2@@Base+0xa3c>
   2d948:	mov	r2, r6
   2d94c:	mov	r1, r9
   2d950:	mov	r0, r8
   2d954:	bl	2d5a8 <cmetrohash64_2@@Base+0x66c>
   2d958:	cmp	r0, #0
   2d95c:	beq	2d978 <cmetrohash64_2@@Base+0xa3c>
   2d960:	mov	r3, #2
   2d964:	str	r3, [fp]
   2d968:	ldr	r3, [r5, #8]
   2d96c:	sub	r3, r3, #1
   2d970:	str	r3, [r5, #8]
   2d974:	b	2d8fc <cmetrohash64_2@@Base+0x9c0>
   2d978:	and	r3, r4, r7
   2d97c:	add	r4, r4, #1
   2d980:	b	2d930 <cmetrohash64_2@@Base+0x9f4>

0002d984 <fb_name_table_clear@@Base>:
   2d984:	b	2d54c <cmetrohash64_2@@Base+0x610>

0002d988 <fb_name_table_destroy@@Base>:
   2d988:	cmp	r1, #0
   2d98c:	push	{r4, lr}
   2d990:	mov	r4, r0
   2d994:	beq	2d99c <fb_name_table_destroy@@Base+0x14>
   2d998:	bl	2d508 <cmetrohash64_2@@Base+0x5cc>
   2d99c:	mov	r0, r4
   2d9a0:	pop	{r4, lr}
   2d9a4:	b	2d54c <cmetrohash64_2@@Base+0x610>

0002d9a8 <fb_name_table_init@@Base>:
   2d9a8:	push	{r4, r5, r6, lr}
   2d9ac:	mov	r2, #179	; 0xb3
   2d9b0:	mov	r5, r0
   2d9b4:	mov	r4, #4
   2d9b8:	mul	r3, r2, r4
   2d9bc:	cmp	r1, r3, lsr #8
   2d9c0:	bhi	2d9f0 <fb_name_table_init@@Base+0x48>
   2d9c4:	mov	r1, #4
   2d9c8:	mov	r0, r4
   2d9cc:	bl	13ec0 <calloc@plt>
   2d9d0:	cmp	r0, #0
   2d9d4:	str	r0, [r5]
   2d9d8:	movne	r0, #0
   2d9dc:	mvneq	r0, #0
   2d9e0:	strne	r4, [r5, #12]
   2d9e4:	strne	r0, [r5, #4]
   2d9e8:	strne	r0, [r5, #8]
   2d9ec:	pop	{r4, r5, r6, pc}
   2d9f0:	lsl	r4, r4, #1
   2d9f4:	b	2d9b8 <fb_name_table_init@@Base+0x10>

0002d9f8 <fb_name_table_resize@@Base>:
   2d9f8:	b	2d794 <cmetrohash64_2@@Base+0x858>

0002d9fc <fb_name_table_insert@@Base>:
   2d9fc:	b	2d5dc <cmetrohash64_2@@Base+0x6a0>

0002da00 <fb_name_table_insert_item@@Base>:
   2da00:	mov	r3, r1
   2da04:	push	{r0, r1, r2, lr}
   2da08:	str	r2, [sp]
   2da0c:	ldr	r1, [r1, #8]
   2da10:	ldr	r2, [r3, #12]
   2da14:	bl	2d5dc <cmetrohash64_2@@Base+0x6a0>
   2da18:	add	sp, sp, #12
   2da1c:	pop	{pc}		; (ldr pc, [sp], #4)

0002da20 <fb_name_table_find@@Base>:
   2da20:	b	2d870 <cmetrohash64_2@@Base+0x934>

0002da24 <fb_name_table_find_item@@Base>:
   2da24:	ldr	r2, [r1, #12]
   2da28:	ldr	r1, [r1, #8]
   2da2c:	b	2d870 <cmetrohash64_2@@Base+0x934>

0002da30 <fb_name_table_remove@@Base>:
   2da30:	b	2d8e8 <cmetrohash64_2@@Base+0x9ac>

0002da34 <fb_name_table_remove_item@@Base>:
   2da34:	ldr	r2, [r1, #12]
   2da38:	ldr	r1, [r1, #8]
   2da3c:	b	2d8e8 <cmetrohash64_2@@Base+0x9ac>

0002da40 <fb_name_table_visit@@Base>:
   2da40:	b	2d508 <cmetrohash64_2@@Base+0x5cc>
   2da44:	push	{r4, r5, r6, r7, r8, lr}
   2da48:	mov	r5, r0
   2da4c:	mov	r7, r1
   2da50:	mov	r8, r2
   2da54:	mov	r4, #0
   2da58:	ldr	r6, [r0]
   2da5c:	ldr	r3, [r5, #12]
   2da60:	cmp	r3, r4
   2da64:	popls	{r4, r5, r6, r7, r8, pc}
   2da68:	ldr	r1, [r6, r4, lsl #2]
   2da6c:	cmp	r1, #0
   2da70:	cmpne	r1, #2
   2da74:	beq	2da80 <fb_name_table_visit@@Base+0x40>
   2da78:	mov	r0, r8
   2da7c:	blx	r7
   2da80:	add	r4, r4, #1
   2da84:	b	2da5c <fb_name_table_visit@@Base+0x1c>
   2da88:	push	{r4, lr}
   2da8c:	mov	r4, r0
   2da90:	ldr	r0, [r0]
   2da94:	cmp	r0, #0
   2da98:	beq	2daa0 <fb_name_table_visit@@Base+0x60>
   2da9c:	bl	13ef0 <free@plt>
   2daa0:	mov	r0, r4
   2daa4:	mov	r2, #16
   2daa8:	pop	{r4, lr}
   2daac:	mov	r1, #0
   2dab0:	b	13fc8 <memset@plt>
   2dab4:	ldrh	r3, [r0, #8]
   2dab8:	cmp	r3, #5
   2dabc:	beq	2dae8 <fb_name_table_visit@@Base+0xa8>
   2dac0:	cmp	r3, #6
   2dac4:	beq	2daf4 <fb_name_table_visit@@Base+0xb4>
   2dac8:	cmp	r3, #4
   2dacc:	bne	2db00 <fb_name_table_visit@@Base+0xc0>
   2dad0:	ldr	r3, [pc, #48]	; 2db08 <fb_name_table_visit@@Base+0xc8>
   2dad4:	ldr	r2, [r0]
   2dad8:	eor	r3, r3, r2
   2dadc:	ldr	r0, [pc, #40]	; 2db0c <fb_name_table_visit@@Base+0xcc>
   2dae0:	mul	r0, r0, r3
   2dae4:	bx	lr
   2dae8:	ldr	r3, [pc, #32]	; 2db10 <fb_name_table_visit@@Base+0xd0>
   2daec:	ldr	r2, [r0]
   2daf0:	b	2dad8 <fb_name_table_visit@@Base+0x98>
   2daf4:	ldrb	r2, [r0]
   2daf8:	ldr	r3, [pc, #20]	; 2db14 <fb_name_table_visit@@Base+0xd4>
   2dafc:	b	2dad8 <fb_name_table_visit@@Base+0x98>
   2db00:	mov	r0, #0
   2db04:	bx	lr
   2db08:	svccs	0x00693b56
   2db0c:			; <UNDEFINED> instruction: 0x9e3779b1
   2db10:	svccs	0x00693b57
   2db14:	svccs	0x00693b54
   2db18:	ldrh	r2, [r0, #8]
   2db1c:	ldrh	r3, [r1, #8]
   2db20:	cmp	r3, r2
   2db24:	bne	2db78 <fb_name_table_visit@@Base+0x138>
   2db28:	cmp	r3, #5
   2db2c:	push	{r4, r5, lr}
   2db30:	beq	2db44 <fb_name_table_visit@@Base+0x104>
   2db34:	cmp	r3, #6
   2db38:	beq	2db60 <fb_name_table_visit@@Base+0x120>
   2db3c:	cmp	r3, #4
   2db40:	bne	2db80 <fb_name_table_visit@@Base+0x140>
   2db44:	ldrd	r4, [r0]
   2db48:	ldrd	r2, [r1]
   2db4c:	cmp	r5, r3
   2db50:	cmpeq	r4, r2
   2db54:	moveq	r0, #1
   2db58:	movne	r0, #0
   2db5c:	pop	{r4, r5, pc}
   2db60:	ldrb	r0, [r0]
   2db64:	ldrb	r3, [r1]
   2db68:	sub	r0, r0, r3
   2db6c:	clz	r0, r0
   2db70:	lsr	r0, r0, #5
   2db74:	pop	{r4, r5, pc}
   2db78:	mov	r0, #0
   2db7c:	bx	lr
   2db80:	mov	r0, #0
   2db84:	pop	{r4, r5, pc}
   2db88:	push	{r4, r5, r6, r7, r8, lr}
   2db8c:	ldr	r8, [r0]
   2db90:	cmp	r8, #0
   2db94:	moveq	r5, r8
   2db98:	beq	2dbc4 <fb_name_table_visit@@Base+0x184>
   2db9c:	ldr	r6, [r0, #12]
   2dba0:	mov	r0, r1
   2dba4:	mov	r7, r1
   2dba8:	bl	2dab4 <fb_name_table_visit@@Base+0x74>
   2dbac:	add	r4, r0, #1
   2dbb0:	sub	r6, r6, #1
   2dbb4:	and	r3, r6, r0
   2dbb8:	ldr	r5, [r8, r3, lsl #2]
   2dbbc:	cmp	r5, #0
   2dbc0:	bne	2dbcc <fb_name_table_visit@@Base+0x18c>
   2dbc4:	mov	r0, r5
   2dbc8:	pop	{r4, r5, r6, r7, r8, pc}
   2dbcc:	cmp	r5, #2
   2dbd0:	beq	2dbe8 <fb_name_table_visit@@Base+0x1a8>
   2dbd4:	mov	r1, r5
   2dbd8:	mov	r0, r7
   2dbdc:	bl	2db18 <fb_name_table_visit@@Base+0xd8>
   2dbe0:	cmp	r0, #0
   2dbe4:	bne	2dbc4 <fb_name_table_visit@@Base+0x184>
   2dbe8:	and	r3, r6, r4
   2dbec:	add	r4, r4, #1
   2dbf0:	b	2dbb8 <fb_name_table_visit@@Base+0x178>
   2dbf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2dbf8:	ldr	r7, [r0]
   2dbfc:	cmp	r7, #0
   2dc00:	moveq	r6, r7
   2dc04:	beq	2dc68 <fb_name_table_visit@@Base+0x228>
   2dc08:	mov	r5, r0
   2dc0c:	mov	r0, r1
   2dc10:	mov	r8, r1
   2dc14:	bl	2dab4 <fb_name_table_visit@@Base+0x74>
   2dc18:	ldr	r9, [r5, #12]
   2dc1c:	add	r4, r0, #1
   2dc20:	sub	r9, r9, #1
   2dc24:	and	r3, r9, r0
   2dc28:	ldr	r6, [r7, r3, lsl #2]
   2dc2c:	add	sl, r7, r3, lsl #2
   2dc30:	cmp	r6, #0
   2dc34:	beq	2dc68 <fb_name_table_visit@@Base+0x228>
   2dc38:	cmp	r6, #2
   2dc3c:	beq	2dc70 <fb_name_table_visit@@Base+0x230>
   2dc40:	mov	r1, r6
   2dc44:	mov	r0, r8
   2dc48:	bl	2db18 <fb_name_table_visit@@Base+0xd8>
   2dc4c:	cmp	r0, #0
   2dc50:	beq	2dc70 <fb_name_table_visit@@Base+0x230>
   2dc54:	mov	r3, #2
   2dc58:	str	r3, [sl]
   2dc5c:	ldr	r3, [r5, #8]
   2dc60:	sub	r3, r3, #1
   2dc64:	str	r3, [r5, #8]
   2dc68:	mov	r0, r6
   2dc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2dc70:	and	r3, r9, r4
   2dc74:	add	r4, r4, #1
   2dc78:	b	2dc28 <fb_name_table_visit@@Base+0x1e8>
   2dc7c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dc80:	subs	r7, r2, #0
   2dc84:	bne	2dc9c <fb_name_table_visit@@Base+0x25c>
   2dc88:	ldr	r3, [pc, #380]	; 2de0c <fb_name_table_visit@@Base+0x3cc>
   2dc8c:	mov	r2, #114	; 0x72
   2dc90:	ldr	r1, [pc, #376]	; 2de10 <fb_name_table_visit@@Base+0x3d0>
   2dc94:	ldr	r0, [pc, #376]	; 2de14 <fb_name_table_visit@@Base+0x3d4>
   2dc98:	bl	14070 <__assert_fail@plt>
   2dc9c:	cmp	r7, #2
   2dca0:	bne	2dcb8 <fb_name_table_visit@@Base+0x278>
   2dca4:	ldr	r3, [pc, #352]	; 2de0c <fb_name_table_visit@@Base+0x3cc>
   2dca8:	mov	r2, #115	; 0x73
   2dcac:	ldr	r1, [pc, #348]	; 2de10 <fb_name_table_visit@@Base+0x3d0>
   2dcb0:	ldr	r0, [pc, #352]	; 2de18 <fb_name_table_visit@@Base+0x3d8>
   2dcb4:	b	2dc98 <fb_name_table_visit@@Base+0x258>
   2dcb8:	cmp	r7, #1
   2dcbc:	bne	2dcd4 <fb_name_table_visit@@Base+0x294>
   2dcc0:	ldr	r3, [pc, #324]	; 2de0c <fb_name_table_visit@@Base+0x3cc>
   2dcc4:	mov	r2, #116	; 0x74
   2dcc8:	ldr	r1, [pc, #320]	; 2de10 <fb_name_table_visit@@Base+0x3d0>
   2dccc:	ldr	r0, [pc, #328]	; 2de1c <fb_name_table_visit@@Base+0x3dc>
   2dcd0:	b	2dc98 <fb_name_table_visit@@Base+0x258>
   2dcd4:	ldr	r2, [r0, #12]
   2dcd8:	mov	r9, r1
   2dcdc:	mov	sl, r3
   2dce0:	mov	r3, #179	; 0xb3
   2dce4:	mov	r6, r0
   2dce8:	ldr	r1, [r0, #8]
   2dcec:	mul	r3, r3, r2
   2dcf0:	cmp	r1, r3, lsr #8
   2dcf4:	bcc	2dd24 <fb_name_table_visit@@Base+0x2e4>
   2dcf8:	lsl	r1, r1, #1
   2dcfc:	bl	2de2c <fb_name_table_visit@@Base+0x3ec>
   2dd00:	cmp	r0, #0
   2dd04:	beq	2dd24 <fb_name_table_visit@@Base+0x2e4>
   2dd08:	ldr	r3, [pc, #272]	; 2de20 <fb_name_table_visit@@Base+0x3e0>
   2dd0c:	ldr	r2, [pc, #272]	; 2de24 <fb_name_table_visit@@Base+0x3e4>
   2dd10:	ldr	r1, [pc, #272]	; 2de28 <fb_name_table_visit@@Base+0x3e8>
   2dd14:	ldr	r0, [r3]
   2dd18:	bl	13fb0 <fprintf@plt>
   2dd1c:	mov	r0, #1
   2dd20:	bl	13f98 <exit@plt>
   2dd24:	mov	r0, r9
   2dd28:	bl	2dab4 <fb_name_table_visit@@Base+0x74>
   2dd2c:	sub	r3, sl, #2
   2dd30:	add	r4, r0, #1
   2dd34:	ldr	fp, [r6]
   2dd38:	cmp	r3, #1
   2dd3c:	ldrls	r3, [r6, #8]
   2dd40:	movhi	r3, #0
   2dd44:	ldr	r8, [r6, #12]
   2dd48:	addls	r3, r3, #1
   2dd4c:	sub	r8, r8, #1
   2dd50:	strls	r3, [r6, #8]
   2dd54:	and	r1, r8, r0
   2dd58:	bls	2dd90 <fb_name_table_visit@@Base+0x350>
   2dd5c:	ldr	r5, [fp, r1, lsl #2]
   2dd60:	add	r2, fp, r1, lsl #2
   2dd64:	cmp	r5, #0
   2dd68:	bne	2ddb8 <fb_name_table_visit@@Base+0x378>
   2dd6c:	cmp	r3, #0
   2dd70:	moveq	r3, r2
   2dd74:	ldr	r2, [r6, #8]
   2dd78:	add	r2, r2, #1
   2dd7c:	str	r2, [r6, #8]
   2dd80:	str	r7, [r3]
   2dd84:	b	2de00 <fb_name_table_visit@@Base+0x3c0>
   2dd88:	and	r1, r8, r4
   2dd8c:	add	r4, r4, #1
   2dd90:	ldr	r3, [fp, r1, lsl #2]
   2dd94:	add	r2, fp, r1, lsl #2
   2dd98:	subs	r5, r3, #2
   2dd9c:	movne	r5, #1
   2dda0:	cmp	r3, #0
   2dda4:	moveq	r5, #0
   2dda8:	cmp	r5, #0
   2ddac:	bne	2dd88 <fb_name_table_visit@@Base+0x348>
   2ddb0:	str	r7, [r2]
   2ddb4:	b	2de00 <fb_name_table_visit@@Base+0x3c0>
   2ddb8:	cmp	r5, #2
   2ddbc:	bne	2ddd4 <fb_name_table_visit@@Base+0x394>
   2ddc0:	cmp	r3, #0
   2ddc4:	moveq	r3, r2
   2ddc8:	and	r1, r8, r4
   2ddcc:	add	r4, r4, #1
   2ddd0:	b	2dd5c <fb_name_table_visit@@Base+0x31c>
   2ddd4:	mov	r1, r5
   2ddd8:	mov	r0, r9
   2dddc:	str	r3, [sp]
   2dde0:	str	r2, [sp, #4]
   2dde4:	bl	2db18 <fb_name_table_visit@@Base+0xd8>
   2dde8:	cmp	r0, #0
   2ddec:	ldr	r3, [sp]
   2ddf0:	ldr	r2, [sp, #4]
   2ddf4:	beq	2ddc8 <fb_name_table_visit@@Base+0x388>
   2ddf8:	cmp	sl, #0
   2ddfc:	beq	2ddb0 <fb_name_table_visit@@Base+0x370>
   2de00:	mov	r0, r5
   2de04:	add	sp, sp, #12
   2de08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de0c:	andeq	r9, r4, r4, lsl r7
   2de10:	andeq	r6, r4, r0, asr #6
   2de14:	muleq	r4, r0, r3
   2de18:	andeq	r6, r4, r7, lsr #7
   2de1c:			; <UNDEFINED> instruction: 0x000463be
   2de20:	strheq	sl, [r5], -r0
   2de24:	ldrdeq	r6, [r4], -r3
   2de28:	andeq	r6, r4, r6, lsl #8
   2de2c:	ldr	r3, [r0, #8]
   2de30:	mov	r2, #179	; 0xb3
   2de34:	push	{r4, r5, r6, r7, lr}
   2de38:	mov	r4, r0
   2de3c:	sub	sp, sp, #20
   2de40:	mov	r6, #4
   2de44:	ldr	r7, [r0]
   2de48:	cmp	r1, r3
   2de4c:	movcc	r1, r3
   2de50:	mul	r3, r2, r6
   2de54:	cmp	r1, r3, lsr #8
   2de58:	bhi	2ded0 <fb_name_table_visit@@Base+0x490>
   2de5c:	mov	r1, #4
   2de60:	mov	r0, r6
   2de64:	bl	13ec0 <calloc@plt>
   2de68:	cmp	r0, #0
   2de6c:	str	r0, [sp]
   2de70:	mvneq	r0, #0
   2de74:	beq	2dec8 <fb_name_table_visit@@Base+0x488>
   2de78:	mov	r5, #0
   2de7c:	str	r5, [sp, #4]
   2de80:	str	r5, [sp, #8]
   2de84:	str	r6, [sp, #12]
   2de88:	ldr	r3, [r4, #12]
   2de8c:	cmp	r3, r5
   2de90:	bhi	2ded8 <fb_name_table_visit@@Base+0x498>
   2de94:	mov	r0, r4
   2de98:	bl	2da88 <fb_name_table_visit@@Base+0x48>
   2de9c:	mov	r2, sp
   2dea0:	add	ip, sp, #16
   2dea4:	mov	r3, r2
   2dea8:	add	r4, r4, #8
   2deac:	ldm	r3!, {r0, r1}
   2deb0:	cmp	r3, ip
   2deb4:	mov	r2, r3
   2deb8:	str	r0, [r4, #-8]
   2debc:	str	r1, [r4, #-4]
   2dec0:	bne	2dea4 <fb_name_table_visit@@Base+0x464>
   2dec4:	mov	r0, #0
   2dec8:	add	sp, sp, #20
   2decc:	pop	{r4, r5, r6, r7, pc}
   2ded0:	lsl	r6, r6, #1
   2ded4:	b	2de50 <fb_name_table_visit@@Base+0x410>
   2ded8:	ldr	r2, [r7, r5, lsl #2]
   2dedc:	cmp	r2, #0
   2dee0:	cmpne	r2, #2
   2dee4:	beq	2def8 <fb_name_table_visit@@Base+0x4b8>
   2dee8:	mov	r3, #3
   2deec:	mov	r1, r2
   2def0:	mov	r0, sp
   2def4:	bl	2dc7c <fb_name_table_visit@@Base+0x23c>
   2def8:	add	r5, r5, #1
   2defc:	b	2de88 <fb_name_table_visit@@Base+0x448>

0002df00 <fb_value_set_clear@@Base>:
   2df00:	b	2da88 <fb_name_table_visit@@Base+0x48>

0002df04 <fb_value_set_destroy@@Base>:
   2df04:	cmp	r1, #0
   2df08:	push	{r4, lr}
   2df0c:	mov	r4, r0
   2df10:	beq	2df18 <fb_value_set_destroy@@Base+0x14>
   2df14:	bl	2da44 <fb_name_table_visit@@Base+0x4>
   2df18:	mov	r0, r4
   2df1c:	pop	{r4, lr}
   2df20:	b	2da88 <fb_name_table_visit@@Base+0x48>

0002df24 <fb_value_set_init@@Base>:
   2df24:	push	{r4, r5, r6, lr}
   2df28:	mov	r2, #179	; 0xb3
   2df2c:	mov	r5, r0
   2df30:	mov	r4, #4
   2df34:	mul	r3, r2, r4
   2df38:	cmp	r1, r3, lsr #8
   2df3c:	bhi	2df6c <fb_value_set_init@@Base+0x48>
   2df40:	mov	r1, #4
   2df44:	mov	r0, r4
   2df48:	bl	13ec0 <calloc@plt>
   2df4c:	cmp	r0, #0
   2df50:	str	r0, [r5]
   2df54:	movne	r0, #0
   2df58:	mvneq	r0, #0
   2df5c:	strne	r4, [r5, #12]
   2df60:	strne	r0, [r5, #4]
   2df64:	strne	r0, [r5, #8]
   2df68:	pop	{r4, r5, r6, pc}
   2df6c:	lsl	r4, r4, #1
   2df70:	b	2df34 <fb_value_set_init@@Base+0x10>

0002df74 <fb_value_set_resize@@Base>:
   2df74:	b	2de2c <fb_name_table_visit@@Base+0x3ec>

0002df78 <fb_value_set_insert@@Base>:
   2df78:	mov	r2, r3
   2df7c:	ldr	r3, [sp]
   2df80:	b	2dc7c <fb_name_table_visit@@Base+0x23c>

0002df84 <fb_value_set_insert_item@@Base>:
   2df84:	mov	r3, r2
   2df88:	mov	r2, r1
   2df8c:	b	2dc7c <fb_name_table_visit@@Base+0x23c>

0002df90 <fb_value_set_find@@Base>:
   2df90:	b	2db88 <fb_name_table_visit@@Base+0x148>

0002df94 <fb_value_set_find_item@@Base>:
   2df94:	b	2db88 <fb_name_table_visit@@Base+0x148>

0002df98 <fb_value_set_remove@@Base>:
   2df98:	b	2dbf4 <fb_name_table_visit@@Base+0x1b4>

0002df9c <fb_value_set_remove_item@@Base>:
   2df9c:	b	2dbf4 <fb_name_table_visit@@Base+0x1b4>

0002dfa0 <fb_value_set_visit@@Base>:
   2dfa0:	b	2da44 <fb_name_table_visit@@Base+0x4>
   2dfa4:	eor	r1, r1, #-2147483648	; 0x80000000
   2dfa8:	b	2dfb0 <fb_value_set_visit@@Base+0x10>
   2dfac:	eor	r3, r3, #-2147483648	; 0x80000000
   2dfb0:	push	{r4, r5, lr}
   2dfb4:	lsl	r4, r1, #1
   2dfb8:	lsl	r5, r3, #1
   2dfbc:	teq	r4, r5
   2dfc0:	teqeq	r0, r2
   2dfc4:	orrsne	ip, r4, r0
   2dfc8:	orrsne	ip, r5, r2
   2dfcc:	mvnsne	ip, r4, asr #21
   2dfd0:	mvnsne	ip, r5, asr #21
   2dfd4:	beq	2e1c0 <fb_value_set_visit@@Base+0x220>
   2dfd8:	lsr	r4, r4, #21
   2dfdc:	rsbs	r5, r4, r5, lsr #21
   2dfe0:	rsblt	r5, r5, #0
   2dfe4:	ble	2e004 <fb_value_set_visit@@Base+0x64>
   2dfe8:	add	r4, r4, r5
   2dfec:	eor	r2, r0, r2
   2dff0:	eor	r3, r1, r3
   2dff4:	eor	r0, r2, r0
   2dff8:	eor	r1, r3, r1
   2dffc:	eor	r2, r0, r2
   2e000:	eor	r3, r1, r3
   2e004:	cmp	r5, #54	; 0x36
   2e008:	pophi	{r4, r5, pc}
   2e00c:	tst	r1, #-2147483648	; 0x80000000
   2e010:	lsl	r1, r1, #12
   2e014:	mov	ip, #1048576	; 0x100000
   2e018:	orr	r1, ip, r1, lsr #12
   2e01c:	beq	2e028 <fb_value_set_visit@@Base+0x88>
   2e020:	rsbs	r0, r0, #0
   2e024:	rsc	r1, r1, #0
   2e028:	tst	r3, #-2147483648	; 0x80000000
   2e02c:	lsl	r3, r3, #12
   2e030:	orr	r3, ip, r3, lsr #12
   2e034:	beq	2e040 <fb_value_set_visit@@Base+0xa0>
   2e038:	rsbs	r2, r2, #0
   2e03c:	rsc	r3, r3, #0
   2e040:	teq	r4, r5
   2e044:	beq	2e1a8 <fb_value_set_visit@@Base+0x208>
   2e048:	sub	r4, r4, #1
   2e04c:	rsbs	lr, r5, #32
   2e050:	blt	2e06c <fb_value_set_visit@@Base+0xcc>
   2e054:	lsl	ip, r2, lr
   2e058:	adds	r0, r0, r2, lsr r5
   2e05c:	adc	r1, r1, #0
   2e060:	adds	r0, r0, r3, lsl lr
   2e064:	adcs	r1, r1, r3, asr r5
   2e068:	b	2e088 <fb_value_set_visit@@Base+0xe8>
   2e06c:	sub	r5, r5, #32
   2e070:	add	lr, lr, #32
   2e074:	cmp	r2, #1
   2e078:	lsl	ip, r3, lr
   2e07c:	orrcs	ip, ip, #2
   2e080:	adds	r0, r0, r3, asr r5
   2e084:	adcs	r1, r1, r3, asr #31
   2e088:	and	r5, r1, #-2147483648	; 0x80000000
   2e08c:	bpl	2e09c <fb_value_set_visit@@Base+0xfc>
   2e090:	rsbs	ip, ip, #0
   2e094:	rscs	r0, r0, #0
   2e098:	rsc	r1, r1, #0
   2e09c:	cmp	r1, #1048576	; 0x100000
   2e0a0:	bcc	2e0e0 <fb_value_set_visit@@Base+0x140>
   2e0a4:	cmp	r1, #2097152	; 0x200000
   2e0a8:	bcc	2e0c8 <fb_value_set_visit@@Base+0x128>
   2e0ac:	lsrs	r1, r1, #1
   2e0b0:	rrxs	r0, r0
   2e0b4:	rrx	ip, ip
   2e0b8:	add	r4, r4, #1
   2e0bc:	lsl	r2, r4, #21
   2e0c0:	cmn	r2, #4194304	; 0x400000
   2e0c4:	bcs	2e220 <fb_value_set_visit@@Base+0x280>
   2e0c8:	cmp	ip, #-2147483648	; 0x80000000
   2e0cc:	lsrseq	ip, r0, #1
   2e0d0:	adcs	r0, r0, #0
   2e0d4:	adc	r1, r1, r4, lsl #20
   2e0d8:	orr	r1, r1, r5
   2e0dc:	pop	{r4, r5, pc}
   2e0e0:	lsls	ip, ip, #1
   2e0e4:	adcs	r0, r0, r0
   2e0e8:	adc	r1, r1, r1
   2e0ec:	tst	r1, #1048576	; 0x100000
   2e0f0:	sub	r4, r4, #1
   2e0f4:	bne	2e0c8 <fb_value_set_visit@@Base+0x128>
   2e0f8:	teq	r1, #0
   2e0fc:	moveq	r1, r0
   2e100:	moveq	r0, #0
   2e104:	clz	r3, r1
   2e108:	addeq	r3, r3, #32
   2e10c:	sub	r3, r3, #11
   2e110:	subs	r2, r3, #32
   2e114:	bge	2e138 <fb_value_set_visit@@Base+0x198>
   2e118:	adds	r2, r2, #12
   2e11c:	ble	2e134 <fb_value_set_visit@@Base+0x194>
   2e120:	add	ip, r2, #20
   2e124:	rsb	r2, r2, #12
   2e128:	lsl	r0, r1, ip
   2e12c:	lsr	r1, r1, r2
   2e130:	b	2e148 <fb_value_set_visit@@Base+0x1a8>
   2e134:	add	r2, r2, #20
   2e138:	rsble	ip, r2, #32
   2e13c:	lsl	r1, r1, r2
   2e140:	orrle	r1, r1, r0, lsr ip
   2e144:	lslle	r0, r0, r2
   2e148:	subs	r4, r4, r3
   2e14c:	addge	r1, r1, r4, lsl #20
   2e150:	orrge	r1, r1, r5
   2e154:	popge	{r4, r5, pc}
   2e158:	mvn	r4, r4
   2e15c:	subs	r4, r4, #31
   2e160:	bge	2e19c <fb_value_set_visit@@Base+0x1fc>
   2e164:	adds	r4, r4, #12
   2e168:	bgt	2e184 <fb_value_set_visit@@Base+0x1e4>
   2e16c:	add	r4, r4, #20
   2e170:	rsb	r2, r4, #32
   2e174:	lsr	r0, r0, r4
   2e178:	orr	r0, r0, r1, lsl r2
   2e17c:	orr	r1, r5, r1, lsr r4
   2e180:	pop	{r4, r5, pc}
   2e184:	rsb	r4, r4, #12
   2e188:	rsb	r2, r4, #32
   2e18c:	lsr	r0, r0, r2
   2e190:	orr	r0, r0, r1, lsl r4
   2e194:	mov	r1, r5
   2e198:	pop	{r4, r5, pc}
   2e19c:	lsr	r0, r1, r4
   2e1a0:	mov	r1, r5
   2e1a4:	pop	{r4, r5, pc}
   2e1a8:	teq	r4, #0
   2e1ac:	eor	r3, r3, #1048576	; 0x100000
   2e1b0:	eoreq	r1, r1, #1048576	; 0x100000
   2e1b4:	addeq	r4, r4, #1
   2e1b8:	subne	r5, r5, #1
   2e1bc:	b	2e048 <fb_value_set_visit@@Base+0xa8>
   2e1c0:	mvns	ip, r4, asr #21
   2e1c4:	mvnsne	ip, r5, asr #21
   2e1c8:	beq	2e230 <fb_value_set_visit@@Base+0x290>
   2e1cc:	teq	r4, r5
   2e1d0:	teqeq	r0, r2
   2e1d4:	beq	2e1e8 <fb_value_set_visit@@Base+0x248>
   2e1d8:	orrs	ip, r4, r0
   2e1dc:	moveq	r1, r3
   2e1e0:	moveq	r0, r2
   2e1e4:	pop	{r4, r5, pc}
   2e1e8:	teq	r1, r3
   2e1ec:	movne	r1, #0
   2e1f0:	movne	r0, #0
   2e1f4:	popne	{r4, r5, pc}
   2e1f8:	lsrs	ip, r4, #21
   2e1fc:	bne	2e210 <fb_value_set_visit@@Base+0x270>
   2e200:	lsls	r0, r0, #1
   2e204:	adcs	r1, r1, r1
   2e208:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2e20c:	pop	{r4, r5, pc}
   2e210:	adds	r4, r4, #4194304	; 0x400000
   2e214:	addcc	r1, r1, #1048576	; 0x100000
   2e218:	popcc	{r4, r5, pc}
   2e21c:	and	r5, r1, #-2147483648	; 0x80000000
   2e220:	orr	r1, r5, #2130706432	; 0x7f000000
   2e224:	orr	r1, r1, #15728640	; 0xf00000
   2e228:	mov	r0, #0
   2e22c:	pop	{r4, r5, pc}
   2e230:	mvns	ip, r4, asr #21
   2e234:	movne	r1, r3
   2e238:	movne	r0, r2
   2e23c:	mvnseq	ip, r5, asr #21
   2e240:	movne	r3, r1
   2e244:	movne	r2, r0
   2e248:	orrs	r4, r0, r1, lsl #12
   2e24c:	orrseq	r5, r2, r3, lsl #12
   2e250:	teqeq	r1, r3
   2e254:	orrne	r1, r1, #524288	; 0x80000
   2e258:	pop	{r4, r5, pc}
   2e25c:	teq	r0, #0
   2e260:	moveq	r1, #0
   2e264:	bxeq	lr
   2e268:	push	{r4, r5, lr}
   2e26c:	mov	r4, #1024	; 0x400
   2e270:	add	r4, r4, #50	; 0x32
   2e274:	mov	r5, #0
   2e278:	mov	r1, #0
   2e27c:	b	2e0f8 <fb_value_set_visit@@Base+0x158>
   2e280:	teq	r0, #0
   2e284:	moveq	r1, #0
   2e288:	bxeq	lr
   2e28c:	push	{r4, r5, lr}
   2e290:	mov	r4, #1024	; 0x400
   2e294:	add	r4, r4, #50	; 0x32
   2e298:	ands	r5, r0, #-2147483648	; 0x80000000
   2e29c:	rsbmi	r0, r0, #0
   2e2a0:	mov	r1, #0
   2e2a4:	b	2e0f8 <fb_value_set_visit@@Base+0x158>
   2e2a8:	lsls	r2, r0, #1
   2e2ac:	asr	r1, r2, #3
   2e2b0:	rrx	r1, r1
   2e2b4:	lsl	r0, r2, #28
   2e2b8:	andsne	r3, r2, #-16777216	; 0xff000000
   2e2bc:	teqne	r3, #-16777216	; 0xff000000
   2e2c0:	eorne	r1, r1, #939524096	; 0x38000000
   2e2c4:	bxne	lr
   2e2c8:	bics	r2, r2, #-16777216	; 0xff000000
   2e2cc:	bxeq	lr
   2e2d0:	teq	r3, #-16777216	; 0xff000000
   2e2d4:	orreq	r1, r1, #524288	; 0x80000
   2e2d8:	bxeq	lr
   2e2dc:	push	{r4, r5, lr}
   2e2e0:	mov	r4, #896	; 0x380
   2e2e4:	and	r5, r1, #-2147483648	; 0x80000000
   2e2e8:	bic	r1, r1, #-2147483648	; 0x80000000
   2e2ec:	b	2e0f8 <fb_value_set_visit@@Base+0x158>
   2e2f0:	orrs	r2, r0, r1
   2e2f4:	bxeq	lr
   2e2f8:	push	{r4, r5, lr}
   2e2fc:	mov	r5, #0
   2e300:	b	2e320 <fb_value_set_visit@@Base+0x380>
   2e304:	orrs	r2, r0, r1
   2e308:	bxeq	lr
   2e30c:	push	{r4, r5, lr}
   2e310:	ands	r5, r1, #-2147483648	; 0x80000000
   2e314:	bpl	2e320 <fb_value_set_visit@@Base+0x380>
   2e318:	rsbs	r0, r0, #0
   2e31c:	rsc	r1, r1, #0
   2e320:	mov	r4, #1024	; 0x400
   2e324:	add	r4, r4, #50	; 0x32
   2e328:	lsrs	ip, r1, #22
   2e32c:	beq	2e09c <fb_value_set_visit@@Base+0xfc>
   2e330:	mov	r2, #3
   2e334:	lsrs	ip, ip, #3
   2e338:	addne	r2, r2, #3
   2e33c:	lsrs	ip, ip, #3
   2e340:	addne	r2, r2, #3
   2e344:	add	r2, r2, ip, lsr #3
   2e348:	rsb	r3, r2, #32
   2e34c:	lsl	ip, r0, r3
   2e350:	lsr	r0, r0, r2
   2e354:	orr	r0, r0, r1, lsl r3
   2e358:	lsr	r1, r1, r2
   2e35c:	add	r4, r4, r2
   2e360:	b	2e09c <fb_value_set_visit@@Base+0xfc>
   2e364:	eor	r0, r0, #-2147483648	; 0x80000000
   2e368:	b	2e370 <fb_value_set_visit@@Base+0x3d0>
   2e36c:	eor	r1, r1, #-2147483648	; 0x80000000
   2e370:	lsls	r2, r0, #1
   2e374:	lslsne	r3, r1, #1
   2e378:	teqne	r2, r3
   2e37c:	mvnsne	ip, r2, asr #24
   2e380:	mvnsne	ip, r3, asr #24
   2e384:	beq	2e47c <fb_value_set_visit@@Base+0x4dc>
   2e388:	lsr	r2, r2, #24
   2e38c:	rsbs	r3, r2, r3, lsr #24
   2e390:	addgt	r2, r2, r3
   2e394:	eorgt	r1, r0, r1
   2e398:	eorgt	r0, r1, r0
   2e39c:	eorgt	r1, r0, r1
   2e3a0:	rsblt	r3, r3, #0
   2e3a4:	cmp	r3, #25
   2e3a8:	bxhi	lr
   2e3ac:	tst	r0, #-2147483648	; 0x80000000
   2e3b0:	orr	r0, r0, #8388608	; 0x800000
   2e3b4:	bic	r0, r0, #-16777216	; 0xff000000
   2e3b8:	rsbne	r0, r0, #0
   2e3bc:	tst	r1, #-2147483648	; 0x80000000
   2e3c0:	orr	r1, r1, #8388608	; 0x800000
   2e3c4:	bic	r1, r1, #-16777216	; 0xff000000
   2e3c8:	rsbne	r1, r1, #0
   2e3cc:	teq	r2, r3
   2e3d0:	beq	2e464 <fb_value_set_visit@@Base+0x4c4>
   2e3d4:	sub	r2, r2, #1
   2e3d8:	adds	r0, r0, r1, asr r3
   2e3dc:	rsb	r3, r3, #32
   2e3e0:	lsl	r1, r1, r3
   2e3e4:	and	r3, r0, #-2147483648	; 0x80000000
   2e3e8:	bpl	2e3f4 <fb_value_set_visit@@Base+0x454>
   2e3ec:	rsbs	r1, r1, #0
   2e3f0:	rsc	r0, r0, #0
   2e3f4:	cmp	r0, #8388608	; 0x800000
   2e3f8:	bcc	2e42c <fb_value_set_visit@@Base+0x48c>
   2e3fc:	cmp	r0, #16777216	; 0x1000000
   2e400:	bcc	2e418 <fb_value_set_visit@@Base+0x478>
   2e404:	lsrs	r0, r0, #1
   2e408:	rrx	r1, r1
   2e40c:	add	r2, r2, #1
   2e410:	cmp	r2, #254	; 0xfe
   2e414:	bcs	2e4d0 <fb_value_set_visit@@Base+0x530>
   2e418:	cmp	r1, #-2147483648	; 0x80000000
   2e41c:	adc	r0, r0, r2, lsl #23
   2e420:	biceq	r0, r0, #1
   2e424:	orr	r0, r0, r3
   2e428:	bx	lr
   2e42c:	lsls	r1, r1, #1
   2e430:	adc	r0, r0, r0
   2e434:	tst	r0, #8388608	; 0x800000
   2e438:	sub	r2, r2, #1
   2e43c:	bne	2e418 <fb_value_set_visit@@Base+0x478>
   2e440:	clz	ip, r0
   2e444:	sub	ip, ip, #8
   2e448:	subs	r2, r2, ip
   2e44c:	lsl	r0, r0, ip
   2e450:	addge	r0, r0, r2, lsl #23
   2e454:	rsblt	r2, r2, #0
   2e458:	orrge	r0, r0, r3
   2e45c:	orrlt	r0, r3, r0, lsr r2
   2e460:	bx	lr
   2e464:	teq	r2, #0
   2e468:	eor	r1, r1, #8388608	; 0x800000
   2e46c:	eoreq	r0, r0, #8388608	; 0x800000
   2e470:	addeq	r2, r2, #1
   2e474:	subne	r3, r3, #1
   2e478:	b	2e3d4 <fb_value_set_visit@@Base+0x434>
   2e47c:	lsl	r3, r1, #1
   2e480:	mvns	ip, r2, asr #24
   2e484:	mvnsne	ip, r3, asr #24
   2e488:	beq	2e4dc <fb_value_set_visit@@Base+0x53c>
   2e48c:	teq	r2, r3
   2e490:	beq	2e4a0 <fb_value_set_visit@@Base+0x500>
   2e494:	teq	r2, #0
   2e498:	moveq	r0, r1
   2e49c:	bx	lr
   2e4a0:	teq	r0, r1
   2e4a4:	movne	r0, #0
   2e4a8:	bxne	lr
   2e4ac:	tst	r2, #-16777216	; 0xff000000
   2e4b0:	bne	2e4c0 <fb_value_set_visit@@Base+0x520>
   2e4b4:	lsls	r0, r0, #1
   2e4b8:	orrcs	r0, r0, #-2147483648	; 0x80000000
   2e4bc:	bx	lr
   2e4c0:	adds	r2, r2, #33554432	; 0x2000000
   2e4c4:	addcc	r0, r0, #8388608	; 0x800000
   2e4c8:	bxcc	lr
   2e4cc:	and	r3, r0, #-2147483648	; 0x80000000
   2e4d0:	orr	r0, r3, #2130706432	; 0x7f000000
   2e4d4:	orr	r0, r0, #8388608	; 0x800000
   2e4d8:	bx	lr
   2e4dc:	mvns	r2, r2, asr #24
   2e4e0:	movne	r0, r1
   2e4e4:	mvnseq	r3, r3, asr #24
   2e4e8:	movne	r1, r0
   2e4ec:	lsls	r2, r0, #9
   2e4f0:	lslseq	r3, r1, #9
   2e4f4:	teqeq	r0, r1
   2e4f8:	orrne	r0, r0, #4194304	; 0x400000
   2e4fc:	bx	lr
   2e500:	mov	r3, #0
   2e504:	b	2e510 <fb_value_set_visit@@Base+0x570>
   2e508:	ands	r3, r0, #-2147483648	; 0x80000000
   2e50c:	rsbmi	r0, r0, #0
   2e510:	movs	ip, r0
   2e514:	bxeq	lr
   2e518:	orr	r3, r3, #1258291200	; 0x4b000000
   2e51c:	mov	r1, r0
   2e520:	mov	r0, #0
   2e524:	b	2e568 <fb_value_set_visit@@Base+0x5c8>
   2e528:	orrs	r2, r0, r1
   2e52c:	bxeq	lr
   2e530:	mov	r3, #0
   2e534:	b	2e550 <fb_value_set_visit@@Base+0x5b0>
   2e538:	orrs	r2, r0, r1
   2e53c:	bxeq	lr
   2e540:	ands	r3, r1, #-2147483648	; 0x80000000
   2e544:	bpl	2e550 <fb_value_set_visit@@Base+0x5b0>
   2e548:	rsbs	r0, r0, #0
   2e54c:	rsc	r1, r1, #0
   2e550:	movs	ip, r1
   2e554:	moveq	ip, r0
   2e558:	moveq	r1, r0
   2e55c:	moveq	r0, #0
   2e560:	orr	r3, r3, #1526726656	; 0x5b000000
   2e564:	subeq	r3, r3, #268435456	; 0x10000000
   2e568:	sub	r3, r3, #8388608	; 0x800000
   2e56c:	clz	r2, ip
   2e570:	subs	r2, r2, #8
   2e574:	sub	r3, r3, r2, lsl #23
   2e578:	blt	2e598 <fb_value_set_visit@@Base+0x5f8>
   2e57c:	add	r3, r3, r1, lsl r2
   2e580:	lsl	ip, r0, r2
   2e584:	rsb	r2, r2, #32
   2e588:	cmp	ip, #-2147483648	; 0x80000000
   2e58c:	adc	r0, r3, r0, lsr r2
   2e590:	biceq	r0, r0, #1
   2e594:	bx	lr
   2e598:	add	r2, r2, #32
   2e59c:	lsl	ip, r1, r2
   2e5a0:	rsb	r2, r2, #32
   2e5a4:	orrs	r0, r0, ip, lsl #1
   2e5a8:	adc	r0, r3, r1, lsr r2
   2e5ac:	biceq	r0, r0, ip, lsr #31
   2e5b0:	bx	lr
   2e5b4:	cmp	r3, #0
   2e5b8:	cmpeq	r2, #0
   2e5bc:	bne	2e5d4 <fb_value_set_visit@@Base+0x634>
   2e5c0:	cmp	r1, #0
   2e5c4:	cmpeq	r0, #0
   2e5c8:	mvnne	r1, #0
   2e5cc:	mvnne	r0, #0
   2e5d0:	b	2e5f0 <fb_value_set_visit@@Base+0x650>
   2e5d4:	sub	sp, sp, #8
   2e5d8:	push	{sp, lr}
   2e5dc:	bl	2e6d8 <fb_value_set_visit@@Base+0x738>
   2e5e0:	ldr	lr, [sp, #4]
   2e5e4:	add	sp, sp, #8
   2e5e8:	pop	{r2, r3}
   2e5ec:	bx	lr
   2e5f0:	push	{r1, lr}
   2e5f4:	mov	r0, #8
   2e5f8:	bl	13ecc <raise@plt>
   2e5fc:	pop	{r1, pc}
   2e600:	vmov	s15, r0
   2e604:	vcmpe.f32	s15, #0.0
   2e608:	vmrs	APSR_nzcv, fpscr
   2e60c:	bmi	2e614 <fb_value_set_visit@@Base+0x674>
   2e610:	b	2e658 <fb_value_set_visit@@Base+0x6b8>
   2e614:	push	{r4, lr}
   2e618:	eor	r0, r0, #-2147483648	; 0x80000000
   2e61c:	bl	2e658 <fb_value_set_visit@@Base+0x6b8>
   2e620:	rsbs	r0, r0, #0
   2e624:	rsc	r1, r1, #0
   2e628:	pop	{r4, pc}
   2e62c:	vmov	d7, r0, r1
   2e630:	vcmpe.f64	d7, #0.0
   2e634:	vmrs	APSR_nzcv, fpscr
   2e638:	bmi	2e640 <fb_value_set_visit@@Base+0x6a0>
   2e63c:	b	2e698 <fb_value_set_visit@@Base+0x6f8>
   2e640:	push	{r4, lr}
   2e644:	eor	r1, r1, #-2147483648	; 0x80000000
   2e648:	bl	2e698 <fb_value_set_visit@@Base+0x6f8>
   2e64c:	rsbs	r0, r0, #0
   2e650:	rsc	r1, r1, #0
   2e654:	pop	{r4, pc}
   2e658:	vmov	s15, r0
   2e65c:	vldr	d5, [pc, #36]	; 2e688 <fb_value_set_visit@@Base+0x6e8>
   2e660:	vcvt.f64.f32	d6, s15
   2e664:	vldr	d7, [pc, #36]	; 2e690 <fb_value_set_visit@@Base+0x6f0>
   2e668:	vmul.f64	d7, d6, d7
   2e66c:	vcvt.u32.f64	s14, d7
   2e670:	vcvt.f64.u32	d4, s14
   2e674:	vmov	r1, s14
   2e678:	vmls.f64	d6, d4, d5
   2e67c:	vcvt.u32.f64	s15, d6
   2e680:	vmov	r0, s15
   2e684:	bx	lr
   2e688:	andeq	r0, r0, r0
   2e68c:	mvnsmi	r0, r0
   2e690:	andeq	r0, r0, r0
   2e694:	ldclcc	0, cr0, [r0]
   2e698:	vmov	d6, r0, r1
   2e69c:	vldr	d7, [pc, #36]	; 2e6c8 <fb_value_set_visit@@Base+0x728>
   2e6a0:	vldr	d5, [pc, #40]	; 2e6d0 <fb_value_set_visit@@Base+0x730>
   2e6a4:	vmul.f64	d7, d6, d7
   2e6a8:	vcvt.u32.f64	s14, d7
   2e6ac:	vcvt.f64.u32	d4, s14
   2e6b0:	vmov	r1, s14
   2e6b4:	vmls.f64	d6, d4, d5
   2e6b8:	vcvt.u32.f64	s15, d6
   2e6bc:	vmov	r0, s15
   2e6c0:	bx	lr
   2e6c4:	nop			; (mov r0, r0)
   2e6c8:	andeq	r0, r0, r0
   2e6cc:	ldclcc	0, cr0, [r0]
   2e6d0:	andeq	r0, r0, r0
   2e6d4:	mvnsmi	r0, r0
   2e6d8:	cmp	r1, r3
   2e6dc:	cmpeq	r0, r2
   2e6e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e6e4:	mov	r4, r0
   2e6e8:	movcc	r0, #0
   2e6ec:	mov	r5, r1
   2e6f0:	ldr	lr, [sp, #36]	; 0x24
   2e6f4:	movcc	r1, r0
   2e6f8:	bcc	2e7f4 <fb_value_set_visit@@Base+0x854>
   2e6fc:	cmp	r3, #0
   2e700:	clzeq	ip, r2
   2e704:	clzne	ip, r3
   2e708:	addeq	ip, ip, #32
   2e70c:	cmp	r5, #0
   2e710:	clzeq	r1, r4
   2e714:	addeq	r1, r1, #32
   2e718:	clzne	r1, r5
   2e71c:	sub	ip, ip, r1
   2e720:	sub	sl, ip, #32
   2e724:	lsl	r9, r3, ip
   2e728:	rsb	fp, ip, #32
   2e72c:	orr	r9, r9, r2, lsl sl
   2e730:	orr	r9, r9, r2, lsr fp
   2e734:	lsl	r8, r2, ip
   2e738:	cmp	r5, r9
   2e73c:	cmpeq	r4, r8
   2e740:	movcc	r0, #0
   2e744:	movcc	r1, r0
   2e748:	bcc	2e764 <fb_value_set_visit@@Base+0x7c4>
   2e74c:	mov	r0, #1
   2e750:	subs	r4, r4, r8
   2e754:	lsl	r1, r0, sl
   2e758:	orr	r1, r1, r0, lsr fp
   2e75c:	lsl	r0, r0, ip
   2e760:	sbc	r5, r5, r9
   2e764:	cmp	ip, #0
   2e768:	beq	2e7f4 <fb_value_set_visit@@Base+0x854>
   2e76c:	lsr	r6, r8, #1
   2e770:	orr	r6, r6, r9, lsl #31
   2e774:	lsr	r7, r9, #1
   2e778:	mov	r2, ip
   2e77c:	b	2e7a0 <fb_value_set_visit@@Base+0x800>
   2e780:	subs	r3, r4, r6
   2e784:	sbc	r8, r5, r7
   2e788:	adds	r3, r3, r3
   2e78c:	adc	r8, r8, r8
   2e790:	adds	r4, r3, #1
   2e794:	adc	r5, r8, #0
   2e798:	subs	r2, r2, #1
   2e79c:	beq	2e7bc <fb_value_set_visit@@Base+0x81c>
   2e7a0:	cmp	r5, r7
   2e7a4:	cmpeq	r4, r6
   2e7a8:	bcs	2e780 <fb_value_set_visit@@Base+0x7e0>
   2e7ac:	adds	r4, r4, r4
   2e7b0:	adc	r5, r5, r5
   2e7b4:	subs	r2, r2, #1
   2e7b8:	bne	2e7a0 <fb_value_set_visit@@Base+0x800>
   2e7bc:	lsr	r3, r4, ip
   2e7c0:	orr	r3, r3, r5, lsl fp
   2e7c4:	lsr	r2, r5, ip
   2e7c8:	orr	r3, r3, r5, lsr sl
   2e7cc:	adds	r0, r0, r4
   2e7d0:	mov	r4, r3
   2e7d4:	lsl	r3, r2, ip
   2e7d8:	orr	r3, r3, r4, lsl sl
   2e7dc:	lsl	ip, r4, ip
   2e7e0:	orr	r3, r3, r4, lsr fp
   2e7e4:	adc	r1, r1, r5
   2e7e8:	subs	r0, r0, ip
   2e7ec:	mov	r5, r2
   2e7f0:	sbc	r1, r1, r3
   2e7f4:	cmp	lr, #0
   2e7f8:	strdne	r4, [lr]
   2e7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002e800 <__libc_csu_init@@Base>:
   2e800:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e804:	mov	r7, r0
   2e808:	ldr	r6, [pc, #72]	; 2e858 <__libc_csu_init@@Base+0x58>
   2e80c:	ldr	r5, [pc, #72]	; 2e85c <__libc_csu_init@@Base+0x5c>
   2e810:	add	r6, pc, r6
   2e814:	add	r5, pc, r5
   2e818:	sub	r6, r6, r5
   2e81c:	mov	r8, r1
   2e820:	mov	r9, r2
   2e824:	bl	13ea0 <calloc@plt-0x20>
   2e828:	asrs	r6, r6, #2
   2e82c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e830:	mov	r4, #0
   2e834:	add	r4, r4, #1
   2e838:	ldr	r3, [r5], #4
   2e83c:	mov	r2, r9
   2e840:	mov	r1, r8
   2e844:	mov	r0, r7
   2e848:	blx	r3
   2e84c:	cmp	r6, r4
   2e850:	bne	2e834 <__libc_csu_init@@Base+0x34>
   2e854:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e858:	strdeq	fp, [r2], -ip
   2e85c:	strdeq	fp, [r2], -r4

0002e860 <__libc_csu_fini@@Base>:
   2e860:	bx	lr

Disassembly of section .fini:

0002e864 <.fini>:
   2e864:	push	{r3, lr}
   2e868:	pop	{r3, pc}
