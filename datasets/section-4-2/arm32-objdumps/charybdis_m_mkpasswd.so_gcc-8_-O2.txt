
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

00000548 <_init>:
 548:	push	{r3, lr}
 54c:	bl	604 <call_weak_fn>
 550:	pop	{r3, pc}

Disassembly of section .plt:

00000554 <.plt>:
 554:	push	{lr}		; (str lr, [sp, #-4]!)
 558:	ldr	lr, [pc, #4]	; 564 <.plt+0x10>
 55c:	add	lr, pc, lr
 560:	ldr	pc, [lr, #8]!
 564:	.word	0x00010a9c

00000568 <rb_current_time@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2716]!	; 0xa9c

00000574 <__cxa_finalize@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2708]!	; 0xa94

00000580 <sendto_one@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2700]!	; 0xa8c

0000058c <read@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2692]!	; 0xa84

00000598 <time@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2684]!	; 0xa7c

000005a4 <rb_crypt@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2676]!	; 0xa74

000005b0 <__gmon_start__@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2668]!	; 0xa6c

000005bc <open@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2660]!	; 0xa64

000005c8 <srand@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2652]!	; 0xa5c

000005d4 <rand@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2644]!	; 0xa54

000005e0 <sendto_one_notice@plt>:
 5e0:	add	ip, pc, #0, 12
 5e4:	add	ip, ip, #16, 20	; 0x10000
 5e8:	ldr	pc, [ip, #2636]!	; 0xa4c

000005ec <close@plt>:
 5ec:	add	ip, pc, #0, 12
 5f0:	add	ip, ip, #16, 20	; 0x10000
 5f4:	ldr	pc, [ip, #2628]!	; 0xa44

000005f8 <irccmp@plt>:
 5f8:	add	ip, pc, #0, 12
 5fc:	add	ip, ip, #16, 20	; 0x10000
 600:	ldr	pc, [ip, #2620]!	; 0xa3c

Disassembly of section .text:

00000604 <call_weak_fn>:
 604:	ldr	r3, [pc, #20]	; 620 <call_weak_fn+0x1c>
 608:	ldr	r2, [pc, #20]	; 624 <call_weak_fn+0x20>
 60c:	add	r3, pc, r3
 610:	ldr	r2, [r3, r2]
 614:	cmp	r2, #0
 618:	bxeq	lr
 61c:	b	5b0 <__gmon_start__@plt>
 620:	.word	0x000109ec
 624:	.word	0x00000048

00000628 <deregister_tm_clones>:
 628:	ldr	r0, [pc, #44]	; 65c <deregister_tm_clones+0x34>
 62c:	ldr	r3, [pc, #44]	; 660 <deregister_tm_clones+0x38>
 630:	add	r0, pc, r0
 634:	add	r3, pc, r3
 638:	cmp	r3, r0
 63c:	ldr	r3, [pc, #32]	; 664 <deregister_tm_clones+0x3c>
 640:	add	r3, pc, r3
 644:	bxeq	lr
 648:	ldr	r2, [pc, #24]	; 668 <deregister_tm_clones+0x40>
 64c:	ldr	r3, [r3, r2]
 650:	cmp	r3, #0
 654:	bxeq	lr
 658:	bx	r3
 65c:	.word	0x00010a98
 660:	.word	0x00010a94
 664:	.word	0x000109b8
 668:	.word	0x00000044

0000066c <register_tm_clones>:
 66c:	ldr	r0, [pc, #56]	; 6ac <register_tm_clones+0x40>
 670:	ldr	r3, [pc, #56]	; 6b0 <register_tm_clones+0x44>
 674:	add	r0, pc, r0
 678:	add	r3, pc, r3
 67c:	sub	r1, r3, r0
 680:	ldr	r3, [pc, #44]	; 6b4 <register_tm_clones+0x48>
 684:	asr	r1, r1, #2
 688:	add	r3, pc, r3
 68c:	add	r1, r1, r1, lsr #31
 690:	asrs	r1, r1, #1
 694:	bxeq	lr
 698:	ldr	r2, [pc, #24]	; 6b8 <register_tm_clones+0x4c>
 69c:	ldr	r3, [r3, r2]
 6a0:	cmp	r3, #0
 6a4:	bxeq	lr
 6a8:	bx	r3
 6ac:	.word	0x00010a54
 6b0:	.word	0x00010a50
 6b4:	.word	0x00010970
 6b8:	.word	0x0000004c

000006bc <__do_global_dtors_aux>:
 6bc:	ldr	r3, [pc, #76]	; 710 <__do_global_dtors_aux+0x54>
 6c0:	ldr	r2, [pc, #76]	; 714 <__do_global_dtors_aux+0x58>
 6c4:	add	r3, pc, r3
 6c8:	add	r2, pc, r2
 6cc:	ldrb	r3, [r3]
 6d0:	cmp	r3, #0
 6d4:	bxne	lr
 6d8:	ldr	r3, [pc, #56]	; 718 <__do_global_dtors_aux+0x5c>
 6dc:	push	{r4, lr}
 6e0:	ldr	r3, [r2, r3]
 6e4:	cmp	r3, #0
 6e8:	beq	6f8 <__do_global_dtors_aux+0x3c>
 6ec:	ldr	r3, [pc, #40]	; 71c <__do_global_dtors_aux+0x60>
 6f0:	ldr	r0, [pc, r3]
 6f4:	bl	574 <__cxa_finalize@plt>
 6f8:	bl	628 <deregister_tm_clones>
 6fc:	ldr	r3, [pc, #28]	; 720 <__do_global_dtors_aux+0x64>
 700:	mov	r2, #1
 704:	add	r3, pc, r3
 708:	strb	r2, [r3]
 70c:	pop	{r4, pc}
 710:	.word	0x00010a04
 714:	.word	0x00010930
 718:	.word	0x00000040
 71c:	.word	0x00010960
 720:	.word	0x000109c4

00000724 <frame_dummy>:
 724:	b	66c <register_tm_clones>

00000728 <generate_poor_salt>:
 728:	strd	r4, [sp, #-24]!	; 0xffffffe8
 72c:	sub	r4, r0, #1
 730:	strd	r6, [sp, #8]
 734:	mov	r7, r0
 738:	mov	r0, #0
 73c:	ldr	r6, [pc, #80]	; 794 <generate_poor_salt+0x6c>
 740:	add	r5, r4, r1
 744:	str	r8, [sp, #16]
 748:	str	lr, [sp, #20]
 74c:	add	r6, pc, r6
 750:	bl	598 <time@plt>
 754:	bl	5c8 <srand@plt>
 758:	bl	5d4 <rand@plt>
 75c:	rsbs	r3, r0, #0
 760:	and	r0, r0, #63	; 0x3f
 764:	and	r3, r3, #63	; 0x3f
 768:	rsbpl	r0, r3, #0
 76c:	ldrb	r3, [r6, r0]
 770:	strb	r3, [r4, #1]!
 774:	cmp	r4, r5
 778:	bne	758 <generate_poor_salt+0x30>
 77c:	mov	r0, r7
 780:	ldrd	r4, [sp]
 784:	ldrd	r6, [sp, #8]
 788:	ldr	r8, [sp, #16]
 78c:	add	sp, sp, #20
 790:	pop	{pc}		; (ldr pc, [sp], #4)
 794:	.word	0x0000059c

00000798 <generate_random_salt>:
 798:	strd	r4, [sp, #-16]!
 79c:	mov	r4, r0
 7a0:	ldr	r0, [pc, #156]	; 844 <generate_random_salt+0xac>
 7a4:	str	r6, [sp, #8]
 7a8:	mov	r6, r1
 7ac:	mov	r1, #0
 7b0:	str	lr, [sp, #12]
 7b4:	add	r0, pc, r0
 7b8:	bl	5bc <open@plt>
 7bc:	subs	r5, r0, #0
 7c0:	blt	828 <generate_random_salt+0x90>
 7c4:	mov	r2, r6
 7c8:	mov	r1, r4
 7cc:	bl	58c <read@plt>
 7d0:	cmp	r0, r6
 7d4:	bne	820 <generate_random_salt+0x88>
 7d8:	ldr	r1, [pc, #104]	; 848 <generate_random_salt+0xb0>
 7dc:	sub	r0, r0, #1
 7e0:	sub	r3, r4, #1
 7e4:	add	r0, r4, r0
 7e8:	add	r1, pc, r1
 7ec:	ldrb	r2, [r3, #1]!
 7f0:	and	r2, r2, #63	; 0x3f
 7f4:	cmp	r0, r3
 7f8:	ldrb	r2, [r1, r2]
 7fc:	strb	r2, [r3]
 800:	bne	7ec <generate_random_salt+0x54>
 804:	mov	r0, r5
 808:	bl	5ec <close@plt>
 80c:	mov	r0, r4
 810:	ldrd	r4, [sp]
 814:	ldr	r6, [sp, #8]
 818:	add	sp, sp, #12
 81c:	pop	{pc}		; (ldr pc, [sp], #4)
 820:	mov	r0, r5
 824:	bl	5ec <close@plt>
 828:	mov	r1, r6
 82c:	mov	r0, r4
 830:	ldrd	r4, [sp]
 834:	ldr	r6, [sp, #8]
 838:	ldr	lr, [sp, #12]
 83c:	add	sp, sp, #16
 840:	b	728 <generate_poor_salt>
 844:	.word	0x000005a0
 848:	.word	0x00000500

0000084c <m_mkpasswd>:
 84c:	strd	r4, [sp, #-32]!	; 0xffffffe0
 850:	strd	r6, [sp, #8]
 854:	strd	r8, [sp, #16]
 858:	mov	r8, r2
 85c:	str	sl, [sp, #24]
 860:	str	lr, [sp, #28]
 864:	sub	sp, sp, #16
 868:	ldr	r1, [pc, #532]	; a84 <m_mkpasswd+0x238>
 86c:	add	r0, sp, #8
 870:	ldr	r7, [sp, #48]	; 0x30
 874:	ldr	r6, [pc, #524]	; a88 <m_mkpasswd+0x23c>
 878:	add	r1, pc, r1
 87c:	ldrh	ip, [r1, #4]
 880:	ldr	r2, [r7, #4]
 884:	add	r6, pc, r6
 888:	ldr	lr, [r1]
 88c:	strh	ip, [r0, #4]
 890:	ldrb	r1, [r1, #6]
 894:	cmp	r2, #0
 898:	str	lr, [sp, #8]
 89c:	strb	r1, [r0, #6]
 8a0:	beq	9c0 <m_mkpasswd+0x174>
 8a4:	ldrb	r2, [r2]
 8a8:	cmp	r2, #0
 8ac:	beq	9c0 <m_mkpasswd+0x174>
 8b0:	cmp	r3, #2
 8b4:	ldr	r3, [pc, #464]	; a8c <m_mkpasswd+0x240>
 8b8:	movle	r5, r0
 8bc:	ldr	r4, [pc, #460]	; a90 <m_mkpasswd+0x244>
 8c0:	ldrgt	r5, [r7, #8]
 8c4:	ldr	r2, [r6, r3]
 8c8:	add	r4, pc, r4
 8cc:	ldr	r3, [r4, #72]	; 0x48
 8d0:	ldr	r9, [r2, #184]	; 0xb8
 8d4:	add	r9, r9, r3
 8d8:	bl	568 <rb_current_time@plt>
 8dc:	cmp	r9, r0
 8e0:	bgt	978 <m_mkpasswd+0x12c>
 8e4:	bl	568 <rb_current_time@plt>
 8e8:	ldr	r1, [pc, #420]	; a94 <m_mkpasswd+0x248>
 8ec:	str	r0, [r4, #72]	; 0x48
 8f0:	mov	r0, r5
 8f4:	add	r1, pc, r1
 8f8:	bl	5f8 <irccmp@plt>
 8fc:	subs	r6, r0, #0
 900:	beq	9f0 <m_mkpasswd+0x1a4>
 904:	ldr	r1, [pc, #396]	; a98 <m_mkpasswd+0x24c>
 908:	mov	r0, r5
 90c:	add	r1, pc, r1
 910:	bl	5f8 <irccmp@plt>
 914:	subs	r9, r0, #0
 918:	bne	a28 <m_mkpasswd+0x1dc>
 91c:	movw	r3, #13860	; 0x3624
 920:	mov	sl, #36	; 0x24
 924:	mov	r1, #16
 928:	add	r0, r4, #27
 92c:	add	r6, r4, #24
 930:	strh	r3, [r4, #24]
 934:	strb	sl, [r4, #26]
 938:	bl	798 <generate_random_salt>
 93c:	mov	r1, r6
 940:	strb	sl, [r4, #43]	; 0x2b
 944:	strb	r9, [r4, #44]	; 0x2c
 948:	ldr	r0, [r7, #4]
 94c:	bl	5a4 <rb_crypt@plt>
 950:	cmp	r0, #0
 954:	ldr	r3, [r7, #4]
 958:	beq	a1c <m_mkpasswd+0x1d0>
 95c:	ldr	r1, [pc, #312]	; a9c <m_mkpasswd+0x250>
 960:	mov	r2, r5
 964:	str	r0, [sp]
 968:	mov	r0, r8
 96c:	add	r1, pc, r1
 970:	bl	5e0 <sendto_one_notice@plt>
 974:	b	9a4 <m_mkpasswd+0x158>
 978:	ldr	r2, [pc, #288]	; aa0 <m_mkpasswd+0x254>
 97c:	add	r3, r8, #88	; 0x58
 980:	mov	r0, r8
 984:	ldr	ip, [pc, #280]	; aa4 <m_mkpasswd+0x258>
 988:	ldr	r1, [pc, #280]	; aa8 <m_mkpasswd+0x25c>
 98c:	ldr	r2, [r6, r2]
 990:	add	ip, pc, ip
 994:	add	r1, pc, r1
 998:	str	ip, [sp]
 99c:	add	r2, r2, #88	; 0x58
 9a0:	bl	580 <sendto_one@plt>
 9a4:	add	sp, sp, #16
 9a8:	ldrd	r4, [sp]
 9ac:	ldrd	r6, [sp, #8]
 9b0:	ldrd	r8, [sp, #16]
 9b4:	ldr	sl, [sp, #24]
 9b8:	add	sp, sp, #28
 9bc:	pop	{pc}		; (ldr pc, [sp], #4)
 9c0:	ldr	r2, [pc, #216]	; aa0 <m_mkpasswd+0x254>
 9c4:	add	r3, r8, #88	; 0x58
 9c8:	mov	r0, r8
 9cc:	ldr	ip, [pc, #216]	; aac <m_mkpasswd+0x260>
 9d0:	ldr	r1, [pc, #216]	; ab0 <m_mkpasswd+0x264>
 9d4:	ldr	r2, [r6, r2]
 9d8:	add	ip, pc, ip
 9dc:	add	r1, pc, r1
 9e0:	str	ip, [sp]
 9e4:	add	r2, r2, #88	; 0x58
 9e8:	bl	580 <sendto_one@plt>
 9ec:	b	9a4 <m_mkpasswd+0x158>
 9f0:	movw	r3, #13604	; 0x3524
 9f4:	mov	r9, #36	; 0x24
 9f8:	mov	r1, #16
 9fc:	add	r0, r4, #3
 a00:	strh	r3, [r4]
 a04:	strb	r9, [r4, #2]
 a08:	bl	798 <generate_random_salt>
 a0c:	mov	r1, r4
 a10:	strb	r9, [r4, #19]
 a14:	strb	r6, [r4, #20]
 a18:	b	948 <m_mkpasswd+0xfc>
 a1c:	ldr	r0, [pc, #144]	; ab4 <m_mkpasswd+0x268>
 a20:	add	r0, pc, r0
 a24:	b	95c <m_mkpasswd+0x110>
 a28:	ldr	r1, [pc, #136]	; ab8 <m_mkpasswd+0x26c>
 a2c:	mov	r0, r5
 a30:	add	r1, pc, r1
 a34:	bl	5f8 <irccmp@plt>
 a38:	subs	sl, r0, #0
 a3c:	bne	a70 <m_mkpasswd+0x224>
 a40:	movw	r3, #12580	; 0x3124
 a44:	mov	r9, #36	; 0x24
 a48:	mov	r1, #8
 a4c:	add	r0, r4, #51	; 0x33
 a50:	add	r6, r4, #48	; 0x30
 a54:	strh	r3, [r4, #48]	; 0x30
 a58:	strb	r9, [r4, #50]	; 0x32
 a5c:	bl	798 <generate_random_salt>
 a60:	mov	r1, r6
 a64:	strb	r9, [r4, #59]	; 0x3b
 a68:	strb	sl, [r4, #60]	; 0x3c
 a6c:	b	948 <m_mkpasswd+0xfc>
 a70:	ldr	r1, [pc, #68]	; abc <m_mkpasswd+0x270>
 a74:	mov	r0, r8
 a78:	add	r1, pc, r1
 a7c:	bl	5e0 <sendto_one_notice@plt>
 a80:	b	9a4 <m_mkpasswd+0x158>
 a84:	.word	0x00000598
 a88:	.word	0x00010774
 a8c:	.word	0x00000054
 a90:	.word	0x00010804
 a94:	.word	0x00000514
 a98:	.word	0x00000504
 a9c:	.word	0x000004ec
 aa0:	.word	0x00000050
 aa4:	.word	0x00000400
 aa8:	.word	0x00000408
 aac:	.word	0x000003b8
 ab0:	.word	0x0000038c
 ab4:	.word	0x00000344
 ab8:	.word	0x000003e8
 abc:	.word	0x000003a4

00000ac0 <mo_mkpasswd>:
 ac0:	strd	r4, [sp, #-32]!	; 0xffffffe0
 ac4:	strd	r6, [sp, #8]
 ac8:	mov	r7, r2
 acc:	strd	r8, [sp, #16]
 ad0:	str	sl, [sp, #24]
 ad4:	str	lr, [sp, #28]
 ad8:	sub	sp, sp, #16
 adc:	ldr	r1, [pc, #460]	; cb0 <mo_mkpasswd+0x1f0>
 ae0:	add	r0, sp, #8
 ae4:	ldr	r5, [sp, #48]	; 0x30
 ae8:	ldr	ip, [pc, #452]	; cb4 <mo_mkpasswd+0x1f4>
 aec:	add	r1, pc, r1
 af0:	ldrh	lr, [r1, #4]
 af4:	ldr	r2, [r5, #4]
 af8:	add	ip, pc, ip
 afc:	ldr	r4, [r1]
 b00:	strh	lr, [r0, #4]
 b04:	ldrb	r1, [r1, #6]
 b08:	cmp	r2, #0
 b0c:	str	r4, [sp, #8]
 b10:	strb	r1, [r0, #6]
 b14:	beq	c28 <mo_mkpasswd+0x168>
 b18:	ldrb	r2, [r2]
 b1c:	cmp	r2, #0
 b20:	beq	c28 <mo_mkpasswd+0x168>
 b24:	cmp	r3, #2
 b28:	ldr	r1, [pc, #392]	; cb8 <mo_mkpasswd+0x1f8>
 b2c:	movle	r4, r0
 b30:	ldrgt	r4, [r5, #8]
 b34:	add	r1, pc, r1
 b38:	mov	r0, r4
 b3c:	bl	5f8 <irccmp@plt>
 b40:	subs	r8, r0, #0
 b44:	bne	bc0 <mo_mkpasswd+0x100>
 b48:	ldr	r6, [pc, #364]	; cbc <mo_mkpasswd+0x1fc>
 b4c:	movw	r3, #13604	; 0x3524
 b50:	mov	r9, #36	; 0x24
 b54:	mov	r1, #16
 b58:	add	r6, pc, r6
 b5c:	add	r0, r6, #3
 b60:	strh	r3, [r6]
 b64:	strb	r9, [r6, #2]
 b68:	bl	798 <generate_random_salt>
 b6c:	mov	r1, r6
 b70:	strb	r9, [r6, #19]
 b74:	strb	r8, [r6, #20]
 b78:	ldr	r0, [r5, #4]
 b7c:	bl	5a4 <rb_crypt@plt>
 b80:	cmp	r0, #0
 b84:	ldr	r3, [r5, #4]
 b88:	beq	c90 <mo_mkpasswd+0x1d0>
 b8c:	ldr	r1, [pc, #300]	; cc0 <mo_mkpasswd+0x200>
 b90:	mov	r2, r4
 b94:	str	r0, [sp]
 b98:	mov	r0, r7
 b9c:	add	r1, pc, r1
 ba0:	bl	5e0 <sendto_one_notice@plt>
 ba4:	add	sp, sp, #16
 ba8:	ldrd	r4, [sp]
 bac:	ldrd	r6, [sp, #8]
 bb0:	ldrd	r8, [sp, #16]
 bb4:	ldr	sl, [sp, #24]
 bb8:	add	sp, sp, #28
 bbc:	pop	{pc}		; (ldr pc, [sp], #4)
 bc0:	ldr	r1, [pc, #252]	; cc4 <mo_mkpasswd+0x204>
 bc4:	mov	r0, r4
 bc8:	add	r1, pc, r1
 bcc:	bl	5f8 <irccmp@plt>
 bd0:	subs	r9, r0, #0
 bd4:	beq	c58 <mo_mkpasswd+0x198>
 bd8:	ldr	r1, [pc, #232]	; cc8 <mo_mkpasswd+0x208>
 bdc:	mov	r0, r4
 be0:	add	r1, pc, r1
 be4:	bl	5f8 <irccmp@plt>
 be8:	subs	sl, r0, #0
 bec:	bne	c9c <mo_mkpasswd+0x1dc>
 bf0:	ldr	r8, [pc, #212]	; ccc <mo_mkpasswd+0x20c>
 bf4:	movw	r3, #12580	; 0x3124
 bf8:	mov	r9, #36	; 0x24
 bfc:	mov	r1, #8
 c00:	add	r8, pc, r8
 c04:	add	r0, r8, #51	; 0x33
 c08:	add	r6, r8, #48	; 0x30
 c0c:	strh	r3, [r8, #48]	; 0x30
 c10:	strb	r9, [r8, #50]	; 0x32
 c14:	bl	798 <generate_random_salt>
 c18:	mov	r1, r6
 c1c:	strb	r9, [r8, #59]	; 0x3b
 c20:	strb	sl, [r8, #60]	; 0x3c
 c24:	b	b78 <mo_mkpasswd+0xb8>
 c28:	ldr	r2, [pc, #160]	; cd0 <mo_mkpasswd+0x210>
 c2c:	add	r3, r7, #88	; 0x58
 c30:	mov	r0, r7
 c34:	ldr	lr, [pc, #152]	; cd4 <mo_mkpasswd+0x214>
 c38:	ldr	r1, [pc, #152]	; cd8 <mo_mkpasswd+0x218>
 c3c:	ldr	r2, [ip, r2]
 c40:	add	lr, pc, lr
 c44:	add	r1, pc, r1
 c48:	str	lr, [sp]
 c4c:	add	r2, r2, #88	; 0x58
 c50:	bl	580 <sendto_one@plt>
 c54:	b	ba4 <mo_mkpasswd+0xe4>
 c58:	ldr	r8, [pc, #124]	; cdc <mo_mkpasswd+0x21c>
 c5c:	movw	r3, #13860	; 0x3624
 c60:	mov	sl, #36	; 0x24
 c64:	mov	r1, #16
 c68:	add	r8, pc, r8
 c6c:	add	r0, r8, #27
 c70:	add	r6, r8, #24
 c74:	strh	r3, [r8, #24]
 c78:	strb	sl, [r8, #26]
 c7c:	bl	798 <generate_random_salt>
 c80:	mov	r1, r6
 c84:	strb	sl, [r8, #43]	; 0x2b
 c88:	strb	r9, [r8, #44]	; 0x2c
 c8c:	b	b78 <mo_mkpasswd+0xb8>
 c90:	ldr	r0, [pc, #72]	; ce0 <mo_mkpasswd+0x220>
 c94:	add	r0, pc, r0
 c98:	b	b8c <mo_mkpasswd+0xcc>
 c9c:	ldr	r1, [pc, #64]	; ce4 <mo_mkpasswd+0x224>
 ca0:	mov	r0, r7
 ca4:	add	r1, pc, r1
 ca8:	bl	5e0 <sendto_one_notice@plt>
 cac:	b	ba4 <mo_mkpasswd+0xe4>
 cb0:	.word	0x00000324
 cb4:	.word	0x00010500
 cb8:	.word	0x000002d4
 cbc:	.word	0x00010574
 cc0:	.word	0x000002bc
 cc4:	.word	0x00000248
 cc8:	.word	0x00000238
 ccc:	.word	0x000104cc
 cd0:	.word	0x00000050
 cd4:	.word	0x00000150
 cd8:	.word	0x00000124
 cdc:	.word	0x00010464
 ce0:	.word	0x000000d0
 ce4:	.word	0x00000178

Disassembly of section .fini:

00000ce8 <_fini>:
 ce8:	push	{r3, lr}
 cec:	pop	{r3, pc}
