
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

0001079c <.init>:
   1079c:	push	{r3, lr}
   107a0:	bl	108f4 <abort@plt+0x48>
   107a4:	pop	{r3, pc}

Disassembly of section .plt:

000107a8 <calloc@plt-0x14>:
   107a8:	push	{lr}		; (str lr, [sp, #-4]!)
   107ac:	ldr	lr, [pc, #4]	; 107b8 <calloc@plt-0x4>
   107b0:	add	lr, pc, lr
   107b4:	ldr	pc, [lr, #8]!
   107b8:	andeq	r3, r1, r8, asr #16

000107bc <calloc@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #77824	; 0x13000
   107c4:	ldr	pc, [ip, #2120]!	; 0x848

000107c8 <strcmp@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #77824	; 0x13000
   107d0:	ldr	pc, [ip, #2112]!	; 0x840

000107d4 <fopen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #77824	; 0x13000
   107dc:	ldr	pc, [ip, #2104]!	; 0x838

000107e0 <free@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #77824	; 0x13000
   107e8:	ldr	pc, [ip, #2096]!	; 0x830

000107ec <fgets@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #77824	; 0x13000
   107f4:	ldr	pc, [ip, #2088]!	; 0x828

000107f8 <strdup@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #77824	; 0x13000
   10800:	ldr	pc, [ip, #2080]!	; 0x820

00010804 <__xstat@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #77824	; 0x13000
   1080c:	ldr	pc, [ip, #2072]!	; 0x818

00010810 <__libc_start_main@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #77824	; 0x13000
   10818:	ldr	pc, [ip, #2064]!	; 0x810

0001081c <__sysv_signal@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #77824	; 0x13000
   10824:	ldr	pc, [ip, #2056]!	; 0x808

00010828 <__gmon_start__@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #77824	; 0x13000
   10830:	ldr	pc, [ip, #2048]!	; 0x800

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #77824	; 0x13000
   1083c:	ldr	pc, [ip, #2040]!	; 0x7f8

00010840 <strlen@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #77824	; 0x13000
   10848:	ldr	pc, [ip, #2032]!	; 0x7f0

0001084c <fprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #77824	; 0x13000
   10854:	ldr	pc, [ip, #2024]!	; 0x7e8

00010858 <__isoc99_sscanf@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #77824	; 0x13000
   10860:	ldr	pc, [ip, #2016]!	; 0x7e0

00010864 <fclose@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #77824	; 0x13000
   1086c:	ldr	pc, [ip, #2008]!	; 0x7d8

00010870 <fputc@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #77824	; 0x13000
   10878:	ldr	pc, [ip, #2000]!	; 0x7d0

0001087c <sprintf@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #77824	; 0x13000
   10884:	ldr	pc, [ip, #1992]!	; 0x7c8

00010888 <atoi@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #77824	; 0x13000
   10890:	ldr	pc, [ip, #1984]!	; 0x7c0

00010894 <fputs@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #77824	; 0x13000
   1089c:	ldr	pc, [ip, #1976]!	; 0x7b8

000108a0 <strncmp@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #77824	; 0x13000
   108a8:	ldr	pc, [ip, #1968]!	; 0x7b0

000108ac <abort@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #77824	; 0x13000
   108b4:	ldr	pc, [ip, #1960]!	; 0x7a8

Disassembly of section .text:

000108b8 <error@@Base-0x8dc>:
   108b8:	mov	fp, #0
   108bc:	mov	lr, #0
   108c0:	pop	{r1}		; (ldr r1, [sp], #4)
   108c4:	mov	r2, sp
   108c8:	push	{r2}		; (str r2, [sp, #-4]!)
   108cc:	push	{r0}		; (str r0, [sp, #-4]!)
   108d0:	ldr	ip, [pc, #16]	; 108e8 <abort@plt+0x3c>
   108d4:	push	{ip}		; (str ip, [sp, #-4]!)
   108d8:	ldr	r0, [pc, #12]	; 108ec <abort@plt+0x40>
   108dc:	ldr	r3, [pc, #12]	; 108f0 <abort@plt+0x44>
   108e0:	bl	10810 <__libc_start_main@plt>
   108e4:	bl	108ac <abort@plt>
   108e8:	andeq	r2, r1, r8, lsl #31
   108ec:	andeq	r0, r1, r8, lsr #19
   108f0:	andeq	r2, r1, r8, lsr #30
   108f4:	ldr	r3, [pc, #20]	; 10910 <abort@plt+0x64>
   108f8:	ldr	r2, [pc, #20]	; 10914 <abort@plt+0x68>
   108fc:	add	r3, pc, r3
   10900:	ldr	r2, [r3, r2]
   10904:	cmp	r2, #0
   10908:	bxeq	lr
   1090c:	b	10828 <__gmon_start__@plt>
   10910:	strdeq	r3, [r1], -ip
   10914:	muleq	r0, ip, r0
   10918:	ldr	r0, [pc, #24]	; 10938 <abort@plt+0x8c>
   1091c:	ldr	r3, [pc, #24]	; 1093c <abort@plt+0x90>
   10920:	cmp	r3, r0
   10924:	bxeq	lr
   10928:	ldr	r3, [pc, #16]	; 10940 <abort@plt+0x94>
   1092c:	cmp	r3, #0
   10930:	bxeq	lr
   10934:	bx	r3
   10938:	andeq	r4, r2, r8, ror #1
   1093c:	andeq	r4, r2, r8, ror #1
   10940:	andeq	r0, r0, r0
   10944:	ldr	r0, [pc, #36]	; 10970 <abort@plt+0xc4>
   10948:	ldr	r1, [pc, #36]	; 10974 <abort@plt+0xc8>
   1094c:	sub	r1, r1, r0
   10950:	asr	r1, r1, #2
   10954:	add	r1, r1, r1, lsr #31
   10958:	asrs	r1, r1, #1
   1095c:	bxeq	lr
   10960:	ldr	r3, [pc, #16]	; 10978 <abort@plt+0xcc>
   10964:	cmp	r3, #0
   10968:	bxeq	lr
   1096c:	bx	r3
   10970:	andeq	r4, r2, r8, ror #1
   10974:	andeq	r4, r2, r8, ror #1
   10978:	andeq	r0, r0, r0
   1097c:	push	{r4, lr}
   10980:	ldr	r4, [pc, #24]	; 109a0 <abort@plt+0xf4>
   10984:	ldrb	r3, [r4]
   10988:	cmp	r3, #0
   1098c:	popne	{r4, pc}
   10990:	bl	10918 <abort@plt+0x6c>
   10994:	mov	r3, #1
   10998:	strb	r3, [r4]
   1099c:	pop	{r4, pc}
   109a0:	andeq	r4, r2, r8, ror #1
   109a4:	b	10944 <abort@plt+0x98>
   109a8:	push	{fp, lr}
   109ac:	mov	fp, sp
   109b0:	sub	sp, sp, #32
   109b4:	ldr	r2, [pc, #216]	; 10a94 <abort@plt+0x1e8>
   109b8:	add	r2, pc, r2
   109bc:	ldr	r3, [pc, #212]	; 10a98 <abort@plt+0x1ec>
   109c0:	ldr	r3, [pc, r3]
   109c4:	movw	ip, #0
   109c8:	str	ip, [fp, #-4]
   109cc:	str	r0, [fp, #-8]
   109d0:	str	r1, [fp, #-12]
   109d4:	ldr	r1, [fp, #-12]
   109d8:	sub	r0, fp, #8
   109dc:	str	r3, [sp, #12]
   109e0:	mov	r3, ip
   109e4:	ldr	ip, [sp, #12]
   109e8:	blx	ip
   109ec:	ldr	r0, [fp, #-8]
   109f0:	cmp	r0, #2
   109f4:	bge	10a0c <abort@plt+0x160>
   109f8:	ldr	r0, [pc, #176]	; 10ab0 <abort@plt+0x204>
   109fc:	add	r0, pc, r0
   10a00:	ldr	r1, [pc, #172]	; 10ab4 <abort@plt+0x208>
   10a04:	ldr	r1, [pc, r1]
   10a08:	blx	r1
   10a0c:	movw	r0, #0
   10a10:	str	r0, [sp, #16]
   10a14:	ldr	r0, [sp, #16]
   10a18:	ldr	r1, [fp, #-8]
   10a1c:	cmp	r0, r1
   10a20:	bge	10a64 <abort@plt+0x1b8>
   10a24:	ldr	r0, [pc, #124]	; 10aa8 <abort@plt+0x1fc>
   10a28:	ldr	r0, [pc, r0]
   10a2c:	ldr	r1, [pc, #120]	; 10aac <abort@plt+0x200>
   10a30:	ldr	r1, [pc, r1]
   10a34:	ldr	r2, [fp, #-12]
   10a38:	ldr	r3, [sp, #16]
   10a3c:	add	r2, r2, r3, lsl #2
   10a40:	ldr	r2, [r2]
   10a44:	str	r1, [sp, #8]
   10a48:	mov	r1, r2
   10a4c:	ldr	r2, [sp, #8]
   10a50:	blx	r2
   10a54:	ldr	r0, [sp, #16]
   10a58:	add	r0, r0, #1
   10a5c:	str	r0, [sp, #16]
   10a60:	b	10a14 <abort@plt+0x168>
   10a64:	ldr	r0, [pc, #52]	; 10aa0 <abort@plt+0x1f4>
   10a68:	ldr	r0, [pc, r0]
   10a6c:	ldr	r1, [pc, #48]	; 10aa4 <abort@plt+0x1f8>
   10a70:	ldr	r1, [pc, r1]
   10a74:	movw	r2, #0
   10a78:	str	r1, [sp, #4]
   10a7c:	mov	r1, r2
   10a80:	ldr	r2, [sp, #4]
   10a84:	blx	r2
   10a88:	ldr	r0, [pc, #12]	; 10a9c <abort@plt+0x1f0>
   10a8c:	ldr	r0, [pc, r0]
   10a90:	blx	r0
   10a94:	andeq	r2, r0, r8, ror #11
   10a98:	andeq	r3, r1, ip, asr #13
   10a9c:	andeq	r3, r1, r0, lsr #12
   10aa0:	andeq	r3, r1, r4, lsr r6
   10aa4:	strdeq	r3, [r1], -r0
   10aa8:	andeq	r3, r1, r4, ror r6
   10aac:	andeq	r3, r1, r0, asr r6
   10ab0:	ldrdeq	r2, [r0], -r8
   10ab4:	andeq	r3, r1, r4, ror #12
   10ab8:	push	{fp, lr}
   10abc:	mov	fp, sp
   10ac0:	sub	sp, sp, #16
   10ac4:	str	r0, [fp, #-4]
   10ac8:	str	r1, [sp, #8]
   10acc:	ldr	r0, [fp, #-4]
   10ad0:	ldr	r1, [sp, #8]
   10ad4:	bl	107bc <calloc@plt>
   10ad8:	str	r0, [sp, #4]
   10adc:	ldr	r0, [sp, #4]
   10ae0:	movw	r1, #0
   10ae4:	cmp	r0, r1
   10ae8:	bne	10af8 <abort@plt+0x24c>
   10aec:	ldr	r0, [pc, #16]	; 10b04 <abort@plt+0x258>
   10af0:	add	r0, pc, r0
   10af4:	bl	11194 <error@@Base>
   10af8:	ldr	r0, [sp, #4]
   10afc:	mov	sp, fp
   10b00:	pop	{fp, pc}
   10b04:	strdeq	r2, [r0], -fp
   10b08:	sub	sp, sp, #20
   10b0c:	str	r0, [sp, #12]
   10b10:	str	r1, [sp, #8]
   10b14:	movw	r0, #0
   10b18:	str	r0, [sp, #4]
   10b1c:	ldr	r0, [sp, #12]
   10b20:	ldr	r1, [sp, #4]
   10b24:	add	r0, r0, r1
   10b28:	ldrb	r0, [r0]
   10b2c:	cmp	r0, #0
   10b30:	movw	r0, #0
   10b34:	str	r0, [sp]
   10b38:	beq	10b6c <abort@plt+0x2c0>
   10b3c:	ldr	r0, [sp, #12]
   10b40:	ldr	r1, [sp, #4]
   10b44:	add	r0, r0, r1
   10b48:	ldrb	r0, [r0]
   10b4c:	ldr	r1, [sp, #8]
   10b50:	ldr	r2, [sp, #4]
   10b54:	add	r1, r1, r2
   10b58:	ldrb	r1, [r1]
   10b5c:	cmp	r0, r1
   10b60:	movw	r0, #0
   10b64:	moveq	r0, #1
   10b68:	str	r0, [sp]
   10b6c:	ldr	r0, [sp]
   10b70:	tst	r0, #1
   10b74:	beq	10b8c <abort@plt+0x2e0>
   10b78:	b	10b7c <abort@plt+0x2d0>
   10b7c:	ldr	r0, [sp, #4]
   10b80:	add	r0, r0, #1
   10b84:	str	r0, [sp, #4]
   10b88:	b	10b1c <abort@plt+0x270>
   10b8c:	ldr	r0, [sp, #12]
   10b90:	ldr	r1, [sp, #4]
   10b94:	add	r0, r0, r1
   10b98:	ldrb	r0, [r0]
   10b9c:	cmp	r0, #0
   10ba0:	bne	10bbc <abort@plt+0x310>
   10ba4:	ldr	r0, [sp, #8]
   10ba8:	ldr	r1, [sp, #4]
   10bac:	add	r0, r0, r1
   10bb0:	ldrb	r0, [r0]
   10bb4:	cmp	r0, #0
   10bb8:	beq	10bfc <abort@plt+0x350>
   10bbc:	ldr	r0, [sp, #12]
   10bc0:	ldr	r1, [sp, #4]
   10bc4:	add	r0, r0, r1
   10bc8:	ldrb	r0, [r0]
   10bcc:	ldr	r1, [sp, #8]
   10bd0:	ldr	r2, [sp, #4]
   10bd4:	add	r1, r1, r2
   10bd8:	ldrb	r1, [r1]
   10bdc:	cmp	r0, r1
   10be0:	movw	r0, #0
   10be4:	movlt	r0, #1
   10be8:	tst	r0, #1
   10bec:	mvn	r0, #0
   10bf0:	moveq	r0, #1
   10bf4:	str	r0, [sp, #16]
   10bf8:	b	10c04 <abort@plt+0x358>
   10bfc:	movw	r0, #0
   10c00:	str	r0, [sp, #16]
   10c04:	ldr	r0, [sp, #16]
   10c08:	add	sp, sp, #20
   10c0c:	bx	lr
   10c10:	push	{fp, lr}
   10c14:	mov	fp, sp
   10c18:	sub	sp, sp, #24
   10c1c:	str	r0, [fp, #-8]
   10c20:	str	r1, [sp, #12]
   10c24:	ldr	r0, [fp, #-8]
   10c28:	movw	r1, #0
   10c2c:	cmp	r0, r1
   10c30:	bne	10c74 <abort@plt+0x3c8>
   10c34:	ldr	r0, [sp, #12]
   10c38:	ldrb	r0, [r0]
   10c3c:	cmp	r0, #114	; 0x72
   10c40:	bne	10c58 <abort@plt+0x3ac>
   10c44:	ldr	r0, [pc, #148]	; 10ce0 <abort@plt+0x434>
   10c48:	ldr	r0, [pc, r0]
   10c4c:	ldr	r0, [r0]
   10c50:	str	r0, [sp, #4]
   10c54:	b	10c68 <abort@plt+0x3bc>
   10c58:	ldr	r0, [pc, #124]	; 10cdc <abort@plt+0x430>
   10c5c:	ldr	r0, [pc, r0]
   10c60:	ldr	r0, [r0]
   10c64:	str	r0, [sp, #4]
   10c68:	ldr	r0, [sp, #4]
   10c6c:	str	r0, [fp, #-4]
   10c70:	b	10cd0 <abort@plt+0x424>
   10c74:	ldr	r0, [fp, #-8]
   10c78:	ldr	r1, [sp, #12]
   10c7c:	bl	107d4 <fopen@plt>
   10c80:	str	r0, [sp, #8]
   10c84:	ldr	r0, [sp, #8]
   10c88:	movw	r1, #0
   10c8c:	cmp	r0, r1
   10c90:	beq	10ca0 <abort@plt+0x3f4>
   10c94:	ldr	r0, [sp, #8]
   10c98:	str	r0, [fp, #-4]
   10c9c:	b	10cd0 <abort@plt+0x424>
   10ca0:	ldr	r0, [sp, #12]
   10ca4:	ldrb	r0, [r0]
   10ca8:	cmp	r0, #119	; 0x77
   10cac:	bne	10cc0 <abort@plt+0x414>
   10cb0:	ldr	r0, [pc, #48]	; 10ce8 <abort@plt+0x43c>
   10cb4:	add	r0, pc, r0
   10cb8:	ldr	r1, [fp, #-8]
   10cbc:	bl	111f4 <error@@Base+0x60>
   10cc0:	ldr	r0, [pc, #28]	; 10ce4 <abort@plt+0x438>
   10cc4:	add	r0, pc, r0
   10cc8:	ldr	r1, [fp, #-8]
   10ccc:	bl	111f4 <error@@Base+0x60>
   10cd0:	ldr	r0, [fp, #-4]
   10cd4:	mov	sp, fp
   10cd8:	pop	{fp, pc}
   10cdc:	andeq	r3, r1, r4, asr r4
   10ce0:	andeq	r3, r1, r0, ror #8
   10ce4:	andeq	r2, r0, r7, asr r3
   10ce8:	andeq	r2, r0, r1, asr r3
   10cec:	push	{fp, lr}
   10cf0:	mov	fp, sp
   10cf4:	sub	sp, sp, #8
   10cf8:	ldr	r1, [pc, #60]	; 10d3c <abort@plt+0x490>
   10cfc:	ldr	r1, [pc, r1]
   10d00:	str	r0, [sp, #4]
   10d04:	ldr	r0, [sp, #4]
   10d08:	ldr	r1, [r1]
   10d0c:	cmp	r0, r1
   10d10:	beq	10d34 <abort@plt+0x488>
   10d14:	ldr	r0, [pc, #36]	; 10d40 <abort@plt+0x494>
   10d18:	ldr	r0, [pc, r0]
   10d1c:	ldr	r1, [sp, #4]
   10d20:	ldr	r0, [r0]
   10d24:	cmp	r1, r0
   10d28:	beq	10d34 <abort@plt+0x488>
   10d2c:	ldr	r0, [sp, #4]
   10d30:	bl	10864 <fclose@plt>
   10d34:	mov	sp, fp
   10d38:	pop	{fp, pc}
   10d3c:	andeq	r3, r1, ip, lsr #7
   10d40:	muleq	r1, r8, r3
   10d44:	push	{fp, lr}
   10d48:	mov	fp, sp
   10d4c:	sub	sp, sp, #96	; 0x60
   10d50:	str	r0, [fp, #-4]
   10d54:	ldr	r0, [fp, #-4]
   10d58:	mov	r1, sp
   10d5c:	bl	12f8c <error@@Base+0x1df8>
   10d60:	cmp	r0, #0
   10d64:	movw	r0, #0
   10d68:	moveq	r0, #1
   10d6c:	tst	r0, #1
   10d70:	movw	r0, #1
   10d74:	moveq	r0, #0
   10d78:	and	r0, r0, #255	; 0xff
   10d7c:	mov	sp, fp
   10d80:	pop	{fp, pc}
   10d84:	push	{fp, lr}
   10d88:	mov	fp, sp
   10d8c:	sub	sp, sp, #8
   10d90:	ldr	r0, [pc, #68]	; 10ddc <abort@plt+0x530>
   10d94:	add	r0, pc, r0
   10d98:	ldrh	r1, [r0]
   10d9c:	movw	r2, #1
   10da0:	add	r1, r1, r2
   10da4:	strh	r1, [r0]
   10da8:	sxth	r0, r1
   10dac:	bl	10de0 <abort@plt+0x534>
   10db0:	ldr	r1, [pc, #32]	; 10dd8 <abort@plt+0x52c>
   10db4:	ldr	r1, [pc, r1]
   10db8:	str	r0, [sp, #4]
   10dbc:	ldr	r0, [sp, #4]
   10dc0:	blx	r1
   10dc4:	ldr	r1, [sp, #4]
   10dc8:	str	r0, [sp]
   10dcc:	mov	r0, r1
   10dd0:	mov	sp, fp
   10dd4:	pop	{fp, pc}
   10dd8:	andeq	r3, r1, r4, asr #5
   10ddc:	andeq	r3, r1, lr, asr #6
   10de0:	push	{fp, lr}
   10de4:	mov	fp, sp
   10de8:	sub	sp, sp, #128	; 0x80
   10dec:	ldr	r1, [pc, #112]	; 10e64 <abort@plt+0x5b8>
   10df0:	ldr	r1, [pc, r1]
   10df4:	ldr	r2, [pc, #108]	; 10e68 <abort@plt+0x5bc>
   10df8:	ldr	r2, [pc, r2]
   10dfc:	add	r3, sp, #26
   10e00:	strh	r0, [fp, #-2]
   10e04:	ldr	r2, [r2]
   10e08:	str	r3, [sp, #20]
   10e0c:	str	r2, [sp, #16]
   10e10:	blx	r1
   10e14:	ldr	r1, [pc, #68]	; 10e60 <abort@plt+0x5b4>
   10e18:	add	r1, pc, r1
   10e1c:	ldrsh	r2, [fp, #-2]
   10e20:	ldr	r3, [sp, #20]
   10e24:	str	r0, [sp, #12]
   10e28:	mov	r0, r3
   10e2c:	ldr	ip, [sp, #16]
   10e30:	str	r2, [sp, #8]
   10e34:	mov	r2, ip
   10e38:	ldr	r3, [sp, #12]
   10e3c:	ldr	lr, [sp, #8]
   10e40:	str	lr, [sp]
   10e44:	bl	1087c <sprintf@plt>
   10e48:	add	r1, sp, #26
   10e4c:	str	r0, [sp, #4]
   10e50:	mov	r0, r1
   10e54:	bl	107f8 <strdup@plt>
   10e58:	mov	sp, fp
   10e5c:	pop	{fp, pc}
   10e60:	andeq	r2, r0, ip, lsr #4
   10e64:			; <UNDEFINED> instruction: 0x000132b0
   10e68:	andeq	r3, r1, r0, lsr #5
   10e6c:	push	{fp, lr}
   10e70:	mov	fp, sp
   10e74:	sub	sp, sp, #16
   10e78:	str	r0, [fp, #-4]
   10e7c:	movw	r0, #47	; 0x2f
   10e80:	strb	r0, [fp, #-5]
   10e84:	ldr	r0, [fp, #-4]
   10e88:	bl	10840 <strlen@plt>
   10e8c:	sub	r0, r0, #1
   10e90:	strh	r0, [sp, #8]
   10e94:	ldrsh	r0, [sp, #8]
   10e98:	cmp	r0, #0
   10e9c:	movw	r0, #0
   10ea0:	str	r0, [sp, #4]
   10ea4:	blt	10ecc <abort@plt+0x620>
   10ea8:	ldr	r0, [fp, #-4]
   10eac:	ldrsh	r1, [sp, #8]
   10eb0:	add	r0, r0, r1
   10eb4:	ldrb	r0, [r0]
   10eb8:	ldrb	r1, [fp, #-5]
   10ebc:	cmp	r0, r1
   10ec0:	movw	r0, #0
   10ec4:	movne	r0, #1
   10ec8:	str	r0, [sp, #4]
   10ecc:	ldr	r0, [sp, #4]
   10ed0:	tst	r0, #1
   10ed4:	beq	10ef0 <abort@plt+0x644>
   10ed8:	b	10edc <abort@plt+0x630>
   10edc:	ldrh	r0, [sp, #8]
   10ee0:	movw	r1, #65535	; 0xffff
   10ee4:	add	r0, r0, r1
   10ee8:	strh	r0, [sp, #8]
   10eec:	b	10e94 <abort@plt+0x5e8>
   10ef0:	ldr	r0, [fp, #-4]
   10ef4:	ldrsh	r1, [sp, #8]
   10ef8:	add	r1, r1, #1
   10efc:	add	r0, r0, r1
   10f00:	mov	sp, fp
   10f04:	pop	{fp, pc}
   10f08:	push	{fp, lr}
   10f0c:	mov	fp, sp
   10f10:	sub	sp, sp, #16
   10f14:	str	r0, [fp, #-4]
   10f18:	str	r1, [sp, #8]
   10f1c:	str	r2, [sp, #4]
   10f20:	str	r3, [sp]
   10f24:	ldr	r0, [sp, #8]
   10f28:	ldr	r0, [r0]
   10f2c:	bl	10e6c <abort@plt+0x5c0>
   10f30:	ldr	r1, [pc, #36]	; 10f5c <abort@plt+0x6b0>
   10f34:	ldr	r1, [pc, r1]
   10f38:	str	r0, [r1]
   10f3c:	bl	112d0 <error@@Base+0x13c>
   10f40:	ldr	r0, [fp, #-4]
   10f44:	ldr	r1, [sp, #8]
   10f48:	ldr	r2, [sp, #4]
   10f4c:	ldr	r3, [sp]
   10f50:	bl	10f60 <abort@plt+0x6b4>
   10f54:	mov	sp, fp
   10f58:	pop	{fp, pc}
   10f5c:	andeq	r3, r1, r4, ror #2
   10f60:	push	{fp, lr}
   10f64:	mov	fp, sp
   10f68:	sub	sp, sp, #48	; 0x30
   10f6c:	str	r0, [fp, #-4]
   10f70:	str	r1, [fp, #-8]
   10f74:	str	r2, [fp, #-12]
   10f78:	str	r3, [fp, #-16]
   10f7c:	movw	r0, #0
   10f80:	strh	r0, [fp, #-20]	; 0xffffffec
   10f84:	ldr	r0, [fp, #-4]
   10f88:	ldr	r0, [r0]
   10f8c:	cmp	r0, #1
   10f90:	bne	10fb0 <abort@plt+0x704>
   10f94:	ldr	r0, [pc, #404]	; 11130 <abort@plt+0x884>
   10f98:	ldr	r0, [pc, r0]
   10f9c:	ldrb	r0, [r0]
   10fa0:	cmp	r0, #0
   10fa4:	beq	10fb0 <abort@plt+0x704>
   10fa8:	ldr	r0, [fp, #-12]
   10fac:	bl	11368 <error@@Base+0x1d4>
   10fb0:	movw	r0, #1
   10fb4:	strh	r0, [fp, #-18]	; 0xffffffee
   10fb8:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   10fbc:	ldr	r1, [fp, #-4]
   10fc0:	ldr	r1, [r1]
   10fc4:	cmp	r0, r1
   10fc8:	bge	1111c <abort@plt+0x870>
   10fcc:	ldr	r0, [fp, #-8]
   10fd0:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   10fd4:	add	r0, r0, r1, lsl #2
   10fd8:	ldr	r0, [r0]
   10fdc:	ldrb	r0, [r0]
   10fe0:	cmp	r0, #45	; 0x2d
   10fe4:	bne	110e4 <abort@plt+0x838>
   10fe8:	ldr	r0, [fp, #-8]
   10fec:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   10ff0:	add	r0, r0, r1, lsl #2
   10ff4:	ldr	r0, [r0]
   10ff8:	ldrb	r0, [r0, #1]
   10ffc:	cmp	r0, #0
   11000:	beq	110e4 <abort@plt+0x838>
   11004:	ldr	r0, [pc, #296]	; 11134 <abort@plt+0x888>
   11008:	add	r0, pc, r0
   1100c:	ldr	r1, [fp, #-8]
   11010:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   11014:	ldr	r2, [r1, r2, lsl #2]!
   11018:	ldr	r1, [r1]
   1101c:	str	r0, [sp, #24]
   11020:	mov	r0, r1
   11024:	str	r2, [sp, #20]
   11028:	bl	10840 <strlen@plt>
   1102c:	ldr	r1, [sp, #24]
   11030:	str	r0, [sp, #16]
   11034:	mov	r0, r1
   11038:	ldr	r1, [sp, #20]
   1103c:	ldr	r2, [sp, #16]
   11040:	bl	108a0 <strncmp@plt>
   11044:	cmp	r0, #0
   11048:	bne	11054 <abort@plt+0x7a8>
   1104c:	ldr	r0, [fp, #-12]
   11050:	bl	11368 <error@@Base+0x1d4>
   11054:	ldr	r0, [fp, #-8]
   11058:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   1105c:	add	r0, r0, r1, lsl #2
   11060:	ldr	r0, [r0]
   11064:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11068:	add	r1, r1, #1
   1106c:	ldr	r2, [fp, #-4]
   11070:	ldr	r2, [r2]
   11074:	cmp	r1, r2
   11078:	str	r0, [sp, #12]
   1107c:	bge	1109c <abort@plt+0x7f0>
   11080:	ldr	r0, [fp, #-8]
   11084:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11088:	add	r1, r1, #1
   1108c:	add	r0, r0, r1, lsl #2
   11090:	ldr	r0, [r0]
   11094:	str	r0, [sp, #8]
   11098:	b	110a8 <abort@plt+0x7fc>
   1109c:	movw	r0, #0
   110a0:	str	r0, [sp, #8]
   110a4:	b	110a8 <abort@plt+0x7fc>
   110a8:	ldr	r0, [sp, #8]
   110ac:	ldr	r2, [fp, #-16]
   110b0:	ldr	r1, [sp, #12]
   110b4:	str	r0, [sp, #4]
   110b8:	mov	r0, r1
   110bc:	ldr	r1, [sp, #4]
   110c0:	bl	113f0 <error@@Base+0x25c>
   110c4:	sxtb	r0, r0
   110c8:	cmp	r0, #0
   110cc:	beq	110e0 <abort@plt+0x834>
   110d0:	ldrh	r0, [fp, #-18]	; 0xffffffee
   110d4:	movw	r1, #1
   110d8:	add	r0, r0, r1
   110dc:	strh	r0, [fp, #-18]	; 0xffffffee
   110e0:	b	11104 <abort@plt+0x858>
   110e4:	ldr	r0, [fp, #-8]
   110e8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   110ec:	ldr	r1, [r0, r1, lsl #2]
   110f0:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   110f4:	add	r3, r2, #1
   110f8:	strh	r3, [fp, #-20]	; 0xffffffec
   110fc:	add	r0, r0, r2, lsl #2
   11100:	str	r1, [r0]
   11104:	b	11108 <abort@plt+0x85c>
   11108:	ldrh	r0, [fp, #-18]	; 0xffffffee
   1110c:	movw	r1, #1
   11110:	add	r0, r0, r1
   11114:	strh	r0, [fp, #-18]	; 0xffffffee
   11118:	b	10fb8 <abort@plt+0x70c>
   1111c:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11120:	ldr	r1, [fp, #-4]
   11124:	str	r0, [r1]
   11128:	mov	sp, fp
   1112c:	pop	{fp, pc}
   11130:	andeq	r3, r1, r4, asr #1
   11134:	andeq	r2, r0, r9, asr r0
   11138:	push	{fp, lr}
   1113c:	mov	fp, sp
   11140:	movw	r0, #0
   11144:	bl	11148 <abort@plt+0x89c>
   11148:	push	{fp, lr}
   1114c:	mov	fp, sp
   11150:	sub	sp, sp, #8
   11154:	ldr	r1, [pc, #48]	; 1118c <abort@plt+0x8e0>
   11158:	ldr	r1, [pc, r1]
   1115c:	str	r0, [sp, #4]
   11160:	ldr	r0, [r1]
   11164:	movw	r1, #0
   11168:	cmp	r0, r1
   1116c:	beq	11180 <abort@plt+0x8d4>
   11170:	ldr	r0, [pc, #24]	; 11190 <abort@plt+0x8e4>
   11174:	ldr	r0, [pc, r0]
   11178:	ldr	r0, [r0]
   1117c:	blx	r0
   11180:	bl	11664 <error@@Base+0x4d0>
   11184:	ldr	r0, [sp, #4]
   11188:	bl	10834 <exit@plt>
   1118c:	andeq	r2, r1, ip, asr #30
   11190:	andeq	r2, r1, r0, lsr pc

00011194 <error@@Base>:
   11194:	push	{fp, lr}
   11198:	mov	fp, sp
   1119c:	sub	sp, sp, #8
   111a0:	ldr	r1, [pc, #64]	; 111e8 <error@@Base+0x54>
   111a4:	add	r1, pc, r1
   111a8:	ldr	r2, [pc, #60]	; 111ec <error@@Base+0x58>
   111ac:	ldr	r2, [pc, r2]
   111b0:	ldr	r3, [pc, #56]	; 111f0 <error@@Base+0x5c>
   111b4:	ldr	r3, [pc, r3]
   111b8:	str	r0, [sp, #4]
   111bc:	ldr	r0, [r3]
   111c0:	ldr	r2, [r2]
   111c4:	ldr	r3, [sp, #4]
   111c8:	bl	1084c <fprintf@plt>
   111cc:	ldr	r1, [pc, #16]	; 111e4 <error@@Base+0x50>
   111d0:	ldr	r1, [pc, r1]
   111d4:	ldr	r1, [r1]
   111d8:	str	r0, [sp]
   111dc:	mov	r0, r1
   111e0:	bl	11148 <abort@plt+0x89c>
   111e4:	andeq	r2, r1, ip, ror #29
   111e8:	andeq	r1, r0, fp, lsl #29
   111ec:	andeq	r2, r1, ip, ror #29
   111f0:	ldrdeq	r2, [r1], -r0
   111f4:	push	{fp, lr}
   111f8:	mov	fp, sp
   111fc:	sub	sp, sp, #24
   11200:	ldr	r2, [pc, #88]	; 11260 <error@@Base+0xcc>
   11204:	add	r2, pc, r2
   11208:	ldr	r3, [pc, #84]	; 11264 <error@@Base+0xd0>
   1120c:	ldr	r3, [pc, r3]
   11210:	ldr	ip, [pc, #80]	; 11268 <error@@Base+0xd4>
   11214:	ldr	ip, [pc, ip]
   11218:	str	r0, [fp, #-4]
   1121c:	str	r1, [fp, #-8]
   11220:	ldr	r0, [ip]
   11224:	ldr	r1, [r3]
   11228:	ldr	r3, [fp, #-4]
   1122c:	ldr	ip, [fp, #-8]
   11230:	str	r1, [sp, #12]
   11234:	mov	r1, r2
   11238:	ldr	r2, [sp, #12]
   1123c:	str	ip, [sp]
   11240:	bl	1084c <fprintf@plt>
   11244:	ldr	r1, [pc, #16]	; 1125c <error@@Base+0xc8>
   11248:	ldr	r1, [pc, r1]
   1124c:	ldr	r1, [r1]
   11250:	str	r0, [sp, #8]
   11254:	mov	r0, r1
   11258:	bl	11148 <abort@plt+0x89c>
   1125c:	andeq	r2, r1, r4, ror lr
   11260:	andeq	r1, r0, r3, lsr lr
   11264:	andeq	r2, r1, ip, lsl #29
   11268:	andeq	r2, r1, r0, ror lr
   1126c:	push	{fp, lr}
   11270:	mov	fp, sp
   11274:	sub	sp, sp, #16
   11278:	ldr	r2, [pc, #68]	; 112c4 <error@@Base+0x130>
   1127c:	add	r2, pc, r2
   11280:	ldr	r3, [pc, #64]	; 112c8 <error@@Base+0x134>
   11284:	ldr	r3, [pc, r3]
   11288:	ldr	ip, [pc, #60]	; 112cc <error@@Base+0x138>
   1128c:	ldr	ip, [pc, ip]
   11290:	str	r0, [fp, #-4]
   11294:	str	r1, [sp, #8]
   11298:	ldr	r0, [ip]
   1129c:	ldr	r1, [r3]
   112a0:	ldr	r3, [fp, #-4]
   112a4:	ldr	ip, [sp, #8]
   112a8:	str	r1, [sp, #4]
   112ac:	mov	r1, r2
   112b0:	ldr	r2, [sp, #4]
   112b4:	str	ip, [sp]
   112b8:	bl	1084c <fprintf@plt>
   112bc:	mov	sp, fp
   112c0:	pop	{fp, pc}
   112c4:			; <UNDEFINED> instruction: 0x00001dbb
   112c8:	andeq	r2, r1, r4, lsl lr
   112cc:	strdeq	r2, [r1], -r8
   112d0:	push	{fp, lr}
   112d4:	mov	fp, sp
   112d8:	sub	sp, sp, #8
   112dc:	ldr	r0, [pc, #44]	; 11310 <error@@Base+0x17c>
   112e0:	add	r1, pc, r0
   112e4:	movw	r0, #2
   112e8:	bl	1081c <__sysv_signal@plt>
   112ec:	ldr	r1, [pc, #24]	; 1130c <error@@Base+0x178>
   112f0:	add	r1, pc, r1
   112f4:	movw	r2, #15
   112f8:	str	r0, [sp, #4]
   112fc:	mov	r0, r2
   11300:	bl	1081c <__sysv_signal@plt>
   11304:	mov	sp, fp
   11308:	pop	{fp, pc}
   1130c:	andeq	r0, r0, ip, lsl r0
   11310:	andeq	r0, r0, ip, lsr #32
   11314:	push	{fp, lr}
   11318:	mov	fp, sp
   1131c:	sub	sp, sp, #8
   11320:	ldr	r1, [pc, #52]	; 1135c <error@@Base+0x1c8>
   11324:	add	r1, pc, r1
   11328:	str	r0, [sp, #4]
   1132c:	ldrsb	r0, [r1]
   11330:	cmp	r0, #0
   11334:	beq	11340 <error@@Base+0x1ac>
   11338:	mov	sp, fp
   1133c:	pop	{fp, pc}
   11340:	ldr	r0, [pc, #24]	; 11360 <error@@Base+0x1cc>
   11344:	add	r0, pc, r0
   11348:	ldr	r1, [pc, #20]	; 11364 <error@@Base+0x1d0>
   1134c:	add	r1, pc, r1
   11350:	movw	r2, #1
   11354:	strb	r2, [r1]
   11358:	bl	11194 <error@@Base>
   1135c:	andeq	r2, r1, r0, asr #27
   11360:	andeq	r1, r0, lr, lsl #26
   11364:	muleq	r1, r8, sp
   11368:	push	{fp, lr}
   1136c:	mov	fp, sp
   11370:	sub	sp, sp, #8
   11374:	ldr	r1, [pc, #96]	; 113dc <error@@Base+0x248>
   11378:	ldr	r1, [pc, r1]
   1137c:	str	r0, [sp, #4]
   11380:	ldr	r0, [r1]
   11384:	movw	r1, #0
   11388:	cmp	r0, r1
   1138c:	beq	113a4 <error@@Base+0x210>
   11390:	ldr	r0, [pc, #84]	; 113ec <error@@Base+0x258>
   11394:	ldr	r0, [pc, r0]
   11398:	ldr	r0, [r0]
   1139c:	blx	r0
   113a0:	b	113d8 <error@@Base+0x244>
   113a4:	ldr	r0, [pc, #52]	; 113e0 <error@@Base+0x24c>
   113a8:	add	r1, pc, r0
   113ac:	ldr	r0, [pc, #48]	; 113e4 <error@@Base+0x250>
   113b0:	ldr	r0, [pc, r0]
   113b4:	ldr	r2, [pc, #44]	; 113e8 <error@@Base+0x254>
   113b8:	ldr	r2, [pc, r2]
   113bc:	ldr	r2, [r2]
   113c0:	ldr	r0, [r0]
   113c4:	ldr	r3, [sp, #4]
   113c8:	str	r0, [sp]
   113cc:	mov	r0, r2
   113d0:	ldr	r2, [sp]
   113d4:	bl	1084c <fprintf@plt>
   113d8:	bl	11138 <abort@plt+0x88c>
   113dc:	strdeq	r2, [r1], -r8
   113e0:			; <UNDEFINED> instruction: 0x00001cbf
   113e4:	andeq	r2, r1, r8, ror #25
   113e8:	andeq	r2, r1, ip, asr #25
   113ec:	ldrdeq	r2, [r1], -ip
   113f0:	push	{fp, lr}
   113f4:	mov	fp, sp
   113f8:	sub	sp, sp, #32
   113fc:	str	r0, [fp, #-8]
   11400:	str	r1, [fp, #-12]
   11404:	str	r2, [sp, #16]
   11408:	ldr	r0, [sp, #16]
   1140c:	movw	r1, #0
   11410:	cmp	r0, r1
   11414:	bne	1141c <error@@Base+0x288>
   11418:	b	11630 <error@@Base+0x49c>
   1141c:	movw	r0, #0
   11420:	strh	r0, [sp, #14]
   11424:	ldr	r0, [sp, #16]
   11428:	ldrsh	r1, [sp, #14]
   1142c:	movw	r2, #12
   11430:	mul	r1, r1, r2
   11434:	add	r0, r0, r1
   11438:	ldrb	r0, [r0]
   1143c:	cmp	r0, #0
   11440:	movw	r0, #0
   11444:	str	r0, [sp, #8]
   11448:	beq	1147c <error@@Base+0x2e8>
   1144c:	ldr	r0, [fp, #-8]
   11450:	ldrb	r0, [r0, #1]
   11454:	ldr	r1, [sp, #16]
   11458:	ldrsh	r2, [sp, #14]
   1145c:	movw	r3, #12
   11460:	mul	r2, r2, r3
   11464:	add	r1, r1, r2
   11468:	ldrb	r1, [r1]
   1146c:	cmp	r0, r1
   11470:	movw	r0, #0
   11474:	movne	r0, #1
   11478:	str	r0, [sp, #8]
   1147c:	ldr	r0, [sp, #8]
   11480:	tst	r0, #1
   11484:	beq	114a0 <error@@Base+0x30c>
   11488:	b	1148c <error@@Base+0x2f8>
   1148c:	ldrh	r0, [sp, #14]
   11490:	movw	r1, #1
   11494:	add	r0, r0, r1
   11498:	strh	r0, [sp, #14]
   1149c:	b	11424 <error@@Base+0x290>
   114a0:	ldr	r0, [sp, #16]
   114a4:	ldrsh	r1, [sp, #14]
   114a8:	movw	r2, #12
   114ac:	mul	r1, r1, r2
   114b0:	add	r0, r0, r1
   114b4:	ldrsb	r0, [r0]
   114b8:	cmp	r0, #0
   114bc:	bne	114c4 <error@@Base+0x330>
   114c0:	b	11630 <error@@Base+0x49c>
   114c4:	ldr	r0, [sp, #16]
   114c8:	ldrsh	r1, [sp, #14]
   114cc:	movw	r2, #12
   114d0:	mul	r1, r1, r2
   114d4:	add	r0, r0, r1
   114d8:	ldr	r0, [r0, #4]
   114dc:	movw	r1, #0
   114e0:	cmp	r0, r1
   114e4:	beq	115a4 <error@@Base+0x410>
   114e8:	ldr	r0, [fp, #-8]
   114ec:	ldrb	r0, [r0, #2]
   114f0:	cmp	r0, #0
   114f4:	bne	11508 <error@@Base+0x374>
   114f8:	ldr	r0, [fp, #-12]
   114fc:	movw	r1, #0
   11500:	cmp	r0, r1
   11504:	beq	115a4 <error@@Base+0x410>
   11508:	ldr	r0, [sp, #16]
   1150c:	ldrsh	r1, [sp, #14]
   11510:	movw	r2, #12
   11514:	mul	r1, r1, r2
   11518:	add	r0, r0, r1
   1151c:	ldr	r0, [r0, #4]
   11520:	ldr	r0, [r0]
   11524:	movw	r1, #0
   11528:	cmp	r0, r1
   1152c:	beq	11534 <error@@Base+0x3a0>
   11530:	b	11640 <error@@Base+0x4ac>
   11534:	ldr	r0, [fp, #-8]
   11538:	ldrb	r0, [r0, #2]
   1153c:	cmp	r0, #0
   11540:	beq	11554 <error@@Base+0x3c0>
   11544:	ldr	r0, [fp, #-8]
   11548:	add	r0, r0, #2
   1154c:	str	r0, [sp, #4]
   11550:	b	1155c <error@@Base+0x3c8>
   11554:	ldr	r0, [fp, #-12]
   11558:	str	r0, [sp, #4]
   1155c:	ldr	r0, [sp, #4]
   11560:	ldr	r1, [sp, #16]
   11564:	ldrsh	r2, [sp, #14]
   11568:	movw	r3, #12
   1156c:	mul	r2, r2, r3
   11570:	add	r1, r1, r2
   11574:	ldr	r1, [r1, #4]
   11578:	str	r0, [r1]
   1157c:	ldr	r0, [fp, #-8]
   11580:	ldrb	r0, [r0, #2]
   11584:	cmp	r0, #0
   11588:	movw	r0, #0
   1158c:	movne	r0, #1
   11590:	tst	r0, #1
   11594:	movw	r0, #0
   11598:	moveq	r0, #1
   1159c:	strb	r0, [fp, #-1]
   115a0:	b	11650 <error@@Base+0x4bc>
   115a4:	ldr	r0, [sp, #16]
   115a8:	ldrsh	r1, [sp, #14]
   115ac:	movw	r2, #12
   115b0:	mul	r1, r1, r2
   115b4:	add	r0, r0, r1
   115b8:	ldr	r0, [r0, #8]
   115bc:	movw	r1, #0
   115c0:	cmp	r0, r1
   115c4:	beq	1162c <error@@Base+0x498>
   115c8:	ldr	r0, [fp, #-8]
   115cc:	ldrsb	r0, [r0, #2]
   115d0:	cmp	r0, #0
   115d4:	bne	1162c <error@@Base+0x498>
   115d8:	ldr	r0, [sp, #16]
   115dc:	ldrsh	r1, [sp, #14]
   115e0:	movw	r2, #12
   115e4:	mul	r1, r1, r2
   115e8:	add	r0, r0, r1
   115ec:	ldr	r0, [r0, #8]
   115f0:	ldrsb	r0, [r0]
   115f4:	cmp	r0, #0
   115f8:	beq	11600 <error@@Base+0x46c>
   115fc:	b	11640 <error@@Base+0x4ac>
   11600:	ldr	r0, [sp, #16]
   11604:	ldrsh	r1, [sp, #14]
   11608:	movw	r2, #12
   1160c:	mul	r1, r1, r2
   11610:	add	r0, r0, r1
   11614:	ldr	r0, [r0, #8]
   11618:	movw	r1, #1
   1161c:	strb	r1, [r0]
   11620:	movw	r0, #0
   11624:	strb	r0, [fp, #-1]
   11628:	b	11650 <error@@Base+0x4bc>
   1162c:	b	11630 <error@@Base+0x49c>
   11630:	ldr	r0, [pc, #36]	; 1165c <error@@Base+0x4c8>
   11634:	add	r0, pc, r0
   11638:	ldr	r1, [fp, #-8]
   1163c:	bl	111f4 <error@@Base+0x60>
   11640:	ldr	r0, [pc, #24]	; 11660 <error@@Base+0x4cc>
   11644:	add	r0, pc, r0
   11648:	ldr	r1, [fp, #-8]
   1164c:	bl	111f4 <error@@Base+0x60>
   11650:	ldrb	r0, [fp, #-1]
   11654:	mov	sp, fp
   11658:	pop	{fp, pc}
   1165c:	andeq	r1, r0, r2, asr #20
   11660:	andeq	r1, r0, r1, asr #20
   11664:	push	{fp, lr}
   11668:	mov	fp, sp
   1166c:	sub	sp, sp, #16
   11670:	movw	r0, #1
   11674:	strh	r0, [fp, #-2]
   11678:	ldr	r0, [pc, #88]	; 116d8 <error@@Base+0x544>
   1167c:	add	r0, pc, r0
   11680:	ldrsh	r1, [fp, #-2]
   11684:	ldrsh	r0, [r0]
   11688:	cmp	r1, r0
   1168c:	bgt	116d0 <error@@Base+0x53c>
   11690:	ldrsh	r0, [fp, #-2]
   11694:	bl	10de0 <abort@plt+0x534>
   11698:	ldr	r1, [pc, #60]	; 116dc <error@@Base+0x548>
   1169c:	ldr	r1, [pc, r1]
   116a0:	str	r0, [sp, #8]
   116a4:	ldr	r0, [sp, #8]
   116a8:	blx	r1
   116ac:	ldr	r1, [sp, #8]
   116b0:	str	r0, [sp, #4]
   116b4:	mov	r0, r1
   116b8:	bl	107e0 <free@plt>
   116bc:	ldrh	r0, [fp, #-2]
   116c0:	movw	r1, #1
   116c4:	add	r0, r0, r1
   116c8:	strh	r0, [fp, #-2]
   116cc:	b	11678 <error@@Base+0x4e4>
   116d0:	mov	sp, fp
   116d4:	pop	{fp, pc}
   116d8:	andeq	r2, r1, r6, ror #20
   116dc:	ldrdeq	r2, [r1], -ip
   116e0:	sub	sp, sp, #12
   116e4:	str	r0, [sp, #8]
   116e8:	str	r1, [sp, #4]
   116ec:	str	r2, [sp]
   116f0:	ldr	r0, [sp, #4]
   116f4:	ldr	r1, [sp, #8]
   116f8:	ldr	r2, [r1]
   116fc:	add	r0, r2, r0
   11700:	str	r0, [r1]
   11704:	ldr	r0, [sp]
   11708:	ldr	r1, [sp, #8]
   1170c:	ldr	r2, [r1, #4]
   11710:	add	r0, r2, r0
   11714:	str	r0, [r1, #4]
   11718:	add	sp, sp, #12
   1171c:	bx	lr
   11720:	push	{fp, lr}
   11724:	mov	fp, sp
   11728:	sub	sp, sp, #32
   1172c:	ldr	ip, [pc, #160]	; 117d4 <error@@Base+0x640>
   11730:	ldr	ip, [pc, ip]
   11734:	str	r0, [fp, #-4]
   11738:	str	r1, [fp, #-8]
   1173c:	str	r2, [fp, #-12]
   11740:	str	r3, [sp, #16]
   11744:	ldr	r0, [fp, #-4]
   11748:	ldr	r1, [fp, #-8]
   1174c:	blx	ip
   11750:	str	r0, [sp, #12]
   11754:	ldr	r0, [sp, #12]
   11758:	movw	r1, #0
   1175c:	cmp	r0, r1
   11760:	bne	117b8 <error@@Base+0x624>
   11764:	ldr	r0, [pc, #112]	; 117dc <error@@Base+0x648>
   11768:	ldr	r0, [pc, r0]
   1176c:	movw	r1, #1
   11770:	str	r0, [sp, #8]
   11774:	mov	r0, r1
   11778:	movw	r1, #20
   1177c:	ldr	r2, [sp, #8]
   11780:	blx	r2
   11784:	str	r0, [sp, #12]
   11788:	ldr	r0, [fp, #-8]
   1178c:	bl	107f8 <strdup@plt>
   11790:	ldr	r1, [pc, #64]	; 117d8 <error@@Base+0x644>
   11794:	ldr	r1, [pc, r1]
   11798:	ldr	r2, [sp, #12]
   1179c:	str	r0, [r2, #8]
   117a0:	ldr	r0, [fp, #-4]
   117a4:	ldr	r2, [sp, #12]
   117a8:	str	r1, [sp, #4]
   117ac:	mov	r1, r2
   117b0:	ldr	r2, [sp, #4]
   117b4:	blx	r2
   117b8:	ldr	r0, [sp, #12]
   117bc:	add	r0, r0, #12
   117c0:	ldr	r1, [fp, #-12]
   117c4:	ldr	r2, [sp, #16]
   117c8:	bl	116e0 <error@@Base+0x54c>
   117cc:	mov	sp, fp
   117d0:	pop	{fp, pc}
   117d4:	andeq	r2, r1, r0, ror #18
   117d8:	ldrdeq	r2, [r1], -r8
   117dc:	andeq	r2, r1, r8, asr r9
   117e0:	push	{fp, lr}
   117e4:	mov	fp, sp
   117e8:	sub	sp, sp, #40	; 0x28
   117ec:	ldr	r2, [pc, #504]	; 119ec <error@@Base+0x858>
   117f0:	add	r2, pc, r2
   117f4:	ldr	r3, [pc, #500]	; 119f0 <error@@Base+0x85c>
   117f8:	ldr	r3, [pc, r3]
   117fc:	str	r0, [fp, #-4]
   11800:	str	r1, [fp, #-8]
   11804:	ldr	r0, [fp, #-8]
   11808:	mov	r1, r2
   1180c:	blx	r3
   11810:	str	r0, [fp, #-12]
   11814:	ldr	r0, [fp, #-12]
   11818:	bl	11a14 <error@@Base+0x880>
   1181c:	and	r0, r0, #255	; 0xff
   11820:	cmp	r0, #0
   11824:	beq	11978 <error@@Base+0x7e4>
   11828:	ldr	r0, [pc, #452]	; 119f4 <error@@Base+0x860>
   1182c:	add	r0, pc, r0
   11830:	ldr	r1, [pc, #448]	; 119f8 <error@@Base+0x864>
   11834:	add	r1, pc, r1
   11838:	movw	r2, #45	; 0x2d
   1183c:	bl	108a0 <strncmp@plt>
   11840:	cmp	r0, #0
   11844:	bne	11978 <error@@Base+0x7e4>
   11848:	ldr	r0, [fp, #-12]
   1184c:	bl	11a14 <error@@Base+0x880>
   11850:	and	r0, r0, #255	; 0xff
   11854:	cmp	r0, #0
   11858:	beq	11978 <error@@Base+0x7e4>
   1185c:	ldr	r0, [pc, #424]	; 11a0c <error@@Base+0x878>
   11860:	add	r0, pc, r0
   11864:	ldr	r1, [pc, #420]	; 11a10 <error@@Base+0x87c>
   11868:	add	r1, pc, r1
   1186c:	bl	107c8 <strcmp@plt>
   11870:	cmp	r0, #0
   11874:	bne	11978 <error@@Base+0x7e4>
   11878:	ldr	r0, [fp, #-12]
   1187c:	sub	r1, fp, #16
   11880:	bl	11a68 <error@@Base+0x8d4>
   11884:	and	r0, r0, #255	; 0xff
   11888:	cmp	r0, #0
   1188c:	beq	11978 <error@@Base+0x7e4>
   11890:	ldr	r0, [fp, #-12]
   11894:	add	r1, sp, #20
   11898:	bl	11a68 <error@@Base+0x8d4>
   1189c:	and	r0, r0, #255	; 0xff
   118a0:	cmp	r0, #0
   118a4:	beq	11978 <error@@Base+0x7e4>
   118a8:	ldr	r0, [fp, #-12]
   118ac:	bl	11a14 <error@@Base+0x880>
   118b0:	and	r0, r0, #255	; 0xff
   118b4:	cmp	r0, #0
   118b8:	beq	11978 <error@@Base+0x7e4>
   118bc:	ldr	r0, [fp, #-12]
   118c0:	bl	11a14 <error@@Base+0x880>
   118c4:	and	r0, r0, #255	; 0xff
   118c8:	cmp	r0, #0
   118cc:	beq	11978 <error@@Base+0x7e4>
   118d0:	ldr	r0, [fp, #-4]
   118d4:	ldr	r1, [fp, #-16]
   118d8:	ldr	r2, [sp, #20]
   118dc:	bl	116e0 <error@@Base+0x54c>
   118e0:	ldr	r0, [fp, #-12]
   118e4:	ldr	r1, [fp, #-4]
   118e8:	add	r1, r1, #8
   118ec:	bl	11ae4 <error@@Base+0x950>
   118f0:	str	r0, [sp, #16]
   118f4:	ldr	r0, [fp, #-12]
   118f8:	ldr	r1, [fp, #-4]
   118fc:	add	r1, r1, #416	; 0x1a0
   11900:	bl	11ae4 <error@@Base+0x950>
   11904:	str	r0, [sp, #12]
   11908:	ldr	r0, [fp, #-12]
   1190c:	ldr	r1, [fp, #-4]
   11910:	add	r1, r1, #824	; 0x338
   11914:	bl	11ae4 <error@@Base+0x950>
   11918:	ldr	r1, [fp, #-16]
   1191c:	cmp	r1, #0
   11920:	ble	11974 <error@@Base+0x7e0>
   11924:	ldr	r0, [fp, #-12]
   11928:	ldr	r1, [fp, #-4]
   1192c:	add	r1, r1, #920	; 0x398
   11930:	bl	11ae4 <error@@Base+0x950>
   11934:	ldr	r1, [sp, #16]
   11938:	cmp	r1, #0
   1193c:	ble	11950 <error@@Base+0x7bc>
   11940:	ldr	r0, [fp, #-12]
   11944:	ldr	r1, [fp, #-4]
   11948:	add	r1, r1, #992	; 0x3e0
   1194c:	bl	11bd8 <error@@Base+0xa44>
   11950:	ldr	r0, [sp, #12]
   11954:	cmp	r0, #0
   11958:	ble	11970 <error@@Base+0x7dc>
   1195c:	ldr	r0, [fp, #-12]
   11960:	ldr	r1, [fp, #-4]
   11964:	movw	r2, #9048	; 0x2358
   11968:	add	r1, r1, r2
   1196c:	bl	11bd8 <error@@Base+0xa44>
   11970:	b	11974 <error@@Base+0x7e0>
   11974:	b	119c8 <error@@Base+0x834>
   11978:	ldr	r0, [fp, #-8]
   1197c:	movw	r1, #0
   11980:	cmp	r0, r1
   11984:	beq	11994 <error@@Base+0x800>
   11988:	ldr	r0, [fp, #-8]
   1198c:	str	r0, [sp, #8]
   11990:	b	119a4 <error@@Base+0x810>
   11994:	ldr	r0, [pc, #96]	; 119fc <error@@Base+0x868>
   11998:	add	r0, pc, r0
   1199c:	str	r0, [sp, #8]
   119a0:	b	119a4 <error@@Base+0x810>
   119a4:	ldr	r0, [sp, #8]
   119a8:	ldr	r1, [pc, #80]	; 11a00 <error@@Base+0x86c>
   119ac:	add	r1, pc, r1
   119b0:	ldr	r2, [pc, #76]	; 11a04 <error@@Base+0x870>
   119b4:	ldr	r2, [pc, r2]
   119b8:	str	r0, [sp, #4]
   119bc:	mov	r0, r1
   119c0:	ldr	r1, [sp, #4]
   119c4:	blx	r2
   119c8:	ldr	r0, [pc, #56]	; 11a08 <error@@Base+0x874>
   119cc:	ldr	r0, [pc, r0]
   119d0:	ldr	r1, [fp, #-12]
   119d4:	str	r0, [sp]
   119d8:	mov	r0, r1
   119dc:	ldr	r1, [sp]
   119e0:	blx	r1
   119e4:	mov	sp, fp
   119e8:	pop	{fp, pc}
   119ec:	andeq	r1, r0, r6, lsr #17
   119f0:	andeq	r2, r1, ip, ror r8
   119f4:			; <UNDEFINED> instruction: 0x000128b9
   119f8:	andeq	r1, r0, r4, ror #16
   119fc:	andeq	r1, r0, r2, ror r7
   11a00:	andeq	r1, r0, ip, asr #14
   11a04:	andeq	r2, r1, r0, lsl r7
   11a08:	andeq	r2, r1, ip, lsl #13
   11a0c:	andeq	r2, r1, r5, lsl #17
   11a10:	andeq	r1, r0, r0, ror #16
   11a14:	push	{fp, lr}
   11a18:	mov	fp, sp
   11a1c:	sub	sp, sp, #8
   11a20:	ldr	r1, [pc, #60]	; 11a64 <error@@Base+0x8d0>
   11a24:	add	r1, pc, r1
   11a28:	str	r0, [sp, #4]
   11a2c:	ldr	r2, [sp, #4]
   11a30:	mov	r0, r1
   11a34:	movw	r1, #99	; 0x63
   11a38:	bl	107ec <fgets@plt>
   11a3c:	movw	r1, #0
   11a40:	cmp	r0, r1
   11a44:	movw	r0, #0
   11a48:	movne	r0, #1
   11a4c:	tst	r0, #1
   11a50:	movw	r0, #1
   11a54:	moveq	r0, #0
   11a58:	and	r0, r0, #255	; 0xff
   11a5c:	mov	sp, fp
   11a60:	pop	{fp, pc}
   11a64:	andeq	r2, r1, r1, asr #13
   11a68:	push	{fp, lr}
   11a6c:	mov	fp, sp
   11a70:	sub	sp, sp, #16
   11a74:	str	r0, [fp, #-4]
   11a78:	str	r1, [sp, #8]
   11a7c:	ldr	r0, [fp, #-4]
   11a80:	bl	11a14 <error@@Base+0x880>
   11a84:	and	r0, r0, #255	; 0xff
   11a88:	cmp	r0, #0
   11a8c:	movw	r0, #0
   11a90:	str	r0, [sp, #4]
   11a94:	beq	11ac0 <error@@Base+0x92c>
   11a98:	ldr	r0, [pc, #60]	; 11adc <error@@Base+0x948>
   11a9c:	add	r0, pc, r0
   11aa0:	ldr	r1, [pc, #56]	; 11ae0 <error@@Base+0x94c>
   11aa4:	add	r1, pc, r1
   11aa8:	ldr	r2, [sp, #8]
   11aac:	bl	10858 <__isoc99_sscanf@plt>
   11ab0:	cmp	r0, #1
   11ab4:	movw	r0, #0
   11ab8:	moveq	r0, #1
   11abc:	str	r0, [sp, #4]
   11ac0:	ldr	r0, [sp, #4]
   11ac4:	tst	r0, #1
   11ac8:	movw	r0, #1
   11acc:	moveq	r0, #0
   11ad0:	and	r0, r0, #255	; 0xff
   11ad4:	mov	sp, fp
   11ad8:	pop	{fp, pc}
   11adc:	andeq	r2, r1, r9, asr #12
   11ae0:	ldrdeq	r1, [r0], -r9
   11ae4:	push	{fp, lr}
   11ae8:	mov	fp, sp
   11aec:	sub	sp, sp, #24
   11af0:	str	r0, [fp, #-4]
   11af4:	str	r1, [fp, #-8]
   11af8:	movw	r0, #0
   11afc:	str	r0, [sp]
   11b00:	ldr	r0, [fp, #-4]
   11b04:	bl	11a14 <error@@Base+0x880>
   11b08:	and	r0, r0, #255	; 0xff
   11b0c:	cmp	r0, #0
   11b10:	beq	11bc0 <error@@Base+0xa2c>
   11b14:	ldr	r0, [fp, #-4]
   11b18:	bl	11a14 <error@@Base+0x880>
   11b1c:	and	r0, r0, #255	; 0xff
   11b20:	cmp	r0, #0
   11b24:	beq	11bc0 <error@@Base+0xa2c>
   11b28:	b	11b2c <error@@Base+0x998>
   11b2c:	ldr	r0, [fp, #-4]
   11b30:	add	r1, sp, #12
   11b34:	add	r2, sp, #8
   11b38:	bl	12270 <error@@Base+0x10dc>
   11b3c:	sxtb	r0, r0
   11b40:	cmp	r0, #0
   11b44:	beq	11bbc <error@@Base+0xa28>
   11b48:	ldr	r0, [pc, #124]	; 11bcc <error@@Base+0xa38>
   11b4c:	add	r0, pc, r0
   11b50:	add	r0, r0, #29
   11b54:	bl	10888 <atoi@plt>
   11b58:	str	r0, [sp, #4]
   11b5c:	ldr	r0, [sp, #4]
   11b60:	cmp	r0, #0
   11b64:	bne	11ba0 <error@@Base+0xa0c>
   11b68:	ldr	r0, [pc, #96]	; 11bd0 <error@@Base+0xa3c>
   11b6c:	add	r0, pc, r0
   11b70:	add	r0, r0, #29
   11b74:	ldr	r1, [pc, #88]	; 11bd4 <error@@Base+0xa40>
   11b78:	add	r1, pc, r1
   11b7c:	bl	107c8 <strcmp@plt>
   11b80:	cmp	r0, #0
   11b84:	bne	11b94 <error@@Base+0xa00>
   11b88:	ldr	r0, [sp, #12]
   11b8c:	str	r0, [sp]
   11b90:	b	11b9c <error@@Base+0xa08>
   11b94:	movw	r0, #11
   11b98:	str	r0, [sp, #4]
   11b9c:	b	11ba0 <error@@Base+0xa0c>
   11ba0:	ldr	r0, [fp, #-8]
   11ba4:	ldr	r1, [sp, #4]
   11ba8:	add	r0, r0, r1, lsl #3
   11bac:	ldr	r1, [sp, #12]
   11bb0:	ldr	r2, [sp, #8]
   11bb4:	bl	116e0 <error@@Base+0x54c>
   11bb8:	b	11b2c <error@@Base+0x998>
   11bbc:	b	11bc0 <error@@Base+0xa2c>
   11bc0:	ldr	r0, [sp]
   11bc4:	mov	sp, fp
   11bc8:	pop	{fp, pc}
   11bcc:	muleq	r1, r9, r5
   11bd0:	andeq	r2, r1, r9, ror r5
   11bd4:	strdeq	r1, [r0], -r9
   11bd8:	push	{fp, lr}
   11bdc:	mov	fp, sp
   11be0:	sub	sp, sp, #24
   11be4:	str	r0, [fp, #-4]
   11be8:	str	r1, [fp, #-8]
   11bec:	ldr	r0, [fp, #-4]
   11bf0:	bl	11a14 <error@@Base+0x880>
   11bf4:	and	r0, r0, #255	; 0xff
   11bf8:	cmp	r0, #0
   11bfc:	beq	11c88 <error@@Base+0xaf4>
   11c00:	ldr	r0, [fp, #-4]
   11c04:	bl	11a14 <error@@Base+0x880>
   11c08:	and	r0, r0, #255	; 0xff
   11c0c:	cmp	r0, #0
   11c10:	beq	11c88 <error@@Base+0xaf4>
   11c14:	b	11c18 <error@@Base+0xa84>
   11c18:	ldr	r0, [fp, #-4]
   11c1c:	add	r1, sp, #12
   11c20:	add	r2, sp, #8
   11c24:	bl	12270 <error@@Base+0x10dc>
   11c28:	sxtb	r0, r0
   11c2c:	cmp	r0, #0
   11c30:	beq	11c84 <error@@Base+0xaf0>
   11c34:	ldr	r0, [pc, #84]	; 11c90 <error@@Base+0xafc>
   11c38:	add	r0, pc, r0
   11c3c:	add	r1, r0, #29
   11c40:	ldr	r2, [pc, #76]	; 11c94 <error@@Base+0xb00>
   11c44:	add	r2, pc, r2
   11c48:	str	r0, [sp, #4]
   11c4c:	mov	r0, r2
   11c50:	str	r1, [sp]
   11c54:	bl	10840 <strlen@plt>
   11c58:	sub	r0, r0, #1
   11c5c:	ldr	r1, [sp, #4]
   11c60:	add	r0, r1, r0
   11c64:	movw	r2, #0
   11c68:	strb	r2, [r0]
   11c6c:	ldr	r0, [fp, #-8]
   11c70:	ldr	r2, [sp, #12]
   11c74:	ldr	r3, [sp, #8]
   11c78:	ldr	r1, [sp]
   11c7c:	bl	11720 <error@@Base+0x58c>
   11c80:	b	11c18 <error@@Base+0xa84>
   11c84:	b	11c88 <error@@Base+0xaf4>
   11c88:	mov	sp, fp
   11c8c:	pop	{fp, pc}
   11c90:	andeq	r2, r1, sp, lsr #9
   11c94:	andeq	r2, r1, r1, lsr #9
   11c98:	push	{fp, lr}
   11c9c:	mov	fp, sp
   11ca0:	sub	sp, sp, #40	; 0x28
   11ca4:	ldr	r2, [pc, #532]	; 11ec0 <error@@Base+0xd2c>
   11ca8:	add	r2, pc, r2
   11cac:	ldr	r3, [pc, #528]	; 11ec4 <error@@Base+0xd30>
   11cb0:	ldr	r3, [pc, r3]
   11cb4:	str	r0, [fp, #-4]
   11cb8:	str	r1, [fp, #-8]
   11cbc:	ldr	r0, [fp, #-8]
   11cc0:	mov	r1, r2
   11cc4:	blx	r3
   11cc8:	ldr	r1, [pc, #484]	; 11eb4 <error@@Base+0xd20>
   11ccc:	add	r1, pc, r1
   11cd0:	ldr	r2, [pc, #480]	; 11eb8 <error@@Base+0xd24>
   11cd4:	add	r2, pc, r2
   11cd8:	ldr	r3, [pc, #476]	; 11ebc <error@@Base+0xd28>
   11cdc:	add	r3, pc, r3
   11ce0:	str	r0, [fp, #-12]
   11ce4:	ldr	r0, [fp, #-12]
   11ce8:	bl	1084c <fprintf@plt>
   11cec:	ldr	r1, [pc, #444]	; 11eb0 <error@@Base+0xd1c>
   11cf0:	add	r1, pc, r1
   11cf4:	ldr	r2, [fp, #-12]
   11cf8:	ldr	r3, [fp, #-4]
   11cfc:	ldr	r3, [r3]
   11d00:	str	r0, [fp, #-16]
   11d04:	mov	r0, r2
   11d08:	mov	r2, r3
   11d0c:	bl	1084c <fprintf@plt>
   11d10:	ldr	r1, [pc, #404]	; 11eac <error@@Base+0xd18>
   11d14:	add	r1, pc, r1
   11d18:	ldr	r2, [fp, #-12]
   11d1c:	ldr	r3, [fp, #-4]
   11d20:	ldr	r3, [r3, #4]
   11d24:	str	r0, [sp, #20]
   11d28:	mov	r0, r2
   11d2c:	mov	r2, r3
   11d30:	bl	1084c <fprintf@plt>
   11d34:	ldr	r1, [fp, #-12]
   11d38:	ldr	r2, [fp, #-4]
   11d3c:	str	r0, [sp, #16]
   11d40:	mov	r0, r1
   11d44:	mov	r1, r2
   11d48:	bl	11ed8 <error@@Base+0xd44>
   11d4c:	ldr	r0, [pc, #340]	; 11ea8 <error@@Base+0xd14>
   11d50:	add	r0, pc, r0
   11d54:	ldr	r1, [fp, #-12]
   11d58:	bl	10894 <fputs@plt>
   11d5c:	ldr	r1, [pc, #320]	; 11ea4 <error@@Base+0xd10>
   11d60:	add	r3, pc, r1
   11d64:	ldr	r1, [fp, #-12]
   11d68:	ldr	r2, [fp, #-4]
   11d6c:	add	r2, r2, #8
   11d70:	str	r0, [sp, #12]
   11d74:	mov	r0, r1
   11d78:	mov	r1, r2
   11d7c:	movw	r2, #50	; 0x32
   11d80:	movw	ip, #0
   11d84:	str	ip, [sp]
   11d88:	movw	ip, #1
   11d8c:	str	ip, [sp, #4]
   11d90:	bl	11f78 <error@@Base+0xde4>
   11d94:	ldr	r0, [pc, #260]	; 11ea0 <error@@Base+0xd0c>
   11d98:	add	r3, pc, r0
   11d9c:	ldr	r0, [fp, #-12]
   11da0:	ldr	r1, [fp, #-4]
   11da4:	add	r1, r1, #416	; 0x1a0
   11da8:	movw	r2, #50	; 0x32
   11dac:	movw	ip, #0
   11db0:	str	ip, [sp]
   11db4:	movw	ip, #1
   11db8:	str	ip, [sp, #4]
   11dbc:	bl	11f78 <error@@Base+0xde4>
   11dc0:	ldr	r0, [pc, #212]	; 11e9c <error@@Base+0xd08>
   11dc4:	add	r3, pc, r0
   11dc8:	ldr	r0, [fp, #-12]
   11dcc:	ldr	r1, [fp, #-4]
   11dd0:	add	r1, r1, #824	; 0x338
   11dd4:	movw	r2, #10
   11dd8:	movw	ip, #1
   11ddc:	str	ip, [sp]
   11de0:	str	ip, [sp, #4]
   11de4:	bl	11f78 <error@@Base+0xde4>
   11de8:	ldr	r0, [fp, #-4]
   11dec:	ldr	r0, [r0]
   11df0:	cmp	r0, #0
   11df4:	ble	11e78 <error@@Base+0xce4>
   11df8:	ldr	r0, [pc, #200]	; 11ec8 <error@@Base+0xd34>
   11dfc:	add	r3, pc, r0
   11e00:	ldr	r0, [fp, #-12]
   11e04:	ldr	r1, [fp, #-4]
   11e08:	add	r1, r1, #920	; 0x398
   11e0c:	movw	r2, #8
   11e10:	movw	ip, #0
   11e14:	str	ip, [sp]
   11e18:	str	ip, [sp, #4]
   11e1c:	bl	11f78 <error@@Base+0xde4>
   11e20:	ldr	r0, [fp, #-4]
   11e24:	ldr	r0, [r0, #8]
   11e28:	cmp	r0, #0
   11e2c:	ble	11e48 <error@@Base+0xcb4>
   11e30:	ldr	r0, [pc, #148]	; 11ecc <error@@Base+0xd38>
   11e34:	add	r2, pc, r0
   11e38:	ldr	r0, [fp, #-12]
   11e3c:	ldr	r1, [fp, #-4]
   11e40:	add	r1, r1, #992	; 0x3e0
   11e44:	bl	1211c <error@@Base+0xf88>
   11e48:	ldr	r0, [fp, #-4]
   11e4c:	ldr	r0, [r0, #416]	; 0x1a0
   11e50:	cmp	r0, #0
   11e54:	ble	11e74 <error@@Base+0xce0>
   11e58:	ldr	r0, [pc, #112]	; 11ed0 <error@@Base+0xd3c>
   11e5c:	add	r2, pc, r0
   11e60:	ldr	r0, [fp, #-12]
   11e64:	ldr	r1, [fp, #-4]
   11e68:	movw	r3, #9048	; 0x2358
   11e6c:	add	r1, r1, r3
   11e70:	bl	1211c <error@@Base+0xf88>
   11e74:	b	11e78 <error@@Base+0xce4>
   11e78:	ldr	r0, [pc, #84]	; 11ed4 <error@@Base+0xd40>
   11e7c:	ldr	r0, [pc, r0]
   11e80:	ldr	r1, [fp, #-12]
   11e84:	str	r0, [sp, #8]
   11e88:	mov	r0, r1
   11e8c:	ldr	r1, [sp, #8]
   11e90:	blx	r1
   11e94:	mov	sp, fp
   11e98:	pop	{fp, pc}
   11e9c:	andeq	r1, r0, lr, lsl #7
   11ea0:	andeq	r1, r0, r3, asr #7
   11ea4:	andeq	r1, r0, r8, ror #7
   11ea8:	andeq	r1, r0, fp, ror #7
   11eac:	andeq	r1, r0, r1, lsl r4
   11eb0:	andeq	r1, r0, r7, lsr #8
   11eb4:	andeq	r1, r0, r6, asr #8
   11eb8:	andeq	r1, r0, r4, asr #7
   11ebc:	andeq	r1, r0, ip, ror #7
   11ec0:	andeq	r1, r0, r8, ror #8
   11ec4:	andeq	r2, r1, r4, asr #7
   11ec8:	andeq	r1, r0, sp, ror #6
   11ecc:	andeq	r1, r0, r4, lsl r3
   11ed0:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11ed4:	ldrdeq	r2, [r1], -ip
   11ed8:	push	{fp, lr}
   11edc:	mov	fp, sp
   11ee0:	sub	sp, sp, #8
   11ee4:	str	r0, [sp, #4]
   11ee8:	str	r1, [sp]
   11eec:	ldr	r0, [sp]
   11ef0:	ldr	r0, [r0]
   11ef4:	cmp	r0, #0
   11ef8:	bne	11f10 <error@@Base+0xd7c>
   11efc:	ldr	r0, [pc, #112]	; 11f74 <error@@Base+0xde0>
   11f00:	add	r0, pc, r0
   11f04:	ldr	r1, [sp, #4]
   11f08:	bl	10894 <fputs@plt>
   11f0c:	b	11f5c <error@@Base+0xdc8>
   11f10:	ldr	r0, [pc, #88]	; 11f70 <error@@Base+0xddc>
   11f14:	add	r1, pc, r0
   11f18:	vldr	d16, [pc, #72]	; 11f68 <error@@Base+0xdd4>
   11f1c:	ldr	r0, [sp, #4]
   11f20:	ldr	r2, [sp]
   11f24:	ldr	r2, [r2]
   11f28:	ldr	r3, [sp]
   11f2c:	ldr	r3, [r3, #4]
   11f30:	sub	r2, r2, r3
   11f34:	vmov	s0, r2
   11f38:	vcvt.f64.s32	d17, s0
   11f3c:	vmul.f64	d16, d16, d17
   11f40:	ldr	r2, [sp]
   11f44:	ldr	r2, [r2]
   11f48:	vmov	s0, r2
   11f4c:	vcvt.f64.s32	d17, s0
   11f50:	vdiv.f64	d16, d16, d17
   11f54:	vmov	r2, r3, d16
   11f58:	bl	1084c <fprintf@plt>
   11f5c:	mov	sp, fp
   11f60:	pop	{fp, pc}
   11f64:	nop	{0}
   11f68:	andeq	r0, r0, r0
   11f6c:	subsmi	r0, r9, r0
   11f70:	andeq	r1, r0, r6, ror r2
   11f74:	andeq	r1, r0, r1, lsl #5
   11f78:	push	{r4, sl, fp, lr}
   11f7c:	add	fp, sp, #8
   11f80:	sub	sp, sp, #24
   11f84:	ldr	ip, [fp, #12]
   11f88:	ldr	lr, [fp, #8]
   11f8c:	ldr	r4, [pc, #376]	; 1210c <error@@Base+0xf78>
   11f90:	add	r4, pc, r4
   11f94:	str	r0, [fp, #-12]
   11f98:	str	r1, [sp, #16]
   11f9c:	strh	r2, [sp, #14]
   11fa0:	str	r3, [sp, #8]
   11fa4:	strb	lr, [sp, #7]
   11fa8:	strb	ip, [sp, #6]
   11fac:	ldr	r0, [fp, #-12]
   11fb0:	ldr	r2, [sp, #8]
   11fb4:	mov	r1, r4
   11fb8:	bl	1084c <fprintf@plt>
   11fbc:	ldr	r1, [fp, #-12]
   11fc0:	str	r0, [sp]
   11fc4:	mov	r0, r1
   11fc8:	movw	r1, #0
   11fcc:	bl	122f4 <error@@Base+0x1160>
   11fd0:	ldr	r0, [pc, #296]	; 12100 <error@@Base+0xf6c>
   11fd4:	add	r1, pc, r0
   11fd8:	ldr	r0, [pc, #292]	; 12104 <error@@Base+0xf70>
   11fdc:	add	r0, pc, r0
   11fe0:	ldr	r2, [pc, #288]	; 12108 <error@@Base+0xf74>
   11fe4:	add	r2, pc, r2
   11fe8:	ldr	r3, [fp, #-12]
   11fec:	ldrb	ip, [sp, #7]
   11ff0:	cmp	ip, #0
   11ff4:	movw	ip, #0
   11ff8:	movne	ip, #1
   11ffc:	tst	ip, #1
   12000:	movne	r2, r0
   12004:	mov	r0, r3
   12008:	bl	1084c <fprintf@plt>
   1200c:	movw	r1, #1
   12010:	strh	r1, [sp, #4]
   12014:	ldrsh	r0, [sp, #4]
   12018:	ldrsh	r1, [sp, #14]
   1201c:	cmp	r0, r1
   12020:	bgt	1207c <error@@Base+0xee8>
   12024:	ldr	r0, [sp, #16]
   12028:	ldrsh	r1, [sp, #4]
   1202c:	add	r0, r0, r1, lsl #3
   12030:	ldr	r0, [r0]
   12034:	cmp	r0, #0
   12038:	ble	12064 <error@@Base+0xed0>
   1203c:	ldr	r0, [fp, #-12]
   12040:	ldr	r1, [sp, #16]
   12044:	ldrsh	r2, [sp, #4]
   12048:	add	r1, r1, r2, lsl #3
   1204c:	bl	122f4 <error@@Base+0x1160>
   12050:	ldr	r0, [pc, #192]	; 12118 <error@@Base+0xf84>
   12054:	add	r1, pc, r0
   12058:	ldr	r0, [fp, #-12]
   1205c:	ldrsh	r2, [sp, #4]
   12060:	bl	1084c <fprintf@plt>
   12064:	b	12068 <error@@Base+0xed4>
   12068:	ldrh	r0, [sp, #4]
   1206c:	movw	r1, #1
   12070:	add	r0, r0, r1
   12074:	strh	r0, [sp, #4]
   12078:	b	12014 <error@@Base+0xe80>
   1207c:	ldrb	r0, [sp, #7]
   12080:	cmp	r0, #0
   12084:	beq	120d0 <error@@Base+0xf3c>
   12088:	ldr	r0, [sp, #16]
   1208c:	ldrsh	r1, [sp, #14]
   12090:	add	r1, r1, #1
   12094:	add	r0, r0, r1, lsl #3
   12098:	ldr	r0, [r0]
   1209c:	cmp	r0, #0
   120a0:	ble	120d0 <error@@Base+0xf3c>
   120a4:	ldr	r0, [fp, #-12]
   120a8:	ldr	r1, [sp, #16]
   120ac:	ldrsh	r2, [sp, #14]
   120b0:	add	r2, r2, #1
   120b4:	add	r1, r1, r2, lsl #3
   120b8:	bl	122f4 <error@@Base+0x1160>
   120bc:	ldr	r0, [pc, #76]	; 12110 <error@@Base+0xf7c>
   120c0:	add	r1, pc, r0
   120c4:	ldr	r0, [fp, #-12]
   120c8:	ldrsh	r2, [sp, #14]
   120cc:	bl	1084c <fprintf@plt>
   120d0:	ldrsb	r0, [sp, #6]
   120d4:	cmp	r0, #0
   120d8:	beq	120f8 <error@@Base+0xf64>
   120dc:	ldr	r0, [fp, #-12]
   120e0:	ldr	r1, [sp, #16]
   120e4:	bl	122f4 <error@@Base+0x1160>
   120e8:	ldr	r0, [pc, #36]	; 12114 <error@@Base+0xf80>
   120ec:	add	r0, pc, r0
   120f0:	ldr	r1, [fp, #-12]
   120f4:	bl	10894 <fputs@plt>
   120f8:	sub	sp, fp, #8
   120fc:	pop	{r4, sl, fp, pc}
   12100:			; <UNDEFINED> instruction: 0x000011bd
   12104:			; <UNDEFINED> instruction: 0x000011b9
   12108:			; <UNDEFINED> instruction: 0x000011b8
   1210c:	andeq	r1, r0, r0, lsl #4
   12110:	andeq	r1, r0, ip, ror #1
   12114:	andeq	r1, r0, r5, lsl #1
   12118:	andeq	r1, r0, pc, asr #2
   1211c:	push	{fp, lr}
   12120:	mov	fp, sp
   12124:	sub	sp, sp, #40	; 0x28
   12128:	ldr	r3, [pc, #312]	; 12268 <error@@Base+0x10d4>
   1212c:	ldr	r3, [pc, r3]
   12130:	str	r0, [fp, #-4]
   12134:	str	r1, [fp, #-8]
   12138:	str	r2, [fp, #-12]
   1213c:	ldr	r0, [fp, #-8]
   12140:	blx	r3
   12144:	ldr	r0, [pc, #276]	; 12260 <error@@Base+0x10cc>
   12148:	add	r0, pc, r0
   1214c:	ldr	r1, [pc, #272]	; 12264 <error@@Base+0x10d0>
   12150:	ldr	r1, [pc, r1]
   12154:	ldr	r2, [fp, #-8]
   12158:	movw	r3, #8052	; 0x1f74
   1215c:	add	r2, r2, r3
   12160:	ldr	r2, [r2]
   12164:	ldr	r3, [fp, #-8]
   12168:	movw	ip, #8048	; 0x1f70
   1216c:	add	r3, r3, ip
   12170:	ldr	r3, [r3]
   12174:	str	r0, [sp, #20]
   12178:	mov	r0, r2
   1217c:	str	r1, [sp, #16]
   12180:	mov	r1, r3
   12184:	ldr	r2, [sp, #20]
   12188:	ldr	r3, [sp, #16]
   1218c:	blx	r3
   12190:	ldr	r0, [pc, #196]	; 1225c <error@@Base+0x10c8>
   12194:	add	r1, pc, r0
   12198:	ldr	r0, [fp, #-4]
   1219c:	ldr	r2, [fp, #-12]
   121a0:	bl	1084c <fprintf@plt>
   121a4:	ldr	r1, [fp, #-4]
   121a8:	str	r0, [sp, #12]
   121ac:	mov	r0, r1
   121b0:	movw	r1, #0
   121b4:	bl	122f4 <error@@Base+0x1160>
   121b8:	ldr	r1, [fp, #-4]
   121bc:	movw	r0, #10
   121c0:	bl	10870 <fputc@plt>
   121c4:	movw	r1, #0
   121c8:	str	r1, [fp, #-16]
   121cc:	ldr	r0, [fp, #-16]
   121d0:	ldr	r1, [fp, #-8]
   121d4:	movw	r2, #8052	; 0x1f74
   121d8:	add	r1, r1, r2
   121dc:	ldr	r1, [r1]
   121e0:	cmp	r0, r1
   121e4:	bge	12254 <error@@Base+0x10c0>
   121e8:	ldr	r0, [pc, #124]	; 1226c <error@@Base+0x10d8>
   121ec:	add	r1, pc, r0
   121f0:	ldr	r0, [fp, #-4]
   121f4:	ldr	r2, [fp, #-8]
   121f8:	movw	r3, #8048	; 0x1f70
   121fc:	ldr	r2, [r2, r3]
   12200:	ldr	ip, [fp, #-16]
   12204:	ldr	r2, [r2, ip, lsl #2]
   12208:	add	r2, r2, #12
   1220c:	str	r1, [sp, #8]
   12210:	mov	r1, r2
   12214:	str	r3, [sp, #4]
   12218:	bl	122f4 <error@@Base+0x1160>
   1221c:	ldr	r0, [fp, #-4]
   12220:	ldr	r1, [fp, #-8]
   12224:	ldr	r2, [sp, #4]
   12228:	ldr	r1, [r1, r2]
   1222c:	ldr	r3, [fp, #-16]
   12230:	add	r1, r1, r3, lsl #2
   12234:	ldr	r1, [r1]
   12238:	ldr	r2, [r1, #8]
   1223c:	ldr	r1, [sp, #8]
   12240:	bl	1084c <fprintf@plt>
   12244:	ldr	r0, [fp, #-16]
   12248:	add	r0, r0, #1
   1224c:	str	r0, [fp, #-16]
   12250:	b	121cc <error@@Base+0x1038>
   12254:	mov	sp, fp
   12258:	pop	{fp, pc}
   1225c:	strdeq	r0, [r0], -ip
   12260:	andeq	r0, r0, r8, lsr r2
   12264:	andeq	r1, r1, ip, lsr #30
   12268:	andeq	r1, r1, ip, asr pc
   1226c:	andeq	r0, r0, r5, lsr #31
   12270:	push	{fp, lr}
   12274:	mov	fp, sp
   12278:	sub	sp, sp, #16
   1227c:	str	r0, [fp, #-4]
   12280:	str	r1, [sp, #8]
   12284:	str	r2, [sp, #4]
   12288:	ldr	r0, [fp, #-4]
   1228c:	bl	11a14 <error@@Base+0x880>
   12290:	and	r0, r0, #255	; 0xff
   12294:	cmp	r0, #0
   12298:	movw	r0, #0
   1229c:	str	r0, [sp]
   122a0:	beq	122d0 <error@@Base+0x113c>
   122a4:	ldr	r0, [pc, #64]	; 122ec <error@@Base+0x1158>
   122a8:	add	r0, pc, r0
   122ac:	ldr	r1, [pc, #60]	; 122f0 <error@@Base+0x115c>
   122b0:	add	r1, pc, r1
   122b4:	ldr	r2, [sp, #8]
   122b8:	ldr	r3, [sp, #4]
   122bc:	bl	10858 <__isoc99_sscanf@plt>
   122c0:	cmp	r0, #2
   122c4:	movw	r0, #0
   122c8:	moveq	r0, #1
   122cc:	str	r0, [sp]
   122d0:	ldr	r0, [sp]
   122d4:	tst	r0, #1
   122d8:	movw	r0, #1
   122dc:	moveq	r0, #0
   122e0:	and	r0, r0, #255	; 0xff
   122e4:	mov	sp, fp
   122e8:	pop	{fp, pc}
   122ec:	andeq	r1, r1, sp, lsr lr
   122f0:	andeq	r0, r0, r9, asr #29
   122f4:	push	{fp, lr}
   122f8:	mov	fp, sp
   122fc:	sub	sp, sp, #16
   12300:	str	r0, [fp, #-4]
   12304:	str	r1, [sp, #8]
   12308:	ldr	r0, [sp, #8]
   1230c:	movw	r1, #0
   12310:	cmp	r0, r1
   12314:	beq	12354 <error@@Base+0x11c0>
   12318:	ldr	r0, [pc, #96]	; 12380 <error@@Base+0x11ec>
   1231c:	add	r1, pc, r0
   12320:	ldr	r0, [fp, #-4]
   12324:	ldr	r2, [sp, #8]
   12328:	ldr	r2, [r2]
   1232c:	ldr	r3, [sp, #8]
   12330:	ldr	r3, [r3, #4]
   12334:	bl	1084c <fprintf@plt>
   12338:	ldr	r1, [fp, #-4]
   1233c:	ldr	r2, [sp, #8]
   12340:	str	r0, [sp, #4]
   12344:	mov	r0, r1
   12348:	mov	r1, r2
   1234c:	bl	11ed8 <error@@Base+0xd44>
   12350:	b	12364 <error@@Base+0x11d0>
   12354:	ldr	r0, [pc, #32]	; 1237c <error@@Base+0x11e8>
   12358:	add	r0, pc, r0
   1235c:	ldr	r1, [fp, #-4]
   12360:	bl	10894 <fputs@plt>
   12364:	ldr	r0, [pc, #24]	; 12384 <error@@Base+0x11f0>
   12368:	add	r0, pc, r0
   1236c:	ldr	r1, [fp, #-4]
   12370:	bl	10894 <fputs@plt>
   12374:	mov	sp, fp
   12378:	pop	{fp, pc}
   1237c:	andeq	r0, r0, r8, ror #28
   12380:	muleq	r0, r9, lr
   12384:	andeq	r0, r0, r3, ror lr
   12388:	push	{fp, lr}
   1238c:	mov	fp, sp
   12390:	sub	sp, sp, #8
   12394:	ldr	r2, [pc, #36]	; 123c0 <error@@Base+0x122c>
   12398:	ldr	r2, [pc, r2]
   1239c:	str	r0, [sp, #4]
   123a0:	str	r1, [sp]
   123a4:	ldr	r0, [sp, #4]
   123a8:	ldr	r0, [r0, #8]
   123ac:	ldr	r1, [sp]
   123b0:	ldr	r1, [r1, #8]
   123b4:	blx	r2
   123b8:	mov	sp, fp
   123bc:	pop	{fp, pc}
   123c0:	andeq	r1, r1, r0, lsr #26
   123c4:	push	{fp, lr}
   123c8:	mov	fp, sp
   123cc:	sub	sp, sp, #16
   123d0:	str	r0, [fp, #-4]
   123d4:	str	r1, [sp, #8]
   123d8:	str	r2, [sp, #4]
   123dc:	ldr	r0, [fp, #-4]
   123e0:	cmp	r0, #2
   123e4:	bge	123ec <error@@Base+0x1258>
   123e8:	b	1241c <error@@Base+0x1288>
   123ec:	ldr	r0, [pc, #48]	; 12424 <error@@Base+0x1290>
   123f0:	add	r0, pc, r0
   123f4:	ldr	r1, [pc, #44]	; 12428 <error@@Base+0x1294>
   123f8:	add	r1, pc, r1
   123fc:	ldr	r2, [sp, #8]
   12400:	str	r2, [r1]
   12404:	ldr	r1, [sp, #4]
   12408:	str	r1, [r0]
   1240c:	ldr	r0, [fp, #-4]
   12410:	sub	r1, r0, #1
   12414:	movw	r0, #0
   12418:	bl	1242c <error@@Base+0x1298>
   1241c:	mov	sp, fp
   12420:	pop	{fp, pc}
   12424:	andeq	r1, r1, r0, ror #26
   12428:	andeq	r1, r1, r4, asr sp
   1242c:	push	{fp, lr}
   12430:	mov	fp, sp
   12434:	sub	sp, sp, #40	; 0x28
   12438:	str	r0, [fp, #-4]
   1243c:	str	r1, [fp, #-8]
   12440:	ldr	r0, [fp, #-4]
   12444:	str	r0, [fp, #-12]
   12448:	ldr	r0, [fp, #-8]
   1244c:	str	r0, [fp, #-16]
   12450:	ldr	r0, [pc, #500]	; 1264c <error@@Base+0x14b8>
   12454:	ldr	r0, [pc, r0]
   12458:	ldr	r1, [fp, #-12]
   1245c:	add	r0, r0, r1, lsl #2
   12460:	ldr	r0, [r0]
   12464:	str	r0, [sp, #20]
   12468:	ldr	r0, [fp, #-12]
   1246c:	ldr	r1, [fp, #-16]
   12470:	cmp	r0, r1
   12474:	bge	125e0 <error@@Base+0x144c>
   12478:	b	1247c <error@@Base+0x12e8>
   1247c:	ldr	r0, [fp, #-12]
   12480:	ldr	r1, [fp, #-16]
   12484:	cmp	r0, r1
   12488:	movw	r0, #0
   1248c:	str	r0, [sp, #16]
   12490:	bge	124d8 <error@@Base+0x1344>
   12494:	ldr	r0, [pc, #436]	; 12650 <error@@Base+0x14bc>
   12498:	ldr	r0, [pc, r0]
   1249c:	ldr	r1, [sp, #20]
   124a0:	ldr	r2, [pc, #428]	; 12654 <error@@Base+0x14c0>
   124a4:	ldr	r2, [pc, r2]
   124a8:	ldr	r3, [fp, #-16]
   124ac:	add	r2, r2, r3, lsl #2
   124b0:	ldr	r2, [r2]
   124b4:	str	r0, [sp, #12]
   124b8:	mov	r0, r1
   124bc:	mov	r1, r2
   124c0:	ldr	r2, [sp, #12]
   124c4:	blx	r2
   124c8:	cmp	r0, #0
   124cc:	movw	r0, #0
   124d0:	movlt	r0, #1
   124d4:	str	r0, [sp, #16]
   124d8:	ldr	r0, [sp, #16]
   124dc:	tst	r0, #1
   124e0:	beq	124f8 <error@@Base+0x1364>
   124e4:	ldr	r0, [fp, #-16]
   124e8:	mvn	r1, #0
   124ec:	add	r0, r0, r1
   124f0:	str	r0, [fp, #-16]
   124f4:	b	1247c <error@@Base+0x12e8>
   124f8:	ldr	r0, [fp, #-12]
   124fc:	ldr	r1, [fp, #-16]
   12500:	cmp	r0, r1
   12504:	beq	1252c <error@@Base+0x1398>
   12508:	ldr	r0, [pc, #328]	; 12658 <error@@Base+0x14c4>
   1250c:	ldr	r0, [pc, r0]
   12510:	ldr	r1, [fp, #-16]
   12514:	ldr	r1, [r0, r1, lsl #2]
   12518:	ldr	r2, [fp, #-12]
   1251c:	add	r3, r2, #1
   12520:	str	r3, [fp, #-12]
   12524:	add	r0, r0, r2, lsl #2
   12528:	str	r1, [r0]
   1252c:	b	12530 <error@@Base+0x139c>
   12530:	ldr	r0, [fp, #-12]
   12534:	ldr	r1, [fp, #-16]
   12538:	cmp	r0, r1
   1253c:	movw	r0, #0
   12540:	str	r0, [sp, #8]
   12544:	bge	1258c <error@@Base+0x13f8>
   12548:	ldr	r0, [pc, #268]	; 1265c <error@@Base+0x14c8>
   1254c:	ldr	r0, [pc, r0]
   12550:	ldr	r1, [sp, #20]
   12554:	ldr	r2, [pc, #260]	; 12660 <error@@Base+0x14cc>
   12558:	ldr	r2, [pc, r2]
   1255c:	ldr	r3, [fp, #-12]
   12560:	add	r2, r2, r3, lsl #2
   12564:	ldr	r2, [r2]
   12568:	str	r0, [sp, #4]
   1256c:	mov	r0, r1
   12570:	mov	r1, r2
   12574:	ldr	r2, [sp, #4]
   12578:	blx	r2
   1257c:	cmp	r0, #0
   12580:	movw	r0, #0
   12584:	movgt	r0, #1
   12588:	str	r0, [sp, #8]
   1258c:	ldr	r0, [sp, #8]
   12590:	tst	r0, #1
   12594:	beq	125a8 <error@@Base+0x1414>
   12598:	ldr	r0, [fp, #-12]
   1259c:	add	r0, r0, #1
   125a0:	str	r0, [fp, #-12]
   125a4:	b	12530 <error@@Base+0x139c>
   125a8:	ldr	r0, [fp, #-12]
   125ac:	ldr	r1, [fp, #-16]
   125b0:	cmp	r0, r1
   125b4:	beq	125dc <error@@Base+0x1448>
   125b8:	ldr	r0, [pc, #164]	; 12664 <error@@Base+0x14d0>
   125bc:	ldr	r0, [pc, r0]
   125c0:	ldr	r1, [fp, #-12]
   125c4:	ldr	r1, [r0, r1, lsl #2]
   125c8:	ldr	r2, [fp, #-16]
   125cc:	sub	r3, r2, #1
   125d0:	str	r3, [fp, #-16]
   125d4:	add	r0, r0, r2, lsl #2
   125d8:	str	r1, [r0]
   125dc:	b	12468 <error@@Base+0x12d4>
   125e0:	ldr	r0, [sp, #20]
   125e4:	ldr	r1, [pc, #124]	; 12668 <error@@Base+0x14d4>
   125e8:	ldr	r1, [pc, r1]
   125ec:	ldr	r2, [fp, #-16]
   125f0:	add	r1, r1, r2, lsl #2
   125f4:	str	r0, [r1]
   125f8:	ldr	r0, [fp, #-4]
   125fc:	ldr	r1, [fp, #-16]
   12600:	mvn	r2, #0
   12604:	add	r1, r1, r2
   12608:	str	r1, [fp, #-16]
   1260c:	cmp	r0, r1
   12610:	bge	12620 <error@@Base+0x148c>
   12614:	ldr	r0, [fp, #-4]
   12618:	ldr	r1, [fp, #-16]
   1261c:	bl	1242c <error@@Base+0x1298>
   12620:	ldr	r0, [fp, #-12]
   12624:	add	r0, r0, #1
   12628:	str	r0, [fp, #-12]
   1262c:	ldr	r1, [fp, #-8]
   12630:	cmp	r0, r1
   12634:	bge	12644 <error@@Base+0x14b0>
   12638:	ldr	r0, [fp, #-12]
   1263c:	ldr	r1, [fp, #-8]
   12640:	bl	1242c <error@@Base+0x1298>
   12644:	mov	sp, fp
   12648:	pop	{fp, pc}
   1264c:	strdeq	r1, [r1], -r8
   12650:			; <UNDEFINED> instruction: 0x00011cb8
   12654:	andeq	r1, r1, r8, lsr #25
   12658:	andeq	r1, r1, r0, asr #24
   1265c:	andeq	r1, r1, r4, lsl #24
   12660:	strdeq	r1, [r1], -r4
   12664:	muleq	r1, r0, fp
   12668:	andeq	r1, r1, r4, ror #22
   1266c:	push	{fp, lr}
   12670:	mov	fp, sp
   12674:	sub	sp, sp, #16
   12678:	str	r0, [fp, #-4]
   1267c:	movw	r0, #0
   12680:	strh	r0, [fp, #-6]
   12684:	ldrsh	r0, [fp, #-6]
   12688:	movw	r1, #503	; 0x1f7
   1268c:	cmp	r0, r1
   12690:	bge	126cc <error@@Base+0x1538>
   12694:	ldr	r0, [pc, #92]	; 126f8 <error@@Base+0x1564>
   12698:	ldr	r0, [pc, r0]
   1269c:	ldr	r1, [fp, #-4]
   126a0:	ldrsh	r2, [fp, #-6]
   126a4:	add	r1, r1, r2, lsl #4
   126a8:	str	r0, [sp, #4]
   126ac:	mov	r0, r1
   126b0:	ldr	r1, [sp, #4]
   126b4:	blx	r1
   126b8:	ldrh	r0, [fp, #-6]
   126bc:	movw	r1, #1
   126c0:	add	r0, r0, r1
   126c4:	strh	r0, [fp, #-6]
   126c8:	b	12684 <error@@Base+0x14f0>
   126cc:	ldr	r0, [fp, #-4]
   126d0:	movw	r1, #8048	; 0x1f70
   126d4:	add	r0, r0, r1
   126d8:	movw	r1, #0
   126dc:	str	r1, [r0]
   126e0:	ldr	r0, [fp, #-4]
   126e4:	movw	r2, #8052	; 0x1f74
   126e8:	add	r0, r0, r2
   126ec:	str	r1, [r0]
   126f0:	mov	sp, fp
   126f4:	pop	{fp, pc}
   126f8:	andeq	r1, r1, ip, lsl sl
   126fc:	push	{fp, lr}
   12700:	mov	fp, sp
   12704:	sub	sp, sp, #24
   12708:	str	r0, [fp, #-4]
   1270c:	str	r1, [fp, #-8]
   12710:	ldr	r0, [fp, #-4]
   12714:	ldr	r1, [fp, #-8]
   12718:	str	r0, [sp, #8]
   1271c:	mov	r0, r1
   12720:	bl	1279c <error@@Base+0x1608>
   12724:	mov	r1, r0
   12728:	ldr	r2, [sp, #8]
   1272c:	add	r0, r2, r0, lsl #4
   12730:	ldr	r0, [r0]
   12734:	str	r0, [sp, #12]
   12738:	ldr	r0, [sp, #12]
   1273c:	movw	r1, #0
   12740:	cmp	r0, r1
   12744:	movw	r0, #0
   12748:	str	r0, [sp, #4]
   1274c:	beq	12770 <error@@Base+0x15dc>
   12750:	ldr	r0, [fp, #-8]
   12754:	ldr	r1, [sp, #12]
   12758:	ldr	r1, [r1, #8]
   1275c:	bl	107c8 <strcmp@plt>
   12760:	cmp	r0, #0
   12764:	movw	r0, #0
   12768:	movne	r0, #1
   1276c:	str	r0, [sp, #4]
   12770:	ldr	r0, [sp, #4]
   12774:	tst	r0, #1
   12778:	beq	12790 <error@@Base+0x15fc>
   1277c:	b	12780 <error@@Base+0x15ec>
   12780:	ldr	r0, [sp, #12]
   12784:	ldr	r0, [r0, #4]
   12788:	str	r0, [sp, #12]
   1278c:	b	12738 <error@@Base+0x15a4>
   12790:	ldr	r0, [sp, #12]
   12794:	mov	sp, fp
   12798:	pop	{fp, pc}
   1279c:	sub	sp, sp, #16
   127a0:	str	r0, [sp, #12]
   127a4:	ldr	r0, [sp, #12]
   127a8:	str	r0, [sp, #8]
   127ac:	movw	r0, #0
   127b0:	str	r0, [sp]
   127b4:	str	r0, [sp, #4]
   127b8:	ldr	r0, [sp, #8]
   127bc:	ldr	r1, [sp, #4]
   127c0:	add	r0, r0, r1
   127c4:	ldrsb	r0, [r0]
   127c8:	cmp	r0, #0
   127cc:	beq	127fc <error@@Base+0x1668>
   127d0:	ldr	r0, [sp, #8]
   127d4:	ldr	r1, [sp, #4]
   127d8:	add	r0, r0, r1
   127dc:	ldrb	r0, [r0]
   127e0:	ldr	r1, [sp]
   127e4:	add	r0, r1, r0
   127e8:	str	r0, [sp]
   127ec:	ldr	r0, [sp, #4]
   127f0:	add	r0, r0, #1
   127f4:	str	r0, [sp, #4]
   127f8:	b	127b8 <error@@Base+0x1624>
   127fc:	ldr	r0, [sp]
   12800:	movw	r1, #20065	; 0x4e61
   12804:	movt	r1, #33354	; 0x824a
   12808:	smmla	r1, r0, r1, r0
   1280c:	asr	r2, r1, #8
   12810:	add	r1, r2, r1, lsr #31
   12814:	movw	r2, #503	; 0x1f7
   12818:	mls	r0, r1, r2, r0
   1281c:	sxth	r0, r0
   12820:	add	sp, sp, #16
   12824:	bx	lr
   12828:	push	{fp, lr}
   1282c:	mov	fp, sp
   12830:	sub	sp, sp, #24
   12834:	ldr	r2, [pc, #112]	; 128ac <error@@Base+0x1718>
   12838:	ldr	r2, [pc, r2]
   1283c:	str	r0, [fp, #-4]
   12840:	str	r1, [fp, #-8]
   12844:	ldr	r0, [fp, #-4]
   12848:	ldr	r1, [fp, #-8]
   1284c:	ldr	r1, [r1, #8]
   12850:	str	r0, [sp, #12]
   12854:	mov	r0, r1
   12858:	str	r2, [sp, #8]
   1285c:	bl	1279c <error@@Base+0x1608>
   12860:	mov	r1, r0
   12864:	ldr	r2, [sp, #12]
   12868:	add	r0, r2, r0, lsl #4
   1286c:	ldr	r3, [fp, #-8]
   12870:	str	r1, [sp, #4]
   12874:	mov	r1, r3
   12878:	ldr	r3, [sp, #8]
   1287c:	blx	r3
   12880:	ldr	r0, [fp, #-4]
   12884:	bl	128b0 <error@@Base+0x171c>
   12888:	ldr	r0, [fp, #-4]
   1288c:	movw	r1, #8052	; 0x1f74
   12890:	add	r2, r0, r1
   12894:	ldr	r2, [r2]
   12898:	add	r2, r2, #1
   1289c:	add	r0, r0, r1
   128a0:	str	r2, [r0]
   128a4:	mov	sp, fp
   128a8:	pop	{fp, pc}
   128ac:	andeq	r1, r1, ip, lsr #16
   128b0:	push	{fp, lr}
   128b4:	mov	fp, sp
   128b8:	sub	sp, sp, #8
   128bc:	str	r0, [sp, #4]
   128c0:	ldr	r0, [sp, #4]
   128c4:	movw	r1, #8048	; 0x1f70
   128c8:	add	r0, r0, r1
   128cc:	ldr	r0, [r0]
   128d0:	movw	r1, #0
   128d4:	cmp	r0, r1
   128d8:	beq	12904 <error@@Base+0x1770>
   128dc:	ldr	r0, [sp, #4]
   128e0:	movw	r1, #8048	; 0x1f70
   128e4:	add	r0, r0, r1
   128e8:	ldr	r0, [r0]
   128ec:	bl	107e0 <free@plt>
   128f0:	ldr	r0, [sp, #4]
   128f4:	movw	r1, #8048	; 0x1f70
   128f8:	add	r0, r0, r1
   128fc:	movw	r1, #0
   12900:	str	r1, [r0]
   12904:	mov	sp, fp
   12908:	pop	{fp, pc}
   1290c:	push	{fp, lr}
   12910:	mov	fp, sp
   12914:	sub	sp, sp, #24
   12918:	ldr	r2, [pc, #116]	; 12994 <error@@Base+0x1800>
   1291c:	ldr	r2, [pc, r2]
   12920:	str	r0, [fp, #-4]
   12924:	str	r1, [fp, #-8]
   12928:	ldr	r0, [fp, #-4]
   1292c:	ldr	r1, [fp, #-8]
   12930:	ldr	r1, [r1, #8]
   12934:	str	r0, [sp, #12]
   12938:	mov	r0, r1
   1293c:	str	r2, [sp, #8]
   12940:	bl	1279c <error@@Base+0x1608>
   12944:	mov	r1, r0
   12948:	ldr	r2, [sp, #12]
   1294c:	add	r0, r2, r0, lsl #4
   12950:	ldr	r3, [fp, #-8]
   12954:	str	r1, [sp, #4]
   12958:	mov	r1, r3
   1295c:	ldr	r3, [sp, #8]
   12960:	blx	r3
   12964:	ldr	r0, [fp, #-4]
   12968:	bl	128b0 <error@@Base+0x171c>
   1296c:	ldr	r0, [fp, #-4]
   12970:	movw	r1, #8052	; 0x1f74
   12974:	add	r2, r0, r1
   12978:	ldr	r2, [r2]
   1297c:	mvn	r3, #0
   12980:	add	r2, r2, r3
   12984:	add	r0, r0, r1
   12988:	str	r2, [r0]
   1298c:	mov	sp, fp
   12990:	pop	{fp, pc}
   12994:			; <UNDEFINED> instruction: 0x000117b0
   12998:	push	{fp, lr}
   1299c:	mov	fp, sp
   129a0:	sub	sp, sp, #24
   129a4:	str	r0, [fp, #-4]
   129a8:	movw	r0, #0
   129ac:	str	r0, [sp, #8]
   129b0:	ldr	r1, [fp, #-4]
   129b4:	movw	r2, #8048	; 0x1f70
   129b8:	add	r1, r1, r2
   129bc:	ldr	r1, [r1]
   129c0:	cmp	r1, r0
   129c4:	bne	129e0 <error@@Base+0x184c>
   129c8:	ldr	r0, [fp, #-4]
   129cc:	movw	r1, #8052	; 0x1f74
   129d0:	add	r0, r0, r1
   129d4:	ldr	r0, [r0]
   129d8:	cmp	r0, #0
   129dc:	bne	129e4 <error@@Base+0x1850>
   129e0:	b	12aa4 <error@@Base+0x1910>
   129e4:	ldr	r0, [pc, #192]	; 12aac <error@@Base+0x1918>
   129e8:	ldr	r0, [pc, r0]
   129ec:	ldr	r1, [fp, #-4]
   129f0:	movw	r2, #8052	; 0x1f74
   129f4:	add	r1, r1, r2
   129f8:	ldr	r1, [r1]
   129fc:	str	r0, [sp, #4]
   12a00:	mov	r0, r1
   12a04:	movw	r1, #4
   12a08:	ldr	r2, [sp, #4]
   12a0c:	blx	r2
   12a10:	ldr	r1, [fp, #-4]
   12a14:	movw	r2, #8048	; 0x1f70
   12a18:	add	r1, r1, r2
   12a1c:	str	r0, [r1]
   12a20:	movw	r0, #0
   12a24:	str	r0, [sp, #12]
   12a28:	ldr	r0, [sp, #12]
   12a2c:	movw	r1, #503	; 0x1f7
   12a30:	cmp	r0, r1
   12a34:	bge	12aa4 <error@@Base+0x1910>
   12a38:	ldr	r0, [fp, #-4]
   12a3c:	ldr	r1, [sp, #12]
   12a40:	add	r0, r0, r1, lsl #4
   12a44:	ldr	r0, [r0]
   12a48:	str	r0, [fp, #-8]
   12a4c:	ldr	r0, [fp, #-8]
   12a50:	movw	r1, #0
   12a54:	cmp	r0, r1
   12a58:	beq	12a90 <error@@Base+0x18fc>
   12a5c:	ldr	r0, [fp, #-8]
   12a60:	ldr	r1, [fp, #-4]
   12a64:	movw	r2, #8048	; 0x1f70
   12a68:	ldr	r1, [r1, r2]
   12a6c:	ldr	r2, [sp, #8]
   12a70:	add	r3, r2, #1
   12a74:	str	r3, [sp, #8]
   12a78:	add	r1, r1, r2, lsl #2
   12a7c:	str	r0, [r1]
   12a80:	ldr	r0, [fp, #-8]
   12a84:	ldr	r0, [r0, #4]
   12a88:	str	r0, [fp, #-8]
   12a8c:	b	12a4c <error@@Base+0x18b8>
   12a90:	b	12a94 <error@@Base+0x1900>
   12a94:	ldr	r0, [sp, #12]
   12a98:	add	r0, r0, #1
   12a9c:	str	r0, [sp, #12]
   12aa0:	b	12a28 <error@@Base+0x1894>
   12aa4:	mov	sp, fp
   12aa8:	pop	{fp, pc}
   12aac:	ldrdeq	r1, [r1], -r8
   12ab0:	push	{fp, lr}
   12ab4:	mov	fp, sp
   12ab8:	sub	sp, sp, #16
   12abc:	str	r0, [fp, #-4]
   12ac0:	str	r1, [sp, #8]
   12ac4:	movw	r0, #0
   12ac8:	strh	r0, [sp, #6]
   12acc:	ldrsh	r0, [sp, #6]
   12ad0:	movw	r1, #503	; 0x1f7
   12ad4:	cmp	r0, r1
   12ad8:	bge	12b1c <error@@Base+0x1988>
   12adc:	ldr	r0, [pc, #92]	; 12b40 <error@@Base+0x19ac>
   12ae0:	ldr	r0, [pc, r0]
   12ae4:	ldr	r1, [fp, #-4]
   12ae8:	ldrsh	r2, [sp, #6]
   12aec:	add	r1, r1, r2, lsl #4
   12af0:	ldr	r2, [sp, #8]
   12af4:	str	r0, [sp]
   12af8:	mov	r0, r1
   12afc:	mov	r1, r2
   12b00:	ldr	r2, [sp]
   12b04:	blx	r2
   12b08:	ldrh	r0, [sp, #6]
   12b0c:	movw	r1, #1
   12b10:	add	r0, r0, r1
   12b14:	strh	r0, [sp, #6]
   12b18:	b	12acc <error@@Base+0x1938>
   12b1c:	ldr	r0, [fp, #-4]
   12b20:	bl	128b0 <error@@Base+0x171c>
   12b24:	ldr	r0, [fp, #-4]
   12b28:	movw	r1, #8052	; 0x1f74
   12b2c:	add	r0, r0, r1
   12b30:	movw	r1, #0
   12b34:	str	r1, [r0]
   12b38:	mov	sp, fp
   12b3c:	pop	{fp, pc}
   12b40:	andeq	r1, r1, r8, ror #11
   12b44:	sub	sp, sp, #4
   12b48:	str	r0, [sp]
   12b4c:	ldr	r0, [sp]
   12b50:	movw	r1, #0
   12b54:	str	r1, [r0, #4]
   12b58:	ldr	r0, [sp]
   12b5c:	str	r1, [r0]
   12b60:	ldr	r0, [sp]
   12b64:	str	r1, [r0, #8]
   12b68:	ldr	r0, [sp]
   12b6c:	str	r1, [r0, #12]
   12b70:	add	sp, sp, #4
   12b74:	bx	lr
   12b78:	push	{fp, lr}
   12b7c:	mov	fp, sp
   12b80:	sub	sp, sp, #8
   12b84:	str	r0, [sp, #4]
   12b88:	str	r1, [sp]
   12b8c:	ldr	r0, [sp, #4]
   12b90:	ldr	r2, [sp]
   12b94:	ldr	r1, [sp, #4]
   12b98:	ldr	r3, [r1]
   12b9c:	movw	r1, #0
   12ba0:	bl	12bac <error@@Base+0x1a18>
   12ba4:	mov	sp, fp
   12ba8:	pop	{fp, pc}
   12bac:	push	{fp, lr}
   12bb0:	mov	fp, sp
   12bb4:	sub	sp, sp, #16
   12bb8:	str	r0, [fp, #-4]
   12bbc:	str	r1, [sp, #8]
   12bc0:	str	r2, [sp, #4]
   12bc4:	str	r3, [sp]
   12bc8:	ldr	r0, [sp, #8]
   12bcc:	ldr	r1, [sp, #4]
   12bd0:	str	r0, [r1]
   12bd4:	ldr	r0, [sp]
   12bd8:	ldr	r1, [sp, #4]
   12bdc:	str	r0, [r1, #4]
   12be0:	ldr	r0, [sp, #8]
   12be4:	movw	r1, #0
   12be8:	cmp	r0, r1
   12bec:	beq	12c00 <error@@Base+0x1a6c>
   12bf0:	ldr	r0, [sp, #4]
   12bf4:	ldr	r1, [sp, #8]
   12bf8:	str	r0, [r1, #4]
   12bfc:	b	12c0c <error@@Base+0x1a78>
   12c00:	ldr	r0, [sp, #4]
   12c04:	ldr	r1, [fp, #-4]
   12c08:	str	r0, [r1]
   12c0c:	ldr	r0, [sp]
   12c10:	movw	r1, #0
   12c14:	cmp	r0, r1
   12c18:	beq	12c2c <error@@Base+0x1a98>
   12c1c:	ldr	r0, [sp, #4]
   12c20:	ldr	r1, [sp]
   12c24:	str	r0, [r1]
   12c28:	b	12c38 <error@@Base+0x1aa4>
   12c2c:	ldr	r0, [sp, #4]
   12c30:	ldr	r1, [fp, #-4]
   12c34:	str	r0, [r1, #4]
   12c38:	ldr	r0, [fp, #-4]
   12c3c:	bl	12dc0 <error@@Base+0x1c2c>
   12c40:	ldr	r0, [fp, #-4]
   12c44:	ldr	r1, [r0, #12]
   12c48:	add	r1, r1, #1
   12c4c:	str	r1, [r0, #12]
   12c50:	mov	sp, fp
   12c54:	pop	{fp, pc}
   12c58:	push	{fp, lr}
   12c5c:	mov	fp, sp
   12c60:	sub	sp, sp, #8
   12c64:	str	r0, [sp, #4]
   12c68:	str	r1, [sp]
   12c6c:	ldr	r0, [sp, #4]
   12c70:	ldr	r1, [sp, #4]
   12c74:	ldr	r1, [r1, #4]
   12c78:	ldr	r2, [sp]
   12c7c:	movw	r3, #0
   12c80:	bl	12bac <error@@Base+0x1a18>
   12c84:	mov	sp, fp
   12c88:	pop	{fp, pc}
   12c8c:	push	{fp, lr}
   12c90:	mov	fp, sp
   12c94:	sub	sp, sp, #16
   12c98:	str	r0, [fp, #-4]
   12c9c:	str	r1, [sp, #8]
   12ca0:	str	r2, [sp, #4]
   12ca4:	ldr	r0, [fp, #-4]
   12ca8:	ldr	r1, [sp, #4]
   12cac:	ldr	r1, [r1]
   12cb0:	ldr	r2, [sp, #8]
   12cb4:	ldr	r3, [sp, #4]
   12cb8:	bl	12bac <error@@Base+0x1a18>
   12cbc:	mov	sp, fp
   12cc0:	pop	{fp, pc}
   12cc4:	push	{fp, lr}
   12cc8:	mov	fp, sp
   12ccc:	sub	sp, sp, #16
   12cd0:	str	r0, [fp, #-4]
   12cd4:	str	r1, [sp, #8]
   12cd8:	str	r2, [sp, #4]
   12cdc:	ldr	r0, [fp, #-4]
   12ce0:	ldr	r1, [sp, #8]
   12ce4:	ldr	r2, [sp, #4]
   12ce8:	ldr	r3, [sp, #8]
   12cec:	ldr	r3, [r3, #4]
   12cf0:	bl	12bac <error@@Base+0x1a18>
   12cf4:	mov	sp, fp
   12cf8:	pop	{fp, pc}
   12cfc:	push	{fp, lr}
   12d00:	mov	fp, sp
   12d04:	sub	sp, sp, #8
   12d08:	str	r0, [sp, #4]
   12d0c:	str	r1, [sp]
   12d10:	ldr	r0, [sp]
   12d14:	ldr	r0, [r0]
   12d18:	movw	r1, #0
   12d1c:	cmp	r0, r1
   12d20:	beq	12d3c <error@@Base+0x1ba8>
   12d24:	ldr	r0, [sp]
   12d28:	ldr	r0, [r0, #4]
   12d2c:	ldr	r1, [sp]
   12d30:	ldr	r1, [r1]
   12d34:	str	r0, [r1, #4]
   12d38:	b	12d4c <error@@Base+0x1bb8>
   12d3c:	ldr	r0, [sp]
   12d40:	ldr	r0, [r0, #4]
   12d44:	ldr	r1, [sp, #4]
   12d48:	str	r0, [r1]
   12d4c:	ldr	r0, [sp]
   12d50:	ldr	r0, [r0, #4]
   12d54:	movw	r1, #0
   12d58:	cmp	r0, r1
   12d5c:	beq	12d78 <error@@Base+0x1be4>
   12d60:	ldr	r0, [sp]
   12d64:	ldr	r0, [r0]
   12d68:	ldr	r1, [sp]
   12d6c:	ldr	r1, [r1, #4]
   12d70:	str	r0, [r1]
   12d74:	b	12d88 <error@@Base+0x1bf4>
   12d78:	ldr	r0, [sp]
   12d7c:	ldr	r0, [r0]
   12d80:	ldr	r1, [sp, #4]
   12d84:	str	r0, [r1, #4]
   12d88:	ldr	r0, [sp]
   12d8c:	movw	r1, #0
   12d90:	str	r1, [r0, #4]
   12d94:	ldr	r0, [sp]
   12d98:	str	r1, [r0]
   12d9c:	ldr	r0, [sp, #4]
   12da0:	bl	12dc0 <error@@Base+0x1c2c>
   12da4:	ldr	r0, [sp, #4]
   12da8:	ldr	r1, [r0, #12]
   12dac:	mvn	r2, #0
   12db0:	add	r1, r1, r2
   12db4:	str	r1, [r0, #12]
   12db8:	mov	sp, fp
   12dbc:	pop	{fp, pc}
   12dc0:	push	{fp, lr}
   12dc4:	mov	fp, sp
   12dc8:	sub	sp, sp, #8
   12dcc:	str	r0, [sp, #4]
   12dd0:	ldr	r0, [sp, #4]
   12dd4:	ldr	r0, [r0, #8]
   12dd8:	movw	r1, #0
   12ddc:	cmp	r0, r1
   12de0:	beq	12dfc <error@@Base+0x1c68>
   12de4:	ldr	r0, [sp, #4]
   12de8:	ldr	r0, [r0, #8]
   12dec:	bl	107e0 <free@plt>
   12df0:	ldr	r0, [sp, #4]
   12df4:	movw	r1, #0
   12df8:	str	r1, [r0, #8]
   12dfc:	mov	sp, fp
   12e00:	pop	{fp, pc}
   12e04:	push	{fp, lr}
   12e08:	mov	fp, sp
   12e0c:	sub	sp, sp, #16
   12e10:	str	r0, [fp, #-4]
   12e14:	movw	r0, #0
   12e18:	str	r0, [sp, #4]
   12e1c:	ldr	r1, [fp, #-4]
   12e20:	ldr	r1, [r1, #8]
   12e24:	cmp	r1, r0
   12e28:	bne	12e3c <error@@Base+0x1ca8>
   12e2c:	ldr	r0, [fp, #-4]
   12e30:	ldr	r0, [r0, #12]
   12e34:	cmp	r0, #0
   12e38:	bne	12e40 <error@@Base+0x1cac>
   12e3c:	b	12eb8 <error@@Base+0x1d24>
   12e40:	ldr	r0, [pc, #120]	; 12ec0 <error@@Base+0x1d2c>
   12e44:	ldr	r0, [pc, r0]
   12e48:	ldr	r1, [fp, #-4]
   12e4c:	ldr	r1, [r1, #12]
   12e50:	str	r0, [sp]
   12e54:	mov	r0, r1
   12e58:	movw	r1, #4
   12e5c:	ldr	r2, [sp]
   12e60:	blx	r2
   12e64:	ldr	r1, [fp, #-4]
   12e68:	str	r0, [r1, #8]
   12e6c:	ldr	r0, [fp, #-4]
   12e70:	ldr	r0, [r0]
   12e74:	str	r0, [sp, #8]
   12e78:	ldr	r0, [sp, #8]
   12e7c:	movw	r1, #0
   12e80:	cmp	r0, r1
   12e84:	beq	12eb8 <error@@Base+0x1d24>
   12e88:	ldr	r0, [sp, #8]
   12e8c:	ldr	r1, [fp, #-4]
   12e90:	ldr	r1, [r1, #8]
   12e94:	ldr	r2, [sp, #4]
   12e98:	add	r3, r2, #1
   12e9c:	str	r3, [sp, #4]
   12ea0:	add	r1, r1, r2, lsl #2
   12ea4:	str	r0, [r1]
   12ea8:	ldr	r0, [sp, #8]
   12eac:	ldr	r0, [r0, #4]
   12eb0:	str	r0, [sp, #8]
   12eb4:	b	12e78 <error@@Base+0x1ce4>
   12eb8:	mov	sp, fp
   12ebc:	pop	{fp, pc}
   12ec0:	andeq	r1, r1, ip, ror r2
   12ec4:	push	{fp, lr}
   12ec8:	mov	fp, sp
   12ecc:	sub	sp, sp, #16
   12ed0:	str	r0, [fp, #-4]
   12ed4:	str	r1, [sp, #8]
   12ed8:	ldr	r0, [fp, #-4]
   12edc:	ldr	r0, [r0]
   12ee0:	movw	r1, #0
   12ee4:	cmp	r0, r1
   12ee8:	beq	12f20 <error@@Base+0x1d8c>
   12eec:	ldr	r0, [fp, #-4]
   12ef0:	ldr	r0, [r0]
   12ef4:	str	r0, [sp, #4]
   12ef8:	ldr	r0, [fp, #-4]
   12efc:	ldr	r1, [sp, #4]
   12f00:	bl	12cfc <error@@Base+0x1b68>
   12f04:	ldr	r0, [sp, #8]
   12f08:	ldr	r1, [sp, #4]
   12f0c:	str	r0, [sp]
   12f10:	mov	r0, r1
   12f14:	ldr	r1, [sp]
   12f18:	blx	r1
   12f1c:	b	12ed8 <error@@Base+0x1d44>
   12f20:	mov	sp, fp
   12f24:	pop	{fp, pc}
   12f28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f2c:	mov	r7, r0
   12f30:	ldr	r6, [pc, #72]	; 12f80 <error@@Base+0x1dec>
   12f34:	ldr	r5, [pc, #72]	; 12f84 <error@@Base+0x1df0>
   12f38:	add	r6, pc, r6
   12f3c:	add	r5, pc, r5
   12f40:	sub	r6, r6, r5
   12f44:	mov	r8, r1
   12f48:	mov	r9, r2
   12f4c:	bl	1079c <calloc@plt-0x20>
   12f50:	asrs	r6, r6, #2
   12f54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f58:	mov	r4, #0
   12f5c:	add	r4, r4, #1
   12f60:	ldr	r3, [r5], #4
   12f64:	mov	r2, r9
   12f68:	mov	r1, r8
   12f6c:	mov	r0, r7
   12f70:	blx	r3
   12f74:	cmp	r6, r4
   12f78:	bne	12f5c <error@@Base+0x1dc8>
   12f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f80:			; <UNDEFINED> instruction: 0x00010fbc
   12f84:			; <UNDEFINED> instruction: 0x00010fb4
   12f88:	bx	lr
   12f8c:	mov	r2, r1
   12f90:	mov	r1, r0
   12f94:	mov	r0, #3
   12f98:	b	10804 <__xstat@plt>

Disassembly of section .fini:

00012f9c <.fini>:
   12f9c:	push	{r3, lr}
   12fa0:	pop	{r3, pc}
