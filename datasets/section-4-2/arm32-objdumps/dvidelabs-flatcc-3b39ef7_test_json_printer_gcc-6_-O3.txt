
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123f0 <.init>:
   123f0:	push	{r3, lr}
   123f4:	bl	12668 <_start@@Base+0x3c>
   123f8:	pop	{r3, pc}

Disassembly of section .plt:

000123fc <raise@plt-0x14>:
   123fc:	push	{lr}		; (str lr, [sp, #-4]!)
   12400:	ldr	lr, [pc, #4]	; 1240c <raise@plt-0x4>
   12404:	add	lr, pc, lr
   12408:	ldr	pc, [lr, #8]!
   1240c:	strdeq	r0, [r2], -r4

00012410 <raise@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #32, 20	; 0x20000
   12418:	ldr	pc, [ip, #3060]!	; 0xbf4

0001241c <strcmp@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #32, 20	; 0x20000
   12424:	ldr	pc, [ip, #3052]!	; 0xbec

00012428 <fopen@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #32, 20	; 0x20000
   12430:	ldr	pc, [ip, #3044]!	; 0xbe4

00012434 <memmove@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #32, 20	; 0x20000
   1243c:	ldr	pc, [ip, #3036]!	; 0xbdc

00012440 <free@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #32, 20	; 0x20000
   12448:	ldr	pc, [ip, #3028]!	; 0xbd4

0001244c <memcpy@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #32, 20	; 0x20000
   12454:	ldr	pc, [ip, #3020]!	; 0xbcc

00012458 <ftell@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #32, 20	; 0x20000
   12460:	ldr	pc, [ip, #3012]!	; 0xbc4

00012464 <memcmp@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #32, 20	; 0x20000
   1246c:	ldr	pc, [ip, #3004]!	; 0xbbc

00012470 <rewind@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #32, 20	; 0x20000
   12478:	ldr	pc, [ip, #2996]!	; 0xbb4

0001247c <realloc@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #32, 20	; 0x20000
   12484:	ldr	pc, [ip, #2988]!	; 0xbac

00012488 <fwrite@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #32, 20	; 0x20000
   12490:	ldr	pc, [ip, #2980]!	; 0xba4

00012494 <fread@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #32, 20	; 0x20000
   1249c:	ldr	pc, [ip, #2972]!	; 0xb9c

000124a0 <puts@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #32, 20	; 0x20000
   124a8:	ldr	pc, [ip, #2964]!	; 0xb94

000124ac <malloc@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #32, 20	; 0x20000
   124b4:	ldr	pc, [ip, #2956]!	; 0xb8c

000124b8 <__libc_start_main@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #32, 20	; 0x20000
   124c0:	ldr	pc, [ip, #2948]!	; 0xb84

000124c4 <__gmon_start__@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #32, 20	; 0x20000
   124cc:	ldr	pc, [ip, #2940]!	; 0xb7c

000124d0 <exit@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #32, 20	; 0x20000
   124d8:	ldr	pc, [ip, #2932]!	; 0xb74

000124dc <fprintf@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #32, 20	; 0x20000
   124e4:	ldr	pc, [ip, #2924]!	; 0xb6c

000124e8 <memset@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #32, 20	; 0x20000
   124f0:	ldr	pc, [ip, #2916]!	; 0xb64

000124f4 <strncpy@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #32, 20	; 0x20000
   124fc:	ldr	pc, [ip, #2908]!	; 0xb5c

00012500 <fclose@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #32, 20	; 0x20000
   12508:	ldr	pc, [ip, #2900]!	; 0xb54

0001250c <sprintf@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #32, 20	; 0x20000
   12514:	ldr	pc, [ip, #2892]!	; 0xb4c

00012518 <fseek@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #32, 20	; 0x20000
   12520:	ldr	pc, [ip, #2884]!	; 0xb44

00012524 <abort@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #32, 20	; 0x20000
   1252c:	ldr	pc, [ip, #2876]!	; 0xb3c

00012530 <__assert_fail@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #32, 20	; 0x20000
   12538:	ldr	pc, [ip, #2868]!	; 0xb34

Disassembly of section .text:

00012540 <main@@Base-0x5c>:
   12540:	push	{r4, lr}
   12544:	mov	r2, #260	; 0x104
   12548:	ldr	r3, [pc, #8]	; 12558 <__assert_fail@plt+0x28>
   1254c:	ldr	r1, [pc, #8]	; 1255c <__assert_fail@plt+0x2c>
   12550:	ldr	r0, [pc, #8]	; 12560 <__assert_fail@plt+0x30>
   12554:	bl	12530 <__assert_fail@plt>
   12558:	andeq	r1, r2, r4, lsr r7
   1255c:			; <UNDEFINED> instruction: 0x00021db8
   12560:	andeq	r1, r2, r0, lsl lr
   12564:	ldr	r3, [r0, #36]	; 0x24
   12568:	push	{r4, lr}
   1256c:	cmp	r3, #0
   12570:	moveq	r3, #1
   12574:	streq	r3, [r0, #36]	; 0x24
   12578:	ldr	r2, [pc, #12]	; 1258c <__assert_fail@plt+0x5c>
   1257c:	ldr	r3, [pc, #12]	; 12590 <__assert_fail@plt+0x60>
   12580:	ldr	r1, [pc, #12]	; 12594 <__assert_fail@plt+0x64>
   12584:	ldr	r0, [pc, #12]	; 12598 <__assert_fail@plt+0x68>
   12588:	bl	12530 <__assert_fail@plt>
   1258c:	andeq	r0, r0, r4, lsl #8
   12590:	andeq	r1, r2, r0, ror #14
   12594:	andeq	r1, r2, r8, lsr lr
   12598:	andeq	r1, r2, r4, lsl #29

0001259c <main@@Base>:
   1259c:	push	{r4, r5, r6, lr}
   125a0:	mov	r2, #24
   125a4:	ldr	r6, [pc, #108]	; 12618 <main@@Base+0x7c>
   125a8:	mov	r4, r0
   125ac:	mov	r5, r1
   125b0:	ldr	r3, [r6]
   125b4:	mov	r1, #1
   125b8:	ldr	r0, [pc, #92]	; 1261c <main@@Base+0x80>
   125bc:	bl	12488 <fwrite@plt>
   125c0:	cmp	r4, #1
   125c4:	cmpne	r4, #4
   125c8:	bne	125fc <main@@Base+0x60>
   125cc:	cmp	r4, #4
   125d0:	bne	125f4 <main@@Base+0x58>
   125d4:	ldr	r3, [pc, #68]	; 12620 <main@@Base+0x84>
   125d8:	ldr	r0, [pc, #68]	; 12624 <main@@Base+0x88>
   125dc:	ldr	ip, [r5, #4]
   125e0:	ldr	r1, [r5, #8]
   125e4:	ldr	r2, [r5, #12]
   125e8:	str	ip, [r0]
   125ec:	str	r1, [r3, #4]
   125f0:	str	r2, [r3]
   125f4:	pop	{r4, r5, r6, lr}
   125f8:	b	137d4 <test_print@@Base>
   125fc:	ldr	r3, [r6]
   12600:	mov	r2, #191	; 0xbf
   12604:	mov	r1, #1
   12608:	ldr	r0, [pc, #24]	; 12628 <main@@Base+0x8c>
   1260c:	bl	12488 <fwrite@plt>
   12610:	mov	r0, #1
   12614:	bl	124d0 <exit@plt>
   12618:	andeq	r3, r3, r8, lsl #1
   1261c:	andeq	r1, r2, r4, asr r5
   12620:	andeq	r3, r3, ip, ror r0
   12624:	muleq	r3, r4, r0
   12628:	andeq	r1, r2, r0, ror r5

0001262c <_start@@Base>:
   1262c:	mov	fp, #0
   12630:	mov	lr, #0
   12634:	pop	{r1}		; (ldr r1, [sp], #4)
   12638:	mov	r2, sp
   1263c:	push	{r2}		; (str r2, [sp, #-4]!)
   12640:	push	{r0}		; (str r0, [sp, #-4]!)
   12644:	ldr	ip, [pc, #16]	; 1265c <_start@@Base+0x30>
   12648:	push	{ip}		; (str ip, [sp, #-4]!)
   1264c:	ldr	r0, [pc, #12]	; 12660 <_start@@Base+0x34>
   12650:	ldr	r3, [pc, #12]	; 12664 <_start@@Base+0x38>
   12654:	bl	124b8 <__libc_start_main@plt>
   12658:	bl	12524 <abort@plt>
   1265c:	andeq	r0, r2, ip, asr #29
   12660:	muleq	r1, ip, r5
   12664:	andeq	r0, r2, ip, ror #28
   12668:	ldr	r3, [pc, #20]	; 12684 <_start@@Base+0x58>
   1266c:	ldr	r2, [pc, #20]	; 12688 <_start@@Base+0x5c>
   12670:	add	r3, pc, r3
   12674:	ldr	r2, [r3, r2]
   12678:	cmp	r2, #0
   1267c:	bxeq	lr
   12680:	b	124c4 <__gmon_start__@plt>
   12684:	andeq	r0, r2, r8, lsl #19
   12688:	andeq	r0, r0, r0, ror r0
   1268c:	ldr	r3, [pc, #28]	; 126b0 <_start@@Base+0x84>
   12690:	ldr	r0, [pc, #28]	; 126b4 <_start@@Base+0x88>
   12694:	sub	r3, r3, r0
   12698:	cmp	r3, #6
   1269c:	bxls	lr
   126a0:	ldr	r3, [pc, #16]	; 126b8 <_start@@Base+0x8c>
   126a4:	cmp	r3, #0
   126a8:	bxeq	lr
   126ac:	bx	r3
   126b0:	andeq	r3, r3, r7, lsl #1
   126b4:	andeq	r3, r3, r4, lsl #1
   126b8:	andeq	r0, r0, r0
   126bc:	ldr	r1, [pc, #36]	; 126e8 <_start@@Base+0xbc>
   126c0:	ldr	r0, [pc, #36]	; 126ec <_start@@Base+0xc0>
   126c4:	sub	r1, r1, r0
   126c8:	asr	r1, r1, #2
   126cc:	add	r1, r1, r1, lsr #31
   126d0:	asrs	r1, r1, #1
   126d4:	bxeq	lr
   126d8:	ldr	r3, [pc, #16]	; 126f0 <_start@@Base+0xc4>
   126dc:	cmp	r3, #0
   126e0:	bxeq	lr
   126e4:	bx	r3
   126e8:	andeq	r3, r3, r4, lsl #1
   126ec:	andeq	r3, r3, r4, lsl #1
   126f0:	andeq	r0, r0, r0
   126f4:	push	{r4, lr}
   126f8:	ldr	r4, [pc, #24]	; 12718 <_start@@Base+0xec>
   126fc:	ldrb	r3, [r4]
   12700:	cmp	r3, #0
   12704:	popne	{r4, pc}
   12708:	bl	1268c <_start@@Base+0x60>
   1270c:	mov	r3, #1
   12710:	strb	r3, [r4]
   12714:	pop	{r4, pc}
   12718:	muleq	r3, r0, r0
   1271c:	ldr	r0, [pc, #40]	; 1274c <_start@@Base+0x120>
   12720:	ldr	r3, [r0]
   12724:	cmp	r3, #0
   12728:	bne	12730 <_start@@Base+0x104>
   1272c:	b	126bc <_start@@Base+0x90>
   12730:	ldr	r3, [pc, #24]	; 12750 <_start@@Base+0x124>
   12734:	cmp	r3, #0
   12738:	beq	1272c <_start@@Base+0x100>
   1273c:	push	{r4, lr}
   12740:	blx	r3
   12744:	pop	{r4, lr}
   12748:	b	126bc <_start@@Base+0x90>
   1274c:	andeq	r2, r3, r4, lsl pc
   12750:	andeq	r0, r0, r0
   12754:	bx	lr
   12758:	push	{r4, r5, r6, lr}
   1275c:	sub	sp, sp, #8
   12760:	ldr	r2, [pc, #104]	; 127d0 <_start@@Base+0x1a4>
   12764:	mov	r3, #21
   12768:	str	r2, [sp, #4]
   1276c:	str	r3, [sp]
   12770:	mov	r2, #0
   12774:	ldr	r3, [pc, #88]	; 127d4 <_start@@Base+0x1a8>
   12778:	mov	r4, r0
   1277c:	mov	r5, r1
   12780:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   12784:	ldr	r3, [pc, #76]	; 127d8 <_start@@Base+0x1ac>
   12788:	mov	r6, #22
   1278c:	mov	r1, r5
   12790:	mov	r0, r4
   12794:	str	r3, [sp, #4]
   12798:	str	r6, [sp]
   1279c:	ldr	r3, [pc, #56]	; 127dc <_start@@Base+0x1b0>
   127a0:	mov	r2, #1
   127a4:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   127a8:	ldr	r3, [pc, #48]	; 127e0 <_start@@Base+0x1b4>
   127ac:	str	r6, [sp]
   127b0:	str	r3, [sp, #4]
   127b4:	mov	r1, r5
   127b8:	mov	r0, r4
   127bc:	ldr	r3, [pc, #32]	; 127e4 <_start@@Base+0x1b8>
   127c0:	mov	r2, #2
   127c4:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   127c8:	add	sp, sp, #8
   127cc:	pop	{r4, r5, r6, pc}
   127d0:	ldrdeq	r2, [r1], -ip
   127d4:	strdeq	r0, [r2], -ip
   127d8:	andeq	r2, r1, r8, ror r8
   127dc:	andeq	r1, r2, r4, lsl r0
   127e0:	andeq	r2, r1, r4, lsl r8
   127e4:	andeq	r1, r2, ip, lsr #32
   127e8:	push	{lr}		; (str lr, [sp, #-4]!)
   127ec:	sub	sp, sp, #12
   127f0:	mov	r2, #0
   127f4:	mov	r3, #19
   127f8:	str	r3, [sp]
   127fc:	str	r2, [sp, #4]
   12800:	ldr	r3, [pc, #8]	; 12810 <_start@@Base+0x1e4>
   12804:	bl	17738 <flatcc_json_printer_int32_field@@Base>
   12808:	add	sp, sp, #12
   1280c:	pop	{pc}		; (ldr pc, [sp], #4)
   12810:	andeq	r1, r2, r4, asr #32
   12814:	push	{r4, r5, lr}
   12818:	mov	r4, #0
   1281c:	sub	sp, sp, #20
   12820:	mov	r5, #0
   12824:	mov	r3, #15
   12828:	strd	r4, [sp, #8]
   1282c:	str	r3, [sp]
   12830:	mov	r2, #0
   12834:	ldr	r3, [pc, #52]	; 12870 <_start@@Base+0x244>
   12838:	mov	r4, r0
   1283c:	mov	r5, r1
   12840:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   12844:	mov	r2, #0
   12848:	mov	r3, #21
   1284c:	str	r2, [sp, #4]
   12850:	str	r3, [sp]
   12854:	mov	r1, r5
   12858:	mov	r0, r4
   1285c:	ldr	r3, [pc, #16]	; 12874 <_start@@Base+0x248>
   12860:	mov	r2, #1
   12864:	bl	17098 <flatcc_json_printer_uint32_field@@Base>
   12868:	add	sp, sp, #20
   1286c:	pop	{r4, r5, pc}
   12870:	andeq	r1, r2, r8, asr r0
   12874:	andeq	r1, r2, r8, rrx
   12878:	push	{r4, r5, lr}
   1287c:	mov	r4, #0
   12880:	sub	sp, sp, #20
   12884:	mov	r5, #0
   12888:	mov	r3, #15
   1288c:	strd	r4, [sp, #8]
   12890:	str	r3, [sp]
   12894:	mov	r2, #0
   12898:	ldr	r3, [pc, #52]	; 128d4 <_start@@Base+0x2a8>
   1289c:	mov	r4, r0
   128a0:	mov	r5, r1
   128a4:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   128a8:	mov	r2, #0
   128ac:	mov	r3, #16
   128b0:	str	r2, [sp, #4]
   128b4:	str	r3, [sp]
   128b8:	mov	r1, r5
   128bc:	mov	r0, r4
   128c0:	ldr	r3, [pc, #16]	; 128d8 <_start@@Base+0x2ac>
   128c4:	mov	r2, #1
   128c8:	bl	17098 <flatcc_json_printer_uint32_field@@Base>
   128cc:	add	sp, sp, #20
   128d0:	pop	{r4, r5, pc}
   128d4:	andeq	r1, r2, r8, asr r0
   128d8:	andeq	r1, r2, r0, lsl #1
   128dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128e0:	mov	r2, #0
   128e4:	sub	sp, sp, #20
   128e8:	mov	fp, r2
   128ec:	mov	r7, #4
   128f0:	mov	sl, #9
   128f4:	mov	r4, r0
   128f8:	mov	r5, r1
   128fc:	str	r7, [sp]
   12900:	ldr	r3, [pc, #224]	; 129e8 <_start@@Base+0x3bc>
   12904:	bl	1647c <flatcc_json_printer_string_field@@Base>
   12908:	mov	r8, #0
   1290c:	mov	r9, #0
   12910:	mov	r1, r5
   12914:	mov	r0, r4
   12918:	stm	sp, {sl, fp}
   1291c:	ldr	r3, [pc, #200]	; 129ec <_start@@Base+0x3c0>
   12920:	mov	r2, #1
   12924:	bl	17098 <flatcc_json_printer_uint32_field@@Base>
   12928:	mov	r6, #8
   1292c:	mov	r1, r5
   12930:	mov	r0, r4
   12934:	str	r7, [sp]
   12938:	ldr	r3, [pc, #176]	; 129f0 <_start@@Base+0x3c4>
   1293c:	mov	r2, #2
   12940:	bl	1647c <flatcc_json_printer_string_field@@Base>
   12944:	mov	r1, r5
   12948:	mov	r0, r4
   1294c:	strd	r8, [sp, #8]
   12950:	str	r6, [sp]
   12954:	ldr	r3, [pc, #152]	; 129f4 <_start@@Base+0x3c8>
   12958:	mov	r2, #3
   1295c:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   12960:	mov	r2, r7
   12964:	mov	r1, r5
   12968:	mov	r0, r4
   1296c:	str	r7, [sp]
   12970:	ldr	r3, [pc, #128]	; 129f8 <_start@@Base+0x3cc>
   12974:	bl	1647c <flatcc_json_printer_string_field@@Base>
   12978:	mov	r1, r5
   1297c:	mov	r0, r4
   12980:	strd	r8, [sp, #8]
   12984:	str	r6, [sp]
   12988:	ldr	r3, [pc, #108]	; 129fc <_start@@Base+0x3d0>
   1298c:	mov	r2, #5
   12990:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   12994:	mov	r1, r5
   12998:	mov	r0, r4
   1299c:	stm	sp, {sl, fp}
   129a0:	ldr	r3, [pc, #88]	; 12a00 <_start@@Base+0x3d4>
   129a4:	mov	r2, #6
   129a8:	bl	17098 <flatcc_json_printer_uint32_field@@Base>
   129ac:	mov	r1, r5
   129b0:	mov	r0, r4
   129b4:	strd	r8, [sp, #8]
   129b8:	str	r6, [sp]
   129bc:	ldr	r3, [pc, #64]	; 12a04 <_start@@Base+0x3d8>
   129c0:	mov	r2, #7
   129c4:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   129c8:	stm	sp, {sl, fp}
   129cc:	mov	r2, r6
   129d0:	mov	r1, r5
   129d4:	mov	r0, r4
   129d8:	ldr	r3, [pc, #40]	; 12a08 <_start@@Base+0x3dc>
   129dc:	bl	17098 <flatcc_json_printer_uint32_field@@Base>
   129e0:	add	sp, sp, #20
   129e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129e8:	muleq	r2, r4, r0
   129ec:	muleq	r2, ip, r0
   129f0:	andeq	r1, r2, r8, lsr #1
   129f4:	strheq	r1, [r2], -r0
   129f8:	strheq	r1, [r2], -ip
   129fc:	andeq	r1, r2, r4, asr #1
   12a00:	ldrdeq	r1, [r2], -r0
   12a04:	ldrdeq	r1, [r2], -ip
   12a08:	andeq	r1, r2, r8, ror #1
   12a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a10:	sub	sp, sp, #20
   12a14:	ldr	r3, [pc, #1092]	; 12e60 <_start@@Base+0x834>
   12a18:	mov	r6, #3
   12a1c:	str	r3, [sp, #4]
   12a20:	str	r6, [sp]
   12a24:	ldr	r3, [pc, #1080]	; 12e64 <_start@@Base+0x838>
   12a28:	mov	r2, #0
   12a2c:	mov	r4, r0
   12a30:	mov	r5, r1
   12a34:	mov	r7, #4
   12a38:	bl	2015c <flatcc_json_printer_struct_field@@Base>
   12a3c:	mov	r3, #150	; 0x96
   12a40:	mov	r1, r5
   12a44:	mov	r0, r4
   12a48:	str	r3, [sp, #4]
   12a4c:	str	r7, [sp]
   12a50:	ldr	r3, [pc, #1040]	; 12e68 <_start@@Base+0x83c>
   12a54:	mov	r2, #1
   12a58:	bl	17660 <flatcc_json_printer_int16_field@@Base>
   12a5c:	mov	r2, #2
   12a60:	mov	r3, #100	; 0x64
   12a64:	mov	r1, r5
   12a68:	stm	sp, {r2, r3}
   12a6c:	mov	r0, r4
   12a70:	ldr	r3, [pc, #1012]	; 12e6c <_start@@Base+0x840>
   12a74:	bl	17660 <flatcc_json_printer_int16_field@@Base>
   12a78:	mov	sl, #9
   12a7c:	mov	r2, r6
   12a80:	mov	r1, r5
   12a84:	mov	r0, r4
   12a88:	str	r7, [sp]
   12a8c:	ldr	r3, [pc, #988]	; 12e70 <_start@@Base+0x844>
   12a90:	bl	1647c <flatcc_json_printer_string_field@@Base>
   12a94:	mov	r1, r5
   12a98:	mov	r0, r4
   12a9c:	str	sl, [sp]
   12aa0:	ldr	r3, [pc, #972]	; 12e74 <_start@@Base+0x848>
   12aa4:	mov	r2, #5
   12aa8:	bl	1ae68 <flatcc_json_printer_uint8_vector_field@@Base>
   12aac:	mov	r8, #5
   12ab0:	mov	fp, #8
   12ab4:	ldr	r3, [pc, #956]	; 12e78 <_start@@Base+0x84c>
   12ab8:	mov	r1, r5
   12abc:	mov	r0, r4
   12ac0:	str	r3, [sp, #8]
   12ac4:	stm	sp, {r8, fp}
   12ac8:	ldr	r3, [pc, #940]	; 12e7c <_start@@Base+0x850>
   12acc:	mov	r2, #6
   12ad0:	bl	18050 <flatcc_json_printer_int8_enum_field@@Base>
   12ad4:	ldr	ip, [pc, #932]	; 12e80 <_start@@Base+0x854>
   12ad8:	ldr	r3, [pc, #932]	; 12e84 <_start@@Base+0x858>
   12adc:	mov	r2, fp
   12ae0:	mov	r1, r5
   12ae4:	stmib	sp, {r3, ip}
   12ae8:	mov	r0, r4
   12aec:	str	r7, [sp]
   12af0:	ldr	r3, [pc, #912]	; 12e88 <_start@@Base+0x85c>
   12af4:	bl	1f8e8 <flatcc_json_printer_union_field@@Base>
   12af8:	ldr	r3, [pc, #908]	; 12e8c <_start@@Base+0x860>
   12afc:	mov	r6, #17
   12b00:	mov	r2, sl
   12b04:	mov	r1, r5
   12b08:	mov	r0, r4
   12b0c:	str	r3, [sp, #8]
   12b10:	str	r7, [sp, #4]
   12b14:	str	r8, [sp]
   12b18:	ldr	r3, [pc, #880]	; 12e90 <_start@@Base+0x864>
   12b1c:	bl	1e940 <flatcc_json_printer_struct_vector_field@@Base>
   12b20:	mov	r1, r5
   12b24:	mov	r0, r4
   12b28:	str	r6, [sp]
   12b2c:	ldr	r3, [pc, #864]	; 12e94 <_start@@Base+0x868>
   12b30:	mov	r2, #10
   12b34:	bl	1ed30 <flatcc_json_printer_string_vector_field@@Base>
   12b38:	ldr	r3, [pc, #856]	; 12e98 <_start@@Base+0x86c>
   12b3c:	mov	r1, r5
   12b40:	mov	r0, r4
   12b44:	str	r3, [sp, #4]
   12b48:	str	r6, [sp]
   12b4c:	ldr	r3, [pc, #840]	; 12e9c <_start@@Base+0x870>
   12b50:	mov	r2, #11
   12b54:	bl	1efd4 <flatcc_json_printer_table_vector_field@@Base>
   12b58:	ldr	r3, [pc, #824]	; 12e98 <_start@@Base+0x86c>
   12b5c:	mov	r1, r5
   12b60:	str	r3, [sp, #4]
   12b64:	mov	r0, r4
   12b68:	str	r8, [sp]
   12b6c:	ldr	r3, [pc, #812]	; 12ea0 <_start@@Base+0x874>
   12b70:	mov	r2, #12
   12b74:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   12b78:	ldr	r3, [pc, #792]	; 12e98 <_start@@Base+0x86c>
   12b7c:	mov	r9, #0
   12b80:	str	r3, [sp, #8]
   12b84:	mov	r3, #20
   12b88:	mov	r1, r5
   12b8c:	mov	r0, r4
   12b90:	str	r9, [sp, #4]
   12b94:	str	r3, [sp]
   12b98:	mov	r2, #13
   12b9c:	ldr	r3, [pc, #768]	; 12ea4 <_start@@Base+0x878>
   12ba0:	bl	206d4 <flatcc_json_printer_table_as_nested_root@@Base>
   12ba4:	ldr	r3, [pc, #764]	; 12ea8 <_start@@Base+0x87c>
   12ba8:	str	sl, [sp]
   12bac:	mov	r1, r5
   12bb0:	mov	r0, r4
   12bb4:	str	r3, [sp, #4]
   12bb8:	mov	r2, #14
   12bbc:	ldr	r3, [pc, #744]	; 12eac <_start@@Base+0x880>
   12bc0:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   12bc4:	mov	r3, #1
   12bc8:	mov	sl, #16
   12bcc:	mov	r1, r5
   12bd0:	mov	r0, r4
   12bd4:	str	r3, [sp, #4]
   12bd8:	str	fp, [sp]
   12bdc:	ldr	r3, [pc, #716]	; 12eb0 <_start@@Base+0x884>
   12be0:	mov	r2, #15
   12be4:	bl	178f8 <flatcc_json_printer_bool_field@@Base>
   12be8:	str	r9, [sp, #4]
   12bec:	mov	r1, r5
   12bf0:	mov	r0, r4
   12bf4:	mov	r2, sl
   12bf8:	str	sl, [sp]
   12bfc:	ldr	r3, [pc, #688]	; 12eb4 <_start@@Base+0x888>
   12c00:	bl	17738 <flatcc_json_printer_int32_field@@Base>
   12c04:	str	r9, [sp, #4]
   12c08:	mov	r2, r6
   12c0c:	mov	r1, r5
   12c10:	mov	r0, r4
   12c14:	str	sl, [sp]
   12c18:	ldr	r3, [pc, #664]	; 12eb8 <_start@@Base+0x88c>
   12c1c:	bl	17098 <flatcc_json_printer_uint32_field@@Base>
   12c20:	mov	r2, #0
   12c24:	mov	r3, #0
   12c28:	mov	r1, r5
   12c2c:	strd	r2, [sp, #8]
   12c30:	mov	r0, r4
   12c34:	str	sl, [sp]
   12c38:	ldr	r3, [pc, #636]	; 12ebc <_start@@Base+0x890>
   12c3c:	mov	r2, #18
   12c40:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   12c44:	mov	r2, #0
   12c48:	mov	r3, #0
   12c4c:	mov	r1, r5
   12c50:	strd	r2, [sp, #8]
   12c54:	mov	r0, r4
   12c58:	str	sl, [sp]
   12c5c:	ldr	r3, [pc, #604]	; 12ec0 <_start@@Base+0x894>
   12c60:	mov	r2, #19
   12c64:	bl	172bc <flatcc_json_printer_uint64_field@@Base>
   12c68:	stm	sp, {r6, r9}
   12c6c:	mov	r1, r5
   12c70:	mov	r0, r4
   12c74:	mov	r2, #20
   12c78:	ldr	r3, [pc, #580]	; 12ec4 <_start@@Base+0x898>
   12c7c:	bl	17738 <flatcc_json_printer_int32_field@@Base>
   12c80:	stm	sp, {r6, r9}
   12c84:	mov	r1, r5
   12c88:	mov	r0, r4
   12c8c:	ldr	r3, [pc, #564]	; 12ec8 <_start@@Base+0x89c>
   12c90:	mov	r2, #21
   12c94:	bl	17098 <flatcc_json_printer_uint32_field@@Base>
   12c98:	mov	r2, #0
   12c9c:	mov	r3, #0
   12ca0:	mov	r1, r5
   12ca4:	strd	r2, [sp, #8]
   12ca8:	mov	r0, r4
   12cac:	str	r6, [sp]
   12cb0:	ldr	r3, [pc, #532]	; 12ecc <_start@@Base+0x8a0>
   12cb4:	mov	r2, #22
   12cb8:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   12cbc:	mov	r2, #0
   12cc0:	mov	r3, #0
   12cc4:	mov	r1, r5
   12cc8:	strd	r2, [sp, #8]
   12ccc:	mov	r0, r4
   12cd0:	str	r6, [sp]
   12cd4:	ldr	r3, [pc, #500]	; 12ed0 <_start@@Base+0x8a4>
   12cd8:	mov	r2, #23
   12cdc:	bl	172bc <flatcc_json_printer_uint64_field@@Base>
   12ce0:	mov	r1, r5
   12ce4:	mov	r0, r4
   12ce8:	str	sl, [sp]
   12cec:	ldr	r3, [pc, #480]	; 12ed4 <_start@@Base+0x8a8>
   12cf0:	mov	r2, #24
   12cf4:	bl	1c814 <flatcc_json_printer_bool_vector_field@@Base>
   12cf8:	mov	r9, #6
   12cfc:	mov	r1, r5
   12d00:	mov	r0, r4
   12d04:	str	r8, [sp]
   12d08:	vldr	s0, [pc, #324]	; 12e54 <_start@@Base+0x828>
   12d0c:	ldr	r3, [pc, #452]	; 12ed8 <_start@@Base+0x8ac>
   12d10:	mov	r2, #25
   12d14:	bl	17b58 <flatcc_json_printer_float_field@@Base>
   12d18:	mov	r1, r5
   12d1c:	mov	r0, r4
   12d20:	str	r9, [sp]
   12d24:	vldr	s0, [pc, #300]	; 12e58 <_start@@Base+0x82c>
   12d28:	ldr	r3, [pc, #428]	; 12edc <_start@@Base+0x8b0>
   12d2c:	mov	r2, #26
   12d30:	bl	17b58 <flatcc_json_printer_float_field@@Base>
   12d34:	vldr	s0, [pc, #288]	; 12e5c <_start@@Base+0x830>
   12d38:	mov	r1, r5
   12d3c:	mov	r0, r4
   12d40:	str	r9, [sp]
   12d44:	ldr	r3, [pc, #404]	; 12ee0 <_start@@Base+0x8b4>
   12d48:	mov	r2, #27
   12d4c:	bl	17b58 <flatcc_json_printer_float_field@@Base>
   12d50:	mov	r3, #18
   12d54:	mov	r1, r5
   12d58:	mov	r0, r4
   12d5c:	str	r3, [sp]
   12d60:	mov	r2, #28
   12d64:	ldr	r3, [pc, #376]	; 12ee4 <_start@@Base+0x8b8>
   12d68:	bl	1ed30 <flatcc_json_printer_string_vector_field@@Base>
   12d6c:	ldr	r2, [pc, #372]	; 12ee8 <_start@@Base+0x8bc>
   12d70:	mov	r3, #23
   12d74:	mov	r1, r5
   12d78:	mov	r0, r4
   12d7c:	str	r2, [sp, #8]
   12d80:	str	r3, [sp]
   12d84:	str	fp, [sp, #4]
   12d88:	ldr	r3, [pc, #348]	; 12eec <_start@@Base+0x8c0>
   12d8c:	mov	r2, #29
   12d90:	bl	1e940 <flatcc_json_printer_struct_vector_field@@Base>
   12d94:	mov	r1, r5
   12d98:	mov	r0, r4
   12d9c:	str	r7, [sp]
   12da0:	ldr	r3, [pc, #328]	; 12ef0 <_start@@Base+0x8c4>
   12da4:	mov	r2, #30
   12da8:	bl	1ae68 <flatcc_json_printer_uint8_vector_field@@Base>
   12dac:	ldr	r3, [pc, #216]	; 12e8c <_start@@Base+0x860>
   12db0:	mov	r1, r5
   12db4:	str	r3, [sp, #8]
   12db8:	mov	r0, r4
   12dbc:	str	r7, [sp, #4]
   12dc0:	str	r8, [sp]
   12dc4:	ldr	r3, [pc, #296]	; 12ef4 <_start@@Base+0x8c8>
   12dc8:	mov	r2, #31
   12dcc:	bl	1e940 <flatcc_json_printer_struct_vector_field@@Base>
   12dd0:	mov	r3, #15
   12dd4:	mov	r1, r5
   12dd8:	mov	r0, r4
   12ddc:	str	r3, [sp]
   12de0:	mov	r2, #32
   12de4:	ldr	r3, [pc, #268]	; 12ef8 <_start@@Base+0x8cc>
   12de8:	bl	1c524 <flatcc_json_printer_int64_vector_field@@Base>
   12dec:	mov	r1, r5
   12df0:	mov	r0, r4
   12df4:	str	r6, [sp]
   12df8:	ldr	r3, [pc, #252]	; 12efc <_start@@Base+0x8d0>
   12dfc:	mov	r2, #33	; 0x21
   12e00:	bl	1cdf0 <flatcc_json_printer_double_vector_field@@Base>
   12e04:	ldr	r2, [pc, #244]	; 12f00 <_start@@Base+0x8d4>
   12e08:	mov	r3, #21
   12e0c:	mov	r1, r5
   12e10:	mov	r0, r4
   12e14:	str	r2, [sp, #4]
   12e18:	str	r3, [sp]
   12e1c:	mov	r2, #34	; 0x22
   12e20:	ldr	r3, [pc, #220]	; 12f04 <_start@@Base+0x8d8>
   12e24:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   12e28:	ldr	r2, [pc, #216]	; 12f08 <_start@@Base+0x8dc>
   12e2c:	mov	r3, #10
   12e30:	str	r2, [sp, #4]
   12e34:	str	r3, [sp]
   12e38:	mov	r1, r5
   12e3c:	mov	r0, r4
   12e40:	ldr	r3, [pc, #196]	; 12f0c <_start@@Base+0x8e0>
   12e44:	mov	r2, #35	; 0x23
   12e48:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   12e4c:	add	sp, sp, #20
   12e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e54:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   12e58:	submi	r0, r0, r0
   12e5c:	andeq	r0, r0, r0
   12e60:	andeq	r3, r1, r0, ror r5
   12e64:	strdeq	r1, [r2], -r4
   12e68:	strdeq	r1, [r2], -r8
   12e6c:	andeq	r1, r2, r0, lsl #2
   12e70:	andeq	r1, r2, r4, lsl #2
   12e74:	andeq	r1, r2, ip, lsl #2
   12e78:	andeq	r3, r1, r4, lsr #9
   12e7c:	andeq	r1, r2, r8, lsl r1
   12e80:	ldrdeq	r3, [r1], -r0
   12e84:	andeq	r3, r1, r8, ror r6
   12e88:	andeq	r1, r2, r0, lsr #2
   12e8c:	andeq	r3, r1, r0, ror r0
   12e90:	andeq	r1, r2, r8, lsr #2
   12e94:	andeq	r1, r2, r0, lsr r1
   12e98:	andeq	r2, r1, ip, lsl #20
   12e9c:	andeq	r1, r2, r4, asr #2
   12ea0:	andeq	r1, r2, r8, asr r1
   12ea4:	andeq	r1, r2, r0, ror #2
   12ea8:	strdeq	r2, [r1], -r0
   12eac:	andeq	r1, r2, r8, ror r1
   12eb0:	andeq	r1, r2, r4, lsl #3
   12eb4:	muleq	r2, r0, r1
   12eb8:	andeq	r1, r2, r4, lsr #3
   12ebc:			; <UNDEFINED> instruction: 0x000211b8
   12ec0:	andeq	r1, r2, ip, asr #3
   12ec4:	andeq	r1, r2, r0, ror #3
   12ec8:	strdeq	r1, [r2], -r4
   12ecc:	andeq	r1, r2, r8, lsl #4
   12ed0:	andeq	r1, r2, ip, lsl r2
   12ed4:	andeq	r1, r2, r0, lsr r2
   12ed8:	andeq	r1, r2, r4, asr #4
   12edc:	andeq	r1, r2, ip, asr #4
   12ee0:	andeq	r1, r2, r4, asr r2
   12ee4:	andeq	r1, r2, ip, asr r2
   12ee8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12eec:	andeq	r1, r2, r0, ror r2
   12ef0:	andeq	r1, r2, r8, lsl #5
   12ef4:	muleq	r2, r0, r2
   12ef8:	muleq	r2, r8, r2
   12efc:	andeq	r1, r2, r8, lsr #5
   12f00:	ldrdeq	r3, [r1], -r0
   12f04:			; <UNDEFINED> instruction: 0x000212bc
   12f08:	andeq	r2, r1, r0, lsl pc
   12f0c:	ldrdeq	r1, [r2], -r4
   12f10:	push	{r4, r5, r6, lr}
   12f14:	sub	sp, sp, #8
   12f18:	mov	r4, #0
   12f1c:	mov	r3, #4
   12f20:	mov	r2, r4
   12f24:	str	r3, [sp]
   12f28:	str	r4, [sp, #4]
   12f2c:	ldr	r3, [pc, #80]	; 12f84 <_start@@Base+0x958>
   12f30:	mov	r5, r0
   12f34:	mov	r6, r1
   12f38:	bl	16668 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12f3c:	mov	r2, #1
   12f40:	mov	r3, #7
   12f44:	mov	r1, r6
   12f48:	mov	r0, r5
   12f4c:	str	r2, [sp, #4]
   12f50:	str	r3, [sp]
   12f54:	ldr	r3, [pc, #44]	; 12f88 <_start@@Base+0x95c>
   12f58:	bl	16668 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12f5c:	mov	r3, #6
   12f60:	str	r3, [sp]
   12f64:	str	r4, [sp, #4]
   12f68:	mov	r1, r6
   12f6c:	mov	r0, r5
   12f70:	ldr	r3, [pc, #20]	; 12f8c <_start@@Base+0x960>
   12f74:	mov	r2, #2
   12f78:	bl	16668 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   12f7c:	add	sp, sp, #8
   12f80:	pop	{r4, r5, r6, pc}
   12f84:	ldrdeq	r1, [r2], -r0
   12f88:	andeq	r1, r2, r0, ror #5
   12f8c:	andeq	r1, r2, r8, ror #5
   12f90:	push	{r4, r5, lr}
   12f94:	sub	sp, sp, #12
   12f98:	ldr	ip, [pc, #72]	; 12fe8 <_start@@Base+0x9bc>
   12f9c:	mov	r4, r1
   12fa0:	mov	r3, #0
   12fa4:	mov	r1, #2
   12fa8:	mov	r2, r4
   12fac:	str	ip, [sp]
   12fb0:	str	r1, [sp, #4]
   12fb4:	mov	r1, r3
   12fb8:	mov	r5, r0
   12fbc:	bl	18abc <flatcc_json_printer_uint32_struct_field@@Base>
   12fc0:	ldr	r1, [pc, #36]	; 12fec <_start@@Base+0x9c0>
   12fc4:	mov	r3, #8
   12fc8:	mov	r2, r4
   12fcc:	stm	sp, {r1, r3}
   12fd0:	mov	r0, r5
   12fd4:	mov	r3, #4
   12fd8:	mov	r1, #1
   12fdc:	bl	18abc <flatcc_json_printer_uint32_struct_field@@Base>
   12fe0:	add	sp, sp, #12
   12fe4:	pop	{r4, r5, pc}
   12fe8:	strdeq	r1, [r2], -r0
   12fec:	strdeq	r1, [r2], -r4
   12ff0:	push	{r4, r5, r6, r8, r9, lr}
   12ff4:	sub	sp, sp, #16
   12ff8:	mov	r6, #2
   12ffc:	str	r6, [sp]
   13000:	ldr	r3, [pc, #92]	; 13064 <_start@@Base+0xa38>
   13004:	mov	r2, #0
   13008:	mov	r8, #0
   1300c:	mov	r9, #0
   13010:	mov	r4, r0
   13014:	mov	r5, r1
   13018:	bl	1647c <flatcc_json_printer_string_field@@Base>
   1301c:	mov	r3, #3
   13020:	mov	r1, r5
   13024:	mov	r0, r4
   13028:	str	r3, [sp]
   1302c:	strd	r8, [sp, #8]
   13030:	ldr	r3, [pc, #48]	; 13068 <_start@@Base+0xa3c>
   13034:	mov	r2, #1
   13038:	bl	1780c <flatcc_json_printer_int64_field@@Base>
   1303c:	mov	ip, #0
   13040:	mov	r3, #5
   13044:	mov	r2, r6
   13048:	stm	sp, {r3, ip}
   1304c:	mov	r1, r5
   13050:	mov	r0, r4
   13054:	ldr	r3, [pc, #16]	; 1306c <_start@@Base+0xa40>
   13058:	bl	16e74 <flatcc_json_printer_uint16_field@@Base>
   1305c:	add	sp, sp, #16
   13060:	pop	{r4, r5, r6, r8, r9, pc}
   13064:	strdeq	r1, [r2], -r0
   13068:	andeq	r1, r2, r0, lsl #6
   1306c:	andeq	r1, r2, r4, lsl #6
   13070:	push	{r4, r5, r6, lr}
   13074:	sub	sp, sp, #8
   13078:	ldr	ip, [pc, #72]	; 130c8 <_start@@Base+0xa9c>
   1307c:	mov	r4, #1
   13080:	mov	r3, #0
   13084:	mov	r5, r1
   13088:	mov	r2, r1
   1308c:	str	ip, [sp]
   13090:	mov	r1, r3
   13094:	str	r4, [sp, #4]
   13098:	mov	r6, r0
   1309c:	bl	190a0 <flatcc_json_printer_int16_struct_field@@Base>
   130a0:	ldr	r3, [pc, #36]	; 130cc <_start@@Base+0xaa0>
   130a4:	str	r4, [sp, #4]
   130a8:	str	r3, [sp]
   130ac:	mov	r2, r5
   130b0:	mov	r1, r4
   130b4:	mov	r0, r6
   130b8:	mov	r3, #2
   130bc:	bl	18e28 <flatcc_json_printer_int8_struct_field@@Base>
   130c0:	add	sp, sp, #8
   130c4:	pop	{r4, r5, r6, pc}
   130c8:	strdeq	r1, [r2], -r0
   130cc:	andeq	r1, r2, ip, lsl #6
   130d0:	ldrb	r3, [r1, #8]
   130d4:	sub	r3, r3, #1
   130d8:	cmp	r3, #3
   130dc:	ldrls	pc, [pc, r3, lsl #2]
   130e0:	b	13114 <_start@@Base+0xae8>
   130e4:	andeq	r3, r1, ip, lsl #2
   130e8:	andeq	r3, r1, r4, lsl #2
   130ec:	strdeq	r3, [r1], -ip
   130f0:	strdeq	r3, [r1], -r4
   130f4:	ldr	r2, [pc, #28]	; 13118 <_start@@Base+0xaec>
   130f8:	b	1fc74 <flatcc_json_printer_union_table@@Base>
   130fc:	ldr	r2, [pc, #24]	; 1311c <_start@@Base+0xaf0>
   13100:	b	1fc74 <flatcc_json_printer_union_table@@Base>
   13104:	ldr	r2, [pc, #20]	; 13120 <_start@@Base+0xaf4>
   13108:	b	1fc74 <flatcc_json_printer_union_table@@Base>
   1310c:	ldr	r2, [pc, #16]	; 13124 <_start@@Base+0xaf8>
   13110:	b	1fc74 <flatcc_json_printer_union_table@@Base>
   13114:	bx	lr
   13118:	andeq	r3, r1, r8, lsr #2
   1311c:	andeq	r2, r1, r4, asr r7
   13120:	andeq	r3, r1, r4, lsl #8
   13124:	andeq	r2, r1, ip, lsl #20
   13128:	push	{r4, r5, lr}
   1312c:	sub	sp, sp, #20
   13130:	ldr	r2, [pc, #112]	; 131a8 <_start@@Base+0xb7c>
   13134:	mov	r3, #6
   13138:	str	r2, [sp, #4]
   1313c:	str	r3, [sp]
   13140:	mov	r2, #0
   13144:	ldr	r3, [pc, #96]	; 131ac <_start@@Base+0xb80>
   13148:	mov	r4, r0
   1314c:	mov	r5, r1
   13150:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   13154:	ldr	r2, [pc, #84]	; 131b0 <_start@@Base+0xb84>
   13158:	mov	r3, #5
   1315c:	mov	r1, r5
   13160:	mov	r0, r4
   13164:	str	r2, [sp, #4]
   13168:	str	r3, [sp]
   1316c:	mov	r2, #1
   13170:	ldr	r3, [pc, #60]	; 131b4 <_start@@Base+0xb88>
   13174:	bl	1f634 <flatcc_json_printer_table_field@@Base>
   13178:	ldr	ip, [pc, #56]	; 131b8 <_start@@Base+0xb8c>
   1317c:	ldr	r2, [pc, #56]	; 131bc <_start@@Base+0xb90>
   13180:	mov	r3, #7
   13184:	str	r3, [sp]
   13188:	stmib	sp, {r2, ip}
   1318c:	mov	r1, r5
   13190:	mov	r0, r4
   13194:	ldr	r3, [pc, #36]	; 131c0 <_start@@Base+0xb94>
   13198:	mov	r2, #3
   1319c:	bl	1f31c <flatcc_json_printer_union_vector_field@@Base>
   131a0:	add	sp, sp, #20
   131a4:	pop	{r4, r5, pc}
   131a8:	andeq	r2, r1, r8, asr r7
   131ac:	andeq	r1, r2, r0, lsl r3
   131b0:	andeq	r3, r1, r4, asr #3
   131b4:	andeq	r1, r2, r8, lsl r3
   131b8:	ldrdeq	r3, [r1], -r0
   131bc:	andeq	r3, r1, r8, ror r6
   131c0:	andeq	r1, r2, r0, lsr #6
   131c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   131c8:	mov	r3, #14
   131cc:	ldr	r5, [pc, #160]	; 13274 <_start@@Base+0xc48>
   131d0:	ldr	r4, [pc, #160]	; 13278 <_start@@Base+0xc4c>
   131d4:	sub	sp, sp, #20
   131d8:	mov	r6, r0
   131dc:	mov	r7, r1
   131e0:	stm	sp, {r3, r4, r5}
   131e4:	mov	r9, #10
   131e8:	ldr	r3, [pc, #140]	; 1327c <_start@@Base+0xc50>
   131ec:	mov	r2, #1
   131f0:	bl	1f8e8 <flatcc_json_printer_union_field@@Base>
   131f4:	mov	r8, #9
   131f8:	mov	r1, r7
   131fc:	mov	r0, r6
   13200:	stmib	sp, {r4, r5}
   13204:	str	r9, [sp]
   13208:	ldr	r3, [pc, #112]	; 13280 <_start@@Base+0xc54>
   1320c:	mov	r2, #3
   13210:	bl	1f8e8 <flatcc_json_printer_union_field@@Base>
   13214:	mov	r1, r7
   13218:	mov	r0, r6
   1321c:	stmib	sp, {r4, r5}
   13220:	str	r8, [sp]
   13224:	ldr	r3, [pc, #88]	; 13284 <_start@@Base+0xc58>
   13228:	mov	r2, #5
   1322c:	bl	1f8e8 <flatcc_json_printer_union_field@@Base>
   13230:	mov	r3, #5
   13234:	mov	r1, r7
   13238:	mov	r0, r6
   1323c:	str	r3, [sp]
   13240:	stmib	sp, {r4, r5}
   13244:	ldr	r3, [pc, #60]	; 13288 <_start@@Base+0xc5c>
   13248:	mov	r2, #7
   1324c:	bl	1f8e8 <flatcc_json_printer_union_field@@Base>
   13250:	stmib	sp, {r4, r5}
   13254:	str	r9, [sp]
   13258:	mov	r2, r8
   1325c:	mov	r1, r7
   13260:	mov	r0, r6
   13264:	ldr	r3, [pc, #32]	; 1328c <_start@@Base+0xc60>
   13268:	bl	1f31c <flatcc_json_printer_union_vector_field@@Base>
   1326c:	add	sp, sp, #20
   13270:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13274:	muleq	r1, r0, r2
   13278:	andeq	r3, r1, ip, asr r3
   1327c:	andeq	r1, r2, r8, lsr #6
   13280:	andeq	r1, r2, r8, lsr r3
   13284:	andeq	r1, r2, r4, asr #6
   13288:	andeq	r1, r2, r0, asr r3
   1328c:	andeq	r1, r2, r8, asr r3
   13290:	ldrb	r3, [r1, #8]
   13294:	cmp	r3, #9
   13298:	beq	132d0 <_start@@Base+0xca4>
   1329c:	bls	132b8 <_start@@Base+0xc8c>
   132a0:	cmp	r3, #11
   132a4:	beq	132b4 <_start@@Base+0xc88>
   132a8:	bcc	132d0 <_start@@Base+0xca4>
   132ac:	cmp	r3, #255	; 0xff
   132b0:	bne	132d8 <_start@@Base+0xcac>
   132b4:	b	1fe74 <flatcc_json_printer_union_string@@Base>
   132b8:	cmp	r3, #2
   132bc:	beq	132e0 <_start@@Base+0xcb4>
   132c0:	cmp	r3, #8
   132c4:	bne	132dc <_start@@Base+0xcb0>
   132c8:	ldr	r2, [pc, #24]	; 132e8 <_start@@Base+0xcbc>
   132cc:	b	1fd48 <flatcc_json_printer_union_struct@@Base>
   132d0:	ldr	r2, [pc, #20]	; 132ec <_start@@Base+0xcc0>
   132d4:	b	1fd48 <flatcc_json_printer_union_struct@@Base>
   132d8:	bx	lr
   132dc:	bx	lr
   132e0:	ldr	r2, [pc, #8]	; 132f0 <_start@@Base+0xcc4>
   132e4:	b	1fc74 <flatcc_json_printer_union_table@@Base>
   132e8:	andeq	r3, r1, r8, lsr #6
   132ec:	strdeq	r3, [r1], -r4
   132f0:	andeq	r2, r1, r8, ror #15
   132f4:	push	{lr}		; (str lr, [sp, #-4]!)
   132f8:	sub	sp, sp, #12
   132fc:	ldr	lr, [pc, #32]	; 13324 <_start@@Base+0xcf8>
   13300:	mov	ip, #10
   13304:	mov	r3, #0
   13308:	mov	r2, r1
   1330c:	str	lr, [sp]
   13310:	str	ip, [sp, #4]
   13314:	mov	r1, r3
   13318:	bl	19278 <flatcc_json_printer_int32_struct_field@@Base>
   1331c:	add	sp, sp, #12
   13320:	pop	{pc}		; (ldr pc, [sp], #4)
   13324:	andeq	r1, r2, r4, ror #6
   13328:	push	{lr}		; (str lr, [sp, #-4]!)
   1332c:	sub	sp, sp, #12
   13330:	ldr	lr, [pc, #32]	; 13358 <_start@@Base+0xd2c>
   13334:	mov	ip, #11
   13338:	mov	r3, #0
   1333c:	mov	r2, r1
   13340:	str	lr, [sp]
   13344:	str	ip, [sp, #4]
   13348:	mov	r1, r3
   1334c:	bl	18908 <flatcc_json_printer_uint16_struct_field@@Base>
   13350:	add	sp, sp, #12
   13354:	pop	{pc}		; (ldr pc, [sp], #4)
   13358:	andeq	r1, r2, r0, ror r3
   1335c:	cmp	r1, #9
   13360:	mov	r3, r0
   13364:	beq	133dc <_start@@Base+0xdb0>
   13368:	bls	1338c <_start@@Base+0xd60>
   1336c:	cmp	r1, #11
   13370:	beq	133a8 <_start@@Base+0xd7c>
   13374:	bcc	133d0 <_start@@Base+0xda4>
   13378:	cmp	r1, #255	; 0xff
   1337c:	bne	133b4 <_start@@Base+0xd88>
   13380:	mov	r2, #6
   13384:	ldr	r1, [pc, #92]	; 133e8 <_start@@Base+0xdbc>
   13388:	b	16248 <flatcc_json_printer_enum@@Base>
   1338c:	cmp	r1, #2
   13390:	beq	133c4 <_start@@Base+0xd98>
   13394:	cmp	r1, #8
   13398:	bne	133b4 <_start@@Base+0xd88>
   1339c:	mov	r2, r1
   133a0:	ldr	r1, [pc, #68]	; 133ec <_start@@Base+0xdc0>
   133a4:	b	16248 <flatcc_json_printer_enum@@Base>
   133a8:	mov	r2, #5
   133ac:	ldr	r1, [pc, #60]	; 133f0 <_start@@Base+0xdc4>
   133b0:	b	16248 <flatcc_json_printer_enum@@Base>
   133b4:	mov	r0, r3
   133b8:	mov	r2, #4
   133bc:	ldr	r1, [pc, #48]	; 133f4 <_start@@Base+0xdc8>
   133c0:	b	16248 <flatcc_json_printer_enum@@Base>
   133c4:	mov	r2, #5
   133c8:	ldr	r1, [pc, #40]	; 133f8 <_start@@Base+0xdcc>
   133cc:	b	16248 <flatcc_json_printer_enum@@Base>
   133d0:	mov	r2, #7
   133d4:	ldr	r1, [pc, #32]	; 133fc <_start@@Base+0xdd0>
   133d8:	b	16248 <flatcc_json_printer_enum@@Base>
   133dc:	mov	r2, #5
   133e0:	ldr	r1, [pc, #24]	; 13400 <_start@@Base+0xdd4>
   133e4:	b	16248 <flatcc_json_printer_enum@@Base>
   133e8:	andeq	r1, r2, r8, lsr #7
   133ec:	andeq	r1, r2, r4, lsl #7
   133f0:	andeq	r1, r2, r0, lsr #7
   133f4:			; <UNDEFINED> instruction: 0x000213b0
   133f8:	andeq	r1, r2, ip, ror r3
   133fc:	muleq	r2, r8, r3
   13400:	muleq	r2, r0, r3
   13404:	push	{r4, r5, r6, r7, lr}
   13408:	mov	r3, #5
   1340c:	ldr	r7, [pc, #124]	; 13490 <_start@@Base+0xe64>
   13410:	sub	sp, sp, #20
   13414:	mov	r4, #2
   13418:	mov	r2, #0
   1341c:	stm	sp, {r3, r4, r7}
   13420:	mov	r5, r0
   13424:	ldr	r3, [pc, #104]	; 13494 <_start@@Base+0xe68>
   13428:	mov	r6, r1
   1342c:	bl	18050 <flatcc_json_printer_int8_enum_field@@Base>
   13430:	mov	r3, #6
   13434:	mov	r1, r6
   13438:	mov	r0, r5
   1343c:	str	r3, [sp]
   13440:	stmib	sp, {r4, r7}
   13444:	ldr	r3, [pc, #76]	; 13498 <_start@@Base+0xe6c>
   13448:	mov	r2, #1
   1344c:	bl	18050 <flatcc_json_printer_int8_enum_field@@Base>
   13450:	mov	r2, r4
   13454:	mov	r1, r6
   13458:	mov	r0, r5
   1345c:	str	r4, [sp, #4]
   13460:	str	r4, [sp]
   13464:	ldr	r3, [pc, #48]	; 1349c <_start@@Base+0xe70>
   13468:	bl	16bb0 <flatcc_json_printer_uint8_field@@Base>
   1346c:	mov	r2, #3
   13470:	str	r4, [sp, #4]
   13474:	mov	r1, r6
   13478:	mov	r0, r5
   1347c:	str	r2, [sp]
   13480:	ldr	r3, [pc, #24]	; 134a0 <_start@@Base+0xe74>
   13484:	bl	16bb0 <flatcc_json_printer_uint8_field@@Base>
   13488:	add	sp, sp, #20
   1348c:	pop	{r4, r5, r6, r7, pc}
   13490:	andeq	r3, r1, r4, lsr #9
   13494:	andeq	r1, r2, r8, lsl r1
   13498:			; <UNDEFINED> instruction: 0x000213b8
   1349c:	andeq	r1, r2, r0, asr #7
   134a0:	andeq	r1, r2, r4, asr #7
   134a4:	push	{r4, r5, r6, r7, r8, lr}
   134a8:	uxtb	r4, r1
   134ac:	tst	r4, #244	; 0xf4
   134b0:	movne	r5, #1
   134b4:	moveq	r5, #0
   134b8:	cmp	r4, #0
   134bc:	orreq	r5, r5, #1
   134c0:	cmp	r5, #0
   134c4:	beq	134d0 <_start@@Base+0xea4>
   134c8:	pop	{r4, r5, r6, r7, r8, lr}
   134cc:	b	16054 <flatcc_json_printer_int8@@Base>
   134d0:	sub	r3, r4, #1
   134d4:	tst	r3, r4
   134d8:	movne	r7, #1
   134dc:	moveq	r7, #0
   134e0:	mov	r1, r7
   134e4:	mov	r6, r0
   134e8:	bl	16354 <flatcc_json_printer_delimit_enum_flags@@Base>
   134ec:	ands	r1, r4, #1
   134f0:	moveq	r5, #1
   134f4:	bne	13518 <_start@@Base+0xeec>
   134f8:	tst	r4, #2
   134fc:	bne	1354c <_start@@Base+0xf20>
   13500:	tst	r4, #8
   13504:	bne	13538 <_start@@Base+0xf0c>
   13508:	mov	r1, r7
   1350c:	mov	r0, r6
   13510:	pop	{r4, r5, r6, r7, r8, lr}
   13514:	b	16354 <flatcc_json_printer_delimit_enum_flags@@Base>
   13518:	mov	r1, r5
   1351c:	mov	r3, #3
   13520:	ldr	r2, [pc, #60]	; 13564 <_start@@Base+0xf38>
   13524:	mov	r0, r6
   13528:	bl	16384 <flatcc_json_printer_enum_flag@@Base>
   1352c:	mov	r5, #2
   13530:	mov	r1, #1
   13534:	b	134f8 <_start@@Base+0xecc>
   13538:	mov	r3, #4
   1353c:	ldr	r2, [pc, #36]	; 13568 <_start@@Base+0xf3c>
   13540:	mov	r0, r6
   13544:	bl	16384 <flatcc_json_printer_enum_flag@@Base>
   13548:	b	13508 <_start@@Base+0xedc>
   1354c:	mov	r3, #5
   13550:	ldr	r2, [pc, #20]	; 1356c <_start@@Base+0xf40>
   13554:	mov	r0, r6
   13558:	bl	16384 <flatcc_json_printer_enum_flag@@Base>
   1355c:	mov	r1, r5
   13560:	b	13500 <_start@@Base+0xed4>
   13564:	andeq	r1, r2, r8, asr #7
   13568:	ldrdeq	r1, [r2], -r4
   1356c:	andeq	r1, r2, ip, asr #7
   13570:	push	{r4, r5, r6, lr}
   13574:	sub	sp, sp, #16
   13578:	ldr	ip, [pc, #216]	; 13658 <_start@@Base+0x102c>
   1357c:	mov	r6, #1
   13580:	mov	r3, #0
   13584:	mov	r4, r1
   13588:	str	ip, [sp]
   1358c:	mov	r2, r1
   13590:	str	r6, [sp, #4]
   13594:	mov	r1, r3
   13598:	mov	r5, r0
   1359c:	bl	19820 <flatcc_json_printer_float_struct_field@@Base>
   135a0:	ldr	r3, [pc, #180]	; 1365c <_start@@Base+0x1030>
   135a4:	str	r6, [sp, #4]
   135a8:	mov	r2, r4
   135ac:	mov	r1, r6
   135b0:	mov	r0, r5
   135b4:	str	r3, [sp]
   135b8:	mov	r3, #4
   135bc:	bl	19820 <flatcc_json_printer_float_struct_field@@Base>
   135c0:	ldr	r3, [pc, #152]	; 13660 <_start@@Base+0x1034>
   135c4:	str	r6, [sp, #4]
   135c8:	mov	r2, r4
   135cc:	mov	r0, r5
   135d0:	str	r3, [sp]
   135d4:	mov	r1, #2
   135d8:	mov	r3, #8
   135dc:	bl	19820 <flatcc_json_printer_float_struct_field@@Base>
   135e0:	ldr	r3, [pc, #124]	; 13664 <_start@@Base+0x1038>
   135e4:	mov	r6, #5
   135e8:	mov	r2, r4
   135ec:	mov	r0, r5
   135f0:	stm	sp, {r3, r6}
   135f4:	mov	r1, #3
   135f8:	mov	r3, #16
   135fc:	bl	199e0 <flatcc_json_printer_double_struct_field@@Base>
   13600:	ldr	r1, [pc, #96]	; 13668 <_start@@Base+0x103c>
   13604:	ldr	r3, [pc, #96]	; 1366c <_start@@Base+0x1040>
   13608:	mov	r2, r4
   1360c:	mov	r0, r5
   13610:	str	r1, [sp, #8]
   13614:	str	r3, [sp]
   13618:	str	r6, [sp, #4]
   1361c:	mov	r3, #24
   13620:	mov	r1, #4
   13624:	bl	1a3b0 <flatcc_json_printer_int8_enum_struct_field@@Base>
   13628:	ldr	ip, [pc, #64]	; 13670 <_start@@Base+0x1044>
   1362c:	ldr	r3, [pc, #64]	; 13674 <_start@@Base+0x1048>
   13630:	str	r6, [sp, #4]
   13634:	str	r3, [sp]
   13638:	mov	r2, r4
   1363c:	mov	r1, r6
   13640:	mov	r0, r5
   13644:	str	ip, [sp, #8]
   13648:	mov	r3, #26
   1364c:	bl	1fe8c <flatcc_json_printer_embedded_struct_field@@Base>
   13650:	add	sp, sp, #16
   13654:	pop	{r4, r5, r6, pc}
   13658:	ldrdeq	r1, [r2], -ip
   1365c:	andeq	r1, r2, ip, asr r1
   13660:	andeq	r1, r2, r0, ror #7
   13664:	andeq	r1, r2, r4, ror #7
   13668:	andeq	r3, r1, r4, lsr #9
   1366c:	andeq	r1, r2, ip, ror #7
   13670:	andeq	r3, r1, r0, ror r0
   13674:	strdeq	r1, [r2], -r4
   13678:	sub	r1, r1, #1
   1367c:	cmp	r1, #3
   13680:	ldrls	pc, [pc, r1, lsl #2]
   13684:	b	136c8 <_start@@Base+0x109c>
   13688:			; <UNDEFINED> instruction: 0x000136bc
   1368c:			; <UNDEFINED> instruction: 0x000136b0
   13690:	andeq	r3, r1, r4, lsr #13
   13694:	muleq	r1, r8, r6
   13698:	mov	r2, #3
   1369c:	ldr	r1, [pc, #48]	; 136d4 <_start@@Base+0x10a8>
   136a0:	b	16248 <flatcc_json_printer_enum@@Base>
   136a4:	mov	r2, #8
   136a8:	ldr	r1, [pc, #40]	; 136d8 <_start@@Base+0x10ac>
   136ac:	b	16248 <flatcc_json_printer_enum@@Base>
   136b0:	mov	r2, #23
   136b4:	ldr	r1, [pc, #32]	; 136dc <_start@@Base+0x10b0>
   136b8:	b	16248 <flatcc_json_printer_enum@@Base>
   136bc:	mov	r2, #7
   136c0:	ldr	r1, [pc, #24]	; 136e0 <_start@@Base+0x10b4>
   136c4:	b	16248 <flatcc_json_printer_enum@@Base>
   136c8:	mov	r2, #4
   136cc:	ldr	r1, [pc, #16]	; 136e4 <_start@@Base+0x10b8>
   136d0:	b	16248 <flatcc_json_printer_enum@@Base>
   136d4:	andeq	r1, r2, r8, lsr #8
   136d8:	andeq	r1, r2, ip, lsl r4
   136dc:	andeq	r1, r2, r4, lsl #8
   136e0:	strdeq	r1, [r2], -ip
   136e4:			; <UNDEFINED> instruction: 0x000213b0
   136e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   136ec:	subs	r9, r1, #0
   136f0:	sub	sp, sp, #12
   136f4:	ldr	r1, [pc, #208]	; 137cc <_start@@Base+0x11a0>
   136f8:	addeq	r9, sp, #4
   136fc:	bl	12428 <fopen@plt>
   13700:	subs	r6, r0, #0
   13704:	beq	137c4 <_start@@Base+0x1198>
   13708:	mov	r2, #2
   1370c:	mov	r1, #0
   13710:	bl	12518 <fseek@plt>
   13714:	mov	r0, r6
   13718:	bl	12458 <ftell@plt>
   1371c:	cmp	r0, #10240	; 0x2800
   13720:	mov	r5, r0
   13724:	str	r0, [r9]
   13728:	bhi	137b8 <_start@@Base+0x118c>
   1372c:	mov	r0, r6
   13730:	bl	12470 <rewind@plt>
   13734:	cmp	r5, #0
   13738:	movne	r0, r5
   1373c:	moveq	r0, #1
   13740:	bl	124ac <malloc@plt>
   13744:	subs	r7, r0, #0
   13748:	beq	137b8 <_start@@Base+0x118c>
   1374c:	mov	r4, #0
   13750:	mov	r8, #1
   13754:	b	1375c <_start@@Base+0x1130>
   13758:	add	r4, r4, r0
   1375c:	mov	r3, r6
   13760:	sub	r2, r5, r4
   13764:	mov	r1, r8
   13768:	add	r0, r7, r4
   1376c:	bl	12494 <fread@plt>
   13770:	cmp	r0, #0
   13774:	bne	13758 <_start@@Base+0x112c>
   13778:	cmp	r5, r4
   1377c:	mov	r0, r6
   13780:	bne	13798 <_start@@Base+0x116c>
   13784:	bl	12500 <fclose@plt>
   13788:	mov	r0, r7
   1378c:	str	r5, [r9]
   13790:	add	sp, sp, #12
   13794:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13798:	bl	12500 <fclose@plt>
   1379c:	mov	r0, r7
   137a0:	bl	12440 <free@plt>
   137a4:	mov	r7, #0
   137a8:	mov	r0, r7
   137ac:	str	r5, [r9]
   137b0:	add	sp, sp, #12
   137b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   137b8:	mov	r0, r6
   137bc:	bl	12500 <fclose@plt>
   137c0:	b	137a4 <_start@@Base+0x1178>
   137c4:	mov	r5, r6
   137c8:	b	137a4 <_start@@Base+0x1178>
   137cc:	andeq	r1, r2, ip, lsr #8
   137d0:	bx	lr

000137d4 <test_print@@Base>:
   137d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   137d8:	sub	sp, sp, #76	; 0x4c
   137dc:	ldr	r6, [pc, #576]	; 13a24 <test_print@@Base+0x250>
   137e0:	mov	r5, #0
   137e4:	ldr	r1, [pc, #572]	; 13a28 <test_print@@Base+0x254>
   137e8:	ldr	r0, [r6]
   137ec:	str	r5, [sp, #12]
   137f0:	str	r5, [sp, #16]
   137f4:	str	r5, [sp, #20]
   137f8:	bl	12428 <fopen@plt>
   137fc:	subs	r4, r0, #0
   13800:	beq	13a08 <test_print@@Base+0x234>
   13804:	ldr	r8, [pc, #544]	; 13a2c <test_print@@Base+0x258>
   13808:	add	r0, sp, #24
   1380c:	mov	r1, r4
   13810:	bl	208b0 <flatcc_json_printer_init@@Base>
   13814:	ldr	r7, [r8]
   13818:	mov	r2, #2
   1381c:	mov	r3, #1
   13820:	cmp	r7, #0
   13824:	strb	r5, [sp, #51]	; 0x33
   13828:	strb	r2, [sp, #49]	; 0x31
   1382c:	strb	r3, [sp, #50]	; 0x32
   13830:	beq	13848 <test_print@@Base+0x74>
   13834:	ldr	r1, [pc, #500]	; 13a30 <test_print@@Base+0x25c>
   13838:	mov	r0, r7
   1383c:	bl	1241c <strcmp@plt>
   13840:	cmp	r0, #0
   13844:	bne	13970 <test_print@@Base+0x19c>
   13848:	ldr	r7, [pc, #484]	; 13a34 <test_print@@Base+0x260>
   1384c:	mov	r3, #288	; 0x120
   13850:	str	r3, [sp, #12]
   13854:	add	r1, sp, #16
   13858:	ldr	r0, [r6, #4]
   1385c:	bl	136e8 <_start@@Base+0x10bc>
   13860:	subs	r5, r0, #0
   13864:	beq	139b4 <test_print@@Base+0x1e0>
   13868:	ldr	r3, [pc, #456]	; 13a38 <test_print@@Base+0x264>
   1386c:	ldr	r2, [sp, #12]
   13870:	str	r3, [sp]
   13874:	mov	r1, r7
   13878:	ldr	r3, [pc, #444]	; 13a3c <test_print@@Base+0x268>
   1387c:	add	r0, sp, #24
   13880:	bl	203b0 <flatcc_json_printer_table_as_root@@Base>
   13884:	ldr	r3, [sp, #68]	; 0x44
   13888:	mov	r1, #1
   1388c:	add	r0, sp, #24
   13890:	blx	r3
   13894:	ldr	r3, [sp, #60]	; 0x3c
   13898:	cmp	r3, #0
   1389c:	bne	139a8 <test_print@@Base+0x1d4>
   138a0:	mov	r0, r4
   138a4:	bl	12500 <fclose@plt>
   138a8:	add	r1, sp, #20
   138ac:	ldr	r0, [r6]
   138b0:	bl	136e8 <_start@@Base+0x10bc>
   138b4:	subs	r9, r0, #0
   138b8:	beq	139ec <test_print@@Base+0x218>
   138bc:	ldr	r2, [sp, #20]
   138c0:	ldr	r3, [sp, #16]
   138c4:	cmp	r2, r3
   138c8:	beq	13944 <test_print@@Base+0x170>
   138cc:	ldr	r3, [pc, #364]	; 13a40 <test_print@@Base+0x26c>
   138d0:	mov	r2, #54	; 0x36
   138d4:	mov	r1, #1
   138d8:	ldr	r3, [r3]
   138dc:	ldr	r0, [pc, #352]	; 13a44 <test_print@@Base+0x270>
   138e0:	bl	12488 <fwrite@plt>
   138e4:	mvn	r6, #0
   138e8:	add	r0, sp, #24
   138ec:	bl	20ab4 <flatcc_json_printer_clear@@Base>
   138f0:	ldr	r4, [r8]
   138f4:	cmp	r4, #0
   138f8:	movne	r4, #0
   138fc:	beq	13910 <test_print@@Base+0x13c>
   13900:	mov	r0, r7
   13904:	bl	12440 <free@plt>
   13908:	cmp	r5, #0
   1390c:	beq	13918 <test_print@@Base+0x144>
   13910:	mov	r0, r5
   13914:	bl	12440 <free@plt>
   13918:	cmp	r9, #0
   1391c:	beq	13928 <test_print@@Base+0x154>
   13920:	mov	r0, r9
   13924:	bl	12440 <free@plt>
   13928:	cmp	r4, #0
   1392c:	beq	13938 <test_print@@Base+0x164>
   13930:	mov	r0, r4
   13934:	bl	12500 <fclose@plt>
   13938:	mov	r0, r6
   1393c:	add	sp, sp, #76	; 0x4c
   13940:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13944:	mov	r1, r5
   13948:	bl	12464 <memcmp@plt>
   1394c:	subs	r6, r0, #0
   13950:	bne	138cc <test_print@@Base+0xf8>
   13954:	ldr	r3, [pc, #228]	; 13a40 <test_print@@Base+0x26c>
   13958:	mov	r2, #26
   1395c:	mov	r1, #1
   13960:	ldr	r3, [r3]
   13964:	ldr	r0, [pc, #220]	; 13a48 <test_print@@Base+0x274>
   13968:	bl	12488 <fwrite@plt>
   1396c:	b	138e8 <test_print@@Base+0x114>
   13970:	mov	r0, r7
   13974:	add	r1, sp, #12
   13978:	bl	136e8 <_start@@Base+0x10bc>
   1397c:	subs	r7, r0, #0
   13980:	bne	13854 <test_print@@Base+0x80>
   13984:	ldr	r3, [pc, #180]	; 13a40 <test_print@@Base+0x26c>
   13988:	ldr	r2, [r8]
   1398c:	ldr	r1, [pc, #184]	; 13a4c <test_print@@Base+0x278>
   13990:	ldr	r0, [r3]
   13994:	bl	124dc <fprintf@plt>
   13998:	add	r0, sp, #24
   1399c:	bl	20ab4 <flatcc_json_printer_clear@@Base>
   139a0:	mvn	r6, #0
   139a4:	b	13928 <test_print@@Base+0x154>
   139a8:	ldr	r0, [pc, #160]	; 13a50 <test_print@@Base+0x27c>
   139ac:	bl	124a0 <puts@plt>
   139b0:	b	138a0 <test_print@@Base+0xcc>
   139b4:	ldr	r3, [pc, #132]	; 13a40 <test_print@@Base+0x26c>
   139b8:	ldr	r2, [r6, #4]
   139bc:	ldr	r1, [pc, #144]	; 13a54 <test_print@@Base+0x280>
   139c0:	ldr	r0, [r3]
   139c4:	bl	124dc <fprintf@plt>
   139c8:	add	r0, sp, #24
   139cc:	bl	20ab4 <flatcc_json_printer_clear@@Base>
   139d0:	ldr	r3, [r8]
   139d4:	cmp	r3, #0
   139d8:	mvneq	r6, #0
   139dc:	beq	13930 <test_print@@Base+0x15c>
   139e0:	mov	r9, r5
   139e4:	mvn	r6, #0
   139e8:	b	13900 <test_print@@Base+0x12c>
   139ec:	ldr	r3, [pc, #76]	; 13a40 <test_print@@Base+0x26c>
   139f0:	ldr	r2, [r6]
   139f4:	ldr	r1, [pc, #92]	; 13a58 <test_print@@Base+0x284>
   139f8:	ldr	r0, [r3]
   139fc:	bl	124dc <fprintf@plt>
   13a00:	mvn	r6, #0
   13a04:	b	138e8 <test_print@@Base+0x114>
   13a08:	ldr	r3, [pc, #48]	; 13a40 <test_print@@Base+0x26c>
   13a0c:	ldr	r2, [r6]
   13a10:	ldr	r1, [pc, #68]	; 13a5c <test_print@@Base+0x288>
   13a14:	ldr	r0, [r3]
   13a18:	bl	124dc <fprintf@plt>
   13a1c:	mvn	r6, #0
   13a20:	b	13938 <test_print@@Base+0x164>
   13a24:	andeq	r3, r3, ip, ror r0
   13a28:	andeq	r1, r2, r0, lsr r4
   13a2c:	muleq	r3, r4, r0
   13a30:	andeq	r1, r2, r4, asr r4
   13a34:	ldrdeq	r0, [r2], -ip
   13a38:	andeq	r2, r1, ip, lsl #20
   13a3c:			; <UNDEFINED> instruction: 0x000214b0
   13a40:	andeq	r3, r3, r8, lsl #1
   13a44:	andeq	r1, r2, r0, lsl #10
   13a48:	andeq	r1, r2, r8, lsr r5
   13a4c:	andeq	r1, r2, r8, asr r4
   13a50:			; <UNDEFINED> instruction: 0x000214b8
   13a54:	andeq	r1, r2, r4, lsl #9
   13a58:	ldrdeq	r1, [r2], -r8
   13a5c:	andeq	r1, r2, r4, lsr r4
   13a60:	cmp	r0, #1000	; 0x3e8
   13a64:	push	{r4, r5, lr}
   13a68:	mov	r3, r0
   13a6c:	bcc	13adc <test_print@@Base+0x308>
   13a70:	ldr	r2, [pc, #324]	; 13bbc <test_print@@Base+0x3e8>
   13a74:	cmp	r0, r2
   13a78:	bhi	13b3c <test_print@@Base+0x368>
   13a7c:	ldr	lr, [pc, #316]	; 13bc0 <test_print@@Base+0x3ec>
   13a80:	mov	ip, #100	; 0x64
   13a84:	ldr	r2, [pc, #312]	; 13bc4 <test_print@@Base+0x3f0>
   13a88:	umull	r0, lr, lr, r3
   13a8c:	mov	r0, #0
   13a90:	lsr	lr, lr, #5
   13a94:	strb	r0, [r1, #4]
   13a98:	mul	ip, ip, lr
   13a9c:	add	r4, r1, #2
   13aa0:	sub	r3, r3, ip
   13aa4:	mov	r0, #4
   13aa8:	uxth	ip, r3
   13aac:	uxth	r3, lr
   13ab0:	ldrb	lr, [r2, ip, lsl #1]
   13ab4:	add	ip, r2, ip, lsl #1
   13ab8:	strb	lr, [r1, #2]
   13abc:	ldrb	ip, [ip, #1]
   13ac0:	strb	ip, [r1, #3]
   13ac4:	ldrb	r1, [r2, r3, lsl #1]
   13ac8:	add	r3, r2, r3, lsl #1
   13acc:	strb	r1, [r4, #-2]
   13ad0:	ldrb	r3, [r3, #1]
   13ad4:	strb	r3, [r4, #-1]
   13ad8:	pop	{r4, r5, pc}
   13adc:	cmp	r0, #99	; 0x63
   13ae0:	bls	13b88 <test_print@@Base+0x3b4>
   13ae4:	mov	r2, #0
   13ae8:	strb	r2, [r1, #3]
   13aec:	ldr	r2, [pc, #208]	; 13bc4 <test_print@@Base+0x3f0>
   13af0:	add	lr, r1, #3
   13af4:	mov	r0, #3
   13af8:	ldr	r4, [pc, #192]	; 13bc0 <test_print@@Base+0x3ec>
   13afc:	mov	ip, #100	; 0x64
   13b00:	sub	r1, lr, #2
   13b04:	umull	r5, r4, r4, r3
   13b08:	lsr	r4, r4, #5
   13b0c:	mul	ip, ip, r4
   13b10:	sub	ip, r3, ip
   13b14:	uxth	r3, r4
   13b18:	uxth	ip, ip
   13b1c:	ldrb	r4, [r2, ip, lsl #1]
   13b20:	add	r2, r2, ip, lsl #1
   13b24:	strb	r4, [lr, #-2]
   13b28:	ldrb	r2, [r2, #1]
   13b2c:	strb	r2, [lr, #-1]
   13b30:	add	r3, r3, #48	; 0x30
   13b34:	strb	r3, [r1, #-1]
   13b38:	pop	{r4, r5, pc}
   13b3c:	ldr	r4, [pc, #124]	; 13bc0 <test_print@@Base+0x3ec>
   13b40:	mov	ip, #100	; 0x64
   13b44:	ldr	r2, [pc, #120]	; 13bc4 <test_print@@Base+0x3f0>
   13b48:	umull	r0, r4, r4, r3
   13b4c:	mov	r0, #0
   13b50:	lsr	r4, r4, #5
   13b54:	strb	r0, [r1, #5]
   13b58:	mul	ip, ip, r4
   13b5c:	add	lr, r1, #3
   13b60:	sub	r3, r3, ip
   13b64:	mov	r0, #5
   13b68:	uxth	ip, r3
   13b6c:	uxth	r3, r4
   13b70:	ldrb	r4, [r2, ip, lsl #1]
   13b74:	add	ip, r2, ip, lsl #1
   13b78:	strb	r4, [r1, #3]
   13b7c:	ldrb	ip, [ip, #1]
   13b80:	strb	ip, [r1, #4]
   13b84:	b	13af8 <test_print@@Base+0x324>
   13b88:	cmp	r0, #9
   13b8c:	bls	13ba8 <test_print@@Base+0x3d4>
   13b90:	mov	r2, #0
   13b94:	strb	r2, [r1, #2]
   13b98:	add	r4, r1, #2
   13b9c:	mov	r0, #2
   13ba0:	ldr	r2, [pc, #28]	; 13bc4 <test_print@@Base+0x3f0>
   13ba4:	b	13ac4 <test_print@@Base+0x2f0>
   13ba8:	mov	r2, #0
   13bac:	strb	r2, [r1, #1]
   13bb0:	mov	r0, #1
   13bb4:	add	r1, r1, #1
   13bb8:	b	13b30 <test_print@@Base+0x35c>
   13bbc:	andeq	r2, r0, pc, lsl #14
   13bc0:	mvnpl	r8, pc, lsl r5
   13bc4:	andeq	r1, r2, r8, ror #12
   13bc8:	ldr	r2, [pc, #768]	; 13ed0 <test_print@@Base+0x6fc>
   13bcc:	push	{r4, r5, lr}
   13bd0:	cmp	r0, r2
   13bd4:	mov	r3, r0
   13bd8:	bls	13cec <test_print@@Base+0x518>
   13bdc:	ldr	r2, [pc, #752]	; 13ed4 <test_print@@Base+0x700>
   13be0:	cmp	r0, r2
   13be4:	bls	13d34 <test_print@@Base+0x560>
   13be8:	ldr	r2, [pc, #744]	; 13ed8 <test_print@@Base+0x704>
   13bec:	cmp	r0, r2
   13bf0:	bls	13e28 <test_print@@Base+0x654>
   13bf4:	ldr	lr, [pc, #736]	; 13edc <test_print@@Base+0x708>
   13bf8:	mov	r0, #100	; 0x64
   13bfc:	ldr	r2, [pc, #732]	; 13ee0 <test_print@@Base+0x70c>
   13c00:	umull	ip, lr, lr, r3
   13c04:	mov	ip, #0
   13c08:	lsr	lr, lr, #5
   13c0c:	strb	ip, [r1, #10]
   13c10:	mul	r0, r0, lr
   13c14:	add	r4, r1, #8
   13c18:	sub	r3, r3, r0
   13c1c:	mov	r0, #10
   13c20:	ldrb	r5, [r2, r3, lsl #1]
   13c24:	add	ip, r2, r3, lsl #1
   13c28:	mov	r3, lr
   13c2c:	strb	r5, [r1, #8]
   13c30:	ldrb	ip, [ip, #1]
   13c34:	strb	ip, [r1, #9]
   13c38:	ldr	lr, [pc, #668]	; 13edc <test_print@@Base+0x708>
   13c3c:	mov	ip, #100	; 0x64
   13c40:	sub	r1, r4, #2
   13c44:	umull	r5, lr, lr, r3
   13c48:	lsr	lr, lr, #5
   13c4c:	mul	ip, ip, lr
   13c50:	sub	ip, r3, ip
   13c54:	mov	r3, lr
   13c58:	ldrb	lr, [r2, ip, lsl #1]
   13c5c:	add	ip, r2, ip, lsl #1
   13c60:	strb	lr, [r4, #-2]
   13c64:	ldrb	ip, [ip, #1]
   13c68:	strb	ip, [r4, #-1]
   13c6c:	ldr	lr, [pc, #616]	; 13edc <test_print@@Base+0x708>
   13c70:	mov	ip, #100	; 0x64
   13c74:	sub	r4, r1, #2
   13c78:	umull	r5, lr, lr, r3
   13c7c:	lsr	lr, lr, #5
   13c80:	mul	ip, ip, lr
   13c84:	sub	ip, r3, ip
   13c88:	mov	r3, lr
   13c8c:	ldrb	lr, [r2, ip, lsl #1]
   13c90:	add	ip, r2, ip, lsl #1
   13c94:	strb	lr, [r1, #-2]
   13c98:	ldrb	ip, [ip, #1]
   13c9c:	strb	ip, [r1, #-1]
   13ca0:	ldr	lr, [pc, #564]	; 13edc <test_print@@Base+0x708>
   13ca4:	mov	ip, #100	; 0x64
   13ca8:	sub	r1, r4, #2
   13cac:	umull	r5, lr, lr, r3
   13cb0:	lsr	lr, lr, #5
   13cb4:	mul	ip, ip, lr
   13cb8:	sub	ip, r3, ip
   13cbc:	mov	r3, lr
   13cc0:	ldrb	lr, [r2, ip, lsl #1]
   13cc4:	add	ip, r2, ip, lsl #1
   13cc8:	strb	lr, [r4, #-2]
   13ccc:	ldrb	ip, [ip, #1]
   13cd0:	strb	ip, [r4, #-1]
   13cd4:	ldrb	ip, [r2, r3, lsl #1]
   13cd8:	add	r3, r2, r3, lsl #1
   13cdc:	strb	ip, [r1, #-2]
   13ce0:	ldrb	r3, [r3, #1]
   13ce4:	strb	r3, [r1, #-1]
   13ce8:	pop	{r4, r5, pc}
   13cec:	cmp	r0, #99	; 0x63
   13cf0:	bls	13d14 <test_print@@Base+0x540>
   13cf4:	cmp	r0, #1000	; 0x3e8
   13cf8:	bcc	13dfc <test_print@@Base+0x628>
   13cfc:	mov	r2, #0
   13d00:	strb	r2, [r1, #4]
   13d04:	add	r4, r1, #4
   13d08:	mov	r0, #4
   13d0c:	ldr	r2, [pc, #460]	; 13ee0 <test_print@@Base+0x70c>
   13d10:	b	13ca0 <test_print@@Base+0x4cc>
   13d14:	cmp	r0, #9
   13d18:	bls	13e14 <test_print@@Base+0x640>
   13d1c:	mov	r2, #0
   13d20:	strb	r2, [r1, #2]
   13d24:	mov	r0, #2
   13d28:	add	r1, r1, #2
   13d2c:	ldr	r2, [pc, #428]	; 13ee0 <test_print@@Base+0x70c>
   13d30:	b	13cd4 <test_print@@Base+0x500>
   13d34:	ldr	r2, [pc, #424]	; 13ee4 <test_print@@Base+0x710>
   13d38:	cmp	r0, r2
   13d3c:	bls	13e7c <test_print@@Base+0x6a8>
   13d40:	mov	r2, #0
   13d44:	strb	r2, [r1, #7]
   13d48:	ldr	r2, [pc, #400]	; 13ee0 <test_print@@Base+0x70c>
   13d4c:	add	r4, r1, #7
   13d50:	mov	r0, #7
   13d54:	ldr	lr, [pc, #384]	; 13edc <test_print@@Base+0x708>
   13d58:	mov	ip, #100	; 0x64
   13d5c:	sub	r1, r4, #2
   13d60:	umull	r5, lr, lr, r3
   13d64:	lsr	lr, lr, #5
   13d68:	mul	ip, ip, lr
   13d6c:	sub	ip, r3, ip
   13d70:	mov	r3, lr
   13d74:	ldrb	lr, [r2, ip, lsl #1]
   13d78:	add	ip, r2, ip, lsl #1
   13d7c:	strb	lr, [r4, #-2]
   13d80:	ldrb	ip, [ip, #1]
   13d84:	strb	ip, [r4, #-1]
   13d88:	ldr	lr, [pc, #332]	; 13edc <test_print@@Base+0x708>
   13d8c:	mov	ip, #100	; 0x64
   13d90:	sub	r4, r1, #2
   13d94:	umull	r5, lr, lr, r3
   13d98:	lsr	lr, lr, #5
   13d9c:	mul	ip, ip, lr
   13da0:	sub	ip, r3, ip
   13da4:	mov	r3, lr
   13da8:	ldrb	lr, [r2, ip, lsl #1]
   13dac:	add	ip, r2, ip, lsl #1
   13db0:	strb	lr, [r1, #-2]
   13db4:	ldrb	ip, [ip, #1]
   13db8:	strb	ip, [r1, #-1]
   13dbc:	ldr	lr, [pc, #280]	; 13edc <test_print@@Base+0x708>
   13dc0:	mov	ip, #100	; 0x64
   13dc4:	sub	r1, r4, #2
   13dc8:	umull	r5, lr, lr, r3
   13dcc:	lsr	lr, lr, #5
   13dd0:	mul	ip, ip, lr
   13dd4:	sub	ip, r3, ip
   13dd8:	mov	r3, lr
   13ddc:	ldrb	lr, [r2, ip, lsl #1]
   13de0:	add	r2, r2, ip, lsl #1
   13de4:	strb	lr, [r4, #-2]
   13de8:	ldrb	r2, [r2, #1]
   13dec:	strb	r2, [r4, #-1]
   13df0:	add	r3, r3, #48	; 0x30
   13df4:	strb	r3, [r1, #-1]
   13df8:	pop	{r4, r5, pc}
   13dfc:	mov	r2, #0
   13e00:	strb	r2, [r1, #3]
   13e04:	add	r4, r1, #3
   13e08:	mov	r0, #3
   13e0c:	ldr	r2, [pc, #204]	; 13ee0 <test_print@@Base+0x70c>
   13e10:	b	13dbc <test_print@@Base+0x5e8>
   13e14:	mov	r2, #0
   13e18:	strb	r2, [r1, #1]
   13e1c:	mov	r0, #1
   13e20:	add	r1, r1, #1
   13e24:	b	13df0 <test_print@@Base+0x61c>
   13e28:	ldr	r2, [pc, #184]	; 13ee8 <test_print@@Base+0x714>
   13e2c:	cmp	r0, r2
   13e30:	bls	13eb8 <test_print@@Base+0x6e4>
   13e34:	ldr	lr, [pc, #160]	; 13edc <test_print@@Base+0x708>
   13e38:	mov	r0, #100	; 0x64
   13e3c:	ldr	r2, [pc, #156]	; 13ee0 <test_print@@Base+0x70c>
   13e40:	umull	ip, lr, lr, r3
   13e44:	mov	ip, #0
   13e48:	lsr	lr, lr, #5
   13e4c:	strb	ip, [r1, #9]
   13e50:	mul	r0, r0, lr
   13e54:	add	r4, r1, #7
   13e58:	sub	r3, r3, r0
   13e5c:	mov	r0, #9
   13e60:	ldrb	r5, [r2, r3, lsl #1]
   13e64:	add	ip, r2, r3, lsl #1
   13e68:	mov	r3, lr
   13e6c:	strb	r5, [r1, #7]
   13e70:	ldrb	ip, [ip, #1]
   13e74:	strb	ip, [r1, #8]
   13e78:	b	13d54 <test_print@@Base+0x580>
   13e7c:	ldr	r2, [pc, #104]	; 13eec <test_print@@Base+0x718>
   13e80:	cmp	r0, r2
   13e84:	bls	13ea0 <test_print@@Base+0x6cc>
   13e88:	mov	r2, #0
   13e8c:	strb	r2, [r1, #6]
   13e90:	mov	r0, #6
   13e94:	add	r1, r1, #6
   13e98:	ldr	r2, [pc, #64]	; 13ee0 <test_print@@Base+0x70c>
   13e9c:	b	13c6c <test_print@@Base+0x498>
   13ea0:	mov	r2, #0
   13ea4:	strb	r2, [r1, #5]
   13ea8:	mov	r0, #5
   13eac:	add	r1, r1, #5
   13eb0:	ldr	r2, [pc, #40]	; 13ee0 <test_print@@Base+0x70c>
   13eb4:	b	13d88 <test_print@@Base+0x5b4>
   13eb8:	mov	r2, #0
   13ebc:	strb	r2, [r1, #8]
   13ec0:	add	r4, r1, #8
   13ec4:	mov	r0, #8
   13ec8:	ldr	r2, [pc, #16]	; 13ee0 <test_print@@Base+0x70c>
   13ecc:	b	13c38 <test_print@@Base+0x464>
   13ed0:	andeq	r2, r0, pc, lsl #14
   13ed4:	addseq	r9, r8, pc, ror r6
   13ed8:	blcc	fe6c66dc <__bss_end__@@Base+0xfe693644>
   13edc:	mvnpl	r8, pc, lsl r5
   13ee0:	andeq	r1, r2, r8, ror #12
   13ee4:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   13ee8:	ldrbeq	lr, [r5, #255]!	; 0xff
   13eec:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   13ef0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ef4:	mov	r6, r0
   13ef8:	add	r9, pc, #944	; 0x3b0
   13efc:	ldrd	r8, [r9]
   13f00:	mov	r5, r2
   13f04:	cmp	r1, r9
   13f08:	cmpeq	r0, r8
   13f0c:	bls	142a4 <test_print@@Base+0xad0>
   13f10:	add	r3, pc, #928	; 0x3a0
   13f14:	ldrd	r2, [r3]
   13f18:	mov	r7, r1
   13f1c:	cmp	r1, r3
   13f20:	cmpeq	r0, r2
   13f24:	bls	14138 <test_print@@Base+0x964>
   13f28:	add	r3, pc, #912	; 0x390
   13f2c:	ldrd	r2, [r3]
   13f30:	cmp	r1, r3
   13f34:	cmpeq	r0, r2
   13f38:	bls	142f4 <test_print@@Base+0xb20>
   13f3c:	add	r3, pc, #900	; 0x384
   13f40:	ldrd	r2, [r3]
   13f44:	cmp	r1, r3
   13f48:	cmpeq	r0, r2
   13f4c:	bls	144b4 <test_print@@Base+0xce0>
   13f50:	add	r3, pc, #888	; 0x378
   13f54:	ldrd	r2, [r3]
   13f58:	cmp	r1, r3
   13f5c:	cmpeq	r0, r2
   13f60:	bls	143ac <test_print@@Base+0xbd8>
   13f64:	mov	r3, #0
   13f68:	strb	r3, [r5, #20]
   13f6c:	mov	r2, #100	; 0x64
   13f70:	mov	r3, #0
   13f74:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   13f78:	mov	r0, r6
   13f7c:	mov	r1, r7
   13f80:	mov	r3, #0
   13f84:	ldr	r4, [pc, #860]	; 142e8 <test_print@@Base+0xb14>
   13f88:	mov	r9, #20
   13f8c:	mov	r8, r2
   13f90:	mov	r2, #100	; 0x64
   13f94:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   13f98:	ldrb	r2, [r4, r8, lsl #1]
   13f9c:	add	r3, r4, r8, lsl #1
   13fa0:	add	r8, r5, #18
   13fa4:	strb	r2, [r5, #18]
   13fa8:	ldrb	r3, [r3, #1]
   13fac:	strb	r3, [r5, #19]
   13fb0:	mov	r6, r0
   13fb4:	mov	r7, r1
   13fb8:	mov	r0, r6
   13fbc:	mov	r1, r7
   13fc0:	mov	r2, #100	; 0x64
   13fc4:	mov	r3, #0
   13fc8:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   13fcc:	mov	r0, r6
   13fd0:	mov	r1, r7
   13fd4:	mov	r3, #0
   13fd8:	mov	r5, r2
   13fdc:	mov	r2, #100	; 0x64
   13fe0:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   13fe4:	ldrb	r2, [r4, r5, lsl #1]
   13fe8:	add	r3, r4, r5, lsl #1
   13fec:	sub	r5, r8, #2
   13ff0:	strb	r2, [r8, #-2]
   13ff4:	ldrb	r3, [r3, #1]
   13ff8:	strb	r3, [r8, #-1]
   13ffc:	mov	r6, r0
   14000:	mov	r7, r1
   14004:	mov	r0, r6
   14008:	mov	r1, r7
   1400c:	mov	r2, #100	; 0x64
   14010:	mov	r3, #0
   14014:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14018:	mov	r0, r6
   1401c:	mov	r1, r7
   14020:	mov	r3, #0
   14024:	sub	fp, r5, #2
   14028:	mov	r8, r2
   1402c:	mov	r2, #100	; 0x64
   14030:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14034:	ldrb	r3, [r4, r8, lsl #1]
   14038:	add	r8, r4, r8, lsl #1
   1403c:	strb	r3, [r5, #-2]
   14040:	ldrb	r3, [r8, #1]
   14044:	strb	r3, [r5, #-1]
   14048:	mov	r6, r0
   1404c:	mov	r7, r1
   14050:	mov	r0, r6
   14054:	mov	r1, r7
   14058:	mov	r2, #100	; 0x64
   1405c:	mov	r3, #0
   14060:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14064:	mov	r0, r6
   14068:	mov	r1, r7
   1406c:	mov	r3, #0
   14070:	sub	sl, fp, #2
   14074:	mov	r8, r2
   14078:	mov	r2, #100	; 0x64
   1407c:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14080:	ldrb	r3, [r4, r8, lsl #1]
   14084:	add	r8, r4, r8, lsl #1
   14088:	strb	r3, [fp, #-2]
   1408c:	ldrb	r3, [r8, #1]
   14090:	strb	r3, [fp, #-1]
   14094:	mov	r6, r0
   14098:	mov	r7, r1
   1409c:	mov	r0, r6
   140a0:	mov	r1, r7
   140a4:	mov	r2, #100	; 0x64
   140a8:	mov	r3, #0
   140ac:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   140b0:	mov	r0, r6
   140b4:	mov	r1, r7
   140b8:	mov	r3, #0
   140bc:	sub	r5, sl, #2
   140c0:	mov	r8, r2
   140c4:	mov	r2, #100	; 0x64
   140c8:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   140cc:	ldrb	r3, [r4, r8, lsl #1]
   140d0:	add	r8, r4, r8, lsl #1
   140d4:	strb	r3, [sl, #-2]
   140d8:	ldrb	r3, [r8, #1]
   140dc:	strb	r3, [sl, #-1]
   140e0:	mov	r6, r0
   140e4:	mov	r7, r1
   140e8:	mov	r0, r6
   140ec:	mov	r1, r7
   140f0:	mov	r2, #100	; 0x64
   140f4:	mov	r3, #0
   140f8:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   140fc:	mov	r0, r6
   14100:	mov	r1, r7
   14104:	mov	r3, #0
   14108:	mov	r8, r2
   1410c:	mov	r2, #100	; 0x64
   14110:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14114:	ldrb	r2, [r4, r8, lsl #1]
   14118:	add	r3, r4, r8, lsl #1
   1411c:	sub	r8, r5, #2
   14120:	strb	r2, [r5, #-2]
   14124:	ldrb	r3, [r3, #1]
   14128:	strb	r3, [r5, #-1]
   1412c:	mov	r6, r0
   14130:	mov	r7, r1
   14134:	b	141e4 <test_print@@Base+0xa10>
   14138:	add	r3, pc, #408	; 0x198
   1413c:	ldrd	r2, [r3]
   14140:	cmp	r1, r3
   14144:	cmpeq	r0, r2
   14148:	bhi	14334 <test_print@@Base+0xb60>
   1414c:	add	r3, pc, #396	; 0x18c
   14150:	ldrd	r2, [r3]
   14154:	cmp	r1, r3
   14158:	cmpeq	r0, r2
   1415c:	bls	144e0 <test_print@@Base+0xd0c>
   14160:	mov	r3, #0
   14164:	ldr	r4, [pc, #380]	; 142e8 <test_print@@Base+0xb14>
   14168:	strb	r3, [r5, #11]
   1416c:	mov	r9, #11
   14170:	add	r5, r5, #11
   14174:	mov	r0, r6
   14178:	mov	r1, r7
   1417c:	mov	r2, #100	; 0x64
   14180:	mov	r3, #0
   14184:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14188:	mov	r0, r6
   1418c:	sub	r8, r5, #3
   14190:	ldrb	r3, [r4, r2, lsl #1]
   14194:	add	r2, r4, r2, lsl #1
   14198:	strb	r3, [r5, #-2]
   1419c:	ldrb	r1, [r2, #1]
   141a0:	mov	r3, #0
   141a4:	mov	r2, #100	; 0x64
   141a8:	strb	r1, [r5, #-1]
   141ac:	mov	r1, r7
   141b0:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   141b4:	mov	r2, #10
   141b8:	mov	r3, #0
   141bc:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   141c0:	mov	r0, r6
   141c4:	mov	r1, r7
   141c8:	mov	r3, #0
   141cc:	add	r2, r2, #48	; 0x30
   141d0:	strb	r2, [r5, #-3]
   141d4:	mov	r2, #1000	; 0x3e8
   141d8:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   141dc:	mov	r6, r0
   141e0:	mov	r7, r1
   141e4:	mov	r0, r6
   141e8:	mov	r1, r7
   141ec:	mov	r2, #100	; 0x64
   141f0:	mov	r3, #0
   141f4:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   141f8:	mov	r0, r6
   141fc:	ldrb	r3, [r4, r2, lsl #1]
   14200:	add	r2, r4, r2, lsl #1
   14204:	strb	r3, [r8, #-2]
   14208:	ldrb	r1, [r2, #1]
   1420c:	mov	r3, #0
   14210:	mov	r2, #100	; 0x64
   14214:	strb	r1, [r8, #-1]
   14218:	mov	r1, r7
   1421c:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14220:	mov	r2, #100	; 0x64
   14224:	mov	r3, #0
   14228:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   1422c:	mov	r0, r6
   14230:	ldrb	r3, [r4, r2, lsl #1]
   14234:	add	r2, r4, r2, lsl #1
   14238:	strb	r3, [r8, #-4]
   1423c:	ldrb	r1, [r2, #1]
   14240:	mov	r3, #0
   14244:	ldr	r2, [pc, #160]	; 142ec <test_print@@Base+0xb18>
   14248:	strb	r1, [r8, #-3]
   1424c:	mov	r1, r7
   14250:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14254:	mov	r2, #100	; 0x64
   14258:	mov	r3, #0
   1425c:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14260:	mov	r0, r6
   14264:	mov	r1, r7
   14268:	mov	r3, #0
   1426c:	ldrb	lr, [r4, r2, lsl #1]
   14270:	add	ip, r4, r2, lsl #1
   14274:	ldr	r2, [pc, #116]	; 142f0 <test_print@@Base+0xb1c>
   14278:	strb	lr, [r8, #-6]
   1427c:	ldrb	ip, [ip, #1]
   14280:	strb	ip, [r8, #-5]
   14284:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14288:	ldrb	r3, [r4, r0, lsl #1]
   1428c:	add	r0, r4, r0, lsl #1
   14290:	strb	r3, [r8, #-8]
   14294:	ldrb	r3, [r0, #1]
   14298:	mov	r0, r9
   1429c:	strb	r3, [r8, #-7]
   142a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142a4:	mov	r1, r2
   142a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142ac:	b	13bc8 <test_print@@Base+0x3f4>
   142b0:	blcc	fe6c6ab4 <__bss_end__@@Base+0xfe693a1c>
   142b4:	andeq	r0, r0, r0
   142b8:	mrcmi	15, 3, r9, cr2, cr15, {7}
   142bc:	andeq	r0, r0, r8, lsl r9
   142c0:	svcvs	0x00c0ffff
   142c4:	strdeq	r8, [r3], -r2	; <UNPREDICTABLE>
   142c8:			; <UNDEFINED> instruction: 0xa763ffff
   142cc:	stcleq	6, cr11, [r0, #716]!	; 0x2cc
   142d0:	stmibhi	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   142d4:	bhi	ff1dceec <__bss_end__@@Base+0xff1a9e54>
   142d8:	ldmdami	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
   142dc:	andeq	r0, r0, r7, lsl r0
   142e0:	strpl	lr, [fp], #-1023	; 0xfffffc01
   142e4:	andeq	r0, r0, r2
   142e8:	andeq	r1, r2, r8, ror #12
   142ec:	andeq	r2, r0, r0, lsl r7
   142f0:	andeq	r4, pc, r0, asr #4
   142f4:	add	r3, pc, #580	; 0x244
   142f8:	ldrd	r2, [r3]
   142fc:	cmp	r1, r3
   14300:	cmpeq	r0, r2
   14304:	bhi	1449c <test_print@@Base+0xcc8>
   14308:	add	r3, pc, #568	; 0x238
   1430c:	ldrd	r2, [r3]
   14310:	cmp	r1, r3
   14314:	cmpeq	r0, r2
   14318:	bls	14528 <test_print@@Base+0xd54>
   1431c:	mov	r3, #0
   14320:	strb	r3, [r5, #15]
   14324:	mov	r9, #15
   14328:	add	r5, r5, #15
   1432c:	ldr	r4, [pc, #556]	; 14560 <test_print@@Base+0xd8c>
   14330:	b	1444c <test_print@@Base+0xc78>
   14334:	add	r3, pc, #532	; 0x214
   14338:	ldrd	r2, [r3]
   1433c:	cmp	r1, r3
   14340:	cmpeq	r0, r2
   14344:	bls	144f8 <test_print@@Base+0xd24>
   14348:	ldr	r4, [pc, #528]	; 14560 <test_print@@Base+0xd8c>
   1434c:	add	sl, r5, #13
   14350:	mov	r9, #13
   14354:	mov	r3, #0
   14358:	strb	r3, [r5, #13]
   1435c:	mov	r0, r6
   14360:	mov	r1, r7
   14364:	mov	r2, #100	; 0x64
   14368:	mov	r3, #0
   1436c:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14370:	mov	r0, r6
   14374:	mov	r1, r7
   14378:	mov	r3, #0
   1437c:	sub	r5, sl, #2
   14380:	mov	r8, r2
   14384:	mov	r2, #100	; 0x64
   14388:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   1438c:	ldrb	r3, [r4, r8, lsl #1]
   14390:	add	r8, r4, r8, lsl #1
   14394:	strb	r3, [sl, #-2]
   14398:	ldrb	r3, [r8, #1]
   1439c:	strb	r3, [sl, #-1]
   143a0:	mov	r6, r0
   143a4:	mov	r7, r1
   143a8:	b	14174 <test_print@@Base+0x9a0>
   143ac:	mov	r3, #0
   143b0:	strb	r3, [r5, #19]
   143b4:	mov	r2, #100	; 0x64
   143b8:	mov	r3, #0
   143bc:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   143c0:	mov	r0, r6
   143c4:	mov	r1, r7
   143c8:	mov	r3, #0
   143cc:	ldr	r4, [pc, #396]	; 14560 <test_print@@Base+0xd8c>
   143d0:	mov	r9, #19
   143d4:	mov	r8, r2
   143d8:	mov	r2, #100	; 0x64
   143dc:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   143e0:	ldrb	r2, [r4, r8, lsl #1]
   143e4:	add	r3, r4, r8, lsl #1
   143e8:	add	r8, r5, #17
   143ec:	strb	r2, [r5, #17]
   143f0:	ldrb	r3, [r3, #1]
   143f4:	strb	r3, [r5, #18]
   143f8:	mov	r6, r0
   143fc:	mov	r7, r1
   14400:	mov	r0, r6
   14404:	mov	r1, r7
   14408:	mov	r2, #100	; 0x64
   1440c:	mov	r3, #0
   14410:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14414:	mov	r0, r6
   14418:	mov	r1, r7
   1441c:	mov	r3, #0
   14420:	mov	r5, r2
   14424:	mov	r2, #100	; 0x64
   14428:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   1442c:	ldrb	r2, [r4, r5, lsl #1]
   14430:	add	r3, r4, r5, lsl #1
   14434:	sub	r5, r8, #2
   14438:	strb	r2, [r8, #-2]
   1443c:	ldrb	r3, [r3, #1]
   14440:	strb	r3, [r8, #-1]
   14444:	mov	r6, r0
   14448:	mov	r7, r1
   1444c:	mov	r0, r6
   14450:	mov	r1, r7
   14454:	mov	r2, #100	; 0x64
   14458:	mov	r3, #0
   1445c:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   14460:	mov	r0, r6
   14464:	mov	r1, r7
   14468:	mov	r3, #0
   1446c:	sub	sl, r5, #2
   14470:	mov	r8, r2
   14474:	mov	r2, #100	; 0x64
   14478:	bl	20cf8 <flatcc_json_printer_clear@@Base+0x244>
   1447c:	ldrb	r3, [r4, r8, lsl #1]
   14480:	add	r8, r4, r8, lsl #1
   14484:	strb	r3, [r5, #-2]
   14488:	ldrb	r3, [r8, #1]
   1448c:	strb	r3, [r5, #-1]
   14490:	mov	r6, r0
   14494:	mov	r7, r1
   14498:	b	1435c <test_print@@Base+0xb88>
   1449c:	mov	r3, #0
   144a0:	strb	r3, [r5, #16]
   144a4:	mov	r9, #16
   144a8:	add	r5, r5, #16
   144ac:	ldr	r4, [pc, #172]	; 14560 <test_print@@Base+0xd8c>
   144b0:	b	14004 <test_print@@Base+0x830>
   144b4:	add	r3, pc, #156	; 0x9c
   144b8:	ldrd	r2, [r3]
   144bc:	cmp	r1, r3
   144c0:	cmpeq	r0, r2
   144c4:	bls	14510 <test_print@@Base+0xd3c>
   144c8:	mov	r3, #0
   144cc:	strb	r3, [r5, #18]
   144d0:	add	r8, r5, #18
   144d4:	mov	r9, #18
   144d8:	ldr	r4, [pc, #128]	; 14560 <test_print@@Base+0xd8c>
   144dc:	b	13fb8 <test_print@@Base+0x7e4>
   144e0:	mov	r3, #0
   144e4:	strb	r3, [r5, #10]
   144e8:	mov	r9, #10
   144ec:	add	r5, r5, #10
   144f0:	ldr	r4, [pc, #104]	; 14560 <test_print@@Base+0xd8c>
   144f4:	b	140e8 <test_print@@Base+0x914>
   144f8:	mov	r3, #0
   144fc:	strb	r3, [r5, #12]
   14500:	add	sl, r5, #12
   14504:	mov	r9, #12
   14508:	ldr	r4, [pc, #80]	; 14560 <test_print@@Base+0xd8c>
   1450c:	b	1409c <test_print@@Base+0x8c8>
   14510:	mov	r3, #0
   14514:	strb	r3, [r5, #17]
   14518:	add	r8, r5, #17
   1451c:	mov	r9, #17
   14520:	ldr	r4, [pc, #56]	; 14560 <test_print@@Base+0xd8c>
   14524:	b	14400 <test_print@@Base+0xc2c>
   14528:	mov	r3, #0
   1452c:	strb	r3, [r5, #14]
   14530:	add	fp, r5, #14
   14534:	mov	r9, #14
   14538:	ldr	r4, [pc, #32]	; 14560 <test_print@@Base+0xd8c>
   1453c:	b	14050 <test_print@@Base+0x87c>
   14540:	strbge	r7, [r6], #4095	; 0xfff
   14544:	andeq	r8, r3, lr, ror sp
   14548:	ldrshtne	r3, [sl], #-255	; 0xffffff01
   1454c:	strdeq	r5, [r0], -r3
   14550:	strtle	r0, [r5], #4095	; 0xfff
   14554:	andeq	r0, r0, r8, ror #1
   14558:	stcpl	15, cr15, [r9, #1020]	; 0x3fc
   1455c:	smceq	13400	; 0x3458
   14560:	andeq	r1, r2, r8, ror #12
   14564:	ldr	r3, [r0, #20]
   14568:	ldr	r2, [r0, #16]
   1456c:	cmp	r3, r2
   14570:	bcc	145a0 <test_print@@Base+0xdcc>
   14574:	ldr	r2, [r0, #36]	; 0x24
   14578:	mov	r1, r3
   1457c:	cmp	r2, #0
   14580:	moveq	r2, #3
   14584:	ldr	r3, [r0]
   14588:	streq	r2, [r0, #36]	; 0x24
   1458c:	ldr	r2, [r0, #12]
   14590:	sub	r1, r1, r3
   14594:	add	r2, r2, r1
   14598:	str	r3, [r0, #20]
   1459c:	str	r2, [r0, #12]
   145a0:	mov	r2, #0
   145a4:	strb	r2, [r3]
   145a8:	bx	lr
   145ac:	push	{r4, r5, r6, r7, r8, lr}
   145b0:	mov	r4, r0
   145b4:	ldrb	r2, [r0, #25]
   145b8:	ldr	r6, [r0, #32]
   145bc:	ldr	r3, [r0, #20]
   145c0:	ldr	r5, [r0, #16]
   145c4:	mul	r6, r6, r2
   145c8:	add	r2, r3, r6
   145cc:	cmp	r5, r2
   145d0:	bcc	145f4 <test_print@@Base+0xe20>
   145d4:	mov	r0, r3
   145d8:	mov	r2, r6
   145dc:	mov	r1, #32
   145e0:	bl	124e8 <memset@plt>
   145e4:	ldr	r3, [r4, #20]
   145e8:	add	r6, r3, r6
   145ec:	str	r6, [r4, #20]
   145f0:	pop	{r4, r5, r6, r7, r8, pc}
   145f4:	cmp	r3, r5
   145f8:	bcs	14658 <test_print@@Base+0xe84>
   145fc:	sub	r5, r5, r3
   14600:	cmp	r6, r5
   14604:	bls	145d4 <test_print@@Base+0xe00>
   14608:	mov	r8, #32
   1460c:	mov	r7, #0
   14610:	mov	r2, r5
   14614:	mov	r0, r3
   14618:	mov	r1, r8
   1461c:	bl	124e8 <memset@plt>
   14620:	ldr	r3, [r4, #20]
   14624:	ldr	r2, [r4, #44]	; 0x2c
   14628:	add	r3, r3, r5
   1462c:	str	r3, [r4, #20]
   14630:	mov	r1, r7
   14634:	mov	r0, r4
   14638:	blx	r2
   1463c:	ldr	r3, [r4, #20]
   14640:	ldr	r2, [r4, #16]
   14644:	sub	r6, r6, r5
   14648:	sub	r5, r2, r3
   1464c:	cmp	r6, r5
   14650:	bhi	14610 <test_print@@Base+0xe3c>
   14654:	b	145d4 <test_print@@Base+0xe00>
   14658:	ldr	r3, [r0, #44]	; 0x2c
   1465c:	mov	r1, #0
   14660:	blx	r3
   14664:	ldr	r5, [r4, #16]
   14668:	ldr	r3, [r4, #20]
   1466c:	b	145fc <test_print@@Base+0xe28>
   14670:	cmp	r1, #0
   14674:	push	{r4, r5, r6, lr}
   14678:	mov	r4, r0
   1467c:	ldr	ip, [r0, #20]
   14680:	bne	14690 <test_print@@Base+0xebc>
   14684:	ldr	r5, [r0, #16]
   14688:	cmp	ip, r5
   1468c:	bcs	146c8 <test_print@@Base+0xef4>
   14690:	ldr	r0, [r4]
   14694:	ldr	r3, [r4, #40]	; 0x28
   14698:	sub	r5, ip, r0
   1469c:	mov	r1, r5
   146a0:	mov	r2, #1
   146a4:	bl	12488 <fwrite@plt>
   146a8:	ldr	ip, [r4, #12]
   146ac:	ldr	r3, [r4]
   146b0:	add	ip, ip, r5
   146b4:	str	ip, [r4, #12]
   146b8:	str	r3, [r4, #20]
   146bc:	mov	r2, #0
   146c0:	strb	r2, [r3]
   146c4:	pop	{r4, r5, r6, pc}
   146c8:	ldr	r3, [r0, #40]	; 0x28
   146cc:	ldr	r1, [r0, #8]
   146d0:	mov	r2, #1
   146d4:	ldr	r0, [r0]
   146d8:	sub	r5, ip, r5
   146dc:	bl	12488 <fwrite@plt>
   146e0:	ldr	r0, [r4]
   146e4:	ldr	r1, [r4, #8]
   146e8:	mov	r2, r5
   146ec:	add	r1, r0, r1
   146f0:	bl	1244c <memcpy@plt>
   146f4:	ldr	r2, [r4, #12]
   146f8:	ldr	r3, [r4]
   146fc:	ldr	r1, [r4, #8]
   14700:	add	r3, r3, r5
   14704:	add	r2, r2, r1
   14708:	str	r3, [r4, #20]
   1470c:	str	r2, [r4, #12]
   14710:	b	146bc <test_print@@Base+0xee8>
   14714:	ldr	r3, [r0, #20]
   14718:	mov	r2, #0
   1471c:	push	{r4, r5, r6, lr}
   14720:	ldr	r5, [r0]
   14724:	strb	r2, [r3]
   14728:	ldr	r1, [r0, #20]
   1472c:	ldr	r2, [r0, #16]
   14730:	cmp	r1, r2
   14734:	popcc	{r4, r5, r6, pc}
   14738:	mov	r4, r0
   1473c:	ldm	r0, {r0, r1}
   14740:	sub	r5, r3, r5
   14744:	lsl	r1, r1, #1
   14748:	bl	1247c <realloc@plt>
   1474c:	cmp	r0, #0
   14750:	beq	14784 <test_print@@Base+0xfb0>
   14754:	ldr	r3, [r4, #4]
   14758:	add	r2, r0, r5
   1475c:	str	r2, [r4, #20]
   14760:	lsl	r3, r3, #1
   14764:	sub	r1, r3, #64	; 0x40
   14768:	add	ip, r0, r1
   1476c:	stm	r4, {r0, r3}
   14770:	str	ip, [r4, #16]
   14774:	str	r1, [r4, #8]
   14778:	mov	r3, #0
   1477c:	strb	r3, [r2]
   14780:	pop	{r4, r5, r6, pc}
   14784:	ldr	r3, [r4, #36]	; 0x24
   14788:	ldr	r2, [r4]
   1478c:	cmp	r3, #0
   14790:	moveq	r3, #3
   14794:	streq	r3, [r4, #36]	; 0x24
   14798:	ldr	r3, [r4, #12]
   1479c:	str	r2, [r4, #20]
   147a0:	add	r3, r3, r5
   147a4:	str	r3, [r4, #12]
   147a8:	b	14778 <test_print@@Base+0xfa4>
   147ac:	cmp	r0, #99	; 0x63
   147b0:	mov	r3, r0
   147b4:	bls	14808 <test_print@@Base+0x1034>
   147b8:	ldr	r2, [pc, #148]	; 14854 <test_print@@Base+0x1080>
   147bc:	push	{lr}		; (str lr, [sp, #-4]!)
   147c0:	mov	r0, #100	; 0x64
   147c4:	umull	lr, r2, r2, r3
   147c8:	ldr	ip, [pc, #136]	; 14858 <test_print@@Base+0x1084>
   147cc:	mov	lr, #0
   147d0:	lsr	r2, r2, #5
   147d4:	strb	lr, [r1, #3]
   147d8:	mul	r0, r0, r2
   147dc:	add	r2, r2, #48	; 0x30
   147e0:	sub	r3, r3, r0
   147e4:	mov	r0, #3
   147e8:	uxtb	r3, r3
   147ec:	ldrb	lr, [ip, r3, lsl #1]
   147f0:	add	r3, ip, r3, lsl #1
   147f4:	strb	lr, [r1, #1]
   147f8:	ldrb	r3, [r3, #1]
   147fc:	strb	r2, [r1]
   14800:	strb	r3, [r1, #2]
   14804:	pop	{pc}		; (ldr pc, [sp], #4)
   14808:	cmp	r0, #9
   1480c:	bls	1483c <test_print@@Base+0x1068>
   14810:	ldr	r2, [pc, #64]	; 14858 <test_print@@Base+0x1084>
   14814:	sxth	r3, r0
   14818:	mov	r0, #0
   1481c:	strb	r0, [r1, #2]
   14820:	ldrb	ip, [r2, r3, lsl #1]
   14824:	add	r3, r2, r3, lsl #1
   14828:	mov	r0, #2
   1482c:	strb	ip, [r1]
   14830:	ldrb	r3, [r3, #1]
   14834:	strb	r3, [r1, #1]
   14838:	bx	lr
   1483c:	add	r3, r3, #48	; 0x30
   14840:	mov	r2, #0
   14844:	mov	r0, #1
   14848:	strb	r3, [r1]
   1484c:	strb	r2, [r1, #1]
   14850:	bx	lr
   14854:	mvnpl	r8, pc, lsl r5
   14858:	andeq	r1, r2, r8, ror #12
   1485c:	push	{r4, lr}
   14860:	mov	r2, #239	; 0xef
   14864:	ldr	r3, [pc, #8]	; 14874 <test_print@@Base+0x10a0>
   14868:	ldr	r1, [pc, #8]	; 14878 <test_print@@Base+0x10a4>
   1486c:	ldr	r0, [pc, #8]	; 1487c <test_print@@Base+0x10a8>
   14870:	bl	12530 <__assert_fail@plt>
   14874:	andeq	r1, r2, ip, asr #14
   14878:			; <UNDEFINED> instruction: 0x00021db8
   1487c:	andeq	r1, r2, ip, lsl lr
   14880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14884:	mov	sl, r1
   14888:	sub	sp, sp, #12
   1488c:	ldr	r1, [r0, #20]
   14890:	str	r2, [sp, #4]
   14894:	mov	r5, r0
   14898:	add	r2, r1, #1
   1489c:	mov	fp, #0
   148a0:	str	r2, [r0, #20]
   148a4:	mov	r2, #34	; 0x22
   148a8:	strb	r2, [r1]
   148ac:	ldrb	r4, [sl]
   148b0:	mov	r7, sl
   148b4:	cmp	r4, #34	; 0x22
   148b8:	cmpne	r4, #31
   148bc:	bls	14b44 <test_print@@Base+0x1370>
   148c0:	cmp	r4, #92	; 0x5c
   148c4:	bne	148d4 <test_print@@Base+0x1100>
   148c8:	b	14b44 <test_print@@Base+0x1370>
   148cc:	cmp	r4, #92	; 0x5c
   148d0:	beq	148e4 <test_print@@Base+0x1110>
   148d4:	ldrb	r4, [r7, #1]!
   148d8:	cmp	r4, #34	; 0x22
   148dc:	cmpne	r4, #31
   148e0:	bhi	148cc <test_print@@Base+0x10f8>
   148e4:	sub	r9, r7, sl
   148e8:	ldr	r0, [r5, #20]
   148ec:	ldr	r6, [r5, #16]
   148f0:	add	r3, r0, r9
   148f4:	cmp	r6, r3
   148f8:	bls	14a18 <test_print@@Base+0x1244>
   148fc:	mov	r2, r9
   14900:	mov	r1, sl
   14904:	bl	1244c <memcpy@plt>
   14908:	ldr	r3, [r5, #20]
   1490c:	ldr	r2, [sp, #4]
   14910:	add	r3, r3, r9
   14914:	subs	r8, r2, r9
   14918:	str	r3, [r5, #20]
   1491c:	beq	14a98 <test_print@@Base+0x12c4>
   14920:	add	r2, r3, #1
   14924:	str	r2, [r5, #20]
   14928:	cmp	r4, #12
   1492c:	mov	r2, #92	; 0x5c
   14930:	strb	r2, [r3]
   14934:	beq	14ac8 <test_print@@Base+0x12f4>
   14938:	bhi	149e8 <test_print@@Base+0x1214>
   1493c:	cmp	r4, #9
   14940:	beq	14b10 <test_print@@Base+0x133c>
   14944:	cmp	r4, #10
   14948:	beq	14af8 <test_print@@Base+0x1324>
   1494c:	cmp	r4, #8
   14950:	beq	14ae0 <test_print@@Base+0x130c>
   14954:	ldr	r3, [r5, #20]
   14958:	lsr	r1, r4, #4
   1495c:	add	r2, r3, #1
   14960:	str	r2, [r5, #20]
   14964:	mov	r2, #117	; 0x75
   14968:	strb	r2, [r3]
   1496c:	ldr	r3, [r5, #20]
   14970:	cmp	r1, #9
   14974:	add	r2, r3, #1
   14978:	str	r2, [r5, #20]
   1497c:	mov	r2, #48	; 0x30
   14980:	strb	r2, [r3]
   14984:	ldr	r2, [r5, #20]
   14988:	movhi	r3, #87	; 0x57
   1498c:	add	r0, r2, #1
   14990:	str	r0, [r5, #20]
   14994:	mov	r0, #48	; 0x30
   14998:	strb	r0, [r2]
   1499c:	ldr	r2, [r5, #20]
   149a0:	movls	r3, #48	; 0x30
   149a4:	add	r3, r3, r1
   149a8:	and	r4, r4, #15
   149ac:	add	r1, r2, #1
   149b0:	str	r1, [r5, #20]
   149b4:	cmp	r4, #9
   149b8:	strb	r3, [r2]
   149bc:	ldr	r2, [r5, #20]
   149c0:	movhi	r3, #87	; 0x57
   149c4:	movls	r3, #48	; 0x30
   149c8:	add	r1, r2, #1
   149cc:	add	r3, r3, r4
   149d0:	str	r1, [r5, #20]
   149d4:	strb	r3, [r2]
   149d8:	sub	r3, r8, #1
   149dc:	str	r3, [sp, #4]
   149e0:	add	sl, r7, #1
   149e4:	b	148ac <test_print@@Base+0x10d8>
   149e8:	cmp	r4, #34	; 0x22
   149ec:	beq	14ab4 <test_print@@Base+0x12e0>
   149f0:	cmp	r4, #92	; 0x5c
   149f4:	beq	14ab4 <test_print@@Base+0x12e0>
   149f8:	cmp	r4, #13
   149fc:	bne	14954 <test_print@@Base+0x1180>
   14a00:	ldr	r3, [r5, #20]
   14a04:	add	r2, r3, #1
   14a08:	str	r2, [r5, #20]
   14a0c:	mov	r2, #114	; 0x72
   14a10:	strb	r2, [r3]
   14a14:	b	149d8 <test_print@@Base+0x1204>
   14a18:	cmp	r0, r6
   14a1c:	bcs	14b28 <test_print@@Base+0x1354>
   14a20:	sub	r6, r6, r0
   14a24:	cmp	r6, r9
   14a28:	mov	r8, r9
   14a2c:	bcs	14a74 <test_print@@Base+0x12a0>
   14a30:	mov	r2, r6
   14a34:	mov	r1, sl
   14a38:	bl	1244c <memcpy@plt>
   14a3c:	ldr	r3, [r5, #20]
   14a40:	mov	r0, r5
   14a44:	add	r3, r3, r6
   14a48:	str	r3, [r5, #20]
   14a4c:	ldr	r2, [r5, #44]	; 0x2c
   14a50:	mov	r1, fp
   14a54:	blx	r2
   14a58:	ldr	r0, [r5, #20]
   14a5c:	ldr	r3, [r5, #16]
   14a60:	sub	r8, r8, r6
   14a64:	add	sl, sl, r6
   14a68:	sub	r6, r3, r0
   14a6c:	cmp	r8, r6
   14a70:	bhi	14a30 <test_print@@Base+0x125c>
   14a74:	mov	r2, r8
   14a78:	mov	r1, sl
   14a7c:	bl	1244c <memcpy@plt>
   14a80:	ldr	r2, [r5, #20]
   14a84:	add	r3, r2, r8
   14a88:	ldr	r2, [sp, #4]
   14a8c:	str	r3, [r5, #20]
   14a90:	subs	r8, r2, r9
   14a94:	bne	14920 <test_print@@Base+0x114c>
   14a98:	mov	r8, r3
   14a9c:	add	r2, r3, #1
   14aa0:	mov	r3, #34	; 0x22
   14aa4:	str	r2, [r5, #20]
   14aa8:	strb	r3, [r8]
   14aac:	add	sp, sp, #12
   14ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ab4:	ldr	r3, [r5, #20]
   14ab8:	add	r2, r3, #1
   14abc:	str	r2, [r5, #20]
   14ac0:	strb	r4, [r3]
   14ac4:	b	149d8 <test_print@@Base+0x1204>
   14ac8:	ldr	r3, [r5, #20]
   14acc:	add	r2, r3, #1
   14ad0:	str	r2, [r5, #20]
   14ad4:	mov	r2, #102	; 0x66
   14ad8:	strb	r2, [r3]
   14adc:	b	149d8 <test_print@@Base+0x1204>
   14ae0:	ldr	r3, [r5, #20]
   14ae4:	mov	r2, #98	; 0x62
   14ae8:	add	r1, r3, #1
   14aec:	str	r1, [r5, #20]
   14af0:	strb	r2, [r3]
   14af4:	b	149d8 <test_print@@Base+0x1204>
   14af8:	ldr	r3, [r5, #20]
   14afc:	mov	r2, #110	; 0x6e
   14b00:	add	r1, r3, #1
   14b04:	str	r1, [r5, #20]
   14b08:	strb	r2, [r3]
   14b0c:	b	149d8 <test_print@@Base+0x1204>
   14b10:	ldr	r3, [r5, #20]
   14b14:	mov	r2, #116	; 0x74
   14b18:	add	r1, r3, #1
   14b1c:	str	r1, [r5, #20]
   14b20:	strb	r2, [r3]
   14b24:	b	149d8 <test_print@@Base+0x1204>
   14b28:	mov	r0, r5
   14b2c:	ldr	r3, [r5, #44]	; 0x2c
   14b30:	mov	r1, fp
   14b34:	blx	r3
   14b38:	ldr	r6, [r5, #16]
   14b3c:	ldr	r0, [r5, #20]
   14b40:	b	14a20 <test_print@@Base+0x124c>
   14b44:	mov	r9, fp
   14b48:	b	148e8 <test_print@@Base+0x1114>
   14b4c:	push	{r4, r5, r6, r7, r8, lr}
   14b50:	mov	r7, r1
   14b54:	ldrb	r1, [r0, #25]
   14b58:	mov	r4, r0
   14b5c:	mov	r6, r2
   14b60:	cmp	r1, #0
   14b64:	ldr	r3, [r0, #20]
   14b68:	bne	14c78 <test_print@@Base+0x14a4>
   14b6c:	ldr	r2, [r0, #16]
   14b70:	cmp	r3, r2
   14b74:	bcs	14c68 <test_print@@Base+0x1494>
   14b78:	mov	r2, #34	; 0x22
   14b7c:	strb	r2, [r3]
   14b80:	ldrb	r3, [r4, #26]
   14b84:	ldr	r0, [r4, #20]
   14b88:	ldr	r5, [r4, #16]
   14b8c:	cmp	r3, #0
   14b90:	addeq	r0, r0, #1
   14b94:	add	r3, r0, r6
   14b98:	cmp	r5, r3
   14b9c:	str	r0, [r4, #20]
   14ba0:	bhi	14c00 <test_print@@Base+0x142c>
   14ba4:	cmp	r0, r5
   14ba8:	bcs	14c94 <test_print@@Base+0x14c0>
   14bac:	sub	r5, r5, r0
   14bb0:	cmp	r6, r5
   14bb4:	bls	14c00 <test_print@@Base+0x142c>
   14bb8:	mov	r8, #0
   14bbc:	mov	r2, r5
   14bc0:	mov	r1, r7
   14bc4:	bl	1244c <memcpy@plt>
   14bc8:	ldr	r3, [r4, #20]
   14bcc:	mov	r0, r4
   14bd0:	add	r3, r3, r5
   14bd4:	str	r3, [r4, #20]
   14bd8:	ldr	r2, [r4, #44]	; 0x2c
   14bdc:	mov	r1, r8
   14be0:	blx	r2
   14be4:	ldr	r0, [r4, #20]
   14be8:	ldr	r3, [r4, #16]
   14bec:	sub	r6, r6, r5
   14bf0:	add	r7, r7, r5
   14bf4:	sub	r5, r3, r0
   14bf8:	cmp	r6, r5
   14bfc:	bhi	14bbc <test_print@@Base+0x13e8>
   14c00:	mov	r2, r6
   14c04:	mov	r1, r7
   14c08:	bl	1244c <memcpy@plt>
   14c0c:	ldr	r3, [r4, #20]
   14c10:	mov	r0, #58	; 0x3a
   14c14:	add	r6, r3, r6
   14c18:	mov	r3, #34	; 0x22
   14c1c:	str	r6, [r4, #20]
   14c20:	strb	r3, [r6]
   14c24:	ldr	r1, [r4, #20]
   14c28:	ldrb	r3, [r4, #26]
   14c2c:	clz	r3, r3
   14c30:	lsr	r3, r3, #5
   14c34:	add	r2, r1, r3
   14c38:	add	r2, r2, #1
   14c3c:	str	r2, [r4, #20]
   14c40:	strb	r0, [r1, r3]
   14c44:	ldr	r3, [r4, #20]
   14c48:	mov	r2, #32
   14c4c:	strb	r2, [r3]
   14c50:	ldrb	r2, [r4, #25]
   14c54:	ldr	r3, [r4, #20]
   14c58:	cmp	r2, #0
   14c5c:	addne	r3, r3, #1
   14c60:	str	r3, [r4, #20]
   14c64:	pop	{r4, r5, r6, r7, r8, pc}
   14c68:	ldr	r3, [r0, #44]	; 0x2c
   14c6c:	blx	r3
   14c70:	ldr	r3, [r4, #20]
   14c74:	b	14b78 <test_print@@Base+0x13a4>
   14c78:	add	r1, r3, #1
   14c7c:	mov	r2, #10
   14c80:	str	r1, [r0, #20]
   14c84:	strb	r2, [r3]
   14c88:	bl	145ac <test_print@@Base+0xdd8>
   14c8c:	ldr	r3, [r4, #20]
   14c90:	b	14b78 <test_print@@Base+0x13a4>
   14c94:	mov	r0, r4
   14c98:	ldr	r3, [r4, #44]	; 0x2c
   14c9c:	mov	r1, #0
   14ca0:	blx	r3
   14ca4:	ldr	r5, [r4, #16]
   14ca8:	ldr	r0, [r4, #20]
   14cac:	b	14bac <test_print@@Base+0x13d8>
   14cb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cb4:	sub	sp, sp, #148	; 0x94
   14cb8:	subs	r1, r0, #0
   14cbc:	vstr	d0, [sp, #56]	; 0x38
   14cc0:	str	r1, [sp, #96]	; 0x60
   14cc4:	beq	15c98 <test_print@@Base+0x24c4>
   14cc8:	vmov	r2, r3, d0
   14ccc:	vmov	r4, s0
   14cd0:	adds	r6, r2, r2
   14cd4:	adc	r7, r3, r3
   14cd8:	mov	r5, r3
   14cdc:	ldr	r3, [pc, #1356]	; 15230 <test_print@@Base+0x1a5c>
   14ce0:	mov	r2, #0
   14ce4:	cmp	r7, r3
   14ce8:	cmpeq	r6, r2
   14cec:	bhi	15728 <test_print@@Base+0x1f54>
   14cf0:	cmp	r4, #0
   14cf4:	sbcs	r3, r5, #0
   14cf8:	movlt	r2, r1
   14cfc:	vldrlt	d7, [sp, #56]	; 0x38
   14d00:	movlt	r3, #45	; 0x2d
   14d04:	strblt	r3, [r2]
   14d08:	movge	r3, r1
   14d0c:	vneglt.f64	d7, d7
   14d10:	addlt	r3, r2, #1
   14d14:	addlt	r5, r5, #-2147483648	; 0x80000000
   14d18:	str	r3, [sp, #12]
   14d1c:	vstrlt	d7, [sp, #56]	; 0x38
   14d20:	orrs	r3, r4, r5
   14d24:	beq	15700 <test_print@@Base+0x1f2c>
   14d28:	ldr	r3, [pc, #1284]	; 15234 <test_print@@Base+0x1a60>
   14d2c:	mov	r2, #0
   14d30:	cmp	r5, r3
   14d34:	cmpeq	r4, r2
   14d38:	beq	1583c <test_print@@Base+0x2068>
   14d3c:	ldrd	r4, [sp, #56]	; 0x38
   14d40:	and	r0, r4, r2
   14d44:	and	r1, r5, r3
   14d48:	orrs	r3, r0, r1
   14d4c:	strd	r0, [sp, #24]
   14d50:	beq	15740 <test_print@@Base+0x1f6c>
   14d54:	ldr	r6, [pc, #1244]	; 15238 <test_print@@Base+0x1a64>
   14d58:	ldr	r9, [pc, #1264]	; 15250 <test_print@@Base+0x1a7c>
   14d5c:	mvn	r8, #0
   14d60:	and	r6, r6, r5, lsr #20
   14d64:	and	r3, r9, r5
   14d68:	sub	r6, r6, #1072	; 0x430
   14d6c:	and	r2, r8, r4
   14d70:	mov	r1, r3
   14d74:	mov	r8, r2
   14d78:	mov	r9, r3
   14d7c:	adds	r2, r2, #0
   14d80:	sub	r3, r6, #3
   14d84:	str	r3, [sp, #16]
   14d88:	adc	r3, r1, #1048576	; 0x100000
   14d8c:	mov	fp, r3
   14d90:	ldr	r3, [sp, #16]
   14d94:	sub	r7, r6, #4
   14d98:	mov	sl, r2
   14d9c:	sub	lr, r3, #10
   14da0:	mov	r2, sl
   14da4:	mov	r3, fp
   14da8:	lsl	r1, r3, #10
   14dac:	orr	r1, r1, r2, lsr #22
   14db0:	lsl	r0, r2, #10
   14db4:	mov	r3, r1
   14db8:	ldr	r1, [pc, #1148]	; 1523c <test_print@@Base+0x1a68>
   14dbc:	mov	r2, r0
   14dc0:	mov	r0, #0
   14dc4:	and	r4, r0, r2
   14dc8:	and	r5, r1, r3
   14dcc:	orrs	r1, r4, r5
   14dd0:	mov	ip, lr
   14dd4:	sub	lr, lr, #10
   14dd8:	beq	14da8 <test_print@@Base+0x15d4>
   14ddc:	mov	r5, r3
   14de0:	mov	r4, r2
   14de4:	cmp	r2, #0
   14de8:	sbcs	r3, r3, #0
   14dec:	strd	r4, [sp]
   14df0:	blt	14e1c <test_print@@Base+0x1648>
   14df4:	sub	r1, ip, #1
   14df8:	mov	r3, r5
   14dfc:	adds	r2, r2, r2
   14e00:	adc	r3, r3, r3
   14e04:	cmp	r2, #0
   14e08:	sbcs	r0, r3, #0
   14e0c:	mov	ip, r1
   14e10:	sub	r1, r1, #1
   14e14:	bge	14dfc <test_print@@Base+0x1628>
   14e18:	strd	r2, [sp]
   14e1c:	adds	r2, sl, sl
   14e20:	adc	r3, fp, fp
   14e24:	adds	r0, r2, #1
   14e28:	adc	r1, r3, #0
   14e2c:	sub	r6, r7, #10
   14e30:	strd	r2, [sp, #40]	; 0x28
   14e34:	lsl	lr, r1, #10
   14e38:	lsl	r4, r0, #10
   14e3c:	ldr	r5, [pc, #1016]	; 1523c <test_print@@Base+0x1a68>
   14e40:	orr	lr, lr, r0, lsr #22
   14e44:	mov	r0, r4
   14e48:	mov	r4, #0
   14e4c:	and	r3, r5, lr
   14e50:	and	r2, r4, r0
   14e54:	mov	r4, r2
   14e58:	mov	r5, r3
   14e5c:	mov	r1, lr
   14e60:	orrs	lr, r4, r5
   14e64:	mov	lr, r6
   14e68:	sub	r6, r6, #10
   14e6c:	beq	14e34 <test_print@@Base+0x1660>
   14e70:	cmp	r0, #0
   14e74:	sbcs	r3, r1, #0
   14e78:	strd	r0, [sp, #32]
   14e7c:	blt	14eac <test_print@@Base+0x16d8>
   14e80:	ldrd	r2, [sp]
   14e84:	sub	r4, lr, #1
   14e88:	adds	r0, r0, r0
   14e8c:	adc	r1, r1, r1
   14e90:	cmp	r0, #0
   14e94:	sbcs	lr, r1, #0
   14e98:	mov	lr, r4
   14e9c:	sub	r4, r4, #1
   14ea0:	bge	14e88 <test_print@@Base+0x16b4>
   14ea4:	strd	r2, [sp]
   14ea8:	strd	r0, [sp, #32]
   14eac:	vldr	d7, [sp, #56]	; 0x38
   14eb0:	vcmpe.f64	d7, #0.0
   14eb4:	vmrs	APSR_nzcv, fpscr
   14eb8:	ble	15cb0 <test_print@@Base+0x24dc>
   14ebc:	vmov.f64	d6, d7
   14ec0:	vldr	d7, [pc, #848]	; 15218 <test_print@@Base+0x1a44>
   14ec4:	vcmpe.f64	d6, d7
   14ec8:	vmrs	APSR_nzcv, fpscr
   14ecc:	bhi	15cb0 <test_print@@Base+0x24dc>
   14ed0:	ldr	r5, [sp, #28]
   14ed4:	orr	r4, r8, r9
   14ed8:	adds	r5, r5, #0
   14edc:	movne	r5, #1
   14ee0:	cmp	r4, #0
   14ee4:	movne	r5, #0
   14ee8:	cmp	r5, #0
   14eec:	bne	15b20 <test_print@@Base+0x234c>
   14ef0:	ldrd	r4, [sp, #40]	; 0x28
   14ef4:	subs	r4, r4, #1
   14ef8:	sbc	r5, r5, #0
   14efc:	mov	r2, r4
   14f00:	mov	r3, r5
   14f04:	mvn	r6, #60	; 0x3c
   14f08:	sub	r6, r6, ip
   14f0c:	vldr	d5, [pc, #780]	; 15220 <test_print@@Base+0x1a4c>
   14f10:	vmov	s15, r6
   14f14:	vldr	d6, [pc, #780]	; 15228 <test_print@@Base+0x1a54>
   14f18:	sub	r6, r7, lr
   14f1c:	sub	r7, r6, #32
   14f20:	vcvt.f64.s32	d7, s15
   14f24:	lsl	fp, r3, r6
   14f28:	rsb	r5, r6, #32
   14f2c:	orr	fp, fp, r2, lsl r7
   14f30:	lsl	sl, r2, r6
   14f34:	vmul.f64	d7, d7, d5
   14f38:	orr	fp, fp, r2, lsr r5
   14f3c:	vcmpe.f64	d7, d6
   14f40:	vcvt.s32.f64	s11, d7
   14f44:	vmrs	APSR_nzcv, fpscr
   14f48:	vmov	r4, s11
   14f4c:	bmi	14f64 <test_print@@Base+0x1790>
   14f50:	vcvt.f64.s32	d5, s11
   14f54:	vsub.f64	d7, d7, d5
   14f58:	vcmp.f64	d7, d6
   14f5c:	vmrs	APSR_nzcv, fpscr
   14f60:	addne	r4, r4, #1
   14f64:	add	r4, r4, #344	; 0x158
   14f68:	adds	r8, r4, #3
   14f6c:	addmi	r8, r4, #10
   14f70:	ldr	r3, [pc, #712]	; 15240 <test_print@@Base+0x1a6c>
   14f74:	asr	r8, r8, #3
   14f78:	add	r8, r8, #1
   14f7c:	add	r4, r3, #304	; 0x130
   14f80:	lsl	r3, r8, #4
   14f84:	add	r4, r4, r3
   14f88:	str	r3, [sp, #100]	; 0x64
   14f8c:	mov	r3, #0
   14f90:	mov	r1, r3
   14f94:	ldrd	r2, [r4, #-8]
   14f98:	ldrd	r6, [sp]
   14f9c:	mov	r7, #0
   14fa0:	mov	r8, r2
   14fa4:	mov	r9, r3
   14fa8:	ldrd	r2, [sp, #32]
   14fac:	mov	r3, #0
   14fb0:	mov	r5, r3
   14fb4:	mov	r4, r2
   14fb8:	mul	r2, r8, r1
   14fbc:	strd	r4, [sp, #24]
   14fc0:	mov	r4, sl
   14fc4:	mov	r5, r1
   14fc8:	ldr	r1, [sp, #28]
   14fcc:	strd	r4, [sp, #80]	; 0x50
   14fd0:	strd	r6, [sp, #40]	; 0x28
   14fd4:	mul	r0, r8, r1
   14fd8:	ldr	r1, [sp, #80]	; 0x50
   14fdc:	mov	r7, #0
   14fe0:	ldr	r3, [sp, #4]
   14fe4:	mla	r2, r1, r7, r2
   14fe8:	ldr	r1, [sp, #24]
   14fec:	umull	r4, r5, r8, sl
   14ff0:	mla	r1, r1, r7, r0
   14ff4:	mov	r6, r8
   14ff8:	str	r1, [sp, #124]	; 0x7c
   14ffc:	umull	r0, r1, r3, r8
   15000:	add	r3, r2, r5
   15004:	ldrd	r4, [sp, #40]	; 0x28
   15008:	strd	r0, [sp, #72]	; 0x48
   1500c:	umull	r0, r1, r8, fp
   15010:	str	r3, [sp, #48]	; 0x30
   15014:	umull	r2, r3, r4, r9
   15018:	strd	r0, [sp, #88]	; 0x58
   1501c:	mov	r0, r8
   15020:	strd	r2, [sp, #64]	; 0x40
   15024:	ldr	r3, [sp, #92]	; 0x5c
   15028:	mov	r1, r9
   1502c:	mla	r2, fp, r7, r3
   15030:	umull	sl, fp, r9, fp
   15034:	ldr	r9, [pc, #516]	; 15240 <test_print@@Base+0x1a6c>
   15038:	ldr	r3, [sp, #100]	; 0x64
   1503c:	strd	sl, [sp, #112]	; 0x70
   15040:	mov	fp, r5
   15044:	mul	r5, r4, r7
   15048:	strd	r0, [sp, #16]
   1504c:	add	r0, r9, #296	; 0x128
   15050:	mla	r9, r8, fp, r5
   15054:	add	r3, r0, r3
   15058:	mov	r0, #0
   1505c:	str	r0, [sp, #52]	; 0x34
   15060:	str	r9, [sp, #120]	; 0x78
   15064:	ldrd	r8, [sp, #48]	; 0x30
   15068:	str	r3, [sp, #100]	; 0x64
   1506c:	ldr	r3, [sp, #88]	; 0x58
   15070:	str	r2, [sp, #48]	; 0x30
   15074:	adds	r8, r8, r3
   15078:	adc	r9, r9, #0
   1507c:	adds	sl, r8, #-2147483648	; 0x80000000
   15080:	adc	fp, r9, #0
   15084:	ldr	r3, [sp, #36]	; 0x24
   15088:	strd	sl, [sp, #104]	; 0x68
   1508c:	ldr	fp, [sp, #24]
   15090:	umull	r8, r9, r6, r3
   15094:	umull	r4, r5, r6, fp
   15098:	strd	r8, [sp, #88]	; 0x58
   1509c:	strd	r4, [sp, #128]	; 0x80
   150a0:	ldrd	sl, [sp, #112]	; 0x70
   150a4:	str	r0, [sp, #52]	; 0x34
   150a8:	ldrd	r8, [sp, #80]	; 0x50
   150ac:	subs	sl, sl, #1
   150b0:	sbc	fp, fp, #0
   150b4:	mov	r4, sl
   150b8:	mov	r5, fp
   150bc:	ldrd	sl, [sp, #48]	; 0x30
   150c0:	ldrd	r2, [sp, #16]
   150c4:	adds	sl, sl, r4
   150c8:	adc	fp, fp, r5
   150cc:	umull	r4, r5, r3, r8
   150d0:	mov	r8, r9
   150d4:	mla	r2, r3, r8, r5
   150d8:	ldrd	r8, [sp, #104]	; 0x68
   150dc:	adds	r8, r8, r4
   150e0:	adc	r9, r9, #0
   150e4:	adds	r2, sl, r2
   150e8:	adc	r3, fp, r0
   150ec:	ldrd	r4, [sp, #32]
   150f0:	strd	r2, [sp, #80]	; 0x50
   150f4:	ldrd	r2, [sp, #16]
   150f8:	mov	sl, r9
   150fc:	ldr	r9, [sp, #92]	; 0x5c
   15100:	mla	r1, r5, r7, r9
   15104:	umull	r4, r5, r3, r5
   15108:	strd	r4, [sp, #32]
   1510c:	ldrd	r4, [sp, #24]
   15110:	str	r0, [sp, #28]
   15114:	umull	r8, r9, r3, r4
   15118:	mla	r2, r3, r5, r9
   1511c:	ldrd	r4, [sp, #32]
   15120:	strd	r8, [sp, #48]	; 0x30
   15124:	ldrd	r8, [sp, #80]	; 0x50
   15128:	adds	r4, r4, #1
   1512c:	adc	r5, r5, #0
   15130:	adds	r8, r8, sl
   15134:	adc	r9, r9, r0
   15138:	adds	sl, r1, r4
   1513c:	mov	r4, r2
   15140:	ldrd	r2, [sp, #40]	; 0x28
   15144:	strd	r8, [sp, #32]
   15148:	ldr	r1, [sp, #76]	; 0x4c
   1514c:	umull	r8, r9, r2, r6
   15150:	ldr	r2, [sp, #68]	; 0x44
   15154:	adc	fp, r0, r5
   15158:	strd	r8, [sp, #40]	; 0x28
   1515c:	ldr	r8, [sp, #4]
   15160:	adds	r6, sl, r4
   15164:	ldr	r5, [sp, #124]	; 0x7c
   15168:	mla	r1, r8, r7, r1
   1516c:	ldr	r7, [sp, #20]
   15170:	ldr	sl, [sp, #88]	; 0x58
   15174:	mla	r2, r7, r3, r2
   15178:	adc	r7, fp, r0
   1517c:	strd	r6, [sp, #80]	; 0x50
   15180:	ldr	r7, [sp, #132]	; 0x84
   15184:	add	r3, r5, r7
   15188:	adds	r6, r3, sl
   1518c:	ldr	r5, [sp, #120]	; 0x78
   15190:	ldr	r3, [sp, #44]	; 0x2c
   15194:	adc	r7, r0, #0
   15198:	adds	r8, r6, #-2147483648	; 0x80000000
   1519c:	adc	r9, r7, #0
   151a0:	add	r3, r5, r3
   151a4:	str	r3, [sp, #24]
   151a8:	ldr	r7, [sp, #72]	; 0x48
   151ac:	strd	r8, [sp, #40]	; 0x28
   151b0:	ldrd	r4, [sp, #24]
   151b4:	ldrd	r8, [sp, #40]	; 0x28
   151b8:	ldr	sl, [sp, #48]	; 0x30
   151bc:	adds	r4, r4, r7
   151c0:	adc	r5, r5, #0
   151c4:	adds	r6, r2, r1
   151c8:	adc	r7, r0, r0
   151cc:	adds	r8, r8, sl
   151d0:	adc	r9, r9, #0
   151d4:	adds	r2, r4, #-2147483648	; 0x80000000
   151d8:	adc	r3, r5, #0
   151dc:	ldr	r5, [sp, #20]
   151e0:	strd	r2, [sp, #24]
   151e4:	ldr	r3, [sp, #4]
   151e8:	ldr	r2, [sp, #64]	; 0x40
   151ec:	ldr	r1, [sp, #100]	; 0x64
   151f0:	umlal	r6, r7, r5, r3
   151f4:	ldrd	r4, [sp, #24]
   151f8:	ldrsh	r3, [r1, #8]
   151fc:	strd	r6, [sp]
   15200:	adds	r4, r4, r2
   15204:	adc	r5, r5, #0
   15208:	mov	r6, r5
   1520c:	ldrd	r4, [sp, #80]	; 0x50
   15210:	b	15278 <test_print@@Base+0x1aa4>
   15214:	nop			; (mov r0, r0)
   15218:			; <UNDEFINED> instruction: 0xffffffff
   1521c:	svcvc	0x00efffff
   15220:			; <UNDEFINED> instruction: 0x509f79fe
   15224:	svccc	0x00d34413
	...
   15230:			; <UNDEFINED> instruction: 0xffe00000
   15234:	svcvc	0x00f00000	; IMB
   15238:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1523c:			; <UNDEFINED> instruction: 0xffc00000
   15240:	andeq	r1, r2, r8, ror #12
   15244:	stclgt	12, cr12, [ip], {205}	; 0xcd
   15248:	andeq	r1, r2, r4, lsr pc
   1524c:	strdeq	r1, [r2], -ip
   15250:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   15254:			; <UNDEFINED> instruction: 0xfffffbce
   15258:			; <UNDEFINED> instruction: 0xfffffbcd
   1525c:	rsbeq	r6, r6, r9, ror #28
   15260:	strbtvs	r6, [r6], -r7, ror #12
   15264:	andeq	r1, r2, r0, ror r7
   15268:	strdeq	r1, [r2], -r8
   1526c:	andeq	r1, r2, r4, lsl #15
   15270:	andeq	r1, r2, r0, lsr #29
   15274:	andeq	r1, r2, ip, lsl #30
   15278:	add	lr, lr, r3
   1527c:	add	ip, r3, ip
   15280:	adds	r4, r4, r9
   15284:	adc	r5, r5, r0
   15288:	mov	sl, r4
   1528c:	mov	fp, r5
   15290:	ldrd	r4, [sp, #32]
   15294:	ldrd	r8, [sp]
   15298:	add	r3, lr, #64	; 0x40
   1529c:	subs	r4, sl, r4
   152a0:	sbc	r5, fp, r5
   152a4:	str	r3, [sp, #120]	; 0x78
   152a8:	strd	r4, [sp, #16]
   152ac:	ldrd	r4, [sp, #32]
   152b0:	ldrsh	r3, [r1, #10]
   152b4:	adds	r8, r8, r6
   152b8:	adc	r9, r9, r0
   152bc:	cmp	r5, fp
   152c0:	str	r3, [sp, #104]	; 0x68
   152c4:	cmpeq	r4, sl
   152c8:	add	r3, ip, #64	; 0x40
   152cc:	strd	sl, [sp, #80]	; 0x50
   152d0:	strd	r8, [sp, #88]	; 0x58
   152d4:	str	r3, [sp, #100]	; 0x64
   152d8:	bhi	15cac <test_print@@Base+0x24d8>
   152dc:	add	r3, ip, #129	; 0x81
   152e0:	mvn	r8, #63	; 0x3f
   152e4:	add	r1, r3, r3, lsl #4
   152e8:	sub	r8, r8, ip
   152ec:	add	r3, r3, r1, lsl #3
   152f0:	sub	lr, r8, #32
   152f4:	mov	r1, #1
   152f8:	add	r3, r3, r3, lsl #3
   152fc:	mov	r4, #0
   15300:	asr	ip, r3, #12
   15304:	mov	r5, #0
   15308:	lsl	r3, r1, lr
   1530c:	strd	r4, [sp, #64]	; 0x40
   15310:	str	r3, [sp, #68]	; 0x44
   15314:	rsb	r9, r8, #32
   15318:	ldrd	r2, [sp, #80]	; 0x50
   1531c:	ldr	r4, [sp, #68]	; 0x44
   15320:	add	r6, ip, r1
   15324:	ldr	r0, [pc, #-236]	; 15240 <test_print@@Base+0x1a6c>
   15328:	orr	r4, r4, r1, lsr r9
   1532c:	lsl	r1, r1, r8
   15330:	add	r0, r0, r6, lsl #2
   15334:	lsr	r5, r2, r8
   15338:	str	r4, [sp, #68]	; 0x44
   1533c:	str	r1, [sp, #64]	; 0x40
   15340:	ldr	r4, [r0, #1688]	; 0x698
   15344:	orr	r5, r5, r3, lsl r9
   15348:	ldrd	r0, [sp, #64]	; 0x40
   1534c:	orr	r5, r5, r3, lsr lr
   15350:	subs	r0, r0, #1
   15354:	sbc	r1, r1, #0
   15358:	cmp	r5, r4
   1535c:	strd	r0, [sp, #72]	; 0x48
   15360:	and	r3, r3, r1
   15364:	ldrcc	r1, [pc, #-300]	; 15240 <test_print@@Base+0x1a6c>
   15368:	movcc	r6, ip
   1536c:	addcc	r1, r1, ip, lsl #2
   15370:	str	lr, [sp]
   15374:	ldrcc	r4, [r1, #1688]	; 0x698
   15378:	cmp	r6, #0
   1537c:	and	r2, r2, r0
   15380:	ble	15c64 <test_print@@Base+0x2490>
   15384:	mov	r1, r4
   15388:	mov	r0, r5
   1538c:	strd	r2, [sp, #24]
   15390:	bl	20aec <flatcc_json_printer_clear@@Base+0x38>
   15394:	ldr	r3, [sp, #12]
   15398:	mov	r1, r4
   1539c:	sub	r6, r6, #1
   153a0:	add	r0, r0, #48	; 0x30
   153a4:	strb	r0, [r3]
   153a8:	mov	r0, r5
   153ac:	bl	20cd8 <flatcc_json_printer_clear@@Base+0x224>
   153b0:	ldr	r3, [sp]
   153b4:	mov	ip, #0
   153b8:	mov	r5, r1
   153bc:	lsl	r1, r1, r3
   153c0:	ldrd	r2, [sp, #24]
   153c4:	lsl	r0, r5, r8
   153c8:	orr	r1, r1, r5, lsr r9
   153cc:	adds	sl, r0, r2
   153d0:	adc	fp, r1, r3
   153d4:	ldrd	r0, [sp, #16]
   153d8:	strd	sl, [sp, #40]	; 0x28
   153dc:	cmp	r1, fp
   153e0:	cmpeq	r0, sl
   153e4:	bhi	15c6c <test_print@@Base+0x2498>
   153e8:	ldr	fp, [pc, #-428]	; 15244 <test_print@@Base+0x1a70>
   153ec:	str	ip, [sp, #48]	; 0x30
   153f0:	ldr	sl, [sp, #12]
   153f4:	mov	r7, #1
   153f8:	str	r8, [sp, #24]
   153fc:	strd	r2, [sp, #40]	; 0x28
   15400:	str	r9, [sp, #32]
   15404:	b	15468 <test_print@@Base+0x1c94>
   15408:	mov	r1, r4
   1540c:	mov	r0, r5
   15410:	bl	20aec <flatcc_json_printer_clear@@Base+0x38>
   15414:	mov	r1, r4
   15418:	add	r7, r7, #1
   1541c:	sub	r6, r6, #1
   15420:	add	r0, r0, #48	; 0x30
   15424:	strb	r0, [sl, #1]!
   15428:	mov	r0, r5
   1542c:	bl	20cd8 <flatcc_json_printer_clear@@Base+0x224>
   15430:	ldr	r3, [sp]
   15434:	lsl	r9, r1, r3
   15438:	ldr	r3, [sp, #32]
   1543c:	mov	r5, r1
   15440:	orr	r9, r9, r1, lsr r3
   15444:	ldr	r3, [sp, #24]
   15448:	lsl	r8, r1, r3
   1544c:	ldrd	r0, [sp, #40]	; 0x28
   15450:	ldrd	r2, [sp, #16]
   15454:	adds	r0, r0, r8
   15458:	adc	r1, r1, r9
   1545c:	cmp	r3, r1
   15460:	cmpeq	r2, r0
   15464:	bhi	15858 <test_print@@Base+0x2084>
   15468:	umull	r3, r4, fp, r4
   1546c:	cmp	r6, #0
   15470:	lsr	r4, r4, #3
   15474:	bne	15408 <test_print@@Base+0x1c34>
   15478:	ldr	r8, [sp, #24]
   1547c:	ldrd	r2, [sp, #40]	; 0x28
   15480:	ldr	r9, [sp, #32]
   15484:	ldr	r1, [sp, #12]
   15488:	str	r8, [sp, #24]
   1548c:	add	r4, r1, r7
   15490:	str	r9, [sp, #32]
   15494:	ldrd	r8, [sp, #16]
   15498:	mov	sl, #1
   1549c:	mov	fp, #0
   154a0:	mov	lr, #10
   154a4:	mov	r0, r4
   154a8:	umull	r4, r5, r2, lr
   154ac:	mul	r1, lr, r9
   154b0:	mla	r5, lr, r3, r5
   154b4:	ldr	r3, [sp, #24]
   154b8:	str	r1, [sp, #16]
   154bc:	umull	r8, r9, r8, lr
   154c0:	lsr	r1, r4, r3
   154c4:	ldr	r3, [sp, #32]
   154c8:	mul	ip, lr, fp
   154cc:	orr	r1, r1, r5, lsl r3
   154d0:	ldr	r3, [sp]
   154d4:	umull	sl, fp, sl, lr
   154d8:	orr	r1, r1, r5, lsr r3
   154dc:	ldrd	r2, [sp, #72]	; 0x48
   154e0:	add	r1, r1, #48	; 0x30
   154e4:	add	r7, r7, #1
   154e8:	and	r2, r2, r4
   154ec:	ldr	r4, [sp, #16]
   154f0:	and	r3, r3, r5
   154f4:	add	r9, r4, r9
   154f8:	cmp	r9, r3
   154fc:	cmpeq	r8, r2
   15500:	sub	r6, r6, #1
   15504:	strb	r1, [r0], #1
   15508:	add	fp, ip, fp
   1550c:	bls	154a8 <test_print@@Base+0x1cd4>
   15510:	ldrd	r4, [sp, #88]	; 0x58
   15514:	ldrd	r0, [sp, #80]	; 0x50
   15518:	strd	r8, [sp, #16]
   1551c:	subs	r0, r0, r4
   15520:	sbc	r1, r1, r5
   15524:	strd	r0, [sp]
   15528:	ldrd	r0, [sp, #80]	; 0x50
   1552c:	cmp	r5, r1
   15530:	cmpeq	r4, r0
   15534:	ldr	r1, [sp, #100]	; 0x64
   15538:	ldr	r0, [sp, #120]	; 0x78
   1553c:	movhi	lr, #1
   15540:	movls	lr, #0
   15544:	cmp	r1, r0
   15548:	orrne	lr, lr, #1
   1554c:	cmp	lr, #0
   15550:	bne	15cac <test_print@@Base+0x24d8>
   15554:	ldrd	r4, [sp]
   15558:	ldr	r0, [sp]
   1555c:	mul	r1, sl, r5
   15560:	umull	r4, r5, sl, r4
   15564:	mla	r0, r0, fp, r1
   15568:	strd	r4, [sp, #32]
   1556c:	add	r1, r0, r5
   15570:	str	r1, [sp, #36]	; 0x24
   15574:	ldrd	r0, [sp, #32]
   15578:	subs	r0, r0, sl
   1557c:	sbc	r1, r1, fp
   15580:	cmp	r3, r1
   15584:	cmpeq	r2, r0
   15588:	strd	r0, [sp]
   1558c:	bcs	15c50 <test_print@@Base+0x247c>
   15590:	subs	r0, r8, r2
   15594:	sbc	r1, r9, r3
   15598:	mov	r4, r8
   1559c:	mov	r5, r9
   155a0:	ldrd	r8, [sp, #64]	; 0x40
   155a4:	cmp	r9, r1
   155a8:	cmpeq	r8, r0
   155ac:	bhi	15c7c <test_print@@Base+0x24a8>
   155b0:	subs	r4, r4, r8
   155b4:	ldr	r0, [sp, #12]
   155b8:	sbc	r5, r5, r9
   155bc:	sub	r1, r7, #1
   155c0:	subs	r4, r4, r2
   155c4:	strd	sl, [sp, #24]
   155c8:	sbc	r5, r5, r3
   155cc:	add	lr, r0, r1
   155d0:	mov	ip, r7
   155d4:	mov	fp, r6
   155d8:	ldrd	r6, [sp]
   155dc:	adds	r0, r8, r2
   155e0:	adc	r1, r9, r3
   155e4:	cmp	r7, r1
   155e8:	cmpeq	r6, r0
   155ec:	bhi	15808 <test_print@@Base+0x2034>
   155f0:	mov	r4, r6
   155f4:	mov	r5, r7
   155f8:	subs	r8, r4, r2
   155fc:	sbc	r9, r5, r3
   15600:	subs	r4, r0, r4
   15604:	sbc	r5, r1, r5
   15608:	cmp	r9, r5
   1560c:	cmpeq	r8, r4
   15610:	mov	r6, fp
   15614:	mov	r7, ip
   15618:	ldrd	sl, [sp, #24]
   1561c:	bcc	15c50 <test_print@@Base+0x247c>
   15620:	ldr	r3, [sp, #12]
   15624:	sub	ip, ip, #1
   15628:	ldrb	r2, [r3, ip]
   1562c:	sub	r2, r2, #1
   15630:	strb	r2, [r3, ip]
   15634:	ldrd	r8, [sp, #32]
   15638:	adds	r8, r8, sl
   1563c:	adc	r9, r9, fp
   15640:	cmp	r9, r1
   15644:	cmpeq	r8, r0
   15648:	bls	156a0 <test_print@@Base+0x1ecc>
   1564c:	ldrd	r4, [sp, #16]
   15650:	ldrd	r2, [sp, #64]	; 0x40
   15654:	subs	r4, r4, r0
   15658:	sbc	r5, r5, r1
   1565c:	cmp	r3, r5
   15660:	cmpeq	r2, r4
   15664:	bhi	156a0 <test_print@@Base+0x1ecc>
   15668:	adds	r2, r2, r0
   1566c:	adc	r3, r3, r1
   15670:	mov	r5, r3
   15674:	mov	r4, r2
   15678:	cmp	r9, r5
   1567c:	cmpeq	r8, r4
   15680:	bhi	156d8 <test_print@@Base+0x1f04>
   15684:	subs	r2, r4, r8
   15688:	sbc	r3, r5, r9
   1568c:	subs	r8, r8, r0
   15690:	sbc	r9, r9, r1
   15694:	cmp	r9, r3
   15698:	cmpeq	r8, r2
   1569c:	bhi	156d8 <test_print@@Base+0x1f04>
   156a0:	adds	r4, sl, sl
   156a4:	adc	r5, fp, fp
   156a8:	cmp	r5, r1
   156ac:	cmpeq	r4, r0
   156b0:	bhi	156d8 <test_print@@Base+0x1f04>
   156b4:	ldrd	r2, [sp, #16]
   156b8:	lsl	r5, fp, #2
   156bc:	lsl	r4, sl, #2
   156c0:	subs	r2, r2, r4
   156c4:	orr	r5, r5, sl, lsr #30
   156c8:	sbc	r3, r3, r5
   156cc:	cmp	r3, r1
   156d0:	cmpeq	r2, r0
   156d4:	bcs	157a4 <test_print@@Base+0x1fd0>
   156d8:	ldr	r4, [sp, #12]
   156dc:	ldrd	r2, [sp, #56]	; 0x38
   156e0:	ldr	r1, [pc, #-1184]	; 15248 <test_print@@Base+0x1a74>
   156e4:	mov	r0, r4
   156e8:	bl	1250c <sprintf@plt>
   156ec:	ldr	r3, [sp, #96]	; 0x60
   156f0:	sub	r3, r4, r3
   156f4:	add	r0, r3, r0
   156f8:	add	sp, sp, #148	; 0x94
   156fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15700:	ldr	r1, [sp, #12]
   15704:	mov	r2, #48	; 0x30
   15708:	mov	r0, r1
   1570c:	mov	r3, #0
   15710:	strb	r2, [r1]
   15714:	strb	r3, [r0, #1]!
   15718:	ldr	r3, [sp, #96]	; 0x60
   1571c:	sub	r0, r0, r3
   15720:	add	sp, sp, #148	; 0x94
   15724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15728:	vmov	r3, s0
   1572c:	mov	r2, r5
   15730:	ldr	r1, [pc, #-1260]	; 1524c <test_print@@Base+0x1a78>
   15734:	add	sp, sp, #148	; 0x94
   15738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1573c:	b	1250c <sprintf@plt>
   15740:	ldr	fp, [pc, #-1272]	; 15250 <test_print@@Base+0x1a7c>
   15744:	mvn	sl, #0
   15748:	and	r3, fp, r5
   1574c:	and	r2, sl, r4
   15750:	mov	r1, r3
   15754:	mov	fp, r3
   15758:	orrs	r3, r2, r3
   1575c:	mov	sl, r2
   15760:	beq	15cc4 <test_print@@Base+0x24f0>
   15764:	ldr	r3, [pc, #-1304]	; 15254 <test_print@@Base+0x1a80>
   15768:	mov	r8, r2
   1576c:	mov	r9, r1
   15770:	ldr	r7, [pc, #-1312]	; 15258 <test_print@@Base+0x1a84>
   15774:	str	r3, [sp, #16]
   15778:	b	14d9c <test_print@@Base+0x15c8>
   1577c:	mov	r7, lr
   15780:	cmp	fp, #0
   15784:	cmpeq	sl, #1
   15788:	bls	156d8 <test_print@@Base+0x1f04>
   1578c:	ldrd	r4, [sp, #16]
   15790:	subs	r4, r4, #4
   15794:	sbc	r5, r5, #0
   15798:	cmp	r5, fp
   1579c:	cmpeq	r4, sl
   157a0:	bcc	156d8 <test_print@@Base+0x1f04>
   157a4:	ldr	r3, [sp, #104]	; 0x68
   157a8:	cmp	r7, #2
   157ac:	sub	r6, r6, r3
   157b0:	movle	r2, #1
   157b4:	subgt	r2, r7, #1
   157b8:	cmp	r6, #0
   157bc:	blt	15a1c <test_print@@Base+0x2248>
   157c0:	cmp	r6, #2
   157c4:	bgt	15c34 <test_print@@Base+0x2460>
   157c8:	cmp	r6, #0
   157cc:	ble	15c74 <test_print@@Base+0x24a0>
   157d0:	ldr	r3, [sp, #12]
   157d4:	mov	r2, r6
   157d8:	mov	r1, #48	; 0x30
   157dc:	add	r0, r3, r7
   157e0:	bl	124e8 <memset@plt>
   157e4:	add	ip, r6, r7
   157e8:	ldr	r2, [sp, #12]
   157ec:	ldr	r1, [sp, #96]	; 0x60
   157f0:	add	r0, r2, ip
   157f4:	mov	r3, #0
   157f8:	sub	r0, r0, r1
   157fc:	strb	r3, [r2, ip]
   15800:	add	sp, sp, #148	; 0x94
   15804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15808:	ldrb	r3, [lr]
   1580c:	subs	r6, r4, r8
   15810:	sbc	r7, r5, r9
   15814:	cmp	r9, r5
   15818:	sub	r3, r3, #1
   1581c:	cmpeq	r8, r4
   15820:	strb	r3, [lr]
   15824:	mov	r2, r0
   15828:	mov	r3, r1
   1582c:	bhi	15b40 <test_print@@Base+0x236c>
   15830:	mov	r4, r6
   15834:	mov	r5, r7
   15838:	b	155d8 <test_print@@Base+0x1e04>
   1583c:	ldr	r0, [sp, #12]
   15840:	ldr	r3, [pc, #-1516]	; 1525c <test_print@@Base+0x1a88>
   15844:	str	r3, [r0], #3
   15848:	ldr	r3, [sp, #96]	; 0x60
   1584c:	sub	r0, r0, r3
   15850:	add	sp, sp, #148	; 0x94
   15854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15858:	ldr	r8, [sp, #24]
   1585c:	ldr	r9, [sp, #32]
   15860:	strd	r0, [sp, #40]	; 0x28
   15864:	ldrd	r0, [sp, #80]	; 0x50
   15868:	ldrd	sl, [sp, #88]	; 0x58
   1586c:	subs	r2, r0, sl
   15870:	sbc	r3, r1, fp
   15874:	cmp	fp, r1
   15878:	cmpeq	sl, r0
   1587c:	ldr	r1, [sp, #100]	; 0x64
   15880:	ldr	r0, [sp, #120]	; 0x78
   15884:	movhi	lr, #1
   15888:	movls	lr, #0
   1588c:	cmp	r1, r0
   15890:	orrne	lr, lr, #1
   15894:	cmp	lr, #0
   15898:	strd	r2, [sp, #32]
   1589c:	bne	15cac <test_print@@Base+0x24d8>
   158a0:	ldr	r1, [sp]
   158a4:	subs	r2, r2, #1
   158a8:	ldrd	sl, [sp, #40]	; 0x28
   158ac:	sbc	r3, r3, #0
   158b0:	lsl	r1, r4, r1
   158b4:	cmp	r3, fp
   158b8:	strd	r2, [sp]
   158bc:	orr	r1, r1, r4, lsr r9
   158c0:	lsl	r3, r4, r8
   158c4:	cmpeq	r2, sl
   158c8:	str	r1, [sp, #28]
   158cc:	str	r3, [sp, #24]
   158d0:	bls	15978 <test_print@@Base+0x21a4>
   158d4:	ldrd	r4, [sp, #16]
   158d8:	ldrd	r8, [sp, #24]
   158dc:	subs	r2, r4, sl
   158e0:	sbc	r3, r5, fp
   158e4:	mov	r5, r3
   158e8:	mov	r4, r2
   158ec:	cmp	r9, r5
   158f0:	cmpeq	r8, r4
   158f4:	mov	r2, r8
   158f8:	bhi	15780 <test_print@@Base+0x1fac>
   158fc:	ldr	r3, [sp, #12]
   15900:	subs	r0, r4, r8
   15904:	sub	r2, r7, #1
   15908:	sbc	r1, r5, r9
   1590c:	add	r2, r3, r2
   15910:	mov	r4, r0
   15914:	mov	r5, r1
   15918:	mov	r0, sl
   1591c:	mov	r1, fp
   15920:	mov	lr, r7
   15924:	mov	ip, r2
   15928:	ldrd	r2, [sp]
   1592c:	adds	sl, r0, r8
   15930:	adc	fp, r1, r9
   15934:	cmp	r3, fp
   15938:	cmpeq	r2, sl
   1593c:	bhi	159e8 <test_print@@Base+0x2214>
   15940:	strd	r0, [sp, #40]	; 0x28
   15944:	subs	r0, r2, r0
   15948:	sbc	r1, r3, r1
   1594c:	subs	r4, sl, r2
   15950:	sbc	r5, fp, r3
   15954:	cmp	r1, r5
   15958:	cmpeq	r0, r4
   1595c:	mov	r7, lr
   15960:	bcc	15c5c <test_print@@Base+0x2488>
   15964:	ldr	r3, [sp, #12]
   15968:	sub	r1, lr, #1
   1596c:	ldrb	r2, [r3, r1]
   15970:	sub	r2, r2, #1
   15974:	strb	r2, [r3, r1]
   15978:	ldrd	r4, [sp, #32]
   1597c:	adds	r4, r4, #1
   15980:	adc	r5, r5, #0
   15984:	cmp	r5, fp
   15988:	cmpeq	r4, sl
   1598c:	bls	15780 <test_print@@Base+0x1fac>
   15990:	ldrd	r0, [sp, #16]
   15994:	ldrd	r2, [sp, #24]
   15998:	subs	r0, r0, sl
   1599c:	sbc	r1, r1, fp
   159a0:	cmp	r3, r1
   159a4:	cmpeq	r2, r0
   159a8:	bhi	15780 <test_print@@Base+0x1fac>
   159ac:	adds	r8, r2, sl
   159b0:	adc	r9, r3, fp
   159b4:	cmp	r5, r9
   159b8:	cmpeq	r4, r8
   159bc:	mov	r2, r8
   159c0:	mov	r3, r9
   159c4:	bhi	156d8 <test_print@@Base+0x1f04>
   159c8:	subs	r8, r2, r4
   159cc:	sbc	r9, r3, r5
   159d0:	subs	r4, r4, sl
   159d4:	sbc	r5, r5, fp
   159d8:	cmp	r5, r9
   159dc:	cmpeq	r4, r8
   159e0:	bls	15780 <test_print@@Base+0x1fac>
   159e4:	b	156d8 <test_print@@Base+0x1f04>
   159e8:	ldrb	r1, [ip]
   159ec:	subs	r2, r4, r8
   159f0:	sbc	r3, r5, r9
   159f4:	cmp	r9, r5
   159f8:	sub	r1, r1, #1
   159fc:	cmpeq	r8, r4
   15a00:	strb	r1, [ip]
   15a04:	mov	r0, sl
   15a08:	mov	r1, fp
   15a0c:	bhi	1577c <test_print@@Base+0x1fa8>
   15a10:	mov	r4, r2
   15a14:	mov	r5, r3
   15a18:	b	15928 <test_print@@Base+0x2154>
   15a1c:	rsb	r4, r6, #0
   15a20:	add	r1, r7, r6
   15a24:	cmp	r4, r7
   15a28:	cmnge	r1, #2
   15a2c:	bge	15b50 <test_print@@Base+0x237c>
   15a30:	cmp	r7, #1
   15a34:	beq	15b9c <test_print@@Base+0x23c8>
   15a38:	cmp	r2, r4
   15a3c:	movlt	r4, r2
   15a40:	cmp	r4, #0
   15a44:	add	r5, r7, #1
   15a48:	ble	15c88 <test_print@@Base+0x24b4>
   15a4c:	ldr	r3, [sp, #12]
   15a50:	sub	r0, r5, r4
   15a54:	sub	r8, r7, r4
   15a58:	add	r0, r3, r0
   15a5c:	add	r1, r3, r8
   15a60:	mov	r2, r4
   15a64:	bl	12434 <memmove@plt>
   15a68:	ldr	r3, [sp, #12]
   15a6c:	add	r6, r4, r6
   15a70:	mov	r2, #46	; 0x2e
   15a74:	cmp	r6, #0
   15a78:	strb	r2, [r3, r8]
   15a7c:	mov	ip, r5
   15a80:	beq	157e8 <test_print@@Base+0x2014>
   15a84:	mov	r1, r3
   15a88:	add	r3, r7, #2
   15a8c:	mov	r2, #101	; 0x65
   15a90:	add	lr, r1, r3
   15a94:	strb	r2, [r1, r5]
   15a98:	addlt	ip, lr, #1
   15a9c:	movge	ip, lr
   15aa0:	ldr	r5, [pc, #-2120]	; 15260 <test_print@@Base+0x1a8c>
   15aa4:	rsblt	r6, r6, #0
   15aa8:	mov	r0, ip
   15aac:	mvn	r4, #9
   15ab0:	movlt	r2, #45	; 0x2d
   15ab4:	strblt	r2, [r1, r3]
   15ab8:	smull	r2, r1, r5, r6
   15abc:	asr	r2, r6, #31
   15ac0:	rsb	r2, r2, r1, asr #2
   15ac4:	mla	r1, r4, r2, r6
   15ac8:	subs	r6, r2, #0
   15acc:	add	r2, r1, #48	; 0x30
   15ad0:	strb	r2, [r0], #1
   15ad4:	bne	15ab8 <test_print@@Base+0x22e4>
   15ad8:	sub	r5, r0, ip
   15adc:	strb	r6, [r0]
   15ae0:	add	r5, r5, r5, lsr #31
   15ae4:	asr	r5, r5, #1
   15ae8:	cmp	r5, #0
   15aec:	movgt	r2, ip
   15af0:	addgt	r5, r2, r5
   15af4:	movgt	r1, r0
   15af8:	ble	15b14 <test_print@@Base+0x2340>
   15afc:	ldrb	r4, [r1, #-1]
   15b00:	ldrb	ip, [r2]
   15b04:	strb	r4, [r2], #1
   15b08:	cmp	r2, r5
   15b0c:	strb	ip, [r1, #-1]!
   15b10:	bne	15afc <test_print@@Base+0x2328>
   15b14:	sub	ip, r0, lr
   15b18:	add	ip, ip, r3
   15b1c:	b	157e8 <test_print@@Base+0x2014>
   15b20:	ldr	r3, [sp, #16]
   15b24:	lsl	r5, fp, #2
   15b28:	lsl	r4, sl, #2
   15b2c:	orr	r5, r5, sl, lsr #30
   15b30:	subs	r2, r4, #1
   15b34:	sub	r7, r3, #2
   15b38:	sbc	r3, r5, #0
   15b3c:	b	14f04 <test_print@@Base+0x1730>
   15b40:	mov	r6, fp
   15b44:	mov	r7, ip
   15b48:	ldrd	sl, [sp, #24]
   15b4c:	b	156a0 <test_print@@Base+0x1ecc>
   15b50:	ldr	r4, [sp, #12]
   15b54:	rsb	r0, r7, #2
   15b58:	sub	r0, r0, r6
   15b5c:	rsb	r6, r6, #2
   15b60:	mov	r2, r7
   15b64:	mov	r1, r4
   15b68:	add	r0, r4, r0
   15b6c:	sub	r6, r6, r7
   15b70:	bl	12434 <memmove@plt>
   15b74:	mov	r1, #48	; 0x30
   15b78:	mov	r2, #46	; 0x2e
   15b7c:	cmp	r6, #2
   15b80:	strb	r1, [r4]
   15b84:	strb	r2, [r4, #1]
   15b88:	ble	15c90 <test_print@@Base+0x24bc>
   15b8c:	sub	r2, r6, #2
   15b90:	add	r0, r4, #2
   15b94:	bl	124e8 <memset@plt>
   15b98:	b	157e4 <test_print@@Base+0x2010>
   15b9c:	ldr	r1, [sp, #12]
   15ba0:	mov	r6, r4
   15ba4:	add	lr, r1, #2
   15ba8:	add	r0, r1, #3
   15bac:	mov	ip, #2
   15bb0:	mov	r2, #101	; 0x65
   15bb4:	mov	r3, #45	; 0x2d
   15bb8:	strb	r2, [r1, #1]
   15bbc:	strb	r3, [r1, #2]
   15bc0:	ldr	r5, [pc, #-2408]	; 15260 <test_print@@Base+0x1a8c>
   15bc4:	mov	r1, r0
   15bc8:	mvn	r4, #9
   15bcc:	smull	r3, r2, r5, r6
   15bd0:	asr	r3, r6, #31
   15bd4:	rsb	r3, r3, r2, asr #2
   15bd8:	mla	r2, r4, r3, r6
   15bdc:	subs	r6, r3, #0
   15be0:	add	r3, r2, #48	; 0x30
   15be4:	strb	r3, [r1], #1
   15be8:	bne	15bcc <test_print@@Base+0x23f8>
   15bec:	sub	r3, r1, r0
   15bf0:	strb	r6, [r1]
   15bf4:	add	r3, r3, r3, lsr #31
   15bf8:	asr	r2, r3, #1
   15bfc:	cmp	r2, #0
   15c00:	movgt	r3, r0
   15c04:	addgt	r0, r3, r2
   15c08:	movgt	r2, r1
   15c0c:	ble	15c28 <test_print@@Base+0x2454>
   15c10:	ldrb	r5, [r2, #-1]
   15c14:	ldrb	r4, [r3]
   15c18:	strb	r5, [r3], #1
   15c1c:	cmp	r3, r0
   15c20:	strb	r4, [r2, #-1]!
   15c24:	bne	15c10 <test_print@@Base+0x243c>
   15c28:	sub	r1, r1, lr
   15c2c:	add	ip, r1, ip
   15c30:	b	157e8 <test_print@@Base+0x2014>
   15c34:	ldr	r3, [sp, #12]
   15c38:	add	ip, r7, #1
   15c3c:	add	r0, r3, ip
   15c40:	mov	r2, #101	; 0x65
   15c44:	mov	lr, r0
   15c48:	strb	r2, [r3, r7]
   15c4c:	b	15bc0 <test_print@@Base+0x23ec>
   15c50:	mov	r0, r2
   15c54:	mov	r1, r3
   15c58:	b	15634 <test_print@@Base+0x1e60>
   15c5c:	ldrd	sl, [sp, #40]	; 0x28
   15c60:	b	15978 <test_print@@Base+0x21a4>
   15c64:	mov	r7, #0
   15c68:	b	15484 <test_print@@Base+0x1cb0>
   15c6c:	mov	r7, #1
   15c70:	b	15864 <test_print@@Base+0x2090>
   15c74:	mov	ip, r7
   15c78:	b	157e8 <test_print@@Base+0x2014>
   15c7c:	mov	r0, r2
   15c80:	mov	r1, r3
   15c84:	b	156a0 <test_print@@Base+0x1ecc>
   15c88:	sub	r8, r7, r4
   15c8c:	b	15a68 <test_print@@Base+0x2294>
   15c90:	mov	r6, #2
   15c94:	b	157e4 <test_print@@Base+0x2010>
   15c98:	ldr	r3, [pc, #-2620]	; 15264 <test_print@@Base+0x1a90>
   15c9c:	mov	r2, #189	; 0xbd
   15ca0:	ldr	r1, [pc, #-2616]	; 15270 <test_print@@Base+0x1a9c>
   15ca4:	ldr	r0, [pc, #-2628]	; 15268 <test_print@@Base+0x1a94>
   15ca8:	bl	12530 <__assert_fail@plt>
   15cac:	bl	1485c <test_print@@Base+0x1088>
   15cb0:	ldr	r3, [pc, #-2636]	; 1526c <test_print@@Base+0x1a98>
   15cb4:	mov	r2, #138	; 0x8a
   15cb8:	ldr	r1, [pc, #-2640]	; 15270 <test_print@@Base+0x1a9c>
   15cbc:	ldr	r0, [pc, #-2640]	; 15274 <test_print@@Base+0x1aa0>
   15cc0:	bl	12530 <__assert_fail@plt>
   15cc4:	bl	12540 <__assert_fail@plt+0x10>

00015cc8 <flatcc_json_printer_error_string@@Base>:
   15cc8:	cmp	r0, #3
   15ccc:	ldrls	r3, [pc, #12]	; 15ce0 <flatcc_json_printer_error_string@@Base+0x18>
   15cd0:	addls	r0, r3, r0, lsl #2
   15cd4:	ldrls	r0, [r0, #1732]	; 0x6c4
   15cd8:	ldrhi	r0, [pc, #4]	; 15ce4 <flatcc_json_printer_error_string@@Base+0x1c>
   15cdc:	bx	lr
   15ce0:	andeq	r1, r2, r8, ror #12
   15ce4:	andeq	r1, r2, ip, lsr pc

00015ce8 <flatcc_json_printer_fmt_float@@Base>:
   15ce8:	vcvt.f64.f32	d0, s0
   15cec:	b	14cb0 <test_print@@Base+0x14dc>

00015cf0 <flatcc_json_printer_fmt_double@@Base>:
   15cf0:	b	14cb0 <test_print@@Base+0x14dc>

00015cf4 <flatcc_json_printer_fmt_bool@@Base>:
   15cf4:	cmp	r1, #0
   15cf8:	mov	r3, r0
   15cfc:	ldreq	r1, [pc, #36]	; 15d28 <flatcc_json_printer_fmt_bool@@Base+0x34>
   15d00:	ldrne	r1, [pc, #36]	; 15d2c <flatcc_json_printer_fmt_bool@@Base+0x38>
   15d04:	movne	r2, #4
   15d08:	ldrbeq	ip, [r1, #4]
   15d0c:	ldrne	r0, [r1]
   15d10:	ldreq	r0, [r1]
   15d14:	moveq	r2, #5
   15d18:	str	r0, [r3]
   15d1c:	strbeq	ip, [r3, #4]
   15d20:	mov	r0, r2
   15d24:	bx	lr
   15d28:	andeq	r1, r2, ip, asr #30
   15d2c:	andeq	r1, r2, r4, asr #30

00015d30 <flatcc_json_printer_string@@Base>:
   15d30:	b	14880 <test_print@@Base+0x10ac>

00015d34 <flatcc_json_printer_write@@Base>:
   15d34:	ldr	r3, [r0, #20]
   15d38:	push	{r4, r5, r6, r7, r8, lr}
   15d3c:	add	ip, r3, r2
   15d40:	ldr	r5, [r0, #16]
   15d44:	mov	r4, r0
   15d48:	cmp	r5, ip
   15d4c:	mov	r6, r2
   15d50:	bls	15d6c <flatcc_json_printer_write@@Base+0x38>
   15d54:	mov	r0, r3
   15d58:	bl	1244c <memcpy@plt>
   15d5c:	ldr	r3, [r4, #20]
   15d60:	add	r6, r3, r6
   15d64:	str	r6, [r4, #20]
   15d68:	pop	{r4, r5, r6, r7, r8, pc}
   15d6c:	cmp	r3, r5
   15d70:	mov	r7, r1
   15d74:	bcs	15df0 <flatcc_json_printer_write@@Base+0xbc>
   15d78:	sub	r5, r5, r3
   15d7c:	cmp	r6, r5
   15d80:	bls	15dd0 <flatcc_json_printer_write@@Base+0x9c>
   15d84:	mov	r8, #0
   15d88:	mov	r2, r5
   15d8c:	mov	r1, r7
   15d90:	mov	r0, r3
   15d94:	bl	1244c <memcpy@plt>
   15d98:	ldr	r3, [r4, #20]
   15d9c:	ldr	r2, [r4, #44]	; 0x2c
   15da0:	add	r3, r3, r5
   15da4:	str	r3, [r4, #20]
   15da8:	mov	r1, r8
   15dac:	mov	r0, r4
   15db0:	blx	r2
   15db4:	ldr	r3, [r4, #20]
   15db8:	ldr	r2, [r4, #16]
   15dbc:	sub	r6, r6, r5
   15dc0:	add	r7, r7, r5
   15dc4:	sub	r5, r2, r3
   15dc8:	cmp	r6, r5
   15dcc:	bhi	15d88 <flatcc_json_printer_write@@Base+0x54>
   15dd0:	mov	r0, r3
   15dd4:	mov	r2, r6
   15dd8:	mov	r1, r7
   15ddc:	bl	1244c <memcpy@plt>
   15de0:	ldr	r3, [r4, #20]
   15de4:	add	r6, r3, r6
   15de8:	str	r6, [r4, #20]
   15dec:	pop	{r4, r5, r6, r7, r8, pc}
   15df0:	ldr	r3, [r0, #44]	; 0x2c
   15df4:	mov	r1, #0
   15df8:	blx	r3
   15dfc:	ldr	r5, [r4, #16]
   15e00:	ldr	r3, [r4, #20]
   15e04:	b	15d78 <flatcc_json_printer_write@@Base+0x44>

00015e08 <flatcc_json_printer_nl@@Base>:
   15e08:	ldr	r2, [r0, #20]
   15e0c:	mov	r1, #10
   15e10:	add	ip, r2, #1
   15e14:	str	ip, [r0, #20]
   15e18:	strb	r1, [r2]
   15e1c:	ldr	r1, [r0, #20]
   15e20:	ldr	r2, [r0, #16]
   15e24:	cmp	r1, r2
   15e28:	bxcc	lr
   15e2c:	ldr	r3, [r0, #44]	; 0x2c
   15e30:	mov	r1, #0
   15e34:	bx	r3

00015e38 <flatcc_json_printer_char@@Base>:
   15e38:	ldr	r3, [r0, #20]
   15e3c:	add	r2, r3, #1
   15e40:	str	r2, [r0, #20]
   15e44:	strb	r1, [r3]
   15e48:	bx	lr

00015e4c <flatcc_json_printer_indent@@Base>:
   15e4c:	push	{r4, r5, r6, r7, r8, lr}
   15e50:	mov	r4, r0
   15e54:	ldrb	r2, [r0, #25]
   15e58:	ldr	r6, [r0, #32]
   15e5c:	ldr	r3, [r0, #20]
   15e60:	ldr	r5, [r0, #16]
   15e64:	mul	r6, r6, r2
   15e68:	add	r2, r3, r6
   15e6c:	cmp	r5, r2
   15e70:	bcc	15e94 <flatcc_json_printer_indent@@Base+0x48>
   15e74:	mov	r0, r3
   15e78:	mov	r2, r6
   15e7c:	mov	r1, #32
   15e80:	bl	124e8 <memset@plt>
   15e84:	ldr	r3, [r4, #20]
   15e88:	add	r6, r3, r6
   15e8c:	str	r6, [r4, #20]
   15e90:	pop	{r4, r5, r6, r7, r8, pc}
   15e94:	cmp	r3, r5
   15e98:	bcs	15ef8 <flatcc_json_printer_indent@@Base+0xac>
   15e9c:	sub	r5, r5, r3
   15ea0:	cmp	r6, r5
   15ea4:	bls	15e74 <flatcc_json_printer_indent@@Base+0x28>
   15ea8:	mov	r8, #32
   15eac:	mov	r7, #0
   15eb0:	mov	r2, r5
   15eb4:	mov	r0, r3
   15eb8:	mov	r1, r8
   15ebc:	bl	124e8 <memset@plt>
   15ec0:	ldr	r3, [r4, #20]
   15ec4:	ldr	r2, [r4, #44]	; 0x2c
   15ec8:	add	r3, r3, r5
   15ecc:	str	r3, [r4, #20]
   15ed0:	mov	r1, r7
   15ed4:	mov	r0, r4
   15ed8:	blx	r2
   15edc:	ldr	r3, [r4, #20]
   15ee0:	ldr	r2, [r4, #16]
   15ee4:	sub	r6, r6, r5
   15ee8:	sub	r5, r2, r3
   15eec:	cmp	r6, r5
   15ef0:	bhi	15eb0 <flatcc_json_printer_indent@@Base+0x64>
   15ef4:	b	15e74 <flatcc_json_printer_indent@@Base+0x28>
   15ef8:	ldr	r3, [r0, #44]	; 0x2c
   15efc:	mov	r1, #0
   15f00:	blx	r3
   15f04:	ldr	r5, [r4, #16]
   15f08:	ldr	r3, [r4, #20]
   15f0c:	b	15e9c <flatcc_json_printer_indent@@Base+0x50>

00015f10 <flatcc_json_printer_add_level@@Base>:
   15f10:	ldr	r3, [r0, #32]
   15f14:	add	r1, r3, r1
   15f18:	str	r1, [r0, #32]
   15f1c:	bx	lr

00015f20 <flatcc_json_printer_get_level@@Base>:
   15f20:	ldr	r0, [r0, #32]
   15f24:	bx	lr

00015f28 <flatcc_json_printer_uint8@@Base>:
   15f28:	cmp	r1, #99	; 0x63
   15f2c:	push	{r4, lr}
   15f30:	ldr	r2, [r0, #20]
   15f34:	bls	15f90 <flatcc_json_printer_uint8@@Base+0x68>
   15f38:	ldr	r3, [pc, #156]	; 15fdc <flatcc_json_printer_uint8@@Base+0xb4>
   15f3c:	mov	lr, #100	; 0x64
   15f40:	ldr	ip, [pc, #152]	; 15fe0 <flatcc_json_printer_uint8@@Base+0xb8>
   15f44:	umull	r4, r3, r3, r1
   15f48:	mov	r4, #0
   15f4c:	lsr	r3, r3, #5
   15f50:	strb	r4, [r2, #3]
   15f54:	mul	lr, lr, r3
   15f58:	add	r3, r3, #48	; 0x30
   15f5c:	sub	r1, r1, lr
   15f60:	mov	lr, #3
   15f64:	uxtb	r1, r1
   15f68:	ldrb	r4, [ip, r1, lsl #1]
   15f6c:	add	r1, ip, r1, lsl #1
   15f70:	strb	r4, [r2, #1]
   15f74:	ldrb	r1, [r1, #1]
   15f78:	strb	r3, [r2]
   15f7c:	strb	r1, [r2, #2]
   15f80:	ldr	r3, [r0, #20]
   15f84:	add	r3, r3, lr
   15f88:	str	r3, [r0, #20]
   15f8c:	pop	{r4, pc}
   15f90:	cmp	r1, #9
   15f94:	bls	15fc4 <flatcc_json_printer_uint8@@Base+0x9c>
   15f98:	ldr	r3, [pc, #64]	; 15fe0 <flatcc_json_printer_uint8@@Base+0xb8>
   15f9c:	sxth	r1, r1
   15fa0:	mov	ip, #0
   15fa4:	strb	ip, [r2, #2]
   15fa8:	ldrb	ip, [r3, r1, lsl #1]
   15fac:	add	r1, r3, r1, lsl #1
   15fb0:	mov	lr, #2
   15fb4:	strb	ip, [r2]
   15fb8:	ldrb	r3, [r1, #1]
   15fbc:	strb	r3, [r2, #1]
   15fc0:	b	15f80 <flatcc_json_printer_uint8@@Base+0x58>
   15fc4:	add	r1, r1, #48	; 0x30
   15fc8:	mov	r3, #0
   15fcc:	mov	lr, #1
   15fd0:	strb	r1, [r2]
   15fd4:	strb	r3, [r2, #1]
   15fd8:	b	15f80 <flatcc_json_printer_uint8@@Base+0x58>
   15fdc:	mvnpl	r8, pc, lsl r5
   15fe0:	andeq	r1, r2, r8, ror #12

00015fe4 <flatcc_json_printer_uint16@@Base>:
   15fe4:	push	{r4, lr}
   15fe8:	mov	r4, r0
   15fec:	mov	r0, r1
   15ff0:	ldr	r1, [r4, #20]
   15ff4:	bl	13a60 <test_print@@Base+0x28c>
   15ff8:	ldr	r3, [r4, #20]
   15ffc:	add	r0, r3, r0
   16000:	str	r0, [r4, #20]
   16004:	pop	{r4, pc}

00016008 <flatcc_json_printer_uint32@@Base>:
   16008:	push	{r4, lr}
   1600c:	mov	r4, r0
   16010:	mov	r0, r1
   16014:	ldr	r1, [r4, #20]
   16018:	bl	13bc8 <test_print@@Base+0x3f4>
   1601c:	ldr	r3, [r4, #20]
   16020:	add	r0, r3, r0
   16024:	str	r0, [r4, #20]
   16028:	pop	{r4, pc}

0001602c <flatcc_json_printer_uint64@@Base>:
   1602c:	push	{r4, lr}
   16030:	mov	r4, r0
   16034:	mov	r1, r3
   16038:	mov	r0, r2
   1603c:	ldr	r2, [r4, #20]
   16040:	bl	13ef0 <test_print@@Base+0x71c>
   16044:	ldr	r3, [r4, #20]
   16048:	add	r0, r3, r0
   1604c:	str	r0, [r4, #20]
   16050:	pop	{r4, pc}

00016054 <flatcc_json_printer_int8@@Base>:
   16054:	cmp	r1, #0
   16058:	lsr	ip, r1, #31
   1605c:	rsblt	r1, r1, #0
   16060:	ldr	r3, [r0, #20]
   16064:	sxtblt	r1, r1
   16068:	movlt	r2, #45	; 0x2d
   1606c:	uxtb	r1, r1
   16070:	push	{r4, r5, lr}
   16074:	strblt	r2, [r3]
   16078:	addlt	r3, r3, #1
   1607c:	cmp	r1, #99	; 0x63
   16080:	bls	160e0 <flatcc_json_printer_int8@@Base+0x8c>
   16084:	ldr	r2, [pc, #160]	; 1612c <flatcc_json_printer_int8@@Base+0xd8>
   16088:	mov	r4, #100	; 0x64
   1608c:	ldr	lr, [pc, #156]	; 16130 <flatcc_json_printer_int8@@Base+0xdc>
   16090:	umull	r5, r2, r2, r1
   16094:	mov	r5, #0
   16098:	lsr	r2, r2, #5
   1609c:	strb	r5, [r3, #3]
   160a0:	mul	r2, r4, r2
   160a4:	mov	r4, #49	; 0x31
   160a8:	sub	r1, r1, r2
   160ac:	mov	r2, #3
   160b0:	uxtb	r1, r1
   160b4:	ldrb	r5, [lr, r1, lsl #1]
   160b8:	add	r1, lr, r1, lsl #1
   160bc:	strb	r5, [r3, #1]
   160c0:	ldrb	r1, [r1, #1]
   160c4:	strb	r4, [r3]
   160c8:	strb	r1, [r3, #2]
   160cc:	ldr	r3, [r0, #20]
   160d0:	add	r2, ip, r2
   160d4:	add	r3, r3, r2
   160d8:	str	r3, [r0, #20]
   160dc:	pop	{r4, r5, pc}
   160e0:	cmp	r1, #9
   160e4:	bls	16114 <flatcc_json_printer_int8@@Base+0xc0>
   160e8:	ldr	r2, [pc, #64]	; 16130 <flatcc_json_printer_int8@@Base+0xdc>
   160ec:	sxth	r1, r1
   160f0:	mov	lr, #0
   160f4:	strb	lr, [r3, #2]
   160f8:	ldrb	lr, [r2, r1, lsl #1]
   160fc:	add	r1, r2, r1, lsl #1
   16100:	mov	r2, #2
   16104:	strb	lr, [r3]
   16108:	ldrb	r1, [r1, #1]
   1610c:	strb	r1, [r3, #1]
   16110:	b	160cc <flatcc_json_printer_int8@@Base+0x78>
   16114:	add	r1, r1, #48	; 0x30
   16118:	mov	lr, #0
   1611c:	mov	r2, #1
   16120:	strb	r1, [r3]
   16124:	strb	lr, [r3, #1]
   16128:	b	160cc <flatcc_json_printer_int8@@Base+0x78>
   1612c:	mvnpl	r8, pc, lsl r5
   16130:	andeq	r1, r2, r8, ror #12

00016134 <flatcc_json_printer_int16@@Base>:
   16134:	push	{r4, r5, r6, lr}
   16138:	mov	r4, r0
   1613c:	subs	r0, r1, #0
   16140:	ldr	r1, [r4, #20]
   16144:	lsr	r5, r0, #31
   16148:	rsblt	r0, r0, #0
   1614c:	movlt	r3, #45	; 0x2d
   16150:	sxthlt	r0, r0
   16154:	strblt	r3, [r1]
   16158:	uxth	r0, r0
   1615c:	addlt	r1, r1, #1
   16160:	bl	13a60 <test_print@@Base+0x28c>
   16164:	ldr	r3, [r4, #20]
   16168:	add	r0, r5, r0
   1616c:	add	r3, r3, r0
   16170:	str	r3, [r4, #20]
   16174:	pop	{r4, r5, r6, pc}

00016178 <flatcc_json_printer_int32@@Base>:
   16178:	push	{r4, r5, r6, lr}
   1617c:	mov	r4, r0
   16180:	subs	r0, r1, #0
   16184:	ldr	r1, [r4, #20]
   16188:	movlt	r3, #45	; 0x2d
   1618c:	lsr	r5, r0, #31
   16190:	strblt	r3, [r1]
   16194:	rsblt	r0, r0, #0
   16198:	addlt	r1, r1, #1
   1619c:	bl	13bc8 <test_print@@Base+0x3f4>
   161a0:	ldr	r3, [r4, #20]
   161a4:	add	r0, r5, r0
   161a8:	add	r3, r3, r0
   161ac:	str	r3, [r4, #20]
   161b0:	pop	{r4, r5, r6, pc}

000161b4 <flatcc_json_printer_int64@@Base>:
   161b4:	push	{r4, r5, r6, lr}
   161b8:	mov	r1, r3
   161bc:	mov	r4, r0
   161c0:	cmp	r2, #0
   161c4:	sbcs	r3, r3, #0
   161c8:	mov	r0, r2
   161cc:	lsr	r5, r1, #31
   161d0:	ldr	r2, [r4, #20]
   161d4:	bge	161ec <flatcc_json_printer_int64@@Base+0x38>
   161d8:	mov	r3, #45	; 0x2d
   161dc:	rsbs	r0, r0, #0
   161e0:	strb	r3, [r2]
   161e4:	rsc	r1, r1, #0
   161e8:	add	r2, r2, #1
   161ec:	bl	13ef0 <test_print@@Base+0x71c>
   161f0:	ldr	r3, [r4, #20]
   161f4:	add	r0, r5, r0
   161f8:	add	r3, r3, r0
   161fc:	str	r3, [r4, #20]
   16200:	pop	{r4, r5, r6, pc}

00016204 <flatcc_json_printer_float@@Base>:
   16204:	push	{r4, lr}
   16208:	vcvt.f64.f32	d0, s0
   1620c:	mov	r4, r0
   16210:	ldr	r0, [r0, #20]
   16214:	bl	14cb0 <test_print@@Base+0x14dc>
   16218:	ldr	r3, [r4, #20]
   1621c:	add	r0, r3, r0
   16220:	str	r0, [r4, #20]
   16224:	pop	{r4, pc}

00016228 <flatcc_json_printer_double@@Base>:
   16228:	push	{r4, lr}
   1622c:	mov	r4, r0
   16230:	ldr	r0, [r0, #20]
   16234:	bl	14cb0 <test_print@@Base+0x14dc>
   16238:	ldr	r3, [r4, #20]
   1623c:	add	r0, r3, r0
   16240:	str	r0, [r4, #20]
   16244:	pop	{r4, pc}

00016248 <flatcc_json_printer_enum@@Base>:
   16248:	ldr	r3, [r0, #20]
   1624c:	mov	ip, #34	; 0x22
   16250:	push	{r4, r5, r6, r7, r8, lr}
   16254:	mov	r4, r0
   16258:	strb	ip, [r3]
   1625c:	ldrb	ip, [r0, #26]
   16260:	ldr	r3, [r0, #20]
   16264:	ldr	r5, [r0, #16]
   16268:	cmp	ip, #0
   1626c:	addeq	r3, r3, #1
   16270:	add	ip, r3, r2
   16274:	cmp	r5, ip
   16278:	mov	r6, r2
   1627c:	str	r3, [r0, #20]
   16280:	bhi	16324 <flatcc_json_printer_enum@@Base+0xdc>
   16284:	cmp	r3, r5
   16288:	mov	r7, r1
   1628c:	bcs	1633c <flatcc_json_printer_enum@@Base+0xf4>
   16290:	sub	r5, r5, r3
   16294:	cmp	r6, r5
   16298:	bls	162e8 <flatcc_json_printer_enum@@Base+0xa0>
   1629c:	mov	r8, #0
   162a0:	mov	r2, r5
   162a4:	mov	r1, r7
   162a8:	mov	r0, r3
   162ac:	bl	1244c <memcpy@plt>
   162b0:	ldr	r3, [r4, #20]
   162b4:	ldr	r2, [r4, #44]	; 0x2c
   162b8:	add	r3, r3, r5
   162bc:	str	r3, [r4, #20]
   162c0:	mov	r1, r8
   162c4:	mov	r0, r4
   162c8:	blx	r2
   162cc:	ldr	r3, [r4, #20]
   162d0:	ldr	r2, [r4, #16]
   162d4:	sub	r6, r6, r5
   162d8:	add	r7, r7, r5
   162dc:	sub	r5, r2, r3
   162e0:	cmp	r6, r5
   162e4:	bhi	162a0 <flatcc_json_printer_enum@@Base+0x58>
   162e8:	mov	r0, r3
   162ec:	mov	r2, r6
   162f0:	mov	r1, r7
   162f4:	bl	1244c <memcpy@plt>
   162f8:	ldr	r3, [r4, #20]
   162fc:	add	r6, r3, r6
   16300:	str	r6, [r4, #20]
   16304:	mov	r3, #34	; 0x22
   16308:	strb	r3, [r6]
   1630c:	ldrb	r2, [r4, #26]
   16310:	ldr	r3, [r4, #20]
   16314:	cmp	r2, #0
   16318:	addeq	r3, r3, #1
   1631c:	str	r3, [r4, #20]
   16320:	pop	{r4, r5, r6, r7, r8, pc}
   16324:	mov	r0, r3
   16328:	bl	1244c <memcpy@plt>
   1632c:	ldr	r3, [r4, #20]
   16330:	add	r6, r3, r6
   16334:	str	r6, [r4, #20]
   16338:	b	16304 <flatcc_json_printer_enum@@Base+0xbc>
   1633c:	ldr	r3, [r0, #44]	; 0x2c
   16340:	mov	r1, #0
   16344:	blx	r3
   16348:	ldr	r5, [r4, #16]
   1634c:	ldr	r3, [r4, #20]
   16350:	b	16290 <flatcc_json_printer_enum@@Base+0x48>

00016354 <flatcc_json_printer_delimit_enum_flags@@Base>:
   16354:	ldr	r3, [r0, #20]
   16358:	ldrb	r2, [r0, #26]
   1635c:	adds	r1, r1, #0
   16360:	mov	ip, #34	; 0x22
   16364:	strb	ip, [r3]
   16368:	movne	r1, #1
   1636c:	ldr	r3, [r0, #20]
   16370:	cmp	r2, #0
   16374:	orreq	r1, r1, #1
   16378:	add	r1, r3, r1
   1637c:	str	r1, [r0, #20]
   16380:	bx	lr

00016384 <flatcc_json_printer_enum_flag@@Base>:
   16384:	ldr	ip, [r0, #20]
   16388:	push	{r4, r5, r6, r7, r8, lr}
   1638c:	mov	lr, #32
   16390:	strb	lr, [ip]
   16394:	mov	r6, r2
   16398:	ldr	r2, [r0, #20]
   1639c:	ldr	r5, [r0, #16]
   163a0:	cmp	r1, #0
   163a4:	addgt	r2, r2, #1
   163a8:	mov	r8, r3
   163ac:	add	r3, r2, r3
   163b0:	cmp	r5, r3
   163b4:	mov	r4, r0
   163b8:	str	r2, [r0, #20]
   163bc:	bls	163e0 <flatcc_json_printer_enum_flag@@Base+0x5c>
   163c0:	mov	r0, r2
   163c4:	mov	r1, r6
   163c8:	mov	r2, r8
   163cc:	bl	1244c <memcpy@plt>
   163d0:	ldr	r3, [r4, #20]
   163d4:	add	r8, r3, r8
   163d8:	str	r8, [r4, #20]
   163dc:	pop	{r4, r5, r6, r7, r8, pc}
   163e0:	cmp	r2, r5
   163e4:	mov	r7, r8
   163e8:	bcs	16464 <flatcc_json_printer_enum_flag@@Base+0xe0>
   163ec:	sub	r5, r5, r2
   163f0:	cmp	r8, r5
   163f4:	bls	16444 <flatcc_json_printer_enum_flag@@Base+0xc0>
   163f8:	mov	r8, #0
   163fc:	mov	r1, r6
   16400:	mov	r0, r2
   16404:	mov	r2, r5
   16408:	bl	1244c <memcpy@plt>
   1640c:	ldr	r3, [r4, #20]
   16410:	ldr	r2, [r4, #44]	; 0x2c
   16414:	add	r3, r3, r5
   16418:	str	r3, [r4, #20]
   1641c:	mov	r1, r8
   16420:	mov	r0, r4
   16424:	blx	r2
   16428:	ldr	r2, [r4, #20]
   1642c:	ldr	r3, [r4, #16]
   16430:	sub	r7, r7, r5
   16434:	add	r6, r6, r5
   16438:	sub	r5, r3, r2
   1643c:	cmp	r7, r5
   16440:	bhi	163fc <flatcc_json_printer_enum_flag@@Base+0x78>
   16444:	mov	r0, r2
   16448:	mov	r1, r6
   1644c:	mov	r2, r7
   16450:	bl	1244c <memcpy@plt>
   16454:	ldr	r3, [r4, #20]
   16458:	add	r7, r3, r7
   1645c:	str	r7, [r4, #20]
   16460:	pop	{r4, r5, r6, r7, r8, pc}
   16464:	ldr	r3, [r0, #44]	; 0x2c
   16468:	mov	r1, #0
   1646c:	blx	r3
   16470:	ldr	r5, [r4, #16]
   16474:	ldr	r2, [r4, #20]
   16478:	b	163ec <flatcc_json_printer_enum_flag@@Base+0x68>

0001647c <flatcc_json_printer_string_field@@Base>:
   1647c:	add	r2, r2, #2
   16480:	ldr	ip, [r1, #8]
   16484:	lsl	r2, r2, #1
   16488:	cmp	r2, ip
   1648c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16490:	ldr	r8, [sp, #40]	; 0x28
   16494:	popge	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16498:	mov	r6, r3
   1649c:	ldr	r3, [r1, #4]
   164a0:	ldrh	r7, [r3, r2]
   164a4:	cmp	r7, #0
   164a8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164ac:	ldr	sl, [r1]
   164b0:	adds	r9, sl, r7
   164b4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164b8:	ldr	r3, [r1, #16]
   164bc:	mov	r4, r0
   164c0:	cmp	r3, #0
   164c4:	add	r3, r3, #1
   164c8:	str	r3, [r1, #16]
   164cc:	ldrne	r3, [r0, #20]
   164d0:	movne	r2, #44	; 0x2c
   164d4:	addne	r1, r3, #1
   164d8:	strne	r1, [r0, #20]
   164dc:	strbne	r2, [r3]
   164e0:	ldrb	r1, [r0, #25]
   164e4:	mov	fp, r8
   164e8:	ldr	r3, [r0, #20]
   164ec:	cmp	r1, #0
   164f0:	bne	1664c <flatcc_json_printer_string_field@@Base+0x1d0>
   164f4:	ldr	r2, [r0, #16]
   164f8:	cmp	r3, r2
   164fc:	bcc	1650c <flatcc_json_printer_string_field@@Base+0x90>
   16500:	ldr	r3, [r0, #44]	; 0x2c
   16504:	blx	r3
   16508:	ldr	r3, [r4, #20]
   1650c:	mov	r2, #34	; 0x22
   16510:	strb	r2, [r3]
   16514:	ldrb	r3, [r4, #26]
   16518:	ldr	r0, [r4, #20]
   1651c:	ldr	r5, [r4, #16]
   16520:	cmp	r3, #0
   16524:	addeq	r0, r0, #1
   16528:	add	r3, r0, r8
   1652c:	cmp	r5, r3
   16530:	str	r0, [r4, #20]
   16534:	bhi	16614 <flatcc_json_printer_string_field@@Base+0x198>
   16538:	cmp	r0, r5
   1653c:	bcs	16630 <flatcc_json_printer_string_field@@Base+0x1b4>
   16540:	sub	r5, r5, r0
   16544:	cmp	r8, r5
   16548:	bls	16594 <flatcc_json_printer_string_field@@Base+0x118>
   1654c:	mov	r8, #0
   16550:	mov	r2, r5
   16554:	mov	r1, r6
   16558:	bl	1244c <memcpy@plt>
   1655c:	ldr	r3, [r4, #20]
   16560:	mov	r0, r4
   16564:	add	r3, r3, r5
   16568:	str	r3, [r4, #20]
   1656c:	ldr	r2, [r4, #44]	; 0x2c
   16570:	mov	r1, r8
   16574:	blx	r2
   16578:	ldr	r0, [r4, #20]
   1657c:	ldr	r3, [r4, #16]
   16580:	sub	fp, fp, r5
   16584:	add	r6, r6, r5
   16588:	sub	r5, r3, r0
   1658c:	cmp	fp, r5
   16590:	bhi	16550 <flatcc_json_printer_string_field@@Base+0xd4>
   16594:	mov	r1, r6
   16598:	mov	r2, fp
   1659c:	bl	1244c <memcpy@plt>
   165a0:	ldr	r8, [r4, #20]
   165a4:	add	r8, r8, fp
   165a8:	str	r8, [r4, #20]
   165ac:	mov	r3, #34	; 0x22
   165b0:	strb	r3, [r8]
   165b4:	ldr	r1, [r4, #20]
   165b8:	ldrb	r3, [r4, #26]
   165bc:	clz	r3, r3
   165c0:	lsr	r3, r3, #5
   165c4:	add	r2, r1, r3
   165c8:	add	r2, r2, #1
   165cc:	mov	r0, #58	; 0x3a
   165d0:	str	r2, [r4, #20]
   165d4:	strb	r0, [r1, r3]
   165d8:	ldr	r3, [r4, #20]
   165dc:	mov	r2, #32
   165e0:	mov	r0, r4
   165e4:	strb	r2, [r3]
   165e8:	ldrb	ip, [r4, #25]
   165ec:	ldr	r2, [sl, r7]
   165f0:	ldr	r3, [r4, #20]
   165f4:	add	r1, r9, r2
   165f8:	cmp	ip, #0
   165fc:	addne	r3, r3, #1
   16600:	ldr	r2, [r9, r2]
   16604:	add	r1, r1, #4
   16608:	str	r3, [r4, #20]
   1660c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16610:	b	14880 <test_print@@Base+0x10ac>
   16614:	mov	r2, r8
   16618:	mov	r1, r6
   1661c:	bl	1244c <memcpy@plt>
   16620:	ldr	fp, [r4, #20]
   16624:	add	r8, fp, r8
   16628:	str	r8, [r4, #20]
   1662c:	b	165ac <flatcc_json_printer_string_field@@Base+0x130>
   16630:	mov	r0, r4
   16634:	ldr	r3, [r4, #44]	; 0x2c
   16638:	mov	r1, #0
   1663c:	blx	r3
   16640:	ldr	r5, [r4, #16]
   16644:	ldr	r0, [r4, #20]
   16648:	b	16540 <flatcc_json_printer_string_field@@Base+0xc4>
   1664c:	add	r1, r3, #1
   16650:	mov	r2, #10
   16654:	str	r1, [r0, #20]
   16658:	strb	r2, [r3]
   1665c:	bl	145ac <test_print@@Base+0xdd8>
   16660:	ldr	r3, [r4, #20]
   16664:	b	1650c <flatcc_json_printer_string_field@@Base+0x90>

00016668 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   16668:	add	r2, r2, #2
   1666c:	ldr	ip, [r1, #8]
   16670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16674:	lsl	r2, r2, #1
   16678:	sub	sp, sp, #12
   1667c:	cmp	r2, ip
   16680:	ldr	r9, [sp, #48]	; 0x30
   16684:	bge	16ab8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x450>
   16688:	mov	r7, r3
   1668c:	ldr	r3, [r1, #4]
   16690:	ldrh	sl, [r3, r2]
   16694:	cmp	sl, #0
   16698:	beq	16ab8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x450>
   1669c:	ldr	r3, [sp, #52]	; 0x34
   166a0:	ldr	fp, [r1]
   166a4:	adds	r3, r3, #0
   166a8:	movne	r3, #1
   166ac:	adds	r5, fp, sl
   166b0:	str	r3, [sp, #4]
   166b4:	beq	16ab8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x450>
   166b8:	ldr	r3, [r1, #16]
   166bc:	mov	r4, r0
   166c0:	cmp	r3, #0
   166c4:	add	r3, r3, #1
   166c8:	str	r3, [r1, #16]
   166cc:	ldrne	r3, [r0, #20]
   166d0:	movne	r2, #44	; 0x2c
   166d4:	addne	r1, r3, #1
   166d8:	strne	r1, [r0, #20]
   166dc:	strbne	r2, [r3]
   166e0:	ldrb	r1, [r0, #25]
   166e4:	mov	r8, r9
   166e8:	ldr	r3, [r0, #20]
   166ec:	cmp	r1, #0
   166f0:	bne	16b78 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x510>
   166f4:	ldr	r2, [r0, #16]
   166f8:	cmp	r3, r2
   166fc:	bcc	1670c <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   16700:	ldr	r3, [r0, #44]	; 0x2c
   16704:	blx	r3
   16708:	ldr	r3, [r4, #20]
   1670c:	mov	r2, #34	; 0x22
   16710:	strb	r2, [r3]
   16714:	ldrb	r3, [r4, #26]
   16718:	ldr	r0, [r4, #20]
   1671c:	ldr	r6, [r4, #16]
   16720:	cmp	r3, #0
   16724:	addeq	r0, r0, #1
   16728:	add	r3, r0, r9
   1672c:	cmp	r6, r3
   16730:	str	r0, [r4, #20]
   16734:	bhi	16af0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x488>
   16738:	cmp	r0, r6
   1673c:	bcs	16b5c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x4f4>
   16740:	sub	r6, r6, r0
   16744:	cmp	r9, r6
   16748:	bls	16794 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x12c>
   1674c:	mov	r9, #0
   16750:	mov	r2, r6
   16754:	mov	r1, r7
   16758:	bl	1244c <memcpy@plt>
   1675c:	ldr	r3, [r4, #20]
   16760:	mov	r0, r4
   16764:	add	r3, r3, r6
   16768:	str	r3, [r4, #20]
   1676c:	ldr	r2, [r4, #44]	; 0x2c
   16770:	mov	r1, r9
   16774:	blx	r2
   16778:	ldr	r0, [r4, #20]
   1677c:	ldr	r3, [r4, #16]
   16780:	sub	r8, r8, r6
   16784:	add	r7, r7, r6
   16788:	sub	r6, r3, r0
   1678c:	cmp	r8, r6
   16790:	bhi	16750 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xe8>
   16794:	mov	r2, r8
   16798:	mov	r1, r7
   1679c:	bl	1244c <memcpy@plt>
   167a0:	ldr	r9, [r4, #20]
   167a4:	add	r8, r9, r8
   167a8:	str	r8, [r4, #20]
   167ac:	mov	r1, #34	; 0x22
   167b0:	strb	r1, [r8]
   167b4:	ldr	r0, [r4, #20]
   167b8:	ldrb	r3, [r4, #26]
   167bc:	clz	r3, r3
   167c0:	lsr	r3, r3, #5
   167c4:	add	r2, r0, r3
   167c8:	add	r2, r2, #1
   167cc:	mov	ip, #58	; 0x3a
   167d0:	str	r2, [r4, #20]
   167d4:	strb	ip, [r0, r3]
   167d8:	ldr	r3, [r4, #20]
   167dc:	mov	r2, #32
   167e0:	ldr	ip, [pc, #940]	; 16b94 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x52c>
   167e4:	strb	r2, [r3]
   167e8:	ldr	r2, [fp, sl]
   167ec:	ldrb	r3, [r4, #25]
   167f0:	ldr	lr, [r4, #20]
   167f4:	ldr	r6, [r5, r2]
   167f8:	adds	r3, r3, #0
   167fc:	movne	r3, #1
   16800:	lsl	r7, r6, #2
   16804:	add	r0, lr, r3
   16808:	umull	ip, r7, ip, r7
   1680c:	add	r0, r0, #1
   16810:	lsr	r7, r7, #1
   16814:	str	r0, [r4, #20]
   16818:	add	r7, r7, #3
   1681c:	strb	r1, [lr, r3]
   16820:	ldr	ip, [r4, #20]
   16824:	bic	r7, r7, #3
   16828:	ldr	r3, [r4, #16]
   1682c:	add	r1, ip, r7
   16830:	add	r5, r5, r2
   16834:	cmp	r1, r3
   16838:	add	r5, r5, #4
   1683c:	bcs	16b0c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x4a4>
   16840:	cmp	r3, r1
   16844:	bcs	169b8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x350>
   16848:	sub	r3, r3, ip
   1684c:	bic	r9, r3, #3
   16850:	add	r8, r9, r9, lsl #1
   16854:	lsrs	r8, r8, #2
   16858:	ldrne	fp, [pc, #824]	; 16b98 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x530>
   1685c:	beq	169a4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x33c>
   16860:	ldr	r3, [sp, #4]
   16864:	ldr	lr, [pc, #816]	; 16b9c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x534>
   16868:	cmp	r3, #0
   1686c:	movne	lr, fp
   16870:	cmp	r8, #2
   16874:	bls	16ae4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x47c>
   16878:	add	r0, ip, #4
   1687c:	add	r1, r5, #3
   16880:	mov	r7, r8
   16884:	ldrb	r3, [r1, #-3]
   16888:	sub	r7, r7, #3
   1688c:	cmp	r7, #2
   16890:	mov	sl, r1
   16894:	ldrb	r3, [lr, r3, lsr #2]
   16898:	mov	ip, r0
   1689c:	add	r1, r1, #3
   168a0:	strb	r3, [r0, #-4]
   168a4:	ldrb	r3, [r1, #-6]
   168a8:	ldrb	r2, [r1, #-5]
   168ac:	add	r0, r0, #4
   168b0:	lsl	r3, r3, #4
   168b4:	and	r3, r3, #48	; 0x30
   168b8:	orr	r3, r3, r2, lsr #4
   168bc:	ldrb	r3, [lr, r3]
   168c0:	strb	r3, [r0, #-7]
   168c4:	ldrb	r3, [r1, #-5]
   168c8:	ldrb	r2, [r1, #-4]
   168cc:	lsl	r3, r3, #2
   168d0:	and	r3, r3, #60	; 0x3c
   168d4:	orr	r3, r3, r2, lsr #6
   168d8:	ldrb	r3, [lr, r3]
   168dc:	strb	r3, [r0, #-6]
   168e0:	ldrb	r3, [r1, #-4]
   168e4:	and	r3, r3, #63	; 0x3f
   168e8:	ldrb	r3, [lr, r3]
   168ec:	strb	r3, [r0, #-5]
   168f0:	bhi	16884 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x21c>
   168f4:	cmp	r7, #1
   168f8:	beq	16ac0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x458>
   168fc:	cmp	r7, #2
   16900:	bne	16940 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2d8>
   16904:	ldrb	r3, [sl]
   16908:	ldrb	r3, [lr, r3, lsr #2]
   1690c:	strb	r3, [ip]
   16910:	ldrb	r3, [sl]
   16914:	ldrb	r2, [sl, #1]
   16918:	lsl	r3, r3, #4
   1691c:	and	r3, r3, #48	; 0x30
   16920:	orr	r3, r3, r2, lsr #4
   16924:	ldrb	r3, [lr, r3]
   16928:	strb	r3, [ip, #1]
   1692c:	ldrb	r3, [sl, #1]
   16930:	lsl	r3, r3, #2
   16934:	and	r3, r3, #60	; 0x3c
   16938:	ldrb	r3, [lr, r3]
   1693c:	strb	r3, [ip, #2]
   16940:	ldr	r3, [r4, #20]
   16944:	sub	r6, r6, r8
   16948:	add	r9, r3, r9
   1694c:	str	r9, [r4, #20]
   16950:	ldr	r3, [r4, #44]	; 0x2c
   16954:	mov	r1, #0
   16958:	mov	r0, r4
   1695c:	blx	r3
   16960:	ldr	r3, [pc, #556]	; 16b94 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x52c>
   16964:	lsl	r7, r6, #2
   16968:	ldr	ip, [r4, #20]
   1696c:	umull	r3, r7, r3, r7
   16970:	ldr	r9, [r4, #16]
   16974:	add	r5, r5, r8
   16978:	lsr	r7, r7, #1
   1697c:	add	r7, r7, #3
   16980:	bic	r7, r7, #3
   16984:	add	r3, ip, r7
   16988:	cmp	r9, r3
   1698c:	bcs	169b8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x350>
   16990:	sub	r9, r9, ip
   16994:	bic	r9, r9, #3
   16998:	add	r8, r9, r9, lsl #1
   1699c:	lsrs	r8, r8, #2
   169a0:	bne	16860 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f8>
   169a4:	ldr	r3, [pc, #500]	; 16ba0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x538>
   169a8:	ldr	r2, [pc, #500]	; 16ba4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x53c>
   169ac:	ldr	r1, [pc, #500]	; 16ba8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x540>
   169b0:	ldr	r0, [pc, #500]	; 16bac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x544>
   169b4:	bl	12530 <__assert_fail@plt>
   169b8:	ldr	r2, [sp, #4]
   169bc:	ldr	r3, [pc, #472]	; 16b9c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x534>
   169c0:	cmp	r2, #0
   169c4:	ldr	lr, [pc, #460]	; 16b98 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x530>
   169c8:	moveq	lr, r3
   169cc:	cmp	r6, #2
   169d0:	bls	16a4c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x3e4>
   169d4:	add	r0, ip, #4
   169d8:	add	r1, r5, #3
   169dc:	ldrb	r3, [r1, #-3]
   169e0:	sub	r6, r6, #3
   169e4:	cmp	r6, #2
   169e8:	mov	r5, r1
   169ec:	ldrb	r3, [lr, r3, lsr #2]
   169f0:	mov	ip, r0
   169f4:	add	r1, r1, #3
   169f8:	strb	r3, [r0, #-4]
   169fc:	ldrb	r3, [r1, #-6]
   16a00:	ldrb	r2, [r1, #-5]
   16a04:	add	r0, r0, #4
   16a08:	lsl	r3, r3, #4
   16a0c:	and	r3, r3, #48	; 0x30
   16a10:	orr	r3, r3, r2, lsr #4
   16a14:	ldrb	r3, [lr, r3]
   16a18:	strb	r3, [r0, #-7]
   16a1c:	ldrb	r3, [r1, #-5]
   16a20:	ldrb	r2, [r1, #-4]
   16a24:	lsl	r3, r3, #2
   16a28:	and	r3, r3, #60	; 0x3c
   16a2c:	orr	r3, r3, r2, lsr #6
   16a30:	ldrb	r3, [lr, r3]
   16a34:	strb	r3, [r0, #-6]
   16a38:	ldrb	r3, [r1, #-4]
   16a3c:	and	r3, r3, #63	; 0x3f
   16a40:	ldrb	r3, [lr, r3]
   16a44:	strb	r3, [r0, #-5]
   16a48:	bhi	169dc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x374>
   16a4c:	cmp	r6, #1
   16a50:	beq	16b2c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x4c4>
   16a54:	cmp	r6, #2
   16a58:	bne	16aa0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x438>
   16a5c:	ldrb	r3, [r5]
   16a60:	mov	r2, #61	; 0x3d
   16a64:	ldrb	r3, [lr, r3, lsr #2]
   16a68:	strb	r3, [ip]
   16a6c:	ldrb	r3, [r5]
   16a70:	ldrb	r1, [r5, #1]
   16a74:	lsl	r3, r3, #4
   16a78:	and	r3, r3, #48	; 0x30
   16a7c:	orr	r3, r3, r1, lsr #4
   16a80:	ldrb	r3, [lr, r3]
   16a84:	strb	r3, [ip, #1]
   16a88:	ldrb	r3, [r5, #1]
   16a8c:	strb	r2, [ip, #3]
   16a90:	lsl	r3, r3, #2
   16a94:	and	r3, r3, #60	; 0x3c
   16a98:	ldrb	r3, [lr, r3]
   16a9c:	strb	r3, [ip, #2]
   16aa0:	ldr	r2, [r4, #20]
   16aa4:	mov	r1, #34	; 0x22
   16aa8:	add	r3, r2, r7
   16aac:	add	r3, r3, #1
   16ab0:	str	r3, [r4, #20]
   16ab4:	strb	r1, [r2, r7]
   16ab8:	add	sp, sp, #12
   16abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ac0:	ldrb	r3, [sl]
   16ac4:	ldrb	r3, [lr, r3, lsr #2]
   16ac8:	strb	r3, [ip]
   16acc:	ldrb	r3, [sl]
   16ad0:	lsl	r3, r3, #4
   16ad4:	and	r3, r3, #48	; 0x30
   16ad8:	ldrb	r3, [lr, r3]
   16adc:	strb	r3, [ip, #1]
   16ae0:	b	16940 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2d8>
   16ae4:	mov	r7, r8
   16ae8:	mov	sl, r5
   16aec:	b	168f4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x28c>
   16af0:	mov	r1, r7
   16af4:	mov	r2, r9
   16af8:	bl	1244c <memcpy@plt>
   16afc:	ldr	r8, [r4, #20]
   16b00:	add	r8, r8, r9
   16b04:	str	r8, [r4, #20]
   16b08:	b	167ac <flatcc_json_printer_uint8_vector_base64_field@@Base+0x144>
   16b0c:	ldr	r3, [r4, #44]	; 0x2c
   16b10:	mov	r1, #0
   16b14:	mov	r0, r4
   16b18:	blx	r3
   16b1c:	ldr	ip, [r4, #20]
   16b20:	ldr	r3, [r4, #16]
   16b24:	add	r1, ip, r7
   16b28:	b	16840 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1d8>
   16b2c:	ldrb	r3, [r5]
   16b30:	mov	r2, #61	; 0x3d
   16b34:	ldrb	r3, [lr, r3, lsr #2]
   16b38:	strb	r3, [ip]
   16b3c:	ldrb	r3, [r5]
   16b40:	strb	r2, [ip, #2]
   16b44:	strb	r2, [ip, #3]
   16b48:	lsl	r3, r3, #4
   16b4c:	and	r3, r3, #48	; 0x30
   16b50:	ldrb	r3, [lr, r3]
   16b54:	strb	r3, [ip, #1]
   16b58:	b	16aa0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x438>
   16b5c:	mov	r0, r4
   16b60:	ldr	r3, [r4, #44]	; 0x2c
   16b64:	mov	r1, #0
   16b68:	blx	r3
   16b6c:	ldr	r6, [r4, #16]
   16b70:	ldr	r0, [r4, #20]
   16b74:	b	16740 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd8>
   16b78:	add	r1, r3, #1
   16b7c:	mov	r2, #10
   16b80:	str	r1, [r0, #20]
   16b84:	strb	r2, [r3]
   16b88:	bl	145ac <test_print@@Base+0xdd8>
   16b8c:	ldr	r3, [r4, #20]
   16b90:	b	1670c <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa4>
   16b94:	bge	feac1648 <__bss_end__@@Base+0xfea8e5b0>
   16b98:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   16b9c:	andeq	r1, r2, r4, asr pc
   16ba0:	andeq	r1, r2, ip, lsr sp
   16ba4:	andeq	r0, r0, r5, lsl r1
   16ba8:	andeq	r1, r2, r8, lsr lr
   16bac:	ldrdeq	r1, [r2], -ip

00016bb0 <flatcc_json_printer_uint8_field@@Base>:
   16bb0:	add	r2, r2, #2
   16bb4:	ldr	ip, [r1, #8]
   16bb8:	lsl	r2, r2, #1
   16bbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16bc0:	cmp	r2, ip
   16bc4:	mov	r4, r0
   16bc8:	mov	r6, r3
   16bcc:	ldr	r9, [sp, #32]
   16bd0:	ldrb	r0, [sp, #36]	; 0x24
   16bd4:	blt	16bec <flatcc_json_printer_uint8_field@@Base+0x3c>
   16bd8:	ldrb	r3, [r4, #29]
   16bdc:	cmp	r3, #0
   16be0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16be4:	mov	r8, r0
   16be8:	b	16c14 <flatcc_json_printer_uint8_field@@Base+0x64>
   16bec:	ldr	r3, [r1, #4]
   16bf0:	ldrh	r3, [r3, r2]
   16bf4:	cmp	r3, #0
   16bf8:	beq	16bd8 <flatcc_json_printer_uint8_field@@Base+0x28>
   16bfc:	ldr	r2, [r1]
   16c00:	cmn	r2, r3
   16c04:	beq	16bd8 <flatcc_json_printer_uint8_field@@Base+0x28>
   16c08:	ldrb	r8, [r2, r3]
   16c0c:	cmp	r0, r8
   16c10:	beq	16e08 <flatcc_json_printer_uint8_field@@Base+0x258>
   16c14:	ldr	r3, [r1, #16]
   16c18:	mov	r7, r9
   16c1c:	cmp	r3, #0
   16c20:	add	r3, r3, #1
   16c24:	str	r3, [r1, #16]
   16c28:	ldrne	r3, [r4, #20]
   16c2c:	movne	r2, #44	; 0x2c
   16c30:	addne	r1, r3, #1
   16c34:	strne	r1, [r4, #20]
   16c38:	strbne	r2, [r3]
   16c3c:	ldrb	r1, [r4, #25]
   16c40:	ldr	r3, [r4, #20]
   16c44:	cmp	r1, #0
   16c48:	bne	16e4c <flatcc_json_printer_uint8_field@@Base+0x29c>
   16c4c:	ldr	r2, [r4, #16]
   16c50:	cmp	r3, r2
   16c54:	bcc	16c68 <flatcc_json_printer_uint8_field@@Base+0xb8>
   16c58:	ldr	r3, [r4, #44]	; 0x2c
   16c5c:	mov	r0, r4
   16c60:	blx	r3
   16c64:	ldr	r3, [r4, #20]
   16c68:	mov	r2, #34	; 0x22
   16c6c:	strb	r2, [r3]
   16c70:	ldrb	r3, [r4, #26]
   16c74:	ldr	r0, [r4, #20]
   16c78:	ldr	r5, [r4, #16]
   16c7c:	cmp	r3, #0
   16c80:	addeq	r0, r0, #1
   16c84:	add	r3, r0, r9
   16c88:	cmp	r5, r3
   16c8c:	str	r0, [r4, #20]
   16c90:	bhi	16db8 <flatcc_json_printer_uint8_field@@Base+0x208>
   16c94:	cmp	r0, r5
   16c98:	bcs	16e30 <flatcc_json_printer_uint8_field@@Base+0x280>
   16c9c:	sub	r5, r5, r0
   16ca0:	cmp	r9, r5
   16ca4:	bls	16cf0 <flatcc_json_printer_uint8_field@@Base+0x140>
   16ca8:	mov	r9, #0
   16cac:	mov	r2, r5
   16cb0:	mov	r1, r6
   16cb4:	bl	1244c <memcpy@plt>
   16cb8:	ldr	r2, [r4, #20]
   16cbc:	ldr	r3, [r4, #44]	; 0x2c
   16cc0:	add	r2, r2, r5
   16cc4:	mov	r0, r4
   16cc8:	str	r2, [r4, #20]
   16ccc:	mov	r1, r9
   16cd0:	blx	r3
   16cd4:	ldr	r0, [r4, #20]
   16cd8:	ldr	r3, [r4, #16]
   16cdc:	sub	r7, r7, r5
   16ce0:	add	r6, r6, r5
   16ce4:	sub	r5, r3, r0
   16ce8:	cmp	r7, r5
   16cec:	bhi	16cac <flatcc_json_printer_uint8_field@@Base+0xfc>
   16cf0:	mov	r1, r6
   16cf4:	mov	r2, r7
   16cf8:	bl	1244c <memcpy@plt>
   16cfc:	ldr	r9, [r4, #20]
   16d00:	add	r9, r9, r7
   16d04:	str	r9, [r4, #20]
   16d08:	mov	r3, #34	; 0x22
   16d0c:	strb	r3, [r9]
   16d10:	ldr	r1, [r4, #20]
   16d14:	ldrb	r3, [r4, #26]
   16d18:	clz	r3, r3
   16d1c:	lsr	r3, r3, #5
   16d20:	add	r2, r1, r3
   16d24:	add	r2, r2, #1
   16d28:	mov	r0, #58	; 0x3a
   16d2c:	str	r2, [r4, #20]
   16d30:	strb	r0, [r1, r3]
   16d34:	ldr	r3, [r4, #20]
   16d38:	mov	r2, #32
   16d3c:	strb	r2, [r3]
   16d40:	ldrb	r1, [r4, #25]
   16d44:	ldr	ip, [r4, #20]
   16d48:	adds	r1, r1, #0
   16d4c:	movne	r1, #1
   16d50:	add	r0, ip, r1
   16d54:	cmp	r8, #99	; 0x63
   16d58:	str	r0, [r4, #20]
   16d5c:	bls	16dd4 <flatcc_json_printer_uint8_field@@Base+0x224>
   16d60:	ldr	r3, [pc, #260]	; 16e6c <flatcc_json_printer_uint8_field@@Base+0x2bc>
   16d64:	mov	r2, #100	; 0x64
   16d68:	ldr	lr, [pc, #256]	; 16e70 <flatcc_json_printer_uint8_field@@Base+0x2c0>
   16d6c:	umull	r5, r3, r3, r8
   16d70:	mov	r5, #0
   16d74:	lsr	r3, r3, #5
   16d78:	strb	r5, [r0, #3]
   16d7c:	mul	r2, r2, r3
   16d80:	add	r3, r3, #48	; 0x30
   16d84:	sub	r8, r8, r2
   16d88:	mov	r2, #3
   16d8c:	uxtb	r8, r8
   16d90:	ldrb	r5, [lr, r8, lsl #1]
   16d94:	add	r8, lr, r8, lsl #1
   16d98:	strb	r5, [r0, #1]
   16d9c:	ldrb	lr, [r8, #1]
   16da0:	strb	lr, [r0, #2]
   16da4:	strb	r3, [ip, r1]
   16da8:	ldr	r3, [r4, #20]
   16dac:	add	r3, r3, r2
   16db0:	str	r3, [r4, #20]
   16db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16db8:	mov	r2, r9
   16dbc:	mov	r1, r6
   16dc0:	bl	1244c <memcpy@plt>
   16dc4:	ldr	r7, [r4, #20]
   16dc8:	add	r9, r7, r9
   16dcc:	str	r9, [r4, #20]
   16dd0:	b	16d08 <flatcc_json_printer_uint8_field@@Base+0x158>
   16dd4:	cmp	r8, #9
   16dd8:	bls	16e18 <flatcc_json_printer_uint8_field@@Base+0x268>
   16ddc:	ldr	r3, [pc, #140]	; 16e70 <flatcc_json_printer_uint8_field@@Base+0x2c0>
   16de0:	sxth	r8, r8
   16de4:	mov	r2, #0
   16de8:	strb	r2, [r0, #2]
   16dec:	ldrb	lr, [r3, r8, lsl #1]
   16df0:	add	r3, r3, r8, lsl #1
   16df4:	mov	r2, #2
   16df8:	strb	lr, [ip, r1]
   16dfc:	ldrb	r3, [r3, #1]
   16e00:	strb	r3, [r0, #1]
   16e04:	b	16da8 <flatcc_json_printer_uint8_field@@Base+0x1f8>
   16e08:	ldrb	r3, [r4, #28]
   16e0c:	cmp	r3, #0
   16e10:	beq	16c14 <flatcc_json_printer_uint8_field@@Base+0x64>
   16e14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e18:	add	r8, r8, #48	; 0x30
   16e1c:	mov	r3, #0
   16e20:	strb	r3, [r0, #1]
   16e24:	mov	r2, #1
   16e28:	strb	r8, [ip, r1]
   16e2c:	b	16da8 <flatcc_json_printer_uint8_field@@Base+0x1f8>
   16e30:	mov	r0, r4
   16e34:	ldr	r3, [r4, #44]	; 0x2c
   16e38:	mov	r1, #0
   16e3c:	blx	r3
   16e40:	ldr	r5, [r4, #16]
   16e44:	ldr	r0, [r4, #20]
   16e48:	b	16c9c <flatcc_json_printer_uint8_field@@Base+0xec>
   16e4c:	add	r1, r3, #1
   16e50:	mov	r2, #10
   16e54:	str	r1, [r4, #20]
   16e58:	mov	r0, r4
   16e5c:	strb	r2, [r3]
   16e60:	bl	145ac <test_print@@Base+0xdd8>
   16e64:	ldr	r3, [r4, #20]
   16e68:	b	16c68 <flatcc_json_printer_uint8_field@@Base+0xb8>
   16e6c:	mvnpl	r8, pc, lsl r5
   16e70:	andeq	r1, r2, r8, ror #12

00016e74 <flatcc_json_printer_uint16_field@@Base>:
   16e74:	add	r2, r2, #2
   16e78:	ldr	ip, [r1, #8]
   16e7c:	lsl	r2, r2, #1
   16e80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16e84:	cmp	r2, ip
   16e88:	mov	r4, r0
   16e8c:	mov	r6, r3
   16e90:	ldr	r9, [sp, #32]
   16e94:	ldrh	r0, [sp, #36]	; 0x24
   16e98:	blt	16eb0 <flatcc_json_printer_uint16_field@@Base+0x3c>
   16e9c:	ldrb	r3, [r4, #29]
   16ea0:	cmp	r3, #0
   16ea4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ea8:	mov	r8, r0
   16eac:	b	16ed8 <flatcc_json_printer_uint16_field@@Base+0x64>
   16eb0:	ldr	r3, [r1, #4]
   16eb4:	ldrh	r3, [r3, r2]
   16eb8:	cmp	r3, #0
   16ebc:	beq	16e9c <flatcc_json_printer_uint16_field@@Base+0x28>
   16ec0:	ldr	r2, [r1]
   16ec4:	cmn	r2, r3
   16ec8:	beq	16e9c <flatcc_json_printer_uint16_field@@Base+0x28>
   16ecc:	ldrh	r8, [r2, r3]
   16ed0:	cmp	r0, r8
   16ed4:	beq	1704c <flatcc_json_printer_uint16_field@@Base+0x1d8>
   16ed8:	ldr	r3, [r1, #16]
   16edc:	mov	r7, r9
   16ee0:	cmp	r3, #0
   16ee4:	add	r3, r3, #1
   16ee8:	str	r3, [r1, #16]
   16eec:	ldrne	r3, [r4, #20]
   16ef0:	movne	r2, #44	; 0x2c
   16ef4:	addne	r1, r3, #1
   16ef8:	strne	r1, [r4, #20]
   16efc:	strbne	r2, [r3]
   16f00:	ldrb	r1, [r4, #25]
   16f04:	ldr	r3, [r4, #20]
   16f08:	cmp	r1, #0
   16f0c:	bne	17078 <flatcc_json_printer_uint16_field@@Base+0x204>
   16f10:	ldr	r2, [r4, #16]
   16f14:	cmp	r3, r2
   16f18:	bcc	16f2c <flatcc_json_printer_uint16_field@@Base+0xb8>
   16f1c:	ldr	r3, [r4, #44]	; 0x2c
   16f20:	mov	r0, r4
   16f24:	blx	r3
   16f28:	ldr	r3, [r4, #20]
   16f2c:	mov	r2, #34	; 0x22
   16f30:	strb	r2, [r3]
   16f34:	ldrb	r3, [r4, #26]
   16f38:	ldr	r0, [r4, #20]
   16f3c:	ldr	r5, [r4, #16]
   16f40:	cmp	r3, #0
   16f44:	addeq	r0, r0, #1
   16f48:	add	r3, r0, r9
   16f4c:	cmp	r5, r3
   16f50:	str	r0, [r4, #20]
   16f54:	bhi	17030 <flatcc_json_printer_uint16_field@@Base+0x1bc>
   16f58:	cmp	r0, r5
   16f5c:	bcs	1705c <flatcc_json_printer_uint16_field@@Base+0x1e8>
   16f60:	sub	r5, r5, r0
   16f64:	cmp	r9, r5
   16f68:	bls	16fb4 <flatcc_json_printer_uint16_field@@Base+0x140>
   16f6c:	mov	r9, #0
   16f70:	mov	r2, r5
   16f74:	mov	r1, r6
   16f78:	bl	1244c <memcpy@plt>
   16f7c:	ldr	r2, [r4, #20]
   16f80:	ldr	r3, [r4, #44]	; 0x2c
   16f84:	add	r2, r2, r5
   16f88:	mov	r0, r4
   16f8c:	str	r2, [r4, #20]
   16f90:	mov	r1, r9
   16f94:	blx	r3
   16f98:	ldr	r0, [r4, #20]
   16f9c:	ldr	r3, [r4, #16]
   16fa0:	sub	r7, r7, r5
   16fa4:	add	r6, r6, r5
   16fa8:	sub	r5, r3, r0
   16fac:	cmp	r7, r5
   16fb0:	bhi	16f70 <flatcc_json_printer_uint16_field@@Base+0xfc>
   16fb4:	mov	r1, r6
   16fb8:	mov	r2, r7
   16fbc:	bl	1244c <memcpy@plt>
   16fc0:	ldr	r9, [r4, #20]
   16fc4:	add	r9, r9, r7
   16fc8:	str	r9, [r4, #20]
   16fcc:	mov	r3, #34	; 0x22
   16fd0:	strb	r3, [r9]
   16fd4:	ldr	r1, [r4, #20]
   16fd8:	ldrb	r3, [r4, #26]
   16fdc:	clz	r3, r3
   16fe0:	lsr	r3, r3, #5
   16fe4:	add	r2, r1, r3
   16fe8:	add	r2, r2, #1
   16fec:	mov	r0, #58	; 0x3a
   16ff0:	str	r2, [r4, #20]
   16ff4:	strb	r0, [r1, r3]
   16ff8:	ldr	r3, [r4, #20]
   16ffc:	mov	r2, #32
   17000:	mov	r0, r8
   17004:	strb	r2, [r3]
   17008:	ldrb	r3, [r4, #25]
   1700c:	ldr	r1, [r4, #20]
   17010:	cmp	r3, #0
   17014:	addne	r1, r1, #1
   17018:	str	r1, [r4, #20]
   1701c:	bl	13a60 <test_print@@Base+0x28c>
   17020:	ldr	r3, [r4, #20]
   17024:	add	r0, r3, r0
   17028:	str	r0, [r4, #20]
   1702c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17030:	mov	r2, r9
   17034:	mov	r1, r6
   17038:	bl	1244c <memcpy@plt>
   1703c:	ldr	r7, [r4, #20]
   17040:	add	r9, r7, r9
   17044:	str	r9, [r4, #20]
   17048:	b	16fcc <flatcc_json_printer_uint16_field@@Base+0x158>
   1704c:	ldrb	r3, [r4, #28]
   17050:	cmp	r3, #0
   17054:	beq	16ed8 <flatcc_json_printer_uint16_field@@Base+0x64>
   17058:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1705c:	mov	r0, r4
   17060:	ldr	r3, [r4, #44]	; 0x2c
   17064:	mov	r1, #0
   17068:	blx	r3
   1706c:	ldr	r5, [r4, #16]
   17070:	ldr	r0, [r4, #20]
   17074:	b	16f60 <flatcc_json_printer_uint16_field@@Base+0xec>
   17078:	add	r1, r3, #1
   1707c:	mov	r2, #10
   17080:	str	r1, [r4, #20]
   17084:	mov	r0, r4
   17088:	strb	r2, [r3]
   1708c:	bl	145ac <test_print@@Base+0xdd8>
   17090:	ldr	r3, [r4, #20]
   17094:	b	16f2c <flatcc_json_printer_uint16_field@@Base+0xb8>

00017098 <flatcc_json_printer_uint32_field@@Base>:
   17098:	add	r2, r2, #2
   1709c:	ldr	ip, [r1, #8]
   170a0:	lsl	r2, r2, #1
   170a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   170a8:	cmp	r2, ip
   170ac:	mov	r4, r0
   170b0:	mov	r6, r3
   170b4:	ldr	r9, [sp, #32]
   170b8:	blt	170d0 <flatcc_json_printer_uint32_field@@Base+0x38>
   170bc:	ldrb	r3, [r4, #29]
   170c0:	cmp	r3, #0
   170c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   170c8:	ldr	r8, [sp, #36]	; 0x24
   170cc:	b	170fc <flatcc_json_printer_uint32_field@@Base+0x64>
   170d0:	ldr	r3, [r1, #4]
   170d4:	ldrh	r3, [r3, r2]
   170d8:	cmp	r3, #0
   170dc:	beq	170bc <flatcc_json_printer_uint32_field@@Base+0x24>
   170e0:	ldr	r2, [r1]
   170e4:	cmn	r2, r3
   170e8:	beq	170bc <flatcc_json_printer_uint32_field@@Base+0x24>
   170ec:	ldr	r8, [r2, r3]
   170f0:	ldr	r3, [sp, #36]	; 0x24
   170f4:	cmp	r3, r8
   170f8:	beq	17270 <flatcc_json_printer_uint32_field@@Base+0x1d8>
   170fc:	ldr	r3, [r1, #16]
   17100:	mov	r7, r9
   17104:	cmp	r3, #0
   17108:	add	r3, r3, #1
   1710c:	str	r3, [r1, #16]
   17110:	ldrne	r3, [r4, #20]
   17114:	movne	r2, #44	; 0x2c
   17118:	addne	r1, r3, #1
   1711c:	strne	r1, [r4, #20]
   17120:	strbne	r2, [r3]
   17124:	ldrb	r1, [r4, #25]
   17128:	ldr	r3, [r4, #20]
   1712c:	cmp	r1, #0
   17130:	bne	1729c <flatcc_json_printer_uint32_field@@Base+0x204>
   17134:	ldr	r2, [r4, #16]
   17138:	cmp	r3, r2
   1713c:	bcc	17150 <flatcc_json_printer_uint32_field@@Base+0xb8>
   17140:	ldr	r3, [r4, #44]	; 0x2c
   17144:	mov	r0, r4
   17148:	blx	r3
   1714c:	ldr	r3, [r4, #20]
   17150:	mov	r2, #34	; 0x22
   17154:	strb	r2, [r3]
   17158:	ldrb	r3, [r4, #26]
   1715c:	ldr	r0, [r4, #20]
   17160:	ldr	r5, [r4, #16]
   17164:	cmp	r3, #0
   17168:	addeq	r0, r0, #1
   1716c:	add	r3, r0, r9
   17170:	cmp	r5, r3
   17174:	str	r0, [r4, #20]
   17178:	bhi	17254 <flatcc_json_printer_uint32_field@@Base+0x1bc>
   1717c:	cmp	r0, r5
   17180:	bcs	17280 <flatcc_json_printer_uint32_field@@Base+0x1e8>
   17184:	sub	r5, r5, r0
   17188:	cmp	r9, r5
   1718c:	bls	171d8 <flatcc_json_printer_uint32_field@@Base+0x140>
   17190:	mov	r9, #0
   17194:	mov	r2, r5
   17198:	mov	r1, r6
   1719c:	bl	1244c <memcpy@plt>
   171a0:	ldr	r2, [r4, #20]
   171a4:	ldr	r3, [r4, #44]	; 0x2c
   171a8:	add	r2, r2, r5
   171ac:	mov	r0, r4
   171b0:	str	r2, [r4, #20]
   171b4:	mov	r1, r9
   171b8:	blx	r3
   171bc:	ldr	r0, [r4, #20]
   171c0:	ldr	r3, [r4, #16]
   171c4:	sub	r7, r7, r5
   171c8:	add	r6, r6, r5
   171cc:	sub	r5, r3, r0
   171d0:	cmp	r7, r5
   171d4:	bhi	17194 <flatcc_json_printer_uint32_field@@Base+0xfc>
   171d8:	mov	r1, r6
   171dc:	mov	r2, r7
   171e0:	bl	1244c <memcpy@plt>
   171e4:	ldr	r9, [r4, #20]
   171e8:	add	r9, r9, r7
   171ec:	str	r9, [r4, #20]
   171f0:	mov	r3, #34	; 0x22
   171f4:	strb	r3, [r9]
   171f8:	ldr	r1, [r4, #20]
   171fc:	ldrb	r3, [r4, #26]
   17200:	clz	r3, r3
   17204:	lsr	r3, r3, #5
   17208:	add	r2, r1, r3
   1720c:	add	r2, r2, #1
   17210:	mov	r0, #58	; 0x3a
   17214:	str	r2, [r4, #20]
   17218:	strb	r0, [r1, r3]
   1721c:	ldr	r3, [r4, #20]
   17220:	mov	r2, #32
   17224:	mov	r0, r8
   17228:	strb	r2, [r3]
   1722c:	ldrb	r3, [r4, #25]
   17230:	ldr	r1, [r4, #20]
   17234:	cmp	r3, #0
   17238:	addne	r1, r1, #1
   1723c:	str	r1, [r4, #20]
   17240:	bl	13bc8 <test_print@@Base+0x3f4>
   17244:	ldr	r3, [r4, #20]
   17248:	add	r0, r3, r0
   1724c:	str	r0, [r4, #20]
   17250:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17254:	mov	r2, r9
   17258:	mov	r1, r6
   1725c:	bl	1244c <memcpy@plt>
   17260:	ldr	r7, [r4, #20]
   17264:	add	r9, r7, r9
   17268:	str	r9, [r4, #20]
   1726c:	b	171f0 <flatcc_json_printer_uint32_field@@Base+0x158>
   17270:	ldrb	r3, [r0, #28]
   17274:	cmp	r3, #0
   17278:	beq	170fc <flatcc_json_printer_uint32_field@@Base+0x64>
   1727c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17280:	mov	r0, r4
   17284:	ldr	r3, [r4, #44]	; 0x2c
   17288:	mov	r1, #0
   1728c:	blx	r3
   17290:	ldr	r5, [r4, #16]
   17294:	ldr	r0, [r4, #20]
   17298:	b	17184 <flatcc_json_printer_uint32_field@@Base+0xec>
   1729c:	add	r1, r3, #1
   172a0:	mov	r2, #10
   172a4:	str	r1, [r4, #20]
   172a8:	mov	r0, r4
   172ac:	strb	r2, [r3]
   172b0:	bl	145ac <test_print@@Base+0xdd8>
   172b4:	ldr	r3, [r4, #20]
   172b8:	b	17150 <flatcc_json_printer_uint32_field@@Base+0xb8>

000172bc <flatcc_json_printer_uint64_field@@Base>:
   172bc:	add	r2, r2, #2
   172c0:	ldr	ip, [r1, #8]
   172c4:	lsl	r2, r2, #1
   172c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   172cc:	cmp	r2, ip
   172d0:	mov	r4, r0
   172d4:	mov	r8, r3
   172d8:	ldr	r9, [sp, #32]
   172dc:	blt	172f4 <flatcc_json_printer_uint64_field@@Base+0x38>
   172e0:	ldrb	r3, [r4, #29]
   172e4:	cmp	r3, #0
   172e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   172ec:	ldrd	r6, [sp, #40]	; 0x28
   172f0:	b	17324 <flatcc_json_printer_uint64_field@@Base+0x68>
   172f4:	ldr	r3, [r1, #4]
   172f8:	ldrh	r3, [r3, r2]
   172fc:	cmp	r3, #0
   17300:	beq	172e0 <flatcc_json_printer_uint64_field@@Base+0x24>
   17304:	ldr	r2, [r1]
   17308:	cmn	r2, r3
   1730c:	beq	172e0 <flatcc_json_printer_uint64_field@@Base+0x24>
   17310:	ldrd	r6, [r2, r3]
   17314:	ldrd	r2, [sp, #40]	; 0x28
   17318:	cmp	r3, r7
   1731c:	cmpeq	r2, r6
   17320:	beq	1749c <flatcc_json_printer_uint64_field@@Base+0x1e0>
   17324:	ldr	r3, [r1, #16]
   17328:	mov	sl, r9
   1732c:	cmp	r3, #0
   17330:	add	r3, r3, #1
   17334:	str	r3, [r1, #16]
   17338:	ldrne	r3, [r4, #20]
   1733c:	movne	r2, #44	; 0x2c
   17340:	addne	r1, r3, #1
   17344:	strne	r1, [r4, #20]
   17348:	strbne	r2, [r3]
   1734c:	ldrb	r1, [r4, #25]
   17350:	ldr	r3, [r4, #20]
   17354:	cmp	r1, #0
   17358:	bne	174c8 <flatcc_json_printer_uint64_field@@Base+0x20c>
   1735c:	ldr	r2, [r4, #16]
   17360:	cmp	r3, r2
   17364:	bcc	17378 <flatcc_json_printer_uint64_field@@Base+0xbc>
   17368:	ldr	r3, [r4, #44]	; 0x2c
   1736c:	mov	r0, r4
   17370:	blx	r3
   17374:	ldr	r3, [r4, #20]
   17378:	mov	r2, #34	; 0x22
   1737c:	strb	r2, [r3]
   17380:	ldrb	r3, [r4, #26]
   17384:	ldr	r0, [r4, #20]
   17388:	ldr	r5, [r4, #16]
   1738c:	cmp	r3, #0
   17390:	addeq	r0, r0, #1
   17394:	add	r3, r0, r9
   17398:	cmp	r5, r3
   1739c:	str	r0, [r4, #20]
   173a0:	bhi	17480 <flatcc_json_printer_uint64_field@@Base+0x1c4>
   173a4:	cmp	r0, r5
   173a8:	bcs	174ac <flatcc_json_printer_uint64_field@@Base+0x1f0>
   173ac:	sub	r5, r5, r0
   173b0:	cmp	r9, r5
   173b4:	bls	17400 <flatcc_json_printer_uint64_field@@Base+0x144>
   173b8:	mov	r9, #0
   173bc:	mov	r2, r5
   173c0:	mov	r1, r8
   173c4:	bl	1244c <memcpy@plt>
   173c8:	ldr	r3, [r4, #20]
   173cc:	mov	r0, r4
   173d0:	add	r3, r3, r5
   173d4:	str	r3, [r4, #20]
   173d8:	ldr	r2, [r4, #44]	; 0x2c
   173dc:	mov	r1, r9
   173e0:	blx	r2
   173e4:	ldr	r0, [r4, #20]
   173e8:	ldr	r3, [r4, #16]
   173ec:	sub	sl, sl, r5
   173f0:	add	r8, r8, r5
   173f4:	sub	r5, r3, r0
   173f8:	cmp	sl, r5
   173fc:	bhi	173bc <flatcc_json_printer_uint64_field@@Base+0x100>
   17400:	mov	r1, r8
   17404:	mov	r2, sl
   17408:	bl	1244c <memcpy@plt>
   1740c:	ldr	r9, [r4, #20]
   17410:	add	r9, r9, sl
   17414:	str	r9, [r4, #20]
   17418:	mov	r3, #34	; 0x22
   1741c:	strb	r3, [r9]
   17420:	ldr	r1, [r4, #20]
   17424:	ldrb	r3, [r4, #26]
   17428:	clz	r3, r3
   1742c:	lsr	r3, r3, #5
   17430:	add	r2, r1, r3
   17434:	add	r2, r2, #1
   17438:	mov	r0, #58	; 0x3a
   1743c:	str	r2, [r4, #20]
   17440:	strb	r0, [r1, r3]
   17444:	ldr	r3, [r4, #20]
   17448:	mov	r2, #32
   1744c:	mov	r0, r6
   17450:	strb	r2, [r3]
   17454:	ldrb	r3, [r4, #25]
   17458:	ldr	r2, [r4, #20]
   1745c:	mov	r1, r7
   17460:	cmp	r3, #0
   17464:	addne	r2, r2, #1
   17468:	str	r2, [r4, #20]
   1746c:	bl	13ef0 <test_print@@Base+0x71c>
   17470:	ldr	r3, [r4, #20]
   17474:	add	r0, r3, r0
   17478:	str	r0, [r4, #20]
   1747c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17480:	mov	r2, r9
   17484:	mov	r1, r8
   17488:	bl	1244c <memcpy@plt>
   1748c:	ldr	sl, [r4, #20]
   17490:	add	r9, sl, r9
   17494:	str	r9, [r4, #20]
   17498:	b	17418 <flatcc_json_printer_uint64_field@@Base+0x15c>
   1749c:	ldrb	r3, [r0, #28]
   174a0:	cmp	r3, #0
   174a4:	beq	17324 <flatcc_json_printer_uint64_field@@Base+0x68>
   174a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   174ac:	mov	r0, r4
   174b0:	ldr	r3, [r4, #44]	; 0x2c
   174b4:	mov	r1, #0
   174b8:	blx	r3
   174bc:	ldr	r5, [r4, #16]
   174c0:	ldr	r0, [r4, #20]
   174c4:	b	173ac <flatcc_json_printer_uint64_field@@Base+0xf0>
   174c8:	add	r1, r3, #1
   174cc:	mov	r2, #10
   174d0:	str	r1, [r4, #20]
   174d4:	mov	r0, r4
   174d8:	strb	r2, [r3]
   174dc:	bl	145ac <test_print@@Base+0xdd8>
   174e0:	ldr	r3, [r4, #20]
   174e4:	b	17378 <flatcc_json_printer_uint64_field@@Base+0xbc>

000174e8 <flatcc_json_printer_int8_field@@Base>:
   174e8:	add	r2, r2, #2
   174ec:	ldr	ip, [r1, #8]
   174f0:	lsl	r2, r2, #1
   174f4:	cmp	r2, ip
   174f8:	push	{r4, r5, r6, lr}
   174fc:	ldrsb	ip, [sp, #20]
   17500:	blt	17518 <flatcc_json_printer_int8_field@@Base+0x30>
   17504:	ldrb	r2, [r0, #29]
   17508:	cmp	r2, #0
   1750c:	popeq	{r4, r5, r6, pc}
   17510:	mov	r4, ip
   17514:	b	17540 <flatcc_json_printer_int8_field@@Base+0x58>
   17518:	ldr	lr, [r1, #4]
   1751c:	ldrh	r2, [lr, r2]
   17520:	cmp	r2, #0
   17524:	beq	17504 <flatcc_json_printer_int8_field@@Base+0x1c>
   17528:	ldr	lr, [r1]
   1752c:	cmn	lr, r2
   17530:	beq	17504 <flatcc_json_printer_int8_field@@Base+0x1c>
   17534:	ldrsb	r4, [lr, r2]
   17538:	cmp	ip, r4
   1753c:	beq	17630 <flatcc_json_printer_int8_field@@Base+0x148>
   17540:	ldr	r2, [r1, #16]
   17544:	mov	r5, r0
   17548:	cmp	r2, #0
   1754c:	add	r2, r2, #1
   17550:	str	r2, [r1, #16]
   17554:	ldrne	r2, [r0, #20]
   17558:	movne	r1, #44	; 0x2c
   1755c:	addne	ip, r2, #1
   17560:	strne	ip, [r0, #20]
   17564:	strbne	r1, [r2]
   17568:	mov	r1, r3
   1756c:	ldr	r2, [sp, #16]
   17570:	bl	14b4c <test_print@@Base+0x1378>
   17574:	cmp	r4, #0
   17578:	lsr	r1, r4, #31
   1757c:	rsblt	r4, r4, #0
   17580:	ldr	r3, [r5, #20]
   17584:	sxtblt	r4, r4
   17588:	movlt	r2, #45	; 0x2d
   1758c:	uxtb	r4, r4
   17590:	strblt	r2, [r3]
   17594:	addlt	r3, r3, #1
   17598:	cmp	r4, #99	; 0x63
   1759c:	bls	175fc <flatcc_json_printer_int8_field@@Base+0x114>
   175a0:	ldr	r2, [pc, #176]	; 17658 <flatcc_json_printer_int8_field@@Base+0x170>
   175a4:	mov	ip, #100	; 0x64
   175a8:	ldr	r0, [pc, #172]	; 1765c <flatcc_json_printer_int8_field@@Base+0x174>
   175ac:	umull	lr, r2, r2, r4
   175b0:	mov	lr, #0
   175b4:	lsr	r2, r2, #5
   175b8:	strb	lr, [r3, #3]
   175bc:	mul	r2, ip, r2
   175c0:	mov	ip, #49	; 0x31
   175c4:	sub	r4, r4, r2
   175c8:	mov	r2, #3
   175cc:	uxtb	r4, r4
   175d0:	ldrb	lr, [r0, r4, lsl #1]
   175d4:	add	r4, r0, r4, lsl #1
   175d8:	strb	lr, [r3, #1]
   175dc:	ldrb	r0, [r4, #1]
   175e0:	strb	ip, [r3]
   175e4:	strb	r0, [r3, #2]
   175e8:	ldr	r3, [r5, #20]
   175ec:	add	r2, r1, r2
   175f0:	add	r3, r3, r2
   175f4:	str	r3, [r5, #20]
   175f8:	pop	{r4, r5, r6, pc}
   175fc:	cmp	r4, #9
   17600:	bls	17640 <flatcc_json_printer_int8_field@@Base+0x158>
   17604:	ldr	r2, [pc, #80]	; 1765c <flatcc_json_printer_int8_field@@Base+0x174>
   17608:	sxth	r4, r4
   1760c:	mov	r0, #0
   17610:	strb	r0, [r3, #2]
   17614:	ldrb	r0, [r2, r4, lsl #1]
   17618:	add	r4, r2, r4, lsl #1
   1761c:	mov	r2, #2
   17620:	strb	r0, [r3]
   17624:	ldrb	r0, [r4, #1]
   17628:	strb	r0, [r3, #1]
   1762c:	b	175e8 <flatcc_json_printer_int8_field@@Base+0x100>
   17630:	ldrb	r2, [r0, #28]
   17634:	cmp	r2, #0
   17638:	beq	17540 <flatcc_json_printer_int8_field@@Base+0x58>
   1763c:	pop	{r4, r5, r6, pc}
   17640:	add	r4, r4, #48	; 0x30
   17644:	mov	r0, #0
   17648:	mov	r2, #1
   1764c:	strb	r4, [r3]
   17650:	strb	r0, [r3, #1]
   17654:	b	175e8 <flatcc_json_printer_int8_field@@Base+0x100>
   17658:	mvnpl	r8, pc, lsl r5
   1765c:	andeq	r1, r2, r8, ror #12

00017660 <flatcc_json_printer_int16_field@@Base>:
   17660:	add	r2, r2, #2
   17664:	ldr	ip, [r1, #8]
   17668:	lsl	r2, r2, #1
   1766c:	cmp	r2, ip
   17670:	push	{r4, r5, r6, lr}
   17674:	ldrsh	ip, [sp, #20]
   17678:	blt	17690 <flatcc_json_printer_int16_field@@Base+0x30>
   1767c:	ldrb	r2, [r0, #29]
   17680:	cmp	r2, #0
   17684:	popeq	{r4, r5, r6, pc}
   17688:	mov	r5, ip
   1768c:	b	176b8 <flatcc_json_printer_int16_field@@Base+0x58>
   17690:	ldr	lr, [r1, #4]
   17694:	ldrh	r2, [lr, r2]
   17698:	cmp	r2, #0
   1769c:	beq	1767c <flatcc_json_printer_int16_field@@Base+0x1c>
   176a0:	ldr	lr, [r1]
   176a4:	cmn	lr, r2
   176a8:	beq	1767c <flatcc_json_printer_int16_field@@Base+0x1c>
   176ac:	ldrsh	r5, [lr, r2]
   176b0:	cmp	ip, r5
   176b4:	beq	17728 <flatcc_json_printer_int16_field@@Base+0xc8>
   176b8:	ldr	r2, [r1, #16]
   176bc:	mov	r4, r0
   176c0:	cmp	r2, #0
   176c4:	add	r2, r2, #1
   176c8:	str	r2, [r1, #16]
   176cc:	ldrne	r2, [r0, #20]
   176d0:	movne	r1, #44	; 0x2c
   176d4:	addne	ip, r2, #1
   176d8:	strne	ip, [r0, #20]
   176dc:	strbne	r1, [r2]
   176e0:	mov	r1, r3
   176e4:	ldr	r2, [sp, #16]
   176e8:	bl	14b4c <test_print@@Base+0x1378>
   176ec:	cmp	r5, #0
   176f0:	lsr	r6, r5, #31
   176f4:	rsblt	r5, r5, #0
   176f8:	ldr	r1, [r4, #20]
   176fc:	sxthlt	r5, r5
   17700:	movlt	r3, #45	; 0x2d
   17704:	uxth	r0, r5
   17708:	strblt	r3, [r1]
   1770c:	addlt	r1, r1, #1
   17710:	bl	13a60 <test_print@@Base+0x28c>
   17714:	ldr	r3, [r4, #20]
   17718:	add	r0, r6, r0
   1771c:	add	r3, r3, r0
   17720:	str	r3, [r4, #20]
   17724:	pop	{r4, r5, r6, pc}
   17728:	ldrb	r2, [r0, #28]
   1772c:	cmp	r2, #0
   17730:	beq	176b8 <flatcc_json_printer_int16_field@@Base+0x58>
   17734:	pop	{r4, r5, r6, pc}

00017738 <flatcc_json_printer_int32_field@@Base>:
   17738:	add	r2, r2, #2
   1773c:	ldr	ip, [r1, #8]
   17740:	lsl	r2, r2, #1
   17744:	cmp	r2, ip
   17748:	push	{r4, r5, r6, lr}
   1774c:	blt	17764 <flatcc_json_printer_int32_field@@Base+0x2c>
   17750:	ldrb	r2, [r0, #29]
   17754:	cmp	r2, #0
   17758:	popeq	{r4, r5, r6, pc}
   1775c:	ldr	r5, [sp, #20]
   17760:	b	17790 <flatcc_json_printer_int32_field@@Base+0x58>
   17764:	ldr	ip, [r1, #4]
   17768:	ldrh	r2, [ip, r2]
   1776c:	cmp	r2, #0
   17770:	beq	17750 <flatcc_json_printer_int32_field@@Base+0x18>
   17774:	ldr	ip, [r1]
   17778:	cmn	ip, r2
   1777c:	beq	17750 <flatcc_json_printer_int32_field@@Base+0x18>
   17780:	ldr	r5, [ip, r2]
   17784:	ldr	r2, [sp, #20]
   17788:	cmp	r2, r5
   1778c:	beq	177fc <flatcc_json_printer_int32_field@@Base+0xc4>
   17790:	ldr	r2, [r1, #16]
   17794:	mov	r4, r0
   17798:	cmp	r2, #0
   1779c:	add	r2, r2, #1
   177a0:	str	r2, [r1, #16]
   177a4:	ldrne	r2, [r0, #20]
   177a8:	movne	r1, #44	; 0x2c
   177ac:	addne	ip, r2, #1
   177b0:	strne	ip, [r0, #20]
   177b4:	strbne	r1, [r2]
   177b8:	mov	r1, r3
   177bc:	ldr	r2, [sp, #16]
   177c0:	bl	14b4c <test_print@@Base+0x1378>
   177c4:	ldr	r1, [r4, #20]
   177c8:	cmp	r5, #0
   177cc:	movlt	r3, #45	; 0x2d
   177d0:	lsr	r6, r5, #31
   177d4:	rsblt	r5, r5, #0
   177d8:	mov	r0, r5
   177dc:	strblt	r3, [r1]
   177e0:	addlt	r1, r1, #1
   177e4:	bl	13bc8 <test_print@@Base+0x3f4>
   177e8:	ldr	r3, [r4, #20]
   177ec:	add	r0, r6, r0
   177f0:	add	r3, r3, r0
   177f4:	str	r3, [r4, #20]
   177f8:	pop	{r4, r5, r6, pc}
   177fc:	ldrb	r2, [r0, #28]
   17800:	cmp	r2, #0
   17804:	beq	17790 <flatcc_json_printer_int32_field@@Base+0x58>
   17808:	pop	{r4, r5, r6, pc}

0001780c <flatcc_json_printer_int64_field@@Base>:
   1780c:	add	r2, r2, #2
   17810:	ldr	ip, [r1, #8]
   17814:	lsl	r2, r2, #1
   17818:	cmp	r2, ip
   1781c:	push	{r4, r5, r6, r7, r8, lr}
   17820:	blt	17838 <flatcc_json_printer_int64_field@@Base+0x2c>
   17824:	ldrb	r2, [r0, #29]
   17828:	cmp	r2, #0
   1782c:	popeq	{r4, r5, r6, r7, r8, pc}
   17830:	ldrd	r6, [sp, #32]
   17834:	b	17868 <flatcc_json_printer_int64_field@@Base+0x5c>
   17838:	ldr	ip, [r1, #4]
   1783c:	ldrh	r2, [ip, r2]
   17840:	cmp	r2, #0
   17844:	beq	17824 <flatcc_json_printer_int64_field@@Base+0x18>
   17848:	ldr	ip, [r1]
   1784c:	cmn	ip, r2
   17850:	beq	17824 <flatcc_json_printer_int64_field@@Base+0x18>
   17854:	ldrd	r6, [ip, r2]
   17858:	ldrd	r4, [sp, #32]
   1785c:	cmp	r5, r7
   17860:	cmpeq	r4, r6
   17864:	beq	178d0 <flatcc_json_printer_int64_field@@Base+0xc4>
   17868:	ldr	r2, [r1, #16]
   1786c:	mov	r4, r0
   17870:	cmp	r2, #0
   17874:	add	r2, r2, #1
   17878:	str	r2, [r1, #16]
   1787c:	ldrne	r2, [r0, #20]
   17880:	movne	r1, #44	; 0x2c
   17884:	addne	ip, r2, #1
   17888:	strne	ip, [r0, #20]
   1788c:	strbne	r1, [r2]
   17890:	mov	r1, r3
   17894:	ldr	r2, [sp, #24]
   17898:	bl	14b4c <test_print@@Base+0x1378>
   1789c:	cmp	r6, #0
   178a0:	sbcs	r3, r7, #0
   178a4:	ldr	r2, [r4, #20]
   178a8:	lsr	r5, r7, #31
   178ac:	blt	178e0 <flatcc_json_printer_int64_field@@Base+0xd4>
   178b0:	mov	r0, r6
   178b4:	mov	r1, r7
   178b8:	bl	13ef0 <test_print@@Base+0x71c>
   178bc:	ldr	r3, [r4, #20]
   178c0:	add	r0, r5, r0
   178c4:	add	r3, r3, r0
   178c8:	str	r3, [r4, #20]
   178cc:	pop	{r4, r5, r6, r7, r8, pc}
   178d0:	ldrb	r2, [r0, #28]
   178d4:	cmp	r2, #0
   178d8:	beq	17868 <flatcc_json_printer_int64_field@@Base+0x5c>
   178dc:	pop	{r4, r5, r6, r7, r8, pc}
   178e0:	mov	r3, #45	; 0x2d
   178e4:	rsbs	r6, r6, #0
   178e8:	strb	r3, [r2]
   178ec:	rsc	r7, r7, #0
   178f0:	add	r2, r2, #1
   178f4:	b	178b0 <flatcc_json_printer_int64_field@@Base+0xa4>

000178f8 <flatcc_json_printer_bool_field@@Base>:
   178f8:	add	r2, r2, #2
   178fc:	ldr	ip, [r1, #8]
   17900:	lsl	r2, r2, #1
   17904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17908:	cmp	r2, ip
   1790c:	mov	r4, r0
   17910:	mov	r6, r3
   17914:	ldr	r9, [sp, #32]
   17918:	ldrb	r0, [sp, #36]	; 0x24
   1791c:	blt	17934 <flatcc_json_printer_bool_field@@Base+0x3c>
   17920:	ldrb	r3, [r4, #29]
   17924:	cmp	r3, #0
   17928:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1792c:	mov	r8, r0
   17930:	b	1795c <flatcc_json_printer_bool_field@@Base+0x64>
   17934:	ldr	r3, [r1, #4]
   17938:	ldrh	r3, [r3, r2]
   1793c:	cmp	r3, #0
   17940:	beq	17920 <flatcc_json_printer_bool_field@@Base+0x28>
   17944:	ldr	r2, [r1]
   17948:	cmn	r2, r3
   1794c:	beq	17920 <flatcc_json_printer_bool_field@@Base+0x28>
   17950:	ldrb	r8, [r2, r3]
   17954:	cmp	r0, r8
   17958:	beq	17b08 <flatcc_json_printer_bool_field@@Base+0x210>
   1795c:	ldr	r3, [r1, #16]
   17960:	mov	r7, r9
   17964:	cmp	r3, #0
   17968:	add	r3, r3, #1
   1796c:	str	r3, [r1, #16]
   17970:	ldrne	r3, [r4, #20]
   17974:	movne	r2, #44	; 0x2c
   17978:	addne	r1, r3, #1
   1797c:	strne	r1, [r4, #20]
   17980:	strbne	r2, [r3]
   17984:	ldrb	r1, [r4, #25]
   17988:	ldr	r3, [r4, #20]
   1798c:	cmp	r1, #0
   17990:	bne	17b34 <flatcc_json_printer_bool_field@@Base+0x23c>
   17994:	ldr	r2, [r4, #16]
   17998:	cmp	r3, r2
   1799c:	bcc	179b0 <flatcc_json_printer_bool_field@@Base+0xb8>
   179a0:	ldr	r3, [r4, #44]	; 0x2c
   179a4:	mov	r0, r4
   179a8:	blx	r3
   179ac:	ldr	r3, [r4, #20]
   179b0:	mov	r2, #34	; 0x22
   179b4:	strb	r2, [r3]
   179b8:	ldrb	r3, [r4, #26]
   179bc:	ldr	r0, [r4, #20]
   179c0:	ldr	r5, [r4, #16]
   179c4:	cmp	r3, #0
   179c8:	addeq	r0, r0, #1
   179cc:	add	r3, r0, r9
   179d0:	cmp	r5, r3
   179d4:	str	r0, [r4, #20]
   179d8:	bhi	17ad4 <flatcc_json_printer_bool_field@@Base+0x1dc>
   179dc:	cmp	r0, r5
   179e0:	bcs	17b18 <flatcc_json_printer_bool_field@@Base+0x220>
   179e4:	sub	r5, r5, r0
   179e8:	cmp	r9, r5
   179ec:	bls	17a38 <flatcc_json_printer_bool_field@@Base+0x140>
   179f0:	mov	r9, #0
   179f4:	mov	r2, r5
   179f8:	mov	r1, r6
   179fc:	bl	1244c <memcpy@plt>
   17a00:	ldr	r2, [r4, #20]
   17a04:	ldr	r3, [r4, #44]	; 0x2c
   17a08:	add	r2, r2, r5
   17a0c:	mov	r0, r4
   17a10:	str	r2, [r4, #20]
   17a14:	mov	r1, r9
   17a18:	blx	r3
   17a1c:	ldr	r0, [r4, #20]
   17a20:	ldr	r3, [r4, #16]
   17a24:	sub	r7, r7, r5
   17a28:	add	r6, r6, r5
   17a2c:	sub	r5, r3, r0
   17a30:	cmp	r7, r5
   17a34:	bhi	179f4 <flatcc_json_printer_bool_field@@Base+0xfc>
   17a38:	mov	r1, r6
   17a3c:	mov	r2, r7
   17a40:	bl	1244c <memcpy@plt>
   17a44:	ldr	r9, [r4, #20]
   17a48:	add	r9, r9, r7
   17a4c:	str	r9, [r4, #20]
   17a50:	mov	r3, #34	; 0x22
   17a54:	strb	r3, [r9]
   17a58:	ldr	r1, [r4, #20]
   17a5c:	ldrb	r3, [r4, #26]
   17a60:	clz	r3, r3
   17a64:	lsr	r3, r3, #5
   17a68:	add	r2, r1, r3
   17a6c:	add	r2, r2, #1
   17a70:	mov	r0, #58	; 0x3a
   17a74:	str	r2, [r4, #20]
   17a78:	strb	r0, [r1, r3]
   17a7c:	ldr	r3, [r4, #20]
   17a80:	mov	r2, #32
   17a84:	ldr	r0, [pc, #200]	; 17b54 <flatcc_json_printer_bool_field@@Base+0x25c>
   17a88:	strb	r2, [r3]
   17a8c:	ldrb	r3, [r4, #25]
   17a90:	ldr	r1, [r4, #20]
   17a94:	adds	r3, r3, #0
   17a98:	movne	r3, #1
   17a9c:	add	r2, r1, r3
   17aa0:	cmp	r8, #0
   17aa4:	str	r2, [r4, #20]
   17aa8:	bne	17af0 <flatcc_json_printer_bool_field@@Base+0x1f8>
   17aac:	add	lr, r0, #1792	; 0x700
   17ab0:	mov	ip, #5
   17ab4:	ldrh	lr, [lr, #4]
   17ab8:	ldr	r0, [r0, #1792]	; 0x700
   17abc:	str	r0, [r1, r3]
   17ac0:	strh	lr, [r2, #4]
   17ac4:	ldr	r3, [r4, #20]
   17ac8:	add	r3, r3, ip
   17acc:	str	r3, [r4, #20]
   17ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ad4:	mov	r2, r9
   17ad8:	mov	r1, r6
   17adc:	bl	1244c <memcpy@plt>
   17ae0:	ldr	r7, [r4, #20]
   17ae4:	add	r9, r7, r9
   17ae8:	str	r9, [r4, #20]
   17aec:	b	17a50 <flatcc_json_printer_bool_field@@Base+0x158>
   17af0:	ldrb	lr, [r0, #1788]	; 0x6fc
   17af4:	ldr	r0, [r0, #1784]	; 0x6f8
   17af8:	mov	ip, #4
   17afc:	str	r0, [r1, r3]
   17b00:	strb	lr, [r2, #4]
   17b04:	b	17ac4 <flatcc_json_printer_bool_field@@Base+0x1cc>
   17b08:	ldrb	r3, [r4, #28]
   17b0c:	cmp	r3, #0
   17b10:	beq	1795c <flatcc_json_printer_bool_field@@Base+0x64>
   17b14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b18:	mov	r0, r4
   17b1c:	ldr	r3, [r4, #44]	; 0x2c
   17b20:	mov	r1, #0
   17b24:	blx	r3
   17b28:	ldr	r5, [r4, #16]
   17b2c:	ldr	r0, [r4, #20]
   17b30:	b	179e4 <flatcc_json_printer_bool_field@@Base+0xec>
   17b34:	add	r1, r3, #1
   17b38:	mov	r2, #10
   17b3c:	str	r1, [r4, #20]
   17b40:	mov	r0, r4
   17b44:	strb	r2, [r3]
   17b48:	bl	145ac <test_print@@Base+0xdd8>
   17b4c:	ldr	r3, [r4, #20]
   17b50:	b	179b0 <flatcc_json_printer_bool_field@@Base+0xb8>
   17b54:	andeq	r1, r2, r8, ror #12

00017b58 <flatcc_json_printer_float_field@@Base>:
   17b58:	add	r2, r2, #2
   17b5c:	ldr	ip, [r1, #8]
   17b60:	lsl	r2, r2, #1
   17b64:	cmp	r2, ip
   17b68:	push	{r4, lr}
   17b6c:	vpush	{d8}
   17b70:	blt	17b88 <flatcc_json_printer_float_field@@Base+0x30>
   17b74:	ldrb	r2, [r0, #29]
   17b78:	cmp	r2, #0
   17b7c:	beq	17c0c <flatcc_json_printer_float_field@@Base+0xb4>
   17b80:	vmov.f32	s16, s0
   17b84:	b	17bc0 <flatcc_json_printer_float_field@@Base+0x68>
   17b88:	ldr	ip, [r1, #4]
   17b8c:	ldrh	ip, [ip, r2]
   17b90:	cmp	ip, #0
   17b94:	beq	17b74 <flatcc_json_printer_float_field@@Base+0x1c>
   17b98:	ldr	r2, [r1]
   17b9c:	adds	r2, r2, ip
   17ba0:	beq	17b74 <flatcc_json_printer_float_field@@Base+0x1c>
   17ba4:	vldr	s16, [r2]
   17ba8:	vcmp.f32	s0, s16
   17bac:	vmrs	APSR_nzcv, fpscr
   17bb0:	bne	17bc0 <flatcc_json_printer_float_field@@Base+0x68>
   17bb4:	ldrb	r2, [r0, #28]
   17bb8:	cmp	r2, #0
   17bbc:	bne	17c0c <flatcc_json_printer_float_field@@Base+0xb4>
   17bc0:	ldr	r2, [r1, #16]
   17bc4:	mov	r4, r0
   17bc8:	cmp	r2, #0
   17bcc:	add	r2, r2, #1
   17bd0:	str	r2, [r1, #16]
   17bd4:	ldrne	r2, [r0, #20]
   17bd8:	movne	r1, #44	; 0x2c
   17bdc:	addne	ip, r2, #1
   17be0:	strne	ip, [r0, #20]
   17be4:	strbne	r1, [r2]
   17be8:	mov	r1, r3
   17bec:	ldr	r2, [sp, #16]
   17bf0:	bl	14b4c <test_print@@Base+0x1378>
   17bf4:	ldr	r0, [r4, #20]
   17bf8:	vcvt.f64.f32	d0, s16
   17bfc:	bl	14cb0 <test_print@@Base+0x14dc>
   17c00:	ldr	r3, [r4, #20]
   17c04:	add	r0, r3, r0
   17c08:	str	r0, [r4, #20]
   17c0c:	vpop	{d8}
   17c10:	pop	{r4, pc}

00017c14 <flatcc_json_printer_double_field@@Base>:
   17c14:	add	r2, r2, #2
   17c18:	ldr	ip, [r1, #8]
   17c1c:	lsl	r2, r2, #1
   17c20:	cmp	r2, ip
   17c24:	push	{r4, lr}
   17c28:	vpush	{d8}
   17c2c:	blt	17c44 <flatcc_json_printer_double_field@@Base+0x30>
   17c30:	ldrb	r2, [r0, #29]
   17c34:	cmp	r2, #0
   17c38:	beq	17cc8 <flatcc_json_printer_double_field@@Base+0xb4>
   17c3c:	vmov.f64	d8, d0
   17c40:	b	17c7c <flatcc_json_printer_double_field@@Base+0x68>
   17c44:	ldr	ip, [r1, #4]
   17c48:	ldrh	ip, [ip, r2]
   17c4c:	cmp	ip, #0
   17c50:	beq	17c30 <flatcc_json_printer_double_field@@Base+0x1c>
   17c54:	ldr	r2, [r1]
   17c58:	adds	r2, r2, ip
   17c5c:	beq	17c30 <flatcc_json_printer_double_field@@Base+0x1c>
   17c60:	vldr	d8, [r2]
   17c64:	vcmp.f64	d0, d8
   17c68:	vmrs	APSR_nzcv, fpscr
   17c6c:	bne	17c7c <flatcc_json_printer_double_field@@Base+0x68>
   17c70:	ldrb	r2, [r0, #28]
   17c74:	cmp	r2, #0
   17c78:	bne	17cc8 <flatcc_json_printer_double_field@@Base+0xb4>
   17c7c:	ldr	r2, [r1, #16]
   17c80:	mov	r4, r0
   17c84:	cmp	r2, #0
   17c88:	add	r2, r2, #1
   17c8c:	str	r2, [r1, #16]
   17c90:	ldrne	r2, [r0, #20]
   17c94:	movne	r1, #44	; 0x2c
   17c98:	addne	ip, r2, #1
   17c9c:	strne	ip, [r0, #20]
   17ca0:	strbne	r1, [r2]
   17ca4:	mov	r1, r3
   17ca8:	ldr	r2, [sp, #16]
   17cac:	bl	14b4c <test_print@@Base+0x1378>
   17cb0:	vmov.f64	d0, d8
   17cb4:	ldr	r0, [r4, #20]
   17cb8:	bl	14cb0 <test_print@@Base+0x14dc>
   17cbc:	ldr	r3, [r4, #20]
   17cc0:	add	r0, r3, r0
   17cc4:	str	r0, [r4, #20]
   17cc8:	vpop	{d8}
   17ccc:	pop	{r4, pc}

00017cd0 <flatcc_json_printer_uint8_enum_field@@Base>:
   17cd0:	add	r2, r2, #2
   17cd4:	push	{r4, r5, r6, lr}
   17cd8:	lsl	ip, r2, #1
   17cdc:	ldr	lr, [r1, #8]
   17ce0:	ldr	r2, [sp, #16]
   17ce4:	cmp	ip, lr
   17ce8:	ldr	r5, [sp, #24]
   17cec:	ldrb	lr, [sp, #20]
   17cf0:	blt	17d08 <flatcc_json_printer_uint8_enum_field@@Base+0x38>
   17cf4:	ldrb	ip, [r0, #29]
   17cf8:	cmp	ip, #0
   17cfc:	popeq	{r4, r5, r6, pc}
   17d00:	mov	r6, lr
   17d04:	b	17d30 <flatcc_json_printer_uint8_enum_field@@Base+0x60>
   17d08:	ldr	r4, [r1, #4]
   17d0c:	ldrh	ip, [r4, ip]
   17d10:	cmp	ip, #0
   17d14:	beq	17cf4 <flatcc_json_printer_uint8_enum_field@@Base+0x24>
   17d18:	ldr	r4, [r1]
   17d1c:	cmn	r4, ip
   17d20:	beq	17cf4 <flatcc_json_printer_uint8_enum_field@@Base+0x24>
   17d24:	ldrb	r6, [r4, ip]
   17d28:	cmp	lr, r6
   17d2c:	beq	17d9c <flatcc_json_printer_uint8_enum_field@@Base+0xcc>
   17d30:	ldr	ip, [r1, #16]
   17d34:	mov	r4, r0
   17d38:	cmp	ip, #0
   17d3c:	add	ip, ip, #1
   17d40:	str	ip, [r1, #16]
   17d44:	ldrne	r1, [r0, #20]
   17d48:	movne	ip, #44	; 0x2c
   17d4c:	addne	lr, r1, #1
   17d50:	strne	lr, [r0, #20]
   17d54:	strbne	ip, [r1]
   17d58:	mov	r1, r3
   17d5c:	bl	14b4c <test_print@@Base+0x1378>
   17d60:	ldrb	r3, [r4, #27]
   17d64:	cmp	r3, #0
   17d68:	bne	17d80 <flatcc_json_printer_uint8_enum_field@@Base+0xb0>
   17d6c:	mov	r1, r6
   17d70:	mov	r0, r4
   17d74:	mov	r3, r5
   17d78:	pop	{r4, r5, r6, lr}
   17d7c:	bx	r3
   17d80:	mov	r0, r6
   17d84:	ldr	r1, [r4, #20]
   17d88:	bl	147ac <test_print@@Base+0xfd8>
   17d8c:	ldr	r3, [r4, #20]
   17d90:	add	r0, r3, r0
   17d94:	str	r0, [r4, #20]
   17d98:	pop	{r4, r5, r6, pc}
   17d9c:	ldrb	ip, [r0, #28]
   17da0:	cmp	ip, #0
   17da4:	beq	17d30 <flatcc_json_printer_uint8_enum_field@@Base+0x60>
   17da8:	pop	{r4, r5, r6, pc}

00017dac <flatcc_json_printer_uint16_enum_field@@Base>:
   17dac:	add	r2, r2, #2
   17db0:	push	{r4, r5, r6, lr}
   17db4:	lsl	ip, r2, #1
   17db8:	ldr	lr, [r1, #8]
   17dbc:	ldr	r2, [sp, #16]
   17dc0:	cmp	ip, lr
   17dc4:	ldr	r5, [sp, #24]
   17dc8:	ldrh	lr, [sp, #20]
   17dcc:	blt	17de4 <flatcc_json_printer_uint16_enum_field@@Base+0x38>
   17dd0:	ldrb	ip, [r0, #29]
   17dd4:	cmp	ip, #0
   17dd8:	popeq	{r4, r5, r6, pc}
   17ddc:	mov	r6, lr
   17de0:	b	17e0c <flatcc_json_printer_uint16_enum_field@@Base+0x60>
   17de4:	ldr	r4, [r1, #4]
   17de8:	ldrh	ip, [r4, ip]
   17dec:	cmp	ip, #0
   17df0:	beq	17dd0 <flatcc_json_printer_uint16_enum_field@@Base+0x24>
   17df4:	ldr	r4, [r1]
   17df8:	cmn	r4, ip
   17dfc:	beq	17dd0 <flatcc_json_printer_uint16_enum_field@@Base+0x24>
   17e00:	ldrh	r6, [r4, ip]
   17e04:	cmp	lr, r6
   17e08:	beq	17e78 <flatcc_json_printer_uint16_enum_field@@Base+0xcc>
   17e0c:	ldr	ip, [r1, #16]
   17e10:	mov	r4, r0
   17e14:	cmp	ip, #0
   17e18:	add	ip, ip, #1
   17e1c:	str	ip, [r1, #16]
   17e20:	ldrne	r1, [r0, #20]
   17e24:	movne	ip, #44	; 0x2c
   17e28:	addne	lr, r1, #1
   17e2c:	strne	lr, [r0, #20]
   17e30:	strbne	ip, [r1]
   17e34:	mov	r1, r3
   17e38:	bl	14b4c <test_print@@Base+0x1378>
   17e3c:	ldrb	r3, [r4, #27]
   17e40:	cmp	r3, #0
   17e44:	bne	17e5c <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   17e48:	mov	r1, r6
   17e4c:	mov	r0, r4
   17e50:	mov	r3, r5
   17e54:	pop	{r4, r5, r6, lr}
   17e58:	bx	r3
   17e5c:	mov	r0, r6
   17e60:	ldr	r1, [r4, #20]
   17e64:	bl	13a60 <test_print@@Base+0x28c>
   17e68:	ldr	r3, [r4, #20]
   17e6c:	add	r0, r3, r0
   17e70:	str	r0, [r4, #20]
   17e74:	pop	{r4, r5, r6, pc}
   17e78:	ldrb	ip, [r0, #28]
   17e7c:	cmp	ip, #0
   17e80:	beq	17e0c <flatcc_json_printer_uint16_enum_field@@Base+0x60>
   17e84:	pop	{r4, r5, r6, pc}

00017e88 <flatcc_json_printer_uint32_enum_field@@Base>:
   17e88:	add	r2, r2, #2
   17e8c:	push	{r4, r5, r6, lr}
   17e90:	lsl	ip, r2, #1
   17e94:	ldr	lr, [r1, #8]
   17e98:	ldr	r2, [sp, #16]
   17e9c:	cmp	ip, lr
   17ea0:	ldr	r5, [sp, #24]
   17ea4:	ldr	lr, [sp, #20]
   17ea8:	blt	17ec0 <flatcc_json_printer_uint32_enum_field@@Base+0x38>
   17eac:	ldrb	ip, [r0, #29]
   17eb0:	cmp	ip, #0
   17eb4:	popeq	{r4, r5, r6, pc}
   17eb8:	mov	r6, lr
   17ebc:	b	17ee8 <flatcc_json_printer_uint32_enum_field@@Base+0x60>
   17ec0:	ldr	r4, [r1, #4]
   17ec4:	ldrh	ip, [r4, ip]
   17ec8:	cmp	ip, #0
   17ecc:	beq	17eac <flatcc_json_printer_uint32_enum_field@@Base+0x24>
   17ed0:	ldr	r4, [r1]
   17ed4:	cmn	r4, ip
   17ed8:	beq	17eac <flatcc_json_printer_uint32_enum_field@@Base+0x24>
   17edc:	ldr	r6, [r4, ip]
   17ee0:	cmp	lr, r6
   17ee4:	beq	17f54 <flatcc_json_printer_uint32_enum_field@@Base+0xcc>
   17ee8:	ldr	ip, [r1, #16]
   17eec:	mov	r4, r0
   17ef0:	cmp	ip, #0
   17ef4:	add	ip, ip, #1
   17ef8:	str	ip, [r1, #16]
   17efc:	ldrne	r1, [r0, #20]
   17f00:	movne	ip, #44	; 0x2c
   17f04:	addne	lr, r1, #1
   17f08:	strne	lr, [r0, #20]
   17f0c:	strbne	ip, [r1]
   17f10:	mov	r1, r3
   17f14:	bl	14b4c <test_print@@Base+0x1378>
   17f18:	ldrb	r3, [r4, #27]
   17f1c:	cmp	r3, #0
   17f20:	bne	17f38 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   17f24:	mov	r1, r6
   17f28:	mov	r0, r4
   17f2c:	mov	r3, r5
   17f30:	pop	{r4, r5, r6, lr}
   17f34:	bx	r3
   17f38:	mov	r0, r6
   17f3c:	ldr	r1, [r4, #20]
   17f40:	bl	13bc8 <test_print@@Base+0x3f4>
   17f44:	ldr	r3, [r4, #20]
   17f48:	add	r0, r3, r0
   17f4c:	str	r0, [r4, #20]
   17f50:	pop	{r4, r5, r6, pc}
   17f54:	ldrb	ip, [r0, #28]
   17f58:	cmp	ip, #0
   17f5c:	beq	17ee8 <flatcc_json_printer_uint32_enum_field@@Base+0x60>
   17f60:	pop	{r4, r5, r6, pc}

00017f64 <flatcc_json_printer_uint64_enum_field@@Base>:
   17f64:	add	r2, r2, #2
   17f68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17f6c:	lsl	ip, r2, #1
   17f70:	ldr	lr, [r1, #8]
   17f74:	ldr	r2, [sp, #32]
   17f78:	cmp	ip, lr
   17f7c:	ldrd	r8, [sp, #40]	; 0x28
   17f80:	ldr	r5, [sp, #48]	; 0x30
   17f84:	blt	17fa0 <flatcc_json_printer_uint64_enum_field@@Base+0x3c>
   17f88:	ldrb	ip, [r0, #29]
   17f8c:	cmp	ip, #0
   17f90:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f94:	mov	r6, r8
   17f98:	mov	r7, r9
   17f9c:	b	17fcc <flatcc_json_printer_uint64_enum_field@@Base+0x68>
   17fa0:	ldr	lr, [r1, #4]
   17fa4:	ldrh	ip, [lr, ip]
   17fa8:	cmp	ip, #0
   17fac:	beq	17f88 <flatcc_json_printer_uint64_enum_field@@Base+0x24>
   17fb0:	ldr	lr, [r1]
   17fb4:	cmn	lr, ip
   17fb8:	beq	17f88 <flatcc_json_printer_uint64_enum_field@@Base+0x24>
   17fbc:	ldrd	r6, [lr, ip]
   17fc0:	cmp	r9, r7
   17fc4:	cmpeq	r8, r6
   17fc8:	beq	18040 <flatcc_json_printer_uint64_enum_field@@Base+0xdc>
   17fcc:	ldr	ip, [r1, #16]
   17fd0:	mov	r4, r0
   17fd4:	cmp	ip, #0
   17fd8:	add	ip, ip, #1
   17fdc:	str	ip, [r1, #16]
   17fe0:	ldrne	r1, [r0, #20]
   17fe4:	movne	ip, #44	; 0x2c
   17fe8:	addne	lr, r1, #1
   17fec:	strne	lr, [r0, #20]
   17ff0:	strbne	ip, [r1]
   17ff4:	mov	r1, r3
   17ff8:	bl	14b4c <test_print@@Base+0x1378>
   17ffc:	ldrb	r3, [r4, #27]
   18000:	cmp	r3, #0
   18004:	bne	18020 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   18008:	mov	r2, r6
   1800c:	mov	r3, r7
   18010:	mov	r0, r4
   18014:	mov	r1, r5
   18018:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1801c:	bx	r1
   18020:	mov	r0, r6
   18024:	mov	r1, r7
   18028:	ldr	r2, [r4, #20]
   1802c:	bl	13ef0 <test_print@@Base+0x71c>
   18030:	ldr	r3, [r4, #20]
   18034:	add	r0, r3, r0
   18038:	str	r0, [r4, #20]
   1803c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18040:	ldrb	ip, [r0, #28]
   18044:	cmp	ip, #0
   18048:	beq	17fcc <flatcc_json_printer_uint64_enum_field@@Base+0x68>
   1804c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00018050 <flatcc_json_printer_int8_enum_field@@Base>:
   18050:	add	r2, r2, #2
   18054:	push	{r4, r5, r6, lr}
   18058:	lsl	ip, r2, #1
   1805c:	ldr	lr, [r1, #8]
   18060:	ldr	r2, [sp, #16]
   18064:	cmp	ip, lr
   18068:	ldr	r6, [sp, #24]
   1806c:	ldrsb	lr, [sp, #20]
   18070:	blt	18088 <flatcc_json_printer_int8_enum_field@@Base+0x38>
   18074:	ldrb	ip, [r0, #29]
   18078:	cmp	ip, #0
   1807c:	popeq	{r4, r5, r6, pc}
   18080:	mov	r4, lr
   18084:	b	180b0 <flatcc_json_printer_int8_enum_field@@Base+0x60>
   18088:	ldr	r4, [r1, #4]
   1808c:	ldrh	ip, [r4, ip]
   18090:	cmp	ip, #0
   18094:	beq	18074 <flatcc_json_printer_int8_enum_field@@Base+0x24>
   18098:	ldr	r4, [r1]
   1809c:	cmn	r4, ip
   180a0:	beq	18074 <flatcc_json_printer_int8_enum_field@@Base+0x24>
   180a4:	ldrsb	r4, [r4, ip]
   180a8:	cmp	lr, r4
   180ac:	beq	18188 <flatcc_json_printer_int8_enum_field@@Base+0x138>
   180b0:	ldr	ip, [r1, #16]
   180b4:	mov	r5, r0
   180b8:	cmp	ip, #0
   180bc:	add	ip, ip, #1
   180c0:	str	ip, [r1, #16]
   180c4:	ldrne	r1, [r0, #20]
   180c8:	movne	ip, #44	; 0x2c
   180cc:	addne	lr, r1, #1
   180d0:	strne	lr, [r0, #20]
   180d4:	strbne	ip, [r1]
   180d8:	mov	r1, r3
   180dc:	bl	14b4c <test_print@@Base+0x1378>
   180e0:	ldrb	r3, [r5, #27]
   180e4:	cmp	r3, #0
   180e8:	beq	18174 <flatcc_json_printer_int8_enum_field@@Base+0x124>
   180ec:	cmp	r4, #0
   180f0:	lsr	r1, r4, #31
   180f4:	rsblt	r4, r4, #0
   180f8:	ldr	r3, [r5, #20]
   180fc:	sxtblt	r4, r4
   18100:	movlt	r2, #45	; 0x2d
   18104:	uxtb	r4, r4
   18108:	strblt	r2, [r3]
   1810c:	addlt	r3, r3, #1
   18110:	cmp	r4, #99	; 0x63
   18114:	bls	18198 <flatcc_json_printer_int8_enum_field@@Base+0x148>
   18118:	ldr	r2, [pc, #196]	; 181e4 <flatcc_json_printer_int8_enum_field@@Base+0x194>
   1811c:	mov	ip, #100	; 0x64
   18120:	ldr	r0, [pc, #192]	; 181e8 <flatcc_json_printer_int8_enum_field@@Base+0x198>
   18124:	umull	lr, r2, r2, r4
   18128:	mov	lr, #0
   1812c:	lsr	r2, r2, #5
   18130:	strb	lr, [r3, #3]
   18134:	mul	r2, ip, r2
   18138:	mov	ip, #49	; 0x31
   1813c:	sub	r4, r4, r2
   18140:	mov	r2, #3
   18144:	uxtb	r4, r4
   18148:	ldrb	lr, [r0, r4, lsl #1]
   1814c:	add	r4, r0, r4, lsl #1
   18150:	strb	lr, [r3, #1]
   18154:	ldrb	r0, [r4, #1]
   18158:	strb	ip, [r3]
   1815c:	strb	r0, [r3, #2]
   18160:	ldr	r3, [r5, #20]
   18164:	add	r2, r1, r2
   18168:	add	r3, r3, r2
   1816c:	str	r3, [r5, #20]
   18170:	pop	{r4, r5, r6, pc}
   18174:	mov	r1, r4
   18178:	mov	r0, r5
   1817c:	mov	r3, r6
   18180:	pop	{r4, r5, r6, lr}
   18184:	bx	r3
   18188:	ldrb	ip, [r0, #28]
   1818c:	cmp	ip, #0
   18190:	beq	180b0 <flatcc_json_printer_int8_enum_field@@Base+0x60>
   18194:	pop	{r4, r5, r6, pc}
   18198:	cmp	r4, #9
   1819c:	bls	181cc <flatcc_json_printer_int8_enum_field@@Base+0x17c>
   181a0:	ldr	r2, [pc, #64]	; 181e8 <flatcc_json_printer_int8_enum_field@@Base+0x198>
   181a4:	sxth	r4, r4
   181a8:	mov	r0, #0
   181ac:	strb	r0, [r3, #2]
   181b0:	ldrb	r0, [r2, r4, lsl #1]
   181b4:	add	r4, r2, r4, lsl #1
   181b8:	mov	r2, #2
   181bc:	strb	r0, [r3]
   181c0:	ldrb	r0, [r4, #1]
   181c4:	strb	r0, [r3, #1]
   181c8:	b	18160 <flatcc_json_printer_int8_enum_field@@Base+0x110>
   181cc:	add	r4, r4, #48	; 0x30
   181d0:	mov	r0, #0
   181d4:	mov	r2, #1
   181d8:	strb	r4, [r3]
   181dc:	strb	r0, [r3, #1]
   181e0:	b	18160 <flatcc_json_printer_int8_enum_field@@Base+0x110>
   181e4:	mvnpl	r8, pc, lsl r5
   181e8:	andeq	r1, r2, r8, ror #12

000181ec <flatcc_json_printer_int16_enum_field@@Base>:
   181ec:	add	r2, r2, #2
   181f0:	push	{r4, r5, r6, lr}
   181f4:	lsl	ip, r2, #1
   181f8:	ldr	lr, [r1, #8]
   181fc:	ldr	r2, [sp, #16]
   18200:	cmp	ip, lr
   18204:	ldr	r5, [sp, #24]
   18208:	ldrsh	lr, [sp, #20]
   1820c:	blt	18224 <flatcc_json_printer_int16_enum_field@@Base+0x38>
   18210:	ldrb	ip, [r0, #29]
   18214:	cmp	ip, #0
   18218:	popeq	{r4, r5, r6, pc}
   1821c:	mov	r6, lr
   18220:	b	1824c <flatcc_json_printer_int16_enum_field@@Base+0x60>
   18224:	ldr	r4, [r1, #4]
   18228:	ldrh	ip, [r4, ip]
   1822c:	cmp	ip, #0
   18230:	beq	18210 <flatcc_json_printer_int16_enum_field@@Base+0x24>
   18234:	ldr	r4, [r1]
   18238:	cmn	r4, ip
   1823c:	beq	18210 <flatcc_json_printer_int16_enum_field@@Base+0x24>
   18240:	ldrsh	r6, [r4, ip]
   18244:	cmp	lr, r6
   18248:	beq	182d8 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   1824c:	ldr	ip, [r1, #16]
   18250:	mov	r4, r0
   18254:	cmp	ip, #0
   18258:	add	ip, ip, #1
   1825c:	str	ip, [r1, #16]
   18260:	ldrne	r1, [r0, #20]
   18264:	movne	ip, #44	; 0x2c
   18268:	addne	lr, r1, #1
   1826c:	strne	lr, [r0, #20]
   18270:	strbne	ip, [r1]
   18274:	mov	r1, r3
   18278:	bl	14b4c <test_print@@Base+0x1378>
   1827c:	ldrb	r3, [r4, #27]
   18280:	cmp	r3, #0
   18284:	beq	182c4 <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   18288:	cmp	r6, #0
   1828c:	lsr	r5, r6, #31
   18290:	rsblt	r6, r6, #0
   18294:	ldr	r1, [r4, #20]
   18298:	sxthlt	r6, r6
   1829c:	movlt	r3, #45	; 0x2d
   182a0:	strblt	r3, [r1]
   182a4:	uxth	r0, r6
   182a8:	addlt	r1, r1, #1
   182ac:	bl	13a60 <test_print@@Base+0x28c>
   182b0:	ldr	r3, [r4, #20]
   182b4:	add	r0, r5, r0
   182b8:	add	r3, r3, r0
   182bc:	str	r3, [r4, #20]
   182c0:	pop	{r4, r5, r6, pc}
   182c4:	mov	r1, r6
   182c8:	mov	r0, r4
   182cc:	mov	r3, r5
   182d0:	pop	{r4, r5, r6, lr}
   182d4:	bx	r3
   182d8:	ldrb	ip, [r0, #28]
   182dc:	cmp	ip, #0
   182e0:	beq	1824c <flatcc_json_printer_int16_enum_field@@Base+0x60>
   182e4:	pop	{r4, r5, r6, pc}

000182e8 <flatcc_json_printer_int32_enum_field@@Base>:
   182e8:	add	r2, r2, #2
   182ec:	push	{r4, r5, r6, lr}
   182f0:	lsl	ip, r2, #1
   182f4:	ldr	lr, [r1, #8]
   182f8:	ldr	r2, [sp, #16]
   182fc:	cmp	ip, lr
   18300:	ldr	r5, [sp, #24]
   18304:	ldr	lr, [sp, #20]
   18308:	blt	18320 <flatcc_json_printer_int32_enum_field@@Base+0x38>
   1830c:	ldrb	ip, [r0, #29]
   18310:	cmp	ip, #0
   18314:	popeq	{r4, r5, r6, pc}
   18318:	mov	r6, lr
   1831c:	b	18348 <flatcc_json_printer_int32_enum_field@@Base+0x60>
   18320:	ldr	r4, [r1, #4]
   18324:	ldrh	ip, [r4, ip]
   18328:	cmp	ip, #0
   1832c:	beq	1830c <flatcc_json_printer_int32_enum_field@@Base+0x24>
   18330:	ldr	r4, [r1]
   18334:	cmn	r4, ip
   18338:	beq	1830c <flatcc_json_printer_int32_enum_field@@Base+0x24>
   1833c:	ldr	r6, [r4, ip]
   18340:	cmp	lr, r6
   18344:	beq	183d0 <flatcc_json_printer_int32_enum_field@@Base+0xe8>
   18348:	ldr	ip, [r1, #16]
   1834c:	mov	r4, r0
   18350:	cmp	ip, #0
   18354:	add	ip, ip, #1
   18358:	str	ip, [r1, #16]
   1835c:	ldrne	r1, [r0, #20]
   18360:	movne	ip, #44	; 0x2c
   18364:	addne	lr, r1, #1
   18368:	strne	lr, [r0, #20]
   1836c:	strbne	ip, [r1]
   18370:	mov	r1, r3
   18374:	bl	14b4c <test_print@@Base+0x1378>
   18378:	ldrb	r3, [r4, #27]
   1837c:	cmp	r3, #0
   18380:	beq	183bc <flatcc_json_printer_int32_enum_field@@Base+0xd4>
   18384:	ldr	r1, [r4, #20]
   18388:	cmp	r6, #0
   1838c:	movlt	r3, #45	; 0x2d
   18390:	lsr	r5, r6, #31
   18394:	rsblt	r6, r6, #0
   18398:	strblt	r3, [r1]
   1839c:	mov	r0, r6
   183a0:	addlt	r1, r1, #1
   183a4:	bl	13bc8 <test_print@@Base+0x3f4>
   183a8:	ldr	r3, [r4, #20]
   183ac:	add	r0, r5, r0
   183b0:	add	r3, r3, r0
   183b4:	str	r3, [r4, #20]
   183b8:	pop	{r4, r5, r6, pc}
   183bc:	mov	r1, r6
   183c0:	mov	r0, r4
   183c4:	mov	r3, r5
   183c8:	pop	{r4, r5, r6, lr}
   183cc:	bx	r3
   183d0:	ldrb	ip, [r0, #28]
   183d4:	cmp	ip, #0
   183d8:	beq	18348 <flatcc_json_printer_int32_enum_field@@Base+0x60>
   183dc:	pop	{r4, r5, r6, pc}

000183e0 <flatcc_json_printer_int64_enum_field@@Base>:
   183e0:	add	r2, r2, #2
   183e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   183e8:	lsl	ip, r2, #1
   183ec:	ldr	lr, [r1, #8]
   183f0:	ldr	r2, [sp, #32]
   183f4:	cmp	ip, lr
   183f8:	ldrd	r8, [sp, #40]	; 0x28
   183fc:	ldr	r5, [sp, #48]	; 0x30
   18400:	blt	1841c <flatcc_json_printer_int64_enum_field@@Base+0x3c>
   18404:	ldrb	ip, [r0, #29]
   18408:	cmp	ip, #0
   1840c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18410:	mov	r6, r8
   18414:	mov	r7, r9
   18418:	b	18448 <flatcc_json_printer_int64_enum_field@@Base+0x68>
   1841c:	ldr	lr, [r1, #4]
   18420:	ldrh	ip, [lr, ip]
   18424:	cmp	ip, #0
   18428:	beq	18404 <flatcc_json_printer_int64_enum_field@@Base+0x24>
   1842c:	ldr	lr, [r1]
   18430:	cmn	lr, ip
   18434:	beq	18404 <flatcc_json_printer_int64_enum_field@@Base+0x24>
   18438:	ldrd	r6, [lr, ip]
   1843c:	cmp	r9, r7
   18440:	cmpeq	r8, r6
   18444:	beq	184e4 <flatcc_json_printer_int64_enum_field@@Base+0x104>
   18448:	ldr	ip, [r1, #16]
   1844c:	mov	r4, r0
   18450:	cmp	ip, #0
   18454:	add	ip, ip, #1
   18458:	str	ip, [r1, #16]
   1845c:	ldrne	r1, [r0, #20]
   18460:	movne	ip, #44	; 0x2c
   18464:	addne	lr, r1, #1
   18468:	strne	lr, [r0, #20]
   1846c:	strbne	ip, [r1]
   18470:	mov	r1, r3
   18474:	bl	14b4c <test_print@@Base+0x1378>
   18478:	ldrb	r3, [r4, #27]
   1847c:	cmp	r3, #0
   18480:	beq	184cc <flatcc_json_printer_int64_enum_field@@Base+0xec>
   18484:	cmp	r6, #0
   18488:	sbcs	r3, r7, #0
   1848c:	ldr	r2, [r4, #20]
   18490:	lsr	r5, r7, #31
   18494:	bge	184ac <flatcc_json_printer_int64_enum_field@@Base+0xcc>
   18498:	mov	r3, #45	; 0x2d
   1849c:	rsbs	r6, r6, #0
   184a0:	strb	r3, [r2]
   184a4:	rsc	r7, r7, #0
   184a8:	add	r2, r2, #1
   184ac:	mov	r0, r6
   184b0:	mov	r1, r7
   184b4:	bl	13ef0 <test_print@@Base+0x71c>
   184b8:	ldr	r3, [r4, #20]
   184bc:	add	r0, r5, r0
   184c0:	add	r3, r3, r0
   184c4:	str	r3, [r4, #20]
   184c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   184cc:	mov	r2, r6
   184d0:	mov	r3, r7
   184d4:	mov	r0, r4
   184d8:	mov	r1, r5
   184dc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   184e0:	bx	r1
   184e4:	ldrb	ip, [r0, #28]
   184e8:	cmp	ip, #0
   184ec:	beq	18448 <flatcc_json_printer_int64_enum_field@@Base+0x68>
   184f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000184f4 <flatcc_json_printer_bool_enum_field@@Base>:
   184f4:	add	r2, r2, #2
   184f8:	push	{r4, r5, r6, lr}
   184fc:	lsl	ip, r2, #1
   18500:	ldr	lr, [r1, #8]
   18504:	ldr	r2, [sp, #16]
   18508:	cmp	ip, lr
   1850c:	ldr	r5, [sp, #24]
   18510:	ldrb	lr, [sp, #20]
   18514:	blt	1852c <flatcc_json_printer_bool_enum_field@@Base+0x38>
   18518:	ldrb	ip, [r0, #29]
   1851c:	cmp	ip, #0
   18520:	popeq	{r4, r5, r6, pc}
   18524:	mov	r6, lr
   18528:	b	18554 <flatcc_json_printer_bool_enum_field@@Base+0x60>
   1852c:	ldr	r4, [r1, #4]
   18530:	ldrh	ip, [r4, ip]
   18534:	cmp	ip, #0
   18538:	beq	18518 <flatcc_json_printer_bool_enum_field@@Base+0x24>
   1853c:	ldr	r4, [r1]
   18540:	cmn	r4, ip
   18544:	beq	18518 <flatcc_json_printer_bool_enum_field@@Base+0x24>
   18548:	ldrb	r6, [r4, ip]
   1854c:	cmp	lr, r6
   18550:	beq	185dc <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   18554:	ldr	ip, [r1, #16]
   18558:	mov	r4, r0
   1855c:	cmp	ip, #0
   18560:	add	ip, ip, #1
   18564:	str	ip, [r1, #16]
   18568:	ldrne	r1, [r0, #20]
   1856c:	movne	ip, #44	; 0x2c
   18570:	addne	lr, r1, #1
   18574:	strne	lr, [r0, #20]
   18578:	strbne	ip, [r1]
   1857c:	mov	r1, r3
   18580:	bl	14b4c <test_print@@Base+0x1378>
   18584:	ldrb	r3, [r4, #27]
   18588:	cmp	r3, #0
   1858c:	bne	185a4 <flatcc_json_printer_bool_enum_field@@Base+0xb0>
   18590:	mov	r1, r6
   18594:	mov	r0, r4
   18598:	mov	r3, r5
   1859c:	pop	{r4, r5, r6, lr}
   185a0:	bx	r3
   185a4:	cmp	r6, #0
   185a8:	ldr	r3, [pc, #84]	; 18604 <flatcc_json_printer_bool_enum_field@@Base+0x110>
   185ac:	ldr	r2, [r4, #20]
   185b0:	bne	185ec <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   185b4:	add	ip, r3, #1792	; 0x700
   185b8:	ldr	r0, [r3, #1792]	; 0x700
   185bc:	ldrh	r3, [ip, #4]
   185c0:	mov	r1, #5
   185c4:	str	r0, [r2]
   185c8:	strh	r3, [r2, #4]
   185cc:	ldr	r3, [r4, #20]
   185d0:	add	r3, r3, r1
   185d4:	str	r3, [r4, #20]
   185d8:	pop	{r4, r5, r6, pc}
   185dc:	ldrb	ip, [r0, #28]
   185e0:	cmp	ip, #0
   185e4:	beq	18554 <flatcc_json_printer_bool_enum_field@@Base+0x60>
   185e8:	pop	{r4, r5, r6, pc}
   185ec:	ldrb	ip, [r3, #1788]	; 0x6fc
   185f0:	ldr	r0, [r3, #1784]	; 0x6f8
   185f4:	mov	r1, #4
   185f8:	strb	ip, [r2, #4]
   185fc:	str	r0, [r2]
   18600:	b	185cc <flatcc_json_printer_bool_enum_field@@Base+0xd8>
   18604:	andeq	r1, r2, r8, ror #12

00018608 <flatcc_json_printer_uint8_struct_field@@Base>:
   18608:	cmp	r1, #0
   1860c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18610:	mov	r4, r0
   18614:	ldrb	r8, [r2, r3]
   18618:	ldrne	r3, [r0, #20]
   1861c:	movne	r2, #44	; 0x2c
   18620:	addne	r1, r3, #1
   18624:	strne	r1, [r0, #20]
   18628:	strbne	r2, [r3]
   1862c:	ldrb	r1, [r0, #25]
   18630:	ldr	r9, [sp, #44]	; 0x2c
   18634:	ldr	r6, [sp, #40]	; 0x28
   18638:	cmp	r1, #0
   1863c:	mov	r7, r9
   18640:	bne	18804 <flatcc_json_printer_uint8_struct_field@@Base+0x1fc>
   18644:	ldr	r5, [r0, #20]
   18648:	ldr	r3, [r0, #16]
   1864c:	cmp	r5, r3
   18650:	bcs	187a4 <flatcc_json_printer_uint8_struct_field@@Base+0x19c>
   18654:	mov	r3, #34	; 0x22
   18658:	strb	r3, [r5]
   1865c:	ldrb	r3, [r4, #26]
   18660:	ldr	r0, [r4, #20]
   18664:	ldr	r5, [r4, #16]
   18668:	cmp	r3, #0
   1866c:	addeq	r0, r0, #1
   18670:	add	r3, r0, r9
   18674:	cmp	r5, r3
   18678:	str	r0, [r4, #20]
   1867c:	bhi	187b4 <flatcc_json_printer_uint8_struct_field@@Base+0x1ac>
   18680:	cmp	r0, r5
   18684:	bcs	188b0 <flatcc_json_printer_uint8_struct_field@@Base+0x2a8>
   18688:	sub	r5, r5, r0
   1868c:	cmp	r9, r5
   18690:	bls	186dc <flatcc_json_printer_uint8_struct_field@@Base+0xd4>
   18694:	mov	r9, #0
   18698:	mov	r2, r5
   1869c:	mov	r1, r6
   186a0:	bl	1244c <memcpy@plt>
   186a4:	ldr	r3, [r4, #20]
   186a8:	mov	r0, r4
   186ac:	add	r3, r3, r5
   186b0:	str	r3, [r4, #20]
   186b4:	ldr	r2, [r4, #44]	; 0x2c
   186b8:	mov	r1, r9
   186bc:	blx	r2
   186c0:	ldr	r0, [r4, #20]
   186c4:	ldr	r3, [r4, #16]
   186c8:	sub	r7, r7, r5
   186cc:	add	r6, r6, r5
   186d0:	sub	r5, r3, r0
   186d4:	cmp	r7, r5
   186d8:	bhi	18698 <flatcc_json_printer_uint8_struct_field@@Base+0x90>
   186dc:	mov	r1, r6
   186e0:	mov	r2, r7
   186e4:	bl	1244c <memcpy@plt>
   186e8:	ldr	r9, [r4, #20]
   186ec:	add	r9, r9, r7
   186f0:	str	r9, [r4, #20]
   186f4:	mov	r3, #34	; 0x22
   186f8:	strb	r3, [r9]
   186fc:	ldr	r1, [r4, #20]
   18700:	ldrb	r3, [r4, #26]
   18704:	clz	r3, r3
   18708:	lsr	r3, r3, #5
   1870c:	add	r2, r1, r3
   18710:	add	r2, r2, #1
   18714:	mov	r0, #58	; 0x3a
   18718:	str	r2, [r4, #20]
   1871c:	strb	r0, [r1, r3]
   18720:	ldr	r3, [r4, #20]
   18724:	mov	r2, #32
   18728:	strb	r2, [r3]
   1872c:	ldrb	r1, [r4, #25]
   18730:	ldr	ip, [r4, #20]
   18734:	adds	r1, r1, #0
   18738:	movne	r1, #1
   1873c:	add	r0, ip, r1
   18740:	cmp	r8, #99	; 0x63
   18744:	str	r0, [r4, #20]
   18748:	bls	187d0 <flatcc_json_printer_uint8_struct_field@@Base+0x1c8>
   1874c:	ldr	r3, [pc, #428]	; 18900 <flatcc_json_printer_uint8_struct_field@@Base+0x2f8>
   18750:	mov	r2, #100	; 0x64
   18754:	ldr	lr, [pc, #424]	; 18904 <flatcc_json_printer_uint8_struct_field@@Base+0x2fc>
   18758:	umull	r5, r3, r3, r8
   1875c:	mov	r5, #0
   18760:	lsr	r3, r3, #5
   18764:	strb	r5, [r0, #3]
   18768:	mul	r2, r2, r3
   1876c:	add	r3, r3, #48	; 0x30
   18770:	sub	r8, r8, r2
   18774:	mov	r2, #3
   18778:	uxtb	r8, r8
   1877c:	ldrb	r5, [lr, r8, lsl #1]
   18780:	add	r8, lr, r8, lsl #1
   18784:	strb	r5, [r0, #1]
   18788:	ldrb	lr, [r8, #1]
   1878c:	strb	lr, [r0, #2]
   18790:	strb	r3, [ip, r1]
   18794:	ldr	r3, [r4, #20]
   18798:	add	r3, r3, r2
   1879c:	str	r3, [r4, #20]
   187a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187a4:	ldr	r3, [r0, #44]	; 0x2c
   187a8:	blx	r3
   187ac:	ldr	r5, [r4, #20]
   187b0:	b	18654 <flatcc_json_printer_uint8_struct_field@@Base+0x4c>
   187b4:	mov	r2, r9
   187b8:	mov	r1, r6
   187bc:	bl	1244c <memcpy@plt>
   187c0:	ldr	r7, [r4, #20]
   187c4:	add	r9, r7, r9
   187c8:	str	r9, [r4, #20]
   187cc:	b	186f4 <flatcc_json_printer_uint8_struct_field@@Base+0xec>
   187d0:	cmp	r8, #9
   187d4:	bls	188cc <flatcc_json_printer_uint8_struct_field@@Base+0x2c4>
   187d8:	ldr	r3, [pc, #292]	; 18904 <flatcc_json_printer_uint8_struct_field@@Base+0x2fc>
   187dc:	sxth	r8, r8
   187e0:	mov	r2, #0
   187e4:	strb	r2, [r0, #2]
   187e8:	ldrb	lr, [r3, r8, lsl #1]
   187ec:	add	r3, r3, r8, lsl #1
   187f0:	mov	r2, #2
   187f4:	strb	lr, [ip, r1]
   187f8:	ldrb	r3, [r3, #1]
   187fc:	strb	r3, [r0, #1]
   18800:	b	18794 <flatcc_json_printer_uint8_struct_field@@Base+0x18c>
   18804:	ldr	r3, [r0, #20]
   18808:	mov	r2, #10
   1880c:	add	r1, r3, #1
   18810:	str	r1, [r0, #20]
   18814:	strb	r2, [r3]
   18818:	ldrb	r2, [r0, #25]
   1881c:	ldr	r5, [r0, #32]
   18820:	ldr	r0, [r0, #20]
   18824:	ldr	r3, [r4, #16]
   18828:	mul	r5, r5, r2
   1882c:	add	r2, r0, r5
   18830:	cmp	r3, r2
   18834:	bcc	18854 <flatcc_json_printer_uint8_struct_field@@Base+0x24c>
   18838:	mov	r2, r5
   1883c:	mov	r1, #32
   18840:	bl	124e8 <memset@plt>
   18844:	ldr	r3, [r4, #20]
   18848:	add	r5, r3, r5
   1884c:	str	r5, [r4, #20]
   18850:	b	18654 <flatcc_json_printer_uint8_struct_field@@Base+0x4c>
   18854:	cmp	r0, r3
   18858:	bcs	188e4 <flatcc_json_printer_uint8_struct_field@@Base+0x2dc>
   1885c:	sub	sl, r3, r0
   18860:	cmp	r5, sl
   18864:	bls	18838 <flatcc_json_printer_uint8_struct_field@@Base+0x230>
   18868:	mov	fp, #32
   1886c:	mov	r2, sl
   18870:	mov	r1, fp
   18874:	bl	124e8 <memset@plt>
   18878:	ldr	r1, [r4, #20]
   1887c:	ldr	r2, [r4, #44]	; 0x2c
   18880:	add	r1, r1, sl
   18884:	str	r1, [r4, #20]
   18888:	mov	r0, r4
   1888c:	mov	r1, #0
   18890:	blx	r2
   18894:	ldr	r0, [r4, #20]
   18898:	ldr	r2, [r4, #16]
   1889c:	sub	r5, r5, sl
   188a0:	sub	sl, r2, r0
   188a4:	cmp	r5, sl
   188a8:	bhi	1886c <flatcc_json_printer_uint8_struct_field@@Base+0x264>
   188ac:	b	18838 <flatcc_json_printer_uint8_struct_field@@Base+0x230>
   188b0:	mov	r0, r4
   188b4:	ldr	r3, [r4, #44]	; 0x2c
   188b8:	mov	r1, #0
   188bc:	blx	r3
   188c0:	ldr	r5, [r4, #16]
   188c4:	ldr	r0, [r4, #20]
   188c8:	b	18688 <flatcc_json_printer_uint8_struct_field@@Base+0x80>
   188cc:	add	r8, r8, #48	; 0x30
   188d0:	mov	r3, #0
   188d4:	strb	r3, [r0, #1]
   188d8:	mov	r2, #1
   188dc:	strb	r8, [ip, r1]
   188e0:	b	18794 <flatcc_json_printer_uint8_struct_field@@Base+0x18c>
   188e4:	ldr	r3, [r4, #44]	; 0x2c
   188e8:	mov	r0, r4
   188ec:	mov	r1, #0
   188f0:	blx	r3
   188f4:	ldr	r3, [r4, #16]
   188f8:	ldr	r0, [r4, #20]
   188fc:	b	1885c <flatcc_json_printer_uint8_struct_field@@Base+0x254>
   18900:	mvnpl	r8, pc, lsl r5
   18904:	andeq	r1, r2, r8, ror #12

00018908 <flatcc_json_printer_uint16_struct_field@@Base>:
   18908:	cmp	r1, #0
   1890c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18910:	mov	r4, r0
   18914:	ldrh	r8, [r2, r3]
   18918:	ldrne	r3, [r0, #20]
   1891c:	movne	r2, #44	; 0x2c
   18920:	addne	r1, r3, #1
   18924:	strne	r1, [r0, #20]
   18928:	strbne	r2, [r3]
   1892c:	ldrb	r1, [r0, #25]
   18930:	ldr	r9, [sp, #36]	; 0x24
   18934:	ldr	r6, [sp, #32]
   18938:	cmp	r1, #0
   1893c:	mov	r7, r9
   18940:	ldr	r3, [r0, #20]
   18944:	bne	18a84 <flatcc_json_printer_uint16_struct_field@@Base+0x17c>
   18948:	ldr	r2, [r0, #16]
   1894c:	cmp	r3, r2
   18950:	bcs	18a58 <flatcc_json_printer_uint16_struct_field@@Base+0x150>
   18954:	mov	r2, #34	; 0x22
   18958:	strb	r2, [r3]
   1895c:	ldrb	r3, [r4, #26]
   18960:	ldr	r0, [r4, #20]
   18964:	ldr	r5, [r4, #16]
   18968:	cmp	r3, #0
   1896c:	addeq	r0, r0, #1
   18970:	add	r3, r0, r9
   18974:	cmp	r5, r3
   18978:	str	r0, [r4, #20]
   1897c:	bhi	18a68 <flatcc_json_printer_uint16_struct_field@@Base+0x160>
   18980:	cmp	r0, r5
   18984:	bcs	18aa0 <flatcc_json_printer_uint16_struct_field@@Base+0x198>
   18988:	sub	r5, r5, r0
   1898c:	cmp	r9, r5
   18990:	bls	189dc <flatcc_json_printer_uint16_struct_field@@Base+0xd4>
   18994:	mov	r9, #0
   18998:	mov	r2, r5
   1899c:	mov	r1, r6
   189a0:	bl	1244c <memcpy@plt>
   189a4:	ldr	r3, [r4, #20]
   189a8:	mov	r0, r4
   189ac:	add	r3, r3, r5
   189b0:	str	r3, [r4, #20]
   189b4:	ldr	r2, [r4, #44]	; 0x2c
   189b8:	mov	r1, r9
   189bc:	blx	r2
   189c0:	ldr	r0, [r4, #20]
   189c4:	ldr	r3, [r4, #16]
   189c8:	sub	r7, r7, r5
   189cc:	add	r6, r6, r5
   189d0:	sub	r5, r3, r0
   189d4:	cmp	r7, r5
   189d8:	bhi	18998 <flatcc_json_printer_uint16_struct_field@@Base+0x90>
   189dc:	mov	r1, r6
   189e0:	mov	r2, r7
   189e4:	bl	1244c <memcpy@plt>
   189e8:	ldr	r9, [r4, #20]
   189ec:	add	r9, r9, r7
   189f0:	str	r9, [r4, #20]
   189f4:	mov	r3, #34	; 0x22
   189f8:	strb	r3, [r9]
   189fc:	ldr	r1, [r4, #20]
   18a00:	ldrb	r3, [r4, #26]
   18a04:	clz	r3, r3
   18a08:	lsr	r3, r3, #5
   18a0c:	add	r2, r1, r3
   18a10:	add	r2, r2, #1
   18a14:	mov	r0, #58	; 0x3a
   18a18:	str	r2, [r4, #20]
   18a1c:	strb	r0, [r1, r3]
   18a20:	ldr	r3, [r4, #20]
   18a24:	mov	r2, #32
   18a28:	mov	r0, r8
   18a2c:	strb	r2, [r3]
   18a30:	ldrb	r3, [r4, #25]
   18a34:	ldr	r1, [r4, #20]
   18a38:	cmp	r3, #0
   18a3c:	addne	r1, r1, #1
   18a40:	str	r1, [r4, #20]
   18a44:	bl	13a60 <test_print@@Base+0x28c>
   18a48:	ldr	r3, [r4, #20]
   18a4c:	add	r0, r3, r0
   18a50:	str	r0, [r4, #20]
   18a54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a58:	ldr	r3, [r0, #44]	; 0x2c
   18a5c:	blx	r3
   18a60:	ldr	r3, [r4, #20]
   18a64:	b	18954 <flatcc_json_printer_uint16_struct_field@@Base+0x4c>
   18a68:	mov	r2, r9
   18a6c:	mov	r1, r6
   18a70:	bl	1244c <memcpy@plt>
   18a74:	ldr	r7, [r4, #20]
   18a78:	add	r9, r7, r9
   18a7c:	str	r9, [r4, #20]
   18a80:	b	189f4 <flatcc_json_printer_uint16_struct_field@@Base+0xec>
   18a84:	add	r1, r3, #1
   18a88:	mov	r2, #10
   18a8c:	str	r1, [r0, #20]
   18a90:	strb	r2, [r3]
   18a94:	bl	145ac <test_print@@Base+0xdd8>
   18a98:	ldr	r3, [r4, #20]
   18a9c:	b	18954 <flatcc_json_printer_uint16_struct_field@@Base+0x4c>
   18aa0:	mov	r0, r4
   18aa4:	ldr	r3, [r4, #44]	; 0x2c
   18aa8:	mov	r1, #0
   18aac:	blx	r3
   18ab0:	ldr	r5, [r4, #16]
   18ab4:	ldr	r0, [r4, #20]
   18ab8:	b	18988 <flatcc_json_printer_uint16_struct_field@@Base+0x80>

00018abc <flatcc_json_printer_uint32_struct_field@@Base>:
   18abc:	cmp	r1, #0
   18ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18ac4:	mov	r4, r0
   18ac8:	ldr	r8, [r2, r3]
   18acc:	ldrne	r3, [r0, #20]
   18ad0:	movne	r2, #44	; 0x2c
   18ad4:	addne	r1, r3, #1
   18ad8:	strne	r1, [r0, #20]
   18adc:	strbne	r2, [r3]
   18ae0:	ldrb	r1, [r0, #25]
   18ae4:	ldr	r9, [sp, #36]	; 0x24
   18ae8:	ldr	r6, [sp, #32]
   18aec:	cmp	r1, #0
   18af0:	mov	r7, r9
   18af4:	ldr	r3, [r0, #20]
   18af8:	bne	18c38 <flatcc_json_printer_uint32_struct_field@@Base+0x17c>
   18afc:	ldr	r2, [r0, #16]
   18b00:	cmp	r3, r2
   18b04:	bcs	18c0c <flatcc_json_printer_uint32_struct_field@@Base+0x150>
   18b08:	mov	r2, #34	; 0x22
   18b0c:	strb	r2, [r3]
   18b10:	ldrb	r3, [r4, #26]
   18b14:	ldr	r0, [r4, #20]
   18b18:	ldr	r5, [r4, #16]
   18b1c:	cmp	r3, #0
   18b20:	addeq	r0, r0, #1
   18b24:	add	r3, r0, r9
   18b28:	cmp	r5, r3
   18b2c:	str	r0, [r4, #20]
   18b30:	bhi	18c1c <flatcc_json_printer_uint32_struct_field@@Base+0x160>
   18b34:	cmp	r0, r5
   18b38:	bcs	18c54 <flatcc_json_printer_uint32_struct_field@@Base+0x198>
   18b3c:	sub	r5, r5, r0
   18b40:	cmp	r9, r5
   18b44:	bls	18b90 <flatcc_json_printer_uint32_struct_field@@Base+0xd4>
   18b48:	mov	r9, #0
   18b4c:	mov	r2, r5
   18b50:	mov	r1, r6
   18b54:	bl	1244c <memcpy@plt>
   18b58:	ldr	r3, [r4, #20]
   18b5c:	mov	r0, r4
   18b60:	add	r3, r3, r5
   18b64:	str	r3, [r4, #20]
   18b68:	ldr	r2, [r4, #44]	; 0x2c
   18b6c:	mov	r1, r9
   18b70:	blx	r2
   18b74:	ldr	r0, [r4, #20]
   18b78:	ldr	r3, [r4, #16]
   18b7c:	sub	r7, r7, r5
   18b80:	add	r6, r6, r5
   18b84:	sub	r5, r3, r0
   18b88:	cmp	r7, r5
   18b8c:	bhi	18b4c <flatcc_json_printer_uint32_struct_field@@Base+0x90>
   18b90:	mov	r1, r6
   18b94:	mov	r2, r7
   18b98:	bl	1244c <memcpy@plt>
   18b9c:	ldr	r9, [r4, #20]
   18ba0:	add	r9, r9, r7
   18ba4:	str	r9, [r4, #20]
   18ba8:	mov	r3, #34	; 0x22
   18bac:	strb	r3, [r9]
   18bb0:	ldr	r1, [r4, #20]
   18bb4:	ldrb	r3, [r4, #26]
   18bb8:	clz	r3, r3
   18bbc:	lsr	r3, r3, #5
   18bc0:	add	r2, r1, r3
   18bc4:	add	r2, r2, #1
   18bc8:	mov	r0, #58	; 0x3a
   18bcc:	str	r2, [r4, #20]
   18bd0:	strb	r0, [r1, r3]
   18bd4:	ldr	r3, [r4, #20]
   18bd8:	mov	r2, #32
   18bdc:	mov	r0, r8
   18be0:	strb	r2, [r3]
   18be4:	ldrb	r3, [r4, #25]
   18be8:	ldr	r1, [r4, #20]
   18bec:	cmp	r3, #0
   18bf0:	addne	r1, r1, #1
   18bf4:	str	r1, [r4, #20]
   18bf8:	bl	13bc8 <test_print@@Base+0x3f4>
   18bfc:	ldr	r3, [r4, #20]
   18c00:	add	r0, r3, r0
   18c04:	str	r0, [r4, #20]
   18c08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18c0c:	ldr	r3, [r0, #44]	; 0x2c
   18c10:	blx	r3
   18c14:	ldr	r3, [r4, #20]
   18c18:	b	18b08 <flatcc_json_printer_uint32_struct_field@@Base+0x4c>
   18c1c:	mov	r2, r9
   18c20:	mov	r1, r6
   18c24:	bl	1244c <memcpy@plt>
   18c28:	ldr	r7, [r4, #20]
   18c2c:	add	r9, r7, r9
   18c30:	str	r9, [r4, #20]
   18c34:	b	18ba8 <flatcc_json_printer_uint32_struct_field@@Base+0xec>
   18c38:	add	r1, r3, #1
   18c3c:	mov	r2, #10
   18c40:	str	r1, [r0, #20]
   18c44:	strb	r2, [r3]
   18c48:	bl	145ac <test_print@@Base+0xdd8>
   18c4c:	ldr	r3, [r4, #20]
   18c50:	b	18b08 <flatcc_json_printer_uint32_struct_field@@Base+0x4c>
   18c54:	mov	r0, r4
   18c58:	ldr	r3, [r4, #44]	; 0x2c
   18c5c:	mov	r1, #0
   18c60:	blx	r3
   18c64:	ldr	r5, [r4, #16]
   18c68:	ldr	r0, [r4, #20]
   18c6c:	b	18b3c <flatcc_json_printer_uint32_struct_field@@Base+0x80>

00018c70 <flatcc_json_printer_uint64_struct_field@@Base>:
   18c70:	cmp	r1, #0
   18c74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18c78:	mov	r4, r0
   18c7c:	ldrd	r6, [r2, r3]
   18c80:	ldrne	r3, [r0, #20]
   18c84:	movne	r2, #44	; 0x2c
   18c88:	addne	r1, r3, #1
   18c8c:	strne	r1, [r0, #20]
   18c90:	strbne	r2, [r3]
   18c94:	ldrb	r1, [r0, #25]
   18c98:	ldr	sl, [sp, #36]	; 0x24
   18c9c:	ldr	r8, [sp, #32]
   18ca0:	cmp	r1, #0
   18ca4:	mov	r9, sl
   18ca8:	ldr	r3, [r0, #20]
   18cac:	bne	18df0 <flatcc_json_printer_uint64_struct_field@@Base+0x180>
   18cb0:	ldr	r2, [r0, #16]
   18cb4:	cmp	r3, r2
   18cb8:	bcs	18dc4 <flatcc_json_printer_uint64_struct_field@@Base+0x154>
   18cbc:	mov	r2, #34	; 0x22
   18cc0:	strb	r2, [r3]
   18cc4:	ldrb	r3, [r4, #26]
   18cc8:	ldr	r0, [r4, #20]
   18ccc:	ldr	r5, [r4, #16]
   18cd0:	cmp	r3, #0
   18cd4:	addeq	r0, r0, #1
   18cd8:	add	r3, r0, sl
   18cdc:	cmp	r5, r3
   18ce0:	str	r0, [r4, #20]
   18ce4:	bhi	18dd4 <flatcc_json_printer_uint64_struct_field@@Base+0x164>
   18ce8:	cmp	r0, r5
   18cec:	bcs	18e0c <flatcc_json_printer_uint64_struct_field@@Base+0x19c>
   18cf0:	sub	r5, r5, r0
   18cf4:	cmp	sl, r5
   18cf8:	bls	18d44 <flatcc_json_printer_uint64_struct_field@@Base+0xd4>
   18cfc:	mov	sl, #0
   18d00:	mov	r2, r5
   18d04:	mov	r1, r8
   18d08:	bl	1244c <memcpy@plt>
   18d0c:	ldr	r3, [r4, #20]
   18d10:	mov	r0, r4
   18d14:	add	r3, r3, r5
   18d18:	str	r3, [r4, #20]
   18d1c:	ldr	r2, [r4, #44]	; 0x2c
   18d20:	mov	r1, sl
   18d24:	blx	r2
   18d28:	ldr	r0, [r4, #20]
   18d2c:	ldr	r3, [r4, #16]
   18d30:	sub	r9, r9, r5
   18d34:	add	r8, r8, r5
   18d38:	sub	r5, r3, r0
   18d3c:	cmp	r9, r5
   18d40:	bhi	18d00 <flatcc_json_printer_uint64_struct_field@@Base+0x90>
   18d44:	mov	r1, r8
   18d48:	mov	r2, r9
   18d4c:	bl	1244c <memcpy@plt>
   18d50:	ldr	sl, [r4, #20]
   18d54:	add	sl, sl, r9
   18d58:	str	sl, [r4, #20]
   18d5c:	mov	r3, #34	; 0x22
   18d60:	strb	r3, [sl]
   18d64:	ldr	r1, [r4, #20]
   18d68:	ldrb	r3, [r4, #26]
   18d6c:	clz	r3, r3
   18d70:	lsr	r3, r3, #5
   18d74:	add	r2, r1, r3
   18d78:	add	r2, r2, #1
   18d7c:	mov	r0, #58	; 0x3a
   18d80:	str	r2, [r4, #20]
   18d84:	strb	r0, [r1, r3]
   18d88:	ldr	r3, [r4, #20]
   18d8c:	mov	r2, #32
   18d90:	mov	r0, r6
   18d94:	strb	r2, [r3]
   18d98:	ldrb	r3, [r4, #25]
   18d9c:	ldr	r2, [r4, #20]
   18da0:	mov	r1, r7
   18da4:	cmp	r3, #0
   18da8:	addne	r2, r2, #1
   18dac:	str	r2, [r4, #20]
   18db0:	bl	13ef0 <test_print@@Base+0x71c>
   18db4:	ldr	r3, [r4, #20]
   18db8:	add	r0, r3, r0
   18dbc:	str	r0, [r4, #20]
   18dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18dc4:	ldr	r3, [r0, #44]	; 0x2c
   18dc8:	blx	r3
   18dcc:	ldr	r3, [r4, #20]
   18dd0:	b	18cbc <flatcc_json_printer_uint64_struct_field@@Base+0x4c>
   18dd4:	mov	r2, sl
   18dd8:	mov	r1, r8
   18ddc:	bl	1244c <memcpy@plt>
   18de0:	ldr	r9, [r4, #20]
   18de4:	add	sl, r9, sl
   18de8:	str	sl, [r4, #20]
   18dec:	b	18d5c <flatcc_json_printer_uint64_struct_field@@Base+0xec>
   18df0:	add	r1, r3, #1
   18df4:	mov	r2, #10
   18df8:	str	r1, [r0, #20]
   18dfc:	strb	r2, [r3]
   18e00:	bl	145ac <test_print@@Base+0xdd8>
   18e04:	ldr	r3, [r4, #20]
   18e08:	b	18cbc <flatcc_json_printer_uint64_struct_field@@Base+0x4c>
   18e0c:	mov	r0, r4
   18e10:	ldr	r3, [r4, #44]	; 0x2c
   18e14:	mov	r1, #0
   18e18:	blx	r3
   18e1c:	ldr	r5, [r4, #16]
   18e20:	ldr	r0, [r4, #20]
   18e24:	b	18cf0 <flatcc_json_printer_uint64_struct_field@@Base+0x80>

00018e28 <flatcc_json_printer_int8_struct_field@@Base>:
   18e28:	cmp	r1, #0
   18e2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18e30:	mov	r4, r0
   18e34:	ldrsb	r6, [r2, r3]
   18e38:	ldrne	r3, [r0, #20]
   18e3c:	movne	r2, #44	; 0x2c
   18e40:	addne	r1, r3, #1
   18e44:	strne	r1, [r0, #20]
   18e48:	strbne	r2, [r3]
   18e4c:	ldrb	r1, [r0, #25]
   18e50:	ldr	r9, [sp, #36]	; 0x24
   18e54:	ldr	r7, [sp, #32]
   18e58:	cmp	r1, #0
   18e5c:	mov	r8, r9
   18e60:	ldr	r3, [r0, #20]
   18e64:	bne	19048 <flatcc_json_printer_int8_struct_field@@Base+0x220>
   18e68:	ldr	r2, [r0, #16]
   18e6c:	cmp	r3, r2
   18e70:	bcs	18fe8 <flatcc_json_printer_int8_struct_field@@Base+0x1c0>
   18e74:	mov	r2, #34	; 0x22
   18e78:	strb	r2, [r3]
   18e7c:	ldrb	r3, [r4, #26]
   18e80:	ldr	r0, [r4, #20]
   18e84:	ldr	r5, [r4, #16]
   18e88:	cmp	r3, #0
   18e8c:	addeq	r0, r0, #1
   18e90:	add	r3, r0, r9
   18e94:	cmp	r5, r3
   18e98:	str	r0, [r4, #20]
   18e9c:	bhi	18ff8 <flatcc_json_printer_int8_struct_field@@Base+0x1d0>
   18ea0:	cmp	r0, r5
   18ea4:	bcs	19064 <flatcc_json_printer_int8_struct_field@@Base+0x23c>
   18ea8:	sub	r5, r5, r0
   18eac:	cmp	r9, r5
   18eb0:	bls	18efc <flatcc_json_printer_int8_struct_field@@Base+0xd4>
   18eb4:	mov	r9, #0
   18eb8:	mov	r2, r5
   18ebc:	mov	r1, r7
   18ec0:	bl	1244c <memcpy@plt>
   18ec4:	ldr	r3, [r4, #20]
   18ec8:	mov	r0, r4
   18ecc:	add	r3, r3, r5
   18ed0:	str	r3, [r4, #20]
   18ed4:	ldr	r2, [r4, #44]	; 0x2c
   18ed8:	mov	r1, r9
   18edc:	blx	r2
   18ee0:	ldr	r0, [r4, #20]
   18ee4:	ldr	r3, [r4, #16]
   18ee8:	sub	r8, r8, r5
   18eec:	add	r7, r7, r5
   18ef0:	sub	r5, r3, r0
   18ef4:	cmp	r8, r5
   18ef8:	bhi	18eb8 <flatcc_json_printer_int8_struct_field@@Base+0x90>
   18efc:	mov	r1, r7
   18f00:	mov	r2, r8
   18f04:	bl	1244c <memcpy@plt>
   18f08:	ldr	r9, [r4, #20]
   18f0c:	add	r9, r9, r8
   18f10:	str	r9, [r4, #20]
   18f14:	mov	r3, #34	; 0x22
   18f18:	strb	r3, [r9]
   18f1c:	ldr	r1, [r4, #20]
   18f20:	ldrb	r3, [r4, #26]
   18f24:	clz	r3, r3
   18f28:	lsr	r3, r3, #5
   18f2c:	add	r2, r1, r3
   18f30:	add	r2, r2, #1
   18f34:	mov	r0, #58	; 0x3a
   18f38:	str	r2, [r4, #20]
   18f3c:	strb	r0, [r1, r3]
   18f40:	ldr	r3, [r4, #20]
   18f44:	mov	r2, #32
   18f48:	lsr	r1, r6, #31
   18f4c:	strb	r2, [r3]
   18f50:	ldrb	r2, [r4, #25]
   18f54:	ldr	r0, [r4, #20]
   18f58:	adds	r2, r2, #0
   18f5c:	movne	r2, #1
   18f60:	cmp	r6, #0
   18f64:	rsblt	r6, r6, #0
   18f68:	add	r3, r0, r2
   18f6c:	sxtblt	r6, r6
   18f70:	movlt	ip, #45	; 0x2d
   18f74:	uxtb	r6, r6
   18f78:	str	r3, [r4, #20]
   18f7c:	addlt	r3, r3, #1
   18f80:	strblt	ip, [r0, r2]
   18f84:	cmp	r6, #99	; 0x63
   18f88:	bls	19014 <flatcc_json_printer_int8_struct_field@@Base+0x1ec>
   18f8c:	ldr	r2, [pc, #260]	; 19098 <flatcc_json_printer_int8_struct_field@@Base+0x270>
   18f90:	mov	ip, #100	; 0x64
   18f94:	ldr	r0, [pc, #256]	; 1909c <flatcc_json_printer_int8_struct_field@@Base+0x274>
   18f98:	umull	lr, r2, r2, r6
   18f9c:	mov	lr, #0
   18fa0:	lsr	r2, r2, #5
   18fa4:	strb	lr, [r3, #3]
   18fa8:	mul	r2, ip, r2
   18fac:	mov	ip, #49	; 0x31
   18fb0:	sub	r6, r6, r2
   18fb4:	mov	r2, #3
   18fb8:	uxtb	r6, r6
   18fbc:	ldrb	lr, [r0, r6, lsl #1]
   18fc0:	add	r6, r0, r6, lsl #1
   18fc4:	strb	lr, [r3, #1]
   18fc8:	ldrb	r0, [r6, #1]
   18fcc:	strb	ip, [r3]
   18fd0:	strb	r0, [r3, #2]
   18fd4:	ldr	r3, [r4, #20]
   18fd8:	add	r1, r1, r2
   18fdc:	add	r3, r3, r1
   18fe0:	str	r3, [r4, #20]
   18fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18fe8:	ldr	r3, [r0, #44]	; 0x2c
   18fec:	blx	r3
   18ff0:	ldr	r3, [r4, #20]
   18ff4:	b	18e74 <flatcc_json_printer_int8_struct_field@@Base+0x4c>
   18ff8:	mov	r2, r9
   18ffc:	mov	r1, r7
   19000:	bl	1244c <memcpy@plt>
   19004:	ldr	r8, [r4, #20]
   19008:	add	r9, r8, r9
   1900c:	str	r9, [r4, #20]
   19010:	b	18f14 <flatcc_json_printer_int8_struct_field@@Base+0xec>
   19014:	cmp	r6, #9
   19018:	bls	19080 <flatcc_json_printer_int8_struct_field@@Base+0x258>
   1901c:	ldr	r2, [pc, #120]	; 1909c <flatcc_json_printer_int8_struct_field@@Base+0x274>
   19020:	sxth	r6, r6
   19024:	mov	r0, #0
   19028:	strb	r0, [r3, #2]
   1902c:	ldrb	r0, [r2, r6, lsl #1]
   19030:	add	r6, r2, r6, lsl #1
   19034:	mov	r2, #2
   19038:	strb	r0, [r3]
   1903c:	ldrb	r0, [r6, #1]
   19040:	strb	r0, [r3, #1]
   19044:	b	18fd4 <flatcc_json_printer_int8_struct_field@@Base+0x1ac>
   19048:	add	r1, r3, #1
   1904c:	mov	r2, #10
   19050:	str	r1, [r0, #20]
   19054:	strb	r2, [r3]
   19058:	bl	145ac <test_print@@Base+0xdd8>
   1905c:	ldr	r3, [r4, #20]
   19060:	b	18e74 <flatcc_json_printer_int8_struct_field@@Base+0x4c>
   19064:	mov	r0, r4
   19068:	ldr	r3, [r4, #44]	; 0x2c
   1906c:	mov	r1, #0
   19070:	blx	r3
   19074:	ldr	r5, [r4, #16]
   19078:	ldr	r0, [r4, #20]
   1907c:	b	18ea8 <flatcc_json_printer_int8_struct_field@@Base+0x80>
   19080:	add	r6, r6, #48	; 0x30
   19084:	mov	r0, #0
   19088:	mov	r2, #1
   1908c:	strb	r6, [r3]
   19090:	strb	r0, [r3, #1]
   19094:	b	18fd4 <flatcc_json_printer_int8_struct_field@@Base+0x1ac>
   19098:	mvnpl	r8, pc, lsl r5
   1909c:	andeq	r1, r2, r8, ror #12

000190a0 <flatcc_json_printer_int16_struct_field@@Base>:
   190a0:	cmp	r1, #0
   190a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   190a8:	mov	r4, r0
   190ac:	ldrsh	r8, [r2, r3]
   190b0:	ldrne	r3, [r0, #20]
   190b4:	movne	r2, #44	; 0x2c
   190b8:	addne	r1, r3, #1
   190bc:	strne	r1, [r0, #20]
   190c0:	strbne	r2, [r3]
   190c4:	ldrb	r1, [r0, #25]
   190c8:	ldr	r9, [sp, #36]	; 0x24
   190cc:	ldr	r6, [sp, #32]
   190d0:	cmp	r1, #0
   190d4:	mov	r7, r9
   190d8:	ldr	r3, [r0, #20]
   190dc:	bne	19240 <flatcc_json_printer_int16_struct_field@@Base+0x1a0>
   190e0:	ldr	r2, [r0, #16]
   190e4:	cmp	r3, r2
   190e8:	bcs	19214 <flatcc_json_printer_int16_struct_field@@Base+0x174>
   190ec:	mov	r2, #34	; 0x22
   190f0:	strb	r2, [r3]
   190f4:	ldrb	r3, [r4, #26]
   190f8:	ldr	r0, [r4, #20]
   190fc:	ldr	r5, [r4, #16]
   19100:	cmp	r3, #0
   19104:	addeq	r0, r0, #1
   19108:	add	r3, r0, r9
   1910c:	cmp	r5, r3
   19110:	str	r0, [r4, #20]
   19114:	bhi	19224 <flatcc_json_printer_int16_struct_field@@Base+0x184>
   19118:	cmp	r0, r5
   1911c:	bcs	1925c <flatcc_json_printer_int16_struct_field@@Base+0x1bc>
   19120:	sub	r5, r5, r0
   19124:	cmp	r9, r5
   19128:	bls	19174 <flatcc_json_printer_int16_struct_field@@Base+0xd4>
   1912c:	mov	r9, #0
   19130:	mov	r2, r5
   19134:	mov	r1, r6
   19138:	bl	1244c <memcpy@plt>
   1913c:	ldr	r3, [r4, #20]
   19140:	mov	r0, r4
   19144:	add	r3, r3, r5
   19148:	str	r3, [r4, #20]
   1914c:	ldr	r2, [r4, #44]	; 0x2c
   19150:	mov	r1, r9
   19154:	blx	r2
   19158:	ldr	r0, [r4, #20]
   1915c:	ldr	r3, [r4, #16]
   19160:	sub	r7, r7, r5
   19164:	add	r6, r6, r5
   19168:	sub	r5, r3, r0
   1916c:	cmp	r7, r5
   19170:	bhi	19130 <flatcc_json_printer_int16_struct_field@@Base+0x90>
   19174:	mov	r1, r6
   19178:	mov	r2, r7
   1917c:	bl	1244c <memcpy@plt>
   19180:	ldr	r9, [r4, #20]
   19184:	add	r9, r9, r7
   19188:	str	r9, [r4, #20]
   1918c:	mov	r3, #34	; 0x22
   19190:	strb	r3, [r9]
   19194:	ldr	r1, [r4, #20]
   19198:	ldrb	r3, [r4, #26]
   1919c:	clz	r3, r3
   191a0:	lsr	r3, r3, #5
   191a4:	add	r2, r1, r3
   191a8:	mov	r0, #58	; 0x3a
   191ac:	add	r2, r2, #1
   191b0:	str	r2, [r4, #20]
   191b4:	strb	r0, [r1, r3]
   191b8:	ldr	r3, [r4, #20]
   191bc:	mov	r2, #32
   191c0:	lsr	r5, r8, #31
   191c4:	strb	r2, [r3]
   191c8:	ldrb	r3, [r4, #25]
   191cc:	ldr	r2, [r4, #20]
   191d0:	adds	r3, r3, #0
   191d4:	movne	r3, #1
   191d8:	cmp	r8, #0
   191dc:	rsblt	r8, r8, #0
   191e0:	add	r1, r2, r3
   191e4:	sxthlt	r8, r8
   191e8:	movlt	r0, #45	; 0x2d
   191ec:	str	r1, [r4, #20]
   191f0:	strblt	r0, [r2, r3]
   191f4:	addlt	r1, r1, #1
   191f8:	uxth	r0, r8
   191fc:	bl	13a60 <test_print@@Base+0x28c>
   19200:	ldr	r3, [r4, #20]
   19204:	add	r0, r5, r0
   19208:	add	r3, r3, r0
   1920c:	str	r3, [r4, #20]
   19210:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19214:	ldr	r3, [r0, #44]	; 0x2c
   19218:	blx	r3
   1921c:	ldr	r3, [r4, #20]
   19220:	b	190ec <flatcc_json_printer_int16_struct_field@@Base+0x4c>
   19224:	mov	r2, r9
   19228:	mov	r1, r6
   1922c:	bl	1244c <memcpy@plt>
   19230:	ldr	r7, [r4, #20]
   19234:	add	r9, r7, r9
   19238:	str	r9, [r4, #20]
   1923c:	b	1918c <flatcc_json_printer_int16_struct_field@@Base+0xec>
   19240:	add	r1, r3, #1
   19244:	mov	r2, #10
   19248:	str	r1, [r0, #20]
   1924c:	strb	r2, [r3]
   19250:	bl	145ac <test_print@@Base+0xdd8>
   19254:	ldr	r3, [r4, #20]
   19258:	b	190ec <flatcc_json_printer_int16_struct_field@@Base+0x4c>
   1925c:	mov	r0, r4
   19260:	ldr	r3, [r4, #44]	; 0x2c
   19264:	mov	r1, #0
   19268:	blx	r3
   1926c:	ldr	r5, [r4, #16]
   19270:	ldr	r0, [r4, #20]
   19274:	b	19120 <flatcc_json_printer_int16_struct_field@@Base+0x80>

00019278 <flatcc_json_printer_int32_struct_field@@Base>:
   19278:	cmp	r1, #0
   1927c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19280:	mov	r4, r0
   19284:	ldr	r8, [r2, r3]
   19288:	ldrne	r3, [r0, #20]
   1928c:	movne	r2, #44	; 0x2c
   19290:	addne	r1, r3, #1
   19294:	strne	r1, [r0, #20]
   19298:	strbne	r2, [r3]
   1929c:	ldrb	r1, [r0, #25]
   192a0:	ldr	r9, [sp, #36]	; 0x24
   192a4:	ldr	r6, [sp, #32]
   192a8:	cmp	r1, #0
   192ac:	mov	r7, r9
   192b0:	ldr	r3, [r0, #20]
   192b4:	bne	19414 <flatcc_json_printer_int32_struct_field@@Base+0x19c>
   192b8:	ldr	r2, [r0, #16]
   192bc:	cmp	r3, r2
   192c0:	bcs	193e8 <flatcc_json_printer_int32_struct_field@@Base+0x170>
   192c4:	mov	r2, #34	; 0x22
   192c8:	strb	r2, [r3]
   192cc:	ldrb	r3, [r4, #26]
   192d0:	ldr	r0, [r4, #20]
   192d4:	ldr	r5, [r4, #16]
   192d8:	cmp	r3, #0
   192dc:	addeq	r0, r0, #1
   192e0:	add	r3, r0, r9
   192e4:	cmp	r5, r3
   192e8:	str	r0, [r4, #20]
   192ec:	bhi	193f8 <flatcc_json_printer_int32_struct_field@@Base+0x180>
   192f0:	cmp	r0, r5
   192f4:	bcs	19430 <flatcc_json_printer_int32_struct_field@@Base+0x1b8>
   192f8:	sub	r5, r5, r0
   192fc:	cmp	r9, r5
   19300:	bls	1934c <flatcc_json_printer_int32_struct_field@@Base+0xd4>
   19304:	mov	r9, #0
   19308:	mov	r2, r5
   1930c:	mov	r1, r6
   19310:	bl	1244c <memcpy@plt>
   19314:	ldr	r3, [r4, #20]
   19318:	mov	r0, r4
   1931c:	add	r3, r3, r5
   19320:	str	r3, [r4, #20]
   19324:	ldr	r2, [r4, #44]	; 0x2c
   19328:	mov	r1, r9
   1932c:	blx	r2
   19330:	ldr	r0, [r4, #20]
   19334:	ldr	r3, [r4, #16]
   19338:	sub	r7, r7, r5
   1933c:	add	r6, r6, r5
   19340:	sub	r5, r3, r0
   19344:	cmp	r7, r5
   19348:	bhi	19308 <flatcc_json_printer_int32_struct_field@@Base+0x90>
   1934c:	mov	r1, r6
   19350:	mov	r2, r7
   19354:	bl	1244c <memcpy@plt>
   19358:	ldr	r9, [r4, #20]
   1935c:	add	r9, r9, r7
   19360:	str	r9, [r4, #20]
   19364:	mov	r3, #34	; 0x22
   19368:	strb	r3, [r9]
   1936c:	ldr	r1, [r4, #20]
   19370:	ldrb	r3, [r4, #26]
   19374:	clz	r3, r3
   19378:	lsr	r3, r3, #5
   1937c:	add	r2, r1, r3
   19380:	mov	r0, #58	; 0x3a
   19384:	add	r2, r2, #1
   19388:	str	r2, [r4, #20]
   1938c:	strb	r0, [r1, r3]
   19390:	ldr	r3, [r4, #20]
   19394:	mov	r2, #32
   19398:	lsr	r5, r8, #31
   1939c:	strb	r2, [r3]
   193a0:	ldrb	r3, [r4, #25]
   193a4:	ldr	r2, [r4, #20]
   193a8:	adds	r3, r3, #0
   193ac:	movne	r3, #1
   193b0:	cmp	r8, #0
   193b4:	add	r1, r2, r3
   193b8:	movlt	r0, #45	; 0x2d
   193bc:	rsblt	r8, r8, #0
   193c0:	str	r1, [r4, #20]
   193c4:	strblt	r0, [r2, r3]
   193c8:	addlt	r1, r1, #1
   193cc:	mov	r0, r8
   193d0:	bl	13bc8 <test_print@@Base+0x3f4>
   193d4:	ldr	r3, [r4, #20]
   193d8:	add	r0, r5, r0
   193dc:	add	r3, r3, r0
   193e0:	str	r3, [r4, #20]
   193e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193e8:	ldr	r3, [r0, #44]	; 0x2c
   193ec:	blx	r3
   193f0:	ldr	r3, [r4, #20]
   193f4:	b	192c4 <flatcc_json_printer_int32_struct_field@@Base+0x4c>
   193f8:	mov	r2, r9
   193fc:	mov	r1, r6
   19400:	bl	1244c <memcpy@plt>
   19404:	ldr	r7, [r4, #20]
   19408:	add	r9, r7, r9
   1940c:	str	r9, [r4, #20]
   19410:	b	19364 <flatcc_json_printer_int32_struct_field@@Base+0xec>
   19414:	add	r1, r3, #1
   19418:	mov	r2, #10
   1941c:	str	r1, [r0, #20]
   19420:	strb	r2, [r3]
   19424:	bl	145ac <test_print@@Base+0xdd8>
   19428:	ldr	r3, [r4, #20]
   1942c:	b	192c4 <flatcc_json_printer_int32_struct_field@@Base+0x4c>
   19430:	mov	r0, r4
   19434:	ldr	r3, [r4, #44]	; 0x2c
   19438:	mov	r1, #0
   1943c:	blx	r3
   19440:	ldr	r5, [r4, #16]
   19444:	ldr	r0, [r4, #20]
   19448:	b	192f8 <flatcc_json_printer_int32_struct_field@@Base+0x80>

0001944c <flatcc_json_printer_int64_struct_field@@Base>:
   1944c:	cmp	r1, #0
   19450:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19454:	mov	r4, r0
   19458:	ldrd	r6, [r2, r3]
   1945c:	ldrne	r3, [r0, #20]
   19460:	movne	r2, #44	; 0x2c
   19464:	addne	r1, r3, #1
   19468:	strne	r1, [r0, #20]
   1946c:	strbne	r2, [r3]
   19470:	ldrb	r1, [r0, #25]
   19474:	ldr	sl, [sp, #36]	; 0x24
   19478:	ldr	r8, [sp, #32]
   1947c:	cmp	r1, #0
   19480:	mov	r9, sl
   19484:	ldr	r3, [r0, #20]
   19488:	bne	195f8 <flatcc_json_printer_int64_struct_field@@Base+0x1ac>
   1948c:	ldr	r2, [r0, #16]
   19490:	cmp	r3, r2
   19494:	bcs	195cc <flatcc_json_printer_int64_struct_field@@Base+0x180>
   19498:	mov	r2, #34	; 0x22
   1949c:	strb	r2, [r3]
   194a0:	ldrb	r3, [r4, #26]
   194a4:	ldr	r0, [r4, #20]
   194a8:	ldr	r5, [r4, #16]
   194ac:	cmp	r3, #0
   194b0:	addeq	r0, r0, #1
   194b4:	add	r3, r0, sl
   194b8:	cmp	r5, r3
   194bc:	str	r0, [r4, #20]
   194c0:	bhi	195dc <flatcc_json_printer_int64_struct_field@@Base+0x190>
   194c4:	cmp	r0, r5
   194c8:	bcs	19614 <flatcc_json_printer_int64_struct_field@@Base+0x1c8>
   194cc:	sub	r5, r5, r0
   194d0:	cmp	sl, r5
   194d4:	bls	19520 <flatcc_json_printer_int64_struct_field@@Base+0xd4>
   194d8:	mov	sl, #0
   194dc:	mov	r2, r5
   194e0:	mov	r1, r8
   194e4:	bl	1244c <memcpy@plt>
   194e8:	ldr	r3, [r4, #20]
   194ec:	mov	r0, r4
   194f0:	add	r3, r3, r5
   194f4:	str	r3, [r4, #20]
   194f8:	ldr	r2, [r4, #44]	; 0x2c
   194fc:	mov	r1, sl
   19500:	blx	r2
   19504:	ldr	r0, [r4, #20]
   19508:	ldr	r3, [r4, #16]
   1950c:	sub	r9, r9, r5
   19510:	add	r8, r8, r5
   19514:	sub	r5, r3, r0
   19518:	cmp	r9, r5
   1951c:	bhi	194dc <flatcc_json_printer_int64_struct_field@@Base+0x90>
   19520:	mov	r1, r8
   19524:	mov	r2, r9
   19528:	bl	1244c <memcpy@plt>
   1952c:	ldr	sl, [r4, #20]
   19530:	add	sl, sl, r9
   19534:	str	sl, [r4, #20]
   19538:	mov	r3, #34	; 0x22
   1953c:	strb	r3, [sl]
   19540:	ldr	r1, [r4, #20]
   19544:	ldrb	r3, [r4, #26]
   19548:	clz	r3, r3
   1954c:	lsr	r3, r3, #5
   19550:	add	r2, r1, r3
   19554:	add	r2, r2, #1
   19558:	mov	r0, #58	; 0x3a
   1955c:	str	r2, [r4, #20]
   19560:	strb	r0, [r1, r3]
   19564:	ldr	r3, [r4, #20]
   19568:	mov	r2, #32
   1956c:	lsr	r5, r7, #31
   19570:	strb	r2, [r3]
   19574:	ldrb	r3, [r4, #25]
   19578:	ldr	r1, [r4, #20]
   1957c:	adds	r3, r3, #0
   19580:	movne	r3, #1
   19584:	cmp	r6, #0
   19588:	add	r2, r1, r3
   1958c:	sbcs	r0, r7, #0
   19590:	str	r2, [r4, #20]
   19594:	bge	195ac <flatcc_json_printer_int64_struct_field@@Base+0x160>
   19598:	rsbs	r6, r6, #0
   1959c:	rsc	r7, r7, #0
   195a0:	add	r2, r2, #1
   195a4:	mov	r0, #45	; 0x2d
   195a8:	strb	r0, [r1, r3]
   195ac:	mov	r0, r6
   195b0:	mov	r1, r7
   195b4:	bl	13ef0 <test_print@@Base+0x71c>
   195b8:	ldr	r3, [r4, #20]
   195bc:	add	r0, r5, r0
   195c0:	add	r3, r3, r0
   195c4:	str	r3, [r4, #20]
   195c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   195cc:	ldr	r3, [r0, #44]	; 0x2c
   195d0:	blx	r3
   195d4:	ldr	r3, [r4, #20]
   195d8:	b	19498 <flatcc_json_printer_int64_struct_field@@Base+0x4c>
   195dc:	mov	r2, sl
   195e0:	mov	r1, r8
   195e4:	bl	1244c <memcpy@plt>
   195e8:	ldr	r9, [r4, #20]
   195ec:	add	sl, r9, sl
   195f0:	str	sl, [r4, #20]
   195f4:	b	19538 <flatcc_json_printer_int64_struct_field@@Base+0xec>
   195f8:	add	r1, r3, #1
   195fc:	mov	r2, #10
   19600:	str	r1, [r0, #20]
   19604:	strb	r2, [r3]
   19608:	bl	145ac <test_print@@Base+0xdd8>
   1960c:	ldr	r3, [r4, #20]
   19610:	b	19498 <flatcc_json_printer_int64_struct_field@@Base+0x4c>
   19614:	mov	r0, r4
   19618:	ldr	r3, [r4, #44]	; 0x2c
   1961c:	mov	r1, #0
   19620:	blx	r3
   19624:	ldr	r5, [r4, #16]
   19628:	ldr	r0, [r4, #20]
   1962c:	b	194cc <flatcc_json_printer_int64_struct_field@@Base+0x80>

00019630 <flatcc_json_printer_bool_struct_field@@Base>:
   19630:	cmp	r1, #0
   19634:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19638:	mov	r4, r0
   1963c:	ldrb	r8, [r2, r3]
   19640:	ldrne	r3, [r0, #20]
   19644:	movne	r2, #44	; 0x2c
   19648:	addne	r1, r3, #1
   1964c:	strne	r1, [r0, #20]
   19650:	strbne	r2, [r3]
   19654:	ldrb	r1, [r0, #25]
   19658:	ldr	r9, [sp, #36]	; 0x24
   1965c:	ldr	r6, [sp, #32]
   19660:	cmp	r1, #0
   19664:	mov	r7, r9
   19668:	ldr	r3, [r0, #20]
   1966c:	bne	197e4 <flatcc_json_printer_bool_struct_field@@Base+0x1b4>
   19670:	ldr	r2, [r0, #16]
   19674:	cmp	r3, r2
   19678:	bcs	197a0 <flatcc_json_printer_bool_struct_field@@Base+0x170>
   1967c:	mov	r2, #34	; 0x22
   19680:	strb	r2, [r3]
   19684:	ldrb	r3, [r4, #26]
   19688:	ldr	r0, [r4, #20]
   1968c:	ldr	r5, [r4, #16]
   19690:	cmp	r3, #0
   19694:	addeq	r0, r0, #1
   19698:	add	r3, r0, r9
   1969c:	cmp	r5, r3
   196a0:	str	r0, [r4, #20]
   196a4:	bhi	197b0 <flatcc_json_printer_bool_struct_field@@Base+0x180>
   196a8:	cmp	r0, r5
   196ac:	bcs	19800 <flatcc_json_printer_bool_struct_field@@Base+0x1d0>
   196b0:	sub	r5, r5, r0
   196b4:	cmp	r9, r5
   196b8:	bls	19704 <flatcc_json_printer_bool_struct_field@@Base+0xd4>
   196bc:	mov	r9, #0
   196c0:	mov	r2, r5
   196c4:	mov	r1, r6
   196c8:	bl	1244c <memcpy@plt>
   196cc:	ldr	r3, [r4, #20]
   196d0:	mov	r0, r4
   196d4:	add	r3, r3, r5
   196d8:	str	r3, [r4, #20]
   196dc:	ldr	r2, [r4, #44]	; 0x2c
   196e0:	mov	r1, r9
   196e4:	blx	r2
   196e8:	ldr	r0, [r4, #20]
   196ec:	ldr	r3, [r4, #16]
   196f0:	sub	r7, r7, r5
   196f4:	add	r6, r6, r5
   196f8:	sub	r5, r3, r0
   196fc:	cmp	r7, r5
   19700:	bhi	196c0 <flatcc_json_printer_bool_struct_field@@Base+0x90>
   19704:	mov	r1, r6
   19708:	mov	r2, r7
   1970c:	bl	1244c <memcpy@plt>
   19710:	ldr	r9, [r4, #20]
   19714:	add	r9, r9, r7
   19718:	str	r9, [r4, #20]
   1971c:	mov	r3, #34	; 0x22
   19720:	strb	r3, [r9]
   19724:	ldr	r1, [r4, #20]
   19728:	ldrb	r3, [r4, #26]
   1972c:	clz	r3, r3
   19730:	lsr	r3, r3, #5
   19734:	add	r2, r1, r3
   19738:	add	r2, r2, #1
   1973c:	mov	r0, #58	; 0x3a
   19740:	str	r2, [r4, #20]
   19744:	strb	r0, [r1, r3]
   19748:	ldr	r3, [r4, #20]
   1974c:	mov	r2, #32
   19750:	ldr	r0, [pc, #196]	; 1981c <flatcc_json_printer_bool_struct_field@@Base+0x1ec>
   19754:	strb	r2, [r3]
   19758:	ldrb	r3, [r4, #25]
   1975c:	ldr	r1, [r4, #20]
   19760:	adds	r3, r3, #0
   19764:	movne	r3, #1
   19768:	add	r2, r1, r3
   1976c:	cmp	r8, #0
   19770:	str	r2, [r4, #20]
   19774:	bne	197cc <flatcc_json_printer_bool_struct_field@@Base+0x19c>
   19778:	add	lr, r0, #1792	; 0x700
   1977c:	mov	ip, #5
   19780:	ldrh	lr, [lr, #4]
   19784:	ldr	r0, [r0, #1792]	; 0x700
   19788:	str	r0, [r1, r3]
   1978c:	strh	lr, [r2, #4]
   19790:	ldr	r3, [r4, #20]
   19794:	add	r3, r3, ip
   19798:	str	r3, [r4, #20]
   1979c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   197a0:	ldr	r3, [r0, #44]	; 0x2c
   197a4:	blx	r3
   197a8:	ldr	r3, [r4, #20]
   197ac:	b	1967c <flatcc_json_printer_bool_struct_field@@Base+0x4c>
   197b0:	mov	r2, r9
   197b4:	mov	r1, r6
   197b8:	bl	1244c <memcpy@plt>
   197bc:	ldr	r7, [r4, #20]
   197c0:	add	r9, r7, r9
   197c4:	str	r9, [r4, #20]
   197c8:	b	1971c <flatcc_json_printer_bool_struct_field@@Base+0xec>
   197cc:	ldrb	lr, [r0, #1788]	; 0x6fc
   197d0:	ldr	r0, [r0, #1784]	; 0x6f8
   197d4:	mov	ip, #4
   197d8:	str	r0, [r1, r3]
   197dc:	strb	lr, [r2, #4]
   197e0:	b	19790 <flatcc_json_printer_bool_struct_field@@Base+0x160>
   197e4:	add	r1, r3, #1
   197e8:	mov	r2, #10
   197ec:	str	r1, [r0, #20]
   197f0:	strb	r2, [r3]
   197f4:	bl	145ac <test_print@@Base+0xdd8>
   197f8:	ldr	r3, [r4, #20]
   197fc:	b	1967c <flatcc_json_printer_bool_struct_field@@Base+0x4c>
   19800:	mov	r0, r4
   19804:	ldr	r3, [r4, #44]	; 0x2c
   19808:	mov	r1, #0
   1980c:	blx	r3
   19810:	ldr	r5, [r4, #16]
   19814:	ldr	r0, [r4, #20]
   19818:	b	196b0 <flatcc_json_printer_bool_struct_field@@Base+0x80>
   1981c:	andeq	r1, r2, r8, ror #12

00019820 <flatcc_json_printer_float_struct_field@@Base>:
   19820:	cmp	r1, #0
   19824:	add	r3, r2, r3
   19828:	push	{r4, r5, r6, r7, r8, lr}
   1982c:	vpush	{d8}
   19830:	vldr	s16, [r3]
   19834:	ldrne	r3, [r0, #20]
   19838:	movne	r2, #44	; 0x2c
   1983c:	addne	r1, r3, #1
   19840:	strne	r1, [r0, #20]
   19844:	strbne	r2, [r3]
   19848:	ldrb	r1, [r0, #25]
   1984c:	ldr	r8, [sp, #36]	; 0x24
   19850:	mov	r4, r0
   19854:	cmp	r1, #0
   19858:	ldr	r6, [sp, #32]
   1985c:	mov	r7, r8
   19860:	ldr	r3, [r0, #20]
   19864:	bne	199a8 <flatcc_json_printer_float_struct_field@@Base+0x188>
   19868:	ldr	r2, [r0, #16]
   1986c:	cmp	r3, r2
   19870:	bcs	1997c <flatcc_json_printer_float_struct_field@@Base+0x15c>
   19874:	mov	r2, #34	; 0x22
   19878:	strb	r2, [r3]
   1987c:	ldrb	r3, [r4, #26]
   19880:	ldr	r0, [r4, #20]
   19884:	ldr	r5, [r4, #16]
   19888:	cmp	r3, #0
   1988c:	addeq	r0, r0, #1
   19890:	add	r3, r0, r8
   19894:	cmp	r5, r3
   19898:	str	r0, [r4, #20]
   1989c:	bhi	1998c <flatcc_json_printer_float_struct_field@@Base+0x16c>
   198a0:	cmp	r0, r5
   198a4:	bcs	199c4 <flatcc_json_printer_float_struct_field@@Base+0x1a4>
   198a8:	sub	r5, r5, r0
   198ac:	cmp	r8, r5
   198b0:	bls	198fc <flatcc_json_printer_float_struct_field@@Base+0xdc>
   198b4:	mov	r8, #0
   198b8:	mov	r2, r5
   198bc:	mov	r1, r6
   198c0:	bl	1244c <memcpy@plt>
   198c4:	ldr	r3, [r4, #20]
   198c8:	mov	r0, r4
   198cc:	add	r3, r3, r5
   198d0:	str	r3, [r4, #20]
   198d4:	ldr	r2, [r4, #44]	; 0x2c
   198d8:	mov	r1, r8
   198dc:	blx	r2
   198e0:	ldr	r0, [r4, #20]
   198e4:	ldr	r3, [r4, #16]
   198e8:	sub	r7, r7, r5
   198ec:	add	r6, r6, r5
   198f0:	sub	r5, r3, r0
   198f4:	cmp	r7, r5
   198f8:	bhi	198b8 <flatcc_json_printer_float_struct_field@@Base+0x98>
   198fc:	mov	r1, r6
   19900:	mov	r2, r7
   19904:	bl	1244c <memcpy@plt>
   19908:	ldr	r8, [r4, #20]
   1990c:	add	r8, r8, r7
   19910:	str	r8, [r4, #20]
   19914:	mov	r3, #34	; 0x22
   19918:	strb	r3, [r8]
   1991c:	ldr	r1, [r4, #20]
   19920:	ldrb	r3, [r4, #26]
   19924:	clz	r3, r3
   19928:	lsr	r3, r3, #5
   1992c:	add	r2, r1, r3
   19930:	add	r2, r2, #1
   19934:	mov	r0, #58	; 0x3a
   19938:	str	r2, [r4, #20]
   1993c:	strb	r0, [r1, r3]
   19940:	ldr	r3, [r4, #20]
   19944:	mov	r2, #32
   19948:	vcvt.f64.f32	d0, s16
   1994c:	strb	r2, [r3]
   19950:	ldrb	r3, [r4, #25]
   19954:	ldr	r0, [r4, #20]
   19958:	cmp	r3, #0
   1995c:	addne	r0, r0, #1
   19960:	str	r0, [r4, #20]
   19964:	bl	14cb0 <test_print@@Base+0x14dc>
   19968:	vpop	{d8}
   1996c:	ldr	r3, [r4, #20]
   19970:	add	r0, r3, r0
   19974:	str	r0, [r4, #20]
   19978:	pop	{r4, r5, r6, r7, r8, pc}
   1997c:	ldr	r3, [r0, #44]	; 0x2c
   19980:	blx	r3
   19984:	ldr	r3, [r4, #20]
   19988:	b	19874 <flatcc_json_printer_float_struct_field@@Base+0x54>
   1998c:	mov	r2, r8
   19990:	mov	r1, r6
   19994:	bl	1244c <memcpy@plt>
   19998:	ldr	r7, [r4, #20]
   1999c:	add	r8, r7, r8
   199a0:	str	r8, [r4, #20]
   199a4:	b	19914 <flatcc_json_printer_float_struct_field@@Base+0xf4>
   199a8:	add	r1, r3, #1
   199ac:	mov	r2, #10
   199b0:	str	r1, [r0, #20]
   199b4:	strb	r2, [r3]
   199b8:	bl	145ac <test_print@@Base+0xdd8>
   199bc:	ldr	r3, [r4, #20]
   199c0:	b	19874 <flatcc_json_printer_float_struct_field@@Base+0x54>
   199c4:	mov	r0, r4
   199c8:	ldr	r3, [r4, #44]	; 0x2c
   199cc:	mov	r1, #0
   199d0:	blx	r3
   199d4:	ldr	r5, [r4, #16]
   199d8:	ldr	r0, [r4, #20]
   199dc:	b	198a8 <flatcc_json_printer_float_struct_field@@Base+0x88>

000199e0 <flatcc_json_printer_double_struct_field@@Base>:
   199e0:	cmp	r1, #0
   199e4:	add	r3, r2, r3
   199e8:	push	{r4, r5, r6, r7, r8, lr}
   199ec:	vpush	{d8}
   199f0:	vldr	d8, [r3]
   199f4:	ldrne	r3, [r0, #20]
   199f8:	movne	r2, #44	; 0x2c
   199fc:	addne	r1, r3, #1
   19a00:	strne	r1, [r0, #20]
   19a04:	strbne	r2, [r3]
   19a08:	ldrb	r1, [r0, #25]
   19a0c:	ldr	r8, [sp, #36]	; 0x24
   19a10:	mov	r4, r0
   19a14:	cmp	r1, #0
   19a18:	ldr	r6, [sp, #32]
   19a1c:	mov	r7, r8
   19a20:	ldr	r3, [r0, #20]
   19a24:	bne	19b68 <flatcc_json_printer_double_struct_field@@Base+0x188>
   19a28:	ldr	r2, [r0, #16]
   19a2c:	cmp	r3, r2
   19a30:	bcs	19b3c <flatcc_json_printer_double_struct_field@@Base+0x15c>
   19a34:	mov	r2, #34	; 0x22
   19a38:	strb	r2, [r3]
   19a3c:	ldrb	r3, [r4, #26]
   19a40:	ldr	r0, [r4, #20]
   19a44:	ldr	r5, [r4, #16]
   19a48:	cmp	r3, #0
   19a4c:	addeq	r0, r0, #1
   19a50:	add	r3, r0, r8
   19a54:	cmp	r5, r3
   19a58:	str	r0, [r4, #20]
   19a5c:	bhi	19b4c <flatcc_json_printer_double_struct_field@@Base+0x16c>
   19a60:	cmp	r0, r5
   19a64:	bcs	19b84 <flatcc_json_printer_double_struct_field@@Base+0x1a4>
   19a68:	sub	r5, r5, r0
   19a6c:	cmp	r8, r5
   19a70:	bls	19abc <flatcc_json_printer_double_struct_field@@Base+0xdc>
   19a74:	mov	r8, #0
   19a78:	mov	r2, r5
   19a7c:	mov	r1, r6
   19a80:	bl	1244c <memcpy@plt>
   19a84:	ldr	r3, [r4, #20]
   19a88:	mov	r0, r4
   19a8c:	add	r3, r3, r5
   19a90:	str	r3, [r4, #20]
   19a94:	ldr	r2, [r4, #44]	; 0x2c
   19a98:	mov	r1, r8
   19a9c:	blx	r2
   19aa0:	ldr	r0, [r4, #20]
   19aa4:	ldr	r3, [r4, #16]
   19aa8:	sub	r7, r7, r5
   19aac:	add	r6, r6, r5
   19ab0:	sub	r5, r3, r0
   19ab4:	cmp	r7, r5
   19ab8:	bhi	19a78 <flatcc_json_printer_double_struct_field@@Base+0x98>
   19abc:	mov	r1, r6
   19ac0:	mov	r2, r7
   19ac4:	bl	1244c <memcpy@plt>
   19ac8:	ldr	r8, [r4, #20]
   19acc:	add	r8, r8, r7
   19ad0:	str	r8, [r4, #20]
   19ad4:	mov	r3, #34	; 0x22
   19ad8:	strb	r3, [r8]
   19adc:	ldr	r1, [r4, #20]
   19ae0:	ldrb	r3, [r4, #26]
   19ae4:	clz	r3, r3
   19ae8:	lsr	r3, r3, #5
   19aec:	add	r2, r1, r3
   19af0:	add	r2, r2, #1
   19af4:	mov	r0, #58	; 0x3a
   19af8:	str	r2, [r4, #20]
   19afc:	strb	r0, [r1, r3]
   19b00:	ldr	r3, [r4, #20]
   19b04:	mov	r2, #32
   19b08:	vmov.f64	d0, d8
   19b0c:	strb	r2, [r3]
   19b10:	ldrb	r3, [r4, #25]
   19b14:	ldr	r0, [r4, #20]
   19b18:	cmp	r3, #0
   19b1c:	addne	r0, r0, #1
   19b20:	str	r0, [r4, #20]
   19b24:	bl	14cb0 <test_print@@Base+0x14dc>
   19b28:	vpop	{d8}
   19b2c:	ldr	r3, [r4, #20]
   19b30:	add	r0, r3, r0
   19b34:	str	r0, [r4, #20]
   19b38:	pop	{r4, r5, r6, r7, r8, pc}
   19b3c:	ldr	r3, [r0, #44]	; 0x2c
   19b40:	blx	r3
   19b44:	ldr	r3, [r4, #20]
   19b48:	b	19a34 <flatcc_json_printer_double_struct_field@@Base+0x54>
   19b4c:	mov	r2, r8
   19b50:	mov	r1, r6
   19b54:	bl	1244c <memcpy@plt>
   19b58:	ldr	r7, [r4, #20]
   19b5c:	add	r8, r7, r8
   19b60:	str	r8, [r4, #20]
   19b64:	b	19ad4 <flatcc_json_printer_double_struct_field@@Base+0xf4>
   19b68:	add	r1, r3, #1
   19b6c:	mov	r2, #10
   19b70:	str	r1, [r0, #20]
   19b74:	strb	r2, [r3]
   19b78:	bl	145ac <test_print@@Base+0xdd8>
   19b7c:	ldr	r3, [r4, #20]
   19b80:	b	19a34 <flatcc_json_printer_double_struct_field@@Base+0x54>
   19b84:	mov	r0, r4
   19b88:	ldr	r3, [r4, #44]	; 0x2c
   19b8c:	mov	r1, #0
   19b90:	blx	r3
   19b94:	ldr	r5, [r4, #16]
   19b98:	ldr	r0, [r4, #20]
   19b9c:	b	19a68 <flatcc_json_printer_double_struct_field@@Base+0x88>

00019ba0 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   19ba0:	cmp	r1, #0
   19ba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19ba8:	mov	r4, r0
   19bac:	ldrb	r8, [r2, r3]
   19bb0:	ldrne	r3, [r0, #20]
   19bb4:	movne	r2, #44	; 0x2c
   19bb8:	addne	r1, r3, #1
   19bbc:	strne	r1, [r0, #20]
   19bc0:	strbne	r2, [r3]
   19bc4:	ldrb	r1, [r0, #25]
   19bc8:	ldr	sl, [sp, #36]	; 0x24
   19bcc:	ldr	r6, [sp, #32]
   19bd0:	cmp	r1, #0
   19bd4:	ldr	r9, [sp, #40]	; 0x28
   19bd8:	mov	r7, sl
   19bdc:	ldr	r3, [r0, #20]
   19be0:	bne	19d8c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x1ec>
   19be4:	ldr	r2, [r0, #16]
   19be8:	cmp	r3, r2
   19bec:	bcs	19d00 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x160>
   19bf0:	mov	r2, #34	; 0x22
   19bf4:	strb	r2, [r3]
   19bf8:	ldrb	r3, [r4, #26]
   19bfc:	ldr	r0, [r4, #20]
   19c00:	ldr	r5, [r4, #16]
   19c04:	cmp	r3, #0
   19c08:	addeq	r0, r0, #1
   19c0c:	add	r3, r0, sl
   19c10:	cmp	r5, r3
   19c14:	str	r0, [r4, #20]
   19c18:	bhi	19d10 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x170>
   19c1c:	cmp	r0, r5
   19c20:	bcs	19da8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x208>
   19c24:	sub	r5, r5, r0
   19c28:	cmp	sl, r5
   19c2c:	bls	19c78 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd8>
   19c30:	mov	sl, #0
   19c34:	mov	r2, r5
   19c38:	mov	r1, r6
   19c3c:	bl	1244c <memcpy@plt>
   19c40:	ldr	r3, [r4, #20]
   19c44:	mov	r0, r4
   19c48:	add	r3, r3, r5
   19c4c:	str	r3, [r4, #20]
   19c50:	ldr	r2, [r4, #44]	; 0x2c
   19c54:	mov	r1, sl
   19c58:	blx	r2
   19c5c:	ldr	r0, [r4, #20]
   19c60:	ldr	r3, [r4, #16]
   19c64:	sub	r7, r7, r5
   19c68:	add	r6, r6, r5
   19c6c:	sub	r5, r3, r0
   19c70:	cmp	r7, r5
   19c74:	bhi	19c34 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x94>
   19c78:	mov	r1, r6
   19c7c:	mov	r2, r7
   19c80:	bl	1244c <memcpy@plt>
   19c84:	ldr	sl, [r4, #20]
   19c88:	add	sl, sl, r7
   19c8c:	str	sl, [r4, #20]
   19c90:	mov	r3, #34	; 0x22
   19c94:	strb	r3, [sl]
   19c98:	ldr	r1, [r4, #20]
   19c9c:	ldrb	r3, [r4, #26]
   19ca0:	clz	r3, r3
   19ca4:	lsr	r3, r3, #5
   19ca8:	add	r2, r1, r3
   19cac:	add	r2, r2, #1
   19cb0:	mov	r0, #58	; 0x3a
   19cb4:	str	r2, [r4, #20]
   19cb8:	strb	r0, [r1, r3]
   19cbc:	ldr	r3, [r4, #20]
   19cc0:	mov	r2, #32
   19cc4:	strb	r2, [r3]
   19cc8:	ldrb	r3, [r4, #25]
   19ccc:	ldrb	r0, [r4, #27]
   19cd0:	ldr	r1, [r4, #20]
   19cd4:	adds	r3, r3, #0
   19cd8:	movne	r3, #1
   19cdc:	add	r2, r1, r3
   19ce0:	cmp	r0, #0
   19ce4:	str	r2, [r4, #20]
   19ce8:	bne	19d2c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x18c>
   19cec:	mov	r1, r8
   19cf0:	mov	r0, r4
   19cf4:	mov	r3, r9
   19cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   19cfc:	bx	r3
   19d00:	ldr	r3, [r0, #44]	; 0x2c
   19d04:	blx	r3
   19d08:	ldr	r3, [r4, #20]
   19d0c:	b	19bf0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x50>
   19d10:	mov	r2, sl
   19d14:	mov	r1, r6
   19d18:	bl	1244c <memcpy@plt>
   19d1c:	ldr	r7, [r4, #20]
   19d20:	add	sl, r7, sl
   19d24:	str	sl, [r4, #20]
   19d28:	b	19c90 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf0>
   19d2c:	cmp	r8, #99	; 0x63
   19d30:	bls	19dc4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x224>
   19d34:	ldr	r0, [pc, #212]	; 19e10 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x270>
   19d38:	mov	ip, #100	; 0x64
   19d3c:	ldr	lr, [pc, #208]	; 19e14 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x274>
   19d40:	umull	r5, r0, r0, r8
   19d44:	mov	r5, #0
   19d48:	lsr	r0, r0, #5
   19d4c:	strb	r5, [r2, #3]
   19d50:	mul	ip, ip, r0
   19d54:	add	r0, r0, #48	; 0x30
   19d58:	sub	r8, r8, ip
   19d5c:	mov	ip, #3
   19d60:	uxtb	r8, r8
   19d64:	ldrb	r5, [lr, r8, lsl #1]
   19d68:	add	r8, lr, r8, lsl #1
   19d6c:	strb	r5, [r2, #1]
   19d70:	ldrb	lr, [r8, #1]
   19d74:	strb	lr, [r2, #2]
   19d78:	strb	r0, [r1, r3]
   19d7c:	ldr	r3, [r4, #20]
   19d80:	add	r3, r3, ip
   19d84:	str	r3, [r4, #20]
   19d88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d8c:	add	r1, r3, #1
   19d90:	mov	r2, #10
   19d94:	str	r1, [r0, #20]
   19d98:	strb	r2, [r3]
   19d9c:	bl	145ac <test_print@@Base+0xdd8>
   19da0:	ldr	r3, [r4, #20]
   19da4:	b	19bf0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x50>
   19da8:	mov	r0, r4
   19dac:	ldr	r3, [r4, #44]	; 0x2c
   19db0:	mov	r1, #0
   19db4:	blx	r3
   19db8:	ldr	r5, [r4, #16]
   19dbc:	ldr	r0, [r4, #20]
   19dc0:	b	19c24 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x84>
   19dc4:	cmp	r8, #9
   19dc8:	bls	19df8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x258>
   19dcc:	ldr	r0, [pc, #64]	; 19e14 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x274>
   19dd0:	sxth	r8, r8
   19dd4:	mov	ip, #0
   19dd8:	strb	ip, [r2, #2]
   19ddc:	ldrb	lr, [r0, r8, lsl #1]
   19de0:	add	r0, r0, r8, lsl #1
   19de4:	mov	ip, #2
   19de8:	strb	lr, [r1, r3]
   19dec:	ldrb	r3, [r0, #1]
   19df0:	strb	r3, [r2, #1]
   19df4:	b	19d7c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x1dc>
   19df8:	add	r8, r8, #48	; 0x30
   19dfc:	mov	r0, #0
   19e00:	strb	r0, [r2, #1]
   19e04:	mov	ip, #1
   19e08:	strb	r8, [r1, r3]
   19e0c:	b	19d7c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x1dc>
   19e10:	mvnpl	r8, pc, lsl r5
   19e14:	andeq	r1, r2, r8, ror #12

00019e18 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   19e18:	cmp	r1, #0
   19e1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19e20:	mov	r4, r0
   19e24:	ldrh	r8, [r2, r3]
   19e28:	ldrne	r3, [r0, #20]
   19e2c:	movne	r2, #44	; 0x2c
   19e30:	addne	r1, r3, #1
   19e34:	strne	r1, [r0, #20]
   19e38:	strbne	r2, [r3]
   19e3c:	ldrb	r1, [r0, #25]
   19e40:	ldr	sl, [sp, #36]	; 0x24
   19e44:	ldr	r6, [sp, #32]
   19e48:	cmp	r1, #0
   19e4c:	ldr	r9, [sp, #40]	; 0x28
   19e50:	mov	r7, sl
   19e54:	ldr	r3, [r0, #20]
   19e58:	bne	19fb8 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x1a0>
   19e5c:	ldr	r2, [r0, #16]
   19e60:	cmp	r3, r2
   19e64:	bcs	19f74 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x15c>
   19e68:	mov	r2, #34	; 0x22
   19e6c:	strb	r2, [r3]
   19e70:	ldrb	r3, [r4, #26]
   19e74:	ldr	r0, [r4, #20]
   19e78:	ldr	r5, [r4, #16]
   19e7c:	cmp	r3, #0
   19e80:	addeq	r0, r0, #1
   19e84:	add	r3, r0, sl
   19e88:	cmp	r5, r3
   19e8c:	str	r0, [r4, #20]
   19e90:	bhi	19f84 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x16c>
   19e94:	cmp	r0, r5
   19e98:	bcs	19fd4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x1bc>
   19e9c:	sub	r5, r5, r0
   19ea0:	cmp	sl, r5
   19ea4:	bls	19ef0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd8>
   19ea8:	mov	sl, #0
   19eac:	mov	r2, r5
   19eb0:	mov	r1, r6
   19eb4:	bl	1244c <memcpy@plt>
   19eb8:	ldr	r3, [r4, #20]
   19ebc:	mov	r0, r4
   19ec0:	add	r3, r3, r5
   19ec4:	str	r3, [r4, #20]
   19ec8:	ldr	r2, [r4, #44]	; 0x2c
   19ecc:	mov	r1, sl
   19ed0:	blx	r2
   19ed4:	ldr	r0, [r4, #20]
   19ed8:	ldr	r3, [r4, #16]
   19edc:	sub	r7, r7, r5
   19ee0:	add	r6, r6, r5
   19ee4:	sub	r5, r3, r0
   19ee8:	cmp	r7, r5
   19eec:	bhi	19eac <flatcc_json_printer_uint16_enum_struct_field@@Base+0x94>
   19ef0:	mov	r1, r6
   19ef4:	mov	r2, r7
   19ef8:	bl	1244c <memcpy@plt>
   19efc:	ldr	sl, [r4, #20]
   19f00:	add	sl, sl, r7
   19f04:	str	sl, [r4, #20]
   19f08:	mov	r3, #34	; 0x22
   19f0c:	strb	r3, [sl]
   19f10:	ldr	r1, [r4, #20]
   19f14:	ldrb	r3, [r4, #26]
   19f18:	clz	r3, r3
   19f1c:	lsr	r3, r3, #5
   19f20:	add	r2, r1, r3
   19f24:	add	r2, r2, #1
   19f28:	mov	r0, #58	; 0x3a
   19f2c:	str	r2, [r4, #20]
   19f30:	strb	r0, [r1, r3]
   19f34:	ldr	r3, [r4, #20]
   19f38:	mov	r2, #32
   19f3c:	strb	r2, [r3]
   19f40:	ldrb	r2, [r4, #25]
   19f44:	ldrb	r3, [r4, #27]
   19f48:	ldr	r1, [r4, #20]
   19f4c:	cmp	r2, #0
   19f50:	addne	r1, r1, #1
   19f54:	cmp	r3, #0
   19f58:	str	r1, [r4, #20]
   19f5c:	bne	19fa0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x188>
   19f60:	mov	r1, r8
   19f64:	mov	r0, r4
   19f68:	mov	r3, r9
   19f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   19f70:	bx	r3
   19f74:	ldr	r3, [r0, #44]	; 0x2c
   19f78:	blx	r3
   19f7c:	ldr	r3, [r4, #20]
   19f80:	b	19e68 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x50>
   19f84:	mov	r2, sl
   19f88:	mov	r1, r6
   19f8c:	bl	1244c <memcpy@plt>
   19f90:	ldr	r7, [r4, #20]
   19f94:	add	sl, r7, sl
   19f98:	str	sl, [r4, #20]
   19f9c:	b	19f08 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf0>
   19fa0:	mov	r0, r8
   19fa4:	bl	13a60 <test_print@@Base+0x28c>
   19fa8:	ldr	r3, [r4, #20]
   19fac:	add	r0, r3, r0
   19fb0:	str	r0, [r4, #20]
   19fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19fb8:	add	r1, r3, #1
   19fbc:	mov	r2, #10
   19fc0:	str	r1, [r0, #20]
   19fc4:	strb	r2, [r3]
   19fc8:	bl	145ac <test_print@@Base+0xdd8>
   19fcc:	ldr	r3, [r4, #20]
   19fd0:	b	19e68 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x50>
   19fd4:	mov	r0, r4
   19fd8:	ldr	r3, [r4, #44]	; 0x2c
   19fdc:	mov	r1, #0
   19fe0:	blx	r3
   19fe4:	ldr	r5, [r4, #16]
   19fe8:	ldr	r0, [r4, #20]
   19fec:	b	19e9c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x84>

00019ff0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   19ff0:	cmp	r1, #0
   19ff4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19ff8:	mov	r4, r0
   19ffc:	ldr	r8, [r2, r3]
   1a000:	ldrne	r3, [r0, #20]
   1a004:	movne	r2, #44	; 0x2c
   1a008:	addne	r1, r3, #1
   1a00c:	strne	r1, [r0, #20]
   1a010:	strbne	r2, [r3]
   1a014:	ldrb	r1, [r0, #25]
   1a018:	ldr	sl, [sp, #36]	; 0x24
   1a01c:	ldr	r6, [sp, #32]
   1a020:	cmp	r1, #0
   1a024:	ldr	r9, [sp, #40]	; 0x28
   1a028:	mov	r7, sl
   1a02c:	ldr	r3, [r0, #20]
   1a030:	bne	1a190 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x1a0>
   1a034:	ldr	r2, [r0, #16]
   1a038:	cmp	r3, r2
   1a03c:	bcs	1a14c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x15c>
   1a040:	mov	r2, #34	; 0x22
   1a044:	strb	r2, [r3]
   1a048:	ldrb	r3, [r4, #26]
   1a04c:	ldr	r0, [r4, #20]
   1a050:	ldr	r5, [r4, #16]
   1a054:	cmp	r3, #0
   1a058:	addeq	r0, r0, #1
   1a05c:	add	r3, r0, sl
   1a060:	cmp	r5, r3
   1a064:	str	r0, [r4, #20]
   1a068:	bhi	1a15c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x16c>
   1a06c:	cmp	r0, r5
   1a070:	bcs	1a1ac <flatcc_json_printer_uint32_enum_struct_field@@Base+0x1bc>
   1a074:	sub	r5, r5, r0
   1a078:	cmp	sl, r5
   1a07c:	bls	1a0c8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd8>
   1a080:	mov	sl, #0
   1a084:	mov	r2, r5
   1a088:	mov	r1, r6
   1a08c:	bl	1244c <memcpy@plt>
   1a090:	ldr	r3, [r4, #20]
   1a094:	mov	r0, r4
   1a098:	add	r3, r3, r5
   1a09c:	str	r3, [r4, #20]
   1a0a0:	ldr	r2, [r4, #44]	; 0x2c
   1a0a4:	mov	r1, sl
   1a0a8:	blx	r2
   1a0ac:	ldr	r0, [r4, #20]
   1a0b0:	ldr	r3, [r4, #16]
   1a0b4:	sub	r7, r7, r5
   1a0b8:	add	r6, r6, r5
   1a0bc:	sub	r5, r3, r0
   1a0c0:	cmp	r7, r5
   1a0c4:	bhi	1a084 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x94>
   1a0c8:	mov	r1, r6
   1a0cc:	mov	r2, r7
   1a0d0:	bl	1244c <memcpy@plt>
   1a0d4:	ldr	sl, [r4, #20]
   1a0d8:	add	sl, sl, r7
   1a0dc:	str	sl, [r4, #20]
   1a0e0:	mov	r3, #34	; 0x22
   1a0e4:	strb	r3, [sl]
   1a0e8:	ldr	r1, [r4, #20]
   1a0ec:	ldrb	r3, [r4, #26]
   1a0f0:	clz	r3, r3
   1a0f4:	lsr	r3, r3, #5
   1a0f8:	add	r2, r1, r3
   1a0fc:	add	r2, r2, #1
   1a100:	mov	r0, #58	; 0x3a
   1a104:	str	r2, [r4, #20]
   1a108:	strb	r0, [r1, r3]
   1a10c:	ldr	r3, [r4, #20]
   1a110:	mov	r2, #32
   1a114:	strb	r2, [r3]
   1a118:	ldrb	r2, [r4, #25]
   1a11c:	ldrb	r3, [r4, #27]
   1a120:	ldr	r1, [r4, #20]
   1a124:	cmp	r2, #0
   1a128:	addne	r1, r1, #1
   1a12c:	cmp	r3, #0
   1a130:	str	r1, [r4, #20]
   1a134:	bne	1a178 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x188>
   1a138:	mov	r1, r8
   1a13c:	mov	r0, r4
   1a140:	mov	r3, r9
   1a144:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a148:	bx	r3
   1a14c:	ldr	r3, [r0, #44]	; 0x2c
   1a150:	blx	r3
   1a154:	ldr	r3, [r4, #20]
   1a158:	b	1a040 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x50>
   1a15c:	mov	r2, sl
   1a160:	mov	r1, r6
   1a164:	bl	1244c <memcpy@plt>
   1a168:	ldr	r7, [r4, #20]
   1a16c:	add	sl, r7, sl
   1a170:	str	sl, [r4, #20]
   1a174:	b	1a0e0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xf0>
   1a178:	mov	r0, r8
   1a17c:	bl	13bc8 <test_print@@Base+0x3f4>
   1a180:	ldr	r3, [r4, #20]
   1a184:	add	r0, r3, r0
   1a188:	str	r0, [r4, #20]
   1a18c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a190:	add	r1, r3, #1
   1a194:	mov	r2, #10
   1a198:	str	r1, [r0, #20]
   1a19c:	strb	r2, [r3]
   1a1a0:	bl	145ac <test_print@@Base+0xdd8>
   1a1a4:	ldr	r3, [r4, #20]
   1a1a8:	b	1a040 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x50>
   1a1ac:	mov	r0, r4
   1a1b0:	ldr	r3, [r4, #44]	; 0x2c
   1a1b4:	mov	r1, #0
   1a1b8:	blx	r3
   1a1bc:	ldr	r5, [r4, #16]
   1a1c0:	ldr	r0, [r4, #20]
   1a1c4:	b	1a074 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x84>

0001a1c8 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1a1c8:	cmp	r1, #0
   1a1cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1d0:	sub	sp, sp, #4
   1a1d4:	ldrd	r6, [r2, r3]
   1a1d8:	ldrne	r3, [r0, #20]
   1a1dc:	add	r8, sp, #40	; 0x28
   1a1e0:	addne	r1, r3, #1
   1a1e4:	movne	r2, #44	; 0x2c
   1a1e8:	strne	r1, [r0, #20]
   1a1ec:	ldm	r8, {r8, r9, sl}
   1a1f0:	mov	r4, r0
   1a1f4:	strbne	r2, [r3]
   1a1f8:	ldrb	r1, [r0, #25]
   1a1fc:	mov	fp, r9
   1a200:	ldr	r3, [r0, #20]
   1a204:	cmp	r1, #0
   1a208:	bne	1a378 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x1b0>
   1a20c:	ldr	r2, [r0, #16]
   1a210:	cmp	r3, r2
   1a214:	bcs	1a32c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x164>
   1a218:	mov	r2, #34	; 0x22
   1a21c:	strb	r2, [r3]
   1a220:	ldrb	r3, [r4, #26]
   1a224:	ldr	r0, [r4, #20]
   1a228:	ldr	r5, [r4, #16]
   1a22c:	cmp	r3, #0
   1a230:	addeq	r0, r0, #1
   1a234:	add	r3, r0, r9
   1a238:	cmp	r5, r3
   1a23c:	str	r0, [r4, #20]
   1a240:	bhi	1a33c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x174>
   1a244:	cmp	r0, r5
   1a248:	bcs	1a394 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x1cc>
   1a24c:	sub	r5, r5, r0
   1a250:	cmp	r9, r5
   1a254:	bls	1a2a0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
   1a258:	mov	r9, #0
   1a25c:	mov	r2, r5
   1a260:	mov	r1, r8
   1a264:	bl	1244c <memcpy@plt>
   1a268:	ldr	r3, [r4, #20]
   1a26c:	mov	r0, r4
   1a270:	add	r3, r3, r5
   1a274:	str	r3, [r4, #20]
   1a278:	ldr	r2, [r4, #44]	; 0x2c
   1a27c:	mov	r1, r9
   1a280:	blx	r2
   1a284:	ldr	r0, [r4, #20]
   1a288:	ldr	r3, [r4, #16]
   1a28c:	sub	fp, fp, r5
   1a290:	add	r8, r8, r5
   1a294:	sub	r5, r3, r0
   1a298:	cmp	fp, r5
   1a29c:	bhi	1a25c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x94>
   1a2a0:	mov	r1, r8
   1a2a4:	mov	r2, fp
   1a2a8:	bl	1244c <memcpy@plt>
   1a2ac:	ldr	r9, [r4, #20]
   1a2b0:	add	r9, r9, fp
   1a2b4:	str	r9, [r4, #20]
   1a2b8:	mov	r3, #34	; 0x22
   1a2bc:	strb	r3, [r9]
   1a2c0:	ldr	r1, [r4, #20]
   1a2c4:	ldrb	r3, [r4, #26]
   1a2c8:	clz	r3, r3
   1a2cc:	lsr	r3, r3, #5
   1a2d0:	add	r2, r1, r3
   1a2d4:	add	r2, r2, #1
   1a2d8:	mov	r0, #58	; 0x3a
   1a2dc:	str	r2, [r4, #20]
   1a2e0:	strb	r0, [r1, r3]
   1a2e4:	ldr	r3, [r4, #20]
   1a2e8:	mov	r2, #32
   1a2ec:	strb	r2, [r3]
   1a2f0:	ldrb	r1, [r4, #25]
   1a2f4:	ldrb	r3, [r4, #27]
   1a2f8:	ldr	r2, [r4, #20]
   1a2fc:	cmp	r1, #0
   1a300:	addne	r2, r2, #1
   1a304:	cmp	r3, #0
   1a308:	str	r2, [r4, #20]
   1a30c:	bne	1a358 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x190>
   1a310:	mov	r2, r6
   1a314:	mov	r3, r7
   1a318:	mov	r0, r4
   1a31c:	mov	r1, sl
   1a320:	add	sp, sp, #4
   1a324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a328:	bx	r1
   1a32c:	ldr	r3, [r0, #44]	; 0x2c
   1a330:	blx	r3
   1a334:	ldr	r3, [r4, #20]
   1a338:	b	1a218 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x50>
   1a33c:	mov	r2, r9
   1a340:	mov	r1, r8
   1a344:	bl	1244c <memcpy@plt>
   1a348:	ldr	fp, [r4, #20]
   1a34c:	add	r9, fp, r9
   1a350:	str	r9, [r4, #20]
   1a354:	b	1a2b8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xf0>
   1a358:	mov	r0, r6
   1a35c:	mov	r1, r7
   1a360:	bl	13ef0 <test_print@@Base+0x71c>
   1a364:	ldr	r3, [r4, #20]
   1a368:	add	r0, r3, r0
   1a36c:	str	r0, [r4, #20]
   1a370:	add	sp, sp, #4
   1a374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a378:	add	r1, r3, #1
   1a37c:	mov	r2, #10
   1a380:	str	r1, [r0, #20]
   1a384:	strb	r2, [r3]
   1a388:	bl	145ac <test_print@@Base+0xdd8>
   1a38c:	ldr	r3, [r4, #20]
   1a390:	b	1a218 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x50>
   1a394:	mov	r0, r4
   1a398:	ldr	r3, [r4, #44]	; 0x2c
   1a39c:	mov	r1, #0
   1a3a0:	blx	r3
   1a3a4:	ldr	r5, [r4, #16]
   1a3a8:	ldr	r0, [r4, #20]
   1a3ac:	b	1a24c <flatcc_json_printer_uint64_enum_struct_field@@Base+0x84>

0001a3b0 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1a3b0:	cmp	r1, #0
   1a3b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a3b8:	mov	r4, r0
   1a3bc:	ldrsb	r6, [r2, r3]
   1a3c0:	ldrne	r3, [r0, #20]
   1a3c4:	movne	r2, #44	; 0x2c
   1a3c8:	addne	r1, r3, #1
   1a3cc:	strne	r1, [r0, #20]
   1a3d0:	strbne	r2, [r3]
   1a3d4:	ldrb	r1, [r0, #25]
   1a3d8:	ldr	sl, [sp, #36]	; 0x24
   1a3dc:	ldr	r7, [sp, #32]
   1a3e0:	cmp	r1, #0
   1a3e4:	ldr	r9, [sp, #40]	; 0x28
   1a3e8:	mov	r8, sl
   1a3ec:	ldr	r3, [r0, #20]
   1a3f0:	bne	1a5f4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x244>
   1a3f4:	ldr	r2, [r0, #16]
   1a3f8:	cmp	r3, r2
   1a3fc:	bcs	1a580 <flatcc_json_printer_int8_enum_struct_field@@Base+0x1d0>
   1a400:	mov	r2, #34	; 0x22
   1a404:	strb	r2, [r3]
   1a408:	ldrb	r3, [r4, #26]
   1a40c:	ldr	r0, [r4, #20]
   1a410:	ldr	r5, [r4, #16]
   1a414:	cmp	r3, #0
   1a418:	addeq	r0, r0, #1
   1a41c:	add	r3, r0, sl
   1a420:	cmp	r5, r3
   1a424:	str	r0, [r4, #20]
   1a428:	bhi	1a590 <flatcc_json_printer_int8_enum_struct_field@@Base+0x1e0>
   1a42c:	cmp	r0, r5
   1a430:	bcs	1a628 <flatcc_json_printer_int8_enum_struct_field@@Base+0x278>
   1a434:	sub	r5, r5, r0
   1a438:	cmp	sl, r5
   1a43c:	bls	1a488 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
   1a440:	mov	sl, #0
   1a444:	mov	r2, r5
   1a448:	mov	r1, r7
   1a44c:	bl	1244c <memcpy@plt>
   1a450:	ldr	r3, [r4, #20]
   1a454:	mov	r0, r4
   1a458:	add	r3, r3, r5
   1a45c:	str	r3, [r4, #20]
   1a460:	ldr	r2, [r4, #44]	; 0x2c
   1a464:	mov	r1, sl
   1a468:	blx	r2
   1a46c:	ldr	r0, [r4, #20]
   1a470:	ldr	r3, [r4, #16]
   1a474:	sub	r8, r8, r5
   1a478:	add	r7, r7, r5
   1a47c:	sub	r5, r3, r0
   1a480:	cmp	r8, r5
   1a484:	bhi	1a444 <flatcc_json_printer_int8_enum_struct_field@@Base+0x94>
   1a488:	mov	r1, r7
   1a48c:	mov	r2, r8
   1a490:	bl	1244c <memcpy@plt>
   1a494:	ldr	sl, [r4, #20]
   1a498:	add	sl, sl, r8
   1a49c:	str	sl, [r4, #20]
   1a4a0:	mov	r3, #34	; 0x22
   1a4a4:	strb	r3, [sl]
   1a4a8:	ldr	r1, [r4, #20]
   1a4ac:	ldrb	r3, [r4, #26]
   1a4b0:	clz	r3, r3
   1a4b4:	lsr	r3, r3, #5
   1a4b8:	add	r2, r1, r3
   1a4bc:	add	r2, r2, #1
   1a4c0:	mov	r0, #58	; 0x3a
   1a4c4:	str	r2, [r4, #20]
   1a4c8:	strb	r0, [r1, r3]
   1a4cc:	ldr	r3, [r4, #20]
   1a4d0:	mov	r2, #32
   1a4d4:	strb	r2, [r3]
   1a4d8:	ldrb	r2, [r4, #25]
   1a4dc:	ldrb	r1, [r4, #27]
   1a4e0:	ldr	r0, [r4, #20]
   1a4e4:	adds	r2, r2, #0
   1a4e8:	movne	r2, #1
   1a4ec:	add	r3, r0, r2
   1a4f0:	cmp	r1, #0
   1a4f4:	str	r3, [r4, #20]
   1a4f8:	beq	1a5ac <flatcc_json_printer_int8_enum_struct_field@@Base+0x1fc>
   1a4fc:	cmp	r6, #0
   1a500:	lsr	r1, r6, #31
   1a504:	rsblt	r6, r6, #0
   1a508:	movlt	ip, #45	; 0x2d
   1a50c:	sxtblt	r6, r6
   1a510:	addlt	r3, r3, #1
   1a514:	uxtb	r6, r6
   1a518:	strblt	ip, [r0, r2]
   1a51c:	cmp	r6, #99	; 0x63
   1a520:	bls	1a5c0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x210>
   1a524:	ldr	r2, [pc, #280]	; 1a644 <flatcc_json_printer_int8_enum_struct_field@@Base+0x294>
   1a528:	mov	ip, #100	; 0x64
   1a52c:	ldr	r0, [pc, #276]	; 1a648 <flatcc_json_printer_int8_enum_struct_field@@Base+0x298>
   1a530:	umull	lr, r2, r2, r6
   1a534:	mov	lr, #0
   1a538:	lsr	r2, r2, #5
   1a53c:	strb	lr, [r3, #3]
   1a540:	mul	r2, ip, r2
   1a544:	mov	ip, #49	; 0x31
   1a548:	sub	r6, r6, r2
   1a54c:	mov	r2, #3
   1a550:	uxtb	r6, r6
   1a554:	ldrb	lr, [r0, r6, lsl #1]
   1a558:	add	r6, r0, r6, lsl #1
   1a55c:	strb	lr, [r3, #1]
   1a560:	ldrb	r0, [r6, #1]
   1a564:	strb	ip, [r3]
   1a568:	strb	r0, [r3, #2]
   1a56c:	ldr	r3, [r4, #20]
   1a570:	add	r2, r1, r2
   1a574:	add	r3, r3, r2
   1a578:	str	r3, [r4, #20]
   1a57c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a580:	ldr	r3, [r0, #44]	; 0x2c
   1a584:	blx	r3
   1a588:	ldr	r3, [r4, #20]
   1a58c:	b	1a400 <flatcc_json_printer_int8_enum_struct_field@@Base+0x50>
   1a590:	mov	r2, sl
   1a594:	mov	r1, r7
   1a598:	bl	1244c <memcpy@plt>
   1a59c:	ldr	r8, [r4, #20]
   1a5a0:	add	sl, r8, sl
   1a5a4:	str	sl, [r4, #20]
   1a5a8:	b	1a4a0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xf0>
   1a5ac:	mov	r1, r6
   1a5b0:	mov	r0, r4
   1a5b4:	mov	r3, r9
   1a5b8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a5bc:	bx	r3
   1a5c0:	cmp	r6, #9
   1a5c4:	bls	1a610 <flatcc_json_printer_int8_enum_struct_field@@Base+0x260>
   1a5c8:	ldr	r2, [pc, #120]	; 1a648 <flatcc_json_printer_int8_enum_struct_field@@Base+0x298>
   1a5cc:	sxth	r6, r6
   1a5d0:	mov	r0, #0
   1a5d4:	strb	r0, [r3, #2]
   1a5d8:	ldrb	r0, [r2, r6, lsl #1]
   1a5dc:	add	r6, r2, r6, lsl #1
   1a5e0:	mov	r2, #2
   1a5e4:	strb	r0, [r3]
   1a5e8:	ldrb	r0, [r6, #1]
   1a5ec:	strb	r0, [r3, #1]
   1a5f0:	b	1a56c <flatcc_json_printer_int8_enum_struct_field@@Base+0x1bc>
   1a5f4:	add	r1, r3, #1
   1a5f8:	mov	r2, #10
   1a5fc:	str	r1, [r0, #20]
   1a600:	strb	r2, [r3]
   1a604:	bl	145ac <test_print@@Base+0xdd8>
   1a608:	ldr	r3, [r4, #20]
   1a60c:	b	1a400 <flatcc_json_printer_int8_enum_struct_field@@Base+0x50>
   1a610:	add	r6, r6, #48	; 0x30
   1a614:	mov	r0, #0
   1a618:	mov	r2, #1
   1a61c:	strb	r6, [r3]
   1a620:	strb	r0, [r3, #1]
   1a624:	b	1a56c <flatcc_json_printer_int8_enum_struct_field@@Base+0x1bc>
   1a628:	mov	r0, r4
   1a62c:	ldr	r3, [r4, #44]	; 0x2c
   1a630:	mov	r1, #0
   1a634:	blx	r3
   1a638:	ldr	r5, [r4, #16]
   1a63c:	ldr	r0, [r4, #20]
   1a640:	b	1a434 <flatcc_json_printer_int8_enum_struct_field@@Base+0x84>
   1a644:	mvnpl	r8, pc, lsl r5
   1a648:	andeq	r1, r2, r8, ror #12

0001a64c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1a64c:	cmp	r1, #0
   1a650:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a654:	mov	r4, r0
   1a658:	ldrsh	r8, [r2, r3]
   1a65c:	ldrne	r3, [r0, #20]
   1a660:	movne	r2, #44	; 0x2c
   1a664:	addne	r1, r3, #1
   1a668:	strne	r1, [r0, #20]
   1a66c:	strbne	r2, [r3]
   1a670:	ldrb	r1, [r0, #25]
   1a674:	ldr	sl, [sp, #36]	; 0x24
   1a678:	ldr	r6, [sp, #32]
   1a67c:	cmp	r1, #0
   1a680:	ldr	r9, [sp, #40]	; 0x28
   1a684:	mov	r7, sl
   1a688:	ldr	r3, [r0, #20]
   1a68c:	bne	1a810 <flatcc_json_printer_int16_enum_struct_field@@Base+0x1c4>
   1a690:	ldr	r2, [r0, #16]
   1a694:	cmp	r3, r2
   1a698:	bcs	1a7d0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x184>
   1a69c:	mov	r2, #34	; 0x22
   1a6a0:	strb	r2, [r3]
   1a6a4:	ldrb	r3, [r4, #26]
   1a6a8:	ldr	r0, [r4, #20]
   1a6ac:	ldr	r5, [r4, #16]
   1a6b0:	cmp	r3, #0
   1a6b4:	addeq	r0, r0, #1
   1a6b8:	add	r3, r0, sl
   1a6bc:	cmp	r5, r3
   1a6c0:	str	r0, [r4, #20]
   1a6c4:	bhi	1a7e0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x194>
   1a6c8:	cmp	r0, r5
   1a6cc:	bcs	1a82c <flatcc_json_printer_int16_enum_struct_field@@Base+0x1e0>
   1a6d0:	sub	r5, r5, r0
   1a6d4:	cmp	sl, r5
   1a6d8:	bls	1a724 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd8>
   1a6dc:	mov	sl, #0
   1a6e0:	mov	r2, r5
   1a6e4:	mov	r1, r6
   1a6e8:	bl	1244c <memcpy@plt>
   1a6ec:	ldr	r3, [r4, #20]
   1a6f0:	mov	r0, r4
   1a6f4:	add	r3, r3, r5
   1a6f8:	str	r3, [r4, #20]
   1a6fc:	ldr	r2, [r4, #44]	; 0x2c
   1a700:	mov	r1, sl
   1a704:	blx	r2
   1a708:	ldr	r0, [r4, #20]
   1a70c:	ldr	r3, [r4, #16]
   1a710:	sub	r7, r7, r5
   1a714:	add	r6, r6, r5
   1a718:	sub	r5, r3, r0
   1a71c:	cmp	r7, r5
   1a720:	bhi	1a6e0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x94>
   1a724:	mov	r1, r6
   1a728:	mov	r2, r7
   1a72c:	bl	1244c <memcpy@plt>
   1a730:	ldr	sl, [r4, #20]
   1a734:	add	sl, sl, r7
   1a738:	str	sl, [r4, #20]
   1a73c:	mov	r3, #34	; 0x22
   1a740:	strb	r3, [sl]
   1a744:	ldr	r1, [r4, #20]
   1a748:	ldrb	r3, [r4, #26]
   1a74c:	clz	r3, r3
   1a750:	lsr	r3, r3, #5
   1a754:	add	r2, r1, r3
   1a758:	add	r2, r2, #1
   1a75c:	mov	r0, #58	; 0x3a
   1a760:	str	r2, [r4, #20]
   1a764:	strb	r0, [r1, r3]
   1a768:	ldr	r3, [r4, #20]
   1a76c:	mov	r2, #32
   1a770:	strb	r2, [r3]
   1a774:	ldrb	r3, [r4, #25]
   1a778:	ldrb	r0, [r4, #27]
   1a77c:	ldr	r2, [r4, #20]
   1a780:	adds	r3, r3, #0
   1a784:	movne	r3, #1
   1a788:	add	r1, r2, r3
   1a78c:	cmp	r0, #0
   1a790:	str	r1, [r4, #20]
   1a794:	beq	1a7fc <flatcc_json_printer_int16_enum_struct_field@@Base+0x1b0>
   1a798:	cmp	r8, #0
   1a79c:	lsr	r5, r8, #31
   1a7a0:	rsblt	r8, r8, #0
   1a7a4:	movlt	r0, #45	; 0x2d
   1a7a8:	sxthlt	r8, r8
   1a7ac:	strblt	r0, [r2, r3]
   1a7b0:	addlt	r1, r1, #1
   1a7b4:	uxth	r0, r8
   1a7b8:	bl	13a60 <test_print@@Base+0x28c>
   1a7bc:	ldr	r3, [r4, #20]
   1a7c0:	add	r0, r5, r0
   1a7c4:	add	r3, r3, r0
   1a7c8:	str	r3, [r4, #20]
   1a7cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a7d0:	ldr	r3, [r0, #44]	; 0x2c
   1a7d4:	blx	r3
   1a7d8:	ldr	r3, [r4, #20]
   1a7dc:	b	1a69c <flatcc_json_printer_int16_enum_struct_field@@Base+0x50>
   1a7e0:	mov	r2, sl
   1a7e4:	mov	r1, r6
   1a7e8:	bl	1244c <memcpy@plt>
   1a7ec:	ldr	r7, [r4, #20]
   1a7f0:	add	sl, r7, sl
   1a7f4:	str	sl, [r4, #20]
   1a7f8:	b	1a73c <flatcc_json_printer_int16_enum_struct_field@@Base+0xf0>
   1a7fc:	mov	r1, r8
   1a800:	mov	r0, r4
   1a804:	mov	r3, r9
   1a808:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a80c:	bx	r3
   1a810:	add	r1, r3, #1
   1a814:	mov	r2, #10
   1a818:	str	r1, [r0, #20]
   1a81c:	strb	r2, [r3]
   1a820:	bl	145ac <test_print@@Base+0xdd8>
   1a824:	ldr	r3, [r4, #20]
   1a828:	b	1a69c <flatcc_json_printer_int16_enum_struct_field@@Base+0x50>
   1a82c:	mov	r0, r4
   1a830:	ldr	r3, [r4, #44]	; 0x2c
   1a834:	mov	r1, #0
   1a838:	blx	r3
   1a83c:	ldr	r5, [r4, #16]
   1a840:	ldr	r0, [r4, #20]
   1a844:	b	1a6d0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x84>

0001a848 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1a848:	cmp	r1, #0
   1a84c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a850:	mov	r4, r0
   1a854:	ldr	r8, [r2, r3]
   1a858:	ldrne	r3, [r0, #20]
   1a85c:	movne	r2, #44	; 0x2c
   1a860:	addne	r1, r3, #1
   1a864:	strne	r1, [r0, #20]
   1a868:	strbne	r2, [r3]
   1a86c:	ldrb	r1, [r0, #25]
   1a870:	ldr	sl, [sp, #36]	; 0x24
   1a874:	ldr	r6, [sp, #32]
   1a878:	cmp	r1, #0
   1a87c:	ldr	r9, [sp, #40]	; 0x28
   1a880:	mov	r7, sl
   1a884:	ldr	r3, [r0, #20]
   1a888:	bne	1aa08 <flatcc_json_printer_int32_enum_struct_field@@Base+0x1c0>
   1a88c:	ldr	r2, [r0, #16]
   1a890:	cmp	r3, r2
   1a894:	bcs	1a9c8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x180>
   1a898:	mov	r2, #34	; 0x22
   1a89c:	strb	r2, [r3]
   1a8a0:	ldrb	r3, [r4, #26]
   1a8a4:	ldr	r0, [r4, #20]
   1a8a8:	ldr	r5, [r4, #16]
   1a8ac:	cmp	r3, #0
   1a8b0:	addeq	r0, r0, #1
   1a8b4:	add	r3, r0, sl
   1a8b8:	cmp	r5, r3
   1a8bc:	str	r0, [r4, #20]
   1a8c0:	bhi	1a9d8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x190>
   1a8c4:	cmp	r0, r5
   1a8c8:	bcs	1aa24 <flatcc_json_printer_int32_enum_struct_field@@Base+0x1dc>
   1a8cc:	sub	r5, r5, r0
   1a8d0:	cmp	sl, r5
   1a8d4:	bls	1a920 <flatcc_json_printer_int32_enum_struct_field@@Base+0xd8>
   1a8d8:	mov	sl, #0
   1a8dc:	mov	r2, r5
   1a8e0:	mov	r1, r6
   1a8e4:	bl	1244c <memcpy@plt>
   1a8e8:	ldr	r3, [r4, #20]
   1a8ec:	mov	r0, r4
   1a8f0:	add	r3, r3, r5
   1a8f4:	str	r3, [r4, #20]
   1a8f8:	ldr	r2, [r4, #44]	; 0x2c
   1a8fc:	mov	r1, sl
   1a900:	blx	r2
   1a904:	ldr	r0, [r4, #20]
   1a908:	ldr	r3, [r4, #16]
   1a90c:	sub	r7, r7, r5
   1a910:	add	r6, r6, r5
   1a914:	sub	r5, r3, r0
   1a918:	cmp	r7, r5
   1a91c:	bhi	1a8dc <flatcc_json_printer_int32_enum_struct_field@@Base+0x94>
   1a920:	mov	r1, r6
   1a924:	mov	r2, r7
   1a928:	bl	1244c <memcpy@plt>
   1a92c:	ldr	sl, [r4, #20]
   1a930:	add	sl, sl, r7
   1a934:	str	sl, [r4, #20]
   1a938:	mov	r3, #34	; 0x22
   1a93c:	strb	r3, [sl]
   1a940:	ldr	r1, [r4, #20]
   1a944:	ldrb	r3, [r4, #26]
   1a948:	clz	r3, r3
   1a94c:	lsr	r3, r3, #5
   1a950:	add	r2, r1, r3
   1a954:	add	r2, r2, #1
   1a958:	mov	r0, #58	; 0x3a
   1a95c:	str	r2, [r4, #20]
   1a960:	strb	r0, [r1, r3]
   1a964:	ldr	r3, [r4, #20]
   1a968:	mov	r2, #32
   1a96c:	strb	r2, [r3]
   1a970:	ldrb	r3, [r4, #25]
   1a974:	ldrb	r0, [r4, #27]
   1a978:	ldr	r2, [r4, #20]
   1a97c:	adds	r3, r3, #0
   1a980:	movne	r3, #1
   1a984:	add	r1, r2, r3
   1a988:	cmp	r0, #0
   1a98c:	str	r1, [r4, #20]
   1a990:	beq	1a9f4 <flatcc_json_printer_int32_enum_struct_field@@Base+0x1ac>
   1a994:	cmp	r8, #0
   1a998:	movlt	r0, #45	; 0x2d
   1a99c:	lsr	r5, r8, #31
   1a9a0:	rsblt	r8, r8, #0
   1a9a4:	strblt	r0, [r2, r3]
   1a9a8:	addlt	r1, r1, #1
   1a9ac:	mov	r0, r8
   1a9b0:	bl	13bc8 <test_print@@Base+0x3f4>
   1a9b4:	ldr	r3, [r4, #20]
   1a9b8:	add	r0, r5, r0
   1a9bc:	add	r3, r3, r0
   1a9c0:	str	r3, [r4, #20]
   1a9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a9c8:	ldr	r3, [r0, #44]	; 0x2c
   1a9cc:	blx	r3
   1a9d0:	ldr	r3, [r4, #20]
   1a9d4:	b	1a898 <flatcc_json_printer_int32_enum_struct_field@@Base+0x50>
   1a9d8:	mov	r2, sl
   1a9dc:	mov	r1, r6
   1a9e0:	bl	1244c <memcpy@plt>
   1a9e4:	ldr	r7, [r4, #20]
   1a9e8:	add	sl, r7, sl
   1a9ec:	str	sl, [r4, #20]
   1a9f0:	b	1a938 <flatcc_json_printer_int32_enum_struct_field@@Base+0xf0>
   1a9f4:	mov	r1, r8
   1a9f8:	mov	r0, r4
   1a9fc:	mov	r3, r9
   1aa00:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1aa04:	bx	r3
   1aa08:	add	r1, r3, #1
   1aa0c:	mov	r2, #10
   1aa10:	str	r1, [r0, #20]
   1aa14:	strb	r2, [r3]
   1aa18:	bl	145ac <test_print@@Base+0xdd8>
   1aa1c:	ldr	r3, [r4, #20]
   1aa20:	b	1a898 <flatcc_json_printer_int32_enum_struct_field@@Base+0x50>
   1aa24:	mov	r0, r4
   1aa28:	ldr	r3, [r4, #44]	; 0x2c
   1aa2c:	mov	r1, #0
   1aa30:	blx	r3
   1aa34:	ldr	r5, [r4, #16]
   1aa38:	ldr	r0, [r4, #20]
   1aa3c:	b	1a8cc <flatcc_json_printer_int32_enum_struct_field@@Base+0x84>

0001aa40 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1aa40:	cmp	r1, #0
   1aa44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aa48:	sub	sp, sp, #4
   1aa4c:	ldrd	r6, [r2, r3]
   1aa50:	ldrne	r3, [r0, #20]
   1aa54:	add	r8, sp, #40	; 0x28
   1aa58:	addne	r1, r3, #1
   1aa5c:	movne	r2, #44	; 0x2c
   1aa60:	strne	r1, [r0, #20]
   1aa64:	ldm	r8, {r8, r9, sl}
   1aa68:	mov	r4, r0
   1aa6c:	strbne	r2, [r3]
   1aa70:	ldrb	r1, [r0, #25]
   1aa74:	mov	fp, r9
   1aa78:	ldr	r3, [r0, #20]
   1aa7c:	cmp	r1, #0
   1aa80:	bne	1ac1c <flatcc_json_printer_int64_enum_struct_field@@Base+0x1dc>
   1aa84:	ldr	r2, [r0, #16]
   1aa88:	cmp	r3, r2
   1aa8c:	bcs	1abd4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x194>
   1aa90:	mov	r2, #34	; 0x22
   1aa94:	strb	r2, [r3]
   1aa98:	ldrb	r3, [r4, #26]
   1aa9c:	ldr	r0, [r4, #20]
   1aaa0:	ldr	r5, [r4, #16]
   1aaa4:	cmp	r3, #0
   1aaa8:	addeq	r0, r0, #1
   1aaac:	add	r3, r0, r9
   1aab0:	cmp	r5, r3
   1aab4:	str	r0, [r4, #20]
   1aab8:	bhi	1abe4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1a4>
   1aabc:	cmp	r0, r5
   1aac0:	bcs	1ac38 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1f8>
   1aac4:	sub	r5, r5, r0
   1aac8:	cmp	r9, r5
   1aacc:	bls	1ab18 <flatcc_json_printer_int64_enum_struct_field@@Base+0xd8>
   1aad0:	mov	r9, #0
   1aad4:	mov	r2, r5
   1aad8:	mov	r1, r8
   1aadc:	bl	1244c <memcpy@plt>
   1aae0:	ldr	r3, [r4, #20]
   1aae4:	mov	r0, r4
   1aae8:	add	r3, r3, r5
   1aaec:	str	r3, [r4, #20]
   1aaf0:	ldr	r2, [r4, #44]	; 0x2c
   1aaf4:	mov	r1, r9
   1aaf8:	blx	r2
   1aafc:	ldr	r0, [r4, #20]
   1ab00:	ldr	r3, [r4, #16]
   1ab04:	sub	fp, fp, r5
   1ab08:	add	r8, r8, r5
   1ab0c:	sub	r5, r3, r0
   1ab10:	cmp	fp, r5
   1ab14:	bhi	1aad4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x94>
   1ab18:	mov	r1, r8
   1ab1c:	mov	r2, fp
   1ab20:	bl	1244c <memcpy@plt>
   1ab24:	ldr	r9, [r4, #20]
   1ab28:	add	r9, r9, fp
   1ab2c:	str	r9, [r4, #20]
   1ab30:	mov	r3, #34	; 0x22
   1ab34:	strb	r3, [r9]
   1ab38:	ldr	r1, [r4, #20]
   1ab3c:	ldrb	r3, [r4, #26]
   1ab40:	clz	r3, r3
   1ab44:	lsr	r3, r3, #5
   1ab48:	add	r2, r1, r3
   1ab4c:	add	r2, r2, #1
   1ab50:	mov	r0, #58	; 0x3a
   1ab54:	str	r2, [r4, #20]
   1ab58:	strb	r0, [r1, r3]
   1ab5c:	ldr	r3, [r4, #20]
   1ab60:	mov	r2, #32
   1ab64:	strb	r2, [r3]
   1ab68:	ldrb	r3, [r4, #25]
   1ab6c:	ldrb	r0, [r4, #27]
   1ab70:	ldr	r1, [r4, #20]
   1ab74:	adds	r3, r3, #0
   1ab78:	movne	r3, #1
   1ab7c:	add	r2, r1, r3
   1ab80:	cmp	r0, #0
   1ab84:	str	r2, [r4, #20]
   1ab88:	beq	1ac00 <flatcc_json_printer_int64_enum_struct_field@@Base+0x1c0>
   1ab8c:	cmp	r6, #0
   1ab90:	sbcs	r0, r7, #0
   1ab94:	lsr	r5, r7, #31
   1ab98:	bge	1abb0 <flatcc_json_printer_int64_enum_struct_field@@Base+0x170>
   1ab9c:	rsbs	r6, r6, #0
   1aba0:	rsc	r7, r7, #0
   1aba4:	add	r2, r2, #1
   1aba8:	mov	r0, #45	; 0x2d
   1abac:	strb	r0, [r1, r3]
   1abb0:	mov	r0, r6
   1abb4:	mov	r1, r7
   1abb8:	bl	13ef0 <test_print@@Base+0x71c>
   1abbc:	ldr	r3, [r4, #20]
   1abc0:	add	r0, r5, r0
   1abc4:	add	r3, r3, r0
   1abc8:	str	r3, [r4, #20]
   1abcc:	add	sp, sp, #4
   1abd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1abd4:	ldr	r3, [r0, #44]	; 0x2c
   1abd8:	blx	r3
   1abdc:	ldr	r3, [r4, #20]
   1abe0:	b	1aa90 <flatcc_json_printer_int64_enum_struct_field@@Base+0x50>
   1abe4:	mov	r2, r9
   1abe8:	mov	r1, r8
   1abec:	bl	1244c <memcpy@plt>
   1abf0:	ldr	fp, [r4, #20]
   1abf4:	add	r9, fp, r9
   1abf8:	str	r9, [r4, #20]
   1abfc:	b	1ab30 <flatcc_json_printer_int64_enum_struct_field@@Base+0xf0>
   1ac00:	mov	r2, r6
   1ac04:	mov	r3, r7
   1ac08:	mov	r0, r4
   1ac0c:	mov	r1, sl
   1ac10:	add	sp, sp, #4
   1ac14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac18:	bx	r1
   1ac1c:	add	r1, r3, #1
   1ac20:	mov	r2, #10
   1ac24:	str	r1, [r0, #20]
   1ac28:	strb	r2, [r3]
   1ac2c:	bl	145ac <test_print@@Base+0xdd8>
   1ac30:	ldr	r3, [r4, #20]
   1ac34:	b	1aa90 <flatcc_json_printer_int64_enum_struct_field@@Base+0x50>
   1ac38:	mov	r0, r4
   1ac3c:	ldr	r3, [r4, #44]	; 0x2c
   1ac40:	mov	r1, #0
   1ac44:	blx	r3
   1ac48:	ldr	r5, [r4, #16]
   1ac4c:	ldr	r0, [r4, #20]
   1ac50:	b	1aac4 <flatcc_json_printer_int64_enum_struct_field@@Base+0x84>

0001ac54 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1ac54:	cmp	r1, #0
   1ac58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ac5c:	mov	r4, r0
   1ac60:	ldrb	r8, [r2, r3]
   1ac64:	ldrne	r3, [r0, #20]
   1ac68:	movne	r2, #44	; 0x2c
   1ac6c:	addne	r1, r3, #1
   1ac70:	strne	r1, [r0, #20]
   1ac74:	strbne	r2, [r3]
   1ac78:	ldrb	r1, [r0, #25]
   1ac7c:	ldr	sl, [sp, #36]	; 0x24
   1ac80:	ldr	r6, [sp, #32]
   1ac84:	cmp	r1, #0
   1ac88:	ldr	r9, [sp, #40]	; 0x28
   1ac8c:	mov	r7, sl
   1ac90:	ldr	r3, [r0, #20]
   1ac94:	bne	1ae14 <flatcc_json_printer_bool_enum_struct_field@@Base+0x1c0>
   1ac98:	ldr	r2, [r0, #16]
   1ac9c:	cmp	r3, r2
   1aca0:	bcs	1adb4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x160>
   1aca4:	mov	r2, #34	; 0x22
   1aca8:	strb	r2, [r3]
   1acac:	ldrb	r3, [r4, #26]
   1acb0:	ldr	r0, [r4, #20]
   1acb4:	ldr	r5, [r4, #16]
   1acb8:	cmp	r3, #0
   1acbc:	addeq	r0, r0, #1
   1acc0:	add	r3, r0, sl
   1acc4:	cmp	r5, r3
   1acc8:	str	r0, [r4, #20]
   1accc:	bhi	1adc4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x170>
   1acd0:	cmp	r0, r5
   1acd4:	bcs	1ae30 <flatcc_json_printer_bool_enum_struct_field@@Base+0x1dc>
   1acd8:	sub	r5, r5, r0
   1acdc:	cmp	sl, r5
   1ace0:	bls	1ad2c <flatcc_json_printer_bool_enum_struct_field@@Base+0xd8>
   1ace4:	mov	sl, #0
   1ace8:	mov	r2, r5
   1acec:	mov	r1, r6
   1acf0:	bl	1244c <memcpy@plt>
   1acf4:	ldr	r3, [r4, #20]
   1acf8:	mov	r0, r4
   1acfc:	add	r3, r3, r5
   1ad00:	str	r3, [r4, #20]
   1ad04:	ldr	r2, [r4, #44]	; 0x2c
   1ad08:	mov	r1, sl
   1ad0c:	blx	r2
   1ad10:	ldr	r0, [r4, #20]
   1ad14:	ldr	r3, [r4, #16]
   1ad18:	sub	r7, r7, r5
   1ad1c:	add	r6, r6, r5
   1ad20:	sub	r5, r3, r0
   1ad24:	cmp	r7, r5
   1ad28:	bhi	1ace8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x94>
   1ad2c:	mov	r1, r6
   1ad30:	mov	r2, r7
   1ad34:	bl	1244c <memcpy@plt>
   1ad38:	ldr	sl, [r4, #20]
   1ad3c:	add	sl, sl, r7
   1ad40:	str	sl, [r4, #20]
   1ad44:	mov	r3, #34	; 0x22
   1ad48:	strb	r3, [sl]
   1ad4c:	ldr	r1, [r4, #20]
   1ad50:	ldrb	r3, [r4, #26]
   1ad54:	clz	r3, r3
   1ad58:	lsr	r3, r3, #5
   1ad5c:	add	r2, r1, r3
   1ad60:	add	r2, r2, #1
   1ad64:	mov	r0, #58	; 0x3a
   1ad68:	str	r2, [r4, #20]
   1ad6c:	strb	r0, [r1, r3]
   1ad70:	ldr	r3, [r4, #20]
   1ad74:	mov	r2, #32
   1ad78:	strb	r2, [r3]
   1ad7c:	ldrb	r3, [r4, #25]
   1ad80:	ldrb	r0, [r4, #27]
   1ad84:	ldr	r1, [r4, #20]
   1ad88:	adds	r3, r3, #0
   1ad8c:	movne	r3, #1
   1ad90:	add	r2, r1, r3
   1ad94:	cmp	r0, #0
   1ad98:	str	r2, [r4, #20]
   1ad9c:	bne	1ade0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x18c>
   1ada0:	mov	r1, r8
   1ada4:	mov	r0, r4
   1ada8:	mov	r3, r9
   1adac:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1adb0:	bx	r3
   1adb4:	ldr	r3, [r0, #44]	; 0x2c
   1adb8:	blx	r3
   1adbc:	ldr	r3, [r4, #20]
   1adc0:	b	1aca4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x50>
   1adc4:	mov	r2, sl
   1adc8:	mov	r1, r6
   1adcc:	bl	1244c <memcpy@plt>
   1add0:	ldr	r7, [r4, #20]
   1add4:	add	sl, r7, sl
   1add8:	str	sl, [r4, #20]
   1addc:	b	1ad44 <flatcc_json_printer_bool_enum_struct_field@@Base+0xf0>
   1ade0:	cmp	r8, #0
   1ade4:	ldr	r0, [pc, #120]	; 1ae64 <flatcc_json_printer_bool_enum_struct_field@@Base+0x210>
   1ade8:	bne	1ae4c <flatcc_json_printer_bool_enum_struct_field@@Base+0x1f8>
   1adec:	add	lr, r0, #1792	; 0x700
   1adf0:	mov	ip, #5
   1adf4:	ldrh	lr, [lr, #4]
   1adf8:	ldr	r0, [r0, #1792]	; 0x700
   1adfc:	str	r0, [r1, r3]
   1ae00:	strh	lr, [r2, #4]
   1ae04:	ldr	r3, [r4, #20]
   1ae08:	add	r3, r3, ip
   1ae0c:	str	r3, [r4, #20]
   1ae10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae14:	add	r1, r3, #1
   1ae18:	mov	r2, #10
   1ae1c:	str	r1, [r0, #20]
   1ae20:	strb	r2, [r3]
   1ae24:	bl	145ac <test_print@@Base+0xdd8>
   1ae28:	ldr	r3, [r4, #20]
   1ae2c:	b	1aca4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x50>
   1ae30:	mov	r0, r4
   1ae34:	ldr	r3, [r4, #44]	; 0x2c
   1ae38:	mov	r1, #0
   1ae3c:	blx	r3
   1ae40:	ldr	r5, [r4, #16]
   1ae44:	ldr	r0, [r4, #20]
   1ae48:	b	1acd8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x84>
   1ae4c:	ldrb	lr, [r0, #1788]	; 0x6fc
   1ae50:	ldr	r0, [r0, #1784]	; 0x6f8
   1ae54:	mov	ip, #4
   1ae58:	str	r0, [r1, r3]
   1ae5c:	strb	lr, [r2, #4]
   1ae60:	b	1ae04 <flatcc_json_printer_bool_enum_struct_field@@Base+0x1b0>
   1ae64:	andeq	r1, r2, r8, ror #12

0001ae68 <flatcc_json_printer_uint8_vector_field@@Base>:
   1ae68:	add	r2, r2, #2
   1ae6c:	ldr	ip, [r1, #8]
   1ae70:	lsl	r2, r2, #1
   1ae74:	cmp	ip, r2
   1ae78:	bxle	lr
   1ae7c:	ldr	ip, [r1, #4]
   1ae80:	ldrh	ip, [ip, r2]
   1ae84:	cmp	ip, #0
   1ae88:	bxeq	lr
   1ae8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ae90:	sub	sp, sp, #12
   1ae94:	ldr	r5, [r1]
   1ae98:	adds	lr, r5, ip
   1ae9c:	beq	1af28 <flatcc_json_printer_uint8_vector_field@@Base+0xc0>
   1aea0:	ldr	r2, [r1, #16]
   1aea4:	cmp	r2, #0
   1aea8:	add	r2, r2, #1
   1aeac:	str	r2, [r1, #16]
   1aeb0:	ldrne	r2, [r0, #20]
   1aeb4:	movne	r1, #44	; 0x2c
   1aeb8:	addne	r4, r2, #1
   1aebc:	strne	r4, [r0, #20]
   1aec0:	strbne	r1, [r2]
   1aec4:	mov	r1, r3
   1aec8:	ldr	r3, [r5, ip]
   1aecc:	mov	r4, r0
   1aed0:	ldr	r2, [sp, #48]	; 0x30
   1aed4:	ldr	sl, [lr, r3]
   1aed8:	add	fp, lr, r3
   1aedc:	bl	14b4c <test_print@@Base+0x1378>
   1aee0:	ldr	r3, [r4, #32]
   1aee4:	ldr	r2, [r4, #20]
   1aee8:	add	r3, r3, #1
   1aeec:	add	r0, r2, #1
   1aef0:	mov	r1, #91	; 0x5b
   1aef4:	cmp	sl, #0
   1aef8:	str	r3, [r4, #32]
   1aefc:	str	r0, [r4, #20]
   1af00:	strb	r1, [r2]
   1af04:	bne	1af30 <flatcc_json_printer_uint8_vector_field@@Base+0xc8>
   1af08:	ldr	r0, [r4, #20]
   1af0c:	ldrb	r3, [r4, #25]
   1af10:	cmp	r3, #0
   1af14:	bne	1b130 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   1af18:	add	r2, r0, #1
   1af1c:	mov	r3, #93	; 0x5d
   1af20:	str	r2, [r4, #20]
   1af24:	strb	r3, [r0]
   1af28:	add	sp, sp, #12
   1af2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af30:	ldrb	r3, [r4, #25]
   1af34:	cmp	r3, #0
   1af38:	bne	1b15c <flatcc_json_printer_uint8_vector_field@@Base+0x2f4>
   1af3c:	ldr	r1, [r4, #20]
   1af40:	ldr	r2, [r4, #16]
   1af44:	cmp	r1, r2
   1af48:	bcs	1b180 <flatcc_json_printer_uint8_vector_field@@Base+0x318>
   1af4c:	ldrb	r0, [fp, #4]
   1af50:	bl	147ac <test_print@@Base+0xfd8>
   1af54:	ldr	r3, [r4, #20]
   1af58:	cmp	sl, #1
   1af5c:	add	r6, fp, #4
   1af60:	add	r0, r3, r0
   1af64:	str	r0, [r4, #20]
   1af68:	beq	1af0c <flatcc_json_printer_uint8_vector_field@@Base+0xa4>
   1af6c:	add	r3, sl, #3
   1af70:	ldr	r8, [pc, #544]	; 1b198 <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   1af74:	str	r3, [sp, #4]
   1af78:	mov	r7, #0
   1af7c:	mov	r9, #32
   1af80:	b	1afe0 <flatcc_json_printer_uint8_vector_field@@Base+0x178>
   1af84:	ldr	r2, [pc, #528]	; 1b19c <flatcc_json_printer_uint8_vector_field@@Base+0x334>
   1af88:	strb	r7, [r3, #3]
   1af8c:	umull	r2, r0, r2, ip
   1af90:	mov	r2, #100	; 0x64
   1af94:	lsr	r0, r0, #5
   1af98:	add	r1, r0, #48	; 0x30
   1af9c:	mul	r2, r2, r0
   1afa0:	mov	r0, #3
   1afa4:	sub	r2, ip, r2
   1afa8:	uxtb	r2, r2
   1afac:	ldrb	ip, [r8, r2, lsl #1]
   1afb0:	add	r2, r8, r2, lsl #1
   1afb4:	strb	ip, [r3, #1]
   1afb8:	ldrb	r2, [r2, #1]
   1afbc:	strb	r1, [r3]
   1afc0:	strb	r2, [r3, #2]
   1afc4:	ldr	r2, [sp, #4]
   1afc8:	ldr	r3, [r4, #20]
   1afcc:	sub	r2, r2, r6
   1afd0:	add	r0, r3, r0
   1afd4:	cmn	fp, r2
   1afd8:	str	r0, [r4, #20]
   1afdc:	beq	1af0c <flatcc_json_printer_uint8_vector_field@@Base+0xa4>
   1afe0:	add	r3, r0, #1
   1afe4:	str	r3, [r4, #20]
   1afe8:	mov	r3, #44	; 0x2c
   1afec:	strb	r3, [r0]
   1aff0:	ldrb	r3, [r4, #25]
   1aff4:	cmp	r3, #0
   1aff8:	ldr	r3, [r4, #20]
   1affc:	bne	1b044 <flatcc_json_printer_uint8_vector_field@@Base+0x1dc>
   1b000:	ldr	r2, [r4, #16]
   1b004:	cmp	r3, r2
   1b008:	bcs	1b090 <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   1b00c:	ldrb	ip, [r6, #1]!
   1b010:	cmp	ip, #99	; 0x63
   1b014:	bhi	1af84 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   1b018:	cmp	ip, #9
   1b01c:	bls	1b100 <flatcc_json_printer_uint8_vector_field@@Base+0x298>
   1b020:	sxth	r2, ip
   1b024:	strb	r7, [r3, #2]
   1b028:	ldrb	r1, [r8, r2, lsl #1]
   1b02c:	add	r2, r8, r2, lsl #1
   1b030:	mov	r0, #2
   1b034:	strb	r1, [r3]
   1b038:	ldrb	r2, [r2, #1]
   1b03c:	strb	r2, [r3, #1]
   1b040:	b	1afc4 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   1b044:	add	r2, r3, #1
   1b048:	str	r2, [r4, #20]
   1b04c:	mov	r2, #10
   1b050:	strb	r2, [r3]
   1b054:	ldrb	r3, [r4, #25]
   1b058:	ldr	r2, [r4, #32]
   1b05c:	ldr	r0, [r4, #20]
   1b060:	ldr	sl, [r4, #16]
   1b064:	mul	r5, r2, r3
   1b068:	add	r2, r0, r5
   1b06c:	cmp	sl, r2
   1b070:	bcc	1b0a8 <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   1b074:	mov	r2, r5
   1b078:	mov	r1, r9
   1b07c:	bl	124e8 <memset@plt>
   1b080:	ldr	r2, [r4, #20]
   1b084:	add	r3, r2, r5
   1b088:	str	r3, [r4, #20]
   1b08c:	b	1b00c <flatcc_json_printer_uint8_vector_field@@Base+0x1a4>
   1b090:	ldr	r3, [r4, #44]	; 0x2c
   1b094:	mov	r1, r7
   1b098:	mov	r0, r4
   1b09c:	blx	r3
   1b0a0:	ldr	r3, [r4, #20]
   1b0a4:	b	1b00c <flatcc_json_printer_uint8_vector_field@@Base+0x1a4>
   1b0a8:	cmp	r0, sl
   1b0ac:	bcs	1b114 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   1b0b0:	sub	sl, sl, r0
   1b0b4:	cmp	r5, sl
   1b0b8:	bls	1b074 <flatcc_json_printer_uint8_vector_field@@Base+0x20c>
   1b0bc:	mov	r2, sl
   1b0c0:	mov	r1, r9
   1b0c4:	bl	124e8 <memset@plt>
   1b0c8:	ldr	r3, [r4, #20]
   1b0cc:	mov	r0, r4
   1b0d0:	add	r3, r3, sl
   1b0d4:	str	r3, [r4, #20]
   1b0d8:	ldr	r2, [r4, #44]	; 0x2c
   1b0dc:	mov	r1, r7
   1b0e0:	blx	r2
   1b0e4:	ldr	r0, [r4, #20]
   1b0e8:	ldr	r3, [r4, #16]
   1b0ec:	sub	r5, r5, sl
   1b0f0:	sub	sl, r3, r0
   1b0f4:	cmp	r5, sl
   1b0f8:	bhi	1b0bc <flatcc_json_printer_uint8_vector_field@@Base+0x254>
   1b0fc:	b	1b074 <flatcc_json_printer_uint8_vector_field@@Base+0x20c>
   1b100:	add	r2, ip, #48	; 0x30
   1b104:	mov	r0, #1
   1b108:	strb	r2, [r3]
   1b10c:	strb	r7, [r3, #1]
   1b110:	b	1afc4 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   1b114:	mov	r0, r4
   1b118:	ldr	r2, [r4, #44]	; 0x2c
   1b11c:	mov	r1, r7
   1b120:	blx	r2
   1b124:	ldr	sl, [r4, #16]
   1b128:	ldr	r0, [r4, #20]
   1b12c:	b	1b0b0 <flatcc_json_printer_uint8_vector_field@@Base+0x248>
   1b130:	add	r2, r0, #1
   1b134:	mov	r3, #10
   1b138:	str	r2, [r4, #20]
   1b13c:	strb	r3, [r0]
   1b140:	ldr	r3, [r4, #32]
   1b144:	mov	r0, r4
   1b148:	sub	r3, r3, #1
   1b14c:	str	r3, [r4, #32]
   1b150:	bl	145ac <test_print@@Base+0xdd8>
   1b154:	ldr	r0, [r4, #20]
   1b158:	b	1af18 <flatcc_json_printer_uint8_vector_field@@Base+0xb0>
   1b15c:	ldr	r3, [r4, #20]
   1b160:	mov	r2, #10
   1b164:	add	r1, r3, #1
   1b168:	str	r1, [r4, #20]
   1b16c:	mov	r0, r4
   1b170:	strb	r2, [r3]
   1b174:	bl	145ac <test_print@@Base+0xdd8>
   1b178:	ldr	r1, [r4, #20]
   1b17c:	b	1af4c <flatcc_json_printer_uint8_vector_field@@Base+0xe4>
   1b180:	mov	r1, r3
   1b184:	mov	r0, r4
   1b188:	ldr	r3, [r4, #44]	; 0x2c
   1b18c:	blx	r3
   1b190:	ldr	r1, [r4, #20]
   1b194:	b	1af4c <flatcc_json_printer_uint8_vector_field@@Base+0xe4>
   1b198:	andeq	r1, r2, r8, ror #12
   1b19c:	mvnpl	r8, pc, lsl r5

0001b1a0 <flatcc_json_printer_utype_vector_field@@Base>:
   1b1a0:	b	1ae68 <flatcc_json_printer_uint8_vector_field@@Base>

0001b1a4 <flatcc_json_printer_uint16_vector_field@@Base>:
   1b1a4:	add	r2, r2, #2
   1b1a8:	ldr	ip, [r1, #8]
   1b1ac:	lsl	r2, r2, #1
   1b1b0:	cmp	ip, r2
   1b1b4:	bxle	lr
   1b1b8:	ldr	ip, [r1, #4]
   1b1bc:	ldrh	ip, [ip, r2]
   1b1c0:	cmp	ip, #0
   1b1c4:	bxeq	lr
   1b1c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1cc:	ldr	r5, [r1]
   1b1d0:	adds	lr, r5, ip
   1b1d4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1d8:	ldr	r2, [r1, #16]
   1b1dc:	cmp	r2, #0
   1b1e0:	add	r2, r2, #1
   1b1e4:	str	r2, [r1, #16]
   1b1e8:	ldrne	r2, [r0, #20]
   1b1ec:	movne	r1, #44	; 0x2c
   1b1f0:	addne	r4, r2, #1
   1b1f4:	strne	r4, [r0, #20]
   1b1f8:	strbne	r1, [r2]
   1b1fc:	mov	r1, r3
   1b200:	ldr	r3, [r5, ip]
   1b204:	mov	r4, r0
   1b208:	ldr	r2, [sp, #40]	; 0x28
   1b20c:	ldr	r6, [lr, r3]
   1b210:	add	r8, lr, r3
   1b214:	bl	14b4c <test_print@@Base+0x1378>
   1b218:	ldr	r3, [r4, #32]
   1b21c:	ldr	r2, [r4, #20]
   1b220:	add	r3, r3, #1
   1b224:	add	r0, r2, #1
   1b228:	mov	r1, #91	; 0x5b
   1b22c:	cmp	r6, #0
   1b230:	str	r3, [r4, #32]
   1b234:	str	r0, [r4, #20]
   1b238:	strb	r1, [r2]
   1b23c:	bne	1b264 <flatcc_json_printer_uint16_vector_field@@Base+0xc0>
   1b240:	ldr	r0, [r4, #20]
   1b244:	ldrb	r3, [r4, #25]
   1b248:	cmp	r3, #0
   1b24c:	bne	1b504 <flatcc_json_printer_uint16_vector_field@@Base+0x360>
   1b250:	add	r2, r0, #1
   1b254:	mov	r3, #93	; 0x5d
   1b258:	str	r2, [r4, #20]
   1b25c:	strb	r3, [r0]
   1b260:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b264:	ldrb	r3, [r4, #25]
   1b268:	cmp	r3, #0
   1b26c:	bne	1b530 <flatcc_json_printer_uint16_vector_field@@Base+0x38c>
   1b270:	ldr	r1, [r4, #20]
   1b274:	ldr	r2, [r4, #16]
   1b278:	cmp	r1, r2
   1b27c:	bcs	1b554 <flatcc_json_printer_uint16_vector_field@@Base+0x3b0>
   1b280:	ldrh	r0, [r8, #4]
   1b284:	bl	13a60 <test_print@@Base+0x28c>
   1b288:	ldr	r3, [r4, #20]
   1b28c:	cmp	r6, #1
   1b290:	add	r8, r8, #4
   1b294:	sub	r6, r6, #2
   1b298:	add	r0, r3, r0
   1b29c:	str	r0, [r4, #20]
   1b2a0:	beq	1b244 <flatcc_json_printer_uint16_vector_field@@Base+0xa0>
   1b2a4:	mov	r7, #0
   1b2a8:	ldr	r9, [pc, #700]	; 1b56c <flatcc_json_printer_uint16_vector_field@@Base+0x3c8>
   1b2ac:	b	1b354 <flatcc_json_printer_uint16_vector_field@@Base+0x1b0>
   1b2b0:	ldr	r1, [pc, #696]	; 1b570 <flatcc_json_printer_uint16_vector_field@@Base+0x3cc>
   1b2b4:	cmp	r3, r1
   1b2b8:	bls	1b420 <flatcc_json_printer_uint16_vector_field@@Base+0x27c>
   1b2bc:	ldr	r1, [pc, #688]	; 1b574 <flatcc_json_printer_uint16_vector_field@@Base+0x3d0>
   1b2c0:	strb	r7, [r2, #5]
   1b2c4:	add	ip, r2, #3
   1b2c8:	umull	r1, r0, r1, r3
   1b2cc:	mov	r1, #100	; 0x64
   1b2d0:	lsr	r0, r0, #5
   1b2d4:	mov	lr, #5
   1b2d8:	mul	r1, r1, r0
   1b2dc:	sub	r1, r3, r1
   1b2e0:	uxth	r3, r0
   1b2e4:	uxth	r1, r1
   1b2e8:	ldrb	r0, [r9, r1, lsl #1]
   1b2ec:	add	r1, r9, r1, lsl #1
   1b2f0:	strb	r0, [r2, #3]
   1b2f4:	ldrb	r1, [r1, #1]
   1b2f8:	strb	r1, [r2, #4]
   1b2fc:	ldr	r2, [pc, #624]	; 1b574 <flatcc_json_printer_uint16_vector_field@@Base+0x3d0>
   1b300:	mov	r1, #100	; 0x64
   1b304:	umull	r2, r0, r2, r3
   1b308:	sub	r2, ip, #2
   1b30c:	lsr	r0, r0, #5
   1b310:	mul	r1, r1, r0
   1b314:	sub	r1, r3, r1
   1b318:	uxth	r3, r0
   1b31c:	uxth	r1, r1
   1b320:	ldrb	r0, [r9, r1, lsl #1]
   1b324:	add	r1, r9, r1, lsl #1
   1b328:	strb	r0, [ip, #-2]
   1b32c:	ldrb	r1, [r1, #1]
   1b330:	strb	r1, [ip, #-1]
   1b334:	add	r3, r3, #48	; 0x30
   1b338:	strb	r3, [r2, #-1]
   1b33c:	ldr	r0, [r4, #20]
   1b340:	cmp	r6, #0
   1b344:	add	r0, r0, lr
   1b348:	sub	r6, r6, #1
   1b34c:	str	r0, [r4, #20]
   1b350:	beq	1b244 <flatcc_json_printer_uint16_vector_field@@Base+0xa0>
   1b354:	add	r3, r0, #1
   1b358:	str	r3, [r4, #20]
   1b35c:	mov	r3, #44	; 0x2c
   1b360:	strb	r3, [r0]
   1b364:	ldrb	r3, [r4, #25]
   1b368:	cmp	r3, #0
   1b36c:	bne	1b3d0 <flatcc_json_printer_uint16_vector_field@@Base+0x22c>
   1b370:	ldr	r2, [r4, #20]
   1b374:	ldr	r3, [r4, #16]
   1b378:	cmp	r2, r3
   1b37c:	bcs	1b464 <flatcc_json_printer_uint16_vector_field@@Base+0x2c0>
   1b380:	ldrh	r3, [r8, #2]!
   1b384:	ldr	r1, [pc, #492]	; 1b578 <flatcc_json_printer_uint16_vector_field@@Base+0x3d4>
   1b388:	cmp	r3, r1
   1b38c:	bhi	1b2b0 <flatcc_json_printer_uint16_vector_field@@Base+0x10c>
   1b390:	cmp	r3, #99	; 0x63
   1b394:	strbhi	r7, [r2, #3]
   1b398:	addhi	ip, r2, #3
   1b39c:	movhi	lr, #3
   1b3a0:	bhi	1b2fc <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   1b3a4:	cmp	r3, #9
   1b3a8:	strbhi	r7, [r2, #2]
   1b3ac:	addhi	r0, r2, #2
   1b3b0:	movhi	lr, #2
   1b3b4:	bls	1b4d8 <flatcc_json_printer_uint16_vector_field@@Base+0x334>
   1b3b8:	ldrb	r2, [r9, r3, lsl #1]
   1b3bc:	add	r3, r9, r3, lsl #1
   1b3c0:	strb	r2, [r0, #-2]
   1b3c4:	ldrb	r3, [r3, #1]
   1b3c8:	strb	r3, [r0, #-1]
   1b3cc:	b	1b33c <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   1b3d0:	ldr	r3, [r4, #20]
   1b3d4:	mov	r2, #10
   1b3d8:	add	r1, r3, #1
   1b3dc:	str	r1, [r4, #20]
   1b3e0:	strb	r2, [r3]
   1b3e4:	ldrb	r3, [r4, #25]
   1b3e8:	ldr	r2, [r4, #32]
   1b3ec:	ldr	r0, [r4, #20]
   1b3f0:	ldr	r5, [r4, #16]
   1b3f4:	mul	sl, r2, r3
   1b3f8:	add	r3, r0, sl
   1b3fc:	cmp	r5, r3
   1b400:	bcc	1b47c <flatcc_json_printer_uint16_vector_field@@Base+0x2d8>
   1b404:	mov	r2, sl
   1b408:	mov	r1, #32
   1b40c:	bl	124e8 <memset@plt>
   1b410:	ldr	r2, [r4, #20]
   1b414:	add	r2, r2, sl
   1b418:	str	r2, [r4, #20]
   1b41c:	b	1b380 <flatcc_json_printer_uint16_vector_field@@Base+0x1dc>
   1b420:	ldr	r1, [pc, #332]	; 1b574 <flatcc_json_printer_uint16_vector_field@@Base+0x3d0>
   1b424:	strb	r7, [r2, #4]
   1b428:	add	r0, r2, #2
   1b42c:	umull	r1, ip, r1, r3
   1b430:	mov	r1, #100	; 0x64
   1b434:	lsr	ip, ip, #5
   1b438:	mov	lr, #4
   1b43c:	mul	r1, r1, ip
   1b440:	sub	r1, r3, r1
   1b444:	uxth	r3, ip
   1b448:	uxth	r1, r1
   1b44c:	ldrb	ip, [r9, r1, lsl #1]
   1b450:	add	r1, r9, r1, lsl #1
   1b454:	strb	ip, [r2, #2]
   1b458:	ldrb	r1, [r1, #1]
   1b45c:	strb	r1, [r2, #3]
   1b460:	b	1b3b8 <flatcc_json_printer_uint16_vector_field@@Base+0x214>
   1b464:	ldr	r3, [r4, #44]	; 0x2c
   1b468:	mov	r1, r7
   1b46c:	mov	r0, r4
   1b470:	blx	r3
   1b474:	ldr	r2, [r4, #20]
   1b478:	b	1b380 <flatcc_json_printer_uint16_vector_field@@Base+0x1dc>
   1b47c:	cmp	r0, r5
   1b480:	bcs	1b4e8 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   1b484:	sub	r5, r5, r0
   1b488:	cmp	sl, r5
   1b48c:	bls	1b404 <flatcc_json_printer_uint16_vector_field@@Base+0x260>
   1b490:	mov	fp, #32
   1b494:	mov	r2, r5
   1b498:	mov	r1, fp
   1b49c:	bl	124e8 <memset@plt>
   1b4a0:	ldr	r3, [r4, #20]
   1b4a4:	mov	r0, r4
   1b4a8:	add	r3, r3, r5
   1b4ac:	str	r3, [r4, #20]
   1b4b0:	ldr	r2, [r4, #44]	; 0x2c
   1b4b4:	mov	r1, r7
   1b4b8:	blx	r2
   1b4bc:	ldr	r0, [r4, #20]
   1b4c0:	ldr	r3, [r4, #16]
   1b4c4:	sub	sl, sl, r5
   1b4c8:	sub	r5, r3, r0
   1b4cc:	cmp	sl, r5
   1b4d0:	bhi	1b494 <flatcc_json_printer_uint16_vector_field@@Base+0x2f0>
   1b4d4:	b	1b404 <flatcc_json_printer_uint16_vector_field@@Base+0x260>
   1b4d8:	strb	r7, [r2, #1]
   1b4dc:	mov	lr, #1
   1b4e0:	add	r2, r2, #1
   1b4e4:	b	1b334 <flatcc_json_printer_uint16_vector_field@@Base+0x190>
   1b4e8:	mov	r0, r4
   1b4ec:	ldr	r3, [r4, #44]	; 0x2c
   1b4f0:	mov	r1, r7
   1b4f4:	blx	r3
   1b4f8:	ldr	r5, [r4, #16]
   1b4fc:	ldr	r0, [r4, #20]
   1b500:	b	1b484 <flatcc_json_printer_uint16_vector_field@@Base+0x2e0>
   1b504:	add	r2, r0, #1
   1b508:	mov	r3, #10
   1b50c:	str	r2, [r4, #20]
   1b510:	strb	r3, [r0]
   1b514:	ldr	r3, [r4, #32]
   1b518:	mov	r0, r4
   1b51c:	sub	r3, r3, #1
   1b520:	str	r3, [r4, #32]
   1b524:	bl	145ac <test_print@@Base+0xdd8>
   1b528:	ldr	r0, [r4, #20]
   1b52c:	b	1b250 <flatcc_json_printer_uint16_vector_field@@Base+0xac>
   1b530:	ldr	r3, [r4, #20]
   1b534:	mov	r2, #10
   1b538:	add	r1, r3, #1
   1b53c:	str	r1, [r4, #20]
   1b540:	mov	r0, r4
   1b544:	strb	r2, [r3]
   1b548:	bl	145ac <test_print@@Base+0xdd8>
   1b54c:	ldr	r1, [r4, #20]
   1b550:	b	1b280 <flatcc_json_printer_uint16_vector_field@@Base+0xdc>
   1b554:	mov	r1, r3
   1b558:	mov	r0, r4
   1b55c:	ldr	r3, [r4, #44]	; 0x2c
   1b560:	blx	r3
   1b564:	ldr	r1, [r4, #20]
   1b568:	b	1b280 <flatcc_json_printer_uint16_vector_field@@Base+0xdc>
   1b56c:	andeq	r1, r2, r8, ror #12
   1b570:	andeq	r2, r0, pc, lsl #14
   1b574:	mvnpl	r8, pc, lsl r5
   1b578:	andeq	r0, r0, r7, ror #7

0001b57c <flatcc_json_printer_uint32_vector_field@@Base>:
   1b57c:	add	r2, r2, #2
   1b580:	ldr	ip, [r1, #8]
   1b584:	lsl	r2, r2, #1
   1b588:	cmp	ip, r2
   1b58c:	bxle	lr
   1b590:	ldr	ip, [r1, #4]
   1b594:	ldrh	ip, [ip, r2]
   1b598:	cmp	ip, #0
   1b59c:	bxeq	lr
   1b5a0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5a4:	ldr	lr, [r1]
   1b5a8:	adds	r5, lr, ip
   1b5ac:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5b0:	ldr	r2, [r1, #16]
   1b5b4:	cmp	r2, #0
   1b5b8:	add	r2, r2, #1
   1b5bc:	str	r2, [r1, #16]
   1b5c0:	ldrne	r2, [r0, #20]
   1b5c4:	movne	r1, #44	; 0x2c
   1b5c8:	addne	r4, r2, #1
   1b5cc:	strne	r4, [r0, #20]
   1b5d0:	strbne	r1, [r2]
   1b5d4:	mov	r1, r3
   1b5d8:	ldr	r3, [lr, ip]
   1b5dc:	mov	r4, r0
   1b5e0:	ldr	r2, [sp, #40]	; 0x28
   1b5e4:	ldr	r6, [r5, r3]
   1b5e8:	add	r7, r5, r3
   1b5ec:	bl	14b4c <test_print@@Base+0x1378>
   1b5f0:	ldr	r3, [r4, #32]
   1b5f4:	ldr	r2, [r4, #20]
   1b5f8:	add	r3, r3, #1
   1b5fc:	add	r0, r2, #1
   1b600:	mov	r1, #91	; 0x5b
   1b604:	cmp	r6, #0
   1b608:	str	r3, [r4, #32]
   1b60c:	str	r0, [r4, #20]
   1b610:	strb	r1, [r2]
   1b614:	bne	1b63c <flatcc_json_printer_uint32_vector_field@@Base+0xc0>
   1b618:	ldr	r0, [r4, #20]
   1b61c:	ldrb	r3, [r4, #25]
   1b620:	cmp	r3, #0
   1b624:	bne	1b7b0 <flatcc_json_printer_uint32_vector_field@@Base+0x234>
   1b628:	add	r2, r0, #1
   1b62c:	mov	r3, #93	; 0x5d
   1b630:	str	r2, [r4, #20]
   1b634:	strb	r3, [r0]
   1b638:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b63c:	ldrb	r3, [r4, #25]
   1b640:	cmp	r3, #0
   1b644:	bne	1b7dc <flatcc_json_printer_uint32_vector_field@@Base+0x260>
   1b648:	ldr	r1, [r4, #20]
   1b64c:	ldr	r2, [r4, #16]
   1b650:	cmp	r1, r2
   1b654:	bcs	1b800 <flatcc_json_printer_uint32_vector_field@@Base+0x284>
   1b658:	ldr	r0, [r7, #4]
   1b65c:	bl	13bc8 <test_print@@Base+0x3f4>
   1b660:	ldr	r3, [r4, #20]
   1b664:	cmp	r6, #1
   1b668:	add	r7, r7, #8
   1b66c:	sub	r6, r6, #2
   1b670:	add	r0, r3, r0
   1b674:	str	r0, [r4, #20]
   1b678:	beq	1b61c <flatcc_json_printer_uint32_vector_field@@Base+0xa0>
   1b67c:	mov	sl, #44	; 0x2c
   1b680:	mov	r9, #0
   1b684:	mov	r8, #32
   1b688:	b	1b6bc <flatcc_json_printer_uint32_vector_field@@Base+0x140>
   1b68c:	ldr	r1, [r4, #20]
   1b690:	ldr	r3, [r4, #16]
   1b694:	cmp	r1, r3
   1b698:	bcs	1b724 <flatcc_json_printer_uint32_vector_field@@Base+0x1a8>
   1b69c:	ldr	r0, [r7], #4
   1b6a0:	bl	13bc8 <test_print@@Base+0x3f4>
   1b6a4:	ldr	r3, [r4, #20]
   1b6a8:	cmp	r6, #0
   1b6ac:	sub	r6, r6, #1
   1b6b0:	add	r0, r3, r0
   1b6b4:	str	r0, [r4, #20]
   1b6b8:	beq	1b61c <flatcc_json_printer_uint32_vector_field@@Base+0xa0>
   1b6bc:	add	r3, r0, #1
   1b6c0:	str	r3, [r4, #20]
   1b6c4:	strb	sl, [r0]
   1b6c8:	ldrb	r3, [r4, #25]
   1b6cc:	cmp	r3, #0
   1b6d0:	beq	1b68c <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   1b6d4:	ldr	r3, [r4, #20]
   1b6d8:	add	r2, r3, #1
   1b6dc:	str	r2, [r4, #20]
   1b6e0:	mov	r2, #10
   1b6e4:	strb	r2, [r3]
   1b6e8:	ldrb	r1, [r4, #25]
   1b6ec:	ldr	r5, [r4, #32]
   1b6f0:	ldr	r0, [r4, #20]
   1b6f4:	ldr	r3, [r4, #16]
   1b6f8:	mul	r5, r5, r1
   1b6fc:	add	r2, r0, r5
   1b700:	cmp	r3, r2
   1b704:	bcc	1b73c <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   1b708:	mov	r1, r8
   1b70c:	mov	r2, r5
   1b710:	bl	124e8 <memset@plt>
   1b714:	ldr	r1, [r4, #20]
   1b718:	add	r1, r1, r5
   1b71c:	str	r1, [r4, #20]
   1b720:	b	1b69c <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   1b724:	mov	r1, r9
   1b728:	ldr	r3, [r4, #44]	; 0x2c
   1b72c:	mov	r0, r4
   1b730:	blx	r3
   1b734:	ldr	r1, [r4, #20]
   1b738:	b	1b69c <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   1b73c:	cmp	r0, r3
   1b740:	bcs	1b794 <flatcc_json_printer_uint32_vector_field@@Base+0x218>
   1b744:	sub	fp, r3, r0
   1b748:	cmp	r5, fp
   1b74c:	bls	1b708 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   1b750:	mov	r2, fp
   1b754:	mov	r1, r8
   1b758:	bl	124e8 <memset@plt>
   1b75c:	ldr	r1, [r4, #20]
   1b760:	ldr	r2, [r4, #44]	; 0x2c
   1b764:	add	r1, r1, fp
   1b768:	str	r1, [r4, #20]
   1b76c:	mov	r0, r4
   1b770:	mov	r1, r9
   1b774:	blx	r2
   1b778:	ldr	r0, [r4, #20]
   1b77c:	ldr	r2, [r4, #16]
   1b780:	sub	r5, r5, fp
   1b784:	sub	fp, r2, r0
   1b788:	cmp	r5, fp
   1b78c:	bhi	1b750 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   1b790:	b	1b708 <flatcc_json_printer_uint32_vector_field@@Base+0x18c>
   1b794:	ldr	r3, [r4, #44]	; 0x2c
   1b798:	mov	r0, r4
   1b79c:	mov	r1, r9
   1b7a0:	blx	r3
   1b7a4:	ldr	r3, [r4, #16]
   1b7a8:	ldr	r0, [r4, #20]
   1b7ac:	b	1b744 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   1b7b0:	add	r2, r0, #1
   1b7b4:	mov	r3, #10
   1b7b8:	str	r2, [r4, #20]
   1b7bc:	strb	r3, [r0]
   1b7c0:	ldr	r3, [r4, #32]
   1b7c4:	mov	r0, r4
   1b7c8:	sub	r3, r3, #1
   1b7cc:	str	r3, [r4, #32]
   1b7d0:	bl	145ac <test_print@@Base+0xdd8>
   1b7d4:	ldr	r0, [r4, #20]
   1b7d8:	b	1b628 <flatcc_json_printer_uint32_vector_field@@Base+0xac>
   1b7dc:	ldr	r3, [r4, #20]
   1b7e0:	mov	r2, #10
   1b7e4:	add	r1, r3, #1
   1b7e8:	str	r1, [r4, #20]
   1b7ec:	mov	r0, r4
   1b7f0:	strb	r2, [r3]
   1b7f4:	bl	145ac <test_print@@Base+0xdd8>
   1b7f8:	ldr	r1, [r4, #20]
   1b7fc:	b	1b658 <flatcc_json_printer_uint32_vector_field@@Base+0xdc>
   1b800:	mov	r1, r3
   1b804:	mov	r0, r4
   1b808:	ldr	r3, [r4, #44]	; 0x2c
   1b80c:	blx	r3
   1b810:	ldr	r1, [r4, #20]
   1b814:	b	1b658 <flatcc_json_printer_uint32_vector_field@@Base+0xdc>

0001b818 <flatcc_json_printer_uint64_vector_field@@Base>:
   1b818:	add	r2, r2, #2
   1b81c:	ldr	ip, [r1, #8]
   1b820:	lsl	r2, r2, #1
   1b824:	cmp	ip, r2
   1b828:	bxle	lr
   1b82c:	ldr	ip, [r1, #4]
   1b830:	ldrh	ip, [ip, r2]
   1b834:	cmp	ip, #0
   1b838:	bxeq	lr
   1b83c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b840:	ldr	lr, [r1]
   1b844:	adds	r5, lr, ip
   1b848:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b84c:	ldr	r2, [r1, #16]
   1b850:	cmp	r2, #0
   1b854:	add	r2, r2, #1
   1b858:	str	r2, [r1, #16]
   1b85c:	ldrne	r2, [r0, #20]
   1b860:	movne	r1, #44	; 0x2c
   1b864:	addne	r4, r2, #1
   1b868:	strne	r4, [r0, #20]
   1b86c:	strbne	r1, [r2]
   1b870:	mov	r1, r3
   1b874:	ldr	r3, [lr, ip]
   1b878:	mov	r4, r0
   1b87c:	ldr	r2, [sp, #40]	; 0x28
   1b880:	ldr	r6, [r5, r3]
   1b884:	add	r7, r5, r3
   1b888:	bl	14b4c <test_print@@Base+0x1378>
   1b88c:	ldr	r3, [r4, #32]
   1b890:	ldr	r2, [r4, #20]
   1b894:	add	r3, r3, #1
   1b898:	add	r0, r2, #1
   1b89c:	mov	r1, #91	; 0x5b
   1b8a0:	cmp	r6, #0
   1b8a4:	str	r3, [r4, #32]
   1b8a8:	str	r0, [r4, #20]
   1b8ac:	strb	r1, [r2]
   1b8b0:	bne	1b8d8 <flatcc_json_printer_uint64_vector_field@@Base+0xc0>
   1b8b4:	ldr	r0, [r4, #20]
   1b8b8:	ldrb	r3, [r4, #25]
   1b8bc:	cmp	r3, #0
   1b8c0:	bne	1ba4c <flatcc_json_printer_uint64_vector_field@@Base+0x234>
   1b8c4:	add	r2, r0, #1
   1b8c8:	mov	r3, #93	; 0x5d
   1b8cc:	str	r2, [r4, #20]
   1b8d0:	strb	r3, [r0]
   1b8d4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b8d8:	ldrb	r1, [r4, #25]
   1b8dc:	cmp	r1, #0
   1b8e0:	bne	1ba78 <flatcc_json_printer_uint64_vector_field@@Base+0x260>
   1b8e4:	ldr	r2, [r4, #20]
   1b8e8:	ldr	r3, [r4, #16]
   1b8ec:	cmp	r2, r3
   1b8f0:	bcs	1ba9c <flatcc_json_printer_uint64_vector_field@@Base+0x284>
   1b8f4:	ldrd	r0, [r7, #4]
   1b8f8:	bl	13ef0 <test_print@@Base+0x71c>
   1b8fc:	ldr	r3, [r4, #20]
   1b900:	cmp	r6, #1
   1b904:	add	r7, r7, #12
   1b908:	sub	r6, r6, #2
   1b90c:	add	r0, r3, r0
   1b910:	str	r0, [r4, #20]
   1b914:	beq	1b8b8 <flatcc_json_printer_uint64_vector_field@@Base+0xa0>
   1b918:	mov	sl, #44	; 0x2c
   1b91c:	mov	r9, #0
   1b920:	mov	r8, #32
   1b924:	b	1b958 <flatcc_json_printer_uint64_vector_field@@Base+0x140>
   1b928:	ldr	r2, [r4, #20]
   1b92c:	ldr	r3, [r4, #16]
   1b930:	cmp	r2, r3
   1b934:	bcs	1b9c0 <flatcc_json_printer_uint64_vector_field@@Base+0x1a8>
   1b938:	ldrd	r0, [r7], #8
   1b93c:	bl	13ef0 <test_print@@Base+0x71c>
   1b940:	ldr	r3, [r4, #20]
   1b944:	cmp	r6, #0
   1b948:	sub	r6, r6, #1
   1b94c:	add	r0, r3, r0
   1b950:	str	r0, [r4, #20]
   1b954:	beq	1b8b8 <flatcc_json_printer_uint64_vector_field@@Base+0xa0>
   1b958:	add	r3, r0, #1
   1b95c:	str	r3, [r4, #20]
   1b960:	strb	sl, [r0]
   1b964:	ldrb	r3, [r4, #25]
   1b968:	cmp	r3, #0
   1b96c:	beq	1b928 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   1b970:	ldr	r3, [r4, #20]
   1b974:	add	r2, r3, #1
   1b978:	str	r2, [r4, #20]
   1b97c:	mov	r2, #10
   1b980:	strb	r2, [r3]
   1b984:	ldrb	r2, [r4, #25]
   1b988:	ldr	r5, [r4, #32]
   1b98c:	ldr	r0, [r4, #20]
   1b990:	ldr	r3, [r4, #16]
   1b994:	mul	r5, r5, r2
   1b998:	add	r2, r0, r5
   1b99c:	cmp	r3, r2
   1b9a0:	bcc	1b9d8 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
   1b9a4:	mov	r2, r5
   1b9a8:	mov	r1, r8
   1b9ac:	bl	124e8 <memset@plt>
   1b9b0:	ldr	r2, [r4, #20]
   1b9b4:	add	r2, r2, r5
   1b9b8:	str	r2, [r4, #20]
   1b9bc:	b	1b938 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   1b9c0:	ldr	r3, [r4, #44]	; 0x2c
   1b9c4:	mov	r1, r9
   1b9c8:	mov	r0, r4
   1b9cc:	blx	r3
   1b9d0:	ldr	r2, [r4, #20]
   1b9d4:	b	1b938 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   1b9d8:	cmp	r0, r3
   1b9dc:	bcs	1ba30 <flatcc_json_printer_uint64_vector_field@@Base+0x218>
   1b9e0:	sub	fp, r3, r0
   1b9e4:	cmp	r5, fp
   1b9e8:	bls	1b9a4 <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   1b9ec:	mov	r2, fp
   1b9f0:	mov	r1, r8
   1b9f4:	bl	124e8 <memset@plt>
   1b9f8:	ldr	r1, [r4, #20]
   1b9fc:	ldr	r2, [r4, #44]	; 0x2c
   1ba00:	add	r1, r1, fp
   1ba04:	str	r1, [r4, #20]
   1ba08:	mov	r0, r4
   1ba0c:	mov	r1, r9
   1ba10:	blx	r2
   1ba14:	ldr	r0, [r4, #20]
   1ba18:	ldr	r2, [r4, #16]
   1ba1c:	sub	r5, r5, fp
   1ba20:	sub	fp, r2, r0
   1ba24:	cmp	r5, fp
   1ba28:	bhi	1b9ec <flatcc_json_printer_uint64_vector_field@@Base+0x1d4>
   1ba2c:	b	1b9a4 <flatcc_json_printer_uint64_vector_field@@Base+0x18c>
   1ba30:	ldr	r3, [r4, #44]	; 0x2c
   1ba34:	mov	r0, r4
   1ba38:	mov	r1, r9
   1ba3c:	blx	r3
   1ba40:	ldr	r3, [r4, #16]
   1ba44:	ldr	r0, [r4, #20]
   1ba48:	b	1b9e0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   1ba4c:	add	r2, r0, #1
   1ba50:	mov	r3, #10
   1ba54:	str	r2, [r4, #20]
   1ba58:	strb	r3, [r0]
   1ba5c:	ldr	r3, [r4, #32]
   1ba60:	mov	r0, r4
   1ba64:	sub	r3, r3, #1
   1ba68:	str	r3, [r4, #32]
   1ba6c:	bl	145ac <test_print@@Base+0xdd8>
   1ba70:	ldr	r0, [r4, #20]
   1ba74:	b	1b8c4 <flatcc_json_printer_uint64_vector_field@@Base+0xac>
   1ba78:	ldr	r3, [r4, #20]
   1ba7c:	mov	r2, #10
   1ba80:	add	r1, r3, #1
   1ba84:	str	r1, [r4, #20]
   1ba88:	mov	r0, r4
   1ba8c:	strb	r2, [r3]
   1ba90:	bl	145ac <test_print@@Base+0xdd8>
   1ba94:	ldr	r2, [r4, #20]
   1ba98:	b	1b8f4 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>
   1ba9c:	ldr	r3, [r4, #44]	; 0x2c
   1baa0:	mov	r0, r4
   1baa4:	blx	r3
   1baa8:	ldr	r2, [r4, #20]
   1baac:	b	1b8f4 <flatcc_json_printer_uint64_vector_field@@Base+0xdc>

0001bab0 <flatcc_json_printer_int8_vector_field@@Base>:
   1bab0:	add	r2, r2, #2
   1bab4:	ldr	ip, [r1, #8]
   1bab8:	lsl	r2, r2, #1
   1babc:	cmp	ip, r2
   1bac0:	bxle	lr
   1bac4:	ldr	ip, [r1, #4]
   1bac8:	ldrh	ip, [ip, r2]
   1bacc:	cmp	ip, #0
   1bad0:	bxeq	lr
   1bad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bad8:	sub	sp, sp, #12
   1badc:	ldr	r5, [r1]
   1bae0:	adds	lr, r5, ip
   1bae4:	beq	1bb70 <flatcc_json_printer_int8_vector_field@@Base+0xc0>
   1bae8:	ldr	r2, [r1, #16]
   1baec:	cmp	r2, #0
   1baf0:	add	r2, r2, #1
   1baf4:	str	r2, [r1, #16]
   1baf8:	ldrne	r2, [r0, #20]
   1bafc:	movne	r1, #44	; 0x2c
   1bb00:	addne	r4, r2, #1
   1bb04:	strne	r4, [r0, #20]
   1bb08:	strbne	r1, [r2]
   1bb0c:	mov	r1, r3
   1bb10:	ldr	r3, [r5, ip]
   1bb14:	mov	r4, r0
   1bb18:	ldr	r2, [sp, #48]	; 0x30
   1bb1c:	ldr	sl, [lr, r3]
   1bb20:	add	fp, lr, r3
   1bb24:	bl	14b4c <test_print@@Base+0x1378>
   1bb28:	ldr	r3, [r4, #32]
   1bb2c:	ldr	r2, [r4, #20]
   1bb30:	add	r3, r3, #1
   1bb34:	add	r0, r2, #1
   1bb38:	mov	r1, #91	; 0x5b
   1bb3c:	cmp	sl, #0
   1bb40:	str	r3, [r4, #32]
   1bb44:	str	r0, [r4, #20]
   1bb48:	strb	r1, [r2]
   1bb4c:	bne	1bb78 <flatcc_json_printer_int8_vector_field@@Base+0xc8>
   1bb50:	ldr	r2, [r4, #20]
   1bb54:	ldrb	r3, [r4, #25]
   1bb58:	cmp	r3, #0
   1bb5c:	bne	1bdc0 <flatcc_json_printer_int8_vector_field@@Base+0x310>
   1bb60:	add	r1, r2, #1
   1bb64:	mov	r3, #93	; 0x5d
   1bb68:	str	r1, [r4, #20]
   1bb6c:	strb	r3, [r2]
   1bb70:	add	sp, sp, #12
   1bb74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb78:	ldrb	r3, [r4, #25]
   1bb7c:	cmp	r3, #0
   1bb80:	bne	1bdec <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   1bb84:	ldr	r1, [r4, #20]
   1bb88:	ldr	r2, [r4, #16]
   1bb8c:	cmp	r1, r2
   1bb90:	bcs	1be10 <flatcc_json_printer_int8_vector_field@@Base+0x360>
   1bb94:	ldrsb	r0, [fp, #4]
   1bb98:	add	r6, fp, #4
   1bb9c:	cmp	r0, #0
   1bba0:	lsr	r5, r0, #31
   1bba4:	rsblt	r0, r0, #0
   1bba8:	movlt	r3, #45	; 0x2d
   1bbac:	sxtblt	r0, r0
   1bbb0:	strblt	r3, [r1]
   1bbb4:	uxtb	r0, r0
   1bbb8:	addlt	r1, r1, #1
   1bbbc:	bl	147ac <test_print@@Base+0xfd8>
   1bbc0:	ldr	r2, [r4, #20]
   1bbc4:	cmp	sl, #1
   1bbc8:	add	r0, r5, r0
   1bbcc:	add	r2, r2, r0
   1bbd0:	str	r2, [r4, #20]
   1bbd4:	beq	1bb54 <flatcc_json_printer_int8_vector_field@@Base+0xa4>
   1bbd8:	add	r3, sl, #3
   1bbdc:	ldr	r8, [pc, #580]	; 1be28 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   1bbe0:	str	r3, [sp, #4]
   1bbe4:	mov	r7, #0
   1bbe8:	mov	r9, #32
   1bbec:	b	1bc50 <flatcc_json_printer_int8_vector_field@@Base+0x1a0>
   1bbf0:	ldr	r2, [pc, #564]	; 1be2c <flatcc_json_printer_int8_vector_field@@Base+0x37c>
   1bbf4:	strb	r7, [r3, #3]
   1bbf8:	mov	ip, #49	; 0x31
   1bbfc:	umull	r2, r0, r2, lr
   1bc00:	mov	r2, #100	; 0x64
   1bc04:	lsr	r0, r0, #5
   1bc08:	mul	r2, r2, r0
   1bc0c:	mov	r0, #3
   1bc10:	sub	r2, lr, r2
   1bc14:	uxtb	r2, r2
   1bc18:	ldrb	lr, [r8, r2, lsl #1]
   1bc1c:	add	r2, r8, r2, lsl #1
   1bc20:	strb	lr, [r3, #1]
   1bc24:	ldrb	r2, [r2, #1]
   1bc28:	strb	ip, [r3]
   1bc2c:	strb	r2, [r3, #2]
   1bc30:	ldr	r3, [sp, #4]
   1bc34:	ldr	r2, [r4, #20]
   1bc38:	add	r1, r1, r0
   1bc3c:	sub	r3, r3, r6
   1bc40:	add	r2, r2, r1
   1bc44:	cmn	fp, r3
   1bc48:	str	r2, [r4, #20]
   1bc4c:	beq	1bb54 <flatcc_json_printer_int8_vector_field@@Base+0xa4>
   1bc50:	add	r3, r2, #1
   1bc54:	str	r3, [r4, #20]
   1bc58:	mov	r3, #44	; 0x2c
   1bc5c:	strb	r3, [r2]
   1bc60:	ldrb	r3, [r4, #25]
   1bc64:	cmp	r3, #0
   1bc68:	ldr	r3, [r4, #20]
   1bc6c:	bne	1bcd4 <flatcc_json_printer_int8_vector_field@@Base+0x224>
   1bc70:	ldr	r2, [r4, #16]
   1bc74:	cmp	r3, r2
   1bc78:	bcs	1bd20 <flatcc_json_printer_int8_vector_field@@Base+0x270>
   1bc7c:	ldrsb	r2, [r6, #1]!
   1bc80:	cmp	r2, #0
   1bc84:	lsr	r1, r2, #31
   1bc88:	rsblt	r2, r2, #0
   1bc8c:	movlt	r0, #45	; 0x2d
   1bc90:	sxtblt	r2, r2
   1bc94:	strblt	r0, [r3]
   1bc98:	uxtb	lr, r2
   1bc9c:	addlt	r3, r3, #1
   1bca0:	cmp	lr, #99	; 0x63
   1bca4:	bhi	1bbf0 <flatcc_json_printer_int8_vector_field@@Base+0x140>
   1bca8:	cmp	lr, #9
   1bcac:	bls	1bd90 <flatcc_json_printer_int8_vector_field@@Base+0x2e0>
   1bcb0:	sxth	r2, lr
   1bcb4:	strb	r7, [r3, #2]
   1bcb8:	ldrb	ip, [r8, r2, lsl #1]
   1bcbc:	add	r2, r8, r2, lsl #1
   1bcc0:	mov	r0, #2
   1bcc4:	strb	ip, [r3]
   1bcc8:	ldrb	r2, [r2, #1]
   1bccc:	strb	r2, [r3, #1]
   1bcd0:	b	1bc30 <flatcc_json_printer_int8_vector_field@@Base+0x180>
   1bcd4:	add	r2, r3, #1
   1bcd8:	str	r2, [r4, #20]
   1bcdc:	mov	r2, #10
   1bce0:	strb	r2, [r3]
   1bce4:	ldrb	r3, [r4, #25]
   1bce8:	ldr	r2, [r4, #32]
   1bcec:	ldr	r0, [r4, #20]
   1bcf0:	ldr	sl, [r4, #16]
   1bcf4:	mul	r5, r2, r3
   1bcf8:	add	r2, r0, r5
   1bcfc:	cmp	sl, r2
   1bd00:	bcc	1bd38 <flatcc_json_printer_int8_vector_field@@Base+0x288>
   1bd04:	mov	r2, r5
   1bd08:	mov	r1, r9
   1bd0c:	bl	124e8 <memset@plt>
   1bd10:	ldr	r2, [r4, #20]
   1bd14:	add	r3, r2, r5
   1bd18:	str	r3, [r4, #20]
   1bd1c:	b	1bc7c <flatcc_json_printer_int8_vector_field@@Base+0x1cc>
   1bd20:	ldr	r3, [r4, #44]	; 0x2c
   1bd24:	mov	r1, r7
   1bd28:	mov	r0, r4
   1bd2c:	blx	r3
   1bd30:	ldr	r3, [r4, #20]
   1bd34:	b	1bc7c <flatcc_json_printer_int8_vector_field@@Base+0x1cc>
   1bd38:	cmp	r0, sl
   1bd3c:	bcs	1bda4 <flatcc_json_printer_int8_vector_field@@Base+0x2f4>
   1bd40:	sub	sl, sl, r0
   1bd44:	cmp	r5, sl
   1bd48:	bls	1bd04 <flatcc_json_printer_int8_vector_field@@Base+0x254>
   1bd4c:	mov	r2, sl
   1bd50:	mov	r1, r9
   1bd54:	bl	124e8 <memset@plt>
   1bd58:	ldr	r3, [r4, #20]
   1bd5c:	mov	r0, r4
   1bd60:	add	r3, r3, sl
   1bd64:	str	r3, [r4, #20]
   1bd68:	ldr	r2, [r4, #44]	; 0x2c
   1bd6c:	mov	r1, r7
   1bd70:	blx	r2
   1bd74:	ldr	r0, [r4, #20]
   1bd78:	ldr	r3, [r4, #16]
   1bd7c:	sub	r5, r5, sl
   1bd80:	sub	sl, r3, r0
   1bd84:	cmp	r5, sl
   1bd88:	bhi	1bd4c <flatcc_json_printer_int8_vector_field@@Base+0x29c>
   1bd8c:	b	1bd04 <flatcc_json_printer_int8_vector_field@@Base+0x254>
   1bd90:	add	r2, lr, #48	; 0x30
   1bd94:	mov	r0, #1
   1bd98:	strb	r2, [r3]
   1bd9c:	strb	r7, [r3, #1]
   1bda0:	b	1bc30 <flatcc_json_printer_int8_vector_field@@Base+0x180>
   1bda4:	mov	r0, r4
   1bda8:	ldr	r2, [r4, #44]	; 0x2c
   1bdac:	mov	r1, r7
   1bdb0:	blx	r2
   1bdb4:	ldr	sl, [r4, #16]
   1bdb8:	ldr	r0, [r4, #20]
   1bdbc:	b	1bd40 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   1bdc0:	add	r1, r2, #1
   1bdc4:	mov	r3, #10
   1bdc8:	str	r1, [r4, #20]
   1bdcc:	strb	r3, [r2]
   1bdd0:	ldr	r3, [r4, #32]
   1bdd4:	mov	r0, r4
   1bdd8:	sub	r3, r3, #1
   1bddc:	str	r3, [r4, #32]
   1bde0:	bl	145ac <test_print@@Base+0xdd8>
   1bde4:	ldr	r2, [r4, #20]
   1bde8:	b	1bb60 <flatcc_json_printer_int8_vector_field@@Base+0xb0>
   1bdec:	ldr	r3, [r4, #20]
   1bdf0:	mov	r2, #10
   1bdf4:	add	r1, r3, #1
   1bdf8:	str	r1, [r4, #20]
   1bdfc:	mov	r0, r4
   1be00:	strb	r2, [r3]
   1be04:	bl	145ac <test_print@@Base+0xdd8>
   1be08:	ldr	r1, [r4, #20]
   1be0c:	b	1bb94 <flatcc_json_printer_int8_vector_field@@Base+0xe4>
   1be10:	mov	r1, r3
   1be14:	mov	r0, r4
   1be18:	ldr	r3, [r4, #44]	; 0x2c
   1be1c:	blx	r3
   1be20:	ldr	r1, [r4, #20]
   1be24:	b	1bb94 <flatcc_json_printer_int8_vector_field@@Base+0xe4>
   1be28:	andeq	r1, r2, r8, ror #12
   1be2c:	mvnpl	r8, pc, lsl r5

0001be30 <flatcc_json_printer_int16_vector_field@@Base>:
   1be30:	add	r2, r2, #2
   1be34:	ldr	ip, [r1, #8]
   1be38:	lsl	r2, r2, #1
   1be3c:	cmp	ip, r2
   1be40:	bxle	lr
   1be44:	ldr	ip, [r1, #4]
   1be48:	ldrh	ip, [ip, r2]
   1be4c:	cmp	ip, #0
   1be50:	bxeq	lr
   1be54:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be58:	ldr	r5, [r1]
   1be5c:	adds	lr, r5, ip
   1be60:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be64:	ldr	r2, [r1, #16]
   1be68:	cmp	r2, #0
   1be6c:	add	r2, r2, #1
   1be70:	str	r2, [r1, #16]
   1be74:	ldrne	r2, [r0, #20]
   1be78:	movne	r1, #44	; 0x2c
   1be7c:	addne	r4, r2, #1
   1be80:	strne	r4, [r0, #20]
   1be84:	strbne	r1, [r2]
   1be88:	mov	r1, r3
   1be8c:	ldr	r3, [r5, ip]
   1be90:	mov	r4, r0
   1be94:	ldr	r2, [sp, #40]	; 0x28
   1be98:	ldr	r6, [lr, r3]
   1be9c:	add	r8, lr, r3
   1bea0:	bl	14b4c <test_print@@Base+0x1378>
   1bea4:	ldr	r3, [r4, #32]
   1bea8:	ldr	r2, [r4, #20]
   1beac:	add	r3, r3, #1
   1beb0:	add	r0, r2, #1
   1beb4:	mov	r1, #91	; 0x5b
   1beb8:	cmp	r6, #0
   1bebc:	str	r3, [r4, #32]
   1bec0:	str	r0, [r4, #20]
   1bec4:	strb	r1, [r2]
   1bec8:	bne	1bef0 <flatcc_json_printer_int16_vector_field@@Base+0xc0>
   1becc:	ldr	r2, [r4, #20]
   1bed0:	ldrb	r3, [r4, #25]
   1bed4:	cmp	r3, #0
   1bed8:	bne	1c1d8 <flatcc_json_printer_int16_vector_field@@Base+0x3a8>
   1bedc:	add	r1, r2, #1
   1bee0:	mov	r3, #93	; 0x5d
   1bee4:	str	r1, [r4, #20]
   1bee8:	strb	r3, [r2]
   1beec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bef0:	ldrb	r3, [r4, #25]
   1bef4:	cmp	r3, #0
   1bef8:	bne	1c204 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   1befc:	ldr	r1, [r4, #20]
   1bf00:	ldr	r2, [r4, #16]
   1bf04:	cmp	r1, r2
   1bf08:	bcs	1c228 <flatcc_json_printer_int16_vector_field@@Base+0x3f8>
   1bf0c:	ldrsh	r0, [r8, #4]
   1bf10:	add	r8, r8, #4
   1bf14:	cmp	r0, #0
   1bf18:	lsr	r5, r0, #31
   1bf1c:	rsblt	r0, r0, #0
   1bf20:	movlt	r3, #45	; 0x2d
   1bf24:	sxthlt	r0, r0
   1bf28:	strblt	r3, [r1]
   1bf2c:	uxth	r0, r0
   1bf30:	addlt	r1, r1, #1
   1bf34:	bl	13a60 <test_print@@Base+0x28c>
   1bf38:	ldr	r2, [r4, #20]
   1bf3c:	cmp	r6, #1
   1bf40:	sub	r6, r6, #2
   1bf44:	add	r0, r5, r0
   1bf48:	add	r2, r2, r0
   1bf4c:	str	r2, [r4, #20]
   1bf50:	beq	1bed0 <flatcc_json_printer_int16_vector_field@@Base+0xa0>
   1bf54:	mov	r7, #0
   1bf58:	ldr	r9, [pc, #736]	; 1c240 <flatcc_json_printer_int16_vector_field@@Base+0x410>
   1bf5c:	b	1c008 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   1bf60:	ldr	r2, [pc, #732]	; 1c244 <flatcc_json_printer_int16_vector_field@@Base+0x414>
   1bf64:	cmp	r3, r2
   1bf68:	bls	1c0f4 <flatcc_json_printer_int16_vector_field@@Base+0x2c4>
   1bf6c:	ldr	r2, [pc, #724]	; 1c248 <flatcc_json_printer_int16_vector_field@@Base+0x418>
   1bf70:	strb	r7, [r1, #5]
   1bf74:	add	ip, r1, #3
   1bf78:	umull	r2, r0, r2, r3
   1bf7c:	mov	r2, #100	; 0x64
   1bf80:	lsr	r0, r0, #5
   1bf84:	mul	r2, r2, r0
   1bf88:	sub	r2, r3, r2
   1bf8c:	uxth	r3, r0
   1bf90:	uxth	r2, r2
   1bf94:	ldrb	r0, [r9, r2, lsl #1]
   1bf98:	add	r2, r9, r2, lsl #1
   1bf9c:	strb	r0, [r1, #3]
   1bfa0:	ldrb	r2, [r2, #1]
   1bfa4:	mov	r0, #5
   1bfa8:	strb	r2, [r1, #4]
   1bfac:	ldr	r2, [pc, #660]	; 1c248 <flatcc_json_printer_int16_vector_field@@Base+0x418>
   1bfb0:	sub	r1, ip, #2
   1bfb4:	umull	r2, r5, r2, r3
   1bfb8:	mov	r2, #100	; 0x64
   1bfbc:	lsr	r5, r5, #5
   1bfc0:	mul	r2, r2, r5
   1bfc4:	sub	r2, r3, r2
   1bfc8:	uxth	r3, r5
   1bfcc:	uxth	r2, r2
   1bfd0:	ldrb	r5, [r9, r2, lsl #1]
   1bfd4:	add	r2, r9, r2, lsl #1
   1bfd8:	strb	r5, [ip, #-2]
   1bfdc:	ldrb	r2, [r2, #1]
   1bfe0:	strb	r2, [ip, #-1]
   1bfe4:	add	r3, r3, #48	; 0x30
   1bfe8:	strb	r3, [r1, #-1]
   1bfec:	ldr	r2, [r4, #20]
   1bff0:	add	r0, lr, r0
   1bff4:	cmp	r6, #0
   1bff8:	add	r2, r2, r0
   1bffc:	sub	r6, r6, #1
   1c000:	str	r2, [r4, #20]
   1c004:	beq	1bed0 <flatcc_json_printer_int16_vector_field@@Base+0xa0>
   1c008:	add	r3, r2, #1
   1c00c:	str	r3, [r4, #20]
   1c010:	mov	r3, #44	; 0x2c
   1c014:	strb	r3, [r2]
   1c018:	ldrb	r3, [r4, #25]
   1c01c:	cmp	r3, #0
   1c020:	bne	1c0a4 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   1c024:	ldr	r1, [r4, #20]
   1c028:	ldr	r3, [r4, #16]
   1c02c:	cmp	r1, r3
   1c030:	bcs	1c138 <flatcc_json_printer_int16_vector_field@@Base+0x308>
   1c034:	ldrsh	r3, [r8, #2]!
   1c038:	cmp	r3, #0
   1c03c:	lsr	lr, r3, #31
   1c040:	rsblt	r3, r3, #0
   1c044:	movlt	r2, #45	; 0x2d
   1c048:	sxthlt	r3, r3
   1c04c:	strblt	r2, [r1]
   1c050:	ldr	r2, [pc, #500]	; 1c24c <flatcc_json_printer_int16_vector_field@@Base+0x41c>
   1c054:	uxth	r3, r3
   1c058:	addlt	r1, r1, #1
   1c05c:	cmp	r3, r2
   1c060:	bhi	1bf60 <flatcc_json_printer_int16_vector_field@@Base+0x130>
   1c064:	cmp	r3, #99	; 0x63
   1c068:	strbhi	r7, [r1, #3]
   1c06c:	addhi	ip, r1, #3
   1c070:	movhi	r0, #3
   1c074:	bhi	1bfac <flatcc_json_printer_int16_vector_field@@Base+0x17c>
   1c078:	cmp	r3, #9
   1c07c:	strbhi	r7, [r1, #2]
   1c080:	addhi	r2, r1, #2
   1c084:	movhi	r0, #2
   1c088:	bls	1c1ac <flatcc_json_printer_int16_vector_field@@Base+0x37c>
   1c08c:	ldrb	r1, [r9, r3, lsl #1]
   1c090:	add	r3, r9, r3, lsl #1
   1c094:	strb	r1, [r2, #-2]
   1c098:	ldrb	r3, [r3, #1]
   1c09c:	strb	r3, [r2, #-1]
   1c0a0:	b	1bfec <flatcc_json_printer_int16_vector_field@@Base+0x1bc>
   1c0a4:	ldr	r3, [r4, #20]
   1c0a8:	mov	r2, #10
   1c0ac:	add	r1, r3, #1
   1c0b0:	str	r1, [r4, #20]
   1c0b4:	strb	r2, [r3]
   1c0b8:	ldrb	r3, [r4, #25]
   1c0bc:	ldr	r1, [r4, #32]
   1c0c0:	ldr	r0, [r4, #20]
   1c0c4:	ldr	r5, [r4, #16]
   1c0c8:	mul	sl, r1, r3
   1c0cc:	add	r3, r0, sl
   1c0d0:	cmp	r5, r3
   1c0d4:	bcc	1c150 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   1c0d8:	mov	r1, #32
   1c0dc:	mov	r2, sl
   1c0e0:	bl	124e8 <memset@plt>
   1c0e4:	ldr	r1, [r4, #20]
   1c0e8:	add	r1, r1, sl
   1c0ec:	str	r1, [r4, #20]
   1c0f0:	b	1c034 <flatcc_json_printer_int16_vector_field@@Base+0x204>
   1c0f4:	ldr	r2, [pc, #332]	; 1c248 <flatcc_json_printer_int16_vector_field@@Base+0x418>
   1c0f8:	mov	ip, #100	; 0x64
   1c0fc:	strb	r7, [r1, #4]
   1c100:	umull	r2, r0, r2, r3
   1c104:	add	r2, r1, #2
   1c108:	lsr	r0, r0, #5
   1c10c:	mul	ip, ip, r0
   1c110:	sub	ip, r3, ip
   1c114:	uxth	r3, r0
   1c118:	uxth	ip, ip
   1c11c:	ldrb	r0, [r9, ip, lsl #1]
   1c120:	add	ip, r9, ip, lsl #1
   1c124:	strb	r0, [r1, #2]
   1c128:	ldrb	ip, [ip, #1]
   1c12c:	mov	r0, #4
   1c130:	strb	ip, [r1, #3]
   1c134:	b	1c08c <flatcc_json_printer_int16_vector_field@@Base+0x25c>
   1c138:	mov	r1, r7
   1c13c:	ldr	r3, [r4, #44]	; 0x2c
   1c140:	mov	r0, r4
   1c144:	blx	r3
   1c148:	ldr	r1, [r4, #20]
   1c14c:	b	1c034 <flatcc_json_printer_int16_vector_field@@Base+0x204>
   1c150:	cmp	r0, r5
   1c154:	bcs	1c1bc <flatcc_json_printer_int16_vector_field@@Base+0x38c>
   1c158:	sub	r5, r5, r0
   1c15c:	cmp	sl, r5
   1c160:	bls	1c0d8 <flatcc_json_printer_int16_vector_field@@Base+0x2a8>
   1c164:	mov	fp, #32
   1c168:	mov	r2, r5
   1c16c:	mov	r1, fp
   1c170:	bl	124e8 <memset@plt>
   1c174:	ldr	r3, [r4, #20]
   1c178:	mov	r0, r4
   1c17c:	add	r3, r3, r5
   1c180:	str	r3, [r4, #20]
   1c184:	ldr	r2, [r4, #44]	; 0x2c
   1c188:	mov	r1, r7
   1c18c:	blx	r2
   1c190:	ldr	r0, [r4, #20]
   1c194:	ldr	r3, [r4, #16]
   1c198:	sub	sl, sl, r5
   1c19c:	sub	r5, r3, r0
   1c1a0:	cmp	sl, r5
   1c1a4:	bhi	1c168 <flatcc_json_printer_int16_vector_field@@Base+0x338>
   1c1a8:	b	1c0d8 <flatcc_json_printer_int16_vector_field@@Base+0x2a8>
   1c1ac:	strb	r7, [r1, #1]
   1c1b0:	mov	r0, #1
   1c1b4:	add	r1, r1, #1
   1c1b8:	b	1bfe4 <flatcc_json_printer_int16_vector_field@@Base+0x1b4>
   1c1bc:	mov	r0, r4
   1c1c0:	ldr	r3, [r4, #44]	; 0x2c
   1c1c4:	mov	r1, r7
   1c1c8:	blx	r3
   1c1cc:	ldr	r5, [r4, #16]
   1c1d0:	ldr	r0, [r4, #20]
   1c1d4:	b	1c158 <flatcc_json_printer_int16_vector_field@@Base+0x328>
   1c1d8:	add	r1, r2, #1
   1c1dc:	mov	r3, #10
   1c1e0:	str	r1, [r4, #20]
   1c1e4:	strb	r3, [r2]
   1c1e8:	ldr	r3, [r4, #32]
   1c1ec:	mov	r0, r4
   1c1f0:	sub	r3, r3, #1
   1c1f4:	str	r3, [r4, #32]
   1c1f8:	bl	145ac <test_print@@Base+0xdd8>
   1c1fc:	ldr	r2, [r4, #20]
   1c200:	b	1bedc <flatcc_json_printer_int16_vector_field@@Base+0xac>
   1c204:	ldr	r3, [r4, #20]
   1c208:	mov	r2, #10
   1c20c:	add	r1, r3, #1
   1c210:	str	r1, [r4, #20]
   1c214:	mov	r0, r4
   1c218:	strb	r2, [r3]
   1c21c:	bl	145ac <test_print@@Base+0xdd8>
   1c220:	ldr	r1, [r4, #20]
   1c224:	b	1bf0c <flatcc_json_printer_int16_vector_field@@Base+0xdc>
   1c228:	mov	r1, r3
   1c22c:	mov	r0, r4
   1c230:	ldr	r3, [r4, #44]	; 0x2c
   1c234:	blx	r3
   1c238:	ldr	r1, [r4, #20]
   1c23c:	b	1bf0c <flatcc_json_printer_int16_vector_field@@Base+0xdc>
   1c240:	andeq	r1, r2, r8, ror #12
   1c244:	andeq	r2, r0, pc, lsl #14
   1c248:	mvnpl	r8, pc, lsl r5
   1c24c:	andeq	r0, r0, r7, ror #7

0001c250 <flatcc_json_printer_int32_vector_field@@Base>:
   1c250:	add	r2, r2, #2
   1c254:	ldr	ip, [r1, #8]
   1c258:	lsl	r2, r2, #1
   1c25c:	cmp	ip, r2
   1c260:	bxle	lr
   1c264:	ldr	ip, [r1, #4]
   1c268:	ldrh	ip, [ip, r2]
   1c26c:	cmp	ip, #0
   1c270:	bxeq	lr
   1c274:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c278:	ldr	r5, [r1]
   1c27c:	adds	lr, r5, ip
   1c280:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c284:	ldr	r2, [r1, #16]
   1c288:	cmp	r2, #0
   1c28c:	add	r2, r2, #1
   1c290:	str	r2, [r1, #16]
   1c294:	ldrne	r2, [r0, #20]
   1c298:	movne	r1, #44	; 0x2c
   1c29c:	addne	r4, r2, #1
   1c2a0:	strne	r4, [r0, #20]
   1c2a4:	strbne	r1, [r2]
   1c2a8:	mov	r1, r3
   1c2ac:	ldr	r3, [r5, ip]
   1c2b0:	mov	r4, r0
   1c2b4:	ldr	r2, [sp, #40]	; 0x28
   1c2b8:	ldr	r6, [lr, r3]
   1c2bc:	add	r7, lr, r3
   1c2c0:	bl	14b4c <test_print@@Base+0x1378>
   1c2c4:	ldr	r3, [r4, #32]
   1c2c8:	ldr	r2, [r4, #20]
   1c2cc:	add	r3, r3, #1
   1c2d0:	add	r0, r2, #1
   1c2d4:	mov	r1, #91	; 0x5b
   1c2d8:	cmp	r6, #0
   1c2dc:	str	r3, [r4, #32]
   1c2e0:	str	r0, [r4, #20]
   1c2e4:	strb	r1, [r2]
   1c2e8:	bne	1c310 <flatcc_json_printer_int32_vector_field@@Base+0xc0>
   1c2ec:	ldr	r0, [r4, #20]
   1c2f0:	ldrb	r3, [r4, #25]
   1c2f4:	cmp	r3, #0
   1c2f8:	bne	1c4bc <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   1c2fc:	add	r2, r0, #1
   1c300:	mov	r3, #93	; 0x5d
   1c304:	str	r2, [r4, #20]
   1c308:	strb	r3, [r0]
   1c30c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c310:	ldrb	r3, [r4, #25]
   1c314:	cmp	r3, #0
   1c318:	bne	1c4e8 <flatcc_json_printer_int32_vector_field@@Base+0x298>
   1c31c:	ldr	r1, [r4, #20]
   1c320:	ldr	r2, [r4, #16]
   1c324:	cmp	r1, r2
   1c328:	bcs	1c50c <flatcc_json_printer_int32_vector_field@@Base+0x2bc>
   1c32c:	ldr	r0, [r7, #4]
   1c330:	add	r7, r7, #4
   1c334:	cmp	r0, #0
   1c338:	movlt	r3, #45	; 0x2d
   1c33c:	strblt	r3, [r1]
   1c340:	lsr	r5, r0, #31
   1c344:	addlt	r1, r1, #1
   1c348:	rsblt	r0, r0, #0
   1c34c:	bl	13bc8 <test_print@@Base+0x3f4>
   1c350:	ldr	r3, [r4, #20]
   1c354:	cmp	r6, #1
   1c358:	sub	r6, r6, #2
   1c35c:	add	r0, r5, r0
   1c360:	add	r0, r3, r0
   1c364:	str	r0, [r4, #20]
   1c368:	beq	1c2f0 <flatcc_json_printer_int32_vector_field@@Base+0xa0>
   1c36c:	mov	sl, #44	; 0x2c
   1c370:	mov	r9, #0
   1c374:	mov	r8, #32
   1c378:	b	1c3c8 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   1c37c:	ldr	r1, [r4, #20]
   1c380:	ldr	r3, [r4, #16]
   1c384:	cmp	r1, r3
   1c388:	bcs	1c430 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   1c38c:	ldr	r0, [r7, #4]!
   1c390:	cmp	r0, #0
   1c394:	movlt	r3, #45	; 0x2d
   1c398:	strblt	r3, [r1]
   1c39c:	lsr	r5, r0, #31
   1c3a0:	addlt	r1, r1, #1
   1c3a4:	rsblt	r0, r0, #0
   1c3a8:	bl	13bc8 <test_print@@Base+0x3f4>
   1c3ac:	ldr	r3, [r4, #20]
   1c3b0:	cmp	r6, #0
   1c3b4:	sub	r6, r6, #1
   1c3b8:	add	r0, r5, r0
   1c3bc:	add	r0, r3, r0
   1c3c0:	str	r0, [r4, #20]
   1c3c4:	beq	1c2f0 <flatcc_json_printer_int32_vector_field@@Base+0xa0>
   1c3c8:	add	r3, r0, #1
   1c3cc:	str	r3, [r4, #20]
   1c3d0:	strb	sl, [r0]
   1c3d4:	ldrb	r3, [r4, #25]
   1c3d8:	cmp	r3, #0
   1c3dc:	beq	1c37c <flatcc_json_printer_int32_vector_field@@Base+0x12c>
   1c3e0:	ldr	r3, [r4, #20]
   1c3e4:	add	r2, r3, #1
   1c3e8:	str	r2, [r4, #20]
   1c3ec:	mov	r2, #10
   1c3f0:	strb	r2, [r3]
   1c3f4:	ldrb	r1, [r4, #25]
   1c3f8:	ldr	r5, [r4, #32]
   1c3fc:	ldr	r0, [r4, #20]
   1c400:	ldr	fp, [r4, #16]
   1c404:	mul	r5, r5, r1
   1c408:	add	r3, r0, r5
   1c40c:	cmp	fp, r3
   1c410:	bcc	1c448 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   1c414:	mov	r1, r8
   1c418:	mov	r2, r5
   1c41c:	bl	124e8 <memset@plt>
   1c420:	ldr	r1, [r4, #20]
   1c424:	add	r1, r1, r5
   1c428:	str	r1, [r4, #20]
   1c42c:	b	1c38c <flatcc_json_printer_int32_vector_field@@Base+0x13c>
   1c430:	mov	r1, r9
   1c434:	ldr	r3, [r4, #44]	; 0x2c
   1c438:	mov	r0, r4
   1c43c:	blx	r3
   1c440:	ldr	r1, [r4, #20]
   1c444:	b	1c38c <flatcc_json_printer_int32_vector_field@@Base+0x13c>
   1c448:	cmp	r0, fp
   1c44c:	bcs	1c4a0 <flatcc_json_printer_int32_vector_field@@Base+0x250>
   1c450:	sub	fp, fp, r0
   1c454:	cmp	r5, fp
   1c458:	bls	1c414 <flatcc_json_printer_int32_vector_field@@Base+0x1c4>
   1c45c:	mov	r2, fp
   1c460:	mov	r1, r8
   1c464:	bl	124e8 <memset@plt>
   1c468:	ldr	r3, [r4, #20]
   1c46c:	mov	r0, r4
   1c470:	add	r3, r3, fp
   1c474:	str	r3, [r4, #20]
   1c478:	ldr	r2, [r4, #44]	; 0x2c
   1c47c:	mov	r1, r9
   1c480:	blx	r2
   1c484:	ldr	r0, [r4, #20]
   1c488:	ldr	r3, [r4, #16]
   1c48c:	sub	r5, r5, fp
   1c490:	sub	fp, r3, r0
   1c494:	cmp	r5, fp
   1c498:	bhi	1c45c <flatcc_json_printer_int32_vector_field@@Base+0x20c>
   1c49c:	b	1c414 <flatcc_json_printer_int32_vector_field@@Base+0x1c4>
   1c4a0:	mov	r0, r4
   1c4a4:	ldr	r3, [r4, #44]	; 0x2c
   1c4a8:	mov	r1, r9
   1c4ac:	blx	r3
   1c4b0:	ldr	fp, [r4, #16]
   1c4b4:	ldr	r0, [r4, #20]
   1c4b8:	b	1c450 <flatcc_json_printer_int32_vector_field@@Base+0x200>
   1c4bc:	add	r2, r0, #1
   1c4c0:	mov	r3, #10
   1c4c4:	str	r2, [r4, #20]
   1c4c8:	strb	r3, [r0]
   1c4cc:	ldr	r3, [r4, #32]
   1c4d0:	mov	r0, r4
   1c4d4:	sub	r3, r3, #1
   1c4d8:	str	r3, [r4, #32]
   1c4dc:	bl	145ac <test_print@@Base+0xdd8>
   1c4e0:	ldr	r0, [r4, #20]
   1c4e4:	b	1c2fc <flatcc_json_printer_int32_vector_field@@Base+0xac>
   1c4e8:	ldr	r3, [r4, #20]
   1c4ec:	mov	r2, #10
   1c4f0:	add	r1, r3, #1
   1c4f4:	str	r1, [r4, #20]
   1c4f8:	mov	r0, r4
   1c4fc:	strb	r2, [r3]
   1c500:	bl	145ac <test_print@@Base+0xdd8>
   1c504:	ldr	r1, [r4, #20]
   1c508:	b	1c32c <flatcc_json_printer_int32_vector_field@@Base+0xdc>
   1c50c:	mov	r1, r3
   1c510:	mov	r0, r4
   1c514:	ldr	r3, [r4, #44]	; 0x2c
   1c518:	blx	r3
   1c51c:	ldr	r1, [r4, #20]
   1c520:	b	1c32c <flatcc_json_printer_int32_vector_field@@Base+0xdc>

0001c524 <flatcc_json_printer_int64_vector_field@@Base>:
   1c524:	add	r2, r2, #2
   1c528:	ldr	ip, [r1, #8]
   1c52c:	lsl	r2, r2, #1
   1c530:	cmp	ip, r2
   1c534:	bxle	lr
   1c538:	ldr	ip, [r1, #4]
   1c53c:	ldrh	ip, [ip, r2]
   1c540:	cmp	ip, #0
   1c544:	bxeq	lr
   1c548:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c54c:	ldr	r5, [r1]
   1c550:	adds	lr, r5, ip
   1c554:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c558:	ldr	r2, [r1, #16]
   1c55c:	cmp	r2, #0
   1c560:	add	r2, r2, #1
   1c564:	str	r2, [r1, #16]
   1c568:	ldrne	r2, [r0, #20]
   1c56c:	movne	r1, #44	; 0x2c
   1c570:	addne	r4, r2, #1
   1c574:	strne	r4, [r0, #20]
   1c578:	strbne	r1, [r2]
   1c57c:	mov	r1, r3
   1c580:	ldr	r3, [r5, ip]
   1c584:	mov	r4, r0
   1c588:	ldr	r2, [sp, #40]	; 0x28
   1c58c:	ldr	r6, [lr, r3]
   1c590:	add	r7, lr, r3
   1c594:	bl	14b4c <test_print@@Base+0x1378>
   1c598:	ldr	r3, [r4, #32]
   1c59c:	ldr	r2, [r4, #20]
   1c5a0:	add	r3, r3, #1
   1c5a4:	add	r0, r2, #1
   1c5a8:	mov	r1, #91	; 0x5b
   1c5ac:	cmp	r6, #0
   1c5b0:	str	r3, [r4, #32]
   1c5b4:	str	r0, [r4, #20]
   1c5b8:	strb	r1, [r2]
   1c5bc:	bne	1c5e4 <flatcc_json_printer_int64_vector_field@@Base+0xc0>
   1c5c0:	ldr	r0, [r4, #20]
   1c5c4:	ldrb	r3, [r4, #25]
   1c5c8:	cmp	r3, #0
   1c5cc:	bne	1c798 <flatcc_json_printer_int64_vector_field@@Base+0x274>
   1c5d0:	add	r2, r0, #1
   1c5d4:	mov	r3, #93	; 0x5d
   1c5d8:	str	r2, [r4, #20]
   1c5dc:	strb	r3, [r0]
   1c5e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5e4:	ldrb	r1, [r4, #25]
   1c5e8:	cmp	r1, #0
   1c5ec:	bne	1c7c4 <flatcc_json_printer_int64_vector_field@@Base+0x2a0>
   1c5f0:	ldr	r2, [r4, #20]
   1c5f4:	ldr	r3, [r4, #16]
   1c5f8:	cmp	r2, r3
   1c5fc:	bcs	1c800 <flatcc_json_printer_int64_vector_field@@Base+0x2dc>
   1c600:	ldrd	r0, [r7, #4]
   1c604:	add	r7, r7, #4
   1c608:	cmp	r0, #0
   1c60c:	sbcs	r3, r1, #0
   1c610:	lsr	r5, r1, #31
   1c614:	blt	1c7e8 <flatcc_json_printer_int64_vector_field@@Base+0x2c4>
   1c618:	bl	13ef0 <test_print@@Base+0x71c>
   1c61c:	ldr	r3, [r4, #20]
   1c620:	cmp	r6, #1
   1c624:	sub	r6, r6, #2
   1c628:	add	r0, r5, r0
   1c62c:	add	r0, r3, r0
   1c630:	str	r0, [r4, #20]
   1c634:	beq	1c5c4 <flatcc_json_printer_int64_vector_field@@Base+0xa0>
   1c638:	mov	sl, #44	; 0x2c
   1c63c:	mov	r9, #0
   1c640:	mov	r8, #32
   1c644:	b	1c68c <flatcc_json_printer_int64_vector_field@@Base+0x168>
   1c648:	ldr	r2, [r4, #20]
   1c64c:	ldr	r3, [r4, #16]
   1c650:	cmp	r2, r3
   1c654:	bcs	1c70c <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   1c658:	ldrd	r0, [r7, #8]!
   1c65c:	cmp	r0, #0
   1c660:	sbcs	r3, r1, #0
   1c664:	lsr	fp, r1, #31
   1c668:	blt	1c6f4 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
   1c66c:	bl	13ef0 <test_print@@Base+0x71c>
   1c670:	ldr	r3, [r4, #20]
   1c674:	cmp	r6, #0
   1c678:	sub	r6, r6, #1
   1c67c:	add	r0, fp, r0
   1c680:	add	r0, r3, r0
   1c684:	str	r0, [r4, #20]
   1c688:	beq	1c5c4 <flatcc_json_printer_int64_vector_field@@Base+0xa0>
   1c68c:	add	r3, r0, #1
   1c690:	str	r3, [r4, #20]
   1c694:	strb	sl, [r0]
   1c698:	ldrb	r3, [r4, #25]
   1c69c:	cmp	r3, #0
   1c6a0:	beq	1c648 <flatcc_json_printer_int64_vector_field@@Base+0x124>
   1c6a4:	ldr	r3, [r4, #20]
   1c6a8:	add	r2, r3, #1
   1c6ac:	str	r2, [r4, #20]
   1c6b0:	mov	r2, #10
   1c6b4:	strb	r2, [r3]
   1c6b8:	ldrb	r2, [r4, #25]
   1c6bc:	ldr	r5, [r4, #32]
   1c6c0:	ldr	r0, [r4, #20]
   1c6c4:	ldr	fp, [r4, #16]
   1c6c8:	mul	r5, r5, r2
   1c6cc:	add	r3, r0, r5
   1c6d0:	cmp	fp, r3
   1c6d4:	bcc	1c724 <flatcc_json_printer_int64_vector_field@@Base+0x200>
   1c6d8:	mov	r2, r5
   1c6dc:	mov	r1, r8
   1c6e0:	bl	124e8 <memset@plt>
   1c6e4:	ldr	r2, [r4, #20]
   1c6e8:	add	r2, r2, r5
   1c6ec:	str	r2, [r4, #20]
   1c6f0:	b	1c658 <flatcc_json_printer_int64_vector_field@@Base+0x134>
   1c6f4:	mov	r3, #45	; 0x2d
   1c6f8:	rsbs	r0, r0, #0
   1c6fc:	strb	r3, [r2]
   1c700:	rsc	r1, r1, #0
   1c704:	add	r2, r2, #1
   1c708:	b	1c66c <flatcc_json_printer_int64_vector_field@@Base+0x148>
   1c70c:	ldr	r3, [r4, #44]	; 0x2c
   1c710:	mov	r1, r9
   1c714:	mov	r0, r4
   1c718:	blx	r3
   1c71c:	ldr	r2, [r4, #20]
   1c720:	b	1c658 <flatcc_json_printer_int64_vector_field@@Base+0x134>
   1c724:	cmp	r0, fp
   1c728:	bcs	1c77c <flatcc_json_printer_int64_vector_field@@Base+0x258>
   1c72c:	sub	fp, fp, r0
   1c730:	cmp	r5, fp
   1c734:	bls	1c6d8 <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   1c738:	mov	r2, fp
   1c73c:	mov	r1, r8
   1c740:	bl	124e8 <memset@plt>
   1c744:	ldr	r3, [r4, #20]
   1c748:	mov	r0, r4
   1c74c:	add	r3, r3, fp
   1c750:	str	r3, [r4, #20]
   1c754:	ldr	r2, [r4, #44]	; 0x2c
   1c758:	mov	r1, r9
   1c75c:	blx	r2
   1c760:	ldr	r0, [r4, #20]
   1c764:	ldr	r3, [r4, #16]
   1c768:	sub	r5, r5, fp
   1c76c:	sub	fp, r3, r0
   1c770:	cmp	r5, fp
   1c774:	bhi	1c738 <flatcc_json_printer_int64_vector_field@@Base+0x214>
   1c778:	b	1c6d8 <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   1c77c:	mov	r0, r4
   1c780:	ldr	r3, [r4, #44]	; 0x2c
   1c784:	mov	r1, r9
   1c788:	blx	r3
   1c78c:	ldr	fp, [r4, #16]
   1c790:	ldr	r0, [r4, #20]
   1c794:	b	1c72c <flatcc_json_printer_int64_vector_field@@Base+0x208>
   1c798:	add	r2, r0, #1
   1c79c:	mov	r3, #10
   1c7a0:	str	r2, [r4, #20]
   1c7a4:	strb	r3, [r0]
   1c7a8:	ldr	r3, [r4, #32]
   1c7ac:	mov	r0, r4
   1c7b0:	sub	r3, r3, #1
   1c7b4:	str	r3, [r4, #32]
   1c7b8:	bl	145ac <test_print@@Base+0xdd8>
   1c7bc:	ldr	r0, [r4, #20]
   1c7c0:	b	1c5d0 <flatcc_json_printer_int64_vector_field@@Base+0xac>
   1c7c4:	ldr	r3, [r4, #20]
   1c7c8:	mov	r2, #10
   1c7cc:	add	r1, r3, #1
   1c7d0:	str	r1, [r4, #20]
   1c7d4:	mov	r0, r4
   1c7d8:	strb	r2, [r3]
   1c7dc:	bl	145ac <test_print@@Base+0xdd8>
   1c7e0:	ldr	r2, [r4, #20]
   1c7e4:	b	1c600 <flatcc_json_printer_int64_vector_field@@Base+0xdc>
   1c7e8:	mov	r3, #45	; 0x2d
   1c7ec:	rsbs	r0, r0, #0
   1c7f0:	strb	r3, [r2]
   1c7f4:	rsc	r1, r1, #0
   1c7f8:	add	r2, r2, #1
   1c7fc:	b	1c618 <flatcc_json_printer_int64_vector_field@@Base+0xf4>
   1c800:	ldr	r3, [r4, #44]	; 0x2c
   1c804:	mov	r0, r4
   1c808:	blx	r3
   1c80c:	ldr	r2, [r4, #20]
   1c810:	b	1c600 <flatcc_json_printer_int64_vector_field@@Base+0xdc>

0001c814 <flatcc_json_printer_bool_vector_field@@Base>:
   1c814:	add	r2, r2, #2
   1c818:	ldr	ip, [r1, #8]
   1c81c:	lsl	r2, r2, #1
   1c820:	cmp	ip, r2
   1c824:	bxle	lr
   1c828:	ldr	ip, [r1, #4]
   1c82c:	ldrh	ip, [ip, r2]
   1c830:	cmp	ip, #0
   1c834:	bxeq	lr
   1c838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c83c:	sub	sp, sp, #12
   1c840:	ldr	lr, [r1]
   1c844:	adds	r5, lr, ip
   1c848:	beq	1c8d4 <flatcc_json_printer_bool_vector_field@@Base+0xc0>
   1c84c:	ldr	r2, [r1, #16]
   1c850:	cmp	r2, #0
   1c854:	add	r2, r2, #1
   1c858:	str	r2, [r1, #16]
   1c85c:	ldrne	r2, [r0, #20]
   1c860:	movne	r1, #44	; 0x2c
   1c864:	addne	r4, r2, #1
   1c868:	strne	r4, [r0, #20]
   1c86c:	strbne	r1, [r2]
   1c870:	mov	r1, r3
   1c874:	ldr	r3, [lr, ip]
   1c878:	mov	r4, r0
   1c87c:	ldr	r2, [sp, #48]	; 0x30
   1c880:	ldr	r8, [r5, r3]
   1c884:	add	fp, r5, r3
   1c888:	bl	14b4c <test_print@@Base+0x1378>
   1c88c:	ldr	r3, [r4, #32]
   1c890:	ldr	r2, [r4, #20]
   1c894:	add	r3, r3, #1
   1c898:	add	r0, r2, #1
   1c89c:	mov	r1, #91	; 0x5b
   1c8a0:	cmp	r8, #0
   1c8a4:	str	r3, [r4, #32]
   1c8a8:	str	r0, [r4, #20]
   1c8ac:	strb	r1, [r2]
   1c8b0:	bne	1c8dc <flatcc_json_printer_bool_vector_field@@Base+0xc8>
   1c8b4:	ldr	r3, [r4, #20]
   1c8b8:	ldrb	r2, [r4, #25]
   1c8bc:	cmp	r2, #0
   1c8c0:	bne	1cacc <flatcc_json_printer_bool_vector_field@@Base+0x2b8>
   1c8c4:	add	r1, r3, #1
   1c8c8:	mov	r2, #93	; 0x5d
   1c8cc:	str	r1, [r4, #20]
   1c8d0:	strb	r2, [r3]
   1c8d4:	add	sp, sp, #12
   1c8d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c8dc:	ldrb	r1, [r4, #25]
   1c8e0:	cmp	r1, #0
   1c8e4:	bne	1cb10 <flatcc_json_printer_bool_vector_field@@Base+0x2fc>
   1c8e8:	ldr	r2, [r4, #20]
   1c8ec:	ldr	r3, [r4, #16]
   1c8f0:	cmp	r2, r3
   1c8f4:	bcs	1cb34 <flatcc_json_printer_bool_vector_field@@Base+0x320>
   1c8f8:	ldrb	r3, [fp, #4]
   1c8fc:	add	r6, fp, #4
   1c900:	ldr	r1, [pc, #576]	; 1cb48 <flatcc_json_printer_bool_vector_field@@Base+0x334>
   1c904:	cmp	r3, #0
   1c908:	bne	1caf8 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   1c90c:	add	ip, r1, #1792	; 0x700
   1c910:	ldr	r0, [r1, #1792]	; 0x700
   1c914:	ldrh	r1, [ip, #4]
   1c918:	mov	r3, #5
   1c91c:	str	r0, [r2]
   1c920:	strh	r1, [r2, #4]
   1c924:	ldr	r2, [r4, #20]
   1c928:	cmp	r8, #1
   1c92c:	add	r3, r2, r3
   1c930:	str	r3, [r4, #20]
   1c934:	beq	1c8b8 <flatcc_json_printer_bool_vector_field@@Base+0xa4>
   1c938:	ldr	r9, [pc, #524]	; 1cb4c <flatcc_json_printer_bool_vector_field@@Base+0x338>
   1c93c:	add	r2, r8, #3
   1c940:	mov	r7, #0
   1c944:	str	r2, [sp]
   1c948:	sub	r2, r9, #8
   1c94c:	str	r2, [sp, #4]
   1c950:	add	r2, r3, #1
   1c954:	str	r2, [r4, #20]
   1c958:	mov	r2, #44	; 0x2c
   1c95c:	strb	r2, [r3]
   1c960:	ldrb	r3, [r4, #25]
   1c964:	cmp	r3, #0
   1c968:	bne	1c9ec <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   1c96c:	ldr	r8, [r4, #20]
   1c970:	ldr	r3, [r4, #16]
   1c974:	cmp	r8, r3
   1c978:	bcs	1ca3c <flatcc_json_printer_bool_vector_field@@Base+0x228>
   1c97c:	ldrb	r3, [r6, #1]!
   1c980:	cmp	r3, #0
   1c984:	bne	1c9b8 <flatcc_json_printer_bool_vector_field@@Base+0x1a4>
   1c988:	ldrh	r3, [r9, #4]
   1c98c:	ldr	r0, [r9]
   1c990:	ldr	r2, [sp]
   1c994:	strh	r3, [r8, #4]
   1c998:	str	r0, [r8]
   1c99c:	ldr	r3, [r4, #20]
   1c9a0:	sub	r2, r2, r6
   1c9a4:	add	r3, r3, #5
   1c9a8:	cmn	fp, r2
   1c9ac:	str	r3, [r4, #20]
   1c9b0:	bne	1c950 <flatcc_json_printer_bool_vector_field@@Base+0x13c>
   1c9b4:	b	1c8b8 <flatcc_json_printer_bool_vector_field@@Base+0xa4>
   1c9b8:	ldr	r2, [sp, #4]
   1c9bc:	ldrb	r3, [r2, #4]
   1c9c0:	ldr	r0, [r2]
   1c9c4:	ldr	r2, [sp]
   1c9c8:	strb	r3, [r8, #4]
   1c9cc:	str	r0, [r8]
   1c9d0:	ldr	r3, [r4, #20]
   1c9d4:	sub	r2, r2, r6
   1c9d8:	add	r3, r3, #4
   1c9dc:	cmn	fp, r2
   1c9e0:	str	r3, [r4, #20]
   1c9e4:	bne	1c950 <flatcc_json_printer_bool_vector_field@@Base+0x13c>
   1c9e8:	b	1c8b8 <flatcc_json_printer_bool_vector_field@@Base+0xa4>
   1c9ec:	ldr	r3, [r4, #20]
   1c9f0:	add	r2, r3, #1
   1c9f4:	str	r2, [r4, #20]
   1c9f8:	mov	r2, #10
   1c9fc:	strb	r2, [r3]
   1ca00:	ldrb	r3, [r4, #25]
   1ca04:	ldr	r8, [r4, #32]
   1ca08:	ldr	r0, [r4, #20]
   1ca0c:	ldr	r5, [r4, #16]
   1ca10:	mul	r8, r8, r3
   1ca14:	add	r3, r0, r8
   1ca18:	cmp	r5, r3
   1ca1c:	bcc	1ca54 <flatcc_json_printer_bool_vector_field@@Base+0x240>
   1ca20:	mov	r2, r8
   1ca24:	mov	r1, #32
   1ca28:	bl	124e8 <memset@plt>
   1ca2c:	ldr	r3, [r4, #20]
   1ca30:	add	r8, r3, r8
   1ca34:	str	r8, [r4, #20]
   1ca38:	b	1c97c <flatcc_json_printer_bool_vector_field@@Base+0x168>
   1ca3c:	ldr	r3, [r4, #44]	; 0x2c
   1ca40:	mov	r1, r7
   1ca44:	mov	r0, r4
   1ca48:	blx	r3
   1ca4c:	ldr	r8, [r4, #20]
   1ca50:	b	1c97c <flatcc_json_printer_bool_vector_field@@Base+0x168>
   1ca54:	cmp	r0, r5
   1ca58:	bcs	1cab0 <flatcc_json_printer_bool_vector_field@@Base+0x29c>
   1ca5c:	sub	r5, r5, r0
   1ca60:	cmp	r8, r5
   1ca64:	bls	1ca20 <flatcc_json_printer_bool_vector_field@@Base+0x20c>
   1ca68:	mov	sl, #32
   1ca6c:	mov	r2, r5
   1ca70:	mov	r1, sl
   1ca74:	bl	124e8 <memset@plt>
   1ca78:	ldr	r3, [r4, #20]
   1ca7c:	mov	r0, r4
   1ca80:	add	r3, r3, r5
   1ca84:	str	r3, [r4, #20]
   1ca88:	ldr	r2, [r4, #44]	; 0x2c
   1ca8c:	mov	r1, r7
   1ca90:	blx	r2
   1ca94:	ldr	r0, [r4, #20]
   1ca98:	ldr	r3, [r4, #16]
   1ca9c:	sub	r8, r8, r5
   1caa0:	sub	r5, r3, r0
   1caa4:	cmp	r8, r5
   1caa8:	bhi	1ca6c <flatcc_json_printer_bool_vector_field@@Base+0x258>
   1caac:	b	1ca20 <flatcc_json_printer_bool_vector_field@@Base+0x20c>
   1cab0:	mov	r0, r4
   1cab4:	ldr	r3, [r4, #44]	; 0x2c
   1cab8:	mov	r1, r7
   1cabc:	blx	r3
   1cac0:	ldr	r5, [r4, #16]
   1cac4:	ldr	r0, [r4, #20]
   1cac8:	b	1ca5c <flatcc_json_printer_bool_vector_field@@Base+0x248>
   1cacc:	add	r1, r3, #1
   1cad0:	mov	r2, #10
   1cad4:	str	r1, [r4, #20]
   1cad8:	strb	r2, [r3]
   1cadc:	ldr	r3, [r4, #32]
   1cae0:	mov	r0, r4
   1cae4:	sub	r3, r3, #1
   1cae8:	str	r3, [r4, #32]
   1caec:	bl	145ac <test_print@@Base+0xdd8>
   1caf0:	ldr	r3, [r4, #20]
   1caf4:	b	1c8c4 <flatcc_json_printer_bool_vector_field@@Base+0xb0>
   1caf8:	ldrb	ip, [r1, #1788]	; 0x6fc
   1cafc:	ldr	r0, [r1, #1784]	; 0x6f8
   1cb00:	mov	r3, #4
   1cb04:	strb	ip, [r2, #4]
   1cb08:	str	r0, [r2]
   1cb0c:	b	1c924 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   1cb10:	ldr	r3, [r4, #20]
   1cb14:	mov	r2, #10
   1cb18:	add	r1, r3, #1
   1cb1c:	str	r1, [r4, #20]
   1cb20:	mov	r0, r4
   1cb24:	strb	r2, [r3]
   1cb28:	bl	145ac <test_print@@Base+0xdd8>
   1cb2c:	ldr	r2, [r4, #20]
   1cb30:	b	1c8f8 <flatcc_json_printer_bool_vector_field@@Base+0xe4>
   1cb34:	ldr	r3, [r4, #44]	; 0x2c
   1cb38:	mov	r0, r4
   1cb3c:	blx	r3
   1cb40:	ldr	r2, [r4, #20]
   1cb44:	b	1c8f8 <flatcc_json_printer_bool_vector_field@@Base+0xe4>
   1cb48:	andeq	r1, r2, r8, ror #12
   1cb4c:	andeq	r1, r2, r8, ror #26

0001cb50 <flatcc_json_printer_float_vector_field@@Base>:
   1cb50:	add	r2, r2, #2
   1cb54:	ldr	ip, [r1, #8]
   1cb58:	lsl	r2, r2, #1
   1cb5c:	cmp	ip, r2
   1cb60:	bxle	lr
   1cb64:	ldr	ip, [r1, #4]
   1cb68:	ldrh	ip, [ip, r2]
   1cb6c:	cmp	ip, #0
   1cb70:	bxeq	lr
   1cb74:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb78:	ldr	lr, [r1]
   1cb7c:	adds	r5, lr, ip
   1cb80:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb84:	ldr	r2, [r1, #16]
   1cb88:	cmp	r2, #0
   1cb8c:	add	r2, r2, #1
   1cb90:	str	r2, [r1, #16]
   1cb94:	ldrne	r2, [r0, #20]
   1cb98:	movne	r1, #44	; 0x2c
   1cb9c:	addne	r4, r2, #1
   1cba0:	strne	r4, [r0, #20]
   1cba4:	strbne	r1, [r2]
   1cba8:	mov	r1, r3
   1cbac:	ldr	r3, [lr, ip]
   1cbb0:	mov	r4, r0
   1cbb4:	ldr	r2, [sp, #40]	; 0x28
   1cbb8:	add	r7, r5, r3
   1cbbc:	ldr	r5, [r5, r3]
   1cbc0:	bl	14b4c <test_print@@Base+0x1378>
   1cbc4:	ldr	r3, [r4, #32]
   1cbc8:	ldr	r2, [r4, #20]
   1cbcc:	add	r3, r3, #1
   1cbd0:	add	r0, r2, #1
   1cbd4:	mov	r1, #91	; 0x5b
   1cbd8:	cmp	r5, #0
   1cbdc:	str	r3, [r4, #32]
   1cbe0:	str	r0, [r4, #20]
   1cbe4:	strb	r1, [r2]
   1cbe8:	bne	1cc10 <flatcc_json_printer_float_vector_field@@Base+0xc0>
   1cbec:	ldr	r0, [r4, #20]
   1cbf0:	ldrb	r3, [r4, #25]
   1cbf4:	cmp	r3, #0
   1cbf8:	bne	1cd8c <flatcc_json_printer_float_vector_field@@Base+0x23c>
   1cbfc:	add	r2, r0, #1
   1cc00:	mov	r3, #93	; 0x5d
   1cc04:	str	r2, [r4, #20]
   1cc08:	strb	r3, [r0]
   1cc0c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc10:	ldrb	r1, [r4, #25]
   1cc14:	cmp	r1, #0
   1cc18:	bne	1cdb8 <flatcc_json_printer_float_vector_field@@Base+0x268>
   1cc1c:	ldr	r0, [r4, #20]
   1cc20:	ldr	r3, [r4, #16]
   1cc24:	cmp	r0, r3
   1cc28:	bcs	1cddc <flatcc_json_printer_float_vector_field@@Base+0x28c>
   1cc2c:	vldr	s0, [r7, #4]
   1cc30:	sub	r6, r5, #2
   1cc34:	add	r7, r7, #8
   1cc38:	vcvt.f64.f32	d0, s0
   1cc3c:	bl	14cb0 <test_print@@Base+0x14dc>
   1cc40:	ldr	r3, [r4, #20]
   1cc44:	cmp	r5, #1
   1cc48:	add	r0, r3, r0
   1cc4c:	str	r0, [r4, #20]
   1cc50:	beq	1cbf0 <flatcc_json_printer_float_vector_field@@Base+0xa0>
   1cc54:	mov	sl, #44	; 0x2c
   1cc58:	mov	r9, #0
   1cc5c:	mov	r8, #32
   1cc60:	b	1cc98 <flatcc_json_printer_float_vector_field@@Base+0x148>
   1cc64:	ldr	r0, [r4, #20]
   1cc68:	ldr	r3, [r4, #16]
   1cc6c:	cmp	r0, r3
   1cc70:	bcs	1cd00 <flatcc_json_printer_float_vector_field@@Base+0x1b0>
   1cc74:	vldmia	r7!, {s0}
   1cc78:	vcvt.f64.f32	d0, s0
   1cc7c:	bl	14cb0 <test_print@@Base+0x14dc>
   1cc80:	ldr	r3, [r4, #20]
   1cc84:	cmp	r6, #0
   1cc88:	sub	r6, r6, #1
   1cc8c:	add	r0, r3, r0
   1cc90:	str	r0, [r4, #20]
   1cc94:	beq	1cbf0 <flatcc_json_printer_float_vector_field@@Base+0xa0>
   1cc98:	add	r3, r0, #1
   1cc9c:	str	r3, [r4, #20]
   1cca0:	strb	sl, [r0]
   1cca4:	ldrb	r3, [r4, #25]
   1cca8:	cmp	r3, #0
   1ccac:	beq	1cc64 <flatcc_json_printer_float_vector_field@@Base+0x114>
   1ccb0:	ldr	r3, [r4, #20]
   1ccb4:	add	r2, r3, #1
   1ccb8:	str	r2, [r4, #20]
   1ccbc:	mov	r2, #10
   1ccc0:	strb	r2, [r3]
   1ccc4:	ldrb	r2, [r4, #25]
   1ccc8:	ldr	r5, [r4, #32]
   1cccc:	ldr	r0, [r4, #20]
   1ccd0:	ldr	r3, [r4, #16]
   1ccd4:	mul	r5, r5, r2
   1ccd8:	add	r2, r0, r5
   1ccdc:	cmp	r3, r2
   1cce0:	bcc	1cd18 <flatcc_json_printer_float_vector_field@@Base+0x1c8>
   1cce4:	mov	r2, r5
   1cce8:	mov	r1, r8
   1ccec:	bl	124e8 <memset@plt>
   1ccf0:	ldr	r0, [r4, #20]
   1ccf4:	add	r0, r0, r5
   1ccf8:	str	r0, [r4, #20]
   1ccfc:	b	1cc74 <flatcc_json_printer_float_vector_field@@Base+0x124>
   1cd00:	mov	r0, r4
   1cd04:	ldr	r3, [r4, #44]	; 0x2c
   1cd08:	mov	r1, r9
   1cd0c:	blx	r3
   1cd10:	ldr	r0, [r4, #20]
   1cd14:	b	1cc74 <flatcc_json_printer_float_vector_field@@Base+0x124>
   1cd18:	cmp	r0, r3
   1cd1c:	bcs	1cd70 <flatcc_json_printer_float_vector_field@@Base+0x220>
   1cd20:	sub	fp, r3, r0
   1cd24:	cmp	r5, fp
   1cd28:	bls	1cce4 <flatcc_json_printer_float_vector_field@@Base+0x194>
   1cd2c:	mov	r2, fp
   1cd30:	mov	r1, r8
   1cd34:	bl	124e8 <memset@plt>
   1cd38:	ldr	r1, [r4, #20]
   1cd3c:	ldr	r2, [r4, #44]	; 0x2c
   1cd40:	add	r1, r1, fp
   1cd44:	str	r1, [r4, #20]
   1cd48:	mov	r0, r4
   1cd4c:	mov	r1, r9
   1cd50:	blx	r2
   1cd54:	ldr	r0, [r4, #20]
   1cd58:	ldr	r2, [r4, #16]
   1cd5c:	sub	r5, r5, fp
   1cd60:	sub	fp, r2, r0
   1cd64:	cmp	r5, fp
   1cd68:	bhi	1cd2c <flatcc_json_printer_float_vector_field@@Base+0x1dc>
   1cd6c:	b	1cce4 <flatcc_json_printer_float_vector_field@@Base+0x194>
   1cd70:	ldr	r3, [r4, #44]	; 0x2c
   1cd74:	mov	r0, r4
   1cd78:	mov	r1, r9
   1cd7c:	blx	r3
   1cd80:	ldr	r3, [r4, #16]
   1cd84:	ldr	r0, [r4, #20]
   1cd88:	b	1cd20 <flatcc_json_printer_float_vector_field@@Base+0x1d0>
   1cd8c:	add	r2, r0, #1
   1cd90:	mov	r3, #10
   1cd94:	str	r2, [r4, #20]
   1cd98:	strb	r3, [r0]
   1cd9c:	ldr	r3, [r4, #32]
   1cda0:	mov	r0, r4
   1cda4:	sub	r3, r3, #1
   1cda8:	str	r3, [r4, #32]
   1cdac:	bl	145ac <test_print@@Base+0xdd8>
   1cdb0:	ldr	r0, [r4, #20]
   1cdb4:	b	1cbfc <flatcc_json_printer_float_vector_field@@Base+0xac>
   1cdb8:	ldr	r3, [r4, #20]
   1cdbc:	mov	r2, #10
   1cdc0:	add	r1, r3, #1
   1cdc4:	str	r1, [r4, #20]
   1cdc8:	mov	r0, r4
   1cdcc:	strb	r2, [r3]
   1cdd0:	bl	145ac <test_print@@Base+0xdd8>
   1cdd4:	ldr	r0, [r4, #20]
   1cdd8:	b	1cc2c <flatcc_json_printer_float_vector_field@@Base+0xdc>
   1cddc:	mov	r0, r4
   1cde0:	ldr	r3, [r4, #44]	; 0x2c
   1cde4:	blx	r3
   1cde8:	ldr	r0, [r4, #20]
   1cdec:	b	1cc2c <flatcc_json_printer_float_vector_field@@Base+0xdc>

0001cdf0 <flatcc_json_printer_double_vector_field@@Base>:
   1cdf0:	add	r2, r2, #2
   1cdf4:	ldr	ip, [r1, #8]
   1cdf8:	lsl	r2, r2, #1
   1cdfc:	cmp	ip, r2
   1ce00:	bxle	lr
   1ce04:	ldr	ip, [r1, #4]
   1ce08:	ldrh	ip, [ip, r2]
   1ce0c:	cmp	ip, #0
   1ce10:	bxeq	lr
   1ce14:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce18:	ldr	lr, [r1]
   1ce1c:	adds	r5, lr, ip
   1ce20:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce24:	ldr	r2, [r1, #16]
   1ce28:	cmp	r2, #0
   1ce2c:	add	r2, r2, #1
   1ce30:	str	r2, [r1, #16]
   1ce34:	ldrne	r2, [r0, #20]
   1ce38:	movne	r1, #44	; 0x2c
   1ce3c:	addne	r4, r2, #1
   1ce40:	strne	r4, [r0, #20]
   1ce44:	strbne	r1, [r2]
   1ce48:	mov	r1, r3
   1ce4c:	ldr	r3, [lr, ip]
   1ce50:	mov	r4, r0
   1ce54:	ldr	r2, [sp, #40]	; 0x28
   1ce58:	ldr	r6, [r5, r3]
   1ce5c:	add	r7, r5, r3
   1ce60:	bl	14b4c <test_print@@Base+0x1378>
   1ce64:	ldr	r3, [r4, #32]
   1ce68:	ldr	r2, [r4, #20]
   1ce6c:	add	r3, r3, #1
   1ce70:	add	r0, r2, #1
   1ce74:	mov	r1, #91	; 0x5b
   1ce78:	cmp	r6, #0
   1ce7c:	str	r3, [r4, #32]
   1ce80:	str	r0, [r4, #20]
   1ce84:	strb	r1, [r2]
   1ce88:	bne	1ceb0 <flatcc_json_printer_double_vector_field@@Base+0xc0>
   1ce8c:	ldr	r0, [r4, #20]
   1ce90:	ldrb	r3, [r4, #25]
   1ce94:	cmp	r3, #0
   1ce98:	bne	1d024 <flatcc_json_printer_double_vector_field@@Base+0x234>
   1ce9c:	add	r2, r0, #1
   1cea0:	mov	r3, #93	; 0x5d
   1cea4:	str	r2, [r4, #20]
   1cea8:	strb	r3, [r0]
   1ceac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ceb0:	ldrb	r1, [r4, #25]
   1ceb4:	cmp	r1, #0
   1ceb8:	bne	1d050 <flatcc_json_printer_double_vector_field@@Base+0x260>
   1cebc:	ldr	r0, [r4, #20]
   1cec0:	ldr	r3, [r4, #16]
   1cec4:	cmp	r0, r3
   1cec8:	bcs	1d074 <flatcc_json_printer_double_vector_field@@Base+0x284>
   1cecc:	vldr	d0, [r7, #4]
   1ced0:	bl	14cb0 <test_print@@Base+0x14dc>
   1ced4:	ldr	r3, [r4, #20]
   1ced8:	cmp	r6, #1
   1cedc:	add	r7, r7, #12
   1cee0:	sub	r6, r6, #2
   1cee4:	add	r0, r3, r0
   1cee8:	str	r0, [r4, #20]
   1ceec:	beq	1ce90 <flatcc_json_printer_double_vector_field@@Base+0xa0>
   1cef0:	mov	sl, #44	; 0x2c
   1cef4:	mov	r9, #0
   1cef8:	mov	r8, #32
   1cefc:	b	1cf30 <flatcc_json_printer_double_vector_field@@Base+0x140>
   1cf00:	ldr	r0, [r4, #20]
   1cf04:	ldr	r3, [r4, #16]
   1cf08:	cmp	r0, r3
   1cf0c:	bcs	1cf98 <flatcc_json_printer_double_vector_field@@Base+0x1a8>
   1cf10:	vldmia	r7!, {d0}
   1cf14:	bl	14cb0 <test_print@@Base+0x14dc>
   1cf18:	ldr	r3, [r4, #20]
   1cf1c:	cmp	r6, #0
   1cf20:	sub	r6, r6, #1
   1cf24:	add	r0, r3, r0
   1cf28:	str	r0, [r4, #20]
   1cf2c:	beq	1ce90 <flatcc_json_printer_double_vector_field@@Base+0xa0>
   1cf30:	add	r3, r0, #1
   1cf34:	str	r3, [r4, #20]
   1cf38:	strb	sl, [r0]
   1cf3c:	ldrb	r3, [r4, #25]
   1cf40:	cmp	r3, #0
   1cf44:	beq	1cf00 <flatcc_json_printer_double_vector_field@@Base+0x110>
   1cf48:	ldr	r3, [r4, #20]
   1cf4c:	add	r2, r3, #1
   1cf50:	str	r2, [r4, #20]
   1cf54:	mov	r2, #10
   1cf58:	strb	r2, [r3]
   1cf5c:	ldrb	r2, [r4, #25]
   1cf60:	ldr	r5, [r4, #32]
   1cf64:	ldr	r0, [r4, #20]
   1cf68:	ldr	r3, [r4, #16]
   1cf6c:	mul	r5, r5, r2
   1cf70:	add	r2, r0, r5
   1cf74:	cmp	r3, r2
   1cf78:	bcc	1cfb0 <flatcc_json_printer_double_vector_field@@Base+0x1c0>
   1cf7c:	mov	r2, r5
   1cf80:	mov	r1, r8
   1cf84:	bl	124e8 <memset@plt>
   1cf88:	ldr	r0, [r4, #20]
   1cf8c:	add	r0, r0, r5
   1cf90:	str	r0, [r4, #20]
   1cf94:	b	1cf10 <flatcc_json_printer_double_vector_field@@Base+0x120>
   1cf98:	mov	r0, r4
   1cf9c:	ldr	r3, [r4, #44]	; 0x2c
   1cfa0:	mov	r1, r9
   1cfa4:	blx	r3
   1cfa8:	ldr	r0, [r4, #20]
   1cfac:	b	1cf10 <flatcc_json_printer_double_vector_field@@Base+0x120>
   1cfb0:	cmp	r0, r3
   1cfb4:	bcs	1d008 <flatcc_json_printer_double_vector_field@@Base+0x218>
   1cfb8:	sub	fp, r3, r0
   1cfbc:	cmp	r5, fp
   1cfc0:	bls	1cf7c <flatcc_json_printer_double_vector_field@@Base+0x18c>
   1cfc4:	mov	r2, fp
   1cfc8:	mov	r1, r8
   1cfcc:	bl	124e8 <memset@plt>
   1cfd0:	ldr	r1, [r4, #20]
   1cfd4:	ldr	r2, [r4, #44]	; 0x2c
   1cfd8:	add	r1, r1, fp
   1cfdc:	str	r1, [r4, #20]
   1cfe0:	mov	r0, r4
   1cfe4:	mov	r1, r9
   1cfe8:	blx	r2
   1cfec:	ldr	r0, [r4, #20]
   1cff0:	ldr	r2, [r4, #16]
   1cff4:	sub	r5, r5, fp
   1cff8:	sub	fp, r2, r0
   1cffc:	cmp	r5, fp
   1d000:	bhi	1cfc4 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   1d004:	b	1cf7c <flatcc_json_printer_double_vector_field@@Base+0x18c>
   1d008:	ldr	r3, [r4, #44]	; 0x2c
   1d00c:	mov	r0, r4
   1d010:	mov	r1, r9
   1d014:	blx	r3
   1d018:	ldr	r3, [r4, #16]
   1d01c:	ldr	r0, [r4, #20]
   1d020:	b	1cfb8 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   1d024:	add	r2, r0, #1
   1d028:	mov	r3, #10
   1d02c:	str	r2, [r4, #20]
   1d030:	strb	r3, [r0]
   1d034:	ldr	r3, [r4, #32]
   1d038:	mov	r0, r4
   1d03c:	sub	r3, r3, #1
   1d040:	str	r3, [r4, #32]
   1d044:	bl	145ac <test_print@@Base+0xdd8>
   1d048:	ldr	r0, [r4, #20]
   1d04c:	b	1ce9c <flatcc_json_printer_double_vector_field@@Base+0xac>
   1d050:	ldr	r3, [r4, #20]
   1d054:	mov	r2, #10
   1d058:	add	r1, r3, #1
   1d05c:	str	r1, [r4, #20]
   1d060:	mov	r0, r4
   1d064:	strb	r2, [r3]
   1d068:	bl	145ac <test_print@@Base+0xdd8>
   1d06c:	ldr	r0, [r4, #20]
   1d070:	b	1cecc <flatcc_json_printer_double_vector_field@@Base+0xdc>
   1d074:	mov	r0, r4
   1d078:	ldr	r3, [r4, #44]	; 0x2c
   1d07c:	blx	r3
   1d080:	ldr	r0, [r4, #20]
   1d084:	b	1cecc <flatcc_json_printer_double_vector_field@@Base+0xdc>

0001d088 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1d088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d08c:	sub	sp, sp, #12
   1d090:	ldrb	r5, [r0, #27]
   1d094:	ldr	fp, [sp, #52]	; 0x34
   1d098:	cmp	r5, #0
   1d09c:	ldr	r5, [sp, #48]	; 0x30
   1d0a0:	bne	1d234 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   1d0a4:	mov	r6, r3
   1d0a8:	add	r3, r2, #2
   1d0ac:	ldr	r2, [r1, #8]
   1d0b0:	lsl	r3, r3, #1
   1d0b4:	cmp	r2, r3
   1d0b8:	mov	lr, r1
   1d0bc:	bgt	1d0c8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x40>
   1d0c0:	add	sp, sp, #12
   1d0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0c8:	ldr	r2, [r1, #4]
   1d0cc:	ldrh	r2, [r2, r3]
   1d0d0:	cmp	r2, #0
   1d0d4:	beq	1d0c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38>
   1d0d8:	mov	r4, r0
   1d0dc:	ldr	r0, [r1]
   1d0e0:	adds	ip, r0, r2
   1d0e4:	beq	1d0c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38>
   1d0e8:	ldr	r3, [r1, #16]
   1d0ec:	cmp	r3, #0
   1d0f0:	add	r3, r3, #1
   1d0f4:	str	r3, [r1, #16]
   1d0f8:	ldrne	r3, [r4, #20]
   1d0fc:	movne	r1, #44	; 0x2c
   1d100:	addne	lr, r3, #1
   1d104:	strne	lr, [r4, #20]
   1d108:	strbne	r1, [r3]
   1d10c:	ldr	r3, [r0, r2]
   1d110:	mov	r1, r6
   1d114:	mov	r2, r5
   1d118:	mov	r0, r4
   1d11c:	ldr	r9, [ip, r3]
   1d120:	add	sl, ip, r3
   1d124:	bl	14b4c <test_print@@Base+0x1378>
   1d128:	ldr	r3, [r4, #32]
   1d12c:	ldr	r2, [r4, #20]
   1d130:	add	r3, r3, #1
   1d134:	add	r0, r2, #1
   1d138:	mov	r1, #91	; 0x5b
   1d13c:	cmp	r9, #0
   1d140:	str	r3, [r4, #32]
   1d144:	str	r0, [r4, #20]
   1d148:	strb	r1, [r2]
   1d14c:	beq	1d2ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1d150:	ldrb	r1, [r4, #25]
   1d154:	cmp	r1, #0
   1d158:	bne	1d31c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x294>
   1d15c:	ldr	r2, [r4, #20]
   1d160:	ldr	r3, [r4, #16]
   1d164:	cmp	r2, r3
   1d168:	bcs	1d33c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2b4>
   1d16c:	ldrb	r1, [sl, #4]
   1d170:	mov	r0, r4
   1d174:	blx	fp
   1d178:	cmp	r9, #1
   1d17c:	add	r6, sl, #5
   1d180:	beq	1d2ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1d184:	add	r3, r9, #4
   1d188:	str	r3, [sp, #4]
   1d18c:	mov	r8, #0
   1d190:	mov	r7, #32
   1d194:	b	1d1c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x13c>
   1d198:	ldr	r2, [r4, #20]
   1d19c:	ldr	r3, [r4, #16]
   1d1a0:	cmp	r2, r3
   1d1a4:	bcs	1d240 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b8>
   1d1a8:	ldrb	r1, [r6], #1
   1d1ac:	mov	r0, r4
   1d1b0:	blx	fp
   1d1b4:	ldr	r3, [sp, #4]
   1d1b8:	sub	r3, r3, r6
   1d1bc:	cmn	sl, r3
   1d1c0:	beq	1d2ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x224>
   1d1c4:	ldr	r3, [r4, #20]
   1d1c8:	add	r2, r3, #1
   1d1cc:	str	r2, [r4, #20]
   1d1d0:	mov	r2, #44	; 0x2c
   1d1d4:	strb	r2, [r3]
   1d1d8:	ldrb	r3, [r4, #25]
   1d1dc:	cmp	r3, #0
   1d1e0:	beq	1d198 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x110>
   1d1e4:	ldr	r3, [r4, #20]
   1d1e8:	add	r2, r3, #1
   1d1ec:	str	r2, [r4, #20]
   1d1f0:	mov	r2, #10
   1d1f4:	strb	r2, [r3]
   1d1f8:	ldrb	r3, [r4, #25]
   1d1fc:	ldr	r2, [r4, #32]
   1d200:	ldr	r0, [r4, #20]
   1d204:	ldr	r5, [r4, #16]
   1d208:	mul	r9, r2, r3
   1d20c:	add	r2, r0, r9
   1d210:	cmp	r5, r2
   1d214:	bcc	1d254 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   1d218:	mov	r2, r9
   1d21c:	mov	r1, r7
   1d220:	bl	124e8 <memset@plt>
   1d224:	ldr	r2, [r4, #20]
   1d228:	add	r3, r2, r9
   1d22c:	str	r3, [r4, #20]
   1d230:	b	1d1a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x120>
   1d234:	add	sp, sp, #12
   1d238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d23c:	b	1ae68 <flatcc_json_printer_uint8_vector_field@@Base>
   1d240:	ldr	r3, [r4, #44]	; 0x2c
   1d244:	mov	r1, r8
   1d248:	mov	r0, r4
   1d24c:	blx	r3
   1d250:	b	1d1a8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x120>
   1d254:	cmp	r0, r5
   1d258:	bcs	1d2d4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   1d25c:	sub	r5, r5, r0
   1d260:	cmp	r9, r5
   1d264:	bls	1d218 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   1d268:	mov	r2, r5
   1d26c:	mov	r1, r7
   1d270:	bl	124e8 <memset@plt>
   1d274:	ldr	r3, [r4, #20]
   1d278:	mov	r0, r4
   1d27c:	add	r3, r3, r5
   1d280:	str	r3, [r4, #20]
   1d284:	ldr	r2, [r4, #44]	; 0x2c
   1d288:	mov	r1, r8
   1d28c:	blx	r2
   1d290:	ldr	r0, [r4, #20]
   1d294:	ldr	r3, [r4, #16]
   1d298:	sub	r9, r9, r5
   1d29c:	sub	r5, r3, r0
   1d2a0:	cmp	r9, r5
   1d2a4:	bhi	1d268 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e0>
   1d2a8:	b	1d218 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   1d2ac:	ldrb	r3, [r4, #25]
   1d2b0:	cmp	r3, #0
   1d2b4:	bne	1d2f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x268>
   1d2b8:	ldr	r3, [r4, #20]
   1d2bc:	mov	r2, #93	; 0x5d
   1d2c0:	add	r1, r3, #1
   1d2c4:	str	r1, [r4, #20]
   1d2c8:	strb	r2, [r3]
   1d2cc:	add	sp, sp, #12
   1d2d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2d4:	mov	r0, r4
   1d2d8:	ldr	r2, [r4, #44]	; 0x2c
   1d2dc:	mov	r1, r8
   1d2e0:	blx	r2
   1d2e4:	ldr	r5, [r4, #16]
   1d2e8:	ldr	r0, [r4, #20]
   1d2ec:	b	1d25c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   1d2f0:	ldr	r3, [r4, #20]
   1d2f4:	mov	r2, #10
   1d2f8:	add	r1, r3, #1
   1d2fc:	str	r1, [r4, #20]
   1d300:	strb	r2, [r3]
   1d304:	ldr	r3, [r4, #32]
   1d308:	mov	r0, r4
   1d30c:	sub	r3, r3, #1
   1d310:	str	r3, [r4, #32]
   1d314:	bl	145ac <test_print@@Base+0xdd8>
   1d318:	b	1d2b8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x230>
   1d31c:	ldr	r3, [r4, #20]
   1d320:	mov	r2, #10
   1d324:	add	r1, r3, #1
   1d328:	str	r1, [r4, #20]
   1d32c:	mov	r0, r4
   1d330:	strb	r2, [r3]
   1d334:	bl	145ac <test_print@@Base+0xdd8>
   1d338:	b	1d16c <flatcc_json_printer_uint8_enum_vector_field@@Base+0xe4>
   1d33c:	ldr	r3, [r4, #44]	; 0x2c
   1d340:	mov	r0, r4
   1d344:	blx	r3
   1d348:	b	1d16c <flatcc_json_printer_uint8_enum_vector_field@@Base+0xe4>

0001d34c <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1d34c:	b	1d088 <flatcc_json_printer_uint8_enum_vector_field@@Base>

0001d350 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1d350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d354:	sub	sp, sp, #4
   1d358:	ldrb	r5, [r0, #27]
   1d35c:	ldr	sl, [sp, #44]	; 0x2c
   1d360:	cmp	r5, #0
   1d364:	ldr	r5, [sp, #40]	; 0x28
   1d368:	bne	1d4f4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a4>
   1d36c:	mov	r6, r3
   1d370:	add	r3, r2, #2
   1d374:	ldr	r2, [r1, #8]
   1d378:	lsl	r3, r3, #1
   1d37c:	cmp	r2, r3
   1d380:	mov	lr, r1
   1d384:	bgt	1d390 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x40>
   1d388:	add	sp, sp, #4
   1d38c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d390:	ldr	r2, [r1, #4]
   1d394:	ldrh	r2, [r2, r3]
   1d398:	cmp	r2, #0
   1d39c:	beq	1d388 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38>
   1d3a0:	mov	r4, r0
   1d3a4:	ldr	r0, [r1]
   1d3a8:	adds	ip, r0, r2
   1d3ac:	beq	1d388 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38>
   1d3b0:	ldr	r3, [r1, #16]
   1d3b4:	cmp	r3, #0
   1d3b8:	add	r3, r3, #1
   1d3bc:	str	r3, [r1, #16]
   1d3c0:	ldrne	r3, [r4, #20]
   1d3c4:	movne	r1, #44	; 0x2c
   1d3c8:	addne	lr, r3, #1
   1d3cc:	strne	lr, [r4, #20]
   1d3d0:	strbne	r1, [r3]
   1d3d4:	ldr	r3, [r0, r2]
   1d3d8:	mov	r1, r6
   1d3dc:	mov	r2, r5
   1d3e0:	mov	r0, r4
   1d3e4:	ldr	r6, [ip, r3]
   1d3e8:	add	r7, ip, r3
   1d3ec:	bl	14b4c <test_print@@Base+0x1378>
   1d3f0:	ldr	r3, [r4, #32]
   1d3f4:	ldr	r2, [r4, #20]
   1d3f8:	add	r3, r3, #1
   1d3fc:	add	r0, r2, #1
   1d400:	mov	r1, #91	; 0x5b
   1d404:	cmp	r6, #0
   1d408:	str	r3, [r4, #32]
   1d40c:	str	r0, [r4, #20]
   1d410:	strb	r1, [r2]
   1d414:	beq	1d56c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   1d418:	ldrb	r1, [r4, #25]
   1d41c:	cmp	r1, #0
   1d420:	bne	1d5dc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   1d424:	ldr	r2, [r4, #20]
   1d428:	ldr	r3, [r4, #16]
   1d42c:	cmp	r2, r3
   1d430:	bcs	1d5fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2ac>
   1d434:	ldrh	r1, [r7, #4]
   1d438:	mov	r0, r4
   1d43c:	blx	sl
   1d440:	cmp	r6, #1
   1d444:	add	r7, r7, #6
   1d448:	sub	r6, r6, #2
   1d44c:	beq	1d56c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   1d450:	mov	r9, #0
   1d454:	mov	r8, #32
   1d458:	b	1d484 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x134>
   1d45c:	ldr	r2, [r4, #20]
   1d460:	ldr	r3, [r4, #16]
   1d464:	cmp	r2, r3
   1d468:	bcs	1d500 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1d46c:	ldrh	r1, [r7], #2
   1d470:	mov	r0, r4
   1d474:	blx	sl
   1d478:	cmp	r6, #0
   1d47c:	sub	r6, r6, #1
   1d480:	beq	1d56c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   1d484:	ldr	r3, [r4, #20]
   1d488:	add	r2, r3, #1
   1d48c:	str	r2, [r4, #20]
   1d490:	mov	r2, #44	; 0x2c
   1d494:	strb	r2, [r3]
   1d498:	ldrb	r3, [r4, #25]
   1d49c:	cmp	r3, #0
   1d4a0:	beq	1d45c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x10c>
   1d4a4:	ldr	r3, [r4, #20]
   1d4a8:	add	r2, r3, #1
   1d4ac:	str	r2, [r4, #20]
   1d4b0:	mov	r2, #10
   1d4b4:	strb	r2, [r3]
   1d4b8:	ldrb	r3, [r4, #25]
   1d4bc:	ldr	fp, [r4, #32]
   1d4c0:	ldr	r0, [r4, #20]
   1d4c4:	ldr	r5, [r4, #16]
   1d4c8:	mul	fp, fp, r3
   1d4cc:	add	r3, r0, fp
   1d4d0:	cmp	r5, r3
   1d4d4:	bcc	1d514 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1c4>
   1d4d8:	mov	r2, fp
   1d4dc:	mov	r1, r8
   1d4e0:	bl	124e8 <memset@plt>
   1d4e4:	ldr	r3, [r4, #20]
   1d4e8:	add	fp, r3, fp
   1d4ec:	str	fp, [r4, #20]
   1d4f0:	b	1d46c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x11c>
   1d4f4:	add	sp, sp, #4
   1d4f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d4fc:	b	1b1a4 <flatcc_json_printer_uint16_vector_field@@Base>
   1d500:	ldr	r3, [r4, #44]	; 0x2c
   1d504:	mov	r1, r9
   1d508:	mov	r0, r4
   1d50c:	blx	r3
   1d510:	b	1d46c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x11c>
   1d514:	cmp	r0, r5
   1d518:	bcs	1d594 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x244>
   1d51c:	sub	r5, r5, r0
   1d520:	cmp	fp, r5
   1d524:	bls	1d4d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x188>
   1d528:	mov	r2, r5
   1d52c:	mov	r1, r8
   1d530:	bl	124e8 <memset@plt>
   1d534:	ldr	r3, [r4, #20]
   1d538:	mov	r0, r4
   1d53c:	add	r3, r3, r5
   1d540:	str	r3, [r4, #20]
   1d544:	ldr	r2, [r4, #44]	; 0x2c
   1d548:	mov	r1, r9
   1d54c:	blx	r2
   1d550:	ldr	r0, [r4, #20]
   1d554:	ldr	r3, [r4, #16]
   1d558:	sub	fp, fp, r5
   1d55c:	sub	r5, r3, r0
   1d560:	cmp	fp, r5
   1d564:	bhi	1d528 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d8>
   1d568:	b	1d4d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x188>
   1d56c:	ldrb	r3, [r4, #25]
   1d570:	cmp	r3, #0
   1d574:	bne	1d5b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x260>
   1d578:	ldr	r3, [r4, #20]
   1d57c:	mov	r2, #93	; 0x5d
   1d580:	add	r1, r3, #1
   1d584:	str	r1, [r4, #20]
   1d588:	strb	r2, [r3]
   1d58c:	add	sp, sp, #4
   1d590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d594:	mov	r0, r4
   1d598:	ldr	r3, [r4, #44]	; 0x2c
   1d59c:	mov	r1, r9
   1d5a0:	blx	r3
   1d5a4:	ldr	r5, [r4, #16]
   1d5a8:	ldr	r0, [r4, #20]
   1d5ac:	b	1d51c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1cc>
   1d5b0:	ldr	r3, [r4, #20]
   1d5b4:	mov	r2, #10
   1d5b8:	add	r1, r3, #1
   1d5bc:	str	r1, [r4, #20]
   1d5c0:	strb	r2, [r3]
   1d5c4:	ldr	r3, [r4, #32]
   1d5c8:	mov	r0, r4
   1d5cc:	sub	r3, r3, #1
   1d5d0:	str	r3, [r4, #32]
   1d5d4:	bl	145ac <test_print@@Base+0xdd8>
   1d5d8:	b	1d578 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x228>
   1d5dc:	ldr	r3, [r4, #20]
   1d5e0:	mov	r2, #10
   1d5e4:	add	r1, r3, #1
   1d5e8:	str	r1, [r4, #20]
   1d5ec:	mov	r0, r4
   1d5f0:	strb	r2, [r3]
   1d5f4:	bl	145ac <test_print@@Base+0xdd8>
   1d5f8:	b	1d434 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xe4>
   1d5fc:	ldr	r3, [r4, #44]	; 0x2c
   1d600:	mov	r0, r4
   1d604:	blx	r3
   1d608:	b	1d434 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xe4>

0001d60c <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1d60c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d610:	sub	sp, sp, #4
   1d614:	ldrb	r5, [r0, #27]
   1d618:	ldr	sl, [sp, #44]	; 0x2c
   1d61c:	cmp	r5, #0
   1d620:	ldr	r5, [sp, #40]	; 0x28
   1d624:	bne	1d7b0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a4>
   1d628:	mov	r6, r3
   1d62c:	add	r3, r2, #2
   1d630:	ldr	r2, [r1, #8]
   1d634:	lsl	r3, r3, #1
   1d638:	cmp	r2, r3
   1d63c:	mov	lr, r1
   1d640:	bgt	1d64c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x40>
   1d644:	add	sp, sp, #4
   1d648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d64c:	ldr	r2, [r1, #4]
   1d650:	ldrh	r2, [r2, r3]
   1d654:	cmp	r2, #0
   1d658:	beq	1d644 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38>
   1d65c:	mov	r4, r0
   1d660:	ldr	r0, [r1]
   1d664:	adds	ip, r0, r2
   1d668:	beq	1d644 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38>
   1d66c:	ldr	r3, [r1, #16]
   1d670:	cmp	r3, #0
   1d674:	add	r3, r3, #1
   1d678:	str	r3, [r1, #16]
   1d67c:	ldrne	r3, [r4, #20]
   1d680:	movne	r1, #44	; 0x2c
   1d684:	addne	lr, r3, #1
   1d688:	strne	lr, [r4, #20]
   1d68c:	strbne	r1, [r3]
   1d690:	ldr	r3, [r0, r2]
   1d694:	mov	r1, r6
   1d698:	mov	r2, r5
   1d69c:	mov	r0, r4
   1d6a0:	ldr	r6, [ip, r3]
   1d6a4:	add	r7, ip, r3
   1d6a8:	bl	14b4c <test_print@@Base+0x1378>
   1d6ac:	ldr	r3, [r4, #32]
   1d6b0:	ldr	r2, [r4, #20]
   1d6b4:	add	r3, r3, #1
   1d6b8:	add	r0, r2, #1
   1d6bc:	mov	r1, #91	; 0x5b
   1d6c0:	cmp	r6, #0
   1d6c4:	str	r3, [r4, #32]
   1d6c8:	str	r0, [r4, #20]
   1d6cc:	strb	r1, [r2]
   1d6d0:	beq	1d828 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x21c>
   1d6d4:	ldrb	r1, [r4, #25]
   1d6d8:	cmp	r1, #0
   1d6dc:	bne	1d898 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   1d6e0:	ldr	r2, [r4, #20]
   1d6e4:	ldr	r3, [r4, #16]
   1d6e8:	cmp	r2, r3
   1d6ec:	bcs	1d8b8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2ac>
   1d6f0:	ldr	r1, [r7, #4]
   1d6f4:	mov	r0, r4
   1d6f8:	blx	sl
   1d6fc:	cmp	r6, #1
   1d700:	add	r7, r7, #8
   1d704:	sub	r6, r6, #2
   1d708:	beq	1d828 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x21c>
   1d70c:	mov	r9, #0
   1d710:	mov	r8, #32
   1d714:	b	1d740 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x134>
   1d718:	ldr	r2, [r4, #20]
   1d71c:	ldr	r3, [r4, #16]
   1d720:	cmp	r2, r3
   1d724:	bcs	1d7bc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   1d728:	ldr	r1, [r7], #4
   1d72c:	mov	r0, r4
   1d730:	blx	sl
   1d734:	cmp	r6, #0
   1d738:	sub	r6, r6, #1
   1d73c:	beq	1d828 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x21c>
   1d740:	ldr	r3, [r4, #20]
   1d744:	add	r2, r3, #1
   1d748:	str	r2, [r4, #20]
   1d74c:	mov	r2, #44	; 0x2c
   1d750:	strb	r2, [r3]
   1d754:	ldrb	r3, [r4, #25]
   1d758:	cmp	r3, #0
   1d75c:	beq	1d718 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x10c>
   1d760:	ldr	r3, [r4, #20]
   1d764:	add	r2, r3, #1
   1d768:	str	r2, [r4, #20]
   1d76c:	mov	r2, #10
   1d770:	strb	r2, [r3]
   1d774:	ldrb	r3, [r4, #25]
   1d778:	ldr	fp, [r4, #32]
   1d77c:	ldr	r0, [r4, #20]
   1d780:	ldr	r5, [r4, #16]
   1d784:	mul	fp, fp, r3
   1d788:	add	r3, r0, fp
   1d78c:	cmp	r5, r3
   1d790:	bcc	1d7d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1c4>
   1d794:	mov	r2, fp
   1d798:	mov	r1, r8
   1d79c:	bl	124e8 <memset@plt>
   1d7a0:	ldr	r3, [r4, #20]
   1d7a4:	add	fp, r3, fp
   1d7a8:	str	fp, [r4, #20]
   1d7ac:	b	1d728 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x11c>
   1d7b0:	add	sp, sp, #4
   1d7b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d7b8:	b	1b57c <flatcc_json_printer_uint32_vector_field@@Base>
   1d7bc:	ldr	r3, [r4, #44]	; 0x2c
   1d7c0:	mov	r1, r9
   1d7c4:	mov	r0, r4
   1d7c8:	blx	r3
   1d7cc:	b	1d728 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x11c>
   1d7d0:	cmp	r0, r5
   1d7d4:	bcs	1d850 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x244>
   1d7d8:	sub	r5, r5, r0
   1d7dc:	cmp	fp, r5
   1d7e0:	bls	1d794 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x188>
   1d7e4:	mov	r2, r5
   1d7e8:	mov	r1, r8
   1d7ec:	bl	124e8 <memset@plt>
   1d7f0:	ldr	r3, [r4, #20]
   1d7f4:	mov	r0, r4
   1d7f8:	add	r3, r3, r5
   1d7fc:	str	r3, [r4, #20]
   1d800:	ldr	r2, [r4, #44]	; 0x2c
   1d804:	mov	r1, r9
   1d808:	blx	r2
   1d80c:	ldr	r0, [r4, #20]
   1d810:	ldr	r3, [r4, #16]
   1d814:	sub	fp, fp, r5
   1d818:	sub	r5, r3, r0
   1d81c:	cmp	fp, r5
   1d820:	bhi	1d7e4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d8>
   1d824:	b	1d794 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x188>
   1d828:	ldrb	r3, [r4, #25]
   1d82c:	cmp	r3, #0
   1d830:	bne	1d86c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
   1d834:	ldr	r3, [r4, #20]
   1d838:	mov	r2, #93	; 0x5d
   1d83c:	add	r1, r3, #1
   1d840:	str	r1, [r4, #20]
   1d844:	strb	r2, [r3]
   1d848:	add	sp, sp, #4
   1d84c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d850:	mov	r0, r4
   1d854:	ldr	r3, [r4, #44]	; 0x2c
   1d858:	mov	r1, r9
   1d85c:	blx	r3
   1d860:	ldr	r5, [r4, #16]
   1d864:	ldr	r0, [r4, #20]
   1d868:	b	1d7d8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cc>
   1d86c:	ldr	r3, [r4, #20]
   1d870:	mov	r2, #10
   1d874:	add	r1, r3, #1
   1d878:	str	r1, [r4, #20]
   1d87c:	strb	r2, [r3]
   1d880:	ldr	r3, [r4, #32]
   1d884:	mov	r0, r4
   1d888:	sub	r3, r3, #1
   1d88c:	str	r3, [r4, #32]
   1d890:	bl	145ac <test_print@@Base+0xdd8>
   1d894:	b	1d834 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x228>
   1d898:	ldr	r3, [r4, #20]
   1d89c:	mov	r2, #10
   1d8a0:	add	r1, r3, #1
   1d8a4:	str	r1, [r4, #20]
   1d8a8:	mov	r0, r4
   1d8ac:	strb	r2, [r3]
   1d8b0:	bl	145ac <test_print@@Base+0xdd8>
   1d8b4:	b	1d6f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xe4>
   1d8b8:	ldr	r3, [r4, #44]	; 0x2c
   1d8bc:	mov	r0, r4
   1d8c0:	blx	r3
   1d8c4:	b	1d6f0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xe4>

0001d8c8 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1d8c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d8cc:	sub	sp, sp, #4
   1d8d0:	ldrb	r5, [r0, #27]
   1d8d4:	ldr	sl, [sp, #44]	; 0x2c
   1d8d8:	cmp	r5, #0
   1d8dc:	ldr	r5, [sp, #40]	; 0x28
   1d8e0:	bne	1da6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a4>
   1d8e4:	mov	r6, r3
   1d8e8:	add	r3, r2, #2
   1d8ec:	ldr	r2, [r1, #8]
   1d8f0:	lsl	r3, r3, #1
   1d8f4:	cmp	r2, r3
   1d8f8:	mov	lr, r1
   1d8fc:	bgt	1d908 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x40>
   1d900:	add	sp, sp, #4
   1d904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d908:	ldr	r2, [r1, #4]
   1d90c:	ldrh	r2, [r2, r3]
   1d910:	cmp	r2, #0
   1d914:	beq	1d900 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38>
   1d918:	mov	r4, r0
   1d91c:	ldr	r0, [r1]
   1d920:	adds	ip, r0, r2
   1d924:	beq	1d900 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x38>
   1d928:	ldr	r3, [r1, #16]
   1d92c:	cmp	r3, #0
   1d930:	add	r3, r3, #1
   1d934:	str	r3, [r1, #16]
   1d938:	ldrne	r3, [r4, #20]
   1d93c:	movne	r1, #44	; 0x2c
   1d940:	addne	lr, r3, #1
   1d944:	strne	lr, [r4, #20]
   1d948:	strbne	r1, [r3]
   1d94c:	ldr	r3, [r0, r2]
   1d950:	mov	r1, r6
   1d954:	mov	r2, r5
   1d958:	mov	r0, r4
   1d95c:	ldr	r6, [ip, r3]
   1d960:	add	r7, ip, r3
   1d964:	bl	14b4c <test_print@@Base+0x1378>
   1d968:	ldr	r3, [r4, #32]
   1d96c:	ldr	r2, [r4, #20]
   1d970:	add	r3, r3, #1
   1d974:	add	r0, r2, #1
   1d978:	mov	r1, #91	; 0x5b
   1d97c:	cmp	r6, #0
   1d980:	str	r3, [r4, #32]
   1d984:	str	r0, [r4, #20]
   1d988:	strb	r1, [r2]
   1d98c:	beq	1dae4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x21c>
   1d990:	ldrb	r1, [r4, #25]
   1d994:	cmp	r1, #0
   1d998:	bne	1db54 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   1d99c:	ldr	r2, [r4, #20]
   1d9a0:	ldr	r3, [r4, #16]
   1d9a4:	cmp	r2, r3
   1d9a8:	bcs	1db74 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2ac>
   1d9ac:	ldrd	r2, [r7, #4]
   1d9b0:	mov	r0, r4
   1d9b4:	blx	sl
   1d9b8:	cmp	r6, #1
   1d9bc:	add	r7, r7, #12
   1d9c0:	sub	r6, r6, #2
   1d9c4:	beq	1dae4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x21c>
   1d9c8:	mov	r9, #0
   1d9cc:	mov	r8, #32
   1d9d0:	b	1d9fc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x134>
   1d9d4:	ldr	r2, [r4, #20]
   1d9d8:	ldr	r3, [r4, #16]
   1d9dc:	cmp	r2, r3
   1d9e0:	bcs	1da78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1d9e4:	ldrd	r2, [r7], #8
   1d9e8:	mov	r0, r4
   1d9ec:	blx	sl
   1d9f0:	cmp	r6, #0
   1d9f4:	sub	r6, r6, #1
   1d9f8:	beq	1dae4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x21c>
   1d9fc:	ldr	r3, [r4, #20]
   1da00:	add	r2, r3, #1
   1da04:	str	r2, [r4, #20]
   1da08:	mov	r2, #44	; 0x2c
   1da0c:	strb	r2, [r3]
   1da10:	ldrb	r3, [r4, #25]
   1da14:	cmp	r3, #0
   1da18:	beq	1d9d4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x10c>
   1da1c:	ldr	r3, [r4, #20]
   1da20:	add	r2, r3, #1
   1da24:	str	r2, [r4, #20]
   1da28:	mov	r2, #10
   1da2c:	strb	r2, [r3]
   1da30:	ldrb	r3, [r4, #25]
   1da34:	ldr	fp, [r4, #32]
   1da38:	ldr	r0, [r4, #20]
   1da3c:	ldr	r5, [r4, #16]
   1da40:	mul	fp, fp, r3
   1da44:	add	r3, r0, fp
   1da48:	cmp	r5, r3
   1da4c:	bcc	1da8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1c4>
   1da50:	mov	r2, fp
   1da54:	mov	r1, r8
   1da58:	bl	124e8 <memset@plt>
   1da5c:	ldr	r3, [r4, #20]
   1da60:	add	fp, r3, fp
   1da64:	str	fp, [r4, #20]
   1da68:	b	1d9e4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x11c>
   1da6c:	add	sp, sp, #4
   1da70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da74:	b	1b818 <flatcc_json_printer_uint64_vector_field@@Base>
   1da78:	ldr	r3, [r4, #44]	; 0x2c
   1da7c:	mov	r1, r9
   1da80:	mov	r0, r4
   1da84:	blx	r3
   1da88:	b	1d9e4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x11c>
   1da8c:	cmp	r0, r5
   1da90:	bcs	1db0c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x244>
   1da94:	sub	r5, r5, r0
   1da98:	cmp	fp, r5
   1da9c:	bls	1da50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x188>
   1daa0:	mov	r2, r5
   1daa4:	mov	r1, r8
   1daa8:	bl	124e8 <memset@plt>
   1daac:	ldr	r3, [r4, #20]
   1dab0:	mov	r0, r4
   1dab4:	add	r3, r3, r5
   1dab8:	str	r3, [r4, #20]
   1dabc:	ldr	r2, [r4, #44]	; 0x2c
   1dac0:	mov	r1, r9
   1dac4:	blx	r2
   1dac8:	ldr	r0, [r4, #20]
   1dacc:	ldr	r3, [r4, #16]
   1dad0:	sub	fp, fp, r5
   1dad4:	sub	r5, r3, r0
   1dad8:	cmp	fp, r5
   1dadc:	bhi	1daa0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d8>
   1dae0:	b	1da50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x188>
   1dae4:	ldrb	r3, [r4, #25]
   1dae8:	cmp	r3, #0
   1daec:	bne	1db28 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x260>
   1daf0:	ldr	r3, [r4, #20]
   1daf4:	mov	r2, #93	; 0x5d
   1daf8:	add	r1, r3, #1
   1dafc:	str	r1, [r4, #20]
   1db00:	strb	r2, [r3]
   1db04:	add	sp, sp, #4
   1db08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db0c:	mov	r0, r4
   1db10:	ldr	r3, [r4, #44]	; 0x2c
   1db14:	mov	r1, r9
   1db18:	blx	r3
   1db1c:	ldr	r5, [r4, #16]
   1db20:	ldr	r0, [r4, #20]
   1db24:	b	1da94 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1cc>
   1db28:	ldr	r3, [r4, #20]
   1db2c:	mov	r2, #10
   1db30:	add	r1, r3, #1
   1db34:	str	r1, [r4, #20]
   1db38:	strb	r2, [r3]
   1db3c:	ldr	r3, [r4, #32]
   1db40:	mov	r0, r4
   1db44:	sub	r3, r3, #1
   1db48:	str	r3, [r4, #32]
   1db4c:	bl	145ac <test_print@@Base+0xdd8>
   1db50:	b	1daf0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x228>
   1db54:	ldr	r3, [r4, #20]
   1db58:	mov	r2, #10
   1db5c:	add	r1, r3, #1
   1db60:	str	r1, [r4, #20]
   1db64:	mov	r0, r4
   1db68:	strb	r2, [r3]
   1db6c:	bl	145ac <test_print@@Base+0xdd8>
   1db70:	b	1d9ac <flatcc_json_printer_uint64_enum_vector_field@@Base+0xe4>
   1db74:	ldr	r3, [r4, #44]	; 0x2c
   1db78:	mov	r0, r4
   1db7c:	blx	r3
   1db80:	b	1d9ac <flatcc_json_printer_uint64_enum_vector_field@@Base+0xe4>

0001db84 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1db84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db88:	sub	sp, sp, #12
   1db8c:	ldrb	r5, [r0, #27]
   1db90:	ldr	fp, [sp, #52]	; 0x34
   1db94:	cmp	r5, #0
   1db98:	ldr	r5, [sp, #48]	; 0x30
   1db9c:	bne	1dd30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   1dba0:	mov	r6, r3
   1dba4:	add	r3, r2, #2
   1dba8:	ldr	r2, [r1, #8]
   1dbac:	lsl	r3, r3, #1
   1dbb0:	cmp	r2, r3
   1dbb4:	mov	lr, r1
   1dbb8:	bgt	1dbc4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x40>
   1dbbc:	add	sp, sp, #12
   1dbc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbc4:	ldr	r2, [r1, #4]
   1dbc8:	ldrh	r2, [r2, r3]
   1dbcc:	cmp	r2, #0
   1dbd0:	beq	1dbbc <flatcc_json_printer_int8_enum_vector_field@@Base+0x38>
   1dbd4:	mov	r4, r0
   1dbd8:	ldr	r0, [r1]
   1dbdc:	adds	ip, r0, r2
   1dbe0:	beq	1dbbc <flatcc_json_printer_int8_enum_vector_field@@Base+0x38>
   1dbe4:	ldr	r3, [r1, #16]
   1dbe8:	cmp	r3, #0
   1dbec:	add	r3, r3, #1
   1dbf0:	str	r3, [r1, #16]
   1dbf4:	ldrne	r3, [r4, #20]
   1dbf8:	movne	r1, #44	; 0x2c
   1dbfc:	addne	lr, r3, #1
   1dc00:	strne	lr, [r4, #20]
   1dc04:	strbne	r1, [r3]
   1dc08:	ldr	r3, [r0, r2]
   1dc0c:	mov	r1, r6
   1dc10:	mov	r2, r5
   1dc14:	mov	r0, r4
   1dc18:	ldr	r9, [ip, r3]
   1dc1c:	add	sl, ip, r3
   1dc20:	bl	14b4c <test_print@@Base+0x1378>
   1dc24:	ldr	r3, [r4, #32]
   1dc28:	ldr	r2, [r4, #20]
   1dc2c:	add	r3, r3, #1
   1dc30:	add	r0, r2, #1
   1dc34:	mov	r1, #91	; 0x5b
   1dc38:	cmp	r9, #0
   1dc3c:	str	r3, [r4, #32]
   1dc40:	str	r0, [r4, #20]
   1dc44:	strb	r1, [r2]
   1dc48:	beq	1dda8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1dc4c:	ldrb	r1, [r4, #25]
   1dc50:	cmp	r1, #0
   1dc54:	bne	1de18 <flatcc_json_printer_int8_enum_vector_field@@Base+0x294>
   1dc58:	ldr	r2, [r4, #20]
   1dc5c:	ldr	r3, [r4, #16]
   1dc60:	cmp	r2, r3
   1dc64:	bcs	1de38 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2b4>
   1dc68:	ldrsb	r1, [sl, #4]
   1dc6c:	mov	r0, r4
   1dc70:	blx	fp
   1dc74:	cmp	r9, #1
   1dc78:	add	r6, sl, #5
   1dc7c:	beq	1dda8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1dc80:	add	r3, r9, #4
   1dc84:	str	r3, [sp, #4]
   1dc88:	mov	r8, #0
   1dc8c:	mov	r7, #32
   1dc90:	b	1dcc0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x13c>
   1dc94:	ldr	r2, [r4, #20]
   1dc98:	ldr	r3, [r4, #16]
   1dc9c:	cmp	r2, r3
   1dca0:	bcs	1dd3c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b8>
   1dca4:	ldrsb	r1, [r6], #1
   1dca8:	mov	r0, r4
   1dcac:	blx	fp
   1dcb0:	ldr	r3, [sp, #4]
   1dcb4:	sub	r3, r3, r6
   1dcb8:	cmn	sl, r3
   1dcbc:	beq	1dda8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x224>
   1dcc0:	ldr	r3, [r4, #20]
   1dcc4:	add	r2, r3, #1
   1dcc8:	str	r2, [r4, #20]
   1dccc:	mov	r2, #44	; 0x2c
   1dcd0:	strb	r2, [r3]
   1dcd4:	ldrb	r3, [r4, #25]
   1dcd8:	cmp	r3, #0
   1dcdc:	beq	1dc94 <flatcc_json_printer_int8_enum_vector_field@@Base+0x110>
   1dce0:	ldr	r3, [r4, #20]
   1dce4:	add	r2, r3, #1
   1dce8:	str	r2, [r4, #20]
   1dcec:	mov	r2, #10
   1dcf0:	strb	r2, [r3]
   1dcf4:	ldrb	r3, [r4, #25]
   1dcf8:	ldr	r2, [r4, #32]
   1dcfc:	ldr	r0, [r4, #20]
   1dd00:	ldr	r5, [r4, #16]
   1dd04:	mul	r9, r2, r3
   1dd08:	add	r2, r0, r9
   1dd0c:	cmp	r5, r2
   1dd10:	bcc	1dd50 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   1dd14:	mov	r2, r9
   1dd18:	mov	r1, r7
   1dd1c:	bl	124e8 <memset@plt>
   1dd20:	ldr	r2, [r4, #20]
   1dd24:	add	r3, r2, r9
   1dd28:	str	r3, [r4, #20]
   1dd2c:	b	1dca4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x120>
   1dd30:	add	sp, sp, #12
   1dd34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd38:	b	1bab0 <flatcc_json_printer_int8_vector_field@@Base>
   1dd3c:	ldr	r3, [r4, #44]	; 0x2c
   1dd40:	mov	r1, r8
   1dd44:	mov	r0, r4
   1dd48:	blx	r3
   1dd4c:	b	1dca4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x120>
   1dd50:	cmp	r0, r5
   1dd54:	bcs	1ddd0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   1dd58:	sub	r5, r5, r0
   1dd5c:	cmp	r9, r5
   1dd60:	bls	1dd14 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   1dd64:	mov	r2, r5
   1dd68:	mov	r1, r7
   1dd6c:	bl	124e8 <memset@plt>
   1dd70:	ldr	r3, [r4, #20]
   1dd74:	mov	r0, r4
   1dd78:	add	r3, r3, r5
   1dd7c:	str	r3, [r4, #20]
   1dd80:	ldr	r2, [r4, #44]	; 0x2c
   1dd84:	mov	r1, r8
   1dd88:	blx	r2
   1dd8c:	ldr	r0, [r4, #20]
   1dd90:	ldr	r3, [r4, #16]
   1dd94:	sub	r9, r9, r5
   1dd98:	sub	r5, r3, r0
   1dd9c:	cmp	r9, r5
   1dda0:	bhi	1dd64 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e0>
   1dda4:	b	1dd14 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   1dda8:	ldrb	r3, [r4, #25]
   1ddac:	cmp	r3, #0
   1ddb0:	bne	1ddec <flatcc_json_printer_int8_enum_vector_field@@Base+0x268>
   1ddb4:	ldr	r3, [r4, #20]
   1ddb8:	mov	r2, #93	; 0x5d
   1ddbc:	add	r1, r3, #1
   1ddc0:	str	r1, [r4, #20]
   1ddc4:	strb	r2, [r3]
   1ddc8:	add	sp, sp, #12
   1ddcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ddd0:	mov	r0, r4
   1ddd4:	ldr	r2, [r4, #44]	; 0x2c
   1ddd8:	mov	r1, r8
   1dddc:	blx	r2
   1dde0:	ldr	r5, [r4, #16]
   1dde4:	ldr	r0, [r4, #20]
   1dde8:	b	1dd58 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   1ddec:	ldr	r3, [r4, #20]
   1ddf0:	mov	r2, #10
   1ddf4:	add	r1, r3, #1
   1ddf8:	str	r1, [r4, #20]
   1ddfc:	strb	r2, [r3]
   1de00:	ldr	r3, [r4, #32]
   1de04:	mov	r0, r4
   1de08:	sub	r3, r3, #1
   1de0c:	str	r3, [r4, #32]
   1de10:	bl	145ac <test_print@@Base+0xdd8>
   1de14:	b	1ddb4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x230>
   1de18:	ldr	r3, [r4, #20]
   1de1c:	mov	r2, #10
   1de20:	add	r1, r3, #1
   1de24:	str	r1, [r4, #20]
   1de28:	mov	r0, r4
   1de2c:	strb	r2, [r3]
   1de30:	bl	145ac <test_print@@Base+0xdd8>
   1de34:	b	1dc68 <flatcc_json_printer_int8_enum_vector_field@@Base+0xe4>
   1de38:	ldr	r3, [r4, #44]	; 0x2c
   1de3c:	mov	r0, r4
   1de40:	blx	r3
   1de44:	b	1dc68 <flatcc_json_printer_int8_enum_vector_field@@Base+0xe4>

0001de48 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1de48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de4c:	sub	sp, sp, #4
   1de50:	ldrb	r5, [r0, #27]
   1de54:	ldr	sl, [sp, #44]	; 0x2c
   1de58:	cmp	r5, #0
   1de5c:	ldr	r5, [sp, #40]	; 0x28
   1de60:	bne	1dfec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a4>
   1de64:	mov	r6, r3
   1de68:	add	r3, r2, #2
   1de6c:	ldr	r2, [r1, #8]
   1de70:	lsl	r3, r3, #1
   1de74:	cmp	r2, r3
   1de78:	mov	lr, r1
   1de7c:	bgt	1de88 <flatcc_json_printer_int16_enum_vector_field@@Base+0x40>
   1de80:	add	sp, sp, #4
   1de84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de88:	ldr	r2, [r1, #4]
   1de8c:	ldrh	r2, [r2, r3]
   1de90:	cmp	r2, #0
   1de94:	beq	1de80 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38>
   1de98:	mov	r4, r0
   1de9c:	ldr	r0, [r1]
   1dea0:	adds	ip, r0, r2
   1dea4:	beq	1de80 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38>
   1dea8:	ldr	r3, [r1, #16]
   1deac:	cmp	r3, #0
   1deb0:	add	r3, r3, #1
   1deb4:	str	r3, [r1, #16]
   1deb8:	ldrne	r3, [r4, #20]
   1debc:	movne	r1, #44	; 0x2c
   1dec0:	addne	lr, r3, #1
   1dec4:	strne	lr, [r4, #20]
   1dec8:	strbne	r1, [r3]
   1decc:	ldr	r3, [r0, r2]
   1ded0:	mov	r1, r6
   1ded4:	mov	r2, r5
   1ded8:	mov	r0, r4
   1dedc:	ldr	r6, [ip, r3]
   1dee0:	add	r7, ip, r3
   1dee4:	bl	14b4c <test_print@@Base+0x1378>
   1dee8:	ldr	r3, [r4, #32]
   1deec:	ldr	r2, [r4, #20]
   1def0:	add	r3, r3, #1
   1def4:	add	r0, r2, #1
   1def8:	mov	r1, #91	; 0x5b
   1defc:	cmp	r6, #0
   1df00:	str	r3, [r4, #32]
   1df04:	str	r0, [r4, #20]
   1df08:	strb	r1, [r2]
   1df0c:	beq	1e064 <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   1df10:	ldrb	r1, [r4, #25]
   1df14:	cmp	r1, #0
   1df18:	bne	1e0d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   1df1c:	ldr	r2, [r4, #20]
   1df20:	ldr	r3, [r4, #16]
   1df24:	cmp	r2, r3
   1df28:	bcs	1e0f4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2ac>
   1df2c:	ldrsh	r1, [r7, #4]
   1df30:	mov	r0, r4
   1df34:	blx	sl
   1df38:	cmp	r6, #1
   1df3c:	add	r7, r7, #6
   1df40:	sub	r6, r6, #2
   1df44:	beq	1e064 <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   1df48:	mov	r9, #0
   1df4c:	mov	r8, #32
   1df50:	b	1df7c <flatcc_json_printer_int16_enum_vector_field@@Base+0x134>
   1df54:	ldr	r2, [r4, #20]
   1df58:	ldr	r3, [r4, #16]
   1df5c:	cmp	r2, r3
   1df60:	bcs	1dff8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1df64:	ldrsh	r1, [r7], #2
   1df68:	mov	r0, r4
   1df6c:	blx	sl
   1df70:	cmp	r6, #0
   1df74:	sub	r6, r6, #1
   1df78:	beq	1e064 <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   1df7c:	ldr	r3, [r4, #20]
   1df80:	add	r2, r3, #1
   1df84:	str	r2, [r4, #20]
   1df88:	mov	r2, #44	; 0x2c
   1df8c:	strb	r2, [r3]
   1df90:	ldrb	r3, [r4, #25]
   1df94:	cmp	r3, #0
   1df98:	beq	1df54 <flatcc_json_printer_int16_enum_vector_field@@Base+0x10c>
   1df9c:	ldr	r3, [r4, #20]
   1dfa0:	add	r2, r3, #1
   1dfa4:	str	r2, [r4, #20]
   1dfa8:	mov	r2, #10
   1dfac:	strb	r2, [r3]
   1dfb0:	ldrb	r3, [r4, #25]
   1dfb4:	ldr	fp, [r4, #32]
   1dfb8:	ldr	r0, [r4, #20]
   1dfbc:	ldr	r5, [r4, #16]
   1dfc0:	mul	fp, fp, r3
   1dfc4:	add	r3, r0, fp
   1dfc8:	cmp	r5, r3
   1dfcc:	bcc	1e00c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1c4>
   1dfd0:	mov	r2, fp
   1dfd4:	mov	r1, r8
   1dfd8:	bl	124e8 <memset@plt>
   1dfdc:	ldr	r3, [r4, #20]
   1dfe0:	add	fp, r3, fp
   1dfe4:	str	fp, [r4, #20]
   1dfe8:	b	1df64 <flatcc_json_printer_int16_enum_vector_field@@Base+0x11c>
   1dfec:	add	sp, sp, #4
   1dff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dff4:	b	1be30 <flatcc_json_printer_int16_vector_field@@Base>
   1dff8:	ldr	r3, [r4, #44]	; 0x2c
   1dffc:	mov	r1, r9
   1e000:	mov	r0, r4
   1e004:	blx	r3
   1e008:	b	1df64 <flatcc_json_printer_int16_enum_vector_field@@Base+0x11c>
   1e00c:	cmp	r0, r5
   1e010:	bcs	1e08c <flatcc_json_printer_int16_enum_vector_field@@Base+0x244>
   1e014:	sub	r5, r5, r0
   1e018:	cmp	fp, r5
   1e01c:	bls	1dfd0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x188>
   1e020:	mov	r2, r5
   1e024:	mov	r1, r8
   1e028:	bl	124e8 <memset@plt>
   1e02c:	ldr	r3, [r4, #20]
   1e030:	mov	r0, r4
   1e034:	add	r3, r3, r5
   1e038:	str	r3, [r4, #20]
   1e03c:	ldr	r2, [r4, #44]	; 0x2c
   1e040:	mov	r1, r9
   1e044:	blx	r2
   1e048:	ldr	r0, [r4, #20]
   1e04c:	ldr	r3, [r4, #16]
   1e050:	sub	fp, fp, r5
   1e054:	sub	r5, r3, r0
   1e058:	cmp	fp, r5
   1e05c:	bhi	1e020 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d8>
   1e060:	b	1dfd0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x188>
   1e064:	ldrb	r3, [r4, #25]
   1e068:	cmp	r3, #0
   1e06c:	bne	1e0a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x260>
   1e070:	ldr	r3, [r4, #20]
   1e074:	mov	r2, #93	; 0x5d
   1e078:	add	r1, r3, #1
   1e07c:	str	r1, [r4, #20]
   1e080:	strb	r2, [r3]
   1e084:	add	sp, sp, #4
   1e088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e08c:	mov	r0, r4
   1e090:	ldr	r3, [r4, #44]	; 0x2c
   1e094:	mov	r1, r9
   1e098:	blx	r3
   1e09c:	ldr	r5, [r4, #16]
   1e0a0:	ldr	r0, [r4, #20]
   1e0a4:	b	1e014 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1cc>
   1e0a8:	ldr	r3, [r4, #20]
   1e0ac:	mov	r2, #10
   1e0b0:	add	r1, r3, #1
   1e0b4:	str	r1, [r4, #20]
   1e0b8:	strb	r2, [r3]
   1e0bc:	ldr	r3, [r4, #32]
   1e0c0:	mov	r0, r4
   1e0c4:	sub	r3, r3, #1
   1e0c8:	str	r3, [r4, #32]
   1e0cc:	bl	145ac <test_print@@Base+0xdd8>
   1e0d0:	b	1e070 <flatcc_json_printer_int16_enum_vector_field@@Base+0x228>
   1e0d4:	ldr	r3, [r4, #20]
   1e0d8:	mov	r2, #10
   1e0dc:	add	r1, r3, #1
   1e0e0:	str	r1, [r4, #20]
   1e0e4:	mov	r0, r4
   1e0e8:	strb	r2, [r3]
   1e0ec:	bl	145ac <test_print@@Base+0xdd8>
   1e0f0:	b	1df2c <flatcc_json_printer_int16_enum_vector_field@@Base+0xe4>
   1e0f4:	ldr	r3, [r4, #44]	; 0x2c
   1e0f8:	mov	r0, r4
   1e0fc:	blx	r3
   1e100:	b	1df2c <flatcc_json_printer_int16_enum_vector_field@@Base+0xe4>

0001e104 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1e104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e108:	sub	sp, sp, #4
   1e10c:	ldrb	r5, [r0, #27]
   1e110:	ldr	sl, [sp, #44]	; 0x2c
   1e114:	cmp	r5, #0
   1e118:	ldr	r5, [sp, #40]	; 0x28
   1e11c:	bne	1e2a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a4>
   1e120:	mov	r6, r3
   1e124:	add	r3, r2, #2
   1e128:	ldr	r2, [r1, #8]
   1e12c:	lsl	r3, r3, #1
   1e130:	cmp	r2, r3
   1e134:	mov	lr, r1
   1e138:	bgt	1e144 <flatcc_json_printer_int32_enum_vector_field@@Base+0x40>
   1e13c:	add	sp, sp, #4
   1e140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e144:	ldr	r2, [r1, #4]
   1e148:	ldrh	r2, [r2, r3]
   1e14c:	cmp	r2, #0
   1e150:	beq	1e13c <flatcc_json_printer_int32_enum_vector_field@@Base+0x38>
   1e154:	mov	r4, r0
   1e158:	ldr	r0, [r1]
   1e15c:	adds	ip, r0, r2
   1e160:	beq	1e13c <flatcc_json_printer_int32_enum_vector_field@@Base+0x38>
   1e164:	ldr	r3, [r1, #16]
   1e168:	cmp	r3, #0
   1e16c:	add	r3, r3, #1
   1e170:	str	r3, [r1, #16]
   1e174:	ldrne	r3, [r4, #20]
   1e178:	movne	r1, #44	; 0x2c
   1e17c:	addne	lr, r3, #1
   1e180:	strne	lr, [r4, #20]
   1e184:	strbne	r1, [r3]
   1e188:	ldr	r3, [r0, r2]
   1e18c:	mov	r1, r6
   1e190:	mov	r2, r5
   1e194:	mov	r0, r4
   1e198:	ldr	r6, [ip, r3]
   1e19c:	add	r7, ip, r3
   1e1a0:	bl	14b4c <test_print@@Base+0x1378>
   1e1a4:	ldr	r3, [r4, #32]
   1e1a8:	ldr	r2, [r4, #20]
   1e1ac:	add	r3, r3, #1
   1e1b0:	add	r0, r2, #1
   1e1b4:	mov	r1, #91	; 0x5b
   1e1b8:	cmp	r6, #0
   1e1bc:	str	r3, [r4, #32]
   1e1c0:	str	r0, [r4, #20]
   1e1c4:	strb	r1, [r2]
   1e1c8:	beq	1e320 <flatcc_json_printer_int32_enum_vector_field@@Base+0x21c>
   1e1cc:	ldrb	r1, [r4, #25]
   1e1d0:	cmp	r1, #0
   1e1d4:	bne	1e390 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   1e1d8:	ldr	r2, [r4, #20]
   1e1dc:	ldr	r3, [r4, #16]
   1e1e0:	cmp	r2, r3
   1e1e4:	bcs	1e3b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2ac>
   1e1e8:	ldr	r1, [r7, #4]
   1e1ec:	mov	r0, r4
   1e1f0:	blx	sl
   1e1f4:	cmp	r6, #1
   1e1f8:	add	r7, r7, #8
   1e1fc:	sub	r6, r6, #2
   1e200:	beq	1e320 <flatcc_json_printer_int32_enum_vector_field@@Base+0x21c>
   1e204:	mov	r9, #0
   1e208:	mov	r8, #32
   1e20c:	b	1e238 <flatcc_json_printer_int32_enum_vector_field@@Base+0x134>
   1e210:	ldr	r2, [r4, #20]
   1e214:	ldr	r3, [r4, #16]
   1e218:	cmp	r2, r3
   1e21c:	bcs	1e2b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   1e220:	ldr	r1, [r7], #4
   1e224:	mov	r0, r4
   1e228:	blx	sl
   1e22c:	cmp	r6, #0
   1e230:	sub	r6, r6, #1
   1e234:	beq	1e320 <flatcc_json_printer_int32_enum_vector_field@@Base+0x21c>
   1e238:	ldr	r3, [r4, #20]
   1e23c:	add	r2, r3, #1
   1e240:	str	r2, [r4, #20]
   1e244:	mov	r2, #44	; 0x2c
   1e248:	strb	r2, [r3]
   1e24c:	ldrb	r3, [r4, #25]
   1e250:	cmp	r3, #0
   1e254:	beq	1e210 <flatcc_json_printer_int32_enum_vector_field@@Base+0x10c>
   1e258:	ldr	r3, [r4, #20]
   1e25c:	add	r2, r3, #1
   1e260:	str	r2, [r4, #20]
   1e264:	mov	r2, #10
   1e268:	strb	r2, [r3]
   1e26c:	ldrb	r3, [r4, #25]
   1e270:	ldr	fp, [r4, #32]
   1e274:	ldr	r0, [r4, #20]
   1e278:	ldr	r5, [r4, #16]
   1e27c:	mul	fp, fp, r3
   1e280:	add	r3, r0, fp
   1e284:	cmp	r5, r3
   1e288:	bcc	1e2c8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1c4>
   1e28c:	mov	r2, fp
   1e290:	mov	r1, r8
   1e294:	bl	124e8 <memset@plt>
   1e298:	ldr	r3, [r4, #20]
   1e29c:	add	fp, r3, fp
   1e2a0:	str	fp, [r4, #20]
   1e2a4:	b	1e220 <flatcc_json_printer_int32_enum_vector_field@@Base+0x11c>
   1e2a8:	add	sp, sp, #4
   1e2ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2b0:	b	1c250 <flatcc_json_printer_int32_vector_field@@Base>
   1e2b4:	ldr	r3, [r4, #44]	; 0x2c
   1e2b8:	mov	r1, r9
   1e2bc:	mov	r0, r4
   1e2c0:	blx	r3
   1e2c4:	b	1e220 <flatcc_json_printer_int32_enum_vector_field@@Base+0x11c>
   1e2c8:	cmp	r0, r5
   1e2cc:	bcs	1e348 <flatcc_json_printer_int32_enum_vector_field@@Base+0x244>
   1e2d0:	sub	r5, r5, r0
   1e2d4:	cmp	fp, r5
   1e2d8:	bls	1e28c <flatcc_json_printer_int32_enum_vector_field@@Base+0x188>
   1e2dc:	mov	r2, r5
   1e2e0:	mov	r1, r8
   1e2e4:	bl	124e8 <memset@plt>
   1e2e8:	ldr	r3, [r4, #20]
   1e2ec:	mov	r0, r4
   1e2f0:	add	r3, r3, r5
   1e2f4:	str	r3, [r4, #20]
   1e2f8:	ldr	r2, [r4, #44]	; 0x2c
   1e2fc:	mov	r1, r9
   1e300:	blx	r2
   1e304:	ldr	r0, [r4, #20]
   1e308:	ldr	r3, [r4, #16]
   1e30c:	sub	fp, fp, r5
   1e310:	sub	r5, r3, r0
   1e314:	cmp	fp, r5
   1e318:	bhi	1e2dc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d8>
   1e31c:	b	1e28c <flatcc_json_printer_int32_enum_vector_field@@Base+0x188>
   1e320:	ldrb	r3, [r4, #25]
   1e324:	cmp	r3, #0
   1e328:	bne	1e364 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
   1e32c:	ldr	r3, [r4, #20]
   1e330:	mov	r2, #93	; 0x5d
   1e334:	add	r1, r3, #1
   1e338:	str	r1, [r4, #20]
   1e33c:	strb	r2, [r3]
   1e340:	add	sp, sp, #4
   1e344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e348:	mov	r0, r4
   1e34c:	ldr	r3, [r4, #44]	; 0x2c
   1e350:	mov	r1, r9
   1e354:	blx	r3
   1e358:	ldr	r5, [r4, #16]
   1e35c:	ldr	r0, [r4, #20]
   1e360:	b	1e2d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cc>
   1e364:	ldr	r3, [r4, #20]
   1e368:	mov	r2, #10
   1e36c:	add	r1, r3, #1
   1e370:	str	r1, [r4, #20]
   1e374:	strb	r2, [r3]
   1e378:	ldr	r3, [r4, #32]
   1e37c:	mov	r0, r4
   1e380:	sub	r3, r3, #1
   1e384:	str	r3, [r4, #32]
   1e388:	bl	145ac <test_print@@Base+0xdd8>
   1e38c:	b	1e32c <flatcc_json_printer_int32_enum_vector_field@@Base+0x228>
   1e390:	ldr	r3, [r4, #20]
   1e394:	mov	r2, #10
   1e398:	add	r1, r3, #1
   1e39c:	str	r1, [r4, #20]
   1e3a0:	mov	r0, r4
   1e3a4:	strb	r2, [r3]
   1e3a8:	bl	145ac <test_print@@Base+0xdd8>
   1e3ac:	b	1e1e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0xe4>
   1e3b0:	ldr	r3, [r4, #44]	; 0x2c
   1e3b4:	mov	r0, r4
   1e3b8:	blx	r3
   1e3bc:	b	1e1e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0xe4>

0001e3c0 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1e3c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3c4:	sub	sp, sp, #4
   1e3c8:	ldrb	r5, [r0, #27]
   1e3cc:	ldr	sl, [sp, #44]	; 0x2c
   1e3d0:	cmp	r5, #0
   1e3d4:	ldr	r5, [sp, #40]	; 0x28
   1e3d8:	bne	1e564 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a4>
   1e3dc:	mov	r6, r3
   1e3e0:	add	r3, r2, #2
   1e3e4:	ldr	r2, [r1, #8]
   1e3e8:	lsl	r3, r3, #1
   1e3ec:	cmp	r2, r3
   1e3f0:	mov	lr, r1
   1e3f4:	bgt	1e400 <flatcc_json_printer_int64_enum_vector_field@@Base+0x40>
   1e3f8:	add	sp, sp, #4
   1e3fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e400:	ldr	r2, [r1, #4]
   1e404:	ldrh	r2, [r2, r3]
   1e408:	cmp	r2, #0
   1e40c:	beq	1e3f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x38>
   1e410:	mov	r4, r0
   1e414:	ldr	r0, [r1]
   1e418:	adds	ip, r0, r2
   1e41c:	beq	1e3f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x38>
   1e420:	ldr	r3, [r1, #16]
   1e424:	cmp	r3, #0
   1e428:	add	r3, r3, #1
   1e42c:	str	r3, [r1, #16]
   1e430:	ldrne	r3, [r4, #20]
   1e434:	movne	r1, #44	; 0x2c
   1e438:	addne	lr, r3, #1
   1e43c:	strne	lr, [r4, #20]
   1e440:	strbne	r1, [r3]
   1e444:	ldr	r3, [r0, r2]
   1e448:	mov	r1, r6
   1e44c:	mov	r2, r5
   1e450:	mov	r0, r4
   1e454:	ldr	r6, [ip, r3]
   1e458:	add	r7, ip, r3
   1e45c:	bl	14b4c <test_print@@Base+0x1378>
   1e460:	ldr	r3, [r4, #32]
   1e464:	ldr	r2, [r4, #20]
   1e468:	add	r3, r3, #1
   1e46c:	add	r0, r2, #1
   1e470:	mov	r1, #91	; 0x5b
   1e474:	cmp	r6, #0
   1e478:	str	r3, [r4, #32]
   1e47c:	str	r0, [r4, #20]
   1e480:	strb	r1, [r2]
   1e484:	beq	1e5dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x21c>
   1e488:	ldrb	r1, [r4, #25]
   1e48c:	cmp	r1, #0
   1e490:	bne	1e64c <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   1e494:	ldr	r2, [r4, #20]
   1e498:	ldr	r3, [r4, #16]
   1e49c:	cmp	r2, r3
   1e4a0:	bcs	1e66c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2ac>
   1e4a4:	ldrd	r2, [r7, #4]
   1e4a8:	mov	r0, r4
   1e4ac:	blx	sl
   1e4b0:	cmp	r6, #1
   1e4b4:	add	r7, r7, #12
   1e4b8:	sub	r6, r6, #2
   1e4bc:	beq	1e5dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x21c>
   1e4c0:	mov	r9, #0
   1e4c4:	mov	r8, #32
   1e4c8:	b	1e4f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x134>
   1e4cc:	ldr	r2, [r4, #20]
   1e4d0:	ldr	r3, [r4, #16]
   1e4d4:	cmp	r2, r3
   1e4d8:	bcs	1e570 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1e4dc:	ldrd	r2, [r7], #8
   1e4e0:	mov	r0, r4
   1e4e4:	blx	sl
   1e4e8:	cmp	r6, #0
   1e4ec:	sub	r6, r6, #1
   1e4f0:	beq	1e5dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x21c>
   1e4f4:	ldr	r3, [r4, #20]
   1e4f8:	add	r2, r3, #1
   1e4fc:	str	r2, [r4, #20]
   1e500:	mov	r2, #44	; 0x2c
   1e504:	strb	r2, [r3]
   1e508:	ldrb	r3, [r4, #25]
   1e50c:	cmp	r3, #0
   1e510:	beq	1e4cc <flatcc_json_printer_int64_enum_vector_field@@Base+0x10c>
   1e514:	ldr	r3, [r4, #20]
   1e518:	add	r2, r3, #1
   1e51c:	str	r2, [r4, #20]
   1e520:	mov	r2, #10
   1e524:	strb	r2, [r3]
   1e528:	ldrb	r3, [r4, #25]
   1e52c:	ldr	fp, [r4, #32]
   1e530:	ldr	r0, [r4, #20]
   1e534:	ldr	r5, [r4, #16]
   1e538:	mul	fp, fp, r3
   1e53c:	add	r3, r0, fp
   1e540:	cmp	r5, r3
   1e544:	bcc	1e584 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1c4>
   1e548:	mov	r2, fp
   1e54c:	mov	r1, r8
   1e550:	bl	124e8 <memset@plt>
   1e554:	ldr	r3, [r4, #20]
   1e558:	add	fp, r3, fp
   1e55c:	str	fp, [r4, #20]
   1e560:	b	1e4dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x11c>
   1e564:	add	sp, sp, #4
   1e568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e56c:	b	1c524 <flatcc_json_printer_int64_vector_field@@Base>
   1e570:	ldr	r3, [r4, #44]	; 0x2c
   1e574:	mov	r1, r9
   1e578:	mov	r0, r4
   1e57c:	blx	r3
   1e580:	b	1e4dc <flatcc_json_printer_int64_enum_vector_field@@Base+0x11c>
   1e584:	cmp	r0, r5
   1e588:	bcs	1e604 <flatcc_json_printer_int64_enum_vector_field@@Base+0x244>
   1e58c:	sub	r5, r5, r0
   1e590:	cmp	fp, r5
   1e594:	bls	1e548 <flatcc_json_printer_int64_enum_vector_field@@Base+0x188>
   1e598:	mov	r2, r5
   1e59c:	mov	r1, r8
   1e5a0:	bl	124e8 <memset@plt>
   1e5a4:	ldr	r3, [r4, #20]
   1e5a8:	mov	r0, r4
   1e5ac:	add	r3, r3, r5
   1e5b0:	str	r3, [r4, #20]
   1e5b4:	ldr	r2, [r4, #44]	; 0x2c
   1e5b8:	mov	r1, r9
   1e5bc:	blx	r2
   1e5c0:	ldr	r0, [r4, #20]
   1e5c4:	ldr	r3, [r4, #16]
   1e5c8:	sub	fp, fp, r5
   1e5cc:	sub	r5, r3, r0
   1e5d0:	cmp	fp, r5
   1e5d4:	bhi	1e598 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d8>
   1e5d8:	b	1e548 <flatcc_json_printer_int64_enum_vector_field@@Base+0x188>
   1e5dc:	ldrb	r3, [r4, #25]
   1e5e0:	cmp	r3, #0
   1e5e4:	bne	1e620 <flatcc_json_printer_int64_enum_vector_field@@Base+0x260>
   1e5e8:	ldr	r3, [r4, #20]
   1e5ec:	mov	r2, #93	; 0x5d
   1e5f0:	add	r1, r3, #1
   1e5f4:	str	r1, [r4, #20]
   1e5f8:	strb	r2, [r3]
   1e5fc:	add	sp, sp, #4
   1e600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e604:	mov	r0, r4
   1e608:	ldr	r3, [r4, #44]	; 0x2c
   1e60c:	mov	r1, r9
   1e610:	blx	r3
   1e614:	ldr	r5, [r4, #16]
   1e618:	ldr	r0, [r4, #20]
   1e61c:	b	1e58c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1cc>
   1e620:	ldr	r3, [r4, #20]
   1e624:	mov	r2, #10
   1e628:	add	r1, r3, #1
   1e62c:	str	r1, [r4, #20]
   1e630:	strb	r2, [r3]
   1e634:	ldr	r3, [r4, #32]
   1e638:	mov	r0, r4
   1e63c:	sub	r3, r3, #1
   1e640:	str	r3, [r4, #32]
   1e644:	bl	145ac <test_print@@Base+0xdd8>
   1e648:	b	1e5e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x228>
   1e64c:	ldr	r3, [r4, #20]
   1e650:	mov	r2, #10
   1e654:	add	r1, r3, #1
   1e658:	str	r1, [r4, #20]
   1e65c:	mov	r0, r4
   1e660:	strb	r2, [r3]
   1e664:	bl	145ac <test_print@@Base+0xdd8>
   1e668:	b	1e4a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0xe4>
   1e66c:	ldr	r3, [r4, #44]	; 0x2c
   1e670:	mov	r0, r4
   1e674:	blx	r3
   1e678:	b	1e4a4 <flatcc_json_printer_int64_enum_vector_field@@Base+0xe4>

0001e67c <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1e67c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e680:	sub	sp, sp, #12
   1e684:	ldrb	r5, [r0, #27]
   1e688:	ldr	fp, [sp, #52]	; 0x34
   1e68c:	cmp	r5, #0
   1e690:	ldr	r5, [sp, #48]	; 0x30
   1e694:	bne	1e828 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   1e698:	mov	r6, r3
   1e69c:	add	r3, r2, #2
   1e6a0:	ldr	r2, [r1, #8]
   1e6a4:	lsl	r3, r3, #1
   1e6a8:	cmp	r2, r3
   1e6ac:	mov	lr, r1
   1e6b0:	bgt	1e6bc <flatcc_json_printer_bool_enum_vector_field@@Base+0x40>
   1e6b4:	add	sp, sp, #12
   1e6b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6bc:	ldr	r2, [r1, #4]
   1e6c0:	ldrh	r2, [r2, r3]
   1e6c4:	cmp	r2, #0
   1e6c8:	beq	1e6b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38>
   1e6cc:	mov	r4, r0
   1e6d0:	ldr	r0, [r1]
   1e6d4:	adds	ip, r0, r2
   1e6d8:	beq	1e6b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38>
   1e6dc:	ldr	r3, [r1, #16]
   1e6e0:	cmp	r3, #0
   1e6e4:	add	r3, r3, #1
   1e6e8:	str	r3, [r1, #16]
   1e6ec:	ldrne	r3, [r4, #20]
   1e6f0:	movne	r1, #44	; 0x2c
   1e6f4:	addne	lr, r3, #1
   1e6f8:	strne	lr, [r4, #20]
   1e6fc:	strbne	r1, [r3]
   1e700:	ldr	r3, [r0, r2]
   1e704:	mov	r1, r6
   1e708:	mov	r2, r5
   1e70c:	mov	r0, r4
   1e710:	ldr	r9, [ip, r3]
   1e714:	add	sl, ip, r3
   1e718:	bl	14b4c <test_print@@Base+0x1378>
   1e71c:	ldr	r3, [r4, #32]
   1e720:	ldr	r2, [r4, #20]
   1e724:	add	r3, r3, #1
   1e728:	add	r0, r2, #1
   1e72c:	mov	r1, #91	; 0x5b
   1e730:	cmp	r9, #0
   1e734:	str	r3, [r4, #32]
   1e738:	str	r0, [r4, #20]
   1e73c:	strb	r1, [r2]
   1e740:	beq	1e8a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1e744:	ldrb	r1, [r4, #25]
   1e748:	cmp	r1, #0
   1e74c:	bne	1e910 <flatcc_json_printer_bool_enum_vector_field@@Base+0x294>
   1e750:	ldr	r2, [r4, #20]
   1e754:	ldr	r3, [r4, #16]
   1e758:	cmp	r2, r3
   1e75c:	bcs	1e930 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2b4>
   1e760:	ldrb	r1, [sl, #4]
   1e764:	mov	r0, r4
   1e768:	blx	fp
   1e76c:	cmp	r9, #1
   1e770:	add	r6, sl, #5
   1e774:	beq	1e8a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1e778:	add	r3, r9, #4
   1e77c:	str	r3, [sp, #4]
   1e780:	mov	r8, #0
   1e784:	mov	r7, #32
   1e788:	b	1e7b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x13c>
   1e78c:	ldr	r2, [r4, #20]
   1e790:	ldr	r3, [r4, #16]
   1e794:	cmp	r2, r3
   1e798:	bcs	1e834 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b8>
   1e79c:	ldrb	r1, [r6], #1
   1e7a0:	mov	r0, r4
   1e7a4:	blx	fp
   1e7a8:	ldr	r3, [sp, #4]
   1e7ac:	sub	r3, r3, r6
   1e7b0:	cmn	sl, r3
   1e7b4:	beq	1e8a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x224>
   1e7b8:	ldr	r3, [r4, #20]
   1e7bc:	add	r2, r3, #1
   1e7c0:	str	r2, [r4, #20]
   1e7c4:	mov	r2, #44	; 0x2c
   1e7c8:	strb	r2, [r3]
   1e7cc:	ldrb	r3, [r4, #25]
   1e7d0:	cmp	r3, #0
   1e7d4:	beq	1e78c <flatcc_json_printer_bool_enum_vector_field@@Base+0x110>
   1e7d8:	ldr	r3, [r4, #20]
   1e7dc:	add	r2, r3, #1
   1e7e0:	str	r2, [r4, #20]
   1e7e4:	mov	r2, #10
   1e7e8:	strb	r2, [r3]
   1e7ec:	ldrb	r3, [r4, #25]
   1e7f0:	ldr	r2, [r4, #32]
   1e7f4:	ldr	r0, [r4, #20]
   1e7f8:	ldr	r5, [r4, #16]
   1e7fc:	mul	r9, r2, r3
   1e800:	add	r2, r0, r9
   1e804:	cmp	r5, r2
   1e808:	bcc	1e848 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   1e80c:	mov	r2, r9
   1e810:	mov	r1, r7
   1e814:	bl	124e8 <memset@plt>
   1e818:	ldr	r2, [r4, #20]
   1e81c:	add	r3, r2, r9
   1e820:	str	r3, [r4, #20]
   1e824:	b	1e79c <flatcc_json_printer_bool_enum_vector_field@@Base+0x120>
   1e828:	add	sp, sp, #12
   1e82c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e830:	b	1c814 <flatcc_json_printer_bool_vector_field@@Base>
   1e834:	ldr	r3, [r4, #44]	; 0x2c
   1e838:	mov	r1, r8
   1e83c:	mov	r0, r4
   1e840:	blx	r3
   1e844:	b	1e79c <flatcc_json_printer_bool_enum_vector_field@@Base+0x120>
   1e848:	cmp	r0, r5
   1e84c:	bcs	1e8c8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   1e850:	sub	r5, r5, r0
   1e854:	cmp	r9, r5
   1e858:	bls	1e80c <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   1e85c:	mov	r2, r5
   1e860:	mov	r1, r7
   1e864:	bl	124e8 <memset@plt>
   1e868:	ldr	r3, [r4, #20]
   1e86c:	mov	r0, r4
   1e870:	add	r3, r3, r5
   1e874:	str	r3, [r4, #20]
   1e878:	ldr	r2, [r4, #44]	; 0x2c
   1e87c:	mov	r1, r8
   1e880:	blx	r2
   1e884:	ldr	r0, [r4, #20]
   1e888:	ldr	r3, [r4, #16]
   1e88c:	sub	r9, r9, r5
   1e890:	sub	r5, r3, r0
   1e894:	cmp	r9, r5
   1e898:	bhi	1e85c <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e0>
   1e89c:	b	1e80c <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   1e8a0:	ldrb	r3, [r4, #25]
   1e8a4:	cmp	r3, #0
   1e8a8:	bne	1e8e4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x268>
   1e8ac:	ldr	r3, [r4, #20]
   1e8b0:	mov	r2, #93	; 0x5d
   1e8b4:	add	r1, r3, #1
   1e8b8:	str	r1, [r4, #20]
   1e8bc:	strb	r2, [r3]
   1e8c0:	add	sp, sp, #12
   1e8c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8c8:	mov	r0, r4
   1e8cc:	ldr	r2, [r4, #44]	; 0x2c
   1e8d0:	mov	r1, r8
   1e8d4:	blx	r2
   1e8d8:	ldr	r5, [r4, #16]
   1e8dc:	ldr	r0, [r4, #20]
   1e8e0:	b	1e850 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   1e8e4:	ldr	r3, [r4, #20]
   1e8e8:	mov	r2, #10
   1e8ec:	add	r1, r3, #1
   1e8f0:	str	r1, [r4, #20]
   1e8f4:	strb	r2, [r3]
   1e8f8:	ldr	r3, [r4, #32]
   1e8fc:	mov	r0, r4
   1e900:	sub	r3, r3, #1
   1e904:	str	r3, [r4, #32]
   1e908:	bl	145ac <test_print@@Base+0xdd8>
   1e90c:	b	1e8ac <flatcc_json_printer_bool_enum_vector_field@@Base+0x230>
   1e910:	ldr	r3, [r4, #20]
   1e914:	mov	r2, #10
   1e918:	add	r1, r3, #1
   1e91c:	str	r1, [r4, #20]
   1e920:	mov	r0, r4
   1e924:	strb	r2, [r3]
   1e928:	bl	145ac <test_print@@Base+0xdd8>
   1e92c:	b	1e760 <flatcc_json_printer_bool_enum_vector_field@@Base+0xe4>
   1e930:	ldr	r3, [r4, #44]	; 0x2c
   1e934:	mov	r0, r4
   1e938:	blx	r3
   1e93c:	b	1e760 <flatcc_json_printer_bool_enum_vector_field@@Base+0xe4>

0001e940 <flatcc_json_printer_struct_vector_field@@Base>:
   1e940:	add	r2, r2, #2
   1e944:	ldr	ip, [r1, #8]
   1e948:	lsl	r2, r2, #1
   1e94c:	cmp	r2, ip
   1e950:	bxge	lr
   1e954:	ldr	ip, [r1, #4]
   1e958:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e95c:	ldrh	lr, [ip, r2]
   1e960:	cmp	lr, #0
   1e964:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e968:	ldr	r5, [r1]
   1e96c:	adds	ip, r5, lr
   1e970:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e974:	ldr	r2, [r1, #16]
   1e978:	cmp	r2, #0
   1e97c:	add	r2, r2, #1
   1e980:	str	r2, [r1, #16]
   1e984:	ldrne	r2, [r0, #20]
   1e988:	movne	r1, #44	; 0x2c
   1e98c:	addne	r4, r2, #1
   1e990:	strne	r4, [r0, #20]
   1e994:	strbne	r1, [r2]
   1e998:	mov	r1, r3
   1e99c:	ldr	r3, [r5, lr]
   1e9a0:	mov	r4, r0
   1e9a4:	ldr	r2, [sp, #40]	; 0x28
   1e9a8:	ldr	r6, [ip, r3]
   1e9ac:	add	r7, ip, r3
   1e9b0:	bl	14b4c <test_print@@Base+0x1378>
   1e9b4:	ldr	r3, [r4, #32]
   1e9b8:	ldr	r2, [r4, #20]
   1e9bc:	add	r3, r3, #1
   1e9c0:	add	r0, r2, #1
   1e9c4:	mov	r1, #91	; 0x5b
   1e9c8:	cmp	r6, #0
   1e9cc:	str	r3, [r4, #32]
   1e9d0:	str	r0, [r4, #20]
   1e9d4:	strb	r1, [r2]
   1e9d8:	beq	1ec44 <flatcc_json_printer_struct_vector_field@@Base+0x304>
   1e9dc:	ldrb	r1, [r4, #25]
   1e9e0:	cmp	r1, #0
   1e9e4:	bne	1eccc <flatcc_json_printer_struct_vector_field@@Base+0x38c>
   1e9e8:	ldr	r2, [r4, #20]
   1e9ec:	ldr	r3, [r4, #16]
   1e9f0:	cmp	r2, r3
   1e9f4:	bcs	1ed1c <flatcc_json_printer_struct_vector_field@@Base+0x3dc>
   1e9f8:	ldr	r3, [r4, #32]
   1e9fc:	add	r1, r2, #1
   1ea00:	add	r3, r3, #1
   1ea04:	mov	r0, #123	; 0x7b
   1ea08:	add	r7, r7, #4
   1ea0c:	str	r3, [r4, #32]
   1ea10:	str	r1, [r4, #20]
   1ea14:	ldr	r3, [sp, #48]	; 0x30
   1ea18:	strb	r0, [r2]
   1ea1c:	mov	r1, r7
   1ea20:	mov	r0, r4
   1ea24:	blx	r3
   1ea28:	ldrb	r3, [r4, #25]
   1ea2c:	cmp	r3, #0
   1ea30:	bne	1ecf0 <flatcc_json_printer_struct_vector_field@@Base+0x3b0>
   1ea34:	ldr	r3, [r4, #20]
   1ea38:	cmp	r6, #1
   1ea3c:	add	r2, r3, #1
   1ea40:	mov	sl, #125	; 0x7d
   1ea44:	str	r2, [r4, #20]
   1ea48:	sub	r6, r6, #2
   1ea4c:	strb	sl, [r3]
   1ea50:	beq	1ec44 <flatcc_json_printer_struct_vector_field@@Base+0x304>
   1ea54:	mov	r9, #0
   1ea58:	mov	r8, #32
   1ea5c:	b	1eac4 <flatcc_json_printer_struct_vector_field@@Base+0x184>
   1ea60:	ldr	r5, [r4, #20]
   1ea64:	ldr	r3, [r4, #16]
   1ea68:	cmp	r5, r3
   1ea6c:	bcs	1eb8c <flatcc_json_printer_struct_vector_field@@Base+0x24c>
   1ea70:	ldr	r3, [r4, #32]
   1ea74:	add	r2, r5, #1
   1ea78:	add	r3, r3, #1
   1ea7c:	str	r3, [r4, #32]
   1ea80:	mov	r3, #123	; 0x7b
   1ea84:	str	r2, [r4, #20]
   1ea88:	mov	r1, r7
   1ea8c:	strb	r3, [r5]
   1ea90:	mov	r0, r4
   1ea94:	ldr	r3, [sp, #48]	; 0x30
   1ea98:	blx	r3
   1ea9c:	ldrb	r3, [r4, #25]
   1eaa0:	cmp	r3, #0
   1eaa4:	bne	1eb38 <flatcc_json_printer_struct_vector_field@@Base+0x1f8>
   1eaa8:	ldr	r5, [r4, #20]
   1eaac:	cmp	r6, #0
   1eab0:	add	r3, r5, #1
   1eab4:	str	r3, [r4, #20]
   1eab8:	sub	r6, r6, #1
   1eabc:	strb	sl, [r5]
   1eac0:	beq	1ec44 <flatcc_json_printer_struct_vector_field@@Base+0x304>
   1eac4:	ldr	r3, [r4, #20]
   1eac8:	ldr	r2, [sp, #44]	; 0x2c
   1eacc:	add	r7, r7, r2
   1ead0:	add	r2, r3, #1
   1ead4:	str	r2, [r4, #20]
   1ead8:	mov	r2, #44	; 0x2c
   1eadc:	strb	r2, [r3]
   1eae0:	ldrb	r3, [r4, #25]
   1eae4:	cmp	r3, #0
   1eae8:	beq	1ea60 <flatcc_json_printer_struct_vector_field@@Base+0x120>
   1eaec:	ldr	r3, [r4, #20]
   1eaf0:	add	r2, r3, #1
   1eaf4:	str	r2, [r4, #20]
   1eaf8:	mov	r2, #10
   1eafc:	strb	r2, [r3]
   1eb00:	ldrb	r2, [r4, #25]
   1eb04:	ldr	r5, [r4, #32]
   1eb08:	ldr	r0, [r4, #20]
   1eb0c:	ldr	r3, [r4, #16]
   1eb10:	mul	r5, r5, r2
   1eb14:	add	r2, r0, r5
   1eb18:	cmp	r3, r2
   1eb1c:	bcc	1eba4 <flatcc_json_printer_struct_vector_field@@Base+0x264>
   1eb20:	mov	r2, r5
   1eb24:	mov	r1, r8
   1eb28:	bl	124e8 <memset@plt>
   1eb2c:	ldr	r3, [r4, #20]
   1eb30:	add	r5, r3, r5
   1eb34:	b	1ea70 <flatcc_json_printer_struct_vector_field@@Base+0x130>
   1eb38:	ldr	r3, [r4, #20]
   1eb3c:	add	r2, r3, #1
   1eb40:	str	r2, [r4, #20]
   1eb44:	mov	r2, #10
   1eb48:	strb	r2, [r3]
   1eb4c:	ldr	r2, [r4, #32]
   1eb50:	ldrb	r5, [r4, #25]
   1eb54:	sub	r2, r2, #1
   1eb58:	ldr	r0, [r4, #20]
   1eb5c:	ldr	r3, [r4, #16]
   1eb60:	mul	r5, r2, r5
   1eb64:	str	r2, [r4, #32]
   1eb68:	add	r2, r0, r5
   1eb6c:	cmp	r3, r2
   1eb70:	bcc	1ebf4 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   1eb74:	mov	r2, r5
   1eb78:	mov	r1, r8
   1eb7c:	bl	124e8 <memset@plt>
   1eb80:	ldr	r3, [r4, #20]
   1eb84:	add	r5, r3, r5
   1eb88:	b	1eaac <flatcc_json_printer_struct_vector_field@@Base+0x16c>
   1eb8c:	ldr	r3, [r4, #44]	; 0x2c
   1eb90:	mov	r1, r9
   1eb94:	mov	r0, r4
   1eb98:	blx	r3
   1eb9c:	ldr	r5, [r4, #20]
   1eba0:	b	1ea70 <flatcc_json_printer_struct_vector_field@@Base+0x130>
   1eba4:	cmp	r0, r3
   1eba8:	bcc	1ebe4 <flatcc_json_printer_struct_vector_field@@Base+0x2a4>
   1ebac:	b	1ec68 <flatcc_json_printer_struct_vector_field@@Base+0x328>
   1ebb0:	mov	r2, fp
   1ebb4:	mov	r1, r8
   1ebb8:	bl	124e8 <memset@plt>
   1ebbc:	ldr	r3, [r4, #20]
   1ebc0:	mov	r0, r4
   1ebc4:	add	r3, r3, fp
   1ebc8:	str	r3, [r4, #20]
   1ebcc:	ldr	r2, [r4, #44]	; 0x2c
   1ebd0:	mov	r1, r9
   1ebd4:	blx	r2
   1ebd8:	ldr	r0, [r4, #20]
   1ebdc:	ldr	r3, [r4, #16]
   1ebe0:	sub	r5, r5, fp
   1ebe4:	sub	fp, r3, r0
   1ebe8:	cmp	r5, fp
   1ebec:	bhi	1ebb0 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   1ebf0:	b	1eb20 <flatcc_json_printer_struct_vector_field@@Base+0x1e0>
   1ebf4:	cmp	r0, r3
   1ebf8:	bcc	1ec34 <flatcc_json_printer_struct_vector_field@@Base+0x2f4>
   1ebfc:	b	1ec84 <flatcc_json_printer_struct_vector_field@@Base+0x344>
   1ec00:	mov	r2, fp
   1ec04:	mov	r1, r8
   1ec08:	bl	124e8 <memset@plt>
   1ec0c:	ldr	r3, [r4, #20]
   1ec10:	mov	r0, r4
   1ec14:	add	r3, r3, fp
   1ec18:	str	r3, [r4, #20]
   1ec1c:	ldr	r2, [r4, #44]	; 0x2c
   1ec20:	mov	r1, r9
   1ec24:	blx	r2
   1ec28:	ldr	r0, [r4, #20]
   1ec2c:	ldr	r3, [r4, #16]
   1ec30:	sub	r5, r5, fp
   1ec34:	sub	fp, r3, r0
   1ec38:	cmp	r5, fp
   1ec3c:	bhi	1ec00 <flatcc_json_printer_struct_vector_field@@Base+0x2c0>
   1ec40:	b	1eb74 <flatcc_json_printer_struct_vector_field@@Base+0x234>
   1ec44:	ldrb	r3, [r4, #25]
   1ec48:	cmp	r3, #0
   1ec4c:	bne	1eca0 <flatcc_json_printer_struct_vector_field@@Base+0x360>
   1ec50:	ldr	r3, [r4, #20]
   1ec54:	mov	r2, #93	; 0x5d
   1ec58:	add	r1, r3, #1
   1ec5c:	str	r1, [r4, #20]
   1ec60:	strb	r2, [r3]
   1ec64:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec68:	ldr	r3, [r4, #44]	; 0x2c
   1ec6c:	mov	r0, r4
   1ec70:	mov	r1, r9
   1ec74:	blx	r3
   1ec78:	ldr	r3, [r4, #16]
   1ec7c:	ldr	r0, [r4, #20]
   1ec80:	b	1ebe4 <flatcc_json_printer_struct_vector_field@@Base+0x2a4>
   1ec84:	ldr	r3, [r4, #44]	; 0x2c
   1ec88:	mov	r0, r4
   1ec8c:	mov	r1, r9
   1ec90:	blx	r3
   1ec94:	ldr	r3, [r4, #16]
   1ec98:	ldr	r0, [r4, #20]
   1ec9c:	b	1ec34 <flatcc_json_printer_struct_vector_field@@Base+0x2f4>
   1eca0:	ldr	r3, [r4, #20]
   1eca4:	mov	r2, #10
   1eca8:	add	r1, r3, #1
   1ecac:	str	r1, [r4, #20]
   1ecb0:	strb	r2, [r3]
   1ecb4:	ldr	r3, [r4, #32]
   1ecb8:	mov	r0, r4
   1ecbc:	sub	r3, r3, #1
   1ecc0:	str	r3, [r4, #32]
   1ecc4:	bl	145ac <test_print@@Base+0xdd8>
   1ecc8:	b	1ec50 <flatcc_json_printer_struct_vector_field@@Base+0x310>
   1eccc:	ldr	r3, [r4, #20]
   1ecd0:	mov	r2, #10
   1ecd4:	add	r1, r3, #1
   1ecd8:	str	r1, [r4, #20]
   1ecdc:	mov	r0, r4
   1ece0:	strb	r2, [r3]
   1ece4:	bl	145ac <test_print@@Base+0xdd8>
   1ece8:	ldr	r2, [r4, #20]
   1ecec:	b	1e9f8 <flatcc_json_printer_struct_vector_field@@Base+0xb8>
   1ecf0:	ldr	r3, [r4, #20]
   1ecf4:	mov	r2, #10
   1ecf8:	add	r1, r3, #1
   1ecfc:	str	r1, [r4, #20]
   1ed00:	strb	r2, [r3]
   1ed04:	ldr	r3, [r4, #32]
   1ed08:	mov	r0, r4
   1ed0c:	sub	r3, r3, #1
   1ed10:	str	r3, [r4, #32]
   1ed14:	bl	145ac <test_print@@Base+0xdd8>
   1ed18:	b	1ea34 <flatcc_json_printer_struct_vector_field@@Base+0xf4>
   1ed1c:	ldr	r3, [r4, #44]	; 0x2c
   1ed20:	mov	r0, r4
   1ed24:	blx	r3
   1ed28:	ldr	r2, [r4, #20]
   1ed2c:	b	1e9f8 <flatcc_json_printer_struct_vector_field@@Base+0xb8>

0001ed30 <flatcc_json_printer_string_vector_field@@Base>:
   1ed30:	add	r2, r2, #2
   1ed34:	ldr	ip, [r1, #8]
   1ed38:	lsl	r2, r2, #1
   1ed3c:	cmp	ip, r2
   1ed40:	bxle	lr
   1ed44:	ldr	ip, [r1, #4]
   1ed48:	ldrh	ip, [ip, r2]
   1ed4c:	cmp	ip, #0
   1ed50:	bxeq	lr
   1ed54:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed58:	ldr	r5, [r1]
   1ed5c:	adds	lr, r5, ip
   1ed60:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed64:	ldr	r2, [r1, #16]
   1ed68:	cmp	r2, #0
   1ed6c:	add	r2, r2, #1
   1ed70:	str	r2, [r1, #16]
   1ed74:	ldrne	r2, [r0, #20]
   1ed78:	movne	r1, #44	; 0x2c
   1ed7c:	addne	r4, r2, #1
   1ed80:	strne	r4, [r0, #20]
   1ed84:	strbne	r1, [r2]
   1ed88:	mov	r1, r3
   1ed8c:	ldr	r3, [r5, ip]
   1ed90:	mov	r4, r0
   1ed94:	ldr	r2, [sp, #40]	; 0x28
   1ed98:	ldr	r7, [lr, r3]
   1ed9c:	add	r8, lr, r3
   1eda0:	bl	14b4c <test_print@@Base+0x1378>
   1eda4:	ldr	r3, [r4, #32]
   1eda8:	ldr	r2, [r4, #20]
   1edac:	add	r3, r3, #1
   1edb0:	add	r0, r2, #1
   1edb4:	mov	r1, #91	; 0x5b
   1edb8:	cmp	r7, #0
   1edbc:	str	r3, [r4, #32]
   1edc0:	str	r0, [r4, #20]
   1edc4:	strb	r1, [r2]
   1edc8:	beq	1ef38 <flatcc_json_printer_string_vector_field@@Base+0x208>
   1edcc:	ldrb	r1, [r4, #25]
   1edd0:	cmp	r1, #0
   1edd4:	bne	1efa4 <flatcc_json_printer_string_vector_field@@Base+0x274>
   1edd8:	ldr	r2, [r4, #20]
   1eddc:	ldr	r3, [r4, #16]
   1ede0:	cmp	r2, r3
   1ede4:	bcs	1efc4 <flatcc_json_printer_string_vector_field@@Base+0x294>
   1ede8:	ldr	r3, [r8, #4]
   1edec:	mov	r0, r4
   1edf0:	add	r3, r3, #4
   1edf4:	add	r1, r8, r3
   1edf8:	add	r1, r1, #4
   1edfc:	ldr	r2, [r8, r3]
   1ee00:	bl	14880 <test_print@@Base+0x10ac>
   1ee04:	cmp	r7, #1
   1ee08:	sub	r7, r7, #2
   1ee0c:	beq	1ef38 <flatcc_json_printer_string_vector_field@@Base+0x208>
   1ee10:	add	r8, r8, #8
   1ee14:	mov	sl, #0
   1ee18:	mov	r9, #32
   1ee1c:	b	1ee58 <flatcc_json_printer_string_vector_field@@Base+0x128>
   1ee20:	ldr	r2, [r4, #20]
   1ee24:	ldr	r3, [r4, #16]
   1ee28:	cmp	r2, r3
   1ee2c:	bcs	1eecc <flatcc_json_printer_string_vector_field@@Base+0x19c>
   1ee30:	ldr	r3, [fp]
   1ee34:	mov	r0, r4
   1ee38:	add	r1, fp, r3
   1ee3c:	add	r1, r1, #4
   1ee40:	ldr	r2, [fp, r3]
   1ee44:	bl	14880 <test_print@@Base+0x10ac>
   1ee48:	cmp	r7, #0
   1ee4c:	add	r8, r8, #4
   1ee50:	sub	r7, r7, #1
   1ee54:	beq	1ef38 <flatcc_json_printer_string_vector_field@@Base+0x208>
   1ee58:	ldr	r3, [r4, #20]
   1ee5c:	mov	fp, r8
   1ee60:	add	r2, r3, #1
   1ee64:	str	r2, [r4, #20]
   1ee68:	mov	r2, #44	; 0x2c
   1ee6c:	strb	r2, [r3]
   1ee70:	ldrb	r3, [r4, #25]
   1ee74:	cmp	r3, #0
   1ee78:	beq	1ee20 <flatcc_json_printer_string_vector_field@@Base+0xf0>
   1ee7c:	ldr	r3, [r4, #20]
   1ee80:	add	r2, r3, #1
   1ee84:	str	r2, [r4, #20]
   1ee88:	mov	r2, #10
   1ee8c:	strb	r2, [r3]
   1ee90:	ldrb	r3, [r4, #25]
   1ee94:	ldr	r6, [r4, #32]
   1ee98:	ldr	r0, [r4, #20]
   1ee9c:	ldr	r5, [r4, #16]
   1eea0:	mul	r6, r6, r3
   1eea4:	add	r3, r0, r6
   1eea8:	cmp	r5, r3
   1eeac:	bcc	1eee0 <flatcc_json_printer_string_vector_field@@Base+0x1b0>
   1eeb0:	mov	r2, r6
   1eeb4:	mov	r1, r9
   1eeb8:	bl	124e8 <memset@plt>
   1eebc:	ldr	r3, [r4, #20]
   1eec0:	add	r6, r3, r6
   1eec4:	str	r6, [r4, #20]
   1eec8:	b	1ee30 <flatcc_json_printer_string_vector_field@@Base+0x100>
   1eecc:	ldr	r3, [r4, #44]	; 0x2c
   1eed0:	mov	r1, sl
   1eed4:	mov	r0, r4
   1eed8:	blx	r3
   1eedc:	b	1ee30 <flatcc_json_printer_string_vector_field@@Base+0x100>
   1eee0:	cmp	r0, r5
   1eee4:	bcs	1ef5c <flatcc_json_printer_string_vector_field@@Base+0x22c>
   1eee8:	sub	r5, r5, r0
   1eeec:	cmp	r6, r5
   1eef0:	bls	1eeb0 <flatcc_json_printer_string_vector_field@@Base+0x180>
   1eef4:	mov	r2, r5
   1eef8:	mov	r1, r9
   1eefc:	bl	124e8 <memset@plt>
   1ef00:	ldr	r3, [r4, #20]
   1ef04:	mov	r0, r4
   1ef08:	add	r3, r3, r5
   1ef0c:	str	r3, [r4, #20]
   1ef10:	ldr	r2, [r4, #44]	; 0x2c
   1ef14:	mov	r1, sl
   1ef18:	blx	r2
   1ef1c:	ldr	r0, [r4, #20]
   1ef20:	ldr	r3, [r4, #16]
   1ef24:	sub	r6, r6, r5
   1ef28:	sub	r5, r3, r0
   1ef2c:	cmp	r6, r5
   1ef30:	bhi	1eef4 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   1ef34:	b	1eeb0 <flatcc_json_printer_string_vector_field@@Base+0x180>
   1ef38:	ldrb	r3, [r4, #25]
   1ef3c:	cmp	r3, #0
   1ef40:	bne	1ef78 <flatcc_json_printer_string_vector_field@@Base+0x248>
   1ef44:	ldr	r3, [r4, #20]
   1ef48:	mov	r2, #93	; 0x5d
   1ef4c:	add	r1, r3, #1
   1ef50:	str	r1, [r4, #20]
   1ef54:	strb	r2, [r3]
   1ef58:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef5c:	mov	r0, r4
   1ef60:	ldr	r3, [r4, #44]	; 0x2c
   1ef64:	mov	r1, sl
   1ef68:	blx	r3
   1ef6c:	ldr	r5, [r4, #16]
   1ef70:	ldr	r0, [r4, #20]
   1ef74:	b	1eee8 <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   1ef78:	ldr	r3, [r4, #20]
   1ef7c:	mov	r2, #10
   1ef80:	add	r1, r3, #1
   1ef84:	str	r1, [r4, #20]
   1ef88:	strb	r2, [r3]
   1ef8c:	ldr	r3, [r4, #32]
   1ef90:	mov	r0, r4
   1ef94:	sub	r3, r3, #1
   1ef98:	str	r3, [r4, #32]
   1ef9c:	bl	145ac <test_print@@Base+0xdd8>
   1efa0:	b	1ef44 <flatcc_json_printer_string_vector_field@@Base+0x214>
   1efa4:	ldr	r3, [r4, #20]
   1efa8:	mov	r2, #10
   1efac:	add	r1, r3, #1
   1efb0:	str	r1, [r4, #20]
   1efb4:	mov	r0, r4
   1efb8:	strb	r2, [r3]
   1efbc:	bl	145ac <test_print@@Base+0xdd8>
   1efc0:	b	1ede8 <flatcc_json_printer_string_vector_field@@Base+0xb8>
   1efc4:	ldr	r3, [r4, #44]	; 0x2c
   1efc8:	mov	r0, r4
   1efcc:	blx	r3
   1efd0:	b	1ede8 <flatcc_json_printer_string_vector_field@@Base+0xb8>

0001efd4 <flatcc_json_printer_table_vector_field@@Base>:
   1efd4:	add	r2, r2, #2
   1efd8:	ldr	ip, [r1, #8]
   1efdc:	lsl	r2, r2, #1
   1efe0:	cmp	ip, r2
   1efe4:	bxle	lr
   1efe8:	ldr	ip, [r1, #4]
   1efec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eff0:	sub	sp, sp, #44	; 0x2c
   1eff4:	ldrh	lr, [ip, r2]
   1eff8:	cmp	lr, #0
   1effc:	beq	1f098 <flatcc_json_printer_table_vector_field@@Base+0xc4>
   1f000:	ldr	r5, [r1]
   1f004:	adds	ip, r5, lr
   1f008:	beq	1f098 <flatcc_json_printer_table_vector_field@@Base+0xc4>
   1f00c:	ldr	r2, [r1, #16]
   1f010:	mov	fp, r1
   1f014:	cmp	r2, #0
   1f018:	add	r2, r2, #1
   1f01c:	str	r2, [r1, #16]
   1f020:	ldrne	r2, [r0, #20]
   1f024:	movne	r4, #44	; 0x2c
   1f028:	addne	r6, r2, #1
   1f02c:	strne	r6, [r0, #20]
   1f030:	strbne	r4, [r2]
   1f034:	ldr	lr, [r5, lr]
   1f038:	mov	r4, r0
   1f03c:	mov	r1, r3
   1f040:	ldr	r2, [sp, #80]	; 0x50
   1f044:	ldr	r5, [ip, lr]
   1f048:	add	r7, ip, lr
   1f04c:	bl	14b4c <test_print@@Base+0x1378>
   1f050:	ldr	r2, [r4, #32]
   1f054:	ldr	r1, [r4, #20]
   1f058:	add	r2, r2, #1
   1f05c:	add	ip, r1, #1
   1f060:	mov	r0, #91	; 0x5b
   1f064:	cmp	r5, #0
   1f068:	str	r2, [r4, #32]
   1f06c:	str	ip, [r4, #20]
   1f070:	strb	r0, [r1]
   1f074:	bne	1f0a0 <flatcc_json_printer_table_vector_field@@Base+0xcc>
   1f078:	ldrb	r3, [r4, #25]
   1f07c:	cmp	r3, #0
   1f080:	bne	1f110 <flatcc_json_printer_table_vector_field@@Base+0x13c>
   1f084:	ldr	r3, [r4, #20]
   1f088:	mov	r2, #93	; 0x5d
   1f08c:	add	r1, r3, #1
   1f090:	str	r1, [r4, #20]
   1f094:	strb	r2, [r3]
   1f098:	add	sp, sp, #44	; 0x2c
   1f09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0a0:	ldr	r2, [fp, #12]
   1f0a4:	add	r6, r7, #4
   1f0a8:	subs	r2, r2, #1
   1f0ac:	bne	1f13c <flatcc_json_printer_table_vector_field@@Base+0x168>
   1f0b0:	ldr	r2, [r4, #36]	; 0x24
   1f0b4:	cmp	r2, #0
   1f0b8:	moveq	r2, #2
   1f0bc:	streq	r2, [r4, #36]	; 0x24
   1f0c0:	sub	r5, r5, #1
   1f0c4:	mov	r9, #44	; 0x2c
   1f0c8:	mov	sl, #0
   1f0cc:	subs	r5, r5, #1
   1f0d0:	bcc	1f078 <flatcc_json_printer_table_vector_field@@Base+0xa4>
   1f0d4:	ldr	r3, [r4, #20]
   1f0d8:	add	r6, r6, #4
   1f0dc:	add	r2, r3, #1
   1f0e0:	str	r2, [r4, #20]
   1f0e4:	strb	r9, [r3]
   1f0e8:	ldr	r3, [fp, #12]
   1f0ec:	subs	r3, r3, #1
   1f0f0:	bne	1f1b4 <flatcc_json_printer_table_vector_field@@Base+0x1e0>
   1f0f4:	ldr	r3, [r4, #36]	; 0x24
   1f0f8:	cmp	r3, #0
   1f0fc:	moveq	r3, #2
   1f100:	streq	r3, [r4, #36]	; 0x24
   1f104:	subs	r5, r5, #1
   1f108:	bcs	1f0d4 <flatcc_json_printer_table_vector_field@@Base+0x100>
   1f10c:	b	1f078 <flatcc_json_printer_table_vector_field@@Base+0xa4>
   1f110:	ldr	r3, [r4, #20]
   1f114:	mov	r2, #10
   1f118:	add	r1, r3, #1
   1f11c:	str	r1, [r4, #20]
   1f120:	strb	r2, [r3]
   1f124:	ldr	r3, [r4, #32]
   1f128:	mov	r0, r4
   1f12c:	sub	r3, r3, #1
   1f130:	str	r3, [r4, #32]
   1f134:	bl	145ac <test_print@@Base+0xdd8>
   1f138:	b	1f084 <flatcc_json_printer_table_vector_field@@Base+0xb0>
   1f13c:	ldr	r0, [r4, #32]
   1f140:	ldr	r1, [r7, #4]
   1f144:	ldr	ip, [r4, #20]
   1f148:	add	r0, r0, #1
   1f14c:	str	r0, [r4, #32]
   1f150:	add	r7, ip, #1
   1f154:	mov	lr, #123	; 0x7b
   1f158:	mov	r0, #0
   1f15c:	str	r7, [r4, #20]
   1f160:	strb	lr, [ip]
   1f164:	str	r2, [sp, #12]
   1f168:	str	r0, [sp, #16]
   1f16c:	ldr	ip, [r6, r1]
   1f170:	add	r2, r6, r1
   1f174:	sub	ip, r2, ip
   1f178:	mov	r1, sp
   1f17c:	ldrh	lr, [ip]
   1f180:	mov	r0, r4
   1f184:	ldr	r3, [sp, #84]	; 0x54
   1f188:	stm	sp, {r2, ip, lr}
   1f18c:	blx	r3
   1f190:	ldrb	r2, [r4, #25]
   1f194:	cmp	r2, #0
   1f198:	bne	1f2f0 <flatcc_json_printer_table_vector_field@@Base+0x31c>
   1f19c:	ldr	r2, [r4, #20]
   1f1a0:	mov	r1, #125	; 0x7d
   1f1a4:	add	r0, r2, #1
   1f1a8:	str	r0, [r4, #20]
   1f1ac:	strb	r1, [r2]
   1f1b0:	b	1f0c0 <flatcc_json_printer_table_vector_field@@Base+0xec>
   1f1b4:	ldr	r1, [r4, #32]
   1f1b8:	ldr	r2, [r6]
   1f1bc:	ldr	r0, [r4, #20]
   1f1c0:	add	r1, r1, #1
   1f1c4:	str	r1, [r4, #32]
   1f1c8:	add	ip, r0, #1
   1f1cc:	mov	r1, #123	; 0x7b
   1f1d0:	str	ip, [r4, #20]
   1f1d4:	strb	r1, [r0]
   1f1d8:	str	r3, [sp, #32]
   1f1dc:	str	sl, [sp, #36]	; 0x24
   1f1e0:	ldr	r1, [r6, r2]
   1f1e4:	add	r3, r6, r2
   1f1e8:	sub	r2, r3, r1
   1f1ec:	mov	r0, r4
   1f1f0:	ldrh	ip, [r2]
   1f1f4:	add	r1, sp, #20
   1f1f8:	str	r3, [sp, #20]
   1f1fc:	ldr	r3, [sp, #84]	; 0x54
   1f200:	str	r2, [sp, #24]
   1f204:	str	ip, [sp, #28]
   1f208:	blx	r3
   1f20c:	ldrb	r3, [r4, #25]
   1f210:	cmp	r3, #0
   1f214:	bne	1f230 <flatcc_json_printer_table_vector_field@@Base+0x25c>
   1f218:	ldr	r7, [r4, #20]
   1f21c:	add	r3, r7, #1
   1f220:	str	r3, [r4, #20]
   1f224:	mov	r3, #125	; 0x7d
   1f228:	strb	r3, [r7]
   1f22c:	b	1f0cc <flatcc_json_printer_table_vector_field@@Base+0xf8>
   1f230:	ldr	r3, [r4, #20]
   1f234:	add	r2, r3, #1
   1f238:	str	r2, [r4, #20]
   1f23c:	mov	r2, #10
   1f240:	strb	r2, [r3]
   1f244:	ldr	r2, [r4, #32]
   1f248:	ldrb	r7, [r4, #25]
   1f24c:	sub	r2, r2, #1
   1f250:	ldr	r0, [r4, #20]
   1f254:	ldr	r3, [r4, #16]
   1f258:	mul	r7, r2, r7
   1f25c:	str	r2, [r4, #32]
   1f260:	add	r2, r0, r7
   1f264:	cmp	r3, r2
   1f268:	bcc	1f284 <flatcc_json_printer_table_vector_field@@Base+0x2b0>
   1f26c:	mov	r2, r7
   1f270:	mov	r1, #32
   1f274:	bl	124e8 <memset@plt>
   1f278:	ldr	r3, [r4, #20]
   1f27c:	add	r7, r3, r7
   1f280:	b	1f21c <flatcc_json_printer_table_vector_field@@Base+0x248>
   1f284:	cmp	r0, r3
   1f288:	bcc	1f2c4 <flatcc_json_printer_table_vector_field@@Base+0x2f0>
   1f28c:	b	1f2d4 <flatcc_json_printer_table_vector_field@@Base+0x300>
   1f290:	mov	r2, r8
   1f294:	mov	r1, #32
   1f298:	bl	124e8 <memset@plt>
   1f29c:	ldr	r3, [r4, #20]
   1f2a0:	mov	r0, r4
   1f2a4:	add	r3, r3, r8
   1f2a8:	str	r3, [r4, #20]
   1f2ac:	ldr	r2, [r4, #44]	; 0x2c
   1f2b0:	mov	r1, sl
   1f2b4:	blx	r2
   1f2b8:	ldr	r0, [r4, #20]
   1f2bc:	ldr	r3, [r4, #16]
   1f2c0:	sub	r7, r7, r8
   1f2c4:	sub	r8, r3, r0
   1f2c8:	cmp	r7, r8
   1f2cc:	bhi	1f290 <flatcc_json_printer_table_vector_field@@Base+0x2bc>
   1f2d0:	b	1f26c <flatcc_json_printer_table_vector_field@@Base+0x298>
   1f2d4:	ldr	r3, [r4, #44]	; 0x2c
   1f2d8:	mov	r0, r4
   1f2dc:	mov	r1, sl
   1f2e0:	blx	r3
   1f2e4:	ldr	r3, [r4, #16]
   1f2e8:	ldr	r0, [r4, #20]
   1f2ec:	b	1f2c4 <flatcc_json_printer_table_vector_field@@Base+0x2f0>
   1f2f0:	ldr	r2, [r4, #20]
   1f2f4:	mov	r1, #10
   1f2f8:	add	r0, r2, #1
   1f2fc:	str	r0, [r4, #20]
   1f300:	strb	r1, [r2]
   1f304:	ldr	r2, [r4, #32]
   1f308:	mov	r0, r4
   1f30c:	sub	r2, r2, #1
   1f310:	str	r2, [r4, #32]
   1f314:	bl	145ac <test_print@@Base+0xdd8>
   1f318:	b	1f19c <flatcc_json_printer_table_vector_field@@Base+0x1c8>

0001f31c <flatcc_json_printer_union_vector_field@@Base>:
   1f31c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f320:	mov	r8, r2
   1f324:	add	r2, r2, #1
   1f328:	mov	r5, r1
   1f32c:	ldr	r1, [r1, #8]
   1f330:	sub	sp, sp, #140	; 0x8c
   1f334:	lsl	r2, r2, #1
   1f338:	cmp	r2, r1
   1f33c:	mov	r4, r0
   1f340:	mov	r9, r3
   1f344:	ldr	r6, [sp, #176]	; 0xb0
   1f348:	movge	r7, #0
   1f34c:	bge	1f364 <flatcc_json_printer_union_vector_field@@Base+0x48>
   1f350:	ldr	r3, [r5, #4]
   1f354:	ldrh	r7, [r3, r2]
   1f358:	cmp	r7, #0
   1f35c:	ldrne	r3, [r5]
   1f360:	addne	r7, r3, r7
   1f364:	add	r2, r2, #2
   1f368:	cmp	r2, r1
   1f36c:	bge	1f580 <flatcc_json_printer_union_vector_field@@Base+0x264>
   1f370:	ldr	r3, [r5, #4]
   1f374:	ldrh	sl, [r3, r2]
   1f378:	cmp	sl, #0
   1f37c:	beq	1f580 <flatcc_json_printer_union_vector_field@@Base+0x264>
   1f380:	ldr	r3, [r5]
   1f384:	cmp	r6, #100	; 0x64
   1f388:	mov	r2, r3
   1f38c:	str	r3, [sp, #12]
   1f390:	ldr	r3, [r5, #12]
   1f394:	add	fp, r2, sl
   1f398:	str	r3, [sp, #20]
   1f39c:	bgt	1f5b4 <flatcc_json_printer_union_vector_field@@Base+0x298>
   1f3a0:	add	r3, sp, #28
   1f3a4:	mov	r0, r3
   1f3a8:	mov	r2, r6
   1f3ac:	mov	r1, r9
   1f3b0:	bl	1244c <memcpy@plt>
   1f3b4:	ldr	r2, [pc, #612]	; 1f620 <flatcc_json_printer_union_vector_field@@Base+0x304>
   1f3b8:	cmp	fp, #0
   1f3bc:	cmpne	r7, #0
   1f3c0:	ldrb	ip, [r2, #4]
   1f3c4:	mov	r3, r0
   1f3c8:	add	r1, r0, r6
   1f3cc:	ldr	r0, [r2]
   1f3d0:	str	r0, [r3, r6]
   1f3d4:	strb	ip, [r1, #4]
   1f3d8:	beq	1f590 <flatcc_json_printer_union_vector_field@@Base+0x274>
   1f3dc:	ldr	r2, [sp, #180]	; 0xb4
   1f3e0:	add	r1, r6, #5
   1f3e4:	str	r2, [sp, #4]
   1f3e8:	str	r1, [sp]
   1f3ec:	sub	r2, r8, #1
   1f3f0:	mov	r1, r5
   1f3f4:	mov	r0, r4
   1f3f8:	bl	1d088 <flatcc_json_printer_uint8_enum_vector_field@@Base>
   1f3fc:	ldr	r3, [r5, #16]
   1f400:	mov	r0, r4
   1f404:	cmp	r3, #0
   1f408:	add	r3, r3, #1
   1f40c:	str	r3, [r5, #16]
   1f410:	ldrne	r3, [r4, #20]
   1f414:	movne	r2, #44	; 0x2c
   1f418:	addne	r1, r3, #1
   1f41c:	strne	r1, [r4, #20]
   1f420:	strbne	r2, [r3]
   1f424:	ldr	r3, [sp, #12]
   1f428:	mov	r2, r6
   1f42c:	mov	r1, r9
   1f430:	ldr	r3, [r3, sl]
   1f434:	ldr	r6, [r7]
   1f438:	add	r5, fp, r3
   1f43c:	ldr	r8, [fp, r3]
   1f440:	bl	14b4c <test_print@@Base+0x1378>
   1f444:	ldr	r3, [r4, #32]
   1f448:	ldr	r2, [r4, #20]
   1f44c:	add	r3, r3, #1
   1f450:	add	r0, r2, #1
   1f454:	mov	r1, #91	; 0x5b
   1f458:	cmp	r8, #0
   1f45c:	str	r3, [r4, #32]
   1f460:	str	r0, [r4, #20]
   1f464:	strb	r1, [r2]
   1f468:	beq	1f558 <flatcc_json_printer_union_vector_field@@Base+0x23c>
   1f46c:	add	r7, r7, r6
   1f470:	add	r5, r5, #4
   1f474:	ldrb	r3, [r7, #4]
   1f478:	cmp	r3, #0
   1f47c:	bne	1f604 <flatcc_json_printer_union_vector_field@@Base+0x2e8>
   1f480:	ldr	r3, [r4, #20]
   1f484:	mov	r2, #110	; 0x6e
   1f488:	add	r1, r3, #1
   1f48c:	str	r1, [r4, #20]
   1f490:	strb	r2, [r3]
   1f494:	ldr	r3, [r4, #20]
   1f498:	mov	r2, #117	; 0x75
   1f49c:	add	r1, r3, #1
   1f4a0:	str	r1, [r4, #20]
   1f4a4:	strb	r2, [r3]
   1f4a8:	ldr	r3, [r4, #20]
   1f4ac:	mov	r2, #108	; 0x6c
   1f4b0:	add	r1, r3, #1
   1f4b4:	str	r1, [r4, #20]
   1f4b8:	strb	r2, [r3]
   1f4bc:	ldr	r3, [r4, #20]
   1f4c0:	add	r1, r3, #1
   1f4c4:	str	r1, [r4, #20]
   1f4c8:	strb	r2, [r3]
   1f4cc:	add	r8, r8, #3
   1f4d0:	add	r8, r7, r8
   1f4d4:	mov	r9, #44	; 0x2c
   1f4d8:	add	r7, r7, #4
   1f4dc:	mov	fp, #110	; 0x6e
   1f4e0:	mov	sl, #117	; 0x75
   1f4e4:	mov	r6, #108	; 0x6c
   1f4e8:	cmp	r7, r8
   1f4ec:	beq	1f558 <flatcc_json_printer_union_vector_field@@Base+0x23c>
   1f4f0:	ldrb	r2, [r7, #1]!
   1f4f4:	ldr	r3, [r4, #20]
   1f4f8:	add	r5, r5, #4
   1f4fc:	add	r1, r3, #1
   1f500:	cmp	r2, #0
   1f504:	str	r1, [r4, #20]
   1f508:	strb	r9, [r3]
   1f50c:	bne	1f598 <flatcc_json_printer_union_vector_field@@Base+0x27c>
   1f510:	ldr	r3, [r4, #20]
   1f514:	cmp	r7, r8
   1f518:	add	r2, r3, #1
   1f51c:	str	r2, [r4, #20]
   1f520:	strb	fp, [r3]
   1f524:	ldr	r3, [r4, #20]
   1f528:	add	r2, r3, #1
   1f52c:	str	r2, [r4, #20]
   1f530:	strb	sl, [r3]
   1f534:	ldr	r3, [r4, #20]
   1f538:	add	r2, r3, #1
   1f53c:	str	r2, [r4, #20]
   1f540:	strb	r6, [r3]
   1f544:	ldr	r3, [r4, #20]
   1f548:	add	r2, r3, #1
   1f54c:	str	r2, [r4, #20]
   1f550:	strb	r6, [r3]
   1f554:	bne	1f4f0 <flatcc_json_printer_union_vector_field@@Base+0x1d4>
   1f558:	ldrb	r3, [r4, #25]
   1f55c:	cmp	r3, #0
   1f560:	bne	1f5d8 <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   1f564:	ldr	r3, [r4, #20]
   1f568:	mov	r2, #93	; 0x5d
   1f56c:	add	r1, r3, #1
   1f570:	str	r1, [r4, #20]
   1f574:	strb	r2, [r3]
   1f578:	add	sp, sp, #140	; 0x8c
   1f57c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f580:	ldr	r3, [r5, #12]
   1f584:	cmp	r6, #100	; 0x64
   1f588:	str	r3, [sp, #20]
   1f58c:	bgt	1f5b4 <flatcc_json_printer_union_vector_field@@Base+0x298>
   1f590:	add	sp, sp, #140	; 0x8c
   1f594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f598:	add	r1, sp, #16
   1f59c:	mov	r0, r4
   1f5a0:	ldr	r3, [sp, #184]	; 0xb8
   1f5a4:	strb	r2, [sp, #24]
   1f5a8:	str	r5, [sp, #16]
   1f5ac:	blx	r3
   1f5b0:	b	1f4e8 <flatcc_json_printer_union_vector_field@@Base+0x1cc>
   1f5b4:	ldr	r3, [r4, #36]	; 0x24
   1f5b8:	ldr	r2, [pc, #100]	; 1f624 <flatcc_json_printer_union_vector_field@@Base+0x308>
   1f5bc:	cmp	r3, #0
   1f5c0:	moveq	r3, #1
   1f5c4:	streq	r3, [r4, #36]	; 0x24
   1f5c8:	ldr	r1, [pc, #88]	; 1f628 <flatcc_json_printer_union_vector_field@@Base+0x30c>
   1f5cc:	ldr	r3, [pc, #88]	; 1f62c <flatcc_json_printer_union_vector_field@@Base+0x310>
   1f5d0:	ldr	r0, [pc, #88]	; 1f630 <flatcc_json_printer_union_vector_field@@Base+0x314>
   1f5d4:	bl	12530 <__assert_fail@plt>
   1f5d8:	ldr	r3, [r4, #20]
   1f5dc:	mov	r2, #10
   1f5e0:	add	r1, r3, #1
   1f5e4:	str	r1, [r4, #20]
   1f5e8:	strb	r2, [r3]
   1f5ec:	ldr	r3, [r4, #32]
   1f5f0:	mov	r0, r4
   1f5f4:	sub	r3, r3, #1
   1f5f8:	str	r3, [r4, #32]
   1f5fc:	bl	145ac <test_print@@Base+0xdd8>
   1f600:	b	1f564 <flatcc_json_printer_union_vector_field@@Base+0x248>
   1f604:	add	r1, sp, #136	; 0x88
   1f608:	strb	r3, [sp, #24]
   1f60c:	mov	r0, r4
   1f610:	str	r5, [r1, #-120]!	; 0xffffff88
   1f614:	ldr	r3, [sp, #184]	; 0xb8
   1f618:	blx	r3
   1f61c:	b	1f4cc <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   1f620:	andeq	r2, r2, r0
   1f624:	andeq	r0, r0, fp, asr #6
   1f628:	andeq	r1, r2, r8, lsr lr
   1f62c:	andeq	r1, r2, r0, ror sp
   1f630:	andeq	r1, r2, r4, ror #31

0001f634 <flatcc_json_printer_table_field@@Base>:
   1f634:	add	r2, r2, #2
   1f638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f63c:	mov	r8, r1
   1f640:	ldr	r1, [r1, #8]
   1f644:	sub	sp, sp, #36	; 0x24
   1f648:	lsl	r2, r2, #1
   1f64c:	cmp	r2, r1
   1f650:	ldr	r9, [sp, #72]	; 0x48
   1f654:	bge	1f7dc <flatcc_json_printer_table_field@@Base+0x1a8>
   1f658:	mov	r6, r3
   1f65c:	ldr	r3, [r8, #4]
   1f660:	ldrh	sl, [r3, r2]
   1f664:	cmp	sl, #0
   1f668:	beq	1f7dc <flatcc_json_printer_table_field@@Base+0x1a8>
   1f66c:	ldr	r3, [r8]
   1f670:	adds	fp, r3, sl
   1f674:	str	r3, [sp, #4]
   1f678:	beq	1f7dc <flatcc_json_printer_table_field@@Base+0x1a8>
   1f67c:	ldr	r3, [r8, #16]
   1f680:	mov	r4, r0
   1f684:	cmp	r3, #0
   1f688:	add	r3, r3, #1
   1f68c:	str	r3, [r8, #16]
   1f690:	ldrne	r3, [r0, #20]
   1f694:	movne	r2, #44	; 0x2c
   1f698:	addne	r1, r3, #1
   1f69c:	strne	r1, [r0, #20]
   1f6a0:	strbne	r2, [r3]
   1f6a4:	ldrb	r1, [r0, #25]
   1f6a8:	mov	r7, r9
   1f6ac:	ldr	r3, [r0, #20]
   1f6b0:	cmp	r1, #0
   1f6b4:	bne	1f8cc <flatcc_json_printer_table_field@@Base+0x298>
   1f6b8:	ldr	r2, [r0, #16]
   1f6bc:	cmp	r3, r2
   1f6c0:	bcc	1f6d0 <flatcc_json_printer_table_field@@Base+0x9c>
   1f6c4:	ldr	r3, [r0, #44]	; 0x2c
   1f6c8:	blx	r3
   1f6cc:	ldr	r3, [r4, #20]
   1f6d0:	mov	r2, #34	; 0x22
   1f6d4:	strb	r2, [r3]
   1f6d8:	ldrb	r3, [r4, #26]
   1f6dc:	ldr	r0, [r4, #20]
   1f6e0:	ldr	r5, [r4, #16]
   1f6e4:	cmp	r3, #0
   1f6e8:	addeq	r0, r0, #1
   1f6ec:	add	r3, r0, r9
   1f6f0:	cmp	r5, r3
   1f6f4:	str	r0, [r4, #20]
   1f6f8:	bhi	1f7e4 <flatcc_json_printer_table_field@@Base+0x1b0>
   1f6fc:	cmp	r0, r5
   1f700:	bcs	1f8b0 <flatcc_json_printer_table_field@@Base+0x27c>
   1f704:	sub	r5, r5, r0
   1f708:	cmp	r9, r5
   1f70c:	bls	1f758 <flatcc_json_printer_table_field@@Base+0x124>
   1f710:	mov	r9, #0
   1f714:	mov	r2, r5
   1f718:	mov	r1, r6
   1f71c:	bl	1244c <memcpy@plt>
   1f720:	ldr	r2, [r4, #20]
   1f724:	ldr	r3, [r4, #44]	; 0x2c
   1f728:	add	r2, r2, r5
   1f72c:	mov	r0, r4
   1f730:	str	r2, [r4, #20]
   1f734:	mov	r1, r9
   1f738:	blx	r3
   1f73c:	ldr	r0, [r4, #20]
   1f740:	ldr	r3, [r4, #16]
   1f744:	sub	r7, r7, r5
   1f748:	add	r6, r6, r5
   1f74c:	sub	r5, r3, r0
   1f750:	cmp	r7, r5
   1f754:	bhi	1f714 <flatcc_json_printer_table_field@@Base+0xe0>
   1f758:	mov	r1, r6
   1f75c:	mov	r2, r7
   1f760:	bl	1244c <memcpy@plt>
   1f764:	ldr	r9, [r4, #20]
   1f768:	add	r9, r9, r7
   1f76c:	str	r9, [r4, #20]
   1f770:	mov	r3, #34	; 0x22
   1f774:	strb	r3, [r9]
   1f778:	ldr	r1, [r4, #20]
   1f77c:	ldrb	r3, [r4, #26]
   1f780:	clz	r3, r3
   1f784:	lsr	r3, r3, #5
   1f788:	add	r2, r1, r3
   1f78c:	add	r2, r2, #1
   1f790:	mov	r0, #58	; 0x3a
   1f794:	str	r2, [r4, #20]
   1f798:	strb	r0, [r1, r3]
   1f79c:	ldr	r3, [r4, #20]
   1f7a0:	mov	r2, #32
   1f7a4:	strb	r2, [r3]
   1f7a8:	ldrb	r2, [r4, #25]
   1f7ac:	ldr	r3, [r8, #12]
   1f7b0:	ldr	r0, [r4, #20]
   1f7b4:	adds	r2, r2, #0
   1f7b8:	movne	r2, #1
   1f7bc:	add	r1, r0, r2
   1f7c0:	subs	r3, r3, #1
   1f7c4:	str	r1, [r4, #20]
   1f7c8:	bne	1f800 <flatcc_json_printer_table_field@@Base+0x1cc>
   1f7cc:	ldr	r3, [r4, #36]	; 0x24
   1f7d0:	cmp	r3, #0
   1f7d4:	moveq	r3, #2
   1f7d8:	streq	r3, [r4, #36]	; 0x24
   1f7dc:	add	sp, sp, #36	; 0x24
   1f7e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f7e4:	mov	r2, r9
   1f7e8:	mov	r1, r6
   1f7ec:	bl	1244c <memcpy@plt>
   1f7f0:	ldr	r7, [r4, #20]
   1f7f4:	add	r9, r7, r9
   1f7f8:	str	r9, [r4, #20]
   1f7fc:	b	1f770 <flatcc_json_printer_table_field@@Base+0x13c>
   1f800:	ldr	ip, [sp, #4]
   1f804:	add	r1, r1, #1
   1f808:	mov	r5, #123	; 0x7b
   1f80c:	ldr	lr, [ip, sl]
   1f810:	ldr	ip, [r4, #32]
   1f814:	str	r1, [r4, #20]
   1f818:	add	ip, ip, #1
   1f81c:	mov	r1, #0
   1f820:	str	ip, [r4, #32]
   1f824:	strb	r5, [r0, r2]
   1f828:	str	r1, [sp, #28]
   1f82c:	str	r3, [sp, #24]
   1f830:	ldr	r3, [fp, lr]
   1f834:	add	fp, fp, lr
   1f838:	sub	r3, fp, r3
   1f83c:	add	r1, sp, #12
   1f840:	ldrh	r2, [r3]
   1f844:	mov	r0, r4
   1f848:	str	r3, [sp, #16]
   1f84c:	ldr	r3, [sp, #76]	; 0x4c
   1f850:	str	r2, [sp, #20]
   1f854:	str	fp, [sp, #12]
   1f858:	blx	r3
   1f85c:	ldrb	r3, [r4, #25]
   1f860:	cmp	r3, #0
   1f864:	bne	1f884 <flatcc_json_printer_table_field@@Base+0x250>
   1f868:	ldr	r3, [r4, #20]
   1f86c:	mov	r2, #125	; 0x7d
   1f870:	add	r1, r3, #1
   1f874:	str	r1, [r4, #20]
   1f878:	strb	r2, [r3]
   1f87c:	add	sp, sp, #36	; 0x24
   1f880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f884:	ldr	r3, [r4, #20]
   1f888:	mov	r2, #10
   1f88c:	add	r1, r3, #1
   1f890:	str	r1, [r4, #20]
   1f894:	strb	r2, [r3]
   1f898:	ldr	r3, [r4, #32]
   1f89c:	mov	r0, r4
   1f8a0:	sub	r3, r3, #1
   1f8a4:	str	r3, [r4, #32]
   1f8a8:	bl	145ac <test_print@@Base+0xdd8>
   1f8ac:	b	1f868 <flatcc_json_printer_table_field@@Base+0x234>
   1f8b0:	mov	r0, r4
   1f8b4:	ldr	r3, [r4, #44]	; 0x2c
   1f8b8:	mov	r1, #0
   1f8bc:	blx	r3
   1f8c0:	ldr	r5, [r4, #16]
   1f8c4:	ldr	r0, [r4, #20]
   1f8c8:	b	1f704 <flatcc_json_printer_table_field@@Base+0xd0>
   1f8cc:	add	r1, r3, #1
   1f8d0:	mov	r2, #10
   1f8d4:	str	r1, [r0, #20]
   1f8d8:	strb	r2, [r3]
   1f8dc:	bl	145ac <test_print@@Base+0xdd8>
   1f8e0:	ldr	r3, [r4, #20]
   1f8e4:	b	1f6d0 <flatcc_json_printer_table_field@@Base+0x9c>

0001f8e8 <flatcc_json_printer_union_field@@Base>:
   1f8e8:	add	r2, r2, #1
   1f8ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8f0:	lsl	r2, r2, #1
   1f8f4:	ldr	lr, [r1, #8]
   1f8f8:	sub	sp, sp, #28
   1f8fc:	cmp	r2, lr
   1f900:	movge	ip, #0
   1f904:	bge	1f91c <flatcc_json_printer_union_field@@Base+0x34>
   1f908:	ldr	ip, [r1, #4]
   1f90c:	ldrh	ip, [ip, r2]
   1f910:	cmp	ip, #0
   1f914:	ldrne	r4, [r1]
   1f918:	addne	ip, r4, ip
   1f91c:	add	r2, r2, #2
   1f920:	cmp	r2, lr
   1f924:	bge	1fb68 <flatcc_json_printer_union_field@@Base+0x280>
   1f928:	ldr	lr, [r1, #4]
   1f92c:	ldrh	r2, [lr, r2]
   1f930:	cmp	r2, #0
   1f934:	beq	1fb68 <flatcc_json_printer_union_field@@Base+0x280>
   1f938:	ldr	fp, [r1]
   1f93c:	adds	r2, fp, r2
   1f940:	str	r2, [sp, #4]
   1f944:	moveq	r2, #1
   1f948:	movne	r2, #0
   1f94c:	cmp	ip, #0
   1f950:	orreq	r2, r2, #1
   1f954:	cmp	r2, #0
   1f958:	bne	1fb68 <flatcc_json_printer_union_field@@Base+0x280>
   1f95c:	ldr	r2, [r1, #16]
   1f960:	ldrb	sl, [ip]
   1f964:	cmp	r2, #0
   1f968:	add	r2, r2, #1
   1f96c:	str	r2, [r1, #16]
   1f970:	ldrne	r2, [r0, #20]
   1f974:	movne	ip, #44	; 0x2c
   1f978:	addne	lr, r2, #1
   1f97c:	strne	lr, [r0, #20]
   1f980:	mov	r7, r1
   1f984:	strbne	ip, [r2]
   1f988:	ldrb	r1, [r0, #25]
   1f98c:	mov	r8, r3
   1f990:	mov	r4, r0
   1f994:	cmp	r1, #0
   1f998:	ldr	r3, [r0, #20]
   1f99c:	bne	1fc0c <flatcc_json_printer_union_field@@Base+0x324>
   1f9a0:	ldr	r2, [r0, #16]
   1f9a4:	cmp	r3, r2
   1f9a8:	bcs	1fc28 <flatcc_json_printer_union_field@@Base+0x340>
   1f9ac:	mov	r2, #34	; 0x22
   1f9b0:	strb	r2, [r3]
   1f9b4:	ldrb	r3, [r4, #26]
   1f9b8:	ldr	r0, [r4, #20]
   1f9bc:	ldr	r5, [r4, #16]
   1f9c0:	cmp	r3, #0
   1f9c4:	addeq	r0, r0, #1
   1f9c8:	ldr	r3, [sp, #64]	; 0x40
   1f9cc:	str	r0, [r4, #20]
   1f9d0:	add	r3, r0, r3
   1f9d4:	cmp	r5, r3
   1f9d8:	bhi	1fa60 <flatcc_json_printer_union_field@@Base+0x178>
   1f9dc:	cmp	r0, r5
   1f9e0:	bcs	1fc54 <flatcc_json_printer_union_field@@Base+0x36c>
   1f9e4:	ldr	r3, [sp, #64]	; 0x40
   1f9e8:	sub	r5, r5, r0
   1f9ec:	cmp	r3, r5
   1f9f0:	mov	r6, r3
   1f9f4:	mov	fp, r8
   1f9f8:	bls	1fa44 <flatcc_json_printer_union_field@@Base+0x15c>
   1f9fc:	mov	r9, #0
   1fa00:	mov	r2, r5
   1fa04:	mov	r1, fp
   1fa08:	bl	1244c <memcpy@plt>
   1fa0c:	ldr	r1, [r4, #20]
   1fa10:	ldr	r2, [r4, #44]	; 0x2c
   1fa14:	add	r1, r1, r5
   1fa18:	str	r1, [r4, #20]
   1fa1c:	mov	r0, r4
   1fa20:	mov	r1, r9
   1fa24:	blx	r2
   1fa28:	ldr	r0, [r4, #20]
   1fa2c:	ldr	r2, [r4, #16]
   1fa30:	sub	r6, r6, r5
   1fa34:	add	fp, fp, r5
   1fa38:	sub	r5, r2, r0
   1fa3c:	cmp	r6, r5
   1fa40:	bhi	1fa00 <flatcc_json_printer_union_field@@Base+0x118>
   1fa44:	mov	r2, r6
   1fa48:	mov	r1, fp
   1fa4c:	bl	1244c <memcpy@plt>
   1fa50:	ldr	r2, [r4, #20]
   1fa54:	add	r2, r2, r6
   1fa58:	str	r2, [r4, #20]
   1fa5c:	b	1fa7c <flatcc_json_printer_union_field@@Base+0x194>
   1fa60:	ldr	r2, [sp, #64]	; 0x40
   1fa64:	mov	r1, r8
   1fa68:	bl	1244c <memcpy@plt>
   1fa6c:	ldr	r2, [r4, #20]
   1fa70:	ldr	r3, [sp, #64]	; 0x40
   1fa74:	add	r2, r2, r3
   1fa78:	str	r2, [r4, #20]
   1fa7c:	ldr	r5, [r4, #16]
   1fa80:	add	r3, r2, #5
   1fa84:	cmp	r5, r3
   1fa88:	bls	1fb84 <flatcc_json_printer_union_field@@Base+0x29c>
   1fa8c:	ldr	r3, [pc, #476]	; 1fc70 <flatcc_json_printer_union_field@@Base+0x388>
   1fa90:	ldrb	r1, [r3, #4]
   1fa94:	ldr	r0, [r3]
   1fa98:	strb	r1, [r2, #4]
   1fa9c:	str	r0, [r2]
   1faa0:	ldr	r6, [r4, #20]
   1faa4:	add	r6, r6, #5
   1faa8:	str	r6, [r4, #20]
   1faac:	mov	r3, #34	; 0x22
   1fab0:	strb	r3, [r6]
   1fab4:	ldr	r1, [r4, #20]
   1fab8:	ldrb	r3, [r4, #26]
   1fabc:	clz	r3, r3
   1fac0:	lsr	r3, r3, #5
   1fac4:	add	r2, r1, r3
   1fac8:	add	r2, r2, #1
   1facc:	mov	r0, #58	; 0x3a
   1fad0:	str	r2, [r4, #20]
   1fad4:	strb	r0, [r1, r3]
   1fad8:	ldr	r3, [r4, #20]
   1fadc:	mov	r2, #32
   1fae0:	strb	r2, [r3]
   1fae4:	ldrb	r2, [r4, #25]
   1fae8:	ldrb	r3, [r4, #27]
   1faec:	ldr	r1, [r4, #20]
   1faf0:	cmp	r2, #0
   1faf4:	addne	r1, r1, #1
   1faf8:	cmp	r3, #0
   1fafc:	str	r1, [r4, #20]
   1fb00:	beq	1fb70 <flatcc_json_printer_union_field@@Base+0x288>
   1fb04:	mov	r0, sl
   1fb08:	bl	147ac <test_print@@Base+0xfd8>
   1fb0c:	ldr	r3, [r4, #20]
   1fb10:	add	r0, r3, r0
   1fb14:	str	r0, [r4, #20]
   1fb18:	cmp	sl, #0
   1fb1c:	beq	1fb68 <flatcc_json_printer_union_field@@Base+0x280>
   1fb20:	ldr	r3, [r4, #20]
   1fb24:	mov	r2, #44	; 0x2c
   1fb28:	add	r0, r3, #1
   1fb2c:	str	r0, [r4, #20]
   1fb30:	mov	r1, r8
   1fb34:	strb	r2, [r3]
   1fb38:	mov	r0, r4
   1fb3c:	ldr	r2, [sp, #64]	; 0x40
   1fb40:	bl	14b4c <test_print@@Base+0x1378>
   1fb44:	ldr	r3, [r7, #12]
   1fb48:	add	r1, sp, #24
   1fb4c:	ldr	r2, [sp, #4]
   1fb50:	str	r3, [sp, #16]
   1fb54:	mov	r0, r4
   1fb58:	str	r2, [r1, #-12]!
   1fb5c:	ldr	r3, [sp, #72]	; 0x48
   1fb60:	strb	sl, [sp, #20]
   1fb64:	blx	r3
   1fb68:	add	sp, sp, #28
   1fb6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb70:	mov	r1, sl
   1fb74:	mov	r0, r4
   1fb78:	ldr	r3, [sp, #68]	; 0x44
   1fb7c:	blx	r3
   1fb80:	b	1fb18 <flatcc_json_printer_union_field@@Base+0x230>
   1fb84:	cmp	r5, r2
   1fb88:	bls	1fc38 <flatcc_json_printer_union_field@@Base+0x350>
   1fb8c:	sub	r5, r5, r2
   1fb90:	cmp	r5, #4
   1fb94:	ldr	fp, [pc, #212]	; 1fc70 <flatcc_json_printer_union_field@@Base+0x388>
   1fb98:	mov	r6, #5
   1fb9c:	bhi	1fbec <flatcc_json_printer_union_field@@Base+0x304>
   1fba0:	mov	r9, #0
   1fba4:	mov	r1, fp
   1fba8:	mov	r0, r2
   1fbac:	mov	r2, r5
   1fbb0:	bl	1244c <memcpy@plt>
   1fbb4:	ldr	r1, [r4, #20]
   1fbb8:	ldr	r2, [r4, #44]	; 0x2c
   1fbbc:	add	r1, r1, r5
   1fbc0:	str	r1, [r4, #20]
   1fbc4:	mov	r0, r4
   1fbc8:	mov	r1, r9
   1fbcc:	blx	r2
   1fbd0:	ldr	r2, [r4, #20]
   1fbd4:	ldr	r1, [r4, #16]
   1fbd8:	sub	r6, r6, r5
   1fbdc:	add	fp, fp, r5
   1fbe0:	sub	r5, r1, r2
   1fbe4:	cmp	r6, r5
   1fbe8:	bhi	1fba4 <flatcc_json_printer_union_field@@Base+0x2bc>
   1fbec:	mov	r0, r2
   1fbf0:	mov	r1, fp
   1fbf4:	mov	r2, r6
   1fbf8:	bl	1244c <memcpy@plt>
   1fbfc:	ldr	r3, [r4, #20]
   1fc00:	add	r6, r3, r6
   1fc04:	str	r6, [r4, #20]
   1fc08:	b	1faac <flatcc_json_printer_union_field@@Base+0x1c4>
   1fc0c:	add	r1, r3, #1
   1fc10:	mov	r2, #10
   1fc14:	str	r1, [r0, #20]
   1fc18:	strb	r2, [r3]
   1fc1c:	bl	145ac <test_print@@Base+0xdd8>
   1fc20:	ldr	r3, [r4, #20]
   1fc24:	b	1f9ac <flatcc_json_printer_union_field@@Base+0xc4>
   1fc28:	ldr	r3, [r0, #44]	; 0x2c
   1fc2c:	blx	r3
   1fc30:	ldr	r3, [r4, #20]
   1fc34:	b	1f9ac <flatcc_json_printer_union_field@@Base+0xc4>
   1fc38:	ldr	r3, [r4, #44]	; 0x2c
   1fc3c:	mov	r1, #0
   1fc40:	mov	r0, r4
   1fc44:	blx	r3
   1fc48:	ldr	r5, [r4, #16]
   1fc4c:	ldr	r2, [r4, #20]
   1fc50:	b	1fb8c <flatcc_json_printer_union_field@@Base+0x2a4>
   1fc54:	mov	r0, r4
   1fc58:	ldr	r3, [r4, #44]	; 0x2c
   1fc5c:	mov	r1, #0
   1fc60:	blx	r3
   1fc64:	ldr	r5, [r4, #16]
   1fc68:	ldr	r0, [r4, #20]
   1fc6c:	b	1f9e4 <flatcc_json_printer_union_field@@Base+0xfc>
   1fc70:	andeq	r2, r2, r0

0001fc74 <flatcc_json_printer_union_table@@Base>:
   1fc74:	ldr	r3, [r1, #4]
   1fc78:	push	{r4, r5, r6, r7, lr}
   1fc7c:	subs	r3, r3, #1
   1fc80:	sub	sp, sp, #28
   1fc84:	mov	r4, r0
   1fc88:	bne	1fca4 <flatcc_json_printer_union_table@@Base+0x30>
   1fc8c:	ldr	r3, [r0, #36]	; 0x24
   1fc90:	cmp	r3, #0
   1fc94:	moveq	r3, #2
   1fc98:	streq	r3, [r0, #36]	; 0x24
   1fc9c:	add	sp, sp, #28
   1fca0:	pop	{r4, r5, r6, r7, pc}
   1fca4:	ldr	r1, [r1]
   1fca8:	ldr	ip, [r0, #32]
   1fcac:	ldr	r5, [r0, #20]
   1fcb0:	ldr	lr, [r1]
   1fcb4:	add	ip, ip, #1
   1fcb8:	str	ip, [r0, #32]
   1fcbc:	add	r7, r5, #1
   1fcc0:	mov	ip, #0
   1fcc4:	mov	r6, #123	; 0x7b
   1fcc8:	str	r7, [r0, #20]
   1fccc:	strb	r6, [r5]
   1fcd0:	str	r3, [sp, #16]
   1fcd4:	str	ip, [sp, #20]
   1fcd8:	ldr	ip, [r1, lr]
   1fcdc:	add	r3, r1, lr
   1fce0:	sub	ip, r3, ip
   1fce4:	add	r1, sp, #4
   1fce8:	ldrh	lr, [ip]
   1fcec:	stmib	sp, {r3, ip, lr}
   1fcf0:	blx	r2
   1fcf4:	ldrb	r3, [r4, #25]
   1fcf8:	cmp	r3, #0
   1fcfc:	bne	1fd1c <flatcc_json_printer_union_table@@Base+0xa8>
   1fd00:	ldr	r3, [r4, #20]
   1fd04:	mov	r2, #125	; 0x7d
   1fd08:	add	r1, r3, #1
   1fd0c:	str	r1, [r4, #20]
   1fd10:	strb	r2, [r3]
   1fd14:	add	sp, sp, #28
   1fd18:	pop	{r4, r5, r6, r7, pc}
   1fd1c:	ldr	r3, [r4, #20]
   1fd20:	mov	r2, #10
   1fd24:	add	r1, r3, #1
   1fd28:	str	r1, [r4, #20]
   1fd2c:	strb	r2, [r3]
   1fd30:	ldr	r3, [r4, #32]
   1fd34:	mov	r0, r4
   1fd38:	sub	r3, r3, #1
   1fd3c:	str	r3, [r4, #32]
   1fd40:	bl	145ac <test_print@@Base+0xdd8>
   1fd44:	b	1fd00 <flatcc_json_printer_union_table@@Base+0x8c>

0001fd48 <flatcc_json_printer_union_struct@@Base>:
   1fd48:	ldr	r3, [r0, #32]
   1fd4c:	ldr	ip, [r0, #20]
   1fd50:	push	{r4, r5, r6, r7, r8, lr}
   1fd54:	add	r3, r3, #1
   1fd58:	mov	lr, #123	; 0x7b
   1fd5c:	add	r5, ip, #1
   1fd60:	str	r3, [r0, #32]
   1fd64:	str	r5, [r0, #20]
   1fd68:	strb	lr, [ip]
   1fd6c:	ldr	r3, [r1]
   1fd70:	mov	r4, r0
   1fd74:	ldr	r1, [r3]
   1fd78:	add	r1, r3, r1
   1fd7c:	blx	r2
   1fd80:	ldrb	r3, [r4, #25]
   1fd84:	cmp	r3, #0
   1fd88:	bne	1fda4 <flatcc_json_printer_union_struct@@Base+0x5c>
   1fd8c:	ldr	r5, [r4, #20]
   1fd90:	add	r2, r5, #1
   1fd94:	mov	r3, #125	; 0x7d
   1fd98:	str	r2, [r4, #20]
   1fd9c:	strb	r3, [r5]
   1fda0:	pop	{r4, r5, r6, r7, r8, pc}
   1fda4:	ldr	r3, [r4, #20]
   1fda8:	mov	r2, #10
   1fdac:	add	r1, r3, #1
   1fdb0:	str	r1, [r4, #20]
   1fdb4:	strb	r2, [r3]
   1fdb8:	ldr	r3, [r4, #32]
   1fdbc:	ldrb	r5, [r4, #25]
   1fdc0:	sub	r3, r3, #1
   1fdc4:	ldr	r0, [r4, #20]
   1fdc8:	ldr	r6, [r4, #16]
   1fdcc:	mul	r5, r3, r5
   1fdd0:	str	r3, [r4, #32]
   1fdd4:	add	r3, r0, r5
   1fdd8:	cmp	r6, r3
   1fddc:	bcc	1fdf8 <flatcc_json_printer_union_struct@@Base+0xb0>
   1fde0:	mov	r2, r5
   1fde4:	mov	r1, #32
   1fde8:	bl	124e8 <memset@plt>
   1fdec:	ldr	r3, [r4, #20]
   1fdf0:	add	r5, r3, r5
   1fdf4:	b	1fd90 <flatcc_json_printer_union_struct@@Base+0x48>
   1fdf8:	cmp	r0, r6
   1fdfc:	bcs	1fe58 <flatcc_json_printer_union_struct@@Base+0x110>
   1fe00:	sub	r6, r6, r0
   1fe04:	cmp	r5, r6
   1fe08:	bls	1fde0 <flatcc_json_printer_union_struct@@Base+0x98>
   1fe0c:	mov	r8, #32
   1fe10:	mov	r7, #0
   1fe14:	mov	r2, r6
   1fe18:	mov	r1, r8
   1fe1c:	bl	124e8 <memset@plt>
   1fe20:	ldr	r3, [r4, #20]
   1fe24:	mov	r0, r4
   1fe28:	add	r3, r3, r6
   1fe2c:	str	r3, [r4, #20]
   1fe30:	ldr	r2, [r4, #44]	; 0x2c
   1fe34:	mov	r1, r7
   1fe38:	blx	r2
   1fe3c:	ldr	r0, [r4, #20]
   1fe40:	ldr	r3, [r4, #16]
   1fe44:	sub	r5, r5, r6
   1fe48:	sub	r6, r3, r0
   1fe4c:	cmp	r5, r6
   1fe50:	bhi	1fe14 <flatcc_json_printer_union_struct@@Base+0xcc>
   1fe54:	b	1fde0 <flatcc_json_printer_union_struct@@Base+0x98>
   1fe58:	mov	r0, r4
   1fe5c:	ldr	r3, [r4, #44]	; 0x2c
   1fe60:	mov	r1, #0
   1fe64:	blx	r3
   1fe68:	ldr	r6, [r4, #16]
   1fe6c:	ldr	r0, [r4, #20]
   1fe70:	b	1fe00 <flatcc_json_printer_union_struct@@Base+0xb8>

0001fe74 <flatcc_json_printer_union_string@@Base>:
   1fe74:	ldr	r3, [r1]
   1fe78:	ldr	r2, [r3]
   1fe7c:	add	r1, r3, r2
   1fe80:	add	r1, r1, #4
   1fe84:	ldr	r2, [r3, r2]
   1fe88:	b	14880 <test_print@@Base+0x10ac>

0001fe8c <flatcc_json_printer_embedded_struct_field@@Base>:
   1fe8c:	cmp	r1, #0
   1fe90:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe94:	mov	r9, r3
   1fe98:	ldrne	r3, [r0, #20]
   1fe9c:	add	r6, sp, #40	; 0x28
   1fea0:	addne	r1, r3, #1
   1fea4:	mov	sl, r2
   1fea8:	movne	r2, #44	; 0x2c
   1feac:	strne	r1, [r0, #20]
   1feb0:	ldm	r6, {r6, r7, r8}
   1feb4:	mov	r4, r0
   1feb8:	strbne	r2, [r3]
   1febc:	ldrb	r1, [r0, #25]
   1fec0:	mov	fp, r7
   1fec4:	ldr	r3, [r0, #20]
   1fec8:	cmp	r1, #0
   1fecc:	bne	20094 <flatcc_json_printer_embedded_struct_field@@Base+0x208>
   1fed0:	ldr	r2, [r0, #16]
   1fed4:	cmp	r3, r2
   1fed8:	bcs	20014 <flatcc_json_printer_embedded_struct_field@@Base+0x188>
   1fedc:	mov	r2, #34	; 0x22
   1fee0:	strb	r2, [r3]
   1fee4:	ldrb	r3, [r4, #26]
   1fee8:	ldr	r0, [r4, #20]
   1feec:	ldr	r5, [r4, #16]
   1fef0:	cmp	r3, #0
   1fef4:	addeq	r0, r0, #1
   1fef8:	add	r3, r0, r7
   1fefc:	cmp	r5, r3
   1ff00:	str	r0, [r4, #20]
   1ff04:	bhi	20024 <flatcc_json_printer_embedded_struct_field@@Base+0x198>
   1ff08:	cmp	r0, r5
   1ff0c:	bcs	200b0 <flatcc_json_printer_embedded_struct_field@@Base+0x224>
   1ff10:	sub	r5, r5, r0
   1ff14:	cmp	r7, r5
   1ff18:	bls	1ff64 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   1ff1c:	mov	r7, #0
   1ff20:	mov	r2, r5
   1ff24:	mov	r1, r6
   1ff28:	bl	1244c <memcpy@plt>
   1ff2c:	ldr	r3, [r4, #20]
   1ff30:	mov	r0, r4
   1ff34:	add	r3, r3, r5
   1ff38:	str	r3, [r4, #20]
   1ff3c:	ldr	r2, [r4, #44]	; 0x2c
   1ff40:	mov	r1, r7
   1ff44:	blx	r2
   1ff48:	ldr	r0, [r4, #20]
   1ff4c:	ldr	r3, [r4, #16]
   1ff50:	sub	fp, fp, r5
   1ff54:	add	r6, r6, r5
   1ff58:	sub	r5, r3, r0
   1ff5c:	cmp	fp, r5
   1ff60:	bhi	1ff20 <flatcc_json_printer_embedded_struct_field@@Base+0x94>
   1ff64:	mov	r1, r6
   1ff68:	mov	r2, fp
   1ff6c:	bl	1244c <memcpy@plt>
   1ff70:	ldr	r7, [r4, #20]
   1ff74:	add	r7, r7, fp
   1ff78:	str	r7, [r4, #20]
   1ff7c:	mov	r3, #34	; 0x22
   1ff80:	strb	r3, [r7]
   1ff84:	ldr	r1, [r4, #20]
   1ff88:	ldrb	r3, [r4, #26]
   1ff8c:	clz	r3, r3
   1ff90:	lsr	r3, r3, #5
   1ff94:	add	r2, r1, r3
   1ff98:	add	r2, r2, #1
   1ff9c:	mov	r0, #58	; 0x3a
   1ffa0:	str	r2, [r4, #20]
   1ffa4:	strb	r0, [r1, r3]
   1ffa8:	ldr	r3, [r4, #20]
   1ffac:	mov	r7, #32
   1ffb0:	add	r1, sl, r9
   1ffb4:	strb	r7, [r3]
   1ffb8:	ldrb	r3, [r4, #25]
   1ffbc:	ldr	ip, [r4, #20]
   1ffc0:	ldr	r2, [r4, #32]
   1ffc4:	adds	r3, r3, #0
   1ffc8:	movne	r3, #1
   1ffcc:	add	r0, ip, r3
   1ffd0:	add	r0, r0, #1
   1ffd4:	str	r0, [r4, #20]
   1ffd8:	add	r2, r2, #1
   1ffdc:	mov	r0, #123	; 0x7b
   1ffe0:	str	r2, [r4, #32]
   1ffe4:	strb	r0, [ip, r3]
   1ffe8:	mov	r0, r4
   1ffec:	blx	r8
   1fff0:	ldrb	r3, [r4, #25]
   1fff4:	cmp	r3, #0
   1fff8:	bne	20040 <flatcc_json_printer_embedded_struct_field@@Base+0x1b4>
   1fffc:	ldr	r5, [r4, #20]
   20000:	add	r2, r5, #1
   20004:	mov	r3, #125	; 0x7d
   20008:	str	r2, [r4, #20]
   2000c:	strb	r3, [r5]
   20010:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20014:	ldr	r3, [r0, #44]	; 0x2c
   20018:	blx	r3
   2001c:	ldr	r3, [r4, #20]
   20020:	b	1fedc <flatcc_json_printer_embedded_struct_field@@Base+0x50>
   20024:	mov	r2, r7
   20028:	mov	r1, r6
   2002c:	bl	1244c <memcpy@plt>
   20030:	ldr	fp, [r4, #20]
   20034:	add	r7, fp, r7
   20038:	str	r7, [r4, #20]
   2003c:	b	1ff7c <flatcc_json_printer_embedded_struct_field@@Base+0xf0>
   20040:	ldr	r3, [r4, #20]
   20044:	mov	r2, #10
   20048:	add	r1, r3, #1
   2004c:	str	r1, [r4, #20]
   20050:	strb	r2, [r3]
   20054:	ldr	r3, [r4, #32]
   20058:	ldrb	r5, [r4, #25]
   2005c:	sub	r3, r3, #1
   20060:	ldr	r0, [r4, #20]
   20064:	ldr	r6, [r4, #16]
   20068:	mul	r5, r3, r5
   2006c:	str	r3, [r4, #32]
   20070:	add	r3, r0, r5
   20074:	cmp	r6, r3
   20078:	bcc	200cc <flatcc_json_printer_embedded_struct_field@@Base+0x240>
   2007c:	mov	r2, r5
   20080:	mov	r1, r7
   20084:	bl	124e8 <memset@plt>
   20088:	ldr	r3, [r4, #20]
   2008c:	add	r5, r3, r5
   20090:	b	20000 <flatcc_json_printer_embedded_struct_field@@Base+0x174>
   20094:	add	r1, r3, #1
   20098:	mov	r2, #10
   2009c:	str	r1, [r0, #20]
   200a0:	strb	r2, [r3]
   200a4:	bl	145ac <test_print@@Base+0xdd8>
   200a8:	ldr	r3, [r4, #20]
   200ac:	b	1fedc <flatcc_json_printer_embedded_struct_field@@Base+0x50>
   200b0:	mov	r0, r4
   200b4:	ldr	r3, [r4, #44]	; 0x2c
   200b8:	mov	r1, #0
   200bc:	blx	r3
   200c0:	ldr	r5, [r4, #16]
   200c4:	ldr	r0, [r4, #20]
   200c8:	b	1ff10 <flatcc_json_printer_embedded_struct_field@@Base+0x84>
   200cc:	cmp	r0, r6
   200d0:	bcs	20140 <flatcc_json_printer_embedded_struct_field@@Base+0x2b4>
   200d4:	sub	r6, r6, r0
   200d8:	cmp	r5, r6
   200dc:	bls	20128 <flatcc_json_printer_embedded_struct_field@@Base+0x29c>
   200e0:	mov	r8, #32
   200e4:	mov	r7, #0
   200e8:	mov	r2, r6
   200ec:	mov	r1, r8
   200f0:	bl	124e8 <memset@plt>
   200f4:	ldr	r3, [r4, #20]
   200f8:	mov	r0, r4
   200fc:	add	r3, r3, r6
   20100:	str	r3, [r4, #20]
   20104:	ldr	r2, [r4, #44]	; 0x2c
   20108:	mov	r1, r7
   2010c:	blx	r2
   20110:	ldr	r0, [r4, #20]
   20114:	ldr	r3, [r4, #16]
   20118:	sub	r5, r5, r6
   2011c:	sub	r6, r3, r0
   20120:	cmp	r5, r6
   20124:	bhi	200e8 <flatcc_json_printer_embedded_struct_field@@Base+0x25c>
   20128:	mov	r2, r5
   2012c:	mov	r1, #32
   20130:	bl	124e8 <memset@plt>
   20134:	ldr	r3, [r4, #20]
   20138:	add	r5, r3, r5
   2013c:	b	20000 <flatcc_json_printer_embedded_struct_field@@Base+0x174>
   20140:	mov	r0, r4
   20144:	ldr	r3, [r4, #44]	; 0x2c
   20148:	mov	r1, #0
   2014c:	blx	r3
   20150:	ldr	r6, [r4, #16]
   20154:	ldr	r0, [r4, #20]
   20158:	b	200d4 <flatcc_json_printer_embedded_struct_field@@Base+0x248>

0002015c <flatcc_json_printer_struct_field@@Base>:
   2015c:	add	r2, r2, #2
   20160:	ldr	ip, [r1, #8]
   20164:	lsl	r2, r2, #1
   20168:	cmp	r2, ip
   2016c:	bxge	lr
   20170:	ldr	ip, [r1, #4]
   20174:	ldrh	r2, [ip, r2]
   20178:	cmp	r2, #0
   2017c:	bxeq	lr
   20180:	push	{r4, r5, r6, lr}
   20184:	ldr	r5, [r1]
   20188:	adds	r5, r5, r2
   2018c:	popeq	{r4, r5, r6, pc}
   20190:	ldr	r2, [r1, #16]
   20194:	mov	r4, r0
   20198:	cmp	r2, #0
   2019c:	add	r2, r2, #1
   201a0:	str	r2, [r1, #16]
   201a4:	ldrne	r2, [r0, #20]
   201a8:	movne	r1, #44	; 0x2c
   201ac:	addne	ip, r2, #1
   201b0:	strne	ip, [r0, #20]
   201b4:	strbne	r1, [r2]
   201b8:	mov	r1, r3
   201bc:	ldr	r2, [sp, #16]
   201c0:	bl	14b4c <test_print@@Base+0x1378>
   201c4:	ldr	r3, [r4, #32]
   201c8:	ldr	r2, [r4, #20]
   201cc:	add	r3, r3, #1
   201d0:	add	r0, r2, #1
   201d4:	mov	ip, #123	; 0x7b
   201d8:	str	r3, [r4, #32]
   201dc:	str	r0, [r4, #20]
   201e0:	ldr	r3, [sp, #20]
   201e4:	mov	r1, r5
   201e8:	mov	r0, r4
   201ec:	strb	ip, [r2]
   201f0:	blx	r3
   201f4:	ldrb	r3, [r4, #25]
   201f8:	cmp	r3, #0
   201fc:	bne	20218 <flatcc_json_printer_struct_field@@Base+0xbc>
   20200:	ldr	r3, [r4, #20]
   20204:	mov	r2, #125	; 0x7d
   20208:	add	r1, r3, #1
   2020c:	str	r1, [r4, #20]
   20210:	strb	r2, [r3]
   20214:	pop	{r4, r5, r6, pc}
   20218:	ldr	r3, [r4, #20]
   2021c:	mov	r2, #10
   20220:	add	r1, r3, #1
   20224:	str	r1, [r4, #20]
   20228:	strb	r2, [r3]
   2022c:	ldr	r3, [r4, #32]
   20230:	mov	r0, r4
   20234:	sub	r3, r3, #1
   20238:	str	r3, [r4, #32]
   2023c:	bl	145ac <test_print@@Base+0xdd8>
   20240:	b	20200 <flatcc_json_printer_struct_field@@Base+0xa4>

00020244 <flatcc_json_printer_struct_as_root@@Base>:
   20244:	push	{r4, r5, lr}
   20248:	sub	sp, sp, #12
   2024c:	cmp	r1, #0
   20250:	cmpne	r2, #7
   20254:	mov	r2, #0
   20258:	mov	r4, r0
   2025c:	str	r2, [sp, #4]
   20260:	bls	20374 <flatcc_json_printer_struct_as_root@@Base+0x130>
   20264:	cmp	r3, #0
   20268:	mov	r5, r1
   2026c:	beq	20294 <flatcc_json_printer_struct_as_root@@Base+0x50>
   20270:	mov	r2, #4
   20274:	mov	r1, r3
   20278:	add	r0, sp, r2
   2027c:	bl	124f4 <strncpy@plt>
   20280:	ldr	r3, [sp, #4]
   20284:	ldr	r2, [r5, #4]
   20288:	cmp	r2, r3
   2028c:	cmpne	r3, #0
   20290:	bne	20398 <flatcc_json_printer_struct_as_root@@Base+0x154>
   20294:	ldr	r3, [r4, #32]
   20298:	ldr	r2, [r4, #20]
   2029c:	add	r3, r3, #1
   202a0:	add	r0, r2, #1
   202a4:	mov	r1, #123	; 0x7b
   202a8:	str	r3, [r4, #32]
   202ac:	str	r0, [r4, #20]
   202b0:	strb	r1, [r2]
   202b4:	ldr	r1, [r5]
   202b8:	ldr	r3, [sp, #24]
   202bc:	mov	r0, r4
   202c0:	add	r1, r5, r1
   202c4:	blx	r3
   202c8:	ldrb	r3, [r4, #25]
   202cc:	cmp	r3, #0
   202d0:	bne	20348 <flatcc_json_printer_struct_as_root@@Base+0x104>
   202d4:	ldr	r3, [r4, #20]
   202d8:	mov	r2, #125	; 0x7d
   202dc:	add	r1, r3, #1
   202e0:	str	r1, [r4, #20]
   202e4:	strb	r2, [r3]
   202e8:	ldrb	r3, [r4, #25]
   202ec:	cmp	r3, #0
   202f0:	beq	20310 <flatcc_json_printer_struct_as_root@@Base+0xcc>
   202f4:	ldr	r3, [r4, #32]
   202f8:	cmp	r3, #0
   202fc:	moveq	r2, #10
   20300:	ldreq	r3, [r4, #20]
   20304:	addeq	r1, r3, #1
   20308:	streq	r1, [r4, #20]
   2030c:	strbeq	r2, [r3]
   20310:	mov	r0, r4
   20314:	ldr	r3, [r4, #44]	; 0x2c
   20318:	mov	r1, #1
   2031c:	blx	r3
   20320:	ldr	r3, [r4, #36]	; 0x24
   20324:	cmp	r3, #0
   20328:	mvnne	r0, #0
   2032c:	ldreq	r0, [r4, #20]
   20330:	ldreq	r2, [r4]
   20334:	ldreq	r3, [r4, #12]
   20338:	subeq	r0, r0, r2
   2033c:	addeq	r0, r0, r3
   20340:	add	sp, sp, #12
   20344:	pop	{r4, r5, pc}
   20348:	ldr	r3, [r4, #20]
   2034c:	mov	r2, #10
   20350:	add	r1, r3, #1
   20354:	str	r1, [r4, #20]
   20358:	strb	r2, [r3]
   2035c:	ldr	r3, [r4, #32]
   20360:	mov	r0, r4
   20364:	sub	r3, r3, #1
   20368:	str	r3, [r4, #32]
   2036c:	bl	145ac <test_print@@Base+0xdd8>
   20370:	b	202d4 <flatcc_json_printer_struct_as_root@@Base+0x90>
   20374:	ldr	r3, [r0, #36]	; 0x24
   20378:	ldr	r1, [pc, #32]	; 203a0 <flatcc_json_printer_struct_as_root@@Base+0x15c>
   2037c:	cmp	r3, r2
   20380:	moveq	r3, #1
   20384:	streq	r3, [r0, #36]	; 0x24
   20388:	ldr	r2, [pc, #20]	; 203a4 <flatcc_json_printer_struct_as_root@@Base+0x160>
   2038c:	ldr	r3, [pc, #20]	; 203a8 <flatcc_json_printer_struct_as_root@@Base+0x164>
   20390:	ldr	r0, [pc, #20]	; 203ac <flatcc_json_printer_struct_as_root@@Base+0x168>
   20394:	bl	12530 <__assert_fail@plt>
   20398:	mov	r0, r4
   2039c:	bl	12564 <__assert_fail@plt+0x34>
   203a0:	andeq	r1, r2, r8, lsr lr
   203a4:	strdeq	r0, [r0], -fp
   203a8:	andeq	r1, r2, r0, ror #14
   203ac:	andeq	r2, r2, r8

000203b0 <flatcc_json_printer_table_as_root@@Base>:
   203b0:	push	{r4, r5, r6, lr}
   203b4:	sub	sp, sp, #24
   203b8:	cmp	r1, #0
   203bc:	cmpne	r2, #7
   203c0:	mov	r2, #0
   203c4:	mov	r4, r0
   203c8:	str	r2, [sp, #4]
   203cc:	bls	20510 <flatcc_json_printer_table_as_root@@Base+0x160>
   203d0:	cmp	r3, #0
   203d4:	mov	r5, r1
   203d8:	add	r6, sp, #4
   203dc:	beq	20404 <flatcc_json_printer_table_as_root@@Base+0x54>
   203e0:	mov	r1, r3
   203e4:	mov	r2, #4
   203e8:	mov	r0, r6
   203ec:	bl	124f4 <strncpy@plt>
   203f0:	ldr	r3, [sp, #4]
   203f4:	ldr	r2, [r5, #4]
   203f8:	cmp	r2, r3
   203fc:	cmpne	r3, #0
   20400:	bne	20534 <flatcc_json_printer_table_as_root@@Base+0x184>
   20404:	ldr	r2, [r5]
   20408:	ldr	r1, [r4, #20]
   2040c:	ldr	r3, [r4, #32]
   20410:	add	ip, r1, #1
   20414:	add	r3, r3, #1
   20418:	mov	r0, #123	; 0x7b
   2041c:	str	r3, [r4, #32]
   20420:	str	ip, [r4, #20]
   20424:	strb	r0, [r1]
   20428:	ldr	r3, [r5, r2]
   2042c:	add	r5, r5, r2
   20430:	sub	r3, r5, r3
   20434:	mov	ip, #0
   20438:	ldrh	lr, [r3]
   2043c:	mov	r2, #99	; 0x63
   20440:	str	r3, [sp, #8]
   20444:	mov	r1, r6
   20448:	ldr	r3, [sp, #40]	; 0x28
   2044c:	mov	r0, r4
   20450:	str	lr, [sp, #12]
   20454:	str	r5, [sp, #4]
   20458:	str	ip, [sp, #20]
   2045c:	str	r2, [sp, #16]
   20460:	blx	r3
   20464:	ldrb	r3, [r4, #25]
   20468:	cmp	r3, #0
   2046c:	bne	204e4 <flatcc_json_printer_table_as_root@@Base+0x134>
   20470:	ldr	r3, [r4, #20]
   20474:	mov	r2, #125	; 0x7d
   20478:	add	r1, r3, #1
   2047c:	str	r1, [r4, #20]
   20480:	strb	r2, [r3]
   20484:	ldrb	r3, [r4, #25]
   20488:	cmp	r3, #0
   2048c:	beq	204ac <flatcc_json_printer_table_as_root@@Base+0xfc>
   20490:	ldr	r3, [r4, #32]
   20494:	cmp	r3, #0
   20498:	moveq	r2, #10
   2049c:	ldreq	r3, [r4, #20]
   204a0:	addeq	r1, r3, #1
   204a4:	streq	r1, [r4, #20]
   204a8:	strbeq	r2, [r3]
   204ac:	mov	r0, r4
   204b0:	ldr	r3, [r4, #44]	; 0x2c
   204b4:	mov	r1, #1
   204b8:	blx	r3
   204bc:	ldr	r3, [r4, #36]	; 0x24
   204c0:	cmp	r3, #0
   204c4:	mvnne	r0, #0
   204c8:	ldreq	r0, [r4, #20]
   204cc:	ldreq	r2, [r4]
   204d0:	ldreq	r3, [r4, #12]
   204d4:	subeq	r0, r0, r2
   204d8:	addeq	r0, r0, r3
   204dc:	add	sp, sp, #24
   204e0:	pop	{r4, r5, r6, pc}
   204e4:	ldr	r3, [r4, #20]
   204e8:	mov	r2, #10
   204ec:	add	r1, r3, #1
   204f0:	str	r1, [r4, #20]
   204f4:	strb	r2, [r3]
   204f8:	ldr	r3, [r4, #32]
   204fc:	mov	r0, r4
   20500:	sub	r3, r3, #1
   20504:	str	r3, [r4, #32]
   20508:	bl	145ac <test_print@@Base+0xdd8>
   2050c:	b	20470 <flatcc_json_printer_table_as_root@@Base+0xc0>
   20510:	ldr	r3, [r0, #36]	; 0x24
   20514:	ldr	r1, [pc, #32]	; 2053c <flatcc_json_printer_table_as_root@@Base+0x18c>
   20518:	cmp	r3, r2
   2051c:	moveq	r3, #1
   20520:	streq	r3, [r0, #36]	; 0x24
   20524:	ldr	r2, [pc, #20]	; 20540 <flatcc_json_printer_table_as_root@@Base+0x190>
   20528:	ldr	r3, [pc, #20]	; 20544 <flatcc_json_printer_table_as_root@@Base+0x194>
   2052c:	ldr	r0, [pc, #20]	; 20548 <flatcc_json_printer_table_as_root@@Base+0x198>
   20530:	bl	12530 <__assert_fail@plt>
   20534:	mov	r0, r4
   20538:	bl	12564 <__assert_fail@plt+0x34>
   2053c:	andeq	r1, r2, r8, lsr lr
   20540:	strdeq	r0, [r0], -fp
   20544:	andeq	r1, r2, r0, ror #14
   20548:	andeq	r2, r2, r8

0002054c <flatcc_json_printer_struct_as_nested_root@@Base>:
   2054c:	add	r2, r2, #2
   20550:	ldr	ip, [r1, #8]
   20554:	lsl	r2, r2, #1
   20558:	cmp	r2, ip
   2055c:	bxge	lr
   20560:	ldr	ip, [r1, #4]
   20564:	ldrh	r2, [ip, r2]
   20568:	cmp	r2, #0
   2056c:	bxeq	lr
   20570:	ldr	ip, [r1]
   20574:	push	{r4, r5, r6, r7, r8, r9, lr}
   20578:	adds	r8, ip, r2
   2057c:	sub	sp, sp, #12
   20580:	beq	20664 <flatcc_json_printer_struct_as_nested_root@@Base+0x118>
   20584:	ldr	r7, [ip, r2]
   20588:	mov	r6, r3
   2058c:	mov	r3, #0
   20590:	str	r3, [sp, #4]
   20594:	ldr	r3, [r8, r7]
   20598:	mov	r4, r0
   2059c:	cmp	r3, #7
   205a0:	mov	r5, r1
   205a4:	add	r9, r8, r7
   205a8:	bls	20698 <flatcc_json_printer_struct_as_nested_root@@Base+0x14c>
   205ac:	ldr	r3, [sp, #44]	; 0x2c
   205b0:	cmp	r3, #0
   205b4:	beq	205dc <flatcc_json_printer_struct_as_nested_root@@Base+0x90>
   205b8:	mov	r2, #4
   205bc:	mov	r1, r3
   205c0:	add	r0, sp, r2
   205c4:	bl	124f4 <strncpy@plt>
   205c8:	ldr	r3, [sp, #4]
   205cc:	ldr	r2, [r9, #4]
   205d0:	cmp	r2, r3
   205d4:	cmpne	r3, #0
   205d8:	bne	206bc <flatcc_json_printer_struct_as_nested_root@@Base+0x170>
   205dc:	ldr	r2, [r5, #16]
   205e0:	mov	r0, r4
   205e4:	cmp	r2, #0
   205e8:	add	r2, r2, #1
   205ec:	ldrne	r3, [r4, #20]
   205f0:	str	r2, [r5, #16]
   205f4:	addne	r1, r3, #1
   205f8:	movne	r2, #44	; 0x2c
   205fc:	strne	r1, [r4, #20]
   20600:	strbne	r2, [r3]
   20604:	mov	r1, r6
   20608:	ldr	r2, [sp, #40]	; 0x28
   2060c:	bl	14b4c <test_print@@Base+0x1378>
   20610:	ldr	r3, [r4, #32]
   20614:	ldr	r2, [r4, #20]
   20618:	add	r3, r3, #1
   2061c:	add	r0, r2, #1
   20620:	mov	r1, #123	; 0x7b
   20624:	str	r3, [r4, #32]
   20628:	str	r0, [r4, #20]
   2062c:	strb	r1, [r2]
   20630:	ldr	r1, [r8, r7]
   20634:	ldr	r3, [sp, #48]	; 0x30
   20638:	mov	r0, r4
   2063c:	add	r1, r9, r1
   20640:	blx	r3
   20644:	ldrb	r3, [r4, #25]
   20648:	cmp	r3, #0
   2064c:	bne	2066c <flatcc_json_printer_struct_as_nested_root@@Base+0x120>
   20650:	ldr	r3, [r4, #20]
   20654:	mov	r2, #125	; 0x7d
   20658:	add	r1, r3, #1
   2065c:	str	r1, [r4, #20]
   20660:	strb	r2, [r3]
   20664:	add	sp, sp, #12
   20668:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2066c:	ldr	r3, [r4, #20]
   20670:	mov	r2, #10
   20674:	add	r1, r3, #1
   20678:	str	r1, [r4, #20]
   2067c:	strb	r2, [r3]
   20680:	ldr	r3, [r4, #32]
   20684:	mov	r0, r4
   20688:	sub	r3, r3, #1
   2068c:	str	r3, [r4, #32]
   20690:	bl	145ac <test_print@@Base+0xdd8>
   20694:	b	20650 <flatcc_json_printer_struct_as_nested_root@@Base+0x104>
   20698:	ldr	r3, [r0, #36]	; 0x24
   2069c:	ldr	r2, [pc, #32]	; 206c4 <flatcc_json_printer_struct_as_nested_root@@Base+0x178>
   206a0:	cmp	r3, #0
   206a4:	moveq	r3, #1
   206a8:	streq	r3, [r0, #36]	; 0x24
   206ac:	ldr	r1, [pc, #20]	; 206c8 <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   206b0:	ldr	r3, [pc, #20]	; 206cc <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   206b4:	ldr	r0, [pc, #20]	; 206d0 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   206b8:	bl	12530 <__assert_fail@plt>
   206bc:	mov	r0, r4
   206c0:	bl	12564 <__assert_fail@plt+0x34>
   206c4:	strdeq	r0, [r0], -fp
   206c8:	andeq	r1, r2, r8, lsr lr
   206cc:	andeq	r1, r2, r0, ror #14
   206d0:	andeq	r2, r2, r8

000206d4 <flatcc_json_printer_table_as_nested_root@@Base>:
   206d4:	add	r2, r2, #2
   206d8:	ldr	ip, [r1, #8]
   206dc:	lsl	r2, r2, #1
   206e0:	cmp	r2, ip
   206e4:	bxge	lr
   206e8:	ldr	ip, [r1, #4]
   206ec:	ldrh	r2, [ip, r2]
   206f0:	cmp	r2, #0
   206f4:	bxeq	lr
   206f8:	push	{r4, r5, r6, r7, r8, lr}
   206fc:	sub	sp, sp, #24
   20700:	ldr	lr, [r1]
   20704:	adds	ip, lr, r2
   20708:	beq	207bc <flatcc_json_printer_table_as_nested_root@@Base+0xe8>
   2070c:	mov	r7, r3
   20710:	ldr	r3, [lr, r2]
   20714:	mov	r2, #0
   20718:	add	r6, ip, r3
   2071c:	ldr	r3, [ip, r3]
   20720:	mov	r5, r0
   20724:	cmn	r6, #4
   20728:	cmpne	r3, #7
   2072c:	mov	r4, r1
   20730:	add	r8, r6, #4
   20734:	str	r2, [sp, #4]
   20738:	bls	20874 <flatcc_json_printer_table_as_nested_root@@Base+0x1a0>
   2073c:	ldr	r3, [sp, #52]	; 0x34
   20740:	cmp	r3, #0
   20744:	beq	2076c <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   20748:	mov	r2, #4
   2074c:	mov	r1, r3
   20750:	add	r0, sp, r2
   20754:	bl	124f4 <strncpy@plt>
   20758:	ldr	r3, [sp, #4]
   2075c:	ldr	r2, [r6, #8]
   20760:	cmp	r2, r3
   20764:	cmpne	r3, #0
   20768:	bne	20898 <flatcc_json_printer_table_as_nested_root@@Base+0x1c4>
   2076c:	ldr	r2, [r4, #16]
   20770:	mov	r0, r5
   20774:	cmp	r2, #0
   20778:	add	r2, r2, #1
   2077c:	ldrne	r3, [r5, #20]
   20780:	str	r2, [r4, #16]
   20784:	addne	r1, r3, #1
   20788:	movne	r2, #44	; 0x2c
   2078c:	strne	r1, [r5, #20]
   20790:	strbne	r2, [r3]
   20794:	mov	r1, r7
   20798:	ldr	r2, [sp, #48]	; 0x30
   2079c:	bl	14b4c <test_print@@Base+0x1378>
   207a0:	ldr	r3, [r4, #12]
   207a4:	subs	r3, r3, #1
   207a8:	bne	207c4 <flatcc_json_printer_table_as_nested_root@@Base+0xf0>
   207ac:	ldr	r3, [r5, #36]	; 0x24
   207b0:	cmp	r3, #0
   207b4:	moveq	r3, #2
   207b8:	streq	r3, [r5, #36]	; 0x24
   207bc:	add	sp, sp, #24
   207c0:	pop	{r4, r5, r6, r7, r8, pc}
   207c4:	ldr	r2, [r5, #32]
   207c8:	ldr	r1, [r6, #4]
   207cc:	ldr	r0, [r5, #20]
   207d0:	add	r2, r2, #1
   207d4:	str	r2, [r5, #32]
   207d8:	add	lr, r0, #1
   207dc:	mov	ip, #123	; 0x7b
   207e0:	mov	r2, #0
   207e4:	str	lr, [r5, #20]
   207e8:	strb	ip, [r0]
   207ec:	str	r2, [sp, #20]
   207f0:	str	r3, [sp, #16]
   207f4:	ldr	r3, [r8, r1]
   207f8:	add	r8, r8, r1
   207fc:	sub	r3, r8, r3
   20800:	add	r1, sp, #4
   20804:	ldrh	r2, [r3]
   20808:	mov	r0, r5
   2080c:	str	r3, [sp, #8]
   20810:	ldr	r3, [sp, #56]	; 0x38
   20814:	str	r2, [sp, #12]
   20818:	str	r8, [sp, #4]
   2081c:	blx	r3
   20820:	ldrb	r3, [r5, #25]
   20824:	cmp	r3, #0
   20828:	bne	20848 <flatcc_json_printer_table_as_nested_root@@Base+0x174>
   2082c:	ldr	r3, [r5, #20]
   20830:	mov	r2, #125	; 0x7d
   20834:	add	r1, r3, #1
   20838:	str	r1, [r5, #20]
   2083c:	strb	r2, [r3]
   20840:	add	sp, sp, #24
   20844:	pop	{r4, r5, r6, r7, r8, pc}
   20848:	ldr	r3, [r5, #20]
   2084c:	mov	r2, #10
   20850:	add	r1, r3, #1
   20854:	str	r1, [r5, #20]
   20858:	strb	r2, [r3]
   2085c:	ldr	r3, [r5, #32]
   20860:	mov	r0, r5
   20864:	sub	r3, r3, #1
   20868:	str	r3, [r5, #32]
   2086c:	bl	145ac <test_print@@Base+0xdd8>
   20870:	b	2082c <flatcc_json_printer_table_as_nested_root@@Base+0x158>
   20874:	ldr	r3, [r0, #36]	; 0x24
   20878:	ldr	r1, [pc, #32]	; 208a0 <flatcc_json_printer_table_as_nested_root@@Base+0x1cc>
   2087c:	cmp	r3, r2
   20880:	moveq	r3, #1
   20884:	streq	r3, [r0, #36]	; 0x24
   20888:	ldr	r2, [pc, #20]	; 208a4 <flatcc_json_printer_table_as_nested_root@@Base+0x1d0>
   2088c:	ldr	r3, [pc, #20]	; 208a8 <flatcc_json_printer_table_as_nested_root@@Base+0x1d4>
   20890:	ldr	r0, [pc, #20]	; 208ac <flatcc_json_printer_table_as_nested_root@@Base+0x1d8>
   20894:	bl	12530 <__assert_fail@plt>
   20898:	mov	r0, r5
   2089c:	bl	12564 <__assert_fail@plt+0x34>
   208a0:	andeq	r1, r2, r8, lsr lr
   208a4:	strdeq	r0, [r0], -fp
   208a8:	andeq	r1, r2, r0, ror #14
   208ac:	andeq	r2, r2, r8

000208b0 <flatcc_json_printer_init@@Base>:
   208b0:	push	{r4, r5, r6, lr}
   208b4:	mov	r2, #48	; 0x30
   208b8:	mov	r5, r1
   208bc:	mov	r1, #0
   208c0:	mov	r4, r0
   208c4:	bl	124e8 <memset@plt>
   208c8:	cmp	r5, #0
   208cc:	ldr	r6, [pc, #76]	; 20920 <flatcc_json_printer_init@@Base+0x70>
   208d0:	ldreq	r3, [pc, #76]	; 20924 <flatcc_json_printer_init@@Base+0x74>
   208d4:	mov	r0, r6
   208d8:	ldreq	r5, [r3]
   208dc:	ldr	r3, [pc, #68]	; 20928 <flatcc_json_printer_init@@Base+0x78>
   208e0:	str	r5, [r4, #40]	; 0x28
   208e4:	str	r3, [r4, #44]	; 0x2c
   208e8:	bl	124ac <malloc@plt>
   208ec:	cmp	r0, #0
   208f0:	addne	r1, r0, #16384	; 0x4000
   208f4:	movne	r2, #1
   208f8:	movne	r3, #16384	; 0x4000
   208fc:	str	r0, [r4]
   20900:	strne	r0, [r4, #20]
   20904:	strne	r6, [r4, #4]
   20908:	movne	r0, #0
   2090c:	strne	r1, [r4, #16]
   20910:	strbne	r2, [r4, #24]
   20914:	strne	r3, [r4, #8]
   20918:	mvneq	r0, #0
   2091c:	pop	{r4, r5, r6, pc}
   20920:	andeq	r4, r0, r0, asr #32
   20924:	andeq	r3, r3, ip, lsl #1
   20928:	andeq	r4, r1, r0, ror r6

0002092c <flatcc_json_printer_init_buffer@@Base>:
   2092c:	cmp	r2, #63	; 0x3f
   20930:	push	{r4, r5, r6, lr}
   20934:	bls	2097c <flatcc_json_printer_init_buffer@@Base+0x50>
   20938:	mov	r6, r1
   2093c:	mov	r5, r2
   20940:	mov	r1, #0
   20944:	mov	r2, #48	; 0x30
   20948:	mov	r4, r0
   2094c:	bl	124e8 <memset@plt>
   20950:	sub	r3, r5, #64	; 0x40
   20954:	ldr	r2, [pc, #52]	; 20990 <flatcc_json_printer_init_buffer@@Base+0x64>
   20958:	add	r1, r6, r3
   2095c:	str	r6, [r4]
   20960:	str	r5, [r4, #4]
   20964:	str	r3, [r4, #8]
   20968:	str	r1, [r4, #16]
   2096c:	str	r6, [r4, #20]
   20970:	str	r2, [r4, #44]	; 0x2c
   20974:	mov	r0, #0
   20978:	pop	{r4, r5, r6, pc}
   2097c:	ldr	r3, [pc, #16]	; 20994 <flatcc_json_printer_init_buffer@@Base+0x68>
   20980:	ldr	r2, [pc, #16]	; 20998 <flatcc_json_printer_init_buffer@@Base+0x6c>
   20984:	ldr	r1, [pc, #16]	; 2099c <flatcc_json_printer_init_buffer@@Base+0x70>
   20988:	ldr	r0, [pc, #16]	; 209a0 <flatcc_json_printer_init_buffer@@Base+0x74>
   2098c:	bl	12530 <__assert_fail@plt>
   20990:	andeq	r4, r1, r4, ror #10
   20994:	muleq	r2, r8, sp
   20998:	andeq	r0, r0, sp, lsl #9
   2099c:	andeq	r1, r2, r8, lsr lr
   209a0:	andeq	r2, r2, r8, lsr #32

000209a4 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   209a4:	cmp	r1, #0
   209a8:	push	{r4, r5, r6, lr}
   209ac:	mov	r4, r0
   209b0:	moveq	r6, #4032	; 0xfc0
   209b4:	moveq	r5, #4096	; 0x1000
   209b8:	beq	209cc <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   209bc:	cmp	r1, #64	; 0x40
   209c0:	movcs	r5, r1
   209c4:	movcc	r5, #64	; 0x40
   209c8:	sub	r6, r5, #64	; 0x40
   209cc:	mov	r2, #48	; 0x30
   209d0:	mov	r1, #0
   209d4:	mov	r0, r4
   209d8:	bl	124e8 <memset@plt>
   209dc:	mov	r0, r5
   209e0:	bl	124ac <malloc@plt>
   209e4:	ldr	r2, [pc, #80]	; 20a3c <flatcc_json_printer_init_dynamic_buffer@@Base+0x98>
   209e8:	mov	r3, #1
   209ec:	stmib	r4, {r5, r6}
   209f0:	str	r2, [r4, #44]	; 0x2c
   209f4:	strb	r3, [r4, #24]
   209f8:	add	r1, r0, r6
   209fc:	cmp	r0, #0
   20a00:	str	r0, [r4]
   20a04:	str	r0, [r4, #20]
   20a08:	str	r1, [r4, #16]
   20a0c:	beq	20a18 <flatcc_json_printer_init_dynamic_buffer@@Base+0x74>
   20a10:	mov	r0, #0
   20a14:	pop	{r4, r5, r6, pc}
   20a18:	ldr	r3, [r4, #36]	; 0x24
   20a1c:	cmp	r3, #0
   20a20:	bne	20a34 <flatcc_json_printer_init_dynamic_buffer@@Base+0x90>
   20a24:	mov	r3, #3
   20a28:	str	r3, [r4, #36]	; 0x24
   20a2c:	mvn	r0, #0
   20a30:	pop	{r4, r5, r6, pc}
   20a34:	mvn	r0, #0
   20a38:	pop	{r4, r5, r6, pc}
   20a3c:	andeq	r4, r1, r4, lsl r7

00020a40 <flatcc_json_printer_get_buffer@@Base>:
   20a40:	ldr	r3, [r0, #44]	; 0x2c
   20a44:	push	{r4, r5, r6, lr}
   20a48:	mov	r5, r1
   20a4c:	mov	r1, #0
   20a50:	mov	r4, r0
   20a54:	blx	r3
   20a58:	cmp	r5, #0
   20a5c:	ldr	r0, [r4]
   20a60:	ldrne	r3, [r4, #20]
   20a64:	subne	r3, r3, r0
   20a68:	strne	r3, [r5]
   20a6c:	pop	{r4, r5, r6, pc}

00020a70 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   20a70:	ldr	r3, [r0, #44]	; 0x2c
   20a74:	push	{r4, r5, r6, lr}
   20a78:	mov	r5, r1
   20a7c:	mov	r1, #0
   20a80:	mov	r4, r0
   20a84:	blx	r3
   20a88:	cmp	r5, #0
   20a8c:	ldr	r6, [r4]
   20a90:	ldrne	r3, [r4, #20]
   20a94:	mov	r0, r4
   20a98:	mov	r2, #48	; 0x30
   20a9c:	mov	r1, #0
   20aa0:	subne	r3, r3, r6
   20aa4:	strne	r3, [r5]
   20aa8:	bl	124e8 <memset@plt>
   20aac:	mov	r0, r6
   20ab0:	pop	{r4, r5, r6, pc}

00020ab4 <flatcc_json_printer_clear@@Base>:
   20ab4:	push	{r4, lr}
   20ab8:	mov	r4, r0
   20abc:	ldrb	r3, [r0, #24]
   20ac0:	cmp	r3, #0
   20ac4:	beq	20ad8 <flatcc_json_printer_clear@@Base+0x24>
   20ac8:	ldr	r0, [r0]
   20acc:	cmp	r0, #0
   20ad0:	beq	20ad8 <flatcc_json_printer_clear@@Base+0x24>
   20ad4:	bl	12440 <free@plt>
   20ad8:	mov	r0, r4
   20adc:	mov	r2, #48	; 0x30
   20ae0:	mov	r1, #0
   20ae4:	pop	{r4, lr}
   20ae8:	b	124e8 <memset@plt>
   20aec:	subs	r2, r1, #1
   20af0:	bxeq	lr
   20af4:	bcc	20ccc <flatcc_json_printer_clear@@Base+0x218>
   20af8:	cmp	r0, r1
   20afc:	bls	20cb0 <flatcc_json_printer_clear@@Base+0x1fc>
   20b00:	tst	r1, r2
   20b04:	beq	20cbc <flatcc_json_printer_clear@@Base+0x208>
   20b08:	clz	r3, r0
   20b0c:	clz	r2, r1
   20b10:	sub	r3, r2, r3
   20b14:	rsbs	r3, r3, #31
   20b18:	addne	r3, r3, r3, lsl #1
   20b1c:	mov	r2, #0
   20b20:	addne	pc, pc, r3, lsl #2
   20b24:	nop			; (mov r0, r0)
   20b28:	cmp	r0, r1, lsl #31
   20b2c:	adc	r2, r2, r2
   20b30:	subcs	r0, r0, r1, lsl #31
   20b34:	cmp	r0, r1, lsl #30
   20b38:	adc	r2, r2, r2
   20b3c:	subcs	r0, r0, r1, lsl #30
   20b40:	cmp	r0, r1, lsl #29
   20b44:	adc	r2, r2, r2
   20b48:	subcs	r0, r0, r1, lsl #29
   20b4c:	cmp	r0, r1, lsl #28
   20b50:	adc	r2, r2, r2
   20b54:	subcs	r0, r0, r1, lsl #28
   20b58:	cmp	r0, r1, lsl #27
   20b5c:	adc	r2, r2, r2
   20b60:	subcs	r0, r0, r1, lsl #27
   20b64:	cmp	r0, r1, lsl #26
   20b68:	adc	r2, r2, r2
   20b6c:	subcs	r0, r0, r1, lsl #26
   20b70:	cmp	r0, r1, lsl #25
   20b74:	adc	r2, r2, r2
   20b78:	subcs	r0, r0, r1, lsl #25
   20b7c:	cmp	r0, r1, lsl #24
   20b80:	adc	r2, r2, r2
   20b84:	subcs	r0, r0, r1, lsl #24
   20b88:	cmp	r0, r1, lsl #23
   20b8c:	adc	r2, r2, r2
   20b90:	subcs	r0, r0, r1, lsl #23
   20b94:	cmp	r0, r1, lsl #22
   20b98:	adc	r2, r2, r2
   20b9c:	subcs	r0, r0, r1, lsl #22
   20ba0:	cmp	r0, r1, lsl #21
   20ba4:	adc	r2, r2, r2
   20ba8:	subcs	r0, r0, r1, lsl #21
   20bac:	cmp	r0, r1, lsl #20
   20bb0:	adc	r2, r2, r2
   20bb4:	subcs	r0, r0, r1, lsl #20
   20bb8:	cmp	r0, r1, lsl #19
   20bbc:	adc	r2, r2, r2
   20bc0:	subcs	r0, r0, r1, lsl #19
   20bc4:	cmp	r0, r1, lsl #18
   20bc8:	adc	r2, r2, r2
   20bcc:	subcs	r0, r0, r1, lsl #18
   20bd0:	cmp	r0, r1, lsl #17
   20bd4:	adc	r2, r2, r2
   20bd8:	subcs	r0, r0, r1, lsl #17
   20bdc:	cmp	r0, r1, lsl #16
   20be0:	adc	r2, r2, r2
   20be4:	subcs	r0, r0, r1, lsl #16
   20be8:	cmp	r0, r1, lsl #15
   20bec:	adc	r2, r2, r2
   20bf0:	subcs	r0, r0, r1, lsl #15
   20bf4:	cmp	r0, r1, lsl #14
   20bf8:	adc	r2, r2, r2
   20bfc:	subcs	r0, r0, r1, lsl #14
   20c00:	cmp	r0, r1, lsl #13
   20c04:	adc	r2, r2, r2
   20c08:	subcs	r0, r0, r1, lsl #13
   20c0c:	cmp	r0, r1, lsl #12
   20c10:	adc	r2, r2, r2
   20c14:	subcs	r0, r0, r1, lsl #12
   20c18:	cmp	r0, r1, lsl #11
   20c1c:	adc	r2, r2, r2
   20c20:	subcs	r0, r0, r1, lsl #11
   20c24:	cmp	r0, r1, lsl #10
   20c28:	adc	r2, r2, r2
   20c2c:	subcs	r0, r0, r1, lsl #10
   20c30:	cmp	r0, r1, lsl #9
   20c34:	adc	r2, r2, r2
   20c38:	subcs	r0, r0, r1, lsl #9
   20c3c:	cmp	r0, r1, lsl #8
   20c40:	adc	r2, r2, r2
   20c44:	subcs	r0, r0, r1, lsl #8
   20c48:	cmp	r0, r1, lsl #7
   20c4c:	adc	r2, r2, r2
   20c50:	subcs	r0, r0, r1, lsl #7
   20c54:	cmp	r0, r1, lsl #6
   20c58:	adc	r2, r2, r2
   20c5c:	subcs	r0, r0, r1, lsl #6
   20c60:	cmp	r0, r1, lsl #5
   20c64:	adc	r2, r2, r2
   20c68:	subcs	r0, r0, r1, lsl #5
   20c6c:	cmp	r0, r1, lsl #4
   20c70:	adc	r2, r2, r2
   20c74:	subcs	r0, r0, r1, lsl #4
   20c78:	cmp	r0, r1, lsl #3
   20c7c:	adc	r2, r2, r2
   20c80:	subcs	r0, r0, r1, lsl #3
   20c84:	cmp	r0, r1, lsl #2
   20c88:	adc	r2, r2, r2
   20c8c:	subcs	r0, r0, r1, lsl #2
   20c90:	cmp	r0, r1, lsl #1
   20c94:	adc	r2, r2, r2
   20c98:	subcs	r0, r0, r1, lsl #1
   20c9c:	cmp	r0, r1
   20ca0:	adc	r2, r2, r2
   20ca4:	subcs	r0, r0, r1
   20ca8:	mov	r0, r2
   20cac:	bx	lr
   20cb0:	moveq	r0, #1
   20cb4:	movne	r0, #0
   20cb8:	bx	lr
   20cbc:	clz	r2, r1
   20cc0:	rsb	r2, r2, #31
   20cc4:	lsr	r0, r0, r2
   20cc8:	bx	lr
   20ccc:	cmp	r0, #0
   20cd0:	mvnne	r0, #0
   20cd4:	b	20d34 <flatcc_json_printer_clear@@Base+0x280>
   20cd8:	cmp	r1, #0
   20cdc:	beq	20ccc <flatcc_json_printer_clear@@Base+0x218>
   20ce0:	push	{r0, r1, lr}
   20ce4:	bl	20aec <flatcc_json_printer_clear@@Base+0x38>
   20ce8:	pop	{r1, r2, lr}
   20cec:	mul	r3, r2, r0
   20cf0:	sub	r1, r1, r3
   20cf4:	bx	lr
   20cf8:	cmp	r3, #0
   20cfc:	cmpeq	r2, #0
   20d00:	bne	20d18 <flatcc_json_printer_clear@@Base+0x264>
   20d04:	cmp	r1, #0
   20d08:	cmpeq	r0, #0
   20d0c:	mvnne	r1, #0
   20d10:	mvnne	r0, #0
   20d14:	b	20d34 <flatcc_json_printer_clear@@Base+0x280>
   20d18:	sub	sp, sp, #8
   20d1c:	push	{sp, lr}
   20d20:	bl	20d44 <flatcc_json_printer_clear@@Base+0x290>
   20d24:	ldr	lr, [sp, #4]
   20d28:	add	sp, sp, #8
   20d2c:	pop	{r2, r3}
   20d30:	bx	lr
   20d34:	push	{r1, lr}
   20d38:	mov	r0, #8
   20d3c:	bl	12410 <raise@plt>
   20d40:	pop	{r1, pc}
   20d44:	cmp	r1, r3
   20d48:	push	{r4, r5, r6, r7, r8, r9, lr}
   20d4c:	cmpeq	r0, r2
   20d50:	mov	r4, r0
   20d54:	mov	r5, r1
   20d58:	ldr	r9, [sp, #28]
   20d5c:	movcc	r0, #0
   20d60:	movcc	r1, #0
   20d64:	bcc	20e5c <flatcc_json_printer_clear@@Base+0x3a8>
   20d68:	cmp	r3, #0
   20d6c:	clzeq	ip, r2
   20d70:	clzne	ip, r3
   20d74:	addeq	ip, ip, #32
   20d78:	cmp	r5, #0
   20d7c:	clzeq	r1, r4
   20d80:	addeq	r1, r1, #32
   20d84:	clzne	r1, r5
   20d88:	sub	ip, ip, r1
   20d8c:	sub	lr, ip, #32
   20d90:	lsl	r7, r3, ip
   20d94:	rsb	r8, ip, #32
   20d98:	orr	r7, r7, r2, lsl lr
   20d9c:	orr	r7, r7, r2, lsr r8
   20da0:	lsl	r6, r2, ip
   20da4:	cmp	r5, r7
   20da8:	cmpeq	r4, r6
   20dac:	movcc	r0, #0
   20db0:	movcc	r1, #0
   20db4:	bcc	20dd0 <flatcc_json_printer_clear@@Base+0x31c>
   20db8:	mov	r3, #1
   20dbc:	subs	r4, r4, r6
   20dc0:	lsl	r1, r3, lr
   20dc4:	lsl	r0, r3, ip
   20dc8:	orr	r1, r1, r3, lsr r8
   20dcc:	sbc	r5, r5, r7
   20dd0:	cmp	ip, #0
   20dd4:	beq	20e5c <flatcc_json_printer_clear@@Base+0x3a8>
   20dd8:	lsrs	r3, r7, #1
   20ddc:	rrx	r2, r6
   20de0:	mov	r6, ip
   20de4:	b	20e08 <flatcc_json_printer_clear@@Base+0x354>
   20de8:	subs	r4, r4, r2
   20dec:	sbc	r5, r5, r3
   20df0:	adds	r4, r4, r4
   20df4:	adc	r5, r5, r5
   20df8:	adds	r4, r4, #1
   20dfc:	adc	r5, r5, #0
   20e00:	subs	r6, r6, #1
   20e04:	beq	20e24 <flatcc_json_printer_clear@@Base+0x370>
   20e08:	cmp	r5, r3
   20e0c:	cmpeq	r4, r2
   20e10:	bcs	20de8 <flatcc_json_printer_clear@@Base+0x334>
   20e14:	adds	r4, r4, r4
   20e18:	adc	r5, r5, r5
   20e1c:	subs	r6, r6, #1
   20e20:	bne	20e08 <flatcc_json_printer_clear@@Base+0x354>
   20e24:	lsr	r6, r4, ip
   20e28:	lsr	r7, r5, ip
   20e2c:	orr	r6, r6, r5, lsl r8
   20e30:	adds	r2, r0, r4
   20e34:	orr	r6, r6, r5, lsr lr
   20e38:	adc	r3, r1, r5
   20e3c:	lsl	r1, r7, ip
   20e40:	orr	r1, r1, r6, lsl lr
   20e44:	lsl	r0, r6, ip
   20e48:	orr	r1, r1, r6, lsr r8
   20e4c:	subs	r0, r2, r0
   20e50:	mov	r4, r6
   20e54:	mov	r5, r7
   20e58:	sbc	r1, r3, r1
   20e5c:	cmp	r9, #0
   20e60:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   20e64:	strd	r4, [r9]
   20e68:	pop	{r4, r5, r6, r7, r8, r9, pc}

00020e6c <__libc_csu_init@@Base>:
   20e6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20e70:	mov	r7, r0
   20e74:	ldr	r6, [pc, #72]	; 20ec4 <__libc_csu_init@@Base+0x58>
   20e78:	ldr	r5, [pc, #72]	; 20ec8 <__libc_csu_init@@Base+0x5c>
   20e7c:	add	r6, pc, r6
   20e80:	add	r5, pc, r5
   20e84:	sub	r6, r6, r5
   20e88:	mov	r8, r1
   20e8c:	mov	r9, r2
   20e90:	bl	123f0 <raise@plt-0x20>
   20e94:	asrs	r6, r6, #2
   20e98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20e9c:	mov	r4, #0
   20ea0:	add	r4, r4, #1
   20ea4:	ldr	r3, [r5], #4
   20ea8:	mov	r2, r9
   20eac:	mov	r1, r8
   20eb0:	mov	r0, r7
   20eb4:	blx	r3
   20eb8:	cmp	r6, r4
   20ebc:	bne	20ea0 <__libc_csu_init@@Base+0x34>
   20ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20ec4:	andeq	r2, r1, ip, lsl #1
   20ec8:	andeq	r2, r1, r4, lsl #1

00020ecc <__libc_csu_fini@@Base>:
   20ecc:	bx	lr

Disassembly of section .fini:

00020ed0 <.fini>:
   20ed0:	push	{r3, lr}
   20ed4:	pop	{r3, pc}
