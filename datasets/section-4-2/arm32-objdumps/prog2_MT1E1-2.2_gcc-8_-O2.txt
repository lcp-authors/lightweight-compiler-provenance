
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

000106f8 <.init>:
   106f8:	push	{r3, lr}
   106fc:	bl	108f0 <_start@@Base+0x3c>
   10700:	pop	{r3, pc}

Disassembly of section .plt:

00010704 <strcmp@plt-0x14>:
   10704:	push	{lr}		; (str lr, [sp, #-4]!)
   10708:	ldr	lr, [pc, #4]	; 10714 <strcmp@plt-0x4>
   1070c:	add	lr, pc, lr
   10710:	ldr	pc, [lr, #8]!
   10714:	andeq	r0, r1, ip, ror #17

00010718 <strcmp@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #16, 20	; 0x10000
   10720:	ldr	pc, [ip, #2284]!	; 0x8ec

00010724 <__isoc99_fscanf@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010730 <fopen@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2268]!	; 0x8dc

0001073c <free@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2260]!	; 0x8d4

00010748 <realloc@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2252]!	; 0x8cc

00010754 <fwrite@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010760 <strcpy@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2236]!	; 0x8bc

0001076c <malloc@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #16, 20	; 0x10000
   10774:	ldr	pc, [ip, #2228]!	; 0x8b4

00010778 <__libc_start_main@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #16, 20	; 0x10000
   10780:	ldr	pc, [ip, #2220]!	; 0x8ac

00010784 <__gmon_start__@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #16, 20	; 0x10000
   1078c:	ldr	pc, [ip, #2212]!	; 0x8a4

00010790 <strlen@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #16, 20	; 0x10000
   10798:	ldr	pc, [ip, #2204]!	; 0x89c

0001079c <fprintf@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #16, 20	; 0x10000
   107a4:	ldr	pc, [ip, #2196]!	; 0x894

000107a8 <fclose@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #16, 20	; 0x10000
   107b0:	ldr	pc, [ip, #2188]!	; 0x88c

000107b4 <abort@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #16, 20	; 0x10000
   107bc:	ldr	pc, [ip, #2180]!	; 0x884

Disassembly of section .text:

000107c0 <main@@Base>:
   107c0:	ldr	r1, [pc, #212]	; 1089c <main@@Base+0xdc>
   107c4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   107c8:	mov	r5, #0
   107cc:	ldr	r0, [pc, #204]	; 108a0 <main@@Base+0xe0>
   107d0:	strd	r6, [sp, #8]
   107d4:	strd	r8, [sp, #16]
   107d8:	add	r1, pc, r1
   107dc:	str	lr, [sp, #24]
   107e0:	sub	sp, sp, #12
   107e4:	ldr	r4, [pc, #184]	; 108a4 <main@@Base+0xe4>
   107e8:	add	r0, pc, r0
   107ec:	bl	10730 <fopen@plt>
   107f0:	add	r1, sp, #4
   107f4:	mov	r9, r0
   107f8:	str	r5, [sp, #4]
   107fc:	bl	109a4 <conta_vitorias@@Base>
   10800:	ldr	r3, [pc, #160]	; 108a8 <main@@Base+0xe8>
   10804:	add	r4, pc, r4
   10808:	mov	r8, r0
   1080c:	mov	r2, #12
   10810:	mov	r1, #1
   10814:	ldr	r0, [pc, #144]	; 108ac <main@@Base+0xec>
   10818:	ldr	r6, [r4, r3]
   1081c:	add	r0, pc, r0
   10820:	ldr	r3, [r6]
   10824:	bl	10754 <fwrite@plt>
   10828:	cmp	r8, r5
   1082c:	beq	10870 <main@@Base+0xb0>
   10830:	ldr	r3, [sp, #4]
   10834:	cmp	r3, r5
   10838:	ble	10870 <main@@Base+0xb0>
   1083c:	ldr	r7, [pc, #108]	; 108b0 <main@@Base+0xf0>
   10840:	mov	r4, r8
   10844:	add	r7, pc, r7
   10848:	mov	r2, r4
   1084c:	mov	r1, r7
   10850:	ldr	r0, [r6]
   10854:	add	r5, r5, #1
   10858:	add	r4, r4, #20
   1085c:	ldr	r3, [r4, #-4]
   10860:	bl	1079c <fprintf@plt>
   10864:	ldr	r3, [sp, #4]
   10868:	cmp	r3, r5
   1086c:	bgt	10848 <main@@Base+0x88>
   10870:	mov	r0, r8
   10874:	bl	1073c <free@plt>
   10878:	mov	r0, r9
   1087c:	bl	107a8 <fclose@plt>
   10880:	mov	r0, #0
   10884:	add	sp, sp, #12
   10888:	ldrd	r4, [sp]
   1088c:	ldrd	r6, [sp, #8]
   10890:	ldrd	r8, [sp, #16]
   10894:	add	sp, sp, #24
   10898:	pop	{pc}		; (ldr pc, [sp], #4)
   1089c:	andeq	r0, r0, r4, lsl r4
   108a0:	andeq	r0, r0, r8, lsl #8
   108a4:	strdeq	r0, [r1], -r4
   108a8:	andeq	r0, r0, r4, asr #32
   108ac:	ldrdeq	r0, [r0], -ip
   108b0:	andeq	r0, r0, r4, asr #7

000108b4 <_start@@Base>:
   108b4:	mov	fp, #0
   108b8:	mov	lr, #0
   108bc:	pop	{r1}		; (ldr r1, [sp], #4)
   108c0:	mov	r2, sp
   108c4:	push	{r2}		; (str r2, [sp, #-4]!)
   108c8:	push	{r0}		; (str r0, [sp, #-4]!)
   108cc:	ldr	ip, [pc, #16]	; 108e4 <_start@@Base+0x30>
   108d0:	push	{ip}		; (str ip, [sp, #-4]!)
   108d4:	ldr	r0, [pc, #12]	; 108e8 <_start@@Base+0x34>
   108d8:	ldr	r3, [pc, #12]	; 108ec <_start@@Base+0x38>
   108dc:	bl	10778 <__libc_start_main@plt>
   108e0:	bl	107b4 <abort@plt>
   108e4:	andeq	r0, r1, r0, ror #23
   108e8:	andeq	r0, r1, r0, asr #15
   108ec:	andeq	r0, r1, r0, lsl #23
   108f0:	ldr	r3, [pc, #20]	; 1090c <_start@@Base+0x58>
   108f4:	ldr	r2, [pc, #20]	; 10910 <_start@@Base+0x5c>
   108f8:	add	r3, pc, r3
   108fc:	ldr	r2, [r3, r2]
   10900:	cmp	r2, #0
   10904:	bxeq	lr
   10908:	b	10784 <__gmon_start__@plt>
   1090c:	andeq	r0, r1, r0, lsl #14
   10910:	andeq	r0, r0, r8, asr #32
   10914:	ldr	r0, [pc, #24]	; 10934 <_start@@Base+0x80>
   10918:	ldr	r3, [pc, #24]	; 10938 <_start@@Base+0x84>
   1091c:	cmp	r3, r0
   10920:	bxeq	lr
   10924:	ldr	r3, [pc, #16]	; 1093c <_start@@Base+0x88>
   10928:	cmp	r3, #0
   1092c:	bxeq	lr
   10930:	bx	r3
   10934:	andeq	r1, r2, r4, asr r0
   10938:	andeq	r1, r2, r4, asr r0
   1093c:	andeq	r0, r0, r0
   10940:	ldr	r0, [pc, #36]	; 1096c <_start@@Base+0xb8>
   10944:	ldr	r1, [pc, #36]	; 10970 <_start@@Base+0xbc>
   10948:	sub	r1, r1, r0
   1094c:	asr	r1, r1, #2
   10950:	add	r1, r1, r1, lsr #31
   10954:	asrs	r1, r1, #1
   10958:	bxeq	lr
   1095c:	ldr	r3, [pc, #16]	; 10974 <_start@@Base+0xc0>
   10960:	cmp	r3, #0
   10964:	bxeq	lr
   10968:	bx	r3
   1096c:	andeq	r1, r2, r4, asr r0
   10970:	andeq	r1, r2, r4, asr r0
   10974:	andeq	r0, r0, r0
   10978:	push	{r4, lr}
   1097c:	ldr	r4, [pc, #24]	; 1099c <_start@@Base+0xe8>
   10980:	ldrb	r3, [r4]
   10984:	cmp	r3, #0
   10988:	popne	{r4, pc}
   1098c:	bl	10914 <_start@@Base+0x60>
   10990:	mov	r3, #1
   10994:	strb	r3, [r4]
   10998:	pop	{r4, pc}
   1099c:	andeq	r1, r2, r4, asr r0
   109a0:	b	10940 <_start@@Base+0x8c>

000109a4 <conta_vitorias@@Base>:
   109a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   109a8:	strd	r6, [sp, #8]
   109ac:	mov	r7, r1
   109b0:	strd	r8, [sp, #16]
   109b4:	mov	r8, r0
   109b8:	mov	r0, #20
   109bc:	strd	sl, [sp, #24]
   109c0:	str	lr, [sp, #32]
   109c4:	sub	sp, sp, #44	; 0x2c
   109c8:	bl	1076c <malloc@plt>
   109cc:	subs	r4, r0, #0
   109d0:	beq	10b74 <conta_vitorias@@Base+0x1d0>
   109d4:	ldr	r9, [pc, #416]	; 10b7c <conta_vitorias@@Base+0x1d8>
   109d8:	mov	r3, #0
   109dc:	add	r6, sp, #4
   109e0:	str	r3, [r7]
   109e4:	add	r9, pc, r9
   109e8:	mov	r2, r6
   109ec:	mov	r1, r9
   109f0:	mov	r0, r8
   109f4:	bl	10724 <__isoc99_fscanf@plt>
   109f8:	cmp	r0, #1
   109fc:	bne	10ab0 <conta_vitorias@@Base+0x10c>
   10a00:	mov	r0, r6
   10a04:	bl	10790 <strlen@plt>
   10a08:	ldr	r5, [r7]
   10a0c:	add	r3, sp, #40	; 0x28
   10a10:	add	r0, r3, r0
   10a14:	mov	r3, #0
   10a18:	strb	r3, [r0, #-36]	; 0xffffffdc
   10a1c:	cmp	r5, #0
   10a20:	ble	10b6c <conta_vitorias@@Base+0x1c8>
   10a24:	mov	fp, r4
   10a28:	mov	sl, #0
   10a2c:	b	10a3c <conta_vitorias@@Base+0x98>
   10a30:	cmp	r5, sl
   10a34:	add	fp, fp, #20
   10a38:	beq	10a64 <conta_vitorias@@Base+0xc0>
   10a3c:	mov	r1, fp
   10a40:	mov	r0, r6
   10a44:	bl	10718 <strcmp@plt>
   10a48:	cmp	r0, #0
   10a4c:	add	sl, sl, #1
   10a50:	bne	10a30 <conta_vitorias@@Base+0x8c>
   10a54:	ldr	r2, [fp, #16]
   10a58:	add	r2, r2, #1
   10a5c:	str	r2, [fp, #16]
   10a60:	b	109e8 <conta_vitorias@@Base+0x44>
   10a64:	mov	fp, r5
   10a68:	add	r5, r5, #1
   10a6c:	mov	r0, r4
   10a70:	add	r5, r5, r5, lsl #2
   10a74:	lsl	r1, r5, #2
   10a78:	bl	10748 <realloc@plt>
   10a7c:	subs	r4, r0, #0
   10a80:	beq	10b74 <conta_vitorias@@Base+0x1d0>
   10a84:	add	r3, fp, fp, lsl #2
   10a88:	mov	r1, r6
   10a8c:	add	r3, r4, r3, lsl #2
   10a90:	mov	r0, r3
   10a94:	bl	10760 <strcpy@plt>
   10a98:	ldr	r2, [r7]
   10a9c:	mov	r1, #1
   10aa0:	str	r1, [r0, #16]
   10aa4:	add	r3, r2, r1
   10aa8:	str	r3, [r7]
   10aac:	b	109e8 <conta_vitorias@@Base+0x44>
   10ab0:	ldr	r7, [r7]
   10ab4:	cmp	r7, #1
   10ab8:	ble	10b4c <conta_vitorias@@Base+0x1a8>
   10abc:	add	r5, r4, #20
   10ac0:	mov	r6, #1
   10ac4:	add	lr, sp, #20
   10ac8:	ldrd	r0, [r5]
   10acc:	mov	r3, r5
   10ad0:	mov	r2, r6
   10ad4:	ldrd	r8, [r5, #8]
   10ad8:	ldr	ip, [r5, #16]
   10adc:	strd	r0, [lr]
   10ae0:	strd	r8, [lr, #8]
   10ae4:	str	ip, [lr, #16]
   10ae8:	ldr	r1, [r3, #-4]
   10aec:	mov	r9, r3
   10af0:	sub	r8, r3, #20
   10af4:	cmp	r1, ip
   10af8:	bge	10b24 <conta_vitorias@@Base+0x180>
   10afc:	ldrd	r0, [r3, #-20]	; 0xffffffec
   10b00:	subs	r2, r2, #1
   10b04:	strd	r0, [r3]
   10b08:	ldrd	r0, [r8, #8]
   10b0c:	strd	r0, [r3, #8]
   10b10:	ldr	r1, [r8, #16]
   10b14:	str	r1, [r3, #16]
   10b18:	mov	r3, r8
   10b1c:	bne	10ae8 <conta_vitorias@@Base+0x144>
   10b20:	mov	r9, r4
   10b24:	ldrd	r2, [lr]
   10b28:	add	r6, r6, #1
   10b2c:	add	r5, r5, #20
   10b30:	cmp	r7, r6
   10b34:	ldrd	r0, [lr, #8]
   10b38:	ldr	ip, [lr, #16]
   10b3c:	strd	r2, [r9]
   10b40:	strd	r0, [r9, #8]
   10b44:	str	ip, [r9, #16]
   10b48:	bne	10ac8 <conta_vitorias@@Base+0x124>
   10b4c:	mov	r0, r4
   10b50:	add	sp, sp, #44	; 0x2c
   10b54:	ldrd	r4, [sp]
   10b58:	ldrd	r6, [sp, #8]
   10b5c:	ldrd	r8, [sp, #16]
   10b60:	ldrd	sl, [sp, #24]
   10b64:	add	sp, sp, #32
   10b68:	pop	{pc}		; (ldr pc, [sp], #4)
   10b6c:	mov	fp, #0
   10b70:	b	10a68 <conta_vitorias@@Base+0xc4>
   10b74:	mov	r4, #0
   10b78:	b	10b4c <conta_vitorias@@Base+0x1a8>
   10b7c:	andeq	r0, r0, r4, lsl #4

00010b80 <__libc_csu_init@@Base>:
   10b80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b84:	mov	r7, r0
   10b88:	ldr	r6, [pc, #72]	; 10bd8 <__libc_csu_init@@Base+0x58>
   10b8c:	ldr	r5, [pc, #72]	; 10bdc <__libc_csu_init@@Base+0x5c>
   10b90:	add	r6, pc, r6
   10b94:	add	r5, pc, r5
   10b98:	sub	r6, r6, r5
   10b9c:	mov	r8, r1
   10ba0:	mov	r9, r2
   10ba4:	bl	106f8 <strcmp@plt-0x20>
   10ba8:	asrs	r6, r6, #2
   10bac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bb0:	mov	r4, #0
   10bb4:	add	r4, r4, #1
   10bb8:	ldr	r3, [r5], #4
   10bbc:	mov	r2, r9
   10bc0:	mov	r1, r8
   10bc4:	mov	r0, r7
   10bc8:	blx	r3
   10bcc:	cmp	r6, r4
   10bd0:	bne	10bb4 <__libc_csu_init@@Base+0x34>
   10bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bd8:	andeq	r0, r1, ip, ror r3
   10bdc:	andeq	r0, r1, r4, ror r3

00010be0 <__libc_csu_fini@@Base>:
   10be0:	bx	lr

Disassembly of section .fini:

00010be4 <.fini>:
   10be4:	push	{r3, lr}
   10be8:	pop	{r3, pc}
