
../repos/coreutils/src/users:     file format elf32-littlearm


Disassembly of section .init:

00010d74 <.init>:
   10d74:	push	{r3, lr}
   10d78:	bl	11028 <putchar_unlocked@plt+0x48>
   10d7c:	pop	{r3, pc}

Disassembly of section .plt:

00010d80 <calloc@plt-0x14>:
   10d80:	push	{lr}		; (str lr, [sp, #-4]!)
   10d84:	ldr	lr, [pc, #4]	; 10d90 <calloc@plt-0x4>
   10d88:	add	lr, pc, lr
   10d8c:	ldr	pc, [lr, #8]!
   10d90:	andeq	r5, r1, r0, ror r2

00010d94 <calloc@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #624]!	; 0x270

00010da0 <fputs_unlocked@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #616]!	; 0x268

00010dac <strcmp@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #608]!	; 0x260

00010db8 <fflush@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #600]!	; 0x258

00010dc4 <utmpxname@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #592]!	; 0x250

00010dd0 <free@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #584]!	; 0x248

00010ddc <_exit@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #576]!	; 0x240

00010de8 <memcpy@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #568]!	; 0x238

00010df4 <mbsinit@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #560]!	; 0x230

00010e00 <dcgettext@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #552]!	; 0x228

00010e0c <setutxent@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #544]!	; 0x220

00010e18 <realloc@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #536]!	; 0x218

00010e24 <textdomain@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #528]!	; 0x210

00010e30 <iswprint@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #520]!	; 0x208

00010e3c <fwrite@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #512]!	; 0x200

00010e48 <lseek64@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #504]!	; 0x1f8

00010e54 <__ctype_get_mb_cur_max@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #488]!	; 0x1e8

00010e6c <ferror_unlocked@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #480]!	; 0x1e0

00010e78 <mbrtowc@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #472]!	; 0x1d8

00010e84 <error@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e90 <malloc@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #456]!	; 0x1c8

00010e9c <__libc_start_main@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #448]!	; 0x1c0

00010ea8 <__freading@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb4 <__gmon_start__@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec0 <getopt_long@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #424]!	; 0x1a8

00010ecc <kill@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ed8 <__ctype_b_loc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #408]!	; 0x198

00010ee4 <exit@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #400]!	; 0x190

00010ef0 <bcmp@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #392]!	; 0x188

00010efc <strlen@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #384]!	; 0x180

00010f08 <__errno_location@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #376]!	; 0x178

00010f14 <__cxa_atexit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #368]!	; 0x170

00010f20 <memset@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #360]!	; 0x168

00010f2c <strncpy@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #352]!	; 0x160

00010f38 <__printf_chk@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #344]!	; 0x158

00010f44 <fileno@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #336]!	; 0x150

00010f50 <__fprintf_chk@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #328]!	; 0x148

00010f5c <fclose@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #320]!	; 0x140

00010f68 <fseeko64@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #312]!	; 0x138

00010f74 <endutxent@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #304]!	; 0x130

00010f80 <setlocale@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #296]!	; 0x128

00010f8c <strrchr@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #288]!	; 0x120

00010f98 <nl_langinfo@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #280]!	; 0x118

00010fa4 <qsort@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #272]!	; 0x110

00010fb0 <bindtextdomain@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #264]!	; 0x108

00010fbc <strncmp@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #256]!	; 0x100

00010fc8 <abort@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #248]!	; 0xf8

00010fd4 <getutxent@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #240]!	; 0xf0

00010fe0 <putchar_unlocked@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #232]!	; 0xe8

Disassembly of section .text:

00010fec <.text>:
   10fec:	mov	fp, #0
   10ff0:	mov	lr, #0
   10ff4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ff8:	mov	r2, sp
   10ffc:	push	{r2}		; (str r2, [sp, #-4]!)
   11000:	push	{r0}		; (str r0, [sp, #-4]!)
   11004:	ldr	ip, [pc, #16]	; 1101c <putchar_unlocked@plt+0x3c>
   11008:	push	{ip}		; (str ip, [sp, #-4]!)
   1100c:	ldr	r0, [pc, #12]	; 11020 <putchar_unlocked@plt+0x40>
   11010:	ldr	r3, [pc, #12]	; 11024 <putchar_unlocked@plt+0x44>
   11014:	bl	10e9c <__libc_start_main@plt>
   11018:	bl	10fc8 <abort@plt>
   1101c:	andeq	r4, r1, r0, lsl #16
   11020:	andeq	r1, r1, r4, ror #6
   11024:	andeq	r4, r1, r0, lsr #15
   11028:	ldr	r3, [pc, #20]	; 11044 <putchar_unlocked@plt+0x64>
   1102c:	ldr	r2, [pc, #20]	; 11048 <putchar_unlocked@plt+0x68>
   11030:	add	r3, pc, r3
   11034:	ldr	r2, [r3, r2]
   11038:	cmp	r2, #0
   1103c:	bxeq	lr
   11040:	b	10eb4 <__gmon_start__@plt>
   11044:	andeq	r4, r1, r8, asr #31
   11048:	ldrdeq	r0, [r0], -r4
   1104c:	ldr	r0, [pc, #24]	; 1106c <putchar_unlocked@plt+0x8c>
   11050:	ldr	r3, [pc, #24]	; 11070 <putchar_unlocked@plt+0x90>
   11054:	cmp	r3, r0
   11058:	bxeq	lr
   1105c:	ldr	r3, [pc, #16]	; 11074 <putchar_unlocked@plt+0x94>
   11060:	cmp	r3, #0
   11064:	bxeq	lr
   11068:	bx	r3
   1106c:	andeq	r6, r2, r8, lsr #2
   11070:	andeq	r6, r2, r8, lsr #2
   11074:	andeq	r0, r0, r0
   11078:	ldr	r0, [pc, #36]	; 110a4 <putchar_unlocked@plt+0xc4>
   1107c:	ldr	r1, [pc, #36]	; 110a8 <putchar_unlocked@plt+0xc8>
   11080:	sub	r1, r1, r0
   11084:	asr	r1, r1, #2
   11088:	add	r1, r1, r1, lsr #31
   1108c:	asrs	r1, r1, #1
   11090:	bxeq	lr
   11094:	ldr	r3, [pc, #16]	; 110ac <putchar_unlocked@plt+0xcc>
   11098:	cmp	r3, #0
   1109c:	bxeq	lr
   110a0:	bx	r3
   110a4:	andeq	r6, r2, r8, lsr #2
   110a8:	andeq	r6, r2, r8, lsr #2
   110ac:	andeq	r0, r0, r0
   110b0:	push	{r4, lr}
   110b4:	ldr	r4, [pc, #24]	; 110d4 <putchar_unlocked@plt+0xf4>
   110b8:	ldrb	r3, [r4]
   110bc:	cmp	r3, #0
   110c0:	popne	{r4, pc}
   110c4:	bl	1104c <putchar_unlocked@plt+0x6c>
   110c8:	mov	r3, #1
   110cc:	strb	r3, [r4]
   110d0:	pop	{r4, pc}
   110d4:	andeq	r6, r2, r4, asr #2
   110d8:	b	11078 <putchar_unlocked@plt+0x98>
   110dc:	push	{fp, lr}
   110e0:	mov	fp, sp
   110e4:	mov	r4, r0
   110e8:	cmp	r0, #0
   110ec:	bne	11198 <putchar_unlocked@plt+0x1b8>
   110f0:	movw	r1, #18515	; 0x4853
   110f4:	movt	r1, #1
   110f8:	mov	r0, #0
   110fc:	mov	r2, #5
   11100:	bl	10e00 <dcgettext@plt>
   11104:	mov	r1, r0
   11108:	movw	r0, #24912	; 0x6150
   1110c:	movt	r0, #2
   11110:	ldr	r2, [r0]
   11114:	mov	r0, #1
   11118:	bl	10f38 <__printf_chk@plt>
   1111c:	movw	r1, #18545	; 0x4871
   11120:	movt	r1, #1
   11124:	mov	r0, #0
   11128:	mov	r2, #5
   1112c:	bl	10e00 <dcgettext@plt>
   11130:	mov	r1, r0
   11134:	movw	r2, #18657	; 0x48e1
   11138:	movt	r2, #1
   1113c:	movw	r3, #18671	; 0x48ef
   11140:	movt	r3, #1
   11144:	mov	r0, #1
   11148:	bl	10f38 <__printf_chk@plt>
   1114c:	movw	r1, #18685	; 0x48fd
   11150:	movt	r1, #1
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	bl	10e00 <dcgettext@plt>
   11160:	movw	r5, #24892	; 0x613c
   11164:	movt	r5, #2
   11168:	ldr	r1, [r5]
   1116c:	bl	10da0 <fputs_unlocked@plt>
   11170:	movw	r1, #18730	; 0x492a
   11174:	movt	r1, #1
   11178:	mov	r0, #0
   1117c:	mov	r2, #5
   11180:	bl	10e00 <dcgettext@plt>
   11184:	ldr	r1, [r5]
   11188:	bl	10da0 <fputs_unlocked@plt>
   1118c:	bl	111dc <putchar_unlocked@plt+0x1fc>
   11190:	mov	r0, r4
   11194:	bl	10ee4 <exit@plt>
   11198:	movw	r0, #24888	; 0x6138
   1119c:	movt	r0, #2
   111a0:	ldr	r5, [r0]
   111a4:	movw	r1, #18476	; 0x482c
   111a8:	movt	r1, #1
   111ac:	mov	r0, #0
   111b0:	mov	r2, #5
   111b4:	bl	10e00 <dcgettext@plt>
   111b8:	mov	r2, r0
   111bc:	movw	r0, #24912	; 0x6150
   111c0:	movt	r0, #2
   111c4:	ldr	r3, [r0]
   111c8:	mov	r0, r5
   111cc:	mov	r1, #1
   111d0:	bl	10f50 <__fprintf_chk@plt>
   111d4:	mov	r0, r4
   111d8:	bl	10ee4 <exit@plt>
   111dc:	push	{r4, r5, r6, sl, fp, lr}
   111e0:	add	fp, sp, #16
   111e4:	sub	sp, sp, #56	; 0x38
   111e8:	movw	r0, #19192	; 0x4af8
   111ec:	movt	r0, #1
   111f0:	add	r1, r0, #32
   111f4:	mov	r2, #48	; 0x30
   111f8:	vld1.64	{d16-d17}, [r1]
   111fc:	mov	r6, sp
   11200:	add	r1, r6, #32
   11204:	add	r3, r0, #16
   11208:	vld1.64	{d18-d19}, [r0], r2
   1120c:	vld1.64	{d20-d21}, [r3]
   11210:	vldr	d22, [r0]
   11214:	vst1.64	{d16-d17}, [r1]
   11218:	add	r0, r6, #16
   1121c:	vst1.64	{d20-d21}, [r0]
   11220:	mov	r0, r6
   11224:	vst1.64	{d18-d19}, [r0], r2
   11228:	vstr	d22, [r0]
   1122c:	ldr	r1, [sp]
   11230:	cmp	r1, #0
   11234:	movw	r4, #18784	; 0x4960
   11238:	movt	r4, #1
   1123c:	beq	11264 <putchar_unlocked@plt+0x284>
   11240:	mov	r6, sp
   11244:	movw	r5, #18784	; 0x4960
   11248:	movt	r5, #1
   1124c:	mov	r0, r5
   11250:	bl	10dac <strcmp@plt>
   11254:	cmp	r0, #0
   11258:	ldrne	r1, [r6, #8]!
   1125c:	cmpne	r1, #0
   11260:	bne	1124c <putchar_unlocked@plt+0x26c>
   11264:	ldr	r5, [r6, #4]
   11268:	movw	r1, #18973	; 0x4a1d
   1126c:	movt	r1, #1
   11270:	mov	r0, #0
   11274:	mov	r2, #5
   11278:	bl	10e00 <dcgettext@plt>
   1127c:	mov	r1, r0
   11280:	movw	r2, #18814	; 0x497e
   11284:	movt	r2, #1
   11288:	movw	r3, #18996	; 0x4a34
   1128c:	movt	r3, #1
   11290:	mov	r0, #1
   11294:	bl	10f38 <__printf_chk@plt>
   11298:	cmp	r5, #0
   1129c:	moveq	r5, r4
   112a0:	mov	r0, #5
   112a4:	mov	r1, #0
   112a8:	bl	10f80 <setlocale@plt>
   112ac:	cmp	r0, #0
   112b0:	beq	112f0 <putchar_unlocked@plt+0x310>
   112b4:	movw	r1, #19036	; 0x4a5c
   112b8:	movt	r1, #1
   112bc:	mov	r2, #3
   112c0:	bl	10fbc <strncmp@plt>
   112c4:	cmp	r0, #0
   112c8:	beq	112f0 <putchar_unlocked@plt+0x310>
   112cc:	movw	r1, #19040	; 0x4a60
   112d0:	movt	r1, #1
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	bl	10e00 <dcgettext@plt>
   112e0:	movw	r1, #24892	; 0x613c
   112e4:	movt	r1, #2
   112e8:	ldr	r1, [r1]
   112ec:	bl	10da0 <fputs_unlocked@plt>
   112f0:	movw	r1, #19111	; 0x4aa7
   112f4:	movt	r1, #1
   112f8:	mov	r0, #0
   112fc:	mov	r2, #5
   11300:	bl	10e00 <dcgettext@plt>
   11304:	mov	r1, r0
   11308:	movw	r2, #18996	; 0x4a34
   1130c:	movt	r2, #1
   11310:	mov	r0, #1
   11314:	mov	r3, r4
   11318:	bl	10f38 <__printf_chk@plt>
   1131c:	movw	r0, #18906	; 0x49da
   11320:	movt	r0, #1
   11324:	movw	r6, #18656	; 0x48e0
   11328:	movt	r6, #1
   1132c:	cmp	r5, r4
   11330:	moveq	r6, r0
   11334:	movw	r1, #19138	; 0x4ac2
   11338:	movt	r1, #1
   1133c:	mov	r0, #0
   11340:	mov	r2, #5
   11344:	bl	10e00 <dcgettext@plt>
   11348:	mov	r1, r0
   1134c:	mov	r0, #1
   11350:	mov	r2, r5
   11354:	mov	r3, r6
   11358:	sub	sp, fp, #16
   1135c:	pop	{r4, r5, r6, sl, fp, lr}
   11360:	b	10f38 <__printf_chk@plt>
   11364:	push	{r4, r5, r6, sl, fp, lr}
   11368:	add	fp, sp, #16
   1136c:	sub	sp, sp, #24
   11370:	mov	r4, r1
   11374:	mov	r5, r0
   11378:	ldr	r0, [r1]
   1137c:	bl	118c8 <putchar_unlocked@plt+0x8e8>
   11380:	movw	r1, #18656	; 0x48e0
   11384:	movt	r1, #1
   11388:	mov	r0, #6
   1138c:	bl	10f80 <setlocale@plt>
   11390:	movw	r6, #18818	; 0x4982
   11394:	movt	r6, #1
   11398:	movw	r1, #18790	; 0x4966
   1139c:	movt	r1, #1
   113a0:	mov	r0, r6
   113a4:	bl	10fb0 <bindtextdomain@plt>
   113a8:	mov	r0, r6
   113ac:	bl	10e24 <textdomain@plt>
   113b0:	movw	r0, #5700	; 0x1644
   113b4:	movt	r0, #1
   113b8:	bl	14804 <putchar_unlocked@plt+0x3824>
   113bc:	movw	r0, #24800	; 0x60e0
   113c0:	movt	r0, #2
   113c4:	ldr	r0, [r0]
   113c8:	mov	ip, #0
   113cc:	movw	r2, #18845	; 0x499d
   113d0:	movt	r2, #1
   113d4:	movw	r3, #18828	; 0x498c
   113d8:	movt	r3, #1
   113dc:	movw	r6, #4316	; 0x10dc
   113e0:	movt	r6, #1
   113e4:	mov	r1, #1
   113e8:	stm	sp, {r0, r1, r6}
   113ec:	str	r3, [sp, #12]
   113f0:	str	r2, [sp, #16]
   113f4:	str	ip, [sp, #20]
   113f8:	movw	r2, #18784	; 0x4960
   113fc:	movt	r2, #1
   11400:	movw	r3, #18814	; 0x497e
   11404:	movt	r3, #1
   11408:	mov	r0, r5
   1140c:	mov	r1, r4
   11410:	bl	11804 <putchar_unlocked@plt+0x824>
   11414:	movw	r6, #24880	; 0x6130
   11418:	movt	r6, #2
   1141c:	ldr	r0, [r6]
   11420:	sub	r1, r5, r0
   11424:	cmp	r1, #1
   11428:	beq	11444 <putchar_unlocked@plt+0x464>
   1142c:	cmp	r1, #0
   11430:	bne	1145c <putchar_unlocked@plt+0x47c>
   11434:	movw	r0, #18657	; 0x48e1
   11438:	movt	r0, #1
   1143c:	mov	r1, #1
   11440:	b	1144c <putchar_unlocked@plt+0x46c>
   11444:	ldr	r0, [r4, r0, lsl #2]
   11448:	mov	r1, #0
   1144c:	bl	114a0 <putchar_unlocked@plt+0x4c0>
   11450:	mov	r0, #0
   11454:	sub	sp, fp, #16
   11458:	pop	{r4, r5, r6, sl, fp, pc}
   1145c:	movw	r1, #18861	; 0x49ad
   11460:	movt	r1, #1
   11464:	mov	r0, #0
   11468:	mov	r2, #5
   1146c:	bl	10e00 <dcgettext@plt>
   11470:	mov	r5, r0
   11474:	ldr	r0, [r6]
   11478:	add	r0, r4, r0, lsl #2
   1147c:	ldr	r0, [r0, #4]
   11480:	bl	130bc <putchar_unlocked@plt+0x20dc>
   11484:	mov	r3, r0
   11488:	mov	r0, #0
   1148c:	mov	r1, #0
   11490:	mov	r2, r5
   11494:	bl	10e84 <error@plt>
   11498:	mov	r0, #1
   1149c:	bl	110dc <putchar_unlocked@plt+0xfc>
   114a0:	push	{r4, r5, fp, lr}
   114a4:	add	fp, sp, #8
   114a8:	sub	sp, sp, #8
   114ac:	mov	r3, r1
   114b0:	mov	r4, r0
   114b4:	add	r1, sp, #4
   114b8:	mov	r2, sp
   114bc:	bl	13538 <putchar_unlocked@plt+0x2558>
   114c0:	cmp	r0, #0
   114c4:	bne	114e4 <putchar_unlocked@plt+0x504>
   114c8:	ldr	r1, [sp]
   114cc:	ldr	r0, [sp, #4]
   114d0:	bl	11514 <putchar_unlocked@plt+0x534>
   114d4:	ldr	r0, [sp]
   114d8:	bl	1172c <putchar_unlocked@plt+0x74c>
   114dc:	sub	sp, fp, #8
   114e0:	pop	{r4, r5, fp, pc}
   114e4:	bl	10f08 <__errno_location@plt>
   114e8:	ldr	r5, [r0]
   114ec:	mov	r0, #0
   114f0:	mov	r1, #3
   114f4:	mov	r2, r4
   114f8:	bl	12f7c <putchar_unlocked@plt+0x1f9c>
   114fc:	mov	r3, r0
   11500:	movw	r2, #19279	; 0x4b4f
   11504:	movt	r2, #1
   11508:	mov	r0, #1
   1150c:	mov	r1, r5
   11510:	bl	10e84 <error@plt>
   11514:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11518:	add	fp, sp, #24
   1151c:	mov	r6, r1
   11520:	mov	r7, r0
   11524:	mov	r1, #4
   11528:	bl	13c08 <putchar_unlocked@plt+0x2c28>
   1152c:	mov	r4, r0
   11530:	cmp	r7, #0
   11534:	beq	115f4 <putchar_unlocked@plt+0x614>
   11538:	mov	r5, #0
   1153c:	b	1154c <putchar_unlocked@plt+0x56c>
   11540:	add	r6, r6, #384	; 0x180
   11544:	cmp	r7, #0
   11548:	beq	1157c <putchar_unlocked@plt+0x59c>
   1154c:	ldrb	r0, [r6, #44]	; 0x2c
   11550:	sub	r7, r7, #1
   11554:	cmp	r0, #0
   11558:	beq	11540 <putchar_unlocked@plt+0x560>
   1155c:	ldrh	r0, [r6]
   11560:	cmp	r0, #7
   11564:	bne	11540 <putchar_unlocked@plt+0x560>
   11568:	mov	r0, r6
   1156c:	bl	134d4 <putchar_unlocked@plt+0x24f4>
   11570:	str	r0, [r4, r5, lsl #2]
   11574:	add	r5, r5, #1
   11578:	b	11540 <putchar_unlocked@plt+0x560>
   1157c:	movw	r3, #5656	; 0x1618
   11580:	movt	r3, #1
   11584:	mov	r0, r4
   11588:	mov	r1, r5
   1158c:	mov	r2, #4
   11590:	bl	10fa4 <qsort@plt>
   11594:	cmp	r5, #0
   11598:	beq	1160c <putchar_unlocked@plt+0x62c>
   1159c:	sub	r6, r5, #1
   115a0:	mov	r7, #0
   115a4:	movw	r8, #24892	; 0x613c
   115a8:	movt	r8, #2
   115ac:	ldr	r0, [r4, r7, lsl #2]
   115b0:	ldr	r1, [r8]
   115b4:	bl	10da0 <fputs_unlocked@plt>
   115b8:	cmp	r7, r6
   115bc:	mov	r0, #10
   115c0:	movwcc	r0, #32
   115c4:	bl	10fe0 <putchar_unlocked@plt>
   115c8:	add	r7, r7, #1
   115cc:	cmp	r5, r7
   115d0:	bne	115ac <putchar_unlocked@plt+0x5cc>
   115d4:	cmp	r5, #0
   115d8:	beq	1160c <putchar_unlocked@plt+0x62c>
   115dc:	mov	r6, r4
   115e0:	ldr	r0, [r6], #4
   115e4:	bl	1172c <putchar_unlocked@plt+0x74c>
   115e8:	subs	r5, r5, #1
   115ec:	bne	115e0 <putchar_unlocked@plt+0x600>
   115f0:	b	1160c <putchar_unlocked@plt+0x62c>
   115f4:	movw	r3, #5656	; 0x1618
   115f8:	movt	r3, #1
   115fc:	mov	r0, r4
   11600:	mov	r1, #0
   11604:	mov	r2, #4
   11608:	bl	10fa4 <qsort@plt>
   1160c:	mov	r0, r4
   11610:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11614:	b	1172c <putchar_unlocked@plt+0x74c>
   11618:	ldr	r1, [r1]
   1161c:	ldr	r0, [r0]
   11620:	b	10dac <strcmp@plt>
   11624:	movw	r1, #24904	; 0x6148
   11628:	movt	r1, #2
   1162c:	str	r0, [r1]
   11630:	bx	lr
   11634:	movw	r1, #24908	; 0x614c
   11638:	movt	r1, #2
   1163c:	strb	r0, [r1]
   11640:	bx	lr
   11644:	push	{r4, r5, r6, sl, fp, lr}
   11648:	add	fp, sp, #16
   1164c:	sub	sp, sp, #8
   11650:	movw	r0, #24892	; 0x613c
   11654:	movt	r0, #2
   11658:	ldr	r0, [r0]
   1165c:	bl	14334 <putchar_unlocked@plt+0x3354>
   11660:	cmp	r0, #0
   11664:	beq	1168c <putchar_unlocked@plt+0x6ac>
   11668:	movw	r0, #24908	; 0x614c
   1166c:	movt	r0, #2
   11670:	ldrb	r0, [r0]
   11674:	cmp	r0, #0
   11678:	beq	116ac <putchar_unlocked@plt+0x6cc>
   1167c:	bl	10f08 <__errno_location@plt>
   11680:	ldr	r0, [r0]
   11684:	cmp	r0, #32
   11688:	bne	116ac <putchar_unlocked@plt+0x6cc>
   1168c:	movw	r0, #24888	; 0x6138
   11690:	movt	r0, #2
   11694:	ldr	r0, [r0]
   11698:	bl	14334 <putchar_unlocked@plt+0x3354>
   1169c:	cmp	r0, #0
   116a0:	subeq	sp, fp, #16
   116a4:	popeq	{r4, r5, r6, sl, fp, pc}
   116a8:	b	1171c <putchar_unlocked@plt+0x73c>
   116ac:	movw	r1, #19263	; 0x4b3f
   116b0:	movt	r1, #1
   116b4:	mov	r0, #0
   116b8:	mov	r2, #5
   116bc:	bl	10e00 <dcgettext@plt>
   116c0:	mov	r4, r0
   116c4:	movw	r0, #24904	; 0x6148
   116c8:	movt	r0, #2
   116cc:	ldr	r6, [r0]
   116d0:	bl	10f08 <__errno_location@plt>
   116d4:	ldr	r5, [r0]
   116d8:	cmp	r6, #0
   116dc:	bne	116f8 <putchar_unlocked@plt+0x718>
   116e0:	movw	r2, #19279	; 0x4b4f
   116e4:	movt	r2, #1
   116e8:	mov	r0, #0
   116ec:	mov	r1, r5
   116f0:	mov	r3, r4
   116f4:	b	11718 <putchar_unlocked@plt+0x738>
   116f8:	mov	r0, r6
   116fc:	bl	12f6c <putchar_unlocked@plt+0x1f8c>
   11700:	mov	r3, r0
   11704:	str	r4, [sp]
   11708:	movw	r2, #19275	; 0x4b4b
   1170c:	movt	r2, #1
   11710:	mov	r0, #0
   11714:	mov	r1, r5
   11718:	bl	10e84 <error@plt>
   1171c:	movw	r0, #24804	; 0x60e4
   11720:	movt	r0, #2
   11724:	ldr	r0, [r0]
   11728:	bl	10ddc <_exit@plt>
   1172c:	push	{r4, r5, r6, sl, fp, lr}
   11730:	add	fp, sp, #16
   11734:	mov	r4, r0
   11738:	bl	10f08 <__errno_location@plt>
   1173c:	mov	r5, r0
   11740:	ldr	r6, [r0]
   11744:	mov	r0, r4
   11748:	bl	10dd0 <free@plt>
   1174c:	str	r6, [r5]
   11750:	pop	{r4, r5, r6, sl, fp, pc}
   11754:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11758:	add	fp, sp, #24
   1175c:	sub	sp, sp, #8
   11760:	movw	r6, #24896	; 0x6140
   11764:	movt	r6, #2
   11768:	ldr	r7, [r6]
   1176c:	mov	r4, #0
   11770:	str	r4, [r6]
   11774:	cmp	r0, #2
   11778:	bne	117ec <putchar_unlocked@plt+0x80c>
   1177c:	mov	r8, r3
   11780:	mov	r5, r2
   11784:	str	r4, [sp]
   11788:	movw	r2, #19282	; 0x4b52
   1178c:	movt	r2, #1
   11790:	movw	r3, #19300	; 0x4b64
   11794:	movt	r3, #1
   11798:	mov	r0, #2
   1179c:	bl	10ec0 <getopt_long@plt>
   117a0:	cmp	r0, #104	; 0x68
   117a4:	beq	117e0 <putchar_unlocked@plt+0x800>
   117a8:	cmp	r0, #118	; 0x76
   117ac:	bne	117ec <putchar_unlocked@plt+0x80c>
   117b0:	ldr	r3, [fp, #8]
   117b4:	add	r1, fp, #16
   117b8:	str	r1, [sp, #4]
   117bc:	movw	r0, #24892	; 0x613c
   117c0:	movt	r0, #2
   117c4:	ldr	r0, [r0]
   117c8:	str	r1, [sp]
   117cc:	mov	r1, r5
   117d0:	mov	r2, r8
   117d4:	bl	13a14 <putchar_unlocked@plt+0x2a34>
   117d8:	mov	r0, #0
   117dc:	bl	10ee4 <exit@plt>
   117e0:	ldr	r1, [fp, #12]
   117e4:	mov	r0, #0
   117e8:	blx	r1
   117ec:	movw	r0, #24880	; 0x6130
   117f0:	movt	r0, #2
   117f4:	str	r4, [r0]
   117f8:	str	r7, [r6]
   117fc:	sub	sp, fp, #24
   11800:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11804:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11808:	add	fp, sp, #24
   1180c:	sub	sp, sp, #8
   11810:	mov	r8, r3
   11814:	mov	r9, r2
   11818:	movw	r7, #24896	; 0x6140
   1181c:	movt	r7, #2
   11820:	ldr	r4, [r7]
   11824:	mov	r2, #1
   11828:	str	r2, [r7]
   1182c:	mov	r6, #0
   11830:	str	r6, [sp]
   11834:	ldr	r3, [fp, #12]
   11838:	movw	r5, #18656	; 0x48e0
   1183c:	movt	r5, #1
   11840:	movw	r2, #19282	; 0x4b52
   11844:	movt	r2, #1
   11848:	cmp	r3, #0
   1184c:	movne	r2, r5
   11850:	movw	r3, #19300	; 0x4b64
   11854:	movt	r3, #1
   11858:	bl	10ec0 <getopt_long@plt>
   1185c:	cmn	r0, #1
   11860:	beq	1188c <putchar_unlocked@plt+0x8ac>
   11864:	cmp	r0, #104	; 0x68
   11868:	beq	11880 <putchar_unlocked@plt+0x8a0>
   1186c:	cmp	r0, #118	; 0x76
   11870:	beq	11898 <putchar_unlocked@plt+0x8b8>
   11874:	movw	r0, #24804	; 0x60e4
   11878:	movt	r0, #2
   1187c:	ldr	r6, [r0]
   11880:	ldr	r1, [fp, #16]
   11884:	mov	r0, r6
   11888:	blx	r1
   1188c:	str	r4, [r7]
   11890:	sub	sp, fp, #24
   11894:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11898:	ldr	r3, [fp, #8]
   1189c:	add	r1, fp, #20
   118a0:	str	r1, [sp, #4]
   118a4:	movw	r0, #24892	; 0x613c
   118a8:	movt	r0, #2
   118ac:	ldr	r0, [r0]
   118b0:	str	r1, [sp]
   118b4:	mov	r1, r9
   118b8:	mov	r2, r8
   118bc:	bl	13a14 <putchar_unlocked@plt+0x2a34>
   118c0:	mov	r0, #0
   118c4:	bl	10ee4 <exit@plt>
   118c8:	push	{r4, r5, fp, lr}
   118cc:	add	fp, sp, #8
   118d0:	cmp	r0, #0
   118d4:	beq	11968 <putchar_unlocked@plt+0x988>
   118d8:	mov	r4, r0
   118dc:	mov	r1, #47	; 0x2f
   118e0:	bl	10f8c <strrchr@plt>
   118e4:	cmp	r0, #0
   118e8:	mov	r5, r4
   118ec:	addne	r5, r0, #1
   118f0:	sub	r0, r5, r4
   118f4:	cmp	r0, #7
   118f8:	blt	1194c <putchar_unlocked@plt+0x96c>
   118fc:	sub	r0, r5, #7
   11900:	movw	r1, #19404	; 0x4bcc
   11904:	movt	r1, #1
   11908:	mov	r2, #7
   1190c:	bl	10fbc <strncmp@plt>
   11910:	cmp	r0, #0
   11914:	bne	1194c <putchar_unlocked@plt+0x96c>
   11918:	movw	r1, #19412	; 0x4bd4
   1191c:	movt	r1, #1
   11920:	mov	r0, r5
   11924:	mov	r2, #3
   11928:	bl	10fbc <strncmp@plt>
   1192c:	cmp	r0, #0
   11930:	beq	1193c <putchar_unlocked@plt+0x95c>
   11934:	mov	r4, r5
   11938:	b	1194c <putchar_unlocked@plt+0x96c>
   1193c:	add	r4, r5, #3
   11940:	movw	r0, #24872	; 0x6128
   11944:	movt	r0, #2
   11948:	str	r4, [r0]
   1194c:	movw	r0, #24876	; 0x612c
   11950:	movt	r0, #2
   11954:	str	r4, [r0]
   11958:	movw	r0, #24912	; 0x6150
   1195c:	movt	r0, #2
   11960:	str	r4, [r0]
   11964:	pop	{r4, r5, fp, pc}
   11968:	movw	r0, #24888	; 0x6138
   1196c:	movt	r0, #2
   11970:	ldr	r3, [r0]
   11974:	movw	r0, #19348	; 0x4b94
   11978:	movt	r0, #1
   1197c:	mov	r1, #55	; 0x37
   11980:	mov	r2, #1
   11984:	bl	10e3c <fwrite@plt>
   11988:	bl	10fc8 <abort@plt>
   1198c:	push	{r4, r5, r6, sl, fp, lr}
   11990:	add	fp, sp, #16
   11994:	mov	r4, r0
   11998:	movw	r0, #24920	; 0x6158
   1199c:	movt	r0, #2
   119a0:	cmp	r4, #0
   119a4:	moveq	r4, r0
   119a8:	bl	10f08 <__errno_location@plt>
   119ac:	mov	r5, r0
   119b0:	ldr	r6, [r0]
   119b4:	mov	r0, r4
   119b8:	mov	r1, #48	; 0x30
   119bc:	bl	13e54 <putchar_unlocked@plt+0x2e74>
   119c0:	str	r6, [r5]
   119c4:	pop	{r4, r5, r6, sl, fp, pc}
   119c8:	movw	r1, #24920	; 0x6158
   119cc:	movt	r1, #2
   119d0:	cmp	r0, #0
   119d4:	movne	r1, r0
   119d8:	ldr	r0, [r1]
   119dc:	bx	lr
   119e0:	movw	r2, #24920	; 0x6158
   119e4:	movt	r2, #2
   119e8:	cmp	r0, #0
   119ec:	movne	r2, r0
   119f0:	str	r1, [r2]
   119f4:	bx	lr
   119f8:	movw	r3, #24920	; 0x6158
   119fc:	movt	r3, #2
   11a00:	cmp	r0, #0
   11a04:	movne	r3, r0
   11a08:	ubfx	r0, r1, #5, #3
   11a0c:	add	ip, r3, r0, lsl #2
   11a10:	ldr	r3, [ip, #8]
   11a14:	and	r1, r1, #31
   11a18:	mov	r0, #1
   11a1c:	and	r0, r0, r3, lsr r1
   11a20:	and	r2, r2, #1
   11a24:	eor	r2, r0, r2
   11a28:	eor	r1, r3, r2, lsl r1
   11a2c:	str	r1, [ip, #8]
   11a30:	bx	lr
   11a34:	movw	r2, #24920	; 0x6158
   11a38:	movt	r2, #2
   11a3c:	cmp	r0, #0
   11a40:	movne	r2, r0
   11a44:	ldr	r0, [r2, #4]
   11a48:	str	r1, [r2, #4]
   11a4c:	bx	lr
   11a50:	push	{fp, lr}
   11a54:	mov	fp, sp
   11a58:	movw	r3, #24920	; 0x6158
   11a5c:	movt	r3, #2
   11a60:	cmp	r0, #0
   11a64:	movne	r3, r0
   11a68:	mov	r0, #10
   11a6c:	str	r0, [r3]
   11a70:	cmp	r1, #0
   11a74:	cmpne	r2, #0
   11a78:	bne	11a80 <putchar_unlocked@plt+0xaa0>
   11a7c:	bl	10fc8 <abort@plt>
   11a80:	str	r1, [r3, #40]	; 0x28
   11a84:	str	r2, [r3, #44]	; 0x2c
   11a88:	pop	{fp, pc}
   11a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a90:	add	fp, sp, #28
   11a94:	sub	sp, sp, #20
   11a98:	mov	r8, r3
   11a9c:	mov	r9, r2
   11aa0:	mov	sl, r1
   11aa4:	mov	r7, r0
   11aa8:	ldr	r0, [fp, #8]
   11aac:	movw	r5, #24920	; 0x6158
   11ab0:	movt	r5, #2
   11ab4:	cmp	r0, #0
   11ab8:	movne	r5, r0
   11abc:	bl	10f08 <__errno_location@plt>
   11ac0:	mov	r4, r0
   11ac4:	ldm	r5, {r0, r1}
   11ac8:	ldr	r2, [r5, #40]	; 0x28
   11acc:	ldr	r3, [r5, #44]	; 0x2c
   11ad0:	ldr	r6, [r4]
   11ad4:	add	r5, r5, #8
   11ad8:	stm	sp, {r0, r1, r5}
   11adc:	str	r2, [sp, #12]
   11ae0:	str	r3, [sp, #16]
   11ae4:	mov	r0, r7
   11ae8:	mov	r1, sl
   11aec:	mov	r2, r9
   11af0:	mov	r3, r8
   11af4:	bl	11b04 <putchar_unlocked@plt+0xb24>
   11af8:	str	r6, [r4]
   11afc:	sub	sp, fp, #28
   11b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b08:	add	fp, sp, #28
   11b0c:	sub	sp, sp, #156	; 0x9c
   11b10:	mov	r9, r3
   11b14:	mov	r7, r1
   11b18:	mov	r6, r0
   11b1c:	str	r2, [fp, #-80]	; 0xffffffb0
   11b20:	add	r0, r2, #1
   11b24:	str	r0, [sp, #76]	; 0x4c
   11b28:	ldr	r0, [fp, #12]
   11b2c:	and	r1, r0, #1
   11b30:	str	r1, [sp, #40]	; 0x28
   11b34:	and	r1, r0, #4
   11b38:	str	r1, [sp, #36]	; 0x24
   11b3c:	ubfx	r4, r0, #1, #1
   11b40:	bl	10e54 <__ctype_get_mb_cur_max@plt>
   11b44:	str	r0, [sp, #44]	; 0x2c
   11b48:	ldr	r0, [fp, #24]
   11b4c:	str	r0, [sp, #88]	; 0x58
   11b50:	ldr	r0, [fp, #20]
   11b54:	str	r0, [sp, #80]	; 0x50
   11b58:	ldr	r1, [fp, #8]
   11b5c:	mov	r0, #0
   11b60:	str	r0, [sp, #84]	; 0x54
   11b64:	mov	r0, #0
   11b68:	str	r0, [fp, #-84]	; 0xffffffac
   11b6c:	mov	r0, #0
   11b70:	str	r0, [fp, #-72]	; 0xffffffb8
   11b74:	mov	r0, #0
   11b78:	mov	r2, #0
   11b7c:	str	r2, [fp, #-56]	; 0xffffffc8
   11b80:	mov	r2, #0
   11b84:	str	r2, [sp, #64]	; 0x40
   11b88:	mov	r2, #1
   11b8c:	str	r2, [fp, #-48]	; 0xffffffd0
   11b90:	cmp	r1, #10
   11b94:	bhi	12ac0 <putchar_unlocked@plt+0x1ae0>
   11b98:	mov	sl, r7
   11b9c:	mov	r7, r1
   11ba0:	add	r1, pc, #24
   11ba4:	mov	r8, #0
   11ba8:	mov	r2, #1
   11bac:	mov	r3, #0
   11bb0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11bb4:	mov	lr, r9
   11bb8:	mov	r5, r6
   11bbc:	ldr	pc, [r1, r7, lsl #2]
   11bc0:	muleq	r1, r4, ip
   11bc4:	ldrdeq	r1, [r1], -r4
   11bc8:	andeq	r1, r1, r4, lsr #25
   11bcc:	andeq	r1, r1, ip, lsl #25
   11bd0:	andeq	r1, r1, r8, asr #25
   11bd4:	andeq	r1, r1, r8, lsr #26
   11bd8:			; <UNDEFINED> instruction: 0x00011cb4
   11bdc:	andeq	r1, r1, r4, lsl #27
   11be0:	andeq	r1, r1, ip, ror #23
   11be4:	andeq	r1, r1, ip, ror #23
   11be8:	andeq	r1, r1, r8, lsl ip
   11bec:	movw	r0, #19496	; 0x4c28
   11bf0:	movt	r0, #1
   11bf4:	mov	r1, r7
   11bf8:	bl	130c8 <putchar_unlocked@plt+0x20e8>
   11bfc:	str	r0, [sp, #80]	; 0x50
   11c00:	movw	r0, #19498	; 0x4c2a
   11c04:	movt	r0, #1
   11c08:	mov	r1, r7
   11c0c:	bl	130c8 <putchar_unlocked@plt+0x20e8>
   11c10:	mov	r5, r6
   11c14:	str	r0, [sp, #88]	; 0x58
   11c18:	mov	r8, #0
   11c1c:	tst	r4, #1
   11c20:	str	r7, [fp, #-64]	; 0xffffffc0
   11c24:	bne	11c5c <putchar_unlocked@plt+0xc7c>
   11c28:	ldr	r0, [sp, #80]	; 0x50
   11c2c:	ldrb	r0, [r0]
   11c30:	cmp	r0, #0
   11c34:	beq	11c5c <putchar_unlocked@plt+0xc7c>
   11c38:	ldr	r1, [sp, #80]	; 0x50
   11c3c:	add	r1, r1, #1
   11c40:	mov	r8, #0
   11c44:	cmp	r8, sl
   11c48:	strbcc	r0, [r5, r8]
   11c4c:	ldrb	r0, [r1, r8]
   11c50:	add	r8, r8, #1
   11c54:	cmp	r0, #0
   11c58:	bne	11c44 <putchar_unlocked@plt+0xc64>
   11c5c:	ldr	r7, [sp, #88]	; 0x58
   11c60:	mov	r0, r7
   11c64:	bl	10efc <strlen@plt>
   11c68:	mov	r5, r6
   11c6c:	str	r0, [fp, #-72]	; 0xffffffb8
   11c70:	str	r7, [fp, #-84]	; 0xffffffac
   11c74:	mov	r2, #1
   11c78:	mov	r3, r4
   11c7c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11c80:	mov	lr, r9
   11c84:	ldr	r7, [fp, #-64]	; 0xffffffc0
   11c88:	b	11d84 <putchar_unlocked@plt+0xda4>
   11c8c:	mov	r0, #1
   11c90:	b	11cd4 <putchar_unlocked@plt+0xcf4>
   11c94:	mov	r7, #0
   11c98:	mov	r8, #0
   11c9c:	mov	r2, r0
   11ca0:	b	11d80 <putchar_unlocked@plt+0xda0>
   11ca4:	tst	r4, #1
   11ca8:	bne	11cd4 <putchar_unlocked@plt+0xcf4>
   11cac:	mov	r2, r0
   11cb0:	b	11cfc <putchar_unlocked@plt+0xd1c>
   11cb4:	mov	r0, #1
   11cb8:	str	r0, [fp, #-72]	; 0xffffffb8
   11cbc:	mov	r8, #0
   11cc0:	mov	r7, #5
   11cc4:	b	11d40 <putchar_unlocked@plt+0xd60>
   11cc8:	mov	r2, #1
   11ccc:	tst	r4, #1
   11cd0:	beq	11cfc <putchar_unlocked@plt+0xd1c>
   11cd4:	mov	r1, #1
   11cd8:	str	r1, [fp, #-72]	; 0xffffffb8
   11cdc:	mov	r8, #0
   11ce0:	mov	r7, #2
   11ce4:	movw	r1, #19498	; 0x4c2a
   11ce8:	movt	r1, #1
   11cec:	str	r1, [fp, #-84]	; 0xffffffac
   11cf0:	mov	r2, r0
   11cf4:	mov	r3, #1
   11cf8:	b	11d84 <putchar_unlocked@plt+0xda4>
   11cfc:	mov	r8, #1
   11d00:	mov	r7, #2
   11d04:	cmp	sl, #0
   11d08:	movne	r0, #39	; 0x27
   11d0c:	strbne	r0, [r5]
   11d10:	movw	r0, #19498	; 0x4c2a
   11d14:	movt	r0, #1
   11d18:	str	r0, [fp, #-84]	; 0xffffffac
   11d1c:	mov	r0, #1
   11d20:	str	r0, [fp, #-72]	; 0xffffffb8
   11d24:	b	11d80 <putchar_unlocked@plt+0xda0>
   11d28:	mov	r7, #5
   11d2c:	tst	r4, #1
   11d30:	beq	11d58 <putchar_unlocked@plt+0xd78>
   11d34:	mov	r0, #1
   11d38:	str	r0, [fp, #-72]	; 0xffffffb8
   11d3c:	mov	r8, #0
   11d40:	movw	r0, #19494	; 0x4c26
   11d44:	movt	r0, #1
   11d48:	str	r0, [fp, #-84]	; 0xffffffac
   11d4c:	mov	r2, #1
   11d50:	mov	r3, #1
   11d54:	b	11d84 <putchar_unlocked@plt+0xda4>
   11d58:	cmp	sl, #0
   11d5c:	movne	r0, #34	; 0x22
   11d60:	strbne	r0, [r5]
   11d64:	mov	r8, #1
   11d68:	movw	r0, #19494	; 0x4c26
   11d6c:	movt	r0, #1
   11d70:	str	r0, [fp, #-84]	; 0xffffffac
   11d74:	mov	r0, #1
   11d78:	str	r0, [fp, #-72]	; 0xffffffb8
   11d7c:	mov	r2, #1
   11d80:	mov	r3, #0
   11d84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11d88:	cmp	r0, #0
   11d8c:	movwne	r0, #1
   11d90:	and	r1, r0, r3
   11d94:	and	r1, r2, r1
   11d98:	str	r1, [sp, #56]	; 0x38
   11d9c:	sub	r1, r7, #2
   11da0:	clz	r1, r1
   11da4:	lsr	r1, r1, #5
   11da8:	and	r1, r1, r3
   11dac:	str	r1, [sp, #68]	; 0x44
   11db0:	str	r7, [fp, #-64]	; 0xffffffc0
   11db4:	subs	r1, r7, #2
   11db8:	movwne	r1, #1
   11dbc:	eor	r4, r3, #1
   11dc0:	str	r4, [fp, #-88]	; 0xffffffa8
   11dc4:	orr	r4, r1, r4
   11dc8:	str	r4, [sp, #72]	; 0x48
   11dcc:	and	r1, r1, r2
   11dd0:	and	r0, r0, r1
   11dd4:	str	r0, [fp, #-60]	; 0xffffffc4
   11dd8:	str	r3, [fp, #-76]	; 0xffffffb4
   11ddc:	orr	r0, r1, r3
   11de0:	eor	r0, r0, #1
   11de4:	ldr	r1, [fp, #16]
   11de8:	clz	r1, r1
   11dec:	lsr	r1, r1, #5
   11df0:	orr	r0, r1, r0
   11df4:	str	r0, [fp, #-68]	; 0xffffffbc
   11df8:	str	r2, [sp, #92]	; 0x5c
   11dfc:	eor	r0, r2, #1
   11e00:	str	r0, [sp, #60]	; 0x3c
   11e04:	mov	r7, #0
   11e08:	cmn	lr, #1
   11e0c:	beq	11e1c <putchar_unlocked@plt+0xe3c>
   11e10:	cmp	r7, lr
   11e14:	bne	11e28 <putchar_unlocked@plt+0xe48>
   11e18:	b	12934 <putchar_unlocked@plt+0x1954>
   11e1c:	ldrb	r0, [ip, r7]
   11e20:	cmp	r0, #0
   11e24:	beq	12934 <putchar_unlocked@plt+0x1954>
   11e28:	mov	r9, #0
   11e2c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11e30:	cmp	r0, #0
   11e34:	beq	11e68 <putchar_unlocked@plt+0xe88>
   11e38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11e3c:	add	r4, r7, r0
   11e40:	cmp	r0, #2
   11e44:	bcc	11e60 <putchar_unlocked@plt+0xe80>
   11e48:	cmn	lr, #1
   11e4c:	bne	11e60 <putchar_unlocked@plt+0xe80>
   11e50:	mov	r0, ip
   11e54:	bl	10efc <strlen@plt>
   11e58:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11e5c:	mov	lr, r0
   11e60:	cmp	r4, lr
   11e64:	bls	11e74 <putchar_unlocked@plt+0xe94>
   11e68:	mov	r0, #0
   11e6c:	str	r0, [fp, #-52]	; 0xffffffcc
   11e70:	b	11eb8 <putchar_unlocked@plt+0xed8>
   11e74:	mov	r4, lr
   11e78:	add	r0, ip, r7
   11e7c:	ldr	r1, [fp, #-84]	; 0xffffffac
   11e80:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11e84:	bl	10ef0 <bcmp@plt>
   11e88:	cmp	r0, #0
   11e8c:	mov	r1, r0
   11e90:	movwne	r1, #1
   11e94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11e98:	orr	r1, r1, r2
   11e9c:	tst	r1, #1
   11ea0:	beq	12a08 <putchar_unlocked@plt+0x1a28>
   11ea4:	clz	r0, r0
   11ea8:	lsr	r0, r0, #5
   11eac:	str	r0, [fp, #-52]	; 0xffffffcc
   11eb0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11eb4:	mov	lr, r4
   11eb8:	ldrb	r4, [ip, r7]
   11ebc:	cmp	r4, #126	; 0x7e
   11ec0:	bhi	123f0 <putchar_unlocked@plt+0x1410>
   11ec4:	mov	r6, #1
   11ec8:	mov	r2, #110	; 0x6e
   11ecc:	mov	r0, #97	; 0x61
   11ed0:	add	r3, pc, #4
   11ed4:	mov	r1, #0
   11ed8:	ldr	pc, [r3, r4, lsl #2]
   11edc:	andeq	r2, r1, r0, asr r2
   11ee0:	strdeq	r2, [r1], -r0
   11ee4:	strdeq	r2, [r1], -r0
   11ee8:	strdeq	r2, [r1], -r0
   11eec:	strdeq	r2, [r1], -r0
   11ef0:	strdeq	r2, [r1], -r0
   11ef4:	strdeq	r2, [r1], -r0
   11ef8:	andeq	r2, r1, r4, asr #9
   11efc:	andeq	r2, r1, r0, lsr r2
   11f00:	andeq	r2, r1, r8, lsr #4
   11f04:	andeq	r2, r1, ip, lsr r2
   11f08:	andeq	r2, r1, r8, asr r3
   11f0c:	andeq	r2, r1, r0, lsr #4
   11f10:	andeq	r2, r1, r8, lsr r2
   11f14:	strdeq	r2, [r1], -r0
   11f18:	strdeq	r2, [r1], -r0
   11f1c:	strdeq	r2, [r1], -r0
   11f20:	strdeq	r2, [r1], -r0
   11f24:	strdeq	r2, [r1], -r0
   11f28:	strdeq	r2, [r1], -r0
   11f2c:	strdeq	r2, [r1], -r0
   11f30:	strdeq	r2, [r1], -r0
   11f34:	strdeq	r2, [r1], -r0
   11f38:	strdeq	r2, [r1], -r0
   11f3c:	strdeq	r2, [r1], -r0
   11f40:	strdeq	r2, [r1], -r0
   11f44:	strdeq	r2, [r1], -r0
   11f48:	strdeq	r2, [r1], -r0
   11f4c:	strdeq	r2, [r1], -r0
   11f50:	strdeq	r2, [r1], -r0
   11f54:	strdeq	r2, [r1], -r0
   11f58:	strdeq	r2, [r1], -r0
   11f5c:	ldrdeq	r2, [r1], -r4
   11f60:	ldrdeq	r2, [r1], -r8
   11f64:	ldrdeq	r2, [r1], -r8
   11f68:	andeq	r2, r1, r0, asr #3
   11f6c:	ldrdeq	r2, [r1], -r8
   11f70:	ldrdeq	r2, [r1], -r8
   11f74:	ldrdeq	r2, [r1], -r8
   11f78:	andeq	r2, r1, r0, ror #6
   11f7c:	ldrdeq	r2, [r1], -r8
   11f80:	ldrdeq	r2, [r1], -r8
   11f84:	ldrdeq	r2, [r1], -r8
   11f88:	ldrdeq	r2, [r1], -r8
   11f8c:	ldrdeq	r2, [r1], -r8
   11f90:	ldrdeq	r2, [r1], -r8
   11f94:	ldrdeq	r2, [r1], -r8
   11f98:	ldrdeq	r2, [r1], -r8
   11f9c:	ldrdeq	r2, [r1], -r8
   11fa0:	ldrdeq	r2, [r1], -r8
   11fa4:	ldrdeq	r2, [r1], -r8
   11fa8:	ldrdeq	r2, [r1], -r8
   11fac:	ldrdeq	r2, [r1], -r8
   11fb0:	ldrdeq	r2, [r1], -r8
   11fb4:	ldrdeq	r2, [r1], -r8
   11fb8:	ldrdeq	r2, [r1], -r8
   11fbc:	ldrdeq	r2, [r1], -r8
   11fc0:	ldrdeq	r2, [r1], -r8
   11fc4:	ldrdeq	r2, [r1], -r8
   11fc8:	ldrdeq	r2, [r1], -r8
   11fcc:	ldrdeq	r2, [r1], -r8
   11fd0:	ldrdeq	r2, [r1], -r8
   11fd4:	ldrdeq	r2, [r1], -r8
   11fd8:	andeq	r2, r1, r8, lsr #6
   11fdc:	strdeq	r2, [r1], -r0
   11fe0:	ldrdeq	r2, [r1], -r8
   11fe4:	ldrdeq	r2, [r1], -r8
   11fe8:	ldrdeq	r2, [r1], -r8
   11fec:	ldrdeq	r2, [r1], -r8
   11ff0:	ldrdeq	r2, [r1], -r8
   11ff4:	ldrdeq	r2, [r1], -r8
   11ff8:	ldrdeq	r2, [r1], -r8
   11ffc:	ldrdeq	r2, [r1], -r8
   12000:	ldrdeq	r2, [r1], -r8
   12004:	ldrdeq	r2, [r1], -r8
   12008:	ldrdeq	r2, [r1], -r8
   1200c:	ldrdeq	r2, [r1], -r8
   12010:	ldrdeq	r2, [r1], -r8
   12014:	ldrdeq	r2, [r1], -r8
   12018:	ldrdeq	r2, [r1], -r8
   1201c:	ldrdeq	r2, [r1], -r8
   12020:	ldrdeq	r2, [r1], -r8
   12024:	ldrdeq	r2, [r1], -r8
   12028:	ldrdeq	r2, [r1], -r8
   1202c:	ldrdeq	r2, [r1], -r8
   12030:	ldrdeq	r2, [r1], -r8
   12034:	ldrdeq	r2, [r1], -r8
   12038:	ldrdeq	r2, [r1], -r8
   1203c:	ldrdeq	r2, [r1], -r8
   12040:	ldrdeq	r2, [r1], -r8
   12044:	ldrdeq	r2, [r1], -r8
   12048:	ldrdeq	r2, [r1], -r8
   1204c:	andeq	r2, r1, r0, lsl #4
   12050:	ldrdeq	r2, [r1], -r8
   12054:	ldrdeq	r2, [r1], -r8
   12058:	ldrdeq	r2, [r1], -r8
   1205c:	ldrdeq	r2, [r1], -r8
   12060:	ldrdeq	r2, [r1], -r8
   12064:	ldrdeq	r2, [r1], -r8
   12068:	ldrdeq	r2, [r1], -r8
   1206c:	ldrdeq	r2, [r1], -r8
   12070:	ldrdeq	r2, [r1], -r8
   12074:	ldrdeq	r2, [r1], -r8
   12078:	ldrdeq	r2, [r1], -r8
   1207c:	ldrdeq	r2, [r1], -r8
   12080:	ldrdeq	r2, [r1], -r8
   12084:	ldrdeq	r2, [r1], -r8
   12088:	ldrdeq	r2, [r1], -r8
   1208c:	ldrdeq	r2, [r1], -r8
   12090:	ldrdeq	r2, [r1], -r8
   12094:	ldrdeq	r2, [r1], -r8
   12098:	ldrdeq	r2, [r1], -r8
   1209c:	ldrdeq	r2, [r1], -r8
   120a0:	ldrdeq	r2, [r1], -r8
   120a4:	ldrdeq	r2, [r1], -r8
   120a8:	ldrdeq	r2, [r1], -r8
   120ac:	ldrdeq	r2, [r1], -r8
   120b0:	ldrdeq	r2, [r1], -r8
   120b4:	ldrdeq	r2, [r1], -r8
   120b8:	ldrdeq	r2, [r1], -r8
   120bc:	ldrdeq	r2, [r1], -r8
   120c0:	ldrdeq	r2, [r1], -r8
   120c4:	ldrdeq	r2, [r1], -r8
   120c8:	muleq	r1, r4, r1
   120cc:	ldrdeq	r2, [r1], -r8
   120d0:	muleq	r1, r4, r1
   120d4:	andeq	r2, r1, r0, asr #3
   120d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   120dc:	tst	r0, #1
   120e0:	bne	1210c <putchar_unlocked@plt+0x112c>
   120e4:	ubfx	r0, r4, #5, #3
   120e8:	ldr	r1, [fp, #16]
   120ec:	ldr	r0, [r1, r0, lsl #2]
   120f0:	and	r1, r4, #31
   120f4:	mov	r2, #1
   120f8:	tst	r0, r2, lsl r1
   120fc:	beq	1210c <putchar_unlocked@plt+0x112c>
   12100:	mov	r0, r4
   12104:	mov	r1, r6
   12108:	b	12120 <putchar_unlocked@plt+0x1140>
   1210c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12110:	cmp	r0, #0
   12114:	mov	r0, r4
   12118:	mov	r1, r6
   1211c:	beq	12458 <putchar_unlocked@plt+0x1478>
   12120:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12124:	tst	r2, #1
   12128:	bne	12a1c <putchar_unlocked@plt+0x1a3c>
   1212c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12130:	subs	r2, r2, #2
   12134:	movwne	r2, #1
   12138:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1213c:	orr	r2, r2, r3
   12140:	tst	r2, #1
   12144:	bne	12180 <putchar_unlocked@plt+0x11a0>
   12148:	cmp	r8, sl
   1214c:	movcc	r2, #39	; 0x27
   12150:	strbcc	r2, [r5, r8]
   12154:	add	r2, r8, #1
   12158:	cmp	r2, sl
   1215c:	movcc	r3, #36	; 0x24
   12160:	strbcc	r3, [r5, r2]
   12164:	add	r2, r8, #2
   12168:	cmp	r2, sl
   1216c:	movcc	r3, #39	; 0x27
   12170:	strbcc	r3, [r5, r2]
   12174:	add	r8, r8, #3
   12178:	mov	r2, #1
   1217c:	str	r2, [fp, #-56]	; 0xffffffc8
   12180:	cmp	r8, sl
   12184:	movcc	r2, #92	; 0x5c
   12188:	strbcc	r2, [r5, r8]
   1218c:	add	r8, r8, #1
   12190:	b	1249c <putchar_unlocked@plt+0x14bc>
   12194:	cmp	lr, #1
   12198:	beq	121c0 <putchar_unlocked@plt+0x11e0>
   1219c:	mov	r6, #0
   121a0:	cmn	lr, #1
   121a4:	bne	121cc <putchar_unlocked@plt+0x11ec>
   121a8:	ldrb	r0, [ip, #1]
   121ac:	cmp	r0, #0
   121b0:	beq	121c0 <putchar_unlocked@plt+0x11e0>
   121b4:	mvn	lr, #0
   121b8:	mov	r9, #0
   121bc:	b	120d8 <putchar_unlocked@plt+0x10f8>
   121c0:	mov	r6, #0
   121c4:	cmp	r7, #0
   121c8:	beq	121d4 <putchar_unlocked@plt+0x11f4>
   121cc:	mov	r9, #0
   121d0:	b	120d8 <putchar_unlocked@plt+0x10f8>
   121d4:	mov	r1, #1
   121d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   121dc:	cmp	r0, #2
   121e0:	bne	121f8 <putchar_unlocked@plt+0x1218>
   121e4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121e8:	tst	r0, #1
   121ec:	mov	r6, r1
   121f0:	beq	120d8 <putchar_unlocked@plt+0x10f8>
   121f4:	b	12a1c <putchar_unlocked@plt+0x1a3c>
   121f8:	mov	r6, r1
   121fc:	b	120d8 <putchar_unlocked@plt+0x10f8>
   12200:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12204:	cmp	r0, #2
   12208:	bne	1243c <putchar_unlocked@plt+0x145c>
   1220c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12210:	tst	r0, #1
   12214:	bne	12a1c <putchar_unlocked@plt+0x1a3c>
   12218:	mov	r9, #0
   1221c:	b	12450 <putchar_unlocked@plt+0x1470>
   12220:	mov	r0, #102	; 0x66
   12224:	b	124c4 <putchar_unlocked@plt+0x14e4>
   12228:	mov	r2, #116	; 0x74
   1222c:	b	1223c <putchar_unlocked@plt+0x125c>
   12230:	mov	r0, #98	; 0x62
   12234:	b	124c4 <putchar_unlocked@plt+0x14e4>
   12238:	mov	r2, #114	; 0x72
   1223c:	ldr	r0, [sp, #72]	; 0x48
   12240:	tst	r0, #1
   12244:	mov	r0, r2
   12248:	bne	124c4 <putchar_unlocked@plt+0x14e4>
   1224c:	b	12a1c <putchar_unlocked@plt+0x1a3c>
   12250:	ldr	r0, [sp, #92]	; 0x5c
   12254:	tst	r0, #1
   12258:	beq	124e0 <putchar_unlocked@plt+0x1500>
   1225c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12260:	tst	r0, #1
   12264:	bne	12a1c <putchar_unlocked@plt+0x1a3c>
   12268:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1226c:	subs	r0, r0, #2
   12270:	movwne	r0, #1
   12274:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12278:	orr	r0, r0, r1
   1227c:	tst	r0, #1
   12280:	bne	122bc <putchar_unlocked@plt+0x12dc>
   12284:	cmp	r8, sl
   12288:	movcc	r0, #39	; 0x27
   1228c:	strbcc	r0, [r5, r8]
   12290:	add	r0, r8, #1
   12294:	cmp	r0, sl
   12298:	movcc	r1, #36	; 0x24
   1229c:	strbcc	r1, [r5, r0]
   122a0:	add	r0, r8, #2
   122a4:	cmp	r0, sl
   122a8:	movcc	r1, #39	; 0x27
   122ac:	strbcc	r1, [r5, r0]
   122b0:	add	r8, r8, #3
   122b4:	mov	r0, #1
   122b8:	str	r0, [fp, #-56]	; 0xffffffc8
   122bc:	cmp	r8, sl
   122c0:	movcc	r0, #92	; 0x5c
   122c4:	strbcc	r0, [r5, r8]
   122c8:	add	r0, r8, #1
   122cc:	mov	r6, #0
   122d0:	mov	r9, #1
   122d4:	mov	r4, #48	; 0x30
   122d8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   122dc:	cmp	r1, #2
   122e0:	beq	126a4 <putchar_unlocked@plt+0x16c4>
   122e4:	add	r1, r7, #1
   122e8:	cmp	r1, lr
   122ec:	bcs	126a4 <putchar_unlocked@plt+0x16c4>
   122f0:	ldrb	r1, [ip, r1]
   122f4:	sub	r1, r1, #48	; 0x30
   122f8:	uxtb	r1, r1
   122fc:	cmp	r1, #9
   12300:	bhi	126a4 <putchar_unlocked@plt+0x16c4>
   12304:	cmp	r0, sl
   12308:	movcc	r1, #48	; 0x30
   1230c:	strbcc	r1, [r5, r0]
   12310:	add	r0, r8, #2
   12314:	cmp	r0, sl
   12318:	movcc	r1, #48	; 0x30
   1231c:	strbcc	r1, [r5, r0]
   12320:	add	r8, r8, #3
   12324:	b	120d8 <putchar_unlocked@plt+0x10f8>
   12328:	mov	r9, #0
   1232c:	mov	r4, #63	; 0x3f
   12330:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12334:	cmp	r0, #5
   12338:	beq	126ac <putchar_unlocked@plt+0x16cc>
   1233c:	cmp	r0, #2
   12340:	bne	12754 <putchar_unlocked@plt+0x1774>
   12344:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12348:	tst	r0, #1
   1234c:	mov	r6, #0
   12350:	beq	120d8 <putchar_unlocked@plt+0x10f8>
   12354:	b	12a1c <putchar_unlocked@plt+0x1a3c>
   12358:	mov	r0, #118	; 0x76
   1235c:	b	124c4 <putchar_unlocked@plt+0x14e4>
   12360:	mov	r4, #39	; 0x27
   12364:	mov	r0, #1
   12368:	str	r0, [sp, #64]	; 0x40
   1236c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12370:	cmp	r0, #2
   12374:	bne	124fc <putchar_unlocked@plt+0x151c>
   12378:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1237c:	tst	r0, #1
   12380:	bne	12a1c <putchar_unlocked@plt+0x1a3c>
   12384:	ldr	r2, [sp, #84]	; 0x54
   12388:	cmp	r2, #0
   1238c:	mov	r0, r2
   12390:	movwne	r0, #1
   12394:	clz	r1, sl
   12398:	lsr	r1, r1, #5
   1239c:	orrs	r0, r0, r1
   123a0:	moveq	r2, sl
   123a4:	str	r2, [sp, #84]	; 0x54
   123a8:	moveq	sl, r0
   123ac:	cmp	r8, sl
   123b0:	movcc	r0, #39	; 0x27
   123b4:	strbcc	r0, [r5, r8]
   123b8:	add	r0, r8, #1
   123bc:	cmp	r0, sl
   123c0:	movcc	r1, #92	; 0x5c
   123c4:	strbcc	r1, [r5, r0]
   123c8:	add	r0, r8, #2
   123cc:	cmp	r0, sl
   123d0:	movcc	r1, #39	; 0x27
   123d4:	strbcc	r1, [r5, r0]
   123d8:	add	r8, r8, #3
   123dc:	mov	r0, #0
   123e0:	str	r0, [fp, #-56]	; 0xffffffc8
   123e4:	mov	r9, #0
   123e8:	mov	r6, #1
   123ec:	b	120d8 <putchar_unlocked@plt+0x10f8>
   123f0:	ldr	r0, [sp, #44]	; 0x2c
   123f4:	cmp	r0, #1
   123f8:	bne	12504 <putchar_unlocked@plt+0x1524>
   123fc:	str	lr, [sp, #32]
   12400:	bl	10ed8 <__ctype_b_loc@plt>
   12404:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12408:	ldr	r0, [r0]
   1240c:	add	r0, r0, r4, lsl #1
   12410:	ldrb	r0, [r0, #1]
   12414:	ubfx	r6, r0, #6, #1
   12418:	mov	r2, #1
   1241c:	ldr	r0, [sp, #60]	; 0x3c
   12420:	orr	r1, r6, r0
   12424:	cmp	r2, #1
   12428:	bhi	1275c <putchar_unlocked@plt+0x177c>
   1242c:	tst	r1, #1
   12430:	beq	1275c <putchar_unlocked@plt+0x177c>
   12434:	ldr	lr, [sp, #32]
   12438:	b	120d8 <putchar_unlocked@plt+0x10f8>
   1243c:	mov	r9, #0
   12440:	mov	r0, #92	; 0x5c
   12444:	ldr	r1, [sp, #56]	; 0x38
   12448:	cmp	r1, #0
   1244c:	beq	124c4 <putchar_unlocked@plt+0x14e4>
   12450:	mov	r4, #92	; 0x5c
   12454:	mov	r6, #0
   12458:	cmp	r9, #0
   1245c:	bne	12494 <putchar_unlocked@plt+0x14b4>
   12460:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12464:	tst	r0, #1
   12468:	beq	12494 <putchar_unlocked@plt+0x14b4>
   1246c:	cmp	r8, sl
   12470:	movcc	r0, #39	; 0x27
   12474:	strbcc	r0, [r5, r8]
   12478:	add	r0, r8, #1
   1247c:	cmp	r0, sl
   12480:	movcc	r1, #39	; 0x27
   12484:	strbcc	r1, [r5, r0]
   12488:	add	r8, r8, #2
   1248c:	mov	r0, #0
   12490:	str	r0, [fp, #-56]	; 0xffffffc8
   12494:	mov	r1, r6
   12498:	mov	r0, r4
   1249c:	cmp	r8, sl
   124a0:	strbcc	r0, [r5, r8]
   124a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   124a8:	and	r0, r0, r1
   124ac:	str	r0, [fp, #-48]	; 0xffffffd0
   124b0:	add	r8, r8, #1
   124b4:	add	r7, r7, #1
   124b8:	cmn	lr, #1
   124bc:	bne	11e10 <putchar_unlocked@plt+0xe30>
   124c0:	b	11e1c <putchar_unlocked@plt+0xe3c>
   124c4:	mov	r9, #0
   124c8:	ldr	r1, [sp, #92]	; 0x5c
   124cc:	tst	r1, #1
   124d0:	mov	r6, #0
   124d4:	mov	r1, #0
   124d8:	beq	120d8 <putchar_unlocked@plt+0x10f8>
   124dc:	b	12120 <putchar_unlocked@plt+0x1140>
   124e0:	mov	r4, #0
   124e4:	ldr	r0, [sp, #40]	; 0x28
   124e8:	cmp	r0, #0
   124ec:	mov	r9, #0
   124f0:	mov	r6, #0
   124f4:	beq	120d8 <putchar_unlocked@plt+0x10f8>
   124f8:	b	124b4 <putchar_unlocked@plt+0x14d4>
   124fc:	mov	r6, #1
   12500:	b	120d8 <putchar_unlocked@plt+0x10f8>
   12504:	mov	r0, #0
   12508:	str	r0, [fp, #-36]	; 0xffffffdc
   1250c:	str	r0, [fp, #-40]	; 0xffffffd8
   12510:	cmn	lr, #1
   12514:	bne	12528 <putchar_unlocked@plt+0x1548>
   12518:	mov	r0, ip
   1251c:	bl	10efc <strlen@plt>
   12520:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12524:	mov	lr, r0
   12528:	ldr	r0, [sp, #76]	; 0x4c
   1252c:	add	r0, r0, r7
   12530:	str	r0, [sp, #24]
   12534:	mov	r6, #1
   12538:	mov	r2, #0
   1253c:	sub	r0, fp, #40	; 0x28
   12540:	mov	r3, r0
   12544:	str	r5, [sp, #28]
   12548:	str	lr, [sp, #32]
   1254c:	b	12590 <putchar_unlocked@plt+0x15b0>
   12550:	ldr	r5, [sp, #52]	; 0x34
   12554:	add	r5, r0, r5
   12558:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1255c:	bl	10e30 <iswprint@plt>
   12560:	cmp	r0, #0
   12564:	movwne	r0, #1
   12568:	and	r6, r6, r0
   1256c:	sub	r0, fp, #40	; 0x28
   12570:	bl	10df4 <mbsinit@plt>
   12574:	sub	r3, fp, #40	; 0x28
   12578:	mov	r2, r5
   1257c:	ldr	lr, [sp, #32]
   12580:	cmp	r0, #0
   12584:	ldr	r5, [sp, #28]
   12588:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1258c:	bne	1241c <putchar_unlocked@plt+0x143c>
   12590:	str	r2, [sp, #52]	; 0x34
   12594:	add	r0, r2, r7
   12598:	add	r1, ip, r0
   1259c:	str	r0, [sp, #48]	; 0x30
   125a0:	sub	r2, lr, r0
   125a4:	sub	r0, fp, #44	; 0x2c
   125a8:	bl	145f0 <putchar_unlocked@plt+0x3610>
   125ac:	cmp	r0, #0
   125b0:	beq	12928 <putchar_unlocked@plt+0x1948>
   125b4:	cmn	r0, #1
   125b8:	beq	128e4 <putchar_unlocked@plt+0x1904>
   125bc:	cmn	r0, #2
   125c0:	ldr	lr, [sp, #32]
   125c4:	beq	128ec <putchar_unlocked@plt+0x190c>
   125c8:	cmp	r0, #2
   125cc:	mov	r1, #0
   125d0:	movwcc	r1, #1
   125d4:	ldr	r2, [sp, #68]	; 0x44
   125d8:	eor	r2, r2, #1
   125dc:	orrs	r1, r2, r1
   125e0:	bne	12550 <putchar_unlocked@plt+0x1570>
   125e4:	ldr	r1, [sp, #52]	; 0x34
   125e8:	ldr	r2, [sp, #24]
   125ec:	add	r1, r2, r1
   125f0:	sub	r2, r0, #1
   125f4:	b	12604 <putchar_unlocked@plt+0x1624>
   125f8:	add	r1, r1, #1
   125fc:	subs	r2, r2, #1
   12600:	beq	12550 <putchar_unlocked@plt+0x1570>
   12604:	ldrb	r3, [r1]
   12608:	sub	r3, r3, #91	; 0x5b
   1260c:	cmp	r3, #33	; 0x21
   12610:	bhi	125f8 <putchar_unlocked@plt+0x1618>
   12614:	add	r5, pc, #0
   12618:	ldr	pc, [r5, r3, lsl #2]
   1261c:	andeq	r2, r1, r4, lsl sl
   12620:	andeq	r2, r1, r4, lsl sl
   12624:	strdeq	r2, [r1], -r8
   12628:	andeq	r2, r1, r4, lsl sl
   1262c:	strdeq	r2, [r1], -r8
   12630:	andeq	r2, r1, r4, lsl sl
   12634:	strdeq	r2, [r1], -r8
   12638:	strdeq	r2, [r1], -r8
   1263c:	strdeq	r2, [r1], -r8
   12640:	strdeq	r2, [r1], -r8
   12644:	strdeq	r2, [r1], -r8
   12648:	strdeq	r2, [r1], -r8
   1264c:	strdeq	r2, [r1], -r8
   12650:	strdeq	r2, [r1], -r8
   12654:	strdeq	r2, [r1], -r8
   12658:	strdeq	r2, [r1], -r8
   1265c:	strdeq	r2, [r1], -r8
   12660:	strdeq	r2, [r1], -r8
   12664:	strdeq	r2, [r1], -r8
   12668:	strdeq	r2, [r1], -r8
   1266c:	strdeq	r2, [r1], -r8
   12670:	strdeq	r2, [r1], -r8
   12674:	strdeq	r2, [r1], -r8
   12678:	strdeq	r2, [r1], -r8
   1267c:	strdeq	r2, [r1], -r8
   12680:	strdeq	r2, [r1], -r8
   12684:	strdeq	r2, [r1], -r8
   12688:	strdeq	r2, [r1], -r8
   1268c:	strdeq	r2, [r1], -r8
   12690:	strdeq	r2, [r1], -r8
   12694:	strdeq	r2, [r1], -r8
   12698:	strdeq	r2, [r1], -r8
   1269c:	strdeq	r2, [r1], -r8
   126a0:	andeq	r2, r1, r4, lsl sl
   126a4:	mov	r8, r0
   126a8:	b	120d8 <putchar_unlocked@plt+0x10f8>
   126ac:	ldr	r0, [sp, #36]	; 0x24
   126b0:	cmp	r0, #0
   126b4:	beq	12754 <putchar_unlocked@plt+0x1774>
   126b8:	add	r0, r7, #2
   126bc:	cmp	r0, lr
   126c0:	bcs	12754 <putchar_unlocked@plt+0x1774>
   126c4:	add	r1, r7, ip
   126c8:	ldrb	r1, [r1, #1]
   126cc:	cmp	r1, #63	; 0x3f
   126d0:	bne	12754 <putchar_unlocked@plt+0x1774>
   126d4:	ldrb	r1, [ip, r0]
   126d8:	sub	r2, r1, #33	; 0x21
   126dc:	cmp	r2, #29
   126e0:	bhi	12754 <putchar_unlocked@plt+0x1774>
   126e4:	mov	r3, #1
   126e8:	movw	r6, #20929	; 0x51c1
   126ec:	movt	r6, #14336	; 0x3800
   126f0:	tst	r6, r3, lsl r2
   126f4:	beq	12754 <putchar_unlocked@plt+0x1774>
   126f8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   126fc:	tst	r2, #1
   12700:	bne	12a1c <putchar_unlocked@plt+0x1a3c>
   12704:	cmp	r8, sl
   12708:	movcc	r2, #63	; 0x3f
   1270c:	strbcc	r2, [r5, r8]
   12710:	add	r2, r8, #1
   12714:	cmp	r2, sl
   12718:	movcc	r3, #34	; 0x22
   1271c:	strbcc	r3, [r5, r2]
   12720:	add	r2, r8, #2
   12724:	cmp	r2, sl
   12728:	movcc	r3, #34	; 0x22
   1272c:	strbcc	r3, [r5, r2]
   12730:	add	r2, r8, #3
   12734:	cmp	r2, sl
   12738:	movcc	r3, #63	; 0x3f
   1273c:	strbcc	r3, [r5, r2]
   12740:	add	r8, r8, #4
   12744:	mov	r7, r0
   12748:	mov	r4, r1
   1274c:	mov	r6, #0
   12750:	b	120d8 <putchar_unlocked@plt+0x10f8>
   12754:	mov	r6, #0
   12758:	b	120d8 <putchar_unlocked@plt+0x10f8>
   1275c:	add	r0, r2, r7
   12760:	str	r0, [sp, #52]	; 0x34
   12764:	mov	r2, #0
   12768:	ldr	lr, [sp, #32]
   1276c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12770:	str	r1, [sp, #48]	; 0x30
   12774:	tst	r1, #1
   12778:	bne	12854 <putchar_unlocked@plt+0x1874>
   1277c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12780:	tst	r1, #1
   12784:	bne	12a1c <putchar_unlocked@plt+0x1a3c>
   12788:	mov	r3, r0
   1278c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12790:	subs	r1, r0, #2
   12794:	movwne	r1, #1
   12798:	orr	r1, r1, r3
   1279c:	tst	r1, #1
   127a0:	bne	127d8 <putchar_unlocked@plt+0x17f8>
   127a4:	cmp	r8, sl
   127a8:	movcc	r0, #39	; 0x27
   127ac:	strbcc	r0, [r5, r8]
   127b0:	add	r2, r8, #1
   127b4:	cmp	r2, sl
   127b8:	movcc	r0, #36	; 0x24
   127bc:	strbcc	r0, [r5, r2]
   127c0:	add	r2, r8, #2
   127c4:	cmp	r2, sl
   127c8:	movcc	r0, #39	; 0x27
   127cc:	strbcc	r0, [r5, r2]
   127d0:	add	r8, r8, #3
   127d4:	mov	r3, #1
   127d8:	cmp	r8, sl
   127dc:	movcc	r1, #92	; 0x5c
   127e0:	strbcc	r1, [r5, r8]
   127e4:	add	r2, r8, #1
   127e8:	cmp	r2, sl
   127ec:	bcs	12800 <putchar_unlocked@plt+0x1820>
   127f0:	uxtb	r1, r4
   127f4:	mov	r0, #48	; 0x30
   127f8:	orr	r1, r0, r1, lsr #6
   127fc:	strb	r1, [r5, r2]
   12800:	add	r2, r8, #2
   12804:	cmp	r2, sl
   12808:	lsrcc	r1, r4, #3
   1280c:	movcc	r0, #6
   12810:	bficc	r1, r0, #3, #29
   12814:	strbcc	r1, [r5, r2]
   12818:	mov	r0, #6
   1281c:	bfi	r4, r0, #3, #29
   12820:	add	r8, r8, #3
   12824:	mov	r2, #1
   12828:	mov	r0, r3
   1282c:	b	12878 <putchar_unlocked@plt+0x1898>
   12830:	cmp	r8, sl
   12834:	strbcc	r4, [r5, r8]
   12838:	ldr	r1, [sp, #76]	; 0x4c
   1283c:	ldrb	r4, [r1, r7]
   12840:	add	r8, r8, #1
   12844:	mov	r7, r3
   12848:	ldr	r1, [sp, #48]	; 0x30
   1284c:	tst	r1, #1
   12850:	beq	1277c <putchar_unlocked@plt+0x179c>
   12854:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12858:	tst	r1, #1
   1285c:	beq	12870 <putchar_unlocked@plt+0x1890>
   12860:	cmp	r8, sl
   12864:	movcc	r1, #92	; 0x5c
   12868:	strbcc	r1, [r5, r8]
   1286c:	add	r8, r8, #1
   12870:	mov	r1, #0
   12874:	str	r1, [fp, #-52]	; 0xffffffcc
   12878:	and	r9, r2, #1
   1287c:	add	r3, r7, #1
   12880:	ldr	r1, [sp, #52]	; 0x34
   12884:	cmp	r1, r3
   12888:	bls	128cc <putchar_unlocked@plt+0x18ec>
   1288c:	cmp	r9, #0
   12890:	movwne	r9, #1
   12894:	mvn	r1, r0
   12898:	orr	r1, r1, r9
   1289c:	tst	r1, #1
   128a0:	bne	12830 <putchar_unlocked@plt+0x1850>
   128a4:	cmp	r8, sl
   128a8:	movcc	r1, #39	; 0x27
   128ac:	strbcc	r1, [r5, r8]
   128b0:	add	r1, r8, #1
   128b4:	cmp	r1, sl
   128b8:	movcc	r0, #39	; 0x27
   128bc:	strbcc	r0, [r5, r1]
   128c0:	add	r8, r8, #2
   128c4:	mov	r0, #0
   128c8:	b	12830 <putchar_unlocked@plt+0x1850>
   128cc:	str	r0, [fp, #-56]	; 0xffffffc8
   128d0:	cmp	r9, #0
   128d4:	movwne	r9, #1
   128d8:	cmp	r9, #0
   128dc:	beq	12460 <putchar_unlocked@plt+0x1480>
   128e0:	b	12494 <putchar_unlocked@plt+0x14b4>
   128e4:	mov	r6, #0
   128e8:	b	12928 <putchar_unlocked@plt+0x1948>
   128ec:	mov	r6, #0
   128f0:	ldr	r0, [sp, #48]	; 0x30
   128f4:	cmp	r0, lr
   128f8:	bcs	12928 <putchar_unlocked@plt+0x1948>
   128fc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12900:	add	r0, ip, r7
   12904:	ldr	r2, [sp, #52]	; 0x34
   12908:	ldrb	r1, [r0, r2]
   1290c:	cmp	r1, #0
   12910:	beq	1241c <putchar_unlocked@plt+0x143c>
   12914:	add	r2, r2, #1
   12918:	add	r1, r7, r2
   1291c:	cmp	r1, lr
   12920:	bcc	12908 <putchar_unlocked@plt+0x1928>
   12924:	b	1241c <putchar_unlocked@plt+0x143c>
   12928:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1292c:	ldr	r2, [sp, #52]	; 0x34
   12930:	b	1241c <putchar_unlocked@plt+0x143c>
   12934:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12938:	eor	r0, r1, #2
   1293c:	orr	r0, r0, r8
   12940:	clz	r0, r0
   12944:	lsr	r0, r0, #5
   12948:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1294c:	tst	r3, r0
   12950:	bne	12a1c <putchar_unlocked@plt+0x1a3c>
   12954:	mov	r6, r5
   12958:	subs	r0, r1, #2
   1295c:	movwne	r0, #1
   12960:	orr	r0, r3, r0
   12964:	tst	r0, #1
   12968:	ldr	r2, [sp, #92]	; 0x5c
   1296c:	ldreq	r0, [sp, #64]	; 0x40
   12970:	eoreq	r0, r0, #1
   12974:	tsteq	r0, #1
   12978:	bne	129b8 <putchar_unlocked@plt+0x19d8>
   1297c:	mov	r9, lr
   12980:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12984:	tst	r0, #1
   12988:	bne	12a84 <putchar_unlocked@plt+0x1aa4>
   1298c:	ldr	r0, [sp, #84]	; 0x54
   12990:	cmp	r0, #0
   12994:	beq	129b8 <putchar_unlocked@plt+0x19d8>
   12998:	mov	r0, #0
   1299c:	str	r0, [fp, #-48]	; 0xffffffd0
   129a0:	mov	r1, #2
   129a4:	cmp	sl, #0
   129a8:	mov	r0, r2
   129ac:	mov	r4, r3
   129b0:	ldr	r7, [sp, #84]	; 0x54
   129b4:	beq	11b90 <putchar_unlocked@plt+0xbb0>
   129b8:	ldr	r1, [fp, #-84]	; 0xffffffac
   129bc:	clz	r0, r1
   129c0:	lsr	r0, r0, #5
   129c4:	orr	r0, r0, r3
   129c8:	tst	r0, #1
   129cc:	bne	129f8 <putchar_unlocked@plt+0x1a18>
   129d0:	ldrb	r0, [r1]
   129d4:	cmp	r0, #0
   129d8:	beq	129f8 <putchar_unlocked@plt+0x1a18>
   129dc:	add	r1, r1, #1
   129e0:	cmp	r8, sl
   129e4:	strbcc	r0, [r6, r8]
   129e8:	add	r8, r8, #1
   129ec:	ldrb	r0, [r1], #1
   129f0:	cmp	r0, #0
   129f4:	bne	129e0 <putchar_unlocked@plt+0x1a00>
   129f8:	cmp	r8, sl
   129fc:	movcc	r0, #0
   12a00:	strbcc	r0, [r6, r8]
   12a04:	b	12a78 <putchar_unlocked@plt+0x1a98>
   12a08:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12a0c:	mov	lr, r4
   12a10:	b	12a1c <putchar_unlocked@plt+0x1a3c>
   12a14:	ldr	r5, [sp, #28]
   12a18:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12a1c:	mov	r0, #0
   12a20:	ldr	r1, [fp, #12]
   12a24:	bic	r1, r1, #2
   12a28:	mov	r2, #2
   12a2c:	ldr	r3, [sp, #92]	; 0x5c
   12a30:	tst	r3, #1
   12a34:	movwne	r2, #4
   12a38:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12a3c:	cmp	r3, #2
   12a40:	movne	r2, r3
   12a44:	str	r2, [sp]
   12a48:	str	r1, [sp, #4]
   12a4c:	str	r0, [sp, #8]
   12a50:	ldr	r0, [sp, #80]	; 0x50
   12a54:	str	r0, [sp, #12]
   12a58:	ldr	r0, [sp, #88]	; 0x58
   12a5c:	str	r0, [sp, #16]
   12a60:	mov	r0, r5
   12a64:	mov	r1, sl
   12a68:	mov	r2, ip
   12a6c:	mov	r3, lr
   12a70:	bl	11b04 <putchar_unlocked@plt+0xb24>
   12a74:	mov	r8, r0
   12a78:	mov	r0, r8
   12a7c:	sub	sp, fp, #28
   12a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a84:	mov	r0, #5
   12a88:	str	r0, [sp]
   12a8c:	ldr	r0, [fp, #12]
   12a90:	str	r0, [sp, #4]
   12a94:	ldr	r0, [fp, #16]
   12a98:	str	r0, [sp, #8]
   12a9c:	ldr	r0, [sp, #80]	; 0x50
   12aa0:	str	r0, [sp, #12]
   12aa4:	ldr	r0, [sp, #88]	; 0x58
   12aa8:	str	r0, [sp, #16]
   12aac:	mov	r0, r6
   12ab0:	ldr	r1, [sp, #84]	; 0x54
   12ab4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12ab8:	mov	r3, r9
   12abc:	b	12a70 <putchar_unlocked@plt+0x1a90>
   12ac0:	bl	10fc8 <abort@plt>
   12ac4:	mov	r3, r2
   12ac8:	mov	r2, #0
   12acc:	b	12ad0 <putchar_unlocked@plt+0x1af0>
   12ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ad4:	add	fp, sp, #28
   12ad8:	sub	sp, sp, #36	; 0x24
   12adc:	mov	r4, r2
   12ae0:	str	r2, [sp, #24]
   12ae4:	mov	r5, r1
   12ae8:	mov	r6, r0
   12aec:	str	r0, [sp, #20]
   12af0:	movw	r8, #24920	; 0x6158
   12af4:	movt	r8, #2
   12af8:	cmp	r3, #0
   12afc:	movne	r8, r3
   12b00:	bl	10f08 <__errno_location@plt>
   12b04:	str	r0, [sp, #28]
   12b08:	ldm	r8, {r3, r9}
   12b0c:	ldr	r1, [r8, #40]	; 0x28
   12b10:	ldr	r2, [r8, #44]	; 0x2c
   12b14:	ldr	r7, [r0]
   12b18:	str	r7, [sp, #32]
   12b1c:	add	sl, r8, #8
   12b20:	cmp	r4, #0
   12b24:	orreq	r9, r9, #1
   12b28:	stm	sp, {r3, r9, sl}
   12b2c:	str	r1, [sp, #12]
   12b30:	str	r2, [sp, #16]
   12b34:	mov	r0, #0
   12b38:	mov	r1, #0
   12b3c:	mov	r2, r6
   12b40:	mov	r3, r5
   12b44:	mov	r7, r5
   12b48:	bl	11b04 <putchar_unlocked@plt+0xb24>
   12b4c:	mov	r5, r0
   12b50:	add	r4, r0, #1
   12b54:	mov	r0, r4
   12b58:	bl	13ba8 <putchar_unlocked@plt+0x2bc8>
   12b5c:	mov	r6, r0
   12b60:	ldr	r0, [r8]
   12b64:	ldr	r1, [r8, #40]	; 0x28
   12b68:	ldr	r2, [r8, #44]	; 0x2c
   12b6c:	stm	sp, {r0, r9, sl}
   12b70:	str	r1, [sp, #12]
   12b74:	str	r2, [sp, #16]
   12b78:	mov	r0, r6
   12b7c:	mov	r1, r4
   12b80:	ldr	r2, [sp, #20]
   12b84:	mov	r3, r7
   12b88:	bl	11b04 <putchar_unlocked@plt+0xb24>
   12b8c:	ldr	r0, [sp, #24]
   12b90:	ldr	r1, [sp, #32]
   12b94:	ldr	r2, [sp, #28]
   12b98:	str	r1, [r2]
   12b9c:	cmp	r0, #0
   12ba0:	strne	r5, [r0]
   12ba4:	mov	r0, r6
   12ba8:	sub	sp, fp, #28
   12bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12bb4:	add	fp, sp, #24
   12bb8:	movw	r8, #24808	; 0x60e8
   12bbc:	movt	r8, #2
   12bc0:	ldr	r4, [r8]
   12bc4:	movw	r5, #24812	; 0x60ec
   12bc8:	movt	r5, #2
   12bcc:	ldr	r0, [r5]
   12bd0:	cmp	r0, #2
   12bd4:	blt	12c00 <putchar_unlocked@plt+0x1c20>
   12bd8:	add	r7, r4, #12
   12bdc:	mov	r6, #0
   12be0:	ldr	r0, [r7, r6, lsl #3]
   12be4:	bl	1172c <putchar_unlocked@plt+0x74c>
   12be8:	add	r0, r6, #1
   12bec:	ldr	r1, [r5]
   12bf0:	add	r2, r6, #2
   12bf4:	cmp	r2, r1
   12bf8:	mov	r6, r0
   12bfc:	blt	12be0 <putchar_unlocked@plt+0x1c00>
   12c00:	ldr	r0, [r4, #4]
   12c04:	movw	r9, #24968	; 0x6188
   12c08:	movt	r9, #2
   12c0c:	cmp	r0, r9
   12c10:	movw	r7, #24816	; 0x60f0
   12c14:	movt	r7, #2
   12c18:	beq	12c28 <putchar_unlocked@plt+0x1c48>
   12c1c:	bl	1172c <putchar_unlocked@plt+0x74c>
   12c20:	mov	r0, #256	; 0x100
   12c24:	stm	r7, {r0, r9}
   12c28:	cmp	r4, r7
   12c2c:	beq	12c3c <putchar_unlocked@plt+0x1c5c>
   12c30:	mov	r0, r4
   12c34:	bl	1172c <putchar_unlocked@plt+0x74c>
   12c38:	str	r7, [r8]
   12c3c:	mov	r0, #1
   12c40:	str	r0, [r5]
   12c44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12c48:	movw	r3, #24920	; 0x6158
   12c4c:	movt	r3, #2
   12c50:	mvn	r2, #0
   12c54:	b	12c58 <putchar_unlocked@plt+0x1c78>
   12c58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c5c:	add	fp, sp, #28
   12c60:	sub	sp, sp, #44	; 0x2c
   12c64:	mov	r7, r3
   12c68:	str	r2, [sp, #36]	; 0x24
   12c6c:	str	r1, [sp, #32]
   12c70:	mov	r5, r0
   12c74:	bl	10f08 <__errno_location@plt>
   12c78:	cmp	r5, #0
   12c7c:	bmi	12dec <putchar_unlocked@plt+0x1e0c>
   12c80:	cmn	r5, #-2147483647	; 0x80000001
   12c84:	beq	12dec <putchar_unlocked@plt+0x1e0c>
   12c88:	movw	r4, #24808	; 0x60e8
   12c8c:	movt	r4, #2
   12c90:	ldr	r6, [r4]
   12c94:	str	r0, [sp, #28]
   12c98:	ldr	r0, [r0]
   12c9c:	str	r0, [sp, #24]
   12ca0:	movw	r8, #24812	; 0x60ec
   12ca4:	movt	r8, #2
   12ca8:	ldr	r1, [r8]
   12cac:	cmp	r1, r5
   12cb0:	ble	12cbc <putchar_unlocked@plt+0x1cdc>
   12cb4:	mov	sl, r6
   12cb8:	b	12d28 <putchar_unlocked@plt+0x1d48>
   12cbc:	str	r1, [fp, #-32]	; 0xffffffe0
   12cc0:	mov	r0, #8
   12cc4:	str	r0, [sp]
   12cc8:	movw	r9, #24816	; 0x60f0
   12ccc:	movt	r9, #2
   12cd0:	subs	r0, r6, r9
   12cd4:	movne	r0, r6
   12cd8:	sub	r1, r5, r1
   12cdc:	add	r2, r1, #1
   12ce0:	sub	r1, fp, #32
   12ce4:	mvn	r3, #-2147483648	; 0x80000000
   12ce8:	bl	13c84 <putchar_unlocked@plt+0x2ca4>
   12cec:	mov	sl, r0
   12cf0:	str	r0, [r4]
   12cf4:	cmp	r6, r9
   12cf8:	bne	12d04 <putchar_unlocked@plt+0x1d24>
   12cfc:	ldrd	r0, [r9]
   12d00:	stm	sl, {r0, r1}
   12d04:	ldr	r1, [r8]
   12d08:	add	r0, sl, r1, lsl #3
   12d0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12d10:	sub	r1, r2, r1
   12d14:	lsl	r2, r1, #3
   12d18:	mov	r1, #0
   12d1c:	bl	10f20 <memset@plt>
   12d20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d24:	str	r0, [r8]
   12d28:	mov	r9, sl
   12d2c:	ldr	r6, [r9, r5, lsl #3]!
   12d30:	ldr	r4, [r9, #4]!
   12d34:	ldm	r7, {r0, r1}
   12d38:	ldr	r2, [r7, #40]	; 0x28
   12d3c:	ldr	r3, [r7, #44]	; 0x2c
   12d40:	orr	r8, r1, #1
   12d44:	add	r1, r7, #8
   12d48:	stm	sp, {r0, r8}
   12d4c:	str	r1, [sp, #20]
   12d50:	add	r0, sp, #8
   12d54:	stm	r0, {r1, r2, r3}
   12d58:	mov	r0, r4
   12d5c:	mov	r1, r6
   12d60:	ldr	r2, [sp, #32]
   12d64:	ldr	r3, [sp, #36]	; 0x24
   12d68:	bl	11b04 <putchar_unlocked@plt+0xb24>
   12d6c:	cmp	r6, r0
   12d70:	bhi	12dd4 <putchar_unlocked@plt+0x1df4>
   12d74:	add	r6, r0, #1
   12d78:	str	r6, [sl, r5, lsl #3]
   12d7c:	movw	r0, #24968	; 0x6188
   12d80:	movt	r0, #2
   12d84:	cmp	r4, r0
   12d88:	beq	12d94 <putchar_unlocked@plt+0x1db4>
   12d8c:	mov	r0, r4
   12d90:	bl	1172c <putchar_unlocked@plt+0x74c>
   12d94:	mov	r0, r6
   12d98:	bl	13ba8 <putchar_unlocked@plt+0x2bc8>
   12d9c:	mov	r4, r0
   12da0:	str	r0, [r9]
   12da4:	ldr	r0, [r7]
   12da8:	ldr	r1, [r7, #40]	; 0x28
   12dac:	ldr	r2, [r7, #44]	; 0x2c
   12db0:	stm	sp, {r0, r8}
   12db4:	ldr	r0, [sp, #20]
   12db8:	add	r3, sp, #8
   12dbc:	stm	r3, {r0, r1, r2}
   12dc0:	mov	r0, r4
   12dc4:	mov	r1, r6
   12dc8:	ldr	r2, [sp, #32]
   12dcc:	ldr	r3, [sp, #36]	; 0x24
   12dd0:	bl	11b04 <putchar_unlocked@plt+0xb24>
   12dd4:	ldr	r0, [sp, #28]
   12dd8:	ldr	r1, [sp, #24]
   12ddc:	str	r1, [r0]
   12de0:	mov	r0, r4
   12de4:	sub	sp, fp, #28
   12de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dec:	bl	10fc8 <abort@plt>
   12df0:	movw	r3, #24920	; 0x6158
   12df4:	movt	r3, #2
   12df8:	b	12c58 <putchar_unlocked@plt+0x1c78>
   12dfc:	mov	r1, r0
   12e00:	mov	r0, #0
   12e04:	b	12c48 <putchar_unlocked@plt+0x1c68>
   12e08:	mov	r2, r1
   12e0c:	mov	r1, r0
   12e10:	mov	r0, #0
   12e14:	b	12df0 <putchar_unlocked@plt+0x1e10>
   12e18:	push	{r4, r5, r6, sl, fp, lr}
   12e1c:	add	fp, sp, #16
   12e20:	sub	sp, sp, #48	; 0x30
   12e24:	mov	r4, r2
   12e28:	mov	r5, r0
   12e2c:	mov	r6, sp
   12e30:	mov	r0, r6
   12e34:	bl	12e54 <putchar_unlocked@plt+0x1e74>
   12e38:	mov	r0, r5
   12e3c:	mov	r1, r4
   12e40:	mvn	r2, #0
   12e44:	mov	r3, r6
   12e48:	bl	12c58 <putchar_unlocked@plt+0x1c78>
   12e4c:	sub	sp, fp, #16
   12e50:	pop	{r4, r5, r6, sl, fp, pc}
   12e54:	push	{fp, lr}
   12e58:	mov	fp, sp
   12e5c:	vmov.i32	q8, #0	; 0x00000000
   12e60:	mov	r2, #32
   12e64:	mov	r3, r0
   12e68:	vst1.32	{d16-d17}, [r3], r2
   12e6c:	vst1.32	{d16-d17}, [r3]
   12e70:	add	r2, r0, #16
   12e74:	vst1.32	{d16-d17}, [r2]
   12e78:	cmp	r1, #10
   12e7c:	strne	r1, [r0]
   12e80:	popne	{fp, pc}
   12e84:	bl	10fc8 <abort@plt>
   12e88:	push	{r4, r5, r6, r7, fp, lr}
   12e8c:	add	fp, sp, #16
   12e90:	sub	sp, sp, #48	; 0x30
   12e94:	mov	r4, r3
   12e98:	mov	r5, r2
   12e9c:	mov	r6, r0
   12ea0:	mov	r7, sp
   12ea4:	mov	r0, r7
   12ea8:	bl	12e54 <putchar_unlocked@plt+0x1e74>
   12eac:	mov	r0, r6
   12eb0:	mov	r1, r5
   12eb4:	mov	r2, r4
   12eb8:	mov	r3, r7
   12ebc:	bl	12c58 <putchar_unlocked@plt+0x1c78>
   12ec0:	sub	sp, fp, #16
   12ec4:	pop	{r4, r5, r6, r7, fp, pc}
   12ec8:	mov	r2, r1
   12ecc:	mov	r1, r0
   12ed0:	mov	r0, #0
   12ed4:	b	12e18 <putchar_unlocked@plt+0x1e38>
   12ed8:	mov	r3, r2
   12edc:	mov	r2, r1
   12ee0:	mov	r1, r0
   12ee4:	mov	r0, #0
   12ee8:	b	12e88 <putchar_unlocked@plt+0x1ea8>
   12eec:	push	{r4, r5, r6, sl, fp, lr}
   12ef0:	add	fp, sp, #16
   12ef4:	sub	sp, sp, #48	; 0x30
   12ef8:	mov	r4, r1
   12efc:	mov	r5, r0
   12f00:	movw	r0, #24920	; 0x6158
   12f04:	movt	r0, #2
   12f08:	add	r1, r0, #16
   12f0c:	mov	r3, #32
   12f10:	vld1.64	{d16-d17}, [r0], r3
   12f14:	vld1.64	{d18-d19}, [r1]
   12f18:	mov	r6, sp
   12f1c:	add	r1, r6, #16
   12f20:	vld1.64	{d20-d21}, [r0]
   12f24:	vst1.64	{d18-d19}, [r1]
   12f28:	mov	r0, r6
   12f2c:	vst1.64	{d16-d17}, [r0], r3
   12f30:	vst1.64	{d20-d21}, [r0]
   12f34:	mov	r0, r6
   12f38:	mov	r1, r2
   12f3c:	mov	r2, #1
   12f40:	bl	119f8 <putchar_unlocked@plt+0xa18>
   12f44:	mov	r0, #0
   12f48:	mov	r1, r5
   12f4c:	mov	r2, r4
   12f50:	mov	r3, r6
   12f54:	bl	12c58 <putchar_unlocked@plt+0x1c78>
   12f58:	sub	sp, fp, #16
   12f5c:	pop	{r4, r5, r6, sl, fp, pc}
   12f60:	mov	r2, r1
   12f64:	mvn	r1, #0
   12f68:	b	12eec <putchar_unlocked@plt+0x1f0c>
   12f6c:	mov	r1, #58	; 0x3a
   12f70:	b	12f60 <putchar_unlocked@plt+0x1f80>
   12f74:	mov	r2, #58	; 0x3a
   12f78:	b	12eec <putchar_unlocked@plt+0x1f0c>
   12f7c:	push	{r4, r5, r6, sl, fp, lr}
   12f80:	add	fp, sp, #16
   12f84:	sub	sp, sp, #48	; 0x30
   12f88:	mov	r4, r2
   12f8c:	mov	r5, r0
   12f90:	mov	r6, sp
   12f94:	mov	r0, r6
   12f98:	bl	12e54 <putchar_unlocked@plt+0x1e74>
   12f9c:	mov	r0, r6
   12fa0:	mov	r1, #58	; 0x3a
   12fa4:	mov	r2, #1
   12fa8:	bl	119f8 <putchar_unlocked@plt+0xa18>
   12fac:	mov	r0, r5
   12fb0:	mov	r1, r4
   12fb4:	mvn	r2, #0
   12fb8:	mov	r3, r6
   12fbc:	bl	12c58 <putchar_unlocked@plt+0x1c78>
   12fc0:	sub	sp, fp, #16
   12fc4:	pop	{r4, r5, r6, sl, fp, pc}
   12fc8:	push	{fp, lr}
   12fcc:	mov	fp, sp
   12fd0:	sub	sp, sp, #8
   12fd4:	mvn	ip, #0
   12fd8:	str	ip, [sp]
   12fdc:	bl	12fe8 <putchar_unlocked@plt+0x2008>
   12fe0:	mov	sp, fp
   12fe4:	pop	{fp, pc}
   12fe8:	push	{r4, r5, r6, r7, fp, lr}
   12fec:	add	fp, sp, #16
   12ff0:	sub	sp, sp, #48	; 0x30
   12ff4:	mov	r7, r3
   12ff8:	mov	r5, r0
   12ffc:	movw	r0, #24920	; 0x6158
   13000:	movt	r0, #2
   13004:	add	r3, r0, #16
   13008:	mov	r4, #32
   1300c:	vld1.64	{d16-d17}, [r0], r4
   13010:	vld1.64	{d18-d19}, [r3]
   13014:	mov	r6, sp
   13018:	add	r3, r6, #16
   1301c:	vld1.64	{d20-d21}, [r0]
   13020:	vst1.64	{d18-d19}, [r3]
   13024:	mov	r0, r6
   13028:	vst1.64	{d16-d17}, [r0], r4
   1302c:	vst1.64	{d20-d21}, [r0]
   13030:	mov	r0, r6
   13034:	bl	11a50 <putchar_unlocked@plt+0xa70>
   13038:	ldr	r2, [fp, #8]
   1303c:	mov	r0, r5
   13040:	mov	r1, r7
   13044:	mov	r3, r6
   13048:	bl	12c58 <putchar_unlocked@plt+0x1c78>
   1304c:	sub	sp, fp, #16
   13050:	pop	{r4, r5, r6, r7, fp, pc}
   13054:	mov	r3, r2
   13058:	mov	r2, r1
   1305c:	mov	r1, r0
   13060:	mov	r0, #0
   13064:	b	12fc8 <putchar_unlocked@plt+0x1fe8>
   13068:	push	{fp, lr}
   1306c:	mov	fp, sp
   13070:	sub	sp, sp, #8
   13074:	mov	ip, r2
   13078:	mov	r2, r1
   1307c:	mov	r1, r0
   13080:	str	r3, [sp]
   13084:	mov	r0, #0
   13088:	mov	r3, ip
   1308c:	bl	12fe8 <putchar_unlocked@plt+0x2008>
   13090:	mov	sp, fp
   13094:	pop	{fp, pc}
   13098:	movw	r3, #24824	; 0x60f8
   1309c:	movt	r3, #2
   130a0:	b	12c58 <putchar_unlocked@plt+0x1c78>
   130a4:	mov	r2, r1
   130a8:	mov	r1, r0
   130ac:	mov	r0, #0
   130b0:	b	13098 <putchar_unlocked@plt+0x20b8>
   130b4:	mvn	r2, #0
   130b8:	b	13098 <putchar_unlocked@plt+0x20b8>
   130bc:	mov	r1, r0
   130c0:	mov	r0, #0
   130c4:	b	130b4 <putchar_unlocked@plt+0x20d4>
   130c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   130cc:	add	fp, sp, #24
   130d0:	sub	sp, sp, #16
   130d4:	mov	r4, r1
   130d8:	mov	r5, r0
   130dc:	mov	r7, #0
   130e0:	mov	r0, #0
   130e4:	mov	r1, r5
   130e8:	mov	r2, #5
   130ec:	bl	10e00 <dcgettext@plt>
   130f0:	cmp	r0, r5
   130f4:	beq	13100 <putchar_unlocked@plt+0x2120>
   130f8:	sub	sp, fp, #24
   130fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13100:	bl	145b8 <putchar_unlocked@plt+0x35d8>
   13104:	mov	r6, r0
   13108:	mov	r8, #56	; 0x38
   1310c:	mov	r0, #45	; 0x2d
   13110:	stm	sp, {r0, r8}
   13114:	str	r7, [sp, #8]
   13118:	str	r7, [sp, #12]
   1311c:	mov	r0, r6
   13120:	mov	r1, #85	; 0x55
   13124:	mov	r2, #84	; 0x54
   13128:	mov	r3, #70	; 0x46
   1312c:	bl	131c4 <putchar_unlocked@plt+0x21e4>
   13130:	cmp	r0, #0
   13134:	beq	13150 <putchar_unlocked@plt+0x2170>
   13138:	ldrb	r1, [r5]
   1313c:	movw	r2, #19500	; 0x4c2c
   13140:	movt	r2, #1
   13144:	movw	r0, #19504	; 0x4c30
   13148:	movt	r0, #1
   1314c:	b	13194 <putchar_unlocked@plt+0x21b4>
   13150:	mov	r0, #48	; 0x30
   13154:	mov	r1, #51	; 0x33
   13158:	str	r8, [sp]
   1315c:	stmib	sp, {r0, r1}
   13160:	str	r0, [sp, #12]
   13164:	mov	r0, r6
   13168:	mov	r1, #71	; 0x47
   1316c:	mov	r2, #66	; 0x42
   13170:	mov	r3, #49	; 0x31
   13174:	bl	131c4 <putchar_unlocked@plt+0x21e4>
   13178:	cmp	r0, #0
   1317c:	beq	131a4 <putchar_unlocked@plt+0x21c4>
   13180:	ldrb	r1, [r5]
   13184:	movw	r2, #19508	; 0x4c34
   13188:	movt	r2, #1
   1318c:	movw	r0, #19512	; 0x4c38
   13190:	movt	r0, #1
   13194:	cmp	r1, #96	; 0x60
   13198:	moveq	r0, r2
   1319c:	sub	sp, fp, #24
   131a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131a4:	movw	r1, #19494	; 0x4c26
   131a8:	movt	r1, #1
   131ac:	movw	r0, #19498	; 0x4c2a
   131b0:	movt	r0, #1
   131b4:	cmp	r4, #9
   131b8:	moveq	r0, r1
   131bc:	sub	sp, fp, #24
   131c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131c4:	push	{r4, r5, r6, r7, fp, lr}
   131c8:	add	fp, sp, #16
   131cc:	sub	sp, sp, #16
   131d0:	mov	r4, r3
   131d4:	mov	r5, r2
   131d8:	mov	r7, r1
   131dc:	mov	r6, r0
   131e0:	mov	r0, r1
   131e4:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   131e8:	ldrb	r1, [r6]
   131ec:	cmp	r0, #0
   131f0:	andne	r1, r1, #223	; 0xdf
   131f4:	mov	r0, #0
   131f8:	cmp	r1, r7
   131fc:	bne	13234 <putchar_unlocked@plt+0x2254>
   13200:	cmp	r7, #0
   13204:	beq	1323c <putchar_unlocked@plt+0x225c>
   13208:	ldr	r0, [fp, #20]
   1320c:	ldr	r1, [fp, #16]
   13210:	ldr	r2, [fp, #12]
   13214:	ldr	r3, [fp, #8]
   13218:	str	r2, [sp]
   1321c:	str	r1, [sp, #4]
   13220:	str	r0, [sp, #8]
   13224:	mov	r0, r6
   13228:	mov	r1, r5
   1322c:	mov	r2, r4
   13230:	bl	13248 <putchar_unlocked@plt+0x2268>
   13234:	sub	sp, fp, #16
   13238:	pop	{r4, r5, r6, r7, fp, pc}
   1323c:	mov	r0, #1
   13240:	sub	sp, fp, #16
   13244:	pop	{r4, r5, r6, r7, fp, pc}
   13248:	push	{r4, r5, r6, r7, fp, lr}
   1324c:	add	fp, sp, #16
   13250:	sub	sp, sp, #8
   13254:	mov	r4, r3
   13258:	mov	r5, r2
   1325c:	mov	r7, r1
   13260:	mov	r6, r0
   13264:	mov	r0, r1
   13268:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   1326c:	ldrb	r1, [r6, #1]
   13270:	cmp	r0, #0
   13274:	andne	r1, r1, #223	; 0xdf
   13278:	mov	r0, #0
   1327c:	cmp	r1, r7
   13280:	bne	132b0 <putchar_unlocked@plt+0x22d0>
   13284:	cmp	r7, #0
   13288:	beq	132b8 <putchar_unlocked@plt+0x22d8>
   1328c:	ldr	r0, [fp, #16]
   13290:	ldr	r1, [fp, #12]
   13294:	ldr	r3, [fp, #8]
   13298:	str	r1, [sp]
   1329c:	str	r0, [sp, #4]
   132a0:	mov	r0, r6
   132a4:	mov	r1, r5
   132a8:	mov	r2, r4
   132ac:	bl	132c4 <putchar_unlocked@plt+0x22e4>
   132b0:	sub	sp, fp, #16
   132b4:	pop	{r4, r5, r6, r7, fp, pc}
   132b8:	mov	r0, #1
   132bc:	sub	sp, fp, #16
   132c0:	pop	{r4, r5, r6, r7, fp, pc}
   132c4:	push	{r4, r5, r6, r7, fp, lr}
   132c8:	add	fp, sp, #16
   132cc:	sub	sp, sp, #8
   132d0:	mov	r4, r3
   132d4:	mov	r5, r2
   132d8:	mov	r7, r1
   132dc:	mov	r6, r0
   132e0:	mov	r0, r1
   132e4:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   132e8:	ldrb	r1, [r6, #2]
   132ec:	cmp	r0, #0
   132f0:	andne	r1, r1, #223	; 0xdf
   132f4:	mov	r0, #0
   132f8:	cmp	r1, r7
   132fc:	bne	13324 <putchar_unlocked@plt+0x2344>
   13300:	cmp	r7, #0
   13304:	beq	1332c <putchar_unlocked@plt+0x234c>
   13308:	ldr	r0, [fp, #12]
   1330c:	ldr	r3, [fp, #8]
   13310:	str	r0, [sp]
   13314:	mov	r0, r6
   13318:	mov	r1, r5
   1331c:	mov	r2, r4
   13320:	bl	13338 <putchar_unlocked@plt+0x2358>
   13324:	sub	sp, fp, #16
   13328:	pop	{r4, r5, r6, r7, fp, pc}
   1332c:	mov	r0, #1
   13330:	sub	sp, fp, #16
   13334:	pop	{r4, r5, r6, r7, fp, pc}
   13338:	push	{r4, r5, r6, r7, fp, lr}
   1333c:	add	fp, sp, #16
   13340:	mov	r4, r3
   13344:	mov	r5, r2
   13348:	mov	r7, r1
   1334c:	mov	r6, r0
   13350:	mov	r0, r1
   13354:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   13358:	ldrb	r1, [r6, #3]
   1335c:	ldr	r3, [fp, #8]
   13360:	cmp	r0, #0
   13364:	andne	r1, r1, #223	; 0xdf
   13368:	mov	r0, #0
   1336c:	cmp	r1, r7
   13370:	bne	13394 <putchar_unlocked@plt+0x23b4>
   13374:	cmp	r7, #0
   13378:	beq	13390 <putchar_unlocked@plt+0x23b0>
   1337c:	mov	r0, r6
   13380:	mov	r1, r5
   13384:	mov	r2, r4
   13388:	pop	{r4, r5, r6, r7, fp, lr}
   1338c:	b	13398 <putchar_unlocked@plt+0x23b8>
   13390:	mov	r0, #1
   13394:	pop	{r4, r5, r6, r7, fp, pc}
   13398:	push	{r4, r5, r6, r7, fp, lr}
   1339c:	add	fp, sp, #16
   133a0:	mov	r4, r3
   133a4:	mov	r5, r2
   133a8:	mov	r7, r1
   133ac:	mov	r6, r0
   133b0:	mov	r0, r1
   133b4:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   133b8:	ldrb	r1, [r6, #4]
   133bc:	cmp	r0, #0
   133c0:	andne	r1, r1, #223	; 0xdf
   133c4:	mov	r0, #0
   133c8:	cmp	r1, r7
   133cc:	bne	133f0 <putchar_unlocked@plt+0x2410>
   133d0:	cmp	r7, #0
   133d4:	beq	133ec <putchar_unlocked@plt+0x240c>
   133d8:	mov	r0, r6
   133dc:	mov	r1, r5
   133e0:	mov	r2, r4
   133e4:	pop	{r4, r5, r6, r7, fp, lr}
   133e8:	b	133f4 <putchar_unlocked@plt+0x2414>
   133ec:	mov	r0, #1
   133f0:	pop	{r4, r5, r6, r7, fp, pc}
   133f4:	push	{r4, r5, r6, sl, fp, lr}
   133f8:	add	fp, sp, #16
   133fc:	mov	r4, r2
   13400:	mov	r6, r1
   13404:	mov	r5, r0
   13408:	mov	r0, r1
   1340c:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   13410:	ldrb	r1, [r5, #5]
   13414:	cmp	r0, #0
   13418:	andne	r1, r1, #223	; 0xdf
   1341c:	mov	r0, #0
   13420:	cmp	r1, r6
   13424:	bne	13444 <putchar_unlocked@plt+0x2464>
   13428:	cmp	r6, #0
   1342c:	beq	13440 <putchar_unlocked@plt+0x2460>
   13430:	mov	r0, r5
   13434:	mov	r1, r4
   13438:	pop	{r4, r5, r6, sl, fp, lr}
   1343c:	b	13448 <putchar_unlocked@plt+0x2468>
   13440:	mov	r0, #1
   13444:	pop	{r4, r5, r6, sl, fp, pc}
   13448:	push	{r4, r5, fp, lr}
   1344c:	add	fp, sp, #8
   13450:	mov	r5, r1
   13454:	mov	r4, r0
   13458:	mov	r0, r1
   1345c:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   13460:	ldrb	r1, [r4, #6]
   13464:	cmp	r0, #0
   13468:	andne	r1, r1, #223	; 0xdf
   1346c:	mov	r0, #0
   13470:	cmp	r1, r5
   13474:	popne	{r4, r5, fp, pc}
   13478:	cmp	r5, #0
   1347c:	beq	1348c <putchar_unlocked@plt+0x24ac>
   13480:	mov	r0, r4
   13484:	pop	{r4, r5, fp, lr}
   13488:	b	13494 <putchar_unlocked@plt+0x24b4>
   1348c:	mov	r0, #1
   13490:	pop	{r4, r5, fp, pc}
   13494:	push	{r4, sl, fp, lr}
   13498:	add	fp, sp, #8
   1349c:	mov	r4, r0
   134a0:	mov	r0, #0
   134a4:	bl	142c4 <putchar_unlocked@plt+0x32e4>
   134a8:	ldrb	r1, [r4, #7]
   134ac:	cmp	r0, #0
   134b0:	beq	134c4 <putchar_unlocked@plt+0x24e4>
   134b4:	tst	r1, #223	; 0xdf
   134b8:	bne	134cc <putchar_unlocked@plt+0x24ec>
   134bc:	mov	r0, #1
   134c0:	pop	{r4, sl, fp, pc}
   134c4:	cmp	r1, #0
   134c8:	beq	134bc <putchar_unlocked@plt+0x24dc>
   134cc:	mov	r0, #0
   134d0:	pop	{r4, sl, fp, pc}
   134d4:	push	{r4, r5, fp, lr}
   134d8:	add	fp, sp, #8
   134dc:	mov	r5, r0
   134e0:	mov	r0, #33	; 0x21
   134e4:	bl	13b6c <putchar_unlocked@plt+0x2b8c>
   134e8:	mov	r4, r0
   134ec:	add	r1, r5, #44	; 0x2c
   134f0:	mov	r2, #32
   134f4:	bl	10f2c <strncpy@plt>
   134f8:	mov	r5, #0
   134fc:	strb	r5, [r0, #32]
   13500:	bl	10efc <strlen@plt>
   13504:	cmp	r0, #1
   13508:	blt	13530 <putchar_unlocked@plt+0x2550>
   1350c:	add	r1, r4, r0
   13510:	mov	r0, r1
   13514:	ldrb	r2, [r0, #-1]!
   13518:	cmp	r2, #32
   1351c:	bne	13530 <putchar_unlocked@plt+0x2550>
   13520:	strb	r5, [r1, #-1]
   13524:	cmp	r4, r0
   13528:	mov	r1, r0
   1352c:	bcc	13514 <putchar_unlocked@plt+0x2534>
   13530:	mov	r0, r4
   13534:	pop	{r4, r5, fp, pc}
   13538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1353c:	add	fp, sp, #28
   13540:	sub	sp, sp, #12
   13544:	mov	r6, r3
   13548:	str	r2, [sp, #4]
   1354c:	mov	r9, r1
   13550:	mov	r7, #0
   13554:	str	r7, [sp, #8]
   13558:	bl	10dc4 <utmpxname@plt>
   1355c:	bl	10e0c <setutxent@plt>
   13560:	bl	10fd4 <getutxent@plt>
   13564:	cmp	r0, #0
   13568:	beq	135ec <putchar_unlocked@plt+0x260c>
   1356c:	mov	r5, r0
   13570:	mov	r4, #0
   13574:	mov	r8, #384	; 0x180
   13578:	add	sl, sp, #8
   1357c:	mov	r7, #0
   13580:	b	135ac <putchar_unlocked@plt+0x25cc>
   13584:	add	r0, r4, r4, lsl #1
   13588:	add	r0, r7, r0, lsl #7
   1358c:	mov	r1, r5
   13590:	mov	r2, #384	; 0x180
   13594:	bl	10de8 <memcpy@plt>
   13598:	add	r4, r4, #1
   1359c:	bl	10fd4 <getutxent@plt>
   135a0:	mov	r5, r0
   135a4:	cmp	r0, #0
   135a8:	beq	135f0 <putchar_unlocked@plt+0x2610>
   135ac:	mov	r0, r5
   135b0:	mov	r1, r6
   135b4:	bl	1360c <putchar_unlocked@plt+0x262c>
   135b8:	cmp	r0, #0
   135bc:	beq	1359c <putchar_unlocked@plt+0x25bc>
   135c0:	ldr	r0, [sp, #8]
   135c4:	cmp	r4, r0
   135c8:	bne	13584 <putchar_unlocked@plt+0x25a4>
   135cc:	str	r8, [sp]
   135d0:	mov	r0, r7
   135d4:	mov	r1, sl
   135d8:	mov	r2, #1
   135dc:	mvn	r3, #0
   135e0:	bl	13c84 <putchar_unlocked@plt+0x2ca4>
   135e4:	mov	r7, r0
   135e8:	b	13584 <putchar_unlocked@plt+0x25a4>
   135ec:	mov	r4, #0
   135f0:	bl	10f74 <endutxent@plt>
   135f4:	str	r4, [r9]
   135f8:	ldr	r0, [sp, #4]
   135fc:	str	r7, [r0]
   13600:	mov	r0, #0
   13604:	sub	sp, fp, #28
   13608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1360c:	push	{r4, sl, fp, lr}
   13610:	add	fp, sp, #8
   13614:	ldrb	r2, [r0, #44]	; 0x2c
   13618:	mov	r4, #0
   1361c:	cmp	r2, #0
   13620:	mov	r2, #0
   13624:	beq	13638 <putchar_unlocked@plt+0x2658>
   13628:	ldrh	r2, [r0]
   1362c:	sub	r2, r2, #7
   13630:	clz	r2, r2
   13634:	lsr	r2, r2, #5
   13638:	tst	r1, #2
   1363c:	beq	13650 <putchar_unlocked@plt+0x2670>
   13640:	cmp	r2, #0
   13644:	bne	13650 <putchar_unlocked@plt+0x2670>
   13648:	mov	r0, r4
   1364c:	pop	{r4, sl, fp, pc}
   13650:	tst	r1, #1
   13654:	beq	13680 <putchar_unlocked@plt+0x26a0>
   13658:	eors	r1, r2, #1
   1365c:	bne	13680 <putchar_unlocked@plt+0x26a0>
   13660:	ldr	r0, [r0, #4]
   13664:	cmp	r0, #1
   13668:	blt	13680 <putchar_unlocked@plt+0x26a0>
   1366c:	mov	r4, #0
   13670:	mov	r1, #0
   13674:	bl	10ecc <kill@plt>
   13678:	cmn	r0, #1
   1367c:	ble	1368c <putchar_unlocked@plt+0x26ac>
   13680:	mov	r4, #1
   13684:	mov	r0, r4
   13688:	pop	{r4, sl, fp, pc}
   1368c:	bl	10f08 <__errno_location@plt>
   13690:	ldr	r0, [r0]
   13694:	cmp	r0, #3
   13698:	movne	r4, #1
   1369c:	mov	r0, r4
   136a0:	pop	{r4, sl, fp, pc}
   136a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   136a8:	add	fp, sp, #24
   136ac:	sub	sp, sp, #32
   136b0:	mov	r4, r2
   136b4:	mov	r8, r0
   136b8:	ldr	r6, [fp, #12]
   136bc:	ldr	r7, [fp, #8]
   136c0:	cmp	r1, #0
   136c4:	beq	136ec <putchar_unlocked@plt+0x270c>
   136c8:	mov	r5, r1
   136cc:	str	r4, [sp]
   136d0:	str	r3, [sp, #4]
   136d4:	movw	r2, #19600	; 0x4c90
   136d8:	movt	r2, #1
   136dc:	mov	r0, r8
   136e0:	mov	r1, #1
   136e4:	mov	r3, r5
   136e8:	b	13704 <putchar_unlocked@plt+0x2724>
   136ec:	str	r3, [sp]
   136f0:	movw	r2, #19612	; 0x4c9c
   136f4:	movt	r2, #1
   136f8:	mov	r0, r8
   136fc:	mov	r1, #1
   13700:	mov	r3, r4
   13704:	bl	10f50 <__fprintf_chk@plt>
   13708:	movw	r1, #19619	; 0x4ca3
   1370c:	movt	r1, #1
   13710:	mov	r0, #0
   13714:	mov	r2, #5
   13718:	bl	10e00 <dcgettext@plt>
   1371c:	mov	r3, r0
   13720:	movw	r0, #2022	; 0x7e6
   13724:	str	r0, [sp]
   13728:	movw	r2, #20337	; 0x4f71
   1372c:	movt	r2, #1
   13730:	mov	r0, r8
   13734:	mov	r1, #1
   13738:	bl	10f50 <__fprintf_chk@plt>
   1373c:	movw	r4, #18655	; 0x48df
   13740:	movt	r4, #1
   13744:	mov	r0, r4
   13748:	mov	r1, r8
   1374c:	bl	10da0 <fputs_unlocked@plt>
   13750:	movw	r1, #19623	; 0x4ca7
   13754:	movt	r1, #1
   13758:	mov	r0, #0
   1375c:	mov	r2, #5
   13760:	bl	10e00 <dcgettext@plt>
   13764:	mov	r2, r0
   13768:	movw	r3, #19794	; 0x4d52
   1376c:	movt	r3, #1
   13770:	mov	r0, r8
   13774:	mov	r1, #1
   13778:	bl	10f50 <__fprintf_chk@plt>
   1377c:	mov	r0, r4
   13780:	mov	r1, r8
   13784:	bl	10da0 <fputs_unlocked@plt>
   13788:	cmp	r6, #9
   1378c:	bhi	137c8 <putchar_unlocked@plt+0x27e8>
   13790:	add	r0, pc, #0
   13794:	ldr	pc, [r0, r6, lsl #2]
   13798:	andeq	r3, r1, r0, asr #15
   1379c:	ldrdeq	r3, [r1], -r4
   137a0:	andeq	r3, r1, r4, lsl #16
   137a4:	andeq	r3, r1, ip, lsr #16
   137a8:	andeq	r3, r1, r4, asr r8
   137ac:	andeq	r3, r1, ip, ror r8
   137b0:	andeq	r3, r1, r4, lsr #17
   137b4:	ldrdeq	r3, [r1], -ip
   137b8:	andeq	r3, r1, ip, ror r9
   137bc:	andeq	r3, r1, r4, lsr #18
   137c0:	sub	sp, fp, #24
   137c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137c8:	movw	r1, #20147	; 0x4eb3
   137cc:	movt	r1, #1
   137d0:	b	1392c <putchar_unlocked@plt+0x294c>
   137d4:	movw	r1, #19828	; 0x4d74
   137d8:	movt	r1, #1
   137dc:	mov	r0, #0
   137e0:	mov	r2, #5
   137e4:	bl	10e00 <dcgettext@plt>
   137e8:	mov	r2, r0
   137ec:	ldr	r3, [r7]
   137f0:	mov	r0, r8
   137f4:	mov	r1, #1
   137f8:	sub	sp, fp, #24
   137fc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13800:	b	10f50 <__fprintf_chk@plt>
   13804:	movw	r1, #19844	; 0x4d84
   13808:	movt	r1, #1
   1380c:	mov	r0, #0
   13810:	mov	r2, #5
   13814:	bl	10e00 <dcgettext@plt>
   13818:	mov	r2, r0
   1381c:	ldr	r3, [r7]
   13820:	ldr	r0, [r7, #4]
   13824:	str	r0, [sp]
   13828:	b	13918 <putchar_unlocked@plt+0x2938>
   1382c:	movw	r1, #19867	; 0x4d9b
   13830:	movt	r1, #1
   13834:	mov	r0, #0
   13838:	mov	r2, #5
   1383c:	bl	10e00 <dcgettext@plt>
   13840:	mov	r2, r0
   13844:	ldr	r3, [r7]
   13848:	ldmib	r7, {r0, r1}
   1384c:	stm	sp, {r0, r1}
   13850:	b	13918 <putchar_unlocked@plt+0x2938>
   13854:	movw	r1, #19895	; 0x4db7
   13858:	movt	r1, #1
   1385c:	mov	r0, #0
   13860:	mov	r2, #5
   13864:	bl	10e00 <dcgettext@plt>
   13868:	mov	r2, r0
   1386c:	ldr	r3, [r7]
   13870:	ldmib	r7, {r0, r1, r7}
   13874:	stm	sp, {r0, r1, r7}
   13878:	b	13918 <putchar_unlocked@plt+0x2938>
   1387c:	movw	r1, #19927	; 0x4dd7
   13880:	movt	r1, #1
   13884:	mov	r0, #0
   13888:	mov	r2, #5
   1388c:	bl	10e00 <dcgettext@plt>
   13890:	mov	r2, r0
   13894:	ldr	r3, [r7]
   13898:	ldmib	r7, {r0, r1, r6, r7}
   1389c:	stm	sp, {r0, r1, r6, r7}
   138a0:	b	13918 <putchar_unlocked@plt+0x2938>
   138a4:	movw	r1, #19963	; 0x4dfb
   138a8:	movt	r1, #1
   138ac:	mov	r0, #0
   138b0:	mov	r2, #5
   138b4:	bl	10e00 <dcgettext@plt>
   138b8:	mov	r2, r0
   138bc:	ldr	r3, [r7]
   138c0:	ldmib	r7, {r0, r1, r6}
   138c4:	ldr	r5, [r7, #16]
   138c8:	ldr	r7, [r7, #20]
   138cc:	stm	sp, {r0, r1, r6}
   138d0:	str	r5, [sp, #12]
   138d4:	str	r7, [sp, #16]
   138d8:	b	13918 <putchar_unlocked@plt+0x2938>
   138dc:	movw	r1, #20003	; 0x4e23
   138e0:	movt	r1, #1
   138e4:	mov	r0, #0
   138e8:	mov	r2, #5
   138ec:	bl	10e00 <dcgettext@plt>
   138f0:	mov	r2, r0
   138f4:	ldr	r3, [r7]
   138f8:	ldmib	r7, {r0, r1, r6}
   138fc:	ldr	r5, [r7, #16]
   13900:	ldr	r4, [r7, #20]
   13904:	ldr	r7, [r7, #24]
   13908:	stm	sp, {r0, r1, r6}
   1390c:	str	r5, [sp, #12]
   13910:	str	r4, [sp, #16]
   13914:	str	r7, [sp, #20]
   13918:	mov	r0, r8
   1391c:	mov	r1, #1
   13920:	b	139cc <putchar_unlocked@plt+0x29ec>
   13924:	movw	r1, #20095	; 0x4e7f
   13928:	movt	r1, #1
   1392c:	mov	r0, #0
   13930:	mov	r2, #5
   13934:	bl	10e00 <dcgettext@plt>
   13938:	mov	ip, r0
   1393c:	ldr	r3, [r7]
   13940:	ldr	r0, [r7, #4]
   13944:	ldr	r1, [r7, #8]
   13948:	ldr	r6, [r7, #12]
   1394c:	ldr	r5, [r7, #16]
   13950:	ldr	r4, [r7, #20]
   13954:	ldr	r2, [r7, #24]
   13958:	ldr	lr, [r7, #28]
   1395c:	ldr	r7, [r7, #32]
   13960:	stm	sp, {r0, r1, r6}
   13964:	str	r5, [sp, #12]
   13968:	str	r4, [sp, #16]
   1396c:	str	r2, [sp, #20]
   13970:	str	lr, [sp, #24]
   13974:	str	r7, [sp, #28]
   13978:	b	139c0 <putchar_unlocked@plt+0x29e0>
   1397c:	movw	r1, #20047	; 0x4e4f
   13980:	movt	r1, #1
   13984:	mov	r0, #0
   13988:	mov	r2, #5
   1398c:	bl	10e00 <dcgettext@plt>
   13990:	mov	ip, r0
   13994:	ldr	r3, [r7]
   13998:	ldmib	r7, {r0, r1, r6}
   1399c:	ldr	r5, [r7, #16]
   139a0:	ldr	r4, [r7, #20]
   139a4:	ldr	r2, [r7, #24]
   139a8:	ldr	r7, [r7, #28]
   139ac:	stm	sp, {r0, r1, r6}
   139b0:	str	r5, [sp, #12]
   139b4:	str	r4, [sp, #16]
   139b8:	str	r2, [sp, #20]
   139bc:	str	r7, [sp, #24]
   139c0:	mov	r0, r8
   139c4:	mov	r1, #1
   139c8:	mov	r2, ip
   139cc:	bl	10f50 <__fprintf_chk@plt>
   139d0:	sub	sp, fp, #24
   139d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   139d8:	push	{r4, sl, fp, lr}
   139dc:	add	fp, sp, #8
   139e0:	sub	sp, sp, #8
   139e4:	mov	lr, #0
   139e8:	ldr	ip, [fp, #8]
   139ec:	ldr	r4, [ip, lr, lsl #2]
   139f0:	add	lr, lr, #1
   139f4:	cmp	r4, #0
   139f8:	bne	139ec <putchar_unlocked@plt+0x2a0c>
   139fc:	sub	r4, lr, #1
   13a00:	str	ip, [sp]
   13a04:	str	r4, [sp, #4]
   13a08:	bl	136a4 <putchar_unlocked@plt+0x26c4>
   13a0c:	sub	sp, fp, #8
   13a10:	pop	{r4, sl, fp, pc}
   13a14:	push	{r4, r5, fp, lr}
   13a18:	add	fp, sp, #8
   13a1c:	sub	sp, sp, #48	; 0x30
   13a20:	mov	ip, #0
   13a24:	ldr	r4, [fp, #8]
   13a28:	add	lr, sp, #8
   13a2c:	ldr	r5, [r4]
   13a30:	str	r5, [lr, ip, lsl #2]
   13a34:	cmp	r5, #0
   13a38:	beq	13a50 <putchar_unlocked@plt+0x2a70>
   13a3c:	add	ip, ip, #1
   13a40:	add	r4, r4, #4
   13a44:	cmp	ip, #10
   13a48:	bne	13a2c <putchar_unlocked@plt+0x2a4c>
   13a4c:	mov	ip, #10
   13a50:	str	lr, [sp]
   13a54:	str	ip, [sp, #4]
   13a58:	bl	136a4 <putchar_unlocked@plt+0x26c4>
   13a5c:	sub	sp, fp, #8
   13a60:	pop	{r4, r5, fp, pc}
   13a64:	push	{fp, lr}
   13a68:	mov	fp, sp
   13a6c:	sub	sp, sp, #8
   13a70:	add	ip, fp, #8
   13a74:	str	ip, [sp, #4]
   13a78:	str	ip, [sp]
   13a7c:	bl	13a14 <putchar_unlocked@plt+0x2a34>
   13a80:	mov	sp, fp
   13a84:	pop	{fp, pc}
   13a88:	push	{fp, lr}
   13a8c:	mov	fp, sp
   13a90:	movw	r0, #24892	; 0x613c
   13a94:	movt	r0, #2
   13a98:	ldr	r1, [r0]
   13a9c:	movw	r0, #18655	; 0x48df
   13aa0:	movt	r0, #1
   13aa4:	bl	10da0 <fputs_unlocked@plt>
   13aa8:	movw	r1, #20207	; 0x4eef
   13aac:	movt	r1, #1
   13ab0:	mov	r0, #0
   13ab4:	mov	r2, #5
   13ab8:	bl	10e00 <dcgettext@plt>
   13abc:	mov	r1, r0
   13ac0:	movw	r2, #20227	; 0x4f03
   13ac4:	movt	r2, #1
   13ac8:	mov	r0, #1
   13acc:	bl	10f38 <__printf_chk@plt>
   13ad0:	movw	r1, #20249	; 0x4f19
   13ad4:	movt	r1, #1
   13ad8:	mov	r0, #0
   13adc:	mov	r2, #5
   13ae0:	bl	10e00 <dcgettext@plt>
   13ae4:	mov	r1, r0
   13ae8:	movw	r2, #18814	; 0x497e
   13aec:	movt	r2, #1
   13af0:	movw	r3, #18996	; 0x4a34
   13af4:	movt	r3, #1
   13af8:	mov	r0, #1
   13afc:	bl	10f38 <__printf_chk@plt>
   13b00:	movw	r1, #20269	; 0x4f2d
   13b04:	movt	r1, #1
   13b08:	mov	r0, #0
   13b0c:	mov	r2, #5
   13b10:	bl	10e00 <dcgettext@plt>
   13b14:	mov	r1, r0
   13b18:	movw	r2, #20308	; 0x4f54
   13b1c:	movt	r2, #1
   13b20:	mov	r0, #1
   13b24:	pop	{fp, lr}
   13b28:	b	10f38 <__printf_chk@plt>
   13b2c:	b	13b30 <putchar_unlocked@plt+0x2b50>
   13b30:	push	{r4, r5, r6, sl, fp, lr}
   13b34:	add	fp, sp, #16
   13b38:	mov	r4, r2
   13b3c:	mov	r5, r1
   13b40:	mov	r6, r0
   13b44:	bl	14654 <putchar_unlocked@plt+0x3674>
   13b48:	cmp	r0, #0
   13b4c:	popne	{r4, r5, r6, sl, fp, pc}
   13b50:	cmp	r6, #0
   13b54:	beq	13b68 <putchar_unlocked@plt+0x2b88>
   13b58:	cmp	r5, #0
   13b5c:	cmpne	r4, #0
   13b60:	bne	13b68 <putchar_unlocked@plt+0x2b88>
   13b64:	pop	{r4, r5, r6, sl, fp, pc}
   13b68:	bl	13ef4 <putchar_unlocked@plt+0x2f14>
   13b6c:	push	{fp, lr}
   13b70:	mov	fp, sp
   13b74:	bl	13f8c <putchar_unlocked@plt+0x2fac>
   13b78:	pop	{fp, lr}
   13b7c:	b	13b80 <putchar_unlocked@plt+0x2ba0>
   13b80:	cmp	r0, #0
   13b84:	bxne	lr
   13b88:	push	{fp, lr}
   13b8c:	mov	fp, sp
   13b90:	bl	13ef4 <putchar_unlocked@plt+0x2f14>
   13b94:	push	{fp, lr}
   13b98:	mov	fp, sp
   13b9c:	bl	14584 <putchar_unlocked@plt+0x35a4>
   13ba0:	pop	{fp, lr}
   13ba4:	b	13b80 <putchar_unlocked@plt+0x2ba0>
   13ba8:	b	13b6c <putchar_unlocked@plt+0x2b8c>
   13bac:	push	{r4, r5, fp, lr}
   13bb0:	add	fp, sp, #8
   13bb4:	mov	r4, r1
   13bb8:	mov	r5, r0
   13bbc:	bl	13fbc <putchar_unlocked@plt+0x2fdc>
   13bc0:	cmp	r0, #0
   13bc4:	popne	{r4, r5, fp, pc}
   13bc8:	cmp	r5, #0
   13bcc:	beq	13bdc <putchar_unlocked@plt+0x2bfc>
   13bd0:	cmp	r4, #0
   13bd4:	bne	13bdc <putchar_unlocked@plt+0x2bfc>
   13bd8:	pop	{r4, r5, fp, pc}
   13bdc:	bl	13ef4 <putchar_unlocked@plt+0x2f14>
   13be0:	push	{fp, lr}
   13be4:	mov	fp, sp
   13be8:	bl	14588 <putchar_unlocked@plt+0x35a8>
   13bec:	pop	{fp, lr}
   13bf0:	b	13b80 <putchar_unlocked@plt+0x2ba0>
   13bf4:	push	{fp, lr}
   13bf8:	mov	fp, sp
   13bfc:	bl	14598 <putchar_unlocked@plt+0x35b8>
   13c00:	pop	{fp, lr}
   13c04:	b	13b80 <putchar_unlocked@plt+0x2ba0>
   13c08:	mov	r2, r1
   13c0c:	mov	r1, r0
   13c10:	mov	r0, #0
   13c14:	b	13b30 <putchar_unlocked@plt+0x2b50>
   13c18:	mov	r2, r1
   13c1c:	mov	r1, r0
   13c20:	mov	r0, #0
   13c24:	b	13bf4 <putchar_unlocked@plt+0x2c14>
   13c28:	mov	r2, #1
   13c2c:	b	13c30 <putchar_unlocked@plt+0x2c50>
   13c30:	push	{r4, r5, fp, lr}
   13c34:	add	fp, sp, #8
   13c38:	mov	r4, r1
   13c3c:	ldr	r5, [r1]
   13c40:	cmp	r0, #0
   13c44:	beq	13c5c <putchar_unlocked@plt+0x2c7c>
   13c48:	mov	r1, #1
   13c4c:	add	r1, r1, r5, lsr #1
   13c50:	adds	r5, r5, r1
   13c54:	bcc	13c74 <putchar_unlocked@plt+0x2c94>
   13c58:	bl	13ef4 <putchar_unlocked@plt+0x2f14>
   13c5c:	cmp	r5, #0
   13c60:	bne	13c74 <putchar_unlocked@plt+0x2c94>
   13c64:	mov	r1, #64	; 0x40
   13c68:	udiv	r5, r1, r2
   13c6c:	cmp	r2, #64	; 0x40
   13c70:	addhi	r5, r5, #1
   13c74:	mov	r1, r5
   13c78:	bl	13b30 <putchar_unlocked@plt+0x2b50>
   13c7c:	str	r5, [r4]
   13c80:	pop	{r4, r5, fp, pc}
   13c84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c88:	add	fp, sp, #24
   13c8c:	mov	r8, r1
   13c90:	ldr	r6, [r1]
   13c94:	add	r1, r6, r6, asr #1
   13c98:	cmp	r1, r6
   13c9c:	mvnvs	r1, #-2147483648	; 0x80000000
   13ca0:	cmp	r1, r3
   13ca4:	mov	r5, r1
   13ca8:	movgt	r5, r3
   13cac:	cmn	r3, #1
   13cb0:	movle	r5, r1
   13cb4:	ldr	r4, [fp, #8]
   13cb8:	cmn	r4, #1
   13cbc:	ble	13ce4 <putchar_unlocked@plt+0x2d04>
   13cc0:	cmp	r4, #0
   13cc4:	beq	13d38 <putchar_unlocked@plt+0x2d58>
   13cc8:	cmn	r5, #1
   13ccc:	ble	13d0c <putchar_unlocked@plt+0x2d2c>
   13cd0:	mvn	r7, #-2147483648	; 0x80000000
   13cd4:	udiv	r1, r7, r4
   13cd8:	cmp	r1, r5
   13cdc:	bge	13d38 <putchar_unlocked@plt+0x2d58>
   13ce0:	b	13d48 <putchar_unlocked@plt+0x2d68>
   13ce4:	cmn	r5, #1
   13ce8:	ble	13d28 <putchar_unlocked@plt+0x2d48>
   13cec:	cmn	r4, #1
   13cf0:	beq	13d38 <putchar_unlocked@plt+0x2d58>
   13cf4:	mov	r1, #-2147483648	; 0x80000000
   13cf8:	sdiv	r1, r1, r4
   13cfc:	mvn	r7, #-2147483648	; 0x80000000
   13d00:	cmp	r1, r5
   13d04:	bge	13d38 <putchar_unlocked@plt+0x2d58>
   13d08:	b	13d48 <putchar_unlocked@plt+0x2d68>
   13d0c:	beq	13d38 <putchar_unlocked@plt+0x2d58>
   13d10:	mov	r1, #-2147483648	; 0x80000000
   13d14:	sdiv	r1, r1, r5
   13d18:	mvn	r7, #-2147483648	; 0x80000000
   13d1c:	cmp	r1, r4
   13d20:	bge	13d38 <putchar_unlocked@plt+0x2d58>
   13d24:	b	13d48 <putchar_unlocked@plt+0x2d68>
   13d28:	mvn	r7, #-2147483648	; 0x80000000
   13d2c:	sdiv	r1, r7, r4
   13d30:	cmp	r5, r1
   13d34:	blt	13d48 <putchar_unlocked@plt+0x2d68>
   13d38:	mul	r1, r5, r4
   13d3c:	mov	r7, #64	; 0x40
   13d40:	cmp	r1, #63	; 0x3f
   13d44:	bgt	13d50 <putchar_unlocked@plt+0x2d70>
   13d48:	sdiv	r5, r7, r4
   13d4c:	mul	r1, r5, r4
   13d50:	cmp	r0, #0
   13d54:	moveq	r7, #0
   13d58:	streq	r7, [r8]
   13d5c:	sub	r7, r5, r6
   13d60:	cmp	r7, r2
   13d64:	bge	13e10 <putchar_unlocked@plt+0x2e30>
   13d68:	add	r5, r6, r2
   13d6c:	mov	r1, #0
   13d70:	cmp	r5, r3
   13d74:	mov	r2, #0
   13d78:	movwgt	r2, #1
   13d7c:	cmn	r3, #1
   13d80:	movwgt	r1, #1
   13d84:	cmp	r5, r6
   13d88:	bvs	13df8 <putchar_unlocked@plt+0x2e18>
   13d8c:	ands	r1, r1, r2
   13d90:	bne	13df8 <putchar_unlocked@plt+0x2e18>
   13d94:	cmn	r4, #1
   13d98:	ble	13dc0 <putchar_unlocked@plt+0x2de0>
   13d9c:	cmp	r4, #0
   13da0:	beq	13e0c <putchar_unlocked@plt+0x2e2c>
   13da4:	cmn	r5, #1
   13da8:	ble	13de4 <putchar_unlocked@plt+0x2e04>
   13dac:	mvn	r1, #-2147483648	; 0x80000000
   13db0:	udiv	r1, r1, r4
   13db4:	cmp	r1, r5
   13db8:	bge	13e0c <putchar_unlocked@plt+0x2e2c>
   13dbc:	b	13df8 <putchar_unlocked@plt+0x2e18>
   13dc0:	cmn	r5, #1
   13dc4:	ble	13dfc <putchar_unlocked@plt+0x2e1c>
   13dc8:	cmn	r4, #1
   13dcc:	beq	13e0c <putchar_unlocked@plt+0x2e2c>
   13dd0:	mov	r1, #-2147483648	; 0x80000000
   13dd4:	sdiv	r1, r1, r4
   13dd8:	cmp	r1, r5
   13ddc:	bge	13e0c <putchar_unlocked@plt+0x2e2c>
   13de0:	b	13df8 <putchar_unlocked@plt+0x2e18>
   13de4:	beq	13e0c <putchar_unlocked@plt+0x2e2c>
   13de8:	mov	r1, #-2147483648	; 0x80000000
   13dec:	sdiv	r1, r1, r5
   13df0:	cmp	r1, r4
   13df4:	bge	13e0c <putchar_unlocked@plt+0x2e2c>
   13df8:	bl	13ef4 <putchar_unlocked@plt+0x2f14>
   13dfc:	mvn	r1, #-2147483648	; 0x80000000
   13e00:	sdiv	r1, r1, r4
   13e04:	cmp	r5, r1
   13e08:	blt	13df8 <putchar_unlocked@plt+0x2e18>
   13e0c:	mul	r1, r5, r4
   13e10:	bl	13bac <putchar_unlocked@plt+0x2bcc>
   13e14:	str	r5, [r8]
   13e18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e1c:	mov	r1, #1
   13e20:	b	13e24 <putchar_unlocked@plt+0x2e44>
   13e24:	push	{fp, lr}
   13e28:	mov	fp, sp
   13e2c:	bl	13f38 <putchar_unlocked@plt+0x2f58>
   13e30:	pop	{fp, lr}
   13e34:	b	13b80 <putchar_unlocked@plt+0x2ba0>
   13e38:	mov	r1, #1
   13e3c:	b	13e40 <putchar_unlocked@plt+0x2e60>
   13e40:	push	{fp, lr}
   13e44:	mov	fp, sp
   13e48:	bl	14594 <putchar_unlocked@plt+0x35b4>
   13e4c:	pop	{fp, lr}
   13e50:	b	13b80 <putchar_unlocked@plt+0x2ba0>
   13e54:	push	{r4, r5, fp, lr}
   13e58:	add	fp, sp, #8
   13e5c:	mov	r4, r1
   13e60:	mov	r5, r0
   13e64:	mov	r0, r1
   13e68:	bl	13b6c <putchar_unlocked@plt+0x2b8c>
   13e6c:	mov	r1, r5
   13e70:	mov	r2, r4
   13e74:	pop	{r4, r5, fp, lr}
   13e78:	b	10de8 <memcpy@plt>
   13e7c:	push	{r4, r5, fp, lr}
   13e80:	add	fp, sp, #8
   13e84:	mov	r4, r1
   13e88:	mov	r5, r0
   13e8c:	mov	r0, r1
   13e90:	bl	13b94 <putchar_unlocked@plt+0x2bb4>
   13e94:	mov	r1, r5
   13e98:	mov	r2, r4
   13e9c:	pop	{r4, r5, fp, lr}
   13ea0:	b	10de8 <memcpy@plt>
   13ea4:	push	{r4, r5, fp, lr}
   13ea8:	add	fp, sp, #8
   13eac:	mov	r4, r1
   13eb0:	mov	r5, r0
   13eb4:	add	r0, r1, #1
   13eb8:	bl	13b94 <putchar_unlocked@plt+0x2bb4>
   13ebc:	mov	r1, #0
   13ec0:	strb	r1, [r0, r4]
   13ec4:	mov	r1, r5
   13ec8:	mov	r2, r4
   13ecc:	pop	{r4, r5, fp, lr}
   13ed0:	b	10de8 <memcpy@plt>
   13ed4:	push	{r4, sl, fp, lr}
   13ed8:	add	fp, sp, #8
   13edc:	mov	r4, r0
   13ee0:	bl	10efc <strlen@plt>
   13ee4:	add	r1, r0, #1
   13ee8:	mov	r0, r4
   13eec:	pop	{r4, sl, fp, lr}
   13ef0:	b	13e54 <putchar_unlocked@plt+0x2e74>
   13ef4:	push	{fp, lr}
   13ef8:	mov	fp, sp
   13efc:	movw	r0, #24804	; 0x60e4
   13f00:	movt	r0, #2
   13f04:	ldr	r4, [r0]
   13f08:	movw	r1, #20384	; 0x4fa0
   13f0c:	movt	r1, #1
   13f10:	mov	r0, #0
   13f14:	mov	r2, #5
   13f18:	bl	10e00 <dcgettext@plt>
   13f1c:	mov	r3, r0
   13f20:	movw	r2, #19279	; 0x4b4f
   13f24:	movt	r2, #1
   13f28:	mov	r0, r4
   13f2c:	mov	r1, #0
   13f30:	bl	10e84 <error@plt>
   13f34:	bl	10fc8 <abort@plt>
   13f38:	clz	r2, r1
   13f3c:	lsr	r2, r2, #5
   13f40:	clz	r3, r0
   13f44:	lsr	r3, r3, #5
   13f48:	orrs	r2, r3, r2
   13f4c:	movwne	r1, #1
   13f50:	movwne	r0, #1
   13f54:	cmp	r1, #0
   13f58:	beq	13f88 <putchar_unlocked@plt+0x2fa8>
   13f5c:	mvn	r2, #-2147483648	; 0x80000000
   13f60:	udiv	r2, r2, r1
   13f64:	cmp	r2, r0
   13f68:	bcs	13f88 <putchar_unlocked@plt+0x2fa8>
   13f6c:	push	{fp, lr}
   13f70:	mov	fp, sp
   13f74:	bl	10f08 <__errno_location@plt>
   13f78:	mov	r1, #12
   13f7c:	str	r1, [r0]
   13f80:	mov	r0, #0
   13f84:	pop	{fp, pc}
   13f88:	b	10d94 <calloc@plt>
   13f8c:	cmp	r0, #0
   13f90:	movweq	r0, #1
   13f94:	cmn	r0, #1
   13f98:	ble	13fa0 <putchar_unlocked@plt+0x2fc0>
   13f9c:	b	10e90 <malloc@plt>
   13fa0:	push	{fp, lr}
   13fa4:	mov	fp, sp
   13fa8:	bl	10f08 <__errno_location@plt>
   13fac:	mov	r1, #12
   13fb0:	str	r1, [r0]
   13fb4:	mov	r0, #0
   13fb8:	pop	{fp, pc}
   13fbc:	push	{fp, lr}
   13fc0:	mov	fp, sp
   13fc4:	cmp	r0, #0
   13fc8:	beq	13fe4 <putchar_unlocked@plt+0x3004>
   13fcc:	cmp	r1, #0
   13fd0:	beq	13ff0 <putchar_unlocked@plt+0x3010>
   13fd4:	cmn	r1, #1
   13fd8:	ble	13ffc <putchar_unlocked@plt+0x301c>
   13fdc:	pop	{fp, lr}
   13fe0:	b	10e18 <realloc@plt>
   13fe4:	mov	r0, r1
   13fe8:	pop	{fp, lr}
   13fec:	b	13f8c <putchar_unlocked@plt+0x2fac>
   13ff0:	bl	1172c <putchar_unlocked@plt+0x74c>
   13ff4:	mov	r0, #0
   13ff8:	pop	{fp, pc}
   13ffc:	bl	10f08 <__errno_location@plt>
   14000:	mov	r1, #12
   14004:	str	r1, [r0]
   14008:	mov	r0, #0
   1400c:	pop	{fp, pc}
   14010:	mov	r1, r0
   14014:	sub	r2, r0, #65	; 0x41
   14018:	mov	r0, #1
   1401c:	cmp	r2, #26
   14020:	subcs	r2, r1, #97	; 0x61
   14024:	cmpcs	r2, #26
   14028:	bcs	14030 <putchar_unlocked@plt+0x3050>
   1402c:	bx	lr
   14030:	sub	r1, r1, #48	; 0x30
   14034:	cmp	r1, #10
   14038:	movcs	r0, #0
   1403c:	bx	lr
   14040:	mov	r1, r0
   14044:	sub	r2, r0, #65	; 0x41
   14048:	mov	r0, #1
   1404c:	cmp	r2, #26
   14050:	subcs	r1, r1, #97	; 0x61
   14054:	cmpcs	r1, #26
   14058:	movcs	r0, #0
   1405c:	bx	lr
   14060:	mov	r1, #0
   14064:	cmp	r0, #128	; 0x80
   14068:	movwcc	r1, #1
   1406c:	mov	r0, r1
   14070:	bx	lr
   14074:	sub	r1, r0, #9
   14078:	clz	r1, r1
   1407c:	lsr	r1, r1, #5
   14080:	sub	r0, r0, #32
   14084:	clz	r0, r0
   14088:	lsr	r0, r0, #5
   1408c:	orr	r0, r0, r1
   14090:	bx	lr
   14094:	mov	r1, r0
   14098:	mov	r0, #1
   1409c:	cmp	r1, #32
   140a0:	bxcc	lr
   140a4:	cmp	r1, #127	; 0x7f
   140a8:	movne	r0, #0
   140ac:	bx	lr
   140b0:	sub	r1, r0, #48	; 0x30
   140b4:	mov	r0, #0
   140b8:	cmp	r1, #10
   140bc:	movwcc	r0, #1
   140c0:	bx	lr
   140c4:	sub	r1, r0, #33	; 0x21
   140c8:	mov	r0, #0
   140cc:	cmp	r1, #94	; 0x5e
   140d0:	movwcc	r0, #1
   140d4:	bx	lr
   140d8:	sub	r1, r0, #97	; 0x61
   140dc:	mov	r0, #0
   140e0:	cmp	r1, #26
   140e4:	movwcc	r0, #1
   140e8:	bx	lr
   140ec:	sub	r1, r0, #32
   140f0:	mov	r0, #0
   140f4:	cmp	r1, #95	; 0x5f
   140f8:	movwcc	r0, #1
   140fc:	bx	lr
   14100:	sub	r1, r0, #33	; 0x21
   14104:	cmp	r1, #93	; 0x5d
   14108:	bhi	14294 <putchar_unlocked@plt+0x32b4>
   1410c:	mov	r0, #1
   14110:	add	r2, pc, #0
   14114:	ldr	pc, [r2, r1, lsl #2]
   14118:	muleq	r1, r0, r2
   1411c:	muleq	r1, r0, r2
   14120:	muleq	r1, r0, r2
   14124:	muleq	r1, r0, r2
   14128:	muleq	r1, r0, r2
   1412c:	muleq	r1, r0, r2
   14130:	muleq	r1, r0, r2
   14134:	muleq	r1, r0, r2
   14138:	muleq	r1, r0, r2
   1413c:	muleq	r1, r0, r2
   14140:	muleq	r1, r0, r2
   14144:	muleq	r1, r0, r2
   14148:	muleq	r1, r0, r2
   1414c:	muleq	r1, r0, r2
   14150:	muleq	r1, r0, r2
   14154:	muleq	r1, r4, r2
   14158:	muleq	r1, r4, r2
   1415c:	muleq	r1, r4, r2
   14160:	muleq	r1, r4, r2
   14164:	muleq	r1, r4, r2
   14168:	muleq	r1, r4, r2
   1416c:	muleq	r1, r4, r2
   14170:	muleq	r1, r4, r2
   14174:	muleq	r1, r4, r2
   14178:	muleq	r1, r4, r2
   1417c:	muleq	r1, r0, r2
   14180:	muleq	r1, r0, r2
   14184:	muleq	r1, r0, r2
   14188:	muleq	r1, r0, r2
   1418c:	muleq	r1, r0, r2
   14190:	muleq	r1, r0, r2
   14194:	muleq	r1, r0, r2
   14198:	muleq	r1, r4, r2
   1419c:	muleq	r1, r4, r2
   141a0:	muleq	r1, r4, r2
   141a4:	muleq	r1, r4, r2
   141a8:	muleq	r1, r4, r2
   141ac:	muleq	r1, r4, r2
   141b0:	muleq	r1, r4, r2
   141b4:	muleq	r1, r4, r2
   141b8:	muleq	r1, r4, r2
   141bc:	muleq	r1, r4, r2
   141c0:	muleq	r1, r4, r2
   141c4:	muleq	r1, r4, r2
   141c8:	muleq	r1, r4, r2
   141cc:	muleq	r1, r4, r2
   141d0:	muleq	r1, r4, r2
   141d4:	muleq	r1, r4, r2
   141d8:	muleq	r1, r4, r2
   141dc:	muleq	r1, r4, r2
   141e0:	muleq	r1, r4, r2
   141e4:	muleq	r1, r4, r2
   141e8:	muleq	r1, r4, r2
   141ec:	muleq	r1, r4, r2
   141f0:	muleq	r1, r4, r2
   141f4:	muleq	r1, r4, r2
   141f8:	muleq	r1, r4, r2
   141fc:	muleq	r1, r4, r2
   14200:	muleq	r1, r0, r2
   14204:	muleq	r1, r0, r2
   14208:	muleq	r1, r0, r2
   1420c:	muleq	r1, r0, r2
   14210:	muleq	r1, r0, r2
   14214:	muleq	r1, r0, r2
   14218:	muleq	r1, r4, r2
   1421c:	muleq	r1, r4, r2
   14220:	muleq	r1, r4, r2
   14224:	muleq	r1, r4, r2
   14228:	muleq	r1, r4, r2
   1422c:	muleq	r1, r4, r2
   14230:	muleq	r1, r4, r2
   14234:	muleq	r1, r4, r2
   14238:	muleq	r1, r4, r2
   1423c:	muleq	r1, r4, r2
   14240:	muleq	r1, r4, r2
   14244:	muleq	r1, r4, r2
   14248:	muleq	r1, r4, r2
   1424c:	muleq	r1, r4, r2
   14250:	muleq	r1, r4, r2
   14254:	muleq	r1, r4, r2
   14258:	muleq	r1, r4, r2
   1425c:	muleq	r1, r4, r2
   14260:	muleq	r1, r4, r2
   14264:	muleq	r1, r4, r2
   14268:	muleq	r1, r4, r2
   1426c:	muleq	r1, r4, r2
   14270:	muleq	r1, r4, r2
   14274:	muleq	r1, r4, r2
   14278:	muleq	r1, r4, r2
   1427c:	muleq	r1, r4, r2
   14280:	muleq	r1, r0, r2
   14284:	muleq	r1, r0, r2
   14288:	muleq	r1, r0, r2
   1428c:	muleq	r1, r0, r2
   14290:	bx	lr
   14294:	mov	r0, #0
   14298:	bx	lr
   1429c:	sub	r0, r0, #9
   142a0:	cmp	r0, #23
   142a4:	movhi	r0, #0
   142a8:	bxhi	lr
   142ac:	bic	r0, r0, #-16777216	; 0xff000000
   142b0:	movw	r1, #31
   142b4:	movt	r1, #128	; 0x80
   142b8:	mov	r2, #1
   142bc:	and	r0, r2, r1, lsr r0
   142c0:	bx	lr
   142c4:	sub	r1, r0, #65	; 0x41
   142c8:	mov	r0, #0
   142cc:	cmp	r1, #26
   142d0:	movwcc	r0, #1
   142d4:	bx	lr
   142d8:	mov	r1, r0
   142dc:	sub	r2, r0, #48	; 0x30
   142e0:	mov	r0, #1
   142e4:	cmp	r2, #22
   142e8:	bhi	14300 <putchar_unlocked@plt+0x3320>
   142ec:	mov	ip, #1
   142f0:	movw	r3, #1023	; 0x3ff
   142f4:	movt	r3, #126	; 0x7e
   142f8:	tst	r3, ip, lsl r2
   142fc:	bxne	lr
   14300:	sub	r1, r1, #97	; 0x61
   14304:	cmp	r1, #6
   14308:	movcs	r0, #0
   1430c:	bxcs	lr
   14310:	bx	lr
   14314:	sub	r1, r0, #65	; 0x41
   14318:	cmp	r1, #26
   1431c:	addcc	r0, r0, #32
   14320:	bx	lr
   14324:	sub	r1, r0, #97	; 0x61
   14328:	cmp	r1, #26
   1432c:	subcc	r0, r0, #32
   14330:	bx	lr
   14334:	push	{r4, r5, r6, sl, fp, lr}
   14338:	add	fp, sp, #16
   1433c:	mov	r4, r0
   14340:	bl	10e60 <__fpending@plt>
   14344:	mov	r5, r0
   14348:	mov	r0, r4
   1434c:	bl	10e6c <ferror_unlocked@plt>
   14350:	mov	r6, r0
   14354:	mov	r0, r4
   14358:	bl	143b8 <putchar_unlocked@plt+0x33d8>
   1435c:	cmp	r6, #0
   14360:	beq	14384 <putchar_unlocked@plt+0x33a4>
   14364:	mvn	r4, #0
   14368:	cmp	r0, #0
   1436c:	bne	143b0 <putchar_unlocked@plt+0x33d0>
   14370:	bl	10f08 <__errno_location@plt>
   14374:	mov	r1, #0
   14378:	str	r1, [r0]
   1437c:	mov	r0, r4
   14380:	pop	{r4, r5, r6, sl, fp, pc}
   14384:	cmp	r0, #0
   14388:	mov	r4, r0
   1438c:	mvnne	r4, #0
   14390:	cmp	r5, #0
   14394:	bne	143b0 <putchar_unlocked@plt+0x33d0>
   14398:	cmp	r0, #0
   1439c:	beq	143b0 <putchar_unlocked@plt+0x33d0>
   143a0:	bl	10f08 <__errno_location@plt>
   143a4:	ldr	r0, [r0]
   143a8:	subs	r4, r0, #9
   143ac:	mvnne	r4, #0
   143b0:	mov	r0, r4
   143b4:	pop	{r4, r5, r6, sl, fp, pc}
   143b8:	push	{r4, r5, fp, lr}
   143bc:	add	fp, sp, #8
   143c0:	sub	sp, sp, #8
   143c4:	mov	r4, r0
   143c8:	bl	10f44 <fileno@plt>
   143cc:	cmn	r0, #1
   143d0:	ble	14448 <putchar_unlocked@plt+0x3468>
   143d4:	mov	r0, r4
   143d8:	bl	10ea8 <__freading@plt>
   143dc:	cmp	r0, #0
   143e0:	beq	1440c <putchar_unlocked@plt+0x342c>
   143e4:	mov	r0, r4
   143e8:	bl	10f44 <fileno@plt>
   143ec:	mov	r1, #1
   143f0:	str	r1, [sp]
   143f4:	mov	r2, #0
   143f8:	mov	r3, #0
   143fc:	bl	10e48 <lseek64@plt>
   14400:	and	r0, r0, r1
   14404:	cmn	r0, #1
   14408:	beq	14448 <putchar_unlocked@plt+0x3468>
   1440c:	mov	r0, r4
   14410:	bl	14458 <putchar_unlocked@plt+0x3478>
   14414:	cmp	r0, #0
   14418:	beq	14448 <putchar_unlocked@plt+0x3468>
   1441c:	bl	10f08 <__errno_location@plt>
   14420:	ldr	r5, [r0]
   14424:	mov	r0, r4
   14428:	bl	10f5c <fclose@plt>
   1442c:	cmp	r5, #0
   14430:	beq	14440 <putchar_unlocked@plt+0x3460>
   14434:	bl	10f08 <__errno_location@plt>
   14438:	str	r5, [r0]
   1443c:	mvn	r0, #0
   14440:	sub	sp, fp, #8
   14444:	pop	{r4, r5, fp, pc}
   14448:	mov	r0, r4
   1444c:	sub	sp, fp, #8
   14450:	pop	{r4, r5, fp, lr}
   14454:	b	10f5c <fclose@plt>
   14458:	push	{r4, sl, fp, lr}
   1445c:	add	fp, sp, #8
   14460:	mov	r4, r0
   14464:	cmp	r0, #0
   14468:	beq	14480 <putchar_unlocked@plt+0x34a0>
   1446c:	mov	r0, r4
   14470:	bl	10ea8 <__freading@plt>
   14474:	cmp	r0, #0
   14478:	movne	r0, r4
   1447c:	blne	1448c <putchar_unlocked@plt+0x34ac>
   14480:	mov	r0, r4
   14484:	pop	{r4, sl, fp, lr}
   14488:	b	10db8 <fflush@plt>
   1448c:	push	{fp, lr}
   14490:	mov	fp, sp
   14494:	sub	sp, sp, #8
   14498:	ldrb	r1, [r0, #1]
   1449c:	tst	r1, #1
   144a0:	beq	144b8 <putchar_unlocked@plt+0x34d8>
   144a4:	mov	r1, #1
   144a8:	str	r1, [sp]
   144ac:	mov	r2, #0
   144b0:	mov	r3, #0
   144b4:	bl	144c0 <putchar_unlocked@plt+0x34e0>
   144b8:	mov	sp, fp
   144bc:	pop	{fp, pc}
   144c0:	push	{r4, r5, r6, r7, fp, lr}
   144c4:	add	fp, sp, #16
   144c8:	sub	sp, sp, #8
   144cc:	mov	r5, r3
   144d0:	mov	r6, r2
   144d4:	mov	r4, r0
   144d8:	ldr	r0, [r0, #4]
   144dc:	ldr	r1, [r4, #8]
   144e0:	cmp	r1, r0
   144e4:	bne	14500 <putchar_unlocked@plt+0x3520>
   144e8:	ldrd	r0, [r4, #16]
   144ec:	cmp	r1, r0
   144f0:	bne	14500 <putchar_unlocked@plt+0x3520>
   144f4:	ldr	r0, [r4, #36]	; 0x24
   144f8:	cmp	r0, #0
   144fc:	beq	14518 <putchar_unlocked@plt+0x3538>
   14500:	mov	r0, r4
   14504:	mov	r2, r6
   14508:	mov	r3, r5
   1450c:	sub	sp, fp, #16
   14510:	pop	{r4, r5, r6, r7, fp, lr}
   14514:	b	10f68 <fseeko64@plt>
   14518:	ldr	r7, [fp, #8]
   1451c:	mov	r0, r4
   14520:	bl	10f44 <fileno@plt>
   14524:	str	r7, [sp]
   14528:	mov	r2, r6
   1452c:	mov	r3, r5
   14530:	bl	10e48 <lseek64@plt>
   14534:	and	r2, r0, r1
   14538:	cmn	r2, #1
   1453c:	beq	1455c <putchar_unlocked@plt+0x357c>
   14540:	strd	r0, [r4, #80]	; 0x50
   14544:	ldr	r0, [r4]
   14548:	bic	r0, r0, #16
   1454c:	str	r0, [r4]
   14550:	mov	r0, #0
   14554:	sub	sp, fp, #16
   14558:	pop	{r4, r5, r6, r7, fp, pc}
   1455c:	mvn	r0, #0
   14560:	sub	sp, fp, #16
   14564:	pop	{r4, r5, r6, r7, fp, pc}
   14568:	push	{fp, lr}
   1456c:	mov	fp, sp
   14570:	bl	10f08 <__errno_location@plt>
   14574:	mov	r1, #12
   14578:	str	r1, [r0]
   1457c:	mov	r0, #0
   14580:	pop	{fp, pc}
   14584:	b	13f8c <putchar_unlocked@plt+0x2fac>
   14588:	cmp	r1, #0
   1458c:	orreq	r1, r1, #1
   14590:	b	13fbc <putchar_unlocked@plt+0x2fdc>
   14594:	b	13f38 <putchar_unlocked@plt+0x2f58>
   14598:	clz	r3, r2
   1459c:	lsr	ip, r3, #5
   145a0:	clz	r3, r1
   145a4:	lsr	r3, r3, #5
   145a8:	orrs	r3, r3, ip
   145ac:	movwne	r1, #1
   145b0:	movwne	r2, #1
   145b4:	b	14654 <putchar_unlocked@plt+0x3674>
   145b8:	push	{fp, lr}
   145bc:	mov	fp, sp
   145c0:	mov	r0, #14
   145c4:	bl	10f98 <nl_langinfo@plt>
   145c8:	movw	r1, #18656	; 0x48e0
   145cc:	movt	r1, #1
   145d0:	cmp	r0, #0
   145d4:	movne	r1, r0
   145d8:	ldrb	r2, [r1]
   145dc:	movw	r0, #20401	; 0x4fb1
   145e0:	movt	r0, #1
   145e4:	cmp	r2, #0
   145e8:	movne	r0, r1
   145ec:	pop	{fp, pc}
   145f0:	push	{r4, r5, r6, r7, fp, lr}
   145f4:	add	fp, sp, #16
   145f8:	sub	sp, sp, #8
   145fc:	mov	r7, r2
   14600:	mov	r4, r1
   14604:	add	r5, sp, #4
   14608:	cmp	r0, #0
   1460c:	movne	r5, r0
   14610:	mov	r0, r5
   14614:	bl	10e78 <mbrtowc@plt>
   14618:	mov	r6, r0
   1461c:	cmp	r7, #0
   14620:	beq	14648 <putchar_unlocked@plt+0x3668>
   14624:	cmn	r6, #2
   14628:	bcc	14648 <putchar_unlocked@plt+0x3668>
   1462c:	mov	r0, #0
   14630:	bl	14690 <putchar_unlocked@plt+0x36b0>
   14634:	cmp	r0, #0
   14638:	bne	14648 <putchar_unlocked@plt+0x3668>
   1463c:	ldrb	r0, [r4]
   14640:	str	r0, [r5]
   14644:	mov	r6, #1
   14648:	mov	r0, r6
   1464c:	sub	sp, fp, #16
   14650:	pop	{r4, r5, r6, r7, fp, pc}
   14654:	cmp	r2, #0
   14658:	beq	14688 <putchar_unlocked@plt+0x36a8>
   1465c:	mvn	r3, #0
   14660:	udiv	r3, r3, r2
   14664:	cmp	r3, r1
   14668:	bcs	14688 <putchar_unlocked@plt+0x36a8>
   1466c:	push	{fp, lr}
   14670:	mov	fp, sp
   14674:	bl	10f08 <__errno_location@plt>
   14678:	mov	r1, #12
   1467c:	str	r1, [r0]
   14680:	mov	r0, #0
   14684:	pop	{fp, pc}
   14688:	mul	r1, r2, r1
   1468c:	b	13fbc <putchar_unlocked@plt+0x2fdc>
   14690:	push	{r4, sl, fp, lr}
   14694:	add	fp, sp, #8
   14698:	sub	sp, sp, #264	; 0x108
   1469c:	add	r1, sp, #7
   146a0:	movw	r2, #257	; 0x101
   146a4:	bl	146fc <putchar_unlocked@plt+0x371c>
   146a8:	mov	r4, #0
   146ac:	cmp	r0, #0
   146b0:	bne	146f0 <putchar_unlocked@plt+0x3710>
   146b4:	add	r0, sp, #7
   146b8:	movw	r1, #20407	; 0x4fb7
   146bc:	movt	r1, #1
   146c0:	mov	r2, #2
   146c4:	bl	10ef0 <bcmp@plt>
   146c8:	cmp	r0, #0
   146cc:	beq	146f0 <putchar_unlocked@plt+0x3710>
   146d0:	add	r0, sp, #7
   146d4:	movw	r1, #20409	; 0x4fb9
   146d8:	movt	r1, #1
   146dc:	mov	r2, #6
   146e0:	bl	10ef0 <bcmp@plt>
   146e4:	mov	r4, r0
   146e8:	cmp	r0, #0
   146ec:	movwne	r4, #1
   146f0:	mov	r0, r4
   146f4:	sub	sp, fp, #8
   146f8:	pop	{r4, sl, fp, pc}
   146fc:	b	14700 <putchar_unlocked@plt+0x3720>
   14700:	push	{r4, r5, r6, r7, fp, lr}
   14704:	add	fp, sp, #16
   14708:	mov	r6, r2
   1470c:	mov	r4, r1
   14710:	bl	14798 <putchar_unlocked@plt+0x37b8>
   14714:	cmp	r0, #0
   14718:	beq	14748 <putchar_unlocked@plt+0x3768>
   1471c:	mov	r7, r0
   14720:	bl	10efc <strlen@plt>
   14724:	cmp	r0, r6
   14728:	bcs	14764 <putchar_unlocked@plt+0x3784>
   1472c:	add	r2, r0, #1
   14730:	mov	r0, r4
   14734:	mov	r1, r7
   14738:	bl	10de8 <memcpy@plt>
   1473c:	mov	r5, #0
   14740:	mov	r0, r5
   14744:	pop	{r4, r5, r6, r7, fp, pc}
   14748:	mov	r5, #22
   1474c:	cmp	r6, #0
   14750:	beq	1478c <putchar_unlocked@plt+0x37ac>
   14754:	mov	r0, #0
   14758:	strb	r0, [r4]
   1475c:	mov	r0, r5
   14760:	pop	{r4, r5, r6, r7, fp, pc}
   14764:	mov	r5, #34	; 0x22
   14768:	cmp	r6, #0
   1476c:	beq	1478c <putchar_unlocked@plt+0x37ac>
   14770:	sub	r6, r6, #1
   14774:	mov	r0, r4
   14778:	mov	r1, r7
   1477c:	mov	r2, r6
   14780:	bl	10de8 <memcpy@plt>
   14784:	mov	r0, #0
   14788:	strb	r0, [r4, r6]
   1478c:	mov	r0, r5
   14790:	pop	{r4, r5, r6, r7, fp, pc}
   14794:	b	14798 <putchar_unlocked@plt+0x37b8>
   14798:	mov	r1, #0
   1479c:	b	10f80 <setlocale@plt>
   147a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147a4:	mov	r7, r0
   147a8:	ldr	r6, [pc, #72]	; 147f8 <putchar_unlocked@plt+0x3818>
   147ac:	ldr	r5, [pc, #72]	; 147fc <putchar_unlocked@plt+0x381c>
   147b0:	add	r6, pc, r6
   147b4:	add	r5, pc, r5
   147b8:	sub	r6, r6, r5
   147bc:	mov	r8, r1
   147c0:	mov	r9, r2
   147c4:	bl	10d74 <calloc@plt-0x20>
   147c8:	asrs	r6, r6, #2
   147cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   147d0:	mov	r4, #0
   147d4:	add	r4, r4, #1
   147d8:	ldr	r3, [r5], #4
   147dc:	mov	r2, r9
   147e0:	mov	r1, r8
   147e4:	mov	r0, r7
   147e8:	blx	r3
   147ec:	cmp	r6, r4
   147f0:	bne	147d4 <putchar_unlocked@plt+0x37f4>
   147f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147f8:	andeq	r1, r1, r4, asr r7
   147fc:	andeq	r1, r1, ip, asr #14
   14800:	bx	lr
   14804:	ldr	r3, [pc, #12]	; 14818 <putchar_unlocked@plt+0x3838>
   14808:	mov	r1, #0
   1480c:	add	r3, pc, r3
   14810:	ldr	r2, [r3]
   14814:	b	10f14 <__cxa_atexit@plt>
   14818:	andeq	r1, r1, r8, asr #17

Disassembly of section .fini:

0001481c <.fini>:
   1481c:	push	{r3, lr}
   14820:	pop	{r3, pc}
