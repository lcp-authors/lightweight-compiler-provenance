
../repos/inetutils/src/traceroute:     file format elf32-littlearm


Disassembly of section .init:

00010f9c <.init>:
   10f9c:	push	{r3, lr}
   10fa0:	bl	1188c <__assert_fail@plt+0x5f4>
   10fa4:	pop	{r3, pc}

Disassembly of section .plt:

00010fa8 <calloc@plt-0x14>:
   10fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   10fac:	ldr	lr, [pc, #4]	; 10fb8 <calloc@plt-0x4>
   10fb0:	add	lr, pc, lr
   10fb4:	ldr	pc, [lr, #8]!
   10fb8:	andeq	ip, r1, r8, asr #32

00010fbc <calloc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #28, 20	; 0x1c000
   10fc4:	ldr	pc, [ip, #72]!	; 0x48

00010fc8 <fputs_unlocked@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #28, 20	; 0x1c000
   10fd0:	ldr	pc, [ip, #64]!	; 0x40

00010fd4 <strcmp@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #28, 20	; 0x1c000
   10fdc:	ldr	pc, [ip, #56]!	; 0x38

00010fe0 <strtol@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #28, 20	; 0x1c000
   10fe8:	ldr	pc, [ip, #48]!	; 0x30

00010fec <setsockopt@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #28, 20	; 0x1c000
   10ff4:	ldr	pc, [ip, #40]!	; 0x28

00010ff8 <printf@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #28, 20	; 0x1c000
   11000:	ldr	pc, [ip, #32]!

00011004 <getprotobyname@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #28, 20	; 0x1c000
   1100c:	ldr	pc, [ip, #24]!

00011010 <fflush@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #28, 20	; 0x1c000
   11018:	ldr	pc, [ip, #16]!

0001101c <memmove@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #28, 20	; 0x1c000
   11024:	ldr	pc, [ip, #8]!

00011028 <strchrnul@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #0]!

00011034 <free@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #110592	; 0x1b000
   1103c:	ldr	pc, [ip, #4088]!	; 0xff8

00011040 <gai_strerror@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #110592	; 0x1b000
   11048:	ldr	pc, [ip, #4080]!	; 0xff0

0001104c <strndup@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #110592	; 0x1b000
   11054:	ldr	pc, [ip, #4072]!	; 0xfe8

00011058 <memcpy@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #110592	; 0x1b000
   11060:	ldr	pc, [ip, #4064]!	; 0xfe0

00011064 <fwrite_unlocked@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #110592	; 0x1b000
   1106c:	ldr	pc, [ip, #4056]!	; 0xfd8

00011070 <inet_ntoa@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #110592	; 0x1b000
   11078:	ldr	pc, [ip, #4048]!	; 0xfd0

0001107c <select@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #110592	; 0x1b000
   11084:	ldr	pc, [ip, #4040]!	; 0xfc8

00011088 <sleep@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #110592	; 0x1b000
   11090:	ldr	pc, [ip, #4032]!	; 0xfc0

00011094 <gethostbyaddr@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #110592	; 0x1b000
   1109c:	ldr	pc, [ip, #4024]!	; 0xfb8

000110a0 <recvfrom@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #110592	; 0x1b000
   110a8:	ldr	pc, [ip, #4016]!	; 0xfb0

000110ac <realloc@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #110592	; 0x1b000
   110b4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110b8 <strcasecmp@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #110592	; 0x1b000
   110c0:	ldr	pc, [ip, #4000]!	; 0xfa0

000110c4 <funlockfile@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #110592	; 0x1b000
   110cc:	ldr	pc, [ip, #3992]!	; 0xf98

000110d0 <fwrite@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #110592	; 0x1b000
   110d8:	ldr	pc, [ip, #3984]!	; 0xf90

000110dc <strcat@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #110592	; 0x1b000
   110e4:	ldr	pc, [ip, #3976]!	; 0xf88

000110e8 <gettimeofday@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #110592	; 0x1b000
   110f0:	ldr	pc, [ip, #3968]!	; 0xf80

000110f4 <error@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #110592	; 0x1b000
   110fc:	ldr	pc, [ip, #3960]!	; 0xf78

00011100 <getenv@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #110592	; 0x1b000
   11108:	ldr	pc, [ip, #3952]!	; 0xf70

0001110c <malloc@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #110592	; 0x1b000
   11114:	ldr	pc, [ip, #3944]!	; 0xf68

00011118 <__libc_start_main@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #110592	; 0x1b000
   11120:	ldr	pc, [ip, #3936]!	; 0xf60

00011124 <strerror@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #110592	; 0x1b000
   1112c:	ldr	pc, [ip, #3928]!	; 0xf58

00011130 <__ctype_tolower_loc@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #110592	; 0x1b000
   11138:	ldr	pc, [ip, #3920]!	; 0xf50

0001113c <__gmon_start__@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #110592	; 0x1b000
   11144:	ldr	pc, [ip, #3912]!	; 0xf48

00011148 <mempcpy@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #110592	; 0x1b000
   11150:	ldr	pc, [ip, #3904]!	; 0xf40

00011154 <__ctype_b_loc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #110592	; 0x1b000
   1115c:	ldr	pc, [ip, #3896]!	; 0xf38

00011160 <getpid@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #110592	; 0x1b000
   11168:	ldr	pc, [ip, #3888]!	; 0xf30

0001116c <exit@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #110592	; 0x1b000
   11174:	ldr	pc, [ip, #3880]!	; 0xf28

00011178 <strlen@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #110592	; 0x1b000
   11180:	ldr	pc, [ip, #3872]!	; 0xf20

00011184 <strchr@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #110592	; 0x1b000
   1118c:	ldr	pc, [ip, #3864]!	; 0xf18

00011190 <fprintf@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #110592	; 0x1b000
   11198:	ldr	pc, [ip, #3856]!	; 0xf10

0001119c <__errno_location@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #110592	; 0x1b000
   111a4:	ldr	pc, [ip, #3848]!	; 0xf08

000111a8 <strerror_r@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #110592	; 0x1b000
   111b0:	ldr	pc, [ip, #3840]!	; 0xf00

000111b4 <memset@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #110592	; 0x1b000
   111bc:	ldr	pc, [ip, #3832]!	; 0xef8

000111c0 <putchar@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #110592	; 0x1b000
   111c8:	ldr	pc, [ip, #3824]!	; 0xef0

000111cc <memchr@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #110592	; 0x1b000
   111d4:	ldr	pc, [ip, #3816]!	; 0xee8

000111d8 <sendto@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #110592	; 0x1b000
   111e0:	ldr	pc, [ip, #3808]!	; 0xee0

000111e4 <__overflow@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #110592	; 0x1b000
   111ec:	ldr	pc, [ip, #3800]!	; 0xed8

000111f0 <setlocale@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #110592	; 0x1b000
   111f8:	ldr	pc, [ip, #3792]!	; 0xed0

000111fc <getnameinfo@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #110592	; 0x1b000
   11204:	ldr	pc, [ip, #3784]!	; 0xec8

00011208 <strrchr@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #110592	; 0x1b000
   11210:	ldr	pc, [ip, #3776]!	; 0xec0

00011214 <vfprintf@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #110592	; 0x1b000
   1121c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011220 <fputc@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #110592	; 0x1b000
   11228:	ldr	pc, [ip, #3760]!	; 0xeb0

0001122c <flockfile@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #110592	; 0x1b000
   11234:	ldr	pc, [ip, #3752]!	; 0xea8

00011238 <vsnprintf@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #110592	; 0x1b000
   11240:	ldr	pc, [ip, #3744]!	; 0xea0

00011244 <qsort@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #110592	; 0x1b000
   1124c:	ldr	pc, [ip, #3736]!	; 0xe98

00011250 <strpbrk@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #110592	; 0x1b000
   11258:	ldr	pc, [ip, #3728]!	; 0xe90

0001125c <freeaddrinfo@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #110592	; 0x1b000
   11264:	ldr	pc, [ip, #3720]!	; 0xe88

00011268 <getaddrinfo@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #110592	; 0x1b000
   11270:	ldr	pc, [ip, #3712]!	; 0xe80

00011274 <socket@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #110592	; 0x1b000
   1127c:	ldr	pc, [ip, #3704]!	; 0xe78

00011280 <strncmp@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #110592	; 0x1b000
   11288:	ldr	pc, [ip, #3696]!	; 0xe70

0001128c <abort@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #110592	; 0x1b000
   11294:	ldr	pc, [ip, #3688]!	; 0xe68

00011298 <__assert_fail@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #110592	; 0x1b000
   112a0:	ldr	pc, [ip, #3680]!	; 0xe60

Disassembly of section .text:

000112a8 <argp_failure@@Base-0x432c>:
   112a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112ac:	mov	r5, r0
   112b0:	mov	r4, r1
   112b4:	ldr	r0, [r1]
   112b8:	strd	r6, [sp, #8]
   112bc:	strd	r8, [sp, #16]
   112c0:	movw	r9, #53924	; 0xd2a4
   112c4:	movt	r9, #2
   112c8:	strd	sl, [sp, #24]
   112cc:	str	lr, [sp, #32]
   112d0:	vpush	{d8}
   112d4:	sub	sp, sp, #308	; 0x134
   112d8:	bl	18744 <argp_parse@@Base+0x1164>
   112dc:	movw	r1, #50952	; 0xc708
   112e0:	movt	r1, #1
   112e4:	mov	r0, #6
   112e8:	bl	111f0 <setlocale@plt>
   112ec:	bl	11160 <getpid@plt>
   112f0:	uxth	r0, r0
   112f4:	movw	r1, #54064	; 0xd330
   112f8:	movt	r1, #2
   112fc:	movw	r3, #54120	; 0xd368
   11300:	movt	r3, #2
   11304:	movw	ip, #47544	; 0xb9b8
   11308:	movt	ip, #1
   1130c:	str	r0, [r1]
   11310:	movw	r0, #47568	; 0xb9d0
   11314:	movt	r0, #1
   11318:	ldr	r1, [pc, #1320]	; 11848 <__assert_fail@plt+0x5b0>
   1131c:	str	ip, [r3]
   11320:	bl	18520 <argp_parse@@Base+0xf40>
   11324:	mov	ip, #0
   11328:	mov	r2, r4
   1132c:	ldr	r0, [pc, #1304]	; 1184c <__assert_fail@plt+0x5b4>
   11330:	mov	r3, ip
   11334:	mov	r1, r5
   11338:	str	ip, [sp]
   1133c:	str	ip, [sp, #4]
   11340:	bl	175e0 <argp_parse@@Base>
   11344:	ldr	r3, [r9, #16]
   11348:	cmp	r3, #0
   1134c:	beq	11624 <__assert_fail@plt+0x38c>
   11350:	ldrb	r3, [r3]
   11354:	cmp	r3, #0
   11358:	beq	11624 <__assert_fail@plt+0x38c>
   1135c:	ldr	r6, [r9, #16]
   11360:	mov	r0, #194	; 0xc2
   11364:	mov	r1, #2
   11368:	mov	r4, #0
   1136c:	mov	r5, #0
   11370:	add	r3, sp, #52	; 0x34
   11374:	add	r2, sp, #80	; 0x50
   11378:	strd	r0, [sp, #80]	; 0x50
   1137c:	mov	r1, #0
   11380:	strd	r4, [sp, #88]	; 0x58
   11384:	strd	r4, [sp, #96]	; 0x60
   11388:	mov	r0, r6
   1138c:	strd	r4, [sp, #104]	; 0x68
   11390:	bl	11268 <getaddrinfo@plt>
   11394:	cmp	r0, #0
   11398:	bne	11828 <__assert_fail@plt+0x590>
   1139c:	ldr	r5, [sp, #52]	; 0x34
   113a0:	movw	r4, #54008	; 0xd2f8
   113a4:	movt	r4, #2
   113a8:	mov	r0, r4
   113ac:	movw	sl, #53520	; 0xd110
   113b0:	movt	sl, #2
   113b4:	mov	fp, #1
   113b8:	ldr	r2, [r5, #16]
   113bc:	ldr	r1, [r5, #20]
   113c0:	bl	11058 <memcpy@plt>
   113c4:	ldr	ip, [sl, #8]
   113c8:	mov	lr, #0
   113cc:	mov	r3, #46	; 0x2e
   113d0:	movw	r2, #54072	; 0xd338
   113d4:	movt	r2, #2
   113d8:	ldr	r1, [r5, #16]
   113dc:	ldr	r0, [r5, #20]
   113e0:	rev16	ip, ip
   113e4:	str	lr, [sp]
   113e8:	str	lr, [sp, #4]
   113ec:	str	fp, [sp, #8]
   113f0:	strh	ip, [r4, #2]
   113f4:	bl	111fc <getnameinfo@plt>
   113f8:	ldr	r1, [sp, #52]	; 0x34
   113fc:	movw	r2, #54072	; 0xd338
   11400:	movt	r2, #2
   11404:	movw	r0, #47596	; 0xb9ec
   11408:	movt	r0, #1
   1140c:	ldr	r3, [sl, #4]
   11410:	ldr	r1, [r1, #24]
   11414:	cmp	r1, #0
   11418:	moveq	r1, r6
   1141c:	bl	10ff8 <printf@plt>
   11420:	mov	r0, r6
   11424:	bl	18618 <argp_parse@@Base+0x1038>
   11428:	ldr	r0, [sp, #52]	; 0x34
   1142c:	bl	1125c <freeaddrinfo@plt>
   11430:	mov	r0, r4
   11434:	bl	12a34 <__assert_fail@plt+0x179c>
   11438:	ldr	lr, [r9, #4]
   1143c:	add	r0, sp, #116	; 0x74
   11440:	ldm	r4, {r1, r2, r3}
   11444:	ldr	ip, [r4, #12]
   11448:	stm	sp, {ip, lr}
   1144c:	bl	11db4 <__assert_fail@plt+0xb1c>
   11450:	ldr	r2, [r9, #24]
   11454:	movw	r3, #54068	; 0xd334
   11458:	movt	r3, #2
   1145c:	mvn	r1, #0
   11460:	str	r1, [r3]
   11464:	cmp	r2, #0
   11468:	bne	11810 <__assert_fail@plt+0x578>
   1146c:	ldr	r3, [sl, #4]
   11470:	cmp	r3, #0
   11474:	ble	11798 <__assert_fail@plt+0x500>
   11478:	vldr	d8, [pc, #960]	; 11840 <__assert_fail@plt+0x5a8>
   1147c:	movw	r3, #47428	; 0xb944
   11480:	movt	r3, #1
   11484:	str	r9, [sp, #36]	; 0x24
   11488:	str	r3, [sp, #44]	; 0x2c
   1148c:	ldr	r3, [sl, #12]
   11490:	mov	r1, fp
   11494:	ldr	r0, [sp, #44]	; 0x2c
   11498:	mov	r4, r3
   1149c:	str	r3, [sp, #28]
   114a0:	bl	10ff8 <printf@plt>
   114a4:	cmp	r4, #0
   114a8:	ble	1170c <__assert_fail@plt+0x474>
   114ac:	mov	r7, #0
   114b0:	movw	r3, #47472	; 0xb970
   114b4:	movt	r3, #1
   114b8:	mov	r6, r7
   114bc:	str	r7, [sp, #24]
   114c0:	str	r3, [sp, #40]	; 0x28
   114c4:	bl	1119c <__errno_location@plt>
   114c8:	mov	r9, r0
   114cc:	str	fp, [sp, #32]
   114d0:	b	11510 <__assert_fail@plt+0x278>
   114d4:	beq	1163c <__assert_fail@plt+0x3a4>
   114d8:	add	r3, sp, #304	; 0x130
   114dc:	add	r5, r3, r5
   114e0:	ldr	r3, [r5, #-128]	; 0xffffff80
   114e4:	tst	r8, r3
   114e8:	bne	11668 <__assert_fail@plt+0x3d0>
   114ec:	movw	r4, #53916	; 0xd29c
   114f0:	movt	r4, #2
   114f4:	ldr	r0, [r4]
   114f8:	add	r7, r7, #1
   114fc:	mov	r6, #0
   11500:	bl	11010 <fflush@plt>
   11504:	ldr	r3, [sp, #28]
   11508:	cmp	r3, r7
   1150c:	ble	11708 <__assert_fail@plt+0x470>
   11510:	ldr	r4, [sp, #116]	; 0x74
   11514:	mov	r2, #128	; 0x80
   11518:	mov	r1, #0
   1151c:	add	r0, sp, #176	; 0xb0
   11520:	mov	r8, #1
   11524:	bl	111b4 <memset@plt>
   11528:	mov	r3, #0
   1152c:	ldr	r1, [sl, #20]
   11530:	cmp	r4, #0
   11534:	add	r5, r4, #31
   11538:	movge	r5, r4
   1153c:	rsbs	r2, r4, #0
   11540:	asr	r5, r5, #5
   11544:	and	r2, r2, #31
   11548:	str	r1, [sp, #72]	; 0x48
   1154c:	lsl	r5, r5, #2
   11550:	str	r3, [sp, #76]	; 0x4c
   11554:	and	r3, r4, #31
   11558:	rsbpl	r3, r2, #0
   1155c:	cmp	r6, #0
   11560:	lsl	r8, r8, r3
   11564:	add	r3, sp, #304	; 0x130
   11568:	add	r2, r3, r5
   1156c:	ldr	r3, [r2, #-128]	; 0xffffff80
   11570:	orr	r3, r3, r8
   11574:	str	r3, [r2, #-128]	; 0xffffff80
   11578:	beq	1165c <__assert_fail@plt+0x3c4>
   1157c:	mov	r3, #0
   11580:	add	ip, sp, #72	; 0x48
   11584:	mov	r2, r3
   11588:	add	r0, r4, #1
   1158c:	add	r1, sp, #176	; 0xb0
   11590:	str	r3, [r9]
   11594:	str	ip, [sp]
   11598:	bl	1107c <select@plt>
   1159c:	mov	r2, r0
   115a0:	mov	r1, #0
   115a4:	ldr	fp, [r9]
   115a8:	add	r0, sp, #64	; 0x40
   115ac:	str	r2, [sp, #20]
   115b0:	bl	110e8 <gettimeofday@plt>
   115b4:	ldr	r2, [sp, #20]
   115b8:	ldr	r4, [sp, #68]	; 0x44
   115bc:	ldr	r0, [sp, #172]	; 0xac
   115c0:	ldr	r6, [sp, #64]	; 0x40
   115c4:	ldr	r1, [sp, #168]	; 0xa8
   115c8:	sub	r4, r4, r0
   115cc:	cmp	r4, #0
   115d0:	str	r4, [sp, #68]	; 0x44
   115d4:	sub	r6, r6, r1
   115d8:	strge	r6, [sp, #64]	; 0x40
   115dc:	bge	115f4 <__assert_fail@plt+0x35c>
   115e0:	add	r4, r4, #999424	; 0xf4000
   115e4:	sub	r6, r6, #1
   115e8:	add	r4, r4, #576	; 0x240
   115ec:	str	r6, [sp, #64]	; 0x40
   115f0:	str	r4, [sp, #68]	; 0x44
   115f4:	cmp	r2, #0
   115f8:	bge	114d4 <__assert_fail@plt+0x23c>
   115fc:	cmp	fp, #4
   11600:	beq	114ec <__assert_fail@plt+0x254>
   11604:	movw	r2, #47436	; 0xb94c
   11608:	movt	r2, #1
   1160c:	ldr	r1, [r9]
   11610:	mov	r0, #1
   11614:	movw	r4, #53916	; 0xd29c
   11618:	movt	r4, #2
   1161c:	bl	110f4 <error@plt>
   11620:	b	114f4 <__assert_fail@plt+0x25c>
   11624:	movw	r2, #47580	; 0xb9dc
   11628:	movt	r2, #1
   1162c:	mov	r1, #0
   11630:	mov	r0, #1
   11634:	bl	110f4 <error@plt>
   11638:	b	1135c <__assert_fail@plt+0xc4>
   1163c:	movw	r0, #47452	; 0xb95c
   11640:	movt	r0, #1
   11644:	movw	r4, #53916	; 0xd29c
   11648:	movt	r4, #2
   1164c:	bl	10ff8 <printf@plt>
   11650:	ldr	r0, [r4]
   11654:	bl	11010 <fflush@plt>
   11658:	b	114f4 <__assert_fail@plt+0x25c>
   1165c:	add	r0, sp, #116	; 0x74
   11660:	bl	123c0 <__assert_fail@plt+0x1128>
   11664:	b	1157c <__assert_fail@plt+0x2e4>
   11668:	add	r2, sp, #60	; 0x3c
   1166c:	add	r1, sp, #56	; 0x38
   11670:	add	r0, sp, #116	; 0x74
   11674:	bl	1210c <__assert_fail@plt+0xe74>
   11678:	subs	r5, r0, #0
   1167c:	movlt	r6, #1
   11680:	blt	11504 <__assert_fail@plt+0x26c>
   11684:	cmp	r7, #0
   11688:	beq	1169c <__assert_fail@plt+0x404>
   1168c:	ldr	r2, [sp, #24]
   11690:	ldr	r3, [sp, #152]	; 0x98
   11694:	cmp	r3, r2
   11698:	beq	116c4 <__assert_fail@plt+0x42c>
   1169c:	ldr	r0, [sp, #152]	; 0x98
   116a0:	bl	11070 <inet_ntoa@plt>
   116a4:	mov	r1, r0
   116a8:	movw	r0, #47456	; 0xb960
   116ac:	movt	r0, #1
   116b0:	bl	10ff8 <printf@plt>
   116b4:	ldr	r3, [sp, #36]	; 0x24
   116b8:	ldr	r3, [r3, #8]
   116bc:	cmp	r3, #0
   116c0:	bne	117bc <__assert_fail@plt+0x524>
   116c4:	vmov	s15, r4
   116c8:	vmov	s13, r6
   116cc:	ldr	r0, [sp, #40]	; 0x28
   116d0:	vcvt.f64.s32	d7, s15
   116d4:	vcvt.f64.s32	d6, s13
   116d8:	vdiv.f64	d5, d7, d8
   116dc:	vmla.f64	d5, d6, d8
   116e0:	vmov	r2, r3, d5
   116e4:	bl	10ff8 <printf@plt>
   116e8:	cmp	r5, #0
   116ec:	beq	116fc <__assert_fail@plt+0x464>
   116f0:	ldr	r3, [sp, #56]	; 0x38
   116f4:	cmp	r3, #3
   116f8:	beq	117e8 <__assert_fail@plt+0x550>
   116fc:	ldr	r3, [sp, #152]	; 0x98
   11700:	str	r3, [sp, #24]
   11704:	b	114ec <__assert_fail@plt+0x254>
   11708:	ldr	fp, [sp, #32]
   1170c:	mov	r0, #10
   11710:	bl	111c0 <putchar@plt>
   11714:	ldr	lr, [sp, #116]	; 0x74
   11718:	mov	r0, #4
   1171c:	mov	r1, #0
   11720:	add	r3, sp, #164	; 0xa4
   11724:	mov	r2, #2
   11728:	ldr	r4, [sp, #124]	; 0x7c
   1172c:	str	r0, [sp]
   11730:	ldr	ip, [sp, #164]	; 0xa4
   11734:	ldr	r0, [sp, #120]	; 0x78
   11738:	cmp	r4, r1
   1173c:	movne	r0, lr
   11740:	add	ip, ip, #1
   11744:	str	ip, [sp, #164]	; 0xa4
   11748:	bl	10fec <setsockopt@plt>
   1174c:	cmp	r0, #0
   11750:	blt	117a0 <__assert_fail@plt+0x508>
   11754:	ldr	r3, [sp, #124]	; 0x7c
   11758:	cmp	r3, #0
   1175c:	bne	11778 <__assert_fail@plt+0x4e0>
   11760:	ldrh	r3, [sp, #134]	; 0x86
   11764:	rev16	r3, r3
   11768:	uxth	r3, r3
   1176c:	add	r3, r3, #1
   11770:	rev16	r3, r3
   11774:	strh	r3, [sp, #134]	; 0x86
   11778:	ldr	r3, [sp, #36]	; 0x24
   1177c:	add	fp, fp, #1
   11780:	ldr	r3, [r3, #24]
   11784:	cmp	r3, #0
   11788:	bne	11810 <__assert_fail@plt+0x578>
   1178c:	ldr	r3, [sl, #4]
   11790:	cmp	r3, fp
   11794:	bge	1148c <__assert_fail@plt+0x1f4>
   11798:	mov	r0, #1
   1179c:	bl	1116c <exit@plt>
   117a0:	bl	1119c <__errno_location@plt>
   117a4:	movw	r2, #47288	; 0xb8b8
   117a8:	movt	r2, #1
   117ac:	ldr	r1, [r0]
   117b0:	mov	r0, #1
   117b4:	bl	110f4 <error@plt>
   117b8:	b	11754 <__assert_fail@plt+0x4bc>
   117bc:	mov	r2, #2
   117c0:	mov	r1, #4
   117c4:	add	r0, sp, #152	; 0x98
   117c8:	bl	11094 <gethostbyaddr@plt>
   117cc:	cmp	r0, #0
   117d0:	beq	11818 <__assert_fail@plt+0x580>
   117d4:	ldr	r1, [r0]
   117d8:	movw	r0, #47464	; 0xb968
   117dc:	movt	r0, #1
   117e0:	bl	10ff8 <printf@plt>
   117e4:	b	116c4 <__assert_fail@plt+0x42c>
   117e8:	ldr	r2, [sp, #60]	; 0x3c
   117ec:	movw	r3, #46840	; 0xb6f8
   117f0:	movt	r3, #1
   117f4:	movw	r0, #47484	; 0xb97c
   117f8:	movt	r0, #1
   117fc:	and	r2, r2, #15
   11800:	add	r3, r3, r2
   11804:	ldrb	r1, [r3, #48]	; 0x30
   11808:	bl	10ff8 <printf@plt>
   1180c:	b	116fc <__assert_fail@plt+0x464>
   11810:	mov	r0, #0
   11814:	bl	1116c <exit@plt>
   11818:	ldr	r0, [sp, #152]	; 0x98
   1181c:	bl	11070 <inet_ntoa@plt>
   11820:	mov	r1, r0
   11824:	b	117d8 <__assert_fail@plt+0x540>
   11828:	movw	r2, #47580	; 0xb9dc
   1182c:	movt	r2, #1
   11830:	mov	r1, #0
   11834:	mov	r0, #1
   11838:	bl	110f4 <error@plt>
   1183c:	b	1139c <__assert_fail@plt+0x104>
   11840:	andeq	r0, r0, r0
   11844:	addmi	r4, pc, r0
   11848:	andeq	sp, r2, r8, lsr #2
   1184c:	andeq	sp, r2, r0, lsr r1
   11850:	mov	fp, #0
   11854:	mov	lr, #0
   11858:	pop	{r1}		; (ldr r1, [sp], #4)
   1185c:	mov	r2, sp
   11860:	push	{r2}		; (str r2, [sp, #-4]!)
   11864:	push	{r0}		; (str r0, [sp, #-4]!)
   11868:	ldr	ip, [pc, #16]	; 11880 <__assert_fail@plt+0x5e8>
   1186c:	push	{ip}		; (str ip, [sp, #-4]!)
   11870:	ldr	r0, [pc, #12]	; 11884 <__assert_fail@plt+0x5ec>
   11874:	ldr	r3, [pc, #12]	; 11888 <__assert_fail@plt+0x5f0>
   11878:	bl	11118 <__libc_start_main@plt>
   1187c:	bl	1128c <abort@plt>
   11880:	andeq	fp, r1, r8, ror #13
   11884:	andeq	r1, r1, r8, lsr #5
   11888:	andeq	fp, r1, r8, lsl #13
   1188c:	ldr	r3, [pc, #20]	; 118a8 <__assert_fail@plt+0x610>
   11890:	ldr	r2, [pc, #20]	; 118ac <__assert_fail@plt+0x614>
   11894:	add	r3, pc, r3
   11898:	ldr	r2, [r3, r2]
   1189c:	cmp	r2, #0
   118a0:	bxeq	lr
   118a4:	b	1113c <__gmon_start__@plt>
   118a8:	andeq	fp, r1, r4, ror #14
   118ac:	andeq	r0, r0, r4, lsl #2
   118b0:	ldr	r0, [pc, #24]	; 118d0 <__assert_fail@plt+0x638>
   118b4:	ldr	r3, [pc, #24]	; 118d4 <__assert_fail@plt+0x63c>
   118b8:	cmp	r3, r0
   118bc:	bxeq	lr
   118c0:	ldr	r3, [pc, #16]	; 118d8 <__assert_fail@plt+0x640>
   118c4:	cmp	r3, #0
   118c8:	bxeq	lr
   118cc:	bx	r3
   118d0:	muleq	r2, r0, r2
   118d4:	muleq	r2, r0, r2
   118d8:	andeq	r0, r0, r0
   118dc:	ldr	r0, [pc, #36]	; 11908 <__assert_fail@plt+0x670>
   118e0:	ldr	r1, [pc, #36]	; 1190c <__assert_fail@plt+0x674>
   118e4:	sub	r1, r1, r0
   118e8:	asr	r1, r1, #2
   118ec:	add	r1, r1, r1, lsr #31
   118f0:	asrs	r1, r1, #1
   118f4:	bxeq	lr
   118f8:	ldr	r3, [pc, #16]	; 11910 <__assert_fail@plt+0x678>
   118fc:	cmp	r3, #0
   11900:	bxeq	lr
   11904:	bx	r3
   11908:	muleq	r2, r0, r2
   1190c:	muleq	r2, r0, r2
   11910:	andeq	r0, r0, r0
   11914:	push	{r4, lr}
   11918:	ldr	r4, [pc, #24]	; 11938 <__assert_fail@plt+0x6a0>
   1191c:	ldrb	r3, [r4]
   11920:	cmp	r3, #0
   11924:	popne	{r4, pc}
   11928:	bl	118b0 <__assert_fail@plt+0x618>
   1192c:	mov	r3, #1
   11930:	strb	r3, [r4]
   11934:	pop	{r4, pc}
   11938:	andeq	sp, r2, r0, lsr #5
   1193c:	b	118dc <__assert_fail@plt+0x644>
   11940:	cmp	r0, #109	; 0x6d
   11944:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11948:	mov	r5, r1
   1194c:	strd	r6, [sp, #8]
   11950:	str	r8, [sp, #16]
   11954:	str	lr, [sp, #20]
   11958:	sub	sp, sp, #8
   1195c:	beq	11b34 <__assert_fail@plt+0x89c>
   11960:	mov	r4, r0
   11964:	mov	r6, r2
   11968:	ble	119b8 <__assert_fail@plt+0x720>
   1196c:	cmp	r0, #116	; 0x74
   11970:	beq	11b88 <__assert_fail@plt+0x8f0>
   11974:	ble	11a38 <__assert_fail@plt+0x7a0>
   11978:	cmp	r0, #256	; 0x100
   1197c:	beq	11bd8 <__assert_fail@plt+0x940>
   11980:	mov	r3, #4
   11984:	movt	r3, #256	; 0x100
   11988:	cmp	r0, r3
   1198c:	beq	11bf0 <__assert_fail@plt+0x958>
   11990:	cmp	r0, #119	; 0x77
   11994:	beq	11c18 <__assert_fail@plt+0x980>
   11998:	mov	r4, #7
   1199c:	mov	r0, r4
   119a0:	add	sp, sp, #8
   119a4:	ldrd	r4, [sp]
   119a8:	ldrd	r6, [sp, #8]
   119ac:	ldr	r8, [sp, #16]
   119b0:	add	sp, sp, #20
   119b4:	pop	{pc}		; (ldr pc, [sp], #4)
   119b8:	cmp	r0, #77	; 0x4d
   119bc:	beq	11c64 <__assert_fail@plt+0x9cc>
   119c0:	ble	11a88 <__assert_fail@plt+0x7f0>
   119c4:	cmp	r0, #102	; 0x66
   119c8:	beq	11ca4 <__assert_fail@plt+0xa0c>
   119cc:	cmp	r0, #103	; 0x67
   119d0:	bne	11998 <__assert_fail@plt+0x700>
   119d4:	movw	r6, #53924	; 0xd2a4
   119d8:	movt	r6, #2
   119dc:	ldr	r7, [r6]
   119e0:	cmp	r7, #0
   119e4:	beq	11d28 <__assert_fail@plt+0xa90>
   119e8:	mov	r0, r7
   119ec:	mov	r4, #0
   119f0:	bl	11178 <strlen@plt>
   119f4:	mov	r8, r0
   119f8:	mov	r0, r5
   119fc:	bl	11178 <strlen@plt>
   11a00:	add	r1, r0, r8
   11a04:	mov	r0, r7
   11a08:	add	r1, r1, #3
   11a0c:	bl	19414 <argp_parse@@Base+0x1e34>
   11a10:	mov	r3, #44	; 0x2c
   11a14:	str	r0, [r6]
   11a18:	mov	r1, r5
   11a1c:	strb	r3, [r0, r8]
   11a20:	ldr	r0, [r6]
   11a24:	add	r0, r0, r8
   11a28:	strb	r4, [r0, #1]
   11a2c:	ldr	r0, [r6]
   11a30:	bl	110dc <strcat@plt>
   11a34:	b	1199c <__assert_fail@plt+0x704>
   11a38:	cmp	r0, #112	; 0x70
   11a3c:	beq	11ab0 <__assert_fail@plt+0x818>
   11a40:	cmp	r0, #113	; 0x71
   11a44:	bne	11998 <__assert_fail@plt+0x700>
   11a48:	mov	r2, #10
   11a4c:	add	r1, sp, #4
   11a50:	mov	r0, r5
   11a54:	movw	r4, #53520	; 0xd110
   11a58:	movt	r4, #2
   11a5c:	bl	10fe0 <strtol@plt>
   11a60:	ldr	r3, [sp, #4]
   11a64:	str	r0, [r4, #12]
   11a68:	ldrb	r2, [r3]
   11a6c:	cmp	r2, #0
   11a70:	bne	11d0c <__assert_fail@plt+0xa74>
   11a74:	sub	r0, r0, #1
   11a78:	cmp	r0, #9
   11a7c:	bhi	11d3c <__assert_fail@plt+0xaa4>
   11a80:	mov	r4, #0
   11a84:	b	1199c <__assert_fail@plt+0x704>
   11a88:	cmp	r0, #0
   11a8c:	beq	11b14 <__assert_fail@plt+0x87c>
   11a90:	cmp	r0, #73	; 0x49
   11a94:	bne	11998 <__assert_fail@plt+0x700>
   11a98:	movw	r3, #53924	; 0xd2a4
   11a9c:	movt	r3, #2
   11aa0:	mov	r2, #1
   11aa4:	mov	r4, #0
   11aa8:	str	r2, [r3, #4]
   11aac:	b	1199c <__assert_fail@plt+0x704>
   11ab0:	mov	r2, #0
   11ab4:	add	r1, sp, #4
   11ab8:	mov	r0, r5
   11abc:	bl	10fe0 <strtol@plt>
   11ac0:	ldr	r1, [sp, #4]
   11ac4:	movw	r2, #53520	; 0xd110
   11ac8:	movt	r2, #2
   11acc:	sub	r3, r0, #1
   11ad0:	str	r0, [r2, #8]
   11ad4:	cmp	r3, #65536	; 0x10000
   11ad8:	movcc	r3, #0
   11adc:	movcs	r3, #1
   11ae0:	ldrb	r2, [r1]
   11ae4:	cmp	r2, #0
   11ae8:	movne	r3, #1
   11aec:	cmp	r3, #0
   11af0:	beq	11a80 <__assert_fail@plt+0x7e8>
   11af4:	mov	r3, r5
   11af8:	movw	r2, #47048	; 0xb7c8
   11afc:	movt	r2, #1
   11b00:	mov	r1, #0
   11b04:	mov	r0, #1
   11b08:	mov	r4, #0
   11b0c:	bl	110f4 <error@plt>
   11b10:	b	1199c <__assert_fail@plt+0x704>
   11b14:	mov	r3, #1
   11b18:	movw	r6, #53924	; 0xd2a4
   11b1c:	movt	r6, #2
   11b20:	mov	r0, r1
   11b24:	strb	r3, [r6, #12]
   11b28:	bl	19914 <argp_parse@@Base+0x2334>
   11b2c:	str	r0, [r6, #16]
   11b30:	b	1199c <__assert_fail@plt+0x704>
   11b34:	mov	r2, #0
   11b38:	add	r1, sp, #4
   11b3c:	mov	r0, r5
   11b40:	bl	10fe0 <strtol@plt>
   11b44:	ldr	r1, [sp, #4]
   11b48:	movw	r3, #53520	; 0xd110
   11b4c:	movt	r3, #2
   11b50:	sub	r2, r0, #1
   11b54:	str	r0, [r3, #4]
   11b58:	ldrb	r3, [r1]
   11b5c:	cmp	r2, #254	; 0xfe
   11b60:	cmpls	r3, #0
   11b64:	beq	11a80 <__assert_fail@plt+0x7e8>
   11b68:	mov	r3, r5
   11b6c:	movw	r2, #47024	; 0xb7b0
   11b70:	movt	r2, #1
   11b74:	mov	r1, #0
   11b78:	mov	r0, #1
   11b7c:	mov	r4, #0
   11b80:	bl	110f4 <error@plt>
   11b84:	b	1199c <__assert_fail@plt+0x704>
   11b88:	mov	r2, #0
   11b8c:	add	r1, sp, #4
   11b90:	mov	r0, r5
   11b94:	bl	10fe0 <strtol@plt>
   11b98:	ldr	r2, [sp, #4]
   11b9c:	movw	r3, #53520	; 0xd110
   11ba0:	movt	r3, #2
   11ba4:	str	r0, [r3, #16]
   11ba8:	ldrb	r3, [r2]
   11bac:	cmp	r0, #255	; 0xff
   11bb0:	cmpls	r3, #0
   11bb4:	beq	11a80 <__assert_fail@plt+0x7e8>
   11bb8:	mov	r3, r5
   11bbc:	movw	r2, #47152	; 0xb830
   11bc0:	movt	r2, #1
   11bc4:	mov	r1, #0
   11bc8:	mov	r0, #1
   11bcc:	mov	r4, #0
   11bd0:	bl	110f4 <error@plt>
   11bd4:	b	1199c <__assert_fail@plt+0x704>
   11bd8:	movw	r3, #53924	; 0xd2a4
   11bdc:	movt	r3, #2
   11be0:	mov	r2, #1
   11be4:	mov	r4, #0
   11be8:	str	r2, [r3, #8]
   11bec:	b	1199c <__assert_fail@plt+0x704>
   11bf0:	movw	r3, #53924	; 0xd2a4
   11bf4:	movt	r3, #2
   11bf8:	ldrb	r4, [r3, #12]
   11bfc:	cmp	r4, #0
   11c00:	bne	11a80 <__assert_fail@plt+0x7e8>
   11c04:	mov	r0, r2
   11c08:	movw	r1, #47236	; 0xb884
   11c0c:	movt	r1, #1
   11c10:	bl	16ecc <argp_error@@Base>
   11c14:	b	1199c <__assert_fail@plt+0x704>
   11c18:	mov	r2, #0
   11c1c:	add	r1, sp, #4
   11c20:	mov	r0, r5
   11c24:	bl	10fe0 <strtol@plt>
   11c28:	ldr	r2, [sp, #4]
   11c2c:	movw	r3, #53520	; 0xd110
   11c30:	movt	r3, #2
   11c34:	str	r0, [r3, #20]
   11c38:	ldrb	r3, [r2]
   11c3c:	cmp	r0, #60	; 0x3c
   11c40:	cmpls	r3, #0
   11c44:	beq	11a80 <__assert_fail@plt+0x7e8>
   11c48:	mov	r3, r5
   11c4c:	movw	r2, #47204	; 0xb864
   11c50:	movt	r2, #1
   11c54:	mov	r1, #0
   11c58:	mov	r0, #1
   11c5c:	bl	110f4 <error@plt>
   11c60:	b	11a80 <__assert_fail@plt+0x7e8>
   11c64:	movw	r1, #47176	; 0xb848
   11c68:	movt	r1, #1
   11c6c:	mov	r0, r5
   11c70:	bl	10fd4 <strcmp@plt>
   11c74:	subs	r4, r0, #0
   11c78:	beq	11cf8 <__assert_fail@plt+0xa60>
   11c7c:	mov	r0, r5
   11c80:	movw	r1, #47184	; 0xb850
   11c84:	movt	r1, #1
   11c88:	bl	10fd4 <strcmp@plt>
   11c8c:	subs	r4, r0, #0
   11c90:	bne	11d58 <__assert_fail@plt+0xac0>
   11c94:	movw	r3, #53924	; 0xd2a4
   11c98:	movt	r3, #2
   11c9c:	str	r4, [r3, #4]
   11ca0:	b	1199c <__assert_fail@plt+0x704>
   11ca4:	mov	r2, #0
   11ca8:	add	r1, sp, #4
   11cac:	mov	r0, r5
   11cb0:	bl	10fe0 <strtol@plt>
   11cb4:	ldr	r1, [sp, #4]
   11cb8:	movw	r3, #53520	; 0xd110
   11cbc:	movt	r3, #2
   11cc0:	sub	r2, r0, #1
   11cc4:	str	r0, [r3]
   11cc8:	ldrb	r3, [r1]
   11ccc:	cmp	r2, #254	; 0xfe
   11cd0:	cmpls	r3, #0
   11cd4:	beq	11a80 <__assert_fail@plt+0x7e8>
   11cd8:	mov	r3, r5
   11cdc:	movw	r2, #46996	; 0xb794
   11ce0:	movt	r2, #1
   11ce4:	mov	r1, #0
   11ce8:	mov	r0, #1
   11cec:	mov	r4, #0
   11cf0:	bl	110f4 <error@plt>
   11cf4:	b	1199c <__assert_fail@plt+0x704>
   11cf8:	movw	r3, #53924	; 0xd2a4
   11cfc:	movt	r3, #2
   11d00:	mov	r2, #1
   11d04:	str	r2, [r3, #4]
   11d08:	b	1199c <__assert_fail@plt+0x704>
   11d0c:	mov	r0, r6
   11d10:	mov	r2, r5
   11d14:	movw	r1, #47076	; 0xb7e4
   11d18:	movt	r1, #1
   11d1c:	bl	16ecc <argp_error@@Base>
   11d20:	ldr	r0, [r4, #12]
   11d24:	b	11a74 <__assert_fail@plt+0x7dc>
   11d28:	mov	r0, r1
   11d2c:	mov	r4, r7
   11d30:	bl	19914 <argp_parse@@Base+0x2334>
   11d34:	str	r0, [r6]
   11d38:	b	1199c <__assert_fail@plt+0x704>
   11d3c:	movw	r2, #47108	; 0xb804
   11d40:	movt	r2, #1
   11d44:	mov	r1, #0
   11d48:	mov	r0, #1
   11d4c:	bl	110f4 <error@plt>
   11d50:	mov	r4, #0
   11d54:	b	1199c <__assert_fail@plt+0x704>
   11d58:	mov	r0, r6
   11d5c:	movw	r1, #47188	; 0xb854
   11d60:	movt	r1, #1
   11d64:	mov	r4, #0
   11d68:	bl	16ecc <argp_error@@Base>
   11d6c:	b	1199c <__assert_fail@plt+0x704>
   11d70:	mov	r2, #2
   11d74:	mov	r1, #4
   11d78:	str	r4, [sp, #-8]!
   11d7c:	mov	r4, r0
   11d80:	str	lr, [sp, #4]
   11d84:	bl	11094 <gethostbyaddr@plt>
   11d88:	cmp	r0, #0
   11d8c:	beq	11da0 <__assert_fail@plt+0xb08>
   11d90:	ldr	r4, [sp]
   11d94:	add	sp, sp, #4
   11d98:	ldr	r0, [r0]
   11d9c:	pop	{pc}		; (ldr pc, [sp], #4)
   11da0:	ldr	r0, [r4]
   11da4:	ldr	r4, [sp]
   11da8:	ldr	lr, [sp, #4]
   11dac:	add	sp, sp, #8
   11db0:	b	11070 <inet_ntoa@plt>
   11db4:	sub	sp, sp, #16
   11db8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11dbc:	subs	r4, r0, #0
   11dc0:	strd	r6, [sp, #8]
   11dc4:	str	r8, [sp, #16]
   11dc8:	str	lr, [sp, #20]
   11dcc:	sub	sp, sp, #8
   11dd0:	add	ip, sp, #36	; 0x24
   11dd4:	ldr	lr, [sp, #52]	; 0x34
   11dd8:	stm	ip, {r1, r2, r3}
   11ddc:	beq	120a4 <__assert_fail@plt+0xe0c>
   11de0:	movw	r5, #53520	; 0xd110
   11de4:	movt	r5, #2
   11de8:	mov	r7, #0
   11dec:	cmp	lr, #0
   11df0:	ldr	r6, [r5]
   11df4:	str	lr, [r4, #8]
   11df8:	ldrd	r0, [ip, #8]
   11dfc:	str	r7, [r4, #12]
   11e00:	add	r7, r4, #48	; 0x30
   11e04:	ldrd	r2, [sp, #36]	; 0x24
   11e08:	str	r6, [r4, #48]	; 0x30
   11e0c:	strd	r2, [r4, #16]
   11e10:	strd	r0, [r4, #24]
   11e14:	beq	11e64 <__assert_fail@plt+0xbcc>
   11e18:	cmp	lr, #1
   11e1c:	bls	11eac <__assert_fail@plt+0xc14>
   11e20:	ldr	r3, [r5, #16]
   11e24:	ldr	r6, [r4]
   11e28:	cmp	r3, #0
   11e2c:	bge	11f18 <__assert_fail@plt+0xc80>
   11e30:	movw	r3, #53924	; 0xd2a4
   11e34:	movt	r3, #2
   11e38:	ldr	r1, [r3, #20]
   11e3c:	cmp	r1, #0
   11e40:	bne	11f58 <__assert_fail@plt+0xcc0>
   11e44:	add	sp, sp, #8
   11e48:	ldrd	r4, [sp]
   11e4c:	ldrd	r6, [sp, #8]
   11e50:	ldr	r8, [sp, #16]
   11e54:	ldr	lr, [sp, #20]
   11e58:	add	sp, sp, #24
   11e5c:	add	sp, sp, #16
   11e60:	bx	lr
   11e64:	mov	r1, #2
   11e68:	mov	r2, lr
   11e6c:	mov	r0, r1
   11e70:	bl	11274 <socket@plt>
   11e74:	cmp	r0, #0
   11e78:	str	r0, [r4, #4]
   11e7c:	blt	11fc8 <__assert_fail@plt+0xd30>
   11e80:	mov	r1, #4
   11e84:	mov	r3, r7
   11e88:	mov	r2, #2
   11e8c:	str	r1, [sp]
   11e90:	mov	r1, #0
   11e94:	bl	10fec <setsockopt@plt>
   11e98:	cmp	r0, #0
   11e9c:	blt	11fe8 <__assert_fail@plt+0xd50>
   11ea0:	ldr	r3, [r4, #8]
   11ea4:	cmp	r3, #1
   11ea8:	bhi	11e20 <__assert_fail@plt+0xb88>
   11eac:	movw	r0, #47176	; 0xb848
   11eb0:	movt	r0, #1
   11eb4:	bl	11004 <getprotobyname@plt>
   11eb8:	subs	r6, r0, #0
   11ebc:	beq	11fb0 <__assert_fail@plt+0xd18>
   11ec0:	mov	r1, #3
   11ec4:	mov	r0, #2
   11ec8:	ldr	r2, [r6, #8]
   11ecc:	bl	11274 <socket@plt>
   11ed0:	cmp	r0, #0
   11ed4:	str	r0, [r4]
   11ed8:	blt	12004 <__assert_fail@plt+0xd6c>
   11edc:	mov	r1, #4
   11ee0:	mov	r3, r7
   11ee4:	mov	r2, #2
   11ee8:	str	r1, [sp]
   11eec:	mov	r1, #0
   11ef0:	bl	10fec <setsockopt@plt>
   11ef4:	cmp	r0, #0
   11ef8:	blt	12084 <__assert_fail@plt+0xdec>
   11efc:	ldr	r3, [r4, #8]
   11f00:	cmp	r3, #0
   11f04:	ldr	r6, [r4, #4]
   11f08:	bne	11e20 <__assert_fail@plt+0xb88>
   11f0c:	ldr	r3, [r5, #16]
   11f10:	cmp	r3, #0
   11f14:	blt	11e30 <__assert_fail@plt+0xb98>
   11f18:	mov	ip, #4
   11f1c:	ldr	r3, [pc, #416]	; 120c4 <__assert_fail@plt+0xe2c>
   11f20:	mov	r2, #1
   11f24:	mov	r1, #0
   11f28:	mov	r0, r6
   11f2c:	str	ip, [sp]
   11f30:	bl	10fec <setsockopt@plt>
   11f34:	cmp	r0, #0
   11f38:	bge	11e30 <__assert_fail@plt+0xb98>
   11f3c:	bl	1119c <__errno_location@plt>
   11f40:	movw	r2, #47336	; 0xb8e8
   11f44:	movt	r2, #1
   11f48:	ldr	r1, [r0]
   11f4c:	mov	r0, #0
   11f50:	bl	110f4 <error@plt>
   11f54:	b	11e30 <__assert_fail@plt+0xb98>
   11f58:	mov	r0, r6
   11f5c:	movw	r3, #54024	; 0xd308
   11f60:	movt	r3, #2
   11f64:	mov	r2, #4
   11f68:	str	r1, [sp]
   11f6c:	mov	r1, #0
   11f70:	bl	10fec <setsockopt@plt>
   11f74:	cmp	r0, #0
   11f78:	bge	11e44 <__assert_fail@plt+0xbac>
   11f7c:	bl	1119c <__errno_location@plt>
   11f80:	ldr	r1, [r0]
   11f84:	movw	r2, #47356	; 0xb8fc
   11f88:	movt	r2, #1
   11f8c:	mov	r0, #0
   11f90:	add	sp, sp, #8
   11f94:	ldrd	r4, [sp]
   11f98:	ldrd	r6, [sp, #8]
   11f9c:	ldr	r8, [sp, #16]
   11fa0:	ldr	lr, [sp, #20]
   11fa4:	add	sp, sp, #24
   11fa8:	add	sp, sp, #16
   11fac:	b	110f4 <error@plt>
   11fb0:	mov	r1, r6
   11fb4:	movw	r2, #47300	; 0xb8c4
   11fb8:	movt	r2, #1
   11fbc:	mov	r0, #1
   11fc0:	bl	110f4 <error@plt>
   11fc4:	b	11efc <__assert_fail@plt+0xc64>
   11fc8:	bl	1119c <__errno_location@plt>
   11fcc:	movw	r2, #47280	; 0xb8b0
   11fd0:	movt	r2, #1
   11fd4:	ldr	r1, [r0]
   11fd8:	mov	r0, #1
   11fdc:	bl	110f4 <error@plt>
   11fe0:	ldr	r0, [r4, #4]
   11fe4:	b	11e80 <__assert_fail@plt+0xbe8>
   11fe8:	bl	1119c <__errno_location@plt>
   11fec:	movw	r2, #47288	; 0xb8b8
   11ff0:	movt	r2, #1
   11ff4:	ldr	r1, [r0]
   11ff8:	mov	r0, #1
   11ffc:	bl	110f4 <error@plt>
   12000:	b	11ea0 <__assert_fail@plt+0xc08>
   12004:	bl	1119c <__errno_location@plt>
   12008:	ldr	r1, [r0]
   1200c:	mov	r8, r0
   12010:	cmp	r1, #13
   12014:	cmpne	r1, #1
   12018:	beq	12034 <__assert_fail@plt+0xd9c>
   1201c:	mov	r0, #1
   12020:	movw	r2, #47280	; 0xb8b0
   12024:	movt	r2, #1
   12028:	bl	110f4 <error@plt>
   1202c:	ldr	r0, [r4]
   12030:	b	11edc <__assert_fail@plt+0xc44>
   12034:	mov	r3, #0
   12038:	mov	r1, #2
   1203c:	mov	r0, r1
   12040:	str	r3, [r8]
   12044:	ldr	r2, [r6, #8]
   12048:	bl	11274 <socket@plt>
   1204c:	ldr	r3, [r4, #12]
   12050:	str	r0, [r4]
   12054:	add	r3, r3, #1
   12058:	str	r3, [r4, #12]
   1205c:	ldr	r3, [r8]
   12060:	cmp	r3, #93	; 0x5d
   12064:	bne	12074 <__assert_fail@plt+0xddc>
   12068:	mov	r3, #1
   1206c:	str	r3, [r8]
   12070:	ldr	r0, [r4]
   12074:	cmp	r0, #0
   12078:	bge	11edc <__assert_fail@plt+0xc44>
   1207c:	ldr	r1, [r8]
   12080:	b	1201c <__assert_fail@plt+0xd84>
   12084:	bl	1119c <__errno_location@plt>
   12088:	movw	r2, #47288	; 0xb8b8
   1208c:	movt	r2, #1
   12090:	ldr	r1, [r0]
   12094:	mov	r0, #1
   12098:	bl	110f4 <error@plt>
   1209c:	ldr	r3, [r4, #8]
   120a0:	b	11f00 <__assert_fail@plt+0xc68>
   120a4:	movw	r3, #46840	; 0xb6f8
   120a8:	movt	r3, #1
   120ac:	movw	r1, #47260	; 0xb89c
   120b0:	movt	r1, #1
   120b4:	movw	r0, #47276	; 0xb8ac
   120b8:	movt	r0, #1
   120bc:	movw	r2, #475	; 0x1db
   120c0:	bl	11298 <__assert_fail@plt>
   120c4:	andeq	sp, r2, r0, lsr #2
   120c8:	cmp	r0, #0
   120cc:	beq	120e4 <__assert_fail@plt+0xe4c>
   120d0:	movw	r3, #33434	; 0x829a
   120d4:	cmp	r1, #1024	; 0x400
   120d8:	movcc	r1, r3
   120dc:	strh	r1, [r0, #18]
   120e0:	bx	lr
   120e4:	movw	r1, #47260	; 0xb89c
   120e8:	movt	r1, #1
   120ec:	ldr	r3, [pc, #20]	; 12108 <__assert_fail@plt+0xe70>
   120f0:	movw	r0, #47276	; 0xb8ac
   120f4:	movt	r0, #1
   120f8:	str	r4, [sp, #-8]!
   120fc:	movw	r2, #554	; 0x22a
   12100:	str	lr, [sp, #4]
   12104:	bl	11298 <__assert_fail@plt>
   12108:	andeq	fp, r1, r4, lsl #14
   1210c:	strd	r4, [sp, #-16]!
   12110:	subs	r4, r0, #0
   12114:	str	r6, [sp, #8]
   12118:	str	lr, [sp, #12]
   1211c:	sub	sp, sp, #160	; 0xa0
   12120:	beq	123a0 <__assert_fail@plt+0x1108>
   12124:	mov	ip, r4
   12128:	add	r3, sp, #20
   1212c:	ldr	r0, [ip], #32
   12130:	mov	r5, r2
   12134:	mov	r2, #16
   12138:	mov	r6, r1
   1213c:	add	r1, sp, #24
   12140:	str	ip, [sp]
   12144:	str	r3, [sp, #4]
   12148:	mov	r3, #0
   1214c:	str	r2, [sp, #20]
   12150:	mov	r2, #136	; 0x88
   12154:	bl	110a0 <recvfrom@plt>
   12158:	cmp	r0, #0
   1215c:	blt	12288 <__assert_fail@plt+0xff0>
   12160:	add	r3, sp, #16
   12164:	add	r2, sp, #12
   12168:	add	r0, sp, #24
   1216c:	mov	r1, #136	; 0x88
   12170:	bl	12c58 <__assert_fail@plt+0x19c0>
   12174:	ldr	r3, [sp, #16]
   12178:	ldr	r0, [r4, #8]
   1217c:	ldrb	r2, [r3]
   12180:	cmp	r0, #0
   12184:	str	r2, [r6]
   12188:	ldrb	r2, [r3, #1]
   1218c:	str	r2, [r5]
   12190:	beq	12254 <__assert_fail@plt+0xfbc>
   12194:	cmp	r0, #1
   12198:	beq	121b4 <__assert_fail@plt+0xf1c>
   1219c:	mov	r0, #0
   121a0:	add	sp, sp, #160	; 0xa0
   121a4:	ldrd	r4, [sp]
   121a8:	ldr	r6, [sp, #8]
   121ac:	add	sp, sp, #12
   121b0:	pop	{pc}		; (ldr pc, [sp], #4)
   121b4:	ldrb	r0, [r3]
   121b8:	cmp	r0, #11
   121bc:	cmpne	r0, #0
   121c0:	bne	122a4 <__assert_fail@plt+0x100c>
   121c4:	cmp	r0, #0
   121c8:	bne	12304 <__assert_fail@plt+0x106c>
   121cc:	ldrh	r2, [r3, #6]
   121d0:	movw	r1, #54068	; 0xd334
   121d4:	movt	r1, #2
   121d8:	ldr	r1, [r1]
   121dc:	rev16	r2, r2
   121e0:	uxth	r2, r2
   121e4:	cmp	r2, r1
   121e8:	bne	12280 <__assert_fail@plt+0xfe8>
   121ec:	ldrh	r3, [r3, #4]
   121f0:	movw	r2, #54064	; 0xd330
   121f4:	movt	r2, #2
   121f8:	ldr	r2, [r2]
   121fc:	rev16	r3, r3
   12200:	uxth	r3, r3
   12204:	cmp	r3, r2
   12208:	beq	12218 <__assert_fail@plt+0xf80>
   1220c:	ldr	r3, [r4, #12]
   12210:	cmp	r3, #0
   12214:	beq	12280 <__assert_fail@plt+0xfe8>
   12218:	ldr	r2, [sp, #12]
   1221c:	movw	r3, #54008	; 0xd2f8
   12220:	movt	r3, #2
   12224:	ldr	r3, [r3, #4]
   12228:	ldr	r2, [r2, #12]
   1222c:	cmp	r2, r3
   12230:	bne	1219c <__assert_fail@plt+0xf04>
   12234:	movw	r3, #53924	; 0xd2a4
   12238:	movt	r3, #2
   1223c:	mov	r2, #1
   12240:	sub	r0, r0, #3
   12244:	clz	r0, r0
   12248:	lsr	r0, r0, #5
   1224c:	str	r2, [r3, #24]
   12250:	b	121a0 <__assert_fail@plt+0xf08>
   12254:	ldrb	r1, [r3]
   12258:	and	r2, r1, #247	; 0xf7
   1225c:	cmp	r2, #3
   12260:	bne	12280 <__assert_fail@plt+0xfe8>
   12264:	ldrb	r2, [r3, #8]
   12268:	ldrh	ip, [r4, #18]
   1226c:	and	r2, r2, #15
   12270:	add	r2, r3, r2, lsl #2
   12274:	ldrh	r2, [r2, #10]
   12278:	cmp	r2, ip
   1227c:	beq	122dc <__assert_fail@plt+0x1044>
   12280:	mvn	r0, #0
   12284:	b	121a0 <__assert_fail@plt+0xf08>
   12288:	bl	1119c <__errno_location@plt>
   1228c:	movw	r2, #47380	; 0xb914
   12290:	movt	r2, #1
   12294:	ldr	r1, [r0]
   12298:	mov	r0, #1
   1229c:	bl	110f4 <error@plt>
   122a0:	b	12160 <__assert_fail@plt+0xec8>
   122a4:	cmp	r0, #3
   122a8:	bne	12280 <__assert_fail@plt+0xfe8>
   122ac:	ldrb	r2, [r3, #8]
   122b0:	movw	r1, #54064	; 0xd330
   122b4:	movt	r1, #2
   122b8:	ldr	r1, [r1]
   122bc:	and	r2, r2, #15
   122c0:	add	r3, r3, r2, lsl #2
   122c4:	ldrh	r3, [r3, #12]
   122c8:	rev16	r3, r3
   122cc:	uxth	r3, r3
   122d0:	cmp	r1, r3
   122d4:	bne	12280 <__assert_fail@plt+0xfe8>
   122d8:	b	12234 <__assert_fail@plt+0xf9c>
   122dc:	cmp	r1, #3
   122e0:	bne	121a0 <__assert_fail@plt+0xf08>
   122e4:	movw	r2, #53924	; 0xd2a4
   122e8:	movt	r2, #2
   122ec:	mov	r1, #1
   122f0:	str	r1, [r2, #24]
   122f4:	ldrb	r0, [r3, #1]
   122f8:	subs	r0, r0, #3
   122fc:	movne	r0, #1
   12300:	b	121a0 <__assert_fail@plt+0xf08>
   12304:	and	r2, r0, #247	; 0xf7
   12308:	cmp	r2, #3
   1230c:	bne	12218 <__assert_fail@plt+0xf80>
   12310:	ldrb	r2, [r3, #8]
   12314:	add	r3, r3, #8
   12318:	movw	ip, #54064	; 0xd330
   1231c:	movt	ip, #2
   12320:	sub	r1, r0, #3
   12324:	ldr	ip, [ip]
   12328:	clz	r1, r1
   1232c:	lsr	r1, r1, #5
   12330:	and	r2, r2, #15
   12334:	add	r3, r3, r2, lsl #2
   12338:	ldrh	r2, [r3, #4]
   1233c:	rev16	r2, r2
   12340:	uxth	r2, r2
   12344:	cmp	r2, ip
   12348:	bne	12280 <__assert_fail@plt+0xfe8>
   1234c:	cmp	r0, #11
   12350:	bne	12234 <__assert_fail@plt+0xf9c>
   12354:	ldrh	r3, [r3, #6]
   12358:	movw	r2, #54068	; 0xd334
   1235c:	movt	r2, #2
   12360:	ldr	r2, [r2]
   12364:	rev16	r3, r3
   12368:	uxth	r3, r3
   1236c:	cmp	r3, r2
   12370:	bne	12280 <__assert_fail@plt+0xfe8>
   12374:	ldr	r2, [sp, #12]
   12378:	movw	r3, #54008	; 0xd2f8
   1237c:	movt	r3, #2
   12380:	ldr	r3, [r3, #4]
   12384:	ldr	r2, [r2, #12]
   12388:	cmp	r2, r3
   1238c:	movne	r3, r1
   12390:	orreq	r3, r1, #1
   12394:	cmp	r3, #0
   12398:	bne	12234 <__assert_fail@plt+0xf9c>
   1239c:	b	1219c <__assert_fail@plt+0xf04>
   123a0:	movw	r1, #47260	; 0xb89c
   123a4:	movt	r1, #1
   123a8:	ldr	r3, [pc, #12]	; 123bc <__assert_fail@plt+0x1124>
   123ac:	movw	r0, #47276	; 0xb8ac
   123b0:	movt	r0, #1
   123b4:	movw	r2, #579	; 0x243
   123b8:	bl	11298 <__assert_fail@plt>
   123bc:	andeq	fp, r1, r0, lsl r7
   123c0:	strd	r4, [sp, #-20]!	; 0xffffffec
   123c4:	subs	r4, r0, #0
   123c8:	strd	r6, [sp, #8]
   123cc:	str	lr, [sp, #16]
   123d0:	sub	sp, sp, #44	; 0x2c
   123d4:	beq	1258c <__assert_fail@plt+0x12f4>
   123d8:	ldr	r3, [r4, #8]
   123dc:	cmp	r3, #0
   123e0:	beq	124c4 <__assert_fail@plt+0x122c>
   123e4:	cmp	r3, #1
   123e8:	beq	12408 <__assert_fail@plt+0x1170>
   123ec:	mov	r5, #0
   123f0:	mov	r0, r5
   123f4:	add	sp, sp, #44	; 0x2c
   123f8:	ldrd	r4, [sp]
   123fc:	ldrd	r6, [sp, #8]
   12400:	add	sp, sp, #16
   12404:	pop	{pc}		; (ldr pc, [sp], #4)
   12408:	add	r2, sp, #11
   1240c:	mov	r3, #0
   12410:	strb	r3, [r2, #1]!
   12414:	add	r3, r3, #1
   12418:	cmp	r3, #28
   1241c:	bne	12410 <__assert_fail@plt+0x1178>
   12420:	ldr	r3, [r4, #12]
   12424:	cmp	r3, #0
   12428:	bne	12530 <__assert_fail@plt+0x1298>
   1242c:	movw	ip, #54068	; 0xd334
   12430:	movt	ip, #2
   12434:	ldr	lr, [ip]
   12438:	movw	r3, #54064	; 0xd330
   1243c:	movt	r3, #2
   12440:	mov	r1, #28
   12444:	add	r0, sp, #12
   12448:	ldr	r2, [r3]
   1244c:	add	lr, lr, #1
   12450:	mov	r3, lr
   12454:	str	lr, [ip]
   12458:	bl	12cc4 <__assert_fail@plt+0x1a2c>
   1245c:	subs	r5, r0, #0
   12460:	mvnne	r5, #0
   12464:	bne	123f0 <__assert_fail@plt+0x1158>
   12468:	mov	ip, r4
   1246c:	mov	r2, #16
   12470:	ldr	r0, [ip], #16
   12474:	add	r1, sp, #12
   12478:	mov	r3, r5
   1247c:	str	ip, [sp]
   12480:	str	r2, [sp, #4]
   12484:	mov	r2, #28
   12488:	bl	111d8 <sendto@plt>
   1248c:	cmp	r0, #0
   12490:	blt	12568 <__assert_fail@plt+0x12d0>
   12494:	add	r0, r4, #52	; 0x34
   12498:	mov	r1, #0
   1249c:	bl	110e8 <gettimeofday@plt>
   124a0:	cmp	r0, #0
   124a4:	bge	123f0 <__assert_fail@plt+0x1158>
   124a8:	bl	1119c <__errno_location@plt>
   124ac:	movw	r2, #47400	; 0xb928
   124b0:	movt	r2, #1
   124b4:	ldr	r1, [r0]
   124b8:	mov	r0, #1
   124bc:	bl	110f4 <error@plt>
   124c0:	b	123f0 <__assert_fail@plt+0x1158>
   124c4:	movw	r2, #47416	; 0xb938
   124c8:	movt	r2, #1
   124cc:	ldrb	ip, [r2, #8]
   124d0:	add	r1, r4, #16
   124d4:	ldrd	r6, [r2]
   124d8:	mov	r2, #16
   124dc:	stm	sp, {r1, r2}
   124e0:	add	r1, sp, #12
   124e4:	mov	r2, #9
   124e8:	ldr	r0, [r4, #4]
   124ec:	strd	r6, [sp, #12]
   124f0:	strb	ip, [sp, #20]
   124f4:	bl	111d8 <sendto@plt>
   124f8:	cmp	r0, #0
   124fc:	blt	12544 <__assert_fail@plt+0x12ac>
   12500:	add	r0, r4, #52	; 0x34
   12504:	mov	r1, #0
   12508:	bl	110e8 <gettimeofday@plt>
   1250c:	cmp	r0, #0
   12510:	bge	123ec <__assert_fail@plt+0x1154>
   12514:	bl	1119c <__errno_location@plt>
   12518:	movw	r2, #47400	; 0xb928
   1251c:	movt	r2, #1
   12520:	ldr	r1, [r0]
   12524:	mov	r0, #1
   12528:	bl	110f4 <error@plt>
   1252c:	b	123ec <__assert_fail@plt+0x1154>
   12530:	movw	r3, #54008	; 0xd2f8
   12534:	movt	r3, #2
   12538:	ldr	r3, [r3, #4]
   1253c:	str	r3, [sp, #24]
   12540:	b	1242c <__assert_fail@plt+0x1194>
   12544:	bl	1119c <__errno_location@plt>
   12548:	ldr	r1, [r0]
   1254c:	cmp	r1, #104	; 0x68
   12550:	beq	12500 <__assert_fail@plt+0x1268>
   12554:	movw	r2, #47392	; 0xb920
   12558:	movt	r2, #1
   1255c:	mov	r0, #1
   12560:	bl	110f4 <error@plt>
   12564:	b	12500 <__assert_fail@plt+0x1268>
   12568:	bl	1119c <__errno_location@plt>
   1256c:	ldr	r1, [r0]
   12570:	cmp	r1, #104	; 0x68
   12574:	beq	12494 <__assert_fail@plt+0x11fc>
   12578:	movw	r2, #47392	; 0xb920
   1257c:	movt	r2, #1
   12580:	mov	r0, #1
   12584:	bl	110f4 <error@plt>
   12588:	b	12494 <__assert_fail@plt+0x11fc>
   1258c:	movw	r1, #47260	; 0xb89c
   12590:	movt	r1, #1
   12594:	ldr	r3, [pc, #12]	; 125a8 <__assert_fail@plt+0x1310>
   12598:	movw	r0, #47276	; 0xb8ac
   1259c:	movt	r0, #1
   125a0:	movw	r2, #677	; 0x2a5
   125a4:	bl	11298 <__assert_fail@plt>
   125a8:	andeq	fp, r1, ip, lsl r7
   125ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   125b0:	mov	r4, r3
   125b4:	strd	r6, [sp, #8]
   125b8:	mov	r6, r0
   125bc:	movw	r0, #47428	; 0xb944
   125c0:	movt	r0, #1
   125c4:	strd	r8, [sp, #16]
   125c8:	strd	sl, [sp, #24]
   125cc:	str	lr, [sp, #32]
   125d0:	vpush	{d8}
   125d4:	sub	sp, sp, #180	; 0xb4
   125d8:	str	r3, [sp, #16]
   125dc:	bl	10ff8 <printf@plt>
   125e0:	cmp	r4, #0
   125e4:	ble	12850 <__assert_fail@plt+0x15b8>
   125e8:	mov	r3, #0
   125ec:	movw	sl, #53520	; 0xd110
   125f0:	movt	sl, #2
   125f4:	mov	r8, r3
   125f8:	vldr	d8, [pc, #768]	; 12900 <__assert_fail@plt+0x1668>
   125fc:	mov	fp, r3
   12600:	str	r3, [sp, #20]
   12604:	bl	1119c <__errno_location@plt>
   12608:	mov	r9, r0
   1260c:	b	1264c <__assert_fail@plt+0x13b4>
   12610:	beq	12778 <__assert_fail@plt+0x14e0>
   12614:	add	r2, sp, #176	; 0xb0
   12618:	add	r5, r2, r5
   1261c:	ldr	r2, [r5, #-128]	; 0xffffff80
   12620:	tst	r7, r2
   12624:	bne	12798 <__assert_fail@plt+0x1500>
   12628:	movw	r4, #53916	; 0xd29c
   1262c:	movt	r4, #2
   12630:	ldr	r0, [r4]
   12634:	add	r8, r8, #1
   12638:	mov	fp, #0
   1263c:	bl	11010 <fflush@plt>
   12640:	ldr	r3, [sp, #16]
   12644:	cmp	r3, r8
   12648:	ble	12850 <__assert_fail@plt+0x15b8>
   1264c:	cmp	r6, #0
   12650:	beq	128f0 <__assert_fail@plt+0x1658>
   12654:	ldr	r4, [r6]
   12658:	mov	r7, #1
   1265c:	rsbs	r2, r4, #0
   12660:	and	r3, r4, #31
   12664:	and	r2, r2, #31
   12668:	add	r5, r4, #31
   1266c:	rsbpl	r3, r2, #0
   12670:	cmp	r4, #0
   12674:	movge	r5, r4
   12678:	add	r4, r4, r7
   1267c:	lsl	r7, r7, r3
   12680:	asr	r5, r5, #5
   12684:	mov	r2, #128	; 0x80
   12688:	mov	r1, #0
   1268c:	lsl	r5, r5, #2
   12690:	add	r0, sp, #48	; 0x30
   12694:	bl	111b4 <memset@plt>
   12698:	add	r3, sp, #176	; 0xb0
   1269c:	ldr	r1, [sl, #20]
   126a0:	cmp	fp, #0
   126a4:	add	r2, r3, r5
   126a8:	mov	r3, #0
   126ac:	str	r3, [sp, #44]	; 0x2c
   126b0:	ldr	r3, [r2, #-128]	; 0xffffff80
   126b4:	str	r1, [sp, #40]	; 0x28
   126b8:	orr	r3, r3, r7
   126bc:	str	r3, [r2, #-128]	; 0xffffff80
   126c0:	beq	1276c <__assert_fail@plt+0x14d4>
   126c4:	mov	r3, #0
   126c8:	add	ip, sp, #40	; 0x28
   126cc:	mov	r2, r3
   126d0:	mov	r0, r4
   126d4:	add	r1, sp, #48	; 0x30
   126d8:	str	r3, [r9]
   126dc:	str	ip, [sp]
   126e0:	bl	1107c <select@plt>
   126e4:	ldr	r3, [r9]
   126e8:	mov	r1, #0
   126ec:	mov	fp, r0
   126f0:	add	r0, sp, #32
   126f4:	str	r3, [sp, #12]
   126f8:	bl	110e8 <gettimeofday@plt>
   126fc:	ldr	r1, [sp, #32]
   12700:	ldr	r4, [sp, #36]	; 0x24
   12704:	ldr	r0, [r6, #56]	; 0x38
   12708:	ldr	r3, [r6, #52]	; 0x34
   1270c:	sub	r4, r4, r0
   12710:	cmp	r4, #0
   12714:	sub	r3, r1, r3
   12718:	str	r4, [sp, #36]	; 0x24
   1271c:	strge	r3, [sp, #32]
   12720:	bge	12738 <__assert_fail@plt+0x14a0>
   12724:	add	r4, r4, #999424	; 0xf4000
   12728:	sub	r3, r3, #1
   1272c:	add	r4, r4, #576	; 0x240
   12730:	str	r3, [sp, #32]
   12734:	str	r4, [sp, #36]	; 0x24
   12738:	cmp	fp, #0
   1273c:	bge	12610 <__assert_fail@plt+0x1378>
   12740:	ldr	r3, [sp, #12]
   12744:	cmp	r3, #4
   12748:	beq	12628 <__assert_fail@plt+0x1390>
   1274c:	movw	r2, #47436	; 0xb94c
   12750:	movt	r2, #1
   12754:	ldr	r1, [r9]
   12758:	mov	r0, #1
   1275c:	movw	r4, #53916	; 0xd29c
   12760:	movt	r4, #2
   12764:	bl	110f4 <error@plt>
   12768:	b	12630 <__assert_fail@plt+0x1398>
   1276c:	mov	r0, r6
   12770:	bl	123c0 <__assert_fail@plt+0x1128>
   12774:	b	126c4 <__assert_fail@plt+0x142c>
   12778:	movw	r0, #47452	; 0xb95c
   1277c:	movt	r0, #1
   12780:	movw	r4, #53916	; 0xd29c
   12784:	movt	r4, #2
   12788:	bl	10ff8 <printf@plt>
   1278c:	ldr	r0, [r4]
   12790:	bl	11010 <fflush@plt>
   12794:	b	12630 <__assert_fail@plt+0x1398>
   12798:	add	r2, sp, #28
   1279c:	add	r1, sp, #24
   127a0:	str	r3, [sp, #12]
   127a4:	mov	r0, r6
   127a8:	bl	1210c <__assert_fail@plt+0xe74>
   127ac:	subs	r5, r0, #0
   127b0:	ldr	r3, [sp, #12]
   127b4:	movlt	fp, #1
   127b8:	blt	12640 <__assert_fail@plt+0x13a8>
   127bc:	cmp	r8, #0
   127c0:	beq	127d4 <__assert_fail@plt+0x153c>
   127c4:	ldr	r1, [sp, #20]
   127c8:	ldr	r2, [r6, #36]	; 0x24
   127cc:	cmp	r2, r1
   127d0:	beq	12808 <__assert_fail@plt+0x1570>
   127d4:	ldr	r0, [r6, #36]	; 0x24
   127d8:	str	r3, [sp, #12]
   127dc:	bl	11070 <inet_ntoa@plt>
   127e0:	mov	r1, r0
   127e4:	movw	r0, #47456	; 0xb960
   127e8:	movt	r0, #1
   127ec:	bl	10ff8 <printf@plt>
   127f0:	movw	r2, #53924	; 0xd2a4
   127f4:	movt	r2, #2
   127f8:	ldr	r3, [sp, #12]
   127fc:	ldr	r2, [r2, #8]
   12800:	cmp	r2, #0
   12804:	bne	12878 <__assert_fail@plt+0x15e0>
   12808:	vmov	s15, r4
   1280c:	movw	r0, #47472	; 0xb970
   12810:	movt	r0, #1
   12814:	vmov	s13, r3
   12818:	vcvt.f64.s32	d7, s15
   1281c:	vcvt.f64.s32	d6, s13
   12820:	vdiv.f64	d5, d7, d8
   12824:	vmla.f64	d5, d6, d8
   12828:	vmov	r2, r3, d5
   1282c:	bl	10ff8 <printf@plt>
   12830:	cmp	r5, #0
   12834:	beq	12844 <__assert_fail@plt+0x15ac>
   12838:	ldr	r3, [sp, #24]
   1283c:	cmp	r3, #3
   12840:	beq	128b0 <__assert_fail@plt+0x1618>
   12844:	ldr	r3, [r6, #36]	; 0x24
   12848:	str	r3, [sp, #20]
   1284c:	b	12628 <__assert_fail@plt+0x1390>
   12850:	mov	r0, #10
   12854:	bl	111c0 <putchar@plt>
   12858:	add	sp, sp, #180	; 0xb4
   1285c:	vpop	{d8}
   12860:	ldrd	r4, [sp]
   12864:	ldrd	r6, [sp, #8]
   12868:	ldrd	r8, [sp, #16]
   1286c:	ldrd	sl, [sp, #24]
   12870:	add	sp, sp, #32
   12874:	pop	{pc}		; (ldr pc, [sp], #4)
   12878:	mov	r2, #2
   1287c:	mov	r1, #4
   12880:	add	r0, r6, #36	; 0x24
   12884:	bl	11094 <gethostbyaddr@plt>
   12888:	cmp	r0, #0
   1288c:	ldr	r3, [sp, #12]
   12890:	beq	128d8 <__assert_fail@plt+0x1640>
   12894:	ldr	r1, [r0]
   12898:	movw	r0, #47464	; 0xb968
   1289c:	movt	r0, #1
   128a0:	str	r3, [sp, #12]
   128a4:	bl	10ff8 <printf@plt>
   128a8:	ldr	r3, [sp, #12]
   128ac:	b	12808 <__assert_fail@plt+0x1570>
   128b0:	ldr	r2, [sp, #28]
   128b4:	movw	r3, #46840	; 0xb6f8
   128b8:	movt	r3, #1
   128bc:	movw	r0, #47484	; 0xb97c
   128c0:	movt	r0, #1
   128c4:	and	r2, r2, #15
   128c8:	add	r3, r3, r2
   128cc:	ldrb	r1, [r3, #48]	; 0x30
   128d0:	bl	10ff8 <printf@plt>
   128d4:	b	12844 <__assert_fail@plt+0x15ac>
   128d8:	ldr	r0, [r6, #36]	; 0x24
   128dc:	str	r3, [sp, #12]
   128e0:	bl	11070 <inet_ntoa@plt>
   128e4:	mov	r1, r0
   128e8:	ldr	r3, [sp, #12]
   128ec:	b	12898 <__assert_fail@plt+0x1600>
   128f0:	mov	r5, r6
   128f4:	mov	r4, r6
   128f8:	mov	r7, r6
   128fc:	b	12684 <__assert_fail@plt+0x13ec>
   12900:	andeq	r0, r0, r0
   12904:	addmi	r4, pc, r0
   12908:	cmp	r0, #0
   1290c:	ldrne	r0, [r0, #4]
   12910:	mvneq	r0, #0
   12914:	bx	lr
   12918:	cmp	r0, #0
   1291c:	ldrne	r0, [r0]
   12920:	mvneq	r0, #0
   12924:	bx	lr
   12928:	subs	ip, r0, #0
   1292c:	strd	r4, [sp, #-16]!
   12930:	str	r6, [sp, #8]
   12934:	str	lr, [sp, #12]
   12938:	sub	sp, sp, #8
   1293c:	beq	129bc <__assert_fail@plt+0x1724>
   12940:	ldr	r4, [ip]
   12944:	mov	r1, #0
   12948:	mov	r6, #4
   1294c:	add	r3, ip, #48	; 0x30
   12950:	mov	r2, #2
   12954:	ldr	lr, [ip, #48]	; 0x30
   12958:	ldmib	ip, {r0, r5}
   1295c:	add	lr, lr, #1
   12960:	cmp	r5, r1
   12964:	str	lr, [ip, #48]	; 0x30
   12968:	movne	r0, r4
   1296c:	str	r6, [sp]
   12970:	bl	10fec <setsockopt@plt>
   12974:	cmp	r0, #0
   12978:	blt	12990 <__assert_fail@plt+0x16f8>
   1297c:	add	sp, sp, #8
   12980:	ldrd	r4, [sp]
   12984:	ldr	r6, [sp, #8]
   12988:	add	sp, sp, #12
   1298c:	pop	{pc}		; (ldr pc, [sp], #4)
   12990:	bl	1119c <__errno_location@plt>
   12994:	ldr	r1, [r0]
   12998:	movw	r2, #47288	; 0xb8b8
   1299c:	movt	r2, #1
   129a0:	mov	r0, #1
   129a4:	add	sp, sp, #8
   129a8:	ldrd	r4, [sp]
   129ac:	ldr	r6, [sp, #8]
   129b0:	ldr	lr, [sp, #12]
   129b4:	add	sp, sp, #16
   129b8:	b	110f4 <error@plt>
   129bc:	movw	r1, #47260	; 0xb89c
   129c0:	movt	r1, #1
   129c4:	ldr	r3, [pc, #12]	; 129d8 <__assert_fail@plt+0x1740>
   129c8:	movw	r0, #47276	; 0xb8ac
   129cc:	movt	r0, #1
   129d0:	mov	r2, #768	; 0x300
   129d4:	bl	11298 <__assert_fail@plt>
   129d8:	andeq	fp, r1, ip, lsr r7
   129dc:	cmp	r0, #0
   129e0:	beq	12a0c <__assert_fail@plt+0x1774>
   129e4:	ldr	r3, [r0, #8]
   129e8:	cmp	r3, #0
   129ec:	bxne	lr
   129f0:	ldrh	r3, [r0, #18]
   129f4:	rev16	r3, r3
   129f8:	uxth	r3, r3
   129fc:	add	r3, r3, #1
   12a00:	rev16	r3, r3
   12a04:	strh	r3, [r0, #18]
   12a08:	bx	lr
   12a0c:	movw	r1, #47260	; 0xb89c
   12a10:	movt	r1, #1
   12a14:	ldr	r3, [pc, #20]	; 12a30 <__assert_fail@plt+0x1798>
   12a18:	movw	r0, #47276	; 0xb8ac
   12a1c:	movt	r0, #1
   12a20:	str	r4, [sp, #-8]!
   12a24:	mov	r2, #780	; 0x30c
   12a28:	str	lr, [sp, #4]
   12a2c:	bl	11298 <__assert_fail@plt>
   12a30:	andeq	fp, r1, ip, asr #14
   12a34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12a38:	strd	r6, [sp, #8]
   12a3c:	movw	r7, #53924	; 0xd2a4
   12a40:	movt	r7, #2
   12a44:	ldr	r4, [r7]
   12a48:	strd	r8, [sp, #16]
   12a4c:	strd	sl, [sp, #24]
   12a50:	str	lr, [sp, #32]
   12a54:	sub	sp, sp, #60	; 0x3c
   12a58:	cmp	r4, #0
   12a5c:	beq	12a6c <__assert_fail@plt+0x17d4>
   12a60:	ldrb	r3, [r4]
   12a64:	cmp	r3, #0
   12a68:	bne	12a88 <__assert_fail@plt+0x17f0>
   12a6c:	add	sp, sp, #60	; 0x3c
   12a70:	ldrd	r4, [sp]
   12a74:	ldrd	r6, [sp, #8]
   12a78:	ldrd	r8, [sp, #16]
   12a7c:	ldrd	sl, [sp, #24]
   12a80:	add	sp, sp, #32
   12a84:	pop	{pc}		; (ldr pc, [sp], #4)
   12a88:	ldr	r3, [pc, #356]	; 12bf4 <__assert_fail@plt+0x195c>
   12a8c:	mov	fp, #0
   12a90:	mov	sl, #0
   12a94:	str	r0, [sp, #12]
   12a98:	mov	r0, #2
   12a9c:	mov	r2, #38	; 0x26
   12aa0:	mov	r1, #0
   12aa4:	strd	sl, [sp, #24]
   12aa8:	movw	r8, #47492	; 0xb984
   12aac:	movt	r8, #1
   12ab0:	str	r0, [sp, #28]
   12ab4:	strd	sl, [sp, #32]
   12ab8:	str	r0, [sp, #32]
   12abc:	mov	r0, r3
   12ac0:	sub	r5, r3, #2
   12ac4:	strd	sl, [sp, #40]	; 0x28
   12ac8:	strd	sl, [sp, #48]	; 0x30
   12acc:	movw	fp, #47500	; 0xb98c
   12ad0:	movt	fp, #1
   12ad4:	bl	111b4 <memset@plt>
   12ad8:	mov	r3, r0
   12adc:	mov	r2, #3
   12ae0:	mvn	r0, #124	; 0x7c
   12ae4:	mov	r1, #4
   12ae8:	strb	r2, [r5, #1]
   12aec:	strb	r0, [r3, #-2]
   12af0:	mov	r3, r2
   12af4:	strb	r1, [r5, #2]
   12af8:	b	12b30 <__assert_fail@plt+0x1898>
   12afc:	ldr	r0, [sp, #20]
   12b00:	ldrb	r3, [r5, #1]
   12b04:	ldr	r2, [r0, #20]
   12b08:	ldr	r2, [r2, #4]
   12b0c:	str	r2, [r5, r3]
   12b10:	bl	1125c <freeaddrinfo@plt>
   12b14:	ldrb	r3, [r5, #1]
   12b18:	cmp	r6, #0
   12b1c:	add	r3, r3, #4
   12b20:	uxtb	r3, r3
   12b24:	strb	r3, [r5, #1]
   12b28:	beq	12bcc <__assert_fail@plt+0x1934>
   12b2c:	mov	r4, r6
   12b30:	ldrb	r2, [r4]
   12b34:	mov	r1, r8
   12b38:	mov	r0, r4
   12b3c:	cmp	r2, #0
   12b40:	beq	12bcc <__assert_fail@plt+0x1934>
   12b44:	ldrb	r3, [r5, #2]
   12b48:	cmp	r3, #35	; 0x23
   12b4c:	bhi	12bb4 <__assert_fail@plt+0x191c>
   12b50:	bl	11250 <strpbrk@plt>
   12b54:	cmp	r0, #0
   12b58:	add	r3, sp, #20
   12b5c:	mov	r6, r0
   12b60:	add	r2, sp, #24
   12b64:	moveq	r6, r0
   12b68:	mov	r1, #0
   12b6c:	strbne	sl, [r6], #1
   12b70:	mov	r0, r4
   12b74:	bl	11268 <getaddrinfo@plt>
   12b78:	subs	r3, r0, #0
   12b7c:	beq	12afc <__assert_fail@plt+0x1864>
   12b80:	str	r3, [sp, #8]
   12b84:	bl	1119c <__errno_location@plt>
   12b88:	ldr	r3, [sp, #8]
   12b8c:	ldr	r9, [r0]
   12b90:	mov	r0, r3
   12b94:	bl	11040 <gai_strerror@plt>
   12b98:	mov	r3, r4
   12b9c:	mov	r2, fp
   12ba0:	str	r0, [sp]
   12ba4:	mov	r1, r9
   12ba8:	mov	r0, #1
   12bac:	bl	110f4 <error@plt>
   12bb0:	b	12afc <__assert_fail@plt+0x1864>
   12bb4:	movw	r2, #47516	; 0xb99c
   12bb8:	movt	r2, #1
   12bbc:	mov	r1, #0
   12bc0:	mov	r0, #1
   12bc4:	bl	110f4 <error@plt>
   12bc8:	ldrb	r3, [r5, #1]
   12bcc:	ldr	r2, [sp, #12]
   12bd0:	ldr	r2, [r2, #4]
   12bd4:	str	r2, [r5, r3]
   12bd8:	ldrb	r3, [r5, #1]
   12bdc:	add	r3, r3, #4
   12be0:	uxtb	r3, r3
   12be4:	add	r2, r3, #1
   12be8:	strb	r3, [r5, #1]
   12bec:	str	r2, [r7, #20]
   12bf0:	b	12a6c <__assert_fail@plt+0x17d4>
   12bf4:	andeq	sp, r2, sl, lsl #6
   12bf8:	cmp	r1, #7
   12bfc:	strd	r4, [sp, #-16]!
   12c00:	str	r6, [sp, #8]
   12c04:	str	lr, [sp, #12]
   12c08:	bls	12c50 <__assert_fail@plt+0x19b8>
   12c0c:	strb	r2, [r0]
   12c10:	rev16	r3, r3
   12c14:	mov	r5, #0
   12c18:	ldr	r2, [sp, #16]
   12c1c:	mov	r4, r0
   12c20:	strb	r5, [r0, #1]
   12c24:	strh	r5, [r0, #2]
   12c28:	strh	r3, [r0, #4]
   12c2c:	rev16	r2, r2
   12c30:	strh	r2, [r0, #6]
   12c34:	bl	12d84 <__assert_fail@plt+0x1aec>
   12c38:	strh	r0, [r4, #2]
   12c3c:	mov	r0, r5
   12c40:	ldrd	r4, [sp]
   12c44:	ldr	r6, [sp, #8]
   12c48:	add	sp, sp, #12
   12c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c50:	mvn	r5, #0
   12c54:	b	12c3c <__assert_fail@plt+0x19a4>
   12c58:	ldrb	ip, [r0]
   12c5c:	strd	r4, [sp, #-16]!
   12c60:	str	r6, [sp, #8]
   12c64:	str	lr, [sp, #12]
   12c68:	and	ip, ip, #15
   12c6c:	lsl	ip, ip, #2
   12c70:	add	lr, ip, #8
   12c74:	cmp	lr, r1
   12c78:	mvnhi	r0, #0
   12c7c:	bhi	12cb4 <__assert_fail@plt+0x1a1c>
   12c80:	add	r5, r0, ip
   12c84:	sub	r1, r1, ip
   12c88:	ldrh	r4, [r5, #2]
   12c8c:	str	r0, [r2]
   12c90:	mov	r2, #0
   12c94:	mov	r0, r5
   12c98:	str	r5, [r3]
   12c9c:	strh	r2, [r5, #2]
   12ca0:	bl	12d84 <__assert_fail@plt+0x1aec>
   12ca4:	mov	r3, r0
   12ca8:	subs	r0, r0, r4
   12cac:	movne	r0, #1
   12cb0:	strh	r3, [r5, #2]
   12cb4:	ldrd	r4, [sp]
   12cb8:	ldr	r6, [sp, #8]
   12cbc:	add	sp, sp, #12
   12cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   12cc4:	cmp	r1, #7
   12cc8:	bls	12d0c <__assert_fail@plt+0x1a74>
   12ccc:	rev16	r3, r3
   12cd0:	rev16	r2, r2
   12cd4:	str	r4, [sp, #-8]!
   12cd8:	mov	ip, #8
   12cdc:	mov	r4, r0
   12ce0:	str	lr, [sp, #4]
   12ce4:	str	ip, [r0]
   12ce8:	strh	r2, [r0, #4]
   12cec:	strh	r3, [r0, #6]
   12cf0:	bl	12d84 <__assert_fail@plt+0x1aec>
   12cf4:	mov	r3, #0
   12cf8:	strh	r0, [r4, #2]
   12cfc:	ldr	r4, [sp]
   12d00:	add	sp, sp, #4
   12d04:	mov	r0, r3
   12d08:	pop	{pc}		; (ldr pc, [sp], #4)
   12d0c:	mvn	r3, #0
   12d10:	mov	r0, r3
   12d14:	bx	lr
   12d18:	ldrb	ip, [r0]
   12d1c:	strd	r4, [sp, #-16]!
   12d20:	str	r6, [sp, #8]
   12d24:	str	lr, [sp, #12]
   12d28:	and	ip, ip, #15
   12d2c:	lsl	ip, ip, #2
   12d30:	add	lr, ip, #8
   12d34:	cmp	r1, lr
   12d38:	mvncc	r0, #0
   12d3c:	bcc	12d74 <__assert_fail@plt+0x1adc>
   12d40:	add	r5, r0, ip
   12d44:	sub	r1, r1, ip
   12d48:	ldrh	r4, [r5, #2]
   12d4c:	str	r0, [r2]
   12d50:	mov	r2, #0
   12d54:	mov	r0, r5
   12d58:	str	r5, [r3]
   12d5c:	strh	r2, [r5, #2]
   12d60:	bl	12d84 <__assert_fail@plt+0x1aec>
   12d64:	mov	r3, r0
   12d68:	subs	r0, r4, r0
   12d6c:	movne	r0, #1
   12d70:	strh	r3, [r5, #2]
   12d74:	ldrd	r4, [sp]
   12d78:	ldr	r6, [sp, #8]
   12d7c:	add	sp, sp, #12
   12d80:	pop	{pc}		; (ldr pc, [sp], #4)
   12d84:	mov	r3, #0
   12d88:	push	{lr}		; (str lr, [sp, #-4]!)
   12d8c:	sub	sp, sp, #12
   12d90:	cmp	r1, #1
   12d94:	strh	r3, [sp, #6]
   12d98:	ble	12df4 <__assert_fail@plt+0x1b5c>
   12d9c:	sub	r1, r1, #2
   12da0:	lsr	lr, r1, #1
   12da4:	add	ip, lr, #1
   12da8:	add	ip, r0, ip, lsl #1
   12dac:	ldrh	r2, [r0], #2
   12db0:	cmp	ip, r0
   12db4:	add	r3, r3, r2
   12db8:	bne	12dac <__assert_fail@plt+0x1b14>
   12dbc:	sub	r1, r1, lr, lsl #1
   12dc0:	cmp	r1, #1
   12dc4:	bne	12dd8 <__assert_fail@plt+0x1b40>
   12dc8:	ldrb	r2, [ip]
   12dcc:	strb	r2, [sp, #6]
   12dd0:	ldrh	r2, [sp, #6]
   12dd4:	add	r3, r3, r2
   12dd8:	uxth	r0, r3
   12ddc:	add	r3, r0, r3, asr #16
   12de0:	add	r3, r3, r3, asr #16
   12de4:	mvn	r0, r3
   12de8:	uxth	r0, r0
   12dec:	add	sp, sp, #12
   12df0:	pop	{pc}		; (ldr pc, [sp], #4)
   12df4:	mov	ip, r0
   12df8:	b	12dc0 <__assert_fail@plt+0x1b28>
   12dfc:	ldr	r3, [r0, #12]
   12e00:	strd	r4, [sp, #-16]!
   12e04:	ldr	r2, [r1, #12]
   12e08:	str	r6, [sp, #8]
   12e0c:	str	lr, [sp, #12]
   12e10:	cmp	r3, r2
   12e14:	beq	12e74 <__assert_fail@plt+0x1bdc>
   12e18:	mov	r5, r1
   12e1c:	mov	r4, r0
   12e20:	mov	r1, r2
   12e24:	mov	r0, r3
   12e28:	bl	12dfc <__assert_fail@plt+0x1b64>
   12e2c:	cmp	r0, #0
   12e30:	bne	12e64 <__assert_fail@plt+0x1bcc>
   12e34:	ldr	r3, [r5, #8]
   12e38:	ldr	r0, [r4, #8]
   12e3c:	mvn	r2, r3
   12e40:	lsr	r2, r2, #31
   12e44:	cmp	r2, r0, lsr #31
   12e48:	subne	r0, r0, r3
   12e4c:	subeq	r0, r3, r0
   12e50:	cmp	r0, #0
   12e54:	bne	12e64 <__assert_fail@plt+0x1bcc>
   12e58:	ldr	r0, [r4, #4]
   12e5c:	ldr	r3, [r5, #4]
   12e60:	sub	r0, r3, r0
   12e64:	ldrd	r4, [sp]
   12e68:	ldr	r6, [sp, #8]
   12e6c:	add	sp, sp, #12
   12e70:	pop	{pc}		; (ldr pc, [sp], #4)
   12e74:	ldr	lr, [r1, #4]
   12e78:	ldr	r3, [r1, #8]
   12e7c:	ldr	r2, [r0, #8]
   12e80:	ldr	ip, [r0, #4]
   12e84:	mvn	r1, r3
   12e88:	lsr	r1, r1, #31
   12e8c:	ldrd	r4, [sp]
   12e90:	cmp	r1, r2, lsr #31
   12e94:	ldr	r6, [sp, #8]
   12e98:	add	sp, sp, #12
   12e9c:	subne	r0, r2, r3
   12ea0:	subeq	r0, r3, r2
   12ea4:	cmp	r0, #0
   12ea8:	subeq	r0, lr, ip
   12eac:	pop	{pc}		; (ldr pc, [sp], #4)
   12eb0:	strd	r4, [sp, #-16]!
   12eb4:	subs	r5, r0, #0
   12eb8:	mov	r4, r1
   12ebc:	str	r6, [sp, #8]
   12ec0:	str	lr, [sp, #12]
   12ec4:	beq	12ed8 <__assert_fail@plt+0x1c40>
   12ec8:	mov	r1, #10
   12ecc:	bl	11184 <strchr@plt>
   12ed0:	adds	r5, r0, #0
   12ed4:	movne	r5, #1
   12ed8:	cmp	r4, #0
   12edc:	beq	12f08 <__assert_fail@plt+0x1c70>
   12ee0:	ldr	r3, [r4]
   12ee4:	cmp	r3, #0
   12ee8:	beq	12f08 <__assert_fail@plt+0x1c70>
   12eec:	ldr	r0, [r3, #8]
   12ef0:	ldr	r1, [r3, #16]
   12ef4:	bl	12eb0 <__assert_fail@plt+0x1c18>
   12ef8:	ldr	r3, [r4, #16]!
   12efc:	add	r5, r5, r0
   12f00:	cmp	r3, #0
   12f04:	bne	12eec <__assert_fail@plt+0x1c54>
   12f08:	mov	r0, r5
   12f0c:	ldrd	r4, [sp]
   12f10:	ldr	r6, [sp, #8]
   12f14:	add	sp, sp, #12
   12f18:	pop	{pc}		; (ldr pc, [sp], #4)
   12f1c:	ldr	r3, [r0, #16]
   12f20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12f24:	ldr	r4, [r0]
   12f28:	strd	r6, [sp, #8]
   12f2c:	strd	r8, [sp, #16]
   12f30:	strd	sl, [sp, #24]
   12f34:	str	lr, [sp, #32]
   12f38:	sub	sp, sp, #52	; 0x34
   12f3c:	stm	sp, {r0, r3}
   12f40:	mov	r0, #16
   12f44:	str	r1, [sp, #8]
   12f48:	bl	19a04 <argp_parse@@Base+0x2424>
   12f4c:	subs	fp, r0, #0
   12f50:	beq	135b8 <__assert_fail@plt+0x2320>
   12f54:	mov	r3, #0
   12f58:	cmp	r4, r3
   12f5c:	str	r3, [fp, #4]
   12f60:	str	r3, [fp, #12]
   12f64:	beq	131c0 <__assert_fail@plt+0x1f28>
   12f68:	ldr	r0, [r4, #12]
   12f6c:	ands	r0, r0, #4
   12f70:	bne	135f4 <__assert_fail@plt+0x235c>
   12f74:	mov	r9, r0
   12f78:	add	r5, r4, #24
   12f7c:	mov	r8, r0
   12f80:	b	12fd0 <__assert_fail@plt+0x1d38>
   12f84:	ldr	r3, [r5, #-12]
   12f88:	tst	r3, #4
   12f8c:	bne	12f9c <__assert_fail@plt+0x1d04>
   12f90:	add	r9, r9, #1
   12f94:	str	r9, [fp, #4]
   12f98:	ldr	r3, [r5, #-12]
   12f9c:	tst	r3, #8
   12fa0:	bne	12fcc <__assert_fail@plt+0x1d34>
   12fa4:	ldr	r6, [r5, #-20]	; 0xffffffec
   12fa8:	sub	r3, r6, #1
   12fac:	cmp	r3, #254	; 0xfe
   12fb0:	bhi	12fcc <__assert_fail@plt+0x1d34>
   12fb4:	bl	11154 <__ctype_b_loc@plt>
   12fb8:	ldr	r3, [r0]
   12fbc:	lsl	r6, r6, #1
   12fc0:	ldrh	r3, [r3, r6]
   12fc4:	tst	r3, #16384	; 0x4000
   12fc8:	addne	r8, r8, #1
   12fcc:	add	r5, r5, #24
   12fd0:	ldr	r3, [r5, #-20]	; 0xffffffec
   12fd4:	cmp	r3, #0
   12fd8:	bne	12f84 <__assert_fail@plt+0x1cec>
   12fdc:	ldr	r3, [r5, #-24]	; 0xffffffe8
   12fe0:	cmp	r3, #0
   12fe4:	bne	12f84 <__assert_fail@plt+0x1cec>
   12fe8:	ldr	r3, [r5, #-8]
   12fec:	cmp	r3, #0
   12ff0:	bne	12f84 <__assert_fail@plt+0x1cec>
   12ff4:	ldr	sl, [r5, #-4]
   12ff8:	cmp	sl, #0
   12ffc:	bne	12f84 <__assert_fail@plt+0x1cec>
   13000:	rsb	r9, r9, r9, lsl #3
   13004:	lsl	r0, r9, #2
   13008:	bl	19a04 <argp_parse@@Base+0x2424>
   1300c:	str	r0, [fp]
   13010:	add	r0, r8, #1
   13014:	bl	19a04 <argp_parse@@Base+0x2424>
   13018:	ldr	r5, [fp]
   1301c:	mov	r7, r0
   13020:	str	r0, [fp, #8]
   13024:	cmp	r5, #0
   13028:	cmpne	r0, #0
   1302c:	beq	1355c <__assert_fail@plt+0x22c4>
   13030:	ldr	r2, [fp, #4]
   13034:	movw	r3, #37449	; 0x9249
   13038:	movt	r3, #2340	; 0x924
   1303c:	cmp	r2, r3
   13040:	bhi	1357c <__assert_fail@plt+0x22e4>
   13044:	mov	r6, r0
   13048:	mov	r8, sl
   1304c:	ldr	r3, [r4, #4]
   13050:	mov	r0, sl
   13054:	add	r5, r5, #28
   13058:	str	fp, [sp, #12]
   1305c:	ldr	sl, [sp, #8]
   13060:	mov	fp, r7
   13064:	cmp	r3, #0
   13068:	ldr	r7, [r4, #20]
   1306c:	bne	1307c <__assert_fail@plt+0x1de4>
   13070:	ldr	ip, [r4]
   13074:	cmp	ip, #0
   13078:	beq	1315c <__assert_fail@plt+0x1ec4>
   1307c:	cmp	r7, #0
   13080:	str	r4, [r5, #-28]	; 0xffffffe4
   13084:	str	r8, [r5, #-24]	; 0xffffffe8
   13088:	str	r6, [r5, #-20]	; 0xffffffec
   1308c:	bne	130a0 <__assert_fail@plt+0x1e08>
   13090:	ldr	r2, [r4]
   13094:	orrs	r3, r2, r3
   13098:	movne	r7, r0
   1309c:	beq	1317c <__assert_fail@plt+0x1ee4>
   130a0:	ldr	r2, [sp]
   130a4:	mov	r3, #0
   130a8:	str	r7, [r5, #-16]
   130ac:	str	sl, [r5, #-12]
   130b0:	str	r2, [r5, #-8]
   130b4:	add	r3, r3, #1
   130b8:	str	r3, [r5, #-24]	; 0xffffffe8
   130bc:	ldr	r3, [r4, #12]
   130c0:	tst	r3, #8
   130c4:	bne	1312c <__assert_fail@plt+0x1e94>
   130c8:	ldr	r9, [r4, #4]
   130cc:	sub	r3, r9, #1
   130d0:	cmp	r3, #254	; 0xfe
   130d4:	bhi	1312c <__assert_fail@plt+0x1e94>
   130d8:	bl	11154 <__ctype_b_loc@plt>
   130dc:	ldr	r0, [r0]
   130e0:	lsl	r3, r9, #1
   130e4:	ldrh	r3, [r0, r3]
   130e8:	tst	r3, #16384	; 0x4000
   130ec:	beq	1312c <__assert_fail@plt+0x1e94>
   130f0:	cmp	fp, r6
   130f4:	uxtb	r9, r9
   130f8:	bcs	13128 <__assert_fail@plt+0x1e90>
   130fc:	ldrb	r3, [fp]
   13100:	cmp	r3, r9
   13104:	beq	1312c <__assert_fail@plt+0x1e94>
   13108:	mov	r3, fp
   1310c:	sub	r0, r6, #1
   13110:	b	13120 <__assert_fail@plt+0x1e88>
   13114:	ldrb	ip, [r3, #1]!
   13118:	cmp	ip, r9
   1311c:	beq	1312c <__assert_fail@plt+0x1e94>
   13120:	cmp	r0, r3
   13124:	bne	13114 <__assert_fail@plt+0x1e7c>
   13128:	strb	r9, [r6], #1
   1312c:	add	r4, r4, #24
   13130:	ldr	r0, [r4, #4]
   13134:	cmp	r0, #0
   13138:	bne	13148 <__assert_fail@plt+0x1eb0>
   1313c:	ldr	r3, [r4]
   13140:	cmp	r3, #0
   13144:	beq	13184 <__assert_fail@plt+0x1eec>
   13148:	ldr	r3, [r4, #12]
   1314c:	tst	r3, #4
   13150:	beq	131a8 <__assert_fail@plt+0x1f10>
   13154:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13158:	b	130b4 <__assert_fail@plt+0x1e1c>
   1315c:	ldr	ip, [r4, #16]
   13160:	cmp	ip, #0
   13164:	beq	131b0 <__assert_fail@plt+0x1f18>
   13168:	cmp	r7, #0
   1316c:	str	r4, [r5, #-28]	; 0xffffffe4
   13170:	str	r3, [r5, #-24]	; 0xffffffe8
   13174:	str	r6, [r5, #-20]	; 0xffffffec
   13178:	bne	130a0 <__assert_fail@plt+0x1e08>
   1317c:	add	r7, r0, #1
   13180:	b	130a0 <__assert_fail@plt+0x1e08>
   13184:	ldr	r3, [r4, #16]
   13188:	cmp	r3, #0
   1318c:	bne	13148 <__assert_fail@plt+0x1eb0>
   13190:	ldr	r3, [r4, #20]
   13194:	cmp	r3, #0
   13198:	bne	13148 <__assert_fail@plt+0x1eb0>
   1319c:	add	r5, r5, #28
   131a0:	mov	r0, r7
   131a4:	b	13064 <__assert_fail@plt+0x1dcc>
   131a8:	mov	r3, r0
   131ac:	b	1319c <__assert_fail@plt+0x1f04>
   131b0:	cmp	r7, #0
   131b4:	bne	132fc <__assert_fail@plt+0x2064>
   131b8:	ldr	fp, [sp, #12]
   131bc:	strb	r3, [r6]
   131c0:	ldr	sl, [sp, #4]
   131c4:	cmp	sl, #0
   131c8:	beq	132dc <__assert_fail@plt+0x2044>
   131cc:	ldr	r0, [sl]
   131d0:	cmp	r0, #0
   131d4:	beq	132dc <__assert_fail@plt+0x2044>
   131d8:	movw	r3, #37449	; 0x9249
   131dc:	movt	r3, #2340	; 0x924
   131e0:	str	r3, [sp, #28]
   131e4:	add	r3, fp, #12
   131e8:	str	r3, [sp, #44]	; 0x2c
   131ec:	ldr	r6, [sl, #8]
   131f0:	ldr	r5, [sl, #12]
   131f4:	cmp	r5, #0
   131f8:	bne	13204 <__assert_fail@plt+0x1f6c>
   131fc:	cmp	r6, #0
   13200:	beq	13544 <__assert_fail@plt+0x22ac>
   13204:	ldr	r3, [sp]
   13208:	mov	r0, #28
   1320c:	ldr	r4, [r3, #16]
   13210:	bl	19a04 <argp_parse@@Base+0x2424>
   13214:	subs	r1, r0, #0
   13218:	beq	1330c <__assert_fail@plt+0x2074>
   1321c:	ldr	r2, [sp]
   13220:	sub	r4, sl, r4
   13224:	asr	r4, r4, #4
   13228:	str	r6, [r1]
   1322c:	ldr	r3, [sp, #8]
   13230:	strd	r4, [r1, #4]
   13234:	cmp	r3, #0
   13238:	str	r3, [r1, #12]
   1323c:	ldrne	r3, [r3, #20]
   13240:	str	r2, [r1, #16]
   13244:	ldr	r2, [fp, #12]
   13248:	ldr	r0, [sl]
   1324c:	addne	r3, r3, #1
   13250:	str	r1, [fp, #12]
   13254:	str	r3, [r1, #20]
   13258:	str	r2, [r1, #24]
   1325c:	bl	12f1c <__assert_fail@plt+0x1c84>
   13260:	ldr	r3, [fp, #12]
   13264:	mov	r4, r0
   13268:	cmp	r3, #0
   1326c:	bne	13278 <__assert_fail@plt+0x1fe0>
   13270:	b	1354c <__assert_fail@plt+0x22b4>
   13274:	mov	r3, r2
   13278:	ldr	r2, [r3, #24]
   1327c:	cmp	r2, #0
   13280:	bne	13274 <__assert_fail@plt+0x1fdc>
   13284:	add	r3, r3, #24
   13288:	ldr	r2, [r4, #4]
   1328c:	ldr	r1, [r4, #12]
   13290:	cmp	r2, #0
   13294:	str	r1, [r3]
   13298:	mov	r3, #0
   1329c:	str	r3, [r4, #12]
   132a0:	beq	132c8 <__assert_fail@plt+0x2030>
   132a4:	ldr	r3, [fp, #4]
   132a8:	cmp	r3, #0
   132ac:	bne	13314 <__assert_fail@plt+0x207c>
   132b0:	ldr	r1, [r4]
   132b4:	str	r2, [fp, #4]
   132b8:	ldr	r2, [r4, #8]
   132bc:	str	r1, [fp]
   132c0:	str	r2, [fp, #8]
   132c4:	str	r3, [r4, #4]
   132c8:	mov	r0, r4
   132cc:	bl	18618 <argp_parse@@Base+0x1038>
   132d0:	ldr	r0, [sl, #16]!
   132d4:	cmp	r0, #0
   132d8:	bne	131ec <__assert_fail@plt+0x1f54>
   132dc:	mov	r0, fp
   132e0:	add	sp, sp, #52	; 0x34
   132e4:	ldrd	r4, [sp]
   132e8:	ldrd	r6, [sp, #8]
   132ec:	ldrd	r8, [sp, #16]
   132f0:	ldrd	sl, [sp, #24]
   132f4:	add	sp, sp, #32
   132f8:	pop	{pc}		; (ldr pc, [sp], #4)
   132fc:	str	r4, [r5, #-28]	; 0xffffffe4
   13300:	str	r3, [r5, #-24]	; 0xffffffe8
   13304:	str	r6, [r5, #-20]	; 0xffffffec
   13308:	b	130a0 <__assert_fail@plt+0x1e08>
   1330c:	ldr	r0, [sl]
   13310:	b	1325c <__assert_fail@plt+0x1fc4>
   13314:	add	r3, r2, r3
   13318:	rsb	r0, r3, r3, lsl #3
   1331c:	str	r3, [sp, #12]
   13320:	lsl	r0, r0, #2
   13324:	bl	19a04 <argp_parse@@Base+0x2424>
   13328:	mov	r5, r0
   1332c:	ldr	r0, [fp, #8]
   13330:	str	r5, [sp, #4]
   13334:	bl	11178 <strlen@plt>
   13338:	mov	r8, r0
   1333c:	ldr	r0, [r4, #8]
   13340:	bl	11178 <strlen@plt>
   13344:	add	r0, r8, r0
   13348:	add	r0, r0, #1
   1334c:	bl	19a04 <argp_parse@@Base+0x2424>
   13350:	cmp	r5, #0
   13354:	cmpne	r0, #0
   13358:	mov	r9, r0
   1335c:	beq	1359c <__assert_fail@plt+0x2304>
   13360:	ldr	r3, [sp, #12]
   13364:	ldr	r2, [sp, #28]
   13368:	cmp	r3, r2
   1336c:	bhi	135d8 <__assert_fail@plt+0x2340>
   13370:	ldm	fp, {r1, r6}
   13374:	ldr	r0, [sp, #4]
   13378:	rsb	r5, r6, r6, lsl #3
   1337c:	str	r1, [sp, #16]
   13380:	lsl	r5, r5, #2
   13384:	mov	r2, r5
   13388:	bl	11148 <mempcpy@plt>
   1338c:	ldm	r4, {r1, r3}
   13390:	rsb	r2, r3, r3, lsl #3
   13394:	str	r3, [sp, #20]
   13398:	lsl	r2, r2, #2
   1339c:	bl	11058 <memcpy@plt>
   133a0:	ldr	r7, [fp, #8]
   133a4:	mov	r2, r8
   133a8:	mov	r0, r9
   133ac:	mov	r1, r7
   133b0:	bl	11058 <memcpy@plt>
   133b4:	cmp	r6, #0
   133b8:	ldr	r3, [sp, #20]
   133bc:	beq	13554 <__assert_fail@plt+0x22bc>
   133c0:	ldr	r1, [sp, #4]
   133c4:	subs	r6, r6, #1
   133c8:	add	r1, r1, #28
   133cc:	ldr	r2, [r1, #-20]	; 0xffffffec
   133d0:	sub	r2, r2, r7
   133d4:	add	r2, r9, r2
   133d8:	str	r2, [r1, #-20]	; 0xffffffec
   133dc:	bne	133c4 <__assert_fail@plt+0x212c>
   133e0:	ldr	r2, [sp, #4]
   133e4:	add	r5, r2, r5
   133e8:	add	r2, r9, r8
   133ec:	cmp	r3, #0
   133f0:	ldr	r1, [r4, #8]
   133f4:	str	r2, [sp, #20]
   133f8:	beq	13498 <__assert_fail@plt+0x2200>
   133fc:	sub	r0, r2, #1
   13400:	add	r5, r5, #28
   13404:	mov	r7, r2
   13408:	str	r0, [sp, #24]
   1340c:	strd	sl, [sp, #36]	; 0x24
   13410:	mov	sl, r1
   13414:	mov	fp, r3
   13418:	str	r4, [sp, #32]
   1341c:	str	r7, [r5, #-20]	; 0xffffffec
   13420:	ldr	r6, [r5, #-24]	; 0xffffffe8
   13424:	ldr	r8, [r5, #-28]	; 0xffffffe4
   13428:	cmp	r6, #0
   1342c:	beq	13480 <__assert_fail@plt+0x21e8>
   13430:	ldr	r3, [r8, #12]
   13434:	tst	r3, #8
   13438:	bne	13474 <__assert_fail@plt+0x21dc>
   1343c:	ldr	r4, [r8, #4]
   13440:	sub	r3, r4, #1
   13444:	cmp	r3, #254	; 0xfe
   13448:	bhi	13474 <__assert_fail@plt+0x21dc>
   1344c:	bl	11154 <__ctype_b_loc@plt>
   13450:	ldr	r1, [r0]
   13454:	lsl	r2, r4, #1
   13458:	ldrb	r3, [sl]
   1345c:	ldrh	r2, [r1, r2]
   13460:	sub	r4, r3, r4
   13464:	clz	r4, r4
   13468:	lsr	r4, r4, #5
   1346c:	ands	r2, r4, r2, lsr #14
   13470:	bne	13500 <__assert_fail@plt+0x2268>
   13474:	subs	r6, r6, #1
   13478:	add	r8, r8, #24
   1347c:	bne	13430 <__assert_fail@plt+0x2198>
   13480:	subs	fp, fp, #1
   13484:	add	r5, r5, #28
   13488:	bne	1341c <__assert_fail@plt+0x2184>
   1348c:	add	r4, sp, #32
   13490:	mov	r2, r7
   13494:	ldm	r4, {r4, sl, fp}
   13498:	mov	r3, #0
   1349c:	strb	r3, [r2]
   134a0:	ldr	r0, [sp, #16]
   134a4:	bl	18618 <argp_parse@@Base+0x1038>
   134a8:	ldr	r0, [fp, #8]
   134ac:	bl	18618 <argp_parse@@Base+0x1038>
   134b0:	ldr	r3, [sp, #4]
   134b4:	ldr	r0, [r4, #12]
   134b8:	str	r3, [fp]
   134bc:	ldr	r3, [sp, #12]
   134c0:	cmp	r0, #0
   134c4:	str	r3, [fp, #4]
   134c8:	str	r9, [fp, #8]
   134cc:	beq	134e0 <__assert_fail@plt+0x2248>
   134d0:	ldr	r5, [r0, #24]
   134d4:	bl	18618 <argp_parse@@Base+0x1038>
   134d8:	subs	r0, r5, #0
   134dc:	bne	134d0 <__assert_fail@plt+0x2238>
   134e0:	ldr	r3, [r4, #4]
   134e4:	cmp	r3, #0
   134e8:	beq	132c8 <__assert_fail@plt+0x2030>
   134ec:	ldr	r0, [r4]
   134f0:	bl	18618 <argp_parse@@Base+0x1038>
   134f4:	ldr	r0, [r4, #8]
   134f8:	bl	18618 <argp_parse@@Base+0x1038>
   134fc:	b	132c8 <__assert_fail@plt+0x2030>
   13500:	ldr	r2, [sp, #20]
   13504:	cmp	r9, r2
   13508:	bcs	13538 <__assert_fail@plt+0x22a0>
   1350c:	ldrb	r2, [r9]
   13510:	cmp	r2, r3
   13514:	beq	1353c <__assert_fail@plt+0x22a4>
   13518:	mov	r2, r9
   1351c:	ldr	r0, [sp, #24]
   13520:	b	13530 <__assert_fail@plt+0x2298>
   13524:	ldrb	r1, [r2, #1]!
   13528:	cmp	r1, r3
   1352c:	beq	1353c <__assert_fail@plt+0x22a4>
   13530:	cmp	r0, r2
   13534:	bne	13524 <__assert_fail@plt+0x228c>
   13538:	strb	r3, [r7], #1
   1353c:	add	sl, sl, #1
   13540:	b	13474 <__assert_fail@plt+0x21dc>
   13544:	ldr	r1, [sp, #8]
   13548:	b	1325c <__assert_fail@plt+0x1fc4>
   1354c:	ldr	r3, [sp, #44]	; 0x2c
   13550:	b	13288 <__assert_fail@plt+0x1ff0>
   13554:	ldr	r5, [sp, #4]
   13558:	b	133e8 <__assert_fail@plt+0x2150>
   1355c:	movw	r3, #48180	; 0xbc34
   13560:	movt	r3, #1
   13564:	movw	r1, #48348	; 0xbcdc
   13568:	movt	r1, #1
   1356c:	movw	r0, #48380	; 0xbcfc
   13570:	movt	r0, #1
   13574:	movw	r2, #474	; 0x1da
   13578:	bl	11298 <__assert_fail@plt>
   1357c:	movw	r3, #48180	; 0xbc34
   13580:	movt	r3, #1
   13584:	movw	r1, #48348	; 0xbcdc
   13588:	movt	r1, #1
   1358c:	movw	r0, #48416	; 0xbd20
   13590:	movt	r0, #1
   13594:	mov	r2, #476	; 0x1dc
   13598:	bl	11298 <__assert_fail@plt>
   1359c:	movw	r1, #48348	; 0xbcdc
   135a0:	movt	r1, #1
   135a4:	ldr	r3, [pc, #104]	; 13614 <__assert_fail@plt+0x237c>
   135a8:	movw	r0, #48476	; 0xbd5c
   135ac:	movt	r0, #1
   135b0:	movw	r2, #970	; 0x3ca
   135b4:	bl	11298 <__assert_fail@plt>
   135b8:	movw	r3, #48180	; 0xbc34
   135bc:	movt	r3, #1
   135c0:	movw	r1, #48348	; 0xbcdc
   135c4:	movt	r1, #1
   135c8:	movw	r0, #48360	; 0xbce8
   135cc:	movt	r0, #1
   135d0:	movw	r2, #450	; 0x1c2
   135d4:	bl	11298 <__assert_fail@plt>
   135d8:	movw	r1, #48348	; 0xbcdc
   135dc:	movt	r1, #1
   135e0:	ldr	r3, [pc, #44]	; 13614 <__assert_fail@plt+0x237c>
   135e4:	movw	r0, #48504	; 0xbd78
   135e8:	movt	r0, #1
   135ec:	mov	r2, #972	; 0x3cc
   135f0:	bl	11298 <__assert_fail@plt>
   135f4:	movw	r3, #48180	; 0xbc34
   135f8:	movt	r3, #1
   135fc:	movw	r1, #48348	; 0xbcdc
   13600:	movt	r1, #1
   13604:	movw	r0, #48364	; 0xbcec
   13608:	movt	r0, #1
   1360c:	mov	r2, #460	; 0x1cc
   13610:	bl	11298 <__assert_fail@plt>
   13614:	andeq	fp, r1, r0, asr #24
   13618:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1361c:	mov	r4, r3
   13620:	ldr	r3, [r0, #20]
   13624:	cmp	r3, #0
   13628:	ldr	r3, [r0, #16]
   1362c:	strd	r6, [sp, #8]
   13630:	strd	r8, [sp, #16]
   13634:	mov	r8, r2
   13638:	ldr	r2, [r2]
   1363c:	strd	sl, [sp, #24]
   13640:	ldr	r7, [r0, #8]
   13644:	str	lr, [sp, #32]
   13648:	sub	sp, sp, #28
   1364c:	ldr	r5, [sp, #64]	; 0x40
   13650:	str	r3, [sp, #8]
   13654:	moveq	r9, r7
   13658:	str	r7, [sp, #12]
   1365c:	str	r2, [sp, #16]
   13660:	str	r1, [sp, #20]
   13664:	beq	1368c <__assert_fail@plt+0x23f4>
   13668:	mov	r6, r0
   1366c:	bl	18498 <argp_parse@@Base+0xeb8>
   13670:	mov	r2, r0
   13674:	mov	r1, r7
   13678:	ldr	r3, [r6, #20]
   1367c:	mov	r0, #6
   13680:	movt	r0, #512	; 0x200
   13684:	blx	r3
   13688:	mov	r9, r0
   1368c:	cmp	r9, #0
   13690:	beq	13880 <__assert_fail@plt+0x25e8>
   13694:	mov	r1, #10
   13698:	mov	r0, r9
   1369c:	bl	11028 <strchrnul@plt>
   136a0:	ldrb	r3, [r0]
   136a4:	mov	r6, r0
   136a8:	cmp	r3, #0
   136ac:	moveq	fp, r3
   136b0:	moveq	r7, r9
   136b4:	beq	13700 <__assert_fail@plt+0x2468>
   136b8:	ldr	r3, [sp, #16]
   136bc:	ldrb	sl, [r3]
   136c0:	cmp	sl, #0
   136c4:	beq	13904 <__assert_fail@plt+0x266c>
   136c8:	mov	fp, #0
   136cc:	add	r7, r0, #1
   136d0:	add	fp, fp, #1
   136d4:	mov	r0, r7
   136d8:	mov	r1, #10
   136dc:	bl	11028 <strchrnul@plt>
   136e0:	cmp	fp, sl
   136e4:	bne	136cc <__assert_fail@plt+0x2434>
   136e8:	mov	r6, r0
   136ec:	ldr	r3, [r8]
   136f0:	mov	r2, #1
   136f4:	mov	fp, r2
   136f8:	add	r3, r3, r2
   136fc:	str	r3, [r8]
   13700:	ldr	ip, [r5, #16]
   13704:	add	sl, r6, #1
   13708:	sub	sl, sl, r7
   1370c:	ldr	r1, [r5, #24]
   13710:	ldr	r3, [r5, #28]
   13714:	sub	r1, r3, r1
   13718:	mov	r0, r3
   1371c:	cmp	r1, ip
   13720:	bhi	1386c <__assert_fail@plt+0x25d4>
   13724:	ldr	ip, [r5, #8]
   13728:	ldr	r1, [r5, #20]
   1372c:	cmp	r1, #0
   13730:	addge	sl, sl, r1
   13734:	ldr	r1, [r5, #32]
   13738:	cmp	sl, ip
   1373c:	bcc	1375c <__assert_fail@plt+0x24c4>
   13740:	cmp	r3, r1
   13744:	bcs	138bc <__assert_fail@plt+0x2624>
   13748:	add	r0, r3, #1
   1374c:	mov	r1, #10
   13750:	str	r0, [r5, #28]
   13754:	strb	r1, [r3]
   13758:	b	13774 <__assert_fail@plt+0x24dc>
   1375c:	cmp	r3, r1
   13760:	bcs	138e8 <__assert_fail@plt+0x2650>
   13764:	add	r1, r0, #1
   13768:	mov	r3, #32
   1376c:	str	r1, [r5, #28]
   13770:	strb	r3, [r0]
   13774:	ldrd	r0, [r5, #28]
   13778:	sub	sl, r6, r7
   1377c:	add	r3, r0, sl
   13780:	cmp	r1, r3
   13784:	bcs	137a0 <__assert_fail@plt+0x2508>
   13788:	mov	r1, sl
   1378c:	mov	r0, r5
   13790:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   13794:	cmp	r0, #0
   13798:	beq	137b8 <__assert_fail@plt+0x2520>
   1379c:	ldr	r0, [r5, #28]
   137a0:	mov	r2, sl
   137a4:	mov	r1, r7
   137a8:	bl	11058 <memcpy@plt>
   137ac:	ldr	r3, [r5, #28]
   137b0:	add	sl, r3, sl
   137b4:	str	sl, [r5, #28]
   137b8:	ldr	r3, [sp, #12]
   137bc:	cmp	r3, r9
   137c0:	beq	137cc <__assert_fail@plt+0x2534>
   137c4:	mov	r0, r9
   137c8:	bl	18618 <argp_parse@@Base+0x1038>
   137cc:	ldr	r3, [sp, #8]
   137d0:	cmp	r3, #0
   137d4:	beq	1381c <__assert_fail@plt+0x2584>
   137d8:	ldr	r2, [r3]
   137dc:	cmp	r2, #0
   137e0:	beq	1381c <__assert_fail@plt+0x2584>
   137e4:	mov	r3, r4
   137e8:	ldr	r7, [sp, #8]
   137ec:	ldr	r4, [sp, #20]
   137f0:	mov	r0, r2
   137f4:	mov	r1, r4
   137f8:	str	r5, [sp]
   137fc:	mov	r2, r8
   13800:	bl	13618 <__assert_fail@plt+0x2380>
   13804:	ldr	r2, [r7, #16]!
   13808:	clz	r3, r0
   1380c:	lsr	r3, r3, #5
   13810:	cmp	r2, #0
   13814:	bne	137f0 <__assert_fail@plt+0x2558>
   13818:	mov	r4, r3
   1381c:	cmp	r4, #0
   13820:	mov	r3, fp
   13824:	moveq	r3, #0
   13828:	cmp	r3, #0
   1382c:	beq	138a0 <__assert_fail@plt+0x2608>
   13830:	ldrb	r3, [r6]
   13834:	ldr	r2, [sp, #16]
   13838:	cmp	r3, #0
   1383c:	ldrb	r0, [r2]
   13840:	beq	138ac <__assert_fail@plt+0x2614>
   13844:	add	r4, r0, #1
   13848:	mov	r0, #1
   1384c:	strb	r4, [r2]
   13850:	add	sp, sp, #28
   13854:	ldrd	r4, [sp]
   13858:	ldrd	r6, [sp, #8]
   1385c:	ldrd	r8, [sp, #16]
   13860:	ldrd	sl, [sp, #24]
   13864:	add	sp, sp, #32
   13868:	pop	{pc}		; (ldr pc, [sp], #4)
   1386c:	mov	r0, r5
   13870:	bl	19b30 <argp_parse@@Base+0x2550>
   13874:	ldr	r3, [r5, #28]
   13878:	mov	r0, r3
   1387c:	b	13724 <__assert_fail@plt+0x248c>
   13880:	ldr	r3, [sp, #8]
   13884:	cmp	r3, #0
   13888:	beq	138a0 <__assert_fail@plt+0x2608>
   1388c:	ldr	r2, [r3]
   13890:	cmp	r2, #0
   13894:	movne	r6, r9
   13898:	movne	fp, r6
   1389c:	bne	137e4 <__assert_fail@plt+0x254c>
   138a0:	clz	r0, r4
   138a4:	lsr	r0, r0, #5
   138a8:	b	13850 <__assert_fail@plt+0x25b8>
   138ac:	cmp	r0, #0
   138b0:	movne	r0, r3
   138b4:	strbne	r3, [r2]
   138b8:	b	13850 <__assert_fail@plt+0x25b8>
   138bc:	mov	r1, #1
   138c0:	mov	r0, r5
   138c4:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   138c8:	cmp	r0, #0
   138cc:	beq	13774 <__assert_fail@plt+0x24dc>
   138d0:	ldr	r3, [r5, #28]
   138d4:	mov	r1, #10
   138d8:	add	r0, r3, #1
   138dc:	str	r0, [r5, #28]
   138e0:	strb	r1, [r3]
   138e4:	b	13774 <__assert_fail@plt+0x24dc>
   138e8:	mov	r1, #1
   138ec:	mov	r0, r5
   138f0:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   138f4:	cmp	r0, #0
   138f8:	beq	13774 <__assert_fail@plt+0x24dc>
   138fc:	ldr	r0, [r5, #28]
   13900:	b	13764 <__assert_fail@plt+0x24cc>
   13904:	mov	r7, r9
   13908:	b	136ec <__assert_fail@plt+0x2454>
   1390c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13910:	subs	r4, r1, #0
   13914:	strd	r6, [sp, #8]
   13918:	mov	r7, r0
   1391c:	mov	r6, r2
   13920:	strd	r8, [sp, #16]
   13924:	strd	sl, [sp, #24]
   13928:	str	lr, [sp, #32]
   1392c:	sub	sp, sp, #12
   13930:	beq	1396c <__assert_fail@plt+0x26d4>
   13934:	ldr	r3, [r4, #20]
   13938:	cmp	r3, #0
   1393c:	beq	1396c <__assert_fail@plt+0x26d4>
   13940:	mov	r0, r4
   13944:	ldr	r1, [r2, #16]
   13948:	bl	18498 <argp_parse@@Base+0xeb8>
   1394c:	mov	r2, r0
   13950:	mov	r1, r7
   13954:	ldr	r3, [r4, #20]
   13958:	mov	r0, #3
   1395c:	movt	r0, #512	; 0x200
   13960:	blx	r3
   13964:	mov	r9, r0
   13968:	b	13970 <__assert_fail@plt+0x26d8>
   1396c:	mov	r9, r7
   13970:	cmp	r9, #0
   13974:	beq	13990 <__assert_fail@plt+0x26f8>
   13978:	ldrb	r2, [r9]
   1397c:	ldr	r3, [r6, #8]
   13980:	cmp	r2, #0
   13984:	bne	139bc <__assert_fail@plt+0x2724>
   13988:	mov	r2, #1
   1398c:	str	r2, [r3, #4]
   13990:	cmp	r7, r9
   13994:	beq	13b08 <__assert_fail@plt+0x2870>
   13998:	mov	r0, r9
   1399c:	add	sp, sp, #12
   139a0:	ldrd	r4, [sp]
   139a4:	ldrd	r6, [sp, #8]
   139a8:	ldrd	r8, [sp, #16]
   139ac:	ldrd	sl, [sp, #24]
   139b0:	ldr	lr, [sp, #32]
   139b4:	add	sp, sp, #36	; 0x24
   139b8:	b	18618 <argp_parse@@Base+0x1038>
   139bc:	ldr	r3, [r3]
   139c0:	ldr	r4, [r6, #4]
   139c4:	cmp	r3, #0
   139c8:	ldr	r3, [r4, #28]
   139cc:	beq	13a0c <__assert_fail@plt+0x2774>
   139d0:	ldr	r2, [r4, #32]
   139d4:	cmp	r2, r3
   139d8:	bhi	139f4 <__assert_fail@plt+0x275c>
   139dc:	mov	r1, #1
   139e0:	mov	r0, r4
   139e4:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   139e8:	cmp	r0, #0
   139ec:	ldrne	r3, [r4, #28]
   139f0:	beq	13a04 <__assert_fail@plt+0x276c>
   139f4:	add	r1, r3, #1
   139f8:	mov	r2, #10
   139fc:	str	r1, [r4, #28]
   13a00:	strb	r2, [r3]
   13a04:	ldr	r4, [r6, #4]
   13a08:	ldr	r3, [r4, #28]
   13a0c:	movw	r8, #53844	; 0xd254
   13a10:	movt	r8, #2
   13a14:	ldr	r2, [r4, #16]
   13a18:	ldr	r1, [r4, #24]
   13a1c:	ldr	r5, [r8, #24]
   13a20:	sub	r3, r3, r1
   13a24:	cmp	r3, r2
   13a28:	bhi	13bec <__assert_fail@plt+0x2954>
   13a2c:	ldr	r3, [r4, #20]
   13a30:	cmp	r3, #0
   13a34:	subge	r5, r5, r3
   13a38:	cmp	r5, #0
   13a3c:	sub	r5, r5, #1
   13a40:	ble	13a88 <__assert_fail@plt+0x27f0>
   13a44:	mov	sl, #32
   13a48:	ldr	r3, [r4, #28]
   13a4c:	mov	r1, #1
   13a50:	mov	r0, r4
   13a54:	sub	r5, r5, #1
   13a58:	ldr	r2, [r4, #32]
   13a5c:	cmp	r3, r2
   13a60:	bcc	13a74 <__assert_fail@plt+0x27dc>
   13a64:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   13a68:	cmp	r0, #0
   13a6c:	beq	13a80 <__assert_fail@plt+0x27e8>
   13a70:	ldr	r3, [r4, #28]
   13a74:	add	r2, r3, #1
   13a78:	str	r2, [r4, #28]
   13a7c:	strb	sl, [r3]
   13a80:	cmn	r5, #1
   13a84:	bne	13a48 <__assert_fail@plt+0x27b0>
   13a88:	ldr	r4, [r6, #4]
   13a8c:	ldr	sl, [r8, #24]
   13a90:	ldr	r1, [r4, #16]
   13a94:	ldr	r3, [r4, #24]
   13a98:	ldr	r5, [r4, #28]
   13a9c:	sub	r3, r5, r3
   13aa0:	cmp	r3, r1
   13aa4:	movls	fp, r4
   13aa8:	strls	sl, [r4, #4]
   13aac:	bhi	13ba4 <__assert_fail@plt+0x290c>
   13ab0:	mov	r0, r9
   13ab4:	str	sl, [fp, #12]
   13ab8:	bl	11178 <strlen@plt>
   13abc:	subs	r8, r0, #0
   13ac0:	bne	13b54 <__assert_fail@plt+0x28bc>
   13ac4:	ldr	r2, [r4, #16]
   13ac8:	ldr	r3, [r4, #24]
   13acc:	sub	r3, r5, r3
   13ad0:	cmp	r3, r2
   13ad4:	movls	r8, r4
   13ad8:	bhi	13b40 <__assert_fail@plt+0x28a8>
   13adc:	ldr	r3, [r8, #32]
   13ae0:	mov	r2, #0
   13ae4:	str	r2, [r4, #4]
   13ae8:	cmp	r3, r5
   13aec:	bls	13b24 <__assert_fail@plt+0x288c>
   13af0:	add	r2, r5, #1
   13af4:	mov	r3, #10
   13af8:	str	r2, [r8, #28]
   13afc:	strb	r3, [r5]
   13b00:	ldr	r3, [r6, #8]
   13b04:	b	13988 <__assert_fail@plt+0x26f0>
   13b08:	add	sp, sp, #12
   13b0c:	ldrd	r4, [sp]
   13b10:	ldrd	r6, [sp, #8]
   13b14:	ldrd	r8, [sp, #16]
   13b18:	ldrd	sl, [sp, #24]
   13b1c:	add	sp, sp, #32
   13b20:	pop	{pc}		; (ldr pc, [sp], #4)
   13b24:	mov	r1, #1
   13b28:	mov	r0, r8
   13b2c:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   13b30:	cmp	r0, #0
   13b34:	ldrne	r5, [r8, #28]
   13b38:	bne	13af0 <__assert_fail@plt+0x2858>
   13b3c:	b	13b00 <__assert_fail@plt+0x2868>
   13b40:	mov	r0, r4
   13b44:	bl	19b30 <argp_parse@@Base+0x2550>
   13b48:	ldr	r8, [r6, #4]
   13b4c:	ldr	r5, [r8, #28]
   13b50:	b	13adc <__assert_fail@plt+0x2844>
   13b54:	ldr	r2, [r4, #32]
   13b58:	add	r3, r5, r8
   13b5c:	cmp	r2, r3
   13b60:	bcs	13b7c <__assert_fail@plt+0x28e4>
   13b64:	mov	r1, r8
   13b68:	mov	r0, r4
   13b6c:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   13b70:	cmp	r0, #0
   13b74:	beq	13b98 <__assert_fail@plt+0x2900>
   13b78:	ldr	r5, [r4, #28]
   13b7c:	mov	r2, r8
   13b80:	mov	r0, r5
   13b84:	mov	r1, r9
   13b88:	bl	11058 <memcpy@plt>
   13b8c:	ldr	r3, [r4, #28]
   13b90:	add	r8, r3, r8
   13b94:	str	r8, [r4, #28]
   13b98:	ldr	r4, [r6, #4]
   13b9c:	ldr	r5, [r4, #28]
   13ba0:	b	13ac4 <__assert_fail@plt+0x282c>
   13ba4:	mov	r0, r4
   13ba8:	str	sl, [sp, #4]
   13bac:	bl	19b30 <argp_parse@@Base+0x2550>
   13bb0:	ldr	fp, [r6, #4]
   13bb4:	ldr	r2, [sp, #4]
   13bb8:	ldr	sl, [r8, #24]
   13bbc:	ldr	r1, [fp, #16]
   13bc0:	ldr	r3, [fp, #24]
   13bc4:	ldr	r5, [fp, #28]
   13bc8:	str	r2, [r4, #4]
   13bcc:	sub	r3, r5, r3
   13bd0:	cmp	r3, r1
   13bd4:	bls	13bf8 <__assert_fail@plt+0x2960>
   13bd8:	mov	r0, fp
   13bdc:	bl	19b30 <argp_parse@@Base+0x2550>
   13be0:	ldr	r4, [r6, #4]
   13be4:	ldr	r5, [r4, #28]
   13be8:	b	13ab0 <__assert_fail@plt+0x2818>
   13bec:	mov	r0, r4
   13bf0:	bl	19b30 <argp_parse@@Base+0x2550>
   13bf4:	b	13a2c <__assert_fail@plt+0x2794>
   13bf8:	mov	r4, fp
   13bfc:	b	13ab0 <__assert_fail@plt+0x2818>
   13c00:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13c04:	strd	r6, [sp, #8]
   13c08:	strd	r8, [sp, #16]
   13c0c:	strd	sl, [sp, #24]
   13c10:	add	fp, sp, #32
   13c14:	str	lr, [sp, #32]
   13c18:	sub	sp, sp, #36	; 0x24
   13c1c:	ldr	r3, [r0, #4]
   13c20:	cmp	r3, #0
   13c24:	str	r3, [fp, #-40]	; 0xffffffd8
   13c28:	beq	13e44 <__assert_fail@plt+0x2bac>
   13c2c:	mov	r4, r0
   13c30:	ldr	r0, [r0, #8]
   13c34:	str	r4, [fp, #-60]	; 0xffffffc4
   13c38:	str	r1, [fp, #-48]	; 0xffffffd0
   13c3c:	str	r3, [fp, #-44]	; 0xffffffd4
   13c40:	bl	11178 <strlen@plt>
   13c44:	add	r3, r0, #8
   13c48:	ldr	r2, [r4]
   13c4c:	bic	r3, r3, #7
   13c50:	sub	sp, sp, r3
   13c54:	mov	r3, sp
   13c58:	str	r3, [fp, #-56]	; 0xffffffc8
   13c5c:	str	r3, [fp, #-52]	; 0xffffffcc
   13c60:	add	r3, r2, #28
   13c64:	mov	r9, r3
   13c68:	str	r3, [fp, #-64]	; 0xffffffc0
   13c6c:	ldr	r8, [r9, #-28]	; 0xffffffe4
   13c70:	ldr	r5, [r9, #-24]	; 0xffffffe8
   13c74:	ldr	sl, [r9, #-20]	; 0xffffffec
   13c78:	cmp	r5, #0
   13c7c:	beq	13cd0 <__assert_fail@plt+0x2a38>
   13c80:	mov	r4, r8
   13c84:	ldr	r6, [r4, #12]
   13c88:	tst	r6, #8
   13c8c:	bne	13cc4 <__assert_fail@plt+0x2a2c>
   13c90:	ldr	r7, [r4, #4]
   13c94:	sub	r3, r7, #1
   13c98:	cmp	r3, #254	; 0xfe
   13c9c:	bhi	13cc4 <__assert_fail@plt+0x2a2c>
   13ca0:	bl	11154 <__ctype_b_loc@plt>
   13ca4:	ldr	r2, [r0]
   13ca8:	lsl	r3, r7, #1
   13cac:	ldrh	r3, [r2, r3]
   13cb0:	tst	r3, #16384	; 0x4000
   13cb4:	beq	13cc4 <__assert_fail@plt+0x2a2c>
   13cb8:	ldrb	r3, [sl]
   13cbc:	cmp	r7, r3
   13cc0:	beq	13e60 <__assert_fail@plt+0x2bc8>
   13cc4:	subs	r5, r5, #1
   13cc8:	add	r4, r4, #24
   13ccc:	bne	13c84 <__assert_fail@plt+0x29ec>
   13cd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13cd4:	add	r9, r9, #28
   13cd8:	subs	r3, r3, #1
   13cdc:	str	r3, [fp, #-44]	; 0xffffffd4
   13ce0:	bne	13c6c <__assert_fail@plt+0x29d4>
   13ce4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13ce8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13cec:	cmp	r3, r2
   13cf0:	bcc	14030 <__assert_fail@plt+0x2d98>
   13cf4:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13cf8:	movw	r3, #48576	; 0xbdc0
   13cfc:	movt	r3, #1
   13d00:	str	r3, [fp, #-44]	; 0xffffffd4
   13d04:	movw	r3, #48564	; 0xbdb4
   13d08:	movt	r3, #1
   13d0c:	str	r3, [fp, #-52]	; 0xffffffcc
   13d10:	ldr	r8, [r6, #-28]	; 0xffffffe4
   13d14:	ldr	r5, [r6, #-24]	; 0xffffffe8
   13d18:	ldr	r7, [r6, #-20]	; 0xffffffec
   13d1c:	cmp	r5, #0
   13d20:	movne	r4, r8
   13d24:	beq	13d74 <__assert_fail@plt+0x2adc>
   13d28:	ldr	r9, [r4, #12]
   13d2c:	tst	r9, #8
   13d30:	bne	13d68 <__assert_fail@plt+0x2ad0>
   13d34:	ldr	sl, [r4, #4]
   13d38:	sub	r3, sl, #1
   13d3c:	cmp	r3, #254	; 0xfe
   13d40:	bhi	13d68 <__assert_fail@plt+0x2ad0>
   13d44:	bl	11154 <__ctype_b_loc@plt>
   13d48:	ldr	r2, [r0]
   13d4c:	lsl	r3, sl, #1
   13d50:	ldrh	r3, [r2, r3]
   13d54:	tst	r3, #16384	; 0x4000
   13d58:	beq	13d68 <__assert_fail@plt+0x2ad0>
   13d5c:	ldrb	r3, [r7]
   13d60:	cmp	sl, r3
   13d64:	beq	13ea8 <__assert_fail@plt+0x2c10>
   13d68:	subs	r5, r5, #1
   13d6c:	add	r4, r4, #24
   13d70:	bne	13d28 <__assert_fail@plt+0x2a90>
   13d74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13d78:	add	r6, r6, #28
   13d7c:	subs	r3, r3, #1
   13d80:	str	r3, [fp, #-40]	; 0xffffffd8
   13d84:	bne	13d10 <__assert_fail@plt+0x2a78>
   13d88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d8c:	ldm	r3, {r7, r8}
   13d90:	cmp	r8, #0
   13d94:	beq	13e44 <__assert_fail@plt+0x2bac>
   13d98:	movw	sl, #48604	; 0xbddc
   13d9c:	movt	sl, #1
   13da0:	movw	r9, #48588	; 0xbdcc
   13da4:	movt	r9, #1
   13da8:	str	sl, [fp, #-40]	; 0xffffffd8
   13dac:	movw	r3, #48616	; 0xbde8
   13db0:	movt	r3, #1
   13db4:	ldr	sl, [fp, #-48]	; 0xffffffd0
   13db8:	add	r7, r7, #28
   13dbc:	str	r3, [fp, #-44]	; 0xffffffd4
   13dc0:	ldr	r6, [r7, #-28]	; 0xffffffe4
   13dc4:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13dc8:	cmp	r5, #0
   13dcc:	movne	r4, r6
   13dd0:	beq	13e38 <__assert_fail@plt+0x2ba0>
   13dd4:	ldr	r2, [r4]
   13dd8:	cmp	r2, #0
   13ddc:	beq	13e2c <__assert_fail@plt+0x2b94>
   13de0:	ldr	r1, [r4, #12]
   13de4:	tst	r1, #4
   13de8:	moveq	r6, r4
   13dec:	tst	r1, #2
   13df0:	bne	13e2c <__assert_fail@plt+0x2b94>
   13df4:	ldr	r3, [r4, #8]
   13df8:	ldr	r0, [r6, #12]
   13dfc:	cmp	r3, #0
   13e00:	orr	r1, r1, r0
   13e04:	and	r0, r1, #16
   13e08:	beq	13e84 <__assert_fail@plt+0x2bec>
   13e0c:	cmp	r0, #0
   13e10:	bne	13e2c <__assert_fail@plt+0x2b94>
   13e14:	tst	r1, #1
   13e18:	movne	r1, r9
   13e1c:	movne	r0, sl
   13e20:	ldreq	r1, [fp, #-40]	; 0xffffffd8
   13e24:	moveq	r0, sl
   13e28:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   13e2c:	subs	r5, r5, #1
   13e30:	add	r4, r4, #24
   13e34:	bne	13dd4 <__assert_fail@plt+0x2b3c>
   13e38:	subs	r8, r8, #1
   13e3c:	add	r7, r7, #28
   13e40:	bne	13dc0 <__assert_fail@plt+0x2b28>
   13e44:	sub	sp, fp, #32
   13e48:	ldrd	r4, [sp]
   13e4c:	ldrd	r6, [sp, #8]
   13e50:	ldrd	r8, [sp, #16]
   13e54:	ldrd	sl, [sp, #24]
   13e58:	add	sp, sp, #32
   13e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13e60:	tst	r6, #4
   13e64:	moveq	r8, r4
   13e68:	tst	r6, #2
   13e6c:	bne	13e7c <__assert_fail@plt+0x2be4>
   13e70:	ldr	r3, [r4, #8]
   13e74:	cmp	r3, #0
   13e78:	beq	13ef4 <__assert_fail@plt+0x2c5c>
   13e7c:	add	sl, sl, #1
   13e80:	b	13cc4 <__assert_fail@plt+0x2a2c>
   13e84:	cmp	r0, #0
   13e88:	bne	13e2c <__assert_fail@plt+0x2b94>
   13e8c:	ldr	r3, [r6, #8]
   13e90:	cmp	r3, #0
   13e94:	bne	13e14 <__assert_fail@plt+0x2b7c>
   13e98:	mov	r0, sl
   13e9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13ea0:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   13ea4:	b	13e2c <__assert_fail@plt+0x2b94>
   13ea8:	tst	r9, #4
   13eac:	moveq	r8, r4
   13eb0:	tst	r9, #2
   13eb4:	bne	13eec <__assert_fail@plt+0x2c54>
   13eb8:	ldr	r3, [r4, #8]
   13ebc:	cmp	r3, #0
   13ec0:	beq	13f20 <__assert_fail@plt+0x2c88>
   13ec4:	ldr	r2, [r8, #12]
   13ec8:	orr	r9, r9, r2
   13ecc:	tst	r9, #16
   13ed0:	bne	13eec <__assert_fail@plt+0x2c54>
   13ed4:	tst	r9, #1
   13ed8:	beq	13f30 <__assert_fail@plt+0x2c98>
   13edc:	mov	r2, sl
   13ee0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13ee4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13ee8:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   13eec:	add	r7, r7, #1
   13ef0:	b	13d68 <__assert_fail@plt+0x2ad0>
   13ef4:	ldr	r3, [r8, #8]
   13ef8:	cmp	r3, #0
   13efc:	bne	13e7c <__assert_fail@plt+0x2be4>
   13f00:	ldr	r3, [r8, #12]
   13f04:	orr	r6, r6, r3
   13f08:	tst	r6, #16
   13f0c:	bne	13e7c <__assert_fail@plt+0x2be4>
   13f10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13f14:	strb	r7, [r3], #1
   13f18:	str	r3, [fp, #-52]	; 0xffffffcc
   13f1c:	b	13e7c <__assert_fail@plt+0x2be4>
   13f20:	ldr	r3, [r8, #8]
   13f24:	cmp	r3, #0
   13f28:	beq	13eec <__assert_fail@plt+0x2c54>
   13f2c:	b	13ec4 <__assert_fail@plt+0x2c2c>
   13f30:	mov	r0, r3
   13f34:	str	r3, [fp, #-56]	; 0xffffffc8
   13f38:	bl	11178 <strlen@plt>
   13f3c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13f40:	mov	r9, r0
   13f44:	ldr	r0, [r3, #16]
   13f48:	ldr	r2, [r3, #24]
   13f4c:	ldr	r1, [r3, #28]
   13f50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13f54:	sub	r2, r1, r2
   13f58:	cmp	r2, r0
   13f5c:	bhi	14018 <__assert_fail@plt+0x2d80>
   13f60:	ldr	lr, [fp, #-48]	; 0xffffffd0
   13f64:	ldr	r0, [lr, #8]
   13f68:	ldr	r2, [lr, #20]
   13f6c:	ldr	ip, [lr, #32]
   13f70:	bic	r2, r2, r2, asr #31
   13f74:	add	r2, r2, #6
   13f78:	add	r2, r2, r9
   13f7c:	cmp	r2, r0
   13f80:	bcs	13fd4 <__assert_fail@plt+0x2d3c>
   13f84:	cmp	r1, ip
   13f88:	bcc	13fb0 <__assert_fail@plt+0x2d18>
   13f8c:	mov	r1, #1
   13f90:	mov	r0, lr
   13f94:	str	r3, [fp, #-56]	; 0xffffffc8
   13f98:	mov	r9, lr
   13f9c:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   13fa0:	cmp	r0, #0
   13fa4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13fa8:	beq	13fc4 <__assert_fail@plt+0x2d2c>
   13fac:	ldr	r1, [r9, #28]
   13fb0:	add	r2, r1, #1
   13fb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13fb8:	str	r2, [r0, #28]
   13fbc:	mov	r2, #32
   13fc0:	strb	r2, [r1]
   13fc4:	ldrd	r0, [fp, #-48]	; 0xffffffd0
   13fc8:	ldr	r2, [r4, #4]
   13fcc:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   13fd0:	b	13eec <__assert_fail@plt+0x2c54>
   13fd4:	cmp	r1, ip
   13fd8:	bcc	14000 <__assert_fail@plt+0x2d68>
   13fdc:	mov	r1, #1
   13fe0:	mov	r0, lr
   13fe4:	str	r3, [fp, #-56]	; 0xffffffc8
   13fe8:	mov	r9, lr
   13fec:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   13ff0:	cmp	r0, #0
   13ff4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13ff8:	beq	13fc4 <__assert_fail@plt+0x2d2c>
   13ffc:	ldr	r1, [r9, #28]
   14000:	add	r0, r1, #1
   14004:	mov	r2, #10
   14008:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1400c:	str	r0, [ip, #28]
   14010:	strb	r2, [r1]
   14014:	b	13fc4 <__assert_fail@plt+0x2d2c>
   14018:	ldr	sl, [fp, #-48]	; 0xffffffd0
   1401c:	mov	r0, sl
   14020:	bl	19b30 <argp_parse@@Base+0x2550>
   14024:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14028:	ldr	r1, [sl, #28]
   1402c:	b	13f60 <__assert_fail@plt+0x2cc8>
   14030:	mov	r2, r3
   14034:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14038:	movw	r1, #48556	; 0xbdac
   1403c:	movt	r1, #1
   14040:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14044:	strb	r0, [r3]
   14048:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1404c:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   14050:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14054:	ldr	r3, [r2, #4]
   14058:	cmp	r3, #0
   1405c:	str	r3, [fp, #-40]	; 0xffffffd8
   14060:	beq	13e44 <__assert_fail@plt+0x2bac>
   14064:	ldr	r2, [r2]
   14068:	add	r3, r2, #28
   1406c:	str	r3, [fp, #-64]	; 0xffffffc0
   14070:	b	13cf4 <__assert_fail@plt+0x2a5c>
   14074:	ldr	r3, [r1, #12]
   14078:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1407c:	mov	r5, r0
   14080:	ldr	r4, [r1, #4]
   14084:	strd	r6, [sp, #8]
   14088:	mov	r6, r1
   1408c:	str	r8, [sp, #16]
   14090:	cmp	r3, #0
   14094:	str	lr, [sp, #20]
   14098:	beq	141c4 <__assert_fail@plt+0x2f2c>
   1409c:	ldr	r2, [r1]
   140a0:	ldr	r3, [r1, #8]
   140a4:	ldr	r7, [r2, #16]
   140a8:	ldr	r8, [r3]
   140ac:	ldr	r3, [r3, #4]
   140b0:	cmp	r3, #0
   140b4:	cmpne	r8, #0
   140b8:	bne	1416c <__assert_fail@plt+0x2ed4>
   140bc:	cmp	r7, #0
   140c0:	beq	140dc <__assert_fail@plt+0x2e44>
   140c4:	ldr	r0, [r7]
   140c8:	cmp	r0, #0
   140cc:	beq	140dc <__assert_fail@plt+0x2e44>
   140d0:	ldrb	r3, [r0]
   140d4:	cmp	r3, #0
   140d8:	bne	14234 <__assert_fail@plt+0x2f9c>
   140dc:	ldr	r2, [r4, #16]
   140e0:	ldr	r1, [r4, #24]
   140e4:	ldr	r3, [r4, #28]
   140e8:	sub	r3, r3, r1
   140ec:	mov	r1, #0
   140f0:	cmp	r3, r2
   140f4:	str	r1, [r6, #12]
   140f8:	bhi	14228 <__assert_fail@plt+0x2f90>
   140fc:	ldr	r3, [r4, #20]
   14100:	cmp	r3, #0
   14104:	subge	r5, r5, r3
   14108:	cmp	r5, #0
   1410c:	sub	r5, r5, #1
   14110:	ble	14158 <__assert_fail@plt+0x2ec0>
   14114:	mov	r6, #32
   14118:	ldr	r3, [r4, #28]
   1411c:	mov	r1, #1
   14120:	mov	r0, r4
   14124:	sub	r5, r5, #1
   14128:	ldr	r2, [r4, #32]
   1412c:	cmp	r3, r2
   14130:	bcc	14144 <__assert_fail@plt+0x2eac>
   14134:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14138:	cmp	r0, #0
   1413c:	beq	14150 <__assert_fail@plt+0x2eb8>
   14140:	ldr	r3, [r4, #28]
   14144:	add	r2, r3, #1
   14148:	str	r2, [r4, #28]
   1414c:	strb	r6, [r3]
   14150:	cmn	r5, #1
   14154:	bne	14118 <__assert_fail@plt+0x2e80>
   14158:	ldrd	r4, [sp]
   1415c:	ldrd	r6, [sp, #8]
   14160:	ldr	r8, [sp, #16]
   14164:	add	sp, sp, #20
   14168:	pop	{pc}		; (ldr pc, [sp], #4)
   1416c:	ldr	r2, [r2, #12]
   14170:	ldr	r3, [r8, #12]
   14174:	cmp	r2, r3
   14178:	beq	140bc <__assert_fail@plt+0x2e24>
   1417c:	ldr	r3, [r4, #28]
   14180:	ldr	r2, [r4, #32]
   14184:	cmp	r3, r2
   14188:	bcc	141a4 <__assert_fail@plt+0x2f0c>
   1418c:	mov	r1, #1
   14190:	mov	r0, r4
   14194:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14198:	cmp	r0, #0
   1419c:	ldrne	r3, [r4, #28]
   141a0:	beq	141b4 <__assert_fail@plt+0x2f1c>
   141a4:	add	r1, r3, #1
   141a8:	mov	r2, #10
   141ac:	str	r1, [r4, #28]
   141b0:	strb	r2, [r3]
   141b4:	cmp	r7, #0
   141b8:	ldr	r4, [r6, #4]
   141bc:	bne	140c4 <__assert_fail@plt+0x2e2c>
   141c0:	b	140dc <__assert_fail@plt+0x2e44>
   141c4:	ldr	r3, [r4, #28]
   141c8:	ldr	r1, [r4, #32]
   141cc:	add	r2, r3, #2
   141d0:	cmp	r1, r2
   141d4:	bcs	141f0 <__assert_fail@plt+0x2f58>
   141d8:	mov	r1, #2
   141dc:	mov	r0, r4
   141e0:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   141e4:	cmp	r0, #0
   141e8:	beq	1420c <__assert_fail@plt+0x2f74>
   141ec:	ldr	r3, [r4, #28]
   141f0:	movw	r2, #48624	; 0xbdf0
   141f4:	movt	r2, #1
   141f8:	ldrh	r2, [r2]
   141fc:	strh	r2, [r3]
   14200:	ldr	r3, [r4, #28]
   14204:	add	r3, r3, #2
   14208:	str	r3, [r4, #28]
   1420c:	ldr	r4, [r6, #4]
   14210:	ldr	r2, [r4, #16]
   14214:	ldr	r1, [r4, #24]
   14218:	ldr	r3, [r4, #28]
   1421c:	sub	r3, r3, r1
   14220:	cmp	r3, r2
   14224:	bls	140fc <__assert_fail@plt+0x2e64>
   14228:	mov	r0, r4
   1422c:	bl	19b30 <argp_parse@@Base+0x2550>
   14230:	b	140fc <__assert_fail@plt+0x2e64>
   14234:	cmp	r8, #0
   14238:	beq	14268 <__assert_fail@plt+0x2fd0>
   1423c:	ldr	r3, [r8, #16]
   14240:	cmp	r3, r7
   14244:	beq	140dc <__assert_fail@plt+0x2e44>
   14248:	cmp	r3, #0
   1424c:	beq	14268 <__assert_fail@plt+0x2fd0>
   14250:	ldr	r3, [r3, #12]
   14254:	cmp	r3, #0
   14258:	cmpne	r7, r3
   1425c:	bne	14250 <__assert_fail@plt+0x2fb8>
   14260:	cmp	r7, r3
   14264:	beq	140dc <__assert_fail@plt+0x2e44>
   14268:	mov	r2, r6
   1426c:	ldr	r1, [r7, #16]
   14270:	ldr	r7, [r4, #12]
   14274:	bl	1390c <__assert_fail@plt+0x2674>
   14278:	ldr	r8, [r6, #4]
   1427c:	ldr	r2, [r8, #16]
   14280:	ldr	r1, [r8, #24]
   14284:	ldr	r3, [r8, #28]
   14288:	sub	r3, r3, r1
   1428c:	cmp	r3, r2
   14290:	movls	r4, r8
   14294:	bhi	142a0 <__assert_fail@plt+0x3008>
   14298:	str	r7, [r8, #12]
   1429c:	b	140ec <__assert_fail@plt+0x2e54>
   142a0:	mov	r0, r8
   142a4:	bl	19b30 <argp_parse@@Base+0x2550>
   142a8:	ldr	r4, [r6, #4]
   142ac:	ldr	r2, [r4, #16]
   142b0:	ldr	r1, [r4, #24]
   142b4:	ldr	r3, [r4, #28]
   142b8:	sub	r3, r3, r1
   142bc:	b	14298 <__assert_fail@plt+0x3000>
   142c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   142c4:	strd	r6, [sp, #8]
   142c8:	mov	r7, r0
   142cc:	ldr	r6, [r0, #12]
   142d0:	strd	r8, [sp, #16]
   142d4:	mov	r8, r2
   142d8:	strd	sl, [sp, #24]
   142dc:	mov	sl, r3
   142e0:	mov	fp, r1
   142e4:	ldr	r3, [r0, #16]
   142e8:	str	lr, [sp, #32]
   142ec:	sub	sp, sp, #28
   142f0:	cmp	r6, #0
   142f4:	ldr	r5, [sp, #68]	; 0x44
   142f8:	str	r3, [sp, #8]
   142fc:	ldr	r3, [r0, #20]
   14300:	beq	14670 <__assert_fail@plt+0x33d8>
   14304:	mov	r1, #11
   14308:	mov	r0, r6
   1430c:	str	r3, [sp, #12]
   14310:	bl	11184 <strchr@plt>
   14314:	cmp	r8, #0
   14318:	mov	r9, r0
   1431c:	ldr	r3, [sp, #12]
   14320:	bne	1456c <__assert_fail@plt+0x32d4>
   14324:	cmp	r0, #0
   14328:	beq	1486c <__assert_fail@plt+0x35d4>
   1432c:	subs	r1, r0, r6
   14330:	movne	r4, #1
   14334:	moveq	r4, #0
   14338:	cmp	r3, #0
   1433c:	str	r1, [sp, #20]
   14340:	beq	14810 <__assert_fail@plt+0x3578>
   14344:	cmp	r1, #0
   14348:	beq	14860 <__assert_fail@plt+0x35c8>
   1434c:	mov	r0, r6
   14350:	mov	r4, #1
   14354:	bl	1104c <strndup@plt>
   14358:	adds	r3, r0, #0
   1435c:	mov	r6, r0
   14360:	movne	r3, #1
   14364:	str	r3, [sp, #16]
   14368:	mov	r1, fp
   1436c:	mov	r0, r7
   14370:	bl	18498 <argp_parse@@Base+0xeb8>
   14374:	mov	r2, r0
   14378:	mov	r1, r6
   1437c:	ldr	r3, [r7, #20]
   14380:	mov	r0, #1
   14384:	movt	r0, #512	; 0x200
   14388:	str	r2, [sp, #12]
   1438c:	blx	r3
   14390:	subs	r9, r0, #0
   14394:	moveq	r4, r9
   14398:	beq	14428 <__assert_fail@plt+0x3190>
   1439c:	cmp	r6, r9
   143a0:	movne	r4, #0
   143a4:	andeq	r4, r4, #1
   143a8:	cmp	sl, #0
   143ac:	ldr	r2, [r5, #28]
   143b0:	bne	146b8 <__assert_fail@plt+0x3420>
   143b4:	cmp	r4, #0
   143b8:	beq	14610 <__assert_fail@plt+0x3378>
   143bc:	ldr	r3, [sp, #20]
   143c0:	ldr	r0, [r5, #32]
   143c4:	add	r1, r2, r3
   143c8:	cmp	r0, r1
   143cc:	bcs	145c8 <__assert_fail@plt+0x3330>
   143d0:	mov	r1, r3
   143d4:	mov	r0, r5
   143d8:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   143dc:	cmp	r0, #0
   143e0:	ldr	r2, [r5, #28]
   143e4:	bne	145c8 <__assert_fail@plt+0x3330>
   143e8:	ldr	r0, [r5, #16]
   143ec:	ldr	r1, [r5, #24]
   143f0:	sub	r2, r2, r1
   143f4:	cmp	r2, r0
   143f8:	bhi	14700 <__assert_fail@plt+0x3468>
   143fc:	ldr	r1, [r5, #4]
   14400:	ldr	r2, [r5, #20]
   14404:	bic	r2, r2, r2, asr #31
   14408:	cmp	r1, r2
   1440c:	bcc	146dc <__assert_fail@plt+0x3444>
   14410:	cmp	r9, r6
   14414:	moveq	r4, #1
   14418:	beq	14428 <__assert_fail@plt+0x3190>
   1441c:	mov	r0, r9
   14420:	mov	r4, #1
   14424:	bl	18618 <argp_parse@@Base+0x1038>
   14428:	ldr	r3, [sp, #16]
   1442c:	cmp	r3, #0
   14430:	beq	14448 <__assert_fail@plt+0x31b0>
   14434:	ldr	r3, [r7, #20]
   14438:	cmp	r3, #0
   1443c:	beq	144c8 <__assert_fail@plt+0x3230>
   14440:	mov	r0, r6
   14444:	bl	18618 <argp_parse@@Base+0x1038>
   14448:	cmp	r8, #0
   1444c:	beq	144c8 <__assert_fail@plt+0x3230>
   14450:	ldr	r3, [r7, #20]
   14454:	cmp	r3, #0
   14458:	beq	144c8 <__assert_fail@plt+0x3230>
   1445c:	mov	r0, #4
   14460:	movt	r0, #512	; 0x200
   14464:	ldr	r2, [sp, #12]
   14468:	mov	r1, #0
   1446c:	blx	r3
   14470:	subs	r6, r0, #0
   14474:	beq	144c8 <__assert_fail@plt+0x3230>
   14478:	orrs	r3, sl, r4
   1447c:	bne	1479c <__assert_fail@plt+0x3504>
   14480:	mov	r0, r6
   14484:	bl	11178 <strlen@plt>
   14488:	subs	r4, r0, #0
   1448c:	bne	14754 <__assert_fail@plt+0x34bc>
   14490:	mov	r0, r6
   14494:	bl	18618 <argp_parse@@Base+0x1038>
   14498:	ldr	r2, [r5, #16]
   1449c:	ldr	r1, [r5, #24]
   144a0:	ldr	r3, [r5, #28]
   144a4:	sub	r3, r3, r1
   144a8:	cmp	r3, r2
   144ac:	bhi	147e8 <__assert_fail@plt+0x3550>
   144b0:	ldr	r2, [r5, #4]
   144b4:	ldr	r3, [r5, #20]
   144b8:	bic	r3, r3, r3, asr #31
   144bc:	cmp	r2, r3
   144c0:	bcc	147c0 <__assert_fail@plt+0x3528>
   144c4:	mov	r4, #1
   144c8:	ldr	r7, [sp, #8]
   144cc:	cmp	r7, #0
   144d0:	beq	1454c <__assert_fail@plt+0x32b4>
   144d4:	ldr	r3, [r7]
   144d8:	cmp	r3, #0
   144dc:	beq	1454c <__assert_fail@plt+0x32b4>
   144e0:	ldr	r2, [sp, #64]	; 0x40
   144e4:	eor	r6, r2, #1
   144e8:	eor	r2, r4, #1
   144ec:	orr	r2, r2, r6
   144f0:	and	r6, r6, #1
   144f4:	tst	r2, #1
   144f8:	beq	14820 <__assert_fail@plt+0x3588>
   144fc:	ldr	r9, [sp, #64]	; 0x40
   14500:	orrs	r2, r4, sl
   14504:	mov	r0, r3
   14508:	str	r9, [sp]
   1450c:	movne	r3, #1
   14510:	moveq	r3, #0
   14514:	str	r5, [sp, #4]
   14518:	mov	r2, r8
   1451c:	mov	r1, fp
   14520:	bl	142c0 <__assert_fail@plt+0x3028>
   14524:	ldr	r3, [r7, #16]
   14528:	orr	r4, r4, r0
   1452c:	add	r7, r7, #16
   14530:	cmp	r3, #0
   14534:	beq	1454c <__assert_fail@plt+0x32b4>
   14538:	cmp	r4, #0
   1453c:	movne	r2, r6
   14540:	moveq	r2, #1
   14544:	cmp	r2, #0
   14548:	bne	14500 <__assert_fail@plt+0x3268>
   1454c:	mov	r0, r4
   14550:	add	sp, sp, #28
   14554:	ldrd	r4, [sp]
   14558:	ldrd	r6, [sp, #8]
   1455c:	ldrd	r8, [sp, #16]
   14560:	ldrd	sl, [sp, #24]
   14564:	add	sp, sp, #32
   14568:	pop	{pc}		; (ldr pc, [sp], #4)
   1456c:	cmp	r0, #0
   14570:	beq	147f4 <__assert_fail@plt+0x355c>
   14574:	cmp	r3, #0
   14578:	add	r6, r0, #1
   1457c:	movne	r1, fp
   14580:	movne	r0, r7
   14584:	beq	145ec <__assert_fail@plt+0x3354>
   14588:	bl	18498 <argp_parse@@Base+0xeb8>
   1458c:	ldr	r3, [r7, #20]
   14590:	str	r0, [sp, #12]
   14594:	mov	r0, #2
   14598:	movt	r0, #512	; 0x200
   1459c:	mov	r1, r6
   145a0:	ldr	r2, [sp, #12]
   145a4:	blx	r3
   145a8:	subs	r9, r0, #0
   145ac:	moveq	r4, r9
   145b0:	beq	14448 <__assert_fail@plt+0x31b0>
   145b4:	mov	r3, #0
   145b8:	mov	r4, r3
   145bc:	str	r3, [sp, #16]
   145c0:	str	r3, [sp, #20]
   145c4:	b	1439c <__assert_fail@plt+0x3104>
   145c8:	ldr	r4, [sp, #20]
   145cc:	mov	r0, r2
   145d0:	mov	r1, r6
   145d4:	mov	r2, r4
   145d8:	bl	11058 <memcpy@plt>
   145dc:	ldr	r2, [r5, #28]
   145e0:	add	r2, r2, r4
   145e4:	str	r2, [r5, #28]
   145e8:	b	143e8 <__assert_fail@plt+0x3150>
   145ec:	cmp	r6, #0
   145f0:	moveq	r4, r6
   145f4:	beq	144c8 <__assert_fail@plt+0x3230>
   145f8:	cmp	sl, #0
   145fc:	ldr	r2, [r5, #28]
   14600:	bne	146a0 <__assert_fail@plt+0x3408>
   14604:	mov	r9, r6
   14608:	str	sl, [sp, #12]
   1460c:	str	sl, [sp, #16]
   14610:	mov	r0, r9
   14614:	str	r2, [sp, #20]
   14618:	bl	11178 <strlen@plt>
   1461c:	subs	r4, r0, #0
   14620:	ldr	r2, [sp, #20]
   14624:	beq	143e8 <__assert_fail@plt+0x3150>
   14628:	ldr	r0, [r5, #32]
   1462c:	add	r1, r2, r4
   14630:	cmp	r0, r1
   14634:	bcs	14650 <__assert_fail@plt+0x33b8>
   14638:	mov	r1, r4
   1463c:	mov	r0, r5
   14640:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14644:	cmp	r0, #0
   14648:	ldr	r2, [r5, #28]
   1464c:	beq	143e8 <__assert_fail@plt+0x3150>
   14650:	mov	r0, r2
   14654:	mov	r1, r9
   14658:	mov	r2, r4
   1465c:	bl	11058 <memcpy@plt>
   14660:	ldr	r2, [r5, #28]
   14664:	add	r2, r2, r4
   14668:	str	r2, [r5, #28]
   1466c:	b	143e8 <__assert_fail@plt+0x3150>
   14670:	cmp	r3, #0
   14674:	beq	14808 <__assert_fail@plt+0x3570>
   14678:	bl	18498 <argp_parse@@Base+0xeb8>
   1467c:	mov	r2, #1
   14680:	movt	r2, #512	; 0x200
   14684:	str	r0, [sp, #12]
   14688:	cmp	r8, #0
   1468c:	mov	r0, #2
   14690:	movt	r0, #512	; 0x200
   14694:	moveq	r0, r2
   14698:	ldr	r3, [r7, #20]
   1469c:	b	1459c <__assert_fail@plt+0x3304>
   146a0:	mov	r3, #0
   146a4:	mov	r9, r6
   146a8:	mov	r4, r3
   146ac:	str	r3, [sp, #12]
   146b0:	str	r3, [sp, #16]
   146b4:	str	r3, [sp, #20]
   146b8:	ldr	r1, [r5, #32]
   146bc:	cmp	r1, r2
   146c0:	bls	1470c <__assert_fail@plt+0x3474>
   146c4:	add	r0, r2, #1
   146c8:	mov	r1, #10
   146cc:	str	r0, [r5, #28]
   146d0:	strb	r1, [r2]
   146d4:	ldr	r2, [r5, #28]
   146d8:	b	143b4 <__assert_fail@plt+0x311c>
   146dc:	ldr	r2, [r5, #28]
   146e0:	ldr	r1, [r5, #32]
   146e4:	cmp	r2, r1
   146e8:	bcs	14728 <__assert_fail@plt+0x3490>
   146ec:	add	r0, r2, #1
   146f0:	mov	r1, #10
   146f4:	str	r0, [r5, #28]
   146f8:	strb	r1, [r2]
   146fc:	b	14410 <__assert_fail@plt+0x3178>
   14700:	mov	r0, r5
   14704:	bl	19b30 <argp_parse@@Base+0x2550>
   14708:	b	143fc <__assert_fail@plt+0x3164>
   1470c:	mov	r1, #1
   14710:	mov	r0, r5
   14714:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14718:	cmp	r0, #0
   1471c:	ldr	r2, [r5, #28]
   14720:	bne	146c4 <__assert_fail@plt+0x342c>
   14724:	b	143b4 <__assert_fail@plt+0x311c>
   14728:	mov	r1, #1
   1472c:	mov	r0, r5
   14730:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14734:	cmp	r0, #0
   14738:	beq	14410 <__assert_fail@plt+0x3178>
   1473c:	ldr	r2, [r5, #28]
   14740:	mov	r1, #10
   14744:	add	r0, r2, #1
   14748:	str	r0, [r5, #28]
   1474c:	strb	r1, [r2]
   14750:	b	14410 <__assert_fail@plt+0x3178>
   14754:	ldr	r0, [r5, #28]
   14758:	ldr	r2, [r5, #32]
   1475c:	add	r3, r0, r4
   14760:	cmp	r2, r3
   14764:	bcs	14780 <__assert_fail@plt+0x34e8>
   14768:	mov	r1, r4
   1476c:	mov	r0, r5
   14770:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14774:	cmp	r0, #0
   14778:	beq	14490 <__assert_fail@plt+0x31f8>
   1477c:	ldr	r0, [r5, #28]
   14780:	mov	r2, r4
   14784:	mov	r1, r6
   14788:	bl	11058 <memcpy@plt>
   1478c:	ldr	r3, [r5, #28]
   14790:	add	r4, r3, r4
   14794:	str	r4, [r5, #28]
   14798:	b	14490 <__assert_fail@plt+0x31f8>
   1479c:	ldr	r3, [r5, #28]
   147a0:	ldr	r2, [r5, #32]
   147a4:	cmp	r3, r2
   147a8:	bcs	14844 <__assert_fail@plt+0x35ac>
   147ac:	add	r1, r3, #1
   147b0:	mov	r2, #10
   147b4:	str	r1, [r5, #28]
   147b8:	strb	r2, [r3]
   147bc:	b	14480 <__assert_fail@plt+0x31e8>
   147c0:	ldr	r3, [r5, #28]
   147c4:	ldr	r2, [r5, #32]
   147c8:	cmp	r3, r2
   147cc:	bcs	14828 <__assert_fail@plt+0x3590>
   147d0:	add	r1, r3, #1
   147d4:	mov	r2, #10
   147d8:	mov	r4, #1
   147dc:	str	r1, [r5, #28]
   147e0:	strb	r2, [r3]
   147e4:	b	144c8 <__assert_fail@plt+0x3230>
   147e8:	mov	r0, r5
   147ec:	bl	19b30 <argp_parse@@Base+0x2550>
   147f0:	b	144b0 <__assert_fail@plt+0x3218>
   147f4:	cmp	r3, #0
   147f8:	movne	r1, fp
   147fc:	movne	r0, r7
   14800:	movne	r6, r9
   14804:	bne	14588 <__assert_fail@plt+0x32f0>
   14808:	mov	r4, r3
   1480c:	b	144c8 <__assert_fail@plt+0x3230>
   14810:	mov	r9, r6
   14814:	str	r8, [sp, #12]
   14818:	str	r4, [sp, #16]
   1481c:	b	1439c <__assert_fail@plt+0x3104>
   14820:	mov	r4, #1
   14824:	b	1454c <__assert_fail@plt+0x32b4>
   14828:	mov	r1, #1
   1482c:	mov	r0, r5
   14830:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14834:	cmp	r0, #0
   14838:	beq	144c4 <__assert_fail@plt+0x322c>
   1483c:	ldr	r3, [r5, #28]
   14840:	b	147d0 <__assert_fail@plt+0x3538>
   14844:	mov	r1, #1
   14848:	mov	r0, r5
   1484c:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   14850:	cmp	r0, #0
   14854:	beq	14480 <__assert_fail@plt+0x31e8>
   14858:	ldr	r3, [r5, #28]
   1485c:	b	147ac <__assert_fail@plt+0x3514>
   14860:	ldr	r4, [sp, #20]
   14864:	str	r4, [sp, #16]
   14868:	b	14368 <__assert_fail@plt+0x30d0>
   1486c:	cmp	r3, #0
   14870:	beq	145f8 <__assert_fail@plt+0x3360>
   14874:	mov	r1, fp
   14878:	mov	r0, r7
   1487c:	bl	18498 <argp_parse@@Base+0xeb8>
   14880:	str	r0, [sp, #12]
   14884:	mov	r0, #1
   14888:	movt	r0, #512	; 0x200
   1488c:	ldr	r3, [r7, #20]
   14890:	b	1459c <__assert_fail@plt+0x3304>
   14894:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14898:	ldr	r4, [r0, #16]
   1489c:	strd	r6, [sp, #8]
   148a0:	strd	r8, [sp, #16]
   148a4:	strd	sl, [sp, #24]
   148a8:	str	lr, [sp, #32]
   148ac:	sub	sp, sp, #20
   148b0:	cmp	r4, #0
   148b4:	movne	r3, r4
   148b8:	bne	148c4 <__assert_fail@plt+0x362c>
   148bc:	b	15154 <__assert_fail@plt+0x3ebc>
   148c0:	mov	r3, r2
   148c4:	ldr	r2, [r3, #12]
   148c8:	cmp	r2, #0
   148cc:	bne	148c0 <__assert_fail@plt+0x3628>
   148d0:	ldr	r2, [r3, #8]
   148d4:	ldr	r7, [r1, #16]
   148d8:	cmp	r7, #0
   148dc:	movne	r3, r7
   148e0:	bne	148ec <__assert_fail@plt+0x3654>
   148e4:	b	1514c <__assert_fail@plt+0x3eb4>
   148e8:	mov	r3, ip
   148ec:	ldr	ip, [r3, #12]
   148f0:	cmp	ip, #0
   148f4:	bne	148e8 <__assert_fail@plt+0x3650>
   148f8:	ldr	ip, [r3, #8]
   148fc:	mvn	r3, ip
   14900:	lsr	r3, r3, #31
   14904:	cmp	r3, r2, lsr #31
   14908:	subne	ip, r2, ip
   1490c:	subeq	ip, ip, r2
   14910:	cmp	ip, #0
   14914:	bne	14af4 <__assert_fail@plt+0x385c>
   14918:	adds	ip, r7, #0
   1491c:	movne	ip, #1
   14920:	cmp	r4, #0
   14924:	rsbeq	ip, ip, #0
   14928:	rsbne	ip, ip, #1
   1492c:	cmp	ip, #0
   14930:	bne	14af4 <__assert_fail@plt+0x385c>
   14934:	cmp	r4, #0
   14938:	mov	r6, r1
   1493c:	mov	r5, r0
   14940:	beq	14e44 <__assert_fail@plt+0x3bac>
   14944:	ldr	r8, [r4, #12]
   14948:	ldr	r1, [r4, #20]
   1494c:	ldr	r2, [r7, #20]
   14950:	ldr	r9, [r7, #12]
   14954:	cmp	r1, r2
   14958:	bgt	14b18 <__assert_fail@plt+0x3880>
   1495c:	blt	14968 <__assert_fail@plt+0x36d0>
   14960:	b	14ca8 <__assert_fail@plt+0x3a10>
   14964:	mov	r9, r5
   14968:	ldr	r5, [r9, #12]
   1496c:	ldr	r3, [r9, #20]
   14970:	cmp	r1, r3
   14974:	blt	14964 <__assert_fail@plt+0x36cc>
   14978:	cmp	r8, r5
   1497c:	beq	15314 <__assert_fail@plt+0x407c>
   14980:	ldr	r7, [r5, #12]
   14984:	ldr	r6, [r8, #12]
   14988:	cmp	r6, r7
   1498c:	beq	1525c <__assert_fail@plt+0x3fc4>
   14990:	ldr	sl, [r6, #12]
   14994:	ldr	fp, [r7, #12]
   14998:	cmp	sl, fp
   1499c:	beq	1537c <__assert_fail@plt+0x40e4>
   149a0:	ldr	r3, [sl, #12]
   149a4:	ldr	r2, [fp, #12]
   149a8:	cmp	r3, r2
   149ac:	beq	15418 <__assert_fail@plt+0x4180>
   149b0:	ldr	r1, [r2, #12]
   149b4:	ldr	r0, [r3, #12]
   149b8:	cmp	r0, r1
   149bc:	beq	154b4 <__assert_fail@plt+0x421c>
   149c0:	str	r3, [sp]
   149c4:	str	r2, [sp, #4]
   149c8:	bl	12dfc <__assert_fail@plt+0x1b64>
   149cc:	subs	ip, r0, #0
   149d0:	bne	14af4 <__assert_fail@plt+0x385c>
   149d4:	ldr	r3, [sp]
   149d8:	ldr	r2, [sp, #4]
   149dc:	ldr	r0, [r3, #8]
   149e0:	ldr	r1, [r2, #8]
   149e4:	mvn	ip, r1
   149e8:	lsr	ip, ip, #31
   149ec:	cmp	ip, r0, lsr #31
   149f0:	subne	ip, r0, r1
   149f4:	subeq	ip, r1, r0
   149f8:	cmp	ip, #0
   149fc:	bne	14af4 <__assert_fail@plt+0x385c>
   14a00:	ldr	r1, [r2, #4]
   14a04:	ldr	r3, [r3, #4]
   14a08:	sub	ip, r1, r3
   14a0c:	cmp	ip, #0
   14a10:	bne	14af4 <__assert_fail@plt+0x385c>
   14a14:	ldr	r1, [fp, #8]
   14a18:	ldr	r0, [sl, #8]
   14a1c:	mvn	r3, r1
   14a20:	lsr	r3, r3, #31
   14a24:	cmp	r3, r0, lsr #31
   14a28:	subne	ip, r0, r1
   14a2c:	subeq	ip, r1, r0
   14a30:	cmp	ip, #0
   14a34:	bne	14af4 <__assert_fail@plt+0x385c>
   14a38:	ldr	r3, [sl, #4]
   14a3c:	ldr	r1, [fp, #4]
   14a40:	sub	ip, r1, r3
   14a44:	cmp	ip, #0
   14a48:	bne	14af4 <__assert_fail@plt+0x385c>
   14a4c:	ldr	r1, [r7, #8]
   14a50:	ldr	r0, [r6, #8]
   14a54:	mvn	r3, r1
   14a58:	lsr	r3, r3, #31
   14a5c:	cmp	r3, r0, lsr #31
   14a60:	subne	ip, r0, r1
   14a64:	subeq	ip, r1, r0
   14a68:	cmp	ip, #0
   14a6c:	bne	14af4 <__assert_fail@plt+0x385c>
   14a70:	ldr	r3, [r6, #4]
   14a74:	ldr	r1, [r7, #4]
   14a78:	sub	ip, r1, r3
   14a7c:	cmp	ip, #0
   14a80:	bne	14af4 <__assert_fail@plt+0x385c>
   14a84:	ldr	r1, [r5, #8]
   14a88:	ldr	r0, [r8, #8]
   14a8c:	mvn	r3, r1
   14a90:	lsr	r3, r3, #31
   14a94:	cmp	r3, r0, lsr #31
   14a98:	subne	ip, r0, r1
   14a9c:	subeq	ip, r1, r0
   14aa0:	cmp	ip, #0
   14aa4:	bne	14af4 <__assert_fail@plt+0x385c>
   14aa8:	ldr	r1, [r5, #4]
   14aac:	ldr	r3, [r8, #4]
   14ab0:	sub	ip, r1, r3
   14ab4:	cmp	ip, #0
   14ab8:	bne	14af4 <__assert_fail@plt+0x385c>
   14abc:	ldr	r1, [r9, #8]
   14ac0:	ldr	r0, [r4, #8]
   14ac4:	mvn	r3, r1
   14ac8:	lsr	r3, r3, #31
   14acc:	cmp	r3, r0, lsr #31
   14ad0:	subne	ip, r0, r1
   14ad4:	subeq	ip, r1, r0
   14ad8:	cmp	ip, #0
   14adc:	bne	14af4 <__assert_fail@plt+0x385c>
   14ae0:	ldr	r0, [r4, #4]
   14ae4:	ldr	r1, [r9, #4]
   14ae8:	sub	ip, r1, r0
   14aec:	cmp	ip, #0
   14af0:	mvneq	ip, #0
   14af4:	mov	r0, ip
   14af8:	add	sp, sp, #20
   14afc:	ldrd	r4, [sp]
   14b00:	ldrd	r6, [sp, #8]
   14b04:	ldrd	r8, [sp, #16]
   14b08:	ldrd	sl, [sp, #24]
   14b0c:	add	sp, sp, #32
   14b10:	pop	{pc}		; (ldr pc, [sp], #4)
   14b14:	mov	r8, r4
   14b18:	ldr	r4, [r8, #12]
   14b1c:	ldr	r3, [r8, #20]
   14b20:	cmp	r2, r3
   14b24:	blt	14b14 <__assert_fail@plt+0x387c>
   14b28:	cmp	r4, r9
   14b2c:	beq	152e0 <__assert_fail@plt+0x4048>
   14b30:	ldr	r5, [r4, #12]
   14b34:	ldr	r6, [r9, #12]
   14b38:	cmp	r5, r6
   14b3c:	beq	15348 <__assert_fail@plt+0x40b0>
   14b40:	ldr	sl, [r5, #12]
   14b44:	ldr	fp, [r6, #12]
   14b48:	cmp	sl, fp
   14b4c:	beq	15290 <__assert_fail@plt+0x3ff8>
   14b50:	ldr	r3, [sl, #12]
   14b54:	ldr	r2, [fp, #12]
   14b58:	cmp	r3, r2
   14b5c:	beq	153c0 <__assert_fail@plt+0x4128>
   14b60:	ldr	r1, [r2, #12]
   14b64:	ldr	r0, [r3, #12]
   14b68:	cmp	r0, r1
   14b6c:	beq	1544c <__assert_fail@plt+0x41b4>
   14b70:	str	r3, [sp]
   14b74:	str	r2, [sp, #4]
   14b78:	bl	12dfc <__assert_fail@plt+0x1b64>
   14b7c:	subs	ip, r0, #0
   14b80:	bne	14af4 <__assert_fail@plt+0x385c>
   14b84:	ldr	r3, [sp]
   14b88:	ldr	r2, [sp, #4]
   14b8c:	ldr	r0, [r3, #8]
   14b90:	ldr	r1, [r2, #8]
   14b94:	mvn	ip, r1
   14b98:	lsr	ip, ip, #31
   14b9c:	cmp	ip, r0, lsr #31
   14ba0:	subne	ip, r0, r1
   14ba4:	subeq	ip, r1, r0
   14ba8:	cmp	ip, #0
   14bac:	bne	14af4 <__assert_fail@plt+0x385c>
   14bb0:	ldr	r1, [r2, #4]
   14bb4:	ldr	r3, [r3, #4]
   14bb8:	sub	ip, r1, r3
   14bbc:	cmp	ip, #0
   14bc0:	bne	14af4 <__assert_fail@plt+0x385c>
   14bc4:	ldr	r1, [fp, #8]
   14bc8:	ldr	r0, [sl, #8]
   14bcc:	mvn	r3, r1
   14bd0:	lsr	r3, r3, #31
   14bd4:	cmp	r3, r0, lsr #31
   14bd8:	subne	ip, r0, r1
   14bdc:	subeq	ip, r1, r0
   14be0:	cmp	ip, #0
   14be4:	bne	14af4 <__assert_fail@plt+0x385c>
   14be8:	ldr	r3, [sl, #4]
   14bec:	ldr	r1, [fp, #4]
   14bf0:	sub	ip, r1, r3
   14bf4:	cmp	ip, #0
   14bf8:	bne	14af4 <__assert_fail@plt+0x385c>
   14bfc:	ldr	r1, [r6, #8]
   14c00:	ldr	r0, [r5, #8]
   14c04:	mvn	r3, r1
   14c08:	lsr	r3, r3, #31
   14c0c:	cmp	r3, r0, lsr #31
   14c10:	subne	ip, r0, r1
   14c14:	subeq	ip, r1, r0
   14c18:	cmp	ip, #0
   14c1c:	bne	14af4 <__assert_fail@plt+0x385c>
   14c20:	ldr	r3, [r5, #4]
   14c24:	ldr	r1, [r6, #4]
   14c28:	sub	ip, r1, r3
   14c2c:	cmp	ip, #0
   14c30:	bne	14af4 <__assert_fail@plt+0x385c>
   14c34:	ldr	r1, [r9, #8]
   14c38:	ldr	r0, [r4, #8]
   14c3c:	mvn	r3, r1
   14c40:	lsr	r3, r3, #31
   14c44:	cmp	r3, r0, lsr #31
   14c48:	subne	ip, r0, r1
   14c4c:	subeq	ip, r1, r0
   14c50:	cmp	ip, #0
   14c54:	bne	14af4 <__assert_fail@plt+0x385c>
   14c58:	ldr	r0, [r4, #4]
   14c5c:	ldr	r1, [r9, #4]
   14c60:	sub	ip, r1, r0
   14c64:	cmp	ip, #0
   14c68:	bne	14af4 <__assert_fail@plt+0x385c>
   14c6c:	ldr	r1, [r7, #8]
   14c70:	ldr	r0, [r8, #8]
   14c74:	mvn	r3, r1
   14c78:	lsr	r3, r3, #31
   14c7c:	cmp	r3, r0, lsr #31
   14c80:	subne	ip, r0, r1
   14c84:	subeq	ip, r1, r0
   14c88:	cmp	ip, #0
   14c8c:	bne	14af4 <__assert_fail@plt+0x385c>
   14c90:	ldr	r1, [r7, #4]
   14c94:	ldr	r0, [r8, #4]
   14c98:	sub	ip, r1, r0
   14c9c:	cmp	ip, #0
   14ca0:	moveq	ip, #1
   14ca4:	b	14af4 <__assert_fail@plt+0x385c>
   14ca8:	cmp	r8, r9
   14cac:	beq	15480 <__assert_fail@plt+0x41e8>
   14cb0:	ldr	sl, [r8, #12]
   14cb4:	ldr	fp, [r9, #12]
   14cb8:	cmp	sl, fp
   14cbc:	beq	154e8 <__assert_fail@plt+0x4250>
   14cc0:	ldr	r3, [sl, #12]
   14cc4:	mov	r2, r3
   14cc8:	ldr	r3, [fp, #12]
   14ccc:	str	r2, [sp]
   14cd0:	cmp	r2, r3
   14cd4:	beq	1551c <__assert_fail@plt+0x4284>
   14cd8:	ldr	r2, [r2, #12]
   14cdc:	mov	r1, r2
   14ce0:	ldr	r2, [r3, #12]
   14ce4:	str	r1, [sp, #4]
   14ce8:	cmp	r1, r2
   14cec:	beq	15550 <__assert_fail@plt+0x42b8>
   14cf0:	ldr	r0, [r1, #12]
   14cf4:	ldr	r1, [r2, #12]
   14cf8:	cmp	r0, r1
   14cfc:	beq	15588 <__assert_fail@plt+0x42f0>
   14d00:	str	r3, [sp, #8]
   14d04:	str	r2, [sp, #12]
   14d08:	bl	12dfc <__assert_fail@plt+0x1b64>
   14d0c:	subs	ip, r0, #0
   14d10:	bne	14af4 <__assert_fail@plt+0x385c>
   14d14:	ldr	r3, [sp, #4]
   14d18:	ldr	r2, [sp, #12]
   14d1c:	ldr	r0, [r3, #8]
   14d20:	ldr	r1, [r2, #8]
   14d24:	ldr	r3, [sp, #8]
   14d28:	mvn	ip, r1
   14d2c:	lsr	ip, ip, #31
   14d30:	cmp	ip, r0, lsr #31
   14d34:	subne	ip, r0, r1
   14d38:	subeq	ip, r1, r0
   14d3c:	cmp	ip, #0
   14d40:	bne	14af4 <__assert_fail@plt+0x385c>
   14d44:	ldr	r1, [r2, #4]
   14d48:	ldr	r2, [sp, #4]
   14d4c:	ldr	r2, [r2, #4]
   14d50:	sub	ip, r1, r2
   14d54:	cmp	ip, #0
   14d58:	bne	14af4 <__assert_fail@plt+0x385c>
   14d5c:	ldr	r2, [sp]
   14d60:	ldr	r1, [r3, #8]
   14d64:	ldr	r0, [r2, #8]
   14d68:	mvn	r2, r1
   14d6c:	lsr	r2, r2, #31
   14d70:	cmp	r2, r0, lsr #31
   14d74:	subne	ip, r0, r1
   14d78:	subeq	ip, r1, r0
   14d7c:	cmp	ip, #0
   14d80:	bne	14af4 <__assert_fail@plt+0x385c>
   14d84:	ldr	r1, [r3, #4]
   14d88:	ldr	r3, [sp]
   14d8c:	ldr	r3, [r3, #4]
   14d90:	sub	ip, r1, r3
   14d94:	cmp	ip, #0
   14d98:	bne	14af4 <__assert_fail@plt+0x385c>
   14d9c:	ldr	r1, [fp, #8]
   14da0:	ldr	r0, [sl, #8]
   14da4:	mvn	r3, r1
   14da8:	lsr	r3, r3, #31
   14dac:	cmp	r3, r0, lsr #31
   14db0:	subne	ip, r0, r1
   14db4:	subeq	ip, r1, r0
   14db8:	cmp	ip, #0
   14dbc:	bne	14af4 <__assert_fail@plt+0x385c>
   14dc0:	ldr	r3, [sl, #4]
   14dc4:	ldr	r1, [fp, #4]
   14dc8:	sub	ip, r1, r3
   14dcc:	cmp	ip, #0
   14dd0:	bne	14af4 <__assert_fail@plt+0x385c>
   14dd4:	ldr	r1, [r9, #8]
   14dd8:	ldr	r0, [r8, #8]
   14ddc:	mvn	r3, r1
   14de0:	lsr	r3, r3, #31
   14de4:	cmp	r3, r0, lsr #31
   14de8:	subne	ip, r0, r1
   14dec:	subeq	ip, r1, r0
   14df0:	cmp	ip, #0
   14df4:	bne	14af4 <__assert_fail@plt+0x385c>
   14df8:	ldr	r3, [r8, #4]
   14dfc:	ldr	r1, [r9, #4]
   14e00:	sub	ip, r1, r3
   14e04:	cmp	ip, #0
   14e08:	bne	14af4 <__assert_fail@plt+0x385c>
   14e0c:	ldr	r1, [r7, #8]
   14e10:	ldr	r0, [r4, #8]
   14e14:	mvn	r3, r1
   14e18:	lsr	r3, r3, #31
   14e1c:	cmp	r3, r0, lsr #31
   14e20:	subne	ip, r0, r1
   14e24:	subeq	ip, r1, r0
   14e28:	cmp	ip, #0
   14e2c:	bne	14af4 <__assert_fail@plt+0x385c>
   14e30:	ldr	r3, [r4, #4]
   14e34:	ldr	r1, [r7, #4]
   14e38:	sub	ip, r1, r3
   14e3c:	cmp	ip, #0
   14e40:	bne	14af4 <__assert_fail@plt+0x385c>
   14e44:	ldr	r1, [r6, #12]
   14e48:	ldr	r0, [r5, #12]
   14e4c:	mvn	r3, r1
   14e50:	lsr	r3, r3, #31
   14e54:	cmp	r3, r0, lsr #31
   14e58:	subne	ip, r0, r1
   14e5c:	subeq	ip, r1, r0
   14e60:	cmp	ip, #0
   14e64:	bne	14af4 <__assert_fail@plt+0x385c>
   14e68:	ldm	r5, {r3, sl}
   14e6c:	cmp	sl, #0
   14e70:	beq	153b0 <__assert_fail@plt+0x4118>
   14e74:	add	r2, r3, #24
   14e78:	mov	r1, sl
   14e7c:	ldr	r7, [r2, #-24]	; 0xffffffe8
   14e80:	cmp	r7, #0
   14e84:	beq	14e94 <__assert_fail@plt+0x3bfc>
   14e88:	ldr	r0, [r2, #-12]
   14e8c:	tst	r0, #2
   14e90:	beq	14ea4 <__assert_fail@plt+0x3c0c>
   14e94:	subs	r1, r1, #1
   14e98:	add	r2, r2, #24
   14e9c:	bne	14e7c <__assert_fail@plt+0x3be4>
   14ea0:	mov	r7, r1
   14ea4:	ldrd	r8, [r6]
   14ea8:	cmp	r9, #0
   14eac:	beq	153b8 <__assert_fail@plt+0x4120>
   14eb0:	add	r2, r8, #24
   14eb4:	mov	r1, r9
   14eb8:	ldr	r4, [r2, #-24]	; 0xffffffe8
   14ebc:	cmp	r4, #0
   14ec0:	beq	14ed0 <__assert_fail@plt+0x3c38>
   14ec4:	ldr	r0, [r2, #-12]
   14ec8:	tst	r0, #2
   14ecc:	beq	14ee0 <__assert_fail@plt+0x3c48>
   14ed0:	subs	r1, r1, #1
   14ed4:	add	r2, r2, #24
   14ed8:	bne	14eb8 <__assert_fail@plt+0x3c20>
   14edc:	mov	r4, r1
   14ee0:	ldr	r2, [r3, #12]
   14ee4:	tst	r2, #8
   14ee8:	beq	14f5c <__assert_fail@plt+0x3cc4>
   14eec:	cmp	r7, #0
   14ef0:	beq	14f5c <__assert_fail@plt+0x3cc4>
   14ef4:	str	r3, [sp]
   14ef8:	bl	11154 <__ctype_b_loc@plt>
   14efc:	ldrb	r1, [r7]
   14f00:	ldr	r0, [r0]
   14f04:	ldr	r3, [sp]
   14f08:	lsl	r2, r1, #1
   14f0c:	ldrh	r2, [r0, r2]
   14f10:	tst	r2, #8192	; 0x2000
   14f14:	beq	14f2c <__assert_fail@plt+0x3c94>
   14f18:	ldrb	r1, [r7, #1]!
   14f1c:	lsl	r2, r1, #1
   14f20:	ldrh	r2, [r0, r2]
   14f24:	tst	r2, #8192	; 0x2000
   14f28:	bne	14f18 <__assert_fail@plt+0x3c80>
   14f2c:	cmp	r1, #0
   14f30:	bne	14f4c <__assert_fail@plt+0x3cb4>
   14f34:	b	15240 <__assert_fail@plt+0x3fa8>
   14f38:	ldrb	r2, [r7, #1]!
   14f3c:	cmp	r2, #0
   14f40:	lsl	ip, r2, #1
   14f44:	beq	14f54 <__assert_fail@plt+0x3cbc>
   14f48:	ldrh	r2, [r0, ip]
   14f4c:	tst	r2, #8
   14f50:	beq	14f38 <__assert_fail@plt+0x3ca0>
   14f54:	cmp	r1, #45	; 0x2d
   14f58:	bne	15240 <__assert_fail@plt+0x3fa8>
   14f5c:	ldr	r2, [r8, #12]
   14f60:	tst	r2, #8
   14f64:	bne	1515c <__assert_fail@plt+0x3ec4>
   14f68:	cmp	sl, #0
   14f6c:	ldr	r2, [r5, #8]
   14f70:	ldr	r6, [r6, #8]
   14f74:	beq	151e4 <__assert_fail@plt+0x3f4c>
   14f78:	mov	fp, sl
   14f7c:	mov	r5, r3
   14f80:	str	r7, [sp]
   14f84:	stmib	sp, {r4, r6}
   14f88:	mov	r4, r2
   14f8c:	ldr	sl, [r5, #12]
   14f90:	mov	r0, #1
   14f94:	ands	r6, sl, #8
   14f98:	movne	r6, #0
   14f9c:	bne	14fec <__assert_fail@plt+0x3d54>
   14fa0:	ldr	r7, [r5, #4]
   14fa4:	sub	ip, r7, #1
   14fa8:	cmp	ip, #254	; 0xfe
   14fac:	bhi	14fec <__assert_fail@plt+0x3d54>
   14fb0:	bl	11154 <__ctype_b_loc@plt>
   14fb4:	ldr	lr, [r0]
   14fb8:	lsl	ip, r7, #1
   14fbc:	mov	r0, #1
   14fc0:	ldrh	ip, [lr, ip]
   14fc4:	tst	ip, #16384	; 0x4000
   14fc8:	beq	14fec <__assert_fail@plt+0x3d54>
   14fcc:	ldrb	ip, [r4]
   14fd0:	cmp	r7, ip
   14fd4:	bne	14fec <__assert_fail@plt+0x3d54>
   14fd8:	and	sl, sl, #2
   14fdc:	add	r4, r4, r0
   14fe0:	cmp	sl, #0
   14fe4:	moveq	r6, r7
   14fe8:	moveq	r0, #0
   14fec:	subs	fp, fp, #1
   14ff0:	add	r5, r5, #24
   14ff4:	moveq	r0, #0
   14ff8:	cmp	r0, #0
   14ffc:	bne	14f8c <__assert_fail@plt+0x3cf4>
   15000:	uxtb	r3, r6
   15004:	mov	fp, r6
   15008:	ldr	r7, [sp]
   1500c:	cmp	r9, #0
   15010:	ldmib	sp, {r4, r6}
   15014:	str	r3, [sp]
   15018:	strne	r4, [sp, #4]
   1501c:	beq	153f4 <__assert_fail@plt+0x415c>
   15020:	ldr	r5, [r8, #12]
   15024:	mov	r3, #1
   15028:	ands	sl, r5, #8
   1502c:	movne	sl, #0
   15030:	bne	15080 <__assert_fail@plt+0x3de8>
   15034:	ldr	r4, [r8, #4]
   15038:	sub	r1, r4, #1
   1503c:	cmp	r1, #254	; 0xfe
   15040:	bhi	15080 <__assert_fail@plt+0x3de8>
   15044:	bl	11154 <__ctype_b_loc@plt>
   15048:	ldr	r0, [r0]
   1504c:	lsl	r1, r4, #1
   15050:	mov	r3, #1
   15054:	ldrh	r1, [r0, r1]
   15058:	tst	r1, #16384	; 0x4000
   1505c:	beq	15080 <__assert_fail@plt+0x3de8>
   15060:	ldrb	r1, [r6]
   15064:	cmp	r4, r1
   15068:	bne	15080 <__assert_fail@plt+0x3de8>
   1506c:	and	r5, r5, #2
   15070:	add	r6, r6, r3
   15074:	cmp	r5, #0
   15078:	moveq	sl, r4
   1507c:	moveq	r3, #0
   15080:	subs	r9, r9, #1
   15084:	add	r8, r8, #24
   15088:	moveq	r3, #0
   1508c:	cmp	r3, #0
   15090:	bne	15020 <__assert_fail@plt+0x3d88>
   15094:	cmp	fp, #0
   15098:	uxtb	r6, sl
   1509c:	ldr	r4, [sp, #4]
   150a0:	beq	15224 <__assert_fail@plt+0x3f8c>
   150a4:	ldr	r3, [sp]
   150a8:	lsl	r9, r3, #2
   150ac:	cmp	sl, #0
   150b0:	beq	15210 <__assert_fail@plt+0x3f78>
   150b4:	lsl	r8, r6, #2
   150b8:	bl	11130 <__ctype_tolower_loc@plt>
   150bc:	ldr	r3, [r0]
   150c0:	ldr	r1, [r3, r9]
   150c4:	ldr	r0, [r3, r8]
   150c8:	subs	ip, r1, r0
   150cc:	bne	14af4 <__assert_fail@plt+0x385c>
   150d0:	ldr	r3, [sp]
   150d4:	subs	ip, r6, r3
   150d8:	bne	14af4 <__assert_fail@plt+0x385c>
   150dc:	adds	r0, sl, #0
   150e0:	movne	r0, #1
   150e4:	cmp	fp, #0
   150e8:	rsbeq	ip, r0, #0
   150ec:	rsbne	ip, r0, #1
   150f0:	cmp	ip, #0
   150f4:	bne	14af4 <__assert_fail@plt+0x385c>
   150f8:	cmp	fp, #0
   150fc:	bne	14af4 <__assert_fail@plt+0x385c>
   15100:	adds	r0, r4, #0
   15104:	movne	r0, #1
   15108:	cmp	r7, #0
   1510c:	rsbeq	ip, r0, #0
   15110:	rsbne	ip, r0, #1
   15114:	cmp	ip, #0
   15118:	bne	14af4 <__assert_fail@plt+0x385c>
   1511c:	cmp	r7, #0
   15120:	beq	14af4 <__assert_fail@plt+0x385c>
   15124:	mov	r1, r4
   15128:	mov	r0, r7
   1512c:	add	sp, sp, #20
   15130:	ldrd	r4, [sp]
   15134:	ldrd	r6, [sp, #8]
   15138:	ldrd	r8, [sp, #16]
   1513c:	ldrd	sl, [sp, #24]
   15140:	ldr	lr, [sp, #32]
   15144:	add	sp, sp, #36	; 0x24
   15148:	b	110b8 <strcasecmp@plt>
   1514c:	ldr	ip, [r1, #12]
   15150:	b	148fc <__assert_fail@plt+0x3664>
   15154:	ldr	r2, [r0, #12]
   15158:	b	148d4 <__assert_fail@plt+0x363c>
   1515c:	cmp	r4, #0
   15160:	movne	fp, #0
   15164:	beq	14f68 <__assert_fail@plt+0x3cd0>
   15168:	str	r3, [sp]
   1516c:	bl	11154 <__ctype_b_loc@plt>
   15170:	ldrb	ip, [r4]
   15174:	ldr	r1, [r0]
   15178:	ldr	r3, [sp]
   1517c:	lsl	r2, ip, #1
   15180:	ldrh	r2, [r1, r2]
   15184:	tst	r2, #8192	; 0x2000
   15188:	beq	151a0 <__assert_fail@plt+0x3f08>
   1518c:	ldrb	ip, [r4, #1]!
   15190:	lsl	r2, ip, #1
   15194:	ldrh	r2, [r1, r2]
   15198:	tst	r2, #8192	; 0x2000
   1519c:	bne	1518c <__assert_fail@plt+0x3ef4>
   151a0:	cmp	ip, #0
   151a4:	bne	151c0 <__assert_fail@plt+0x3f28>
   151a8:	b	151c8 <__assert_fail@plt+0x3f30>
   151ac:	ldrb	r2, [r4, #1]!
   151b0:	cmp	r2, #0
   151b4:	lsl	r0, r2, #1
   151b8:	beq	151c8 <__assert_fail@plt+0x3f30>
   151bc:	ldrh	r2, [r1, r0]
   151c0:	tst	r2, #8
   151c4:	beq	151ac <__assert_fail@plt+0x3f14>
   151c8:	cmp	ip, #45	; 0x2d
   151cc:	moveq	r0, fp
   151d0:	subne	r0, fp, #1
   151d4:	cmp	r0, #0
   151d8:	movne	ip, r0
   151dc:	bne	14af4 <__assert_fail@plt+0x385c>
   151e0:	b	14f68 <__assert_fail@plt+0x3cd0>
   151e4:	cmp	r9, #0
   151e8:	movne	fp, sl
   151ec:	strne	r4, [sp, #4]
   151f0:	strne	fp, [sp]
   151f4:	bne	15020 <__assert_fail@plt+0x3d88>
   151f8:	cmp	r7, #0
   151fc:	beq	155c4 <__assert_fail@plt+0x432c>
   15200:	ldrb	r3, [r7]
   15204:	mov	fp, sl
   15208:	lsl	r9, r3, #2
   1520c:	str	r3, [sp]
   15210:	cmp	r4, #0
   15214:	beq	152c4 <__assert_fail@plt+0x402c>
   15218:	ldrb	r6, [r4]
   1521c:	mov	sl, #0
   15220:	b	150b4 <__assert_fail@plt+0x3e1c>
   15224:	cmp	r7, #0
   15228:	beq	152d4 <__assert_fail@plt+0x403c>
   1522c:	ldrb	r3, [r7]
   15230:	mov	fp, #0
   15234:	lsl	r9, r3, #2
   15238:	str	r3, [sp]
   1523c:	b	150ac <__assert_fail@plt+0x3e14>
   15240:	ldr	r2, [r8, #12]
   15244:	tst	r2, #8
   15248:	beq	15254 <__assert_fail@plt+0x3fbc>
   1524c:	cmp	r4, #0
   15250:	bne	155cc <__assert_fail@plt+0x4334>
   15254:	mov	ip, #1
   15258:	b	14af4 <__assert_fail@plt+0x385c>
   1525c:	ldr	lr, [r5, #4]
   15260:	ldr	r1, [r5, #8]
   15264:	ldr	r0, [r8, #8]
   15268:	ldr	r2, [r8, #4]
   1526c:	mvn	r3, r1
   15270:	lsr	r3, r3, #31
   15274:	cmp	r3, r0, lsr #31
   15278:	subne	ip, r0, r1
   1527c:	subeq	ip, r1, r0
   15280:	cmp	ip, #0
   15284:	subeq	ip, lr, r2
   15288:	beq	14ab4 <__assert_fail@plt+0x381c>
   1528c:	b	14af4 <__assert_fail@plt+0x385c>
   15290:	ldr	r2, [r5, #4]
   15294:	ldr	r1, [r6, #8]
   15298:	ldr	r0, [r5, #8]
   1529c:	ldr	lr, [r6, #4]
   152a0:	mvn	r3, r1
   152a4:	lsr	r3, r3, #31
   152a8:	cmp	r3, r0, lsr #31
   152ac:	subne	ip, r0, r1
   152b0:	subeq	ip, r1, r0
   152b4:	cmp	ip, #0
   152b8:	subeq	ip, lr, r2
   152bc:	beq	14c2c <__assert_fail@plt+0x3994>
   152c0:	b	14af4 <__assert_fail@plt+0x385c>
   152c4:	mov	sl, r4
   152c8:	mov	r8, r4
   152cc:	mov	r6, r4
   152d0:	b	150b8 <__assert_fail@plt+0x3e20>
   152d4:	mov	r9, r7
   152d8:	str	r7, [sp]
   152dc:	b	150ac <__assert_fail@plt+0x3e14>
   152e0:	ldr	lr, [r7, #4]
   152e4:	ldr	r1, [r7, #8]
   152e8:	ldr	r0, [r8, #8]
   152ec:	ldr	r2, [r8, #4]
   152f0:	mvn	r3, r1
   152f4:	lsr	r3, r3, #31
   152f8:	cmp	r3, r0, lsr #31
   152fc:	subne	ip, r0, r1
   15300:	subeq	ip, r1, r0
   15304:	cmp	ip, #0
   15308:	subeq	ip, lr, r2
   1530c:	beq	14c9c <__assert_fail@plt+0x3a04>
   15310:	b	14af4 <__assert_fail@plt+0x385c>
   15314:	ldr	r2, [r4, #4]
   15318:	ldr	r1, [r9, #8]
   1531c:	ldr	r0, [r4, #8]
   15320:	ldr	lr, [r9, #4]
   15324:	mvn	r3, r1
   15328:	lsr	r3, r3, #31
   1532c:	cmp	r3, r0, lsr #31
   15330:	subne	ip, r0, r1
   15334:	subeq	ip, r1, r0
   15338:	cmp	ip, #0
   1533c:	subeq	ip, lr, r2
   15340:	beq	14aec <__assert_fail@plt+0x3854>
   15344:	b	14af4 <__assert_fail@plt+0x385c>
   15348:	ldr	r2, [r4, #4]
   1534c:	ldr	r1, [r9, #8]
   15350:	ldr	r0, [r4, #8]
   15354:	ldr	lr, [r9, #4]
   15358:	mvn	r3, r1
   1535c:	lsr	r3, r3, #31
   15360:	cmp	r3, r0, lsr #31
   15364:	subne	ip, r0, r1
   15368:	subeq	ip, r1, r0
   1536c:	cmp	ip, #0
   15370:	subeq	ip, lr, r2
   15374:	beq	14c64 <__assert_fail@plt+0x39cc>
   15378:	b	14af4 <__assert_fail@plt+0x385c>
   1537c:	ldr	r2, [r6, #4]
   15380:	ldr	r1, [r7, #8]
   15384:	ldr	r0, [r6, #8]
   15388:	ldr	lr, [r7, #4]
   1538c:	mvn	r3, r1
   15390:	lsr	r3, r3, #31
   15394:	cmp	r3, r0, lsr #31
   15398:	subne	ip, r0, r1
   1539c:	subeq	ip, r1, r0
   153a0:	cmp	ip, #0
   153a4:	subeq	ip, lr, r2
   153a8:	beq	14a7c <__assert_fail@plt+0x37e4>
   153ac:	b	14af4 <__assert_fail@plt+0x385c>
   153b0:	mov	r7, ip
   153b4:	b	14ea4 <__assert_fail@plt+0x3c0c>
   153b8:	mov	r4, r9
   153bc:	b	14ee0 <__assert_fail@plt+0x3c48>
   153c0:	ldr	r2, [sl, #4]
   153c4:	ldr	r1, [fp, #8]
   153c8:	ldr	r0, [sl, #8]
   153cc:	ldr	lr, [fp, #4]
   153d0:	mvn	r3, r1
   153d4:	lsr	r3, r3, #31
   153d8:	cmp	r3, r0, lsr #31
   153dc:	subne	ip, r0, r1
   153e0:	subeq	ip, r1, r0
   153e4:	cmp	ip, #0
   153e8:	subeq	ip, lr, r2
   153ec:	beq	14bf4 <__assert_fail@plt+0x395c>
   153f0:	b	14af4 <__assert_fail@plt+0x385c>
   153f4:	cmp	fp, #0
   153f8:	lslne	r9, fp, #2
   153fc:	bne	15210 <__assert_fail@plt+0x3f78>
   15400:	cmp	r7, #0
   15404:	movne	sl, fp
   15408:	movne	r6, sl
   1540c:	bne	1522c <__assert_fail@plt+0x3f94>
   15410:	str	r7, [sp]
   15414:	b	15210 <__assert_fail@plt+0x3f78>
   15418:	ldr	r2, [sl, #4]
   1541c:	ldr	r1, [fp, #8]
   15420:	ldr	r0, [sl, #8]
   15424:	ldr	lr, [fp, #4]
   15428:	mvn	r3, r1
   1542c:	lsr	r3, r3, #31
   15430:	cmp	r3, r0, lsr #31
   15434:	subne	ip, r0, r1
   15438:	subeq	ip, r1, r0
   1543c:	cmp	ip, #0
   15440:	subeq	ip, lr, r2
   15444:	beq	14a44 <__assert_fail@plt+0x37ac>
   15448:	b	14af4 <__assert_fail@plt+0x385c>
   1544c:	ldr	r0, [r3, #8]
   15450:	ldr	r1, [r2, #8]
   15454:	ldr	lr, [r2, #4]
   15458:	ldr	r3, [r3, #4]
   1545c:	mvn	r2, r1
   15460:	lsr	r2, r2, #31
   15464:	cmp	r2, r0, lsr #31
   15468:	subne	ip, r0, r1
   1546c:	subeq	ip, r1, r0
   15470:	cmp	ip, #0
   15474:	subeq	ip, lr, r3
   15478:	beq	14bbc <__assert_fail@plt+0x3924>
   1547c:	b	14af4 <__assert_fail@plt+0x385c>
   15480:	ldr	r2, [r4, #4]
   15484:	ldr	r1, [r7, #8]
   15488:	ldr	r0, [r4, #8]
   1548c:	ldr	lr, [r7, #4]
   15490:	mvn	r3, r1
   15494:	lsr	r3, r3, #31
   15498:	cmp	r3, r0, lsr #31
   1549c:	subne	ip, r0, r1
   154a0:	subeq	ip, r1, r0
   154a4:	cmp	ip, #0
   154a8:	subeq	ip, lr, r2
   154ac:	beq	14e3c <__assert_fail@plt+0x3ba4>
   154b0:	b	14af4 <__assert_fail@plt+0x385c>
   154b4:	ldr	r0, [r3, #8]
   154b8:	ldr	r1, [r2, #8]
   154bc:	ldr	lr, [r2, #4]
   154c0:	ldr	r3, [r3, #4]
   154c4:	mvn	r2, r1
   154c8:	lsr	r2, r2, #31
   154cc:	cmp	r2, r0, lsr #31
   154d0:	subne	ip, r0, r1
   154d4:	subeq	ip, r1, r0
   154d8:	cmp	ip, #0
   154dc:	subeq	ip, lr, r3
   154e0:	beq	14a0c <__assert_fail@plt+0x3774>
   154e4:	b	14af4 <__assert_fail@plt+0x385c>
   154e8:	ldr	r2, [r8, #4]
   154ec:	ldr	r1, [r9, #8]
   154f0:	ldr	r0, [r8, #8]
   154f4:	ldr	lr, [r9, #4]
   154f8:	mvn	r3, r1
   154fc:	lsr	r3, r3, #31
   15500:	cmp	r3, r0, lsr #31
   15504:	subne	ip, r0, r1
   15508:	subeq	ip, r1, r0
   1550c:	cmp	ip, #0
   15510:	subeq	ip, lr, r2
   15514:	beq	14e04 <__assert_fail@plt+0x3b6c>
   15518:	b	14af4 <__assert_fail@plt+0x385c>
   1551c:	ldr	r2, [sl, #4]
   15520:	ldr	r1, [fp, #8]
   15524:	ldr	r0, [sl, #8]
   15528:	ldr	lr, [fp, #4]
   1552c:	mvn	r3, r1
   15530:	lsr	r3, r3, #31
   15534:	cmp	r3, r0, lsr #31
   15538:	subne	ip, r0, r1
   1553c:	subeq	ip, r1, r0
   15540:	cmp	ip, #0
   15544:	subeq	ip, lr, r2
   15548:	beq	14dcc <__assert_fail@plt+0x3b34>
   1554c:	b	14af4 <__assert_fail@plt+0x385c>
   15550:	ldr	ip, [sp]
   15554:	ldr	r2, [r3, #4]
   15558:	ldr	r1, [r3, #8]
   1555c:	ldr	lr, [ip, #4]
   15560:	ldr	r0, [ip, #8]
   15564:	mvn	r3, r1
   15568:	lsr	r3, r3, #31
   1556c:	cmp	r3, r0, lsr #31
   15570:	subne	ip, r0, r1
   15574:	subeq	ip, r1, r0
   15578:	cmp	ip, #0
   1557c:	subeq	ip, r2, lr
   15580:	beq	14d94 <__assert_fail@plt+0x3afc>
   15584:	b	14af4 <__assert_fail@plt+0x385c>
   15588:	ldr	r0, [sp, #4]
   1558c:	ldr	lr, [r2, #4]
   15590:	ldr	r1, [r2, #8]
   15594:	ldr	r2, [sp, #4]
   15598:	ldr	r0, [r0, #8]
   1559c:	mvn	ip, r1
   155a0:	lsr	ip, ip, #31
   155a4:	ldr	r2, [r2, #4]
   155a8:	cmp	ip, r0, lsr #31
   155ac:	subne	ip, r0, r1
   155b0:	subeq	ip, r1, r0
   155b4:	cmp	ip, #0
   155b8:	subeq	ip, lr, r2
   155bc:	beq	14d54 <__assert_fail@plt+0x3abc>
   155c0:	b	14af4 <__assert_fail@plt+0x385c>
   155c4:	mov	fp, r7
   155c8:	b	15410 <__assert_fail@plt+0x4178>
   155cc:	mov	fp, #1
   155d0:	b	15168 <__assert_fail@plt+0x3ed0>

000155d4 <argp_failure@@Base>:
   155d4:	push	{r3}		; (str r3, [sp, #-4]!)
   155d8:	strd	r4, [sp, #-20]!	; 0xffffffec
   155dc:	subs	r5, r0, #0
   155e0:	strd	r6, [sp, #8]
   155e4:	mov	r7, r1
   155e8:	mov	r6, r2
   155ec:	str	lr, [sp, #16]
   155f0:	sub	sp, sp, #200	; 0xc8
   155f4:	beq	15750 <argp_failure@@Base+0x17c>
   155f8:	ldr	r3, [r5, #16]
   155fc:	tst	r3, #2
   15600:	bne	15734 <argp_failure@@Base+0x160>
   15604:	ldr	r4, [r5, #44]	; 0x2c
   15608:	cmp	r4, #0
   1560c:	beq	15734 <argp_failure@@Base+0x160>
   15610:	mov	r0, r4
   15614:	bl	1122c <flockfile@plt>
   15618:	ldr	r0, [r5, #40]	; 0x28
   1561c:	mov	r1, r4
   15620:	bl	10fc8 <fputs_unlocked@plt>
   15624:	ldr	r3, [sp, #220]	; 0xdc
   15628:	cmp	r3, #0
   1562c:	beq	15688 <argp_failure@@Base+0xb4>
   15630:	ldr	r3, [r4, #20]
   15634:	add	r1, sp, #224	; 0xe0
   15638:	ldr	r2, [r4, #24]
   1563c:	str	r1, [sp]
   15640:	cmp	r3, r2
   15644:	addcc	r1, r3, #1
   15648:	movcc	r2, #58	; 0x3a
   1564c:	strcc	r1, [r4, #20]
   15650:	strbcc	r2, [r3]
   15654:	bcs	157c0 <argp_failure@@Base+0x1ec>
   15658:	ldr	r3, [r4, #20]
   1565c:	ldr	r2, [r4, #24]
   15660:	cmp	r3, r2
   15664:	addcc	r1, r3, #1
   15668:	movcc	r2, #32
   1566c:	strcc	r1, [r4, #20]
   15670:	strbcc	r2, [r3]
   15674:	bcs	157b0 <argp_failure@@Base+0x1dc>
   15678:	mov	r0, r4
   1567c:	ldr	r2, [sp]
   15680:	ldr	r1, [sp, #220]	; 0xdc
   15684:	bl	11214 <vfprintf@plt>
   15688:	cmp	r6, #0
   1568c:	ldr	r3, [r4, #20]
   15690:	ldr	r2, [r4, #24]
   15694:	beq	156f8 <argp_failure@@Base+0x124>
   15698:	cmp	r2, r3
   1569c:	addhi	r1, r3, #1
   156a0:	movhi	r2, #58	; 0x3a
   156a4:	strhi	r1, [r4, #20]
   156a8:	strbhi	r2, [r3]
   156ac:	bls	157e0 <argp_failure@@Base+0x20c>
   156b0:	ldr	r3, [r4, #20]
   156b4:	ldr	r2, [r4, #24]
   156b8:	cmp	r3, r2
   156bc:	addcc	r1, r3, #1
   156c0:	movcc	r2, #32
   156c4:	strcc	r1, [r4, #20]
   156c8:	strbcc	r2, [r3]
   156cc:	bcs	157d0 <argp_failure@@Base+0x1fc>
   156d0:	mov	r2, #200	; 0xc8
   156d4:	mov	r1, sp
   156d8:	mov	r0, r6
   156dc:	bl	111a8 <strerror_r@plt>
   156e0:	cmp	r0, #0
   156e4:	beq	15794 <argp_failure@@Base+0x1c0>
   156e8:	mov	r1, r4
   156ec:	bl	10fc8 <fputs_unlocked@plt>
   156f0:	ldr	r3, [r4, #20]
   156f4:	ldr	r2, [r4, #24]
   156f8:	cmp	r3, r2
   156fc:	addcc	r1, r3, #1
   15700:	movcc	r2, #10
   15704:	strcc	r1, [r4, #20]
   15708:	strbcc	r2, [r3]
   1570c:	bcs	15784 <argp_failure@@Base+0x1b0>
   15710:	mov	r0, r4
   15714:	bl	110c4 <funlockfile@plt>
   15718:	cmp	r7, #0
   1571c:	beq	15734 <argp_failure@@Base+0x160>
   15720:	cmp	r5, #0
   15724:	beq	1577c <argp_failure@@Base+0x1a8>
   15728:	ldr	r3, [r5, #16]
   1572c:	tst	r3, #32
   15730:	beq	1577c <argp_failure@@Base+0x1a8>
   15734:	add	sp, sp, #200	; 0xc8
   15738:	ldrd	r4, [sp]
   1573c:	ldrd	r6, [sp, #8]
   15740:	ldr	lr, [sp, #16]
   15744:	add	sp, sp, #20
   15748:	add	sp, sp, #4
   1574c:	bx	lr
   15750:	movw	r3, #53912	; 0xd298
   15754:	movt	r3, #2
   15758:	ldr	r4, [r3]
   1575c:	cmp	r4, #0
   15760:	beq	15734 <argp_failure@@Base+0x160>
   15764:	mov	r0, r4
   15768:	bl	1122c <flockfile@plt>
   1576c:	movw	r3, #53904	; 0xd290
   15770:	movt	r3, #2
   15774:	ldr	r0, [r3]
   15778:	b	1561c <argp_failure@@Base+0x48>
   1577c:	mov	r0, r7
   15780:	bl	1116c <exit@plt>
   15784:	mov	r1, #10
   15788:	mov	r0, r4
   1578c:	bl	111e4 <__overflow@plt>
   15790:	b	15710 <argp_failure@@Base+0x13c>
   15794:	mov	r0, r6
   15798:	bl	11124 <strerror@plt>
   1579c:	cmp	r0, #0
   157a0:	movw	r3, #48628	; 0xbdf4
   157a4:	movt	r3, #1
   157a8:	moveq	r0, r3
   157ac:	b	156e8 <argp_failure@@Base+0x114>
   157b0:	mov	r1, #32
   157b4:	mov	r0, r4
   157b8:	bl	111e4 <__overflow@plt>
   157bc:	b	15678 <argp_failure@@Base+0xa4>
   157c0:	mov	r1, #58	; 0x3a
   157c4:	mov	r0, r4
   157c8:	bl	111e4 <__overflow@plt>
   157cc:	b	15658 <argp_failure@@Base+0x84>
   157d0:	mov	r1, #32
   157d4:	mov	r0, r4
   157d8:	bl	111e4 <__overflow@plt>
   157dc:	b	156d0 <argp_failure@@Base+0xfc>
   157e0:	mov	r1, #58	; 0x3a
   157e4:	mov	r0, r4
   157e8:	bl	111e4 <__overflow@plt>
   157ec:	b	156b0 <argp_failure@@Base+0xdc>
   157f0:	cmp	r2, #0
   157f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   157f8:	strd	r6, [sp, #8]
   157fc:	strd	r8, [sp, #16]
   15800:	strd	sl, [sp, #24]
   15804:	add	fp, sp, #32
   15808:	str	lr, [sp, #32]
   1580c:	sub	sp, sp, #124	; 0x7c
   15810:	str	r2, [fp, #-132]	; 0xffffff7c
   15814:	str	r0, [fp, #-108]	; 0xffffff94
   15818:	str	r3, [fp, #-104]	; 0xffffff98
   1581c:	str	r1, [fp, #-100]	; 0xffffff9c
   15820:	beq	15cd4 <argp_failure@@Base+0x700>
   15824:	mov	r0, r2
   15828:	movw	r9, #53844	; 0xd254
   1582c:	movt	r9, #2
   15830:	bl	1122c <flockfile@plt>
   15834:	ldr	r3, [r9, #36]	; 0x24
   15838:	cmp	r3, #0
   1583c:	beq	15cf0 <argp_failure@@Base+0x71c>
   15840:	mov	r3, #0
   15844:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15848:	mov	r1, r3
   1584c:	ldr	r2, [r9, #32]
   15850:	bl	19a98 <argp_parse@@Base+0x24b8>
   15854:	subs	r7, r0, #0
   15858:	beq	16b4c <argp_failure@@Base+0x1578>
   1585c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15860:	ands	r3, r3, #11
   15864:	streq	r3, [fp, #-112]	; 0xffffff90
   15868:	bne	1607c <argp_failure@@Base+0xaa8>
   1586c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15870:	ands	r4, r3, #3
   15874:	bne	15ec0 <argp_failure@@Base+0x8ec>
   15878:	ldr	r3, [fp, #-104]	; 0xffffff98
   1587c:	tst	r3, #16
   15880:	bne	15e8c <argp_failure@@Base+0x8b8>
   15884:	ldr	r3, [fp, #-104]	; 0xffffff98
   15888:	tst	r3, #4
   1588c:	and	r5, r3, #8
   15890:	bne	15e04 <argp_failure@@Base+0x830>
   15894:	cmp	r5, #0
   15898:	beq	15c40 <argp_failure@@Base+0x66c>
   1589c:	ldr	r3, [fp, #-112]	; 0xffffff90
   158a0:	ldr	r3, [r3, #4]
   158a4:	cmp	r3, #0
   158a8:	str	r3, [fp, #-116]	; 0xffffff8c
   158ac:	beq	15c40 <argp_failure@@Base+0x66c>
   158b0:	cmp	r4, #0
   158b4:	bne	15e34 <argp_failure@@Base+0x860>
   158b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   158bc:	ldr	r3, [r3]
   158c0:	str	r4, [fp, #-88]	; 0xffffffa8
   158c4:	str	r4, [fp, #-84]	; 0xffffffac
   158c8:	str	r4, [fp, #-80]	; 0xffffffb0
   158cc:	mov	r0, r3
   158d0:	movw	r3, #47512	; 0xb998
   158d4:	movt	r3, #1
   158d8:	ldr	r2, [r7, #16]
   158dc:	str	r3, [fp, #-140]	; 0xffffff74
   158e0:	movw	r3, #49076	; 0xbfb4
   158e4:	movt	r3, #1
   158e8:	ldr	r1, [r7, #24]
   158ec:	str	r3, [fp, #-144]	; 0xffffff70
   158f0:	ldr	r3, [r7, #28]
   158f4:	str	r9, [fp, #-96]	; 0xffffffa0
   158f8:	mov	r9, r0
   158fc:	sub	r3, r3, r1
   15900:	ldr	r4, [r9]
   15904:	cmp	r3, r2
   15908:	ldr	r8, [r9, #8]
   1590c:	bhi	165d0 <argp_failure@@Base+0xffc>
   15910:	mov	r1, #1
   15914:	ldr	r0, [r7, #4]
   15918:	ldr	r6, [r4, #12]
   1591c:	str	r0, [fp, #-120]	; 0xffffff88
   15920:	mov	r0, #0
   15924:	str	r0, [r7, #4]
   15928:	ldr	r0, [r7, #12]
   1592c:	str	r1, [fp, #-64]	; 0xffffffc0
   15930:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15934:	str	r0, [fp, #-124]	; 0xffffff84
   15938:	ands	r0, r6, #8
   1593c:	str	r9, [fp, #-76]	; 0xffffffb4
   15940:	str	r0, [fp, #-128]	; 0xffffff80
   15944:	sub	r0, fp, #88	; 0x58
   15948:	str	r7, [fp, #-72]	; 0xffffffb8
   1594c:	str	r1, [fp, #-60]	; 0xffffffc4
   15950:	movne	r1, #0
   15954:	str	r0, [fp, #-68]	; 0xffffffbc
   15958:	strne	r1, [fp, #-128]	; 0xffffff80
   1595c:	bne	15994 <argp_failure@@Base+0x3c0>
   15960:	ldr	r0, [r9, #4]
   15964:	cmp	r0, #0
   15968:	beq	15994 <argp_failure@@Base+0x3c0>
   1596c:	add	r1, r4, #24
   15970:	ldr	ip, [r1, #-24]	; 0xffffffe8
   15974:	cmp	ip, #0
   15978:	beq	15988 <argp_failure@@Base+0x3b4>
   1597c:	ldr	ip, [r1, #-12]
   15980:	tst	ip, #2
   15984:	beq	16700 <argp_failure@@Base+0x112c>
   15988:	subs	r0, r0, #1
   1598c:	add	r1, r1, #24
   15990:	bne	15970 <argp_failure@@Base+0x39c>
   15994:	cmp	r3, r2
   15998:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1599c:	ldr	r5, [r3, #8]
   159a0:	bhi	165c4 <argp_failure@@Base+0xff0>
   159a4:	str	r5, [r7, #12]
   159a8:	ldr	sl, [r9, #4]
   159ac:	cmp	sl, #0
   159b0:	beq	15a20 <argp_failure@@Base+0x44c>
   159b4:	mov	r5, r4
   159b8:	str	r9, [fp, #-136]	; 0xffffff78
   159bc:	mov	r9, r7
   159c0:	mov	r7, r4
   159c4:	mov	r4, r8
   159c8:	ldr	r8, [r5, #12]
   159cc:	tst	r8, #8
   159d0:	bne	15a08 <argp_failure@@Base+0x434>
   159d4:	ldr	r6, [r5, #4]
   159d8:	sub	r2, r6, #1
   159dc:	cmp	r2, #254	; 0xfe
   159e0:	bhi	15a08 <argp_failure@@Base+0x434>
   159e4:	bl	11154 <__ctype_b_loc@plt>
   159e8:	ldr	r1, [r0]
   159ec:	lsl	r2, r6, #1
   159f0:	ldrh	r2, [r1, r2]
   159f4:	tst	r2, #16384	; 0x4000
   159f8:	beq	15a08 <argp_failure@@Base+0x434>
   159fc:	ldrb	r2, [r4]
   15a00:	cmp	r6, r2
   15a04:	beq	161d4 <argp_failure@@Base+0xc00>
   15a08:	subs	sl, sl, #1
   15a0c:	add	r5, r5, #24
   15a10:	bne	159c8 <argp_failure@@Base+0x3f4>
   15a14:	mov	r4, r7
   15a18:	mov	r7, r9
   15a1c:	ldr	r9, [fp, #-136]	; 0xffffff78
   15a20:	ldr	r2, [r4, #12]
   15a24:	ldr	r1, [r7, #24]
   15a28:	ldr	r3, [r7, #28]
   15a2c:	tst	r2, #8
   15a30:	ldr	r2, [r7, #16]
   15a34:	sub	r3, r3, r1
   15a38:	beq	161e4 <argp_failure@@Base+0xc10>
   15a3c:	cmp	r3, r2
   15a40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a44:	ldr	r5, [r3, #16]
   15a48:	bhi	16764 <argp_failure@@Base+0x1190>
   15a4c:	str	r5, [r7, #12]
   15a50:	ldr	r6, [r9, #4]
   15a54:	cmp	r6, #0
   15a58:	addne	r5, r4, #24
   15a5c:	bne	15a70 <argp_failure@@Base+0x49c>
   15a60:	b	15b00 <argp_failure@@Base+0x52c>
   15a64:	subs	r6, r6, #1
   15a68:	add	r5, r5, #24
   15a6c:	beq	15b00 <argp_failure@@Base+0x52c>
   15a70:	ldr	r3, [r5, #-24]	; 0xffffffe8
   15a74:	cmp	r3, #0
   15a78:	beq	15a64 <argp_failure@@Base+0x490>
   15a7c:	ldr	r3, [r5, #-12]
   15a80:	tst	r3, #2
   15a84:	bne	15a64 <argp_failure@@Base+0x490>
   15a88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a8c:	sub	r1, fp, #76	; 0x4c
   15a90:	ldr	r0, [r3, #16]
   15a94:	bl	14074 <__assert_fail@plt+0x2ddc>
   15a98:	ldr	sl, [r5, #-24]	; 0xffffffe8
   15a9c:	mov	r0, sl
   15aa0:	bl	11178 <strlen@plt>
   15aa4:	subs	r8, r0, #0
   15aa8:	beq	15a64 <argp_failure@@Base+0x490>
   15aac:	ldr	ip, [r7, #28]
   15ab0:	mov	r1, r8
   15ab4:	mov	r0, r7
   15ab8:	ldr	lr, [r7, #32]
   15abc:	add	r2, ip, r8
   15ac0:	cmp	lr, r2
   15ac4:	bcs	15ad8 <argp_failure@@Base+0x504>
   15ac8:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   15acc:	cmp	r0, #0
   15ad0:	beq	15a64 <argp_failure@@Base+0x490>
   15ad4:	ldr	ip, [r7, #28]
   15ad8:	mov	r2, r8
   15adc:	mov	r1, sl
   15ae0:	mov	r0, ip
   15ae4:	add	r5, r5, #24
   15ae8:	bl	11058 <memcpy@plt>
   15aec:	ldr	r2, [r7, #28]
   15af0:	subs	r6, r6, #1
   15af4:	add	r3, r2, r8
   15af8:	str	r3, [r7, #28]
   15afc:	bne	15a70 <argp_failure@@Base+0x49c>
   15b00:	ldr	r2, [r7, #16]
   15b04:	ldr	r1, [r7, #24]
   15b08:	ldr	r3, [r7, #28]
   15b0c:	sub	r3, r3, r1
   15b10:	cmp	r3, r2
   15b14:	bhi	165b8 <argp_failure@@Base+0xfe4>
   15b18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15b1c:	mov	r2, #0
   15b20:	str	r2, [r7, #4]
   15b24:	cmp	r3, r2
   15b28:	beq	16298 <argp_failure@@Base+0xcc4>
   15b2c:	ldr	r3, [r4, #12]
   15b30:	tst	r3, #8
   15b34:	bne	15b60 <argp_failure@@Base+0x58c>
   15b38:	ldr	r5, [r4, #4]
   15b3c:	sub	r3, r5, #1
   15b40:	cmp	r3, #254	; 0xfe
   15b44:	bhi	15b60 <argp_failure@@Base+0x58c>
   15b48:	bl	11154 <__ctype_b_loc@plt>
   15b4c:	ldr	r3, [r0]
   15b50:	lsl	r5, r5, #1
   15b54:	ldrh	r3, [r3, r5]
   15b58:	tst	r3, #16384	; 0x4000
   15b5c:	bne	15b6c <argp_failure@@Base+0x598>
   15b60:	ldr	r3, [r4]
   15b64:	cmp	r3, #0
   15b68:	beq	16898 <argp_failure@@Base+0x12c4>
   15b6c:	ldr	r2, [r7, #16]
   15b70:	ldr	r1, [r7, #24]
   15b74:	ldr	r3, [r7, #28]
   15b78:	sub	r0, r3, r1
   15b7c:	cmp	r0, r2
   15b80:	bhi	165ec <argp_failure@@Base+0x1018>
   15b84:	ldr	r0, [fp, #-120]	; 0xffffff88
   15b88:	str	r0, [r7, #4]
   15b8c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15b90:	add	r9, r9, #28
   15b94:	subs	r0, r0, #1
   15b98:	str	r0, [fp, #-116]	; 0xffffff8c
   15b9c:	ldr	r0, [fp, #-124]	; 0xffffff84
   15ba0:	str	r0, [r7, #12]
   15ba4:	bne	158fc <argp_failure@@Base+0x328>
   15ba8:	ldr	r9, [fp, #-96]	; 0xffffffa0
   15bac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15bb0:	cmp	r3, #0
   15bb4:	beq	15c3c <argp_failure@@Base+0x668>
   15bb8:	ldr	r3, [r9, #4]
   15bbc:	cmp	r3, #0
   15bc0:	beq	15c3c <argp_failure@@Base+0x668>
   15bc4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15bc8:	cmp	r1, #0
   15bcc:	beq	16c74 <argp_failure@@Base+0x16a0>
   15bd0:	ldr	r5, [r1]
   15bd4:	cmp	r5, #0
   15bd8:	beq	16d64 <argp_failure@@Base+0x1790>
   15bdc:	ldr	r4, [r5, #20]
   15be0:	cmp	r4, #0
   15be4:	beq	16d04 <argp_failure@@Base+0x1730>
   15be8:	mov	r0, r5
   15bec:	movw	r4, #48652	; 0xbe0c
   15bf0:	movt	r4, #1
   15bf4:	bl	18498 <argp_parse@@Base+0xeb8>
   15bf8:	mov	r2, r0
   15bfc:	mov	r1, r4
   15c00:	ldr	r3, [r5, #20]
   15c04:	mov	r0, #5
   15c08:	movt	r0, #512	; 0x200
   15c0c:	blx	r3
   15c10:	subs	r5, r0, #0
   15c14:	beq	15c3c <argp_failure@@Base+0x668>
   15c18:	ldrb	r3, [r5]
   15c1c:	subs	r4, r5, r4
   15c20:	movne	r4, #1
   15c24:	cmp	r3, #0
   15c28:	bne	16c80 <argp_failure@@Base+0x16ac>
   15c2c:	cmp	r4, #0
   15c30:	beq	15c3c <argp_failure@@Base+0x668>
   15c34:	mov	r0, r5
   15c38:	bl	18618 <argp_parse@@Base+0x1038>
   15c3c:	mov	r4, #1
   15c40:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c44:	tst	r3, #32
   15c48:	bne	16170 <argp_failure@@Base+0xb9c>
   15c4c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c50:	tst	r3, #64	; 0x40
   15c54:	beq	15c84 <argp_failure@@Base+0x6b0>
   15c58:	movw	r5, #54120	; 0xd368
   15c5c:	movt	r5, #2
   15c60:	ldr	r2, [r5]
   15c64:	cmp	r2, #0
   15c68:	beq	15c84 <argp_failure@@Base+0x6b0>
   15c6c:	cmp	r4, #0
   15c70:	bne	161ac <argp_failure@@Base+0xbd8>
   15c74:	movw	r1, #49108	; 0xbfd4
   15c78:	movt	r1, #1
   15c7c:	mov	r0, r7
   15c80:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   15c84:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15c88:	bl	110c4 <funlockfile@plt>
   15c8c:	ldr	r3, [fp, #-112]	; 0xffffff90
   15c90:	cmp	r3, #0
   15c94:	beq	15ccc <argp_failure@@Base+0x6f8>
   15c98:	ldr	r0, [r3, #12]
   15c9c:	cmp	r0, #0
   15ca0:	beq	15cb4 <argp_failure@@Base+0x6e0>
   15ca4:	ldr	r4, [r0, #24]
   15ca8:	bl	18618 <argp_parse@@Base+0x1038>
   15cac:	subs	r0, r4, #0
   15cb0:	bne	15ca4 <argp_failure@@Base+0x6d0>
   15cb4:	ldr	r3, [fp, #-112]	; 0xffffff90
   15cb8:	ldr	r3, [r3, #4]
   15cbc:	cmp	r3, #0
   15cc0:	bne	16a04 <argp_failure@@Base+0x1430>
   15cc4:	ldr	r0, [fp, #-112]	; 0xffffff90
   15cc8:	bl	18618 <argp_parse@@Base+0x1038>
   15ccc:	mov	r0, r7
   15cd0:	bl	1a090 <argp_parse@@Base+0x2ab0>
   15cd4:	sub	sp, fp, #32
   15cd8:	ldrd	r4, [sp]
   15cdc:	ldrd	r6, [sp, #8]
   15ce0:	ldrd	r8, [sp, #16]
   15ce4:	ldrd	sl, [sp, #24]
   15ce8:	add	sp, sp, #32
   15cec:	pop	{pc}		; (ldr pc, [sp], #4)
   15cf0:	movw	r0, #48768	; 0xbe80
   15cf4:	movt	r0, #1
   15cf8:	bl	11100 <getenv@plt>
   15cfc:	subs	r8, r0, #0
   15d00:	ldrd	r2, [r9]
   15d04:	sub	sl, fp, #76	; 0x4c
   15d08:	ldrd	r0, [r9, #8]
   15d0c:	ldrd	r4, [r9, #16]
   15d10:	strd	r2, [fp, #-76]	; 0xffffffb4
   15d14:	ldrd	r2, [r9, #24]
   15d18:	strd	r0, [sl, #8]
   15d1c:	ldrd	r0, [r9, #32]
   15d20:	strd	r4, [sl, #16]
   15d24:	strd	r2, [sl, #24]
   15d28:	strd	r0, [sl, #32]
   15d2c:	beq	15840 <argp_failure@@Base+0x26c>
   15d30:	ldrb	r6, [r8]
   15d34:	cmp	r6, #0
   15d38:	beq	15d84 <argp_failure@@Base+0x7b0>
   15d3c:	bl	11154 <__ctype_b_loc@plt>
   15d40:	mov	r3, r0
   15d44:	mov	r0, r6
   15d48:	mov	r6, r3
   15d4c:	ldr	r1, [r6]
   15d50:	lsl	r3, r0, #1
   15d54:	ldrh	r3, [r1, r3]
   15d58:	tst	r3, #8192	; 0x2000
   15d5c:	beq	15d74 <argp_failure@@Base+0x7a0>
   15d60:	ldrb	r0, [r8, #1]!
   15d64:	lsl	r3, r0, #1
   15d68:	ldrh	r3, [r1, r3]
   15d6c:	tst	r3, #8192	; 0x2000
   15d70:	bne	15d60 <argp_failure@@Base+0x78c>
   15d74:	ands	r2, r3, #1024	; 0x400
   15d78:	bne	1643c <argp_failure@@Base+0xe68>
   15d7c:	cmp	r0, #0
   15d80:	bne	16b58 <argp_failure@@Base+0x1584>
   15d84:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d8c:	cmp	r3, r2
   15d90:	ble	16d10 <argp_failure@@Base+0x173c>
   15d94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15d98:	cmp	r3, r2
   15d9c:	ble	16d3c <argp_failure@@Base+0x1768>
   15da0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15da4:	cmp	r3, r2
   15da8:	ble	16d44 <argp_failure@@Base+0x1770>
   15dac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15db0:	cmp	r3, r2
   15db4:	ble	16d4c <argp_failure@@Base+0x1778>
   15db8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15dbc:	cmp	r3, r2
   15dc0:	ble	16d54 <argp_failure@@Base+0x1780>
   15dc4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15dc8:	cmp	r3, r2
   15dcc:	ble	16d5c <argp_failure@@Base+0x1788>
   15dd0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   15dd4:	mov	ip, #1
   15dd8:	ldrd	r4, [sl, #8]
   15ddc:	ldrd	r2, [sl, #32]
   15de0:	strd	r0, [r9]
   15de4:	ldrd	r0, [sl, #24]
   15de8:	strd	r4, [r9, #8]
   15dec:	strd	r2, [r9, #32]
   15df0:	ldrd	r2, [sl, #16]
   15df4:	strd	r2, [r9, #16]
   15df8:	strd	r0, [r9, #24]
   15dfc:	str	ip, [r9, #36]	; 0x24
   15e00:	b	15840 <argp_failure@@Base+0x26c>
   15e04:	ldr	r3, [fp, #4]
   15e08:	movw	r1, #49020	; 0xbf7c
   15e0c:	movt	r1, #1
   15e10:	mov	r0, r7
   15e14:	mov	r2, r3
   15e18:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   15e1c:	cmp	r5, #0
   15e20:	beq	15c3c <argp_failure@@Base+0x668>
   15e24:	ldr	r3, [fp, #-112]	; 0xffffff90
   15e28:	ldr	r3, [r3, #4]
   15e2c:	cmp	r3, #0
   15e30:	beq	15c3c <argp_failure@@Base+0x668>
   15e34:	ldr	r3, [r7, #28]
   15e38:	ldr	r2, [r7, #32]
   15e3c:	cmp	r3, r2
   15e40:	bcs	16bac <argp_failure@@Base+0x15d8>
   15e44:	add	r1, r3, #1
   15e48:	mov	r2, #10
   15e4c:	str	r1, [r7, #28]
   15e50:	strb	r2, [r3]
   15e54:	ldr	r3, [fp, #-112]	; 0xffffff90
   15e58:	ldr	r3, [r3, #4]
   15e5c:	mov	r2, r3
   15e60:	str	r3, [fp, #-116]	; 0xffffff8c
   15e64:	mov	r3, #0
   15e68:	cmp	r2, r3
   15e6c:	ldr	r2, [fp, #-112]	; 0xffffff90
   15e70:	ldr	r2, [r2]
   15e74:	str	r3, [fp, #-88]	; 0xffffffa8
   15e78:	str	r3, [fp, #-84]	; 0xffffffac
   15e7c:	str	r3, [fp, #-80]	; 0xffffffb0
   15e80:	mov	r0, r2
   15e84:	bne	158d0 <argp_failure@@Base+0x2fc>
   15e88:	b	15c3c <argp_failure@@Base+0x668>
   15e8c:	mov	r0, #1
   15e90:	mov	r3, #0
   15e94:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15e98:	mov	r2, r3
   15e9c:	stm	sp, {r0, r7}
   15ea0:	ldr	r0, [fp, #-108]	; 0xffffff94
   15ea4:	bl	142c0 <__assert_fail@plt+0x3028>
   15ea8:	ldr	r3, [fp, #-104]	; 0xffffff98
   15eac:	orr	r4, r4, r0
   15eb0:	tst	r3, #4
   15eb4:	and	r5, r3, #8
   15eb8:	beq	15894 <argp_failure@@Base+0x2c0>
   15ebc:	b	15e04 <argp_failure@@Base+0x830>
   15ec0:	ldr	r3, [fp, #-108]	; 0xffffff94
   15ec4:	ldr	r0, [r3, #8]
   15ec8:	ldr	r5, [r3, #16]
   15ecc:	cmp	r0, #0
   15ed0:	moveq	r4, r0
   15ed4:	beq	15ee8 <argp_failure@@Base+0x914>
   15ed8:	mov	r1, #10
   15edc:	bl	11184 <strchr@plt>
   15ee0:	adds	r4, r0, #0
   15ee4:	movne	r4, #1
   15ee8:	cmp	r5, #0
   15eec:	beq	15f18 <argp_failure@@Base+0x944>
   15ef0:	ldr	r3, [r5]
   15ef4:	cmp	r3, #0
   15ef8:	beq	15f18 <argp_failure@@Base+0x944>
   15efc:	ldr	r0, [r3, #8]
   15f00:	ldr	r1, [r3, #16]
   15f04:	bl	12eb0 <__assert_fail@plt+0x1c18>
   15f08:	ldr	r3, [r5, #16]!
   15f0c:	add	r4, r4, r0
   15f10:	cmp	r3, #0
   15f14:	bne	15efc <argp_failure@@Base+0x928>
   15f18:	add	r3, r4, #7
   15f1c:	sub	sl, fp, #76	; 0x4c
   15f20:	bic	r3, r3, #7
   15f24:	movw	r8, #48988	; 0xbf5c
   15f28:	movt	r8, #1
   15f2c:	sub	sp, sp, r3
   15f30:	movw	r3, #48996	; 0xbf64
   15f34:	movt	r3, #1
   15f38:	mov	r2, r4
   15f3c:	mov	r1, #0
   15f40:	str	r3, [fp, #-124]	; 0xffffff84
   15f44:	add	r3, sp, #8
   15f48:	mov	r4, #1
   15f4c:	mov	r0, r3
   15f50:	str	r3, [fp, #-96]	; 0xffffffa0
   15f54:	movw	r3, #48980	; 0xbf54
   15f58:	movt	r3, #1
   15f5c:	str	r3, [fp, #-128]	; 0xffffff80
   15f60:	bl	111b4 <memset@plt>
   15f64:	str	r8, [fp, #-120]	; 0xffffff88
   15f68:	str	sl, [fp, #-116]	; 0xffffff8c
   15f6c:	ldr	sl, [fp, #-112]	; 0xffffff90
   15f70:	ldr	r8, [fp, #-104]	; 0xffffff98
   15f74:	b	16054 <argp_failure@@Base+0xa80>
   15f78:	cmp	r4, #0
   15f7c:	mov	r0, r7
   15f80:	ldr	r1, [fp, #-120]	; 0xffffff88
   15f84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f88:	ldrne	r2, [fp, #-128]	; 0xffffff80
   15f8c:	ldreq	r2, [fp, #-124]	; 0xffffff84
   15f90:	ldr	r4, [r7, #12]
   15f94:	str	r5, [r7, #12]
   15f98:	str	r3, [fp, #-76]	; 0xffffffb4
   15f9c:	ldr	r3, [fp, #4]
   15fa0:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   15fa4:	ldr	r2, [r7, #16]
   15fa8:	ldr	r1, [r7, #24]
   15fac:	ldr	r3, [r7, #28]
   15fb0:	ldr	r5, [r9, #28]
   15fb4:	sub	r3, r3, r1
   15fb8:	cmp	r3, r2
   15fbc:	bhi	16164 <argp_failure@@Base+0xb90>
   15fc0:	tst	r8, #2
   15fc4:	ldr	r6, [r7, #4]
   15fc8:	str	r5, [r7, #4]
   15fcc:	beq	16150 <argp_failure@@Base+0xb7c>
   15fd0:	ldr	r3, [sl, #4]
   15fd4:	cmp	r3, #0
   15fd8:	bne	1693c <argp_failure@@Base+0x1368>
   15fdc:	mov	r3, #1
   15fe0:	str	r7, [sp]
   15fe4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15fe8:	ldr	r0, [fp, #-108]	; 0xffffff94
   15fec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15ff0:	bl	13618 <__assert_fail@plt+0x2380>
   15ff4:	ldr	r1, [r7, #16]
   15ff8:	mov	r5, r0
   15ffc:	ldrd	r2, [r7, #24]
   16000:	sub	r2, r3, r2
   16004:	cmp	r2, r1
   16008:	strls	r4, [r7, #12]
   1600c:	bhi	16120 <argp_failure@@Base+0xb4c>
   16010:	ldr	r2, [r7, #32]
   16014:	str	r6, [r7, #4]
   16018:	cmp	r2, r3
   1601c:	bhi	16038 <argp_failure@@Base+0xa64>
   16020:	mov	r1, #1
   16024:	mov	r0, r7
   16028:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   1602c:	cmp	r0, #0
   16030:	beq	16048 <argp_failure@@Base+0xa74>
   16034:	ldr	r3, [r7, #28]
   16038:	add	r1, r3, #1
   1603c:	mov	r2, #10
   16040:	str	r1, [r7, #28]
   16044:	strb	r2, [r3]
   16048:	cmp	r5, #0
   1604c:	mov	r4, #0
   16050:	beq	16194 <argp_failure@@Base+0xbc0>
   16054:	ldr	r2, [r7, #16]
   16058:	ldr	r1, [r7, #24]
   1605c:	ldr	r3, [r7, #28]
   16060:	ldr	r5, [r9, #28]
   16064:	sub	r3, r3, r1
   16068:	cmp	r3, r2
   1606c:	bls	15f78 <argp_failure@@Base+0x9a4>
   16070:	mov	r0, r7
   16074:	bl	19b30 <argp_parse@@Base+0x2550>
   16078:	b	15f78 <argp_failure@@Base+0x9a4>
   1607c:	mov	r1, #0
   16080:	ldr	r0, [fp, #-108]	; 0xffffff94
   16084:	bl	12f1c <__assert_fail@plt+0x1c84>
   16088:	ldr	r5, [r0]
   1608c:	mov	r3, r0
   16090:	ldr	r2, [r0, #4]
   16094:	cmp	r2, #0
   16098:	sub	r4, r2, #1
   1609c:	strd	r2, [fp, #-116]	; 0xffffff8c
   160a0:	str	r5, [fp, #-96]	; 0xffffffa0
   160a4:	beq	1586c <argp_failure@@Base+0x298>
   160a8:	movw	r6, #48964	; 0xbf44
   160ac:	movt	r6, #1
   160b0:	str	r4, [fp, #-120]	; 0xffffff88
   160b4:	mov	sl, r4
   160b8:	ldr	r8, [r5]
   160bc:	ldr	r3, [r5, #4]
   160c0:	cmp	r3, #0
   160c4:	sub	r4, r3, #1
   160c8:	beq	16108 <argp_failure@@Base+0xb34>
   160cc:	add	r8, r8, #24
   160d0:	ldr	r0, [r8, #-24]	; 0xffffffe8
   160d4:	sub	r4, r4, #1
   160d8:	cmp	r0, #0
   160dc:	beq	160fc <argp_failure@@Base+0xb28>
   160e0:	ldr	r3, [r8, #-12]
   160e4:	mov	r1, r6
   160e8:	tst	r3, #2
   160ec:	bne	160fc <argp_failure@@Base+0xb28>
   160f0:	bl	10fd4 <strcmp@plt>
   160f4:	cmp	r0, #0
   160f8:	beq	167b0 <argp_failure@@Base+0x11dc>
   160fc:	cmn	r4, #1
   16100:	add	r8, r8, #24
   16104:	bne	160d0 <argp_failure@@Base+0xafc>
   16108:	sub	sl, sl, #1
   1610c:	add	r5, r5, #28
   16110:	cmn	sl, #1
   16114:	bne	160b8 <argp_failure@@Base+0xae4>
   16118:	ldr	r4, [fp, #-120]	; 0xffffff88
   1611c:	b	167d0 <argp_failure@@Base+0x11fc>
   16120:	mov	r0, r7
   16124:	bl	19b30 <argp_parse@@Base+0x2550>
   16128:	ldr	r1, [r7, #16]
   1612c:	str	r4, [r7, #12]
   16130:	ldrd	r2, [r7, #24]
   16134:	sub	r2, r3, r2
   16138:	cmp	r2, r1
   1613c:	bls	16010 <argp_failure@@Base+0xa3c>
   16140:	mov	r0, r7
   16144:	bl	19b30 <argp_parse@@Base+0x2550>
   16148:	ldr	r3, [r7, #28]
   1614c:	b	16010 <argp_failure@@Base+0xa3c>
   16150:	mov	r1, r7
   16154:	mov	r0, sl
   16158:	orr	r8, r8, #2
   1615c:	bl	13c00 <__assert_fail@plt+0x2968>
   16160:	b	15fdc <argp_failure@@Base+0xa08>
   16164:	mov	r0, r7
   16168:	bl	19b30 <argp_parse@@Base+0x2550>
   1616c:	b	15fc0 <argp_failure@@Base+0x9ec>
   16170:	mov	r2, #0
   16174:	mov	r3, r4
   16178:	ldr	r0, [fp, #-108]	; 0xffffff94
   1617c:	stm	sp, {r2, r7}
   16180:	mov	r2, #1
   16184:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16188:	bl	142c0 <__assert_fail@plt+0x3028>
   1618c:	orr	r4, r4, r0
   16190:	b	15c4c <argp_failure@@Base+0x678>
   16194:	str	r8, [fp, #-104]	; 0xffffff98
   16198:	mov	r4, #1
   1619c:	ldr	r3, [fp, #-104]	; 0xffffff98
   161a0:	tst	r3, #16
   161a4:	beq	15884 <argp_failure@@Base+0x2b0>
   161a8:	b	15e8c <argp_failure@@Base+0x8b8>
   161ac:	ldr	r3, [r7, #28]
   161b0:	ldr	r2, [r7, #32]
   161b4:	cmp	r3, r2
   161b8:	bcs	16b90 <argp_failure@@Base+0x15bc>
   161bc:	add	r1, r3, #1
   161c0:	mov	r2, #10
   161c4:	str	r1, [r7, #28]
   161c8:	strb	r2, [r3]
   161cc:	ldr	r2, [r5]
   161d0:	b	15c74 <argp_failure@@Base+0x6a0>
   161d4:	tst	r8, #2
   161d8:	beq	16650 <argp_failure@@Base+0x107c>
   161dc:	add	r4, r4, #1
   161e0:	b	15a08 <argp_failure@@Base+0x434>
   161e4:	cmp	r3, r2
   161e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161ec:	ldr	r5, [r3, #12]
   161f0:	bhi	16780 <argp_failure@@Base+0x11ac>
   161f4:	str	r5, [r7, #12]
   161f8:	ldr	sl, [r9, #4]
   161fc:	cmp	sl, #0
   16200:	beq	15b00 <argp_failure@@Base+0x52c>
   16204:	movw	r3, #49092	; 0xbfc4
   16208:	movt	r3, #1
   1620c:	movw	r6, #49084	; 0xbfbc
   16210:	movt	r6, #1
   16214:	movw	r8, #49100	; 0xbfcc
   16218:	movt	r8, #1
   1621c:	str	r3, [fp, #-128]	; 0xffffff80
   16220:	add	r5, r4, #24
   16224:	b	16234 <argp_failure@@Base+0xc60>
   16228:	subs	sl, sl, #1
   1622c:	add	r5, r5, #24
   16230:	beq	15b00 <argp_failure@@Base+0x52c>
   16234:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16238:	cmp	r3, #0
   1623c:	beq	16228 <argp_failure@@Base+0xc54>
   16240:	ldr	r3, [r5, #-12]
   16244:	tst	r3, #2
   16248:	bne	16228 <argp_failure@@Base+0xc54>
   1624c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16250:	sub	r1, fp, #76	; 0x4c
   16254:	ldr	r0, [r3, #12]
   16258:	bl	14074 <__assert_fail@plt+0x2ddc>
   1625c:	mov	r1, r6
   16260:	mov	r0, r7
   16264:	ldr	r2, [r5, #-24]	; 0xffffffe8
   16268:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   1626c:	ldr	r3, [r4, #8]
   16270:	cmp	r3, #0
   16274:	beq	16228 <argp_failure@@Base+0xc54>
   16278:	ldr	ip, [r4, #12]
   1627c:	mov	r1, r8
   16280:	mov	r2, r3
   16284:	mov	r0, r7
   16288:	tst	ip, #1
   1628c:	ldrne	r1, [fp, #-128]	; 0xffffff80
   16290:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   16294:	b	16228 <argp_failure@@Base+0xc54>
   16298:	ldr	r6, [r9, #20]
   1629c:	ldr	r5, [r4, #16]
   162a0:	cmp	r6, #0
   162a4:	beq	16648 <argp_failure@@Base+0x1074>
   162a8:	ldr	r3, [r6, #20]
   162ac:	cmp	r3, #0
   162b0:	beq	16648 <argp_failure@@Base+0x1074>
   162b4:	ldr	r4, [r4, #4]
   162b8:	mov	r0, r6
   162bc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   162c0:	bl	18498 <argp_parse@@Base+0xeb8>
   162c4:	mov	r2, r0
   162c8:	mov	r1, r5
   162cc:	ldr	r3, [r6, #20]
   162d0:	mov	r0, r4
   162d4:	blx	r3
   162d8:	mov	r4, r0
   162dc:	cmp	r4, #0
   162e0:	beq	163e4 <argp_failure@@Base+0xe10>
   162e4:	ldrb	r3, [r4]
   162e8:	cmp	r3, #0
   162ec:	beq	163d4 <argp_failure@@Base+0xe00>
   162f0:	ldr	r1, [r7, #16]
   162f4:	ldrd	r2, [r7, #24]
   162f8:	sub	r2, r3, r2
   162fc:	cmp	r2, r1
   16300:	bhi	16ae4 <argp_failure@@Base+0x1510>
   16304:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16308:	ldr	r8, [r7, #20]
   1630c:	ldr	r6, [r2, #20]
   16310:	bic	r8, r8, r8, asr #31
   16314:	mov	sl, r6
   16318:	str	r6, [r7, #4]
   1631c:	add	r2, r6, #3
   16320:	str	sl, [r7, #12]
   16324:	cmp	r2, r8
   16328:	bcc	16ac4 <argp_failure@@Base+0x14f0>
   1632c:	cmp	r6, r8
   16330:	bhi	16a50 <argp_failure@@Base+0x147c>
   16334:	ldr	r1, [r7, #32]
   16338:	add	r2, r3, #3
   1633c:	cmp	r1, r2
   16340:	bcs	1635c <argp_failure@@Base+0xd88>
   16344:	mov	r1, #3
   16348:	mov	r0, r7
   1634c:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16350:	cmp	r0, #0
   16354:	beq	16380 <argp_failure@@Base+0xdac>
   16358:	ldr	r3, [r7, #28]
   1635c:	movw	r2, #49104	; 0xbfd0
   16360:	movt	r2, #1
   16364:	ldrh	r1, [r2]
   16368:	ldrb	r2, [r2, #2]
   1636c:	strh	r1, [r3]
   16370:	strb	r2, [r3, #2]
   16374:	ldr	r3, [r7, #28]
   16378:	add	r3, r3, #3
   1637c:	str	r3, [r7, #28]
   16380:	mov	r0, r4
   16384:	bl	11178 <strlen@plt>
   16388:	subs	r6, r0, #0
   1638c:	beq	163d4 <argp_failure@@Base+0xe00>
   16390:	ldr	r0, [r7, #28]
   16394:	ldr	r2, [r7, #32]
   16398:	add	r3, r0, r6
   1639c:	cmp	r2, r3
   163a0:	bcs	163bc <argp_failure@@Base+0xde8>
   163a4:	mov	r1, r6
   163a8:	mov	r0, r7
   163ac:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   163b0:	cmp	r0, #0
   163b4:	beq	163d4 <argp_failure@@Base+0xe00>
   163b8:	ldr	r0, [r7, #28]
   163bc:	mov	r2, r6
   163c0:	mov	r1, r4
   163c4:	bl	11058 <memcpy@plt>
   163c8:	ldr	r3, [r7, #28]
   163cc:	add	r6, r3, r6
   163d0:	str	r6, [r7, #28]
   163d4:	cmp	r5, r4
   163d8:	beq	163e4 <argp_failure@@Base+0xe10>
   163dc:	mov	r0, r4
   163e0:	bl	18618 <argp_parse@@Base+0x1038>
   163e4:	ldr	r1, [r7, #16]
   163e8:	ldrd	r2, [r7, #24]
   163ec:	sub	r2, r3, r2
   163f0:	cmp	r2, r1
   163f4:	bhi	16770 <argp_failure@@Base+0x119c>
   163f8:	mov	r2, #0
   163fc:	str	r2, [r7, #4]
   16400:	ldr	r2, [r7, #32]
   16404:	cmp	r2, r3
   16408:	bhi	16424 <argp_failure@@Base+0xe50>
   1640c:	mov	r1, #1
   16410:	mov	r0, r7
   16414:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16418:	cmp	r0, #0
   1641c:	beq	16434 <argp_failure@@Base+0xe60>
   16420:	ldr	r3, [r7, #28]
   16424:	add	r1, r3, #1
   16428:	mov	r2, #10
   1642c:	str	r1, [r7, #28]
   16430:	strb	r2, [r3]
   16434:	str	r9, [fp, #-88]	; 0xffffffa8
   16438:	b	15b6c <argp_failure@@Base+0x598>
   1643c:	cmp	r0, #45	; 0x2d
   16440:	cmpne	r0, #95	; 0x5f
   16444:	ubfx	r7, r3, #3, #1
   16448:	moveq	r2, #1
   1644c:	movne	r2, #0
   16450:	orrs	r7, r2, r7
   16454:	beq	16c68 <argp_failure@@Base+0x1694>
   16458:	mov	r4, r8
   1645c:	ldrb	r2, [r4, #1]!
   16460:	lsl	r3, r2, #1
   16464:	cmp	r2, #45	; 0x2d
   16468:	cmpne	r2, #95	; 0x5f
   1646c:	moveq	lr, #1
   16470:	movne	lr, #0
   16474:	ldrh	r3, [r1, r3]
   16478:	ubfx	ip, r3, #3, #1
   1647c:	orrs	ip, lr, ip
   16480:	bne	1645c <argp_failure@@Base+0xe88>
   16484:	tst	r3, #8192	; 0x2000
   16488:	sub	r7, r4, r8
   1648c:	beq	164a4 <argp_failure@@Base+0xed0>
   16490:	ldrb	r2, [r4, #1]!
   16494:	lsl	r3, r2, #1
   16498:	ldrh	r3, [r1, r3]
   1649c:	tst	r3, #8192	; 0x2000
   164a0:	bne	16490 <argp_failure@@Base+0xebc>
   164a4:	cmp	r2, #44	; 0x2c
   164a8:	cmpne	r2, #0
   164ac:	beq	1670c <argp_failure@@Base+0x1138>
   164b0:	cmp	r2, #61	; 0x3d
   164b4:	beq	16bd4 <argp_failure@@Base+0x1600>
   164b8:	ands	r3, r3, #2048	; 0x800
   164bc:	streq	r3, [fp, #-112]	; 0xffffff90
   164c0:	streq	r3, [fp, #-96]	; 0xffffffa0
   164c4:	bne	16c04 <argp_failure@@Base+0x1630>
   164c8:	ldr	r0, [pc, #2292]	; 16dc4 <argp_failure@@Base+0x17f0>
   164cc:	bl	11178 <strlen@plt>
   164d0:	cmp	r7, r0
   164d4:	beq	16730 <argp_failure@@Base+0x115c>
   164d8:	ldr	r5, [pc, #2280]	; 16dc8 <argp_failure@@Base+0x17f4>
   164dc:	mov	r0, r5
   164e0:	bl	11178 <strlen@plt>
   164e4:	cmp	r7, r0
   164e8:	beq	168ac <argp_failure@@Base+0x12d8>
   164ec:	ldr	r5, [pc, #2264]	; 16dcc <argp_failure@@Base+0x17f8>
   164f0:	mov	r0, r5
   164f4:	bl	11178 <strlen@plt>
   164f8:	cmp	r7, r0
   164fc:	beq	168e8 <argp_failure@@Base+0x1314>
   16500:	ldr	r5, [pc, #2248]	; 16dd0 <argp_failure@@Base+0x17fc>
   16504:	mov	r0, r5
   16508:	bl	11178 <strlen@plt>
   1650c:	cmp	r7, r0
   16510:	beq	16904 <argp_failure@@Base+0x1330>
   16514:	ldr	r5, [pc, #2232]	; 16dd4 <argp_failure@@Base+0x1800>
   16518:	mov	r0, r5
   1651c:	bl	11178 <strlen@plt>
   16520:	cmp	r7, r0
   16524:	beq	16920 <argp_failure@@Base+0x134c>
   16528:	ldr	r5, [pc, #2216]	; 16dd8 <argp_failure@@Base+0x1804>
   1652c:	mov	r0, r5
   16530:	bl	11178 <strlen@plt>
   16534:	cmp	r7, r0
   16538:	beq	16994 <argp_failure@@Base+0x13c0>
   1653c:	ldr	r5, [pc, #2200]	; 16ddc <argp_failure@@Base+0x1808>
   16540:	mov	r0, r5
   16544:	bl	11178 <strlen@plt>
   16548:	cmp	r7, r0
   1654c:	beq	169b0 <argp_failure@@Base+0x13dc>
   16550:	ldr	r5, [pc, #2184]	; 16de0 <argp_failure@@Base+0x180c>
   16554:	mov	r0, r5
   16558:	bl	11178 <strlen@plt>
   1655c:	cmp	r7, r0
   16560:	beq	169cc <argp_failure@@Base+0x13f8>
   16564:	ldr	r5, [pc, #2168]	; 16de4 <argp_failure@@Base+0x1810>
   16568:	mov	r0, r5
   1656c:	bl	11178 <strlen@plt>
   16570:	cmp	r0, r7
   16574:	beq	169e8 <argp_failure@@Base+0x1414>
   16578:	movw	r3, #48832	; 0xbec0
   1657c:	movt	r3, #1
   16580:	mov	r2, #0
   16584:	mov	r1, r2
   16588:	stm	sp, {r7, r8}
   1658c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16590:	bl	155d4 <argp_failure@@Base>
   16594:	ldrb	r0, [r4]
   16598:	cmp	r0, #44	; 0x2c
   1659c:	movne	r8, r4
   165a0:	bne	165ac <argp_failure@@Base+0xfd8>
   165a4:	ldrb	r0, [r4, #1]
   165a8:	add	r8, r4, #1
   165ac:	cmp	r0, #0
   165b0:	bne	15d4c <argp_failure@@Base+0x778>
   165b4:	b	15d84 <argp_failure@@Base+0x7b0>
   165b8:	mov	r0, r7
   165bc:	bl	19b30 <argp_parse@@Base+0x2550>
   165c0:	b	15b18 <argp_failure@@Base+0x544>
   165c4:	mov	r0, r7
   165c8:	bl	19b30 <argp_parse@@Base+0x2550>
   165cc:	b	159a4 <argp_failure@@Base+0x3d0>
   165d0:	mov	r0, r7
   165d4:	bl	19b30 <argp_parse@@Base+0x2550>
   165d8:	ldr	r2, [r7, #16]
   165dc:	ldr	r3, [r7, #24]
   165e0:	ldr	r1, [r7, #28]
   165e4:	sub	r3, r1, r3
   165e8:	b	15910 <argp_failure@@Base+0x33c>
   165ec:	mov	r0, r7
   165f0:	bl	19b30 <argp_parse@@Base+0x2550>
   165f4:	ldr	r3, [fp, #-120]	; 0xffffff88
   165f8:	ldr	r2, [r7, #16]
   165fc:	ldr	r1, [r7, #24]
   16600:	str	r3, [r7, #4]
   16604:	ldr	r3, [r7, #28]
   16608:	sub	r0, r3, r1
   1660c:	cmp	r0, r2
   16610:	bls	15b8c <argp_failure@@Base+0x5b8>
   16614:	mov	r0, r7
   16618:	add	r9, r9, #28
   1661c:	bl	19b30 <argp_parse@@Base+0x2550>
   16620:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16624:	subs	r3, r3, #1
   16628:	str	r3, [fp, #-116]	; 0xffffff8c
   1662c:	ldr	r3, [fp, #-124]	; 0xffffff84
   16630:	str	r3, [r7, #12]
   16634:	beq	15ba8 <argp_failure@@Base+0x5d4>
   16638:	ldr	r2, [r7, #16]
   1663c:	ldr	r1, [r7, #24]
   16640:	ldr	r3, [r7, #28]
   16644:	b	158fc <argp_failure@@Base+0x328>
   16648:	mov	r4, r5
   1664c:	b	162dc <argp_failure@@Base+0xd08>
   16650:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16654:	sub	r1, fp, #76	; 0x4c
   16658:	ldr	r0, [r3, #8]
   1665c:	bl	14074 <__assert_fail@plt+0x2ddc>
   16660:	ldr	r2, [r9, #28]
   16664:	ldr	r1, [r9, #32]
   16668:	cmp	r2, r1
   1666c:	bcc	16688 <argp_failure@@Base+0x10b4>
   16670:	mov	r1, #1
   16674:	mov	r0, r9
   16678:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   1667c:	cmp	r0, #0
   16680:	beq	16698 <argp_failure@@Base+0x10c4>
   16684:	ldr	r2, [r9, #28]
   16688:	add	r0, r2, #1
   1668c:	mov	r1, #45	; 0x2d
   16690:	str	r0, [r9, #28]
   16694:	strb	r1, [r2]
   16698:	ldr	r2, [r9, #28]
   1669c:	ldr	r1, [r9, #32]
   166a0:	ldrb	r6, [r4]
   166a4:	cmp	r2, r1
   166a8:	bcc	166c4 <argp_failure@@Base+0x10f0>
   166ac:	mov	r1, #1
   166b0:	mov	r0, r9
   166b4:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   166b8:	cmp	r0, #0
   166bc:	beq	166d0 <argp_failure@@Base+0x10fc>
   166c0:	ldr	r2, [r9, #28]
   166c4:	add	r1, r2, #1
   166c8:	str	r1, [r9, #28]
   166cc:	strb	r6, [r2]
   166d0:	ldr	r3, [fp, #-128]	; 0xffffff80
   166d4:	ldr	r2, [r7, #8]
   166d8:	cmp	r3, #0
   166dc:	beq	1678c <argp_failure@@Base+0x11b8>
   166e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166e4:	ldr	r1, [r3]
   166e8:	cmp	r1, #0
   166ec:	bne	1678c <argp_failure@@Base+0x11b8>
   166f0:	cmp	r2, #0
   166f4:	movne	r2, #1
   166f8:	strne	r2, [fp, #-80]	; 0xffffffb0
   166fc:	b	161dc <argp_failure@@Base+0xc08>
   16700:	mov	r1, #1
   16704:	str	r1, [fp, #-128]	; 0xffffff80
   16708:	b	15994 <argp_failure@@Base+0x3c0>
   1670c:	cmp	r0, #110	; 0x6e
   16710:	beq	16a1c <argp_failure@@Base+0x1448>
   16714:	mov	r3, #1
   16718:	ldr	r0, [pc, #1700]	; 16dc4 <argp_failure@@Base+0x17f0>
   1671c:	str	r3, [fp, #-112]	; 0xffffff90
   16720:	str	r3, [fp, #-96]	; 0xffffffa0
   16724:	bl	11178 <strlen@plt>
   16728:	cmp	r7, r0
   1672c:	bne	164d8 <argp_failure@@Base+0xf04>
   16730:	mov	r2, r7
   16734:	ldr	r1, [pc, #1672]	; 16dc4 <argp_failure@@Base+0x17f0>
   16738:	mov	r0, r8
   1673c:	bl	11280 <strncmp@plt>
   16740:	cmp	r0, #0
   16744:	bne	164d8 <argp_failure@@Base+0xf04>
   16748:	ldr	r5, [pc, #1652]	; 16dc4 <argp_failure@@Base+0x17f0>
   1674c:	sub	r2, fp, #36	; 0x24
   16750:	ldrb	r3, [r5, #15]
   16754:	add	r3, r2, r3
   16758:	ldr	r2, [fp, #-112]	; 0xffffff90
   1675c:	str	r2, [r3, #-40]	; 0xffffffd8
   16760:	b	16594 <argp_failure@@Base+0xfc0>
   16764:	mov	r0, r7
   16768:	bl	19b30 <argp_parse@@Base+0x2550>
   1676c:	b	15a4c <argp_failure@@Base+0x478>
   16770:	mov	r0, r7
   16774:	bl	19b30 <argp_parse@@Base+0x2550>
   16778:	ldr	r3, [r7, #28]
   1677c:	b	163f8 <argp_failure@@Base+0xe24>
   16780:	mov	r0, r7
   16784:	bl	19b30 <argp_parse@@Base+0x2550>
   16788:	b	161f4 <argp_failure@@Base+0xc20>
   1678c:	cmp	r2, #0
   16790:	beq	161dc <argp_failure@@Base+0xc08>
   16794:	ldr	r1, [r7, #12]
   16798:	mov	r0, r9
   1679c:	tst	r1, #1
   167a0:	ldrne	r1, [fp, #-144]	; 0xffffff70
   167a4:	ldreq	r1, [fp, #-140]	; 0xffffff74
   167a8:	bl	1a1e0 <argp_parse@@Base+0x2c00>
   167ac:	b	161dc <argp_failure@@Base+0xc08>
   167b0:	mvn	r3, #0
   167b4:	str	r3, [r5, #12]
   167b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   167bc:	ldr	r3, [r3, #4]
   167c0:	cmp	r3, #0
   167c4:	sub	r4, r3, #1
   167c8:	str	r3, [fp, #-116]	; 0xffffff8c
   167cc:	beq	1586c <argp_failure@@Base+0x298>
   167d0:	ldr	r5, [fp, #-96]	; 0xffffffa0
   167d4:	movw	r6, #48972	; 0xbf4c
   167d8:	movt	r6, #1
   167dc:	ldm	r5, {r8, sl}
   167e0:	cmp	sl, #0
   167e4:	sub	sl, sl, #1
   167e8:	beq	16828 <argp_failure@@Base+0x1254>
   167ec:	add	r8, r8, #24
   167f0:	ldr	r0, [r8, #-24]	; 0xffffffe8
   167f4:	sub	sl, sl, #1
   167f8:	cmp	r0, #0
   167fc:	beq	1681c <argp_failure@@Base+0x1248>
   16800:	ldr	r3, [r8, #-12]
   16804:	mov	r1, r6
   16808:	tst	r3, #2
   1680c:	bne	1681c <argp_failure@@Base+0x1248>
   16810:	bl	10fd4 <strcmp@plt>
   16814:	cmp	r0, #0
   16818:	beq	16840 <argp_failure@@Base+0x126c>
   1681c:	cmn	sl, #1
   16820:	add	r8, r8, #24
   16824:	bne	167f0 <argp_failure@@Base+0x121c>
   16828:	cmp	r4, #0
   1682c:	add	r5, r5, #28
   16830:	sub	r4, r4, #1
   16834:	bne	167dc <argp_failure@@Base+0x1208>
   16838:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1683c:	b	16858 <argp_failure@@Base+0x1284>
   16840:	mvn	r3, #0
   16844:	str	r3, [r5, #12]
   16848:	ldr	r3, [fp, #-112]	; 0xffffff90
   1684c:	ldr	r1, [r3, #4]
   16850:	cmp	r1, #0
   16854:	beq	1586c <argp_failure@@Base+0x298>
   16858:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1685c:	mov	r3, #0
   16860:	str	r3, [r2, #24]
   16864:	add	r3, r3, #1
   16868:	add	r2, r2, #28
   1686c:	cmp	r1, r3
   16870:	bhi	16860 <argp_failure@@Base+0x128c>
   16874:	movw	r3, #18580	; 0x4894
   16878:	movt	r3, #1
   1687c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16880:	mov	r2, #28
   16884:	bl	11244 <qsort@plt>
   16888:	ldr	r3, [fp, #-104]	; 0xffffff98
   1688c:	ands	r4, r3, #3
   16890:	beq	15878 <argp_failure@@Base+0x2a4>
   16894:	b	15ec0 <argp_failure@@Base+0x8ec>
   16898:	sub	r2, fp, #76	; 0x4c
   1689c:	ldr	r0, [r4, #16]
   168a0:	ldr	r1, [r9, #20]
   168a4:	bl	1390c <__assert_fail@plt+0x2674>
   168a8:	b	16434 <argp_failure@@Base+0xe60>
   168ac:	mov	r2, r7
   168b0:	mov	r1, r5
   168b4:	mov	r0, r8
   168b8:	bl	11280 <strncmp@plt>
   168bc:	cmp	r0, #0
   168c0:	bne	164ec <argp_failure@@Base+0xf18>
   168c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   168c8:	cmp	r3, #0
   168cc:	beq	1674c <argp_failure@@Base+0x1178>
   168d0:	ldrb	r2, [r5, #14]
   168d4:	cmp	r2, #0
   168d8:	movweq	r3, #48784	; 0xbe90
   168dc:	movteq	r3, #1
   168e0:	bne	1674c <argp_failure@@Base+0x1178>
   168e4:	b	16584 <argp_failure@@Base+0xfb0>
   168e8:	mov	r2, r7
   168ec:	mov	r1, r5
   168f0:	mov	r0, r8
   168f4:	bl	11280 <strncmp@plt>
   168f8:	cmp	r0, #0
   168fc:	bne	16500 <argp_failure@@Base+0xf2c>
   16900:	b	168c4 <argp_failure@@Base+0x12f0>
   16904:	mov	r2, r7
   16908:	mov	r1, r5
   1690c:	mov	r0, r8
   16910:	bl	11280 <strncmp@plt>
   16914:	cmp	r0, #0
   16918:	bne	16514 <argp_failure@@Base+0xf40>
   1691c:	b	168c4 <argp_failure@@Base+0x12f0>
   16920:	mov	r2, r7
   16924:	mov	r1, r5
   16928:	mov	r0, r8
   1692c:	bl	11280 <strncmp@plt>
   16930:	cmp	r0, #0
   16934:	bne	16528 <argp_failure@@Base+0xf54>
   16938:	b	168c4 <argp_failure@@Base+0x12f0>
   1693c:	ldr	r3, [r7, #28]
   16940:	ldr	r1, [r7, #32]
   16944:	add	r2, r3, #12
   16948:	cmp	r1, r2
   1694c:	bcs	16968 <argp_failure@@Base+0x1394>
   16950:	mov	r1, #12
   16954:	mov	r0, r7
   16958:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   1695c:	cmp	r0, #0
   16960:	beq	15fdc <argp_failure@@Base+0xa08>
   16964:	ldr	r3, [r7, #28]
   16968:	movw	r2, #49004	; 0xbf6c
   1696c:	movt	r2, #1
   16970:	ldrd	r0, [r2]
   16974:	ldr	r2, [r2, #8]
   16978:	str	r0, [r3]
   1697c:	str	r1, [r3, #4]
   16980:	str	r2, [r3, #8]
   16984:	ldr	r3, [r7, #28]
   16988:	add	r3, r3, #12
   1698c:	str	r3, [r7, #28]
   16990:	b	15fdc <argp_failure@@Base+0xa08>
   16994:	mov	r2, r7
   16998:	mov	r1, r5
   1699c:	mov	r0, r8
   169a0:	bl	11280 <strncmp@plt>
   169a4:	cmp	r0, #0
   169a8:	bne	1653c <argp_failure@@Base+0xf68>
   169ac:	b	168c4 <argp_failure@@Base+0x12f0>
   169b0:	mov	r2, r7
   169b4:	mov	r1, r5
   169b8:	mov	r0, r8
   169bc:	bl	11280 <strncmp@plt>
   169c0:	cmp	r0, #0
   169c4:	bne	16550 <argp_failure@@Base+0xf7c>
   169c8:	b	168c4 <argp_failure@@Base+0x12f0>
   169cc:	mov	r2, r7
   169d0:	mov	r1, r5
   169d4:	mov	r0, r8
   169d8:	bl	11280 <strncmp@plt>
   169dc:	cmp	r0, #0
   169e0:	bne	16564 <argp_failure@@Base+0xf90>
   169e4:	b	168c4 <argp_failure@@Base+0x12f0>
   169e8:	mov	r2, r7
   169ec:	mov	r1, r5
   169f0:	mov	r0, r8
   169f4:	bl	11280 <strncmp@plt>
   169f8:	cmp	r0, #0
   169fc:	bne	16578 <argp_failure@@Base+0xfa4>
   16a00:	b	168c4 <argp_failure@@Base+0x12f0>
   16a04:	ldr	r4, [fp, #-112]	; 0xffffff90
   16a08:	ldr	r0, [r4]
   16a0c:	bl	18618 <argp_parse@@Base+0x1038>
   16a10:	ldr	r0, [r4, #8]
   16a14:	bl	18618 <argp_parse@@Base+0x1038>
   16a18:	b	15cc4 <argp_failure@@Base+0x6f0>
   16a1c:	ldrb	r3, [r8, #1]
   16a20:	cmp	r3, #111	; 0x6f
   16a24:	bne	16714 <argp_failure@@Base+0x1140>
   16a28:	ldrb	r3, [r8, #2]
   16a2c:	cmp	r3, #45	; 0x2d
   16a30:	bne	16714 <argp_failure@@Base+0x1140>
   16a34:	mov	r3, #0
   16a38:	add	r8, r8, #3
   16a3c:	sub	r7, r7, #3
   16a40:	str	r3, [fp, #-112]	; 0xffffff90
   16a44:	mov	r3, #1
   16a48:	str	r3, [fp, #-96]	; 0xffffffa0
   16a4c:	b	164c8 <argp_failure@@Base+0xef4>
   16a50:	ldr	r1, [r7, #16]
   16a54:	ldr	r2, [r7, #24]
   16a58:	sub	r3, r3, r2
   16a5c:	cmp	r3, r1
   16a60:	bhi	16bc8 <argp_failure@@Base+0x15f4>
   16a64:	ldr	r3, [r7, #20]
   16a68:	cmp	r3, #0
   16a6c:	subge	r6, r6, r3
   16a70:	cmp	r6, #0
   16a74:	sub	r6, r6, #1
   16a78:	ble	16380 <argp_failure@@Base+0xdac>
   16a7c:	mov	r8, #32
   16a80:	ldr	r3, [r7, #28]
   16a84:	mov	r1, #1
   16a88:	mov	r0, r7
   16a8c:	sub	r6, r6, #1
   16a90:	ldr	r2, [r7, #32]
   16a94:	cmp	r3, r2
   16a98:	bcc	16aac <argp_failure@@Base+0x14d8>
   16a9c:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16aa0:	cmp	r0, #0
   16aa4:	beq	16ab8 <argp_failure@@Base+0x14e4>
   16aa8:	ldr	r3, [r7, #28]
   16aac:	add	r2, r3, #1
   16ab0:	str	r2, [r7, #28]
   16ab4:	strb	r8, [r3]
   16ab8:	cmn	r6, #1
   16abc:	bne	16a80 <argp_failure@@Base+0x14ac>
   16ac0:	b	16380 <argp_failure@@Base+0xdac>
   16ac4:	ldr	r2, [r7, #32]
   16ac8:	cmp	r2, r3
   16acc:	bls	16b74 <argp_failure@@Base+0x15a0>
   16ad0:	add	r1, r3, #1
   16ad4:	mov	r2, #10
   16ad8:	str	r1, [r7, #28]
   16adc:	strb	r2, [r3]
   16ae0:	b	16380 <argp_failure@@Base+0xdac>
   16ae4:	mov	r0, r7
   16ae8:	bl	19b30 <argp_parse@@Base+0x2550>
   16aec:	ldr	r1, [r7, #16]
   16af0:	ldrd	r2, [r7, #24]
   16af4:	ldr	sl, [fp, #-96]	; 0xffffffa0
   16af8:	ldr	r8, [r7, #20]
   16afc:	sub	r2, r3, r2
   16b00:	cmp	r2, r1
   16b04:	ldr	r6, [sl, #20]
   16b08:	bic	r8, r8, r8, asr #31
   16b0c:	bls	16314 <argp_failure@@Base+0xd40>
   16b10:	mov	r0, r7
   16b14:	bl	19b30 <argp_parse@@Base+0x2550>
   16b18:	ldr	r1, [r7, #16]
   16b1c:	str	r6, [r7, #4]
   16b20:	mov	r6, sl
   16b24:	ldrd	r2, [r7, #24]
   16b28:	ldr	sl, [sl, #20]
   16b2c:	sub	r2, r3, r2
   16b30:	cmp	r2, r1
   16b34:	bls	16dbc <argp_failure@@Base+0x17e8>
   16b38:	mov	r0, r7
   16b3c:	bl	19b30 <argp_parse@@Base+0x2550>
   16b40:	ldr	r6, [r6, #20]
   16b44:	ldr	r3, [r7, #28]
   16b48:	b	1631c <argp_failure@@Base+0xd48>
   16b4c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16b50:	bl	110c4 <funlockfile@plt>
   16b54:	b	15cd4 <argp_failure@@Base+0x700>
   16b58:	movw	r3, #48872	; 0xbee8
   16b5c:	movt	r3, #1
   16b60:	str	r8, [sp]
   16b64:	mov	r1, r2
   16b68:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16b6c:	bl	155d4 <argp_failure@@Base>
   16b70:	b	15d84 <argp_failure@@Base+0x7b0>
   16b74:	mov	r1, #1
   16b78:	mov	r0, r7
   16b7c:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16b80:	cmp	r0, #0
   16b84:	beq	16380 <argp_failure@@Base+0xdac>
   16b88:	ldr	r3, [r7, #28]
   16b8c:	b	16ad0 <argp_failure@@Base+0x14fc>
   16b90:	mov	r1, #1
   16b94:	mov	r0, r7
   16b98:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16b9c:	cmp	r0, #0
   16ba0:	ldrne	r3, [r7, #28]
   16ba4:	bne	161bc <argp_failure@@Base+0xbe8>
   16ba8:	b	161cc <argp_failure@@Base+0xbf8>
   16bac:	mov	r1, #1
   16bb0:	mov	r0, r7
   16bb4:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16bb8:	cmp	r0, #0
   16bbc:	ldrne	r3, [r7, #28]
   16bc0:	bne	15e44 <argp_failure@@Base+0x870>
   16bc4:	b	15e54 <argp_failure@@Base+0x880>
   16bc8:	mov	r0, r7
   16bcc:	bl	19b30 <argp_parse@@Base+0x2550>
   16bd0:	b	16a64 <argp_failure@@Base+0x1490>
   16bd4:	ldrb	r3, [r4, #1]
   16bd8:	add	r4, r4, #1
   16bdc:	lsl	r3, r3, #1
   16be0:	ldrh	r3, [r1, r3]
   16be4:	tst	r3, #8192	; 0x2000
   16be8:	beq	164b8 <argp_failure@@Base+0xee4>
   16bec:	ldrb	r3, [r4, #1]!
   16bf0:	lsl	r3, r3, #1
   16bf4:	ldrh	r3, [r1, r3]
   16bf8:	tst	r3, #8192	; 0x2000
   16bfc:	bne	16bec <argp_failure@@Base+0x1618>
   16c00:	b	164b8 <argp_failure@@Base+0xee4>
   16c04:	mov	r2, #10
   16c08:	mov	r1, #0
   16c0c:	mov	r0, r4
   16c10:	bl	10fe0 <strtol@plt>
   16c14:	ldrb	r3, [r4]
   16c18:	ldr	r2, [r6]
   16c1c:	lsl	r3, r3, #1
   16c20:	ldrh	r3, [r2, r3]
   16c24:	str	r0, [fp, #-112]	; 0xffffff90
   16c28:	tst	r3, #2048	; 0x800
   16c2c:	beq	16c44 <argp_failure@@Base+0x1670>
   16c30:	ldrb	r3, [r4, #1]!
   16c34:	lsl	r3, r3, #1
   16c38:	ldrh	r3, [r2, r3]
   16c3c:	tst	r3, #2048	; 0x800
   16c40:	bne	16c30 <argp_failure@@Base+0x165c>
   16c44:	ands	r3, r3, #8192	; 0x2000
   16c48:	beq	16c60 <argp_failure@@Base+0x168c>
   16c4c:	ldrb	r3, [r4, #1]!
   16c50:	lsl	r3, r3, #1
   16c54:	ldrh	r3, [r2, r3]
   16c58:	ands	r3, r3, #8192	; 0x2000
   16c5c:	bne	16c4c <argp_failure@@Base+0x1678>
   16c60:	str	r3, [fp, #-96]	; 0xffffffa0
   16c64:	b	164c8 <argp_failure@@Base+0xef4>
   16c68:	mov	r2, r0
   16c6c:	mov	r4, r8
   16c70:	b	164a4 <argp_failure@@Base+0xed0>
   16c74:	movw	r5, #48652	; 0xbe0c
   16c78:	movt	r5, #1
   16c7c:	mov	r4, r1
   16c80:	ldr	r3, [r7, #28]
   16c84:	ldr	r2, [r7, #32]
   16c88:	cmp	r3, r2
   16c8c:	bcc	16ca8 <argp_failure@@Base+0x16d4>
   16c90:	mov	r1, #1
   16c94:	mov	r0, r7
   16c98:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16c9c:	cmp	r0, #0
   16ca0:	beq	16cb8 <argp_failure@@Base+0x16e4>
   16ca4:	ldr	r3, [r7, #28]
   16ca8:	add	r1, r3, #1
   16cac:	mov	r2, #10
   16cb0:	str	r1, [r7, #28]
   16cb4:	strb	r2, [r3]
   16cb8:	mov	r0, r5
   16cbc:	bl	11178 <strlen@plt>
   16cc0:	subs	r6, r0, #0
   16cc4:	ldr	r0, [r7, #28]
   16cc8:	ldr	r3, [r7, #32]
   16ccc:	bne	16d74 <argp_failure@@Base+0x17a0>
   16cd0:	cmp	r0, r3
   16cd4:	bcc	16cf0 <argp_failure@@Base+0x171c>
   16cd8:	mov	r1, #1
   16cdc:	mov	r0, r7
   16ce0:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16ce4:	cmp	r0, #0
   16ce8:	beq	15c2c <argp_failure@@Base+0x658>
   16cec:	ldr	r0, [r7, #28]
   16cf0:	add	r2, r0, #1
   16cf4:	mov	r3, #10
   16cf8:	str	r2, [r7, #28]
   16cfc:	strb	r3, [r0]
   16d00:	b	15c2c <argp_failure@@Base+0x658>
   16d04:	movw	r5, #48652	; 0xbe0c
   16d08:	movt	r5, #1
   16d0c:	b	16c80 <argp_failure@@Base+0x16ac>
   16d10:	ldr	r3, [pc, #180]	; 16dcc <argp_failure@@Base+0x17f8>
   16d14:	movw	r0, #48956	; 0xbf3c
   16d18:	movt	r0, #1
   16d1c:	mov	r2, #0
   16d20:	mov	r1, r2
   16d24:	stm	sp, {r0, r3}
   16d28:	movw	r3, #48904	; 0xbf08
   16d2c:	movt	r3, #1
   16d30:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16d34:	bl	155d4 <argp_failure@@Base>
   16d38:	b	15840 <argp_failure@@Base+0x26c>
   16d3c:	ldr	r3, [pc, #140]	; 16dd0 <argp_failure@@Base+0x17fc>
   16d40:	b	16d14 <argp_failure@@Base+0x1740>
   16d44:	ldr	r3, [pc, #136]	; 16dd4 <argp_failure@@Base+0x1800>
   16d48:	b	16d14 <argp_failure@@Base+0x1740>
   16d4c:	ldr	r3, [pc, #132]	; 16dd8 <argp_failure@@Base+0x1804>
   16d50:	b	16d14 <argp_failure@@Base+0x1740>
   16d54:	ldr	r3, [pc, #128]	; 16ddc <argp_failure@@Base+0x1808>
   16d58:	b	16d14 <argp_failure@@Base+0x1740>
   16d5c:	ldr	r3, [pc, #124]	; 16de0 <argp_failure@@Base+0x180c>
   16d60:	b	16d14 <argp_failure@@Base+0x1740>
   16d64:	mov	r4, r5
   16d68:	movw	r5, #48652	; 0xbe0c
   16d6c:	movt	r5, #1
   16d70:	b	16c80 <argp_failure@@Base+0x16ac>
   16d74:	add	r2, r0, r6
   16d78:	cmp	r3, r2
   16d7c:	bcs	16d9c <argp_failure@@Base+0x17c8>
   16d80:	mov	r1, r6
   16d84:	mov	r0, r7
   16d88:	bl	1a1c0 <argp_parse@@Base+0x2be0>
   16d8c:	cmp	r0, #0
   16d90:	ldr	r0, [r7, #28]
   16d94:	ldreq	r3, [r7, #32]
   16d98:	beq	16cd0 <argp_failure@@Base+0x16fc>
   16d9c:	mov	r2, r6
   16da0:	mov	r1, r5
   16da4:	bl	11058 <memcpy@plt>
   16da8:	ldr	r0, [r7, #28]
   16dac:	ldr	r3, [r7, #32]
   16db0:	add	r0, r0, r6
   16db4:	str	r0, [r7, #28]
   16db8:	b	16cd0 <argp_failure@@Base+0x16fc>
   16dbc:	mov	r6, sl
   16dc0:	b	1631c <argp_failure@@Base+0xd48>
   16dc4:	andeq	fp, r1, ip, asr #24
   16dc8:	andeq	fp, r1, ip, asr ip
   16dcc:	andeq	fp, r1, ip, ror #24
   16dd0:	andeq	fp, r1, ip, ror ip
   16dd4:	andeq	fp, r1, ip, lsl #25
   16dd8:	muleq	r1, ip, ip
   16ddc:	andeq	fp, r1, ip, lsr #25
   16de0:			; <UNDEFINED> instruction: 0x0001bcbc
   16de4:	andeq	fp, r1, ip, asr #25

00016de8 <argp_help@@Base>:
   16de8:	push	{lr}		; (str lr, [sp, #-4]!)
   16dec:	sub	sp, sp, #12
   16df0:	str	r3, [sp]
   16df4:	mov	r3, r2
   16df8:	mov	r2, r1
   16dfc:	mov	r1, #0
   16e00:	bl	157f0 <argp_failure@@Base+0x21c>
   16e04:	add	sp, sp, #12
   16e08:	pop	{pc}		; (ldr pc, [sp], #4)

00016e0c <argp_state_help@@Base>:
   16e0c:	strd	r4, [sp, #-12]!
   16e10:	subs	r4, r0, #0
   16e14:	mov	r5, r2
   16e18:	str	lr, [sp, #8]
   16e1c:	sub	sp, sp, #12
   16e20:	beq	16e90 <argp_state_help@@Base+0x84>
   16e24:	ldr	r3, [r4, #16]
   16e28:	adds	r2, r1, #0
   16e2c:	movne	r2, #1
   16e30:	eor	r0, r3, #2
   16e34:	ands	r2, r2, r0, lsr #1
   16e38:	bne	16e4c <argp_state_help@@Base+0x40>
   16e3c:	add	sp, sp, #12
   16e40:	ldrd	r4, [sp]
   16e44:	add	sp, sp, #8
   16e48:	pop	{pc}		; (ldr pc, [sp], #4)
   16e4c:	ldr	r0, [r4, #40]	; 0x28
   16e50:	tst	r3, #64	; 0x40
   16e54:	mov	r2, r1
   16e58:	orrne	r5, r5, #128	; 0x80
   16e5c:	mov	r1, r4
   16e60:	mov	r3, r5
   16e64:	str	r0, [sp]
   16e68:	ldr	r0, [r4]
   16e6c:	bl	157f0 <argp_failure@@Base+0x21c>
   16e70:	ldr	r3, [r4, #16]
   16e74:	tst	r3, #32
   16e78:	bne	16e3c <argp_state_help@@Base+0x30>
   16e7c:	ands	r0, r5, #256	; 0x100
   16e80:	bne	16ebc <argp_state_help@@Base+0xb0>
   16e84:	tst	r5, #512	; 0x200
   16e88:	beq	16e3c <argp_state_help@@Base+0x30>
   16e8c:	bl	1116c <exit@plt>
   16e90:	cmp	r1, #0
   16e94:	beq	16e3c <argp_state_help@@Base+0x30>
   16e98:	movw	r3, #53904	; 0xd290
   16e9c:	movt	r3, #2
   16ea0:	ldr	ip, [r3]
   16ea4:	mov	r2, r1
   16ea8:	mov	r3, r5
   16eac:	mov	r1, r4
   16eb0:	str	ip, [sp]
   16eb4:	bl	157f0 <argp_failure@@Base+0x21c>
   16eb8:	b	16e7c <argp_state_help@@Base+0x70>
   16ebc:	movw	r3, #53884	; 0xd27c
   16ec0:	movt	r3, #2
   16ec4:	ldr	r0, [r3]
   16ec8:	bl	1116c <exit@plt>

00016ecc <argp_error@@Base>:
   16ecc:	push	{r1, r2, r3}
   16ed0:	strd	r4, [sp, #-12]!
   16ed4:	subs	r5, r0, #0
   16ed8:	str	lr, [sp, #8]
   16edc:	sub	sp, sp, #8
   16ee0:	beq	16fb8 <argp_error@@Base+0xec>
   16ee4:	ldr	r3, [r5, #16]
   16ee8:	tst	r3, #2
   16eec:	bne	16fa0 <argp_error@@Base+0xd4>
   16ef0:	ldr	r4, [r5, #44]	; 0x2c
   16ef4:	cmp	r4, #0
   16ef8:	beq	16fa0 <argp_error@@Base+0xd4>
   16efc:	mov	r0, r4
   16f00:	bl	1122c <flockfile@plt>
   16f04:	ldr	r0, [r5, #40]	; 0x28
   16f08:	add	r3, sp, #24
   16f0c:	str	r3, [sp, #4]
   16f10:	mov	r1, r4
   16f14:	bl	10fc8 <fputs_unlocked@plt>
   16f18:	ldr	r3, [r4, #20]
   16f1c:	ldr	r2, [r4, #24]
   16f20:	cmp	r3, r2
   16f24:	addcc	r1, r3, #1
   16f28:	movcc	r2, #58	; 0x3a
   16f2c:	strcc	r1, [r4, #20]
   16f30:	strbcc	r2, [r3]
   16f34:	bcs	16ffc <argp_error@@Base+0x130>
   16f38:	ldr	r3, [r4, #20]
   16f3c:	ldr	r2, [r4, #24]
   16f40:	cmp	r3, r2
   16f44:	addcc	r1, r3, #1
   16f48:	movcc	r2, #32
   16f4c:	strcc	r1, [r4, #20]
   16f50:	strbcc	r2, [r3]
   16f54:	bcs	1700c <argp_error@@Base+0x140>
   16f58:	mov	r0, r4
   16f5c:	ldr	r2, [sp, #4]
   16f60:	ldr	r1, [sp, #20]
   16f64:	bl	11214 <vfprintf@plt>
   16f68:	ldr	r3, [r4, #20]
   16f6c:	ldr	r2, [r4, #24]
   16f70:	cmp	r3, r2
   16f74:	addcc	r1, r3, #1
   16f78:	movcc	r2, #10
   16f7c:	strcc	r1, [r4, #20]
   16f80:	strbcc	r2, [r3]
   16f84:	bcs	16fec <argp_error@@Base+0x120>
   16f88:	mov	r0, r5
   16f8c:	mov	r2, #260	; 0x104
   16f90:	mov	r1, r4
   16f94:	bl	16e0c <argp_state_help@@Base>
   16f98:	mov	r0, r4
   16f9c:	bl	110c4 <funlockfile@plt>
   16fa0:	add	sp, sp, #8
   16fa4:	ldrd	r4, [sp]
   16fa8:	ldr	lr, [sp, #8]
   16fac:	add	sp, sp, #12
   16fb0:	add	sp, sp, #12
   16fb4:	bx	lr
   16fb8:	movw	r3, #53912	; 0xd298
   16fbc:	movt	r3, #2
   16fc0:	ldr	r4, [r3]
   16fc4:	cmp	r4, #0
   16fc8:	beq	16fa0 <argp_error@@Base+0xd4>
   16fcc:	mov	r0, r4
   16fd0:	bl	1122c <flockfile@plt>
   16fd4:	add	r2, sp, #24
   16fd8:	movw	r3, #53904	; 0xd290
   16fdc:	movt	r3, #2
   16fe0:	str	r2, [sp, #4]
   16fe4:	ldr	r0, [r3]
   16fe8:	b	16f10 <argp_error@@Base+0x44>
   16fec:	mov	r1, #10
   16ff0:	mov	r0, r4
   16ff4:	bl	111e4 <__overflow@plt>
   16ff8:	b	16f88 <argp_error@@Base+0xbc>
   16ffc:	mov	r1, #58	; 0x3a
   17000:	mov	r0, r4
   17004:	bl	111e4 <__overflow@plt>
   17008:	b	16f38 <argp_error@@Base+0x6c>
   1700c:	mov	r1, #32
   17010:	mov	r0, r4
   17014:	bl	111e4 <__overflow@plt>
   17018:	b	16f58 <argp_error@@Base+0x8c>
   1701c:	ldr	r3, [r0]
   17020:	strd	r4, [sp, #-16]!
   17024:	ldr	r5, [r0, #16]
   17028:	str	r6, [sp, #8]
   1702c:	str	lr, [sp, #12]
   17030:	cmp	r3, #0
   17034:	beq	170e0 <argp_error@@Base+0x214>
   17038:	ldr	r0, [r1, #8]
   1703c:	mov	r2, #0
   17040:	add	r0, r0, #1
   17044:	str	r0, [r1, #8]
   17048:	b	17050 <argp_error@@Base+0x184>
   1704c:	add	r2, r2, #1
   17050:	add	r3, r3, #24
   17054:	ldr	r0, [r3, #-20]	; 0xffffffec
   17058:	cmp	r0, #0
   1705c:	bne	1704c <argp_error@@Base+0x180>
   17060:	ldr	r0, [r3, #-24]	; 0xffffffe8
   17064:	cmp	r0, #0
   17068:	bne	1704c <argp_error@@Base+0x180>
   1706c:	ldr	r0, [r3, #-8]
   17070:	cmp	r0, #0
   17074:	bne	1704c <argp_error@@Base+0x180>
   17078:	ldr	r0, [r3, #-4]
   1707c:	cmp	r0, #0
   17080:	bne	1704c <argp_error@@Base+0x180>
   17084:	ldm	r1, {r0, r3}
   17088:	add	ip, r2, r2, lsl #1
   1708c:	add	r2, r3, r2
   17090:	add	r0, r0, ip
   17094:	stm	r1, {r0, r2}
   17098:	cmp	r5, #0
   1709c:	beq	170d0 <argp_error@@Base+0x204>
   170a0:	ldr	r0, [r5]
   170a4:	cmp	r0, #0
   170a8:	beq	170d0 <argp_error@@Base+0x204>
   170ac:	mov	r4, r1
   170b0:	mov	r1, r4
   170b4:	bl	1701c <argp_error@@Base+0x150>
   170b8:	ldr	r3, [r4, #12]
   170bc:	ldr	r0, [r5, #16]!
   170c0:	add	r3, r3, #1
   170c4:	cmp	r0, #0
   170c8:	str	r3, [r4, #12]
   170cc:	bne	170b0 <argp_error@@Base+0x1e4>
   170d0:	ldrd	r4, [sp]
   170d4:	ldr	r6, [sp, #8]
   170d8:	add	sp, sp, #12
   170dc:	pop	{pc}		; (ldr pc, [sp], #4)
   170e0:	ldr	r3, [r0, #4]
   170e4:	cmp	r3, #0
   170e8:	beq	17098 <argp_error@@Base+0x1cc>
   170ec:	ldr	r3, [r1, #8]
   170f0:	add	r3, r3, #1
   170f4:	str	r3, [r1, #8]
   170f8:	b	17098 <argp_error@@Base+0x1cc>
   170fc:	cmp	r0, #86	; 0x56
   17100:	beq	1710c <argp_error@@Base+0x240>
   17104:	mov	r0, #7
   17108:	bx	lr
   1710c:	movw	r3, #53956	; 0xd2c4
   17110:	movt	r3, #2
   17114:	str	r4, [sp, #-8]!
   17118:	ldr	r3, [r3]
   1711c:	mov	r4, r2
   17120:	str	lr, [sp, #4]
   17124:	cmp	r3, #0
   17128:	beq	17158 <argp_error@@Base+0x28c>
   1712c:	mov	r1, r2
   17130:	ldr	r0, [r2, #48]	; 0x30
   17134:	blx	r3
   17138:	ldr	r0, [r4, #16]
   1713c:	ands	r0, r0, #32
   17140:	beq	17154 <argp_error@@Base+0x288>
   17144:	ldr	r4, [sp]
   17148:	add	sp, sp, #4
   1714c:	mov	r0, #0
   17150:	pop	{pc}		; (ldr pc, [sp], #4)
   17154:	bl	1116c <exit@plt>
   17158:	movw	r3, #54124	; 0xd36c
   1715c:	movt	r3, #2
   17160:	ldr	r2, [r3]
   17164:	cmp	r2, #0
   17168:	beq	17180 <argp_error@@Base+0x2b4>
   1716c:	movw	r1, #49808	; 0xc290
   17170:	movt	r1, #1
   17174:	ldr	r0, [r4, #48]	; 0x30
   17178:	bl	11190 <fprintf@plt>
   1717c:	b	17138 <argp_error@@Base+0x26c>
   17180:	movw	r2, #49408	; 0xc100
   17184:	movt	r2, #1
   17188:	movw	r1, #49444	; 0xc124
   1718c:	movt	r1, #1
   17190:	mov	r0, r4
   17194:	bl	16ecc <argp_error@@Base>
   17198:	b	17138 <argp_error@@Base+0x26c>
   1719c:	cmn	r0, #3
   171a0:	str	r4, [sp, #-8]!
   171a4:	mov	r4, r2
   171a8:	str	lr, [sp, #4]
   171ac:	sub	sp, sp, #8
   171b0:	beq	172b0 <argp_error@@Base+0x3e4>
   171b4:	ble	171ec <argp_error@@Base+0x320>
   171b8:	cmn	r0, #2
   171bc:	beq	17264 <argp_error@@Base+0x398>
   171c0:	cmp	r0, #63	; 0x3f
   171c4:	bne	17250 <argp_error@@Base+0x384>
   171c8:	mov	r0, r4
   171cc:	movw	r2, #634	; 0x27a
   171d0:	ldr	r1, [r4, #48]	; 0x30
   171d4:	bl	16e0c <argp_state_help@@Base>
   171d8:	mov	r0, #0
   171dc:	add	sp, sp, #8
   171e0:	ldr	r4, [sp]
   171e4:	add	sp, sp, #4
   171e8:	pop	{pc}		; (ldr pc, [sp], #4)
   171ec:	cmn	r0, #4
   171f0:	bne	17250 <argp_error@@Base+0x384>
   171f4:	cmp	r1, #0
   171f8:	movw	r0, #49448	; 0xc128
   171fc:	movt	r0, #1
   17200:	mov	r2, #10
   17204:	movne	r0, r1
   17208:	movw	r4, #53952	; 0xd2c0
   1720c:	movt	r4, #2
   17210:	mov	r1, #0
   17214:	bl	10fe0 <strtol@plt>
   17218:	str	r0, [r4]
   1721c:	b	17228 <argp_error@@Base+0x35c>
   17220:	mov	r0, #1
   17224:	bl	11088 <sleep@plt>
   17228:	ldr	r3, [r4]
   1722c:	sub	r2, r3, #1
   17230:	cmp	r3, #0
   17234:	str	r2, [r4]
   17238:	bgt	17220 <argp_error@@Base+0x354>
   1723c:	mov	r0, #0
   17240:	add	sp, sp, #8
   17244:	ldr	r4, [sp]
   17248:	add	sp, sp, #4
   1724c:	pop	{pc}		; (ldr pc, [sp], #4)
   17250:	mov	r0, #7
   17254:	add	sp, sp, #8
   17258:	ldr	r4, [sp]
   1725c:	add	sp, sp, #4
   17260:	pop	{pc}		; (ldr pc, [sp], #4)
   17264:	movw	r3, #53908	; 0xd294
   17268:	movt	r3, #2
   1726c:	str	r1, [sp, #4]
   17270:	mov	r0, r1
   17274:	str	r1, [r3]
   17278:	bl	18544 <argp_parse@@Base+0xf64>
   1727c:	ldr	r3, [r4, #16]
   17280:	movw	r2, #53904	; 0xd290
   17284:	movt	r2, #2
   17288:	str	r0, [r4, #40]	; 0x28
   1728c:	str	r0, [r2]
   17290:	ldr	r1, [sp, #4]
   17294:	and	r3, r3, #3
   17298:	cmp	r3, #1
   1729c:	bne	1723c <argp_error@@Base+0x370>
   172a0:	ldr	r3, [r4, #8]
   172a4:	mov	r0, #0
   172a8:	str	r1, [r3]
   172ac:	b	171dc <argp_error@@Base+0x310>
   172b0:	ldr	r1, [r4, #48]	; 0x30
   172b4:	mov	r0, r4
   172b8:	movw	r2, #513	; 0x201
   172bc:	bl	16e0c <argp_state_help@@Base>
   172c0:	mov	r0, #0
   172c4:	add	sp, sp, #8
   172c8:	ldr	r4, [sp]
   172cc:	add	sp, sp, #4
   172d0:	pop	{pc}		; (ldr pc, [sp], #4)
   172d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   172d8:	strd	r6, [sp, #8]
   172dc:	strd	r8, [sp, #16]
   172e0:	strd	sl, [sp, #24]
   172e4:	str	lr, [sp, #32]
   172e8:	sub	sp, sp, #44	; 0x2c
   172ec:	ldr	fp, [r0]
   172f0:	str	r3, [sp, #16]
   172f4:	ldr	r3, [r0, #16]
   172f8:	ldr	r7, [sp, #80]	; 0x50
   172fc:	cmp	fp, #0
   17300:	str	r3, [sp, #24]
   17304:	strd	r0, [sp, #28]
   17308:	str	r2, [sp, #36]	; 0x24
   1730c:	beq	175b8 <argp_error@@Base+0x6ec>
   17310:	ldr	r9, [r7, #4]
   17314:	movw	r3, #36409	; 0x8e39
   17318:	movt	r3, #14563	; 0x38e3
   1731c:	mov	r4, fp
   17320:	str	r3, [sp, #20]
   17324:	ldr	r6, [r4, #4]
   17328:	cmp	r6, #0
   1732c:	bne	1733c <argp_error@@Base+0x470>
   17330:	ldr	r3, [r4]
   17334:	cmp	r3, #0
   17338:	beq	174b0 <argp_error@@Base+0x5e4>
   1733c:	ldr	r3, [r4, #12]
   17340:	tst	r3, #4
   17344:	moveq	r5, r3
   17348:	moveq	fp, r4
   1734c:	ldrne	r5, [fp, #12]
   17350:	ands	r5, r5, #8
   17354:	bne	17498 <argp_error@@Base+0x5cc>
   17358:	tst	r3, #8
   1735c:	bne	173dc <argp_error@@Base+0x510>
   17360:	sub	r3, r6, #1
   17364:	cmp	r3, #254	; 0xfe
   17368:	bhi	173dc <argp_error@@Base+0x510>
   1736c:	bl	11154 <__ctype_b_loc@plt>
   17370:	ldr	r1, [r0]
   17374:	lsl	r3, r6, #1
   17378:	ldrh	r3, [r1, r3]
   1737c:	tst	r3, #16384	; 0x4000
   17380:	beq	173dc <argp_error@@Base+0x510>
   17384:	add	r3, r9, #1
   17388:	str	r3, [r7, #4]
   1738c:	strb	r6, [r9]
   17390:	ldr	r3, [fp, #8]
   17394:	cmp	r3, #0
   17398:	beq	173cc <argp_error@@Base+0x500>
   1739c:	ldr	r3, [r7, #4]
   173a0:	mov	r2, #58	; 0x3a
   173a4:	add	r1, r3, #1
   173a8:	str	r1, [r7, #4]
   173ac:	strb	r2, [r3]
   173b0:	ldr	r3, [fp, #12]
   173b4:	tst	r3, #1
   173b8:	beq	173cc <argp_error@@Base+0x500>
   173bc:	ldr	r3, [r7, #4]
   173c0:	add	r1, r3, #1
   173c4:	str	r1, [r7, #4]
   173c8:	strb	r2, [r3]
   173cc:	ldr	r3, [r7, #4]
   173d0:	mov	r2, #0
   173d4:	strb	r2, [r3]
   173d8:	ldr	r9, [r7, #4]
   173dc:	ldr	sl, [r4]
   173e0:	cmp	sl, #0
   173e4:	beq	17498 <argp_error@@Base+0x5cc>
   173e8:	ldr	r3, [r7]
   173ec:	ldr	r8, [r3, #8]
   173f0:	str	r3, [sp, #12]
   173f4:	ldr	r0, [r8]
   173f8:	cmp	r0, #0
   173fc:	beq	17420 <argp_error@@Base+0x554>
   17400:	mov	r6, r8
   17404:	mov	r1, sl
   17408:	bl	10fd4 <strcmp@plt>
   1740c:	cmp	r0, #0
   17410:	beq	174a0 <argp_error@@Base+0x5d4>
   17414:	ldr	r0, [r6, #16]!
   17418:	cmp	r0, #0
   1741c:	bne	17404 <argp_error@@Base+0x538>
   17420:	ldr	r0, [fp, #8]
   17424:	ldr	r1, [r7, #8]
   17428:	cmp	r0, #0
   1742c:	str	sl, [r1]
   17430:	beq	17444 <argp_error@@Base+0x578>
   17434:	ldr	r3, [fp, #12]
   17438:	tst	r3, #1
   1743c:	movne	r5, #2
   17440:	moveq	r5, #1
   17444:	str	r5, [r1, #4]
   17448:	mov	r3, #0
   1744c:	add	ip, r1, #16
   17450:	ldr	r0, [r4, #4]
   17454:	str	r3, [r1, #8]
   17458:	ldr	r2, [sp, #16]
   1745c:	cmp	r0, r3
   17460:	ldr	r3, [sp, #12]
   17464:	ldreq	r0, [fp, #4]
   17468:	ldr	r3, [r3, #48]	; 0x30
   1746c:	bic	r0, r0, #-16777216	; 0xff000000
   17470:	sub	r3, r2, r3
   17474:	ldr	r2, [sp, #20]
   17478:	asr	r3, r3, #2
   1747c:	mul	r3, r2, r3
   17480:	add	r3, r3, #1
   17484:	add	r3, r0, r3, lsl #24
   17488:	str	r3, [r1, #12]
   1748c:	mov	r3, #0
   17490:	str	ip, [r7, #8]
   17494:	str	r3, [r1, #16]
   17498:	add	r4, r4, #24
   1749c:	b	17324 <argp_error@@Base+0x458>
   174a0:	sub	r6, r6, r8
   174a4:	cmp	r6, #0
   174a8:	bge	17498 <argp_error@@Base+0x5cc>
   174ac:	b	17420 <argp_error@@Base+0x554>
   174b0:	ldr	r3, [r4, #16]
   174b4:	cmp	r3, #0
   174b8:	bne	1733c <argp_error@@Base+0x470>
   174bc:	ldr	r3, [r4, #20]
   174c0:	cmp	r3, #0
   174c4:	bne	1733c <argp_error@@Base+0x470>
   174c8:	ldr	r3, [sp, #28]
   174cc:	ldr	r2, [r3, #4]
   174d0:	mov	r3, #0
   174d4:	ldr	r1, [sp, #16]
   174d8:	ldr	r0, [sp, #24]
   174dc:	str	r2, [r1]
   174e0:	mov	r2, r1
   174e4:	ldr	r1, [sp, #28]
   174e8:	cmp	r0, r3
   174ec:	stmib	r2, {r1, r9}
   174f0:	ldr	r1, [sp, #32]
   174f4:	str	r3, [r2, #12]
   174f8:	str	r1, [r2, #16]
   174fc:	ldr	r1, [sp, #36]	; 0x24
   17500:	str	r3, [r2, #24]
   17504:	str	r3, [r2, #28]
   17508:	str	r3, [r2, #32]
   1750c:	str	r1, [r2, #20]
   17510:	beq	1754c <argp_error@@Base+0x680>
   17514:	ldr	r2, [r0]
   17518:	cmp	r2, r3
   1751c:	beq	175d8 <argp_error@@Base+0x70c>
   17520:	mov	r1, r0
   17524:	add	r3, r3, #1
   17528:	ldr	r2, [r1, r3, lsl #4]
   1752c:	cmp	r2, #0
   17530:	bne	17524 <argp_error@@Base+0x658>
   17534:	lsl	r3, r3, #2
   17538:	ldr	r2, [r7, #12]
   1753c:	ldr	r1, [sp, #16]
   17540:	add	r3, r2, r3
   17544:	str	r2, [r1, #28]
   17548:	str	r3, [r7, #12]
   1754c:	ldr	r3, [sp, #16]
   17550:	add	r0, r3, #36	; 0x24
   17554:	ldr	r5, [sp, #24]
   17558:	cmp	r5, #0
   1755c:	beq	1759c <argp_error@@Base+0x6d0>
   17560:	ldr	r1, [r5]
   17564:	cmp	r1, #0
   17568:	beq	1759c <argp_error@@Base+0x6d0>
   1756c:	ldr	r6, [sp, #16]
   17570:	mov	r2, #0
   17574:	add	r4, r2, #1
   17578:	mov	r3, r0
   1757c:	str	r7, [sp]
   17580:	mov	r0, r1
   17584:	mov	r1, r6
   17588:	bl	172d4 <argp_error@@Base+0x408>
   1758c:	ldr	r1, [r5, r4, lsl #4]
   17590:	mov	r2, r4
   17594:	cmp	r1, #0
   17598:	bne	17574 <argp_error@@Base+0x6a8>
   1759c:	add	sp, sp, #44	; 0x2c
   175a0:	ldrd	r4, [sp]
   175a4:	ldrd	r6, [sp, #8]
   175a8:	ldrd	r8, [sp, #16]
   175ac:	ldrd	sl, [sp, #24]
   175b0:	add	sp, sp, #32
   175b4:	pop	{pc}		; (ldr pc, [sp], #4)
   175b8:	ldr	r2, [r0, #4]
   175bc:	cmp	r2, #0
   175c0:	beq	175cc <argp_error@@Base+0x700>
   175c4:	ldr	r9, [r7, #4]
   175c8:	b	174d0 <argp_error@@Base+0x604>
   175cc:	ldr	r0, [sp, #16]
   175d0:	str	r2, [sp, #16]
   175d4:	b	17554 <argp_error@@Base+0x688>
   175d8:	mov	r3, r2
   175dc:	b	17538 <argp_error@@Base+0x66c>

000175e0 <argp_parse@@Base>:
   175e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   175e4:	tst	r3, #1
   175e8:	mov	r4, r3
   175ec:	strd	r6, [sp, #8]
   175f0:	strd	r8, [sp, #16]
   175f4:	strd	sl, [sp, #24]
   175f8:	add	fp, sp, #32
   175fc:	str	lr, [sp, #32]
   17600:	sub	sp, sp, #236	; 0xec
   17604:	str	r1, [fp, #-256]	; 0xffffff00
   17608:	str	r2, [fp, #-236]	; 0xffffff14
   1760c:	str	r0, [fp, #-232]	; 0xffffff18
   17610:	bne	1763c <argp_parse@@Base+0x5c>
   17614:	movw	r3, #53908	; 0xd294
   17618:	movt	r3, #2
   1761c:	ldr	r2, [r3]
   17620:	cmp	r2, #0
   17624:	beq	18068 <argp_parse@@Base+0xa88>
   17628:	movw	r5, #53904	; 0xd290
   1762c:	movt	r5, #2
   17630:	ldr	r3, [r5]
   17634:	cmp	r3, #0
   17638:	beq	18078 <argp_parse@@Base+0xa98>
   1763c:	ands	r3, r4, #4
   17640:	moveq	r5, #1
   17644:	movne	r5, #0
   17648:	ands	ip, r4, #16
   1764c:	str	r3, [fp, #-240]	; 0xffffff10
   17650:	beq	176a8 <argp_parse@@Base+0xc8>
   17654:	ldr	r2, [fp, #-232]	; 0xffffff18
   17658:	mov	r3, #0
   1765c:	sub	r9, fp, #196	; 0xc4
   17660:	str	r5, [fp, #-228]	; 0xffffff1c
   17664:	str	r3, [fp, #-224]	; 0xffffff20
   17668:	str	r3, [fp, #-220]	; 0xffffff24
   1766c:	str	r3, [fp, #-216]	; 0xffffff28
   17670:	cmp	r2, r3
   17674:	str	r3, [r9, #8]
   17678:	str	r3, [r9, #12]
   1767c:	str	r3, [r9, #16]
   17680:	str	r3, [r9, #20]
   17684:	str	r3, [r9, #24]
   17688:	str	r3, [r9, #28]
   1768c:	str	r3, [r9, #32]
   17690:	bne	1775c <argp_parse@@Base+0x17c>
   17694:	mov	r3, #52	; 0x34
   17698:	mov	sl, #36	; 0x24
   1769c:	str	r3, [fp, #-240]	; 0xffffff10
   176a0:	mov	r3, sl
   176a4:	b	17798 <argp_parse@@Base+0x1b8>
   176a8:	sub	sp, sp, #64	; 0x40
   176ac:	mov	r1, ip
   176b0:	add	r3, sp, #8
   176b4:	sub	sp, sp, #32
   176b8:	add	r7, sp, #8
   176bc:	mov	r0, r3
   176c0:	mov	r2, #64	; 0x40
   176c4:	str	ip, [r7]
   176c8:	str	ip, [r7, #4]
   176cc:	str	ip, [r7, #8]
   176d0:	str	ip, [r7, #12]
   176d4:	str	r3, [r7, #16]
   176d8:	str	ip, [r7, #20]
   176dc:	str	ip, [r7, #24]
   176e0:	bl	111b4 <memset@plt>
   176e4:	ldr	r2, [fp, #-232]	; 0xffffff18
   176e8:	mov	r3, r0
   176ec:	cmp	r2, #0
   176f0:	strne	r2, [r3], #16
   176f4:	movw	r2, #54124	; 0xd36c
   176f8:	movt	r2, #2
   176fc:	ldr	r1, [r2]
   17700:	movw	r2, #49128	; 0xbfe8
   17704:	movt	r2, #1
   17708:	str	r2, [r3]
   1770c:	cmp	r1, #0
   17710:	beq	18204 <argp_parse@@Base+0xc24>
   17714:	ldr	r1, [pc, #3444]	; 18490 <argp_parse@@Base+0xeb0>
   17718:	add	r2, r3, #32
   1771c:	str	r1, [r3, #16]
   17720:	mov	r3, #0
   17724:	sub	r9, fp, #196	; 0xc4
   17728:	str	r7, [fp, #-232]	; 0xffffff18
   1772c:	str	r5, [fp, #-228]	; 0xffffff1c
   17730:	str	r3, [fp, #-224]	; 0xffffff20
   17734:	str	r3, [fp, #-220]	; 0xffffff24
   17738:	str	r3, [fp, #-216]	; 0xffffff28
   1773c:	str	r3, [r2]
   17740:	str	r3, [r9, #8]
   17744:	str	r3, [r9, #12]
   17748:	str	r3, [r9, #16]
   1774c:	str	r3, [r9, #20]
   17750:	str	r3, [r9, #24]
   17754:	str	r3, [r9, #28]
   17758:	str	r3, [r9, #32]
   1775c:	sub	r1, fp, #228	; 0xe4
   17760:	ldr	r0, [fp, #-232]	; 0xffffff18
   17764:	bl	1701c <argp_error@@Base+0x150>
   17768:	ldr	r5, [fp, #-228]	; 0xffffff1c
   1776c:	ldr	r3, [fp, #-220]	; 0xffffff24
   17770:	ldr	r2, [fp, #-216]	; 0xffffff28
   17774:	ldr	r7, [fp, #-224]	; 0xffffff20
   17778:	add	r3, r3, #1
   1777c:	add	r3, r3, r3, lsl #3
   17780:	lsl	r2, r2, #2
   17784:	lsl	r3, r3, #2
   17788:	add	r7, r7, #1
   1778c:	add	sl, r2, r3
   17790:	add	r1, sl, r7, lsl #4
   17794:	str	r1, [fp, #-240]	; 0xffffff10
   17798:	str	r3, [fp, #-252]	; 0xffffff04
   1779c:	ldr	r3, [fp, #-240]	; 0xffffff10
   177a0:	str	r2, [fp, #-244]	; 0xffffff0c
   177a4:	add	r0, r3, r5
   177a8:	add	r0, r0, #1
   177ac:	bl	19a04 <argp_parse@@Base+0x2424>
   177b0:	cmp	r0, #0
   177b4:	mov	r5, r0
   177b8:	str	r0, [fp, #-40]	; 0xffffffd8
   177bc:	moveq	r5, #12
   177c0:	ldr	r3, [fp, #-252]	; 0xffffff04
   177c4:	ldr	r2, [fp, #-244]	; 0xffffff0c
   177c8:	beq	17cdc <argp_parse@@Base+0x6fc>
   177cc:	add	ip, r5, sl
   177d0:	add	r3, r5, r3
   177d4:	ldr	r1, [fp, #-240]	; 0xffffff10
   177d8:	str	ip, [fp, #-244]	; 0xffffff0c
   177dc:	ldrd	r6, [r9, #8]
   177e0:	str	ip, [fp, #-152]	; 0xffffff68
   177e4:	add	sl, r5, r1
   177e8:	ldrd	r0, [r9, #16]
   177ec:	str	r5, [fp, #-112]	; 0xffffff90
   177f0:	strd	r6, [fp, #-140]	; 0xffffff74
   177f4:	ldrd	r6, [r9, #24]
   177f8:	strd	r0, [fp, #-252]	; 0xffffff04
   177fc:	mov	r0, r3
   17800:	ldr	r1, [r9, #32]
   17804:	str	sl, [fp, #-156]	; 0xffffff64
   17808:	ldrd	r8, [fp, #-252]	; 0xffffff04
   1780c:	str	r3, [fp, #-104]	; 0xffffff98
   17810:	strd	r8, [fp, #-132]	; 0xffffff7c
   17814:	mov	r9, #1
   17818:	mov	r8, #1
   1781c:	str	r1, [fp, #-116]	; 0xffffff8c
   17820:	mov	r1, #0
   17824:	strd	r8, [fp, #-196]	; 0xffffff3c
   17828:	strd	r8, [fp, #-148]	; 0xffffff6c
   1782c:	sub	r9, fp, #160	; 0xa0
   17830:	strd	r6, [fp, #-124]	; 0xffffff84
   17834:	bl	111b4 <memset@plt>
   17838:	ldr	ip, [fp, #-244]	; 0xffffff0c
   1783c:	tst	r4, #8
   17840:	str	r9, [fp, #-212]	; 0xffffff2c
   17844:	str	sl, [fp, #-208]	; 0xffffff30
   17848:	str	ip, [fp, #-204]	; 0xffffff34
   1784c:	str	r0, [fp, #-200]	; 0xffffff38
   17850:	bne	17cfc <argp_parse@@Base+0x71c>
   17854:	ands	r3, r4, #4
   17858:	cmp	r3, #0
   1785c:	moveq	r3, sl
   17860:	moveq	r2, ip
   17864:	beq	1787c <argp_parse@@Base+0x29c>
   17868:	mov	r2, #43	; 0x2b
   1786c:	add	r3, sl, #1
   17870:	strb	r2, [sl]
   17874:	mov	r2, ip
   17878:	str	r3, [fp, #-208]	; 0xffffff30
   1787c:	ldr	r0, [fp, #-232]	; 0xffffff18
   17880:	mov	r5, #0
   17884:	strb	r5, [r3]
   17888:	str	r5, [r2]
   1788c:	cmp	r0, r5
   17890:	str	r0, [fp, #-160]	; 0xffffff60
   17894:	beq	17ee8 <argp_parse@@Base+0x908>
   17898:	sub	ip, fp, #212	; 0xd4
   1789c:	mov	r2, r5
   178a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   178a4:	mov	r1, r5
   178a8:	str	ip, [sp]
   178ac:	bl	172d4 <argp_error@@Base+0x408>
   178b0:	movw	r1, #53912	; 0xd298
   178b4:	movt	r1, #2
   178b8:	ldr	r6, [fp, #-236]	; 0xffffff14
   178bc:	mov	lr, #1
   178c0:	movw	r2, #53916	; 0xd29c
   178c4:	movt	r2, #2
   178c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   178cc:	str	r0, [fp, #-108]	; 0xffffff94
   178d0:	ldr	ip, [r1]
   178d4:	str	lr, [fp, #-100]	; 0xffffff9c
   178d8:	ldr	r1, [fp, #-256]	; 0xffffff00
   178dc:	cmp	r0, r3
   178e0:	mov	r0, #0
   178e4:	ldr	lr, [fp, #-160]	; 0xffffff60
   178e8:	movls	r3, r6
   178ec:	ldr	r2, [r2]
   178f0:	str	ip, [fp, #-52]	; 0xffffffcc
   178f4:	str	r9, [fp, #-44]	; 0xffffffd4
   178f8:	str	r1, [fp, #-92]	; 0xffffffa4
   178fc:	mov	r1, #0
   17900:	str	lr, [fp, #-96]	; 0xffffffa0
   17904:	str	r6, [fp, #-88]	; 0xffffffa8
   17908:	str	r5, [fp, #-84]	; 0xffffffac
   1790c:	str	r4, [fp, #-80]	; 0xffffffb0
   17910:	strd	r0, [fp, #-76]	; 0xffffffb4
   17914:	strd	r0, [fp, #-68]	; 0xffffffbc
   17918:	strd	r0, [fp, #-60]	; 0xffffffc4
   1791c:	str	r2, [fp, #-48]	; 0xffffffd0
   17920:	bls	17a08 <argp_parse@@Base+0x428>
   17924:	ldr	r2, [fp, #8]
   17928:	mov	r8, r6
   1792c:	add	r4, r3, #36	; 0x24
   17930:	mov	r6, #3
   17934:	movt	r6, #256	; 0x100
   17938:	str	r2, [r3, #24]
   1793c:	b	17988 <argp_parse@@Base+0x3a8>
   17940:	ldr	r7, [r4, #-24]	; 0xffffffe8
   17944:	ldr	r5, [r4, #-12]
   17948:	ldr	lr, [r4, #-8]
   1794c:	ldr	ip, [r4, #-4]
   17950:	str	r7, [fp, #-76]	; 0xffffffb4
   17954:	str	r5, [fp, #-68]	; 0xffffffbc
   17958:	str	lr, [fp, #-64]	; 0xffffffc0
   1795c:	str	ip, [fp, #-60]	; 0xffffffc4
   17960:	blx	r3
   17964:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17968:	str	r3, [r4, #-4]
   1796c:	ldr	r3, [fp, #-108]	; 0xffffff94
   17970:	cmp	r3, r4
   17974:	bls	17f9c <argp_parse@@Base+0x9bc>
   17978:	cmp	r0, #7
   1797c:	cmpne	r0, #0
   17980:	bne	17f8c <argp_parse@@Base+0x9ac>
   17984:	add	r4, r4, #36	; 0x24
   17988:	ldr	r3, [r4, #-20]	; 0xffffffec
   1798c:	mov	r1, #0
   17990:	sub	r2, fp, #96	; 0x60
   17994:	mov	r0, r6
   17998:	cmp	r3, r1
   1799c:	beq	179b0 <argp_parse@@Base+0x3d0>
   179a0:	ldr	ip, [r4, #-16]
   179a4:	ldr	r3, [r3, #28]
   179a8:	ldr	r3, [r3, ip, lsl #2]
   179ac:	str	r3, [r4, #-12]
   179b0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   179b4:	cmp	r3, #0
   179b8:	bne	17940 <argp_parse@@Base+0x360>
   179bc:	ldr	r3, [r4, #-32]	; 0xffffffe0
   179c0:	ldr	r3, [r3, #16]
   179c4:	cmp	r3, #0
   179c8:	beq	179f0 <argp_parse@@Base+0x410>
   179cc:	ldr	r3, [r3]
   179d0:	cmp	r3, #0
   179d4:	beq	179f0 <argp_parse@@Base+0x410>
   179d8:	ldr	ip, [r4, #-12]
   179dc:	ldr	r3, [r4, #-8]
   179e0:	str	ip, [r3]
   179e4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   179e8:	cmp	r3, #0
   179ec:	bne	17940 <argp_parse@@Base+0x360>
   179f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   179f4:	cmp	r4, r3
   179f8:	bcc	17984 <argp_parse@@Base+0x3a4>
   179fc:	str	r8, [fp, #-236]	; 0xffffff14
   17a00:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17a04:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17a08:	tst	r4, #2
   17a0c:	beq	17f5c <argp_parse@@Base+0x97c>
   17a10:	tst	r4, #1
   17a14:	mov	r2, #0
   17a18:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17a1c:	subne	r3, r3, #4
   17a20:	str	r2, [fp, #-144]	; 0xffffff70
   17a24:	ldr	r2, [fp, #-236]	; 0xffffff14
   17a28:	strne	r3, [fp, #-88]	; 0xffffffa8
   17a2c:	addne	r4, r4, #1
   17a30:	strne	r4, [fp, #-92]	; 0xffffffa4
   17a34:	cmp	r2, r3
   17a38:	beq	17f74 <argp_parse@@Base+0x994>
   17a3c:	movw	r3, #53904	; 0xd290
   17a40:	movt	r3, #2
   17a44:	ldr	r3, [r3]
   17a48:	str	r3, [fp, #-56]	; 0xffffffc8
   17a4c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17a50:	movw	r3, #49460	; 0xc134
   17a54:	movt	r3, #1
   17a58:	mov	r9, #6
   17a5c:	movt	r9, #256	; 0x100
   17a60:	ldr	r7, [fp, #-84]	; 0xffffffac
   17a64:	mov	r0, r4
   17a68:	str	r3, [fp, #-232]	; 0xffffff18
   17a6c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17a70:	cmp	r3, #0
   17a74:	beq	17b5c <argp_parse@@Base+0x57c>
   17a78:	cmp	r3, r7
   17a7c:	movgt	r3, #0
   17a80:	strgt	r3, [fp, #-72]	; 0xffffffb8
   17a84:	bgt	17b5c <argp_parse@@Base+0x57c>
   17a88:	cmp	r7, r0
   17a8c:	bge	17dac <argp_parse@@Base+0x7cc>
   17a90:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17a94:	tst	r3, #4
   17a98:	bne	17fc0 <argp_parse@@Base+0x9e0>
   17a9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17aa0:	ldr	r5, [r3, r7, lsl #2]
   17aa4:	str	r5, [fp, #-136]	; 0xffffff78
   17aa8:	ldr	r8, [fp, #-112]	; 0xffffff90
   17aac:	str	r7, [fp, #-84]	; 0xffffffac
   17ab0:	ldr	ip, [fp, #-108]	; 0xffffff94
   17ab4:	cmp	r8, ip
   17ab8:	bcs	17da4 <argp_parse@@Base+0x7c4>
   17abc:	mov	r3, r7
   17ac0:	add	r4, r8, #36	; 0x24
   17ac4:	ldr	sl, [r4, #-36]	; 0xffffffdc
   17ac8:	mov	r0, #0
   17acc:	add	lr, r3, #1
   17ad0:	sub	r2, fp, #96	; 0x60
   17ad4:	mov	r1, r5
   17ad8:	sub	r6, r4, #36	; 0x24
   17adc:	mov	r8, r4
   17ae0:	str	lr, [fp, #-84]	; 0xffffffac
   17ae4:	cmp	sl, r0
   17ae8:	beq	17d90 <argp_parse@@Base+0x7b0>
   17aec:	ldr	r3, [r4, #-12]
   17af0:	ldr	lr, [r4, #-8]
   17af4:	ldr	ip, [r4, #-4]
   17af8:	str	r3, [fp, #-68]	; 0xffffffbc
   17afc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17b00:	str	r3, [fp, #-76]	; 0xffffffb4
   17b04:	str	lr, [fp, #-64]	; 0xffffffc0
   17b08:	str	ip, [fp, #-60]	; 0xffffffc4
   17b0c:	blx	sl
   17b10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17b14:	cmp	r0, #7
   17b18:	str	r3, [r4, #-4]
   17b1c:	beq	17d18 <argp_parse@@Base+0x738>
   17b20:	cmp	r0, #0
   17b24:	bne	17e60 <argp_parse@@Base+0x880>
   17b28:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17b2c:	ldr	r3, [fp, #-84]	; 0xffffffac
   17b30:	cmp	r7, r3
   17b34:	bge	17e78 <argp_parse@@Base+0x898>
   17b38:	ldr	r1, [r4, #-24]	; 0xffffffe8
   17b3c:	sub	ip, r3, r7
   17b40:	mov	r7, r3
   17b44:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17b48:	add	r3, r1, ip
   17b4c:	str	r3, [r4, #-24]	; 0xffffffe8
   17b50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17b54:	cmp	r3, #0
   17b58:	bne	17a78 <argp_parse@@Base+0x498>
   17b5c:	cmp	r2, #0
   17b60:	beq	17a88 <argp_parse@@Base+0x4a8>
   17b64:	mvn	r2, #0
   17b68:	str	r7, [fp, #-148]	; 0xffffff6c
   17b6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17b70:	str	r2, [fp, #-140]	; 0xffffff74
   17b74:	ldr	r2, [fp, #-156]	; 0xffffff64
   17b78:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17b7c:	ands	ip, r3, #64	; 0x40
   17b80:	ldr	r3, [fp, #-152]	; 0xffffff68
   17b84:	beq	17e8c <argp_parse@@Base+0x8ac>
   17b88:	mov	ip, #0
   17b8c:	sub	lr, fp, #148	; 0x94
   17b90:	stm	sp, {ip, lr}
   17b94:	bl	18708 <argp_parse@@Base+0x1128>
   17b98:	ldr	r7, [fp, #-148]	; 0xffffff6c
   17b9c:	mov	r4, r0
   17ba0:	cmn	r4, #1
   17ba4:	str	r7, [fp, #-84]	; 0xffffffac
   17ba8:	beq	17eb0 <argp_parse@@Base+0x8d0>
   17bac:	cmp	r4, #63	; 0x3f
   17bb0:	beq	17bc8 <argp_parse@@Base+0x5e8>
   17bb4:	cmp	r4, #1
   17bb8:	bne	18174 <argp_parse@@Base+0xb94>
   17bbc:	sub	r7, r7, #1
   17bc0:	ldr	r5, [fp, #-136]	; 0xffffff78
   17bc4:	b	17aa8 <argp_parse@@Base+0x4c8>
   17bc8:	ldr	r3, [fp, #-140]	; 0xffffff74
   17bcc:	cmn	r3, #1
   17bd0:	beq	1808c <argp_parse@@Base+0xaac>
   17bd4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17bd8:	sub	r6, fp, #96	; 0x60
   17bdc:	mov	r0, r6
   17be0:	mov	r2, #260	; 0x104
   17be4:	mov	r5, #7
   17be8:	bl	16e0c <argp_state_help@@Base>
   17bec:	ldr	r3, [fp, #-112]	; 0xffffff90
   17bf0:	ldr	ip, [fp, #-108]	; 0xffffff94
   17bf4:	cmp	r3, ip
   17bf8:	mov	r6, r3
   17bfc:	mov	r4, ip
   17c00:	bcs	18414 <argp_parse@@Base+0xe34>
   17c04:	mov	r7, #5
   17c08:	movt	r7, #256	; 0x100
   17c0c:	ldr	r3, [r6]
   17c10:	mov	r1, #0
   17c14:	sub	r2, fp, #96	; 0x60
   17c18:	mov	r0, r7
   17c1c:	cmp	r3, r1
   17c20:	beq	18150 <argp_parse@@Base+0xb70>
   17c24:	ldr	ip, [r6, #24]
   17c28:	add	r6, r6, #36	; 0x24
   17c2c:	ldr	r4, [r6, #-8]
   17c30:	ldr	lr, [r6, #-4]
   17c34:	str	ip, [fp, #-68]	; 0xffffffbc
   17c38:	ldr	ip, [r6, #-24]	; 0xffffffe8
   17c3c:	str	ip, [fp, #-76]	; 0xffffffb4
   17c40:	str	r4, [fp, #-64]	; 0xffffffc0
   17c44:	str	lr, [fp, #-60]	; 0xffffffc4
   17c48:	blx	r3
   17c4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17c50:	str	r3, [r6, #-4]
   17c54:	ldr	r4, [fp, #-108]	; 0xffffff94
   17c58:	cmp	r6, r4
   17c5c:	bcc	17c0c <argp_parse@@Base+0x62c>
   17c60:	ldr	r3, [fp, #-112]	; 0xffffff90
   17c64:	sub	r4, r4, #36	; 0x24
   17c68:	cmp	r3, r4
   17c6c:	bhi	17ccc <argp_parse@@Base+0x6ec>
   17c70:	mov	r7, #7
   17c74:	movt	r7, #256	; 0x100
   17c78:	ldr	r6, [r4]
   17c7c:	mov	r1, #0
   17c80:	sub	r2, fp, #96	; 0x60
   17c84:	mov	r0, r7
   17c88:	cmp	r6, r1
   17c8c:	beq	18140 <argp_parse@@Base+0xb60>
   17c90:	ldr	r8, [r4, #12]
   17c94:	sub	r4, r4, #36	; 0x24
   17c98:	ldr	lr, [r4, #60]	; 0x3c
   17c9c:	ldr	ip, [r4, #64]	; 0x40
   17ca0:	ldr	r3, [r4, #68]	; 0x44
   17ca4:	str	r8, [fp, #-76]	; 0xffffffb4
   17ca8:	str	lr, [fp, #-68]	; 0xffffffbc
   17cac:	str	ip, [fp, #-64]	; 0xffffffc0
   17cb0:	str	r3, [fp, #-60]	; 0xffffffc4
   17cb4:	blx	r6
   17cb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17cbc:	str	r3, [r4, #68]	; 0x44
   17cc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   17cc4:	cmp	r3, r4
   17cc8:	bls	17c78 <argp_parse@@Base+0x698>
   17ccc:	cmp	r5, #7
   17cd0:	moveq	r5, #22
   17cd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17cd8:	bl	18618 <argp_parse@@Base+0x1038>
   17cdc:	mov	r0, r5
   17ce0:	sub	sp, fp, #32
   17ce4:	ldrd	r4, [sp]
   17ce8:	ldrd	r6, [sp, #8]
   17cec:	ldrd	r8, [sp, #16]
   17cf0:	ldrd	sl, [sp, #24]
   17cf4:	add	sp, sp, #32
   17cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   17cfc:	ldr	r1, [fp, #-240]	; 0xffffff10
   17d00:	mov	r2, #45	; 0x2d
   17d04:	add	r3, sl, #1
   17d08:	str	r3, [fp, #-208]	; 0xffffff30
   17d0c:	strb	r2, [r5, r1]
   17d10:	mov	r2, ip
   17d14:	b	1787c <argp_parse@@Base+0x29c>
   17d18:	ldr	r3, [fp, #-84]	; 0xffffffac
   17d1c:	ldr	sl, [r4, #-36]	; 0xffffffdc
   17d20:	sub	r3, r3, #1
   17d24:	cmp	sl, #0
   17d28:	str	r3, [fp, #-84]	; 0xffffffac
   17d2c:	beq	1845c <argp_parse@@Base+0xe7c>
   17d30:	ldr	r3, [r6, #24]
   17d34:	sub	r2, fp, #96	; 0x60
   17d38:	mov	r1, #0
   17d3c:	mov	r0, r9
   17d40:	ldr	lr, [r6, #28]
   17d44:	ldr	ip, [r6, #32]
   17d48:	str	r3, [fp, #-68]	; 0xffffffbc
   17d4c:	ldr	r3, [r6, #12]
   17d50:	str	r3, [fp, #-76]	; 0xffffffb4
   17d54:	str	lr, [fp, #-64]	; 0xffffffc0
   17d58:	str	ip, [fp, #-60]	; 0xffffffc4
   17d5c:	blx	sl
   17d60:	ldr	ip, [fp, #-108]	; 0xffffff94
   17d64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d68:	cmp	ip, r4
   17d6c:	movls	r2, #0
   17d70:	movhi	r2, #1
   17d74:	cmp	r0, #7
   17d78:	str	r3, [r6, #32]
   17d7c:	movne	r2, #0
   17d80:	cmp	r2, #0
   17d84:	beq	18464 <argp_parse@@Base+0xe84>
   17d88:	ldr	r3, [fp, #-84]	; 0xffffffac
   17d8c:	b	17ac0 <argp_parse@@Base+0x4e0>
   17d90:	str	r3, [fp, #-84]	; 0xffffffac
   17d94:	add	r2, r4, #36	; 0x24
   17d98:	cmp	ip, r4
   17d9c:	mov	r4, r2
   17da0:	bhi	17ac4 <argp_parse@@Base+0x4e4>
   17da4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17da8:	ldr	r7, [fp, #-84]	; 0xffffffac
   17dac:	cmp	r7, r0
   17db0:	bne	17fc0 <argp_parse@@Base+0x9e0>
   17db4:	ldr	r4, [fp, #-112]	; 0xffffff90
   17db8:	ldr	ip, [fp, #-108]	; 0xffffff94
   17dbc:	mov	r3, r4
   17dc0:	cmp	r4, ip
   17dc4:	bcs	18424 <argp_parse@@Base+0xe44>
   17dc8:	mov	r6, #2
   17dcc:	movt	r6, #256	; 0x100
   17dd0:	mov	r5, #0
   17dd4:	b	17e1c <argp_parse@@Base+0x83c>
   17dd8:	ldr	r7, [r4, #-12]
   17ddc:	ldr	lr, [r4, #-8]
   17de0:	ldr	ip, [r4, #-4]
   17de4:	str	r3, [fp, #-76]	; 0xffffffb4
   17de8:	str	r7, [fp, #-68]	; 0xffffffbc
   17dec:	str	lr, [fp, #-64]	; 0xffffffc0
   17df0:	str	ip, [fp, #-60]	; 0xffffffc4
   17df4:	blx	r5
   17df8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17dfc:	mov	r5, r0
   17e00:	str	r3, [r4, #-4]
   17e04:	ldr	ip, [fp, #-108]	; 0xffffff94
   17e08:	cmp	ip, r4
   17e0c:	bls	182f8 <argp_parse@@Base+0xd18>
   17e10:	cmp	r5, #7
   17e14:	cmpne	r5, #0
   17e18:	bne	182c0 <argp_parse@@Base+0xce0>
   17e1c:	ldr	r3, [r4, #12]
   17e20:	sub	r2, fp, #96	; 0x60
   17e24:	mov	r0, r6
   17e28:	add	r4, r4, #36	; 0x24
   17e2c:	subs	r1, r3, #0
   17e30:	bne	17e08 <argp_parse@@Base+0x828>
   17e34:	ldr	r5, [r4, #-36]	; 0xffffffdc
   17e38:	cmp	r5, #0
   17e3c:	bne	17dd8 <argp_parse@@Base+0x7f8>
   17e40:	cmp	ip, r4
   17e44:	mov	r5, #7
   17e48:	bhi	17e1c <argp_parse@@Base+0x83c>
   17e4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17e50:	sub	r4, ip, #36	; 0x24
   17e54:	cmp	r3, r4
   17e58:	bls	18314 <argp_parse@@Base+0xd34>
   17e5c:	b	18398 <argp_parse@@Base+0xdb8>
   17e60:	mov	r5, r0
   17e64:	cmp	r5, #7
   17e68:	bne	17bec <argp_parse@@Base+0x60c>
   17e6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17e70:	sub	r6, fp, #96	; 0x60
   17e74:	b	17bdc <argp_parse@@Base+0x5fc>
   17e78:	mov	r1, #1
   17e7c:	mov	r7, r3
   17e80:	mov	r2, r1
   17e84:	str	r1, [fp, #-100]	; 0xffffff9c
   17e88:	b	17a6c <argp_parse@@Base+0x48c>
   17e8c:	str	ip, [sp]
   17e90:	sub	ip, fp, #148	; 0x94
   17e94:	str	ip, [sp, #4]
   17e98:	bl	186a0 <argp_parse@@Base+0x10c0>
   17e9c:	ldr	r7, [fp, #-148]	; 0xffffff6c
   17ea0:	mov	r4, r0
   17ea4:	cmn	r4, #1
   17ea8:	str	r7, [fp, #-84]	; 0xffffffac
   17eac:	bne	17bac <argp_parse@@Base+0x5cc>
   17eb0:	mov	r3, #0
   17eb4:	cmp	r7, #1
   17eb8:	str	r3, [fp, #-100]	; 0xffffff9c
   17ebc:	ble	17f94 <argp_parse@@Base+0x9b4>
   17ec0:	sub	r3, r7, #-1073741823	; 0xc0000001
   17ec4:	ldr	r1, [fp, #-232]	; 0xffffff18
   17ec8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17ecc:	ldr	r0, [r2, r3, lsl #2]
   17ed0:	bl	10fd4 <strcmp@plt>
   17ed4:	cmp	r0, #0
   17ed8:	bne	17f94 <argp_parse@@Base+0x9b4>
   17edc:	str	r7, [fp, #-72]	; 0xffffffb8
   17ee0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17ee4:	b	17a88 <argp_parse@@Base+0x4a8>
   17ee8:	ldr	r2, [fp, #-256]	; 0xffffff00
   17eec:	movw	r3, #53912	; 0xd298
   17ef0:	movt	r3, #2
   17ef4:	mov	lr, r0
   17ef8:	mov	r0, #1
   17efc:	ldr	r1, [r3]
   17f00:	movw	r3, #53916	; 0xd29c
   17f04:	movt	r3, #2
   17f08:	str	r0, [fp, #-100]	; 0xffffff9c
   17f0c:	mov	r0, #0
   17f10:	tst	r4, #2
   17f14:	ldr	ip, [fp, #-236]	; 0xffffff14
   17f18:	str	lr, [fp, #-96]	; 0xffffffa0
   17f1c:	str	r2, [fp, #-92]	; 0xffffffa4
   17f20:	ldr	r2, [fp, #-112]	; 0xffffff90
   17f24:	ldr	r3, [r3]
   17f28:	str	r2, [fp, #-108]	; 0xffffff94
   17f2c:	str	r1, [fp, #-52]	; 0xffffffcc
   17f30:	mov	r1, #0
   17f34:	str	ip, [fp, #-88]	; 0xffffffa8
   17f38:	str	lr, [fp, #-84]	; 0xffffffac
   17f3c:	str	r4, [fp, #-80]	; 0xffffffb0
   17f40:	strd	r0, [fp, #-76]	; 0xffffffb4
   17f44:	strd	r0, [fp, #-68]	; 0xffffffbc
   17f48:	strd	r0, [fp, #-60]	; 0xffffffc4
   17f4c:	str	r3, [fp, #-48]	; 0xffffffd0
   17f50:	mov	r3, ip
   17f54:	str	r9, [fp, #-44]	; 0xffffffd4
   17f58:	bne	17a10 <argp_parse@@Base+0x430>
   17f5c:	mov	r2, #1
   17f60:	ldr	r4, [fp, #-92]	; 0xffffffa4
   17f64:	str	r2, [fp, #-144]	; 0xffffff70
   17f68:	ldr	r2, [fp, #-236]	; 0xffffff14
   17f6c:	cmp	r2, r3
   17f70:	bne	17a3c <argp_parse@@Base+0x45c>
   17f74:	ldr	r0, [r2]
   17f78:	cmp	r0, #0
   17f7c:	beq	17a3c <argp_parse@@Base+0x45c>
   17f80:	bl	18544 <argp_parse@@Base+0xf64>
   17f84:	str	r0, [fp, #-56]	; 0xffffffc8
   17f88:	b	17a4c <argp_parse@@Base+0x46c>
   17f8c:	mov	r5, r0
   17f90:	b	17cdc <argp_parse@@Base+0x6fc>
   17f94:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17f98:	b	17a88 <argp_parse@@Base+0x4a8>
   17f9c:	cmp	r0, #7
   17fa0:	mov	r5, r0
   17fa4:	str	r8, [fp, #-236]	; 0xffffff14
   17fa8:	beq	17a00 <argp_parse@@Base+0x420>
   17fac:	cmp	r0, #0
   17fb0:	bne	17cdc <argp_parse@@Base+0x6fc>
   17fb4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17fb8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17fbc:	b	17a08 <argp_parse@@Base+0x428>
   17fc0:	ldr	r3, [fp, #4]
   17fc4:	cmp	r3, #0
   17fc8:	beq	18108 <argp_parse@@Base+0xb28>
   17fcc:	str	r7, [r3]
   17fd0:	ldr	r3, [fp, #-112]	; 0xffffff90
   17fd4:	ldr	ip, [fp, #-108]	; 0xffffff94
   17fd8:	sub	r2, ip, #36	; 0x24
   17fdc:	cmp	r3, r2
   17fe0:	movls	r6, #4
   17fe4:	subls	r4, ip, #72	; 0x48
   17fe8:	movtls	r6, #256	; 0x100
   17fec:	bhi	18240 <argp_parse@@Base+0xc60>
   17ff0:	ldr	r5, [r4, #36]	; 0x24
   17ff4:	mov	r1, #0
   17ff8:	sub	r2, fp, #96	; 0x60
   17ffc:	mov	r0, r6
   18000:	cmp	r5, r1
   18004:	beq	18160 <argp_parse@@Base+0xb80>
   18008:	ldr	r3, [r4, #60]	; 0x3c
   1800c:	ldr	lr, [r4, #64]	; 0x40
   18010:	ldr	ip, [r4, #68]	; 0x44
   18014:	str	r3, [fp, #-68]	; 0xffffffbc
   18018:	ldr	r3, [r4, #48]	; 0x30
   1801c:	str	r3, [fp, #-76]	; 0xffffffb4
   18020:	str	lr, [fp, #-64]	; 0xffffffc0
   18024:	str	ip, [fp, #-60]	; 0xffffffc4
   18028:	blx	r5
   1802c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18030:	str	r3, [r4, #68]	; 0x44
   18034:	ldr	r3, [fp, #-112]	; 0xffffff90
   18038:	cmp	r4, r3
   1803c:	sub	r4, r4, #36	; 0x24
   18040:	bcc	18220 <argp_parse@@Base+0xc40>
   18044:	cmp	r0, #7
   18048:	cmpne	r0, #0
   1804c:	beq	17ff0 <argp_parse@@Base+0xa10>
   18050:	ldr	ip, [fp, #-108]	; 0xffffff94
   18054:	mov	r5, r0
   18058:	sub	r4, ip, #36	; 0x24
   1805c:	cmp	r4, r3
   18060:	bcs	17c70 <argp_parse@@Base+0x690>
   18064:	b	17cd4 <argp_parse@@Base+0x6f4>
   18068:	ldr	r2, [fp, #-236]	; 0xffffff14
   1806c:	ldr	r2, [r2]
   18070:	str	r2, [r3]
   18074:	b	17628 <argp_parse@@Base+0x48>
   18078:	ldr	r3, [fp, #-236]	; 0xffffff14
   1807c:	ldr	r0, [r3]
   18080:	bl	18544 <argp_parse@@Base+0xf64>
   18084:	str	r0, [r5]
   18088:	b	1763c <argp_parse@@Base+0x5c>
   1808c:	mov	r1, r4
   18090:	ldr	r0, [fp, #-156]	; 0xffffff64
   18094:	bl	11184 <strchr@plt>
   18098:	cmp	r0, #0
   1809c:	beq	180d8 <argp_parse@@Base+0xaf8>
   180a0:	ldr	r5, [fp, #-112]	; 0xffffff90
   180a4:	ldr	r2, [fp, #-108]	; 0xffffff94
   180a8:	cmp	r5, r2
   180ac:	bcs	180d8 <argp_parse@@Base+0xaf8>
   180b0:	ldr	r3, [r5, #8]
   180b4:	cmp	r3, r0
   180b8:	bls	180cc <argp_parse@@Base+0xaec>
   180bc:	b	183b4 <argp_parse@@Base+0xdd4>
   180c0:	ldr	r3, [r5, #8]
   180c4:	cmp	r0, r3
   180c8:	bcc	183b4 <argp_parse@@Base+0xdd4>
   180cc:	add	r5, r5, #36	; 0x24
   180d0:	cmp	r5, r2
   180d4:	bcc	180c0 <argp_parse@@Base+0xae0>
   180d8:	sub	r6, fp, #96	; 0x60
   180dc:	mov	r2, r4
   180e0:	add	r4, r4, #1
   180e4:	ldr	r3, [pc, #936]	; 18494 <argp_parse@@Base+0xeb4>
   180e8:	movw	r1, #49464	; 0xc138
   180ec:	movt	r1, #1
   180f0:	mov	r0, r6
   180f4:	bic	r4, r4, #2
   180f8:	bl	16ecc <argp_error@@Base>
   180fc:	cmp	r4, #0
   18100:	bne	18138 <argp_parse@@Base+0xb58>
   18104:	b	17da4 <argp_parse@@Base+0x7c4>
   18108:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1810c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18110:	tst	r3, #2
   18114:	bne	17e70 <argp_parse@@Base+0x890>
   18118:	cmp	r1, #0
   1811c:	beq	17e70 <argp_parse@@Base+0x890>
   18120:	mov	r0, r1
   18124:	movw	r1, #49484	; 0xc14c
   18128:	movt	r1, #1
   1812c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   18130:	sub	r6, fp, #96	; 0x60
   18134:	bl	11190 <fprintf@plt>
   18138:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1813c:	b	17bdc <argp_parse@@Base+0x5fc>
   18140:	sub	r4, r4, #36	; 0x24
   18144:	cmp	r4, r3
   18148:	bcs	17c78 <argp_parse@@Base+0x698>
   1814c:	b	17ccc <argp_parse@@Base+0x6ec>
   18150:	add	r6, r6, #36	; 0x24
   18154:	cmp	r6, r4
   18158:	bcc	17c0c <argp_parse@@Base+0x62c>
   1815c:	b	17c60 <argp_parse@@Base+0x680>
   18160:	cmp	r4, r3
   18164:	sub	r4, r4, #36	; 0x24
   18168:	bcs	17ff0 <argp_parse@@Base+0xa10>
   1816c:	mov	r5, #7
   18170:	b	18224 <argp_parse@@Base+0xc44>
   18174:	asrs	r8, r4, #24
   18178:	beq	1808c <argp_parse@@Base+0xaac>
   1817c:	add	r3, r8, r8, lsl #3
   18180:	ldr	r5, [fp, #-112]	; 0xffffff90
   18184:	ands	r2, r4, #8388608	; 0x800000
   18188:	movne	r2, #-16777216	; 0xff000000
   1818c:	bic	r0, r4, #-16777216	; 0xff000000
   18190:	lsl	r3, r3, #2
   18194:	orr	r0, r0, r2
   18198:	sub	r3, r3, #36	; 0x24
   1819c:	ldr	r7, [r5, r3]
   181a0:	add	r5, r5, r3
   181a4:	cmp	r7, #0
   181a8:	beq	1841c <argp_parse@@Base+0xe3c>
   181ac:	ldr	r3, [r5, #24]
   181b0:	sub	r6, fp, #96	; 0x60
   181b4:	mov	r2, r6
   181b8:	ldr	ip, [r5, #28]
   181bc:	ldr	r1, [r5, #32]
   181c0:	str	r3, [fp, #-68]	; 0xffffffbc
   181c4:	ldr	r3, [r5, #12]
   181c8:	str	r3, [fp, #-76]	; 0xffffffb4
   181cc:	str	ip, [fp, #-64]	; 0xffffffc0
   181d0:	str	r1, [fp, #-60]	; 0xffffffc4
   181d4:	ldr	r1, [fp, #-136]	; 0xffffff78
   181d8:	blx	r7
   181dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   181e0:	str	r3, [r5, #32]
   181e4:	cmp	r0, #7
   181e8:	beq	18248 <argp_parse@@Base+0xc68>
   181ec:	cmp	r0, #0
   181f0:	bne	17e60 <argp_parse@@Base+0x880>
   181f4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   181f8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   181fc:	ldr	r7, [fp, #-84]	; 0xffffffac
   18200:	b	17a6c <argp_parse@@Base+0x48c>
   18204:	movw	r2, #53956	; 0xd2c4
   18208:	movt	r2, #2
   1820c:	ldr	r2, [r2]
   18210:	cmp	r2, #0
   18214:	addeq	r2, r3, #16
   18218:	bne	17714 <argp_parse@@Base+0x134>
   1821c:	b	17720 <argp_parse@@Base+0x140>
   18220:	mov	r5, r0
   18224:	ldr	ip, [fp, #-108]	; 0xffffff94
   18228:	cmp	r5, #7
   1822c:	sub	r4, ip, #36	; 0x24
   18230:	bne	1805c <argp_parse@@Base+0xa7c>
   18234:	cmp	r4, r3
   18238:	movcs	r5, #0
   1823c:	bcs	17c70 <argp_parse@@Base+0x690>
   18240:	mov	r5, #0
   18244:	b	17cd4 <argp_parse@@Base+0x6f4>
   18248:	cmp	r8, #0
   1824c:	beq	180dc <argp_parse@@Base+0xafc>
   18250:	ldr	r3, [fp, #-152]	; 0xffffff68
   18254:	ldr	r2, [r3]
   18258:	ldr	r1, [r3, #12]
   1825c:	cmp	r4, r1
   18260:	bne	1827c <argp_parse@@Base+0xc9c>
   18264:	b	182ac <argp_parse@@Base+0xccc>
   18268:	add	r3, r3, #16
   1826c:	ldr	r2, [r3]
   18270:	ldr	r1, [r3, #12]
   18274:	cmp	r4, r1
   18278:	beq	182ac <argp_parse@@Base+0xccc>
   1827c:	cmp	r2, #0
   18280:	bne	18268 <argp_parse@@Base+0xc88>
   18284:	movw	r2, #49456	; 0xc130
   18288:	movt	r2, #1
   1828c:	movw	r1, #49472	; 0xc140
   18290:	movt	r1, #1
   18294:	ldr	r3, [pc, #504]	; 18494 <argp_parse@@Base+0xeb4>
   18298:	mov	r0, r6
   1829c:	add	r4, r4, #1
   182a0:	bl	16ecc <argp_error@@Base>
   182a4:	bic	r4, r4, #2
   182a8:	b	180fc <argp_parse@@Base+0xb1c>
   182ac:	movw	r3, #49456	; 0xc130
   182b0:	movt	r3, #1
   182b4:	cmp	r2, #0
   182b8:	moveq	r2, r3
   182bc:	b	1828c <argp_parse@@Base+0xcac>
   182c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   182c4:	sub	r2, ip, #36	; 0x24
   182c8:	cmp	r3, r2
   182cc:	bhi	1844c <argp_parse@@Base+0xe6c>
   182d0:	ldr	r2, [fp, #4]
   182d4:	cmp	r2, #0
   182d8:	beq	182e8 <argp_parse@@Base+0xd08>
   182dc:	ldr	r2, [fp, #-84]	; 0xffffffac
   182e0:	ldr	r1, [fp, #4]
   182e4:	str	r2, [r1]
   182e8:	cmp	r5, #0
   182ec:	bne	17e64 <argp_parse@@Base+0x884>
   182f0:	ldr	ip, [fp, #-108]	; 0xffffff94
   182f4:	b	17fd8 <argp_parse@@Base+0x9f8>
   182f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   182fc:	sub	r4, ip, #36	; 0x24
   18300:	cmp	r4, r3
   18304:	bcc	18408 <argp_parse@@Base+0xe28>
   18308:	cmp	r5, #0
   1830c:	cmpne	r5, #7
   18310:	bne	182d0 <argp_parse@@Base+0xcf0>
   18314:	mov	r6, #1
   18318:	movt	r6, #256	; 0x100
   1831c:	sub	r4, r4, #36	; 0x24
   18320:	ldr	r5, [r4, #36]	; 0x24
   18324:	mov	r1, #0
   18328:	sub	r2, fp, #96	; 0x60
   1832c:	mov	r0, r6
   18330:	cmp	r5, r1
   18334:	beq	18388 <argp_parse@@Base+0xda8>
   18338:	ldr	r3, [r4, #60]	; 0x3c
   1833c:	ldr	lr, [r4, #64]	; 0x40
   18340:	ldr	ip, [r4, #68]	; 0x44
   18344:	str	r3, [fp, #-68]	; 0xffffffbc
   18348:	ldr	r3, [r4, #48]	; 0x30
   1834c:	str	r3, [fp, #-76]	; 0xffffffb4
   18350:	str	lr, [fp, #-64]	; 0xffffffc0
   18354:	str	ip, [fp, #-60]	; 0xffffffc4
   18358:	blx	r5
   1835c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18360:	str	r3, [r4, #68]	; 0x44
   18364:	ldr	r3, [fp, #-112]	; 0xffffff90
   18368:	cmp	r3, r4
   1836c:	sub	r4, r4, #36	; 0x24
   18370:	bhi	18404 <argp_parse@@Base+0xe24>
   18374:	cmp	r0, #7
   18378:	cmpne	r0, #0
   1837c:	beq	18320 <argp_parse@@Base+0xd40>
   18380:	mov	r5, r0
   18384:	b	182d0 <argp_parse@@Base+0xcf0>
   18388:	cmp	r3, r4
   1838c:	sub	r4, r4, #36	; 0x24
   18390:	bls	18320 <argp_parse@@Base+0xd40>
   18394:	ldr	ip, [fp, #-108]	; 0xffffff94
   18398:	ldr	r2, [fp, #4]
   1839c:	cmp	r2, #0
   183a0:	beq	17fd8 <argp_parse@@Base+0x9f8>
   183a4:	mov	r1, r2
   183a8:	ldr	r2, [fp, #-84]	; 0xffffffac
   183ac:	str	r2, [r1]
   183b0:	b	17fd8 <argp_parse@@Base+0x9f8>
   183b4:	ldr	r3, [r5]
   183b8:	cmp	r3, #0
   183bc:	beq	180d8 <argp_parse@@Base+0xaf8>
   183c0:	ldr	r2, [r5, #12]
   183c4:	sub	r6, fp, #96	; 0x60
   183c8:	mov	r8, #0
   183cc:	ldr	r0, [r5, #24]
   183d0:	ldr	ip, [r5, #28]
   183d4:	ldr	r1, [r5, #32]
   183d8:	str	r2, [fp, #-76]	; 0xffffffb4
   183dc:	mov	r2, r6
   183e0:	str	r0, [fp, #-68]	; 0xffffffbc
   183e4:	mov	r0, r4
   183e8:	str	ip, [fp, #-64]	; 0xffffffc0
   183ec:	str	r1, [fp, #-60]	; 0xffffffc4
   183f0:	ldr	r1, [fp, #-136]	; 0xffffff78
   183f4:	blx	r3
   183f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   183fc:	str	r3, [r5, #32]
   18400:	b	181e4 <argp_parse@@Base+0xc04>
   18404:	mov	r5, r0
   18408:	cmp	r5, #7
   1840c:	beq	18394 <argp_parse@@Base+0xdb4>
   18410:	b	182d0 <argp_parse@@Base+0xcf0>
   18414:	sub	r4, ip, #36	; 0x24
   18418:	b	17c68 <argp_parse@@Base+0x688>
   1841c:	sub	r6, fp, #96	; 0x60
   18420:	b	18250 <argp_parse@@Base+0xc70>
   18424:	sub	r4, ip, #36	; 0x24
   18428:	cmp	r3, r4
   1842c:	bls	18314 <argp_parse@@Base+0xd34>
   18430:	ldr	r2, [fp, #4]
   18434:	cmp	r2, #0
   18438:	beq	18240 <argp_parse@@Base+0xc60>
   1843c:	ldr	r2, [fp, #-84]	; 0xffffffac
   18440:	ldr	r1, [fp, #4]
   18444:	str	r2, [r1]
   18448:	b	17fd8 <argp_parse@@Base+0x9f8>
   1844c:	ldr	r2, [fp, #4]
   18450:	cmp	r2, #0
   18454:	bne	182dc <argp_parse@@Base+0xcfc>
   18458:	b	17bf4 <argp_parse@@Base+0x614>
   1845c:	ldr	ip, [fp, #-108]	; 0xffffff94
   18460:	b	17d94 <argp_parse@@Base+0x7b4>
   18464:	cmp	r0, #0
   18468:	beq	18480 <argp_parse@@Base+0xea0>
   1846c:	cmp	r0, #7
   18470:	mov	r5, r0
   18474:	ldrne	r3, [fp, #-112]	; 0xffffff90
   18478:	beq	17da4 <argp_parse@@Base+0x7c4>
   1847c:	b	17bf4 <argp_parse@@Base+0x614>
   18480:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18484:	mov	r0, r3
   18488:	str	r3, [fp, #-84]	; 0xffffffac
   1848c:	b	17b30 <argp_parse@@Base+0x550>
   18490:	andeq	ip, r1, r4
   18494:	andeq	ip, r1, r0, lsr #32
   18498:	cmp	r1, #0
   1849c:	beq	184dc <argp_parse@@Base+0xefc>
   184a0:	ldr	r2, [r1, #52]	; 0x34
   184a4:	ldr	r3, [r2, #48]	; 0x30
   184a8:	ldr	r1, [r2, #52]	; 0x34
   184ac:	cmp	r3, r1
   184b0:	bcs	184dc <argp_parse@@Base+0xefc>
   184b4:	ldr	r2, [r3, #4]
   184b8:	cmp	r0, r2
   184bc:	bne	184d0 <argp_parse@@Base+0xef0>
   184c0:	b	184e4 <argp_parse@@Base+0xf04>
   184c4:	ldr	r2, [r3, #4]
   184c8:	cmp	r2, r0
   184cc:	beq	184e4 <argp_parse@@Base+0xf04>
   184d0:	add	r3, r3, #36	; 0x24
   184d4:	cmp	r3, r1
   184d8:	bcc	184c4 <argp_parse@@Base+0xee4>
   184dc:	mov	r0, #0
   184e0:	bx	lr
   184e4:	ldr	r0, [r3, #24]
   184e8:	bx	lr
   184ec:	movw	r1, #53960	; 0xd2c8
   184f0:	movt	r1, #2
   184f4:	push	{lr}		; (str lr, [sp, #-4]!)
   184f8:	ldm	r1, {r1, ip}
   184fc:	sub	sp, sp, #12
   18500:	movw	r3, #49700	; 0xc224
   18504:	movt	r3, #1
   18508:	movw	r2, #49716	; 0xc234
   1850c:	movt	r2, #1
   18510:	str	ip, [sp]
   18514:	bl	18b14 <argp_parse@@Base+0x1534>
   18518:	add	sp, sp, #12
   1851c:	pop	{pc}		; (ldr pc, [sp], #4)
   18520:	movw	r2, #53956	; 0xd2c4
   18524:	movt	r2, #2
   18528:	movw	ip, #34028	; 0x84ec
   1852c:	movt	ip, #1
   18530:	movw	r3, #53960	; 0xd2c8
   18534:	movt	r3, #2
   18538:	str	ip, [r2]
   1853c:	strd	r0, [r3]
   18540:	bx	lr
   18544:	ldrb	r3, [r0]
   18548:	cmp	r3, #47	; 0x2f
   1854c:	bne	1855c <argp_parse@@Base+0xf7c>
   18550:	ldrb	r3, [r0, #1]!
   18554:	cmp	r3, #47	; 0x2f
   18558:	beq	18550 <argp_parse@@Base+0xf70>
   1855c:	cmp	r3, #0
   18560:	beq	18590 <argp_parse@@Base+0xfb0>
   18564:	mov	r2, r0
   18568:	mov	r1, #0
   1856c:	cmp	r3, #47	; 0x2f
   18570:	moveq	r1, #1
   18574:	beq	18584 <argp_parse@@Base+0xfa4>
   18578:	cmp	r1, #0
   1857c:	movne	r0, r2
   18580:	movne	r1, #0
   18584:	ldrb	r3, [r2, #1]!
   18588:	cmp	r3, #0
   1858c:	bne	1856c <argp_parse@@Base+0xf8c>
   18590:	bx	lr
   18594:	str	r4, [sp, #-8]!
   18598:	mov	r4, r0
   1859c:	str	lr, [sp, #4]
   185a0:	bl	11178 <strlen@plt>
   185a4:	cmp	r0, #1
   185a8:	bls	185bc <argp_parse@@Base+0xfdc>
   185ac:	sub	r2, r0, #1
   185b0:	ldrb	r1, [r4, r2]
   185b4:	cmp	r1, #47	; 0x2f
   185b8:	beq	185c8 <argp_parse@@Base+0xfe8>
   185bc:	ldr	r4, [sp]
   185c0:	add	sp, sp, #4
   185c4:	pop	{pc}		; (ldr pc, [sp], #4)
   185c8:	cmp	r2, #1
   185cc:	beq	185e0 <argp_parse@@Base+0x1000>
   185d0:	add	r1, r4, r0
   185d4:	ldrb	r1, [r1, #-2]
   185d8:	cmp	r1, #47	; 0x2f
   185dc:	beq	185f0 <argp_parse@@Base+0x1010>
   185e0:	ldr	r4, [sp]
   185e4:	add	sp, sp, #4
   185e8:	mov	r0, r2
   185ec:	pop	{pc}		; (ldr pc, [sp], #4)
   185f0:	sub	r3, r0, #3
   185f4:	rsb	r0, r4, #1
   185f8:	add	r3, r4, r3
   185fc:	cmp	r3, r4
   18600:	add	r2, r0, r3
   18604:	beq	185e0 <argp_parse@@Base+0x1000>
   18608:	ldrb	r1, [r3], #-1
   1860c:	cmp	r1, #47	; 0x2f
   18610:	bne	185e0 <argp_parse@@Base+0x1000>
   18614:	b	185fc <argp_parse@@Base+0x101c>
   18618:	strd	r4, [sp, #-12]!
   1861c:	mov	r5, r0
   18620:	str	lr, [sp, #8]
   18624:	sub	sp, sp, #12
   18628:	bl	1119c <__errno_location@plt>
   1862c:	mov	r4, r0
   18630:	mov	r2, #0
   18634:	ldr	r3, [r4]
   18638:	mov	r0, r5
   1863c:	str	r2, [r4]
   18640:	str	r3, [sp]
   18644:	str	r3, [sp, #4]
   18648:	bl	11034 <free@plt>
   1864c:	ldr	r3, [r4]
   18650:	add	r2, sp, #8
   18654:	clz	r3, r3
   18658:	lsr	r3, r3, #5
   1865c:	add	r3, r2, r3, lsl #2
   18660:	ldr	r3, [r3, #-8]
   18664:	str	r3, [r4]
   18668:	add	sp, sp, #12
   1866c:	ldrd	r4, [sp]
   18670:	add	sp, sp, #8
   18674:	pop	{pc}		; (ldr pc, [sp], #4)
   18678:	push	{lr}		; (str lr, [sp, #-4]!)
   1867c:	sub	sp, sp, #20
   18680:	mov	ip, #0
   18684:	ldr	lr, [sp, #24]
   18688:	str	lr, [sp]
   1868c:	str	ip, [sp, #4]
   18690:	str	ip, [sp, #8]
   18694:	bl	1b164 <argp_parse@@Base+0x3b84>
   18698:	add	sp, sp, #20
   1869c:	pop	{pc}		; (ldr pc, [sp], #4)
   186a0:	str	r4, [sp, #-8]!
   186a4:	mov	ip, #0
   186a8:	str	lr, [sp, #4]
   186ac:	sub	sp, sp, #16
   186b0:	ldr	r4, [sp, #24]
   186b4:	str	ip, [sp, #12]
   186b8:	ldr	lr, [sp, #28]
   186bc:	stm	sp, {r4, ip, lr}
   186c0:	bl	1abc8 <argp_parse@@Base+0x35e8>
   186c4:	add	sp, sp, #16
   186c8:	ldr	r4, [sp]
   186cc:	add	sp, sp, #4
   186d0:	pop	{pc}		; (ldr pc, [sp], #4)
   186d4:	str	r4, [sp, #-8]!
   186d8:	mov	r4, #1
   186dc:	str	lr, [sp, #4]
   186e0:	sub	sp, sp, #16
   186e4:	mov	lr, #0
   186e8:	ldr	ip, [sp, #24]
   186ec:	str	ip, [sp]
   186f0:	stmib	sp, {r4, lr}
   186f4:	bl	1b164 <argp_parse@@Base+0x3b84>
   186f8:	add	sp, sp, #16
   186fc:	ldr	r4, [sp]
   18700:	add	sp, sp, #4
   18704:	pop	{pc}		; (ldr pc, [sp], #4)
   18708:	strd	r4, [sp, #-12]!
   1870c:	mov	r4, #0
   18710:	mov	r5, #1
   18714:	str	lr, [sp, #8]
   18718:	sub	sp, sp, #20
   1871c:	ldr	lr, [sp, #32]
   18720:	ldr	ip, [sp, #36]	; 0x24
   18724:	str	lr, [sp]
   18728:	str	r4, [sp, #12]
   1872c:	stmib	sp, {r5, ip}
   18730:	bl	1abc8 <argp_parse@@Base+0x35e8>
   18734:	add	sp, sp, #20
   18738:	ldrd	r4, [sp]
   1873c:	add	sp, sp, #8
   18740:	pop	{pc}		; (ldr pc, [sp], #4)
   18744:	strd	r4, [sp, #-16]!
   18748:	subs	r4, r0, #0
   1874c:	str	r6, [sp, #8]
   18750:	str	lr, [sp, #12]
   18754:	beq	187ec <argp_parse@@Base+0x120c>
   18758:	mov	r1, #47	; 0x2f
   1875c:	bl	11208 <strrchr@plt>
   18760:	subs	r5, r0, #0
   18764:	beq	187c4 <argp_parse@@Base+0x11e4>
   18768:	add	r6, r5, #1
   1876c:	sub	r3, r6, r4
   18770:	cmp	r3, #6
   18774:	ble	187c4 <argp_parse@@Base+0x11e4>
   18778:	movw	r1, #49788	; 0xc27c
   1877c:	movt	r1, #1
   18780:	mov	r2, #7
   18784:	sub	r0, r5, #6
   18788:	bl	11280 <strncmp@plt>
   1878c:	cmp	r0, #0
   18790:	bne	187c4 <argp_parse@@Base+0x11e4>
   18794:	movw	r1, #49796	; 0xc284
   18798:	movt	r1, #1
   1879c:	mov	r2, #3
   187a0:	mov	r0, r6
   187a4:	bl	11280 <strncmp@plt>
   187a8:	cmp	r0, #0
   187ac:	movne	r4, r6
   187b0:	bne	187c4 <argp_parse@@Base+0x11e4>
   187b4:	add	r4, r5, #4
   187b8:	movw	r3, #53904	; 0xd290
   187bc:	movt	r3, #2
   187c0:	str	r4, [r3]
   187c4:	movw	r2, #53968	; 0xd2d0
   187c8:	movt	r2, #2
   187cc:	ldr	r6, [sp, #8]
   187d0:	movw	r3, #53908	; 0xd294
   187d4:	movt	r3, #2
   187d8:	str	r4, [r2]
   187dc:	str	r4, [r3]
   187e0:	ldrd	r4, [sp]
   187e4:	add	sp, sp, #12
   187e8:	pop	{pc}		; (ldr pc, [sp], #4)
   187ec:	movw	r3, #53912	; 0xd298
   187f0:	movt	r3, #2
   187f4:	movw	r0, #49732	; 0xc244
   187f8:	movt	r0, #1
   187fc:	ldr	r3, [r3]
   18800:	mov	r2, #55	; 0x37
   18804:	mov	r1, #1
   18808:	bl	110d0 <fwrite@plt>
   1880c:	bl	1128c <abort@plt>
   18810:	cmp	r1, #0
   18814:	strd	r4, [sp, #-16]!
   18818:	mov	r4, r0
   1881c:	str	r6, [sp, #8]
   18820:	str	lr, [sp, #12]
   18824:	sub	sp, sp, #32
   18828:	ldr	r5, [sp, #48]	; 0x30
   1882c:	ldr	r6, [sp, #52]	; 0x34
   18830:	beq	18934 <argp_parse@@Base+0x1354>
   18834:	mov	ip, r3
   18838:	mov	r3, r2
   1883c:	mov	r2, r1
   18840:	movw	r1, #49800	; 0xc288
   18844:	movt	r1, #1
   18848:	str	ip, [sp]
   1884c:	bl	11190 <fprintf@plt>
   18850:	movw	r3, #2022	; 0x7e6
   18854:	movw	r2, #49820	; 0xc29c
   18858:	movt	r2, #1
   1885c:	movw	r1, #50588	; 0xc59c
   18860:	movt	r1, #1
   18864:	mov	r0, r4
   18868:	bl	11190 <fprintf@plt>
   1886c:	mov	r1, r4
   18870:	mov	r0, #10
   18874:	bl	11220 <fputc@plt>
   18878:	movw	r2, #49824	; 0xc2a0
   1887c:	movt	r2, #1
   18880:	movw	r1, #49860	; 0xc2c4
   18884:	movt	r1, #1
   18888:	mov	r0, r4
   1888c:	bl	11190 <fprintf@plt>
   18890:	mov	r1, r4
   18894:	mov	r0, #10
   18898:	bl	11220 <fputc@plt>
   1889c:	cmp	r6, #9
   188a0:	ldrls	pc, [pc, r6, lsl #2]
   188a4:	b	18b00 <argp_parse@@Base+0x1520>
   188a8:	andeq	r8, r1, r0, lsr #18
   188ac:	andeq	r8, r1, r4, asr #18
   188b0:	andeq	r8, r1, ip, ror #18
   188b4:	muleq	r1, r4, r9
   188b8:	andeq	r8, r1, r4, asr #19
   188bc:	andeq	r8, r1, r0, lsl #20
   188c0:	andeq	r8, r1, r4, lsr sl
   188c4:	andeq	r8, r1, r0, ror sl
   188c8:			; <UNDEFINED> instruction: 0x00018ab4
   188cc:	ldrdeq	r8, [r1], -r0
   188d0:	ldr	ip, [r5, #8]
   188d4:	movw	r1, #50300	; 0xc47c
   188d8:	movt	r1, #1
   188dc:	mov	r0, r4
   188e0:	ldr	r3, [r5, #12]
   188e4:	ldr	r2, [r5, #32]
   188e8:	str	ip, [sp]
   188ec:	ldr	ip, [r5, #16]
   188f0:	str	r2, [sp, #24]
   188f4:	ldr	r2, [r5, #28]
   188f8:	str	r3, [sp, #4]
   188fc:	ldr	r3, [r5, #20]
   18900:	str	ip, [sp, #8]
   18904:	ldr	ip, [r5, #24]
   18908:	str	r2, [sp, #20]
   1890c:	ldr	r2, [r5]
   18910:	str	r3, [sp, #12]
   18914:	ldr	r3, [r5, #4]
   18918:	str	ip, [sp, #16]
   1891c:	bl	11190 <fprintf@plt>
   18920:	add	sp, sp, #32
   18924:	ldrd	r4, [sp]
   18928:	ldr	r6, [sp, #8]
   1892c:	add	sp, sp, #12
   18930:	pop	{pc}		; (ldr pc, [sp], #4)
   18934:	movw	r1, #49812	; 0xc294
   18938:	movt	r1, #1
   1893c:	bl	11190 <fprintf@plt>
   18940:	b	18850 <argp_parse@@Base+0x1270>
   18944:	ldr	r2, [r5]
   18948:	mov	r0, r4
   1894c:	movw	r1, #50032	; 0xc370
   18950:	movt	r1, #1
   18954:	add	sp, sp, #32
   18958:	ldrd	r4, [sp]
   1895c:	ldr	r6, [sp, #8]
   18960:	ldr	lr, [sp, #12]
   18964:	add	sp, sp, #16
   18968:	b	11190 <fprintf@plt>
   1896c:	ldrd	r2, [r5]
   18970:	mov	r0, r4
   18974:	movw	r1, #50048	; 0xc380
   18978:	movt	r1, #1
   1897c:	add	sp, sp, #32
   18980:	ldrd	r4, [sp]
   18984:	ldr	r6, [sp, #8]
   18988:	ldr	lr, [sp, #12]
   1898c:	add	sp, sp, #16
   18990:	b	11190 <fprintf@plt>
   18994:	ldrd	r2, [r5]
   18998:	mov	r0, r4
   1899c:	movw	r1, #50072	; 0xc398
   189a0:	movt	r1, #1
   189a4:	ldr	ip, [r5, #8]
   189a8:	str	ip, [sp, #48]	; 0x30
   189ac:	add	sp, sp, #32
   189b0:	ldrd	r4, [sp]
   189b4:	ldr	r6, [sp, #8]
   189b8:	ldr	lr, [sp, #12]
   189bc:	add	sp, sp, #16
   189c0:	b	11190 <fprintf@plt>
   189c4:	ldr	r2, [r5]
   189c8:	mov	r0, r4
   189cc:	movw	r1, #50100	; 0xc3b4
   189d0:	movt	r1, #1
   189d4:	ldr	r3, [r5, #8]
   189d8:	ldr	ip, [r5, #12]
   189dc:	str	r3, [sp, #48]	; 0x30
   189e0:	ldr	r3, [r5, #4]
   189e4:	str	ip, [sp, #52]	; 0x34
   189e8:	add	sp, sp, #32
   189ec:	ldrd	r4, [sp]
   189f0:	ldr	r6, [sp, #8]
   189f4:	ldr	lr, [sp, #12]
   189f8:	add	sp, sp, #16
   189fc:	b	11190 <fprintf@plt>
   18a00:	ldr	r2, [r5, #8]
   18a04:	mov	r0, r4
   18a08:	movw	r1, #50132	; 0xc3d4
   18a0c:	movt	r1, #1
   18a10:	ldr	ip, [r5, #12]
   18a14:	ldr	r3, [r5, #16]
   18a18:	str	r2, [sp]
   18a1c:	ldr	r2, [r5]
   18a20:	str	r3, [sp, #8]
   18a24:	ldr	r3, [r5, #4]
   18a28:	str	ip, [sp, #4]
   18a2c:	bl	11190 <fprintf@plt>
   18a30:	b	18920 <argp_parse@@Base+0x1340>
   18a34:	ldr	ip, [r5, #8]
   18a38:	mov	r0, r4
   18a3c:	movw	r1, #50168	; 0xc3f8
   18a40:	movt	r1, #1
   18a44:	ldr	r3, [r5, #12]
   18a48:	ldr	r2, [r5, #20]
   18a4c:	str	ip, [sp]
   18a50:	ldr	ip, [r5, #16]
   18a54:	str	r2, [sp, #12]
   18a58:	ldr	r2, [r5]
   18a5c:	str	r3, [sp, #4]
   18a60:	ldr	r3, [r5, #4]
   18a64:	str	ip, [sp, #8]
   18a68:	bl	11190 <fprintf@plt>
   18a6c:	b	18920 <argp_parse@@Base+0x1340>
   18a70:	ldr	r3, [r5, #8]
   18a74:	mov	r0, r4
   18a78:	movw	r1, #50208	; 0xc420
   18a7c:	movt	r1, #1
   18a80:	ldr	r2, [r5, #12]
   18a84:	ldr	ip, [r5, #24]
   18a88:	str	r3, [sp]
   18a8c:	ldr	r3, [r5, #16]
   18a90:	str	ip, [sp, #16]
   18a94:	ldr	ip, [r5, #20]
   18a98:	str	r2, [sp, #4]
   18a9c:	ldr	r2, [r5]
   18aa0:	str	r3, [sp, #8]
   18aa4:	ldr	r3, [r5, #4]
   18aa8:	str	ip, [sp, #12]
   18aac:	bl	11190 <fprintf@plt>
   18ab0:	b	18920 <argp_parse@@Base+0x1340>
   18ab4:	ldr	r2, [r5, #8]
   18ab8:	mov	r0, r4
   18abc:	movw	r1, #50252	; 0xc44c
   18ac0:	movt	r1, #1
   18ac4:	ldr	ip, [r5, #12]
   18ac8:	ldr	r3, [r5, #28]
   18acc:	str	r2, [sp]
   18ad0:	ldr	r2, [r5, #16]
   18ad4:	str	r3, [sp, #20]
   18ad8:	ldr	r3, [r5, #24]
   18adc:	str	ip, [sp, #4]
   18ae0:	ldr	ip, [r5, #20]
   18ae4:	str	r2, [sp, #8]
   18ae8:	ldr	r2, [r5]
   18aec:	str	r3, [sp, #16]
   18af0:	ldr	r3, [r5, #4]
   18af4:	str	ip, [sp, #12]
   18af8:	bl	11190 <fprintf@plt>
   18afc:	b	18920 <argp_parse@@Base+0x1340>
   18b00:	movw	r1, #50352	; 0xc4b0
   18b04:	movt	r1, #1
   18b08:	ldr	ip, [r5, #8]
   18b0c:	mov	r0, r4
   18b10:	b	188e0 <argp_parse@@Base+0x1300>
   18b14:	strd	r4, [sp, #-16]!
   18b18:	mov	ip, r3
   18b1c:	str	r6, [sp, #8]
   18b20:	mov	r6, r0
   18b24:	str	lr, [sp, #12]
   18b28:	sub	sp, sp, #32
   18b2c:	ldr	r5, [sp, #48]	; 0x30
   18b30:	ldr	r4, [r5]
   18b34:	cmp	r4, #0
   18b38:	beq	18b54 <argp_parse@@Base+0x1574>
   18b3c:	mov	r3, r5
   18b40:	mov	r4, #0
   18b44:	ldr	r0, [r3, #4]!
   18b48:	add	r4, r4, #1
   18b4c:	cmp	r0, #0
   18b50:	bne	18b44 <argp_parse@@Base+0x1564>
   18b54:	cmp	r1, #0
   18b58:	beq	18c5c <argp_parse@@Base+0x167c>
   18b5c:	mov	r3, r2
   18b60:	mov	r0, r6
   18b64:	str	ip, [sp]
   18b68:	mov	r2, r1
   18b6c:	movw	r1, #49800	; 0xc288
   18b70:	movt	r1, #1
   18b74:	bl	11190 <fprintf@plt>
   18b78:	movw	r3, #2022	; 0x7e6
   18b7c:	movw	r2, #49820	; 0xc29c
   18b80:	movt	r2, #1
   18b84:	movw	r1, #50588	; 0xc59c
   18b88:	movt	r1, #1
   18b8c:	mov	r0, r6
   18b90:	bl	11190 <fprintf@plt>
   18b94:	mov	r1, r6
   18b98:	mov	r0, #10
   18b9c:	bl	11220 <fputc@plt>
   18ba0:	movw	r2, #49824	; 0xc2a0
   18ba4:	movt	r2, #1
   18ba8:	movw	r1, #49860	; 0xc2c4
   18bac:	movt	r1, #1
   18bb0:	mov	r0, r6
   18bb4:	bl	11190 <fprintf@plt>
   18bb8:	mov	r1, r6
   18bbc:	mov	r0, #10
   18bc0:	bl	11220 <fputc@plt>
   18bc4:	cmp	r4, #9
   18bc8:	ldrls	pc, [pc, r4, lsl #2]
   18bcc:	b	18e20 <argp_parse@@Base+0x1840>
   18bd0:	andeq	r8, r1, r8, asr #24
   18bd4:	andeq	r8, r1, r4, ror ip
   18bd8:	muleq	r1, ip, ip
   18bdc:	andeq	r8, r1, r4, asr #25
   18be0:	strdeq	r8, [r1], -r4
   18be4:	andeq	r8, r1, r0, lsr #26
   18be8:	andeq	r8, r1, r4, asr sp
   18bec:	muleq	r1, r0, sp
   18bf0:	ldrdeq	r8, [r1], -r4
   18bf4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18bf8:	ldr	ip, [r5, #8]
   18bfc:	movw	r1, #50300	; 0xc47c
   18c00:	movt	r1, #1
   18c04:	mov	r0, r6
   18c08:	ldr	r3, [r5, #12]
   18c0c:	ldr	r2, [r5, #32]
   18c10:	str	ip, [sp]
   18c14:	ldr	ip, [r5, #16]
   18c18:	str	r2, [sp, #24]
   18c1c:	ldr	r2, [r5, #28]
   18c20:	str	r3, [sp, #4]
   18c24:	ldr	r3, [r5, #20]
   18c28:	str	ip, [sp, #8]
   18c2c:	ldr	ip, [r5, #24]
   18c30:	str	r2, [sp, #20]
   18c34:	ldr	r2, [r5]
   18c38:	str	r3, [sp, #12]
   18c3c:	ldr	r3, [r5, #4]
   18c40:	str	ip, [sp, #16]
   18c44:	bl	11190 <fprintf@plt>
   18c48:	add	sp, sp, #32
   18c4c:	ldrd	r4, [sp]
   18c50:	ldr	r6, [sp, #8]
   18c54:	add	sp, sp, #12
   18c58:	pop	{pc}		; (ldr pc, [sp], #4)
   18c5c:	mov	r3, ip
   18c60:	movw	r1, #49812	; 0xc294
   18c64:	movt	r1, #1
   18c68:	mov	r0, r6
   18c6c:	bl	11190 <fprintf@plt>
   18c70:	b	18b78 <argp_parse@@Base+0x1598>
   18c74:	ldr	r2, [r5]
   18c78:	mov	r0, r6
   18c7c:	movw	r1, #50032	; 0xc370
   18c80:	movt	r1, #1
   18c84:	add	sp, sp, #32
   18c88:	ldrd	r4, [sp]
   18c8c:	ldr	r6, [sp, #8]
   18c90:	ldr	lr, [sp, #12]
   18c94:	add	sp, sp, #16
   18c98:	b	11190 <fprintf@plt>
   18c9c:	ldrd	r2, [r5]
   18ca0:	mov	r0, r6
   18ca4:	movw	r1, #50048	; 0xc380
   18ca8:	movt	r1, #1
   18cac:	add	sp, sp, #32
   18cb0:	ldrd	r4, [sp]
   18cb4:	ldr	r6, [sp, #8]
   18cb8:	ldr	lr, [sp, #12]
   18cbc:	add	sp, sp, #16
   18cc0:	b	11190 <fprintf@plt>
   18cc4:	ldrd	r2, [r5]
   18cc8:	mov	r0, r6
   18ccc:	movw	r1, #50072	; 0xc398
   18cd0:	movt	r1, #1
   18cd4:	ldr	ip, [r5, #8]
   18cd8:	str	ip, [sp, #48]	; 0x30
   18cdc:	add	sp, sp, #32
   18ce0:	ldrd	r4, [sp]
   18ce4:	ldr	r6, [sp, #8]
   18ce8:	ldr	lr, [sp, #12]
   18cec:	add	sp, sp, #16
   18cf0:	b	11190 <fprintf@plt>
   18cf4:	mov	r0, r6
   18cf8:	movw	r1, #50100	; 0xc3b4
   18cfc:	movt	r1, #1
   18d00:	ldr	r3, [r5, #8]
   18d04:	ldr	ip, [r5, #12]
   18d08:	ldr	r2, [r5]
   18d0c:	str	r3, [sp]
   18d10:	ldr	r3, [r5, #4]
   18d14:	str	ip, [sp, #4]
   18d18:	bl	11190 <fprintf@plt>
   18d1c:	b	18c48 <argp_parse@@Base+0x1668>
   18d20:	ldr	r2, [r5, #8]
   18d24:	mov	r0, r6
   18d28:	movw	r1, #50132	; 0xc3d4
   18d2c:	movt	r1, #1
   18d30:	ldr	ip, [r5, #12]
   18d34:	ldr	r3, [r5, #16]
   18d38:	str	r2, [sp]
   18d3c:	ldr	r2, [r5]
   18d40:	str	r3, [sp, #8]
   18d44:	ldr	r3, [r5, #4]
   18d48:	str	ip, [sp, #4]
   18d4c:	bl	11190 <fprintf@plt>
   18d50:	b	18c48 <argp_parse@@Base+0x1668>
   18d54:	ldr	ip, [r5, #8]
   18d58:	mov	r0, r6
   18d5c:	movw	r1, #50168	; 0xc3f8
   18d60:	movt	r1, #1
   18d64:	ldr	r3, [r5, #12]
   18d68:	ldr	r2, [r5, #20]
   18d6c:	str	ip, [sp]
   18d70:	ldr	ip, [r5, #16]
   18d74:	str	r2, [sp, #12]
   18d78:	ldr	r2, [r5]
   18d7c:	str	r3, [sp, #4]
   18d80:	ldr	r3, [r5, #4]
   18d84:	str	ip, [sp, #8]
   18d88:	bl	11190 <fprintf@plt>
   18d8c:	b	18c48 <argp_parse@@Base+0x1668>
   18d90:	ldr	r3, [r5, #8]
   18d94:	mov	r0, r6
   18d98:	movw	r1, #50208	; 0xc420
   18d9c:	movt	r1, #1
   18da0:	ldr	r2, [r5, #12]
   18da4:	ldr	ip, [r5, #24]
   18da8:	str	r3, [sp]
   18dac:	ldr	r3, [r5, #16]
   18db0:	str	ip, [sp, #16]
   18db4:	ldr	ip, [r5, #20]
   18db8:	str	r2, [sp, #4]
   18dbc:	ldr	r2, [r5]
   18dc0:	str	r3, [sp, #8]
   18dc4:	ldr	r3, [r5, #4]
   18dc8:	str	ip, [sp, #12]
   18dcc:	bl	11190 <fprintf@plt>
   18dd0:	b	18c48 <argp_parse@@Base+0x1668>
   18dd4:	ldr	r2, [r5, #8]
   18dd8:	mov	r0, r6
   18ddc:	movw	r1, #50252	; 0xc44c
   18de0:	movt	r1, #1
   18de4:	ldr	ip, [r5, #12]
   18de8:	ldr	r3, [r5, #28]
   18dec:	str	r2, [sp]
   18df0:	ldr	r2, [r5, #16]
   18df4:	str	r3, [sp, #20]
   18df8:	ldr	r3, [r5, #24]
   18dfc:	str	ip, [sp, #4]
   18e00:	ldr	ip, [r5, #20]
   18e04:	str	r2, [sp, #8]
   18e08:	ldr	r2, [r5]
   18e0c:	str	r3, [sp, #16]
   18e10:	ldr	r3, [r5, #4]
   18e14:	str	ip, [sp, #12]
   18e18:	bl	11190 <fprintf@plt>
   18e1c:	b	18c48 <argp_parse@@Base+0x1668>
   18e20:	movw	r1, #50352	; 0xc4b0
   18e24:	movt	r1, #1
   18e28:	ldr	ip, [r5, #8]
   18e2c:	mov	r0, r6
   18e30:	b	18c08 <argp_parse@@Base+0x1628>
   18e34:	strd	r4, [sp, #-12]!
   18e38:	mov	r4, r0
   18e3c:	mov	r0, r3
   18e40:	str	lr, [sp, #8]
   18e44:	sub	sp, sp, #76	; 0x4c
   18e48:	ldr	ip, [sp, #88]	; 0x58
   18e4c:	ldr	r3, [ip]
   18e50:	cmp	r3, #0
   18e54:	str	r3, [sp, #32]
   18e58:	beq	19178 <argp_parse@@Base+0x1b98>
   18e5c:	ldr	r3, [ip, #4]
   18e60:	cmp	r3, #0
   18e64:	str	r3, [sp, #36]	; 0x24
   18e68:	beq	19180 <argp_parse@@Base+0x1ba0>
   18e6c:	ldr	r3, [ip, #8]
   18e70:	cmp	r3, #0
   18e74:	str	r3, [sp, #40]	; 0x28
   18e78:	beq	19188 <argp_parse@@Base+0x1ba8>
   18e7c:	ldr	r3, [ip, #12]
   18e80:	cmp	r3, #0
   18e84:	str	r3, [sp, #44]	; 0x2c
   18e88:	beq	19190 <argp_parse@@Base+0x1bb0>
   18e8c:	ldr	r3, [ip, #16]
   18e90:	cmp	r3, #0
   18e94:	str	r3, [sp, #48]	; 0x30
   18e98:	beq	19198 <argp_parse@@Base+0x1bb8>
   18e9c:	ldr	r3, [ip, #20]
   18ea0:	cmp	r3, #0
   18ea4:	str	r3, [sp, #52]	; 0x34
   18ea8:	beq	191a0 <argp_parse@@Base+0x1bc0>
   18eac:	ldr	r3, [ip, #24]
   18eb0:	cmp	r3, #0
   18eb4:	str	r3, [sp, #56]	; 0x38
   18eb8:	beq	191a8 <argp_parse@@Base+0x1bc8>
   18ebc:	ldr	r3, [ip, #28]
   18ec0:	cmp	r3, #0
   18ec4:	str	r3, [sp, #60]	; 0x3c
   18ec8:	beq	191b0 <argp_parse@@Base+0x1bd0>
   18ecc:	ldr	r3, [ip, #32]
   18ed0:	cmp	r3, #0
   18ed4:	str	r3, [sp, #64]	; 0x40
   18ed8:	beq	191b8 <argp_parse@@Base+0x1bd8>
   18edc:	ldr	r3, [ip, #36]	; 0x24
   18ee0:	cmp	r3, #0
   18ee4:	movne	r5, #10
   18ee8:	moveq	r5, #9
   18eec:	cmp	r1, #0
   18ef0:	beq	18fec <argp_parse@@Base+0x1a0c>
   18ef4:	mov	r3, r2
   18ef8:	mov	r2, r1
   18efc:	str	r0, [sp]
   18f00:	movw	r1, #49800	; 0xc288
   18f04:	movt	r1, #1
   18f08:	mov	r0, r4
   18f0c:	bl	11190 <fprintf@plt>
   18f10:	movw	r3, #2022	; 0x7e6
   18f14:	movw	r2, #49820	; 0xc29c
   18f18:	movt	r2, #1
   18f1c:	movw	r1, #50588	; 0xc59c
   18f20:	movt	r1, #1
   18f24:	mov	r0, r4
   18f28:	bl	11190 <fprintf@plt>
   18f2c:	mov	r1, r4
   18f30:	mov	r0, #10
   18f34:	bl	11220 <fputc@plt>
   18f38:	movw	r2, #49824	; 0xc2a0
   18f3c:	movt	r2, #1
   18f40:	movw	r1, #49860	; 0xc2c4
   18f44:	movt	r1, #1
   18f48:	mov	r0, r4
   18f4c:	bl	11190 <fprintf@plt>
   18f50:	mov	r1, r4
   18f54:	mov	r0, #10
   18f58:	bl	11220 <fputc@plt>
   18f5c:	cmp	r5, #9
   18f60:	ldrls	pc, [pc, r5, lsl #2]
   18f64:	b	191c0 <argp_parse@@Base+0x1be0>
   18f68:	ldrdeq	r8, [r1], -ip
   18f6c:	andeq	r9, r1, r4
   18f70:	andeq	r9, r1, r8, lsr #32
   18f74:	andeq	r9, r1, ip, asr #32
   18f78:	andeq	r9, r1, r8, ror r0
   18f7c:	andeq	r9, r1, r0, lsr #1
   18f80:	andeq	r9, r1, r8, asr #1
   18f84:	andeq	r9, r1, r0, lsl #2
   18f88:	andeq	r9, r1, r0, asr #2
   18f8c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   18f90:	ldr	ip, [sp, #40]	; 0x28
   18f94:	movw	r1, #50300	; 0xc47c
   18f98:	movt	r1, #1
   18f9c:	mov	r0, r4
   18fa0:	str	ip, [sp]
   18fa4:	ldr	r2, [sp, #44]	; 0x2c
   18fa8:	ldr	ip, [sp, #48]	; 0x30
   18fac:	ldr	r3, [sp, #64]	; 0x40
   18fb0:	str	r2, [sp, #4]
   18fb4:	ldr	r2, [sp, #52]	; 0x34
   18fb8:	str	ip, [sp, #8]
   18fbc:	ldr	ip, [sp, #56]	; 0x38
   18fc0:	str	r3, [sp, #24]
   18fc4:	ldr	r3, [sp, #60]	; 0x3c
   18fc8:	str	r2, [sp, #12]
   18fcc:	str	ip, [sp, #16]
   18fd0:	str	r3, [sp, #20]
   18fd4:	ldrd	r2, [sp, #32]
   18fd8:	bl	11190 <fprintf@plt>
   18fdc:	add	sp, sp, #76	; 0x4c
   18fe0:	ldrd	r4, [sp]
   18fe4:	add	sp, sp, #8
   18fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   18fec:	mov	r3, r0
   18ff0:	movw	r1, #49812	; 0xc294
   18ff4:	movt	r1, #1
   18ff8:	mov	r0, r4
   18ffc:	bl	11190 <fprintf@plt>
   19000:	b	18f10 <argp_parse@@Base+0x1930>
   19004:	ldr	r2, [sp, #32]
   19008:	mov	r0, r4
   1900c:	movw	r1, #50032	; 0xc370
   19010:	movt	r1, #1
   19014:	add	sp, sp, #76	; 0x4c
   19018:	ldrd	r4, [sp]
   1901c:	ldr	lr, [sp, #8]
   19020:	add	sp, sp, #12
   19024:	b	11190 <fprintf@plt>
   19028:	ldrd	r2, [sp, #32]
   1902c:	mov	r0, r4
   19030:	movw	r1, #50048	; 0xc380
   19034:	movt	r1, #1
   19038:	add	sp, sp, #76	; 0x4c
   1903c:	ldrd	r4, [sp]
   19040:	ldr	lr, [sp, #8]
   19044:	add	sp, sp, #12
   19048:	b	11190 <fprintf@plt>
   1904c:	ldrd	r2, [sp, #32]
   19050:	mov	r0, r4
   19054:	movw	r1, #50072	; 0xc398
   19058:	movt	r1, #1
   1905c:	ldr	ip, [sp, #40]	; 0x28
   19060:	str	ip, [sp, #88]	; 0x58
   19064:	add	sp, sp, #76	; 0x4c
   19068:	ldrd	r4, [sp]
   1906c:	ldr	lr, [sp, #8]
   19070:	add	sp, sp, #12
   19074:	b	11190 <fprintf@plt>
   19078:	mov	r0, r4
   1907c:	movw	r1, #50100	; 0xc3b4
   19080:	movt	r1, #1
   19084:	ldr	r3, [sp, #40]	; 0x28
   19088:	ldr	ip, [sp, #44]	; 0x2c
   1908c:	ldr	r2, [sp, #32]
   19090:	stm	sp, {r3, ip}
   19094:	ldr	r3, [sp, #36]	; 0x24
   19098:	bl	11190 <fprintf@plt>
   1909c:	b	18fdc <argp_parse@@Base+0x19fc>
   190a0:	ldrd	r2, [sp, #40]	; 0x28
   190a4:	mov	r0, r4
   190a8:	movw	r1, #50132	; 0xc3d4
   190ac:	movt	r1, #1
   190b0:	ldr	ip, [sp, #48]	; 0x30
   190b4:	strd	r2, [sp]
   190b8:	ldrd	r2, [sp, #32]
   190bc:	str	ip, [sp, #8]
   190c0:	bl	11190 <fprintf@plt>
   190c4:	b	18fdc <argp_parse@@Base+0x19fc>
   190c8:	ldr	ip, [sp, #40]	; 0x28
   190cc:	mov	r0, r4
   190d0:	movw	r1, #50168	; 0xc3f8
   190d4:	movt	r1, #1
   190d8:	ldr	r2, [sp, #44]	; 0x2c
   190dc:	ldr	r3, [sp, #52]	; 0x34
   190e0:	str	ip, [sp]
   190e4:	ldr	ip, [sp, #48]	; 0x30
   190e8:	str	r2, [sp, #4]
   190ec:	str	ip, [sp, #8]
   190f0:	str	r3, [sp, #12]
   190f4:	ldrd	r2, [sp, #32]
   190f8:	bl	11190 <fprintf@plt>
   190fc:	b	18fdc <argp_parse@@Base+0x19fc>
   19100:	ldr	r3, [sp, #40]	; 0x28
   19104:	mov	r0, r4
   19108:	movw	r1, #50208	; 0xc420
   1910c:	movt	r1, #1
   19110:	ldr	ip, [sp, #44]	; 0x2c
   19114:	ldr	r2, [sp, #56]	; 0x38
   19118:	stm	sp, {r3, ip}
   1911c:	ldr	r3, [sp, #48]	; 0x30
   19120:	ldr	ip, [sp, #52]	; 0x34
   19124:	str	r3, [sp, #8]
   19128:	str	r2, [sp, #16]
   1912c:	str	ip, [sp, #12]
   19130:	ldr	r2, [sp, #32]
   19134:	ldr	r3, [sp, #36]	; 0x24
   19138:	bl	11190 <fprintf@plt>
   1913c:	b	18fdc <argp_parse@@Base+0x19fc>
   19140:	ldrd	r2, [sp, #40]	; 0x28
   19144:	mov	r0, r4
   19148:	movw	r1, #50252	; 0xc44c
   1914c:	movt	r1, #1
   19150:	ldr	ip, [sp, #60]	; 0x3c
   19154:	strd	r2, [sp]
   19158:	ldrd	r2, [sp, #48]	; 0x30
   1915c:	str	ip, [sp, #20]
   19160:	ldr	ip, [sp, #56]	; 0x38
   19164:	strd	r2, [sp, #8]
   19168:	ldrd	r2, [sp, #32]
   1916c:	str	ip, [sp, #16]
   19170:	bl	11190 <fprintf@plt>
   19174:	b	18fdc <argp_parse@@Base+0x19fc>
   19178:	mov	r5, r3
   1917c:	b	18eec <argp_parse@@Base+0x190c>
   19180:	mov	r5, #1
   19184:	b	18eec <argp_parse@@Base+0x190c>
   19188:	mov	r5, #2
   1918c:	b	18eec <argp_parse@@Base+0x190c>
   19190:	mov	r5, #3
   19194:	b	18eec <argp_parse@@Base+0x190c>
   19198:	mov	r5, #4
   1919c:	b	18eec <argp_parse@@Base+0x190c>
   191a0:	mov	r5, #5
   191a4:	b	18eec <argp_parse@@Base+0x190c>
   191a8:	mov	r5, #6
   191ac:	b	18eec <argp_parse@@Base+0x190c>
   191b0:	mov	r5, #7
   191b4:	b	18eec <argp_parse@@Base+0x190c>
   191b8:	mov	r5, #8
   191bc:	b	18eec <argp_parse@@Base+0x190c>
   191c0:	movw	r1, #50352	; 0xc4b0
   191c4:	movt	r1, #1
   191c8:	ldr	ip, [sp, #40]	; 0x28
   191cc:	mov	r0, r4
   191d0:	b	18fa0 <argp_parse@@Base+0x19c0>
   191d4:	push	{r3}		; (str r3, [sp, #-4]!)
   191d8:	push	{lr}		; (str lr, [sp, #-4]!)
   191dc:	sub	sp, sp, #56	; 0x38
   191e0:	ldr	ip, [sp, #64]	; 0x40
   191e4:	add	r3, sp, #64	; 0x40
   191e8:	str	r3, [sp, #12]
   191ec:	cmp	ip, #0
   191f0:	str	ip, [sp, #16]
   191f4:	beq	1928c <argp_parse@@Base+0x1cac>
   191f8:	ldr	ip, [sp, #68]	; 0x44
   191fc:	cmp	ip, #0
   19200:	str	ip, [sp, #20]
   19204:	beq	192b0 <argp_parse@@Base+0x1cd0>
   19208:	ldr	ip, [sp, #72]	; 0x48
   1920c:	cmp	ip, #0
   19210:	str	ip, [sp, #24]
   19214:	beq	192b8 <argp_parse@@Base+0x1cd8>
   19218:	ldr	ip, [sp, #76]	; 0x4c
   1921c:	cmp	ip, #0
   19220:	str	ip, [sp, #28]
   19224:	beq	192c0 <argp_parse@@Base+0x1ce0>
   19228:	ldr	ip, [sp, #80]	; 0x50
   1922c:	cmp	ip, #0
   19230:	str	ip, [sp, #32]
   19234:	beq	192c8 <argp_parse@@Base+0x1ce8>
   19238:	ldr	ip, [sp, #84]	; 0x54
   1923c:	cmp	ip, #0
   19240:	str	ip, [sp, #36]	; 0x24
   19244:	beq	192d0 <argp_parse@@Base+0x1cf0>
   19248:	ldr	ip, [sp, #88]	; 0x58
   1924c:	cmp	ip, #0
   19250:	str	ip, [sp, #40]	; 0x28
   19254:	beq	192d8 <argp_parse@@Base+0x1cf8>
   19258:	ldr	ip, [sp, #92]	; 0x5c
   1925c:	cmp	ip, #0
   19260:	str	ip, [sp, #44]	; 0x2c
   19264:	beq	192e0 <argp_parse@@Base+0x1d00>
   19268:	ldr	ip, [sp, #96]	; 0x60
   1926c:	cmp	ip, #0
   19270:	str	ip, [sp, #48]	; 0x30
   19274:	beq	192e8 <argp_parse@@Base+0x1d08>
   19278:	ldr	r3, [sp, #100]	; 0x64
   1927c:	cmp	r3, #0
   19280:	str	r3, [sp, #52]	; 0x34
   19284:	movne	ip, #10
   19288:	moveq	ip, #9
   1928c:	ldr	r3, [sp, #60]	; 0x3c
   19290:	add	lr, sp, #16
   19294:	str	lr, [sp]
   19298:	str	ip, [sp, #4]
   1929c:	bl	18810 <argp_parse@@Base+0x1230>
   192a0:	add	sp, sp, #56	; 0x38
   192a4:	pop	{lr}		; (ldr lr, [sp], #4)
   192a8:	add	sp, sp, #4
   192ac:	bx	lr
   192b0:	mov	ip, #1
   192b4:	b	1928c <argp_parse@@Base+0x1cac>
   192b8:	mov	ip, #2
   192bc:	b	1928c <argp_parse@@Base+0x1cac>
   192c0:	mov	ip, #3
   192c4:	b	1928c <argp_parse@@Base+0x1cac>
   192c8:	mov	ip, #4
   192cc:	b	1928c <argp_parse@@Base+0x1cac>
   192d0:	mov	ip, #5
   192d4:	b	1928c <argp_parse@@Base+0x1cac>
   192d8:	mov	ip, #6
   192dc:	b	1928c <argp_parse@@Base+0x1cac>
   192e0:	mov	ip, #7
   192e4:	b	1928c <argp_parse@@Base+0x1cac>
   192e8:	mov	ip, #8
   192ec:	b	1928c <argp_parse@@Base+0x1cac>
   192f0:	movw	r3, #53916	; 0xd29c
   192f4:	movt	r3, #2
   192f8:	str	r4, [sp, #-8]!
   192fc:	mov	r0, #10
   19300:	ldr	r1, [r3]
   19304:	str	lr, [sp, #4]
   19308:	bl	11220 <fputc@plt>
   1930c:	movw	r1, #50412	; 0xc4ec
   19310:	movt	r1, #1
   19314:	movw	r0, #50436	; 0xc504
   19318:	movt	r0, #1
   1931c:	bl	10ff8 <printf@plt>
   19320:	movw	r2, #50456	; 0xc518
   19324:	movt	r2, #1
   19328:	movw	r1, #49716	; 0xc234
   1932c:	movt	r1, #1
   19330:	movw	r0, #50496	; 0xc540
   19334:	movt	r0, #1
   19338:	bl	10ff8 <printf@plt>
   1933c:	movw	r1, #50516	; 0xc554
   19340:	movt	r1, #1
   19344:	ldr	r4, [sp]
   19348:	movw	r0, #50548	; 0xc574
   1934c:	movt	r0, #1
   19350:	ldr	lr, [sp, #4]
   19354:	add	sp, sp, #8
   19358:	b	10ff8 <printf@plt>
   1935c:	strd	r4, [sp, #-16]!
   19360:	mov	r4, r0
   19364:	mov	r5, r2
   19368:	str	r6, [sp, #8]
   1936c:	mov	r6, r1
   19370:	str	lr, [sp, #12]
   19374:	bl	1b650 <argp_parse@@Base+0x4070>
   19378:	cmp	r0, #0
   1937c:	beq	19390 <argp_parse@@Base+0x1db0>
   19380:	ldrd	r4, [sp]
   19384:	ldr	r6, [sp, #8]
   19388:	add	sp, sp, #12
   1938c:	pop	{pc}		; (ldr pc, [sp], #4)
   19390:	cmp	r4, #0
   19394:	beq	193a4 <argp_parse@@Base+0x1dc4>
   19398:	cmp	r6, #0
   1939c:	cmpne	r5, #0
   193a0:	beq	19380 <argp_parse@@Base+0x1da0>
   193a4:	bl	19960 <argp_parse@@Base+0x2380>
   193a8:	str	r4, [sp, #-8]!
   193ac:	str	lr, [sp, #4]
   193b0:	bl	19a04 <argp_parse@@Base+0x2424>
   193b4:	cmp	r0, #0
   193b8:	beq	193c8 <argp_parse@@Base+0x1de8>
   193bc:	ldr	r4, [sp]
   193c0:	add	sp, sp, #4
   193c4:	pop	{pc}		; (ldr pc, [sp], #4)
   193c8:	bl	19960 <argp_parse@@Base+0x2380>
   193cc:	str	r4, [sp, #-8]!
   193d0:	str	lr, [sp, #4]
   193d4:	bl	19a04 <argp_parse@@Base+0x2424>
   193d8:	cmp	r0, #0
   193dc:	beq	193ec <argp_parse@@Base+0x1e0c>
   193e0:	ldr	r4, [sp]
   193e4:	add	sp, sp, #4
   193e8:	pop	{pc}		; (ldr pc, [sp], #4)
   193ec:	bl	19960 <argp_parse@@Base+0x2380>
   193f0:	str	r4, [sp, #-8]!
   193f4:	str	lr, [sp, #4]
   193f8:	bl	19a04 <argp_parse@@Base+0x2424>
   193fc:	cmp	r0, #0
   19400:	beq	19410 <argp_parse@@Base+0x1e30>
   19404:	ldr	r4, [sp]
   19408:	add	sp, sp, #4
   1940c:	pop	{pc}		; (ldr pc, [sp], #4)
   19410:	bl	19960 <argp_parse@@Base+0x2380>
   19414:	strd	r4, [sp, #-16]!
   19418:	mov	r5, r0
   1941c:	mov	r4, r1
   19420:	str	r6, [sp, #8]
   19424:	str	lr, [sp, #12]
   19428:	bl	19a40 <argp_parse@@Base+0x2460>
   1942c:	cmp	r0, #0
   19430:	beq	19444 <argp_parse@@Base+0x1e64>
   19434:	ldrd	r4, [sp]
   19438:	ldr	r6, [sp, #8]
   1943c:	add	sp, sp, #12
   19440:	pop	{pc}		; (ldr pc, [sp], #4)
   19444:	adds	r4, r4, #0
   19448:	movne	r4, #1
   1944c:	cmp	r5, #0
   19450:	moveq	r4, #1
   19454:	cmp	r4, #0
   19458:	beq	19434 <argp_parse@@Base+0x1e54>
   1945c:	bl	19960 <argp_parse@@Base+0x2380>
   19460:	cmp	r1, #0
   19464:	orreq	r1, r1, #1
   19468:	str	r4, [sp, #-8]!
   1946c:	str	lr, [sp, #4]
   19470:	bl	19a40 <argp_parse@@Base+0x2460>
   19474:	cmp	r0, #0
   19478:	beq	19488 <argp_parse@@Base+0x1ea8>
   1947c:	ldr	r4, [sp]
   19480:	add	sp, sp, #4
   19484:	pop	{pc}		; (ldr pc, [sp], #4)
   19488:	bl	19960 <argp_parse@@Base+0x2380>
   1948c:	strd	r4, [sp, #-16]!
   19490:	mov	r4, r0
   19494:	mov	r5, r2
   19498:	str	r6, [sp, #8]
   1949c:	mov	r6, r1
   194a0:	str	lr, [sp, #12]
   194a4:	bl	1b650 <argp_parse@@Base+0x4070>
   194a8:	cmp	r0, #0
   194ac:	beq	194c0 <argp_parse@@Base+0x1ee0>
   194b0:	ldrd	r4, [sp]
   194b4:	ldr	r6, [sp, #8]
   194b8:	add	sp, sp, #12
   194bc:	pop	{pc}		; (ldr pc, [sp], #4)
   194c0:	cmp	r4, #0
   194c4:	beq	194d4 <argp_parse@@Base+0x1ef4>
   194c8:	cmp	r6, #0
   194cc:	cmpne	r5, #0
   194d0:	beq	194b0 <argp_parse@@Base+0x1ed0>
   194d4:	bl	19960 <argp_parse@@Base+0x2380>
   194d8:	cmp	r2, #0
   194dc:	cmpne	r1, #0
   194e0:	str	r4, [sp, #-8]!
   194e4:	moveq	r2, #1
   194e8:	str	lr, [sp, #4]
   194ec:	moveq	r1, r2
   194f0:	bl	1b650 <argp_parse@@Base+0x4070>
   194f4:	cmp	r0, #0
   194f8:	beq	19508 <argp_parse@@Base+0x1f28>
   194fc:	ldr	r4, [sp]
   19500:	add	sp, sp, #4
   19504:	pop	{pc}		; (ldr pc, [sp], #4)
   19508:	bl	19960 <argp_parse@@Base+0x2380>
   1950c:	mov	r2, r1
   19510:	mov	r1, r0
   19514:	str	r4, [sp, #-8]!
   19518:	mov	r0, #0
   1951c:	str	lr, [sp, #4]
   19520:	bl	1b650 <argp_parse@@Base+0x4070>
   19524:	cmp	r0, #0
   19528:	beq	19538 <argp_parse@@Base+0x1f58>
   1952c:	ldr	r4, [sp]
   19530:	add	sp, sp, #4
   19534:	pop	{pc}		; (ldr pc, [sp], #4)
   19538:	bl	19960 <argp_parse@@Base+0x2380>
   1953c:	cmp	r1, #0
   19540:	cmpne	r0, #0
   19544:	str	r4, [sp, #-8]!
   19548:	moveq	r2, #1
   1954c:	movne	r2, r1
   19550:	str	lr, [sp, #4]
   19554:	movne	r1, r0
   19558:	moveq	r1, r2
   1955c:	mov	r0, #0
   19560:	bl	1b650 <argp_parse@@Base+0x4070>
   19564:	cmp	r0, #0
   19568:	beq	19578 <argp_parse@@Base+0x1f98>
   1956c:	ldr	r4, [sp]
   19570:	add	sp, sp, #4
   19574:	pop	{pc}		; (ldr pc, [sp], #4)
   19578:	bl	19960 <argp_parse@@Base+0x2380>
   1957c:	cmp	r0, #0
   19580:	strd	r4, [sp, #-16]!
   19584:	mov	r5, r1
   19588:	ldr	r4, [r1]
   1958c:	str	r6, [sp, #8]
   19590:	str	lr, [sp, #12]
   19594:	beq	195dc <argp_parse@@Base+0x1ffc>
   19598:	lsr	r3, r4, #1
   1959c:	add	r3, r3, #1
   195a0:	adds	r4, r4, r3
   195a4:	bcs	195d8 <argp_parse@@Base+0x1ff8>
   195a8:	mov	r2, #1
   195ac:	mov	r1, r4
   195b0:	bl	1b650 <argp_parse@@Base+0x4070>
   195b4:	cmp	r0, #0
   195b8:	beq	195d0 <argp_parse@@Base+0x1ff0>
   195bc:	ldr	r6, [sp, #8]
   195c0:	str	r4, [r5]
   195c4:	ldrd	r4, [sp]
   195c8:	add	sp, sp, #12
   195cc:	pop	{pc}		; (ldr pc, [sp], #4)
   195d0:	cmp	r4, #0
   195d4:	beq	195bc <argp_parse@@Base+0x1fdc>
   195d8:	bl	19960 <argp_parse@@Base+0x2380>
   195dc:	cmp	r4, #0
   195e0:	mov	r2, #1
   195e4:	moveq	r4, #64	; 0x40
   195e8:	mov	r1, r4
   195ec:	bl	1b650 <argp_parse@@Base+0x4070>
   195f0:	cmp	r0, #0
   195f4:	bne	195bc <argp_parse@@Base+0x1fdc>
   195f8:	b	195d8 <argp_parse@@Base+0x1ff8>
   195fc:	cmp	r0, #0
   19600:	strd	r4, [sp, #-16]!
   19604:	mov	r5, r1
   19608:	ldr	r4, [r1]
   1960c:	str	r6, [sp, #8]
   19610:	mov	r6, r2
   19614:	str	lr, [sp, #12]
   19618:	beq	19660 <argp_parse@@Base+0x2080>
   1961c:	lsr	r3, r4, #1
   19620:	add	r3, r3, #1
   19624:	adds	r4, r4, r3
   19628:	bcs	1965c <argp_parse@@Base+0x207c>
   1962c:	mov	r1, r4
   19630:	bl	1b650 <argp_parse@@Base+0x4070>
   19634:	cmp	r0, #0
   19638:	beq	19650 <argp_parse@@Base+0x2070>
   1963c:	ldr	r6, [sp, #8]
   19640:	str	r4, [r5]
   19644:	ldrd	r4, [sp]
   19648:	add	sp, sp, #12
   1964c:	pop	{pc}		; (ldr pc, [sp], #4)
   19650:	cmp	r4, #0
   19654:	cmpne	r6, #0
   19658:	beq	1963c <argp_parse@@Base+0x205c>
   1965c:	bl	19960 <argp_parse@@Base+0x2380>
   19660:	cmp	r4, #0
   19664:	bne	19678 <argp_parse@@Base+0x2098>
   19668:	mov	r4, #64	; 0x40
   1966c:	udiv	r4, r4, r2
   19670:	cmp	r2, #64	; 0x40
   19674:	addhi	r4, r4, #1
   19678:	mov	r2, r6
   1967c:	mov	r1, r4
   19680:	mov	r0, #0
   19684:	bl	1b650 <argp_parse@@Base+0x4070>
   19688:	cmp	r0, #0
   1968c:	bne	1963c <argp_parse@@Base+0x205c>
   19690:	b	1965c <argp_parse@@Base+0x207c>
   19694:	ldr	ip, [r1]
   19698:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1969c:	strd	r6, [sp, #8]
   196a0:	mov	r7, r1
   196a4:	mov	r6, r0
   196a8:	str	r8, [sp, #16]
   196ac:	mvn	r8, r3
   196b0:	lsr	r8, r8, #31
   196b4:	str	lr, [sp, #20]
   196b8:	asr	r1, ip, #1
   196bc:	ldr	lr, [sp, #24]
   196c0:	adds	r4, ip, r1
   196c4:	mvnvs	r4, #-2147483648	; 0x80000000
   196c8:	cmp	r3, r4
   196cc:	movge	r1, #0
   196d0:	andlt	r1, r8, #1
   196d4:	cmp	r1, #0
   196d8:	movne	r4, r3
   196dc:	smull	r0, r1, r4, lr
   196e0:	cmp	r1, r0, asr #31
   196e4:	bne	19794 <argp_parse@@Base+0x21b4>
   196e8:	cmp	r0, #63	; 0x3f
   196ec:	mov	r5, r0
   196f0:	ble	19760 <argp_parse@@Base+0x2180>
   196f4:	cmp	r6, #0
   196f8:	sub	r1, r4, ip
   196fc:	streq	r6, [r7]
   19700:	cmp	r1, r2
   19704:	bge	19734 <argp_parse@@Base+0x2154>
   19708:	adds	r4, ip, r2
   1970c:	bvs	19790 <argp_parse@@Base+0x21b0>
   19710:	cmp	r4, r3
   19714:	movle	r3, #0
   19718:	andgt	r3, r8, #1
   1971c:	cmp	r3, #0
   19720:	bne	19790 <argp_parse@@Base+0x21b0>
   19724:	smull	r0, r1, r4, lr
   19728:	cmp	r1, r0, asr #31
   1972c:	mov	r5, r0
   19730:	bne	19790 <argp_parse@@Base+0x21b0>
   19734:	mov	r1, r5
   19738:	mov	r0, r6
   1973c:	bl	19a40 <argp_parse@@Base+0x2460>
   19740:	cmp	r0, #0
   19744:	beq	19774 <argp_parse@@Base+0x2194>
   19748:	ldr	r8, [sp, #16]
   1974c:	str	r4, [r7]
   19750:	ldrd	r4, [sp]
   19754:	ldrd	r6, [sp, #8]
   19758:	add	sp, sp, #20
   1975c:	pop	{pc}		; (ldr pc, [sp], #4)
   19760:	mov	r0, #64	; 0x40
   19764:	sdiv	r4, r0, lr
   19768:	mls	r5, lr, r4, r0
   1976c:	sub	r5, r0, r5
   19770:	b	196f4 <argp_parse@@Base+0x2114>
   19774:	adds	r5, r5, #0
   19778:	movne	r5, #1
   1977c:	cmp	r6, #0
   19780:	movne	r6, r5
   19784:	moveq	r6, #1
   19788:	cmp	r6, #0
   1978c:	beq	19748 <argp_parse@@Base+0x2168>
   19790:	bl	19960 <argp_parse@@Base+0x2380>
   19794:	mvn	r0, #-2147483648	; 0x80000000
   19798:	b	19764 <argp_parse@@Base+0x2184>
   1979c:	mov	r1, #1
   197a0:	str	r4, [sp, #-8]!
   197a4:	str	lr, [sp, #4]
   197a8:	bl	19990 <argp_parse@@Base+0x23b0>
   197ac:	cmp	r0, #0
   197b0:	beq	197c0 <argp_parse@@Base+0x21e0>
   197b4:	ldr	r4, [sp]
   197b8:	add	sp, sp, #4
   197bc:	pop	{pc}		; (ldr pc, [sp], #4)
   197c0:	bl	19960 <argp_parse@@Base+0x2380>
   197c4:	mov	r1, #1
   197c8:	str	r4, [sp, #-8]!
   197cc:	str	lr, [sp, #4]
   197d0:	bl	19990 <argp_parse@@Base+0x23b0>
   197d4:	cmp	r0, #0
   197d8:	beq	197e8 <argp_parse@@Base+0x2208>
   197dc:	ldr	r4, [sp]
   197e0:	add	sp, sp, #4
   197e4:	pop	{pc}		; (ldr pc, [sp], #4)
   197e8:	bl	19960 <argp_parse@@Base+0x2380>
   197ec:	str	r4, [sp, #-8]!
   197f0:	str	lr, [sp, #4]
   197f4:	bl	19990 <argp_parse@@Base+0x23b0>
   197f8:	cmp	r0, #0
   197fc:	beq	1980c <argp_parse@@Base+0x222c>
   19800:	ldr	r4, [sp]
   19804:	add	sp, sp, #4
   19808:	pop	{pc}		; (ldr pc, [sp], #4)
   1980c:	bl	19960 <argp_parse@@Base+0x2380>
   19810:	str	r4, [sp, #-8]!
   19814:	str	lr, [sp, #4]
   19818:	bl	19990 <argp_parse@@Base+0x23b0>
   1981c:	cmp	r0, #0
   19820:	beq	19830 <argp_parse@@Base+0x2250>
   19824:	ldr	r4, [sp]
   19828:	add	sp, sp, #4
   1982c:	pop	{pc}		; (ldr pc, [sp], #4)
   19830:	bl	19960 <argp_parse@@Base+0x2380>
   19834:	strd	r4, [sp, #-16]!
   19838:	mov	r4, r1
   1983c:	str	r6, [sp, #8]
   19840:	mov	r6, r0
   19844:	mov	r0, r1
   19848:	str	lr, [sp, #12]
   1984c:	bl	19a04 <argp_parse@@Base+0x2424>
   19850:	subs	r5, r0, #0
   19854:	beq	19878 <argp_parse@@Base+0x2298>
   19858:	mov	r2, r4
   1985c:	mov	r1, r6
   19860:	bl	11058 <memcpy@plt>
   19864:	mov	r0, r5
   19868:	ldrd	r4, [sp]
   1986c:	ldr	r6, [sp, #8]
   19870:	add	sp, sp, #12
   19874:	pop	{pc}		; (ldr pc, [sp], #4)
   19878:	bl	19960 <argp_parse@@Base+0x2380>
   1987c:	strd	r4, [sp, #-16]!
   19880:	mov	r4, r1
   19884:	str	r6, [sp, #8]
   19888:	mov	r6, r0
   1988c:	mov	r0, r1
   19890:	str	lr, [sp, #12]
   19894:	bl	19a04 <argp_parse@@Base+0x2424>
   19898:	subs	r5, r0, #0
   1989c:	beq	198c0 <argp_parse@@Base+0x22e0>
   198a0:	mov	r2, r4
   198a4:	mov	r1, r6
   198a8:	bl	11058 <memcpy@plt>
   198ac:	mov	r0, r5
   198b0:	ldrd	r4, [sp]
   198b4:	ldr	r6, [sp, #8]
   198b8:	add	sp, sp, #12
   198bc:	pop	{pc}		; (ldr pc, [sp], #4)
   198c0:	bl	19960 <argp_parse@@Base+0x2380>
   198c4:	strd	r4, [sp, #-16]!
   198c8:	mov	r4, r1
   198cc:	str	r6, [sp, #8]
   198d0:	mov	r6, r0
   198d4:	add	r0, r1, #1
   198d8:	str	lr, [sp, #12]
   198dc:	bl	19a04 <argp_parse@@Base+0x2424>
   198e0:	subs	r5, r0, #0
   198e4:	beq	19910 <argp_parse@@Base+0x2330>
   198e8:	mov	r3, #0
   198ec:	mov	r1, r6
   198f0:	mov	r2, r4
   198f4:	strb	r3, [r5, r4]
   198f8:	bl	11058 <memcpy@plt>
   198fc:	mov	r0, r5
   19900:	ldrd	r4, [sp]
   19904:	ldr	r6, [sp, #8]
   19908:	add	sp, sp, #12
   1990c:	pop	{pc}		; (ldr pc, [sp], #4)
   19910:	bl	19960 <argp_parse@@Base+0x2380>
   19914:	strd	r4, [sp, #-16]!
   19918:	str	r6, [sp, #8]
   1991c:	mov	r6, r0
   19920:	str	lr, [sp, #12]
   19924:	bl	11178 <strlen@plt>
   19928:	add	r4, r0, #1
   1992c:	mov	r0, r4
   19930:	bl	19a04 <argp_parse@@Base+0x2424>
   19934:	subs	r5, r0, #0
   19938:	beq	1995c <argp_parse@@Base+0x237c>
   1993c:	mov	r2, r4
   19940:	mov	r1, r6
   19944:	bl	11058 <memcpy@plt>
   19948:	mov	r0, r5
   1994c:	ldrd	r4, [sp]
   19950:	ldr	r6, [sp, #8]
   19954:	add	sp, sp, #12
   19958:	pop	{pc}		; (ldr pc, [sp], #4)
   1995c:	bl	19960 <argp_parse@@Base+0x2380>
   19960:	movw	r3, #53888	; 0xd280
   19964:	movt	r3, #2
   19968:	str	r4, [sp, #-8]!
   1996c:	movw	r2, #49444	; 0xc124
   19970:	movt	r2, #1
   19974:	ldr	r0, [r3]
   19978:	mov	r1, #0
   1997c:	movw	r3, #50636	; 0xc5cc
   19980:	movt	r3, #1
   19984:	str	lr, [sp, #4]
   19988:	bl	110f4 <error@plt>
   1998c:	bl	1128c <abort@plt>
   19990:	cmp	r1, #0
   19994:	cmpne	r0, #0
   19998:	beq	199e4 <argp_parse@@Base+0x2404>
   1999c:	strd	r4, [sp, #-16]!
   199a0:	umull	r4, r5, r0, r1
   199a4:	str	r6, [sp, #8]
   199a8:	str	lr, [sp, #12]
   199ac:	adds	r3, r5, #0
   199b0:	movne	r3, #1
   199b4:	cmp	r4, #0
   199b8:	blt	199c4 <argp_parse@@Base+0x23e4>
   199bc:	cmp	r3, #0
   199c0:	beq	199f0 <argp_parse@@Base+0x2410>
   199c4:	bl	1119c <__errno_location@plt>
   199c8:	mov	r3, #12
   199cc:	ldrd	r4, [sp]
   199d0:	ldr	r6, [sp, #8]
   199d4:	add	sp, sp, #12
   199d8:	str	r3, [r0]
   199dc:	mov	r0, #0
   199e0:	pop	{pc}		; (ldr pc, [sp], #4)
   199e4:	mov	r1, #1
   199e8:	mov	r0, r1
   199ec:	b	10fbc <calloc@plt>
   199f0:	ldrd	r4, [sp]
   199f4:	ldr	r6, [sp, #8]
   199f8:	ldr	lr, [sp, #12]
   199fc:	add	sp, sp, #16
   19a00:	b	10fbc <calloc@plt>
   19a04:	cmp	r0, #0
   19a08:	beq	19a14 <argp_parse@@Base+0x2434>
   19a0c:	blt	19a1c <argp_parse@@Base+0x243c>
   19a10:	b	1110c <malloc@plt>
   19a14:	mov	r0, #1
   19a18:	b	1110c <malloc@plt>
   19a1c:	str	r4, [sp, #-8]!
   19a20:	str	lr, [sp, #4]
   19a24:	bl	1119c <__errno_location@plt>
   19a28:	mov	r3, #12
   19a2c:	ldr	r4, [sp]
   19a30:	add	sp, sp, #4
   19a34:	str	r3, [r0]
   19a38:	mov	r0, #0
   19a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   19a40:	cmp	r0, #0
   19a44:	beq	19a6c <argp_parse@@Base+0x248c>
   19a48:	cmp	r1, #0
   19a4c:	str	r4, [sp, #-8]!
   19a50:	str	lr, [sp, #4]
   19a54:	beq	19a74 <argp_parse@@Base+0x2494>
   19a58:	blt	19a88 <argp_parse@@Base+0x24a8>
   19a5c:	ldr	r4, [sp]
   19a60:	ldr	lr, [sp, #4]
   19a64:	add	sp, sp, #8
   19a68:	b	110ac <realloc@plt>
   19a6c:	mov	r0, r1
   19a70:	b	19a04 <argp_parse@@Base+0x2424>
   19a74:	bl	18618 <argp_parse@@Base+0x1038>
   19a78:	ldr	r4, [sp]
   19a7c:	add	sp, sp, #4
   19a80:	mov	r0, #0
   19a84:	pop	{pc}		; (ldr pc, [sp], #4)
   19a88:	bl	1119c <__errno_location@plt>
   19a8c:	mov	r3, #12
   19a90:	str	r3, [r0]
   19a94:	b	19a78 <argp_parse@@Base+0x2498>
   19a98:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19a9c:	mov	r5, r3
   19aa0:	strd	r6, [sp, #8]
   19aa4:	mov	r7, r1
   19aa8:	mov	r6, r2
   19aac:	str	r8, [sp, #16]
   19ab0:	mov	r8, r0
   19ab4:	mov	r0, #36	; 0x24
   19ab8:	str	lr, [sp, #20]
   19abc:	bl	19a04 <argp_parse@@Base+0x2424>
   19ac0:	subs	r4, r0, #0
   19ac4:	beq	19b08 <argp_parse@@Base+0x2528>
   19ac8:	mov	r3, #0
   19acc:	mov	r0, #200	; 0xc8
   19ad0:	str	r8, [r4]
   19ad4:	str	r7, [r4, #4]
   19ad8:	str	r6, [r4, #8]
   19adc:	str	r5, [r4, #12]
   19ae0:	str	r3, [r4, #16]
   19ae4:	str	r3, [r4, #20]
   19ae8:	bl	19a04 <argp_parse@@Base+0x2424>
   19aec:	cmp	r0, #0
   19af0:	mov	r3, r0
   19af4:	str	r0, [r4, #24]
   19af8:	addne	r2, r0, #200	; 0xc8
   19afc:	strne	r0, [r4, #28]
   19b00:	strne	r2, [r4, #32]
   19b04:	beq	19b20 <argp_parse@@Base+0x2540>
   19b08:	mov	r0, r4
   19b0c:	ldrd	r4, [sp]
   19b10:	ldrd	r6, [sp, #8]
   19b14:	ldr	r8, [sp, #16]
   19b18:	add	sp, sp, #20
   19b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   19b20:	mov	r0, r4
   19b24:	mov	r4, r3
   19b28:	bl	18618 <argp_parse@@Base+0x1038>
   19b2c:	b	19b08 <argp_parse@@Base+0x2528>
   19b30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19b34:	mov	r5, r0
   19b38:	ldr	r4, [r0, #16]
   19b3c:	ldr	r3, [r0, #24]
   19b40:	strd	r6, [sp, #8]
   19b44:	strd	r8, [sp, #16]
   19b48:	ldr	r8, [r0, #28]
   19b4c:	strd	sl, [sp, #24]
   19b50:	add	r4, r3, r4
   19b54:	str	lr, [sp, #32]
   19b58:	sub	sp, sp, #12
   19b5c:	cmp	r4, r8
   19b60:	bcc	19bdc <argp_parse@@Base+0x25fc>
   19b64:	b	19e38 <argp_parse@@Base+0x2858>
   19b68:	sub	r2, fp, r4
   19b6c:	add	r2, r2, r6
   19b70:	cmp	r2, r3
   19b74:	blt	19e78 <argp_parse@@Base+0x2898>
   19b78:	ldr	sl, [r5, #12]
   19b7c:	sub	r7, r3, #1
   19b80:	str	r3, [sp, #4]
   19b84:	cmp	sl, #0
   19b88:	bge	19c98 <argp_parse@@Base+0x26b8>
   19b8c:	cmp	r8, fp
   19b90:	bls	1a010 <argp_parse@@Base+0x2a30>
   19b94:	sub	r0, r7, r6
   19b98:	sub	r2, r8, fp
   19b9c:	add	r0, r4, r0
   19ba0:	mov	r1, fp
   19ba4:	bl	1101c <memmove@plt>
   19ba8:	ldr	r2, [r5, #20]
   19bac:	mov	r3, #0
   19bb0:	str	r3, [r5, #20]
   19bb4:	ldr	r3, [sp, #4]
   19bb8:	ldr	r8, [r5, #28]
   19bbc:	sub	r7, r7, r2
   19bc0:	add	r7, r4, r7
   19bc4:	sub	fp, r7, fp
   19bc8:	add	r4, r4, r3
   19bcc:	sub	r8, r8, fp
   19bd0:	str	r8, [r5, #28]
   19bd4:	cmp	r4, r8
   19bd8:	bcs	19e34 <argp_parse@@Base+0x2854>
   19bdc:	ldr	r6, [r5, #20]
   19be0:	cmp	r6, #0
   19be4:	bne	19c44 <argp_parse@@Base+0x2664>
   19be8:	ldr	r7, [r5, #4]
   19bec:	cmp	r7, #0
   19bf0:	beq	19e5c <argp_parse@@Base+0x287c>
   19bf4:	ldr	r2, [r5, #32]
   19bf8:	add	r3, r8, r7
   19bfc:	cmp	r2, r3
   19c00:	bls	19f84 <argp_parse@@Base+0x29a4>
   19c04:	add	r6, r4, r7
   19c08:	sub	r2, r8, r4
   19c0c:	mov	r1, r4
   19c10:	mov	r0, r6
   19c14:	bl	1101c <memmove@plt>
   19c18:	ldr	r3, [r5, #28]
   19c1c:	mov	r0, r4
   19c20:	mov	r2, r7
   19c24:	mov	r1, #32
   19c28:	mov	r4, r6
   19c2c:	add	r3, r3, r7
   19c30:	str	r3, [r5, #28]
   19c34:	bl	111b4 <memset@plt>
   19c38:	ldr	r8, [r5, #28]
   19c3c:	mov	r6, r7
   19c40:	str	r7, [r5, #20]
   19c44:	sub	r9, r8, r4
   19c48:	mov	r1, #10
   19c4c:	mov	r2, r9
   19c50:	mov	r0, r4
   19c54:	bl	111cc <memchr@plt>
   19c58:	cmp	r6, #0
   19c5c:	mov	fp, r0
   19c60:	bge	19c6c <argp_parse@@Base+0x268c>
   19c64:	mov	r6, #0
   19c68:	str	r6, [r5, #20]
   19c6c:	cmp	fp, #0
   19c70:	ldr	r3, [r5, #8]
   19c74:	bne	19b68 <argp_parse@@Base+0x2588>
   19c78:	add	r1, r6, r9
   19c7c:	cmp	r1, r3
   19c80:	bcc	1a080 <argp_parse@@Base+0x2aa0>
   19c84:	ldr	sl, [r5, #12]
   19c88:	sub	r7, r3, #1
   19c8c:	cmp	sl, #0
   19c90:	blt	1a014 <argp_parse@@Base+0x2a34>
   19c94:	mov	fp, r8
   19c98:	add	r7, r7, #1
   19c9c:	sub	r6, r7, r6
   19ca0:	adds	r6, r4, r6
   19ca4:	bcs	19ebc <argp_parse@@Base+0x28dc>
   19ca8:	bl	11154 <__ctype_b_loc@plt>
   19cac:	mov	r3, r6
   19cb0:	ldr	ip, [r0]
   19cb4:	b	19cc4 <argp_parse@@Base+0x26e4>
   19cb8:	cmp	r4, r0
   19cbc:	mov	r3, r0
   19cc0:	bhi	19ec0 <argp_parse@@Base+0x28e0>
   19cc4:	ldrb	r1, [r3]
   19cc8:	mov	r7, r3
   19ccc:	sub	r0, r3, #1
   19cd0:	lsl	r1, r1, #1
   19cd4:	ldrh	r1, [ip, r1]
   19cd8:	tst	r1, #1
   19cdc:	beq	19cb8 <argp_parse@@Base+0x26d8>
   19ce0:	add	r0, r3, #1
   19ce4:	cmp	r4, r0
   19ce8:	bcs	19ed0 <argp_parse@@Base+0x28f0>
   19cec:	cmp	r4, r3
   19cf0:	movhi	r6, r0
   19cf4:	movhi	r7, r6
   19cf8:	bls	19d14 <argp_parse@@Base+0x2734>
   19cfc:	b	19d28 <argp_parse@@Base+0x2748>
   19d00:	ldrb	r1, [r6, #-1]
   19d04:	lsl	r1, r1, #1
   19d08:	ldrh	r1, [ip, r1]
   19d0c:	tst	r1, #1
   19d10:	beq	19d24 <argp_parse@@Base+0x2744>
   19d14:	cmp	r4, r3
   19d18:	mov	r6, r3
   19d1c:	sub	r3, r3, #1
   19d20:	bne	19d00 <argp_parse@@Base+0x2720>
   19d24:	mov	r7, r0
   19d28:	add	r3, r9, #1
   19d2c:	add	r3, r4, r3
   19d30:	cmp	r7, r3
   19d34:	beq	19e8c <argp_parse@@Base+0x28ac>
   19d38:	add	r1, r6, #1
   19d3c:	sub	r3, r7, r1
   19d40:	cmp	r3, sl
   19d44:	bge	19ea4 <argp_parse@@Base+0x28c4>
   19d48:	cmp	r7, r8
   19d4c:	bcs	19e9c <argp_parse@@Base+0x28bc>
   19d50:	ldr	r3, [r5, #32]
   19d54:	add	sl, sl, #1
   19d58:	sub	r3, r3, r8
   19d5c:	cmp	r3, sl
   19d60:	bgt	1a02c <argp_parse@@Base+0x2a4c>
   19d64:	ldr	r3, [r5]
   19d68:	ldr	r0, [r5, #24]
   19d6c:	cmp	r0, r6
   19d70:	bcs	19d84 <argp_parse@@Base+0x27a4>
   19d74:	sub	r2, r6, r0
   19d78:	mov	r1, #1
   19d7c:	bl	11064 <fwrite_unlocked@plt>
   19d80:	ldr	r3, [r5]
   19d84:	ldr	r2, [r3, #20]
   19d88:	ldr	r1, [r3, #24]
   19d8c:	cmp	r2, r1
   19d90:	addcc	r1, r2, #1
   19d94:	strcc	r1, [r3, #20]
   19d98:	movcc	r3, #10
   19d9c:	strbcc	r3, [r2]
   19da0:	bcs	1a070 <argp_parse@@Base+0x2a90>
   19da4:	ldr	fp, [r5, #24]
   19da8:	sub	r4, r4, fp
   19dac:	sub	r3, r7, fp
   19db0:	add	r9, r9, r4
   19db4:	mov	r8, r3
   19db8:	mov	r4, fp
   19dbc:	ldr	r2, [r5, #12]
   19dc0:	cmp	r2, r3
   19dc4:	ble	19de8 <argp_parse@@Base+0x2808>
   19dc8:	add	r3, r9, #1
   19dcc:	add	r3, fp, r3
   19dd0:	cmp	r7, r3
   19dd4:	bne	19f04 <argp_parse@@Base+0x2924>
   19dd8:	ldr	r3, [r5, #32]
   19ddc:	sub	r3, r3, r7
   19de0:	cmp	r2, r3
   19de4:	bgt	19f04 <argp_parse@@Base+0x2924>
   19de8:	cmp	r2, #0
   19dec:	ble	19e0c <argp_parse@@Base+0x282c>
   19df0:	mov	r3, #0
   19df4:	mov	r1, #32
   19df8:	strb	r1, [r4], #1
   19dfc:	add	r3, r3, #1
   19e00:	ldr	r2, [r5, #12]
   19e04:	cmp	r2, r3
   19e08:	bgt	19df8 <argp_parse@@Base+0x2818>
   19e0c:	cmp	r4, r7
   19e10:	bcc	19f68 <argp_parse@@Base+0x2988>
   19e14:	cmp	r2, #0
   19e18:	sub	r8, r9, r8
   19e1c:	add	r8, r4, r8
   19e20:	mvneq	r2, #0
   19e24:	cmp	r4, r8
   19e28:	str	r2, [r5, #20]
   19e2c:	str	r8, [r5, #28]
   19e30:	bcc	19bdc <argp_parse@@Base+0x25fc>
   19e34:	ldr	r3, [r5, #24]
   19e38:	sub	r8, r8, r3
   19e3c:	str	r8, [r5, #16]
   19e40:	add	sp, sp, #12
   19e44:	ldrd	r4, [sp]
   19e48:	ldrd	r6, [sp, #8]
   19e4c:	ldrd	r8, [sp, #16]
   19e50:	ldrd	sl, [sp, #24]
   19e54:	add	sp, sp, #32
   19e58:	pop	{pc}		; (ldr pc, [sp], #4)
   19e5c:	sub	r9, r8, r4
   19e60:	mov	r1, #10
   19e64:	mov	r2, r9
   19e68:	mov	r0, r4
   19e6c:	bl	111cc <memchr@plt>
   19e70:	mov	fp, r0
   19e74:	b	19c6c <argp_parse@@Base+0x268c>
   19e78:	mov	r3, #0
   19e7c:	add	r4, fp, #1
   19e80:	ldr	r8, [r5, #28]
   19e84:	str	r3, [r5, #20]
   19e88:	b	19bd4 <argp_parse@@Base+0x25f4>
   19e8c:	ldr	r3, [r5, #32]
   19e90:	sub	r3, r3, r6
   19e94:	cmp	r3, sl
   19e98:	ble	19d48 <argp_parse@@Base+0x2768>
   19e9c:	add	r1, r6, #1
   19ea0:	sub	r3, r7, r1
   19ea4:	mov	r2, #10
   19ea8:	sub	r8, r7, r4
   19eac:	mov	fp, r4
   19eb0:	mov	r4, r1
   19eb4:	strb	r2, [r6]
   19eb8:	b	19dbc <argp_parse@@Base+0x27dc>
   19ebc:	add	r7, r6, #1
   19ec0:	cmp	r4, r7
   19ec4:	bcs	19ed0 <argp_parse@@Base+0x28f0>
   19ec8:	mov	r6, r7
   19ecc:	b	19d28 <argp_parse@@Base+0x2748>
   19ed0:	cmp	r6, fp
   19ed4:	bcc	19fd8 <argp_parse@@Base+0x29f8>
   19ed8:	cmp	r6, fp
   19edc:	beq	19fc4 <argp_parse@@Base+0x29e4>
   19ee0:	bl	11154 <__ctype_b_loc@plt>
   19ee4:	ldr	r1, [r0]
   19ee8:	mov	r7, r6
   19eec:	ldrb	r3, [r7, #1]!
   19ef0:	lsl	r3, r3, #1
   19ef4:	ldrh	r3, [r1, r3]
   19ef8:	tst	r3, #1
   19efc:	bne	19eec <argp_parse@@Base+0x290c>
   19f00:	b	19d28 <argp_parse@@Base+0x2748>
   19f04:	cmp	r2, #0
   19f08:	movgt	r6, #0
   19f0c:	movgt	sl, #32
   19f10:	bgt	19f30 <argp_parse@@Base+0x2950>
   19f14:	b	19e0c <argp_parse@@Base+0x282c>
   19f18:	str	ip, [r0, #20]
   19f1c:	add	r6, r6, #1
   19f20:	strb	sl, [r2]
   19f24:	ldr	r2, [r5, #12]
   19f28:	cmp	r2, r6
   19f2c:	ble	19e0c <argp_parse@@Base+0x282c>
   19f30:	ldr	r0, [r5]
   19f34:	ldr	r2, [r0, #20]
   19f38:	ldr	r1, [r0, #24]
   19f3c:	add	ip, r2, #1
   19f40:	cmp	r2, r1
   19f44:	bcc	19f18 <argp_parse@@Base+0x2938>
   19f48:	mov	r1, #32
   19f4c:	add	r6, r6, #1
   19f50:	bl	111e4 <__overflow@plt>
   19f54:	ldr	r2, [r5, #12]
   19f58:	cmp	r6, r2
   19f5c:	blt	19f30 <argp_parse@@Base+0x2950>
   19f60:	cmp	r4, r7
   19f64:	bcs	19e14 <argp_parse@@Base+0x2834>
   19f68:	add	r2, fp, r9
   19f6c:	mov	r1, r7
   19f70:	sub	r2, r2, r7
   19f74:	mov	r0, r4
   19f78:	bl	1101c <memmove@plt>
   19f7c:	ldr	r2, [r5, #12]
   19f80:	b	19e14 <argp_parse@@Base+0x2834>
   19f84:	mov	r8, #32
   19f88:	b	19f98 <argp_parse@@Base+0x29b8>
   19f8c:	add	r6, r6, #1
   19f90:	cmp	r7, r6
   19f94:	beq	19c38 <argp_parse@@Base+0x2658>
   19f98:	ldr	r0, [r5]
   19f9c:	ldr	r3, [r0, #20]
   19fa0:	ldr	r2, [r0, #24]
   19fa4:	add	r1, r3, #1
   19fa8:	cmp	r3, r2
   19fac:	strcc	r1, [r0, #20]
   19fb0:	strbcc	r8, [r3]
   19fb4:	bcc	19f8c <argp_parse@@Base+0x29ac>
   19fb8:	mov	r1, #32
   19fbc:	bl	111e4 <__overflow@plt>
   19fc0:	b	19f8c <argp_parse@@Base+0x29ac>
   19fc4:	mov	r3, #0
   19fc8:	add	r4, r6, #1
   19fcc:	ldr	r8, [r5, #28]
   19fd0:	str	r3, [r5, #20]
   19fd4:	b	19bd4 <argp_parse@@Base+0x25f4>
   19fd8:	add	r7, r6, #1
   19fdc:	b	1a000 <argp_parse@@Base+0x2a20>
   19fe0:	bl	11154 <__ctype_b_loc@plt>
   19fe4:	ldrb	r3, [r7]
   19fe8:	add	r7, r7, #1
   19fec:	ldr	r1, [r0]
   19ff0:	lsl	r3, r3, #1
   19ff4:	ldrh	r3, [r1, r3]
   19ff8:	tst	r3, #1
   19ffc:	bne	19ee8 <argp_parse@@Base+0x2908>
   1a000:	cmp	fp, r7
   1a004:	mov	r6, r7
   1a008:	bne	19fe0 <argp_parse@@Base+0x2a00>
   1a00c:	b	19ed8 <argp_parse@@Base+0x28f8>
   1a010:	add	r1, r9, r6
   1a014:	sub	r7, r7, r1
   1a018:	str	r1, [r5, #20]
   1a01c:	add	r8, r8, r7
   1a020:	ldr	r3, [r5, #24]
   1a024:	str	r8, [r5, #28]
   1a028:	b	19e38 <argp_parse@@Base+0x2858>
   1a02c:	sub	r8, r8, r7
   1a030:	mov	r1, r7
   1a034:	mov	r2, r8
   1a038:	add	r0, r6, sl
   1a03c:	bl	1101c <memmove@plt>
   1a040:	ldr	r3, [r5, #12]
   1a044:	mov	r2, r6
   1a048:	mov	r1, #10
   1a04c:	mov	fp, r4
   1a050:	strb	r1, [r2], #1
   1a054:	add	r7, r3, #1
   1a058:	add	r7, r6, r7
   1a05c:	add	r9, r7, r8
   1a060:	sub	r8, r7, r4
   1a064:	sub	r9, r9, r4
   1a068:	mov	r4, r2
   1a06c:	b	19dbc <argp_parse@@Base+0x27dc>
   1a070:	mov	r0, r3
   1a074:	mov	r1, #10
   1a078:	bl	111e4 <__overflow@plt>
   1a07c:	b	19da4 <argp_parse@@Base+0x27c4>
   1a080:	str	r1, [r5, #20]
   1a084:	ldr	r3, [r5, #24]
   1a088:	ldr	r8, [r5, #28]
   1a08c:	b	19e38 <argp_parse@@Base+0x2858>
   1a090:	str	r4, [sp, #-8]!
   1a094:	mov	r4, r0
   1a098:	str	lr, [sp, #4]
   1a09c:	bl	19b30 <argp_parse@@Base+0x2550>
   1a0a0:	ldr	r0, [r4, #24]
   1a0a4:	ldr	r2, [r4, #28]
   1a0a8:	cmp	r2, r0
   1a0ac:	bls	1a0c4 <argp_parse@@Base+0x2ae4>
   1a0b0:	sub	r2, r2, r0
   1a0b4:	mov	r1, #1
   1a0b8:	ldr	r3, [r4]
   1a0bc:	bl	11064 <fwrite_unlocked@plt>
   1a0c0:	ldr	r0, [r4, #24]
   1a0c4:	bl	18618 <argp_parse@@Base+0x1038>
   1a0c8:	mov	r0, r4
   1a0cc:	ldr	r4, [sp]
   1a0d0:	ldr	lr, [sp, #4]
   1a0d4:	add	sp, sp, #8
   1a0d8:	b	18618 <argp_parse@@Base+0x1038>
   1a0dc:	strd	r4, [sp, #-16]!
   1a0e0:	mov	r4, r0
   1a0e4:	mov	r5, r1
   1a0e8:	str	r6, [sp, #8]
   1a0ec:	str	lr, [sp, #12]
   1a0f0:	bl	19b30 <argp_parse@@Base+0x2550>
   1a0f4:	mov	r1, #1
   1a0f8:	ldr	r3, [r4]
   1a0fc:	ldr	r2, [r4, #24]
   1a100:	ldr	ip, [r4, #28]
   1a104:	mov	r0, r2
   1a108:	sub	r2, ip, r2
   1a10c:	bl	11064 <fwrite_unlocked@plt>
   1a110:	mov	ip, r0
   1a114:	ldr	r0, [r4, #24]
   1a118:	ldr	r3, [r4, #28]
   1a11c:	sub	r2, r3, r0
   1a120:	cmp	ip, r2
   1a124:	bne	1a184 <argp_parse@@Base+0x2ba4>
   1a128:	ldr	r1, [r4, #32]
   1a12c:	mov	r3, #0
   1a130:	str	r3, [r4, #16]
   1a134:	str	r0, [r4, #28]
   1a138:	sub	r1, r1, r0
   1a13c:	cmp	r1, r5
   1a140:	movcs	r3, #1
   1a144:	bcs	1a170 <argp_parse@@Base+0x2b90>
   1a148:	adds	r5, r1, r5
   1a14c:	bcs	1a1ac <argp_parse@@Base+0x2bcc>
   1a150:	mov	r1, r5
   1a154:	bl	19a40 <argp_parse@@Base+0x2460>
   1a158:	cmp	r0, #0
   1a15c:	beq	1a1ac <argp_parse@@Base+0x2bcc>
   1a160:	add	r1, r0, r5
   1a164:	mov	r3, #1
   1a168:	str	r0, [r4, #24]
   1a16c:	strd	r0, [r4, #28]
   1a170:	ldrd	r4, [sp]
   1a174:	mov	r0, r3
   1a178:	ldr	r6, [sp, #8]
   1a17c:	add	sp, sp, #12
   1a180:	pop	{pc}		; (ldr pc, [sp], #4)
   1a184:	ldr	lr, [r4, #16]
   1a188:	sub	r3, r3, ip
   1a18c:	add	r1, r0, ip
   1a190:	sub	r2, r3, r0
   1a194:	str	r3, [r4, #28]
   1a198:	sub	ip, lr, ip
   1a19c:	str	ip, [r4, #16]
   1a1a0:	bl	1101c <memmove@plt>
   1a1a4:	mov	r3, #0
   1a1a8:	b	1a170 <argp_parse@@Base+0x2b90>
   1a1ac:	bl	1119c <__errno_location@plt>
   1a1b0:	mov	r2, #12
   1a1b4:	mov	r3, #0
   1a1b8:	str	r2, [r0]
   1a1bc:	b	1a170 <argp_parse@@Base+0x2b90>
   1a1c0:	ldr	ip, [r0, #28]
   1a1c4:	ldr	r3, [r0, #32]
   1a1c8:	sub	r3, r3, ip
   1a1cc:	cmp	r3, r1
   1a1d0:	bcc	1a1dc <argp_parse@@Base+0x2bfc>
   1a1d4:	mov	r0, #1
   1a1d8:	bx	lr
   1a1dc:	b	1a0dc <argp_parse@@Base+0x2afc>
   1a1e0:	push	{r1, r2, r3}
   1a1e4:	mov	r1, #150	; 0x96
   1a1e8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1a1ec:	mov	r5, r0
   1a1f0:	strd	r6, [sp, #8]
   1a1f4:	str	lr, [sp, #16]
   1a1f8:	sub	sp, sp, #8
   1a1fc:	ldr	r7, [sp, #28]
   1a200:	add	r6, sp, #32
   1a204:	ldr	r0, [r5, #28]
   1a208:	ldr	r3, [r5, #32]
   1a20c:	sub	r2, r3, r0
   1a210:	cmp	r1, r2
   1a214:	bhi	1a264 <argp_parse@@Base+0x2c84>
   1a218:	sub	r4, r3, r0
   1a21c:	mov	r2, r7
   1a220:	str	r6, [sp, #4]
   1a224:	mov	r1, r4
   1a228:	mov	r3, r6
   1a22c:	bl	11238 <vsnprintf@plt>
   1a230:	cmp	r0, r4
   1a234:	add	r1, r0, #1
   1a238:	bcs	1a204 <argp_parse@@Base+0x2c24>
   1a23c:	ldr	r3, [r5, #28]
   1a240:	add	r3, r3, r0
   1a244:	str	r3, [r5, #28]
   1a248:	add	sp, sp, #8
   1a24c:	ldrd	r4, [sp]
   1a250:	ldrd	r6, [sp, #8]
   1a254:	ldr	lr, [sp, #16]
   1a258:	add	sp, sp, #20
   1a25c:	add	sp, sp, #12
   1a260:	bx	lr
   1a264:	mov	r0, r5
   1a268:	bl	1a0dc <argp_parse@@Base+0x2afc>
   1a26c:	cmp	r0, #0
   1a270:	beq	1a280 <argp_parse@@Base+0x2ca0>
   1a274:	ldr	r0, [r5, #28]
   1a278:	ldr	r3, [r5, #32]
   1a27c:	b	1a218 <argp_parse@@Base+0x2c38>
   1a280:	mvn	r0, #0
   1a284:	b	1a248 <argp_parse@@Base+0x2c68>
   1a288:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a28c:	ldr	r2, [r1]
   1a290:	ldr	ip, [r1, #32]
   1a294:	strd	r6, [sp, #8]
   1a298:	strd	r8, [sp, #16]
   1a29c:	strd	sl, [sp, #24]
   1a2a0:	str	lr, [sp, #32]
   1a2a4:	sub	sp, sp, #36	; 0x24
   1a2a8:	str	r2, [sp, #24]
   1a2ac:	str	r1, [sp, #28]
   1a2b0:	ldr	r1, [r1, #28]
   1a2b4:	cmp	r1, ip
   1a2b8:	cmplt	ip, r2
   1a2bc:	str	r1, [sp, #20]
   1a2c0:	bge	1a3c0 <argp_parse@@Base+0x2de0>
   1a2c4:	mov	r3, r1
   1a2c8:	lsl	r1, ip, #2
   1a2cc:	mov	lr, r2
   1a2d0:	mov	r2, r1
   1a2d4:	add	r2, r2, #8
   1a2d8:	str	r1, [sp, #8]
   1a2dc:	add	r1, r0, r1
   1a2e0:	str	r1, [sp, #4]
   1a2e4:	str	r2, [sp, #12]
   1a2e8:	sub	r2, r1, #8
   1a2ec:	str	r2, [sp, #16]
   1a2f0:	sub	r1, lr, ip
   1a2f4:	sub	r8, ip, r3
   1a2f8:	cmp	r1, r8
   1a2fc:	ble	1a3f8 <argp_parse@@Base+0x2e18>
   1a300:	lsl	r2, r3, #2
   1a304:	sub	lr, lr, r8
   1a308:	sub	r5, r8, #1
   1a30c:	add	r1, lr, #2
   1a310:	lsl	r6, lr, #2
   1a314:	cmp	r2, r1, lsl #2
   1a318:	add	r7, r2, #8
   1a31c:	add	r2, r0, r2
   1a320:	add	r1, r0, r6
   1a324:	movge	r4, #1
   1a328:	movlt	r4, #0
   1a32c:	cmp	r6, r7
   1a330:	orrge	r4, r4, #1
   1a334:	orr	r9, r1, r2
   1a338:	cmp	r5, #3
   1a33c:	movls	r4, #0
   1a340:	andhi	r4, r4, #1
   1a344:	tst	r9, #7
   1a348:	movne	r4, #0
   1a34c:	cmp	r4, #0
   1a350:	beq	1a4cc <argp_parse@@Base+0x2eec>
   1a354:	lsr	fp, r8, #1
   1a358:	sub	r2, r2, #8
   1a35c:	sub	sl, r1, #8
   1a360:	mov	r9, r2
   1a364:	add	fp, r1, fp, lsl #3
   1a368:	ldrd	r4, [r2, #8]!
   1a36c:	ldrd	r6, [sl, #8]!
   1a370:	strd	r6, [r9, #8]!
   1a374:	strd	r4, [r1], #8
   1a378:	cmp	r1, fp
   1a37c:	bne	1a368 <argp_parse@@Base+0x2d88>
   1a380:	bic	r2, r8, #1
   1a384:	cmp	r8, r2
   1a388:	beq	1a3a4 <argp_parse@@Base+0x2dc4>
   1a38c:	add	r1, r3, r2
   1a390:	add	r2, lr, r2
   1a394:	ldr	r4, [r0, r1, lsl #2]
   1a398:	ldr	r5, [r0, r2, lsl #2]
   1a39c:	str	r5, [r0, r1, lsl #2]
   1a3a0:	str	r4, [r0, r2, lsl #2]
   1a3a4:	cmp	lr, ip
   1a3a8:	movle	r2, #0
   1a3ac:	movgt	r2, #1
   1a3b0:	cmp	r3, ip
   1a3b4:	movge	r2, #0
   1a3b8:	cmp	r2, #0
   1a3bc:	bne	1a2f0 <argp_parse@@Base+0x2d10>
   1a3c0:	ldr	r3, [sp, #24]
   1a3c4:	ldr	r2, [sp, #28]
   1a3c8:	sub	ip, r3, ip
   1a3cc:	str	r3, [r2, #32]
   1a3d0:	ldr	r3, [sp, #20]
   1a3d4:	add	ip, ip, r3
   1a3d8:	str	ip, [r2, #28]
   1a3dc:	add	sp, sp, #36	; 0x24
   1a3e0:	ldrd	r4, [sp]
   1a3e4:	ldrd	r6, [sp, #8]
   1a3e8:	ldrd	r8, [sp, #16]
   1a3ec:	ldrd	sl, [sp, #24]
   1a3f0:	add	sp, sp, #32
   1a3f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3f8:	ldr	r4, [sp, #8]
   1a3fc:	lsl	r5, r3, #2
   1a400:	sub	r7, r1, #1
   1a404:	ldr	r8, [sp, #12]
   1a408:	mov	r6, r5
   1a40c:	add	r5, r5, #8
   1a410:	add	r2, r0, r6
   1a414:	cmp	r8, r6
   1a418:	cmpgt	r5, r4
   1a41c:	ldr	r8, [sp, #4]
   1a420:	movle	r5, #1
   1a424:	movgt	r5, #0
   1a428:	cmp	r7, #3
   1a42c:	movls	r4, #0
   1a430:	andhi	r4, r5, #1
   1a434:	orr	r6, r2, r8
   1a438:	tst	r6, #7
   1a43c:	movne	r4, #0
   1a440:	cmp	r4, #0
   1a444:	beq	1a4a4 <argp_parse@@Base+0x2ec4>
   1a448:	lsr	fp, r1, #1
   1a44c:	ldr	sl, [sp, #16]
   1a450:	sub	r2, r2, #8
   1a454:	mov	r9, r2
   1a458:	add	fp, r8, fp, lsl #3
   1a45c:	ldrd	r4, [r2, #8]!
   1a460:	ldrd	r6, [sl, #8]!
   1a464:	strd	r6, [r9, #8]!
   1a468:	strd	r4, [r8], #8
   1a46c:	cmp	r8, fp
   1a470:	bne	1a45c <argp_parse@@Base+0x2e7c>
   1a474:	bic	r2, r1, #1
   1a478:	cmp	r1, r2
   1a47c:	addeq	r3, r1, r3
   1a480:	beq	1a3a4 <argp_parse@@Base+0x2dc4>
   1a484:	add	r4, r3, r2
   1a488:	add	r2, ip, r2
   1a48c:	ldr	r5, [r0, r4, lsl #2]
   1a490:	add	r3, r1, r3
   1a494:	ldr	r6, [r0, r2, lsl #2]
   1a498:	str	r6, [r0, r4, lsl #2]
   1a49c:	str	r5, [r0, r2, lsl #2]
   1a4a0:	b	1a3a4 <argp_parse@@Base+0x2dc4>
   1a4a4:	add	r3, r1, r3
   1a4a8:	ldr	r1, [sp, #4]
   1a4ac:	add	r6, r0, r3, lsl #2
   1a4b0:	ldr	r5, [r1]
   1a4b4:	ldr	r4, [r2]
   1a4b8:	str	r5, [r2], #4
   1a4bc:	cmp	r2, r6
   1a4c0:	str	r4, [r1], #4
   1a4c4:	bne	1a4b0 <argp_parse@@Base+0x2ed0>
   1a4c8:	b	1a3a4 <argp_parse@@Base+0x2dc4>
   1a4cc:	add	r8, r3, r8
   1a4d0:	add	r8, r0, r8, lsl #2
   1a4d4:	ldr	r5, [r1]
   1a4d8:	ldr	r4, [r2]
   1a4dc:	str	r5, [r2], #4
   1a4e0:	cmp	r8, r2
   1a4e4:	str	r4, [r1], #4
   1a4e8:	bne	1a4d4 <argp_parse@@Base+0x2ef4>
   1a4ec:	b	1a3a4 <argp_parse@@Base+0x2dc4>
   1a4f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a4f4:	strd	r6, [sp, #8]
   1a4f8:	strd	r8, [sp, #16]
   1a4fc:	strd	sl, [sp, #24]
   1a500:	str	lr, [sp, #32]
   1a504:	sub	sp, sp, #52	; 0x34
   1a508:	str	r3, [sp, #8]
   1a50c:	ldr	r3, [sp, #96]	; 0x60
   1a510:	str	r1, [sp, #20]
   1a514:	str	r2, [sp, #28]
   1a518:	str	r0, [sp, #32]
   1a51c:	ldr	r9, [r3, #20]
   1a520:	ldrb	r5, [r9]
   1a524:	mov	r8, r9
   1a528:	str	r9, [sp, #24]
   1a52c:	cmp	r5, #61	; 0x3d
   1a530:	cmpne	r5, #0
   1a534:	movne	r5, #1
   1a538:	moveq	r5, #0
   1a53c:	beq	1a554 <argp_parse@@Base+0x2f74>
   1a540:	ldrb	r3, [r8, #1]!
   1a544:	cmp	r3, #0
   1a548:	cmpne	r3, #61	; 0x3d
   1a54c:	bne	1a540 <argp_parse@@Base+0x2f60>
   1a550:	sub	r5, r8, r9
   1a554:	ldr	r3, [sp, #8]
   1a558:	ldr	r3, [r3]
   1a55c:	cmp	r3, #0
   1a560:	str	r3, [sp, #12]
   1a564:	beq	1a758 <argp_parse@@Base+0x3178>
   1a568:	ldr	fp, [sp, #8]
   1a56c:	mov	r4, r3
   1a570:	mov	r6, #0
   1a574:	str	fp, [sp, #16]
   1a578:	b	1a580 <argp_parse@@Base+0x2fa0>
   1a57c:	mov	r6, r7
   1a580:	mov	r2, r5
   1a584:	mov	r1, r9
   1a588:	mov	r0, r4
   1a58c:	add	r7, r6, #1
   1a590:	bl	11280 <strncmp@plt>
   1a594:	cmp	r0, #0
   1a598:	mov	sl, fp
   1a59c:	mov	r0, r4
   1a5a0:	bne	1a5b0 <argp_parse@@Base+0x2fd0>
   1a5a4:	bl	11178 <strlen@plt>
   1a5a8:	cmp	r0, r5
   1a5ac:	beq	1a6d0 <argp_parse@@Base+0x30f0>
   1a5b0:	ldr	r4, [fp, #16]!
   1a5b4:	cmp	r4, #0
   1a5b8:	bne	1a57c <argp_parse@@Base+0x2f9c>
   1a5bc:	ldr	r3, [sp, #100]	; 0x64
   1a5c0:	cmp	r3, #0
   1a5c4:	ldr	r3, [sp, #92]	; 0x5c
   1a5c8:	beq	1a664 <argp_parse@@Base+0x3084>
   1a5cc:	cmp	r3, #0
   1a5d0:	bne	1a7d0 <argp_parse@@Base+0x31f0>
   1a5d4:	ldr	r0, [sp, #12]
   1a5d8:	mov	r9, r3
   1a5dc:	mov	sl, r3
   1a5e0:	mov	fp, #1
   1a5e4:	str	r3, [sp, #40]	; 0x28
   1a5e8:	ldr	r1, [sp, #24]
   1a5ec:	str	r7, [sp, #24]
   1a5f0:	mov	r7, r5
   1a5f4:	ldr	r5, [sp, #16]
   1a5f8:	str	r6, [sp, #16]
   1a5fc:	ldr	r6, [sp, #96]	; 0x60
   1a600:	str	r3, [sp, #44]	; 0x2c
   1a604:	mvn	r3, #0
   1a608:	str	r3, [sp, #36]	; 0x24
   1a60c:	mov	r2, r7
   1a610:	bl	11280 <strncmp@plt>
   1a614:	cmp	r0, #0
   1a618:	bne	1a64c <argp_parse@@Base+0x306c>
   1a61c:	cmp	sl, #0
   1a620:	beq	1a9b4 <argp_parse@@Base+0x33d4>
   1a624:	ldr	r2, [r5, #4]
   1a628:	ldr	r1, [sl, #4]
   1a62c:	cmp	r1, r2
   1a630:	beq	1aad4 <argp_parse@@Base+0x34f4>
   1a634:	ldr	r3, [sp, #40]	; 0x28
   1a638:	cmp	r3, #0
   1a63c:	bne	1a64c <argp_parse@@Base+0x306c>
   1a640:	cmp	r4, #0
   1a644:	beq	1aa4c <argp_parse@@Base+0x346c>
   1a648:	strb	fp, [r4, r9]
   1a64c:	ldr	r0, [r5, #16]!
   1a650:	add	r9, r9, #1
   1a654:	cmp	r0, #0
   1a658:	beq	1a8e4 <argp_parse@@Base+0x3304>
   1a65c:	ldr	r1, [r6, #20]
   1a660:	b	1a60c <argp_parse@@Base+0x302c>
   1a664:	cmp	r3, #0
   1a668:	beq	1a848 <argp_parse@@Base+0x3268>
   1a66c:	ldr	r0, [sp, #12]
   1a670:	mvn	r3, #0
   1a674:	ldr	r6, [sp, #100]	; 0x64
   1a678:	str	r3, [sp, #36]	; 0x24
   1a67c:	ldr	sl, [sp, #16]
   1a680:	mov	r7, r6
   1a684:	mov	r2, r5
   1a688:	mov	r1, r9
   1a68c:	bl	11280 <strncmp@plt>
   1a690:	cmp	r0, #0
   1a694:	bne	1a6a8 <argp_parse@@Base+0x30c8>
   1a698:	cmp	r4, #0
   1a69c:	moveq	r4, sl
   1a6a0:	movne	r6, #1
   1a6a4:	streq	r7, [sp, #36]	; 0x24
   1a6a8:	ldr	r0, [sl, #16]!
   1a6ac:	add	r7, r7, #1
   1a6b0:	cmp	r0, #0
   1a6b4:	bne	1a684 <argp_parse@@Base+0x30a4>
   1a6b8:	cmp	r6, #0
   1a6bc:	moveq	sl, r4
   1a6c0:	bne	1a94c <argp_parse@@Base+0x336c>
   1a6c4:	cmp	sl, #0
   1a6c8:	ldrne	r6, [sp, #36]	; 0x24
   1a6cc:	beq	1a758 <argp_parse@@Base+0x3178>
   1a6d0:	ldr	r3, [sp, #96]	; 0x60
   1a6d4:	mov	r2, #0
   1a6d8:	ldr	r1, [sp, #96]	; 0x60
   1a6dc:	ldr	r0, [sl, #4]
   1a6e0:	ldr	r3, [r3]
   1a6e4:	str	r2, [r1, #20]
   1a6e8:	add	r2, r3, #1
   1a6ec:	str	r2, [r1]
   1a6f0:	ldrb	r1, [r8]
   1a6f4:	cmp	r1, #0
   1a6f8:	bne	1a740 <argp_parse@@Base+0x3160>
   1a6fc:	cmp	r0, #1
   1a700:	beq	1a980 <argp_parse@@Base+0x33a0>
   1a704:	ldr	r3, [sp, #88]	; 0x58
   1a708:	cmp	r3, #0
   1a70c:	strne	r6, [r3]
   1a710:	ldr	r3, [sl, #8]
   1a714:	ldr	r0, [sl, #12]
   1a718:	cmp	r3, #0
   1a71c:	strne	r0, [r3]
   1a720:	movne	r0, #0
   1a724:	add	sp, sp, #52	; 0x34
   1a728:	ldrd	r4, [sp]
   1a72c:	ldrd	r6, [sp, #8]
   1a730:	ldrd	r8, [sp, #16]
   1a734:	ldrd	sl, [sp, #24]
   1a738:	add	sp, sp, #32
   1a73c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a740:	cmp	r0, #0
   1a744:	beq	1a9c0 <argp_parse@@Base+0x33e0>
   1a748:	ldr	r3, [sp, #96]	; 0x60
   1a74c:	add	r8, r8, #1
   1a750:	str	r8, [r3, #12]
   1a754:	b	1a704 <argp_parse@@Base+0x3124>
   1a758:	ldr	r3, [sp, #92]	; 0x5c
   1a75c:	cmp	r3, #0
   1a760:	beq	1a79c <argp_parse@@Base+0x31bc>
   1a764:	ldr	r2, [sp, #20]
   1a768:	ldr	r3, [sp, #96]	; 0x60
   1a76c:	ldr	r3, [r3]
   1a770:	ldr	r3, [r2, r3, lsl #2]
   1a774:	ldrb	r3, [r3, #1]
   1a778:	cmp	r3, #45	; 0x2d
   1a77c:	beq	1a79c <argp_parse@@Base+0x31bc>
   1a780:	ldr	r0, [sp, #28]
   1a784:	ldr	r3, [sp, #96]	; 0x60
   1a788:	ldr	r3, [r3, #20]
   1a78c:	ldrb	r1, [r3]
   1a790:	bl	11184 <strchr@plt>
   1a794:	cmp	r0, #0
   1a798:	bne	1aa10 <argp_parse@@Base+0x3430>
   1a79c:	ldr	r3, [sp, #100]	; 0x64
   1a7a0:	cmp	r3, #0
   1a7a4:	bne	1a8b0 <argp_parse@@Base+0x32d0>
   1a7a8:	ldr	r3, [sp, #96]	; 0x60
   1a7ac:	mov	r2, #0
   1a7b0:	mov	r0, #63	; 0x3f
   1a7b4:	ldr	r1, [sp, #96]	; 0x60
   1a7b8:	ldr	r3, [r3]
   1a7bc:	str	r2, [r1, #8]
   1a7c0:	str	r2, [r1, #20]
   1a7c4:	add	r3, r3, #1
   1a7c8:	str	r3, [r1]
   1a7cc:	b	1a724 <argp_parse@@Base+0x3144>
   1a7d0:	ldr	r0, [sp, #12]
   1a7d4:	mvn	r3, #0
   1a7d8:	mov	sl, r4
   1a7dc:	mov	r9, r4
   1a7e0:	ldr	fp, [sp, #16]
   1a7e4:	str	r3, [sp, #36]	; 0x24
   1a7e8:	ldr	r1, [sp, #24]
   1a7ec:	str	r7, [sp, #24]
   1a7f0:	ldr	r7, [sp, #96]	; 0x60
   1a7f4:	str	r4, [sp, #40]	; 0x28
   1a7f8:	str	r4, [sp, #44]	; 0x2c
   1a7fc:	mov	r2, r5
   1a800:	bl	11280 <strncmp@plt>
   1a804:	cmp	r0, #0
   1a808:	bne	1a830 <argp_parse@@Base+0x3250>
   1a80c:	cmp	sl, #0
   1a810:	beq	1a9a8 <argp_parse@@Base+0x33c8>
   1a814:	ldr	r3, [sp, #40]	; 0x28
   1a818:	cmp	r3, #0
   1a81c:	bne	1a830 <argp_parse@@Base+0x3250>
   1a820:	cmp	r4, #0
   1a824:	beq	1aa18 <argp_parse@@Base+0x3438>
   1a828:	mov	r3, #1
   1a82c:	strb	r3, [r4, r9]
   1a830:	ldr	r0, [fp, #16]!
   1a834:	add	r9, r9, #1
   1a838:	cmp	r0, #0
   1a83c:	beq	1a8e8 <argp_parse@@Base+0x3308>
   1a840:	ldr	r1, [r7, #20]
   1a844:	b	1a7fc <argp_parse@@Base+0x321c>
   1a848:	mov	r6, r3
   1a84c:	mov	r7, r3
   1a850:	ldr	r0, [sp, #12]
   1a854:	mvn	r3, #0
   1a858:	ldr	sl, [sp, #16]
   1a85c:	str	r3, [sp, #36]	; 0x24
   1a860:	b	1a888 <argp_parse@@Base+0x32a8>
   1a864:	ldr	r2, [r4, #4]
   1a868:	ldr	r3, [sl, #4]
   1a86c:	cmp	r2, r3
   1a870:	beq	1aab0 <argp_parse@@Base+0x34d0>
   1a874:	mov	r6, #1
   1a878:	ldr	r0, [sl, #16]!
   1a87c:	add	r7, r7, #1
   1a880:	cmp	r0, #0
   1a884:	beq	1a6b8 <argp_parse@@Base+0x30d8>
   1a888:	mov	r2, r5
   1a88c:	mov	r1, r9
   1a890:	bl	11280 <strncmp@plt>
   1a894:	cmp	r0, #0
   1a898:	bne	1a878 <argp_parse@@Base+0x3298>
   1a89c:	cmp	r4, #0
   1a8a0:	bne	1a864 <argp_parse@@Base+0x3284>
   1a8a4:	mov	r4, sl
   1a8a8:	str	r7, [sp, #36]	; 0x24
   1a8ac:	b	1a878 <argp_parse@@Base+0x3298>
   1a8b0:	ldr	r3, [sp, #96]	; 0x60
   1a8b4:	movw	r0, #53912	; 0xd298
   1a8b8:	movt	r0, #2
   1a8bc:	movw	r1, #50744	; 0xc638
   1a8c0:	movt	r1, #1
   1a8c4:	ldr	r0, [r0]
   1a8c8:	ldr	ip, [r3, #20]
   1a8cc:	ldr	r3, [sp, #20]
   1a8d0:	ldr	r2, [r3]
   1a8d4:	str	ip, [sp]
   1a8d8:	ldr	r3, [sp, #104]	; 0x68
   1a8dc:	bl	11190 <fprintf@plt>
   1a8e0:	b	1a7a8 <argp_parse@@Base+0x31c8>
   1a8e4:	ldr	r6, [sp, #16]
   1a8e8:	ldr	r3, [sp, #40]	; 0x28
   1a8ec:	orrs	r3, r4, r3
   1a8f0:	beq	1a6c4 <argp_parse@@Base+0x30e4>
   1a8f4:	ldr	r3, [sp, #40]	; 0x28
   1a8f8:	movw	r5, #53912	; 0xd298
   1a8fc:	movt	r5, #2
   1a900:	ldr	r0, [r5]
   1a904:	cmp	r3, #0
   1a908:	beq	1aaf8 <argp_parse@@Base+0x3518>
   1a90c:	ldr	r2, [sp, #20]
   1a910:	movw	r1, #50656	; 0xc5e0
   1a914:	movt	r1, #1
   1a918:	ldr	r3, [sp, #96]	; 0x60
   1a91c:	ldr	r2, [r2]
   1a920:	ldr	ip, [r3, #20]
   1a924:	ldr	r3, [sp, #104]	; 0x68
   1a928:	str	ip, [sp]
   1a92c:	bl	11190 <fprintf@plt>
   1a930:	ldr	r3, [sp, #44]	; 0x2c
   1a934:	cmp	r3, #0
   1a938:	beq	1a944 <argp_parse@@Base+0x3364>
   1a93c:	mov	r0, r4
   1a940:	bl	18618 <argp_parse@@Base+0x1038>
   1a944:	ldr	r3, [sp, #96]	; 0x60
   1a948:	ldr	r9, [r3, #20]
   1a94c:	mov	r0, r9
   1a950:	bl	11178 <strlen@plt>
   1a954:	ldr	r3, [sp, #96]	; 0x60
   1a958:	add	r9, r9, r0
   1a95c:	mov	r2, #0
   1a960:	mov	r0, #63	; 0x3f
   1a964:	ldr	r1, [sp, #96]	; 0x60
   1a968:	ldr	r3, [r3]
   1a96c:	str	r2, [r1, #8]
   1a970:	str	r9, [r1, #20]
   1a974:	add	r3, r3, #1
   1a978:	str	r3, [r1]
   1a97c:	b	1a724 <argp_parse@@Base+0x3144>
   1a980:	ldr	r1, [sp, #32]
   1a984:	cmp	r2, r1
   1a988:	bge	1aa80 <argp_parse@@Base+0x34a0>
   1a98c:	ldr	r1, [sp, #20]
   1a990:	add	r3, r3, #2
   1a994:	ldr	r2, [r1, r2, lsl #2]
   1a998:	ldr	r1, [sp, #96]	; 0x60
   1a99c:	str	r3, [r1]
   1a9a0:	str	r2, [r1, #12]
   1a9a4:	b	1a704 <argp_parse@@Base+0x3124>
   1a9a8:	mov	sl, fp
   1a9ac:	str	r9, [sp, #36]	; 0x24
   1a9b0:	b	1a830 <argp_parse@@Base+0x3250>
   1a9b4:	mov	sl, r5
   1a9b8:	str	r9, [sp, #36]	; 0x24
   1a9bc:	b	1a64c <argp_parse@@Base+0x306c>
   1a9c0:	ldr	r3, [sp, #100]	; 0x64
   1a9c4:	cmp	r3, #0
   1a9c8:	bne	1a9e0 <argp_parse@@Base+0x3400>
   1a9cc:	ldr	r3, [sl, #12]
   1a9d0:	mov	r0, #63	; 0x3f
   1a9d4:	ldr	r2, [sp, #96]	; 0x60
   1a9d8:	str	r3, [r2, #8]
   1a9dc:	b	1a724 <argp_parse@@Base+0x3144>
   1a9e0:	ldr	ip, [sl]
   1a9e4:	movw	r0, #53912	; 0xd298
   1a9e8:	movt	r0, #2
   1a9ec:	movw	r1, #50776	; 0xc658
   1a9f0:	movt	r1, #1
   1a9f4:	ldr	r3, [sp, #20]
   1a9f8:	ldr	r0, [r0]
   1a9fc:	ldr	r2, [r3]
   1aa00:	str	ip, [sp]
   1aa04:	ldr	r3, [sp, #104]	; 0x68
   1aa08:	bl	11190 <fprintf@plt>
   1aa0c:	b	1a9cc <argp_parse@@Base+0x33ec>
   1aa10:	mvn	r0, #0
   1aa14:	b	1a724 <argp_parse@@Base+0x3144>
   1aa18:	ldr	r0, [sp, #24]
   1aa1c:	bl	19a04 <argp_parse@@Base+0x2424>
   1aa20:	subs	r4, r0, #0
   1aa24:	beq	1abbc <argp_parse@@Base+0x35dc>
   1aa28:	ldr	r2, [sp, #24]
   1aa2c:	ldr	r1, [sp, #40]	; 0x28
   1aa30:	bl	111b4 <memset@plt>
   1aa34:	mov	r3, #1
   1aa38:	mov	r2, #1
   1aa3c:	str	r3, [sp, #44]	; 0x2c
   1aa40:	ldr	r3, [sp, #36]	; 0x24
   1aa44:	strb	r2, [r4, r3]
   1aa48:	b	1a828 <argp_parse@@Base+0x3248>
   1aa4c:	ldr	r0, [sp, #24]
   1aa50:	bl	19a04 <argp_parse@@Base+0x2424>
   1aa54:	subs	r4, r0, #0
   1aa58:	mov	r3, #1
   1aa5c:	streq	r3, [sp, #40]	; 0x28
   1aa60:	beq	1a64c <argp_parse@@Base+0x306c>
   1aa64:	ldr	r2, [sp, #24]
   1aa68:	str	r3, [sp, #44]	; 0x2c
   1aa6c:	ldr	r1, [sp, #40]	; 0x28
   1aa70:	bl	111b4 <memset@plt>
   1aa74:	ldr	r3, [sp, #36]	; 0x24
   1aa78:	strb	fp, [r4, r3]
   1aa7c:	b	1a648 <argp_parse@@Base+0x3068>
   1aa80:	ldr	r3, [sp, #100]	; 0x64
   1aa84:	cmp	r3, #0
   1aa88:	bne	1ab8c <argp_parse@@Base+0x35ac>
   1aa8c:	ldr	r3, [sl, #12]
   1aa90:	ldr	r2, [sp, #96]	; 0x60
   1aa94:	str	r3, [r2, #8]
   1aa98:	ldr	r3, [sp, #28]
   1aa9c:	ldrb	r3, [r3]
   1aaa0:	cmp	r3, #58	; 0x3a
   1aaa4:	moveq	r0, #58	; 0x3a
   1aaa8:	movne	r0, #63	; 0x3f
   1aaac:	b	1a724 <argp_parse@@Base+0x3144>
   1aab0:	ldr	r2, [r4, #8]
   1aab4:	ldr	r3, [sl, #8]
   1aab8:	cmp	r2, r3
   1aabc:	bne	1a874 <argp_parse@@Base+0x3294>
   1aac0:	ldr	r2, [r4, #12]
   1aac4:	ldr	r3, [sl, #12]
   1aac8:	cmp	r2, r3
   1aacc:	movne	r6, #1
   1aad0:	b	1a878 <argp_parse@@Base+0x3298>
   1aad4:	ldr	r2, [r5, #8]
   1aad8:	ldr	r1, [sl, #8]
   1aadc:	cmp	r1, r2
   1aae0:	bne	1a634 <argp_parse@@Base+0x3054>
   1aae4:	ldr	r2, [r5, #12]
   1aae8:	ldr	r1, [sl, #12]
   1aaec:	cmp	r1, r2
   1aaf0:	bne	1a634 <argp_parse@@Base+0x3054>
   1aaf4:	b	1a64c <argp_parse@@Base+0x306c>
   1aaf8:	bl	1122c <flockfile@plt>
   1aafc:	ldr	r2, [sp, #20]
   1ab00:	movw	r1, #50688	; 0xc600
   1ab04:	movt	r1, #1
   1ab08:	movw	r7, #50736	; 0xc630
   1ab0c:	movt	r7, #1
   1ab10:	ldr	r3, [sp, #96]	; 0x60
   1ab14:	add	r6, r4, r6
   1ab18:	sub	r8, r4, #1
   1ab1c:	ldr	r2, [r2]
   1ab20:	ldr	r0, [r3, #20]
   1ab24:	ldr	r3, [sp, #104]	; 0x68
   1ab28:	str	r0, [sp]
   1ab2c:	ldr	r0, [r5]
   1ab30:	bl	11190 <fprintf@plt>
   1ab34:	ldr	r0, [r5]
   1ab38:	ldr	sl, [sp, #8]
   1ab3c:	ldr	r9, [sp, #40]	; 0x28
   1ab40:	b	1ab50 <argp_parse@@Base+0x3570>
   1ab44:	cmp	r6, r8
   1ab48:	add	r9, r9, #1
   1ab4c:	beq	1ab74 <argp_parse@@Base+0x3594>
   1ab50:	ldrb	r3, [r8, #1]!
   1ab54:	cmp	r3, #0
   1ab58:	beq	1ab44 <argp_parse@@Base+0x3564>
   1ab5c:	mov	r1, r7
   1ab60:	ldr	r3, [sl, r9, lsl #4]
   1ab64:	ldr	r2, [sp, #104]	; 0x68
   1ab68:	bl	11190 <fprintf@plt>
   1ab6c:	ldr	r0, [r5]
   1ab70:	b	1ab44 <argp_parse@@Base+0x3564>
   1ab74:	mov	r1, r0
   1ab78:	mov	r0, #10
   1ab7c:	bl	11220 <fputc@plt>
   1ab80:	ldr	r0, [r5]
   1ab84:	bl	110c4 <funlockfile@plt>
   1ab88:	b	1a930 <argp_parse@@Base+0x3350>
   1ab8c:	ldr	ip, [sl]
   1ab90:	movw	r0, #53912	; 0xd298
   1ab94:	movt	r0, #2
   1ab98:	movw	r1, #50824	; 0xc688
   1ab9c:	movt	r1, #1
   1aba0:	ldr	r3, [sp, #20]
   1aba4:	ldr	r0, [r0]
   1aba8:	ldr	r2, [r3]
   1abac:	str	ip, [sp]
   1abb0:	ldr	r3, [sp, #104]	; 0x68
   1abb4:	bl	11190 <fprintf@plt>
   1abb8:	b	1aa8c <argp_parse@@Base+0x34ac>
   1abbc:	mov	r3, #1
   1abc0:	str	r3, [sp, #40]	; 0x28
   1abc4:	b	1a830 <argp_parse@@Base+0x3250>
   1abc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1abcc:	subs	r5, r0, #0
   1abd0:	strd	r6, [sp, #8]
   1abd4:	strd	r8, [sp, #16]
   1abd8:	strd	sl, [sp, #24]
   1abdc:	str	lr, [sp, #32]
   1abe0:	sub	sp, sp, #36	; 0x24
   1abe4:	ldr	r4, [sp, #80]	; 0x50
   1abe8:	ldr	r7, [r4, #4]
   1abec:	ble	1ade0 <argp_parse@@Base+0x3800>
   1abf0:	mov	r6, r2
   1abf4:	mov	sl, r3
   1abf8:	ldr	r2, [r4]
   1abfc:	mov	r3, #0
   1ac00:	mov	r9, r1
   1ac04:	str	r3, [r4, #12]
   1ac08:	cmp	r2, r3
   1ac0c:	beq	1ae88 <argp_parse@@Base+0x38a8>
   1ac10:	ldr	r3, [r4, #16]
   1ac14:	cmp	r3, #0
   1ac18:	bne	1adac <argp_parse@@Base+0x37cc>
   1ac1c:	mov	r3, #0
   1ac20:	str	r3, [r4, #20]
   1ac24:	str	r2, [r4, #28]
   1ac28:	str	r2, [r4, #32]
   1ac2c:	ldrb	r2, [r6]
   1ac30:	cmp	r2, #45	; 0x2d
   1ac34:	moveq	r2, #2
   1ac38:	addeq	r6, r6, #1
   1ac3c:	streq	r2, [r4, #24]
   1ac40:	beq	1ac68 <argp_parse@@Base+0x3688>
   1ac44:	cmp	r2, #43	; 0x2b
   1ac48:	addeq	r6, r6, #1
   1ac4c:	streq	r3, [r4, #24]
   1ac50:	beq	1ac68 <argp_parse@@Base+0x3688>
   1ac54:	ldr	r2, [sp, #84]	; 0x54
   1ac58:	cmp	r2, #0
   1ac5c:	beq	1afb8 <argp_parse@@Base+0x39d8>
   1ac60:	mov	r2, #0
   1ac64:	str	r2, [r4, #24]
   1ac68:	mov	r2, #1
   1ac6c:	str	r2, [r4, #16]
   1ac70:	ldrb	r2, [r6]
   1ac74:	cmp	r2, #58	; 0x3a
   1ac78:	moveq	r7, #0
   1ac7c:	cmp	r3, #0
   1ac80:	beq	1ad14 <argp_parse@@Base+0x3734>
   1ac84:	ldrb	r2, [r3]
   1ac88:	cmp	r2, #0
   1ac8c:	beq	1ad14 <argp_parse@@Base+0x3734>
   1ac90:	add	fp, r3, #1
   1ac94:	mov	r0, r6
   1ac98:	str	r3, [sp, #28]
   1ac9c:	str	fp, [r4, #20]
   1aca0:	ldrb	r8, [r3]
   1aca4:	mov	r1, r8
   1aca8:	str	r8, [sp, #24]
   1acac:	bl	11184 <strchr@plt>
   1acb0:	ldrd	r2, [sp, #24]
   1acb4:	ldrb	r1, [r3, #1]
   1acb8:	cmp	r1, #0
   1acbc:	bne	1accc <argp_parse@@Base+0x36ec>
   1acc0:	ldr	r1, [r4]
   1acc4:	add	r1, r1, #1
   1acc8:	str	r1, [r4]
   1accc:	sub	r1, r8, #58	; 0x3a
   1acd0:	cmp	r0, #0
   1acd4:	cmpne	r1, #1
   1acd8:	bls	1b030 <argp_parse@@Base+0x3a50>
   1acdc:	ldrb	ip, [r0]
   1ace0:	ldrb	r1, [r0, #1]
   1ace4:	cmp	ip, #87	; 0x57
   1ace8:	beq	1af38 <argp_parse@@Base+0x3958>
   1acec:	cmp	r1, #58	; 0x3a
   1acf0:	beq	1afdc <argp_parse@@Base+0x39fc>
   1acf4:	mov	r0, r2
   1acf8:	add	sp, sp, #36	; 0x24
   1acfc:	ldrd	r4, [sp]
   1ad00:	ldrd	r6, [sp, #8]
   1ad04:	ldrd	r8, [sp, #16]
   1ad08:	ldrd	sl, [sp, #24]
   1ad0c:	add	sp, sp, #32
   1ad10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad14:	ldr	r8, [r4]
   1ad18:	ldr	r2, [r4, #28]
   1ad1c:	ldr	r3, [r4, #32]
   1ad20:	cmp	r3, r8
   1ad24:	ldr	r3, [r4, #24]
   1ad28:	strgt	r8, [r4, #32]
   1ad2c:	cmp	r8, r2
   1ad30:	movlt	r2, r8
   1ad34:	strlt	r8, [r4, #28]
   1ad38:	cmp	r3, #1
   1ad3c:	beq	1ade8 <argp_parse@@Base+0x3808>
   1ad40:	cmp	r5, r8
   1ad44:	beq	1adc8 <argp_parse@@Base+0x37e8>
   1ad48:	ldr	r3, [r9, r8, lsl #2]
   1ad4c:	movw	fp, #49460	; 0xc134
   1ad50:	movt	fp, #1
   1ad54:	mov	r1, fp
   1ad58:	mov	r0, r3
   1ad5c:	str	r3, [sp, #24]
   1ad60:	bl	10fd4 <strcmp@plt>
   1ad64:	cmp	r0, #0
   1ad68:	ldr	r3, [sp, #24]
   1ad6c:	bne	1ae5c <argp_parse@@Base+0x387c>
   1ad70:	ldr	r3, [r4, #28]
   1ad74:	add	r8, r8, #1
   1ad78:	ldr	r2, [r4, #32]
   1ad7c:	str	r8, [r4]
   1ad80:	cmp	r3, r2
   1ad84:	beq	1b044 <argp_parse@@Base+0x3a64>
   1ad88:	cmp	r8, r2
   1ad8c:	beq	1ada0 <argp_parse@@Base+0x37c0>
   1ad90:	mov	r0, r9
   1ad94:	mov	r1, r4
   1ad98:	bl	1a288 <argp_parse@@Base+0x2ca8>
   1ad9c:	ldr	r3, [r4, #28]
   1ada0:	str	r5, [r4]
   1ada4:	str	r5, [r4, #32]
   1ada8:	b	1add0 <argp_parse@@Base+0x37f0>
   1adac:	ldrb	r2, [r6]
   1adb0:	ldr	r3, [r4, #20]
   1adb4:	sub	r1, r2, #43	; 0x2b
   1adb8:	tst	r1, #253	; 0xfd
   1adbc:	ldrbeq	r2, [r6, #1]
   1adc0:	addeq	r6, r6, #1
   1adc4:	b	1ac74 <argp_parse@@Base+0x3694>
   1adc8:	ldr	r3, [r4, #28]
   1adcc:	ldr	r5, [r4, #32]
   1add0:	cmp	r5, r3
   1add4:	mvnne	r2, #0
   1add8:	strne	r3, [r4]
   1addc:	bne	1acf4 <argp_parse@@Base+0x3714>
   1ade0:	mvn	r2, #0
   1ade4:	b	1acf4 <argp_parse@@Base+0x3714>
   1ade8:	ldr	r3, [r4, #32]
   1adec:	cmp	r3, r2
   1adf0:	beq	1b01c <argp_parse@@Base+0x3a3c>
   1adf4:	cmp	r8, r3
   1adf8:	beq	1ae0c <argp_parse@@Base+0x382c>
   1adfc:	mov	r1, r4
   1ae00:	mov	r0, r9
   1ae04:	bl	1a288 <argp_parse@@Base+0x2ca8>
   1ae08:	ldr	r3, [r4]
   1ae0c:	cmp	r5, r3
   1ae10:	ble	1ae48 <argp_parse@@Base+0x3868>
   1ae14:	add	r1, r9, r3, lsl #2
   1ae18:	b	1ae2c <argp_parse@@Base+0x384c>
   1ae1c:	add	r3, r3, #1
   1ae20:	cmp	r3, r5
   1ae24:	str	r3, [r4]
   1ae28:	beq	1ae48 <argp_parse@@Base+0x3868>
   1ae2c:	ldr	r2, [r1], #4
   1ae30:	ldrb	r0, [r2]
   1ae34:	cmp	r0, #45	; 0x2d
   1ae38:	bne	1ae1c <argp_parse@@Base+0x383c>
   1ae3c:	ldrb	r2, [r2, #1]
   1ae40:	cmp	r2, #0
   1ae44:	beq	1ae1c <argp_parse@@Base+0x383c>
   1ae48:	mov	r8, r3
   1ae4c:	str	r3, [r4, #32]
   1ae50:	cmp	r5, r8
   1ae54:	bne	1ad48 <argp_parse@@Base+0x3768>
   1ae58:	b	1adc8 <argp_parse@@Base+0x37e8>
   1ae5c:	ldrb	r2, [r3]
   1ae60:	cmp	r2, #45	; 0x2d
   1ae64:	beq	1ae98 <argp_parse@@Base+0x38b8>
   1ae68:	ldr	r2, [r4, #24]
   1ae6c:	cmp	r2, #0
   1ae70:	beq	1ade0 <argp_parse@@Base+0x3800>
   1ae74:	add	r8, r8, #1
   1ae78:	mov	r2, #1
   1ae7c:	str	r8, [r4]
   1ae80:	str	r3, [r4, #12]
   1ae84:	b	1acf4 <argp_parse@@Base+0x3714>
   1ae88:	mov	r3, #1
   1ae8c:	mov	r2, r3
   1ae90:	str	r3, [r4]
   1ae94:	b	1ac1c <argp_parse@@Base+0x363c>
   1ae98:	ldrb	r1, [r3, #1]
   1ae9c:	cmp	r1, #0
   1aea0:	beq	1ae68 <argp_parse@@Base+0x3888>
   1aea4:	cmp	sl, #0
   1aea8:	beq	1af30 <argp_parse@@Base+0x3950>
   1aeac:	cmp	r1, #45	; 0x2d
   1aeb0:	beq	1b0c8 <argp_parse@@Base+0x3ae8>
   1aeb4:	ldr	r2, [sp, #76]	; 0x4c
   1aeb8:	cmp	r2, #0
   1aebc:	beq	1af30 <argp_parse@@Base+0x3950>
   1aec0:	ldrb	r2, [r3, #2]
   1aec4:	cmp	r2, #0
   1aec8:	bne	1aee4 <argp_parse@@Base+0x3904>
   1aecc:	mov	r0, r6
   1aed0:	str	r3, [sp, #24]
   1aed4:	bl	11184 <strchr@plt>
   1aed8:	cmp	r0, #0
   1aedc:	ldr	r3, [sp, #24]
   1aee0:	bne	1af30 <argp_parse@@Base+0x3950>
   1aee4:	ldr	r2, [sp, #72]	; 0x48
   1aee8:	add	ip, r3, #1
   1aeec:	movw	r0, #50880	; 0xc6c0
   1aef0:	movt	r0, #1
   1aef4:	mov	r3, sl
   1aef8:	ldr	r1, [sp, #76]	; 0x4c
   1aefc:	str	r2, [sp]
   1af00:	mov	r2, r6
   1af04:	str	r0, [sp, #16]
   1af08:	mov	r0, r5
   1af0c:	stmib	sp, {r1, r4, r7}
   1af10:	mov	r1, r9
   1af14:	str	ip, [r4, #20]
   1af18:	bl	1a4f0 <argp_parse@@Base+0x2f10>
   1af1c:	cmn	r0, #1
   1af20:	mov	r2, r0
   1af24:	bne	1acf4 <argp_parse@@Base+0x3714>
   1af28:	ldr	r3, [r4]
   1af2c:	ldr	r3, [r9, r3, lsl #2]
   1af30:	add	r3, r3, #1
   1af34:	b	1ac90 <argp_parse@@Base+0x36b0>
   1af38:	sub	ip, r1, #59	; 0x3b
   1af3c:	cmp	sl, #0
   1af40:	clz	ip, ip
   1af44:	lsr	ip, ip, #5
   1af48:	moveq	ip, #0
   1af4c:	cmp	ip, #0
   1af50:	beq	1acec <argp_parse@@Base+0x370c>
   1af54:	ldrb	r3, [r3, #1]
   1af58:	cmp	r3, #0
   1af5c:	bne	1af70 <argp_parse@@Base+0x3990>
   1af60:	ldr	r3, [r4]
   1af64:	cmp	r3, r5
   1af68:	beq	1b0fc <argp_parse@@Base+0x3b1c>
   1af6c:	ldr	fp, [r9, r3, lsl #2]
   1af70:	mov	lr, #0
   1af74:	movw	ip, #50956	; 0xc70c
   1af78:	movt	ip, #1
   1af7c:	ldr	r3, [sp, #72]	; 0x48
   1af80:	mov	r2, r6
   1af84:	mov	r1, r9
   1af88:	mov	r0, r5
   1af8c:	str	r3, [sp]
   1af90:	mov	r3, sl
   1af94:	str	r4, [sp, #8]
   1af98:	str	r7, [sp, #12]
   1af9c:	str	ip, [sp, #16]
   1afa0:	str	fp, [r4, #20]
   1afa4:	str	lr, [sp, #4]
   1afa8:	str	lr, [r4, #12]
   1afac:	bl	1a4f0 <argp_parse@@Base+0x2f10>
   1afb0:	mov	r2, r0
   1afb4:	b	1acf4 <argp_parse@@Base+0x3714>
   1afb8:	movw	r0, #50864	; 0xc6b0
   1afbc:	movt	r0, #1
   1afc0:	bl	11100 <getenv@plt>
   1afc4:	cmp	r0, #0
   1afc8:	ldr	r3, [r4, #20]
   1afcc:	bne	1ac60 <argp_parse@@Base+0x3680>
   1afd0:	mov	r2, #1
   1afd4:	str	r2, [r4, #24]
   1afd8:	b	1ac68 <argp_parse@@Base+0x3688>
   1afdc:	ldrb	r1, [r0, #2]
   1afe0:	ldrb	r3, [r3, #1]
   1afe4:	cmp	r1, #58	; 0x3a
   1afe8:	beq	1b084 <argp_parse@@Base+0x3aa4>
   1afec:	cmp	r3, #0
   1aff0:	ldr	r3, [r4]
   1aff4:	bne	1b050 <argp_parse@@Base+0x3a70>
   1aff8:	cmp	r5, r3
   1affc:	beq	1b0a8 <argp_parse@@Base+0x3ac8>
   1b000:	ldr	r1, [r9, r3, lsl #2]
   1b004:	add	r3, r3, #1
   1b008:	str	r3, [r4]
   1b00c:	str	r1, [r4, #12]
   1b010:	mov	r3, #0
   1b014:	str	r3, [r4, #20]
   1b018:	b	1acf4 <argp_parse@@Base+0x3714>
   1b01c:	cmp	r8, r2
   1b020:	movne	r3, r8
   1b024:	moveq	r3, r2
   1b028:	strne	r8, [r4, #28]
   1b02c:	b	1ae0c <argp_parse@@Base+0x382c>
   1b030:	cmp	r7, #0
   1b034:	bne	1b060 <argp_parse@@Base+0x3a80>
   1b038:	mov	r2, #63	; 0x3f
   1b03c:	str	r8, [r4, #8]
   1b040:	b	1acf4 <argp_parse@@Base+0x3714>
   1b044:	mov	r3, r8
   1b048:	str	r8, [r4, #28]
   1b04c:	b	1ada0 <argp_parse@@Base+0x37c0>
   1b050:	add	r3, r3, #1
   1b054:	str	r3, [r4]
   1b058:	str	fp, [r4, #12]
   1b05c:	b	1b010 <argp_parse@@Base+0x3a30>
   1b060:	movw	r0, #53912	; 0xd298
   1b064:	movt	r0, #2
   1b068:	ldr	r2, [r9]
   1b06c:	movw	r1, #50884	; 0xc6c4
   1b070:	movt	r1, #1
   1b074:	mov	r3, r8
   1b078:	ldr	r0, [r0]
   1b07c:	bl	11190 <fprintf@plt>
   1b080:	b	1b038 <argp_parse@@Base+0x3a58>
   1b084:	cmp	r3, #0
   1b088:	ldrne	r3, [r4]
   1b08c:	moveq	fp, r3
   1b090:	str	fp, [r4, #12]
   1b094:	addne	r3, r3, #1
   1b098:	strne	r3, [r4]
   1b09c:	mov	r3, #0
   1b0a0:	str	r3, [r4, #20]
   1b0a4:	b	1acf4 <argp_parse@@Base+0x3714>
   1b0a8:	cmp	r7, #0
   1b0ac:	bne	1b11c <argp_parse@@Base+0x3b3c>
   1b0b0:	str	r8, [r4, #8]
   1b0b4:	ldrb	r3, [r6]
   1b0b8:	cmp	r3, #58	; 0x3a
   1b0bc:	moveq	r2, #58	; 0x3a
   1b0c0:	movne	r2, #63	; 0x3f
   1b0c4:	b	1b010 <argp_parse@@Base+0x3a30>
   1b0c8:	ldr	r2, [sp, #72]	; 0x48
   1b0cc:	add	ip, r3, #2
   1b0d0:	mov	r1, r9
   1b0d4:	mov	r3, sl
   1b0d8:	ldr	r0, [sp, #76]	; 0x4c
   1b0dc:	str	r2, [sp]
   1b0e0:	mov	r2, r6
   1b0e4:	stmib	sp, {r0, r4, r7, fp}
   1b0e8:	mov	r0, r5
   1b0ec:	str	ip, [r4, #20]
   1b0f0:	bl	1a4f0 <argp_parse@@Base+0x2f10>
   1b0f4:	mov	r2, r0
   1b0f8:	b	1acf4 <argp_parse@@Base+0x3714>
   1b0fc:	cmp	r7, #0
   1b100:	bne	1b140 <argp_parse@@Base+0x3b60>
   1b104:	str	r8, [r4, #8]
   1b108:	ldrb	r3, [r6]
   1b10c:	cmp	r3, #58	; 0x3a
   1b110:	moveq	r2, #58	; 0x3a
   1b114:	movne	r2, #63	; 0x3f
   1b118:	b	1acf4 <argp_parse@@Base+0x3714>
   1b11c:	movw	r0, #53912	; 0xd298
   1b120:	movt	r0, #2
   1b124:	ldr	r2, [r9]
   1b128:	movw	r1, #50912	; 0xc6e0
   1b12c:	movt	r1, #1
   1b130:	mov	r3, r8
   1b134:	ldr	r0, [r0]
   1b138:	bl	11190 <fprintf@plt>
   1b13c:	b	1b0b0 <argp_parse@@Base+0x3ad0>
   1b140:	movw	r0, #53912	; 0xd298
   1b144:	movt	r0, #2
   1b148:	ldr	r2, [r9]
   1b14c:	movw	r1, #50912	; 0xc6e0
   1b150:	movt	r1, #1
   1b154:	mov	r3, r8
   1b158:	ldr	r0, [r0]
   1b15c:	bl	11190 <fprintf@plt>
   1b160:	b	1b104 <argp_parse@@Base+0x3b24>
   1b164:	strd	r4, [sp, #-16]!
   1b168:	movw	r5, #53892	; 0xd284
   1b16c:	movt	r5, #2
   1b170:	str	r6, [sp, #8]
   1b174:	movw	r4, #53972	; 0xd2d4
   1b178:	movt	r4, #2
   1b17c:	str	lr, [sp, #12]
   1b180:	sub	sp, sp, #16
   1b184:	ldr	lr, [sp, #32]
   1b188:	ldr	ip, [r5]
   1b18c:	ldr	r6, [sp, #36]	; 0x24
   1b190:	str	lr, [sp]
   1b194:	ldr	lr, [sp, #40]	; 0x28
   1b198:	str	ip, [r4]
   1b19c:	ldr	ip, [r5, #4]
   1b1a0:	str	r6, [sp, #4]
   1b1a4:	str	r4, [sp, #8]
   1b1a8:	str	lr, [sp, #12]
   1b1ac:	str	ip, [r4, #4]
   1b1b0:	bl	1abc8 <argp_parse@@Base+0x35e8>
   1b1b4:	ldr	ip, [r4]
   1b1b8:	movw	r3, #54128	; 0xd370
   1b1bc:	movt	r3, #2
   1b1c0:	ldr	r1, [r4, #8]
   1b1c4:	ldr	r2, [r4, #12]
   1b1c8:	str	ip, [r5]
   1b1cc:	str	r1, [r5, #8]
   1b1d0:	str	r2, [r3]
   1b1d4:	add	sp, sp, #16
   1b1d8:	ldrd	r4, [sp]
   1b1dc:	ldr	r6, [sp, #8]
   1b1e0:	add	sp, sp, #12
   1b1e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b1ec:	movw	r4, #53972	; 0xd2d4
   1b1f0:	movt	r4, #2
   1b1f4:	strd	r6, [sp, #8]
   1b1f8:	movw	r6, #53892	; 0xd284
   1b1fc:	movt	r6, #2
   1b200:	strd	r8, [sp, #16]
   1b204:	subs	r9, r0, #0
   1b208:	strd	sl, [sp, #24]
   1b20c:	ldm	r6, {r5, sl}
   1b210:	str	lr, [sp, #32]
   1b214:	sub	sp, sp, #20
   1b218:	str	r1, [sp, #4]
   1b21c:	stm	r4, {r5, sl}
   1b220:	ble	1b5f4 <argp_parse@@Base+0x4014>
   1b224:	mov	r3, #0
   1b228:	mov	r8, r2
   1b22c:	cmp	r5, r3
   1b230:	str	r3, [r4, #12]
   1b234:	beq	1b304 <argp_parse@@Base+0x3d24>
   1b238:	ldr	r3, [r4, #16]
   1b23c:	cmp	r3, #0
   1b240:	beq	1b310 <argp_parse@@Base+0x3d30>
   1b244:	ldrb	r3, [r2]
   1b248:	sub	r2, r3, #43	; 0x2b
   1b24c:	tst	r2, #253	; 0xfd
   1b250:	ldrbeq	r3, [r8, #1]
   1b254:	addeq	r8, r8, #1
   1b258:	cmp	r3, #58	; 0x3a
   1b25c:	ldr	r3, [r4, #20]
   1b260:	moveq	sl, #0
   1b264:	cmp	r3, #0
   1b268:	beq	1b350 <argp_parse@@Base+0x3d70>
   1b26c:	ldrb	r2, [r3]
   1b270:	cmp	r2, #0
   1b274:	beq	1b350 <argp_parse@@Base+0x3d70>
   1b278:	add	r7, r3, #1
   1b27c:	mov	r0, r8
   1b280:	str	r3, [sp, #12]
   1b284:	str	r7, [r4, #20]
   1b288:	ldrb	fp, [r3]
   1b28c:	mov	r1, fp
   1b290:	str	fp, [sp, #8]
   1b294:	bl	11184 <strchr@plt>
   1b298:	ldrd	r2, [sp, #8]
   1b29c:	ldrb	r1, [r3, #1]
   1b2a0:	cmp	r1, #0
   1b2a4:	sub	r1, fp, #58	; 0x3a
   1b2a8:	addeq	r5, r5, #1
   1b2ac:	streq	r5, [r4]
   1b2b0:	cmp	r0, #0
   1b2b4:	cmpne	r1, #1
   1b2b8:	bls	1b51c <argp_parse@@Base+0x3f3c>
   1b2bc:	ldrb	r1, [r0, #1]
   1b2c0:	cmp	r1, #58	; 0x3a
   1b2c4:	beq	1b538 <argp_parse@@Base+0x3f58>
   1b2c8:	ldr	r1, [r4, #8]
   1b2cc:	ldr	r7, [r4, #12]
   1b2d0:	mov	r0, r2
   1b2d4:	movw	r3, #54128	; 0xd370
   1b2d8:	movt	r3, #2
   1b2dc:	str	r5, [r6]
   1b2e0:	str	r1, [r6, #8]
   1b2e4:	str	r7, [r3]
   1b2e8:	add	sp, sp, #20
   1b2ec:	ldrd	r4, [sp]
   1b2f0:	ldrd	r6, [sp, #8]
   1b2f4:	ldrd	r8, [sp, #16]
   1b2f8:	ldrd	sl, [sp, #24]
   1b2fc:	add	sp, sp, #32
   1b300:	pop	{pc}		; (ldr pc, [sp], #4)
   1b304:	mov	r3, #1
   1b308:	mov	r5, r3
   1b30c:	str	r3, [r4]
   1b310:	mov	r3, #0
   1b314:	str	r3, [r4, #20]
   1b318:	str	r5, [r4, #28]
   1b31c:	str	r5, [r4, #32]
   1b320:	ldrb	r2, [r8]
   1b324:	cmp	r2, #45	; 0x2d
   1b328:	beq	1b3f8 <argp_parse@@Base+0x3e18>
   1b32c:	cmp	r2, #43	; 0x2b
   1b330:	mov	r1, r3
   1b334:	str	r3, [r4, #24]
   1b338:	addeq	r8, r8, #1
   1b33c:	mov	r3, #1
   1b340:	str	r3, [r4, #16]
   1b344:	ldrb	r3, [r8]
   1b348:	cmp	r3, #58	; 0x3a
   1b34c:	beq	1b43c <argp_parse@@Base+0x3e5c>
   1b350:	mov	r2, r5
   1b354:	ldr	r1, [r4, #24]
   1b358:	ldr	r3, [r4, #32]
   1b35c:	ldr	r0, [r4, #28]
   1b360:	cmp	r3, r5
   1b364:	movgt	r3, r5
   1b368:	strgt	r5, [r4, #32]
   1b36c:	cmp	r5, r0
   1b370:	movge	r5, r0
   1b374:	strlt	r5, [r4, #28]
   1b378:	cmp	r1, #1
   1b37c:	beq	1b450 <argp_parse@@Base+0x3e70>
   1b380:	cmp	r9, r2
   1b384:	beq	1b4c4 <argp_parse@@Base+0x3ee4>
   1b388:	ldr	fp, [sp, #4]
   1b38c:	movw	r1, #49460	; 0xc134
   1b390:	movt	r1, #1
   1b394:	strd	r2, [sp, #8]
   1b398:	ldr	r7, [fp, r2, lsl #2]
   1b39c:	mov	r0, r7
   1b3a0:	bl	10fd4 <strcmp@plt>
   1b3a4:	cmp	r0, #0
   1b3a8:	ldr	r2, [sp, #8]
   1b3ac:	bne	1b40c <argp_parse@@Base+0x3e2c>
   1b3b0:	ldr	r3, [sp, #12]
   1b3b4:	add	r2, r2, #1
   1b3b8:	ldr	r5, [r4, #28]
   1b3bc:	str	r2, [r4]
   1b3c0:	cmp	r5, r3
   1b3c4:	beq	1b580 <argp_parse@@Base+0x3fa0>
   1b3c8:	cmp	r2, r3
   1b3cc:	beq	1b3e4 <argp_parse@@Base+0x3e04>
   1b3d0:	mov	r0, fp
   1b3d4:	movw	r1, #53972	; 0xd2d4
   1b3d8:	movt	r1, #2
   1b3dc:	bl	1a288 <argp_parse@@Base+0x2ca8>
   1b3e0:	ldr	r5, [r4, #28]
   1b3e4:	mov	r2, r9
   1b3e8:	mov	r3, r9
   1b3ec:	str	r9, [r4]
   1b3f0:	str	r9, [r4, #32]
   1b3f4:	b	1b4c8 <argp_parse@@Base+0x3ee8>
   1b3f8:	mov	r3, #2
   1b3fc:	add	r8, r8, #1
   1b400:	mov	r1, r3
   1b404:	str	r3, [r4, #24]
   1b408:	b	1b33c <argp_parse@@Base+0x3d5c>
   1b40c:	ldrb	r3, [r7]
   1b410:	cmp	r3, #45	; 0x2d
   1b414:	beq	1b4e8 <argp_parse@@Base+0x3f08>
   1b418:	ldr	r3, [r4, #24]
   1b41c:	cmp	r3, #0
   1b420:	beq	1b5f0 <argp_parse@@Base+0x4010>
   1b424:	add	r5, r2, #1
   1b428:	mov	r2, #1
   1b42c:	ldr	r1, [r4, #8]
   1b430:	str	r5, [r4]
   1b434:	str	r7, [r4, #12]
   1b438:	b	1b2d0 <argp_parse@@Base+0x3cf0>
   1b43c:	cmp	r1, #1
   1b440:	mov	r3, r5
   1b444:	mov	r2, r5
   1b448:	mov	sl, #0
   1b44c:	bne	1b380 <argp_parse@@Base+0x3da0>
   1b450:	cmp	r5, r3
   1b454:	beq	1b500 <argp_parse@@Base+0x3f20>
   1b458:	cmp	r2, r3
   1b45c:	beq	1b474 <argp_parse@@Base+0x3e94>
   1b460:	movw	r1, #53972	; 0xd2d4
   1b464:	movt	r1, #2
   1b468:	ldr	r0, [sp, #4]
   1b46c:	bl	1a288 <argp_parse@@Base+0x2ca8>
   1b470:	ldr	r3, [r4]
   1b474:	cmp	r9, r3
   1b478:	ble	1b4b4 <argp_parse@@Base+0x3ed4>
   1b47c:	ldr	r2, [sp, #4]
   1b480:	add	r1, r2, r3, lsl #2
   1b484:	b	1b498 <argp_parse@@Base+0x3eb8>
   1b488:	add	r3, r3, #1
   1b48c:	cmp	r9, r3
   1b490:	str	r3, [r4]
   1b494:	beq	1b514 <argp_parse@@Base+0x3f34>
   1b498:	ldr	r2, [r1], #4
   1b49c:	ldrb	r0, [r2]
   1b4a0:	cmp	r0, #45	; 0x2d
   1b4a4:	bne	1b488 <argp_parse@@Base+0x3ea8>
   1b4a8:	ldrb	r2, [r2, #1]
   1b4ac:	cmp	r2, #0
   1b4b0:	beq	1b488 <argp_parse@@Base+0x3ea8>
   1b4b4:	mov	r2, r3
   1b4b8:	cmp	r9, r2
   1b4bc:	str	r3, [r4, #32]
   1b4c0:	bne	1b388 <argp_parse@@Base+0x3da8>
   1b4c4:	ldr	r5, [r4, #28]
   1b4c8:	cmp	r3, r5
   1b4cc:	moveq	r5, r2
   1b4d0:	mvnne	r2, #0
   1b4d4:	ldr	r1, [r4, #8]
   1b4d8:	strne	r5, [r4]
   1b4dc:	mvneq	r2, #0
   1b4e0:	ldr	r7, [r4, #12]
   1b4e4:	b	1b2d0 <argp_parse@@Base+0x3cf0>
   1b4e8:	ldrb	r3, [r7, #1]
   1b4ec:	cmp	r3, #0
   1b4f0:	beq	1b418 <argp_parse@@Base+0x3e38>
   1b4f4:	add	r3, r7, #1
   1b4f8:	mov	r5, r2
   1b4fc:	b	1b278 <argp_parse@@Base+0x3c98>
   1b500:	cmp	r2, r3
   1b504:	beq	1b474 <argp_parse@@Base+0x3e94>
   1b508:	mov	r3, r2
   1b50c:	str	r2, [r4, #28]
   1b510:	b	1b474 <argp_parse@@Base+0x3e94>
   1b514:	mov	r2, r9
   1b518:	b	1b4b8 <argp_parse@@Base+0x3ed8>
   1b51c:	cmp	sl, #0
   1b520:	bne	1b5a0 <argp_parse@@Base+0x3fc0>
   1b524:	mov	r1, fp
   1b528:	mov	r2, #63	; 0x3f
   1b52c:	str	fp, [r4, #8]
   1b530:	ldr	r7, [r4, #12]
   1b534:	b	1b2d0 <argp_parse@@Base+0x3cf0>
   1b538:	ldrb	r1, [r0, #2]
   1b53c:	ldrb	r3, [r3, #1]
   1b540:	cmp	r1, #58	; 0x3a
   1b544:	beq	1b5cc <argp_parse@@Base+0x3fec>
   1b548:	cmp	r3, #0
   1b54c:	bne	1b58c <argp_parse@@Base+0x3fac>
   1b550:	cmp	r9, r5
   1b554:	beq	1b5fc <argp_parse@@Base+0x401c>
   1b558:	ldr	r3, [sp, #4]
   1b55c:	ldr	r1, [r4, #8]
   1b560:	ldr	r7, [r3, r5, lsl #2]
   1b564:	add	r3, r5, #1
   1b568:	mov	r5, r3
   1b56c:	str	r3, [r4]
   1b570:	str	r7, [r4, #12]
   1b574:	mov	r3, #0
   1b578:	str	r3, [r4, #20]
   1b57c:	b	1b2d0 <argp_parse@@Base+0x3cf0>
   1b580:	mov	r5, r2
   1b584:	str	r2, [r4, #28]
   1b588:	b	1b3e4 <argp_parse@@Base+0x3e04>
   1b58c:	add	r5, r5, #1
   1b590:	ldr	r1, [r4, #8]
   1b594:	str	r5, [r4]
   1b598:	str	r7, [r4, #12]
   1b59c:	b	1b574 <argp_parse@@Base+0x3f94>
   1b5a0:	ldr	r3, [sp, #4]
   1b5a4:	movw	r0, #53912	; 0xd298
   1b5a8:	movt	r0, #2
   1b5ac:	movw	r1, #50884	; 0xc6c4
   1b5b0:	movt	r1, #1
   1b5b4:	ldr	r0, [r0]
   1b5b8:	ldr	r2, [r3]
   1b5bc:	mov	r3, fp
   1b5c0:	bl	11190 <fprintf@plt>
   1b5c4:	ldr	r5, [r4]
   1b5c8:	b	1b524 <argp_parse@@Base+0x3f44>
   1b5cc:	cmp	r3, #0
   1b5d0:	ldr	r1, [r4, #8]
   1b5d4:	moveq	r7, r3
   1b5d8:	addne	r5, r5, #1
   1b5dc:	mov	r3, #0
   1b5e0:	strne	r5, [r4]
   1b5e4:	str	r7, [r4, #12]
   1b5e8:	str	r3, [r4, #20]
   1b5ec:	b	1b2d0 <argp_parse@@Base+0x3cf0>
   1b5f0:	mov	r5, r2
   1b5f4:	mvn	r2, #0
   1b5f8:	b	1b2c8 <argp_parse@@Base+0x3ce8>
   1b5fc:	cmp	sl, #0
   1b600:	bne	1b624 <argp_parse@@Base+0x4044>
   1b604:	str	fp, [r4, #8]
   1b608:	mov	r1, fp
   1b60c:	ldrb	r3, [r8]
   1b610:	ldr	r7, [r4, #12]
   1b614:	cmp	r3, #58	; 0x3a
   1b618:	moveq	r2, #58	; 0x3a
   1b61c:	movne	r2, #63	; 0x3f
   1b620:	b	1b574 <argp_parse@@Base+0x3f94>
   1b624:	ldr	r3, [sp, #4]
   1b628:	movw	r0, #53912	; 0xd298
   1b62c:	movt	r0, #2
   1b630:	movw	r1, #50912	; 0xc6e0
   1b634:	movt	r1, #1
   1b638:	ldr	r0, [r0]
   1b63c:	ldr	r2, [r3]
   1b640:	mov	r3, fp
   1b644:	bl	11190 <fprintf@plt>
   1b648:	ldr	r5, [r4]
   1b64c:	b	1b604 <argp_parse@@Base+0x4024>
   1b650:	umull	r2, r3, r1, r2
   1b654:	cmp	r3, #0
   1b658:	bne	1b664 <argp_parse@@Base+0x4084>
   1b65c:	mov	r1, r2
   1b660:	b	19a40 <argp_parse@@Base+0x2460>
   1b664:	str	r4, [sp, #-8]!
   1b668:	str	lr, [sp, #4]
   1b66c:	bl	1119c <__errno_location@plt>
   1b670:	mov	r3, #12
   1b674:	ldr	r4, [sp]
   1b678:	add	sp, sp, #4
   1b67c:	str	r3, [r0]
   1b680:	mov	r0, #0
   1b684:	pop	{pc}		; (ldr pc, [sp], #4)
   1b688:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b68c:	mov	r7, r0
   1b690:	ldr	r6, [pc, #72]	; 1b6e0 <argp_parse@@Base+0x4100>
   1b694:	ldr	r5, [pc, #72]	; 1b6e4 <argp_parse@@Base+0x4104>
   1b698:	add	r6, pc, r6
   1b69c:	add	r5, pc, r5
   1b6a0:	sub	r6, r6, r5
   1b6a4:	mov	r8, r1
   1b6a8:	mov	r9, r2
   1b6ac:	bl	10f9c <calloc@plt-0x20>
   1b6b0:	asrs	r6, r6, #2
   1b6b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b6b8:	mov	r4, #0
   1b6bc:	add	r4, r4, #1
   1b6c0:	ldr	r3, [r5], #4
   1b6c4:	mov	r2, r9
   1b6c8:	mov	r1, r8
   1b6cc:	mov	r0, r7
   1b6d0:	blx	r3
   1b6d4:	cmp	r6, r4
   1b6d8:	bne	1b6bc <argp_parse@@Base+0x40dc>
   1b6dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b6e0:	andeq	r1, r1, ip, ror #16
   1b6e4:	andeq	r1, r1, r4, ror #16
   1b6e8:	bx	lr

Disassembly of section .fini:

0001b6ec <.fini>:
   1b6ec:	push	{r3, lr}
   1b6f0:	pop	{r3, pc}
