
../repos/charybdis/modules/.libs/chm_nocolour.so:     file format elf32-littlearm


Disassembly of section .init:

00000420 <_init>:
 420:	push	{r3, lr}
 424:	bl	47c <call_weak_fn>
 428:	pop	{r3, pc}

Disassembly of section .plt:

0000042c <.plt>:
 42c:	push	{lr}		; (str lr, [sp, #-4]!)
 430:	ldr	lr, [pc, #4]	; 43c <.plt+0x10>
 434:	add	lr, pc, lr
 438:	ldr	pc, [lr, #8]!
 43c:	.word	0x00010bc4

00000440 <cflag_add@plt>:
 440:	add	ip, pc, #0, 12
 444:	add	ip, ip, #16, 20	; 0x10000
 448:	ldr	pc, [ip, #3012]!	; 0xbc4

0000044c <__cxa_finalize@plt>:
 44c:	add	ip, pc, #0, 12
 450:	add	ip, ip, #16, 20	; 0x10000
 454:	ldr	pc, [ip, #3004]!	; 0xbbc

00000458 <__gmon_start__@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2996]!	; 0xbb4

00000464 <rb_strlcpy@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2988]!	; 0xbac

00000470 <cflag_orphan@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2980]!	; 0xba4

Disassembly of section .text:

0000047c <call_weak_fn>:
 47c:	ldr	r3, [pc, #20]	; 498 <call_weak_fn+0x1c>
 480:	ldr	r2, [pc, #20]	; 49c <call_weak_fn+0x20>
 484:	add	r3, pc, r3
 488:	ldr	r2, [r3, r2]
 48c:	cmp	r2, #0
 490:	bxeq	lr
 494:	b	458 <__gmon_start__@plt>
 498:	.word	0x00010b74
 49c:	.word	0x0000002c

000004a0 <deregister_tm_clones>:
 4a0:	ldr	r3, [pc, #52]	; 4dc <deregister_tm_clones+0x3c>
 4a4:	ldr	r0, [pc, #52]	; 4e0 <deregister_tm_clones+0x40>
 4a8:	add	r3, pc, r3
 4ac:	add	r0, pc, r0
 4b0:	add	r3, r3, #3
 4b4:	sub	r3, r3, r0
 4b8:	cmp	r3, #6
 4bc:	ldr	r3, [pc, #32]	; 4e4 <deregister_tm_clones+0x44>
 4c0:	add	r3, pc, r3
 4c4:	bxls	lr
 4c8:	ldr	r2, [pc, #24]	; 4e8 <deregister_tm_clones+0x48>
 4cc:	ldr	r3, [r3, r2]
 4d0:	cmp	r3, #0
 4d4:	bxeq	lr
 4d8:	bx	r3
 4dc:	.word	0x00010bd0
 4e0:	.word	0x00010bcc
 4e4:	.word	0x00010b38
 4e8:	.word	0x00000024

000004ec <register_tm_clones>:
 4ec:	ldr	r1, [pc, #56]	; 52c <register_tm_clones+0x40>
 4f0:	ldr	r0, [pc, #56]	; 530 <register_tm_clones+0x44>
 4f4:	add	r1, pc, r1
 4f8:	add	r0, pc, r0
 4fc:	sub	r1, r1, r0
 500:	ldr	r3, [pc, #44]	; 534 <register_tm_clones+0x48>
 504:	asr	r1, r1, #2
 508:	add	r3, pc, r3
 50c:	add	r1, r1, r1, lsr #31
 510:	asrs	r1, r1, #1
 514:	bxeq	lr
 518:	ldr	r2, [pc, #24]	; 538 <register_tm_clones+0x4c>
 51c:	ldr	r3, [r3, r2]
 520:	cmp	r3, #0
 524:	bxeq	lr
 528:	bx	r3
 52c:	.word	0x00010b84
 530:	.word	0x00010b80
 534:	.word	0x00010af0
 538:	.word	0x00000038

0000053c <__do_global_dtors_aux>:
 53c:	ldr	r3, [pc, #76]	; 590 <__do_global_dtors_aux+0x54>
 540:	ldr	r2, [pc, #76]	; 594 <__do_global_dtors_aux+0x58>
 544:	add	r3, pc, r3
 548:	add	r2, pc, r2
 54c:	ldrb	r3, [r3]
 550:	cmp	r3, #0
 554:	bxne	lr
 558:	ldr	r3, [pc, #56]	; 598 <__do_global_dtors_aux+0x5c>
 55c:	push	{r4, lr}
 560:	ldr	r3, [r2, r3]
 564:	cmp	r3, #0
 568:	beq	578 <__do_global_dtors_aux+0x3c>
 56c:	ldr	r3, [pc, #40]	; 59c <__do_global_dtors_aux+0x60>
 570:	ldr	r0, [pc, r3]
 574:	bl	44c <__cxa_finalize@plt>
 578:	bl	4a0 <deregister_tm_clones>
 57c:	ldr	r3, [pc, #28]	; 5a0 <__do_global_dtors_aux+0x64>
 580:	mov	r2, #1
 584:	add	r3, pc, r3
 588:	strb	r2, [r3]
 58c:	pop	{r4, pc}
 590:	.word	0x00010b34
 594:	.word	0x00010ab0
 598:	.word	0x00000020
 59c:	.word	0x00010ac4
 5a0:	.word	0x00010af4

000005a4 <frame_dummy>:
 5a4:	ldr	r0, [pc, #56]	; 5e4 <frame_dummy+0x40>
 5a8:	ldr	r3, [pc, #56]	; 5e8 <frame_dummy+0x44>
 5ac:	add	r0, pc, r0
 5b0:	ldr	r2, [r0]
 5b4:	add	r3, pc, r3
 5b8:	cmp	r2, #0
 5bc:	bne	5c4 <frame_dummy+0x20>
 5c0:	b	4ec <register_tm_clones>
 5c4:	ldr	r2, [pc, #32]	; 5ec <frame_dummy+0x48>
 5c8:	ldr	r3, [r3, r2]
 5cc:	cmp	r3, #0
 5d0:	beq	5c0 <frame_dummy+0x1c>
 5d4:	push	{r4, lr}
 5d8:	blx	r3
 5dc:	pop	{r4, lr}
 5e0:	b	4ec <register_tm_clones>
 5e4:	.word	0x00010948
 5e8:	.word	0x00010a44
 5ec:	.word	0x00000034

000005f0 <_moddeinit>:
 5f0:	mov	r0, #99	; 0x63
 5f4:	b	470 <cflag_orphan@plt>

000005f8 <_modinit>:
 5f8:	ldr	r3, [pc, #60]	; 63c <_modinit+0x44>
 5fc:	push	{r0, r1, r2, lr}
 600:	add	r3, pc, r3
 604:	ldr	r2, [pc, #52]	; 640 <_modinit+0x48>
 608:	mov	r0, #99	; 0x63
 60c:	ldr	r3, [r3, r2]
 610:	mov	r1, r3
 614:	str	r3, [sp, #4]
 618:	bl	440 <cflag_add@plt>
 61c:	ldr	r3, [pc, #32]	; 644 <_modinit+0x4c>
 620:	add	r3, pc, r3
 624:	cmp	r0, #0
 628:	str	r0, [r3]
 62c:	movne	r0, #0
 630:	mvneq	r0, #0
 634:	add	sp, sp, #12
 638:	pop	{pc}		; (ldr pc, [sp], #4)
 63c:	.word	0x000109f8
 640:	.word	0x00000028
 644:	.word	0x00010a5c

00000648 <chm_nocolour_process>:
 648:	push	{r4, r5, r6, r7, r8, lr}
 64c:	ldr	r7, [r0, #16]
 650:	ldr	r6, [pc, #296]	; 780 <chm_nocolour_process+0x138>
 654:	cmp	r7, #0
 658:	add	r6, pc, r6
 65c:	popne	{r4, r5, r6, r7, r8, pc}
 660:	ldr	r2, [pc, #284]	; 784 <chm_nocolour_process+0x13c>
 664:	ldr	r3, [r0, #8]
 668:	add	r2, pc, r2
 66c:	ldr	r1, [r3, #12]
 670:	ldr	r3, [r2]
 674:	tst	r1, r3
 678:	popeq	{r4, r5, r6, r7, r8, pc}
 67c:	add	r4, r2, #4
 680:	ldr	r1, [r0, #12]
 684:	mov	r2, #512	; 0x200
 688:	mov	r5, r0
 68c:	mov	r0, r4
 690:	bl	464 <rb_strlcpy@plt>
 694:	mov	r2, r4
 698:	mov	r3, r4
 69c:	ldr	r4, [pc, #228]	; 788 <chm_nocolour_process+0x140>
 6a0:	mov	r0, r7
 6a4:	mov	lr, #1
 6a8:	ldrb	ip, [r3]
 6ac:	cmp	ip, #0
 6b0:	beq	74c <chm_nocolour_process+0x104>
 6b4:	sub	r1, ip, #2
 6b8:	uxtb	r1, r1
 6bc:	cmp	r1, #30
 6c0:	bhi	770 <chm_nocolour_process+0x128>
 6c4:	lsl	r1, lr, r1
 6c8:	tst	r1, r4
 6cc:	bne	744 <chm_nocolour_process+0xfc>
 6d0:	tst	r1, #1073741824	; 0x40000000
 6d4:	strbne	ip, [r2]
 6d8:	addne	r2, r2, #1
 6dc:	bne	744 <chm_nocolour_process+0xfc>
 6e0:	tst	r1, #2
 6e4:	beq	770 <chm_nocolour_process+0x128>
 6e8:	ldr	r1, [pc, #156]	; 78c <chm_nocolour_process+0x144>
 6ec:	ldrb	ip, [r3, #1]
 6f0:	ldr	r1, [r6, r1]
 6f4:	ldr	ip, [r1, ip, lsl #2]
 6f8:	tst	ip, #16
 6fc:	beq	744 <chm_nocolour_process+0xfc>
 700:	ldrb	ip, [r3, #2]
 704:	ldr	ip, [r1, ip, lsl #2]
 708:	tst	ip, #16
 70c:	addeq	r3, r3, #1
 710:	addne	r3, r3, #2
 714:	ldrb	ip, [r3, #1]
 718:	cmp	ip, #44	; 0x2c
 71c:	bne	744 <chm_nocolour_process+0xfc>
 720:	ldrb	ip, [r3, #2]
 724:	ldr	ip, [r1, ip, lsl #2]
 728:	tst	ip, #16
 72c:	beq	744 <chm_nocolour_process+0xfc>
 730:	ldrb	ip, [r3, #3]
 734:	ldr	r1, [r1, ip, lsl #2]
 738:	tst	r1, #16
 73c:	addeq	r3, r3, #2
 740:	addne	r3, r3, #3
 744:	adds	r3, r3, #1
 748:	bne	6a8 <chm_nocolour_process+0x60>
 74c:	mov	r3, #0
 750:	cmp	r0, r3
 754:	strb	r3, [r2]
 758:	strbne	r3, [r0]
 75c:	ldr	r3, [pc, #44]	; 790 <chm_nocolour_process+0x148>
 760:	add	r3, pc, r3
 764:	add	r3, r3, #4
 768:	str	r3, [r5, #12]
 76c:	pop	{r4, r5, r6, r7, r8, pc}
 770:	add	r0, r2, #1
 774:	strb	ip, [r2]
 778:	mov	r2, r0
 77c:	b	744 <chm_nocolour_process+0xfc>
 780:	.word	0x000109a0
 784:	.word	0x00010a14
 788:	.word	0x2a302035
 78c:	.word	0x00000030
 790:	.word	0x0001091c

Disassembly of section .fini:

00000794 <_fini>:
 794:	push	{r3, lr}
 798:	pop	{r3, pc}
