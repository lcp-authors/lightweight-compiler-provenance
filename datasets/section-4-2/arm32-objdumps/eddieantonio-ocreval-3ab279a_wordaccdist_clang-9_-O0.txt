
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

0001079c <.init>:
   1079c:	push	{r3, lr}
   107a0:	bl	108f4 <abort@plt+0x48>
   107a4:	pop	{r3, pc}

Disassembly of section .plt:

000107a8 <calloc@plt-0x14>:
   107a8:	push	{lr}		; (str lr, [sp, #-4]!)
   107ac:	ldr	lr, [pc, #4]	; 107b8 <calloc@plt-0x4>
   107b0:	add	lr, pc, lr
   107b4:	ldr	pc, [lr, #8]!
   107b8:	andeq	r3, r1, r8, asr #16

000107bc <calloc@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #77824	; 0x13000
   107c4:	ldr	pc, [ip, #2120]!	; 0x848

000107c8 <strcmp@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #77824	; 0x13000
   107d0:	ldr	pc, [ip, #2112]!	; 0x840

000107d4 <fopen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #77824	; 0x13000
   107dc:	ldr	pc, [ip, #2104]!	; 0x838

000107e0 <free@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #77824	; 0x13000
   107e8:	ldr	pc, [ip, #2096]!	; 0x830

000107ec <fgets@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #77824	; 0x13000
   107f4:	ldr	pc, [ip, #2088]!	; 0x828

000107f8 <strdup@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #77824	; 0x13000
   10800:	ldr	pc, [ip, #2080]!	; 0x820

00010804 <__xstat@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #77824	; 0x13000
   1080c:	ldr	pc, [ip, #2072]!	; 0x818

00010810 <__libc_start_main@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #77824	; 0x13000
   10818:	ldr	pc, [ip, #2064]!	; 0x810

0001081c <__sysv_signal@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #77824	; 0x13000
   10824:	ldr	pc, [ip, #2056]!	; 0x808

00010828 <__gmon_start__@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #77824	; 0x13000
   10830:	ldr	pc, [ip, #2048]!	; 0x800

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #77824	; 0x13000
   1083c:	ldr	pc, [ip, #2040]!	; 0x7f8

00010840 <strlen@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #77824	; 0x13000
   10848:	ldr	pc, [ip, #2032]!	; 0x7f0

0001084c <fprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #77824	; 0x13000
   10854:	ldr	pc, [ip, #2024]!	; 0x7e8

00010858 <__isoc99_sscanf@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #77824	; 0x13000
   10860:	ldr	pc, [ip, #2016]!	; 0x7e0

00010864 <fclose@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #77824	; 0x13000
   1086c:	ldr	pc, [ip, #2008]!	; 0x7d8

00010870 <fputc@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #77824	; 0x13000
   10878:	ldr	pc, [ip, #2000]!	; 0x7d0

0001087c <sprintf@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #77824	; 0x13000
   10884:	ldr	pc, [ip, #1992]!	; 0x7c8

00010888 <atoi@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #77824	; 0x13000
   10890:	ldr	pc, [ip, #1984]!	; 0x7c0

00010894 <fputs@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #77824	; 0x13000
   1089c:	ldr	pc, [ip, #1976]!	; 0x7b8

000108a0 <strncmp@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #77824	; 0x13000
   108a8:	ldr	pc, [ip, #1968]!	; 0x7b0

000108ac <abort@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #77824	; 0x13000
   108b4:	ldr	pc, [ip, #1960]!	; 0x7a8

Disassembly of section .text:

000108b8 <error@@Base-0xb04>:
   108b8:	mov	fp, #0
   108bc:	mov	lr, #0
   108c0:	pop	{r1}		; (ldr r1, [sp], #4)
   108c4:	mov	r2, sp
   108c8:	push	{r2}		; (str r2, [sp, #-4]!)
   108cc:	push	{r0}		; (str r0, [sp, #-4]!)
   108d0:	ldr	ip, [pc, #16]	; 108e8 <abort@plt+0x3c>
   108d4:	push	{ip}		; (str ip, [sp, #-4]!)
   108d8:	ldr	r0, [pc, #12]	; 108ec <abort@plt+0x40>
   108dc:	ldr	r3, [pc, #12]	; 108f0 <abort@plt+0x44>
   108e0:	bl	10810 <__libc_start_main@plt>
   108e4:	bl	108ac <abort@plt>
   108e8:			; <UNDEFINED> instruction: 0x000131b0
   108ec:	andeq	r0, r1, r8, asr #20
   108f0:	andeq	r3, r1, r0, asr r1
   108f4:	ldr	r3, [pc, #20]	; 10910 <abort@plt+0x64>
   108f8:	ldr	r2, [pc, #20]	; 10914 <abort@plt+0x68>
   108fc:	add	r3, pc, r3
   10900:	ldr	r2, [r3, r2]
   10904:	cmp	r2, #0
   10908:	bxeq	lr
   1090c:	b	10828 <__gmon_start__@plt>
   10910:	strdeq	r3, [r1], -ip
   10914:	muleq	r0, ip, r0
   10918:	ldr	r0, [pc, #24]	; 10938 <abort@plt+0x8c>
   1091c:	ldr	r3, [pc, #24]	; 1093c <abort@plt+0x90>
   10920:	cmp	r3, r0
   10924:	bxeq	lr
   10928:	ldr	r3, [pc, #16]	; 10940 <abort@plt+0x94>
   1092c:	cmp	r3, #0
   10930:	bxeq	lr
   10934:	bx	r3
   10938:	andeq	r4, r2, ip, ror #1
   1093c:	andeq	r4, r2, ip, ror #1
   10940:	andeq	r0, r0, r0
   10944:	ldr	r0, [pc, #36]	; 10970 <abort@plt+0xc4>
   10948:	ldr	r1, [pc, #36]	; 10974 <abort@plt+0xc8>
   1094c:	sub	r1, r1, r0
   10950:	asr	r1, r1, #2
   10954:	add	r1, r1, r1, lsr #31
   10958:	asrs	r1, r1, #1
   1095c:	bxeq	lr
   10960:	ldr	r3, [pc, #16]	; 10978 <abort@plt+0xcc>
   10964:	cmp	r3, #0
   10968:	bxeq	lr
   1096c:	bx	r3
   10970:	andeq	r4, r2, ip, ror #1
   10974:	andeq	r4, r2, ip, ror #1
   10978:	andeq	r0, r0, r0
   1097c:	push	{r4, lr}
   10980:	ldr	r4, [pc, #24]	; 109a0 <abort@plt+0xf4>
   10984:	ldrb	r3, [r4]
   10988:	cmp	r3, #0
   1098c:	popne	{r4, pc}
   10990:	bl	10918 <abort@plt+0x6c>
   10994:	mov	r3, #1
   10998:	strb	r3, [r4]
   1099c:	pop	{r4, pc}
   109a0:	andeq	r4, r2, ip, ror #1
   109a4:	b	10944 <abort@plt+0x98>
   109a8:	push	{fp, lr}
   109ac:	mov	fp, sp
   109b0:	sub	sp, sp, #24
   109b4:	ldr	r1, [pc, #132]	; 10a40 <abort@plt+0x194>
   109b8:	ldr	r1, [pc, r1]
   109bc:	ldr	r2, [pc, #128]	; 10a44 <abort@plt+0x198>
   109c0:	ldr	r2, [pc, r2]
   109c4:	str	r0, [fp, #-4]
   109c8:	ldr	r0, [r1]
   109cc:	str	r0, [fp, #-8]
   109d0:	ldr	r0, [r1, #4]
   109d4:	str	r0, [sp, #12]
   109d8:	ldr	r0, [fp, #-4]
   109dc:	str	r0, [sp, #8]
   109e0:	mov	r0, r1
   109e4:	ldr	r1, [sp, #8]
   109e8:	blx	r2
   109ec:	ldr	r0, [pc, #64]	; 10a34 <abort@plt+0x188>
   109f0:	ldr	r0, [pc, r0]
   109f4:	ldr	r1, [pc, #60]	; 10a38 <abort@plt+0x18c>
   109f8:	ldr	r1, [pc, r1]
   109fc:	ldr	r2, [pc, #56]	; 10a3c <abort@plt+0x190>
   10a00:	ldr	r2, [pc, r2]
   10a04:	ldr	r3, [r2]
   10a08:	ldr	ip, [fp, #-8]
   10a0c:	sub	r3, r3, ip
   10a10:	ldr	r2, [r2, #4]
   10a14:	ldr	ip, [sp, #12]
   10a18:	sub	r2, r2, ip
   10a1c:	str	r1, [sp, #4]
   10a20:	mov	r1, r3
   10a24:	ldr	r3, [sp, #4]
   10a28:	blx	r3
   10a2c:	mov	sp, fp
   10a30:	pop	{fp, pc}
   10a34:			; <UNDEFINED> instruction: 0x000136bc
   10a38:	andeq	r3, r1, ip, lsl #13
   10a3c:	muleq	r1, ip, r6
   10a40:	andeq	r3, r1, r4, ror #13
   10a44:			; <UNDEFINED> instruction: 0x000136bc
   10a48:	push	{fp, lr}
   10a4c:	mov	fp, sp
   10a50:	sub	sp, sp, #24
   10a54:	ldr	r2, [pc, #156]	; 10af8 <abort@plt+0x24c>
   10a58:	add	r2, pc, r2
   10a5c:	ldr	r3, [pc, #152]	; 10afc <abort@plt+0x250>
   10a60:	ldr	r3, [pc, r3]
   10a64:	movw	ip, #0
   10a68:	str	ip, [fp, #-4]
   10a6c:	str	r0, [fp, #-8]
   10a70:	str	r1, [sp, #12]
   10a74:	ldr	r1, [sp, #12]
   10a78:	sub	r0, fp, #8
   10a7c:	str	r3, [sp, #4]
   10a80:	mov	r3, ip
   10a84:	ldr	ip, [sp, #4]
   10a88:	blx	ip
   10a8c:	movw	r0, #0
   10a90:	str	r0, [sp, #8]
   10a94:	ldr	r0, [sp, #8]
   10a98:	ldr	r1, [fp, #-8]
   10a9c:	cmp	r0, r1
   10aa0:	bge	10ac8 <abort@plt+0x21c>
   10aa4:	ldr	r0, [sp, #12]
   10aa8:	ldr	r1, [sp, #8]
   10aac:	add	r0, r0, r1, lsl #2
   10ab0:	ldr	r0, [r0]
   10ab4:	bl	109a8 <abort@plt+0xfc>
   10ab8:	ldr	r0, [sp, #8]
   10abc:	add	r0, r0, #1
   10ac0:	str	r0, [sp, #8]
   10ac4:	b	10a94 <abort@plt+0x1e8>
   10ac8:	ldr	r0, [pc, #52]	; 10b04 <abort@plt+0x258>
   10acc:	ldr	r0, [pc, r0]
   10ad0:	ldr	r1, [pc, #48]	; 10b08 <abort@plt+0x25c>
   10ad4:	ldr	r1, [pc, r1]
   10ad8:	movw	r2, #0
   10adc:	str	r1, [sp]
   10ae0:	mov	r1, r2
   10ae4:	ldr	r2, [sp]
   10ae8:	blx	r2
   10aec:	ldr	r0, [pc, #12]	; 10b00 <abort@plt+0x254>
   10af0:	ldr	r0, [pc, r0]
   10af4:	blx	r0
   10af8:	andeq	r2, r0, r0, ror r7
   10afc:	andeq	r3, r1, ip, lsr #12
   10b00:	andeq	r3, r1, r0, asr #11
   10b04:	andeq	r3, r1, r0, ror #11
   10b08:	muleq	r1, ip, r5
   10b0c:	andeq	r0, r0, r0
   10b10:	sub	sp, sp, #32
   10b14:	str	r0, [sp, #28]
   10b18:	str	r1, [sp, #24]
   10b1c:	str	r2, [sp, #20]
   10b20:	ldr	r0, [sp, #24]
   10b24:	cmp	r0, #0
   10b28:	bne	10b30 <abort@plt+0x284>
   10b2c:	b	10bc8 <abort@plt+0x31c>
   10b30:	vldr	d16, [pc, #152]	; 10bd0 <abort@plt+0x324>
   10b34:	ldr	r0, [sp, #24]
   10b38:	ldr	r1, [sp, #20]
   10b3c:	sub	r0, r0, r1
   10b40:	vmov	s0, r0
   10b44:	vcvt.f64.s32	d17, s0
   10b48:	vmul.f64	d16, d16, d17
   10b4c:	ldr	r0, [sp, #24]
   10b50:	vmov	s0, r0
   10b54:	vcvt.f64.s32	d17, s0
   10b58:	vdiv.f64	d16, d16, d17
   10b5c:	vstr	d16, [sp, #8]
   10b60:	movw	r0, #0
   10b64:	strh	r0, [sp, #6]
   10b68:	vldr	d16, [sp, #8]
   10b6c:	ldrsh	r0, [sp, #6]
   10b70:	vmov	s0, r0
   10b74:	vcvt.f64.s32	d17, s0
   10b78:	vcmpe.f64	d16, d17
   10b7c:	vmrs	APSR_nzcv, fpscr
   10b80:	blt	10bb4 <abort@plt+0x308>
   10b84:	ldr	r0, [sp, #24]
   10b88:	ldr	r1, [sp, #28]
   10b8c:	ldrsh	r2, [sp, #6]
   10b90:	add	r1, r1, r2, lsl #2
   10b94:	ldr	r2, [r1]
   10b98:	add	r0, r2, r0
   10b9c:	str	r0, [r1]
   10ba0:	ldrh	r0, [sp, #6]
   10ba4:	movw	r1, #1
   10ba8:	add	r0, r0, r1
   10bac:	strh	r0, [sp, #6]
   10bb0:	b	10b68 <abort@plt+0x2bc>
   10bb4:	ldr	r0, [sp, #24]
   10bb8:	ldr	r1, [sp, #28]
   10bbc:	ldr	r2, [r1, #404]	; 0x194
   10bc0:	add	r0, r2, r0
   10bc4:	str	r0, [r1, #404]	; 0x194
   10bc8:	add	sp, sp, #32
   10bcc:	bx	lr
   10bd0:	andeq	r0, r0, r0
   10bd4:	subsmi	r0, r9, r0
   10bd8:	push	{fp, lr}
   10bdc:	mov	fp, sp
   10be0:	sub	sp, sp, #40	; 0x28
   10be4:	str	r0, [fp, #-4]
   10be8:	str	r1, [fp, #-8]
   10bec:	ldr	r0, [fp, #-4]
   10bf0:	ldr	r0, [r0, #404]	; 0x194
   10bf4:	cmp	r0, #0
   10bf8:	bne	10c00 <abort@plt+0x354>
   10bfc:	b	10cbc <abort@plt+0x410>
   10c00:	ldr	r0, [pc, #200]	; 10cd0 <abort@plt+0x424>
   10c04:	add	r1, pc, r0
   10c08:	ldr	r0, [pc, #196]	; 10cd4 <abort@plt+0x428>
   10c0c:	ldr	r0, [pc, r0]
   10c10:	ldr	r2, [fp, #-8]
   10c14:	str	r0, [sp, #20]
   10c18:	mov	r0, r2
   10c1c:	ldr	r2, [sp, #20]
   10c20:	blx	r2
   10c24:	str	r0, [fp, #-12]
   10c28:	movw	r0, #0
   10c2c:	strh	r0, [fp, #-14]
   10c30:	ldrsh	r0, [fp, #-14]
   10c34:	cmp	r0, #100	; 0x64
   10c38:	bgt	10ca0 <abort@plt+0x3f4>
   10c3c:	ldr	r0, [pc, #152]	; 10cdc <abort@plt+0x430>
   10c40:	add	r1, pc, r0
   10c44:	vldr	d16, [pc, #124]	; 10cc8 <abort@plt+0x41c>
   10c48:	ldr	r0, [fp, #-12]
   10c4c:	ldrsh	r2, [fp, #-14]
   10c50:	ldr	r3, [fp, #-4]
   10c54:	mov	ip, r2
   10c58:	add	r3, r3, r2, lsl #2
   10c5c:	ldr	r3, [r3]
   10c60:	vmov	s0, r3
   10c64:	vcvt.f64.s32	d17, s0
   10c68:	vmul.f64	d16, d16, d17
   10c6c:	ldr	r3, [fp, #-4]
   10c70:	ldr	r3, [r3, #404]	; 0x194
   10c74:	vmov	s0, r3
   10c78:	vcvt.f64.s32	d17, s0
   10c7c:	vdiv.f64	d16, d16, d17
   10c80:	vstr	d16, [sp]
   10c84:	str	ip, [sp, #16]
   10c88:	bl	1084c <fprintf@plt>
   10c8c:	ldrh	r0, [fp, #-14]
   10c90:	movw	r1, #1
   10c94:	add	r0, r0, r1
   10c98:	strh	r0, [fp, #-14]
   10c9c:	b	10c30 <abort@plt+0x384>
   10ca0:	ldr	r0, [pc, #48]	; 10cd8 <abort@plt+0x42c>
   10ca4:	ldr	r0, [pc, r0]
   10ca8:	ldr	r1, [fp, #-12]
   10cac:	str	r0, [sp, #12]
   10cb0:	mov	r0, r1
   10cb4:	ldr	r1, [sp, #12]
   10cb8:	blx	r1
   10cbc:	mov	sp, fp
   10cc0:	pop	{fp, pc}
   10cc4:	nop	{0}
   10cc8:	andeq	r0, r0, r0
   10ccc:	subsmi	r0, r9, r0
   10cd0:	strdeq	r2, [r0], -r0
   10cd4:	andeq	r3, r1, r0, ror #8
   10cd8:			; <UNDEFINED> instruction: 0x000133b4
   10cdc:			; <UNDEFINED> instruction: 0x000025b6
   10ce0:	push	{fp, lr}
   10ce4:	mov	fp, sp
   10ce8:	sub	sp, sp, #16
   10cec:	str	r0, [fp, #-4]
   10cf0:	str	r1, [sp, #8]
   10cf4:	ldr	r0, [fp, #-4]
   10cf8:	ldr	r1, [sp, #8]
   10cfc:	bl	107bc <calloc@plt>
   10d00:	str	r0, [sp, #4]
   10d04:	ldr	r0, [sp, #4]
   10d08:	movw	r1, #0
   10d0c:	cmp	r0, r1
   10d10:	bne	10d20 <abort@plt+0x474>
   10d14:	ldr	r0, [pc, #16]	; 10d2c <abort@plt+0x480>
   10d18:	add	r0, pc, r0
   10d1c:	bl	113bc <error@@Base>
   10d20:	ldr	r0, [sp, #4]
   10d24:	mov	sp, fp
   10d28:	pop	{fp, pc}
   10d2c:	andeq	r2, r0, r9, ror #9
   10d30:	sub	sp, sp, #20
   10d34:	str	r0, [sp, #12]
   10d38:	str	r1, [sp, #8]
   10d3c:	movw	r0, #0
   10d40:	str	r0, [sp, #4]
   10d44:	ldr	r0, [sp, #12]
   10d48:	ldr	r1, [sp, #4]
   10d4c:	add	r0, r0, r1
   10d50:	ldrb	r0, [r0]
   10d54:	cmp	r0, #0
   10d58:	movw	r0, #0
   10d5c:	str	r0, [sp]
   10d60:	beq	10d94 <abort@plt+0x4e8>
   10d64:	ldr	r0, [sp, #12]
   10d68:	ldr	r1, [sp, #4]
   10d6c:	add	r0, r0, r1
   10d70:	ldrb	r0, [r0]
   10d74:	ldr	r1, [sp, #8]
   10d78:	ldr	r2, [sp, #4]
   10d7c:	add	r1, r1, r2
   10d80:	ldrb	r1, [r1]
   10d84:	cmp	r0, r1
   10d88:	movw	r0, #0
   10d8c:	moveq	r0, #1
   10d90:	str	r0, [sp]
   10d94:	ldr	r0, [sp]
   10d98:	tst	r0, #1
   10d9c:	beq	10db4 <abort@plt+0x508>
   10da0:	b	10da4 <abort@plt+0x4f8>
   10da4:	ldr	r0, [sp, #4]
   10da8:	add	r0, r0, #1
   10dac:	str	r0, [sp, #4]
   10db0:	b	10d44 <abort@plt+0x498>
   10db4:	ldr	r0, [sp, #12]
   10db8:	ldr	r1, [sp, #4]
   10dbc:	add	r0, r0, r1
   10dc0:	ldrb	r0, [r0]
   10dc4:	cmp	r0, #0
   10dc8:	bne	10de4 <abort@plt+0x538>
   10dcc:	ldr	r0, [sp, #8]
   10dd0:	ldr	r1, [sp, #4]
   10dd4:	add	r0, r0, r1
   10dd8:	ldrb	r0, [r0]
   10ddc:	cmp	r0, #0
   10de0:	beq	10e24 <abort@plt+0x578>
   10de4:	ldr	r0, [sp, #12]
   10de8:	ldr	r1, [sp, #4]
   10dec:	add	r0, r0, r1
   10df0:	ldrb	r0, [r0]
   10df4:	ldr	r1, [sp, #8]
   10df8:	ldr	r2, [sp, #4]
   10dfc:	add	r1, r1, r2
   10e00:	ldrb	r1, [r1]
   10e04:	cmp	r0, r1
   10e08:	movw	r0, #0
   10e0c:	movlt	r0, #1
   10e10:	tst	r0, #1
   10e14:	mvn	r0, #0
   10e18:	moveq	r0, #1
   10e1c:	str	r0, [sp, #16]
   10e20:	b	10e2c <abort@plt+0x580>
   10e24:	movw	r0, #0
   10e28:	str	r0, [sp, #16]
   10e2c:	ldr	r0, [sp, #16]
   10e30:	add	sp, sp, #20
   10e34:	bx	lr
   10e38:	push	{fp, lr}
   10e3c:	mov	fp, sp
   10e40:	sub	sp, sp, #24
   10e44:	str	r0, [fp, #-8]
   10e48:	str	r1, [sp, #12]
   10e4c:	ldr	r0, [fp, #-8]
   10e50:	movw	r1, #0
   10e54:	cmp	r0, r1
   10e58:	bne	10e9c <abort@plt+0x5f0>
   10e5c:	ldr	r0, [sp, #12]
   10e60:	ldrb	r0, [r0]
   10e64:	cmp	r0, #114	; 0x72
   10e68:	bne	10e80 <abort@plt+0x5d4>
   10e6c:	ldr	r0, [pc, #148]	; 10f08 <abort@plt+0x65c>
   10e70:	ldr	r0, [pc, r0]
   10e74:	ldr	r0, [r0]
   10e78:	str	r0, [sp, #4]
   10e7c:	b	10e90 <abort@plt+0x5e4>
   10e80:	ldr	r0, [pc, #124]	; 10f04 <abort@plt+0x658>
   10e84:	ldr	r0, [pc, r0]
   10e88:	ldr	r0, [r0]
   10e8c:	str	r0, [sp, #4]
   10e90:	ldr	r0, [sp, #4]
   10e94:	str	r0, [fp, #-4]
   10e98:	b	10ef8 <abort@plt+0x64c>
   10e9c:	ldr	r0, [fp, #-8]
   10ea0:	ldr	r1, [sp, #12]
   10ea4:	bl	107d4 <fopen@plt>
   10ea8:	str	r0, [sp, #8]
   10eac:	ldr	r0, [sp, #8]
   10eb0:	movw	r1, #0
   10eb4:	cmp	r0, r1
   10eb8:	beq	10ec8 <abort@plt+0x61c>
   10ebc:	ldr	r0, [sp, #8]
   10ec0:	str	r0, [fp, #-4]
   10ec4:	b	10ef8 <abort@plt+0x64c>
   10ec8:	ldr	r0, [sp, #12]
   10ecc:	ldrb	r0, [r0]
   10ed0:	cmp	r0, #119	; 0x77
   10ed4:	bne	10ee8 <abort@plt+0x63c>
   10ed8:	ldr	r0, [pc, #48]	; 10f10 <abort@plt+0x664>
   10edc:	add	r0, pc, r0
   10ee0:	ldr	r1, [fp, #-8]
   10ee4:	bl	1141c <error@@Base+0x60>
   10ee8:	ldr	r0, [pc, #28]	; 10f0c <abort@plt+0x660>
   10eec:	add	r0, pc, r0
   10ef0:	ldr	r1, [fp, #-8]
   10ef4:	bl	1141c <error@@Base+0x60>
   10ef8:	ldr	r0, [fp, #-4]
   10efc:	mov	sp, fp
   10f00:	pop	{fp, pc}
   10f04:	andeq	r3, r1, r0, lsr r2
   10f08:	andeq	r3, r1, r8, lsr r2
   10f0c:	andeq	r2, r0, r5, asr #6
   10f10:	andeq	r2, r0, pc, lsr r3
   10f14:	push	{fp, lr}
   10f18:	mov	fp, sp
   10f1c:	sub	sp, sp, #8
   10f20:	ldr	r1, [pc, #60]	; 10f64 <abort@plt+0x6b8>
   10f24:	ldr	r1, [pc, r1]
   10f28:	str	r0, [sp, #4]
   10f2c:	ldr	r0, [sp, #4]
   10f30:	ldr	r1, [r1]
   10f34:	cmp	r0, r1
   10f38:	beq	10f5c <abort@plt+0x6b0>
   10f3c:	ldr	r0, [pc, #36]	; 10f68 <abort@plt+0x6bc>
   10f40:	ldr	r0, [pc, r0]
   10f44:	ldr	r1, [sp, #4]
   10f48:	ldr	r0, [r0]
   10f4c:	cmp	r1, r0
   10f50:	beq	10f5c <abort@plt+0x6b0>
   10f54:	ldr	r0, [sp, #4]
   10f58:	bl	10864 <fclose@plt>
   10f5c:	mov	sp, fp
   10f60:	pop	{fp, pc}
   10f64:	andeq	r3, r1, r4, lsl #3
   10f68:	andeq	r3, r1, r4, ror r1
   10f6c:	push	{fp, lr}
   10f70:	mov	fp, sp
   10f74:	sub	sp, sp, #96	; 0x60
   10f78:	str	r0, [fp, #-4]
   10f7c:	ldr	r0, [fp, #-4]
   10f80:	mov	r1, sp
   10f84:	bl	131b4 <error@@Base+0x1df8>
   10f88:	cmp	r0, #0
   10f8c:	movw	r0, #0
   10f90:	moveq	r0, #1
   10f94:	tst	r0, #1
   10f98:	movw	r0, #1
   10f9c:	moveq	r0, #0
   10fa0:	and	r0, r0, #255	; 0xff
   10fa4:	mov	sp, fp
   10fa8:	pop	{fp, pc}
   10fac:	push	{fp, lr}
   10fb0:	mov	fp, sp
   10fb4:	sub	sp, sp, #8
   10fb8:	ldr	r0, [pc, #68]	; 11004 <abort@plt+0x758>
   10fbc:	add	r0, pc, r0
   10fc0:	ldrh	r1, [r0]
   10fc4:	movw	r2, #1
   10fc8:	add	r1, r1, r2
   10fcc:	strh	r1, [r0]
   10fd0:	sxth	r0, r1
   10fd4:	bl	11008 <abort@plt+0x75c>
   10fd8:	ldr	r1, [pc, #32]	; 11000 <abort@plt+0x754>
   10fdc:	ldr	r1, [pc, r1]
   10fe0:	str	r0, [sp, #4]
   10fe4:	ldr	r0, [sp, #4]
   10fe8:	blx	r1
   10fec:	ldr	r1, [sp, #4]
   10ff0:	str	r0, [sp]
   10ff4:	mov	r0, r1
   10ff8:	mov	sp, fp
   10ffc:	pop	{fp, pc}
   11000:	muleq	r1, r8, r0
   11004:	andeq	r3, r1, sl, lsr #2
   11008:	push	{fp, lr}
   1100c:	mov	fp, sp
   11010:	sub	sp, sp, #128	; 0x80
   11014:	ldr	r1, [pc, #112]	; 1108c <abort@plt+0x7e0>
   11018:	ldr	r1, [pc, r1]
   1101c:	ldr	r2, [pc, #108]	; 11090 <abort@plt+0x7e4>
   11020:	ldr	r2, [pc, r2]
   11024:	add	r3, sp, #26
   11028:	strh	r0, [fp, #-2]
   1102c:	ldr	r2, [r2]
   11030:	str	r3, [sp, #20]
   11034:	str	r2, [sp, #16]
   11038:	blx	r1
   1103c:	ldr	r1, [pc, #68]	; 11088 <abort@plt+0x7dc>
   11040:	add	r1, pc, r1
   11044:	ldrsh	r2, [fp, #-2]
   11048:	ldr	r3, [sp, #20]
   1104c:	str	r0, [sp, #12]
   11050:	mov	r0, r3
   11054:	ldr	ip, [sp, #16]
   11058:	str	r2, [sp, #8]
   1105c:	mov	r2, ip
   11060:	ldr	r3, [sp, #12]
   11064:	ldr	lr, [sp, #8]
   11068:	str	lr, [sp]
   1106c:	bl	1087c <sprintf@plt>
   11070:	add	r1, sp, #26
   11074:	str	r0, [sp, #4]
   11078:	mov	r0, r1
   1107c:	bl	107f8 <strdup@plt>
   11080:	mov	sp, fp
   11084:	pop	{fp, pc}
   11088:	andeq	r2, r0, sl, lsl r2
   1108c:	andeq	r3, r1, r8, lsl #1
   11090:	andeq	r3, r1, r8, ror r0
   11094:	push	{fp, lr}
   11098:	mov	fp, sp
   1109c:	sub	sp, sp, #16
   110a0:	str	r0, [fp, #-4]
   110a4:	movw	r0, #47	; 0x2f
   110a8:	strb	r0, [fp, #-5]
   110ac:	ldr	r0, [fp, #-4]
   110b0:	bl	10840 <strlen@plt>
   110b4:	sub	r0, r0, #1
   110b8:	strh	r0, [sp, #8]
   110bc:	ldrsh	r0, [sp, #8]
   110c0:	cmp	r0, #0
   110c4:	movw	r0, #0
   110c8:	str	r0, [sp, #4]
   110cc:	blt	110f4 <abort@plt+0x848>
   110d0:	ldr	r0, [fp, #-4]
   110d4:	ldrsh	r1, [sp, #8]
   110d8:	add	r0, r0, r1
   110dc:	ldrb	r0, [r0]
   110e0:	ldrb	r1, [fp, #-5]
   110e4:	cmp	r0, r1
   110e8:	movw	r0, #0
   110ec:	movne	r0, #1
   110f0:	str	r0, [sp, #4]
   110f4:	ldr	r0, [sp, #4]
   110f8:	tst	r0, #1
   110fc:	beq	11118 <abort@plt+0x86c>
   11100:	b	11104 <abort@plt+0x858>
   11104:	ldrh	r0, [sp, #8]
   11108:	movw	r1, #65535	; 0xffff
   1110c:	add	r0, r0, r1
   11110:	strh	r0, [sp, #8]
   11114:	b	110bc <abort@plt+0x810>
   11118:	ldr	r0, [fp, #-4]
   1111c:	ldrsh	r1, [sp, #8]
   11120:	add	r1, r1, #1
   11124:	add	r0, r0, r1
   11128:	mov	sp, fp
   1112c:	pop	{fp, pc}
   11130:	push	{fp, lr}
   11134:	mov	fp, sp
   11138:	sub	sp, sp, #16
   1113c:	str	r0, [fp, #-4]
   11140:	str	r1, [sp, #8]
   11144:	str	r2, [sp, #4]
   11148:	str	r3, [sp]
   1114c:	ldr	r0, [sp, #8]
   11150:	ldr	r0, [r0]
   11154:	bl	11094 <abort@plt+0x7e8>
   11158:	ldr	r1, [pc, #36]	; 11184 <abort@plt+0x8d8>
   1115c:	ldr	r1, [pc, r1]
   11160:	str	r0, [r1]
   11164:	bl	114f8 <error@@Base+0x13c>
   11168:	ldr	r0, [fp, #-4]
   1116c:	ldr	r1, [sp, #8]
   11170:	ldr	r2, [sp, #4]
   11174:	ldr	r3, [sp]
   11178:	bl	11188 <abort@plt+0x8dc>
   1117c:	mov	sp, fp
   11180:	pop	{fp, pc}
   11184:	andeq	r2, r1, ip, lsr pc
   11188:	push	{fp, lr}
   1118c:	mov	fp, sp
   11190:	sub	sp, sp, #48	; 0x30
   11194:	str	r0, [fp, #-4]
   11198:	str	r1, [fp, #-8]
   1119c:	str	r2, [fp, #-12]
   111a0:	str	r3, [fp, #-16]
   111a4:	movw	r0, #0
   111a8:	strh	r0, [fp, #-20]	; 0xffffffec
   111ac:	ldr	r0, [fp, #-4]
   111b0:	ldr	r0, [r0]
   111b4:	cmp	r0, #1
   111b8:	bne	111d8 <abort@plt+0x92c>
   111bc:	ldr	r0, [pc, #404]	; 11358 <abort@plt+0xaac>
   111c0:	ldr	r0, [pc, r0]
   111c4:	ldrb	r0, [r0]
   111c8:	cmp	r0, #0
   111cc:	beq	111d8 <abort@plt+0x92c>
   111d0:	ldr	r0, [fp, #-12]
   111d4:	bl	11590 <error@@Base+0x1d4>
   111d8:	movw	r0, #1
   111dc:	strh	r0, [fp, #-18]	; 0xffffffee
   111e0:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   111e4:	ldr	r1, [fp, #-4]
   111e8:	ldr	r1, [r1]
   111ec:	cmp	r0, r1
   111f0:	bge	11344 <abort@plt+0xa98>
   111f4:	ldr	r0, [fp, #-8]
   111f8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   111fc:	add	r0, r0, r1, lsl #2
   11200:	ldr	r0, [r0]
   11204:	ldrb	r0, [r0]
   11208:	cmp	r0, #45	; 0x2d
   1120c:	bne	1130c <abort@plt+0xa60>
   11210:	ldr	r0, [fp, #-8]
   11214:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11218:	add	r0, r0, r1, lsl #2
   1121c:	ldr	r0, [r0]
   11220:	ldrb	r0, [r0, #1]
   11224:	cmp	r0, #0
   11228:	beq	1130c <abort@plt+0xa60>
   1122c:	ldr	r0, [pc, #296]	; 1135c <abort@plt+0xab0>
   11230:	add	r0, pc, r0
   11234:	ldr	r1, [fp, #-8]
   11238:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   1123c:	ldr	r2, [r1, r2, lsl #2]!
   11240:	ldr	r1, [r1]
   11244:	str	r0, [sp, #24]
   11248:	mov	r0, r1
   1124c:	str	r2, [sp, #20]
   11250:	bl	10840 <strlen@plt>
   11254:	ldr	r1, [sp, #24]
   11258:	str	r0, [sp, #16]
   1125c:	mov	r0, r1
   11260:	ldr	r1, [sp, #20]
   11264:	ldr	r2, [sp, #16]
   11268:	bl	108a0 <strncmp@plt>
   1126c:	cmp	r0, #0
   11270:	bne	1127c <abort@plt+0x9d0>
   11274:	ldr	r0, [fp, #-12]
   11278:	bl	11590 <error@@Base+0x1d4>
   1127c:	ldr	r0, [fp, #-8]
   11280:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11284:	add	r0, r0, r1, lsl #2
   11288:	ldr	r0, [r0]
   1128c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11290:	add	r1, r1, #1
   11294:	ldr	r2, [fp, #-4]
   11298:	ldr	r2, [r2]
   1129c:	cmp	r1, r2
   112a0:	str	r0, [sp, #12]
   112a4:	bge	112c4 <abort@plt+0xa18>
   112a8:	ldr	r0, [fp, #-8]
   112ac:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   112b0:	add	r1, r1, #1
   112b4:	add	r0, r0, r1, lsl #2
   112b8:	ldr	r0, [r0]
   112bc:	str	r0, [sp, #8]
   112c0:	b	112d0 <abort@plt+0xa24>
   112c4:	movw	r0, #0
   112c8:	str	r0, [sp, #8]
   112cc:	b	112d0 <abort@plt+0xa24>
   112d0:	ldr	r0, [sp, #8]
   112d4:	ldr	r2, [fp, #-16]
   112d8:	ldr	r1, [sp, #12]
   112dc:	str	r0, [sp, #4]
   112e0:	mov	r0, r1
   112e4:	ldr	r1, [sp, #4]
   112e8:	bl	11618 <error@@Base+0x25c>
   112ec:	sxtb	r0, r0
   112f0:	cmp	r0, #0
   112f4:	beq	11308 <abort@plt+0xa5c>
   112f8:	ldrh	r0, [fp, #-18]	; 0xffffffee
   112fc:	movw	r1, #1
   11300:	add	r0, r0, r1
   11304:	strh	r0, [fp, #-18]	; 0xffffffee
   11308:	b	1132c <abort@plt+0xa80>
   1130c:	ldr	r0, [fp, #-8]
   11310:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11314:	ldr	r1, [r0, r1, lsl #2]
   11318:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   1131c:	add	r3, r2, #1
   11320:	strh	r3, [fp, #-20]	; 0xffffffec
   11324:	add	r0, r0, r2, lsl #2
   11328:	str	r1, [r0]
   1132c:	b	11330 <abort@plt+0xa84>
   11330:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11334:	movw	r1, #1
   11338:	add	r0, r0, r1
   1133c:	strh	r0, [fp, #-18]	; 0xffffffee
   11340:	b	111e0 <abort@plt+0x934>
   11344:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11348:	ldr	r1, [fp, #-4]
   1134c:	str	r0, [r1]
   11350:	mov	sp, fp
   11354:	pop	{fp, pc}
   11358:	muleq	r1, ip, lr
   1135c:	andeq	r2, r0, r7, asr #32
   11360:	push	{fp, lr}
   11364:	mov	fp, sp
   11368:	movw	r0, #0
   1136c:	bl	11370 <abort@plt+0xac4>
   11370:	push	{fp, lr}
   11374:	mov	fp, sp
   11378:	sub	sp, sp, #8
   1137c:	ldr	r1, [pc, #48]	; 113b4 <abort@plt+0xb08>
   11380:	ldr	r1, [pc, r1]
   11384:	str	r0, [sp, #4]
   11388:	ldr	r0, [r1]
   1138c:	movw	r1, #0
   11390:	cmp	r0, r1
   11394:	beq	113a8 <abort@plt+0xafc>
   11398:	ldr	r0, [pc, #24]	; 113b8 <abort@plt+0xb0c>
   1139c:	ldr	r0, [pc, r0]
   113a0:	ldr	r0, [r0]
   113a4:	blx	r0
   113a8:	bl	1188c <error@@Base+0x4d0>
   113ac:	ldr	r0, [sp, #4]
   113b0:	bl	10834 <exit@plt>
   113b4:	andeq	r2, r1, r4, lsr #26
   113b8:	andeq	r2, r1, r8, lsl #26

000113bc <error@@Base>:
   113bc:	push	{fp, lr}
   113c0:	mov	fp, sp
   113c4:	sub	sp, sp, #8
   113c8:	ldr	r1, [pc, #64]	; 11410 <error@@Base+0x54>
   113cc:	add	r1, pc, r1
   113d0:	ldr	r2, [pc, #60]	; 11414 <error@@Base+0x58>
   113d4:	ldr	r2, [pc, r2]
   113d8:	ldr	r3, [pc, #56]	; 11418 <error@@Base+0x5c>
   113dc:	ldr	r3, [pc, r3]
   113e0:	str	r0, [sp, #4]
   113e4:	ldr	r0, [r3]
   113e8:	ldr	r2, [r2]
   113ec:	ldr	r3, [sp, #4]
   113f0:	bl	1084c <fprintf@plt>
   113f4:	ldr	r1, [pc, #16]	; 1140c <error@@Base+0x50>
   113f8:	ldr	r1, [pc, r1]
   113fc:	ldr	r1, [r1]
   11400:	str	r0, [sp]
   11404:	mov	r0, r1
   11408:	bl	11370 <abort@plt+0xac4>
   1140c:	andeq	r2, r1, r8, asr #25
   11410:	andeq	r1, r0, r9, ror lr
   11414:	andeq	r2, r1, r4, asr #25
   11418:	andeq	r2, r1, r4, lsr #25
   1141c:	push	{fp, lr}
   11420:	mov	fp, sp
   11424:	sub	sp, sp, #24
   11428:	ldr	r2, [pc, #88]	; 11488 <error@@Base+0xcc>
   1142c:	add	r2, pc, r2
   11430:	ldr	r3, [pc, #84]	; 1148c <error@@Base+0xd0>
   11434:	ldr	r3, [pc, r3]
   11438:	ldr	ip, [pc, #80]	; 11490 <error@@Base+0xd4>
   1143c:	ldr	ip, [pc, ip]
   11440:	str	r0, [fp, #-4]
   11444:	str	r1, [fp, #-8]
   11448:	ldr	r0, [ip]
   1144c:	ldr	r1, [r3]
   11450:	ldr	r3, [fp, #-4]
   11454:	ldr	ip, [fp, #-8]
   11458:	str	r1, [sp, #12]
   1145c:	mov	r1, r2
   11460:	ldr	r2, [sp, #12]
   11464:	str	ip, [sp]
   11468:	bl	1084c <fprintf@plt>
   1146c:	ldr	r1, [pc, #16]	; 11484 <error@@Base+0xc8>
   11470:	ldr	r1, [pc, r1]
   11474:	ldr	r1, [r1]
   11478:	str	r0, [sp, #8]
   1147c:	mov	r0, r1
   11480:	bl	11370 <abort@plt+0xac4>
   11484:	andeq	r2, r1, r0, asr ip
   11488:	andeq	r1, r0, r1, lsr #28
   1148c:	andeq	r2, r1, r4, ror #24
   11490:	andeq	r2, r1, r4, asr #24
   11494:	push	{fp, lr}
   11498:	mov	fp, sp
   1149c:	sub	sp, sp, #16
   114a0:	ldr	r2, [pc, #68]	; 114ec <error@@Base+0x130>
   114a4:	add	r2, pc, r2
   114a8:	ldr	r3, [pc, #64]	; 114f0 <error@@Base+0x134>
   114ac:	ldr	r3, [pc, r3]
   114b0:	ldr	ip, [pc, #60]	; 114f4 <error@@Base+0x138>
   114b4:	ldr	ip, [pc, ip]
   114b8:	str	r0, [fp, #-4]
   114bc:	str	r1, [sp, #8]
   114c0:	ldr	r0, [ip]
   114c4:	ldr	r1, [r3]
   114c8:	ldr	r3, [fp, #-4]
   114cc:	ldr	ip, [sp, #8]
   114d0:	str	r1, [sp, #4]
   114d4:	mov	r1, r2
   114d8:	ldr	r2, [sp, #4]
   114dc:	str	ip, [sp]
   114e0:	bl	1084c <fprintf@plt>
   114e4:	mov	sp, fp
   114e8:	pop	{fp, pc}
   114ec:	andeq	r1, r0, r9, lsr #27
   114f0:	andeq	r2, r1, ip, ror #23
   114f4:	andeq	r2, r1, ip, asr #23
   114f8:	push	{fp, lr}
   114fc:	mov	fp, sp
   11500:	sub	sp, sp, #8
   11504:	ldr	r0, [pc, #44]	; 11538 <error@@Base+0x17c>
   11508:	add	r1, pc, r0
   1150c:	movw	r0, #2
   11510:	bl	1081c <__sysv_signal@plt>
   11514:	ldr	r1, [pc, #24]	; 11534 <error@@Base+0x178>
   11518:	add	r1, pc, r1
   1151c:	movw	r2, #15
   11520:	str	r0, [sp, #4]
   11524:	mov	r0, r2
   11528:	bl	1081c <__sysv_signal@plt>
   1152c:	mov	sp, fp
   11530:	pop	{fp, pc}
   11534:	andeq	r0, r0, ip, lsl r0
   11538:	andeq	r0, r0, ip, lsr #32
   1153c:	push	{fp, lr}
   11540:	mov	fp, sp
   11544:	sub	sp, sp, #8
   11548:	ldr	r1, [pc, #52]	; 11584 <error@@Base+0x1c8>
   1154c:	add	r1, pc, r1
   11550:	str	r0, [sp, #4]
   11554:	ldrsb	r0, [r1]
   11558:	cmp	r0, #0
   1155c:	beq	11568 <error@@Base+0x1ac>
   11560:	mov	sp, fp
   11564:	pop	{fp, pc}
   11568:	ldr	r0, [pc, #24]	; 11588 <error@@Base+0x1cc>
   1156c:	add	r0, pc, r0
   11570:	ldr	r1, [pc, #20]	; 1158c <error@@Base+0x1d0>
   11574:	add	r1, pc, r1
   11578:	movw	r2, #1
   1157c:	strb	r2, [r1]
   11580:	bl	113bc <error@@Base>
   11584:	muleq	r1, ip, fp
   11588:	strdeq	r1, [r0], -ip
   1158c:	andeq	r2, r1, r4, ror fp
   11590:	push	{fp, lr}
   11594:	mov	fp, sp
   11598:	sub	sp, sp, #8
   1159c:	ldr	r1, [pc, #96]	; 11604 <error@@Base+0x248>
   115a0:	ldr	r1, [pc, r1]
   115a4:	str	r0, [sp, #4]
   115a8:	ldr	r0, [r1]
   115ac:	movw	r1, #0
   115b0:	cmp	r0, r1
   115b4:	beq	115cc <error@@Base+0x210>
   115b8:	ldr	r0, [pc, #84]	; 11614 <error@@Base+0x258>
   115bc:	ldr	r0, [pc, r0]
   115c0:	ldr	r0, [r0]
   115c4:	blx	r0
   115c8:	b	11600 <error@@Base+0x244>
   115cc:	ldr	r0, [pc, #52]	; 11608 <error@@Base+0x24c>
   115d0:	add	r1, pc, r0
   115d4:	ldr	r0, [pc, #48]	; 1160c <error@@Base+0x250>
   115d8:	ldr	r0, [pc, r0]
   115dc:	ldr	r2, [pc, #44]	; 11610 <error@@Base+0x254>
   115e0:	ldr	r2, [pc, r2]
   115e4:	ldr	r2, [r2]
   115e8:	ldr	r0, [r0]
   115ec:	ldr	r3, [sp, #4]
   115f0:	str	r0, [sp]
   115f4:	mov	r0, r2
   115f8:	ldr	r2, [sp]
   115fc:	bl	1084c <fprintf@plt>
   11600:	bl	11360 <abort@plt+0xab4>
   11604:	andeq	r2, r1, r8, asr #21
   11608:	andeq	r1, r0, sp, lsr #25
   1160c:	andeq	r2, r1, r0, asr #21
   11610:	andeq	r2, r1, r0, lsr #21
   11614:	andeq	r2, r1, ip, lsr #21
   11618:	push	{fp, lr}
   1161c:	mov	fp, sp
   11620:	sub	sp, sp, #32
   11624:	str	r0, [fp, #-8]
   11628:	str	r1, [fp, #-12]
   1162c:	str	r2, [sp, #16]
   11630:	ldr	r0, [sp, #16]
   11634:	movw	r1, #0
   11638:	cmp	r0, r1
   1163c:	bne	11644 <error@@Base+0x288>
   11640:	b	11858 <error@@Base+0x49c>
   11644:	movw	r0, #0
   11648:	strh	r0, [sp, #14]
   1164c:	ldr	r0, [sp, #16]
   11650:	ldrsh	r1, [sp, #14]
   11654:	movw	r2, #12
   11658:	mul	r1, r1, r2
   1165c:	add	r0, r0, r1
   11660:	ldrb	r0, [r0]
   11664:	cmp	r0, #0
   11668:	movw	r0, #0
   1166c:	str	r0, [sp, #8]
   11670:	beq	116a4 <error@@Base+0x2e8>
   11674:	ldr	r0, [fp, #-8]
   11678:	ldrb	r0, [r0, #1]
   1167c:	ldr	r1, [sp, #16]
   11680:	ldrsh	r2, [sp, #14]
   11684:	movw	r3, #12
   11688:	mul	r2, r2, r3
   1168c:	add	r1, r1, r2
   11690:	ldrb	r1, [r1]
   11694:	cmp	r0, r1
   11698:	movw	r0, #0
   1169c:	movne	r0, #1
   116a0:	str	r0, [sp, #8]
   116a4:	ldr	r0, [sp, #8]
   116a8:	tst	r0, #1
   116ac:	beq	116c8 <error@@Base+0x30c>
   116b0:	b	116b4 <error@@Base+0x2f8>
   116b4:	ldrh	r0, [sp, #14]
   116b8:	movw	r1, #1
   116bc:	add	r0, r0, r1
   116c0:	strh	r0, [sp, #14]
   116c4:	b	1164c <error@@Base+0x290>
   116c8:	ldr	r0, [sp, #16]
   116cc:	ldrsh	r1, [sp, #14]
   116d0:	movw	r2, #12
   116d4:	mul	r1, r1, r2
   116d8:	add	r0, r0, r1
   116dc:	ldrsb	r0, [r0]
   116e0:	cmp	r0, #0
   116e4:	bne	116ec <error@@Base+0x330>
   116e8:	b	11858 <error@@Base+0x49c>
   116ec:	ldr	r0, [sp, #16]
   116f0:	ldrsh	r1, [sp, #14]
   116f4:	movw	r2, #12
   116f8:	mul	r1, r1, r2
   116fc:	add	r0, r0, r1
   11700:	ldr	r0, [r0, #4]
   11704:	movw	r1, #0
   11708:	cmp	r0, r1
   1170c:	beq	117cc <error@@Base+0x410>
   11710:	ldr	r0, [fp, #-8]
   11714:	ldrb	r0, [r0, #2]
   11718:	cmp	r0, #0
   1171c:	bne	11730 <error@@Base+0x374>
   11720:	ldr	r0, [fp, #-12]
   11724:	movw	r1, #0
   11728:	cmp	r0, r1
   1172c:	beq	117cc <error@@Base+0x410>
   11730:	ldr	r0, [sp, #16]
   11734:	ldrsh	r1, [sp, #14]
   11738:	movw	r2, #12
   1173c:	mul	r1, r1, r2
   11740:	add	r0, r0, r1
   11744:	ldr	r0, [r0, #4]
   11748:	ldr	r0, [r0]
   1174c:	movw	r1, #0
   11750:	cmp	r0, r1
   11754:	beq	1175c <error@@Base+0x3a0>
   11758:	b	11868 <error@@Base+0x4ac>
   1175c:	ldr	r0, [fp, #-8]
   11760:	ldrb	r0, [r0, #2]
   11764:	cmp	r0, #0
   11768:	beq	1177c <error@@Base+0x3c0>
   1176c:	ldr	r0, [fp, #-8]
   11770:	add	r0, r0, #2
   11774:	str	r0, [sp, #4]
   11778:	b	11784 <error@@Base+0x3c8>
   1177c:	ldr	r0, [fp, #-12]
   11780:	str	r0, [sp, #4]
   11784:	ldr	r0, [sp, #4]
   11788:	ldr	r1, [sp, #16]
   1178c:	ldrsh	r2, [sp, #14]
   11790:	movw	r3, #12
   11794:	mul	r2, r2, r3
   11798:	add	r1, r1, r2
   1179c:	ldr	r1, [r1, #4]
   117a0:	str	r0, [r1]
   117a4:	ldr	r0, [fp, #-8]
   117a8:	ldrb	r0, [r0, #2]
   117ac:	cmp	r0, #0
   117b0:	movw	r0, #0
   117b4:	movne	r0, #1
   117b8:	tst	r0, #1
   117bc:	movw	r0, #0
   117c0:	moveq	r0, #1
   117c4:	strb	r0, [fp, #-1]
   117c8:	b	11878 <error@@Base+0x4bc>
   117cc:	ldr	r0, [sp, #16]
   117d0:	ldrsh	r1, [sp, #14]
   117d4:	movw	r2, #12
   117d8:	mul	r1, r1, r2
   117dc:	add	r0, r0, r1
   117e0:	ldr	r0, [r0, #8]
   117e4:	movw	r1, #0
   117e8:	cmp	r0, r1
   117ec:	beq	11854 <error@@Base+0x498>
   117f0:	ldr	r0, [fp, #-8]
   117f4:	ldrsb	r0, [r0, #2]
   117f8:	cmp	r0, #0
   117fc:	bne	11854 <error@@Base+0x498>
   11800:	ldr	r0, [sp, #16]
   11804:	ldrsh	r1, [sp, #14]
   11808:	movw	r2, #12
   1180c:	mul	r1, r1, r2
   11810:	add	r0, r0, r1
   11814:	ldr	r0, [r0, #8]
   11818:	ldrsb	r0, [r0]
   1181c:	cmp	r0, #0
   11820:	beq	11828 <error@@Base+0x46c>
   11824:	b	11868 <error@@Base+0x4ac>
   11828:	ldr	r0, [sp, #16]
   1182c:	ldrsh	r1, [sp, #14]
   11830:	movw	r2, #12
   11834:	mul	r1, r1, r2
   11838:	add	r0, r0, r1
   1183c:	ldr	r0, [r0, #8]
   11840:	movw	r1, #1
   11844:	strb	r1, [r0]
   11848:	movw	r0, #0
   1184c:	strb	r0, [fp, #-1]
   11850:	b	11878 <error@@Base+0x4bc>
   11854:	b	11858 <error@@Base+0x49c>
   11858:	ldr	r0, [pc, #36]	; 11884 <error@@Base+0x4c8>
   1185c:	add	r0, pc, r0
   11860:	ldr	r1, [fp, #-8]
   11864:	bl	1141c <error@@Base+0x60>
   11868:	ldr	r0, [pc, #24]	; 11888 <error@@Base+0x4cc>
   1186c:	add	r0, pc, r0
   11870:	ldr	r1, [fp, #-8]
   11874:	bl	1141c <error@@Base+0x60>
   11878:	ldrb	r0, [fp, #-1]
   1187c:	mov	sp, fp
   11880:	pop	{fp, pc}
   11884:	andeq	r1, r0, r0, lsr sl
   11888:	andeq	r1, r0, pc, lsr #20
   1188c:	push	{fp, lr}
   11890:	mov	fp, sp
   11894:	sub	sp, sp, #16
   11898:	movw	r0, #1
   1189c:	strh	r0, [fp, #-2]
   118a0:	ldr	r0, [pc, #88]	; 11900 <error@@Base+0x544>
   118a4:	add	r0, pc, r0
   118a8:	ldrsh	r1, [fp, #-2]
   118ac:	ldrsh	r0, [r0]
   118b0:	cmp	r1, r0
   118b4:	bgt	118f8 <error@@Base+0x53c>
   118b8:	ldrsh	r0, [fp, #-2]
   118bc:	bl	11008 <abort@plt+0x75c>
   118c0:	ldr	r1, [pc, #60]	; 11904 <error@@Base+0x548>
   118c4:	ldr	r1, [pc, r1]
   118c8:	str	r0, [sp, #8]
   118cc:	ldr	r0, [sp, #8]
   118d0:	blx	r1
   118d4:	ldr	r1, [sp, #8]
   118d8:	str	r0, [sp, #4]
   118dc:	mov	r0, r1
   118e0:	bl	107e0 <free@plt>
   118e4:	ldrh	r0, [fp, #-2]
   118e8:	movw	r1, #1
   118ec:	add	r0, r0, r1
   118f0:	strh	r0, [fp, #-2]
   118f4:	b	118a0 <error@@Base+0x4e4>
   118f8:	mov	sp, fp
   118fc:	pop	{fp, pc}
   11900:	andeq	r2, r1, r2, asr #16
   11904:			; <UNDEFINED> instruction: 0x000127b0
   11908:	sub	sp, sp, #12
   1190c:	str	r0, [sp, #8]
   11910:	str	r1, [sp, #4]
   11914:	str	r2, [sp]
   11918:	ldr	r0, [sp, #4]
   1191c:	ldr	r1, [sp, #8]
   11920:	ldr	r2, [r1]
   11924:	add	r0, r2, r0
   11928:	str	r0, [r1]
   1192c:	ldr	r0, [sp]
   11930:	ldr	r1, [sp, #8]
   11934:	ldr	r2, [r1, #4]
   11938:	add	r0, r2, r0
   1193c:	str	r0, [r1, #4]
   11940:	add	sp, sp, #12
   11944:	bx	lr
   11948:	push	{fp, lr}
   1194c:	mov	fp, sp
   11950:	sub	sp, sp, #32
   11954:	ldr	ip, [pc, #160]	; 119fc <error@@Base+0x640>
   11958:	ldr	ip, [pc, ip]
   1195c:	str	r0, [fp, #-4]
   11960:	str	r1, [fp, #-8]
   11964:	str	r2, [fp, #-12]
   11968:	str	r3, [sp, #16]
   1196c:	ldr	r0, [fp, #-4]
   11970:	ldr	r1, [fp, #-8]
   11974:	blx	ip
   11978:	str	r0, [sp, #12]
   1197c:	ldr	r0, [sp, #12]
   11980:	movw	r1, #0
   11984:	cmp	r0, r1
   11988:	bne	119e0 <error@@Base+0x624>
   1198c:	ldr	r0, [pc, #112]	; 11a04 <error@@Base+0x648>
   11990:	ldr	r0, [pc, r0]
   11994:	movw	r1, #1
   11998:	str	r0, [sp, #8]
   1199c:	mov	r0, r1
   119a0:	movw	r1, #20
   119a4:	ldr	r2, [sp, #8]
   119a8:	blx	r2
   119ac:	str	r0, [sp, #12]
   119b0:	ldr	r0, [fp, #-8]
   119b4:	bl	107f8 <strdup@plt>
   119b8:	ldr	r1, [pc, #64]	; 11a00 <error@@Base+0x644>
   119bc:	ldr	r1, [pc, r1]
   119c0:	ldr	r2, [sp, #12]
   119c4:	str	r0, [r2, #8]
   119c8:	ldr	r0, [fp, #-4]
   119cc:	ldr	r2, [sp, #12]
   119d0:	str	r1, [sp, #4]
   119d4:	mov	r1, r2
   119d8:	ldr	r2, [sp, #4]
   119dc:	blx	r2
   119e0:	ldr	r0, [sp, #12]
   119e4:	add	r0, r0, #12
   119e8:	ldr	r1, [fp, #-12]
   119ec:	ldr	r2, [sp, #16]
   119f0:	bl	11908 <error@@Base+0x54c>
   119f4:	mov	sp, fp
   119f8:	pop	{fp, pc}
   119fc:	andeq	r2, r1, r8, lsr r7
   11a00:	andeq	r2, r1, r8, lsr #13
   11a04:	andeq	r2, r1, r4, lsr r7
   11a08:	push	{fp, lr}
   11a0c:	mov	fp, sp
   11a10:	sub	sp, sp, #40	; 0x28
   11a14:	ldr	r2, [pc, #504]	; 11c14 <error@@Base+0x858>
   11a18:	add	r2, pc, r2
   11a1c:	ldr	r3, [pc, #500]	; 11c18 <error@@Base+0x85c>
   11a20:	ldr	r3, [pc, r3]
   11a24:	str	r0, [fp, #-4]
   11a28:	str	r1, [fp, #-8]
   11a2c:	ldr	r0, [fp, #-8]
   11a30:	mov	r1, r2
   11a34:	blx	r3
   11a38:	str	r0, [fp, #-12]
   11a3c:	ldr	r0, [fp, #-12]
   11a40:	bl	11c3c <error@@Base+0x880>
   11a44:	and	r0, r0, #255	; 0xff
   11a48:	cmp	r0, #0
   11a4c:	beq	11ba0 <error@@Base+0x7e4>
   11a50:	ldr	r0, [pc, #452]	; 11c1c <error@@Base+0x860>
   11a54:	add	r0, pc, r0
   11a58:	ldr	r1, [pc, #448]	; 11c20 <error@@Base+0x864>
   11a5c:	add	r1, pc, r1
   11a60:	movw	r2, #45	; 0x2d
   11a64:	bl	108a0 <strncmp@plt>
   11a68:	cmp	r0, #0
   11a6c:	bne	11ba0 <error@@Base+0x7e4>
   11a70:	ldr	r0, [fp, #-12]
   11a74:	bl	11c3c <error@@Base+0x880>
   11a78:	and	r0, r0, #255	; 0xff
   11a7c:	cmp	r0, #0
   11a80:	beq	11ba0 <error@@Base+0x7e4>
   11a84:	ldr	r0, [pc, #424]	; 11c34 <error@@Base+0x878>
   11a88:	add	r0, pc, r0
   11a8c:	ldr	r1, [pc, #420]	; 11c38 <error@@Base+0x87c>
   11a90:	add	r1, pc, r1
   11a94:	bl	107c8 <strcmp@plt>
   11a98:	cmp	r0, #0
   11a9c:	bne	11ba0 <error@@Base+0x7e4>
   11aa0:	ldr	r0, [fp, #-12]
   11aa4:	sub	r1, fp, #16
   11aa8:	bl	11c90 <error@@Base+0x8d4>
   11aac:	and	r0, r0, #255	; 0xff
   11ab0:	cmp	r0, #0
   11ab4:	beq	11ba0 <error@@Base+0x7e4>
   11ab8:	ldr	r0, [fp, #-12]
   11abc:	add	r1, sp, #20
   11ac0:	bl	11c90 <error@@Base+0x8d4>
   11ac4:	and	r0, r0, #255	; 0xff
   11ac8:	cmp	r0, #0
   11acc:	beq	11ba0 <error@@Base+0x7e4>
   11ad0:	ldr	r0, [fp, #-12]
   11ad4:	bl	11c3c <error@@Base+0x880>
   11ad8:	and	r0, r0, #255	; 0xff
   11adc:	cmp	r0, #0
   11ae0:	beq	11ba0 <error@@Base+0x7e4>
   11ae4:	ldr	r0, [fp, #-12]
   11ae8:	bl	11c3c <error@@Base+0x880>
   11aec:	and	r0, r0, #255	; 0xff
   11af0:	cmp	r0, #0
   11af4:	beq	11ba0 <error@@Base+0x7e4>
   11af8:	ldr	r0, [fp, #-4]
   11afc:	ldr	r1, [fp, #-16]
   11b00:	ldr	r2, [sp, #20]
   11b04:	bl	11908 <error@@Base+0x54c>
   11b08:	ldr	r0, [fp, #-12]
   11b0c:	ldr	r1, [fp, #-4]
   11b10:	add	r1, r1, #8
   11b14:	bl	11d0c <error@@Base+0x950>
   11b18:	str	r0, [sp, #16]
   11b1c:	ldr	r0, [fp, #-12]
   11b20:	ldr	r1, [fp, #-4]
   11b24:	add	r1, r1, #416	; 0x1a0
   11b28:	bl	11d0c <error@@Base+0x950>
   11b2c:	str	r0, [sp, #12]
   11b30:	ldr	r0, [fp, #-12]
   11b34:	ldr	r1, [fp, #-4]
   11b38:	add	r1, r1, #824	; 0x338
   11b3c:	bl	11d0c <error@@Base+0x950>
   11b40:	ldr	r1, [fp, #-16]
   11b44:	cmp	r1, #0
   11b48:	ble	11b9c <error@@Base+0x7e0>
   11b4c:	ldr	r0, [fp, #-12]
   11b50:	ldr	r1, [fp, #-4]
   11b54:	add	r1, r1, #920	; 0x398
   11b58:	bl	11d0c <error@@Base+0x950>
   11b5c:	ldr	r1, [sp, #16]
   11b60:	cmp	r1, #0
   11b64:	ble	11b78 <error@@Base+0x7bc>
   11b68:	ldr	r0, [fp, #-12]
   11b6c:	ldr	r1, [fp, #-4]
   11b70:	add	r1, r1, #992	; 0x3e0
   11b74:	bl	11e00 <error@@Base+0xa44>
   11b78:	ldr	r0, [sp, #12]
   11b7c:	cmp	r0, #0
   11b80:	ble	11b98 <error@@Base+0x7dc>
   11b84:	ldr	r0, [fp, #-12]
   11b88:	ldr	r1, [fp, #-4]
   11b8c:	movw	r2, #9048	; 0x2358
   11b90:	add	r1, r1, r2
   11b94:	bl	11e00 <error@@Base+0xa44>
   11b98:	b	11b9c <error@@Base+0x7e0>
   11b9c:	b	11bf0 <error@@Base+0x834>
   11ba0:	ldr	r0, [fp, #-8]
   11ba4:	movw	r1, #0
   11ba8:	cmp	r0, r1
   11bac:	beq	11bbc <error@@Base+0x800>
   11bb0:	ldr	r0, [fp, #-8]
   11bb4:	str	r0, [sp, #8]
   11bb8:	b	11bcc <error@@Base+0x810>
   11bbc:	ldr	r0, [pc, #96]	; 11c24 <error@@Base+0x868>
   11bc0:	add	r0, pc, r0
   11bc4:	str	r0, [sp, #8]
   11bc8:	b	11bcc <error@@Base+0x810>
   11bcc:	ldr	r0, [sp, #8]
   11bd0:	ldr	r1, [pc, #80]	; 11c28 <error@@Base+0x86c>
   11bd4:	add	r1, pc, r1
   11bd8:	ldr	r2, [pc, #76]	; 11c2c <error@@Base+0x870>
   11bdc:	ldr	r2, [pc, r2]
   11be0:	str	r0, [sp, #4]
   11be4:	mov	r0, r1
   11be8:	ldr	r1, [sp, #4]
   11bec:	blx	r2
   11bf0:	ldr	r0, [pc, #56]	; 11c30 <error@@Base+0x874>
   11bf4:	ldr	r0, [pc, r0]
   11bf8:	ldr	r1, [fp, #-12]
   11bfc:	str	r0, [sp]
   11c00:	mov	r0, r1
   11c04:	ldr	r1, [sp]
   11c08:	blx	r1
   11c0c:	mov	sp, fp
   11c10:	pop	{fp, pc}
   11c14:	muleq	r0, r4, r8
   11c18:	andeq	r2, r1, ip, asr #12
   11c1c:	muleq	r1, r5, r6
   11c20:	andeq	r1, r0, r2, asr r8
   11c24:	andeq	r1, r0, r0, ror #14
   11c28:	andeq	r1, r0, sl, lsr r7
   11c2c:	andeq	r2, r1, ip, ror #9
   11c30:	andeq	r2, r1, r4, ror #8
   11c34:	andeq	r2, r1, r1, ror #12
   11c38:	andeq	r1, r0, lr, asr #16
   11c3c:	push	{fp, lr}
   11c40:	mov	fp, sp
   11c44:	sub	sp, sp, #8
   11c48:	ldr	r1, [pc, #60]	; 11c8c <error@@Base+0x8d0>
   11c4c:	add	r1, pc, r1
   11c50:	str	r0, [sp, #4]
   11c54:	ldr	r2, [sp, #4]
   11c58:	mov	r0, r1
   11c5c:	movw	r1, #99	; 0x63
   11c60:	bl	107ec <fgets@plt>
   11c64:	movw	r1, #0
   11c68:	cmp	r0, r1
   11c6c:	movw	r0, #0
   11c70:	movne	r0, #1
   11c74:	tst	r0, #1
   11c78:	movw	r0, #1
   11c7c:	moveq	r0, #0
   11c80:	and	r0, r0, #255	; 0xff
   11c84:	mov	sp, fp
   11c88:	pop	{fp, pc}
   11c8c:	muleq	r1, sp, r4
   11c90:	push	{fp, lr}
   11c94:	mov	fp, sp
   11c98:	sub	sp, sp, #16
   11c9c:	str	r0, [fp, #-4]
   11ca0:	str	r1, [sp, #8]
   11ca4:	ldr	r0, [fp, #-4]
   11ca8:	bl	11c3c <error@@Base+0x880>
   11cac:	and	r0, r0, #255	; 0xff
   11cb0:	cmp	r0, #0
   11cb4:	movw	r0, #0
   11cb8:	str	r0, [sp, #4]
   11cbc:	beq	11ce8 <error@@Base+0x92c>
   11cc0:	ldr	r0, [pc, #60]	; 11d04 <error@@Base+0x948>
   11cc4:	add	r0, pc, r0
   11cc8:	ldr	r1, [pc, #56]	; 11d08 <error@@Base+0x94c>
   11ccc:	add	r1, pc, r1
   11cd0:	ldr	r2, [sp, #8]
   11cd4:	bl	10858 <__isoc99_sscanf@plt>
   11cd8:	cmp	r0, #1
   11cdc:	movw	r0, #0
   11ce0:	moveq	r0, #1
   11ce4:	str	r0, [sp, #4]
   11ce8:	ldr	r0, [sp, #4]
   11cec:	tst	r0, #1
   11cf0:	movw	r0, #1
   11cf4:	moveq	r0, #0
   11cf8:	and	r0, r0, #255	; 0xff
   11cfc:	mov	sp, fp
   11d00:	pop	{fp, pc}
   11d04:	andeq	r2, r1, r5, lsr #8
   11d08:	andeq	r1, r0, r5, asr #13
   11d0c:	push	{fp, lr}
   11d10:	mov	fp, sp
   11d14:	sub	sp, sp, #24
   11d18:	str	r0, [fp, #-4]
   11d1c:	str	r1, [fp, #-8]
   11d20:	movw	r0, #0
   11d24:	str	r0, [sp]
   11d28:	ldr	r0, [fp, #-4]
   11d2c:	bl	11c3c <error@@Base+0x880>
   11d30:	and	r0, r0, #255	; 0xff
   11d34:	cmp	r0, #0
   11d38:	beq	11de8 <error@@Base+0xa2c>
   11d3c:	ldr	r0, [fp, #-4]
   11d40:	bl	11c3c <error@@Base+0x880>
   11d44:	and	r0, r0, #255	; 0xff
   11d48:	cmp	r0, #0
   11d4c:	beq	11de8 <error@@Base+0xa2c>
   11d50:	b	11d54 <error@@Base+0x998>
   11d54:	ldr	r0, [fp, #-4]
   11d58:	add	r1, sp, #12
   11d5c:	add	r2, sp, #8
   11d60:	bl	12498 <error@@Base+0x10dc>
   11d64:	sxtb	r0, r0
   11d68:	cmp	r0, #0
   11d6c:	beq	11de4 <error@@Base+0xa28>
   11d70:	ldr	r0, [pc, #124]	; 11df4 <error@@Base+0xa38>
   11d74:	add	r0, pc, r0
   11d78:	add	r0, r0, #29
   11d7c:	bl	10888 <atoi@plt>
   11d80:	str	r0, [sp, #4]
   11d84:	ldr	r0, [sp, #4]
   11d88:	cmp	r0, #0
   11d8c:	bne	11dc8 <error@@Base+0xa0c>
   11d90:	ldr	r0, [pc, #96]	; 11df8 <error@@Base+0xa3c>
   11d94:	add	r0, pc, r0
   11d98:	add	r0, r0, #29
   11d9c:	ldr	r1, [pc, #88]	; 11dfc <error@@Base+0xa40>
   11da0:	add	r1, pc, r1
   11da4:	bl	107c8 <strcmp@plt>
   11da8:	cmp	r0, #0
   11dac:	bne	11dbc <error@@Base+0xa00>
   11db0:	ldr	r0, [sp, #12]
   11db4:	str	r0, [sp]
   11db8:	b	11dc4 <error@@Base+0xa08>
   11dbc:	movw	r0, #11
   11dc0:	str	r0, [sp, #4]
   11dc4:	b	11dc8 <error@@Base+0xa0c>
   11dc8:	ldr	r0, [fp, #-8]
   11dcc:	ldr	r1, [sp, #4]
   11dd0:	add	r0, r0, r1, lsl #3
   11dd4:	ldr	r1, [sp, #12]
   11dd8:	ldr	r2, [sp, #8]
   11ddc:	bl	11908 <error@@Base+0x54c>
   11de0:	b	11d54 <error@@Base+0x998>
   11de4:	b	11de8 <error@@Base+0xa2c>
   11de8:	ldr	r0, [sp]
   11dec:	mov	sp, fp
   11df0:	pop	{fp, pc}
   11df4:	andeq	r2, r1, r5, ror r3
   11df8:	andeq	r2, r1, r5, asr r3
   11dfc:	andeq	r1, r0, r5, ror #11
   11e00:	push	{fp, lr}
   11e04:	mov	fp, sp
   11e08:	sub	sp, sp, #24
   11e0c:	str	r0, [fp, #-4]
   11e10:	str	r1, [fp, #-8]
   11e14:	ldr	r0, [fp, #-4]
   11e18:	bl	11c3c <error@@Base+0x880>
   11e1c:	and	r0, r0, #255	; 0xff
   11e20:	cmp	r0, #0
   11e24:	beq	11eb0 <error@@Base+0xaf4>
   11e28:	ldr	r0, [fp, #-4]
   11e2c:	bl	11c3c <error@@Base+0x880>
   11e30:	and	r0, r0, #255	; 0xff
   11e34:	cmp	r0, #0
   11e38:	beq	11eb0 <error@@Base+0xaf4>
   11e3c:	b	11e40 <error@@Base+0xa84>
   11e40:	ldr	r0, [fp, #-4]
   11e44:	add	r1, sp, #12
   11e48:	add	r2, sp, #8
   11e4c:	bl	12498 <error@@Base+0x10dc>
   11e50:	sxtb	r0, r0
   11e54:	cmp	r0, #0
   11e58:	beq	11eac <error@@Base+0xaf0>
   11e5c:	ldr	r0, [pc, #84]	; 11eb8 <error@@Base+0xafc>
   11e60:	add	r0, pc, r0
   11e64:	add	r1, r0, #29
   11e68:	ldr	r2, [pc, #76]	; 11ebc <error@@Base+0xb00>
   11e6c:	add	r2, pc, r2
   11e70:	str	r0, [sp, #4]
   11e74:	mov	r0, r2
   11e78:	str	r1, [sp]
   11e7c:	bl	10840 <strlen@plt>
   11e80:	sub	r0, r0, #1
   11e84:	ldr	r1, [sp, #4]
   11e88:	add	r0, r1, r0
   11e8c:	movw	r2, #0
   11e90:	strb	r2, [r0]
   11e94:	ldr	r0, [fp, #-8]
   11e98:	ldr	r2, [sp, #12]
   11e9c:	ldr	r3, [sp, #8]
   11ea0:	ldr	r1, [sp]
   11ea4:	bl	11948 <error@@Base+0x58c>
   11ea8:	b	11e40 <error@@Base+0xa84>
   11eac:	b	11eb0 <error@@Base+0xaf4>
   11eb0:	mov	sp, fp
   11eb4:	pop	{fp, pc}
   11eb8:	andeq	r2, r1, r9, lsl #5
   11ebc:	andeq	r2, r1, sp, ror r2
   11ec0:	push	{fp, lr}
   11ec4:	mov	fp, sp
   11ec8:	sub	sp, sp, #40	; 0x28
   11ecc:	ldr	r2, [pc, #532]	; 120e8 <error@@Base+0xd2c>
   11ed0:	add	r2, pc, r2
   11ed4:	ldr	r3, [pc, #528]	; 120ec <error@@Base+0xd30>
   11ed8:	ldr	r3, [pc, r3]
   11edc:	str	r0, [fp, #-4]
   11ee0:	str	r1, [fp, #-8]
   11ee4:	ldr	r0, [fp, #-8]
   11ee8:	mov	r1, r2
   11eec:	blx	r3
   11ef0:	ldr	r1, [pc, #484]	; 120dc <error@@Base+0xd20>
   11ef4:	add	r1, pc, r1
   11ef8:	ldr	r2, [pc, #480]	; 120e0 <error@@Base+0xd24>
   11efc:	add	r2, pc, r2
   11f00:	ldr	r3, [pc, #476]	; 120e4 <error@@Base+0xd28>
   11f04:	add	r3, pc, r3
   11f08:	str	r0, [fp, #-12]
   11f0c:	ldr	r0, [fp, #-12]
   11f10:	bl	1084c <fprintf@plt>
   11f14:	ldr	r1, [pc, #444]	; 120d8 <error@@Base+0xd1c>
   11f18:	add	r1, pc, r1
   11f1c:	ldr	r2, [fp, #-12]
   11f20:	ldr	r3, [fp, #-4]
   11f24:	ldr	r3, [r3]
   11f28:	str	r0, [fp, #-16]
   11f2c:	mov	r0, r2
   11f30:	mov	r2, r3
   11f34:	bl	1084c <fprintf@plt>
   11f38:	ldr	r1, [pc, #404]	; 120d4 <error@@Base+0xd18>
   11f3c:	add	r1, pc, r1
   11f40:	ldr	r2, [fp, #-12]
   11f44:	ldr	r3, [fp, #-4]
   11f48:	ldr	r3, [r3, #4]
   11f4c:	str	r0, [sp, #20]
   11f50:	mov	r0, r2
   11f54:	mov	r2, r3
   11f58:	bl	1084c <fprintf@plt>
   11f5c:	ldr	r1, [fp, #-12]
   11f60:	ldr	r2, [fp, #-4]
   11f64:	str	r0, [sp, #16]
   11f68:	mov	r0, r1
   11f6c:	mov	r1, r2
   11f70:	bl	12100 <error@@Base+0xd44>
   11f74:	ldr	r0, [pc, #340]	; 120d0 <error@@Base+0xd14>
   11f78:	add	r0, pc, r0
   11f7c:	ldr	r1, [fp, #-12]
   11f80:	bl	10894 <fputs@plt>
   11f84:	ldr	r1, [pc, #320]	; 120cc <error@@Base+0xd10>
   11f88:	add	r3, pc, r1
   11f8c:	ldr	r1, [fp, #-12]
   11f90:	ldr	r2, [fp, #-4]
   11f94:	add	r2, r2, #8
   11f98:	str	r0, [sp, #12]
   11f9c:	mov	r0, r1
   11fa0:	mov	r1, r2
   11fa4:	movw	r2, #50	; 0x32
   11fa8:	movw	ip, #0
   11fac:	str	ip, [sp]
   11fb0:	movw	ip, #1
   11fb4:	str	ip, [sp, #4]
   11fb8:	bl	121a0 <error@@Base+0xde4>
   11fbc:	ldr	r0, [pc, #260]	; 120c8 <error@@Base+0xd0c>
   11fc0:	add	r3, pc, r0
   11fc4:	ldr	r0, [fp, #-12]
   11fc8:	ldr	r1, [fp, #-4]
   11fcc:	add	r1, r1, #416	; 0x1a0
   11fd0:	movw	r2, #50	; 0x32
   11fd4:	movw	ip, #0
   11fd8:	str	ip, [sp]
   11fdc:	movw	ip, #1
   11fe0:	str	ip, [sp, #4]
   11fe4:	bl	121a0 <error@@Base+0xde4>
   11fe8:	ldr	r0, [pc, #212]	; 120c4 <error@@Base+0xd08>
   11fec:	add	r3, pc, r0
   11ff0:	ldr	r0, [fp, #-12]
   11ff4:	ldr	r1, [fp, #-4]
   11ff8:	add	r1, r1, #824	; 0x338
   11ffc:	movw	r2, #10
   12000:	movw	ip, #1
   12004:	str	ip, [sp]
   12008:	str	ip, [sp, #4]
   1200c:	bl	121a0 <error@@Base+0xde4>
   12010:	ldr	r0, [fp, #-4]
   12014:	ldr	r0, [r0]
   12018:	cmp	r0, #0
   1201c:	ble	120a0 <error@@Base+0xce4>
   12020:	ldr	r0, [pc, #200]	; 120f0 <error@@Base+0xd34>
   12024:	add	r3, pc, r0
   12028:	ldr	r0, [fp, #-12]
   1202c:	ldr	r1, [fp, #-4]
   12030:	add	r1, r1, #920	; 0x398
   12034:	movw	r2, #8
   12038:	movw	ip, #0
   1203c:	str	ip, [sp]
   12040:	str	ip, [sp, #4]
   12044:	bl	121a0 <error@@Base+0xde4>
   12048:	ldr	r0, [fp, #-4]
   1204c:	ldr	r0, [r0, #8]
   12050:	cmp	r0, #0
   12054:	ble	12070 <error@@Base+0xcb4>
   12058:	ldr	r0, [pc, #148]	; 120f4 <error@@Base+0xd38>
   1205c:	add	r2, pc, r0
   12060:	ldr	r0, [fp, #-12]
   12064:	ldr	r1, [fp, #-4]
   12068:	add	r1, r1, #992	; 0x3e0
   1206c:	bl	12344 <error@@Base+0xf88>
   12070:	ldr	r0, [fp, #-4]
   12074:	ldr	r0, [r0, #416]	; 0x1a0
   12078:	cmp	r0, #0
   1207c:	ble	1209c <error@@Base+0xce0>
   12080:	ldr	r0, [pc, #112]	; 120f8 <error@@Base+0xd3c>
   12084:	add	r2, pc, r0
   12088:	ldr	r0, [fp, #-12]
   1208c:	ldr	r1, [fp, #-4]
   12090:	movw	r3, #9048	; 0x2358
   12094:	add	r1, r1, r3
   12098:	bl	12344 <error@@Base+0xf88>
   1209c:	b	120a0 <error@@Base+0xce4>
   120a0:	ldr	r0, [pc, #84]	; 120fc <error@@Base+0xd40>
   120a4:	ldr	r0, [pc, r0]
   120a8:	ldr	r1, [fp, #-12]
   120ac:	str	r0, [sp, #8]
   120b0:	mov	r0, r1
   120b4:	ldr	r1, [sp, #8]
   120b8:	blx	r1
   120bc:	mov	sp, fp
   120c0:	pop	{fp, pc}
   120c4:	andeq	r1, r0, sl, ror r3
   120c8:	andeq	r1, r0, pc, lsr #7
   120cc:	ldrdeq	r1, [r0], -r4
   120d0:	ldrdeq	r1, [r0], -r7
   120d4:	strdeq	r1, [r0], -sp
   120d8:	andeq	r1, r0, r3, lsl r4
   120dc:	andeq	r1, r0, r2, lsr r4
   120e0:			; <UNDEFINED> instruction: 0x000013b2
   120e4:	ldrdeq	r1, [r0], -sl
   120e8:	andeq	r1, r0, r4, lsr #6
   120ec:	muleq	r1, r4, r1
   120f0:	andeq	r1, r0, r9, asr r3
   120f4:	andeq	r1, r0, r0, lsl #6
   120f8:	andeq	r1, r0, fp, ror #5
   120fc:			; <UNDEFINED> instruction: 0x00011fb4
   12100:	push	{fp, lr}
   12104:	mov	fp, sp
   12108:	sub	sp, sp, #8
   1210c:	str	r0, [sp, #4]
   12110:	str	r1, [sp]
   12114:	ldr	r0, [sp]
   12118:	ldr	r0, [r0]
   1211c:	cmp	r0, #0
   12120:	bne	12138 <error@@Base+0xd7c>
   12124:	ldr	r0, [pc, #112]	; 1219c <error@@Base+0xde0>
   12128:	add	r0, pc, r0
   1212c:	ldr	r1, [sp, #4]
   12130:	bl	10894 <fputs@plt>
   12134:	b	12184 <error@@Base+0xdc8>
   12138:	ldr	r0, [pc, #88]	; 12198 <error@@Base+0xddc>
   1213c:	add	r1, pc, r0
   12140:	vldr	d16, [pc, #72]	; 12190 <error@@Base+0xdd4>
   12144:	ldr	r0, [sp, #4]
   12148:	ldr	r2, [sp]
   1214c:	ldr	r2, [r2]
   12150:	ldr	r3, [sp]
   12154:	ldr	r3, [r3, #4]
   12158:	sub	r2, r2, r3
   1215c:	vmov	s0, r2
   12160:	vcvt.f64.s32	d17, s0
   12164:	vmul.f64	d16, d16, d17
   12168:	ldr	r2, [sp]
   1216c:	ldr	r2, [r2]
   12170:	vmov	s0, r2
   12174:	vcvt.f64.s32	d17, s0
   12178:	vdiv.f64	d16, d16, d17
   1217c:	vmov	r2, r3, d16
   12180:	bl	1084c <fprintf@plt>
   12184:	mov	sp, fp
   12188:	pop	{fp, pc}
   1218c:	nop	{0}
   12190:	andeq	r0, r0, r0
   12194:	subsmi	r0, r9, r0
   12198:	andeq	r1, r0, r2, ror #4
   1219c:	andeq	r1, r0, sp, ror #4
   121a0:	push	{r4, sl, fp, lr}
   121a4:	add	fp, sp, #8
   121a8:	sub	sp, sp, #24
   121ac:	ldr	ip, [fp, #12]
   121b0:	ldr	lr, [fp, #8]
   121b4:	ldr	r4, [pc, #376]	; 12334 <error@@Base+0xf78>
   121b8:	add	r4, pc, r4
   121bc:	str	r0, [fp, #-12]
   121c0:	str	r1, [sp, #16]
   121c4:	strh	r2, [sp, #14]
   121c8:	str	r3, [sp, #8]
   121cc:	strb	lr, [sp, #7]
   121d0:	strb	ip, [sp, #6]
   121d4:	ldr	r0, [fp, #-12]
   121d8:	ldr	r2, [sp, #8]
   121dc:	mov	r1, r4
   121e0:	bl	1084c <fprintf@plt>
   121e4:	ldr	r1, [fp, #-12]
   121e8:	str	r0, [sp]
   121ec:	mov	r0, r1
   121f0:	movw	r1, #0
   121f4:	bl	1251c <error@@Base+0x1160>
   121f8:	ldr	r0, [pc, #296]	; 12328 <error@@Base+0xf6c>
   121fc:	add	r1, pc, r0
   12200:	ldr	r0, [pc, #292]	; 1232c <error@@Base+0xf70>
   12204:	add	r0, pc, r0
   12208:	ldr	r2, [pc, #288]	; 12330 <error@@Base+0xf74>
   1220c:	add	r2, pc, r2
   12210:	ldr	r3, [fp, #-12]
   12214:	ldrb	ip, [sp, #7]
   12218:	cmp	ip, #0
   1221c:	movw	ip, #0
   12220:	movne	ip, #1
   12224:	tst	ip, #1
   12228:	movne	r2, r0
   1222c:	mov	r0, r3
   12230:	bl	1084c <fprintf@plt>
   12234:	movw	r1, #1
   12238:	strh	r1, [sp, #4]
   1223c:	ldrsh	r0, [sp, #4]
   12240:	ldrsh	r1, [sp, #14]
   12244:	cmp	r0, r1
   12248:	bgt	122a4 <error@@Base+0xee8>
   1224c:	ldr	r0, [sp, #16]
   12250:	ldrsh	r1, [sp, #4]
   12254:	add	r0, r0, r1, lsl #3
   12258:	ldr	r0, [r0]
   1225c:	cmp	r0, #0
   12260:	ble	1228c <error@@Base+0xed0>
   12264:	ldr	r0, [fp, #-12]
   12268:	ldr	r1, [sp, #16]
   1226c:	ldrsh	r2, [sp, #4]
   12270:	add	r1, r1, r2, lsl #3
   12274:	bl	1251c <error@@Base+0x1160>
   12278:	ldr	r0, [pc, #192]	; 12340 <error@@Base+0xf84>
   1227c:	add	r1, pc, r0
   12280:	ldr	r0, [fp, #-12]
   12284:	ldrsh	r2, [sp, #4]
   12288:	bl	1084c <fprintf@plt>
   1228c:	b	12290 <error@@Base+0xed4>
   12290:	ldrh	r0, [sp, #4]
   12294:	movw	r1, #1
   12298:	add	r0, r0, r1
   1229c:	strh	r0, [sp, #4]
   122a0:	b	1223c <error@@Base+0xe80>
   122a4:	ldrb	r0, [sp, #7]
   122a8:	cmp	r0, #0
   122ac:	beq	122f8 <error@@Base+0xf3c>
   122b0:	ldr	r0, [sp, #16]
   122b4:	ldrsh	r1, [sp, #14]
   122b8:	add	r1, r1, #1
   122bc:	add	r0, r0, r1, lsl #3
   122c0:	ldr	r0, [r0]
   122c4:	cmp	r0, #0
   122c8:	ble	122f8 <error@@Base+0xf3c>
   122cc:	ldr	r0, [fp, #-12]
   122d0:	ldr	r1, [sp, #16]
   122d4:	ldrsh	r2, [sp, #14]
   122d8:	add	r2, r2, #1
   122dc:	add	r1, r1, r2, lsl #3
   122e0:	bl	1251c <error@@Base+0x1160>
   122e4:	ldr	r0, [pc, #76]	; 12338 <error@@Base+0xf7c>
   122e8:	add	r1, pc, r0
   122ec:	ldr	r0, [fp, #-12]
   122f0:	ldrsh	r2, [sp, #14]
   122f4:	bl	1084c <fprintf@plt>
   122f8:	ldrsb	r0, [sp, #6]
   122fc:	cmp	r0, #0
   12300:	beq	12320 <error@@Base+0xf64>
   12304:	ldr	r0, [fp, #-12]
   12308:	ldr	r1, [sp, #16]
   1230c:	bl	1251c <error@@Base+0x1160>
   12310:	ldr	r0, [pc, #36]	; 1233c <error@@Base+0xf80>
   12314:	add	r0, pc, r0
   12318:	ldr	r1, [fp, #-12]
   1231c:	bl	10894 <fputs@plt>
   12320:	sub	sp, fp, #8
   12324:	pop	{r4, sl, fp, pc}
   12328:	andeq	r1, r0, r9, lsr #3
   1232c:	andeq	r1, r0, r5, lsr #3
   12330:	andeq	r1, r0, r4, lsr #3
   12334:	andeq	r1, r0, ip, ror #3
   12338:	ldrdeq	r1, [r0], -r8
   1233c:	andeq	r1, r0, r1, ror r0
   12340:	andeq	r1, r0, fp, lsr r1
   12344:	push	{fp, lr}
   12348:	mov	fp, sp
   1234c:	sub	sp, sp, #40	; 0x28
   12350:	ldr	r3, [pc, #312]	; 12490 <error@@Base+0x10d4>
   12354:	ldr	r3, [pc, r3]
   12358:	str	r0, [fp, #-4]
   1235c:	str	r1, [fp, #-8]
   12360:	str	r2, [fp, #-12]
   12364:	ldr	r0, [fp, #-8]
   12368:	blx	r3
   1236c:	ldr	r0, [pc, #276]	; 12488 <error@@Base+0x10cc>
   12370:	add	r0, pc, r0
   12374:	ldr	r1, [pc, #272]	; 1248c <error@@Base+0x10d0>
   12378:	ldr	r1, [pc, r1]
   1237c:	ldr	r2, [fp, #-8]
   12380:	movw	r3, #8052	; 0x1f74
   12384:	add	r2, r2, r3
   12388:	ldr	r2, [r2]
   1238c:	ldr	r3, [fp, #-8]
   12390:	movw	ip, #8048	; 0x1f70
   12394:	add	r3, r3, ip
   12398:	ldr	r3, [r3]
   1239c:	str	r0, [sp, #20]
   123a0:	mov	r0, r2
   123a4:	str	r1, [sp, #16]
   123a8:	mov	r1, r3
   123ac:	ldr	r2, [sp, #20]
   123b0:	ldr	r3, [sp, #16]
   123b4:	blx	r3
   123b8:	ldr	r0, [pc, #196]	; 12484 <error@@Base+0x10c8>
   123bc:	add	r1, pc, r0
   123c0:	ldr	r0, [fp, #-4]
   123c4:	ldr	r2, [fp, #-12]
   123c8:	bl	1084c <fprintf@plt>
   123cc:	ldr	r1, [fp, #-4]
   123d0:	str	r0, [sp, #12]
   123d4:	mov	r0, r1
   123d8:	movw	r1, #0
   123dc:	bl	1251c <error@@Base+0x1160>
   123e0:	ldr	r1, [fp, #-4]
   123e4:	movw	r0, #10
   123e8:	bl	10870 <fputc@plt>
   123ec:	movw	r1, #0
   123f0:	str	r1, [fp, #-16]
   123f4:	ldr	r0, [fp, #-16]
   123f8:	ldr	r1, [fp, #-8]
   123fc:	movw	r2, #8052	; 0x1f74
   12400:	add	r1, r1, r2
   12404:	ldr	r1, [r1]
   12408:	cmp	r0, r1
   1240c:	bge	1247c <error@@Base+0x10c0>
   12410:	ldr	r0, [pc, #124]	; 12494 <error@@Base+0x10d8>
   12414:	add	r1, pc, r0
   12418:	ldr	r0, [fp, #-4]
   1241c:	ldr	r2, [fp, #-8]
   12420:	movw	r3, #8048	; 0x1f70
   12424:	ldr	r2, [r2, r3]
   12428:	ldr	ip, [fp, #-16]
   1242c:	ldr	r2, [r2, ip, lsl #2]
   12430:	add	r2, r2, #12
   12434:	str	r1, [sp, #8]
   12438:	mov	r1, r2
   1243c:	str	r3, [sp, #4]
   12440:	bl	1251c <error@@Base+0x1160>
   12444:	ldr	r0, [fp, #-4]
   12448:	ldr	r1, [fp, #-8]
   1244c:	ldr	r2, [sp, #4]
   12450:	ldr	r1, [r1, r2]
   12454:	ldr	r3, [fp, #-16]
   12458:	add	r1, r1, r3, lsl #2
   1245c:	ldr	r1, [r1]
   12460:	ldr	r2, [r1, #8]
   12464:	ldr	r1, [sp, #8]
   12468:	bl	1084c <fprintf@plt>
   1246c:	ldr	r0, [fp, #-16]
   12470:	add	r0, r0, #1
   12474:	str	r0, [fp, #-16]
   12478:	b	123f4 <error@@Base+0x1038>
   1247c:	mov	sp, fp
   12480:	pop	{fp, pc}
   12484:	andeq	r0, r0, r8, ror #31
   12488:	andeq	r0, r0, r8, lsr r2
   1248c:	andeq	r1, r1, r0, lsl #26
   12490:	andeq	r1, r1, r4, lsr sp
   12494:	muleq	r0, r1, pc	; <UNPREDICTABLE>
   12498:	push	{fp, lr}
   1249c:	mov	fp, sp
   124a0:	sub	sp, sp, #16
   124a4:	str	r0, [fp, #-4]
   124a8:	str	r1, [sp, #8]
   124ac:	str	r2, [sp, #4]
   124b0:	ldr	r0, [fp, #-4]
   124b4:	bl	11c3c <error@@Base+0x880>
   124b8:	and	r0, r0, #255	; 0xff
   124bc:	cmp	r0, #0
   124c0:	movw	r0, #0
   124c4:	str	r0, [sp]
   124c8:	beq	124f8 <error@@Base+0x113c>
   124cc:	ldr	r0, [pc, #64]	; 12514 <error@@Base+0x1158>
   124d0:	add	r0, pc, r0
   124d4:	ldr	r1, [pc, #60]	; 12518 <error@@Base+0x115c>
   124d8:	add	r1, pc, r1
   124dc:	ldr	r2, [sp, #8]
   124e0:	ldr	r3, [sp, #4]
   124e4:	bl	10858 <__isoc99_sscanf@plt>
   124e8:	cmp	r0, #2
   124ec:	movw	r0, #0
   124f0:	moveq	r0, #1
   124f4:	str	r0, [sp]
   124f8:	ldr	r0, [sp]
   124fc:	tst	r0, #1
   12500:	movw	r0, #1
   12504:	moveq	r0, #0
   12508:	and	r0, r0, #255	; 0xff
   1250c:	mov	sp, fp
   12510:	pop	{fp, pc}
   12514:	andeq	r1, r1, r9, lsl ip
   12518:			; <UNDEFINED> instruction: 0x00000eb5
   1251c:	push	{fp, lr}
   12520:	mov	fp, sp
   12524:	sub	sp, sp, #16
   12528:	str	r0, [fp, #-4]
   1252c:	str	r1, [sp, #8]
   12530:	ldr	r0, [sp, #8]
   12534:	movw	r1, #0
   12538:	cmp	r0, r1
   1253c:	beq	1257c <error@@Base+0x11c0>
   12540:	ldr	r0, [pc, #96]	; 125a8 <error@@Base+0x11ec>
   12544:	add	r1, pc, r0
   12548:	ldr	r0, [fp, #-4]
   1254c:	ldr	r2, [sp, #8]
   12550:	ldr	r2, [r2]
   12554:	ldr	r3, [sp, #8]
   12558:	ldr	r3, [r3, #4]
   1255c:	bl	1084c <fprintf@plt>
   12560:	ldr	r1, [fp, #-4]
   12564:	ldr	r2, [sp, #8]
   12568:	str	r0, [sp, #4]
   1256c:	mov	r0, r1
   12570:	mov	r1, r2
   12574:	bl	12100 <error@@Base+0xd44>
   12578:	b	1258c <error@@Base+0x11d0>
   1257c:	ldr	r0, [pc, #32]	; 125a4 <error@@Base+0x11e8>
   12580:	add	r0, pc, r0
   12584:	ldr	r1, [fp, #-4]
   12588:	bl	10894 <fputs@plt>
   1258c:	ldr	r0, [pc, #24]	; 125ac <error@@Base+0x11f0>
   12590:	add	r0, pc, r0
   12594:	ldr	r1, [fp, #-4]
   12598:	bl	10894 <fputs@plt>
   1259c:	mov	sp, fp
   125a0:	pop	{fp, pc}
   125a4:	andeq	r0, r0, r4, asr lr
   125a8:	andeq	r0, r0, r5, lsl #29
   125ac:	andeq	r0, r0, pc, asr lr
   125b0:	push	{fp, lr}
   125b4:	mov	fp, sp
   125b8:	sub	sp, sp, #8
   125bc:	ldr	r2, [pc, #36]	; 125e8 <error@@Base+0x122c>
   125c0:	ldr	r2, [pc, r2]
   125c4:	str	r0, [sp, #4]
   125c8:	str	r1, [sp]
   125cc:	ldr	r0, [sp, #4]
   125d0:	ldr	r0, [r0, #8]
   125d4:	ldr	r1, [sp]
   125d8:	ldr	r1, [r1, #8]
   125dc:	blx	r2
   125e0:	mov	sp, fp
   125e4:	pop	{fp, pc}
   125e8:	strdeq	r1, [r1], -ip
   125ec:	push	{fp, lr}
   125f0:	mov	fp, sp
   125f4:	sub	sp, sp, #16
   125f8:	str	r0, [fp, #-4]
   125fc:	str	r1, [sp, #8]
   12600:	str	r2, [sp, #4]
   12604:	ldr	r0, [fp, #-4]
   12608:	cmp	r0, #2
   1260c:	bge	12614 <error@@Base+0x1258>
   12610:	b	12644 <error@@Base+0x1288>
   12614:	ldr	r0, [pc, #48]	; 1264c <error@@Base+0x1290>
   12618:	add	r0, pc, r0
   1261c:	ldr	r1, [pc, #44]	; 12650 <error@@Base+0x1294>
   12620:	add	r1, pc, r1
   12624:	ldr	r2, [sp, #8]
   12628:	str	r2, [r1]
   1262c:	ldr	r1, [sp, #4]
   12630:	str	r1, [r0]
   12634:	ldr	r0, [fp, #-4]
   12638:	sub	r1, r0, #1
   1263c:	movw	r0, #0
   12640:	bl	12654 <error@@Base+0x1298>
   12644:	mov	sp, fp
   12648:	pop	{fp, pc}
   1264c:	andeq	r1, r1, ip, lsr fp
   12650:	andeq	r1, r1, r0, lsr fp
   12654:	push	{fp, lr}
   12658:	mov	fp, sp
   1265c:	sub	sp, sp, #40	; 0x28
   12660:	str	r0, [fp, #-4]
   12664:	str	r1, [fp, #-8]
   12668:	ldr	r0, [fp, #-4]
   1266c:	str	r0, [fp, #-12]
   12670:	ldr	r0, [fp, #-8]
   12674:	str	r0, [fp, #-16]
   12678:	ldr	r0, [pc, #500]	; 12874 <error@@Base+0x14b8>
   1267c:	ldr	r0, [pc, r0]
   12680:	ldr	r1, [fp, #-12]
   12684:	add	r0, r0, r1, lsl #2
   12688:	ldr	r0, [r0]
   1268c:	str	r0, [sp, #20]
   12690:	ldr	r0, [fp, #-12]
   12694:	ldr	r1, [fp, #-16]
   12698:	cmp	r0, r1
   1269c:	bge	12808 <error@@Base+0x144c>
   126a0:	b	126a4 <error@@Base+0x12e8>
   126a4:	ldr	r0, [fp, #-12]
   126a8:	ldr	r1, [fp, #-16]
   126ac:	cmp	r0, r1
   126b0:	movw	r0, #0
   126b4:	str	r0, [sp, #16]
   126b8:	bge	12700 <error@@Base+0x1344>
   126bc:	ldr	r0, [pc, #436]	; 12878 <error@@Base+0x14bc>
   126c0:	ldr	r0, [pc, r0]
   126c4:	ldr	r1, [sp, #20]
   126c8:	ldr	r2, [pc, #428]	; 1287c <error@@Base+0x14c0>
   126cc:	ldr	r2, [pc, r2]
   126d0:	ldr	r3, [fp, #-16]
   126d4:	add	r2, r2, r3, lsl #2
   126d8:	ldr	r2, [r2]
   126dc:	str	r0, [sp, #12]
   126e0:	mov	r0, r1
   126e4:	mov	r1, r2
   126e8:	ldr	r2, [sp, #12]
   126ec:	blx	r2
   126f0:	cmp	r0, #0
   126f4:	movw	r0, #0
   126f8:	movlt	r0, #1
   126fc:	str	r0, [sp, #16]
   12700:	ldr	r0, [sp, #16]
   12704:	tst	r0, #1
   12708:	beq	12720 <error@@Base+0x1364>
   1270c:	ldr	r0, [fp, #-16]
   12710:	mvn	r1, #0
   12714:	add	r0, r0, r1
   12718:	str	r0, [fp, #-16]
   1271c:	b	126a4 <error@@Base+0x12e8>
   12720:	ldr	r0, [fp, #-12]
   12724:	ldr	r1, [fp, #-16]
   12728:	cmp	r0, r1
   1272c:	beq	12754 <error@@Base+0x1398>
   12730:	ldr	r0, [pc, #328]	; 12880 <error@@Base+0x14c4>
   12734:	ldr	r0, [pc, r0]
   12738:	ldr	r1, [fp, #-16]
   1273c:	ldr	r1, [r0, r1, lsl #2]
   12740:	ldr	r2, [fp, #-12]
   12744:	add	r3, r2, #1
   12748:	str	r3, [fp, #-12]
   1274c:	add	r0, r0, r2, lsl #2
   12750:	str	r1, [r0]
   12754:	b	12758 <error@@Base+0x139c>
   12758:	ldr	r0, [fp, #-12]
   1275c:	ldr	r1, [fp, #-16]
   12760:	cmp	r0, r1
   12764:	movw	r0, #0
   12768:	str	r0, [sp, #8]
   1276c:	bge	127b4 <error@@Base+0x13f8>
   12770:	ldr	r0, [pc, #268]	; 12884 <error@@Base+0x14c8>
   12774:	ldr	r0, [pc, r0]
   12778:	ldr	r1, [sp, #20]
   1277c:	ldr	r2, [pc, #260]	; 12888 <error@@Base+0x14cc>
   12780:	ldr	r2, [pc, r2]
   12784:	ldr	r3, [fp, #-12]
   12788:	add	r2, r2, r3, lsl #2
   1278c:	ldr	r2, [r2]
   12790:	str	r0, [sp, #4]
   12794:	mov	r0, r1
   12798:	mov	r1, r2
   1279c:	ldr	r2, [sp, #4]
   127a0:	blx	r2
   127a4:	cmp	r0, #0
   127a8:	movw	r0, #0
   127ac:	movgt	r0, #1
   127b0:	str	r0, [sp, #8]
   127b4:	ldr	r0, [sp, #8]
   127b8:	tst	r0, #1
   127bc:	beq	127d0 <error@@Base+0x1414>
   127c0:	ldr	r0, [fp, #-12]
   127c4:	add	r0, r0, #1
   127c8:	str	r0, [fp, #-12]
   127cc:	b	12758 <error@@Base+0x139c>
   127d0:	ldr	r0, [fp, #-12]
   127d4:	ldr	r1, [fp, #-16]
   127d8:	cmp	r0, r1
   127dc:	beq	12804 <error@@Base+0x1448>
   127e0:	ldr	r0, [pc, #164]	; 1288c <error@@Base+0x14d0>
   127e4:	ldr	r0, [pc, r0]
   127e8:	ldr	r1, [fp, #-12]
   127ec:	ldr	r1, [r0, r1, lsl #2]
   127f0:	ldr	r2, [fp, #-16]
   127f4:	sub	r3, r2, #1
   127f8:	str	r3, [fp, #-16]
   127fc:	add	r0, r0, r2, lsl #2
   12800:	str	r1, [r0]
   12804:	b	12690 <error@@Base+0x12d4>
   12808:	ldr	r0, [sp, #20]
   1280c:	ldr	r1, [pc, #124]	; 12890 <error@@Base+0x14d4>
   12810:	ldr	r1, [pc, r1]
   12814:	ldr	r2, [fp, #-16]
   12818:	add	r1, r1, r2, lsl #2
   1281c:	str	r0, [r1]
   12820:	ldr	r0, [fp, #-4]
   12824:	ldr	r1, [fp, #-16]
   12828:	mvn	r2, #0
   1282c:	add	r1, r1, r2
   12830:	str	r1, [fp, #-16]
   12834:	cmp	r0, r1
   12838:	bge	12848 <error@@Base+0x148c>
   1283c:	ldr	r0, [fp, #-4]
   12840:	ldr	r1, [fp, #-16]
   12844:	bl	12654 <error@@Base+0x1298>
   12848:	ldr	r0, [fp, #-12]
   1284c:	add	r0, r0, #1
   12850:	str	r0, [fp, #-12]
   12854:	ldr	r1, [fp, #-8]
   12858:	cmp	r0, r1
   1285c:	bge	1286c <error@@Base+0x14b0>
   12860:	ldr	r0, [fp, #-12]
   12864:	ldr	r1, [fp, #-8]
   12868:	bl	12654 <error@@Base+0x1298>
   1286c:	mov	sp, fp
   12870:	pop	{fp, pc}
   12874:	ldrdeq	r1, [r1], -r4
   12878:	muleq	r1, r4, sl
   1287c:	andeq	r1, r1, r4, lsl #21
   12880:	andeq	r1, r1, ip, lsl sl
   12884:	andeq	r1, r1, r0, ror #19
   12888:	ldrdeq	r1, [r1], -r0
   1288c:	andeq	r1, r1, ip, ror #18
   12890:	andeq	r1, r1, r0, asr #18
   12894:	push	{fp, lr}
   12898:	mov	fp, sp
   1289c:	sub	sp, sp, #16
   128a0:	str	r0, [fp, #-4]
   128a4:	movw	r0, #0
   128a8:	strh	r0, [fp, #-6]
   128ac:	ldrsh	r0, [fp, #-6]
   128b0:	movw	r1, #503	; 0x1f7
   128b4:	cmp	r0, r1
   128b8:	bge	128f4 <error@@Base+0x1538>
   128bc:	ldr	r0, [pc, #92]	; 12920 <error@@Base+0x1564>
   128c0:	ldr	r0, [pc, r0]
   128c4:	ldr	r1, [fp, #-4]
   128c8:	ldrsh	r2, [fp, #-6]
   128cc:	add	r1, r1, r2, lsl #4
   128d0:	str	r0, [sp, #4]
   128d4:	mov	r0, r1
   128d8:	ldr	r1, [sp, #4]
   128dc:	blx	r1
   128e0:	ldrh	r0, [fp, #-6]
   128e4:	movw	r1, #1
   128e8:	add	r0, r0, r1
   128ec:	strh	r0, [fp, #-6]
   128f0:	b	128ac <error@@Base+0x14f0>
   128f4:	ldr	r0, [fp, #-4]
   128f8:	movw	r1, #8048	; 0x1f70
   128fc:	add	r0, r0, r1
   12900:	movw	r1, #0
   12904:	str	r1, [r0]
   12908:	ldr	r0, [fp, #-4]
   1290c:	movw	r2, #8052	; 0x1f74
   12910:	add	r0, r0, r2
   12914:	str	r1, [r0]
   12918:	mov	sp, fp
   1291c:	pop	{fp, pc}
   12920:	strdeq	r1, [r1], -r8
   12924:	push	{fp, lr}
   12928:	mov	fp, sp
   1292c:	sub	sp, sp, #24
   12930:	str	r0, [fp, #-4]
   12934:	str	r1, [fp, #-8]
   12938:	ldr	r0, [fp, #-4]
   1293c:	ldr	r1, [fp, #-8]
   12940:	str	r0, [sp, #8]
   12944:	mov	r0, r1
   12948:	bl	129c4 <error@@Base+0x1608>
   1294c:	mov	r1, r0
   12950:	ldr	r2, [sp, #8]
   12954:	add	r0, r2, r0, lsl #4
   12958:	ldr	r0, [r0]
   1295c:	str	r0, [sp, #12]
   12960:	ldr	r0, [sp, #12]
   12964:	movw	r1, #0
   12968:	cmp	r0, r1
   1296c:	movw	r0, #0
   12970:	str	r0, [sp, #4]
   12974:	beq	12998 <error@@Base+0x15dc>
   12978:	ldr	r0, [fp, #-8]
   1297c:	ldr	r1, [sp, #12]
   12980:	ldr	r1, [r1, #8]
   12984:	bl	107c8 <strcmp@plt>
   12988:	cmp	r0, #0
   1298c:	movw	r0, #0
   12990:	movne	r0, #1
   12994:	str	r0, [sp, #4]
   12998:	ldr	r0, [sp, #4]
   1299c:	tst	r0, #1
   129a0:	beq	129b8 <error@@Base+0x15fc>
   129a4:	b	129a8 <error@@Base+0x15ec>
   129a8:	ldr	r0, [sp, #12]
   129ac:	ldr	r0, [r0, #4]
   129b0:	str	r0, [sp, #12]
   129b4:	b	12960 <error@@Base+0x15a4>
   129b8:	ldr	r0, [sp, #12]
   129bc:	mov	sp, fp
   129c0:	pop	{fp, pc}
   129c4:	sub	sp, sp, #16
   129c8:	str	r0, [sp, #12]
   129cc:	ldr	r0, [sp, #12]
   129d0:	str	r0, [sp, #8]
   129d4:	movw	r0, #0
   129d8:	str	r0, [sp]
   129dc:	str	r0, [sp, #4]
   129e0:	ldr	r0, [sp, #8]
   129e4:	ldr	r1, [sp, #4]
   129e8:	add	r0, r0, r1
   129ec:	ldrsb	r0, [r0]
   129f0:	cmp	r0, #0
   129f4:	beq	12a24 <error@@Base+0x1668>
   129f8:	ldr	r0, [sp, #8]
   129fc:	ldr	r1, [sp, #4]
   12a00:	add	r0, r0, r1
   12a04:	ldrb	r0, [r0]
   12a08:	ldr	r1, [sp]
   12a0c:	add	r0, r1, r0
   12a10:	str	r0, [sp]
   12a14:	ldr	r0, [sp, #4]
   12a18:	add	r0, r0, #1
   12a1c:	str	r0, [sp, #4]
   12a20:	b	129e0 <error@@Base+0x1624>
   12a24:	ldr	r0, [sp]
   12a28:	movw	r1, #20065	; 0x4e61
   12a2c:	movt	r1, #33354	; 0x824a
   12a30:	smmla	r1, r0, r1, r0
   12a34:	asr	r2, r1, #8
   12a38:	add	r1, r2, r1, lsr #31
   12a3c:	movw	r2, #503	; 0x1f7
   12a40:	mls	r0, r1, r2, r0
   12a44:	sxth	r0, r0
   12a48:	add	sp, sp, #16
   12a4c:	bx	lr
   12a50:	push	{fp, lr}
   12a54:	mov	fp, sp
   12a58:	sub	sp, sp, #24
   12a5c:	ldr	r2, [pc, #112]	; 12ad4 <error@@Base+0x1718>
   12a60:	ldr	r2, [pc, r2]
   12a64:	str	r0, [fp, #-4]
   12a68:	str	r1, [fp, #-8]
   12a6c:	ldr	r0, [fp, #-4]
   12a70:	ldr	r1, [fp, #-8]
   12a74:	ldr	r1, [r1, #8]
   12a78:	str	r0, [sp, #12]
   12a7c:	mov	r0, r1
   12a80:	str	r2, [sp, #8]
   12a84:	bl	129c4 <error@@Base+0x1608>
   12a88:	mov	r1, r0
   12a8c:	ldr	r2, [sp, #12]
   12a90:	add	r0, r2, r0, lsl #4
   12a94:	ldr	r3, [fp, #-8]
   12a98:	str	r1, [sp, #4]
   12a9c:	mov	r1, r3
   12aa0:	ldr	r3, [sp, #8]
   12aa4:	blx	r3
   12aa8:	ldr	r0, [fp, #-4]
   12aac:	bl	12ad8 <error@@Base+0x171c>
   12ab0:	ldr	r0, [fp, #-4]
   12ab4:	movw	r1, #8052	; 0x1f74
   12ab8:	add	r2, r0, r1
   12abc:	ldr	r2, [r2]
   12ac0:	add	r2, r2, #1
   12ac4:	add	r0, r0, r1
   12ac8:	str	r2, [r0]
   12acc:	mov	sp, fp
   12ad0:	pop	{fp, pc}
   12ad4:	andeq	r1, r1, r0, lsl #12
   12ad8:	push	{fp, lr}
   12adc:	mov	fp, sp
   12ae0:	sub	sp, sp, #8
   12ae4:	str	r0, [sp, #4]
   12ae8:	ldr	r0, [sp, #4]
   12aec:	movw	r1, #8048	; 0x1f70
   12af0:	add	r0, r0, r1
   12af4:	ldr	r0, [r0]
   12af8:	movw	r1, #0
   12afc:	cmp	r0, r1
   12b00:	beq	12b2c <error@@Base+0x1770>
   12b04:	ldr	r0, [sp, #4]
   12b08:	movw	r1, #8048	; 0x1f70
   12b0c:	add	r0, r0, r1
   12b10:	ldr	r0, [r0]
   12b14:	bl	107e0 <free@plt>
   12b18:	ldr	r0, [sp, #4]
   12b1c:	movw	r1, #8048	; 0x1f70
   12b20:	add	r0, r0, r1
   12b24:	movw	r1, #0
   12b28:	str	r1, [r0]
   12b2c:	mov	sp, fp
   12b30:	pop	{fp, pc}
   12b34:	push	{fp, lr}
   12b38:	mov	fp, sp
   12b3c:	sub	sp, sp, #24
   12b40:	ldr	r2, [pc, #116]	; 12bbc <error@@Base+0x1800>
   12b44:	ldr	r2, [pc, r2]
   12b48:	str	r0, [fp, #-4]
   12b4c:	str	r1, [fp, #-8]
   12b50:	ldr	r0, [fp, #-4]
   12b54:	ldr	r1, [fp, #-8]
   12b58:	ldr	r1, [r1, #8]
   12b5c:	str	r0, [sp, #12]
   12b60:	mov	r0, r1
   12b64:	str	r2, [sp, #8]
   12b68:	bl	129c4 <error@@Base+0x1608>
   12b6c:	mov	r1, r0
   12b70:	ldr	r2, [sp, #12]
   12b74:	add	r0, r2, r0, lsl #4
   12b78:	ldr	r3, [fp, #-8]
   12b7c:	str	r1, [sp, #4]
   12b80:	mov	r1, r3
   12b84:	ldr	r3, [sp, #8]
   12b88:	blx	r3
   12b8c:	ldr	r0, [fp, #-4]
   12b90:	bl	12ad8 <error@@Base+0x171c>
   12b94:	ldr	r0, [fp, #-4]
   12b98:	movw	r1, #8052	; 0x1f74
   12b9c:	add	r2, r0, r1
   12ba0:	ldr	r2, [r2]
   12ba4:	mvn	r3, #0
   12ba8:	add	r2, r2, r3
   12bac:	add	r0, r0, r1
   12bb0:	str	r2, [r0]
   12bb4:	mov	sp, fp
   12bb8:	pop	{fp, pc}
   12bbc:	andeq	r1, r1, ip, lsl #11
   12bc0:	push	{fp, lr}
   12bc4:	mov	fp, sp
   12bc8:	sub	sp, sp, #24
   12bcc:	str	r0, [fp, #-4]
   12bd0:	movw	r0, #0
   12bd4:	str	r0, [sp, #8]
   12bd8:	ldr	r1, [fp, #-4]
   12bdc:	movw	r2, #8048	; 0x1f70
   12be0:	add	r1, r1, r2
   12be4:	ldr	r1, [r1]
   12be8:	cmp	r1, r0
   12bec:	bne	12c08 <error@@Base+0x184c>
   12bf0:	ldr	r0, [fp, #-4]
   12bf4:	movw	r1, #8052	; 0x1f74
   12bf8:	add	r0, r0, r1
   12bfc:	ldr	r0, [r0]
   12c00:	cmp	r0, #0
   12c04:	bne	12c0c <error@@Base+0x1850>
   12c08:	b	12ccc <error@@Base+0x1910>
   12c0c:	ldr	r0, [pc, #192]	; 12cd4 <error@@Base+0x1918>
   12c10:	ldr	r0, [pc, r0]
   12c14:	ldr	r1, [fp, #-4]
   12c18:	movw	r2, #8052	; 0x1f74
   12c1c:	add	r1, r1, r2
   12c20:	ldr	r1, [r1]
   12c24:	str	r0, [sp, #4]
   12c28:	mov	r0, r1
   12c2c:	movw	r1, #4
   12c30:	ldr	r2, [sp, #4]
   12c34:	blx	r2
   12c38:	ldr	r1, [fp, #-4]
   12c3c:	movw	r2, #8048	; 0x1f70
   12c40:	add	r1, r1, r2
   12c44:	str	r0, [r1]
   12c48:	movw	r0, #0
   12c4c:	str	r0, [sp, #12]
   12c50:	ldr	r0, [sp, #12]
   12c54:	movw	r1, #503	; 0x1f7
   12c58:	cmp	r0, r1
   12c5c:	bge	12ccc <error@@Base+0x1910>
   12c60:	ldr	r0, [fp, #-4]
   12c64:	ldr	r1, [sp, #12]
   12c68:	add	r0, r0, r1, lsl #4
   12c6c:	ldr	r0, [r0]
   12c70:	str	r0, [fp, #-8]
   12c74:	ldr	r0, [fp, #-8]
   12c78:	movw	r1, #0
   12c7c:	cmp	r0, r1
   12c80:	beq	12cb8 <error@@Base+0x18fc>
   12c84:	ldr	r0, [fp, #-8]
   12c88:	ldr	r1, [fp, #-4]
   12c8c:	movw	r2, #8048	; 0x1f70
   12c90:	ldr	r1, [r1, r2]
   12c94:	ldr	r2, [sp, #8]
   12c98:	add	r3, r2, #1
   12c9c:	str	r3, [sp, #8]
   12ca0:	add	r1, r1, r2, lsl #2
   12ca4:	str	r0, [r1]
   12ca8:	ldr	r0, [fp, #-8]
   12cac:	ldr	r0, [r0, #4]
   12cb0:	str	r0, [fp, #-8]
   12cb4:	b	12c74 <error@@Base+0x18b8>
   12cb8:	b	12cbc <error@@Base+0x1900>
   12cbc:	ldr	r0, [sp, #12]
   12cc0:	add	r0, r0, #1
   12cc4:	str	r0, [sp, #12]
   12cc8:	b	12c50 <error@@Base+0x1894>
   12ccc:	mov	sp, fp
   12cd0:	pop	{fp, pc}
   12cd4:			; <UNDEFINED> instruction: 0x000114b4
   12cd8:	push	{fp, lr}
   12cdc:	mov	fp, sp
   12ce0:	sub	sp, sp, #16
   12ce4:	str	r0, [fp, #-4]
   12ce8:	str	r1, [sp, #8]
   12cec:	movw	r0, #0
   12cf0:	strh	r0, [sp, #6]
   12cf4:	ldrsh	r0, [sp, #6]
   12cf8:	movw	r1, #503	; 0x1f7
   12cfc:	cmp	r0, r1
   12d00:	bge	12d44 <error@@Base+0x1988>
   12d04:	ldr	r0, [pc, #92]	; 12d68 <error@@Base+0x19ac>
   12d08:	ldr	r0, [pc, r0]
   12d0c:	ldr	r1, [fp, #-4]
   12d10:	ldrsh	r2, [sp, #6]
   12d14:	add	r1, r1, r2, lsl #4
   12d18:	ldr	r2, [sp, #8]
   12d1c:	str	r0, [sp]
   12d20:	mov	r0, r1
   12d24:	mov	r1, r2
   12d28:	ldr	r2, [sp]
   12d2c:	blx	r2
   12d30:	ldrh	r0, [sp, #6]
   12d34:	movw	r1, #1
   12d38:	add	r0, r0, r1
   12d3c:	strh	r0, [sp, #6]
   12d40:	b	12cf4 <error@@Base+0x1938>
   12d44:	ldr	r0, [fp, #-4]
   12d48:	bl	12ad8 <error@@Base+0x171c>
   12d4c:	ldr	r0, [fp, #-4]
   12d50:	movw	r1, #8052	; 0x1f74
   12d54:	add	r0, r0, r1
   12d58:	movw	r1, #0
   12d5c:	str	r1, [r0]
   12d60:	mov	sp, fp
   12d64:	pop	{fp, pc}
   12d68:	andeq	r1, r1, r4, asr #7
   12d6c:	sub	sp, sp, #4
   12d70:	str	r0, [sp]
   12d74:	ldr	r0, [sp]
   12d78:	movw	r1, #0
   12d7c:	str	r1, [r0, #4]
   12d80:	ldr	r0, [sp]
   12d84:	str	r1, [r0]
   12d88:	ldr	r0, [sp]
   12d8c:	str	r1, [r0, #8]
   12d90:	ldr	r0, [sp]
   12d94:	str	r1, [r0, #12]
   12d98:	add	sp, sp, #4
   12d9c:	bx	lr
   12da0:	push	{fp, lr}
   12da4:	mov	fp, sp
   12da8:	sub	sp, sp, #8
   12dac:	str	r0, [sp, #4]
   12db0:	str	r1, [sp]
   12db4:	ldr	r0, [sp, #4]
   12db8:	ldr	r2, [sp]
   12dbc:	ldr	r1, [sp, #4]
   12dc0:	ldr	r3, [r1]
   12dc4:	movw	r1, #0
   12dc8:	bl	12dd4 <error@@Base+0x1a18>
   12dcc:	mov	sp, fp
   12dd0:	pop	{fp, pc}
   12dd4:	push	{fp, lr}
   12dd8:	mov	fp, sp
   12ddc:	sub	sp, sp, #16
   12de0:	str	r0, [fp, #-4]
   12de4:	str	r1, [sp, #8]
   12de8:	str	r2, [sp, #4]
   12dec:	str	r3, [sp]
   12df0:	ldr	r0, [sp, #8]
   12df4:	ldr	r1, [sp, #4]
   12df8:	str	r0, [r1]
   12dfc:	ldr	r0, [sp]
   12e00:	ldr	r1, [sp, #4]
   12e04:	str	r0, [r1, #4]
   12e08:	ldr	r0, [sp, #8]
   12e0c:	movw	r1, #0
   12e10:	cmp	r0, r1
   12e14:	beq	12e28 <error@@Base+0x1a6c>
   12e18:	ldr	r0, [sp, #4]
   12e1c:	ldr	r1, [sp, #8]
   12e20:	str	r0, [r1, #4]
   12e24:	b	12e34 <error@@Base+0x1a78>
   12e28:	ldr	r0, [sp, #4]
   12e2c:	ldr	r1, [fp, #-4]
   12e30:	str	r0, [r1]
   12e34:	ldr	r0, [sp]
   12e38:	movw	r1, #0
   12e3c:	cmp	r0, r1
   12e40:	beq	12e54 <error@@Base+0x1a98>
   12e44:	ldr	r0, [sp, #4]
   12e48:	ldr	r1, [sp]
   12e4c:	str	r0, [r1]
   12e50:	b	12e60 <error@@Base+0x1aa4>
   12e54:	ldr	r0, [sp, #4]
   12e58:	ldr	r1, [fp, #-4]
   12e5c:	str	r0, [r1, #4]
   12e60:	ldr	r0, [fp, #-4]
   12e64:	bl	12fe8 <error@@Base+0x1c2c>
   12e68:	ldr	r0, [fp, #-4]
   12e6c:	ldr	r1, [r0, #12]
   12e70:	add	r1, r1, #1
   12e74:	str	r1, [r0, #12]
   12e78:	mov	sp, fp
   12e7c:	pop	{fp, pc}
   12e80:	push	{fp, lr}
   12e84:	mov	fp, sp
   12e88:	sub	sp, sp, #8
   12e8c:	str	r0, [sp, #4]
   12e90:	str	r1, [sp]
   12e94:	ldr	r0, [sp, #4]
   12e98:	ldr	r1, [sp, #4]
   12e9c:	ldr	r1, [r1, #4]
   12ea0:	ldr	r2, [sp]
   12ea4:	movw	r3, #0
   12ea8:	bl	12dd4 <error@@Base+0x1a18>
   12eac:	mov	sp, fp
   12eb0:	pop	{fp, pc}
   12eb4:	push	{fp, lr}
   12eb8:	mov	fp, sp
   12ebc:	sub	sp, sp, #16
   12ec0:	str	r0, [fp, #-4]
   12ec4:	str	r1, [sp, #8]
   12ec8:	str	r2, [sp, #4]
   12ecc:	ldr	r0, [fp, #-4]
   12ed0:	ldr	r1, [sp, #4]
   12ed4:	ldr	r1, [r1]
   12ed8:	ldr	r2, [sp, #8]
   12edc:	ldr	r3, [sp, #4]
   12ee0:	bl	12dd4 <error@@Base+0x1a18>
   12ee4:	mov	sp, fp
   12ee8:	pop	{fp, pc}
   12eec:	push	{fp, lr}
   12ef0:	mov	fp, sp
   12ef4:	sub	sp, sp, #16
   12ef8:	str	r0, [fp, #-4]
   12efc:	str	r1, [sp, #8]
   12f00:	str	r2, [sp, #4]
   12f04:	ldr	r0, [fp, #-4]
   12f08:	ldr	r1, [sp, #8]
   12f0c:	ldr	r2, [sp, #4]
   12f10:	ldr	r3, [sp, #8]
   12f14:	ldr	r3, [r3, #4]
   12f18:	bl	12dd4 <error@@Base+0x1a18>
   12f1c:	mov	sp, fp
   12f20:	pop	{fp, pc}
   12f24:	push	{fp, lr}
   12f28:	mov	fp, sp
   12f2c:	sub	sp, sp, #8
   12f30:	str	r0, [sp, #4]
   12f34:	str	r1, [sp]
   12f38:	ldr	r0, [sp]
   12f3c:	ldr	r0, [r0]
   12f40:	movw	r1, #0
   12f44:	cmp	r0, r1
   12f48:	beq	12f64 <error@@Base+0x1ba8>
   12f4c:	ldr	r0, [sp]
   12f50:	ldr	r0, [r0, #4]
   12f54:	ldr	r1, [sp]
   12f58:	ldr	r1, [r1]
   12f5c:	str	r0, [r1, #4]
   12f60:	b	12f74 <error@@Base+0x1bb8>
   12f64:	ldr	r0, [sp]
   12f68:	ldr	r0, [r0, #4]
   12f6c:	ldr	r1, [sp, #4]
   12f70:	str	r0, [r1]
   12f74:	ldr	r0, [sp]
   12f78:	ldr	r0, [r0, #4]
   12f7c:	movw	r1, #0
   12f80:	cmp	r0, r1
   12f84:	beq	12fa0 <error@@Base+0x1be4>
   12f88:	ldr	r0, [sp]
   12f8c:	ldr	r0, [r0]
   12f90:	ldr	r1, [sp]
   12f94:	ldr	r1, [r1, #4]
   12f98:	str	r0, [r1]
   12f9c:	b	12fb0 <error@@Base+0x1bf4>
   12fa0:	ldr	r0, [sp]
   12fa4:	ldr	r0, [r0]
   12fa8:	ldr	r1, [sp, #4]
   12fac:	str	r0, [r1, #4]
   12fb0:	ldr	r0, [sp]
   12fb4:	movw	r1, #0
   12fb8:	str	r1, [r0, #4]
   12fbc:	ldr	r0, [sp]
   12fc0:	str	r1, [r0]
   12fc4:	ldr	r0, [sp, #4]
   12fc8:	bl	12fe8 <error@@Base+0x1c2c>
   12fcc:	ldr	r0, [sp, #4]
   12fd0:	ldr	r1, [r0, #12]
   12fd4:	mvn	r2, #0
   12fd8:	add	r1, r1, r2
   12fdc:	str	r1, [r0, #12]
   12fe0:	mov	sp, fp
   12fe4:	pop	{fp, pc}
   12fe8:	push	{fp, lr}
   12fec:	mov	fp, sp
   12ff0:	sub	sp, sp, #8
   12ff4:	str	r0, [sp, #4]
   12ff8:	ldr	r0, [sp, #4]
   12ffc:	ldr	r0, [r0, #8]
   13000:	movw	r1, #0
   13004:	cmp	r0, r1
   13008:	beq	13024 <error@@Base+0x1c68>
   1300c:	ldr	r0, [sp, #4]
   13010:	ldr	r0, [r0, #8]
   13014:	bl	107e0 <free@plt>
   13018:	ldr	r0, [sp, #4]
   1301c:	movw	r1, #0
   13020:	str	r1, [r0, #8]
   13024:	mov	sp, fp
   13028:	pop	{fp, pc}
   1302c:	push	{fp, lr}
   13030:	mov	fp, sp
   13034:	sub	sp, sp, #16
   13038:	str	r0, [fp, #-4]
   1303c:	movw	r0, #0
   13040:	str	r0, [sp, #4]
   13044:	ldr	r1, [fp, #-4]
   13048:	ldr	r1, [r1, #8]
   1304c:	cmp	r1, r0
   13050:	bne	13064 <error@@Base+0x1ca8>
   13054:	ldr	r0, [fp, #-4]
   13058:	ldr	r0, [r0, #12]
   1305c:	cmp	r0, #0
   13060:	bne	13068 <error@@Base+0x1cac>
   13064:	b	130e0 <error@@Base+0x1d24>
   13068:	ldr	r0, [pc, #120]	; 130e8 <error@@Base+0x1d2c>
   1306c:	ldr	r0, [pc, r0]
   13070:	ldr	r1, [fp, #-4]
   13074:	ldr	r1, [r1, #12]
   13078:	str	r0, [sp]
   1307c:	mov	r0, r1
   13080:	movw	r1, #4
   13084:	ldr	r2, [sp]
   13088:	blx	r2
   1308c:	ldr	r1, [fp, #-4]
   13090:	str	r0, [r1, #8]
   13094:	ldr	r0, [fp, #-4]
   13098:	ldr	r0, [r0]
   1309c:	str	r0, [sp, #8]
   130a0:	ldr	r0, [sp, #8]
   130a4:	movw	r1, #0
   130a8:	cmp	r0, r1
   130ac:	beq	130e0 <error@@Base+0x1d24>
   130b0:	ldr	r0, [sp, #8]
   130b4:	ldr	r1, [fp, #-4]
   130b8:	ldr	r1, [r1, #8]
   130bc:	ldr	r2, [sp, #4]
   130c0:	add	r3, r2, #1
   130c4:	str	r3, [sp, #4]
   130c8:	add	r1, r1, r2, lsl #2
   130cc:	str	r0, [r1]
   130d0:	ldr	r0, [sp, #8]
   130d4:	ldr	r0, [r0, #4]
   130d8:	str	r0, [sp, #8]
   130dc:	b	130a0 <error@@Base+0x1ce4>
   130e0:	mov	sp, fp
   130e4:	pop	{fp, pc}
   130e8:	andeq	r1, r1, r8, asr r0
   130ec:	push	{fp, lr}
   130f0:	mov	fp, sp
   130f4:	sub	sp, sp, #16
   130f8:	str	r0, [fp, #-4]
   130fc:	str	r1, [sp, #8]
   13100:	ldr	r0, [fp, #-4]
   13104:	ldr	r0, [r0]
   13108:	movw	r1, #0
   1310c:	cmp	r0, r1
   13110:	beq	13148 <error@@Base+0x1d8c>
   13114:	ldr	r0, [fp, #-4]
   13118:	ldr	r0, [r0]
   1311c:	str	r0, [sp, #4]
   13120:	ldr	r0, [fp, #-4]
   13124:	ldr	r1, [sp, #4]
   13128:	bl	12f24 <error@@Base+0x1b68>
   1312c:	ldr	r0, [sp, #8]
   13130:	ldr	r1, [sp, #4]
   13134:	str	r0, [sp]
   13138:	mov	r0, r1
   1313c:	ldr	r1, [sp]
   13140:	blx	r1
   13144:	b	13100 <error@@Base+0x1d44>
   13148:	mov	sp, fp
   1314c:	pop	{fp, pc}
   13150:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13154:	mov	r7, r0
   13158:	ldr	r6, [pc, #72]	; 131a8 <error@@Base+0x1dec>
   1315c:	ldr	r5, [pc, #72]	; 131ac <error@@Base+0x1df0>
   13160:	add	r6, pc, r6
   13164:	add	r5, pc, r5
   13168:	sub	r6, r6, r5
   1316c:	mov	r8, r1
   13170:	mov	r9, r2
   13174:	bl	1079c <calloc@plt-0x20>
   13178:	asrs	r6, r6, #2
   1317c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13180:	mov	r4, #0
   13184:	add	r4, r4, #1
   13188:	ldr	r3, [r5], #4
   1318c:	mov	r2, r9
   13190:	mov	r1, r8
   13194:	mov	r0, r7
   13198:	blx	r3
   1319c:	cmp	r6, r4
   131a0:	bne	13184 <error@@Base+0x1dc8>
   131a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131a8:	muleq	r1, r4, sp
   131ac:	andeq	r0, r1, ip, lsl #27
   131b0:	bx	lr
   131b4:	mov	r2, r1
   131b8:	mov	r1, r0
   131bc:	mov	r0, #3
   131c0:	b	10804 <__xstat@plt>

Disassembly of section .fini:

000131c4 <.fini>:
   131c4:	push	{r3, lr}
   131c8:	pop	{r3, pc}
