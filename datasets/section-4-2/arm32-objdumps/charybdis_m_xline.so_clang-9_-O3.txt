
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000c54 <_init>:
 c54:	push	{r3, lr}
 c58:	bl	e3c <call_weak_fn>
 c5c:	pop	{r3, pc}

Disassembly of section .plt:

00000c60 <.plt>:
 c60:	push	{lr}		; (str lr, [sp, #-4]!)
 c64:	ldr	lr, [pc, #4]	; c70 <.plt+0x10>
 c68:	add	lr, pc, lr
 c6c:	ldr	pc, [lr, #8]!
 c70:	.word	0x00012390

00000c74 <propagate_generic@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #912]!	; 0x390

00000c80 <make_conf@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #904]!	; 0x388

00000c8c <rb_current_time@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #896]!	; 0x380

00000c98 <sendto_match_servs@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #888]!	; 0x378

00000ca4 <__cxa_finalize@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #880]!	; 0x370

00000cb0 <strtol@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #872]!	; 0x368

00000cbc <sendto_one@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #864]!	; 0x360

00000cc8 <replace_old_ban@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #856]!	; 0x358

00000cd4 <rb_outofmemory@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #848]!	; 0x350

00000ce0 <operhash_delete@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #840]!	; 0x348

00000cec <sendto_realops_snomask@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #832]!	; 0x340

00000cf8 <bandb_add@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #824]!	; 0x338

00000d04 <deactivate_conf@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #816]!	; 0x330

00000d10 <check_xlines@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #808]!	; 0x328

00000d1c <get_oper_name@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #800]!	; 0x320

00000d28 <rb_free_rb_dlink_node@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #792]!	; 0x318

00000d34 <cluster_generic@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #784]!	; 0x310

00000d40 <operhash_add@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #776]!	; 0x308

00000d4c <strcpy@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #768]!	; 0x300

00000d58 <sendto_server@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #760]!	; 0x2f8

00000d64 <malloc@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00000d70 <__gmon_start__@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #744]!	; 0x2e8

00000d7c <free_conf@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #736]!	; 0x2e0

00000d88 <rb_make_rb_dlink_node@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #728]!	; 0x2d8

00000d94 <strlen@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00000da0 <find_xline_mask@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #73728	; 0x12000
 da8:	ldr	pc, [ip, #712]!	; 0x2c8

00000dac <ilog@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #73728	; 0x12000
 db4:	ldr	pc, [ip, #704]!	; 0x2c0

00000db8 <collapse@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #73728	; 0x12000
 dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00000dc4 <match@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #73728	; 0x12000
 dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00000dd0 <valid_temp_time@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #73728	; 0x12000
 dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00000ddc <remove_reject_mask@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #73728	; 0x12000
 de4:	ldr	pc, [ip, #672]!	; 0x2a0

00000de8 <sendto_one_notice@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #73728	; 0x12000
 df0:	ldr	pc, [ip, #664]!	; 0x298

00000df4 <bandb_del@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #73728	; 0x12000
 dfc:	ldr	pc, [ip, #656]!	; 0x290

00000e00 <valid_wild_card_simple@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #73728	; 0x12000
 e08:	ldr	pc, [ip, #648]!	; 0x288

00000e0c <find_shared_conf@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #73728	; 0x12000
 e14:	ldr	pc, [ip, #640]!	; 0x280

00000e18 <privilegeset_in_set@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #73728	; 0x12000
 e20:	ldr	pc, [ip, #632]!	; 0x278

00000e24 <irccmp@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #73728	; 0x12000
 e2c:	ldr	pc, [ip, #624]!	; 0x270

00000e30 <__assert_fail@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #73728	; 0x12000
 e38:	ldr	pc, [ip, #616]!	; 0x268

Disassembly of section .text:

00000e3c <call_weak_fn>:
     e3c:	ldr	r3, [pc, #20]	; e58 <call_weak_fn+0x1c>
     e40:	ldr	r2, [pc, #20]	; e5c <call_weak_fn+0x20>
     e44:	add	r3, pc, r3
     e48:	ldr	r2, [r3, r2]
     e4c:	cmp	r2, #0
     e50:	bxeq	lr
     e54:	b	d70 <__gmon_start__@plt>
     e58:	.word	0x000121b4
     e5c:	.word	0x000000c0

00000e60 <deregister_tm_clones>:
     e60:	ldr	r0, [pc, #44]	; e94 <deregister_tm_clones+0x34>
     e64:	ldr	r3, [pc, #44]	; e98 <deregister_tm_clones+0x38>
     e68:	add	r0, pc, r0
     e6c:	add	r3, pc, r3
     e70:	cmp	r3, r0
     e74:	ldr	r3, [pc, #32]	; e9c <deregister_tm_clones+0x3c>
     e78:	add	r3, pc, r3
     e7c:	bxeq	lr
     e80:	ldr	r2, [pc, #24]	; ea0 <deregister_tm_clones+0x40>
     e84:	ldr	r3, [r3, r2]
     e88:	cmp	r3, #0
     e8c:	bxeq	lr
     e90:	bx	r3
     e94:	.word	0x00012328
     e98:	.word	0x00012324
     e9c:	.word	0x00012180
     ea0:	.word	0x000000a8

00000ea4 <register_tm_clones>:
     ea4:	ldr	r0, [pc, #56]	; ee4 <register_tm_clones+0x40>
     ea8:	ldr	r3, [pc, #56]	; ee8 <register_tm_clones+0x44>
     eac:	add	r0, pc, r0
     eb0:	add	r3, pc, r3
     eb4:	sub	r1, r3, r0
     eb8:	ldr	r3, [pc, #44]	; eec <register_tm_clones+0x48>
     ebc:	asr	r1, r1, #2
     ec0:	add	r3, pc, r3
     ec4:	add	r1, r1, r1, lsr #31
     ec8:	asrs	r1, r1, #1
     ecc:	bxeq	lr
     ed0:	ldr	r2, [pc, #24]	; ef0 <register_tm_clones+0x4c>
     ed4:	ldr	r3, [r3, r2]
     ed8:	cmp	r3, #0
     edc:	bxeq	lr
     ee0:	bx	r3
     ee4:	.word	0x000122e4
     ee8:	.word	0x000122e0
     eec:	.word	0x00012138
     ef0:	.word	0x000000c8

00000ef4 <__do_global_dtors_aux>:
     ef4:	ldr	r3, [pc, #76]	; f48 <__do_global_dtors_aux+0x54>
     ef8:	ldr	r2, [pc, #76]	; f4c <__do_global_dtors_aux+0x58>
     efc:	add	r3, pc, r3
     f00:	add	r2, pc, r2
     f04:	ldrb	r3, [r3]
     f08:	cmp	r3, #0
     f0c:	bxne	lr
     f10:	ldr	r3, [pc, #56]	; f50 <__do_global_dtors_aux+0x5c>
     f14:	push	{r4, lr}
     f18:	ldr	r3, [r2, r3]
     f1c:	cmp	r3, #0
     f20:	beq	f30 <__do_global_dtors_aux+0x3c>
     f24:	ldr	r3, [pc, #40]	; f54 <__do_global_dtors_aux+0x60>
     f28:	ldr	r0, [pc, r3]
     f2c:	bl	ca4 <__cxa_finalize@plt>
     f30:	bl	e60 <deregister_tm_clones>
     f34:	ldr	r3, [pc, #28]	; f58 <__do_global_dtors_aux+0x64>
     f38:	mov	r2, #1
     f3c:	add	r3, pc, r3
     f40:	strb	r2, [r3]
     f44:	pop	{r4, pc}
     f48:	.word	0x00012294
     f4c:	.word	0x000120f8
     f50:	.word	0x000000a4
     f54:	.word	0x000121a8
     f58:	.word	0x00012254

00000f5c <frame_dummy>:
     f5c:	b	ea4 <register_tm_clones>

00000f60 <ms_xline>:
     f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f64:	add	fp, sp, #28
     f68:	sub	sp, sp, #20
     f6c:	ldr	r8, [pc, #488]	; 115c <ms_xline+0x1fc>
     f70:	mov	r9, r2
     f74:	mov	r3, #0
     f78:	mov	sl, #0
     f7c:	ldr	r8, [pc, r8]
     f80:	ldr	r7, [fp, #8]
     f84:	ldr	r2, [r8]
     f88:	ldr	r5, [r7, #4]
     f8c:	ldr	r4, [r7, #8]
     f90:	ldr	r0, [r7, #12]
     f94:	ldr	r6, [r7, #16]
     f98:	ldr	r1, [pc, #448]	; 1160 <ms_xline+0x200>
     f9c:	add	r1, pc, r1
     fa0:	stm	sp, {r1, r5}
     fa4:	str	r0, [sp, #12]
     fa8:	mov	r0, r9
     fac:	mov	r1, r5
     fb0:	str	r4, [sp, #8]
     fb4:	str	r6, [sp, #16]
     fb8:	bl	c98 <sendto_match_servs@plt>
     fbc:	ldr	r3, [r8]
     fc0:	ldr	r0, [pc, #412]	; 1164 <ms_xline+0x204>
     fc4:	mov	r1, r5
     fc8:	ldr	r0, [pc, r0]
     fcc:	ldr	r2, [r0]
     fd0:	ldr	r0, [pc, #400]	; 1168 <ms_xline+0x208>
     fd4:	add	r0, pc, r0
     fd8:	stm	sp, {r0, r5, sl}
     fdc:	mov	r0, r9
     fe0:	str	r4, [sp, #12]
     fe4:	str	r6, [sp, #16]
     fe8:	bl	c98 <sendto_match_servs@plt>
     fec:	ldrh	r0, [r9, #80]	; 0x50
     ff0:	cmp	r0, #64	; 0x40
     ff4:	bne	1154 <ms_xline+0x1f4>
     ff8:	ldr	r0, [r9, #24]
     ffc:	cmp	r0, #0
    1000:	beq	1154 <ms_xline+0x1f4>
    1004:	ldr	r0, [r7, #4]
    1008:	ldr	r5, [pc, #348]	; 116c <ms_xline+0x20c>
    100c:	ldr	r5, [pc, r5]
    1010:	add	r6, r5, #88	; 0x58
    1014:	mov	r1, r6
    1018:	bl	dc4 <match@plt>
    101c:	cmp	r0, #0
    1020:	beq	1154 <ms_xline+0x1f4>
    1024:	ldr	r2, [r9, #32]
    1028:	ldr	r8, [r7, #8]
    102c:	ldr	r7, [r7, #16]
    1030:	add	r0, r9, #152	; 0x98
    1034:	add	r1, r9, #163	; 0xa3
    1038:	mov	r3, #32
    103c:	add	r2, r2, #88	; 0x58
    1040:	bl	e0c <find_shared_conf@plt>
    1044:	cmp	r0, #0
    1048:	beq	1154 <ms_xline+0x1f4>
    104c:	cmp	r7, #0
    1050:	beq	10a8 <ms_xline+0x148>
    1054:	ldrb	r0, [r7]
    1058:	cmp	r0, #0
    105c:	beq	10a8 <ms_xline+0x148>
    1060:	mov	r0, r8
    1064:	bl	e00 <valid_wild_card_simple@plt>
    1068:	cmp	r0, #0
    106c:	beq	1114 <ms_xline+0x1b4>
    1070:	mov	r0, r8
    1074:	bl	da0 <find_xline_mask@plt>
    1078:	cmp	r0, #0
    107c:	beq	1138 <ms_xline+0x1d8>
    1080:	ldr	r3, [r0, #16]
    1084:	ldr	r0, [r0, #20]
    1088:	mov	r2, r8
    108c:	str	r0, [sp]
    1090:	mov	r0, r9
    1094:	ldr	r1, [pc, #228]	; 1180 <ms_xline+0x220>
    1098:	add	r1, pc, r1
    109c:	bl	de8 <sendto_one_notice@plt>
    10a0:	sub	sp, fp, #28
    10a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10a8:	ldr	r0, [r9, #36]	; 0x24
    10ac:	ldrh	r1, [r0, #80]	; 0x50
    10b0:	cmp	r1, #32
    10b4:	bne	10e8 <ms_xline+0x188>
    10b8:	ldrb	r0, [r0, #396]	; 0x18c
    10bc:	cmp	r0, #0
    10c0:	beq	10e8 <ms_xline+0x188>
    10c4:	mov	r3, r9
    10c8:	ldrb	r0, [r3, #396]!	; 0x18c
    10cc:	cmp	r0, #0
    10d0:	ldrb	r0, [r5, #396]!	; 0x18c
    10d4:	subeq	r3, r3, #308	; 0x134
    10d8:	cmp	r0, #0
    10dc:	subeq	r5, r5, #308	; 0x134
    10e0:	mov	r6, r5
    10e4:	b	10ec <ms_xline+0x18c>
    10e8:	add	r3, r9, #88	; 0x58
    10ec:	ldr	r0, [pc, #124]	; 1170 <ms_xline+0x210>
    10f0:	mov	r2, r6
    10f4:	add	r0, pc, r0
    10f8:	str	r0, [sp]
    10fc:	mov	r0, r9
    1100:	ldr	r1, [pc, #108]	; 1174 <ms_xline+0x214>
    1104:	add	r1, pc, r1
    1108:	bl	cbc <sendto_one@plt>
    110c:	sub	sp, fp, #28
    1110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1114:	ldr	r0, [pc, #92]	; 1178 <ms_xline+0x218>
    1118:	ldr	r0, [pc, r0]
    111c:	ldr	r2, [r0, #240]	; 0xf0
    1120:	ldr	r1, [pc, #84]	; 117c <ms_xline+0x21c>
    1124:	mov	r0, r9
    1128:	add	r1, pc, r1
    112c:	sub	sp, fp, #28
    1130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1134:	b	de8 <sendto_one_notice@plt>
    1138:	mov	r0, #0
    113c:	mov	r1, r8
    1140:	mov	r2, r7
    1144:	mov	r3, #0
    1148:	str	r0, [sp]
    114c:	mov	r0, r9
    1150:	bl	1b84 <apply_xline>
    1154:	sub	sp, fp, #28
    1158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    115c:	.word	0x00012130
    1160:	.word	0x000014cb
    1164:	.word	0x00012100
    1168:	.word	0x000014a6
    116c:	.word	0x000120b8
    1170:	.word	0x000012ae
    1174:	.word	0x000012e8
    1178:	.word	0x00011fb4
    117c:	.word	0x000013b5
    1180:	.word	0x00001389

00001184 <me_xline>:
    1184:	push	{r4, r5, r6, r7, fp, lr}
    1188:	add	fp, sp, #16
    118c:	sub	sp, sp, #8
    1190:	ldrh	r0, [r2, #80]	; 0x50
    1194:	cmp	r0, #64	; 0x40
    1198:	bne	1308 <me_xline+0x184>
    119c:	ldr	r0, [r2, #24]
    11a0:	mov	r4, r2
    11a4:	cmp	r0, #0
    11a8:	beq	1308 <me_xline+0x184>
    11ac:	ldr	r7, [fp, #8]
    11b0:	mov	r1, #0
    11b4:	mov	r2, #10
    11b8:	ldr	r0, [r7, #4]
    11bc:	bl	cb0 <strtol@plt>
    11c0:	ldr	r2, [r4, #32]
    11c4:	ldr	r5, [r7, #8]
    11c8:	ldr	r7, [r7, #16]
    11cc:	cmp	r0, #0
    11d0:	mov	r3, #32
    11d4:	mov	r6, r0
    11d8:	add	r0, r4, #152	; 0x98
    11dc:	add	r1, r4, #163	; 0xa3
    11e0:	movwgt	r3, #16
    11e4:	add	r2, r2, #88	; 0x58
    11e8:	bl	e0c <find_shared_conf@plt>
    11ec:	cmp	r0, #0
    11f0:	beq	1308 <me_xline+0x184>
    11f4:	cmp	r7, #0
    11f8:	beq	1250 <me_xline+0xcc>
    11fc:	ldrb	r0, [r7]
    1200:	cmp	r0, #0
    1204:	beq	1250 <me_xline+0xcc>
    1208:	mov	r0, r5
    120c:	bl	e00 <valid_wild_card_simple@plt>
    1210:	cmp	r0, #0
    1214:	beq	12c8 <me_xline+0x144>
    1218:	mov	r0, r5
    121c:	bl	da0 <find_xline_mask@plt>
    1220:	cmp	r0, #0
    1224:	beq	12ec <me_xline+0x168>
    1228:	ldr	r3, [r0, #16]
    122c:	ldr	r0, [r0, #20]
    1230:	mov	r2, r5
    1234:	str	r0, [sp]
    1238:	mov	r0, r4
    123c:	ldr	r1, [pc, #228]	; 1328 <me_xline+0x1a4>
    1240:	add	r1, pc, r1
    1244:	bl	de8 <sendto_one_notice@plt>
    1248:	sub	sp, fp, #16
    124c:	pop	{r4, r5, r6, r7, fp, pc}
    1250:	ldr	r0, [r4, #36]	; 0x24
    1254:	ldrh	r1, [r0, #80]	; 0x50
    1258:	cmp	r1, #32
    125c:	bne	1294 <me_xline+0x110>
    1260:	ldrb	r0, [r0, #396]	; 0x18c
    1264:	cmp	r0, #0
    1268:	beq	1294 <me_xline+0x110>
    126c:	mov	r3, r4
    1270:	ldrb	r0, [r3, #396]!	; 0x18c
    1274:	ldr	r2, [pc, #148]	; 1310 <me_xline+0x18c>
    1278:	ldr	r2, [pc, r2]
    127c:	cmp	r0, #0
    1280:	subeq	r3, r3, #308	; 0x134
    1284:	ldrb	r0, [r2, #396]!	; 0x18c
    1288:	cmp	r0, #0
    128c:	subeq	r2, r2, #308	; 0x134
    1290:	b	12a4 <me_xline+0x120>
    1294:	ldr	r0, [pc, #120]	; 1314 <me_xline+0x190>
    1298:	add	r3, r4, #88	; 0x58
    129c:	ldr	r0, [pc, r0]
    12a0:	add	r2, r0, #88	; 0x58
    12a4:	ldr	r0, [pc, #108]	; 1318 <me_xline+0x194>
    12a8:	add	r0, pc, r0
    12ac:	str	r0, [sp]
    12b0:	mov	r0, r4
    12b4:	ldr	r1, [pc, #96]	; 131c <me_xline+0x198>
    12b8:	add	r1, pc, r1
    12bc:	bl	cbc <sendto_one@plt>
    12c0:	sub	sp, fp, #16
    12c4:	pop	{r4, r5, r6, r7, fp, pc}
    12c8:	ldr	r0, [pc, #80]	; 1320 <me_xline+0x19c>
    12cc:	ldr	r0, [pc, r0]
    12d0:	ldr	r2, [r0, #240]	; 0xf0
    12d4:	ldr	r1, [pc, #72]	; 1324 <me_xline+0x1a0>
    12d8:	mov	r0, r4
    12dc:	add	r1, pc, r1
    12e0:	sub	sp, fp, #16
    12e4:	pop	{r4, r5, r6, r7, fp, lr}
    12e8:	b	de8 <sendto_one_notice@plt>
    12ec:	mov	r0, #0
    12f0:	mov	r1, r5
    12f4:	mov	r2, r7
    12f8:	mov	r3, r6
    12fc:	str	r0, [sp]
    1300:	mov	r0, r4
    1304:	bl	1b84 <apply_xline>
    1308:	sub	sp, fp, #16
    130c:	pop	{r4, r5, r6, r7, fp, pc}
    1310:	.word	0x00011e4c
    1314:	.word	0x00011e28
    1318:	.word	0x000010fa
    131c:	.word	0x00001134
    1320:	.word	0x00011e00
    1324:	.word	0x00001201
    1328:	.word	0x000011e1

0000132c <mo_xline>:
    132c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1330:	add	fp, sp, #28
    1334:	sub	sp, sp, #36	; 0x24
    1338:	ldr	r0, [r2, #24]
    133c:	ldr	r1, [pc, #1284]	; 1848 <mo_xline+0x51c>
    1340:	mov	r4, r2
    1344:	ldr	r1, [pc, r1]
    1348:	ldr	r5, [r1, #324]	; 0x144
    134c:	cmp	r5, #0
    1350:	mov	r8, r5
    1354:	movwne	r8, #1
    1358:	cmp	r0, #0
    135c:	beq	1460 <mo_xline+0x134>
    1360:	ldr	r0, [r0, #36]	; 0x24
    1364:	cmp	r0, #0
    1368:	beq	1460 <mo_xline+0x134>
    136c:	ldr	r9, [fp, #8]
    1370:	ldr	r1, [pc, #1236]	; 184c <mo_xline+0x520>
    1374:	mov	r7, r3
    1378:	add	r1, pc, r1
    137c:	bl	e18 <privilegeset_in_set@plt>
    1380:	cmp	r0, #0
    1384:	beq	1460 <mo_xline+0x134>
    1388:	ldr	r0, [r9, #4]
    138c:	bl	dd0 <valid_temp_time@plt>
    1390:	mov	r1, #0
    1394:	cmn	r0, #1
    1398:	mov	sl, #1
    139c:	movle	r0, r1
    13a0:	movwgt	sl, #2
    13a4:	str	r0, [sp, #28]
    13a8:	ldr	r0, [r9, sl, lsl #2]
    13ac:	add	r6, sl, #1
    13b0:	str	r0, [sp, #32]
    13b4:	add	r0, sl, #3
    13b8:	cmp	r0, r7
    13bc:	bgt	13e0 <mo_xline+0xb4>
    13c0:	str	r0, [sp, #24]
    13c4:	ldr	r0, [r9, r6, lsl #2]
    13c8:	ldr	r1, [pc, #1164]	; 185c <mo_xline+0x530>
    13cc:	add	r1, pc, r1
    13d0:	bl	e24 <irccmp@plt>
    13d4:	mov	r1, #0
    13d8:	cmp	r0, #0
    13dc:	beq	1494 <mo_xline+0x168>
    13e0:	cmp	r6, r7
    13e4:	bge	14d4 <mo_xline+0x1a8>
    13e8:	ldr	r7, [r9, r6, lsl #2]
    13ec:	cmp	r7, #0
    13f0:	beq	14d4 <mo_xline+0x1a8>
    13f4:	ldrb	r0, [r7]
    13f8:	cmp	r0, #0
    13fc:	beq	14d4 <mo_xline+0x1a8>
    1400:	cmp	r1, #0
    1404:	beq	1514 <mo_xline+0x1e8>
    1408:	ldr	r6, [sp, #28]
    140c:	ldr	sl, [pc, #1116]	; 1870 <mo_xline+0x544>
    1410:	ldr	sl, [pc, sl]
    1414:	cmp	r6, #0
    1418:	beq	15cc <mo_xline+0x2a0>
    141c:	ldr	r0, [pc, #1124]	; 1888 <mo_xline+0x55c>
    1420:	mov	r8, r1
    1424:	ldr	r0, [pc, r0]
    1428:	ldr	r2, [r0]
    142c:	ldr	r0, [pc, #1112]	; 188c <mo_xline+0x560>
    1430:	ldr	r3, [pc, #1112]	; 1890 <mo_xline+0x564>
    1434:	add	r3, pc, r3
    1438:	add	r0, pc, r0
    143c:	str	r3, [sp]
    1440:	stmib	sp, {r1, r6}
    1444:	mov	r3, #0
    1448:	ldr	r5, [sp, #32]
    144c:	str	r0, [sp, #16]
    1450:	mov	r0, r4
    1454:	str	r7, [sp, #20]
    1458:	str	r5, [sp, #12]
    145c:	b	1640 <mo_xline+0x314>
    1460:	ldr	r0, [pc, #1000]	; 1850 <mo_xline+0x524>
    1464:	add	r0, pc, r0
    1468:	str	r0, [sp]
    146c:	add	r3, r4, #88	; 0x58
    1470:	ldr	r0, [pc, #988]	; 1854 <mo_xline+0x528>
    1474:	ldr	r0, [pc, r0]
    1478:	ldr	r1, [pc, #984]	; 1858 <mo_xline+0x52c>
    147c:	add	r2, r0, #88	; 0x58
    1480:	add	r1, pc, r1
    1484:	mov	r0, r4
    1488:	bl	cbc <sendto_one@plt>
    148c:	sub	sp, fp, #28
    1490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1494:	ldr	r0, [r4, #24]
    1498:	cmp	r0, #0
    149c:	beq	1508 <mo_xline+0x1dc>
    14a0:	ldr	r0, [r0, #36]	; 0x24
    14a4:	cmp	r0, #0
    14a8:	beq	1508 <mo_xline+0x1dc>
    14ac:	ldr	r1, [pc, #940]	; 1860 <mo_xline+0x534>
    14b0:	add	r1, pc, r1
    14b4:	bl	e18 <privilegeset_in_set@plt>
    14b8:	cmp	r0, #0
    14bc:	beq	1508 <mo_xline+0x1dc>
    14c0:	add	r0, r9, sl, lsl #2
    14c4:	ldr	r6, [sp, #24]
    14c8:	ldr	r1, [r0, #8]
    14cc:	cmp	r6, r7
    14d0:	blt	13e8 <mo_xline+0xbc>
    14d4:	ldr	r0, [pc, #908]	; 1868 <mo_xline+0x53c>
    14d8:	add	r3, r4, #88	; 0x58
    14dc:	add	r0, pc, r0
    14e0:	str	r0, [sp]
    14e4:	ldr	r0, [pc, #896]	; 186c <mo_xline+0x540>
    14e8:	ldr	r0, [pc, r0]
    14ec:	add	r2, r0, #88	; 0x58
    14f0:	ldr	r1, [pc, #984]	; 18d0 <mo_xline+0x5a4>
    14f4:	add	r1, pc, r1
    14f8:	mov	r0, r4
    14fc:	bl	cbc <sendto_one@plt>
    1500:	sub	sp, fp, #28
    1504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1508:	ldr	r0, [pc, #852]	; 1864 <mo_xline+0x538>
    150c:	add	r0, pc, r0
    1510:	b	1468 <mo_xline+0x13c>
    1514:	ldr	r0, [pc, #892]	; 1898 <mo_xline+0x56c>
    1518:	ldr	r0, [pc, r0]
    151c:	ldr	r1, [r0, #8]
    1520:	ldr	sl, [pc, #884]	; 189c <mo_xline+0x570>
    1524:	ldr	sl, [pc, sl]
    1528:	ldr	r6, [sp, #28]
    152c:	cmp	r1, #0
    1530:	beq	170c <mo_xline+0x3e0>
    1534:	cmp	r5, #0
    1538:	bne	170c <mo_xline+0x3e0>
    153c:	ldr	r5, [r0]
    1540:	cmp	r5, #0
    1544:	beq	170c <mo_xline+0x3e0>
    1548:	cmp	r6, #0
    154c:	beq	166c <mo_xline+0x340>
    1550:	ldr	r9, [pc, #840]	; 18a0 <mo_xline+0x574>
    1554:	ldr	r9, [pc, r9]
    1558:	ldr	r6, [pc, #836]	; 18a4 <mo_xline+0x578>
    155c:	add	r6, pc, r6
    1560:	ldr	r0, [r5]
    1564:	ldrb	r1, [r0, #12]
    1568:	tst	r1, #16
    156c:	bne	158c <mo_xline+0x260>
    1570:	ldr	r5, [r5, #8]
    1574:	cmp	r5, #0
    1578:	beq	1708 <mo_xline+0x3dc>
    157c:	ldr	r0, [r5]
    1580:	ldrb	r1, [r0, #12]
    1584:	tst	r1, #16
    1588:	beq	1570 <mo_xline+0x244>
    158c:	ldr	r1, [r0, #8]
    1590:	ldr	r2, [r9]
    1594:	str	r6, [sp]
    1598:	mov	r3, #0
    159c:	str	r1, [sp, #4]
    15a0:	ldr	r0, [sp, #28]
    15a4:	str	r0, [sp, #8]
    15a8:	ldr	r0, [sp, #32]
    15ac:	str	r7, [sp, #16]
    15b0:	str	r0, [sp, #12]
    15b4:	mov	r0, r4
    15b8:	bl	c98 <sendto_match_servs@plt>
    15bc:	ldr	r5, [r5, #8]
    15c0:	cmp	r5, #0
    15c4:	bne	157c <mo_xline+0x250>
    15c8:	b	1708 <mo_xline+0x3dc>
    15cc:	ldr	r9, [pc, #672]	; 1874 <mo_xline+0x548>
    15d0:	mov	r8, r1
    15d4:	ldr	r9, [pc, r9]
    15d8:	ldr	r2, [r9]
    15dc:	ldr	r0, [pc, #660]	; 1878 <mo_xline+0x54c>
    15e0:	ldr	r3, [pc, #660]	; 187c <mo_xline+0x550>
    15e4:	str	r1, [sp, #4]
    15e8:	add	r3, pc, r3
    15ec:	add	r0, pc, r0
    15f0:	str	r3, [sp]
    15f4:	mov	r3, #0
    15f8:	ldr	r5, [sp, #32]
    15fc:	str	r0, [sp, #12]
    1600:	mov	r0, r4
    1604:	str	r7, [sp, #16]
    1608:	str	r5, [sp, #8]
    160c:	bl	c98 <sendto_match_servs@plt>
    1610:	ldr	r3, [r9]
    1614:	ldr	r0, [pc, #612]	; 1880 <mo_xline+0x554>
    1618:	add	r1, sp, #8
    161c:	ldr	r0, [pc, r0]
    1620:	ldr	r2, [r0]
    1624:	ldr	r0, [pc, #600]	; 1884 <mo_xline+0x558>
    1628:	add	r0, pc, r0
    162c:	stm	sp, {r0, r8}
    1630:	mov	r0, #0
    1634:	stm	r1, {r0, r5, r7}
    1638:	mov	r0, r4
    163c:	mov	r1, r8
    1640:	bl	c98 <sendto_match_servs@plt>
    1644:	ldr	r0, [pc, #584]	; 1894 <mo_xline+0x568>
    1648:	ldr	r0, [pc, r0]
    164c:	add	r1, r0, #88	; 0x58
    1650:	mov	r0, r8
    1654:	bl	dc4 <match@plt>
    1658:	mov	r8, #0
    165c:	cmp	r0, #0
    1660:	bne	1710 <mo_xline+0x3e4>
    1664:	sub	sp, fp, #28
    1668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    166c:	ldr	r6, [pc, #564]	; 18a8 <mo_xline+0x57c>
    1670:	ldr	r6, [pc, r6]
    1674:	ldr	sl, [sp, #32]
    1678:	ldr	r9, [r5]
    167c:	ldrb	r0, [r9, #12]
    1680:	tst	r0, #32
    1684:	bne	16a4 <mo_xline+0x378>
    1688:	ldr	r5, [r5, #8]
    168c:	cmp	r5, #0
    1690:	beq	1700 <mo_xline+0x3d4>
    1694:	ldr	r9, [r5]
    1698:	ldrb	r0, [r9, #12]
    169c:	tst	r0, #32
    16a0:	beq	1688 <mo_xline+0x35c>
    16a4:	ldr	r2, [r6]
    16a8:	ldr	r1, [r9, #8]
    16ac:	ldr	r0, [pc, #504]	; 18ac <mo_xline+0x580>
    16b0:	mov	r3, #0
    16b4:	add	r0, pc, r0
    16b8:	stm	sp, {r0, r1, sl}
    16bc:	mov	r0, r4
    16c0:	str	r7, [sp, #12]
    16c4:	bl	c98 <sendto_match_servs@plt>
    16c8:	ldr	r3, [r6]
    16cc:	ldr	r0, [pc, #476]	; 18b0 <mo_xline+0x584>
    16d0:	ldr	r0, [pc, r0]
    16d4:	ldr	r1, [r9, #8]
    16d8:	ldr	r2, [r0]
    16dc:	ldr	r0, [pc, #464]	; 18b4 <mo_xline+0x588>
    16e0:	add	r0, pc, r0
    16e4:	stm	sp, {r0, r1, sl}
    16e8:	mov	r0, r4
    16ec:	str	r7, [sp, #12]
    16f0:	bl	c98 <sendto_match_servs@plt>
    16f4:	ldr	r5, [r5, #8]
    16f8:	cmp	r5, #0
    16fc:	bne	1694 <mo_xline+0x368>
    1700:	ldr	sl, [pc, #432]	; 18b8 <mo_xline+0x58c>
    1704:	ldr	sl, [pc, sl]
    1708:	ldr	r6, [sp, #28]
    170c:	ldr	r5, [sp, #32]
    1710:	mov	r0, r5
    1714:	bl	da0 <find_xline_mask@plt>
    1718:	cmp	r0, #0
    171c:	beq	175c <mo_xline+0x430>
    1720:	ldr	r1, [r0, #16]
    1724:	ldr	r0, [r0, #20]
    1728:	str	r5, [sp]
    172c:	add	r3, r4, #88	; 0x58
    1730:	str	r1, [sp, #4]
    1734:	str	r0, [sp, #8]
    1738:	ldr	r0, [pc, #380]	; 18bc <mo_xline+0x590>
    173c:	ldr	r0, [pc, r0]
    1740:	ldr	r1, [pc, #376]	; 18c0 <mo_xline+0x594>
    1744:	add	r2, r0, #88	; 0x58
    1748:	add	r1, pc, r1
    174c:	mov	r0, r4
    1750:	bl	cbc <sendto_one@plt>
    1754:	sub	sp, fp, #28
    1758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    175c:	ldrb	r0, [r7]
    1760:	cmp	r0, #0
    1764:	beq	17a8 <mo_xline+0x47c>
    1768:	mov	r0, r5
    176c:	bl	e00 <valid_wild_card_simple@plt>
    1770:	cmp	r0, #0
    1774:	beq	180c <mo_xline+0x4e0>
    1778:	cmp	r6, #0
    177c:	mov	r1, r6
    1780:	eor	r0, r8, #1
    1784:	movwne	r1, #1
    1788:	orrs	r0, r1, r0
    178c:	bne	1828 <mo_xline+0x4fc>
    1790:	ldr	r1, [pc, #320]	; 18d8 <mo_xline+0x5ac>
    1794:	mov	r0, r4
    1798:	add	r1, pc, r1
    179c:	sub	sp, fp, #28
    17a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    17a4:	b	de8 <sendto_one_notice@plt>
    17a8:	ldr	r0, [r4, #36]	; 0x24
    17ac:	ldrh	r1, [r0, #80]	; 0x50
    17b0:	cmp	r1, #32
    17b4:	bne	17ec <mo_xline+0x4c0>
    17b8:	ldrb	r0, [r0, #396]	; 0x18c
    17bc:	cmp	r0, #0
    17c0:	beq	17ec <mo_xline+0x4c0>
    17c4:	mov	r3, r4
    17c8:	ldrb	r0, [r3, #396]!	; 0x18c
    17cc:	ldr	r2, [pc, #240]	; 18c4 <mo_xline+0x598>
    17d0:	ldr	r2, [pc, r2]
    17d4:	cmp	r0, #0
    17d8:	subeq	r3, r3, #308	; 0x134
    17dc:	ldrb	r0, [r2, #396]!	; 0x18c
    17e0:	cmp	r0, #0
    17e4:	subeq	r2, r2, #308	; 0x134
    17e8:	b	17fc <mo_xline+0x4d0>
    17ec:	ldr	r0, [pc, #212]	; 18c8 <mo_xline+0x59c>
    17f0:	add	r3, r4, #88	; 0x58
    17f4:	ldr	r0, [pc, r0]
    17f8:	add	r2, r0, #88	; 0x58
    17fc:	ldr	r0, [pc, #200]	; 18cc <mo_xline+0x5a0>
    1800:	add	r0, pc, r0
    1804:	str	r0, [sp]
    1808:	b	14f0 <mo_xline+0x1c4>
    180c:	ldr	r2, [sl, #240]	; 0xf0
    1810:	ldr	r1, [pc, #188]	; 18d4 <mo_xline+0x5a8>
    1814:	mov	r0, r4
    1818:	add	r1, pc, r1
    181c:	sub	sp, fp, #28
    1820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1824:	b	de8 <sendto_one_notice@plt>
    1828:	mov	r0, r4
    182c:	mov	r1, r5
    1830:	mov	r2, r7
    1834:	mov	r3, r6
    1838:	str	r8, [sp]
    183c:	bl	1b84 <apply_xline>
    1840:	sub	sp, fp, #28
    1844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1848:	.word	0x00011d88
    184c:	.word	0x00001030
    1850:	.word	0x000010b6
    1854:	.word	0x00011c50
    1858:	.word	0x00000f33
    185c:	.word	0x0000100e
    1860:	.word	0x00000f2d
    1864:	.word	0x00000ed6
    1868:	.word	0x00000ec6
    186c:	.word	0x00011bdc
    1870:	.word	0x00011cbc
    1874:	.word	0x00011ad8
    1878:	.word	0x00000e25
    187c:	.word	0x00000e7f
    1880:	.word	0x00011aac
    1884:	.word	0x00000e52
    1888:	.word	0x00011ca4
    188c:	.word	0x00000fd9
    1890:	.word	0x00001061
    1894:	.word	0x00011a7c
    1898:	.word	0x00011ba4
    189c:	.word	0x00011ba8
    18a0:	.word	0x00011b74
    18a4:	.word	0x00000f1e
    18a8:	.word	0x00011a3c
    18ac:	.word	0x00000dfd
    18b0:	.word	0x000119f8
    18b4:	.word	0x00000de3
    18b8:	.word	0x000119c8
    18bc:	.word	0x00011988
    18c0:	.word	0x00000ccb
    18c4:	.word	0x000118f4
    18c8:	.word	0x000118d0
    18cc:	.word	0x00000ba2
    18d0:	.word	0x00000ef8
    18d4:	.word	0x00000cc5
    18d8:	.word	0x00000cac

000018dc <ms_unxline>:
    18dc:	push	{r4, r5, fp, lr}
    18e0:	add	fp, sp, #8
    18e4:	sub	sp, sp, #8
    18e8:	ldr	r0, [pc, #172]	; 199c <ms_unxline+0xc0>
    18ec:	mov	r4, r2
    18f0:	ldr	r0, [pc, r0]
    18f4:	ldr	r5, [fp, #8]
    18f8:	ldr	r3, [r0]
    18fc:	ldr	r2, [r5, #4]
    1900:	ldr	r0, [r5, #8]
    1904:	ldr	r1, [pc, #148]	; 19a0 <ms_unxline+0xc4>
    1908:	add	r1, pc, r1
    190c:	str	r0, [sp, #4]
    1910:	mov	r0, r4
    1914:	str	r1, [sp]
    1918:	ldr	r1, [pc, #132]	; 19a4 <ms_unxline+0xc8>
    191c:	add	r1, pc, r1
    1920:	bl	c74 <propagate_generic@plt>
    1924:	ldr	r0, [r5, #4]
    1928:	ldr	r1, [pc, #120]	; 19a8 <ms_unxline+0xcc>
    192c:	ldr	r1, [pc, r1]
    1930:	add	r1, r1, #88	; 0x58
    1934:	bl	dc4 <match@plt>
    1938:	cmp	r0, #0
    193c:	beq	1994 <ms_unxline+0xb8>
    1940:	ldrh	r0, [r4, #80]	; 0x50
    1944:	cmp	r0, #64	; 0x40
    1948:	bne	1994 <ms_unxline+0xb8>
    194c:	ldr	r0, [r4, #24]
    1950:	cmp	r0, #0
    1954:	beq	1994 <ms_unxline+0xb8>
    1958:	ldr	r2, [r4, #32]
    195c:	ldr	r5, [r5, #8]
    1960:	add	r0, r4, #152	; 0x98
    1964:	add	r1, r4, #163	; 0xa3
    1968:	mov	r3, #64	; 0x40
    196c:	add	r2, r2, #88	; 0x58
    1970:	bl	e0c <find_shared_conf@plt>
    1974:	cmp	r0, #0
    1978:	beq	1994 <ms_unxline+0xb8>
    197c:	mov	r0, r4
    1980:	mov	r1, r5
    1984:	mov	r2, #0
    1988:	sub	sp, fp, #8
    198c:	pop	{r4, r5, fp, lr}
    1990:	b	1f94 <remove_xline>
    1994:	sub	sp, fp, #8
    1998:	pop	{r4, r5, fp, pc}
    199c:	.word	0x000117bc
    19a0:	.word	0x00000b39
    19a4:	.word	0x00000a84
    19a8:	.word	0x00011798

000019ac <me_unxline>:
    19ac:	push	{r4, r5, fp, lr}
    19b0:	add	fp, sp, #8
    19b4:	ldrh	r0, [r2, #80]	; 0x50
    19b8:	cmp	r0, #64	; 0x40
    19bc:	bne	1a0c <me_unxline+0x60>
    19c0:	ldr	r0, [r2, #24]
    19c4:	mov	r4, r2
    19c8:	cmp	r0, #0
    19cc:	popeq	{r4, r5, fp, pc}
    19d0:	ldr	r0, [fp, #8]
    19d4:	ldr	r2, [r4, #32]
    19d8:	add	r1, r4, #163	; 0xa3
    19dc:	mov	r3, #64	; 0x40
    19e0:	ldr	r5, [r0, #4]
    19e4:	add	r0, r4, #152	; 0x98
    19e8:	add	r2, r2, #88	; 0x58
    19ec:	bl	e0c <find_shared_conf@plt>
    19f0:	cmp	r0, #0
    19f4:	beq	1a0c <me_unxline+0x60>
    19f8:	mov	r0, r4
    19fc:	mov	r1, r5
    1a00:	mov	r2, #0
    1a04:	pop	{r4, r5, fp, lr}
    1a08:	b	1f94 <remove_xline>
    1a0c:	pop	{r4, r5, fp, pc}

00001a10 <mo_unxline>:
    1a10:	push	{r4, r5, r6, r7, fp, lr}
    1a14:	add	fp, sp, #16
    1a18:	sub	sp, sp, #8
    1a1c:	ldr	r0, [r2, #24]
    1a20:	mov	r4, r2
    1a24:	cmp	r0, #0
    1a28:	beq	1a90 <mo_unxline+0x80>
    1a2c:	ldr	r0, [r0, #36]	; 0x24
    1a30:	cmp	r0, #0
    1a34:	beq	1a90 <mo_unxline+0x80>
    1a38:	ldr	r7, [fp, #8]
    1a3c:	ldr	r1, [pc, #276]	; 1b58 <mo_unxline+0x148>
    1a40:	mov	r6, r3
    1a44:	add	r1, pc, r1
    1a48:	bl	e18 <privilegeset_in_set@plt>
    1a4c:	cmp	r0, #0
    1a50:	beq	1a90 <mo_unxline+0x80>
    1a54:	mov	r5, #1
    1a58:	cmp	r6, #4
    1a5c:	bne	1a78 <mo_unxline+0x68>
    1a60:	ldr	r0, [r7, #8]
    1a64:	ldr	r1, [pc, #252]	; 1b68 <mo_unxline+0x158>
    1a68:	add	r1, pc, r1
    1a6c:	bl	e24 <irccmp@plt>
    1a70:	cmp	r0, #0
    1a74:	beq	1ac4 <mo_unxline+0xb4>
    1a78:	ldr	r1, [r7, #4]
    1a7c:	mov	r0, r4
    1a80:	mov	r2, r5
    1a84:	sub	sp, fp, #16
    1a88:	pop	{r4, r5, r6, r7, fp, lr}
    1a8c:	b	1f94 <remove_xline>
    1a90:	ldr	r0, [pc, #196]	; 1b5c <mo_unxline+0x14c>
    1a94:	add	r0, pc, r0
    1a98:	str	r0, [sp]
    1a9c:	add	r3, r4, #88	; 0x58
    1aa0:	ldr	r0, [pc, #184]	; 1b60 <mo_unxline+0x150>
    1aa4:	ldr	r0, [pc, r0]
    1aa8:	ldr	r1, [pc, #180]	; 1b64 <mo_unxline+0x154>
    1aac:	add	r2, r0, #88	; 0x58
    1ab0:	add	r1, pc, r1
    1ab4:	mov	r0, r4
    1ab8:	bl	cbc <sendto_one@plt>
    1abc:	sub	sp, fp, #16
    1ac0:	pop	{r4, r5, r6, r7, fp, pc}
    1ac4:	ldr	r0, [r4, #24]
    1ac8:	cmp	r0, #0
    1acc:	beq	1b4c <mo_unxline+0x13c>
    1ad0:	ldr	r0, [r0, #36]	; 0x24
    1ad4:	cmp	r0, #0
    1ad8:	beq	1b4c <mo_unxline+0x13c>
    1adc:	ldr	r1, [pc, #136]	; 1b6c <mo_unxline+0x15c>
    1ae0:	add	r1, pc, r1
    1ae4:	bl	e18 <privilegeset_in_set@plt>
    1ae8:	cmp	r0, #0
    1aec:	beq	1b4c <mo_unxline+0x13c>
    1af0:	ldr	r0, [pc, #124]	; 1b74 <mo_unxline+0x164>
    1af4:	ldr	r0, [pc, r0]
    1af8:	ldr	r2, [r7, #12]
    1afc:	ldr	r3, [r0]
    1b00:	ldr	r0, [r7, #4]
    1b04:	ldr	r1, [pc, #108]	; 1b78 <mo_unxline+0x168>
    1b08:	add	r1, pc, r1
    1b0c:	str	r0, [sp, #4]
    1b10:	mov	r0, r4
    1b14:	str	r1, [sp]
    1b18:	ldr	r1, [pc, #92]	; 1b7c <mo_unxline+0x16c>
    1b1c:	add	r1, pc, r1
    1b20:	bl	c74 <propagate_generic@plt>
    1b24:	ldr	r0, [r7, #12]
    1b28:	ldr	r1, [pc, #80]	; 1b80 <mo_unxline+0x170>
    1b2c:	ldr	r1, [pc, r1]
    1b30:	add	r1, r1, #88	; 0x58
    1b34:	bl	dc4 <match@plt>
    1b38:	mov	r5, #0
    1b3c:	cmp	r0, #0
    1b40:	bne	1a78 <mo_unxline+0x68>
    1b44:	sub	sp, fp, #16
    1b48:	pop	{r4, r5, r6, r7, fp, pc}
    1b4c:	ldr	r0, [pc, #28]	; 1b70 <mo_unxline+0x160>
    1b50:	add	r0, pc, r0
    1b54:	b	1a98 <mo_unxline+0x88>
    1b58:	.word	0x00000964
    1b5c:	.word	0x00000a86
    1b60:	.word	0x00011620
    1b64:	.word	0x00000903
    1b68:	.word	0x00000972
    1b6c:	.word	0x000008fd
    1b70:	.word	0x00000892
    1b74:	.word	0x000115b8
    1b78:	.word	0x00000939
    1b7c:	.word	0x00000884
    1b80:	.word	0x00011598

00001b84 <apply_xline>:
    1b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1b88:	add	fp, sp, #28
    1b8c:	sub	sp, sp, #28
    1b90:	mov	r9, r3
    1b94:	mov	r8, r2
    1b98:	mov	r5, r1
    1b9c:	mov	sl, r0
    1ba0:	bl	c80 <make_conf@plt>
    1ba4:	mov	r4, r0
    1ba8:	mov	r0, #128	; 0x80
    1bac:	str	r0, [r4]
    1bb0:	bl	c8c <rb_current_time@plt>
    1bb4:	str	r0, [r4, #40]	; 0x28
    1bb8:	mov	r0, r5
    1bbc:	bl	d94 <strlen@plt>
    1bc0:	add	r0, r0, #1
    1bc4:	bl	d64 <malloc@plt>
    1bc8:	cmp	r0, #0
    1bcc:	beq	1f2c <apply_xline+0x3a8>
    1bd0:	ldr	r6, [fp, #8]
    1bd4:	mov	r1, r5
    1bd8:	bl	d4c <strcpy@plt>
    1bdc:	str	r0, [r4, #16]
    1be0:	mov	r0, r8
    1be4:	bl	d94 <strlen@plt>
    1be8:	add	r0, r0, #1
    1bec:	bl	d64 <malloc@plt>
    1bf0:	cmp	r0, #0
    1bf4:	beq	1f2c <apply_xline+0x3a8>
    1bf8:	mov	r1, r8
    1bfc:	bl	d4c <strcpy@plt>
    1c00:	str	r0, [r4, #20]
    1c04:	ldr	r0, [r4, #16]
    1c08:	bl	db8 <collapse@plt>
    1c0c:	mov	r0, sl
    1c10:	bl	d1c <get_oper_name@plt>
    1c14:	bl	d40 <operhash_add@plt>
    1c18:	cmp	r6, #0
    1c1c:	str	r0, [r4, #12]
    1c20:	beq	1c84 <apply_xline+0x100>
    1c24:	ldr	r0, [r4, #4]
    1c28:	orr	r0, r0, #8912896	; 0x880000
    1c2c:	str	r0, [r4, #4]
    1c30:	bl	c8c <rb_current_time@plt>
    1c34:	add	r0, r0, r9
    1c38:	str	r0, [r4, #44]	; 0x2c
    1c3c:	str	r0, [r4, #36]	; 0x24
    1c40:	mov	r0, r4
    1c44:	bl	cc8 <replace_old_ban@plt>
    1c48:	bl	d88 <rb_make_rb_dlink_node@plt>
    1c4c:	cmp	r0, #0
    1c50:	beq	1f30 <apply_xline+0x3ac>
    1c54:	mov	r1, #0
    1c58:	str	r1, [r0, #4]
    1c5c:	str	r4, [r0]
    1c60:	ldr	r1, [pc, #744]	; 1f50 <apply_xline+0x3cc>
    1c64:	ldr	r1, [pc, r1]
    1c68:	ldr	r2, [r1]
    1c6c:	cmp	r2, #0
    1c70:	str	r2, [r0, #8]
    1c74:	beq	1dc0 <apply_xline+0x23c>
    1c78:	add	r2, r2, #4
    1c7c:	str	r0, [r2]
    1c80:	b	1dd0 <apply_xline+0x24c>
    1c84:	cmp	r9, #1
    1c88:	blt	1d20 <apply_xline+0x19c>
    1c8c:	bl	c8c <rb_current_time@plt>
    1c90:	add	r0, r0, r9
    1c94:	str	r0, [r4, #36]	; 0x24
    1c98:	mov	r0, sl
    1c9c:	bl	d1c <get_oper_name@plt>
    1ca0:	movw	r1, #34953	; 0x8889
    1ca4:	mov	r3, r0
    1ca8:	ldr	r0, [r4, #16]
    1cac:	movt	r1, #34952	; 0x8888
    1cb0:	umull	r1, r2, r9, r1
    1cb4:	mov	r1, #0
    1cb8:	lsr	r6, r2, #5
    1cbc:	str	r6, [sp]
    1cc0:	stmib	sp, {r0, r8}
    1cc4:	mov	r0, #256	; 0x100
    1cc8:	ldr	r2, [pc, #668]	; 1f6c <apply_xline+0x3e8>
    1ccc:	add	r2, pc, r2
    1cd0:	bl	cec <sendto_realops_snomask@plt>
    1cd4:	mov	r0, sl
    1cd8:	bl	d1c <get_oper_name@plt>
    1cdc:	stm	sp, {r5, r8}
    1ce0:	mov	r2, r0
    1ce4:	mov	r0, #7
    1ce8:	mov	r3, r6
    1cec:	ldr	r1, [pc, #636]	; 1f70 <apply_xline+0x3ec>
    1cf0:	add	r1, pc, r1
    1cf4:	bl	dac <ilog@plt>
    1cf8:	ldr	r3, [r4, #16]
    1cfc:	ldr	r1, [pc, #624]	; 1f74 <apply_xline+0x3f0>
    1d00:	mov	r0, sl
    1d04:	mov	r2, r6
    1d08:	add	r1, pc, r1
    1d0c:	bl	de8 <sendto_one_notice@plt>
    1d10:	bl	d88 <rb_make_rb_dlink_node@plt>
    1d14:	cmp	r0, #0
    1d18:	bne	1ed0 <apply_xline+0x34c>
    1d1c:	b	1f30 <apply_xline+0x3ac>
    1d20:	mov	r0, sl
    1d24:	bl	d1c <get_oper_name@plt>
    1d28:	mov	r3, r0
    1d2c:	ldr	r0, [r4, #16]
    1d30:	ldr	r1, [r4, #20]
    1d34:	mov	r6, #0
    1d38:	stm	sp, {r0, r1}
    1d3c:	mov	r0, #256	; 0x100
    1d40:	mov	r1, #0
    1d44:	ldr	r2, [pc, #556]	; 1f78 <apply_xline+0x3f4>
    1d48:	add	r2, pc, r2
    1d4c:	bl	cec <sendto_realops_snomask@plt>
    1d50:	ldr	r2, [r4, #16]
    1d54:	ldr	r3, [r4, #20]
    1d58:	ldr	r1, [pc, #540]	; 1f7c <apply_xline+0x3f8>
    1d5c:	mov	r0, sl
    1d60:	add	r1, pc, r1
    1d64:	bl	de8 <sendto_one_notice@plt>
    1d68:	ldr	r0, [r4, #20]
    1d6c:	ldr	r2, [r4, #16]
    1d70:	mov	r1, sl
    1d74:	mov	r3, #0
    1d78:	stm	sp, {r0, r6}
    1d7c:	mov	r0, #2
    1d80:	str	r6, [sp, #8]
    1d84:	bl	cf8 <bandb_add@plt>
    1d88:	mov	r0, sl
    1d8c:	bl	d1c <get_oper_name@plt>
    1d90:	mov	r2, r0
    1d94:	ldr	r0, [r4, #20]
    1d98:	mov	r3, r5
    1d9c:	str	r0, [sp]
    1da0:	mov	r0, #7
    1da4:	ldr	r1, [pc, #468]	; 1f80 <apply_xline+0x3fc>
    1da8:	add	r1, pc, r1
    1dac:	bl	dac <ilog@plt>
    1db0:	bl	d88 <rb_make_rb_dlink_node@plt>
    1db4:	cmp	r0, #0
    1db8:	bne	1ed0 <apply_xline+0x34c>
    1dbc:	b	1f30 <apply_xline+0x3ac>
    1dc0:	mov	r2, r1
    1dc4:	ldr	r3, [r2, #4]!
    1dc8:	cmp	r3, #0
    1dcc:	streq	r0, [r2]
    1dd0:	str	r0, [r1]
    1dd4:	ldr	r0, [r1, #8]
    1dd8:	add	r0, r0, #1
    1ddc:	str	r0, [r1, #8]
    1de0:	mov	r0, sl
    1de4:	bl	d1c <get_oper_name@plt>
    1de8:	movw	r1, #34953	; 0x8889
    1dec:	mov	r3, r0
    1df0:	ldr	r0, [r4, #16]
    1df4:	movt	r1, #34952	; 0x8888
    1df8:	smmla	r1, r9, r1, r9
    1dfc:	asr	r2, r1, #5
    1e00:	add	r6, r2, r1, lsr #31
    1e04:	mov	r1, #0
    1e08:	str	r6, [sp]
    1e0c:	stmib	sp, {r0, r8}
    1e10:	mov	r0, #256	; 0x100
    1e14:	ldr	r2, [pc, #312]	; 1f54 <apply_xline+0x3d0>
    1e18:	add	r2, pc, r2
    1e1c:	bl	cec <sendto_realops_snomask@plt>
    1e20:	mov	r0, sl
    1e24:	bl	d1c <get_oper_name@plt>
    1e28:	stm	sp, {r5, r8}
    1e2c:	mov	r2, r0
    1e30:	mov	r0, #7
    1e34:	mov	r3, r6
    1e38:	ldr	r1, [pc, #280]	; 1f58 <apply_xline+0x3d4>
    1e3c:	add	r1, pc, r1
    1e40:	bl	dac <ilog@plt>
    1e44:	ldr	r3, [r4, #16]
    1e48:	ldr	r1, [pc, #268]	; 1f5c <apply_xline+0x3d8>
    1e4c:	mov	r0, sl
    1e50:	mov	r2, r6
    1e54:	add	r1, pc, r1
    1e58:	bl	de8 <sendto_one_notice@plt>
    1e5c:	ldr	r0, [pc, #252]	; 1f60 <apply_xline+0x3dc>
    1e60:	add	r7, sl, #396	; 0x18c
    1e64:	ldr	r0, [pc, r0]
    1e68:	ldr	r0, [r0]
    1e6c:	ldr	r1, [pc, #240]	; 1f64 <apply_xline+0x3e0>
    1e70:	ldr	r1, [pc, r1]
    1e74:	ldr	r2, [r4, #16]
    1e78:	ldr	r3, [r4, #36]	; 0x24
    1e7c:	ldr	r6, [r4, #40]	; 0x28
    1e80:	ldr	r5, [r4, #44]	; 0x2c
    1e84:	ldr	r1, [r1]
    1e88:	ldr	ip, [pc, #216]	; 1f68 <apply_xline+0x3e4>
    1e8c:	str	r2, [sp, #8]
    1e90:	sub	r3, r3, r6
    1e94:	add	r2, sp, #16
    1e98:	sub	r5, r5, r6
    1e9c:	str	r7, [sp, #4]
    1ea0:	str	r6, [sp, #12]
    1ea4:	add	ip, pc, ip
    1ea8:	str	ip, [sp]
    1eac:	stm	r2, {r3, r5, r8}
    1eb0:	orr	r2, r0, r1
    1eb4:	mov	r0, #0
    1eb8:	mov	r1, #0
    1ebc:	mov	r3, #0
    1ec0:	bl	d58 <sendto_server@plt>
    1ec4:	bl	d88 <rb_make_rb_dlink_node@plt>
    1ec8:	cmp	r0, #0
    1ecc:	beq	1f30 <apply_xline+0x3ac>
    1ed0:	mov	r1, #0
    1ed4:	str	r1, [r0, #4]
    1ed8:	str	r4, [r0]
    1edc:	ldr	r1, [pc, #160]	; 1f84 <apply_xline+0x400>
    1ee0:	ldr	r1, [pc, r1]
    1ee4:	ldr	r2, [r1]
    1ee8:	cmp	r2, #0
    1eec:	str	r2, [r0, #8]
    1ef0:	beq	1f00 <apply_xline+0x37c>
    1ef4:	add	r2, r2, #4
    1ef8:	str	r0, [r2]
    1efc:	b	1f10 <apply_xline+0x38c>
    1f00:	mov	r2, r1
    1f04:	ldr	r3, [r2, #4]!
    1f08:	cmp	r3, #0
    1f0c:	streq	r0, [r2]
    1f10:	str	r0, [r1]
    1f14:	ldr	r0, [r1, #8]
    1f18:	add	r0, r0, #1
    1f1c:	str	r0, [r1, #8]
    1f20:	sub	sp, fp, #28
    1f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f28:	b	d10 <check_xlines@plt>
    1f2c:	bl	cd4 <rb_outofmemory@plt>
    1f30:	ldr	r0, [pc, #80]	; 1f88 <apply_xline+0x404>
    1f34:	ldr	r1, [pc, #80]	; 1f8c <apply_xline+0x408>
    1f38:	ldr	r3, [pc, #80]	; 1f90 <apply_xline+0x40c>
    1f3c:	mov	r2, #144	; 0x90
    1f40:	add	r0, pc, r0
    1f44:	add	r1, pc, r1
    1f48:	add	r3, pc, r3
    1f4c:	bl	e30 <__assert_fail@plt>
    1f50:	.word	0x00011440
    1f54:	.word	0x00000708
    1f58:	.word	0x00000711
    1f5c:	.word	0x00000707
    1f60:	.word	0x00011250
    1f64:	.word	0x00011240
    1f68:	.word	0x000006d9
    1f6c:	.word	0x000008d0
    1f70:	.word	0x0000085d
    1f74:	.word	0x000008c4
    1f78:	.word	0x000008a9
    1f7c:	.word	0x000008af
    1f80:	.word	0x00000883
    1f84:	.word	0x000111c8
    1f88:	.word	0x0000074f
    1f8c:	.word	0x000006f4
    1f90:	.word	0x0000070c

00001f94 <remove_xline>:
    1f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f98:	add	fp, sp, #28
    1f9c:	sub	sp, sp, #28
    1fa0:	ldr	r9, [pc, #920]	; 2340 <remove_xline+0x3ac>
    1fa4:	mov	r5, r2
    1fa8:	mov	r6, r1
    1fac:	mov	r8, r0
    1fb0:	ldr	r9, [pc, r9]
    1fb4:	ldr	r7, [r9]
    1fb8:	cmp	r7, #0
    1fbc:	beq	1fe4 <remove_xline+0x50>
    1fc0:	ldr	r4, [r7]
    1fc4:	mov	r1, r6
    1fc8:	ldr	r0, [r4, #16]
    1fcc:	bl	e24 <irccmp@plt>
    1fd0:	cmp	r0, #0
    1fd4:	beq	2044 <remove_xline+0xb0>
    1fd8:	ldr	r7, [r7, #8]
    1fdc:	cmp	r7, #0
    1fe0:	bne	1fc0 <remove_xline+0x2c>
    1fe4:	ldr	r0, [pc, #928]	; 238c <remove_xline+0x3f8>
    1fe8:	ldr	r0, [pc, r0]
    1fec:	ldr	r0, [r0, #8]
    1ff0:	cmp	r0, #0
    1ff4:	cmpne	r5, #0
    1ff8:	beq	2028 <remove_xline+0x94>
    1ffc:	ldr	r0, [pc, #908]	; 2390 <remove_xline+0x3fc>
    2000:	mov	r2, #64	; 0x40
    2004:	ldr	r0, [pc, r0]
    2008:	ldr	r3, [r0]
    200c:	ldr	r0, [pc, #896]	; 2394 <remove_xline+0x400>
    2010:	add	r0, pc, r0
    2014:	stm	sp, {r0, r6}
    2018:	mov	r0, r8
    201c:	ldr	r1, [pc, #884]	; 2398 <remove_xline+0x404>
    2020:	add	r1, pc, r1
    2024:	bl	d34 <cluster_generic@plt>
    2028:	ldr	r1, [pc, #876]	; 239c <remove_xline+0x408>
    202c:	add	r1, pc, r1
    2030:	mov	r0, r8
    2034:	mov	r2, r6
    2038:	sub	sp, fp, #28
    203c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2040:	b	de8 <sendto_one_notice@plt>
    2044:	ldr	r0, [r4, #44]	; 0x2c
    2048:	cmp	r0, #0
    204c:	beq	208c <remove_xline+0xf8>
    2050:	cmp	r5, #0
    2054:	beq	2108 <remove_xline+0x174>
    2058:	ldr	r0, [pc, #744]	; 2348 <remove_xline+0x3b4>
    205c:	ldr	r0, [pc, r0]
    2060:	ldr	r7, [r0]
    2064:	cmp	r7, #0
    2068:	beq	2084 <remove_xline+0xf0>
    206c:	ldr	r0, [r7]
    2070:	cmp	r0, r4
    2074:	beq	2224 <remove_xline+0x290>
    2078:	ldr	r7, [r7, #8]
    207c:	cmp	r7, #0
    2080:	bne	206c <remove_xline+0xd8>
    2084:	sub	sp, fp, #28
    2088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    208c:	ldr	r0, [pc, #720]	; 2364 <remove_xline+0x3d0>
    2090:	ldr	r0, [pc, r0]
    2094:	ldr	r0, [r0, #8]
    2098:	cmp	r0, #0
    209c:	cmpne	r5, #0
    20a0:	bne	2114 <remove_xline+0x180>
    20a4:	ldr	r0, [r4, #36]	; 0x24
    20a8:	cmp	r0, #0
    20ac:	beq	214c <remove_xline+0x1b8>
    20b0:	ldr	r1, [pc, #712]	; 2380 <remove_xline+0x3ec>
    20b4:	mov	r0, r8
    20b8:	mov	r2, r6
    20bc:	add	r1, pc, r1
    20c0:	bl	de8 <sendto_one_notice@plt>
    20c4:	mov	r0, r8
    20c8:	bl	d1c <get_oper_name@plt>
    20cc:	str	r6, [sp]
    20d0:	mov	r3, r0
    20d4:	mov	r0, #256	; 0x100
    20d8:	mov	r1, #0
    20dc:	ldr	r2, [pc, #672]	; 2384 <remove_xline+0x3f0>
    20e0:	add	r2, pc, r2
    20e4:	bl	cec <sendto_realops_snomask@plt>
    20e8:	mov	r0, r8
    20ec:	bl	d1c <get_oper_name@plt>
    20f0:	ldr	r1, [pc, #656]	; 2388 <remove_xline+0x3f4>
    20f4:	mov	r2, r0
    20f8:	mov	r0, #7
    20fc:	mov	r3, r6
    2100:	add	r1, pc, r1
    2104:	b	21b4 <remove_xline+0x220>
    2108:	ldr	r1, [pc, #564]	; 2344 <remove_xline+0x3b0>
    210c:	add	r1, pc, r1
    2110:	b	2030 <remove_xline+0x9c>
    2114:	ldr	r0, [pc, #588]	; 2368 <remove_xline+0x3d4>
    2118:	mov	r2, #64	; 0x40
    211c:	ldr	r0, [pc, r0]
    2120:	ldr	r3, [r0]
    2124:	ldr	r0, [pc, #576]	; 236c <remove_xline+0x3d8>
    2128:	add	r0, pc, r0
    212c:	stm	sp, {r0, r6}
    2130:	mov	r0, r8
    2134:	ldr	r1, [pc, #564]	; 2370 <remove_xline+0x3dc>
    2138:	add	r1, pc, r1
    213c:	bl	d34 <cluster_generic@plt>
    2140:	ldr	r0, [r4, #36]	; 0x24
    2144:	cmp	r0, #0
    2148:	bne	20b0 <remove_xline+0x11c>
    214c:	ldr	r1, [r4, #16]
    2150:	mov	r0, #2
    2154:	mov	r2, #0
    2158:	bl	df4 <bandb_del@plt>
    215c:	ldr	r2, [r4, #16]
    2160:	ldr	r1, [pc, #524]	; 2374 <remove_xline+0x3e0>
    2164:	mov	r0, r8
    2168:	add	r1, pc, r1
    216c:	bl	de8 <sendto_one_notice@plt>
    2170:	mov	r0, r8
    2174:	bl	d1c <get_oper_name@plt>
    2178:	mov	r3, r0
    217c:	ldr	r0, [r4, #16]
    2180:	mov	r1, #0
    2184:	str	r0, [sp]
    2188:	mov	r0, #256	; 0x100
    218c:	ldr	r2, [pc, #484]	; 2378 <remove_xline+0x3e4>
    2190:	add	r2, pc, r2
    2194:	bl	cec <sendto_realops_snomask@plt>
    2198:	mov	r0, r8
    219c:	bl	d1c <get_oper_name@plt>
    21a0:	ldr	r3, [r4, #16]
    21a4:	ldr	r1, [pc, #464]	; 237c <remove_xline+0x3e8>
    21a8:	mov	r2, r0
    21ac:	mov	r0, #7
    21b0:	add	r1, pc, r1
    21b4:	bl	dac <ilog@plt>
    21b8:	ldr	r0, [r4, #16]
    21bc:	mov	r1, #0
    21c0:	bl	ddc <remove_reject_mask@plt>
    21c4:	mov	r0, r4
    21c8:	bl	d7c <free_conf@plt>
    21cc:	ldr	r0, [r7, #8]
    21d0:	ldr	r1, [r7, #4]
    21d4:	cmp	r0, #0
    21d8:	beq	21e8 <remove_xline+0x254>
    21dc:	str	r1, [r0, #4]
    21e0:	ldr	r1, [r7, #4]
    21e4:	b	21ec <remove_xline+0x258>
    21e8:	str	r1, [r9, #4]
    21ec:	cmp	r1, #0
    21f0:	mov	r2, r9
    21f4:	addne	r2, r1, #8
    21f8:	str	r0, [r2]
    21fc:	mov	r0, #0
    2200:	str	r0, [r7, #4]
    2204:	str	r0, [r7, #8]
    2208:	ldr	r0, [r9, #8]
    220c:	sub	r0, r0, #1
    2210:	str	r0, [r9, #8]
    2214:	mov	r0, r7
    2218:	sub	sp, fp, #28
    221c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2220:	b	d28 <rb_free_rb_dlink_node@plt>
    2224:	ldr	r1, [pc, #288]	; 234c <remove_xline+0x3b8>
    2228:	mov	r0, r8
    222c:	mov	r2, r6
    2230:	add	r1, pc, r1
    2234:	bl	de8 <sendto_one_notice@plt>
    2238:	mov	r0, r8
    223c:	bl	d1c <get_oper_name@plt>
    2240:	str	r6, [sp]
    2244:	mov	r3, r0
    2248:	mov	r0, #256	; 0x100
    224c:	mov	r1, #0
    2250:	mov	r9, #0
    2254:	ldr	r2, [pc, #244]	; 2350 <remove_xline+0x3bc>
    2258:	add	r2, pc, r2
    225c:	bl	cec <sendto_realops_snomask@plt>
    2260:	mov	r0, r8
    2264:	bl	d1c <get_oper_name@plt>
    2268:	ldr	r1, [pc, #228]	; 2354 <remove_xline+0x3c0>
    226c:	mov	r2, r0
    2270:	mov	r0, #7
    2274:	mov	r3, r6
    2278:	add	r1, pc, r1
    227c:	bl	dac <ilog@plt>
    2280:	bl	c8c <rb_current_time@plt>
    2284:	ldr	r1, [r4, #40]	; 0x28
    2288:	mov	sl, r0
    228c:	ldr	r0, [r4, #12]
    2290:	mov	r2, sl
    2294:	cmp	r1, sl
    2298:	addge	r2, r1, #1
    229c:	str	r2, [r4, #36]	; 0x24
    22a0:	str	r2, [r4, #40]	; 0x28
    22a4:	bl	ce0 <operhash_delete@plt>
    22a8:	mov	r0, r8
    22ac:	bl	d1c <get_oper_name@plt>
    22b0:	bl	d40 <operhash_add@plt>
    22b4:	str	r0, [r4, #12]
    22b8:	add	r6, r8, #396	; 0x18c
    22bc:	ldr	r0, [r4, #4]
    22c0:	ldr	ip, [r4, #16]
    22c4:	ldr	r2, [r4, #40]	; 0x28
    22c8:	ldr	r3, [r4, #44]	; 0x2c
    22cc:	orr	r0, r0, #8912896	; 0x880000
    22d0:	sub	r3, r3, r2
    22d4:	str	r0, [r4, #4]
    22d8:	ldr	r0, [pc, #120]	; 2358 <remove_xline+0x3c4>
    22dc:	ldr	r0, [pc, r0]
    22e0:	ldr	r0, [r0]
    22e4:	ldr	r5, [pc, #112]	; 235c <remove_xline+0x3c8>
    22e8:	ldr	r5, [pc, r5]
    22ec:	ldr	r5, [r5]
    22f0:	ldr	r1, [pc, #104]	; 2360 <remove_xline+0x3cc>
    22f4:	add	r1, pc, r1
    22f8:	stm	sp, {r1, r6, ip}
    22fc:	str	r2, [sp, #12]
    2300:	str	r3, [sp, #20]
    2304:	orr	r2, r5, r0
    2308:	mov	r0, #0
    230c:	mov	r1, #0
    2310:	mov	r3, #0
    2314:	str	r9, [sp, #16]
    2318:	bl	d58 <sendto_server@plt>
    231c:	ldr	r0, [r4, #16]
    2320:	mov	r1, #0
    2324:	bl	ddc <remove_reject_mask@plt>
    2328:	mov	r0, r4
    232c:	mov	r1, r7
    2330:	mov	r2, sl
    2334:	sub	sp, fp, #28
    2338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    233c:	b	d04 <deactivate_conf@plt>
    2340:	.word	0x000110f8
    2344:	.word	0x0000058d
    2348:	.word	0x00011048
    234c:	.word	0x0000049d
    2350:	.word	0x00000491
    2354:	.word	0x0000049c
    2358:	.word	0x00010dd4
    235c:	.word	0x00010dcc
    2360:	.word	0x00000429
    2364:	.word	0x0001102c
    2368:	.word	0x00010f90
    236c:	.word	0x00000319
    2370:	.word	0x00000268
    2374:	.word	0x00000565
    2378:	.word	0x000005ab
    237c:	.word	0x00000564
    2380:	.word	0x00000611
    2384:	.word	0x0000067f
    2388:	.word	0x00000614
    238c:	.word	0x000110d4
    2390:	.word	0x000110a8
    2394:	.word	0x00000431
    2398:	.word	0x00000380
    239c:	.word	0x00000761

Disassembly of section .fini:

000023a0 <_fini>:
    23a0:	push	{r3, lr}
    23a4:	pop	{r3, pc}
