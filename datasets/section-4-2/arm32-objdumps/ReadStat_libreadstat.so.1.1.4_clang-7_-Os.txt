
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

0000474c <_init>:
    474c:	push	{r3, lr}
    4750:	bl	4f28 <call_weak_fn>
    4754:	pop	{r3, pc}

Disassembly of section .plt:

00004758 <.plt>:
    4758:	push	{lr}		; (str lr, [sp, #-4]!)
    475c:	ldr	lr, [pc, #4]	; 4768 <.plt+0x10>
    4760:	add	lr, pc, lr
    4764:	ldr	pc, [lr, #8]!
    4768:	.word	0x0003f898

0000476c <sas_validate_name@plt>:
    476c:	add	ip, pc, #0, 12
    4770:	add	ip, ip, #258048	; 0x3f000
    4774:	ldr	pc, [ip, #2200]!	; 0x898

00004778 <calloc@plt>:
    4778:	add	ip, pc, #0, 12
    477c:	add	ip, ip, #258048	; 0x3f000
    4780:	ldr	pc, [ip, #2192]!	; 0x890

00004784 <readstat_set_seek_handler@plt>:
    4784:	add	ip, pc, #0, 12
    4788:	add	ip, ip, #258048	; 0x3f000
    478c:	ldr	pc, [ip, #2184]!	; 0x888

00004790 <readstat_set_open_handler@plt>:
    4790:	add	ip, pc, #0, 12
    4794:	add	ip, ip, #258048	; 0x3f000
    4798:	ldr	pc, [ip, #2176]!	; 0x880

0000479c <byteswap8@plt>:
    479c:	add	ip, pc, #0, 12
    47a0:	add	ip, ip, #258048	; 0x3f000
    47a4:	ldr	pc, [ip, #2168]!	; 0x878

000047a8 <raise@plt>:
    47a8:	add	ip, pc, #0, 12
    47ac:	add	ip, ip, #258048	; 0x3f000
    47b0:	ldr	pc, [ip, #2160]!	; 0x870

000047b4 <byteswap4@plt>:
    47b4:	add	ip, pc, #0, 12
    47b8:	add	ip, ip, #258048	; 0x3f000
    47bc:	ldr	pc, [ip, #2152]!	; 0x868

000047c0 <readstat_sort_label_set@plt>:
    47c0:	add	ip, pc, #0, 12
    47c4:	add	ip, ip, #258048	; 0x3f000
    47c8:	ldr	pc, [ip, #2144]!	; 0x860

000047cc <por_ctx_free@plt>:
    47cc:	add	ip, pc, #0, 12
    47d0:	add	ip, ip, #258048	; 0x3f000
    47d4:	ldr	pc, [ip, #2136]!	; 0x858

000047d8 <iconv_close@plt>:
    47d8:	add	ip, pc, #0, 12
    47dc:	add	ip, ip, #258048	; 0x3f000
    47e0:	ldr	pc, [ip, #2128]!	; 0x850

000047e4 <readstat_write_spaces@plt>:
    47e4:	add	ip, pc, #0, 12
    47e8:	add	ip, ip, #258048	; 0x3f000
    47ec:	ldr	pc, [ip, #2120]!	; 0x848

000047f0 <iconv@plt>:
    47f0:	add	ip, pc, #0, 12
    47f4:	add	ip, ip, #258048	; 0x3f000
    47f8:	ldr	pc, [ip, #2112]!	; 0x840

000047fc <sav_parse_timestamp@plt>:
    47fc:	add	ip, pc, #0, 12
    4800:	add	ip, ip, #258048	; 0x3f000
    4804:	ldr	pc, [ip, #2104]!	; 0x838

00004808 <strcmp@plt>:
    4808:	add	ip, pc, #0, 12
    480c:	add	ip, ip, #258048	; 0x3f000
    4810:	ldr	pc, [ip, #2096]!	; 0x830

00004814 <__cxa_finalize@plt>:
    4814:	add	ip, pc, #0, 12
    4818:	add	ip, ip, #258048	; 0x3f000
    481c:	ldr	pc, [ip, #2088]!	; 0x828

00004820 <readstat_type_class@plt>:
    4820:	add	ip, pc, #0, 12
    4824:	add	ip, ip, #258048	; 0x3f000
    4828:	ldr	pc, [ip, #2080]!	; 0x820

0000482c <strtol@plt>:
    482c:	add	ip, pc, #0, 12
    4830:	add	ip, ip, #258048	; 0x3f000
    4834:	ldr	pc, [ip, #2072]!	; 0x818

00004838 <read@plt>:
    4838:	add	ip, pc, #0, 12
    483c:	add	ip, ip, #258048	; 0x3f000
    4840:	ldr	pc, [ip, #2064]!	; 0x810

00004844 <readstat_error_message@plt>:
    4844:	add	ip, pc, #0, 12
    4848:	add	ip, ip, #258048	; 0x3f000
    484c:	ldr	pc, [ip, #2056]!	; 0x808

00004850 <mktime@plt>:
    4850:	add	ip, pc, #0, 12
    4854:	add	ip, ip, #258048	; 0x3f000
    4858:	ldr	pc, [ip, #2048]!	; 0x800

0000485c <spss_alignment_from_readstat_alignment@plt>:
    485c:	add	ip, pc, #0, 12
    4860:	add	ip, ip, #258048	; 0x3f000
    4864:	ldr	pc, [ip, #2040]!	; 0x7f8

00004868 <readstat_copy@plt>:
    4868:	add	ip, pc, #0, 12
    486c:	add	ip, ip, #258048	; 0x3f000
    4870:	ldr	pc, [ip, #2032]!	; 0x7f0

00004874 <dta_ctx_free@plt>:
    4874:	add	ip, pc, #0, 12
    4878:	add	ip, ip, #258048	; 0x3f000
    487c:	ldr	pc, [ip, #2024]!	; 0x7e8

00004880 <deflateBound@plt>:
    4880:	add	ip, pc, #0, 12
    4884:	add	ip, ip, #258048	; 0x3f000
    4888:	ldr	pc, [ip, #2016]!	; 0x7e0

0000488c <readstat_set_update_handler@plt>:
    488c:	add	ip, pc, #0, 12
    4890:	add	ip, ip, #258048	; 0x3f000
    4894:	ldr	pc, [ip, #2008]!	; 0x7d8

00004898 <memmove@plt>:
    4898:	add	ip, pc, #0, 12
    489c:	add	ip, ip, #258048	; 0x3f000
    48a0:	ldr	pc, [ip, #2000]!	; 0x7d0

000048a4 <byteswap2@plt>:
    48a4:	add	ip, pc, #0, 12
    48a8:	add	ip, ip, #258048	; 0x3f000
    48ac:	ldr	pc, [ip, #1992]!	; 0x7c8

000048b0 <machine_is_little_endian@plt>:
    48b0:	add	ip, pc, #0, 12
    48b4:	add	ip, ip, #258048	; 0x3f000
    48b8:	ldr	pc, [ip, #1984]!	; 0x7c0

000048bc <free@plt>:
    48bc:	add	ip, pc, #0, 12
    48c0:	add	ip, ip, #258048	; 0x3f000
    48c4:	ldr	pc, [ip, #1976]!	; 0x7b8

000048c8 <__isnanf@plt>:
    48c8:	add	ip, pc, #0, 12
    48cc:	add	ip, ip, #258048	; 0x3f000
    48d0:	ldr	pc, [ip, #1968]!	; 0x7b0

000048d4 <sav_parse_time@plt>:
    48d4:	add	ip, pc, #0, 12
    48d8:	add	ip, ip, #258048	; 0x3f000
    48dc:	ldr	pc, [ip, #1960]!	; 0x7a8

000048e0 <readstat_variable_get_format@plt>:
    48e0:	add	ip, pc, #0, 12
    48e4:	add	ip, ip, #258048	; 0x3f000
    48e8:	ldr	pc, [ip, #1952]!	; 0x7a0

000048ec <ones_to_twos_complement4@plt>:
    48ec:	add	ip, pc, #0, 12
    48f0:	add	ip, ip, #258048	; 0x3f000
    48f4:	ldr	pc, [ip, #1944]!	; 0x798

000048f8 <ones_to_twos_complement2@plt>:
    48f8:	add	ip, pc, #0, 12
    48fc:	add	ip, ip, #258048	; 0x3f000
    4900:	ldr	pc, [ip, #1936]!	; 0x790

00004904 <sav_ctx_free@plt>:
    4904:	add	ip, pc, #0, 12
    4908:	add	ip, ip, #258048	; 0x3f000
    490c:	ldr	pc, [ip, #1928]!	; 0x788

00004910 <memcpy@plt>:
    4910:	add	ip, pc, #0, 12
    4914:	add	ip, ip, #258048	; 0x3f000
    4918:	ldr	pc, [ip, #1920]!	; 0x780

0000491c <spss_parse_format@plt>:
    491c:	add	ip, pc, #0, 12
    4920:	add	ip, ip, #258048	; 0x3f000
    4924:	ldr	pc, [ip, #1912]!	; 0x778

00004928 <submit_columns@plt>:
    4928:	add	ip, pc, #0, 12
    492c:	add	ip, ip, #258048	; 0x3f000
    4930:	ldr	pc, [ip, #1904]!	; 0x770

00004934 <readstat_variable_get_missing_range_lo@plt>:
    4934:	add	ip, pc, #0, 12
    4938:	add	ip, ip, #258048	; 0x3f000
    493c:	ldr	pc, [ip, #1896]!	; 0x768

00004940 <time@plt>:
    4940:	add	ip, pc, #0, 12
    4944:	add	ip, ip, #258048	; 0x3f000
    4948:	ldr	pc, [ip, #1888]!	; 0x760

0000494c <readstat_begin_writing_file@plt>:
    494c:	add	ip, pc, #0, 12
    4950:	add	ip, ip, #258048	; 0x3f000
    4954:	ldr	pc, [ip, #1880]!	; 0x758

00004958 <lseek@plt>:
    4958:	add	ip, pc, #0, 12
    495c:	add	ip, ip, #258048	; 0x3f000
    4960:	ldr	pc, [ip, #1872]!	; 0x750

00004964 <unistd_io_init@plt>:
    4964:	add	ip, pc, #0, 12
    4968:	add	ip, ip, #258048	; 0x3f000
    496c:	ldr	pc, [ip, #1864]!	; 0x748

00004970 <pow@plt>:
    4970:	add	ip, pc, #0, 12
    4974:	add	ip, ip, #258048	; 0x3f000
    4978:	ldr	pc, [ip, #1856]!	; 0x740

0000497c <uncompress@plt>:
    497c:	add	ip, pc, #0, 12
    4980:	add	ip, ip, #258048	; 0x3f000
    4984:	ldr	pc, [ip, #1848]!	; 0x738

00004988 <memcmp@plt>:
    4988:	add	ip, pc, #0, 12
    498c:	add	ip, ip, #258048	; 0x3f000
    4990:	ldr	pc, [ip, #1840]!	; 0x730

00004994 <readstat_string_value@plt>:
    4994:	add	ip, pc, #0, 12
    4998:	add	ip, ip, #258048	; 0x3f000
    499c:	ldr	pc, [ip, #1832]!	; 0x728

000049a0 <readstat_schema_free@plt>:
    49a0:	add	ip, pc, #0, 12
    49a4:	add	ip, ip, #258048	; 0x3f000
    49a8:	ldr	pc, [ip, #1824]!	; 0x720

000049ac <readstat_calloc@plt>:
    49ac:	add	ip, pc, #0, 12
    49b0:	add	ip, ip, #258048	; 0x3f000
    49b4:	ldr	pc, [ip, #1816]!	; 0x718

000049b8 <ck_str_hash_lookup@plt>:
    49b8:	add	ip, pc, #0, 12
    49bc:	add	ip, ip, #258048	; 0x3f000
    49c0:	ldr	pc, [ip, #1808]!	; 0x710

000049c4 <sav_compressed_row_bound@plt>:
    49c4:	add	ip, pc, #0, 12
    49c8:	add	ip, ip, #258048	; 0x3f000
    49cc:	ldr	pc, [ip, #1800]!	; 0x708

000049d0 <ck_hash_table_grow@plt>:
    49d0:	add	ip, pc, #0, 12
    49d4:	add	ip, ip, #258048	; 0x3f000
    49d8:	ldr	pc, [ip, #1792]!	; 0x700

000049dc <__isinf@plt>:
    49dc:	add	ip, pc, #0, 12
    49e0:	add	ip, ip, #258048	; 0x3f000
    49e4:	ldr	pc, [ip, #1784]!	; 0x6f8

000049e8 <realloc@plt>:
    49e8:	add	ip, pc, #0, 12
    49ec:	add	ip, ip, #258048	; 0x3f000
    49f0:	ldr	pc, [ip, #1776]!	; 0x6f0

000049f4 <cnxptiee@plt>:
    49f4:	add	ip, pc, #0, 12
    49f8:	add	ip, ip, #258048	; 0x3f000
    49fc:	ldr	pc, [ip, #1768]!	; 0x6e8

00004a00 <read_version_and_timestamp@plt>:
    4a00:	add	ip, pc, #0, 12
    4a04:	add	ip, ip, #258048	; 0x3f000
    4a08:	ldr	pc, [ip, #1760]!	; 0x6e0

00004a0c <readstat_write_zeros@plt>:
    4a0c:	add	ip, pc, #0, 12
    4a10:	add	ip, ip, #258048	; 0x3f000
    4a14:	ldr	pc, [ip, #1752]!	; 0x6d8

00004a18 <strcasecmp@plt>:
    4a18:	add	ip, pc, #0, 12
    4a1c:	add	ip, ip, #258048	; 0x3f000
    4a20:	ldr	pc, [ip, #1744]!	; 0x6d0

00004a24 <readstat_copy_quoted@plt>:
    4a24:	add	ip, pc, #0, 12
    4a28:	add	ip, ip, #258048	; 0x3f000
    4a2c:	ldr	pc, [ip, #1736]!	; 0x6c8

00004a30 <deflate@plt>:
    4a30:	add	ip, pc, #0, 12
    4a34:	add	ip, ip, #258048	; 0x3f000
    4a38:	ldr	pc, [ip, #1728]!	; 0x6c0

00004a3c <submit_value_label@plt>:
    4a3c:	add	ip, pc, #0, 12
    4a40:	add	ip, ip, #258048	; 0x3f000
    4a44:	ldr	pc, [ip, #1720]!	; 0x6b8

00004a48 <sav_ctx_init@plt>:
    4a48:	add	ip, pc, #0, 12
    4a4c:	add	ip, ip, #258048	; 0x3f000
    4a50:	ldr	pc, [ip, #1712]!	; 0x6b0

00004a54 <ck_str_n_hash_lookup@plt>:
    4a54:	add	ip, pc, #0, 12
    4a58:	add	ip, ip, #258048	; 0x3f000
    4a5c:	ldr	pc, [ip, #1704]!	; 0x6a8

00004a60 <spss_measure_from_readstat_measure@plt>:
    4a60:	add	ip, pc, #0, 12
    4a64:	add	ip, ip, #258048	; 0x3f000
    4a68:	ldr	pc, [ip, #1696]!	; 0x6a0

00004a6c <sas_rle_decompress@plt>:
    4a6c:	add	ip, pc, #0, 12
    4a70:	add	ip, ip, #258048	; 0x3f000
    4a74:	ldr	pc, [ip, #1688]!	; 0x698

00004a78 <sav_parse_date@plt>:
    4a78:	add	ip, pc, #0, 12
    4a7c:	add	ip, ip, #258048	; 0x3f000
    4a80:	ldr	pc, [ip, #1680]!	; 0x690

00004a84 <xport_namestr_bswap@plt>:
    4a84:	add	ip, pc, #0, 12
    4a88:	add	ip, ip, #258048	; 0x3f000
    4a8c:	ldr	pc, [ip, #1672]!	; 0x688

00004a90 <strcpy@plt>:
    4a90:	add	ip, pc, #0, 12
    4a94:	add	ip, ip, #258048	; 0x3f000
    4a98:	ldr	pc, [ip, #1664]!	; 0x680

00004a9c <zsav_ctx_init@plt>:
    4a9c:	add	ip, pc, #0, 12
    4aa0:	add	ip, ip, #258048	; 0x3f000
    4aa4:	ldr	pc, [ip, #1656]!	; 0x678

00004aa8 <sas_write_header@plt>:
    4aa8:	add	ip, pc, #0, 12
    4aac:	add	ip, ip, #258048	; 0x3f000
    4ab0:	ldr	pc, [ip, #1648]!	; 0x670

00004ab4 <strtof@plt>:
    4ab4:	add	ip, pc, #0, 12
    4ab8:	add	ip, ip, #258048	; 0x3f000
    4abc:	ldr	pc, [ip, #1640]!	; 0x668

00004ac0 <readstat_schema_find_or_create_entry@plt>:
    4ac0:	add	ip, pc, #0, 12
    4ac4:	add	ip, ip, #258048	; 0x3f000
    4ac8:	ldr	pc, [ip, #1632]!	; 0x660

00004acc <readstat_set_io_ctx@plt>:
    4acc:	add	ip, pc, #0, 12
    4ad0:	add	ip, ip, #258048	; 0x3f000
    4ad4:	ldr	pc, [ip, #1624]!	; 0x658

00004ad8 <spss_format_for_variable@plt>:
    4ad8:	add	ip, pc, #0, 12
    4adc:	add	ip, ip, #258048	; 0x3f000
    4ae0:	ldr	pc, [ip, #1616]!	; 0x650

00004ae4 <readstat_parser_free@plt>:
    4ae4:	add	ip, pc, #0, 12
    4ae8:	add	ip, ip, #258048	; 0x3f000
    4aec:	ldr	pc, [ip, #1608]!	; 0x648

00004af0 <malloc@plt>:
    4af0:	add	ip, pc, #0, 12
    4af4:	add	ip, ip, #258048	; 0x3f000
    4af8:	ldr	pc, [ip, #1600]!	; 0x640

00004afc <zsav_add_block@plt>:
    4afc:	add	ip, pc, #0, 12
    4b00:	add	ip, ip, #258048	; 0x3f000
    4b04:	ldr	pc, [ip, #1592]!	; 0x638

00004b08 <deflateInit_@plt>:
    4b08:	add	ip, pc, #0, 12
    4b0c:	add	ip, ip, #258048	; 0x3f000
    4b10:	ldr	pc, [ip, #1584]!	; 0x630

00004b14 <iconv_open@plt>:
    4b14:	add	ip, pc, #0, 12
    4b18:	add	ip, ip, #258048	; 0x3f000
    4b1c:	ldr	pc, [ip, #1576]!	; 0x628

00004b20 <strerror@plt>:
    4b20:	add	ip, pc, #0, 12
    4b24:	add	ip, ip, #258048	; 0x3f000
    4b28:	ldr	pc, [ip, #1568]!	; 0x620

00004b2c <sas_validate_tag@plt>:
    4b2c:	add	ip, pc, #0, 12
    4b30:	add	ip, ip, #258048	; 0x3f000
    4b34:	ldr	pc, [ip, #1560]!	; 0x618

00004b38 <readstat_write_string@plt>:
    4b38:	add	ip, pc, #0, 12
    4b3c:	add	ip, ip, #258048	; 0x3f000
    4b40:	ldr	pc, [ip, #1552]!	; 0x610

00004b44 <localtime@plt>:
    4b44:	add	ip, pc, #0, 12
    4b48:	add	ip, ip, #258048	; 0x3f000
    4b4c:	ldr	pc, [ip, #1544]!	; 0x608

00004b50 <__ctype_tolower_loc@plt>:
    4b50:	add	ip, pc, #0, 12
    4b54:	add	ip, ip, #258048	; 0x3f000
    4b58:	ldr	pc, [ip, #1536]!	; 0x600

00004b5c <modf@plt>:
    4b5c:	add	ip, pc, #0, 12
    4b60:	add	ip, ip, #258048	; 0x3f000
    4b64:	ldr	pc, [ip, #1528]!	; 0x5f8

00004b68 <__ctype_toupper_loc@plt>:
    4b68:	add	ip, pc, #0, 12
    4b6c:	add	ip, ip, #258048	; 0x3f000
    4b70:	ldr	pc, [ip, #1520]!	; 0x5f0

00004b74 <ck_hash_table_init@plt>:
    4b74:	add	ip, pc, #0, 12
    4b78:	add	ip, ip, #258048	; 0x3f000
    4b7c:	ldr	pc, [ip, #1512]!	; 0x5e8

00004b80 <__gmon_start__@plt>:
    4b80:	add	ip, pc, #0, 12
    4b84:	add	ip, ip, #258048	; 0x3f000
    4b88:	ldr	pc, [ip, #1504]!	; 0x5e0

00004b8c <open@plt>:
    4b8c:	add	ip, pc, #0, 12
    4b90:	add	ip, ip, #258048	; 0x3f000
    4b94:	ldr	pc, [ip, #1496]!	; 0x5d8

00004b98 <readstat_double_value@plt>:
    4b98:	add	ip, pc, #0, 12
    4b9c:	add	ip, ip, #258048	; 0x3f000
    4ba0:	ldr	pc, [ip, #1488]!	; 0x5d0

00004ba4 <dta_ctx_init@plt>:
    4ba4:	add	ip, pc, #0, 12
    4ba8:	add	ip, ip, #258048	; 0x3f000
    4bac:	ldr	pc, [ip, #1480]!	; 0x5c8

00004bb0 <readstat_variable_get_type@plt>:
    4bb0:	add	ip, pc, #0, 12
    4bb4:	add	ip, ip, #258048	; 0x3f000
    4bb8:	ldr	pc, [ip, #1472]!	; 0x5c0

00004bbc <dta_type_info@plt>:
    4bbc:	add	ip, pc, #0, 12
    4bc0:	add	ip, ip, #258048	; 0x3f000
    4bc4:	ldr	pc, [ip, #1464]!	; 0x5b8

00004bc8 <sav_parse_long_variable_names_record@plt>:
    4bc8:	add	ip, pc, #0, 12
    4bcc:	add	ip, ip, #258048	; 0x3f000
    4bd0:	ldr	pc, [ip, #1456]!	; 0x5b0

00004bd4 <strlen@plt>:
    4bd4:	add	ip, pc, #0, 12
    4bd8:	add	ip, ip, #258048	; 0x3f000
    4bdc:	ldr	pc, [ip, #1448]!	; 0x5a8

00004be0 <sav_decompress_row@plt>:
    4be0:	add	ip, pc, #0, 12
    4be4:	add	ip, ip, #258048	; 0x3f000
    4be8:	ldr	pc, [ip, #1440]!	; 0x5a0

00004bec <readstat_variable_get_display_width@plt>:
    4bec:	add	ip, pc, #0, 12
    4bf0:	add	ip, ip, #258048	; 0x3f000
    4bf4:	ldr	pc, [ip, #1432]!	; 0x598

00004bf8 <readstat_malloc@plt>:
    4bf8:	add	ip, pc, #0, 12
    4bfc:	add	ip, ip, #258048	; 0x3f000
    4c00:	ldr	pc, [ip, #1424]!	; 0x590

00004c04 <readstat_convert@plt>:
    4c04:	add	ip, pc, #0, 12
    4c08:	add	ip, ip, #258048	; 0x3f000
    4c0c:	ldr	pc, [ip, #1416]!	; 0x588

00004c10 <ck_hash_table_free@plt>:
    4c10:	add	ip, pc, #0, 12
    4c14:	add	ip, ip, #258048	; 0x3f000
    4c18:	ldr	pc, [ip, #1408]!	; 0x580

00004c1c <readstat_por_parse_double@plt>:
    4c1c:	add	ip, pc, #0, 12
    4c20:	add	ip, ip, #258048	; 0x3f000
    4c24:	ldr	pc, [ip, #1400]!	; 0x578

00004c28 <por_utf8_encode@plt>:
    4c28:	add	ip, pc, #0, 12
    4c2c:	add	ip, ip, #258048	; 0x3f000
    4c30:	ldr	pc, [ip, #1392]!	; 0x570

00004c34 <__errno_location@plt>:
    4c34:	add	ip, pc, #0, 12
    4c38:	add	ip, ip, #258048	; 0x3f000
    4c3c:	ldr	pc, [ip, #1384]!	; 0x568

00004c40 <spss_init_variable_for_info@plt>:
    4c40:	add	ip, pc, #0, 12
    4c44:	add	ip, ip, #258048	; 0x3f000
    4c48:	ldr	pc, [ip, #1376]!	; 0x560

00004c4c <snprintf@plt>:
    4c4c:	add	ip, pc, #0, 12
    4c50:	add	ip, ip, #258048	; 0x3f000
    4c54:	ldr	pc, [ip, #1368]!	; 0x558

00004c58 <__isoc99_sscanf@plt>:
    4c58:	add	ip, pc, #0, 12
    4c5c:	add	ip, ip, #258048	; 0x3f000
    4c60:	ldr	pc, [ip, #1360]!	; 0x550

00004c64 <ck_str_n_hash_insert@plt>:
    4c64:	add	ip, pc, #0, 12
    4c68:	add	ip, ip, #258048	; 0x3f000
    4c6c:	ldr	pc, [ip, #1352]!	; 0x548

00004c70 <memset@plt>:
    4c70:	add	ip, pc, #0, 12
    4c74:	add	ip, ip, #258048	; 0x3f000
    4c78:	ldr	pc, [ip, #1344]!	; 0x540

00004c7c <bsearch@plt>:
    4c7c:	add	ip, pc, #0, 12
    4c80:	add	ip, ip, #258048	; 0x3f000
    4c84:	ldr	pc, [ip, #1336]!	; 0x538

00004c88 <spss_64bit_value@plt>:
    4c88:	add	ip, pc, #0, 12
    4c8c:	add	ip, ip, #258048	; 0x3f000
    4c90:	ldr	pc, [ip, #1328]!	; 0x530

00004c94 <strncpy@plt>:
    4c94:	add	ip, pc, #0, 12
    4c98:	add	ip, ip, #258048	; 0x3f000
    4c9c:	ldr	pc, [ip, #1320]!	; 0x528

00004ca0 <readstat_variable_get_storage_width@plt>:
    4ca0:	add	ip, pc, #0, 12
    4ca4:	add	ip, ip, #258048	; 0x3f000
    4ca8:	ldr	pc, [ip, #1312]!	; 0x520

00004cac <sav_parse_very_long_string_record@plt>:
    4cac:	add	ip, pc, #0, 12
    4cb0:	add	ip, ip, #258048	; 0x3f000
    4cb4:	ldr	pc, [ip, #1304]!	; 0x518

00004cb8 <readstat_realloc@plt>:
    4cb8:	add	ip, pc, #0, 12
    4cbc:	add	ip, ip, #258048	; 0x3f000
    4cc0:	ldr	pc, [ip, #1296]!	; 0x510

00004cc4 <dta_parse_timestamp@plt>:
    4cc4:	add	ip, pc, #0, 12
    4cc8:	add	ip, ip, #258048	; 0x3f000
    4ccc:	ldr	pc, [ip, #1288]!	; 0x508

00004cd0 <strtod@plt>:
    4cd0:	add	ip, pc, #0, 12
    4cd4:	add	ip, ip, #258048	; 0x3f000
    4cd8:	ldr	pc, [ip, #1280]!	; 0x500

00004cdc <readstat_variable_get_missing_ranges_count@plt>:
    4cdc:	add	ip, pc, #0, 12
    4ce0:	add	ip, ip, #258048	; 0x3f000
    4ce4:	ldr	pc, [ip, #1272]!	; 0x4f8

00004ce8 <deflateEnd@plt>:
    4ce8:	add	ip, pc, #0, 12
    4cec:	add	ip, ip, #258048	; 0x3f000
    4cf0:	ldr	pc, [ip, #1264]!	; 0x4f0

00004cf4 <readstat_variable_get_measure@plt>:
    4cf4:	add	ip, pc, #0, 12
    4cf8:	add	ip, ip, #258048	; 0x3f000
    4cfc:	ldr	pc, [ip, #1256]!	; 0x4e8

00004d00 <__isnan@plt>:
    4d00:	add	ip, pc, #0, 12
    4d04:	add	ip, ip, #258048	; 0x3f000
    4d08:	ldr	pc, [ip, #1248]!	; 0x4e0

00004d0c <readstat_variable_get_missing_range_hi@plt>:
    4d0c:	add	ip, pc, #0, 12
    4d10:	add	ip, ip, #258048	; 0x3f000
    4d14:	ldr	pc, [ip, #1240]!	; 0x4d8

00004d18 <readstat_set_read_handler@plt>:
    4d18:	add	ip, pc, #0, 12
    4d1c:	add	ip, ip, #258048	; 0x3f000
    4d20:	ldr	pc, [ip, #1232]!	; 0x4d0

00004d24 <sas_header_info_init@plt>:
    4d24:	add	ip, pc, #0, 12
    4d28:	add	ip, ip, #258048	; 0x3f000
    4d2c:	ldr	pc, [ip, #1224]!	; 0x4c8

00004d30 <readstat_variable_get_name@plt>:
    4d30:	add	ip, pc, #0, 12
    4d34:	add	ip, ip, #258048	; 0x3f000
    4d38:	ldr	pc, [ip, #1216]!	; 0x4c0

00004d3c <ones_to_twos_complement1@plt>:
    4d3c:	add	ip, pc, #0, 12
    4d40:	add	ip, ip, #258048	; 0x3f000
    4d44:	ldr	pc, [ip, #1208]!	; 0x4b8

00004d48 <readstat_get_variable@plt>:
    4d48:	add	ip, pc, #0, 12
    4d4c:	add	ip, ip, #258048	; 0x3f000
    4d50:	ldr	pc, [ip, #1200]!	; 0x4b0

00004d54 <spss_alignment_to_readstat_alignment@plt>:
    4d54:	add	ip, pc, #0, 12
    4d58:	add	ip, ip, #258048	; 0x3f000
    4d5c:	ldr	pc, [ip, #1192]!	; 0x4a8

00004d60 <por_utf8_decode@plt>:
    4d60:	add	ip, pc, #0, 12
    4d64:	add	ip, ip, #258048	; 0x3f000
    4d68:	ldr	pc, [ip, #1184]!	; 0x4a0

00004d6c <sas_read_header@plt>:
    4d6c:	add	ip, pc, #0, 12
    4d70:	add	ip, ip, #258048	; 0x3f000
    4d74:	ldr	pc, [ip, #1176]!	; 0x498

00004d78 <spss_measure_to_readstat_measure@plt>:
    4d78:	add	ip, pc, #0, 12
    4d7c:	add	ip, ip, #258048	; 0x3f000
    4d80:	ldr	pc, [ip, #1168]!	; 0x490

00004d84 <sas_subheader_remainder@plt>:
    4d84:	add	ip, pc, #0, 12
    4d88:	add	ip, ip, #258048	; 0x3f000
    4d8c:	ldr	pc, [ip, #1160]!	; 0x488

00004d90 <sas_read8@plt>:
    4d90:	add	ip, pc, #0, 12
    4d94:	add	ip, ip, #258048	; 0x3f000
    4d98:	ldr	pc, [ip, #1152]!	; 0x480

00004d9c <sas_read2@plt>:
    4d9c:	add	ip, pc, #0, 12
    4da0:	add	ip, ip, #258048	; 0x3f000
    4da4:	ldr	pc, [ip, #1144]!	; 0x478

00004da8 <readstat_copy_lower@plt>:
    4da8:	add	ip, pc, #0, 12
    4dac:	add	ip, ip, #258048	; 0x3f000
    4db0:	ldr	pc, [ip, #1136]!	; 0x470

00004db4 <sprintf@plt>:
    4db4:	add	ip, pc, #0, 12
    4db8:	add	ip, ip, #258048	; 0x3f000
    4dbc:	ldr	pc, [ip, #1128]!	; 0x468

00004dc0 <sas_read4@plt>:
    4dc0:	add	ip, pc, #0, 12
    4dc4:	add	ip, ip, #258048	; 0x3f000
    4dc8:	ldr	pc, [ip, #1120]!	; 0x460

00004dcc <readstat_variable_get_label@plt>:
    4dcc:	add	ip, pc, #0, 12
    4dd0:	add	ip, ip, #258048	; 0x3f000
    4dd4:	ldr	pc, [ip, #1112]!	; 0x458

00004dd8 <spss_format@plt>:
    4dd8:	add	ip, pc, #0, 12
    4ddc:	add	ip, ip, #258048	; 0x3f000
    4de0:	ldr	pc, [ip, #1104]!	; 0x450

00004de4 <spss_varinfo_free@plt>:
    4de4:	add	ip, pc, #0, 12
    4de8:	add	ip, ip, #258048	; 0x3f000
    4dec:	ldr	pc, [ip, #1096]!	; 0x448

00004df0 <readstat_get_label_set@plt>:
    4df0:	add	ip, pc, #0, 12
    4df4:	add	ip, ip, #258048	; 0x3f000
    4df8:	ldr	pc, [ip, #1088]!	; 0x440

00004dfc <readstat_variable_get_alignment@plt>:
    4dfc:	add	ip, pc, #0, 12
    4e00:	add	ip, ip, #258048	; 0x3f000
    4e04:	ldr	pc, [ip, #1080]!	; 0x438

00004e08 <qsort@plt>:
    4e08:	add	ip, pc, #0, 12
    4e0c:	add	ip, ip, #258048	; 0x3f000
    4e10:	ldr	pc, [ip, #1072]!	; 0x430

00004e14 <readstat_get_label_set_variable@plt>:
    4e14:	add	ip, pc, #0, 12
    4e18:	add	ip, ip, #258048	; 0x3f000
    4e1c:	ldr	pc, [ip, #1064]!	; 0x428

00004e20 <readstat_write_bytes@plt>:
    4e20:	add	ip, pc, #0, 12
    4e24:	add	ip, ip, #258048	; 0x3f000
    4e28:	ldr	pc, [ip, #1056]!	; 0x420

00004e2c <sav_compress_row@plt>:
    4e2c:	add	ip, pc, #0, 12
    4e30:	add	ip, ip, #258048	; 0x3f000
    4e34:	ldr	pc, [ip, #1048]!	; 0x418

00004e38 <readstat_set_close_handler@plt>:
    4e38:	add	ip, pc, #0, 12
    4e3c:	add	ip, ip, #258048	; 0x3f000
    4e40:	ldr	pc, [ip, #1040]!	; 0x410

00004e44 <sas_fill_page@plt>:
    4e44:	add	ip, pc, #0, 12
    4e48:	add	ip, ip, #258048	; 0x3f000
    4e4c:	ldr	pc, [ip, #1032]!	; 0x408

00004e50 <sas_rle_compressed_len@plt>:
    4e50:	add	ip, pc, #0, 12
    4e54:	add	ip, ip, #258048	; 0x3f000
    4e58:	ldr	pc, [ip, #1024]!	; 0x400

00004e5c <por_ctx_init@plt>:
    4e5c:	add	ip, pc, #0, 12
    4e60:	add	ip, ip, #258048	; 0x3f000
    4e64:	ldr	pc, [ip, #1016]!	; 0x3f8

00004e68 <sas_assign_tag@plt>:
    4e68:	add	ip, pc, #0, 12
    4e6c:	add	ip, ip, #258048	; 0x3f000
    4e70:	ldr	pc, [ip, #1008]!	; 0x3f0

00004e74 <zsav_compress_row@plt>:
    4e74:	add	ip, pc, #0, 12
    4e78:	add	ip, ip, #258048	; 0x3f000
    4e7c:	ldr	pc, [ip, #1000]!	; 0x3e8

00004e80 <zsav_read_compressed_data@plt>:
    4e80:	add	ip, pc, #0, 12
    4e84:	add	ip, ip, #258048	; 0x3f000
    4e88:	ldr	pc, [ip, #992]!	; 0x3e0

00004e8c <readstat_get_value_label@plt>:
    4e8c:	add	ip, pc, #0, 12
    4e90:	add	ip, ip, #258048	; 0x3f000
    4e94:	ldr	pc, [ip, #984]!	; 0x3d8

00004e98 <sas_rle_compress@plt>:
    4e98:	add	ip, pc, #0, 12
    4e9c:	add	ip, ip, #258048	; 0x3f000
    4ea0:	ldr	pc, [ip, #976]!	; 0x3d0

00004ea4 <readstat_write_line_padding@plt>:
    4ea4:	add	ip, pc, #0, 12
    4ea8:	add	ip, ip, #258048	; 0x3f000
    4eac:	ldr	pc, [ip, #968]!	; 0x3c8

00004eb0 <ck_str_hash_insert@plt>:
    4eb0:	add	ip, pc, #0, 12
    4eb4:	add	ip, ip, #258048	; 0x3f000
    4eb8:	ldr	pc, [ip, #960]!	; 0x3c0

00004ebc <strncmp@plt>:
    4ebc:	add	ip, pc, #0, 12
    4ec0:	add	ip, ip, #258048	; 0x3f000
    4ec4:	ldr	pc, [ip, #952]!	; 0x3b8

00004ec8 <byteswap_double@plt>:
    4ec8:	add	ip, pc, #0, 12
    4ecc:	add	ip, ip, #258048	; 0x3f000
    4ed0:	ldr	pc, [ip, #944]!	; 0x3b0

00004ed4 <close@plt>:
    4ed4:	add	ip, pc, #0, 12
    4ed8:	add	ip, ip, #258048	; 0x3f000
    4edc:	ldr	pc, [ip, #936]!	; 0x3a8

00004ee0 <readstat_write_bytes_as_lines@plt>:
    4ee0:	add	ip, pc, #0, 12
    4ee4:	add	ip, ip, #258048	; 0x3f000
    4ee8:	ldr	pc, [ip, #928]!	; 0x3a0

00004eec <spss_missingness_for_info@plt>:
    4eec:	add	ip, pc, #0, 12
    4ef0:	add	ip, ip, #258048	; 0x3f000
    4ef4:	ldr	pc, [ip, #920]!	; 0x398

00004ef8 <handle_variables@plt>:
    4ef8:	add	ip, pc, #0, 12
    4efc:	add	ip, ip, #258048	; 0x3f000
    4f00:	ldr	pc, [ip, #912]!	; 0x390

00004f04 <readstat_variable_get_type_class@plt>:
    4f04:	add	ip, pc, #0, 12
    4f08:	add	ip, ip, #258048	; 0x3f000
    4f0c:	ldr	pc, [ip, #904]!	; 0x388

00004f10 <readstat_write_space_padded_string@plt>:
    4f10:	add	ip, pc, #0, 12
    4f14:	add	ip, ip, #258048	; 0x3f000
    4f18:	ldr	pc, [ip, #896]!	; 0x380

00004f1c <dta_ctx_alloc@plt>:
    4f1c:	add	ip, pc, #0, 12
    4f20:	add	ip, ip, #258048	; 0x3f000
    4f24:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00004f28 <call_weak_fn>:
    4f28:	ldr	r3, [pc, #20]	; 4f44 <call_weak_fn+0x1c>
    4f2c:	ldr	r2, [pc, #20]	; 4f48 <call_weak_fn+0x20>
    4f30:	add	r3, pc, r3
    4f34:	ldr	r2, [r3, r2]
    4f38:	cmp	r2, #0
    4f3c:	bxeq	lr
    4f40:	b	4b80 <__gmon_start__@plt>
    4f44:	.word	0x0003f0c8
    4f48:	.word	0x000002c4

00004f4c <deregister_tm_clones>:
    4f4c:	ldr	r0, [pc, #44]	; 4f80 <deregister_tm_clones+0x34>
    4f50:	ldr	r3, [pc, #44]	; 4f84 <deregister_tm_clones+0x38>
    4f54:	add	r0, pc, r0
    4f58:	add	r3, pc, r3
    4f5c:	cmp	r3, r0
    4f60:	ldr	r3, [pc, #32]	; 4f88 <deregister_tm_clones+0x3c>
    4f64:	add	r3, pc, r3
    4f68:	bxeq	lr
    4f6c:	ldr	r2, [pc, #24]	; 4f8c <deregister_tm_clones+0x40>
    4f70:	ldr	r3, [r3, r2]
    4f74:	cmp	r3, #0
    4f78:	bxeq	lr
    4f7c:	bx	r3
    4f80:	.word	0x00040da8
    4f84:	.word	0x00040da4
    4f88:	.word	0x0003f094
    4f8c:	.word	0x000002ac

00004f90 <register_tm_clones>:
    4f90:	ldr	r0, [pc, #56]	; 4fd0 <register_tm_clones+0x40>
    4f94:	ldr	r3, [pc, #56]	; 4fd4 <register_tm_clones+0x44>
    4f98:	add	r0, pc, r0
    4f9c:	add	r3, pc, r3
    4fa0:	sub	r1, r3, r0
    4fa4:	ldr	r3, [pc, #44]	; 4fd8 <register_tm_clones+0x48>
    4fa8:	asr	r1, r1, #2
    4fac:	add	r3, pc, r3
    4fb0:	add	r1, r1, r1, lsr #31
    4fb4:	asrs	r1, r1, #1
    4fb8:	bxeq	lr
    4fbc:	ldr	r2, [pc, #24]	; 4fdc <register_tm_clones+0x4c>
    4fc0:	ldr	r3, [r3, r2]
    4fc4:	cmp	r3, #0
    4fc8:	bxeq	lr
    4fcc:	bx	r3
    4fd0:	.word	0x00040d64
    4fd4:	.word	0x00040d60
    4fd8:	.word	0x0003f04c
    4fdc:	.word	0x000002f0

00004fe0 <__do_global_dtors_aux>:
    4fe0:	ldr	r3, [pc, #76]	; 5034 <__do_global_dtors_aux+0x54>
    4fe4:	ldr	r2, [pc, #76]	; 5038 <__do_global_dtors_aux+0x58>
    4fe8:	add	r3, pc, r3
    4fec:	add	r2, pc, r2
    4ff0:	ldrb	r3, [r3]
    4ff4:	cmp	r3, #0
    4ff8:	bxne	lr
    4ffc:	ldr	r3, [pc, #56]	; 503c <__do_global_dtors_aux+0x5c>
    5000:	push	{r4, lr}
    5004:	ldr	r3, [r2, r3]
    5008:	cmp	r3, #0
    500c:	beq	501c <__do_global_dtors_aux+0x3c>
    5010:	ldr	r3, [pc, #40]	; 5040 <__do_global_dtors_aux+0x60>
    5014:	ldr	r0, [pc, r3]
    5018:	bl	4814 <__cxa_finalize@plt>
    501c:	bl	4f4c <deregister_tm_clones>
    5020:	ldr	r3, [pc, #28]	; 5044 <__do_global_dtors_aux+0x64>
    5024:	mov	r2, #1
    5028:	add	r3, pc, r3
    502c:	strb	r2, [r3]
    5030:	pop	{r4, pc}
    5034:	.word	0x00040d14
    5038:	.word	0x0003f00c
    503c:	.word	0x000002a8
    5040:	.word	0x0003f2dc
    5044:	.word	0x00040cd4

00005048 <frame_dummy>:
    5048:	b	4f90 <register_tm_clones>

0000504c <ck_hash_str>:
    504c:	push	{fp, lr}
    5050:	mov	fp, sp
    5054:	ldrb	r3, [r0]
    5058:	cmp	r3, #0
    505c:	moveq	r1, #0
    5060:	movweq	r0, #5381	; 0x1505
    5064:	popeq	{fp, pc}
    5068:	add	r2, r0, #1
    506c:	mov	r1, #0
    5070:	movw	lr, #5381	; 0x1505
    5074:	mov	ip, #33	; 0x21
    5078:	uxtb	r0, r3
    507c:	ldrb	r3, [r2], #1
    5080:	add	r1, r1, r1, lsl #5
    5084:	umlal	r0, r1, lr, ip
    5088:	mov	lr, r0
    508c:	cmp	r3, #0
    5090:	bne	5078 <ck_hash_str+0x2c>
    5094:	pop	{fp, pc}

00005098 <ck_float_hash_lookup>:
    5098:	push	{r4, sl, fp, lr}
    509c:	add	fp, sp, #8
    50a0:	sub	sp, sp, #8
    50a4:	mov	ip, r0
    50a8:	mov	r0, #0
    50ac:	mov	lr, #2
    50b0:	mov	r4, #8
    50b4:	strb	r0, [sp, #7]
    50b8:	vmov	r0, s0
    50bc:	orr	r1, r0, #1
    50c0:	orr	r3, lr, r0, lsr #8
    50c4:	strb	r1, [sp, #2]
    50c8:	strb	r3, [sp, #3]
    50cc:	mov	r3, #4
    50d0:	orr	r1, r4, r0, lsr #24
    50d4:	orr	r2, r3, r0, lsr #16
    50d8:	strb	r2, [sp, #4]
    50dc:	strb	r1, [sp, #5]
    50e0:	and	r1, r3, r0, lsr #16
    50e4:	and	r3, lr, r0, lsr #8
    50e8:	and	r2, r0, #1
    50ec:	and	r0, r4, r0, lsr #24
    50f0:	orr	r2, r2, r3
    50f4:	orr	r1, r2, r1
    50f8:	mov	r2, ip
    50fc:	orr	r0, r1, r0
    5100:	mov	r1, #5
    5104:	orr	r0, r0, #240	; 0xf0
    5108:	strb	r0, [sp, #6]
    510c:	add	r0, sp, #2
    5110:	bl	4a54 <ck_str_n_hash_lookup@plt>
    5114:	sub	sp, fp, #8
    5118:	pop	{r4, sl, fp, pc}

0000511c <ck_str_n_hash_lookup>:
    511c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5120:	add	fp, sp, #28
    5124:	sub	sp, sp, #20
    5128:	mov	r4, r2
    512c:	sub	r2, r1, #1
    5130:	mov	r5, #0
    5134:	cmp	r2, #126	; 0x7e
    5138:	bhi	5260 <ck_str_n_hash_lookup+0x144>
    513c:	ldrd	r2, [r4, #8]
    5140:	orrs	r2, r2, r3
    5144:	beq	5260 <ck_str_n_hash_lookup+0x144>
    5148:	ldrb	r3, [r0]
    514c:	mov	r5, #0
    5150:	str	r0, [sp, #16]
    5154:	str	r1, [sp, #4]
    5158:	cmp	r3, #0
    515c:	beq	5190 <ck_str_n_hash_lookup+0x74>
    5160:	add	r2, r0, #1
    5164:	mov	r1, #0
    5168:	movw	r6, #5381	; 0x1505
    516c:	mov	r7, #33	; 0x21
    5170:	uxtb	r0, r3
    5174:	ldrb	r3, [r2], #1
    5178:	add	r1, r1, r1, lsl #5
    517c:	umlal	r0, r1, r6, r7
    5180:	mov	r6, r0
    5184:	cmp	r3, #0
    5188:	bne	5170 <ck_str_n_hash_lookup+0x54>
    518c:	b	5198 <ck_str_n_hash_lookup+0x7c>
    5190:	movw	r0, #5381	; 0x1505
    5194:	mov	r1, #0
    5198:	ldr	sl, [r4]
    519c:	ldr	r9, [r4, #4]
    51a0:	str	r4, [sp]
    51a4:	mov	r2, sl
    51a8:	mov	r3, r9
    51ac:	bl	2379c <__aeabi_uldivmod>
    51b0:	subs	r0, r2, #1
    51b4:	mov	r4, r2
    51b8:	mov	r7, r3
    51bc:	mov	r2, sl
    51c0:	sbc	r1, r3, #0
    51c4:	mov	r3, r9
    51c8:	bl	2379c <__aeabi_uldivmod>
    51cc:	eor	r0, r7, r3
    51d0:	eor	r1, r4, r2
    51d4:	orrs	r0, r1, r0
    51d8:	beq	5260 <ck_str_n_hash_lookup+0x144>
    51dc:	ldr	r0, [sp, #4]
    51e0:	str	r9, [sp, #8]
    51e4:	mov	r6, r2
    51e8:	mov	r8, r3
    51ec:	str	sl, [sp, #12]
    51f0:	add	r5, r0, #1
    51f4:	ldr	r0, [sp]
    51f8:	ldr	r9, [r0, #16]
    51fc:	add	sl, r4, r4, lsl #5
    5200:	mov	r0, r9
    5204:	ldrb	r1, [r0, sl, lsl #2]!
    5208:	cmp	r1, #0
    520c:	beq	5250 <ck_str_n_hash_lookup+0x134>
    5210:	ldr	r1, [sp, #16]
    5214:	mov	r2, r5
    5218:	bl	4ebc <strncmp@plt>
    521c:	cmp	r0, #0
    5220:	beq	5258 <ck_str_n_hash_lookup+0x13c>
    5224:	ldr	r2, [sp, #12]
    5228:	ldr	r3, [sp, #8]
    522c:	adds	r0, r4, #1
    5230:	adc	r1, r7, #0
    5234:	bl	2379c <__aeabi_uldivmod>
    5238:	eor	r0, r3, r8
    523c:	eor	r1, r2, r6
    5240:	mov	r4, r2
    5244:	mov	r7, r3
    5248:	orrs	r0, r1, r0
    524c:	bne	51fc <ck_str_n_hash_lookup+0xe0>
    5250:	mov	r5, #0
    5254:	b	5260 <ck_str_n_hash_lookup+0x144>
    5258:	add	r0, r9, sl, lsl #2
    525c:	ldr	r5, [r0, #128]	; 0x80
    5260:	mov	r0, r5
    5264:	sub	sp, fp, #28
    5268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000526c <ck_float_hash_insert>:
    526c:	push	{r4, sl, fp, lr}
    5270:	add	fp, sp, #8
    5274:	sub	sp, sp, #8
    5278:	mov	lr, r0
    527c:	mov	r0, #0
    5280:	mov	ip, r1
    5284:	strb	r0, [sp, #7]
    5288:	vmov	r0, s0
    528c:	orr	r1, r0, #1
    5290:	strb	r1, [sp, #2]
    5294:	mov	r1, #2
    5298:	orr	r3, r1, r0, lsr #8
    529c:	and	r1, r1, r0, lsr #8
    52a0:	strb	r3, [sp, #3]
    52a4:	mov	r3, #4
    52a8:	orr	r2, r3, r0, lsr #16
    52ac:	and	r3, r3, r0, lsr #16
    52b0:	strb	r2, [sp, #4]
    52b4:	mov	r2, #8
    52b8:	orr	r4, r2, r0, lsr #24
    52bc:	strb	r4, [sp, #5]
    52c0:	and	r4, r0, #1
    52c4:	and	r0, r2, r0, lsr #24
    52c8:	mov	r2, lr
    52cc:	orr	r1, r4, r1
    52d0:	orr	r1, r1, r3
    52d4:	mov	r3, ip
    52d8:	orr	r0, r1, r0
    52dc:	mov	r1, #5
    52e0:	orr	r0, r0, #240	; 0xf0
    52e4:	strb	r0, [sp, #6]
    52e8:	add	r0, sp, #2
    52ec:	bl	4c64 <ck_str_n_hash_insert@plt>
    52f0:	sub	sp, fp, #8
    52f4:	pop	{r4, sl, fp, pc}

000052f8 <ck_str_n_hash_insert>:
    52f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    52fc:	add	fp, sp, #28
    5300:	sub	sp, sp, #36	; 0x24
    5304:	mov	r9, r1
    5308:	sub	r1, r1, #1
    530c:	mov	r4, #0
    5310:	cmp	r1, #126	; 0x7e
    5314:	bhi	5514 <ck_str_n_hash_insert+0x21c>
    5318:	ldrd	r6, [r3]
    531c:	mov	sl, r3
    5320:	orrs	r1, r6, r7
    5324:	beq	5514 <ck_str_n_hash_insert+0x21c>
    5328:	mov	r1, sl
    532c:	str	r0, [sp, #32]
    5330:	mov	r8, r2
    5334:	ldr	r0, [r1, #8]!
    5338:	str	r1, [sp, #16]
    533c:	ldr	r1, [r1, #4]
    5340:	bl	23654 <__aeabi_ul2d>
    5344:	mov	r4, r0
    5348:	mov	r5, r1
    534c:	mov	r0, r6
    5350:	mov	r1, r7
    5354:	bl	23654 <__aeabi_ul2d>
    5358:	vmov.f64	d16, #104	; 0x3f400000  0.750
    535c:	vmov	d17, r0, r1
    5360:	vmul.f64	d16, d17, d16
    5364:	vmov	d17, r4, r5
    5368:	mov	r4, #0
    536c:	vcmpe.f64	d16, d17
    5370:	vmrs	APSR_nzcv, fpscr
    5374:	bhi	5388 <ck_str_n_hash_insert+0x90>
    5378:	mov	r0, sl
    537c:	bl	49d0 <ck_hash_table_grow@plt>
    5380:	cmn	r0, #1
    5384:	beq	5514 <ck_str_n_hash_insert+0x21c>
    5388:	ldr	r0, [sp, #32]
    538c:	ldrb	r3, [r0]
    5390:	cmp	r3, #0
    5394:	beq	53c8 <ck_str_n_hash_insert+0xd0>
    5398:	add	r2, r0, #1
    539c:	mov	r1, #0
    53a0:	movw	r6, #5381	; 0x1505
    53a4:	mov	r7, #33	; 0x21
    53a8:	uxtb	r0, r3
    53ac:	ldrb	r3, [r2], #1
    53b0:	add	r1, r1, r1, lsl #5
    53b4:	umlal	r0, r1, r6, r7
    53b8:	mov	r6, r0
    53bc:	cmp	r3, #0
    53c0:	bne	53a8 <ck_str_n_hash_insert+0xb0>
    53c4:	b	53d0 <ck_str_n_hash_insert+0xd8>
    53c8:	mov	r1, #0
    53cc:	movw	r0, #5381	; 0x1505
    53d0:	str	r9, [sp, #12]
    53d4:	ldm	sl, {r7, r9}
    53d8:	mov	r2, r7
    53dc:	mov	r3, r9
    53e0:	bl	2379c <__aeabi_uldivmod>
    53e4:	mov	r6, r2
    53e8:	mov	r5, r3
    53ec:	orrs	r0, r2, r3
    53f0:	beq	540c <ck_str_n_hash_insert+0x114>
    53f4:	subs	r0, r6, #1
    53f8:	mov	r2, r7
    53fc:	mov	r3, r9
    5400:	sbc	r1, r5, #0
    5404:	bl	2379c <__aeabi_uldivmod>
    5408:	b	5414 <ck_str_n_hash_insert+0x11c>
    540c:	subs	r2, r7, #1
    5410:	sbc	r3, r9, #0
    5414:	eor	r0, r6, r2
    5418:	eor	r1, r5, r3
    541c:	mov	r4, #0
    5420:	orrs	r0, r0, r1
    5424:	beq	5514 <ck_str_n_hash_insert+0x21c>
    5428:	ldr	r1, [sp, #12]
    542c:	str	r7, [sp, #24]
    5430:	ldr	r7, [sl, #16]
    5434:	str	r9, [sp, #20]
    5438:	str	r8, [sp, #8]
    543c:	str	sl, [sp, #4]
    5440:	add	r1, r1, #1
    5444:	str	r1, [sp, #28]
    5448:	add	r8, r6, r6, lsl #5
    544c:	mov	r4, r7
    5450:	mov	sl, r3
    5454:	mov	r9, r2
    5458:	ldrb	r0, [r4, r8, lsl #2]!
    545c:	cmp	r0, #0
    5460:	bne	5484 <ck_str_n_hash_insert+0x18c>
    5464:	ldr	r2, [sp, #16]
    5468:	ldrd	r0, [r2]
    546c:	adds	r0, r0, #1
    5470:	adc	r1, r1, #0
    5474:	strd	r0, [r2]
    5478:	ldrb	r0, [r4]
    547c:	cmp	r0, #0
    5480:	beq	54d8 <ck_str_n_hash_insert+0x1e0>
    5484:	ldr	r1, [sp, #32]
    5488:	ldr	r2, [sp, #28]
    548c:	mov	r0, r4
    5490:	bl	4ebc <strncmp@plt>
    5494:	cmp	r0, #0
    5498:	beq	54d8 <ck_str_n_hash_insert+0x1e0>
    549c:	ldr	r2, [sp, #24]
    54a0:	ldr	r3, [sp, #20]
    54a4:	adds	r0, r6, #1
    54a8:	adc	r1, r5, #0
    54ac:	bl	2379c <__aeabi_uldivmod>
    54b0:	mov	r6, r2
    54b4:	mov	r5, r3
    54b8:	mov	r3, sl
    54bc:	mov	r2, r9
    54c0:	eor	r0, r5, sl
    54c4:	eor	r1, r6, r9
    54c8:	orrs	r0, r1, r0
    54cc:	bne	5448 <ck_str_n_hash_insert+0x150>
    54d0:	mov	r4, #0
    54d4:	b	5514 <ck_str_n_hash_insert+0x21c>
    54d8:	mov	r0, r4
    54dc:	ldr	r4, [sp, #12]
    54e0:	ldr	r1, [sp, #32]
    54e4:	mov	r2, r4
    54e8:	bl	4910 <memcpy@plt>
    54ec:	ldr	r2, [sp, #4]
    54f0:	mov	r1, #0
    54f4:	ldr	r0, [r2, #16]
    54f8:	add	r0, r0, r8, lsl #2
    54fc:	strb	r1, [r0, r4]
    5500:	ldr	r1, [sp, #8]
    5504:	mov	r4, #1
    5508:	ldr	r0, [r2, #16]
    550c:	add	r0, r0, r8, lsl #2
    5510:	str	r1, [r0, #128]	; 0x80
    5514:	mov	r0, r4
    5518:	sub	sp, fp, #28
    551c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005520 <ck_double_hash_lookup>:
    5520:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    5524:	add	fp, sp, #24
    5528:	sub	sp, sp, #16
    552c:	mov	ip, r0
    5530:	mov	r0, #0
    5534:	mov	lr, #2
    5538:	mov	r8, #8
    553c:	strb	r0, [sp, #15]
    5540:	vmov	r0, r1, d0
    5544:	orr	r3, r0, #1
    5548:	orr	r2, lr, r1, lsr #8
    554c:	orr	r4, r8, r1, lsr #24
    5550:	strb	r3, [sp, #5]
    5554:	orr	r3, r1, #1
    5558:	strb	r3, [sp, #9]
    555c:	strb	r2, [sp, #10]
    5560:	mov	r2, #4
    5564:	orr	r3, r2, r1, lsr #16
    5568:	and	r2, r2, r1, lsr #16
    556c:	strb	r3, [sp, #11]
    5570:	strb	r4, [sp, #12]
    5574:	lsr	r4, r0, #8
    5578:	and	r3, r1, #1
    557c:	orr	r4, r4, r1, lsl #24
    5580:	orr	r5, r4, #2
    5584:	strb	r5, [sp, #6]
    5588:	lsr	r5, r0, #16
    558c:	orr	r5, r5, r1, lsl #16
    5590:	orr	r6, r5, #4
    5594:	strb	r6, [sp, #7]
    5598:	lsr	r6, r0, #24
    559c:	and	r0, r0, #1
    55a0:	orr	r6, r6, r1, lsl #8
    55a4:	orr	r7, r6, #8
    55a8:	strb	r7, [sp, #8]
    55ac:	and	r7, lr, r1, lsr #8
    55b0:	and	r1, r8, r1, lsr #24
    55b4:	orr	r3, r7, r3
    55b8:	orr	r2, r3, r2
    55bc:	orr	r1, r2, r1
    55c0:	mov	r2, ip
    55c4:	orr	r1, r1, #240	; 0xf0
    55c8:	strb	r1, [sp, #14]
    55cc:	and	r1, r4, #2
    55d0:	orr	r0, r0, r1
    55d4:	and	r1, r5, #4
    55d8:	orr	r0, r0, r1
    55dc:	and	r1, r6, #8
    55e0:	orr	r0, r0, r1
    55e4:	mov	r1, #10
    55e8:	orr	r0, r0, #240	; 0xf0
    55ec:	strb	r0, [sp, #13]
    55f0:	add	r0, sp, #5
    55f4:	bl	4a54 <ck_str_n_hash_lookup@plt>
    55f8:	sub	sp, fp, #24
    55fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00005600 <ck_double_hash_insert>:
    5600:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5604:	add	fp, sp, #24
    5608:	sub	sp, sp, #16
    560c:	mov	lr, r0
    5610:	mov	r0, #0
    5614:	mov	ip, r1
    5618:	mov	r8, #2
    561c:	mov	r9, #8
    5620:	strb	r0, [sp, #15]
    5624:	vmov	r0, r1, d0
    5628:	orr	r3, r0, #1
    562c:	orr	r2, r8, r1, lsr #8
    5630:	orr	r5, r9, r1, lsr #24
    5634:	strb	r3, [sp, #5]
    5638:	orr	r3, r1, #1
    563c:	strb	r3, [sp, #9]
    5640:	strb	r2, [sp, #10]
    5644:	mov	r2, #4
    5648:	orr	r4, r2, r1, lsr #16
    564c:	and	r2, r2, r1, lsr #16
    5650:	strb	r4, [sp, #11]
    5654:	strb	r5, [sp, #12]
    5658:	lsr	r5, r0, #8
    565c:	and	r4, r1, #1
    5660:	orr	r5, r5, r1, lsl #24
    5664:	orr	r6, r5, #2
    5668:	strb	r6, [sp, #6]
    566c:	lsr	r6, r0, #16
    5670:	orr	r6, r6, r1, lsl #16
    5674:	orr	r7, r6, #4
    5678:	strb	r7, [sp, #7]
    567c:	lsr	r7, r0, #24
    5680:	and	r0, r0, #1
    5684:	orr	r7, r7, r1, lsl #8
    5688:	orr	r3, r7, #8
    568c:	strb	r3, [sp, #8]
    5690:	and	r3, r8, r1, lsr #8
    5694:	and	r1, r9, r1, lsr #24
    5698:	orr	r3, r3, r4
    569c:	orr	r2, r3, r2
    56a0:	mov	r3, ip
    56a4:	orr	r1, r2, r1
    56a8:	mov	r2, lr
    56ac:	orr	r1, r1, #240	; 0xf0
    56b0:	strb	r1, [sp, #14]
    56b4:	and	r1, r5, #2
    56b8:	orr	r0, r0, r1
    56bc:	and	r1, r6, #4
    56c0:	orr	r0, r0, r1
    56c4:	and	r1, r7, #8
    56c8:	orr	r0, r0, r1
    56cc:	mov	r1, #10
    56d0:	orr	r0, r0, #240	; 0xf0
    56d4:	strb	r0, [sp, #13]
    56d8:	add	r0, sp, #5
    56dc:	bl	4c64 <ck_str_n_hash_insert@plt>
    56e0:	sub	sp, fp, #24
    56e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000056e8 <ck_str_hash_lookup>:
    56e8:	push	{r4, r5, fp, lr}
    56ec:	add	fp, sp, #8
    56f0:	mov	r4, r1
    56f4:	mov	r5, r0
    56f8:	bl	4bd4 <strlen@plt>
    56fc:	mov	r1, r0
    5700:	cmp	r0, #127	; 0x7f
    5704:	mov	r0, r5
    5708:	mov	r2, r4
    570c:	movcs	r1, #127	; 0x7f
    5710:	pop	{r4, r5, fp, lr}
    5714:	b	511c <ck_str_n_hash_lookup>

00005718 <ck_str_hash_insert>:
    5718:	push	{r4, r5, r6, sl, fp, lr}
    571c:	add	fp, sp, #16
    5720:	mov	r4, r2
    5724:	mov	r5, r1
    5728:	mov	r6, r0
    572c:	bl	4bd4 <strlen@plt>
    5730:	mov	r1, r0
    5734:	cmp	r0, #127	; 0x7f
    5738:	mov	r0, r6
    573c:	mov	r2, r5
    5740:	mov	r3, r4
    5744:	movcs	r1, #127	; 0x7f
    5748:	pop	{r4, r5, r6, sl, fp, lr}
    574c:	b	52f8 <ck_str_n_hash_insert>

00005750 <ck_hash_table_grow>:
    5750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5754:	add	fp, sp, #28
    5758:	sub	sp, sp, #4
    575c:	ldm	r0, {r6, sl}
    5760:	mov	r5, r0
    5764:	ldr	r0, [r0, #16]
    5768:	mov	r1, #132	; 0x84
    576c:	lsl	r7, r6, #1
    5770:	str	r0, [sp]
    5774:	mov	r0, r7
    5778:	bl	4778 <calloc@plt>
    577c:	cmp	r0, #0
    5780:	str	r0, [r5, #16]
    5784:	beq	5810 <ck_hash_table_grow+0xc0>
    5788:	lsl	r0, sl, #1
    578c:	mov	r9, #0
    5790:	str	r7, [r5]
    5794:	orr	r0, r0, r6, lsr #31
    5798:	stmib	r5, {r0, r9}
    579c:	orrs	r0, r6, sl
    57a0:	str	r9, [r5, #12]
    57a4:	beq	5804 <ck_hash_table_grow+0xb4>
    57a8:	ldr	r7, [sp]
    57ac:	mov	r8, #1
    57b0:	ldrb	r0, [r7]
    57b4:	cmp	r0, #0
    57b8:	beq	57ec <ck_hash_table_grow+0x9c>
    57bc:	ldr	r4, [r7, #128]	; 0x80
    57c0:	mov	r0, r7
    57c4:	bl	4bd4 <strlen@plt>
    57c8:	mov	r1, r0
    57cc:	cmp	r0, #127	; 0x7f
    57d0:	mov	r0, r7
    57d4:	mov	r2, r4
    57d8:	mov	r3, r5
    57dc:	movcs	r1, #127	; 0x7f
    57e0:	bl	4c64 <ck_str_n_hash_insert@plt>
    57e4:	cmp	r0, #0
    57e8:	beq	5810 <ck_hash_table_grow+0xc0>
    57ec:	subs	r1, r8, r6
    57f0:	add	r0, r8, #1
    57f4:	add	r7, r7, #132	; 0x84
    57f8:	rscs	r1, sl, #0
    57fc:	mov	r8, r0
    5800:	bcc	57b0 <ck_hash_table_grow+0x60>
    5804:	ldr	r0, [sp]
    5808:	bl	48bc <free@plt>
    580c:	b	5814 <ck_hash_table_grow+0xc4>
    5810:	mvn	r9, #0
    5814:	mov	r0, r9
    5818:	sub	sp, fp, #28
    581c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005820 <ck_hash_table_init>:
    5820:	push	{r4, r5, r6, r7, fp, lr}
    5824:	add	fp, sp, #16
    5828:	mov	r6, r0
    582c:	mov	r0, #24
    5830:	bl	4af0 <malloc@plt>
    5834:	mov	r5, #0
    5838:	cmp	r0, #0
    583c:	beq	5894 <ck_hash_table_init+0x74>
    5840:	mov	r4, r0
    5844:	add	r0, r6, r6, lsl #5
    5848:	lsl	r7, r0, #3
    584c:	mov	r0, r7
    5850:	bl	4af0 <malloc@plt>
    5854:	cmp	r0, #0
    5858:	str	r0, [r4, #16]
    585c:	beq	588c <ck_hash_table_init+0x6c>
    5860:	mov	r1, #0
    5864:	lsl	r2, r6, #1
    5868:	str	r2, [r4]
    586c:	str	r1, [r4, #4]
    5870:	str	r1, [r4, #8]
    5874:	str	r1, [r4, #12]
    5878:	mov	r1, #0
    587c:	mov	r2, r7
    5880:	bl	4c70 <memset@plt>
    5884:	mov	r5, r4
    5888:	b	5894 <ck_hash_table_init+0x74>
    588c:	mov	r0, r4
    5890:	bl	48bc <free@plt>
    5894:	mov	r0, r5
    5898:	pop	{r4, r5, r6, r7, fp, pc}

0000589c <ck_hash_table_wipe>:
    589c:	ldr	r1, [r0]
    58a0:	ldr	r0, [r0, #16]
    58a4:	add	r1, r1, r1, lsl #5
    58a8:	lsl	r2, r1, #2
    58ac:	mov	r1, #0
    58b0:	b	4c70 <memset@plt>

000058b4 <ck_hash_table_free>:
    58b4:	push	{r4, sl, fp, lr}
    58b8:	add	fp, sp, #8
    58bc:	mov	r4, r0
    58c0:	ldr	r0, [r0, #16]
    58c4:	bl	48bc <free@plt>
    58c8:	mov	r0, r4
    58cc:	pop	{r4, sl, fp, lr}
    58d0:	b	48bc <free@plt>

000058d4 <machine_is_little_endian>:
    58d4:	mov	r0, #1
    58d8:	bx	lr

000058dc <ones_to_twos_complement1>:
    58dc:	bx	lr

000058e0 <ones_to_twos_complement2>:
    58e0:	and	r1, r0, #32768	; 0x8000
    58e4:	add	r0, r0, r1, lsr #15
    58e8:	sxth	r0, r0
    58ec:	bx	lr

000058f0 <ones_to_twos_complement4>:
    58f0:	add	r0, r0, r0, lsr #31
    58f4:	bx	lr

000058f8 <twos_to_ones_complement1>:
    58f8:	bx	lr

000058fc <twos_to_ones_complement2>:
    58fc:	add	r0, r0, r0, lsr #15
    5900:	sxth	r0, r0
    5904:	bx	lr

00005908 <twos_to_ones_complement4>:
    5908:	add	r0, r0, r0, asr #31
    590c:	bx	lr

00005910 <byteswap2>:
    5910:	rev16	r0, r0
    5914:	bx	lr

00005918 <byteswap4>:
    5918:	rev	r0, r0
    591c:	bx	lr

00005920 <byteswap8>:
    5920:	rev	r2, r1
    5924:	rev	r1, r0
    5928:	mov	r0, r2
    592c:	bx	lr

00005930 <byteswap_float>:
    5930:	vmov	r0, s0
    5934:	rev	r0, r0
    5938:	vmov	s0, r0
    593c:	bx	lr

00005940 <byteswap_double>:
    5940:	vmov	r0, r1, d0
    5944:	rev	r0, r0
    5948:	rev	r1, r1
    594c:	vmov	d0, r1, r0
    5950:	bx	lr

00005954 <readstat_convert>:
    5954:	push	{r4, r5, r6, sl, fp, lr}
    5958:	add	fp, sp, #16
    595c:	sub	sp, sp, #24
    5960:	ldr	ip, [fp, #8]
    5964:	mov	r4, r0
    5968:	mov	r5, r1
    596c:	sub	r0, r2, #1
    5970:	str	r2, [sp, #20]
    5974:	mov	r6, r3
    5978:	cmp	r3, #0
    597c:	beq	5990 <readstat_convert+0x3c>
    5980:	ldrb	r1, [r0, r6]
    5984:	sub	r3, r6, #1
    5988:	cmp	r1, #32
    598c:	beq	5974 <readstat_convert+0x20>
    5990:	mov	r0, #19
    5994:	cmp	r5, #0
    5998:	str	r6, [sp, #16]
    599c:	beq	5a44 <readstat_convert+0xf0>
    59a0:	cmp	ip, #0
    59a4:	beq	59f0 <readstat_convert+0x9c>
    59a8:	sub	r0, r5, #1
    59ac:	add	r1, sp, #20
    59b0:	add	r2, sp, #16
    59b4:	add	r3, sp, #8
    59b8:	str	r4, [sp, #8]
    59bc:	str	r0, [sp, #12]
    59c0:	add	r0, sp, #12
    59c4:	str	r0, [sp]
    59c8:	mov	r0, ip
    59cc:	bl	47f0 <iconv@plt>
    59d0:	cmn	r0, #1
    59d4:	beq	5a18 <readstat_convert+0xc4>
    59d8:	ldr	r0, [sp, #12]
    59dc:	mvn	r0, r0
    59e0:	add	r1, r0, r5
    59e4:	mov	r0, #0
    59e8:	strb	r0, [r4, r1]
    59ec:	b	5a44 <readstat_convert+0xf0>
    59f0:	add	r1, r6, #1
    59f4:	cmp	r1, r5
    59f8:	bhi	5a44 <readstat_convert+0xf0>
    59fc:	mov	r1, r2
    5a00:	mov	r0, r4
    5a04:	mov	r2, r6
    5a08:	bl	4910 <memcpy@plt>
    5a0c:	mov	r0, #0
    5a10:	strb	r0, [r4, r6]
    5a14:	b	5a44 <readstat_convert+0xf0>
    5a18:	bl	4c34 <__errno_location@plt>
    5a1c:	ldr	r0, [r0]
    5a20:	cmp	r0, #7
    5a24:	beq	5a40 <readstat_convert+0xec>
    5a28:	cmp	r0, #22
    5a2c:	beq	59d8 <readstat_convert+0x84>
    5a30:	cmp	r0, #84	; 0x54
    5a34:	movne	r0, #16
    5a38:	moveq	r0, #17
    5a3c:	b	5a44 <readstat_convert+0xf0>
    5a40:	mov	r0, #19
    5a44:	sub	sp, fp, #16
    5a48:	pop	{r4, r5, r6, sl, fp, pc}

00005a4c <readstat_error_message>:
    5a4c:	cmp	r0, #39	; 0x27
    5a50:	ldrhi	r0, [pc, #24]	; 5a70 <readstat_error_message+0x24>
    5a54:	addhi	r0, pc, r0
    5a58:	bxhi	lr
    5a5c:	ldr	r1, [pc, #8]	; 5a6c <readstat_error_message+0x20>
    5a60:	add	r1, pc, r1
    5a64:	ldr	r0, [r1, r0, lsl #2]
    5a68:	bx	lr
    5a6c:	.word	0x0003e3f8
    5a70:	.word	0x0001e744

00005a74 <unistd_open_handler>:
    5a74:	push	{r4, sl, fp, lr}
    5a78:	add	fp, sp, #8
    5a7c:	mov	r4, r1
    5a80:	mov	r1, #0
    5a84:	bl	4b8c <open@plt>
    5a88:	str	r0, [r4]
    5a8c:	pop	{r4, sl, fp, pc}

00005a90 <unistd_close_handler>:
    5a90:	ldr	r0, [r0]
    5a94:	cmn	r0, #1
    5a98:	moveq	r0, #0
    5a9c:	bxeq	lr
    5aa0:	b	4ed4 <close@plt>

00005aa4 <unistd_seek_handler>:
    5aa4:	cmp	r1, #2
    5aa8:	mov	r3, r1
    5aac:	mvnhi	r0, #0
    5ab0:	bxhi	lr
    5ab4:	mov	r1, r0
    5ab8:	ldr	r0, [r2]
    5abc:	mov	r2, r3
    5ac0:	b	4958 <lseek@plt>

00005ac4 <unistd_read_handler>:
    5ac4:	mov	r3, r1
    5ac8:	mov	r1, r0
    5acc:	ldr	r0, [r2]
    5ad0:	mov	r2, r3
    5ad4:	b	4838 <read@plt>

00005ad8 <unistd_update_handler>:
    5ad8:	push	{r4, r5, r6, sl, fp, lr}
    5adc:	add	fp, sp, #16
    5ae0:	cmp	r1, #0
    5ae4:	moveq	r0, #0
    5ae8:	popeq	{r4, r5, r6, sl, fp, pc}
    5aec:	mov	r6, r0
    5af0:	ldr	r0, [r3]
    5af4:	mov	r5, r2
    5af8:	mov	r4, r1
    5afc:	mov	r1, #0
    5b00:	mov	r2, #1
    5b04:	bl	4958 <lseek@plt>
    5b08:	cmn	r0, #1
    5b0c:	moveq	r0, #15
    5b10:	popeq	{r4, r5, r6, sl, fp, pc}
    5b14:	vmov	s0, r6
    5b18:	vmov	s2, r0
    5b1c:	mov	r0, r5
    5b20:	vcvt.f64.s32	d16, s0
    5b24:	vcvt.f64.s32	d17, s2
    5b28:	vdiv.f64	d0, d17, d16
    5b2c:	blx	r4
    5b30:	cmp	r0, #0
    5b34:	movwne	r0, #4
    5b38:	pop	{r4, r5, r6, sl, fp, pc}

00005b3c <unistd_io_init>:
    5b3c:	push	{r4, r5, fp, lr}
    5b40:	add	fp, sp, #8
    5b44:	ldr	r1, [pc, #168]	; 5bf4 <unistd_io_init+0xb8>
    5b48:	mov	r4, r0
    5b4c:	ldr	r1, [pc, r1]
    5b50:	bl	4790 <readstat_set_open_handler@plt>
    5b54:	cmp	r0, #0
    5b58:	bne	5bf0 <unistd_io_init+0xb4>
    5b5c:	ldr	r1, [pc, #148]	; 5bf8 <unistd_io_init+0xbc>
    5b60:	mov	r0, r4
    5b64:	ldr	r1, [pc, r1]
    5b68:	bl	4e38 <readstat_set_close_handler@plt>
    5b6c:	cmp	r0, #0
    5b70:	bne	5bf0 <unistd_io_init+0xb4>
    5b74:	ldr	r1, [pc, #128]	; 5bfc <unistd_io_init+0xc0>
    5b78:	mov	r0, r4
    5b7c:	ldr	r1, [pc, r1]
    5b80:	bl	4784 <readstat_set_seek_handler@plt>
    5b84:	cmp	r0, #0
    5b88:	bne	5bf0 <unistd_io_init+0xb4>
    5b8c:	ldr	r1, [pc, #108]	; 5c00 <unistd_io_init+0xc4>
    5b90:	mov	r0, r4
    5b94:	ldr	r1, [pc, r1]
    5b98:	bl	4d18 <readstat_set_read_handler@plt>
    5b9c:	cmp	r0, #0
    5ba0:	bne	5bf0 <unistd_io_init+0xb4>
    5ba4:	ldr	r1, [pc, #88]	; 5c04 <unistd_io_init+0xc8>
    5ba8:	mov	r0, r4
    5bac:	ldr	r1, [pc, r1]
    5bb0:	bl	488c <readstat_set_update_handler@plt>
    5bb4:	mov	r1, r0
    5bb8:	mov	r0, #0
    5bbc:	cmp	r1, #0
    5bc0:	popne	{r4, r5, fp, pc}
    5bc4:	mov	r0, #1
    5bc8:	mov	r1, #4
    5bcc:	mov	r5, #1
    5bd0:	bl	4778 <calloc@plt>
    5bd4:	mov	r1, r0
    5bd8:	mvn	r0, #0
    5bdc:	str	r0, [r1]
    5be0:	mov	r0, r4
    5be4:	bl	4acc <readstat_set_io_ctx@plt>
    5be8:	ldr	r1, [r4, #32]
    5bec:	str	r5, [r1, #24]
    5bf0:	pop	{r4, r5, fp, pc}
    5bf4:	.word	0x0003e768
    5bf8:	.word	0x0003e780
    5bfc:	.word	0x0003e764
    5c00:	.word	0x0003e704
    5c04:	.word	0x0003e728

00005c08 <readstat_malloc>:
    5c08:	movw	r2, #61439	; 0xefff
    5c0c:	sub	r1, r0, #1
    5c10:	movt	r2, #255	; 0xff
    5c14:	cmp	r1, r2
    5c18:	movhi	r0, #0
    5c1c:	bxhi	lr
    5c20:	b	4af0 <malloc@plt>

00005c24 <readstat_calloc>:
    5c24:	movw	r2, #61440	; 0xf000
    5c28:	movt	r2, #255	; 0xff
    5c2c:	cmp	r0, r2
    5c30:	bhi	5c44 <readstat_calloc+0x20>
    5c34:	cmp	r1, r2
    5c38:	mulls	r3, r1, r0
    5c3c:	cmpls	r3, r2
    5c40:	bls	5c4c <readstat_calloc+0x28>
    5c44:	mov	r0, #0
    5c48:	bx	lr
    5c4c:	cmp	r0, #0
    5c50:	cmpne	r1, #0
    5c54:	beq	5c44 <readstat_calloc+0x20>
    5c58:	b	4778 <calloc@plt>

00005c5c <readstat_realloc>:
    5c5c:	movw	r3, #61440	; 0xf000
    5c60:	sub	r2, r1, #1
    5c64:	movt	r3, #255	; 0xff
    5c68:	cmp	r2, r3
    5c6c:	bcc	5c90 <readstat_realloc+0x34>
    5c70:	cmp	r0, #0
    5c74:	beq	5c88 <readstat_realloc+0x2c>
    5c78:	push	{fp, lr}
    5c7c:	mov	fp, sp
    5c80:	bl	48bc <free@plt>
    5c84:	pop	{fp, lr}
    5c88:	mov	r0, #0
    5c8c:	bx	lr
    5c90:	b	49e8 <realloc@plt>

00005c94 <readstat_get_row_count>:
    5c94:	ldr	r0, [r0]
    5c98:	bx	lr

00005c9c <readstat_get_var_count>:
    5c9c:	ldr	r0, [r0, #8]
    5ca0:	bx	lr

00005ca4 <readstat_get_creation_time>:
    5ca4:	ldr	r0, [r0, #16]
    5ca8:	bx	lr

00005cac <readstat_get_modified_time>:
    5cac:	ldr	r0, [r0, #20]
    5cb0:	bx	lr

00005cb4 <readstat_get_file_format_version>:
    5cb4:	ldr	r0, [r0, #24]
    5cb8:	bx	lr

00005cbc <readstat_get_file_format_is_64bit>:
    5cbc:	ldrb	r0, [r0, #52]	; 0x34
    5cc0:	and	r0, r0, #1
    5cc4:	bx	lr

00005cc8 <readstat_get_compression>:
    5cc8:	ldr	r0, [r0, #32]
    5ccc:	bx	lr

00005cd0 <readstat_get_endianness>:
    5cd0:	ldr	r0, [r0, #36]	; 0x24
    5cd4:	bx	lr

00005cd8 <readstat_get_file_label>:
    5cd8:	ldr	r0, [r0, #44]	; 0x2c
    5cdc:	bx	lr

00005ce0 <readstat_get_file_encoding>:
    5ce0:	ldr	r0, [r0, #48]	; 0x30
    5ce4:	bx	lr

00005ce8 <readstat_get_table_name>:
    5ce8:	ldr	r0, [r0, #40]	; 0x28
    5cec:	bx	lr

00005cf0 <readstat_parser_init>:
    5cf0:	push	{r4, sl, fp, lr}
    5cf4:	add	fp, sp, #8
    5cf8:	mov	r0, #1
    5cfc:	mov	r1, #52	; 0x34
    5d00:	bl	4778 <calloc@plt>
    5d04:	mov	r4, r0
    5d08:	mov	r0, #1
    5d0c:	mov	r1, #28
    5d10:	bl	4778 <calloc@plt>
    5d14:	str	r0, [r4, #32]
    5d18:	mov	r0, r4
    5d1c:	bl	4964 <unistd_io_init@plt>
    5d20:	cmp	r0, #0
    5d24:	beq	5d38 <readstat_parser_init+0x48>
    5d28:	mov	r0, r4
    5d2c:	bl	4ae4 <readstat_parser_free@plt>
    5d30:	mov	r4, #0
    5d34:	b	5d44 <readstat_parser_init+0x54>
    5d38:	ldr	r0, [pc, #12]	; 5d4c <readstat_parser_init+0x5c>
    5d3c:	add	r0, pc, r0
    5d40:	str	r0, [r4, #40]	; 0x28
    5d44:	mov	r0, r4
    5d48:	pop	{r4, sl, fp, pc}
    5d4c:	.word	0x0001e46a

00005d50 <readstat_parser_free>:
    5d50:	cmp	r0, #0
    5d54:	bxeq	lr
    5d58:	push	{r4, sl, fp, lr}
    5d5c:	add	fp, sp, #8
    5d60:	mov	r4, r0
    5d64:	ldr	r0, [r0, #32]
    5d68:	cmp	r0, #0
    5d6c:	beq	5d98 <readstat_parser_free+0x48>
    5d70:	ldr	r1, [r0, #24]
    5d74:	cmp	r1, #0
    5d78:	beq	5d88 <readstat_parser_free+0x38>
    5d7c:	ldr	r0, [r0, #20]
    5d80:	bl	48bc <free@plt>
    5d84:	ldr	r0, [r4, #32]
    5d88:	mov	r1, #0
    5d8c:	str	r1, [r0, #20]
    5d90:	str	r1, [r0, #24]
    5d94:	bl	48bc <free@plt>
    5d98:	mov	r0, r4
    5d9c:	pop	{r4, sl, fp, lr}
    5da0:	b	48bc <free@plt>

00005da4 <readstat_set_io_ctx>:
    5da4:	push	{r4, r5, fp, lr}
    5da8:	add	fp, sp, #8
    5dac:	mov	r5, r0
    5db0:	ldr	r0, [r0, #32]
    5db4:	mov	r4, r1
    5db8:	ldr	r1, [r0, #24]
    5dbc:	cmp	r1, #0
    5dc0:	beq	5dd0 <readstat_set_io_ctx+0x2c>
    5dc4:	ldr	r0, [r0, #20]
    5dc8:	bl	48bc <free@plt>
    5dcc:	ldr	r0, [r5, #32]
    5dd0:	mov	r1, #0
    5dd4:	str	r4, [r0, #20]
    5dd8:	str	r1, [r0, #24]
    5ddc:	mov	r0, #0
    5de0:	pop	{r4, r5, fp, pc}

00005de4 <readstat_set_metadata_handler>:
    5de4:	str	r1, [r0]
    5de8:	mov	r0, #0
    5dec:	bx	lr

00005df0 <readstat_set_note_handler>:
    5df0:	str	r1, [r0, #4]
    5df4:	mov	r0, #0
    5df8:	bx	lr

00005dfc <readstat_set_variable_handler>:
    5dfc:	str	r1, [r0, #8]
    5e00:	mov	r0, #0
    5e04:	bx	lr

00005e08 <readstat_set_value_handler>:
    5e08:	str	r1, [r0, #16]
    5e0c:	mov	r0, #0
    5e10:	bx	lr

00005e14 <readstat_set_value_label_handler>:
    5e14:	str	r1, [r0, #20]
    5e18:	mov	r0, #0
    5e1c:	bx	lr

00005e20 <readstat_set_error_handler>:
    5e20:	str	r1, [r0, #24]
    5e24:	mov	r0, #0
    5e28:	bx	lr

00005e2c <readstat_set_progress_handler>:
    5e2c:	str	r1, [r0, #28]
    5e30:	mov	r0, #0
    5e34:	bx	lr

00005e38 <readstat_set_fweight_handler>:
    5e38:	str	r1, [r0, #12]
    5e3c:	mov	r0, #0
    5e40:	bx	lr

00005e44 <readstat_set_open_handler>:
    5e44:	ldr	r0, [r0, #32]
    5e48:	str	r1, [r0]
    5e4c:	mov	r0, #0
    5e50:	bx	lr

00005e54 <readstat_set_close_handler>:
    5e54:	ldr	r0, [r0, #32]
    5e58:	str	r1, [r0, #4]
    5e5c:	mov	r0, #0
    5e60:	bx	lr

00005e64 <readstat_set_seek_handler>:
    5e64:	ldr	r0, [r0, #32]
    5e68:	str	r1, [r0, #8]
    5e6c:	mov	r0, #0
    5e70:	bx	lr

00005e74 <readstat_set_read_handler>:
    5e74:	ldr	r0, [r0, #32]
    5e78:	str	r1, [r0, #12]
    5e7c:	mov	r0, #0
    5e80:	bx	lr

00005e84 <readstat_set_update_handler>:
    5e84:	ldr	r0, [r0, #32]
    5e88:	str	r1, [r0, #16]
    5e8c:	mov	r0, #0
    5e90:	bx	lr

00005e94 <readstat_set_file_character_encoding>:
    5e94:	str	r1, [r0, #36]	; 0x24
    5e98:	mov	r0, #0
    5e9c:	bx	lr

00005ea0 <readstat_set_handler_character_encoding>:
    5ea0:	str	r1, [r0, #40]	; 0x28
    5ea4:	mov	r0, #0
    5ea8:	bx	lr

00005eac <readstat_set_row_limit>:
    5eac:	str	r1, [r0, #44]	; 0x2c
    5eb0:	mov	r0, #0
    5eb4:	bx	lr

00005eb8 <readstat_set_row_offset>:
    5eb8:	str	r1, [r0, #48]	; 0x30
    5ebc:	mov	r0, #0
    5ec0:	bx	lr
    5ec4:	andeq	r0, r0, r0

00005ec8 <readstat_type_class>:
    5ec8:	mov	r1, r0
    5ecc:	mov	r0, #0
    5ed0:	cmp	r1, #0
    5ed4:	cmpne	r1, #6
    5ed8:	movne	r0, #1
    5edc:	bx	lr

00005ee0 <readstat_value_type>:
    5ee0:	mov	r0, r2
    5ee4:	bx	lr

00005ee8 <readstat_value_type_class>:
    5ee8:	cmp	r2, #0
    5eec:	mov	r0, #0
    5ef0:	cmpne	r2, #6
    5ef4:	movne	r0, #1
    5ef8:	bx	lr

00005efc <readstat_value_tag>:
    5efc:	uxtb	r0, r3
    5f00:	bx	lr

00005f04 <readstat_value_is_missing>:
    5f04:	mov	ip, #1
    5f08:	tst	r3, #768	; 0x300
    5f0c:	beq	5f18 <readstat_value_is_missing+0x14>
    5f10:	mov	r0, ip
    5f14:	bx	lr
    5f18:	ldr	ip, [sp]
    5f1c:	cmp	ip, #0
    5f20:	beq	5f28 <readstat_value_is_missing+0x24>
    5f24:	b	5f30 <readstat_value_is_defined_missing>
    5f28:	mov	ip, #0
    5f2c:	b	5f10 <readstat_value_is_missing+0xc>

00005f30 <readstat_value_is_defined_missing>:
    5f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5f34:	add	fp, sp, #28
    5f38:	sub	sp, sp, #4
    5f3c:	vpush	{d8-d9}
    5f40:	sub	sp, sp, #48	; 0x30
    5f44:	ldr	sl, [fp, #8]
    5f48:	mov	r8, r3
    5f4c:	mov	r7, r2
    5f50:	mov	r9, r1
    5f54:	mov	r6, #0
    5f58:	cmp	r2, #0
    5f5c:	mov	r4, #0
    5f60:	str	r0, [sp, #12]
    5f64:	beq	5f74 <readstat_value_is_defined_missing+0x44>
    5f68:	cmp	r7, #6
    5f6c:	mov	r4, #0
    5f70:	movne	r4, #1
    5f74:	mov	r0, sl
    5f78:	bl	4f04 <readstat_variable_get_type_class@plt>
    5f7c:	cmp	r4, r0
    5f80:	bne	6120 <readstat_value_is_defined_missing+0x1f0>
    5f84:	cmp	r7, #6
    5f88:	cmpne	r7, #0
    5f8c:	bne	606c <readstat_value_is_defined_missing+0x13c>
    5f90:	ldr	r0, [sp, #12]
    5f94:	mov	r6, #0
    5f98:	cmp	r0, #0
    5f9c:	beq	6120 <readstat_value_is_defined_missing+0x1f0>
    5fa0:	cmp	r7, #0
    5fa4:	bne	6120 <readstat_value_is_defined_missing+0x1f0>
    5fa8:	mov	r0, sl
    5fac:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
    5fb0:	cmp	r0, #1
    5fb4:	str	r0, [sp, #8]
    5fb8:	blt	6120 <readstat_value_is_defined_missing+0x1f0>
    5fbc:	add	r0, sp, #16
    5fc0:	mov	r9, #0
    5fc4:	mov	r6, #0
    5fc8:	add	r0, r0, #8
    5fcc:	str	r0, [sp, #4]
    5fd0:	add	r0, sp, #32
    5fd4:	add	sl, r0, #8
    5fd8:	ldr	r4, [fp, #8]
    5fdc:	add	r0, sp, #32
    5fe0:	mov	r2, r6
    5fe4:	mov	r1, r4
    5fe8:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
    5fec:	ldr	r7, [sl]
    5ff0:	ldr	r5, [sp, #32]
    5ff4:	add	r0, sp, #16
    5ff8:	mov	r1, r4
    5ffc:	mov	r2, r6
    6000:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
    6004:	ldr	r0, [sp, #4]
    6008:	ldr	r8, [sp, #16]
    600c:	cmp	r7, #0
    6010:	movne	r5, r9
    6014:	ldr	r0, [r0]
    6018:	cmp	r0, #0
    601c:	movne	r8, r9
    6020:	cmp	r5, #0
    6024:	cmpne	r8, #0
    6028:	bne	6040 <readstat_value_is_defined_missing+0x110>
    602c:	ldr	r0, [sp, #8]
    6030:	add	r6, r6, #1
    6034:	cmp	r6, r0
    6038:	blt	5fd8 <readstat_value_is_defined_missing+0xa8>
    603c:	b	6114 <readstat_value_is_defined_missing+0x1e4>
    6040:	ldr	r0, [sp, #12]
    6044:	mov	r1, r5
    6048:	bl	4808 <strcmp@plt>
    604c:	cmp	r0, #0
    6050:	blt	602c <readstat_value_is_defined_missing+0xfc>
    6054:	ldr	r0, [sp, #12]
    6058:	mov	r1, r8
    605c:	bl	4808 <strcmp@plt>
    6060:	cmp	r0, #1
    6064:	bge	602c <readstat_value_is_defined_missing+0xfc>
    6068:	b	611c <readstat_value_is_defined_missing+0x1ec>
    606c:	ldr	r0, [sp, #12]
    6070:	mov	r1, r9
    6074:	mov	r2, r7
    6078:	mov	r3, r8
    607c:	bl	4b98 <readstat_double_value@plt>
    6080:	mov	r0, sl
    6084:	vmov.f64	d8, d0
    6088:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
    608c:	cmp	r0, #1
    6090:	blt	6114 <readstat_value_is_defined_missing+0x1e4>
    6094:	add	r8, sp, #16
    6098:	add	r9, sp, #32
    609c:	mov	r5, r0
    60a0:	mov	r6, #0
    60a4:	add	r4, r8, #8
    60a8:	add	r7, r9, #8
    60ac:	mov	r0, r9
    60b0:	mov	r1, sl
    60b4:	mov	r2, r6
    60b8:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
    60bc:	ldrd	r2, [r7]
    60c0:	ldr	r0, [sp, #32]
    60c4:	ldr	r1, [sp, #36]	; 0x24
    60c8:	bl	4b98 <readstat_double_value@plt>
    60cc:	mov	r0, r8
    60d0:	mov	r1, sl
    60d4:	mov	r2, r6
    60d8:	vmov.f64	d9, d0
    60dc:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
    60e0:	ldrd	r2, [r4]
    60e4:	ldr	r0, [sp, #16]
    60e8:	ldr	r1, [sp, #20]
    60ec:	bl	4b98 <readstat_double_value@plt>
    60f0:	vcmpe.f64	d9, d8
    60f4:	vmrs	APSR_nzcv, fpscr
    60f8:	bhi	6108 <readstat_value_is_defined_missing+0x1d8>
    60fc:	vcmpe.f64	d0, d8
    6100:	vmrs	APSR_nzcv, fpscr
    6104:	bge	611c <readstat_value_is_defined_missing+0x1ec>
    6108:	add	r6, r6, #1
    610c:	cmp	r6, r5
    6110:	blt	60ac <readstat_value_is_defined_missing+0x17c>
    6114:	mov	r6, #0
    6118:	b	6120 <readstat_value_is_defined_missing+0x1f0>
    611c:	mov	r6, #1
    6120:	mov	r0, r6
    6124:	sub	sp, fp, #48	; 0x30
    6128:	vpop	{d8-d9}
    612c:	add	sp, sp, #4
    6130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006134 <readstat_value_is_system_missing>:
    6134:	ubfx	r0, r3, #8, #1
    6138:	bx	lr

0000613c <readstat_value_is_tagged_missing>:
    613c:	ubfx	r0, r3, #9, #1
    6140:	bx	lr

00006144 <readstat_string_value>:
    6144:	cmp	r2, #0
    6148:	movne	r0, #0
    614c:	bx	lr

00006150 <readstat_double_value>:
    6150:	vldr	d0, [pc, #96]	; 61b8 <readstat_double_value+0x68>
    6154:	tst	r3, #256	; 0x100
    6158:	bne	619c <readstat_double_value+0x4c>
    615c:	sub	r2, r2, #1
    6160:	cmp	r2, #4
    6164:	bxhi	lr
    6168:	add	r3, pc, #4
    616c:	ldr	r2, [r3, r2, lsl #2]
    6170:	add	pc, r3, r2
    6174:	.word	0x00000014
    6178:	.word	0x0000001c
    617c:	.word	0x00000020
    6180:	.word	0x0000002c
    6184:	.word	0x00000038
    6188:	sxtb	r0, r0
    618c:	b	6194 <readstat_double_value+0x44>
    6190:	sxth	r0, r0
    6194:	vmov	s0, r0
    6198:	vcvt.f64.s32	d0, s0
    619c:	bx	lr
    61a0:	vmov	s0, r0
    61a4:	vcvt.f64.f32	d0, s0
    61a8:	bx	lr
    61ac:	vmov	d0, r0, r1
    61b0:	bx	lr
    61b4:	nop	{0}
    61b8:	.word	0x00000000
    61bc:	.word	0x7ff80000

000061c0 <readstat_int8_value>:
    61c0:	tst	r3, #256	; 0x100
    61c4:	bne	61f0 <readstat_int8_value+0x30>
    61c8:	sub	r3, r2, #1
    61cc:	cmp	r3, #3
    61d0:	bcc	6204 <readstat_int8_value+0x44>
    61d4:	cmp	r2, #4
    61d8:	beq	61f8 <readstat_int8_value+0x38>
    61dc:	cmp	r2, #5
    61e0:	bne	61f0 <readstat_int8_value+0x30>
    61e4:	vmov	d16, r0, r1
    61e8:	vcvt.u32.f64	s0, d16
    61ec:	b	6200 <readstat_int8_value+0x40>
    61f0:	mov	r0, #0
    61f4:	b	6204 <readstat_int8_value+0x44>
    61f8:	vmov	s0, r0
    61fc:	vcvt.u32.f32	s0, s0
    6200:	vmov	r0, s0
    6204:	uxtb	r0, r0
    6208:	bx	lr

0000620c <readstat_int16_value>:
    620c:	tst	r3, #256	; 0x100
    6210:	bne	6248 <readstat_int16_value+0x3c>
    6214:	sub	r2, r2, #1
    6218:	cmp	r2, #4
    621c:	bhi	6248 <readstat_int16_value+0x3c>
    6220:	add	r3, pc, #4
    6224:	ldr	r2, [r3, r2, lsl #2]
    6228:	add	pc, r3, r2
    622c:	.word	0x00000014
    6230:	.word	0x0000003c
    6234:	.word	0x0000003c
    6238:	.word	0x00000024
    623c:	.word	0x00000030
    6240:	sxtb	r0, r0
    6244:	b	6268 <readstat_int16_value+0x5c>
    6248:	mov	r0, #0
    624c:	b	6268 <readstat_int16_value+0x5c>
    6250:	vmov	s0, r0
    6254:	vcvt.s32.f32	s0, s0
    6258:	b	6264 <readstat_int16_value+0x58>
    625c:	vmov	d16, r0, r1
    6260:	vcvt.s32.f64	s0, d16
    6264:	vmov	r0, s0
    6268:	sxth	r0, r0
    626c:	bx	lr

00006270 <readstat_int32_value>:
    6270:	tst	r3, #256	; 0x100
    6274:	bne	62ac <readstat_int32_value+0x3c>
    6278:	sub	r2, r2, #1
    627c:	cmp	r2, #4
    6280:	bhi	62ac <readstat_int32_value+0x3c>
    6284:	add	r3, pc, #4
    6288:	ldr	r2, [r3, r2, lsl #2]
    628c:	add	pc, r3, r2
    6290:	.word	0x00000014
    6294:	.word	0x00000024
    6298:	.word	0x00000020
    629c:	.word	0x0000002c
    62a0:	.word	0x0000003c
    62a4:	sxtb	r0, r0
    62a8:	bx	lr
    62ac:	mov	r0, #0
    62b0:	bx	lr
    62b4:	sxth	r0, r0
    62b8:	bx	lr
    62bc:	vmov	s0, r0
    62c0:	vcvt.s32.f32	s0, s0
    62c4:	vmov	r0, s0
    62c8:	bx	lr
    62cc:	vmov	d16, r0, r1
    62d0:	vcvt.s32.f64	s0, d16
    62d4:	vmov	r0, s0
    62d8:	bx	lr

000062dc <readstat_float_value>:
    62dc:	tst	r3, #256	; 0x100
    62e0:	vldrne	s0, [pc, #88]	; 6340 <readstat_float_value+0x64>
    62e4:	bxne	lr
    62e8:	sub	r2, r2, #1
    62ec:	cmp	r2, #4
    62f0:	bhi	631c <readstat_float_value+0x40>
    62f4:	add	r3, pc, #4
    62f8:	ldr	r2, [r3, r2, lsl #2]
    62fc:	add	pc, r3, r2
    6300:	.word	0x00000014
    6304:	.word	0x00000024
    6308:	.word	0x00000028
    630c:	.word	0x0000001c
    6310:	.word	0x00000034
    6314:	sxtb	r0, r0
    6318:	b	6328 <readstat_float_value+0x4c>
    631c:	vmov	s0, r0
    6320:	bx	lr
    6324:	sxth	r0, r0
    6328:	vmov	s0, r0
    632c:	vcvt.f32.s32	s0, s0
    6330:	bx	lr
    6334:	vmov	d16, r0, r1
    6338:	vcvt.f32.f64	s0, d16
    633c:	bx	lr
    6340:	.word	0x7fc00000

00006344 <readstat_variable_get_name>:
    6344:	ldrb	r1, [r0, #8]!
    6348:	cmp	r1, #0
    634c:	moveq	r0, r1
    6350:	bx	lr

00006354 <readstat_variable_get_label>:
    6354:	ldrb	r1, [r0, #564]!	; 0x234
    6358:	cmp	r1, #0
    635c:	moveq	r0, r1
    6360:	bx	lr

00006364 <readstat_variable_get_format>:
    6364:	ldrb	r1, [r0, #308]!	; 0x134
    6368:	cmp	r1, #0
    636c:	moveq	r0, r1
    6370:	bx	lr

00006374 <readstat_variable_get_type>:
    6374:	ldr	r0, [r0]
    6378:	bx	lr

0000637c <readstat_variable_get_type_class>:
    637c:	ldr	r0, [r0]
    6380:	b	4820 <readstat_type_class@plt>

00006384 <readstat_variable_get_index>:
    6384:	ldr	r0, [r0, #4]
    6388:	bx	lr

0000638c <readstat_variable_get_index_after_skipping>:
    638c:	ldr	r0, [r0, #2148]	; 0x864
    6390:	bx	lr

00006394 <readstat_variable_get_storage_width>:
    6394:	ldr	r0, [r0, #1596]	; 0x63c
    6398:	bx	lr

0000639c <readstat_variable_get_measure>:
    639c:	ldr	r0, [r0, #2128]	; 0x850
    63a0:	bx	lr

000063a4 <readstat_variable_get_alignment>:
    63a4:	ldr	r0, [r0, #2132]	; 0x854
    63a8:	bx	lr

000063ac <readstat_variable_get_display_width>:
    63ac:	ldr	r0, [r0, #2136]	; 0x858
    63b0:	bx	lr

000063b4 <readstat_variable_get_missing_ranges_count>:
    63b4:	ldr	r0, [r0, #2120]	; 0x848
    63b8:	bx	lr

000063bc <readstat_variable_get_missing_range_lo>:
    63bc:	ldr	r3, [r1, #2120]	; 0x848
    63c0:	cmp	r3, r2
    63c4:	ble	63e4 <readstat_variable_get_missing_range_lo+0x28>
    63c8:	lsl	r2, r2, #1
    63cc:	cmp	r2, #31
    63d0:	bhi	63e4 <readstat_variable_get_missing_range_lo+0x28>
    63d4:	add	r1, r1, r2, lsl #4
    63d8:	movw	r2, #1608	; 0x648
    63dc:	add	r1, r1, r2
    63e0:	b	63ec <readstat_variable_get_missing_range_lo+0x30>
    63e4:	ldr	r1, [pc, #12]	; 63f8 <readstat_variable_get_missing_range_lo+0x3c>
    63e8:	add	r1, pc, r1
    63ec:	vld1.64	{d16-d17}, [r1]
    63f0:	vst1.64	{d16-d17}, [r0]
    63f4:	bx	lr
    63f8:	.word	0x0001ddc8

000063fc <readstat_variable_get_missing_range_hi>:
    63fc:	ldr	r3, [r1, #2120]	; 0x848
    6400:	cmp	r3, r2
    6404:	ble	6428 <readstat_variable_get_missing_range_hi+0x2c>
    6408:	mov	r3, #1
    640c:	orr	r2, r3, r2, lsl #1
    6410:	cmp	r2, #31
    6414:	bhi	6428 <readstat_variable_get_missing_range_hi+0x2c>
    6418:	add	r1, r1, r2, lsl #4
    641c:	movw	r2, #1608	; 0x648
    6420:	add	r1, r1, r2
    6424:	b	6430 <readstat_variable_get_missing_range_hi+0x34>
    6428:	ldr	r1, [pc, #12]	; 643c <readstat_variable_get_missing_range_hi+0x40>
    642c:	add	r1, pc, r1
    6430:	vld1.64	{d16-d17}, [r1]
    6434:	vst1.64	{d16-d17}, [r0]
    6438:	bx	lr
    643c:	.word	0x0001dd84

00006440 <readstat_variable_add_missing_double_range>:
    6440:	push	{fp, lr}
    6444:	mov	fp, sp
    6448:	sub	sp, sp, #24
    644c:	mov	ip, #0
    6450:	mov	r2, #5
    6454:	vmov	r3, r1, d1
    6458:	stm	sp, {r2, ip}
    645c:	str	r3, [sp, #8]
    6460:	add	r3, sp, #12
    6464:	stm	r3, {r1, r2, ip}
    6468:	vmov	r2, r3, d0
    646c:	bl	6478 <readstat_variable_add_missing_value_range>
    6470:	mov	sp, fp
    6474:	pop	{fp, pc}

00006478 <readstat_variable_add_missing_value_range>:
    6478:	ldr	r1, [r0, #2120]	; 0x848
    647c:	lsl	ip, r1, #1
    6480:	mov	r1, #31
    6484:	cmp	ip, #31
    6488:	bhi	64f0 <readstat_variable_add_missing_value_range+0x78>
    648c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6490:	add	fp, sp, #24
    6494:	movw	r1, #1608	; 0x648
    6498:	ldr	r6, [fp, #12]
    649c:	ldr	r7, [fp, #8]
    64a0:	ldr	r5, [fp, #16]
    64a4:	ldr	lr, [fp, #28]
    64a8:	ldr	r8, [fp, #24]
    64ac:	ldr	r9, [fp, #20]
    64b0:	add	r4, r0, r1
    64b4:	mov	r1, r4
    64b8:	str	r2, [r1, ip, lsl #4]!
    64bc:	stmib	r1, {r3, r7}
    64c0:	str	r6, [r1, #12]
    64c4:	mov	r1, #16
    64c8:	orr	r1, r1, ip, lsl #4
    64cc:	str	r5, [r4, r1]!
    64d0:	str	r9, [r4, #4]
    64d4:	str	r8, [r4, #8]
    64d8:	str	lr, [r4, #12]
    64dc:	ldr	r1, [r0, #2120]	; 0x848
    64e0:	add	r1, r1, #1
    64e4:	str	r1, [r0, #2120]	; 0x848
    64e8:	mov	r1, #0
    64ec:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    64f0:	mov	r0, r1
    64f4:	bx	lr

000064f8 <readstat_variable_add_missing_double_value>:
    64f8:	push	{fp, lr}
    64fc:	mov	fp, sp
    6500:	sub	sp, sp, #24
    6504:	vmov	r2, r3, d0
    6508:	mov	ip, #0
    650c:	mov	r1, #5
    6510:	stm	sp, {r1, ip}
    6514:	str	r2, [sp, #8]
    6518:	str	r3, [sp, #12]
    651c:	str	r1, [sp, #16]
    6520:	str	ip, [sp, #20]
    6524:	bl	6478 <readstat_variable_add_missing_value_range>
    6528:	mov	sp, fp
    652c:	pop	{fp, pc}

00006530 <readstat_variable_add_missing_string_range>:
    6530:	push	{fp, lr}
    6534:	mov	fp, sp
    6538:	sub	sp, sp, #24
    653c:	mov	r3, #0
    6540:	str	r2, [sp, #8]
    6544:	mov	r2, r1
    6548:	str	r3, [sp]
    654c:	str	r3, [sp, #4]
    6550:	str	r3, [sp, #12]
    6554:	str	r3, [sp, #16]
    6558:	str	r3, [sp, #20]
    655c:	mov	r3, #0
    6560:	bl	6478 <readstat_variable_add_missing_value_range>
    6564:	mov	sp, fp
    6568:	pop	{fp, pc}

0000656c <readstat_variable_add_missing_string_value>:
    656c:	push	{fp, lr}
    6570:	mov	fp, sp
    6574:	sub	sp, sp, #24
    6578:	mov	r2, #0
    657c:	mov	r3, #0
    6580:	str	r1, [sp, #8]
    6584:	str	r2, [sp]
    6588:	str	r2, [sp, #4]
    658c:	str	r2, [sp, #12]
    6590:	str	r2, [sp, #16]
    6594:	str	r2, [sp, #20]
    6598:	mov	r2, r1
    659c:	bl	6478 <readstat_variable_add_missing_value_range>
    65a0:	mov	sp, fp
    65a4:	pop	{fp, pc}

000065a8 <readstat_string_ref_init>:
    65a8:	push	{r4, r5, r6, sl, fp, lr}
    65ac:	add	fp, sp, #16
    65b0:	mov	r4, r0
    65b4:	bl	4bd4 <strlen@plt>
    65b8:	mov	r5, r0
    65bc:	add	r1, r0, #25
    65c0:	mov	r0, #1
    65c4:	bl	4778 <calloc@plt>
    65c8:	mov	r6, r0
    65cc:	mvn	r0, #0
    65d0:	add	r2, r5, #1
    65d4:	mov	r1, r4
    65d8:	str	r0, [r6]
    65dc:	str	r0, [r6, #4]
    65e0:	str	r0, [r6, #8]
    65e4:	str	r0, [r6, #12]
    65e8:	add	r0, r6, #20
    65ec:	str	r2, [r6, #16]
    65f0:	bl	4910 <memcpy@plt>
    65f4:	mov	r0, r6
    65f8:	pop	{r4, r5, r6, sl, fp, pc}

000065fc <readstat_writer_init>:
    65fc:	push	{r4, r5, r6, sl, fp, lr}
    6600:	add	fp, sp, #16
    6604:	mov	r0, #1
    6608:	mov	r1, #312	; 0x138
    660c:	mov	r5, #1
    6610:	bl	4778 <calloc@plt>
    6614:	mov	r4, r0
    6618:	mov	r0, #50	; 0x32
    661c:	mov	r1, #4
    6620:	mov	r6, #50	; 0x32
    6624:	bl	4778 <calloc@plt>
    6628:	str	r0, [r4, #24]
    662c:	mov	r0, #50	; 0x32
    6630:	mov	r1, #4
    6634:	str	r6, [r4, #32]
    6638:	bl	4778 <calloc@plt>
    663c:	str	r0, [r4, #36]	; 0x24
    6640:	mov	r0, #50	; 0x32
    6644:	mov	r1, #4
    6648:	str	r6, [r4, #44]	; 0x2c
    664c:	bl	4778 <calloc@plt>
    6650:	str	r0, [r4, #48]	; 0x30
    6654:	mov	r0, #100	; 0x64
    6658:	mov	r1, #4
    665c:	str	r6, [r4, #56]	; 0x38
    6660:	mov	r6, #100	; 0x64
    6664:	bl	4778 <calloc@plt>
    6668:	str	r0, [r4, #60]	; 0x3c
    666c:	mov	r0, #0
    6670:	str	r6, [r4, #68]	; 0x44
    6674:	bl	4940 <time@plt>
    6678:	str	r0, [r4, #20]
    667c:	str	r5, [r4, #12]
    6680:	ldr	r0, [pc, #12]	; 6694 <readstat_writer_init+0x98>
    6684:	add	r0, pc, r0
    6688:	str	r0, [r4, #280]	; 0x118
    668c:	mov	r0, r4
    6690:	pop	{r4, r5, r6, sl, fp, pc}
    6694:	.word	0x0000000c

00006698 <readstat_write_row_default_callback>:
    6698:	push	{r4, r5, fp, lr}
    669c:	add	fp, sp, #8
    66a0:	mov	r5, r2
    66a4:	ldr	r3, [r0]
    66a8:	ldr	r2, [r0, #304]	; 0x130
    66ac:	mov	r4, r0
    66b0:	mov	r0, r1
    66b4:	mov	r1, r5
    66b8:	blx	r3
    66bc:	mov	r1, r0
    66c0:	mov	r0, #13
    66c4:	cmp	r1, r5
    66c8:	ldrcs	r0, [r4, #4]
    66cc:	addcs	r0, r0, r1
    66d0:	strcs	r0, [r4, #4]
    66d4:	movcs	r0, #0
    66d8:	pop	{r4, r5, fp, pc}

000066dc <readstat_validate_variable>:
    66dc:	ldr	r2, [r0, #308]	; 0x134
    66e0:	cmp	r2, #0
    66e4:	moveq	r0, #14
    66e8:	bxeq	lr
    66ec:	ldr	r2, [r0, #232]	; 0xe8
    66f0:	cmp	r2, #0
    66f4:	moveq	r0, #0
    66f8:	bxeq	lr
    66fc:	mov	r0, r1
    6700:	bx	r2

00006704 <readstat_validate_metadata>:
    6704:	ldr	r1, [r0, #308]	; 0x134
    6708:	cmp	r1, #0
    670c:	moveq	r0, #14
    6710:	bxeq	lr
    6714:	ldr	r1, [r0, #292]	; 0x124
    6718:	cmp	r1, #0
    671c:	moveq	r0, #0
    6720:	bxeq	lr
    6724:	bx	r1

00006728 <readstat_writer_free>:
    6728:	cmp	r0, #0
    672c:	bxeq	lr
    6730:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6734:	add	fp, sp, #24
    6738:	ldr	r1, [r0, #288]	; 0x120
    673c:	mov	r8, r0
    6740:	cmp	r1, #0
    6744:	ldrne	r0, [r8, #300]	; 0x12c
    6748:	cmpne	r0, #0
    674c:	beq	6754 <readstat_writer_free+0x2c>
    6750:	blx	r1
    6754:	ldr	r0, [r8, #24]
    6758:	cmp	r0, #0
    675c:	beq	6790 <readstat_writer_free+0x68>
    6760:	ldr	r1, [r8, #28]
    6764:	cmp	r1, #1
    6768:	blt	678c <readstat_writer_free+0x64>
    676c:	mov	r5, #0
    6770:	ldr	r0, [r0, r5, lsl #2]
    6774:	bl	48bc <free@plt>
    6778:	ldr	r1, [r8, #28]
    677c:	ldr	r0, [r8, #24]
    6780:	add	r5, r5, #1
    6784:	cmp	r5, r1
    6788:	blt	6770 <readstat_writer_free+0x48>
    678c:	bl	48bc <free@plt>
    6790:	ldr	r0, [r8, #36]	; 0x24
    6794:	cmp	r0, #0
    6798:	beq	6828 <readstat_writer_free+0x100>
    679c:	ldr	r1, [r8, #40]	; 0x28
    67a0:	cmp	r1, #1
    67a4:	blt	6824 <readstat_writer_free+0xfc>
    67a8:	mov	r6, #0
    67ac:	ldr	r5, [r0, r6, lsl #2]
    67b0:	ldr	r0, [r5, #264]	; 0x108
    67b4:	cmp	r0, #1
    67b8:	blt	67f8 <readstat_writer_free+0xd0>
    67bc:	mov	r7, #0
    67c0:	ldr	r0, [r5, #260]	; 0x104
    67c4:	add	r4, r0, r7, lsl #5
    67c8:	ldr	r0, [r4, #24]
    67cc:	cmp	r0, #0
    67d0:	beq	67d8 <readstat_writer_free+0xb0>
    67d4:	bl	48bc <free@plt>
    67d8:	ldr	r0, [r4, #16]
    67dc:	cmp	r0, #0
    67e0:	beq	67e8 <readstat_writer_free+0xc0>
    67e4:	bl	48bc <free@plt>
    67e8:	ldr	r0, [r5, #264]	; 0x108
    67ec:	add	r7, r7, #1
    67f0:	cmp	r7, r0
    67f4:	blt	67c0 <readstat_writer_free+0x98>
    67f8:	ldr	r0, [r5, #260]	; 0x104
    67fc:	bl	48bc <free@plt>
    6800:	ldr	r0, [r5, #272]	; 0x110
    6804:	bl	48bc <free@plt>
    6808:	mov	r0, r5
    680c:	bl	48bc <free@plt>
    6810:	ldr	r1, [r8, #40]	; 0x28
    6814:	ldr	r0, [r8, #36]	; 0x24
    6818:	add	r6, r6, #1
    681c:	cmp	r6, r1
    6820:	blt	67ac <readstat_writer_free+0x84>
    6824:	bl	48bc <free@plt>
    6828:	ldr	r0, [r8, #48]	; 0x30
    682c:	cmp	r0, #0
    6830:	beq	6864 <readstat_writer_free+0x13c>
    6834:	ldr	r1, [r8, #52]	; 0x34
    6838:	cmp	r1, #1
    683c:	blt	6860 <readstat_writer_free+0x138>
    6840:	mov	r5, #0
    6844:	ldr	r0, [r0, r5, lsl #2]
    6848:	bl	48bc <free@plt>
    684c:	ldr	r1, [r8, #52]	; 0x34
    6850:	ldr	r0, [r8, #48]	; 0x30
    6854:	add	r5, r5, #1
    6858:	cmp	r5, r1
    685c:	blt	6844 <readstat_writer_free+0x11c>
    6860:	bl	48bc <free@plt>
    6864:	ldr	r0, [r8, #60]	; 0x3c
    6868:	cmp	r0, #0
    686c:	beq	68a0 <readstat_writer_free+0x178>
    6870:	ldr	r1, [r8, #64]	; 0x40
    6874:	cmp	r1, #1
    6878:	blt	689c <readstat_writer_free+0x174>
    687c:	mov	r5, #0
    6880:	ldr	r0, [r0, r5, lsl #2]
    6884:	bl	48bc <free@plt>
    6888:	ldr	r1, [r8, #64]	; 0x40
    688c:	ldr	r0, [r8, #60]	; 0x3c
    6890:	add	r5, r5, #1
    6894:	cmp	r5, r1
    6898:	blt	6880 <readstat_writer_free+0x158>
    689c:	bl	48bc <free@plt>
    68a0:	ldr	r0, [r8, #72]	; 0x48
    68a4:	cmp	r0, #0
    68a8:	beq	68b0 <readstat_writer_free+0x188>
    68ac:	bl	48bc <free@plt>
    68b0:	mov	r0, r8
    68b4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    68b8:	b	48bc <free@plt>

000068bc <readstat_set_data_writer>:
    68bc:	str	r1, [r0]
    68c0:	mov	r0, #0
    68c4:	bx	lr

000068c8 <readstat_write_bytes>:
    68c8:	push	{r4, r5, fp, lr}
    68cc:	add	fp, sp, #8
    68d0:	mov	r5, r2
    68d4:	ldr	r3, [r0]
    68d8:	ldr	r2, [r0, #304]	; 0x130
    68dc:	mov	r4, r0
    68e0:	mov	r0, r1
    68e4:	mov	r1, r5
    68e8:	blx	r3
    68ec:	mov	r1, r0
    68f0:	mov	r0, #13
    68f4:	cmp	r1, r5
    68f8:	ldrcs	r0, [r4, #4]
    68fc:	addcs	r0, r0, r1
    6900:	strcs	r0, [r4, #4]
    6904:	movcs	r0, #0
    6908:	pop	{r4, r5, fp, pc}

0000690c <readstat_write_bytes_as_lines>:
    690c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6910:	add	fp, sp, #28
    6914:	sub	sp, sp, #12
    6918:	mov	r7, r0
    691c:	ldr	r0, [fp, #8]
    6920:	mov	r4, r3
    6924:	mov	sl, r2
    6928:	str	r1, [sp, #8]
    692c:	bl	4bd4 <strlen@plt>
    6930:	cmp	sl, #0
    6934:	beq	69f4 <readstat_write_bytes_as_lines+0xe8>
    6938:	ldr	r1, [r7, #4]
    693c:	add	r9, r0, r4
    6940:	mov	r5, #0
    6944:	str	r0, [sp, #4]
    6948:	udiv	r2, r1, r9
    694c:	ldr	r0, [sp, #8]
    6950:	ldr	r3, [r7]
    6954:	sub	r8, sl, r5
    6958:	mul	r2, r2, r9
    695c:	sub	r1, r2, r1
    6960:	ldr	r2, [r7, #304]	; 0x130
    6964:	add	r6, r4, r1
    6968:	add	r0, r0, r5
    696c:	cmp	r8, r6
    6970:	bcs	6990 <readstat_write_bytes_as_lines+0x84>
    6974:	mov	r1, r8
    6978:	blx	r3
    697c:	cmp	r0, r8
    6980:	bcc	69fc <readstat_write_bytes_as_lines+0xf0>
    6984:	ldr	r1, [r7, #4]
    6988:	mov	r5, sl
    698c:	b	69a8 <readstat_write_bytes_as_lines+0x9c>
    6990:	mov	r1, r6
    6994:	blx	r3
    6998:	cmp	r0, r6
    699c:	bcc	69fc <readstat_write_bytes_as_lines+0xf0>
    69a0:	ldr	r1, [r7, #4]
    69a4:	add	r5, r6, r5
    69a8:	add	r1, r1, r0
    69ac:	str	r1, [r7, #4]
    69b0:	udiv	r0, r1, r9
    69b4:	mls	r0, r0, r9, r1
    69b8:	cmp	r0, r4
    69bc:	bne	69ec <readstat_write_bytes_as_lines+0xe0>
    69c0:	ldr	r6, [sp, #4]
    69c4:	ldr	r3, [r7]
    69c8:	ldr	r2, [r7, #304]	; 0x130
    69cc:	ldr	r0, [fp, #8]
    69d0:	mov	r1, r6
    69d4:	blx	r3
    69d8:	cmp	r0, r6
    69dc:	bcc	69fc <readstat_write_bytes_as_lines+0xf0>
    69e0:	ldr	r1, [r7, #4]
    69e4:	add	r1, r1, r0
    69e8:	str	r1, [r7, #4]
    69ec:	cmp	r5, sl
    69f0:	bcc	6948 <readstat_write_bytes_as_lines+0x3c>
    69f4:	mov	r0, #0
    69f8:	b	6a00 <readstat_write_bytes_as_lines+0xf4>
    69fc:	mov	r0, #13
    6a00:	sub	sp, fp, #28
    6a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006a08 <readstat_write_line_padding>:
    6a08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6a0c:	add	fp, sp, #24
    6a10:	mov	r4, r0
    6a14:	mov	r0, r3
    6a18:	mov	r8, r3
    6a1c:	mov	r7, r2
    6a20:	mov	r9, r1
    6a24:	bl	4bd4 <strlen@plt>
    6a28:	ldr	r1, [r4, #4]
    6a2c:	mov	r6, r0
    6a30:	add	r0, r0, r7
    6a34:	udiv	r2, r1, r0
    6a38:	mls	r0, r2, r0, r1
    6a3c:	cmp	r0, #0
    6a40:	beq	6abc <readstat_write_line_padding+0xb4>
    6a44:	sub	r5, r7, r0
    6a48:	mov	r0, r5
    6a4c:	bl	4af0 <malloc@plt>
    6a50:	mov	r1, r9
    6a54:	mov	r2, r5
    6a58:	mov	r7, r0
    6a5c:	bl	4c70 <memset@plt>
    6a60:	ldr	r3, [r4]
    6a64:	ldr	r2, [r4, #304]	; 0x130
    6a68:	mov	r0, r7
    6a6c:	mov	r1, r5
    6a70:	blx	r3
    6a74:	cmp	r0, r5
    6a78:	bcc	6aac <readstat_write_line_padding+0xa4>
    6a7c:	ldr	r1, [r4, #4]
    6a80:	ldr	r3, [r4]
    6a84:	ldr	r2, [r4, #304]	; 0x130
    6a88:	add	r0, r1, r0
    6a8c:	mov	r1, r6
    6a90:	str	r0, [r4, #4]
    6a94:	mov	r0, r8
    6a98:	blx	r3
    6a9c:	cmp	r0, r6
    6aa0:	ldrcs	r1, [r4, #4]
    6aa4:	addcs	r0, r1, r0
    6aa8:	strcs	r0, [r4, #4]
    6aac:	cmp	r7, #0
    6ab0:	beq	6abc <readstat_write_line_padding+0xb4>
    6ab4:	mov	r0, r7
    6ab8:	bl	48bc <free@plt>
    6abc:	mov	r0, #0
    6ac0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006ac4 <readstat_write_string>:
    6ac4:	push	{r4, r5, r6, sl, fp, lr}
    6ac8:	add	fp, sp, #16
    6acc:	mov	r4, r0
    6ad0:	mov	r0, r1
    6ad4:	mov	r5, r1
    6ad8:	bl	4bd4 <strlen@plt>
    6adc:	ldr	r3, [r4]
    6ae0:	ldr	r2, [r4, #304]	; 0x130
    6ae4:	mov	r6, r0
    6ae8:	mov	r0, r5
    6aec:	mov	r1, r6
    6af0:	blx	r3
    6af4:	mov	r1, r0
    6af8:	mov	r0, #13
    6afc:	cmp	r1, r6
    6b00:	ldrcs	r0, [r4, #4]
    6b04:	addcs	r0, r0, r1
    6b08:	strcs	r0, [r4, #4]
    6b0c:	movcs	r0, #0
    6b10:	pop	{r4, r5, r6, sl, fp, pc}

00006b14 <readstat_write_zeros>:
    6b14:	mov	r2, r1
    6b18:	mov	r1, #0
    6b1c:	b	6b20 <readstat_write_repeated_byte>

00006b20 <readstat_write_repeated_byte>:
    6b20:	cmp	r2, #0
    6b24:	moveq	r0, #0
    6b28:	bxeq	lr
    6b2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6b30:	add	fp, sp, #24
    6b34:	mov	r4, r0
    6b38:	add	r0, r2, #7
    6b3c:	mov	r5, r2
    6b40:	mov	r7, sp
    6b44:	bic	r0, r0, #7
    6b48:	sub	r6, sp, r0
    6b4c:	mov	sp, r6
    6b50:	mov	r0, r6
    6b54:	bl	4c70 <memset@plt>
    6b58:	ldr	r3, [r4]
    6b5c:	ldr	r2, [r4, #304]	; 0x130
    6b60:	mov	r0, r6
    6b64:	mov	r1, r5
    6b68:	blx	r3
    6b6c:	mov	r1, r0
    6b70:	mov	r0, #13
    6b74:	cmp	r1, r5
    6b78:	ldrcs	r0, [r4, #4]
    6b7c:	addcs	r0, r0, r1
    6b80:	strcs	r0, [r4, #4]
    6b84:	movcs	r0, #0
    6b88:	mov	sp, r7
    6b8c:	sub	sp, fp, #24
    6b90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006b94 <readstat_write_spaces>:
    6b94:	mov	r2, r1
    6b98:	mov	r1, #32
    6b9c:	b	6b20 <readstat_write_repeated_byte>

00006ba0 <readstat_write_space_padded_string>:
    6ba0:	push	{r4, r5, r6, r7, fp, lr}
    6ba4:	add	fp, sp, #16
    6ba8:	mov	r4, r2
    6bac:	mov	r5, r0
    6bb0:	cmp	r1, #0
    6bb4:	beq	6c1c <readstat_write_space_padded_string+0x7c>
    6bb8:	ldrb	r0, [r1]
    6bbc:	mov	r6, r1
    6bc0:	cmp	r0, #0
    6bc4:	beq	6c1c <readstat_write_space_padded_string+0x7c>
    6bc8:	mov	r0, r6
    6bcc:	bl	4bd4 <strlen@plt>
    6bd0:	ldr	r3, [r5]
    6bd4:	ldr	r2, [r5, #304]	; 0x130
    6bd8:	mov	r7, r0
    6bdc:	cmp	r0, r4
    6be0:	mov	r0, r6
    6be4:	movhi	r7, r4
    6be8:	mov	r1, r7
    6bec:	blx	r3
    6bf0:	cmp	r0, r7
    6bf4:	movcc	r0, #13
    6bf8:	popcc	{r4, r5, r6, r7, fp, pc}
    6bfc:	ldr	r1, [r5, #4]
    6c00:	sub	r2, r4, r7
    6c04:	add	r0, r1, r0
    6c08:	mov	r1, #32
    6c0c:	str	r0, [r5, #4]
    6c10:	mov	r0, r5
    6c14:	pop	{r4, r5, r6, r7, fp, lr}
    6c18:	b	6b20 <readstat_write_repeated_byte>
    6c1c:	mov	r0, r5
    6c20:	mov	r1, #32
    6c24:	mov	r2, r4
    6c28:	pop	{r4, r5, r6, r7, fp, lr}
    6c2c:	b	6b20 <readstat_write_repeated_byte>

00006c30 <readstat_add_label_set>:
    6c30:	push	{r4, r5, r6, r7, fp, lr}
    6c34:	add	fp, sp, #16
    6c38:	mov	r6, r1
    6c3c:	mov	r7, r0
    6c40:	ldr	r1, [r0, #40]	; 0x28
    6c44:	ldr	r0, [r0, #44]	; 0x2c
    6c48:	mov	r4, r2
    6c4c:	cmp	r1, r0
    6c50:	bne	6c6c <readstat_add_label_set+0x3c>
    6c54:	lsl	r0, r1, #1
    6c58:	lsl	r1, r1, #3
    6c5c:	str	r0, [r7, #44]	; 0x2c
    6c60:	ldr	r0, [r7, #36]	; 0x24
    6c64:	bl	49e8 <realloc@plt>
    6c68:	str	r0, [r7, #36]	; 0x24
    6c6c:	mov	r0, #1
    6c70:	mov	r1, #284	; 0x11c
    6c74:	bl	4778 <calloc@plt>
    6c78:	ldr	r1, [r7, #40]	; 0x28
    6c7c:	mov	r5, r0
    6c80:	ldr	r0, [r7, #36]	; 0x24
    6c84:	mov	r3, r4
    6c88:	add	r2, r1, #1
    6c8c:	str	r2, [r7, #40]	; 0x28
    6c90:	str	r5, [r0, r1, lsl #2]
    6c94:	str	r6, [r5]
    6c98:	add	r0, r5, #4
    6c9c:	mov	r1, #256	; 0x100
    6ca0:	ldr	r2, [pc, #60]	; 6ce4 <readstat_add_label_set+0xb4>
    6ca4:	add	r2, pc, r2
    6ca8:	bl	4c4c <snprintf@plt>
    6cac:	mov	r0, #10
    6cb0:	mov	r1, #32
    6cb4:	mov	r4, #10
    6cb8:	bl	4778 <calloc@plt>
    6cbc:	str	r0, [r5, #260]	; 0x104
    6cc0:	mov	r0, #2
    6cc4:	mov	r1, #4
    6cc8:	str	r4, [r5, #268]	; 0x10c
    6ccc:	mov	r4, #2
    6cd0:	bl	4778 <calloc@plt>
    6cd4:	str	r0, [r5, #272]	; 0x110
    6cd8:	mov	r0, r5
    6cdc:	str	r4, [r5, #280]	; 0x118
    6ce0:	pop	{r4, r5, r6, r7, fp, pc}
    6ce4:	.word	0x0001e548

00006ce8 <readstat_get_label_set>:
    6ce8:	ldr	r3, [r0, #40]	; 0x28
    6cec:	mov	r2, r0
    6cf0:	mov	r0, #0
    6cf4:	cmp	r3, r1
    6cf8:	ldrgt	r0, [r2, #36]	; 0x24
    6cfc:	ldrgt	r0, [r0, r1, lsl #2]
    6d00:	bx	lr

00006d04 <readstat_sort_label_set>:
    6d04:	ldr	r2, [r0, #260]	; 0x104
    6d08:	mov	r3, r1
    6d0c:	ldr	r1, [r0, #264]	; 0x108
    6d10:	mov	r0, r2
    6d14:	mov	r2, #32
    6d18:	b	4e08 <qsort@plt>

00006d1c <readstat_get_value_label>:
    6d1c:	ldr	r3, [r0, #264]	; 0x108
    6d20:	mov	r2, r0
    6d24:	mov	r0, #0
    6d28:	cmp	r3, r1
    6d2c:	ldrgt	r0, [r2, #260]	; 0x104
    6d30:	addgt	r0, r0, r1, lsl #5
    6d34:	bx	lr

00006d38 <readstat_get_label_set_variable>:
    6d38:	ldr	r3, [r0, #276]	; 0x114
    6d3c:	mov	r2, r0
    6d40:	mov	r0, #0
    6d44:	cmp	r3, r1
    6d48:	ldrgt	r0, [r2, #272]	; 0x110
    6d4c:	ldrgt	r0, [r0, r1, lsl #2]
    6d50:	bx	lr

00006d54 <readstat_label_double_value>:
    6d54:	push	{fp, lr}
    6d58:	mov	fp, sp
    6d5c:	vpush	{d8}
    6d60:	vmov.f64	d8, d0
    6d64:	bl	6d7c <readstat_add_value_label>
    6d68:	vcvt.s32.f64	s0, d8
    6d6c:	vstr	d8, [r0]
    6d70:	vstr	s0, [r0, #8]
    6d74:	vpop	{d8}
    6d78:	pop	{fp, pc}

00006d7c <readstat_add_value_label>:
    6d7c:	push	{r4, r5, r6, sl, fp, lr}
    6d80:	add	fp, sp, #16
    6d84:	mov	r4, r1
    6d88:	mov	r5, r0
    6d8c:	ldr	r1, [r0, #264]	; 0x108
    6d90:	ldr	r0, [r0, #268]	; 0x10c
    6d94:	cmp	r1, r0
    6d98:	bne	6dbc <readstat_add_value_label+0x40>
    6d9c:	lsl	r0, r1, #1
    6da0:	lsl	r1, r1, #6
    6da4:	str	r0, [r5, #268]	; 0x10c
    6da8:	ldr	r0, [r5, #260]	; 0x104
    6dac:	bl	49e8 <realloc@plt>
    6db0:	str	r0, [r5, #260]	; 0x104
    6db4:	ldr	r1, [r5, #264]	; 0x108
    6db8:	b	6dc0 <readstat_add_value_label+0x44>
    6dbc:	ldr	r0, [r5, #260]	; 0x104
    6dc0:	add	r2, r1, #1
    6dc4:	vmov.i32	q8, #0	; 0x00000000
    6dc8:	cmp	r4, #0
    6dcc:	str	r2, [r5, #264]	; 0x108
    6dd0:	add	r5, r0, r1, lsl #5
    6dd4:	mov	r0, r5
    6dd8:	vst1.64	{d16-d17}, [r0]!
    6ddc:	vst1.64	{d16-d17}, [r0]
    6de0:	beq	6e10 <readstat_add_value_label+0x94>
    6de4:	mov	r0, r4
    6de8:	bl	4bd4 <strlen@plt>
    6dec:	cmp	r0, #0
    6df0:	beq	6e10 <readstat_add_value_label+0x94>
    6df4:	mov	r6, r0
    6df8:	str	r0, [r5, #28]
    6dfc:	bl	4af0 <malloc@plt>
    6e00:	mov	r1, r4
    6e04:	mov	r2, r6
    6e08:	str	r0, [r5, #24]
    6e0c:	bl	4910 <memcpy@plt>
    6e10:	mov	r0, r5
    6e14:	pop	{r4, r5, r6, sl, fp, pc}

00006e18 <readstat_label_int32_value>:
    6e18:	push	{r4, sl, fp, lr}
    6e1c:	add	fp, sp, #8
    6e20:	mov	r4, r1
    6e24:	mov	r1, r2
    6e28:	bl	6d7c <readstat_add_value_label>
    6e2c:	vmov	s0, r4
    6e30:	vcvt.f64.s32	d16, s0
    6e34:	vstr	d16, [r0]
    6e38:	str	r4, [r0, #8]
    6e3c:	pop	{r4, sl, fp, pc}

00006e40 <readstat_label_string_value>:
    6e40:	push	{r4, r5, fp, lr}
    6e44:	add	fp, sp, #8
    6e48:	mov	r4, r1
    6e4c:	mov	r1, r2
    6e50:	bl	6d7c <readstat_add_value_label>
    6e54:	cmp	r4, #0
    6e58:	popeq	{r4, r5, fp, pc}
    6e5c:	mov	r5, r0
    6e60:	mov	r0, r4
    6e64:	bl	4bd4 <strlen@plt>
    6e68:	cmp	r0, #0
    6e6c:	beq	6e8c <readstat_label_string_value+0x4c>
    6e70:	str	r0, [r5, #20]
    6e74:	bl	4af0 <malloc@plt>
    6e78:	str	r0, [r5, #16]
    6e7c:	mov	r1, r4
    6e80:	ldr	r2, [r5, #20]
    6e84:	pop	{r4, r5, fp, lr}
    6e88:	b	4910 <memcpy@plt>
    6e8c:	pop	{r4, r5, fp, pc}

00006e90 <readstat_label_tagged_value>:
    6e90:	push	{r4, sl, fp, lr}
    6e94:	add	fp, sp, #8
    6e98:	mov	r4, r1
    6e9c:	mov	r1, r2
    6ea0:	bl	6d7c <readstat_add_value_label>
    6ea4:	strb	r4, [r0, #12]
    6ea8:	pop	{r4, sl, fp, pc}

00006eac <readstat_add_variable>:
    6eac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6eb0:	add	fp, sp, #24
    6eb4:	mov	r8, r1
    6eb8:	mov	r4, r0
    6ebc:	ldr	r1, [r0, #28]
    6ec0:	ldr	r0, [r0, #32]
    6ec4:	mov	r6, r3
    6ec8:	mov	r7, r2
    6ecc:	cmp	r1, r0
    6ed0:	bne	6eec <readstat_add_variable+0x40>
    6ed4:	lsl	r0, r1, #1
    6ed8:	lsl	r1, r1, #3
    6edc:	str	r0, [r4, #32]
    6ee0:	ldr	r0, [r4, #24]
    6ee4:	bl	49e8 <realloc@plt>
    6ee8:	str	r0, [r4, #24]
    6eec:	mov	r0, #1
    6ef0:	movw	r1, #2152	; 0x868
    6ef4:	bl	4778 <calloc@plt>
    6ef8:	mov	r5, r0
    6efc:	ldr	r0, [r4, #28]
    6f00:	add	r1, r0, #1
    6f04:	str	r1, [r4, #28]
    6f08:	str	r0, [r5, #4]
    6f0c:	ldr	r1, [r4, #24]
    6f10:	str	r5, [r1, r0, lsl #2]
    6f14:	mov	r0, r5
    6f18:	str	r7, [r5]
    6f1c:	str	r6, [r5, #1600]	; 0x640
    6f20:	bl	4f04 <readstat_variable_get_type_class@plt>
    6f24:	mov	r2, #3
    6f28:	cmp	r0, #0
    6f2c:	mov	r1, #0
    6f30:	movweq	r2, #1
    6f34:	cmp	r8, #0
    6f38:	str	r1, [r5, #2128]	; 0x850
    6f3c:	str	r2, [r5, #2132]	; 0x854
    6f40:	beq	6f5c <readstat_add_variable+0xb0>
    6f44:	ldr	r2, [pc, #24]	; 6f64 <readstat_add_variable+0xb8>
    6f48:	add	r0, r5, #8
    6f4c:	mov	r1, #300	; 0x12c
    6f50:	mov	r3, r8
    6f54:	add	r2, pc, r2
    6f58:	bl	4c4c <snprintf@plt>
    6f5c:	mov	r0, r5
    6f60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6f64:	.word	0x0001e298

00006f68 <readstat_add_string_ref>:
    6f68:	push	{r4, r5, r6, r7, fp, lr}
    6f6c:	add	fp, sp, #16
    6f70:	mov	r4, r0
    6f74:	mov	r0, r1
    6f78:	mov	r6, r1
    6f7c:	bl	4bd4 <strlen@plt>
    6f80:	mov	r7, r0
    6f84:	add	r1, r0, #25
    6f88:	mov	r0, #1
    6f8c:	bl	4778 <calloc@plt>
    6f90:	mov	r5, r0
    6f94:	mvn	r0, #0
    6f98:	add	r2, r7, #1
    6f9c:	mov	r1, r6
    6fa0:	str	r0, [r5]
    6fa4:	str	r0, [r5, #4]
    6fa8:	str	r0, [r5, #8]
    6fac:	str	r0, [r5, #12]
    6fb0:	add	r0, r5, #20
    6fb4:	str	r2, [r5, #16]
    6fb8:	bl	4910 <memcpy@plt>
    6fbc:	ldr	r1, [r4, #64]	; 0x40
    6fc0:	ldr	r0, [r4, #68]	; 0x44
    6fc4:	cmp	r1, r0
    6fc8:	bne	6fec <readstat_add_string_ref+0x84>
    6fcc:	lsl	r0, r1, #1
    6fd0:	lsl	r1, r1, #3
    6fd4:	str	r0, [r4, #68]	; 0x44
    6fd8:	ldr	r0, [r4, #60]	; 0x3c
    6fdc:	bl	49e8 <realloc@plt>
    6fe0:	str	r0, [r4, #60]	; 0x3c
    6fe4:	ldr	r1, [r4, #64]	; 0x40
    6fe8:	b	6ff0 <readstat_add_string_ref+0x88>
    6fec:	ldr	r0, [r4, #60]	; 0x3c
    6ff0:	add	r2, r1, #1
    6ff4:	str	r2, [r4, #64]	; 0x40
    6ff8:	str	r5, [r0, r1, lsl #2]
    6ffc:	mov	r0, r5
    7000:	pop	{r4, r5, r6, r7, fp, pc}

00007004 <readstat_add_note>:
    7004:	push	{r4, r5, r6, sl, fp, lr}
    7008:	add	fp, sp, #16
    700c:	mov	r5, r1
    7010:	mov	r4, r0
    7014:	ldr	r1, [r0, #52]	; 0x34
    7018:	ldr	r0, [r0, #56]	; 0x38
    701c:	cmp	r1, r0
    7020:	bne	703c <readstat_add_note+0x38>
    7024:	lsl	r0, r1, #1
    7028:	lsl	r1, r1, #3
    702c:	str	r0, [r4, #56]	; 0x38
    7030:	ldr	r0, [r4, #48]	; 0x30
    7034:	bl	49e8 <realloc@plt>
    7038:	str	r0, [r4, #48]	; 0x30
    703c:	mov	r0, r5
    7040:	bl	4bd4 <strlen@plt>
    7044:	add	r0, r0, #1
    7048:	bl	4af0 <malloc@plt>
    704c:	mov	r1, r5
    7050:	mov	r6, r0
    7054:	bl	4a90 <strcpy@plt>
    7058:	ldr	r1, [r4, #52]	; 0x34
    705c:	ldr	r0, [r4, #48]	; 0x30
    7060:	add	r2, r1, #1
    7064:	str	r2, [r4, #52]	; 0x34
    7068:	str	r6, [r0, r1, lsl #2]
    706c:	pop	{r4, r5, r6, sl, fp, pc}

00007070 <readstat_variable_set_label>:
    7070:	add	r0, r0, #564	; 0x234
    7074:	cmp	r1, #0
    7078:	beq	7090 <readstat_variable_set_label+0x20>
    707c:	ldr	r2, [pc, #24]	; 709c <readstat_variable_set_label+0x2c>
    7080:	mov	r3, r1
    7084:	mov	r1, #1024	; 0x400
    7088:	add	r2, pc, r2
    708c:	b	4c4c <snprintf@plt>
    7090:	mov	r1, #0
    7094:	mov	r2, #1024	; 0x400
    7098:	b	4c70 <memset@plt>
    709c:	.word	0x0001e164

000070a0 <readstat_variable_set_format>:
    70a0:	add	r0, r0, #308	; 0x134
    70a4:	cmp	r1, #0
    70a8:	beq	70c0 <readstat_variable_set_format+0x20>
    70ac:	ldr	r2, [pc, #24]	; 70cc <readstat_variable_set_format+0x2c>
    70b0:	mov	r3, r1
    70b4:	mov	r1, #256	; 0x100
    70b8:	add	r2, pc, r2
    70bc:	b	4c4c <snprintf@plt>
    70c0:	mov	r1, #0
    70c4:	mov	r2, #256	; 0x100
    70c8:	b	4c70 <memset@plt>
    70cc:	.word	0x0001e134

000070d0 <readstat_variable_set_measure>:
    70d0:	str	r1, [r0, #2128]	; 0x850
    70d4:	bx	lr

000070d8 <readstat_variable_set_alignment>:
    70d8:	str	r1, [r0, #2132]	; 0x854
    70dc:	bx	lr

000070e0 <readstat_variable_set_display_width>:
    70e0:	str	r1, [r0, #2136]	; 0x858
    70e4:	bx	lr

000070e8 <readstat_variable_set_label_set>:
    70e8:	cmp	r1, #0
    70ec:	str	r1, [r0, #1588]	; 0x634
    70f0:	bxeq	lr
    70f4:	push	{r4, r5, fp, lr}
    70f8:	add	fp, sp, #8
    70fc:	mov	r5, r1
    7100:	mov	r4, r0
    7104:	ldr	r1, [r1, #276]	; 0x114
    7108:	ldr	r0, [r5, #280]	; 0x118
    710c:	cmp	r1, r0
    7110:	bne	7134 <readstat_variable_set_label_set+0x4c>
    7114:	lsl	r0, r1, #1
    7118:	lsl	r1, r1, #3
    711c:	str	r0, [r5, #280]	; 0x118
    7120:	ldr	r0, [r5, #272]	; 0x110
    7124:	bl	49e8 <realloc@plt>
    7128:	str	r0, [r5, #272]	; 0x110
    712c:	ldr	r1, [r5, #276]	; 0x114
    7130:	b	7138 <readstat_variable_set_label_set+0x50>
    7134:	ldr	r0, [r5, #272]	; 0x110
    7138:	add	r2, r1, #1
    713c:	str	r2, [r5, #276]	; 0x114
    7140:	str	r4, [r0, r1, lsl #2]
    7144:	pop	{r4, r5, fp, lr}
    7148:	bx	lr

0000714c <readstat_get_variable>:
    714c:	ldr	r3, [r0, #28]
    7150:	mov	r2, r0
    7154:	mov	r0, #0
    7158:	cmp	r3, r1
    715c:	ldrgt	r0, [r2, #24]
    7160:	ldrgt	r0, [r0, r1, lsl #2]
    7164:	bx	lr

00007168 <readstat_get_string_ref>:
    7168:	ldr	r3, [r0, #64]	; 0x40
    716c:	mov	r2, r0
    7170:	mov	r0, #0
    7174:	cmp	r3, r1
    7178:	ldrgt	r0, [r2, #60]	; 0x3c
    717c:	ldrgt	r0, [r0, r1, lsl #2]
    7180:	bx	lr

00007184 <readstat_writer_set_file_label>:
    7184:	push	{fp, lr}
    7188:	mov	fp, sp
    718c:	ldr	r2, [pc, #24]	; 71ac <readstat_writer_set_file_label+0x28>
    7190:	mov	r3, r1
    7194:	add	r0, r0, #88	; 0x58
    7198:	mov	r1, #100	; 0x64
    719c:	add	r2, pc, r2
    71a0:	bl	4c4c <snprintf@plt>
    71a4:	mov	r0, #0
    71a8:	pop	{fp, pc}
    71ac:	.word	0x0001e050

000071b0 <readstat_writer_set_file_timestamp>:
    71b0:	str	r1, [r0, #20]
    71b4:	mov	r0, #0
    71b8:	bx	lr

000071bc <readstat_writer_set_table_name>:
    71bc:	push	{fp, lr}
    71c0:	mov	fp, sp
    71c4:	ldr	r2, [pc, #24]	; 71e4 <readstat_writer_set_table_name+0x28>
    71c8:	mov	r3, r1
    71cc:	add	r0, r0, #188	; 0xbc
    71d0:	mov	r1, #33	; 0x21
    71d4:	add	r2, pc, r2
    71d8:	bl	4c4c <snprintf@plt>
    71dc:	mov	r0, #0
    71e0:	pop	{fp, pc}
    71e4:	.word	0x0001e018

000071e8 <readstat_writer_set_fweight_variable>:
    71e8:	push	{r4, r5, fp, lr}
    71ec:	add	fp, sp, #8
    71f0:	mov	r5, r0
    71f4:	mov	r0, r1
    71f8:	mov	r4, r1
    71fc:	bl	4f04 <readstat_variable_get_type_class@plt>
    7200:	cmp	r0, #0
    7204:	moveq	r0, #30
    7208:	strne	r4, [r5, #224]	; 0xe0
    720c:	movne	r0, #0
    7210:	pop	{r4, r5, fp, pc}

00007214 <readstat_writer_set_file_format_version>:
    7214:	str	r1, [r0, #8]
    7218:	mov	r0, #0
    721c:	bx	lr

00007220 <readstat_writer_set_file_format_is_64bit>:
    7220:	str	r1, [r0, #12]
    7224:	mov	r0, #0
    7228:	bx	lr

0000722c <readstat_writer_set_compression>:
    722c:	str	r1, [r0, #16]
    7230:	mov	r0, #0
    7234:	bx	lr

00007238 <readstat_writer_set_error_handler>:
    7238:	str	r1, [r0, #296]	; 0x128
    723c:	mov	r0, #0
    7240:	bx	lr

00007244 <readstat_begin_writing_file>:
    7244:	str	r2, [r0, #80]	; 0x50
    7248:	mov	r2, #1
    724c:	str	r1, [r0, #304]	; 0x130
    7250:	str	r2, [r0, #308]	; 0x134
    7254:	ldr	r1, [r0, #292]	; 0x124
    7258:	cmp	r1, #0
    725c:	moveq	r0, #0
    7260:	bxeq	lr
    7264:	bx	r1

00007268 <readstat_begin_row>:
    7268:	push	{r4, r5, fp, lr}
    726c:	add	fp, sp, #8
    7270:	mov	r5, r0
    7274:	ldr	r0, [r0, #308]	; 0x134
    7278:	cmp	r0, #0
    727c:	beq	72b0 <readstat_begin_row+0x48>
    7280:	ldr	r0, [r5, #84]	; 0x54
    7284:	mov	r4, #0
    7288:	cmp	r0, #0
    728c:	bne	729c <readstat_begin_row+0x34>
    7290:	mov	r0, r5
    7294:	bl	72bc <readstat_begin_writing_data>
    7298:	mov	r4, r0
    729c:	ldr	r0, [r5, #72]	; 0x48
    72a0:	ldr	r2, [r5, #76]	; 0x4c
    72a4:	mov	r1, #0
    72a8:	bl	4c70 <memset@plt>
    72ac:	b	72b4 <readstat_begin_row+0x4c>
    72b0:	mov	r4, #14
    72b4:	mov	r0, r4
    72b8:	pop	{r4, r5, fp, pc}

000072bc <readstat_begin_writing_data>:
    72bc:	push	{r4, r5, r6, r7, fp, lr}
    72c0:	add	fp, sp, #16
    72c4:	mov	r4, r0
    72c8:	ldr	r0, [r0, #308]	; 0x134
    72cc:	cmp	r0, #0
    72d0:	beq	73c0 <readstat_begin_writing_data+0x104>
    72d4:	ldr	r1, [r4, #292]	; 0x124
    72d8:	cmp	r1, #0
    72dc:	beq	72f4 <readstat_begin_writing_data+0x38>
    72e0:	mov	r0, r4
    72e4:	blx	r1
    72e8:	cmp	r0, #0
    72ec:	beq	72f4 <readstat_begin_writing_data+0x38>
    72f0:	pop	{r4, r5, r6, r7, fp, pc}
    72f4:	ldr	r0, [r4, #28]
    72f8:	cmp	r0, #1
    72fc:	blt	7340 <readstat_begin_writing_data+0x84>
    7300:	mov	r6, #0
    7304:	mov	r5, #0
    7308:	ldr	r0, [r4, #24]
    730c:	ldr	r2, [r4, #228]	; 0xe4
    7310:	ldr	r7, [r0, r6, lsl #2]
    7314:	ldr	r1, [r7, #1600]	; 0x640
    7318:	ldr	r0, [r7]
    731c:	blx	r2
    7320:	str	r5, [r7, #1592]	; 0x638
    7324:	str	r0, [r7, #1596]	; 0x63c
    7328:	add	r5, r0, r5
    732c:	add	r6, r6, #1
    7330:	ldr	r0, [r4, #28]
    7334:	cmp	r6, r0
    7338:	blt	7308 <readstat_begin_writing_data+0x4c>
    733c:	b	7344 <readstat_begin_writing_data+0x88>
    7340:	mov	r5, #0
    7344:	ldr	r1, [r4, #232]	; 0xe8
    7348:	cmp	r1, #0
    734c:	beq	7398 <readstat_begin_writing_data+0xdc>
    7350:	cmp	r0, #1
    7354:	blt	7398 <readstat_begin_writing_data+0xdc>
    7358:	mov	r6, #0
    735c:	ldr	r1, [r4, #308]	; 0x134
    7360:	cmp	r1, #0
    7364:	beq	73c0 <readstat_begin_writing_data+0x104>
    7368:	ldr	r1, [r4, #232]	; 0xe8
    736c:	cmp	r1, #0
    7370:	beq	738c <readstat_begin_writing_data+0xd0>
    7374:	ldr	r0, [r4, #24]
    7378:	ldr	r0, [r0, r6, lsl #2]
    737c:	blx	r1
    7380:	cmp	r0, #0
    7384:	popne	{r4, r5, r6, r7, fp, pc}
    7388:	ldr	r0, [r4, #28]
    738c:	add	r6, r6, #1
    7390:	cmp	r6, r0
    7394:	blt	735c <readstat_begin_writing_data+0xa0>
    7398:	mov	r0, r5
    739c:	str	r5, [r4, #76]	; 0x4c
    73a0:	bl	4af0 <malloc@plt>
    73a4:	str	r0, [r4, #72]	; 0x48
    73a8:	ldr	r1, [r4, #276]	; 0x114
    73ac:	cmp	r1, #0
    73b0:	beq	73c8 <readstat_begin_writing_data+0x10c>
    73b4:	mov	r0, r4
    73b8:	pop	{r4, r5, r6, r7, fp, lr}
    73bc:	bx	r1
    73c0:	mov	r0, #14
    73c4:	pop	{r4, r5, r6, r7, fp, pc}
    73c8:	mov	r0, #0
    73cc:	pop	{r4, r5, r6, r7, fp, pc}

000073d0 <readstat_insert_int8_value>:
    73d0:	ldr	r3, [r0, #308]	; 0x134
    73d4:	cmp	r3, #0
    73d8:	beq	7410 <readstat_insert_int8_value+0x40>
    73dc:	ldr	ip, [r1]
    73e0:	mov	r3, #12
    73e4:	cmp	ip, #1
    73e8:	bne	7414 <readstat_insert_int8_value+0x44>
    73ec:	push	{fp, lr}
    73f0:	mov	fp, sp
    73f4:	ldr	ip, [r1, #1592]	; 0x638
    73f8:	ldr	r3, [r0, #72]	; 0x48
    73fc:	ldr	lr, [r0, #236]	; 0xec
    7400:	add	r0, r3, ip
    7404:	mov	r3, lr
    7408:	pop	{fp, lr}
    740c:	bx	r3
    7410:	mov	r3, #14
    7414:	mov	r0, r3
    7418:	bx	lr

0000741c <readstat_insert_int16_value>:
    741c:	ldr	r3, [r0, #308]	; 0x134
    7420:	cmp	r3, #0
    7424:	beq	745c <readstat_insert_int16_value+0x40>
    7428:	ldr	ip, [r1]
    742c:	mov	r3, #12
    7430:	cmp	ip, #2
    7434:	bne	7460 <readstat_insert_int16_value+0x44>
    7438:	push	{fp, lr}
    743c:	mov	fp, sp
    7440:	ldr	ip, [r1, #1592]	; 0x638
    7444:	ldr	r3, [r0, #72]	; 0x48
    7448:	ldr	lr, [r0, #240]	; 0xf0
    744c:	add	r0, r3, ip
    7450:	mov	r3, lr
    7454:	pop	{fp, lr}
    7458:	bx	r3
    745c:	mov	r3, #14
    7460:	mov	r0, r3
    7464:	bx	lr

00007468 <readstat_insert_int32_value>:
    7468:	ldr	r3, [r0, #308]	; 0x134
    746c:	cmp	r3, #0
    7470:	beq	74a8 <readstat_insert_int32_value+0x40>
    7474:	ldr	ip, [r1]
    7478:	mov	r3, #12
    747c:	cmp	ip, #3
    7480:	bne	74ac <readstat_insert_int32_value+0x44>
    7484:	push	{fp, lr}
    7488:	mov	fp, sp
    748c:	ldr	ip, [r1, #1592]	; 0x638
    7490:	ldr	r3, [r0, #72]	; 0x48
    7494:	ldr	lr, [r0, #244]	; 0xf4
    7498:	add	r0, r3, ip
    749c:	mov	r3, lr
    74a0:	pop	{fp, lr}
    74a4:	bx	r3
    74a8:	mov	r3, #14
    74ac:	mov	r0, r3
    74b0:	bx	lr

000074b4 <readstat_insert_float_value>:
    74b4:	ldr	r2, [r0, #308]	; 0x134
    74b8:	cmp	r2, #0
    74bc:	beq	74e4 <readstat_insert_float_value+0x30>
    74c0:	ldr	r3, [r1]
    74c4:	mov	r2, #12
    74c8:	cmp	r3, #4
    74cc:	bne	74e8 <readstat_insert_float_value+0x34>
    74d0:	ldr	r2, [r1, #1592]	; 0x638
    74d4:	ldr	r3, [r0, #72]	; 0x48
    74d8:	ldr	ip, [r0, #248]	; 0xf8
    74dc:	add	r0, r3, r2
    74e0:	bx	ip
    74e4:	mov	r2, #14
    74e8:	mov	r0, r2
    74ec:	bx	lr

000074f0 <readstat_insert_double_value>:
    74f0:	ldr	r2, [r0, #308]	; 0x134
    74f4:	cmp	r2, #0
    74f8:	beq	7520 <readstat_insert_double_value+0x30>
    74fc:	ldr	r3, [r1]
    7500:	mov	r2, #12
    7504:	cmp	r3, #5
    7508:	bne	7524 <readstat_insert_double_value+0x34>
    750c:	ldr	r2, [r1, #1592]	; 0x638
    7510:	ldr	r3, [r0, #72]	; 0x48
    7514:	ldr	ip, [r0, #252]	; 0xfc
    7518:	add	r0, r3, r2
    751c:	bx	ip
    7520:	mov	r2, #14
    7524:	mov	r0, r2
    7528:	bx	lr

0000752c <readstat_insert_string_value>:
    752c:	ldr	r3, [r0, #308]	; 0x134
    7530:	cmp	r3, #0
    7534:	beq	756c <readstat_insert_string_value+0x40>
    7538:	ldr	ip, [r1]
    753c:	mov	r3, #12
    7540:	cmp	ip, #0
    7544:	bne	7570 <readstat_insert_string_value+0x44>
    7548:	push	{fp, lr}
    754c:	mov	fp, sp
    7550:	ldr	ip, [r1, #1592]	; 0x638
    7554:	ldr	r3, [r0, #72]	; 0x48
    7558:	ldr	lr, [r0, #256]	; 0x100
    755c:	add	r0, r3, ip
    7560:	mov	r3, lr
    7564:	pop	{fp, lr}
    7568:	bx	r3
    756c:	mov	r3, #14
    7570:	mov	r0, r3
    7574:	bx	lr

00007578 <readstat_insert_string_ref>:
    7578:	ldr	r3, [r0, #308]	; 0x134
    757c:	cmp	r3, #0
    7580:	beq	760c <readstat_insert_string_ref+0x94>
    7584:	ldr	ip, [r1]
    7588:	mov	r3, #12
    758c:	cmp	ip, #6
    7590:	bne	7618 <readstat_insert_string_ref+0xa0>
    7594:	ldr	r3, [r0, #260]	; 0x104
    7598:	cmp	r3, #0
    759c:	beq	7614 <readstat_insert_string_ref+0x9c>
    75a0:	push	{r4, r5, r6, r7, fp, lr}
    75a4:	add	fp, sp, #16
    75a8:	cmp	r2, #0
    75ac:	beq	75f8 <readstat_insert_string_ref+0x80>
    75b0:	mov	ip, r2
    75b4:	ldr	lr, [ip, #8]!
    75b8:	ldr	r4, [ip, #4]
    75bc:	and	r4, lr, r4
    75c0:	cmn	r4, #1
    75c4:	bne	75f8 <readstat_insert_string_ref+0x80>
    75c8:	ldrd	r6, [r2]
    75cc:	mvn	r4, #0
    75d0:	eor	r7, r7, r4
    75d4:	eor	r6, r6, r4
    75d8:	orrs	r7, r6, r7
    75dc:	bne	75f8 <readstat_insert_string_ref+0x80>
    75e0:	ldr	r4, [r0, #84]	; 0x54
    75e4:	asr	r5, r4, #31
    75e8:	strd	r4, [ip]
    75ec:	ldr	r4, [r1, #4]
    75f0:	asr	r5, r4, #31
    75f4:	strd	r4, [r2]
    75f8:	ldr	r7, [r1, #1592]	; 0x638
    75fc:	ldr	r0, [r0, #72]	; 0x48
    7600:	add	r0, r0, r7
    7604:	pop	{r4, r5, r6, r7, fp, lr}
    7608:	bx	r3
    760c:	mov	r3, #14
    7610:	b	7618 <readstat_insert_string_ref+0xa0>
    7614:	mov	r3, #33	; 0x21
    7618:	mov	r0, r3
    761c:	bx	lr

00007620 <readstat_insert_missing_value>:
    7620:	ldr	r2, [r0, #308]	; 0x134
    7624:	cmp	r2, #0
    7628:	moveq	r0, #14
    762c:	bxeq	lr
    7630:	ldr	r2, [r1]
    7634:	cmp	r2, #6
    7638:	beq	7658 <readstat_insert_missing_value+0x38>
    763c:	cmp	r2, #0
    7640:	ldr	r2, [r1, #1592]	; 0x638
    7644:	ldr	r3, [r0, #72]	; 0x48
    7648:	ldrne	ip, [r0, #268]	; 0x10c
    764c:	ldreq	ip, [r0, #264]	; 0x108
    7650:	add	r0, r3, r2
    7654:	bx	ip
    7658:	ldr	r3, [r0, #260]	; 0x104
    765c:	cmp	r3, #0
    7660:	moveq	r0, #33	; 0x21
    7664:	bxeq	lr
    7668:	ldr	r2, [r1, #1592]	; 0x638
    766c:	ldr	r0, [r0, #72]	; 0x48
    7670:	add	r0, r0, r2
    7674:	mov	r2, #0
    7678:	bx	r3

0000767c <readstat_insert_tagged_missing_value>:
    767c:	ldr	r3, [r0, #308]	; 0x134
    7680:	cmp	r3, #0
    7684:	moveq	r0, #14
    7688:	bxeq	lr
    768c:	ldr	r3, [r0, #272]	; 0x110
    7690:	cmp	r3, #0
    7694:	beq	76a8 <readstat_insert_tagged_missing_value+0x2c>
    7698:	ldr	ip, [r1, #1592]	; 0x638
    769c:	ldr	r0, [r0, #72]	; 0x48
    76a0:	add	r0, r0, ip
    76a4:	bx	r3
    76a8:	push	{fp, lr}
    76ac:	mov	fp, sp
    76b0:	ldr	r2, [r1, #1592]	; 0x638
    76b4:	ldr	r3, [r0, #72]	; 0x48
    76b8:	ldr	ip, [r0, #268]	; 0x10c
    76bc:	add	r0, r3, r2
    76c0:	blx	ip
    76c4:	mov	r0, #23
    76c8:	pop	{fp, pc}

000076cc <readstat_end_row>:
    76cc:	push	{r4, sl, fp, lr}
    76d0:	add	fp, sp, #8
    76d4:	mov	r4, r0
    76d8:	ldr	r0, [r0, #308]	; 0x134
    76dc:	cmp	r0, #0
    76e0:	moveq	r0, #14
    76e4:	popeq	{r4, sl, fp, pc}
    76e8:	ldr	r1, [r4, #72]	; 0x48
    76ec:	ldr	r2, [r4, #76]	; 0x4c
    76f0:	ldr	r3, [r4, #280]	; 0x118
    76f4:	mov	r0, r4
    76f8:	blx	r3
    76fc:	cmp	r0, #0
    7700:	popne	{r4, sl, fp, pc}
    7704:	ldr	r0, [r4, #84]	; 0x54
    7708:	add	r0, r0, #1
    770c:	str	r0, [r4, #84]	; 0x54
    7710:	mov	r0, #0
    7714:	pop	{r4, sl, fp, pc}

00007718 <readstat_end_writing>:
    7718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    771c:	add	fp, sp, #28
    7720:	sub	sp, sp, #4
    7724:	mov	sl, r0
    7728:	ldr	r0, [r0, #308]	; 0x134
    772c:	cmp	r0, #0
    7730:	beq	77bc <readstat_end_writing+0xa4>
    7734:	ldr	r2, [sl, #80]	; 0x50
    7738:	ldr	r1, [sl, #84]	; 0x54
    773c:	mov	r0, #9
    7740:	cmp	r1, r2
    7744:	bne	77c0 <readstat_end_writing+0xa8>
    7748:	cmp	r1, #0
    774c:	beq	77c8 <readstat_end_writing+0xb0>
    7750:	ldr	r1, [sl, #64]	; 0x40
    7754:	cmp	r1, #2
    7758:	blt	77ec <readstat_end_writing+0xd4>
    775c:	ldr	r0, [sl, #60]	; 0x3c
    7760:	mov	r2, #1
    7764:	ldr	r3, [r0]
    7768:	ldm	r3, {r6, r9}
    776c:	ldr	r4, [r0, r2, lsl #2]
    7770:	ldm	r4, {r8, ip}
    7774:	eor	r5, r9, ip
    7778:	eor	r7, r6, r8
    777c:	orrs	r7, r7, r5
    7780:	bne	7794 <readstat_end_writing+0x7c>
    7784:	ldr	r7, [r4, #8]
    7788:	ldr	r3, [r3, #8]
    778c:	subs	r3, r3, r7
    7790:	b	7798 <readstat_end_writing+0x80>
    7794:	subs	r3, r6, r8
    7798:	cmp	r3, #1
    779c:	bge	77dc <readstat_end_writing+0xc4>
    77a0:	add	r2, r2, #1
    77a4:	mov	r6, r8
    77a8:	mov	r9, ip
    77ac:	mov	r3, r4
    77b0:	cmp	r2, r1
    77b4:	blt	776c <readstat_end_writing+0x54>
    77b8:	b	77ec <readstat_end_writing+0xd4>
    77bc:	mov	r0, #14
    77c0:	sub	sp, fp, #28
    77c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    77c8:	mov	r0, sl
    77cc:	bl	72bc <readstat_begin_writing_data>
    77d0:	cmp	r0, #0
    77d4:	bne	77c0 <readstat_end_writing+0xa8>
    77d8:	b	7750 <readstat_end_writing+0x38>
    77dc:	ldr	r3, [pc, #44]	; 7810 <readstat_end_writing+0xf8>
    77e0:	mov	r2, #4
    77e4:	add	r3, pc, r3
    77e8:	bl	4e08 <qsort@plt>
    77ec:	ldr	r1, [sl, #284]	; 0x11c
    77f0:	cmp	r1, #0
    77f4:	beq	7808 <readstat_end_writing+0xf0>
    77f8:	mov	r0, sl
    77fc:	sub	sp, fp, #28
    7800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7804:	bx	r1
    7808:	mov	r0, #0
    780c:	b	77c0 <readstat_end_writing+0xa8>
    7810:	.word	0x00000028

00007814 <readstat_compare_string_refs>:
    7814:	push	{r4, r5, fp, lr}
    7818:	add	fp, sp, #8
    781c:	ldr	r1, [r1]
    7820:	ldr	r0, [r0]
    7824:	ldrd	r2, [r1]
    7828:	ldrd	r4, [r0]
    782c:	eor	r3, r5, r3
    7830:	eor	r5, r4, r2
    7834:	orrs	r3, r5, r3
    7838:	bne	784c <readstat_compare_string_refs+0x38>
    783c:	ldr	r1, [r1, #8]
    7840:	ldr	r0, [r0, #8]
    7844:	subs	r0, r0, r1
    7848:	pop	{r4, r5, fp, pc}
    784c:	subs	r0, r4, r2
    7850:	pop	{r4, r5, fp, pc}

00007854 <memreverse>:
    7854:	push	{r4, r5, fp, lr}
    7858:	add	fp, sp, #8
    785c:	mov	r5, r1
    7860:	mov	r4, r0
    7864:	bl	48b0 <machine_is_little_endian@plt>
    7868:	cmp	r0, #0
    786c:	beq	78a0 <memreverse+0x4c>
    7870:	cmp	r5, #2
    7874:	poplt	{r4, r5, fp, pc}
    7878:	add	r0, r5, r5, lsr #31
    787c:	add	r1, r4, r5
    7880:	asr	r0, r0, #1
    7884:	sub	r1, r1, #1
    7888:	ldrb	r2, [r4]
    788c:	ldrb	r3, [r1]
    7890:	subs	r0, r0, #1
    7894:	strb	r3, [r4], #1
    7898:	strb	r2, [r1], #-1
    789c:	bne	7888 <memreverse+0x34>
    78a0:	pop	{r4, r5, fp, pc}

000078a4 <cnxptiee>:
    78a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    78a8:	add	fp, sp, #28
    78ac:	sub	sp, sp, #52	; 0x34
    78b0:	mov	r9, r3
    78b4:	mov	r8, r2
    78b8:	mov	r6, r1
    78bc:	mov	r7, r0
    78c0:	cmp	r1, #0
    78c4:	bne	7904 <cnxptiee+0x60>
    78c8:	ldr	r4, [pc, #1448]	; 7e78 <cnxptiee+0x5d4>
    78cc:	ldr	r5, [pc, #1448]	; 7e7c <cnxptiee+0x5d8>
    78d0:	mov	r6, #0
    78d4:	add	r4, pc, r4
    78d8:	add	r5, pc, r5
    78dc:	cmp	r6, #2
    78e0:	bhi	79d0 <cnxptiee+0x12c>
    78e4:	mov	r0, r5
    78e8:	mov	r1, r4
    78ec:	mov	r2, #8
    78f0:	bl	4988 <memcmp@plt>
    78f4:	add	r4, r4, #8
    78f8:	add	r6, r6, #1
    78fc:	cmp	r0, #0
    7900:	bne	78dc <cnxptiee+0x38>
    7904:	sub	r0, r6, #1
    7908:	cmp	r0, #2
    790c:	bcs	7918 <cnxptiee+0x74>
    7910:	mov	r5, r7
    7914:	b	7958 <cnxptiee+0xb4>
    7918:	mvn	r0, #0
    791c:	cmp	r6, #3
    7920:	bne	7d8c <cnxptiee+0x4e8>
    7924:	cmp	r9, #3
    7928:	beq	79b8 <cnxptiee+0x114>
    792c:	mov	r0, #0
    7930:	mvn	r1, #7
    7934:	add	r5, sp, #16
    7938:	vld1.8	{d16}, [r7], r1
    793c:	add	r2, r5, r0
    7940:	add	r0, r0, #8
    7944:	cmp	r0, #8
    7948:	vrev64.8	d16, d16
    794c:	vstr	d16, [r2]
    7950:	bne	7938 <cnxptiee+0x94>
    7954:	mov	r6, #2
    7958:	cmp	r9, #0
    795c:	bne	799c <cnxptiee+0xf8>
    7960:	ldr	r4, [pc, #1304]	; 7e80 <cnxptiee+0x5dc>
    7964:	ldr	r7, [pc, #1304]	; 7e84 <cnxptiee+0x5e0>
    7968:	mov	r9, #0
    796c:	add	r4, pc, r4
    7970:	add	r7, pc, r7
    7974:	cmp	r9, #2
    7978:	bhi	7b1c <cnxptiee+0x278>
    797c:	mov	r0, r7
    7980:	mov	r1, r4
    7984:	mov	r2, #8
    7988:	bl	4988 <memcmp@plt>
    798c:	add	r4, r4, #8
    7990:	add	r9, r9, #1
    7994:	cmp	r0, #0
    7998:	bne	7974 <cnxptiee+0xd0>
    799c:	sub	r1, r9, #1
    79a0:	mvn	r0, #1
    79a4:	cmp	r1, #2
    79a8:	bhi	7d8c <cnxptiee+0x4e8>
    79ac:	cmp	r6, r9
    79b0:	bne	79d8 <cnxptiee+0x134>
    79b4:	mov	r7, r5
    79b8:	ldr	r0, [r7]
    79bc:	ldr	r1, [r7, #4]
    79c0:	str	r1, [r8, #4]
    79c4:	str	r0, [r8]
    79c8:	mov	r0, #0
    79cc:	b	7d8c <cnxptiee+0x4e8>
    79d0:	mvn	r0, #0
    79d4:	b	7d8c <cnxptiee+0x4e8>
    79d8:	cmp	r6, #1
    79dc:	beq	7b24 <cnxptiee+0x280>
    79e0:	cmp	r6, #2
    79e4:	bne	7d44 <cnxptiee+0x4a0>
    79e8:	cmp	r9, #1
    79ec:	bne	7c7c <cnxptiee+0x3d8>
    79f0:	mov	r0, #0
    79f4:	str	r0, [sp, #28]
    79f8:	ldr	r4, [r5, #4]
    79fc:	ldrb	r6, [r5]
    7a00:	ldrb	r7, [r5, #1]
    7a04:	ldrb	sl, [r5, #2]
    7a08:	ldrb	r5, [r5, #3]
    7a0c:	strb	r7, [sp, #33]	; 0x21
    7a10:	strb	r6, [sp, #32]
    7a14:	strb	sl, [sp, #34]	; 0x22
    7a18:	strb	r5, [sp, #35]	; 0x23
    7a1c:	bl	48b0 <machine_is_little_endian@plt>
    7a20:	cmp	r0, #0
    7a24:	str	r4, [sp, #28]
    7a28:	strbne	r6, [sp, #35]	; 0x23
    7a2c:	strbne	r5, [sp, #32]
    7a30:	strbne	sl, [sp, #33]	; 0x21
    7a34:	strbne	r7, [sp, #34]	; 0x22
    7a38:	bl	48b0 <machine_is_little_endian@plt>
    7a3c:	cmp	r0, #0
    7a40:	beq	7a60 <cnxptiee+0x1bc>
    7a44:	lsr	r0, r4, #24
    7a48:	strb	r4, [sp, #31]
    7a4c:	strb	r0, [sp, #28]
    7a50:	lsr	r0, r4, #16
    7a54:	strb	r0, [sp, #29]
    7a58:	lsr	r0, r4, #8
    7a5c:	strb	r0, [sp, #30]
    7a60:	and	r0, r7, r6
    7a64:	mov	r9, #0
    7a68:	cmp	r0, #255	; 0xff
    7a6c:	str	r9, [r8, #4]
    7a70:	str	r9, [r8]
    7a74:	beq	7d94 <cnxptiee+0x4f0>
    7a78:	ldr	r7, [sp, #32]
    7a7c:	ldr	r4, [sp, #28]
    7a80:	mov	r5, r7
    7a84:	orrs	r0, r4, r7
    7a88:	lsr	ip, r4, #16
    7a8c:	lsr	r3, r4, #8
    7a90:	lsr	r6, r4, #24
    7a94:	str	r4, [sp, #36]	; 0x24
    7a98:	bfc	r5, #20, #12
    7a9c:	str	r5, [sp, #40]	; 0x28
    7aa0:	beq	7da4 <cnxptiee+0x500>
    7aa4:	orr	r5, r5, #1048576	; 0x100000
    7aa8:	movw	r1, #1023	; 0x3ff
    7aac:	str	r5, [sp, #40]	; 0x28
    7ab0:	ubfx	r0, r7, #20, #11
    7ab4:	sub	r1, r0, r1
    7ab8:	ands	r2, r1, #3
    7abc:	beq	7ae8 <cnxptiee+0x244>
    7ac0:	rsb	r3, r2, #8
    7ac4:	and	r6, r6, #224	; 0xe0
    7ac8:	lsl	r4, r4, r2
    7acc:	lsr	r3, r6, r3
    7ad0:	lsr	ip, r4, #16
    7ad4:	lsr	r6, r4, #24
    7ad8:	str	r4, [sp, #36]	; 0x24
    7adc:	orr	r5, r3, r5, lsl r2
    7ae0:	lsr	r3, r4, #8
    7ae4:	str	r5, [sp, #40]	; 0x28
    7ae8:	mov	r2, #-16777216	; 0xff000000
    7aec:	and	r1, r2, r1, lsl #22
    7af0:	and	r2, r7, #-2147483648	; 0x80000000
    7af4:	add	r1, r1, #1090519040	; 0x41000000
    7af8:	orr	r1, r1, r2
    7afc:	orr	sl, r1, r5
    7b00:	movw	r1, #762	; 0x2fa
    7b04:	cmp	r0, r1
    7b08:	str	sl, [sp, #40]	; 0x28
    7b0c:	bhi	7dc0 <cnxptiee+0x51c>
    7b10:	mov	r0, #0
    7b14:	str	r0, [r8, #4]
    7b18:	b	79c4 <cnxptiee+0x120>
    7b1c:	mvn	r0, #1
    7b20:	b	7d8c <cnxptiee+0x4e8>
    7b24:	mov	r0, #0
    7b28:	str	r0, [sp, #28]
    7b2c:	str	r0, [sp, #24]
    7b30:	ldr	r6, [r5]
    7b34:	ldr	r4, [r5, #4]
    7b38:	tst	r6, #255	; 0xff
    7b3c:	str	r4, [sp, #44]	; 0x2c
    7b40:	str	r6, [sp, #40]	; 0x28
    7b44:	str	r0, [r8, #4]
    7b48:	str	r0, [r8]
    7b4c:	beq	7b6c <cnxptiee+0x2c8>
    7b50:	add	r0, sp, #40	; 0x28
    7b54:	mov	r1, r8
    7b58:	mov	r2, #7
    7b5c:	orr	r0, r0, #1
    7b60:	bl	4988 <memcmp@plt>
    7b64:	cmp	r0, #0
    7b68:	beq	7d34 <cnxptiee+0x490>
    7b6c:	str	r6, [sp, #28]
    7b70:	bl	48b0 <machine_is_little_endian@plt>
    7b74:	cmp	r0, #0
    7b78:	beq	7b98 <cnxptiee+0x2f4>
    7b7c:	lsr	r0, r6, #24
    7b80:	strb	r6, [sp, #31]
    7b84:	strb	r0, [sp, #28]
    7b88:	lsr	r0, r6, #16
    7b8c:	strb	r0, [sp, #29]
    7b90:	lsr	r0, r6, #8
    7b94:	strb	r0, [sp, #30]
    7b98:	str	r4, [sp, #24]
    7b9c:	bl	48b0 <machine_is_little_endian@plt>
    7ba0:	cmp	r0, #0
    7ba4:	beq	7bc8 <cnxptiee+0x324>
    7ba8:	lsr	r0, r4, #24
    7bac:	strb	r4, [sp, #27]
    7bb0:	strb	r0, [sp, #24]
    7bb4:	lsr	r0, r4, #16
    7bb8:	strb	r0, [sp, #25]
    7bbc:	lsr	r0, r4, #8
    7bc0:	strb	r0, [sp, #26]
    7bc4:	ldr	r4, [sp, #24]
    7bc8:	ldr	r0, [sp, #28]
    7bcc:	cmn	r4, #1
    7bd0:	biceq	r1, r0, #-2147483648	; 0x80000000
    7bd4:	cmneq	r1, #-2147483647	; 0x80000001
    7bd8:	beq	7c90 <cnxptiee+0x3ec>
    7bdc:	bic	r5, r0, #-16777216	; 0xff000000
    7be0:	orrs	r1, r0, r4
    7be4:	str	r4, [sp, #32]
    7be8:	str	r5, [sp, #36]	; 0x24
    7bec:	beq	7d44 <cnxptiee+0x4a0>
    7bf0:	mov	r1, #3
    7bf4:	tst	r0, #8388608	; 0x800000
    7bf8:	bne	7c10 <cnxptiee+0x36c>
    7bfc:	mov	r1, #2
    7c00:	tst	r0, #4194304	; 0x400000
    7c04:	moveq	r1, #1
    7c08:	tsteq	r0, #2097152	; 0x200000
    7c0c:	beq	7e70 <cnxptiee+0x5cc>
    7c10:	rsb	r2, r1, #32
    7c14:	and	r3, r0, #7
    7c18:	lsr	r5, r5, r1
    7c1c:	lsl	r2, r3, r2
    7c20:	str	r5, [sp, #36]	; 0x24
    7c24:	orr	r4, r2, r4, lsr r1
    7c28:	str	r4, [sp, #32]
    7c2c:	and	r0, r0, #-2147483648	; 0x80000000
    7c30:	bic	r2, r5, #1048576	; 0x100000
    7c34:	movw	r3, #3836	; 0xefc
    7c38:	orr	r0, r2, r0
    7c3c:	and	r2, r6, #127	; 0x7f
    7c40:	lsr	r6, r5, #8
    7c44:	add	r2, r3, r2, lsl #2
    7c48:	orr	r1, r1, r2
    7c4c:	movw	r2, #0
    7c50:	movt	r2, #16368	; 0x3ff0
    7c54:	add	r1, r2, r1, lsl #20
    7c58:	orr	r7, r0, r1
    7c5c:	lsr	r0, r4, #16
    7c60:	str	r0, [sp, #12]
    7c64:	lsr	r0, r4, #8
    7c68:	lsr	sl, r7, #16
    7c6c:	str	r7, [sp, #36]	; 0x24
    7c70:	str	r0, [sp, #8]
    7c74:	lsr	r0, r4, #24
    7c78:	b	7cd4 <cnxptiee+0x430>
    7c7c:	ldr	r0, [r5]
    7c80:	ldr	r1, [r5, #4]
    7c84:	str	r1, [r8, #4]
    7c88:	str	r0, [r8]
    7c8c:	b	7d44 <cnxptiee+0x4a0>
    7c90:	mov	r1, #0
    7c94:	and	r0, r0, #-2147483648	; 0x80000000
    7c98:	mov	r2, #0
    7c9c:	mov	sl, #240	; 0xf0
    7ca0:	mov	r6, #0
    7ca4:	mov	r4, #0
    7ca8:	mov	r5, #0
    7cac:	str	r1, [sp, #12]
    7cb0:	movw	r1, #0
    7cb4:	str	r2, [sp, #32]
    7cb8:	movt	r1, #16368	; 0x3ff0
    7cbc:	add	r1, r1, #1073741824	; 0x40000000
    7cc0:	orr	r7, r0, r1
    7cc4:	mov	r0, #0
    7cc8:	str	r0, [sp, #8]
    7ccc:	mov	r0, #0
    7cd0:	str	r7, [sp, #36]	; 0x24
    7cd4:	str	r0, [sp, #4]
    7cd8:	bl	48b0 <machine_is_little_endian@plt>
    7cdc:	cmp	r0, #0
    7ce0:	beq	7cfc <cnxptiee+0x458>
    7ce4:	lsr	r0, r7, #24
    7ce8:	strb	r5, [sp, #39]	; 0x27
    7cec:	strb	sl, [sp, #37]	; 0x25
    7cf0:	strb	r6, [sp, #38]	; 0x26
    7cf4:	strb	r0, [sp, #36]	; 0x24
    7cf8:	ldr	r7, [sp, #36]	; 0x24
    7cfc:	str	r7, [r8]
    7d00:	bl	48b0 <machine_is_little_endian@plt>
    7d04:	cmp	r0, #0
    7d08:	beq	7d2c <cnxptiee+0x488>
    7d0c:	ldr	r0, [sp, #4]
    7d10:	strb	r4, [sp, #35]	; 0x23
    7d14:	strb	r0, [sp, #32]
    7d18:	ldr	r0, [sp, #12]
    7d1c:	strb	r0, [sp, #33]	; 0x21
    7d20:	ldr	r0, [sp, #8]
    7d24:	strb	r0, [sp, #34]	; 0x22
    7d28:	ldr	r4, [sp, #32]
    7d2c:	str	r4, [r8, #4]
    7d30:	b	7d44 <cnxptiee+0x4a0>
    7d34:	movw	r0, #65535	; 0xffff
    7d38:	strh	r0, [r8]
    7d3c:	mvn	r0, r6
    7d40:	strb	r0, [r8, #2]
    7d44:	mov	r0, #0
    7d48:	cmp	r9, #3
    7d4c:	bne	7d8c <cnxptiee+0x4e8>
    7d50:	ldr	r0, [r8]
    7d54:	ldr	r1, [r8, #4]
    7d58:	mvn	r2, #7
    7d5c:	mov	r3, #0
    7d60:	str	r1, [sp, #20]
    7d64:	str	r0, [sp, #16]
    7d68:	mov	r0, #0
    7d6c:	add	r1, sp, #16
    7d70:	vld1.8	{d16}, [r1], r2
    7d74:	add	r7, r8, r3
    7d78:	add	r3, r3, #8
    7d7c:	cmp	r3, #8
    7d80:	vrev64.8	d16, d16
    7d84:	vst1.8	{d16}, [r7]
    7d88:	bne	7d70 <cnxptiee+0x4cc>
    7d8c:	sub	sp, fp, #28
    7d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7d94:	mvn	r0, sl
    7d98:	cmp	sl, #45	; 0x2d
    7d9c:	movweq	r0, #109	; 0x6d
    7da0:	b	7dec <cnxptiee+0x548>
    7da4:	str	r6, [sp, #4]
    7da8:	mov	r6, r3
    7dac:	str	r3, [sp, #8]
    7db0:	mov	r3, ip
    7db4:	str	ip, [sp, #12]
    7db8:	mov	sl, r5
    7dbc:	b	7e10 <cnxptiee+0x56c>
    7dc0:	lsr	r0, r0, #3
    7dc4:	cmp	r0, #159	; 0x9f
    7dc8:	bcc	7df4 <cnxptiee+0x550>
    7dcc:	mov	r0, #255	; 0xff
    7dd0:	strb	r0, [r8, #7]
    7dd4:	movw	r0, #65535	; 0xffff
    7dd8:	strh	r0, [r8, #5]
    7ddc:	mvn	r0, #0
    7de0:	str	r0, [r8, #1]
    7de4:	mov	r0, #127	; 0x7f
    7de8:	orr	r0, r0, r7, lsr #24
    7dec:	strb	r0, [r8]
    7df0:	b	79c8 <cnxptiee+0x124>
    7df4:	lsr	r9, sl, #24
    7df8:	mov	r7, r5
    7dfc:	str	r6, [sp, #4]
    7e00:	mov	r6, r3
    7e04:	str	r3, [sp, #8]
    7e08:	mov	r3, ip
    7e0c:	str	ip, [sp, #12]
    7e10:	bl	48b0 <machine_is_little_endian@plt>
    7e14:	cmp	r0, #0
    7e18:	beq	7e38 <cnxptiee+0x594>
    7e1c:	lsr	r0, r5, #16
    7e20:	strb	r7, [sp, #43]	; 0x2b
    7e24:	strb	r9, [sp, #40]	; 0x28
    7e28:	strb	r0, [sp, #41]	; 0x29
    7e2c:	lsr	r0, r7, #8
    7e30:	strb	r0, [sp, #42]	; 0x2a
    7e34:	ldr	sl, [sp, #40]	; 0x28
    7e38:	str	sl, [r8]
    7e3c:	bl	48b0 <machine_is_little_endian@plt>
    7e40:	cmp	r0, #0
    7e44:	beq	7e68 <cnxptiee+0x5c4>
    7e48:	ldr	r0, [sp, #4]
    7e4c:	strb	r4, [sp, #39]	; 0x27
    7e50:	strb	r0, [sp, #36]	; 0x24
    7e54:	ldr	r0, [sp, #12]
    7e58:	strb	r0, [sp, #37]	; 0x25
    7e5c:	ldr	r0, [sp, #8]
    7e60:	strb	r0, [sp, #38]	; 0x26
    7e64:	ldr	r4, [sp, #36]	; 0x24
    7e68:	str	r4, [r8, #4]
    7e6c:	b	79c8 <cnxptiee+0x124>
    7e70:	mov	r1, #0
    7e74:	b	7c2c <cnxptiee+0x388>
    7e78:	.word	0x0003ca24
    7e7c:	.word	0x0003ca38
    7e80:	.word	0x0003c98c
    7e84:	.word	0x0003c9a0

00007e88 <get_native>:
    7e88:	push	{r4, r5, r6, sl, fp, lr}
    7e8c:	add	fp, sp, #16
    7e90:	ldr	r5, [pc, #68]	; 7edc <get_native+0x54>
    7e94:	ldr	r6, [pc, #68]	; 7ee0 <get_native+0x58>
    7e98:	mov	r4, #0
    7e9c:	add	r5, pc, r5
    7ea0:	add	r6, pc, r6
    7ea4:	cmp	r4, #2
    7ea8:	bhi	7ed0 <get_native+0x48>
    7eac:	mov	r0, r6
    7eb0:	mov	r1, r5
    7eb4:	mov	r2, #8
    7eb8:	bl	4988 <memcmp@plt>
    7ebc:	add	r5, r5, #8
    7ec0:	add	r4, r4, #1
    7ec4:	cmp	r0, #0
    7ec8:	bne	7ea4 <get_native+0x1c>
    7ecc:	b	7ed4 <get_native+0x4c>
    7ed0:	mvn	r4, #0
    7ed4:	mov	r0, r4
    7ed8:	pop	{r4, r5, r6, sl, fp, pc}
    7edc:	.word	0x0003c45c
    7ee0:	.word	0x0003c470
    7ee4:	.word	0x00000000

00007ee8 <sas_read8>:
    7ee8:	mov	r2, r1
    7eec:	mov	r1, r0
    7ef0:	ldr	r0, [r0]
    7ef4:	ldr	r1, [r1, #4]
    7ef8:	cmp	r2, #0
    7efc:	bxeq	lr
    7f00:	b	479c <byteswap8@plt>

00007f04 <sas_read4>:
    7f04:	ldr	r0, [r0]
    7f08:	cmp	r1, #0
    7f0c:	bxeq	lr
    7f10:	b	47b4 <byteswap4@plt>

00007f14 <sas_read2>:
    7f14:	ldrh	r0, [r0]
    7f18:	cmp	r1, #0
    7f1c:	bxeq	lr
    7f20:	b	48a4 <byteswap2@plt>

00007f24 <sas_subheader_remainder>:
    7f24:	sub	r0, r0, r1, lsl #1
    7f28:	sub	r0, r0, #4
    7f2c:	bx	lr

00007f30 <sas_read_header>:
    7f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7f34:	add	fp, sp, #28
    7f38:	sub	sp, sp, #4
    7f3c:	vpush	{d8-d9}
    7f40:	sub	sp, sp, #392	; 0x188
    7f44:	sub	sp, sp, #1024	; 0x400
    7f48:	mov	r6, r0
    7f4c:	add	r0, sp, #56	; 0x38
    7f50:	mov	sl, r1
    7f54:	vmov.i32	q8, #0	; 0x00000000
    7f58:	mov	r5, r2
    7f5c:	mov	r7, r3
    7f60:	add	r1, r0, #16
    7f64:	mov	r2, r0
    7f68:	vst1.64	{d16-d17}, [r1]
    7f6c:	add	r1, r0, #28
    7f70:	vst1.32	{d16-d17}, [r1]
    7f74:	mov	r1, #20
    7f78:	vst1.64	{d16-d17}, [r2], r1
    7f7c:	mov	r1, #60	; 0x3c
    7f80:	str	r1, [r2]
    7f84:	mov	r1, #1
    7f88:	str	r1, [sp, #68]	; 0x44
    7f8c:	bl	4850 <mktime@plt>
    7f90:	ldr	r3, [r6, #12]
    7f94:	ldr	r2, [r6, #20]
    7f98:	mov	r4, r0
    7f9c:	sub	r0, fp, #216	; 0xd8
    7fa0:	mov	r1, #164	; 0xa4
    7fa4:	blx	r3
    7fa8:	cmp	r0, #164	; 0xa4
    7fac:	bcs	7fb8 <sas_read_header+0x88>
    7fb0:	mov	r5, #2
    7fb4:	b	8498 <sas_read_header+0x568>
    7fb8:	str	r5, [sp, #16]
    7fbc:	sub	r9, fp, #216	; 0xd8
    7fc0:	mov	r2, #32
    7fc4:	ldr	r1, [pc, #1300]	; 84e0 <sas_read_header+0x5b0>
    7fc8:	mov	r0, r9
    7fcc:	ldr	r1, [pc, r1]
    7fd0:	bl	4988 <memcmp@plt>
    7fd4:	cmp	r0, #0
    7fd8:	beq	7ffc <sas_read_header+0xcc>
    7fdc:	ldr	r1, [pc, #1280]	; 84e4 <sas_read_header+0x5b4>
    7fe0:	sub	r0, fp, #216	; 0xd8
    7fe4:	mov	r2, #32
    7fe8:	ldr	r1, [pc, r1]
    7fec:	bl	4988 <memcmp@plt>
    7ff0:	mov	r5, #5
    7ff4:	cmp	r0, #0
    7ff8:	bne	8498 <sas_read_header+0x568>
    7ffc:	ldrb	r0, [fp, #-181]	; 0xffffff4b
    8000:	mov	r5, #5
    8004:	cmp	r0, #51	; 0x33
    8008:	moveq	r0, #4
    800c:	streq	r0, [sl, #24]
    8010:	ldrb	r0, [fp, #-184]	; 0xffffff48
    8014:	cmp	r0, #51	; 0x33
    8018:	moveq	r0, #1
    801c:	streq	r0, [sl, #4]
    8020:	ldrb	r0, [fp, #-179]	; 0xffffff4d
    8024:	cmp	r0, #1
    8028:	beq	8040 <sas_read_header+0x110>
    802c:	cmp	r0, #0
    8030:	bne	8498 <sas_read_header+0x568>
    8034:	mov	r8, #0
    8038:	bl	48b0 <machine_is_little_endian@plt>
    803c:	b	8050 <sas_read_header+0x120>
    8040:	bl	48b0 <machine_is_little_endian@plt>
    8044:	clz	r0, r0
    8048:	mov	r8, #1
    804c:	lsr	r0, r0, #5
    8050:	str	r0, [sp, #12]
    8054:	str	r8, [sl]
    8058:	mov	r1, #0
    805c:	mov	r8, r7
    8060:	ldr	r0, [pc, #1152]	; 84e8 <sas_read_header+0x5b8>
    8064:	ldrb	r3, [fp, #-146]	; 0xffffff6e
    8068:	add	r0, pc, r0
    806c:	add	r0, r0, #4
    8070:	ldr	r2, [r0, #-4]
    8074:	cmp	r2, r3
    8078:	beq	80d0 <sas_read_header+0x1a0>
    807c:	add	r1, r1, #1
    8080:	add	r0, r0, #36	; 0x24
    8084:	cmp	r1, #62	; 0x3e
    8088:	bcc	8070 <sas_read_header+0x140>
    808c:	ldr	r0, [sl, #144]	; 0x90
    8090:	cmp	r0, #0
    8094:	bne	80d4 <sas_read_header+0x1a4>
    8098:	ldr	r6, [sp, #16]
    809c:	mov	r5, #7
    80a0:	cmp	r6, #0
    80a4:	beq	8498 <sas_read_header+0x568>
    80a8:	ldr	r2, [pc, #1084]	; 84ec <sas_read_header+0x5bc>
    80ac:	add	r4, sp, #104	; 0x68
    80b0:	mov	r1, #1024	; 0x400
    80b4:	mov	r0, r4
    80b8:	add	r2, pc, r2
    80bc:	bl	4c4c <snprintf@plt>
    80c0:	mov	r0, r4
    80c4:	mov	r1, r8
    80c8:	blx	r6
    80cc:	b	8498 <sas_read_header+0x568>
    80d0:	str	r0, [sl, #144]	; 0x90
    80d4:	add	r0, sl, #80	; 0x50
    80d8:	add	r1, r9, #92	; 0x5c
    80dc:	mov	r2, #64	; 0x40
    80e0:	bl	4910 <memcpy@plt>
    80e4:	ldr	r0, [sl, #24]
    80e8:	ldr	r3, [r6, #8]
    80ec:	ldr	r2, [r6, #20]
    80f0:	mov	r1, #1
    80f4:	blx	r3
    80f8:	cmn	r0, #1
    80fc:	beq	8494 <sas_read_header+0x564>
    8100:	ldr	r3, [r6, #12]
    8104:	ldr	r2, [r6, #20]
    8108:	add	r0, sp, #48	; 0x30
    810c:	mov	r1, #8
    8110:	blx	r3
    8114:	cmp	r0, #8
    8118:	bcc	7fb0 <sas_read_header+0x80>
    811c:	ldr	r7, [sp, #12]
    8120:	cmp	r7, #0
    8124:	beq	8134 <sas_read_header+0x204>
    8128:	vldr	d0, [sp, #48]	; 0x30
    812c:	bl	4ec8 <byteswap_double@plt>
    8130:	vstr	d0, [sp, #48]	; 0x30
    8134:	ldr	r3, [r6, #12]
    8138:	ldr	r2, [r6, #20]
    813c:	add	r0, sp, #40	; 0x28
    8140:	mov	r1, #8
    8144:	blx	r3
    8148:	cmp	r0, #8
    814c:	bcc	7fb0 <sas_read_header+0x80>
    8150:	cmp	r7, #0
    8154:	beq	8164 <sas_read_header+0x234>
    8158:	vldr	d0, [sp, #40]	; 0x28
    815c:	bl	4ec8 <byteswap_double@plt>
    8160:	vstr	d0, [sp, #40]	; 0x28
    8164:	vldr	d16, [sp, #48]	; 0x30
    8168:	vmov	s0, r4
    816c:	vcvt.f64.s32	d9, s0
    8170:	vadd.f64	d8, d16, d9
    8174:	vmov.f64	d0, d8
    8178:	bl	4d00 <__isnan@plt>
    817c:	cmp	r0, #0
    8180:	mov	r4, #0
    8184:	mov	r0, #0
    8188:	bne	81b8 <sas_read_header+0x288>
    818c:	vldr	d16, [pc, #796]	; 84b0 <sas_read_header+0x580>
    8190:	mvn	r0, #-2147483648	; 0x80000000
    8194:	vcmpe.f64	d8, d16
    8198:	vmrs	APSR_nzcv, fpscr
    819c:	bgt	81b8 <sas_read_header+0x288>
    81a0:	vldr	d16, [pc, #784]	; 84b8 <sas_read_header+0x588>
    81a4:	mov	r0, #-2147483648	; 0x80000000
    81a8:	vcmpe.f64	d8, d16
    81ac:	vmrs	APSR_nzcv, fpscr
    81b0:	vcvtpl.s32.f64	s0, d8
    81b4:	vmovpl	r0, s0
    81b8:	str	r0, [sl, #72]	; 0x48
    81bc:	vldr	d16, [sp, #40]	; 0x28
    81c0:	vadd.f64	d8, d16, d9
    81c4:	vmov.f64	d0, d8
    81c8:	bl	4d00 <__isnan@plt>
    81cc:	cmp	r0, #0
    81d0:	bne	8200 <sas_read_header+0x2d0>
    81d4:	vldr	d16, [pc, #724]	; 84b0 <sas_read_header+0x580>
    81d8:	mvn	r4, #-2147483648	; 0x80000000
    81dc:	vcmpe.f64	d8, d16
    81e0:	vmrs	APSR_nzcv, fpscr
    81e4:	bgt	8200 <sas_read_header+0x2d0>
    81e8:	vldr	d16, [pc, #712]	; 84b8 <sas_read_header+0x588>
    81ec:	mov	r4, #-2147483648	; 0x80000000
    81f0:	vcmpe.f64	d8, d16
    81f4:	vmrs	APSR_nzcv, fpscr
    81f8:	vcvtpl.s32.f64	s0, d8
    81fc:	vmovpl	r4, s0
    8200:	str	r4, [sl, #76]	; 0x4c
    8204:	mov	r0, #16
    8208:	mov	r1, #1
    820c:	ldr	r3, [r6, #8]
    8210:	ldr	r2, [r6, #20]
    8214:	blx	r3
    8218:	cmn	r0, #1
    821c:	beq	8494 <sas_read_header+0x564>
    8220:	ldr	r3, [r6, #12]
    8224:	ldr	r2, [r6, #20]
    8228:	add	r0, sp, #36	; 0x24
    822c:	mov	r1, #4
    8230:	blx	r3
    8234:	cmp	r0, #4
    8238:	bcc	7fb0 <sas_read_header+0x80>
    823c:	ldr	r3, [r6, #12]
    8240:	ldr	r2, [r6, #20]
    8244:	add	r0, sp, #32
    8248:	mov	r1, #4
    824c:	blx	r3
    8250:	cmp	r0, #4
    8254:	bcc	7fb0 <sas_read_header+0x80>
    8258:	ldr	r0, [sp, #36]	; 0x24
    825c:	cmp	r7, #0
    8260:	beq	828c <sas_read_header+0x35c>
    8264:	bl	47b4 <byteswap4@plt>
    8268:	mov	r4, sl
    826c:	str	r0, [r4, #64]!	; 0x40
    8270:	mov	r0, #0
    8274:	str	r0, [r4, #4]
    8278:	ldr	r0, [sp, #32]
    827c:	bl	47b4 <byteswap4@plt>
    8280:	mov	r2, r0
    8284:	ldrd	r0, [r4]
    8288:	b	82a0 <sas_read_header+0x370>
    828c:	mov	r4, sl
    8290:	mov	r1, #0
    8294:	str	r0, [r4, #64]!	; 0x40
    8298:	str	r1, [r4, #4]
    829c:	ldr	r2, [sp, #32]
    82a0:	mov	r3, #0
    82a4:	cmp	r2, #1024	; 0x400
    82a8:	strd	r2, [sl, #32]
    82ac:	bcc	8498 <sas_read_header+0x568>
    82b0:	subs	r3, r0, #1024	; 0x400
    82b4:	sbcs	r3, r1, #0
    82b8:	blt	8498 <sas_read_header+0x568>
    82bc:	cmp	r2, #16777216	; 0x1000000
    82c0:	bhi	8498 <sas_read_header+0x568>
    82c4:	rsbs	r0, r0, #1048576	; 0x100000
    82c8:	rscs	r0, r1, #0
    82cc:	blt	8498 <sas_read_header+0x568>
    82d0:	ldr	r1, [sl, #4]
    82d4:	add	r0, sl, #40	; 0x28
    82d8:	cmp	r1, #0
    82dc:	beq	8320 <sas_read_header+0x3f0>
    82e0:	add	r1, pc, #472	; 0x1d8
    82e4:	vld1.64	{d16-d17}, [r1]
    82e8:	mov	r1, #8
    82ec:	vst1.64	{d16-d17}, [r0]
    82f0:	add	r0, sp, #104	; 0x68
    82f4:	ldr	r3, [r6, #12]
    82f8:	ldr	r2, [r6, #20]
    82fc:	blx	r3
    8300:	cmp	r0, #8
    8304:	bcc	7fb0 <sas_read_header+0x80>
    8308:	ldr	r0, [sp, #104]	; 0x68
    830c:	ldr	r1, [sp, #108]	; 0x6c
    8310:	cmp	r7, #0
    8314:	beq	835c <sas_read_header+0x42c>
    8318:	bl	479c <byteswap8@plt>
    831c:	b	835c <sas_read_header+0x42c>
    8320:	add	r1, pc, #424	; 0x1a8
    8324:	vld1.64	{d16-d17}, [r1]
    8328:	mov	r1, #4
    832c:	vst1.64	{d16-d17}, [r0]
    8330:	add	r0, sp, #104	; 0x68
    8334:	ldr	r3, [r6, #12]
    8338:	ldr	r2, [r6, #20]
    833c:	blx	r3
    8340:	cmp	r0, #4
    8344:	bcc	7fb0 <sas_read_header+0x80>
    8348:	ldr	r0, [sp, #104]	; 0x68
    834c:	cmp	r7, #0
    8350:	beq	8358 <sas_read_header+0x428>
    8354:	bl	47b4 <byteswap4@plt>
    8358:	mov	r1, #0
    835c:	strd	r0, [sl, #56]	; 0x38
    8360:	rsbs	r0, r0, #16777216	; 0x1000000
    8364:	rscs	r0, r1, #0
    8368:	blt	8498 <sas_read_header+0x568>
    836c:	ldr	r3, [r6, #8]
    8370:	ldr	r2, [r6, #20]
    8374:	mov	r0, #8
    8378:	mov	r1, #1
    837c:	blx	r3
    8380:	cmn	r0, #1
    8384:	beq	8460 <sas_read_header+0x530>
    8388:	ldr	r3, [r6, #12]
    838c:	ldr	r2, [r6, #20]
    8390:	sub	r0, fp, #336	; 0x150
    8394:	mov	r1, #120	; 0x78
    8398:	blx	r3
    839c:	cmp	r0, #120	; 0x78
    83a0:	mov	r5, #2
    83a4:	bcc	8498 <sas_read_header+0x568>
    83a8:	add	r0, sp, #20
    83ac:	add	r2, sp, #28
    83b0:	add	r3, sp, #24
    83b4:	str	r0, [sp]
    83b8:	sub	r0, fp, #336	; 0x150
    83bc:	ldr	r1, [pc, #304]	; 84f4 <sas_read_header+0x5c4>
    83c0:	add	r1, pc, r1
    83c4:	bl	4c58 <__isoc99_sscanf@plt>
    83c8:	cmp	r0, #3
    83cc:	mov	r5, #5
    83d0:	bne	8498 <sas_read_header+0x568>
    83d4:	ldr	r0, [sp, #28]
    83d8:	ldr	r1, [sp, #24]
    83dc:	ldr	r2, [sp, #20]
    83e0:	orr	r5, r0, #1
    83e4:	orr	r3, r2, r1
    83e8:	eor	r5, r5, #9
    83ec:	orrs	r3, r5, r3
    83f0:	mov	r5, #0
    83f4:	movwne	r3, #1
    83f8:	str	r3, [sl, #8]
    83fc:	add	r3, sl, #12
    8400:	stm	r3, {r0, r1, r2}
    8404:	mov	r1, #0
    8408:	ldr	r0, [r4]
    840c:	ldr	r3, [r6, #8]
    8410:	ldr	r2, [r6, #20]
    8414:	blx	r3
    8418:	cmn	r0, #1
    841c:	bne	8498 <sas_read_header+0x568>
    8420:	ldr	r0, [sp, #16]
    8424:	cmp	r0, #0
    8428:	beq	8494 <sas_read_header+0x564>
    842c:	ldrd	r0, [r4]
    8430:	add	r4, sp, #104	; 0x68
    8434:	stm	sp, {r0, r1}
    8438:	mov	r0, r4
    843c:	mov	r1, #1024	; 0x400
    8440:	ldr	r2, [pc, #176]	; 84f8 <sas_read_header+0x5c8>
    8444:	add	r2, pc, r2
    8448:	bl	4c4c <snprintf@plt>
    844c:	ldr	r2, [sp, #16]
    8450:	mov	r0, r4
    8454:	mov	r1, r8
    8458:	blx	r2
    845c:	b	8494 <sas_read_header+0x564>
    8460:	ldr	r5, [sp, #16]
    8464:	cmp	r5, #0
    8468:	beq	8494 <sas_read_header+0x564>
    846c:	ldr	r2, [pc, #124]	; 84f0 <sas_read_header+0x5c0>
    8470:	add	r4, sp, #104	; 0x68
    8474:	mov	r1, #1024	; 0x400
    8478:	mov	r3, #8
    847c:	mov	r0, r4
    8480:	add	r2, pc, r2
    8484:	bl	4c4c <snprintf@plt>
    8488:	mov	r0, r4
    848c:	mov	r1, r8
    8490:	blx	r5
    8494:	mov	r5, #15
    8498:	mov	r0, r5
    849c:	sub	sp, fp, #48	; 0x30
    84a0:	vpop	{d8-d9}
    84a4:	add	sp, sp, #4
    84a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    84ac:	nop	{0}
    84b0:	.word	0xffc00000
    84b4:	.word	0x41dfffff
    84b8:	.word	0x00000000
    84bc:	.word	0xc1e00000
    84c0:	.word	0x00000028
    84c4:	.word	0x00000000
    84c8:	.word	0x00000018
    84cc:	.word	0x00000000
    84d0:	.word	0x00000018
    84d4:	.word	0x00000000
    84d8:	.word	0x0000000c
    84dc:	.word	0x00000000
    84e0:	.word	0x0003c300
    84e4:	.word	0x0003c2b4
    84e8:	.word	0x0003c2f0
    84ec:	.word	0x0001c108
    84f0:	.word	0x0001bd63
    84f4:	.word	0x0001be4a
    84f8:	.word	0x0001bdd3

000084fc <sas_write_header>:
    84fc:	sub	sp, sp, #8
    8500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8504:	add	fp, sp, #28
    8508:	sub	sp, sp, #228	; 0xe4
    850c:	mov	sl, r0
    8510:	sub	r0, fp, #80	; 0x50
    8514:	mov	r8, r1
    8518:	vmov.i32	q8, #0	; 0x00000000
    851c:	str	r2, [fp, #8]
    8520:	str	r3, [fp, #12]
    8524:	add	r1, r0, #16
    8528:	mov	r2, r0
    852c:	vst1.64	{d16-d17}, [r1]
    8530:	add	r1, r0, #28
    8534:	vst1.32	{d16-d17}, [r1]
    8538:	mov	r1, #20
    853c:	vst1.64	{d16-d17}, [r2], r1
    8540:	mov	r1, #60	; 0x3c
    8544:	str	r1, [r2]
    8548:	mov	r1, #1
    854c:	str	r1, [fp, #-68]	; 0xffffffbc
    8550:	bl	4850 <mktime@plt>
    8554:	add	r7, fp, #8
    8558:	mov	r9, r0
    855c:	mov	r1, #32
    8560:	mov	r2, #64	; 0x40
    8564:	mov	r6, #64	; 0x40
    8568:	add	r5, r7, #92	; 0x5c
    856c:	mov	r0, r5
    8570:	bl	4c70 <memset@plt>
    8574:	add	r4, sl, #88	; 0x58
    8578:	mov	r0, r4
    857c:	bl	4bd4 <strlen@plt>
    8580:	cmp	r0, #64	; 0x40
    8584:	movcc	r6, r0
    8588:	cmp	r6, #0
    858c:	beq	85a4 <sas_write_header+0xa8>
    8590:	mov	r0, r5
    8594:	mov	r1, r4
    8598:	mov	r2, r6
    859c:	bl	4910 <memcpy@plt>
    85a0:	b	85c4 <sas_write_header+0xc8>
    85a4:	ldr	r0, [pc, #504]	; 87a4 <sas_write_header+0x2a8>
    85a8:	add	r0, pc, r0
    85ac:	ldm	r0!, {r1}
    85b0:	stmia	r5!, {r1}
    85b4:	ldrh	r1, [r0]
    85b8:	ldrb	r0, [r0, #2]
    85bc:	strb	r0, [r5, #2]
    85c0:	strh	r1, [r5]
    85c4:	mov	r0, sl
    85c8:	mov	r1, r7
    85cc:	mov	r2, #164	; 0xa4
    85d0:	bl	4e20 <readstat_write_bytes@plt>
    85d4:	cmp	r0, #0
    85d8:	bne	8794 <sas_write_header+0x298>
    85dc:	ldr	r1, [r8, #24]
    85e0:	mov	r0, sl
    85e4:	bl	4a0c <readstat_write_zeros@plt>
    85e8:	cmp	r0, #0
    85ec:	bne	8794 <sas_write_header+0x298>
    85f0:	ldr	r0, [r8, #72]	; 0x48
    85f4:	sub	r1, fp, #88	; 0x58
    85f8:	mov	r2, #8
    85fc:	sub	r0, r0, r9
    8600:	vmov	s0, r0
    8604:	mov	r0, sl
    8608:	vcvt.f64.s32	d16, s0
    860c:	vstr	d16, [fp, #-88]	; 0xffffffa8
    8610:	bl	4e20 <readstat_write_bytes@plt>
    8614:	cmp	r0, #0
    8618:	bne	8794 <sas_write_header+0x298>
    861c:	ldr	r0, [r8, #76]	; 0x4c
    8620:	sub	r1, fp, #96	; 0x60
    8624:	mov	r2, #8
    8628:	sub	r0, r0, r9
    862c:	vmov	s0, r0
    8630:	mov	r0, sl
    8634:	vcvt.f64.s32	d16, s0
    8638:	vstr	d16, [fp, #-96]	; 0xffffffa0
    863c:	bl	4e20 <readstat_write_bytes@plt>
    8640:	cmp	r0, #0
    8644:	bne	8794 <sas_write_header+0x298>
    8648:	mov	r0, sl
    864c:	mov	r1, #16
    8650:	bl	4a0c <readstat_write_zeros@plt>
    8654:	cmp	r0, #0
    8658:	bne	8794 <sas_write_header+0x298>
    865c:	mov	r4, r8
    8660:	sub	r1, fp, #100	; 0x64
    8664:	mov	r2, #4
    8668:	ldr	r0, [r4, #64]!	; 0x40
    866c:	str	r0, [fp, #-100]	; 0xffffff9c
    8670:	ldr	r0, [r4, #-32]	; 0xffffffe0
    8674:	str	r0, [fp, #-104]	; 0xffffff98
    8678:	mov	r0, sl
    867c:	bl	4e20 <readstat_write_bytes@plt>
    8680:	cmp	r0, #0
    8684:	bne	8794 <sas_write_header+0x298>
    8688:	sub	r1, fp, #104	; 0x68
    868c:	mov	r0, sl
    8690:	mov	r2, #4
    8694:	bl	4e20 <readstat_write_bytes@plt>
    8698:	cmp	r0, #0
    869c:	bne	8794 <sas_write_header+0x298>
    86a0:	ldr	r0, [r8, #4]
    86a4:	cmp	r0, #0
    86a8:	beq	86c4 <sas_write_header+0x1c8>
    86ac:	ldrd	r0, [r8, #56]	; 0x38
    86b0:	mov	r2, #8
    86b4:	str	r1, [fp, #-108]	; 0xffffff94
    86b8:	str	r0, [fp, #-112]	; 0xffffff90
    86bc:	sub	r1, fp, #112	; 0x70
    86c0:	b	86d4 <sas_write_header+0x1d8>
    86c4:	ldr	r0, [r8, #56]	; 0x38
    86c8:	sub	r1, fp, #112	; 0x70
    86cc:	mov	r2, #4
    86d0:	str	r0, [fp, #-112]	; 0xffffff90
    86d4:	mov	r0, sl
    86d8:	bl	4e20 <readstat_write_bytes@plt>
    86dc:	cmp	r0, #0
    86e0:	bne	8794 <sas_write_header+0x298>
    86e4:	mov	r0, sl
    86e8:	mov	r1, #8
    86ec:	bl	4a0c <readstat_write_zeros@plt>
    86f0:	cmp	r0, #0
    86f4:	bne	8794 <sas_write_header+0x298>
    86f8:	ldr	r1, [pc, #168]	; 87a8 <sas_write_header+0x2ac>
    86fc:	add	r5, sp, #24
    8700:	mov	r2, #120	; 0x78
    8704:	mov	r0, r5
    8708:	add	r1, pc, r1
    870c:	bl	4910 <memcpy@plt>
    8710:	mov	r0, #0
    8714:	mov	r1, #101	; 0x65
    8718:	strb	r0, [sp, #16]
    871c:	str	r0, [sp, #12]
    8720:	str	r0, [sp, #8]
    8724:	ldr	r0, [sl, #8]
    8728:	str	r1, [sp]
    872c:	movw	r1, #52429	; 0xcccd
    8730:	movt	r1, #52428	; 0xcccc
    8734:	umull	r1, r2, r0, r1
    8738:	lsr	r1, r2, #3
    873c:	ldr	r2, [pc, #104]	; 87ac <sas_write_header+0x2b0>
    8740:	add	r1, r1, r1, lsl #2
    8744:	sub	r3, r0, r1, lsl #1
    8748:	add	r0, sp, #8
    874c:	mov	r1, #9
    8750:	add	r2, pc, r2
    8754:	bl	4c4c <snprintf@plt>
    8758:	ldr	r0, [sp, #8]
    875c:	ldr	r1, [sp, #12]
    8760:	mov	r2, #120	; 0x78
    8764:	str	r1, [sp, #28]
    8768:	str	r0, [sp, #24]
    876c:	mov	r0, sl
    8770:	mov	r1, r5
    8774:	bl	4e20 <readstat_write_bytes@plt>
    8778:	cmp	r0, #0
    877c:	bne	8794 <sas_write_header+0x298>
    8780:	ldr	r0, [sl, #4]
    8784:	ldr	r1, [r4]
    8788:	sub	r1, r1, r0
    878c:	mov	r0, sl
    8790:	bl	4a0c <readstat_write_zeros@plt>
    8794:	sub	sp, fp, #28
    8798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    879c:	add	sp, sp, #8
    87a0:	bx	lr
    87a4:	.word	0x0001bcd0
    87a8:	.word	0x0001bb78
    87ac:	.word	0x0001baf1

000087b0 <sas_header_info_init>:
    87b0:	push	{r4, r5, r6, r7, fp, lr}
    87b4:	add	fp, sp, #16
    87b8:	mov	r4, r1
    87bc:	mov	r5, r0
    87c0:	mov	r0, #1
    87c4:	mov	r1, #152	; 0x98
    87c8:	bl	4778 <calloc@plt>
    87cc:	add	r2, pc, #116	; 0x74
    87d0:	cmp	r4, #0
    87d4:	mov	r1, r4
    87d8:	vmov.i32	q10, #0	; 0x00000000
    87dc:	mov	r7, #0
    87e0:	mov	r6, #4096	; 0x1000
    87e4:	vld1.64	{d18-d19}, [r2]
    87e8:	movwne	r1, #1
    87ec:	ldr	r2, [r5, #20]
    87f0:	add	r3, pc, #96	; 0x60
    87f4:	add	r5, pc, #108	; 0x6c
    87f8:	strd	r6, [r0, #32]
    87fc:	cmp	r4, #0
    8800:	vdup.32	d16, r1
    8804:	vld1.64	{d22-d23}, [r3]
    8808:	str	r1, [r0, #4]
    880c:	mov	r1, #1024	; 0x400
    8810:	str	r7, [r0, #68]	; 0x44
    8814:	vmovl.u32	q8, d16
    8818:	movwne	r1, #8192	; 0x2000
    881c:	vshl.s64	q8, q8, #63	; 0x3f
    8820:	str	r1, [r0, #64]	; 0x40
    8824:	add	r1, r0, #40	; 0x28
    8828:	vsub.i64	q9, q10, q9
    882c:	vld1.64	{d20-d21}, [r5]
    8830:	str	r2, [r0, #72]	; 0x48
    8834:	str	r2, [r0, #76]	; 0x4c
    8838:	vshl.s64	q8, q8, q9
    883c:	vbsl	q8, q11, q10
    8840:	vst1.64	{d16-d17}, [r1]
    8844:	pop	{r4, r5, r6, r7, fp, pc}
    8848:	.word	0x0000003f
    884c:	.word	0x00000000
    8850:	.word	0x0000003f
    8854:	.word	0x00000000
    8858:	.word	0x00000028
    885c:	.word	0x00000000
    8860:	.word	0x00000018
    8864:	.word	0x00000000
    8868:	.word	0x00000018
    886c:	.word	0x00000000
    8870:	.word	0x0000000c
    8874:	.word	0x00000000

00008878 <sas_fill_page>:
    8878:	push	{r4, r6, r7, sl, fp, lr}
    887c:	add	fp, sp, #16
    8880:	mov	r4, r0
    8884:	ldrd	r6, [r1, #32]
    8888:	ldrd	r0, [r1, #64]	; 0x40
    888c:	ldr	r2, [r4, #4]
    8890:	mov	r3, r7
    8894:	subs	r0, r2, r0
    8898:	mov	r2, r6
    889c:	rsc	r1, r1, #0
    88a0:	bl	236c8 <__aeabi_ldivmod>
    88a4:	orrs	r0, r2, r3
    88a8:	moveq	r0, #0
    88ac:	popeq	{r4, r6, r7, sl, fp, pc}
    88b0:	sub	r1, r6, r2
    88b4:	mov	r0, r4
    88b8:	pop	{r4, r6, r7, sl, fp, lr}
    88bc:	b	4a0c <readstat_write_zeros@plt>

000088c0 <sas_validate_name>:
    88c0:	push	{r4, r5, r6, sl, fp, lr}
    88c4:	add	fp, sp, #16
    88c8:	mov	r4, r1
    88cc:	mov	r5, r0
    88d0:	b	88fc <sas_validate_name+0x3c>
    88d4:	sub	r2, r1, #48	; 0x30
    88d8:	uxtb	r2, r2
    88dc:	cmp	r2, #10
    88e0:	bcc	88f8 <sas_validate_name+0x38>
    88e4:	and	r1, r1, #223	; 0xdf
    88e8:	sub	r1, r1, #65	; 0x41
    88ec:	uxtb	r1, r1
    88f0:	cmp	r1, #25
    88f4:	bhi	89d0 <sas_validate_name+0x110>
    88f8:	add	r0, r0, #1
    88fc:	ldrb	r1, [r0]
    8900:	cmp	r1, #95	; 0x5f
    8904:	beq	88f8 <sas_validate_name+0x38>
    8908:	cmp	r1, #0
    890c:	bne	88d4 <sas_validate_name+0x14>
    8910:	ldrb	r0, [r5]
    8914:	cmp	r0, #0
    8918:	beq	89d8 <sas_validate_name+0x118>
    891c:	cmp	r0, #95	; 0x5f
    8920:	beq	893c <sas_validate_name+0x7c>
    8924:	and	r0, r0, #223	; 0xdf
    8928:	mov	r6, #25
    892c:	sub	r0, r0, #65	; 0x41
    8930:	uxtb	r0, r0
    8934:	cmp	r0, #25
    8938:	bhi	89dc <sas_validate_name+0x11c>
    893c:	ldr	r1, [pc, #160]	; 89e4 <sas_validate_name+0x124>
    8940:	mov	r0, r5
    8944:	add	r1, pc, r1
    8948:	bl	4808 <strcmp@plt>
    894c:	mov	r6, #27
    8950:	cmp	r0, #0
    8954:	beq	89dc <sas_validate_name+0x11c>
    8958:	ldr	r1, [pc, #136]	; 89e8 <sas_validate_name+0x128>
    895c:	mov	r0, r5
    8960:	add	r1, pc, r1
    8964:	bl	4808 <strcmp@plt>
    8968:	cmp	r0, #0
    896c:	beq	89dc <sas_validate_name+0x11c>
    8970:	ldr	r1, [pc, #116]	; 89ec <sas_validate_name+0x12c>
    8974:	mov	r0, r5
    8978:	add	r1, pc, r1
    897c:	bl	4808 <strcmp@plt>
    8980:	cmp	r0, #0
    8984:	beq	89dc <sas_validate_name+0x11c>
    8988:	ldr	r1, [pc, #96]	; 89f0 <sas_validate_name+0x130>
    898c:	mov	r0, r5
    8990:	add	r1, pc, r1
    8994:	bl	4808 <strcmp@plt>
    8998:	cmp	r0, #0
    899c:	beq	89dc <sas_validate_name+0x11c>
    89a0:	ldr	r1, [pc, #76]	; 89f4 <sas_validate_name+0x134>
    89a4:	mov	r0, r5
    89a8:	add	r1, pc, r1
    89ac:	bl	4808 <strcmp@plt>
    89b0:	cmp	r0, #0
    89b4:	beq	89dc <sas_validate_name+0x11c>
    89b8:	mov	r0, r5
    89bc:	bl	4bd4 <strlen@plt>
    89c0:	mov	r6, #0
    89c4:	cmp	r0, r4
    89c8:	movwhi	r6, #28
    89cc:	b	89dc <sas_validate_name+0x11c>
    89d0:	mov	r6, #26
    89d4:	b	89dc <sas_validate_name+0x11c>
    89d8:	mov	r6, #38	; 0x26
    89dc:	mov	r0, r6
    89e0:	pop	{r4, r5, r6, sl, fp, pc}
    89e4:	.word	0x0001b908
    89e8:	.word	0x0001b8f0
    89ec:	.word	0x0001b8e0
    89f0:	.word	0x0001b8d2
    89f4:	.word	0x0001b8c6

000089f8 <sas_validate_variable>:
    89f8:	push	{fp, lr}
    89fc:	mov	fp, sp
    8a00:	bl	4d30 <readstat_variable_get_name@plt>
    8a04:	mov	r1, #32
    8a08:	pop	{fp, lr}
    8a0c:	b	88c0 <sas_validate_name>

00008a10 <sas_validate_tag>:
    8a10:	cmp	r0, #95	; 0x5f
    8a14:	moveq	r0, #0
    8a18:	bxeq	lr
    8a1c:	sub	r0, r0, #65	; 0x41
    8a20:	uxtb	r1, r0
    8a24:	mov	r0, #21
    8a28:	cmp	r1, #26
    8a2c:	movwcc	r0, #0
    8a30:	bx	lr

00008a34 <sas_assign_tag>:
    8a34:	mov	r2, #2
    8a38:	cmp	r1, #0
    8a3c:	beq	8a5c <sas_assign_tag+0x28>
    8a40:	cmp	r1, #1
    8a44:	beq	8a74 <sas_assign_tag+0x40>
    8a48:	cmp	r1, #28
    8a4c:	addcc	r1, r1, #63	; 0x3f
    8a50:	uxtb	r3, r1
    8a54:	cmp	r3, #95	; 0x5f
    8a58:	bne	8a64 <sas_assign_tag+0x30>
    8a5c:	mov	r1, #95	; 0x5f
    8a60:	b	8a7c <sas_assign_tag+0x48>
    8a64:	sub	r3, r1, #65	; 0x41
    8a68:	uxtb	r3, r3
    8a6c:	cmp	r3, #26
    8a70:	bcc	8a7c <sas_assign_tag+0x48>
    8a74:	mov	r2, #1
    8a78:	mov	r1, #0
    8a7c:	strb	r1, [r0, #12]
    8a80:	ldrb	r1, [r0, #13]
    8a84:	orr	r1, r1, r2
    8a88:	strb	r1, [r0, #13]
    8a8c:	bx	lr

00008a90 <readstat_parse_sas7bcat>:
    8a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8a94:	add	fp, sp, #28
    8a98:	sub	sp, sp, #404	; 0x194
    8a9c:	ldr	r8, [r0, #32]
    8aa0:	mov	r6, r1
    8aa4:	mov	r4, r0
    8aa8:	mov	r0, #1
    8aac:	mov	r1, #104	; 0x68
    8ab0:	mov	r7, r2
    8ab4:	mov	r9, #1
    8ab8:	bl	4778 <calloc@plt>
    8abc:	mov	r5, r0
    8ac0:	mov	r0, #1
    8ac4:	mov	r1, #152	; 0x98
    8ac8:	bl	4778 <calloc@plt>
    8acc:	mov	sl, r0
    8ad0:	mov	r0, #200	; 0xc8
    8ad4:	str	r0, [r5, #88]	; 0x58
    8ad8:	mov	r0, #1600	; 0x640
    8adc:	bl	4af0 <malloc@plt>
    8ae0:	str	r0, [r5, #80]	; 0x50
    8ae4:	ldr	r0, [r4, #20]
    8ae8:	ldr	r1, [r4]
    8aec:	ldr	r2, [r4, #36]	; 0x24
    8af0:	ldr	r3, [r4, #40]	; 0x28
    8af4:	str	r1, [r5]
    8af8:	stmib	r5, {r0, r7, r8}
    8afc:	str	r2, [r5, #92]	; 0x5c
    8b00:	str	r3, [r5, #96]	; 0x60
    8b04:	mov	r0, r6
    8b08:	ldr	r2, [r8]
    8b0c:	ldr	r1, [r8, #20]
    8b10:	blx	r2
    8b14:	mov	r6, #0
    8b18:	cmn	r0, #1
    8b1c:	beq	8b40 <readstat_parse_sas7bcat+0xb0>
    8b20:	ldr	r2, [r4, #24]
    8b24:	mov	r0, r8
    8b28:	mov	r1, sl
    8b2c:	mov	r3, r7
    8b30:	bl	4d6c <sas_read_header@plt>
    8b34:	cmp	r0, #0
    8b38:	beq	8bbc <readstat_parse_sas7bcat+0x12c>
    8b3c:	mov	r9, r0
    8b40:	mov	r4, #0
    8b44:	ldr	r1, [r8, #4]
    8b48:	ldr	r0, [r8, #20]
    8b4c:	blx	r1
    8b50:	cmp	r4, #0
    8b54:	beq	8b60 <readstat_parse_sas7bcat+0xd0>
    8b58:	mov	r0, r4
    8b5c:	bl	48bc <free@plt>
    8b60:	cmp	r6, #0
    8b64:	beq	8b70 <readstat_parse_sas7bcat+0xe0>
    8b68:	mov	r0, r6
    8b6c:	bl	48bc <free@plt>
    8b70:	cmp	r5, #0
    8b74:	beq	8ba0 <readstat_parse_sas7bcat+0x110>
    8b78:	ldr	r0, [r5, #100]	; 0x64
    8b7c:	cmp	r0, #0
    8b80:	beq	8b88 <readstat_parse_sas7bcat+0xf8>
    8b84:	bl	47d8 <iconv_close@plt>
    8b88:	ldr	r0, [r5, #80]	; 0x50
    8b8c:	cmp	r0, #0
    8b90:	beq	8b98 <readstat_parse_sas7bcat+0x108>
    8b94:	bl	48bc <free@plt>
    8b98:	mov	r0, r5
    8b9c:	bl	48bc <free@plt>
    8ba0:	cmp	sl, #0
    8ba4:	beq	8bb0 <readstat_parse_sas7bcat+0x120>
    8ba8:	mov	r0, sl
    8bac:	bl	48bc <free@plt>
    8bb0:	mov	r0, r9
    8bb4:	sub	sp, fp, #28
    8bb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8bbc:	ldr	r0, [sl, #4]
    8bc0:	ldr	r1, [sl, #24]
    8bc4:	str	r8, [sp, #76]	; 0x4c
    8bc8:	strd	r0, [r5, #16]
    8bcc:	bl	48b0 <machine_is_little_endian@plt>
    8bd0:	ldr	r1, [sl]
    8bd4:	add	r3, sl, #56	; 0x38
    8bd8:	mov	r8, sl
    8bdc:	add	lr, r5, #32
    8be0:	add	r9, r5, #40	; 0x28
    8be4:	eor	r0, r1, r0
    8be8:	str	r0, [r5, #24]
    8bec:	ldm	r3, {r0, r1, r2, r3}
    8bf0:	str	r2, [r5, #72]	; 0x48
    8bf4:	str	r3, [r5, #76]	; 0x4c
    8bf8:	str	r1, [r5, #60]	; 0x3c
    8bfc:	str	r0, [r5, #56]	; 0x38
    8c00:	ldrd	r0, [sl, #32]
    8c04:	mov	r2, #856	; 0x358
    8c08:	str	r1, [r5, #68]	; 0x44
    8c0c:	str	r0, [r5, #64]	; 0x40
    8c10:	ldr	sl, [r5, #92]	; 0x5c
    8c14:	cmp	sl, #0
    8c18:	ldreq	sl, [r8, #144]	; 0x90
    8c1c:	streq	sl, [r5, #92]	; 0x5c
    8c20:	ldr	ip, [r5, #16]
    8c24:	ldr	r1, [r5, #20]
    8c28:	add	r0, r1, #212	; 0xd4
    8c2c:	add	r6, r2, r1, lsl #1
    8c30:	add	r1, r1, #50	; 0x32
    8c34:	cmp	ip, #0
    8c38:	asr	r3, r0, #31
    8c3c:	asr	r4, r6, #31
    8c40:	asr	r2, r1, #31
    8c44:	stm	lr, {r0, r3, r6}
    8c48:	str	r4, [r5, #44]	; 0x2c
    8c4c:	str	r1, [r5, #48]	; 0x30
    8c50:	str	r2, [r5, #52]	; 0x34
    8c54:	beq	8c9c <readstat_parse_sas7bcat+0x20c>
    8c58:	add	r7, r5, #48	; 0x30
    8c5c:	adds	r6, r6, #144	; 0x90
    8c60:	add	lr, r5, #32
    8c64:	str	r7, [sp, #72]	; 0x48
    8c68:	mov	r7, r8
    8c6c:	mov	r8, r9
    8c70:	adc	r9, r4, #0
    8c74:	adds	r0, r0, #72	; 0x48
    8c78:	adc	r3, r3, #0
    8c7c:	stm	r8, {r6, r9}
    8c80:	mov	r9, r8
    8c84:	mov	r8, r7
    8c88:	stm	lr, {r0, r3}
    8c8c:	adds	r0, r1, #24
    8c90:	adc	r1, r2, #0
    8c94:	ldr	r2, [sp, #72]	; 0x48
    8c98:	strd	r0, [r2]
    8c9c:	cmp	sl, #0
    8ca0:	ldrne	r4, [r5, #96]	; 0x60
    8ca4:	cmpne	r4, #0
    8ca8:	bne	8df0 <readstat_parse_sas7bcat+0x360>
    8cac:	ldr	r0, [r5]
    8cb0:	mov	sl, r8
    8cb4:	ldr	r8, [sp, #76]	; 0x4c
    8cb8:	str	r9, [sp, #72]	; 0x48
    8cbc:	cmp	r0, #0
    8cc0:	beq	8d78 <readstat_parse_sas7bcat+0x2e8>
    8cc4:	vmov.i32	q8, #0	; 0x00000000
    8cc8:	mov	r0, #52	; 0x34
    8ccc:	add	r1, sp, #80	; 0x50
    8cd0:	mov	r6, #0
    8cd4:	mov	r2, #1
    8cd8:	add	r4, sp, #143	; 0x8f
    8cdc:	vst1.64	{d16-d17}, [r1], r0
    8ce0:	ldr	r0, [sl, #72]	; 0x48
    8ce4:	ldr	r3, [sl, #76]	; 0x4c
    8ce8:	str	r0, [sp, #96]	; 0x60
    8cec:	ldr	r0, [sl, #12]
    8cf0:	str	r3, [sp, #100]	; 0x64
    8cf4:	str	r6, [sp, #112]	; 0x70
    8cf8:	mov	r3, #64	; 0x40
    8cfc:	str	r0, [sp, #104]	; 0x68
    8d00:	asr	r0, r0, #31
    8d04:	str	r0, [sp, #108]	; 0x6c
    8d08:	ldr	r0, [sl]
    8d0c:	str	r6, [sp, #120]	; 0x78
    8d10:	str	r6, [sp, #124]	; 0x7c
    8d14:	cmp	r0, #0
    8d18:	ldr	r0, [r5, #92]	; 0x5c
    8d1c:	movweq	r2, #2
    8d20:	str	r2, [sp, #116]	; 0x74
    8d24:	add	r2, sl, #80	; 0x50
    8d28:	str	r0, [sp, #128]	; 0x80
    8d2c:	ldrb	r0, [r5, #16]
    8d30:	and	r0, r0, #1
    8d34:	strb	r0, [r1]
    8d38:	ldr	r0, [r5, #100]	; 0x64
    8d3c:	movw	r1, #257	; 0x101
    8d40:	str	r0, [sp]
    8d44:	mov	r0, r4
    8d48:	bl	4c04 <readstat_convert@plt>
    8d4c:	mov	r9, r0
    8d50:	cmp	r0, #0
    8d54:	bne	8b40 <readstat_parse_sas7bcat+0xb0>
    8d58:	ldr	r2, [r5]
    8d5c:	ldr	r1, [r5, #8]
    8d60:	add	r0, sp, #80	; 0x50
    8d64:	str	r4, [sp, #124]	; 0x7c
    8d68:	blx	r2
    8d6c:	mov	r9, #4
    8d70:	cmp	r0, #0
    8d74:	bne	8b40 <readstat_parse_sas7bcat+0xb0>
    8d78:	add	r7, r5, #64	; 0x40
    8d7c:	ldr	r0, [r7]
    8d80:	bl	4bf8 <readstat_malloc@plt>
    8d84:	mov	r9, #3
    8d88:	cmp	r0, #0
    8d8c:	beq	8e54 <readstat_parse_sas7bcat+0x3c4>
    8d90:	mov	r4, r0
    8d94:	add	r0, r5, #72	; 0x48
    8d98:	ldr	r1, [r7]
    8d9c:	ldr	r3, [r8, #8]
    8da0:	ldr	r2, [r8, #20]
    8da4:	mov	r6, #0
    8da8:	str	r0, [sp, #68]	; 0x44
    8dac:	ldr	r0, [r0]
    8db0:	add	r0, r1, r0
    8db4:	mov	r1, #0
    8db8:	blx	r3
    8dbc:	cmn	r0, #1
    8dc0:	beq	94a4 <readstat_parse_sas7bcat+0xa14>
    8dc4:	ldr	r1, [r7]
    8dc8:	ldr	r3, [r8, #12]
    8dcc:	ldr	r2, [r8, #20]
    8dd0:	mov	r0, r4
    8dd4:	blx	r3
    8dd8:	ldrd	r2, [r7]
    8ddc:	subs	r1, r0, r2
    8de0:	rscs	r0, r3, r0, asr #31
    8de4:	bge	8e20 <readstat_parse_sas7bcat+0x390>
    8de8:	mov	r9, #2
    8dec:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    8df0:	mov	r0, sl
    8df4:	mov	r1, r4
    8df8:	bl	4808 <strcmp@plt>
    8dfc:	cmp	r0, #0
    8e00:	beq	8cac <readstat_parse_sas7bcat+0x21c>
    8e04:	mov	r0, r4
    8e08:	mov	r1, sl
    8e0c:	bl	4b14 <iconv_open@plt>
    8e10:	cmn	r0, #1
    8e14:	beq	8e48 <readstat_parse_sas7bcat+0x3b8>
    8e18:	str	r0, [r5, #100]	; 0x64
    8e1c:	b	8cac <readstat_parse_sas7bcat+0x21c>
    8e20:	ldr	r0, [sp, #72]	; 0x48
    8e24:	ldr	r1, [r0]
    8e28:	add	r0, r4, r1
    8e2c:	sub	r1, r2, r1
    8e30:	mov	r2, r5
    8e34:	bl	9514 <sas7bcat_augment_index>
    8e38:	cmp	r0, #0
    8e3c:	beq	8e5c <readstat_parse_sas7bcat+0x3cc>
    8e40:	mov	r9, r0
    8e44:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    8e48:	mov	sl, r8
    8e4c:	ldr	r8, [sp, #76]	; 0x4c
    8e50:	mov	r9, #7
    8e54:	mov	r6, #0
    8e58:	b	8b40 <readstat_parse_sas7bcat+0xb0>
    8e5c:	add	r0, r5, #56	; 0x38
    8e60:	str	r7, [sp, #72]	; 0x48
    8e64:	str	r4, [sp, #60]	; 0x3c
    8e68:	str	r0, [sp, #64]	; 0x40
    8e6c:	ldrd	r0, [r0]
    8e70:	subs	r0, r0, #4
    8e74:	sbcs	r0, r1, #0
    8e78:	blt	8f30 <readstat_parse_sas7bcat+0x4a0>
    8e7c:	ldr	r0, [sp, #60]	; 0x3c
    8e80:	mov	r6, #0
    8e84:	mov	r4, #3
    8e88:	mov	r7, #0
    8e8c:	add	r0, r0, #16
    8e90:	str	r0, [sp, #56]	; 0x38
    8e94:	ldr	r0, [sp, #68]	; 0x44
    8e98:	ldr	r9, [sp, #72]	; 0x48
    8e9c:	ldr	r3, [r8, #8]
    8ea0:	ldr	r2, [r8, #20]
    8ea4:	ldr	r0, [r0]
    8ea8:	ldr	r1, [r9]
    8eac:	mla	r0, r1, r4, r0
    8eb0:	mov	r1, #0
    8eb4:	blx	r3
    8eb8:	cmn	r0, #1
    8ebc:	beq	94ac <readstat_parse_sas7bcat+0xa1c>
    8ec0:	ldr	r1, [r9]
    8ec4:	ldr	r3, [r8, #12]
    8ec8:	ldr	r2, [r8, #20]
    8ecc:	ldr	r0, [sp, #60]	; 0x3c
    8ed0:	blx	r3
    8ed4:	ldrd	r2, [r9]
    8ed8:	subs	r1, r0, r2
    8edc:	rscs	r0, r3, r0, asr #31
    8ee0:	blt	94b4 <readstat_parse_sas7bcat+0xa24>
    8ee4:	ldr	r0, [sp, #56]	; 0x38
    8ee8:	movw	r1, #19544	; 0x4c58
    8eec:	movt	r1, #21075	; 0x5253
    8ef0:	ldr	r0, [r0]
    8ef4:	cmp	r0, r1
    8ef8:	bne	8f14 <readstat_parse_sas7bcat+0x484>
    8efc:	ldr	r0, [sp, #56]	; 0x38
    8f00:	sub	r1, r2, #16
    8f04:	mov	r2, r5
    8f08:	bl	9514 <sas7bcat_augment_index>
    8f0c:	cmp	r0, #0
    8f10:	bne	94c0 <readstat_parse_sas7bcat+0xa30>
    8f14:	ldr	r0, [sp, #64]	; 0x40
    8f18:	adds	r4, r4, #1
    8f1c:	adc	r7, r7, #0
    8f20:	ldrd	r0, [r0]
    8f24:	subs	r0, r4, r0
    8f28:	sbcs	r0, r7, r1
    8f2c:	blt	8e94 <readstat_parse_sas7bcat+0x404>
    8f30:	ldr	r1, [r5, #84]	; 0x54
    8f34:	cmp	r1, #2
    8f38:	blt	8f8c <readstat_parse_sas7bcat+0x4fc>
    8f3c:	ldr	r0, [r5, #80]	; 0x50
    8f40:	mov	r3, #1
    8f44:	ldrd	r6, [r0]
    8f48:	add	r4, r0, #8
    8f4c:	ldm	r4, {r2, r9}
    8f50:	subs	r6, r2, r6
    8f54:	sbcs	r7, r9, r7
    8f58:	bcc	8f78 <readstat_parse_sas7bcat+0x4e8>
    8f5c:	add	r3, r3, #1
    8f60:	add	r4, r4, #8
    8f64:	mov	r6, r2
    8f68:	mov	r7, r9
    8f6c:	cmp	r3, r1
    8f70:	blt	8f4c <readstat_parse_sas7bcat+0x4bc>
    8f74:	b	8f8c <readstat_parse_sas7bcat+0x4fc>
    8f78:	ldr	r3, [pc, #1424]	; 9510 <readstat_parse_sas7bcat+0xa80>
    8f7c:	mov	r2, #8
    8f80:	add	r3, pc, r3
    8f84:	bl	4e08 <qsort@plt>
    8f88:	ldr	r1, [r5, #84]	; 0x54
    8f8c:	ldr	r4, [sp, #60]	; 0x3c
    8f90:	cmp	r1, #0
    8f94:	beq	9000 <readstat_parse_sas7bcat+0x570>
    8f98:	cmp	r1, #1
    8f9c:	ble	900c <readstat_parse_sas7bcat+0x57c>
    8fa0:	ldr	ip, [r5, #80]	; 0x50
    8fa4:	mov	lr, #1
    8fa8:	mov	r7, #1
    8fac:	mov	r3, ip
    8fb0:	ldr	r4, [r3]
    8fb4:	ldmib	r3, {r0, r6}
    8fb8:	ldr	r2, [r3, #12]
    8fbc:	eor	r0, r2, r0
    8fc0:	eor	r4, r6, r4
    8fc4:	orrs	r0, r4, r0
    8fc8:	beq	8fe0 <readstat_parse_sas7bcat+0x550>
    8fcc:	cmp	r7, lr
    8fd0:	movne	r0, ip
    8fd4:	strne	r6, [r0, lr, lsl #3]!
    8fd8:	add	lr, lr, #1
    8fdc:	strne	r2, [r0, #4]
    8fe0:	add	r7, r7, #1
    8fe4:	add	r3, r3, #8
    8fe8:	cmp	r1, r7
    8fec:	bne	8fb0 <readstat_parse_sas7bcat+0x520>
    8ff0:	ldr	r4, [sp, #60]	; 0x3c
    8ff4:	cmp	lr, #1
    8ff8:	str	lr, [r5, #84]	; 0x54
    8ffc:	bge	9014 <readstat_parse_sas7bcat+0x584>
    9000:	mov	r9, #0
    9004:	mov	r6, #0
    9008:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    900c:	mov	r0, #1
    9010:	str	r0, [r5, #84]	; 0x54
    9014:	add	r0, sp, #143	; 0x8f
    9018:	mov	r2, #0
    901c:	mov	r3, #0
    9020:	mov	r6, #0
    9024:	add	r1, r0, #10
    9028:	str	r1, [sp, #48]	; 0x30
    902c:	add	r1, r0, #8
    9030:	str	r1, [sp, #44]	; 0x2c
    9034:	add	r1, r0, #6
    9038:	add	r0, r0, #4
    903c:	str	r1, [sp, #40]	; 0x28
    9040:	str	r0, [sp, #36]	; 0x24
    9044:	b	90ac <readstat_parse_sas7bcat+0x61c>
    9048:	ldr	r2, [sp, #76]	; 0x4c
    904c:	orr	r0, r7, r3
    9050:	add	r1, r0, #32
    9054:	cmp	r1, r2
    9058:	bhi	9478 <readstat_parse_sas7bcat+0x9e8>
    905c:	mov	r1, sl
    9060:	mov	sl, r8
    9064:	str	r3, [sp, #56]	; 0x38
    9068:	add	r2, r6, r0
    906c:	add	r0, sp, #143	; 0x8f
    9070:	mov	r3, #32
    9074:	mov	r8, r1
    9078:	ldr	r1, [r5, #100]	; 0x64
    907c:	str	r1, [sp]
    9080:	mov	r1, #129	; 0x81
    9084:	bl	4c04 <readstat_convert@plt>
    9088:	cmp	r0, #0
    908c:	bne	9508 <readstat_parse_sas7bcat+0xa78>
    9090:	ldr	r3, [sp, #56]	; 0x38
    9094:	ldr	r2, [sp, #76]	; 0x4c
    9098:	mov	r0, r8
    909c:	mov	r8, sl
    90a0:	mov	sl, r0
    90a4:	orr	r3, r3, #32
    90a8:	b	9444 <readstat_parse_sas7bcat+0x9b4>
    90ac:	ldr	r0, [r5, #80]	; 0x50
    90b0:	lsl	r1, r2, #3
    90b4:	ldrh	r9, [r0, r1]!
    90b8:	ldr	ip, [r0, #4]
    90bc:	ldr	r0, [r5, #16]
    90c0:	cmp	r0, #0
    90c4:	mov	r0, #32
    90c8:	movweq	r0, #16
    90cc:	cmp	ip, #1
    90d0:	str	r0, [sp, #52]	; 0x34
    90d4:	blt	9484 <readstat_parse_sas7bcat+0x9f4>
    90d8:	cmp	r9, #0
    90dc:	beq	9484 <readstat_parse_sas7bcat+0x9f4>
    90e0:	ldr	r7, [r5, #12]
    90e4:	mov	r1, #0
    90e8:	mov	r4, #0
    90ec:	str	r3, [sp, #12]
    90f0:	str	r2, [sp, #16]
    90f4:	str	r9, [sp, #24]
    90f8:	str	ip, [sp, #28]
    90fc:	str	r7, [sp, #32]
    9100:	ldr	r0, [sp, #64]	; 0x40
    9104:	ldm	r0, {r0, r3}
    9108:	subs	r2, r0, ip
    910c:	sbcs	r2, r3, ip, asr #31
    9110:	blt	91f0 <readstat_parse_sas7bcat+0x760>
    9114:	subs	r0, r4, r0
    9118:	rscs	r0, r3, #0
    911c:	bge	91f0 <readstat_parse_sas7bcat+0x760>
    9120:	ldr	r0, [sp, #68]	; 0x44
    9124:	str	r1, [sp, #76]	; 0x4c
    9128:	ldr	r1, [sp, #72]	; 0x48
    912c:	sub	r2, ip, #1
    9130:	ldr	r3, [r7, #8]
    9134:	str	r4, [sp, #56]	; 0x38
    9138:	ldr	r0, [r0]
    913c:	ldr	r1, [r1]
    9140:	mla	r0, r1, r2, r0
    9144:	ldr	r2, [r7, #20]
    9148:	mov	r1, #0
    914c:	add	r0, r9, r0
    9150:	blx	r3
    9154:	cmn	r0, #1
    9158:	beq	94ac <readstat_parse_sas7bcat+0xa1c>
    915c:	ldr	r4, [sp, #52]	; 0x34
    9160:	ldr	r3, [r7, #12]
    9164:	ldr	r2, [r7, #20]
    9168:	add	r7, sp, #143	; 0x8f
    916c:	mov	r0, r7
    9170:	mov	r1, r4
    9174:	blx	r3
    9178:	cmp	r0, r4
    917c:	blt	94b4 <readstat_parse_sas7bcat+0xa24>
    9180:	ldr	r1, [r5, #24]
    9184:	ldr	r4, [r5, #16]
    9188:	mov	r0, r7
    918c:	bl	4dc0 <sas_read4@plt>
    9190:	mov	r7, r0
    9194:	ldr	r0, [sp, #44]	; 0x2c
    9198:	ldr	r1, [sp, #36]	; 0x24
    919c:	cmp	r4, #0
    91a0:	moveq	r0, r1
    91a4:	ldr	r1, [r5, #24]
    91a8:	bl	4d9c <sas_read2@plt>
    91ac:	mov	r9, r0
    91b0:	ldr	r0, [sp, #48]	; 0x30
    91b4:	ldr	r1, [sp, #40]	; 0x28
    91b8:	cmp	r4, #0
    91bc:	moveq	r0, r1
    91c0:	ldr	r1, [r5, #24]
    91c4:	bl	4d9c <sas_read2@plt>
    91c8:	ldr	r1, [sp, #76]	; 0x4c
    91cc:	cmp	r7, #1
    91d0:	add	r1, r1, r0
    91d4:	blt	91f0 <readstat_parse_sas7bcat+0x760>
    91d8:	ldr	r4, [sp, #56]	; 0x38
    91dc:	mov	ip, r7
    91e0:	ldr	r7, [sp, #32]
    91e4:	cmp	r9, #0
    91e8:	add	r4, r4, #1
    91ec:	bne	9100 <readstat_parse_sas7bcat+0x670>
    91f0:	cmp	r1, #0
    91f4:	beq	9478 <readstat_parse_sas7bcat+0x9e8>
    91f8:	ldr	r4, [sp, #60]	; 0x3c
    91fc:	cmn	r1, #1
    9200:	add	r7, sp, #143	; 0x8f
    9204:	beq	94d0 <readstat_parse_sas7bcat+0xa40>
    9208:	mov	r0, r6
    920c:	str	r1, [sp, #76]	; 0x4c
    9210:	bl	4cb8 <readstat_realloc@plt>
    9214:	ldr	ip, [sp, #72]	; 0x48
    9218:	cmp	r0, #0
    921c:	beq	94d8 <readstat_parse_sas7bcat+0xa48>
    9220:	mov	r6, r0
    9224:	ldr	r0, [r5, #12]
    9228:	mov	lr, #0
    922c:	str	r0, [sp, #32]
    9230:	ldr	r0, [r5, #16]
    9234:	cmp	r0, #0
    9238:	mov	r0, #32
    923c:	movweq	r0, #16
    9240:	str	r0, [sp, #52]	; 0x34
    9244:	mov	r0, #0
    9248:	str	r0, [sp, #56]	; 0x38
    924c:	mov	r9, r7
    9250:	ldr	r7, [sp, #28]
    9254:	ldr	r3, [sp, #24]
    9258:	cmp	r7, #1
    925c:	blt	938c <readstat_parse_sas7bcat+0x8fc>
    9260:	cmp	r3, #0
    9264:	beq	938c <readstat_parse_sas7bcat+0x8fc>
    9268:	ldr	r0, [sp, #64]	; 0x40
    926c:	ldrd	r0, [r0]
    9270:	subs	r2, r0, r7
    9274:	sbcs	r2, r1, r7, asr #31
    9278:	blt	938c <readstat_parse_sas7bcat+0x8fc>
    927c:	ldr	r2, [sp, #56]	; 0x38
    9280:	subs	r0, r2, r0
    9284:	rscs	r0, r1, #0
    9288:	bge	938c <readstat_parse_sas7bcat+0x8fc>
    928c:	ldr	r0, [sp, #68]	; 0x44
    9290:	ldr	r1, [ip]
    9294:	sub	r2, r7, #1
    9298:	ldr	r7, [sp, #32]
    929c:	str	lr, [sp, #20]
    92a0:	ldr	r0, [r0]
    92a4:	mla	r0, r1, r2, r0
    92a8:	ldr	r2, [r7, #20]
    92ac:	mov	r1, #0
    92b0:	add	r0, r3, r0
    92b4:	ldr	r3, [r7, #8]
    92b8:	blx	r3
    92bc:	cmn	r0, #1
    92c0:	beq	94a4 <readstat_parse_sas7bcat+0xa14>
    92c4:	ldr	r3, [r7, #12]
    92c8:	ldr	r2, [r7, #20]
    92cc:	ldr	r1, [sp, #52]	; 0x34
    92d0:	mov	r0, r9
    92d4:	mov	r7, r9
    92d8:	blx	r3
    92dc:	ldr	r1, [sp, #52]	; 0x34
    92e0:	mov	r9, #2
    92e4:	cmp	r0, r1
    92e8:	blt	8b44 <readstat_parse_sas7bcat+0xb4>
    92ec:	ldr	r1, [r5, #24]
    92f0:	ldr	r4, [r5, #16]
    92f4:	mov	r0, r7
    92f8:	bl	4dc0 <sas_read4@plt>
    92fc:	str	r0, [sp, #28]
    9300:	ldr	r0, [sp, #44]	; 0x2c
    9304:	ldr	r1, [sp, #36]	; 0x24
    9308:	cmp	r4, #0
    930c:	moveq	r0, r1
    9310:	ldr	r1, [r5, #24]
    9314:	bl	4d9c <sas_read2@plt>
    9318:	str	r0, [sp, #24]
    931c:	ldr	r0, [sp, #48]	; 0x30
    9320:	ldr	r1, [sp, #40]	; 0x28
    9324:	cmp	r4, #0
    9328:	moveq	r0, r1
    932c:	ldr	r1, [r5, #24]
    9330:	bl	4d9c <sas_read2@plt>
    9334:	ldr	r1, [sp, #20]
    9338:	mov	r7, r0
    933c:	add	r4, r1, r0
    9340:	ldr	r0, [sp, #76]	; 0x4c
    9344:	cmp	r4, r0
    9348:	bhi	94c8 <readstat_parse_sas7bcat+0xa38>
    934c:	ldr	r0, [sp, #56]	; 0x38
    9350:	add	r0, r0, #1
    9354:	str	r0, [sp, #56]	; 0x38
    9358:	add	r0, r6, r1
    935c:	ldr	r1, [sp, #32]
    9360:	ldr	r3, [r1, #12]
    9364:	ldr	r2, [r1, #20]
    9368:	mov	r1, r7
    936c:	blx	r3
    9370:	mov	lr, r4
    9374:	ldr	r4, [sp, #60]	; 0x3c
    9378:	ldr	ip, [sp, #72]	; 0x48
    937c:	cmp	r0, r7
    9380:	add	r7, sp, #143	; 0x8f
    9384:	bge	924c <readstat_parse_sas7bcat+0x7bc>
    9388:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    938c:	ldr	r0, [sp, #76]	; 0x4c
    9390:	cmp	r0, #106	; 0x6a
    9394:	bcc	9478 <readstat_parse_sas7bcat+0x9e8>
    9398:	ldrb	r0, [r6, #2]
    939c:	ldr	r7, [r5, #16]
    93a0:	ldr	r1, [r5, #24]
    93a4:	mov	r2, #38	; 0x26
    93a8:	and	r4, r0, #8
    93ac:	mov	r0, #42	; 0x2a
    93b0:	cmp	r7, #0
    93b4:	orr	r0, r0, r4, lsr #1
    93b8:	addeq	r0, r2, r4, lsr #1
    93bc:	add	r0, r6, r0
    93c0:	bl	4dc0 <sas_read4@plt>
    93c4:	str	r0, [sp, #32]
    93c8:	cmp	r7, #0
    93cc:	mov	r0, #50	; 0x32
    93d0:	ldr	r1, [r5, #24]
    93d4:	str	r4, [sp, #56]	; 0x38
    93d8:	movweq	r0, #42	; 0x2a
    93dc:	orr	r0, r0, r4, lsr #1
    93e0:	add	r0, r6, r0
    93e4:	bl	4dc0 <sas_read4@plt>
    93e8:	str	r0, [sp, #52]	; 0x34
    93ec:	ldr	r0, [r5, #100]	; 0x64
    93f0:	add	r2, r6, #8
    93f4:	mov	r1, #129	; 0x81
    93f8:	mov	r3, #8
    93fc:	str	r0, [sp]
    9400:	add	r0, sp, #143	; 0x8f
    9404:	bl	4c04 <readstat_convert@plt>
    9408:	cmp	r7, #0
    940c:	mov	r7, #138	; 0x8a
    9410:	movweq	r7, #106	; 0x6a
    9414:	cmp	r0, #0
    9418:	bne	94e4 <readstat_parse_sas7bcat+0xa54>
    941c:	ldr	r1, [sp, #56]	; 0x38
    9420:	lsr	r0, r1, #1
    9424:	orr	r3, r0, r1, lsl #1
    9428:	ldrsb	r0, [r6, #2]
    942c:	cmn	r0, #1
    9430:	bgt	9440 <readstat_parse_sas7bcat+0x9b0>
    9434:	ldr	r0, [r5, #16]
    9438:	cmp	r0, #0
    943c:	beq	9048 <readstat_parse_sas7bcat+0x5b8>
    9440:	ldr	r2, [sp, #76]	; 0x4c
    9444:	add	r0, r3, r7
    9448:	cmp	r0, r2
    944c:	bhi	9478 <readstat_parse_sas7bcat+0x9e8>
    9450:	add	r1, sp, #143	; 0x8f
    9454:	add	r0, r6, r0
    9458:	stm	sp, {r1, r5}
    945c:	sub	r1, r2, r7
    9460:	sub	r1, r1, r3
    9464:	ldr	r2, [sp, #52]	; 0x34
    9468:	ldr	r3, [sp, #32]
    946c:	bl	9640 <sas7bcat_parse_value_labels>
    9470:	cmp	r0, #0
    9474:	bne	94c0 <readstat_parse_sas7bcat+0xa30>
    9478:	ldr	r4, [sp, #60]	; 0x3c
    947c:	ldr	r2, [sp, #16]
    9480:	ldr	r3, [sp, #12]
    9484:	ldr	r0, [r5, #84]	; 0x54
    9488:	adds	r2, r2, #1
    948c:	mov	r9, #0
    9490:	adc	r3, r3, #0
    9494:	subs	r1, r2, r0
    9498:	sbcs	r0, r3, r0, asr #31
    949c:	blt	90ac <readstat_parse_sas7bcat+0x61c>
    94a0:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    94a4:	mov	r9, #15
    94a8:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    94ac:	mov	r9, #15
    94b0:	b	94b8 <readstat_parse_sas7bcat+0xa28>
    94b4:	mov	r9, #2
    94b8:	ldr	r4, [sp, #60]	; 0x3c
    94bc:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    94c0:	mov	r9, r0
    94c4:	b	94b8 <readstat_parse_sas7bcat+0xa28>
    94c8:	mov	r9, #5
    94cc:	b	94b8 <readstat_parse_sas7bcat+0xa28>
    94d0:	mov	r9, #0
    94d4:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    94d8:	mov	r6, #0
    94dc:	mov	r9, #3
    94e0:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    94e4:	mov	r9, r0
    94e8:	mov	r0, sl
    94ec:	mov	sl, r8
    94f0:	mov	r8, r0
    94f4:	ldr	r4, [sp, #60]	; 0x3c
    94f8:	mov	r0, r8
    94fc:	mov	r8, sl
    9500:	mov	sl, r0
    9504:	b	8b44 <readstat_parse_sas7bcat+0xb4>
    9508:	mov	r9, r0
    950c:	b	94f4 <readstat_parse_sas7bcat+0xa64>
    9510:	.word	0x000006a8

00009514 <sas7bcat_augment_index>:
    9514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9518:	add	fp, sp, #28
    951c:	sub	sp, sp, #4
    9520:	mov	r7, r2
    9524:	mov	r5, r2
    9528:	mov	r3, #0
    952c:	ldr	r2, [r7, #32]!
    9530:	cmp	r2, r1
    9534:	bgt	9624 <sas7bcat_augment_index+0x110>
    9538:	movw	r4, #19544	; 0x4c58
    953c:	add	r9, r0, r1
    9540:	add	sl, r5, #48	; 0x30
    9544:	movt	r4, #21075	; 0x5253
    9548:	mov	r8, r0
    954c:	ldr	r1, [r8], #8
    9550:	cmp	r1, r4
    9554:	moveq	r8, r0
    9558:	ldr	r0, [r8]
    955c:	cmp	r0, r4
    9560:	bne	9618 <sas7bcat_augment_index+0x104>
    9564:	ldr	r0, [sl]
    9568:	ldrb	r0, [r8, r0]
    956c:	cmp	r0, #79	; 0x4f
    9570:	bne	95a0 <sas7bcat_augment_index+0x8c>
    9574:	ldr	r0, [r5, #16]
    9578:	cmp	r0, #0
    957c:	beq	95a8 <sas7bcat_augment_index+0x94>
    9580:	ldr	r1, [r5, #24]
    9584:	add	r0, r8, #8
    9588:	bl	4dc0 <sas_read4@plt>
    958c:	ldr	r1, [r5, #24]
    9590:	mov	r6, r0
    9594:	add	r0, r8, #16
    9598:	bl	4dc0 <sas_read4@plt>
    959c:	b	95c4 <sas7bcat_augment_index+0xb0>
    95a0:	ldr	r1, [r5, #84]	; 0x54
    95a4:	b	95d8 <sas7bcat_augment_index+0xc4>
    95a8:	ldr	r1, [r5, #24]
    95ac:	add	r0, r8, #4
    95b0:	bl	4d9c <sas_read2@plt>
    95b4:	ldr	r1, [r5, #24]
    95b8:	mov	r6, r0
    95bc:	add	r0, r8, #8
    95c0:	bl	4d9c <sas_read2@plt>
    95c4:	ldrd	r2, [r5, #80]	; 0x50
    95c8:	add	r1, r3, #1
    95cc:	str	r1, [r5, #84]	; 0x54
    95d0:	str	r0, [r2, r3, lsl #3]!
    95d4:	str	r6, [r2, #4]
    95d8:	ldr	r0, [r5, #88]	; 0x58
    95dc:	cmp	r1, r0
    95e0:	bne	9604 <sas7bcat_augment_index+0xf0>
    95e4:	lsl	r0, r1, #1
    95e8:	lsl	r1, r1, #4
    95ec:	str	r0, [r5, #88]	; 0x58
    95f0:	ldr	r0, [r5, #80]	; 0x50
    95f4:	bl	4cb8 <readstat_realloc@plt>
    95f8:	cmp	r0, #0
    95fc:	str	r0, [r5, #80]	; 0x50
    9600:	beq	9620 <sas7bcat_augment_index+0x10c>
    9604:	ldr	r1, [r7]
    9608:	add	r0, r8, r1
    960c:	add	r1, r0, r1
    9610:	cmp	r1, r9
    9614:	bls	9548 <sas7bcat_augment_index+0x34>
    9618:	mov	r3, #0
    961c:	b	9624 <sas7bcat_augment_index+0x110>
    9620:	mov	r3, #3
    9624:	mov	r0, r3
    9628:	sub	sp, fp, #28
    962c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009630 <compare_block_pointers>:
    9630:	ldr	r1, [r1]
    9634:	ldr	r0, [r0]
    9638:	sub	r0, r0, r1
    963c:	bx	lr

00009640 <sas7bcat_parse_value_labels>:
    9640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9644:	add	fp, sp, #28
    9648:	sub	sp, sp, #4
    964c:	vpush	{d8}
    9650:	sub	sp, sp, #136	; 0x88
    9654:	mov	r5, r1
    9658:	mov	r8, r0
    965c:	mov	r0, r2
    9660:	mov	r1, #4
    9664:	mov	r6, r3
    9668:	mov	sl, r2
    966c:	bl	49ac <readstat_calloc@plt>
    9670:	mov	r9, r0
    9674:	bl	48b0 <machine_is_little_endian@plt>
    9678:	cmp	r9, #0
    967c:	beq	992c <sas7bcat_parse_value_labels+0x2ec>
    9680:	cmp	r6, #1
    9684:	str	r9, [fp, #-136]	; 0xffffff78
    9688:	blt	993c <sas7bcat_parse_value_labels+0x2fc>
    968c:	str	r0, [fp, #-156]	; 0xffffff64
    9690:	ldr	r0, [fp, #8]
    9694:	ldr	ip, [fp, #12]
    9698:	mov	r7, #0
    969c:	mov	r4, r8
    96a0:	ldrb	r0, [r0]
    96a4:	str	r0, [fp, #-140]	; 0xffffff74
    96a8:	add	r0, r4, #3
    96ac:	sub	r0, r0, r8
    96b0:	cmp	r0, r5
    96b4:	bhi	9934 <sas7bcat_parse_value_labels+0x2f4>
    96b8:	cmp	r7, sl
    96bc:	bge	96fc <sas7bcat_parse_value_labels+0xbc>
    96c0:	ldr	r0, [ip, #20]
    96c4:	add	r0, r4, r0
    96c8:	add	r1, r0, #14
    96cc:	sub	r1, r1, r8
    96d0:	cmp	r1, r5
    96d4:	bhi	9934 <sas7bcat_parse_value_labels+0x2f4>
    96d8:	ldr	r1, [ip, #24]
    96dc:	add	r0, r0, #10
    96e0:	bl	4dc0 <sas_read4@plt>
    96e4:	cmp	r0, sl
    96e8:	bcs	9934 <sas7bcat_parse_value_labels+0x2f4>
    96ec:	ldr	r2, [fp, #12]
    96f0:	sub	r1, r4, r8
    96f4:	str	r1, [r9, r0, lsl #2]
    96f8:	mov	ip, r2
    96fc:	ldrb	r0, [r4, #2]
    9700:	add	r7, r7, #1
    9704:	cmp	r7, r6
    9708:	add	r0, r4, r0
    970c:	add	r4, r0, #6
    9710:	blt	96a8 <sas7bcat_parse_value_labels+0x68>
    9714:	str	r6, [fp, #-160]	; 0xffffff60
    9718:	cmp	sl, #1
    971c:	mov	r9, #0
    9720:	str	r5, [fp, #-152]	; 0xffffff68
    9724:	ldrge	r0, [fp, #-160]	; 0xffffff60
    9728:	cmpge	r0, #1
    972c:	blt	9940 <sas7bcat_parse_value_labels+0x300>
    9730:	ldr	r0, [fp, #-140]	; 0xffffff74
    9734:	vldr	d8, [pc, #572]	; 9978 <sas7bcat_parse_value_labels+0x338>
    9738:	mov	r5, #0
    973c:	subs	r0, r0, #36	; 0x24
    9740:	movwne	r0, #5
    9744:	str	r0, [fp, #-168]	; 0xffffff58
    9748:	sub	r0, fp, #64	; 0x40
    974c:	add	r0, r0, #8
    9750:	str	r0, [fp, #-172]	; 0xffffff54
    9754:	ldr	r9, [fp, #-136]	; 0xffffff78
    9758:	ldr	r6, [fp, #-152]	; 0xffffff68
    975c:	ldr	r0, [r9, r5, lsl #2]
    9760:	add	r0, r8, r0
    9764:	add	r1, r0, #30
    9768:	sub	r1, r1, r8
    976c:	cmp	r1, r6
    9770:	addls	r2, r4, #10
    9774:	subls	r1, r2, r8
    9778:	cmpls	r1, r6
    977c:	bhi	9934 <sas7bcat_parse_value_labels+0x2f4>
    9780:	ldr	r1, [fp, #-168]	; 0xffffff58
    9784:	mov	r3, #0
    9788:	str	r2, [fp, #-144]	; 0xffffff70
    978c:	str	r5, [fp, #-148]	; 0xffffff6c
    9790:	str	r3, [fp, #-60]	; 0xffffffc4
    9794:	str	r3, [fp, #-64]	; 0xffffffc0
    9798:	str	r1, [fp, #-56]	; 0xffffffc8
    979c:	strb	r3, [fp, #-52]	; 0xffffffcc
    97a0:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    97a4:	and	r1, r1, #252	; 0xfc
    97a8:	strb	r1, [fp, #-51]	; 0xffffffcd
    97ac:	ldr	r1, [fp, #-140]	; 0xffffff74
    97b0:	cmp	r1, #36	; 0x24
    97b4:	bne	9800 <sas7bcat_parse_value_labels+0x1c0>
    97b8:	ldrb	r1, [r0, #2]
    97bc:	ldr	r2, [ip, #100]	; 0x64
    97c0:	sub	sp, sp, #8
    97c4:	add	r0, r0, r1
    97c8:	sub	r5, fp, #129	; 0x81
    97cc:	str	r2, [sp]
    97d0:	mov	r1, #65	; 0x41
    97d4:	mov	r3, #16
    97d8:	sub	r2, r0, #10
    97dc:	mov	r0, r5
    97e0:	bl	4c04 <readstat_convert@plt>
    97e4:	add	sp, sp, #8
    97e8:	cmp	r0, #0
    97ec:	bne	9970 <sas7bcat_parse_value_labels+0x330>
    97f0:	ldr	r6, [fp, #-152]	; 0xffffff68
    97f4:	ldr	r2, [fp, #12]
    97f8:	str	r5, [fp, #-64]	; 0xffffffc0
    97fc:	b	9848 <sas7bcat_parse_value_labels+0x208>
    9800:	ldr	r1, [fp, #-156]	; 0xffffff64
    9804:	add	r0, r0, #22
    9808:	bl	4d90 <sas_read8@plt>
    980c:	orr	r2, r1, #65280	; 0xff00
    9810:	movw	r3, #65535	; 0xffff
    9814:	eor	r2, r2, r3
    9818:	mvn	r3, r0
    981c:	orrs	r2, r3, r2
    9820:	bne	9838 <sas7bcat_parse_value_labels+0x1f8>
    9824:	ubfx	r1, r1, #8, #8
    9828:	sub	r0, fp, #64	; 0x40
    982c:	bl	4e68 <sas_assign_tag@plt>
    9830:	vorr	d16, d8, d8
    9834:	b	9840 <sas7bcat_parse_value_labels+0x200>
    9838:	eor	r1, r1, #-2147483648	; 0x80000000
    983c:	vmov	d16, r0, r1
    9840:	ldr	r2, [fp, #12]
    9844:	vstr	d16, [fp, #-64]	; 0xffffffc0
    9848:	ldr	r1, [r2, #24]
    984c:	add	r0, r4, #8
    9850:	mov	r5, r2
    9854:	bl	4d9c <sas_read2@plt>
    9858:	ldr	r2, [fp, #-144]	; 0xffffff70
    985c:	mov	r7, r0
    9860:	add	r0, r2, r0
    9864:	sub	r0, r0, r8
    9868:	cmp	r0, r6
    986c:	bhi	9934 <sas7bcat_parse_value_labels+0x2f4>
    9870:	ldr	r0, [r5, #4]
    9874:	mov	ip, r5
    9878:	cmp	r0, #0
    987c:	beq	9904 <sas7bcat_parse_value_labels+0x2c4>
    9880:	mov	r0, #1
    9884:	movw	r3, #65528	; 0xfff8
    9888:	str	sp, [fp, #-164]	; 0xffffff5c
    988c:	orr	r1, r0, r7, lsl #2
    9890:	movt	r3, #7
    9894:	add	r0, r1, #7
    9898:	and	r0, r0, r3
    989c:	sub	r6, sp, r0
    98a0:	mov	sp, r6
    98a4:	ldr	r0, [ip, #100]	; 0x64
    98a8:	sub	sp, sp, #8
    98ac:	str	r0, [sp]
    98b0:	mov	r0, r6
    98b4:	mov	r3, r7
    98b8:	mov	r5, ip
    98bc:	bl	4c04 <readstat_convert@plt>
    98c0:	add	sp, sp, #8
    98c4:	cmp	r0, #0
    98c8:	bne	995c <sas7bcat_parse_value_labels+0x31c>
    98cc:	ldr	r0, [fp, #-172]	; 0xffffff54
    98d0:	ldrd	r0, [r0]
    98d4:	ldmib	r5, {ip, lr}
    98d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
    98dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
    98e0:	push	{r0, r1, r6, lr}
    98e4:	ldr	r0, [fp, #8]
    98e8:	blx	ip
    98ec:	add	sp, sp, #16
    98f0:	cmp	r0, #0
    98f4:	bne	9964 <sas7bcat_parse_value_labels+0x324>
    98f8:	ldr	sp, [fp, #-164]	; 0xffffff5c
    98fc:	ldr	r2, [fp, #12]
    9900:	mov	ip, r2
    9904:	ldr	r5, [fp, #-148]	; 0xffffff6c
    9908:	mov	r9, #0
    990c:	add	r5, r5, #1
    9910:	cmp	r5, sl
    9914:	addlt	r0, r4, r7
    9918:	addlt	r4, r0, #11
    991c:	ldrlt	r0, [fp, #-160]	; 0xffffff60
    9920:	cmplt	r5, r0
    9924:	blt	9754 <sas7bcat_parse_value_labels+0x114>
    9928:	b	9940 <sas7bcat_parse_value_labels+0x300>
    992c:	mov	r9, #3
    9930:	b	9948 <sas7bcat_parse_value_labels+0x308>
    9934:	mov	r9, #5
    9938:	b	9940 <sas7bcat_parse_value_labels+0x300>
    993c:	mov	r9, #0
    9940:	ldr	r0, [fp, #-136]	; 0xffffff78
    9944:	bl	48bc <free@plt>
    9948:	mov	r0, r9
    994c:	sub	sp, fp, #40	; 0x28
    9950:	vpop	{d8}
    9954:	add	sp, sp, #4
    9958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    995c:	mov	r9, r0
    9960:	b	9968 <sas7bcat_parse_value_labels+0x328>
    9964:	mov	r9, #4
    9968:	ldr	sp, [fp, #-164]	; 0xffffff5c
    996c:	b	9940 <sas7bcat_parse_value_labels+0x300>
    9970:	mov	r9, r0
    9974:	b	9940 <sas7bcat_parse_value_labels+0x300>
    9978:	.word	0x00000000
    997c:	.word	0x7ff80000

00009980 <readstat_begin_writing_sas7bcat>:
    9980:	ldr	r2, [r0, #8]
    9984:	cmp	r2, #0
    9988:	moveq	r2, #9
    998c:	streq	r2, [r0, #8]
    9990:	ldr	r2, [pc, #12]	; 99a4 <readstat_begin_writing_sas7bcat+0x24>
    9994:	add	r2, pc, r2
    9998:	str	r2, [r0, #276]	; 0x114
    999c:	mov	r2, #0
    99a0:	b	494c <readstat_begin_writing_file@plt>
    99a4:	.word	0x0000000c

000099a8 <sas7bcat_begin_data>:
    99a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    99ac:	add	fp, sp, #28
    99b0:	sub	sp, sp, #356	; 0x164
    99b4:	mov	r1, #0
    99b8:	mov	r5, r0
    99bc:	bl	4d24 <sas_header_info_init@plt>
    99c0:	ldr	r4, [r5, #40]	; 0x28
    99c4:	mov	r6, r0
    99c8:	lsl	r0, r4, #3
    99cc:	bl	4af0 <malloc@plt>
    99d0:	mov	r7, r0
    99d4:	str	r6, [sp, #156]	; 0x9c
    99d8:	ldr	r0, [r6, #32]!
    99dc:	str	r6, [sp, #164]	; 0xa4
    99e0:	bl	4af0 <malloc@plt>
    99e4:	cmp	r4, #1
    99e8:	str	r0, [sp, #160]	; 0xa0
    99ec:	blt	9c2c <sas7bcat_begin_data+0x284>
    99f0:	mov	r1, #0
    99f4:	str	r5, [sp, #172]	; 0xac
    99f8:	str	r7, [sp, #168]	; 0xa8
    99fc:	ldr	r0, [r5, #36]	; 0x24
    9a00:	str	r1, [sp, #176]	; 0xb0
    9a04:	ldr	r5, [r0, r1, lsl #2]
    9a08:	add	r6, r5, #4
    9a0c:	mov	r0, r6
    9a10:	bl	4bd4 <strlen@plt>
    9a14:	cmp	r0, #32
    9a18:	mov	r8, #32
    9a1c:	mov	r4, r0
    9a20:	mov	r1, r6
    9a24:	movcc	r8, r0
    9a28:	cmp	r0, #8
    9a2c:	movls	r8, r0
    9a30:	add	r0, sp, #184	; 0xb8
    9a34:	mov	r2, r8
    9a38:	bl	4910 <memcpy@plt>
    9a3c:	cmp	r4, #8
    9a40:	ldr	r4, [r5, #264]	; 0x108
    9a44:	mov	r7, #106	; 0x6a
    9a48:	movwhi	r7, #138	; 0x8a
    9a4c:	cmp	r4, #1
    9a50:	blt	9a80 <sas7bcat_begin_data+0xd8>
    9a54:	mov	r6, #0
    9a58:	mov	r0, r5
    9a5c:	mov	r1, r6
    9a60:	bl	4e8c <readstat_get_value_label@plt>
    9a64:	ldr	r0, [r0, #28]
    9a68:	ldr	r4, [r5, #264]	; 0x108
    9a6c:	add	r6, r6, #1
    9a70:	add	r0, r7, r0
    9a74:	cmp	r6, r4
    9a78:	add	r7, r0, #41	; 0x29
    9a7c:	blt	9a58 <sas7bcat_begin_data+0xb0>
    9a80:	add	r1, r7, #8
    9a84:	mov	r0, #1
    9a88:	bl	4778 <calloc@plt>
    9a8c:	mov	r2, r0
    9a90:	cmp	r8, #9
    9a94:	str	r7, [r0]
    9a98:	str	r4, [r0, #42]	; 0x2a
    9a9c:	str	r4, [r0, #46]	; 0x2e
    9aa0:	str	r0, [sp, #180]	; 0xb4
    9aa4:	bcc	9af4 <sas7bcat_begin_data+0x14c>
    9aa8:	mov	r0, #128	; 0x80
    9aac:	ldr	r1, [sp, #188]	; 0xbc
    9ab0:	add	r6, r2, #110	; 0x6e
    9ab4:	cmp	r8, #31
    9ab8:	strb	r0, [r2, #6]
    9abc:	ldr	r0, [sp, #184]	; 0xb8
    9ac0:	str	r1, [r2, #16]
    9ac4:	mov	r1, #32
    9ac8:	str	r0, [r2, #12]
    9acc:	rsb	r2, r8, #32
    9ad0:	add	r0, r6, r8
    9ad4:	movwhi	r2, #0
    9ad8:	bl	4c70 <memset@plt>
    9adc:	mov	r0, r6
    9ae0:	add	r1, sp, #184	; 0xb8
    9ae4:	mov	r2, r8
    9ae8:	bl	4910 <memcpy@plt>
    9aec:	mov	r0, #138	; 0x8a
    9af0:	b	9b18 <sas7bcat_begin_data+0x170>
    9af4:	movw	r1, #8224	; 0x2020
    9af8:	movt	r1, #8224	; 0x2020
    9afc:	str	r1, [r2, #12]!
    9b00:	str	r1, [r2, #4]
    9b04:	mov	r0, r2
    9b08:	add	r1, sp, #184	; 0xb8
    9b0c:	mov	r2, r8
    9b10:	bl	4910 <memcpy@plt>
    9b14:	mov	r0, #106	; 0x6a
    9b18:	cmp	r4, #1
    9b1c:	blt	9c08 <sas7bcat_begin_data+0x260>
    9b20:	ldr	r3, [sp, #180]	; 0xb4
    9b24:	rsb	r2, r4, r4, lsl #4
    9b28:	mov	r8, #0
    9b2c:	add	r2, r0, r2, lsl #1
    9b30:	add	r1, r3, #4
    9b34:	add	r0, r3, r0
    9b38:	add	r4, r1, r2
    9b3c:	add	r6, r0, #14
    9b40:	mov	r0, r5
    9b44:	mov	r1, r8
    9b48:	bl	4e8c <readstat_get_value_label@plt>
    9b4c:	mov	r7, r0
    9b50:	mov	r0, #24
    9b54:	strb	r0, [r6, #-8]
    9b58:	str	r8, [r6]
    9b5c:	ldr	r0, [r5]
    9b60:	cmp	r0, #0
    9b64:	beq	9ba0 <sas7bcat_begin_data+0x1f8>
    9b68:	ldr	r9, [r7]
    9b6c:	ldr	r1, [r7, #4]
    9b70:	eor	sl, r1, #-2147483648	; 0x80000000
    9b74:	bl	48b0 <machine_is_little_endian@plt>
    9b78:	cmp	r0, #0
    9b7c:	beq	9b94 <sas7bcat_begin_data+0x1ec>
    9b80:	mov	r0, r9
    9b84:	mov	r1, sl
    9b88:	bl	479c <byteswap8@plt>
    9b8c:	mov	r9, r0
    9b90:	mov	sl, r1
    9b94:	str	r9, [r6, #12]
    9b98:	str	sl, [r6, #16]
    9b9c:	b	9bd0 <sas7bcat_begin_data+0x228>
    9ba0:	movw	r1, #8224	; 0x2020
    9ba4:	mov	r0, r6
    9ba8:	ldr	r2, [r7, #20]
    9bac:	movt	r1, #8224	; 0x2020
    9bb0:	str	r1, [r0, #4]!
    9bb4:	str	r1, [r0, #12]
    9bb8:	str	r1, [r0, #8]
    9bbc:	str	r1, [r0, #4]
    9bc0:	ldr	r1, [r7, #16]
    9bc4:	cmp	r2, #16
    9bc8:	movcs	r2, #16
    9bcc:	bl	4910 <memcpy@plt>
    9bd0:	ldr	r2, [r7, #28]
    9bd4:	add	r0, r4, #10
    9bd8:	strh	r2, [r4, #8]
    9bdc:	sxth	r2, r2
    9be0:	ldr	r1, [r7, #24]
    9be4:	bl	4910 <memcpy@plt>
    9be8:	ldr	r0, [r7, #28]
    9bec:	add	r8, r8, #1
    9bf0:	add	r6, r6, #30
    9bf4:	add	r0, r4, r0
    9bf8:	add	r4, r0, #11
    9bfc:	ldr	r0, [r5, #264]	; 0x108
    9c00:	cmp	r8, r0
    9c04:	blt	9b40 <sas7bcat_begin_data+0x198>
    9c08:	ldr	r7, [sp, #168]	; 0xa8
    9c0c:	ldr	r1, [sp, #176]	; 0xb0
    9c10:	ldr	r0, [sp, #180]	; 0xb4
    9c14:	ldr	r5, [sp, #172]	; 0xac
    9c18:	str	r0, [r7, r1, lsl #2]
    9c1c:	add	r1, r1, #1
    9c20:	ldr	r0, [r5, #40]	; 0x28
    9c24:	cmp	r1, r0
    9c28:	blt	99fc <sas7bcat_begin_data+0x54>
    9c2c:	ldr	r8, [sp, #156]	; 0x9c
    9c30:	mov	r0, #4
    9c34:	mov	r1, #0
    9c38:	add	r4, sp, #184	; 0xb8
    9c3c:	mov	r2, #156	; 0x9c
    9c40:	strd	r0, [r8, #56]	; 0x38
    9c44:	mov	r0, r4
    9c48:	mov	r1, #0
    9c4c:	bl	4c70 <memset@plt>
    9c50:	ldr	r0, [r8, #4]
    9c54:	mov	r1, #34	; 0x22
    9c58:	strb	r1, [sp, #219]	; 0xdb
    9c5c:	mov	r1, #51	; 0x33
    9c60:	cmp	r0, #0
    9c64:	movweq	r1, #34	; 0x22
    9c68:	strb	r1, [sp, #216]	; 0xd8
    9c6c:	bl	48b0 <machine_is_little_endian@plt>
    9c70:	ldr	r1, [pc, #652]	; 9f04 <sas7bcat_begin_data+0x55c>
    9c74:	cmp	r0, #0
    9c78:	movwne	r0, #1
    9c7c:	ldr	r1, [pc, r1]
    9c80:	vld1.8	{d16-d17}, [r1]!
    9c84:	vld1.8	{d18-d19}, [r1]
    9c88:	add	r1, r4, #16
    9c8c:	vst1.64	{d18-d19}, [r1]
    9c90:	movw	r1, #18758	; 0x4946
    9c94:	movt	r1, #17740	; 0x454c
    9c98:	str	r1, [sp, #272]	; 0x110
    9c9c:	movw	r1, #16723	; 0x4153
    9ca0:	movt	r1, #8275	; 0x2053
    9ca4:	str	r1, [sp, #268]	; 0x10c
    9ca8:	movw	r1, #20300	; 0x4f4c
    9cac:	movt	r1, #8263	; 0x2047
    9cb0:	str	r1, [sp, #344]	; 0x158
    9cb4:	movw	r1, #16707	; 0x4143
    9cb8:	movt	r1, #16724	; 0x4154
    9cbc:	str	r1, [sp, #340]	; 0x154
    9cc0:	mov	r1, #49	; 0x31
    9cc4:	strb	r1, [sp, #223]	; 0xdf
    9cc8:	mov	r1, #20
    9ccc:	strb	r1, [sp, #254]	; 0xfe
    9cd0:	strb	r0, [sp, #221]	; 0xdd
    9cd4:	mov	r0, #8
    9cd8:	mov	r1, sp
    9cdc:	vst1.64	{d16-d17}, [r4], r0
    9ce0:	movw	r0, #156	; 0x9c
    9ce4:	ldr	r2, [r4], #4
    9ce8:	subs	r0, r0, #4
    9cec:	str	r2, [r1], #4
    9cf0:	bne	9ce4 <sas7bcat_begin_data+0x33c>
    9cf4:	ldr	r2, [sp, #184]	; 0xb8
    9cf8:	ldr	r3, [sp, #188]	; 0xbc
    9cfc:	mov	r0, r5
    9d00:	mov	r1, r8
    9d04:	bl	4aa8 <sas_write_header@plt>
    9d08:	mov	r6, r0
    9d0c:	cmp	r0, #0
    9d10:	bne	9eb8 <sas7bcat_begin_data+0x510>
    9d14:	ldr	r0, [sp, #164]	; 0xa4
    9d18:	ldr	r1, [r0]
    9d1c:	mov	r0, r5
    9d20:	bl	4a0c <readstat_write_zeros@plt>
    9d24:	mov	r6, r0
    9d28:	cmp	r0, #0
    9d2c:	bne	9eb8 <sas7bcat_begin_data+0x510>
    9d30:	ldr	r0, [sp, #164]	; 0xa4
    9d34:	ldr	r6, [sp, #160]	; 0xa0
    9d38:	mov	r1, #0
    9d3c:	mov	sl, r7
    9d40:	mov	r4, #0
    9d44:	ldr	r2, [r0]
    9d48:	mov	r0, r6
    9d4c:	bl	4c70 <memset@plt>
    9d50:	ldr	r0, [r5, #40]	; 0x28
    9d54:	mov	r1, r6
    9d58:	cmp	r0, #1
    9d5c:	blt	9dc0 <sas7bcat_begin_data+0x418>
    9d60:	movw	lr, #19544	; 0x4c58
    9d64:	add	r7, r1, #856	; 0x358
    9d68:	mov	r0, #16
    9d6c:	mov	ip, #4
    9d70:	mov	r3, #79	; 0x4f
    9d74:	movt	lr, #21075	; 0x5253
    9d78:	ldr	r2, [sp, #164]	; 0xa4
    9d7c:	ldr	r6, [r2]
    9d80:	add	r2, r1, r6
    9d84:	add	r6, r7, #212	; 0xd4
    9d88:	cmp	r6, r2
    9d8c:	bhi	9dc0 <sas7bcat_begin_data+0x418>
    9d90:	strh	ip, [r7, #4]
    9d94:	str	lr, [r7]
    9d98:	strh	r0, [r7, #8]
    9d9c:	strb	r3, [r7, #50]	; 0x32
    9da0:	ldr	r7, [sl, r4, lsl #2]
    9da4:	add	r4, r4, #1
    9da8:	ldrh	r7, [r7]
    9dac:	add	r0, r0, r7
    9db0:	ldr	r7, [r5, #40]	; 0x28
    9db4:	cmp	r4, r7
    9db8:	mov	r7, r6
    9dbc:	blt	9d78 <sas7bcat_begin_data+0x3d0>
    9dc0:	ldr	r0, [sp, #164]	; 0xa4
    9dc4:	ldr	r2, [r0]
    9dc8:	mov	r0, r5
    9dcc:	bl	4e20 <readstat_write_bytes@plt>
    9dd0:	mov	r6, r0
    9dd4:	cmp	r0, #0
    9dd8:	mov	r7, sl
    9ddc:	bne	9eb8 <sas7bcat_begin_data+0x510>
    9de0:	ldr	r0, [sp, #164]	; 0xa4
    9de4:	ldr	r1, [r0]
    9de8:	mov	r0, r5
    9dec:	bl	4a0c <readstat_write_zeros@plt>
    9df0:	mov	r6, r0
    9df4:	cmp	r0, #0
    9df8:	bne	9eb8 <sas7bcat_begin_data+0x510>
    9dfc:	ldr	r0, [sp, #164]	; 0xa4
    9e00:	mov	r1, #0
    9e04:	mov	r4, #0
    9e08:	ldr	r2, [r0]
    9e0c:	ldr	r0, [sp, #160]	; 0xa0
    9e10:	bl	4c70 <memset@plt>
    9e14:	ldr	r8, [r5, #40]	; 0x28
    9e18:	str	r5, [sp, #172]	; 0xac
    9e1c:	cmp	r8, #1
    9e20:	blt	9e94 <sas7bcat_begin_data+0x4ec>
    9e24:	mov	r1, #16
    9e28:	mov	r6, #0
    9e2c:	ldr	r7, [sl, r6, lsl #2]
    9e30:	ldr	r3, [sp, #164]	; 0xa4
    9e34:	sxth	r1, r1
    9e38:	add	r5, r1, #16
    9e3c:	ldr	r0, [r7]
    9e40:	ldm	r3, {r3, r9}
    9e44:	add	r2, r0, r5
    9e48:	subs	r2, r3, r2
    9e4c:	sbcs	r2, r9, #0
    9e50:	blt	9e94 <sas7bcat_begin_data+0x4ec>
    9e54:	ldr	r3, [sp, #160]	; 0xa0
    9e58:	mov	r2, r3
    9e5c:	str	r4, [r2, r1]!
    9e60:	mov	r1, r7
    9e64:	str	r4, [r2, #12]
    9e68:	str	r4, [r2, #8]
    9e6c:	strh	r4, [r2, #4]
    9e70:	strh	r0, [r2, #6]
    9e74:	sxtah	r0, r3, r5
    9e78:	ldr	r2, [r1], #4
    9e7c:	bl	4910 <memcpy@plt>
    9e80:	ldr	r0, [r7]
    9e84:	add	r6, r6, #1
    9e88:	cmp	r6, r8
    9e8c:	sxtah	r1, r0, r5
    9e90:	blt	9e2c <sas7bcat_begin_data+0x484>
    9e94:	ldr	r0, [sp, #164]	; 0xa4
    9e98:	ldr	r5, [sp, #172]	; 0xac
    9e9c:	ldr	r1, [sp, #160]	; 0xa0
    9ea0:	ldr	r2, [r0]
    9ea4:	mov	r0, r5
    9ea8:	bl	4e20 <readstat_write_bytes@plt>
    9eac:	ldr	r8, [sp, #156]	; 0x9c
    9eb0:	mov	r6, r0
    9eb4:	mov	r7, sl
    9eb8:	ldr	r0, [r5, #40]	; 0x28
    9ebc:	cmp	r0, #1
    9ec0:	blt	9ee0 <sas7bcat_begin_data+0x538>
    9ec4:	mov	r4, #0
    9ec8:	ldr	r0, [r7, r4, lsl #2]
    9ecc:	bl	48bc <free@plt>
    9ed0:	ldr	r0, [r5, #40]	; 0x28
    9ed4:	add	r4, r4, #1
    9ed8:	cmp	r4, r0
    9edc:	blt	9ec8 <sas7bcat_begin_data+0x520>
    9ee0:	mov	r0, r7
    9ee4:	bl	48bc <free@plt>
    9ee8:	mov	r0, r8
    9eec:	bl	48bc <free@plt>
    9ef0:	ldr	r0, [sp, #160]	; 0xa0
    9ef4:	bl	48bc <free@plt>
    9ef8:	mov	r0, r6
    9efc:	sub	sp, fp, #28
    9f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9f04:	.word	0x0003a620

00009f08 <readstat_parse_sas7bdat>:
    9f08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f0c:	add	fp, sp, #28
    9f10:	sub	sp, sp, #4
    9f14:	vpush	{d8-d9}
    9f18:	sub	sp, sp, #160	; 0xa0
    9f1c:	ldr	r7, [r0, #32]
    9f20:	mov	r6, r1
    9f24:	mov	r4, r0
    9f28:	mov	r0, #1
    9f2c:	movw	r1, #2536	; 0x9e8
    9f30:	mov	r8, r2
    9f34:	bl	4778 <calloc@plt>
    9f38:	mov	sl, r0
    9f3c:	mov	r0, #1
    9f40:	mov	r1, #152	; 0x98
    9f44:	bl	4778 <calloc@plt>
    9f48:	mov	r9, r0
    9f4c:	add	r0, r4, #16
    9f50:	mov	r2, r4
    9f54:	mov	r1, #48	; 0x30
    9f58:	add	r4, r4, #36	; 0x24
    9f5c:	vld1.32	{d16-d17}, [r0]
    9f60:	vld1.32	{d18-d19}, [r2], r1
    9f64:	add	r0, sl, #16
    9f68:	mov	r1, sl
    9f6c:	vst1.32	{d16-d17}, [r0]
    9f70:	mov	r0, #84	; 0x54
    9f74:	vst1.32	{d18-d19}, [r1], r0
    9f78:	ldm	r4, {r0, r3, r4}
    9f7c:	str	r8, [sl, #52]	; 0x34
    9f80:	str	r7, [sl, #56]	; 0x38
    9f84:	str	r0, [sl, #200]	; 0xc8
    9f88:	str	r3, [sl, #204]	; 0xcc
    9f8c:	str	r4, [r1]
    9f90:	ldr	r0, [r2]
    9f94:	cmp	r0, #1
    9f98:	strge	r0, [sl, #88]	; 0x58
    9f9c:	mov	r0, r6
    9fa0:	ldr	r2, [r7]
    9fa4:	ldr	r1, [r7, #20]
    9fa8:	blx	r2
    9fac:	cmn	r0, #1
    9fb0:	beq	a058 <readstat_parse_sas7bdat+0x150>
    9fb4:	ldr	r3, [r7, #8]
    9fb8:	ldr	r2, [r7, #20]
    9fbc:	mov	r0, #0
    9fc0:	mov	r1, #2
    9fc4:	blx	r3
    9fc8:	mov	r5, sl
    9fcc:	asr	r1, r0, #31
    9fd0:	cmn	r0, #1
    9fd4:	str	r0, [r5, #32]!
    9fd8:	str	r1, [r5, #4]
    9fdc:	beq	a064 <readstat_parse_sas7bdat+0x15c>
    9fe0:	ldr	r3, [r7, #8]
    9fe4:	ldr	r2, [r7, #20]
    9fe8:	mov	r0, #0
    9fec:	mov	r1, #0
    9ff0:	blx	r3
    9ff4:	mov	r6, sl
    9ff8:	cmn	r0, #1
    9ffc:	ldr	r4, [r6, #24]!
    a000:	beq	a0b0 <readstat_parse_sas7bdat+0x1a8>
    a004:	mov	r0, r7
    a008:	mov	r1, r9
    a00c:	mov	r2, r4
    a010:	mov	r3, r8
    a014:	str	r5, [fp, #-88]	; 0xffffffa8
    a018:	str	r9, [fp, #-76]	; 0xffffffb4
    a01c:	bl	4d6c <sas_read_header@plt>
    a020:	mov	r5, r0
    a024:	cmp	r0, #0
    a028:	beq	a270 <readstat_parse_sas7bdat+0x368>
    a02c:	ldr	r1, [r7, #4]
    a030:	ldr	r0, [r7, #20]
    a034:	blx	r1
    a038:	cmp	r5, #15
    a03c:	bhi	a4d8 <readstat_parse_sas7bdat+0x5d0>
    a040:	ldr	r9, [fp, #-76]	; 0xffffffb4
    a044:	mov	r0, #1
    a048:	movw	r1, #32774	; 0x8006
    a04c:	tst	r1, r0, lsl r5
    a050:	bne	a104 <readstat_parse_sas7bdat+0x1fc>
    a054:	b	a168 <readstat_parse_sas7bdat+0x260>
    a058:	add	r6, sl, #24
    a05c:	mov	r5, #1
    a060:	b	a0f8 <readstat_parse_sas7bdat+0x1f0>
    a064:	mov	r5, r9
    a068:	mov	r9, sl
    a06c:	ldr	r6, [r9, #24]!
    a070:	cmp	r6, #0
    a074:	beq	a0a0 <readstat_parse_sas7bdat+0x198>
    a078:	ldr	r1, [pc, #3952]	; aff0 <readstat_parse_sas7bdat+0x10e8>
    a07c:	movw	r0, #481	; 0x1e1
    a080:	mov	r2, #40	; 0x28
    a084:	add	r4, sl, r0
    a088:	mov	r0, r4
    a08c:	add	r1, pc, r1
    a090:	bl	4910 <memcpy@plt>
    a094:	ldr	r1, [sl, #52]	; 0x34
    a098:	mov	r0, r4
    a09c:	blx	r6
    a0a0:	mov	r6, r9
    a0a4:	mov	r9, r5
    a0a8:	mov	r5, #15
    a0ac:	b	a0f8 <readstat_parse_sas7bdat+0x1f0>
    a0b0:	mov	r5, #15
    a0b4:	cmp	r4, #0
    a0b8:	beq	a0f8 <readstat_parse_sas7bdat+0x1f0>
    a0bc:	ldr	r1, [pc, #4044]	; b090 <readstat_parse_sas7bdat+0x1188>
    a0c0:	movw	r0, #481	; 0x1e1
    a0c4:	mov	r5, r7
    a0c8:	mov	r7, r6
    a0cc:	mov	r2, #46	; 0x2e
    a0d0:	add	r6, sl, r0
    a0d4:	mov	r0, r6
    a0d8:	add	r1, pc, r1
    a0dc:	bl	4910 <memcpy@plt>
    a0e0:	ldr	r1, [sl, #52]	; 0x34
    a0e4:	mov	r0, r6
    a0e8:	mov	r6, r7
    a0ec:	mov	r7, r5
    a0f0:	mov	r5, #15
    a0f4:	blx	r4
    a0f8:	ldr	r1, [r7, #4]
    a0fc:	ldr	r0, [r7, #20]
    a100:	blx	r1
    a104:	ldr	r0, [r6]
    a108:	cmp	r0, #0
    a10c:	beq	a168 <readstat_parse_sas7bdat+0x260>
    a110:	mov	r0, r5
    a114:	bl	4844 <readstat_error_message@plt>
    a118:	mov	r4, r0
    a11c:	bl	4c34 <__errno_location@plt>
    a120:	mov	r6, r0
    a124:	ldr	r0, [r0]
    a128:	bl	4b20 <strerror@plt>
    a12c:	ldr	r1, [r6]
    a130:	str	r5, [sp]
    a134:	mov	r3, r4
    a138:	stmib	sp, {r0, r1}
    a13c:	movw	r0, #481	; 0x1e1
    a140:	mov	r1, #2048	; 0x800
    a144:	ldr	r2, [pc, #4092]	; b148 <readstat_parse_sas7bdat+0x1240>
    a148:	add	r6, sl, r0
    a14c:	mov	r0, r6
    a150:	add	r2, pc, r2
    a154:	bl	4c4c <snprintf@plt>
    a158:	ldr	r2, [sl, #24]
    a15c:	mov	r0, r6
    a160:	mov	r1, r8
    a164:	blx	r2
    a168:	ldr	r0, [sl, #160]	; 0xa0
    a16c:	cmp	r0, #0
    a170:	beq	a1ac <readstat_parse_sas7bdat+0x2a4>
    a174:	ldr	r1, [sl, #152]	; 0x98
    a178:	cmp	r1, #1
    a17c:	blt	a1a0 <readstat_parse_sas7bdat+0x298>
    a180:	mov	r4, #0
    a184:	ldr	r0, [r0, r4, lsl #2]
    a188:	bl	48bc <free@plt>
    a18c:	ldr	r1, [sl, #152]	; 0x98
    a190:	ldr	r0, [sl, #160]	; 0xa0
    a194:	add	r4, r4, #1
    a198:	cmp	r4, r1
    a19c:	blt	a184 <readstat_parse_sas7bdat+0x27c>
    a1a0:	bl	48bc <free@plt>
    a1a4:	ldr	r0, [sl, #156]	; 0x9c
    a1a8:	bl	48bc <free@plt>
    a1ac:	ldr	r0, [sl, #196]	; 0xc4
    a1b0:	cmp	r0, #0
    a1b4:	beq	a1f4 <readstat_parse_sas7bdat+0x2ec>
    a1b8:	ldr	r2, [sl, #80]	; 0x50
    a1bc:	cmp	r2, #0
    a1c0:	beq	a1f0 <readstat_parse_sas7bdat+0x2e8>
    a1c4:	mov	r4, #0
    a1c8:	ldr	r1, [r0, r4, lsl #2]
    a1cc:	cmp	r1, #0
    a1d0:	beq	a1e4 <readstat_parse_sas7bdat+0x2dc>
    a1d4:	mov	r0, r1
    a1d8:	bl	48bc <free@plt>
    a1dc:	ldr	r2, [sl, #80]	; 0x50
    a1e0:	ldr	r0, [sl, #196]	; 0xc4
    a1e4:	add	r4, r4, #1
    a1e8:	cmp	r4, r2
    a1ec:	bcc	a1c8 <readstat_parse_sas7bdat+0x2c0>
    a1f0:	bl	48bc <free@plt>
    a1f4:	ldr	r0, [sl, #192]	; 0xc0
    a1f8:	cmp	r0, #0
    a1fc:	beq	a204 <readstat_parse_sas7bdat+0x2fc>
    a200:	bl	48bc <free@plt>
    a204:	ldr	r0, [sl, #180]	; 0xb4
    a208:	cmp	r0, #0
    a20c:	beq	a214 <readstat_parse_sas7bdat+0x30c>
    a210:	bl	48bc <free@plt>
    a214:	ldr	r0, [sl, #120]	; 0x78
    a218:	cmp	r0, #0
    a21c:	beq	a224 <readstat_parse_sas7bdat+0x31c>
    a220:	bl	48bc <free@plt>
    a224:	ldr	r0, [sl, #124]	; 0x7c
    a228:	cmp	r0, #0
    a22c:	beq	a234 <readstat_parse_sas7bdat+0x32c>
    a230:	bl	48bc <free@plt>
    a234:	ldr	r0, [sl, #208]	; 0xd0
    a238:	cmp	r0, #0
    a23c:	beq	a244 <readstat_parse_sas7bdat+0x33c>
    a240:	bl	47d8 <iconv_close@plt>
    a244:	mov	r0, sl
    a248:	bl	48bc <free@plt>
    a24c:	cmp	r9, #0
    a250:	beq	a25c <readstat_parse_sas7bdat+0x354>
    a254:	mov	r0, r9
    a258:	bl	48bc <free@plt>
    a25c:	mov	r0, r5
    a260:	sub	sp, fp, #48	; 0x30
    a264:	vpop	{d8-d9}
    a268:	add	sp, sp, #4
    a26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a270:	ldr	r9, [fp, #-76]	; 0xffffffb4
    a274:	str	r7, [fp, #-96]	; 0xffffffa0
    a278:	str	r6, [fp, #-80]	; 0xffffffb0
    a27c:	str	r8, [fp, #-84]	; 0xffffffac
    a280:	add	r3, sl, #40	; 0x28
    a284:	ldm	r9, {r0, r1, r2}
    a288:	stm	r3, {r0, r1, r2}
    a28c:	bl	48b0 <machine_is_little_endian@plt>
    a290:	ldr	r1, [r9]
    a294:	add	lr, r9, #40	; 0x28
    a298:	ldr	r2, [r9, #68]	; 0x44
    a29c:	ldr	r3, [r9, #36]	; 0x24
    a2a0:	mov	r5, r9
    a2a4:	add	r5, sl, #96	; 0x60
    a2a8:	eor	r0, r1, r0
    a2ac:	ldr	r1, [r9, #64]	; 0x40
    a2b0:	str	r0, [sl, #60]	; 0x3c
    a2b4:	ldr	r0, [r9, #32]
    a2b8:	ldm	lr, {r7, r8, ip, lr}
    a2bc:	ldr	r4, [r9, #56]	; 0x38
    a2c0:	ldr	r6, [r9, #60]	; 0x3c
    a2c4:	stm	r5, {r1, r2, r4, r6}
    a2c8:	str	r3, [sl, #116]	; 0x74
    a2cc:	str	r0, [sl, #112]	; 0x70
    a2d0:	mov	r2, #8
    a2d4:	mov	r3, r9
    a2d8:	ldr	r1, [sl, #44]	; 0x2c
    a2dc:	str	r7, [sl, #128]	; 0x80
    a2e0:	str	r8, [sl, #132]	; 0x84
    a2e4:	cmp	r1, #0
    a2e8:	mov	r1, #0
    a2ec:	movweq	r2, #4
    a2f0:	str	r2, [sl, #136]	; 0x88
    a2f4:	add	r2, sl, #140	; 0x8c
    a2f8:	stm	r2, {r1, ip, lr}
    a2fc:	add	ip, sl, #212	; 0xd4
    a300:	ldr	r1, [r9, #72]	; 0x48
    a304:	ldr	r2, [r9, #76]	; 0x4c
    a308:	ldr	r3, [r9, #12]
    a30c:	stm	ip, {r1, r2, r3}
    a310:	ldr	r1, [sl, #200]	; 0xc8
    a314:	cmp	r1, #0
    a318:	ldreq	r1, [fp, #-76]	; 0xffffffb4
    a31c:	ldreq	r1, [r1, #144]	; 0x90
    a320:	streq	r1, [sl, #200]	; 0xc8
    a324:	bl	4bf8 <readstat_malloc@plt>
    a328:	cmp	r0, #0
    a32c:	str	r0, [sl, #120]	; 0x78
    a330:	beq	a4bc <readstat_parse_sas7bdat+0x5b4>
    a334:	ldr	r4, [sl, #200]	; 0xc8
    a338:	ldr	r8, [fp, #-84]	; 0xffffffac
    a33c:	cmp	r4, #0
    a340:	ldrne	r6, [sl, #204]	; 0xcc
    a344:	cmpne	r6, #0
    a348:	bne	a4e0 <readstat_parse_sas7bdat+0x5d8>
    a34c:	ldr	r0, [sl, #208]	; 0xd0
    a350:	ldr	r1, [fp, #-76]	; 0xffffffb4
    a354:	mov	r3, #64	; 0x40
    a358:	str	r0, [sp]
    a35c:	add	r2, r1, #80	; 0x50
    a360:	add	r0, sl, #224	; 0xe0
    a364:	movw	r1, #257	; 0x101
    a368:	bl	4c04 <readstat_convert@plt>
    a36c:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a370:	ldr	r7, [fp, #-96]	; 0xffffffa0
    a374:	mov	r5, r0
    a378:	cmp	r0, #0
    a37c:	bne	a02c <readstat_parse_sas7bdat+0x124>
    a380:	add	r0, sl, #104	; 0x68
    a384:	ldr	r2, [sl, #56]	; 0x38
    a388:	add	r4, sl, #112	; 0x70
    a38c:	add	r5, sl, #96	; 0x60
    a390:	str	r0, [sp, #88]	; 0x58
    a394:	ldrd	r0, [r0]
    a398:	str	r5, [sp, #96]	; 0x60
    a39c:	str	r4, [fp, #-100]	; 0xffffff9c
    a3a0:	orrs	r0, r0, r1
    a3a4:	beq	a510 <readstat_parse_sas7bdat+0x608>
    a3a8:	mov	r7, #0
    a3ac:	mov	r9, #0
    a3b0:	str	r2, [sp, #104]	; 0x68
    a3b4:	ldr	r0, [r5]
    a3b8:	ldr	r1, [r4]
    a3bc:	str	r7, [fp, #-92]	; 0xffffffa4
    a3c0:	ldr	r3, [r2, #8]
    a3c4:	mla	r0, r1, r7, r0
    a3c8:	mov	r7, r2
    a3cc:	ldr	r2, [r2, #20]
    a3d0:	mov	r1, #0
    a3d4:	blx	r3
    a3d8:	cmn	r0, #1
    a3dc:	beq	a530 <readstat_parse_sas7bdat+0x628>
    a3e0:	ldr	r1, [sl, #44]	; 0x2c
    a3e4:	ldr	r0, [sl, #120]	; 0x78
    a3e8:	mov	r8, #32
    a3ec:	ldr	r3, [r7, #12]
    a3f0:	ldr	r2, [r7, #20]
    a3f4:	ldr	r6, [r4]
    a3f8:	cmp	r1, #0
    a3fc:	movweq	r8, #16
    a400:	orr	r5, r8, #2
    a404:	mov	r1, r5
    a408:	blx	r3
    a40c:	mov	r1, #2
    a410:	cmp	r0, r5
    a414:	str	r1, [sp, #100]	; 0x64
    a418:	bcc	ae94 <readstat_parse_sas7bdat+0xf8c>
    a41c:	ldr	r0, [sl, #120]	; 0x78
    a420:	ldr	r1, [sl, #60]	; 0x3c
    a424:	add	r0, r0, r8
    a428:	bl	4d9c <sas_read2@plt>
    a42c:	and	r1, r0, #3840	; 0xf00
    a430:	cmp	r1, #256	; 0x100
    a434:	beq	a57c <readstat_parse_sas7bdat+0x674>
    a438:	ldr	r8, [fp, #-84]	; 0xffffffac
    a43c:	ldr	r7, [fp, #-92]	; 0xffffffa4
    a440:	tst	r0, #36864	; 0x9000
    a444:	bne	a48c <readstat_parse_sas7bdat+0x584>
    a448:	ldr	r1, [sp, #104]	; 0x68
    a44c:	ldr	r0, [sl, #120]	; 0x78
    a450:	sub	r6, r6, r5
    a454:	ldr	r3, [r1, #12]
    a458:	ldr	r2, [r1, #20]
    a45c:	add	r0, r0, r5
    a460:	mov	r1, r6
    a464:	blx	r3
    a468:	cmp	r0, r6
    a46c:	bcc	afd0 <readstat_parse_sas7bdat+0x10c8>
    a470:	ldr	r0, [fp, #-100]	; 0xffffff9c
    a474:	mov	r2, sl
    a478:	ldr	r1, [r0]
    a47c:	ldr	r0, [sl, #120]	; 0x78
    a480:	bl	b5d8 <sas7bdat_parse_page_pass1>
    a484:	cmp	r0, #0
    a488:	bne	aff4 <readstat_parse_sas7bdat+0x10ec>
    a48c:	ldr	r0, [sp, #88]	; 0x58
    a490:	adds	r7, r7, #1
    a494:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a498:	ldr	r5, [sp, #96]	; 0x60
    a49c:	ldr	r4, [fp, #-100]	; 0xffffff9c
    a4a0:	adc	r9, r9, #0
    a4a4:	ldrd	r0, [r0]
    a4a8:	subs	r2, r7, r0
    a4ac:	sbcs	r2, r9, r1
    a4b0:	ldr	r2, [sp, #104]	; 0x68
    a4b4:	bcc	a3b4 <readstat_parse_sas7bdat+0x4ac>
    a4b8:	b	a598 <readstat_parse_sas7bdat+0x690>
    a4bc:	mov	r5, #3
    a4c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    a4c4:	ldr	r9, [fp, #-76]	; 0xffffffb4
    a4c8:	ldr	r1, [r0, #4]
    a4cc:	ldr	r0, [r0, #20]
    a4d0:	blx	r1
    a4d4:	b	a168 <readstat_parse_sas7bdat+0x260>
    a4d8:	ldr	r9, [fp, #-76]	; 0xffffffb4
    a4dc:	b	a168 <readstat_parse_sas7bdat+0x260>
    a4e0:	mov	r0, r4
    a4e4:	mov	r1, r6
    a4e8:	bl	4808 <strcmp@plt>
    a4ec:	cmp	r0, #0
    a4f0:	beq	a34c <readstat_parse_sas7bdat+0x444>
    a4f4:	mov	r0, r6
    a4f8:	mov	r1, r4
    a4fc:	bl	4b14 <iconv_open@plt>
    a500:	cmn	r0, #1
    a504:	beq	a528 <readstat_parse_sas7bdat+0x620>
    a508:	str	r0, [sl, #208]	; 0xd0
    a50c:	b	a34c <readstat_parse_sas7bdat+0x444>
    a510:	mov	ip, r5
    a514:	mov	r0, #0
    a518:	mov	r1, #0
    a51c:	mov	r7, #0
    a520:	mov	r9, #0
    a524:	b	a5a0 <readstat_parse_sas7bdat+0x698>
    a528:	mov	r5, #7
    a52c:	b	a4c0 <readstat_parse_sas7bdat+0x5b8>
    a530:	ldr	r0, [r6]
    a534:	mov	r1, #15
    a538:	str	r1, [sp, #100]	; 0x64
    a53c:	cmp	r0, #0
    a540:	beq	afd0 <readstat_parse_sas7bdat+0x10c8>
    a544:	ldr	r2, [fp, #-100]	; 0xffffff9c
    a548:	ldrd	r0, [r5]
    a54c:	ldr	r5, [fp, #-92]	; 0xffffffa4
    a550:	add	ip, sp, #8
    a554:	ldrd	r2, [r2]
    a558:	umull	r6, r4, r2, r5
    a55c:	mla	r4, r2, r9, r4
    a560:	adds	r6, r6, r0
    a564:	mla	r4, r3, r5, r4
    a568:	str	r6, [sp]
    a56c:	adc	r4, r4, r1
    a570:	str	r4, [sp, #4]
    a574:	stm	ip, {r0, r1, r5, r9}
    a578:	b	af9c <readstat_parse_sas7bdat+0x1094>
    a57c:	ldr	r0, [sp, #88]	; 0x58
    a580:	ldr	r8, [fp, #-84]	; 0xffffffac
    a584:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a588:	ldr	r5, [sp, #96]	; 0x60
    a58c:	ldr	r4, [fp, #-100]	; 0xffffff9c
    a590:	ldr	r7, [fp, #-92]	; 0xffffffa4
    a594:	ldrd	r0, [r0]
    a598:	ldr	r2, [sl, #56]	; 0x38
    a59c:	mov	ip, r5
    a5a0:	subs	r3, r0, #1
    a5a4:	sbc	r5, r1, #0
    a5a8:	subs	r0, r7, r3
    a5ac:	sbcs	r0, r9, r5
    a5b0:	bcs	a750 <readstat_parse_sas7bdat+0x848>
    a5b4:	mov	r0, #0
    a5b8:	str	r2, [sp, #104]	; 0x68
    a5bc:	str	r7, [fp, #-92]	; 0xffffffa4
    a5c0:	str	r0, [sp, #80]	; 0x50
    a5c4:	mov	r0, #0
    a5c8:	str	r0, [sp, #76]	; 0x4c
    a5cc:	ldr	r0, [ip]
    a5d0:	ldr	r1, [r4]
    a5d4:	str	r3, [sp, #92]	; 0x5c
    a5d8:	mov	r7, r2
    a5dc:	str	r5, [sp, #84]	; 0x54
    a5e0:	mov	r5, ip
    a5e4:	mla	r0, r1, r3, r0
    a5e8:	ldr	r3, [r2, #8]
    a5ec:	ldr	r2, [r2, #20]
    a5f0:	mov	r1, #0
    a5f4:	blx	r3
    a5f8:	cmn	r0, #1
    a5fc:	beq	af50 <readstat_parse_sas7bdat+0x1048>
    a600:	ldr	r1, [sl, #44]	; 0x2c
    a604:	ldr	r0, [sl, #120]	; 0x78
    a608:	mov	r6, #32
    a60c:	ldr	r3, [r7, #12]
    a610:	ldr	r2, [r7, #20]
    a614:	ldr	r8, [r4]
    a618:	cmp	r1, #0
    a61c:	movweq	r6, #16
    a620:	orr	r5, r6, #2
    a624:	mov	r1, r5
    a628:	blx	r3
    a62c:	mov	r1, #2
    a630:	cmp	r0, r5
    a634:	str	r1, [sp, #100]	; 0x64
    a638:	bcc	ae94 <readstat_parse_sas7bdat+0xf8c>
    a63c:	ldr	r0, [sl, #120]	; 0x78
    a640:	ldr	r1, [sl, #60]	; 0x3c
    a644:	add	r0, r0, r6
    a648:	bl	4d9c <sas_read2@plt>
    a64c:	and	r1, r0, #3840	; 0xf00
    a650:	cmp	r1, #256	; 0x100
    a654:	bne	a69c <readstat_parse_sas7bdat+0x794>
    a658:	ldr	r0, [sp, #80]	; 0x50
    a65c:	ldr	r1, [sp, #76]	; 0x4c
    a660:	ldr	r8, [fp, #-84]	; 0xffffffac
    a664:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a668:	ldr	ip, [sp, #96]	; 0x60
    a66c:	ldr	r4, [fp, #-100]	; 0xffffff9c
    a670:	ldr	r2, [sp, #104]	; 0x68
    a674:	ldr	r7, [fp, #-92]	; 0xffffffa4
    a678:	ldr	r5, [sp, #84]	; 0x54
    a67c:	ldr	r3, [sp, #92]	; 0x5c
    a680:	orrs	r0, r0, r1
    a684:	mov	r0, #0
    a688:	str	r0, [sp, #80]	; 0x50
    a68c:	mov	r0, #0
    a690:	str	r0, [sp, #76]	; 0x4c
    a694:	beq	a73c <readstat_parse_sas7bdat+0x834>
    a698:	b	a750 <readstat_parse_sas7bdat+0x848>
    a69c:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a6a0:	ldr	r2, [sp, #104]	; 0x68
    a6a4:	ldr	r7, [fp, #-92]	; 0xffffffa4
    a6a8:	ldr	r3, [sp, #92]	; 0x5c
    a6ac:	tst	r0, #36864	; 0x9000
    a6b0:	beq	a6c8 <readstat_parse_sas7bdat+0x7c0>
    a6b4:	ldr	r8, [fp, #-84]	; 0xffffffac
    a6b8:	ldr	ip, [sp, #96]	; 0x60
    a6bc:	ldr	r4, [fp, #-100]	; 0xffffff9c
    a6c0:	ldr	r5, [sp, #84]	; 0x54
    a6c4:	b	a73c <readstat_parse_sas7bdat+0x834>
    a6c8:	ldr	r0, [sl, #120]	; 0x78
    a6cc:	ldr	r3, [r2, #12]
    a6d0:	ldr	r2, [r2, #20]
    a6d4:	sub	r4, r8, r5
    a6d8:	mov	r1, r4
    a6dc:	add	r0, r0, r5
    a6e0:	blx	r3
    a6e4:	ldr	r8, [fp, #-84]	; 0xffffffac
    a6e8:	ldr	r5, [sp, #84]	; 0x54
    a6ec:	cmp	r0, r4
    a6f0:	bcc	afd0 <readstat_parse_sas7bdat+0x10c8>
    a6f4:	ldr	r0, [fp, #-100]	; 0xffffff9c
    a6f8:	mov	r2, sl
    a6fc:	mov	r4, r0
    a700:	ldr	r1, [r0]
    a704:	ldr	r0, [sl, #120]	; 0x78
    a708:	bl	b5d8 <sas7bdat_parse_page_pass1>
    a70c:	ldr	ip, [sp, #96]	; 0x60
    a710:	cmp	r0, #0
    a714:	bne	b094 <readstat_parse_sas7bdat+0x118c>
    a718:	ldr	r0, [sp, #80]	; 0x50
    a71c:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a720:	ldr	r2, [sp, #104]	; 0x68
    a724:	ldr	r3, [sp, #92]	; 0x5c
    a728:	adds	r0, r0, #1
    a72c:	str	r0, [sp, #80]	; 0x50
    a730:	ldr	r0, [sp, #76]	; 0x4c
    a734:	adc	r0, r0, #0
    a738:	str	r0, [sp, #76]	; 0x4c
    a73c:	subs	r3, r3, #1
    a740:	sbc	r5, r5, #0
    a744:	subs	r0, r7, r3
    a748:	sbcs	r0, r9, r5
    a74c:	bcc	a5cc <readstat_parse_sas7bdat+0x6c4>
    a750:	ldr	r1, [fp, #-96]	; 0xffffffa0
    a754:	ldr	r0, [ip]
    a758:	mov	r5, ip
    a75c:	ldr	r3, [r1, #8]
    a760:	ldr	r2, [r1, #20]
    a764:	mov	r1, #0
    a768:	blx	r3
    a76c:	cmn	r0, #1
    a770:	beq	ae9c <readstat_parse_sas7bdat+0xf94>
    a774:	ldr	r0, [sp, #88]	; 0x58
    a778:	ldrd	r0, [r0]
    a77c:	orrs	r0, r0, r1
    a780:	beq	aee8 <readstat_parse_sas7bdat+0xfe0>
    a784:	ldr	r3, [sl, #56]	; 0x38
    a788:	ldr	r0, [fp, #-88]	; 0xffffffa8
    a78c:	ldr	r2, [sl, #52]	; 0x34
    a790:	ldr	r1, [sl, #28]
    a794:	ldr	r0, [r0]
    a798:	ldr	r6, [r3, #16]
    a79c:	str	r3, [sp, #92]	; 0x5c
    a7a0:	ldr	r3, [r3, #20]
    a7a4:	blx	r6
    a7a8:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a7ac:	ldr	r7, [fp, #-96]	; 0xffffffa0
    a7b0:	mov	r5, r0
    a7b4:	cmp	r0, #0
    a7b8:	bne	a02c <readstat_parse_sas7bdat+0x124>
    a7bc:	add	r0, sl, #144	; 0x90
    a7c0:	vmov.i32	q4, #0	; 0x00000000
    a7c4:	mov	r9, #0
    a7c8:	str	r0, [sp, #60]	; 0x3c
    a7cc:	add	r0, sl, #128	; 0x80
    a7d0:	str	r0, [sp, #72]	; 0x48
    a7d4:	sub	r0, fp, #72	; 0x48
    a7d8:	add	r0, r0, #8
    a7dc:	str	r0, [sp, #76]	; 0x4c
    a7e0:	mov	r0, #0
    a7e4:	str	r0, [sp, #104]	; 0x68
    a7e8:	ldr	r7, [fp, #-100]	; 0xffffff9c
    a7ec:	ldr	r2, [sp, #92]	; 0x5c
    a7f0:	ldr	r0, [sl, #120]	; 0x78
    a7f4:	ldr	r3, [r2, #12]
    a7f8:	ldr	r1, [r7]
    a7fc:	ldr	r2, [r2, #20]
    a800:	blx	r3
    a804:	ldr	r2, [r7]
    a808:	ldr	r1, [r7, #4]
    a80c:	str	r2, [sp, #96]	; 0x60
    a810:	subs	r2, r0, r2
    a814:	rscs	r0, r1, r0, asr #31
    a818:	bcc	b14c <readstat_parse_sas7bdat+0x1244>
    a81c:	ldr	r4, [sp, #72]	; 0x48
    a820:	ldr	r6, [sl, #120]	; 0x78
    a824:	ldr	r1, [sl, #60]	; 0x3c
    a828:	ldr	r0, [r4]
    a82c:	add	r0, r6, r0
    a830:	sub	r0, r0, #8
    a834:	bl	4d9c <sas_read2@plt>
    a838:	and	r5, r0, #3840	; 0xf00
    a83c:	cmp	r5, #256	; 0x100
    a840:	bne	a904 <readstat_parse_sas7bdat+0x9fc>
    a844:	ldr	r0, [r4]
    a848:	ldr	r1, [sl, #60]	; 0x3c
    a84c:	add	r0, r6, r0
    a850:	sub	r0, r0, #6
    a854:	bl	4d9c <sas_read2@plt>
    a858:	str	r0, [sl, #72]	; 0x48
    a85c:	ldr	r0, [r4]
    a860:	add	r0, r6, r0
    a864:	cmp	r0, #0
    a868:	beq	a90c <readstat_parse_sas7bdat+0xa04>
    a86c:	mov	r5, r0
    a870:	mov	r0, sl
    a874:	mov	r1, #0
    a878:	bl	b294 <sas7bdat_submit_columns_if_needed>
    a87c:	cmp	r0, #0
    a880:	bne	b15c <readstat_parse_sas7bdat+0x1254>
    a884:	ldr	r0, [sl, #16]
    a888:	cmp	r0, #0
    a88c:	ldrne	r0, [sl, #72]	; 0x48
    a890:	cmpne	r0, #0
    a894:	beq	a90c <readstat_parse_sas7bdat+0xa04>
    a898:	ldr	r0, [sp, #96]	; 0x60
    a89c:	mov	r2, r5
    a8a0:	mov	r4, #0
    a8a4:	add	r0, r6, r0
    a8a8:	mov	r6, #0
    a8ac:	sub	r8, r0, r5
    a8b0:	ldr	r0, [sl, #76]	; 0x4c
    a8b4:	ldr	r1, [sl, #84]	; 0x54
    a8b8:	cmp	r0, r1
    a8bc:	bcs	a90c <readstat_parse_sas7bdat+0xa04>
    a8c0:	ldr	r0, [sl, #68]	; 0x44
    a8c4:	add	r0, r0, r6
    a8c8:	cmp	r0, r8
    a8cc:	bhi	b158 <readstat_parse_sas7bdat+0x1250>
    a8d0:	add	r0, r2, r6
    a8d4:	mov	r1, sl
    a8d8:	bl	bfd0 <sas7bdat_parse_single_row>
    a8dc:	cmp	r0, #0
    a8e0:	bne	b15c <readstat_parse_sas7bdat+0x1254>
    a8e4:	ldr	r0, [sl, #68]	; 0x44
    a8e8:	ldr	r1, [sl, #72]	; 0x48
    a8ec:	add	r4, r4, #1
    a8f0:	mov	r2, r5
    a8f4:	add	r6, r0, r6
    a8f8:	cmp	r4, r1
    a8fc:	bcc	a8b0 <readstat_parse_sas7bdat+0x9a8>
    a900:	b	a90c <readstat_parse_sas7bdat+0xa04>
    a904:	tst	r0, #36864	; 0x9000
    a908:	beq	a97c <readstat_parse_sas7bdat+0xa74>
    a90c:	ldr	r0, [sl, #76]	; 0x4c
    a910:	ldr	r1, [sl, #84]	; 0x54
    a914:	ldr	r8, [fp, #-84]	; 0xffffffac
    a918:	cmp	r0, r1
    a91c:	beq	aee8 <readstat_parse_sas7bdat+0xfe0>
    a920:	ldr	r0, [sp, #88]	; 0x58
    a924:	ldr	r2, [sp, #104]	; 0x68
    a928:	adds	r9, r9, #1
    a92c:	ldrd	r0, [r0]
    a930:	adc	r2, r2, #0
    a934:	str	r2, [sp, #104]	; 0x68
    a938:	subs	r0, r9, r0
    a93c:	sbcs	r0, r2, r1
    a940:	bcs	aee8 <readstat_parse_sas7bdat+0xfe0>
    a944:	ldr	r0, [fp, #-88]	; 0xffffffa8
    a948:	ldr	r3, [sl, #56]	; 0x38
    a94c:	ldr	r1, [sl, #28]
    a950:	ldr	r2, [sl, #52]	; 0x34
    a954:	ldr	r6, [r3, #16]
    a958:	ldr	r0, [r0]
    a95c:	ldr	r3, [r3, #20]
    a960:	blx	r6
    a964:	ldr	r6, [fp, #-80]	; 0xffffffb0
    a968:	ldr	r7, [fp, #-96]	; 0xffffffa0
    a96c:	mov	r5, r0
    a970:	cmp	r0, #0
    a974:	beq	a7e8 <readstat_parse_sas7bdat+0x8e0>
    a978:	b	a02c <readstat_parse_sas7bdat+0x124>
    a97c:	ldr	r4, [sp, #72]	; 0x48
    a980:	ldr	r1, [sl, #60]	; 0x3c
    a984:	str	r5, [sp, #40]	; 0x28
    a988:	ldr	r0, [r4]
    a98c:	add	r0, r6, r0
    a990:	sub	r0, r0, #4
    a994:	bl	4d9c <sas_read2@plt>
    a998:	mov	r5, r0
    a99c:	ldr	r0, [sp, #60]	; 0x3c
    a9a0:	ldr	r0, [r0]
    a9a4:	str	r0, [sp, #64]	; 0x40
    a9a8:	mul	r1, r0, r5
    a9ac:	ldm	r4, {r0, r3}
    a9b0:	adds	r2, r0, r1
    a9b4:	adc	r1, r3, r1, asr #31
    a9b8:	ldr	r3, [sp, #96]	; 0x60
    a9bc:	subs	r2, r3, r2
    a9c0:	rscs	r1, r1, #0
    a9c4:	bcc	b214 <readstat_parse_sas7bdat+0x130c>
    a9c8:	add	r0, r6, r0
    a9cc:	cmp	r5, #0
    a9d0:	str	r9, [sp, #44]	; 0x2c
    a9d4:	beq	ae34 <readstat_parse_sas7bdat+0xf2c>
    a9d8:	ldr	r1, [sp, #96]	; 0x60
    a9dc:	mov	r4, #0
    a9e0:	str	r6, [sp, #80]	; 0x50
    a9e4:	str	r5, [sp, #84]	; 0x54
    a9e8:	add	r1, r6, r1
    a9ec:	str	r1, [sp, #68]	; 0x44
    a9f0:	add	r1, r6, #4
    a9f4:	str	r1, [sp, #36]	; 0x24
    a9f8:	sub	r2, fp, #72	; 0x48
    a9fc:	mov	r1, #20
    aa00:	mov	r9, r0
    aa04:	mov	r3, r2
    aa08:	vst1.64	{d8-d9}, [r3], r1
    aa0c:	mov	r1, #0
    aa10:	str	r1, [r3]
    aa14:	str	r1, [fp, #-56]	; 0xffffffc8
    aa18:	ldr	r1, [sp, #68]	; 0x44
    aa1c:	mov	r3, sl
    aa20:	sub	r1, r1, r0
    aa24:	bl	b7a4 <sas7bdat_parse_subheader_pointer>
    aa28:	cmp	r0, #0
    aa2c:	bne	b168 <readstat_parse_sas7bdat+0x1260>
    aa30:	ldr	r0, [sp, #76]	; 0x4c
    aa34:	str	r4, [fp, #-92]	; 0xffffffa4
    aa38:	ldr	r8, [r0]
    aa3c:	ldr	r4, [r0, #4]
    aa40:	orrs	r0, r8, r4
    aa44:	ldrbne	r6, [fp, #-56]	; 0xffffffc8
    aa48:	cmpne	r6, #1
    aa4c:	bne	aa78 <readstat_parse_sas7bdat+0xb70>
    aa50:	ldr	r4, [fp, #-92]	; 0xffffffa4
    aa54:	ldr	r1, [sp, #64]	; 0x40
    aa58:	ldr	r5, [sp, #84]	; 0x54
    aa5c:	ldr	r6, [sp, #80]	; 0x50
    aa60:	mov	r0, r9
    aa64:	add	r4, r4, #1
    aa68:	add	r0, r9, r1
    aa6c:	cmp	r4, r5
    aa70:	bcc	a9f8 <readstat_parse_sas7bdat+0xaf0>
    aa74:	b	ae34 <readstat_parse_sas7bdat+0xf2c>
    aa78:	ldr	r1, [sp, #96]	; 0x60
    aa7c:	ldr	r2, [sp, #84]	; 0x54
    aa80:	sub	r0, fp, #72	; 0x48
    aa84:	mov	r3, sl
    aa88:	bl	b84c <sas7bdat_validate_subheader_pointer>
    aa8c:	cmp	r0, #0
    aa90:	bne	b168 <readstat_parse_sas7bdat+0x1260>
    aa94:	cmp	r6, #4
    aa98:	beq	ab0c <readstat_parse_sas7bdat+0xc04>
    aa9c:	cmp	r6, #0
    aaa0:	bne	b164 <readstat_parse_sas7bdat+0x125c>
    aaa4:	ldr	r6, [fp, #-72]	; 0xffffffb8
    aaa8:	ldr	r0, [sp, #80]	; 0x50
    aaac:	ldr	r1, [sl, #60]	; 0x3c
    aab0:	add	r5, r0, r6
    aab4:	mov	r0, r5
    aab8:	bl	4dc0 <sas_read4@plt>
    aabc:	cmn	r0, #1
    aac0:	ldreq	r1, [sl, #40]	; 0x28
    aac4:	cmpeq	r1, #0
    aac8:	beq	abc4 <readstat_parse_sas7bdat+0xcbc>
    aacc:	ldrb	r1, [fp, #-55]	; 0xffffffc9
    aad0:	cmp	r1, #0
    aad4:	beq	ac48 <readstat_parse_sas7bdat+0xd40>
    aad8:	movw	r1, #64509	; 0xfbfd
    aadc:	movt	r1, #65535	; 0xffff
    aae0:	cmp	r0, r1
    aae4:	bgt	abe4 <readstat_parse_sas7bdat+0xcdc>
    aae8:	movw	r1, #63222	; 0xf6f6
    aaec:	movt	r1, #63222	; 0xf6f6
    aaf0:	cmp	r0, r1
    aaf4:	beq	ac50 <readstat_parse_sas7bdat+0xd48>
    aaf8:	movw	r1, #63479	; 0xf7f7
    aafc:	movt	r1, #63479	; 0xf7f7
    ab00:	cmp	r0, r1
    ab04:	beq	ac50 <readstat_parse_sas7bdat+0xd48>
    ab08:	b	abf8 <readstat_parse_sas7bdat+0xcf0>
    ab0c:	mov	r0, sl
    ab10:	mov	r1, #1
    ab14:	bl	b294 <sas7bdat_submit_columns_if_needed>
    ab18:	cmp	r0, #0
    ab1c:	bne	b168 <readstat_parse_sas7bdat+0x1260>
    ab20:	ldr	r0, [fp, #-72]	; 0xffffffb8
    ab24:	ldr	r1, [sp, #80]	; 0x50
    ab28:	add	r2, r1, r0
    ab2c:	ldrb	r0, [sl, #2529]	; 0x9e1
    ab30:	tst	r0, #1
    ab34:	bne	ab78 <readstat_parse_sas7bdat+0xc70>
    ab38:	ldr	r0, [sl, #76]	; 0x4c
    ab3c:	ldr	r1, [sl, #84]	; 0x54
    ab40:	cmp	r1, r0
    ab44:	beq	aa50 <readstat_parse_sas7bdat+0xb48>
    ab48:	ldr	r1, [sl, #68]	; 0x44
    ab4c:	ldr	r0, [sl, #124]	; 0x7c
    ab50:	mov	r3, r8
    ab54:	bl	4a6c <sas_rle_decompress@plt>
    ab58:	ldr	r1, [sl, #68]	; 0x44
    ab5c:	cmp	r0, r1
    ab60:	bne	b21c <readstat_parse_sas7bdat+0x1314>
    ab64:	ldr	r0, [sl, #124]	; 0x7c
    ab68:	mov	r1, sl
    ab6c:	bl	bfd0 <sas7bdat_parse_single_row>
    ab70:	str	r0, [sp, #100]	; 0x64
    ab74:	b	ae24 <readstat_parse_sas7bdat+0xf1c>
    ab78:	ldr	r4, [sl, #68]	; 0x44
    ab7c:	mov	r7, r2
    ab80:	mov	r0, r4
    ab84:	bl	4af0 <malloc@plt>
    ab88:	mov	ip, r0
    ab8c:	cmp	r8, #1
    ab90:	bgt	ac68 <readstat_parse_sas7bdat+0xd60>
    ab94:	mov	r0, ip
    ab98:	sub	r0, r0, ip
    ab9c:	mov	r1, #10
    aba0:	cmp	r0, r4
    aba4:	str	r1, [sp, #100]	; 0x64
    aba8:	bne	ae18 <readstat_parse_sas7bdat+0xf10>
    abac:	mov	r0, ip
    abb0:	mov	r1, sl
    abb4:	mov	r5, ip
    abb8:	bl	bfd0 <sas7bdat_parse_single_row>
    abbc:	mov	ip, r5
    abc0:	b	ae14 <readstat_parse_sas7bdat+0xf0c>
    abc4:	ldr	r0, [sl, #44]	; 0x2c
    abc8:	cmp	r0, #0
    abcc:	beq	ae04 <readstat_parse_sas7bdat+0xefc>
    abd0:	ldr	r0, [sp, #36]	; 0x24
    abd4:	ldr	r1, [sl, #60]	; 0x3c
    abd8:	add	r0, r0, r6
    abdc:	bl	4dc0 <sas_read4@plt>
    abe0:	b	aacc <readstat_parse_sas7bdat+0xbc4>
    abe4:	movw	r1, #64510	; 0xfbfe
    abe8:	movt	r1, #65535	; 0xffff
    abec:	cmp	r0, r1
    abf0:	cmnne	r0, #1024	; 0x400
    abf4:	beq	ac50 <readstat_parse_sas7bdat+0xd48>
    abf8:	cmn	r0, #9
    abfc:	bhi	ac48 <readstat_parse_sas7bdat+0xd40>
    ac00:	ldr	r0, [sl, #68]	; 0x44
    ac04:	eor	r0, r8, r0
    ac08:	orrs	r0, r0, r4
    ac0c:	bne	b26c <readstat_parse_sas7bdat+0x1364>
    ac10:	mov	r0, sl
    ac14:	mov	r1, #1
    ac18:	bl	b294 <sas7bdat_submit_columns_if_needed>
    ac1c:	cmp	r0, #0
    ac20:	str	r0, [sp, #100]	; 0x64
    ac24:	bne	b274 <readstat_parse_sas7bdat+0x136c>
    ac28:	mov	r0, r5
    ac2c:	mov	r1, sl
    ac30:	bl	bfd0 <sas7bdat_parse_single_row>
    ac34:	ldr	r7, [fp, #-100]	; 0xffffff9c
    ac38:	cmp	r0, #0
    ac3c:	str	r0, [sp, #100]	; 0x64
    ac40:	beq	aa50 <readstat_parse_sas7bdat+0xb48>
    ac44:	b	b16c <readstat_parse_sas7bdat+0x1264>
    ac48:	cmn	r0, #3
    ac4c:	beq	aa50 <readstat_parse_sas7bdat+0xb48>
    ac50:	mov	r1, r5
    ac54:	mov	r2, r8
    ac58:	mov	r3, sl
    ac5c:	bl	b914 <sas7bdat_parse_subheader>
    ac60:	str	r0, [sp, #100]	; 0x64
    ac64:	b	ae28 <readstat_parse_sas7bdat+0xf20>
    ac68:	add	lr, r7, r8
    ac6c:	mov	r5, r7
    ac70:	add	r1, r7, #2
    ac74:	mov	r0, ip
    ac78:	str	ip, [sp, #52]	; 0x34
    ac7c:	str	lr, [sp, #48]	; 0x30
    ac80:	ldrb	r2, [r5]
    ac84:	ldrb	r3, [r5, #1]
    ac88:	mov	r8, #0
    ac8c:	mov	r4, #15
    ac90:	mov	r5, r1
    ac94:	orr	r6, r3, r2, lsl #8
    ac98:	str	r6, [sp, #56]	; 0x38
    ac9c:	mov	r1, #1
    aca0:	tst	r6, r1, lsl r4
    aca4:	beq	acd4 <readstat_parse_sas7bdat+0xdcc>
    aca8:	add	r7, r5, #2
    acac:	mov	r1, #5
    acb0:	cmp	r7, lr
    acb4:	str	r1, [sp, #100]	; 0x64
    acb8:	bhi	ae18 <readstat_parse_sas7bdat+0xf10>
    acbc:	ldrb	r3, [r5]
    acc0:	ldrb	r1, [r5, #1]
    acc4:	cmp	r3, #15
    acc8:	bhi	ad08 <readstat_parse_sas7bdat+0xe00>
    accc:	add	r2, r3, #3
    acd0:	b	ad40 <readstat_parse_sas7bdat+0xe38>
    acd4:	add	r1, r5, #1
    acd8:	cmp	r1, lr
    acdc:	bhi	adf0 <readstat_parse_sas7bdat+0xee8>
    ace0:	ldr	r2, [sl, #68]	; 0x44
    ace4:	add	r3, ip, r2
    ace8:	add	r2, r0, #1
    acec:	cmp	r2, r3
    acf0:	bhi	ae10 <readstat_parse_sas7bdat+0xf08>
    acf4:	ldrb	r3, [r5]
    acf8:	mov	r5, r1
    acfc:	strb	r3, [r0]
    ad00:	mov	r0, r2
    ad04:	b	ade0 <readstat_parse_sas7bdat+0xed8>
    ad08:	mov	r2, #2
    ad0c:	cmp	r2, r3, lsr #4
    ad10:	beq	ad5c <readstat_parse_sas7bdat+0xe54>
    ad14:	lsr	r2, r3, #4
    ad18:	cmp	r2, #1
    ad1c:	bne	ad80 <readstat_parse_sas7bdat+0xe78>
    ad20:	add	r6, r5, #3
    ad24:	cmp	r6, lr
    ad28:	bhi	ae18 <readstat_parse_sas7bdat+0xf10>
    ad2c:	and	r2, r3, #15
    ad30:	orr	r1, r2, r1, lsl #4
    ad34:	add	r2, r1, #19
    ad38:	ldrb	r1, [r7]
    ad3c:	mov	r7, r6
    ad40:	ldr	r3, [sl, #68]	; 0x44
    ad44:	add	r6, r0, r2
    ad48:	add	r3, ip, r3
    ad4c:	cmp	r6, r3
    ad50:	bhi	ae0c <readstat_parse_sas7bdat+0xf04>
    ad54:	bl	4c70 <memset@plt>
    ad58:	b	adcc <readstat_parse_sas7bdat+0xec4>
    ad5c:	add	r5, r5, #3
    ad60:	cmp	r5, lr
    ad64:	bhi	ae18 <readstat_parse_sas7bdat+0xf10>
    ad68:	and	r2, r3, #15
    ad6c:	orr	r1, r2, r1, lsl #4
    ad70:	ldrb	r2, [r7]
    ad74:	add	r1, r1, #3
    ad78:	add	r2, r2, #16
    ad7c:	b	ad98 <readstat_parse_sas7bdat+0xe90>
    ad80:	cmp	r2, #0
    ad84:	beq	addc <readstat_parse_sas7bdat+0xed4>
    ad88:	and	r3, r3, #15
    ad8c:	mov	r5, r7
    ad90:	orr	r1, r3, r1, lsl #4
    ad94:	add	r1, r1, #3
    ad98:	sub	r3, r0, ip
    ad9c:	cmp	r3, r1
    ada0:	bcc	ae18 <readstat_parse_sas7bdat+0xf10>
    ada4:	cmp	r2, r1
    ada8:	bhi	ae18 <readstat_parse_sas7bdat+0xf10>
    adac:	ldr	r3, [sl, #68]	; 0x44
    adb0:	add	r6, r0, r2
    adb4:	add	r3, ip, r3
    adb8:	cmp	r6, r3
    adbc:	bhi	ae0c <readstat_parse_sas7bdat+0xf04>
    adc0:	sub	r1, r0, r1
    adc4:	mov	r7, r5
    adc8:	bl	4910 <memcpy@plt>
    adcc:	mov	r0, r6
    add0:	ldr	ip, [sp, #52]	; 0x34
    add4:	ldr	lr, [sp, #48]	; 0x30
    add8:	ldr	r6, [sp, #56]	; 0x38
    addc:	mov	r5, r7
    ade0:	add	r8, r8, #1
    ade4:	sub	r4, r4, #1
    ade8:	cmp	r8, #16
    adec:	bcc	ac9c <readstat_parse_sas7bdat+0xd94>
    adf0:	add	r1, r5, #2
    adf4:	cmp	r1, lr
    adf8:	bls	ac80 <readstat_parse_sas7bdat+0xd78>
    adfc:	ldr	r4, [sl, #68]	; 0x44
    ae00:	b	ab98 <readstat_parse_sas7bdat+0xc90>
    ae04:	mvn	r0, #0
    ae08:	b	aacc <readstat_parse_sas7bdat+0xbc4>
    ae0c:	ldr	ip, [sp, #52]	; 0x34
    ae10:	mov	r0, #10
    ae14:	str	r0, [sp, #100]	; 0x64
    ae18:	mov	r0, ip
    ae1c:	bl	48bc <free@plt>
    ae20:	ldr	r7, [fp, #-100]	; 0xffffff9c
    ae24:	ldr	r0, [sp, #100]	; 0x64
    ae28:	cmp	r0, #0
    ae2c:	beq	aa50 <readstat_parse_sas7bdat+0xb48>
    ae30:	b	b16c <readstat_parse_sas7bdat+0x1264>
    ae34:	ldr	r1, [sp, #40]	; 0x28
    ae38:	ldr	r9, [sp, #44]	; 0x2c
    ae3c:	cmp	r1, #512	; 0x200
    ae40:	bne	a90c <readstat_parse_sas7bdat+0xa04>
    ae44:	sub	r2, r0, r6
    ae48:	asr	r1, r2, #31
    ae4c:	add	r1, r2, r1, lsr #29
    ae50:	bic	r1, r1, #7
    ae54:	sub	r1, r2, r1
    ae58:	cmp	r1, #4
    ae5c:	bne	a864 <readstat_parse_sas7bdat+0x95c>
    ae60:	ldr	r2, [r0]
    ae64:	cmp	r2, #0
    ae68:	beq	ae7c <readstat_parse_sas7bdat+0xf74>
    ae6c:	movw	r1, #8224	; 0x2020
    ae70:	movt	r1, #8224	; 0x2020
    ae74:	cmp	r2, r1
    ae78:	bne	ae84 <readstat_parse_sas7bdat+0xf7c>
    ae7c:	add	r0, r0, #4
    ae80:	b	a86c <readstat_parse_sas7bdat+0x964>
    ae84:	ldr	r1, [sl, #48]	; 0x30
    ae88:	cmp	r1, #0
    ae8c:	addne	r0, r0, #4
    ae90:	b	a86c <readstat_parse_sas7bdat+0x964>
    ae94:	ldr	r8, [fp, #-84]	; 0xffffffac
    ae98:	b	afd0 <readstat_parse_sas7bdat+0x10c8>
    ae9c:	ldr	r0, [r6]
    aea0:	cmp	r0, #0
    aea4:	beq	aedc <readstat_parse_sas7bdat+0xfd4>
    aea8:	ldrd	r0, [r5]
    aeac:	stm	sp, {r0, r1}
    aeb0:	movw	r0, #481	; 0x1e1
    aeb4:	mov	r1, #2048	; 0x800
    aeb8:	ldr	r2, [pc, #964]	; b284 <readstat_parse_sas7bdat+0x137c>
    aebc:	add	r4, sl, r0
    aec0:	mov	r0, r4
    aec4:	add	r2, pc, r2
    aec8:	bl	4c4c <snprintf@plt>
    aecc:	ldr	r2, [sl, #24]
    aed0:	ldr	r1, [sl, #52]	; 0x34
    aed4:	mov	r0, r4
    aed8:	blx	r2
    aedc:	ldr	r7, [fp, #-96]	; 0xffffffa0
    aee0:	ldr	r9, [fp, #-76]	; 0xffffffb4
    aee4:	b	a0a8 <readstat_parse_sas7bdat+0x1a0>
    aee8:	mov	r0, sl
    aeec:	mov	r1, #0
    aef0:	bl	b294 <sas7bdat_submit_columns_if_needed>
    aef4:	ldr	r6, [fp, #-80]	; 0xffffffb0
    aef8:	ldr	r7, [fp, #-96]	; 0xffffffa0
    aefc:	mov	r5, r0
    af00:	cmp	r0, #0
    af04:	bne	a02c <readstat_parse_sas7bdat+0x124>
    af08:	ldr	r0, [sl, #16]
    af0c:	cmp	r0, #0
    af10:	beq	af24 <readstat_parse_sas7bdat+0x101c>
    af14:	ldr	r0, [sl, #76]	; 0x4c
    af18:	ldr	r3, [sl, #84]	; 0x54
    af1c:	cmp	r0, r3
    af20:	bne	b0f8 <readstat_parse_sas7bdat+0x11f0>
    af24:	ldr	r0, [fp, #-88]	; 0xffffffa8
    af28:	ldr	r3, [sl, #56]	; 0x38
    af2c:	ldr	r1, [sl, #28]
    af30:	ldr	r2, [sl, #52]	; 0x34
    af34:	ldr	r6, [r3, #16]
    af38:	ldr	r0, [r0]
    af3c:	ldr	r3, [r3, #20]
    af40:	blx	r6
    af44:	ldr	r6, [fp, #-80]	; 0xffffffb0
    af48:	mov	r5, r0
    af4c:	b	b140 <readstat_parse_sas7bdat+0x1238>
    af50:	ldr	r0, [r6]
    af54:	mov	r1, #15
    af58:	str	r1, [sp, #100]	; 0x64
    af5c:	cmp	r0, #0
    af60:	beq	afd0 <readstat_parse_sas7bdat+0x10c8>
    af64:	ldr	r2, [fp, #-100]	; 0xffffff9c
    af68:	ldrd	r0, [r5]
    af6c:	ldr	r5, [sp, #92]	; 0x5c
    af70:	ldr	r7, [sp, #84]	; 0x54
    af74:	add	ip, sp, #8
    af78:	ldrd	r2, [r2]
    af7c:	umull	r6, r4, r2, r5
    af80:	mla	r4, r2, r7, r4
    af84:	adds	r6, r6, r0
    af88:	mla	r4, r3, r5, r4
    af8c:	str	r6, [sp]
    af90:	adc	r4, r4, r1
    af94:	str	r4, [sp, #4]
    af98:	stm	ip, {r0, r1, r5, r7}
    af9c:	str	r2, [sp, #24]
    afa0:	str	r3, [sp, #28]
    afa4:	movw	r0, #481	; 0x1e1
    afa8:	mov	r1, #2048	; 0x800
    afac:	ldr	r2, [pc, #712]	; b27c <readstat_parse_sas7bdat+0x1374>
    afb0:	add	r4, sl, r0
    afb4:	mov	r0, r4
    afb8:	add	r2, pc, r2
    afbc:	bl	4c4c <snprintf@plt>
    afc0:	ldr	r2, [sl, #24]
    afc4:	ldr	r1, [sl, #52]	; 0x34
    afc8:	mov	r0, r4
    afcc:	blx	r2
    afd0:	ldr	r0, [fp, #-96]	; 0xffffffa0
    afd4:	ldr	r1, [r0, #4]
    afd8:	ldr	r0, [r0, #20]
    afdc:	blx	r1
    afe0:	ldr	r6, [fp, #-80]	; 0xffffffb0
    afe4:	ldr	r9, [fp, #-76]	; 0xffffffb4
    afe8:	ldr	r5, [sp, #100]	; 0x64
    afec:	b	a104 <readstat_parse_sas7bdat+0x1fc>
    aff0:	.word	0x0001a274
    aff4:	mov	r5, r0
    aff8:	cmp	r0, #4
    affc:	beq	b13c <readstat_parse_sas7bdat+0x1234>
    b000:	ldr	r6, [fp, #-80]	; 0xffffffb0
    b004:	ldr	r0, [r6]
    b008:	cmp	r0, #0
    b00c:	beq	b140 <readstat_parse_sas7bdat+0x1238>
    b010:	ldr	r0, [sp, #104]	; 0x68
    b014:	mov	r1, #1
    b018:	ldr	r3, [r0, #8]
    b01c:	ldr	r2, [r0, #20]
    b020:	mov	r0, #0
    b024:	blx	r3
    b028:	ldr	r3, [fp, #-100]	; 0xffffff9c
    b02c:	asr	r1, r0, #31
    b030:	subs	r2, r0, #1
    b034:	sbc	r1, r1, #0
    b038:	ldr	r4, [r3]
    b03c:	ldr	r3, [r3, #4]
    b040:	stm	sp, {r7, r9}
    b044:	subs	r6, r0, r4
    b048:	rsc	r0, r3, r0, asr #31
    b04c:	str	r6, [sp, #8]
    b050:	str	r0, [sp, #12]
    b054:	str	r1, [sp, #20]
    b058:	str	r2, [sp, #16]
    b05c:	ldr	r6, [fp, #-80]	; 0xffffffb0
    b060:	movw	r0, #481	; 0x1e1
    b064:	mov	r1, #2048	; 0x800
    b068:	ldr	r2, [pc, #528]	; b280 <readstat_parse_sas7bdat+0x1378>
    b06c:	add	r4, sl, r0
    b070:	mov	r0, r4
    b074:	add	r2, pc, r2
    b078:	bl	4c4c <snprintf@plt>
    b07c:	ldr	r2, [sl, #24]
    b080:	ldr	r1, [sl, #52]	; 0x34
    b084:	mov	r0, r4
    b088:	blx	r2
    b08c:	b	b140 <readstat_parse_sas7bdat+0x1238>
    b090:	.word	0x0001a250
    b094:	ldr	r6, [fp, #-80]	; 0xffffffb0
    b098:	cmp	r0, #4
    b09c:	mov	r5, r0
    b0a0:	ldr	r1, [sp, #104]	; 0x68
    b0a4:	ldrne	r0, [r6]
    b0a8:	cmpne	r0, #0
    b0ac:	beq	b140 <readstat_parse_sas7bdat+0x1238>
    b0b0:	ldr	r3, [r1, #8]
    b0b4:	ldr	r2, [r1, #20]
    b0b8:	mov	r0, #0
    b0bc:	mov	r1, #1
    b0c0:	blx	r3
    b0c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
    b0c8:	asr	r1, r0, #31
    b0cc:	subs	r2, r0, #1
    b0d0:	sbc	r1, r1, #0
    b0d4:	ldr	r4, [r3]
    b0d8:	ldr	r3, [r3, #4]
    b0dc:	subs	r6, r0, r4
    b0e0:	rsc	r0, r3, r0, asr #31
    b0e4:	ldr	r3, [sp, #92]	; 0x5c
    b0e8:	str	r3, [sp]
    b0ec:	ldr	r3, [sp, #84]	; 0x54
    b0f0:	str	r3, [sp, #4]
    b0f4:	b	b04c <readstat_parse_sas7bdat+0x1144>
    b0f8:	ldr	r1, [r6]
    b0fc:	mov	r5, #9
    b100:	cmp	r1, #0
    b104:	beq	a4c0 <readstat_parse_sas7bdat+0x5b8>
    b108:	str	r0, [sp]
    b10c:	movw	r0, #481	; 0x1e1
    b110:	mov	r1, #2048	; 0x800
    b114:	ldr	r2, [pc, #372]	; b290 <readstat_parse_sas7bdat+0x1388>
    b118:	add	r4, sl, r0
    b11c:	mov	r0, r4
    b120:	add	r2, pc, r2
    b124:	bl	4c4c <snprintf@plt>
    b128:	ldr	r2, [sl, #24]
    b12c:	ldr	r1, [sl, #52]	; 0x34
    b130:	mov	r0, r4
    b134:	blx	r2
    b138:	b	a4c0 <readstat_parse_sas7bdat+0x5b8>
    b13c:	ldr	r6, [fp, #-80]	; 0xffffffb0
    b140:	ldr	r7, [fp, #-96]	; 0xffffffa0
    b144:	b	a02c <readstat_parse_sas7bdat+0x124>
    b148:	.word	0x0001a233
    b14c:	mov	r0, #2
    b150:	str	r0, [sp, #100]	; 0x64
    b154:	b	afd0 <readstat_parse_sas7bdat+0x10c8>
    b158:	mov	r0, #10
    b15c:	str	r0, [sp, #100]	; 0x64
    b160:	b	b170 <readstat_parse_sas7bdat+0x1268>
    b164:	mov	r0, #6
    b168:	str	r0, [sp, #100]	; 0x64
    b16c:	ldr	r9, [sp, #44]	; 0x2c
    b170:	ldr	r0, [sp, #100]	; 0x64
    b174:	ldr	r6, [fp, #-80]	; 0xffffffb0
    b178:	ldr	r8, [fp, #-84]	; 0xffffffac
    b17c:	cmp	r0, #4
    b180:	ldrne	r0, [r6]
    b184:	cmpne	r0, #0
    b188:	beq	b208 <readstat_parse_sas7bdat+0x1300>
    b18c:	ldr	r0, [sp, #92]	; 0x5c
    b190:	mov	r1, #1
    b194:	ldr	r3, [r0, #8]
    b198:	ldr	r2, [r0, #20]
    b19c:	mov	r0, #0
    b1a0:	blx	r3
    b1a4:	ldr	r4, [r7]
    b1a8:	ldr	r3, [r7, #4]
    b1ac:	asr	r1, r0, #31
    b1b0:	subs	r2, r0, #1
    b1b4:	str	r9, [sp]
    b1b8:	sbc	r1, r1, #0
    b1bc:	subs	r6, r0, r4
    b1c0:	rsc	r0, r3, r0, asr #31
    b1c4:	ldr	r3, [sp, #104]	; 0x68
    b1c8:	stmib	sp, {r3, r6}
    b1cc:	str	r0, [sp, #12]
    b1d0:	str	r1, [sp, #20]
    b1d4:	str	r2, [sp, #16]
    b1d8:	movw	r0, #481	; 0x1e1
    b1dc:	mov	r1, #2048	; 0x800
    b1e0:	ldr	r6, [fp, #-80]	; 0xffffffb0
    b1e4:	ldr	r2, [pc, #160]	; b28c <readstat_parse_sas7bdat+0x1384>
    b1e8:	add	r4, sl, r0
    b1ec:	mov	r0, r4
    b1f0:	add	r2, pc, r2
    b1f4:	bl	4c4c <snprintf@plt>
    b1f8:	ldr	r2, [sl, #24]
    b1fc:	ldr	r1, [sl, #52]	; 0x34
    b200:	mov	r0, r4
    b204:	blx	r2
    b208:	ldr	r7, [fp, #-96]	; 0xffffffa0
    b20c:	ldr	r5, [sp, #100]	; 0x64
    b210:	b	a02c <readstat_parse_sas7bdat+0x124>
    b214:	mov	r0, #5
    b218:	b	b15c <readstat_parse_sas7bdat+0x1254>
    b21c:	ldr	r2, [fp, #-80]	; 0xffffffb0
    b220:	mov	r3, #10
    b224:	str	r3, [sp, #100]	; 0x64
    b228:	ldr	r2, [r2]
    b22c:	cmp	r2, #0
    b230:	beq	b274 <readstat_parse_sas7bdat+0x136c>
    b234:	ldr	r3, [sl, #76]	; 0x4c
    b238:	stm	sp, {r0, r1}
    b23c:	movw	r0, #481	; 0x1e1
    b240:	mov	r1, #2048	; 0x800
    b244:	ldr	r2, [pc, #60]	; b288 <readstat_parse_sas7bdat+0x1380>
    b248:	add	r4, sl, r0
    b24c:	mov	r0, r4
    b250:	add	r2, pc, r2
    b254:	bl	4c4c <snprintf@plt>
    b258:	ldr	r2, [sl, #24]
    b25c:	ldr	r1, [sl, #52]	; 0x34
    b260:	mov	r0, r4
    b264:	blx	r2
    b268:	b	b274 <readstat_parse_sas7bdat+0x136c>
    b26c:	mov	r0, #10
    b270:	str	r0, [sp, #100]	; 0x64
    b274:	ldr	r7, [fp, #-100]	; 0xffffff9c
    b278:	b	b16c <readstat_parse_sas7bdat+0x1264>
    b27c:	.word	0x000193f7
    b280:	.word	0x0001937a
    b284:	.word	0x00019353
    b288:	.word	0x00019229
    b28c:	.word	0x000191fe
    b290:	.word	0x00019236

0000b294 <sas7bdat_submit_columns_if_needed>:
    b294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b298:	add	fp, sp, #28
    b29c:	sub	sp, sp, #84	; 0x54
    b2a0:	mov	r4, r0
    b2a4:	ldr	r0, [r0, #64]	; 0x40
    b2a8:	mov	r8, #0
    b2ac:	cmp	r0, #0
    b2b0:	beq	b2c0 <sas7bdat_submit_columns_if_needed+0x2c>
    b2b4:	mov	r0, r8
    b2b8:	sub	sp, fp, #28
    b2bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b2c0:	ldr	r2, [r4]
    b2c4:	cmp	r2, #0
    b2c8:	beq	b37c <sas7bdat_submit_columns_if_needed+0xe8>
    b2cc:	ldr	r0, [r4, #84]	; 0x54
    b2d0:	mov	r3, #0
    b2d4:	mov	sl, r4
    b2d8:	str	r3, [sp, #28]
    b2dc:	str	r0, [sp, #24]
    b2e0:	ldr	r0, [sl, #80]!	; 0x50
    b2e4:	str	r3, [sp, #36]	; 0x24
    b2e8:	str	r0, [sp, #32]
    b2ec:	ldr	r0, [sl, #132]	; 0x84
    b2f0:	ldr	r6, [sl, #140]	; 0x8c
    b2f4:	ldr	r7, [sl, #136]	; 0x88
    b2f8:	str	r0, [sp, #40]	; 0x28
    b2fc:	asr	r0, r6, #31
    b300:	str	r7, [sp, #44]	; 0x2c
    b304:	str	r3, [sp, #56]	; 0x38
    b308:	str	r6, [sp, #48]	; 0x30
    b30c:	str	r0, [sp, #52]	; 0x34
    b310:	ldr	r0, [sl, #-40]	; 0xffffffd8
    b314:	str	r3, [sp, #64]	; 0x40
    b318:	add	r3, sl, #144	; 0x90
    b31c:	str	r3, [sp, #68]	; 0x44
    b320:	mov	r3, #1
    b324:	cmp	r0, #0
    b328:	movweq	r3, #2
    b32c:	cmp	r1, #0
    b330:	str	r3, [sp, #60]	; 0x3c
    b334:	ldr	r0, [sl, #120]	; 0x78
    b338:	str	r0, [sp, #72]	; 0x48
    b33c:	ldrb	r0, [sl, #-36]	; 0xffffffdc
    b340:	and	r0, r0, #1
    b344:	strb	r0, [sp, #76]	; 0x4c
    b348:	beq	b360 <sas7bdat_submit_columns_if_needed+0xcc>
    b34c:	ldrb	r0, [r4, #2529]	; 0x9e1
    b350:	mov	r1, #2
    b354:	tst	r0, #1
    b358:	movweq	r1, #1
    b35c:	str	r1, [sp, #56]	; 0x38
    b360:	ldr	r1, [r4, #52]	; 0x34
    b364:	add	r0, sp, #24
    b368:	blx	r2
    b36c:	mov	r8, #4
    b370:	cmp	r0, #0
    b374:	bne	b2b4 <sas7bdat_submit_columns_if_needed+0x20>
    b378:	b	b380 <sas7bdat_submit_columns_if_needed+0xec>
    b37c:	add	sl, r4, #80	; 0x50
    b380:	ldr	r0, [sl]
    b384:	cmp	r0, #0
    b388:	beq	b5b4 <sas7bdat_submit_columns_if_needed+0x320>
    b38c:	mov	r1, #4
    b390:	bl	49ac <readstat_calloc@plt>
    b394:	cmp	r0, #0
    b398:	str	r0, [r4, #196]	; 0xc4
    b39c:	beq	b5c4 <sas7bdat_submit_columns_if_needed+0x330>
    b3a0:	ldr	r0, [sl]
    b3a4:	cmp	r0, #0
    b3a8:	beq	b5b4 <sas7bdat_submit_columns_if_needed+0x320>
    b3ac:	movw	r0, #481	; 0x1e1
    b3b0:	mov	r9, #0
    b3b4:	mov	r7, #0
    b3b8:	mov	r8, #0
    b3bc:	str	sl, [sp, #16]
    b3c0:	add	r0, r4, r0
    b3c4:	str	r0, [sp, #12]
    b3c8:	mov	r0, #0
    b3cc:	str	r0, [sp, #20]
    b3d0:	mov	r0, #1
    b3d4:	movw	r1, #2152	; 0x868
    b3d8:	bl	49ac <readstat_calloc@plt>
    b3dc:	mov	r5, r0
    b3e0:	str	r7, [r0, #4]
    b3e4:	ldr	r0, [sp, #20]
    b3e8:	str	r0, [r5, #2148]	; 0x864
    b3ec:	ldr	r0, [r4, #192]	; 0xc0
    b3f0:	add	r1, r0, r9
    b3f4:	ldr	r2, [r1, #36]	; 0x24
    b3f8:	str	r2, [r5]
    b3fc:	cmp	r2, #0
    b400:	ldr	r1, [r1, #32]
    b404:	str	r1, [r5, #1596]	; 0x63c
    b408:	beq	b504 <sas7bdat_submit_columns_if_needed+0x270>
    b40c:	cmp	r2, #5
    b410:	bne	b420 <sas7bdat_submit_columns_if_needed+0x18c>
    b414:	sub	r1, r1, #3
    b418:	cmp	r1, #5
    b41c:	bhi	b514 <sas7bdat_submit_columns_if_needed+0x280>
    b420:	ldr	r2, [r0, r9]!
    b424:	add	sl, r5, #8
    b428:	mov	r1, #300	; 0x12c
    b42c:	ldrh	r3, [r0, #4]
    b430:	mov	r0, sl
    b434:	str	r4, [sp]
    b438:	bl	c2ec <sas7bdat_copy_text_ref>
    b43c:	mov	r6, r0
    b440:	cmp	r0, #0
    b444:	bne	b4a0 <sas7bdat_submit_columns_if_needed+0x20c>
    b448:	ldr	r0, [r4, #192]	; 0xc0
    b44c:	mov	r1, #256	; 0x100
    b450:	add	r0, r0, r9
    b454:	ldrh	r3, [r0, #10]
    b458:	ldr	r2, [r0, #6]
    b45c:	add	r0, r5, #308	; 0x134
    b460:	str	r4, [sp]
    b464:	bl	c2ec <sas7bdat_copy_text_ref>
    b468:	mov	r6, r0
    b46c:	cmp	r0, #0
    b470:	bne	b4a0 <sas7bdat_submit_columns_if_needed+0x20c>
    b474:	ldr	r0, [r4, #192]	; 0xc0
    b478:	mov	r1, #1024	; 0x400
    b47c:	add	r0, r0, r9
    b480:	ldrh	r3, [r0, #16]
    b484:	ldr	r2, [r0, #12]
    b488:	add	r0, r5, #564	; 0x234
    b48c:	str	r4, [sp]
    b490:	bl	c2ec <sas7bdat_copy_text_ref>
    b494:	mov	r6, r0
    b498:	cmp	r0, #0
    b49c:	beq	b530 <sas7bdat_submit_columns_if_needed+0x29c>
    b4a0:	mov	r0, r5
    b4a4:	bl	48bc <free@plt>
    b4a8:	cmp	r6, #17
    b4ac:	bne	b528 <sas7bdat_submit_columns_if_needed+0x294>
    b4b0:	ldr	r0, [r4, #24]
    b4b4:	mov	r8, #17
    b4b8:	cmp	r0, #0
    b4bc:	beq	b52c <sas7bdat_submit_columns_if_needed+0x298>
    b4c0:	add	r0, r5, #564	; 0x234
    b4c4:	add	r1, r5, #308	; 0x134
    b4c8:	str	sl, [sp]
    b4cc:	ldr	r5, [sp, #12]
    b4d0:	mov	r3, r7
    b4d4:	str	r1, [sp, #4]
    b4d8:	str	r0, [sp, #8]
    b4dc:	mov	r1, #2048	; 0x800
    b4e0:	ldr	r2, [pc, #236]	; b5d4 <sas7bdat_submit_columns_if_needed+0x340>
    b4e4:	mov	r0, r5
    b4e8:	add	r2, pc, r2
    b4ec:	bl	4c4c <snprintf@plt>
    b4f0:	ldr	r2, [r4, #24]
    b4f4:	ldr	r1, [r4, #52]	; 0x34
    b4f8:	mov	r0, r5
    b4fc:	blx	r2
    b500:	b	b52c <sas7bdat_submit_columns_if_needed+0x298>
    b504:	sub	r1, r1, #1
    b508:	movw	r2, #32766	; 0x7ffe
    b50c:	cmp	r1, r2
    b510:	bls	b420 <sas7bdat_submit_columns_if_needed+0x18c>
    b514:	mov	r0, r5
    b518:	bl	48bc <free@plt>
    b51c:	mov	r5, #0
    b520:	mov	r8, #5
    b524:	b	b534 <sas7bdat_submit_columns_if_needed+0x2a0>
    b528:	mov	r8, r6
    b52c:	mov	r5, #0
    b530:	ldr	sl, [sp, #16]
    b534:	ldr	r0, [r4, #196]	; 0xc4
    b538:	str	r5, [r0, r7, lsl #2]
    b53c:	ldr	r0, [r4, #196]	; 0xc4
    b540:	ldr	r1, [r0, r7, lsl #2]
    b544:	cmp	r1, #0
    b548:	beq	b5ac <sas7bdat_submit_columns_if_needed+0x318>
    b54c:	ldr	r6, [r4, #8]
    b550:	cmp	r6, #0
    b554:	beq	b578 <sas7bdat_submit_columns_if_needed+0x2e4>
    b558:	ldr	r3, [r4, #52]	; 0x34
    b55c:	add	r2, r1, #308	; 0x134
    b560:	mov	r0, r7
    b564:	blx	r6
    b568:	cmp	r0, #2
    b56c:	beq	b588 <sas7bdat_submit_columns_if_needed+0x2f4>
    b570:	cmp	r0, #1
    b574:	beq	b5cc <sas7bdat_submit_columns_if_needed+0x338>
    b578:	ldr	r0, [sp, #20]
    b57c:	add	r0, r0, #1
    b580:	str	r0, [sp, #20]
    b584:	b	b598 <sas7bdat_submit_columns_if_needed+0x304>
    b588:	ldr	r0, [r4, #196]	; 0xc4
    b58c:	mov	r1, #1
    b590:	ldr	r0, [r0, r7, lsl #2]
    b594:	str	r1, [r0, #2144]	; 0x860
    b598:	ldr	r0, [sl]
    b59c:	add	r7, r7, #1
    b5a0:	add	r9, r9, #40	; 0x28
    b5a4:	cmp	r7, r0
    b5a8:	bcc	b3d0 <sas7bdat_submit_columns_if_needed+0x13c>
    b5ac:	cmp	r8, #0
    b5b0:	bne	b2b4 <sas7bdat_submit_columns_if_needed+0x20>
    b5b4:	mov	r0, #1
    b5b8:	mov	r8, #0
    b5bc:	str	r0, [r4, #64]	; 0x40
    b5c0:	b	b2b4 <sas7bdat_submit_columns_if_needed+0x20>
    b5c4:	mov	r8, #3
    b5c8:	b	b2b4 <sas7bdat_submit_columns_if_needed+0x20>
    b5cc:	mov	r8, #4
    b5d0:	b	b2b4 <sas7bdat_submit_columns_if_needed+0x20>
    b5d4:	.word	0x00018fd1

0000b5d8 <sas7bdat_parse_page_pass1>:
    b5d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b5dc:	add	fp, sp, #28
    b5e0:	sub	sp, sp, #4
    b5e4:	vpush	{d8-d9}
    b5e8:	sub	sp, sp, #56	; 0x38
    b5ec:	mov	r6, r0
    b5f0:	ldr	r0, [r2, #128]	; 0x80
    b5f4:	mov	r4, r1
    b5f8:	ldr	r1, [r2, #60]	; 0x3c
    b5fc:	mov	r9, r2
    b600:	add	r0, r6, r0
    b604:	sub	r0, r0, #4
    b608:	bl	4d9c <sas_read2@plt>
    b60c:	mov	r7, r0
    b610:	ldr	r0, [r9, #144]	; 0x90
    b614:	ldrd	r2, [r9, #128]	; 0x80
    b618:	str	r4, [sp, #12]
    b61c:	str	r0, [sp, #28]
    b620:	mul	r0, r0, r7
    b624:	adds	r1, r2, r0
    b628:	adc	r3, r3, r0, asr #31
    b62c:	subs	r1, r4, r1
    b630:	mov	r0, #5
    b634:	rscs	r1, r3, #0
    b638:	bcc	b78c <sas7bdat_parse_page_pass1+0x1b4>
    b63c:	cmp	r7, #0
    b640:	beq	b788 <sas7bdat_parse_page_pass1+0x1b0>
    b644:	ldr	r0, [sp, #12]
    b648:	add	r5, r6, r2
    b64c:	vmov.i32	q4, #0	; 0x00000000
    b650:	mov	r8, #0
    b654:	str	r6, [sp, #8]
    b658:	add	r0, r6, r0
    b65c:	str	r0, [sp, #24]
    b660:	add	r0, r6, #4
    b664:	str	r0, [sp]
    b668:	add	r0, sp, #32
    b66c:	add	r0, r0, #8
    b670:	str	r0, [sp, #16]
    b674:	add	r0, r9, #136	; 0x88
    b678:	str	r0, [sp, #20]
    b67c:	add	r2, sp, #32
    b680:	mov	r1, #20
    b684:	mov	r3, r9
    b688:	mov	r0, r2
    b68c:	vst1.64	{d8-d9}, [r0], r1
    b690:	mov	r1, #0
    b694:	str	r1, [r0]
    b698:	ldr	r0, [sp, #24]
    b69c:	str	r1, [sp, #48]	; 0x30
    b6a0:	sub	r1, r0, r5
    b6a4:	ldr	r0, [sp, #20]
    b6a8:	ldr	r6, [r0]
    b6ac:	mov	r0, r5
    b6b0:	bl	b7a4 <sas7bdat_parse_subheader_pointer>
    b6b4:	cmp	r0, #0
    b6b8:	bne	b78c <sas7bdat_parse_page_pass1+0x1b4>
    b6bc:	ldr	r0, [sp, #16]
    b6c0:	ldr	r4, [r0]
    b6c4:	ldr	r1, [r0, #4]
    b6c8:	orrs	r0, r4, r1
    b6cc:	ldrbne	sl, [sp, #48]	; 0x30
    b6d0:	cmpne	sl, #1
    b6d4:	bne	b6f0 <sas7bdat_parse_page_pass1+0x118>
    b6d8:	ldr	r0, [sp, #28]
    b6dc:	add	r8, r8, #1
    b6e0:	cmp	r8, r7
    b6e4:	add	r5, r5, r0
    b6e8:	bcc	b67c <sas7bdat_parse_page_pass1+0xa4>
    b6ec:	b	b788 <sas7bdat_parse_page_pass1+0x1b0>
    b6f0:	ldr	r1, [sp, #12]
    b6f4:	add	r0, sp, #32
    b6f8:	mov	r2, r7
    b6fc:	mov	r3, r9
    b700:	bl	b84c <sas7bdat_validate_subheader_pointer>
    b704:	cmp	r0, #0
    b708:	bne	b78c <sas7bdat_parse_page_pass1+0x1b4>
    b70c:	cmp	sl, #4
    b710:	beq	b6d8 <sas7bdat_parse_page_pass1+0x100>
    b714:	cmp	sl, #0
    b718:	bne	b79c <sas7bdat_parse_page_pass1+0x1c4>
    b71c:	ldr	r1, [sp, #32]
    b720:	ldr	r0, [sp, #8]
    b724:	add	sl, r0, r1
    b728:	str	r1, [sp, #4]
    b72c:	ldr	r1, [r9, #60]	; 0x3c
    b730:	mov	r0, sl
    b734:	bl	4dc0 <sas_read4@plt>
    b738:	cmp	r6, #8
    b73c:	bne	b760 <sas7bdat_parse_page_pass1+0x188>
    b740:	cmn	r0, #1
    b744:	ldreq	r1, [r9, #40]	; 0x28
    b748:	cmpeq	r1, #0
    b74c:	bne	b760 <sas7bdat_parse_page_pass1+0x188>
    b750:	ldm	sp, {r0, r1}
    b754:	add	r0, r0, r1
    b758:	ldr	r1, [r9, #60]	; 0x3c
    b75c:	bl	4dc0 <sas_read4@plt>
    b760:	cmn	r0, #3
    b764:	bne	b6d8 <sas7bdat_parse_page_pass1+0x100>
    b768:	mvn	r0, #2
    b76c:	mov	r1, sl
    b770:	mov	r2, r4
    b774:	mov	r3, r9
    b778:	bl	b914 <sas7bdat_parse_subheader>
    b77c:	cmp	r0, #0
    b780:	beq	b6d8 <sas7bdat_parse_page_pass1+0x100>
    b784:	b	b78c <sas7bdat_parse_page_pass1+0x1b4>
    b788:	mov	r0, #0
    b78c:	sub	sp, fp, #48	; 0x30
    b790:	vpop	{d8-d9}
    b794:	add	sp, sp, #4
    b798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b79c:	mov	r0, #6
    b7a0:	b	b78c <sas7bdat_parse_page_pass1+0x1b4>

0000b7a4 <sas7bdat_parse_subheader_pointer>:
    b7a4:	push	{r4, r5, r6, r7, fp, lr}
    b7a8:	add	fp, sp, #16
    b7ac:	mov	r5, r0
    b7b0:	ldr	r0, [r3, #44]	; 0x2c
    b7b4:	mov	r6, r3
    b7b8:	mov	r4, r2
    b7bc:	mov	r7, #5
    b7c0:	cmp	r0, #0
    b7c4:	beq	b804 <sas7bdat_parse_subheader_pointer+0x60>
    b7c8:	cmp	r1, #18
    b7cc:	bcc	b844 <sas7bdat_parse_subheader_pointer+0xa0>
    b7d0:	ldr	r1, [r6, #60]	; 0x3c
    b7d4:	mov	r0, r5
    b7d8:	bl	4d90 <sas_read8@plt>
    b7dc:	strd	r0, [r4]
    b7e0:	add	r0, r5, #8
    b7e4:	ldr	r1, [r6, #60]	; 0x3c
    b7e8:	bl	4d90 <sas_read8@plt>
    b7ec:	strd	r0, [r4, #8]
    b7f0:	mov	r7, #0
    b7f4:	ldrb	r0, [r5, #16]
    b7f8:	strb	r0, [r4, #16]
    b7fc:	ldrb	r0, [r5, #17]
    b800:	b	b840 <sas7bdat_parse_subheader_pointer+0x9c>
    b804:	cmp	r1, #10
    b808:	bcc	b844 <sas7bdat_parse_subheader_pointer+0xa0>
    b80c:	ldr	r1, [r6, #60]	; 0x3c
    b810:	mov	r0, r5
    b814:	bl	4dc0 <sas_read4@plt>
    b818:	mov	r7, #0
    b81c:	stm	r4, {r0, r7}
    b820:	add	r0, r5, #4
    b824:	ldr	r1, [r6, #60]	; 0x3c
    b828:	bl	4dc0 <sas_read4@plt>
    b82c:	mov	r6, r0
    b830:	strd	r6, [r4, #8]
    b834:	ldrb	r0, [r5, #8]
    b838:	strb	r0, [r4, #16]
    b83c:	ldrb	r0, [r5, #9]
    b840:	strb	r0, [r4, #17]
    b844:	mov	r0, r7
    b848:	pop	{r4, r5, r6, r7, fp, pc}

0000b84c <sas7bdat_validate_subheader_pointer>:
    b84c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b850:	add	fp, sp, #28
    b854:	sub	sp, sp, #4
    b858:	ldr	r6, [r0]
    b85c:	ldr	r5, [r0, #4]
    b860:	mov	ip, r0
    b864:	mov	r0, #5
    b868:	subs	r7, r1, r6
    b86c:	rscs	r7, r5, #0
    b870:	bcc	b90c <sas7bdat_validate_subheader_pointer+0xc0>
    b874:	ldr	sl, [ip, #8]
    b878:	ldr	r9, [ip, #12]
    b87c:	adds	r8, sl, r6
    b880:	adc	lr, r9, r5
    b884:	subs	r7, r1, sl
    b888:	rscs	r7, r9, #0
    b88c:	bcc	b90c <sas7bdat_validate_subheader_pointer+0xc0>
    b890:	subs	r7, r1, r8
    b894:	rscs	r7, lr, #0
    b898:	bcc	b90c <sas7bdat_validate_subheader_pointer+0xc0>
    b89c:	ldr	r8, [r3, #128]	; 0x80
    b8a0:	ldr	r7, [r3, #132]	; 0x84
    b8a4:	str	r7, [sp]
    b8a8:	ldr	r4, [r3, #144]	; 0x90
    b8ac:	ldr	r7, [r3, #148]	; 0x94
    b8b0:	umull	r4, lr, r4, r2
    b8b4:	mla	r2, r7, r2, lr
    b8b8:	adds	r7, r4, r8
    b8bc:	ldr	r4, [sp]
    b8c0:	adc	r2, r2, r4
    b8c4:	subs	r7, r6, r7
    b8c8:	sbcs	r2, r5, r2
    b8cc:	bcc	b90c <sas7bdat_validate_subheader_pointer+0xc0>
    b8d0:	ldrb	r2, [ip, #16]
    b8d4:	cmp	r2, #0
    b8d8:	beq	b8e4 <sas7bdat_validate_subheader_pointer+0x98>
    b8dc:	mov	r0, #0
    b8e0:	b	b90c <sas7bdat_validate_subheader_pointer+0xc0>
    b8e4:	ldr	r4, [r3, #136]	; 0x88
    b8e8:	ldr	r7, [r3, #140]	; 0x8c
    b8ec:	adds	r2, r4, r6
    b8f0:	adc	r3, r7, r5
    b8f4:	subs	r6, sl, r4
    b8f8:	sbcs	r7, r9, r7
    b8fc:	bcc	b90c <sas7bdat_validate_subheader_pointer+0xc0>
    b900:	subs	r1, r1, r2
    b904:	rscs	r1, r3, #0
    b908:	movcs	r0, #0
    b90c:	sub	sp, fp, #28
    b910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b914 <sas7bdat_parse_subheader>:
    b914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b918:	add	fp, sp, #28
    b91c:	sub	sp, sp, #12
    b920:	ldrd	r8, [r3, #136]	; 0x88
    b924:	mov	r5, r1
    b928:	mov	r6, r2
    b92c:	mov	r7, #5
    b930:	adds	r1, r8, #2
    b934:	adc	r2, r9, #0
    b938:	subs	r1, r6, r1
    b93c:	rscs	r1, r2, #0
    b940:	bcs	b950 <sas7bdat_parse_subheader+0x3c>
    b944:	mov	r0, r7
    b948:	sub	sp, fp, #28
    b94c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b950:	mov	sl, r3
    b954:	cmn	r0, #1024	; 0x400
    b958:	bge	ba48 <sas7bdat_parse_subheader+0x134>
    b95c:	movw	r1, #63222	; 0xf6f6
    b960:	movt	r1, #63222	; 0xf6f6
    b964:	cmp	r0, r1
    b968:	beq	ba8c <sas7bdat_parse_subheader+0x178>
    b96c:	movw	r1, #63479	; 0xf7f7
    b970:	movt	r1, #63479	; 0xf7f7
    b974:	cmp	r0, r1
    b978:	beq	bad8 <sas7bdat_parse_subheader+0x1c4>
    b97c:	movw	r1, #64510	; 0xfbfe
    b980:	movt	r1, #65535	; 0xffff
    b984:	cmp	r0, r1
    b988:	bne	bb40 <sas7bdat_parse_subheader+0x22c>
    b98c:	ldr	r0, [sl, #44]	; 0x2c
    b990:	mov	r1, #58	; 0x3a
    b994:	cmp	r0, #0
    b998:	movweq	r1, #46	; 0x2e
    b99c:	cmp	r1, r6
    b9a0:	bhi	b944 <sas7bdat_parse_subheader+0x30>
    b9a4:	ldr	r0, [sl, #172]	; 0xac
    b9a8:	add	r1, r0, #1
    b9ac:	mov	r0, sl
    b9b0:	str	r1, [sl, #172]	; 0xac
    b9b4:	bl	bf18 <sas7bdat_realloc_col_info>
    b9b8:	mov	r7, r0
    b9bc:	cmp	r0, #0
    b9c0:	bne	b944 <sas7bdat_parse_subheader+0x30>
    b9c4:	ldr	r0, [sl, #44]	; 0x2c
    b9c8:	ldr	r4, [sl, #172]	; 0xac
    b9cc:	ldr	r6, [sl, #192]	; 0xc0
    b9d0:	mov	r1, #46	; 0x2e
    b9d4:	mov	r2, sl
    b9d8:	cmp	r0, #0
    b9dc:	add	r0, sp, #4
    b9e0:	movweq	r1, #34	; 0x22
    b9e4:	add	r1, r5, r1
    b9e8:	bl	bf88 <sas7bdat_parse_text_ref>
    b9ec:	ldrh	r1, [sp, #8]
    b9f0:	add	r0, r4, r4, lsl #2
    b9f4:	mov	r2, sl
    b9f8:	add	r0, r6, r0, lsl #3
    b9fc:	strh	r1, [r0, #-30]	; 0xffffffe2
    ba00:	ldr	r1, [sp, #4]
    ba04:	str	r1, [r0, #-34]	; 0xffffffde
    ba08:	mov	r1, #52	; 0x34
    ba0c:	ldr	r0, [sl, #44]	; 0x2c
    ba10:	ldr	r4, [sl, #172]	; 0xac
    ba14:	ldr	r6, [sl, #192]	; 0xc0
    ba18:	cmp	r0, #0
    ba1c:	add	r0, sp, #4
    ba20:	movweq	r1, #40	; 0x28
    ba24:	add	r1, r5, r1
    ba28:	bl	bf88 <sas7bdat_parse_text_ref>
    ba2c:	ldrh	r1, [sp, #8]
    ba30:	add	r0, r4, r4, lsl #2
    ba34:	add	r0, r6, r0, lsl #3
    ba38:	strh	r1, [r0, #-24]	; 0xffffffe8
    ba3c:	ldr	r1, [sp, #4]
    ba40:	str	r1, [r0, #-28]	; 0xffffffe4
    ba44:	b	be3c <sas7bdat_parse_subheader+0x528>
    ba48:	add	r1, r0, #4
    ba4c:	cmp	r1, #3
    ba50:	bhi	bb34 <sas7bdat_parse_subheader+0x220>
    ba54:	add	r0, pc, #8
    ba58:	mov	r7, #0
    ba5c:	ldr	r1, [r0, r1, lsl #2]
    ba60:	add	pc, r0, r1
    ba64:	.word	0x00000010
    ba68:	.word	0x000000f4
    ba6c:	.word	0xfffffee0
    ba70:	.word	0x000001dc
    ba74:	ldr	r0, [sl, #44]	; 0x2c
    ba78:	cmp	r0, #0
    ba7c:	beq	bd10 <sas7bdat_parse_subheader+0x3fc>
    ba80:	sub	r0, r6, #28
    ba84:	lsr	r9, r0, #4
    ba88:	b	bd24 <sas7bdat_parse_subheader+0x410>
    ba8c:	ldr	r0, [sl, #80]	; 0x50
    ba90:	cmp	r0, #0
    ba94:	bne	b944 <sas7bdat_parse_subheader+0x30>
    ba98:	ldr	r0, [sl, #64]	; 0x40
    ba9c:	cmp	r0, #0
    baa0:	bne	b944 <sas7bdat_parse_subheader+0x30>
    baa4:	ldr	r0, [sl, #44]	; 0x2c
    baa8:	mov	r1, #8
    baac:	mov	r7, #5
    bab0:	cmp	r0, #0
    bab4:	movwne	r1, #16
    bab8:	cmp	r1, r6
    babc:	bhi	b944 <sas7bdat_parse_subheader+0x30>
    bac0:	cmp	r0, #0
    bac4:	beq	bef0 <sas7bdat_parse_subheader+0x5dc>
    bac8:	ldr	r1, [sl, #60]	; 0x3c
    bacc:	add	r0, r5, #8
    bad0:	bl	4d90 <sas_read8@plt>
    bad4:	b	befc <sas7bdat_parse_subheader+0x5e8>
    bad8:	ldr	r0, [sl, #44]	; 0x2c
    badc:	mov	r1, #64	; 0x40
    bae0:	mov	r7, #5
    bae4:	cmp	r0, #0
    bae8:	movwne	r1, #128	; 0x80
    baec:	cmp	r1, r6
    baf0:	bhi	b944 <sas7bdat_parse_subheader+0x30>
    baf4:	cmp	r0, #0
    baf8:	beq	be44 <sas7bdat_parse_subheader+0x530>
    bafc:	ldr	r1, [sl, #60]	; 0x3c
    bb00:	add	r0, r5, #40	; 0x28
    bb04:	bl	4d90 <sas_read8@plt>
    bb08:	ldr	r1, [sl, #60]	; 0x3c
    bb0c:	mov	r7, r0
    bb10:	add	r0, r5, #48	; 0x30
    bb14:	bl	4d90 <sas_read8@plt>
    bb18:	mov	r8, r1
    bb1c:	ldr	r1, [sl, #60]	; 0x3c
    bb20:	mov	r6, r0
    bb24:	add	r0, r5, #120	; 0x78
    bb28:	bl	4d90 <sas_read8@plt>
    bb2c:	mov	r5, r0
    bb30:	b	be78 <sas7bdat_parse_subheader+0x564>
    bb34:	cmn	r0, #1024	; 0x400
    bb38:	mov	r7, #0
    bb3c:	beq	b944 <sas7bdat_parse_subheader+0x30>
    bb40:	mov	r1, #5
    bb44:	cmn	r0, #9
    bb48:	movwhi	r1, #0
    bb4c:	mov	r0, r1
    bb50:	sub	sp, fp, #28
    bb54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bb58:	ldr	r1, [sl, #60]	; 0x3c
    bb5c:	add	r5, r5, r8
    bb60:	mov	r0, r5
    bb64:	bl	4d9c <sas_read2@plt>
    bb68:	mov	r7, r0
    bb6c:	mov	r0, r6
    bb70:	mov	r1, r8
    bb74:	bl	4d84 <sas_subheader_remainder@plt>
    bb78:	cmp	r0, r7
    bb7c:	mov	r7, #5
    bb80:	bne	b944 <sas7bdat_parse_subheader+0x30>
    bb84:	ldr	r1, [sl, #152]	; 0x98
    bb88:	ldr	r0, [sl, #160]	; 0xa0
    bb8c:	add	r1, r1, #1
    bb90:	str	r1, [sl, #152]	; 0x98
    bb94:	lsl	r1, r1, #2
    bb98:	bl	4cb8 <readstat_realloc@plt>
    bb9c:	str	r0, [sl, #160]	; 0xa0
    bba0:	ldr	r0, [sl, #152]	; 0x98
    bba4:	ldr	r3, [sl, #156]	; 0x9c
    bba8:	lsl	r1, r0, #2
    bbac:	mov	r0, r3
    bbb0:	bl	4cb8 <readstat_realloc@plt>
    bbb4:	str	r0, [sl, #156]	; 0x9c
    bbb8:	cmp	r0, #0
    bbbc:	mov	r7, #3
    bbc0:	ldrne	r0, [sl, #160]	; 0xa0
    bbc4:	cmpne	r0, #0
    bbc8:	beq	b944 <sas7bdat_parse_subheader+0x30>
    bbcc:	sub	r6, r6, r8
    bbd0:	mov	r0, r6
    bbd4:	bl	4bf8 <readstat_malloc@plt>
    bbd8:	cmp	r0, #0
    bbdc:	beq	b944 <sas7bdat_parse_subheader+0x30>
    bbe0:	mov	r1, r5
    bbe4:	mov	r2, r6
    bbe8:	mov	r8, r0
    bbec:	bl	4910 <memcpy@plt>
    bbf0:	ldrd	r0, [sl, #152]	; 0x98
    bbf4:	cmp	r6, #21
    bbf8:	add	r0, r1, r0, lsl #2
    bbfc:	str	r6, [r0, #-4]
    bc00:	ldr	r0, [sl, #152]	; 0x98
    bc04:	ldr	r1, [sl, #160]	; 0xa0
    bc08:	add	r0, r1, r0, lsl #2
    bc0c:	str	r8, [r0, #-4]
    bc10:	bcc	be3c <sas7bdat_parse_subheader+0x528>
    bc14:	ldr	r1, [pc, #760]	; bf14 <sas7bdat_parse_subheader+0x600>
    bc18:	add	r0, r8, #12
    bc1c:	mov	r2, #8
    bc20:	add	r1, pc, r1
    bc24:	bl	4ebc <strncmp@plt>
    bc28:	cmp	r0, #0
    bc2c:	bne	be3c <sas7bdat_parse_subheader+0x528>
    bc30:	ldrb	r0, [sl, #2529]	; 0x9e1
    bc34:	orr	r0, r0, #1
    bc38:	strb	r0, [sl, #2529]	; 0x9e1
    bc3c:	b	be3c <sas7bdat_parse_subheader+0x528>
    bc40:	ldr	r0, [sl, #44]	; 0x2c
    bc44:	ldr	r1, [sl, #60]	; 0x3c
    bc48:	add	r9, r5, r8
    bc4c:	mvn	r5, #27
    bc50:	cmp	r0, #0
    bc54:	mov	r0, r9
    bc58:	mvneq	r5, #19
    bc5c:	bl	4d9c <sas_read2@plt>
    bc60:	mov	r7, r0
    bc64:	mov	r0, r6
    bc68:	mov	r1, r8
    bc6c:	bl	4d84 <sas_subheader_remainder@plt>
    bc70:	cmp	r0, r7
    bc74:	mov	r7, #5
    bc78:	bne	b944 <sas7bdat_parse_subheader+0x30>
    bc7c:	add	r0, r5, r6
    bc80:	lsr	r6, r0, #3
    bc84:	ldr	r0, [sl, #164]	; 0xa4
    bc88:	add	r1, r0, r6
    bc8c:	mov	r0, sl
    bc90:	str	r1, [sl, #164]	; 0xa4
    bc94:	bl	bf18 <sas7bdat_realloc_col_info>
    bc98:	mov	r7, r0
    bc9c:	cmp	r0, #0
    bca0:	bne	b944 <sas7bdat_parse_subheader+0x30>
    bca4:	cmp	r6, #0
    bca8:	beq	be3c <sas7bdat_parse_subheader+0x528>
    bcac:	ldr	r0, [sl, #164]	; 0xa4
    bcb0:	add	r1, r6, r6, lsl #2
    bcb4:	add	r5, r9, #8
    bcb8:	add	r8, sp, #4
    bcbc:	sub	r7, r0, r6
    bcc0:	add	r0, r0, r0, lsl #2
    bcc4:	lsl	r0, r0, #3
    bcc8:	sub	r6, r0, r1, lsl #3
    bccc:	ldr	r4, [sl, #192]	; 0xc0
    bcd0:	mov	r0, r8
    bcd4:	mov	r1, r5
    bcd8:	mov	r2, sl
    bcdc:	bl	bf88 <sas7bdat_parse_text_ref>
    bce0:	ldr	r0, [sp, #4]
    bce4:	add	r7, r7, #1
    bce8:	add	r5, r5, #8
    bcec:	str	r0, [r4, r6]
    bcf0:	add	r0, r4, r6
    bcf4:	add	r6, r6, #40	; 0x28
    bcf8:	ldrh	r1, [sp, #8]
    bcfc:	strh	r1, [r0, #4]
    bd00:	ldr	r0, [sl, #164]	; 0xa4
    bd04:	cmp	r7, r0
    bd08:	blt	bccc <sas7bdat_parse_subheader+0x3b8>
    bd0c:	b	be3c <sas7bdat_parse_subheader+0x528>
    bd10:	movw	r1, #43691	; 0xaaab
    bd14:	sub	r0, r6, #20
    bd18:	movt	r1, #43690	; 0xaaaa
    bd1c:	umull	r0, r1, r0, r1
    bd20:	lsr	r9, r1, #3
    bd24:	ldr	r1, [sl, #60]	; 0x3c
    bd28:	add	r5, r5, r8
    bd2c:	mov	r0, r5
    bd30:	bl	4d9c <sas_read2@plt>
    bd34:	mov	r7, r0
    bd38:	mov	r0, r6
    bd3c:	mov	r1, r8
    bd40:	bl	4d84 <sas_subheader_remainder@plt>
    bd44:	cmp	r0, r7
    bd48:	mov	r7, #5
    bd4c:	bne	b944 <sas7bdat_parse_subheader+0x30>
    bd50:	ldr	r0, [sl, #168]	; 0xa8
    bd54:	add	r1, r0, r9
    bd58:	mov	r0, sl
    bd5c:	str	r1, [sl, #168]	; 0xa8
    bd60:	bl	bf18 <sas7bdat_realloc_col_info>
    bd64:	mov	r7, r0
    bd68:	cmp	r0, #0
    bd6c:	bne	b944 <sas7bdat_parse_subheader+0x30>
    bd70:	cmp	r9, #0
    bd74:	beq	be3c <sas7bdat_parse_subheader+0x528>
    bd78:	ldr	r0, [sl, #168]	; 0xa8
    bd7c:	add	r1, r9, r9, lsl #2
    bd80:	add	r5, r5, #8
    bd84:	sub	r8, r0, r9
    bd88:	add	r0, r0, r0, lsl #2
    bd8c:	lsl	r0, r0, #3
    bd90:	sub	r6, r0, r1, lsl #3
    bd94:	ldr	r0, [sl, #44]	; 0x2c
    bd98:	ldr	r1, [sl, #60]	; 0x3c
    bd9c:	cmp	r0, #0
    bda0:	beq	bdb0 <sas7bdat_parse_subheader+0x49c>
    bda4:	mov	r0, r5
    bda8:	bl	4d90 <sas_read8@plt>
    bdac:	b	bdbc <sas7bdat_parse_subheader+0x4a8>
    bdb0:	mov	r0, r5
    bdb4:	bl	4dc0 <sas_read4@plt>
    bdb8:	mov	r1, #0
    bdbc:	ldr	r2, [sl, #192]	; 0xc0
    bdc0:	add	r2, r2, r6
    bdc4:	strd	r0, [r2, #24]
    bdc8:	ldr	r0, [sl, #44]	; 0x2c
    bdcc:	ldr	r1, [sl, #60]	; 0x3c
    bdd0:	cmp	r0, #0
    bdd4:	mov	r0, #8
    bdd8:	movweq	r0, #4
    bddc:	add	r5, r5, r0
    bde0:	mov	r0, r5
    bde4:	bl	4dc0 <sas_read4@plt>
    bde8:	ldr	r1, [sl, #192]	; 0xc0
    bdec:	mov	r7, #5
    bdf0:	add	r1, r1, r6
    bdf4:	str	r0, [r1, #32]
    bdf8:	ldr	r2, [sl, #176]	; 0xb0
    bdfc:	cmp	r0, r2
    be00:	strhi	r0, [sl, #176]	; 0xb0
    be04:	ldrb	r0, [r5, #6]
    be08:	cmp	r0, #1
    be0c:	beq	be1c <sas7bdat_parse_subheader+0x508>
    be10:	cmp	r0, #2
    be14:	bne	b944 <sas7bdat_parse_subheader+0x30>
    be18:	mov	r7, #0
    be1c:	str	r8, [r1, #20]
    be20:	str	r7, [r1, #36]	; 0x24
    be24:	add	r8, r8, #1
    be28:	add	r5, r5, #8
    be2c:	add	r6, r6, #40	; 0x28
    be30:	ldr	r0, [sl, #168]	; 0xa8
    be34:	cmp	r8, r0
    be38:	blt	bd94 <sas7bdat_parse_subheader+0x480>
    be3c:	mov	r7, #0
    be40:	b	b944 <sas7bdat_parse_subheader+0x30>
    be44:	ldr	r1, [sl, #60]	; 0x3c
    be48:	add	r0, r5, #20
    be4c:	bl	4dc0 <sas_read4@plt>
    be50:	ldr	r1, [sl, #60]	; 0x3c
    be54:	mov	r7, r0
    be58:	add	r0, r5, #24
    be5c:	bl	4dc0 <sas_read4@plt>
    be60:	ldr	r1, [sl, #60]	; 0x3c
    be64:	mov	r6, r0
    be68:	add	r0, r5, #60	; 0x3c
    be6c:	bl	4dc0 <sas_read4@plt>
    be70:	mov	r5, r0
    be74:	mov	r8, #0
    be78:	str	r7, [sl, #68]	; 0x44
    be7c:	mov	r1, r7
    be80:	ldr	r0, [sl, #124]	; 0x7c
    be84:	bl	4cb8 <readstat_realloc@plt>
    be88:	cmp	r0, #0
    be8c:	str	r0, [sl, #124]	; 0x7c
    be90:	beq	beb4 <sas7bdat_parse_subheader+0x5a0>
    be94:	str	r5, [sl, #72]	; 0x48
    be98:	ldr	r0, [sl, #88]	; 0x58
    be9c:	subs	r1, r0, r6
    bea0:	rscs	r1, r8, #0
    bea4:	bcs	bebc <sas7bdat_parse_subheader+0x5a8>
    bea8:	subs	r0, r6, r0
    beac:	sbc	r1, r8, #0
    beb0:	b	bec8 <sas7bdat_parse_subheader+0x5b4>
    beb4:	mov	r7, #3
    beb8:	b	b944 <sas7bdat_parse_subheader+0x30>
    bebc:	mov	r0, #0
    bec0:	mov	r1, #0
    bec4:	str	r6, [sl, #88]	; 0x58
    bec8:	ldr	r2, [sl, #84]	; 0x54
    becc:	mov	r7, #0
    bed0:	cmp	r2, #0
    bed4:	beq	bee8 <sas7bdat_parse_subheader+0x5d4>
    bed8:	subs	r2, r0, r2
    bedc:	sbcs	r1, r1, #0
    bee0:	strcc	r0, [sl, #84]	; 0x54
    bee4:	b	b944 <sas7bdat_parse_subheader+0x30>
    bee8:	str	r0, [sl, #84]	; 0x54
    beec:	b	b944 <sas7bdat_parse_subheader+0x30>
    bef0:	ldr	r1, [sl, #60]	; 0x3c
    bef4:	add	r0, r5, #4
    bef8:	bl	4dc0 <sas_read4@plt>
    befc:	mov	r1, r0
    bf00:	str	r0, [sl, #80]	; 0x50
    bf04:	mov	r0, sl
    bf08:	sub	sp, fp, #28
    bf0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bf10:	b	bf18 <sas7bdat_realloc_col_info>
    bf14:	.word	0x00018801

0000bf18 <sas7bdat_realloc_col_info>:
    bf18:	push	{r4, r5, r6, r7, fp, lr}
    bf1c:	add	fp, sp, #16
    bf20:	ldr	r7, [r0, #188]	; 0xbc
    bf24:	mov	r6, #0
    bf28:	cmp	r7, r1
    bf2c:	bcs	bf80 <sas7bdat_realloc_col_info+0x68>
    bf30:	str	r1, [r0, #188]	; 0xbc
    bf34:	mov	r5, r0
    bf38:	mov	r4, r1
    bf3c:	add	r1, r1, r1, lsl #2
    bf40:	ldr	r0, [r0, #192]	; 0xc0
    bf44:	lsl	r1, r1, #3
    bf48:	bl	4cb8 <readstat_realloc@plt>
    bf4c:	cmp	r0, #0
    bf50:	str	r0, [r5, #192]	; 0xc0
    bf54:	beq	bf7c <sas7bdat_realloc_col_info+0x64>
    bf58:	add	r1, r7, r7, lsl #2
    bf5c:	mov	r6, #0
    bf60:	add	r0, r0, r1, lsl #3
    bf64:	sub	r1, r4, r7
    bf68:	add	r1, r1, r1, lsl #2
    bf6c:	lsl	r2, r1, #3
    bf70:	mov	r1, #0
    bf74:	bl	4c70 <memset@plt>
    bf78:	b	bf80 <sas7bdat_realloc_col_info+0x68>
    bf7c:	mov	r6, #3
    bf80:	mov	r0, r6
    bf84:	pop	{r4, r5, r6, r7, fp, pc}

0000bf88 <sas7bdat_parse_text_ref>:
    bf88:	push	{r4, r5, r6, sl, fp, lr}
    bf8c:	add	fp, sp, #16
    bf90:	mov	r5, r1
    bf94:	ldr	r1, [r2, #60]	; 0x3c
    bf98:	mov	r6, r0
    bf9c:	mov	r4, r2
    bfa0:	mov	r0, r5
    bfa4:	bl	4d9c <sas_read2@plt>
    bfa8:	strh	r0, [r6]
    bfac:	add	r0, r5, #2
    bfb0:	ldr	r1, [r4, #60]	; 0x3c
    bfb4:	bl	4d9c <sas_read2@plt>
    bfb8:	strh	r0, [r6, #2]
    bfbc:	add	r0, r5, #4
    bfc0:	ldr	r1, [r4, #60]	; 0x3c
    bfc4:	bl	4d9c <sas_read2@plt>
    bfc8:	strh	r0, [r6, #4]
    bfcc:	pop	{r4, r5, r6, sl, fp, pc}

0000bfd0 <sas7bdat_parse_single_row>:
    bfd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bfd4:	add	fp, sp, #28
    bfd8:	sub	sp, sp, #4
    bfdc:	vpush	{d8-d9}
    bfe0:	sub	sp, sp, #40	; 0x28
    bfe4:	str	r0, [sp, #20]
    bfe8:	mov	r4, r1
    bfec:	ldr	r0, [r1, #76]	; 0x4c
    bff0:	ldr	r1, [r1, #84]	; 0x54
    bff4:	mov	r6, #0
    bff8:	cmp	r0, r1
    bffc:	beq	c274 <sas7bdat_parse_single_row+0x2a4>
    c000:	ldr	r0, [r4, #88]	; 0x58
    c004:	cmp	r0, #0
    c008:	beq	c018 <sas7bdat_parse_single_row+0x48>
    c00c:	sub	r0, r0, #1
    c010:	str	r0, [r4, #88]	; 0x58
    c014:	b	c274 <sas7bdat_parse_single_row+0x2a4>
    c018:	ldr	r0, [r4, #16]
    c01c:	cmp	r0, #0
    c020:	beq	c25c <sas7bdat_parse_single_row+0x28c>
    c024:	ldr	r0, [r4, #176]	; 0xb0
    c028:	ldr	r3, [r4, #180]	; 0xb4
    c02c:	mov	r1, #1
    c030:	orr	r1, r1, r0, lsl #2
    c034:	mov	r0, r3
    c038:	str	r1, [r4, #184]	; 0xb8
    c03c:	bl	4cb8 <readstat_realloc@plt>
    c040:	cmp	r0, #0
    c044:	str	r0, [r4, #180]	; 0xb4
    c048:	beq	c270 <sas7bdat_parse_single_row+0x2a0>
    c04c:	ldr	r0, [r4, #80]	; 0x50
    c050:	cmp	r0, #0
    c054:	beq	c25c <sas7bdat_parse_single_row+0x28c>
    c058:	ldr	r1, [sp, #20]
    c05c:	vmov.i32	q4, #0	; 0x00000000
    c060:	mov	r8, #0
    c064:	sub	r1, r1, #1
    c068:	str	r1, [sp, #12]
    c06c:	add	r1, sp, #24
    c070:	add	r1, r1, #8
    c074:	str	r1, [sp, #16]
    c078:	ldr	r1, [r4, #196]	; 0xc4
    c07c:	ldr	r7, [r1, r8, lsl #2]
    c080:	ldr	r1, [r7, #2144]	; 0x860
    c084:	cmp	r1, #0
    c088:	bne	c250 <sas7bdat_parse_single_row+0x280>
    c08c:	ldr	r0, [r4, #192]	; 0xc0
    c090:	add	r1, r8, r8, lsl #2
    c094:	mov	r6, #5
    c098:	add	r9, r0, r1, lsl #3
    c09c:	ldr	r0, [r4, #68]	; 0x44
    c0a0:	ldrd	r2, [r9, #24]
    c0a4:	subs	r1, r0, r2
    c0a8:	rscs	r1, r3, #0
    c0ac:	bcc	c274 <sas7bdat_parse_single_row+0x2a4>
    c0b0:	mov	sl, r9
    c0b4:	ldr	r1, [sl, #32]!
    c0b8:	adds	r1, r2, r1
    c0bc:	adc	r3, r3, #0
    c0c0:	subs	r0, r0, r1
    c0c4:	rscs	r0, r3, #0
    c0c8:	bcc	c274 <sas7bdat_parse_single_row+0x2a4>
    c0cc:	add	r1, sp, #24
    c0d0:	mov	r0, #8
    c0d4:	vst1.64	{d8-d9}, [r1], r0
    c0d8:	ldr	r0, [r9, #36]	; 0x24
    c0dc:	str	r0, [r1]
    c0e0:	ldr	r1, [sp, #20]
    c0e4:	cmp	r0, #5
    c0e8:	add	r5, r1, r2
    c0ec:	beq	c128 <sas7bdat_parse_single_row+0x158>
    c0f0:	cmp	r0, #0
    c0f4:	bne	c214 <sas7bdat_parse_single_row+0x244>
    c0f8:	ldr	r2, [r4, #208]	; 0xd0
    c0fc:	ldr	r3, [sl]
    c100:	ldr	r0, [r4, #180]	; 0xb4
    c104:	ldr	r1, [r4, #184]	; 0xb8
    c108:	str	r2, [sp]
    c10c:	mov	r2, r5
    c110:	bl	4c04 <readstat_convert@plt>
    c114:	cmp	r0, #0
    c118:	bne	c290 <sas7bdat_parse_single_row+0x2c0>
    c11c:	ldr	r0, [r4, #180]	; 0xb4
    c120:	str	r0, [sp, #24]
    c124:	b	c214 <sas7bdat_parse_single_row+0x244>
    c128:	ldr	r0, [r4, #40]	; 0x28
    c12c:	ldr	r6, [sl]
    c130:	cmp	r0, #0
    c134:	beq	c170 <sas7bdat_parse_single_row+0x1a0>
    c138:	cmp	r6, #0
    c13c:	beq	c1a0 <sas7bdat_parse_single_row+0x1d0>
    c140:	ldr	r0, [sp, #12]
    c144:	mov	r1, #0
    c148:	add	r3, r0, r2
    c14c:	mov	r0, r6
    c150:	mov	r2, #0
    c154:	ldrb	r5, [r3, r0]
    c158:	lsl	r2, r2, #8
    c15c:	subs	r0, r0, #1
    c160:	orr	r2, r2, r1, lsr #24
    c164:	orr	r1, r5, r1, lsl #8
    c168:	bne	c154 <sas7bdat_parse_single_row+0x184>
    c16c:	b	c1a8 <sas7bdat_parse_single_row+0x1d8>
    c170:	cmp	r6, #0
    c174:	beq	c1a0 <sas7bdat_parse_single_row+0x1d0>
    c178:	mov	r1, #0
    c17c:	mov	r3, r6
    c180:	mov	r2, #0
    c184:	lsl	r0, r2, #8
    c188:	subs	r3, r3, #1
    c18c:	orr	r2, r0, r1, lsr #24
    c190:	ldrb	r0, [r5], #1
    c194:	orr	r1, r0, r1, lsl #8
    c198:	bne	c184 <sas7bdat_parse_single_row+0x1b4>
    c19c:	b	c1a8 <sas7bdat_parse_single_row+0x1d8>
    c1a0:	mov	r1, #0
    c1a4:	mov	r2, #0
    c1a8:	mov	r0, #64	; 0x40
    c1ac:	sub	r0, r0, r6, lsl #3
    c1b0:	rsb	r3, r0, #32
    c1b4:	lsr	r3, r1, r3
    c1b8:	orr	r5, r3, r2, lsl r0
    c1bc:	mov	r2, #32
    c1c0:	sub	r2, r2, r6, lsl #3
    c1c4:	lsl	r6, r1, r0
    c1c8:	cmp	r2, #0
    c1cc:	lslge	r5, r1, r2
    c1d0:	movwge	r6, #0
    c1d4:	vmov	d0, r6, r5
    c1d8:	bl	4d00 <__isnan@plt>
    c1dc:	cmp	r0, #0
    c1e0:	beq	c20c <sas7bdat_parse_single_row+0x23c>
    c1e4:	movw	r0, #0
    c1e8:	movt	r0, #32760	; 0x7ff8
    c1ec:	str	r0, [sp, #28]
    c1f0:	mov	r0, #0
    c1f4:	str	r0, [sp, #24]
    c1f8:	mvn	r0, r5, lsr #8
    c1fc:	uxtb	r1, r0
    c200:	add	r0, sp, #24
    c204:	bl	4e68 <sas_assign_tag@plt>
    c208:	b	c214 <sas7bdat_parse_single_row+0x244>
    c20c:	str	r6, [sp, #24]
    c210:	str	r5, [sp, #28]
    c214:	ldr	r0, [sp, #16]
    c218:	ldr	r6, [r0]
    c21c:	ldr	r1, [r0, #4]
    c220:	ldr	r5, [r4, #52]	; 0x34
    c224:	ldr	ip, [r4, #16]
    c228:	ldr	r0, [r4, #76]	; 0x4c
    c22c:	ldr	r2, [sp, #24]
    c230:	ldr	r3, [sp, #28]
    c234:	str	r6, [sp]
    c238:	stmib	sp, {r1, r5}
    c23c:	mov	r1, r7
    c240:	blx	ip
    c244:	cmp	r0, #0
    c248:	bne	c288 <sas7bdat_parse_single_row+0x2b8>
    c24c:	ldr	r0, [r4, #80]	; 0x50
    c250:	add	r8, r8, #1
    c254:	cmp	r8, r0
    c258:	bcc	c078 <sas7bdat_parse_single_row+0xa8>
    c25c:	ldr	r0, [r4, #76]	; 0x4c
    c260:	mov	r6, #0
    c264:	add	r0, r0, #1
    c268:	str	r0, [r4, #76]	; 0x4c
    c26c:	b	c274 <sas7bdat_parse_single_row+0x2a4>
    c270:	mov	r6, #3
    c274:	mov	r0, r6
    c278:	sub	sp, fp, #48	; 0x30
    c27c:	vpop	{d8-d9}
    c280:	add	sp, sp, #4
    c284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c288:	mov	r6, #4
    c28c:	b	c274 <sas7bdat_parse_single_row+0x2a4>
    c290:	mov	r6, r0
    c294:	ldr	r0, [r4, #24]
    c298:	cmp	r0, #0
    c29c:	beq	c274 <sas7bdat_parse_single_row+0x2a4>
    c2a0:	ldr	r0, [r9, #20]
    c2a4:	ldr	r2, [sl]
    c2a8:	ldr	r1, [r4, #76]	; 0x4c
    c2ac:	add	r0, r0, #1
    c2b0:	add	r3, r1, #1
    c2b4:	mov	r1, #2048	; 0x800
    c2b8:	stm	sp, {r0, r2, r5}
    c2bc:	movw	r0, #481	; 0x1e1
    c2c0:	ldr	r2, [pc, #32]	; c2e8 <sas7bdat_parse_single_row+0x318>
    c2c4:	add	r5, r4, r0
    c2c8:	mov	r0, r5
    c2cc:	add	r2, pc, r2
    c2d0:	bl	4c4c <snprintf@plt>
    c2d4:	ldr	r2, [r4, #24]
    c2d8:	ldr	r1, [r4, #52]	; 0x34
    c2dc:	mov	r0, r5
    c2e0:	blx	r2
    c2e4:	b	c274 <sas7bdat_parse_single_row+0x2a4>
    c2e8:	.word	0x0001815e

0000c2ec <sas7bdat_copy_text_ref>:
    c2ec:	push	{r4, r5, r6, sl, fp, lr}
    c2f0:	add	fp, sp, #16
    c2f4:	sub	sp, sp, #8
    c2f8:	ldr	r4, [fp, #8]
    c2fc:	uxth	lr, r2
    c300:	mov	ip, #5
    c304:	ldr	r5, [r4, #152]	; 0x98
    c308:	cmp	lr, r5
    c30c:	bge	c35c <sas7bdat_copy_text_ref+0x70>
    c310:	uxth	r3, r3
    c314:	cmp	r3, #0
    c318:	beq	c354 <sas7bdat_copy_text_ref+0x68>
    c31c:	ldr	r5, [r4, #156]	; 0x9c
    c320:	lsr	r2, r2, #16
    c324:	add	r6, r2, r3
    c328:	ldr	r5, [r5, lr, lsl #2]
    c32c:	cmp	r6, r5
    c330:	bhi	c35c <sas7bdat_copy_text_ref+0x70>
    c334:	ldr	r6, [r4, #160]	; 0xa0
    c338:	ldr	r5, [r4, #208]	; 0xd0
    c33c:	ldr	r6, [r6, lr, lsl #2]
    c340:	str	r5, [sp]
    c344:	add	r2, r6, r2
    c348:	bl	4c04 <readstat_convert@plt>
    c34c:	sub	sp, fp, #16
    c350:	pop	{r4, r5, r6, sl, fp, pc}
    c354:	mov	ip, #0
    c358:	strb	ip, [r0]
    c35c:	mov	r0, ip
    c360:	sub	sp, fp, #16
    c364:	pop	{r4, r5, r6, sl, fp, pc}

0000c368 <readstat_begin_writing_sas7bdat>:
    c368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c36c:	add	fp, sp, #28
    c370:	ldr	r3, [r0, #8]
    c374:	mov	r9, r2
    c378:	cmp	r3, #0
    c37c:	moveq	r3, #9
    c380:	streq	r3, [r0, #8]
    c384:	ldr	ip, [pc, #192]	; c44c <readstat_begin_writing_sas7bdat+0xe4>
    c388:	ldr	sl, [pc, #192]	; c450 <readstat_begin_writing_sas7bdat+0xe8>
    c38c:	ldr	r4, [pc, #192]	; c454 <readstat_begin_writing_sas7bdat+0xec>
    c390:	ldr	r5, [pc, #192]	; c458 <readstat_begin_writing_sas7bdat+0xf0>
    c394:	ldr	r6, [pc, #192]	; c45c <readstat_begin_writing_sas7bdat+0xf4>
    c398:	ldr	r3, [pc, #192]	; c460 <readstat_begin_writing_sas7bdat+0xf8>
    c39c:	ldr	r2, [pc, #192]	; c464 <readstat_begin_writing_sas7bdat+0xfc>
    c3a0:	ldr	lr, [pc, #192]	; c468 <readstat_begin_writing_sas7bdat+0x100>
    c3a4:	ldr	r7, [pc, #192]	; c46c <readstat_begin_writing_sas7bdat+0x104>
    c3a8:	ldr	r8, [pc, #192]	; c470 <readstat_begin_writing_sas7bdat+0x108>
    c3ac:	add	r4, pc, r4
    c3b0:	add	ip, pc, ip
    c3b4:	add	r5, pc, r5
    c3b8:	add	r6, pc, r6
    c3bc:	add	r2, pc, r2
    c3c0:	add	lr, pc, lr
    c3c4:	add	r7, pc, r7
    c3c8:	add	r8, pc, r8
    c3cc:	add	r3, pc, r3
    c3d0:	add	sl, pc, sl
    c3d4:	str	r4, [r0, #264]	; 0x108
    c3d8:	add	r4, r0, #276	; 0x114
    c3dc:	str	r5, [r0, #268]	; 0x10c
    c3e0:	str	r6, [r0, #272]	; 0x110
    c3e4:	stm	r4, {r2, r8, lr}
    c3e8:	str	r7, [r0, #288]	; 0x120
    c3ec:	str	ip, [r0, #292]	; 0x124
    c3f0:	ldr	r2, [pc, #124]	; c474 <readstat_begin_writing_sas7bdat+0x10c>
    c3f4:	ldr	r2, [pc, r2]
    c3f8:	str	r3, [r0, #228]	; 0xe4
    c3fc:	str	r2, [r0, #232]	; 0xe8
    c400:	ldr	r2, [pc, #112]	; c478 <readstat_begin_writing_sas7bdat+0x110>
    c404:	add	r2, pc, r2
    c408:	str	r2, [r0, #236]	; 0xec
    c40c:	ldr	r2, [pc, #104]	; c47c <readstat_begin_writing_sas7bdat+0x114>
    c410:	add	r2, pc, r2
    c414:	str	r2, [r0, #240]	; 0xf0
    c418:	ldr	r2, [pc, #96]	; c480 <readstat_begin_writing_sas7bdat+0x118>
    c41c:	add	r2, pc, r2
    c420:	str	r2, [r0, #244]	; 0xf4
    c424:	ldr	r2, [pc, #88]	; c484 <readstat_begin_writing_sas7bdat+0x11c>
    c428:	add	r2, pc, r2
    c42c:	str	r2, [r0, #248]	; 0xf8
    c430:	str	sl, [r0, #252]	; 0xfc
    c434:	ldr	r2, [pc, #76]	; c488 <readstat_begin_writing_sas7bdat+0x120>
    c438:	add	r2, pc, r2
    c43c:	str	r2, [r0, #256]	; 0x100
    c440:	mov	r2, r9
    c444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c448:	b	494c <readstat_begin_writing_file@plt>
    c44c:	.word	0x000000d4
    c450:	.word	0x00000114
    c454:	.word	0x000001b8
    c458:	.word	0x000001dc
    c45c:	.word	0x000001f4
    c460:	.word	0x00000220
    c464:	.word	0x00000240
    c468:	.word	0x00000b00
    c46c:	.word	0x00000b18
    c470:	.word	0x00000b18
    c474:	.word	0x00037ed0
    c478:	.word	0x00000094
    c47c:	.word	0x0000009c
    c480:	.word	0x000000a4
    c484:	.word	0x000000ac
    c488:	.word	0x000000b8

0000c48c <sas7bdat_metadata_ok>:
    c48c:	ldr	r1, [r0, #16]
    c490:	mov	r0, #6
    c494:	cmp	r1, #2
    c498:	movwcc	r0, #0
    c49c:	bx	lr

0000c4a0 <sas7bdat_write_int8>:
    c4a0:	vmov	s0, r2
    c4a4:	vcvt.f64.s32	d16, s0
    c4a8:	vst1.8	{d16}, [r0]
    c4ac:	mov	r0, #0
    c4b0:	bx	lr

0000c4b4 <sas7bdat_write_int16>:
    c4b4:	vmov	s0, r2
    c4b8:	vcvt.f64.s32	d16, s0
    c4bc:	vst1.8	{d16}, [r0]
    c4c0:	mov	r0, #0
    c4c4:	bx	lr

0000c4c8 <sas7bdat_write_int32>:
    c4c8:	vmov	s0, r2
    c4cc:	vcvt.f64.s32	d16, s0
    c4d0:	vst1.8	{d16}, [r0]
    c4d4:	mov	r0, #0
    c4d8:	bx	lr

0000c4dc <sas7bdat_write_float>:
    c4dc:	vcvt.f64.f32	d16, s0
    c4e0:	vst1.8	{d16}, [r0]
    c4e4:	mov	r0, #0
    c4e8:	bx	lr

0000c4ec <sas7bdat_write_double>:
    c4ec:	vst1.8	{d0}, [r0]
    c4f0:	mov	r0, #0
    c4f4:	bx	lr

0000c4f8 <sas7bdat_write_string>:
    c4f8:	push	{r4, r5, r6, r7, fp, lr}
    c4fc:	add	fp, sp, #16
    c500:	mov	r4, r0
    c504:	mov	r0, r1
    c508:	mov	r5, r2
    c50c:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    c510:	cmp	r5, #0
    c514:	mov	r6, r0
    c518:	ldrbne	r0, [r5]
    c51c:	cmpne	r0, #0
    c520:	bne	c53c <sas7bdat_write_string+0x44>
    c524:	mov	r0, r4
    c528:	mov	r1, #0
    c52c:	mov	r2, r6
    c530:	mov	r7, #0
    c534:	bl	4c70 <memset@plt>
    c538:	b	c564 <sas7bdat_write_string+0x6c>
    c53c:	mov	r0, r5
    c540:	bl	4bd4 <strlen@plt>
    c544:	mov	r7, #22
    c548:	cmp	r0, r6
    c54c:	bhi	c564 <sas7bdat_write_string+0x6c>
    c550:	mov	r0, r4
    c554:	mov	r1, r5
    c558:	mov	r2, r6
    c55c:	bl	4c94 <strncpy@plt>
    c560:	mov	r7, #0
    c564:	mov	r0, r7
    c568:	pop	{r4, r5, r6, r7, fp, pc}

0000c56c <sas7bdat_write_missing_string>:
    c56c:	push	{r4, sl, fp, lr}
    c570:	add	fp, sp, #8
    c574:	mov	r4, r0
    c578:	mov	r0, r1
    c57c:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    c580:	mov	r2, r0
    c584:	mov	r0, r4
    c588:	mov	r1, #0
    c58c:	bl	4c70 <memset@plt>
    c590:	mov	r0, #0
    c594:	pop	{r4, sl, fp, pc}

0000c598 <sas7bdat_write_missing_numeric>:
    c598:	movw	r1, #53504	; 0xd100
    c59c:	movt	r1, #32760	; 0x7ff8
    c5a0:	str	r1, [r0, #4]
    c5a4:	mov	r1, #0
    c5a8:	str	r1, [r0]
    c5ac:	mov	r0, #0
    c5b0:	bx	lr

0000c5b4 <sas7bdat_write_missing_tagged>:
    c5b4:	push	{r4, r5, fp, lr}
    c5b8:	add	fp, sp, #8
    c5bc:	mov	r4, r0
    c5c0:	mov	r0, r2
    c5c4:	mov	r5, r2
    c5c8:	bl	4b2c <sas_validate_tag@plt>
    c5cc:	cmp	r0, #0
    c5d0:	popne	{r4, r5, fp, pc}
    c5d4:	movw	r2, #0
    c5d8:	mov	r1, #0
    c5dc:	str	r1, [r4]
    c5e0:	eor	r1, r5, #255	; 0xff
    c5e4:	movt	r2, #32760	; 0x7ff8
    c5e8:	orr	r1, r2, r1, lsl #8
    c5ec:	str	r1, [r4, #4]
    c5f0:	pop	{r4, r5, fp, pc}

0000c5f4 <sas7bdat_variable_width>:
    c5f4:	cmp	r0, #0
    c5f8:	movne	r1, #8
    c5fc:	mov	r0, r1
    c600:	bx	lr

0000c604 <sas7bdat_begin_data>:
    c604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c608:	add	fp, sp, #28
    c60c:	sub	sp, sp, #68	; 0x44
    c610:	mov	r4, r0
    c614:	mov	r0, #1
    c618:	mov	r1, #8
    c61c:	bl	4778 <calloc@plt>
    c620:	ldr	r1, [r4, #12]
    c624:	str	r0, [sp, #24]
    c628:	mov	r0, r4
    c62c:	bl	4d24 <sas_header_info_init@plt>
    c630:	mov	r6, r0
    c634:	mov	r0, r4
    c638:	bl	d4f8 <sas7bdat_row_length>
    c63c:	ldr	r3, [r4, #28]
    c640:	ldr	r1, [r4, #16]
    c644:	str	r4, [sp, #44]	; 0x2c
    c648:	ldr	r4, [r6, #4]
    c64c:	mov	r2, #28
    c650:	ldr	r5, [r6, #36]	; 0x24
    c654:	ldr	lr, [r6, #40]	; 0x28
    c658:	str	r6, [fp, #-44]	; 0xffffffd4
    c65c:	mov	ip, #20
    c660:	cmp	r4, #0
    c664:	add	r7, r2, r3, lsl #4
    c668:	add	r8, r3, r3, lsl #1
    c66c:	str	r3, [sp, #32]
    c670:	movweq	r2, #20
    c674:	addeq	r7, ip, r8, lsl #2
    c678:	add	r2, r2, r3, lsl #3
    c67c:	str	r7, [sp, #40]	; 0x28
    c680:	str	r2, [sp, #36]	; 0x24
    c684:	add	r2, r6, #48	; 0x30
    c688:	ldr	r4, [r6, #32]!
    c68c:	str	r2, [sp, #48]	; 0x30
    c690:	lsl	r2, r3, #3
    c694:	str	r2, [sp, #20]
    c698:	str	r6, [fp, #-40]	; 0xffffffd8
    c69c:	b	c6b4 <sas7bdat_begin_data+0xb0>
    c6a0:	lsl	r3, r5, #1
    c6a4:	lsl	r4, r2, #1
    c6a8:	orr	r5, r3, r2, lsr #31
    c6ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    c6b0:	strd	r4, [r2]
    c6b4:	subs	r6, r4, lr
    c6b8:	mov	r2, r4
    c6bc:	cmp	r1, #0
    c6c0:	bne	c6cc <sas7bdat_begin_data+0xc8>
    c6c4:	cmp	r0, r6
    c6c8:	bhi	c6a0 <sas7bdat_begin_data+0x9c>
    c6cc:	cmp	r1, #1
    c6d0:	bne	c6f4 <sas7bdat_begin_data+0xf0>
    c6d4:	ldr	r3, [sp, #48]	; 0x30
    c6d8:	ldm	r3, {r4, r9}
    c6dc:	adds	r7, r4, r0
    c6e0:	adc	r3, r9, #0
    c6e4:	subs	r7, r6, r7
    c6e8:	rscs	r3, r3, #0
    c6ec:	blt	c6a0 <sas7bdat_begin_data+0x9c>
    c6f0:	b	c6fc <sas7bdat_begin_data+0xf8>
    c6f4:	ldr	r3, [sp, #48]	; 0x30
    c6f8:	ldm	r3, {r4, r9}
    c6fc:	ldr	r3, [sp, #40]	; 0x28
    c700:	mov	sl, #0
    c704:	adds	r8, r4, r3
    c708:	ldr	r3, [sp, #36]	; 0x24
    c70c:	adc	ip, r9, #0
    c710:	adds	r3, r4, r3
    c714:	adc	r7, r9, #0
    c718:	subs	r3, r6, r3
    c71c:	sbcs	r3, sl, r7
    c720:	blt	c6a0 <sas7bdat_begin_data+0x9c>
    c724:	subs	r3, r6, r8
    c728:	sbcs	r3, sl, ip
    c72c:	blt	c6a0 <sas7bdat_begin_data+0x9c>
    c730:	ldr	r0, [sp, #24]
    c734:	ldr	r7, [fp, #-44]	; 0xffffffd4
    c738:	mov	r1, #16
    c73c:	mov	r8, #1
    c740:	str	r7, [r0]
    c744:	mov	r0, #1
    c748:	bl	4778 <calloc@plt>
    c74c:	mov	sl, r0
    c750:	mov	r0, #4
    c754:	mov	r5, #0
    c758:	str	r8, [sl]
    c75c:	str	r5, [sl, #4]
    c760:	bl	4af0 <malloc@plt>
    c764:	str	r0, [sl, #8]
    c768:	mov	r1, #36	; 0x24
    c76c:	str	r0, [sp, #48]	; 0x30
    c770:	sub	r0, r6, r4
    c774:	ldr	r7, [r7, #4]
    c778:	cmp	r7, #0
    c77c:	movweq	r1, #32
    c780:	sub	r9, r0, r1
    c784:	mov	r0, #1
    c788:	mov	r1, #24
    c78c:	bl	4778 <calloc@plt>
    c790:	mov	r6, r0
    c794:	mov	r0, r9
    c798:	bl	4af0 <malloc@plt>
    c79c:	mov	r8, r0
    c7a0:	ldr	r0, [sp, #48]	; 0x30
    c7a4:	mov	r1, #24
    c7a8:	mov	r4, sl
    c7ac:	strd	r8, [r6]
    c7b0:	str	r6, [r0]
    c7b4:	mov	r0, #1
    c7b8:	bl	4778 <calloc@plt>
    c7bc:	mov	r6, r0
    c7c0:	ldr	r0, [sp, #32]
    c7c4:	add	r0, r0, #4
    c7c8:	asr	r1, r0, #31
    c7cc:	strd	r0, [r6]
    c7d0:	mov	r1, #4
    c7d4:	bl	4778 <calloc@plt>
    c7d8:	ldr	r1, [sp, #20]
    c7dc:	cmp	r7, #0
    c7e0:	str	r0, [sp, #40]	; 0x28
    c7e4:	str	r0, [r6, #16]
    c7e8:	mov	r0, #28
    c7ec:	mov	r7, #8
    c7f0:	str	r6, [sp, #28]
    c7f4:	mov	r8, #8
    c7f8:	movweq	r0, #20
    c7fc:	movweq	r7, #4
    c800:	add	r6, r0, r1
    c804:	mov	r1, r7
    c808:	mov	r0, r6
    c80c:	bl	4d84 <sas_subheader_remainder@plt>
    c810:	mov	r9, r0
    c814:	mov	r0, #1
    c818:	mov	r1, #20
    c81c:	bl	4778 <calloc@plt>
    c820:	mov	sl, r0
    c824:	mvn	r0, #0
    c828:	mov	r1, r6
    c82c:	str	r0, [sl]
    c830:	mov	r0, #1
    c834:	str	r6, [sl, #8]
    c838:	bl	4778 <calloc@plt>
    c83c:	add	r1, r0, r7
    c840:	ldr	r7, [sp, #44]	; 0x2c
    c844:	str	r0, [sl, #4]
    c848:	str	sl, [sp, #12]
    c84c:	strh	r9, [r1]
    c850:	ldr	r0, [r7, #28]
    c854:	cmp	r0, #1
    c858:	blt	c8b0 <sas7bdat_begin_data+0x2ac>
    c85c:	add	r6, r1, #8
    c860:	sub	r9, fp, #36	; 0x24
    c864:	mov	r0, r7
    c868:	mov	r1, r5
    c86c:	bl	4d48 <readstat_get_variable@plt>
    c870:	bl	4d30 <readstat_variable_get_name@plt>
    c874:	mov	r2, r0
    c878:	mov	r0, r9
    c87c:	mov	r1, r4
    c880:	bl	d564 <sas7bdat_make_text_ref>
    c884:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    c888:	add	r5, r5, #1
    c88c:	strh	r0, [r6]
    c890:	ldrh	r0, [fp, #-34]	; 0xffffffde
    c894:	strh	r0, [r6, #2]
    c898:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    c89c:	strh	r0, [r6, #4]
    c8a0:	add	r6, r6, #8
    c8a4:	ldr	r0, [r7, #28]
    c8a8:	cmp	r5, r0
    c8ac:	blt	c864 <sas7bdat_begin_data+0x260>
    c8b0:	mov	r1, #28
    c8b4:	str	r4, [sp, #48]	; 0x30
    c8b8:	add	r5, r1, r0, lsl #4
    c8bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    c8c0:	add	r0, r0, r0, lsl #1
    c8c4:	ldr	r1, [r1, #4]
    c8c8:	cmp	r1, #0
    c8cc:	mov	r1, #20
    c8d0:	addeq	r5, r1, r0, lsl #2
    c8d4:	movweq	r8, #4
    c8d8:	mov	r0, r5
    c8dc:	mov	r1, r8
    c8e0:	bl	4d84 <sas_subheader_remainder@plt>
    c8e4:	mov	r6, r0
    c8e8:	mov	r0, #1
    c8ec:	mov	r1, #20
    c8f0:	bl	4778 <calloc@plt>
    c8f4:	mov	r4, r0
    c8f8:	mvn	r0, #3
    c8fc:	mov	r1, r5
    c900:	str	r0, [r4]
    c904:	mov	r0, #1
    c908:	str	r5, [r4, #8]
    c90c:	bl	4778 <calloc@plt>
    c910:	str	r0, [r4, #4]
    c914:	add	r0, r0, r8
    c918:	mov	r8, r7
    c91c:	str	r4, [sp, #8]
    c920:	strh	r6, [r0]
    c924:	ldr	r1, [r7, #28]
    c928:	cmp	r1, #1
    c92c:	blt	c9ec <sas7bdat_begin_data+0x3e8>
    c930:	add	r9, r0, #8
    c934:	mov	r6, #0
    c938:	mov	sl, #0
    c93c:	mov	r7, #0
    c940:	mov	r0, r8
    c944:	mov	r1, r7
    c948:	bl	4d48 <readstat_get_variable@plt>
    c94c:	mov	r8, r0
    c950:	bl	4d30 <readstat_variable_get_name@plt>
    c954:	mov	r4, r0
    c958:	mov	r0, r8
    c95c:	bl	4bb0 <readstat_variable_get_type@plt>
    c960:	mov	r5, r0
    c964:	mov	r0, r4
    c968:	bl	4bd4 <strlen@plt>
    c96c:	cmp	r0, #9
    c970:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c974:	mov	r4, #2048	; 0x800
    c978:	mov	r1, r5
    c97c:	movwcc	r4, #4
    c980:	ldr	r0, [r0, #4]
    c984:	str	r6, [r9]
    c988:	cmp	r0, #0
    c98c:	moveq	r0, #4
    c990:	strne	sl, [r9, #4]
    c994:	movne	r0, #8
    c998:	cmp	r1, #0
    c99c:	add	r5, r9, r0
    c9a0:	beq	c9b4 <sas7bdat_begin_data+0x3b0>
    c9a4:	mov	r0, #1
    c9a8:	strb	r0, [r5, #6]
    c9ac:	mov	r0, #8
    c9b0:	b	c9c4 <sas7bdat_begin_data+0x3c0>
    c9b4:	mov	r0, #2
    c9b8:	strb	r0, [r5, #6]
    c9bc:	mov	r0, r8
    c9c0:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    c9c4:	ldr	r8, [sp, #44]	; 0x2c
    c9c8:	strh	r4, [r5, #4]
    c9cc:	str	r0, [r5]
    c9d0:	adds	r6, r6, r0
    c9d4:	add	r7, r7, #1
    c9d8:	add	r9, r5, #8
    c9dc:	adc	sl, sl, #0
    c9e0:	ldr	r0, [r8, #28]
    c9e4:	cmp	r7, r0
    c9e8:	blt	c940 <sas7bdat_begin_data+0x33c>
    c9ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
    c9f0:	mov	r1, #20
    c9f4:	ldr	r4, [r0, #4]
    c9f8:	mov	r0, #1
    c9fc:	bl	4778 <calloc@plt>
    ca00:	mov	sl, r0
    ca04:	movw	r0, #63479	; 0xf7f7
    ca08:	mov	r1, #808	; 0x328
    ca0c:	cmp	r4, #0
    ca10:	movt	r0, #63479	; 0xf7f7
    ca14:	movweq	r1, #480	; 0x1e0
    ca18:	str	r0, [sl]
    ca1c:	mov	r0, #1
    ca20:	str	r1, [sl, #8]
    ca24:	bl	4778 <calloc@plt>
    ca28:	mov	r5, r0
    ca2c:	str	r0, [sl, #4]
    ca30:	mov	r0, r8
    ca34:	bl	d4f8 <sas7bdat_row_length>
    ca38:	cmp	r4, #0
    ca3c:	beq	ca94 <sas7bdat_begin_data+0x490>
    ca40:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ca44:	ldr	r7, [r8, #28]
    ca48:	mov	r6, #0
    ca4c:	ldrd	r2, [r1]
    ca50:	ldr	r1, [r8, #80]	; 0x50
    ca54:	str	r0, [r5, #40]	; 0x28
    ca58:	mvn	r0, #0
    ca5c:	str	r6, [r5, #44]	; 0x2c
    ca60:	str	r0, [r5, #140]	; 0x8c
    ca64:	str	r0, [r5, #136]	; 0x88
    ca68:	str	r0, [r5, #132]	; 0x84
    ca6c:	str	r0, [r5, #128]	; 0x80
    ca70:	asr	r0, r1, #31
    ca74:	str	r1, [r5, #48]	; 0x30
    ca78:	str	r7, [r5, #72]	; 0x48
    ca7c:	str	r3, [r5, #108]	; 0x6c
    ca80:	str	r2, [r5, #104]	; 0x68
    ca84:	str	r0, [r5, #52]	; 0x34
    ca88:	asr	r0, r7, #31
    ca8c:	str	r0, [r5, #76]	; 0x4c
    ca90:	b	cac0 <sas7bdat_begin_data+0x4bc>
    ca94:	ldr	r1, [fp, #-40]	; 0xffffffd8
    ca98:	ldr	r7, [r8, #28]
    ca9c:	ldr	r2, [r8, #80]	; 0x50
    caa0:	mvn	r3, #0
    caa4:	ldr	r1, [r1]
    caa8:	str	r3, [r5, #68]	; 0x44
    caac:	str	r3, [r5, #64]	; 0x40
    cab0:	str	r0, [r5, #20]
    cab4:	str	r2, [r5, #24]
    cab8:	str	r7, [r5, #36]	; 0x24
    cabc:	str	r1, [r5, #52]	; 0x34
    cac0:	ldr	r0, [sp, #40]	; 0x28
    cac4:	ldr	r6, [sp, #28]
    cac8:	mov	r1, #20
    cacc:	str	sl, [r0]
    cad0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    cad4:	ldr	r4, [r0, #4]
    cad8:	mov	r0, #1
    cadc:	bl	4778 <calloc@plt>
    cae0:	mov	r5, r0
    cae4:	movw	r0, #63222	; 0xf6f6
    cae8:	mov	r1, #24
    caec:	cmp	r4, #0
    caf0:	movt	r0, #63222	; 0xf6f6
    caf4:	movweq	r1, #12
    caf8:	str	r0, [r5]
    cafc:	mov	r0, #1
    cb00:	str	r1, [r5, #8]
    cb04:	bl	4778 <calloc@plt>
    cb08:	cmp	r4, #0
    cb0c:	str	r0, [r5, #4]
    cb10:	beq	cb24 <sas7bdat_begin_data+0x520>
    cb14:	asr	r1, r7, #31
    cb18:	str	r7, [r0, #8]
    cb1c:	str	r1, [r0, #12]
    cb20:	b	cb28 <sas7bdat_begin_data+0x524>
    cb24:	str	r7, [r0, #4]
    cb28:	ldr	r0, [r6, #16]
    cb2c:	mov	r1, #4
    cb30:	str	r0, [sp, #40]	; 0x28
    cb34:	str	r5, [r0, #4]
    cb38:	mov	r0, r7
    cb3c:	bl	4778 <calloc@plt>
    cb40:	cmp	r7, #1
    cb44:	mov	r4, r0
    cb48:	str	r0, [fp, #-40]	; 0xffffffd8
    cb4c:	blt	cc68 <sas7bdat_begin_data+0x664>
    cb50:	mov	r7, #0
    cb54:	mov	r0, r8
    cb58:	mov	r1, r7
    cb5c:	bl	4d48 <readstat_get_variable@plt>
    cb60:	ldr	r8, [fp, #-44]	; 0xffffffd4
    cb64:	mov	r4, r0
    cb68:	mov	r0, #1
    cb6c:	mov	r1, #20
    cb70:	ldr	r5, [r8, #4]
    cb74:	bl	4778 <calloc@plt>
    cb78:	mov	sl, r0
    cb7c:	movw	r0, #64510	; 0xfbfe
    cb80:	cmp	r5, #0
    cb84:	mov	r1, #64	; 0x40
    cb88:	movt	r0, #65535	; 0xffff
    cb8c:	movweq	r1, #52	; 0x34
    cb90:	str	r0, [sl]
    cb94:	mov	r0, #1
    cb98:	str	r1, [sl, #8]
    cb9c:	bl	4778 <calloc@plt>
    cba0:	mov	r9, r0
    cba4:	str	r0, [sl, #4]
    cba8:	mov	r0, r4
    cbac:	bl	48e0 <readstat_variable_get_format@plt>
    cbb0:	mov	r6, r0
    cbb4:	mov	r0, r4
    cbb8:	bl	4dcc <readstat_variable_get_label@plt>
    cbbc:	mov	r2, r0
    cbc0:	ldr	r0, [r8, #4]
    cbc4:	mov	r4, #40	; 0x28
    cbc8:	mov	r5, #34	; 0x22
    cbcc:	cmp	r0, #0
    cbd0:	movwne	r4, #52	; 0x34
    cbd4:	movwne	r5, #46	; 0x2e
    cbd8:	cmp	r6, #0
    cbdc:	beq	cc14 <sas7bdat_begin_data+0x610>
    cbe0:	ldr	r1, [sp, #48]	; 0x30
    cbe4:	mov	r8, r2
    cbe8:	sub	r0, fp, #36	; 0x24
    cbec:	mov	r2, r6
    cbf0:	bl	d564 <sas7bdat_make_text_ref>
    cbf4:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    cbf8:	mov	r1, r9
    cbfc:	mov	r2, r8
    cc00:	strh	r0, [r1, r5]!
    cc04:	ldrh	r0, [fp, #-34]	; 0xffffffde
    cc08:	strh	r0, [r1, #2]
    cc0c:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    cc10:	strh	r0, [r1, #4]
    cc14:	cmp	r2, #0
    cc18:	beq	cc4c <sas7bdat_begin_data+0x648>
    cc1c:	ldr	r1, [sp, #48]	; 0x30
    cc20:	sub	r0, fp, #36	; 0x24
    cc24:	bl	d564 <sas7bdat_make_text_ref>
    cc28:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    cc2c:	mov	r1, r9
    cc30:	strh	r0, [r1, r4]!
    cc34:	ldrh	r2, [fp, #-34]	; 0xffffffde
    cc38:	orr	r0, r4, #2
    cc3c:	add	r0, r9, r0
    cc40:	strh	r2, [r0]
    cc44:	ldrh	r0, [fp, #-32]	; 0xffffffe0
    cc48:	strh	r0, [r1, #4]
    cc4c:	ldr	r4, [fp, #-40]	; 0xffffffd8
    cc50:	ldr	r8, [sp, #44]	; 0x2c
    cc54:	str	sl, [r4, r7, lsl #2]
    cc58:	add	r7, r7, #1
    cc5c:	ldr	r0, [r8, #28]
    cc60:	cmp	r7, r0
    cc64:	blt	cb54 <sas7bdat_begin_data+0x550>
    cc68:	ldr	sl, [sp, #48]	; 0x30
    cc6c:	ldr	r9, [sl]
    cc70:	ldr	r5, [sl, #4]
    cc74:	ldr	r6, [sp, #28]
    cc78:	ldrd	r0, [r6]
    cc7c:	adds	r7, r0, r9
    cc80:	adc	r0, r1, r5
    cc84:	lsl	r1, r7, #2
    cc88:	str	r0, [sp, #16]
    cc8c:	str	r7, [r6]
    cc90:	str	r0, [r6, #4]
    cc94:	ldr	r0, [sp, #40]	; 0x28
    cc98:	bl	49e8 <realloc@plt>
    cc9c:	mov	r2, sl
    cca0:	ldr	sl, [sl, #8]
    cca4:	subs	r1, r9, #1
    cca8:	str	r0, [r6, #16]
    ccac:	str	r9, [sp, #40]	; 0x28
    ccb0:	str	r5, [sp, #36]	; 0x24
    ccb4:	str	r7, [sp, #20]
    ccb8:	sbcs	r1, r5, #0
    ccbc:	blt	cdcc <sas7bdat_begin_data+0x7c8>
    ccc0:	str	r0, [sp, #4]
    ccc4:	add	r0, r0, #8
    ccc8:	mov	r9, #0
    cccc:	str	r0, [sp, #32]
    ccd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
    ccd4:	ldr	r8, [sl, r9, lsl #2]
    ccd8:	mov	r7, #8
    ccdc:	mov	r6, #0
    cce0:	mov	r1, #20
    cce4:	ldr	r4, [r0, #4]
    cce8:	mov	r0, #1
    ccec:	cmp	r4, #0
    ccf0:	movweq	r7, #4
    ccf4:	cmp	r8, #0
    ccf8:	ldrne	r6, [r8, #8]
    ccfc:	bl	4778 <calloc@plt>
    cd00:	mov	r5, r0
    cd04:	mvn	r0, #2
    cd08:	cmp	r4, #0
    cd0c:	str	r0, [r5]
    cd10:	mov	r0, #36	; 0x24
    cd14:	movweq	r0, #32
    cd18:	add	r4, r6, r0
    cd1c:	mov	r0, #1
    cd20:	mov	r1, r4
    cd24:	str	r4, [r5, #8]
    cd28:	bl	4778 <calloc@plt>
    cd2c:	mov	r6, r0
    cd30:	str	r0, [r5, #4]
    cd34:	mov	r0, r4
    cd38:	mov	r1, r7
    cd3c:	bl	4d84 <sas_subheader_remainder@plt>
    cd40:	add	r1, r6, r7
    cd44:	strh	r0, [r1]
    cd48:	movw	r0, #8224	; 0x2020
    cd4c:	movt	r0, #8224	; 0x2020
    cd50:	str	r0, [r1, #16]
    cd54:	str	r0, [r1, #12]
    cd58:	add	r0, r1, #28
    cd5c:	ldr	r2, [r8, #8]
    cd60:	ldr	r1, [r8]
    cd64:	bl	4910 <memcpy@plt>
    cd68:	ldr	r0, [sp, #32]
    cd6c:	str	r5, [r0, r9, lsl #2]
    cd70:	ldr	r0, [sp, #40]	; 0x28
    cd74:	add	r9, r9, #1
    cd78:	subs	r0, r9, r0
    cd7c:	ldr	r0, [sp, #36]	; 0x24
    cd80:	rscs	r0, r0, #0
    cd84:	blt	ccd0 <sas7bdat_begin_data+0x6cc>
    cd88:	ldr	r6, [sp, #40]	; 0x28
    cd8c:	ldr	r7, [sp, #36]	; 0x24
    cd90:	mov	r5, #0
    cd94:	ldr	r4, [sl, r5, lsl #2]
    cd98:	ldr	r0, [r4]
    cd9c:	bl	48bc <free@plt>
    cda0:	mov	r0, r4
    cda4:	bl	48bc <free@plt>
    cda8:	add	r5, r5, #1
    cdac:	subs	r0, r5, r6
    cdb0:	rscs	r0, r7, #0
    cdb4:	blt	cd94 <sas7bdat_begin_data+0x790>
    cdb8:	add	r4, r6, #2
    cdbc:	ldr	r8, [sp, #44]	; 0x2c
    cdc0:	ldr	r9, [sp, #48]	; 0x30
    cdc4:	ldmib	sp, {r5, r6, r7}
    cdc8:	b	cde4 <sas7bdat_begin_data+0x7e0>
    cdcc:	ldr	r1, [sp, #8]
    cdd0:	ldr	r7, [sp, #12]
    cdd4:	mov	r4, #2
    cdd8:	mov	r5, r0
    cddc:	mov	r9, r2
    cde0:	mov	r6, r1
    cde4:	mov	r0, sl
    cde8:	bl	48bc <free@plt>
    cdec:	mov	r0, r9
    cdf0:	bl	48bc <free@plt>
    cdf4:	mov	r0, r5
    cdf8:	str	r7, [r0, r4, lsl #2]!
    cdfc:	str	r6, [r0, #4]
    ce00:	ldr	r6, [fp, #-40]	; 0xffffffd8
    ce04:	ldr	r1, [r8, #28]
    ce08:	cmp	r1, #1
    ce0c:	blt	ce24 <sas7bdat_begin_data+0x820>
    ce10:	add	r0, r5, r4, lsl #2
    ce14:	lsl	r2, r1, #2
    ce18:	mov	r1, r6
    ce1c:	add	r0, r0, #8
    ce20:	bl	4910 <memcpy@plt>
    ce24:	mov	r0, r6
    ce28:	bl	48bc <free@plt>
    ce2c:	ldr	r4, [sp, #28]
    ce30:	ldr	r2, [sp, #20]
    ce34:	ldr	r3, [sp, #16]
    ce38:	mov	r0, r4
    ce3c:	str	r2, [r0, #8]!
    ce40:	str	r3, [r0, #4]
    ce44:	ldr	r1, [r8, #16]
    ce48:	cmp	r1, #1
    ce4c:	bne	ce74 <sas7bdat_begin_data+0x870>
    ce50:	ldr	r1, [r8, #80]	; 0x50
    ce54:	adds	r2, r2, r1
    ce58:	adc	r3, r3, r1, asr #31
    ce5c:	lsl	r1, r2, #2
    ce60:	strd	r2, [r0]
    ce64:	mov	r0, r5
    ce68:	bl	49e8 <realloc@plt>
    ce6c:	str	r0, [r4, #16]
    ce70:	ldr	r1, [r8, #16]
    ce74:	ldr	r0, [sp, #24]
    ce78:	mov	r5, #0
    ce7c:	cmp	r1, #0
    ce80:	str	r4, [r0, #4]
    ce84:	str	r0, [r8, #300]	; 0x12c
    ce88:	bne	cebc <sas7bdat_begin_data+0x8b8>
    ce8c:	mov	r0, r8
    ce90:	bl	cff0 <sas7bdat_emit_header_and_meta_pages>
    ce94:	cmp	r0, #0
    ce98:	beq	cebc <sas7bdat_begin_data+0x8b8>
    ce9c:	mov	r6, r0
    cea0:	ldr	r0, [r8, #300]	; 0x12c
    cea4:	cmp	r0, #0
    cea8:	beq	ceb8 <sas7bdat_begin_data+0x8b4>
    ceac:	bl	d490 <sas7bdat_write_ctx_free>
    ceb0:	mov	r0, #0
    ceb4:	str	r0, [r8, #300]	; 0x12c
    ceb8:	mov	r5, r6
    cebc:	mov	r0, r5
    cec0:	sub	sp, fp, #28
    cec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000cec8 <sas7bdat_end_data>:
    cec8:	ldr	r1, [r0, #16]
    cecc:	cmp	r1, #1
    ced0:	bne	ced8 <sas7bdat_end_data+0x10>
    ced4:	b	cff0 <sas7bdat_emit_header_and_meta_pages>
    ced8:	ldr	r1, [r0, #300]	; 0x12c
    cedc:	ldr	r1, [r1]
    cee0:	b	4e44 <sas_fill_page@plt>

0000cee4 <sas7bdat_module_ctx_free>:
    cee4:	b	d490 <sas7bdat_write_ctx_free>

0000cee8 <sas7bdat_write_row>:
    cee8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ceec:	add	fp, sp, #28
    cef0:	sub	sp, sp, #4
    cef4:	mov	r7, r1
    cef8:	ldr	r1, [r0, #16]
    cefc:	ldr	r8, [r0, #300]	; 0x12c
    cf00:	mov	r6, r2
    cf04:	mov	r9, #0
    cf08:	cmp	r1, #1
    cf0c:	beq	cf30 <sas7bdat_write_row+0x48>
    cf10:	cmp	r1, #0
    cf14:	bne	cfe4 <sas7bdat_write_row+0xfc>
    cf18:	mov	r1, r8
    cf1c:	mov	r2, r7
    cf20:	mov	r3, r6
    cf24:	sub	sp, fp, #28
    cf28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cf2c:	b	d694 <sas7bdat_write_row_uncompressed>
    cf30:	mov	r0, r7
    cf34:	mov	r1, r6
    cf38:	bl	4e50 <sas_rle_compressed_len@plt>
    cf3c:	mov	r4, r0
    cf40:	mov	r0, #1
    cf44:	mov	r1, #20
    cf48:	mov	sl, #1
    cf4c:	bl	4778 <calloc@plt>
    cf50:	mov	r5, r0
    cf54:	cmp	r4, r6
    cf58:	bcs	cfa0 <sas7bdat_write_row+0xb8>
    cf5c:	mov	r0, #1
    cf60:	mov	r1, r4
    cf64:	str	r4, [r5, #8]
    cf68:	bl	4778 <calloc@plt>
    cf6c:	mov	r1, r4
    cf70:	mov	r2, r7
    cf74:	mov	r3, r6
    cf78:	str	r0, [r5, #4]
    cf7c:	str	sl, [r5, #12]
    cf80:	str	sl, [r5, #16]
    cf84:	bl	4e98 <sas_rle_compress@plt>
    cf88:	cmp	r0, r4
    cf8c:	beq	cfc4 <sas7bdat_write_row+0xdc>
    cf90:	mov	r0, r5
    cf94:	bl	d664 <sas7bdat_subheader_free>
    cf98:	mov	r9, #10
    cf9c:	b	cfe4 <sas7bdat_write_row+0xfc>
    cfa0:	mov	r0, #1
    cfa4:	mov	r1, r6
    cfa8:	str	r6, [r5, #8]
    cfac:	bl	4778 <calloc@plt>
    cfb0:	mov	r1, r7
    cfb4:	mov	r2, r6
    cfb8:	str	r0, [r5, #4]
    cfbc:	str	sl, [r5, #12]
    cfc0:	bl	4910 <memcpy@plt>
    cfc4:	ldr	r0, [r8, #4]
    cfc8:	ldrd	r2, [r0]
    cfcc:	ldr	r1, [r0, #16]
    cfd0:	adds	r4, r2, #1
    cfd4:	adc	r3, r3, #0
    cfd8:	str	r4, [r0]
    cfdc:	str	r3, [r0, #4]
    cfe0:	str	r5, [r1, r2, lsl #2]
    cfe4:	mov	r0, r9
    cfe8:	sub	sp, fp, #28
    cfec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000cff0 <sas7bdat_emit_header_and_meta_pages>:
    cff0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cff4:	add	fp, sp, #28
    cff8:	sub	sp, sp, #356	; 0x164
    cffc:	ldr	r8, [r0, #300]	; 0x12c
    d000:	mov	r4, r0
    d004:	bl	d4f8 <sas7bdat_row_length>
    d008:	cmp	r0, #0
    d00c:	beq	d0b0 <sas7bdat_emit_header_and_meta_pages+0xc0>
    d010:	ldr	r0, [r4, #16]
    d014:	cmp	r0, #0
    d018:	bne	d04c <sas7bdat_emit_header_and_meta_pages+0x5c>
    d01c:	ldr	r5, [r8]
    d020:	mov	r0, r4
    d024:	bl	d4f8 <sas7bdat_row_length>
    d028:	add	r7, r5, #32
    d02c:	mov	r2, r0
    d030:	ldm	r7, {r0, r1, r3, r7}
    d034:	subs	r0, r0, r3
    d038:	mov	r3, #0
    d03c:	sbc	r1, r1, r7
    d040:	bl	236c8 <__aeabi_ldivmod>
    d044:	cmp	r0, #0
    d048:	beq	d464 <sas7bdat_emit_header_and_meta_pages+0x474>
    d04c:	ldr	r1, [r4, #300]	; 0x12c
    d050:	ldr	r2, [r1, #4]
    d054:	ldr	r0, [r2]
    d058:	sub	r0, r0, #1
    d05c:	cmp	r0, #0
    d060:	blt	d0b8 <sas7bdat_emit_header_and_meta_pages+0xc8>
    d064:	ldr	r1, [r1]
    d068:	mov	r6, #1
    d06c:	ldr	r3, [r1, #32]
    d070:	ldr	r7, [r1, #40]	; 0x28
    d074:	ldr	r1, [r1, #48]	; 0x30
    d078:	sub	r7, r3, r7
    d07c:	ldr	r3, [r2, #16]
    d080:	mov	r2, r7
    d084:	ldr	r5, [r3, r0, lsl #2]
    d088:	sub	r0, r0, #1
    d08c:	ldr	r5, [r5, #8]
    d090:	add	r5, r5, r1
    d094:	cmp	r5, r2
    d098:	movhi	r2, r7
    d09c:	addhi	r6, r6, #1
    d0a0:	cmn	r0, #1
    d0a4:	sub	r2, r2, r5
    d0a8:	bgt	d084 <sas7bdat_emit_header_and_meta_pages+0x94>
    d0ac:	b	d0bc <sas7bdat_emit_header_and_meta_pages+0xcc>
    d0b0:	mov	r6, #36	; 0x24
    d0b4:	b	d480 <sas7bdat_emit_header_and_meta_pages+0x490>
    d0b8:	mov	r6, #1
    d0bc:	ldr	r1, [r4, #16]
    d0c0:	ldr	r5, [r8]
    d0c4:	mov	r0, #0
    d0c8:	cmp	r1, #1
    d0cc:	beq	d108 <sas7bdat_emit_header_and_meta_pages+0x118>
    d0d0:	mov	r0, r4
    d0d4:	bl	d4f8 <sas7bdat_row_length>
    d0d8:	add	r7, r5, #32
    d0dc:	mov	r2, r0
    d0e0:	ldm	r7, {r0, r1, r3, r7}
    d0e4:	subs	r0, r0, r3
    d0e8:	mov	r3, #0
    d0ec:	sbc	r1, r1, r7
    d0f0:	bl	236c8 <__aeabi_ldivmod>
    d0f4:	ldr	r1, [r4, #80]	; 0x50
    d0f8:	ldr	r5, [r8]
    d0fc:	add	r1, r0, r1
    d100:	sub	r1, r1, #1
    d104:	sdiv	r0, r1, r0
    d108:	add	r0, r0, r6
    d10c:	add	r6, sp, #184	; 0xb8
    d110:	mov	r2, #156	; 0x9c
    d114:	asr	r1, r0, #31
    d118:	strd	r0, [r5, #56]	; 0x38
    d11c:	mov	r0, r6
    d120:	mov	r1, #0
    d124:	bl	4c70 <memset@plt>
    d128:	ldr	r0, [r5, #4]
    d12c:	mov	r1, #34	; 0x22
    d130:	strb	r1, [sp, #219]	; 0xdb
    d134:	mov	r1, #51	; 0x33
    d138:	cmp	r0, #0
    d13c:	movweq	r1, #34	; 0x22
    d140:	strb	r1, [sp, #216]	; 0xd8
    d144:	bl	48b0 <machine_is_little_endian@plt>
    d148:	ldr	r1, [pc, #828]	; d48c <sas7bdat_emit_header_and_meta_pages+0x49c>
    d14c:	cmp	r0, #0
    d150:	movwne	r0, #1
    d154:	ldr	r1, [pc, r1]
    d158:	vld1.8	{d16-d17}, [r1]!
    d15c:	vld1.8	{d18-d19}, [r1]
    d160:	add	r1, r6, #16
    d164:	vst1.64	{d18-d19}, [r1]
    d168:	movw	r1, #18758	; 0x4946
    d16c:	movt	r1, #17740	; 0x454c
    d170:	str	r1, [sp, #272]	; 0x110
    d174:	movw	r1, #16723	; 0x4153
    d178:	movt	r1, #8275	; 0x2053
    d17c:	str	r1, [sp, #268]	; 0x10c
    d180:	movw	r1, #32288	; 0x7e20
    d184:	movt	r1, #32288	; 0x7e20
    d188:	str	r1, [sp, #344]	; 0x158
    d18c:	movw	r1, #16708	; 0x4144
    d190:	movt	r1, #16724	; 0x4154
    d194:	str	r1, [sp, #340]	; 0x154
    d198:	mov	r1, #49	; 0x31
    d19c:	strb	r1, [sp, #223]	; 0xdf
    d1a0:	mov	r1, #20
    d1a4:	strb	r1, [sp, #254]	; 0xfe
    d1a8:	strb	r0, [sp, #221]	; 0xdd
    d1ac:	mov	r0, #8
    d1b0:	mov	r1, sp
    d1b4:	vst1.64	{d16-d17}, [r6], r0
    d1b8:	movw	r0, #156	; 0x9c
    d1bc:	ldr	r2, [r6], #4
    d1c0:	subs	r0, r0, #4
    d1c4:	str	r2, [r1], #4
    d1c8:	bne	d1bc <sas7bdat_emit_header_and_meta_pages+0x1cc>
    d1cc:	ldr	r2, [sp, #184]	; 0xb8
    d1d0:	ldr	r3, [sp, #188]	; 0xbc
    d1d4:	mov	r0, r4
    d1d8:	mov	r1, r5
    d1dc:	bl	4aa8 <sas_write_header@plt>
    d1e0:	mov	r6, r0
    d1e4:	cmp	r0, #0
    d1e8:	bne	d480 <sas7bdat_emit_header_and_meta_pages+0x490>
    d1ec:	ldr	r0, [r4, #300]	; 0x12c
    d1f0:	ldm	r0, {r5, r7}
    d1f4:	mov	r1, r5
    d1f8:	ldr	r0, [r1, #32]!
    d1fc:	str	r1, [sp, #168]	; 0xa8
    d200:	bl	4af0 <malloc@plt>
    d204:	str	r0, [sp, #180]	; 0xb4
    d208:	add	r0, r5, #48	; 0x30
    d20c:	mov	r8, #0
    d210:	mov	r9, #0
    d214:	str	r5, [sp, #176]	; 0xb0
    d218:	str	r4, [sp, #156]	; 0x9c
    d21c:	str	r0, [sp, #164]	; 0xa4
    d220:	add	r0, r5, #40	; 0x28
    d224:	str	r0, [sp, #160]	; 0xa0
    d228:	ldrd	r0, [r7]
    d22c:	subs	r0, r8, r0
    d230:	sbcs	r0, r9, r1
    d234:	bge	d46c <sas7bdat_emit_header_and_meta_pages+0x47c>
    d238:	ldr	r5, [sp, #168]	; 0xa8
    d23c:	ldr	r4, [sp, #180]	; 0xb4
    d240:	mov	r1, #0
    d244:	ldr	r2, [r5]
    d248:	mov	r0, r4
    d24c:	bl	4c70 <memset@plt>
    d250:	ldr	r0, [sp, #160]	; 0xa0
    d254:	ldr	r5, [r5]
    d258:	ldr	r1, [r0]
    d25c:	ldr	r0, [sp, #164]	; 0xa4
    d260:	ldr	r6, [r0]
    d264:	add	sl, r4, r1
    d268:	mov	r0, #0
    d26c:	sub	r3, r5, r1
    d270:	strh	r0, [sl, #-8]
    d274:	ldr	r0, [r7, #16]
    d278:	str	r6, [sp, #172]	; 0xac
    d27c:	ldr	r0, [r0, r8, lsl #2]
    d280:	ldr	r2, [r0, #8]
    d284:	add	r6, r2, r6
    d288:	cmp	r6, r3
    d28c:	bhi	d474 <sas7bdat_emit_header_and_meta_pages+0x484>
    d290:	ldr	r4, [r7]
    d294:	ldr	r3, [r7, #4]
    d298:	mov	r6, #0
    d29c:	subs	r4, r8, r4
    d2a0:	sbcs	r3, r9, r3
    d2a4:	bge	d410 <sas7bdat_emit_header_and_meta_pages+0x420>
    d2a8:	rsb	r4, r1, #0
    d2ac:	mov	r6, #0
    d2b0:	mov	lr, r7
    d2b4:	ldr	r7, [sp, #176]	; 0xb0
    d2b8:	ldr	r1, [r0]
    d2bc:	sub	r3, r5, r2
    d2c0:	ldr	r7, [r7, #4]
    d2c4:	cmp	r7, #0
    d2c8:	beq	d308 <sas7bdat_emit_header_and_meta_pages+0x318>
    d2cc:	mov	r7, #0
    d2d0:	str	r2, [sl, #8]
    d2d4:	str	r7, [sl, #12]
    d2d8:	str	r7, [sl, #4]
    d2dc:	str	r3, [sl]
    d2e0:	ldr	r2, [r0, #12]
    d2e4:	cmp	r2, #0
    d2e8:	beq	d338 <sas7bdat_emit_header_and_meta_pages+0x348>
    d2ec:	ldr	r1, [r0, #16]
    d2f0:	mov	r2, #1
    d2f4:	strb	r2, [sl, #17]
    d2f8:	cmp	r1, #0
    d2fc:	movwne	r1, #4
    d300:	strb	r1, [sl, #16]
    d304:	b	d3b4 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    d308:	str	r2, [sl, #4]
    d30c:	str	r3, [sl]
    d310:	ldr	r2, [r0, #12]
    d314:	cmp	r2, #0
    d318:	beq	d380 <sas7bdat_emit_header_and_meta_pages+0x390>
    d31c:	ldr	r1, [r0, #16]
    d320:	mov	r2, #1
    d324:	strb	r2, [sl, #9]
    d328:	cmp	r1, #0
    d32c:	movwne	r1, #4
    d330:	strb	r1, [sl, #8]
    d334:	b	d3b4 <sas7bdat_emit_header_and_meta_pages+0x3c4>
    d338:	ldr	ip, [r0]
    d33c:	add	r2, ip, #4
    d340:	cmp	r2, #3
    d344:	bhi	d354 <sas7bdat_emit_header_and_meta_pages+0x364>
    d348:	mov	r3, #1
    d34c:	cmp	r2, #2
    d350:	bne	d360 <sas7bdat_emit_header_and_meta_pages+0x370>
    d354:	add	r2, ip, #2
    d358:	clz	r2, r2
    d35c:	lsr	r3, r2, #5
    d360:	strb	r3, [sl, #17]
    d364:	cmp	r1, #-16777216	; 0xff000000
    d368:	mov	r7, lr
    d36c:	ldr	r2, [r0, #4]
    d370:	asrcs	r3, r1, #31
    d374:	strcs	r3, [r2, #4]
    d378:	str	r1, [r2]
    d37c:	b	d3b8 <sas7bdat_emit_header_and_meta_pages+0x3c8>
    d380:	ldr	ip, [r0]
    d384:	add	r2, ip, #4
    d388:	cmp	r2, #3
    d38c:	bhi	d39c <sas7bdat_emit_header_and_meta_pages+0x3ac>
    d390:	mov	r3, #1
    d394:	cmp	r2, #2
    d398:	bne	d3a8 <sas7bdat_emit_header_and_meta_pages+0x3b8>
    d39c:	add	r2, ip, #2
    d3a0:	clz	r2, r2
    d3a4:	lsr	r3, r2, #5
    d3a8:	strb	r3, [sl, #9]
    d3ac:	ldr	r2, [r0, #4]
    d3b0:	str	r1, [r2]
    d3b4:	mov	r7, lr
    d3b8:	ldmib	r0, {r1, r2}
    d3bc:	ldr	r0, [sp, #180]	; 0xb4
    d3c0:	sub	r5, r5, r2
    d3c4:	add	r0, r0, r5
    d3c8:	bl	4910 <memcpy@plt>
    d3cc:	ldrd	r0, [r7]
    d3d0:	adds	r8, r8, #1
    d3d4:	add	r6, r6, #1
    d3d8:	adc	r9, r9, #0
    d3dc:	subs	r0, r8, r0
    d3e0:	sbcs	r0, r9, r1
    d3e4:	bge	d410 <sas7bdat_emit_header_and_meta_pages+0x420>
    d3e8:	ldr	r0, [r7, #16]
    d3ec:	ldr	r3, [sp, #172]	; 0xac
    d3f0:	ldr	r0, [r0, r8, lsl #2]
    d3f4:	sub	r4, r4, r3
    d3f8:	add	sl, sl, r3
    d3fc:	add	r1, r4, r5
    d400:	ldr	r2, [r0, #8]
    d404:	add	r3, r2, r3
    d408:	cmp	r3, r1
    d40c:	bls	d2b0 <sas7bdat_emit_header_and_meta_pages+0x2c0>
    d410:	ldr	r0, [sp, #176]	; 0xb0
    d414:	ldr	r1, [sp, #180]	; 0xb4
    d418:	ldr	r4, [sp, #156]	; 0x9c
    d41c:	ldr	r0, [r0, #4]
    d420:	cmp	r0, #0
    d424:	mov	r0, #34	; 0x22
    d428:	movweq	r0, #18
    d42c:	add	r0, r1, r0
    d430:	strh	r6, [r0]
    d434:	mov	r0, #36	; 0x24
    d438:	movweq	r0, #20
    d43c:	add	r0, r1, r0
    d440:	strh	r6, [r0]
    d444:	ldr	r0, [sp, #168]	; 0xa8
    d448:	ldr	r2, [r0]
    d44c:	mov	r0, r4
    d450:	bl	4e20 <readstat_write_bytes@plt>
    d454:	cmp	r0, #0
    d458:	beq	d228 <sas7bdat_emit_header_and_meta_pages+0x238>
    d45c:	mov	r6, r0
    d460:	b	d478 <sas7bdat_emit_header_and_meta_pages+0x488>
    d464:	mov	r6, #35	; 0x23
    d468:	b	d480 <sas7bdat_emit_header_and_meta_pages+0x490>
    d46c:	mov	r6, #0
    d470:	b	d478 <sas7bdat_emit_header_and_meta_pages+0x488>
    d474:	mov	r6, #35	; 0x23
    d478:	ldr	r0, [sp, #180]	; 0xb4
    d47c:	bl	48bc <free@plt>
    d480:	mov	r0, r6
    d484:	sub	sp, fp, #28
    d488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d48c:	.word	0x00037178

0000d490 <sas7bdat_write_ctx_free>:
    d490:	push	{r4, r5, r6, sl, fp, lr}
    d494:	add	fp, sp, #16
    d498:	mov	r4, r0
    d49c:	ldr	r0, [r0]
    d4a0:	bl	48bc <free@plt>
    d4a4:	ldr	r5, [r4, #4]
    d4a8:	ldrd	r2, [r5]
    d4ac:	ldr	r0, [r5, #16]
    d4b0:	subs	r1, r2, #1
    d4b4:	sbcs	r1, r3, #0
    d4b8:	blt	d4e0 <sas7bdat_write_ctx_free+0x50>
    d4bc:	mov	r6, #0
    d4c0:	ldr	r0, [r0, r6, lsl #2]
    d4c4:	bl	d664 <sas7bdat_subheader_free>
    d4c8:	ldrd	r2, [r5]
    d4cc:	ldr	r0, [r5, #16]
    d4d0:	add	r6, r6, #1
    d4d4:	subs	r1, r6, r2
    d4d8:	rscs	r1, r3, #0
    d4dc:	blt	d4c0 <sas7bdat_write_ctx_free+0x30>
    d4e0:	bl	48bc <free@plt>
    d4e4:	mov	r0, r5
    d4e8:	bl	48bc <free@plt>
    d4ec:	mov	r0, r4
    d4f0:	pop	{r4, r5, r6, sl, fp, lr}
    d4f4:	b	48bc <free@plt>

0000d4f8 <sas7bdat_row_length>:
    d4f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d4fc:	add	fp, sp, #24
    d500:	mov	r8, r0
    d504:	ldr	r0, [r0, #28]
    d508:	cmp	r0, #1
    d50c:	blt	d558 <sas7bdat_row_length+0x60>
    d510:	mov	r6, #0
    d514:	mov	r5, #0
    d518:	mov	r0, r8
    d51c:	mov	r1, r6
    d520:	bl	4d48 <readstat_get_variable@plt>
    d524:	mov	r7, r0
    d528:	bl	4bb0 <readstat_variable_get_type@plt>
    d52c:	mov	r4, r0
    d530:	mov	r0, r7
    d534:	bl	4ca0 <readstat_variable_get_storage_width@plt>
    d538:	cmp	r4, #0
    d53c:	add	r6, r6, #1
    d540:	movne	r0, #8
    d544:	add	r5, r0, r5
    d548:	ldr	r0, [r8, #28]
    d54c:	cmp	r6, r0
    d550:	blt	d518 <sas7bdat_row_length+0x20>
    d554:	b	d55c <sas7bdat_row_length+0x64>
    d558:	mov	r5, #0
    d55c:	mov	r0, r5
    d560:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000d564 <sas7bdat_make_text_ref>:
    d564:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d568:	add	fp, sp, #28
    d56c:	sub	sp, sp, #12
    d570:	mov	r8, r0
    d574:	mov	r0, r2
    d578:	mov	r7, r1
    d57c:	str	r2, [sp, #8]
    d580:	bl	4bd4 <strlen@plt>
    d584:	mov	r9, r0
    d588:	ldr	r2, [r7]
    d58c:	ldr	r0, [r7, #8]
    d590:	add	r3, r9, #3
    d594:	bic	sl, r3, #3
    d598:	add	r1, r0, r2, lsl #2
    d59c:	ldr	r4, [r1, #-4]
    d5a0:	mov	r5, r4
    d5a4:	ldr	r6, [r4, #4]
    d5a8:	ldr	r1, [r5, #8]!
    d5ac:	add	r3, r1, sl
    d5b0:	cmp	r3, r6
    d5b4:	bls	d628 <sas7bdat_make_text_ref+0xc4>
    d5b8:	ldr	r1, [r7, #4]
    d5bc:	adds	r2, r2, #1
    d5c0:	adc	r3, r1, #0
    d5c4:	lsl	r1, r2, #2
    d5c8:	strd	r2, [r7]
    d5cc:	bl	49e8 <realloc@plt>
    d5d0:	str	r0, [r7, #8]
    d5d4:	str	r0, [sp, #4]
    d5d8:	mov	r1, #24
    d5dc:	ldrd	r6, [r7]
    d5e0:	ldr	r5, [r4, #4]
    d5e4:	subs	r0, r6, #1
    d5e8:	str	r0, [sp]
    d5ec:	mov	r0, #1
    d5f0:	sbc	r7, r7, #0
    d5f4:	bl	4778 <calloc@plt>
    d5f8:	mov	r4, r0
    d5fc:	mov	r0, r5
    d600:	bl	4af0 <malloc@plt>
    d604:	ldr	r1, [sp]
    d608:	str	r1, [r4, #16]
    d60c:	str	r7, [r4, #20]
    d610:	stm	r4, {r0, r5}
    d614:	add	r5, r4, #8
    d618:	mov	r1, #0
    d61c:	ldr	r0, [sp, #4]
    d620:	add	r0, r0, r6, lsl #2
    d624:	str	r4, [r0, #-4]
    d628:	ldrh	r0, [r4, #16]
    d62c:	add	r2, r1, #28
    d630:	strh	r2, [r8, #2]
    d634:	strh	r9, [r8, #4]
    d638:	mov	r2, sl
    d63c:	strh	r0, [r8]
    d640:	ldr	r0, [r4]
    d644:	add	r0, r0, r1
    d648:	ldr	r1, [sp, #8]
    d64c:	bl	4c94 <strncpy@plt>
    d650:	ldr	r0, [r5]
    d654:	add	r0, r0, sl
    d658:	str	r0, [r5]
    d65c:	sub	sp, fp, #28
    d660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d664 <sas7bdat_subheader_free>:
    d664:	cmp	r0, #0
    d668:	bxeq	lr
    d66c:	push	{r4, sl, fp, lr}
    d670:	add	fp, sp, #8
    d674:	mov	r4, r0
    d678:	ldr	r0, [r0, #4]
    d67c:	cmp	r0, #0
    d680:	beq	d688 <sas7bdat_subheader_free+0x24>
    d684:	bl	48bc <free@plt>
    d688:	mov	r0, r4
    d68c:	pop	{r4, sl, fp, lr}
    d690:	b	48bc <free@plt>

0000d694 <sas7bdat_write_row_uncompressed>:
    d694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d698:	add	fp, sp, #28
    d69c:	sub	sp, sp, #12
    d6a0:	ldr	r5, [r1]
    d6a4:	mov	r8, r3
    d6a8:	mov	r9, r2
    d6ac:	mov	r4, r1
    d6b0:	mov	r6, r0
    d6b4:	bl	d4f8 <sas7bdat_row_length>
    d6b8:	mov	r2, r0
    d6bc:	ldr	r0, [r5, #40]!	; 0x28
    d6c0:	ldr	r1, [r5, #-8]
    d6c4:	ldr	r3, [r5, #-4]
    d6c8:	ldr	r7, [r5, #4]
    d6cc:	subs	r0, r1, r0
    d6d0:	sbc	r1, r3, r7
    d6d4:	mov	r3, #0
    d6d8:	bl	236c8 <__aeabi_ldivmod>
    d6dc:	mov	r7, r0
    d6e0:	ldr	r0, [r6, #84]	; 0x54
    d6e4:	sdiv	r1, r0, r7
    d6e8:	mls	r0, r1, r7, r0
    d6ec:	cmp	r0, #0
    d6f0:	beq	d708 <sas7bdat_write_row_uncompressed+0x74>
    d6f4:	mov	r0, r6
    d6f8:	mov	r1, r9
    d6fc:	mov	r2, r8
    d700:	bl	4e20 <readstat_write_bytes@plt>
    d704:	b	d794 <sas7bdat_write_row_uncompressed+0x100>
    d708:	ldr	r1, [r4]
    d70c:	mov	r0, r6
    d710:	bl	4e44 <sas_fill_page@plt>
    d714:	cmp	r0, #0
    d718:	bne	d794 <sas7bdat_write_row_uncompressed+0x100>
    d71c:	ldr	r0, [r6, #80]	; 0x50
    d720:	ldr	r2, [r5]
    d724:	ldr	sl, [r6, #84]	; 0x54
    d728:	str	sp, [fp, #-36]	; 0xffffffdc
    d72c:	str	r0, [fp, #-40]	; 0xffffffd8
    d730:	add	r0, r2, #7
    d734:	bic	r0, r0, #7
    d738:	sub	r4, sp, r0
    d73c:	mov	sp, r4
    d740:	mov	r0, r4
    d744:	mov	r1, #0
    d748:	bl	4c70 <memset@plt>
    d74c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d750:	mov	r1, #256	; 0x100
    d754:	sub	r0, r0, sl
    d758:	cmp	r0, r7
    d75c:	movlt	r7, r0
    d760:	ldr	r0, [r5]
    d764:	add	r0, r4, r0
    d768:	strh	r7, [r0, #-6]
    d76c:	ldr	r0, [r5]
    d770:	add	r0, r4, r0
    d774:	strh	r1, [r0, #-8]
    d778:	mov	r0, r6
    d77c:	mov	r1, r4
    d780:	ldr	r2, [r5]
    d784:	bl	4e20 <readstat_write_bytes@plt>
    d788:	ldr	sp, [fp, #-36]	; 0xffffffdc
    d78c:	cmp	r0, #0
    d790:	beq	d6f4 <sas7bdat_write_row_uncompressed+0x60>
    d794:	sub	sp, fp, #28
    d798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d79c <sas_rle_decompressed_len>:
    d79c:	mov	r3, r1
    d7a0:	mov	r2, r0
    d7a4:	mov	r0, #0
    d7a8:	mov	r1, #0
    d7ac:	b	d7b0 <sas_rle_decompress>

0000d7b0 <sas_rle_decompress>:
    d7b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7b4:	add	fp, sp, #28
    d7b8:	push	{r1}		; (str r1, [sp, #-4]!)
    d7bc:	cmp	r3, #1
    d7c0:	blt	d994 <sas_rle_decompress+0x1e4>
    d7c4:	ldr	r5, [pc, #468]	; d9a0 <sas_rle_decompress+0x1f0>
    d7c8:	add	r7, r2, r3
    d7cc:	mov	sl, r2
    d7d0:	mov	r8, r0
    d7d4:	mov	r3, #0
    d7d8:	add	r5, pc, r5
    d7dc:	mov	r6, sl
    d7e0:	ldrb	r1, [sl], #1
    d7e4:	lsr	r2, r1, #4
    d7e8:	ldr	r0, [r5, r2, lsl #2]
    d7ec:	add	r4, sl, r0
    d7f0:	mvn	r0, #0
    d7f4:	cmp	r4, r7
    d7f8:	bhi	d998 <sas_rle_decompress+0x1e8>
    d7fc:	cmp	r2, #15
    d800:	bhi	d984 <sas_rle_decompress+0x1d4>
    d804:	add	r4, pc, #8
    d808:	and	r1, r1, #15
    d80c:	ldr	r2, [r4, r2, lsl #2]
    d810:	add	pc, r4, r2
    d814:	.word	0x00000040
    d818:	.word	0x00000170
    d81c:	.word	0x00000170
    d820:	.word	0x00000170
    d824:	.word	0x00000058
    d828:	.word	0x00000074
    d82c:	.word	0x0000008c
    d830:	.word	0x000000a4
    d834:	.word	0x000000bc
    d838:	.word	0x000000c4
    d83c:	.word	0x000000cc
    d840:	.word	0x000000d4
    d844:	.word	0x00000114
    d848:	.word	0x00000124
    d84c:	.word	0x00000130
    d850:	.word	0x0000013c
    d854:	mov	r2, #64	; 0x40
    d858:	add	sl, r6, #2
    d85c:	orr	r1, r2, r1, lsl #8
    d860:	ldrb	r2, [r6, #1]
    d864:	add	r2, r1, r2
    d868:	b	d8ec <sas_rle_decompress+0x13c>
    d86c:	mov	r2, #18
    d870:	ldrb	r4, [r6, #1]
    d874:	add	sl, r6, #3
    d878:	orr	r2, r2, r1, lsl #8
    d87c:	ldrb	r1, [r6, #2]
    d880:	add	r2, r2, r4
    d884:	b	d958 <sas_rle_decompress+0x1a8>
    d888:	mov	r2, #17
    d88c:	add	sl, r6, #2
    d890:	orr	r1, r2, r1, lsl #8
    d894:	ldrb	r2, [r6, #1]
    d898:	add	r2, r1, r2
    d89c:	b	d93c <sas_rle_decompress+0x18c>
    d8a0:	mov	r2, #17
    d8a4:	add	sl, r6, #2
    d8a8:	orr	r1, r2, r1, lsl #8
    d8ac:	ldrb	r2, [r6, #1]
    d8b0:	add	r2, r1, r2
    d8b4:	b	d948 <sas_rle_decompress+0x198>
    d8b8:	mov	r2, #17
    d8bc:	add	sl, r6, #2
    d8c0:	orr	r1, r2, r1, lsl #8
    d8c4:	ldrb	r2, [r6, #1]
    d8c8:	add	r2, r1, r2
    d8cc:	b	d954 <sas_rle_decompress+0x1a4>
    d8d0:	add	r2, r1, #1
    d8d4:	b	d8ec <sas_rle_decompress+0x13c>
    d8d8:	add	r2, r1, #17
    d8dc:	b	d8ec <sas_rle_decompress+0x13c>
    d8e0:	add	r2, r1, #33	; 0x21
    d8e4:	b	d8ec <sas_rle_decompress+0x13c>
    d8e8:	add	r2, r1, #49	; 0x31
    d8ec:	ldr	r1, [sp]
    d8f0:	add	r6, r2, r3
    d8f4:	cmp	r6, r1
    d8f8:	addls	r9, sl, r2
    d8fc:	cmpls	r9, r7
    d900:	bhi	d998 <sas_rle_decompress+0x1e8>
    d904:	cmp	r8, #0
    d908:	beq	d920 <sas_rle_decompress+0x170>
    d90c:	add	r0, r8, r3
    d910:	mov	r1, sl
    d914:	bl	4910 <memcpy@plt>
    d918:	ldr	r5, [pc, #132]	; d9a4 <sas_rle_decompress+0x1f4>
    d91c:	add	r5, pc, r5
    d920:	mov	sl, r9
    d924:	b	d980 <sas_rle_decompress+0x1d0>
    d928:	add	r2, r1, #3
    d92c:	ldrb	r1, [r6, #1]
    d930:	add	sl, r6, #2
    d934:	b	d958 <sas_rle_decompress+0x1a8>
    d938:	add	r2, r1, #2
    d93c:	mov	r1, #64	; 0x40
    d940:	b	d958 <sas_rle_decompress+0x1a8>
    d944:	add	r2, r1, #2
    d948:	mov	r1, #32
    d94c:	b	d958 <sas_rle_decompress+0x1a8>
    d950:	add	r2, r1, #2
    d954:	mov	r1, #0
    d958:	ldr	r4, [sp]
    d95c:	add	r6, r2, r3
    d960:	cmp	r6, r4
    d964:	bhi	d998 <sas_rle_decompress+0x1e8>
    d968:	cmp	r8, #0
    d96c:	beq	d980 <sas_rle_decompress+0x1d0>
    d970:	add	r0, r8, r3
    d974:	bl	4c70 <memset@plt>
    d978:	ldr	r5, [pc, #40]	; d9a8 <sas_rle_decompress+0x1f8>
    d97c:	add	r5, pc, r5
    d980:	mov	r3, r6
    d984:	cmp	sl, r7
    d988:	mov	r0, r3
    d98c:	bcc	d7dc <sas_rle_decompress+0x2c>
    d990:	b	d998 <sas_rle_decompress+0x1e8>
    d994:	mov	r0, #0
    d998:	sub	sp, fp, #28
    d99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9a0:	.word	0x00016d30
    d9a4:	.word	0x00016bec
    d9a8:	.word	0x00016b8c

0000d9ac <sas_rle_compressed_len>:
    d9ac:	mov	r2, r0
    d9b0:	mov	r0, #0
    d9b4:	mov	r3, r1
    d9b8:	b	d9bc <sas_rle_compress>

0000d9bc <sas_rle_compress>:
    d9bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d9c0:	add	fp, sp, #28
    d9c4:	sub	sp, sp, #4
    d9c8:	mov	r7, r2
    d9cc:	cmp	r3, #1
    d9d0:	str	r0, [sp]
    d9d4:	blt	dacc <sas_rle_compress+0x110>
    d9d8:	ldr	r8, [sp]
    d9dc:	add	sl, r7, r3
    d9e0:	mov	r6, #0
    d9e4:	movw	lr, #4111	; 0x100f
    d9e8:	mov	r9, #0
    d9ec:	mov	r3, #0
    d9f0:	mov	r4, #0
    d9f4:	mov	r2, r7
    d9f8:	mov	r0, r6
    d9fc:	ldrb	r6, [r7]
    da00:	cmp	r4, #0
    da04:	beq	daa0 <sas_rle_compress+0xe4>
    da08:	cmp	r4, lr
    da0c:	bhi	da24 <sas_rle_compress+0x68>
    da10:	uxtb	r1, r0
    da14:	cmp	r6, r1
    da18:	bne	da24 <sas_rle_compress+0x68>
    da1c:	add	r4, r4, #1
    da20:	b	daa4 <sas_rle_compress+0xe8>
    da24:	uxtb	r5, r0
    da28:	cmp	r5, #64	; 0x40
    da2c:	cmpne	r5, #32
    da30:	bne	da44 <sas_rle_compress+0x88>
    da34:	cmp	r4, #1
    da38:	bhi	da6c <sas_rle_compress+0xb0>
    da3c:	add	r3, r3, r4
    da40:	b	daa0 <sas_rle_compress+0xe4>
    da44:	cmp	r4, #1
    da48:	mov	ip, #0
    da4c:	mov	r1, #0
    da50:	movwhi	ip, #1
    da54:	cmp	r4, #2
    da58:	movwhi	r1, #1
    da5c:	tst	r0, #255	; 0xff
    da60:	moveq	r1, ip
    da64:	cmp	r1, #1
    da68:	bne	da3c <sas_rle_compress+0x80>
    da6c:	mov	r0, r8
    da70:	mov	r1, r9
    da74:	bl	db54 <sas_rle_copy_run>
    da78:	add	r9, r0, r9
    da7c:	mov	r0, r8
    da80:	mov	r2, r5
    da84:	mov	r3, r4
    da88:	mov	r1, r9
    da8c:	bl	dc78 <sas_rle_insert_run>
    da90:	movw	lr, #4111	; 0x100f
    da94:	add	r9, r9, r0
    da98:	mov	r3, #0
    da9c:	mov	r2, r7
    daa0:	mov	r4, #1
    daa4:	add	r7, r7, #1
    daa8:	cmp	r7, sl
    daac:	bcc	d9f8 <sas_rle_compress+0x3c>
    dab0:	cmp	r6, #0
    dab4:	beq	dadc <sas_rle_compress+0x120>
    dab8:	cmp	r6, #64	; 0x40
    dabc:	cmpne	r6, #32
    dac0:	bne	daf4 <sas_rle_compress+0x138>
    dac4:	mov	r0, #1
    dac8:	b	dae4 <sas_rle_compress+0x128>
    dacc:	mov	r0, #0
    dad0:	mov	r3, #0
    dad4:	mov	r9, #0
    dad8:	b	db34 <sas_rle_compress+0x178>
    dadc:	mov	r0, #1
    dae0:	mov	r6, #0
    dae4:	cmp	r4, #1
    dae8:	bhi	dafc <sas_rle_compress+0x140>
    daec:	mov	r7, r2
    daf0:	b	db34 <sas_rle_compress+0x178>
    daf4:	cmp	r4, #3
    daf8:	bcc	db2c <sas_rle_compress+0x170>
    dafc:	ldr	r7, [sp]
    db00:	mov	r1, r9
    db04:	mov	r0, r7
    db08:	bl	db54 <sas_rle_copy_run>
    db0c:	add	r5, r0, r9
    db10:	mov	r0, r7
    db14:	mov	r2, r6
    db18:	mov	r3, r4
    db1c:	mov	r1, r5
    db20:	bl	dc78 <sas_rle_insert_run>
    db24:	add	r0, r5, r0
    db28:	b	db4c <sas_rle_compress+0x190>
    db2c:	mov	r7, r2
    db30:	mov	r0, r4
    db34:	add	r3, r3, r0
    db38:	ldr	r0, [sp]
    db3c:	mov	r1, r9
    db40:	mov	r2, r7
    db44:	bl	db54 <sas_rle_copy_run>
    db48:	add	r0, r0, r9
    db4c:	sub	sp, fp, #28
    db50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000db54 <sas_rle_copy_run>:
    db54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    db58:	add	fp, sp, #28
    db5c:	sub	sp, sp, #4
    db60:	mov	r4, r3
    db64:	cmp	r0, #0
    db68:	beq	dbdc <sas_rle_copy_run+0x88>
    db6c:	movw	r7, #4159	; 0x103f
    db70:	add	r6, r0, r1
    db74:	mov	r5, r2
    db78:	cmp	r4, r7
    db7c:	str	r6, [sp]
    db80:	bcc	dbbc <sas_rle_copy_run+0x68>
    db84:	movw	r9, #4161	; 0x1041
    db88:	movw	sl, #65295	; 0xff0f
    db8c:	movw	r8, #4158	; 0x103e
    db90:	mov	r0, r6
    db94:	add	r0, r0, #2
    db98:	mov	r1, r5
    db9c:	movw	r2, #4159	; 0x103f
    dba0:	strh	sl, [r6], r9
    dba4:	bl	4910 <memcpy@plt>
    dba8:	sub	r4, r4, r7
    dbac:	add	r5, r5, r7
    dbb0:	mov	r0, r6
    dbb4:	cmp	r4, r8
    dbb8:	bhi	db94 <sas_rle_copy_run+0x40>
    dbbc:	cmp	r4, #65	; 0x41
    dbc0:	bcc	dc2c <sas_rle_copy_run+0xd8>
    dbc4:	sub	r0, r4, #64	; 0x40
    dbc8:	strb	r0, [r6, #1]
    dbcc:	ubfx	r0, r0, #8, #4
    dbd0:	strb	r0, [r6]
    dbd4:	add	r6, r6, #2
    dbd8:	b	dc48 <sas_rle_copy_run+0xf4>
    dbdc:	movw	r1, #4159	; 0x103f
    dbe0:	mov	r0, #0
    dbe4:	cmp	r4, r1
    dbe8:	bcc	dc14 <sas_rle_copy_run+0xc0>
    dbec:	sub	r0, r4, r1
    dbf0:	movw	r1, #17633	; 0x44e1
    dbf4:	movt	r1, #64543	; 0xfc1f
    dbf8:	umull	r1, r2, r0, r1
    dbfc:	lsr	r1, r2, #12
    dc00:	movw	r2, #61377	; 0xefc1
    dc04:	movt	r2, #65535	; 0xffff
    dc08:	mla	r4, r1, r2, r0
    dc0c:	movw	r0, #4161	; 0x1041
    dc10:	mla	r0, r1, r0, r0
    dc14:	add	r0, r0, r4
    dc18:	cmp	r4, #64	; 0x40
    dc1c:	addhi	r0, r0, #1
    dc20:	cmp	r4, #0
    dc24:	addne	r0, r0, #1
    dc28:	b	dc64 <sas_rle_copy_run+0x110>
    dc2c:	cmp	r4, #49	; 0x31
    dc30:	bcs	dc40 <sas_rle_copy_run+0xec>
    dc34:	cmp	r4, #33	; 0x21
    dc38:	cmpcc	r4, #17
    dc3c:	bcc	dc6c <sas_rle_copy_run+0x118>
    dc40:	add	r0, r4, #127	; 0x7f
    dc44:	strb	r0, [r6], #1
    dc48:	mov	r0, r6
    dc4c:	mov	r1, r5
    dc50:	mov	r2, r4
    dc54:	bl	4910 <memcpy@plt>
    dc58:	ldr	r1, [sp]
    dc5c:	add	r0, r6, r4
    dc60:	sub	r0, r0, r1
    dc64:	sub	sp, fp, #28
    dc68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc6c:	cmp	r4, #0
    dc70:	bne	dc40 <sas_rle_copy_run+0xec>
    dc74:	b	dc48 <sas_rle_copy_run+0xf4>

0000dc78 <sas_rle_insert_run>:
    dc78:	cmp	r0, #0
    dc7c:	beq	dcc0 <sas_rle_insert_run+0x48>
    dc80:	cmp	r2, #0
    dc84:	add	r0, r0, r1
    dc88:	cmpne	r2, #64	; 0x40
    dc8c:	bne	dd0c <sas_rle_insert_run+0x94>
    dc90:	cmp	r3, #18
    dc94:	bcc	dcdc <sas_rle_insert_run+0x64>
    dc98:	sub	r3, r3, #17
    dc9c:	cmp	r2, #0
    dca0:	beq	dd64 <sas_rle_insert_run+0xec>
    dca4:	cmp	r2, #64	; 0x40
    dca8:	beq	dd6c <sas_rle_insert_run+0xf4>
    dcac:	cmp	r2, #32
    dcb0:	mov	r1, r0
    dcb4:	bne	dd84 <sas_rle_insert_run+0x10c>
    dcb8:	mov	r1, #96	; 0x60
    dcbc:	b	dd70 <sas_rle_insert_run+0xf8>
    dcc0:	cmp	r2, #64	; 0x40
    dcc4:	cmpne	r2, #32
    dcc8:	bne	dd40 <sas_rle_insert_run+0xc8>
    dccc:	mov	r0, #1
    dcd0:	cmp	r3, #17
    dcd4:	movwhi	r0, #2
    dcd8:	bx	lr
    dcdc:	cmp	r3, #2
    dce0:	mov	r1, r0
    dce4:	bcc	ddbc <sas_rle_insert_run+0x144>
    dce8:	cmp	r2, #0
    dcec:	beq	dda8 <sas_rle_insert_run+0x130>
    dcf0:	cmp	r2, #32
    dcf4:	beq	ddb0 <sas_rle_insert_run+0x138>
    dcf8:	cmp	r2, #64	; 0x40
    dcfc:	mov	r1, r0
    dd00:	bne	ddbc <sas_rle_insert_run+0x144>
    dd04:	sub	r2, r3, #50	; 0x32
    dd08:	b	ddb4 <sas_rle_insert_run+0x13c>
    dd0c:	cmp	r2, #32
    dd10:	beq	dc90 <sas_rle_insert_run+0x18>
    dd14:	cmp	r3, #19
    dd18:	bcc	dd8c <sas_rle_insert_run+0x114>
    dd1c:	sub	r1, r3, #18
    dd20:	strb	r2, [r0, #2]
    dd24:	mov	r2, #4
    dd28:	strb	r1, [r0, #1]
    dd2c:	lsr	r1, r1, #8
    dd30:	bfi	r1, r2, #4, #28
    dd34:	strb	r1, [r0]
    dd38:	add	r1, r0, #3
    dd3c:	b	ddbc <sas_rle_insert_run+0x144>
    dd40:	mov	r1, #1
    dd44:	cmp	r3, #17
    dd48:	mov	r0, #2
    dd4c:	movwhi	r1, #2
    dd50:	cmp	r3, #18
    dd54:	movwhi	r0, #3
    dd58:	cmp	r2, #0
    dd5c:	moveq	r0, r1
    dd60:	bx	lr
    dd64:	mov	r1, #112	; 0x70
    dd68:	b	dd70 <sas_rle_insert_run+0xf8>
    dd6c:	mov	r1, #80	; 0x50
    dd70:	lsr	r2, r3, #8
    dd74:	and	r2, r2, #15
    dd78:	orr	r2, r2, r1
    dd7c:	mov	r1, r0
    dd80:	strb	r2, [r1], #1
    dd84:	strb	r3, [r1], #1
    dd88:	b	ddbc <sas_rle_insert_run+0x144>
    dd8c:	cmp	r3, #3
    dd90:	mov	r1, r0
    dd94:	subcs	r1, r3, #67	; 0x43
    dd98:	strbcs	r2, [r0, #1]
    dd9c:	strbcs	r1, [r0]
    dda0:	addcs	r1, r0, #2
    dda4:	b	ddbc <sas_rle_insert_run+0x144>
    dda8:	sub	r2, r3, #18
    ddac:	b	ddb4 <sas_rle_insert_run+0x13c>
    ddb0:	sub	r2, r3, #34	; 0x22
    ddb4:	mov	r1, r0
    ddb8:	strb	r2, [r1], #1
    ddbc:	sub	r0, r1, r0
    ddc0:	bx	lr

0000ddc4 <xport_namestr_bswap>:
    ddc4:	push	{r4, sl, fp, lr}
    ddc8:	add	fp, sp, #8
    ddcc:	mov	r4, r0
    ddd0:	bl	48b0 <machine_is_little_endian@plt>
    ddd4:	cmp	r0, #0
    ddd8:	popeq	{r4, sl, fp, pc}
    dddc:	ldrh	r0, [r4]
    dde0:	bl	48a4 <byteswap2@plt>
    dde4:	strh	r0, [r4]
    dde8:	ldrh	r0, [r4, #2]
    ddec:	bl	48a4 <byteswap2@plt>
    ddf0:	strh	r0, [r4, #2]
    ddf4:	ldrh	r0, [r4, #4]
    ddf8:	bl	48a4 <byteswap2@plt>
    ddfc:	strh	r0, [r4, #4]
    de00:	ldrh	r0, [r4, #6]
    de04:	bl	48a4 <byteswap2@plt>
    de08:	strh	r0, [r4, #6]
    de0c:	ldrh	r0, [r4, #64]	; 0x40
    de10:	bl	48a4 <byteswap2@plt>
    de14:	strh	r0, [r4, #64]	; 0x40
    de18:	ldrh	r0, [r4, #66]	; 0x42
    de1c:	bl	48a4 <byteswap2@plt>
    de20:	strh	r0, [r4, #66]	; 0x42
    de24:	ldrh	r0, [r4, #68]	; 0x44
    de28:	bl	48a4 <byteswap2@plt>
    de2c:	strh	r0, [r4, #68]	; 0x44
    de30:	ldrh	r0, [r4, #80]	; 0x50
    de34:	bl	48a4 <byteswap2@plt>
    de38:	strh	r0, [r4, #80]	; 0x50
    de3c:	ldrh	r0, [r4, #82]	; 0x52
    de40:	bl	48a4 <byteswap2@plt>
    de44:	strh	r0, [r4, #82]	; 0x52
    de48:	ldr	r0, [r4, #84]	; 0x54
    de4c:	bl	47b4 <byteswap4@plt>
    de50:	str	r0, [r4, #84]	; 0x54
    de54:	ldrh	r0, [r4, #120]	; 0x78
    de58:	bl	48a4 <byteswap2@plt>
    de5c:	strh	r0, [r4, #120]	; 0x78
    de60:	pop	{r4, sl, fp, pc}

0000de64 <readstat_parse_xport>:
    de64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    de68:	add	fp, sp, #28
    de6c:	sub	sp, sp, #228	; 0xe4
    de70:	ldr	r8, [r0, #32]
    de74:	mov	r6, r1
    de78:	mov	r5, r0
    de7c:	mov	r0, #1
    de80:	mov	r1, #384	; 0x180
    de84:	mov	r7, r2
    de88:	mov	sl, #1
    de8c:	bl	4778 <calloc@plt>
    de90:	mov	r4, r0
    de94:	add	r0, r5, #16
    de98:	mov	r1, #48	; 0x30
    de9c:	vld1.32	{d16-d17}, [r0]
    dea0:	mov	r0, r5
    dea4:	mov	r2, r4
    dea8:	add	r5, r5, #36	; 0x24
    deac:	vld1.32	{d18-d19}, [r0], r1
    deb0:	add	r1, r4, #16
    deb4:	vst1.32	{d16-d17}, [r1]
    deb8:	mov	r1, #68	; 0x44
    debc:	vst1.32	{d18-d19}, [r2], r1
    dec0:	ldm	r5, {r1, r3, r5}
    dec4:	str	r8, [r4, #52]	; 0x34
    dec8:	str	r7, [r4, #36]	; 0x24
    decc:	str	r1, [r4, #40]	; 0x28
    ded0:	str	r3, [r4, #44]	; 0x2c
    ded4:	str	r5, [r2]
    ded8:	ldr	r0, [r0]
    dedc:	cmp	r0, #1
    dee0:	strge	r0, [r4, #72]	; 0x48
    dee4:	mov	r0, r6
    dee8:	ldr	r2, [r8]
    deec:	ldr	r1, [r8, #20]
    def0:	blx	r2
    def4:	cmn	r0, #1
    def8:	beq	df68 <readstat_parse_xport+0x104>
    defc:	ldr	r3, [r8, #8]
    df00:	ldr	r2, [r8, #20]
    df04:	mov	r0, #0
    df08:	mov	r1, #2
    df0c:	blx	r3
    df10:	mov	sl, #15
    df14:	cmn	r0, #1
    df18:	str	r0, [r4, #32]
    df1c:	beq	df68 <readstat_parse_xport+0x104>
    df20:	ldr	r3, [r8, #8]
    df24:	ldr	r2, [r8, #20]
    df28:	mov	r0, #0
    df2c:	mov	r1, #0
    df30:	blx	r3
    df34:	cmn	r0, #1
    df38:	beq	df68 <readstat_parse_xport+0x104>
    df3c:	ldr	r6, [r4, #40]	; 0x28
    df40:	cmp	r6, #0
    df44:	ldrne	r7, [r4, #44]	; 0x2c
    df48:	cmpne	r7, #0
    df4c:	bne	e020 <readstat_parse_xport+0x1bc>
    df50:	add	r1, sp, #80	; 0x50
    df54:	mov	r0, r4
    df58:	bl	e84c <xport_read_header_record>
    df5c:	cmp	r0, #0
    df60:	beq	dfe0 <readstat_parse_xport+0x17c>
    df64:	mov	sl, r0
    df68:	ldr	r1, [r8, #4]
    df6c:	ldr	r0, [r8, #20]
    df70:	blx	r1
    df74:	ldr	r0, [r4, #376]	; 0x178
    df78:	cmp	r0, #0
    df7c:	beq	dfbc <readstat_parse_xport+0x158>
    df80:	ldr	r2, [r4, #64]	; 0x40
    df84:	cmp	r2, #1
    df88:	blt	dfb8 <readstat_parse_xport+0x154>
    df8c:	mov	r5, #0
    df90:	ldr	r1, [r0, r5, lsl #2]
    df94:	cmp	r1, #0
    df98:	beq	dfac <readstat_parse_xport+0x148>
    df9c:	mov	r0, r1
    dfa0:	bl	48bc <free@plt>
    dfa4:	ldr	r2, [r4, #64]	; 0x40
    dfa8:	ldr	r0, [r4, #376]	; 0x178
    dfac:	add	r5, r5, #1
    dfb0:	cmp	r5, r2
    dfb4:	blt	df90 <readstat_parse_xport+0x12c>
    dfb8:	bl	48bc <free@plt>
    dfbc:	ldr	r0, [r4, #48]	; 0x30
    dfc0:	cmp	r0, #0
    dfc4:	beq	dfcc <readstat_parse_xport+0x168>
    dfc8:	bl	47d8 <iconv_close@plt>
    dfcc:	mov	r0, r4
    dfd0:	bl	48bc <free@plt>
    dfd4:	mov	r0, sl
    dfd8:	sub	sp, fp, #28
    dfdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfe0:	ldr	r1, [pc, #1984]	; e7a8 <readstat_parse_xport+0x944>
    dfe4:	add	r0, sp, #80	; 0x50
    dfe8:	add	r1, pc, r1
    dfec:	bl	4808 <strcmp@plt>
    dff0:	cmp	r0, #0
    dff4:	beq	e050 <readstat_parse_xport+0x1ec>
    dff8:	ldr	r1, [pc, #1964]	; e7ac <readstat_parse_xport+0x948>
    dffc:	add	r0, sp, #80	; 0x50
    e000:	add	r1, pc, r1
    e004:	bl	4808 <strcmp@plt>
    e008:	mov	r1, r0
    e00c:	mov	r0, #24
    e010:	cmp	r1, #0
    e014:	bne	df64 <readstat_parse_xport+0x100>
    e018:	mov	r0, #8
    e01c:	b	e054 <readstat_parse_xport+0x1f0>
    e020:	mov	r0, r6
    e024:	mov	r1, r7
    e028:	bl	4808 <strcmp@plt>
    e02c:	cmp	r0, #0
    e030:	beq	df50 <readstat_parse_xport+0xec>
    e034:	mov	r0, r7
    e038:	mov	r1, r6
    e03c:	bl	4b14 <iconv_open@plt>
    e040:	cmn	r0, #1
    e044:	beq	e138 <readstat_parse_xport+0x2d4>
    e048:	str	r0, [r4, #48]	; 0x30
    e04c:	b	df50 <readstat_parse_xport+0xec>
    e050:	mov	r0, #5
    e054:	str	r0, [r4, #380]	; 0x17c
    e058:	mov	r1, #1
    e05c:	ldr	r0, [r4, #52]	; 0x34
    e060:	ldr	r3, [r0, #8]
    e064:	ldr	r2, [r0, #20]
    e068:	mov	r0, #80	; 0x50
    e06c:	blx	r3
    e070:	cmn	r0, #1
    e074:	beq	df68 <readstat_parse_xport+0x104>
    e078:	add	r5, sp, #32
    e07c:	vmov.i32	q8, #0	; 0x00000000
    e080:	add	r0, r5, #28
    e084:	mov	r1, r5
    e088:	vst1.32	{d16-d17}, [r0]
    e08c:	add	r0, r5, #16
    e090:	vst1.64	{d16-d17}, [r0]
    e094:	mov	r0, #32
    e098:	vst1.64	{d16-d17}, [r1], r0
    e09c:	mvn	r0, #0
    e0a0:	str	r0, [r1]
    e0a4:	ldr	r0, [r4, #52]	; 0x34
    e0a8:	mov	r1, #80	; 0x50
    e0ac:	ldr	r3, [r0, #12]
    e0b0:	ldr	r2, [r0, #20]
    e0b4:	add	r0, sp, #80	; 0x50
    e0b8:	blx	r3
    e0bc:	mov	sl, #2
    e0c0:	cmp	r0, #80	; 0x50
    e0c4:	blt	e164 <readstat_parse_xport+0x300>
    e0c8:	mov	r7, #0
    e0cc:	orr	r0, r5, #4
    e0d0:	add	r1, r5, #8
    e0d4:	add	r2, r5, #20
    e0d8:	str	r5, [sp, #12]
    e0dc:	str	r2, [sp]
    e0e0:	str	r0, [sp, #8]
    e0e4:	strb	r7, [sp, #160]	; 0xa0
    e0e8:	str	r1, [sp, #4]
    e0ec:	add	r2, r5, #12
    e0f0:	add	r5, sp, #28
    e0f4:	add	r0, sp, #80	; 0x50
    e0f8:	ldr	r1, [pc, #1712]	; e7b0 <readstat_parse_xport+0x94c>
    e0fc:	mov	r3, r5
    e100:	add	r1, pc, r1
    e104:	bl	4c58 <__isoc99_sscanf@plt>
    e108:	ldr	r6, [pc, #1700]	; e7b4 <readstat_parse_xport+0x950>
    e10c:	ldr	r6, [pc, r6]
    e110:	mov	r0, r5
    e114:	mov	r1, r6
    e118:	bl	4808 <strcmp@plt>
    e11c:	cmp	r0, #0
    e120:	beq	e140 <readstat_parse_xport+0x2dc>
    e124:	add	r7, r7, #1
    e128:	add	r6, r6, #4
    e12c:	cmp	r7, #12
    e130:	bcc	e110 <readstat_parse_xport+0x2ac>
    e134:	b	e144 <readstat_parse_xport+0x2e0>
    e138:	mov	sl, #7
    e13c:	b	df68 <readstat_parse_xport+0x104>
    e140:	str	r7, [sp, #48]	; 0x30
    e144:	ldr	r0, [sp, #52]	; 0x34
    e148:	cmp	r0, #59	; 0x3b
    e14c:	addle	r0, r0, #100	; 0x64
    e150:	strle	r0, [sp, #52]	; 0x34
    e154:	add	r0, sp, #32
    e158:	bl	4850 <mktime@plt>
    e15c:	mov	sl, #0
    e160:	str	r0, [r4, #56]	; 0x38
    e164:	cmp	sl, #0
    e168:	bne	df68 <readstat_parse_xport+0x104>
    e16c:	ldr	r1, [pc, #1604]	; e7b8 <readstat_parse_xport+0x954>
    e170:	ldr	r2, [pc, #1604]	; e7bc <readstat_parse_xport+0x958>
    e174:	mov	r0, r4
    e178:	add	r1, pc, r1
    e17c:	add	r2, pc, r2
    e180:	bl	e7e4 <xport_expect_header_record>
    e184:	mov	sl, r0
    e188:	cmp	r0, #0
    e18c:	bne	df68 <readstat_parse_xport+0x104>
    e190:	ldr	r1, [pc, #1576]	; e7c0 <readstat_parse_xport+0x95c>
    e194:	ldr	r2, [pc, #1576]	; e7c4 <readstat_parse_xport+0x960>
    e198:	mov	r0, r4
    e19c:	add	r1, pc, r1
    e1a0:	add	r2, pc, r2
    e1a4:	bl	e7e4 <xport_expect_header_record>
    e1a8:	mov	sl, r0
    e1ac:	cmp	r0, #0
    e1b0:	bne	df68 <readstat_parse_xport+0x104>
    e1b4:	ldr	r0, [r4, #52]	; 0x34
    e1b8:	add	r5, sp, #80	; 0x50
    e1bc:	mov	r1, #80	; 0x50
    e1c0:	ldr	r3, [r0, #12]
    e1c4:	ldr	r2, [r0, #20]
    e1c8:	mov	r0, r5
    e1cc:	blx	r3
    e1d0:	cmp	r0, #79	; 0x4f
    e1d4:	bgt	e1e0 <readstat_parse_xport+0x37c>
    e1d8:	mov	sl, #2
    e1dc:	b	df68 <readstat_parse_xport+0x104>
    e1e0:	mov	r0, #0
    e1e4:	ldr	r1, [r4, #380]	; 0x17c
    e1e8:	mov	r3, #32
    e1ec:	add	r7, r4, #245	; 0xf5
    e1f0:	add	r2, r5, #8
    e1f4:	strb	r0, [sp, #160]	; 0xa0
    e1f8:	ldr	r0, [r4, #48]	; 0x30
    e1fc:	cmp	r1, #5
    e200:	mov	r1, #129	; 0x81
    e204:	str	r0, [sp]
    e208:	movweq	r3, #8
    e20c:	mov	r0, r7
    e210:	bl	4c04 <readstat_convert@plt>
    e214:	mov	sl, r0
    e218:	cmp	r0, #0
    e21c:	bne	df68 <readstat_parse_xport+0x104>
    e220:	ldr	r0, [r4, #52]	; 0x34
    e224:	add	r9, sp, #80	; 0x50
    e228:	mov	r1, #80	; 0x50
    e22c:	ldr	r3, [r0, #12]
    e230:	ldr	r2, [r0, #20]
    e234:	mov	r0, r9
    e238:	blx	r3
    e23c:	cmp	r0, #79	; 0x4f
    e240:	ble	e1d8 <readstat_parse_xport+0x374>
    e244:	mov	r0, #0
    e248:	add	r6, r4, #84	; 0x54
    e24c:	add	r2, r9, #32
    e250:	mov	r1, #161	; 0xa1
    e254:	mov	r3, #40	; 0x28
    e258:	strb	r0, [sp, #160]	; 0xa0
    e25c:	ldr	r0, [r4, #48]	; 0x30
    e260:	str	r0, [sp]
    e264:	mov	r0, r6
    e268:	bl	4c04 <readstat_convert@plt>
    e26c:	mov	sl, r0
    e270:	cmp	r0, #0
    e274:	bne	df68 <readstat_parse_xport+0x104>
    e278:	add	r1, sp, #32
    e27c:	mov	r0, r4
    e280:	bl	e84c <xport_read_header_record>
    e284:	mov	sl, r0
    e288:	cmp	r0, #0
    e28c:	bne	df68 <readstat_parse_xport+0x104>
    e290:	ldr	r0, [r4, #380]	; 0x17c
    e294:	cmp	r0, #8
    e298:	beq	e2b4 <readstat_parse_xport+0x450>
    e29c:	cmp	r0, #5
    e2a0:	bne	e2d0 <readstat_parse_xport+0x46c>
    e2a4:	ldr	r1, [pc, #1308]	; e7c8 <readstat_parse_xport+0x964>
    e2a8:	add	r0, sp, #32
    e2ac:	add	r1, pc, r1
    e2b0:	b	e2c0 <readstat_parse_xport+0x45c>
    e2b4:	ldr	r1, [pc, #1296]	; e7cc <readstat_parse_xport+0x968>
    e2b8:	add	r0, sp, #32
    e2bc:	add	r1, pc, r1
    e2c0:	bl	4808 <strcmp@plt>
    e2c4:	mov	sl, #5
    e2c8:	cmp	r0, #0
    e2cc:	bne	df68 <readstat_parse_xport+0x104>
    e2d0:	ldr	r0, [sp, #48]	; 0x30
    e2d4:	mov	r1, #4
    e2d8:	str	r0, [r4, #64]	; 0x40
    e2dc:	bl	49ac <readstat_calloc@plt>
    e2e0:	cmp	r0, #0
    e2e4:	str	r0, [r4, #376]	; 0x178
    e2e8:	beq	e4f4 <readstat_parse_xport+0x690>
    e2ec:	ldr	r2, [r4]
    e2f0:	cmp	r2, #0
    e2f4:	beq	e364 <readstat_parse_xport+0x500>
    e2f8:	mvn	r0, #0
    e2fc:	mov	r1, #0
    e300:	str	r0, [sp, #84]	; 0x54
    e304:	str	r0, [sp, #80]	; 0x50
    e308:	ldr	r0, [r4, #64]	; 0x40
    e30c:	str	r0, [sp, #88]	; 0x58
    e310:	asr	r0, r0, #31
    e314:	str	r0, [sp, #92]	; 0x5c
    e318:	ldr	r0, [r4, #56]	; 0x38
    e31c:	str	r0, [sp, #100]	; 0x64
    e320:	str	r0, [sp, #96]	; 0x60
    e324:	ldr	r0, [r4, #380]	; 0x17c
    e328:	str	r1, [sp, #112]	; 0x70
    e32c:	str	r1, [sp, #116]	; 0x74
    e330:	str	r7, [sp, #120]	; 0x78
    e334:	str	r6, [sp, #124]	; 0x7c
    e338:	str	r1, [sp, #128]	; 0x80
    e33c:	strb	r1, [sp, #132]	; 0x84
    e340:	ldr	r1, [r4, #36]	; 0x24
    e344:	str	r0, [sp, #104]	; 0x68
    e348:	asr	r0, r0, #31
    e34c:	str	r0, [sp, #108]	; 0x6c
    e350:	add	r0, sp, #80	; 0x50
    e354:	blx	r2
    e358:	mov	sl, #4
    e35c:	cmp	r0, #0
    e360:	bne	df68 <readstat_parse_xport+0x104>
    e364:	ldr	r0, [r4, #64]	; 0x40
    e368:	cmp	r0, #1
    e36c:	blt	e4ac <readstat_parse_xport+0x648>
    e370:	add	r0, r9, #56	; 0x38
    e374:	add	r7, r9, #16
    e378:	mov	r5, #0
    e37c:	str	r0, [sp, #24]
    e380:	add	r0, r9, #88	; 0x58
    e384:	str	r0, [sp, #20]
    e388:	add	r0, r9, #8
    e38c:	str	r0, [sp, #16]
    e390:	ldr	r0, [r4, #52]	; 0x34
    e394:	mov	r1, #140	; 0x8c
    e398:	ldr	r3, [r0, #12]
    e39c:	ldr	r2, [r0, #20]
    e3a0:	mov	r0, r9
    e3a4:	blx	r3
    e3a8:	cmp	r0, #140	; 0x8c
    e3ac:	bcc	e1d8 <readstat_parse_xport+0x374>
    e3b0:	mov	r0, r9
    e3b4:	bl	4a84 <xport_namestr_bswap@plt>
    e3b8:	mov	r0, #1
    e3bc:	movw	r1, #2152	; 0x868
    e3c0:	bl	4778 <calloc@plt>
    e3c4:	mov	r6, r0
    e3c8:	ldrh	r0, [sp, #80]	; 0x50
    e3cc:	subs	r0, r0, #2
    e3d0:	movwne	r0, #5
    e3d4:	stm	r6, {r0, r5}
    e3d8:	ldrh	r0, [sp, #84]	; 0x54
    e3dc:	ldrh	r2, [sp, #148]	; 0x94
    e3e0:	ldrh	r1, [sp, #146]	; 0x92
    e3e4:	str	r0, [r6, #1596]	; 0x63c
    e3e8:	ldrh	r0, [sp, #144]	; 0x90
    e3ec:	cmp	r2, #0
    e3f0:	mov	r2, #3
    e3f4:	movweq	r2, #1
    e3f8:	str	r2, [r6, #2132]	; 0x854
    e3fc:	ldr	r2, [r4, #380]	; 0x17c
    e400:	str	r0, [r6, #2136]	; 0x858
    e404:	str	r1, [r6, #2140]	; 0x85c
    e408:	ldr	r1, [r4, #48]	; 0x30
    e40c:	add	r0, r6, #8
    e410:	cmp	r2, #5
    e414:	bne	e42c <readstat_parse_xport+0x5c8>
    e418:	ldr	r2, [sp, #16]
    e41c:	str	r1, [sp]
    e420:	mov	r1, #300	; 0x12c
    e424:	mov	r3, #8
    e428:	b	e43c <readstat_parse_xport+0x5d8>
    e42c:	ldr	r2, [sp, #20]
    e430:	str	r1, [sp]
    e434:	mov	r1, #300	; 0x12c
    e438:	mov	r3, #32
    e43c:	bl	4c04 <readstat_convert@plt>
    e440:	mov	sl, r0
    e444:	cmp	r0, #0
    e448:	bne	df68 <readstat_parse_xport+0x104>
    e44c:	ldr	r0, [r4, #48]	; 0x30
    e450:	mov	r1, #1024	; 0x400
    e454:	mov	r2, r7
    e458:	mov	r3, #40	; 0x28
    e45c:	str	r0, [sp]
    e460:	add	r0, r6, #564	; 0x234
    e464:	bl	4c04 <readstat_convert@plt>
    e468:	cmp	r0, #0
    e46c:	bne	df64 <readstat_parse_xport+0x100>
    e470:	ldr	r0, [r6, #2140]	; 0x85c
    e474:	ldr	r3, [r6, #2136]	; 0x858
    e478:	ldr	r1, [sp, #24]
    e47c:	mov	r2, #8
    e480:	str	r0, [sp]
    e484:	add	r0, r6, #308	; 0x134
    e488:	bl	e8ec <xport_construct_format>
    e48c:	cmp	r0, #0
    e490:	bne	df64 <readstat_parse_xport+0x100>
    e494:	ldr	r0, [r4, #376]	; 0x178
    e498:	str	r6, [r0, r5, lsl #2]
    e49c:	add	r5, r5, #1
    e4a0:	ldr	r0, [r4, #64]	; 0x40
    e4a4:	cmp	r5, r0
    e4a8:	blt	e390 <readstat_parse_xport+0x52c>
    e4ac:	mov	r0, r4
    e4b0:	bl	e9dc <xport_skip_rest_of_record>
    e4b4:	mov	sl, r0
    e4b8:	cmp	r0, #0
    e4bc:	bne	df68 <readstat_parse_xport+0x104>
    e4c0:	ldr	r0, [r4, #380]	; 0x17c
    e4c4:	cmp	r0, #5
    e4c8:	bne	e4fc <readstat_parse_xport+0x698>
    e4cc:	ldr	r1, [pc, #764]	; e7d0 <readstat_parse_xport+0x96c>
    e4d0:	ldr	r2, [pc, #764]	; e7d4 <readstat_parse_xport+0x970>
    e4d4:	mov	r0, r4
    e4d8:	add	r1, pc, r1
    e4dc:	add	r2, pc, r2
    e4e0:	bl	e7e4 <xport_expect_header_record>
    e4e4:	mov	sl, r0
    e4e8:	cmp	r0, #0
    e4ec:	bne	df68 <readstat_parse_xport+0x104>
    e4f0:	b	e55c <readstat_parse_xport+0x6f8>
    e4f4:	mov	sl, #3
    e4f8:	b	df68 <readstat_parse_xport+0x104>
    e4fc:	add	r1, sp, #80	; 0x50
    e500:	mov	r0, r4
    e504:	bl	e84c <xport_read_header_record>
    e508:	mov	sl, r0
    e50c:	cmp	r0, #0
    e510:	bne	df68 <readstat_parse_xport+0x104>
    e514:	ldr	r1, [pc, #700]	; e7d8 <readstat_parse_xport+0x974>
    e518:	add	r0, sp, #80	; 0x50
    e51c:	add	r1, pc, r1
    e520:	bl	4808 <strcmp@plt>
    e524:	cmp	r0, #0
    e528:	beq	e55c <readstat_parse_xport+0x6f8>
    e52c:	ldr	r1, [pc, #680]	; e7dc <readstat_parse_xport+0x978>
    e530:	add	r0, sp, #80	; 0x50
    e534:	add	r1, pc, r1
    e538:	bl	4808 <strcmp@plt>
    e53c:	cmp	r0, #0
    e540:	beq	e648 <readstat_parse_xport+0x7e4>
    e544:	ldr	r1, [pc, #660]	; e7e0 <readstat_parse_xport+0x97c>
    e548:	add	r0, sp, #80	; 0x50
    e54c:	add	r1, pc, r1
    e550:	bl	4808 <strcmp@plt>
    e554:	cmp	r0, #0
    e558:	beq	e658 <readstat_parse_xport+0x7f4>
    e55c:	mov	sl, #0
    e560:	str	sl, [r4, #76]	; 0x4c
    e564:	ldr	r0, [r4, #64]	; 0x40
    e568:	cmp	r0, #1
    e56c:	blt	df68 <readstat_parse_xport+0x104>
    e570:	mov	sl, #0
    e574:	mov	r9, #1
    e578:	mov	r5, #0
    e57c:	ldr	r0, [r4, #376]	; 0x178
    e580:	ldr	r6, [r0, r5, lsl #2]
    e584:	str	sl, [r6, #2148]	; 0x864
    e588:	ldr	r7, [r4, #8]
    e58c:	cmp	r7, #0
    e590:	beq	e5b8 <readstat_parse_xport+0x754>
    e594:	ldr	r3, [r4, #36]	; 0x24
    e598:	add	r2, r6, #308	; 0x134
    e59c:	mov	r0, r5
    e5a0:	mov	r1, r6
    e5a4:	blx	r7
    e5a8:	cmp	r0, #2
    e5ac:	beq	e5c0 <readstat_parse_xport+0x75c>
    e5b0:	cmp	r0, #1
    e5b4:	beq	e640 <readstat_parse_xport+0x7dc>
    e5b8:	add	sl, sl, #1
    e5bc:	b	e5c4 <readstat_parse_xport+0x760>
    e5c0:	str	r9, [r6, #2144]	; 0x860
    e5c4:	ldr	r0, [r6, #1596]	; 0x63c
    e5c8:	ldr	r2, [r4, #76]	; 0x4c
    e5cc:	ldr	r1, [r4, #64]	; 0x40
    e5d0:	add	r5, r5, #1
    e5d4:	add	r0, r2, r0
    e5d8:	cmp	r5, r1
    e5dc:	str	r0, [r4, #76]	; 0x4c
    e5e0:	blt	e57c <readstat_parse_xport+0x718>
    e5e4:	cmp	r0, #0
    e5e8:	mov	sl, #0
    e5ec:	ldrne	r1, [r4, #16]
    e5f0:	cmpne	r1, #0
    e5f4:	beq	df68 <readstat_parse_xport+0x104>
    e5f8:	bl	4bf8 <readstat_malloc@plt>
    e5fc:	mov	r7, r0
    e600:	ldr	r0, [r4, #76]	; 0x4c
    e604:	bl	4bf8 <readstat_malloc@plt>
    e608:	mov	r6, r0
    e60c:	cmp	r7, #0
    e610:	mov	sl, #3
    e614:	cmpne	r6, #0
    e618:	bne	e668 <readstat_parse_xport+0x804>
    e61c:	cmp	r7, #0
    e620:	beq	e62c <readstat_parse_xport+0x7c8>
    e624:	mov	r0, r7
    e628:	bl	48bc <free@plt>
    e62c:	cmp	r6, #0
    e630:	beq	df68 <readstat_parse_xport+0x104>
    e634:	mov	r0, r6
    e638:	bl	48bc <free@plt>
    e63c:	b	df68 <readstat_parse_xport+0x104>
    e640:	mov	sl, #4
    e644:	b	df68 <readstat_parse_xport+0x104>
    e648:	ldr	r1, [sp, #92]	; 0x5c
    e64c:	mov	r0, r4
    e650:	bl	ea58 <xport_read_labels_v8>
    e654:	b	e4e4 <readstat_parse_xport+0x680>
    e658:	ldr	r1, [sp, #92]	; 0x5c
    e65c:	mov	r0, r4
    e660:	bl	ec4c <xport_read_labels_v9>
    e664:	b	e4e4 <readstat_parse_xport+0x680>
    e668:	ldr	r2, [r4, #76]	; 0x4c
    e66c:	mov	r0, r6
    e670:	mov	r1, #32
    e674:	bl	4c70 <memset@plt>
    e678:	ldr	r0, [r4, #52]	; 0x34
    e67c:	ldr	r1, [r4, #76]	; 0x4c
    e680:	ldr	r3, [r0, #12]
    e684:	ldr	r2, [r0, #20]
    e688:	mov	r0, r7
    e68c:	blx	r3
    e690:	cmn	r0, #1
    e694:	beq	e790 <readstat_parse_xport+0x92c>
    e698:	mov	sl, #0
    e69c:	b	e73c <readstat_parse_xport+0x8d8>
    e6a0:	cmp	sl, #0
    e6a4:	beq	e6dc <readstat_parse_xport+0x878>
    e6a8:	mov	r0, r4
    e6ac:	mov	r1, r6
    e6b0:	bl	ef1c <xport_process_row>
    e6b4:	cmp	r0, #0
    e6b8:	bne	e798 <readstat_parse_xport+0x934>
    e6bc:	ldr	r0, [r4, #68]	; 0x44
    e6c0:	cmp	r0, #1
    e6c4:	blt	e6d4 <readstat_parse_xport+0x870>
    e6c8:	ldr	r1, [r4, #80]	; 0x50
    e6cc:	cmp	r1, r0
    e6d0:	beq	e7a0 <readstat_parse_xport+0x93c>
    e6d4:	subs	sl, sl, #1
    e6d8:	bne	e6a8 <readstat_parse_xport+0x844>
    e6dc:	mov	r0, r4
    e6e0:	mov	r1, r7
    e6e4:	bl	ef1c <xport_process_row>
    e6e8:	cmp	r0, #0
    e6ec:	bne	e798 <readstat_parse_xport+0x934>
    e6f0:	ldr	r3, [r4, #52]	; 0x34
    e6f4:	ldr	r1, [r4, #28]
    e6f8:	ldr	r0, [r4, #32]
    e6fc:	ldr	r2, [r4, #36]	; 0x24
    e700:	ldr	r5, [r3, #16]
    e704:	ldr	r3, [r3, #20]
    e708:	blx	r5
    e70c:	cmp	r0, #0
    e710:	bne	e798 <readstat_parse_xport+0x934>
    e714:	ldr	r0, [r4, #68]	; 0x44
    e718:	cmp	r0, #1
    e71c:	blt	e734 <readstat_parse_xport+0x8d0>
    e720:	ldr	r1, [r4, #80]	; 0x50
    e724:	mov	sl, #0
    e728:	cmp	r1, r0
    e72c:	bne	e770 <readstat_parse_xport+0x90c>
    e730:	b	e61c <readstat_parse_xport+0x7b8>
    e734:	mov	sl, #0
    e738:	b	e770 <readstat_parse_xport+0x90c>
    e73c:	ldr	r1, [r4, #76]	; 0x4c
    e740:	cmp	r0, r1
    e744:	bcc	e7a0 <readstat_parse_xport+0x93c>
    e748:	cmp	r1, #0
    e74c:	beq	e76c <readstat_parse_xport+0x908>
    e750:	mov	r0, #0
    e754:	ldrb	r2, [r7, r0]
    e758:	cmp	r2, #32
    e75c:	bne	e6a0 <readstat_parse_xport+0x83c>
    e760:	add	r0, r0, #1
    e764:	cmp	r0, r1
    e768:	bcc	e754 <readstat_parse_xport+0x8f0>
    e76c:	add	sl, sl, #1
    e770:	ldr	r0, [r4, #52]	; 0x34
    e774:	ldr	r1, [r4, #76]	; 0x4c
    e778:	ldr	r3, [r0, #12]
    e77c:	ldr	r2, [r0, #20]
    e780:	mov	r0, r7
    e784:	blx	r3
    e788:	cmn	r0, #1
    e78c:	bne	e73c <readstat_parse_xport+0x8d8>
    e790:	mov	sl, #2
    e794:	b	e61c <readstat_parse_xport+0x7b8>
    e798:	mov	sl, r0
    e79c:	b	e61c <readstat_parse_xport+0x7b8>
    e7a0:	mov	sl, #0
    e7a4:	b	e61c <readstat_parse_xport+0x7b8>
    e7a8:	.word	0x0001657e
    e7ac:	.word	0x0001656e
    e7b0:	.word	0x000164b9
    e7b4:	.word	0x000361a4
    e7b8:	.word	0x000163d0
    e7bc:	.word	0x000163d3
    e7c0:	.word	0x000163ba
    e7c4:	.word	0x000163be
    e7c8:	.word	0x00016328
    e7cc:	.word	0x00016320
    e7d0:	.word	0x0001612f
    e7d4:	.word	0x00016108
    e7d8:	.word	0x000160c8
    e7dc:	.word	0x000160b6
    e7e0:	.word	0x000160a6

0000e7e4 <xport_expect_header_record>:
    e7e4:	push	{r4, r5, r6, sl, fp, lr}
    e7e8:	add	fp, sp, #16
    e7ec:	sub	sp, sp, #40	; 0x28
    e7f0:	mov	r4, r1
    e7f4:	add	r1, sp, #4
    e7f8:	mov	r5, r2
    e7fc:	mov	r6, r0
    e800:	bl	e84c <xport_read_header_record>
    e804:	cmp	r0, #0
    e808:	bne	e844 <xport_expect_header_record+0x60>
    e80c:	ldr	r1, [r6, #380]	; 0x17c
    e810:	cmp	r1, #8
    e814:	beq	e830 <xport_expect_header_record+0x4c>
    e818:	mov	r0, #0
    e81c:	cmp	r1, #5
    e820:	bne	e844 <xport_expect_header_record+0x60>
    e824:	add	r0, sp, #4
    e828:	mov	r1, r4
    e82c:	b	e838 <xport_expect_header_record+0x54>
    e830:	add	r0, sp, #4
    e834:	mov	r1, r5
    e838:	bl	4808 <strcmp@plt>
    e83c:	cmp	r0, #0
    e840:	movwne	r0, #5
    e844:	sub	sp, fp, #16
    e848:	pop	{r4, r5, r6, sl, fp, pc}

0000e84c <xport_read_header_record>:
    e84c:	push	{r4, r5, fp, lr}
    e850:	add	fp, sp, #8
    e854:	sub	sp, sp, #104	; 0x68
    e858:	ldr	r0, [r0, #52]	; 0x34
    e85c:	mov	r4, r1
    e860:	mov	r1, #80	; 0x50
    e864:	ldr	r3, [r0, #12]
    e868:	ldr	r2, [r0, #20]
    e86c:	add	r0, sp, #23
    e870:	blx	r3
    e874:	mov	r5, #2
    e878:	cmp	r0, #80	; 0x50
    e87c:	blt	e8dc <xport_read_header_record+0x90>
    e880:	mov	r5, #0
    e884:	vmov.i32	q8, #0	; 0x00000000
    e888:	mov	r1, #28
    e88c:	mov	r2, r4
    e890:	add	r0, r4, #16
    e894:	add	ip, r4, #24
    e898:	add	r3, r4, #20
    e89c:	strb	r5, [sp, #103]	; 0x67
    e8a0:	vst1.32	{d16-d17}, [r2], r1
    e8a4:	mov	r1, r4
    e8a8:	vst1.32	{d16-d17}, [r0]
    e8ac:	str	r5, [r1, #32]!
    e8b0:	stm	sp, {r0, r3, ip}
    e8b4:	str	r2, [sp, #12]
    e8b8:	add	r3, r4, #12
    e8bc:	add	r0, sp, #23
    e8c0:	mov	r2, r4
    e8c4:	str	r1, [sp, #16]
    e8c8:	ldr	r1, [pc, #24]	; e8e8 <xport_read_header_record+0x9c>
    e8cc:	add	r1, pc, r1
    e8d0:	bl	4c58 <__isoc99_sscanf@plt>
    e8d4:	cmp	r0, #2
    e8d8:	movwlt	r5, #5
    e8dc:	mov	r0, r5
    e8e0:	sub	sp, fp, #8
    e8e4:	pop	{r4, r5, fp, pc}
    e8e8:	.word	0x00015ca8

0000e8ec <xport_construct_format>:
    e8ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    e8f0:	add	fp, sp, #24
    e8f4:	mov	r7, r3
    e8f8:	mov	r3, r2
    e8fc:	mov	r5, r0
    e900:	mov	r0, #1
    e904:	mov	r2, r1
    e908:	orr	r1, r0, r3, lsl #2
    e90c:	add	r0, r1, #7
    e910:	bic	r0, r0, #7
    e914:	sub	r6, sp, r0
    e918:	mov	sp, r6
    e91c:	sub	sp, sp, #8
    e920:	mov	r0, #0
    e924:	str	r0, [sp]
    e928:	mov	r0, r6
    e92c:	bl	4c04 <readstat_convert@plt>
    e930:	add	sp, sp, #8
    e934:	mov	r4, r0
    e938:	cmp	r0, #0
    e93c:	bne	e9a8 <xport_construct_format+0xbc>
    e940:	ldrb	r0, [r6]
    e944:	cmp	r0, #0
    e948:	beq	e970 <xport_construct_format+0x84>
    e94c:	ldr	r0, [fp, #8]
    e950:	cmp	r0, #0
    e954:	beq	e97c <xport_construct_format+0x90>
    e958:	sub	sp, sp, #8
    e95c:	str	r7, [sp]
    e960:	str	r0, [sp, #4]
    e964:	ldr	r2, [pc, #100]	; e9d0 <xport_construct_format+0xe4>
    e968:	add	r2, pc, r2
    e96c:	b	e994 <xport_construct_format+0xa8>
    e970:	mov	r0, #0
    e974:	strb	r0, [r5]
    e978:	b	e9a8 <xport_construct_format+0xbc>
    e97c:	cmp	r7, #0
    e980:	beq	e9b4 <xport_construct_format+0xc8>
    e984:	sub	sp, sp, #8
    e988:	str	r7, [sp]
    e98c:	ldr	r2, [pc, #64]	; e9d4 <xport_construct_format+0xe8>
    e990:	add	r2, pc, r2
    e994:	mov	r0, r5
    e998:	mov	r1, #256	; 0x100
    e99c:	mov	r3, r6
    e9a0:	bl	4c4c <snprintf@plt>
    e9a4:	add	sp, sp, #8
    e9a8:	mov	r0, r4
    e9ac:	sub	sp, fp, #24
    e9b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    e9b4:	ldr	r2, [pc, #28]	; e9d8 <xport_construct_format+0xec>
    e9b8:	mov	r0, r5
    e9bc:	mov	r1, #256	; 0x100
    e9c0:	mov	r3, r6
    e9c4:	add	r2, pc, r2
    e9c8:	bl	4c4c <snprintf@plt>
    e9cc:	b	e9a8 <xport_construct_format+0xbc>
    e9d0:	.word	0x00015c92
    e9d4:	.word	0x00015c72
    e9d8:	.word	0x00016828

0000e9dc <xport_skip_rest_of_record>:
    e9dc:	push	{r4, r5, fp, lr}
    e9e0:	add	fp, sp, #8
    e9e4:	ldr	r5, [r0, #52]	; 0x34
    e9e8:	mov	r0, #0
    e9ec:	mov	r1, #1
    e9f0:	ldr	r3, [r5, #8]
    e9f4:	ldr	r2, [r5, #20]
    e9f8:	blx	r3
    e9fc:	mov	r4, #15
    ea00:	cmn	r0, #1
    ea04:	beq	ea50 <xport_skip_rest_of_record+0x74>
    ea08:	movw	r1, #26215	; 0x6667
    ea0c:	movt	r1, #26214	; 0x6666
    ea10:	smmul	r1, r0, r1
    ea14:	asr	r2, r1, #5
    ea18:	add	r1, r2, r1, lsr #31
    ea1c:	add	r1, r1, r1, lsl #2
    ea20:	sub	r0, r0, r1, lsl #4
    ea24:	cmp	r0, #0
    ea28:	beq	ea4c <xport_skip_rest_of_record+0x70>
    ea2c:	ldr	r3, [r5, #8]
    ea30:	ldr	r2, [r5, #20]
    ea34:	rsb	r0, r0, #80	; 0x50
    ea38:	mov	r1, #1
    ea3c:	blx	r3
    ea40:	cmn	r0, #1
    ea44:	movne	r4, #0
    ea48:	b	ea50 <xport_skip_rest_of_record+0x74>
    ea4c:	mov	r4, #0
    ea50:	mov	r0, r4
    ea54:	pop	{r4, r5, fp, pc}

0000ea58 <xport_read_labels_v8>:
    ea58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ea5c:	add	fp, sp, #28
    ea60:	sub	sp, sp, #36	; 0x24
    ea64:	mov	r6, r0
    ea68:	cmp	r1, #1
    ea6c:	str	r1, [fp, #-60]	; 0xffffffc4
    ea70:	blt	ebf4 <xport_read_labels_v8+0x19c>
    ea74:	mov	r7, #0
    ea78:	ldr	r0, [r6, #52]	; 0x34
    ea7c:	mov	r1, #6
    ea80:	ldr	r3, [r0, #12]
    ea84:	ldr	r2, [r0, #20]
    ea88:	sub	r0, fp, #38	; 0x26
    ea8c:	blx	r3
    ea90:	cmp	r0, #6
    ea94:	bne	ec34 <xport_read_labels_v8+0x1dc>
    ea98:	bl	48b0 <machine_is_little_endian@plt>
    ea9c:	ldrh	r8, [fp, #-38]	; 0xffffffda
    eaa0:	cmp	r0, #0
    eaa4:	beq	ead0 <xport_read_labels_v8+0x78>
    eaa8:	mov	r0, r8
    eaac:	bl	48a4 <byteswap2@plt>
    eab0:	mov	r8, r0
    eab4:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    eab8:	bl	48a4 <byteswap2@plt>
    eabc:	mov	r4, r0
    eac0:	ldrh	r0, [fp, #-34]	; 0xffffffde
    eac4:	bl	48a4 <byteswap2@plt>
    eac8:	mov	sl, r0
    eacc:	b	ead8 <xport_read_labels_v8+0x80>
    ead0:	ldrh	sl, [fp, #-34]	; 0xffffffde
    ead4:	ldrh	r4, [fp, #-36]	; 0xffffffdc
    ead8:	mov	r5, #5
    eadc:	cmp	r8, #0
    eae0:	beq	ec38 <xport_read_labels_v8+0x1e0>
    eae4:	ldr	r1, [r6, #64]	; 0x40
    eae8:	cmp	r1, r8
    eaec:	blt	ec38 <xport_read_labels_v8+0x1e0>
    eaf0:	movw	r1, #65528	; 0xfff8
    eaf4:	add	r2, r4, #8
    eaf8:	str	r7, [fp, #-52]	; 0xffffffcc
    eafc:	str	sp, [fp, #-44]	; 0xffffffd4
    eb00:	movt	r1, #1
    eb04:	and	r2, r2, r1
    eb08:	sub	r9, sp, r2
    eb0c:	add	r2, sl, #8
    eb10:	and	r1, r2, r1
    eb14:	mov	sp, r9
    eb18:	mov	r7, r4
    eb1c:	sub	r4, sp, r1
    eb20:	mov	sp, r4
    eb24:	ldr	r1, [r6, #376]	; 0x178
    eb28:	ldr	r0, [r6, #52]	; 0x34
    eb2c:	add	r1, r1, r8, lsl #2
    eb30:	ldr	r3, [r0, #12]
    eb34:	ldr	r2, [r0, #20]
    eb38:	mov	r0, r9
    eb3c:	ldr	r1, [r1, #-4]
    eb40:	str	r1, [fp, #-48]	; 0xffffffd0
    eb44:	mov	r1, r7
    eb48:	blx	r3
    eb4c:	mov	r5, #2
    eb50:	cmp	r0, r7
    eb54:	bne	ec2c <xport_read_labels_v8+0x1d4>
    eb58:	ldr	r0, [r6, #52]	; 0x34
    eb5c:	mov	r1, sl
    eb60:	mov	r8, r7
    eb64:	ldr	r3, [r0, #12]
    eb68:	ldr	r2, [r0, #20]
    eb6c:	mov	r0, r4
    eb70:	blx	r3
    eb74:	cmp	r0, sl
    eb78:	str	sl, [fp, #-56]	; 0xffffffc8
    eb7c:	bne	ec2c <xport_read_labels_v8+0x1d4>
    eb80:	ldr	r0, [r6, #48]	; 0x30
    eb84:	sub	sp, sp, #8
    eb88:	ldr	r7, [fp, #-48]	; 0xffffffd0
    eb8c:	str	r0, [sp]
    eb90:	mov	r1, #300	; 0x12c
    eb94:	mov	r2, r9
    eb98:	mov	r3, r8
    eb9c:	add	r0, r7, #8
    eba0:	bl	4c04 <readstat_convert@plt>
    eba4:	add	sp, sp, #8
    eba8:	cmp	r0, #0
    ebac:	bne	ec28 <xport_read_labels_v8+0x1d0>
    ebb0:	ldr	r0, [r6, #48]	; 0x30
    ebb4:	sub	sp, sp, #8
    ebb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ebbc:	str	r0, [sp]
    ebc0:	add	r0, r7, #564	; 0x234
    ebc4:	mov	r1, #1024	; 0x400
    ebc8:	mov	r2, r4
    ebcc:	bl	4c04 <readstat_convert@plt>
    ebd0:	add	sp, sp, #8
    ebd4:	cmp	r0, #0
    ebd8:	bne	ec28 <xport_read_labels_v8+0x1d0>
    ebdc:	ldr	r7, [fp, #-52]	; 0xffffffcc
    ebe0:	add	r7, r7, #1
    ebe4:	ldr	sp, [fp, #-44]	; 0xffffffd4
    ebe8:	ldr	r0, [fp, #-60]	; 0xffffffc4
    ebec:	cmp	r7, r0
    ebf0:	blt	ea78 <xport_read_labels_v8+0x20>
    ebf4:	mov	r0, r6
    ebf8:	bl	e9dc <xport_skip_rest_of_record>
    ebfc:	mov	r5, r0
    ec00:	cmp	r0, #0
    ec04:	bne	ec38 <xport_read_labels_v8+0x1e0>
    ec08:	ldr	r1, [pc, #52]	; ec44 <xport_read_labels_v8+0x1ec>
    ec0c:	ldr	r2, [pc, #52]	; ec48 <xport_read_labels_v8+0x1f0>
    ec10:	mov	r0, r6
    ec14:	add	r1, pc, r1
    ec18:	add	r2, pc, r2
    ec1c:	bl	e7e4 <xport_expect_header_record>
    ec20:	mov	r5, r0
    ec24:	b	ec38 <xport_read_labels_v8+0x1e0>
    ec28:	mov	r5, r0
    ec2c:	ldr	sp, [fp, #-44]	; 0xffffffd4
    ec30:	b	ec38 <xport_read_labels_v8+0x1e0>
    ec34:	mov	r5, #2
    ec38:	mov	r0, r5
    ec3c:	sub	sp, fp, #28
    ec40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ec44:	.word	0x000159f3
    ec48:	.word	0x000159cc

0000ec4c <xport_read_labels_v9>:
    ec4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ec50:	add	fp, sp, #28
    ec54:	sub	sp, sp, #60	; 0x3c
    ec58:	mov	r7, r0
    ec5c:	cmp	r1, #1
    ec60:	str	r1, [fp, #-84]	; 0xffffffac
    ec64:	blt	eebc <xport_read_labels_v9+0x270>
    ec68:	mov	r4, #0
    ec6c:	ldr	r0, [r7, #52]	; 0x34
    ec70:	mov	r1, #10
    ec74:	ldr	r3, [r0, #12]
    ec78:	ldr	r2, [r0, #20]
    ec7c:	sub	r0, fp, #42	; 0x2a
    ec80:	blx	r3
    ec84:	cmp	r0, #10
    ec88:	bne	ef0c <xport_read_labels_v9+0x2c0>
    ec8c:	bl	48b0 <machine_is_little_endian@plt>
    ec90:	ldrh	r3, [fp, #-42]	; 0xffffffd6
    ec94:	cmp	r0, #0
    ec98:	beq	ecdc <xport_read_labels_v9+0x90>
    ec9c:	mov	r0, r3
    eca0:	bl	48a4 <byteswap2@plt>
    eca4:	mov	r5, r0
    eca8:	ldrh	r0, [fp, #-40]	; 0xffffffd8
    ecac:	bl	48a4 <byteswap2@plt>
    ecb0:	mov	r6, r0
    ecb4:	ldrh	r0, [fp, #-38]	; 0xffffffda
    ecb8:	bl	48a4 <byteswap2@plt>
    ecbc:	mov	sl, r0
    ecc0:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    ecc4:	bl	48a4 <byteswap2@plt>
    ecc8:	mov	r8, r0
    eccc:	ldrh	r0, [fp, #-34]	; 0xffffffde
    ecd0:	bl	48a4 <byteswap2@plt>
    ecd4:	mov	r3, r5
    ecd8:	b	ecec <xport_read_labels_v9+0xa0>
    ecdc:	ldrh	r0, [fp, #-34]	; 0xffffffde
    ece0:	ldrh	r8, [fp, #-36]	; 0xffffffdc
    ece4:	ldrh	sl, [fp, #-38]	; 0xffffffda
    ece8:	ldrh	r6, [fp, #-40]	; 0xffffffd8
    ecec:	mov	r9, #5
    ecf0:	cmp	r3, #0
    ecf4:	beq	ef00 <xport_read_labels_v9+0x2b4>
    ecf8:	ldr	r1, [r7, #64]	; 0x40
    ecfc:	cmp	r1, r3
    ed00:	blt	ef00 <xport_read_labels_v9+0x2b4>
    ed04:	movw	r1, #65528	; 0xfff8
    ed08:	add	r2, r6, #8
    ed0c:	mov	r5, sl
    ed10:	str	r4, [fp, #-76]	; 0xffffffb4
    ed14:	str	sp, [fp, #-52]	; 0xffffffcc
    ed18:	mov	sl, r6
    ed1c:	movt	r1, #1
    ed20:	and	r2, r2, r1
    ed24:	sub	r4, sp, r2
    ed28:	add	r2, r5, #8
    ed2c:	and	r2, r2, r1
    ed30:	mov	sp, r4
    ed34:	sub	r6, sp, r2
    ed38:	add	r2, r8, #8
    ed3c:	str	r8, [fp, #-56]	; 0xffffffc8
    ed40:	and	r2, r2, r1
    ed44:	mov	sp, r6
    ed48:	sub	r8, sp, r2
    ed4c:	str	r0, [fp, #-48]	; 0xffffffd0
    ed50:	add	r0, r0, #8
    ed54:	and	r0, r0, r1
    ed58:	mov	sp, r8
    ed5c:	sub	r0, sp, r0
    ed60:	str	r0, [fp, #-60]	; 0xffffffc4
    ed64:	mov	sp, r0
    ed68:	ldr	r1, [r7, #376]	; 0x178
    ed6c:	ldr	r0, [r7, #52]	; 0x34
    ed70:	str	r4, [fp, #-68]	; 0xffffffbc
    ed74:	add	r1, r1, r3, lsl #2
    ed78:	ldr	r3, [r0, #12]
    ed7c:	ldr	r2, [r0, #20]
    ed80:	mov	r0, r4
    ed84:	ldr	r1, [r1, #-4]
    ed88:	str	r1, [fp, #-72]	; 0xffffffb8
    ed8c:	mov	r1, sl
    ed90:	blx	r3
    ed94:	mov	r9, #2
    ed98:	cmp	r0, sl
    ed9c:	str	sl, [fp, #-64]	; 0xffffffc0
    eda0:	bne	eef0 <xport_read_labels_v9+0x2a4>
    eda4:	ldr	r0, [r7, #52]	; 0x34
    eda8:	mov	r1, r5
    edac:	ldr	r3, [r0, #12]
    edb0:	ldr	r2, [r0, #20]
    edb4:	mov	r0, r6
    edb8:	blx	r3
    edbc:	cmp	r0, r5
    edc0:	str	r5, [fp, #-80]	; 0xffffffb0
    edc4:	bne	eef0 <xport_read_labels_v9+0x2a4>
    edc8:	ldr	r0, [r7, #52]	; 0x34
    edcc:	ldr	r5, [fp, #-56]	; 0xffffffc8
    edd0:	mov	sl, r6
    edd4:	ldr	r3, [r0, #12]
    edd8:	ldr	r2, [r0, #20]
    eddc:	mov	r0, r8
    ede0:	mov	r1, r5
    ede4:	blx	r3
    ede8:	cmp	r0, r5
    edec:	bne	eef0 <xport_read_labels_v9+0x2a4>
    edf0:	ldr	r0, [r7, #52]	; 0x34
    edf4:	ldr	r5, [fp, #-48]	; 0xffffffd0
    edf8:	ldr	r6, [fp, #-60]	; 0xffffffc4
    edfc:	ldr	r3, [r0, #12]
    ee00:	ldr	r2, [r0, #20]
    ee04:	mov	r0, r6
    ee08:	mov	r1, r5
    ee0c:	blx	r3
    ee10:	cmp	r0, r5
    ee14:	ldr	r5, [fp, #-52]	; 0xffffffcc
    ee18:	bne	eefc <xport_read_labels_v9+0x2b0>
    ee1c:	ldr	r0, [r7, #48]	; 0x30
    ee20:	sub	sp, sp, #8
    ee24:	ldr	r4, [fp, #-72]	; 0xffffffb8
    ee28:	ldr	r2, [fp, #-68]	; 0xffffffbc
    ee2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    ee30:	str	r0, [sp]
    ee34:	mov	r1, #300	; 0x12c
    ee38:	add	r0, r4, #8
    ee3c:	bl	4c04 <readstat_convert@plt>
    ee40:	add	sp, sp, #8
    ee44:	cmp	r0, #0
    ee48:	bne	eef8 <xport_read_labels_v9+0x2ac>
    ee4c:	ldr	r0, [r7, #48]	; 0x30
    ee50:	sub	sp, sp, #8
    ee54:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ee58:	str	r0, [sp]
    ee5c:	add	r0, r4, #564	; 0x234
    ee60:	mov	r1, #1024	; 0x400
    ee64:	mov	r2, r6
    ee68:	bl	4c04 <readstat_convert@plt>
    ee6c:	add	sp, sp, #8
    ee70:	cmp	r0, #0
    ee74:	bne	eef8 <xport_read_labels_v9+0x2ac>
    ee78:	ldr	r0, [r4, #2140]	; 0x85c
    ee7c:	ldr	r3, [r4, #2136]	; 0x858
    ee80:	sub	sp, sp, #8
    ee84:	ldr	r2, [fp, #-80]	; 0xffffffb0
    ee88:	str	r0, [sp]
    ee8c:	add	r0, r4, #308	; 0x134
    ee90:	mov	r1, sl
    ee94:	bl	e8ec <xport_construct_format>
    ee98:	add	sp, sp, #8
    ee9c:	cmp	r0, #0
    eea0:	bne	eef8 <xport_read_labels_v9+0x2ac>
    eea4:	ldr	r4, [fp, #-76]	; 0xffffffb4
    eea8:	add	r4, r4, #1
    eeac:	mov	sp, r5
    eeb0:	ldr	r0, [fp, #-84]	; 0xffffffac
    eeb4:	cmp	r4, r0
    eeb8:	blt	ec6c <xport_read_labels_v9+0x20>
    eebc:	mov	r0, r7
    eec0:	bl	e9dc <xport_skip_rest_of_record>
    eec4:	mov	r9, r0
    eec8:	cmp	r0, #0
    eecc:	bne	ef00 <xport_read_labels_v9+0x2b4>
    eed0:	ldr	r1, [pc, #60]	; ef14 <xport_read_labels_v9+0x2c8>
    eed4:	ldr	r2, [pc, #60]	; ef18 <xport_read_labels_v9+0x2cc>
    eed8:	mov	r0, r7
    eedc:	add	r1, pc, r1
    eee0:	add	r2, pc, r2
    eee4:	bl	e7e4 <xport_expect_header_record>
    eee8:	mov	r9, r0
    eeec:	b	ef00 <xport_read_labels_v9+0x2b4>
    eef0:	ldr	r5, [fp, #-52]	; 0xffffffcc
    eef4:	b	eefc <xport_read_labels_v9+0x2b0>
    eef8:	mov	r9, r0
    eefc:	mov	sp, r5
    ef00:	mov	r0, r9
    ef04:	sub	sp, fp, #28
    ef08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ef0c:	mov	r9, #2
    ef10:	b	ef00 <xport_read_labels_v9+0x2b4>
    ef14:	.word	0x0001572b
    ef18:	.word	0x00015704

0000ef1c <xport_process_row>:
    ef1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef20:	add	fp, sp, #28
    ef24:	sub	sp, sp, #68	; 0x44
    ef28:	mov	lr, r0
    ef2c:	ldr	r0, [r0, #64]	; 0x40
    ef30:	str	r1, [sp, #28]
    ef34:	cmp	r0, #0
    ef38:	ble	f180 <xport_process_row+0x264>
    ef3c:	add	r0, lr, #72	; 0x48
    ef40:	movw	r1, #0
    ef44:	mov	r6, #1
    ef48:	mov	sl, #0
    ef4c:	mov	r8, #0
    ef50:	str	lr, [sp, #44]	; 0x2c
    ef54:	str	r0, [sp, #16]
    ef58:	add	r0, sp, #48	; 0x30
    ef5c:	movt	r1, #32760	; 0x7ff8
    ef60:	orr	r0, r0, #1
    ef64:	str	r0, [sp, #20]
    ef68:	mov	r0, #0
    ef6c:	str	r0, [sp, #32]
    ef70:	b	efa8 <xport_process_row+0x8c>
    ef74:	bl	4b2c <sas_validate_tag@plt>
    ef78:	cmp	r0, #0
    ef7c:	beq	ef88 <xport_process_row+0x6c>
    ef80:	ldr	r6, [r7]
    ef84:	b	f020 <xport_process_row+0x104>
    ef88:	ldrb	r0, [r4]
    ef8c:	cmp	r0, #46	; 0x2e
    ef90:	beq	f0d8 <xport_process_row+0x1bc>
    ef94:	and	r1, r9, #64768	; 0xfd00
    ef98:	orr	r1, r5, r1
    ef9c:	orr	r0, r1, r0
    efa0:	orr	r4, r0, #512	; 0x200
    efa4:	b	f0e4 <xport_process_row+0x1c8>
    efa8:	ldr	r0, [lr, #376]	; 0x178
    efac:	and	r9, r5, #64512	; 0xfc00
    efb0:	bfc	r5, #0, #16
    efb4:	orr	r4, r5, r9
    efb8:	ldr	r3, [r0, r8, lsl #2]
    efbc:	ldr	r0, [r3]
    efc0:	str	r3, [sp, #40]	; 0x28
    efc4:	cmp	r0, #0
    efc8:	str	r0, [sp, #36]	; 0x24
    efcc:	beq	f058 <xport_process_row+0x13c>
    efd0:	mov	r2, #0
    efd4:	str	r1, [fp, #-36]	; 0xffffffdc
    efd8:	mov	r7, r3
    efdc:	str	r2, [fp, #-40]	; 0xffffffd8
    efe0:	ldr	r6, [r7, #1596]!	; 0x63c
    efe4:	sub	r0, r6, #3
    efe8:	cmp	r0, #5
    efec:	bhi	f0c4 <xport_process_row+0x1a8>
    eff0:	mov	r0, #0
    eff4:	str	r4, [sp, #24]
    eff8:	sub	r2, r6, #1
    effc:	str	r0, [sp, #52]	; 0x34
    f000:	str	r0, [sp, #48]	; 0x30
    f004:	ldr	r0, [sp, #28]
    f008:	add	r4, r0, sl
    f00c:	ldr	r0, [sp, #20]
    f010:	add	r1, r4, #1
    f014:	bl	4988 <memcmp@plt>
    f018:	cmp	r0, #0
    f01c:	beq	f0cc <xport_process_row+0x1b0>
    f020:	mov	r1, r4
    f024:	add	r4, sp, #48	; 0x30
    f028:	mov	r2, r6
    f02c:	mov	r0, r4
    f030:	bl	4910 <memcpy@plt>
    f034:	mov	r0, r4
    f038:	mov	r1, #1
    f03c:	sub	r2, fp, #40	; 0x28
    f040:	mov	r3, #0
    f044:	bl	49f4 <cnxptiee@plt>
    f048:	ldr	r4, [sp, #24]
    f04c:	cmp	r0, #0
    f050:	beq	f0e4 <xport_process_row+0x1c8>
    f054:	b	f1d8 <xport_process_row+0x2bc>
    f058:	mov	r7, r3
    f05c:	mov	r5, r4
    f060:	ldr	r0, [r7, #1596]!	; 0x63c
    f064:	orr	r1, r6, r0, lsl #2
    f068:	ldr	r0, [sp, #32]
    f06c:	bl	4cb8 <readstat_realloc@plt>
    f070:	cmp	r0, #0
    f074:	beq	f1c4 <xport_process_row+0x2a8>
    f078:	mov	r4, r0
    f07c:	ldr	r0, [sp, #44]	; 0x2c
    f080:	ldr	r3, [r7]
    f084:	ldr	r0, [r0, #48]	; 0x30
    f088:	orr	r1, r6, r3, lsl #2
    f08c:	str	r0, [sp]
    f090:	ldr	r0, [sp, #28]
    f094:	add	r2, r0, sl
    f098:	mov	r0, r4
    f09c:	bl	4c04 <readstat_convert@plt>
    f0a0:	mov	r3, #0
    f0a4:	cmp	r0, #0
    f0a8:	bne	f1d0 <xport_process_row+0x2b4>
    f0ac:	ldr	lr, [sp, #44]	; 0x2c
    f0b0:	movw	r1, #0
    f0b4:	str	r4, [sp, #32]
    f0b8:	mov	r2, r4
    f0bc:	movt	r1, #32760	; 0x7ff8
    f0c0:	b	f0fc <xport_process_row+0x1e0>
    f0c4:	mov	r3, r1
    f0c8:	b	f0f8 <xport_process_row+0x1dc>
    f0cc:	ldrb	r0, [r4]
    f0d0:	cmp	r0, #46	; 0x2e
    f0d4:	bne	ef74 <xport_process_row+0x58>
    f0d8:	and	r0, r9, #65024	; 0xfe00
    f0dc:	orr	r0, r5, r0
    f0e0:	orr	r4, r0, #256	; 0x100
    f0e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f0e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f0ec:	ldr	lr, [sp, #44]	; 0x2c
    f0f0:	movw	r1, #0
    f0f4:	movt	r1, #32760	; 0x7ff8
    f0f8:	mov	r5, r4
    f0fc:	ldr	r6, [r7]
    f100:	ldr	r7, [lr, #16]
    f104:	cmp	r7, #0
    f108:	beq	f15c <xport_process_row+0x240>
    f10c:	ldr	r0, [lr, #376]	; 0x178
    f110:	ldr	r0, [r0, r8, lsl #2]
    f114:	ldr	r0, [r0, #2144]	; 0x860
    f118:	cmp	r0, #0
    f11c:	bne	f15c <xport_process_row+0x240>
    f120:	ldr	r0, [sp, #16]
    f124:	ldr	r0, [r0]
    f128:	cmp	r0, #0
    f12c:	bne	f15c <xport_process_row+0x240>
    f130:	ldr	ip, [lr, #36]	; 0x24
    f134:	ldr	r1, [sp, #36]	; 0x24
    f138:	ldr	r0, [lr, #80]	; 0x50
    f13c:	stm	sp, {r1, r5, ip}
    f140:	ldr	r1, [sp, #40]	; 0x28
    f144:	blx	r7
    f148:	ldr	lr, [sp, #44]	; 0x2c
    f14c:	movw	r1, #0
    f150:	cmp	r0, #0
    f154:	movt	r1, #32760	; 0x7ff8
    f158:	bne	f1e4 <xport_process_row+0x2c8>
    f15c:	ldr	r0, [lr, #64]	; 0x40
    f160:	add	r8, r8, #1
    f164:	add	sl, r6, sl
    f168:	mov	r6, #1
    f16c:	cmp	r8, r0
    f170:	blt	efa8 <xport_process_row+0x8c>
    f174:	ldr	r4, [sp, #32]
    f178:	ldr	r1, [sp, #16]
    f17c:	b	f188 <xport_process_row+0x26c>
    f180:	add	r1, lr, #72	; 0x48
    f184:	mov	r4, #0
    f188:	ldr	r0, [r1]
    f18c:	cmp	r0, #0
    f190:	beq	f1a0 <xport_process_row+0x284>
    f194:	sub	r0, r0, #1
    f198:	str	r0, [r1]
    f19c:	b	f1ac <xport_process_row+0x290>
    f1a0:	ldr	r0, [lr, #80]	; 0x50
    f1a4:	add	r0, r0, #1
    f1a8:	str	r0, [lr, #80]	; 0x50
    f1ac:	mov	r6, #0
    f1b0:	mov	r0, r4
    f1b4:	bl	48bc <free@plt>
    f1b8:	mov	r0, r6
    f1bc:	sub	sp, fp, #28
    f1c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f1c4:	mov	r6, #3
    f1c8:	mov	r4, #0
    f1cc:	b	f1b0 <xport_process_row+0x294>
    f1d0:	mov	r6, r0
    f1d4:	b	f1b0 <xport_process_row+0x294>
    f1d8:	ldr	r4, [sp, #32]
    f1dc:	mov	r6, #16
    f1e0:	b	f1b0 <xport_process_row+0x294>
    f1e4:	ldr	r4, [sp, #32]
    f1e8:	mov	r6, #4
    f1ec:	b	f1b0 <xport_process_row+0x294>

0000f1f0 <readstat_begin_writing_xport>:
    f1f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f1f4:	add	fp, sp, #28
    f1f8:	ldr	r3, [r0, #8]
    f1fc:	mov	r6, r2
    f200:	cmp	r3, #0
    f204:	moveq	r3, #8
    f208:	streq	r3, [r0, #8]
    f20c:	ldr	r3, [pc, #180]	; f2c8 <readstat_begin_writing_xport+0xd8>
    f210:	add	r3, pc, r3
    f214:	str	r3, [r0, #292]	; 0x124
    f218:	ldr	r8, [pc, #172]	; f2cc <readstat_begin_writing_xport+0xdc>
    f21c:	ldr	r9, [pc, #172]	; f2d0 <readstat_begin_writing_xport+0xe0>
    f220:	ldr	sl, [pc, #172]	; f2d4 <readstat_begin_writing_xport+0xe4>
    f224:	ldr	r7, [pc, #172]	; f2d8 <readstat_begin_writing_xport+0xe8>
    f228:	ldr	r3, [pc, #172]	; f2dc <readstat_begin_writing_xport+0xec>
    f22c:	ldr	r4, [pc, #172]	; f2e0 <readstat_begin_writing_xport+0xf0>
    f230:	ldr	r5, [pc, #172]	; f2e4 <readstat_begin_writing_xport+0xf4>
    f234:	ldr	r2, [pc, #172]	; f2e8 <readstat_begin_writing_xport+0xf8>
    f238:	ldr	ip, [pc, #172]	; f2ec <readstat_begin_writing_xport+0xfc>
    f23c:	ldr	lr, [pc, #172]	; f2f0 <readstat_begin_writing_xport+0x100>
    f240:	add	r7, pc, r7
    f244:	add	r3, pc, r3
    f248:	add	r4, pc, r4
    f24c:	add	r2, pc, r2
    f250:	add	ip, pc, ip
    f254:	add	lr, pc, lr
    f258:	add	r5, pc, r5
    f25c:	add	r8, pc, r8
    f260:	add	r9, pc, r9
    f264:	add	sl, pc, sl
    f268:	str	r7, [r0, #264]	; 0x108
    f26c:	str	r3, [r0, #268]	; 0x10c
    f270:	str	r4, [r0, #272]	; 0x110
    f274:	str	r2, [r0, #276]	; 0x114
    f278:	str	lr, [r0, #280]	; 0x118
    f27c:	str	ip, [r0, #284]	; 0x11c
    f280:	add	r3, r0, #244	; 0xf4
    f284:	ldr	r2, [pc, #104]	; f2f4 <readstat_begin_writing_xport+0x104>
    f288:	ldr	r2, [pc, r2]
    f28c:	str	r5, [r0, #228]	; 0xe4
    f290:	str	r2, [r0, #232]	; 0xe8
    f294:	ldr	r2, [pc, #92]	; f2f8 <readstat_begin_writing_xport+0x108>
    f298:	add	r2, pc, r2
    f29c:	str	r2, [r0, #236]	; 0xec
    f2a0:	str	r8, [r0, #240]	; 0xf0
    f2a4:	ldr	r2, [pc, #80]	; f2fc <readstat_begin_writing_xport+0x10c>
    f2a8:	add	r2, pc, r2
    f2ac:	stm	r3, {r2, r9, sl}
    f2b0:	ldr	r2, [pc, #72]	; f300 <readstat_begin_writing_xport+0x110>
    f2b4:	add	r2, pc, r2
    f2b8:	str	r2, [r0, #256]	; 0x100
    f2bc:	mov	r2, r6
    f2c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f2c4:	b	494c <readstat_begin_writing_file@plt>
    f2c8:	.word	0x000000ec
    f2cc:	.word	0x0000014c
    f2d0:	.word	0x00000208
    f2d4:	.word	0x00000260
    f2d8:	.word	0x00000344
    f2dc:	.word	0x0000035c
    f2e0:	.word	0x00000368
    f2e4:	.word	0x0000037c
    f2e8:	.word	0x000003b0
    f2ec:	.word	0x00000eb0
    f2f0:	.word	0x00000ec4
    f2f4:	.word	0x0003503c
    f2f8:	.word	0x000000b0
    f2fc:	.word	0x00000160
    f300:	.word	0x00000268

0000f304 <xport_metadata_ok>:
    f304:	ldr	r2, [r0, #8]
    f308:	cmp	r2, #8
    f30c:	movne	r1, #24
    f310:	cmpne	r2, #5
    f314:	bne	f340 <xport_metadata_ok+0x3c>
    f318:	ldrb	r3, [r0, #188]!	; 0xbc
    f31c:	mov	r1, #0
    f320:	cmp	r3, #0
    f324:	beq	f340 <xport_metadata_ok+0x3c>
    f328:	cmp	r2, #5
    f32c:	beq	f348 <xport_metadata_ok+0x44>
    f330:	cmp	r2, #8
    f334:	bne	f340 <xport_metadata_ok+0x3c>
    f338:	mov	r1, #32
    f33c:	b	476c <sas_validate_name@plt>
    f340:	mov	r0, r1
    f344:	bx	lr
    f348:	mov	r1, #8
    f34c:	b	476c <sas_validate_name@plt>

0000f350 <xport_write_int8>:
    f350:	push	{r4, r5, fp, lr}
    f354:	add	fp, sp, #8
    f358:	sub	sp, sp, #16
    f35c:	vmov	s0, r2
    f360:	mov	r5, r1
    f364:	mov	r4, r0
    f368:	add	r0, sp, #8
    f36c:	mov	r2, sp
    f370:	mov	r1, #0
    f374:	mov	r3, #1
    f378:	vcvt.f64.s32	d16, s0
    f37c:	vstr	d16, [sp, #8]
    f380:	bl	49f4 <cnxptiee@plt>
    f384:	mov	r1, r0
    f388:	mov	r0, #16
    f38c:	cmp	r1, #0
    f390:	bne	f3a8 <xport_write_int8+0x58>
    f394:	ldr	r2, [r5, #1596]	; 0x63c
    f398:	mov	r1, sp
    f39c:	mov	r0, r4
    f3a0:	bl	4910 <memcpy@plt>
    f3a4:	mov	r0, #0
    f3a8:	sub	sp, fp, #8
    f3ac:	pop	{r4, r5, fp, pc}

0000f3b0 <xport_write_int16>:
    f3b0:	push	{r4, r5, fp, lr}
    f3b4:	add	fp, sp, #8
    f3b8:	sub	sp, sp, #16
    f3bc:	vmov	s0, r2
    f3c0:	mov	r5, r1
    f3c4:	mov	r4, r0
    f3c8:	add	r0, sp, #8
    f3cc:	mov	r2, sp
    f3d0:	mov	r1, #0
    f3d4:	mov	r3, #1
    f3d8:	vcvt.f64.s32	d16, s0
    f3dc:	vstr	d16, [sp, #8]
    f3e0:	bl	49f4 <cnxptiee@plt>
    f3e4:	mov	r1, r0
    f3e8:	mov	r0, #16
    f3ec:	cmp	r1, #0
    f3f0:	bne	f408 <xport_write_int16+0x58>
    f3f4:	ldr	r2, [r5, #1596]	; 0x63c
    f3f8:	mov	r1, sp
    f3fc:	mov	r0, r4
    f400:	bl	4910 <memcpy@plt>
    f404:	mov	r0, #0
    f408:	sub	sp, fp, #8
    f40c:	pop	{r4, r5, fp, pc}

0000f410 <xport_write_int32>:
    f410:	push	{r4, r5, fp, lr}
    f414:	add	fp, sp, #8
    f418:	sub	sp, sp, #16
    f41c:	vmov	s0, r2
    f420:	mov	r5, r1
    f424:	mov	r4, r0
    f428:	add	r0, sp, #8
    f42c:	mov	r2, sp
    f430:	mov	r1, #0
    f434:	mov	r3, #1
    f438:	vcvt.f64.s32	d16, s0
    f43c:	vstr	d16, [sp, #8]
    f440:	bl	49f4 <cnxptiee@plt>
    f444:	mov	r1, r0
    f448:	mov	r0, #16
    f44c:	cmp	r1, #0
    f450:	bne	f468 <xport_write_int32+0x58>
    f454:	ldr	r2, [r5, #1596]	; 0x63c
    f458:	mov	r1, sp
    f45c:	mov	r0, r4
    f460:	bl	4910 <memcpy@plt>
    f464:	mov	r0, #0
    f468:	sub	sp, fp, #8
    f46c:	pop	{r4, r5, fp, pc}

0000f470 <xport_write_float>:
    f470:	push	{r4, r5, fp, lr}
    f474:	add	fp, sp, #8
    f478:	sub	sp, sp, #16
    f47c:	mov	r5, r1
    f480:	mov	r4, r0
    f484:	vcvt.f64.f32	d16, s0
    f488:	add	r0, sp, #8
    f48c:	mov	r2, sp
    f490:	mov	r1, #0
    f494:	mov	r3, #1
    f498:	vstr	d16, [sp, #8]
    f49c:	bl	49f4 <cnxptiee@plt>
    f4a0:	mov	r1, r0
    f4a4:	mov	r0, #16
    f4a8:	cmp	r1, #0
    f4ac:	bne	f4c4 <xport_write_float+0x54>
    f4b0:	ldr	r2, [r5, #1596]	; 0x63c
    f4b4:	mov	r1, sp
    f4b8:	mov	r0, r4
    f4bc:	bl	4910 <memcpy@plt>
    f4c0:	mov	r0, #0
    f4c4:	sub	sp, fp, #8
    f4c8:	pop	{r4, r5, fp, pc}

0000f4cc <xport_write_double>:
    f4cc:	push	{r4, r5, fp, lr}
    f4d0:	add	fp, sp, #8
    f4d4:	sub	sp, sp, #16
    f4d8:	mov	r5, r1
    f4dc:	mov	r4, r0
    f4e0:	add	r0, sp, #8
    f4e4:	mov	r2, sp
    f4e8:	mov	r1, #0
    f4ec:	mov	r3, #1
    f4f0:	vstr	d0, [sp, #8]
    f4f4:	bl	49f4 <cnxptiee@plt>
    f4f8:	mov	r1, r0
    f4fc:	mov	r0, #16
    f500:	cmp	r1, #0
    f504:	bne	f51c <xport_write_double+0x50>
    f508:	ldr	r2, [r5, #1596]	; 0x63c
    f50c:	mov	r1, sp
    f510:	mov	r0, r4
    f514:	bl	4910 <memcpy@plt>
    f518:	mov	r0, #0
    f51c:	sub	sp, fp, #8
    f520:	pop	{r4, r5, fp, pc}

0000f524 <xport_write_string>:
    f524:	push	{r4, r5, r6, sl, fp, lr}
    f528:	add	fp, sp, #16
    f52c:	mov	r4, r2
    f530:	ldr	r2, [r1, #1596]	; 0x63c
    f534:	mov	r6, r1
    f538:	mov	r1, #32
    f53c:	mov	r5, r0
    f540:	bl	4c70 <memset@plt>
    f544:	cmp	r4, #0
    f548:	mov	r0, #0
    f54c:	ldrbne	r1, [r4]
    f550:	cmpne	r1, #0
    f554:	bne	f55c <xport_write_string+0x38>
    f558:	pop	{r4, r5, r6, sl, fp, pc}
    f55c:	mov	r0, r4
    f560:	bl	4bd4 <strlen@plt>
    f564:	ldr	r1, [r6, #1596]	; 0x63c
    f568:	mov	r2, r0
    f56c:	mov	r0, #22
    f570:	cmp	r2, r1
    f574:	pophi	{r4, r5, r6, sl, fp, pc}
    f578:	mov	r0, r5
    f57c:	mov	r1, r4
    f580:	bl	4910 <memcpy@plt>
    f584:	mov	r0, #0
    f588:	pop	{r4, r5, r6, sl, fp, pc}

0000f58c <xport_write_missing_string>:
    f58c:	push	{fp, lr}
    f590:	mov	fp, sp
    f594:	ldr	r2, [r1, #1596]	; 0x63c
    f598:	mov	r1, #32
    f59c:	bl	4c70 <memset@plt>
    f5a0:	mov	r0, #0
    f5a4:	pop	{fp, pc}

0000f5a8 <xport_write_missing_numeric>:
    f5a8:	mov	r1, #46	; 0x2e
    f5ac:	strb	r1, [r0]
    f5b0:	mov	r0, #0
    f5b4:	bx	lr

0000f5b8 <xport_write_missing_tagged>:
    f5b8:	push	{r4, r5, fp, lr}
    f5bc:	add	fp, sp, #8
    f5c0:	mov	r5, r0
    f5c4:	mov	r0, r2
    f5c8:	mov	r4, r2
    f5cc:	bl	4b2c <sas_validate_tag@plt>
    f5d0:	cmp	r0, #0
    f5d4:	strbeq	r4, [r5]
    f5d8:	pop	{r4, r5, fp, pc}

0000f5dc <xport_variable_width>:
    f5dc:	cmp	r0, #0
    f5e0:	beq	f5fc <xport_variable_width+0x20>
    f5e4:	sub	r2, r1, #1
    f5e8:	mov	r0, #8
    f5ec:	cmp	r2, #6
    f5f0:	bxhi	lr
    f5f4:	cmp	r1, #3
    f5f8:	movls	r1, #3
    f5fc:	mov	r0, r1
    f600:	bx	lr

0000f604 <xport_begin_data>:
    f604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f608:	add	fp, sp, #28
    f60c:	sub	sp, sp, #4
    f610:	vpush	{d8-d9}
    f614:	sub	sp, sp, #288	; 0x120
    f618:	mov	r8, r0
    f61c:	ldr	r0, [r0, #20]
    f620:	str	r0, [sp, #144]	; 0x90
    f624:	add	r0, sp, #144	; 0x90
    f628:	bl	4b44 <localtime@plt>
    f62c:	cmp	r0, #0
    f630:	beq	f878 <xport_begin_data+0x274>
    f634:	ldm	r0, {r1, r2, r3, r7}
    f638:	ldr	r6, [r0, #16]
    f63c:	ldr	r0, [r0, #20]
    f640:	ldr	r5, [pc, #2632]	; 10090 <xport_begin_data+0xa8c>
    f644:	add	sl, sp, #144	; 0x90
    f648:	ldr	r5, [pc, r5]
    f64c:	add	r6, r5, r6, lsl #2
    f650:	str	r6, [sp]
    f654:	movw	r6, #34079	; 0x851f
    f658:	movt	r6, #20971	; 0x51eb
    f65c:	umull	r5, r4, r1, r6
    f660:	lsr	r5, r4, #5
    f664:	mov	r4, #100	; 0x64
    f668:	mls	r1, r5, r4, r1
    f66c:	str	r1, [sp, #16]
    f670:	umull	r1, r5, r2, r6
    f674:	lsr	r1, r5, #5
    f678:	add	r5, sp, #75	; 0x4b
    f67c:	mls	r1, r1, r4, r2
    f680:	str	r1, [sp, #12]
    f684:	umull	r1, r2, r3, r6
    f688:	lsr	r1, r2, #5
    f68c:	mls	r1, r1, r4, r3
    f690:	str	r1, [sp, #8]
    f694:	umull	r1, r2, r0, r6
    f698:	lsr	r1, r2, #5
    f69c:	mls	r0, r1, r4, r0
    f6a0:	str	r0, [sp, #4]
    f6a4:	umull	r0, r1, r7, r6
    f6a8:	ldr	r2, [pc, #2532]	; 10094 <xport_begin_data+0xa90>
    f6ac:	lsr	r0, r1, #5
    f6b0:	mov	r1, #17
    f6b4:	mls	r3, r0, r4, r7
    f6b8:	mov	r0, r5
    f6bc:	add	r2, pc, r2
    f6c0:	bl	4c4c <snprintf@plt>
    f6c4:	ldr	r0, [pc, #2508]	; 10098 <xport_begin_data+0xa94>
    f6c8:	mov	r1, sl
    f6cc:	add	r0, pc, r0
    f6d0:	ldm	r0!, {r2, r3, r6, r7}
    f6d4:	stmia	r1!, {r2, r3, r6, r7}
    f6d8:	ldm	r0, {r2, r3, r4, r6, r7}
    f6dc:	stm	r1, {r2, r3, r4, r6, r7}
    f6e0:	ldr	r0, [r8, #8]
    f6e4:	cmp	r0, #8
    f6e8:	bne	f700 <xport_begin_data+0xfc>
    f6ec:	mov	r0, #56	; 0x38
    f6f0:	strh	r0, [sp, #148]	; 0x94
    f6f4:	movw	r0, #18764	; 0x494c
    f6f8:	movt	r0, #22082	; 0x5642
    f6fc:	str	r0, [sp, #144]	; 0x90
    f700:	add	r1, sp, #144	; 0x90
    f704:	mov	r0, r8
    f708:	bl	101bc <xport_write_header_record>
    f70c:	cmp	r0, #0
    f710:	bne	f87c <xport_begin_data+0x278>
    f714:	ldr	r1, [pc, #2432]	; 1009c <xport_begin_data+0xa98>
    f718:	ldr	r9, [pc, #2432]	; 100a0 <xport_begin_data+0xa9c>
    f71c:	ldr	r6, [pc, #2432]	; 100a4 <xport_begin_data+0xaa0>
    f720:	ldr	r0, [pc, #2432]	; 100a8 <xport_begin_data+0xaa4>
    f724:	ldr	r3, [pc, #2432]	; 100ac <xport_begin_data+0xaa8>
    f728:	add	r7, sp, #144	; 0x90
    f72c:	add	r3, pc, r3
    f730:	add	r1, pc, r1
    f734:	add	r9, pc, r9
    f738:	add	r6, pc, r6
    f73c:	add	r0, pc, r0
    f740:	str	r3, [sp]
    f744:	stmib	sp, {r0, r6, r9}
    f748:	str	r1, [sp, #16]
    f74c:	str	r5, [sp, #20]
    f750:	mov	r0, r7
    f754:	mov	r1, #81	; 0x51
    f758:	ldr	r2, [pc, #2384]	; 100b0 <xport_begin_data+0xaac>
    f75c:	add	r2, pc, r2
    f760:	bl	4c4c <snprintf@plt>
    f764:	mov	r0, r8
    f768:	mov	r1, r7
    f76c:	bl	1014c <xport_write_record>
    f770:	cmp	r0, #0
    f774:	bne	f87c <xport_begin_data+0x278>
    f778:	add	r1, sp, #75	; 0x4b
    f77c:	mov	r0, r8
    f780:	bl	1014c <xport_write_record>
    f784:	cmp	r0, #0
    f788:	bne	f87c <xport_begin_data+0x278>
    f78c:	ldr	r0, [pc, #2336]	; 100b4 <xport_begin_data+0xab0>
    f790:	add	r0, pc, r0
    f794:	ldm	r0!, {r1, r2, r3, r4}
    f798:	stmia	r7!, {r1, r2, r3, r4}
    f79c:	ldm	r0, {r1, r2, r3, r4, r5}
    f7a0:	stm	r7, {r1, r2, r3, r4, r5}
    f7a4:	ldr	r0, [r8, #8]
    f7a8:	cmp	r0, #8
    f7ac:	bne	f7c4 <xport_begin_data+0x1c0>
    f7b0:	ldr	r1, [pc, #2304]	; 100b8 <xport_begin_data+0xab4>
    f7b4:	add	r0, sp, #144	; 0x90
    f7b8:	mov	r2, #7
    f7bc:	add	r1, pc, r1
    f7c0:	bl	4910 <memcpy@plt>
    f7c4:	add	r7, sp, #144	; 0x90
    f7c8:	mov	r0, r8
    f7cc:	mov	r1, r7
    f7d0:	bl	101bc <xport_write_header_record>
    f7d4:	cmp	r0, #0
    f7d8:	bne	f87c <xport_begin_data+0x278>
    f7dc:	ldr	r0, [pc, #2264]	; 100bc <xport_begin_data+0xab8>
    f7e0:	add	r0, pc, r0
    f7e4:	ldm	r0!, {r1, r2, r3, r5}
    f7e8:	stmia	r7!, {r1, r2, r3, r5}
    f7ec:	ldm	r0, {r1, r2, r3, r4, r5}
    f7f0:	stm	r7, {r1, r2, r3, r4, r5}
    f7f4:	ldr	r0, [r8, #8]
    f7f8:	cmp	r0, #8
    f7fc:	bne	f818 <xport_begin_data+0x214>
    f800:	movw	r0, #22100	; 0x5654
    f804:	movt	r0, #56	; 0x38
    f808:	str	r0, [sp, #148]	; 0x94
    f80c:	movw	r0, #21316	; 0x5344
    f810:	movt	r0, #20547	; 0x5043
    f814:	str	r0, [sp, #144]	; 0x90
    f818:	add	r1, sp, #144	; 0x90
    f81c:	mov	r0, r8
    f820:	bl	101bc <xport_write_header_record>
    f824:	cmp	r0, #0
    f828:	add	r7, sp, #75	; 0x4b
    f82c:	bne	f87c <xport_begin_data+0x278>
    f830:	ldr	r0, [r8, #8]
    f834:	cmp	r0, #8
    f838:	bne	f88c <xport_begin_data+0x288>
    f83c:	mov	r0, r8
    f840:	add	r5, sp, #144	; 0x90
    f844:	ldrb	r1, [r0, #188]!	; 0xbc
    f848:	ldr	r2, [pc, #2160]	; 100c0 <xport_begin_data+0xabc>
    f84c:	ldr	r3, [pc, #2160]	; 100c4 <xport_begin_data+0xac0>
    f850:	add	r3, pc, r3
    f854:	cmp	r1, #0
    f858:	add	r2, pc, r2
    f85c:	movne	r3, r0
    f860:	str	r3, [sp]
    f864:	stmib	sp, {r2, r6, r9}
    f868:	str	r7, [sp, #16]
    f86c:	ldr	r2, [pc, #2132]	; 100c8 <xport_begin_data+0xac4>
    f870:	add	r2, pc, r2
    f874:	b	f8d0 <xport_begin_data+0x2cc>
    f878:	mov	r0, #39	; 0x27
    f87c:	sub	sp, fp, #48	; 0x30
    f880:	vpop	{d8-d9}
    f884:	add	sp, sp, #4
    f888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f88c:	mov	r0, r8
    f890:	add	r5, sp, #144	; 0x90
    f894:	ldrb	r1, [r0, #188]!	; 0xbc
    f898:	ldr	r2, [pc, #2092]	; 100cc <xport_begin_data+0xac8>
    f89c:	ldr	r3, [pc, #2092]	; 100d0 <xport_begin_data+0xacc>
    f8a0:	add	r3, pc, r3
    f8a4:	cmp	r1, #0
    f8a8:	add	r2, pc, r2
    f8ac:	movne	r3, r0
    f8b0:	str	r3, [sp]
    f8b4:	stmib	sp, {r2, r6, r9}
    f8b8:	ldr	r0, [pc, #2068]	; 100d4 <xport_begin_data+0xad0>
    f8bc:	str	r7, [sp, #20]
    f8c0:	add	r0, pc, r0
    f8c4:	str	r0, [sp, #16]
    f8c8:	ldr	r2, [pc, #2056]	; 100d8 <xport_begin_data+0xad4>
    f8cc:	add	r2, pc, r2
    f8d0:	ldr	r3, [pc, #2052]	; 100dc <xport_begin_data+0xad8>
    f8d4:	mov	r0, r5
    f8d8:	mov	r1, #81	; 0x51
    f8dc:	add	r3, pc, r3
    f8e0:	bl	4c4c <snprintf@plt>
    f8e4:	mov	r0, r8
    f8e8:	mov	r1, r5
    f8ec:	bl	1014c <xport_write_record>
    f8f0:	cmp	r0, #0
    f8f4:	bne	f87c <xport_begin_data+0x278>
    f8f8:	ldr	r1, [pc, #2016]	; 100e0 <xport_begin_data+0xadc>
    f8fc:	add	r0, r8, #88	; 0x58
    f900:	add	r5, sp, #144	; 0x90
    f904:	add	r3, sp, #75	; 0x4b
    f908:	add	r1, pc, r1
    f90c:	str	r1, [sp]
    f910:	stmib	sp, {r0, r1}
    f914:	mov	r0, r5
    f918:	mov	r1, #81	; 0x51
    f91c:	ldr	r2, [pc, #1984]	; 100e4 <xport_begin_data+0xae0>
    f920:	add	r2, pc, r2
    f924:	bl	4c4c <snprintf@plt>
    f928:	mov	r0, r8
    f92c:	mov	r1, r5
    f930:	bl	1014c <xport_write_record>
    f934:	cmp	r0, #0
    f938:	bne	f87c <xport_begin_data+0x278>
    f93c:	ldr	r1, [pc, #1956]	; 100e8 <xport_begin_data+0xae4>
    f940:	mov	r0, #0
    f944:	strb	r0, [sp, #152]	; 0x98
    f948:	str	r0, [sp, #156]	; 0x9c
    f94c:	add	r1, pc, r1
    f950:	vldr	d16, [r1]
    f954:	add	r1, r5, #20
    f958:	vstr	d16, [sp, #144]	; 0x90
    f95c:	vmov.i32	q8, #0	; 0x00000000
    f960:	ldr	r0, [r8, #28]
    f964:	vst1.32	{d16-d17}, [r1]
    f968:	str	r0, [sp, #160]	; 0xa0
    f96c:	ldr	r0, [r8, #8]
    f970:	cmp	r0, #8
    f974:	bne	f990 <xport_begin_data+0x38c>
    f978:	movw	r0, #22100	; 0x5654
    f97c:	movt	r0, #56	; 0x38
    f980:	str	r0, [sp, #148]	; 0x94
    f984:	movw	r0, #16718	; 0x414e
    f988:	movt	r0, #21325	; 0x534d
    f98c:	str	r0, [sp, #144]	; 0x90
    f990:	add	r6, sp, #144	; 0x90
    f994:	mov	r0, r8
    f998:	mov	r1, r6
    f99c:	bl	101bc <xport_write_header_record>
    f9a0:	cmp	r0, #0
    f9a4:	bne	f87c <xport_begin_data+0x278>
    f9a8:	add	r0, r6, #88	; 0x58
    f9ac:	add	r3, r6, #80	; 0x50
    f9b0:	add	r4, r6, #120	; 0x78
    f9b4:	add	r2, r6, #56	; 0x38
    f9b8:	add	r7, r6, #16
    f9bc:	mov	r5, #0
    f9c0:	mov	r1, #0
    f9c4:	str	r0, [sp, #24]
    f9c8:	add	r0, r6, #64	; 0x40
    f9cc:	str	r3, [sp, #36]	; 0x24
    f9d0:	str	r4, [sp, #28]
    f9d4:	str	r2, [sp, #60]	; 0x3c
    f9d8:	str	r0, [sp, #40]	; 0x28
    f9dc:	add	r0, r6, #72	; 0x48
    f9e0:	str	r0, [sp, #48]	; 0x30
    f9e4:	mov	r0, #0
    f9e8:	str	r0, [sp, #44]	; 0x2c
    f9ec:	mov	r0, #0
    f9f0:	str	r0, [sp, #64]	; 0x40
    f9f4:	ldr	r0, [r8, #28]
    f9f8:	cmp	r1, r0
    f9fc:	bge	fd58 <xport_begin_data+0x754>
    fa00:	mov	r0, r8
    fa04:	str	r1, [sp, #68]	; 0x44
    fa08:	bl	4d48 <readstat_get_variable@plt>
    fa0c:	mov	r9, r0
    fa10:	ldr	r0, [r0, #1600]	; 0x640
    fa14:	str	r5, [sp, #52]	; 0x34
    fa18:	ldr	r1, [r9]
    fa1c:	cmp	r1, #0
    fa20:	beq	fa44 <xport_begin_data+0x440>
    fa24:	ldr	r4, [sp, #40]	; 0x28
    fa28:	sub	r1, r0, #1
    fa2c:	mov	r5, #8
    fa30:	cmp	r1, #6
    fa34:	bhi	fa4c <xport_begin_data+0x448>
    fa38:	cmp	r0, #3
    fa3c:	movls	r0, #3
    fa40:	b	fa48 <xport_begin_data+0x444>
    fa44:	ldr	r4, [sp, #40]	; 0x28
    fa48:	mov	r5, r0
    fa4c:	mov	r0, r6
    fa50:	mov	r1, #0
    fa54:	mov	r2, #140	; 0x8c
    fa58:	bl	4c70 <memset@plt>
    fa5c:	ldr	r0, [sp, #68]	; 0x44
    fa60:	movw	r1, #8224	; 0x2020
    fa64:	str	r5, [sp, #56]	; 0x38
    fa68:	movt	r1, #8224	; 0x2020
    fa6c:	add	r0, r0, #1
    fa70:	strh	r0, [sp, #150]	; 0x96
    fa74:	str	r0, [sp, #68]	; 0x44
    fa78:	ldr	r0, [sp, #60]	; 0x3c
    fa7c:	strh	r5, [sp, #148]	; 0x94
    fa80:	str	r1, [r0, #4]
    fa84:	str	r1, [r0]
    fa88:	ldr	r0, [sp, #48]	; 0x30
    fa8c:	str	r1, [r0, #4]
    fa90:	str	r1, [r0]
    fa94:	ldr	r0, [sp, #64]	; 0x40
    fa98:	str	r0, [sp, #228]	; 0xe4
    fa9c:	mov	r0, r9
    faa0:	bl	4f04 <readstat_variable_get_type_class@plt>
    faa4:	cmp	r0, #0
    faa8:	mov	r0, #1
    faac:	add	r5, r9, #8
    fab0:	mov	r1, #8
    fab4:	movweq	r0, #2
    fab8:	strh	r0, [sp, #144]	; 0x90
    fabc:	ldrb	r0, [r9, r1]
    fac0:	cmp	r0, #0
    fac4:	beq	fae0 <xport_begin_data+0x4dc>
    fac8:	strb	r0, [r6, r1]
    facc:	add	r1, r1, #1
    fad0:	add	r0, r6, r1
    fad4:	cmp	r0, r7
    fad8:	bcc	fabc <xport_begin_data+0x4b8>
    fadc:	b	fae4 <xport_begin_data+0x4e0>
    fae0:	add	r0, r6, r1
    fae4:	cmp	r0, r7
    fae8:	bcs	fb00 <xport_begin_data+0x4fc>
    faec:	rsb	r1, r0, #8
    faf0:	add	r1, r6, r1
    faf4:	add	r2, r1, #8
    faf8:	mov	r1, #32
    fafc:	bl	4c70 <memset@plt>
    fb00:	ldr	r2, [sp, #60]	; 0x3c
    fb04:	add	r6, r9, #564	; 0x234
    fb08:	mov	r1, #0
    fb0c:	ldrb	r0, [r6, r1]
    fb10:	cmp	r0, #0
    fb14:	beq	fb30 <xport_begin_data+0x52c>
    fb18:	strb	r0, [r7, r1]
    fb1c:	add	r1, r1, #1
    fb20:	add	r0, r7, r1
    fb24:	cmp	r0, r2
    fb28:	bcc	fb0c <xport_begin_data+0x508>
    fb2c:	b	fb34 <xport_begin_data+0x530>
    fb30:	add	r0, r7, r1
    fb34:	cmp	r0, r2
    fb38:	bcs	fb54 <xport_begin_data+0x550>
    fb3c:	rsb	r1, r0, #40	; 0x28
    fb40:	add	r2, sp, #144	; 0x90
    fb44:	add	r1, r2, r1
    fb48:	add	r2, r1, #16
    fb4c:	mov	r1, #32
    fb50:	bl	4c70 <memset@plt>
    fb54:	mov	r0, r9
    fb58:	ldrb	r1, [r0, #308]!	; 0x134
    fb5c:	cmp	r1, #0
    fb60:	beq	fc60 <xport_begin_data+0x65c>
    fb64:	mov	r1, #0
    fb68:	add	r2, sp, #104	; 0x68
    fb6c:	add	r3, sp, #140	; 0x8c
    fb70:	str	r1, [sp, #92]	; 0x5c
    fb74:	str	r1, [sp, #140]	; 0x8c
    fb78:	add	r1, sp, #92	; 0x5c
    fb7c:	str	r1, [sp]
    fb80:	ldr	r1, [pc, #1380]	; 100ec <xport_begin_data+0xae8>
    fb84:	add	r1, pc, r1
    fb88:	bl	4c58 <__isoc99_sscanf@plt>
    fb8c:	ldr	r0, [sp, #60]	; 0x3c
    fb90:	ldr	r3, [sp, #36]	; 0x24
    fb94:	add	r1, sp, #104	; 0x68
    fb98:	ldrb	r2, [r1]
    fb9c:	cmp	r2, #0
    fba0:	beq	fbb4 <xport_begin_data+0x5b0>
    fba4:	strb	r2, [r0], #1
    fba8:	add	r1, r1, #1
    fbac:	cmp	r0, r4
    fbb0:	bcc	fb98 <xport_begin_data+0x594>
    fbb4:	cmp	r0, r4
    fbb8:	bcs	fbd8 <xport_begin_data+0x5d4>
    fbbc:	rsb	r1, r0, #8
    fbc0:	add	r2, sp, #144	; 0x90
    fbc4:	add	r1, r2, r1
    fbc8:	add	r2, r1, #56	; 0x38
    fbcc:	mov	r1, #32
    fbd0:	bl	4c70 <memset@plt>
    fbd4:	ldr	r3, [sp, #36]	; 0x24
    fbd8:	ldr	r0, [sp, #140]	; 0x8c
    fbdc:	add	r1, sp, #104	; 0x68
    fbe0:	strh	r0, [sp, #208]	; 0xd0
    fbe4:	ldr	r0, [sp, #92]	; 0x5c
    fbe8:	strh	r0, [sp, #210]	; 0xd2
    fbec:	ldr	r0, [sp, #48]	; 0x30
    fbf0:	ldrb	r2, [r1]
    fbf4:	cmp	r2, #0
    fbf8:	beq	fc0c <xport_begin_data+0x608>
    fbfc:	strb	r2, [r0], #1
    fc00:	add	r1, r1, #1
    fc04:	cmp	r0, r3
    fc08:	bcc	fbf0 <xport_begin_data+0x5ec>
    fc0c:	cmp	r0, r3
    fc10:	bcs	fc2c <xport_begin_data+0x628>
    fc14:	rsb	r1, r0, #8
    fc18:	add	r2, sp, #144	; 0x90
    fc1c:	add	r1, r2, r1
    fc20:	add	r2, r1, #72	; 0x48
    fc24:	mov	r1, #32
    fc28:	bl	4c70 <memset@plt>
    fc2c:	ldr	r0, [sp, #140]	; 0x8c
    fc30:	strh	r0, [sp, #224]	; 0xe0
    fc34:	ldr	r0, [sp, #92]	; 0x5c
    fc38:	strh	r0, [sp, #226]	; 0xe2
    fc3c:	add	r0, sp, #104	; 0x68
    fc40:	bl	4bd4 <strlen@plt>
    fc44:	cmp	r0, #8
    fc48:	ldr	r0, [sp, #44]	; 0x2c
    fc4c:	mov	r1, #0
    fc50:	movwhi	r1, #1
    fc54:	movwhi	r0, #1
    fc58:	str	r0, [sp, #44]	; 0x2c
    fc5c:	b	fc70 <xport_begin_data+0x66c>
    fc60:	ldr	r0, [r9, #2136]	; 0x858
    fc64:	mov	r1, #0
    fc68:	cmp	r0, #0
    fc6c:	strhne	r0, [sp, #208]	; 0xd0
    fc70:	ldr	r0, [r9, #2132]	; 0x854
    fc74:	sub	r0, r0, #3
    fc78:	clz	r0, r0
    fc7c:	lsr	r0, r0, #5
    fc80:	strh	r0, [sp, #212]	; 0xd4
    fc84:	ldr	r0, [r8, #8]
    fc88:	cmp	r0, #8
    fc8c:	bne	fcfc <xport_begin_data+0x6f8>
    fc90:	ldr	r0, [sp, #24]
    fc94:	ldr	r4, [sp, #28]
    fc98:	str	r1, [sp, #32]
    fc9c:	ldrb	r1, [r5]
    fca0:	cmp	r1, #0
    fca4:	beq	fcb8 <xport_begin_data+0x6b4>
    fca8:	strb	r1, [r0], #1
    fcac:	add	r5, r5, #1
    fcb0:	cmp	r0, r4
    fcb4:	bcc	fc9c <xport_begin_data+0x698>
    fcb8:	ldr	r5, [sp, #52]	; 0x34
    fcbc:	cmp	r0, r4
    fcc0:	bcs	fcdc <xport_begin_data+0x6d8>
    fcc4:	rsb	r1, r0, #32
    fcc8:	add	r2, sp, #144	; 0x90
    fccc:	add	r1, r2, r1
    fcd0:	add	r2, r1, #88	; 0x58
    fcd4:	mov	r1, #32
    fcd8:	bl	4c70 <memset@plt>
    fcdc:	mov	r0, r6
    fce0:	bl	4bd4 <strlen@plt>
    fce4:	ldr	r9, [sp, #32]
    fce8:	cmp	r0, #40	; 0x28
    fcec:	add	lr, sp, #256	; 0x100
    fcf0:	strh	r0, [lr, #8]
    fcf4:	movwhi	r9, #1
    fcf8:	b	fd04 <xport_begin_data+0x700>
    fcfc:	ldr	r5, [sp, #52]	; 0x34
    fd00:	mov	r9, r1
    fd04:	mov	r0, sl
    fd08:	bl	4a84 <xport_namestr_bswap@plt>
    fd0c:	ldr	r0, [pc, #988]	; 100f0 <xport_begin_data+0xaec>
    fd10:	add	r6, sp, #144	; 0x90
    fd14:	mov	r2, #140	; 0x8c
    fd18:	mov	r3, #80	; 0x50
    fd1c:	mov	r1, r6
    fd20:	add	r0, pc, r0
    fd24:	str	r0, [sp]
    fd28:	mov	r0, r8
    fd2c:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
    fd30:	ldr	r1, [sp, #64]	; 0x40
    fd34:	ldr	r2, [sp, #56]	; 0x38
    fd38:	cmp	r9, #0
    fd3c:	addne	r5, r5, #1
    fd40:	cmp	r0, #0
    fd44:	add	r1, r2, r1
    fd48:	str	r1, [sp, #64]	; 0x40
    fd4c:	ldr	r1, [sp, #68]	; 0x44
    fd50:	beq	f9f4 <xport_begin_data+0x3f0>
    fd54:	b	f87c <xport_begin_data+0x278>
    fd58:	ldr	r3, [pc, #916]	; 100f4 <xport_begin_data+0xaf0>
    fd5c:	mov	r0, r8
    fd60:	mov	r1, #32
    fd64:	mov	r2, #80	; 0x50
    fd68:	add	r3, pc, r3
    fd6c:	bl	4ea4 <readstat_write_line_padding@plt>
    fd70:	cmp	r0, #0
    fd74:	bne	f87c <xport_begin_data+0x278>
    fd78:	ldr	r0, [r8, #8]
    fd7c:	cmp	r5, #0
    fd80:	beq	10030 <xport_begin_data+0xa2c>
    fd84:	cmp	r0, #8
    fd88:	bne	10030 <xport_begin_data+0xa2c>
    fd8c:	ldr	r1, [pc, #868]	; 100f8 <xport_begin_data+0xaf4>
    fd90:	add	r0, sp, #104	; 0x68
    fd94:	vmov.i32	q8, #0	; 0x00000000
    fd98:	mov	r2, r5
    fd9c:	add	r0, r0, #16
    fda0:	vst1.64	{d16-d17}, [r0]
    fda4:	mov	r0, #0
    fda8:	strb	r0, [sp, #112]	; 0x70
    fdac:	str	r5, [sp, #116]	; 0x74
    fdb0:	str	r0, [sp, #136]	; 0x88
    fdb4:	ldr	r0, [sp, #44]	; 0x2c
    fdb8:	add	r1, pc, r1
    fdbc:	vldr	d18, [r1]
    fdc0:	cmp	r0, #0
    fdc4:	vstr	d18, [sp, #104]	; 0x68
    fdc8:	beq	fde4 <xport_begin_data+0x7e0>
    fdcc:	movw	r0, #22092	; 0x564c
    fdd0:	movt	r0, #57	; 0x39
    fdd4:	str	r0, [sp, #108]	; 0x6c
    fdd8:	movw	r0, #16716	; 0x414c
    fddc:	movt	r0, #17730	; 0x4542
    fde0:	str	r0, [sp, #104]	; 0x68
    fde4:	str	r2, [sp]
    fde8:	add	r4, sp, #144	; 0x90
    fdec:	add	r3, sp, #104	; 0x68
    fdf0:	mov	r1, #81	; 0x51
    fdf4:	ldr	r2, [pc, #768]	; 100fc <xport_begin_data+0xaf8>
    fdf8:	mov	r0, r4
    fdfc:	add	r2, pc, r2
    fe00:	bl	4c4c <snprintf@plt>
    fe04:	mov	r0, r8
    fe08:	mov	r1, r4
    fe0c:	bl	1014c <xport_write_record>
    fe10:	cmp	r0, #0
    fe14:	bne	f87c <xport_begin_data+0x278>
    fe18:	ldr	r0, [r8, #28]
    fe1c:	cmp	r0, #1
    fe20:	blt	1000c <xport_begin_data+0xa08>
    fe24:	vmov.i32	q4, #0	; 0x00000000
    fe28:	mov	r4, #0
    fe2c:	mov	r0, r8
    fe30:	mov	r1, r4
    fe34:	bl	4d48 <readstat_get_variable@plt>
    fe38:	mov	r6, r0
    fe3c:	add	r0, r0, #564	; 0x234
    fe40:	str	r0, [sp, #68]	; 0x44
    fe44:	bl	4bd4 <strlen@plt>
    fe48:	mov	r9, r0
    fe4c:	add	r0, r6, #8
    fe50:	mov	r5, r0
    fe54:	bl	4bd4 <strlen@plt>
    fe58:	mov	sl, r0
    fe5c:	add	r0, sp, #144	; 0x90
    fe60:	mov	r1, #20
    fe64:	vst1.64	{d8-d9}, [r0], r1
    fe68:	mov	r1, #0
    fe6c:	str	r1, [r0]
    fe70:	str	r1, [sp, #160]	; 0xa0
    fe74:	ldrb	r0, [r6, #308]!	; 0x134
    fe78:	cmp	r0, #0
    fe7c:	beq	fec8 <xport_begin_data+0x8c4>
    fe80:	mov	r0, #2
    fe84:	add	r2, sp, #144	; 0x90
    fe88:	add	r3, sp, #140	; 0x8c
    fe8c:	str	r0, [sp, #92]	; 0x5c
    fe90:	mov	r0, #8
    fe94:	str	r0, [sp, #140]	; 0x8c
    fe98:	add	r0, sp, #92	; 0x5c
    fe9c:	str	r0, [sp]
    fea0:	mov	r0, r6
    fea4:	ldr	r1, [pc, #596]	; 10100 <xport_begin_data+0xafc>
    fea8:	add	r1, pc, r1
    feac:	bl	4c58 <__isoc99_sscanf@plt>
    feb0:	cmp	r0, #0
    feb4:	ble	10088 <xport_begin_data+0xa84>
    feb8:	add	r0, sp, #144	; 0x90
    febc:	bl	4bd4 <strlen@plt>
    fec0:	cmp	r0, #9
    fec4:	bge	ff34 <xport_begin_data+0x930>
    fec8:	cmp	r9, #41	; 0x29
    fecc:	bcc	fffc <xport_begin_data+0x9f8>
    fed0:	add	r0, r4, #1
    fed4:	strh	sl, [sp, #94]	; 0x5e
    fed8:	strh	r9, [sp, #96]	; 0x60
    fedc:	strh	r0, [sp, #92]	; 0x5c
    fee0:	bl	48b0 <machine_is_little_endian@plt>
    fee4:	cmp	r0, #0
    fee8:	beq	ff10 <xport_begin_data+0x90c>
    feec:	ldrh	r0, [sp, #92]	; 0x5c
    fef0:	bl	48a4 <byteswap2@plt>
    fef4:	strh	r0, [sp, #92]	; 0x5c
    fef8:	ldrh	r0, [sp, #94]	; 0x5e
    fefc:	bl	48a4 <byteswap2@plt>
    ff00:	strh	r0, [sp, #94]	; 0x5e
    ff04:	ldrh	r0, [sp, #96]	; 0x60
    ff08:	bl	48a4 <byteswap2@plt>
    ff0c:	strh	r0, [sp, #96]	; 0x60
    ff10:	mov	r0, r8
    ff14:	add	r1, sp, #92	; 0x5c
    ff18:	mov	r2, #6
    ff1c:	bl	4e20 <readstat_write_bytes@plt>
    ff20:	cmp	r0, #0
    ff24:	bne	f87c <xport_begin_data+0x278>
    ff28:	mov	r0, r8
    ff2c:	mov	r1, r5
    ff30:	b	ffdc <xport_begin_data+0x9d8>
    ff34:	strh	sl, [sp, #94]	; 0x5e
    ff38:	strh	r0, [sp, #96]	; 0x60
    ff3c:	strh	r0, [sp, #98]	; 0x62
    ff40:	add	r0, r4, #1
    ff44:	strh	r9, [sp, #100]	; 0x64
    ff48:	strh	r0, [sp, #92]	; 0x5c
    ff4c:	bl	48b0 <machine_is_little_endian@plt>
    ff50:	cmp	r0, #0
    ff54:	beq	ff94 <xport_begin_data+0x990>
    ff58:	ldrh	r0, [sp, #92]	; 0x5c
    ff5c:	bl	48a4 <byteswap2@plt>
    ff60:	strh	r0, [sp, #92]	; 0x5c
    ff64:	ldrh	r0, [sp, #94]	; 0x5e
    ff68:	bl	48a4 <byteswap2@plt>
    ff6c:	strh	r0, [sp, #94]	; 0x5e
    ff70:	ldrh	r0, [sp, #96]	; 0x60
    ff74:	bl	48a4 <byteswap2@plt>
    ff78:	strh	r0, [sp, #96]	; 0x60
    ff7c:	ldrh	r0, [sp, #98]	; 0x62
    ff80:	bl	48a4 <byteswap2@plt>
    ff84:	strh	r0, [sp, #98]	; 0x62
    ff88:	ldrh	r0, [sp, #100]	; 0x64
    ff8c:	bl	48a4 <byteswap2@plt>
    ff90:	strh	r0, [sp, #100]	; 0x64
    ff94:	mov	r0, r8
    ff98:	add	r1, sp, #92	; 0x5c
    ff9c:	mov	r2, #10
    ffa0:	bl	4e20 <readstat_write_bytes@plt>
    ffa4:	cmp	r0, #0
    ffa8:	bne	f87c <xport_begin_data+0x278>
    ffac:	mov	r0, r8
    ffb0:	mov	r1, r5
    ffb4:	bl	4b38 <readstat_write_string@plt>
    ffb8:	cmp	r0, #0
    ffbc:	bne	f87c <xport_begin_data+0x278>
    ffc0:	mov	r0, r8
    ffc4:	add	r1, sp, #144	; 0x90
    ffc8:	bl	4b38 <readstat_write_string@plt>
    ffcc:	cmp	r0, #0
    ffd0:	bne	f87c <xport_begin_data+0x278>
    ffd4:	mov	r0, r8
    ffd8:	add	r1, sp, #144	; 0x90
    ffdc:	bl	4b38 <readstat_write_string@plt>
    ffe0:	cmp	r0, #0
    ffe4:	bne	f87c <xport_begin_data+0x278>
    ffe8:	ldr	r1, [sp, #68]	; 0x44
    ffec:	mov	r0, r8
    fff0:	bl	4b38 <readstat_write_string@plt>
    fff4:	cmp	r0, #0
    fff8:	bne	f87c <xport_begin_data+0x278>
    fffc:	ldr	r0, [r8, #28]
   10000:	add	r4, r4, #1
   10004:	cmp	r4, r0
   10008:	blt	fe2c <xport_begin_data+0x828>
   1000c:	ldr	r3, [pc, #240]	; 10104 <xport_begin_data+0xb00>
   10010:	mov	r0, r8
   10014:	mov	r1, #32
   10018:	mov	r2, #80	; 0x50
   1001c:	add	r3, pc, r3
   10020:	bl	4ea4 <readstat_write_line_padding@plt>
   10024:	cmp	r0, #0
   10028:	bne	f87c <xport_begin_data+0x278>
   1002c:	ldr	r0, [r8, #8]
   10030:	vmov.i32	q8, #0	; 0x00000000
   10034:	mov	r1, #32
   10038:	add	r2, sp, #144	; 0x90
   1003c:	cmp	r0, #8
   10040:	vst1.64	{d16-d17}, [r2], r1
   10044:	mov	r1, #0
   10048:	vst1.64	{d16-d17}, [r7]
   1004c:	str	r1, [r2]
   10050:	movw	r1, #16975	; 0x424f
   10054:	strh	r1, [sp, #144]	; 0x90
   10058:	mov	r1, #83	; 0x53
   1005c:	strb	r1, [sp, #146]	; 0x92
   10060:	bne	10078 <xport_begin_data+0xa74>
   10064:	mov	r0, #56	; 0x38
   10068:	strh	r0, [sp, #148]	; 0x94
   1006c:	movw	r0, #16975	; 0x424f
   10070:	movt	r0, #22099	; 0x5653
   10074:	str	r0, [sp, #144]	; 0x90
   10078:	add	r1, sp, #144	; 0x90
   1007c:	mov	r0, r8
   10080:	bl	101bc <xport_write_header_record>
   10084:	b	f87c <xport_begin_data+0x278>
   10088:	mov	r0, #11
   1008c:	b	f87c <xport_begin_data+0x278>
   10090:	.word	0x00034c68
   10094:	.word	0x00014f4f
   10098:	.word	0x00015074
   1009c:	.word	0x000152b6
   100a0:	.word	0x00014f77
   100a4:	.word	0x00014f6e
   100a8:	.word	0x00014f63
   100ac:	.word	0x00014f6f
   100b0:	.word	0x00014f11
   100b4:	.word	0x00014fd8
   100b8:	.word	0x00014d93
   100bc:	.word	0x00014fb0
   100c0:	.word	0x00014e62
   100c4:	.word	0x00014e62
   100c8:	.word	0x00014e52
   100cc:	.word	0x00014e12
   100d0:	.word	0x00014e12
   100d4:	.word	0x00015126
   100d8:	.word	0x00014da1
   100dc:	.word	0x00014dbf
   100e0:	.word	0x000150de
   100e4:	.word	0x00014dca
   100e8:	.word	0x00014e6c
   100ec:	.word	0x00014a76
   100f0:	.word	0x00014cc6
   100f4:	.word	0x00014c7e
   100f8:	.word	0x00014a10
   100fc:	.word	0x0001490b
   10100:	.word	0x00014752
   10104:	.word	0x000149ca

00010108 <xport_end_data>:
   10108:	ldr	r3, [pc, #12]	; 1011c <xport_end_data+0x14>
   1010c:	mov	r1, #32
   10110:	mov	r2, #80	; 0x50
   10114:	add	r3, pc, r3
   10118:	b	4ea4 <readstat_write_line_padding@plt>
   1011c:	.word	0x000148d2

00010120 <xport_write_row>:
   10120:	push	{fp, lr}
   10124:	mov	fp, sp
   10128:	sub	sp, sp, #8
   1012c:	ldr	r3, [pc, #20]	; 10148 <xport_write_row+0x28>
   10130:	add	r3, pc, r3
   10134:	str	r3, [sp]
   10138:	mov	r3, #80	; 0x50
   1013c:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   10140:	mov	sp, fp
   10144:	pop	{fp, pc}
   10148:	.word	0x000148b6

0001014c <xport_write_record>:
   1014c:	push	{r4, r5, fp, lr}
   10150:	add	fp, sp, #8
   10154:	sub	sp, sp, #8
   10158:	mov	r4, r0
   1015c:	mov	r0, r1
   10160:	mov	r5, r1
   10164:	bl	4bd4 <strlen@plt>
   10168:	mov	r2, r0
   1016c:	ldr	r0, [pc, #64]	; 101b4 <xport_write_record+0x68>
   10170:	mov	r1, r5
   10174:	mov	r3, #80	; 0x50
   10178:	add	r0, pc, r0
   1017c:	str	r0, [sp]
   10180:	mov	r0, r4
   10184:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   10188:	cmp	r0, #0
   1018c:	subne	sp, fp, #8
   10190:	popne	{r4, r5, fp, pc}
   10194:	ldr	r3, [pc, #28]	; 101b8 <xport_write_record+0x6c>
   10198:	mov	r0, r4
   1019c:	mov	r1, #32
   101a0:	mov	r2, #80	; 0x50
   101a4:	add	r3, pc, r3
   101a8:	sub	sp, fp, #8
   101ac:	pop	{r4, r5, fp, lr}
   101b0:	b	4ea4 <readstat_write_line_padding@plt>
   101b4:	.word	0x0001486e
   101b8:	.word	0x00014842

000101bc <xport_write_header_record>:
   101bc:	push	{r4, r5, r6, r7, fp, lr}
   101c0:	add	fp, sp, #16
   101c4:	sub	sp, sp, #112	; 0x70
   101c8:	mov	r3, r1
   101cc:	mov	r7, r0
   101d0:	ldr	r0, [r1, #12]
   101d4:	ldr	r1, [r1, #16]
   101d8:	ldr	r2, [r3, #20]
   101dc:	ldr	r5, [r3, #24]
   101e0:	ldr	r4, [r3, #28]
   101e4:	ldr	r6, [r3, #32]
   101e8:	stm	sp, {r0, r1, r2, r5}
   101ec:	str	r4, [sp, #16]
   101f0:	str	r6, [sp, #20]
   101f4:	add	r5, sp, #31
   101f8:	mov	r1, #81	; 0x51
   101fc:	ldr	r2, [pc, #28]	; 10220 <xport_write_header_record+0x64>
   10200:	mov	r0, r5
   10204:	add	r2, pc, r2
   10208:	bl	4c4c <snprintf@plt>
   1020c:	mov	r0, r7
   10210:	mov	r1, r5
   10214:	bl	1014c <xport_write_record>
   10218:	sub	sp, fp, #16
   1021c:	pop	{r4, r5, r6, r7, fp, pc}
   10220:	.word	0x00014424

00010224 <por_ctx_init>:
   10224:	push	{r4, sl, fp, lr}
   10228:	add	fp, sp, #8
   1022c:	mov	r0, #1
   10230:	mov	r1, #660	; 0x294
   10234:	bl	4778 <calloc@plt>
   10238:	mov	r4, r0
   1023c:	mov	r0, #32
   10240:	strb	r0, [r4, #48]	; 0x30
   10244:	mov	r0, #20
   10248:	str	r0, [r4, #608]	; 0x260
   1024c:	mov	r0, #1024	; 0x400
   10250:	bl	4b74 <ck_hash_table_init@plt>
   10254:	str	r0, [r4, #656]	; 0x290
   10258:	mov	r0, r4
   1025c:	pop	{r4, sl, fp, pc}

00010260 <por_ctx_free>:
   10260:	push	{r4, r5, r6, sl, fp, lr}
   10264:	add	fp, sp, #16
   10268:	mov	r4, r0
   1026c:	ldr	r0, [r0, #616]	; 0x268
   10270:	cmp	r0, #0
   10274:	beq	1027c <por_ctx_free+0x1c>
   10278:	bl	48bc <free@plt>
   1027c:	ldr	r0, [r4, #652]	; 0x28c
   10280:	cmp	r0, #0
   10284:	beq	102cc <por_ctx_free+0x6c>
   10288:	ldr	r2, [r4, #632]	; 0x278
   1028c:	cmp	r2, #1
   10290:	blt	102c8 <por_ctx_free+0x68>
   10294:	mov	r5, #0
   10298:	mov	r6, #264	; 0x108
   1029c:	ldr	r1, [r0, r6]
   102a0:	cmp	r1, #0
   102a4:	beq	102b8 <por_ctx_free+0x58>
   102a8:	mov	r0, r1
   102ac:	bl	48bc <free@plt>
   102b0:	ldr	r2, [r4, #632]	; 0x278
   102b4:	ldr	r0, [r4, #652]	; 0x28c
   102b8:	add	r5, r5, #1
   102bc:	add	r6, r6, #280	; 0x118
   102c0:	cmp	r5, r2
   102c4:	blt	1029c <por_ctx_free+0x3c>
   102c8:	bl	48bc <free@plt>
   102cc:	ldr	r0, [r4, #648]	; 0x288
   102d0:	cmp	r0, #0
   102d4:	beq	10314 <por_ctx_free+0xb4>
   102d8:	ldr	r2, [r4, #632]	; 0x278
   102dc:	cmp	r2, #1
   102e0:	blt	10310 <por_ctx_free+0xb0>
   102e4:	mov	r5, #0
   102e8:	ldr	r1, [r0, r5, lsl #2]
   102ec:	cmp	r1, #0
   102f0:	beq	10304 <por_ctx_free+0xa4>
   102f4:	mov	r0, r1
   102f8:	bl	48bc <free@plt>
   102fc:	ldr	r2, [r4, #632]	; 0x278
   10300:	ldr	r0, [r4, #648]	; 0x288
   10304:	add	r5, r5, #1
   10308:	cmp	r5, r2
   1030c:	blt	102e8 <por_ctx_free+0x88>
   10310:	bl	48bc <free@plt>
   10314:	ldr	r0, [r4, #656]	; 0x290
   10318:	cmp	r0, #0
   1031c:	beq	10324 <por_ctx_free+0xc4>
   10320:	bl	4c10 <ck_hash_table_free@plt>
   10324:	ldr	r0, [r4, #612]	; 0x264
   10328:	cmp	r0, #0
   1032c:	beq	10334 <por_ctx_free+0xd4>
   10330:	bl	47d8 <iconv_close@plt>
   10334:	mov	r0, r4
   10338:	pop	{r4, r5, r6, sl, fp, lr}
   1033c:	b	48bc <free@plt>

00010340 <por_utf8_encode>:
   10340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10344:	add	fp, sp, #28
   10348:	sub	sp, sp, #4
   1034c:	cmp	r1, #0
   10350:	beq	10418 <por_utf8_encode+0xd8>
   10354:	ldr	r8, [fp, #8]
   10358:	mov	r5, r2
   1035c:	mov	r9, #0
   10360:	mov	r4, #0
   10364:	str	r1, [sp]
   10368:	ldrb	r2, [r0, r9]
   1036c:	add	r2, r8, r2, lsl #1
   10370:	ldrh	r7, [r2]
   10374:	cmp	r7, #0
   10378:	mvneq	r7, #2
   1037c:	uxth	r2, r7
   10380:	cmp	r2, #32
   10384:	bcc	10420 <por_utf8_encode+0xe0>
   10388:	cmp	r2, #127	; 0x7f
   1038c:	bhi	103a8 <por_utf8_encode+0x68>
   10390:	add	r2, r4, #1
   10394:	cmp	r2, r3
   10398:	bhi	10424 <por_utf8_encode+0xe4>
   1039c:	strb	r7, [r5, r4]
   103a0:	mov	r4, r2
   103a4:	b	10408 <por_utf8_encode+0xc8>
   103a8:	and	r7, r7, #63488	; 0xf800
   103ac:	mov	r6, #0
   103b0:	cmp	r6, r7, lsr #11
   103b4:	addne	r7, r4, #3
   103b8:	addeq	r7, r4, #2
   103bc:	cmp	r7, r3
   103c0:	bhi	10424 <por_utf8_encode+0xe4>
   103c4:	ldr	r1, [pc, #100]	; 10430 <por_utf8_encode+0xf0>
   103c8:	mov	sl, r5
   103cc:	add	r5, r5, r4
   103d0:	mov	r7, r0
   103d4:	mov	r6, r3
   103d8:	mov	r0, r5
   103dc:	add	r1, pc, r1
   103e0:	bl	4db4 <sprintf@plt>
   103e4:	cmp	r0, #0
   103e8:	ldr	r1, [sp]
   103ec:	mov	r3, r6
   103f0:	movle	r0, #32
   103f4:	strble	r0, [r5]
   103f8:	movle	r0, #1
   103fc:	mov	r5, sl
   10400:	add	r4, r0, r4
   10404:	mov	r0, r7
   10408:	add	r9, r9, #1
   1040c:	cmp	r9, r1
   10410:	bcc	10368 <por_utf8_encode+0x28>
   10414:	b	10424 <por_utf8_encode+0xe4>
   10418:	mov	r4, #0
   1041c:	b	10424 <por_utf8_encode+0xe4>
   10420:	mvn	r4, #0
   10424:	mov	r0, r4
   10428:	sub	sp, fp, #28
   1042c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10430:	.word	0x000143f5

00010434 <por_utf8_decode>:
   10434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10438:	add	fp, sp, #28
   1043c:	sub	sp, sp, #12
   10440:	mov	r6, r0
   10444:	mov	r0, #0
   10448:	cmp	r3, #0
   1044c:	str	r0, [sp, #8]
   10450:	str	r0, [sp, #4]
   10454:	beq	10508 <por_utf8_decode+0xd4>
   10458:	ldr	sl, [fp, #8]
   1045c:	mov	r4, r3
   10460:	mov	r5, r2
   10464:	mov	r8, #0
   10468:	add	r7, sp, #4
   1046c:	mov	r9, #0
   10470:	ldrb	r0, [r6]
   10474:	sub	r1, r0, #32
   10478:	uxtb	r1, r1
   1047c:	cmp	r1, #94	; 0x5e
   10480:	bhi	1049c <por_utf8_decode+0x68>
   10484:	ldrb	r0, [sl, r0]
   10488:	cmp	r0, #0
   1048c:	beq	10504 <por_utf8_decode+0xd0>
   10490:	strb	r0, [r5, r9]
   10494:	mov	r0, #1
   10498:	b	104e8 <por_utf8_decode+0xb4>
   1049c:	ldr	r1, [pc, #108]	; 10510 <por_utf8_decode+0xdc>
   104a0:	mov	r0, r6
   104a4:	add	r2, sp, #8
   104a8:	mov	r3, r7
   104ac:	add	r1, pc, r1
   104b0:	bl	4c58 <__isoc99_sscanf@plt>
   104b4:	mov	r1, r0
   104b8:	mvn	r0, #0
   104bc:	cmp	r1, #0
   104c0:	beq	10508 <por_utf8_decode+0xd4>
   104c4:	ldr	r1, [sp, #8]
   104c8:	ldr	r2, [fp, #12]
   104cc:	cmp	r1, r2
   104d0:	bcs	10508 <por_utf8_decode+0xd4>
   104d4:	ldrb	r1, [sl, r1]
   104d8:	cmp	r1, #0
   104dc:	beq	10508 <por_utf8_decode+0xd4>
   104e0:	strb	r1, [r5, r9]
   104e4:	ldr	r0, [sp, #4]
   104e8:	add	r9, r9, #1
   104ec:	add	r6, r6, r0
   104f0:	str	r8, [sp, #4]
   104f4:	cmp	r9, r4
   104f8:	mov	r0, r9
   104fc:	bcc	10470 <por_utf8_decode+0x3c>
   10500:	b	10508 <por_utf8_decode+0xd4>
   10504:	mvn	r0, #0
   10508:	sub	sp, fp, #28
   1050c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10510:	.word	0x00014329
   10514:	.word	0x00000000

00010518 <readstat_por_parse_double>:
   10518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1051c:	add	fp, sp, #28
   10520:	sub	sp, sp, #4
   10524:	vpush	{d8-d11}
   10528:	sub	sp, sp, #40	; 0x28
   1052c:	sub	sp, sp, #1024	; 0x400
   10530:	mov	r9, r0
   10534:	cmp	r1, #0
   10538:	str	r3, [sp, #16]
   1053c:	str	r2, [sp, #20]
   10540:	str	r0, [sp, #24]
   10544:	str	r1, [sp, #12]
   10548:	beq	10834 <readstat_por_parse_double+0x31c>
   1054c:	vldr	d17, [pc, #988]	; 10930 <readstat_por_parse_double+0x418>
   10550:	vmov.f64	d16, #62	; 0x41f00000  30.0
   10554:	add	r1, r9, r1
   10558:	mov	r0, #0
   1055c:	mov	ip, #0
   10560:	vmov.i32	d9, #0	; 0x00000000
   10564:	mov	r6, #1
   10568:	mvn	lr, #1
   1056c:	vmov.i32	d10, #0	; 0x00000000
   10570:	vmov.i32	d11, #0	; 0x00000000
   10574:	vmov.i32	d19, #0	; 0x00000000
   10578:	mov	r8, #1
   1057c:	vmov.i32	d8, #0	; 0x00000000
   10580:	vmov.f64	d18, d16
   10584:	str	r1, [sp, #28]
   10588:	str	r0, [sp, #32]
   1058c:	ldr	r0, [pc, #932]	; 10938 <readstat_por_parse_double+0x420>
   10590:	add	r0, pc, r0
   10594:	ldrb	r2, [r0, r8]
   10598:	ldr	r0, [pc, #924]	; 1093c <readstat_por_parse_double+0x424>
   1059c:	ldr	r1, [pc, #924]	; 10940 <readstat_por_parse_double+0x428>
   105a0:	add	r0, pc, r0
   105a4:	add	r1, pc, r1
   105a8:	ldrb	r0, [r0, r8]
   105ac:	add	r4, r1, r0
   105b0:	movw	r0, #2414	; 0x96e
   105b4:	tst	r6, r0, lsr r8
   105b8:	bne	105c4 <readstat_por_parse_double+0xac>
   105bc:	mov	r5, r4
   105c0:	b	1061c <readstat_por_parse_double+0x104>
   105c4:	ldr	r0, [pc, #888]	; 10944 <readstat_por_parse_double+0x42c>
   105c8:	add	r0, pc, r0
   105cc:	ldrb	sl, [r0, r8]
   105d0:	add	r5, r4, sl
   105d4:	sub	r1, r5, #1
   105d8:	cmp	r1, r4
   105dc:	bcc	10614 <readstat_por_parse_double+0xfc>
   105e0:	ldrb	r6, [r9]
   105e4:	mov	r3, r4
   105e8:	sub	r0, r1, r3
   105ec:	mov	r7, r3
   105f0:	ldrb	r0, [r7, r0, asr #1]!
   105f4:	cmp	r6, r0
   105f8:	bcs	10604 <readstat_por_parse_double+0xec>
   105fc:	sub	r1, r7, #1
   10600:	b	1060c <readstat_por_parse_double+0xf4>
   10604:	bls	10688 <readstat_por_parse_double+0x170>
   10608:	add	r3, r7, #1
   1060c:	cmp	r1, r3
   10610:	bcs	105e8 <readstat_por_parse_double+0xd0>
   10614:	add	r2, sl, r2
   10618:	mov	r6, #1
   1061c:	movw	r0, #4090	; 0xffa
   10620:	tst	r6, r0, lsr r8
   10624:	beq	106a8 <readstat_por_parse_double+0x190>
   10628:	ldr	r0, [pc, #792]	; 10948 <readstat_por_parse_double+0x430>
   1062c:	add	r0, pc, r0
   10630:	ldrb	r7, [r0, r8]
   10634:	add	r0, r5, r7, lsl #1
   10638:	sub	r0, r0, #2
   1063c:	cmp	r0, r5
   10640:	bcc	106a4 <readstat_por_parse_double+0x18c>
   10644:	ldrb	r1, [r9]
   10648:	mov	r6, r5
   1064c:	sub	r3, r0, r6
   10650:	and	r4, lr, r3, asr #1
   10654:	mov	r3, r6
   10658:	ldrb	r4, [r3, r4]!
   1065c:	cmp	r1, r4
   10660:	bcs	1066c <readstat_por_parse_double+0x154>
   10664:	sub	r0, r3, #2
   10668:	b	1067c <readstat_por_parse_double+0x164>
   1066c:	ldrb	r4, [r3, #1]
   10670:	cmp	r1, r4
   10674:	bls	10698 <readstat_por_parse_double+0x180>
   10678:	add	r6, r3, #2
   1067c:	cmp	r0, r6
   10680:	bcs	1064c <readstat_por_parse_double+0x134>
   10684:	b	106a0 <readstat_por_parse_double+0x188>
   10688:	sub	r0, r2, r4
   1068c:	mov	r6, #1
   10690:	add	r2, r0, r7
   10694:	b	106a8 <readstat_por_parse_double+0x190>
   10698:	sub	r0, r3, r5
   1069c:	asr	r7, r0, #1
   106a0:	mov	r6, #1
   106a4:	add	r2, r7, r2
   106a8:	ldr	r0, [pc, #668]	; 1094c <readstat_por_parse_double+0x434>
   106ac:	ldr	r1, [pc, #668]	; 10950 <readstat_por_parse_double+0x438>
   106b0:	add	r0, pc, r0
   106b4:	add	r1, pc, r1
   106b8:	ldrb	r0, [r0, r2]
   106bc:	ldrb	r8, [r1, r2]
   106c0:	cmp	r0, #0
   106c4:	beq	107fc <readstat_por_parse_double+0x2e4>
   106c8:	ldr	r2, [pc, #644]	; 10954 <readstat_por_parse_double+0x43c>
   106cc:	add	r2, pc, r2
   106d0:	ldrb	r1, [r2, r0]
   106d4:	cmp	r1, #0
   106d8:	beq	107fc <readstat_por_parse_double+0x2e4>
   106dc:	add	r0, r2, r0
   106e0:	rsb	r3, r1, #0
   106e4:	add	r2, r0, #1
   106e8:	ldrb	r0, [r2]
   106ec:	cmp	r0, #10
   106f0:	bhi	107f0 <readstat_por_parse_double+0x2d8>
   106f4:	add	r1, pc, #4
   106f8:	ldr	r0, [r1, r0, lsl #2]
   106fc:	add	pc, r1, r0
   10700:	.word	0x00000034
   10704:	.word	0x00000050
   10708:	.word	0x0000006c
   1070c:	.word	0x00000074
   10710:	.word	0x0000002c
   10714:	.word	0x0000007c
   10718:	.word	0x00000084
   1071c:	.word	0x00000090
   10720:	.word	0x0000002c
   10724:	.word	0x00000098
   10728:	.word	0x00000124
   1072c:	mov	ip, #1
   10730:	b	107f0 <readstat_por_parse_double+0x2d8>
   10734:	ldrb	r0, [r9]
   10738:	sub	r1, r0, #48	; 0x30
   1073c:	uxtb	r4, r1
   10740:	cmp	r4, #9
   10744:	bhi	107a0 <readstat_por_parse_double+0x288>
   10748:	vmov	s0, r1
   1074c:	b	107b8 <readstat_por_parse_double+0x2a0>
   10750:	ldrb	r0, [r9]
   10754:	sub	r1, r0, #48	; 0x30
   10758:	uxtb	r4, r1
   1075c:	cmp	r4, #9
   10760:	bhi	107c8 <readstat_por_parse_double+0x2b0>
   10764:	vmov	s0, r1
   10768:	b	107e0 <readstat_por_parse_double+0x2c8>
   1076c:	vmov.i32	d19, #0	; 0x00000000
   10770:	b	107f0 <readstat_por_parse_double+0x2d8>
   10774:	vmov.i32	d9, #0	; 0x00000000
   10778:	b	107f0 <readstat_por_parse_double+0x2d8>
   1077c:	vorr	d10, d19, d19
   10780:	b	107f0 <readstat_por_parse_double+0x2d8>
   10784:	mov	r0, #1
   10788:	str	r0, [sp, #32]
   1078c:	b	107f0 <readstat_por_parse_double+0x2d8>
   10790:	vorr	d11, d19, d19
   10794:	b	107f0 <readstat_por_parse_double+0x2d8>
   10798:	vorr	d8, d17, d17
   1079c:	b	107f0 <readstat_por_parse_double+0x2d8>
   107a0:	sub	r1, r0, #65	; 0x41
   107a4:	uxtb	r1, r1
   107a8:	cmp	r1, #19
   107ac:	bhi	107f0 <readstat_por_parse_double+0x2d8>
   107b0:	sub	r0, r0, #55	; 0x37
   107b4:	vmov	s0, r0
   107b8:	vcvt.f64.s32	d20, s0
   107bc:	vmla.f64	d20, d19, d16
   107c0:	vmov.f64	d19, d20
   107c4:	b	107f0 <readstat_por_parse_double+0x2d8>
   107c8:	sub	r1, r0, #65	; 0x41
   107cc:	uxtb	r1, r1
   107d0:	cmp	r1, #19
   107d4:	bhi	107ec <readstat_por_parse_double+0x2d4>
   107d8:	sub	r0, r0, #55	; 0x37
   107dc:	vmov	s0, r0
   107e0:	vcvt.f64.s32	d20, s0
   107e4:	vdiv.f64	d20, d20, d18
   107e8:	vadd.f64	d9, d9, d20
   107ec:	vmul.f64	d18, d18, d16
   107f0:	add	r2, r2, #1
   107f4:	adds	r3, r3, #1
   107f8:	bne	106e8 <readstat_por_parse_double+0x1d0>
   107fc:	mov	sl, #0
   10800:	cmp	r8, #0
   10804:	beq	10920 <readstat_por_parse_double+0x408>
   10808:	ldr	r0, [sp, #28]
   1080c:	add	r9, r9, #1
   10810:	cmp	r9, r0
   10814:	bne	1058c <readstat_por_parse_double+0x74>
   10818:	ldr	r9, [sp, #28]
   1081c:	mov	r4, ip
   10820:	b	10858 <readstat_por_parse_double+0x340>
   10824:	mov	r4, ip
   10828:	add	r9, r9, #1
   1082c:	mov	sl, #1
   10830:	b	10858 <readstat_por_parse_double+0x340>
   10834:	mov	r0, #0
   10838:	vmov.i32	d9, #0	; 0x00000000
   1083c:	mov	r4, #0
   10840:	mov	r8, #1
   10844:	vmov.i32	d10, #0	; 0x00000000
   10848:	vmov.i32	d11, #0	; 0x00000000
   1084c:	mov	sl, #0
   10850:	vmov.i32	d8, #0	; 0x00000000
   10854:	str	r0, [sp, #32]
   10858:	vorr	d0, d8, d8
   1085c:	bl	4d00 <__isnan@plt>
   10860:	cmp	r0, #0
   10864:	bne	108a0 <readstat_por_parse_double+0x388>
   10868:	ldr	r0, [sp, #32]
   1086c:	vneg.f64	d16, d11
   10870:	vadd.f64	d8, d9, d10
   10874:	cmp	r0, #0
   10878:	vseleq.f64	d1, d11, d16
   1087c:	vcmp.f64	d1, #0.0
   10880:	vmrs	APSR_nzcv, fpscr
   10884:	beq	10894 <readstat_por_parse_double+0x37c>
   10888:	vmov.f64	d0, #62	; 0x41f00000  30.0
   1088c:	bl	4970 <pow@plt>
   10890:	vmul.f64	d8, d8, d0
   10894:	vneg.f64	d16, d8
   10898:	cmp	r4, #0
   1089c:	vseleq.f64	d8, d8, d16
   108a0:	cmp	sl, #0
   108a4:	beq	108c0 <readstat_por_parse_double+0x3a8>
   108a8:	ldr	r0, [sp, #20]
   108ac:	cmp	r0, #0
   108b0:	vstrne	d8, [r0]
   108b4:	ldr	r0, [sp, #24]
   108b8:	sub	r7, r9, r0
   108bc:	b	1090c <readstat_por_parse_double+0x3f4>
   108c0:	ldr	r6, [sp, #16]
   108c4:	mvn	r7, #0
   108c8:	cmp	r6, #0
   108cc:	beq	1090c <readstat_por_parse_double+0x3f4>
   108d0:	ldr	r0, [sp, #12]
   108d4:	ldr	r4, [fp, #8]
   108d8:	add	r5, sp, #36	; 0x24
   108dc:	mov	r1, #1024	; 0x400
   108e0:	str	r0, [sp]
   108e4:	ldr	r0, [sp, #24]
   108e8:	stmib	sp, {r0, r8}
   108ec:	sub	r3, r9, r0
   108f0:	mov	r0, r5
   108f4:	ldr	r2, [pc, #92]	; 10958 <readstat_por_parse_double+0x440>
   108f8:	add	r2, pc, r2
   108fc:	bl	4c4c <snprintf@plt>
   10900:	mov	r0, r5
   10904:	mov	r1, r4
   10908:	blx	r6
   1090c:	mov	r0, r7
   10910:	sub	sp, fp, #64	; 0x40
   10914:	vpop	{d8-d11}
   10918:	add	sp, sp, #4
   1091c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10920:	mov	r4, ip
   10924:	mov	r8, #0
   10928:	b	10858 <readstat_por_parse_double+0x340>
   1092c:	nop	{0}
   10930:	.word	0x00000000
   10934:	.word	0x7ff80000
   10938:	.word	0x00014290
   1093c:	.word	0x00014273
   10940:	.word	0x00014237
   10944:	.word	0x00014265
   10948:	.word	0x0001420e
   1094c:	.word	0x000141c7
   10950:	.word	0x00014193
   10954:	.word	0x000141db
   10958:	.word	0x00013fd0
   1095c:	.word	0x00000000

00010960 <read_version_and_timestamp>:
   10960:	push	{r4, r5, r6, sl, fp, lr}
   10964:	add	fp, sp, #16
   10968:	sub	sp, sp, #312	; 0x138
   1096c:	add	r6, sp, #8
   10970:	mov	r4, r0
   10974:	vmov.i32	q8, #0	; 0x00000000
   10978:	mov	r2, #1
   1097c:	add	r0, r6, #28
   10980:	mov	r1, r6
   10984:	add	r5, r6, #16
   10988:	vst1.32	{d16-d17}, [r0]
   1098c:	mov	r0, #32
   10990:	vst1.64	{d16-d17}, [r5]
   10994:	vst1.64	{d16-d17}, [r1], r0
   10998:	mvn	r0, #0
   1099c:	str	r0, [r1]
   109a0:	add	r1, sp, #7
   109a4:	mov	r0, r4
   109a8:	bl	10ae4 <read_bytes>
   109ac:	mov	r1, r0
   109b0:	mov	r0, #2
   109b4:	cmp	r1, #1
   109b8:	bne	10ad4 <read_version_and_timestamp+0x174>
   109bc:	mov	r0, #0
   109c0:	add	r1, sp, #52	; 0x34
   109c4:	sub	r3, fp, #20
   109c8:	mov	r2, #256	; 0x100
   109cc:	str	r0, [fp, #-20]	; 0xffffffec
   109d0:	mov	r0, r4
   109d4:	bl	11d68 <maybe_read_string>
   109d8:	mov	r1, r0
   109dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   109e0:	cmp	r0, #0
   109e4:	mov	r0, r1
   109e8:	movwne	r0, #5
   109ec:	cmp	r1, #0
   109f0:	movne	r0, r1
   109f4:	cmp	r0, #0
   109f8:	bne	10ad4 <read_version_and_timestamp+0x174>
   109fc:	add	r0, r6, #12
   10a00:	add	r2, r6, #20
   10a04:	mov	r3, r5
   10a08:	str	r0, [sp]
   10a0c:	add	r0, sp, #52	; 0x34
   10a10:	ldr	r1, [pc, #196]	; 10adc <read_version_and_timestamp+0x17c>
   10a14:	add	r1, pc, r1
   10a18:	bl	4c58 <__isoc99_sscanf@plt>
   10a1c:	mov	r1, r0
   10a20:	mov	r0, #29
   10a24:	cmp	r1, #3
   10a28:	bne	10ad4 <read_version_and_timestamp+0x174>
   10a2c:	mov	r0, #0
   10a30:	add	r1, sp, #52	; 0x34
   10a34:	sub	r3, fp, #20
   10a38:	mov	r2, #256	; 0x100
   10a3c:	str	r0, [fp, #-20]	; 0xffffffec
   10a40:	mov	r0, r4
   10a44:	bl	11d68 <maybe_read_string>
   10a48:	mov	r1, r0
   10a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a50:	cmp	r0, #0
   10a54:	mov	r0, r1
   10a58:	movwne	r0, #5
   10a5c:	cmp	r1, #0
   10a60:	movne	r0, r1
   10a64:	cmp	r0, #0
   10a68:	bne	10ad4 <read_version_and_timestamp+0x174>
   10a6c:	str	r6, [sp]
   10a70:	add	r2, r6, #8
   10a74:	orr	r3, r6, #4
   10a78:	add	r0, sp, #52	; 0x34
   10a7c:	ldr	r1, [pc, #92]	; 10ae0 <read_version_and_timestamp+0x180>
   10a80:	add	r1, pc, r1
   10a84:	bl	4c58 <__isoc99_sscanf@plt>
   10a88:	cmp	r0, #3
   10a8c:	mov	r0, #29
   10a90:	bne	10ad4 <read_version_and_timestamp+0x174>
   10a94:	ldr	r0, [sp, #24]
   10a98:	ldr	r1, [sp, #28]
   10a9c:	movw	r2, #1900	; 0x76c
   10aa0:	sub	r1, r1, r2
   10aa4:	sub	r0, r0, #1
   10aa8:	str	r1, [sp, #28]
   10aac:	str	r0, [sp, #24]
   10ab0:	add	r0, sp, #8
   10ab4:	bl	4850 <mktime@plt>
   10ab8:	ldrb	r1, [sp, #7]
   10abc:	add	r1, r4, r1, lsl #1
   10ac0:	ldrh	r1, [r1, #94]	; 0x5e
   10ac4:	str	r0, [r4, #56]	; 0x38
   10ac8:	mov	r0, #0
   10acc:	sub	r1, r1, #65	; 0x41
   10ad0:	str	r1, [r4, #60]	; 0x3c
   10ad4:	sub	sp, fp, #16
   10ad8:	pop	{r4, r5, r6, sl, fp, pc}
   10adc:	.word	0x00013ee5
   10ae0:	.word	0x00013e86

00010ae4 <read_bytes>:
   10ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ae8:	add	fp, sp, #28
   10aec:	sub	sp, sp, #4
   10af0:	mov	r9, r1
   10af4:	cmp	r2, #1
   10af8:	mov	r7, r1
   10afc:	blt	10bdc <read_bytes+0xf8>
   10b00:	ldr	r4, [r0, #44]	; 0x2c
   10b04:	mov	r5, r0
   10b08:	add	r6, r9, r2
   10b0c:	add	r8, sp, #3
   10b10:	mov	sl, #0
   10b14:	mov	r7, r9
   10b18:	b	10b3c <read_bytes+0x58>
   10b1c:	ldr	r1, [r5, #40]	; 0x28
   10b20:	cmp	r1, #80	; 0x50
   10b24:	beq	10be8 <read_bytes+0x104>
   10b28:	strb	r0, [r7], #1
   10b2c:	ldr	r0, [r5, #40]	; 0x28
   10b30:	add	r0, r0, #1
   10b34:	str	r0, [r5, #40]	; 0x28
   10b38:	b	10bd4 <read_bytes+0xf0>
   10b3c:	ldr	r0, [r5, #52]	; 0x34
   10b40:	cmp	r0, #0
   10b44:	beq	10b5c <read_bytes+0x78>
   10b48:	ldrb	r0, [r5, #48]	; 0x30
   10b4c:	strb	r0, [r7], #1
   10b50:	ldr	r0, [r5, #52]	; 0x34
   10b54:	sub	r0, r0, #1
   10b58:	b	10bd0 <read_bytes+0xec>
   10b5c:	ldr	r3, [r4, #12]
   10b60:	ldr	r2, [r4, #20]
   10b64:	mov	r0, r8
   10b68:	mov	r1, #1
   10b6c:	blx	r3
   10b70:	cmn	r0, #1
   10b74:	beq	10be0 <read_bytes+0xfc>
   10b78:	cmp	r0, #0
   10b7c:	beq	10bdc <read_bytes+0xf8>
   10b80:	ldrb	r0, [sp, #3]
   10b84:	cmp	r0, #10
   10b88:	beq	10bc4 <read_bytes+0xe0>
   10b8c:	cmp	r0, #13
   10b90:	bne	10b1c <read_bytes+0x38>
   10b94:	ldr	r3, [r4, #12]
   10b98:	ldr	r2, [r4, #20]
   10b9c:	mov	r0, r8
   10ba0:	mov	r1, #1
   10ba4:	blx	r3
   10ba8:	add	r1, r0, #1
   10bac:	mvn	r0, #0
   10bb0:	cmp	r1, #2
   10bb4:	bcc	10be0 <read_bytes+0xfc>
   10bb8:	ldrb	r1, [sp, #3]
   10bbc:	cmp	r1, #10
   10bc0:	bne	10be0 <read_bytes+0xfc>
   10bc4:	ldr	r0, [r5, #40]	; 0x28
   10bc8:	str	sl, [r5, #40]	; 0x28
   10bcc:	rsb	r0, r0, #80	; 0x50
   10bd0:	str	r0, [r5, #52]	; 0x34
   10bd4:	cmp	r7, r6
   10bd8:	bcc	10b3c <read_bytes+0x58>
   10bdc:	sub	r0, r7, r9
   10be0:	sub	sp, fp, #28
   10be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10be8:	mvn	r0, #0
   10bec:	b	10be0 <read_bytes+0xfc>

00010bf0 <handle_variables>:
   10bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bf4:	add	fp, sp, #28
   10bf8:	sub	sp, sp, #260	; 0x104
   10bfc:	ldr	r8, [r0, #632]	; 0x278
   10c00:	mov	r9, r0
   10c04:	cmp	r8, #1
   10c08:	blt	10cc0 <handle_variables+0xd0>
   10c0c:	mov	r7, #0
   10c10:	mov	sl, #0
   10c14:	mov	r6, #0
   10c18:	ldr	r0, [r9, #652]	; 0x28c
   10c1c:	mov	r1, sl
   10c20:	add	r5, r0, r7
   10c24:	str	r6, [r5, #8]
   10c28:	mov	r0, r5
   10c2c:	ldr	r2, [r9, #612]	; 0x264
   10c30:	bl	4c40 <spss_init_variable_for_info@plt>
   10c34:	ldr	r1, [r9, #648]	; 0x288
   10c38:	str	r0, [r1, r6, lsl #2]
   10c3c:	mov	r0, sp
   10c40:	mov	r1, #256	; 0x100
   10c44:	ldr	r3, [r5, #4]
   10c48:	ldr	r2, [pc, #248]	; 10d48 <handle_variables+0x158>
   10c4c:	add	r2, pc, r2
   10c50:	bl	4c4c <snprintf@plt>
   10c54:	ldr	r4, [r9, #8]
   10c58:	cmp	r4, #0
   10c5c:	beq	10c94 <handle_variables+0xa4>
   10c60:	ldr	r0, [r5, #4]
   10c64:	mov	r2, sp
   10c68:	ldr	r3, [r9, #36]	; 0x24
   10c6c:	cmn	r0, #1
   10c70:	addeq	r2, r0, #1
   10c74:	ldr	r0, [r9, #648]	; 0x288
   10c78:	ldr	r1, [r0, r6, lsl #2]
   10c7c:	mov	r0, r6
   10c80:	blx	r4
   10c84:	cmp	r0, #2
   10c88:	beq	10c9c <handle_variables+0xac>
   10c8c:	cmp	r0, #1
   10c90:	beq	10d20 <handle_variables+0x130>
   10c94:	add	sl, sl, #1
   10c98:	b	10cac <handle_variables+0xbc>
   10c9c:	ldr	r0, [r9, #648]	; 0x288
   10ca0:	mov	r1, #1
   10ca4:	ldr	r0, [r0, r6, lsl #2]
   10ca8:	str	r1, [r0, #2144]	; 0x860
   10cac:	ldr	r8, [r9, #632]	; 0x278
   10cb0:	add	r6, r6, #1
   10cb4:	add	r7, r7, #280	; 0x118
   10cb8:	cmp	r6, r8
   10cbc:	blt	10c18 <handle_variables+0x28>
   10cc0:	ldr	r4, [r9, #12]
   10cc4:	mov	r0, #0
   10cc8:	cmp	r4, #0
   10ccc:	beq	10d40 <handle_variables+0x150>
   10cd0:	mov	r5, r9
   10cd4:	ldrb	r1, [r5, #64]!	; 0x40
   10cd8:	cmp	r1, #0
   10cdc:	beq	10d40 <handle_variables+0x150>
   10ce0:	cmp	r8, #1
   10ce4:	blt	10d40 <handle_variables+0x150>
   10ce8:	ldr	r0, [r9, #652]	; 0x28c
   10cec:	mov	r7, #0
   10cf0:	add	r6, r0, #187	; 0xbb
   10cf4:	mov	r0, r6
   10cf8:	mov	r1, r5
   10cfc:	bl	4808 <strcmp@plt>
   10d00:	cmp	r0, #0
   10d04:	beq	10d28 <handle_variables+0x138>
   10d08:	add	r7, r7, #1
   10d0c:	add	r6, r6, #280	; 0x118
   10d10:	cmp	r7, r8
   10d14:	blt	10cf4 <handle_variables+0x104>
   10d18:	mov	r0, #0
   10d1c:	b	10d40 <handle_variables+0x150>
   10d20:	mov	r0, #4
   10d24:	b	10d40 <handle_variables+0x150>
   10d28:	ldr	r0, [r9, #648]	; 0x288
   10d2c:	ldr	r1, [r9, #36]	; 0x24
   10d30:	ldr	r0, [r0, r7, lsl #2]
   10d34:	blx	r4
   10d38:	cmp	r0, #0
   10d3c:	movwne	r0, #4
   10d40:	sub	sp, fp, #28
   10d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d48:	.word	0x00013cc7

00010d4c <readstat_parse_por>:
   10d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d50:	add	fp, sp, #28
   10d54:	sub	sp, sp, #44	; 0x2c
   10d58:	sub	sp, sp, #3072	; 0xc00
   10d5c:	ldr	sl, [r0, #32]
   10d60:	mov	r7, r2
   10d64:	mov	r5, r1
   10d68:	mov	r6, r0
   10d6c:	add	r4, r0, #16
   10d70:	bl	4e5c <por_ctx_init@plt>
   10d74:	mov	r8, r0
   10d78:	mov	r0, #48	; 0x30
   10d7c:	mov	r1, r6
   10d80:	vld1.32	{d18-d19}, [r4]
   10d84:	vld1.32	{d16-d17}, [r1], r0
   10d88:	add	r0, r8, #16
   10d8c:	str	r7, [r8, #36]	; 0x24
   10d90:	str	sl, [r8, #44]	; 0x2c
   10d94:	mov	r2, r8
   10d98:	vst1.32	{d18-d19}, [r0]
   10d9c:	mov	r0, #640	; 0x280
   10da0:	vst1.32	{d16-d17}, [r2], r0
   10da4:	ldr	r0, [r6, #44]	; 0x2c
   10da8:	str	r0, [r2]
   10dac:	ldr	r0, [r1]
   10db0:	cmp	r0, #1
   10db4:	strge	r0, [r8, #644]	; 0x284
   10db8:	ldr	r6, [r6, #40]	; 0x28
   10dbc:	cmp	r6, #0
   10dc0:	beq	10e08 <readstat_parse_por+0xbc>
   10dc4:	ldr	r1, [pc, #3960]	; 11d44 <readstat_parse_por+0xff8>
   10dc8:	mov	r0, r6
   10dcc:	add	r1, pc, r1
   10dd0:	bl	4808 <strcmp@plt>
   10dd4:	cmp	r0, #0
   10dd8:	beq	10df8 <readstat_parse_por+0xac>
   10ddc:	ldr	r1, [pc, #3940]	; 11d48 <readstat_parse_por+0xffc>
   10de0:	mov	r0, r6
   10de4:	add	r1, pc, r1
   10de8:	bl	4b14 <iconv_open@plt>
   10dec:	mov	r1, r8
   10df0:	str	r0, [r1, #612]!	; 0x264
   10df4:	b	10e00 <readstat_parse_por+0xb4>
   10df8:	mov	r1, r8
   10dfc:	ldr	r0, [r1, #612]!	; 0x264
   10e00:	cmn	r0, #1
   10e04:	beq	10fa4 <readstat_parse_por+0x258>
   10e08:	ldr	r2, [sl]
   10e0c:	ldr	r1, [sl, #20]
   10e10:	mov	r0, r5
   10e14:	blx	r2
   10e18:	cmn	r0, #1
   10e1c:	beq	10f9c <readstat_parse_por+0x250>
   10e20:	ldr	r3, [sl, #8]
   10e24:	ldr	r2, [sl, #20]
   10e28:	mov	r0, #0
   10e2c:	mov	r1, #2
   10e30:	blx	r3
   10e34:	mov	r9, #15
   10e38:	cmn	r0, #1
   10e3c:	str	r0, [r8, #32]
   10e40:	beq	10fb8 <readstat_parse_por+0x26c>
   10e44:	ldr	r3, [sl, #8]
   10e48:	ldr	r2, [sl, #20]
   10e4c:	mov	r0, #0
   10e50:	mov	r1, #0
   10e54:	blx	r3
   10e58:	cmn	r0, #1
   10e5c:	beq	10fb8 <readstat_parse_por+0x26c>
   10e60:	add	r5, sp, #312	; 0x138
   10e64:	mov	r0, r8
   10e68:	mov	r2, #200	; 0xc8
   10e6c:	mov	r1, r5
   10e70:	bl	10ae4 <read_bytes>
   10e74:	cmp	r0, #200	; 0xc8
   10e78:	bne	10fb4 <readstat_parse_por+0x268>
   10e7c:	mov	r0, #0
   10e80:	add	r7, r8, #73	; 0x49
   10e84:	add	r2, r5, #60	; 0x3c
   10e88:	mov	r1, #21
   10e8c:	mov	r3, #20
   10e90:	str	r0, [sp]
   10e94:	mov	r0, r7
   10e98:	bl	4c04 <readstat_convert@plt>
   10e9c:	mov	r9, r0
   10ea0:	cmp	r0, #0
   10ea4:	bne	10fb8 <readstat_parse_por+0x26c>
   10ea8:	add	r5, sp, #512	; 0x200
   10eac:	mov	r0, r8
   10eb0:	mov	r2, #256	; 0x100
   10eb4:	mov	r1, r5
   10eb8:	bl	10ae4 <read_bytes>
   10ebc:	cmp	r0, #256	; 0x100
   10ec0:	bne	10fb4 <readstat_parse_por+0x268>
   10ec4:	ldrb	r0, [sp, #638]	; 0x27e
   10ec8:	strb	r0, [r8, #48]	; 0x30
   10ecc:	mov	r0, #0
   10ed0:	ldr	r1, [pc, #3700]	; 11d4c <readstat_parse_por+0x1000>
   10ed4:	ldr	r1, [pc, r1]
   10ed8:	ldr	r2, [pc, #3696]	; 11d50 <readstat_parse_por+0x1004>
   10edc:	ldr	r2, [pc, r2]
   10ee0:	ldrb	r3, [r2, r0]
   10ee4:	cmp	r3, #0
   10ee8:	beq	10ef4 <readstat_parse_por+0x1a8>
   10eec:	sxtb	r3, r3
   10ef0:	b	10f00 <readstat_parse_por+0x1b4>
   10ef4:	ldrh	r3, [r1]
   10ef8:	cmp	r3, #0
   10efc:	beq	10f0c <readstat_parse_por+0x1c0>
   10f00:	ldrb	r6, [r5, r0]
   10f04:	add	r6, r8, r6, lsl #1
   10f08:	strh	r3, [r6, #94]	; 0x5e
   10f0c:	add	r0, r0, #1
   10f10:	add	r1, r1, #2
   10f14:	cmp	r0, #256	; 0x100
   10f18:	bne	10ee0 <readstat_parse_por+0x194>
   10f1c:	ldrb	r0, [sp, #576]	; 0x240
   10f20:	ldr	r1, [pc, #3628]	; 11d54 <readstat_parse_por+0x1008>
   10f24:	mov	r2, #8
   10f28:	ldr	r1, [pc, r1]
   10f2c:	add	r0, r8, r0, lsl #1
   10f30:	ldrh	r1, [r1, #128]	; 0x80
   10f34:	strh	r1, [r0, #94]	; 0x5e
   10f38:	add	r1, sp, #304	; 0x130
   10f3c:	mov	r0, r8
   10f40:	bl	10ae4 <read_bytes>
   10f44:	cmp	r0, #8
   10f48:	mov	r9, #2
   10f4c:	bne	10fb8 <readstat_parse_por+0x26c>
   10f50:	add	r0, r8, #94	; 0x5e
   10f54:	add	r5, sp, #304	; 0x130
   10f58:	add	r2, sp, #296	; 0x128
   10f5c:	mov	r1, #8
   10f60:	mov	r3, #8
   10f64:	str	r0, [sp]
   10f68:	mov	r0, r5
   10f6c:	bl	4c28 <por_utf8_encode@plt>
   10f70:	cmn	r0, #1
   10f74:	beq	10fd8 <readstat_parse_por+0x28c>
   10f78:	mov	r2, r0
   10f7c:	ldr	r0, [pc, #3544]	; 11d5c <readstat_parse_por+0x1010>
   10f80:	add	r1, sp, #296	; 0x128
   10f84:	add	r0, pc, r0
   10f88:	bl	4ebc <strncmp@plt>
   10f8c:	cmp	r0, #0
   10f90:	beq	11020 <readstat_parse_por+0x2d4>
   10f94:	mov	r9, #5
   10f98:	b	10fb8 <readstat_parse_por+0x26c>
   10f9c:	mov	r9, #1
   10fa0:	b	10fb8 <readstat_parse_por+0x26c>
   10fa4:	mov	r0, #0
   10fa8:	mov	r9, #7
   10fac:	str	r0, [r1]
   10fb0:	b	10fb8 <readstat_parse_por+0x26c>
   10fb4:	mov	r9, #2
   10fb8:	ldr	r1, [sl, #4]
   10fbc:	ldr	r0, [sl, #20]
   10fc0:	blx	r1
   10fc4:	mov	r0, r8
   10fc8:	bl	47cc <por_ctx_free@plt>
   10fcc:	mov	r0, r9
   10fd0:	sub	sp, fp, #28
   10fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fd8:	ldr	r0, [r8, #24]
   10fdc:	mov	r9, #16
   10fe0:	cmp	r0, #0
   10fe4:	beq	10fb8 <readstat_parse_por+0x26c>
   10fe8:	str	r5, [sp]
   10fec:	sub	lr, fp, #1024	; 0x400
   10ff0:	mov	r1, #1024	; 0x400
   10ff4:	mov	r3, #8
   10ff8:	ldr	r2, [pc, #3416]	; 11d58 <readstat_parse_por+0x100c>
   10ffc:	sub	r5, lr, #40	; 0x28
   11000:	mov	r0, r5
   11004:	add	r2, pc, r2
   11008:	bl	4c4c <snprintf@plt>
   1100c:	ldr	r2, [r8, #24]
   11010:	ldr	r1, [r8, #36]	; 0x24
   11014:	mov	r0, r5
   11018:	blx	r2
   1101c:	b	10fb8 <readstat_parse_por+0x26c>
   11020:	mvn	r0, #0
   11024:	str	r0, [r8, #636]	; 0x27c
   11028:	mov	r0, r8
   1102c:	bl	4a00 <read_version_and_timestamp@plt>
   11030:	mov	r9, r0
   11034:	cmp	r0, #0
   11038:	bne	10fb8 <readstat_parse_por+0x26c>
   1103c:	sub	lr, fp, #1024	; 0x400
   11040:	mov	r0, r8
   11044:	mov	r2, #1
   11048:	sub	r4, lr, #40	; 0x28
   1104c:	mov	r1, r4
   11050:	bl	10ae4 <read_bytes>
   11054:	cmp	r0, #1
   11058:	bne	10f94 <readstat_parse_por+0x248>
   1105c:	add	r0, r4, #24
   11060:	str	r0, [sp, #32]
   11064:	add	r0, r4, #8
   11068:	str	r0, [sp, #28]
   1106c:	add	r0, r8, #64	; 0x40
   11070:	str	r0, [sp, #36]	; 0x24
   11074:	b	1109c <readstat_parse_por+0x350>
   11078:	mov	r9, #4
   1107c:	b	11a68 <readstat_parse_por+0xd1c>
   11080:	mov	r9, #0
   11084:	mov	r4, r5
   11088:	b	11a68 <readstat_parse_por+0xd1c>
   1108c:	mov	r9, r0
   11090:	b	11a60 <readstat_parse_por+0xd14>
   11094:	mov	r9, #4
   11098:	b	11a60 <readstat_parse_por+0xd14>
   1109c:	ldrb	r0, [fp, #-1064]	; 0xfffffbd8
   110a0:	add	r0, r8, r0, lsl #1
   110a4:	ldrh	r0, [r0, #94]	; 0x5e
   110a8:	sub	r0, r0, #49	; 0x31
   110ac:	cmp	r0, #21
   110b0:	bhi	10f94 <readstat_parse_por+0x248>
   110b4:	add	r1, pc, #8
   110b8:	mov	r9, #5
   110bc:	ldr	r0, [r1, r0, lsl #2]
   110c0:	add	pc, r1, r0
   110c4:	.word	0x00000058
   110c8:	.word	0x00000058
   110cc:	.word	0x00000058
   110d0:	.word	0x00000068
   110d4:	.word	0x0000015c
   110d8:	.word	0x00000188
   110dc:	.word	0x000001c0
   110e0:	.word	0x00000320
   110e4:	.word	0x00000378
   110e8:	.word	0xfffffef4
   110ec:	.word	0xfffffef4
   110f0:	.word	0xfffffef4
   110f4:	.word	0xfffffef4
   110f8:	.word	0xfffffef4
   110fc:	.word	0xfffffef4
   11100:	.word	0xfffffef4
   11104:	.word	0x000003dc
   11108:	.word	0x0000044c
   1110c:	.word	0x000004bc
   11110:	.word	0x0000057c
   11114:	.word	0x00000644
   11118:	.word	0x000009c8
   1111c:	mov	r0, #0
   11120:	add	r1, sp, #40	; 0x28
   11124:	mov	r2, #256	; 0x100
   11128:	b	11258 <readstat_parse_por+0x50c>
   1112c:	ldr	r0, [r8, #632]	; 0x278
   11130:	mov	r9, #5
   11134:	cmp	r0, #0
   11138:	bne	11a68 <readstat_parse_por+0xd1c>
   1113c:	movw	r1, #16960	; 0x4240
   11140:	mov	r0, r8
   11144:	add	r2, sp, #1056	; 0x420
   11148:	movt	r1, #15
   1114c:	bl	12158 <read_integer_in_range>
   11150:	mov	r9, r0
   11154:	cmp	r0, #0
   11158:	bne	11a68 <readstat_parse_por+0xd1c>
   1115c:	ldr	r0, [sp, #1056]	; 0x420
   11160:	mov	r1, #4
   11164:	mov	r5, r4
   11168:	str	r0, [r8, #632]	; 0x278
   1116c:	bl	49ac <readstat_calloc@plt>
   11170:	str	r0, [r8, #648]	; 0x288
   11174:	mov	r1, #280	; 0x118
   11178:	ldr	r0, [r8, #632]	; 0x278
   1117c:	bl	49ac <readstat_calloc@plt>
   11180:	mov	r9, #3
   11184:	cmp	r0, #0
   11188:	str	r0, [r8, #652]	; 0x28c
   1118c:	beq	11084 <readstat_parse_por+0x338>
   11190:	ldr	r0, [r8, #648]	; 0x288
   11194:	mov	r4, r5
   11198:	cmp	r0, #0
   1119c:	beq	11a68 <readstat_parse_por+0xd1c>
   111a0:	ldr	r2, [r8]
   111a4:	cmp	r2, #0
   111a8:	beq	11080 <readstat_parse_por+0x334>
   111ac:	mvn	r0, #0
   111b0:	ldr	r3, [sp, #28]
   111b4:	mov	r4, r5
   111b8:	str	r0, [fp, #-1060]	; 0xfffffbdc
   111bc:	str	r0, [fp, #-1064]	; 0xfffffbd8
   111c0:	ldr	r0, [r8, #632]	; 0x278
   111c4:	asr	r1, r0, #31
   111c8:	strd	r0, [r3]
   111cc:	ldr	r3, [sp, #32]
   111d0:	ldr	r0, [r8, #56]	; 0x38
   111d4:	str	r0, [fp, #-1044]	; 0xfffffbec
   111d8:	str	r0, [fp, #-1048]	; 0xfffffbe8
   111dc:	ldr	r0, [r8, #60]	; 0x3c
   111e0:	asr	r1, r0, #31
   111e4:	strd	r0, [r3]
   111e8:	mov	r0, #0
   111ec:	str	r0, [fp, #-1028]	; 0xfffffbfc
   111f0:	str	r0, [fp, #-1032]	; 0xfffffbf8
   111f4:	str	r0, [fp, #-1024]	; 0xfffffc00
   111f8:	str	r7, [fp, #-1020]	; 0xfffffc04
   111fc:	str	r0, [fp, #-1016]	; 0xfffffc08
   11200:	strb	r0, [fp, #-1012]	; 0xfffffc0c
   11204:	mov	r0, r5
   11208:	ldr	r1, [r8, #36]	; 0x24
   1120c:	blx	r2
   11210:	mov	r9, r0
   11214:	cmp	r0, #0
   11218:	movwne	r9, #4
   1121c:	b	11a68 <readstat_parse_por+0xd1c>
   11220:	mov	r0, #0
   11224:	mov	r1, #100	; 0x64
   11228:	mov	r2, r4
   1122c:	str	r0, [fp, #-1064]	; 0xfffffbd8
   11230:	mov	r0, r8
   11234:	bl	12158 <read_integer_in_range>
   11238:	cmp	r0, #0
   1123c:	mov	r9, r0
   11240:	ldreq	r0, [fp, #-1064]	; 0xfffffbd8
   11244:	streq	r0, [r8, #608]	; 0x260
   11248:	b	11a68 <readstat_parse_por+0xd1c>
   1124c:	ldr	r1, [sp, #36]	; 0x24
   11250:	mov	r0, #0
   11254:	mov	r2, #9
   11258:	str	r0, [fp, #-1064]	; 0xfffffbd8
   1125c:	mov	r0, r8
   11260:	mov	r3, r4
   11264:	bl	11d68 <maybe_read_string>
   11268:	mov	r9, r0
   1126c:	cmp	r0, #0
   11270:	bne	11a68 <readstat_parse_por+0xd1c>
   11274:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   11278:	cmp	r0, #0
   1127c:	beq	11a68 <readstat_parse_por+0xd1c>
   11280:	b	10f94 <readstat_parse_por+0x248>
   11284:	ldr	r0, [r8, #636]	; 0x27c
   11288:	ldr	r1, [r8, #632]	; 0x278
   1128c:	mov	r9, #5
   11290:	add	r0, r0, #1
   11294:	cmp	r0, r1
   11298:	str	r0, [r8, #636]	; 0x27c
   1129c:	beq	11a68 <readstat_parse_por+0xd1c>
   112a0:	ldr	r1, [r8, #652]	; 0x28c
   112a4:	mov	r2, #280	; 0x118
   112a8:	mla	r6, r0, r2, r1
   112ac:	movw	r1, #16960	; 0x4240
   112b0:	add	r2, sp, #768	; 0x300
   112b4:	add	r0, r6, #36	; 0x24
   112b8:	add	r5, r6, #24
   112bc:	movt	r1, #15
   112c0:	str	r0, [fp, #-1060]	; 0xfffffbdc
   112c4:	mvn	r0, #0
   112c8:	str	r5, [fp, #-1064]	; 0xfffffbd8
   112cc:	str	r0, [r6, #4]
   112d0:	mov	r0, r8
   112d4:	bl	12158 <read_integer_in_range>
   112d8:	mov	r9, r0
   112dc:	cmp	r0, #0
   112e0:	bne	11a68 <readstat_parse_por+0xd1c>
   112e4:	ldr	r0, [sp, #768]	; 0x300
   112e8:	add	r1, r6, #187	; 0xbb
   112ec:	mov	r2, #9
   112f0:	add	r3, sp, #1056	; 0x420
   112f4:	str	r1, [sp, #24]
   112f8:	str	r0, [r6, #16]
   112fc:	cmp	r0, #0
   11300:	mov	r0, #0
   11304:	movweq	r0, #5
   11308:	str	r0, [r6]
   1130c:	mov	r0, #0
   11310:	str	r0, [sp, #1056]	; 0x420
   11314:	mov	r0, r8
   11318:	bl	11d68 <maybe_read_string>
   1131c:	ldr	r1, [sp, #1056]	; 0x420
   11320:	mov	r9, r0
   11324:	cmp	r1, #0
   11328:	movwne	r9, #5
   1132c:	cmp	r0, #0
   11330:	movne	r9, r0
   11334:	cmp	r9, #0
   11338:	bne	11a68 <readstat_parse_por+0xd1c>
   1133c:	ldr	r2, [r8, #656]	; 0x290
   11340:	ldr	r0, [sp, #24]
   11344:	mov	r1, r6
   11348:	bl	4eb0 <ck_str_hash_insert@plt>
   1134c:	mov	r0, r8
   11350:	mov	r1, #120	; 0x78
   11354:	add	r2, sp, #768	; 0x300
   11358:	bl	12158 <read_integer_in_range>
   1135c:	mov	r9, r0
   11360:	cmp	r0, #0
   11364:	bne	11a68 <readstat_parse_por+0xd1c>
   11368:	mov	r6, #1
   1136c:	ldr	r0, [sp, #768]	; 0x300
   11370:	movw	r1, #20000	; 0x4e20
   11374:	add	r2, sp, #768	; 0x300
   11378:	str	r0, [r5]
   1137c:	mov	r0, r8
   11380:	bl	12158 <read_integer_in_range>
   11384:	cmp	r0, #0
   11388:	bne	11578 <readstat_parse_por+0x82c>
   1138c:	ldr	r0, [sp, #768]	; 0x300
   11390:	mov	r1, #100	; 0x64
   11394:	add	r2, sp, #768	; 0x300
   11398:	str	r0, [r5, #4]
   1139c:	mov	r0, r8
   113a0:	bl	12158 <read_integer_in_range>
   113a4:	cmp	r0, #0
   113a8:	bne	11578 <readstat_parse_por+0x82c>
   113ac:	ldr	r0, [sp, #768]	; 0x300
   113b0:	cmp	r6, #1
   113b4:	str	r0, [r5, #8]
   113b8:	bhi	117b0 <readstat_parse_por+0xa64>
   113bc:	ldr	r5, [r4, r6, lsl #2]
   113c0:	mov	r0, r8
   113c4:	mov	r1, #120	; 0x78
   113c8:	add	r2, sp, #768	; 0x300
   113cc:	bl	12158 <read_integer_in_range>
   113d0:	mov	r9, r0
   113d4:	add	r6, r6, #1
   113d8:	cmp	r0, #0
   113dc:	beq	1136c <readstat_parse_por+0x620>
   113e0:	b	11a68 <readstat_parse_por+0xd1c>
   113e4:	ldr	r0, [r8, #636]	; 0x27c
   113e8:	cmp	r0, #0
   113ec:	blt	10f94 <readstat_parse_por+0x248>
   113f0:	ldr	r1, [r8, #632]	; 0x278
   113f4:	mov	r6, #280	; 0x118
   113f8:	cmp	r0, r1
   113fc:	bge	10f94 <readstat_parse_por+0x248>
   11400:	ldr	r1, [r8, #652]	; 0x28c
   11404:	mul	r2, r0, r6
   11408:	mov	r5, r1
   1140c:	ldr	r3, [r5, r2]!
   11410:	ldr	r2, [r5, #52]!	; 0x34
   11414:	cmp	r3, #5
   11418:	bne	117b8 <readstat_parse_por+0xa6c>
   1141c:	mla	r0, r0, r6, r1
   11420:	add	r0, r0, r2, lsl #3
   11424:	add	r1, r0, #64	; 0x40
   11428:	mov	r0, r8
   1142c:	bl	121ec <read_double>
   11430:	cmp	r0, #0
   11434:	beq	11800 <readstat_parse_por+0xab4>
   11438:	b	11ce8 <readstat_parse_por+0xf9c>
   1143c:	ldr	r0, [r8, #636]	; 0x27c
   11440:	cmp	r0, #0
   11444:	blt	10f94 <readstat_parse_por+0x248>
   11448:	ldr	r1, [r8, #632]	; 0x278
   1144c:	mov	r5, #280	; 0x118
   11450:	cmp	r0, r1
   11454:	beq	10f94 <readstat_parse_por+0x248>
   11458:	ldr	r1, [r8, #652]	; 0x28c
   1145c:	mul	r2, r0, r5
   11460:	mov	r6, #2
   11464:	mov	r3, r1
   11468:	mla	r0, r0, r5, r1
   1146c:	mov	r1, #0
   11470:	ldr	r2, [r3, r2]!
   11474:	str	r6, [r3, #52]	; 0x34
   11478:	mov	r6, #1
   1147c:	cmp	r2, #5
   11480:	str	r6, [r3, #56]	; 0x38
   11484:	bne	11818 <readstat_parse_por+0xacc>
   11488:	movw	r2, #0
   1148c:	str	r1, [r0, #64]	; 0x40
   11490:	add	r1, r0, #72	; 0x48
   11494:	movt	r2, #65520	; 0xfff0
   11498:	str	r2, [r0, #68]	; 0x44
   1149c:	b	11570 <readstat_parse_por+0x824>
   114a0:	ldr	r0, [r8, #636]	; 0x27c
   114a4:	cmp	r0, #0
   114a8:	blt	10f94 <readstat_parse_por+0x248>
   114ac:	ldr	r1, [r8, #632]	; 0x278
   114b0:	mov	r5, #280	; 0x118
   114b4:	cmp	r0, r1
   114b8:	beq	10f94 <readstat_parse_por+0x248>
   114bc:	ldr	r1, [r8, #652]	; 0x28c
   114c0:	mul	r2, r0, r5
   114c4:	mov	r6, #2
   114c8:	mov	r3, r1
   114cc:	ldr	r2, [r3, r2]!
   114d0:	str	r6, [r3, #52]	; 0x34
   114d4:	mov	r6, #1
   114d8:	cmp	r2, #5
   114dc:	str	r6, [r3, #56]	; 0x38
   114e0:	bne	11828 <readstat_parse_por+0xadc>
   114e4:	mla	r5, r0, r5, r1
   114e8:	mov	r0, r8
   114ec:	add	r1, r5, #64	; 0x40
   114f0:	bl	121ec <read_double>
   114f4:	cmp	r0, #0
   114f8:	bne	11ce8 <readstat_parse_por+0xf9c>
   114fc:	movw	r1, #0
   11500:	mov	r0, #0
   11504:	movt	r1, #32752	; 0x7ff0
   11508:	strd	r0, [r5, #72]	; 0x48
   1150c:	b	11a70 <readstat_parse_por+0xd24>
   11510:	ldr	r0, [r8, #636]	; 0x27c
   11514:	cmp	r0, #0
   11518:	blt	10f94 <readstat_parse_por+0x248>
   1151c:	ldr	r1, [r8, #632]	; 0x278
   11520:	mov	r5, #280	; 0x118
   11524:	cmp	r0, r1
   11528:	beq	10f94 <readstat_parse_por+0x248>
   1152c:	ldr	r1, [r8, #652]	; 0x28c
   11530:	mul	r2, r0, r5
   11534:	mov	r6, #2
   11538:	mov	r3, r1
   1153c:	ldr	r2, [r3, r2]!
   11540:	str	r6, [r3, #52]	; 0x34
   11544:	mov	r6, #1
   11548:	cmp	r2, #5
   1154c:	str	r6, [r3, #56]	; 0x38
   11550:	bne	11874 <readstat_parse_por+0xb28>
   11554:	mla	r5, r0, r5, r1
   11558:	mov	r0, r8
   1155c:	add	r1, r5, #64	; 0x40
   11560:	bl	121ec <read_double>
   11564:	cmp	r0, #0
   11568:	bne	11ce8 <readstat_parse_por+0xf9c>
   1156c:	add	r1, r5, #72	; 0x48
   11570:	mov	r0, r8
   11574:	bl	121ec <read_double>
   11578:	mov	r9, r0
   1157c:	b	11a68 <readstat_parse_por+0xd1c>
   11580:	ldr	r5, [r8, #636]	; 0x27c
   11584:	mov	r9, #5
   11588:	cmp	r5, #0
   1158c:	blt	11a68 <readstat_parse_por+0xd1c>
   11590:	ldr	r0, [r8, #632]	; 0x278
   11594:	cmp	r5, r0
   11598:	beq	11a68 <readstat_parse_por+0xd1c>
   1159c:	ldr	r6, [r8, #652]	; 0x28c
   115a0:	mov	r0, #0
   115a4:	add	r1, sp, #768	; 0x300
   115a8:	mov	r2, #256	; 0x100
   115ac:	mov	r3, r4
   115b0:	str	r0, [fp, #-1064]	; 0xfffffbd8
   115b4:	mov	r0, r8
   115b8:	bl	11d68 <maybe_read_string>
   115bc:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   115c0:	mov	r9, r0
   115c4:	cmp	r1, #0
   115c8:	movwne	r9, #5
   115cc:	cmp	r0, #0
   115d0:	movne	r9, r0
   115d4:	cmp	r9, #0
   115d8:	bne	11a68 <readstat_parse_por+0xd1c>
   115dc:	mov	r0, #280	; 0x118
   115e0:	mov	r9, r4
   115e4:	mla	r4, r5, r0, r6
   115e8:	add	r5, sp, #768	; 0x300
   115ec:	ldr	r6, [r4, #264]	; 0x108
   115f0:	mov	r0, r5
   115f4:	bl	4bd4 <strlen@plt>
   115f8:	mov	r1, #1
   115fc:	orr	r1, r1, r0, lsl #2
   11600:	mov	r0, r6
   11604:	bl	49e8 <realloc@plt>
   11608:	str	r0, [r4, #264]	; 0x108
   1160c:	mov	r6, r0
   11610:	mov	r0, r5
   11614:	mov	r4, r9
   11618:	bl	4bd4 <strlen@plt>
   1161c:	mov	r3, r0
   11620:	ldr	r0, [r8, #612]	; 0x264
   11624:	mov	r2, r5
   11628:	str	r0, [sp]
   1162c:	mov	r0, #1
   11630:	orr	r1, r0, r3, lsl #2
   11634:	mov	r0, r6
   11638:	bl	4c04 <readstat_convert@plt>
   1163c:	b	11578 <readstat_parse_por+0x82c>
   11640:	mov	r0, #0
   11644:	mov	r1, #256	; 0x100
   11648:	str	r0, [sp, #1028]	; 0x404
   1164c:	str	r0, [sp, #1024]	; 0x400
   11650:	mov	r0, r4
   11654:	ldr	r3, [r8, #624]	; 0x270
   11658:	ldr	r2, [pc, #1792]	; 11d60 <readstat_parse_por+0x1014>
   1165c:	add	r2, pc, r2
   11660:	bl	4c4c <snprintf@plt>
   11664:	movw	r1, #16960	; 0x4240
   11668:	add	lr, sp, #1024	; 0x400
   1166c:	mov	r0, r8
   11670:	movt	r1, #15
   11674:	add	r2, lr, #4
   11678:	bl	12158 <read_integer_in_range>
   1167c:	mov	r9, r0
   11680:	cmp	r0, #0
   11684:	bne	11a60 <readstat_parse_por+0xd14>
   11688:	ldr	r0, [sp, #1028]	; 0x404
   1168c:	cmp	r0, #1
   11690:	blt	118cc <readstat_parse_por+0xb80>
   11694:	mov	r5, #0
   11698:	mov	r4, #5
   1169c:	mov	r0, #0
   116a0:	add	r1, sp, #768	; 0x300
   116a4:	mov	r2, #256	; 0x100
   116a8:	add	r3, sp, #1056	; 0x420
   116ac:	str	r0, [sp, #1056]	; 0x420
   116b0:	mov	r0, r8
   116b4:	bl	11d68 <maybe_read_string>
   116b8:	ldr	r1, [sp, #1056]	; 0x420
   116bc:	mov	r9, r0
   116c0:	cmp	r1, #0
   116c4:	movwne	r9, #5
   116c8:	cmp	r0, #0
   116cc:	movne	r9, r0
   116d0:	cmp	r9, #0
   116d4:	bne	11a60 <readstat_parse_por+0xd14>
   116d8:	ldr	r1, [r8, #656]	; 0x290
   116dc:	add	r0, sp, #768	; 0x300
   116e0:	bl	49b8 <ck_str_hash_lookup@plt>
   116e4:	cmp	r0, #0
   116e8:	add	r5, r5, #1
   116ec:	ldrne	r1, [r8, #624]	; 0x270
   116f0:	strne	r1, [r0, #4]
   116f4:	ldrne	r4, [r0]
   116f8:	ldr	r0, [sp, #1028]	; 0x404
   116fc:	cmp	r5, r0
   11700:	blt	1169c <readstat_parse_por+0x950>
   11704:	b	118d0 <readstat_parse_por+0xb84>
   11708:	movw	r1, #16960	; 0x4240
   1170c:	mov	r0, #0
   11710:	add	r2, sp, #1056	; 0x420
   11714:	str	r0, [sp, #1056]	; 0x420
   11718:	mov	r0, r8
   1171c:	movt	r1, #15
   11720:	bl	12158 <read_integer_in_range>
   11724:	mov	r9, r0
   11728:	cmp	r0, #0
   1172c:	bne	11a68 <readstat_parse_por+0xd1c>
   11730:	ldr	r0, [sp, #1056]	; 0x420
   11734:	cmp	r0, #1
   11738:	blt	117b0 <readstat_parse_por+0xa64>
   1173c:	mov	r6, #0
   11740:	mov	r0, #0
   11744:	add	r1, sp, #768	; 0x300
   11748:	mov	r2, #256	; 0x100
   1174c:	mov	r3, r4
   11750:	str	r0, [fp, #-1064]	; 0xfffffbd8
   11754:	mov	r0, r8
   11758:	bl	11d68 <maybe_read_string>
   1175c:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   11760:	mov	r9, r0
   11764:	cmp	r1, #0
   11768:	movwne	r9, #5
   1176c:	cmp	r0, #0
   11770:	movne	r9, r0
   11774:	cmp	r9, #0
   11778:	bne	11a68 <readstat_parse_por+0xd1c>
   1177c:	ldr	r3, [r8, #4]
   11780:	cmp	r3, #0
   11784:	beq	117a0 <readstat_parse_por+0xa54>
   11788:	ldr	r2, [r8, #36]	; 0x24
   1178c:	mov	r0, r6
   11790:	add	r1, sp, #768	; 0x300
   11794:	blx	r3
   11798:	cmp	r0, #0
   1179c:	bne	11078 <readstat_parse_por+0x32c>
   117a0:	ldr	r0, [sp, #1056]	; 0x420
   117a4:	add	r6, r6, #1
   117a8:	cmp	r6, r0
   117ac:	blt	11740 <readstat_parse_por+0x9f4>
   117b0:	mov	r9, #0
   117b4:	b	11a68 <readstat_parse_por+0xd1c>
   117b8:	mla	r0, r0, r6, r1
   117bc:	add	r1, r2, r2, lsl #5
   117c0:	mov	r3, #0
   117c4:	mov	r2, #33	; 0x21
   117c8:	add	r0, r0, r1
   117cc:	str	r3, [fp, #-1064]	; 0xfffffbd8
   117d0:	mov	r3, r4
   117d4:	add	r1, r0, #88	; 0x58
   117d8:	mov	r0, r8
   117dc:	bl	11d68 <maybe_read_string>
   117e0:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   117e4:	mov	r9, r0
   117e8:	cmp	r1, #0
   117ec:	movwne	r9, #5
   117f0:	cmp	r0, #0
   117f4:	movne	r9, r0
   117f8:	cmp	r9, #0
   117fc:	bne	10fb8 <readstat_parse_por+0x26c>
   11800:	ldr	r0, [r5]
   11804:	cmp	r0, #2
   11808:	bgt	10f94 <readstat_parse_por+0x248>
   1180c:	add	r0, r0, #1
   11810:	str	r0, [r5]
   11814:	b	11a70 <readstat_parse_por+0xd24>
   11818:	strb	r1, [r0, #88]	; 0x58
   1181c:	str	r1, [fp, #-1064]	; 0xfffffbd8
   11820:	add	r1, r0, #121	; 0x79
   11824:	b	118c0 <readstat_parse_por+0xb74>
   11828:	mla	r5, r0, r5, r1
   1182c:	mov	r2, #0
   11830:	mov	r0, r8
   11834:	mov	r3, r4
   11838:	str	r2, [fp, #-1064]	; 0xfffffbd8
   1183c:	add	r1, r5, #88	; 0x58
   11840:	mov	r2, #33	; 0x21
   11844:	bl	11d68 <maybe_read_string>
   11848:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   1184c:	mov	r9, r0
   11850:	cmp	r1, #0
   11854:	movwne	r9, #5
   11858:	cmp	r0, #0
   1185c:	movne	r9, r0
   11860:	cmp	r9, #0
   11864:	bne	10fb8 <readstat_parse_por+0x26c>
   11868:	mov	r0, #0
   1186c:	strb	r0, [r5, #121]	; 0x79
   11870:	b	11a70 <readstat_parse_por+0xd24>
   11874:	mla	r5, r0, r5, r1
   11878:	mov	r2, #0
   1187c:	mov	r0, r8
   11880:	mov	r3, r4
   11884:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11888:	add	r1, r5, #88	; 0x58
   1188c:	mov	r2, #33	; 0x21
   11890:	bl	11d68 <maybe_read_string>
   11894:	ldr	r1, [fp, #-1064]	; 0xfffffbd8
   11898:	mov	r9, r0
   1189c:	cmp	r1, #0
   118a0:	movwne	r9, #5
   118a4:	cmp	r0, #0
   118a8:	movne	r9, r0
   118ac:	cmp	r9, #0
   118b0:	bne	10fb8 <readstat_parse_por+0x26c>
   118b4:	mov	r0, #0
   118b8:	add	r1, r5, #121	; 0x79
   118bc:	str	r0, [fp, #-1064]	; 0xfffffbd8
   118c0:	mov	r0, r8
   118c4:	mov	r2, #33	; 0x21
   118c8:	b	11260 <readstat_parse_por+0x514>
   118cc:	mov	r4, #5
   118d0:	movw	r1, #16960	; 0x4240
   118d4:	mov	r0, r8
   118d8:	add	r2, sp, #1024	; 0x400
   118dc:	movt	r1, #15
   118e0:	bl	12158 <read_integer_in_range>
   118e4:	mov	r9, r0
   118e8:	cmp	r0, #0
   118ec:	bne	11a60 <readstat_parse_por+0xd14>
   118f0:	ldr	r0, [sp, #1024]	; 0x400
   118f4:	str	r4, [sp, #20]
   118f8:	cmp	r0, #1
   118fc:	blt	11a50 <readstat_parse_por+0xd04>
   11900:	mov	r5, #0
   11904:	ldr	r0, [sp, #20]
   11908:	str	r4, [sp, #24]
   1190c:	cmp	r0, #0
   11910:	beq	11978 <readstat_parse_por+0xc2c>
   11914:	add	lr, sp, #1024	; 0x400
   11918:	mov	r0, r8
   1191c:	add	r1, lr, #8
   11920:	bl	121ec <read_double>
   11924:	cmp	r0, #0
   11928:	bne	1108c <readstat_parse_por+0x340>
   1192c:	mov	r0, #0
   11930:	add	lr, sp, #1024	; 0x400
   11934:	add	r1, sp, #1056	; 0x420
   11938:	mov	r2, #256	; 0x100
   1193c:	str	r0, [sp, #1052]	; 0x41c
   11940:	mov	r0, r8
   11944:	add	r3, lr, #28
   11948:	bl	11d68 <maybe_read_string>
   1194c:	ldr	r1, [sp, #1052]	; 0x41c
   11950:	mov	r9, r0
   11954:	cmp	r1, #0
   11958:	movwne	r9, #5
   1195c:	cmp	r0, #0
   11960:	movne	r9, r0
   11964:	cmp	r9, #0
   11968:	bne	11a60 <readstat_parse_por+0xd14>
   1196c:	ldr	r2, [sp, #1032]	; 0x408
   11970:	ldr	r6, [sp, #1036]	; 0x40c
   11974:	b	119fc <readstat_parse_por+0xcb0>
   11978:	mov	r0, #0
   1197c:	add	lr, sp, #1024	; 0x400
   11980:	add	r1, sp, #768	; 0x300
   11984:	mov	r2, #256	; 0x100
   11988:	str	r0, [sp, #1052]	; 0x41c
   1198c:	mov	r0, r8
   11990:	add	r3, lr, #28
   11994:	bl	11d68 <maybe_read_string>
   11998:	ldr	r1, [sp, #1052]	; 0x41c
   1199c:	mov	r9, r0
   119a0:	cmp	r1, #0
   119a4:	movwne	r9, #5
   119a8:	cmp	r0, #0
   119ac:	movne	r9, r0
   119b0:	cmp	r9, #0
   119b4:	bne	11a60 <readstat_parse_por+0xd14>
   119b8:	add	lr, sp, #1024	; 0x400
   119bc:	mov	r6, #0
   119c0:	mov	r0, r8
   119c4:	add	r1, sp, #1056	; 0x420
   119c8:	mov	r2, #256	; 0x100
   119cc:	add	r3, lr, #28
   119d0:	str	r6, [sp, #1052]	; 0x41c
   119d4:	bl	11d68 <maybe_read_string>
   119d8:	ldr	r1, [sp, #1052]	; 0x41c
   119dc:	mov	r9, r0
   119e0:	add	r2, sp, #768	; 0x300
   119e4:	cmp	r1, #0
   119e8:	movwne	r9, #5
   119ec:	cmp	r0, #0
   119f0:	movne	r9, r0
   119f4:	cmp	r9, #0
   119f8:	bne	11a60 <readstat_parse_por+0xd14>
   119fc:	ldr	r4, [sp, #24]
   11a00:	ldr	r1, [r8, #20]
   11a04:	bfc	r4, #0, #10
   11a08:	cmp	r1, #0
   11a0c:	beq	11a40 <readstat_parse_por+0xcf4>
   11a10:	ldr	r3, [sp, #20]
   11a14:	ldr	r0, [r8, #36]	; 0x24
   11a18:	sub	lr, fp, #1024	; 0x400
   11a1c:	stm	sp, {r3, r4}
   11a20:	add	r3, sp, #1056	; 0x420
   11a24:	str	r0, [sp, #12]
   11a28:	sub	r0, lr, #40	; 0x28
   11a2c:	str	r3, [sp, #8]
   11a30:	mov	r3, r6
   11a34:	blx	r1
   11a38:	cmp	r0, #0
   11a3c:	bne	11094 <readstat_parse_por+0x348>
   11a40:	ldr	r0, [sp, #1024]	; 0x400
   11a44:	add	r5, r5, #1
   11a48:	cmp	r5, r0
   11a4c:	blt	11904 <readstat_parse_por+0xbb8>
   11a50:	ldr	r0, [r8, #624]	; 0x270
   11a54:	mov	r9, #0
   11a58:	add	r0, r0, #1
   11a5c:	str	r0, [r8, #624]	; 0x270
   11a60:	sub	lr, fp, #1024	; 0x400
   11a64:	sub	r4, lr, #40	; 0x28
   11a68:	cmp	r9, #0
   11a6c:	bne	10fb8 <readstat_parse_por+0x26c>
   11a70:	mov	r0, r8
   11a74:	mov	r1, r4
   11a78:	mov	r2, #1
   11a7c:	bl	10ae4 <read_bytes>
   11a80:	cmp	r0, #1
   11a84:	beq	1109c <readstat_parse_por+0x350>
   11a88:	b	10f94 <readstat_parse_por+0x248>
   11a8c:	ldr	r0, [r8, #632]	; 0x278
   11a90:	ldr	r1, [r8, #636]	; 0x27c
   11a94:	mov	r9, #8
   11a98:	sub	r0, r0, #1
   11a9c:	cmp	r1, r0
   11aa0:	bne	10fb8 <readstat_parse_por+0x26c>
   11aa4:	mov	r0, r8
   11aa8:	bl	4ef8 <handle_variables@plt>
   11aac:	mov	r9, r0
   11ab0:	cmp	r0, #0
   11ab4:	bne	10fb8 <readstat_parse_por+0x26c>
   11ab8:	ldr	r0, [r8, #16]
   11abc:	cmp	r0, #0
   11ac0:	ldrne	r0, [r8, #632]	; 0x278
   11ac4:	cmpne	r0, #0
   11ac8:	bne	11ad4 <readstat_parse_por+0xd88>
   11acc:	mov	r9, #0
   11ad0:	b	10fb8 <readstat_parse_por+0x26c>
   11ad4:	add	r1, r8, #628	; 0x274
   11ad8:	add	lr, sp, #1024	; 0x400
   11adc:	mov	r6, #0
   11ae0:	str	r1, [sp, #28]
   11ae4:	add	r1, lr, #8
   11ae8:	add	r1, r1, #8
   11aec:	str	r1, [sp, #32]
   11af0:	add	r1, r8, #644	; 0x284
   11af4:	str	r1, [sp, #36]	; 0x24
   11af8:	b	11b1c <readstat_parse_por+0xdd0>
   11afc:	ldr	r0, [r8, #640]	; 0x280
   11b00:	cmp	r0, #1
   11b04:	blt	11b18 <readstat_parse_por+0xdcc>
   11b08:	ldr	r1, [sp, #28]
   11b0c:	ldr	r1, [r1]
   11b10:	cmp	r1, r0
   11b14:	beq	11acc <readstat_parse_por+0xd80>
   11b18:	ldr	r0, [r8, #632]	; 0x278
   11b1c:	cmp	r0, #1
   11b20:	str	r6, [sp, #1052]	; 0x41c
   11b24:	blt	11c98 <readstat_parse_por+0xf4c>
   11b28:	mov	r4, #0
   11b2c:	mov	r7, #0
   11b30:	ldr	r5, [r8, #652]	; 0x28c
   11b34:	str	r6, [sp, #1036]	; 0x40c
   11b38:	str	r6, [sp, #1032]	; 0x408
   11b3c:	ldr	r0, [r5, -r4]
   11b40:	strb	r6, [sp, #1044]	; 0x414
   11b44:	str	r0, [sp, #1040]	; 0x410
   11b48:	ldrb	r0, [sp, #1045]	; 0x415
   11b4c:	and	r0, r0, #252	; 0xfc
   11b50:	strb	r0, [sp, #1045]	; 0x415
   11b54:	ldr	r0, [r5, -r4]
   11b58:	cmp	r0, #5
   11b5c:	beq	11bd8 <readstat_parse_por+0xe8c>
   11b60:	cmp	r0, #0
   11b64:	bne	11c24 <readstat_parse_por+0xed8>
   11b68:	add	lr, sp, #1024	; 0x400
   11b6c:	mov	r0, r8
   11b70:	add	r1, sp, #768	; 0x300
   11b74:	mov	r2, #256	; 0x100
   11b78:	add	r3, lr, #28
   11b7c:	bl	11d68 <maybe_read_string>
   11b80:	cmp	r0, #0
   11b84:	bne	11cf0 <readstat_parse_por+0xfa4>
   11b88:	ldr	r0, [sp, #1052]	; 0x41c
   11b8c:	cmp	r0, #0
   11b90:	bne	11d2c <readstat_parse_por+0xfe0>
   11b94:	add	r5, sp, #768	; 0x300
   11b98:	mov	r0, r5
   11b9c:	bl	4bd4 <strlen@plt>
   11ba0:	mov	r3, r0
   11ba4:	ldr	r0, [r8, #612]	; 0x264
   11ba8:	sub	lr, fp, #1024	; 0x400
   11bac:	movw	r1, #1025	; 0x401
   11bb0:	mov	r2, r5
   11bb4:	str	r0, [sp]
   11bb8:	sub	r0, lr, #40	; 0x28
   11bbc:	bl	4c04 <readstat_convert@plt>
   11bc0:	cmp	r0, #0
   11bc4:	bne	11ce8 <readstat_parse_por+0xf9c>
   11bc8:	sub	lr, fp, #1024	; 0x400
   11bcc:	sub	r0, lr, #40	; 0x28
   11bd0:	str	r0, [sp, #1032]	; 0x408
   11bd4:	b	11c24 <readstat_parse_por+0xed8>
   11bd8:	add	lr, sp, #1024	; 0x400
   11bdc:	mov	r0, r8
   11be0:	add	r1, lr, #8
   11be4:	add	lr, sp, #1024	; 0x400
   11be8:	add	r2, lr, #28
   11bec:	bl	11efc <maybe_read_double>
   11bf0:	cmp	r0, #0
   11bf4:	bne	11cf0 <readstat_parse_por+0xfa4>
   11bf8:	ldr	r0, [sp, #1052]	; 0x41c
   11bfc:	cmp	r0, #0
   11c00:	bne	11d2c <readstat_parse_por+0xfe0>
   11c04:	add	lr, sp, #1024	; 0x400
   11c08:	vldr	d0, [lr, #8]
   11c0c:	bl	4d00 <__isnan@plt>
   11c10:	ldrb	r1, [sp, #1045]	; 0x415
   11c14:	and	r0, r0, #1
   11c18:	and	r1, r1, #254	; 0xfe
   11c1c:	orr	r0, r1, r0
   11c20:	strb	r0, [sp, #1045]	; 0x415
   11c24:	ldr	r5, [r8, #16]
   11c28:	cmp	r5, #0
   11c2c:	beq	11c84 <readstat_parse_por+0xf38>
   11c30:	ldr	r0, [r8, #648]	; 0x288
   11c34:	ldr	r1, [r0, r7, lsl #2]
   11c38:	ldr	r0, [r1, #2144]	; 0x860
   11c3c:	cmp	r0, #0
   11c40:	bne	11c84 <readstat_parse_por+0xf38>
   11c44:	ldr	r0, [sp, #36]	; 0x24
   11c48:	ldr	r0, [r0]
   11c4c:	cmp	r0, #0
   11c50:	bne	11c84 <readstat_parse_por+0xf38>
   11c54:	ldr	r2, [sp, #32]
   11c58:	ldr	r0, [r8, #628]	; 0x274
   11c5c:	ldr	ip, [r2]
   11c60:	ldr	r9, [r2, #4]
   11c64:	ldr	lr, [r8, #36]	; 0x24
   11c68:	ldr	r2, [sp, #1032]	; 0x408
   11c6c:	ldr	r3, [sp, #1036]	; 0x40c
   11c70:	str	ip, [sp]
   11c74:	stmib	sp, {r9, lr}
   11c78:	blx	r5
   11c7c:	cmp	r0, #0
   11c80:	bne	11d3c <readstat_parse_por+0xff0>
   11c84:	ldr	r0, [r8, #632]	; 0x278
   11c88:	add	r7, r7, #1
   11c8c:	sub	r4, r4, #280	; 0x118
   11c90:	cmp	r7, r0
   11c94:	blt	11b30 <readstat_parse_por+0xde4>
   11c98:	ldr	r0, [sp, #36]	; 0x24
   11c9c:	ldr	r0, [r0]
   11ca0:	cmp	r0, #0
   11ca4:	beq	11cb4 <readstat_parse_por+0xf68>
   11ca8:	ldr	r1, [sp, #36]	; 0x24
   11cac:	sub	r0, r0, #1
   11cb0:	b	11cc0 <readstat_parse_por+0xf74>
   11cb4:	ldr	r1, [sp, #28]
   11cb8:	ldr	r0, [r1]
   11cbc:	add	r0, r0, #1
   11cc0:	str	r0, [r1]
   11cc4:	ldr	r3, [r8, #44]	; 0x2c
   11cc8:	ldr	r1, [r8, #28]
   11ccc:	ldr	r0, [r8, #32]
   11cd0:	ldr	r2, [r8, #36]	; 0x24
   11cd4:	ldr	r7, [r3, #16]
   11cd8:	ldr	r3, [r3, #20]
   11cdc:	blx	r7
   11ce0:	cmp	r0, #0
   11ce4:	beq	11afc <readstat_parse_por+0xdb0>
   11ce8:	mov	r9, r0
   11cec:	b	10fb8 <readstat_parse_por+0x26c>
   11cf0:	mov	r9, r0
   11cf4:	ldr	r0, [r8, #24]
   11cf8:	cmp	r0, #0
   11cfc:	beq	10fb8 <readstat_parse_por+0x26c>
   11d00:	ldr	r0, [r8, #628]	; 0x274
   11d04:	mov	r1, #1024	; 0x400
   11d08:	add	r0, r0, #1
   11d0c:	str	r0, [sp]
   11d10:	sub	r0, r5, r4
   11d14:	add	r5, sp, #1056	; 0x420
   11d18:	ldr	r2, [pc, #68]	; 11d64 <readstat_parse_por+0x1018>
   11d1c:	add	r3, r0, #187	; 0xbb
   11d20:	mov	r0, r5
   11d24:	add	r2, pc, r2
   11d28:	b	11008 <readstat_parse_por+0x2bc>
   11d2c:	cmp	r7, #0
   11d30:	movwne	r7, #5
   11d34:	mov	r9, r7
   11d38:	b	10fb8 <readstat_parse_por+0x26c>
   11d3c:	mov	r9, #4
   11d40:	b	10fb8 <readstat_parse_por+0x26c>
   11d44:	.word	0x000133da
   11d48:	.word	0x000133c2
   11d4c:	.word	0x000333fc
   11d50:	.word	0x00033400
   11d54:	.word	0x000333a8
   11d58:	.word	0x00013918
   11d5c:	.word	0x000139bc
   11d60:	.word	0x000132b7
   11d64:	.word	0x00012cab

00011d68 <maybe_read_string>:
   11d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d6c:	add	fp, sp, #28
   11d70:	sub	sp, sp, #4
   11d74:	vpush	{d8}
   11d78:	sub	sp, sp, #24
   11d7c:	sub	sp, sp, #1024	; 0x400
   11d80:	mov	r4, r0
   11d84:	mov	r0, #0
   11d88:	mov	sl, r2
   11d8c:	mov	r8, r1
   11d90:	sub	r1, fp, #56	; 0x38
   11d94:	sub	r2, fp, #60	; 0x3c
   11d98:	mov	r5, r3
   11d9c:	str	r0, [fp, #-60]	; 0xffffffc4
   11da0:	mov	r0, r4
   11da4:	bl	11efc <maybe_read_double>
   11da8:	mov	r7, r0
   11dac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11db0:	orrs	r1, r0, r7
   11db4:	beq	11dd8 <maybe_read_string+0x70>
   11db8:	cmp	r5, #0
   11dbc:	strne	r0, [r5]
   11dc0:	mov	r6, r7
   11dc4:	mov	r0, r6
   11dc8:	sub	sp, fp, #40	; 0x28
   11dcc:	vpop	{d8}
   11dd0:	add	sp, sp, #4
   11dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dd8:	vldr	d8, [fp, #-56]	; 0xffffffc8
   11ddc:	mov	r6, #5
   11de0:	vcmpe.f64	d8, #0.0
   11de4:	vmrs	APSR_nzcv, fpscr
   11de8:	bmi	11dc4 <maybe_read_string+0x5c>
   11dec:	vldr	d16, [pc, #252]	; 11ef0 <maybe_read_string+0x188>
   11df0:	vcmpe.f64	d8, d16
   11df4:	vmrs	APSR_nzcv, fpscr
   11df8:	bgt	11dc4 <maybe_read_string+0x5c>
   11dfc:	vmov.f64	d0, d8
   11e00:	bl	4d00 <__isnan@plt>
   11e04:	cmp	r0, #0
   11e08:	bne	11dc4 <maybe_read_string+0x5c>
   11e0c:	ldr	r0, [r4, #620]	; 0x26c
   11e10:	vcvt.u32.f64	s0, d8
   11e14:	vmov	r9, s0
   11e18:	cmp	r0, r9
   11e1c:	bcs	11e48 <maybe_read_string+0xe0>
   11e20:	str	r9, [r4, #620]	; 0x26c
   11e24:	mov	r1, r9
   11e28:	ldr	r0, [r4, #616]	; 0x268
   11e2c:	bl	49e8 <realloc@plt>
   11e30:	str	r0, [r4, #616]	; 0x268
   11e34:	mov	r1, #0
   11e38:	mov	r6, r0
   11e3c:	ldr	r2, [r4, #620]	; 0x26c
   11e40:	bl	4c70 <memset@plt>
   11e44:	b	11e4c <maybe_read_string+0xe4>
   11e48:	ldr	r6, [r4, #616]	; 0x268
   11e4c:	mov	r0, r4
   11e50:	mov	r1, r6
   11e54:	mov	r2, r9
   11e58:	bl	10ae4 <read_bytes>
   11e5c:	cmn	r0, #1
   11e60:	beq	11e9c <maybe_read_string+0x134>
   11e64:	ldr	r0, [r4, #616]	; 0x268
   11e68:	add	r1, r4, #94	; 0x5e
   11e6c:	sub	r3, sl, #1
   11e70:	mov	r2, r8
   11e74:	str	r1, [sp]
   11e78:	mov	r1, r9
   11e7c:	bl	4c28 <por_utf8_encode@plt>
   11e80:	cmn	r0, #1
   11e84:	beq	11ea4 <maybe_read_string+0x13c>
   11e88:	mov	r1, #0
   11e8c:	cmp	r5, #0
   11e90:	strb	r1, [r8, r0]
   11e94:	strne	r1, [r5]
   11e98:	b	11dc0 <maybe_read_string+0x58>
   11e9c:	mov	r6, #2
   11ea0:	b	11dc4 <maybe_read_string+0x5c>
   11ea4:	ldr	r0, [r4, #24]
   11ea8:	mov	r6, #16
   11eac:	cmp	r0, #0
   11eb0:	beq	11dc4 <maybe_read_string+0x5c>
   11eb4:	ldr	r0, [r4, #616]	; 0x268
   11eb8:	add	r5, sp, #4
   11ebc:	mov	r1, #1024	; 0x400
   11ec0:	mov	r3, r9
   11ec4:	str	r0, [sp]
   11ec8:	mov	r0, r5
   11ecc:	ldr	r2, [pc, #36]	; 11ef8 <maybe_read_string+0x190>
   11ed0:	add	r2, pc, r2
   11ed4:	bl	4c4c <snprintf@plt>
   11ed8:	ldr	r2, [r4, #24]
   11edc:	ldr	r1, [r4, #36]	; 0x24
   11ee0:	mov	r0, r5
   11ee4:	blx	r2
   11ee8:	b	11dc4 <maybe_read_string+0x5c>
   11eec:	nop	{0}
   11ef0:	.word	0x00000000
   11ef4:	.word	0x40d38800
   11ef8:	.word	0x00012a79

00011efc <maybe_read_double>:
   11efc:	push	{r4, r5, r6, sl, fp, lr}
   11f00:	add	fp, sp, #16
   11f04:	sub	sp, sp, #8
   11f08:	mov	r4, r2
   11f0c:	mov	r5, r1
   11f10:	add	r1, sp, #7
   11f14:	mov	r2, #1
   11f18:	mov	r6, r0
   11f1c:	bl	10ae4 <read_bytes>
   11f20:	mov	r1, r0
   11f24:	mov	r0, #5
   11f28:	cmp	r1, #1
   11f2c:	bne	11f84 <maybe_read_double+0x88>
   11f30:	ldrb	r2, [sp, #7]
   11f34:	add	r0, r6, r2, lsl #1
   11f38:	ldrh	r0, [r0, #94]	; 0x5e
   11f3c:	cmp	r0, #90	; 0x5a
   11f40:	bne	11f6c <maybe_read_double+0x70>
   11f44:	cmp	r5, #0
   11f48:	movwne	r1, #0
   11f4c:	movne	r0, #0
   11f50:	movtne	r1, #32760	; 0x7ff8
   11f54:	strdne	r0, [r5]
   11f58:	cmp	r4, #0
   11f5c:	mov	r0, #0
   11f60:	movne	r1, #1
   11f64:	strne	r1, [r4]
   11f68:	b	11f84 <maybe_read_double+0x88>
   11f6c:	cmp	r4, #0
   11f70:	mov	r1, r5
   11f74:	movne	r0, #0
   11f78:	strne	r0, [r4]
   11f7c:	mov	r0, r6
   11f80:	bl	11f8c <read_double_with_peek>
   11f84:	sub	sp, fp, #16
   11f88:	pop	{r4, r5, r6, sl, fp, pc}

00011f8c <read_double_with_peek>:
   11f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f90:	add	fp, sp, #28
   11f94:	sub	sp, sp, #436	; 0x1b4
   11f98:	sub	sp, sp, #1024	; 0x400
   11f9c:	movw	r7, #0
   11fa0:	mov	r5, r0
   11fa4:	mov	r0, #0
   11fa8:	sub	r4, fp, #140	; 0x8c
   11fac:	mov	r9, r1
   11fb0:	strb	r2, [fp, #-140]	; 0xffffff74
   11fb4:	mov	r2, #1
   11fb8:	movt	r7, #32760	; 0x7ff8
   11fbc:	str	r0, [fp, #-40]	; 0xffffffd8
   11fc0:	add	r1, r4, #1
   11fc4:	mov	r0, r5
   11fc8:	str	r7, [fp, #-36]	; 0xffffffdc
   11fcc:	bl	10ae4 <read_bytes>
   11fd0:	mov	r8, #5
   11fd4:	cmp	r0, #1
   11fd8:	bne	12144 <read_double_with_peek+0x1b8>
   11fdc:	ldrb	r0, [fp, #-140]	; 0xffffff74
   11fe0:	add	r0, r5, r0, lsl #1
   11fe4:	ldrh	r0, [r0, #94]	; 0x5e
   11fe8:	cmp	r0, #42	; 0x2a
   11fec:	bne	12018 <read_double_with_peek+0x8c>
   11ff0:	ldrb	r0, [fp, #-139]	; 0xffffff75
   11ff4:	add	r0, r5, r0, lsl #1
   11ff8:	ldrh	r0, [r0, #94]	; 0x5e
   11ffc:	cmp	r0, #46	; 0x2e
   12000:	bne	12018 <read_double_with_peek+0x8c>
   12004:	mov	r8, #0
   12008:	cmp	r9, #0
   1200c:	strne	r8, [r9]
   12010:	strne	r7, [r9, #4]
   12014:	b	12144 <read_double_with_peek+0x1b8>
   12018:	mov	r7, #0
   1201c:	mov	r6, #2
   12020:	add	r1, r4, r6
   12024:	ldrb	r0, [r1, #-1]
   12028:	add	r0, r5, r0, lsl #1
   1202c:	ldrh	r0, [r0, #94]	; 0x5e
   12030:	cmp	r0, #47	; 0x2f
   12034:	beq	1206c <read_double_with_peek+0xe0>
   12038:	mov	r0, r5
   1203c:	mov	r2, #1
   12040:	bl	10ae4 <read_bytes>
   12044:	cmp	r0, #1
   12048:	bne	12144 <read_double_with_peek+0x1b8>
   1204c:	adds	r6, r6, #1
   12050:	adc	r7, r7, #0
   12054:	subs	r0, r6, #100	; 0x64
   12058:	sbcs	r0, r7, #0
   1205c:	bcc	12020 <read_double_with_peek+0x94>
   12060:	eor	r0, r6, #100	; 0x64
   12064:	orrs	r0, r0, r7
   12068:	beq	12144 <read_double_with_peek+0x1b8>
   1206c:	add	r0, r5, #94	; 0x5e
   12070:	sub	r4, fp, #140	; 0x8c
   12074:	sub	r2, fp, #440	; 0x1b8
   12078:	mov	r1, r6
   1207c:	mov	r3, #300	; 0x12c
   12080:	str	r0, [sp]
   12084:	mov	r0, r4
   12088:	bl	4c28 <por_utf8_encode@plt>
   1208c:	ldr	r3, [r5, #24]
   12090:	cmn	r0, #1
   12094:	beq	120f8 <read_double_with_peek+0x16c>
   12098:	mov	sl, r0
   1209c:	ldr	r0, [r5, #36]	; 0x24
   120a0:	sub	r6, fp, #440	; 0x1b8
   120a4:	sub	r2, fp, #40	; 0x28
   120a8:	mov	r1, sl
   120ac:	str	r0, [sp]
   120b0:	mov	r0, r6
   120b4:	bl	4c1c <readstat_por_parse_double@plt>
   120b8:	mov	r8, #0
   120bc:	cmn	r0, #1
   120c0:	bne	12138 <read_double_with_peek+0x1ac>
   120c4:	ldr	r0, [r5, #24]
   120c8:	mov	r8, #5
   120cc:	cmp	r0, #0
   120d0:	beq	12138 <read_double_with_peek+0x1ac>
   120d4:	asr	r0, sl, #31
   120d8:	str	sl, [sp]
   120dc:	stmib	sp, {r0, sl}
   120e0:	str	r6, [sp, #12]
   120e4:	str	r4, [sp, #16]
   120e8:	add	r6, sp, #24
   120ec:	ldr	r2, [pc, #96]	; 12154 <read_double_with_peek+0x1c8>
   120f0:	add	r2, pc, r2
   120f4:	b	1211c <read_double_with_peek+0x190>
   120f8:	mov	r8, #16
   120fc:	cmp	r3, #0
   12100:	beq	12138 <read_double_with_peek+0x1ac>
   12104:	stm	sp, {r6, r7}
   12108:	str	r6, [sp, #8]
   1210c:	str	r4, [sp, #12]
   12110:	add	r6, sp, #24
   12114:	ldr	r2, [pc, #52]	; 12150 <read_double_with_peek+0x1c4>
   12118:	add	r2, pc, r2
   1211c:	mov	r0, r6
   12120:	mov	r1, #1024	; 0x400
   12124:	bl	4c4c <snprintf@plt>
   12128:	ldr	r2, [r5, #24]
   1212c:	ldr	r1, [r5, #36]	; 0x24
   12130:	mov	r0, r6
   12134:	blx	r2
   12138:	cmp	r9, #0
   1213c:	vldrne	d16, [fp, #-40]	; 0xffffffd8
   12140:	vstrne	d16, [r9]
   12144:	mov	r0, r8
   12148:	sub	sp, fp, #28
   1214c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12150:	.word	0x0001284f
   12154:	.word	0x000128aa

00012158 <read_integer_in_range>:
   12158:	push	{r4, r5, fp, lr}
   1215c:	add	fp, sp, #8
   12160:	vpush	{d8}
   12164:	sub	sp, sp, #8
   12168:	mov	r5, r1
   1216c:	movw	r1, #0
   12170:	mov	r4, r2
   12174:	movt	r1, #32760	; 0x7ff8
   12178:	str	r1, [sp, #4]
   1217c:	mov	r1, #0
   12180:	str	r1, [sp]
   12184:	mov	r1, sp
   12188:	bl	121ec <read_double>
   1218c:	cmp	r0, #0
   12190:	bne	121e0 <read_integer_in_range+0x88>
   12194:	vldr	d8, [sp]
   12198:	vorr	d0, d8, d8
   1219c:	bl	4d00 <__isnan@plt>
   121a0:	vmov	s0, r5
   121a4:	mov	r1, r0
   121a8:	mov	r0, #5
   121ac:	vcvt.f64.s32	d16, s0
   121b0:	vcmpe.f64	d8, d16
   121b4:	vmrs	APSR_nzcv, fpscr
   121b8:	bgt	121e0 <read_integer_in_range+0x88>
   121bc:	vcmpe.f64	d8, #0.0
   121c0:	vmrs	APSR_nzcv, fpscr
   121c4:	bmi	121e0 <read_integer_in_range+0x88>
   121c8:	cmp	r1, #0
   121cc:	bne	121e0 <read_integer_in_range+0x88>
   121d0:	cmp	r4, #0
   121d4:	mov	r0, #0
   121d8:	vcvtne.s32.f64	s0, d8
   121dc:	vstrne	s0, [r4]
   121e0:	sub	sp, fp, #16
   121e4:	vpop	{d8}
   121e8:	pop	{r4, r5, fp, pc}

000121ec <read_double>:
   121ec:	push	{r4, r5, fp, lr}
   121f0:	add	fp, sp, #8
   121f4:	sub	sp, sp, #8
   121f8:	mov	r4, r1
   121fc:	add	r1, sp, #7
   12200:	mov	r2, #1
   12204:	mov	r5, r0
   12208:	bl	10ae4 <read_bytes>
   1220c:	mov	r1, r0
   12210:	mov	r0, #5
   12214:	cmp	r1, #1
   12218:	bne	1222c <read_double+0x40>
   1221c:	ldrb	r2, [sp, #7]
   12220:	mov	r0, r5
   12224:	mov	r1, r4
   12228:	bl	11f8c <read_double_with_peek>
   1222c:	sub	sp, fp, #8
   12230:	pop	{r4, r5, fp, pc}
   12234:	andeq	r0, r0, r0

00012238 <readstat_begin_writing_por>:
   12238:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1223c:	add	fp, sp, #24
   12240:	ldr	ip, [pc, #156]	; 122e4 <readstat_begin_writing_por+0xac>
   12244:	ldr	r3, [pc, #156]	; 122e8 <readstat_begin_writing_por+0xb0>
   12248:	add	r3, pc, r3
   1224c:	add	ip, pc, ip
   12250:	str	r3, [r0, #292]	; 0x124
   12254:	ldr	r3, [pc, #144]	; 122ec <readstat_begin_writing_por+0xb4>
   12258:	ldr	lr, [pc, #144]	; 122f0 <readstat_begin_writing_por+0xb8>
   1225c:	ldr	r4, [pc, #144]	; 122f4 <readstat_begin_writing_por+0xbc>
   12260:	ldr	r5, [pc, #144]	; 122f8 <readstat_begin_writing_por+0xc0>
   12264:	ldr	r6, [pc, #144]	; 122fc <readstat_begin_writing_por+0xc4>
   12268:	ldr	r7, [pc, #144]	; 12300 <readstat_begin_writing_por+0xc8>
   1226c:	ldr	r8, [pc, #144]	; 12304 <readstat_begin_writing_por+0xcc>
   12270:	str	ip, [r0, #228]	; 0xe4
   12274:	add	r3, pc, r3
   12278:	add	lr, pc, lr
   1227c:	add	r4, pc, r4
   12280:	add	r5, pc, r5
   12284:	add	r6, pc, r6
   12288:	add	r7, pc, r7
   1228c:	add	r8, pc, r8
   12290:	str	r3, [r0, #232]	; 0xe8
   12294:	add	r3, r0, #240	; 0xf0
   12298:	str	lr, [r0, #236]	; 0xec
   1229c:	stm	r3, {r4, r5, r6, r7, r8}
   122a0:	ldr	r3, [pc, #96]	; 12308 <readstat_begin_writing_por+0xd0>
   122a4:	ldr	r7, [pc, #96]	; 1230c <readstat_begin_writing_por+0xd4>
   122a8:	add	r3, pc, r3
   122ac:	add	r7, pc, r7
   122b0:	str	r3, [r0, #264]	; 0x108
   122b4:	str	r7, [r0, #268]	; 0x10c
   122b8:	ldr	r3, [pc, #80]	; 12310 <readstat_begin_writing_por+0xd8>
   122bc:	ldr	r7, [pc, #80]	; 12314 <readstat_begin_writing_por+0xdc>
   122c0:	ldr	r6, [pc, #80]	; 12318 <readstat_begin_writing_por+0xe0>
   122c4:	add	r3, pc, r3
   122c8:	add	r7, pc, r7
   122cc:	add	r6, pc, r6
   122d0:	str	r3, [r0, #276]	; 0x114
   122d4:	str	r7, [r0, #280]	; 0x118
   122d8:	str	r6, [r0, #284]	; 0x11c
   122dc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   122e0:	b	494c <readstat_begin_writing_file@plt>
   122e4:	.word	0x000000d8
   122e8:	.word	0x000000cc
   122ec:	.word	0x000000c4
   122f0:	.word	0x0000017c
   122f4:	.word	0x000001a4
   122f8:	.word	0x000001cc
   122fc:	.word	0x000001f4
   12300:	.word	0x00000218
   12304:	.word	0x00000238
   12308:	.word	0x000002a4
   1230c:	.word	0x000002cc
   12310:	.word	0x000002e4
   12314:	.word	0x00001028
   12318:	.word	0x00001074

0001231c <por_metadata_ok>:
   1231c:	ldr	r0, [r0, #16]
   12320:	cmp	r0, #0
   12324:	movwne	r0, #6
   12328:	bx	lr

0001232c <por_variable_width>:
   1232c:	mov	r2, #54	; 0x36
   12330:	cmp	r0, #0
   12334:	addeq	r2, r1, #54	; 0x36
   12338:	mov	r0, r2
   1233c:	bx	lr

00012340 <por_variable_ok>:
   12340:	push	{r4, sl, fp, lr}
   12344:	add	fp, sp, #8
   12348:	bl	4d30 <readstat_variable_get_name@plt>
   1234c:	mov	r4, r0
   12350:	bl	4bd4 <strlen@plt>
   12354:	sub	r1, r0, #1
   12358:	mov	r0, #28
   1235c:	cmp	r1, #7
   12360:	pophi	{r4, sl, fp, pc}
   12364:	ldrb	r3, [r4]
   12368:	cmp	r3, #0
   1236c:	beq	123dc <por_variable_ok+0x9c>
   12370:	movw	lr, #2051	; 0x803
   12374:	add	r1, r4, #1
   12378:	mvn	r2, #34	; 0x22
   1237c:	mov	ip, #1
   12380:	mov	r0, r3
   12384:	movt	lr, #8192	; 0x2000
   12388:	b	123a0 <por_variable_ok+0x60>
   1238c:	uxtb	r0, r0
   12390:	cmp	r0, #95	; 0x5f
   12394:	movne	r0, #26
   12398:	popne	{r4, sl, fp, pc}
   1239c:	b	123d0 <por_variable_ok+0x90>
   123a0:	sub	r4, r0, #65	; 0x41
   123a4:	uxtb	r4, r4
   123a8:	cmp	r4, #26
   123ac:	subcs	r4, r0, #48	; 0x30
   123b0:	uxtbcs	r4, r4
   123b4:	cmpcs	r4, #10
   123b8:	bcc	123d0 <por_variable_ok+0x90>
   123bc:	uxtab	r4, r2, r0
   123c0:	cmp	r4, #29
   123c4:	bhi	1238c <por_variable_ok+0x4c>
   123c8:	tst	lr, ip, lsl r4
   123cc:	beq	1238c <por_variable_ok+0x4c>
   123d0:	ldrb	r0, [r1], #1
   123d4:	cmp	r0, #0
   123d8:	bne	123a0 <por_variable_ok+0x60>
   123dc:	sub	r0, r3, #65	; 0x41
   123e0:	mov	r1, #25
   123e4:	uxtb	r0, r0
   123e8:	cmp	r0, #26
   123ec:	movwcc	r1, #0
   123f0:	subs	r0, r3, #64	; 0x40
   123f4:	movne	r0, r1
   123f8:	pop	{r4, sl, fp, pc}

000123fc <por_write_int8_value>:
   123fc:	push	{fp, lr}
   12400:	mov	fp, sp
   12404:	vmov	s0, r2
   12408:	mov	r1, #54	; 0x36
   1240c:	vcvt.f64.s32	d0, s0
   12410:	bl	133b4 <por_write_double_to_buffer>
   12414:	mov	r1, #0
   12418:	cmn	r0, #1
   1241c:	movweq	r1, #13
   12420:	mov	r0, r1
   12424:	pop	{fp, pc}

00012428 <por_write_int16_value>:
   12428:	push	{fp, lr}
   1242c:	mov	fp, sp
   12430:	vmov	s0, r2
   12434:	mov	r1, #54	; 0x36
   12438:	vcvt.f64.s32	d0, s0
   1243c:	bl	133b4 <por_write_double_to_buffer>
   12440:	mov	r1, #0
   12444:	cmn	r0, #1
   12448:	movweq	r1, #13
   1244c:	mov	r0, r1
   12450:	pop	{fp, pc}

00012454 <por_write_int32_value>:
   12454:	push	{fp, lr}
   12458:	mov	fp, sp
   1245c:	vmov	s0, r2
   12460:	mov	r1, #54	; 0x36
   12464:	vcvt.f64.s32	d0, s0
   12468:	bl	133b4 <por_write_double_to_buffer>
   1246c:	mov	r1, #0
   12470:	cmn	r0, #1
   12474:	movweq	r1, #13
   12478:	mov	r0, r1
   1247c:	pop	{fp, pc}

00012480 <por_write_float_value>:
   12480:	push	{fp, lr}
   12484:	mov	fp, sp
   12488:	vcvt.f64.f32	d0, s0
   1248c:	mov	r1, #54	; 0x36
   12490:	bl	133b4 <por_write_double_to_buffer>
   12494:	mov	r1, #0
   12498:	cmn	r0, #1
   1249c:	movweq	r1, #13
   124a0:	mov	r0, r1
   124a4:	pop	{fp, pc}

000124a8 <por_write_double_value>:
   124a8:	push	{fp, lr}
   124ac:	mov	fp, sp
   124b0:	mov	r1, #54	; 0x36
   124b4:	bl	133b4 <por_write_double_to_buffer>
   124b8:	mov	r1, #0
   124bc:	cmn	r0, #1
   124c0:	movweq	r1, #13
   124c4:	mov	r0, r1
   124c8:	pop	{fp, pc}

000124cc <por_write_string_value>:
   124cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   124d0:	add	fp, sp, #24
   124d4:	mov	r8, r0
   124d8:	mov	r0, r2
   124dc:	mov	r4, r2
   124e0:	mov	r5, r1
   124e4:	bl	4bd4 <strlen@plt>
   124e8:	mov	r7, r0
   124ec:	cmp	r0, #0
   124f0:	mov	r6, r0
   124f4:	mov	r0, r5
   124f8:	movweq	r6, #1
   124fc:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   12500:	cmp	r6, r0
   12504:	mov	r1, #54	; 0x36
   12508:	movhi	r6, r0
   1250c:	mov	r0, r8
   12510:	vmov	s0, r6
   12514:	vcvt.f64.u32	d0, s0
   12518:	bl	133b4 <por_write_double_to_buffer>
   1251c:	cmn	r0, #1
   12520:	moveq	r0, #13
   12524:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12528:	ldr	r1, [pc, #32]	; 12550 <por_write_string_value+0x84>
   1252c:	cmp	r7, #0
   12530:	add	r0, r8, r0
   12534:	mov	r2, r6
   12538:	add	r1, pc, r1
   1253c:	moveq	r4, r1
   12540:	mov	r1, r4
   12544:	bl	4c94 <strncpy@plt>
   12548:	mov	r0, #0
   1254c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12550:	.word	0x00012546

00012554 <por_write_missing_string>:
   12554:	push	{fp, lr}
   12558:	mov	fp, sp
   1255c:	mov	r1, #54	; 0x36
   12560:	vmov.i32	d0, #0	; 0x00000000
   12564:	bl	133b4 <por_write_double_to_buffer>
   12568:	mov	r1, #0
   1256c:	cmn	r0, #1
   12570:	movweq	r1, #13
   12574:	mov	r0, r1
   12578:	pop	{fp, pc}
   1257c:	nop	{0}

00012580 <por_write_missing_number>:
   12580:	push	{fp, lr}
   12584:	mov	fp, sp
   12588:	vldr	d0, [pc, #24]	; 125a8 <por_write_missing_number+0x28>
   1258c:	mov	r1, #54	; 0x36
   12590:	bl	133b4 <por_write_double_to_buffer>
   12594:	mov	r1, #0
   12598:	cmn	r0, #1
   1259c:	movweq	r1, #13
   125a0:	mov	r0, r1
   125a4:	pop	{fp, pc}
   125a8:	.word	0x00000000
   125ac:	.word	0x7ff80000

000125b0 <por_begin_data>:
   125b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125b4:	add	fp, sp, #28
   125b8:	sub	sp, sp, #4
   125bc:	vpush	{d8-d9}
   125c0:	sub	sp, sp, #520	; 0x208
   125c4:	mov	r9, r0
   125c8:	mov	r0, #1
   125cc:	mov	r1, #8
   125d0:	bl	4778 <calloc@plt>
   125d4:	ldr	r4, [pc, #3320]	; 132d4 <por_begin_data+0xd24>
   125d8:	mov	sl, r0
   125dc:	vmov.i32	q8, #0	; 0x00000000
   125e0:	mov	r0, #0
   125e4:	ldr	r4, [pc, r4]
   125e8:	add	r1, r4, r0
   125ec:	add	r0, r0, #16
   125f0:	vld1.16	{d18-d19}, [r1]
   125f4:	cmp	r0, #512	; 0x200
   125f8:	vmax.u16	q8, q9, q8
   125fc:	bne	125e8 <por_begin_data+0x38>
   12600:	vext.8	q9, q8, q8, #8
   12604:	vmax.u16	q8, q8, q9
   12608:	vext.8	q9, q8, q8, #4
   1260c:	vmax.u16	q8, q8, q9
   12610:	vdup.16	q9, d16[1]
   12614:	vmax.u16	q8, q8, q9
   12618:	vmov.u16	r0, d16[0]
   1261c:	add	r6, r0, #1
   12620:	mov	r0, r6
   12624:	bl	4af0 <malloc@plt>
   12628:	stm	sl, {r0, r6}
   1262c:	mov	r1, #0
   12630:	ldr	r5, [pc, #3232]	; 132d8 <por_begin_data+0xd28>
   12634:	ldr	r5, [pc, r5]
   12638:	add	r2, r5, r1
   1263c:	ldrh	r7, [r4]
   12640:	add	r1, r1, #1
   12644:	add	r4, r4, #2
   12648:	ldrsb	r2, [r2]
   1264c:	cmp	r7, #0
   12650:	uxtb	r3, r2
   12654:	strbne	r3, [r0, r7]
   12658:	cmp	r3, #0
   1265c:	strbne	r3, [r0, r2]
   12660:	cmp	r1, #256	; 0x100
   12664:	bne	12638 <por_begin_data+0x88>
   12668:	add	r4, r9, #88	; 0x58
   1266c:	mov	r0, r4
   12670:	bl	4bd4 <strlen@plt>
   12674:	sub	r7, fp, #272	; 0x110
   12678:	mov	r6, r0
   1267c:	mov	r1, #48	; 0x30
   12680:	mov	r2, #200	; 0xc8
   12684:	mov	r0, r7
   12688:	bl	4c70 <memset@plt>
   1268c:	ldr	r0, [pc, #3144]	; 132dc <por_begin_data+0xd2c>
   12690:	mov	r1, r4
   12694:	mov	r2, #20
   12698:	add	r0, pc, r0
   1269c:	vld1.64	{d16-d17}, [r0]
   126a0:	add	r0, r7, #40	; 0x28
   126a4:	add	r7, r7, #60	; 0x3c
   126a8:	vst1.64	{d16-d17}, [r0]
   126ac:	movw	r0, #18758	; 0x4946
   126b0:	movt	r0, #17740	; 0x454c
   126b4:	str	r0, [fp, #-216]	; 0xffffff28
   126b8:	mov	r0, r7
   126bc:	bl	4c94 <strncpy@plt>
   126c0:	cmp	r6, #19
   126c4:	bhi	126d8 <por_begin_data+0x128>
   126c8:	add	r0, r7, r6
   126cc:	rsb	r2, r6, #20
   126d0:	mov	r1, #32
   126d4:	bl	4c70 <memset@plt>
   126d8:	ldr	r4, [pc, #3072]	; 132e0 <por_begin_data+0xd30>
   126dc:	sub	r1, fp, #272	; 0x110
   126e0:	mov	r0, r9
   126e4:	mov	r2, #200	; 0xc8
   126e8:	mov	r3, #80	; 0x50
   126ec:	add	r4, pc, r4
   126f0:	str	r4, [sp]
   126f4:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   126f8:	add	r6, sp, #40	; 0x28
   126fc:	mov	r1, #48	; 0x30
   12700:	mov	r2, #256	; 0x100
   12704:	mov	r0, r6
   12708:	bl	4c70 <memset@plt>
   1270c:	mov	r0, #0
   12710:	ldrb	r1, [r5, r0]
   12714:	cmp	r1, #0
   12718:	strbne	r1, [r6, r0]
   1271c:	add	r0, r0, #1
   12720:	cmp	r0, #256	; 0x100
   12724:	bne	12710 <por_begin_data+0x160>
   12728:	add	r1, sp, #40	; 0x28
   1272c:	mov	r0, r9
   12730:	mov	r2, #256	; 0x100
   12734:	mov	r3, #80	; 0x50
   12738:	str	r4, [sp]
   1273c:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   12740:	cmp	r0, #0
   12744:	beq	12758 <por_begin_data+0x1a8>
   12748:	mov	r8, r0
   1274c:	b	1277c <por_begin_data+0x1cc>
   12750:	.word	0x00000000
   12754:	.word	0x40490000
   12758:	ldr	r2, [pc, #2948]	; 132e4 <por_begin_data+0xd34>
   1275c:	mov	r0, r9
   12760:	mov	r1, sl
   12764:	mov	r3, #8
   12768:	add	r2, pc, r2
   1276c:	bl	1372c <por_write_string_n>
   12770:	mov	r8, r0
   12774:	cmp	r0, #0
   12778:	beq	12798 <por_begin_data+0x1e8>
   1277c:	mov	r0, sl
   12780:	bl	13704 <por_write_ctx_free>
   12784:	mov	r0, r8
   12788:	sub	sp, fp, #48	; 0x30
   1278c:	vpop	{d8-d9}
   12790:	add	sp, sp, #4
   12794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12798:	add	r0, r9, #20
   1279c:	bl	4b44 <localtime@plt>
   127a0:	cmp	r0, #0
   127a4:	beq	13054 <por_begin_data+0xaa4>
   127a8:	mov	r7, r0
   127ac:	mov	r0, #65	; 0x41
   127b0:	sub	r2, fp, #66	; 0x42
   127b4:	mov	r1, sl
   127b8:	mov	r3, #1
   127bc:	strh	r0, [fp, #-66]	; 0xffffffbe
   127c0:	mov	r0, r9
   127c4:	bl	1372c <por_write_string_n>
   127c8:	mov	r8, r0
   127cc:	cmp	r0, #0
   127d0:	bne	1277c <por_begin_data+0x1cc>
   127d4:	add	r2, r7, #12
   127d8:	movw	r4, #34079	; 0x851f
   127dc:	mov	r5, #100	; 0x64
   127e0:	ldm	r2, {r0, r1, r2}
   127e4:	movt	r4, #20971	; 0x51eb
   127e8:	umull	r3, r6, r0, r4
   127ec:	add	r1, r1, #1
   127f0:	lsr	r3, r6, #5
   127f4:	mls	r0, r3, r5, r0
   127f8:	umull	r3, r6, r1, r4
   127fc:	lsr	r3, r6, #5
   12800:	str	r0, [sp, #4]
   12804:	movw	r0, #1900	; 0x76c
   12808:	add	r6, sp, #40	; 0x28
   1280c:	mls	r1, r3, r5, r1
   12810:	add	r0, r2, r0
   12814:	str	r1, [sp]
   12818:	movw	r1, #5977	; 0x1759
   1281c:	movt	r1, #53687	; 0xd1b7
   12820:	umull	r1, r2, r0, r1
   12824:	lsr	r1, r2, #13
   12828:	movw	r2, #10000	; 0x2710
   1282c:	mls	r3, r1, r2, r0
   12830:	ldr	r2, [pc, #2736]	; 132e8 <por_begin_data+0xd38>
   12834:	mov	r0, r6
   12838:	mov	r1, #9
   1283c:	add	r2, pc, r2
   12840:	bl	4c4c <snprintf@plt>
   12844:	mov	r0, r6
   12848:	bl	4bd4 <strlen@plt>
   1284c:	mov	r3, r0
   12850:	mov	r0, r9
   12854:	mov	r1, sl
   12858:	mov	r2, r6
   1285c:	bl	1380c <por_write_string_field_n>
   12860:	mov	r8, r0
   12864:	cmp	r0, #0
   12868:	bne	1277c <por_begin_data+0x1cc>
   1286c:	ldm	r7, {r0, r1, r2}
   12870:	umull	r3, r7, r0, r4
   12874:	lsr	r3, r7, #5
   12878:	mls	r0, r3, r5, r0
   1287c:	umull	r3, r7, r1, r4
   12880:	lsr	r3, r7, #5
   12884:	str	r0, [sp, #4]
   12888:	sub	r7, fp, #272	; 0x110
   1288c:	mls	r1, r3, r5, r1
   12890:	str	r1, [sp]
   12894:	umull	r0, r1, r2, r4
   12898:	lsr	r0, r1, #5
   1289c:	mov	r1, #7
   128a0:	mls	r3, r0, r5, r2
   128a4:	ldr	r2, [pc, #2624]	; 132ec <por_begin_data+0xd3c>
   128a8:	mov	r0, r7
   128ac:	add	r2, pc, r2
   128b0:	bl	4c4c <snprintf@plt>
   128b4:	mov	r0, r7
   128b8:	bl	4bd4 <strlen@plt>
   128bc:	mov	r3, r0
   128c0:	mov	r0, r9
   128c4:	mov	r1, sl
   128c8:	mov	r2, r7
   128cc:	bl	1380c <por_write_string_field_n>
   128d0:	mov	r8, r0
   128d4:	cmp	r0, #0
   128d8:	bne	1277c <por_begin_data+0x1cc>
   128dc:	mov	r0, #49	; 0x31
   128e0:	sub	r2, fp, #66	; 0x42
   128e4:	mov	r1, sl
   128e8:	mov	r3, #1
   128ec:	strh	r0, [fp, #-66]	; 0xffffffbe
   128f0:	mov	r0, r9
   128f4:	bl	1372c <por_write_string_n>
   128f8:	mov	r8, r0
   128fc:	cmp	r0, #0
   12900:	bne	1277c <por_begin_data+0x1cc>
   12904:	ldr	r2, [pc, #2532]	; 132f0 <por_begin_data+0xd40>
   12908:	mov	r0, r9
   1290c:	mov	r1, sl
   12910:	mov	r3, #8
   12914:	add	r2, pc, r2
   12918:	bl	1380c <por_write_string_field_n>
   1291c:	mov	r8, r0
   12920:	cmp	r0, #0
   12924:	bne	1277c <por_begin_data+0x1cc>
   12928:	mov	r0, #51	; 0x33
   1292c:	sub	r2, fp, #66	; 0x42
   12930:	mov	r1, sl
   12934:	mov	r3, #1
   12938:	strh	r0, [fp, #-66]	; 0xffffffbe
   1293c:	mov	r0, r9
   12940:	bl	1372c <por_write_string_n>
   12944:	mov	r8, r0
   12948:	cmp	r0, #0
   1294c:	bne	1277c <por_begin_data+0x1cc>
   12950:	ldr	r2, [pc, #2460]	; 132f4 <por_begin_data+0xd44>
   12954:	mov	r0, r9
   12958:	mov	r1, sl
   1295c:	mov	r3, #37	; 0x25
   12960:	add	r2, pc, r2
   12964:	bl	1380c <por_write_string_field_n>
   12968:	mov	r8, r0
   1296c:	cmp	r0, #0
   12970:	bne	1277c <por_begin_data+0x1cc>
   12974:	mov	r0, #52	; 0x34
   12978:	sub	r2, fp, #66	; 0x42
   1297c:	mov	r1, sl
   12980:	mov	r3, #1
   12984:	strh	r0, [fp, #-66]	; 0xffffffbe
   12988:	mov	r0, r9
   1298c:	bl	1372c <por_write_string_n>
   12990:	mov	r8, r0
   12994:	cmp	r0, #0
   12998:	bne	1277c <por_begin_data+0x1cc>
   1299c:	vldr	s0, [r9, #28]
   129a0:	mov	r0, r9
   129a4:	mov	r1, sl
   129a8:	vcvt.f64.s32	d0, s0
   129ac:	bl	13850 <por_write_double>
   129b0:	mov	r8, r0
   129b4:	cmp	r0, #0
   129b8:	bne	1277c <por_begin_data+0x1cc>
   129bc:	mov	r0, #53	; 0x35
   129c0:	sub	r2, fp, #66	; 0x42
   129c4:	mov	r1, sl
   129c8:	mov	r3, #1
   129cc:	strh	r0, [fp, #-66]	; 0xffffffbe
   129d0:	mov	r0, r9
   129d4:	bl	1372c <por_write_string_n>
   129d8:	mov	r8, r0
   129dc:	cmp	r0, #0
   129e0:	bne	1277c <por_begin_data+0x1cc>
   129e4:	vldr	d0, [pc, #-668]	; 12750 <por_begin_data+0x1a0>
   129e8:	mov	r0, r9
   129ec:	mov	r1, sl
   129f0:	bl	13850 <por_write_double>
   129f4:	mov	r8, r0
   129f8:	cmp	r0, #0
   129fc:	bne	1277c <por_begin_data+0x1cc>
   12a00:	ldr	r0, [r9, #224]	; 0xe0
   12a04:	cmp	r0, #0
   12a08:	beq	12a64 <por_begin_data+0x4b4>
   12a0c:	mov	r0, #54	; 0x36
   12a10:	sub	r2, fp, #66	; 0x42
   12a14:	mov	r1, sl
   12a18:	mov	r3, #1
   12a1c:	strh	r0, [fp, #-66]	; 0xffffffbe
   12a20:	mov	r0, r9
   12a24:	bl	1372c <por_write_string_n>
   12a28:	mov	r8, r0
   12a2c:	cmp	r0, #0
   12a30:	bne	1277c <por_begin_data+0x1cc>
   12a34:	ldr	r0, [r9, #224]	; 0xe0
   12a38:	bl	4d30 <readstat_variable_get_name@plt>
   12a3c:	mov	r4, r0
   12a40:	bl	4bd4 <strlen@plt>
   12a44:	mov	r3, r0
   12a48:	mov	r0, r9
   12a4c:	mov	r1, sl
   12a50:	mov	r2, r4
   12a54:	bl	1380c <por_write_string_field_n>
   12a58:	mov	r8, r0
   12a5c:	cmp	r0, #0
   12a60:	bne	1277c <por_begin_data+0x1cc>
   12a64:	ldr	r0, [r9, #28]
   12a68:	cmp	r0, #1
   12a6c:	blt	13040 <por_begin_data+0xa90>
   12a70:	add	r0, r7, #8
   12a74:	str	r0, [sp, #28]
   12a78:	add	r0, r6, #8
   12a7c:	str	r0, [sp, #24]
   12a80:	mov	r0, #0
   12a84:	str	r0, [sp, #12]
   12a88:	ldr	r1, [sp, #12]
   12a8c:	mov	r0, r9
   12a90:	bl	4d48 <readstat_get_variable@plt>
   12a94:	str	r0, [sp, #36]	; 0x24
   12a98:	bl	4d30 <readstat_variable_get_name@plt>
   12a9c:	mov	r4, r0
   12aa0:	mov	r0, #55	; 0x37
   12aa4:	mov	r1, sl
   12aa8:	sub	r2, fp, #66	; 0x42
   12aac:	mov	r3, #1
   12ab0:	strh	r0, [fp, #-66]	; 0xffffffbe
   12ab4:	mov	r0, r9
   12ab8:	bl	1372c <por_write_string_n>
   12abc:	cmp	r0, #0
   12ac0:	bne	12748 <por_begin_data+0x198>
   12ac4:	ldr	r0, [sp, #36]	; 0x24
   12ac8:	ldr	r1, [r0]
   12acc:	mov	r0, #0
   12ad0:	cmp	r1, #0
   12ad4:	mov	r1, sl
   12ad8:	ldreq	r0, [sp, #36]	; 0x24
   12adc:	ldreq	r0, [r0, #1600]	; 0x640
   12ae0:	vmov	s0, r0
   12ae4:	mov	r0, r9
   12ae8:	vcvt.f64.u32	d0, s0
   12aec:	bl	13850 <por_write_double>
   12af0:	cmp	r0, #0
   12af4:	bne	12748 <por_begin_data+0x198>
   12af8:	mov	r0, r4
   12afc:	bl	4bd4 <strlen@plt>
   12b00:	mov	r3, r0
   12b04:	mov	r0, r9
   12b08:	mov	r1, sl
   12b0c:	mov	r2, r4
   12b10:	bl	1380c <por_write_string_field_n>
   12b14:	cmp	r0, #0
   12b18:	bne	12748 <por_begin_data+0x198>
   12b1c:	ldr	r0, [sp, #36]	; 0x24
   12b20:	sub	r1, fp, #64	; 0x40
   12b24:	bl	4ad8 <spss_format_for_variable@plt>
   12b28:	cmp	r0, #0
   12b2c:	bne	12748 <por_begin_data+0x198>
   12b30:	mov	r0, r9
   12b34:	mov	r1, sl
   12b38:	sub	r2, fp, #64	; 0x40
   12b3c:	bl	138f0 <por_emit_format>
   12b40:	cmp	r0, #0
   12b44:	bne	12748 <por_begin_data+0x198>
   12b48:	mov	r0, r9
   12b4c:	mov	r1, sl
   12b50:	sub	r2, fp, #64	; 0x40
   12b54:	bl	138f0 <por_emit_format>
   12b58:	cmp	r0, #0
   12b5c:	bne	12748 <por_begin_data+0x198>
   12b60:	ldr	r0, [sp, #36]	; 0x24
   12b64:	ldr	r4, [r0]
   12b68:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   12b6c:	cmp	r4, #5
   12b70:	str	r0, [sp, #32]
   12b74:	bne	12b94 <por_begin_data+0x5e4>
   12b78:	ldr	r0, [sp, #32]
   12b7c:	cmp	r0, #1
   12b80:	blt	12fcc <por_begin_data+0xa1c>
   12b84:	mov	r0, #0
   12b88:	mov	r5, #0
   12b8c:	str	r0, [sp, #20]
   12b90:	b	12de4 <por_begin_data+0x834>
   12b94:	ldr	r0, [sp, #32]
   12b98:	cmp	r0, #1
   12b9c:	blt	12fcc <por_begin_data+0xa1c>
   12ba0:	mov	r0, #0
   12ba4:	mov	r5, #0
   12ba8:	str	r0, [sp, #16]
   12bac:	b	12c44 <por_begin_data+0x694>
   12bb0:	ldr	r1, [sp, #20]
   12bb4:	mov	r0, r4
   12bb8:	bl	4808 <strcmp@plt>
   12bbc:	cmp	r0, #0
   12bc0:	beq	12ca8 <por_begin_data+0x6f8>
   12bc4:	mov	r0, #66	; 0x42
   12bc8:	mov	r1, sl
   12bcc:	sub	r2, fp, #66	; 0x42
   12bd0:	mov	r3, #1
   12bd4:	strh	r0, [fp, #-66]	; 0xffffffbe
   12bd8:	mov	r0, r9
   12bdc:	bl	1372c <por_write_string_n>
   12be0:	cmp	r0, #0
   12be4:	bne	12748 <por_begin_data+0x198>
   12be8:	mov	r0, r4
   12bec:	bl	4bd4 <strlen@plt>
   12bf0:	mov	r3, r0
   12bf4:	mov	r0, r9
   12bf8:	mov	r1, sl
   12bfc:	mov	r2, r4
   12c00:	bl	1380c <por_write_string_field_n>
   12c04:	cmp	r0, #0
   12c08:	bne	12748 <por_begin_data+0x198>
   12c0c:	ldr	r4, [sp, #20]
   12c10:	mov	r0, r4
   12c14:	bl	4bd4 <strlen@plt>
   12c18:	mov	r3, r0
   12c1c:	mov	r0, r9
   12c20:	mov	r1, sl
   12c24:	mov	r2, r4
   12c28:	bl	1380c <por_write_string_field_n>
   12c2c:	cmp	r0, #0
   12c30:	bne	12748 <por_begin_data+0x198>
   12c34:	ldr	r0, [sp, #16]
   12c38:	add	r0, r0, #2
   12c3c:	str	r0, [sp, #16]
   12c40:	b	12ca8 <por_begin_data+0x6f8>
   12c44:	ldr	r4, [sp, #36]	; 0x24
   12c48:	mov	r0, r6
   12c4c:	mov	r2, r5
   12c50:	mov	r1, r4
   12c54:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12c58:	mov	r0, r7
   12c5c:	mov	r1, r4
   12c60:	mov	r2, r5
   12c64:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12c68:	ldr	r0, [sp, #24]
   12c6c:	ldr	r1, [sp, #44]	; 0x2c
   12c70:	ldrd	r2, [r0]
   12c74:	ldr	r0, [sp, #40]	; 0x28
   12c78:	bl	4994 <readstat_string_value@plt>
   12c7c:	mov	r4, r0
   12c80:	ldr	r0, [sp, #28]
   12c84:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12c88:	ldrd	r2, [r0]
   12c8c:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12c90:	bl	4994 <readstat_string_value@plt>
   12c94:	str	r0, [sp, #20]
   12c98:	cmp	r4, #0
   12c9c:	ldrne	r0, [sp, #20]
   12ca0:	cmpne	r0, #0
   12ca4:	bne	12bb0 <por_begin_data+0x600>
   12ca8:	ldr	r0, [sp, #32]
   12cac:	add	r5, r5, #1
   12cb0:	cmp	r5, r0
   12cb4:	blt	12c44 <por_begin_data+0x694>
   12cb8:	mov	r5, #0
   12cbc:	b	12d28 <por_begin_data+0x778>
   12cc0:	mov	r0, r4
   12cc4:	bl	4808 <strcmp@plt>
   12cc8:	cmp	r0, #0
   12ccc:	bne	12d88 <por_begin_data+0x7d8>
   12cd0:	mov	r0, #56	; 0x38
   12cd4:	mov	r1, sl
   12cd8:	sub	r2, fp, #66	; 0x42
   12cdc:	mov	r3, #1
   12ce0:	strh	r0, [fp, #-66]	; 0xffffffbe
   12ce4:	mov	r0, r9
   12ce8:	bl	1372c <por_write_string_n>
   12cec:	cmp	r0, #0
   12cf0:	bne	12748 <por_begin_data+0x198>
   12cf4:	mov	r0, r4
   12cf8:	bl	4bd4 <strlen@plt>
   12cfc:	mov	r3, r0
   12d00:	mov	r0, r9
   12d04:	mov	r1, sl
   12d08:	mov	r2, r4
   12d0c:	bl	1380c <por_write_string_field_n>
   12d10:	cmp	r0, #0
   12d14:	bne	12748 <por_begin_data+0x198>
   12d18:	ldr	r0, [sp, #16]
   12d1c:	add	r0, r0, #1
   12d20:	str	r0, [sp, #16]
   12d24:	b	12d88 <por_begin_data+0x7d8>
   12d28:	ldr	r4, [sp, #36]	; 0x24
   12d2c:	mov	r0, r6
   12d30:	mov	r2, r5
   12d34:	mov	r1, r4
   12d38:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12d3c:	mov	r0, r7
   12d40:	mov	r1, r4
   12d44:	mov	r2, r5
   12d48:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12d4c:	ldr	r0, [sp, #24]
   12d50:	ldr	r1, [sp, #44]	; 0x2c
   12d54:	ldrd	r2, [r0]
   12d58:	ldr	r0, [sp, #40]	; 0x28
   12d5c:	bl	4994 <readstat_string_value@plt>
   12d60:	mov	r4, r0
   12d64:	ldr	r0, [sp, #28]
   12d68:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12d6c:	ldrd	r2, [r0]
   12d70:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12d74:	bl	4994 <readstat_string_value@plt>
   12d78:	cmp	r4, #0
   12d7c:	movne	r1, r0
   12d80:	cmpne	r0, #0
   12d84:	bne	12cc0 <por_begin_data+0x710>
   12d88:	ldr	r0, [sp, #32]
   12d8c:	add	r5, r5, #1
   12d90:	cmp	r5, r0
   12d94:	blt	12d28 <por_begin_data+0x778>
   12d98:	ldr	r0, [sp, #16]
   12d9c:	b	12fc4 <por_begin_data+0xa14>
   12da0:	vcmp.f64	d8, d9
   12da4:	vmrs	APSR_nzcv, fpscr
   12da8:	beq	12ed4 <por_begin_data+0x924>
   12dac:	mov	r0, #66	; 0x42
   12db0:	mov	r1, sl
   12db4:	sub	r2, fp, #66	; 0x42
   12db8:	mov	r3, #1
   12dbc:	strh	r0, [fp, #-66]	; 0xffffffbe
   12dc0:	mov	r0, r9
   12dc4:	bl	1372c <por_write_string_n>
   12dc8:	cmp	r0, #0
   12dcc:	bne	12748 <por_begin_data+0x198>
   12dd0:	mov	r0, r9
   12dd4:	mov	r1, sl
   12dd8:	vmov.f64	d0, d8
   12ddc:	bl	13850 <por_write_double>
   12de0:	b	12e64 <por_begin_data+0x8b4>
   12de4:	ldr	r4, [sp, #36]	; 0x24
   12de8:	mov	r0, r6
   12dec:	mov	r2, r5
   12df0:	mov	r1, r4
   12df4:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12df8:	mov	r0, r7
   12dfc:	mov	r1, r4
   12e00:	mov	r2, r5
   12e04:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12e08:	ldr	r0, [sp, #24]
   12e0c:	ldr	r1, [sp, #44]	; 0x2c
   12e10:	ldrd	r2, [r0]
   12e14:	ldr	r0, [sp, #40]	; 0x28
   12e18:	bl	4b98 <readstat_double_value@plt>
   12e1c:	ldr	r0, [sp, #28]
   12e20:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12e24:	vmov.f64	d8, d0
   12e28:	ldrd	r2, [r0]
   12e2c:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12e30:	bl	4b98 <readstat_double_value@plt>
   12e34:	vmov.f64	d9, d0
   12e38:	vmov.f64	d0, d8
   12e3c:	bl	49dc <__isinf@plt>
   12e40:	cmp	r0, #0
   12e44:	beq	12e7c <por_begin_data+0x8cc>
   12e48:	mov	r0, #57	; 0x39
   12e4c:	mov	r1, sl
   12e50:	sub	r2, fp, #66	; 0x42
   12e54:	mov	r3, #1
   12e58:	strh	r0, [fp, #-66]	; 0xffffffbe
   12e5c:	mov	r0, r9
   12e60:	bl	1372c <por_write_string_n>
   12e64:	cmp	r0, #0
   12e68:	bne	12748 <por_begin_data+0x198>
   12e6c:	mov	r0, r9
   12e70:	mov	r1, sl
   12e74:	vmov.f64	d0, d9
   12e78:	b	12ebc <por_begin_data+0x90c>
   12e7c:	vmov.f64	d0, d9
   12e80:	bl	49dc <__isinf@plt>
   12e84:	cmp	r0, #0
   12e88:	beq	12da0 <por_begin_data+0x7f0>
   12e8c:	mov	r0, #65	; 0x41
   12e90:	mov	r1, sl
   12e94:	sub	r2, fp, #66	; 0x42
   12e98:	mov	r3, #1
   12e9c:	strh	r0, [fp, #-66]	; 0xffffffbe
   12ea0:	mov	r0, r9
   12ea4:	bl	1372c <por_write_string_n>
   12ea8:	cmp	r0, #0
   12eac:	bne	12748 <por_begin_data+0x198>
   12eb0:	mov	r0, r9
   12eb4:	mov	r1, sl
   12eb8:	vmov.f64	d0, d8
   12ebc:	bl	13850 <por_write_double>
   12ec0:	cmp	r0, #0
   12ec4:	bne	12748 <por_begin_data+0x198>
   12ec8:	ldr	r0, [sp, #20]
   12ecc:	add	r0, r0, #2
   12ed0:	str	r0, [sp, #20]
   12ed4:	ldr	r0, [sp, #32]
   12ed8:	add	r5, r5, #1
   12edc:	cmp	r5, r0
   12ee0:	blt	12de4 <por_begin_data+0x834>
   12ee4:	mov	r5, #0
   12ee8:	ldr	r4, [sp, #36]	; 0x24
   12eec:	mov	r0, r6
   12ef0:	mov	r2, r5
   12ef4:	mov	r1, r4
   12ef8:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   12efc:	mov	r0, r7
   12f00:	mov	r1, r4
   12f04:	mov	r2, r5
   12f08:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   12f0c:	ldr	r0, [sp, #24]
   12f10:	ldr	r1, [sp, #44]	; 0x2c
   12f14:	ldrd	r2, [r0]
   12f18:	ldr	r0, [sp, #40]	; 0x28
   12f1c:	bl	4b98 <readstat_double_value@plt>
   12f20:	ldr	r0, [sp, #28]
   12f24:	ldr	r1, [fp, #-268]	; 0xfffffef4
   12f28:	vmov.f64	d8, d0
   12f2c:	ldrd	r2, [r0]
   12f30:	ldr	r0, [fp, #-272]	; 0xfffffef0
   12f34:	bl	4b98 <readstat_double_value@plt>
   12f38:	vcmp.f64	d8, d0
   12f3c:	vmrs	APSR_nzcv, fpscr
   12f40:	bne	12fb0 <por_begin_data+0xa00>
   12f44:	vmov.f64	d9, d0
   12f48:	vmov.f64	d0, d8
   12f4c:	bl	49dc <__isinf@plt>
   12f50:	cmp	r0, #0
   12f54:	bne	12fb0 <por_begin_data+0xa00>
   12f58:	vmov.f64	d0, d9
   12f5c:	bl	49dc <__isinf@plt>
   12f60:	cmp	r0, #0
   12f64:	bne	12fb0 <por_begin_data+0xa00>
   12f68:	mov	r0, #56	; 0x38
   12f6c:	mov	r1, sl
   12f70:	sub	r2, fp, #66	; 0x42
   12f74:	mov	r3, #1
   12f78:	strh	r0, [fp, #-66]	; 0xffffffbe
   12f7c:	mov	r0, r9
   12f80:	bl	1372c <por_write_string_n>
   12f84:	cmp	r0, #0
   12f88:	bne	12748 <por_begin_data+0x198>
   12f8c:	mov	r0, r9
   12f90:	mov	r1, sl
   12f94:	vmov.f64	d0, d8
   12f98:	bl	13850 <por_write_double>
   12f9c:	cmp	r0, #0
   12fa0:	bne	12748 <por_begin_data+0x198>
   12fa4:	ldr	r0, [sp, #20]
   12fa8:	add	r0, r0, #1
   12fac:	str	r0, [sp, #20]
   12fb0:	ldr	r0, [sp, #32]
   12fb4:	add	r5, r5, #1
   12fb8:	cmp	r5, r0
   12fbc:	blt	12ee8 <por_begin_data+0x938>
   12fc0:	ldr	r0, [sp, #20]
   12fc4:	cmp	r0, #3
   12fc8:	bgt	132c4 <por_begin_data+0xd14>
   12fcc:	ldr	r0, [sp, #36]	; 0x24
   12fd0:	bl	4dcc <readstat_variable_get_label@plt>
   12fd4:	cmp	r0, #0
   12fd8:	beq	13028 <por_begin_data+0xa78>
   12fdc:	mov	r4, r0
   12fe0:	mov	r0, #67	; 0x43
   12fe4:	mov	r1, sl
   12fe8:	sub	r2, fp, #66	; 0x42
   12fec:	mov	r3, #1
   12ff0:	strh	r0, [fp, #-66]	; 0xffffffbe
   12ff4:	mov	r0, r9
   12ff8:	bl	1372c <por_write_string_n>
   12ffc:	cmp	r0, #0
   13000:	bne	12748 <por_begin_data+0x198>
   13004:	mov	r0, r4
   13008:	bl	4bd4 <strlen@plt>
   1300c:	mov	r3, r0
   13010:	mov	r0, r9
   13014:	mov	r1, sl
   13018:	mov	r2, r4
   1301c:	bl	1380c <por_write_string_field_n>
   13020:	cmp	r0, #0
   13024:	bne	12748 <por_begin_data+0x198>
   13028:	ldr	r1, [sp, #12]
   1302c:	ldr	r0, [r9, #28]
   13030:	add	r1, r1, #1
   13034:	cmp	r1, r0
   13038:	str	r1, [sp, #12]
   1303c:	blt	12a88 <por_begin_data+0x4d8>
   13040:	ldr	r0, [r9, #40]	; 0x28
   13044:	cmp	r0, #1
   13048:	blt	131f4 <por_begin_data+0xc44>
   1304c:	mov	r5, #0
   13050:	b	131c0 <por_begin_data+0xc10>
   13054:	mov	r8, #39	; 0x27
   13058:	b	1277c <por_begin_data+0x1cc>
   1305c:	ldr	r0, [r7]
   13060:	mov	r1, sl
   13064:	sub	r2, fp, #66	; 0x42
   13068:	mov	r3, #1
   1306c:	str	r0, [sp, #36]	; 0x24
   13070:	mov	r0, #68	; 0x44
   13074:	strh	r0, [fp, #-66]	; 0xffffffbe
   13078:	mov	r0, r9
   1307c:	bl	1372c <por_write_string_n>
   13080:	cmp	r0, #0
   13084:	bne	12748 <por_begin_data+0x198>
   13088:	vldr	s0, [r7, #276]	; 0x114
   1308c:	mov	r0, r9
   13090:	mov	r1, sl
   13094:	vcvt.f64.s32	d0, s0
   13098:	bl	13850 <por_write_double>
   1309c:	cmp	r0, #0
   130a0:	bne	12748 <por_begin_data+0x198>
   130a4:	ldr	r0, [r7, #276]	; 0x114
   130a8:	cmp	r0, #1
   130ac:	blt	130f8 <por_begin_data+0xb48>
   130b0:	mov	r6, #0
   130b4:	mov	r0, r7
   130b8:	mov	r1, r6
   130bc:	bl	4e14 <readstat_get_label_set_variable@plt>
   130c0:	bl	4d30 <readstat_variable_get_name@plt>
   130c4:	mov	r4, r0
   130c8:	bl	4bd4 <strlen@plt>
   130cc:	mov	r3, r0
   130d0:	mov	r0, r9
   130d4:	mov	r1, sl
   130d8:	mov	r2, r4
   130dc:	bl	1380c <por_write_string_field_n>
   130e0:	cmp	r0, #0
   130e4:	bne	12748 <por_begin_data+0x198>
   130e8:	ldr	r0, [r7, #276]	; 0x114
   130ec:	add	r6, r6, #1
   130f0:	cmp	r6, r0
   130f4:	blt	130b4 <por_begin_data+0xb04>
   130f8:	vldr	s0, [r7, #264]	; 0x108
   130fc:	mov	r0, r9
   13100:	mov	r1, sl
   13104:	vcvt.f64.s32	d0, s0
   13108:	bl	13850 <por_write_double>
   1310c:	cmp	r0, #0
   13110:	bne	12748 <por_begin_data+0x198>
   13114:	ldr	r0, [r7, #264]	; 0x108
   13118:	cmp	r0, #1
   1311c:	blt	131e4 <por_begin_data+0xc34>
   13120:	mov	r6, #0
   13124:	mov	r0, r7
   13128:	mov	r1, r6
   1312c:	bl	4e8c <readstat_get_value_label@plt>
   13130:	mov	r4, r0
   13134:	ldr	r0, [sp, #36]	; 0x24
   13138:	cmp	r0, #5
   1313c:	beq	1316c <por_begin_data+0xbbc>
   13140:	ldr	r0, [sp, #36]	; 0x24
   13144:	cmp	r0, #3
   13148:	beq	13174 <por_begin_data+0xbc4>
   1314c:	ldr	r0, [sp, #36]	; 0x24
   13150:	cmp	r0, #0
   13154:	bne	13194 <por_begin_data+0xbe4>
   13158:	ldrd	r2, [r4, #16]
   1315c:	mov	r0, r9
   13160:	mov	r1, sl
   13164:	bl	1380c <por_write_string_field_n>
   13168:	b	13188 <por_begin_data+0xbd8>
   1316c:	vldr	d0, [r4]
   13170:	b	1317c <por_begin_data+0xbcc>
   13174:	vldr	s0, [r4, #8]
   13178:	vcvt.f64.s32	d0, s0
   1317c:	mov	r0, r9
   13180:	mov	r1, sl
   13184:	bl	13850 <por_write_double>
   13188:	mov	r8, r0
   1318c:	cmp	r0, #0
   13190:	bne	1277c <por_begin_data+0x1cc>
   13194:	ldrd	r2, [r4, #24]
   13198:	mov	r0, r9
   1319c:	mov	r1, sl
   131a0:	bl	1380c <por_write_string_field_n>
   131a4:	cmp	r0, #0
   131a8:	bne	12748 <por_begin_data+0x198>
   131ac:	ldr	r0, [r7, #264]	; 0x108
   131b0:	add	r6, r6, #1
   131b4:	cmp	r6, r0
   131b8:	blt	13124 <por_begin_data+0xb74>
   131bc:	b	131e4 <por_begin_data+0xc34>
   131c0:	mov	r0, r9
   131c4:	mov	r1, r5
   131c8:	bl	4df0 <readstat_get_label_set@plt>
   131cc:	mov	r7, r0
   131d0:	ldr	r0, [r0, #264]	; 0x108
   131d4:	cmp	r0, #0
   131d8:	ldrne	r0, [r7, #276]	; 0x114
   131dc:	cmpne	r0, #0
   131e0:	bne	1305c <por_begin_data+0xaac>
   131e4:	ldr	r0, [r9, #40]	; 0x28
   131e8:	add	r5, r5, #1
   131ec:	cmp	r5, r0
   131f0:	blt	131c0 <por_begin_data+0xc10>
   131f4:	mov	r0, #69	; 0x45
   131f8:	sub	r2, fp, #66	; 0x42
   131fc:	mov	r1, sl
   13200:	mov	r3, #1
   13204:	strh	r0, [fp, #-66]	; 0xffffffbe
   13208:	mov	r0, r9
   1320c:	bl	1372c <por_write_string_n>
   13210:	mov	r8, r0
   13214:	cmp	r0, #0
   13218:	bne	1277c <por_begin_data+0x1cc>
   1321c:	vldr	s0, [r9, #52]	; 0x34
   13220:	mov	r0, r9
   13224:	mov	r1, sl
   13228:	vcvt.f64.s32	d0, s0
   1322c:	bl	13850 <por_write_double>
   13230:	mov	r8, r0
   13234:	cmp	r0, #0
   13238:	bne	1277c <por_begin_data+0x1cc>
   1323c:	ldr	r0, [r9, #52]	; 0x34
   13240:	cmp	r0, #1
   13244:	blt	13290 <por_begin_data+0xce0>
   13248:	mov	r4, #0
   1324c:	ldr	r0, [r9, #48]	; 0x30
   13250:	ldr	r6, [r0, r4, lsl #2]
   13254:	mov	r0, r6
   13258:	bl	4bd4 <strlen@plt>
   1325c:	cmp	r0, #80	; 0x50
   13260:	bhi	132cc <por_begin_data+0xd1c>
   13264:	mov	r3, r0
   13268:	mov	r0, r9
   1326c:	mov	r1, sl
   13270:	mov	r2, r6
   13274:	bl	1380c <por_write_string_field_n>
   13278:	cmp	r0, #0
   1327c:	bne	12748 <por_begin_data+0x198>
   13280:	ldr	r0, [r9, #52]	; 0x34
   13284:	add	r4, r4, #1
   13288:	cmp	r4, r0
   1328c:	blt	1324c <por_begin_data+0xc9c>
   13290:	mov	r0, #70	; 0x46
   13294:	sub	r2, fp, #66	; 0x42
   13298:	mov	r1, sl
   1329c:	mov	r3, #1
   132a0:	strh	r0, [fp, #-66]	; 0xffffffbe
   132a4:	mov	r0, r9
   132a8:	bl	1372c <por_write_string_n>
   132ac:	mov	r8, r0
   132b0:	cmp	r0, #0
   132b4:	bne	1277c <por_begin_data+0x1cc>
   132b8:	mov	r8, #0
   132bc:	str	sl, [r9, #300]	; 0x12c
   132c0:	b	12784 <por_begin_data+0x1d4>
   132c4:	mov	r8, #31
   132c8:	b	1277c <por_begin_data+0x1cc>
   132cc:	mov	r8, #32
   132d0:	b	1277c <por_begin_data+0x1cc>
   132d4:	.word	0x00031cec
   132d8:	.word	0x00031ca8
   132dc:	.word	0x000123c0
   132e0:	.word	0x000122f8
   132e4:	.word	0x000121d8
   132e8:	.word	0x000120bd
   132ec:	.word	0x0001205a
   132f0:	.word	0x00012139
   132f4:	.word	0x000120d0

000132f8 <por_write_row>:
   132f8:	push	{fp, lr}
   132fc:	mov	fp, sp
   13300:	mov	ip, r1
   13304:	mov	r3, #0
   13308:	cmp	r2, #0
   1330c:	beq	13338 <por_write_row+0x40>
   13310:	mov	r1, #0
   13314:	ldrb	lr, [ip, r1]
   13318:	cmp	lr, #0
   1331c:	beq	1332c <por_write_row+0x34>
   13320:	cmp	r1, r3
   13324:	strbne	lr, [ip, r3]
   13328:	add	r3, r3, #1
   1332c:	add	r1, r1, #1
   13330:	cmp	r2, r1
   13334:	bne	13314 <por_write_row+0x1c>
   13338:	ldr	r1, [r0, #300]	; 0x12c
   1333c:	mov	r2, ip
   13340:	pop	{fp, lr}
   13344:	b	1372c <por_write_string_n>

00013348 <por_end_data>:
   13348:	push	{r4, r5, fp, lr}
   1334c:	add	fp, sp, #8
   13350:	sub	sp, sp, #8
   13354:	ldr	r1, [r0, #300]	; 0x12c
   13358:	mov	r4, r0
   1335c:	mov	r0, #90	; 0x5a
   13360:	add	r2, sp, #6
   13364:	mov	r3, #1
   13368:	strh	r0, [sp, #6]
   1336c:	mov	r0, r4
   13370:	bl	1372c <por_write_string_n>
   13374:	mov	r5, r0
   13378:	cmp	r0, #0
   1337c:	bne	1339c <por_end_data+0x54>
   13380:	ldr	r3, [pc, #40]	; 133b0 <por_end_data+0x68>
   13384:	mov	r0, r4
   13388:	mov	r1, #90	; 0x5a
   1338c:	mov	r2, #80	; 0x50
   13390:	add	r3, pc, r3
   13394:	bl	4ea4 <readstat_write_line_padding@plt>
   13398:	mov	r5, r0
   1339c:	ldr	r0, [r4, #300]	; 0x12c
   133a0:	bl	13704 <por_write_ctx_free>
   133a4:	mov	r0, r5
   133a8:	sub	sp, fp, #8
   133ac:	pop	{r4, r5, fp, pc}
   133b0:	.word	0x00011654

000133b4 <por_write_double_to_buffer>:
   133b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133b8:	add	fp, sp, #28
   133bc:	sub	sp, sp, #4
   133c0:	vpush	{d8-d9}
   133c4:	sub	sp, sp, #16
   133c8:	vmov.f64	d9, d0
   133cc:	mov	r8, r0
   133d0:	bl	4d00 <__isnan@plt>
   133d4:	cmp	r0, #0
   133d8:	beq	133ec <por_write_double_to_buffer+0x38>
   133dc:	movw	r0, #11818	; 0x2e2a
   133e0:	strh	r0, [r8]
   133e4:	mov	r0, #2
   133e8:	b	13620 <por_write_double_to_buffer+0x26c>
   133ec:	vmov.f64	d0, d9
   133f0:	bl	49dc <__isinf@plt>
   133f4:	cmp	r0, #0
   133f8:	beq	13440 <por_write_double_to_buffer+0x8c>
   133fc:	vcmpe.f64	d9, #0.0
   13400:	mov	r0, #0
   13404:	movw	r2, #11057	; 0x2b31
   13408:	vmrs	APSR_nzcv, fpscr
   1340c:	movmi	r0, #45	; 0x2d
   13410:	strbmi	r0, [r8]
   13414:	movmi	r0, #1
   13418:	add	r1, r8, r0
   1341c:	orr	r0, r0, #2
   13420:	strh	r2, [r1]
   13424:	movw	r1, #21588	; 0x5454
   13428:	mov	r2, r8
   1342c:	strh	r1, [r2, r0]!
   13430:	mov	r1, #47	; 0x2f
   13434:	add	r0, r0, #3
   13438:	strb	r1, [r2, #2]
   1343c:	b	13620 <por_write_double_to_buffer+0x26c>
   13440:	add	r0, sp, #8
   13444:	vabs.f64	d0, d9
   13448:	bl	4b5c <modf@plt>
   1344c:	ldr	r0, [sp, #8]
   13450:	ldr	r1, [sp, #12]
   13454:	vmov.f64	d8, d0
   13458:	bl	237e8 <__aeabi_d2lz>
   1345c:	vcmpe.f64	d9, #0.0
   13460:	mov	r5, r0
   13464:	mov	r6, r1
   13468:	mov	r4, #0
   1346c:	vmrs	APSR_nzcv, fpscr
   13470:	movmi	r0, #45	; 0x2d
   13474:	movmi	r4, #1
   13478:	strbmi	r0, [r8]
   1347c:	orrs	r0, r5, r6
   13480:	beq	134c0 <por_write_double_to_buffer+0x10c>
   13484:	mov	r0, r5
   13488:	mov	r1, r6
   1348c:	mov	r2, #30
   13490:	mov	r3, #0
   13494:	mov	r9, #0
   13498:	bl	236c8 <__aeabi_ldivmod>
   1349c:	vcmp.f64	d8, #0.0
   134a0:	str	r4, [sp, #4]
   134a4:	vmrs	APSR_nzcv, fpscr
   134a8:	orrseq	r0, r2, r3
   134ac:	beq	134dc <por_write_double_to_buffer+0x128>
   134b0:	mov	r4, r5
   134b4:	mov	r7, r6
   134b8:	mov	sl, #0
   134bc:	b	13538 <por_write_double_to_buffer+0x184>
   134c0:	mov	r0, #48	; 0x30
   134c4:	add	r5, r4, #1
   134c8:	mov	r7, #0
   134cc:	mov	r9, #0
   134d0:	mov	sl, #0
   134d4:	strb	r0, [r8, r4]
   134d8:	b	13554 <por_write_double_to_buffer+0x1a0>
   134dc:	mov	r9, #0
   134e0:	mov	sl, #0
   134e4:	mov	r0, r5
   134e8:	mov	r1, r6
   134ec:	mov	r2, #30
   134f0:	mov	r3, #0
   134f4:	bl	236c8 <__aeabi_ldivmod>
   134f8:	mov	r2, #30
   134fc:	mov	r3, #0
   13500:	mov	r4, r0
   13504:	mov	r7, r1
   13508:	bl	236c8 <__aeabi_ldivmod>
   1350c:	adds	r9, r9, #1
   13510:	adc	sl, sl, #0
   13514:	adds	r0, r5, #29
   13518:	adc	r1, r6, #0
   1351c:	subs	r0, r0, #59	; 0x3b
   13520:	sbcs	r0, r1, #0
   13524:	bcc	13538 <por_write_double_to_buffer+0x184>
   13528:	orrs	r0, r2, r3
   1352c:	mov	r5, r4
   13530:	mov	r6, r7
   13534:	beq	134e4 <por_write_double_to_buffer+0x130>
   13538:	ldr	r5, [sp, #4]
   1353c:	mov	r2, r4
   13540:	mov	r3, r7
   13544:	add	r0, r8, r5
   13548:	bl	13640 <por_write_base30_integer>
   1354c:	mov	r7, r0
   13550:	add	r5, r0, r5
   13554:	vcmp.f64	d8, #0.0
   13558:	vmrs	APSR_nzcv, fpscr
   1355c:	beq	135ec <por_write_double_to_buffer+0x238>
   13560:	mov	r0, #46	; 0x2e
   13564:	cmp	r7, #49	; 0x31
   13568:	strb	r0, [r8, r5]
   1356c:	add	r5, r5, #1
   13570:	bgt	135ec <por_write_double_to_buffer+0x238>
   13574:	vcmp.f64	d8, #0.0
   13578:	vmrs	APSR_nzcv, fpscr
   1357c:	beq	135ec <por_write_double_to_buffer+0x238>
   13580:	vmov.f64	d9, #62	; 0x41f00000  30.0
   13584:	add	r4, sp, #8
   13588:	vmul.f64	d0, d8, d9
   1358c:	mov	r0, r4
   13590:	bl	4b5c <modf@plt>
   13594:	ldr	r0, [sp, #8]
   13598:	ldr	r1, [sp, #12]
   1359c:	vmov.f64	d8, d0
   135a0:	bl	237e8 <__aeabi_d2lz>
   135a4:	cmp	r1, #0
   135a8:	blt	13638 <por_write_double_to_buffer+0x284>
   135ac:	subs	r2, r0, #10
   135b0:	sbcs	r1, r1, #0
   135b4:	mov	r1, #0
   135b8:	movwcc	r1, #1
   135bc:	cmp	r1, #0
   135c0:	mov	r1, #55	; 0x37
   135c4:	movwne	r1, #48	; 0x30
   135c8:	cmp	r7, #48	; 0x30
   135cc:	add	r0, r1, r0
   135d0:	strb	r0, [r8, r5]
   135d4:	add	r5, r5, #1
   135d8:	bgt	135ec <por_write_double_to_buffer+0x238>
   135dc:	vcmp.f64	d8, #0.0
   135e0:	add	r7, r7, #1
   135e4:	vmrs	APSR_nzcv, fpscr
   135e8:	bne	13588 <por_write_double_to_buffer+0x1d4>
   135ec:	orrs	r0, r9, sl
   135f0:	beq	13614 <por_write_double_to_buffer+0x260>
   135f4:	mov	r0, #43	; 0x2b
   135f8:	add	r4, r5, #1
   135fc:	mov	r2, r9
   13600:	mov	r3, sl
   13604:	strb	r0, [r8, r5]
   13608:	add	r0, r8, r4
   1360c:	bl	13640 <por_write_base30_integer>
   13610:	add	r5, r0, r4
   13614:	mov	r0, #47	; 0x2f
   13618:	strb	r0, [r8, r5]
   1361c:	add	r0, r5, #1
   13620:	mov	r1, #0
   13624:	strb	r1, [r8, r0]
   13628:	sub	sp, fp, #48	; 0x30
   1362c:	vpop	{d8-d9}
   13630:	add	sp, sp, #4
   13634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13638:	mvn	r0, #0
   1363c:	b	13628 <por_write_double_to_buffer+0x274>

00013640 <por_write_base30_integer>:
   13640:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13644:	add	fp, sp, #24
   13648:	mov	r9, r0
   1364c:	orrs	r0, r2, r3
   13650:	beq	136f8 <por_write_base30_integer+0xb8>
   13654:	mov	r6, r3
   13658:	mov	r7, r2
   1365c:	mov	r4, #0
   13660:	mov	r8, #30
   13664:	mov	r0, r7
   13668:	mov	r1, r6
   1366c:	mov	r2, #30
   13670:	mov	r3, #0
   13674:	bl	2379c <__aeabi_uldivmod>
   13678:	umull	r2, r3, r0, r8
   1367c:	rsb	r5, r1, r1, lsl #4
   13680:	add	r3, r3, r5, lsl #1
   13684:	subs	r2, r7, r2
   13688:	sbc	r3, r6, r3
   1368c:	subs	r5, r2, #10
   13690:	sbcs	r3, r3, #0
   13694:	mov	r3, #0
   13698:	movwcc	r3, #1
   1369c:	cmp	r3, #0
   136a0:	mov	r3, #55	; 0x37
   136a4:	movwne	r3, #48	; 0x30
   136a8:	add	r2, r3, r2
   136ac:	strb	r2, [r9, r4]
   136b0:	subs	r2, r7, #30
   136b4:	add	r4, r4, #1
   136b8:	mov	r7, r0
   136bc:	sbcs	r2, r6, #0
   136c0:	mov	r6, r1
   136c4:	bcs	13664 <por_write_base30_integer+0x24>
   136c8:	subs	r0, r4, #1
   136cc:	beq	136fc <por_write_base30_integer+0xbc>
   136d0:	mov	r1, #0
   136d4:	ldrb	r2, [r9, r1]
   136d8:	ldrb	r3, [r9, r0]
   136dc:	strb	r3, [r9, r1]
   136e0:	strb	r2, [r9, r0]
   136e4:	sub	r0, r0, #1
   136e8:	add	r1, r1, #1
   136ec:	cmp	r0, r1
   136f0:	bgt	136d4 <por_write_base30_integer+0x94>
   136f4:	b	136fc <por_write_base30_integer+0xbc>
   136f8:	mov	r4, #0
   136fc:	mov	r0, r4
   13700:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013704 <por_write_ctx_free>:
   13704:	push	{r4, sl, fp, lr}
   13708:	add	fp, sp, #8
   1370c:	mov	r4, r0
   13710:	ldr	r0, [r0]
   13714:	cmp	r0, #0
   13718:	beq	13720 <por_write_ctx_free+0x1c>
   1371c:	bl	48bc <free@plt>
   13720:	mov	r0, r4
   13724:	pop	{r4, sl, fp, lr}
   13728:	b	48bc <free@plt>

0001372c <por_write_string_n>:
   1372c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13730:	add	fp, sp, #24
   13734:	sub	sp, sp, #24
   13738:	sub	sp, sp, #1024	; 0x400
   1373c:	mov	r9, r0
   13740:	mov	r0, r3
   13744:	mov	r6, r3
   13748:	mov	r7, r2
   1374c:	mov	r5, r1
   13750:	bl	4af0 <malloc@plt>
   13754:	mov	r4, r0
   13758:	ldm	r5, {r0, r1}
   1375c:	mov	r3, r6
   13760:	mov	r2, r4
   13764:	stm	sp, {r0, r1}
   13768:	mov	r0, r7
   1376c:	mov	r1, r6
   13770:	bl	4d60 <por_utf8_decode@plt>
   13774:	cmn	r0, #1
   13778:	beq	137a4 <por_write_string_n+0x78>
   1377c:	mov	r2, r0
   13780:	ldr	r0, [pc, #128]	; 13808 <por_write_string_n+0xdc>
   13784:	mov	r1, r4
   13788:	mov	r3, #80	; 0x50
   1378c:	add	r0, pc, r0
   13790:	str	r0, [sp]
   13794:	mov	r0, r9
   13798:	bl	4ee0 <readstat_write_bytes_as_lines@plt>
   1379c:	mov	r8, r0
   137a0:	b	137e8 <por_write_string_n+0xbc>
   137a4:	ldr	r0, [r9, #296]	; 0x128
   137a8:	mov	r8, #16
   137ac:	cmp	r0, #0
   137b0:	beq	137e8 <por_write_string_n+0xbc>
   137b4:	mov	r0, #0
   137b8:	str	r6, [sp]
   137bc:	add	r5, sp, #20
   137c0:	mov	r1, #1024	; 0x400
   137c4:	stmib	sp, {r0, r6, r7}
   137c8:	mov	r0, r5
   137cc:	ldr	r2, [pc, #48]	; 13804 <por_write_string_n+0xd8>
   137d0:	add	r2, pc, r2
   137d4:	bl	4c4c <snprintf@plt>
   137d8:	ldr	r2, [r9, #296]	; 0x128
   137dc:	ldr	r1, [r9, #304]	; 0x130
   137e0:	mov	r0, r5
   137e4:	blx	r2
   137e8:	cmp	r4, #0
   137ec:	beq	137f8 <por_write_string_n+0xcc>
   137f0:	mov	r0, r4
   137f4:	bl	48bc <free@plt>
   137f8:	mov	r0, r8
   137fc:	sub	sp, fp, #24
   13800:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13804:	.word	0x00011217
   13808:	.word	0x00011258

0001380c <por_write_string_field_n>:
   1380c:	push	{r4, r5, r6, r7, fp, lr}
   13810:	add	fp, sp, #16
   13814:	mov	r4, r3
   13818:	mov	r5, r2
   1381c:	mov	r6, r1
   13820:	mov	r7, r0
   13824:	vmov	s0, r4
   13828:	vcvt.f64.u32	d0, s0
   1382c:	bl	13850 <por_write_double>
   13830:	cmp	r0, #0
   13834:	popne	{r4, r5, r6, r7, fp, pc}
   13838:	mov	r0, r7
   1383c:	mov	r1, r6
   13840:	mov	r2, r5
   13844:	mov	r3, r4
   13848:	pop	{r4, r5, r6, r7, fp, lr}
   1384c:	b	1372c <por_write_string_n>

00013850 <por_write_double>:
   13850:	push	{r4, r5, r6, sl, fp, lr}
   13854:	add	fp, sp, #16
   13858:	vpush	{d8}
   1385c:	sub	sp, sp, #264	; 0x108
   13860:	sub	sp, sp, #1024	; 0x400
   13864:	mov	r5, r1
   13868:	mov	r4, r0
   1386c:	add	r0, sp, #8
   13870:	mov	r1, #256	; 0x100
   13874:	vorr	d8, d0, d0
   13878:	bl	133b4 <por_write_double_to_buffer>
   1387c:	cmn	r0, #1
   13880:	beq	138a0 <por_write_double+0x50>
   13884:	mov	r3, r0
   13888:	add	r2, sp, #8
   1388c:	mov	r0, r4
   13890:	mov	r1, r5
   13894:	bl	1372c <por_write_string_n>
   13898:	mov	r5, r0
   1389c:	b	138dc <por_write_double+0x8c>
   138a0:	ldr	r0, [r4, #296]	; 0x128
   138a4:	mov	r5, #13
   138a8:	cmp	r0, #0
   138ac:	beq	138dc <por_write_double+0x8c>
   138b0:	vstr	d8, [sp]
   138b4:	add	r6, sp, #264	; 0x108
   138b8:	mov	r1, #1024	; 0x400
   138bc:	ldr	r2, [pc, #40]	; 138ec <por_write_double+0x9c>
   138c0:	mov	r0, r6
   138c4:	add	r2, pc, r2
   138c8:	bl	4c4c <snprintf@plt>
   138cc:	ldr	r2, [r4, #296]	; 0x128
   138d0:	ldr	r1, [r4, #304]	; 0x130
   138d4:	mov	r0, r6
   138d8:	blx	r2
   138dc:	mov	r0, r5
   138e0:	sub	sp, fp, #24
   138e4:	vpop	{d8}
   138e8:	pop	{r4, r5, r6, sl, fp, pc}
   138ec:	.word	0x0001114f

000138f0 <por_emit_format>:
   138f0:	push	{r4, r5, r6, sl, fp, lr}
   138f4:	add	fp, sp, #16
   138f8:	vldr	s0, [r2]
   138fc:	mov	r6, r2
   13900:	mov	r4, r1
   13904:	mov	r5, r0
   13908:	vcvt.f64.s32	d0, s0
   1390c:	bl	13850 <por_write_double>
   13910:	cmp	r0, #0
   13914:	popne	{r4, r5, r6, sl, fp, pc}
   13918:	vldr	s0, [r6, #4]
   1391c:	mov	r0, r5
   13920:	mov	r1, r4
   13924:	vcvt.f64.s32	d0, s0
   13928:	bl	13850 <por_write_double>
   1392c:	cmp	r0, #0
   13930:	beq	13938 <por_emit_format+0x48>
   13934:	pop	{r4, r5, r6, sl, fp, pc}
   13938:	vldr	s0, [r6, #8]
   1393c:	mov	r0, r5
   13940:	mov	r1, r4
   13944:	vcvt.f64.s32	d0, s0
   13948:	pop	{r4, r5, r6, sl, fp, lr}
   1394c:	b	13850 <por_write_double>

00013950 <sav_ctx_init>:
   13950:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13954:	add	fp, sp, #24
   13958:	mov	r8, r1
   1395c:	mov	r7, r0
   13960:	mov	r0, #1
   13964:	mov	r1, #440	; 0x1b8
   13968:	bl	49ac <readstat_calloc@plt>
   1396c:	mov	r4, #0
   13970:	cmp	r0, #0
   13974:	beq	13ae0 <sav_ctx_init+0x190>
   13978:	mov	r6, r0
   1397c:	ldr	r0, [r7]
   13980:	movw	r1, #17956	; 0x4624
   13984:	movt	r1, #12876	; 0x324c
   13988:	cmp	r0, r1
   1398c:	beq	139ac <sav_ctx_init+0x5c>
   13990:	ldr	r0, [r7]
   13994:	movw	r1, #17956	; 0x4624
   13998:	movt	r1, #13132	; 0x334c
   1399c:	cmp	r0, r1
   139a0:	bne	13ad8 <sav_ctx_init+0x188>
   139a4:	mov	r0, #3
   139a8:	b	139b0 <sav_ctx_init+0x60>
   139ac:	mov	r0, #2
   139b0:	str	r0, [r6, #424]	; 0x1a8
   139b4:	ldr	r0, [r7, #64]	; 0x40
   139b8:	ldrb	r1, [r6, #436]	; 0x1b4
   139bc:	orr	r0, r0, #1
   139c0:	and	r1, r1, #254	; 0xfe
   139c4:	subs	r0, r0, #3
   139c8:	movwne	r0, #1
   139cc:	orr	r0, r1, r0
   139d0:	strb	r0, [r6, #436]	; 0x1b4
   139d4:	bl	48b0 <machine_is_little_endian@plt>
   139d8:	ldrb	r1, [r6, #436]	; 0x1b4
   139dc:	mov	r5, #1
   139e0:	and	r1, r1, #1
   139e4:	cmp	r0, r1
   139e8:	mov	r0, #1
   139ec:	movweq	r0, #2
   139f0:	str	r0, [r6, #432]	; 0x1b0
   139f4:	ldr	r0, [r7, #72]	; 0x48
   139f8:	cmp	r0, #1
   139fc:	beq	13a1c <sav_ctx_init+0xcc>
   13a00:	bl	47b4 <byteswap4@plt>
   13a04:	cmp	r0, #1
   13a08:	beq	13a1c <sav_ctx_init+0xcc>
   13a0c:	ldr	r0, [r7, #72]	; 0x48
   13a10:	mov	r5, #2
   13a14:	cmp	r0, #2
   13a18:	bne	13ae8 <sav_ctx_init+0x198>
   13a1c:	str	r5, [r6, #428]	; 0x1ac
   13a20:	ldrb	r1, [r6, #436]	; 0x1b4
   13a24:	ldr	r0, [r7, #80]	; 0x50
   13a28:	tst	r1, #1
   13a2c:	bne	13a40 <sav_ctx_init+0xf0>
   13a30:	str	r0, [r6, #352]	; 0x160
   13a34:	mov	r1, #1
   13a38:	ldr	r0, [r7, #76]	; 0x4c
   13a3c:	b	13a6c <sav_ctx_init+0x11c>
   13a40:	bl	47b4 <byteswap4@plt>
   13a44:	str	r0, [r6, #352]	; 0x160
   13a48:	mov	r1, #1
   13a4c:	ldrb	r2, [r6, #436]	; 0x1b4
   13a50:	ldr	r0, [r7, #76]	; 0x4c
   13a54:	tst	r2, #1
   13a58:	beq	13a6c <sav_ctx_init+0x11c>
   13a5c:	bl	47b4 <byteswap4@plt>
   13a60:	ldrb	r1, [r6, #436]	; 0x1b4
   13a64:	mov	r2, #1
   13a68:	bic	r1, r2, r1
   13a6c:	add	r3, pc, #132	; 0x84
   13a70:	movw	r2, #65535	; 0xffff
   13a74:	cmp	r1, #0
   13a78:	vld1.64	{d16-d17}, [r3]
   13a7c:	movt	r2, #32751	; 0x7fef
   13a80:	mvn	r3, #0
   13a84:	str	r3, [r6, #408]	; 0x198
   13a88:	str	r2, [r6, #412]	; 0x19c
   13a8c:	str	r0, [r6, #372]	; 0x174
   13a90:	add	r0, r6, #392	; 0x188
   13a94:	vst1.64	{d16-d17}, [r0]
   13a98:	add	r0, r7, #84	; 0x54
   13a9c:	vld1.8	{d0}, [r0]
   13aa0:	bne	13aa8 <sav_ctx_init+0x158>
   13aa4:	bl	4ec8 <byteswap_double@plt>
   13aa8:	mov	r0, #512	; 0x200
   13aac:	mov	r1, #4
   13ab0:	str	r0, [r6, #48]	; 0x30
   13ab4:	mov	r0, #512	; 0x200
   13ab8:	vstr	d0, [r6, #416]	; 0x1a0
   13abc:	bl	49ac <readstat_calloc@plt>
   13ac0:	cmp	r0, #0
   13ac4:	str	r0, [r6, #44]	; 0x2c
   13ac8:	beq	13ad8 <sav_ctx_init+0x188>
   13acc:	mov	r4, r6
   13ad0:	str	r8, [r6, #36]	; 0x24
   13ad4:	b	13ae0 <sav_ctx_init+0x190>
   13ad8:	mov	r0, r6
   13adc:	bl	4904 <sav_ctx_free@plt>
   13ae0:	mov	r0, r4
   13ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13ae8:	bl	47b4 <byteswap4@plt>
   13aec:	cmp	r0, #2
   13af0:	streq	r5, [r6, #428]	; 0x1ac
   13af4:	b	13a20 <sav_ctx_init+0xd0>
   13af8:	.word	0xffffffff
   13afc:	.word	0xffefffff
   13b00:	.word	0xfffffffe
   13b04:	.word	0xffefffff

00013b08 <sav_ctx_free>:
   13b08:	push	{r4, r5, fp, lr}
   13b0c:	add	fp, sp, #8
   13b10:	mov	r4, r0
   13b14:	ldr	r0, [r0, #44]	; 0x2c
   13b18:	cmp	r0, #0
   13b1c:	beq	13b50 <sav_ctx_free+0x48>
   13b20:	ldr	r1, [r4, #340]	; 0x154
   13b24:	cmp	r1, #1
   13b28:	blt	13b4c <sav_ctx_free+0x44>
   13b2c:	mov	r5, #0
   13b30:	ldr	r0, [r0, r5, lsl #2]
   13b34:	bl	4de4 <spss_varinfo_free@plt>
   13b38:	ldr	r1, [r4, #340]	; 0x154
   13b3c:	ldr	r0, [r4, #44]	; 0x2c
   13b40:	add	r5, r5, #1
   13b44:	cmp	r5, r1
   13b48:	blt	13b30 <sav_ctx_free+0x28>
   13b4c:	bl	48bc <free@plt>
   13b50:	ldr	r0, [r4, #52]	; 0x34
   13b54:	cmp	r0, #0
   13b58:	beq	13b98 <sav_ctx_free+0x90>
   13b5c:	ldr	r2, [r4, #348]	; 0x15c
   13b60:	cmp	r2, #1
   13b64:	blt	13b94 <sav_ctx_free+0x8c>
   13b68:	mov	r5, #0
   13b6c:	ldr	r1, [r0, r5, lsl #2]
   13b70:	cmp	r1, #0
   13b74:	beq	13b88 <sav_ctx_free+0x80>
   13b78:	mov	r0, r1
   13b7c:	bl	48bc <free@plt>
   13b80:	ldr	r0, [r4, #52]	; 0x34
   13b84:	ldr	r2, [r4, #348]	; 0x15c
   13b88:	add	r5, r5, #1
   13b8c:	cmp	r5, r2
   13b90:	blt	13b6c <sav_ctx_free+0x64>
   13b94:	bl	48bc <free@plt>
   13b98:	ldr	r0, [r4, #376]	; 0x178
   13b9c:	cmp	r0, #0
   13ba0:	beq	13ba8 <sav_ctx_free+0xa0>
   13ba4:	bl	48bc <free@plt>
   13ba8:	ldr	r0, [r4, #384]	; 0x180
   13bac:	cmp	r0, #0
   13bb0:	beq	13bb8 <sav_ctx_free+0xb0>
   13bb4:	bl	48bc <free@plt>
   13bb8:	ldr	r0, [r4, #336]	; 0x150
   13bbc:	cmp	r0, #0
   13bc0:	beq	13bc8 <sav_ctx_free+0xc0>
   13bc4:	bl	47d8 <iconv_close@plt>
   13bc8:	ldr	r0, [r4, #328]	; 0x148
   13bcc:	cmp	r0, #0
   13bd0:	beq	13bd8 <sav_ctx_free+0xd0>
   13bd4:	bl	48bc <free@plt>
   13bd8:	mov	r0, r4
   13bdc:	pop	{r4, r5, fp, lr}
   13be0:	b	48bc <free@plt>
   13be4:	andeq	r0, r0, r0

00013be8 <sav_compressed_row_bound>:
   13be8:	mov	r1, #8
   13bec:	add	r1, r1, r0, lsr #3
   13bf0:	bic	r1, r1, #-1073741817	; 0xc0000007
   13bf4:	add	r0, r1, r0
   13bf8:	bx	lr
   13bfc:	nop	{0}

00013c00 <sav_compress_row>:
   13c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c04:	add	fp, sp, #28
   13c08:	sub	sp, sp, #4
   13c0c:	vpush	{d8-d9}
   13c10:	sub	sp, sp, #8
   13c14:	mov	sl, #0
   13c18:	mov	r4, r0
   13c1c:	str	sl, [r0, #4]
   13c20:	str	sl, [r0]
   13c24:	ldr	r0, [r3, #28]
   13c28:	cmp	r0, #1
   13c2c:	blt	13dd0 <sav_compress_row+0x1d0>
   13c30:	vldr	d8, [pc, #456]	; 13e00 <sav_compress_row+0x200>
   13c34:	vldr	d9, [pc, #460]	; 13e08 <sav_compress_row+0x208>
   13c38:	mov	r7, r1
   13c3c:	mov	r6, #8
   13c40:	mov	r8, #0
   13c44:	mov	sl, #0
   13c48:	mov	r5, #0
   13c4c:	str	r3, [sp, #4]
   13c50:	mov	r0, r3
   13c54:	mov	r1, r5
   13c58:	bl	4d48 <readstat_get_variable@plt>
   13c5c:	ldr	r1, [r0]
   13c60:	cmp	r1, #0
   13c64:	beq	13c90 <sav_compress_row+0x90>
   13c68:	mov	r1, r7
   13c6c:	mvn	r2, #1048576	; 0x100000
   13c70:	ldr	r0, [r1, r8]!
   13c74:	ldr	r1, [r1, #4]
   13c78:	mvn	r3, r0
   13c7c:	eor	r2, r1, r2
   13c80:	orrs	r2, r3, r2
   13c84:	bne	13d28 <sav_compress_row+0x128>
   13c88:	mov	r0, #255	; 0xff
   13c8c:	b	13d60 <sav_compress_row+0x160>
   13c90:	ldr	r9, [r0, #1596]	; 0x63c
   13c94:	cmp	r9, #0
   13c98:	beq	13db8 <sav_compress_row+0x1b8>
   13c9c:	ldr	r1, [pc, #364]	; 13e10 <sav_compress_row+0x210>
   13ca0:	add	r0, r7, r8
   13ca4:	mov	r2, #8
   13ca8:	add	r1, pc, r1
   13cac:	bl	4988 <memcmp@plt>
   13cb0:	add	r1, sl, #1
   13cb4:	cmp	r0, #0
   13cb8:	beq	13ce4 <sav_compress_row+0xe4>
   13cbc:	mov	r0, #253	; 0xfd
   13cc0:	strb	r0, [r4, sl]
   13cc4:	mov	r0, r7
   13cc8:	ldr	r2, [r0, r8]!
   13ccc:	ldr	r0, [r0, #4]
   13cd0:	str	r2, [r4, r6]
   13cd4:	add	r2, r4, r6
   13cd8:	add	r6, r6, #8
   13cdc:	str	r0, [r2, #4]
   13ce0:	b	13cec <sav_compress_row+0xec>
   13ce4:	mov	r0, #254	; 0xfe
   13ce8:	strb	r0, [r4, sl]
   13cec:	tst	r1, #7
   13cf0:	beq	13cfc <sav_compress_row+0xfc>
   13cf4:	mov	sl, r1
   13cf8:	b	13d18 <sav_compress_row+0x118>
   13cfc:	mov	r0, r4
   13d00:	mov	r1, #0
   13d04:	mov	sl, r6
   13d08:	str	r1, [r0, r6]!
   13d0c:	str	r1, [r0, #4]
   13d10:	add	r0, r6, #8
   13d14:	mov	r6, r0
   13d18:	subs	r9, r9, #8
   13d1c:	add	r8, r8, #8
   13d20:	bne	13c9c <sav_compress_row+0x9c>
   13d24:	b	13db8 <sav_compress_row+0x1b8>
   13d28:	vmov	d16, r0, r1
   13d2c:	vcmpe.f64	d16, d8
   13d30:	vmrs	APSR_nzcv, fpscr
   13d34:	ble	13d68 <sav_compress_row+0x168>
   13d38:	vcmpe.f64	d16, d9
   13d3c:	vmrs	APSR_nzcv, fpscr
   13d40:	bpl	13d68 <sav_compress_row+0x168>
   13d44:	vcvt.s32.f64	s0, d16
   13d48:	vcvt.f64.s32	d17, s0
   13d4c:	vcmp.f64	d16, d17
   13d50:	vmrs	APSR_nzcv, fpscr
   13d54:	bne	13d68 <sav_compress_row+0x168>
   13d58:	vmov	r0, s0
   13d5c:	add	r0, r0, #100	; 0x64
   13d60:	strb	r0, [r4, sl]
   13d64:	b	13d8c <sav_compress_row+0x18c>
   13d68:	mov	r0, #253	; 0xfd
   13d6c:	strb	r0, [r4, sl]
   13d70:	mov	r0, r7
   13d74:	ldr	r1, [r0, r8]!
   13d78:	ldr	r0, [r0, #4]
   13d7c:	str	r1, [r4, r6]
   13d80:	add	r1, r4, r6
   13d84:	add	r6, r6, #8
   13d88:	str	r0, [r1, #4]
   13d8c:	add	sl, sl, #1
   13d90:	tst	sl, #7
   13d94:	bne	13db4 <sav_compress_row+0x1b4>
   13d98:	mov	r0, r4
   13d9c:	mov	r1, #0
   13da0:	mov	sl, r6
   13da4:	str	r1, [r0, r6]!
   13da8:	str	r1, [r0, #4]
   13dac:	add	r0, r6, #8
   13db0:	mov	r6, r0
   13db4:	add	r8, r8, #8
   13db8:	ldr	r3, [sp, #4]
   13dbc:	add	r5, r5, #1
   13dc0:	ldr	r0, [r3, #28]
   13dc4:	cmp	r5, r0
   13dc8:	blt	13c50 <sav_compress_row+0x50>
   13dcc:	b	13dd4 <sav_compress_row+0x1d4>
   13dd0:	mov	r6, #8
   13dd4:	ldr	r1, [r3, #84]	; 0x54
   13dd8:	ldr	r0, [r3, #80]	; 0x50
   13ddc:	add	r1, r1, #1
   13de0:	cmp	r1, r0
   13de4:	moveq	r0, #252	; 0xfc
   13de8:	strbeq	r0, [r4, sl]
   13dec:	mov	r0, r6
   13df0:	sub	sp, fp, #48	; 0x30
   13df4:	vpop	{d8-d9}
   13df8:	add	sp, sp, #4
   13dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e00:	.word	0x00000000
   13e04:	.word	0xc0590000
   13e08:	.word	0x00000000
   13e0c:	.word	0x40630000
   13e10:	.word	0x00010dcf

00013e14 <sav_decompress_row>:
   13e14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e18:	add	fp, sp, #24
   13e1c:	mov	r4, r0
   13e20:	ldrd	r6, [r0, #16]
   13e24:	ldr	r0, [r0, #44]	; 0x2c
   13e28:	cmp	r0, #0
   13e2c:	beq	13e44 <sav_decompress_row+0x30>
   13e30:	mov	r0, r6
   13e34:	mov	r1, r7
   13e38:	bl	479c <byteswap8@plt>
   13e3c:	mov	r6, r0
   13e40:	mov	r7, r1
   13e44:	ldr	r0, [r4, #40]	; 0x28
   13e48:	movw	r9, #8224	; 0x2020
   13e4c:	add	r8, r4, #32
   13e50:	movt	r9, #8224	; 0x2020
   13e54:	rsb	r5, r0, #8
   13e58:	cmp	r5, #8
   13e5c:	bne	13e8c <sav_decompress_row+0x78>
   13e60:	ldr	r0, [r4, #4]
   13e64:	cmp	r0, #8
   13e68:	bcc	13f9c <sav_decompress_row+0x188>
   13e6c:	ldr	r1, [r4]
   13e70:	mov	r5, #0
   13e74:	ldr	r2, [r1]
   13e78:	ldr	r3, [r1, #4]
   13e7c:	strd	r2, [r8]
   13e80:	sub	r3, r0, #8
   13e84:	add	r2, r1, #8
   13e88:	strd	r2, [r4]
   13e8c:	cmp	r5, #7
   13e90:	bgt	13e58 <sav_decompress_row+0x44>
   13e94:	add	r0, r4, r5
   13e98:	ldrb	r0, [r0, #32]
   13e9c:	sub	r1, r0, #252	; 0xfc
   13ea0:	cmp	r1, #3
   13ea4:	bhi	13f0c <sav_decompress_row+0xf8>
   13ea8:	add	r0, pc, #4
   13eac:	ldr	r1, [r0, r1, lsl #2]
   13eb0:	add	pc, r0, r1
   13eb4:	.word	0x000000d4
   13eb8:	.word	0x00000010
   13ebc:	.word	0x00000068
   13ec0:	.word	0x00000078
   13ec4:	ldr	r0, [r4, #4]
   13ec8:	cmp	r0, #8
   13ecc:	bcc	13fa0 <sav_decompress_row+0x18c>
   13ed0:	ldr	r0, [r4]
   13ed4:	ldr	r1, [r4, #8]
   13ed8:	ldr	r2, [r0]
   13edc:	ldr	r0, [r0, #4]
   13ee0:	str	r0, [r1, #4]
   13ee4:	str	r2, [r1]
   13ee8:	ldm	r4, {r0, r2, r3}
   13eec:	ldr	r1, [r4, #12]
   13ef0:	sub	r1, r1, #8
   13ef4:	add	r3, r3, #8
   13ef8:	add	r0, r0, #8
   13efc:	sub	r2, r2, #8
   13f00:	stm	r4, {r0, r2, r3}
   13f04:	str	r1, [r4, #12]
   13f08:	b	13f74 <sav_decompress_row+0x160>
   13f0c:	cmp	r0, #0
   13f10:	bne	13f3c <sav_decompress_row+0x128>
   13f14:	ldr	r1, [r4, #12]
   13f18:	b	13f74 <sav_decompress_row+0x160>
   13f1c:	ldr	r0, [r4, #8]
   13f20:	str	r9, [r0, #4]
   13f24:	str	r9, [r0]
   13f28:	b	13f64 <sav_decompress_row+0x150>
   13f2c:	ldr	r0, [r4, #8]
   13f30:	str	r7, [r0, #4]
   13f34:	str	r6, [r0]
   13f38:	b	13f64 <sav_decompress_row+0x150>
   13f3c:	ldr	r1, [r4, #44]	; 0x2c
   13f40:	vldr	d16, [r4, #24]
   13f44:	vmov	s0, r0
   13f48:	vcvt.f64.u32	d17, s0
   13f4c:	vsub.f64	d0, d17, d16
   13f50:	cmp	r1, #0
   13f54:	beq	13f5c <sav_decompress_row+0x148>
   13f58:	bl	4ec8 <byteswap_double@plt>
   13f5c:	ldr	r0, [r4, #8]
   13f60:	vst1.8	{d0}, [r0]
   13f64:	ldrd	r0, [r4, #8]
   13f68:	sub	r1, r1, #8
   13f6c:	add	r0, r0, #8
   13f70:	strd	r0, [r4, #8]
   13f74:	add	r5, r5, #1
   13f78:	cmp	r1, #8
   13f7c:	bcs	13e8c <sav_decompress_row+0x78>
   13f80:	mov	r0, #2
   13f84:	b	13f8c <sav_decompress_row+0x178>
   13f88:	mov	r0, #3
   13f8c:	str	r0, [r4, #48]	; 0x30
   13f90:	rsb	r0, r5, #8
   13f94:	str	r0, [r4, #40]	; 0x28
   13f98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f9c:	mov	r5, #8
   13fa0:	mov	r0, #0
   13fa4:	b	13f8c <sav_decompress_row+0x178>

00013fa8 <sav_parse_long_variable_names_record>:
   13fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fac:	add	fp, sp, #28
   13fb0:	sub	sp, sp, #148	; 0x94
   13fb4:	sub	sp, sp, #8192	; 0x2000
   13fb8:	mov	r5, r0
   13fbc:	add	r0, r0, r1
   13fc0:	mov	sl, r2
   13fc4:	mov	r4, r1
   13fc8:	str	r0, [sp, #28]
   13fcc:	mov	r0, r2
   13fd0:	bl	14508 <count_vars>
   13fd4:	mov	r1, sl
   13fd8:	str	r0, [sp, #40]	; 0x28
   13fdc:	bl	14574 <build_lookup_table>
   13fe0:	cmp	r4, #0
   13fe4:	str	r0, [sp, #36]	; 0x24
   13fe8:	str	sl, [sp, #32]
   13fec:	str	r4, [sp, #24]
   13ff0:	str	r5, [sp, #20]
   13ff4:	beq	142f0 <sav_parse_long_variable_names_record+0x348>
   13ff8:	mov	r0, #0
   13ffc:	mov	r8, #1
   14000:	mvn	r7, #1
   14004:	mov	r9, r5
   14008:	str	r0, [sp, #52]	; 0x34
   1400c:	mov	r0, #0
   14010:	str	r0, [sp, #48]	; 0x30
   14014:	b	1416c <sav_parse_long_variable_names_record+0x1c4>
   14018:	ldr	r1, [pc, #1220]	; 144e4 <sav_parse_long_variable_names_record+0x53c>
   1401c:	add	r1, pc, r1
   14020:	ldrb	r0, [r1, r0]!
   14024:	add	r5, r1, #1
   14028:	rsb	r9, r0, #0
   1402c:	b	1406c <sav_parse_long_variable_names_record+0xc4>
   14030:	ldr	r0, [sl, #24]
   14034:	cmp	r0, #0
   14038:	beq	1415c <sav_parse_long_variable_names_record+0x1b4>
   1403c:	ldr	r2, [pc, #1192]	; 144ec <sav_parse_long_variable_names_record+0x544>
   14040:	add	r4, sp, #56	; 0x38
   14044:	mov	r1, #8192	; 0x2000
   14048:	sub	r3, fp, #48	; 0x30
   1404c:	mov	r0, r4
   14050:	add	r2, pc, r2
   14054:	bl	4c4c <snprintf@plt>
   14058:	ldr	r2, [sl, #24]
   1405c:	ldr	r1, [sl, #40]	; 0x28
   14060:	mov	r0, r4
   14064:	blx	r2
   14068:	b	1415c <sav_parse_long_variable_names_record+0x1b4>
   1406c:	ldrb	r0, [r5]
   14070:	cmp	r0, #6
   14074:	bhi	1415c <sav_parse_long_variable_names_record+0x1b4>
   14078:	add	r1, pc, #4
   1407c:	ldr	r0, [r1, r0, lsl #2]
   14080:	add	pc, r1, r0
   14084:	.word	0x00000030
   14088:	.word	0x0000008c
   1408c:	.word	0x000000b8
   14090:	.word	0x0000001c
   14094:	.word	0x00000024
   14098:	.word	0x0000001c
   1409c:	.word	0x00000024
   140a0:	mov	r8, r7
   140a4:	b	1415c <sav_parse_long_variable_names_record+0x1b4>
   140a8:	sub	r0, r7, r8
   140ac:	str	r0, [sp, #52]	; 0x34
   140b0:	b	1415c <sav_parse_long_variable_names_record+0x1b4>
   140b4:	ldr	r0, [pc, #1068]	; 144e8 <sav_parse_long_variable_names_record+0x540>
   140b8:	ldr	r1, [sp, #36]	; 0x24
   140bc:	ldr	r2, [sp, #40]	; 0x28
   140c0:	mov	r3, #40	; 0x28
   140c4:	add	r0, pc, r0
   140c8:	str	r0, [sp]
   140cc:	sub	r0, fp, #48	; 0x30
   140d0:	bl	4c7c <bsearch@plt>
   140d4:	cmp	r0, #0
   140d8:	beq	14030 <sav_parse_long_variable_names_record+0x88>
   140dc:	ldr	r0, [r0, #36]	; 0x24
   140e0:	ldr	r1, [sl, #44]	; 0x2c
   140e4:	ldr	r6, [sp, #52]	; 0x34
   140e8:	ldr	r0, [r1, r0, lsl #2]
   140ec:	sub	r1, fp, #120	; 0x78
   140f0:	mov	r2, r6
   140f4:	add	sl, r0, #196	; 0xc4
   140f8:	mov	r0, sl
   140fc:	bl	4910 <memcpy@plt>
   14100:	mov	r0, #0
   14104:	strb	r0, [sl, r6]
   14108:	ldr	sl, [sp, #32]
   1410c:	b	1415c <sav_parse_long_variable_names_record+0x1b4>
   14110:	ldr	r6, [sp, #52]	; 0x34
   14114:	mov	r4, sl
   14118:	sub	sl, fp, #48	; 0x30
   1411c:	mov	r1, r8
   14120:	mov	r0, sl
   14124:	mov	r2, r6
   14128:	bl	4910 <memcpy@plt>
   1412c:	mov	r0, #0
   14130:	strb	r0, [sl, r6]
   14134:	mov	sl, r4
   14138:	b	1415c <sav_parse_long_variable_names_record+0x1b4>
   1413c:	ldr	r6, [sp, #52]	; 0x34
   14140:	sub	r4, fp, #120	; 0x78
   14144:	mov	r1, r8
   14148:	mov	r0, r4
   1414c:	mov	r2, r6
   14150:	bl	4910 <memcpy@plt>
   14154:	mov	r0, #0
   14158:	strb	r0, [r4, r6]
   1415c:	add	r5, r5, #1
   14160:	adds	r9, r9, #1
   14164:	bne	1406c <sav_parse_long_variable_names_record+0xc4>
   14168:	b	142b4 <sav_parse_long_variable_names_record+0x30c>
   1416c:	ldr	r0, [pc, #852]	; 144c8 <sav_parse_long_variable_names_record+0x520>
   14170:	add	r0, pc, r0
   14174:	ldrb	r2, [r0, r8]
   14178:	ldr	r0, [pc, #844]	; 144cc <sav_parse_long_variable_names_record+0x524>
   1417c:	ldr	r1, [pc, #844]	; 144d0 <sav_parse_long_variable_names_record+0x528>
   14180:	add	r0, pc, r0
   14184:	add	r1, pc, r1
   14188:	cmp	r2, #0
   1418c:	add	r0, r0, r8, lsl #1
   14190:	ldrsh	r0, [r0]
   14194:	add	r5, r1, r0
   14198:	ldr	r0, [pc, #820]	; 144d4 <sav_parse_long_variable_names_record+0x52c>
   1419c:	add	r0, pc, r0
   141a0:	add	r0, r0, r8, lsl #1
   141a4:	ldrsh	lr, [r0]
   141a8:	beq	141f8 <sav_parse_long_variable_names_record+0x250>
   141ac:	add	ip, r5, r2
   141b0:	sub	r6, ip, #1
   141b4:	cmp	r6, r5
   141b8:	bcc	141f0 <sav_parse_long_variable_names_record+0x248>
   141bc:	ldrb	r4, [r9]
   141c0:	mov	r3, r5
   141c4:	sub	r0, r6, r3
   141c8:	mov	r1, r3
   141cc:	ldrb	r0, [r1, r0, asr #1]!
   141d0:	cmp	r4, r0
   141d4:	bcs	141e0 <sav_parse_long_variable_names_record+0x238>
   141d8:	sub	r6, r1, #1
   141dc:	b	141e8 <sav_parse_long_variable_names_record+0x240>
   141e0:	bls	14268 <sav_parse_long_variable_names_record+0x2c0>
   141e4:	add	r3, r1, #1
   141e8:	cmp	r6, r3
   141ec:	bcs	141c4 <sav_parse_long_variable_names_record+0x21c>
   141f0:	add	lr, r2, lr
   141f4:	b	141fc <sav_parse_long_variable_names_record+0x254>
   141f8:	mov	ip, r5
   141fc:	ldr	r0, [pc, #724]	; 144d8 <sav_parse_long_variable_names_record+0x530>
   14200:	add	r0, pc, r0
   14204:	ldrb	r2, [r0, r8]
   14208:	cmp	r2, #0
   1420c:	beq	14270 <sav_parse_long_variable_names_record+0x2c8>
   14210:	ldr	r8, [sp, #48]	; 0x30
   14214:	add	r0, ip, r2, lsl #1
   14218:	sub	r3, r0, #2
   1421c:	cmp	r3, ip
   14220:	bcc	14284 <sav_parse_long_variable_names_record+0x2dc>
   14224:	ldrb	r6, [r9]
   14228:	mov	r5, ip
   1422c:	sub	r0, r3, r5
   14230:	mov	r1, r5
   14234:	and	r0, r7, r0, asr #1
   14238:	ldrb	r0, [r1, r0]!
   1423c:	cmp	r6, r0
   14240:	bcs	1424c <sav_parse_long_variable_names_record+0x2a4>
   14244:	sub	r3, r1, #2
   14248:	b	1425c <sav_parse_long_variable_names_record+0x2b4>
   1424c:	ldrb	r0, [r1, #1]
   14250:	cmp	r6, r0
   14254:	bls	1427c <sav_parse_long_variable_names_record+0x2d4>
   14258:	add	r5, r1, #2
   1425c:	cmp	r3, r5
   14260:	bcs	1422c <sav_parse_long_variable_names_record+0x284>
   14264:	b	14284 <sav_parse_long_variable_names_record+0x2dc>
   14268:	sub	r0, lr, r5
   1426c:	add	lr, r0, r1
   14270:	ldr	r8, [sp, #48]	; 0x30
   14274:	mov	r7, r9
   14278:	b	1428c <sav_parse_long_variable_names_record+0x2e4>
   1427c:	sub	r0, r1, ip
   14280:	asr	r2, r0, #1
   14284:	mov	r7, r9
   14288:	add	lr, r2, lr
   1428c:	ldr	r0, [pc, #584]	; 144dc <sav_parse_long_variable_names_record+0x534>
   14290:	add	r0, pc, r0
   14294:	ldrb	r1, [r0, lr]
   14298:	ldr	r0, [pc, #576]	; 144e0 <sav_parse_long_variable_names_record+0x538>
   1429c:	add	r0, pc, r0
   142a0:	str	r1, [sp, #44]	; 0x2c
   142a4:	ldrb	r0, [r0, r1]
   142a8:	cmp	r0, #0
   142ac:	cmpne	r0, #11
   142b0:	bne	14018 <sav_parse_long_variable_names_record+0x70>
   142b4:	str	r8, [sp, #48]	; 0x30
   142b8:	ldr	r0, [pc, #560]	; 144f0 <sav_parse_long_variable_names_record+0x548>
   142bc:	ldr	r1, [sp, #44]	; 0x2c
   142c0:	add	r0, pc, r0
   142c4:	cmp	r1, #1
   142c8:	ldrb	r8, [r0, r1]
   142cc:	beq	14444 <sav_parse_long_variable_names_record+0x49c>
   142d0:	ldr	r0, [sp, #28]
   142d4:	add	r7, r7, #1
   142d8:	mov	r9, r7
   142dc:	cmp	r7, r0
   142e0:	mvn	r7, #1
   142e4:	bne	1416c <sav_parse_long_variable_names_record+0x1c4>
   142e8:	ldr	r7, [sp, #36]	; 0x24
   142ec:	b	14308 <sav_parse_long_variable_names_record+0x360>
   142f0:	mov	r7, r0
   142f4:	mov	r0, #0
   142f8:	mov	r8, #1
   142fc:	str	r0, [sp, #48]	; 0x30
   14300:	mov	r0, #0
   14304:	str	r0, [sp, #52]	; 0x34
   14308:	ldr	r0, [pc, #484]	; 144f4 <sav_parse_long_variable_names_record+0x54c>
   1430c:	add	r0, pc, r0
   14310:	ldrb	r0, [r0, r8]
   14314:	cmp	r0, #0
   14318:	beq	14440 <sav_parse_long_variable_names_record+0x498>
   1431c:	ldr	r1, [sp, #28]
   14320:	ldr	r2, [sp, #48]	; 0x30
   14324:	sub	r4, fp, #120	; 0x78
   14328:	mov	r6, #0
   1432c:	sub	r1, r1, r2
   14330:	str	r1, [sp, #44]	; 0x2c
   14334:	ldr	r1, [pc, #444]	; 144f8 <sav_parse_long_variable_names_record+0x550>
   14338:	add	r1, pc, r1
   1433c:	ldrb	r0, [r1, r0]!
   14340:	add	r9, r1, #1
   14344:	rsb	sl, r0, #0
   14348:	b	14388 <sav_parse_long_variable_names_record+0x3e0>
   1434c:	ldr	r5, [sp, #32]
   14350:	ldr	r0, [r5, #24]
   14354:	cmp	r0, #0
   14358:	beq	14428 <sav_parse_long_variable_names_record+0x480>
   1435c:	ldr	r2, [pc, #412]	; 14500 <sav_parse_long_variable_names_record+0x558>
   14360:	add	r0, sp, #56	; 0x38
   14364:	mov	r1, #8192	; 0x2000
   14368:	sub	r3, fp, #48	; 0x30
   1436c:	add	r2, pc, r2
   14370:	bl	4c4c <snprintf@plt>
   14374:	ldr	r2, [r5, #24]
   14378:	ldr	r1, [r5, #40]	; 0x28
   1437c:	add	r0, sp, #56	; 0x38
   14380:	blx	r2
   14384:	b	14428 <sav_parse_long_variable_names_record+0x480>
   14388:	ldrb	r0, [r9]
   1438c:	cmp	r0, #6
   14390:	beq	14404 <sav_parse_long_variable_names_record+0x45c>
   14394:	cmp	r0, #2
   14398:	beq	14410 <sav_parse_long_variable_names_record+0x468>
   1439c:	cmp	r0, #0
   143a0:	bne	14428 <sav_parse_long_variable_names_record+0x480>
   143a4:	ldr	r0, [pc, #336]	; 144fc <sav_parse_long_variable_names_record+0x554>
   143a8:	ldr	r2, [sp, #40]	; 0x28
   143ac:	mov	r1, r7
   143b0:	mov	r3, #40	; 0x28
   143b4:	add	r0, pc, r0
   143b8:	str	r0, [sp]
   143bc:	sub	r0, fp, #48	; 0x30
   143c0:	bl	4c7c <bsearch@plt>
   143c4:	cmp	r0, #0
   143c8:	beq	1434c <sav_parse_long_variable_names_record+0x3a4>
   143cc:	ldr	r1, [sp, #32]
   143d0:	ldr	r0, [r0, #36]	; 0x24
   143d4:	ldr	r6, [sp, #52]	; 0x34
   143d8:	ldr	r1, [r1, #44]	; 0x2c
   143dc:	mov	r2, r6
   143e0:	ldr	r0, [r1, r0, lsl #2]
   143e4:	mov	r1, r4
   143e8:	add	r5, r0, #196	; 0xc4
   143ec:	mov	r0, r5
   143f0:	bl	4910 <memcpy@plt>
   143f4:	mov	r0, #0
   143f8:	strb	r0, [r5, r6]
   143fc:	mov	r6, #0
   14400:	b	14428 <sav_parse_long_variable_names_record+0x480>
   14404:	ldr	r0, [sp, #44]	; 0x2c
   14408:	str	r0, [sp, #52]	; 0x34
   1440c:	b	14428 <sav_parse_long_variable_names_record+0x480>
   14410:	ldr	r5, [sp, #52]	; 0x34
   14414:	ldr	r1, [sp, #48]	; 0x30
   14418:	mov	r0, r4
   1441c:	mov	r2, r5
   14420:	bl	4910 <memcpy@plt>
   14424:	strb	r6, [r4, r5]
   14428:	add	r9, r9, #1
   1442c:	adds	sl, sl, #1
   14430:	bne	14388 <sav_parse_long_variable_names_record+0x3e0>
   14434:	ldr	r7, [sp, #28]
   14438:	ldr	sl, [sp, #32]
   1443c:	b	14444 <sav_parse_long_variable_names_record+0x49c>
   14440:	ldr	r7, [sp, #28]
   14444:	cmp	r8, #11
   14448:	blt	1445c <sav_parse_long_variable_names_record+0x4b4>
   1444c:	ldr	r0, [sp, #28]
   14450:	mov	r4, #0
   14454:	cmp	r7, r0
   14458:	beq	144ac <sav_parse_long_variable_names_record+0x504>
   1445c:	ldr	r0, [sl, #24]
   14460:	mov	r4, #5
   14464:	cmp	r0, #0
   14468:	beq	144ac <sav_parse_long_variable_names_record+0x504>
   1446c:	ldr	r1, [sp, #20]
   14470:	add	r6, sp, #56	; 0x38
   14474:	ldrb	r0, [r7], -r1
   14478:	stm	sp, {r1, r7}
   1447c:	str	r0, [sp, #12]
   14480:	mov	r0, r6
   14484:	mov	r1, #8192	; 0x2000
   14488:	ldr	r3, [sp, #24]
   1448c:	str	r3, [sp, #8]
   14490:	ldr	r2, [pc, #108]	; 14504 <sav_parse_long_variable_names_record+0x55c>
   14494:	add	r2, pc, r2
   14498:	bl	4c4c <snprintf@plt>
   1449c:	ldr	r2, [sl, #24]
   144a0:	ldr	r1, [sl, #40]	; 0x28
   144a4:	mov	r0, r6
   144a8:	blx	r2
   144ac:	ldr	r0, [sp, #36]	; 0x24
   144b0:	cmp	r0, #0
   144b4:	beq	144bc <sav_parse_long_variable_names_record+0x514>
   144b8:	bl	48bc <free@plt>
   144bc:	mov	r0, r4
   144c0:	sub	sp, fp, #28
   144c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144c8:	.word	0x00010c30
   144cc:	.word	0x00010af0
   144d0:	.word	0x000108fc
   144d4:	.word	0x00010b6c
   144d8:	.word	0x00010bec
   144dc:	.word	0x00010ba8
   144e0:	.word	0x00010ef6
   144e4:	.word	0x00010ff2
   144e8:	.word	0x0000056c
   144ec:	.word	0x0001118d
   144f0:	.word	0x00010d03
   144f4:	.word	0x00010d0e
   144f8:	.word	0x00010cd6
   144fc:	.word	0x0000027c
   14500:	.word	0x00010e71
   14504:	.word	0x00010d5b

00014508 <count_vars>:
   14508:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1450c:	add	fp, sp, #24
   14510:	ldr	r5, [r0, #340]	; 0x154
   14514:	cmp	r5, #1
   14518:	blt	14568 <count_vars+0x60>
   1451c:	ldr	r8, [r0, #44]	; 0x2c
   14520:	mov	r7, #0
   14524:	mov	r4, #0
   14528:	mov	r1, #0
   1452c:	ldr	r6, [r8, r7, lsl #2]
   14530:	cmp	r1, #0
   14534:	beq	14550 <count_vars+0x48>
   14538:	add	r0, r6, #187	; 0xbb
   1453c:	add	r1, r1, #187	; 0xbb
   14540:	bl	4808 <strcmp@plt>
   14544:	cmp	r0, #0
   14548:	addne	r4, r4, #1
   1454c:	b	14554 <count_vars+0x4c>
   14550:	add	r4, r4, #1
   14554:	add	r7, r7, #1
   14558:	mov	r1, r6
   1455c:	cmp	r7, r5
   14560:	blt	1452c <count_vars+0x24>
   14564:	b	1456c <count_vars+0x64>
   14568:	mov	r4, #0
   1456c:	mov	r0, r4
   14570:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014574 <build_lookup_table>:
   14574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14578:	add	fp, sp, #28
   1457c:	sub	sp, sp, #4
   14580:	str	r0, [sp]
   14584:	add	r0, r0, r0, lsl #2
   14588:	mov	sl, r1
   1458c:	lsl	r0, r0, #3
   14590:	bl	4bf8 <readstat_malloc@plt>
   14594:	ldr	r6, [sl, #340]	; 0x154
   14598:	mov	r9, r0
   1459c:	cmp	r6, #1
   145a0:	blt	14610 <build_lookup_table+0x9c>
   145a4:	mov	r4, #0
   145a8:	mov	r5, #0
   145ac:	mov	r0, #0
   145b0:	ldr	r1, [sl, #44]	; 0x2c
   145b4:	cmp	r0, #0
   145b8:	ldr	r8, [r1, r5, lsl #2]
   145bc:	add	r7, r8, #187	; 0xbb
   145c0:	beq	145d8 <build_lookup_table+0x64>
   145c4:	add	r1, r0, #187	; 0xbb
   145c8:	mov	r0, r7
   145cc:	bl	4808 <strcmp@plt>
   145d0:	cmp	r0, #0
   145d4:	beq	14600 <build_lookup_table+0x8c>
   145d8:	vld1.8	{d16}, [r7]
   145dc:	ldrb	r1, [r7, #8]
   145e0:	add	r0, r4, r4, lsl #2
   145e4:	add	r4, r4, #1
   145e8:	add	r0, r9, r0, lsl #3
   145ec:	strb	r1, [r0, #8]
   145f0:	vst1.8	{d16}, [r0]
   145f4:	ldr	r1, [r8, #8]
   145f8:	str	r1, [r0, #36]	; 0x24
   145fc:	ldr	r6, [sl, #340]	; 0x154
   14600:	add	r5, r5, #1
   14604:	mov	r0, r8
   14608:	cmp	r5, r6
   1460c:	blt	145b0 <build_lookup_table+0x3c>
   14610:	ldr	r3, [pc, #28]	; 14634 <build_lookup_table+0xc0>
   14614:	ldr	r1, [sp]
   14618:	mov	r0, r9
   1461c:	mov	r2, #40	; 0x28
   14620:	add	r3, pc, r3
   14624:	bl	4e08 <qsort@plt>
   14628:	mov	r0, r9
   1462c:	sub	sp, fp, #28
   14630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14634:	.word	0x00000434

00014638 <compare_key_varlookup>:
   14638:	b	4808 <strcmp@plt>

0001463c <sav_parse_very_long_string_record>:
   1463c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14640:	add	fp, sp, #28
   14644:	sub	sp, sp, #92	; 0x5c
   14648:	mov	r7, r0
   1464c:	add	r0, r0, r1
   14650:	mov	r6, r2
   14654:	mov	r4, r1
   14658:	str	r0, [sp, #44]	; 0x2c
   1465c:	mov	r0, r2
   14660:	bl	14508 <count_vars>
   14664:	mov	r5, r0
   14668:	add	r0, r4, #1024	; 0x400
   1466c:	str	r0, [sp, #24]
   14670:	bl	4bf8 <readstat_malloc@plt>
   14674:	mov	r9, r0
   14678:	mov	r0, r5
   1467c:	mov	r1, r6
   14680:	str	r5, [sp, #36]	; 0x24
   14684:	bl	14574 <build_lookup_table>
   14688:	mov	r8, r0
   1468c:	cmp	r4, #0
   14690:	mov	sl, r7
   14694:	str	r4, [sp, #28]
   14698:	beq	149b8 <sav_parse_very_long_string_record+0x37c>
   1469c:	str	r8, [sp, #40]	; 0x28
   146a0:	str	r6, [sp, #32]
   146a4:	mov	r0, #0
   146a8:	mov	r6, #1
   146ac:	str	r7, [sp, #16]
   146b0:	mov	sl, r7
   146b4:	mov	r2, #1
   146b8:	mov	r8, #0
   146bc:	mov	r7, #0
   146c0:	str	r9, [sp, #20]
   146c4:	str	r0, [sp, #52]	; 0x34
   146c8:	ldr	r0, [pc, #864]	; 14a30 <sav_parse_very_long_string_record+0x3f4>
   146cc:	ldr	r1, [pc, #864]	; 14a34 <sav_parse_very_long_string_record+0x3f8>
   146d0:	ldr	r3, [pc, #864]	; 14a38 <sav_parse_very_long_string_record+0x3fc>
   146d4:	mov	r9, r7
   146d8:	add	r1, pc, r1
   146dc:	add	r0, pc, r0
   146e0:	add	r3, pc, r3
   146e4:	ldrb	r1, [r1, r2]
   146e8:	ldrb	r0, [r0, r2]
   146ec:	add	r7, r3, r1
   146f0:	movw	r1, #7164	; 0x1bfc
   146f4:	tst	r6, r1, lsr r2
   146f8:	bne	14704 <sav_parse_very_long_string_record+0xc8>
   146fc:	mov	ip, r7
   14700:	b	1475c <sav_parse_very_long_string_record+0x120>
   14704:	ldr	r1, [pc, #816]	; 14a3c <sav_parse_very_long_string_record+0x400>
   14708:	add	r1, pc, r1
   1470c:	ldrb	lr, [r1, r2]
   14710:	add	ip, r7, lr
   14714:	sub	r4, ip, #1
   14718:	cmp	r4, r7
   1471c:	bcc	14754 <sav_parse_very_long_string_record+0x118>
   14720:	ldrb	r5, [sl]
   14724:	mov	r3, r7
   14728:	sub	r6, r4, r3
   1472c:	mov	r1, r3
   14730:	ldrb	r6, [r1, r6, asr #1]!
   14734:	cmp	r5, r6
   14738:	bcs	14744 <sav_parse_very_long_string_record+0x108>
   1473c:	sub	r4, r1, #1
   14740:	b	1474c <sav_parse_very_long_string_record+0x110>
   14744:	bls	147d0 <sav_parse_very_long_string_record+0x194>
   14748:	add	r3, r1, #1
   1474c:	cmp	r4, r3
   14750:	bcs	14728 <sav_parse_very_long_string_record+0xec>
   14754:	add	r0, lr, r0
   14758:	mov	r6, #1
   1475c:	movw	r1, #11774	; 0x2dfe
   14760:	mov	r7, r9
   14764:	tst	r6, r1, lsr r2
   14768:	beq	147f8 <sav_parse_very_long_string_record+0x1bc>
   1476c:	ldr	r1, [pc, #716]	; 14a40 <sav_parse_very_long_string_record+0x404>
   14770:	add	r1, pc, r1
   14774:	ldrb	r2, [r1, r2]
   14778:	add	r1, ip, r2, lsl #1
   1477c:	sub	r3, r1, #2
   14780:	cmp	r3, ip
   14784:	bcc	147f4 <sav_parse_very_long_string_record+0x1b8>
   14788:	ldrb	r6, [sl]
   1478c:	mov	r7, ip
   14790:	mvn	r4, #1
   14794:	sub	r1, r3, r7
   14798:	and	r5, r4, r1, asr #1
   1479c:	mov	r1, r7
   147a0:	ldrb	r5, [r1, r5]!
   147a4:	cmp	r6, r5
   147a8:	bcs	147b4 <sav_parse_very_long_string_record+0x178>
   147ac:	sub	r3, r1, #2
   147b0:	b	147c4 <sav_parse_very_long_string_record+0x188>
   147b4:	ldrb	r7, [r1, #1]
   147b8:	cmp	r6, r7
   147bc:	bls	147e4 <sav_parse_very_long_string_record+0x1a8>
   147c0:	add	r7, r1, #2
   147c4:	cmp	r3, r7
   147c8:	bcs	14794 <sav_parse_very_long_string_record+0x158>
   147cc:	b	147ec <sav_parse_very_long_string_record+0x1b0>
   147d0:	sub	r0, r0, r7
   147d4:	mov	r6, #1
   147d8:	mov	r7, r9
   147dc:	add	r0, r0, r1
   147e0:	b	147f8 <sav_parse_very_long_string_record+0x1bc>
   147e4:	sub	r1, r1, ip
   147e8:	asr	r2, r1, #1
   147ec:	mov	r6, #1
   147f0:	mov	r7, r9
   147f4:	add	r0, r2, r0
   147f8:	ldr	r1, [pc, #580]	; 14a44 <sav_parse_very_long_string_record+0x408>
   147fc:	add	r1, pc, r1
   14800:	ldrb	r4, [r1, r0]
   14804:	movw	r0, #25590	; 0x63f6
   14808:	tst	r6, r0, lsr r4
   1480c:	bne	14954 <sav_parse_very_long_string_record+0x318>
   14810:	ldr	r0, [pc, #560]	; 14a48 <sav_parse_very_long_string_record+0x40c>
   14814:	add	r0, pc, r0
   14818:	ldrb	r0, [r0, r4]
   1481c:	orr	r1, r0, #2
   14820:	cmp	r1, #2
   14824:	beq	14954 <sav_parse_very_long_string_record+0x318>
   14828:	ldr	r1, [pc, #540]	; 14a4c <sav_parse_very_long_string_record+0x410>
   1482c:	str	sl, [sp, #48]	; 0x30
   14830:	add	r1, pc, r1
   14834:	ldrb	r0, [r1, r0]!
   14838:	add	r9, r1, #1
   1483c:	rsb	r6, r0, #0
   14840:	ldrb	r0, [r9]
   14844:	cmp	r0, #5
   14848:	bhi	14948 <sav_parse_very_long_string_record+0x30c>
   1484c:	add	r1, pc, #4
   14850:	ldr	r0, [r1, r0, lsl #2]
   14854:	add	pc, r1, r0
   14858:	.word	0x00000018
   1485c:	.word	0x00000058
   14860:	.word	0x00000098
   14864:	.word	0x000000d8
   14868:	.word	0x000000e0
   1486c:	.word	0x000000ec
   14870:	ldr	r0, [pc, #472]	; 14a50 <sav_parse_very_long_string_record+0x414>
   14874:	ldr	r1, [sp, #40]	; 0x28
   14878:	ldr	r2, [sp, #36]	; 0x24
   1487c:	mov	r3, #40	; 0x28
   14880:	add	r0, pc, r0
   14884:	str	r0, [sp]
   14888:	add	r0, sp, #56	; 0x38
   1488c:	bl	4c7c <bsearch@plt>
   14890:	cmp	r0, #0
   14894:	beq	14948 <sav_parse_very_long_string_record+0x30c>
   14898:	ldr	r1, [sp, #32]
   1489c:	ldr	r0, [r0, #36]	; 0x24
   148a0:	ldr	r1, [r1, #44]	; 0x2c
   148a4:	ldr	r0, [r1, r0, lsl #2]
   148a8:	str	r7, [r0, #20]
   148ac:	b	14948 <sav_parse_very_long_string_record+0x30c>
   148b0:	mov	r1, r8
   148b4:	mov	r5, r8
   148b8:	ldr	r8, [sp, #52]	; 0x34
   148bc:	mov	sl, r4
   148c0:	mov	r4, r7
   148c4:	add	r7, sp, #56	; 0x38
   148c8:	mov	r0, r7
   148cc:	mov	r2, r8
   148d0:	bl	4910 <memcpy@plt>
   148d4:	mov	r0, #0
   148d8:	strb	r0, [r7, r8]
   148dc:	mov	r7, r4
   148e0:	mov	r4, sl
   148e4:	ldr	sl, [sp, #48]	; 0x30
   148e8:	mov	r8, r5
   148ec:	b	14948 <sav_parse_very_long_string_record+0x30c>
   148f0:	ldrb	r0, [sl]
   148f4:	cmp	r0, #0
   148f8:	beq	14948 <sav_parse_very_long_string_record+0x30c>
   148fc:	sub	r0, r0, #48	; 0x30
   14900:	mvn	r2, #1
   14904:	uxtb	r1, r0
   14908:	eor	r1, r1, r2
   1490c:	movw	r2, #52429	; 0xcccd
   14910:	movt	r2, #52428	; 0xcccc
   14914:	umull	r1, r2, r1, r2
   14918:	cmp	r7, r2, lsr #3
   1491c:	bhi	14984 <sav_parse_very_long_string_record+0x348>
   14920:	add	r1, r7, r7, lsl #2
   14924:	lsl	r1, r1, #1
   14928:	uxtab	r7, r1, r0
   1492c:	b	14948 <sav_parse_very_long_string_record+0x30c>
   14930:	mov	r8, sl
   14934:	b	14948 <sav_parse_very_long_string_record+0x30c>
   14938:	sub	r0, sl, r8
   1493c:	str	r0, [sp, #52]	; 0x34
   14940:	b	14948 <sav_parse_very_long_string_record+0x30c>
   14944:	mov	r7, #0
   14948:	add	r9, r9, #1
   1494c:	adds	r6, r6, #1
   14950:	bne	14840 <sav_parse_very_long_string_record+0x204>
   14954:	cmp	r4, #1
   14958:	beq	14988 <sav_parse_very_long_string_record+0x34c>
   1495c:	ldr	r0, [pc, #240]	; 14a54 <sav_parse_very_long_string_record+0x418>
   14960:	add	sl, sl, #1
   14964:	mov	r6, #1
   14968:	add	r0, pc, r0
   1496c:	ldrb	r2, [r0, r4]
   14970:	ldr	r0, [sp, #44]	; 0x2c
   14974:	cmp	sl, r0
   14978:	bne	146c8 <sav_parse_very_long_string_record+0x8c>
   1497c:	ldr	sl, [sp, #44]	; 0x2c
   14980:	b	14988 <sav_parse_very_long_string_record+0x34c>
   14984:	add	sl, sl, #1
   14988:	ldr	r9, [sp, #20]
   1498c:	ldr	r6, [sp, #32]
   14990:	ldr	r8, [sp, #40]	; 0x28
   14994:	ldr	r7, [sp, #16]
   14998:	mov	r0, #26624	; 0x6800
   1499c:	mov	r1, #1
   149a0:	tst	r1, r0, lsr r4
   149a4:	beq	149b8 <sav_parse_very_long_string_record+0x37c>
   149a8:	ldr	r0, [sp, #44]	; 0x2c
   149ac:	mov	r4, #0
   149b0:	cmp	sl, r0
   149b4:	beq	14a04 <sav_parse_very_long_string_record+0x3c8>
   149b8:	ldr	r0, [r6, #24]
   149bc:	mov	r4, #5
   149c0:	cmp	r0, #0
   149c4:	beq	14a04 <sav_parse_very_long_string_record+0x3c8>
   149c8:	ldr	r0, [sp, #44]	; 0x2c
   149cc:	ldr	r1, [sp, #28]
   149d0:	sub	r3, sl, r7
   149d4:	sub	r0, r0, sl
   149d8:	str	r1, [sp]
   149dc:	stmib	sp, {r0, sl}
   149e0:	mov	r0, r9
   149e4:	ldr	r2, [pc, #108]	; 14a58 <sav_parse_very_long_string_record+0x41c>
   149e8:	ldr	r1, [sp, #24]
   149ec:	add	r2, pc, r2
   149f0:	bl	4c4c <snprintf@plt>
   149f4:	ldr	r2, [r6, #24]
   149f8:	ldr	r1, [r6, #40]	; 0x28
   149fc:	mov	r0, r9
   14a00:	blx	r2
   14a04:	cmp	r8, #0
   14a08:	beq	14a14 <sav_parse_very_long_string_record+0x3d8>
   14a0c:	mov	r0, r8
   14a10:	bl	48bc <free@plt>
   14a14:	cmp	r9, #0
   14a18:	beq	14a24 <sav_parse_very_long_string_record+0x3e8>
   14a1c:	mov	r0, r9
   14a20:	bl	48bc <free@plt>
   14a24:	mov	r0, r4
   14a28:	sub	sp, fp, #28
   14a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a30:	.word	0x00010a0f
   14a34:	.word	0x00010a05
   14a38:	.word	0x00010986
   14a3c:	.word	0x000109f1
   14a40:	.word	0x00010997
   14a44:	.word	0x00010919
   14a48:	.word	0x00010962
   14a4c:	.word	0x00010955
   14a50:	.word	0xfffffdb0
   14a54:	.word	0x000107ff
   14a58:	.word	0x00010841

00014a5c <compare_varlookups>:
   14a5c:	b	4808 <strcmp@plt>

00014a60 <sav_parse_time>:
   14a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a64:	add	fp, sp, #28
   14a68:	sub	sp, sp, #36	; 0x24
   14a6c:	sub	sp, sp, #8192	; 0x2000
   14a70:	mov	r4, r3
   14a74:	mov	r8, r2
   14a78:	mov	r3, r1
   14a7c:	add	lr, r0, r1
   14a80:	mov	r5, #1
   14a84:	cmp	r1, #0
   14a88:	beq	14cb8 <sav_parse_time+0x258>
   14a8c:	mov	r7, #0
   14a90:	mov	r9, #1
   14a94:	mov	r6, #1
   14a98:	mov	r1, r0
   14a9c:	str	r3, [sp, #16]
   14aa0:	str	r4, [sp, #20]
   14aa4:	str	r0, [sp, #12]
   14aa8:	str	lr, [sp, #28]
   14aac:	str	r8, [sp, #24]
   14ab0:	ldr	r0, [pc, #696]	; 14d70 <sav_parse_time+0x310>
   14ab4:	add	r0, pc, r0
   14ab8:	ldrb	sl, [r0, r6]
   14abc:	ldr	r0, [pc, #688]	; 14d74 <sav_parse_time+0x314>
   14ac0:	ldr	r2, [pc, #688]	; 14d78 <sav_parse_time+0x318>
   14ac4:	add	r0, pc, r0
   14ac8:	add	r2, pc, r2
   14acc:	ldrb	r0, [r0, r6]
   14ad0:	add	r3, r2, r0
   14ad4:	mov	r0, #218	; 0xda
   14ad8:	tst	r9, r0, lsr r6
   14adc:	bne	14ae8 <sav_parse_time+0x88>
   14ae0:	mov	ip, r3
   14ae4:	b	14b48 <sav_parse_time+0xe8>
   14ae8:	ldr	r0, [pc, #652]	; 14d7c <sav_parse_time+0x31c>
   14aec:	add	r0, pc, r0
   14af0:	ldrb	r2, [r0, r6]
   14af4:	add	ip, r3, r2
   14af8:	sub	r9, ip, #1
   14afc:	cmp	r9, r3
   14b00:	bcc	14b38 <sav_parse_time+0xd8>
   14b04:	ldrb	lr, [r1]
   14b08:	mov	r4, r3
   14b0c:	sub	r8, r9, r4
   14b10:	mov	r5, r4
   14b14:	ldrb	r0, [r5, r8, asr #1]!
   14b18:	cmp	lr, r0
   14b1c:	bcs	14b28 <sav_parse_time+0xc8>
   14b20:	sub	r9, r5, #1
   14b24:	b	14b30 <sav_parse_time+0xd0>
   14b28:	bls	14bb8 <sav_parse_time+0x158>
   14b2c:	add	r4, r5, #1
   14b30:	cmp	r9, r4
   14b34:	bcs	14b0c <sav_parse_time+0xac>
   14b38:	ldr	lr, [sp, #28]
   14b3c:	ldr	r8, [sp, #24]
   14b40:	add	sl, r2, sl
   14b44:	mov	r9, #1
   14b48:	movw	r0, #4022	; 0xfb6
   14b4c:	tst	r9, r0, lsr r6
   14b50:	beq	14bdc <sav_parse_time+0x17c>
   14b54:	ldr	r0, [pc, #548]	; 14d80 <sav_parse_time+0x320>
   14b58:	add	r0, pc, r0
   14b5c:	ldrb	r6, [r0, r6]
   14b60:	add	r0, ip, r6, lsl #1
   14b64:	sub	r0, r0, #2
   14b68:	cmp	r0, ip
   14b6c:	bcc	14bd8 <sav_parse_time+0x178>
   14b70:	ldrb	r3, [r1]
   14b74:	mov	r5, ip
   14b78:	sub	r2, r0, r5
   14b7c:	mvn	r4, #1
   14b80:	and	r2, r4, r2, asr #1
   14b84:	mov	r4, r5
   14b88:	ldrb	r2, [r4, r2]!
   14b8c:	cmp	r3, r2
   14b90:	bcs	14b9c <sav_parse_time+0x13c>
   14b94:	sub	r0, r4, #2
   14b98:	b	14bac <sav_parse_time+0x14c>
   14b9c:	ldrb	r2, [r4, #1]
   14ba0:	cmp	r3, r2
   14ba4:	bls	14bd0 <sav_parse_time+0x170>
   14ba8:	add	r5, r4, #2
   14bac:	cmp	r0, r5
   14bb0:	bcs	14b78 <sav_parse_time+0x118>
   14bb4:	b	14bd8 <sav_parse_time+0x178>
   14bb8:	ldr	lr, [sp, #28]
   14bbc:	ldr	r8, [sp, #24]
   14bc0:	sub	r0, sl, r3
   14bc4:	mov	r9, #1
   14bc8:	add	sl, r0, r5
   14bcc:	b	14bdc <sav_parse_time+0x17c>
   14bd0:	sub	r0, r4, ip
   14bd4:	asr	r6, r0, #1
   14bd8:	add	sl, r6, sl
   14bdc:	movw	r0, #27349	; 0x6ad5
   14be0:	movt	r0, #1877	; 0x755
   14be4:	tst	r9, r0, lsr sl
   14be8:	bne	14c80 <sav_parse_time+0x220>
   14bec:	ldr	r0, [pc, #400]	; 14d84 <sav_parse_time+0x324>
   14bf0:	movw	r2, #8197	; 0x2005
   14bf4:	add	r0, pc, r0
   14bf8:	ldrb	r0, [r0, sl]
   14bfc:	tst	r9, r2, lsr r0
   14c00:	bne	14c80 <sav_parse_time+0x220>
   14c04:	ldr	r2, [pc, #380]	; 14d88 <sav_parse_time+0x328>
   14c08:	add	r2, pc, r2
   14c0c:	ldrb	r0, [r2, r0]!
   14c10:	add	r3, r2, #1
   14c14:	rsb	r6, r0, #0
   14c18:	ldrb	r0, [r3]
   14c1c:	cmp	r0, #4
   14c20:	bhi	14c74 <sav_parse_time+0x214>
   14c24:	add	r2, pc, #4
   14c28:	ldr	r0, [r2, r0, lsl #2]
   14c2c:	add	pc, r2, r0
   14c30:	.word	0x00000014
   14c34:	.word	0x00000024
   14c38:	.word	0x0000002c
   14c3c:	.word	0x00000038
   14c40:	.word	0x00000040
   14c44:	ldrb	r0, [r1]
   14c48:	add	r2, r7, r7, lsl #2
   14c4c:	add	r0, r0, r2, lsl #1
   14c50:	b	14c60 <sav_parse_time+0x200>
   14c54:	mov	r7, #0
   14c58:	b	14c74 <sav_parse_time+0x214>
   14c5c:	ldrb	r0, [r1]
   14c60:	sub	r7, r0, #48	; 0x30
   14c64:	b	14c74 <sav_parse_time+0x214>
   14c68:	str	r7, [r8, #8]
   14c6c:	b	14c74 <sav_parse_time+0x214>
   14c70:	str	r7, [r8, #4]
   14c74:	add	r3, r3, #1
   14c78:	adds	r6, r6, #1
   14c7c:	bne	14c18 <sav_parse_time+0x1b8>
   14c80:	ldr	r0, [pc, #260]	; 14d8c <sav_parse_time+0x32c>
   14c84:	add	r0, pc, r0
   14c88:	ldrb	r6, [r0, sl]
   14c8c:	movw	r0, #10836	; 0x2a54
   14c90:	movt	r0, #1877	; 0x755
   14c94:	tst	r9, r0, lsr sl
   14c98:	bne	14d0c <sav_parse_time+0x2ac>
   14c9c:	add	r1, r1, #1
   14ca0:	cmp	r1, lr
   14ca4:	bne	14ab0 <sav_parse_time+0x50>
   14ca8:	add	r4, sp, #12
   14cac:	mov	r5, #1
   14cb0:	ldm	r4, {r0, r3, r4}
   14cb4:	b	14cc0 <sav_parse_time+0x260>
   14cb8:	mov	r7, #0
   14cbc:	mov	r6, #1
   14cc0:	ldr	r1, [pc, #200]	; 14d90 <sav_parse_time+0x330>
   14cc4:	add	r1, pc, r1
   14cc8:	ldrb	r2, [r1, r6]
   14ccc:	movw	r1, #8197	; 0x2005
   14cd0:	tst	r5, r1, lsr r2
   14cd4:	bne	14d04 <sav_parse_time+0x2a4>
   14cd8:	ldr	r1, [pc, #180]	; 14d94 <sav_parse_time+0x334>
   14cdc:	add	r1, pc, r1
   14ce0:	ldrb	r2, [r1, r2]!
   14ce4:	add	r5, r1, #1
   14ce8:	rsb	r1, r2, #0
   14cec:	ldrb	r2, [r5]
   14cf0:	add	r5, r5, #1
   14cf4:	cmp	r2, #5
   14cf8:	streq	r7, [r8]
   14cfc:	adds	r1, r1, #1
   14d00:	bne	14cec <sav_parse_time+0x28c>
   14d04:	mov	r1, lr
   14d08:	b	14d14 <sav_parse_time+0x2b4>
   14d0c:	add	r4, sp, #12
   14d10:	ldm	r4, {r0, r3, r4}
   14d14:	cmp	r6, #12
   14d18:	blt	14d28 <sav_parse_time+0x2c8>
   14d1c:	mov	r5, #0
   14d20:	cmp	r1, lr
   14d24:	beq	14d64 <sav_parse_time+0x304>
   14d28:	mov	r5, #29
   14d2c:	cmp	r4, #0
   14d30:	beq	14d64 <sav_parse_time+0x304>
   14d34:	str	r3, [sp]
   14d38:	str	r0, [sp, #4]
   14d3c:	ldr	r6, [fp, #8]
   14d40:	add	r7, sp, #32
   14d44:	mov	r1, #8192	; 0x2000
   14d48:	ldr	r2, [pc, #72]	; 14d98 <sav_parse_time+0x338>
   14d4c:	mov	r0, r7
   14d50:	add	r2, pc, r2
   14d54:	bl	4c4c <snprintf@plt>
   14d58:	mov	r0, r7
   14d5c:	mov	r1, r6
   14d60:	blx	r4
   14d64:	mov	r0, r5
   14d68:	sub	sp, fp, #28
   14d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d70:	.word	0x000107cd
   14d74:	.word	0x000107b0
   14d78:	.word	0x00010794
   14d7c:	.word	0x000107a2
   14d80:	.word	0x00010743
   14d84:	.word	0x000106cf
   14d88:	.word	0x000106d6
   14d8c:	.word	0x00010624
   14d90:	.word	0x00010628
   14d94:	.word	0x00010602
   14d98:	.word	0x00010810

00014d9c <sav_parse_date>:
   14d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14da0:	add	fp, sp, #28
   14da4:	sub	sp, sp, #36	; 0x24
   14da8:	sub	sp, sp, #8192	; 0x2000
   14dac:	add	ip, r0, r1
   14db0:	cmp	r1, #0
   14db4:	str	r3, [sp, #16]
   14db8:	str	r1, [sp, #12]
   14dbc:	str	r0, [sp, #20]
   14dc0:	beq	15064 <sav_parse_date+0x2c8>
   14dc4:	mov	r9, #1
   14dc8:	mov	r8, #0
   14dcc:	mov	r5, #1
   14dd0:	mov	r1, r0
   14dd4:	str	ip, [sp, #24]
   14dd8:	ldr	r0, [pc, #840]	; 15128 <sav_parse_date+0x38c>
   14ddc:	add	r0, pc, r0
   14de0:	ldrb	lr, [r0, r5]
   14de4:	ldr	r0, [pc, #832]	; 1512c <sav_parse_date+0x390>
   14de8:	ldr	r3, [pc, #832]	; 15130 <sav_parse_date+0x394>
   14dec:	add	r0, pc, r0
   14df0:	add	r3, pc, r3
   14df4:	ldrb	r0, [r0, r5]
   14df8:	add	r3, r3, r0
   14dfc:	uxtb	r0, r5
   14e00:	cmp	r0, #0
   14e04:	cmpne	r0, #47	; 0x2f
   14e08:	bne	14e14 <sav_parse_date+0x78>
   14e0c:	mov	sl, r3
   14e10:	b	14e78 <sav_parse_date+0xdc>
   14e14:	str	r8, [sp, #28]
   14e18:	ldr	r0, [pc, #788]	; 15134 <sav_parse_date+0x398>
   14e1c:	add	r0, pc, r0
   14e20:	ldrb	ip, [r0, r5]
   14e24:	add	sl, r3, ip
   14e28:	sub	r9, sl, #1
   14e2c:	cmp	r9, r3
   14e30:	bcc	14e68 <sav_parse_date+0xcc>
   14e34:	ldrb	r0, [r1]
   14e38:	mov	r6, r3
   14e3c:	sub	r8, r9, r6
   14e40:	mov	r7, r6
   14e44:	ldrb	r4, [r7, r8, asr #1]!
   14e48:	cmp	r0, r4
   14e4c:	bcs	14e58 <sav_parse_date+0xbc>
   14e50:	sub	r9, r7, #1
   14e54:	b	14e60 <sav_parse_date+0xc4>
   14e58:	bls	14efc <sav_parse_date+0x160>
   14e5c:	add	r6, r7, #1
   14e60:	cmp	r9, r6
   14e64:	bcs	14e3c <sav_parse_date+0xa0>
   14e68:	add	lr, ip, lr
   14e6c:	ldr	ip, [sp, #24]
   14e70:	ldr	r8, [sp, #28]
   14e74:	mov	r9, #1
   14e78:	ldr	r0, [pc, #696]	; 15138 <sav_parse_date+0x39c>
   14e7c:	add	r0, pc, r0
   14e80:	ldrb	r5, [r0, r5]
   14e84:	cmp	r5, #0
   14e88:	beq	14f10 <sav_parse_date+0x174>
   14e8c:	add	r0, sl, r5, lsl #1
   14e90:	sub	r3, r0, #2
   14e94:	cmp	r3, sl
   14e98:	bcc	14eec <sav_parse_date+0x150>
   14e9c:	ldrb	r0, [r1]
   14ea0:	mov	r7, sl
   14ea4:	sub	r6, r3, r7
   14ea8:	mvn	r4, #1
   14eac:	and	r4, r4, r6, asr #1
   14eb0:	mov	r6, r7
   14eb4:	ldrb	r4, [r6, r4]!
   14eb8:	cmp	r0, r4
   14ebc:	bcs	14ec8 <sav_parse_date+0x12c>
   14ec0:	sub	r3, r6, #2
   14ec4:	b	14ed8 <sav_parse_date+0x13c>
   14ec8:	ldrb	r7, [r6, #1]
   14ecc:	cmp	r0, r7
   14ed0:	bls	14ee4 <sav_parse_date+0x148>
   14ed4:	add	r7, r6, #2
   14ed8:	cmp	r3, r7
   14edc:	bcs	14ea4 <sav_parse_date+0x108>
   14ee0:	b	14eec <sav_parse_date+0x150>
   14ee4:	sub	r0, r6, sl
   14ee8:	asr	r5, r0, #1
   14eec:	ldr	r6, [pc, #588]	; 15140 <sav_parse_date+0x3a4>
   14ef0:	add	lr, r5, lr
   14ef4:	add	r6, pc, r6
   14ef8:	b	14f18 <sav_parse_date+0x17c>
   14efc:	ldr	ip, [sp, #24]
   14f00:	ldr	r8, [sp, #28]
   14f04:	sub	r0, lr, r3
   14f08:	mov	r9, #1
   14f0c:	add	lr, r0, r7
   14f10:	ldr	r6, [pc, #548]	; 1513c <sav_parse_date+0x3a0>
   14f14:	add	r6, pc, r6
   14f18:	ldr	r0, [pc, #548]	; 15144 <sav_parse_date+0x3a8>
   14f1c:	add	r0, pc, r0
   14f20:	ldrb	r4, [r0, lr]
   14f24:	ldr	r0, [pc, #540]	; 15148 <sav_parse_date+0x3ac>
   14f28:	add	r0, pc, r0
   14f2c:	ldrb	r0, [r0, r4]
   14f30:	cmp	r0, #0
   14f34:	ldrbne	r3, [r6, r0]
   14f38:	cmpne	r3, #0
   14f3c:	beq	15040 <sav_parse_date+0x2a4>
   14f40:	add	r0, r6, r0
   14f44:	rsb	r3, r3, #0
   14f48:	add	r5, r0, #1
   14f4c:	ldrb	r0, [r5]
   14f50:	cmp	r0, #15
   14f54:	bhi	15034 <sav_parse_date+0x298>
   14f58:	add	r7, pc, #4
   14f5c:	ldr	r0, [r7, r0, lsl #2]
   14f60:	add	pc, r7, r0
   14f64:	.word	0x00000040
   14f68:	.word	0x000000d0
   14f6c:	.word	0x00000060
   14f70:	.word	0x00000068
   14f74:	.word	0x00000070
   14f78:	.word	0x00000078
   14f7c:	.word	0x00000080
   14f80:	.word	0x00000088
   14f84:	.word	0x00000090
   14f88:	.word	0x00000098
   14f8c:	.word	0x000000a0
   14f90:	.word	0x000000a8
   14f94:	.word	0x000000b0
   14f98:	.word	0x000000b8
   14f9c:	.word	0x000000c0
   14fa0:	.word	0x000000c8
   14fa4:	ldrb	r7, [r1]
   14fa8:	add	r0, r8, r8, lsl #2
   14fac:	lsl	r0, r0, #1
   14fb0:	sub	r7, r7, #48	; 0x30
   14fb4:	uxtb	r6, r7
   14fb8:	cmp	r6, #10
   14fbc:	uxtabcc	r8, r0, r7
   14fc0:	b	15034 <sav_parse_date+0x298>
   14fc4:	mov	r8, #0
   14fc8:	b	15034 <sav_parse_date+0x298>
   14fcc:	str	r8, [r2, #12]
   14fd0:	b	15034 <sav_parse_date+0x298>
   14fd4:	mov	r0, #0
   14fd8:	b	15030 <sav_parse_date+0x294>
   14fdc:	str	r9, [r2, #16]
   14fe0:	b	15034 <sav_parse_date+0x298>
   14fe4:	mov	r0, #2
   14fe8:	b	15030 <sav_parse_date+0x294>
   14fec:	mov	r0, #3
   14ff0:	b	15030 <sav_parse_date+0x294>
   14ff4:	mov	r0, #4
   14ff8:	b	15030 <sav_parse_date+0x294>
   14ffc:	mov	r0, #5
   15000:	b	15030 <sav_parse_date+0x294>
   15004:	mov	r0, #6
   15008:	b	15030 <sav_parse_date+0x294>
   1500c:	mov	r0, #7
   15010:	b	15030 <sav_parse_date+0x294>
   15014:	mov	r0, #8
   15018:	b	15030 <sav_parse_date+0x294>
   1501c:	mov	r0, #9
   15020:	b	15030 <sav_parse_date+0x294>
   15024:	mov	r0, #10
   15028:	b	15030 <sav_parse_date+0x294>
   1502c:	mov	r0, #11
   15030:	str	r0, [r2, #16]
   15034:	add	r5, r5, #1
   15038:	adds	r3, r3, #1
   1503c:	bne	14f4c <sav_parse_date+0x1b0>
   15040:	ldr	r0, [pc, #260]	; 1514c <sav_parse_date+0x3b0>
   15044:	cmp	r4, #1
   15048:	add	r0, pc, r0
   1504c:	ldrb	r5, [r0, r4]
   15050:	beq	150bc <sav_parse_date+0x320>
   15054:	add	r1, r1, #1
   15058:	cmp	r1, ip
   1505c:	bne	14dd8 <sav_parse_date+0x3c>
   15060:	b	1506c <sav_parse_date+0x2d0>
   15064:	mov	r8, #0
   15068:	mov	r5, #1
   1506c:	ldr	r0, [pc, #220]	; 15150 <sav_parse_date+0x3b4>
   15070:	ldr	r3, [pc, #220]	; 15154 <sav_parse_date+0x3b8>
   15074:	add	r0, pc, r0
   15078:	add	r3, pc, r3
   1507c:	ldrb	r0, [r0, r5]
   15080:	ldrb	r1, [r3, r0]
   15084:	cmp	r1, #0
   15088:	beq	150b8 <sav_parse_date+0x31c>
   1508c:	cmp	r8, #70	; 0x46
   15090:	add	r0, r3, r0
   15094:	rsb	r1, r1, #0
   15098:	addlt	r8, r8, #100	; 0x64
   1509c:	add	r0, r0, #1
   150a0:	ldrb	r3, [r0]
   150a4:	add	r0, r0, #1
   150a8:	cmp	r3, #1
   150ac:	streq	r8, [r2, #20]
   150b0:	adds	r1, r1, #1
   150b4:	bne	150a0 <sav_parse_date+0x304>
   150b8:	mov	r1, ip
   150bc:	ldr	r0, [sp, #20]
   150c0:	cmp	r5, #47	; 0x2f
   150c4:	blt	150d4 <sav_parse_date+0x338>
   150c8:	mov	r5, #0
   150cc:	cmp	r1, ip
   150d0:	beq	1511c <sav_parse_date+0x380>
   150d4:	ldr	r1, [sp, #16]
   150d8:	mov	r5, #29
   150dc:	cmp	r1, #0
   150e0:	beq	1511c <sav_parse_date+0x380>
   150e4:	ldr	r3, [sp, #12]
   150e8:	str	r0, [sp, #4]
   150ec:	ldr	r6, [fp, #8]
   150f0:	add	r7, sp, #32
   150f4:	mov	r4, r1
   150f8:	mov	r1, #8192	; 0x2000
   150fc:	mov	r0, r7
   15100:	str	r3, [sp]
   15104:	ldr	r2, [pc, #76]	; 15158 <sav_parse_date+0x3bc>
   15108:	add	r2, pc, r2
   1510c:	bl	4c4c <snprintf@plt>
   15110:	mov	r0, r7
   15114:	mov	r1, r6
   15118:	blx	r4
   1511c:	mov	r0, r5
   15120:	sub	sp, fp, #28
   15124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15128:	.word	0x000105a8
   1512c:	.word	0x00010568
   15130:	.word	0x00010509
   15134:	.word	0x00010598
   15138:	.word	0x000106b4
   1513c:	.word	0x000105ca
   15140:	.word	0x000105ea
   15144:	.word	0x000104c8
   15148:	.word	0x0001057c
   1514c:	.word	0x00010422
   15150:	.word	0x0001048c
   15154:	.word	0x00010466
   15158:	.word	0x0001047e

0001515c <sav_parse_timestamp>:
   1515c:	push	{r4, r5, fp, lr}
   15160:	add	fp, sp, #8
   15164:	sub	sp, sp, #56	; 0x38
   15168:	add	r2, sp, #8
   1516c:	mov	r4, r0
   15170:	vmov.i32	q8, #0	; 0x00000000
   15174:	mov	r5, r1
   15178:	add	r0, r2, #28
   1517c:	mov	r1, r2
   15180:	vst1.32	{d16-d17}, [r0]
   15184:	add	r0, r2, #16
   15188:	vst1.64	{d16-d17}, [r0]
   1518c:	mov	r0, #32
   15190:	vst1.64	{d16-d17}, [r1], r0
   15194:	mvn	r0, #0
   15198:	str	r0, [r1]
   1519c:	mov	r1, #8
   151a0:	ldr	r0, [r4, #40]	; 0x28
   151a4:	ldr	r3, [r4, #24]
   151a8:	str	r0, [sp]
   151ac:	add	r0, r5, #101	; 0x65
   151b0:	bl	48d4 <sav_parse_time@plt>
   151b4:	cmp	r0, #0
   151b8:	bne	151f0 <sav_parse_timestamp+0x94>
   151bc:	ldr	r0, [r4, #40]	; 0x28
   151c0:	ldr	r3, [r4, #24]
   151c4:	add	r2, sp, #8
   151c8:	mov	r1, #9
   151cc:	str	r0, [sp]
   151d0:	add	r0, r5, #92	; 0x5c
   151d4:	bl	4a78 <sav_parse_date@plt>
   151d8:	cmp	r0, #0
   151dc:	bne	151f0 <sav_parse_timestamp+0x94>
   151e0:	add	r0, sp, #8
   151e4:	bl	4850 <mktime@plt>
   151e8:	str	r0, [r4, #324]	; 0x144
   151ec:	mov	r0, #0
   151f0:	sub	sp, fp, #8
   151f4:	pop	{r4, r5, fp, pc}

000151f8 <readstat_parse_sav>:
   151f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151fc:	add	fp, sp, #28
   15200:	sub	sp, sp, #4
   15204:	vpush	{d8-d9}
   15208:	sub	sp, sp, #1312	; 0x520
   1520c:	sub	sp, sp, #65536	; 0x10000
   15210:	ldr	r4, [r0, #32]
   15214:	mov	r7, r2
   15218:	mov	r2, r1
   1521c:	mov	r6, r0
   15220:	mov	r0, r2
   15224:	ldr	r3, [r4]
   15228:	ldr	r1, [r4, #20]
   1522c:	blx	r3
   15230:	cmn	r0, #1
   15234:	beq	15344 <readstat_parse_sav+0x14c>
   15238:	ldr	r3, [r4, #8]
   1523c:	ldr	r2, [r4, #20]
   15240:	mov	r0, #0
   15244:	mov	r1, #2
   15248:	mov	r8, #0
   1524c:	blx	r3
   15250:	cmn	r0, #1
   15254:	beq	15970 <readstat_parse_sav+0x778>
   15258:	ldr	r3, [r4, #8]
   1525c:	ldr	r2, [r4, #20]
   15260:	mov	r5, r0
   15264:	mov	r0, #0
   15268:	mov	r1, #0
   1526c:	mov	r8, #0
   15270:	blx	r3
   15274:	cmn	r0, #1
   15278:	beq	15970 <readstat_parse_sav+0x778>
   1527c:	ldr	r3, [r4, #12]
   15280:	ldr	r2, [r4, #20]
   15284:	add	r0, sp, #76	; 0x4c
   15288:	mov	r1, #176	; 0xb0
   1528c:	blx	r3
   15290:	mov	sl, #2
   15294:	cmp	r0, #176	; 0xb0
   15298:	bcc	15974 <readstat_parse_sav+0x77c>
   1529c:	add	r0, sp, #76	; 0x4c
   152a0:	mov	r1, r4
   152a4:	bl	4a48 <sav_ctx_init@plt>
   152a8:	cmp	r0, #0
   152ac:	beq	1534c <readstat_parse_sav+0x154>
   152b0:	mov	r8, r0
   152b4:	add	r0, r6, #16
   152b8:	mov	r1, r6
   152bc:	vld1.32	{d16-d17}, [r0]
   152c0:	mov	r0, #48	; 0x30
   152c4:	mov	r2, r8
   152c8:	vld1.32	{d18-d19}, [r1], r0
   152cc:	add	r0, r8, #16
   152d0:	vst1.32	{d16-d17}, [r0]
   152d4:	mov	r0, #32
   152d8:	vst1.32	{d18-d19}, [r2], r0
   152dc:	ldr	r0, [r6, #36]	; 0x24
   152e0:	str	r0, [r8, #56]	; 0x38
   152e4:	ldr	r0, [r6, #40]	; 0x28
   152e8:	str	r7, [r8, #40]	; 0x28
   152ec:	str	r5, [r2]
   152f0:	str	r0, [r8, #60]	; 0x3c
   152f4:	ldr	r0, [r1]
   152f8:	cmp	r0, #1
   152fc:	strge	r0, [r8, #360]	; 0x168
   15300:	ldr	r1, [r8, #352]	; 0x160
   15304:	cmn	r1, #1
   15308:	beq	15358 <readstat_parse_sav+0x160>
   1530c:	ldr	r0, [r8, #360]	; 0x168
   15310:	sub	r0, r1, r0
   15314:	cmn	r0, #1
   15318:	movle	r0, #0
   1531c:	strle	r1, [r8, #360]	; 0x168
   15320:	str	r0, [r8, #356]	; 0x164
   15324:	mov	r2, r0
   15328:	ldr	r1, [r6, #44]	; 0x2c
   1532c:	cmp	r1, r0
   15330:	movlt	r2, r1
   15334:	cmp	r1, #0
   15338:	movle	r2, r0
   1533c:	str	r2, [r8, #356]	; 0x164
   15340:	b	15364 <readstat_parse_sav+0x16c>
   15344:	mov	sl, #1
   15348:	b	15990 <readstat_parse_sav+0x798>
   1534c:	mov	sl, #5
   15350:	mov	r8, #0
   15354:	b	15974 <readstat_parse_sav+0x77c>
   15358:	ldr	r0, [r6, #44]	; 0x2c
   1535c:	cmp	r0, #1
   15360:	strge	r0, [r8, #356]	; 0x164
   15364:	add	r1, sp, #76	; 0x4c
   15368:	mov	r0, r8
   1536c:	bl	47fc <sav_parse_timestamp@plt>
   15370:	cmp	r0, #0
   15374:	beq	15380 <readstat_parse_sav+0x188>
   15378:	mov	sl, r0
   1537c:	b	15974 <readstat_parse_sav+0x77c>
   15380:	ldr	r5, [r8, #36]	; 0x24
   15384:	add	lr, sp, #1024	; 0x400
   15388:	mov	r1, #4
   1538c:	add	r0, lr, #268	; 0x10c
   15390:	ldr	r3, [r5, #12]
   15394:	ldr	r2, [r5, #20]
   15398:	blx	r3
   1539c:	cmp	r0, #4
   153a0:	bcs	153ac <readstat_parse_sav+0x1b4>
   153a4:	mov	sl, #2
   153a8:	b	15974 <readstat_parse_sav+0x77c>
   153ac:	add	r0, r8, #436	; 0x1b4
   153b0:	add	lr, sp, #1024	; 0x400
   153b4:	str	r0, [sp, #72]	; 0x48
   153b8:	add	r7, lr, #268	; 0x10c
   153bc:	add	lr, sp, #1024	; 0x400
   153c0:	ldr	r0, [pc, #3996]	; 16364 <readstat_parse_sav+0x116c>
   153c4:	add	r9, lr, #280	; 0x118
   153c8:	add	r0, pc, r0
   153cc:	add	r0, r0, #4
   153d0:	str	r0, [sp, #68]	; 0x44
   153d4:	ldr	r0, [sp, #72]	; 0x48
   153d8:	ldrb	r1, [r0]
   153dc:	ldr	r0, [sp, #1292]	; 0x50c
   153e0:	tst	r1, #1
   153e4:	beq	153f0 <readstat_parse_sav+0x1f8>
   153e8:	bl	47b4 <byteswap4@plt>
   153ec:	str	r0, [sp, #1292]	; 0x50c
   153f0:	sub	r1, r0, #2
   153f4:	mov	sl, #5
   153f8:	cmp	r1, #5
   153fc:	bhi	15828 <readstat_parse_sav+0x630>
   15400:	add	r0, pc, #4
   15404:	ldr	r1, [r0, r1, lsl #2]
   15408:	add	pc, r0, r1
   1540c:	.word	0x00000018
   15410:	.word	0x000000e8
   15414:	.word	0x00000568
   15418:	.word	0x00000568
   1541c:	.word	0x00000110
   15420:	.word	0x00000124
   15424:	ldr	r6, [r8, #36]	; 0x24
   15428:	add	r0, sp, #264	; 0x108
   1542c:	mov	r1, #28
   15430:	ldr	r3, [r6, #12]
   15434:	ldr	r2, [r6, #20]
   15438:	blx	r3
   1543c:	cmp	r0, #28
   15440:	bcc	153a4 <readstat_parse_sav+0x1ac>
   15444:	ldr	r0, [sp, #268]	; 0x10c
   15448:	cmp	r0, #0
   1544c:	beq	154ac <readstat_parse_sav+0x2b4>
   15450:	ldr	r3, [r6, #12]
   15454:	ldr	r2, [r6, #20]
   15458:	add	lr, sp, #1024	; 0x400
   1545c:	mov	r1, #4
   15460:	add	r0, lr, #276	; 0x114
   15464:	blx	r3
   15468:	cmp	r0, #4
   1546c:	bcc	153a4 <readstat_parse_sav+0x1ac>
   15470:	ldr	r0, [sp, #72]	; 0x48
   15474:	ldrb	r1, [r0]
   15478:	ldr	r0, [sp, #1300]	; 0x514
   1547c:	tst	r1, #1
   15480:	beq	15488 <readstat_parse_sav+0x290>
   15484:	bl	47b4 <byteswap4@plt>
   15488:	str	r0, [sp, #1300]	; 0x514
   1548c:	add	r0, r0, #3
   15490:	mov	r1, #1
   15494:	ldr	r3, [r6, #8]
   15498:	ldr	r2, [r6, #20]
   1549c:	bic	r0, r0, #3
   154a0:	blx	r3
   154a4:	cmn	r0, #1
   154a8:	beq	15970 <readstat_parse_sav+0x778>
   154ac:	ldr	r0, [sp, #272]	; 0x110
   154b0:	cmp	r0, #0
   154b4:	beq	15808 <readstat_parse_sav+0x610>
   154b8:	ldr	r1, [sp, #72]	; 0x48
   154bc:	ldrb	r1, [r1]
   154c0:	tst	r1, #1
   154c4:	beq	154cc <readstat_parse_sav+0x2d4>
   154c8:	bl	47b4 <byteswap4@plt>
   154cc:	ldr	r3, [r6, #8]
   154d0:	ldr	r2, [r6, #20]
   154d4:	cmp	r0, #0
   154d8:	mov	r1, #1
   154dc:	rsbmi	r0, r0, #0
   154e0:	lsl	r0, r0, #3
   154e4:	blx	r3
   154e8:	cmn	r0, #1
   154ec:	bne	15808 <readstat_parse_sav+0x610>
   154f0:	b	15970 <readstat_parse_sav+0x778>
   154f4:	ldr	r6, [r8, #36]	; 0x24
   154f8:	add	r0, sp, #264	; 0x108
   154fc:	mov	r1, #4
   15500:	ldr	r3, [r6, #12]
   15504:	ldr	r2, [r6, #20]
   15508:	blx	r3
   1550c:	cmp	r0, #4
   15510:	bcs	15620 <readstat_parse_sav+0x428>
   15514:	mov	sl, #2
   15518:	b	15800 <readstat_parse_sav+0x608>
   1551c:	mov	r0, r8
   15520:	bl	173f4 <sav_skip_document_record>
   15524:	cmp	r0, #0
   15528:	beq	15808 <readstat_parse_sav+0x610>
   1552c:	b	15378 <readstat_parse_sav+0x180>
   15530:	ldr	r3, [r5, #12]
   15534:	ldr	r2, [r5, #20]
   15538:	add	r0, sp, #252	; 0xfc
   1553c:	mov	r1, #12
   15540:	blx	r3
   15544:	cmp	r0, #12
   15548:	bcc	153a4 <readstat_parse_sav+0x1ac>
   1554c:	ldr	r0, [sp, #72]	; 0x48
   15550:	mov	r7, r9
   15554:	add	r9, sp, #252	; 0xfc
   15558:	ldrb	r0, [r0]
   1555c:	tst	r0, #1
   15560:	beq	15580 <readstat_parse_sav+0x388>
   15564:	mov	r6, #0
   15568:	ldr	r0, [r9, -r6, lsl #2]
   1556c:	bl	47b4 <byteswap4@plt>
   15570:	str	r0, [r9, -r6, lsl #2]
   15574:	sub	r6, r6, #1
   15578:	cmn	r6, #3
   1557c:	bne	15568 <readstat_parse_sav+0x370>
   15580:	add	r2, sp, #252	; 0xfc
   15584:	ldm	r2, {r0, r1, r2}
   15588:	mul	r6, r2, r1
   1558c:	cmp	r0, #3
   15590:	bne	156f8 <readstat_parse_sav+0x500>
   15594:	cmp	r6, #4096	; 0x1000
   15598:	bhi	15974 <readstat_parse_sav+0x77c>
   1559c:	ldr	r3, [r5, #12]
   155a0:	ldr	r2, [r5, #20]
   155a4:	mov	r0, r7
   155a8:	mov	r1, r6
   155ac:	mov	r9, r7
   155b0:	blx	r3
   155b4:	cmp	r6, #32
   155b8:	bne	15974 <readstat_parse_sav+0x77c>
   155bc:	add	lr, sp, #1024	; 0x400
   155c0:	cmp	r0, r6
   155c4:	add	r7, lr, #268	; 0x10c
   155c8:	bcc	15974 <readstat_parse_sav+0x77c>
   155cc:	ldrb	r0, [r8, #436]	; 0x1b4
   155d0:	ldr	r6, [r8, #60]	; 0x3c
   155d4:	ldr	r3, [sp, #1332]	; 0x534
   155d8:	tst	r0, #1
   155dc:	beq	155ec <readstat_parse_sav+0x3f4>
   155e0:	mov	r0, r3
   155e4:	bl	47b4 <byteswap4@plt>
   155e8:	mov	r3, r0
   155ec:	ldr	r1, [r8, #56]	; 0x38
   155f0:	cmp	r1, #0
   155f4:	bne	157b8 <readstat_parse_sav+0x5c0>
   155f8:	ldr	r1, [sp, #68]	; 0x44
   155fc:	mov	r0, #0
   15600:	ldr	r2, [r1, #-4]
   15604:	cmp	r3, r2
   15608:	beq	157b4 <readstat_parse_sav+0x5bc>
   1560c:	add	r0, r0, #1
   15610:	add	r1, r1, #36	; 0x24
   15614:	cmp	r0, #79	; 0x4f
   15618:	bcc	15600 <readstat_parse_sav+0x408>
   1561c:	b	159a4 <readstat_parse_sav+0x7ac>
   15620:	ldr	r0, [sp, #72]	; 0x48
   15624:	mov	r7, r9
   15628:	ldrb	r1, [r0]
   1562c:	ldr	r0, [sp, #264]	; 0x108
   15630:	tst	r1, #1
   15634:	beq	15640 <readstat_parse_sav+0x448>
   15638:	bl	47b4 <byteswap4@plt>
   1563c:	str	r0, [sp, #264]	; 0x108
   15640:	cmp	r0, #0
   15644:	beq	156cc <readstat_parse_sav+0x4d4>
   15648:	mov	r9, #0
   1564c:	mov	r0, #0
   15650:	mov	r1, #1
   15654:	strb	r0, [sp, #1300]	; 0x514
   15658:	mov	r0, #8
   1565c:	ldr	r3, [r6, #8]
   15660:	ldr	r2, [r6, #20]
   15664:	blx	r3
   15668:	mov	sl, #15
   1566c:	cmn	r0, #1
   15670:	beq	157f4 <readstat_parse_sav+0x5fc>
   15674:	ldr	r3, [r6, #12]
   15678:	ldr	r2, [r6, #20]
   1567c:	add	lr, sp, #1024	; 0x400
   15680:	mov	r1, #1
   15684:	add	r0, lr, #276	; 0x114
   15688:	blx	r3
   1568c:	cmp	r0, #1
   15690:	blt	157f0 <readstat_parse_sav+0x5f8>
   15694:	ldrb	r0, [sp, #1300]	; 0x514
   15698:	ldr	r3, [r6, #8]
   1569c:	ldr	r2, [r6, #20]
   156a0:	mov	r1, #1
   156a4:	add	r0, r0, #8
   156a8:	and	r0, r0, #504	; 0x1f8
   156ac:	sub	r0, r0, #1
   156b0:	blx	r3
   156b4:	cmn	r0, #1
   156b8:	beq	157f4 <readstat_parse_sav+0x5fc>
   156bc:	ldr	r0, [sp, #264]	; 0x108
   156c0:	add	r9, r9, #1
   156c4:	cmp	r9, r0
   156c8:	bcc	1564c <readstat_parse_sav+0x454>
   156cc:	ldr	r3, [r6, #12]
   156d0:	ldr	r2, [r6, #20]
   156d4:	add	lr, sp, #1024	; 0x400
   156d8:	mov	r1, #4
   156dc:	add	r0, lr, #276	; 0x114
   156e0:	blx	r3
   156e4:	cmp	r0, #4
   156e8:	mov	r9, r7
   156ec:	bcs	15724 <readstat_parse_sav+0x52c>
   156f0:	mov	sl, #2
   156f4:	b	157f8 <readstat_parse_sav+0x600>
   156f8:	ldr	r3, [r5, #8]
   156fc:	ldr	r2, [r5, #20]
   15700:	mov	r0, r6
   15704:	mov	r1, #1
   15708:	blx	r3
   1570c:	add	lr, sp, #1024	; 0x400
   15710:	mov	r9, r7
   15714:	cmn	r0, #1
   15718:	add	r7, lr, #268	; 0x10c
   1571c:	bne	15808 <readstat_parse_sav+0x610>
   15720:	b	15970 <readstat_parse_sav+0x778>
   15724:	ldr	r0, [sp, #72]	; 0x48
   15728:	ldrb	r1, [r0]
   1572c:	ldr	r0, [sp, #1300]	; 0x514
   15730:	tst	r1, #1
   15734:	beq	15740 <readstat_parse_sav+0x548>
   15738:	bl	47b4 <byteswap4@plt>
   1573c:	str	r0, [sp, #1300]	; 0x514
   15740:	add	lr, sp, #1024	; 0x400
   15744:	mov	sl, #5
   15748:	cmp	r0, #4
   1574c:	add	r7, lr, #268	; 0x10c
   15750:	bne	15800 <readstat_parse_sav+0x608>
   15754:	ldr	r3, [r6, #12]
   15758:	ldr	r2, [r6, #20]
   1575c:	add	r0, sp, #1296	; 0x510
   15760:	mov	r1, #4
   15764:	blx	r3
   15768:	cmp	r0, #4
   1576c:	mov	sl, #2
   15770:	bcc	15800 <readstat_parse_sav+0x608>
   15774:	ldr	r0, [sp, #72]	; 0x48
   15778:	ldrb	r1, [r0]
   1577c:	ldr	r0, [sp, #1296]	; 0x510
   15780:	tst	r1, #1
   15784:	beq	15790 <readstat_parse_sav+0x598>
   15788:	bl	47b4 <byteswap4@plt>
   1578c:	str	r0, [sp, #1296]	; 0x510
   15790:	ldr	r3, [r6, #8]
   15794:	ldr	r2, [r6, #20]
   15798:	lsl	r0, r0, #2
   1579c:	mov	r1, #1
   157a0:	blx	r3
   157a4:	cmn	r0, #1
   157a8:	mov	sl, #0
   157ac:	movweq	sl, #15
   157b0:	b	15800 <readstat_parse_sav+0x608>
   157b4:	str	r1, [r8, #56]	; 0x38
   157b8:	cmp	r6, #0
   157bc:	cmpne	r1, #0
   157c0:	beq	15808 <readstat_parse_sav+0x610>
   157c4:	mov	r0, r6
   157c8:	bl	4b14 <iconv_open@plt>
   157cc:	cmn	r0, #1
   157d0:	beq	159e0 <readstat_parse_sav+0x7e8>
   157d4:	mov	r6, r0
   157d8:	ldr	r0, [r8, #336]	; 0x150
   157dc:	cmp	r0, #0
   157e0:	beq	157e8 <readstat_parse_sav+0x5f0>
   157e4:	bl	47d8 <iconv_close@plt>
   157e8:	str	r6, [r8, #336]	; 0x150
   157ec:	b	15808 <readstat_parse_sav+0x610>
   157f0:	mov	sl, #2
   157f4:	mov	r9, r7
   157f8:	add	lr, sp, #1024	; 0x400
   157fc:	add	r7, lr, #268	; 0x10c
   15800:	cmp	sl, #0
   15804:	bne	15974 <readstat_parse_sav+0x77c>
   15808:	ldr	r3, [r5, #12]
   1580c:	ldr	r2, [r5, #20]
   15810:	mov	r0, r7
   15814:	mov	r1, #4
   15818:	blx	r3
   1581c:	cmp	r0, #3
   15820:	bhi	153d4 <readstat_parse_sav+0x1dc>
   15824:	b	153a4 <readstat_parse_sav+0x1ac>
   15828:	movw	r1, #999	; 0x3e7
   1582c:	cmp	r0, r1
   15830:	bne	15974 <readstat_parse_sav+0x77c>
   15834:	ldr	r3, [r4, #8]
   15838:	ldr	r2, [r4, #20]
   1583c:	mov	r0, #176	; 0xb0
   15840:	mov	r1, #0
   15844:	blx	r3
   15848:	cmn	r0, #1
   1584c:	beq	15970 <readstat_parse_sav+0x778>
   15850:	ldr	r3, [r8, #36]	; 0x24
   15854:	ldr	r1, [r8, #28]
   15858:	ldr	r0, [r8, #32]
   1585c:	ldr	r2, [r8, #40]	; 0x28
   15860:	ldr	r6, [r3, #16]
   15864:	ldr	r3, [r3, #20]
   15868:	blx	r6
   1586c:	cmp	r0, #0
   15870:	bne	15378 <readstat_parse_sav+0x180>
   15874:	ldr	r5, [r8, #36]	; 0x24
   15878:	mov	r0, #4096	; 0x1000
   1587c:	bl	4bf8 <readstat_malloc@plt>
   15880:	cmp	r0, #0
   15884:	str	r0, [sp, #68]	; 0x44
   15888:	beq	15cf8 <readstat_parse_sav+0xb00>
   1588c:	ldr	r3, [r5, #12]
   15890:	ldr	r2, [r5, #20]
   15894:	add	lr, sp, #1024	; 0x400
   15898:	mov	r1, #4
   1589c:	add	r0, lr, #264	; 0x108
   158a0:	blx	r3
   158a4:	cmp	r0, #4
   158a8:	bcs	159e8 <readstat_parse_sav+0x7f0>
   158ac:	mov	sl, #2
   158b0:	ldr	r0, [sp, #68]	; 0x44
   158b4:	cmp	r0, #0
   158b8:	beq	158c0 <readstat_parse_sav+0x6c8>
   158bc:	bl	48bc <free@plt>
   158c0:	cmp	sl, #0
   158c4:	bne	15974 <readstat_parse_sav+0x77c>
   158c8:	mov	r0, #0
   158cc:	str	r0, [r8, #348]	; 0x15c
   158d0:	ldr	r1, [r8, #340]	; 0x154
   158d4:	cmp	r1, #1
   158d8:	blt	15934 <readstat_parse_sav+0x73c>
   158dc:	ldr	r2, [r8, #44]	; 0x2c
   158e0:	movw	ip, #2081	; 0x821
   158e4:	mov	r0, #0
   158e8:	mov	r7, #0
   158ec:	movt	ip, #8322	; 0x2082
   158f0:	ldr	r6, [r2, r7, lsl #2]
   158f4:	ldr	r5, [r6, #20]
   158f8:	cmp	r5, #0
   158fc:	beq	15918 <readstat_parse_sav+0x720>
   15900:	add	r5, r5, #251	; 0xfb
   15904:	lsr	r5, r5, #2
   15908:	umull	r5, r3, r5, ip
   1590c:	lsr	r5, r3, #3
   15910:	str	r5, [r6, #48]	; 0x30
   15914:	b	1591c <readstat_parse_sav+0x724>
   15918:	ldr	r5, [r6, #48]	; 0x30
   1591c:	add	r7, r5, r7
   15920:	str	r0, [r6, #8]
   15924:	add	r0, r0, #1
   15928:	cmp	r7, r1
   1592c:	blt	158f0 <readstat_parse_sav+0x6f8>
   15930:	str	r0, [r8, #348]	; 0x15c
   15934:	mov	r1, #4
   15938:	bl	49ac <readstat_calloc@plt>
   1593c:	str	r0, [r8, #52]	; 0x34
   15940:	ldr	r0, [r8, #348]	; 0x15c
   15944:	cmp	r0, #0
   15948:	beq	15cac <readstat_parse_sav+0xab4>
   1594c:	ldr	r1, [r8]
   15950:	cmp	r1, #0
   15954:	beq	15adc <readstat_parse_sav+0x8e4>
   15958:	ldr	r1, [r8, #352]	; 0x160
   1595c:	cmn	r1, #1
   15960:	beq	15a24 <readstat_parse_sav+0x82c>
   15964:	ldr	r1, [r8, #356]	; 0x164
   15968:	asr	r2, r1, #31
   1596c:	b	15a2c <readstat_parse_sav+0x834>
   15970:	mov	sl, #15
   15974:	ldr	r1, [r4, #4]
   15978:	ldr	r0, [r4, #20]
   1597c:	blx	r1
   15980:	cmp	r8, #0
   15984:	beq	15990 <readstat_parse_sav+0x798>
   15988:	mov	r0, r8
   1598c:	bl	4904 <sav_ctx_free@plt>
   15990:	mov	r0, sl
   15994:	sub	sp, fp, #48	; 0x30
   15998:	vpop	{d8-d9}
   1599c:	add	sp, sp, #4
   159a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159a4:	ldr	r0, [r8, #24]
   159a8:	mov	sl, #7
   159ac:	cmp	r0, #0
   159b0:	beq	15974 <readstat_parse_sav+0x77c>
   159b4:	ldr	r2, [pc, #3952]	; 1692c <readstat_parse_sav+0x1734>
   159b8:	add	r5, sp, #264	; 0x108
   159bc:	mov	r1, #1024	; 0x400
   159c0:	mov	r0, r5
   159c4:	add	r2, pc, r2
   159c8:	bl	4c4c <snprintf@plt>
   159cc:	ldr	r2, [r8, #24]
   159d0:	ldr	r1, [r8, #40]	; 0x28
   159d4:	mov	r0, r5
   159d8:	blx	r2
   159dc:	b	15974 <readstat_parse_sav+0x77c>
   159e0:	mov	sl, #7
   159e4:	b	15974 <readstat_parse_sav+0x77c>
   159e8:	add	r0, r8, #400	; 0x190
   159ec:	vmov.i32	q4, #0	; 0x00000000
   159f0:	str	r5, [sp, #60]	; 0x3c
   159f4:	str	r0, [sp, #56]	; 0x38
   159f8:	add	r0, r8, #408	; 0x198
   159fc:	str	r0, [sp, #52]	; 0x34
   15a00:	add	r0, r8, #392	; 0x188
   15a04:	str	r0, [sp, #48]	; 0x30
   15a08:	add	r0, r9, #20
   15a0c:	str	r0, [sp, #32]
   15a10:	add	r0, r8, #344	; 0x158
   15a14:	str	r0, [sp, #28]
   15a18:	mov	r0, #4096	; 0x1000
   15a1c:	str	r0, [sp, #40]	; 0x28
   15a20:	b	16010 <readstat_parse_sav+0xe18>
   15a24:	mvn	r1, #0
   15a28:	mvn	r2, #0
   15a2c:	str	r0, [sp, #1312]	; 0x520
   15a30:	asr	r0, r0, #31
   15a34:	str	r1, [sp, #1304]	; 0x518
   15a38:	add	r5, r8, #64	; 0x40
   15a3c:	mov	r3, #64	; 0x40
   15a40:	str	r0, [sp, #1316]	; 0x524
   15a44:	str	r2, [sp, #1308]	; 0x51c
   15a48:	add	r2, r8, #424	; 0x1a8
   15a4c:	ldr	r0, [r8, #324]	; 0x144
   15a50:	str	r0, [sp, #1324]	; 0x52c
   15a54:	str	r0, [sp, #1320]	; 0x528
   15a58:	ldm	r2, {r0, r1, r2}
   15a5c:	str	r0, [sp, #1328]	; 0x530
   15a60:	asr	r0, r0, #31
   15a64:	str	r0, [sp, #1332]	; 0x534
   15a68:	mov	r0, #0
   15a6c:	str	r1, [sp, #1336]	; 0x538
   15a70:	str	r0, [sp, #1344]	; 0x540
   15a74:	str	r0, [sp, #1348]	; 0x544
   15a78:	str	r2, [sp, #1340]	; 0x53c
   15a7c:	ldrb	r1, [sp, #1356]	; 0x54c
   15a80:	ldr	r0, [r8, #56]	; 0x38
   15a84:	and	r1, r1, #254	; 0xfe
   15a88:	strb	r1, [sp, #1356]	; 0x54c
   15a8c:	str	r0, [sp, #1352]	; 0x548
   15a90:	movw	r1, #257	; 0x101
   15a94:	ldr	r0, [r8, #336]	; 0x150
   15a98:	str	r0, [sp]
   15a9c:	add	r0, sp, #76	; 0x4c
   15aa0:	add	r2, r0, #109	; 0x6d
   15aa4:	mov	r0, r5
   15aa8:	bl	4c04 <readstat_convert@plt>
   15aac:	mov	sl, r0
   15ab0:	cmp	r0, #0
   15ab4:	bne	15974 <readstat_parse_sav+0x77c>
   15ab8:	str	r5, [sp, #1348]	; 0x544
   15abc:	add	lr, sp, #1024	; 0x400
   15ac0:	ldr	r2, [r8]
   15ac4:	ldr	r1, [r8, #40]	; 0x28
   15ac8:	add	r0, lr, #280	; 0x118
   15acc:	blx	r2
   15ad0:	mov	sl, #4
   15ad4:	cmp	r0, #0
   15ad8:	bne	15974 <readstat_parse_sav+0x77c>
   15adc:	ldr	r0, [r8, #328]	; 0x148
   15ae0:	cmp	r0, #0
   15ae4:	beq	15b74 <readstat_parse_sav+0x97c>
   15ae8:	ldr	r1, [r8, #332]	; 0x14c
   15aec:	ldr	r2, [r8, #340]	; 0x154
   15af0:	cmp	r1, r2, lsl #1
   15af4:	addne	r3, r2, r2, lsl #1
   15af8:	cmpne	r1, r3
   15afc:	bne	15cac <readstat_parse_sav+0xab4>
   15b00:	cmp	r2, #1
   15b04:	blt	15b74 <readstat_parse_sav+0x97c>
   15b08:	sdiv	r9, r1, r2
   15b0c:	mov	r7, #0
   15b10:	cmp	r9, #3
   15b14:	mov	sl, r9
   15b18:	movwne	sl, #2
   15b1c:	b	15b24 <readstat_parse_sav+0x92c>
   15b20:	ldr	r0, [r8, #328]	; 0x148
   15b24:	ldr	r1, [r8, #44]	; 0x2c
   15b28:	mul	r6, r7, sl
   15b2c:	ldr	r0, [r0, r6, lsl #2]
   15b30:	ldr	r5, [r1, r7, lsl #2]
   15b34:	bl	4d78 <spss_measure_to_readstat_measure@plt>
   15b38:	str	r0, [r5, #268]	; 0x10c
   15b3c:	add	r1, r6, #1
   15b40:	cmp	r9, #3
   15b44:	ldr	r0, [r8, #328]	; 0x148
   15b48:	ldreq	r1, [r0, r1, lsl #2]
   15b4c:	streq	r1, [r5, #276]	; 0x114
   15b50:	addeq	r1, r6, #2
   15b54:	ldr	r0, [r0, r1, lsl #2]
   15b58:	bl	4d54 <spss_alignment_to_readstat_alignment@plt>
   15b5c:	str	r0, [r5, #272]	; 0x110
   15b60:	ldr	r0, [r5, #48]	; 0x30
   15b64:	add	r7, r0, r7
   15b68:	ldr	r0, [r8, #340]	; 0x154
   15b6c:	cmp	r7, r0
   15b70:	blt	15b20 <readstat_parse_sav+0x928>
   15b74:	ldr	r0, [r8, #8]
   15b78:	cmp	r0, #0
   15b7c:	beq	15c40 <readstat_parse_sav+0xa48>
   15b80:	ldr	r0, [r8, #340]	; 0x154
   15b84:	cmp	r0, #1
   15b88:	blt	15c40 <readstat_parse_sav+0xa48>
   15b8c:	ldr	r9, [pc, #4004]	; 16b38 <readstat_parse_sav+0x1940>
   15b90:	mov	r6, #0
   15b94:	mov	sl, #0
   15b98:	add	r9, pc, r9
   15b9c:	ldr	r0, [r8, #44]	; 0x2c
   15ba0:	ldr	r2, [r8, #336]	; 0x150
   15ba4:	mov	r1, sl
   15ba8:	ldr	r5, [r0, r6, lsl #2]
   15bac:	mov	r0, r5
   15bb0:	bl	4c40 <spss_init_variable_for_info@plt>
   15bb4:	ldr	r1, [r5, #8]
   15bb8:	ldr	r2, [r8, #52]	; 0x34
   15bbc:	add	r7, sp, #264	; 0x108
   15bc0:	str	r0, [r2, r1, lsl #2]
   15bc4:	mov	r0, r7
   15bc8:	mov	r1, #256	; 0x100
   15bcc:	mov	r2, r9
   15bd0:	ldr	r3, [r5, #4]
   15bd4:	bl	4c4c <snprintf@plt>
   15bd8:	ldr	r1, [r5, #4]
   15bdc:	mov	r2, r7
   15be0:	ldr	r0, [r5, #8]
   15be4:	ldr	r7, [r8, #8]
   15be8:	ldr	r3, [r8, #40]	; 0x28
   15bec:	cmn	r1, #1
   15bf0:	addeq	r2, r1, #1
   15bf4:	ldr	r1, [r8, #52]	; 0x34
   15bf8:	ldr	r1, [r1, r0, lsl #2]
   15bfc:	blx	r7
   15c00:	cmp	r0, #2
   15c04:	beq	15c18 <readstat_parse_sav+0xa20>
   15c08:	cmp	r0, #1
   15c0c:	beq	15cb4 <readstat_parse_sav+0xabc>
   15c10:	add	sl, sl, #1
   15c14:	b	15c2c <readstat_parse_sav+0xa34>
   15c18:	ldr	r0, [r5, #8]
   15c1c:	ldr	r1, [r8, #52]	; 0x34
   15c20:	ldr	r0, [r1, r0, lsl #2]
   15c24:	mov	r1, #1
   15c28:	str	r1, [r0, #2144]	; 0x860
   15c2c:	ldr	r0, [r5, #48]	; 0x30
   15c30:	add	r6, r0, r6
   15c34:	ldr	r0, [r8, #340]	; 0x154
   15c38:	cmp	r6, r0
   15c3c:	blt	15b9c <readstat_parse_sav+0x9a4>
   15c40:	ldr	r2, [r8, #12]
   15c44:	cmp	r2, #0
   15c48:	beq	15c60 <readstat_parse_sav+0xa68>
   15c4c:	ldr	r1, [r8, #372]	; 0x174
   15c50:	cmp	r1, #0
   15c54:	ldrge	r0, [r8, #340]	; 0x154
   15c58:	cmpge	r0, #1
   15c5c:	bge	15edc <readstat_parse_sav+0xce4>
   15c60:	ldr	r0, [r8, #16]
   15c64:	mov	sl, #0
   15c68:	cmp	r0, #0
   15c6c:	beq	15974 <readstat_parse_sav+0x77c>
   15c70:	ldr	r0, [r8, #340]	; 0x154
   15c74:	cmp	r0, #1
   15c78:	blt	15cbc <readstat_parse_sav+0xac4>
   15c7c:	ldr	r1, [r8, #44]	; 0x2c
   15c80:	mov	r5, #256	; 0x100
   15c84:	mov	r2, #0
   15c88:	ldr	r3, [r1, r2, lsl #2]
   15c8c:	ldr	r7, [r3, #20]
   15c90:	ldr	r3, [r3, #48]	; 0x30
   15c94:	cmp	r7, r5
   15c98:	add	r2, r3, r2
   15c9c:	movhi	r5, r7
   15ca0:	cmp	r2, r0
   15ca4:	blt	15c88 <readstat_parse_sav+0xa90>
   15ca8:	b	15cc0 <readstat_parse_sav+0xac8>
   15cac:	mov	sl, #5
   15cb0:	b	15974 <readstat_parse_sav+0x77c>
   15cb4:	mov	sl, #4
   15cb8:	b	15974 <readstat_parse_sav+0x77c>
   15cbc:	mov	r5, #256	; 0x100
   15cc0:	add	r0, r5, #7
   15cc4:	str	r0, [r8, #380]	; 0x17c
   15cc8:	bl	4bf8 <readstat_malloc@plt>
   15ccc:	str	r0, [r8, #376]	; 0x178
   15cd0:	mov	r0, #1
   15cd4:	orr	r0, r0, r5, lsl #2
   15cd8:	add	r0, r0, #7
   15cdc:	str	r0, [r8, #388]	; 0x184
   15ce0:	bl	4bf8 <readstat_malloc@plt>
   15ce4:	str	r0, [r8, #384]	; 0x180
   15ce8:	cmp	r0, #0
   15cec:	ldrne	r0, [r8, #376]	; 0x178
   15cf0:	cmpne	r0, #0
   15cf4:	bne	15d00 <readstat_parse_sav+0xb08>
   15cf8:	mov	sl, #3
   15cfc:	b	15974 <readstat_parse_sav+0x77c>
   15d00:	ldr	r0, [r8, #428]	; 0x1ac
   15d04:	cmp	r0, #2
   15d08:	beq	15f30 <readstat_parse_sav+0xd38>
   15d0c:	cmp	r0, #1
   15d10:	bne	15f48 <readstat_parse_sav+0xd50>
   15d14:	add	r2, sp, #264	; 0x108
   15d18:	vmov.i32	q8, #0	; 0x00000000
   15d1c:	mov	r1, #48	; 0x30
   15d20:	ldr	r6, [r8, #36]	; 0x24
   15d24:	ldr	r0, [r8, #344]	; 0x158
   15d28:	mov	r7, #0
   15d2c:	mov	r3, r2
   15d30:	vst1.64	{d16-d17}, [r3], r1
   15d34:	ldr	r1, [r8, #392]	; 0x188
   15d38:	ldr	r2, [r8, #396]	; 0x18c
   15d3c:	cmp	r0, #0
   15d40:	str	r6, [sp, #64]	; 0x40
   15d44:	str	r2, [sp, #284]	; 0x11c
   15d48:	str	r1, [sp, #280]	; 0x118
   15d4c:	mov	r2, #0
   15d50:	vldr	d16, [r8, #416]	; 0x1a0
   15d54:	str	r7, [sp, #300]	; 0x12c
   15d58:	str	r7, [sp, #296]	; 0x128
   15d5c:	str	r7, [sp, #304]	; 0x130
   15d60:	str	r2, [sp, #68]	; 0x44
   15d64:	vstr	d16, [sp, #288]	; 0x120
   15d68:	ldrb	r1, [r8, #436]	; 0x1b4
   15d6c:	str	r7, [r3]
   15d70:	mov	r3, r6
   15d74:	and	r1, r1, #1
   15d78:	str	r1, [sp, #308]	; 0x134
   15d7c:	lsl	r1, r0, #3
   15d80:	str	r1, [sp, #72]	; 0x48
   15d84:	beq	15da0 <readstat_parse_sav+0xba8>
   15d88:	ldr	r0, [sp, #72]	; 0x48
   15d8c:	bl	4bf8 <readstat_malloc@plt>
   15d90:	cmp	r0, #0
   15d94:	str	r0, [sp, #68]	; 0x44
   15d98:	beq	1737c <readstat_parse_sav+0x2184>
   15d9c:	ldr	r3, [r8, #36]	; 0x24
   15da0:	ldr	r7, [r3, #16]
   15da4:	ldr	r1, [r8, #28]
   15da8:	ldr	r0, [r8, #32]
   15dac:	ldr	r2, [r8, #40]	; 0x28
   15db0:	ldr	r3, [r3, #20]
   15db4:	blx	r7
   15db8:	mov	r7, r0
   15dbc:	cmp	r0, #0
   15dc0:	bne	1739c <readstat_parse_sav+0x21a4>
   15dc4:	mov	r9, #0
   15dc8:	ldr	r0, [sp, #64]	; 0x40
   15dcc:	add	lr, sp, #1024	; 0x400
   15dd0:	mov	r1, #65536	; 0x10000
   15dd4:	ldr	r3, [r0, #12]
   15dd8:	ldr	r2, [r0, #20]
   15ddc:	add	r0, lr, #280	; 0x118
   15de0:	blx	r3
   15de4:	mov	r5, r0
   15de8:	add	r0, r0, #1
   15dec:	cmp	r0, #2
   15df0:	bcc	173e0 <readstat_parse_sav+0x21e8>
   15df4:	ands	r0, r5, #7
   15df8:	bne	173e0 <readstat_parse_sav+0x21e8>
   15dfc:	mov	r0, #1
   15e00:	mov	r1, #0
   15e04:	str	r0, [sp, #312]	; 0x138
   15e08:	sub	r0, r5, r1
   15e0c:	add	lr, sp, #1024	; 0x400
   15e10:	str	r0, [sp, #268]	; 0x10c
   15e14:	add	r0, lr, #280	; 0x118
   15e18:	add	r0, r0, r1
   15e1c:	str	r0, [sp, #264]	; 0x108
   15e20:	ldr	r0, [sp, #68]	; 0x44
   15e24:	add	r0, r0, r9
   15e28:	str	r0, [sp, #272]	; 0x110
   15e2c:	ldr	r0, [sp, #72]	; 0x48
   15e30:	sub	r0, r0, r9
   15e34:	str	r0, [sp, #276]	; 0x114
   15e38:	add	r0, sp, #264	; 0x108
   15e3c:	bl	4be0 <sav_decompress_row@plt>
   15e40:	ldr	r0, [sp, #312]	; 0x138
   15e44:	ldr	r6, [sp, #268]	; 0x10c
   15e48:	cmp	r0, #2
   15e4c:	bne	15e74 <readstat_parse_sav+0xc7c>
   15e50:	ldr	r0, [sp, #68]	; 0x44
   15e54:	ldr	r1, [sp, #72]	; 0x48
   15e58:	mov	r2, r8
   15e5c:	bl	17594 <sav_process_row>
   15e60:	cmp	r0, #0
   15e64:	bne	17398 <readstat_parse_sav+0x21a0>
   15e68:	ldr	r0, [sp, #312]	; 0x138
   15e6c:	mov	r9, #0
   15e70:	b	15e80 <readstat_parse_sav+0xc88>
   15e74:	ldr	r1, [sp, #276]	; 0x114
   15e78:	ldr	r2, [sp, #72]	; 0x48
   15e7c:	sub	r9, r2, r1
   15e80:	mov	r7, #0
   15e84:	cmp	r0, #3
   15e88:	beq	1739c <readstat_parse_sav+0x21a4>
   15e8c:	ldr	r1, [r8, #356]	; 0x164
   15e90:	cmp	r1, #1
   15e94:	blt	15ea4 <readstat_parse_sav+0xcac>
   15e98:	ldr	r2, [r8, #364]	; 0x16c
   15e9c:	cmp	r2, r1
   15ea0:	beq	1739c <readstat_parse_sav+0x21a4>
   15ea4:	sub	r1, r5, r6
   15ea8:	cmp	r0, #0
   15eac:	bne	15e08 <readstat_parse_sav+0xc10>
   15eb0:	ldr	r3, [r8, #36]	; 0x24
   15eb4:	ldr	r1, [r8, #28]
   15eb8:	ldr	r0, [r8, #32]
   15ebc:	ldr	r2, [r8, #40]	; 0x28
   15ec0:	ldr	r7, [r3, #16]
   15ec4:	ldr	r3, [r3, #20]
   15ec8:	blx	r7
   15ecc:	mov	r7, r0
   15ed0:	cmp	r0, #0
   15ed4:	beq	15dc8 <readstat_parse_sav+0xbd0>
   15ed8:	b	1739c <readstat_parse_sav+0x21a4>
   15edc:	ldr	r3, [r8, #44]	; 0x2c
   15ee0:	sub	r1, r1, #1
   15ee4:	mov	r7, #0
   15ee8:	ldr	r6, [r3, r7, lsl #2]
   15eec:	ldr	r5, [r6, #12]
   15ef0:	cmp	r5, r1
   15ef4:	beq	15f0c <readstat_parse_sav+0xd14>
   15ef8:	ldr	r6, [r6, #48]	; 0x30
   15efc:	add	r7, r6, r7
   15f00:	cmp	r7, r0
   15f04:	blt	15ee8 <readstat_parse_sav+0xcf0>
   15f08:	b	15c60 <readstat_parse_sav+0xa68>
   15f0c:	ldr	r0, [r6, #8]
   15f10:	ldr	r3, [r8, #52]	; 0x34
   15f14:	ldr	r1, [r8, #40]	; 0x28
   15f18:	ldr	r0, [r3, r0, lsl #2]
   15f1c:	blx	r2
   15f20:	mov	sl, #4
   15f24:	cmp	r0, #0
   15f28:	bne	15974 <readstat_parse_sav+0x77c>
   15f2c:	b	15c60 <readstat_parse_sav+0xa68>
   15f30:	ldr	r1, [pc, #4092]	; 16f34 <readstat_parse_sav+0x1d3c>
   15f34:	mov	r0, r8
   15f38:	add	r1, pc, r1
   15f3c:	bl	4e80 <zsav_read_compressed_data@plt>
   15f40:	mov	r7, r0
   15f44:	b	173b0 <readstat_parse_sav+0x21b8>
   15f48:	ldr	r0, [r8, #344]	; 0x158
   15f4c:	ldr	r5, [r8, #36]	; 0x24
   15f50:	lsl	r6, r0, #3
   15f54:	mov	r0, r6
   15f58:	bl	4bf8 <readstat_malloc@plt>
   15f5c:	mov	r9, r0
   15f60:	ldr	r0, [r8, #360]	; 0x168
   15f64:	cmp	r0, #0
   15f68:	beq	15f90 <readstat_parse_sav+0xd98>
   15f6c:	ldr	r3, [r5, #8]
   15f70:	ldr	r2, [r5, #20]
   15f74:	mul	r0, r0, r6
   15f78:	mov	r1, #1
   15f7c:	blx	r3
   15f80:	cmn	r0, #1
   15f84:	beq	17384 <readstat_parse_sav+0x218c>
   15f88:	mov	r0, #0
   15f8c:	str	r0, [r8, #360]	; 0x168
   15f90:	ldr	r0, [r8, #356]	; 0x164
   15f94:	cmn	r0, #1
   15f98:	beq	15fa8 <readstat_parse_sav+0xdb0>
   15f9c:	ldr	r1, [r8, #364]	; 0x16c
   15fa0:	cmp	r1, r0
   15fa4:	bge	17374 <readstat_parse_sav+0x217c>
   15fa8:	ldr	r3, [r8, #36]	; 0x24
   15fac:	ldr	r1, [r8, #28]
   15fb0:	ldr	r0, [r8, #32]
   15fb4:	ldr	r2, [r8, #40]	; 0x28
   15fb8:	ldr	r7, [r3, #16]
   15fbc:	ldr	r3, [r3, #20]
   15fc0:	blx	r7
   15fc4:	cmp	r0, #0
   15fc8:	bne	16000 <readstat_parse_sav+0xe08>
   15fcc:	ldr	r3, [r5, #12]
   15fd0:	ldr	r2, [r5, #20]
   15fd4:	mov	r0, r9
   15fd8:	mov	r1, r6
   15fdc:	blx	r3
   15fe0:	cmp	r0, r6
   15fe4:	bne	17374 <readstat_parse_sav+0x217c>
   15fe8:	mov	r0, r9
   15fec:	mov	r1, r6
   15ff0:	mov	r2, r8
   15ff4:	bl	17594 <sav_process_row>
   15ff8:	cmp	r0, #0
   15ffc:	beq	15f90 <readstat_parse_sav+0xd98>
   16000:	mov	r7, r0
   16004:	b	17388 <readstat_parse_sav+0x2190>
   16008:	mov	sl, r0
   1600c:	b	16ee4 <readstat_parse_sav+0x1cec>
   16010:	ldr	r0, [sp, #72]	; 0x48
   16014:	ldrb	r1, [r0]
   16018:	ldr	r0, [sp, #1288]	; 0x508
   1601c:	tst	r1, #1
   16020:	beq	1602c <readstat_parse_sav+0xe34>
   16024:	bl	47b4 <byteswap4@plt>
   16028:	str	r0, [sp, #1288]	; 0x508
   1602c:	sub	r1, r0, #2
   16030:	mov	sl, #5
   16034:	cmp	r1, #5
   16038:	bhi	1728c <readstat_parse_sav+0x2094>
   1603c:	add	r0, pc, #4
   16040:	ldr	r1, [r0, r1, lsl #2]
   16044:	add	pc, r0, r1
   16048:	.word	0x00000018
   1604c:	.word	0x0000009c
   16050:	.word	0xfffff868
   16054:	.word	0xfffff868
   16058:	.word	0x000001ec
   1605c:	.word	0x00000224
   16060:	mov	r0, r9
   16064:	mov	r1, #12
   16068:	ldr	r5, [r8, #36]	; 0x24
   1606c:	vst1.64	{d8-d9}, [r0], r1
   16070:	vst1.32	{d8-d9}, [r0]
   16074:	ldr	r0, [r8, #48]	; 0x30
   16078:	ldr	r1, [r8, #340]	; 0x154
   1607c:	cmp	r1, r0
   16080:	bne	160a4 <readstat_parse_sav+0xeac>
   16084:	lsl	r0, r1, #1
   16088:	lsl	r1, r1, #3
   1608c:	str	r0, [r8, #48]	; 0x30
   16090:	ldr	r0, [r8, #44]	; 0x2c
   16094:	bl	4cb8 <readstat_realloc@plt>
   16098:	cmp	r0, #0
   1609c:	str	r0, [r8, #44]	; 0x2c
   160a0:	beq	172d4 <readstat_parse_sav+0x20dc>
   160a4:	ldr	r3, [r5, #12]
   160a8:	ldr	r2, [r5, #20]
   160ac:	mov	r0, r9
   160b0:	mov	r1, #28
   160b4:	blx	r3
   160b8:	mov	r1, #0
   160bc:	mov	sl, #2
   160c0:	cmp	r0, #28
   160c4:	str	r1, [sp, #64]	; 0x40
   160c8:	bcc	17368 <readstat_parse_sav+0x2170>
   160cc:	ldr	r0, [sp, #72]	; 0x48
   160d0:	ldrb	r0, [r0]
   160d4:	tst	r0, #1
   160d8:	bne	163e0 <readstat_parse_sav+0x11e8>
   160dc:	ldr	r0, [sp, #1320]	; 0x528
   160e0:	b	16400 <readstat_parse_sav+0x1208>
   160e4:	ldr	r0, [r8, #36]	; 0x24
   160e8:	add	lr, sp, #1024	; 0x400
   160ec:	mov	r1, #4
   160f0:	ldr	r3, [r0, #12]
   160f4:	ldr	r2, [r0, #20]
   160f8:	str	r0, [sp, #64]	; 0x40
   160fc:	add	r0, lr, #276	; 0x114
   16100:	blx	r3
   16104:	mov	sl, #2
   16108:	cmp	r0, #4
   1610c:	bcc	17260 <readstat_parse_sav+0x2068>
   16110:	ldr	r0, [sp, #72]	; 0x48
   16114:	ldrb	r1, [r0]
   16118:	ldr	r0, [sp, #1300]	; 0x514
   1611c:	tst	r1, #1
   16120:	beq	1612c <readstat_parse_sav+0xf34>
   16124:	bl	47b4 <byteswap4@plt>
   16128:	str	r0, [sp, #1300]	; 0x514
   1612c:	cmp	r0, #0
   16130:	beq	16778 <readstat_parse_sav+0x1580>
   16134:	mov	r1, #72	; 0x48
   16138:	bl	49ac <readstat_calloc@plt>
   1613c:	cmp	r0, #0
   16140:	str	r0, [sp, #44]	; 0x2c
   16144:	beq	16838 <readstat_parse_sav+0x1640>
   16148:	ldr	r0, [sp, #1300]	; 0x514
   1614c:	cmp	r0, #0
   16150:	beq	16780 <readstat_parse_sav+0x1588>
   16154:	ldr	r9, [sp, #44]	; 0x2c
   16158:	mov	r7, #0
   1615c:	ldr	r5, [sp, #64]	; 0x40
   16160:	mov	r0, #0
   16164:	mov	r1, #8
   16168:	strb	r0, [sp, #264]	; 0x108
   1616c:	mov	r0, r9
   16170:	ldr	r3, [r5, #12]
   16174:	ldr	r2, [r5, #20]
   16178:	blx	r3
   1617c:	mov	sl, #2
   16180:	cmp	r0, #8
   16184:	blt	17204 <readstat_parse_sav+0x200c>
   16188:	ldr	r3, [r5, #12]
   1618c:	ldr	r2, [r5, #20]
   16190:	add	r0, sp, #264	; 0x108
   16194:	mov	r1, #1
   16198:	blx	r3
   1619c:	cmp	r0, #1
   161a0:	blt	17204 <readstat_parse_sav+0x200c>
   161a4:	ldrb	r0, [sp, #264]	; 0x108
   161a8:	ldr	r3, [r5, #12]
   161ac:	ldr	r2, [r5, #20]
   161b0:	add	lr, sp, #1024	; 0x400
   161b4:	add	r0, r0, #8
   161b8:	and	r0, r0, #504	; 0x1f8
   161bc:	sub	r6, r0, #1
   161c0:	add	r0, lr, #280	; 0x118
   161c4:	mov	r1, r6
   161c8:	blx	r3
   161cc:	cmp	r0, r6
   161d0:	bcc	17204 <readstat_parse_sav+0x200c>
   161d4:	mov	r0, #1
   161d8:	orr	r5, r0, r6, lsl #2
   161dc:	mov	r0, r5
   161e0:	bl	4bf8 <readstat_malloc@plt>
   161e4:	cmp	r0, #0
   161e8:	str	r0, [r9, #64]	; 0x40
   161ec:	beq	16838 <readstat_parse_sav+0x1640>
   161f0:	ldr	r1, [r8, #336]	; 0x150
   161f4:	add	lr, sp, #1024	; 0x400
   161f8:	mov	r3, r6
   161fc:	add	r2, lr, #280	; 0x118
   16200:	str	r1, [sp]
   16204:	mov	r1, r5
   16208:	bl	4c04 <readstat_convert@plt>
   1620c:	cmp	r0, #0
   16210:	bne	16f2c <readstat_parse_sav+0x1d34>
   16214:	ldr	r0, [sp, #1300]	; 0x514
   16218:	mov	r1, r7
   1621c:	add	r9, r9, #72	; 0x48
   16220:	add	r1, r7, #1
   16224:	mov	r7, r1
   16228:	cmp	r1, r0
   1622c:	bcc	1615c <readstat_parse_sav+0xf64>
   16230:	b	16780 <readstat_parse_sav+0x1588>
   16234:	ldr	r0, [r8, #4]
   16238:	cmp	r0, #0
   1623c:	beq	1661c <readstat_parse_sav+0x1424>
   16240:	ldr	r6, [r8, #36]	; 0x24
   16244:	add	lr, sp, #1024	; 0x400
   16248:	mov	r1, #4
   1624c:	add	r0, lr, #276	; 0x114
   16250:	ldr	r3, [r6, #12]
   16254:	ldr	r2, [r6, #20]
   16258:	blx	r3
   1625c:	cmp	r0, #4
   16260:	bcs	16658 <readstat_parse_sav+0x1460>
   16264:	mov	sl, #2
   16268:	b	17150 <readstat_parse_sav+0x1f58>
   1626c:	ldr	r3, [r5, #12]
   16270:	ldr	r2, [r5, #20]
   16274:	add	r6, sp, #252	; 0xfc
   16278:	mov	r1, #12
   1627c:	mov	r0, r6
   16280:	blx	r3
   16284:	cmp	r0, #12
   16288:	bcc	158ac <readstat_parse_sav+0x6b4>
   1628c:	ldr	r0, [sp, #72]	; 0x48
   16290:	ldrb	r0, [r0]
   16294:	tst	r0, #1
   16298:	beq	162b8 <readstat_parse_sav+0x10c0>
   1629c:	mov	r5, #0
   162a0:	ldr	r0, [r6, -r5, lsl #2]
   162a4:	bl	47b4 <byteswap4@plt>
   162a8:	str	r0, [r6, -r5, lsl #2]
   162ac:	sub	r5, r5, #1
   162b0:	cmn	r5, #3
   162b4:	bne	162a0 <readstat_parse_sav+0x10a8>
   162b8:	ldr	r7, [sp, #256]	; 0x100
   162bc:	ldr	r5, [sp, #260]	; 0x104
   162c0:	ldr	r0, [sp, #40]	; 0x28
   162c4:	ldr	r9, [sp, #252]	; 0xfc
   162c8:	mul	r6, r5, r7
   162cc:	cmp	r0, r6
   162d0:	bcs	162f0 <readstat_parse_sav+0x10f8>
   162d4:	ldr	r0, [sp, #68]	; 0x44
   162d8:	mov	r1, r6
   162dc:	bl	4cb8 <readstat_realloc@plt>
   162e0:	cmp	r0, #0
   162e4:	str	r6, [sp, #40]	; 0x28
   162e8:	bne	162fc <readstat_parse_sav+0x1104>
   162ec:	b	17304 <readstat_parse_sav+0x210c>
   162f0:	ldr	r0, [sp, #68]	; 0x44
   162f4:	cmp	r6, #0
   162f8:	beq	158b0 <readstat_parse_sav+0x6b8>
   162fc:	ldr	r1, [sp, #60]	; 0x3c
   16300:	str	r0, [sp, #68]	; 0x44
   16304:	ldr	r3, [r1, #12]
   16308:	ldr	r2, [r1, #20]
   1630c:	mov	r1, r6
   16310:	blx	r3
   16314:	cmp	r0, r6
   16318:	bcc	158b0 <readstat_parse_sav+0x6b8>
   1631c:	sub	r0, r9, #11
   16320:	cmp	r0, #11
   16324:	bhi	1672c <readstat_parse_sav+0x1534>
   16328:	add	r1, pc, #4
   1632c:	ldr	r0, [r1, r0, lsl #2]
   16330:	add	pc, r1, r0
   16334:	.word	0x00000034
   16338:	.word	0x00000b74
   1633c:	.word	0x0000050c
   16340:	.word	0x00000520
   16344:	.word	0x00000b74
   16348:	.word	0x00000b74
   1634c:	.word	0x00000b74
   16350:	.word	0x00000b74
   16354:	.word	0x00000b74
   16358:	.word	0x00000b74
   1635c:	.word	0x0000053c
   16360:	.word	0x00000808
   16364:	.word	0x0002fb78
   16368:	cmp	r7, #4
   1636c:	bne	158b0 <readstat_parse_sav+0x6b8>
   16370:	ldr	r0, [r8, #328]	; 0x148
   16374:	lsl	r1, r5, #2
   16378:	bl	4cb8 <readstat_realloc@plt>
   1637c:	cmp	r5, #0
   16380:	str	r0, [r8, #328]	; 0x148
   16384:	beq	16390 <readstat_parse_sav+0x1198>
   16388:	cmp	r0, #0
   1638c:	beq	1730c <readstat_parse_sav+0x2114>
   16390:	cmp	r5, #0
   16394:	str	r5, [r8, #332]	; 0x14c
   16398:	beq	16ea8 <readstat_parse_sav+0x1cb0>
   1639c:	ldr	r3, [sp, #68]	; 0x44
   163a0:	mov	r6, #0
   163a4:	ldr	r2, [sp, #72]	; 0x48
   163a8:	ldr	r1, [r3, r6, lsl #2]
   163ac:	ldrb	r2, [r2]
   163b0:	tst	r2, #1
   163b4:	beq	163cc <readstat_parse_sav+0x11d4>
   163b8:	mov	r0, r1
   163bc:	bl	47b4 <byteswap4@plt>
   163c0:	mov	r1, r0
   163c4:	ldr	r3, [sp, #68]	; 0x44
   163c8:	ldr	r0, [r8, #328]	; 0x148
   163cc:	str	r1, [r0, r6, lsl #2]
   163d0:	add	r6, r6, #1
   163d4:	cmp	r5, r6
   163d8:	bne	163a4 <readstat_parse_sav+0x11ac>
   163dc:	b	16ea8 <readstat_parse_sav+0x1cb0>
   163e0:	ldr	r0, [sp, #1316]	; 0x524
   163e4:	bl	47b4 <byteswap4@plt>
   163e8:	ldr	r1, [sp, #72]	; 0x48
   163ec:	ldrb	r1, [r1]
   163f0:	str	r0, [sp, #1316]	; 0x524
   163f4:	ldr	r0, [sp, #1320]	; 0x528
   163f8:	tst	r1, #1
   163fc:	bne	16700 <readstat_parse_sav+0x1508>
   16400:	str	r0, [sp, #1320]	; 0x528
   16404:	ldr	r9, [sp, #1304]	; 0x518
   16408:	cmn	r9, #1
   1640c:	ble	1662c <readstat_parse_sav+0x1434>
   16410:	mov	r0, #1
   16414:	mov	r1, #280	; 0x118
   16418:	bl	49ac <readstat_calloc@plt>
   1641c:	cmp	r0, #0
   16420:	beq	172d4 <readstat_parse_sav+0x20dc>
   16424:	mov	r7, r0
   16428:	mov	r0, #1
   1642c:	ldr	r5, [sp, #32]
   16430:	mvn	r1, #0
   16434:	mov	r6, #0
   16438:	mov	r3, #8
   1643c:	str	r0, [r7, #48]	; 0x30
   16440:	str	r0, [r7, #16]
   16444:	ldr	r0, [r8, #340]	; 0x154
   16448:	mov	r2, r5
   1644c:	str	r0, [r7, #8]
   16450:	ldr	r0, [r8, #344]	; 0x158
   16454:	str	r1, [r7, #4]
   16458:	mov	r1, #9
   1645c:	str	r0, [r7, #12]
   16460:	add	r0, r7, #187	; 0xbb
   16464:	str	r6, [sp]
   16468:	bl	4c04 <readstat_convert@plt>
   1646c:	cmp	r0, #0
   16470:	str	r7, [sp, #64]	; 0x40
   16474:	bne	172c4 <readstat_parse_sav+0x20cc>
   16478:	add	r0, r7, #196	; 0xc4
   1647c:	mov	r1, #65	; 0x41
   16480:	mov	r2, r5
   16484:	mov	r3, #8
   16488:	str	r6, [sp]
   1648c:	bl	4c04 <readstat_convert@plt>
   16490:	cmp	r0, #0
   16494:	bne	172c4 <readstat_parse_sav+0x20cc>
   16498:	ldr	r0, [sp, #1316]	; 0x524
   1649c:	cmp	r9, #0
   164a0:	ubfx	r1, r0, #8, #8
   164a4:	str	r1, [r7, #28]
   164a8:	uxtb	r1, r0
   164ac:	str	r1, [r7, #32]
   164b0:	ubfx	r0, r0, #16, #8
   164b4:	str	r0, [r7, #24]
   164b8:	ldr	r1, [sp, #1320]	; 0x528
   164bc:	ubfx	r2, r1, #8, #8
   164c0:	str	r2, [r7, #40]	; 0x28
   164c4:	uxtb	r2, r1
   164c8:	str	r2, [r7, #44]	; 0x2c
   164cc:	ubfx	r2, r1, #16, #8
   164d0:	mov	r1, #0
   164d4:	str	r2, [r7, #36]	; 0x24
   164d8:	bgt	164ec <readstat_parse_sav+0x12f4>
   164dc:	subs	r2, r2, #1
   164e0:	movwne	r2, #5
   164e4:	subs	r1, r0, #1
   164e8:	movne	r1, r2
   164ec:	str	r1, [r7]
   164f0:	ldr	r0, [sp, #1308]	; 0x51c
   164f4:	cmp	r0, #0
   164f8:	beq	165cc <readstat_parse_sav+0x13d4>
   164fc:	ldr	sl, [r8, #36]	; 0x24
   16500:	add	r0, sp, #264	; 0x108
   16504:	mov	r1, #4
   16508:	ldr	r3, [sl, #12]
   1650c:	ldr	r2, [sl, #20]
   16510:	blx	r3
   16514:	cmp	r0, #4
   16518:	bcc	1731c <readstat_parse_sav+0x2124>
   1651c:	ldr	r0, [sp, #72]	; 0x48
   16520:	ldrb	r1, [r0]
   16524:	ldr	r0, [sp, #264]	; 0x108
   16528:	tst	r1, #1
   1652c:	beq	16534 <readstat_parse_sav+0x133c>
   16530:	bl	47b4 <byteswap4@plt>
   16534:	cmp	r0, #0
   16538:	str	r0, [sp, #264]	; 0x108
   1653c:	beq	165cc <readstat_parse_sav+0x13d4>
   16540:	add	r0, r0, #3
   16544:	bic	r6, r0, #3
   16548:	mov	r0, r6
   1654c:	bl	4bf8 <readstat_malloc@plt>
   16550:	cmp	r0, #0
   16554:	beq	1732c <readstat_parse_sav+0x2134>
   16558:	mov	r9, r0
   1655c:	ldr	r0, [sp, #264]	; 0x108
   16560:	mov	r1, #1
   16564:	orr	r7, r1, r0, lsl #2
   16568:	mov	r0, r7
   1656c:	bl	4bf8 <readstat_malloc@plt>
   16570:	ldr	r5, [sp, #64]	; 0x40
   16574:	cmp	r0, #0
   16578:	str	r0, [r5, #264]!	; 0x108
   1657c:	beq	1733c <readstat_parse_sav+0x2144>
   16580:	ldr	r3, [sl, #12]
   16584:	ldr	r2, [sl, #20]
   16588:	mov	r0, r9
   1658c:	mov	r1, r6
   16590:	blx	r3
   16594:	cmp	r0, r6
   16598:	bcc	17344 <readstat_parse_sav+0x214c>
   1659c:	ldr	r1, [r8, #336]	; 0x150
   165a0:	ldr	r0, [r5]
   165a4:	ldr	r3, [sp, #264]	; 0x108
   165a8:	mov	r2, r9
   165ac:	str	r1, [sp]
   165b0:	mov	r1, r7
   165b4:	bl	4c04 <readstat_convert@plt>
   165b8:	mov	sl, r0
   165bc:	mov	r0, r9
   165c0:	bl	48bc <free@plt>
   165c4:	cmp	sl, #0
   165c8:	bne	17330 <readstat_parse_sav+0x2138>
   165cc:	ldr	r0, [sp, #1312]	; 0x520
   165d0:	ldr	r7, [sp, #64]	; 0x40
   165d4:	cmp	r0, #0
   165d8:	beq	16e84 <readstat_parse_sav+0x1c8c>
   165dc:	ldr	r1, [sp, #72]	; 0x48
   165e0:	mov	r5, #0
   165e4:	ldrb	r1, [r1]
   165e8:	tst	r1, #1
   165ec:	beq	165f4 <readstat_parse_sav+0x13fc>
   165f0:	bl	47b4 <byteswap4@plt>
   165f4:	ldr	r1, [sp, #64]	; 0x40
   165f8:	str	r0, [r1, #52]	; 0x34
   165fc:	add	r1, r0, #3
   16600:	cmp	r1, #6
   16604:	bhi	17324 <readstat_parse_sav+0x212c>
   16608:	cmn	r0, #1
   1660c:	ble	16cfc <readstat_parse_sav+0x1b04>
   16610:	ldr	r1, [sp, #64]	; 0x40
   16614:	str	r5, [r1, #56]	; 0x38
   16618:	b	16d10 <readstat_parse_sav+0x1b18>
   1661c:	mov	r0, r8
   16620:	bl	173f4 <sav_skip_document_record>
   16624:	mov	sl, r0
   16628:	b	17150 <readstat_parse_sav+0x1f58>
   1662c:	ldr	r0, [r8, #340]	; 0x154
   16630:	cmp	r0, #0
   16634:	beq	17314 <readstat_parse_sav+0x211c>
   16638:	ldr	r2, [r8, #344]	; 0x158
   1663c:	ldr	r1, [r8, #44]	; 0x2c
   16640:	add	r2, r2, #1
   16644:	add	r0, r1, r0, lsl #2
   16648:	str	r2, [r8, #344]	; 0x158
   1664c:	ldr	r0, [r0, #-4]
   16650:	add	r0, r0, #16
   16654:	b	16e9c <readstat_parse_sav+0x1ca4>
   16658:	ldr	r0, [sp, #72]	; 0x48
   1665c:	ldrb	r1, [r0]
   16660:	ldr	r0, [sp, #1300]	; 0x514
   16664:	tst	r1, #1
   16668:	beq	16674 <readstat_parse_sav+0x147c>
   1666c:	bl	47b4 <byteswap4@plt>
   16670:	str	r0, [sp, #1300]	; 0x514
   16674:	cmp	r0, #0
   16678:	beq	166f8 <readstat_parse_sav+0x1500>
   1667c:	add	lr, sp, #1024	; 0x400
   16680:	mov	r5, #0
   16684:	add	r7, sp, #264	; 0x108
   16688:	add	r9, lr, #280	; 0x118
   1668c:	ldr	r3, [r6, #12]
   16690:	ldr	r2, [r6, #20]
   16694:	mov	r0, r7
   16698:	mov	r1, #80	; 0x50
   1669c:	blx	r3
   166a0:	cmp	r0, #80	; 0x50
   166a4:	blt	16264 <readstat_parse_sav+0x106c>
   166a8:	ldr	r0, [r8, #336]	; 0x150
   166ac:	movw	r1, #321	; 0x141
   166b0:	mov	r2, r7
   166b4:	mov	r3, #80	; 0x50
   166b8:	str	r0, [sp]
   166bc:	mov	r0, r9
   166c0:	bl	4c04 <readstat_convert@plt>
   166c4:	cmp	r0, #0
   166c8:	bne	16624 <readstat_parse_sav+0x142c>
   166cc:	ldr	r3, [r8, #4]
   166d0:	ldr	r2, [r8, #40]	; 0x28
   166d4:	mov	r0, r5
   166d8:	mov	r1, r9
   166dc:	blx	r3
   166e0:	cmp	r0, #0
   166e4:	bne	16ec0 <readstat_parse_sav+0x1cc8>
   166e8:	ldr	r0, [sp, #1300]	; 0x514
   166ec:	add	r5, r5, #1
   166f0:	cmp	r5, r0
   166f4:	bcc	1668c <readstat_parse_sav+0x1494>
   166f8:	mov	sl, #0
   166fc:	b	17150 <readstat_parse_sav+0x1f58>
   16700:	bl	47b4 <byteswap4@plt>
   16704:	ldr	r1, [sp, #72]	; 0x48
   16708:	ldrb	r1, [r1]
   1670c:	str	r0, [sp, #1320]	; 0x528
   16710:	ldr	r9, [sp, #1304]	; 0x518
   16714:	tst	r1, #1
   16718:	beq	16408 <readstat_parse_sav+0x1210>
   1671c:	mov	r0, r9
   16720:	bl	47b4 <byteswap4@plt>
   16724:	mov	r9, r0
   16728:	b	16408 <readstat_parse_sav+0x1210>
   1672c:	cmp	r9, #4
   16730:	bne	16ea8 <readstat_parse_sav+0x1cb0>
   16734:	cmp	r7, #8
   16738:	cmpeq	r5, #3
   1673c:	bne	158b0 <readstat_parse_sav+0x6b8>
   16740:	ldr	r2, [sp, #68]	; 0x44
   16744:	ldr	r9, [r2, #20]
   16748:	ldr	sl, [r2, #16]
   1674c:	ldr	r0, [r2]
   16750:	ldr	r1, [r2, #4]
   16754:	ldr	r6, [r2, #8]
   16758:	ldr	r5, [r2, #12]
   1675c:	ldr	r2, [sp, #72]	; 0x48
   16760:	ldrb	r2, [r2]
   16764:	tst	r2, #1
   16768:	bne	16ef4 <readstat_parse_sav+0x1cfc>
   1676c:	ldr	r2, [sp, #48]	; 0x30
   16770:	strd	r0, [r2]
   16774:	b	16f10 <readstat_parse_sav+0x1d18>
   16778:	mov	r0, #0
   1677c:	str	r0, [sp, #44]	; 0x2c
   16780:	ldr	r0, [sp, #64]	; 0x40
   16784:	add	lr, sp, #1024	; 0x400
   16788:	mov	r1, #4
   1678c:	ldr	r3, [r0, #12]
   16790:	ldr	r2, [r0, #20]
   16794:	add	r0, lr, #268	; 0x10c
   16798:	blx	r3
   1679c:	mov	sl, #2
   167a0:	cmp	r0, #4
   167a4:	bcc	17204 <readstat_parse_sav+0x200c>
   167a8:	ldr	r0, [sp, #72]	; 0x48
   167ac:	ldrb	r1, [r0]
   167b0:	ldr	r0, [sp, #1292]	; 0x50c
   167b4:	tst	r1, #1
   167b8:	beq	167c4 <readstat_parse_sav+0x15cc>
   167bc:	bl	47b4 <byteswap4@plt>
   167c0:	str	r0, [sp, #1292]	; 0x50c
   167c4:	cmp	r0, #4
   167c8:	bne	16eb8 <readstat_parse_sav+0x1cc0>
   167cc:	ldr	r0, [sp, #64]	; 0x40
   167d0:	mov	r1, #4
   167d4:	ldr	r3, [r0, #12]
   167d8:	ldr	r2, [r0, #20]
   167dc:	add	r0, sp, #1296	; 0x510
   167e0:	blx	r3
   167e4:	cmp	r0, #4
   167e8:	bcc	17204 <readstat_parse_sav+0x200c>
   167ec:	ldr	r0, [sp, #72]	; 0x48
   167f0:	ldrb	r1, [r0]
   167f4:	ldr	r0, [sp, #1296]	; 0x510
   167f8:	tst	r1, #1
   167fc:	beq	16808 <readstat_parse_sav+0x1610>
   16800:	bl	47b4 <byteswap4@plt>
   16804:	str	r0, [sp, #1296]	; 0x510
   16808:	cmp	r0, #0
   1680c:	beq	16f40 <readstat_parse_sav+0x1d48>
   16810:	lsl	r0, r0, #2
   16814:	bl	4bf8 <readstat_malloc@plt>
   16818:	cmp	r0, #0
   1681c:	str	r0, [sp, #36]	; 0x24
   16820:	beq	170dc <readstat_parse_sav+0x1ee4>
   16824:	ldr	r0, [sp, #1296]	; 0x510
   16828:	lsl	r1, r0, #2
   1682c:	ldr	r0, [sp, #36]	; 0x24
   16830:	str	r0, [sp, #24]
   16834:	b	16f54 <readstat_parse_sav+0x1d5c>
   16838:	mov	sl, #3
   1683c:	b	17204 <readstat_parse_sav+0x200c>
   16840:	ldr	r0, [sp, #68]	; 0x44
   16844:	mov	r1, r5
   16848:	mov	r2, r8
   1684c:	bl	4bc8 <sav_parse_long_variable_names_record@plt>
   16850:	b	16864 <readstat_parse_sav+0x166c>
   16854:	ldr	r0, [sp, #68]	; 0x44
   16858:	mov	r1, r5
   1685c:	mov	r2, r8
   16860:	bl	4cac <sav_parse_very_long_string_record@plt>
   16864:	cmp	r0, #0
   16868:	beq	16ea8 <readstat_parse_sav+0x1cb0>
   1686c:	b	172fc <readstat_parse_sav+0x2104>
   16870:	ldr	r0, [r8, #20]
   16874:	cmp	r0, #0
   16878:	beq	16ea8 <readstat_parse_sav+0x1cb0>
   1687c:	cmp	r7, #1
   16880:	bne	158b0 <readstat_parse_sav+0x6b8>
   16884:	ldr	r0, [sp, #68]	; 0x44
   16888:	cmp	r5, #1
   1688c:	str	r0, [sp, #1300]	; 0x514
   16890:	add	r0, r0, r5
   16894:	str	r0, [sp, #44]	; 0x2c
   16898:	mov	r0, #0
   1689c:	blt	16ec8 <readstat_parse_sav+0x1cd0>
   168a0:	ldr	r7, [sp, #68]	; 0x44
   168a4:	str	r0, [sp, #24]
   168a8:	mov	r0, #0
   168ac:	str	r0, [sp, #36]	; 0x24
   168b0:	add	r0, sp, #264	; 0x108
   168b4:	mov	r1, #0
   168b8:	mov	r2, #256	; 0x100
   168bc:	bl	4c70 <memset@plt>
   168c0:	ldr	r0, [sp, #44]	; 0x2c
   168c4:	add	lr, sp, #1024	; 0x400
   168c8:	mov	r3, r8
   168cc:	sub	r2, r0, r7
   168d0:	add	r0, lr, #280	; 0x118
   168d4:	add	lr, sp, #1024	; 0x400
   168d8:	add	r1, lr, #276	; 0x114
   168dc:	bl	17500 <sav_read_pascal_string>
   168e0:	cmp	r0, #0
   168e4:	bne	16008 <readstat_parse_sav+0xe10>
   168e8:	ldr	r9, [r8, #340]	; 0x154
   168ec:	cmp	r9, #0
   168f0:	beq	16954 <readstat_parse_sav+0x175c>
   168f4:	ldr	sl, [r8, #44]	; 0x2c
   168f8:	mov	r5, #0
   168fc:	ldr	r6, [sl, r5, lsl #2]
   16900:	add	lr, sp, #1024	; 0x400
   16904:	add	r0, lr, #280	; 0x118
   16908:	add	r1, r6, #196	; 0xc4
   1690c:	bl	4808 <strcmp@plt>
   16910:	cmp	r0, #0
   16914:	beq	16930 <readstat_parse_sav+0x1738>
   16918:	ldr	r0, [r6, #48]	; 0x30
   1691c:	add	r5, r0, r5
   16920:	cmp	r5, r9
   16924:	bcc	168fc <readstat_parse_sav+0x1704>
   16928:	b	16954 <readstat_parse_sav+0x175c>
   1692c:	.word	0x0000fbe8
   16930:	ldr	r3, [r8, #368]	; 0x170
   16934:	mov	r1, #256	; 0x100
   16938:	add	r0, r3, #1
   1693c:	str	r0, [r8, #368]	; 0x170
   16940:	str	r3, [r6, #4]
   16944:	add	r0, sp, #264	; 0x108
   16948:	ldr	r2, [pc, #2720]	; 173f0 <readstat_parse_sav+0x21f8>
   1694c:	add	r2, pc, r2
   16950:	bl	4c4c <snprintf@plt>
   16954:	ldrb	r0, [sp, #264]	; 0x108
   16958:	mov	sl, #5
   1695c:	cmp	r0, #0
   16960:	beq	16ee4 <readstat_parse_sav+0x1cec>
   16964:	ldr	r1, [sp, #1300]	; 0x514
   16968:	add	r0, r1, #4
   1696c:	add	r7, r1, #8
   16970:	ldr	r1, [sp, #44]	; 0x2c
   16974:	str	r0, [sp, #1300]	; 0x514
   16978:	cmp	r7, r1
   1697c:	bhi	16ee4 <readstat_parse_sav+0x1cec>
   16980:	ldr	r0, [r0]
   16984:	str	r0, [sp, #20]
   16988:	ldr	r0, [sp, #72]	; 0x48
   1698c:	ldrb	r0, [r0]
   16990:	tst	r0, #1
   16994:	beq	169a4 <readstat_parse_sav+0x17ac>
   16998:	ldr	r0, [sp, #20]
   1699c:	bl	47b4 <byteswap4@plt>
   169a0:	str	r0, [sp, #20]
   169a4:	ldr	r0, [sp, #20]
   169a8:	str	r7, [sp, #1300]	; 0x514
   169ac:	cmp	r0, #0
   169b0:	beq	16b28 <readstat_parse_sav+0x1930>
   169b4:	mov	r0, #0
   169b8:	str	r0, [sp, #16]
   169bc:	ldr	r0, [sp, #44]	; 0x2c
   169c0:	add	r1, r7, #4
   169c4:	str	r1, [sp, #64]	; 0x40
   169c8:	cmp	r1, r0
   169cc:	bhi	170ec <readstat_parse_sav+0x1ef4>
   169d0:	ldr	r0, [sp, #72]	; 0x48
   169d4:	ldr	r6, [r7]
   169d8:	ldrb	r0, [r0]
   169dc:	tst	r0, #1
   169e0:	beq	169f0 <readstat_parse_sav+0x17f8>
   169e4:	mov	r0, r6
   169e8:	bl	47b4 <byteswap4@plt>
   169ec:	mov	r6, r0
   169f0:	mov	r0, #1
   169f4:	orr	r5, r0, r6, lsl #2
   169f8:	ldr	r0, [sp, #36]	; 0x24
   169fc:	mov	r1, r5
   16a00:	bl	4cb8 <readstat_realloc@plt>
   16a04:	cmp	r0, #0
   16a08:	str	r0, [sp, #36]	; 0x24
   16a0c:	beq	170f8 <readstat_parse_sav+0x1f00>
   16a10:	ldr	r0, [sp, #64]	; 0x40
   16a14:	add	r9, r0, r6
   16a18:	ldr	r0, [sp, #44]	; 0x2c
   16a1c:	cmp	r9, r0
   16a20:	bhi	1710c <readstat_parse_sav+0x1f14>
   16a24:	ldr	r0, [r8, #336]	; 0x150
   16a28:	ldr	r2, [sp, #64]	; 0x40
   16a2c:	mov	r1, r5
   16a30:	mov	r3, r6
   16a34:	str	r0, [sp]
   16a38:	ldr	r0, [sp, #36]	; 0x24
   16a3c:	bl	4c04 <readstat_convert@plt>
   16a40:	cmp	r0, #0
   16a44:	bne	170d4 <readstat_parse_sav+0x1edc>
   16a48:	ldr	r0, [sp, #44]	; 0x2c
   16a4c:	add	r1, r9, #4
   16a50:	str	r1, [sp, #64]	; 0x40
   16a54:	cmp	r1, r0
   16a58:	bhi	17108 <readstat_parse_sav+0x1f10>
   16a5c:	ldr	r0, [sp, #72]	; 0x48
   16a60:	ldr	r6, [r9]
   16a64:	ldrb	r0, [r0]
   16a68:	tst	r0, #1
   16a6c:	beq	16a7c <readstat_parse_sav+0x1884>
   16a70:	mov	r0, r6
   16a74:	bl	47b4 <byteswap4@plt>
   16a78:	mov	r6, r0
   16a7c:	mov	r0, #1
   16a80:	orr	r5, r0, r6, lsl #2
   16a84:	ldr	r0, [sp, #24]
   16a88:	mov	r1, r5
   16a8c:	bl	4cb8 <readstat_realloc@plt>
   16a90:	cmp	r0, #0
   16a94:	str	r0, [sp, #24]
   16a98:	beq	17114 <readstat_parse_sav+0x1f1c>
   16a9c:	ldr	r0, [sp, #64]	; 0x40
   16aa0:	add	r7, r0, r6
   16aa4:	ldr	r0, [sp, #44]	; 0x2c
   16aa8:	cmp	r7, r0
   16aac:	bhi	1710c <readstat_parse_sav+0x1f14>
   16ab0:	ldr	r0, [r8, #336]	; 0x150
   16ab4:	ldr	r2, [sp, #64]	; 0x40
   16ab8:	mov	r1, r5
   16abc:	mov	r3, r6
   16ac0:	str	r0, [sp]
   16ac4:	ldr	r0, [sp, #24]
   16ac8:	bl	4c04 <readstat_convert@plt>
   16acc:	cmp	r0, #0
   16ad0:	bne	170d4 <readstat_parse_sav+0x1edc>
   16ad4:	mov	r2, #0
   16ad8:	ldr	r1, [r8, #20]
   16adc:	ldr	r0, [r8, #40]	; 0x28
   16ae0:	mov	r3, #0
   16ae4:	str	r2, [sp]
   16ae8:	str	r2, [sp, #4]
   16aec:	ldr	r2, [sp, #24]
   16af0:	str	r0, [sp, #12]
   16af4:	add	r0, sp, #264	; 0x108
   16af8:	str	r2, [sp, #8]
   16afc:	ldr	r2, [sp, #36]	; 0x24
   16b00:	blx	r1
   16b04:	cmp	r0, #0
   16b08:	bne	17124 <readstat_parse_sav+0x1f2c>
   16b0c:	ldr	r1, [sp, #16]
   16b10:	ldr	r0, [sp, #20]
   16b14:	add	r1, r1, #1
   16b18:	cmp	r1, r0
   16b1c:	str	r1, [sp, #16]
   16b20:	bcc	169bc <readstat_parse_sav+0x17c4>
   16b24:	str	r7, [sp, #1300]	; 0x514
   16b28:	ldr	r0, [sp, #44]	; 0x2c
   16b2c:	cmp	r7, r0
   16b30:	bcc	168b0 <readstat_parse_sav+0x16b8>
   16b34:	b	16ed8 <readstat_parse_sav+0x1ce0>
   16b38:	.word	0x0000ed7b
   16b3c:	cmp	r7, #1
   16b40:	bne	158b0 <readstat_parse_sav+0x6b8>
   16b44:	ldr	r0, [sp, #68]	; 0x44
   16b48:	add	r1, r0, r5
   16b4c:	str	r0, [sp, #264]	; 0x108
   16b50:	str	r0, [sp, #64]	; 0x40
   16b54:	str	r1, [sp, #44]	; 0x2c
   16b58:	ldr	r0, [sp, #44]	; 0x2c
   16b5c:	ldr	r1, [sp, #64]	; 0x40
   16b60:	cmp	r1, r0
   16b64:	bcs	16f38 <readstat_parse_sav+0x1d40>
   16b68:	ldr	r0, [sp, #44]	; 0x2c
   16b6c:	ldr	r1, [sp, #64]	; 0x40
   16b70:	add	lr, sp, #1024	; 0x400
   16b74:	mov	r3, r8
   16b78:	sub	r2, r0, r1
   16b7c:	add	r0, lr, #280	; 0x118
   16b80:	add	r1, sp, #264	; 0x108
   16b84:	bl	17500 <sav_read_pascal_string>
   16b88:	cmp	r0, #0
   16b8c:	bne	172fc <readstat_parse_sav+0x2104>
   16b90:	ldr	r1, [sp, #264]	; 0x108
   16b94:	ldr	r0, [sp, #44]	; 0x2c
   16b98:	mov	sl, #5
   16b9c:	cmp	r1, r0
   16ba0:	str	r1, [sp, #24]
   16ba4:	beq	158b0 <readstat_parse_sav+0x6b8>
   16ba8:	ldr	r1, [sp, #24]
   16bac:	add	r0, r1, #1
   16bb0:	str	r0, [sp, #264]	; 0x108
   16bb4:	str	r0, [sp, #64]	; 0x40
   16bb8:	ldrb	r0, [r1]
   16bbc:	str	r0, [sp, #36]	; 0x24
   16bc0:	sub	r0, r0, #1
   16bc4:	uxtb	r0, r0
   16bc8:	cmp	r0, #2
   16bcc:	bhi	158b0 <readstat_parse_sav+0x6b8>
   16bd0:	ldr	r0, [r8, #340]	; 0x154
   16bd4:	cmp	r0, #0
   16bd8:	beq	16c18 <readstat_parse_sav+0x1a20>
   16bdc:	ldr	r5, [r8, #44]	; 0x2c
   16be0:	mov	r7, r0
   16be4:	mov	r9, #0
   16be8:	ldr	r6, [r5, r9, lsl #2]
   16bec:	add	lr, sp, #1024	; 0x400
   16bf0:	add	r0, lr, #280	; 0x118
   16bf4:	add	r1, r6, #196	; 0xc4
   16bf8:	bl	4808 <strcmp@plt>
   16bfc:	cmp	r0, #0
   16c00:	beq	16c20 <readstat_parse_sav+0x1a28>
   16c04:	ldr	r0, [r6, #48]	; 0x30
   16c08:	add	r9, r0, r9
   16c0c:	cmp	r9, r7
   16c10:	bcc	16be8 <readstat_parse_sav+0x19f0>
   16c14:	b	16cec <readstat_parse_sav+0x1af4>
   16c18:	mov	r9, #0
   16c1c:	b	16cec <readstat_parse_sav+0x1af4>
   16c20:	ldr	r0, [sp, #36]	; 0x24
   16c24:	str	r0, [r6, #52]	; 0x34
   16c28:	ldr	r0, [sp, #24]
   16c2c:	add	r1, r0, #5
   16c30:	ldr	r0, [sp, #44]	; 0x2c
   16c34:	str	r1, [sp, #20]
   16c38:	cmp	r1, r0
   16c3c:	bhi	158b0 <readstat_parse_sav+0x6b8>
   16c40:	ldr	r0, [sp, #64]	; 0x40
   16c44:	ldr	r0, [r0]
   16c48:	str	r0, [sp, #24]
   16c4c:	ldr	r0, [sp, #72]	; 0x48
   16c50:	ldrb	r0, [r0]
   16c54:	tst	r0, #1
   16c58:	beq	16c68 <readstat_parse_sav+0x1a70>
   16c5c:	ldr	r0, [sp, #24]
   16c60:	bl	47b4 <byteswap4@plt>
   16c64:	str	r0, [sp, #24]
   16c68:	ldr	r0, [sp, #20]
   16c6c:	str	r0, [sp, #264]	; 0x108
   16c70:	ldr	r0, [sp, #36]	; 0x24
   16c74:	cmp	r0, #0
   16c78:	beq	16ce4 <readstat_parse_sav+0x1aec>
   16c7c:	ldr	r2, [sp, #20]
   16c80:	add	r6, r6, #88	; 0x58
   16c84:	mov	r5, #0
   16c88:	ldr	r3, [sp, #24]
   16c8c:	ldr	r1, [sp, #44]	; 0x2c
   16c90:	add	r0, r2, r3
   16c94:	cmp	r0, r1
   16c98:	str	r0, [sp, #64]	; 0x40
   16c9c:	bhi	172e4 <readstat_parse_sav+0x20ec>
   16ca0:	ldr	r0, [r8, #336]	; 0x150
   16ca4:	mov	r1, #33	; 0x21
   16ca8:	mov	r7, r2
   16cac:	str	r0, [sp]
   16cb0:	mov	r0, r6
   16cb4:	bl	4c04 <readstat_convert@plt>
   16cb8:	cmp	r0, #0
   16cbc:	bne	172f0 <readstat_parse_sav+0x20f8>
   16cc0:	ldr	r0, [sp, #36]	; 0x24
   16cc4:	ldr	r2, [sp, #64]	; 0x40
   16cc8:	add	r5, r5, #1
   16ccc:	add	r6, r6, #33	; 0x21
   16cd0:	cmp	r5, r0
   16cd4:	bcc	16c88 <readstat_parse_sav+0x1a90>
   16cd8:	ldr	r0, [sp, #64]	; 0x40
   16cdc:	str	r0, [sp, #264]	; 0x108
   16ce0:	b	16cec <readstat_parse_sav+0x1af4>
   16ce4:	ldr	r0, [sp, #20]
   16ce8:	str	r0, [sp, #64]	; 0x40
   16cec:	ldr	r0, [r8, #340]	; 0x154
   16cf0:	cmp	r9, r0
   16cf4:	bne	16b58 <readstat_parse_sav+0x1960>
   16cf8:	b	158b0 <readstat_parse_sav+0x6b8>
   16cfc:	ldr	r2, [sp, #64]	; 0x40
   16d00:	rsb	r0, r0, #0
   16d04:	mov	r1, #1
   16d08:	str	r0, [r2, #52]	; 0x34
   16d0c:	str	r1, [r2, #56]	; 0x38
   16d10:	ldr	r1, [sp, #64]	; 0x40
   16d14:	ldr	r9, [r8, #36]	; 0x24
   16d18:	ldr	r1, [r1]
   16d1c:	cmp	r1, #5
   16d20:	bne	16e14 <readstat_parse_sav+0x1c1c>
   16d24:	ldr	r5, [sp, #64]	; 0x40
   16d28:	ldr	r3, [r9, #12]
   16d2c:	ldr	r2, [r9, #20]
   16d30:	lsl	r1, r0, #3
   16d34:	add	r9, r5, #64	; 0x40
   16d38:	mov	r0, r9
   16d3c:	blx	r3
   16d40:	ldr	r1, [r5, #52]	; 0x34
   16d44:	cmp	r0, r1, lsl #3
   16d48:	bcc	172cc <readstat_parse_sav+0x20d4>
   16d4c:	ldr	r7, [sp, #64]	; 0x40
   16d50:	cmp	r1, #1
   16d54:	mov	sl, #0
   16d58:	blt	16e84 <readstat_parse_sav+0x1c8c>
   16d5c:	mov	r6, #0
   16d60:	ldr	r0, [sp, #72]	; 0x48
   16d64:	add	r5, r9, r6, lsl #3
   16d68:	ldrb	r0, [r0]
   16d6c:	tst	r0, #1
   16d70:	bne	16d84 <readstat_parse_sav+0x1b8c>
   16d74:	mov	r1, r9
   16d78:	ldr	r0, [r1, r6, lsl #3]!
   16d7c:	ldr	r1, [r1, #4]
   16d80:	b	16d94 <readstat_parse_sav+0x1b9c>
   16d84:	vldr	d0, [r5]
   16d88:	bl	4ec8 <byteswap_double@plt>
   16d8c:	vmov	r0, r1, d0
   16d90:	vstr	d0, [r5]
   16d94:	ldr	r2, [sp, #48]	; 0x30
   16d98:	add	r6, r6, #1
   16d9c:	ldrd	r2, [r2]
   16da0:	eor	r3, r1, r3
   16da4:	eor	r2, r0, r2
   16da8:	orrs	r2, r2, r3
   16dac:	movweq	r2, #0
   16db0:	streq	sl, [r5]
   16db4:	movteq	r2, #32760	; 0x7ff8
   16db8:	streq	r2, [r5, #4]
   16dbc:	ldr	r2, [sp, #56]	; 0x38
   16dc0:	ldrd	r2, [r2]
   16dc4:	eor	r3, r1, r3
   16dc8:	eor	r2, r0, r2
   16dcc:	orrs	r2, r2, r3
   16dd0:	movweq	r2, #0
   16dd4:	streq	sl, [r5]
   16dd8:	movteq	r2, #65520	; 0xfff0
   16ddc:	streq	r2, [r5, #4]
   16de0:	ldr	r2, [sp, #52]	; 0x34
   16de4:	ldrd	r2, [r2]
   16de8:	eor	r1, r1, r3
   16dec:	eor	r0, r0, r2
   16df0:	orrs	r0, r0, r1
   16df4:	movweq	r0, #0
   16df8:	streq	sl, [r5]
   16dfc:	movteq	r0, #32752	; 0x7ff0
   16e00:	streq	r0, [r5, #4]
   16e04:	ldr	r0, [r7, #52]	; 0x34
   16e08:	cmp	r6, r0
   16e0c:	blt	16d60 <readstat_parse_sav+0x1b68>
   16e10:	b	16e84 <readstat_parse_sav+0x1c8c>
   16e14:	ldr	r7, [sp, #64]	; 0x40
   16e18:	cmp	r0, #1
   16e1c:	blt	16e84 <readstat_parse_sav+0x1c8c>
   16e20:	add	r6, r7, #88	; 0x58
   16e24:	mov	r5, #0
   16e28:	ldr	r3, [r9, #12]
   16e2c:	ldr	r2, [r9, #20]
   16e30:	add	r7, sp, #264	; 0x108
   16e34:	mov	r1, #8
   16e38:	mov	r0, r7
   16e3c:	blx	r3
   16e40:	cmp	r0, #8
   16e44:	bcc	172cc <readstat_parse_sav+0x20d4>
   16e48:	ldr	r0, [r8, #336]	; 0x150
   16e4c:	mov	r1, #33	; 0x21
   16e50:	mov	r2, r7
   16e54:	mov	r3, #8
   16e58:	str	r0, [sp]
   16e5c:	mov	r0, r6
   16e60:	bl	4c04 <readstat_convert@plt>
   16e64:	cmp	r0, #0
   16e68:	bne	172c4 <readstat_parse_sav+0x20cc>
   16e6c:	ldr	r7, [sp, #64]	; 0x40
   16e70:	add	r5, r5, #1
   16e74:	add	r6, r6, #33	; 0x21
   16e78:	ldr	r0, [r7, #52]	; 0x34
   16e7c:	cmp	r5, r0
   16e80:	blt	16e28 <readstat_parse_sav+0x1c30>
   16e84:	ldr	r0, [r8, #44]	; 0x2c
   16e88:	ldr	r1, [r8, #340]	; 0x154
   16e8c:	str	r7, [r0, r1, lsl #2]
   16e90:	add	r0, r1, #1
   16e94:	str	r0, [r8, #340]	; 0x154
   16e98:	ldr	r0, [sp, #28]
   16e9c:	ldr	r1, [r0]
   16ea0:	add	r1, r1, #1
   16ea4:	str	r1, [r0]
   16ea8:	ldr	r5, [sp, #60]	; 0x3c
   16eac:	add	lr, sp, #1024	; 0x400
   16eb0:	add	r9, lr, #280	; 0x118
   16eb4:	b	17268 <readstat_parse_sav+0x2070>
   16eb8:	mov	sl, #5
   16ebc:	b	17204 <readstat_parse_sav+0x200c>
   16ec0:	mov	sl, #4
   16ec4:	b	17150 <readstat_parse_sav+0x1f58>
   16ec8:	ldr	r7, [sp, #68]	; 0x44
   16ecc:	str	r0, [sp, #36]	; 0x24
   16ed0:	mov	r0, #0
   16ed4:	str	r0, [sp, #24]
   16ed8:	ldr	r0, [sp, #44]	; 0x2c
   16edc:	subs	sl, r7, r0
   16ee0:	movwne	sl, #5
   16ee4:	ldr	r0, [sp, #36]	; 0x24
   16ee8:	cmp	r0, #0
   16eec:	bne	17134 <readstat_parse_sav+0x1f3c>
   16ef0:	b	1713c <readstat_parse_sav+0x1f44>
   16ef4:	bl	479c <byteswap8@plt>
   16ef8:	ldr	r2, [sp, #72]	; 0x48
   16efc:	ldr	r3, [sp, #48]	; 0x30
   16f00:	ldrb	r2, [r2]
   16f04:	strd	r0, [r3]
   16f08:	tst	r2, #1
   16f0c:	bne	17098 <readstat_parse_sav+0x1ea0>
   16f10:	ldr	r0, [sp, #52]	; 0x34
   16f14:	str	r6, [r0]
   16f18:	str	r5, [r0, #4]
   16f1c:	ldr	r0, [sp, #56]	; 0x38
   16f20:	str	sl, [r0]
   16f24:	str	r9, [r0, #4]
   16f28:	b	16ea8 <readstat_parse_sav+0x1cb0>
   16f2c:	mov	sl, r0
   16f30:	b	17204 <readstat_parse_sav+0x200c>
   16f34:	.word	0x00001654
   16f38:	beq	16ea8 <readstat_parse_sav+0x1cb0>
   16f3c:	b	17314 <readstat_parse_sav+0x211c>
   16f40:	mov	r0, #0
   16f44:	mov	r1, #0
   16f48:	str	r0, [sp, #24]
   16f4c:	mov	r0, #0
   16f50:	str	r0, [sp, #36]	; 0x24
   16f54:	ldr	r7, [sp, #64]	; 0x40
   16f58:	ldr	r0, [sp, #24]
   16f5c:	ldr	r3, [r7, #12]
   16f60:	ldr	r2, [r7, #20]
   16f64:	blx	r3
   16f68:	ldr	r1, [sp, #1296]	; 0x510
   16f6c:	mov	sl, #2
   16f70:	cmp	r0, r1, lsl #2
   16f74:	bcc	171f0 <readstat_parse_sav+0x1ff8>
   16f78:	mov	sl, #0
   16f7c:	cmp	r1, #0
   16f80:	mov	r7, #0
   16f84:	beq	17000 <readstat_parse_sav+0x1e08>
   16f88:	mov	r7, #0
   16f8c:	mov	r5, #0
   16f90:	ldr	r0, [sp, #36]	; 0x24
   16f94:	ldr	r1, [sp, #72]	; 0x48
   16f98:	ldr	r0, [r0, r5, lsl #2]
   16f9c:	str	r0, [sp, #264]	; 0x108
   16fa0:	ldrb	r1, [r1]
   16fa4:	tst	r1, #1
   16fa8:	beq	16fb4 <readstat_parse_sav+0x1dbc>
   16fac:	bl	47b4 <byteswap4@plt>
   16fb0:	str	r0, [sp, #264]	; 0x108
   16fb4:	sub	r0, r0, #1
   16fb8:	mov	r3, #4
   16fbc:	str	r0, [sp, #264]	; 0x108
   16fc0:	ldr	r1, [r8, #44]	; 0x2c
   16fc4:	ldr	r2, [r8, #340]	; 0x154
   16fc8:	ldr	r0, [pc, #1048]	; 173e8 <readstat_parse_sav+0x21f0>
   16fcc:	ldr	r0, [pc, r0]
   16fd0:	str	r0, [sp]
   16fd4:	add	r0, sp, #264	; 0x108
   16fd8:	bl	4c7c <bsearch@plt>
   16fdc:	cmp	r0, #0
   16fe0:	add	r5, r5, #1
   16fe4:	ldrne	r0, [r0]
   16fe8:	ldrne	r1, [r8, #368]	; 0x170
   16fec:	strne	r1, [r0, #4]
   16ff0:	ldrne	r7, [r0]
   16ff4:	ldr	r0, [sp, #1296]	; 0x510
   16ff8:	cmp	r5, r0
   16ffc:	bcc	16f90 <readstat_parse_sav+0x1d98>
   17000:	ldr	r0, [sp, #1300]	; 0x514
   17004:	cmp	r0, #0
   17008:	beq	1716c <readstat_parse_sav+0x1f74>
   1700c:	ldr	r0, [sp, #44]	; 0x2c
   17010:	mov	r5, #0
   17014:	add	r9, r0, #48	; 0x30
   17018:	cmp	r7, #5
   1701c:	str	r7, [r9, #8]
   17020:	bne	17050 <readstat_parse_sav+0x1e58>
   17024:	ldr	r0, [sp, #72]	; 0x48
   17028:	vldr	d0, [r9, #-48]	; 0xffffffd0
   1702c:	ldrb	r0, [r0]
   17030:	tst	r0, #1
   17034:	beq	1703c <readstat_parse_sav+0x1e44>
   17038:	bl	4ec8 <byteswap_double@plt>
   1703c:	mov	r0, r9
   17040:	mov	r1, r8
   17044:	vstr	d0, [r9]
   17048:	bl	17474 <sav_tag_missing_double>
   1704c:	b	1707c <readstat_parse_sav+0x1e84>
   17050:	ldr	r0, [r8, #336]	; 0x150
   17054:	sub	r6, r9, #40	; 0x28
   17058:	sub	r2, r9, #48	; 0x30
   1705c:	mov	r1, #33	; 0x21
   17060:	mov	r3, #8
   17064:	str	r0, [sp]
   17068:	mov	r0, r6
   1706c:	bl	4c04 <readstat_convert@plt>
   17070:	cmp	r0, #0
   17074:	bne	17168 <readstat_parse_sav+0x1f70>
   17078:	str	r6, [r9]
   1707c:	ldr	r0, [sp, #1300]	; 0x514
   17080:	add	r5, r5, #1
   17084:	add	r9, r9, #72	; 0x48
   17088:	cmp	r5, r0
   1708c:	bcc	17018 <readstat_parse_sav+0x1e20>
   17090:	mov	sl, #0
   17094:	b	1716c <readstat_parse_sav+0x1f74>
   17098:	mov	r0, r6
   1709c:	mov	r1, r5
   170a0:	bl	479c <byteswap8@plt>
   170a4:	ldr	r2, [sp, #72]	; 0x48
   170a8:	ldr	r3, [sp, #52]	; 0x34
   170ac:	ldrb	r2, [r2]
   170b0:	strd	r0, [r3]
   170b4:	tst	r2, #1
   170b8:	beq	16f1c <readstat_parse_sav+0x1d24>
   170bc:	mov	r0, sl
   170c0:	mov	r1, r9
   170c4:	bl	479c <byteswap8@plt>
   170c8:	mov	sl, r0
   170cc:	mov	r9, r1
   170d0:	b	16f1c <readstat_parse_sav+0x1d24>
   170d4:	mov	sl, r0
   170d8:	b	1712c <readstat_parse_sav+0x1f34>
   170dc:	mov	r0, #0
   170e0:	mov	sl, #3
   170e4:	str	r0, [sp, #24]
   170e8:	b	171f0 <readstat_parse_sav+0x1ff8>
   170ec:	mov	sl, #5
   170f0:	str	r7, [sp, #1300]	; 0x514
   170f4:	b	16ee4 <readstat_parse_sav+0x1cec>
   170f8:	ldr	r0, [sp, #64]	; 0x40
   170fc:	mov	sl, #3
   17100:	str	r0, [sp, #1300]	; 0x514
   17104:	b	1713c <readstat_parse_sav+0x1f44>
   17108:	str	r9, [sp, #64]	; 0x40
   1710c:	mov	sl, #5
   17110:	b	1712c <readstat_parse_sav+0x1f34>
   17114:	mov	r0, #0
   17118:	mov	sl, #3
   1711c:	str	r0, [sp, #24]
   17120:	b	1712c <readstat_parse_sav+0x1f34>
   17124:	mov	sl, #4
   17128:	str	r7, [sp, #64]	; 0x40
   1712c:	ldr	r0, [sp, #64]	; 0x40
   17130:	str	r0, [sp, #1300]	; 0x514
   17134:	ldr	r0, [sp, #36]	; 0x24
   17138:	bl	48bc <free@plt>
   1713c:	ldr	r0, [sp, #24]
   17140:	cmp	r0, #0
   17144:	beq	17150 <readstat_parse_sav+0x1f58>
   17148:	ldr	r0, [sp, #24]
   1714c:	bl	48bc <free@plt>
   17150:	ldr	r5, [sp, #60]	; 0x3c
   17154:	add	lr, sp, #1024	; 0x400
   17158:	cmp	sl, #0
   1715c:	add	r9, lr, #280	; 0x118
   17160:	beq	17268 <readstat_parse_sav+0x2070>
   17164:	b	158b0 <readstat_parse_sav+0x6b8>
   17168:	mov	sl, r0
   1716c:	ldr	r0, [r8, #20]
   17170:	cmp	r0, #0
   17174:	beq	171e4 <readstat_parse_sav+0x1fec>
   17178:	ldr	r7, [sp, #1300]	; 0x514
   1717c:	ldr	r3, [r8, #368]	; 0x170
   17180:	ldr	r2, [pc, #612]	; 173ec <readstat_parse_sav+0x21f4>
   17184:	add	r0, sp, #264	; 0x108
   17188:	mov	r1, #256	; 0x100
   1718c:	add	r2, pc, r2
   17190:	bl	4c4c <snprintf@plt>
   17194:	cmp	r7, #1
   17198:	blt	171e4 <readstat_parse_sav+0x1fec>
   1719c:	ldr	r0, [sp, #44]	; 0x2c
   171a0:	mov	r5, #1
   171a4:	add	r6, r0, #64	; 0x40
   171a8:	ldr	r2, [r6, #-16]
   171ac:	ldr	r3, [r6, #-12]
   171b0:	ldmda	r6, {r0, r1, ip}
   171b4:	ldr	lr, [r8, #20]
   171b8:	ldr	r9, [r8, #40]	; 0x28
   171bc:	stm	sp, {r0, r1, ip}
   171c0:	add	r0, sp, #264	; 0x108
   171c4:	str	r9, [sp, #12]
   171c8:	blx	lr
   171cc:	cmp	r5, r7
   171d0:	bge	171e4 <readstat_parse_sav+0x1fec>
   171d4:	add	r6, r6, #72	; 0x48
   171d8:	add	r5, r5, #1
   171dc:	cmp	r0, #0
   171e0:	beq	171a8 <readstat_parse_sav+0x1fb0>
   171e4:	ldr	r0, [r8, #368]	; 0x170
   171e8:	add	r0, r0, #1
   171ec:	str	r0, [r8, #368]	; 0x170
   171f0:	ldr	r0, [sp, #36]	; 0x24
   171f4:	cmp	r0, #0
   171f8:	beq	17204 <readstat_parse_sav+0x200c>
   171fc:	ldr	r0, [sp, #24]
   17200:	bl	48bc <free@plt>
   17204:	ldr	r0, [sp, #44]	; 0x2c
   17208:	cmp	r0, #0
   1720c:	beq	17254 <readstat_parse_sav+0x205c>
   17210:	ldr	r1, [sp, #1300]	; 0x514
   17214:	cmp	r1, #0
   17218:	beq	1724c <readstat_parse_sav+0x2054>
   1721c:	ldr	r0, [sp, #44]	; 0x2c
   17220:	mov	r6, #0
   17224:	add	r5, r0, #64	; 0x40
   17228:	ldr	r0, [r5]
   1722c:	cmp	r0, #0
   17230:	beq	1723c <readstat_parse_sav+0x2044>
   17234:	bl	48bc <free@plt>
   17238:	ldr	r1, [sp, #1300]	; 0x514
   1723c:	add	r6, r6, #1
   17240:	add	r5, r5, #72	; 0x48
   17244:	cmp	r6, r1
   17248:	bcc	17228 <readstat_parse_sav+0x2030>
   1724c:	ldr	r0, [sp, #44]	; 0x2c
   17250:	bl	48bc <free@plt>
   17254:	ldr	r5, [sp, #60]	; 0x3c
   17258:	add	lr, sp, #1024	; 0x400
   1725c:	add	r9, lr, #280	; 0x118
   17260:	cmp	sl, #0
   17264:	bne	158b0 <readstat_parse_sav+0x6b8>
   17268:	ldr	r3, [r5, #12]
   1726c:	ldr	r2, [r5, #20]
   17270:	add	lr, sp, #1024	; 0x400
   17274:	mov	r1, #4
   17278:	add	r0, lr, #264	; 0x108
   1727c:	blx	r3
   17280:	cmp	r0, #4
   17284:	bcs	16010 <readstat_parse_sav+0xe18>
   17288:	b	158ac <readstat_parse_sav+0x6b4>
   1728c:	movw	r1, #999	; 0x3e7
   17290:	cmp	r0, r1
   17294:	bne	158b0 <readstat_parse_sav+0x6b8>
   17298:	ldr	r0, [r8, #36]	; 0x24
   1729c:	add	lr, sp, #1024	; 0x400
   172a0:	mov	r1, #4
   172a4:	ldr	r3, [r0, #12]
   172a8:	ldr	r2, [r0, #20]
   172ac:	add	r0, lr, #280	; 0x118
   172b0:	blx	r3
   172b4:	cmp	r0, #4
   172b8:	bcc	158ac <readstat_parse_sav+0x6b4>
   172bc:	mov	sl, #0
   172c0:	b	158b0 <readstat_parse_sav+0x6b8>
   172c4:	mov	sl, r0
   172c8:	b	17368 <readstat_parse_sav+0x2170>
   172cc:	mov	sl, #2
   172d0:	b	17368 <readstat_parse_sav+0x2170>
   172d4:	mov	r0, #0
   172d8:	mov	sl, #3
   172dc:	str	r0, [sp, #64]	; 0x40
   172e0:	b	17368 <readstat_parse_sav+0x2170>
   172e4:	mov	r7, r2
   172e8:	mov	sl, #5
   172ec:	b	172f4 <readstat_parse_sav+0x20fc>
   172f0:	mov	sl, r0
   172f4:	str	r7, [sp, #264]	; 0x108
   172f8:	b	158b0 <readstat_parse_sav+0x6b8>
   172fc:	mov	sl, r0
   17300:	b	158b0 <readstat_parse_sav+0x6b8>
   17304:	mov	r0, #0
   17308:	str	r0, [sp, #68]	; 0x44
   1730c:	mov	sl, #3
   17310:	b	158b0 <readstat_parse_sav+0x6b8>
   17314:	mov	sl, #5
   17318:	b	158b0 <readstat_parse_sav+0x6b8>
   1731c:	mov	sl, #2
   17320:	b	17330 <readstat_parse_sav+0x2138>
   17324:	mov	sl, #5
   17328:	b	17368 <readstat_parse_sav+0x2170>
   1732c:	mov	sl, #3
   17330:	ldr	r0, [sp, #64]	; 0x40
   17334:	add	r5, r0, #264	; 0x108
   17338:	b	17350 <readstat_parse_sav+0x2158>
   1733c:	mov	sl, #3
   17340:	b	17348 <readstat_parse_sav+0x2150>
   17344:	mov	sl, #2
   17348:	mov	r0, r9
   1734c:	bl	48bc <free@plt>
   17350:	ldr	r0, [r5]
   17354:	cmp	r0, #0
   17358:	beq	17368 <readstat_parse_sav+0x2170>
   1735c:	bl	48bc <free@plt>
   17360:	mov	r0, #0
   17364:	str	r0, [r5]
   17368:	ldr	r0, [sp, #64]	; 0x40
   1736c:	bl	4de4 <spss_varinfo_free@plt>
   17370:	b	158b0 <readstat_parse_sav+0x6b8>
   17374:	mov	r7, #0
   17378:	b	17388 <readstat_parse_sav+0x2190>
   1737c:	mov	r7, #3
   17380:	b	173b0 <readstat_parse_sav+0x21b8>
   17384:	mov	r7, #15
   17388:	cmp	r9, #0
   1738c:	beq	173b0 <readstat_parse_sav+0x21b8>
   17390:	mov	r0, r9
   17394:	b	173ac <readstat_parse_sav+0x21b4>
   17398:	mov	r7, r0
   1739c:	ldr	r0, [sp, #68]	; 0x44
   173a0:	cmp	r0, #0
   173a4:	beq	173b0 <readstat_parse_sav+0x21b8>
   173a8:	ldr	r0, [sp, #68]	; 0x44
   173ac:	bl	48bc <free@plt>
   173b0:	cmp	r7, #0
   173b4:	beq	173c0 <readstat_parse_sav+0x21c8>
   173b8:	mov	sl, r7
   173bc:	b	15974 <readstat_parse_sav+0x77c>
   173c0:	ldr	r0, [r8, #352]	; 0x160
   173c4:	cmn	r0, #1
   173c8:	beq	15974 <readstat_parse_sav+0x77c>
   173cc:	ldr	r0, [r8, #356]	; 0x164
   173d0:	ldr	r1, [r8, #364]	; 0x16c
   173d4:	subs	sl, r1, r0
   173d8:	movwne	sl, #9
   173dc:	b	15974 <readstat_parse_sav+0x77c>
   173e0:	mov	r7, #0
   173e4:	b	1739c <readstat_parse_sav+0x21a4>
   173e8:	.word	0x0002d2fc
   173ec:	.word	0x0000d787
   173f0:	.word	0x0000dfc7

000173f4 <sav_skip_document_record>:
   173f4:	push	{r4, r5, fp, lr}
   173f8:	add	fp, sp, #8
   173fc:	sub	sp, sp, #8
   17400:	ldr	r5, [r0, #36]	; 0x24
   17404:	mov	r4, r0
   17408:	add	r0, sp, #4
   1740c:	mov	r1, #4
   17410:	ldr	r3, [r5, #12]
   17414:	ldr	r2, [r5, #20]
   17418:	blx	r3
   1741c:	mov	r1, r0
   17420:	mov	r0, #2
   17424:	cmp	r1, #4
   17428:	bcc	1746c <sav_skip_document_record+0x78>
   1742c:	ldrb	r1, [r4, #436]	; 0x1b4
   17430:	ldr	r0, [sp, #4]
   17434:	tst	r1, #1
   17438:	beq	17444 <sav_skip_document_record+0x50>
   1743c:	bl	47b4 <byteswap4@plt>
   17440:	str	r0, [sp, #4]
   17444:	ldr	r3, [r5, #8]
   17448:	ldr	r2, [r5, #20]
   1744c:	add	r0, r0, r0, lsl #2
   17450:	mov	r1, #1
   17454:	lsl	r0, r0, #4
   17458:	blx	r3
   1745c:	mov	r1, r0
   17460:	mov	r0, #0
   17464:	cmn	r1, #1
   17468:	movweq	r0, #15
   1746c:	sub	sp, fp, #8
   17470:	pop	{r4, r5, fp, pc}

00017474 <sav_tag_missing_double>:
   17474:	push	{r4, sl, fp, lr}
   17478:	add	fp, sp, #8
   1747c:	vldr	d0, [r0]
   17480:	ldr	ip, [r1, #392]	; 0x188
   17484:	ldr	r3, [r1, #396]	; 0x18c
   17488:	mov	r4, r0
   1748c:	vmov	r0, r2, d0
   17490:	eor	lr, r3, r2
   17494:	eor	r3, ip, r0
   17498:	orrs	r3, r3, lr
   1749c:	ldrbeq	r3, [r4, #13]
   174a0:	orreq	r3, r3, #1
   174a4:	strbeq	r3, [r4, #13]
   174a8:	ldr	r3, [r1, #404]	; 0x194
   174ac:	ldr	ip, [r1, #400]	; 0x190
   174b0:	eor	lr, r3, r2
   174b4:	eor	r3, ip, r0
   174b8:	orrs	r3, r3, lr
   174bc:	ldrbeq	r3, [r4, #13]
   174c0:	orreq	r3, r3, #1
   174c4:	strbeq	r3, [r4, #13]
   174c8:	ldr	r3, [r1, #408]	; 0x198
   174cc:	ldr	r1, [r1, #412]	; 0x19c
   174d0:	eor	r1, r1, r2
   174d4:	eor	r0, r3, r0
   174d8:	orrs	r0, r0, r1
   174dc:	ldrbeq	r0, [r4, #13]
   174e0:	orreq	r0, r0, #1
   174e4:	strbeq	r0, [r4, #13]
   174e8:	bl	4d00 <__isnan@plt>
   174ec:	cmp	r0, #0
   174f0:	ldrbne	r0, [r4, #13]
   174f4:	orrne	r0, r0, #1
   174f8:	strbne	r0, [r4, #13]
   174fc:	pop	{r4, sl, fp, pc}

00017500 <sav_read_pascal_string>:
   17500:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17504:	add	fp, sp, #28
   17508:	sub	sp, sp, #4
   1750c:	ldr	r6, [r1]
   17510:	mov	r4, r1
   17514:	mov	r5, #5
   17518:	cmp	r2, #4
   1751c:	blt	17584 <sav_read_pascal_string+0x84>
   17520:	mov	r8, r0
   17524:	ldrb	r0, [r3, #436]	; 0x1b4
   17528:	ldr	r7, [r6]
   1752c:	add	sl, r6, r2
   17530:	add	r9, r6, #4
   17534:	tst	r0, #1
   17538:	beq	17548 <sav_read_pascal_string+0x48>
   1753c:	mov	r0, r7
   17540:	bl	47b4 <byteswap4@plt>
   17544:	mov	r7, r0
   17548:	add	r6, r9, r7
   1754c:	cmp	r6, sl
   17550:	bls	1755c <sav_read_pascal_string+0x5c>
   17554:	mov	r6, r9
   17558:	b	17584 <sav_read_pascal_string+0x84>
   1755c:	mov	r0, #0
   17560:	movw	r1, #257	; 0x101
   17564:	mov	r2, r9
   17568:	mov	r3, r7
   1756c:	str	r0, [sp]
   17570:	mov	r0, r8
   17574:	bl	4c04 <readstat_convert@plt>
   17578:	cmp	r0, #0
   1757c:	mov	r5, r0
   17580:	movne	r6, r9
   17584:	str	r6, [r4]
   17588:	mov	r0, r5
   1758c:	sub	sp, fp, #28
   17590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017594 <sav_process_row>:
   17594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17598:	add	fp, sp, #28
   1759c:	sub	sp, sp, #60	; 0x3c
   175a0:	mov	r4, r2
   175a4:	ldr	r2, [r2, #360]	; 0x168
   175a8:	cmp	r2, #0
   175ac:	beq	175bc <sav_process_row+0x28>
   175b0:	sub	r0, r2, #1
   175b4:	str	r0, [r4, #360]	; 0x168
   175b8:	b	17868 <sav_process_row+0x2d4>
   175bc:	cmp	r1, #0
   175c0:	beq	17858 <sav_process_row+0x2c4>
   175c4:	str	r0, [sp, #32]
   175c8:	add	r0, r4, #364	; 0x16c
   175cc:	mov	ip, #0
   175d0:	mov	r7, #0
   175d4:	mov	r8, #0
   175d8:	mov	lr, #0
   175dc:	mov	r9, #0
   175e0:	mov	sl, #0
   175e4:	mov	r6, #0
   175e8:	str	r1, [sp, #16]
   175ec:	str	r0, [sp, #12]
   175f0:	add	r0, sp, #40	; 0x28
   175f4:	add	r0, r0, #8
   175f8:	str	r0, [sp, #20]
   175fc:	ldr	r0, [r4, #340]	; 0x154
   17600:	cmp	r7, r0
   17604:	cmplt	r8, r0
   17608:	bge	17850 <sav_process_row+0x2bc>
   1760c:	ldr	r2, [r4, #44]	; 0x2c
   17610:	cmp	r6, #31
   17614:	ldr	r5, [r2, r8, lsl #2]
   17618:	ldr	r0, [r2, r7, lsl #2]
   1761c:	str	ip, [sp, #44]	; 0x2c
   17620:	str	ip, [sp, #40]	; 0x28
   17624:	ldr	r3, [r5]
   17628:	strb	ip, [sp, #52]	; 0x34
   1762c:	str	r3, [sp, #48]	; 0x30
   17630:	ldrb	r2, [sp, #53]	; 0x35
   17634:	and	r2, r2, #252	; 0xfc
   17638:	strb	r2, [sp, #53]	; 0x35
   1763c:	bgt	17874 <sav_process_row+0x2e0>
   17640:	cmp	r3, #5
   17644:	beq	17668 <sav_process_row+0xd4>
   17648:	cmp	r3, #0
   1764c:	bne	17844 <sav_process_row+0x2b0>
   17650:	ldr	r2, [r4, #380]	; 0x17c
   17654:	add	r3, r9, #8
   17658:	cmp	r3, r2
   1765c:	bls	17720 <sav_process_row+0x18c>
   17660:	mov	r3, r9
   17664:	b	17760 <sav_process_row+0x1cc>
   17668:	ldr	r0, [r5, #8]
   1766c:	ldr	r2, [r4, #52]	; 0x34
   17670:	ldr	r0, [r2, r0, lsl #2]
   17674:	ldr	r0, [r0, #2144]	; 0x860
   17678:	cmp	r0, #0
   1767c:	bne	17710 <sav_process_row+0x17c>
   17680:	ldr	r0, [sp, #32]
   17684:	str	lr, [sp, #28]
   17688:	str	r6, [sp, #36]	; 0x24
   1768c:	add	r0, r0, sl
   17690:	vld1.8	{d0}, [r0]
   17694:	ldrb	r0, [r4, #436]	; 0x1b4
   17698:	tst	r0, #1
   1769c:	beq	176a4 <sav_process_row+0x110>
   176a0:	bl	4ec8 <byteswap_double@plt>
   176a4:	add	r0, sp, #40	; 0x28
   176a8:	mov	r1, r4
   176ac:	vstr	d0, [sp, #40]	; 0x28
   176b0:	bl	17474 <sav_tag_missing_double>
   176b4:	ldr	r1, [r5, #8]
   176b8:	ldr	r2, [r4, #52]	; 0x34
   176bc:	ldr	r0, [r4, #16]
   176c0:	ldr	lr, [r4, #40]	; 0x28
   176c4:	ldr	ip, [r2, r1, lsl #2]
   176c8:	ldr	r1, [sp, #20]
   176cc:	str	r0, [sp, #24]
   176d0:	ldr	r0, [r4, #364]	; 0x16c
   176d4:	ldr	r6, [r1]
   176d8:	ldr	r1, [r1, #4]
   176dc:	ldr	r2, [sp, #40]	; 0x28
   176e0:	ldr	r3, [sp, #44]	; 0x2c
   176e4:	str	r6, [sp]
   176e8:	stmib	sp, {r1, lr}
   176ec:	mov	r1, ip
   176f0:	ldr	r6, [sp, #24]
   176f4:	blx	r6
   176f8:	ldr	r1, [sp, #16]
   176fc:	ldr	r6, [sp, #36]	; 0x24
   17700:	ldr	lr, [sp, #28]
   17704:	cmp	r0, #0
   17708:	mov	ip, #0
   1770c:	bne	1787c <sav_process_row+0x2e8>
   17710:	ldr	r0, [r5, #48]	; 0x30
   17714:	add	r7, r7, #1
   17718:	add	r8, r0, r8
   1771c:	b	17844 <sav_process_row+0x2b0>
   17720:	str	r7, [sp, #24]
   17724:	ldr	r7, [sp, #32]
   17728:	str	r6, [sp, #36]	; 0x24
   1772c:	mov	r6, r1
   17730:	mov	r1, lr
   17734:	str	r8, [sp, #28]
   17738:	ldr	r2, [r7, sl]!
   1773c:	ldr	lr, [r7, #4]
   17740:	ldr	r7, [r4, #376]	; 0x178
   17744:	str	r2, [r7, r9]!
   17748:	str	lr, [r7, #4]
   1774c:	mov	lr, r1
   17750:	mov	r1, r6
   17754:	ldr	r7, [sp, #24]
   17758:	ldr	r8, [sp, #28]
   1775c:	ldr	r6, [sp, #36]	; 0x24
   17760:	ldr	r0, [r0, #16]
   17764:	add	r6, r6, #1
   17768:	mov	r9, r5
   1776c:	cmp	r6, r0
   17770:	bne	17790 <sav_process_row+0x1fc>
   17774:	ldr	r0, [r9, #48]!	; 0x30
   17778:	add	lr, lr, #1
   1777c:	add	r7, r7, #1
   17780:	mov	r6, #0
   17784:	cmp	lr, r0
   17788:	sublt	r3, r3, #1
   1778c:	b	17794 <sav_process_row+0x200>
   17790:	ldr	r0, [r9, #48]!	; 0x30
   17794:	cmp	lr, r0
   17798:	bne	17840 <sav_process_row+0x2ac>
   1779c:	ldr	lr, [r5, #8]
   177a0:	ldr	r2, [r4, #52]	; 0x34
   177a4:	ldr	r2, [r2, lr, lsl #2]
   177a8:	ldr	r2, [r2, #2144]	; 0x860
   177ac:	cmp	r2, #0
   177b0:	bne	17830 <sav_process_row+0x29c>
   177b4:	ldr	ip, [r4, #336]	; 0x150
   177b8:	ldr	r2, [r4, #376]	; 0x178
   177bc:	ldr	r0, [r4, #384]	; 0x180
   177c0:	ldr	r1, [r4, #388]	; 0x184
   177c4:	str	ip, [sp]
   177c8:	bl	4c04 <readstat_convert@plt>
   177cc:	cmp	r0, #0
   177d0:	bne	1786c <sav_process_row+0x2d8>
   177d4:	ldr	r2, [r4, #384]	; 0x180
   177d8:	str	r2, [sp, #40]	; 0x28
   177dc:	ldr	r1, [r5, #8]
   177e0:	ldr	r3, [r4, #52]	; 0x34
   177e4:	ldr	r0, [r4, #16]
   177e8:	ldr	lr, [r4, #40]	; 0x28
   177ec:	ldr	ip, [r3, r1, lsl #2]
   177f0:	ldr	r1, [sp, #20]
   177f4:	str	r0, [sp, #36]	; 0x24
   177f8:	ldr	r0, [r4, #364]	; 0x16c
   177fc:	ldr	r5, [r1]
   17800:	ldr	r1, [r1, #4]
   17804:	ldr	r3, [sp, #44]	; 0x2c
   17808:	str	r5, [sp]
   1780c:	stmib	sp, {r1, lr}
   17810:	mov	r1, ip
   17814:	ldr	r5, [sp, #36]	; 0x24
   17818:	blx	r5
   1781c:	cmp	r0, #0
   17820:	bne	1787c <sav_process_row+0x2e8>
   17824:	ldr	r0, [r9]
   17828:	ldr	r1, [sp, #16]
   1782c:	mov	ip, #0
   17830:	add	r8, r0, r8
   17834:	mov	r9, #0
   17838:	mov	lr, #0
   1783c:	b	17844 <sav_process_row+0x2b0>
   17840:	mov	r9, r3
   17844:	add	sl, sl, #8
   17848:	cmp	sl, r1
   1784c:	bcc	175fc <sav_process_row+0x68>
   17850:	ldr	r1, [sp, #12]
   17854:	b	1785c <sav_process_row+0x2c8>
   17858:	add	r1, r4, #364	; 0x16c
   1785c:	ldr	r0, [r1]
   17860:	add	r0, r0, #1
   17864:	str	r0, [r1]
   17868:	mov	r0, #0
   1786c:	sub	sp, fp, #28
   17870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17874:	mov	r0, #5
   17878:	b	1786c <sav_process_row+0x2d8>
   1787c:	mov	r0, #4
   17880:	b	1786c <sav_process_row+0x2d8>
   17884:	andeq	r0, r0, r0

00017888 <readstat_begin_writing_sav>:
   17888:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1788c:	add	fp, sp, #24
   17890:	ldr	ip, [pc, #280]	; 179b0 <readstat_begin_writing_sav+0x128>
   17894:	ldr	r3, [pc, #280]	; 179b4 <readstat_begin_writing_sav+0x12c>
   17898:	add	r3, pc, r3
   1789c:	add	ip, pc, ip
   178a0:	str	r3, [r0, #292]	; 0x124
   178a4:	ldr	r3, [pc, #268]	; 179b8 <readstat_begin_writing_sav+0x130>
   178a8:	ldr	lr, [pc, #268]	; 179bc <readstat_begin_writing_sav+0x134>
   178ac:	ldr	r4, [pc, #268]	; 179c0 <readstat_begin_writing_sav+0x138>
   178b0:	ldr	r5, [pc, #268]	; 179c4 <readstat_begin_writing_sav+0x13c>
   178b4:	ldr	r6, [pc, #268]	; 179c8 <readstat_begin_writing_sav+0x140>
   178b8:	ldr	r7, [pc, #268]	; 179cc <readstat_begin_writing_sav+0x144>
   178bc:	ldr	r8, [pc, #268]	; 179d0 <readstat_begin_writing_sav+0x148>
   178c0:	str	ip, [r0, #228]	; 0xe4
   178c4:	add	r3, pc, r3
   178c8:	add	lr, pc, lr
   178cc:	add	r4, pc, r4
   178d0:	add	r5, pc, r5
   178d4:	add	r6, pc, r6
   178d8:	add	r7, pc, r7
   178dc:	add	r8, pc, r8
   178e0:	str	r3, [r0, #232]	; 0xe8
   178e4:	add	r3, r0, #240	; 0xf0
   178e8:	str	lr, [r0, #236]	; 0xec
   178ec:	stm	r3, {r4, r5, r6, r7, r8}
   178f0:	ldr	r3, [pc, #220]	; 179d4 <readstat_begin_writing_sav+0x14c>
   178f4:	ldr	r7, [pc, #220]	; 179d8 <readstat_begin_writing_sav+0x150>
   178f8:	add	r3, pc, r3
   178fc:	add	r7, pc, r7
   17900:	str	r3, [r0, #264]	; 0x108
   17904:	str	r7, [r0, #268]	; 0x10c
   17908:	ldr	r3, [pc, #204]	; 179dc <readstat_begin_writing_sav+0x154>
   1790c:	add	r3, pc, r3
   17910:	str	r3, [r0, #276]	; 0x114
   17914:	ldr	r3, [r0, #8]
   17918:	cmp	r3, #0
   1791c:	beq	17934 <readstat_begin_writing_sav+0xac>
   17920:	cmp	r3, #3
   17924:	bne	1794c <readstat_begin_writing_sav+0xc4>
   17928:	mov	r3, #2
   1792c:	str	r3, [r0, #16]
   17930:	b	17984 <readstat_begin_writing_sav+0xfc>
   17934:	ldr	r3, [r0, #16]
   17938:	mov	r7, #2
   1793c:	cmp	r3, #2
   17940:	movweq	r7, #3
   17944:	str	r7, [r0, #8]
   17948:	b	17950 <readstat_begin_writing_sav+0xc8>
   1794c:	ldr	r3, [r0, #16]
   17950:	cmp	r3, #0
   17954:	beq	179a8 <readstat_begin_writing_sav+0x120>
   17958:	cmp	r3, #2
   1795c:	beq	17984 <readstat_begin_writing_sav+0xfc>
   17960:	cmp	r3, #1
   17964:	movne	r0, #6
   17968:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1796c:	ldr	r3, [pc, #108]	; 179e0 <readstat_begin_writing_sav+0x158>
   17970:	add	r3, pc, r3
   17974:	str	r3, [r0, #280]	; 0x118
   17978:	ldr	r3, [pc, #100]	; 179e4 <readstat_begin_writing_sav+0x15c>
   1797c:	ldr	r3, [pc, r3]
   17980:	b	179a4 <readstat_begin_writing_sav+0x11c>
   17984:	ldr	r3, [pc, #92]	; 179e8 <readstat_begin_writing_sav+0x160>
   17988:	ldr	r3, [pc, r3]
   1798c:	ldr	r7, [pc, #88]	; 179ec <readstat_begin_writing_sav+0x164>
   17990:	ldr	r7, [pc, r7]
   17994:	str	r7, [r0, #280]	; 0x118
   17998:	str	r3, [r0, #284]	; 0x11c
   1799c:	ldr	r3, [pc, #76]	; 179f0 <readstat_begin_writing_sav+0x168>
   179a0:	ldr	r3, [pc, r3]
   179a4:	str	r3, [r0, #288]	; 0x120
   179a8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   179ac:	b	494c <readstat_begin_writing_file@plt>
   179b0:	.word	0x00000178
   179b4:	.word	0x00000154
   179b8:	.word	0x000001ac
   179bc:	.word	0x000003fc
   179c0:	.word	0x0000040c
   179c4:	.word	0x0000041c
   179c8:	.word	0x0000042c
   179cc:	.word	0x00000438
   179d0:	.word	0x00000440
   179d4:	.word	0x000004bc
   179d8:	.word	0x000004d4
   179dc:	.word	0x000004dc
   179e0:	.word	0x00002434
   179e4:	.word	0x0002c930
   179e8:	.word	0x0002c938
   179ec:	.word	0x0002c928
   179f0:	.word	0x0002c908

000179f4 <sav_metadata_ok>:
   179f4:	ldr	r1, [r0, #8]
   179f8:	cmp	r1, #2
   179fc:	ldreq	r0, [r0, #16]
   17a00:	cmpeq	r0, #2
   17a04:	moveq	r0, #6
   17a08:	bxeq	lr
   17a0c:	bic	r0, r1, #1
   17a10:	subs	r0, r0, #2
   17a14:	movwne	r0, #24
   17a18:	bx	lr

00017a1c <sav_variable_width>:
   17a1c:	mov	r2, r0
   17a20:	mov	r0, #8
   17a24:	cmp	r2, #0
   17a28:	bxne	lr
   17a2c:	cmp	r1, #256	; 0x100
   17a30:	bcc	17a68 <sav_variable_width+0x4c>
   17a34:	add	r0, r1, #251	; 0xfb
   17a38:	movw	r2, #2081	; 0x821
   17a3c:	lsr	r0, r0, #2
   17a40:	movt	r2, #8322	; 0x2082
   17a44:	umull	r0, r2, r0, r2
   17a48:	mvn	r0, #0
   17a4c:	add	r0, r0, r2, lsr #3
   17a50:	sub	r2, r0, r0, lsl #6
   17a54:	add	r1, r1, r2, lsl #2
   17a58:	add	r1, r1, #7
   17a5c:	bic	r1, r1, #7
   17a60:	add	r0, r1, r0, lsl #8
   17a64:	bx	lr
   17a68:	cmp	r1, #0
   17a6c:	addne	r0, r1, #7
   17a70:	bicne	r0, r0, #7
   17a74:	bx	lr

00017a78 <sav_variable_ok>:
   17a78:	push	{r4, r5, fp, lr}
   17a7c:	add	fp, sp, #8
   17a80:	add	r5, r0, #8
   17a84:	mov	r0, r5
   17a88:	bl	4bd4 <strlen@plt>
   17a8c:	mov	r4, #0
   17a90:	cmp	r0, #0
   17a94:	movweq	r4, #38	; 0x26
   17a98:	cmp	r0, #64	; 0x40
   17a9c:	movwhi	r4, #28
   17aa0:	cmp	r4, #0
   17aa4:	beq	17ab0 <sav_variable_ok+0x38>
   17aa8:	mov	r0, r4
   17aac:	pop	{r4, r5, fp, pc}
   17ab0:	ldr	r1, [pc, #480]	; 17c98 <sav_variable_ok+0x220>
   17ab4:	mov	r0, r5
   17ab8:	add	r1, pc, r1
   17abc:	bl	4808 <strcmp@plt>
   17ac0:	mov	r4, #27
   17ac4:	cmp	r0, #0
   17ac8:	beq	17aa8 <sav_variable_ok+0x30>
   17acc:	ldr	r1, [pc, #456]	; 17c9c <sav_variable_ok+0x224>
   17ad0:	mov	r0, r5
   17ad4:	add	r1, pc, r1
   17ad8:	bl	4808 <strcmp@plt>
   17adc:	cmp	r0, #0
   17ae0:	beq	17aa8 <sav_variable_ok+0x30>
   17ae4:	ldr	r1, [pc, #436]	; 17ca0 <sav_variable_ok+0x228>
   17ae8:	mov	r0, r5
   17aec:	add	r1, pc, r1
   17af0:	bl	4808 <strcmp@plt>
   17af4:	cmp	r0, #0
   17af8:	beq	17aa8 <sav_variable_ok+0x30>
   17afc:	ldr	r1, [pc, #416]	; 17ca4 <sav_variable_ok+0x22c>
   17b00:	mov	r0, r5
   17b04:	add	r1, pc, r1
   17b08:	bl	4808 <strcmp@plt>
   17b0c:	cmp	r0, #0
   17b10:	beq	17aa8 <sav_variable_ok+0x30>
   17b14:	ldr	r1, [pc, #396]	; 17ca8 <sav_variable_ok+0x230>
   17b18:	mov	r0, r5
   17b1c:	add	r1, pc, r1
   17b20:	bl	4808 <strcmp@plt>
   17b24:	cmp	r0, #0
   17b28:	beq	17aa8 <sav_variable_ok+0x30>
   17b2c:	ldr	r1, [pc, #376]	; 17cac <sav_variable_ok+0x234>
   17b30:	mov	r0, r5
   17b34:	add	r1, pc, r1
   17b38:	bl	4808 <strcmp@plt>
   17b3c:	cmp	r0, #0
   17b40:	beq	17aa8 <sav_variable_ok+0x30>
   17b44:	ldr	r1, [pc, #356]	; 17cb0 <sav_variable_ok+0x238>
   17b48:	mov	r0, r5
   17b4c:	add	r1, pc, r1
   17b50:	bl	4808 <strcmp@plt>
   17b54:	cmp	r0, #0
   17b58:	beq	17aa8 <sav_variable_ok+0x30>
   17b5c:	ldr	r1, [pc, #336]	; 17cb4 <sav_variable_ok+0x23c>
   17b60:	mov	r0, r5
   17b64:	add	r1, pc, r1
   17b68:	bl	4808 <strcmp@plt>
   17b6c:	cmp	r0, #0
   17b70:	beq	17aa8 <sav_variable_ok+0x30>
   17b74:	ldr	r1, [pc, #316]	; 17cb8 <sav_variable_ok+0x240>
   17b78:	mov	r0, r5
   17b7c:	add	r1, pc, r1
   17b80:	bl	4808 <strcmp@plt>
   17b84:	cmp	r0, #0
   17b88:	beq	17aa8 <sav_variable_ok+0x30>
   17b8c:	ldr	r1, [pc, #296]	; 17cbc <sav_variable_ok+0x244>
   17b90:	mov	r0, r5
   17b94:	add	r1, pc, r1
   17b98:	bl	4808 <strcmp@plt>
   17b9c:	cmp	r0, #0
   17ba0:	beq	17aa8 <sav_variable_ok+0x30>
   17ba4:	ldr	r1, [pc, #276]	; 17cc0 <sav_variable_ok+0x248>
   17ba8:	mov	r0, r5
   17bac:	add	r1, pc, r1
   17bb0:	bl	4808 <strcmp@plt>
   17bb4:	cmp	r0, #0
   17bb8:	beq	17aa8 <sav_variable_ok+0x30>
   17bbc:	ldr	r1, [pc, #256]	; 17cc4 <sav_variable_ok+0x24c>
   17bc0:	mov	r0, r5
   17bc4:	add	r1, pc, r1
   17bc8:	bl	4808 <strcmp@plt>
   17bcc:	cmp	r0, #0
   17bd0:	beq	17aa8 <sav_variable_ok+0x30>
   17bd4:	ldr	r1, [pc, #236]	; 17cc8 <sav_variable_ok+0x250>
   17bd8:	mov	r0, r5
   17bdc:	add	r1, pc, r1
   17be0:	bl	4808 <strcmp@plt>
   17be4:	cmp	r0, #0
   17be8:	beq	17aa8 <sav_variable_ok+0x30>
   17bec:	mov	r0, r5
   17bf0:	mov	r4, #26
   17bf4:	ldrb	r1, [r0]
   17bf8:	cmp	r1, #45	; 0x2d
   17bfc:	ble	17c18 <sav_variable_ok+0x1a0>
   17c00:	cmp	r1, #46	; 0x2e
   17c04:	beq	17c24 <sav_variable_ok+0x1ac>
   17c08:	cmp	r1, #64	; 0x40
   17c0c:	cmpne	r1, #95	; 0x5f
   17c10:	beq	17c24 <sav_variable_ok+0x1ac>
   17c14:	b	17c3c <sav_variable_ok+0x1c4>
   17c18:	sub	r2, r1, #35	; 0x23
   17c1c:	cmp	r2, #2
   17c20:	bcs	17c2c <sav_variable_ok+0x1b4>
   17c24:	add	r0, r0, #1
   17c28:	b	17bf4 <sav_variable_ok+0x17c>
   17c2c:	cmp	r1, #0
   17c30:	beq	17c64 <sav_variable_ok+0x1ec>
   17c34:	cmp	r1, #32
   17c38:	beq	17aa8 <sav_variable_ok+0x30>
   17c3c:	sub	r2, r1, #48	; 0x30
   17c40:	uxtb	r2, r2
   17c44:	cmp	r2, #10
   17c48:	bcc	17c24 <sav_variable_ok+0x1ac>
   17c4c:	and	r1, r1, #223	; 0xdf
   17c50:	sub	r1, r1, #65	; 0x41
   17c54:	uxtb	r1, r1
   17c58:	cmp	r1, #25
   17c5c:	bls	17c24 <sav_variable_ok+0x1ac>
   17c60:	b	17aa8 <sav_variable_ok+0x30>
   17c64:	ldrb	r0, [r5]
   17c68:	orr	r1, r0, #64	; 0x40
   17c6c:	cmp	r1, #64	; 0x40
   17c70:	bne	17c7c <sav_variable_ok+0x204>
   17c74:	mov	r4, #0
   17c78:	b	17aa8 <sav_variable_ok+0x30>
   17c7c:	and	r0, r0, #223	; 0xdf
   17c80:	mov	r4, #25
   17c84:	sub	r0, r0, #65	; 0x41
   17c88:	uxtb	r0, r0
   17c8c:	cmp	r0, #25
   17c90:	movls	r4, #0
   17c94:	b	17aa8 <sav_variable_ok+0x30>
   17c98:	.word	0x0000db13
   17c9c:	.word	0x0000dafb
   17ca0:	.word	0x0000dae7
   17ca4:	.word	0x0000dad2
   17ca8:	.word	0x0000dabd
   17cac:	.word	0x0000daa8
   17cb0:	.word	0x0000da93
   17cb4:	.word	0x0000da7e
   17cb8:	.word	0x0000da69
   17cbc:	.word	0x0000da54
   17cc0:	.word	0x0000da40
   17cc4:	.word	0x0000da2b
   17cc8:	.word	0x0000da16

00017ccc <sav_write_int8>:
   17ccc:	vmov	s0, r2
   17cd0:	vcvt.f64.s32	d16, s0
   17cd4:	vst1.8	{d16}, [r0]
   17cd8:	mov	r0, #0
   17cdc:	bx	lr

00017ce0 <sav_write_int16>:
   17ce0:	vmov	s0, r2
   17ce4:	vcvt.f64.s32	d16, s0
   17ce8:	vst1.8	{d16}, [r0]
   17cec:	mov	r0, #0
   17cf0:	bx	lr

00017cf4 <sav_write_int32>:
   17cf4:	vmov	s0, r2
   17cf8:	vcvt.f64.s32	d16, s0
   17cfc:	vst1.8	{d16}, [r0]
   17d00:	mov	r0, #0
   17d04:	bx	lr

00017d08 <sav_write_float>:
   17d08:	vcvt.f64.f32	d16, s0
   17d0c:	vst1.8	{d16}, [r0]
   17d10:	mov	r0, #0
   17d14:	bx	lr

00017d18 <sav_write_double>:
   17d18:	vst1.8	{d0}, [r0]
   17d1c:	mov	r0, #0
   17d20:	bx	lr

00017d24 <sav_write_string>:
   17d24:	push	{r4, r5, r6, r7, fp, lr}
   17d28:	add	fp, sp, #16
   17d2c:	mov	r4, r2
   17d30:	ldr	r2, [r1, #1596]	; 0x63c
   17d34:	mov	r7, r1
   17d38:	mov	r1, #32
   17d3c:	mov	r5, r0
   17d40:	bl	4c70 <memset@plt>
   17d44:	cmp	r4, #0
   17d48:	mov	r0, #0
   17d4c:	ldrbne	r1, [r4]
   17d50:	cmpne	r1, #0
   17d54:	bne	17d5c <sav_write_string+0x38>
   17d58:	pop	{r4, r5, r6, r7, fp, pc}
   17d5c:	mov	r0, r4
   17d60:	bl	4bd4 <strlen@plt>
   17d64:	ldr	r1, [r7, #1596]	; 0x63c
   17d68:	mov	r6, r0
   17d6c:	mov	r0, #22
   17d70:	cmp	r6, r1
   17d74:	pophi	{r4, r5, r6, r7, fp, pc}
   17d78:	cmp	r6, #256	; 0x100
   17d7c:	bcc	17da4 <sav_write_string+0x80>
   17d80:	mov	r0, r5
   17d84:	mov	r1, r4
   17d88:	mov	r2, #255	; 0xff
   17d8c:	bl	4910 <memcpy@plt>
   17d90:	sub	r6, r6, #255	; 0xff
   17d94:	add	r5, r5, #256	; 0x100
   17d98:	add	r4, r4, #255	; 0xff
   17d9c:	cmp	r6, #255	; 0xff
   17da0:	bhi	17d80 <sav_write_string+0x5c>
   17da4:	mov	r0, r5
   17da8:	mov	r1, r4
   17dac:	mov	r2, r6
   17db0:	bl	4910 <memcpy@plt>
   17db4:	mov	r0, #0
   17db8:	pop	{r4, r5, r6, r7, fp, pc}

00017dbc <sav_write_missing_string>:
   17dbc:	push	{fp, lr}
   17dc0:	mov	fp, sp
   17dc4:	ldr	r2, [r1, #1596]	; 0x63c
   17dc8:	mov	r1, #32
   17dcc:	bl	4c70 <memset@plt>
   17dd0:	mov	r0, #0
   17dd4:	pop	{fp, pc}

00017dd8 <sav_write_missing_number>:
   17dd8:	mvn	r1, #1048576	; 0x100000
   17ddc:	str	r1, [r0, #4]
   17de0:	mvn	r1, #0
   17de4:	str	r1, [r0]
   17de8:	mov	r0, #0
   17dec:	bx	lr

00017df0 <sav_begin_data>:
   17df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17df4:	add	fp, sp, #28
   17df8:	sub	sp, sp, #4
   17dfc:	vpush	{d8-d9}
   17e00:	sub	sp, sp, #424	; 0x1a8
   17e04:	mov	r5, r0
   17e08:	ldr	r0, [r0, #308]	; 0x134
   17e0c:	cmp	r0, #0
   17e10:	beq	18020 <sav_begin_data+0x230>
   17e14:	ldr	r4, [r5, #28]
   17e18:	mov	r1, #15
   17e1c:	mov	r0, r4
   17e20:	bl	4778 <calloc@plt>
   17e24:	str	r0, [sp, #48]	; 0x30
   17e28:	mov	r0, r4
   17e2c:	bl	4b74 <ck_hash_table_init@plt>
   17e30:	mov	r4, r0
   17e34:	ldr	r0, [r5, #28]
   17e38:	str	r5, [sp, #52]	; 0x34
   17e3c:	cmp	r0, #1
   17e40:	blt	17f34 <sav_begin_data+0x144>
   17e44:	ldr	r0, [sp, #48]	; 0x30
   17e48:	mov	r6, #0
   17e4c:	add	sl, r0, #1
   17e50:	mov	r0, r5
   17e54:	mov	r1, r6
   17e58:	bl	4d48 <readstat_get_variable@plt>
   17e5c:	ldr	r1, [sp, #48]	; 0x30
   17e60:	ldr	r2, [pc, #3624]	; 18c90 <sav_begin_data+0xea0>
   17e64:	mov	r8, r0
   17e68:	rsb	r0, r6, r6, lsl #4
   17e6c:	add	r3, r8, #8
   17e70:	add	r5, r1, r0
   17e74:	mov	r1, #9
   17e78:	add	r2, pc, r2
   17e7c:	mov	r0, r5
   17e80:	bl	4c4c <snprintf@plt>
   17e84:	mov	r9, r5
   17e88:	ldrb	r7, [r9], #9
   17e8c:	cmp	r7, #0
   17e90:	beq	17ebc <sav_begin_data+0xcc>
   17e94:	bl	4b68 <__ctype_toupper_loc@plt>
   17e98:	mov	r1, sl
   17e9c:	ldr	r2, [r0]
   17ea0:	uxtb	r3, r7
   17ea4:	ldr	r2, [r2, r3, lsl #2]
   17ea8:	strb	r2, [r1, #-1]
   17eac:	ldrb	r7, [r1]
   17eb0:	add	r1, r1, #1
   17eb4:	cmp	r7, #0
   17eb8:	bne	17e9c <sav_begin_data+0xac>
   17ebc:	mov	r0, r5
   17ec0:	mov	r1, r4
   17ec4:	bl	49b8 <ck_str_hash_lookup@plt>
   17ec8:	cmp	r0, #0
   17ecc:	beq	17ee8 <sav_begin_data+0xf8>
   17ed0:	ldr	r2, [pc, #3516]	; 18c94 <sav_begin_data+0xea4>
   17ed4:	add	r3, r6, #1
   17ed8:	mov	r0, r5
   17edc:	mov	r1, #9
   17ee0:	add	r2, pc, r2
   17ee4:	bl	4c4c <snprintf@plt>
   17ee8:	mov	r0, r5
   17eec:	mov	r1, r8
   17ef0:	mov	r2, r4
   17ef4:	bl	4eb0 <ck_str_hash_insert@plt>
   17ef8:	ldr	r0, [r8, #1600]	; 0x640
   17efc:	cmp	r0, #256	; 0x100
   17f00:	bcc	17f1c <sav_begin_data+0x12c>
   17f04:	ldr	r2, [pc, #3468]	; 18c98 <sav_begin_data+0xea8>
   17f08:	mov	r0, r9
   17f0c:	mov	r1, #6
   17f10:	mov	r3, r5
   17f14:	add	r2, pc, r2
   17f18:	bl	4c4c <snprintf@plt>
   17f1c:	ldr	r5, [sp, #52]	; 0x34
   17f20:	add	r6, r6, #1
   17f24:	add	sl, sl, #15
   17f28:	ldr	r0, [r5, #28]
   17f2c:	cmp	r6, r0
   17f30:	blt	17e50 <sav_begin_data+0x60>
   17f34:	mov	r0, r4
   17f38:	bl	4c10 <ck_hash_table_free@plt>
   17f3c:	add	sl, sp, #128	; 0x80
   17f40:	mov	r1, #0
   17f44:	mov	r2, #176	; 0xb0
   17f48:	mov	r9, #0
   17f4c:	mov	r0, sl
   17f50:	bl	4c70 <memset@plt>
   17f54:	ldr	r0, [r5, #20]
   17f58:	str	r0, [fp, #-80]	; 0xffffffb0
   17f5c:	sub	r0, fp, #80	; 0x50
   17f60:	bl	4b44 <localtime@plt>
   17f64:	mov	r8, r0
   17f68:	ldr	r0, [pc, #4036]	; 18f34 <sav_begin_data+0x1144>
   17f6c:	mov	ip, r5
   17f70:	add	r1, sp, #72	; 0x48
   17f74:	cmp	r8, #0
   17f78:	add	r0, pc, r0
   17f7c:	ldm	r0!, {r2, r3, r4, r5, r6, r7}
   17f80:	stmia	r1!, {r2, r3, r4, r5, r6, r7}
   17f84:	ldm	r0, {r2, r3, r4, r5, r6, r7}
   17f88:	stm	r1, {r2, r3, r4, r5, r6, r7}
   17f8c:	str	r9, [fp, #-68]	; 0xffffffbc
   17f90:	str	r9, [fp, #-72]	; 0xffffffb8
   17f94:	strh	r9, [fp, #-64]	; 0xffffffc0
   17f98:	str	r9, [sp, #60]	; 0x3c
   17f9c:	str	r9, [sp, #56]	; 0x38
   17fa0:	strb	r9, [sp, #64]	; 0x40
   17fa4:	beq	18028 <sav_begin_data+0x238>
   17fa8:	movw	r0, #17956	; 0x4624
   17fac:	movt	r0, #12876	; 0x324c
   17fb0:	str	r0, [sp, #128]	; 0x80
   17fb4:	ldr	r0, [ip, #16]
   17fb8:	cmp	r0, #2
   17fbc:	bne	18030 <sav_begin_data+0x240>
   17fc0:	mov	r0, #32
   17fc4:	strb	r0, [sp, #191]	; 0xbf
   17fc8:	mov	r0, #51	; 0x33
   17fcc:	strb	r0, [sp, #131]	; 0x83
   17fd0:	orr	r0, sl, #4
   17fd4:	ldr	r1, [pc, #3932]	; 18f38 <sav_begin_data+0x1148>
   17fd8:	add	r1, pc, r1
   17fdc:	ldm	r1!, {r2, r3, r6, r7}
   17fe0:	stmia	r0!, {r2, r3, r6, r7}
   17fe4:	ldm	r1!, {r2, r3, r5, r6, r7}
   17fe8:	stmia	r0!, {r2, r3, r5, r6, r7}
   17fec:	ldm	r1!, {r2, r3, r5, r6, r7}
   17ff0:	stmia	r0!, {r2, r3, r5, r6, r7}
   17ff4:	ldrh	r2, [r1]
   17ff8:	ldrb	r1, [r1, #2]
   17ffc:	strb	r1, [r0, #2]
   18000:	mov	r1, #2
   18004:	strh	r2, [r0]
   18008:	str	r1, [sp, #192]	; 0xc0
   1800c:	ldr	r0, [ip, #76]	; 0x4c
   18010:	lsr	r0, r0, #3
   18014:	str	r0, [sp, #196]	; 0xc4
   18018:	str	r1, [sp, #200]	; 0xc8
   1801c:	b	1808c <sav_begin_data+0x29c>
   18020:	mov	r6, #14
   18024:	b	181f4 <sav_begin_data+0x404>
   18028:	mov	r6, #39	; 0x27
   1802c:	b	181e4 <sav_begin_data+0x3f4>
   18030:	mov	r1, #32
   18034:	cmp	r0, #1
   18038:	strb	r1, [sp, #191]	; 0xbf
   1803c:	orr	r1, sl, #4
   18040:	ldr	r2, [pc, #4092]	; 19044 <sav_begin_data+0x1254>
   18044:	add	r2, pc, r2
   18048:	ldm	r2!, {r3, r5, r6, r7}
   1804c:	stmia	r1!, {r3, r5, r6, r7}
   18050:	ldm	r2!, {r3, r4, r5, r6, r7}
   18054:	stmia	r1!, {r3, r4, r5, r6, r7}
   18058:	ldm	r2!, {r3, r4, r5, r6, r7}
   1805c:	stmia	r1!, {r3, r4, r5, r6, r7}
   18060:	ldrh	r3, [r2]
   18064:	ldrb	r2, [r2, #2]
   18068:	strb	r2, [r1, #2]
   1806c:	strh	r3, [r1]
   18070:	mov	r1, #2
   18074:	str	r1, [sp, #192]	; 0xc0
   18078:	ldr	r1, [ip, #76]	; 0x4c
   1807c:	lsr	r1, r1, #3
   18080:	str	r1, [sp, #196]	; 0xc4
   18084:	mov	r1, #1
   18088:	streq	r1, [sp, #200]	; 0xc8
   1808c:	ldr	r0, [sp, #52]	; 0x34
   18090:	mov	r2, #0
   18094:	ldr	r4, [sp, #52]	; 0x34
   18098:	movw	r5, #34079	; 0x851f
   1809c:	add	r3, sp, #72	; 0x48
   180a0:	mov	r6, #100	; 0x64
   180a4:	movt	r5, #20971	; 0x51eb
   180a8:	ldr	r1, [r0, #224]	; 0xe0
   180ac:	mov	r0, #0
   180b0:	cmp	r1, #0
   180b4:	ldrne	r1, [r1, #1592]	; 0x638
   180b8:	asrne	r2, r1, #31
   180bc:	addne	r1, r1, r2, lsr #29
   180c0:	movne	r2, #1
   180c4:	addne	r2, r2, r1, asr #3
   180c8:	str	r2, [sp, #204]	; 0xcc
   180cc:	movw	r2, #0
   180d0:	ldr	r1, [r4, #80]	; 0x50
   180d4:	movt	r2, #16473	; 0x4059
   180d8:	str	r0, [sp, #212]	; 0xd4
   180dc:	str	r2, [sp, #216]	; 0xd8
   180e0:	add	r2, r8, #12
   180e4:	str	r1, [sp, #208]	; 0xd0
   180e8:	ldm	r2, {r0, r1, r2}
   180ec:	add	r1, r3, r1, lsl #2
   180f0:	umull	r3, r7, r2, r5
   180f4:	lsr	r3, r7, #5
   180f8:	mls	r2, r3, r6, r2
   180fc:	stm	sp, {r1, r2}
   18100:	umull	r1, r2, r0, r5
   18104:	lsr	r1, r2, #5
   18108:	ldr	r2, [pc, #3904]	; 19050 <sav_begin_data+0x1260>
   1810c:	mls	r3, r1, r6, r0
   18110:	sub	r0, fp, #72	; 0x48
   18114:	mov	r1, #10
   18118:	add	r2, pc, r2
   1811c:	bl	4c4c <snprintf@plt>
   18120:	vldr	d16, [fp, #-72]	; 0xffffffb8
   18124:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   18128:	strb	r0, [sp, #228]	; 0xe4
   1812c:	vstr	d16, [sp, #220]	; 0xdc
   18130:	ldm	r8, {r0, r1, r2}
   18134:	mov	r8, r4
   18138:	umull	r3, r7, r0, r5
   1813c:	lsr	r3, r7, #5
   18140:	mls	r0, r3, r6, r0
   18144:	umull	r3, r7, r1, r5
   18148:	lsr	r3, r7, #5
   1814c:	str	r0, [sp, #4]
   18150:	mls	r1, r3, r6, r1
   18154:	str	r1, [sp]
   18158:	umull	r0, r1, r2, r5
   1815c:	lsr	r0, r1, #5
   18160:	mov	r1, #9
   18164:	mls	r3, r0, r6, r2
   18168:	ldr	r2, [pc, #3812]	; 19054 <sav_begin_data+0x1264>
   1816c:	add	r0, sp, #56	; 0x38
   18170:	add	r2, pc, r2
   18174:	bl	4c4c <snprintf@plt>
   18178:	ldr	r0, [sp, #56]	; 0x38
   1817c:	ldr	r1, [sp, #60]	; 0x3c
   18180:	add	r4, sl, #109	; 0x6d
   18184:	mov	r2, #64	; 0x40
   18188:	mov	r5, #64	; 0x40
   1818c:	str	r1, [sp, #233]	; 0xe9
   18190:	str	r0, [sp, #229]	; 0xe5
   18194:	mov	r0, r4
   18198:	mov	r1, #32
   1819c:	bl	4c70 <memset@plt>
   181a0:	add	r6, r8, #88	; 0x58
   181a4:	mov	r0, r6
   181a8:	bl	4bd4 <strlen@plt>
   181ac:	ldrb	r1, [r8, #88]	; 0x58
   181b0:	cmp	r1, #0
   181b4:	beq	181d0 <sav_begin_data+0x3e0>
   181b8:	cmp	r0, #64	; 0x40
   181bc:	mov	r1, r6
   181c0:	movcc	r5, r0
   181c4:	mov	r0, r4
   181c8:	mov	r2, r5
   181cc:	bl	4910 <memcpy@plt>
   181d0:	add	r1, sp, #128	; 0x80
   181d4:	mov	r0, r8
   181d8:	mov	r2, #176	; 0xb0
   181dc:	bl	4e20 <readstat_write_bytes@plt>
   181e0:	mov	r6, r0
   181e4:	cmp	r6, #0
   181e8:	beq	18208 <sav_begin_data+0x418>
   181ec:	ldr	r0, [sp, #48]	; 0x30
   181f0:	bl	48bc <free@plt>
   181f4:	mov	r0, r6
   181f8:	sub	sp, fp, #48	; 0x30
   181fc:	vpop	{d8-d9}
   18200:	add	sp, sp, #4
   18204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18208:	ldr	r5, [sp, #52]	; 0x34
   1820c:	ldr	r0, [r5, #28]
   18210:	cmp	r0, #1
   18214:	blt	18b98 <sav_begin_data+0xda8>
   18218:	sub	r0, fp, #72	; 0x48
   1821c:	mov	r4, #0
   18220:	vmov.i32	q4, #0	; 0x00000000
   18224:	add	r0, r0, #8
   18228:	str	r0, [sp, #40]	; 0x28
   1822c:	add	r0, sl, #8
   18230:	str	r0, [sp, #36]	; 0x24
   18234:	add	r0, sl, #20
   18238:	str	r0, [sp, #16]
   1823c:	add	r0, sp, #72	; 0x48
   18240:	add	r0, r0, #20
   18244:	str	r0, [sp, #12]
   18248:	mov	r0, r5
   1824c:	mov	r1, r4
   18250:	bl	4d48 <readstat_get_variable@plt>
   18254:	str	r0, [sp, #44]	; 0x2c
   18258:	mov	r0, #2
   1825c:	str	r4, [sp, #20]
   18260:	ldr	r1, [sp, #48]	; 0x30
   18264:	str	r0, [sp, #124]	; 0x7c
   18268:	rsb	r0, r4, r4, lsl #4
   1826c:	add	r4, sp, #56	; 0x38
   18270:	ldr	r2, [pc, #3844]	; 1917c <sav_begin_data+0x138c>
   18274:	add	r3, r1, r0
   18278:	mov	r0, r4
   1827c:	mov	r1, #9
   18280:	str	r3, [sp, #32]
   18284:	add	r2, pc, r2
   18288:	bl	4c4c <snprintf@plt>
   1828c:	mov	r0, r4
   18290:	bl	4bd4 <strlen@plt>
   18294:	mov	r7, r0
   18298:	mov	r0, r5
   1829c:	add	r1, sp, #124	; 0x7c
   182a0:	mov	r2, #4
   182a4:	bl	4e20 <readstat_write_bytes@plt>
   182a8:	mov	r6, r0
   182ac:	cmp	r0, #0
   182b0:	bne	18580 <sav_begin_data+0x790>
   182b4:	ldr	r6, [sp, #44]	; 0x2c
   182b8:	add	r0, sp, #72	; 0x48
   182bc:	mov	r1, #12
   182c0:	vst1.64	{d8-d9}, [r0], r1
   182c4:	vst1.32	{d8-d9}, [r0]
   182c8:	ldr	r0, [r6]
   182cc:	cmp	r0, #0
   182d0:	beq	183c0 <sav_begin_data+0x5d0>
   182d4:	mov	r8, r6
   182d8:	sub	r4, fp, #72	; 0x48
   182dc:	ldrb	r1, [r8, #564]!	; 0x234
   182e0:	cmp	r1, #0
   182e4:	movwne	r1, #1
   182e8:	cmp	r0, #5
   182ec:	str	r1, [sp, #76]	; 0x4c
   182f0:	bne	183e8 <sav_begin_data+0x5f8>
   182f4:	mov	r0, r6
   182f8:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   182fc:	mov	r1, r0
   18300:	cmp	r0, #1
   18304:	blt	184d4 <sav_begin_data+0x6e4>
   18308:	ldr	r9, [sp, #44]	; 0x2c
   1830c:	str	r7, [sp, #24]
   18310:	mov	r6, #0
   18314:	mov	r4, #0
   18318:	mov	r7, r1
   1831c:	str	r8, [sp, #28]
   18320:	mov	sl, r1
   18324:	add	r0, sp, #128	; 0x80
   18328:	mov	r1, r9
   1832c:	mov	r2, r6
   18330:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   18334:	sub	r0, fp, #72	; 0x48
   18338:	mov	r1, r9
   1833c:	mov	r2, r6
   18340:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   18344:	ldr	r0, [sp, #36]	; 0x24
   18348:	ldr	r1, [sp, #132]	; 0x84
   1834c:	ldrd	r2, [r0]
   18350:	ldr	r0, [sp, #128]	; 0x80
   18354:	bl	4c88 <spss_64bit_value@plt>
   18358:	mov	r5, r0
   1835c:	ldr	r0, [sp, #40]	; 0x28
   18360:	mov	r8, r1
   18364:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18368:	ldrd	r2, [r0]
   1836c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18370:	bl	4c88 <spss_64bit_value@plt>
   18374:	eor	r1, r8, r1
   18378:	eor	r0, r5, r0
   1837c:	mov	r2, #1
   18380:	add	r6, r6, #1
   18384:	orrs	r0, r0, r1
   18388:	mov	r1, sl
   1838c:	movwne	r0, #1
   18390:	movne	r4, r2
   18394:	cmp	sl, r6
   18398:	add	r7, r7, r0
   1839c:	bne	18320 <sav_begin_data+0x530>
   183a0:	cmp	r4, #0
   183a4:	ldr	r5, [sp, #52]	; 0x34
   183a8:	ldr	r8, [sp, #28]
   183ac:	add	sl, sp, #128	; 0x80
   183b0:	moveq	r1, r7
   183b4:	rsbne	r1, r7, #0
   183b8:	ldr	r7, [sp, #24]
   183bc:	b	184d4 <sav_begin_data+0x6e4>
   183c0:	ldr	r0, [r6, #1600]	; 0x640
   183c4:	mov	r8, r6
   183c8:	sub	r4, fp, #72	; 0x48
   183cc:	cmp	r0, #255	; 0xff
   183d0:	movcs	r0, #255	; 0xff
   183d4:	str	r0, [sp, #72]	; 0x48
   183d8:	ldrb	r0, [r8, #564]!	; 0x234
   183dc:	cmp	r0, #0
   183e0:	movwne	r0, #1
   183e4:	str	r0, [sp, #76]	; 0x4c
   183e8:	mov	r0, r6
   183ec:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   183f0:	mov	r1, #0
   183f4:	cmp	r0, #8
   183f8:	bhi	184ec <sav_begin_data+0x6fc>
   183fc:	mov	r0, r6
   18400:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   18404:	mov	r1, r0
   18408:	cmp	r0, #1
   1840c:	blt	184d4 <sav_begin_data+0x6e4>
   18410:	str	r7, [sp, #24]
   18414:	str	r8, [sp, #28]
   18418:	mov	r9, sl
   1841c:	mov	r7, #0
   18420:	mov	r8, r1
   18424:	mov	r6, #0
   18428:	ldr	r5, [sp, #44]	; 0x2c
   1842c:	mov	sl, r1
   18430:	mov	r0, r9
   18434:	mov	r2, r6
   18438:	mov	r1, r5
   1843c:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   18440:	mov	r0, r4
   18444:	mov	r1, r5
   18448:	mov	r2, r6
   1844c:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   18450:	ldr	r0, [sp, #36]	; 0x24
   18454:	ldr	r1, [sp, #132]	; 0x84
   18458:	ldrd	r2, [r0]
   1845c:	ldr	r0, [sp, #128]	; 0x80
   18460:	bl	4994 <readstat_string_value@plt>
   18464:	mov	r5, r0
   18468:	ldr	r0, [sp, #40]	; 0x28
   1846c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18470:	ldrd	r2, [r0]
   18474:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18478:	bl	4994 <readstat_string_value@plt>
   1847c:	cmp	r5, #0
   18480:	movne	r1, r0
   18484:	cmpne	r0, #0
   18488:	beq	184a8 <sav_begin_data+0x6b8>
   1848c:	mov	r0, r5
   18490:	bl	4808 <strcmp@plt>
   18494:	cmp	r0, #0
   18498:	mov	r1, #1
   1849c:	movwne	r0, #1
   184a0:	movne	r7, r1
   184a4:	add	r8, r8, r0
   184a8:	add	r6, r6, #1
   184ac:	mov	r1, sl
   184b0:	cmp	sl, r6
   184b4:	bne	18428 <sav_begin_data+0x638>
   184b8:	cmp	r7, #0
   184bc:	ldr	r5, [sp, #52]	; 0x34
   184c0:	ldr	r7, [sp, #24]
   184c4:	mov	sl, r9
   184c8:	rsbne	r1, r8, #0
   184cc:	moveq	r1, r8
   184d0:	ldr	r8, [sp, #28]
   184d4:	cmp	r1, #0
   184d8:	mov	r0, r1
   184dc:	mov	r6, #31
   184e0:	rsbmi	r0, r1, #0
   184e4:	cmp	r0, #3
   184e8:	bgt	18580 <sav_begin_data+0x790>
   184ec:	ldr	r0, [sp, #44]	; 0x2c
   184f0:	str	r1, [sp, #80]	; 0x50
   184f4:	mov	r1, sl
   184f8:	bl	4ad8 <spss_format_for_variable@plt>
   184fc:	cmp	r0, #0
   18500:	beq	1850c <sav_begin_data+0x71c>
   18504:	mov	r6, r0
   18508:	b	18580 <sav_begin_data+0x790>
   1850c:	add	r2, sp, #128	; 0x80
   18510:	ldm	r2, {r0, r1, r2}
   18514:	lsl	r3, r1, #8
   18518:	cmp	r1, #255	; 0xff
   1851c:	orr	r0, r2, r0, lsl #16
   18520:	movw	r1, #8224	; 0x2020
   18524:	uxth	r3, r3
   18528:	movt	r1, #8224	; 0x2020
   1852c:	movwgt	r3, #65280	; 0xff00
   18530:	orr	r0, r0, r3
   18534:	str	r0, [sp, #84]	; 0x54
   18538:	str	r0, [sp, #88]	; 0x58
   1853c:	ldr	r0, [sp, #12]
   18540:	str	r1, [r0]
   18544:	str	r1, [r0, #4]
   18548:	sub	r0, r7, #1
   1854c:	cmp	r0, #7
   18550:	bhi	18564 <sav_begin_data+0x774>
   18554:	ldr	r0, [sp, #12]
   18558:	add	r1, sp, #56	; 0x38
   1855c:	mov	r2, r7
   18560:	bl	4910 <memcpy@plt>
   18564:	mov	r0, r5
   18568:	add	r1, sp, #72	; 0x48
   1856c:	mov	r2, #28
   18570:	bl	4e20 <readstat_write_bytes@plt>
   18574:	mov	r6, r0
   18578:	cmp	r0, #0
   1857c:	beq	1879c <sav_begin_data+0x9ac>
   18580:	ldr	r4, [sp, #44]	; 0x2c
   18584:	cmp	r6, #0
   18588:	mov	r2, #1
   1858c:	bne	181ec <sav_begin_data+0x3fc>
   18590:	ldr	r0, [r4]
   18594:	cmp	r0, #0
   18598:	bne	185b0 <sav_begin_data+0x7c0>
   1859c:	ldr	r0, [r4, #1600]	; 0x640
   185a0:	cmp	r0, #256	; 0x100
   185a4:	addcs	r0, r0, #251	; 0xfb
   185a8:	cmpcs	r0, #504	; 0x1f8
   185ac:	bcs	185cc <sav_begin_data+0x7dc>
   185b0:	ldr	r5, [sp, #52]	; 0x34
   185b4:	ldr	r4, [sp, #20]
   185b8:	ldr	r0, [r5, #28]
   185bc:	add	r4, r4, #1
   185c0:	cmp	r4, r0
   185c4:	blt	18248 <sav_begin_data+0x458>
   185c8:	b	18b98 <sav_begin_data+0xda8>
   185cc:	movw	r1, #2081	; 0x821
   185d0:	lsr	r0, r0, #2
   185d4:	mov	r8, #1
   185d8:	mov	r9, #0
   185dc:	movt	r1, #8322	; 0x2082
   185e0:	umull	r0, r1, r0, r1
   185e4:	lsr	r7, r1, #3
   185e8:	mov	r1, #252	; 0xfc
   185ec:	sub	r0, r7, r7, lsl #6
   185f0:	add	r0, r1, r0, lsl #2
   185f4:	str	r0, [sp, #24]
   185f8:	ldr	r0, [sp, #32]
   185fc:	add	r0, r0, #9
   18600:	str	r0, [sp, #32]
   18604:	sub	r0, r7, #2
   18608:	str	r0, [sp, #28]
   1860c:	b	18634 <sav_begin_data+0x844>
   18610:	add	r0, sl, #7
   18614:	mvn	r1, #0
   18618:	add	r1, r1, r0, lsr #3
   1861c:	mov	r0, #31
   18620:	cmp	r1, #31
   18624:	movge	r1, r0
   18628:	ldr	r0, [sp, #52]	; 0x34
   1862c:	bl	19ddc <sav_emit_blank_variable_records>
   18630:	b	186f8 <sav_begin_data+0x908>
   18634:	movw	r0, #36409	; 0x8e39
   18638:	mov	sl, #255	; 0xff
   1863c:	movt	r0, #14563	; 0x38e3
   18640:	umull	r0, r1, r8, r0
   18644:	lsr	r0, r1, #3
   18648:	add	r0, r0, r0, lsl #3
   1864c:	sub	r5, r2, r0, lsl #2
   18650:	ldr	r0, [sp, #28]
   18654:	cmp	r0, r9
   18658:	ldreq	r0, [r4, #1600]	; 0x640
   1865c:	ldreq	r1, [sp, #24]
   18660:	add	r4, sp, #56	; 0x38
   18664:	addeq	sl, r0, r1
   18668:	mov	r0, #2
   1866c:	mov	r1, #12
   18670:	str	r0, [fp, #-72]	; 0xffffffb8
   18674:	add	r0, sp, #128	; 0x80
   18678:	vst1.64	{d8-d9}, [r0], r1
   1867c:	mov	r1, #9
   18680:	vst1.32	{d8-d9}, [r0]
   18684:	mov	r0, r4
   18688:	ldr	r2, [pc, #3408]	; 193e0 <sav_begin_data+0x15f0>
   1868c:	ldr	r3, [sp, #32]
   18690:	add	r2, pc, r2
   18694:	bl	4c4c <snprintf@plt>
   18698:	add	r0, r9, r5
   1869c:	mov	r1, #55	; 0x37
   186a0:	cmp	r0, #10
   186a4:	movwcc	r1, #48	; 0x30
   186a8:	add	r6, r1, r0
   186ac:	mov	r0, r4
   186b0:	bl	4bd4 <strlen@plt>
   186b4:	strb	r6, [r4, r0]
   186b8:	mov	r5, r0
   186bc:	ldr	r0, [sp, #52]	; 0x34
   186c0:	ldr	r4, [sp, #44]	; 0x2c
   186c4:	sub	r1, fp, #72	; 0x48
   186c8:	mov	r2, #4
   186cc:	bl	4e20 <readstat_write_bytes@plt>
   186d0:	mov	r6, r0
   186d4:	cmp	r0, #0
   186d8:	bne	18770 <sav_begin_data+0x980>
   186dc:	mov	r0, r4
   186e0:	add	r1, sp, #72	; 0x48
   186e4:	str	sl, [sp, #128]	; 0x80
   186e8:	bl	4ad8 <spss_format_for_variable@plt>
   186ec:	cmp	r0, #0
   186f0:	str	sl, [sp, #76]	; 0x4c
   186f4:	beq	18700 <sav_begin_data+0x910>
   186f8:	mov	r6, r0
   186fc:	b	18770 <sav_begin_data+0x980>
   18700:	ldr	r1, [sp, #72]	; 0x48
   18704:	lsl	r0, sl, #8
   18708:	ldr	r2, [sp, #80]	; 0x50
   1870c:	cmp	sl, #255	; 0xff
   18710:	uxth	r0, r0
   18714:	movwgt	r0, #65280	; 0xff00
   18718:	cmp	r5, #7
   1871c:	orr	r0, r0, r1, lsl #16
   18720:	movw	r1, #8224	; 0x2020
   18724:	orr	r0, r0, r2
   18728:	movt	r1, #8224	; 0x2020
   1872c:	str	r0, [sp, #140]	; 0x8c
   18730:	str	r0, [sp, #144]	; 0x90
   18734:	ldr	r0, [sp, #16]
   18738:	str	r1, [r0]
   1873c:	str	r1, [r0, #4]
   18740:	bhi	18754 <sav_begin_data+0x964>
   18744:	ldr	r0, [sp, #16]
   18748:	add	r2, r5, #1
   1874c:	add	r1, sp, #56	; 0x38
   18750:	bl	4910 <memcpy@plt>
   18754:	ldr	r0, [sp, #52]	; 0x34
   18758:	add	r1, sp, #128	; 0x80
   1875c:	mov	r2, #28
   18760:	bl	4e20 <readstat_write_bytes@plt>
   18764:	mov	r6, r0
   18768:	cmp	r0, #0
   1876c:	beq	18610 <sav_begin_data+0x820>
   18770:	cmp	r6, #0
   18774:	add	sl, sp, #128	; 0x80
   18778:	mov	r2, #1
   1877c:	bne	181ec <sav_begin_data+0x3fc>
   18780:	add	r1, r9, #2
   18784:	add	r0, r9, #1
   18788:	add	r8, r8, #1
   1878c:	cmp	r1, r7
   18790:	mov	r9, r0
   18794:	bcc	18634 <sav_begin_data+0x844>
   18798:	b	185b0 <sav_begin_data+0x7c0>
   1879c:	mov	r0, r8
   187a0:	bl	4bd4 <strlen@plt>
   187a4:	cmp	r0, #0
   187a8:	beq	1880c <sav_begin_data+0xa1c>
   187ac:	cmp	r0, #256	; 0x100
   187b0:	sub	r1, fp, #72	; 0x48
   187b4:	mov	r2, #4
   187b8:	movcs	r0, #256	; 0x100
   187bc:	str	r0, [fp, #-72]	; 0xffffffb8
   187c0:	mov	r0, r5
   187c4:	bl	4e20 <readstat_write_bytes@plt>
   187c8:	cmp	r0, #0
   187cc:	bne	18504 <sav_begin_data+0x714>
   187d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   187d4:	mov	r1, r8
   187d8:	add	r0, r0, #3
   187dc:	bic	r2, r0, #3
   187e0:	mov	r0, sl
   187e4:	bl	4c94 <strncpy@plt>
   187e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   187ec:	mov	r1, sl
   187f0:	add	r0, r0, #3
   187f4:	bic	r2, r0, #3
   187f8:	mov	r0, r5
   187fc:	bl	4e20 <readstat_write_bytes@plt>
   18800:	mov	r6, r0
   18804:	cmp	r0, #0
   18808:	bne	18580 <sav_begin_data+0x790>
   1880c:	ldr	r0, [sp, #44]	; 0x2c
   18810:	ldr	r1, [r0]
   18814:	cmp	r1, #5
   18818:	bne	18964 <sav_begin_data+0xb74>
   1881c:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   18820:	cmp	r0, #1
   18824:	str	r0, [sp, #28]
   18828:	blt	18ac8 <sav_begin_data+0xcd8>
   1882c:	ldr	r8, [sp, #40]	; 0x28
   18830:	ldr	r9, [sp, #36]	; 0x24
   18834:	mov	r4, #0
   18838:	ldr	r6, [sp, #44]	; 0x2c
   1883c:	mov	r0, sl
   18840:	mov	r2, r4
   18844:	mov	r1, r6
   18848:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   1884c:	sub	r0, fp, #72	; 0x48
   18850:	mov	r1, r6
   18854:	mov	r2, r4
   18858:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   1885c:	ldrd	r2, [r9]
   18860:	ldr	r0, [sp, #128]	; 0x80
   18864:	ldr	r1, [sp, #132]	; 0x84
   18868:	bl	4c88 <spss_64bit_value@plt>
   1886c:	mov	r7, r0
   18870:	mov	r6, r1
   18874:	ldrd	r2, [r8]
   18878:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1887c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18880:	bl	4c88 <spss_64bit_value@plt>
   18884:	eor	r1, r6, r1
   18888:	eor	r0, r7, r0
   1888c:	orrs	r0, r0, r1
   18890:	bne	18af0 <sav_begin_data+0xd00>
   18894:	ldr	r0, [sp, #28]
   18898:	add	r4, r4, #1
   1889c:	cmp	r4, r0
   188a0:	blt	18838 <sav_begin_data+0xa48>
   188a4:	mov	r8, #0
   188a8:	mov	r4, #0
   188ac:	ldr	r6, [sp, #44]	; 0x2c
   188b0:	mov	r0, sl
   188b4:	mov	r2, r4
   188b8:	mov	r1, r6
   188bc:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   188c0:	sub	r0, fp, #72	; 0x48
   188c4:	mov	r1, r6
   188c8:	mov	r2, r4
   188cc:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   188d0:	ldr	r9, [sp, #36]	; 0x24
   188d4:	ldr	r0, [sp, #128]	; 0x80
   188d8:	ldr	r1, [sp, #132]	; 0x84
   188dc:	ldrd	r2, [r9]
   188e0:	bl	4c88 <spss_64bit_value@plt>
   188e4:	mov	r7, r0
   188e8:	ldr	r0, [sp, #40]	; 0x28
   188ec:	mov	r6, r1
   188f0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   188f4:	ldrd	r2, [r0]
   188f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   188fc:	bl	4c88 <spss_64bit_value@plt>
   18900:	eor	r1, r6, r1
   18904:	eor	r0, r7, r0
   18908:	orrs	r0, r0, r1
   1890c:	bne	18950 <sav_begin_data+0xb60>
   18910:	ldrd	r2, [r9]
   18914:	ldr	r0, [sp, #128]	; 0x80
   18918:	ldr	r1, [sp, #132]	; 0x84
   1891c:	bl	4c88 <spss_64bit_value@plt>
   18920:	str	r1, [fp, #-76]	; 0xffffffb4
   18924:	str	r0, [fp, #-80]	; 0xffffffb0
   18928:	mov	r0, r5
   1892c:	sub	r1, fp, #80	; 0x50
   18930:	mov	r2, #8
   18934:	bl	4e20 <readstat_write_bytes@plt>
   18938:	mov	r6, r0
   1893c:	cmp	r0, #0
   18940:	bne	18ac0 <sav_begin_data+0xcd0>
   18944:	add	r8, r8, #1
   18948:	cmp	r8, #3
   1894c:	beq	18ac0 <sav_begin_data+0xcd0>
   18950:	ldr	r0, [sp, #28]
   18954:	add	r4, r4, #1
   18958:	cmp	r4, r0
   1895c:	blt	188ac <sav_begin_data+0xabc>
   18960:	b	18ac8 <sav_begin_data+0xcd8>
   18964:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   18968:	cmp	r0, #8
   1896c:	bhi	18ac8 <sav_begin_data+0xcd8>
   18970:	ldr	r0, [sp, #44]	; 0x2c
   18974:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   18978:	cmp	r0, #1
   1897c:	str	r0, [sp, #28]
   18980:	blt	18ac8 <sav_begin_data+0xcd8>
   18984:	ldr	r8, [sp, #40]	; 0x28
   18988:	ldr	r7, [sp, #36]	; 0x24
   1898c:	mov	r4, #0
   18990:	ldr	r6, [sp, #44]	; 0x2c
   18994:	mov	r0, sl
   18998:	mov	r2, r4
   1899c:	mov	r1, r6
   189a0:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   189a4:	sub	r0, fp, #72	; 0x48
   189a8:	mov	r1, r6
   189ac:	mov	r2, r4
   189b0:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   189b4:	ldrd	r2, [r7]
   189b8:	ldr	r0, [sp, #128]	; 0x80
   189bc:	ldr	r1, [sp, #132]	; 0x84
   189c0:	bl	4994 <readstat_string_value@plt>
   189c4:	mov	r6, r0
   189c8:	ldrd	r2, [r8]
   189cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   189d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   189d4:	bl	4994 <readstat_string_value@plt>
   189d8:	cmp	r6, #0
   189dc:	movne	r9, r0
   189e0:	cmpne	r0, #0
   189e4:	beq	189fc <sav_begin_data+0xc0c>
   189e8:	mov	r0, r6
   189ec:	mov	r1, r9
   189f0:	bl	4808 <strcmp@plt>
   189f4:	cmp	r0, #0
   189f8:	bne	18b5c <sav_begin_data+0xd6c>
   189fc:	ldr	r0, [sp, #28]
   18a00:	add	r4, r4, #1
   18a04:	cmp	r4, r0
   18a08:	blt	18990 <sav_begin_data+0xba0>
   18a0c:	mov	r7, #0
   18a10:	mov	r4, #0
   18a14:	ldr	r6, [sp, #44]	; 0x2c
   18a18:	mov	r0, sl
   18a1c:	mov	r2, r4
   18a20:	mov	r1, r6
   18a24:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   18a28:	sub	r0, fp, #72	; 0x48
   18a2c:	mov	r1, r6
   18a30:	mov	r2, r4
   18a34:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   18a38:	ldr	r0, [sp, #36]	; 0x24
   18a3c:	ldr	r1, [sp, #132]	; 0x84
   18a40:	ldrd	r2, [r0]
   18a44:	ldr	r0, [sp, #128]	; 0x80
   18a48:	bl	4994 <readstat_string_value@plt>
   18a4c:	mov	r6, r0
   18a50:	ldr	r0, [sp, #40]	; 0x28
   18a54:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18a58:	ldrd	r2, [r0]
   18a5c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18a60:	bl	4994 <readstat_string_value@plt>
   18a64:	cmp	r6, #0
   18a68:	movne	r1, r0
   18a6c:	cmpne	r0, #0
   18a70:	bne	18a88 <sav_begin_data+0xc98>
   18a74:	ldr	r0, [sp, #28]
   18a78:	add	r4, r4, #1
   18a7c:	cmp	r4, r0
   18a80:	blt	18a14 <sav_begin_data+0xc24>
   18a84:	b	18ac8 <sav_begin_data+0xcd8>
   18a88:	mov	r0, r6
   18a8c:	bl	4808 <strcmp@plt>
   18a90:	cmp	r0, #0
   18a94:	bne	18a74 <sav_begin_data+0xc84>
   18a98:	mov	r0, r5
   18a9c:	mov	r1, r6
   18aa0:	mov	r2, #8
   18aa4:	bl	4f10 <readstat_write_space_padded_string@plt>
   18aa8:	mov	r6, r0
   18aac:	cmp	r0, #0
   18ab0:	bne	18ac0 <sav_begin_data+0xcd0>
   18ab4:	add	r7, r7, #1
   18ab8:	cmp	r7, #3
   18abc:	bne	18a74 <sav_begin_data+0xc84>
   18ac0:	cmp	r6, #0
   18ac4:	bne	18580 <sav_begin_data+0x790>
   18ac8:	ldr	r0, [sp, #44]	; 0x2c
   18acc:	mvn	r1, #0
   18ad0:	ldr	r0, [r0, #1596]	; 0x63c
   18ad4:	add	r1, r1, r0, lsr #3
   18ad8:	mov	r0, #31
   18adc:	cmp	r1, #31
   18ae0:	movge	r1, r0
   18ae4:	mov	r0, r5
   18ae8:	bl	19ddc <sav_emit_blank_variable_records>
   18aec:	b	18504 <sav_begin_data+0x714>
   18af0:	ldrd	r2, [r9]
   18af4:	ldr	r0, [sp, #128]	; 0x80
   18af8:	ldr	r1, [sp, #132]	; 0x84
   18afc:	bl	4c88 <spss_64bit_value@plt>
   18b00:	str	r1, [fp, #-76]	; 0xffffffb4
   18b04:	str	r0, [fp, #-80]	; 0xffffffb0
   18b08:	mov	r0, r5
   18b0c:	sub	r1, fp, #80	; 0x50
   18b10:	mov	r2, #8
   18b14:	bl	4e20 <readstat_write_bytes@plt>
   18b18:	cmp	r0, #0
   18b1c:	bne	18504 <sav_begin_data+0x714>
   18b20:	ldrd	r2, [r8]
   18b24:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18b28:	ldr	r1, [fp, #-68]	; 0xffffffbc
   18b2c:	bl	4c88 <spss_64bit_value@plt>
   18b30:	str	r1, [fp, #-84]	; 0xffffffac
   18b34:	str	r0, [fp, #-88]	; 0xffffffa8
   18b38:	mov	r0, r5
   18b3c:	sub	r1, fp, #88	; 0x58
   18b40:	mov	r2, #8
   18b44:	bl	4e20 <readstat_write_bytes@plt>
   18b48:	mov	r6, r0
   18b4c:	cmp	r0, #0
   18b50:	bne	18580 <sav_begin_data+0x790>
   18b54:	mov	r8, #2
   18b58:	b	188a8 <sav_begin_data+0xab8>
   18b5c:	mov	r0, r5
   18b60:	mov	r1, r6
   18b64:	mov	r2, #8
   18b68:	bl	4f10 <readstat_write_space_padded_string@plt>
   18b6c:	cmp	r0, #0
   18b70:	bne	18504 <sav_begin_data+0x714>
   18b74:	mov	r0, r5
   18b78:	mov	r1, r9
   18b7c:	mov	r2, #8
   18b80:	bl	4f10 <readstat_write_space_padded_string@plt>
   18b84:	mov	r6, r0
   18b88:	cmp	r0, #0
   18b8c:	bne	18580 <sav_begin_data+0x790>
   18b90:	mov	r7, #2
   18b94:	b	18a10 <sav_begin_data+0xc20>
   18b98:	ldr	r0, [r5, #40]	; 0x28
   18b9c:	cmp	r0, #1
   18ba0:	blt	18e0c <sav_begin_data+0x101c>
   18ba4:	mov	r4, #0
   18ba8:	mov	r6, #3
   18bac:	mov	r7, #0
   18bb0:	mov	r0, r5
   18bb4:	mov	r1, r7
   18bb8:	bl	4df0 <readstat_get_label_set@plt>
   18bbc:	mov	sl, r0
   18bc0:	bl	19e80 <readstat_label_set_number_short_variables>
   18bc4:	cmp	r0, #1
   18bc8:	blt	18dfc <sav_begin_data+0x100c>
   18bcc:	ldr	r0, [sl, #264]	; 0x108
   18bd0:	str	r7, [sp, #44]	; 0x2c
   18bd4:	ldr	r7, [sl]
   18bd8:	str	r4, [sp, #56]	; 0x38
   18bdc:	cmp	r0, #0
   18be0:	str	r0, [fp, #-72]	; 0xffffffb8
   18be4:	beq	18df8 <sav_begin_data+0x1008>
   18be8:	mov	r0, r5
   18bec:	add	r1, sp, #56	; 0x38
   18bf0:	mov	r2, #4
   18bf4:	str	r6, [sp, #56]	; 0x38
   18bf8:	bl	4e20 <readstat_write_bytes@plt>
   18bfc:	cmp	r0, #0
   18c00:	bne	18f2c <sav_begin_data+0x113c>
   18c04:	mov	r0, r5
   18c08:	sub	r1, fp, #72	; 0x48
   18c0c:	mov	r2, #4
   18c10:	bl	4e20 <readstat_write_bytes@plt>
   18c14:	cmp	r0, #0
   18c18:	bne	18f2c <sav_begin_data+0x113c>
   18c1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18c20:	cmp	r0, #1
   18c24:	blt	18d44 <sav_begin_data+0xf54>
   18c28:	mov	r4, #0
   18c2c:	mov	r0, sl
   18c30:	mov	r1, r4
   18c34:	bl	4e8c <readstat_get_value_label@plt>
   18c38:	mov	r6, r0
   18c3c:	cmp	r7, #5
   18c40:	beq	18c88 <sav_begin_data+0xe98>
   18c44:	cmp	r7, #3
   18c48:	beq	18c9c <sav_begin_data+0xeac>
   18c4c:	cmp	r7, #0
   18c50:	bne	18ca8 <sav_begin_data+0xeb8>
   18c54:	ldrd	r2, [r6, #16]
   18c58:	movw	r0, #8224	; 0x2020
   18c5c:	movt	r0, #8224	; 0x2020
   18c60:	str	r0, [sp, #76]	; 0x4c
   18c64:	str	r0, [sp, #72]	; 0x48
   18c68:	mov	r0, #8
   18c6c:	cmp	r3, #8
   18c70:	mov	r1, r2
   18c74:	movcs	r3, r0
   18c78:	add	r0, sp, #72	; 0x48
   18c7c:	mov	r2, r3
   18c80:	bl	4910 <memcpy@plt>
   18c84:	b	18ca8 <sav_begin_data+0xeb8>
   18c88:	vldr	d16, [r6]
   18c8c:	b	18ca4 <sav_begin_data+0xeb4>
   18c90:	.word	0x0000d77f
   18c94:	.word	0x0000d71c
   18c98:	.word	0x0000d6ee
   18c9c:	vldr	s0, [r6, #8]
   18ca0:	vcvt.f64.s32	d16, s0
   18ca4:	vstr	d16, [sp, #72]	; 0x48
   18ca8:	mov	r0, r5
   18cac:	add	r1, sp, #72	; 0x48
   18cb0:	mov	r2, #8
   18cb4:	bl	4e20 <readstat_write_bytes@plt>
   18cb8:	ldr	r8, [r6, #24]
   18cbc:	ldr	r1, [r6, #28]
   18cc0:	ldr	r5, [sp, #52]	; 0x34
   18cc4:	mov	r0, #120	; 0x78
   18cc8:	mov	r2, #1
   18ccc:	strb	r0, [fp, #-80]	; 0xffffffb0
   18cd0:	cmp	r1, #119	; 0x77
   18cd4:	mov	r0, r5
   18cd8:	strbls	r1, [fp, #-80]	; 0xffffffb0
   18cdc:	sub	r1, fp, #80	; 0x50
   18ce0:	bl	4e20 <readstat_write_bytes@plt>
   18ce4:	cmp	r0, #0
   18ce8:	bne	18f2c <sav_begin_data+0x113c>
   18cec:	add	r9, sp, #128	; 0x80
   18cf0:	mov	r1, #32
   18cf4:	mov	r2, #128	; 0x80
   18cf8:	mov	r0, r9
   18cfc:	bl	4c70 <memset@plt>
   18d00:	ldrb	r6, [fp, #-80]	; 0xffffffb0
   18d04:	mov	r0, r9
   18d08:	mov	r1, r8
   18d0c:	mov	r2, r6
   18d10:	bl	4910 <memcpy@plt>
   18d14:	add	r0, r6, #8
   18d18:	mov	r1, r9
   18d1c:	and	r0, r0, #504	; 0x1f8
   18d20:	sub	r2, r0, #1
   18d24:	mov	r0, r5
   18d28:	bl	4e20 <readstat_write_bytes@plt>
   18d2c:	cmp	r0, #0
   18d30:	bne	18f2c <sav_begin_data+0x113c>
   18d34:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18d38:	add	r4, r4, #1
   18d3c:	cmp	r4, r0
   18d40:	blt	18c2c <sav_begin_data+0xe3c>
   18d44:	mov	r0, #4
   18d48:	str	r0, [sp, #56]	; 0x38
   18d4c:	mov	r0, sl
   18d50:	bl	19e80 <readstat_label_set_number_short_variables>
   18d54:	str	r0, [sp, #128]	; 0x80
   18d58:	mov	r0, r5
   18d5c:	add	r1, sp, #56	; 0x38
   18d60:	mov	r2, #4
   18d64:	bl	4e20 <readstat_write_bytes@plt>
   18d68:	cmp	r0, #0
   18d6c:	bne	18f2c <sav_begin_data+0x113c>
   18d70:	mov	r0, r5
   18d74:	add	r1, sp, #128	; 0x80
   18d78:	mov	r2, #4
   18d7c:	bl	4e20 <readstat_write_bytes@plt>
   18d80:	cmp	r0, #0
   18d84:	bne	18f2c <sav_begin_data+0x113c>
   18d88:	ldr	r0, [sl, #276]	; 0x114
   18d8c:	mov	r7, #1
   18d90:	cmp	r0, #1
   18d94:	blt	18df0 <sav_begin_data+0x1000>
   18d98:	mov	r4, #0
   18d9c:	mov	r0, sl
   18da0:	mov	r1, r4
   18da4:	bl	4e14 <readstat_get_label_set_variable@plt>
   18da8:	ldr	r1, [r0, #1596]	; 0x63c
   18dac:	cmp	r1, #8
   18db0:	bhi	18de0 <sav_begin_data+0xff0>
   18db4:	ldr	r0, [r0, #1592]	; 0x638
   18db8:	mov	r2, #4
   18dbc:	asr	r1, r0, #31
   18dc0:	add	r0, r0, r1, lsr #29
   18dc4:	add	r1, sp, #72	; 0x48
   18dc8:	add	r0, r7, r0, asr #3
   18dcc:	str	r0, [sp, #72]	; 0x48
   18dd0:	mov	r0, r5
   18dd4:	bl	4e20 <readstat_write_bytes@plt>
   18dd8:	cmp	r0, #0
   18ddc:	bne	18f2c <sav_begin_data+0x113c>
   18de0:	ldr	r0, [sl, #276]	; 0x114
   18de4:	add	r4, r4, #1
   18de8:	cmp	r4, r0
   18dec:	blt	18d9c <sav_begin_data+0xfac>
   18df0:	mov	r4, #0
   18df4:	mov	r6, #3
   18df8:	ldr	r7, [sp, #44]	; 0x2c
   18dfc:	ldr	r0, [r5, #40]	; 0x28
   18e00:	add	r7, r7, #1
   18e04:	cmp	r7, r0
   18e08:	blt	18bb0 <sav_begin_data+0xdc0>
   18e0c:	mov	r0, #6
   18e10:	add	r8, sp, #128	; 0x80
   18e14:	str	r0, [sp, #128]	; 0x80
   18e18:	ldr	r0, [r5, #52]	; 0x34
   18e1c:	cmp	r0, #0
   18e20:	str	r0, [sp, #72]	; 0x48
   18e24:	beq	18ec8 <sav_begin_data+0x10d8>
   18e28:	add	r1, sp, #128	; 0x80
   18e2c:	mov	r0, r5
   18e30:	mov	r2, #4
   18e34:	bl	4e20 <readstat_write_bytes@plt>
   18e38:	mov	r6, r0
   18e3c:	cmp	r0, #0
   18e40:	bne	181ec <sav_begin_data+0x3fc>
   18e44:	add	r1, sp, #72	; 0x48
   18e48:	mov	r0, r5
   18e4c:	mov	r2, #4
   18e50:	bl	4e20 <readstat_write_bytes@plt>
   18e54:	mov	r6, r0
   18e58:	cmp	r0, #0
   18e5c:	bne	181ec <sav_begin_data+0x3fc>
   18e60:	ldr	r0, [r5, #52]	; 0x34
   18e64:	cmp	r0, #1
   18e68:	blt	18ec8 <sav_begin_data+0x10d8>
   18e6c:	mov	r7, #0
   18e70:	ldr	r0, [r5, #48]	; 0x30
   18e74:	ldr	r6, [r0, r7, lsl #2]
   18e78:	mov	r0, r6
   18e7c:	bl	4bd4 <strlen@plt>
   18e80:	cmp	r0, #80	; 0x50
   18e84:	bhi	19048 <sav_begin_data+0x1258>
   18e88:	mov	r4, r0
   18e8c:	mov	r0, r5
   18e90:	mov	r1, r6
   18e94:	mov	r2, r4
   18e98:	bl	4e20 <readstat_write_bytes@plt>
   18e9c:	cmp	r0, #0
   18ea0:	bne	18f2c <sav_begin_data+0x113c>
   18ea4:	rsb	r1, r4, #80	; 0x50
   18ea8:	mov	r0, r5
   18eac:	bl	47e4 <readstat_write_spaces@plt>
   18eb0:	cmp	r0, #0
   18eb4:	bne	18f2c <sav_begin_data+0x113c>
   18eb8:	ldr	r0, [r5, #52]	; 0x34
   18ebc:	add	r7, r7, #1
   18ec0:	cmp	r7, r0
   18ec4:	blt	18e70 <sav_begin_data+0x1080>
   18ec8:	ldr	r0, [pc, #3744]	; 19d70 <sav_begin_data+0x1f80>
   18ecc:	add	r4, sp, #72	; 0x48
   18ed0:	add	r0, pc, r0
   18ed4:	vld1.64	{d16-d17}, [r0]
   18ed8:	mov	r0, #1
   18edc:	vst1.64	{d16-d17}, [r4]
   18ee0:	add	r1, pc, #664	; 0x298
   18ee4:	str	r0, [sp, #144]	; 0x90
   18ee8:	str	r0, [sp, #148]	; 0x94
   18eec:	mov	r0, #28
   18ef0:	vld1.64	{d16-d17}, [r1]
   18ef4:	vst1.32	{d16-d17}, [r8], r0
   18ef8:	bl	48b0 <machine_is_little_endian@plt>
   18efc:	movw	r1, #65001	; 0xfde9
   18f00:	cmp	r0, #0
   18f04:	mov	r0, r5
   18f08:	mov	r2, #16
   18f0c:	str	r1, [r8]
   18f10:	mov	r1, #2
   18f14:	movweq	r1, #1
   18f18:	str	r1, [sp, #152]	; 0x98
   18f1c:	mov	r1, r4
   18f20:	bl	4e20 <readstat_write_bytes@plt>
   18f24:	cmp	r0, #0
   18f28:	beq	18f3c <sav_begin_data+0x114c>
   18f2c:	mov	r6, r0
   18f30:	b	181ec <sav_begin_data+0x3fc>
   18f34:	.word	0x0000d6a8
   18f38:	.word	0x0000d678
   18f3c:	add	r4, sp, #128	; 0x80
   18f40:	mov	r0, r5
   18f44:	mov	r2, #32
   18f48:	mov	r1, r4
   18f4c:	bl	4e20 <readstat_write_bytes@plt>
   18f50:	mov	r6, r0
   18f54:	cmp	r0, #0
   18f58:	bne	181ec <sav_begin_data+0x3fc>
   18f5c:	ldr	r0, [pc, #3600]	; 19d74 <sav_begin_data+0x1f84>
   18f60:	ldr	r5, [sp, #52]	; 0x34
   18f64:	add	r1, sp, #72	; 0x48
   18f68:	mov	r2, #16
   18f6c:	add	r0, pc, r0
   18f70:	vld1.64	{d16-d17}, [r0]
   18f74:	mov	r0, r5
   18f78:	vst1.64	{d16-d17}, [r1]
   18f7c:	bl	4e20 <readstat_write_bytes@plt>
   18f80:	cmp	r0, #0
   18f84:	bne	18f2c <sav_begin_data+0x113c>
   18f88:	add	r0, pc, #512	; 0x200
   18f8c:	mvn	r1, #1048576	; 0x100000
   18f90:	mvn	r2, #1
   18f94:	vld1.64	{d16-d17}, [r0]
   18f98:	mov	r0, r4
   18f9c:	vst1.64	{d16-d17}, [r0]!
   18fa0:	str	r2, [r0]
   18fa4:	str	r1, [r0, #4]
   18fa8:	mov	r0, r5
   18fac:	mov	r1, r4
   18fb0:	mov	r2, #24
   18fb4:	bl	4e20 <readstat_write_bytes@plt>
   18fb8:	mov	r6, r0
   18fbc:	cmp	r0, #0
   18fc0:	bne	181ec <sav_begin_data+0x3fc>
   18fc4:	ldr	r0, [pc, #3500]	; 19d78 <sav_begin_data+0x1f88>
   18fc8:	ldr	r5, [sp, #52]	; 0x34
   18fcc:	add	r0, pc, r0
   18fd0:	vld1.64	{d16-d17}, [r0]
   18fd4:	vst1.64	{d16-d17}, [r4]
   18fd8:	ldr	r0, [r5, #28]
   18fdc:	cmp	r0, #1
   18fe0:	blt	19058 <sav_begin_data+0x1268>
   18fe4:	movw	r7, #2081	; 0x821
   18fe8:	mov	r4, #0
   18fec:	mov	r6, #0
   18ff0:	movt	r7, #8322	; 0x2082
   18ff4:	mov	r0, r5
   18ff8:	mov	r1, r4
   18ffc:	bl	4d48 <readstat_get_variable@plt>
   19000:	ldr	r2, [r0]
   19004:	mov	r1, #1
   19008:	cmp	r2, #0
   1900c:	bne	19028 <sav_begin_data+0x1238>
   19010:	ldr	r0, [r0, #1600]	; 0x640
   19014:	cmp	r0, #256	; 0x100
   19018:	addcs	r0, r0, #251	; 0xfb
   1901c:	lsrcs	r0, r0, #2
   19020:	umullcs	r0, r1, r0, r7
   19024:	lsrcs	r1, r1, #3
   19028:	ldr	r0, [r5, #28]
   1902c:	add	r4, r4, #1
   19030:	add	r6, r1, r6
   19034:	cmp	r4, r0
   19038:	blt	18ff4 <sav_begin_data+0x1204>
   1903c:	add	r0, r6, r6, lsl #1
   19040:	b	1905c <sav_begin_data+0x126c>
   19044:	.word	0x0000d60c
   19048:	mov	r6, #32
   1904c:	b	181ec <sav_begin_data+0x3fc>
   19050:	.word	0x0000d4ef
   19054:	.word	0x0000c455
   19058:	mov	r0, #0
   1905c:	add	r4, sp, #128	; 0x80
   19060:	str	r0, [sp, #140]	; 0x8c
   19064:	mov	r0, r5
   19068:	mov	r2, #16
   1906c:	mov	r1, r4
   19070:	bl	4e20 <readstat_write_bytes@plt>
   19074:	cmp	r0, #0
   19078:	bne	18f2c <sav_begin_data+0x113c>
   1907c:	ldr	r2, [r5, #28]
   19080:	cmp	r2, #0
   19084:	ble	193e4 <sav_begin_data+0x15f4>
   19088:	ldr	r9, [sp, #52]	; 0x34
   1908c:	mov	r6, #0
   19090:	add	r4, sp, #72	; 0x48
   19094:	sub	sl, fp, #72	; 0x48
   19098:	mov	r7, #0
   1909c:	mov	r0, r5
   190a0:	mov	r1, r7
   190a4:	bl	4d48 <readstat_get_variable@plt>
   190a8:	mov	r5, r0
   190ac:	bl	4cf4 <readstat_variable_get_measure@plt>
   190b0:	bl	4a60 <spss_measure_from_readstat_measure@plt>
   190b4:	str	r0, [sp, #72]	; 0x48
   190b8:	mov	r0, r5
   190bc:	bl	4bec <readstat_variable_get_display_width@plt>
   190c0:	cmp	r0, #1
   190c4:	movwlt	r0, #8
   190c8:	str	r0, [fp, #-72]	; 0xffffffb8
   190cc:	mov	r0, r5
   190d0:	bl	4dfc <readstat_variable_get_alignment@plt>
   190d4:	bl	485c <spss_alignment_from_readstat_alignment@plt>
   190d8:	str	r0, [sp, #56]	; 0x38
   190dc:	mov	r8, #1
   190e0:	ldr	r0, [r5]
   190e4:	cmp	r0, #0
   190e8:	bne	1911c <sav_begin_data+0x132c>
   190ec:	ldr	r0, [r5, #1600]	; 0x640
   190f0:	cmp	r0, #256	; 0x100
   190f4:	bcc	1911c <sav_begin_data+0x132c>
   190f8:	add	r1, r0, #251	; 0xfb
   190fc:	movw	r2, #2081	; 0x821
   19100:	mov	r5, #1
   19104:	lsr	r0, r1, #2
   19108:	movt	r2, #8322	; 0x2082
   1910c:	cmp	r1, #252	; 0xfc
   19110:	umull	r2, r0, r0, r2
   19114:	bcc	191a4 <sav_begin_data+0x13b4>
   19118:	lsr	r8, r0, #3
   1911c:	mov	r0, r9
   19120:	mov	r1, r4
   19124:	mov	r2, #4
   19128:	bl	4e20 <readstat_write_bytes@plt>
   1912c:	mov	r5, #0
   19130:	cmp	r0, #0
   19134:	bne	191a0 <sav_begin_data+0x13b0>
   19138:	mov	r0, r9
   1913c:	mov	r1, sl
   19140:	mov	r2, #4
   19144:	bl	4e20 <readstat_write_bytes@plt>
   19148:	cmp	r0, #0
   1914c:	bne	191a0 <sav_begin_data+0x13b0>
   19150:	mov	r0, r9
   19154:	add	r1, sp, #56	; 0x38
   19158:	mov	r2, #4
   1915c:	bl	4e20 <readstat_write_bytes@plt>
   19160:	cmp	r0, #0
   19164:	bne	191a0 <sav_begin_data+0x13b0>
   19168:	subs	r8, r8, #1
   1916c:	bne	1911c <sav_begin_data+0x132c>
   19170:	mov	r5, #1
   19174:	mov	r6, #0
   19178:	b	191a4 <sav_begin_data+0x13b4>
   1917c:	.word	0x0000cf68
   19180:	.word	0x00000014
	...
   1918c:	.word	0xffffffff
   19190:	.word	0xffffffff
   19194:	.word	0xffefffff
   19198:	.word	0xffffffff
   1919c:	.word	0x7fefffff
   191a0:	mov	r6, r0
   191a4:	cmp	r5, #0
   191a8:	ldr	r5, [sp, #52]	; 0x34
   191ac:	beq	191c0 <sav_begin_data+0x13d0>
   191b0:	ldr	r0, [r5, #28]
   191b4:	add	r7, r7, #1
   191b8:	cmp	r7, r0
   191bc:	blt	1909c <sav_begin_data+0x12ac>
   191c0:	cmp	r6, #0
   191c4:	bne	181ec <sav_begin_data+0x3fc>
   191c8:	ldr	r0, [sp, #52]	; 0x34
   191cc:	ldr	r2, [r0, #28]
   191d0:	ldr	r1, [pc, #2984]	; 19d80 <sav_begin_data+0x1f90>
   191d4:	add	r0, sp, #128	; 0x80
   191d8:	add	r1, pc, r1
   191dc:	cmp	r2, #1
   191e0:	vld1.64	{d16-d17}, [r1]
   191e4:	vst1.64	{d16-d17}, [r0]
   191e8:	blt	193f4 <sav_begin_data+0x1604>
   191ec:	ldr	r8, [pc, #2960]	; 19d84 <sav_begin_data+0x1f94>
   191f0:	ldr	r7, [sp, #48]	; 0x30
   191f4:	ldr	r0, [sp, #52]	; 0x34
   191f8:	mov	r4, #0
   191fc:	add	r9, sp, #56	; 0x38
   19200:	add	r8, pc, r8
   19204:	mov	r1, r4
   19208:	bl	4d48 <readstat_get_variable@plt>
   1920c:	mov	r5, r0
   19210:	mov	r0, r9
   19214:	mov	r1, #9
   19218:	mov	r2, r8
   1921c:	mov	r3, r7
   19220:	bl	4c4c <snprintf@plt>
   19224:	mov	r0, r9
   19228:	bl	4bd4 <strlen@plt>
   1922c:	mov	r6, r0
   19230:	add	r0, r5, #8
   19234:	bl	4bd4 <strlen@plt>
   19238:	cmp	r6, #0
   1923c:	cmpne	r0, #0
   19240:	beq	19260 <sav_begin_data+0x1470>
   19244:	ldr	r1, [sp, #140]	; 0x8c
   19248:	cmp	r0, #64	; 0x40
   1924c:	movcs	r0, #64	; 0x40
   19250:	add	r0, r6, r0
   19254:	add	r0, r0, r1
   19258:	add	r0, r0, #2
   1925c:	str	r0, [sp, #140]	; 0x8c
   19260:	ldr	r0, [sp, #52]	; 0x34
   19264:	add	r4, r4, #1
   19268:	add	r7, r7, #15
   1926c:	ldr	r2, [r0, #28]
   19270:	cmp	r4, r2
   19274:	blt	19204 <sav_begin_data+0x1414>
   19278:	ldr	r1, [sp, #140]	; 0x8c
   1927c:	cmp	r1, #1
   19280:	blt	193f4 <sav_begin_data+0x1604>
   19284:	sub	r0, r1, #1
   19288:	add	r1, sp, #128	; 0x80
   1928c:	mov	r2, #16
   19290:	str	r0, [sp, #140]	; 0x8c
   19294:	ldr	r0, [sp, #52]	; 0x34
   19298:	bl	4e20 <readstat_write_bytes@plt>
   1929c:	cmp	r0, #0
   192a0:	bne	18f2c <sav_begin_data+0x113c>
   192a4:	ldr	r0, [sp, #52]	; 0x34
   192a8:	ldr	r2, [r0, #28]
   192ac:	cmp	r2, #1
   192b0:	blt	193f4 <sav_begin_data+0x1604>
   192b4:	ldr	sl, [sp, #48]	; 0x30
   192b8:	mov	r8, #1
   192bc:	mov	r6, #0
   192c0:	mov	r9, #0
   192c4:	ldr	r0, [sp, #52]	; 0x34
   192c8:	mov	r1, r9
   192cc:	bl	4d48 <readstat_get_variable@plt>
   192d0:	ldr	r2, [pc, #2736]	; 19d88 <sav_begin_data+0x1f98>
   192d4:	mov	r5, r0
   192d8:	sub	r0, fp, #72	; 0x48
   192dc:	mov	r1, #9
   192e0:	mov	r3, sl
   192e4:	add	r2, pc, r2
   192e8:	bl	4c4c <snprintf@plt>
   192ec:	add	r5, r5, #8
   192f0:	mov	r0, r5
   192f4:	bl	4bd4 <strlen@plt>
   192f8:	mov	r7, r0
   192fc:	mov	r0, #61	; 0x3d
   19300:	strb	r0, [sp, #72]	; 0x48
   19304:	mov	r0, #9
   19308:	cmp	r7, #0
   1930c:	strb	r0, [sp, #56]	; 0x38
   19310:	beq	193a8 <sav_begin_data+0x15b8>
   19314:	cmp	r7, #64	; 0x40
   19318:	movcs	r7, #64	; 0x40
   1931c:	cmp	r8, #0
   19320:	beq	19378 <sav_begin_data+0x1588>
   19324:	ldr	r0, [sp, #52]	; 0x34
   19328:	sub	r1, fp, #72	; 0x48
   1932c:	bl	4b38 <readstat_write_string@plt>
   19330:	mov	r4, #0
   19334:	cmp	r0, #0
   19338:	bne	19370 <sav_begin_data+0x1580>
   1933c:	ldr	r0, [sp, #52]	; 0x34
   19340:	add	r1, sp, #72	; 0x48
   19344:	mov	r2, #1
   19348:	bl	4e20 <readstat_write_bytes@plt>
   1934c:	cmp	r0, #0
   19350:	bne	19370 <sav_begin_data+0x1580>
   19354:	ldr	r0, [sp, #52]	; 0x34
   19358:	mov	r1, r5
   1935c:	mov	r2, r7
   19360:	bl	4e20 <readstat_write_bytes@plt>
   19364:	mov	r4, #0
   19368:	cmp	r0, #0
   1936c:	beq	193a0 <sav_begin_data+0x15b0>
   19370:	mov	r6, r0
   19374:	b	193ac <sav_begin_data+0x15bc>
   19378:	ldr	r0, [sp, #52]	; 0x34
   1937c:	add	r1, sp, #56	; 0x38
   19380:	mov	r2, #1
   19384:	bl	4e20 <readstat_write_bytes@plt>
   19388:	cmp	r0, #0
   1938c:	beq	19324 <sav_begin_data+0x1534>
   19390:	mov	r6, r0
   19394:	mov	r8, #0
   19398:	mov	r4, #0
   1939c:	b	193ac <sav_begin_data+0x15bc>
   193a0:	mov	r8, #0
   193a4:	mov	r6, #0
   193a8:	mov	r4, #1
   193ac:	cmp	r4, #0
   193b0:	beq	193cc <sav_begin_data+0x15dc>
   193b4:	ldr	r0, [sp, #52]	; 0x34
   193b8:	add	r9, r9, #1
   193bc:	add	sl, sl, #15
   193c0:	ldr	r0, [r0, #28]
   193c4:	cmp	r9, r0
   193c8:	blt	192c4 <sav_begin_data+0x14d4>
   193cc:	cmp	r6, #0
   193d0:	bne	181ec <sav_begin_data+0x3fc>
   193d4:	ldr	r0, [sp, #52]	; 0x34
   193d8:	ldr	r2, [r0, #28]
   193dc:	b	193f4 <sav_begin_data+0x1604>
   193e0:	.word	0x0000cb5c
   193e4:	ldr	r1, [pc, #2448]	; 19d7c <sav_begin_data+0x1f8c>
   193e8:	add	r1, pc, r1
   193ec:	vld1.64	{d16-d17}, [r1]
   193f0:	vst1.64	{d16-d17}, [r4]
   193f4:	mov	r1, #2304	; 0x900
   193f8:	cmp	r2, #1
   193fc:	add	r0, sp, #128	; 0x80
   19400:	strh	r1, [fp, #-80]	; 0xffffffb0
   19404:	ldr	r1, [pc, #2432]	; 19d8c <sav_begin_data+0x1f9c>
   19408:	add	r1, pc, r1
   1940c:	vld1.64	{d16-d17}, [r1]
   19410:	vst1.64	{d16-d17}, [r0]
   19414:	blt	195d8 <sav_begin_data+0x17e8>
   19418:	ldr	r9, [pc, #2416]	; 19d90 <sav_begin_data+0x1fa0>
   1941c:	ldr	r6, [sp, #48]	; 0x30
   19420:	ldr	r0, [sp, #52]	; 0x34
   19424:	mov	r4, #0
   19428:	add	sl, sp, #56	; 0x38
   1942c:	movw	r8, #3125	; 0xc35
   19430:	add	r7, sp, #72	; 0x48
   19434:	add	r9, pc, r9
   19438:	mov	r1, r4
   1943c:	bl	4d48 <readstat_get_variable@plt>
   19440:	mov	r5, r0
   19444:	ldr	r0, [r0, #1600]	; 0x640
   19448:	cmp	r0, #256	; 0x100
   1944c:	bcc	194b8 <sav_begin_data+0x16c8>
   19450:	ldr	r2, [pc, #2364]	; 19d94 <sav_begin_data+0x1fa4>
   19454:	mov	r0, sl
   19458:	mov	r1, #9
   1945c:	mov	r3, r6
   19460:	add	r2, pc, r2
   19464:	bl	4c4c <snprintf@plt>
   19468:	ldr	r0, [r5, #1600]	; 0x640
   1946c:	movw	r2, #23237	; 0x5ac5
   19470:	mov	r3, sl
   19474:	movt	r2, #2684	; 0xa7c
   19478:	lsr	r1, r0, #5
   1947c:	umull	r1, r2, r1, r2
   19480:	lsr	r1, r2, #7
   19484:	mov	r2, r9
   19488:	mul	r1, r1, r8
   1948c:	sub	r0, r0, r1, lsl #5
   19490:	mov	r1, #15
   19494:	str	r0, [sp]
   19498:	mov	r0, r7
   1949c:	bl	4c4c <snprintf@plt>
   194a0:	mov	r0, r7
   194a4:	bl	4bd4 <strlen@plt>
   194a8:	ldr	r1, [sp, #140]	; 0x8c
   194ac:	add	r0, r0, r1
   194b0:	add	r0, r0, #2
   194b4:	str	r0, [sp, #140]	; 0x8c
   194b8:	ldr	r0, [sp, #52]	; 0x34
   194bc:	add	r4, r4, #1
   194c0:	add	r6, r6, #15
   194c4:	ldr	r1, [r0, #28]
   194c8:	cmp	r4, r1
   194cc:	blt	19438 <sav_begin_data+0x1648>
   194d0:	ldr	r0, [sp, #140]	; 0x8c
   194d4:	cmp	r0, #0
   194d8:	beq	195d8 <sav_begin_data+0x17e8>
   194dc:	ldr	r0, [sp, #52]	; 0x34
   194e0:	add	r1, sp, #128	; 0x80
   194e4:	mov	r2, #16
   194e8:	bl	4e20 <readstat_write_bytes@plt>
   194ec:	mov	r6, r0
   194f0:	cmp	r0, #0
   194f4:	bne	181ec <sav_begin_data+0x3fc>
   194f8:	ldr	r0, [sp, #52]	; 0x34
   194fc:	ldr	r0, [r0, #28]
   19500:	cmp	r0, #1
   19504:	blt	195d8 <sav_begin_data+0x17e8>
   19508:	ldr	sl, [pc, #2184]	; 19d98 <sav_begin_data+0x1fa8>
   1950c:	ldr	r9, [sp, #48]	; 0x30
   19510:	mov	r4, #0
   19514:	sub	r5, fp, #72	; 0x48
   19518:	add	r7, sp, #72	; 0x48
   1951c:	add	sl, pc, sl
   19520:	ldr	r8, [sp, #52]	; 0x34
   19524:	mov	r1, r4
   19528:	mov	r0, r8
   1952c:	bl	4d48 <readstat_get_variable@plt>
   19530:	mov	r6, r0
   19534:	ldr	r0, [r0, #1600]	; 0x640
   19538:	cmp	r0, #256	; 0x100
   1953c:	bcc	195c4 <sav_begin_data+0x17d4>
   19540:	ldr	r2, [pc, #2132]	; 19d9c <sav_begin_data+0x1fac>
   19544:	mov	r0, r5
   19548:	mov	r1, #9
   1954c:	mov	r3, r9
   19550:	add	r2, pc, r2
   19554:	bl	4c4c <snprintf@plt>
   19558:	ldr	r0, [r6, #1600]	; 0x640
   1955c:	movw	r2, #23237	; 0x5ac5
   19560:	mov	r3, r5
   19564:	movt	r2, #2684	; 0xa7c
   19568:	lsr	r1, r0, #5
   1956c:	umull	r1, r2, r1, r2
   19570:	lsr	r1, r2, #7
   19574:	movw	r2, #3125	; 0xc35
   19578:	mul	r1, r1, r2
   1957c:	mov	r2, sl
   19580:	sub	r0, r0, r1, lsl #5
   19584:	mov	r1, #15
   19588:	str	r0, [sp]
   1958c:	mov	r0, r7
   19590:	bl	4c4c <snprintf@plt>
   19594:	mov	r0, r8
   19598:	mov	r1, r7
   1959c:	bl	4b38 <readstat_write_string@plt>
   195a0:	cmp	r0, #0
   195a4:	bne	18f2c <sav_begin_data+0x113c>
   195a8:	ldr	r8, [sp, #52]	; 0x34
   195ac:	sub	r1, fp, #80	; 0x50
   195b0:	mov	r2, #2
   195b4:	mov	r0, r8
   195b8:	bl	4e20 <readstat_write_bytes@plt>
   195bc:	cmp	r0, #0
   195c0:	bne	18f2c <sav_begin_data+0x113c>
   195c4:	ldr	r0, [r8, #28]
   195c8:	add	r4, r4, #1
   195cc:	add	r9, r9, #15
   195d0:	cmp	r4, r0
   195d4:	blt	19520 <sav_begin_data+0x1730>
   195d8:	ldr	r0, [pc, #1984]	; 19da0 <sav_begin_data+0x1fb0>
   195dc:	add	r0, pc, r0
   195e0:	vld1.64	{d16-d17}, [r0]
   195e4:	add	r0, sp, #128	; 0x80
   195e8:	vst1.64	{d16-d17}, [r0]
   195ec:	ldr	r0, [sp, #52]	; 0x34
   195f0:	ldr	r0, [r0, #40]	; 0x28
   195f4:	cmp	r0, #1
   195f8:	blt	1990c <sav_begin_data+0x1b1c>
   195fc:	ldr	r0, [sp, #52]	; 0x34
   19600:	mov	r5, #0
   19604:	mov	r1, #0
   19608:	str	r1, [sp, #44]	; 0x2c
   1960c:	bl	4df0 <readstat_get_label_set@plt>
   19610:	mov	r6, r0
   19614:	bl	19e80 <readstat_label_set_number_short_variables>
   19618:	ldr	sl, [r6, #276]	; 0x114
   1961c:	cmp	r0, sl
   19620:	bge	196b8 <sav_begin_data+0x18c8>
   19624:	cmp	sl, #1
   19628:	blt	196b8 <sav_begin_data+0x18c8>
   1962c:	ldr	r8, [r6, #264]	; 0x108
   19630:	mov	r9, #0
   19634:	mov	r0, r6
   19638:	mov	r1, r9
   1963c:	bl	4e14 <readstat_get_label_set_variable@plt>
   19640:	mov	r4, r0
   19644:	add	r0, r0, #8
   19648:	bl	4bd4 <strlen@plt>
   1964c:	mov	r7, r0
   19650:	mov	r0, r4
   19654:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   19658:	cmp	r0, #9
   1965c:	blt	196ac <sav_begin_data+0x18bc>
   19660:	add	r1, r5, r7
   19664:	cmp	r8, #1
   19668:	add	r5, r1, #12
   1966c:	str	r5, [sp, #140]	; 0x8c
   19670:	blt	196ac <sav_begin_data+0x18bc>
   19674:	add	r4, r0, #8
   19678:	mov	r7, #0
   1967c:	mov	r0, r6
   19680:	mov	r1, r7
   19684:	bl	4e8c <readstat_get_value_label@plt>
   19688:	ldr	r0, [r0, #28]
   1968c:	add	r1, r4, r5
   19690:	add	r7, r7, #1
   19694:	cmp	r0, #120	; 0x78
   19698:	movge	r0, #120	; 0x78
   1969c:	cmp	r8, r7
   196a0:	add	r5, r1, r0
   196a4:	bne	1967c <sav_begin_data+0x188c>
   196a8:	str	r5, [sp, #140]	; 0x8c
   196ac:	add	r9, r9, #1
   196b0:	cmp	r9, sl
   196b4:	bne	19634 <sav_begin_data+0x1844>
   196b8:	ldr	r0, [sp, #52]	; 0x34
   196bc:	ldr	r1, [sp, #44]	; 0x2c
   196c0:	ldr	r2, [r0, #40]	; 0x28
   196c4:	add	r1, r1, #1
   196c8:	cmp	r1, r2
   196cc:	blt	19608 <sav_begin_data+0x1818>
   196d0:	cmp	r5, #0
   196d4:	beq	1990c <sav_begin_data+0x1b1c>
   196d8:	ldr	r0, [sp, #52]	; 0x34
   196dc:	add	r1, sp, #128	; 0x80
   196e0:	mov	r2, #16
   196e4:	bl	4e20 <readstat_write_bytes@plt>
   196e8:	cmp	r0, #0
   196ec:	bne	18f2c <sav_begin_data+0x113c>
   196f0:	ldr	r0, [sp, #52]	; 0x34
   196f4:	ldr	r0, [r0, #40]	; 0x28
   196f8:	cmp	r0, #1
   196fc:	blt	1990c <sav_begin_data+0x1b1c>
   19700:	mov	r8, #0
   19704:	mov	r0, #0
   19708:	str	r0, [sp, #44]	; 0x2c
   1970c:	ldr	r0, [sp, #52]	; 0x34
   19710:	mov	r1, r8
   19714:	bl	4df0 <readstat_get_label_set@plt>
   19718:	mov	r4, r0
   1971c:	bl	19e80 <readstat_label_set_number_short_variables>
   19720:	ldr	r1, [r4, #276]	; 0x114
   19724:	cmp	r0, r1
   19728:	str	r1, [sp, #40]	; 0x28
   1972c:	bge	198d0 <sav_begin_data+0x1ae0>
   19730:	ldr	r0, [r4, #264]	; 0x108
   19734:	str	r0, [sp, #72]	; 0x48
   19738:	ldr	r0, [sp, #40]	; 0x28
   1973c:	cmp	r0, #1
   19740:	blt	198d0 <sav_begin_data+0x1ae0>
   19744:	mov	sl, #0
   19748:	mov	r0, r4
   1974c:	mov	r1, sl
   19750:	bl	4e14 <readstat_get_label_set_variable@plt>
   19754:	add	r5, r0, #8
   19758:	mov	r6, r0
   1975c:	mov	r0, r5
   19760:	bl	4bd4 <strlen@plt>
   19764:	str	r0, [fp, #-72]	; 0xffffffb8
   19768:	mov	r0, r6
   1976c:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   19770:	cmp	r0, #9
   19774:	str	r0, [sp, #56]	; 0x38
   19778:	blt	198c0 <sav_begin_data+0x1ad0>
   1977c:	mov	r1, r0
   19780:	ldr	r0, [sp, #44]	; 0x2c
   19784:	bl	49e8 <realloc@plt>
   19788:	ldr	r2, [sp, #56]	; 0x38
   1978c:	mov	r1, #32
   19790:	str	r0, [sp, #44]	; 0x2c
   19794:	bl	4c70 <memset@plt>
   19798:	ldr	r0, [sp, #52]	; 0x34
   1979c:	sub	r1, fp, #72	; 0x48
   197a0:	mov	r2, #4
   197a4:	bl	4e20 <readstat_write_bytes@plt>
   197a8:	cmp	r0, #0
   197ac:	bne	198ec <sav_begin_data+0x1afc>
   197b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   197b4:	ldr	r0, [sp, #52]	; 0x34
   197b8:	mov	r1, r5
   197bc:	bl	4e20 <readstat_write_bytes@plt>
   197c0:	cmp	r0, #0
   197c4:	bne	198ec <sav_begin_data+0x1afc>
   197c8:	ldr	r0, [sp, #52]	; 0x34
   197cc:	add	r1, sp, #56	; 0x38
   197d0:	mov	r2, #4
   197d4:	bl	4e20 <readstat_write_bytes@plt>
   197d8:	cmp	r0, #0
   197dc:	bne	198ec <sav_begin_data+0x1afc>
   197e0:	ldr	r0, [sp, #52]	; 0x34
   197e4:	add	r1, sp, #72	; 0x48
   197e8:	mov	r2, #4
   197ec:	bl	4e20 <readstat_write_bytes@plt>
   197f0:	cmp	r0, #0
   197f4:	bne	198ec <sav_begin_data+0x1afc>
   197f8:	ldr	r0, [sp, #72]	; 0x48
   197fc:	cmp	r0, #1
   19800:	blt	198c0 <sav_begin_data+0x1ad0>
   19804:	mov	r9, #0
   19808:	mov	r0, r4
   1980c:	mov	r1, r9
   19810:	bl	4e8c <readstat_get_value_label@plt>
   19814:	mov	r5, r0
   19818:	ldr	r7, [r0, #20]
   1981c:	ldr	r0, [r0, #28]
   19820:	add	r1, sp, #56	; 0x38
   19824:	mov	r2, #4
   19828:	cmp	r0, #120	; 0x78
   1982c:	movge	r0, #120	; 0x78
   19830:	str	r0, [fp, #-80]	; 0xffffffb0
   19834:	ldr	r0, [sp, #52]	; 0x34
   19838:	bl	4e20 <readstat_write_bytes@plt>
   1983c:	cmp	r0, #0
   19840:	bne	198ec <sav_begin_data+0x1afc>
   19844:	ldr	r1, [r5, #16]
   19848:	ldr	r0, [sp, #52]	; 0x34
   1984c:	mov	r2, r7
   19850:	bl	4e20 <readstat_write_bytes@plt>
   19854:	cmp	r0, #0
   19858:	bne	198ec <sav_begin_data+0x1afc>
   1985c:	ldr	r0, [sp, #56]	; 0x38
   19860:	cmp	r0, r7
   19864:	ble	19880 <sav_begin_data+0x1a90>
   19868:	sub	r2, r0, r7
   1986c:	ldr	r0, [sp, #52]	; 0x34
   19870:	ldr	r1, [sp, #44]	; 0x2c
   19874:	bl	4e20 <readstat_write_bytes@plt>
   19878:	cmp	r0, #0
   1987c:	bne	198ec <sav_begin_data+0x1afc>
   19880:	ldr	r0, [sp, #52]	; 0x34
   19884:	sub	r1, fp, #80	; 0x50
   19888:	mov	r2, #4
   1988c:	bl	4e20 <readstat_write_bytes@plt>
   19890:	cmp	r0, #0
   19894:	bne	198ec <sav_begin_data+0x1afc>
   19898:	ldr	r1, [r5, #24]
   1989c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   198a0:	ldr	r0, [sp, #52]	; 0x34
   198a4:	bl	4e20 <readstat_write_bytes@plt>
   198a8:	cmp	r0, #0
   198ac:	bne	198ec <sav_begin_data+0x1afc>
   198b0:	ldr	r0, [sp, #72]	; 0x48
   198b4:	add	r9, r9, #1
   198b8:	cmp	r9, r0
   198bc:	blt	19808 <sav_begin_data+0x1a18>
   198c0:	ldr	r0, [sp, #40]	; 0x28
   198c4:	add	sl, sl, #1
   198c8:	cmp	sl, r0
   198cc:	blt	19748 <sav_begin_data+0x1958>
   198d0:	ldr	r0, [sp, #52]	; 0x34
   198d4:	add	r8, r8, #1
   198d8:	ldr	r0, [r0, #40]	; 0x28
   198dc:	cmp	r8, r0
   198e0:	blt	1970c <sav_begin_data+0x191c>
   198e4:	mov	r6, #0
   198e8:	b	198f0 <sav_begin_data+0x1b00>
   198ec:	mov	r6, r0
   198f0:	ldr	r0, [sp, #44]	; 0x2c
   198f4:	cmp	r0, #0
   198f8:	beq	19904 <sav_begin_data+0x1b14>
   198fc:	ldr	r0, [sp, #44]	; 0x2c
   19900:	bl	48bc <free@plt>
   19904:	cmp	r6, #0
   19908:	bne	181ec <sav_begin_data+0x3fc>
   1990c:	ldr	r0, [pc, #1168]	; 19da4 <sav_begin_data+0x1fb4>
   19910:	add	r0, pc, r0
   19914:	vld1.64	{d16-d17}, [r0]
   19918:	add	r0, sp, #128	; 0x80
   1991c:	vst1.64	{d16-d17}, [r0]
   19920:	ldr	r0, [sp, #52]	; 0x34
   19924:	ldr	r5, [r0, #28]
   19928:	cmp	r5, #1
   1992c:	blt	19c68 <sav_begin_data+0x1e78>
   19930:	sub	r0, fp, #72	; 0x48
   19934:	add	r7, sp, #72	; 0x48
   19938:	mov	r4, #0
   1993c:	str	r5, [sp, #40]	; 0x28
   19940:	add	sl, r0, #8
   19944:	add	r8, r7, #8
   19948:	ldr	r0, [sp, #52]	; 0x34
   1994c:	mov	r1, r4
   19950:	bl	4d48 <readstat_get_variable@plt>
   19954:	mov	r6, r0
   19958:	add	r0, r0, #8
   1995c:	bl	4bd4 <strlen@plt>
   19960:	str	r0, [sp, #44]	; 0x2c
   19964:	mov	r0, r6
   19968:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   1996c:	cmp	r0, #9
   19970:	blt	19a34 <sav_begin_data+0x1c44>
   19974:	mov	r0, r6
   19978:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   1997c:	cmp	r0, #1
   19980:	blt	19a34 <sav_begin_data+0x1c44>
   19984:	mov	r5, #0
   19988:	mov	r9, #0
   1998c:	mov	r0, r7
   19990:	mov	r1, r6
   19994:	mov	r2, r5
   19998:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   1999c:	sub	r0, fp, #72	; 0x48
   199a0:	mov	r1, r6
   199a4:	mov	r2, r5
   199a8:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   199ac:	ldrd	r2, [r8]
   199b0:	ldr	r0, [sp, #72]	; 0x48
   199b4:	ldr	r1, [sp, #76]	; 0x4c
   199b8:	bl	4994 <readstat_string_value@plt>
   199bc:	mov	r7, r0
   199c0:	ldrd	r2, [sl]
   199c4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   199c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   199cc:	bl	4994 <readstat_string_value@plt>
   199d0:	cmp	r7, #0
   199d4:	movne	r1, r0
   199d8:	cmpne	r0, #0
   199dc:	beq	199f0 <sav_begin_data+0x1c00>
   199e0:	mov	r0, r7
   199e4:	bl	4808 <strcmp@plt>
   199e8:	cmp	r0, #0
   199ec:	addeq	r9, r9, #1
   199f0:	mov	r0, r6
   199f4:	add	r5, r5, #1
   199f8:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   199fc:	cmp	r5, r0
   19a00:	add	r7, sp, #72	; 0x48
   19a04:	blt	1998c <sav_begin_data+0x1b9c>
   19a08:	ldr	r5, [sp, #40]	; 0x28
   19a0c:	cmp	r9, #0
   19a10:	beq	19a34 <sav_begin_data+0x1c44>
   19a14:	ldr	r1, [sp, #44]	; 0x2c
   19a18:	mov	r0, #4
   19a1c:	orr	r0, r0, r9, lsl #3
   19a20:	add	r0, r1, r0
   19a24:	ldr	r1, [sp, #140]	; 0x8c
   19a28:	add	r0, r0, r1
   19a2c:	add	r0, r0, #5
   19a30:	str	r0, [sp, #140]	; 0x8c
   19a34:	add	r4, r4, #1
   19a38:	cmp	r4, r5
   19a3c:	bne	19948 <sav_begin_data+0x1b58>
   19a40:	ldr	r0, [sp, #140]	; 0x8c
   19a44:	cmp	r0, #0
   19a48:	beq	19c68 <sav_begin_data+0x1e78>
   19a4c:	ldr	r0, [sp, #52]	; 0x34
   19a50:	add	r1, sp, #128	; 0x80
   19a54:	mov	r2, #16
   19a58:	bl	4e20 <readstat_write_bytes@plt>
   19a5c:	mov	r6, r0
   19a60:	cmp	r0, #0
   19a64:	bne	181ec <sav_begin_data+0x3fc>
   19a68:	mov	r7, #0
   19a6c:	ldr	r0, [sp, #52]	; 0x34
   19a70:	mov	r1, r7
   19a74:	bl	4d48 <readstat_get_variable@plt>
   19a78:	add	r4, r0, #8
   19a7c:	mov	r9, r0
   19a80:	mov	r0, r4
   19a84:	bl	4bd4 <strlen@plt>
   19a88:	str	r0, [sp, #56]	; 0x38
   19a8c:	mov	r0, #0
   19a90:	strb	r0, [fp, #-88]	; 0xffffffa8
   19a94:	mov	r0, r9
   19a98:	bl	4ca0 <readstat_variable_get_storage_width@plt>
   19a9c:	cmp	r0, #9
   19aa0:	blt	19c58 <sav_begin_data+0x1e68>
   19aa4:	mov	r0, r9
   19aa8:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19aac:	cmp	r0, #1
   19ab0:	blt	19b38 <sav_begin_data+0x1d48>
   19ab4:	mov	r5, #0
   19ab8:	add	r0, sp, #72	; 0x48
   19abc:	mov	r1, r9
   19ac0:	mov	r2, r5
   19ac4:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   19ac8:	sub	r0, fp, #72	; 0x48
   19acc:	mov	r1, r9
   19ad0:	mov	r2, r5
   19ad4:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   19ad8:	ldrd	r2, [r8]
   19adc:	ldr	r0, [sp, #72]	; 0x48
   19ae0:	ldr	r1, [sp, #76]	; 0x4c
   19ae4:	bl	4994 <readstat_string_value@plt>
   19ae8:	mov	r6, r0
   19aec:	ldrd	r2, [sl]
   19af0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19af4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19af8:	bl	4994 <readstat_string_value@plt>
   19afc:	cmp	r6, #0
   19b00:	movne	r1, r0
   19b04:	cmpne	r0, #0
   19b08:	beq	19b24 <sav_begin_data+0x1d34>
   19b0c:	mov	r0, r6
   19b10:	bl	4808 <strcmp@plt>
   19b14:	cmp	r0, #0
   19b18:	ldrbeq	r0, [fp, #-88]	; 0xffffffa8
   19b1c:	addeq	r0, r0, #1
   19b20:	strbeq	r0, [fp, #-88]	; 0xffffffa8
   19b24:	mov	r0, r9
   19b28:	add	r5, r5, #1
   19b2c:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19b30:	cmp	r5, r0
   19b34:	blt	19ab8 <sav_begin_data+0x1cc8>
   19b38:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   19b3c:	cmp	r0, #0
   19b40:	beq	19c58 <sav_begin_data+0x1e68>
   19b44:	ldr	r0, [sp, #52]	; 0x34
   19b48:	add	r1, sp, #56	; 0x38
   19b4c:	mov	r2, #4
   19b50:	bl	4e20 <readstat_write_bytes@plt>
   19b54:	cmp	r0, #0
   19b58:	bne	18f2c <sav_begin_data+0x113c>
   19b5c:	ldr	r2, [sp, #56]	; 0x38
   19b60:	ldr	r0, [sp, #52]	; 0x34
   19b64:	mov	r1, r4
   19b68:	bl	4e20 <readstat_write_bytes@plt>
   19b6c:	cmp	r0, #0
   19b70:	bne	18f2c <sav_begin_data+0x113c>
   19b74:	ldr	r0, [sp, #52]	; 0x34
   19b78:	sub	r1, fp, #88	; 0x58
   19b7c:	mov	r2, #1
   19b80:	bl	4e20 <readstat_write_bytes@plt>
   19b84:	cmp	r0, #0
   19b88:	bne	18f2c <sav_begin_data+0x113c>
   19b8c:	mov	r0, #8
   19b90:	sub	r1, fp, #80	; 0x50
   19b94:	mov	r2, #4
   19b98:	str	r0, [fp, #-80]	; 0xffffffb0
   19b9c:	ldr	r0, [sp, #52]	; 0x34
   19ba0:	bl	4e20 <readstat_write_bytes@plt>
   19ba4:	cmp	r0, #0
   19ba8:	bne	18f2c <sav_begin_data+0x113c>
   19bac:	mov	r0, r9
   19bb0:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19bb4:	cmp	r0, #1
   19bb8:	blt	19c58 <sav_begin_data+0x1e68>
   19bbc:	mov	r4, #0
   19bc0:	add	r0, sp, #72	; 0x48
   19bc4:	mov	r1, r9
   19bc8:	mov	r2, r4
   19bcc:	bl	4934 <readstat_variable_get_missing_range_lo@plt>
   19bd0:	sub	r0, fp, #72	; 0x48
   19bd4:	mov	r1, r9
   19bd8:	mov	r2, r4
   19bdc:	bl	4d0c <readstat_variable_get_missing_range_hi@plt>
   19be0:	ldrd	r2, [r8]
   19be4:	ldr	r0, [sp, #72]	; 0x48
   19be8:	ldr	r1, [sp, #76]	; 0x4c
   19bec:	bl	4994 <readstat_string_value@plt>
   19bf0:	mov	r5, r0
   19bf4:	ldrd	r2, [sl]
   19bf8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19bfc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   19c00:	bl	4994 <readstat_string_value@plt>
   19c04:	cmp	r5, #0
   19c08:	movne	r1, r0
   19c0c:	cmpne	r0, #0
   19c10:	bne	19c2c <sav_begin_data+0x1e3c>
   19c14:	mov	r0, r9
   19c18:	add	r4, r4, #1
   19c1c:	bl	4cdc <readstat_variable_get_missing_ranges_count@plt>
   19c20:	cmp	r4, r0
   19c24:	blt	19bc0 <sav_begin_data+0x1dd0>
   19c28:	b	19c58 <sav_begin_data+0x1e68>
   19c2c:	mov	r0, r5
   19c30:	bl	4808 <strcmp@plt>
   19c34:	cmp	r0, #0
   19c38:	bne	19c14 <sav_begin_data+0x1e24>
   19c3c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   19c40:	ldr	r0, [sp, #52]	; 0x34
   19c44:	mov	r1, r5
   19c48:	bl	4f10 <readstat_write_space_padded_string@plt>
   19c4c:	cmp	r0, #0
   19c50:	beq	19c14 <sav_begin_data+0x1e24>
   19c54:	b	18f2c <sav_begin_data+0x113c>
   19c58:	ldr	r0, [sp, #40]	; 0x28
   19c5c:	add	r7, r7, #1
   19c60:	cmp	r7, r0
   19c64:	blt	19a6c <sav_begin_data+0x1c7c>
   19c68:	ldr	r0, [pc, #312]	; 19da8 <sav_begin_data+0x1fb8>
   19c6c:	add	r1, sp, #128	; 0x80
   19c70:	add	r0, pc, r0
   19c74:	vld1.64	{d16-d17}, [r0]
   19c78:	mov	r0, #0
   19c7c:	str	r0, [sp, #76]	; 0x4c
   19c80:	mov	r0, #1
   19c84:	str	r0, [sp, #72]	; 0x48
   19c88:	ldr	r0, [sp, #52]	; 0x34
   19c8c:	vst1.64	{d16-d17}, [r1]
   19c90:	ldr	r2, [r0, #80]	; 0x50
   19c94:	str	r2, [fp, #-72]	; 0xffffffb8
   19c98:	asr	r2, r2, #31
   19c9c:	str	r2, [fp, #-68]	; 0xffffffbc
   19ca0:	mov	r2, #16
   19ca4:	bl	4e20 <readstat_write_bytes@plt>
   19ca8:	mov	r6, r0
   19cac:	cmp	r0, #0
   19cb0:	bne	19ce4 <sav_begin_data+0x1ef4>
   19cb4:	ldr	r0, [sp, #52]	; 0x34
   19cb8:	add	r1, sp, #72	; 0x48
   19cbc:	mov	r2, #8
   19cc0:	bl	4e20 <readstat_write_bytes@plt>
   19cc4:	mov	r6, r0
   19cc8:	cmp	r0, #0
   19ccc:	bne	19ce4 <sav_begin_data+0x1ef4>
   19cd0:	ldr	r0, [sp, #52]	; 0x34
   19cd4:	sub	r1, fp, #72	; 0x48
   19cd8:	mov	r2, #8
   19cdc:	bl	4e20 <readstat_write_bytes@plt>
   19ce0:	mov	r6, r0
   19ce4:	cmp	r6, #0
   19ce8:	bne	181ec <sav_begin_data+0x3fc>
   19cec:	mov	r0, #0
   19cf0:	add	r1, sp, #128	; 0x80
   19cf4:	mov	r2, #8
   19cf8:	str	r0, [sp, #132]	; 0x84
   19cfc:	movw	r0, #999	; 0x3e7
   19d00:	str	r0, [sp, #128]	; 0x80
   19d04:	ldr	r0, [sp, #52]	; 0x34
   19d08:	bl	4e20 <readstat_write_bytes@plt>
   19d0c:	mov	r6, r0
   19d10:	ldr	r0, [sp, #48]	; 0x30
   19d14:	bl	48bc <free@plt>
   19d18:	cmp	r6, #0
   19d1c:	bne	181f4 <sav_begin_data+0x404>
   19d20:	ldr	r4, [sp, #52]	; 0x34
   19d24:	ldr	r0, [r4, #76]	; 0x4c
   19d28:	bl	49c4 <sav_compressed_row_bound@plt>
   19d2c:	ldr	r1, [r4, #16]
   19d30:	cmp	r1, #2
   19d34:	beq	19d54 <sav_begin_data+0x1f64>
   19d38:	cmp	r1, #1
   19d3c:	bne	19d4c <sav_begin_data+0x1f5c>
   19d40:	bl	4bf8 <readstat_malloc@plt>
   19d44:	ldr	r1, [sp, #52]	; 0x34
   19d48:	str	r0, [r1, #300]	; 0x12c
   19d4c:	mov	r6, #0
   19d50:	b	181f4 <sav_begin_data+0x404>
   19d54:	ldr	r4, [sp, #52]	; 0x34
   19d58:	mov	r3, #0
   19d5c:	mov	r6, #0
   19d60:	ldr	r2, [r4, #4]
   19d64:	bl	4a9c <zsav_ctx_init@plt>
   19d68:	str	r0, [r4, #300]	; 0x12c
   19d6c:	b	181f4 <sav_begin_data+0x404>
   19d70:	.word	0x0000c7c0
   19d74:	.word	0x0000c734
   19d78:	.word	0x0000c6e4
   19d7c:	.word	0x0000c2d8
   19d80:	.word	0x0000c4e8
   19d84:	.word	0x0000bfec
   19d88:	.word	0x0000bf08
   19d8c:	.word	0x0000c2c8
   19d90:	.word	0x0000c1e3
   19d94:	.word	0x0000bd8c
   19d98:	.word	0x0000c0fb
   19d9c:	.word	0x0000bc9c
   19da0:	.word	0x0000c104
   19da4:	.word	0x0000bde0
   19da8:	.word	0x0000ba90

00019dac <sav_write_compressed_row>:
   19dac:	push	{r4, r5, fp, lr}
   19db0:	add	fp, sp, #8
   19db4:	ldr	r5, [r0, #300]	; 0x12c
   19db8:	mov	r4, r0
   19dbc:	mov	r3, r4
   19dc0:	mov	r0, r5
   19dc4:	bl	4e2c <sav_compress_row@plt>
   19dc8:	mov	r2, r0
   19dcc:	mov	r0, r4
   19dd0:	mov	r1, r5
   19dd4:	pop	{r4, r5, fp, lr}
   19dd8:	b	4e20 <readstat_write_bytes@plt>

00019ddc <sav_emit_blank_variable_records>:
   19ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19de0:	add	fp, sp, #28
   19de4:	sub	sp, sp, #36	; 0x24
   19de8:	mov	r4, r0
   19dec:	mov	r0, #2
   19df0:	movw	sl, #7425	; 0x1d01
   19df4:	movw	r9, #8224	; 0x2020
   19df8:	mvn	r7, r1
   19dfc:	mov	r8, #0
   19e00:	str	r0, [sp, #32]
   19e04:	add	r0, sp, #4
   19e08:	movt	sl, #1
   19e0c:	movt	r9, #8224	; 0x2020
   19e10:	add	r6, r0, #4
   19e14:	add	r5, r0, #20
   19e18:	adds	r7, r7, #1
   19e1c:	beq	19e74 <sav_emit_blank_variable_records+0x98>
   19e20:	mov	r0, r4
   19e24:	add	r1, sp, #32
   19e28:	mov	r2, #4
   19e2c:	bl	4e20 <readstat_write_bytes@plt>
   19e30:	cmp	r0, #0
   19e34:	bne	19e78 <sav_emit_blank_variable_records+0x9c>
   19e38:	mvn	r0, #0
   19e3c:	str	r8, [r6]
   19e40:	str	r8, [r6, #4]
   19e44:	str	r9, [r5]
   19e48:	str	r9, [r5, #4]
   19e4c:	str	sl, [sp, #20]
   19e50:	add	r1, sp, #4
   19e54:	mov	r2, #28
   19e58:	str	r0, [sp, #4]
   19e5c:	mov	r0, r4
   19e60:	str	sl, [sp, #16]
   19e64:	bl	4e20 <readstat_write_bytes@plt>
   19e68:	cmp	r0, #0
   19e6c:	beq	19e18 <sav_emit_blank_variable_records+0x3c>
   19e70:	b	19e78 <sav_emit_blank_variable_records+0x9c>
   19e74:	mov	r0, #0
   19e78:	sub	sp, fp, #28
   19e7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019e80 <readstat_label_set_number_short_variables>:
   19e80:	push	{r4, r5, r6, sl, fp, lr}
   19e84:	add	fp, sp, #16
   19e88:	mov	r4, r0
   19e8c:	ldr	r0, [r0, #276]	; 0x114
   19e90:	mov	r5, #0
   19e94:	cmp	r0, #1
   19e98:	blt	19ec8 <readstat_label_set_number_short_variables+0x48>
   19e9c:	mov	r6, #0
   19ea0:	mov	r0, r4
   19ea4:	mov	r1, r6
   19ea8:	bl	4e14 <readstat_get_label_set_variable@plt>
   19eac:	ldr	r0, [r0, #1596]	; 0x63c
   19eb0:	add	r6, r6, #1
   19eb4:	cmp	r0, #9
   19eb8:	ldr	r0, [r4, #276]	; 0x114
   19ebc:	addcc	r5, r5, #1
   19ec0:	cmp	r6, r0
   19ec4:	blt	19ea0 <readstat_label_set_number_short_variables+0x20>
   19ec8:	mov	r0, r5
   19ecc:	pop	{r4, r5, r6, sl, fp, pc}

00019ed0 <spss_format>:
   19ed0:	push	{r4, sl, fp, lr}
   19ed4:	add	fp, sp, #8
   19ed8:	sub	sp, sp, #8
   19edc:	ldr	lr, [r2]
   19ee0:	mov	ip, #0
   19ee4:	cmp	lr, #41	; 0x29
   19ee8:	bhi	19f54 <spss_format+0x84>
   19eec:	ldr	r3, [pc, #108]	; 19f60 <spss_format+0x90>
   19ef0:	add	r3, pc, r3
   19ef4:	ldrb	r4, [r3, lr, lsl #4]!
   19ef8:	cmp	r4, #0
   19efc:	beq	19f54 <spss_format+0x84>
   19f00:	ldr	ip, [r2, #4]
   19f04:	ldr	r2, [r2, #8]
   19f08:	cmp	lr, #5
   19f0c:	beq	19f30 <spss_format+0x60>
   19f10:	cmp	r2, #0
   19f14:	bne	19f30 <spss_format+0x60>
   19f18:	cmp	ip, #0
   19f1c:	beq	19f44 <spss_format+0x74>
   19f20:	str	ip, [sp]
   19f24:	ldr	r2, [pc, #60]	; 19f68 <spss_format+0x98>
   19f28:	add	r2, pc, r2
   19f2c:	b	19f4c <spss_format+0x7c>
   19f30:	str	ip, [sp]
   19f34:	str	r2, [sp, #4]
   19f38:	ldr	r2, [pc, #36]	; 19f64 <spss_format+0x94>
   19f3c:	add	r2, pc, r2
   19f40:	b	19f4c <spss_format+0x7c>
   19f44:	ldr	r2, [pc, #32]	; 19f6c <spss_format+0x9c>
   19f48:	add	r2, pc, r2
   19f4c:	bl	4c4c <snprintf@plt>
   19f50:	mov	ip, #1
   19f54:	mov	r0, ip
   19f58:	sub	sp, fp, #8
   19f5c:	pop	{r4, sl, fp, pc}
   19f60:	.word	0x0002bb6c
   19f64:	.word	0x0000a6be
   19f68:	.word	0x0000a6da
   19f6c:	.word	0x0000b2a4

00019f70 <spss_varinfo_compare>:
   19f70:	ldr	r2, [r0]
   19f74:	ldr	r0, [r1]
   19f78:	ldr	r1, [r0, #12]
   19f7c:	mov	r0, #0
   19f80:	cmp	r2, r1
   19f84:	movwgt	r0, #1
   19f88:	mvnlt	r0, #0
   19f8c:	bx	lr

00019f90 <spss_varinfo_free>:
   19f90:	cmp	r0, #0
   19f94:	bxeq	lr
   19f98:	push	{r4, sl, fp, lr}
   19f9c:	add	fp, sp, #8
   19fa0:	mov	r4, r0
   19fa4:	ldr	r0, [r0, #264]	; 0x108
   19fa8:	cmp	r0, #0
   19fac:	beq	19fb4 <spss_varinfo_free+0x24>
   19fb0:	bl	48bc <free@plt>
   19fb4:	mov	r0, r4
   19fb8:	pop	{r4, sl, fp, lr}
   19fbc:	b	48bc <free@plt>

00019fc0 <spss_64bit_value>:
   19fc0:	push	{r4, r5, r6, r7, fp, lr}
   19fc4:	add	fp, sp, #16
   19fc8:	vpush	{d8}
   19fcc:	bl	4b98 <readstat_double_value@plt>
   19fd0:	vmov.f64	d8, d0
   19fd4:	bl	49dc <__isinf@plt>
   19fd8:	mov	r1, r0
   19fdc:	mvn	r2, #1048576	; 0x100000
   19fe0:	mvn	r0, #1
   19fe4:	cmp	r1, #0
   19fe8:	beq	1a00c <spss_64bit_value+0x4c>
   19fec:	movw	r1, #65535	; 0xffff
   19ff0:	vcmpe.f64	d8, #0.0
   19ff4:	vmrs	APSR_nzcv, fpscr
   19ff8:	movt	r1, #32751	; 0x7fef
   19ffc:	mvnpl	r0, #0
   1a000:	movmi	r1, r2
   1a004:	vpop	{d8}
   1a008:	pop	{r4, r5, r6, r7, fp, pc}
   1a00c:	adds	r6, r0, #1
   1a010:	vmov.f64	d0, d8
   1a014:	vmov	r4, r5, d8
   1a018:	adc	r7, r2, #0
   1a01c:	bl	4d00 <__isnan@plt>
   1a020:	cmp	r0, #0
   1a024:	movne	r4, r6
   1a028:	movne	r5, r7
   1a02c:	mov	r0, r4
   1a030:	mov	r1, r5
   1a034:	vpop	{d8}
   1a038:	pop	{r4, r5, r6, r7, fp, pc}

0001a03c <spss_missingness_for_info>:
   1a03c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a040:	add	fp, sp, #28
   1a044:	sub	sp, sp, #4
   1a048:	vpush	{d8}
   1a04c:	sub	sp, sp, #8
   1a050:	mov	r8, r1
   1a054:	mov	r1, #0
   1a058:	mov	r2, #520	; 0x208
   1a05c:	mov	sl, r0
   1a060:	bl	4c70 <memset@plt>
   1a064:	ldr	r0, [r8, #56]	; 0x38
   1a068:	cmp	r0, #0
   1a06c:	beq	1a0a0 <spss_missingness_for_info+0x64>
   1a070:	mov	r0, #1
   1a074:	str	r0, [sl, #512]	; 0x200
   1a078:	ldr	r6, [r8]
   1a07c:	cmp	r6, #5
   1a080:	bne	1a138 <spss_missingness_for_info+0xfc>
   1a084:	vldr	d8, [r8, #64]	; 0x40
   1a088:	vorr	d0, d8, d8
   1a08c:	vstr	d8, [sp]
   1a090:	bl	4d00 <__isnan@plt>
   1a094:	and	r1, r0, #1
   1a098:	mov	r0, #5
   1a09c:	b	1a14c <spss_missingness_for_info+0x110>
   1a0a0:	ldr	r6, [r8, #52]	; 0x34
   1a0a4:	cmp	r6, #1
   1a0a8:	blt	1a218 <spss_missingness_for_info+0x1dc>
   1a0ac:	str	r6, [sl, #512]	; 0x200
   1a0b0:	mov	r7, r8
   1a0b4:	mov	r2, #0
   1a0b8:	mov	r4, #0
   1a0bc:	ldr	r5, [r7], #88	; 0x58
   1a0c0:	cmp	r5, #5
   1a0c4:	bne	1a0f4 <spss_missingness_for_info+0xb8>
   1a0c8:	add	r0, r8, r4
   1a0cc:	vldr	d8, [r0, #64]	; 0x40
   1a0d0:	vorr	d0, d8, d8
   1a0d4:	vstr	d8, [sp]
   1a0d8:	bl	4d00 <__isnan@plt>
   1a0dc:	and	r0, r0, #1
   1a0e0:	bic	r1, r9, #3
   1a0e4:	mov	r2, #0
   1a0e8:	orr	r9, r0, r1
   1a0ec:	mov	r0, #5
   1a0f0:	b	1a104 <spss_missingness_for_info+0xc8>
   1a0f4:	str	r7, [sp]
   1a0f8:	and	r9, r9, #252	; 0xfc
   1a0fc:	mov	r0, #0
   1a100:	vldr	d8, [sp]
   1a104:	add	r1, sl, r4, lsl #2
   1a108:	add	r7, r7, #33	; 0x21
   1a10c:	add	r4, r4, #8
   1a110:	subs	r6, r6, #1
   1a114:	str	r0, [r1, #24]
   1a118:	vstr	d8, [r1, #16]
   1a11c:	strb	r2, [r1, #28]
   1a120:	strb	r9, [r1, #29]
   1a124:	add	r0, r1, #16
   1a128:	vld1.64	{d16-d17}, [r0]
   1a12c:	vst1.64	{d16-d17}, [r1]
   1a130:	bne	1a0c0 <spss_missingness_for_info+0x84>
   1a134:	b	1a218 <spss_missingness_for_info+0x1dc>
   1a138:	add	r0, r8, #88	; 0x58
   1a13c:	mov	r1, #0
   1a140:	str	r0, [sp]
   1a144:	mov	r0, #0
   1a148:	vldr	d8, [sp]
   1a14c:	str	r0, [sl, #8]
   1a150:	mov	r0, #0
   1a154:	cmp	r6, #5
   1a158:	vstr	d8, [sl]
   1a15c:	strb	r0, [sl, #12]
   1a160:	strb	r1, [sl, #13]
   1a164:	bne	1a184 <spss_missingness_for_info+0x148>
   1a168:	vldr	d8, [r8, #72]	; 0x48
   1a16c:	vorr	d0, d8, d8
   1a170:	vstr	d8, [sp]
   1a174:	bl	4d00 <__isnan@plt>
   1a178:	and	r0, r0, #1
   1a17c:	mov	r1, #5
   1a180:	b	1a194 <spss_missingness_for_info+0x158>
   1a184:	add	r1, r8, #121	; 0x79
   1a188:	str	r1, [sp]
   1a18c:	mov	r1, #0
   1a190:	vldr	d8, [sp]
   1a194:	str	r1, [sl, #24]
   1a198:	mov	r1, #0
   1a19c:	vstr	d8, [sl, #16]
   1a1a0:	strb	r1, [sl, #28]
   1a1a4:	strb	r0, [sl, #29]
   1a1a8:	ldr	r0, [r8, #52]	; 0x34
   1a1ac:	cmp	r0, #3
   1a1b0:	bne	1a218 <spss_missingness_for_info+0x1dc>
   1a1b4:	mov	r0, #2
   1a1b8:	add	r5, sl, #48	; 0x30
   1a1bc:	add	r4, sl, #32
   1a1c0:	cmp	r6, #5
   1a1c4:	str	r0, [sl, #512]	; 0x200
   1a1c8:	bne	1a1e8 <spss_missingness_for_info+0x1ac>
   1a1cc:	vldr	d8, [r8, #80]	; 0x50
   1a1d0:	vorr	d0, d8, d8
   1a1d4:	vstr	d8, [sp]
   1a1d8:	bl	4d00 <__isnan@plt>
   1a1dc:	and	r0, r0, #1
   1a1e0:	mov	r1, #5
   1a1e4:	b	1a1fc <spss_missingness_for_info+0x1c0>
   1a1e8:	add	r0, r8, #154	; 0x9a
   1a1ec:	mov	r1, #0
   1a1f0:	str	r0, [sp]
   1a1f4:	mov	r0, #0
   1a1f8:	vldr	d8, [sp]
   1a1fc:	str	r1, [sl, #56]	; 0x38
   1a200:	mov	r1, #0
   1a204:	vstr	d8, [sl, #48]	; 0x30
   1a208:	strb	r1, [sl, #60]	; 0x3c
   1a20c:	strb	r0, [sl, #61]	; 0x3d
   1a210:	vld1.64	{d16-d17}, [r5]
   1a214:	vst1.64	{d16-d17}, [r4]
   1a218:	sub	sp, fp, #40	; 0x28
   1a21c:	vpop	{d8}
   1a220:	add	sp, sp, #4
   1a224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a228 <spss_init_variable_for_info>:
   1a228:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a22c:	add	fp, sp, #24
   1a230:	sub	sp, sp, #528	; 0x210
   1a234:	mov	r7, r1
   1a238:	mov	r4, r0
   1a23c:	mov	r0, #1
   1a240:	movw	r1, #2152	; 0x868
   1a244:	mov	r6, r2
   1a248:	bl	4778 <calloc@plt>
   1a24c:	ldr	r1, [r4, #8]
   1a250:	str	r7, [r0, #2148]	; 0x864
   1a254:	mov	r5, r0
   1a258:	mov	r2, r4
   1a25c:	ldr	r0, [r4]
   1a260:	strd	r0, [r5]
   1a264:	ldr	r0, [r4, #20]
   1a268:	cmp	r0, #0
   1a26c:	ldreq	r0, [r4, #16]
   1a270:	lsleq	r0, r0, #3
   1a274:	str	r0, [r5, #1596]	; 0x63c
   1a278:	add	r0, r5, #8
   1a27c:	ldrb	r1, [r2, #196]!	; 0xc4
   1a280:	cmp	r1, #0
   1a284:	beq	1a298 <spss_init_variable_for_info+0x70>
   1a288:	str	r6, [sp]
   1a28c:	mov	r1, #300	; 0x12c
   1a290:	mov	r3, #65	; 0x41
   1a294:	b	1a2a8 <spss_init_variable_for_info+0x80>
   1a298:	add	r2, r4, #187	; 0xbb
   1a29c:	mov	r1, #300	; 0x12c
   1a2a0:	mov	r3, #9
   1a2a4:	str	r6, [sp]
   1a2a8:	bl	4c04 <readstat_convert@plt>
   1a2ac:	ldr	r3, [r4, #264]	; 0x108
   1a2b0:	cmp	r3, #0
   1a2b4:	beq	1a2cc <spss_init_variable_for_info+0xa4>
   1a2b8:	ldr	r2, [pc, #100]	; 1a324 <spss_init_variable_for_info+0xfc>
   1a2bc:	add	r0, r5, #564	; 0x234
   1a2c0:	mov	r1, #1024	; 0x400
   1a2c4:	add	r2, pc, r2
   1a2c8:	bl	4c4c <snprintf@plt>
   1a2cc:	add	r0, r5, #308	; 0x134
   1a2d0:	add	r2, r4, #24
   1a2d4:	mov	r1, #256	; 0x100
   1a2d8:	bl	4dd8 <spss_format@plt>
   1a2dc:	add	r6, sp, #8
   1a2e0:	mov	r1, r4
   1a2e4:	mov	r0, r6
   1a2e8:	bl	4eec <spss_missingness_for_info@plt>
   1a2ec:	movw	r0, #1608	; 0x648
   1a2f0:	mov	r1, r6
   1a2f4:	mov	r2, #520	; 0x208
   1a2f8:	add	r0, r5, r0
   1a2fc:	bl	4910 <memcpy@plt>
   1a300:	ldr	r0, [r4, #268]	; 0x10c
   1a304:	str	r0, [r5, #2128]	; 0x850
   1a308:	ldr	r0, [r4, #276]	; 0x114
   1a30c:	cmp	r0, #0
   1a310:	ldreq	r0, [r4, #28]
   1a314:	str	r0, [r5, #2136]	; 0x858
   1a318:	mov	r0, r5
   1a31c:	sub	sp, fp, #24
   1a320:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a324:	.word	0x0000af28

0001a328 <spss_measure_from_readstat_measure>:
   1a328:	sub	r1, r0, #1
   1a32c:	cmp	r1, #3
   1a330:	movcs	r0, #0
   1a334:	bx	lr

0001a338 <spss_measure_to_readstat_measure>:
   1a338:	sub	r1, r0, #1
   1a33c:	cmp	r1, #3
   1a340:	movcs	r0, #0
   1a344:	bx	lr

0001a348 <spss_alignment_from_readstat_alignment>:
   1a348:	sub	r1, r0, #2
   1a34c:	cmp	r0, #3
   1a350:	clz	r1, r1
   1a354:	lsr	r1, r1, #5
   1a358:	lsl	r1, r1, #1
   1a35c:	movweq	r1, #1
   1a360:	mov	r0, r1
   1a364:	bx	lr

0001a368 <spss_alignment_to_readstat_alignment>:
   1a368:	cmp	r0, #2
   1a36c:	ldrls	r1, [pc, #12]	; 1a380 <spss_alignment_to_readstat_alignment+0x18>
   1a370:	movhi	r0, #0
   1a374:	addls	r1, pc, r1
   1a378:	ldrls	r0, [r1, r0, lsl #2]
   1a37c:	bx	lr
   1a380:	.word	0x0000b39c

0001a384 <spss_format_for_variable>:
   1a384:	push	{r4, r5, fp, lr}
   1a388:	add	fp, sp, #8
   1a38c:	mov	r5, r0
   1a390:	mov	r0, #0
   1a394:	mov	r4, r1
   1a398:	str	r0, [r1]
   1a39c:	str	r0, [r1, #4]
   1a3a0:	str	r0, [r1, #8]
   1a3a4:	ldr	r0, [r5]
   1a3a8:	cmp	r0, #0
   1a3ac:	beq	1a3dc <spss_format_for_variable+0x58>
   1a3b0:	mov	r1, #5
   1a3b4:	bic	r0, r0, #1
   1a3b8:	str	r1, [r4]
   1a3bc:	ldr	r1, [r5, #2136]	; 0x858
   1a3c0:	cmp	r1, #0
   1a3c4:	movweq	r1, #8
   1a3c8:	cmp	r0, #4
   1a3cc:	moveq	r0, #2
   1a3d0:	str	r1, [r4, #4]
   1a3d4:	streq	r0, [r4, #8]
   1a3d8:	b	1a400 <spss_format_for_variable+0x7c>
   1a3dc:	mov	r0, #1
   1a3e0:	str	r0, [r4]
   1a3e4:	ldr	r0, [r5, #2136]	; 0x858
   1a3e8:	cmp	r0, #0
   1a3ec:	bne	1a3fc <spss_format_for_variable+0x78>
   1a3f0:	ldr	r0, [r5, #1600]	; 0x640
   1a3f4:	cmp	r0, #0
   1a3f8:	ldreq	r0, [r5, #1596]	; 0x63c
   1a3fc:	str	r0, [r4, #4]
   1a400:	ldrb	r0, [r5, #308]!	; 0x134
   1a404:	cmp	r0, #0
   1a408:	moveq	r0, #0
   1a40c:	popeq	{r4, r5, fp, pc}
   1a410:	mov	r0, #0
   1a414:	str	r0, [r4, #8]
   1a418:	mov	r0, r5
   1a41c:	bl	4bd4 <strlen@plt>
   1a420:	mov	r1, r0
   1a424:	mov	r0, r5
   1a428:	mov	r2, r4
   1a42c:	bl	491c <spss_parse_format@plt>
   1a430:	cmp	r0, #0
   1a434:	movwne	r0, #11
   1a438:	pop	{r4, r5, fp, pc}

0001a43c <spss_parse_format>:
   1a43c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a440:	add	fp, sp, #28
   1a444:	sub	sp, sp, #8
   1a448:	add	r7, r0, r1
   1a44c:	cmp	r1, #0
   1a450:	str	r7, [sp]
   1a454:	beq	1a830 <spss_parse_format+0x3f4>
   1a458:	mov	r1, #0
   1a45c:	mov	ip, #1
   1a460:	str	r1, [sp, #4]
   1a464:	ldr	r1, [pc, #1604]	; 1aab0 <spss_parse_format+0x674>
   1a468:	add	r1, pc, r1
   1a46c:	ldrb	r5, [r1, ip]
   1a470:	ldr	r1, [pc, #1596]	; 1aab4 <spss_parse_format+0x678>
   1a474:	ldr	r3, [pc, #1596]	; 1aab8 <spss_parse_format+0x67c>
   1a478:	add	r1, pc, r1
   1a47c:	add	r3, pc, r3
   1a480:	cmp	r5, #0
   1a484:	add	r1, r1, ip, lsl #1
   1a488:	ldrsh	r1, [r1]
   1a48c:	add	lr, r3, r1
   1a490:	ldr	r1, [pc, #1572]	; 1aabc <spss_parse_format+0x680>
   1a494:	add	r1, pc, r1
   1a498:	add	r1, r1, ip, lsl #1
   1a49c:	ldrsh	r8, [r1]
   1a4a0:	beq	1a4f4 <spss_parse_format+0xb8>
   1a4a4:	add	sl, lr, r5
   1a4a8:	sub	r1, sl, #1
   1a4ac:	cmp	r1, lr
   1a4b0:	bcc	1a4e8 <spss_parse_format+0xac>
   1a4b4:	ldrb	r7, [r0]
   1a4b8:	mov	r4, lr
   1a4bc:	sub	r9, r1, r4
   1a4c0:	mov	r3, r4
   1a4c4:	ldrb	r6, [r3, r9, asr #1]!
   1a4c8:	cmp	r7, r6
   1a4cc:	bcs	1a4d8 <spss_parse_format+0x9c>
   1a4d0:	sub	r1, r3, #1
   1a4d4:	b	1a4e0 <spss_parse_format+0xa4>
   1a4d8:	bls	1a564 <spss_parse_format+0x128>
   1a4dc:	add	r4, r3, #1
   1a4e0:	cmp	r1, r4
   1a4e4:	bcs	1a4bc <spss_parse_format+0x80>
   1a4e8:	ldr	r7, [sp]
   1a4ec:	add	r8, r5, r8
   1a4f0:	b	1a4f8 <spss_parse_format+0xbc>
   1a4f4:	mov	sl, lr
   1a4f8:	ldr	r1, [pc, #1472]	; 1aac0 <spss_parse_format+0x684>
   1a4fc:	mvn	r5, #1
   1a500:	add	r1, pc, r1
   1a504:	ldrb	ip, [r1, ip]
   1a508:	cmp	ip, #0
   1a50c:	beq	1a570 <spss_parse_format+0x134>
   1a510:	add	r1, sl, ip, lsl #1
   1a514:	sub	r4, r1, #2
   1a518:	cmp	r4, sl
   1a51c:	bcc	1a588 <spss_parse_format+0x14c>
   1a520:	ldrb	r1, [r0]
   1a524:	mov	r7, sl
   1a528:	sub	r3, r4, r7
   1a52c:	and	r6, r5, r3, asr #1
   1a530:	mov	r3, r7
   1a534:	ldrb	r6, [r3, r6]!
   1a538:	cmp	r1, r6
   1a53c:	bcs	1a548 <spss_parse_format+0x10c>
   1a540:	sub	r4, r3, #2
   1a544:	b	1a558 <spss_parse_format+0x11c>
   1a548:	ldrb	r7, [r3, #1]
   1a54c:	cmp	r1, r7
   1a550:	bls	1a57c <spss_parse_format+0x140>
   1a554:	add	r7, r3, #2
   1a558:	cmp	r4, r7
   1a55c:	bcs	1a528 <spss_parse_format+0xec>
   1a560:	b	1a584 <spss_parse_format+0x148>
   1a564:	ldr	r7, [sp]
   1a568:	sub	r1, r8, lr
   1a56c:	add	r8, r1, r3
   1a570:	ldr	r4, [pc, #1356]	; 1aac4 <spss_parse_format+0x688>
   1a574:	add	r4, pc, r4
   1a578:	b	1a594 <spss_parse_format+0x158>
   1a57c:	sub	r1, r3, sl
   1a580:	asr	ip, r1, #1
   1a584:	ldr	r7, [sp]
   1a588:	ldr	r4, [pc, #1336]	; 1aac8 <spss_parse_format+0x68c>
   1a58c:	add	r8, ip, r8
   1a590:	add	r4, pc, r4
   1a594:	ldr	r1, [pc, #1328]	; 1aacc <spss_parse_format+0x690>
   1a598:	add	r1, pc, r1
   1a59c:	ldrb	lr, [r1, r8]
   1a5a0:	ldr	r1, [pc, #1320]	; 1aad0 <spss_parse_format+0x694>
   1a5a4:	add	r1, pc, r1
   1a5a8:	ldrb	r1, [r1, lr]
   1a5ac:	cmp	r1, #0
   1a5b0:	ldrbne	r3, [r4, r1]
   1a5b4:	cmpne	r3, #0
   1a5b8:	beq	1a80c <spss_parse_format+0x3d0>
   1a5bc:	add	r1, r4, r1
   1a5c0:	rsb	r4, r3, #0
   1a5c4:	add	r6, r1, #1
   1a5c8:	ldrb	r1, [r6]
   1a5cc:	cmp	r1, #40	; 0x28
   1a5d0:	bhi	1a800 <spss_parse_format+0x3c4>
   1a5d4:	add	r3, pc, #4
   1a5d8:	ldr	r1, [r3, r1, lsl #2]
   1a5dc:	add	pc, r3, r1
   1a5e0:	.word	0x000000a4
   1a5e4:	.word	0x000000ac
   1a5e8:	.word	0x000000c8
   1a5ec:	.word	0x00000220
   1a5f0:	.word	0x000000d0
   1a5f4:	.word	0x000000d8
   1a5f8:	.word	0x000000e0
   1a5fc:	.word	0x000000e8
   1a600:	.word	0x000000f0
   1a604:	.word	0x000000f8
   1a608:	.word	0x00000100
   1a60c:	.word	0x00000108
   1a610:	.word	0x00000110
   1a614:	.word	0x00000118
   1a618:	.word	0x00000120
   1a61c:	.word	0x00000128
   1a620:	.word	0x00000130
   1a624:	.word	0x00000138
   1a628:	.word	0x00000140
   1a62c:	.word	0x00000148
   1a630:	.word	0x00000154
   1a634:	.word	0x0000015c
   1a638:	.word	0x00000168
   1a63c:	.word	0x00000174
   1a640:	.word	0x00000180
   1a644:	.word	0x00000188
   1a648:	.word	0x00000194
   1a64c:	.word	0x0000019c
   1a650:	.word	0x000001a4
   1a654:	.word	0x000001ac
   1a658:	.word	0x000001b4
   1a65c:	.word	0x000001bc
   1a660:	.word	0x000001c8
   1a664:	.word	0x000001d0
   1a668:	.word	0x000001d8
   1a66c:	.word	0x000001e0
   1a670:	.word	0x000001e8
   1a674:	.word	0x000001f0
   1a678:	.word	0x000001f8
   1a67c:	.word	0x00000204
   1a680:	.word	0x00000210
   1a684:	mov	r1, #0
   1a688:	b	1a6a0 <spss_parse_format+0x264>
   1a68c:	ldr	r3, [sp, #4]
   1a690:	ldrb	r1, [r0]
   1a694:	add	r3, r3, r3, lsl #2
   1a698:	add	r1, r1, r3, lsl #1
   1a69c:	sub	r1, r1, #48	; 0x30
   1a6a0:	str	r1, [sp, #4]
   1a6a4:	b	1a800 <spss_parse_format+0x3c4>
   1a6a8:	ldr	r1, [sp, #4]
   1a6ac:	b	1a7fc <spss_parse_format+0x3c0>
   1a6b0:	mov	r1, #1
   1a6b4:	b	1a7dc <spss_parse_format+0x3a0>
   1a6b8:	mov	r1, #2
   1a6bc:	b	1a7dc <spss_parse_format+0x3a0>
   1a6c0:	mov	r1, #3
   1a6c4:	b	1a7dc <spss_parse_format+0x3a0>
   1a6c8:	mov	r1, #4
   1a6cc:	b	1a7dc <spss_parse_format+0x3a0>
   1a6d0:	mov	r1, #5
   1a6d4:	b	1a7dc <spss_parse_format+0x3a0>
   1a6d8:	mov	r1, #6
   1a6dc:	b	1a7dc <spss_parse_format+0x3a0>
   1a6e0:	mov	r1, #7
   1a6e4:	b	1a7dc <spss_parse_format+0x3a0>
   1a6e8:	mov	r1, #8
   1a6ec:	b	1a7dc <spss_parse_format+0x3a0>
   1a6f0:	mov	r1, #9
   1a6f4:	b	1a7dc <spss_parse_format+0x3a0>
   1a6f8:	mov	r1, #10
   1a6fc:	b	1a7dc <spss_parse_format+0x3a0>
   1a700:	mov	r1, #11
   1a704:	b	1a7dc <spss_parse_format+0x3a0>
   1a708:	mov	r1, #12
   1a70c:	b	1a7dc <spss_parse_format+0x3a0>
   1a710:	mov	r1, #15
   1a714:	b	1a7dc <spss_parse_format+0x3a0>
   1a718:	mov	r1, #16
   1a71c:	b	1a7dc <spss_parse_format+0x3a0>
   1a720:	mov	r1, #17
   1a724:	b	1a7dc <spss_parse_format+0x3a0>
   1a728:	mov	r1, #11
   1a72c:	mov	r3, #20
   1a730:	b	1a7f8 <spss_parse_format+0x3bc>
   1a734:	mov	r1, #21
   1a738:	b	1a7dc <spss_parse_format+0x3a0>
   1a73c:	mov	r1, #20
   1a740:	mov	r3, #22
   1a744:	b	1a7f8 <spss_parse_format+0x3bc>
   1a748:	mov	r1, #19
   1a74c:	mov	r3, #41	; 0x29
   1a750:	b	1a7f8 <spss_parse_format+0x3bc>
   1a754:	mov	r1, #10
   1a758:	mov	r3, #23
   1a75c:	b	1a7f8 <spss_parse_format+0x3bc>
   1a760:	mov	r1, #24
   1a764:	b	1a7dc <spss_parse_format+0x3a0>
   1a768:	mov	r1, #23
   1a76c:	mov	r3, #25
   1a770:	b	1a7f8 <spss_parse_format+0x3bc>
   1a774:	mov	r1, #40	; 0x28
   1a778:	b	1a7dc <spss_parse_format+0x3a0>
   1a77c:	mov	r1, #26
   1a780:	b	1a7dc <spss_parse_format+0x3a0>
   1a784:	mov	r1, #27
   1a788:	b	1a7dc <spss_parse_format+0x3a0>
   1a78c:	mov	r1, #28
   1a790:	b	1a7dc <spss_parse_format+0x3a0>
   1a794:	mov	r1, #29
   1a798:	b	1a7dc <spss_parse_format+0x3a0>
   1a79c:	mov	r1, #10
   1a7a0:	mov	r3, #30
   1a7a4:	b	1a7f8 <spss_parse_format+0x3bc>
   1a7a8:	mov	r1, #31
   1a7ac:	b	1a7dc <spss_parse_format+0x3a0>
   1a7b0:	mov	r1, #32
   1a7b4:	b	1a7dc <spss_parse_format+0x3a0>
   1a7b8:	mov	r1, #33	; 0x21
   1a7bc:	b	1a7dc <spss_parse_format+0x3a0>
   1a7c0:	mov	r1, #34	; 0x22
   1a7c4:	b	1a7dc <spss_parse_format+0x3a0>
   1a7c8:	mov	r1, #35	; 0x23
   1a7cc:	b	1a7dc <spss_parse_format+0x3a0>
   1a7d0:	mov	r1, #36	; 0x24
   1a7d4:	b	1a7dc <spss_parse_format+0x3a0>
   1a7d8:	mov	r1, #37	; 0x25
   1a7dc:	str	r1, [r2]
   1a7e0:	b	1a800 <spss_parse_format+0x3c4>
   1a7e4:	mov	r1, #10
   1a7e8:	mov	r3, #38	; 0x26
   1a7ec:	b	1a7f8 <spss_parse_format+0x3bc>
   1a7f0:	mov	r1, #10
   1a7f4:	mov	r3, #39	; 0x27
   1a7f8:	str	r3, [r2]
   1a7fc:	str	r1, [r2, #4]
   1a800:	add	r6, r6, #1
   1a804:	adds	r4, r4, #1
   1a808:	bne	1a5c8 <spss_parse_format+0x18c>
   1a80c:	ldr	r1, [pc, #704]	; 1aad4 <spss_parse_format+0x698>
   1a810:	cmp	lr, #1
   1a814:	add	r1, pc, r1
   1a818:	ldrb	ip, [r1, lr]
   1a81c:	beq	1aa98 <spss_parse_format+0x65c>
   1a820:	add	r0, r0, #1
   1a824:	cmp	r0, r7
   1a828:	bne	1a464 <spss_parse_format+0x28>
   1a82c:	b	1a83c <spss_parse_format+0x400>
   1a830:	mov	r0, #0
   1a834:	mov	ip, #1
   1a838:	str	r0, [sp, #4]
   1a83c:	ldr	r0, [pc, #660]	; 1aad8 <spss_parse_format+0x69c>
   1a840:	ldr	r3, [pc, #660]	; 1aadc <spss_parse_format+0x6a0>
   1a844:	add	r0, pc, r0
   1a848:	add	r3, pc, r3
   1a84c:	ldrb	r0, [r0, ip]
   1a850:	ldrb	r1, [r3, r0]
   1a854:	cmp	r1, #0
   1a858:	beq	1aa94 <spss_parse_format+0x658>
   1a85c:	add	r0, r3, r0
   1a860:	rsb	r7, r1, #0
   1a864:	add	r0, r0, #1
   1a868:	ldrb	r1, [r0]
   1a86c:	sub	r1, r1, #2
   1a870:	cmp	r1, #38	; 0x26
   1a874:	bhi	1aa84 <spss_parse_format+0x648>
   1a878:	add	r3, pc, #4
   1a87c:	ldr	r1, [r3, r1, lsl #2]
   1a880:	add	pc, r3, r1
   1a884:	.word	0x0000009c
   1a888:	.word	0x000000a4
   1a88c:	.word	0x000000b0
   1a890:	.word	0x000000b8
   1a894:	.word	0x000000c0
   1a898:	.word	0x000000c8
   1a89c:	.word	0x000000d0
   1a8a0:	.word	0x000000d8
   1a8a4:	.word	0x000000e0
   1a8a8:	.word	0x000000e8
   1a8ac:	.word	0x000000f0
   1a8b0:	.word	0x000000f8
   1a8b4:	.word	0x00000100
   1a8b8:	.word	0x00000108
   1a8bc:	.word	0x00000110
   1a8c0:	.word	0x00000118
   1a8c4:	.word	0x00000120
   1a8c8:	.word	0x00000128
   1a8cc:	.word	0x00000134
   1a8d0:	.word	0x0000013c
   1a8d4:	.word	0x00000148
   1a8d8:	.word	0x00000154
   1a8dc:	.word	0x00000160
   1a8e0:	.word	0x00000168
   1a8e4:	.word	0x00000174
   1a8e8:	.word	0x0000017c
   1a8ec:	.word	0x00000184
   1a8f0:	.word	0x0000018c
   1a8f4:	.word	0x00000194
   1a8f8:	.word	0x0000019c
   1a8fc:	.word	0x000001a8
   1a900:	.word	0x000001b0
   1a904:	.word	0x000001b8
   1a908:	.word	0x000001c0
   1a90c:	.word	0x000001c8
   1a910:	.word	0x000001d0
   1a914:	.word	0x000001d8
   1a918:	.word	0x000001e4
   1a91c:	.word	0x000001f0
   1a920:	ldr	r1, [sp, #4]
   1a924:	b	1aa80 <spss_parse_format+0x644>
   1a928:	ldr	r1, [sp, #4]
   1a92c:	str	r1, [r2, #8]
   1a930:	b	1aa84 <spss_parse_format+0x648>
   1a934:	mov	r1, #1
   1a938:	b	1aa60 <spss_parse_format+0x624>
   1a93c:	mov	r1, #2
   1a940:	b	1aa60 <spss_parse_format+0x624>
   1a944:	mov	r1, #3
   1a948:	b	1aa60 <spss_parse_format+0x624>
   1a94c:	mov	r1, #4
   1a950:	b	1aa60 <spss_parse_format+0x624>
   1a954:	mov	r1, #5
   1a958:	b	1aa60 <spss_parse_format+0x624>
   1a95c:	mov	r1, #6
   1a960:	b	1aa60 <spss_parse_format+0x624>
   1a964:	mov	r1, #7
   1a968:	b	1aa60 <spss_parse_format+0x624>
   1a96c:	mov	r1, #8
   1a970:	b	1aa60 <spss_parse_format+0x624>
   1a974:	mov	r1, #9
   1a978:	b	1aa60 <spss_parse_format+0x624>
   1a97c:	mov	r1, #10
   1a980:	b	1aa60 <spss_parse_format+0x624>
   1a984:	mov	r1, #11
   1a988:	b	1aa60 <spss_parse_format+0x624>
   1a98c:	mov	r1, #12
   1a990:	b	1aa60 <spss_parse_format+0x624>
   1a994:	mov	r1, #15
   1a998:	b	1aa60 <spss_parse_format+0x624>
   1a99c:	mov	r1, #16
   1a9a0:	b	1aa60 <spss_parse_format+0x624>
   1a9a4:	mov	r1, #17
   1a9a8:	b	1aa60 <spss_parse_format+0x624>
   1a9ac:	mov	r1, #11
   1a9b0:	mov	r3, #20
   1a9b4:	b	1aa7c <spss_parse_format+0x640>
   1a9b8:	mov	r1, #21
   1a9bc:	b	1aa60 <spss_parse_format+0x624>
   1a9c0:	mov	r1, #20
   1a9c4:	mov	r3, #22
   1a9c8:	b	1aa7c <spss_parse_format+0x640>
   1a9cc:	mov	r1, #19
   1a9d0:	mov	r3, #41	; 0x29
   1a9d4:	b	1aa7c <spss_parse_format+0x640>
   1a9d8:	mov	r1, #10
   1a9dc:	mov	r3, #23
   1a9e0:	b	1aa7c <spss_parse_format+0x640>
   1a9e4:	mov	r1, #24
   1a9e8:	b	1aa60 <spss_parse_format+0x624>
   1a9ec:	mov	r1, #23
   1a9f0:	mov	r3, #25
   1a9f4:	b	1aa7c <spss_parse_format+0x640>
   1a9f8:	mov	r1, #40	; 0x28
   1a9fc:	b	1aa60 <spss_parse_format+0x624>
   1aa00:	mov	r1, #26
   1aa04:	b	1aa60 <spss_parse_format+0x624>
   1aa08:	mov	r1, #27
   1aa0c:	b	1aa60 <spss_parse_format+0x624>
   1aa10:	mov	r1, #28
   1aa14:	b	1aa60 <spss_parse_format+0x624>
   1aa18:	mov	r1, #29
   1aa1c:	b	1aa60 <spss_parse_format+0x624>
   1aa20:	mov	r1, #10
   1aa24:	mov	r3, #30
   1aa28:	b	1aa7c <spss_parse_format+0x640>
   1aa2c:	mov	r1, #31
   1aa30:	b	1aa60 <spss_parse_format+0x624>
   1aa34:	mov	r1, #32
   1aa38:	b	1aa60 <spss_parse_format+0x624>
   1aa3c:	mov	r1, #33	; 0x21
   1aa40:	b	1aa60 <spss_parse_format+0x624>
   1aa44:	mov	r1, #34	; 0x22
   1aa48:	b	1aa60 <spss_parse_format+0x624>
   1aa4c:	mov	r1, #35	; 0x23
   1aa50:	b	1aa60 <spss_parse_format+0x624>
   1aa54:	mov	r1, #36	; 0x24
   1aa58:	b	1aa60 <spss_parse_format+0x624>
   1aa5c:	mov	r1, #37	; 0x25
   1aa60:	str	r1, [r2]
   1aa64:	b	1aa84 <spss_parse_format+0x648>
   1aa68:	mov	r1, #10
   1aa6c:	mov	r3, #38	; 0x26
   1aa70:	b	1aa7c <spss_parse_format+0x640>
   1aa74:	mov	r1, #10
   1aa78:	mov	r3, #39	; 0x27
   1aa7c:	str	r3, [r2]
   1aa80:	str	r1, [r2, #4]
   1aa84:	add	r0, r0, #1
   1aa88:	adds	r7, r7, #1
   1aa8c:	bne	1a868 <spss_parse_format+0x42c>
   1aa90:	ldr	r7, [sp]
   1aa94:	mov	r0, r7
   1aa98:	subs	r0, r0, r7
   1aa9c:	movwne	r0, #5
   1aaa0:	cmp	ip, #67	; 0x43
   1aaa4:	movle	r0, #5
   1aaa8:	sub	sp, fp, #28
   1aaac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aab0:	.word	0x0000b57e
   1aab4:	.word	0x0000b3c2
   1aab8:	.word	0x0000b2a0
   1aabc:	.word	0x0000b47c
   1aac0:	.word	0x0000b551
   1aac4:	.word	0x0000b7c8
   1aac8:	.word	0x0000b7ac
   1aacc:	.word	0x0000b524
   1aad0:	.word	0x0000b708
   1aad4:	.word	0x0000b408
   1aad8:	.word	0x0000b5e0
   1aadc:	.word	0x0000b4f4

0001aae0 <dta_ctx_alloc>:
   1aae0:	push	{r4, sl, fp, lr}
   1aae4:	add	fp, sp, #8
   1aae8:	mov	r4, r0
   1aaec:	mov	r0, #1
   1aaf0:	mov	r1, #544	; 0x220
   1aaf4:	bl	4778 <calloc@plt>
   1aaf8:	cmp	r0, #0
   1aafc:	strne	r4, [r0, #280]	; 0x118
   1ab00:	moveq	r0, #0
   1ab04:	pop	{r4, sl, fp, pc}

0001ab08 <dta_ctx_init>:
   1ab08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ab0c:	add	fp, sp, #24
   1ab10:	ldr	r9, [fp, #12]
   1ab14:	mov	r4, r0
   1ab18:	mov	r8, #24
   1ab1c:	sub	r0, r9, #104	; 0x68
   1ab20:	uxtb	r0, r0
   1ab24:	cmp	r0, #15
   1ab28:	bls	1ab34 <dta_ctx_init+0x2c>
   1ab2c:	mov	r0, r8
   1ab30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ab34:	ldr	r8, [fp, #8]
   1ab38:	mov	r7, r3
   1ab3c:	mov	r5, r2
   1ab40:	mov	r6, r1
   1ab44:	bl	48b0 <machine_is_little_endian@plt>
   1ab48:	cmp	r8, #2
   1ab4c:	mov	r2, #2
   1ab50:	mov	r1, #2
   1ab54:	movweq	r2, #1
   1ab58:	cmp	r0, #0
   1ab5c:	movweq	r1, #1
   1ab60:	str	r2, [r4, #232]	; 0xe8
   1ab64:	str	r9, [r4, #144]	; 0x90
   1ab68:	str	r6, [r4, #148]	; 0x94
   1ab6c:	str	r5, [r4, #152]	; 0x98
   1ab70:	str	r7, [r4, #156]	; 0x9c
   1ab74:	subs	r0, r1, r8
   1ab78:	ldrb	r1, [r4, #192]	; 0xc0
   1ab7c:	movwne	r0, #1
   1ab80:	cmp	r6, #0
   1ab84:	bic	r1, r1, #1
   1ab88:	orr	r0, r1, r0
   1ab8c:	strb	r0, [r4, #192]	; 0xc0
   1ab90:	beq	1abb0 <dta_ctx_init+0xa8>
   1ab94:	mov	r0, r6
   1ab98:	mov	r1, #4
   1ab9c:	bl	49ac <readstat_calloc@plt>
   1aba0:	cmp	r0, #0
   1aba4:	str	r0, [r4, #228]	; 0xe4
   1aba8:	beq	1ac28 <dta_ctx_init+0x120>
   1abac:	ldrb	r0, [r4, #192]	; 0xc0
   1abb0:	ldr	r5, [fp, #20]
   1abb4:	and	r1, r0, #253	; 0xfd
   1abb8:	cmp	r9, #105	; 0x69
   1abbc:	strb	r1, [r4, #192]	; 0xc0
   1abc0:	bcs	1abfc <dta_ctx_init+0xf4>
   1abc4:	mov	r2, #0
   1abc8:	mov	r3, #7
   1abcc:	strb	r2, [r4, #20]
   1abd0:	str	r3, [r4, #80]	; 0x50
   1abd4:	str	r2, [r4, #92]	; 0x5c
   1abd8:	mov	r2, #9
   1abdc:	cmp	r9, #107	; 0x6b
   1abe0:	str	r2, [r4, #76]	; 0x4c
   1abe4:	str	r2, [r4, #84]	; 0x54
   1abe8:	str	r2, [r4, #96]	; 0x60
   1abec:	add	r2, r4, #88	; 0x58
   1abf0:	bhi	1ac88 <dta_ctx_init+0x180>
   1abf4:	mov	r3, #32
   1abf8:	b	1ac8c <dta_ctx_init+0x184>
   1abfc:	cmp	r9, #114	; 0x72
   1ac00:	bcs	1ac30 <dta_ctx_init+0x128>
   1ac04:	mov	r2, #12
   1ac08:	cmp	r9, #110	; 0x6e
   1ac0c:	str	r2, [r4, #80]	; 0x50
   1ac10:	bhi	1ac64 <dta_ctx_init+0x15c>
   1ac14:	mov	r2, #0
   1ac18:	strb	r2, [r4, #20]
   1ac1c:	beq	1ac6c <dta_ctx_init+0x164>
   1ac20:	mov	r2, #2
   1ac24:	b	1abd4 <dta_ctx_init+0xcc>
   1ac28:	mov	r8, #3
   1ac2c:	b	1ab2c <dta_ctx_init+0x24>
   1ac30:	cmp	r9, #117	; 0x75
   1ac34:	bhi	1accc <dta_ctx_init+0x1c4>
   1ac38:	mov	r2, #49	; 0x31
   1ac3c:	str	r2, [r4, #80]	; 0x50
   1ac40:	bne	1ac64 <dta_ctx_init+0x15c>
   1ac44:	mov	r2, #1
   1ac48:	str	r2, [r4, #8]
   1ac4c:	mov	r2, #117	; 0x75
   1ac50:	strb	r2, [r4, #20]
   1ac54:	mov	r2, #4
   1ac58:	str	r2, [r4, #112]	; 0x70
   1ac5c:	str	r2, [r4, #116]	; 0x74
   1ac60:	b	1ac6c <dta_ctx_init+0x164>
   1ac64:	mov	r2, #111	; 0x6f
   1ac68:	strb	r2, [r4, #20]
   1ac6c:	mov	r2, #33	; 0x21
   1ac70:	mov	r3, #4
   1ac74:	str	r2, [r4, #84]	; 0x54
   1ac78:	str	r2, [r4, #76]	; 0x4c
   1ac7c:	str	r3, [r4, #92]	; 0x5c
   1ac80:	str	r2, [r4, #96]	; 0x60
   1ac84:	add	r2, r4, #88	; 0x58
   1ac88:	mov	r3, #81	; 0x51
   1ac8c:	cmp	r9, #104	; 0x68
   1ac90:	str	r3, [r2]
   1ac94:	str	r3, [r4, #4]
   1ac98:	bhi	1ad0c <dta_ctx_init+0x204>
   1ac9c:	mov	r2, #0
   1aca0:	mov	r1, #2
   1aca4:	and	r0, r0, #249	; 0xf9
   1aca8:	str	r2, [r4, #16]
   1acac:	mov	r2, #12
   1acb0:	str	r1, [r4, #100]	; 0x64
   1acb4:	str	r2, [r4, #104]	; 0x68
   1acb8:	str	r1, [r4, #108]	; 0x6c
   1acbc:	mov	r1, #1
   1acc0:	str	r1, [r4, #24]
   1acc4:	strb	r0, [r4, #192]	; 0xc0
   1acc8:	b	1ad54 <dta_ctx_init+0x24c>
   1accc:	add	r3, pc, #604	; 0x25c
   1acd0:	mov	r2, #2
   1acd4:	vld1.64	{d16-d17}, [r3]
   1acd8:	mov	r3, #117	; 0x75
   1acdc:	str	r2, [r4, #8]
   1ace0:	strb	r3, [r4, #20]
   1ace4:	mov	r3, #6
   1ace8:	strd	r2, [r4, #112]	; 0x70
   1acec:	mov	r2, #4
   1acf0:	mov	r3, #129	; 0x81
   1acf4:	str	r2, [r4, #92]	; 0x5c
   1acf8:	movw	r2, #321	; 0x141
   1acfc:	str	r3, [r4, #96]	; 0x60
   1ad00:	str	r2, [r4, #4]
   1ad04:	add	r2, r4, #76	; 0x4c
   1ad08:	vst1.32	{d16-d17}, [r2]
   1ad0c:	mov	r3, #18
   1ad10:	mov	r7, #129	; 0x81
   1ad14:	cmp	r9, #118	; 0x76
   1ad18:	mov	r2, #4
   1ad1c:	str	r3, [r4, #16]
   1ad20:	movwcc	r7, #33	; 0x21
   1ad24:	cmp	r9, #117	; 0x75
   1ad28:	mov	r3, #3
   1ad2c:	str	r2, [r4, #100]	; 0x64
   1ad30:	str	r7, [r4, #104]	; 0x68
   1ad34:	str	r3, [r4, #108]	; 0x6c
   1ad38:	bcs	1ad88 <dta_ctx_init+0x280>
   1ad3c:	mov	r1, #1
   1ad40:	and	r0, r0, #249	; 0xf9
   1ad44:	cmp	r9, #112	; 0x70
   1ad48:	str	r1, [r4, #24]
   1ad4c:	strb	r0, [r4, #192]	; 0xc0
   1ad50:	bhi	1ad98 <dta_ctx_init+0x290>
   1ad54:	movw	r1, #65535	; 0xffff
   1ad58:	mvn	r0, #0
   1ad5c:	movt	r1, #32735	; 0x7fdf
   1ad60:	strd	r0, [r4, #208]	; 0xd0
   1ad64:	movw	r0, #32766	; 0x7ffe
   1ad68:	mvn	r1, #-2130706432	; 0x81000000
   1ad6c:	strh	r0, [r4, #194]	; 0xc2
   1ad70:	mov	r0, #126	; 0x7e
   1ad74:	strb	r0, [r4, #193]	; 0xc1
   1ad78:	mvn	r0, #-2147483647	; 0x80000001
   1ad7c:	str	r0, [r4, #196]	; 0xc4
   1ad80:	str	r1, [r4, #200]	; 0xc8
   1ad84:	b	1add4 <dta_ctx_init+0x2cc>
   1ad88:	mov	r0, #2
   1ad8c:	str	r0, [r4, #24]
   1ad90:	orr	r0, r1, #4
   1ad94:	strb	r0, [r4, #192]	; 0xc0
   1ad98:	movw	r1, #65535	; 0xffff
   1ad9c:	mvn	r2, #0
   1ada0:	orr	r0, r0, #8
   1ada4:	movt	r1, #32735	; 0x7fdf
   1ada8:	str	r2, [r4, #208]	; 0xd0
   1adac:	mvn	r2, #-2130706432	; 0x81000000
   1adb0:	str	r1, [r4, #212]	; 0xd4
   1adb4:	movw	r1, #32740	; 0x7fe4
   1adb8:	strh	r1, [r4, #194]	; 0xc2
   1adbc:	mov	r1, #100	; 0x64
   1adc0:	strb	r1, [r4, #193]	; 0xc1
   1adc4:	mvn	r1, #-2147483621	; 0x8000001b
   1adc8:	str	r1, [r4, #196]	; 0xc4
   1adcc:	str	r2, [r4, #200]	; 0xc8
   1add0:	strb	r0, [r4, #192]	; 0xc0
   1add4:	cmp	r5, #0
   1add8:	beq	1ae34 <dta_ctx_init+0x32c>
   1addc:	ldr	r1, [fp, #16]
   1ade0:	cmp	r1, #0
   1ade4:	bne	1ae1c <dta_ctx_init+0x314>
   1ade8:	cmp	r9, #117	; 0x75
   1adec:	bhi	1adfc <dta_ctx_init+0x2f4>
   1adf0:	ldr	r1, [pc, #328]	; 1af40 <dta_ctx_init+0x438>
   1adf4:	add	r1, pc, r1
   1adf8:	b	1ae1c <dta_ctx_init+0x314>
   1adfc:	ldr	r1, [pc, #320]	; 1af44 <dta_ctx_init+0x43c>
   1ae00:	mov	r0, r5
   1ae04:	add	r1, pc, r1
   1ae08:	bl	4808 <strcmp@plt>
   1ae0c:	cmp	r0, #0
   1ae10:	beq	1af24 <dta_ctx_init+0x41c>
   1ae14:	ldr	r1, [pc, #300]	; 1af48 <dta_ctx_init+0x440>
   1ae18:	add	r1, pc, r1
   1ae1c:	mov	r0, r5
   1ae20:	bl	4b14 <iconv_open@plt>
   1ae24:	mov	r1, r4
   1ae28:	str	r0, [r1, #236]!	; 0xec
   1ae2c:	cmn	r0, #1
   1ae30:	beq	1af14 <dta_ctx_init+0x40c>
   1ae34:	ldr	r1, [r4, #148]	; 0x94
   1ae38:	mov	r0, #2
   1ae3c:	cmp	r9, #119	; 0x77
   1ae40:	movwcc	r0, #1
   1ae44:	add	r1, r1, #1
   1ae48:	lsl	r0, r1, r0
   1ae4c:	str	r0, [r4, #48]	; 0x30
   1ae50:	bl	4bf8 <readstat_malloc@plt>
   1ae54:	mov	r8, #3
   1ae58:	cmp	r0, #0
   1ae5c:	str	r0, [r4, #44]	; 0x2c
   1ae60:	beq	1ab2c <dta_ctx_init+0x24>
   1ae64:	ldr	r1, [r4, #148]	; 0x94
   1ae68:	cmp	r1, #1
   1ae6c:	blt	1af04 <dta_ctx_init+0x3fc>
   1ae70:	lsl	r0, r1, #1
   1ae74:	add	r7, r4, #76	; 0x4c
   1ae78:	str	r0, [r4, #32]
   1ae7c:	ldm	r7, {r2, r3, r7}
   1ae80:	ldr	r6, [r4, #88]	; 0x58
   1ae84:	mul	r2, r2, r1
   1ae88:	str	r2, [r4, #40]	; 0x28
   1ae8c:	mul	r2, r3, r1
   1ae90:	str	r2, [r4, #56]	; 0x38
   1ae94:	mul	r2, r7, r1
   1ae98:	mul	r1, r6, r1
   1ae9c:	str	r2, [r4, #64]	; 0x40
   1aea0:	str	r1, [r4, #72]	; 0x48
   1aea4:	bl	4bf8 <readstat_malloc@plt>
   1aea8:	cmp	r0, #0
   1aeac:	str	r0, [r4, #28]
   1aeb0:	beq	1ab2c <dta_ctx_init+0x24>
   1aeb4:	ldr	r0, [r4, #40]	; 0x28
   1aeb8:	bl	4bf8 <readstat_malloc@plt>
   1aebc:	cmp	r0, #0
   1aec0:	str	r0, [r4, #36]	; 0x24
   1aec4:	beq	1ab2c <dta_ctx_init+0x24>
   1aec8:	ldr	r0, [r4, #56]	; 0x38
   1aecc:	bl	4bf8 <readstat_malloc@plt>
   1aed0:	cmp	r0, #0
   1aed4:	str	r0, [r4, #52]	; 0x34
   1aed8:	beq	1ab2c <dta_ctx_init+0x24>
   1aedc:	ldr	r0, [r4, #64]	; 0x40
   1aee0:	bl	4bf8 <readstat_malloc@plt>
   1aee4:	cmp	r0, #0
   1aee8:	str	r0, [r4, #60]	; 0x3c
   1aeec:	beq	1ab2c <dta_ctx_init+0x24>
   1aef0:	ldr	r0, [r4, #72]	; 0x48
   1aef4:	bl	4bf8 <readstat_malloc@plt>
   1aef8:	cmp	r0, #0
   1aefc:	str	r0, [r4, #68]	; 0x44
   1af00:	beq	1ab2c <dta_ctx_init+0x24>
   1af04:	mov	r0, #1
   1af08:	mov	r8, #0
   1af0c:	str	r0, [r4, #284]	; 0x11c
   1af10:	b	1ab2c <dta_ctx_init+0x24>
   1af14:	mov	r0, #0
   1af18:	mov	r8, #7
   1af1c:	str	r0, [r1]
   1af20:	b	1ab2c <dta_ctx_init+0x24>
   1af24:	mov	r1, r4
   1af28:	ldr	r0, [r1, #236]!	; 0xec
   1af2c:	b	1ae2c <dta_ctx_init+0x324>
   1af30:	.word	0x00000081
   1af34:	.word	0x00000039
   1af38:	.word	0x00000081
   1af3c:	.word	0x00000141
   1af40:	.word	0x0000b09b
   1af44:	.word	0x000093a2
   1af48:	.word	0x0000938e

0001af4c <dta_ctx_free>:
   1af4c:	push	{r4, r5, fp, lr}
   1af50:	add	fp, sp, #8
   1af54:	mov	r4, r0
   1af58:	ldr	r0, [r0, #28]
   1af5c:	cmp	r0, #0
   1af60:	beq	1af68 <dta_ctx_free+0x1c>
   1af64:	bl	48bc <free@plt>
   1af68:	ldr	r0, [r4, #36]	; 0x24
   1af6c:	cmp	r0, #0
   1af70:	beq	1af78 <dta_ctx_free+0x2c>
   1af74:	bl	48bc <free@plt>
   1af78:	ldr	r0, [r4, #44]	; 0x2c
   1af7c:	cmp	r0, #0
   1af80:	beq	1af88 <dta_ctx_free+0x3c>
   1af84:	bl	48bc <free@plt>
   1af88:	ldr	r0, [r4, #52]	; 0x34
   1af8c:	cmp	r0, #0
   1af90:	beq	1af98 <dta_ctx_free+0x4c>
   1af94:	bl	48bc <free@plt>
   1af98:	ldr	r0, [r4, #60]	; 0x3c
   1af9c:	cmp	r0, #0
   1afa0:	beq	1afa8 <dta_ctx_free+0x5c>
   1afa4:	bl	48bc <free@plt>
   1afa8:	ldr	r0, [r4, #68]	; 0x44
   1afac:	cmp	r0, #0
   1afb0:	beq	1afb8 <dta_ctx_free+0x6c>
   1afb4:	bl	48bc <free@plt>
   1afb8:	ldr	r0, [r4, #236]	; 0xec
   1afbc:	cmp	r0, #0
   1afc0:	beq	1afc8 <dta_ctx_free+0x7c>
   1afc4:	bl	47d8 <iconv_close@plt>
   1afc8:	ldr	r0, [r4]
   1afcc:	cmp	r0, #0
   1afd0:	beq	1afd8 <dta_ctx_free+0x8c>
   1afd4:	bl	48bc <free@plt>
   1afd8:	ldr	r0, [r4, #228]	; 0xe4
   1afdc:	cmp	r0, #0
   1afe0:	beq	1b020 <dta_ctx_free+0xd4>
   1afe4:	ldr	r2, [r4, #148]	; 0x94
   1afe8:	cmp	r2, #1
   1afec:	blt	1b01c <dta_ctx_free+0xd0>
   1aff0:	mov	r5, #0
   1aff4:	ldr	r1, [r0, r5, lsl #2]
   1aff8:	cmp	r1, #0
   1affc:	beq	1b010 <dta_ctx_free+0xc4>
   1b000:	mov	r0, r1
   1b004:	bl	48bc <free@plt>
   1b008:	ldr	r2, [r4, #148]	; 0x94
   1b00c:	ldr	r0, [r4, #228]	; 0xe4
   1b010:	add	r5, r5, #1
   1b014:	cmp	r5, r2
   1b018:	blt	1aff4 <dta_ctx_free+0xa8>
   1b01c:	bl	48bc <free@plt>
   1b020:	ldr	r0, [r4, #216]	; 0xd8
   1b024:	cmp	r0, #0
   1b028:	beq	1b058 <dta_ctx_free+0x10c>
   1b02c:	ldr	r1, [r4, #220]	; 0xdc
   1b030:	cmp	r1, #0
   1b034:	beq	1b054 <dta_ctx_free+0x108>
   1b038:	mov	r5, #0
   1b03c:	ldr	r0, [r0, r5, lsl #2]
   1b040:	bl	48bc <free@plt>
   1b044:	ldrd	r0, [r4, #216]	; 0xd8
   1b048:	add	r5, r5, #1
   1b04c:	cmp	r5, r1
   1b050:	bcc	1b03c <dta_ctx_free+0xf0>
   1b054:	bl	48bc <free@plt>
   1b058:	mov	r0, r4
   1b05c:	pop	{r4, r5, fp, lr}
   1b060:	b	48bc <free@plt>

0001b064 <dta_type_info>:
   1b064:	push	{r4, sl, fp, lr}
   1b068:	add	fp, sp, #8
   1b06c:	ldrb	r1, [r1, #20]
   1b070:	cmp	r1, #111	; 0x6f
   1b074:	bne	1b0a8 <dta_type_info+0x44>
   1b078:	sub	ip, r0, #251	; 0xfb
   1b07c:	uxth	r1, ip
   1b080:	cmp	r1, #5
   1b084:	bcs	1b154 <dta_type_info+0xf0>
   1b088:	ldr	r1, [pc, #276]	; 1b1a4 <dta_type_info+0x140>
   1b08c:	mov	r0, #1
   1b090:	uxtah	lr, r0, ip
   1b094:	sxth	r0, ip
   1b098:	mov	ip, #0
   1b09c:	add	r1, pc, r1
   1b0a0:	ldr	r0, [r1, r0, lsl #2]
   1b0a4:	b	1b15c <dta_type_info+0xf8>
   1b0a8:	cmp	r1, #117	; 0x75
   1b0ac:	bne	1b0f4 <dta_type_info+0x90>
   1b0b0:	movw	r1, #65526	; 0xfff6
   1b0b4:	mov	ip, #0
   1b0b8:	sub	r1, r0, r1
   1b0bc:	cmp	r1, #4
   1b0c0:	bhi	1b140 <dta_type_info+0xdc>
   1b0c4:	add	r4, pc, #12
   1b0c8:	mov	r0, #1
   1b0cc:	mov	lr, #1
   1b0d0:	ldr	r1, [r4, r1, lsl #2]
   1b0d4:	add	pc, r4, r1
   1b0d8:	.word	0x00000014
   1b0dc:	.word	0x000000a8
   1b0e0:	.word	0x000000b4
   1b0e4:	.word	0x000000c0
   1b0e8:	.word	0x00000084
   1b0ec:	mov	lr, #5
   1b0f0:	b	1b14c <dta_type_info+0xe8>
   1b0f4:	cmp	r0, #126	; 0x7e
   1b0f8:	bhi	1b138 <dta_type_info+0xd4>
   1b0fc:	sub	r0, r0, #98	; 0x62
   1b100:	uxth	r1, r0
   1b104:	cmp	r1, #11
   1b108:	bcs	1b174 <dta_type_info+0x110>
   1b10c:	sxth	r1, r0
   1b110:	ldr	r0, [pc, #144]	; 1b1a8 <dta_type_info+0x144>
   1b114:	add	r0, pc, r0
   1b118:	ldr	lr, [r0, r1, lsl #2]
   1b11c:	ldr	r0, [pc, #136]	; 1b1ac <dta_type_info+0x148>
   1b120:	ldr	r4, [pc, #136]	; 1b1b0 <dta_type_info+0x14c>
   1b124:	add	r0, pc, r0
   1b128:	add	r4, pc, r4
   1b12c:	ldr	r0, [r0, r1, lsl #2]
   1b130:	ldr	ip, [r4, r1, lsl #2]
   1b134:	b	1b15c <dta_type_info+0xf8>
   1b138:	sub	r0, r0, #127	; 0x7f
   1b13c:	b	1b154 <dta_type_info+0xf0>
   1b140:	cmp	r0, #32768	; 0x8000
   1b144:	bne	1b154 <dta_type_info+0xf0>
   1b148:	mov	lr, #6
   1b14c:	mov	r0, #8
   1b150:	b	1b15c <dta_type_info+0xf8>
   1b154:	mov	ip, #0
   1b158:	mov	lr, #0
   1b15c:	cmp	r2, #0
   1b160:	strne	r0, [r2]
   1b164:	cmp	r3, #0
   1b168:	mov	r0, ip
   1b16c:	strne	lr, [r3]
   1b170:	pop	{r4, sl, fp, pc}
   1b174:	mov	r0, #0
   1b178:	mov	ip, #5
   1b17c:	b	1b158 <dta_type_info+0xf4>
   1b180:	mov	r0, #4
   1b184:	mov	lr, #4
   1b188:	b	1b15c <dta_type_info+0xf8>
   1b18c:	mov	lr, #3
   1b190:	mov	r0, #4
   1b194:	b	1b15c <dta_type_info+0xf8>
   1b198:	mov	r0, #2
   1b19c:	mov	lr, #2
   1b1a0:	b	1b15c <dta_type_info+0xf8>
   1b1a4:	.word	0x0000ae0c
   1b1a8:	.word	0x0000ae14
   1b1ac:	.word	0x0000add4
   1b1b0:	.word	0x0000ada0

0001b1b4 <dta_parse_timestamp>:
   1b1b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1b8:	add	fp, sp, #28
   1b1bc:	sub	sp, sp, #36	; 0x24
   1b1c0:	sub	sp, sp, #1024	; 0x400
   1b1c4:	add	r7, r0, r1
   1b1c8:	cmp	r1, #0
   1b1cc:	str	r3, [sp, #20]
   1b1d0:	str	r1, [sp, #16]
   1b1d4:	str	r7, [sp, #24]
   1b1d8:	beq	1b484 <dta_parse_timestamp+0x2d0>
   1b1dc:	mvn	r8, #1
   1b1e0:	mov	r7, #1
   1b1e4:	mov	lr, #0
   1b1e8:	mov	r9, r0
   1b1ec:	str	r0, [sp, #12]
   1b1f0:	ldr	r0, [pc, #844]	; 1b544 <dta_parse_timestamp+0x390>
   1b1f4:	add	r0, pc, r0
   1b1f8:	ldrb	ip, [r0, r7]
   1b1fc:	ldr	r0, [pc, #836]	; 1b548 <dta_parse_timestamp+0x394>
   1b200:	add	r0, pc, r0
   1b204:	cmp	ip, #0
   1b208:	ldrb	r3, [r0, r7]
   1b20c:	ldr	r0, [pc, #824]	; 1b54c <dta_parse_timestamp+0x398>
   1b210:	ldr	r1, [pc, #824]	; 1b550 <dta_parse_timestamp+0x39c>
   1b214:	add	r0, pc, r0
   1b218:	add	r1, pc, r1
   1b21c:	ldrb	r0, [r0, r7]
   1b220:	add	r5, r1, r0
   1b224:	beq	1b280 <dta_parse_timestamp+0xcc>
   1b228:	add	sl, r5, ip
   1b22c:	str	lr, [sp, #28]
   1b230:	sub	lr, sl, #1
   1b234:	cmp	lr, r5
   1b238:	bcc	1b270 <dta_parse_timestamp+0xbc>
   1b23c:	ldrb	r0, [r9]
   1b240:	mov	r4, r5
   1b244:	sub	r8, lr, r4
   1b248:	mov	r1, r4
   1b24c:	ldrb	r6, [r1, r8, asr #1]!
   1b250:	cmp	r0, r6
   1b254:	bcs	1b260 <dta_parse_timestamp+0xac>
   1b258:	sub	lr, r1, #1
   1b25c:	b	1b268 <dta_parse_timestamp+0xb4>
   1b260:	bls	1b2ec <dta_parse_timestamp+0x138>
   1b264:	add	r4, r1, #1
   1b268:	cmp	lr, r4
   1b26c:	bcs	1b244 <dta_parse_timestamp+0x90>
   1b270:	ldr	lr, [sp, #28]
   1b274:	add	r3, ip, r3
   1b278:	mvn	r8, #1
   1b27c:	b	1b284 <dta_parse_timestamp+0xd0>
   1b280:	mov	sl, r5
   1b284:	ldr	r0, [pc, #712]	; 1b554 <dta_parse_timestamp+0x3a0>
   1b288:	add	r0, pc, r0
   1b28c:	ldrb	r7, [r0, r7]
   1b290:	cmp	r7, #0
   1b294:	beq	1b2fc <dta_parse_timestamp+0x148>
   1b298:	add	r0, sl, r7, lsl #1
   1b29c:	sub	r5, r0, #2
   1b2a0:	cmp	r5, sl
   1b2a4:	bcc	1b310 <dta_parse_timestamp+0x15c>
   1b2a8:	ldrb	r0, [r9]
   1b2ac:	mov	r1, sl
   1b2b0:	sub	r6, r5, r1
   1b2b4:	mov	r4, r1
   1b2b8:	and	r6, r8, r6, asr #1
   1b2bc:	ldrb	r6, [r4, r6]!
   1b2c0:	cmp	r0, r6
   1b2c4:	bcs	1b2d0 <dta_parse_timestamp+0x11c>
   1b2c8:	sub	r5, r4, #2
   1b2cc:	b	1b2e0 <dta_parse_timestamp+0x12c>
   1b2d0:	ldrb	r1, [r4, #1]
   1b2d4:	cmp	r0, r1
   1b2d8:	bls	1b308 <dta_parse_timestamp+0x154>
   1b2dc:	add	r1, r4, #2
   1b2e0:	cmp	r5, r1
   1b2e4:	bcs	1b2b0 <dta_parse_timestamp+0xfc>
   1b2e8:	b	1b310 <dta_parse_timestamp+0x15c>
   1b2ec:	ldr	lr, [sp, #28]
   1b2f0:	sub	r0, r3, r5
   1b2f4:	mvn	r8, #1
   1b2f8:	add	r3, r0, r1
   1b2fc:	ldr	r6, [pc, #596]	; 1b558 <dta_parse_timestamp+0x3a4>
   1b300:	add	r6, pc, r6
   1b304:	b	1b31c <dta_parse_timestamp+0x168>
   1b308:	sub	r0, r4, sl
   1b30c:	asr	r7, r0, #1
   1b310:	ldr	r6, [pc, #580]	; 1b55c <dta_parse_timestamp+0x3a8>
   1b314:	add	r3, r7, r3
   1b318:	add	r6, pc, r6
   1b31c:	ldr	r0, [pc, #572]	; 1b560 <dta_parse_timestamp+0x3ac>
   1b320:	add	r0, pc, r0
   1b324:	ldrb	r3, [r0, r3]
   1b328:	ldr	r0, [pc, #564]	; 1b564 <dta_parse_timestamp+0x3b0>
   1b32c:	add	r0, pc, r0
   1b330:	ldrb	r0, [r0, r3]
   1b334:	cmp	r0, #0
   1b338:	ldrbne	r1, [r6, r0]
   1b33c:	cmpne	r1, #0
   1b340:	beq	1b458 <dta_parse_timestamp+0x2a4>
   1b344:	add	r0, r6, r0
   1b348:	rsb	r5, r1, #0
   1b34c:	add	r7, r0, #1
   1b350:	b	1b36c <dta_parse_timestamp+0x1b8>
   1b354:	movw	r0, #1900	; 0x76c
   1b358:	sub	r0, lr, r0
   1b35c:	str	r0, [r2, #20]
   1b360:	b	1b44c <dta_parse_timestamp+0x298>
   1b364:	str	lr, [r2, #8]
   1b368:	b	1b44c <dta_parse_timestamp+0x298>
   1b36c:	ldrb	r0, [r7]
   1b370:	cmp	r0, #16
   1b374:	bhi	1b44c <dta_parse_timestamp+0x298>
   1b378:	add	r1, pc, #4
   1b37c:	ldr	r0, [r1, r0, lsl #2]
   1b380:	add	pc, r1, r0
   1b384:	.word	0x00000044
   1b388:	.word	0x00000058
   1b38c:	.word	0x00000060
   1b390:	.word	0x00000068
   1b394:	.word	0x00000070
   1b398:	.word	0x00000078
   1b39c:	.word	0x00000080
   1b3a0:	.word	0x00000088
   1b3a4:	.word	0x00000090
   1b3a8:	.word	0x00000098
   1b3ac:	.word	0x000000a0
   1b3b0:	.word	0x000000a8
   1b3b4:	.word	0x000000b0
   1b3b8:	.word	0x000000b8
   1b3bc:	.word	0x000000c0
   1b3c0:	.word	0xffffffd0
   1b3c4:	.word	0xffffffe0
   1b3c8:	ldrb	r0, [r9]
   1b3cc:	add	r1, lr, lr, lsl #2
   1b3d0:	add	r0, r0, r1, lsl #1
   1b3d4:	sub	lr, r0, #48	; 0x30
   1b3d8:	b	1b44c <dta_parse_timestamp+0x298>
   1b3dc:	mov	lr, #0
   1b3e0:	b	1b44c <dta_parse_timestamp+0x298>
   1b3e4:	str	lr, [r2, #12]
   1b3e8:	b	1b44c <dta_parse_timestamp+0x298>
   1b3ec:	mov	r0, #0
   1b3f0:	b	1b448 <dta_parse_timestamp+0x294>
   1b3f4:	mov	r0, #1
   1b3f8:	b	1b448 <dta_parse_timestamp+0x294>
   1b3fc:	mov	r0, #2
   1b400:	b	1b448 <dta_parse_timestamp+0x294>
   1b404:	mov	r0, #3
   1b408:	b	1b448 <dta_parse_timestamp+0x294>
   1b40c:	mov	r0, #4
   1b410:	b	1b448 <dta_parse_timestamp+0x294>
   1b414:	mov	r0, #5
   1b418:	b	1b448 <dta_parse_timestamp+0x294>
   1b41c:	mov	r0, #6
   1b420:	b	1b448 <dta_parse_timestamp+0x294>
   1b424:	mov	r0, #7
   1b428:	b	1b448 <dta_parse_timestamp+0x294>
   1b42c:	mov	r0, #8
   1b430:	b	1b448 <dta_parse_timestamp+0x294>
   1b434:	mov	r0, #9
   1b438:	b	1b448 <dta_parse_timestamp+0x294>
   1b43c:	mov	r0, #10
   1b440:	b	1b448 <dta_parse_timestamp+0x294>
   1b444:	mov	r0, #11
   1b448:	str	r0, [r2, #16]
   1b44c:	add	r7, r7, #1
   1b450:	adds	r5, r5, #1
   1b454:	bne	1b36c <dta_parse_timestamp+0x1b8>
   1b458:	ldr	r0, [pc, #264]	; 1b568 <dta_parse_timestamp+0x3b4>
   1b45c:	cmp	r3, #1
   1b460:	add	r0, pc, r0
   1b464:	ldrb	r7, [r0, r3]
   1b468:	beq	1b4d8 <dta_parse_timestamp+0x324>
   1b46c:	ldr	r0, [sp, #24]
   1b470:	add	r9, r9, #1
   1b474:	cmp	r9, r0
   1b478:	bne	1b1f0 <dta_parse_timestamp+0x3c>
   1b47c:	ldr	r0, [sp, #12]
   1b480:	b	1b48c <dta_parse_timestamp+0x2d8>
   1b484:	mov	r7, #1
   1b488:	mov	lr, #0
   1b48c:	ldr	r1, [pc, #216]	; 1b56c <dta_parse_timestamp+0x3b8>
   1b490:	ldr	r3, [pc, #216]	; 1b570 <dta_parse_timestamp+0x3bc>
   1b494:	add	r1, pc, r1
   1b498:	add	r3, pc, r3
   1b49c:	ldrb	r6, [r1, r7]
   1b4a0:	ldrb	r1, [r3, r6]
   1b4a4:	cmp	r1, #0
   1b4a8:	beq	1b4d0 <dta_parse_timestamp+0x31c>
   1b4ac:	add	r3, r3, r6
   1b4b0:	add	r6, r3, #1
   1b4b4:	rsb	r3, r1, #0
   1b4b8:	ldrb	r1, [r6]
   1b4bc:	add	r6, r6, #1
   1b4c0:	cmp	r1, #17
   1b4c4:	streq	lr, [r2, #4]
   1b4c8:	adds	r3, r3, #1
   1b4cc:	bne	1b4b8 <dta_parse_timestamp+0x304>
   1b4d0:	ldr	r9, [sp, #24]
   1b4d4:	b	1b4dc <dta_parse_timestamp+0x328>
   1b4d8:	ldr	r0, [sp, #12]
   1b4dc:	cmp	r7, #44	; 0x2c
   1b4e0:	blt	1b4f4 <dta_parse_timestamp+0x340>
   1b4e4:	ldr	r2, [sp, #24]
   1b4e8:	mov	r1, #0
   1b4ec:	cmp	r9, r2
   1b4f0:	beq	1b538 <dta_parse_timestamp+0x384>
   1b4f4:	ldr	r4, [sp, #20]
   1b4f8:	cmp	r4, #0
   1b4fc:	beq	1b534 <dta_parse_timestamp+0x380>
   1b500:	ldr	r3, [sp, #16]
   1b504:	str	r0, [sp, #4]
   1b508:	ldr	r5, [fp, #8]
   1b50c:	add	r6, sp, #32
   1b510:	mov	r1, #1024	; 0x400
   1b514:	mov	r0, r6
   1b518:	str	r3, [sp]
   1b51c:	ldr	r2, [pc, #80]	; 1b574 <dta_parse_timestamp+0x3c0>
   1b520:	add	r2, pc, r2
   1b524:	bl	4c4c <snprintf@plt>
   1b528:	mov	r0, r6
   1b52c:	mov	r1, r5
   1b530:	blx	r4
   1b534:	mov	r1, #29
   1b538:	mov	r0, r1
   1b53c:	sub	sp, fp, #28
   1b540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b544:	.word	0x0000ae30
   1b548:	.word	0x0000adf7
   1b54c:	.word	0x0000adb6
   1b550:	.word	0x0000ad3c
   1b554:	.word	0x0000adc9
   1b558:	.word	0x0000ae8f
   1b55c:	.word	0x0000ae77
   1b560:	.word	0x0000ad5e
   1b564:	.word	0x0000ae27
   1b568:	.word	0x0000acb7
   1b56c:	.word	0x0000ad21
   1b570:	.word	0x0000acf7
   1b574:	.word	0x0000acc2

0001b578 <readstat_parse_dta>:
   1b578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b57c:	add	fp, sp, #28
   1b580:	sub	sp, sp, #4
   1b584:	vpush	{d8-d9}
   1b588:	sub	sp, sp, #2192	; 0x890
   1b58c:	ldr	r5, [r0, #32]
   1b590:	mov	r4, r0
   1b594:	mov	r9, r2
   1b598:	mov	r6, r1
   1b59c:	mov	r0, r5
   1b5a0:	bl	4f1c <dta_ctx_alloc@plt>
   1b5a4:	ldr	r2, [r5]
   1b5a8:	ldr	r1, [r5, #20]
   1b5ac:	mov	sl, r0
   1b5b0:	mov	r0, r6
   1b5b4:	blx	r2
   1b5b8:	cmn	r0, #1
   1b5bc:	beq	1b67c <readstat_parse_dta+0x104>
   1b5c0:	ldr	r3, [r5, #12]
   1b5c4:	ldr	r2, [r5, #20]
   1b5c8:	add	r0, sp, #76	; 0x4c
   1b5cc:	mov	r1, #4
   1b5d0:	blx	r3
   1b5d4:	mov	r7, #2
   1b5d8:	cmp	r0, #4
   1b5dc:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b5e0:	ldr	r3, [r5, #8]
   1b5e4:	ldr	r2, [r5, #20]
   1b5e8:	mov	r0, #0
   1b5ec:	mov	r1, #2
   1b5f0:	blx	r3
   1b5f4:	cmn	r0, #1
   1b5f8:	beq	1b684 <readstat_parse_dta+0x10c>
   1b5fc:	ldr	r3, [r5, #8]
   1b600:	ldr	r2, [r5, #20]
   1b604:	mov	r8, r0
   1b608:	mov	r0, #0
   1b60c:	mov	r1, #0
   1b610:	blx	r3
   1b614:	cmn	r0, #1
   1b618:	beq	1b6bc <readstat_parse_dta+0x144>
   1b61c:	ldr	r1, [pc, #4024]	; 1c5dc <readstat_parse_dta+0x1064>
   1b620:	add	r0, sp, #76	; 0x4c
   1b624:	mov	r2, #4
   1b628:	add	r1, pc, r1
   1b62c:	bl	4ebc <strncmp@plt>
   1b630:	cmp	r0, #0
   1b634:	beq	1b6f8 <readstat_parse_dta+0x180>
   1b638:	ldr	r0, [sl, #280]	; 0x118
   1b63c:	mov	r1, #10
   1b640:	ldr	r3, [r0, #12]
   1b644:	ldr	r2, [r0, #20]
   1b648:	add	r0, sp, #104	; 0x68
   1b64c:	blx	r3
   1b650:	cmp	r0, #10
   1b654:	bne	1bcc0 <readstat_parse_dta+0x748>
   1b658:	ldrb	r0, [sp, #105]	; 0x69
   1b65c:	sub	r0, r0, #2
   1b660:	clz	r0, r0
   1b664:	lsr	r7, r0, #5
   1b668:	bl	48b0 <machine_is_little_endian@plt>
   1b66c:	cmp	r0, r7
   1b670:	bne	1b7f0 <readstat_parse_dta+0x278>
   1b674:	ldr	r2, [sp, #110]	; 0x6e
   1b678:	b	1b808 <readstat_parse_dta+0x290>
   1b67c:	mov	r7, #1
   1b680:	b	1bcc4 <readstat_parse_dta+0x74c>
   1b684:	ldr	r2, [sl, #264]	; 0x108
   1b688:	mov	r7, #15
   1b68c:	cmp	r2, #0
   1b690:	beq	1bcc4 <readstat_parse_dta+0x74c>
   1b694:	ldr	r1, [pc, #4068]	; 1c680 <readstat_parse_dta+0x1108>
   1b698:	mov	r0, #14
   1b69c:	add	r1, pc, r1
   1b6a0:	vld1.64	{d16-d17}, [r1], r0
   1b6a4:	add	r0, sl, #288	; 0x120
   1b6a8:	vld1.16	{d18-d19}, [r1]
   1b6ac:	movw	r1, #302	; 0x12e
   1b6b0:	vst1.8	{d16-d17}, [r0]
   1b6b4:	add	r1, sl, r1
   1b6b8:	b	1b6e8 <readstat_parse_dta+0x170>
   1b6bc:	ldr	r2, [sl, #264]	; 0x108
   1b6c0:	mov	r7, #15
   1b6c4:	cmp	r2, #0
   1b6c8:	beq	1bcc4 <readstat_parse_dta+0x74c>
   1b6cc:	ldr	r1, [pc, #4016]	; 1c684 <readstat_parse_dta+0x110c>
   1b6d0:	add	r0, sl, #288	; 0x120
   1b6d4:	add	r1, pc, r1
   1b6d8:	vld1.64	{d16-d17}, [r1]!
   1b6dc:	vld1.64	{d18-d19}, [r1]
   1b6e0:	add	r1, sl, #304	; 0x130
   1b6e4:	vst1.8	{d16-d17}, [r0]
   1b6e8:	vst1.8	{d18-d19}, [r1]
   1b6ec:	ldr	r1, [sl, #276]	; 0x114
   1b6f0:	blx	r2
   1b6f4:	b	1bcc4 <readstat_parse_dta+0x74c>
   1b6f8:	ldr	r1, [pc, #3976]	; 1c688 <readstat_parse_dta+0x1110>
   1b6fc:	mov	r0, sl
   1b700:	add	r1, pc, r1
   1b704:	bl	1da28 <dta_read_tag>
   1b708:	mov	r7, r0
   1b70c:	cmp	r0, #0
   1b710:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b714:	ldr	r1, [pc, #3952]	; 1c68c <readstat_parse_dta+0x1114>
   1b718:	mov	r0, sl
   1b71c:	add	r1, pc, r1
   1b720:	bl	1da28 <dta_read_tag>
   1b724:	mov	r7, r0
   1b728:	cmp	r0, #0
   1b72c:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b730:	ldr	r0, [pc, #3928]	; 1c690 <readstat_parse_dta+0x1118>
   1b734:	sub	r2, fp, #88	; 0x58
   1b738:	mov	r3, #3
   1b73c:	add	r0, pc, r0
   1b740:	str	r0, [sp]
   1b744:	mov	r0, sl
   1b748:	ldr	r1, [pc, #3908]	; 1c694 <readstat_parse_dta+0x111c>
   1b74c:	add	r1, pc, r1
   1b750:	bl	1daac <dta_read_chunk>
   1b754:	mov	r7, r0
   1b758:	cmp	r0, #0
   1b75c:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b760:	ldrb	r0, [fp, #-87]	; 0xffffffa9
   1b764:	ldrb	r6, [fp, #-88]	; 0xffffffa8
   1b768:	add	r2, sp, #80	; 0x50
   1b76c:	mov	r3, #3
   1b770:	str	r0, [sp, #68]	; 0x44
   1b774:	ldrb	r0, [fp, #-86]	; 0xffffffaa
   1b778:	str	r0, [sp, #72]	; 0x48
   1b77c:	ldr	r0, [pc, #4088]	; 1c77c <readstat_parse_dta+0x1204>
   1b780:	add	r0, pc, r0
   1b784:	str	r0, [sp]
   1b788:	mov	r0, sl
   1b78c:	ldr	r1, [pc, #4076]	; 1c780 <readstat_parse_dta+0x1208>
   1b790:	add	r1, pc, r1
   1b794:	bl	1daac <dta_read_chunk>
   1b798:	mov	r7, r0
   1b79c:	cmp	r0, #0
   1b7a0:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b7a4:	ldr	r1, [pc, #4056]	; 1c784 <readstat_parse_dta+0x120c>
   1b7a8:	add	r0, sp, #80	; 0x50
   1b7ac:	mov	r2, #3
   1b7b0:	add	r1, pc, r1
   1b7b4:	bl	4ebc <strncmp@plt>
   1b7b8:	cmp	r0, #0
   1b7bc:	beq	1bd18 <readstat_parse_dta+0x7a0>
   1b7c0:	ldr	r1, [pc, #4088]	; 1c7c0 <readstat_parse_dta+0x1248>
   1b7c4:	add	r0, sp, #80	; 0x50
   1b7c8:	mov	r2, #3
   1b7cc:	add	r1, pc, r1
   1b7d0:	bl	4ebc <strncmp@plt>
   1b7d4:	mov	r7, #5
   1b7d8:	cmp	r0, #0
   1b7dc:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b7e0:	mov	r0, #1
   1b7e4:	str	r0, [sp, #64]	; 0x40
   1b7e8:	mov	r0, #2
   1b7ec:	b	1bd24 <readstat_parse_dta+0x7ac>
   1b7f0:	ldrh	r0, [sp, #108]	; 0x6c
   1b7f4:	bl	48a4 <byteswap2@plt>
   1b7f8:	strh	r0, [sp, #108]	; 0x6c
   1b7fc:	ldr	r0, [sp, #110]	; 0x6e
   1b800:	bl	47b4 <byteswap4@plt>
   1b804:	mov	r2, r0
   1b808:	str	r2, [sp, #110]	; 0x6e
   1b80c:	ldr	r0, [r4, #36]	; 0x24
   1b810:	ldr	r3, [r4, #40]	; 0x28
   1b814:	ldrb	r7, [sp, #104]	; 0x68
   1b818:	ldrb	r6, [sp, #105]	; 0x69
   1b81c:	ldrh	r1, [sp, #108]	; 0x6c
   1b820:	stm	sp, {r6, r7}
   1b824:	str	r0, [sp, #8]
   1b828:	str	r3, [sp, #12]
   1b82c:	mov	r0, sl
   1b830:	mov	r3, #0
   1b834:	bl	4ba4 <dta_ctx_init@plt>
   1b838:	mov	r7, r0
   1b83c:	cmp	r0, #0
   1b840:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b844:	str	r8, [sl, #272]	; 0x110
   1b848:	str	r9, [sl, #276]	; 0x114
   1b84c:	add	r0, r4, #16
   1b850:	mov	r1, #48	; 0x30
   1b854:	mov	r2, r4
   1b858:	add	r8, sl, #240	; 0xf0
   1b85c:	mov	r7, sl
   1b860:	vld1.32	{d16-d17}, [r0]
   1b864:	vld1.32	{d18-d19}, [r2], r1
   1b868:	add	r0, sl, #256	; 0x100
   1b86c:	vst1.32	{d16-d17}, [r0]
   1b870:	vst1.32	{d18-d19}, [r8]
   1b874:	ldr	r0, [r2]
   1b878:	cmp	r0, #0
   1b87c:	ble	1b890 <readstat_parse_dta+0x318>
   1b880:	str	r0, [r7, #176]!	; 0xb0
   1b884:	asr	r1, r0, #31
   1b888:	str	r1, [r7, #4]
   1b88c:	b	1b898 <readstat_parse_dta+0x320>
   1b890:	ldr	r0, [r7, #176]!	; 0xb0
   1b894:	ldr	r1, [r7, #4]
   1b898:	mov	r3, sl
   1b89c:	mov	r6, sl
   1b8a0:	ldr	r2, [r3, #152]!	; 0x98
   1b8a4:	str	r3, [sp, #68]	; 0x44
   1b8a8:	ldr	r3, [r3, #4]
   1b8ac:	subs	r0, r2, r0
   1b8b0:	sbc	r1, r3, r1
   1b8b4:	cmn	r1, #1
   1b8b8:	movle	r0, #0
   1b8bc:	strdle	r2, [r7]
   1b8c0:	movle	r1, #0
   1b8c4:	str	r7, [sp, #64]	; 0x40
   1b8c8:	str	r0, [r6, #168]!	; 0xa8
   1b8cc:	str	r1, [r6, #4]
   1b8d0:	str	r6, [sp, #72]	; 0x48
   1b8d4:	ldr	r2, [r4, #44]	; 0x2c
   1b8d8:	cmp	r2, #1
   1b8dc:	blt	1b900 <readstat_parse_dta+0x388>
   1b8e0:	subs	r3, r2, r0
   1b8e4:	rscs	r3, r1, r2, asr #31
   1b8e8:	bge	1b900 <readstat_parse_dta+0x388>
   1b8ec:	asr	r1, r2, #31
   1b8f0:	mov	r0, r2
   1b8f4:	str	r2, [r6]
   1b8f8:	str	r1, [r6, #4]
   1b8fc:	b	1b90c <readstat_parse_dta+0x394>
   1b900:	subs	r2, r0, #1
   1b904:	sbcs	r2, r1, #0
   1b908:	blt	1b930 <readstat_parse_dta+0x3b8>
   1b90c:	bl	23668 <__aeabi_l2d>
   1b910:	ldrd	r2, [sl, #184]	; 0xb8
   1b914:	vmov	d8, r0, r1
   1b918:	mov	r0, r2
   1b91c:	mov	r1, r3
   1b920:	bl	23668 <__aeabi_l2d>
   1b924:	vmov	d16, r0, r1
   1b928:	vdiv.f64	d0, d16, d8
   1b92c:	b	1b934 <readstat_parse_dta+0x3bc>
   1b930:	vmov.i32	d0, #0	; 0x00000000
   1b934:	ldr	r1, [sl, #268]	; 0x10c
   1b938:	cmp	r1, #0
   1b93c:	beq	1b954 <readstat_parse_dta+0x3dc>
   1b940:	mov	r0, r9
   1b944:	blx	r1
   1b948:	mov	r7, #4
   1b94c:	cmp	r0, #0
   1b950:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1b954:	mov	r0, #0
   1b958:	add	r1, sp, #104	; 0x68
   1b95c:	ldr	r6, [sl, #280]	; 0x118
   1b960:	vmov.i32	q8, #0	; 0x00000000
   1b964:	strh	r0, [fp, #-88]	; 0xffffffa8
   1b968:	strb	r0, [sp, #80]	; 0x50
   1b96c:	add	r0, r1, #28
   1b970:	vst1.32	{d16-d17}, [r0]
   1b974:	add	r0, r1, #16
   1b978:	vst1.64	{d16-d17}, [r0]
   1b97c:	mov	r0, #32
   1b980:	vst1.64	{d16-d17}, [r1], r0
   1b984:	mvn	r0, #0
   1b988:	str	r0, [r1]
   1b98c:	mov	r1, sl
   1b990:	ldrb	r0, [r1, #192]!	; 0xc0
   1b994:	tst	r0, #4
   1b998:	str	r1, [sp, #60]	; 0x3c
   1b99c:	bne	1ba18 <readstat_parse_dta+0x4a0>
   1b9a0:	ldr	r0, [sl, #4]
   1b9a4:	strh	r0, [fp, #-88]	; 0xffffffa8
   1b9a8:	mov	r1, #1
   1b9ac:	uxtah	r0, r1, r0
   1b9b0:	bl	4bf8 <readstat_malloc@plt>
   1b9b4:	cmp	r0, #0
   1b9b8:	beq	1ba88 <readstat_parse_dta+0x510>
   1b9bc:	ldr	r3, [r6, #12]
   1b9c0:	ldr	r2, [r6, #20]
   1b9c4:	ldrh	r1, [fp, #-88]	; 0xffffffa8
   1b9c8:	mov	r4, r0
   1b9cc:	blx	r3
   1b9d0:	ldrh	r1, [fp, #-88]	; 0xffffffa8
   1b9d4:	mov	r7, #2
   1b9d8:	cmp	r0, r1
   1b9dc:	bne	1bbc0 <readstat_parse_dta+0x648>
   1b9e0:	ldr	r1, [sp, #60]	; 0x3c
   1b9e4:	ldrb	r1, [r1]
   1b9e8:	tst	r1, #4
   1b9ec:	bne	1ba90 <readstat_parse_dta+0x518>
   1b9f0:	mov	r1, #0
   1b9f4:	mov	r2, r4
   1b9f8:	strb	r1, [r2, r0]!
   1b9fc:	ldrb	r0, [r2, #-1]
   1ba00:	str	r0, [sp, #56]	; 0x38
   1ba04:	mov	r0, r4
   1ba08:	bl	4bd4 <strlen@plt>
   1ba0c:	strh	r0, [fp, #-88]	; 0xffffffa8
   1ba10:	uxth	r0, r0
   1ba14:	b	1ba98 <readstat_parse_dta+0x520>
   1ba18:	ldr	r1, [pc, #4004]	; 1c9c4 <readstat_parse_dta+0x144c>
   1ba1c:	mov	r0, sl
   1ba20:	add	r1, pc, r1
   1ba24:	bl	1da28 <dta_read_tag>
   1ba28:	mov	r7, r0
   1ba2c:	cmp	r0, #0
   1ba30:	bne	1bbc8 <readstat_parse_dta+0x650>
   1ba34:	ldr	r1, [sl, #8]
   1ba38:	cmp	r1, #1
   1ba3c:	beq	1bcf4 <readstat_parse_dta+0x77c>
   1ba40:	mov	r0, #0
   1ba44:	cmp	r1, #2
   1ba48:	bne	1b9a8 <readstat_parse_dta+0x430>
   1ba4c:	ldr	r3, [r6, #12]
   1ba50:	ldr	r2, [r6, #20]
   1ba54:	sub	r0, fp, #88	; 0x58
   1ba58:	mov	r1, #2
   1ba5c:	mov	r7, #2
   1ba60:	blx	r3
   1ba64:	cmp	r0, #2
   1ba68:	bne	1bbc8 <readstat_parse_dta+0x650>
   1ba6c:	ldr	r0, [sp, #60]	; 0x3c
   1ba70:	ldrb	r1, [r0]
   1ba74:	ldrh	r0, [fp, #-88]	; 0xffffffa8
   1ba78:	tst	r1, #1
   1ba7c:	beq	1b9a4 <readstat_parse_dta+0x42c>
   1ba80:	bl	48a4 <byteswap2@plt>
   1ba84:	b	1b9a4 <readstat_parse_dta+0x42c>
   1ba88:	mov	r7, #3
   1ba8c:	b	1bbc8 <readstat_parse_dta+0x650>
   1ba90:	mov	r1, #0
   1ba94:	str	r1, [sp, #56]	; 0x38
   1ba98:	mov	r7, #1
   1ba9c:	orr	r0, r7, r0, lsl #2
   1baa0:	bl	4bf8 <readstat_malloc@plt>
   1baa4:	cmp	r0, #0
   1baa8:	str	r0, [sl]
   1baac:	beq	1bbbc <readstat_parse_dta+0x644>
   1bab0:	ldr	r1, [sl, #236]	; 0xec
   1bab4:	ldrh	r3, [fp, #-88]	; 0xffffffa8
   1bab8:	mov	r2, r4
   1babc:	str	r1, [sp]
   1bac0:	orr	r1, r7, r3, lsl #2
   1bac4:	bl	4c04 <readstat_convert@plt>
   1bac8:	mov	r7, r0
   1bacc:	cmp	r0, #0
   1bad0:	bne	1bbc0 <readstat_parse_dta+0x648>
   1bad4:	ldr	r0, [sp, #60]	; 0x3c
   1bad8:	ldrb	r0, [r0]
   1badc:	tst	r0, #4
   1bae0:	bne	1be54 <readstat_parse_dta+0x8dc>
   1bae4:	ldr	r0, [sl, #16]
   1bae8:	strb	r0, [sp, #80]	; 0x50
   1baec:	tst	r0, #255	; 0xff
   1baf0:	beq	1bedc <readstat_parse_dta+0x964>
   1baf4:	uxtb	r0, r0
   1baf8:	bl	4bf8 <readstat_malloc@plt>
   1bafc:	ldr	r3, [r6, #12]
   1bb00:	ldr	r2, [r6, #20]
   1bb04:	ldrb	r1, [sp, #80]	; 0x50
   1bb08:	mov	r6, r0
   1bb0c:	blx	r3
   1bb10:	ldrb	r2, [sp, #80]	; 0x50
   1bb14:	mov	r7, #2
   1bb18:	cmp	r0, r2
   1bb1c:	bne	1c4d4 <readstat_parse_dta+0xf5c>
   1bb20:	ldr	r0, [sp, #60]	; 0x3c
   1bb24:	str	r6, [sp, #52]	; 0x34
   1bb28:	ldrb	r0, [r0]
   1bb2c:	tst	r0, #4
   1bb30:	subeq	r2, r2, #1
   1bb34:	strbeq	r2, [sp, #80]	; 0x50
   1bb38:	ldrb	r0, [r6]
   1bb3c:	cmp	r0, #0
   1bb40:	beq	1c4bc <readstat_parse_dta+0xf44>
   1bb44:	ldr	r0, [sp, #56]	; 0x38
   1bb48:	uxtb	r1, r2
   1bb4c:	cmp	r0, #0
   1bb50:	beq	1bb88 <readstat_parse_dta+0x610>
   1bb54:	mvn	r0, #0
   1bb58:	uxtab	r2, r0, r2
   1bb5c:	ldr	r0, [sp, #52]	; 0x34
   1bb60:	ldrb	r0, [r0, r2]
   1bb64:	cmp	r0, #0
   1bb68:	bne	1bb88 <readstat_parse_dta+0x610>
   1bb6c:	ldr	r6, [sp, #52]	; 0x34
   1bb70:	add	r0, r6, #1
   1bb74:	mov	r1, r6
   1bb78:	bl	4898 <memmove@plt>
   1bb7c:	ldr	r0, [sp, #56]	; 0x38
   1bb80:	strb	r0, [r6]
   1bb84:	ldrb	r1, [sp, #80]	; 0x50
   1bb88:	ldr	r0, [sl, #276]	; 0x114
   1bb8c:	ldr	r3, [sl, #264]	; 0x108
   1bb90:	add	r2, sp, #104	; 0x68
   1bb94:	str	r0, [sp]
   1bb98:	ldr	r0, [sp, #52]	; 0x34
   1bb9c:	bl	4cc4 <dta_parse_timestamp@plt>
   1bba0:	cmp	r0, #0
   1bba4:	beq	1c4b0 <readstat_parse_dta+0xf38>
   1bba8:	mov	r7, r0
   1bbac:	mov	r0, r4
   1bbb0:	bl	48bc <free@plt>
   1bbb4:	ldr	r6, [sp, #52]	; 0x34
   1bbb8:	b	1c4e4 <readstat_parse_dta+0xf6c>
   1bbbc:	mov	r7, #3
   1bbc0:	mov	r0, r4
   1bbc4:	bl	48bc <free@plt>
   1bbc8:	cmp	r7, #0
   1bbcc:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1bbd0:	ldr	r1, [pc, #3940]	; 1cb3c <readstat_parse_dta+0x15c4>
   1bbd4:	mov	r0, sl
   1bbd8:	add	r1, pc, r1
   1bbdc:	bl	1da28 <dta_read_tag>
   1bbe0:	mov	r7, r0
   1bbe4:	cmp	r0, #0
   1bbe8:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1bbec:	ldr	r2, [r8]
   1bbf0:	cmp	r2, #0
   1bbf4:	beq	1bc84 <readstat_parse_dta+0x70c>
   1bbf8:	ldr	r0, [sp, #72]	; 0x48
   1bbfc:	ldrd	r0, [r0]
   1bc00:	str	r1, [sp, #108]	; 0x6c
   1bc04:	str	r0, [sp, #104]	; 0x68
   1bc08:	ldrd	r0, [sl, #144]	; 0x90
   1bc0c:	str	r1, [sp, #112]	; 0x70
   1bc10:	asr	r1, r1, #31
   1bc14:	asr	r3, r0, #31
   1bc18:	str	r1, [sp, #116]	; 0x74
   1bc1c:	ldr	r1, [sl, #12]
   1bc20:	str	r1, [sp, #124]	; 0x7c
   1bc24:	str	r1, [sp, #120]	; 0x78
   1bc28:	mov	r1, #0
   1bc2c:	str	r1, [sp, #136]	; 0x88
   1bc30:	str	r0, [sp, #128]	; 0x80
   1bc34:	str	r3, [sp, #132]	; 0x84
   1bc38:	ldr	r3, [sl, #232]	; 0xe8
   1bc3c:	str	r1, [sp, #144]	; 0x90
   1bc40:	str	r3, [sp, #140]	; 0x8c
   1bc44:	ldr	r3, [sl]
   1bc48:	str	r1, [sp, #152]	; 0x98
   1bc4c:	str	r3, [sp, #148]	; 0x94
   1bc50:	rsbs	r3, r0, #117	; 0x75
   1bc54:	sbcs	r0, r1, r0, asr #31
   1bc58:	ldrb	r0, [sp, #156]	; 0x9c
   1bc5c:	movwlt	r1, #1
   1bc60:	and	r0, r0, #254	; 0xfe
   1bc64:	orr	r0, r0, r1
   1bc68:	mov	r1, r9
   1bc6c:	strb	r0, [sp, #156]	; 0x9c
   1bc70:	add	r0, sp, #104	; 0x68
   1bc74:	blx	r2
   1bc78:	mov	r7, #4
   1bc7c:	cmp	r0, #0
   1bc80:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1bc84:	ldr	r0, [sp, #60]	; 0x3c
   1bc88:	ldrb	r0, [r0]
   1bc8c:	tst	r0, #4
   1bc90:	beq	1bf10 <readstat_parse_dta+0x998>
   1bc94:	ldr	r0, [pc, #4052]	; 1cc70 <readstat_parse_dta+0x16f8>
   1bc98:	add	r2, sp, #104	; 0x68
   1bc9c:	mov	r3, #112	; 0x70
   1bca0:	add	r0, pc, r0
   1bca4:	str	r0, [sp]
   1bca8:	mov	r0, sl
   1bcac:	ldr	r1, [pc, #4088]	; 1ccac <readstat_parse_dta+0x1734>
   1bcb0:	add	r1, pc, r1
   1bcb4:	bl	1daac <dta_read_chunk>
   1bcb8:	cmp	r0, #0
   1bcbc:	beq	1beb4 <readstat_parse_dta+0x93c>
   1bcc0:	mov	r7, #2
   1bcc4:	ldr	r1, [r5, #4]
   1bcc8:	ldr	r0, [r5, #20]
   1bccc:	blx	r1
   1bcd0:	cmp	sl, #0
   1bcd4:	beq	1bce0 <readstat_parse_dta+0x768>
   1bcd8:	mov	r0, sl
   1bcdc:	bl	4874 <dta_ctx_free@plt>
   1bce0:	mov	r0, r7
   1bce4:	sub	sp, fp, #48	; 0x30
   1bce8:	vpop	{d8-d9}
   1bcec:	add	sp, sp, #4
   1bcf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bcf4:	ldr	r3, [r6, #12]
   1bcf8:	ldr	r2, [r6, #20]
   1bcfc:	add	r0, sp, #100	; 0x64
   1bd00:	mov	r1, #1
   1bd04:	blx	r3
   1bd08:	cmp	r0, #1
   1bd0c:	bne	1be4c <readstat_parse_dta+0x8d4>
   1bd10:	ldrb	r0, [sp, #100]	; 0x64
   1bd14:	b	1b9a4 <readstat_parse_dta+0x42c>
   1bd18:	mov	r0, #0
   1bd1c:	str	r0, [sp, #64]	; 0x40
   1bd20:	mov	r0, #1
   1bd24:	ldr	r1, [sp, #68]	; 0x44
   1bd28:	str	r0, [sp, #60]	; 0x3c
   1bd2c:	mov	r0, #100	; 0x64
   1bd30:	mul	r0, r6, r0
   1bd34:	add	r1, r1, r1, lsl #2
   1bd38:	add	r0, r0, r1, lsl #1
   1bd3c:	ldr	r1, [sp, #72]	; 0x48
   1bd40:	add	r0, r0, r1
   1bd44:	add	r7, r0, #48	; 0x30
   1bd48:	bl	48b0 <machine_is_little_endian@plt>
   1bd4c:	ldr	r1, [sp, #64]	; 0x40
   1bd50:	uxtb	r6, r7
   1bd54:	cmp	r6, #119	; 0x77
   1bd58:	eor	r0, r0, r1
   1bd5c:	str	r0, [sp, #72]	; 0x48
   1bd60:	ldr	r0, [pc, #4036]	; 1cd2c <readstat_parse_dta+0x17b4>
   1bd64:	add	r0, pc, r0
   1bd68:	bcc	1bdac <readstat_parse_dta+0x834>
   1bd6c:	str	r0, [sp]
   1bd70:	add	r2, sp, #104	; 0x68
   1bd74:	mov	r0, sl
   1bd78:	mov	r3, #4
   1bd7c:	ldr	r1, [pc, #4088]	; 1cd7c <readstat_parse_dta+0x1804>
   1bd80:	add	r1, pc, r1
   1bd84:	bl	1daac <dta_read_chunk>
   1bd88:	cmp	r0, #0
   1bd8c:	bne	1c484 <readstat_parse_dta+0xf0c>
   1bd90:	ldr	r1, [sp, #72]	; 0x48
   1bd94:	ldr	r0, [sp, #104]	; 0x68
   1bd98:	cmp	r1, #0
   1bd9c:	beq	1bda4 <readstat_parse_dta+0x82c>
   1bda0:	bl	47b4 <byteswap4@plt>
   1bda4:	str	r0, [sp, #68]	; 0x44
   1bda8:	b	1bdf0 <readstat_parse_dta+0x878>
   1bdac:	str	r0, [sp]
   1bdb0:	add	r2, sp, #104	; 0x68
   1bdb4:	mov	r0, sl
   1bdb8:	mov	r3, #2
   1bdbc:	ldr	r1, [pc, #4028]	; 1cd80 <readstat_parse_dta+0x1808>
   1bdc0:	add	r1, pc, r1
   1bdc4:	bl	1daac <dta_read_chunk>
   1bdc8:	cmp	r0, #0
   1bdcc:	bne	1c484 <readstat_parse_dta+0xf0c>
   1bdd0:	ldr	r1, [sp, #72]	; 0x48
   1bdd4:	ldrh	r0, [sp, #104]	; 0x68
   1bdd8:	cmp	r1, #0
   1bddc:	beq	1bde4 <readstat_parse_dta+0x86c>
   1bde0:	bl	48a4 <byteswap2@plt>
   1bde4:	cmp	r6, #118	; 0x76
   1bde8:	str	r0, [sp, #68]	; 0x44
   1bdec:	bcc	1bfb0 <readstat_parse_dta+0xa38>
   1bdf0:	ldr	r0, [pc, #3980]	; 1cd84 <readstat_parse_dta+0x180c>
   1bdf4:	add	r2, sp, #104	; 0x68
   1bdf8:	mov	r3, #8
   1bdfc:	add	r0, pc, r0
   1be00:	str	r0, [sp]
   1be04:	mov	r0, sl
   1be08:	ldr	r1, [pc, #3960]	; 1cd88 <readstat_parse_dta+0x1810>
   1be0c:	add	r1, pc, r1
   1be10:	bl	1daac <dta_read_chunk>
   1be14:	mov	r7, r0
   1be18:	cmp	r0, #0
   1be1c:	bne	1bfe0 <readstat_parse_dta+0xa68>
   1be20:	ldr	r0, [sp, #72]	; 0x48
   1be24:	ldr	r2, [sp, #104]	; 0x68
   1be28:	ldr	r3, [sp, #108]	; 0x6c
   1be2c:	cmp	r0, #0
   1be30:	beq	1bfe0 <readstat_parse_dta+0xa68>
   1be34:	mov	r0, r2
   1be38:	mov	r1, r3
   1be3c:	bl	479c <byteswap8@plt>
   1be40:	mov	r2, r0
   1be44:	mov	r3, r1
   1be48:	b	1bfe0 <readstat_parse_dta+0xa68>
   1be4c:	mov	r7, #2
   1be50:	b	1bbc8 <readstat_parse_dta+0x650>
   1be54:	ldr	r1, [pc, #3888]	; 1cd8c <readstat_parse_dta+0x1814>
   1be58:	mov	r0, sl
   1be5c:	add	r1, pc, r1
   1be60:	bl	1da28 <dta_read_tag>
   1be64:	mov	r7, r0
   1be68:	cmp	r0, #0
   1be6c:	bne	1bbc0 <readstat_parse_dta+0x648>
   1be70:	ldr	r1, [pc, #3864]	; 1cd90 <readstat_parse_dta+0x1818>
   1be74:	mov	r0, sl
   1be78:	add	r1, pc, r1
   1be7c:	bl	1da28 <dta_read_tag>
   1be80:	mov	r7, r0
   1be84:	cmp	r0, #0
   1be88:	bne	1bbc0 <readstat_parse_dta+0x648>
   1be8c:	ldr	r3, [r6, #12]
   1be90:	ldr	r2, [r6, #20]
   1be94:	add	r0, sp, #80	; 0x50
   1be98:	mov	r1, #1
   1be9c:	blx	r3
   1bea0:	cmp	r0, #1
   1bea4:	mov	r7, #2
   1bea8:	bne	1bbc0 <readstat_parse_dta+0x648>
   1beac:	ldrb	r0, [sp, #80]	; 0x50
   1beb0:	b	1baec <readstat_parse_dta+0x574>
   1beb4:	ldr	r0, [sp, #60]	; 0x3c
   1beb8:	ldr	r1, [sp, #180]	; 0xb4
   1bebc:	ldrb	r2, [r0]
   1bec0:	ldr	r0, [sp, #176]	; 0xb0
   1bec4:	tst	r2, #1
   1bec8:	bne	1bee4 <readstat_parse_dta+0x96c>
   1becc:	strd	r0, [sl, #120]	; 0x78
   1bed0:	ldr	r0, [sp, #184]	; 0xb8
   1bed4:	ldr	r1, [sp, #188]	; 0xbc
   1bed8:	b	1bf00 <readstat_parse_dta+0x988>
   1bedc:	mov	r6, #0
   1bee0:	b	1c4c0 <readstat_parse_dta+0xf48>
   1bee4:	bl	479c <byteswap8@plt>
   1bee8:	strd	r0, [sl, #120]	; 0x78
   1beec:	ldrb	r2, [sl, #192]	; 0xc0
   1bef0:	ldr	r0, [sp, #184]	; 0xb8
   1bef4:	ldr	r1, [sp, #188]	; 0xbc
   1bef8:	tst	r2, #1
   1befc:	bne	1c264 <readstat_parse_dta+0xcec>
   1bf00:	strd	r0, [sl, #128]	; 0x80
   1bf04:	ldr	r0, [sp, #192]	; 0xc0
   1bf08:	ldr	r1, [sp, #196]	; 0xc4
   1bf0c:	strd	r0, [sl, #136]	; 0x88
   1bf10:	ldr	r1, [sl, #148]	; 0x94
   1bf14:	ldr	r0, [sl, #24]
   1bf18:	mul	r4, r0, r1
   1bf1c:	cmp	r1, #0
   1bf20:	beq	1bf40 <readstat_parse_dta+0x9c8>
   1bf24:	mov	r0, r4
   1bf28:	bl	4bf8 <readstat_malloc@plt>
   1bf2c:	mov	r9, r0
   1bf30:	cmp	r0, #0
   1bf34:	bne	1bf44 <readstat_parse_dta+0x9cc>
   1bf38:	mov	r7, #3
   1bf3c:	b	1bcc4 <readstat_parse_dta+0x74c>
   1bf40:	mov	r9, #0
   1bf44:	ldr	r0, [pc, #4092]	; 1cf48 <readstat_parse_dta+0x19d0>
   1bf48:	mov	r2, r9
   1bf4c:	mov	r3, r4
   1bf50:	add	r0, pc, r0
   1bf54:	str	r0, [sp]
   1bf58:	mov	r0, sl
   1bf5c:	ldr	r1, [pc, #4072]	; 1cf4c <readstat_parse_dta+0x19d4>
   1bf60:	add	r1, pc, r1
   1bf64:	bl	1daac <dta_read_chunk>
   1bf68:	mov	r7, r0
   1bf6c:	cmp	r0, #0
   1bf70:	bne	1c158 <readstat_parse_dta+0xbe0>
   1bf74:	ldr	r0, [sl, #24]
   1bf78:	cmp	r0, #2
   1bf7c:	beq	1c010 <readstat_parse_dta+0xa98>
   1bf80:	cmp	r0, #1
   1bf84:	bne	1c070 <readstat_parse_dta+0xaf8>
   1bf88:	ldr	r0, [sl, #148]	; 0x94
   1bf8c:	cmp	r0, #1
   1bf90:	blt	1c070 <readstat_parse_dta+0xaf8>
   1bf94:	ldr	r1, [sl, #28]
   1bf98:	mov	r2, r9
   1bf9c:	ldrb	r3, [r2], #1
   1bfa0:	subs	r0, r0, #1
   1bfa4:	strh	r3, [r1], #2
   1bfa8:	bne	1bf9c <readstat_parse_dta+0xa24>
   1bfac:	b	1c070 <readstat_parse_dta+0xaf8>
   1bfb0:	ldr	r0, [pc, #3992]	; 1cf50 <readstat_parse_dta+0x19d8>
   1bfb4:	add	r2, sp, #104	; 0x68
   1bfb8:	mov	r3, #4
   1bfbc:	add	r0, pc, r0
   1bfc0:	str	r0, [sp]
   1bfc4:	mov	r0, sl
   1bfc8:	ldr	r1, [pc, #3972]	; 1cf54 <readstat_parse_dta+0x19dc>
   1bfcc:	add	r1, pc, r1
   1bfd0:	bl	1daac <dta_read_chunk>
   1bfd4:	mov	r7, r0
   1bfd8:	cmp	r0, #0
   1bfdc:	beq	1c48c <readstat_parse_dta+0xf14>
   1bfe0:	cmp	r7, #0
   1bfe4:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1bfe8:	ldr	r1, [r4, #40]	; 0x28
   1bfec:	ldr	r0, [r4, #36]	; 0x24
   1bff0:	ldr	r7, [sp, #60]	; 0x3c
   1bff4:	str	r6, [sp, #4]
   1bff8:	str	r1, [sp, #12]
   1bffc:	ldr	r1, [sp, #68]	; 0x44
   1c000:	str	r0, [sp, #8]
   1c004:	mov	r0, sl
   1c008:	str	r7, [sp]
   1c00c:	b	1b834 <readstat_parse_dta+0x2bc>
   1c010:	ldr	r0, [sl, #28]
   1c014:	mov	r1, r9
   1c018:	mov	r2, r4
   1c01c:	bl	4910 <memcpy@plt>
   1c020:	ldrb	r0, [sl, #192]	; 0xc0
   1c024:	tst	r0, #1
   1c028:	beq	1c070 <readstat_parse_dta+0xaf8>
   1c02c:	ldr	r0, [sl, #148]	; 0x94
   1c030:	cmp	r0, #1
   1c034:	blt	1c070 <readstat_parse_dta+0xaf8>
   1c038:	ldr	r1, [sl, #28]
   1c03c:	mov	r4, #0
   1c040:	mov	r6, #0
   1c044:	add	r0, r1, r4
   1c048:	ldrh	r0, [r0]
   1c04c:	bl	48a4 <byteswap2@plt>
   1c050:	ldr	r1, [sl, #28]
   1c054:	add	r6, r6, #1
   1c058:	add	r2, r1, r4
   1c05c:	add	r4, r4, #2
   1c060:	strh	r0, [r2]
   1c064:	ldr	r0, [sl, #148]	; 0x94
   1c068:	cmp	r6, r0
   1c06c:	blt	1c044 <readstat_parse_dta+0xacc>
   1c070:	ldr	r2, [sl, #36]	; 0x24
   1c074:	ldr	r3, [sl, #40]	; 0x28
   1c078:	ldr	r0, [pc, #4084]	; 1d074 <readstat_parse_dta+0x1afc>
   1c07c:	add	r0, pc, r0
   1c080:	str	r0, [sp]
   1c084:	mov	r0, sl
   1c088:	ldr	r1, [pc, #4072]	; 1d078 <readstat_parse_dta+0x1b00>
   1c08c:	add	r1, pc, r1
   1c090:	bl	1daac <dta_read_chunk>
   1c094:	mov	r7, r0
   1c098:	cmp	r0, #0
   1c09c:	bne	1c158 <readstat_parse_dta+0xbe0>
   1c0a0:	ldr	r2, [sl, #44]	; 0x2c
   1c0a4:	ldr	r3, [sl, #48]	; 0x30
   1c0a8:	ldr	r0, [pc, #4044]	; 1d07c <readstat_parse_dta+0x1b04>
   1c0ac:	add	r0, pc, r0
   1c0b0:	str	r0, [sp]
   1c0b4:	mov	r0, sl
   1c0b8:	ldr	r1, [pc, #4032]	; 1d080 <readstat_parse_dta+0x1b08>
   1c0bc:	add	r1, pc, r1
   1c0c0:	bl	1daac <dta_read_chunk>
   1c0c4:	mov	r7, r0
   1c0c8:	cmp	r0, #0
   1c0cc:	bne	1c158 <readstat_parse_dta+0xbe0>
   1c0d0:	ldr	r2, [sl, #52]	; 0x34
   1c0d4:	ldr	r3, [sl, #56]	; 0x38
   1c0d8:	ldr	r0, [pc, #4004]	; 1d084 <readstat_parse_dta+0x1b0c>
   1c0dc:	add	r0, pc, r0
   1c0e0:	str	r0, [sp]
   1c0e4:	mov	r0, sl
   1c0e8:	ldr	r1, [pc, #3992]	; 1d088 <readstat_parse_dta+0x1b10>
   1c0ec:	add	r1, pc, r1
   1c0f0:	bl	1daac <dta_read_chunk>
   1c0f4:	mov	r7, r0
   1c0f8:	cmp	r0, #0
   1c0fc:	bne	1c158 <readstat_parse_dta+0xbe0>
   1c100:	ldr	r2, [sl, #60]	; 0x3c
   1c104:	ldr	r3, [sl, #64]	; 0x40
   1c108:	ldr	r0, [pc, #4080]	; 1d100 <readstat_parse_dta+0x1b88>
   1c10c:	add	r0, pc, r0
   1c110:	str	r0, [sp]
   1c114:	mov	r0, sl
   1c118:	ldr	r1, [pc, #4068]	; 1d104 <readstat_parse_dta+0x1b8c>
   1c11c:	add	r1, pc, r1
   1c120:	bl	1daac <dta_read_chunk>
   1c124:	mov	r7, r0
   1c128:	cmp	r0, #0
   1c12c:	bne	1c158 <readstat_parse_dta+0xbe0>
   1c130:	ldr	r2, [sl, #68]	; 0x44
   1c134:	ldr	r3, [sl, #72]	; 0x48
   1c138:	ldr	r0, [pc, #4040]	; 1d108 <readstat_parse_dta+0x1b90>
   1c13c:	add	r0, pc, r0
   1c140:	str	r0, [sp]
   1c144:	mov	r0, sl
   1c148:	ldr	r1, [pc, #4028]	; 1d10c <readstat_parse_dta+0x1b94>
   1c14c:	add	r1, pc, r1
   1c150:	bl	1daac <dta_read_chunk>
   1c154:	mov	r7, r0
   1c158:	cmp	r9, #0
   1c15c:	beq	1c168 <readstat_parse_dta+0xbf0>
   1c160:	mov	r0, r9
   1c164:	bl	48bc <free@plt>
   1c168:	cmp	r7, #0
   1c16c:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1c170:	ldr	r0, [sl, #148]	; 0x94
   1c174:	cmp	r0, #1
   1c178:	blt	1c1dc <readstat_parse_dta+0xc64>
   1c17c:	mov	r6, #0
   1c180:	add	r8, sp, #104	; 0x68
   1c184:	mov	r4, #0
   1c188:	ldr	r0, [sl, #28]
   1c18c:	mov	r1, sl
   1c190:	mov	r2, r8
   1c194:	mov	r3, #0
   1c198:	add	r0, r0, r6
   1c19c:	ldrh	r0, [r0]
   1c1a0:	bl	4bbc <dta_type_info@plt>
   1c1a4:	cmp	r0, #0
   1c1a8:	bne	1c484 <readstat_parse_dta+0xf0c>
   1c1ac:	ldr	r0, [sl, #160]	; 0xa0
   1c1b0:	ldr	r1, [sp, #104]	; 0x68
   1c1b4:	add	r4, r4, #1
   1c1b8:	add	r6, r6, #2
   1c1bc:	add	r0, r0, r1
   1c1c0:	str	r0, [sl, #160]	; 0xa0
   1c1c4:	ldr	r1, [sl, #148]	; 0x94
   1c1c8:	cmp	r4, r1
   1c1cc:	blt	1c188 <readstat_parse_dta+0xc10>
   1c1d0:	mov	r0, #1
   1c1d4:	cmp	r1, #0
   1c1d8:	bgt	1c1f4 <readstat_parse_dta+0xc7c>
   1c1dc:	ldr	r0, [sp, #68]	; 0x44
   1c1e0:	ldrd	r2, [r0]
   1c1e4:	mov	r0, #0
   1c1e8:	subs	r1, r2, #1
   1c1ec:	sbcs	r1, r3, #0
   1c1f0:	blt	1c200 <readstat_parse_dta+0xc88>
   1c1f4:	ldr	r1, [sl, #160]	; 0xa0
   1c1f8:	cmp	r1, #0
   1c1fc:	beq	1cca4 <readstat_parse_dta+0x172c>
   1c200:	ldr	r1, [sl, #248]	; 0xf8
   1c204:	cmp	r1, #0
   1c208:	cmpne	r0, #0
   1c20c:	bne	1c288 <readstat_parse_dta+0xd10>
   1c210:	ldr	r0, [sl, #92]	; 0x5c
   1c214:	cmp	r0, #0
   1c218:	beq	1c7fc <readstat_parse_dta+0x1284>
   1c21c:	ldr	r0, [sp, #60]	; 0x3c
   1c220:	ldr	r4, [sl, #280]	; 0x118
   1c224:	ldrb	r0, [r0]
   1c228:	tst	r0, #4
   1c22c:	beq	1c23c <readstat_parse_dta+0xcc4>
   1c230:	ldr	r0, [sl, #244]	; 0xf4
   1c234:	cmp	r0, #0
   1c238:	beq	1c788 <readstat_parse_dta+0x1210>
   1c23c:	ldr	r1, [pc, #4064]	; 1d224 <readstat_parse_dta+0x1cac>
   1c240:	mov	r0, sl
   1c244:	add	r1, pc, r1
   1c248:	bl	1da28 <dta_read_tag>
   1c24c:	mov	r7, r0
   1c250:	cmp	r0, #0
   1c254:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1c258:	mov	r6, #0
   1c25c:	mov	r8, #0
   1c260:	b	1c510 <readstat_parse_dta+0xf98>
   1c264:	bl	479c <byteswap8@plt>
   1c268:	strd	r0, [sl, #128]	; 0x80
   1c26c:	ldrb	r2, [sl, #192]	; 0xc0
   1c270:	ldr	r0, [sp, #192]	; 0xc0
   1c274:	ldr	r1, [sp, #196]	; 0xc4
   1c278:	tst	r2, #1
   1c27c:	beq	1bf0c <readstat_parse_dta+0x994>
   1c280:	bl	479c <byteswap8@plt>
   1c284:	b	1bf0c <readstat_parse_dta+0x994>
   1c288:	mov	r0, #0
   1c28c:	mov	r6, #0
   1c290:	mov	r9, #0
   1c294:	str	r0, [sp, #56]	; 0x38
   1c298:	ldr	r0, [sl, #28]
   1c29c:	mov	r1, sl
   1c2a0:	sub	r2, fp, #88	; 0x58
   1c2a4:	add	r3, sp, #80	; 0x50
   1c2a8:	add	r0, r0, r6
   1c2ac:	ldrh	r0, [r0]
   1c2b0:	bl	4bbc <dta_type_info@plt>
   1c2b4:	cmp	r0, #0
   1c2b8:	bne	1c484 <readstat_parse_dta+0xf0c>
   1c2bc:	ldr	r4, [sp, #80]	; 0x50
   1c2c0:	cmp	r4, #0
   1c2c4:	beq	1c2e0 <readstat_parse_dta+0xd68>
   1c2c8:	cmp	r4, #6
   1c2cc:	bne	1c2f4 <readstat_parse_dta+0xd7c>
   1c2d0:	mov	r8, #0
   1c2d4:	str	r8, [fp, #-88]	; 0xffffffa8
   1c2d8:	str	r8, [sp, #80]	; 0x50
   1c2dc:	b	1c2ec <readstat_parse_dta+0xd74>
   1c2e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1c2e4:	add	r8, r0, #1
   1c2e8:	str	r8, [fp, #-88]	; 0xffffffa8
   1c2ec:	mov	r4, #0
   1c2f0:	b	1c2f8 <readstat_parse_dta+0xd80>
   1c2f4:	ldr	r8, [fp, #-88]	; 0xffffffa8
   1c2f8:	mov	r0, #1
   1c2fc:	movw	r1, #2152	; 0x868
   1c300:	bl	4778 <calloc@plt>
   1c304:	mov	r7, r0
   1c308:	stm	r7, {r4, r9}
   1c30c:	ldr	r0, [sp, #56]	; 0x38
   1c310:	str	r0, [r7, #2148]	; 0x864
   1c314:	str	r8, [r7, #1596]	; 0x63c
   1c318:	ldr	r0, [sl, #36]	; 0x24
   1c31c:	ldr	r3, [sl, #76]	; 0x4c
   1c320:	ldr	r1, [sl, #236]	; 0xec
   1c324:	str	r1, [sp]
   1c328:	mla	r2, r3, r9, r0
   1c32c:	add	r0, r7, #8
   1c330:	mov	r1, #300	; 0x12c
   1c334:	bl	4c04 <readstat_convert@plt>
   1c338:	ldr	r3, [sl, #88]	; 0x58
   1c33c:	ldr	r2, [sl, #68]	; 0x44
   1c340:	mul	r0, r3, r9
   1c344:	ldrb	r0, [r2, r0]!
   1c348:	cmp	r0, #0
   1c34c:	beq	1c364 <readstat_parse_dta+0xdec>
   1c350:	ldr	r0, [sl, #236]	; 0xec
   1c354:	mov	r1, #1024	; 0x400
   1c358:	str	r0, [sp]
   1c35c:	add	r0, r7, #564	; 0x234
   1c360:	bl	4c04 <readstat_convert@plt>
   1c364:	ldr	r3, [sl, #80]	; 0x50
   1c368:	ldr	r2, [sl, #52]	; 0x34
   1c36c:	mul	r0, r3, r9
   1c370:	ldrb	r0, [r2, r0]!
   1c374:	cmp	r0, #0
   1c378:	beq	1c404 <readstat_parse_dta+0xe8c>
   1c37c:	ldr	r0, [sl, #236]	; 0xec
   1c380:	add	r4, r7, #308	; 0x134
   1c384:	mov	r1, #256	; 0x100
   1c388:	str	r0, [sp]
   1c38c:	mov	r0, r4
   1c390:	bl	4c04 <readstat_convert@plt>
   1c394:	ldrb	r0, [r7, #308]	; 0x134
   1c398:	cmp	r0, #37	; 0x25
   1c39c:	bne	1c3c4 <readstat_parse_dta+0xe4c>
   1c3a0:	ldrb	r0, [r7, #309]	; 0x135
   1c3a4:	cmp	r0, #45	; 0x2d
   1c3a8:	bne	1c3b4 <readstat_parse_dta+0xe3c>
   1c3ac:	mov	r0, #1
   1c3b0:	b	1c3c0 <readstat_parse_dta+0xe48>
   1c3b4:	cmp	r0, #126	; 0x7e
   1c3b8:	movne	r0, #3
   1c3bc:	moveq	r0, #2
   1c3c0:	str	r0, [r7, #2132]	; 0x854
   1c3c4:	ldr	r1, [pc, #3900]	; 1d308 <readstat_parse_dta+0x1d90>
   1c3c8:	mov	r0, r4
   1c3cc:	add	r2, sp, #104	; 0x68
   1c3d0:	add	r1, pc, r1
   1c3d4:	bl	4c58 <__isoc99_sscanf@plt>
   1c3d8:	cmp	r0, #1
   1c3dc:	beq	1c3fc <readstat_parse_dta+0xe84>
   1c3e0:	ldr	r1, [pc, #3876]	; 1d30c <readstat_parse_dta+0x1d94>
   1c3e4:	mov	r0, r4
   1c3e8:	add	r2, sp, #104	; 0x68
   1c3ec:	add	r1, pc, r1
   1c3f0:	bl	4c58 <__isoc99_sscanf@plt>
   1c3f4:	cmp	r0, #1
   1c3f8:	bne	1c404 <readstat_parse_dta+0xe8c>
   1c3fc:	ldr	r0, [sp, #104]	; 0x68
   1c400:	str	r0, [r7, #2136]	; 0x858
   1c404:	ldr	r0, [sl, #228]	; 0xe4
   1c408:	str	r7, [r0, r9, lsl #2]
   1c40c:	ldr	r0, [sl, #84]	; 0x54
   1c410:	ldr	r2, [sl, #60]	; 0x3c
   1c414:	ldr	r1, [sl, #228]	; 0xe4
   1c418:	ldr	r7, [sl, #248]	; 0xf8
   1c41c:	ldr	r3, [sl, #276]	; 0x114
   1c420:	mul	r0, r0, r9
   1c424:	ldr	r1, [r1, r9, lsl #2]
   1c428:	ldrb	r0, [r2, r0]!
   1c42c:	cmp	r0, #0
   1c430:	moveq	r2, r0
   1c434:	mov	r0, r9
   1c438:	blx	r7
   1c43c:	cmp	r0, #2
   1c440:	beq	1c45c <readstat_parse_dta+0xee4>
   1c444:	cmp	r0, #1
   1c448:	beq	1c774 <readstat_parse_dta+0x11fc>
   1c44c:	ldr	r0, [sp, #56]	; 0x38
   1c450:	add	r0, r0, #1
   1c454:	str	r0, [sp, #56]	; 0x38
   1c458:	b	1c46c <readstat_parse_dta+0xef4>
   1c45c:	ldr	r0, [sl, #228]	; 0xe4
   1c460:	mov	r1, #1
   1c464:	ldr	r0, [r0, r9, lsl #2]
   1c468:	str	r1, [r0, #2144]	; 0x860
   1c46c:	ldr	r0, [sl, #148]	; 0x94
   1c470:	add	r9, r9, #1
   1c474:	add	r6, r6, #2
   1c478:	cmp	r9, r0
   1c47c:	blt	1c298 <readstat_parse_dta+0xd20>
   1c480:	b	1c210 <readstat_parse_dta+0xc98>
   1c484:	mov	r7, r0
   1c488:	b	1bcc4 <readstat_parse_dta+0x74c>
   1c48c:	ldr	r0, [sp, #72]	; 0x48
   1c490:	ldr	r2, [sp, #104]	; 0x68
   1c494:	cmp	r0, #0
   1c498:	beq	1c4a8 <readstat_parse_dta+0xf30>
   1c49c:	mov	r0, r2
   1c4a0:	bl	47b4 <byteswap4@plt>
   1c4a4:	mov	r2, r0
   1c4a8:	mov	r3, #0
   1c4ac:	b	1bfe0 <readstat_parse_dta+0xa68>
   1c4b0:	add	r0, sp, #104	; 0x68
   1c4b4:	bl	4850 <mktime@plt>
   1c4b8:	str	r0, [sl, #12]
   1c4bc:	ldr	r6, [sp, #52]	; 0x34
   1c4c0:	ldr	r1, [pc, #4088]	; 1d4c0 <readstat_parse_dta+0x1f48>
   1c4c4:	mov	r0, sl
   1c4c8:	add	r1, pc, r1
   1c4cc:	bl	1da28 <dta_read_tag>
   1c4d0:	mov	r7, r0
   1c4d4:	mov	r0, r4
   1c4d8:	bl	48bc <free@plt>
   1c4dc:	cmp	r6, #0
   1c4e0:	beq	1bbc8 <readstat_parse_dta+0x650>
   1c4e4:	mov	r0, r6
   1c4e8:	b	1bbc4 <readstat_parse_dta+0x64c>
   1c4ec:	ldr	r1, [pc, #4088]	; 1d4ec <readstat_parse_dta+0x1f74>
   1c4f0:	mov	r0, sl
   1c4f4:	add	r1, pc, r1
   1c4f8:	bl	1da28 <dta_read_tag>
   1c4fc:	cmp	r0, #0
   1c500:	mov	r1, #2
   1c504:	mov	r7, r0
   1c508:	movweq	r1, #4
   1c50c:	b	1c758 <readstat_parse_dta+0x11e0>
   1c510:	ldr	r0, [sp, #60]	; 0x3c
   1c514:	ldrb	r0, [r0]
   1c518:	tst	r0, #4
   1c51c:	bne	1c584 <readstat_parse_dta+0x100c>
   1c520:	ldr	r3, [r4, #12]
   1c524:	ldr	r2, [r4, #20]
   1c528:	sub	r0, fp, #88	; 0x58
   1c52c:	mov	r1, #1
   1c530:	blx	r3
   1c534:	cmp	r0, #1
   1c538:	bne	1c7c4 <readstat_parse_dta+0x124c>
   1c53c:	ldr	r0, [sl, #92]	; 0x5c
   1c540:	cmp	r0, #2
   1c544:	bne	1c5e0 <readstat_parse_dta+0x1068>
   1c548:	ldr	r3, [r4, #12]
   1c54c:	ldr	r2, [r4, #20]
   1c550:	add	r0, sp, #104	; 0x68
   1c554:	mov	r1, #2
   1c558:	blx	r3
   1c55c:	cmp	r0, #2
   1c560:	bne	1c7c4 <readstat_parse_dta+0x124c>
   1c564:	ldr	r0, [sp, #60]	; 0x3c
   1c568:	ldrh	r9, [sp, #104]	; 0x68
   1c56c:	ldrb	r0, [r0]
   1c570:	tst	r0, #1
   1c574:	beq	1c61c <readstat_parse_dta+0x10a4>
   1c578:	mov	r0, r9
   1c57c:	bl	48a4 <byteswap2@plt>
   1c580:	b	1c618 <readstat_parse_dta+0x10a0>
   1c584:	ldr	r3, [r4, #12]
   1c588:	ldr	r2, [r4, #20]
   1c58c:	add	r0, sp, #104	; 0x68
   1c590:	mov	r1, #4
   1c594:	blx	r3
   1c598:	mov	r1, #2
   1c59c:	cmp	r0, #4
   1c5a0:	bne	1c678 <readstat_parse_dta+0x1100>
   1c5a4:	ldr	r0, [sp, #104]	; 0x68
   1c5a8:	movw	r2, #12092	; 0x2f3c
   1c5ac:	movt	r2, #26723	; 0x6863
   1c5b0:	cmp	r0, r2
   1c5b4:	beq	1c4ec <readstat_parse_dta+0xf74>
   1c5b8:	ldr	r0, [sp, #104]	; 0x68
   1c5bc:	movw	r2, #25404	; 0x633c
   1c5c0:	mov	r7, #5
   1c5c4:	movt	r2, #15976	; 0x3e68
   1c5c8:	cmp	r0, r2
   1c5cc:	bne	1c758 <readstat_parse_dta+0x11e0>
   1c5d0:	mov	r0, #1
   1c5d4:	strb	r0, [fp, #-88]	; 0xffffffa8
   1c5d8:	b	1c53c <readstat_parse_dta+0xfc4>
   1c5dc:	.word	0x0000ac28
   1c5e0:	ldr	r3, [r4, #12]
   1c5e4:	ldr	r2, [r4, #20]
   1c5e8:	add	r0, sp, #104	; 0x68
   1c5ec:	mov	r1, #4
   1c5f0:	blx	r3
   1c5f4:	cmp	r0, #4
   1c5f8:	bne	1c7c4 <readstat_parse_dta+0x124c>
   1c5fc:	ldr	r0, [sp, #60]	; 0x3c
   1c600:	ldr	r9, [sp, #104]	; 0x68
   1c604:	ldrb	r0, [r0]
   1c608:	tst	r0, #1
   1c60c:	beq	1c61c <readstat_parse_dta+0x10a4>
   1c610:	mov	r0, r9
   1c614:	bl	47b4 <byteswap4@plt>
   1c618:	mov	r9, r0
   1c61c:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   1c620:	cmp	r9, #0
   1c624:	cmpeq	r0, #0
   1c628:	beq	1c7cc <readstat_parse_dta+0x1254>
   1c62c:	mov	r7, #32
   1c630:	cmp	r9, #1048576	; 0x100000
   1c634:	bhi	1c7e4 <readstat_parse_dta+0x126c>
   1c638:	cmp	r0, #1
   1c63c:	bne	1c7e4 <readstat_parse_dta+0x126c>
   1c640:	ldr	r0, [sl, #244]	; 0xf4
   1c644:	cmp	r0, #0
   1c648:	beq	1c658 <readstat_parse_dta+0x10e0>
   1c64c:	ldr	r0, [sl, #96]	; 0x60
   1c650:	cmp	r9, r0, lsl #1
   1c654:	bcs	1c698 <readstat_parse_dta+0x1120>
   1c658:	ldr	r3, [r4, #8]
   1c65c:	ldr	r2, [r4, #20]
   1c660:	mov	r0, r9
   1c664:	mov	r1, #1
   1c668:	blx	r3
   1c66c:	cmn	r0, #1
   1c670:	bne	1c738 <readstat_parse_dta+0x11c0>
   1c674:	b	1c7d4 <readstat_parse_dta+0x125c>
   1c678:	mov	r7, #2
   1c67c:	b	1c758 <readstat_parse_dta+0x11e0>
   1c680:	.word	0x0000ab74
   1c684:	.word	0x0000ab5c
   1c688:	.word	0x0000ab5f
   1c68c:	.word	0x0000ab4f
   1c690:	.word	0x0000ae1d
   1c694:	.word	0x0000ab28
   1c698:	add	r1, r9, #1
   1c69c:	mov	r0, r8
   1c6a0:	bl	4cb8 <readstat_realloc@plt>
   1c6a4:	cmp	r0, #0
   1c6a8:	beq	1c7dc <readstat_parse_dta+0x1264>
   1c6ac:	mov	r8, r0
   1c6b0:	mov	r0, #0
   1c6b4:	mov	r1, r9
   1c6b8:	strb	r0, [r8, r9]
   1c6bc:	mov	r0, r8
   1c6c0:	ldr	r3, [r4, #12]
   1c6c4:	ldr	r2, [r4, #20]
   1c6c8:	blx	r3
   1c6cc:	cmp	r0, r9
   1c6d0:	bne	1c7c4 <readstat_parse_dta+0x124c>
   1c6d4:	mov	r0, #0
   1c6d8:	mov	r2, #4
   1c6dc:	str	r0, [sp, #104]	; 0x68
   1c6e0:	mov	r0, r8
   1c6e4:	ldr	r1, [pc, #4044]	; 1d6b8 <readstat_parse_dta+0x2140>
   1c6e8:	add	r1, pc, r1
   1c6ec:	bl	4ebc <strncmp@plt>
   1c6f0:	cmp	r0, #0
   1c6f4:	bne	1c738 <readstat_parse_dta+0x11c0>
   1c6f8:	ldr	r0, [sl, #96]	; 0x60
   1c6fc:	ldr	r1, [pc, #4024]	; 1d6bc <readstat_parse_dta+0x2144>
   1c700:	add	r2, sp, #104	; 0x68
   1c704:	add	r0, r8, r0
   1c708:	add	r1, pc, r1
   1c70c:	bl	4c58 <__isoc99_sscanf@plt>
   1c710:	cmp	r0, #1
   1c714:	bne	1c738 <readstat_parse_dta+0x11c0>
   1c718:	ldr	r0, [sl, #96]	; 0x60
   1c71c:	ldr	r3, [sl, #244]	; 0xf4
   1c720:	ldr	r2, [sl, #276]	; 0x114
   1c724:	add	r1, r8, r0, lsl #1
   1c728:	ldr	r0, [sp, #104]	; 0x68
   1c72c:	blx	r3
   1c730:	cmp	r0, #0
   1c734:	bne	1d4d4 <readstat_parse_dta+0x1f5c>
   1c738:	ldr	r1, [pc, #3968]	; 1d6c0 <readstat_parse_dta+0x2148>
   1c73c:	mov	r0, sl
   1c740:	add	r1, pc, r1
   1c744:	bl	1da28 <dta_read_tag>
   1c748:	cmp	r0, #0
   1c74c:	mov	r1, r0
   1c750:	mov	r7, r0
   1c754:	movwne	r1, #2
   1c758:	cmp	r1, #0
   1c75c:	mov	r6, r7
   1c760:	beq	1c510 <readstat_parse_dta+0xf98>
   1c764:	cmp	r1, #4
   1c768:	cmpne	r1, #2
   1c76c:	beq	1c7e4 <readstat_parse_dta+0x126c>
   1c770:	b	1c7fc <readstat_parse_dta+0x1284>
   1c774:	mov	r7, #4
   1c778:	b	1bcc4 <readstat_parse_dta+0x74c>
   1c77c:	.word	0x0000ab0a
   1c780:	.word	0x0000aaee
   1c784:	.word	0x0000aae7
   1c788:	mov	r6, sl
   1c78c:	ldr	r3, [r4, #8]
   1c790:	ldr	r2, [r4, #20]
   1c794:	mov	r1, #0
   1c798:	ldr	r0, [r6, #120]!	; 0x78
   1c79c:	blx	r3
   1c7a0:	cmn	r0, #1
   1c7a4:	bne	1c7fc <readstat_parse_dta+0x1284>
   1c7a8:	ldr	r0, [sl, #264]	; 0x108
   1c7ac:	mov	r7, #15
   1c7b0:	cmp	r0, #0
   1c7b4:	beq	1bcc4 <readstat_parse_dta+0x74c>
   1c7b8:	ldrd	r0, [r6]
   1c7bc:	b	1ccf4 <readstat_parse_dta+0x177c>
   1c7c0:	.word	0x0000aacf
   1c7c4:	mov	r7, #2
   1c7c8:	b	1c7e4 <readstat_parse_dta+0x126c>
   1c7cc:	mov	r7, r6
   1c7d0:	b	1c7e4 <readstat_parse_dta+0x126c>
   1c7d4:	mov	r7, #15
   1c7d8:	b	1c7e4 <readstat_parse_dta+0x126c>
   1c7dc:	mov	r8, #0
   1c7e0:	mov	r7, #3
   1c7e4:	cmp	r8, #0
   1c7e8:	beq	1c7f4 <readstat_parse_dta+0x127c>
   1c7ec:	mov	r0, r8
   1c7f0:	bl	48bc <free@plt>
   1c7f4:	cmp	r7, #0
   1c7f8:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1c7fc:	ldr	r0, [sp, #60]	; 0x3c
   1c800:	ldrb	r0, [r0]
   1c804:	tst	r0, #4
   1c808:	bne	1c8e0 <readstat_parse_dta+0x1368>
   1c80c:	ldr	r3, [r5, #8]
   1c810:	ldr	r2, [r5, #20]
   1c814:	mov	r0, #0
   1c818:	mov	r1, #1
   1c81c:	blx	r3
   1c820:	asr	r1, r0, #31
   1c824:	cmn	r0, #1
   1c828:	strd	r0, [sl, #120]	; 0x78
   1c82c:	beq	1ccd8 <readstat_parse_dta+0x1760>
   1c830:	ldr	r2, [sp, #68]	; 0x44
   1c834:	ldr	r1, [sl, #160]	; 0xa0
   1c838:	ldrd	r2, [r2]
   1c83c:	umull	r2, r7, r2, r1
   1c840:	adds	r2, r2, r0
   1c844:	mla	r1, r3, r1, r7
   1c848:	adc	r3, r1, r0, asr #31
   1c84c:	strd	r2, [sl, #136]	; 0x88
   1c850:	ldrb	r0, [sl, #192]	; 0xc0
   1c854:	tst	r0, #4
   1c858:	bne	1c8e0 <readstat_parse_dta+0x1368>
   1c85c:	ldr	r0, [sl, #256]	; 0x100
   1c860:	ldr	r8, [sl, #280]	; 0x118
   1c864:	cmp	r0, #0
   1c868:	beq	1d530 <readstat_parse_dta+0x1fb8>
   1c86c:	mov	r4, sl
   1c870:	ldr	r3, [r8, #8]
   1c874:	ldr	r2, [r8, #20]
   1c878:	mov	r1, #0
   1c87c:	ldr	r0, [r4, #120]!	; 0x78
   1c880:	blx	r3
   1c884:	cmn	r0, #1
   1c888:	beq	1cce0 <readstat_parse_dta+0x1768>
   1c88c:	ldr	r1, [pc, #3632]	; 1d6c4 <readstat_parse_dta+0x214c>
   1c890:	mov	r0, sl
   1c894:	add	r1, pc, r1
   1c898:	bl	1da28 <dta_read_tag>
   1c89c:	mov	r7, r0
   1c8a0:	cmp	r0, #0
   1c8a4:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1c8a8:	ldr	r0, [sp, #72]	; 0x48
   1c8ac:	ldrd	r0, [r0]
   1c8b0:	subs	r2, r0, #1
   1c8b4:	sbcs	r2, r1, #0
   1c8b8:	blt	1cd30 <readstat_parse_dta+0x17b8>
   1c8bc:	bl	23668 <__aeabi_l2d>
   1c8c0:	ldrd	r2, [sl, #184]	; 0xb8
   1c8c4:	vmov	d8, r0, r1
   1c8c8:	mov	r0, r2
   1c8cc:	mov	r1, r3
   1c8d0:	bl	23668 <__aeabi_l2d>
   1c8d4:	vmov	d16, r0, r1
   1c8d8:	vdiv.f64	d0, d16, d8
   1c8dc:	b	1cd34 <readstat_parse_dta+0x17bc>
   1c8e0:	mov	r6, sl
   1c8e4:	mov	r1, #0
   1c8e8:	ldr	r0, [r6, #128]!	; 0x80
   1c8ec:	ldr	r4, [r6, #152]	; 0x98
   1c8f0:	ldr	r3, [r4, #8]
   1c8f4:	ldr	r2, [r4, #20]
   1c8f8:	blx	r3
   1c8fc:	cmn	r0, #1
   1c900:	beq	1ccb0 <readstat_parse_dta+0x1738>
   1c904:	ldr	r1, [pc, #4060]	; 1d8e8 <readstat_parse_dta+0x2370>
   1c908:	mov	r0, sl
   1c90c:	add	r1, pc, r1
   1c910:	bl	1da28 <dta_read_tag>
   1c914:	mov	r7, r0
   1c918:	cmp	r0, #0
   1c91c:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1c920:	mov	r0, #100	; 0x64
   1c924:	str	r0, [sl, #224]	; 0xe0
   1c928:	mov	r0, #400	; 0x190
   1c92c:	bl	4bf8 <readstat_malloc@plt>
   1c930:	str	r0, [sl, #216]	; 0xd8
   1c934:	sub	r0, fp, #88	; 0x58
   1c938:	mov	r1, #3
   1c93c:	ldr	r3, [r4, #12]
   1c940:	ldr	r2, [r4, #20]
   1c944:	blx	r3
   1c948:	mov	r7, #2
   1c94c:	cmp	r0, #3
   1c950:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1c954:	add	r0, sp, #104	; 0x68
   1c958:	sub	r8, fp, #88	; 0x58
   1c95c:	add	r0, r0, #4
   1c960:	str	r0, [sp, #36]	; 0x24
   1c964:	ldr	r9, [pc, #3968]	; 1d8ec <readstat_parse_dta+0x2374>
   1c968:	add	r9, pc, r9
   1c96c:	mov	r0, r8
   1c970:	mov	r1, r9
   1c974:	mov	r2, #3
   1c978:	bl	4988 <memcmp@plt>
   1c97c:	cmp	r0, #0
   1c980:	beq	1c9c8 <readstat_parse_dta+0x1450>
   1c984:	ldr	r1, [pc, #4088]	; 1d984 <readstat_parse_dta+0x240c>
   1c988:	mov	r0, r8
   1c98c:	mov	r2, #3
   1c990:	add	r1, pc, r1
   1c994:	bl	4988 <memcmp@plt>
   1c998:	cmp	r0, #0
   1c99c:	bne	1cca4 <readstat_parse_dta+0x172c>
   1c9a0:	ldr	r1, [pc, #4064]	; 1d988 <readstat_parse_dta+0x2410>
   1c9a4:	mov	r0, sl
   1c9a8:	add	r1, pc, r1
   1c9ac:	bl	1da28 <dta_read_tag>
   1c9b0:	cmp	r0, #0
   1c9b4:	mov	r6, #2
   1c9b8:	mov	r7, r0
   1c9bc:	movweq	r6, #4
   1c9c0:	b	1cc78 <readstat_parse_dta+0x1700>
   1c9c4:	.word	0x0000a891
   1c9c8:	ldr	r1, [sl, #116]	; 0x74
   1c9cc:	ldr	r0, [sl, #280]	; 0x118
   1c9d0:	cmp	r1, #5
   1c9d4:	bcc	1ca28 <readstat_parse_dta+0x14b0>
   1c9d8:	ldr	r3, [r0, #12]
   1c9dc:	ldr	r2, [r0, #20]
   1c9e0:	add	r0, sp, #104	; 0x68
   1c9e4:	mov	r1, #17
   1c9e8:	blx	r3
   1c9ec:	mov	r7, #2
   1c9f0:	cmp	r0, #17
   1c9f4:	bne	1cb84 <readstat_parse_dta+0x160c>
   1c9f8:	ldr	r0, [sp, #60]	; 0x3c
   1c9fc:	ldr	r1, [sp, #104]	; 0x68
   1ca00:	ldrb	r0, [r0]
   1ca04:	str	r1, [sp, #56]	; 0x38
   1ca08:	tst	r0, #1
   1ca0c:	bne	1ca6c <readstat_parse_dta+0x14f4>
   1ca10:	ldr	r0, [sp, #36]	; 0x24
   1ca14:	ldr	r1, [r0]
   1ca18:	ldr	r0, [r0, #4]
   1ca1c:	str	r1, [sp, #44]	; 0x2c
   1ca20:	str	r0, [sp, #40]	; 0x28
   1ca24:	b	1ca9c <readstat_parse_dta+0x1524>
   1ca28:	ldr	r3, [r0, #12]
   1ca2c:	ldr	r2, [r0, #20]
   1ca30:	add	r0, sp, #104	; 0x68
   1ca34:	mov	r1, #13
   1ca38:	blx	r3
   1ca3c:	mov	r7, #2
   1ca40:	cmp	r0, #13
   1ca44:	bne	1cb84 <readstat_parse_dta+0x160c>
   1ca48:	ldr	r0, [sp, #60]	; 0x3c
   1ca4c:	ldr	r1, [sp, #104]	; 0x68
   1ca50:	ldrb	r0, [r0]
   1ca54:	str	r1, [sp, #56]	; 0x38
   1ca58:	tst	r0, #1
   1ca5c:	bne	1cab4 <readstat_parse_dta+0x153c>
   1ca60:	ldr	r0, [sp, #108]	; 0x6c
   1ca64:	str	r0, [sp, #44]	; 0x2c
   1ca68:	b	1cad8 <readstat_parse_dta+0x1560>
   1ca6c:	ldr	r0, [sp, #56]	; 0x38
   1ca70:	bl	47b4 <byteswap4@plt>
   1ca74:	str	r0, [sp, #56]	; 0x38
   1ca78:	ldr	r0, [sp, #36]	; 0x24
   1ca7c:	ldr	r1, [r0]
   1ca80:	ldr	r0, [r0, #4]
   1ca84:	str	r0, [sp, #40]	; 0x28
   1ca88:	ldr	r0, [sp, #60]	; 0x3c
   1ca8c:	str	r1, [sp, #44]	; 0x2c
   1ca90:	ldrb	r0, [r0]
   1ca94:	tst	r0, #1
   1ca98:	bne	1caf4 <readstat_parse_dta+0x157c>
   1ca9c:	ldr	r0, [sp, #117]	; 0x75
   1caa0:	mov	r7, #0
   1caa4:	str	r0, [sp, #48]	; 0x30
   1caa8:	ldrb	r0, [sp, #116]	; 0x74
   1caac:	str	r0, [sp, #52]	; 0x34
   1cab0:	b	1cb84 <readstat_parse_dta+0x160c>
   1cab4:	ldr	r0, [sp, #56]	; 0x38
   1cab8:	bl	47b4 <byteswap4@plt>
   1cabc:	str	r0, [sp, #56]	; 0x38
   1cac0:	ldr	r0, [sp, #60]	; 0x3c
   1cac4:	ldr	r1, [sp, #108]	; 0x6c
   1cac8:	ldrb	r0, [r0]
   1cacc:	str	r1, [sp, #44]	; 0x2c
   1cad0:	tst	r0, #1
   1cad4:	bne	1cb40 <readstat_parse_dta+0x15c8>
   1cad8:	mov	r0, #0
   1cadc:	str	r0, [sp, #40]	; 0x28
   1cae0:	ldr	r0, [sp, #113]	; 0x71
   1cae4:	str	r0, [sp, #48]	; 0x30
   1cae8:	ldrb	r0, [sp, #112]	; 0x70
   1caec:	str	r0, [sp, #52]	; 0x34
   1caf0:	b	1cb80 <readstat_parse_dta+0x1608>
   1caf4:	ldr	r0, [sp, #44]	; 0x2c
   1caf8:	ldr	r1, [sp, #40]	; 0x28
   1cafc:	bl	479c <byteswap8@plt>
   1cb00:	str	r0, [sp, #44]	; 0x2c
   1cb04:	ldr	r0, [sp, #60]	; 0x3c
   1cb08:	str	r1, [sp, #40]	; 0x28
   1cb0c:	ldr	r1, [sp, #117]	; 0x75
   1cb10:	mov	r7, #0
   1cb14:	ldrb	r0, [r0]
   1cb18:	str	r1, [sp, #48]	; 0x30
   1cb1c:	ldrb	r1, [sp, #116]	; 0x74
   1cb20:	tst	r0, #1
   1cb24:	str	r1, [sp, #52]	; 0x34
   1cb28:	beq	1cb84 <readstat_parse_dta+0x160c>
   1cb2c:	ldr	r0, [sp, #48]	; 0x30
   1cb30:	bl	47b4 <byteswap4@plt>
   1cb34:	str	r0, [sp, #48]	; 0x30
   1cb38:	b	1cb84 <readstat_parse_dta+0x160c>
   1cb3c:	.word	0x0000a67d
   1cb40:	ldr	r0, [sp, #44]	; 0x2c
   1cb44:	bl	47b4 <byteswap4@plt>
   1cb48:	str	r0, [sp, #44]	; 0x2c
   1cb4c:	ldr	r0, [sp, #60]	; 0x3c
   1cb50:	ldr	r1, [sp, #113]	; 0x71
   1cb54:	ldrb	r0, [r0]
   1cb58:	str	r1, [sp, #48]	; 0x30
   1cb5c:	ldrb	r1, [sp, #112]	; 0x70
   1cb60:	tst	r0, #1
   1cb64:	str	r1, [sp, #52]	; 0x34
   1cb68:	beq	1cb78 <readstat_parse_dta+0x1600>
   1cb6c:	ldr	r0, [sp, #48]	; 0x30
   1cb70:	bl	47b4 <byteswap4@plt>
   1cb74:	str	r0, [sp, #48]	; 0x30
   1cb78:	mov	r0, #0
   1cb7c:	str	r0, [sp, #40]	; 0x28
   1cb80:	mov	r7, #0
   1cb84:	mov	r6, #2
   1cb88:	cmp	r7, #0
   1cb8c:	bne	1cc78 <readstat_parse_dta+0x1700>
   1cb90:	ldr	r0, [sp, #52]	; 0x34
   1cb94:	uxtb	r0, r0
   1cb98:	cmp	r0, #130	; 0x82
   1cb9c:	bne	1cc64 <readstat_parse_dta+0x16ec>
   1cba0:	ldr	r1, [sl, #220]	; 0xdc
   1cba4:	ldr	r0, [sl, #224]	; 0xe0
   1cba8:	cmp	r1, r0
   1cbac:	bne	1cbd0 <readstat_parse_dta+0x1658>
   1cbb0:	lsl	r0, r1, #1
   1cbb4:	lsl	r1, r1, #3
   1cbb8:	str	r0, [sl, #224]	; 0xe0
   1cbbc:	ldr	r0, [sl, #216]	; 0xd8
   1cbc0:	bl	4cb8 <readstat_realloc@plt>
   1cbc4:	cmp	r0, #0
   1cbc8:	str	r0, [sl, #216]	; 0xd8
   1cbcc:	beq	1cc74 <readstat_parse_dta+0x16fc>
   1cbd0:	ldr	r0, [sp, #48]	; 0x30
   1cbd4:	add	r0, r0, #32
   1cbd8:	bl	4bf8 <readstat_malloc@plt>
   1cbdc:	cmp	r0, #0
   1cbe0:	beq	1cc74 <readstat_parse_dta+0x16fc>
   1cbe4:	mov	r7, r0
   1cbe8:	ldr	r0, [sp, #56]	; 0x38
   1cbec:	ldr	r2, [sp, #44]	; 0x2c
   1cbf0:	ldr	r3, [sp, #40]	; 0x28
   1cbf4:	strh	r0, [r7]
   1cbf8:	ldr	r0, [sp, #104]	; 0x68
   1cbfc:	ldrh	r1, [sp, #108]	; 0x6c
   1cc00:	strd	r2, [r7, #8]
   1cc04:	mov	r2, #130	; 0x82
   1cc08:	strb	r2, [r7, #16]
   1cc0c:	strh	r1, [r7, #6]
   1cc10:	str	r0, [r7, #2]
   1cc14:	ldr	r1, [sp, #48]	; 0x30
   1cc18:	ldrh	r0, [sp, #80]	; 0x50
   1cc1c:	ldrb	r2, [sp, #82]	; 0x52
   1cc20:	str	r1, [r7, #20]
   1cc24:	strb	r2, [r7, #19]
   1cc28:	strh	r0, [r7, #17]
   1cc2c:	ldr	r0, [sl, #216]	; 0xd8
   1cc30:	ldr	r3, [sl, #220]	; 0xdc
   1cc34:	add	r2, r3, #1
   1cc38:	str	r2, [sl, #220]	; 0xdc
   1cc3c:	str	r7, [r0, r3, lsl #2]
   1cc40:	add	r0, r7, #24
   1cc44:	ldr	r3, [r4, #12]
   1cc48:	ldr	r2, [r4, #20]
   1cc4c:	blx	r3
   1cc50:	ldr	r1, [r7, #20]
   1cc54:	subs	r7, r0, r1
   1cc58:	movwne	r7, #2
   1cc5c:	mov	r6, r7
   1cc60:	b	1cc78 <readstat_parse_dta+0x1700>
   1cc64:	mov	r6, #3
   1cc68:	mov	r7, #0
   1cc6c:	b	1cc78 <readstat_parse_dta+0x1700>
   1cc70:	.word	0x0000a641
   1cc74:	mov	r7, #3
   1cc78:	cmp	r6, #3
   1cc7c:	cmpne	r6, #0
   1cc80:	bne	1cd20 <readstat_parse_dta+0x17a8>
   1cc84:	ldr	r3, [r4, #12]
   1cc88:	ldr	r2, [r4, #20]
   1cc8c:	mov	r0, r8
   1cc90:	mov	r1, #3
   1cc94:	blx	r3
   1cc98:	cmp	r0, #3
   1cc9c:	beq	1c96c <readstat_parse_dta+0x13f4>
   1cca0:	b	1bcc0 <readstat_parse_dta+0x748>
   1cca4:	mov	r7, #5
   1cca8:	b	1bcc4 <readstat_parse_dta+0x74c>
   1ccac:	.word	0x0000a62b
   1ccb0:	ldr	r0, [sl, #264]	; 0x108
   1ccb4:	mov	r7, #15
   1ccb8:	cmp	r0, #0
   1ccbc:	beq	1bcc4 <readstat_parse_dta+0x74c>
   1ccc0:	ldrd	r0, [r6]
   1ccc4:	add	r4, sl, #288	; 0x120
   1ccc8:	stm	sp, {r0, r1}
   1cccc:	ldr	r2, [pc, #3372]	; 1da00 <readstat_parse_dta+0x2488>
   1ccd0:	add	r2, pc, r2
   1ccd4:	b	1cd04 <readstat_parse_dta+0x178c>
   1ccd8:	mov	r7, #15
   1ccdc:	b	1bcc4 <readstat_parse_dta+0x74c>
   1cce0:	ldr	r0, [sl, #264]	; 0x108
   1cce4:	mov	r7, #15
   1cce8:	cmp	r0, #0
   1ccec:	beq	1bcc4 <readstat_parse_dta+0x74c>
   1ccf0:	ldrd	r0, [r4]
   1ccf4:	stm	sp, {r0, r1}
   1ccf8:	add	r4, sl, #288	; 0x120
   1ccfc:	ldr	r2, [pc, #3320]	; 1d9fc <readstat_parse_dta+0x2484>
   1cd00:	add	r2, pc, r2
   1cd04:	mov	r0, r4
   1cd08:	mov	r1, #256	; 0x100
   1cd0c:	bl	4c4c <snprintf@plt>
   1cd10:	ldr	r2, [sl, #264]	; 0x108
   1cd14:	ldr	r1, [sl, #276]	; 0x114
   1cd18:	mov	r0, r4
   1cd1c:	b	1b6f0 <readstat_parse_dta+0x178>
   1cd20:	cmp	r7, #0
   1cd24:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1cd28:	b	1c85c <readstat_parse_dta+0x12e4>
   1cd2c:	.word	0x0000a53f
   1cd30:	vmov.i32	d0, #0	; 0x00000000
   1cd34:	ldr	r1, [sl, #268]	; 0x10c
   1cd38:	cmp	r1, #0
   1cd3c:	beq	1cd54 <readstat_parse_dta+0x17dc>
   1cd40:	ldr	r0, [sl, #276]	; 0x114
   1cd44:	blx	r1
   1cd48:	mov	r7, #4
   1cd4c:	cmp	r0, #0
   1cd50:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1cd54:	ldr	r0, [sl, #160]	; 0xa0
   1cd58:	ldr	r1, [sl, #280]	; 0x118
   1cd5c:	cmp	r0, #0
   1cd60:	str	r1, [sp, #44]	; 0x2c
   1cd64:	beq	1cd94 <readstat_parse_dta+0x181c>
   1cd68:	bl	4bf8 <readstat_malloc@plt>
   1cd6c:	cmp	r0, #0
   1cd70:	str	r0, [sp, #52]	; 0x34
   1cd74:	bne	1cd9c <readstat_parse_dta+0x1824>
   1cd78:	b	1bf38 <readstat_parse_dta+0x9c0>
   1cd7c:	.word	0x0000a51f
   1cd80:	.word	0x0000a4df
   1cd84:	.word	0x0000a4b0
   1cd88:	.word	0x0000a49c
   1cd8c:	.word	0x0000a45d
   1cd90:	.word	0x0000a44a
   1cd94:	mov	r0, #0
   1cd98:	str	r0, [sp, #52]	; 0x34
   1cd9c:	ldr	r0, [sp, #64]	; 0x40
   1cda0:	ldrd	r0, [r0]
   1cda4:	orrs	r1, r0, r1
   1cda8:	beq	1cdd0 <readstat_parse_dta+0x1858>
   1cdac:	ldr	r1, [sl, #160]	; 0xa0
   1cdb0:	mul	r0, r1, r0
   1cdb4:	ldr	r1, [sp, #44]	; 0x2c
   1cdb8:	ldr	r3, [r1, #8]
   1cdbc:	ldr	r2, [r1, #20]
   1cdc0:	mov	r1, #1
   1cdc4:	blx	r3
   1cdc8:	cmn	r0, #1
   1cdcc:	beq	1d4cc <readstat_parse_dta+0x1f54>
   1cdd0:	ldr	r0, [sp, #72]	; 0x48
   1cdd4:	ldr	r6, [r0]
   1cdd8:	ldr	r4, [r0, #4]
   1cddc:	subs	r0, r6, #1
   1cde0:	sbcs	r0, r4, #0
   1cde4:	blt	1d468 <readstat_parse_dta+0x1ef0>
   1cde8:	add	r0, sp, #80	; 0x50
   1cdec:	vmov.i32	q4, #0	; 0x00000000
   1cdf0:	orr	r1, r0, #2
   1cdf4:	str	r1, [sp, #36]	; 0x24
   1cdf8:	orr	r1, r0, #4
   1cdfc:	str	r1, [sp, #32]
   1ce00:	orr	r1, r0, #1
   1ce04:	add	r0, r0, #8
   1ce08:	str	r1, [sp, #28]
   1ce0c:	sub	r1, fp, #88	; 0x58
   1ce10:	str	r0, [sp, #56]	; 0x38
   1ce14:	add	r1, r1, #8
   1ce18:	str	r1, [sp, #16]
   1ce1c:	add	r1, sl, #208	; 0xd0
   1ce20:	str	r1, [sp, #20]
   1ce24:	add	r1, sl, #184	; 0xb8
   1ce28:	str	r1, [sp, #48]	; 0x30
   1ce2c:	ldr	r0, [pc, #3024]	; 1da04 <readstat_parse_dta+0x248c>
   1ce30:	add	r0, pc, r0
   1ce34:	add	r0, r0, #1
   1ce38:	str	r0, [sp, #24]
   1ce3c:	mov	r0, #0
   1ce40:	str	r0, [sp, #40]	; 0x28
   1ce44:	ldr	r0, [sp, #44]	; 0x2c
   1ce48:	ldr	r1, [sl, #160]	; 0xa0
   1ce4c:	ldr	r3, [r0, #12]
   1ce50:	ldr	r2, [r0, #20]
   1ce54:	ldr	r0, [sp, #52]	; 0x34
   1ce58:	blx	r3
   1ce5c:	ldr	r1, [sl, #160]	; 0xa0
   1ce60:	cmp	r0, r1
   1ce64:	bne	1d4f0 <readstat_parse_dta+0x1f78>
   1ce68:	ldr	r0, [sl, #148]	; 0x94
   1ce6c:	cmp	r0, #1
   1ce70:	blt	1d3d0 <readstat_parse_dta+0x1e58>
   1ce74:	mov	r8, #0
   1ce78:	mov	r9, #0
   1ce7c:	ldr	r0, [pc, #2948]	; 1da08 <readstat_parse_dta+0x2490>
   1ce80:	ldr	r3, [sp, #56]	; 0x38
   1ce84:	mov	r1, sl
   1ce88:	add	r2, sp, #100	; 0x64
   1ce8c:	add	r0, pc, r0
   1ce90:	vld1.64	{d16-d17}, [r0]
   1ce94:	add	r0, sp, #80	; 0x50
   1ce98:	vst1.64	{d16-d17}, [r0]
   1ce9c:	ldr	r0, [sl, #28]
   1cea0:	add	r0, r0, r9, lsl #1
   1cea4:	ldrh	r0, [r0]
   1cea8:	bl	4bbc <dta_type_info@plt>
   1ceac:	cmp	r0, #0
   1ceb0:	bne	1d4c4 <readstat_parse_dta+0x1f4c>
   1ceb4:	ldr	r2, [sl, #228]	; 0xe4
   1ceb8:	ldr	r0, [sp, #100]	; 0x64
   1cebc:	ldr	r2, [r2, r9, lsl #2]
   1cec0:	add	r1, r0, r8
   1cec4:	ldr	r2, [r2, #2144]	; 0x860
   1cec8:	cmp	r2, #0
   1cecc:	beq	1ced8 <readstat_parse_dta+0x1960>
   1ced0:	mov	r8, r1
   1ced4:	b	1d3c0 <readstat_parse_dta+0x1e48>
   1ced8:	ldr	r2, [sl, #160]	; 0xa0
   1cedc:	cmp	r1, r2
   1cee0:	bhi	1d4e4 <readstat_parse_dta+0x1f6c>
   1cee4:	ldr	r1, [sp, #88]	; 0x58
   1cee8:	cmp	r1, #6
   1ceec:	bhi	1d37c <readstat_parse_dta+0x1e04>
   1cef0:	add	r2, pc, #4
   1cef4:	ldr	r1, [r2, r1, lsl #2]
   1cef8:	add	pc, r2, r1
   1cefc:	.word	0x0000001c
   1cf00:	.word	0x0000005c
   1cf04:	.word	0x000000dc
   1cf08:	.word	0x00000150
   1cf0c:	.word	0x00000190
   1cf10:	.word	0x00000214
   1cf14:	.word	0x0000028c
   1cf18:	cmp	r0, #0
   1cf1c:	beq	1d264 <readstat_parse_dta+0x1cec>
   1cf20:	ldr	r1, [sp, #52]	; 0x34
   1cf24:	mov	r3, #0
   1cf28:	add	r1, r1, r8
   1cf2c:	ldrb	r2, [r1, r3]
   1cf30:	cmp	r2, #0
   1cf34:	beq	1d268 <readstat_parse_dta+0x1cf0>
   1cf38:	add	r3, r3, #1
   1cf3c:	cmp	r3, r0
   1cf40:	bcc	1cf2c <readstat_parse_dta+0x19b4>
   1cf44:	b	1d268 <readstat_parse_dta+0x1cf0>
   1cf48:	.word	0x0000a3a9
   1cf4c:	.word	0x0000a388
   1cf50:	.word	0x0000a2f0
   1cf54:	.word	0x0000a2dc
   1cf58:	ldr	r1, [sp, #60]	; 0x3c
   1cf5c:	ldr	r0, [sp, #52]	; 0x34
   1cf60:	ldrb	r1, [r1]
   1cf64:	ldrb	r0, [r0, r8]
   1cf68:	tst	r1, #2
   1cf6c:	beq	1cf74 <readstat_parse_dta+0x19fc>
   1cf70:	bl	4d3c <ones_to_twos_complement1@plt>
   1cf74:	ldrsb	r2, [sl, #193]	; 0xc1
   1cf78:	sxtb	r1, r0
   1cf7c:	mov	r6, #0
   1cf80:	mov	r7, #0
   1cf84:	cmp	r1, r2
   1cf88:	ble	1cfb8 <readstat_parse_dta+0x1a40>
   1cf8c:	ldr	r2, [sp, #60]	; 0x3c
   1cf90:	cmp	r1, #101	; 0x65
   1cf94:	mov	r1, #0
   1cf98:	mov	r7, #1
   1cf9c:	movwgt	r1, #1
   1cfa0:	ldrb	r2, [r2]
   1cfa4:	and	r2, r2, #8
   1cfa8:	and	r6, r1, r2, lsr #3
   1cfac:	cmp	r6, #0
   1cfb0:	movwne	r7, #2
   1cfb4:	subne	r6, r0, #5
   1cfb8:	strb	r0, [sp, #80]	; 0x50
   1cfbc:	ldr	r0, [sp, #28]
   1cfc0:	ldr	r1, [sp, #24]
   1cfc4:	mov	r2, #11
   1cfc8:	bl	4910 <memcpy@plt>
   1cfcc:	strb	r6, [sp, #92]	; 0x5c
   1cfd0:	strb	r7, [sp, #93]	; 0x5d
   1cfd4:	b	1d218 <readstat_parse_dta+0x1ca0>
   1cfd8:	ldr	r0, [sp, #52]	; 0x34
   1cfdc:	ldr	r1, [sp, #60]	; 0x3c
   1cfe0:	add	r0, r0, r8
   1cfe4:	ldrb	r1, [r1]
   1cfe8:	ldrh	r0, [r0]
   1cfec:	tst	r1, #1
   1cff0:	beq	1d000 <readstat_parse_dta+0x1a88>
   1cff4:	bl	48a4 <byteswap2@plt>
   1cff8:	ldr	r1, [sp, #60]	; 0x3c
   1cffc:	ldrb	r1, [r1]
   1d000:	tst	r1, #2
   1d004:	beq	1d010 <readstat_parse_dta+0x1a98>
   1d008:	sxth	r0, r0
   1d00c:	bl	48f8 <ones_to_twos_complement2@plt>
   1d010:	ldrsh	r2, [sl, #194]	; 0xc2
   1d014:	sxth	r3, r0
   1d018:	mov	r1, #0
   1d01c:	cmp	r3, r2
   1d020:	ble	1d1e4 <readstat_parse_dta+0x1c6c>
   1d024:	movw	r7, #32742	; 0x7fe6
   1d028:	mov	r2, #1
   1d02c:	cmp	r3, r7
   1d030:	blt	1d1e8 <readstat_parse_dta+0x1c70>
   1d034:	ldr	r3, [sp, #60]	; 0x3c
   1d038:	ldrb	r3, [r3]
   1d03c:	ands	r3, r3, #8
   1d040:	addne	r1, r0, #123	; 0x7b
   1d044:	movne	r2, #2
   1d048:	b	1d1e8 <readstat_parse_dta+0x1c70>
   1d04c:	ldr	r0, [sp, #52]	; 0x34
   1d050:	sub	r4, fp, #88	; 0x58
   1d054:	mov	r1, sl
   1d058:	add	r2, r0, r8
   1d05c:	mov	r0, r4
   1d060:	bl	1db30 <dta_interpret_int32_bytes>
   1d064:	vld1.64	{d16-d17}, [r4]
   1d068:	add	r0, sp, #80	; 0x50
   1d06c:	vst1.64	{d16-d17}, [r0]
   1d070:	b	1d37c <readstat_parse_dta+0x1e04>
   1d074:	.word	0x0000a29a
   1d078:	.word	0x0000a27f
   1d07c:	.word	0x0000a281
   1d080:	.word	0x0000a266
   1d084:	.word	0x0000a267
   1d088:	.word	0x0000a24d
   1d08c:	ldr	r1, [sp, #60]	; 0x3c
   1d090:	ldr	r0, [sp, #52]	; 0x34
   1d094:	ldrb	r1, [r1]
   1d098:	ldr	r0, [r0, r8]
   1d09c:	tst	r1, #1
   1d0a0:	beq	1d0a8 <readstat_parse_dta+0x1b30>
   1d0a4:	bl	47b4 <byteswap4@plt>
   1d0a8:	ldr	r2, [sl, #200]	; 0xc8
   1d0ac:	mov	r1, #0
   1d0b0:	cmp	r0, r2
   1d0b4:	ble	1d228 <readstat_parse_dta+0x1cb0>
   1d0b8:	mov	r2, #1
   1d0bc:	cmp	r0, #2130706432	; 0x7f000000
   1d0c0:	ble	1d0f4 <readstat_parse_dta+0x1b7c>
   1d0c4:	ldr	r3, [sp, #60]	; 0x3c
   1d0c8:	ldrb	r3, [r3]
   1d0cc:	ands	r3, r3, #8
   1d0d0:	movw	r3, #0
   1d0d4:	movt	r3, #32704	; 0x7fc0
   1d0d8:	beq	1d230 <readstat_parse_dta+0x1cb8>
   1d0dc:	movw	r1, #63488	; 0xf800
   1d0e0:	mov	r2, #2
   1d0e4:	movt	r1, #7
   1d0e8:	add	r0, r0, r1
   1d0ec:	mov	r1, #97	; 0x61
   1d0f0:	add	r1, r1, r0, lsr #11
   1d0f4:	movw	r3, #0
   1d0f8:	movt	r3, #32704	; 0x7fc0
   1d0fc:	b	1d230 <readstat_parse_dta+0x1cb8>
   1d100:	.word	0x0000a256
   1d104:	.word	0x0000a232
   1d108:	.word	0x0000a24d
   1d10c:	.word	0x0000a22b
   1d110:	ldr	r1, [sp, #52]	; 0x34
   1d114:	ldr	r2, [sp, #60]	; 0x3c
   1d118:	ldr	r0, [r1, r8]!
   1d11c:	ldrb	r2, [r2]
   1d120:	ldr	r1, [r1, #4]
   1d124:	tst	r2, #1
   1d128:	beq	1d130 <readstat_parse_dta+0x1bb8>
   1d12c:	bl	479c <byteswap8@plt>
   1d130:	ldr	r2, [sp, #20]
   1d134:	ldrd	r6, [r2]
   1d138:	mov	r2, #0
   1d13c:	subs	r3, r6, r0
   1d140:	sbcs	r3, r7, r1
   1d144:	bge	1d258 <readstat_parse_dta+0x1ce0>
   1d148:	subs	r0, r0, #1
   1d14c:	mov	r3, #0
   1d150:	mov	r2, #1
   1d154:	movw	r0, #0
   1d158:	movt	r0, #32736	; 0x7fe0
   1d15c:	sbcs	r0, r1, r0
   1d160:	blt	1d2b8 <readstat_parse_dta+0x1d40>
   1d164:	ldr	r0, [sp, #60]	; 0x3c
   1d168:	ldrb	r0, [r0]
   1d16c:	ands	r0, r0, #8
   1d170:	beq	1d2b8 <readstat_parse_dta+0x1d40>
   1d174:	add	r0, r1, #65280	; 0xff00
   1d178:	mov	r1, #97	; 0x61
   1d17c:	mov	r2, #2
   1d180:	add	r7, r1, r0, lsr #8
   1d184:	b	1d2bc <readstat_parse_dta+0x1d44>
   1d188:	sub	r0, fp, #88	; 0x58
   1d18c:	vst1.64	{d8-d9}, [r0]!
   1d190:	vst1.64	{d8-d9}, [r0]
   1d194:	ldr	r0, [sp, #52]	; 0x34
   1d198:	add	r1, r0, r8
   1d19c:	ldr	r0, [sl, #112]	; 0x70
   1d1a0:	cmp	r0, #4
   1d1a4:	beq	1d298 <readstat_parse_dta+0x1d20>
   1d1a8:	cmp	r0, #2
   1d1ac:	bne	1d340 <readstat_parse_dta+0x1dc8>
   1d1b0:	ldr	r2, [sl, #232]	; 0xe8
   1d1b4:	ldrb	r0, [r1]
   1d1b8:	cmp	r2, #2
   1d1bc:	bne	1d2e8 <readstat_parse_dta+0x1d70>
   1d1c0:	ldrb	r2, [r1, #1]
   1d1c4:	orr	r0, r2, r0, lsl #8
   1d1c8:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d1cc:	ldrb	r0, [r1, #2]
   1d1d0:	ldrb	r2, [r1, #3]
   1d1d4:	orr	r7, r2, r0, lsl #8
   1d1d8:	ldr	r0, [r1, #4]
   1d1dc:	rev	r6, r0
   1d1e0:	b	1d338 <readstat_parse_dta+0x1dc0>
   1d1e4:	mov	r2, #0
   1d1e8:	ldr	r3, [pc, #2080]	; 1da10 <readstat_parse_dta+0x2498>
   1d1ec:	strh	r0, [sp, #80]	; 0x50
   1d1f0:	ldr	r0, [sp, #36]	; 0x24
   1d1f4:	add	r3, pc, r3
   1d1f8:	mov	r7, r3
   1d1fc:	ldrh	r3, [r3, #10]
   1d200:	add	r7, r7, #2
   1d204:	vld1.16	{d16}, [r7]
   1d208:	strh	r3, [r0, #8]
   1d20c:	vst1.16	{d16}, [r0]
   1d210:	strb	r1, [sp, #92]	; 0x5c
   1d214:	strb	r2, [sp, #93]	; 0x5d
   1d218:	mov	r0, #0
   1d21c:	strh	r0, [sp, #94]	; 0x5e
   1d220:	b	1d37c <readstat_parse_dta+0x1e04>
   1d224:	.word	0x0000a192
   1d228:	mov	r2, #0
   1d22c:	mov	r3, r0
   1d230:	ldr	r0, [sp, #32]
   1d234:	str	r3, [sp, #80]	; 0x50
   1d238:	mov	r3, #0
   1d23c:	mov	r7, #4
   1d240:	str	r3, [r0]
   1d244:	str	r7, [r0, #4]
   1d248:	strb	r2, [sp, #93]	; 0x5d
   1d24c:	strb	r1, [sp, #92]	; 0x5c
   1d250:	strh	r3, [sp, #94]	; 0x5e
   1d254:	b	1d37c <readstat_parse_dta+0x1e04>
   1d258:	mov	r7, #0
   1d25c:	mov	r3, r0
   1d260:	b	1d2c4 <readstat_parse_dta+0x1d4c>
   1d264:	mov	r3, #0
   1d268:	ldr	r0, [sl, #236]	; 0xec
   1d26c:	mov	r1, #2048	; 0x800
   1d270:	str	r0, [sp]
   1d274:	ldr	r0, [sp, #52]	; 0x34
   1d278:	add	r2, r0, r8
   1d27c:	add	r0, sp, #104	; 0x68
   1d280:	bl	4c04 <readstat_convert@plt>
   1d284:	cmp	r0, #0
   1d288:	bne	1d4c4 <readstat_parse_dta+0x1f4c>
   1d28c:	add	r0, sp, #104	; 0x68
   1d290:	str	r0, [sp, #80]	; 0x50
   1d294:	b	1d37c <readstat_parse_dta+0x1e04>
   1d298:	ldr	r0, [r1]
   1d29c:	ldr	r6, [r1, #4]
   1d2a0:	ldr	r1, [sp, #60]	; 0x3c
   1d2a4:	ldrb	r1, [r1]
   1d2a8:	tst	r1, #1
   1d2ac:	bne	1d310 <readstat_parse_dta+0x1d98>
   1d2b0:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d2b4:	b	1d334 <readstat_parse_dta+0x1dbc>
   1d2b8:	mov	r7, #0
   1d2bc:	movw	r1, #0
   1d2c0:	movt	r1, #32760	; 0x7ff8
   1d2c4:	mov	r0, #5
   1d2c8:	str	r3, [sp, #80]	; 0x50
   1d2cc:	str	r0, [sp, #88]	; 0x58
   1d2d0:	mov	r0, #0
   1d2d4:	strb	r7, [sp, #92]	; 0x5c
   1d2d8:	strb	r2, [sp, #93]	; 0x5d
   1d2dc:	strh	r0, [sp, #94]	; 0x5e
   1d2e0:	str	r1, [sp, #84]	; 0x54
   1d2e4:	b	1d37c <readstat_parse_dta+0x1e04>
   1d2e8:	ldrb	r2, [r1, #1]
   1d2ec:	orr	r0, r0, r2, lsl #8
   1d2f0:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d2f4:	ldrb	r0, [r1, #7]
   1d2f8:	ldrb	r2, [r1, #6]
   1d2fc:	ldr	r6, [r1, #2]
   1d300:	orr	r7, r2, r0, lsl #8
   1d304:	b	1d338 <readstat_parse_dta+0x1dc0>
   1d308:	.word	0x00009fcc
   1d30c:	.word	0x00009fb6
   1d310:	bl	47b4 <byteswap4@plt>
   1d314:	ldr	r1, [sp, #60]	; 0x3c
   1d318:	ldrb	r1, [r1]
   1d31c:	strh	r0, [fp, #-88]	; 0xffffffa8
   1d320:	tst	r1, #1
   1d324:	beq	1d334 <readstat_parse_dta+0x1dbc>
   1d328:	mov	r0, r6
   1d32c:	bl	47b4 <byteswap4@plt>
   1d330:	mov	r6, r0
   1d334:	mov	r7, #0
   1d338:	ldr	r0, [sp, #16]
   1d33c:	strd	r6, [r0]
   1d340:	ldrd	r2, [sl, #216]	; 0xd8
   1d344:	ldr	r0, [pc, #1728]	; 1da0c <readstat_parse_dta+0x2494>
   1d348:	add	r0, pc, r0
   1d34c:	mov	r1, r2
   1d350:	mov	r2, r3
   1d354:	mov	r3, #4
   1d358:	str	r0, [sp]
   1d35c:	sub	r0, fp, #88	; 0x58
   1d360:	bl	4c7c <bsearch@plt>
   1d364:	cmp	r0, #0
   1d368:	ldrne	r0, [r0]
   1d36c:	addne	r0, r0, #24
   1d370:	strne	r0, [sp, #80]	; 0x50
   1d374:	mov	r0, #0
   1d378:	str	r0, [sp, #88]	; 0x58
   1d37c:	ldr	r0, [sl, #228]	; 0xe4
   1d380:	ldr	r2, [sp, #56]	; 0x38
   1d384:	ldr	ip, [sl, #256]	; 0x100
   1d388:	ldr	r6, [sl, #276]	; 0x114
   1d38c:	ldr	r1, [r0, r9, lsl #2]
   1d390:	ldr	r0, [sp, #48]	; 0x30
   1d394:	ldr	r0, [r0]
   1d398:	ldm	r2, {r4, r7}
   1d39c:	ldr	r2, [sp, #80]	; 0x50
   1d3a0:	ldr	r3, [sp, #84]	; 0x54
   1d3a4:	stm	sp, {r4, r7}
   1d3a8:	str	r6, [sp, #8]
   1d3ac:	blx	ip
   1d3b0:	cmp	r0, #0
   1d3b4:	bne	1d4dc <readstat_parse_dta+0x1f64>
   1d3b8:	ldr	r0, [sp, #100]	; 0x64
   1d3bc:	add	r8, r0, r8
   1d3c0:	ldr	r0, [sl, #148]	; 0x94
   1d3c4:	add	r9, r9, #1
   1d3c8:	cmp	r9, r0
   1d3cc:	blt	1ce7c <readstat_parse_dta+0x1904>
   1d3d0:	ldr	r2, [sp, #48]	; 0x30
   1d3d4:	ldrd	r0, [r2]
   1d3d8:	adds	r0, r0, #1
   1d3dc:	adc	r1, r1, #0
   1d3e0:	strd	r0, [r2]
   1d3e4:	ldr	r2, [sp, #72]	; 0x48
   1d3e8:	ldr	r6, [r2]
   1d3ec:	ldr	r4, [r2, #4]
   1d3f0:	subs	r2, r6, #1
   1d3f4:	sbcs	r2, r4, #0
   1d3f8:	blt	1d424 <readstat_parse_dta+0x1eac>
   1d3fc:	bl	23668 <__aeabi_l2d>
   1d400:	mov	r8, r0
   1d404:	mov	r7, r1
   1d408:	mov	r0, r6
   1d40c:	mov	r1, r4
   1d410:	bl	23668 <__aeabi_l2d>
   1d414:	vmov	d16, r0, r1
   1d418:	vmov	d17, r8, r7
   1d41c:	vdiv.f64	d0, d17, d16
   1d420:	b	1d428 <readstat_parse_dta+0x1eb0>
   1d424:	vmov.i32	d0, #0	; 0x00000000
   1d428:	ldr	r1, [sl, #268]	; 0x10c
   1d42c:	cmp	r1, #0
   1d430:	beq	1d450 <readstat_parse_dta+0x1ed8>
   1d434:	ldr	r0, [sl, #276]	; 0x114
   1d438:	blx	r1
   1d43c:	cmp	r0, #0
   1d440:	bne	1d4dc <readstat_parse_dta+0x1f64>
   1d444:	ldr	r0, [sp, #72]	; 0x48
   1d448:	ldr	r6, [r0]
   1d44c:	ldr	r4, [r0, #4]
   1d450:	ldr	r0, [sp, #40]	; 0x28
   1d454:	add	r0, r0, #1
   1d458:	str	r0, [sp, #40]	; 0x28
   1d45c:	subs	r0, r0, r6
   1d460:	rscs	r0, r4, #0
   1d464:	blt	1ce44 <readstat_parse_dta+0x18cc>
   1d468:	ldr	r0, [sp, #64]	; 0x40
   1d46c:	ldr	r2, [sp, #68]	; 0x44
   1d470:	mov	r7, #0
   1d474:	ldrd	r0, [r0]
   1d478:	ldrd	r2, [r2]
   1d47c:	subs	r0, r2, r0
   1d480:	sbc	r1, r3, r1
   1d484:	subs	r2, r6, r0
   1d488:	sbcs	r1, r4, r1
   1d48c:	bge	1d4f4 <readstat_parse_dta+0x1f7c>
   1d490:	ldr	r1, [sl, #160]	; 0xa0
   1d494:	sub	r0, r0, r6
   1d498:	mul	r0, r1, r0
   1d49c:	ldr	r1, [sp, #44]	; 0x2c
   1d4a0:	ldr	r3, [r1, #8]
   1d4a4:	ldr	r2, [r1, #20]
   1d4a8:	mov	r1, #1
   1d4ac:	blx	r3
   1d4b0:	mov	r7, #0
   1d4b4:	cmn	r0, #1
   1d4b8:	movweq	r7, #15
   1d4bc:	b	1d4f4 <readstat_parse_dta+0x1f7c>
   1d4c0:	.word	0x00009e06
   1d4c4:	mov	r7, r0
   1d4c8:	b	1d4f4 <readstat_parse_dta+0x1f7c>
   1d4cc:	mov	r7, #15
   1d4d0:	b	1d4f4 <readstat_parse_dta+0x1f7c>
   1d4d4:	mov	r7, #4
   1d4d8:	b	1c7e4 <readstat_parse_dta+0x126c>
   1d4dc:	mov	r7, #4
   1d4e0:	b	1d4f4 <readstat_parse_dta+0x1f7c>
   1d4e4:	mov	r7, #5
   1d4e8:	b	1d4f4 <readstat_parse_dta+0x1f7c>
   1d4ec:	.word	0x0000a099
   1d4f0:	mov	r7, #2
   1d4f4:	ldr	r0, [sp, #52]	; 0x34
   1d4f8:	cmp	r0, #0
   1d4fc:	beq	1d508 <readstat_parse_dta+0x1f90>
   1d500:	ldr	r0, [sp, #52]	; 0x34
   1d504:	bl	48bc <free@plt>
   1d508:	cmp	r7, #0
   1d50c:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1d510:	ldr	r1, [pc, #1276]	; 1da14 <readstat_parse_dta+0x249c>
   1d514:	mov	r0, sl
   1d518:	add	r1, pc, r1
   1d51c:	bl	1da28 <dta_read_tag>
   1d520:	mov	r7, r0
   1d524:	cmp	r0, #0
   1d528:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1d52c:	ldr	r8, [sl, #280]	; 0x118
   1d530:	mov	r4, sl
   1d534:	ldr	r3, [r8, #8]
   1d538:	ldr	r2, [r8, #20]
   1d53c:	mov	r1, #0
   1d540:	ldr	r0, [r4, #136]!	; 0x88
   1d544:	blx	r3
   1d548:	cmn	r0, #1
   1d54c:	beq	1d598 <readstat_parse_dta+0x2020>
   1d550:	ldr	r1, [pc, #1220]	; 1da1c <readstat_parse_dta+0x24a4>
   1d554:	mov	r0, sl
   1d558:	add	r1, pc, r1
   1d55c:	bl	1da28 <dta_read_tag>
   1d560:	mov	r7, r0
   1d564:	cmp	r0, #0
   1d568:	bne	1bcc4 <readstat_parse_dta+0x74c>
   1d56c:	ldr	r0, [sl, #260]	; 0x104
   1d570:	cmp	r0, #0
   1d574:	beq	1d974 <readstat_parse_dta+0x23fc>
   1d578:	sub	r0, fp, #88	; 0x58
   1d57c:	add	r0, r0, #8
   1d580:	str	r0, [sp, #44]	; 0x2c
   1d584:	mov	r0, #0
   1d588:	str	r0, [sp, #64]	; 0x40
   1d58c:	mov	r0, #0
   1d590:	str	r0, [sp, #68]	; 0x44
   1d594:	b	1d898 <readstat_parse_dta+0x2320>
   1d598:	ldr	r0, [sl, #264]	; 0x108
   1d59c:	mov	r7, #15
   1d5a0:	cmp	r0, #0
   1d5a4:	beq	1bcc4 <readstat_parse_dta+0x74c>
   1d5a8:	ldrd	r0, [r4]
   1d5ac:	add	r4, sl, #288	; 0x120
   1d5b0:	stm	sp, {r0, r1}
   1d5b4:	ldr	r2, [pc, #1116]	; 1da18 <readstat_parse_dta+0x24a0>
   1d5b8:	add	r2, pc, r2
   1d5bc:	b	1cd04 <readstat_parse_dta+0x178c>
   1d5c0:	ldr	r0, [sl, #108]	; 0x6c
   1d5c4:	ldr	r3, [r8, #8]
   1d5c8:	ldr	r2, [r8, #20]
   1d5cc:	mov	r1, #1
   1d5d0:	blx	r3
   1d5d4:	cmn	r0, #1
   1d5d8:	beq	1d990 <readstat_parse_dta+0x2418>
   1d5dc:	ldr	r0, [sp, #68]	; 0x44
   1d5e0:	mov	r1, r4
   1d5e4:	bl	4cb8 <readstat_realloc@plt>
   1d5e8:	cmp	r0, #0
   1d5ec:	str	r0, [sp, #68]	; 0x44
   1d5f0:	beq	1d9d4 <readstat_parse_dta+0x245c>
   1d5f4:	ldr	r3, [r8, #12]
   1d5f8:	ldr	r2, [r8, #20]
   1d5fc:	ldr	r0, [sp, #68]	; 0x44
   1d600:	mov	r1, r4
   1d604:	blx	r3
   1d608:	cmp	r0, r4
   1d60c:	bcc	1d9dc <readstat_parse_dta+0x2464>
   1d610:	ldr	r0, [sl, #100]	; 0x64
   1d614:	cmp	r0, #2
   1d618:	bne	1d6c8 <readstat_parse_dta+0x2150>
   1d61c:	cmp	r9, #0
   1d620:	beq	1d898 <readstat_parse_dta+0x2320>
   1d624:	ldr	r6, [sp, #68]	; 0x44
   1d628:	mov	r4, #0
   1d62c:	ldr	r0, [sl, #236]	; 0xec
   1d630:	mov	r1, #33	; 0x21
   1d634:	mov	r2, r6
   1d638:	mov	r3, #8
   1d63c:	str	r0, [sp]
   1d640:	sub	r0, fp, #88	; 0x58
   1d644:	bl	4c04 <readstat_convert@plt>
   1d648:	cmp	r0, #0
   1d64c:	bne	1d97c <readstat_parse_dta+0x2404>
   1d650:	ldr	r0, [sp, #72]	; 0x48
   1d654:	bfc	r0, #0, #10
   1d658:	str	r0, [sp, #72]	; 0x48
   1d65c:	ldrb	r0, [fp, #-88]	; 0xffffffa8
   1d660:	cmp	r0, #0
   1d664:	beq	1d6a4 <readstat_parse_dta+0x212c>
   1d668:	mov	r2, #3
   1d66c:	ldr	r1, [sl, #260]	; 0x104
   1d670:	ldr	r0, [sl, #276]	; 0x114
   1d674:	mov	r3, #0
   1d678:	str	r2, [sp]
   1d67c:	ldr	r2, [sp, #72]	; 0x48
   1d680:	str	r0, [sp, #12]
   1d684:	add	r0, sp, #104	; 0x68
   1d688:	str	r2, [sp, #4]
   1d68c:	sub	r2, fp, #88	; 0x58
   1d690:	str	r2, [sp, #8]
   1d694:	mov	r2, r4
   1d698:	blx	r1
   1d69c:	cmp	r0, #0
   1d6a0:	bne	1d98c <readstat_parse_dta+0x2414>
   1d6a4:	add	r4, r4, #1
   1d6a8:	add	r6, r6, #8
   1d6ac:	cmp	r4, r9
   1d6b0:	bcc	1d62c <readstat_parse_dta+0x20b4>
   1d6b4:	b	1d898 <readstat_parse_dta+0x2320>
   1d6b8:	.word	0x00009d0a
   1d6bc:	.word	0x00009cef
   1d6c0:	.word	0x00009cbe
   1d6c4:	.word	0x00009bae
   1d6c8:	cmp	r4, #9
   1d6cc:	bcc	1d898 <readstat_parse_dta+0x2320>
   1d6d0:	ldr	r1, [pc, #844]	; 1da24 <readstat_parse_dta+0x24ac>
   1d6d4:	mov	r0, sl
   1d6d8:	add	r1, pc, r1
   1d6dc:	bl	1da28 <dta_read_tag>
   1d6e0:	cmp	r0, #0
   1d6e4:	bne	1d9bc <readstat_parse_dta+0x2444>
   1d6e8:	ldr	r0, [sp, #68]	; 0x44
   1d6ec:	ldr	r1, [r0]
   1d6f0:	ldr	r0, [r0, #4]
   1d6f4:	str	r0, [sp, #56]	; 0x38
   1d6f8:	ldr	r0, [sp, #60]	; 0x3c
   1d6fc:	str	r1, [sp, #48]	; 0x30
   1d700:	ldrb	r0, [r0]
   1d704:	tst	r0, #1
   1d708:	beq	1d724 <readstat_parse_dta+0x21ac>
   1d70c:	ldr	r0, [sp, #48]	; 0x30
   1d710:	bl	47b4 <byteswap4@plt>
   1d714:	str	r0, [sp, #48]	; 0x30
   1d718:	ldr	r0, [sp, #56]	; 0x38
   1d71c:	bl	47b4 <byteswap4@plt>
   1d720:	str	r0, [sp, #56]	; 0x38
   1d724:	ldr	r1, [sp, #56]	; 0x38
   1d728:	sub	r0, r4, #8
   1d72c:	mov	r7, #0
   1d730:	cmp	r0, r1
   1d734:	bcc	1d99c <readstat_parse_dta+0x2424>
   1d738:	ldr	r1, [sp, #56]	; 0x38
   1d73c:	sub	r0, r0, r1
   1d740:	ldr	r1, [sp, #48]	; 0x30
   1d744:	cmp	r1, r0, lsr #3
   1d748:	bhi	1d99c <readstat_parse_dta+0x2424>
   1d74c:	ldr	r2, [sp, #56]	; 0x38
   1d750:	mov	r0, #1
   1d754:	orr	r1, r0, r2, lsl #2
   1d758:	movw	r0, #32001	; 0x7d01
   1d75c:	cmp	r2, r0
   1d760:	ldr	r0, [sp, #64]	; 0x40
   1d764:	movwhi	r1, #62465	; 0xf401
   1d768:	movthi	r1, #1
   1d76c:	str	r1, [sp, #40]	; 0x28
   1d770:	bl	49e8 <realloc@plt>
   1d774:	cmp	r0, #0
   1d778:	str	r0, [sp, #64]	; 0x40
   1d77c:	beq	1d9ec <readstat_parse_dta+0x2474>
   1d780:	ldr	r0, [sp, #68]	; 0x44
   1d784:	add	r0, r0, #8
   1d788:	str	r0, [sp, #52]	; 0x34
   1d78c:	ldr	r0, [sp, #48]	; 0x30
   1d790:	cmp	r0, #0
   1d794:	ldrne	r0, [sp, #60]	; 0x3c
   1d798:	ldrbne	r0, [r0]
   1d79c:	andsne	r0, r0, #1
   1d7a0:	beq	1d7c0 <readstat_parse_dta+0x2248>
   1d7a4:	ldr	r6, [sp, #52]	; 0x34
   1d7a8:	ldr	r7, [sp, #48]	; 0x30
   1d7ac:	ldr	r0, [r6]
   1d7b0:	bl	47b4 <byteswap4@plt>
   1d7b4:	str	r0, [r6], #4
   1d7b8:	subs	r7, r7, #1
   1d7bc:	bne	1d7ac <readstat_parse_dta+0x2234>
   1d7c0:	ldr	r0, [sp, #48]	; 0x30
   1d7c4:	cmp	r0, #0
   1d7c8:	beq	1d898 <readstat_parse_dta+0x2320>
   1d7cc:	ldr	r1, [sp, #68]	; 0x44
   1d7d0:	ldr	r2, [sp, #48]	; 0x30
   1d7d4:	mov	r6, #0
   1d7d8:	add	r0, r1, r2, lsl #3
   1d7dc:	add	r0, r0, #8
   1d7e0:	str	r0, [sp, #36]	; 0x24
   1d7e4:	add	r0, r1, r2, lsl #2
   1d7e8:	add	r9, r0, #8
   1d7ec:	ldr	r0, [sp, #52]	; 0x34
   1d7f0:	ldr	r1, [sp, #56]	; 0x38
   1d7f4:	ldr	r0, [r0, r6, lsl #2]
   1d7f8:	cmp	r0, r1
   1d7fc:	bcs	1d9c4 <readstat_parse_dta+0x244c>
   1d800:	sub	r0, fp, #88	; 0x58
   1d804:	mov	r1, sl
   1d808:	mov	r2, r9
   1d80c:	bl	1db30 <dta_interpret_int32_bytes>
   1d810:	ldr	r0, [sp, #52]	; 0x34
   1d814:	ldr	r1, [sl, #236]	; 0xec
   1d818:	ldr	r0, [r0, r6, lsl #2]
   1d81c:	str	r1, [sp]
   1d820:	ldr	r1, [sp, #36]	; 0x24
   1d824:	add	r2, r1, r0
   1d828:	ldr	r1, [sp, #56]	; 0x38
   1d82c:	sub	r3, r1, r0
   1d830:	ldr	r0, [sp, #64]	; 0x40
   1d834:	ldr	r1, [sp, #40]	; 0x28
   1d838:	cmp	r3, #32000	; 0x7d00
   1d83c:	movcs	r3, #32000	; 0x7d00
   1d840:	bl	4c04 <readstat_convert@plt>
   1d844:	cmp	r0, #0
   1d848:	bne	1d9bc <readstat_parse_dta+0x2444>
   1d84c:	ldr	r0, [sp, #44]	; 0x2c
   1d850:	ldr	r7, [sl, #260]	; 0x104
   1d854:	ldr	r4, [sl, #276]	; 0x114
   1d858:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d85c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d860:	ldrd	r0, [r0]
   1d864:	stm	sp, {r0, r1}
   1d868:	str	r4, [sp, #12]
   1d86c:	ldr	r0, [sp, #64]	; 0x40
   1d870:	str	r0, [sp, #8]
   1d874:	add	r0, sp, #104	; 0x68
   1d878:	blx	r7
   1d87c:	cmp	r0, #0
   1d880:	bne	1d9cc <readstat_parse_dta+0x2454>
   1d884:	ldr	r0, [sp, #48]	; 0x30
   1d888:	add	r6, r6, #1
   1d88c:	add	r9, r9, #4
   1d890:	cmp	r6, r0
   1d894:	bcc	1d7ec <readstat_parse_dta+0x2274>
   1d898:	ldr	r0, [sl, #100]	; 0x64
   1d89c:	cmp	r0, #2
   1d8a0:	bne	1d8f0 <readstat_parse_dta+0x2378>
   1d8a4:	ldr	r3, [r8, #12]
   1d8a8:	ldr	r2, [r8, #20]
   1d8ac:	sub	r0, fp, #88	; 0x58
   1d8b0:	mov	r1, #2
   1d8b4:	blx	r3
   1d8b8:	cmp	r0, #2
   1d8bc:	bcc	1d9e4 <readstat_parse_dta+0x246c>
   1d8c0:	ldr	r0, [sp, #60]	; 0x3c
   1d8c4:	ldrsh	r4, [fp, #-88]	; 0xffffffa8
   1d8c8:	ldrb	r0, [r0]
   1d8cc:	tst	r0, #1
   1d8d0:	beq	1d8e0 <readstat_parse_dta+0x2368>
   1d8d4:	uxth	r0, r4
   1d8d8:	bl	48a4 <byteswap2@plt>
   1d8dc:	mov	r4, r0
   1d8e0:	lsr	r9, r4, #3
   1d8e4:	b	1d94c <readstat_parse_dta+0x23d4>
   1d8e8:	.word	0x00009b26
   1d8ec:	.word	0x00009ad2
   1d8f0:	ldr	r1, [pc, #296]	; 1da20 <readstat_parse_dta+0x24a8>
   1d8f4:	mov	r0, sl
   1d8f8:	add	r1, pc, r1
   1d8fc:	bl	1da28 <dta_read_tag>
   1d900:	mov	r7, #0
   1d904:	cmp	r0, #0
   1d908:	bne	1d990 <readstat_parse_dta+0x2418>
   1d90c:	ldr	r3, [r8, #12]
   1d910:	ldr	r2, [r8, #20]
   1d914:	sub	r0, fp, #88	; 0x58
   1d918:	mov	r1, #4
   1d91c:	blx	r3
   1d920:	cmp	r0, #4
   1d924:	bcc	1d990 <readstat_parse_dta+0x2418>
   1d928:	ldr	r0, [sp, #60]	; 0x3c
   1d92c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   1d930:	ldrb	r0, [r0]
   1d934:	tst	r0, #1
   1d938:	beq	1d948 <readstat_parse_dta+0x23d0>
   1d93c:	mov	r0, r4
   1d940:	bl	47b4 <byteswap4@plt>
   1d944:	mov	r4, r0
   1d948:	mov	r9, #0
   1d94c:	ldr	r1, [sl, #104]	; 0x68
   1d950:	ldr	r3, [r8, #12]
   1d954:	ldr	r2, [r8, #20]
   1d958:	add	r0, sp, #104	; 0x68
   1d95c:	blx	r3
   1d960:	ldr	r1, [sl, #104]	; 0x68
   1d964:	mov	r7, #0
   1d968:	cmp	r0, r1
   1d96c:	bcs	1d5c0 <readstat_parse_dta+0x2048>
   1d970:	b	1d990 <readstat_parse_dta+0x2418>
   1d974:	mov	r7, #0
   1d978:	b	1bcc4 <readstat_parse_dta+0x74c>
   1d97c:	mov	r7, r0
   1d980:	b	1d990 <readstat_parse_dta+0x2418>
   1d984:	.word	0x00009aae
   1d988:	.word	0x00009bf7
   1d98c:	mov	r7, #4
   1d990:	ldr	r0, [sp, #68]	; 0x44
   1d994:	cmp	r0, #0
   1d998:	beq	1d9a4 <readstat_parse_dta+0x242c>
   1d99c:	ldr	r0, [sp, #68]	; 0x44
   1d9a0:	bl	48bc <free@plt>
   1d9a4:	ldr	r0, [sp, #64]	; 0x40
   1d9a8:	cmp	r0, #0
   1d9ac:	beq	1bcc4 <readstat_parse_dta+0x74c>
   1d9b0:	ldr	r0, [sp, #64]	; 0x40
   1d9b4:	bl	48bc <free@plt>
   1d9b8:	b	1bcc4 <readstat_parse_dta+0x74c>
   1d9bc:	mov	r7, r0
   1d9c0:	b	1d99c <readstat_parse_dta+0x2424>
   1d9c4:	mov	r7, #5
   1d9c8:	b	1d99c <readstat_parse_dta+0x2424>
   1d9cc:	mov	r7, #4
   1d9d0:	b	1d99c <readstat_parse_dta+0x2424>
   1d9d4:	mov	r7, #3
   1d9d8:	b	1d9a4 <readstat_parse_dta+0x242c>
   1d9dc:	mov	r7, #0
   1d9e0:	b	1d99c <readstat_parse_dta+0x2424>
   1d9e4:	mov	r7, #0
   1d9e8:	b	1d990 <readstat_parse_dta+0x2418>
   1d9ec:	mov	r0, #0
   1d9f0:	mov	r7, #3
   1d9f4:	str	r0, [sp, #64]	; 0x40
   1d9f8:	b	1d99c <readstat_parse_dta+0x2424>
   1d9fc:	.word	0x000096a9
   1da00:	.word	0x00009734
   1da04:	.word	0x00009688
   1da08:	.word	0x0000961c
   1da0c:	.word	0x000007bc
   1da10:	.word	0x000092d4
   1da14:	.word	0x00008f31
   1da18:	.word	0x00008e99
   1da1c:	.word	0x00008f2e
   1da20:	.word	0x00008b9d
   1da24:	.word	0x00008dc3

0001da28 <dta_read_tag>:
   1da28:	push	{r4, r5, r6, sl, fp, lr}
   1da2c:	add	fp, sp, #16
   1da30:	sub	sp, sp, #256	; 0x100
   1da34:	mov	r6, r0
   1da38:	ldr	r0, [r0, #284]	; 0x11c
   1da3c:	mov	r4, r1
   1da40:	cmp	r0, #0
   1da44:	beq	1da58 <dta_read_tag+0x30>
   1da48:	ldrb	r1, [r6, #192]	; 0xc0
   1da4c:	mov	r0, #0
   1da50:	tst	r1, #4
   1da54:	beq	1daa4 <dta_read_tag+0x7c>
   1da58:	mov	r0, r4
   1da5c:	bl	4bd4 <strlen@plt>
   1da60:	mov	r5, r0
   1da64:	ldr	r0, [r6, #280]	; 0x118
   1da68:	mov	r1, r5
   1da6c:	ldr	r3, [r0, #12]
   1da70:	ldr	r2, [r0, #20]
   1da74:	mov	r0, sp
   1da78:	blx	r3
   1da7c:	mov	r1, r0
   1da80:	mov	r0, #2
   1da84:	cmp	r1, r5
   1da88:	bne	1daa4 <dta_read_tag+0x7c>
   1da8c:	mov	r0, sp
   1da90:	mov	r1, r4
   1da94:	mov	r2, r5
   1da98:	bl	4ebc <strncmp@plt>
   1da9c:	cmp	r0, #0
   1daa0:	movwne	r0, #5
   1daa4:	sub	sp, fp, #16
   1daa8:	pop	{r4, r5, r6, sl, fp, pc}

0001daac <dta_read_chunk>:
   1daac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dab0:	add	fp, sp, #24
   1dab4:	ldr	r7, [r0, #280]	; 0x118
   1dab8:	mov	r5, r3
   1dabc:	mov	r6, r2
   1dac0:	mov	r4, r0
   1dac4:	bl	1da28 <dta_read_tag>
   1dac8:	cmp	r0, #0
   1dacc:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dad0:	ldr	r3, [r7, #12]
   1dad4:	ldr	r2, [r7, #20]
   1dad8:	ldr	r8, [fp, #8]
   1dadc:	mov	r0, r6
   1dae0:	mov	r1, r5
   1dae4:	blx	r3
   1dae8:	mov	r1, r0
   1daec:	mov	r0, #2
   1daf0:	cmp	r1, r5
   1daf4:	bne	1db08 <dta_read_chunk+0x5c>
   1daf8:	mov	r0, r4
   1dafc:	mov	r1, r8
   1db00:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1db04:	b	1da28 <dta_read_tag>
   1db08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001db0c <dta_compare_strls>:
   1db0c:	ldr	r1, [r1]
   1db10:	ldrh	r2, [r0]
   1db14:	ldrh	r3, [r1]
   1db18:	cmp	r2, r3
   1db1c:	subne	r0, r2, r3
   1db20:	ldreq	r1, [r1, #8]
   1db24:	ldreq	r0, [r0, #8]
   1db28:	subeq	r0, r0, r1
   1db2c:	bx	lr

0001db30 <dta_interpret_int32_bytes>:
   1db30:	push	{r4, r5, fp, lr}
   1db34:	add	fp, sp, #8
   1db38:	mov	r4, r0
   1db3c:	ldr	r0, [pc, #104]	; 1dbac <dta_interpret_int32_bytes+0x7c>
   1db40:	mov	r5, r1
   1db44:	add	r0, pc, r0
   1db48:	vld1.64	{d16-d17}, [r0]
   1db4c:	vst1.64	{d16-d17}, [r4]
   1db50:	ldrb	r1, [r1, #192]	; 0xc0
   1db54:	ldr	r0, [r2]
   1db58:	tst	r1, #1
   1db5c:	beq	1db68 <dta_interpret_int32_bytes+0x38>
   1db60:	bl	47b4 <byteswap4@plt>
   1db64:	ldrb	r1, [r5, #192]	; 0xc0
   1db68:	tst	r1, #2
   1db6c:	beq	1db74 <dta_interpret_int32_bytes+0x44>
   1db70:	bl	48ec <ones_to_twos_complement4@plt>
   1db74:	ldr	r1, [r5, #196]	; 0xc4
   1db78:	cmp	r0, r1
   1db7c:	ble	1dba4 <dta_interpret_int32_bytes+0x74>
   1db80:	mov	r1, #1
   1db84:	cmn	r0, #-2147483622	; 0x8000001a
   1db88:	blt	1dba0 <dta_interpret_int32_bytes+0x70>
   1db8c:	ldrb	r2, [r5, #192]	; 0xc0
   1db90:	ands	r2, r2, #8
   1db94:	addne	r1, r0, #123	; 0x7b
   1db98:	strbne	r1, [r4, #12]
   1db9c:	movne	r1, #2
   1dba0:	strb	r1, [r4, #13]
   1dba4:	str	r0, [r4]
   1dba8:	pop	{r4, r5, fp, pc}
   1dbac:	.word	0x00008994

0001dbb0 <dta_metadata_ok>:
   1dbb0:	ldr	r1, [r0, #16]
   1dbb4:	cmp	r1, #0
   1dbb8:	movne	r0, #6
   1dbbc:	bxne	lr
   1dbc0:	ldr	r0, [r0, #8]
   1dbc4:	sub	r1, r0, #104	; 0x68
   1dbc8:	mov	r0, #0
   1dbcc:	cmp	r1, #15
   1dbd0:	movwhi	r0, #24
   1dbd4:	bx	lr

0001dbd8 <readstat_begin_writing_dta>:
   1dbd8:	push	{r4, sl, fp, lr}
   1dbdc:	add	fp, sp, #8
   1dbe0:	ldr	ip, [r0, #8]
   1dbe4:	cmp	ip, #0
   1dbe8:	beq	1dc28 <readstat_begin_writing_dta+0x50>
   1dbec:	ldr	r3, [pc, #412]	; 1dd90 <readstat_begin_writing_dta+0x1b8>
   1dbf0:	cmp	ip, #116	; 0x74
   1dbf4:	ldr	r3, [pc, r3]
   1dbf8:	str	r3, [r0, #292]	; 0x124
   1dbfc:	ble	1dca0 <readstat_begin_writing_dta+0xc8>
   1dc00:	ldr	r3, [pc, #408]	; 1dda0 <readstat_begin_writing_dta+0x1c8>
   1dc04:	cmp	ip, #117	; 0x75
   1dc08:	add	r3, pc, r3
   1dc0c:	str	r3, [r0, #228]	; 0xe4
   1dc10:	bne	1dc48 <readstat_begin_writing_dta+0x70>
   1dc14:	ldr	ip, [pc, #392]	; 1dda4 <readstat_begin_writing_dta+0x1cc>
   1dc18:	ldr	r3, [pc, #392]	; 1dda8 <readstat_begin_writing_dta+0x1d0>
   1dc1c:	add	ip, pc, ip
   1dc20:	add	r3, pc, r3
   1dc24:	b	1dc58 <readstat_begin_writing_dta+0x80>
   1dc28:	mov	r3, #118	; 0x76
   1dc2c:	str	r3, [r0, #8]
   1dc30:	ldr	r3, [pc, #328]	; 1dd80 <readstat_begin_writing_dta+0x1a8>
   1dc34:	add	r3, pc, r3
   1dc38:	str	r3, [r0, #228]	; 0xe4
   1dc3c:	ldr	r3, [pc, #320]	; 1dd84 <readstat_begin_writing_dta+0x1ac>
   1dc40:	ldr	r3, [pc, r3]
   1dc44:	str	r3, [r0, #292]	; 0x124
   1dc48:	ldr	ip, [pc, #312]	; 1dd88 <readstat_begin_writing_dta+0x1b0>
   1dc4c:	ldr	r3, [pc, #312]	; 1dd8c <readstat_begin_writing_dta+0x1b4>
   1dc50:	add	ip, pc, ip
   1dc54:	add	r3, pc, r3
   1dc58:	str	ip, [r0, #260]	; 0x104
   1dc5c:	str	r3, [r0, #232]	; 0xe8
   1dc60:	ldr	ip, [pc, #324]	; 1ddac <readstat_begin_writing_dta+0x1d4>
   1dc64:	ldr	r4, [pc, #324]	; 1ddb0 <readstat_begin_writing_dta+0x1d8>
   1dc68:	ldr	r3, [pc, #324]	; 1ddb4 <readstat_begin_writing_dta+0x1dc>
   1dc6c:	add	r4, pc, r4
   1dc70:	add	ip, pc, ip
   1dc74:	add	r3, pc, r3
   1dc78:	str	r4, [r0, #236]	; 0xec
   1dc7c:	str	ip, [r0, #240]	; 0xf0
   1dc80:	str	r3, [r0, #244]	; 0xf4
   1dc84:	ldr	r3, [pc, #300]	; 1ddb8 <readstat_begin_writing_dta+0x1e0>
   1dc88:	ldr	r4, [pc, #300]	; 1ddbc <readstat_begin_writing_dta+0x1e4>
   1dc8c:	add	r3, pc, r3
   1dc90:	add	r4, pc, r4
   1dc94:	str	r3, [r0, #268]	; 0x10c
   1dc98:	str	r4, [r0, #272]	; 0x110
   1dc9c:	b	1dd24 <readstat_begin_writing_dta+0x14c>
   1dca0:	cmp	ip, #110	; 0x6e
   1dca4:	ble	1dccc <readstat_begin_writing_dta+0xf4>
   1dca8:	ldr	r3, [pc, #272]	; 1ddc0 <readstat_begin_writing_dta+0x1e8>
   1dcac:	ldr	r4, [pc, #272]	; 1ddc4 <readstat_begin_writing_dta+0x1ec>
   1dcb0:	cmp	ip, #112	; 0x70
   1dcb4:	add	r4, pc, r4
   1dcb8:	add	r3, pc, r3
   1dcbc:	str	r4, [r0, #228]	; 0xe4
   1dcc0:	str	r3, [r0, #232]	; 0xe8
   1dcc4:	bgt	1dc60 <readstat_begin_writing_dta+0x88>
   1dcc8:	b	1dcf4 <readstat_begin_writing_dta+0x11c>
   1dccc:	ldr	lr, [pc, #192]	; 1dd94 <readstat_begin_writing_dta+0x1bc>
   1dcd0:	ldr	r3, [pc, #192]	; 1dd98 <readstat_begin_writing_dta+0x1c0>
   1dcd4:	ldr	r4, [pc, #192]	; 1dd9c <readstat_begin_writing_dta+0x1c4>
   1dcd8:	cmp	ip, #110	; 0x6e
   1dcdc:	add	r3, pc, r3
   1dce0:	add	r4, pc, r4
   1dce4:	add	lr, pc, lr
   1dce8:	moveq	r4, r3
   1dcec:	str	lr, [r0, #228]	; 0xe4
   1dcf0:	str	r4, [r0, #232]	; 0xe8
   1dcf4:	ldr	ip, [pc, #204]	; 1ddc8 <readstat_begin_writing_dta+0x1f0>
   1dcf8:	ldr	r4, [pc, #204]	; 1ddcc <readstat_begin_writing_dta+0x1f4>
   1dcfc:	ldr	r3, [pc, #204]	; 1ddd0 <readstat_begin_writing_dta+0x1f8>
   1dd00:	add	r4, pc, r4
   1dd04:	add	ip, pc, ip
   1dd08:	add	r3, pc, r3
   1dd0c:	str	r4, [r0, #236]	; 0xec
   1dd10:	str	ip, [r0, #240]	; 0xf0
   1dd14:	str	r3, [r0, #244]	; 0xf4
   1dd18:	ldr	r3, [pc, #180]	; 1ddd4 <readstat_begin_writing_dta+0x1fc>
   1dd1c:	add	r3, pc, r3
   1dd20:	str	r3, [r0, #268]	; 0x10c
   1dd24:	ldr	ip, [pc, #172]	; 1ddd8 <readstat_begin_writing_dta+0x200>
   1dd28:	ldr	r4, [pc, #172]	; 1dddc <readstat_begin_writing_dta+0x204>
   1dd2c:	ldr	r3, [pc, #172]	; 1dde0 <readstat_begin_writing_dta+0x208>
   1dd30:	add	r4, pc, r4
   1dd34:	add	ip, pc, ip
   1dd38:	add	r3, pc, r3
   1dd3c:	str	r4, [r0, #248]	; 0xf8
   1dd40:	str	ip, [r0, #252]	; 0xfc
   1dd44:	str	r3, [r0, #256]	; 0x100
   1dd48:	ldr	r3, [pc, #148]	; 1dde4 <readstat_begin_writing_dta+0x20c>
   1dd4c:	add	r3, pc, r3
   1dd50:	str	r3, [r0, #264]	; 0x108
   1dd54:	ldr	r3, [pc, #140]	; 1dde8 <readstat_begin_writing_dta+0x210>
   1dd58:	add	r3, pc, r3
   1dd5c:	str	r3, [r0, #276]	; 0x114
   1dd60:	ldr	r3, [pc, #132]	; 1ddec <readstat_begin_writing_dta+0x214>
   1dd64:	ldr	r4, [pc, #132]	; 1ddf0 <readstat_begin_writing_dta+0x218>
   1dd68:	add	r3, pc, r3
   1dd6c:	add	r4, pc, r4
   1dd70:	str	r3, [r0, #284]	; 0x11c
   1dd74:	str	r4, [r0, #288]	; 0x120
   1dd78:	pop	{r4, sl, fp, lr}
   1dd7c:	b	494c <readstat_begin_writing_file@plt>
   1dd80:	.word	0x000001b8
   1dd84:	.word	0x00026698
   1dd88:	.word	0x00000318
   1dd8c:	.word	0x000002c0
   1dd90:	.word	0x000266e4
   1dd94:	.word	0x000001d0
   1dd98:	.word	0x00000254
   1dd9c:	.word	0x0000026c
   1dda0:	.word	0x000001e4
   1dda4:	.word	0x00000394
   1dda8:	.word	0x00000310
   1ddac:	.word	0x0000037c
   1ddb0:	.word	0x00000368
   1ddb4:	.word	0x00000394
   1ddb8:	.word	0x00000394
   1ddbc:	.word	0x00000404
   1ddc0:	.word	0x00000278
   1ddc4:	.word	0x000001a0
   1ddc8:	.word	0x0000045c
   1ddcc:	.word	0x00000448
   1ddd0:	.word	0x00000474
   1ddd4:	.word	0x00000478
   1ddd8:	.word	0x000005a4
   1dddc:	.word	0x000004d8
   1dde0:	.word	0x00000668
   1dde4:	.word	0x000006c4
   1dde8:	.word	0x000006d4
   1ddec:	.word	0x0000135c
   1ddf0:	.word	0x00001ac4

0001ddf4 <dta_117_variable_width>:
   1ddf4:	cmp	r0, #6
   1ddf8:	bhi	1de34 <dta_117_variable_width+0x40>
   1ddfc:	mov	ip, r0
   1de00:	add	r3, pc, #8
   1de04:	mov	r0, #8
   1de08:	ldr	r2, [r3, ip, lsl #2]
   1de0c:	add	pc, r3, r2
   1de10:	.word	0x0000002c
   1de14:	.word	0x0000001c
   1de18:	.word	0x0000001c
   1de1c:	.word	0x00000044
   1de20:	.word	0x0000001c
   1de24:	.word	0x00000028
   1de28:	.word	0x00000028
   1de2c:	mov	r0, ip
   1de30:	bx	lr
   1de34:	mov	r0, #0
   1de38:	bx	lr
   1de3c:	sub	r0, r1, #1
   1de40:	movw	r2, #2044	; 0x7fc
   1de44:	cmp	r0, r2
   1de48:	movwhi	r1, #2045	; 0x7fd
   1de4c:	mov	r0, r1
   1de50:	bx	lr
   1de54:	mov	r0, #4
   1de58:	bx	lr

0001de5c <dta_111_variable_width>:
   1de5c:	cmp	r0, #5
   1de60:	bhi	1de98 <dta_111_variable_width+0x3c>
   1de64:	mov	ip, r0
   1de68:	add	r3, pc, #8
   1de6c:	mov	r0, #8
   1de70:	ldr	r2, [r3, ip, lsl #2]
   1de74:	add	pc, r3, r2
   1de78:	.word	0x00000028
   1de7c:	.word	0x00000018
   1de80:	.word	0x00000018
   1de84:	.word	0x0000003c
   1de88:	.word	0x00000018
   1de8c:	.word	0x00000024
   1de90:	mov	r0, ip
   1de94:	bx	lr
   1de98:	mov	r0, #0
   1de9c:	bx	lr
   1dea0:	sub	r0, r1, #1
   1dea4:	cmp	r0, #243	; 0xf3
   1dea8:	movwhi	r1, #244	; 0xf4
   1deac:	mov	r0, r1
   1deb0:	bx	lr
   1deb4:	mov	r0, #4
   1deb8:	bx	lr

0001debc <dta_old_variable_width>:
   1debc:	cmp	r0, #5
   1dec0:	bhi	1def8 <dta_old_variable_width+0x3c>
   1dec4:	mov	ip, r0
   1dec8:	add	r3, pc, #8
   1decc:	mov	r0, #8
   1ded0:	ldr	r2, [r3, ip, lsl #2]
   1ded4:	add	pc, r3, r2
   1ded8:	.word	0x00000028
   1dedc:	.word	0x00000018
   1dee0:	.word	0x00000018
   1dee4:	.word	0x0000003c
   1dee8:	.word	0x00000018
   1deec:	.word	0x00000024
   1def0:	mov	r0, ip
   1def4:	bx	lr
   1def8:	mov	r0, #0
   1defc:	bx	lr
   1df00:	sub	r0, r1, #1
   1df04:	cmp	r0, #127	; 0x7f
   1df08:	movwhi	r1, #128	; 0x80
   1df0c:	mov	r0, r1
   1df10:	bx	lr
   1df14:	mov	r0, #4
   1df18:	bx	lr

0001df1c <dta_118_variable_ok>:
   1df1c:	push	{fp, lr}
   1df20:	mov	fp, sp
   1df24:	bl	4d30 <readstat_variable_get_name@plt>
   1df28:	mov	r1, #1
   1df2c:	mov	r2, #129	; 0x81
   1df30:	pop	{fp, lr}
   1df34:	b	1f83c <dta_validate_name>

0001df38 <dta_110_variable_ok>:
   1df38:	push	{fp, lr}
   1df3c:	mov	fp, sp
   1df40:	bl	4d30 <readstat_variable_get_name@plt>
   1df44:	mov	r1, #0
   1df48:	mov	r2, #33	; 0x21
   1df4c:	pop	{fp, lr}
   1df50:	b	1f83c <dta_validate_name>

0001df54 <dta_old_variable_ok>:
   1df54:	push	{fp, lr}
   1df58:	mov	fp, sp
   1df5c:	bl	4d30 <readstat_variable_get_name@plt>
   1df60:	mov	r1, #0
   1df64:	mov	r2, #9
   1df68:	pop	{fp, lr}
   1df6c:	b	1f83c <dta_validate_name>

0001df70 <dta_118_write_string_ref>:
   1df70:	cmp	r2, #0
   1df74:	moveq	r0, #34	; 0x22
   1df78:	bxeq	lr
   1df7c:	push	{r4, r5, r6, sl, fp, lr}
   1df80:	add	fp, sp, #16
   1df84:	ldr	r6, [r2, #8]
   1df88:	ldr	r5, [r2, #12]
   1df8c:	mov	r4, r0
   1df90:	ldrh	r0, [r2]
   1df94:	strh	r0, [r4]
   1df98:	bl	48b0 <machine_is_little_endian@plt>
   1df9c:	cmp	r0, #0
   1dfa0:	mov	r0, #0
   1dfa4:	lsreq	r5, r6, #16
   1dfa8:	lsleq	r6, r6, #16
   1dfac:	strh	r5, [r4, #6]
   1dfb0:	str	r6, [r4, #2]
   1dfb4:	pop	{r4, r5, r6, sl, fp, pc}

0001dfb8 <dta_117_write_string_ref>:
   1dfb8:	cmp	r2, #0
   1dfbc:	moveq	r0, #34	; 0x22
   1dfc0:	bxeq	lr
   1dfc4:	ldr	r1, [r2]
   1dfc8:	ldr	r2, [r2, #8]
   1dfcc:	str	r2, [r0, #4]
   1dfd0:	str	r1, [r0]
   1dfd4:	mov	r0, #0
   1dfd8:	bx	lr

0001dfdc <dta_113_write_int8>:
   1dfdc:	mov	r1, r0
   1dfe0:	cmp	r2, #100	; 0x64
   1dfe4:	mov	r0, #20
   1dfe8:	movle	r0, #0
   1dfec:	strble	r2, [r1]
   1dff0:	bx	lr

0001dff4 <dta_113_write_int16>:
   1dff4:	movw	r3, #32740	; 0x7fe4
   1dff8:	mov	r1, r0
   1dffc:	mov	r0, #20
   1e000:	cmp	r2, r3
   1e004:	movle	r0, #0
   1e008:	strhle	r2, [r1]
   1e00c:	bx	lr

0001e010 <dta_113_write_int32>:
   1e010:	mov	r1, r0
   1e014:	cmn	r2, #-2147483620	; 0x8000001c
   1e018:	mov	r0, #20
   1e01c:	movle	r0, #0
   1e020:	strle	r2, [r1]
   1e024:	bx	lr

0001e028 <dta_113_write_missing_numeric>:
   1e028:	ldr	r1, [r1]
   1e02c:	sub	r1, r1, #1
   1e030:	cmp	r1, #4
   1e034:	bhi	1e094 <dta_113_write_missing_numeric+0x6c>
   1e038:	add	r2, pc, #4
   1e03c:	ldr	r1, [r2, r1, lsl #2]
   1e040:	add	pc, r2, r1
   1e044:	.word	0x00000014
   1e048:	.word	0x00000020
   1e04c:	.word	0x0000002c
   1e050:	.word	0x00000034
   1e054:	.word	0x0000003c
   1e058:	mov	r1, #101	; 0x65
   1e05c:	strb	r1, [r0]
   1e060:	b	1e094 <dta_113_write_missing_numeric+0x6c>
   1e064:	movw	r1, #32741	; 0x7fe5
   1e068:	strh	r1, [r0]
   1e06c:	b	1e094 <dta_113_write_missing_numeric+0x6c>
   1e070:	mvn	r1, #-2147483622	; 0x8000001a
   1e074:	b	1e090 <dta_113_write_missing_numeric+0x68>
   1e078:	mov	r1, #2130706432	; 0x7f000000
   1e07c:	b	1e090 <dta_113_write_missing_numeric+0x68>
   1e080:	movw	r1, #0
   1e084:	movt	r1, #32736	; 0x7fe0
   1e088:	str	r1, [r0, #4]
   1e08c:	mov	r1, #0
   1e090:	str	r1, [r0]
   1e094:	mov	r0, #0
   1e098:	bx	lr

0001e09c <dta_113_write_missing_tagged>:
   1e09c:	sub	r3, r2, #97	; 0x61
   1e0a0:	mov	ip, #21
   1e0a4:	uxtb	r3, r3
   1e0a8:	cmp	r3, #25
   1e0ac:	bhi	1e148 <dta_113_write_missing_tagged+0xac>
   1e0b0:	ldr	r1, [r1]
   1e0b4:	sub	r1, r1, #1
   1e0b8:	cmp	r1, #4
   1e0bc:	bhi	1e0f0 <dta_113_write_missing_tagged+0x54>
   1e0c0:	add	r3, pc, #4
   1e0c4:	ldr	r1, [r3, r1, lsl #2]
   1e0c8:	add	pc, r3, r1
   1e0cc:	.word	0x00000014
   1e0d0:	.word	0x0000002c
   1e0d4:	.word	0x00000040
   1e0d8:	.word	0x0000004c
   1e0dc:	.word	0x00000064
   1e0e0:	add	r1, r2, #5
   1e0e4:	mov	ip, #0
   1e0e8:	strb	r1, [r0]
   1e0ec:	b	1e148 <dta_113_write_missing_tagged+0xac>
   1e0f0:	mov	ip, #23
   1e0f4:	b	1e148 <dta_113_write_missing_tagged+0xac>
   1e0f8:	movw	r1, #32645	; 0x7f85
   1e0fc:	mov	ip, #0
   1e100:	add	r1, r2, r1
   1e104:	strh	r1, [r0]
   1e108:	b	1e148 <dta_113_write_missing_tagged+0xac>
   1e10c:	sub	r1, r2, #123	; 0x7b
   1e110:	sub	r1, r1, #-2147483648	; 0x80000000
   1e114:	b	1e124 <dta_113_write_missing_tagged+0x88>
   1e118:	movw	r1, #0
   1e11c:	movt	r1, #32509	; 0x7efd
   1e120:	add	r1, r1, r2, lsl #11
   1e124:	str	r1, [r0]
   1e128:	mov	ip, #0
   1e12c:	b	1e148 <dta_113_write_missing_tagged+0xac>
   1e130:	movw	r1, #40960	; 0xa000
   1e134:	mov	ip, #0
   1e138:	movt	r1, #32735	; 0x7fdf
   1e13c:	str	ip, [r0]
   1e140:	add	r1, r1, r2, lsl #8
   1e144:	str	r1, [r0, #4]
   1e148:	mov	r0, ip
   1e14c:	bx	lr

0001e150 <dta_old_write_int8>:
   1e150:	mov	r1, r0
   1e154:	cmp	r2, #127	; 0x7f
   1e158:	mov	r0, #20
   1e15c:	movne	r0, #0
   1e160:	strbne	r2, [r1]
   1e164:	bx	lr

0001e168 <dta_old_write_int16>:
   1e168:	movw	r3, #32767	; 0x7fff
   1e16c:	mov	r1, r0
   1e170:	mov	r0, #20
   1e174:	cmp	r2, r3
   1e178:	movne	r0, #0
   1e17c:	strhne	r2, [r1]
   1e180:	bx	lr

0001e184 <dta_old_write_int32>:
   1e184:	mov	r1, r0
   1e188:	cmn	r2, #-2147483647	; 0x80000001
   1e18c:	mov	r0, #20
   1e190:	movne	r0, #0
   1e194:	strne	r2, [r1]
   1e198:	bx	lr

0001e19c <dta_old_write_missing_numeric>:
   1e19c:	ldr	r1, [r1]
   1e1a0:	sub	r1, r1, #1
   1e1a4:	cmp	r1, #4
   1e1a8:	bhi	1e208 <dta_old_write_missing_numeric+0x6c>
   1e1ac:	add	r2, pc, #4
   1e1b0:	ldr	r1, [r2, r1, lsl #2]
   1e1b4:	add	pc, r2, r1
   1e1b8:	.word	0x00000014
   1e1bc:	.word	0x00000020
   1e1c0:	.word	0x0000002c
   1e1c4:	.word	0x00000034
   1e1c8:	.word	0x0000003c
   1e1cc:	mov	r1, #127	; 0x7f
   1e1d0:	strb	r1, [r0]
   1e1d4:	b	1e208 <dta_old_write_missing_numeric+0x6c>
   1e1d8:	movw	r1, #32767	; 0x7fff
   1e1dc:	strh	r1, [r0]
   1e1e0:	b	1e208 <dta_old_write_missing_numeric+0x6c>
   1e1e4:	mvn	r1, #-2147483648	; 0x80000000
   1e1e8:	b	1e204 <dta_old_write_missing_numeric+0x68>
   1e1ec:	mov	r1, #2130706432	; 0x7f000000
   1e1f0:	b	1e204 <dta_old_write_missing_numeric+0x68>
   1e1f4:	movw	r1, #0
   1e1f8:	movt	r1, #32736	; 0x7fe0
   1e1fc:	str	r1, [r0, #4]
   1e200:	mov	r1, #0
   1e204:	str	r1, [r0]
   1e208:	mov	r0, #0
   1e20c:	bx	lr

0001e210 <dta_write_float>:
   1e210:	push	{r4, r5, fp, lr}
   1e214:	add	fp, sp, #8
   1e218:	vpush	{d8}
   1e21c:	vmov.f32	s16, s0
   1e220:	vldr	s0, [pc, #176]	; 1e2d8 <dta_write_float+0xc8>
   1e224:	mov	r4, r0
   1e228:	mov	r0, #20
   1e22c:	vcmpe.f32	s16, s0
   1e230:	vmrs	APSR_nzcv, fpscr
   1e234:	bgt	1e2d0 <dta_write_float+0xc0>
   1e238:	vmov.f32	s0, s16
   1e23c:	mov	r5, r1
   1e240:	bl	48c8 <__isnanf@plt>
   1e244:	cmp	r0, #0
   1e248:	beq	1e28c <dta_write_float+0x7c>
   1e24c:	ldr	r0, [r5]
   1e250:	sub	r1, r0, #1
   1e254:	mov	r0, #0
   1e258:	cmp	r1, #4
   1e25c:	bhi	1e2d0 <dta_write_float+0xc0>
   1e260:	add	r2, pc, #4
   1e264:	ldr	r1, [r2, r1, lsl #2]
   1e268:	add	pc, r2, r1
   1e26c:	.word	0x00000014
   1e270:	.word	0x00000030
   1e274:	.word	0x0000003c
   1e278:	.word	0x00000044
   1e27c:	.word	0x00000050
   1e280:	mov	r1, #101	; 0x65
   1e284:	strb	r1, [r4]
   1e288:	b	1e2d0 <dta_write_float+0xc0>
   1e28c:	vmov	r0, s16
   1e290:	str	r0, [r4]
   1e294:	mov	r0, #0
   1e298:	b	1e2d0 <dta_write_float+0xc0>
   1e29c:	movw	r1, #32741	; 0x7fe5
   1e2a0:	strh	r1, [r4]
   1e2a4:	b	1e2d0 <dta_write_float+0xc0>
   1e2a8:	mvn	r1, #-2147483622	; 0x8000001a
   1e2ac:	b	1e2b4 <dta_write_float+0xa4>
   1e2b0:	mov	r1, #2130706432	; 0x7f000000
   1e2b4:	str	r1, [r4]
   1e2b8:	b	1e2d0 <dta_write_float+0xc0>
   1e2bc:	movw	r0, #0
   1e2c0:	movt	r0, #32736	; 0x7fe0
   1e2c4:	str	r0, [r4, #4]
   1e2c8:	mov	r0, #0
   1e2cc:	str	r0, [r4]
   1e2d0:	vpop	{d8}
   1e2d4:	pop	{r4, r5, fp, pc}
   1e2d8:	.word	0x7effffff
   1e2dc:	.word	0xe320f000

0001e2e0 <dta_write_double>:
   1e2e0:	push	{r4, r5, fp, lr}
   1e2e4:	add	fp, sp, #8
   1e2e8:	vpush	{d8}
   1e2ec:	vldr	d16, [pc, #172]	; 1e3a0 <dta_write_double+0xc0>
   1e2f0:	mov	r4, r0
   1e2f4:	mov	r0, #20
   1e2f8:	vcmpe.f64	d0, d16
   1e2fc:	vmrs	APSR_nzcv, fpscr
   1e300:	bgt	1e398 <dta_write_double+0xb8>
   1e304:	vmov.f64	d8, d0
   1e308:	mov	r5, r1
   1e30c:	bl	4d00 <__isnan@plt>
   1e310:	cmp	r0, #0
   1e314:	beq	1e358 <dta_write_double+0x78>
   1e318:	ldr	r0, [r5]
   1e31c:	sub	r1, r0, #1
   1e320:	mov	r0, #0
   1e324:	cmp	r1, #4
   1e328:	bhi	1e398 <dta_write_double+0xb8>
   1e32c:	add	r2, pc, #4
   1e330:	ldr	r1, [r2, r1, lsl #2]
   1e334:	add	pc, r2, r1
   1e338:	.word	0x00000014
   1e33c:	.word	0x0000002c
   1e340:	.word	0x00000038
   1e344:	.word	0x00000040
   1e348:	.word	0x0000004c
   1e34c:	mov	r1, #101	; 0x65
   1e350:	strb	r1, [r4]
   1e354:	b	1e398 <dta_write_double+0xb8>
   1e358:	mov	r0, #0
   1e35c:	vst1.8	{d8}, [r4]
   1e360:	b	1e398 <dta_write_double+0xb8>
   1e364:	movw	r1, #32741	; 0x7fe5
   1e368:	strh	r1, [r4]
   1e36c:	b	1e398 <dta_write_double+0xb8>
   1e370:	mvn	r1, #-2147483622	; 0x8000001a
   1e374:	b	1e37c <dta_write_double+0x9c>
   1e378:	mov	r1, #2130706432	; 0x7f000000
   1e37c:	str	r1, [r4]
   1e380:	b	1e398 <dta_write_double+0xb8>
   1e384:	movw	r0, #0
   1e388:	movt	r0, #32736	; 0x7fe0
   1e38c:	str	r0, [r4, #4]
   1e390:	mov	r0, #0
   1e394:	str	r0, [r4]
   1e398:	vpop	{d8}
   1e39c:	pop	{r4, r5, fp, pc}
   1e3a0:	.word	0xffffffff
   1e3a4:	.word	0x7fdfffff

0001e3a8 <dta_write_string>:
   1e3a8:	push	{r4, r5, r6, r7, fp, lr}
   1e3ac:	add	fp, sp, #16
   1e3b0:	ldr	r4, [r1, #1596]	; 0x63c
   1e3b4:	mov	r5, r0
   1e3b8:	cmp	r2, #0
   1e3bc:	beq	1e3fc <dta_write_string+0x54>
   1e3c0:	ldrb	r0, [r2]
   1e3c4:	mov	r6, r2
   1e3c8:	cmp	r0, #0
   1e3cc:	beq	1e3fc <dta_write_string+0x54>
   1e3d0:	mov	r0, r6
   1e3d4:	bl	4bd4 <strlen@plt>
   1e3d8:	mov	r7, #22
   1e3dc:	cmp	r0, r4
   1e3e0:	bhi	1e410 <dta_write_string+0x68>
   1e3e4:	mov	r0, r5
   1e3e8:	mov	r1, r6
   1e3ec:	mov	r2, r4
   1e3f0:	bl	4c94 <strncpy@plt>
   1e3f4:	mov	r7, #0
   1e3f8:	b	1e410 <dta_write_string+0x68>
   1e3fc:	mov	r0, r5
   1e400:	mov	r1, #0
   1e404:	mov	r2, r4
   1e408:	mov	r7, #0
   1e40c:	bl	4c70 <memset@plt>
   1e410:	mov	r0, r7
   1e414:	pop	{r4, r5, r6, r7, fp, pc}

0001e418 <dta_write_missing_string>:
   1e418:	push	{fp, lr}
   1e41c:	mov	fp, sp
   1e420:	ldr	r2, [r1, #1596]	; 0x63c
   1e424:	mov	r1, #0
   1e428:	bl	4c70 <memset@plt>
   1e42c:	mov	r0, #0
   1e430:	pop	{fp, pc}

0001e434 <dta_begin_data>:
   1e434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e438:	add	fp, sp, #28
   1e43c:	sub	sp, sp, #172	; 0xac
   1e440:	mov	r9, r0
   1e444:	ldr	r0, [r0, #308]	; 0x134
   1e448:	cmp	r0, #0
   1e44c:	beq	1e4b8 <dta_begin_data+0x84>
   1e450:	mov	r0, #0
   1e454:	mov	r4, #0
   1e458:	bl	4f1c <dta_ctx_alloc@plt>
   1e45c:	ldr	r5, [r9, #28]
   1e460:	ldr	r6, [r9, #80]	; 0x50
   1e464:	mov	r7, r0
   1e468:	bl	48b0 <machine_is_little_endian@plt>
   1e46c:	ldrb	r1, [r9, #8]
   1e470:	cmp	r0, #0
   1e474:	mov	r2, #2
   1e478:	asr	r3, r6, #31
   1e47c:	mov	r0, r7
   1e480:	movweq	r2, #1
   1e484:	str	r2, [sp]
   1e488:	mov	r2, r6
   1e48c:	stmib	sp, {r1, r4}
   1e490:	mov	r1, r5
   1e494:	str	r4, [sp, #12]
   1e498:	mov	r4, r7
   1e49c:	bl	4ba4 <dta_ctx_init@plt>
   1e4a0:	mov	r6, r0
   1e4a4:	cmp	r0, #0
   1e4a8:	beq	1e4c8 <dta_begin_data+0x94>
   1e4ac:	mov	r0, r4
   1e4b0:	bl	4874 <dta_ctx_free@plt>
   1e4b4:	b	1e4bc <dta_begin_data+0x88>
   1e4b8:	mov	r6, #14
   1e4bc:	mov	r0, r6
   1e4c0:	sub	sp, fp, #28
   1e4c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e4c8:	ldrb	r0, [r4, #192]	; 0xc0
   1e4cc:	tst	r0, #4
   1e4d0:	bne	1e954 <dta_begin_data+0x520>
   1e4d4:	ldr	r0, [r9, #8]
   1e4d8:	strb	r0, [sp, #40]	; 0x28
   1e4dc:	bl	48b0 <machine_is_little_endian@plt>
   1e4e0:	mov	r1, #1
   1e4e4:	cmp	r0, #0
   1e4e8:	strh	r1, [sp, #42]	; 0x2a
   1e4ec:	mov	r1, #2
   1e4f0:	movweq	r1, #1
   1e4f4:	strb	r1, [sp, #41]	; 0x29
   1e4f8:	ldr	r0, [r9, #28]
   1e4fc:	strh	r0, [sp, #44]	; 0x2c
   1e500:	cmp	r0, #32768	; 0x8000
   1e504:	ldr	r1, [r9, #80]	; 0x50
   1e508:	str	r1, [sp, #46]	; 0x2e
   1e50c:	bge	1e548 <dta_begin_data+0x114>
   1e510:	add	r1, sp, #40	; 0x28
   1e514:	mov	r0, r9
   1e518:	mov	r2, #10
   1e51c:	bl	4e20 <readstat_write_bytes@plt>
   1e520:	cmp	r0, #0
   1e524:	bne	1e548 <dta_begin_data+0x114>
   1e528:	mov	r0, r9
   1e52c:	mov	r1, r4
   1e530:	bl	1fd90 <dta_emit_header_data_label>
   1e534:	cmp	r0, #0
   1e538:	bne	1e548 <dta_begin_data+0x114>
   1e53c:	mov	r0, r9
   1e540:	mov	r1, r4
   1e544:	bl	1fed4 <dta_emit_header_time_stamp>
   1e548:	ldrb	r0, [r4, #192]	; 0xc0
   1e54c:	str	r9, [sp, #28]
   1e550:	ands	sl, r0, #4
   1e554:	bne	1ea40 <dta_begin_data+0x60c>
   1e558:	ldr	r0, [r4, #148]	; 0x94
   1e55c:	cmp	r0, #1
   1e560:	blt	1e640 <dta_begin_data+0x20c>
   1e564:	mov	r8, #0
   1e568:	add	r9, sp, #40	; 0x28
   1e56c:	mov	r5, #0
   1e570:	mov	r7, #0
   1e574:	ldr	r0, [sp, #28]
   1e578:	mov	r1, r7
   1e57c:	bl	4d48 <readstat_get_variable@plt>
   1e580:	strh	r8, [sp, #40]	; 0x28
   1e584:	mov	r2, r9
   1e588:	ldrb	r1, [r4, #20]
   1e58c:	bl	20104 <dta_typecode_for_variable>
   1e590:	cmp	r0, #0
   1e594:	bne	1eb60 <dta_begin_data+0x72c>
   1e598:	ldr	r0, [r4, #28]
   1e59c:	ldrh	r1, [sp, #40]	; 0x28
   1e5a0:	add	r7, r7, #1
   1e5a4:	add	r0, r0, r5
   1e5a8:	add	r5, r5, #2
   1e5ac:	strh	r1, [r0]
   1e5b0:	ldr	r0, [r4, #148]	; 0x94
   1e5b4:	cmp	r7, r0
   1e5b8:	blt	1e574 <dta_begin_data+0x140>
   1e5bc:	ldr	r9, [sp, #28]
   1e5c0:	cmp	r0, #1
   1e5c4:	blt	1e640 <dta_begin_data+0x20c>
   1e5c8:	mov	r5, #0
   1e5cc:	add	r8, sp, #40	; 0x28
   1e5d0:	mov	r7, #0
   1e5d4:	ldr	r1, [r4, #24]
   1e5d8:	cmp	r1, #2
   1e5dc:	beq	1e600 <dta_begin_data+0x1cc>
   1e5e0:	cmp	r1, #1
   1e5e4:	bne	1e630 <dta_begin_data+0x1fc>
   1e5e8:	ldr	r0, [r4, #28]
   1e5ec:	mov	r1, r8
   1e5f0:	mov	r2, #1
   1e5f4:	ldrb	r0, [r0, r5]
   1e5f8:	strb	r0, [sp, #40]	; 0x28
   1e5fc:	b	1e618 <dta_begin_data+0x1e4>
   1e600:	ldr	r0, [r4, #28]
   1e604:	mov	r1, r8
   1e608:	mov	r2, #2
   1e60c:	add	r0, r0, r5
   1e610:	ldrh	r0, [r0]
   1e614:	strh	r0, [sp, #40]	; 0x28
   1e618:	mov	r0, r9
   1e61c:	bl	4e20 <readstat_write_bytes@plt>
   1e620:	mov	r6, r0
   1e624:	cmp	r0, #0
   1e628:	bne	1e4ac <dta_begin_data+0x78>
   1e62c:	ldr	r0, [r4, #148]	; 0x94
   1e630:	add	r7, r7, #1
   1e634:	add	r5, r5, #2
   1e638:	cmp	r7, r0
   1e63c:	blt	1e5d4 <dta_begin_data+0x1a0>
   1e640:	ldrb	r0, [r4, #192]	; 0xc0
   1e644:	tst	r0, #4
   1e648:	bne	1eb68 <dta_begin_data+0x734>
   1e64c:	ldr	r0, [r4, #148]	; 0x94
   1e650:	cmp	r0, #1
   1e654:	blt	1e690 <dta_begin_data+0x25c>
   1e658:	mov	r5, #0
   1e65c:	mov	r0, r9
   1e660:	mov	r1, r5
   1e664:	bl	4d48 <readstat_get_variable@plt>
   1e668:	ldr	r1, [r4, #36]	; 0x24
   1e66c:	ldr	r2, [r4, #76]	; 0x4c
   1e670:	mla	r3, r2, r5, r1
   1e674:	add	r1, r0, #8
   1e678:	mov	r0, r3
   1e67c:	bl	4c94 <strncpy@plt>
   1e680:	ldr	r0, [r4, #148]	; 0x94
   1e684:	add	r5, r5, #1
   1e688:	cmp	r5, r0
   1e68c:	blt	1e65c <dta_begin_data+0x228>
   1e690:	ldr	r1, [r4, #36]	; 0x24
   1e694:	ldr	r2, [r4, #40]	; 0x28
   1e698:	mov	r0, r9
   1e69c:	bl	4e20 <readstat_write_bytes@plt>
   1e6a0:	mov	r6, r0
   1e6a4:	cmp	r0, #0
   1e6a8:	bne	1e4ac <dta_begin_data+0x78>
   1e6ac:	ldrb	r0, [r4, #192]	; 0xc0
   1e6b0:	tst	r0, #4
   1e6b4:	bne	1ee1c <dta_begin_data+0x9e8>
   1e6b8:	ldr	r0, [r4, #44]	; 0x2c
   1e6bc:	ldr	r2, [r4, #48]	; 0x30
   1e6c0:	mov	r1, #0
   1e6c4:	bl	4c70 <memset@plt>
   1e6c8:	ldr	r1, [r4, #44]	; 0x2c
   1e6cc:	ldr	r2, [r4, #48]	; 0x30
   1e6d0:	mov	r0, r9
   1e6d4:	bl	4e20 <readstat_write_bytes@plt>
   1e6d8:	mov	r6, r0
   1e6dc:	cmp	r0, #0
   1e6e0:	bne	1e4ac <dta_begin_data+0x78>
   1e6e4:	ldrb	r0, [r4, #192]	; 0xc0
   1e6e8:	tst	r0, #4
   1e6ec:	bne	1eed0 <dta_begin_data+0xa9c>
   1e6f0:	ldr	r0, [r4, #148]	; 0x94
   1e6f4:	cmp	r0, #1
   1e6f8:	blt	1e7d0 <dta_begin_data+0x39c>
   1e6fc:	ldr	sl, [pc, #2460]	; 1f0a0 <dta_begin_data+0xc6c>
   1e700:	ldr	r9, [pc, #2460]	; 1f0a4 <dta_begin_data+0xc70>
   1e704:	mov	r6, #0
   1e708:	add	r7, sp, #40	; 0x28
   1e70c:	add	sl, pc, sl
   1e710:	add	r9, pc, r9
   1e714:	ldr	r0, [sp, #28]
   1e718:	mov	r1, r6
   1e71c:	bl	4d48 <readstat_get_variable@plt>
   1e720:	mov	r1, r0
   1e724:	mov	r8, r0
   1e728:	ldrb	r0, [r1, #308]!	; 0x134
   1e72c:	cmp	r0, #0
   1e730:	beq	1e740 <dta_begin_data+0x30c>
   1e734:	ldr	r0, [r4, #52]	; 0x34
   1e738:	ldr	r2, [r4, #80]	; 0x50
   1e73c:	b	1e7b8 <dta_begin_data+0x384>
   1e740:	ldr	r0, [r8]
   1e744:	ldr	r5, [r8, #2136]	; 0x858
   1e748:	bl	4820 <readstat_type_class@plt>
   1e74c:	cmp	r5, #0
   1e750:	bne	1e768 <dta_begin_data+0x334>
   1e754:	ldr	r1, [r8]
   1e758:	mov	r5, #9
   1e75c:	sub	r1, r1, #1
   1e760:	cmp	r1, #4
   1e764:	ldrls	r5, [sl, r1, lsl #2]
   1e768:	ldr	r1, [r8, #2132]	; 0x854
   1e76c:	mov	r2, r9
   1e770:	cmp	r1, #1
   1e774:	ldr	r1, [pc, #2348]	; 1f0a8 <dta_begin_data+0xc74>
   1e778:	add	r1, pc, r1
   1e77c:	moveq	r2, r1
   1e780:	cmp	r0, #0
   1e784:	beq	1e798 <dta_begin_data+0x364>
   1e788:	ldr	r1, [pc, #2332]	; 1f0ac <dta_begin_data+0xc78>
   1e78c:	mov	r0, r7
   1e790:	add	r1, pc, r1
   1e794:	b	1e7a4 <dta_begin_data+0x370>
   1e798:	ldr	r1, [pc, #2320]	; 1f0b0 <dta_begin_data+0xc7c>
   1e79c:	mov	r0, r7
   1e7a0:	add	r1, pc, r1
   1e7a4:	mov	r3, r5
   1e7a8:	bl	4db4 <sprintf@plt>
   1e7ac:	ldr	r0, [r4, #52]	; 0x34
   1e7b0:	ldr	r2, [r4, #80]	; 0x50
   1e7b4:	mov	r1, r7
   1e7b8:	mla	r0, r2, r6, r0
   1e7bc:	bl	4c94 <strncpy@plt>
   1e7c0:	ldr	r0, [r4, #148]	; 0x94
   1e7c4:	add	r6, r6, #1
   1e7c8:	cmp	r6, r0
   1e7cc:	blt	1e714 <dta_begin_data+0x2e0>
   1e7d0:	ldr	r7, [sp, #28]
   1e7d4:	ldr	r1, [r4, #52]	; 0x34
   1e7d8:	ldr	r2, [r4, #56]	; 0x38
   1e7dc:	mov	r0, r7
   1e7e0:	bl	4e20 <readstat_write_bytes@plt>
   1e7e4:	mov	r6, r0
   1e7e8:	cmp	r0, #0
   1e7ec:	bne	1e4ac <dta_begin_data+0x78>
   1e7f0:	ldrb	r0, [r4, #192]	; 0xc0
   1e7f4:	tst	r0, #4
   1e7f8:	bne	1efb4 <dta_begin_data+0xb80>
   1e7fc:	ldr	r0, [r4, #148]	; 0x94
   1e800:	cmp	r0, #1
   1e804:	blt	1e858 <dta_begin_data+0x424>
   1e808:	mov	r5, #0
   1e80c:	mov	r0, r7
   1e810:	mov	r1, r5
   1e814:	bl	4d48 <readstat_get_variable@plt>
   1e818:	mov	r1, r0
   1e81c:	ldr	r0, [r4, #60]	; 0x3c
   1e820:	ldr	r2, [r4, #84]	; 0x54
   1e824:	ldr	r1, [r1, #1588]	; 0x634
   1e828:	mla	r0, r2, r5, r0
   1e82c:	cmp	r1, #0
   1e830:	beq	1e840 <dta_begin_data+0x40c>
   1e834:	add	r1, r1, #4
   1e838:	bl	4c94 <strncpy@plt>
   1e83c:	b	1e848 <dta_begin_data+0x414>
   1e840:	mov	r1, #0
   1e844:	bl	4c70 <memset@plt>
   1e848:	ldr	r0, [r4, #148]	; 0x94
   1e84c:	add	r5, r5, #1
   1e850:	cmp	r5, r0
   1e854:	blt	1e80c <dta_begin_data+0x3d8>
   1e858:	ldr	r1, [r4, #60]	; 0x3c
   1e85c:	ldr	r2, [r4, #64]	; 0x40
   1e860:	mov	r0, r7
   1e864:	bl	4e20 <readstat_write_bytes@plt>
   1e868:	mov	r6, r0
   1e86c:	cmp	r0, #0
   1e870:	bne	1e4ac <dta_begin_data+0x78>
   1e874:	ldrb	r0, [r4, #192]	; 0xc0
   1e878:	tst	r0, #4
   1e87c:	bne	1effc <dta_begin_data+0xbc8>
   1e880:	ldr	r0, [r4, #148]	; 0x94
   1e884:	cmp	r0, #1
   1e888:	blt	1e8c4 <dta_begin_data+0x490>
   1e88c:	mov	r5, #0
   1e890:	mov	r0, r7
   1e894:	mov	r1, r5
   1e898:	bl	4d48 <readstat_get_variable@plt>
   1e89c:	ldr	r1, [r4, #68]	; 0x44
   1e8a0:	ldr	r2, [r4, #88]	; 0x58
   1e8a4:	mla	r3, r2, r5, r1
   1e8a8:	add	r1, r0, #564	; 0x234
   1e8ac:	mov	r0, r3
   1e8b0:	bl	4c94 <strncpy@plt>
   1e8b4:	ldr	r0, [r4, #148]	; 0x94
   1e8b8:	add	r5, r5, #1
   1e8bc:	cmp	r5, r0
   1e8c0:	blt	1e890 <dta_begin_data+0x45c>
   1e8c4:	ldr	r1, [r4, #68]	; 0x44
   1e8c8:	ldr	r2, [r4, #72]	; 0x48
   1e8cc:	mov	r0, r7
   1e8d0:	bl	4e20 <readstat_write_bytes@plt>
   1e8d4:	mov	r6, r0
   1e8d8:	cmp	r0, #0
   1e8dc:	bne	1e4ac <dta_begin_data+0x78>
   1e8e0:	ldrb	r0, [r4, #192]	; 0xc0
   1e8e4:	tst	r0, #4
   1e8e8:	beq	1e908 <dta_begin_data+0x4d4>
   1e8ec:	ldr	r1, [pc, #2000]	; 1f0c4 <dta_begin_data+0xc90>
   1e8f0:	mov	r0, r7
   1e8f4:	add	r1, pc, r1
   1e8f8:	bl	4b38 <readstat_write_string@plt>
   1e8fc:	mov	r6, r0
   1e900:	cmp	r0, #0
   1e904:	bne	1e4ac <dta_begin_data+0x78>
   1e908:	mov	r0, r7
   1e90c:	mov	r1, r4
   1e910:	bl	1fb60 <dta_emit_characteristics>
   1e914:	mov	r6, r0
   1e918:	cmp	r0, #0
   1e91c:	bne	1e4ac <dta_begin_data+0x78>
   1e920:	ldrb	r0, [r4, #192]	; 0xc0
   1e924:	tst	r0, #4
   1e928:	beq	1e948 <dta_begin_data+0x514>
   1e92c:	ldr	r1, [pc, #1940]	; 1f0c8 <dta_begin_data+0xc94>
   1e930:	mov	r0, r7
   1e934:	add	r1, pc, r1
   1e938:	bl	4b38 <readstat_write_string@plt>
   1e93c:	mov	r6, r0
   1e940:	cmp	r0, #0
   1e944:	bne	1e4ac <dta_begin_data+0x78>
   1e948:	mov	r6, #0
   1e94c:	str	r4, [r7, #300]	; 0x12c
   1e950:	b	1e4bc <dta_begin_data+0x88>
   1e954:	ldr	r1, [pc, #1768]	; 1f044 <dta_begin_data+0xc10>
   1e958:	mov	r0, r9
   1e95c:	add	r1, pc, r1
   1e960:	bl	4b38 <readstat_write_string@plt>
   1e964:	mov	r6, r0
   1e968:	cmp	r0, #0
   1e96c:	bne	1e4ac <dta_begin_data+0x78>
   1e970:	ldrb	r0, [r4, #192]	; 0xc0
   1e974:	tst	r0, #4
   1e978:	beq	1e998 <dta_begin_data+0x564>
   1e97c:	ldr	r1, [pc, #1732]	; 1f048 <dta_begin_data+0xc14>
   1e980:	mov	r0, r9
   1e984:	add	r1, pc, r1
   1e988:	bl	4b38 <readstat_write_string@plt>
   1e98c:	mov	r6, r0
   1e990:	cmp	r0, #0
   1e994:	bne	1e4ac <dta_begin_data+0x78>
   1e998:	ldr	r3, [r9, #8]
   1e99c:	ldr	r2, [pc, #1704]	; 1f04c <dta_begin_data+0xc18>
   1e9a0:	add	r5, sp, #40	; 0x28
   1e9a4:	mov	r1, #128	; 0x80
   1e9a8:	mov	r0, r5
   1e9ac:	add	r2, pc, r2
   1e9b0:	bl	4c4c <snprintf@plt>
   1e9b4:	mov	r0, r9
   1e9b8:	mov	r1, r5
   1e9bc:	bl	4b38 <readstat_write_string@plt>
   1e9c0:	mov	r6, r0
   1e9c4:	cmp	r0, #0
   1e9c8:	bne	1e4ac <dta_begin_data+0x78>
   1e9cc:	bl	48b0 <machine_is_little_endian@plt>
   1e9d0:	ldr	r1, [pc, #1656]	; 1f050 <dta_begin_data+0xc1c>
   1e9d4:	mov	r2, #3
   1e9d8:	cmp	r0, #0
   1e9dc:	mov	r0, r9
   1e9e0:	str	r2, [sp]
   1e9e4:	add	r1, pc, r1
   1e9e8:	str	r1, [sp, #4]
   1e9ec:	ldr	r1, [pc, #1632]	; 1f054 <dta_begin_data+0xc20>
   1e9f0:	ldr	r3, [pc, #1632]	; 1f058 <dta_begin_data+0xc24>
   1e9f4:	ldr	r2, [pc, #1632]	; 1f05c <dta_begin_data+0xc28>
   1e9f8:	add	r1, pc, r1
   1e9fc:	add	r3, pc, r3
   1ea00:	add	r2, pc, r2
   1ea04:	moveq	r3, r1
   1ea08:	mov	r1, r4
   1ea0c:	bl	2008c <dta_write_chunk>
   1ea10:	mov	r6, r0
   1ea14:	cmp	r0, #0
   1ea18:	bne	1e4ac <dta_begin_data+0x78>
   1ea1c:	ldr	r0, [r9, #8]
   1ea20:	cmp	r0, #119	; 0x77
   1ea24:	blt	1ee64 <dta_begin_data+0xa30>
   1ea28:	ldr	r0, [r9, #28]
   1ea2c:	mov	r1, #4
   1ea30:	str	r0, [sp, #32]
   1ea34:	ldr	r0, [pc, #1572]	; 1f060 <dta_begin_data+0xc2c>
   1ea38:	add	r0, pc, r0
   1ea3c:	b	1ee78 <dta_begin_data+0xa44>
   1ea40:	mov	r0, #0
   1ea44:	mov	r5, r9
   1ea48:	str	r0, [sp, #44]	; 0x2c
   1ea4c:	str	r0, [sp, #40]	; 0x28
   1ea50:	ldr	r1, [r9, #4]
   1ea54:	str	r0, [sp, #52]	; 0x34
   1ea58:	str	r1, [sp, #48]	; 0x30
   1ea5c:	adds	r1, r1, #123	; 0x7b
   1ea60:	adc	r2, r0, #0
   1ea64:	str	r1, [sp, #56]	; 0x38
   1ea68:	str	r2, [sp, #60]	; 0x3c
   1ea6c:	ldr	r3, [r4, #24]
   1ea70:	ldr	r7, [r4, #148]	; 0x94
   1ea74:	mul	r3, r7, r3
   1ea78:	add	r3, r3, #33	; 0x21
   1ea7c:	adds	r1, r1, r3
   1ea80:	adc	r2, r2, #0
   1ea84:	str	r1, [sp, #64]	; 0x40
   1ea88:	str	r2, [sp, #68]	; 0x44
   1ea8c:	ldr	r3, [r4, #40]	; 0x28
   1ea90:	add	r3, r3, #21
   1ea94:	adds	r1, r1, r3
   1ea98:	adc	r2, r2, #0
   1ea9c:	str	r1, [sp, #72]	; 0x48
   1eaa0:	str	r2, [sp, #76]	; 0x4c
   1eaa4:	ldr	r3, [r4, #48]	; 0x30
   1eaa8:	add	r3, r3, #21
   1eaac:	adds	r1, r1, r3
   1eab0:	adc	r2, r2, #0
   1eab4:	str	r1, [sp, #80]	; 0x50
   1eab8:	str	r2, [sp, #84]	; 0x54
   1eabc:	ldr	r3, [r4, #56]	; 0x38
   1eac0:	add	r3, r3, #19
   1eac4:	adds	r1, r1, r3
   1eac8:	adc	r2, r2, #0
   1eacc:	str	r1, [sp, #88]	; 0x58
   1ead0:	str	r2, [sp, #92]	; 0x5c
   1ead4:	ldr	r3, [r4, #64]	; 0x40
   1ead8:	add	r3, r3, #39	; 0x27
   1eadc:	adds	r1, r1, r3
   1eae0:	adc	r2, r2, #0
   1eae4:	str	r1, [sp, #96]	; 0x60
   1eae8:	str	r2, [sp, #100]	; 0x64
   1eaec:	ldr	r3, [r4, #72]	; 0x48
   1eaf0:	add	r3, r3, #35	; 0x23
   1eaf4:	adds	r9, r1, r3
   1eaf8:	adc	r8, r2, #0
   1eafc:	str	r9, [sp, #104]	; 0x68
   1eb00:	str	r8, [sp, #108]	; 0x6c
   1eb04:	ldr	r6, [r5, #52]	; 0x34
   1eb08:	cmp	r6, #1
   1eb0c:	blt	1ebb0 <dta_begin_data+0x77c>
   1eb10:	ldr	r0, [r4, #92]	; 0x5c
   1eb14:	ldr	r1, [r4, #96]	; 0x60
   1eb18:	str	r4, [sp, #24]
   1eb1c:	ldr	r4, [r5, #48]	; 0x30
   1eb20:	str	r7, [sp, #20]
   1eb24:	add	r0, r0, sl
   1eb28:	add	r0, r0, r1, lsl #1
   1eb2c:	add	r7, r0, #6
   1eb30:	mov	r0, #0
   1eb34:	add	r5, r7, r0
   1eb38:	ldr	r0, [r4], #4
   1eb3c:	bl	4bd4 <strlen@plt>
   1eb40:	add	r0, r5, r0
   1eb44:	subs	r6, r6, #1
   1eb48:	bne	1eb34 <dta_begin_data+0x700>
   1eb4c:	ldr	r4, [sp, #24]
   1eb50:	ldr	r7, [sp, #20]
   1eb54:	add	r1, r0, #35	; 0x23
   1eb58:	mov	r0, #0
   1eb5c:	b	1ebb4 <dta_begin_data+0x780>
   1eb60:	mov	r6, r0
   1eb64:	b	1e4ac <dta_begin_data+0x78>
   1eb68:	ldr	r1, [pc, #1304]	; 1f088 <dta_begin_data+0xc54>
   1eb6c:	mov	r0, r9
   1eb70:	add	r1, pc, r1
   1eb74:	bl	4b38 <readstat_write_string@plt>
   1eb78:	mov	r6, r0
   1eb7c:	cmp	r0, #0
   1eb80:	bne	1e4ac <dta_begin_data+0x78>
   1eb84:	ldrb	r0, [r4, #192]	; 0xc0
   1eb88:	tst	r0, #4
   1eb8c:	beq	1e64c <dta_begin_data+0x218>
   1eb90:	ldr	r1, [pc, #1268]	; 1f08c <dta_begin_data+0xc58>
   1eb94:	mov	r0, r9
   1eb98:	add	r1, pc, r1
   1eb9c:	bl	4b38 <readstat_write_string@plt>
   1eba0:	mov	r6, r0
   1eba4:	cmp	r0, #0
   1eba8:	bne	1e4ac <dta_begin_data+0x78>
   1ebac:	b	1e64c <dta_begin_data+0x218>
   1ebb0:	mov	r1, #35	; 0x23
   1ebb4:	adds	r2, r1, r9
   1ebb8:	adc	r9, r0, r8
   1ebbc:	cmp	r7, #0
   1ebc0:	str	r2, [sp, #112]	; 0x70
   1ebc4:	str	r9, [sp, #116]	; 0x74
   1ebc8:	ble	1ec48 <dta_begin_data+0x814>
   1ebcc:	mov	r8, #0
   1ebd0:	sub	r6, fp, #30
   1ebd4:	add	r7, sp, #32
   1ebd8:	mov	r5, #0
   1ebdc:	str	r2, [sp, #24]
   1ebe0:	ldr	r0, [sp, #28]
   1ebe4:	mov	r1, r5
   1ebe8:	str	r8, [sp, #32]
   1ebec:	bl	4d48 <readstat_get_variable@plt>
   1ebf0:	strh	r8, [fp, #-30]	; 0xffffffe2
   1ebf4:	mov	r2, r6
   1ebf8:	ldrb	r1, [r4, #20]
   1ebfc:	bl	20104 <dta_typecode_for_variable>
   1ec00:	ldrh	r0, [fp, #-30]	; 0xffffffe2
   1ec04:	mov	r1, r4
   1ec08:	mov	r2, r7
   1ec0c:	mov	r3, #0
   1ec10:	bl	4bbc <dta_type_info@plt>
   1ec14:	cmp	r0, #0
   1ec18:	bne	1ec2c <dta_begin_data+0x7f8>
   1ec1c:	ldr	r0, [r4, #160]	; 0xa0
   1ec20:	ldr	r1, [sp, #32]
   1ec24:	add	r0, r0, r1
   1ec28:	str	r0, [r4, #160]	; 0xa0
   1ec2c:	ldr	r0, [r4, #148]	; 0x94
   1ec30:	add	r5, r5, #1
   1ec34:	cmp	r5, r0
   1ec38:	blt	1ebe0 <dta_begin_data+0x7ac>
   1ec3c:	ldrb	r0, [r4, #192]	; 0xc0
   1ec40:	ldr	r2, [sp, #24]
   1ec44:	and	sl, r0, #4
   1ec48:	ldr	r0, [r4, #152]	; 0x98
   1ec4c:	ldr	r1, [r4, #160]	; 0xa0
   1ec50:	cmp	sl, #0
   1ec54:	mul	r0, r1, r0
   1ec58:	addne	r0, r0, #13
   1ec5c:	adds	r0, r2, r0
   1ec60:	adc	r1, r9, #0
   1ec64:	ldr	r9, [sp, #28]
   1ec68:	str	r0, [sp, #120]	; 0x78
   1ec6c:	str	r1, [sp, #124]	; 0x7c
   1ec70:	ldr	r2, [r9, #64]	; 0x40
   1ec74:	cmp	r2, #1
   1ec78:	blt	1ecb0 <dta_begin_data+0x87c>
   1ec7c:	ldr	r7, [r4, #116]	; 0x74
   1ec80:	ldr	r6, [r9, #60]	; 0x3c
   1ec84:	mov	r3, #16
   1ec88:	cmp	r7, #4
   1ec8c:	mov	r7, #0
   1ec90:	movwhi	r3, #20
   1ec94:	ldr	r5, [r6], #4
   1ec98:	add	r7, r7, r3
   1ec9c:	subs	r2, r2, #1
   1eca0:	ldr	r5, [r5, #16]
   1eca4:	add	r7, r7, r5
   1eca8:	bne	1ec94 <dta_begin_data+0x860>
   1ecac:	b	1ecb4 <dta_begin_data+0x880>
   1ecb0:	mov	r7, #0
   1ecb4:	cmp	sl, #0
   1ecb8:	mov	r8, sl
   1ecbc:	addne	r7, r7, #7
   1ecc0:	add	r2, r7, sl, lsl #1
   1ecc4:	adds	r0, r0, r2
   1ecc8:	str	r0, [sp, #24]
   1eccc:	str	r0, [sp, #128]	; 0x80
   1ecd0:	adc	r0, r1, #0
   1ecd4:	cmp	sl, #0
   1ecd8:	str	r0, [sp, #132]	; 0x84
   1ecdc:	str	r0, [sp, #20]
   1ece0:	movwne	r8, #14
   1ece4:	ldr	r0, [r9, #40]	; 0x28
   1ece8:	cmp	r0, #1
   1ecec:	blt	1ed7c <dta_begin_data+0x948>
   1ecf0:	mov	r6, #0
   1ecf4:	mov	r0, r9
   1ecf8:	mov	r1, r6
   1ecfc:	bl	4df0 <readstat_get_label_set@plt>
   1ed00:	ldr	r9, [r0, #264]	; 0x108
   1ed04:	mov	sl, #0
   1ed08:	cmp	r9, #1
   1ed0c:	blt	1ed40 <dta_begin_data+0x90c>
   1ed10:	mov	r5, r0
   1ed14:	mov	sl, #0
   1ed18:	mov	r7, #0
   1ed1c:	mov	r0, r5
   1ed20:	mov	r1, r7
   1ed24:	bl	4e8c <readstat_get_value_label@plt>
   1ed28:	ldr	r0, [r0, #28]
   1ed2c:	add	r7, r7, #1
   1ed30:	cmp	r9, r7
   1ed34:	add	r0, sl, r0
   1ed38:	add	sl, r0, #1
   1ed3c:	bne	1ed1c <dta_begin_data+0x8e8>
   1ed40:	ldrd	r2, [r4, #104]	; 0x68
   1ed44:	add	r0, r8, r9, lsl #3
   1ed48:	ldrb	r1, [r4, #192]	; 0xc0
   1ed4c:	ldr	r9, [sp, #28]
   1ed50:	add	r6, r6, #1
   1ed54:	add	r0, r0, sl
   1ed58:	add	r0, r0, r2
   1ed5c:	ands	sl, r1, #4
   1ed60:	add	r0, r0, r3
   1ed64:	add	r8, r0, #17
   1ed68:	addeq	r8, r0, #12
   1ed6c:	ldr	r0, [r9, #40]	; 0x28
   1ed70:	addne	r8, r8, #6
   1ed74:	cmp	r6, r0
   1ed78:	blt	1ecf4 <dta_begin_data+0x8c0>
   1ed7c:	ldr	r0, [sp, #24]
   1ed80:	ldr	r1, [sp, #20]
   1ed84:	cmp	sl, #0
   1ed88:	addne	r8, r8, #15
   1ed8c:	adds	r0, r0, r8
   1ed90:	adc	r1, r1, #0
   1ed94:	adds	r2, r0, #12
   1ed98:	str	r0, [sp, #136]	; 0x88
   1ed9c:	adc	r3, r1, #0
   1eda0:	cmp	sl, #0
   1eda4:	str	r1, [sp, #140]	; 0x8c
   1eda8:	moveq	r3, r1
   1edac:	moveq	r2, r0
   1edb0:	mov	r1, #112	; 0x70
   1edb4:	str	r3, [sp, #148]	; 0x94
   1edb8:	str	r2, [sp, #144]	; 0x90
   1edbc:	add	r3, sp, #40	; 0x28
   1edc0:	ldr	r0, [pc, #692]	; 1f07c <dta_begin_data+0xc48>
   1edc4:	str	r1, [sp]
   1edc8:	mov	r1, r4
   1edcc:	add	r0, pc, r0
   1edd0:	str	r0, [sp, #4]
   1edd4:	mov	r0, r9
   1edd8:	ldr	r2, [pc, #672]	; 1f080 <dta_begin_data+0xc4c>
   1eddc:	add	r2, pc, r2
   1ede0:	bl	2008c <dta_write_chunk>
   1ede4:	mov	r6, r0
   1ede8:	cmp	r0, #0
   1edec:	bne	1e4ac <dta_begin_data+0x78>
   1edf0:	ldrb	r0, [r4, #192]	; 0xc0
   1edf4:	tst	r0, #4
   1edf8:	beq	1e558 <dta_begin_data+0x124>
   1edfc:	ldr	r1, [pc, #640]	; 1f084 <dta_begin_data+0xc50>
   1ee00:	mov	r0, r9
   1ee04:	add	r1, pc, r1
   1ee08:	bl	4b38 <readstat_write_string@plt>
   1ee0c:	mov	r6, r0
   1ee10:	cmp	r0, #0
   1ee14:	bne	1e4ac <dta_begin_data+0x78>
   1ee18:	b	1e558 <dta_begin_data+0x124>
   1ee1c:	ldr	r1, [pc, #620]	; 1f090 <dta_begin_data+0xc5c>
   1ee20:	mov	r0, r9
   1ee24:	add	r1, pc, r1
   1ee28:	bl	4b38 <readstat_write_string@plt>
   1ee2c:	mov	r6, r0
   1ee30:	cmp	r0, #0
   1ee34:	bne	1e4ac <dta_begin_data+0x78>
   1ee38:	ldrb	r0, [r4, #192]	; 0xc0
   1ee3c:	tst	r0, #4
   1ee40:	beq	1e6b8 <dta_begin_data+0x284>
   1ee44:	ldr	r1, [pc, #584]	; 1f094 <dta_begin_data+0xc60>
   1ee48:	mov	r0, r9
   1ee4c:	add	r1, pc, r1
   1ee50:	bl	4b38 <readstat_write_string@plt>
   1ee54:	mov	r6, r0
   1ee58:	cmp	r0, #0
   1ee5c:	bne	1e4ac <dta_begin_data+0x78>
   1ee60:	b	1e6b8 <dta_begin_data+0x284>
   1ee64:	ldr	r0, [r9, #28]
   1ee68:	mov	r1, #2
   1ee6c:	strh	r0, [sp, #32]
   1ee70:	ldr	r0, [pc, #492]	; 1f064 <dta_begin_data+0xc30>
   1ee74:	add	r0, pc, r0
   1ee78:	str	r1, [sp]
   1ee7c:	str	r0, [sp, #4]
   1ee80:	add	r3, sp, #32
   1ee84:	mov	r0, r9
   1ee88:	mov	r1, r4
   1ee8c:	ldr	r2, [pc, #468]	; 1f068 <dta_begin_data+0xc34>
   1ee90:	add	r2, pc, r2
   1ee94:	bl	2008c <dta_write_chunk>
   1ee98:	mov	r6, r0
   1ee9c:	cmp	r0, #0
   1eea0:	bne	1e4ac <dta_begin_data+0x78>
   1eea4:	ldr	r0, [r9, #8]
   1eea8:	cmp	r0, #118	; 0x76
   1eeac:	blt	1ef18 <dta_begin_data+0xae4>
   1eeb0:	ldr	r0, [r9, #80]	; 0x50
   1eeb4:	mov	r1, #8
   1eeb8:	str	r0, [sp, #32]
   1eebc:	asr	r0, r0, #31
   1eec0:	str	r0, [sp, #36]	; 0x24
   1eec4:	ldr	r0, [pc, #416]	; 1f06c <dta_begin_data+0xc38>
   1eec8:	add	r0, pc, r0
   1eecc:	b	1ef2c <dta_begin_data+0xaf8>
   1eed0:	ldr	r1, [pc, #448]	; 1f098 <dta_begin_data+0xc64>
   1eed4:	mov	r0, r9
   1eed8:	add	r1, pc, r1
   1eedc:	bl	4b38 <readstat_write_string@plt>
   1eee0:	mov	r6, r0
   1eee4:	cmp	r0, #0
   1eee8:	bne	1e4ac <dta_begin_data+0x78>
   1eeec:	ldrb	r0, [r4, #192]	; 0xc0
   1eef0:	tst	r0, #4
   1eef4:	beq	1e6f0 <dta_begin_data+0x2bc>
   1eef8:	ldr	r1, [pc, #412]	; 1f09c <dta_begin_data+0xc68>
   1eefc:	mov	r0, r9
   1ef00:	add	r1, pc, r1
   1ef04:	bl	4b38 <readstat_write_string@plt>
   1ef08:	mov	r6, r0
   1ef0c:	cmp	r0, #0
   1ef10:	bne	1e4ac <dta_begin_data+0x78>
   1ef14:	b	1e6f0 <dta_begin_data+0x2bc>
   1ef18:	ldr	r0, [r9, #80]	; 0x50
   1ef1c:	mov	r1, #4
   1ef20:	str	r0, [sp, #32]
   1ef24:	ldr	r0, [pc, #324]	; 1f070 <dta_begin_data+0xc3c>
   1ef28:	add	r0, pc, r0
   1ef2c:	str	r1, [sp]
   1ef30:	str	r0, [sp, #4]
   1ef34:	add	r3, sp, #32
   1ef38:	mov	r0, r9
   1ef3c:	mov	r1, r4
   1ef40:	ldr	r2, [pc, #300]	; 1f074 <dta_begin_data+0xc40>
   1ef44:	add	r2, pc, r2
   1ef48:	bl	2008c <dta_write_chunk>
   1ef4c:	mov	r6, r0
   1ef50:	cmp	r0, #0
   1ef54:	bne	1e4ac <dta_begin_data+0x78>
   1ef58:	mov	r0, r9
   1ef5c:	mov	r1, r4
   1ef60:	bl	1fd90 <dta_emit_header_data_label>
   1ef64:	mov	r6, r0
   1ef68:	cmp	r0, #0
   1ef6c:	bne	1e4ac <dta_begin_data+0x78>
   1ef70:	mov	r0, r9
   1ef74:	mov	r1, r4
   1ef78:	bl	1fed4 <dta_emit_header_time_stamp>
   1ef7c:	mov	r6, r0
   1ef80:	cmp	r0, #0
   1ef84:	bne	1e4ac <dta_begin_data+0x78>
   1ef88:	ldrb	r0, [r4, #192]	; 0xc0
   1ef8c:	tst	r0, #4
   1ef90:	beq	1e548 <dta_begin_data+0x114>
   1ef94:	ldr	r1, [pc, #220]	; 1f078 <dta_begin_data+0xc44>
   1ef98:	mov	r0, r9
   1ef9c:	add	r1, pc, r1
   1efa0:	bl	4b38 <readstat_write_string@plt>
   1efa4:	mov	r6, r0
   1efa8:	cmp	r0, #0
   1efac:	bne	1e4ac <dta_begin_data+0x78>
   1efb0:	b	1e548 <dta_begin_data+0x114>
   1efb4:	ldr	r1, [pc, #248]	; 1f0b4 <dta_begin_data+0xc80>
   1efb8:	mov	r0, r7
   1efbc:	add	r1, pc, r1
   1efc0:	bl	4b38 <readstat_write_string@plt>
   1efc4:	mov	r6, r0
   1efc8:	cmp	r0, #0
   1efcc:	bne	1e4ac <dta_begin_data+0x78>
   1efd0:	ldrb	r0, [r4, #192]	; 0xc0
   1efd4:	tst	r0, #4
   1efd8:	beq	1e7fc <dta_begin_data+0x3c8>
   1efdc:	ldr	r1, [pc, #212]	; 1f0b8 <dta_begin_data+0xc84>
   1efe0:	mov	r0, r7
   1efe4:	add	r1, pc, r1
   1efe8:	bl	4b38 <readstat_write_string@plt>
   1efec:	mov	r6, r0
   1eff0:	cmp	r0, #0
   1eff4:	bne	1e4ac <dta_begin_data+0x78>
   1eff8:	b	1e7fc <dta_begin_data+0x3c8>
   1effc:	ldr	r1, [pc, #184]	; 1f0bc <dta_begin_data+0xc88>
   1f000:	mov	r0, r7
   1f004:	add	r1, pc, r1
   1f008:	bl	4b38 <readstat_write_string@plt>
   1f00c:	mov	r6, r0
   1f010:	cmp	r0, #0
   1f014:	bne	1e4ac <dta_begin_data+0x78>
   1f018:	ldrb	r0, [r4, #192]	; 0xc0
   1f01c:	tst	r0, #4
   1f020:	beq	1e880 <dta_begin_data+0x44c>
   1f024:	ldr	r1, [pc, #148]	; 1f0c0 <dta_begin_data+0xc8c>
   1f028:	mov	r0, r7
   1f02c:	add	r1, pc, r1
   1f030:	bl	4b38 <readstat_write_string@plt>
   1f034:	mov	r6, r0
   1f038:	cmp	r0, #0
   1f03c:	bne	1e4ac <dta_begin_data+0x78>
   1f040:	b	1e880 <dta_begin_data+0x44c>
   1f044:	.word	0x00007903
   1f048:	.word	0x000078e7
   1f04c:	.word	0x00007ba1
   1f050:	.word	0x000078a6
   1f054:	.word	0x0000789f
   1f058:	.word	0x0000789f
   1f05c:	.word	0x0000787e
   1f060:	.word	0x0000786b
   1f064:	.word	0x0000742f
   1f068:	.word	0x0000740f
   1f06c:	.word	0x000073e4
   1f070:	.word	0x00007384
   1f074:	.word	0x00007364
   1f078:	.word	0x000072b9
   1f07c:	.word	0x00007515
   1f080:	.word	0x000074ff
   1f084:	.word	0x000074e4
   1f088:	.word	0x00007789
   1f08c:	.word	0x00007773
   1f090:	.word	0x000074f2
   1f094:	.word	0x000074d6
   1f098:	.word	0x00007455
   1f09c:	.word	0x00007439
   1f0a0:	.word	0x00007efc
   1f0a4:	.word	0x000062d6
   1f0a8:	.word	0x00007e47
   1f0ac:	.word	0x00007e25
   1f0b0:	.word	0x00007e21
   1f0b4:	.word	0x00007387
   1f0b8:	.word	0x0000736a
   1f0bc:	.word	0x0000735e
   1f0c0:	.word	0x0000734b
   1f0c4:	.word	0x00007a95
   1f0c8:	.word	0x00007b0e

0001f0cc <dta_end_data>:
   1f0cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f0d0:	add	fp, sp, #28
   1f0d4:	sub	sp, sp, #52	; 0x34
   1f0d8:	mov	r4, r0
   1f0dc:	ldr	r0, [r0, #308]	; 0x134
   1f0e0:	cmp	r0, #0
   1f0e4:	beq	1f298 <dta_end_data+0x1cc>
   1f0e8:	ldr	r0, [r4, #300]	; 0x12c
   1f0ec:	str	r0, [sp, #16]
   1f0f0:	ldrb	r0, [r0, #192]	; 0xc0
   1f0f4:	tst	r0, #4
   1f0f8:	bne	1f2a0 <dta_end_data+0x1d4>
   1f0fc:	ldr	r5, [sp, #16]
   1f100:	ldr	r0, [r5, #100]	; 0x64
   1f104:	cmp	r0, #2
   1f108:	bne	1f3e8 <dta_end_data+0x31c>
   1f10c:	ldr	r0, [r4, #40]	; 0x28
   1f110:	cmp	r0, #1
   1f114:	blt	1f70c <dta_end_data+0x640>
   1f118:	mov	r9, #8
   1f11c:	mov	r8, #0
   1f120:	mov	r5, #0
   1f124:	str	r4, [sp, #20]
   1f128:	mov	r0, r4
   1f12c:	mov	r1, r8
   1f130:	bl	4df0 <readstat_get_label_set@plt>
   1f134:	mov	r7, r0
   1f138:	ldr	r0, [r0, #264]	; 0x108
   1f13c:	mov	r4, #0
   1f140:	cmp	r0, #1
   1f144:	blt	1f18c <dta_end_data+0xc0>
   1f148:	mov	r4, #0
   1f14c:	mov	r6, #0
   1f150:	mov	r0, r7
   1f154:	mov	r1, r6
   1f158:	bl	4e8c <readstat_get_value_label@plt>
   1f15c:	ldrb	r1, [r0, #12]
   1f160:	cmp	r1, #0
   1f164:	bne	1f714 <dta_end_data+0x648>
   1f168:	ldr	r0, [r0, #8]
   1f16c:	cmp	r0, #1024	; 0x400
   1f170:	bhi	1f720 <dta_end_data+0x654>
   1f174:	cmp	r0, r4
   1f178:	add	r6, r6, #1
   1f17c:	movgt	r4, r0
   1f180:	ldr	r0, [r7, #264]	; 0x108
   1f184:	cmp	r6, r0
   1f188:	blt	1f150 <dta_end_data+0x84>
   1f18c:	add	r0, r9, r4, lsl #3
   1f190:	ldr	r4, [sp, #20]
   1f194:	sub	r1, fp, #32
   1f198:	mov	r2, #2
   1f19c:	strh	r0, [fp, #-32]	; 0xffffffe0
   1f1a0:	mov	r0, r4
   1f1a4:	bl	4e20 <readstat_write_bytes@plt>
   1f1a8:	cmp	r0, #0
   1f1ac:	bne	1f784 <dta_end_data+0x6b8>
   1f1b0:	ldr	r6, [sp, #16]
   1f1b4:	mov	r0, #0
   1f1b8:	add	sl, sp, #24
   1f1bc:	add	r1, r7, #4
   1f1c0:	str	r0, [sp, #28]
   1f1c4:	str	r0, [sp, #24]
   1f1c8:	str	r0, [sp, #34]	; 0x22
   1f1cc:	str	r0, [sp, #30]
   1f1d0:	mov	r0, sl
   1f1d4:	ldr	r2, [r6, #104]	; 0x68
   1f1d8:	bl	4c94 <strncpy@plt>
   1f1dc:	ldrd	r0, [r6, #104]	; 0x68
   1f1e0:	add	r2, r1, r0
   1f1e4:	mov	r0, r4
   1f1e8:	mov	r1, sl
   1f1ec:	bl	4e20 <readstat_write_bytes@plt>
   1f1f0:	cmp	r0, #0
   1f1f4:	bne	1f784 <dta_end_data+0x6b8>
   1f1f8:	ldrsh	r1, [fp, #-32]	; 0xffffffe0
   1f1fc:	mov	r0, r5
   1f200:	bl	49e8 <realloc@plt>
   1f204:	ldrsh	r6, [fp, #-32]	; 0xffffffe0
   1f208:	mov	r1, #0
   1f20c:	mov	r5, r0
   1f210:	mov	r2, r6
   1f214:	bl	4c70 <memset@plt>
   1f218:	ldr	r0, [r7, #264]	; 0x108
   1f21c:	cmp	r0, #1
   1f220:	blt	1f268 <dta_end_data+0x19c>
   1f224:	mov	r6, #0
   1f228:	mov	r0, r7
   1f22c:	mov	r1, r6
   1f230:	bl	4e8c <readstat_get_value_label@plt>
   1f234:	ldrd	r2, [r0, #24]
   1f238:	ldr	r1, [r0, #8]
   1f23c:	cmp	r3, #8
   1f240:	add	r0, r5, r1, lsl #3
   1f244:	mov	r1, r2
   1f248:	movcs	r3, r9
   1f24c:	mov	r2, r3
   1f250:	bl	4910 <memcpy@plt>
   1f254:	ldr	r0, [r7, #264]	; 0x108
   1f258:	add	r6, r6, #1
   1f25c:	cmp	r6, r0
   1f260:	blt	1f228 <dta_end_data+0x15c>
   1f264:	ldrsh	r6, [fp, #-32]	; 0xffffffe0
   1f268:	mov	r0, r4
   1f26c:	mov	r1, r5
   1f270:	mov	r2, r6
   1f274:	bl	4e20 <readstat_write_bytes@plt>
   1f278:	cmp	r0, #0
   1f27c:	bne	1f784 <dta_end_data+0x6b8>
   1f280:	ldr	r0, [r4, #40]	; 0x28
   1f284:	add	r8, r8, #1
   1f288:	cmp	r8, r0
   1f28c:	blt	1f128 <dta_end_data+0x5c>
   1f290:	mov	sl, #0
   1f294:	b	1f728 <dta_end_data+0x65c>
   1f298:	mov	sl, #14
   1f29c:	b	1f804 <dta_end_data+0x738>
   1f2a0:	ldr	r1, [pc, #1384]	; 1f810 <dta_end_data+0x744>
   1f2a4:	mov	r0, r4
   1f2a8:	add	r1, pc, r1
   1f2ac:	bl	4b38 <readstat_write_string@plt>
   1f2b0:	mov	sl, r0
   1f2b4:	cmp	r0, #0
   1f2b8:	bne	1f804 <dta_end_data+0x738>
   1f2bc:	ldr	r0, [sp, #16]
   1f2c0:	ldrb	r0, [r0, #192]	; 0xc0
   1f2c4:	tst	r0, #4
   1f2c8:	beq	1f0fc <dta_end_data+0x30>
   1f2cc:	ldr	r1, [pc, #1344]	; 1f814 <dta_end_data+0x748>
   1f2d0:	mov	r0, r4
   1f2d4:	add	r1, pc, r1
   1f2d8:	bl	4b38 <readstat_write_string@plt>
   1f2dc:	mov	sl, r0
   1f2e0:	cmp	r0, #0
   1f2e4:	bne	1f804 <dta_end_data+0x738>
   1f2e8:	ldr	r0, [r4, #64]	; 0x40
   1f2ec:	cmp	r0, #1
   1f2f0:	blt	1f3c8 <dta_end_data+0x2fc>
   1f2f4:	ldr	r8, [pc, #1308]	; 1f818 <dta_end_data+0x74c>
   1f2f8:	add	r5, sp, #24
   1f2fc:	mov	r6, #0
   1f300:	add	r7, r5, #4
   1f304:	add	r8, pc, r8
   1f308:	ldr	r0, [r4, #60]	; 0x3c
   1f30c:	mov	r1, r8
   1f310:	ldr	r9, [r0, r6, lsl #2]
   1f314:	mov	r0, r4
   1f318:	bl	4b38 <readstat_write_string@plt>
   1f31c:	cmp	r0, #0
   1f320:	bne	1f800 <dta_end_data+0x734>
   1f324:	ldr	r0, [sp, #16]
   1f328:	ldr	r0, [r0, #116]	; 0x74
   1f32c:	cmp	r0, #5
   1f330:	bcc	1f364 <dta_end_data+0x298>
   1f334:	ldr	r0, [r9]
   1f338:	mov	r2, #17
   1f33c:	str	r0, [sp, #24]
   1f340:	ldr	r0, [r9, #8]
   1f344:	ldr	r1, [r9, #12]
   1f348:	stm	r7, {r0, r1}
   1f34c:	mov	r0, #130	; 0x82
   1f350:	mov	r1, r5
   1f354:	strb	r0, [sp, #36]	; 0x24
   1f358:	ldr	r0, [r9, #16]
   1f35c:	str	r0, [sp, #37]	; 0x25
   1f360:	b	1f38c <dta_end_data+0x2c0>
   1f364:	ldr	r0, [r9]
   1f368:	mov	r1, #130	; 0x82
   1f36c:	mov	r2, #13
   1f370:	str	r0, [sp, #24]
   1f374:	ldr	r0, [r9, #8]
   1f378:	strb	r1, [sp, #32]
   1f37c:	mov	r1, r5
   1f380:	str	r0, [sp, #28]
   1f384:	ldr	r0, [r9, #16]
   1f388:	str	r0, [sp, #33]	; 0x21
   1f38c:	mov	r0, r4
   1f390:	bl	4e20 <readstat_write_bytes@plt>
   1f394:	mov	sl, r0
   1f398:	cmp	r0, #0
   1f39c:	bne	1f804 <dta_end_data+0x738>
   1f3a0:	ldr	r2, [r9, #16]
   1f3a4:	add	r1, r9, #20
   1f3a8:	mov	r0, r4
   1f3ac:	bl	4e20 <readstat_write_bytes@plt>
   1f3b0:	cmp	r0, #0
   1f3b4:	bne	1f800 <dta_end_data+0x734>
   1f3b8:	ldr	r0, [r4, #64]	; 0x40
   1f3bc:	add	r6, r6, #1
   1f3c0:	cmp	r6, r0
   1f3c4:	blt	1f308 <dta_end_data+0x23c>
   1f3c8:	ldr	r1, [pc, #1100]	; 1f81c <dta_end_data+0x750>
   1f3cc:	mov	r0, r4
   1f3d0:	add	r1, pc, r1
   1f3d4:	bl	4b38 <readstat_write_string@plt>
   1f3d8:	mov	sl, r0
   1f3dc:	cmp	r0, #0
   1f3e0:	bne	1f804 <dta_end_data+0x738>
   1f3e4:	b	1f0fc <dta_end_data+0x30>
   1f3e8:	ldrd	r0, [r5, #104]	; 0x68
   1f3ec:	add	r1, r1, r0
   1f3f0:	mov	r0, #1
   1f3f4:	bl	4778 <calloc@plt>
   1f3f8:	mov	r6, r0
   1f3fc:	ldrb	r0, [r5, #192]	; 0xc0
   1f400:	tst	r0, #4
   1f404:	beq	1f424 <dta_end_data+0x358>
   1f408:	ldr	r1, [pc, #1040]	; 1f820 <dta_end_data+0x754>
   1f40c:	mov	r0, r4
   1f410:	add	r1, pc, r1
   1f414:	bl	4b38 <readstat_write_string@plt>
   1f418:	mov	sl, r0
   1f41c:	cmp	r0, #0
   1f420:	bne	1f7c4 <dta_end_data+0x6f8>
   1f424:	ldr	r0, [r4, #40]	; 0x28
   1f428:	cmp	r0, #1
   1f42c:	blt	1f738 <dta_end_data+0x66c>
   1f430:	mov	r1, #0
   1f434:	mov	r9, #0
   1f438:	mov	r3, #0
   1f43c:	mov	r2, #0
   1f440:	str	r4, [sp, #20]
   1f444:	str	r6, [sp]
   1f448:	mov	r0, r4
   1f44c:	str	r2, [sp, #8]
   1f450:	str	r3, [sp, #12]
   1f454:	str	r1, [sp, #4]
   1f458:	bl	4df0 <readstat_get_label_set@plt>
   1f45c:	mov	r8, r0
   1f460:	ldr	r0, [r0, #264]	; 0x108
   1f464:	mov	r1, #0
   1f468:	str	r1, [fp, #-32]	; 0xffffffe0
   1f46c:	mov	r1, #0
   1f470:	cmp	r0, #1
   1f474:	str	r0, [sp, #24]
   1f478:	blt	1f4b0 <dta_end_data+0x3e4>
   1f47c:	mov	r7, #0
   1f480:	mov	r0, r8
   1f484:	mov	r1, r7
   1f488:	bl	4e8c <readstat_get_value_label@plt>
   1f48c:	ldr	r0, [r0, #28]
   1f490:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f494:	add	r7, r7, #1
   1f498:	add	r0, r0, r1
   1f49c:	add	r1, r0, #1
   1f4a0:	ldr	r0, [sp, #24]
   1f4a4:	str	r1, [fp, #-32]	; 0xffffffe0
   1f4a8:	cmp	r7, r0
   1f4ac:	blt	1f480 <dta_end_data+0x3b4>
   1f4b0:	ldrb	r2, [r5, #192]	; 0xc0
   1f4b4:	tst	r2, #4
   1f4b8:	beq	1f4dc <dta_end_data+0x410>
   1f4bc:	ldr	r1, [pc, #864]	; 1f824 <dta_end_data+0x758>
   1f4c0:	mov	r0, r4
   1f4c4:	add	r1, pc, r1
   1f4c8:	bl	4b38 <readstat_write_string@plt>
   1f4cc:	cmp	r0, #0
   1f4d0:	bne	1f77c <dta_end_data+0x6b0>
   1f4d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f4d8:	ldr	r0, [sp, #24]
   1f4dc:	add	r0, r1, r0, lsl #3
   1f4e0:	sub	r1, fp, #36	; 0x24
   1f4e4:	mov	r2, #4
   1f4e8:	add	r0, r0, #8
   1f4ec:	str	r0, [fp, #-36]	; 0xffffffdc
   1f4f0:	mov	r0, r4
   1f4f4:	bl	4e20 <readstat_write_bytes@plt>
   1f4f8:	cmp	r0, #0
   1f4fc:	bne	1f77c <dta_end_data+0x6b0>
   1f500:	ldr	r2, [r5, #104]	; 0x68
   1f504:	add	r1, r8, #4
   1f508:	mov	r0, r6
   1f50c:	bl	4c94 <strncpy@plt>
   1f510:	ldrd	r0, [r5, #104]	; 0x68
   1f514:	add	r2, r1, r0
   1f518:	mov	r0, r4
   1f51c:	mov	r1, r6
   1f520:	bl	4e20 <readstat_write_bytes@plt>
   1f524:	cmp	r0, #0
   1f528:	bne	1f77c <dta_end_data+0x6b0>
   1f52c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f530:	cmp	r0, #0
   1f534:	beq	1f69c <dta_end_data+0x5d0>
   1f538:	ldr	r0, [sp, #24]
   1f53c:	lsl	r1, r0, #2
   1f540:	mov	r0, r9
   1f544:	bl	49e8 <realloc@plt>
   1f548:	mov	r9, r0
   1f54c:	ldr	r0, [sp, #24]
   1f550:	lsl	r1, r0, #2
   1f554:	ldr	r0, [sp, #12]
   1f558:	bl	49e8 <realloc@plt>
   1f55c:	mov	sl, r0
   1f560:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f564:	ldr	r0, [sp, #8]
   1f568:	bl	49e8 <realloc@plt>
   1f56c:	ldr	r1, [pc, #696]	; 1f82c <dta_end_data+0x760>
   1f570:	mov	r6, r0
   1f574:	mov	r0, r8
   1f578:	add	r1, pc, r1
   1f57c:	bl	47c0 <readstat_sort_label_set@plt>
   1f580:	ldr	r0, [sp, #24]
   1f584:	str	sl, [sp, #12]
   1f588:	str	r6, [sp, #8]
   1f58c:	cmp	r0, #1
   1f590:	blt	1f618 <dta_end_data+0x54c>
   1f594:	mov	r5, #0
   1f598:	mov	r7, #0
   1f59c:	mov	r0, r8
   1f5a0:	mov	r1, r7
   1f5a4:	bl	4e8c <readstat_get_value_label@plt>
   1f5a8:	ldr	r2, [r0, #24]
   1f5ac:	ldr	r4, [r0, #28]
   1f5b0:	str	r5, [r9, r7, lsl #2]
   1f5b4:	ldrb	r1, [r0, #12]
   1f5b8:	cmp	r1, #0
   1f5bc:	beq	1f5e0 <dta_end_data+0x514>
   1f5c0:	ldr	r0, [sp, #20]
   1f5c4:	ldr	r0, [r0, #8]
   1f5c8:	cmp	r0, #113	; 0x71
   1f5cc:	blt	1f760 <dta_end_data+0x694>
   1f5d0:	movw	r0, #65413	; 0xff85
   1f5d4:	movt	r0, #32767	; 0x7fff
   1f5d8:	add	r0, r1, r0
   1f5dc:	b	1f5e4 <dta_end_data+0x518>
   1f5e0:	ldr	r0, [r0, #8]
   1f5e4:	str	r0, [sl, r7, lsl #2]
   1f5e8:	mov	r1, r2
   1f5ec:	add	r0, r6, r5
   1f5f0:	mov	r2, r4
   1f5f4:	bl	4910 <memcpy@plt>
   1f5f8:	add	r0, r4, r5
   1f5fc:	mov	r1, #0
   1f600:	add	r7, r7, #1
   1f604:	strb	r1, [r6, r0]
   1f608:	add	r5, r0, #1
   1f60c:	ldr	r0, [sp, #24]
   1f610:	cmp	r7, r0
   1f614:	blt	1f59c <dta_end_data+0x4d0>
   1f618:	ldr	r4, [sp, #20]
   1f61c:	add	r1, sp, #24
   1f620:	mov	r2, #4
   1f624:	mov	r0, r4
   1f628:	bl	4e20 <readstat_write_bytes@plt>
   1f62c:	cmp	r0, #0
   1f630:	bne	1f78c <dta_end_data+0x6c0>
   1f634:	mov	r0, r4
   1f638:	sub	r1, fp, #32
   1f63c:	mov	r2, #4
   1f640:	bl	4e20 <readstat_write_bytes@plt>
   1f644:	cmp	r0, #0
   1f648:	bne	1f78c <dta_end_data+0x6c0>
   1f64c:	ldr	r0, [sp, #24]
   1f650:	mov	r1, r9
   1f654:	lsl	r2, r0, #2
   1f658:	mov	r0, r4
   1f65c:	bl	4e20 <readstat_write_bytes@plt>
   1f660:	cmp	r0, #0
   1f664:	bne	1f78c <dta_end_data+0x6c0>
   1f668:	ldr	r0, [sp, #24]
   1f66c:	ldr	r1, [sp, #12]
   1f670:	lsl	r2, r0, #2
   1f674:	mov	r0, r4
   1f678:	bl	4e20 <readstat_write_bytes@plt>
   1f67c:	ldr	r5, [sp, #16]
   1f680:	ldr	r6, [sp]
   1f684:	cmp	r0, #0
   1f688:	bne	1f77c <dta_end_data+0x6b0>
   1f68c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f690:	ldr	r1, [sp, #8]
   1f694:	mov	r0, r4
   1f698:	b	1f6c4 <dta_end_data+0x5f8>
   1f69c:	sub	r7, fp, #32
   1f6a0:	mov	r0, r4
   1f6a4:	mov	r2, #4
   1f6a8:	mov	r1, r7
   1f6ac:	bl	4e20 <readstat_write_bytes@plt>
   1f6b0:	cmp	r0, #0
   1f6b4:	bne	1f77c <dta_end_data+0x6b0>
   1f6b8:	mov	r0, r4
   1f6bc:	mov	r1, r7
   1f6c0:	mov	r2, #4
   1f6c4:	bl	4e20 <readstat_write_bytes@plt>
   1f6c8:	cmp	r0, #0
   1f6cc:	bne	1f77c <dta_end_data+0x6b0>
   1f6d0:	ldrb	r0, [r5, #192]	; 0xc0
   1f6d4:	tst	r0, #4
   1f6d8:	beq	1f6f4 <dta_end_data+0x628>
   1f6dc:	ldr	r1, [pc, #324]	; 1f828 <dta_end_data+0x75c>
   1f6e0:	mov	r0, r4
   1f6e4:	add	r1, pc, r1
   1f6e8:	bl	4b38 <readstat_write_string@plt>
   1f6ec:	cmp	r0, #0
   1f6f0:	bne	1f77c <dta_end_data+0x6b0>
   1f6f4:	ldmib	sp, {r1, r2, r3}
   1f6f8:	ldr	r0, [r4, #40]	; 0x28
   1f6fc:	add	r1, r1, #1
   1f700:	cmp	r1, r0
   1f704:	blt	1f448 <dta_end_data+0x37c>
   1f708:	b	1f744 <dta_end_data+0x678>
   1f70c:	mov	sl, #0
   1f710:	b	1f7d4 <dta_end_data+0x708>
   1f714:	ldr	r4, [sp, #20]
   1f718:	mov	sl, #23
   1f71c:	b	1f728 <dta_end_data+0x65c>
   1f720:	ldr	r4, [sp, #20]
   1f724:	mov	sl, #20
   1f728:	cmp	r5, #0
   1f72c:	beq	1f7d4 <dta_end_data+0x708>
   1f730:	mov	r0, r5
   1f734:	b	1f7d0 <dta_end_data+0x704>
   1f738:	mov	r2, #0
   1f73c:	mov	r3, #0
   1f740:	mov	r9, #0
   1f744:	ldrb	r0, [r5, #192]	; 0xc0
   1f748:	str	r3, [sp, #12]
   1f74c:	str	r2, [sp, #8]
   1f750:	tst	r0, #4
   1f754:	bne	1f76c <dta_end_data+0x6a0>
   1f758:	mov	sl, #0
   1f75c:	b	1f794 <dta_end_data+0x6c8>
   1f760:	ldr	r4, [sp, #20]
   1f764:	mov	sl, #23
   1f768:	b	1f790 <dta_end_data+0x6c4>
   1f76c:	ldr	r1, [pc, #188]	; 1f830 <dta_end_data+0x764>
   1f770:	mov	r0, r4
   1f774:	add	r1, pc, r1
   1f778:	bl	4b38 <readstat_write_string@plt>
   1f77c:	mov	sl, r0
   1f780:	b	1f794 <dta_end_data+0x6c8>
   1f784:	mov	sl, r0
   1f788:	b	1f728 <dta_end_data+0x65c>
   1f78c:	mov	sl, r0
   1f790:	ldr	r6, [sp]
   1f794:	cmp	r9, #0
   1f798:	beq	1f7a4 <dta_end_data+0x6d8>
   1f79c:	mov	r0, r9
   1f7a0:	bl	48bc <free@plt>
   1f7a4:	ldr	r0, [sp, #12]
   1f7a8:	cmp	r0, #0
   1f7ac:	beq	1f7b4 <dta_end_data+0x6e8>
   1f7b0:	bl	48bc <free@plt>
   1f7b4:	ldr	r0, [sp, #8]
   1f7b8:	cmp	r0, #0
   1f7bc:	beq	1f7c4 <dta_end_data+0x6f8>
   1f7c0:	bl	48bc <free@plt>
   1f7c4:	cmp	r6, #0
   1f7c8:	beq	1f7d4 <dta_end_data+0x708>
   1f7cc:	mov	r0, r6
   1f7d0:	bl	48bc <free@plt>
   1f7d4:	cmp	sl, #0
   1f7d8:	bne	1f804 <dta_end_data+0x738>
   1f7dc:	ldr	r0, [sp, #16]
   1f7e0:	mov	sl, #0
   1f7e4:	ldrb	r0, [r0, #192]	; 0xc0
   1f7e8:	tst	r0, #4
   1f7ec:	beq	1f804 <dta_end_data+0x738>
   1f7f0:	ldr	r1, [pc, #60]	; 1f834 <dta_end_data+0x768>
   1f7f4:	mov	r0, r4
   1f7f8:	add	r1, pc, r1
   1f7fc:	bl	4b38 <readstat_write_string@plt>
   1f800:	mov	sl, r0
   1f804:	mov	r0, sl
   1f808:	sub	sp, fp, #28
   1f80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f810:	.word	0x000071a1
   1f814:	.word	0x0000715e
   1f818:	.word	0x00007136
   1f81c:	.word	0x000071cc
   1f820:	.word	0x00007076
   1f824:	.word	0x00006fd1
   1f828:	.word	0x00006db7
   1f82c:	.word	0x00000d1c
   1f830:	.word	0x00006e31
   1f834:	.word	0x00006d84

0001f838 <dta_module_ctx_free>:
   1f838:	b	4874 <dta_ctx_free@plt>

0001f83c <dta_validate_name>:
   1f83c:	push	{r4, r5, r6, r7, fp, lr}
   1f840:	add	fp, sp, #16
   1f844:	sub	sp, sp, #8
   1f848:	mov	r7, r2
   1f84c:	mov	r6, r1
   1f850:	mov	r5, r0
   1f854:	bl	4bd4 <strlen@plt>
   1f858:	mov	r4, #28
   1f85c:	cmp	r0, r7
   1f860:	bhi	1fb00 <dta_validate_name+0x2c4>
   1f864:	cmp	r0, #0
   1f868:	beq	1faf4 <dta_validate_name+0x2b8>
   1f86c:	mov	r0, r5
   1f870:	b	1f89c <dta_validate_name+0x60>
   1f874:	sub	r2, r1, #48	; 0x30
   1f878:	uxtb	r2, r2
   1f87c:	cmp	r2, #10
   1f880:	bcc	1f898 <dta_validate_name+0x5c>
   1f884:	and	r1, r1, #223	; 0xdf
   1f888:	sub	r1, r1, #65	; 0x41
   1f88c:	uxtb	r1, r1
   1f890:	cmp	r1, #25
   1f894:	bhi	1fafc <dta_validate_name+0x2c0>
   1f898:	add	r0, r0, #1
   1f89c:	ldrb	r1, [r0]
   1f8a0:	cmp	r1, #95	; 0x5f
   1f8a4:	beq	1f898 <dta_validate_name+0x5c>
   1f8a8:	cmp	r1, #0
   1f8ac:	bne	1f874 <dta_validate_name+0x38>
   1f8b0:	ldrb	r0, [r5]
   1f8b4:	cmp	r6, #0
   1f8b8:	movwne	r6, #1
   1f8bc:	and	r1, r0, #223	; 0xdf
   1f8c0:	sub	r1, r1, #65	; 0x41
   1f8c4:	uxtb	r1, r1
   1f8c8:	cmp	r1, #26
   1f8cc:	bcc	1f8ec <dta_validate_name+0xb0>
   1f8d0:	cmp	r0, #95	; 0x5f
   1f8d4:	beq	1f8ec <dta_validate_name+0xb0>
   1f8d8:	clz	r0, r0
   1f8dc:	mov	r4, #25
   1f8e0:	lsr	r0, r0, #5
   1f8e4:	ands	r0, r6, r0
   1f8e8:	beq	1fb00 <dta_validate_name+0x2c4>
   1f8ec:	ldr	r1, [pc, #536]	; 1fb0c <dta_validate_name+0x2d0>
   1f8f0:	mov	r0, r5
   1f8f4:	add	r1, pc, r1
   1f8f8:	bl	4808 <strcmp@plt>
   1f8fc:	mov	r4, #27
   1f900:	cmp	r0, #0
   1f904:	beq	1fb00 <dta_validate_name+0x2c4>
   1f908:	ldr	r1, [pc, #512]	; 1fb10 <dta_validate_name+0x2d4>
   1f90c:	mov	r0, r5
   1f910:	add	r1, pc, r1
   1f914:	bl	4808 <strcmp@plt>
   1f918:	cmp	r0, #0
   1f91c:	beq	1fb00 <dta_validate_name+0x2c4>
   1f920:	ldr	r1, [pc, #492]	; 1fb14 <dta_validate_name+0x2d8>
   1f924:	mov	r0, r5
   1f928:	add	r1, pc, r1
   1f92c:	bl	4808 <strcmp@plt>
   1f930:	cmp	r0, #0
   1f934:	beq	1fb00 <dta_validate_name+0x2c4>
   1f938:	ldr	r1, [pc, #472]	; 1fb18 <dta_validate_name+0x2dc>
   1f93c:	mov	r0, r5
   1f940:	add	r1, pc, r1
   1f944:	bl	4808 <strcmp@plt>
   1f948:	cmp	r0, #0
   1f94c:	beq	1fb00 <dta_validate_name+0x2c4>
   1f950:	ldr	r1, [pc, #452]	; 1fb1c <dta_validate_name+0x2e0>
   1f954:	mov	r0, r5
   1f958:	add	r1, pc, r1
   1f95c:	bl	4808 <strcmp@plt>
   1f960:	cmp	r0, #0
   1f964:	beq	1fb00 <dta_validate_name+0x2c4>
   1f968:	ldr	r1, [pc, #432]	; 1fb20 <dta_validate_name+0x2e4>
   1f96c:	mov	r0, r5
   1f970:	add	r1, pc, r1
   1f974:	bl	4808 <strcmp@plt>
   1f978:	cmp	r0, #0
   1f97c:	beq	1fb00 <dta_validate_name+0x2c4>
   1f980:	ldr	r1, [pc, #412]	; 1fb24 <dta_validate_name+0x2e8>
   1f984:	mov	r0, r5
   1f988:	add	r1, pc, r1
   1f98c:	bl	4808 <strcmp@plt>
   1f990:	cmp	r0, #0
   1f994:	beq	1fb00 <dta_validate_name+0x2c4>
   1f998:	ldr	r1, [pc, #392]	; 1fb28 <dta_validate_name+0x2ec>
   1f99c:	mov	r0, r5
   1f9a0:	add	r1, pc, r1
   1f9a4:	bl	4808 <strcmp@plt>
   1f9a8:	cmp	r0, #0
   1f9ac:	beq	1fb00 <dta_validate_name+0x2c4>
   1f9b0:	ldr	r1, [pc, #372]	; 1fb2c <dta_validate_name+0x2f0>
   1f9b4:	mov	r0, r5
   1f9b8:	add	r1, pc, r1
   1f9bc:	bl	4808 <strcmp@plt>
   1f9c0:	cmp	r0, #0
   1f9c4:	beq	1fb00 <dta_validate_name+0x2c4>
   1f9c8:	ldr	r1, [pc, #352]	; 1fb30 <dta_validate_name+0x2f4>
   1f9cc:	mov	r0, r5
   1f9d0:	add	r1, pc, r1
   1f9d4:	bl	4808 <strcmp@plt>
   1f9d8:	cmp	r0, #0
   1f9dc:	beq	1fb00 <dta_validate_name+0x2c4>
   1f9e0:	ldr	r1, [pc, #332]	; 1fb34 <dta_validate_name+0x2f8>
   1f9e4:	mov	r0, r5
   1f9e8:	add	r1, pc, r1
   1f9ec:	bl	4808 <strcmp@plt>
   1f9f0:	cmp	r0, #0
   1f9f4:	beq	1fb00 <dta_validate_name+0x2c4>
   1f9f8:	ldr	r1, [pc, #312]	; 1fb38 <dta_validate_name+0x2fc>
   1f9fc:	mov	r0, r5
   1fa00:	add	r1, pc, r1
   1fa04:	bl	4808 <strcmp@plt>
   1fa08:	cmp	r0, #0
   1fa0c:	beq	1fb00 <dta_validate_name+0x2c4>
   1fa10:	ldr	r1, [pc, #292]	; 1fb3c <dta_validate_name+0x300>
   1fa14:	mov	r0, r5
   1fa18:	add	r1, pc, r1
   1fa1c:	bl	4808 <strcmp@plt>
   1fa20:	cmp	r0, #0
   1fa24:	beq	1fb00 <dta_validate_name+0x2c4>
   1fa28:	ldr	r1, [pc, #272]	; 1fb40 <dta_validate_name+0x304>
   1fa2c:	mov	r0, r5
   1fa30:	add	r1, pc, r1
   1fa34:	bl	4808 <strcmp@plt>
   1fa38:	cmp	r0, #0
   1fa3c:	beq	1fb00 <dta_validate_name+0x2c4>
   1fa40:	ldr	r1, [pc, #252]	; 1fb44 <dta_validate_name+0x308>
   1fa44:	mov	r0, r5
   1fa48:	add	r1, pc, r1
   1fa4c:	bl	4808 <strcmp@plt>
   1fa50:	cmp	r0, #0
   1fa54:	beq	1fb00 <dta_validate_name+0x2c4>
   1fa58:	ldr	r1, [pc, #232]	; 1fb48 <dta_validate_name+0x30c>
   1fa5c:	mov	r0, r5
   1fa60:	add	r1, pc, r1
   1fa64:	bl	4808 <strcmp@plt>
   1fa68:	cmp	r0, #0
   1fa6c:	beq	1fb00 <dta_validate_name+0x2c4>
   1fa70:	ldr	r1, [pc, #212]	; 1fb4c <dta_validate_name+0x310>
   1fa74:	mov	r0, r5
   1fa78:	add	r1, pc, r1
   1fa7c:	bl	4808 <strcmp@plt>
   1fa80:	cmp	r0, #0
   1fa84:	beq	1fb00 <dta_validate_name+0x2c4>
   1fa88:	ldr	r1, [pc, #192]	; 1fb50 <dta_validate_name+0x314>
   1fa8c:	mov	r0, r5
   1fa90:	add	r1, pc, r1
   1fa94:	bl	4808 <strcmp@plt>
   1fa98:	cmp	r0, #0
   1fa9c:	beq	1fb00 <dta_validate_name+0x2c4>
   1faa0:	ldr	r1, [pc, #172]	; 1fb54 <dta_validate_name+0x318>
   1faa4:	mov	r0, r5
   1faa8:	add	r1, pc, r1
   1faac:	bl	4808 <strcmp@plt>
   1fab0:	cmp	r0, #0
   1fab4:	beq	1fb00 <dta_validate_name+0x2c4>
   1fab8:	ldr	r1, [pc, #152]	; 1fb58 <dta_validate_name+0x31c>
   1fabc:	mov	r0, r5
   1fac0:	add	r1, pc, r1
   1fac4:	bl	4808 <strcmp@plt>
   1fac8:	cmp	r0, #0
   1facc:	beq	1fb00 <dta_validate_name+0x2c4>
   1fad0:	ldr	r1, [pc, #132]	; 1fb5c <dta_validate_name+0x320>
   1fad4:	add	r2, sp, #4
   1fad8:	mov	r0, r5
   1fadc:	add	r1, pc, r1
   1fae0:	bl	4c58 <__isoc99_sscanf@plt>
   1fae4:	mov	r4, #0
   1fae8:	cmp	r0, #1
   1faec:	movweq	r4, #27
   1faf0:	b	1fb00 <dta_validate_name+0x2c4>
   1faf4:	mov	r4, #38	; 0x26
   1faf8:	b	1fb00 <dta_validate_name+0x2c4>
   1fafc:	mov	r4, #26
   1fb00:	mov	r0, r4
   1fb04:	sub	sp, fp, #16
   1fb08:	pop	{r4, r5, r6, r7, fp, pc}
   1fb0c:	.word	0x00006bf4
   1fb10:	.word	0x00006bdd
   1fb14:	.word	0x00006bc8
   1fb18:	.word	0x00006bb5
   1fb1c:	.word	0x00006ba3
   1fb20:	.word	0x00006b91
   1fb24:	.word	0x00006b80
   1fb28:	.word	0x00006b6e
   1fb2c:	.word	0x00006b59
   1fb30:	.word	0x00006b44
   1fb34:	.word	0x00006b30
   1fb38:	.word	0x00006b1d
   1fb3c:	.word	0x00006b08
   1fb40:	.word	0x00006af3
   1fb44:	.word	0x00006adf
   1fb48:	.word	0x00006acd
   1fb4c:	.word	0x00006ab9
   1fb50:	.word	0x00006aa7
   1fb54:	.word	0x00006a94
   1fb58:	.word	0x00006a82
   1fb5c:	.word	0x00006a6b

0001fb60 <dta_emit_characteristics>:
   1fb60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb64:	add	fp, sp, #28
   1fb68:	sub	sp, sp, #12
   1fb6c:	mov	r4, r0
   1fb70:	ldr	r0, [r1, #96]	; 0x60
   1fb74:	add	r0, r0, #7
   1fb78:	bic	r0, r0, #7
   1fb7c:	sub	r6, sp, r0
   1fb80:	mov	sp, r6
   1fb84:	ldr	r0, [r1, #92]	; 0x5c
   1fb88:	cmp	r0, #0
   1fb8c:	beq	1fd58 <dta_emit_characteristics+0x1f8>
   1fb90:	ldrb	r0, [r1, #192]	; 0xc0
   1fb94:	mov	r5, r1
   1fb98:	tst	r0, #4
   1fb9c:	beq	1fbb8 <dta_emit_characteristics+0x58>
   1fba0:	ldr	r1, [pc, #464]	; 1fd78 <dta_emit_characteristics+0x218>
   1fba4:	mov	r0, r4
   1fba8:	add	r1, pc, r1
   1fbac:	bl	4b38 <readstat_write_string@plt>
   1fbb0:	cmp	r0, #0
   1fbb4:	bne	1fd70 <dta_emit_characteristics+0x210>
   1fbb8:	ldr	r1, [r4, #52]	; 0x34
   1fbbc:	ldrb	r0, [r5, #192]	; 0xc0
   1fbc0:	ubfx	r0, r0, #2, #1
   1fbc4:	cmp	r1, #1
   1fbc8:	blt	1fd3c <dta_emit_characteristics+0x1dc>
   1fbcc:	ldr	r7, [pc, #424]	; 1fd7c <dta_emit_characteristics+0x21c>
   1fbd0:	mov	sl, #0
   1fbd4:	add	r7, pc, r7
   1fbd8:	tst	r0, #1
   1fbdc:	beq	1fbf4 <dta_emit_characteristics+0x94>
   1fbe0:	ldr	r1, [pc, #408]	; 1fd80 <dta_emit_characteristics+0x220>
   1fbe4:	mov	r0, r4
   1fbe8:	add	r1, pc, r1
   1fbec:	bl	4b38 <readstat_write_string@plt>
   1fbf0:	b	1fc0c <dta_emit_characteristics+0xac>
   1fbf4:	mov	r0, #1
   1fbf8:	sub	r1, fp, #33	; 0x21
   1fbfc:	mov	r2, #1
   1fc00:	strb	r0, [fp, #-33]	; 0xffffffdf
   1fc04:	mov	r0, r4
   1fc08:	bl	4e20 <readstat_write_bytes@plt>
   1fc0c:	cmp	r0, #0
   1fc10:	bne	1fd70 <dta_emit_characteristics+0x210>
   1fc14:	ldr	r0, [r4, #48]	; 0x30
   1fc18:	ldr	r0, [r0, sl, lsl #2]
   1fc1c:	bl	4bd4 <strlen@plt>
   1fc20:	mov	r9, r0
   1fc24:	ldr	r0, [r5, #92]	; 0x5c
   1fc28:	cmp	r0, #4
   1fc2c:	beq	1fc54 <dta_emit_characteristics+0xf4>
   1fc30:	cmp	r0, #2
   1fc34:	bne	1fc7c <dta_emit_characteristics+0x11c>
   1fc38:	ldr	r0, [r5, #96]	; 0x60
   1fc3c:	sub	r1, fp, #36	; 0x24
   1fc40:	mov	r2, #2
   1fc44:	add	r0, r9, r0, lsl #1
   1fc48:	add	r0, r0, #1
   1fc4c:	strh	r0, [fp, #-36]	; 0xffffffdc
   1fc50:	b	1fc6c <dta_emit_characteristics+0x10c>
   1fc54:	ldr	r0, [r5, #96]	; 0x60
   1fc58:	sub	r1, fp, #40	; 0x28
   1fc5c:	mov	r2, #4
   1fc60:	add	r0, r9, r0, lsl #1
   1fc64:	add	r0, r0, #1
   1fc68:	str	r0, [fp, #-40]	; 0xffffffd8
   1fc6c:	mov	r0, r4
   1fc70:	bl	4e20 <readstat_write_bytes@plt>
   1fc74:	cmp	r0, #0
   1fc78:	bne	1fd70 <dta_emit_characteristics+0x210>
   1fc7c:	ldr	r2, [r5, #96]	; 0x60
   1fc80:	mov	r0, r6
   1fc84:	mov	r1, r7
   1fc88:	bl	4c94 <strncpy@plt>
   1fc8c:	ldr	r2, [r5, #96]	; 0x60
   1fc90:	mov	r0, r4
   1fc94:	mov	r1, r6
   1fc98:	bl	4e20 <readstat_write_bytes@plt>
   1fc9c:	cmp	r0, #0
   1fca0:	bne	1fd70 <dta_emit_characteristics+0x210>
   1fca4:	ldr	r1, [r5, #96]	; 0x60
   1fca8:	ldr	r2, [pc, #212]	; 1fd84 <dta_emit_characteristics+0x224>
   1fcac:	add	r8, sl, #1
   1fcb0:	mov	r0, r6
   1fcb4:	mov	r3, r8
   1fcb8:	add	r2, pc, r2
   1fcbc:	bl	4c4c <snprintf@plt>
   1fcc0:	ldr	r2, [r5, #96]	; 0x60
   1fcc4:	mov	r0, r4
   1fcc8:	mov	r1, r6
   1fccc:	bl	4e20 <readstat_write_bytes@plt>
   1fcd0:	cmp	r0, #0
   1fcd4:	bne	1fd70 <dta_emit_characteristics+0x210>
   1fcd8:	ldr	r0, [r4, #48]	; 0x30
   1fcdc:	add	r2, r9, #1
   1fce0:	ldr	r1, [r0, sl, lsl #2]
   1fce4:	mov	r0, r4
   1fce8:	bl	4e20 <readstat_write_bytes@plt>
   1fcec:	cmp	r0, #0
   1fcf0:	bne	1fd70 <dta_emit_characteristics+0x210>
   1fcf4:	ldrb	r1, [r5, #192]	; 0xc0
   1fcf8:	mov	r0, #0
   1fcfc:	tst	r1, #4
   1fd00:	beq	1fd24 <dta_emit_characteristics+0x1c4>
   1fd04:	ldr	r1, [pc, #124]	; 1fd88 <dta_emit_characteristics+0x228>
   1fd08:	mov	r0, r4
   1fd0c:	add	r1, pc, r1
   1fd10:	bl	4b38 <readstat_write_string@plt>
   1fd14:	cmp	r0, #0
   1fd18:	bne	1fd70 <dta_emit_characteristics+0x210>
   1fd1c:	ldrb	r0, [r5, #192]	; 0xc0
   1fd20:	and	r0, r0, #4
   1fd24:	ldr	r1, [r4, #52]	; 0x34
   1fd28:	cmp	r0, #0
   1fd2c:	mov	sl, r8
   1fd30:	movwne	r0, #1
   1fd34:	cmp	r8, r1
   1fd38:	blt	1fbd8 <dta_emit_characteristics+0x78>
   1fd3c:	cmp	r0, #0
   1fd40:	beq	1fd60 <dta_emit_characteristics+0x200>
   1fd44:	ldr	r1, [pc, #64]	; 1fd8c <dta_emit_characteristics+0x22c>
   1fd48:	mov	r0, r4
   1fd4c:	add	r1, pc, r1
   1fd50:	bl	4b38 <readstat_write_string@plt>
   1fd54:	b	1fd70 <dta_emit_characteristics+0x210>
   1fd58:	mov	r0, #0
   1fd5c:	b	1fd70 <dta_emit_characteristics+0x210>
   1fd60:	ldr	r0, [r5, #92]	; 0x5c
   1fd64:	add	r1, r0, #1
   1fd68:	mov	r0, r4
   1fd6c:	bl	4a0c <readstat_write_zeros@plt>
   1fd70:	sub	sp, fp, #28
   1fd74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd78:	.word	0x0000682e
   1fd7c:	.word	0x0000681e
   1fd80:	.word	0x00006805
   1fd84:	.word	0x0000673f
   1fd88:	.word	0x000066f2
   1fd8c:	.word	0x0000683d

0001fd90 <dta_emit_header_data_label>:
   1fd90:	push	{r4, r5, r6, r7, fp, lr}
   1fd94:	add	fp, sp, #16
   1fd98:	sub	sp, sp, #8
   1fd9c:	mov	r4, r0
   1fda0:	ldrb	r0, [r1, #192]	; 0xc0
   1fda4:	mov	r5, r1
   1fda8:	tst	r0, #4
   1fdac:	beq	1fdcc <dta_emit_header_data_label+0x3c>
   1fdb0:	ldr	r1, [pc, #276]	; 1fecc <dta_emit_header_data_label+0x13c>
   1fdb4:	mov	r0, r4
   1fdb8:	add	r1, pc, r1
   1fdbc:	bl	4b38 <readstat_write_string@plt>
   1fdc0:	mov	r6, r0
   1fdc4:	cmp	r0, #0
   1fdc8:	bne	1fec0 <dta_emit_header_data_label+0x130>
   1fdcc:	ldr	r0, [r5, #8]
   1fdd0:	cmp	r0, #0
   1fdd4:	beq	1fe08 <dta_emit_header_data_label+0x78>
   1fdd8:	add	r7, r4, #88	; 0x58
   1fddc:	cmp	r0, #1
   1fde0:	beq	1fe48 <dta_emit_header_data_label+0xb8>
   1fde4:	cmp	r0, #2
   1fde8:	bne	1fe70 <dta_emit_header_data_label+0xe0>
   1fdec:	mov	r0, r7
   1fdf0:	bl	4bd4 <strlen@plt>
   1fdf4:	strh	r0, [sp, #4]
   1fdf8:	add	r1, sp, #4
   1fdfc:	mov	r0, r4
   1fe00:	mov	r2, #2
   1fe04:	b	1fe60 <dta_emit_header_data_label+0xd0>
   1fe08:	ldr	r6, [r5, #4]
   1fe0c:	mov	r0, #1
   1fe10:	mov	r1, r6
   1fe14:	bl	4778 <calloc@plt>
   1fe18:	add	r1, r4, #88	; 0x58
   1fe1c:	mov	r2, r6
   1fe20:	mov	r7, r0
   1fe24:	bl	4c94 <strncpy@plt>
   1fe28:	ldr	r2, [r5, #4]
   1fe2c:	mov	r0, r4
   1fe30:	mov	r1, r7
   1fe34:	bl	4e20 <readstat_write_bytes@plt>
   1fe38:	mov	r6, r0
   1fe3c:	cmp	r0, #0
   1fe40:	bne	1feb0 <dta_emit_header_data_label+0x120>
   1fe44:	b	1fe8c <dta_emit_header_data_label+0xfc>
   1fe48:	mov	r0, r7
   1fe4c:	bl	4bd4 <strlen@plt>
   1fe50:	strb	r0, [sp, #7]
   1fe54:	add	r1, sp, #7
   1fe58:	mov	r0, r4
   1fe5c:	mov	r2, #1
   1fe60:	bl	4e20 <readstat_write_bytes@plt>
   1fe64:	mov	r6, r0
   1fe68:	cmp	r0, #0
   1fe6c:	bne	1fec0 <dta_emit_header_data_label+0x130>
   1fe70:	mov	r0, r4
   1fe74:	mov	r1, r7
   1fe78:	bl	4b38 <readstat_write_string@plt>
   1fe7c:	mov	r6, r0
   1fe80:	cmp	r0, #0
   1fe84:	bne	1fec0 <dta_emit_header_data_label+0x130>
   1fe88:	mov	r7, #0
   1fe8c:	ldrb	r0, [r5, #192]	; 0xc0
   1fe90:	mov	r6, #0
   1fe94:	tst	r0, #4
   1fe98:	beq	1feb0 <dta_emit_header_data_label+0x120>
   1fe9c:	ldr	r1, [pc, #44]	; 1fed0 <dta_emit_header_data_label+0x140>
   1fea0:	mov	r0, r4
   1fea4:	add	r1, pc, r1
   1fea8:	bl	4b38 <readstat_write_string@plt>
   1feac:	mov	r6, r0
   1feb0:	cmp	r7, #0
   1feb4:	beq	1fec0 <dta_emit_header_data_label+0x130>
   1feb8:	mov	r0, r7
   1febc:	bl	48bc <free@plt>
   1fec0:	mov	r0, r6
   1fec4:	sub	sp, fp, #16
   1fec8:	pop	{r4, r5, r6, r7, fp, pc}
   1fecc:	.word	0x000064f9
   1fed0:	.word	0x00006415

0001fed4 <dta_emit_header_time_stamp>:
   1fed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fed8:	add	fp, sp, #28
   1fedc:	sub	sp, sp, #76	; 0x4c
   1fee0:	mov	sl, r1
   1fee4:	ldr	r1, [r1, #16]
   1fee8:	cmp	r1, #0
   1feec:	beq	1ffbc <dta_emit_header_time_stamp+0xe8>
   1fef0:	str	r0, [sp, #16]
   1fef4:	ldr	r0, [r0, #20]
   1fef8:	str	r0, [fp, #-32]	; 0xffffffe0
   1fefc:	sub	r0, fp, #32
   1ff00:	bl	4b44 <localtime@plt>
   1ff04:	ldr	r8, [sl, #16]
   1ff08:	mov	r9, r0
   1ff0c:	mov	r0, #1
   1ff10:	mov	r1, r8
   1ff14:	bl	4778 <calloc@plt>
   1ff18:	ldr	r1, [pc, #348]	; 2007c <dta_emit_header_time_stamp+0x1a8>
   1ff1c:	mov	lr, r0
   1ff20:	add	ip, sp, #24
   1ff24:	cmp	r9, #0
   1ff28:	mov	r2, ip
   1ff2c:	add	r1, pc, r1
   1ff30:	ldm	r1!, {r0, r3, r4, r5, r6, r7}
   1ff34:	stmia	r2!, {r0, r3, r4, r5, r6, r7}
   1ff38:	ldm	r1, {r0, r3, r4, r5, r6, r7}
   1ff3c:	stm	r2, {r0, r3, r4, r5, r6, r7}
   1ff40:	beq	1ffc4 <dta_emit_header_time_stamp+0xf0>
   1ff44:	cmp	lr, #0
   1ff48:	beq	1ffcc <dta_emit_header_time_stamp+0xf8>
   1ff4c:	ldmib	r9, {r0, r1, r3}
   1ff50:	ldr	r2, [r9, #16]
   1ff54:	ldr	r7, [r9, #20]
   1ff58:	movw	r6, #1900	; 0x76c
   1ff5c:	mov	r4, lr
   1ff60:	add	r7, r7, r6
   1ff64:	add	r2, ip, r2, lsl #2
   1ff68:	stm	sp, {r2, r7}
   1ff6c:	str	r1, [sp, #8]
   1ff70:	str	r0, [sp, #12]
   1ff74:	mov	r0, lr
   1ff78:	mov	r1, r8
   1ff7c:	ldr	r2, [pc, #252]	; 20080 <dta_emit_header_time_stamp+0x1ac>
   1ff80:	add	r2, pc, r2
   1ff84:	bl	4c4c <snprintf@plt>
   1ff88:	tst	r0, #255	; 0xff
   1ff8c:	strb	r0, [sp, #23]
   1ff90:	beq	1ffd4 <dta_emit_header_time_stamp+0x100>
   1ff94:	ldrb	r0, [sl, #192]	; 0xc0
   1ff98:	tst	r0, #4
   1ff9c:	bne	1ffe0 <dta_emit_header_time_stamp+0x10c>
   1ffa0:	ldr	r2, [sl, #16]
   1ffa4:	ldr	r0, [sp, #16]
   1ffa8:	mov	r1, r4
   1ffac:	bl	4e20 <readstat_write_bytes@plt>
   1ffb0:	mov	lr, r4
   1ffb4:	mov	r7, r0
   1ffb8:	b	20054 <dta_emit_header_time_stamp+0x180>
   1ffbc:	mov	r7, #0
   1ffc0:	b	2005c <dta_emit_header_time_stamp+0x188>
   1ffc4:	mov	r7, #39	; 0x27
   1ffc8:	b	20054 <dta_emit_header_time_stamp+0x180>
   1ffcc:	mov	r7, #3
   1ffd0:	b	20054 <dta_emit_header_time_stamp+0x180>
   1ffd4:	mov	r7, #13
   1ffd8:	mov	lr, r4
   1ffdc:	b	20054 <dta_emit_header_time_stamp+0x180>
   1ffe0:	ldr	r1, [pc, #156]	; 20084 <dta_emit_header_time_stamp+0x1b0>
   1ffe4:	ldr	r5, [sp, #16]
   1ffe8:	add	r1, pc, r1
   1ffec:	mov	r0, r5
   1fff0:	bl	4b38 <readstat_write_string@plt>
   1fff4:	mov	r7, r0
   1fff8:	cmp	r0, #0
   1fffc:	mov	lr, r4
   20000:	bne	20054 <dta_emit_header_time_stamp+0x180>
   20004:	add	r1, sp, #23
   20008:	mov	r0, r5
   2000c:	mov	r2, #1
   20010:	bl	4e20 <readstat_write_bytes@plt>
   20014:	mov	lr, r4
   20018:	mov	r7, r0
   2001c:	cmp	r0, #0
   20020:	bne	20054 <dta_emit_header_time_stamp+0x180>
   20024:	ldrb	r2, [sp, #23]
   20028:	mov	r0, r5
   2002c:	mov	r1, lr
   20030:	bl	4e20 <readstat_write_bytes@plt>
   20034:	mov	lr, r4
   20038:	mov	r7, r0
   2003c:	cmp	r0, #0
   20040:	bne	20054 <dta_emit_header_time_stamp+0x180>
   20044:	ldrb	r0, [sl, #192]	; 0xc0
   20048:	mov	r7, #0
   2004c:	tst	r0, #4
   20050:	bne	20068 <dta_emit_header_time_stamp+0x194>
   20054:	mov	r0, lr
   20058:	bl	48bc <free@plt>
   2005c:	mov	r0, r7
   20060:	sub	sp, fp, #28
   20064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20068:	ldr	r1, [pc, #24]	; 20088 <dta_emit_header_time_stamp+0x1b4>
   2006c:	mov	r0, r5
   20070:	add	r1, pc, r1
   20074:	bl	4b38 <readstat_write_string@plt>
   20078:	b	1ffb0 <dta_emit_header_time_stamp+0xdc>
   2007c:	.word	0x000066ac
   20080:	.word	0x000065e4
   20084:	.word	0x000062da
   20088:	.word	0x0000625e

0002008c <dta_write_chunk>:
   2008c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20090:	add	fp, sp, #24
   20094:	mov	r4, r0
   20098:	ldrb	r0, [r1, #192]	; 0xc0
   2009c:	ldr	r8, [fp, #12]
   200a0:	ldr	r5, [fp, #8]
   200a4:	mov	r7, r3
   200a8:	mov	r6, r1
   200ac:	tst	r0, #4
   200b0:	beq	200c8 <dta_write_chunk+0x3c>
   200b4:	mov	r0, r4
   200b8:	mov	r1, r2
   200bc:	bl	4b38 <readstat_write_string@plt>
   200c0:	cmp	r0, #0
   200c4:	bne	200f0 <dta_write_chunk+0x64>
   200c8:	mov	r0, r4
   200cc:	mov	r1, r7
   200d0:	mov	r2, r5
   200d4:	bl	4e20 <readstat_write_bytes@plt>
   200d8:	cmp	r0, #0
   200dc:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   200e0:	ldrb	r1, [r6, #192]	; 0xc0
   200e4:	mov	r0, #0
   200e8:	tst	r1, #4
   200ec:	bne	200f4 <dta_write_chunk+0x68>
   200f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   200f4:	mov	r0, r4
   200f8:	mov	r1, r8
   200fc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   20100:	b	4b38 <readstat_write_string@plt>

00020104 <dta_typecode_for_variable>:
   20104:	push	{fp, lr}
   20108:	mov	fp, sp
   2010c:	mov	lr, r0
   20110:	cmp	r1, #117	; 0x75
   20114:	beq	20164 <dta_typecode_for_variable+0x60>
   20118:	cmp	r1, #111	; 0x6f
   2011c:	bne	201a8 <dta_typecode_for_variable+0xa4>
   20120:	ldr	ip, [lr]
   20124:	mov	r0, #0
   20128:	cmp	ip, #6
   2012c:	bhi	2028c <dta_typecode_for_variable+0x188>
   20130:	add	r1, pc, #8
   20134:	mov	r0, #33	; 0x21
   20138:	ldr	r3, [r1, ip, lsl #2]
   2013c:	add	pc, r1, r3
   20140:	.word	0x0000001c
   20144:	.word	0x000000b4
   20148:	.word	0x000000bc
   2014c:	.word	0x000000c4
   20150:	.word	0x000000cc
   20154:	.word	0x000000d4
   20158:	.word	0x00000124
   2015c:	ldr	r0, [lr, #1596]	; 0x63c
   20160:	b	2028c <dta_typecode_for_variable+0x188>
   20164:	ldr	r1, [lr]
   20168:	mov	r0, #0
   2016c:	mov	ip, #0
   20170:	cmp	r1, #6
   20174:	bhi	20258 <dta_typecode_for_variable+0x154>
   20178:	add	r3, pc, #4
   2017c:	ldr	r1, [r3, r1, lsl #2]
   20180:	add	pc, r3, r1
   20184:	.word	0x0000001c
   20188:	.word	0x00000098
   2018c:	.word	0x000000a4
   20190:	.word	0x000000b0
   20194:	.word	0x000000bc
   20198:	.word	0x000000c8
   2019c:	.word	0x000000d0
   201a0:	ldr	ip, [lr, #1596]	; 0x63c
   201a4:	b	20258 <dta_typecode_for_variable+0x154>
   201a8:	ldr	r1, [lr]
   201ac:	mov	r0, #0
   201b0:	cmp	r1, #6
   201b4:	bhi	2028c <dta_typecode_for_variable+0x188>
   201b8:	add	r3, pc, #8
   201bc:	mov	r0, #33	; 0x21
   201c0:	ldr	r1, [r3, r1, lsl #2]
   201c4:	add	pc, r3, r1
   201c8:	.word	0x0000001c
   201cc:	.word	0x000000a0
   201d0:	.word	0x000000a8
   201d4:	.word	0x000000b0
   201d8:	.word	0x000000b8
   201dc:	.word	0x000000c0
   201e0:	.word	0x0000009c
   201e4:	movw	r0, #1596	; 0x63c
   201e8:	ldrh	r0, [lr, r0]
   201ec:	add	r0, r0, #127	; 0x7f
   201f0:	b	2028c <dta_typecode_for_variable+0x188>
   201f4:	mov	r0, #251	; 0xfb
   201f8:	b	2028c <dta_typecode_for_variable+0x188>
   201fc:	mov	r0, #252	; 0xfc
   20200:	b	2028c <dta_typecode_for_variable+0x188>
   20204:	mov	r0, #253	; 0xfd
   20208:	b	2028c <dta_typecode_for_variable+0x188>
   2020c:	mov	r0, #254	; 0xfe
   20210:	b	2028c <dta_typecode_for_variable+0x188>
   20214:	mov	r0, #255	; 0xff
   20218:	b	2028c <dta_typecode_for_variable+0x188>
   2021c:	mvn	r1, #9
   20220:	add	ip, r1, #4
   20224:	b	20258 <dta_typecode_for_variable+0x154>
   20228:	mvn	r1, #9
   2022c:	add	ip, r1, #3
   20230:	b	20258 <dta_typecode_for_variable+0x154>
   20234:	mvn	r1, #9
   20238:	add	ip, r1, #2
   2023c:	b	20258 <dta_typecode_for_variable+0x154>
   20240:	mvn	r1, #9
   20244:	add	ip, r1, #1
   20248:	b	20258 <dta_typecode_for_variable+0x154>
   2024c:	movw	ip, #65526	; 0xfff6
   20250:	b	20258 <dta_typecode_for_variable+0x154>
   20254:	mov	ip, #32768	; 0x8000
   20258:	cmp	r2, #0
   2025c:	strhne	ip, [r2]
   20260:	popne	{fp, pc}
   20264:	pop	{fp, pc}
   20268:	mov	r0, #98	; 0x62
   2026c:	b	2028c <dta_typecode_for_variable+0x188>
   20270:	mov	r0, #105	; 0x69
   20274:	b	2028c <dta_typecode_for_variable+0x188>
   20278:	mov	r0, #108	; 0x6c
   2027c:	b	2028c <dta_typecode_for_variable+0x188>
   20280:	mov	r0, #102	; 0x66
   20284:	b	2028c <dta_typecode_for_variable+0x188>
   20288:	mov	r0, #100	; 0x64
   2028c:	cmp	r2, #0
   20290:	strhne	r0, [r2]
   20294:	mov	r0, #0
   20298:	pop	{fp, pc}

0002029c <dta_compare_value_labels>:
   2029c:	mov	r2, r0
   202a0:	ldrb	r0, [r0, #12]
   202a4:	ldrb	r3, [r1, #12]
   202a8:	cmp	r0, #0
   202ac:	beq	202c0 <dta_compare_value_labels+0x24>
   202b0:	cmp	r3, #0
   202b4:	moveq	r0, #1
   202b8:	subne	r0, r0, r3
   202bc:	bx	lr
   202c0:	mvn	r0, #0
   202c4:	cmp	r3, #0
   202c8:	ldreq	r0, [r1, #8]
   202cc:	ldreq	r1, [r2, #8]
   202d0:	subeq	r0, r1, r0
   202d4:	bx	lr

000202d8 <submit_value_label>:
   202d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   202dc:	add	fp, sp, #28
   202e0:	sub	sp, sp, #20
   202e4:	ldr	r4, [r0, #20]
   202e8:	cmp	r4, #0
   202ec:	beq	203b8 <submit_value_label+0xe0>
   202f0:	ldr	r7, [fp, #32]
   202f4:	ldr	sl, [fp, #28]
   202f8:	mov	r5, r0
   202fc:	add	r0, r2, #1
   20300:	mov	r8, r1
   20304:	cmp	r0, #4
   20308:	bhi	20344 <submit_value_label+0x6c>
   2030c:	add	r1, pc, #4
   20310:	ldr	r0, [r1, r0, lsl #2]
   20314:	add	pc, r1, r0
   20318:	.word	0x00000014
   2031c:	.word	0x0000003c
   20320:	.word	0x0000004c
   20324:	.word	0x00000084
   20328:	.word	0x000000a0
   2032c:	movw	r3, #0
   20330:	mov	r0, #0
   20334:	mov	r2, #5
   20338:	mov	r1, #0
   2033c:	movt	r3, #32760	; 0x7ff8
   20340:	b	20374 <submit_value_label+0x9c>
   20344:	mov	r0, #0
   20348:	mov	r3, #0
   2034c:	mov	r1, #0
   20350:	b	20370 <submit_value_label+0x98>
   20354:	vmov	r1, r3, d0
   20358:	mov	r0, #0
   2035c:	mov	r2, #5
   20360:	b	20374 <submit_value_label+0x9c>
   20364:	ldr	r1, [fp, #24]
   20368:	mov	r0, #0
   2036c:	mov	r3, #0
   20370:	mov	r2, #0
   20374:	str	r2, [sp]
   20378:	stmib	sp, {r0, sl}
   2037c:	orr	r2, r0, r1
   20380:	mov	r0, r8
   20384:	str	r7, [sp, #12]
   20388:	blx	r4
   2038c:	mov	r4, #4
   20390:	cmp	r0, #0
   20394:	moveq	r4, #0
   20398:	b	203bc <submit_value_label+0xe4>
   2039c:	ldr	r0, [fp, #16]
   203a0:	ldr	r7, [fp, #8]
   203a4:	ldr	r1, [fp, #20]
   203a8:	ldr	r6, [fp, #12]
   203ac:	subs	r0, r0, r7
   203b0:	sbcs	r0, r1, r6
   203b4:	bge	203c8 <submit_value_label+0xf0>
   203b8:	mov	r4, #0
   203bc:	mov	r0, r4
   203c0:	sub	sp, fp, #28
   203c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   203c8:	mov	r0, r7
   203cc:	mov	r1, r6
   203d0:	bl	23668 <__aeabi_l2d>
   203d4:	mov	r2, r0
   203d8:	mov	r9, #0
   203dc:	mov	r0, #5
   203e0:	mov	r3, r1
   203e4:	stm	sp, {r0, r9, sl}
   203e8:	ldr	r0, [fp, #32]
   203ec:	str	r0, [sp, #12]
   203f0:	mov	r0, r8
   203f4:	blx	r4
   203f8:	mov	r4, #4
   203fc:	b	20450 <submit_value_label+0x178>
   20400:	ldr	r0, [fp, #16]
   20404:	subs	r0, r7, r0
   20408:	ldr	r0, [fp, #20]
   2040c:	sbcs	r0, r6, r0
   20410:	bge	203b8 <submit_value_label+0xe0>
   20414:	adds	r7, r7, #1
   20418:	adc	r6, r6, #0
   2041c:	mov	r0, r7
   20420:	mov	r1, r6
   20424:	bl	23668 <__aeabi_l2d>
   20428:	mov	r2, r0
   2042c:	bfc	r9, #0, #10
   20430:	mov	r0, #5
   20434:	ldr	ip, [r5, #20]
   20438:	mov	r3, r1
   2043c:	stm	sp, {r0, r9, sl}
   20440:	ldr	r0, [fp, #32]
   20444:	str	r0, [sp, #12]
   20448:	mov	r0, r8
   2044c:	blx	ip
   20450:	cmp	r0, #0
   20454:	beq	20400 <submit_value_label+0x128>
   20458:	b	203bc <submit_value_label+0xe4>

0002045c <submit_columns>:
   2045c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20460:	add	fp, sp, #28
   20464:	push	{r2}		; (str r2, [sp, #-4]!)
   20468:	mov	r5, r1
   2046c:	ldr	r1, [r1, #268]	; 0x10c
   20470:	mov	sl, r0
   20474:	cmp	r1, #1
   20478:	blt	204a8 <submit_columns+0x4c>
   2047c:	ldr	r2, [r5, #256]	; 0x100
   20480:	ldr	r0, [r5, #276]	; 0x114
   20484:	mov	r3, #0
   20488:	ldr	r7, [r0]
   2048c:	add	r3, r3, #1
   20490:	add	r0, r0, #2208	; 0x8a0
   20494:	cmp	r2, r7
   20498:	addle	r2, r7, #1
   2049c:	strle	r2, [r5, #256]	; 0x100
   204a0:	cmp	r3, r1
   204a4:	blt	20488 <submit_columns+0x2c>
   204a8:	ldr	r2, [sl, #8]
   204ac:	mov	r0, #0
   204b0:	cmp	r2, #0
   204b4:	beq	20550 <submit_columns+0xf4>
   204b8:	cmp	r1, #1
   204bc:	blt	20550 <submit_columns+0xf4>
   204c0:	mov	r4, #0
   204c4:	mov	r7, #0
   204c8:	mov	r8, #0
   204cc:	ldr	r0, [r5, #276]	; 0x114
   204d0:	ldr	r3, [sp]
   204d4:	add	r9, r0, r4
   204d8:	mov	r1, r9
   204dc:	mov	r2, r9
   204e0:	ldr	r0, [r1, #16]!
   204e4:	str	r8, [r1, #2148]	; 0x864
   204e8:	str	r7, [r1, #4]
   204ec:	cmp	r0, #0
   204f0:	ldreq	r0, [r9, #8]
   204f4:	streq	r0, [r9, #1612]	; 0x64c
   204f8:	ldrb	r0, [r2, #2168]!	; 0x878
   204fc:	ldr	r6, [sl, #8]
   20500:	cmp	r0, #0
   20504:	moveq	r2, r0
   20508:	mov	r0, r7
   2050c:	blx	r6
   20510:	cmp	r0, #2
   20514:	beq	20528 <submit_columns+0xcc>
   20518:	cmp	r0, #1
   2051c:	beq	2054c <submit_columns+0xf0>
   20520:	add	r8, r8, #1
   20524:	b	20530 <submit_columns+0xd4>
   20528:	mov	r0, #1
   2052c:	str	r0, [r9, #12]
   20530:	ldr	r0, [r5, #268]	; 0x10c
   20534:	add	r7, r7, #1
   20538:	add	r4, r4, #2208	; 0x8a0
   2053c:	cmp	r7, r0
   20540:	blt	204cc <submit_columns+0x70>
   20544:	mov	r0, #0
   20548:	b	20550 <submit_columns+0xf4>
   2054c:	mov	r0, #4
   20550:	sub	sp, fp, #28
   20554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020558 <readstat_copy>:
   20558:	push	{r4, r5, fp, lr}
   2055c:	add	fp, sp, #8
   20560:	mov	r4, r3
   20564:	cmp	r3, r1
   20568:	mov	r5, r0
   2056c:	subcs	r4, r1, #1
   20570:	mov	r1, r2
   20574:	mov	r2, r4
   20578:	bl	4910 <memcpy@plt>
   2057c:	mov	r0, #0
   20580:	strb	r0, [r5, r4]
   20584:	pop	{r4, r5, fp, pc}

00020588 <readstat_copy_lower>:
   20588:	push	{r4, r5, r6, r7, fp, lr}
   2058c:	add	fp, sp, #16
   20590:	mov	r6, r3
   20594:	cmp	r3, r1
   20598:	mov	r4, r1
   2059c:	mov	r5, r0
   205a0:	subcs	r6, r1, #1
   205a4:	mov	r1, r2
   205a8:	mov	r2, r6
   205ac:	bl	4910 <memcpy@plt>
   205b0:	mov	r7, #0
   205b4:	cmp	r4, #0
   205b8:	strb	r7, [r5, r6]
   205bc:	beq	205e8 <readstat_copy_lower+0x60>
   205c0:	ldrb	r6, [r5, r7]
   205c4:	cmp	r6, #0
   205c8:	popeq	{r4, r5, r6, r7, fp, pc}
   205cc:	bl	4b50 <__ctype_tolower_loc@plt>
   205d0:	ldr	r0, [r0]
   205d4:	ldr	r0, [r0, r6, lsl #2]
   205d8:	strb	r0, [r5, r7]
   205dc:	add	r7, r7, #1
   205e0:	cmp	r7, r4
   205e4:	bcc	205c0 <readstat_copy_lower+0x38>
   205e8:	pop	{r4, r5, r6, r7, fp, pc}

000205ec <readstat_copy_quoted>:
   205ec:	push	{r4, sl, fp, lr}
   205f0:	add	fp, sp, #8
   205f4:	cmp	r3, r1
   205f8:	mov	ip, #0
   205fc:	mov	lr, #0
   20600:	subcs	r3, r1, #1
   20604:	cmp	r3, #0
   20608:	beq	20650 <readstat_copy_quoted+0x64>
   2060c:	mov	r1, #0
   20610:	mov	lr, #0
   20614:	ldrb	r4, [r2]
   20618:	cmp	r1, #0
   2061c:	bne	20630 <readstat_copy_quoted+0x44>
   20620:	mov	r1, #1
   20624:	cmp	r4, #92	; 0x5c
   20628:	bne	20638 <readstat_copy_quoted+0x4c>
   2062c:	b	20644 <readstat_copy_quoted+0x58>
   20630:	cmp	r4, #116	; 0x74
   20634:	movweq	r4, #9
   20638:	strb	r4, [r0, lr]
   2063c:	add	lr, lr, #1
   20640:	mov	r1, #0
   20644:	subs	r3, r3, #1
   20648:	add	r2, r2, #1
   2064c:	bne	20614 <readstat_copy_quoted+0x28>
   20650:	strb	ip, [r0, lr]
   20654:	pop	{r4, sl, fp, pc}

00020658 <readstat_parse_sas_commands>:
   20658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2065c:	add	fp, sp, #28
   20660:	sub	sp, sp, #4
   20664:	vpush	{d8}
   20668:	sub	sp, sp, #2288	; 0x8f0
   2066c:	mov	r7, r0
   20670:	ldr	r0, [r0, #32]
   20674:	mov	r8, r3
   20678:	str	r2, [sp, #52]	; 0x34
   2067c:	mov	r2, r1
   20680:	ldr	r3, [r0]
   20684:	ldr	r1, [r0, #20]
   20688:	mov	r0, r2
   2068c:	blx	r3
   20690:	cmn	r0, #1
   20694:	beq	20cf4 <readstat_parse_sas_commands+0x69c>
   20698:	ldr	r0, [r7, #32]
   2069c:	mov	r1, #2
   206a0:	mov	sl, #0
   206a4:	ldr	r3, [r0, #8]
   206a8:	ldr	r2, [r0, #20]
   206ac:	mov	r0, #0
   206b0:	blx	r3
   206b4:	cmn	r0, #1
   206b8:	beq	20d08 <readstat_parse_sas_commands+0x6b0>
   206bc:	mov	r4, r0
   206c0:	ldr	r0, [r7, #32]
   206c4:	mov	r1, #0
   206c8:	mov	r9, #0
   206cc:	ldr	r3, [r0, #8]
   206d0:	ldr	r2, [r0, #20]
   206d4:	mov	r0, #0
   206d8:	blx	r3
   206dc:	mov	r0, r4
   206e0:	bl	4af0 <malloc@plt>
   206e4:	mov	sl, r0
   206e8:	ldr	r0, [r7, #32]
   206ec:	mov	r1, r4
   206f0:	ldr	r3, [r0, #12]
   206f4:	ldr	r2, [r0, #20]
   206f8:	mov	r0, sl
   206fc:	blx	r3
   20700:	mov	r0, #1
   20704:	mov	r1, #280	; 0x118
   20708:	mov	r5, #1
   2070c:	bl	4778 <calloc@plt>
   20710:	cmp	r0, #0
   20714:	beq	20d14 <readstat_parse_sas_commands+0x6bc>
   20718:	str	r7, [sp, #40]	; 0x28
   2071c:	add	r7, sl, r4
   20720:	cmp	r4, #0
   20724:	str	r0, [sp, #72]	; 0x48
   20728:	str	r5, [r0, #256]	; 0x100
   2072c:	str	r8, [sp, #36]	; 0x24
   20730:	str	sl, [sp, #32]
   20734:	beq	20d20 <readstat_parse_sas_commands+0x6c8>
   20738:	mov	r1, #0
   2073c:	vldr	d8, [pc, #980]	; 20b18 <readstat_parse_sas_commands+0x4c0>
   20740:	mov	r0, #0
   20744:	mov	r9, #0
   20748:	mov	r8, sl
   2074c:	str	r7, [sp, #56]	; 0x38
   20750:	str	r1, [sp, #48]	; 0x30
   20754:	mov	r1, #0
   20758:	str	r0, [sp, #88]	; 0x58
   2075c:	mov	r0, #5
   20760:	str	r1, [sp, #44]	; 0x2c
   20764:	mov	r1, #0
   20768:	str	r0, [sp, #64]	; 0x40
   2076c:	movw	r0, #1094	; 0x446
   20770:	str	r1, [sp, #100]	; 0x64
   20774:	mov	r1, #0
   20778:	str	r1, [sp, #92]	; 0x5c
   2077c:	mov	r1, #0
   20780:	str	r1, [sp, #84]	; 0x54
   20784:	mov	r1, #0
   20788:	str	r1, [sp, #68]	; 0x44
   2078c:	mov	r1, #0
   20790:	str	r1, [sp, #60]	; 0x3c
   20794:	mov	r1, #0
   20798:	str	r1, [sp, #76]	; 0x4c
   2079c:	mov	r1, #0
   207a0:	str	r1, [sp, #96]	; 0x60
   207a4:	ldr	r1, [pc, #1728]	; 20e6c <readstat_parse_sas_commands+0x814>
   207a8:	add	r1, pc, r1
   207ac:	ldrb	r2, [r1, r0]
   207b0:	ldr	r1, [pc, #1720]	; 20e70 <readstat_parse_sas_commands+0x818>
   207b4:	ldr	r3, [pc, #1720]	; 20e74 <readstat_parse_sas_commands+0x81c>
   207b8:	add	r1, pc, r1
   207bc:	add	r3, pc, r3
   207c0:	cmp	r2, #0
   207c4:	add	r1, r1, r0, lsl #1
   207c8:	ldrsh	r1, [r1]
   207cc:	add	r4, r3, r1
   207d0:	ldr	r1, [pc, #1696]	; 20e78 <readstat_parse_sas_commands+0x820>
   207d4:	add	r1, pc, r1
   207d8:	add	r1, r1, r0, lsl #1
   207dc:	ldrsh	lr, [r1]
   207e0:	beq	20830 <readstat_parse_sas_commands+0x1d8>
   207e4:	add	ip, r4, r2
   207e8:	sub	r7, ip, #1
   207ec:	cmp	r7, r4
   207f0:	bcc	20828 <readstat_parse_sas_commands+0x1d0>
   207f4:	ldrb	r6, [sl]
   207f8:	mov	r3, r4
   207fc:	sub	r5, r7, r3
   20800:	mov	r1, r3
   20804:	ldrb	r5, [r1, r5, asr #1]!
   20808:	cmp	r6, r5
   2080c:	bcs	20818 <readstat_parse_sas_commands+0x1c0>
   20810:	sub	r7, r1, #1
   20814:	b	20820 <readstat_parse_sas_commands+0x1c8>
   20818:	bls	208a4 <readstat_parse_sas_commands+0x24c>
   2081c:	add	r3, r1, #1
   20820:	cmp	r7, r3
   20824:	bcs	207fc <readstat_parse_sas_commands+0x1a4>
   20828:	add	lr, r2, lr
   2082c:	b	20834 <readstat_parse_sas_commands+0x1dc>
   20830:	mov	ip, r4
   20834:	ldr	r4, [sp, #72]	; 0x48
   20838:	ldr	r1, [pc, #1596]	; 20e7c <readstat_parse_sas_commands+0x824>
   2083c:	mvn	r6, #1
   20840:	add	r1, pc, r1
   20844:	ldrb	r0, [r1, r0]
   20848:	cmp	r0, #0
   2084c:	beq	208b0 <readstat_parse_sas_commands+0x258>
   20850:	add	r1, ip, r0, lsl #1
   20854:	sub	r2, r1, #2
   20858:	cmp	r2, ip
   2085c:	bcc	208c4 <readstat_parse_sas_commands+0x26c>
   20860:	ldrb	r3, [sl]
   20864:	mov	r5, ip
   20868:	sub	r1, r2, r5
   2086c:	and	r7, r6, r1, asr #1
   20870:	mov	r1, r5
   20874:	ldrb	r7, [r1, r7]!
   20878:	cmp	r3, r7
   2087c:	bcs	20888 <readstat_parse_sas_commands+0x230>
   20880:	sub	r2, r1, #2
   20884:	b	20898 <readstat_parse_sas_commands+0x240>
   20888:	ldrb	r7, [r1, #1]
   2088c:	cmp	r3, r7
   20890:	bls	208bc <readstat_parse_sas_commands+0x264>
   20894:	add	r5, r1, #2
   20898:	cmp	r2, r5
   2089c:	bcs	20868 <readstat_parse_sas_commands+0x210>
   208a0:	b	208c4 <readstat_parse_sas_commands+0x26c>
   208a4:	sub	r0, lr, r4
   208a8:	ldr	r4, [sp, #72]	; 0x48
   208ac:	add	lr, r0, r1
   208b0:	ldr	r2, [pc, #1480]	; 20e80 <readstat_parse_sas_commands+0x828>
   208b4:	add	r2, pc, r2
   208b8:	b	208d0 <readstat_parse_sas_commands+0x278>
   208bc:	sub	r0, r1, ip
   208c0:	asr	r0, r0, #1
   208c4:	ldr	r2, [pc, #1464]	; 20e84 <readstat_parse_sas_commands+0x82c>
   208c8:	add	lr, r0, lr
   208cc:	add	r2, pc, r2
   208d0:	ldr	r0, [pc, #1456]	; 20e88 <readstat_parse_sas_commands+0x830>
   208d4:	str	lr, [sp, #80]	; 0x50
   208d8:	add	r0, pc, r0
   208dc:	ldrb	r0, [r0, lr]
   208e0:	cmp	r0, #0
   208e4:	ldrbne	r1, [r2, r0]
   208e8:	cmpne	r1, #0
   208ec:	beq	20cbc <readstat_parse_sas_commands+0x664>
   208f0:	add	r0, r2, r0
   208f4:	rsb	r6, r1, #0
   208f8:	add	r7, r0, #1
   208fc:	ldrb	r0, [r7]
   20900:	cmp	r0, #34	; 0x22
   20904:	bhi	20cb0 <readstat_parse_sas_commands+0x658>
   20908:	add	r1, pc, #4
   2090c:	ldr	r0, [r1, r0, lsl #2]
   20910:	add	pc, r1, r0
   20914:	.word	0x00000124
   20918:	.word	0x00000134
   2091c:	.word	0x00000164
   20920:	.word	0x00000190
   20924:	.word	0x000001a4
   20928:	.word	0x000001b4
   2092c:	.word	0x000001bc
   20930:	.word	0x000001c8
   20934:	.word	0x000001d8
   20938:	.word	0x000001e0
   2093c:	.word	0x000001e8
   20940:	.word	0x000000ac
   20944:	.word	0x0000020c
   20948:	.word	0x0000025c
   2094c:	.word	0x000000c4
   20950:	.word	0x0000028c
   20954:	.word	0x000000d4
   20958:	.word	0x000002b0
   2095c:	.word	0x0000008c
   20960:	.word	0x00000094
   20964:	.word	0x0000008c
   20968:	.word	0x00000094
   2096c:	.word	0x0000030c
   20970:	.word	0x0000008c
   20974:	.word	0x00000094
   20978:	.word	0x00000318
   2097c:	.word	0x0000032c
   20980:	.word	0x000000f8
   20984:	.word	0x00000348
   20988:	.word	0x000000a4
   2098c:	.word	0x000000a4
   20990:	.word	0x00000350
   20994:	.word	0x0000035c
   20998:	.word	0x0000010c
   2099c:	.word	0x00000118
   209a0:	str	sl, [sp, #96]	; 0x60
   209a4:	b	20cb0 <readstat_parse_sas_commands+0x658>
   209a8:	ldr	r0, [sp, #96]	; 0x60
   209ac:	sub	r0, sl, r0
   209b0:	str	r0, [sp, #88]	; 0x58
   209b4:	b	20cb0 <readstat_parse_sas_commands+0x658>
   209b8:	mov	r0, #1
   209bc:	b	20c68 <readstat_parse_sas_commands+0x610>
   209c0:	ldr	r2, [sp, #96]	; 0x60
   209c4:	ldr	r3, [sp, #88]	; 0x58
   209c8:	sub	r0, fp, #76	; 0x4c
   209cc:	mov	r1, #32
   209d0:	bl	4da8 <readstat_copy_lower@plt>
   209d4:	b	20cb0 <readstat_parse_sas_commands+0x658>
   209d8:	sub	r1, fp, #76	; 0x4c
   209dc:	mov	r0, r4
   209e0:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   209e4:	b	20b94 <readstat_parse_sas_commands+0x53c>
   209e8:	sub	r1, fp, #76	; 0x4c
   209ec:	mov	r0, r4
   209f0:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   209f4:	movw	r1, #2168	; 0x878
   209f8:	sub	r2, fp, #140	; 0x8c
   209fc:	mov	r3, #32
   20a00:	add	r0, r0, r1
   20a04:	mov	r1, #32
   20a08:	b	20b0c <readstat_parse_sas_commands+0x4b4>
   20a0c:	ldr	r0, [sp, #100]	; 0x64
   20a10:	str	r0, [sp, #48]	; 0x30
   20a14:	ldr	r0, [sp, #92]	; 0x5c
   20a18:	str	r0, [sp, #44]	; 0x2c
   20a1c:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20a20:	ldr	r0, [sp, #100]	; 0x64
   20a24:	sub	r0, r0, #1
   20a28:	b	20a30 <readstat_parse_sas_commands+0x3d8>
   20a2c:	mov	r0, #0
   20a30:	str	r0, [sp, #68]	; 0x44
   20a34:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20a38:	mov	r0, #0
   20a3c:	str	r0, [sp, #100]	; 0x64
   20a40:	mov	r0, #0
   20a44:	b	20cac <readstat_parse_sas_commands+0x654>
   20a48:	ldr	r2, [sp, #92]	; 0x5c
   20a4c:	ldr	r1, [sp, #100]	; 0x64
   20a50:	mov	r0, #10
   20a54:	umull	r0, r1, r1, r0
   20a58:	add	r2, r2, r2, lsl #2
   20a5c:	add	r1, r1, r2, lsl #1
   20a60:	ldrb	r2, [sl]
   20a64:	sub	r2, r2, #48	; 0x30
   20a68:	adds	r0, r0, r2
   20a6c:	str	r0, [sp, #100]	; 0x64
   20a70:	adc	r0, r1, r2, asr #31
   20a74:	b	20cac <readstat_parse_sas_commands+0x654>
   20a78:	ldrb	r1, [sl]
   20a7c:	sub	r0, r1, #48	; 0x30
   20a80:	uxtb	r2, r0
   20a84:	cmp	r2, #9
   20a88:	bls	20c90 <readstat_parse_sas_commands+0x638>
   20a8c:	sub	r0, r1, #65	; 0x41
   20a90:	uxtb	r0, r0
   20a94:	cmp	r0, #5
   20a98:	bhi	20c7c <readstat_parse_sas_commands+0x624>
   20a9c:	sub	r0, r1, #55	; 0x37
   20aa0:	b	20c90 <readstat_parse_sas_commands+0x638>
   20aa4:	ldr	r0, [sp, #100]	; 0x64
   20aa8:	sub	r0, r0, #1
   20aac:	str	r0, [sp, #60]	; 0x3c
   20ab0:	mov	r0, #1
   20ab4:	b	20c74 <readstat_parse_sas_commands+0x61c>
   20ab8:	ldr	r0, [sp, #100]	; 0x64
   20abc:	ldr	r1, [sp, #60]	; 0x3c
   20ac0:	sub	r0, r0, r1
   20ac4:	b	20c74 <readstat_parse_sas_commands+0x61c>
   20ac8:	mov	r0, #0
   20acc:	b	20ad4 <readstat_parse_sas_commands+0x47c>
   20ad0:	mov	r0, #5
   20ad4:	str	r0, [sp, #64]	; 0x40
   20ad8:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20adc:	add	lr, sp, #1024	; 0x400
   20ae0:	mov	r1, #1024	; 0x400
   20ae4:	add	r0, lr, #108	; 0x6c
   20ae8:	b	20b04 <readstat_parse_sas_commands+0x4ac>
   20aec:	sub	r0, fp, #140	; 0x8c
   20af0:	b	20b00 <readstat_parse_sas_commands+0x4a8>
   20af4:	sub	r0, fp, #172	; 0xac
   20af8:	b	20b00 <readstat_parse_sas_commands+0x4a8>
   20afc:	sub	r0, fp, #108	; 0x6c
   20b00:	mov	r1, #32
   20b04:	ldr	r2, [sp, #96]	; 0x60
   20b08:	ldr	r3, [sp, #88]	; 0x58
   20b0c:	bl	4868 <readstat_copy@plt>
   20b10:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20b14:	nop	{0}
   20b18:	.word	0x00000000
   20b1c:	.word	0x7ff80000
   20b20:	ldr	r1, [pc, #868]	; 20e8c <readstat_parse_sas_commands+0x834>
   20b24:	sub	r0, fp, #108	; 0x6c
   20b28:	add	r1, pc, r1
   20b2c:	bl	4a18 <strcasecmp@plt>
   20b30:	cmp	r0, #0
   20b34:	ldreq	r0, [sp, #100]	; 0x64
   20b38:	streq	r0, [r4, #264]	; 0x108
   20b3c:	sub	r0, fp, #108	; 0x6c
   20b40:	ldr	r1, [pc, #840]	; 20e90 <readstat_parse_sas_commands+0x838>
   20b44:	add	r1, pc, r1
   20b48:	bl	4a18 <strcasecmp@plt>
   20b4c:	cmp	r0, #0
   20b50:	bne	20cb0 <readstat_parse_sas_commands+0x658>
   20b54:	ldr	r1, [sp, #100]	; 0x64
   20b58:	ldr	r0, [sp, #92]	; 0x5c
   20b5c:	orrs	r0, r1, r0
   20b60:	ldrb	r0, [sp, #1132]	; 0x46c
   20b64:	movne	r0, r1
   20b68:	strb	r0, [r4, #272]	; 0x110
   20b6c:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20b70:	sub	r1, fp, #76	; 0x4c
   20b74:	mov	r0, r4
   20b78:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   20b7c:	ldr	r1, [sp, #64]	; 0x40
   20b80:	str	r1, [r0, #16]
   20b84:	ldr	r1, [sp, #68]	; 0x44
   20b88:	str	r1, [r0]
   20b8c:	ldr	r1, [sp, #60]	; 0x3c
   20b90:	str	r1, [r0, #4]
   20b94:	ldr	r1, [sp, #76]	; 0x4c
   20b98:	str	r1, [r0, #8]
   20b9c:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20ba0:	sub	r1, fp, #76	; 0x4c
   20ba4:	mov	r0, r4
   20ba8:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   20bac:	add	lr, sp, #1024	; 0x400
   20bb0:	add	r0, r0, #580	; 0x244
   20bb4:	mov	r1, #1024	; 0x400
   20bb8:	mov	r3, #1024	; 0x400
   20bbc:	add	r2, lr, #108	; 0x6c
   20bc0:	b	20b0c <readstat_parse_sas_commands+0x4b4>
   20bc4:	ldr	r2, [sp, #48]	; 0x30
   20bc8:	add	lr, sp, #1024	; 0x400
   20bcc:	sub	r1, fp, #172	; 0xac
   20bd0:	vorr	d0, d8, d8
   20bd4:	add	r0, lr, #108	; 0x6c
   20bd8:	str	r1, [sp, #16]
   20bdc:	sub	r1, fp, #140	; 0x8c
   20be0:	str	r0, [sp, #20]
   20be4:	ldr	r0, [sp, #52]	; 0x34
   20be8:	str	r2, [sp]
   20bec:	ldr	r2, [sp, #44]	; 0x2c
   20bf0:	str	r0, [sp, #24]
   20bf4:	ldr	r0, [sp, #40]	; 0x28
   20bf8:	str	r2, [sp, #4]
   20bfc:	ldr	r2, [sp, #100]	; 0x64
   20c00:	str	r2, [sp, #8]
   20c04:	ldr	r2, [sp, #92]	; 0x5c
   20c08:	str	r2, [sp, #12]
   20c0c:	ldr	r2, [sp, #84]	; 0x54
   20c10:	bl	4a3c <submit_value_label@plt>
   20c14:	cmp	r0, #0
   20c18:	beq	20cb0 <readstat_parse_sas_commands+0x658>
   20c1c:	b	20e5c <readstat_parse_sas_commands+0x804>
   20c20:	add	r9, r9, #1
   20c24:	mov	r8, sl
   20c28:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20c2c:	ldr	r0, [sp, #100]	; 0x64
   20c30:	ldr	r1, [sp, #92]	; 0x5c
   20c34:	rsbs	r0, r0, #0
   20c38:	rsc	r1, r1, #0
   20c3c:	b	20c48 <readstat_parse_sas_commands+0x5f0>
   20c40:	ldr	r0, [sp, #100]	; 0x64
   20c44:	ldr	r1, [sp, #92]	; 0x5c
   20c48:	bl	23654 <__aeabi_ul2d>
   20c4c:	mov	r2, #0
   20c50:	vmov	d8, r0, r1
   20c54:	str	r2, [sp, #84]	; 0x54
   20c58:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20c5c:	mov	r0, #2
   20c60:	b	20c68 <readstat_parse_sas_commands+0x610>
   20c64:	mov	r0, #3
   20c68:	str	r0, [sp, #84]	; 0x54
   20c6c:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20c70:	ldr	r0, [sp, #100]	; 0x64
   20c74:	str	r0, [sp, #76]	; 0x4c
   20c78:	b	20cb0 <readstat_parse_sas_commands+0x658>
   20c7c:	sub	r0, r1, #97	; 0x61
   20c80:	uxtb	r2, r0
   20c84:	mov	r0, #0
   20c88:	cmp	r2, #6
   20c8c:	subcc	r0, r1, #87	; 0x57
   20c90:	ldr	r1, [sp, #92]	; 0x5c
   20c94:	ldr	r2, [sp, #100]	; 0x64
   20c98:	lsl	r1, r1, #4
   20c9c:	orr	r1, r1, r2, lsr #28
   20ca0:	adds	r2, r0, r2, lsl #4
   20ca4:	adc	r0, r1, r0, asr #31
   20ca8:	str	r2, [sp, #100]	; 0x64
   20cac:	str	r0, [sp, #92]	; 0x5c
   20cb0:	add	r7, r7, #1
   20cb4:	adds	r6, r6, #1
   20cb8:	bne	208fc <readstat_parse_sas_commands+0x2a4>
   20cbc:	ldr	r0, [pc, #464]	; 20e94 <readstat_parse_sas_commands+0x83c>
   20cc0:	ldr	r1, [sp, #80]	; 0x50
   20cc4:	add	r0, pc, r0
   20cc8:	add	r0, r0, r1, lsl #1
   20ccc:	ldrsh	r0, [r0]
   20cd0:	uxth	r1, r0
   20cd4:	cmp	r1, #0
   20cd8:	beq	20da0 <readstat_parse_sas_commands+0x748>
   20cdc:	ldr	r7, [sp, #56]	; 0x38
   20ce0:	add	sl, sl, #1
   20ce4:	cmp	sl, r7
   20ce8:	bne	207a4 <readstat_parse_sas_commands+0x14c>
   20cec:	mov	sl, r7
   20cf0:	b	20d28 <readstat_parse_sas_commands+0x6d0>
   20cf4:	cmp	r8, #0
   20cf8:	mov	r4, #0
   20cfc:	movne	r0, #1
   20d00:	strne	r0, [r8]
   20d04:	b	20e48 <readstat_parse_sas_commands+0x7f0>
   20d08:	mov	r5, #15
   20d0c:	mov	r4, #0
   20d10:	b	20e14 <readstat_parse_sas_commands+0x7bc>
   20d14:	mov	r5, #3
   20d18:	mov	r4, r0
   20d1c:	b	20e14 <readstat_parse_sas_commands+0x7bc>
   20d20:	movw	r0, #1094	; 0x446
   20d24:	mov	r8, sl
   20d28:	ldr	r4, [sp, #72]	; 0x48
   20d2c:	ldr	r1, [pc, #356]	; 20e98 <readstat_parse_sas_commands+0x840>
   20d30:	ldr	r3, [pc, #356]	; 20e9c <readstat_parse_sas_commands+0x844>
   20d34:	add	r1, pc, r1
   20d38:	add	r3, pc, r3
   20d3c:	ldrb	r1, [r1, r0]
   20d40:	ldrb	r2, [r3, r1]
   20d44:	cmp	r2, #0
   20d48:	beq	20d70 <readstat_parse_sas_commands+0x718>
   20d4c:	add	r1, r3, r1
   20d50:	rsb	r2, r2, #0
   20d54:	add	r1, r1, #1
   20d58:	ldrb	r3, [r1], #1
   20d5c:	cmp	r3, #22
   20d60:	moveq	r8, r7
   20d64:	addeq	r9, r9, #1
   20d68:	adds	r2, r2, #1
   20d6c:	bne	20d58 <readstat_parse_sas_commands+0x700>
   20d70:	movw	r1, #1093	; 0x445
   20d74:	cmp	r0, r1
   20d78:	ble	20da4 <readstat_parse_sas_commands+0x74c>
   20d7c:	ldr	r7, [sp, #40]	; 0x28
   20d80:	ldr	r2, [sp, #52]	; 0x34
   20d84:	mov	r1, r4
   20d88:	mov	r0, r7
   20d8c:	bl	4928 <submit_columns@plt>
   20d90:	ldr	sl, [sp, #32]
   20d94:	ldr	r8, [sp, #36]	; 0x24
   20d98:	mov	r5, r0
   20d9c:	b	20e14 <readstat_parse_sas_commands+0x7bc>
   20da0:	ldr	r7, [sp, #56]	; 0x38
   20da4:	cmp	sl, r7
   20da8:	beq	20dd8 <readstat_parse_sas_commands+0x780>
   20dac:	ldrb	r0, [sl], #1
   20db0:	add	r3, r9, #1
   20db4:	sub	r1, sl, r8
   20db8:	str	r0, [sp, #4]
   20dbc:	add	r0, sp, #104	; 0x68
   20dc0:	str	r1, [sp]
   20dc4:	mov	r1, #1024	; 0x400
   20dc8:	ldr	r2, [pc, #212]	; 20ea4 <readstat_parse_sas_commands+0x84c>
   20dcc:	add	r2, pc, r2
   20dd0:	bl	4c4c <snprintf@plt>
   20dd4:	b	20dec <readstat_parse_sas_commands+0x794>
   20dd8:	ldr	r1, [pc, #192]	; 20ea0 <readstat_parse_sas_commands+0x848>
   20ddc:	add	r0, sp, #104	; 0x68
   20de0:	mov	r2, #66	; 0x42
   20de4:	add	r1, pc, r1
   20de8:	bl	4910 <memcpy@plt>
   20dec:	ldr	r7, [sp, #40]	; 0x28
   20df0:	ldr	r8, [sp, #36]	; 0x24
   20df4:	ldr	sl, [sp, #32]
   20df8:	ldr	r2, [r7, #24]
   20dfc:	cmp	r2, #0
   20e00:	beq	20e10 <readstat_parse_sas_commands+0x7b8>
   20e04:	ldr	r1, [sp, #52]	; 0x34
   20e08:	add	r0, sp, #104	; 0x68
   20e0c:	blx	r2
   20e10:	mov	r5, #5
   20e14:	ldr	r0, [r7, #32]
   20e18:	ldr	r1, [r0, #4]
   20e1c:	ldr	r0, [r0, #20]
   20e20:	blx	r1
   20e24:	mov	r0, sl
   20e28:	bl	48bc <free@plt>
   20e2c:	cmp	r5, #0
   20e30:	beq	20e48 <readstat_parse_sas_commands+0x7f0>
   20e34:	cmp	r8, #0
   20e38:	mov	r0, r4
   20e3c:	strne	r5, [r8]
   20e40:	bl	49a0 <readstat_schema_free@plt>
   20e44:	mov	r4, #0
   20e48:	mov	r0, r4
   20e4c:	sub	sp, fp, #40	; 0x28
   20e50:	vpop	{d8}
   20e54:	add	sp, sp, #4
   20e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e5c:	ldr	r8, [sp, #36]	; 0x24
   20e60:	ldr	r7, [sp, #40]	; 0x28
   20e64:	ldr	sl, [sp, #32]
   20e68:	b	20d98 <readstat_parse_sas_commands+0x740>
   20e6c:	.word	0x00008512
   20e70:	.word	0x000073da
   20e74:	.word	0x00005e60
   20e78:	.word	0x00007c52
   20e7c:	.word	0x0000d12c
   20e80:	.word	0x0000cba9
   20e84:	.word	0x0000cb91
   20e88:	.word	0x0000b512
   20e8c:	.word	0x0000d28e
   20e90:	.word	0x0000d27b
   20e94:	.word	0x00008440
   20e98:	.word	0x0000c7ee
   20e9c:	.word	0x0000c725
   20ea0:	.word	0x0000d024
   20ea4:	.word	0x0000cff7

00020ea8 <readstat_parse_spss_commands>:
   20ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20eac:	add	fp, sp, #28
   20eb0:	sub	sp, sp, #4
   20eb4:	vpush	{d8}
   20eb8:	sub	sp, sp, #216	; 0xd8
   20ebc:	sub	sp, sp, #2048	; 0x800
   20ec0:	mov	r7, r0
   20ec4:	ldr	r0, [r0, #32]
   20ec8:	mov	r8, r3
   20ecc:	str	r2, [sp, #52]	; 0x34
   20ed0:	mov	r2, r1
   20ed4:	ldr	r3, [r0]
   20ed8:	ldr	r1, [r0, #20]
   20edc:	mov	r0, r2
   20ee0:	blx	r3
   20ee4:	cmn	r0, #1
   20ee8:	beq	21528 <readstat_parse_spss_commands+0x680>
   20eec:	ldr	r0, [r7, #32]
   20ef0:	mov	r1, #2
   20ef4:	mov	r6, #0
   20ef8:	ldr	r3, [r0, #8]
   20efc:	ldr	r2, [r0, #20]
   20f00:	mov	r0, #0
   20f04:	blx	r3
   20f08:	cmn	r0, #1
   20f0c:	beq	2153c <readstat_parse_spss_commands+0x694>
   20f10:	mov	r4, r0
   20f14:	ldr	r0, [r7, #32]
   20f18:	mov	r1, #0
   20f1c:	ldr	r3, [r0, #8]
   20f20:	ldr	r2, [r0, #20]
   20f24:	mov	r0, #0
   20f28:	str	r0, [sp, #80]	; 0x50
   20f2c:	mov	r0, #0
   20f30:	blx	r3
   20f34:	mov	r0, r4
   20f38:	bl	4af0 <malloc@plt>
   20f3c:	mov	r6, r0
   20f40:	ldr	r0, [r7, #32]
   20f44:	mov	r1, r4
   20f48:	ldr	r3, [r0, #12]
   20f4c:	ldr	r2, [r0, #20]
   20f50:	mov	r0, r6
   20f54:	blx	r3
   20f58:	mov	r0, #1
   20f5c:	mov	r1, #280	; 0x118
   20f60:	mov	r5, #1
   20f64:	bl	4778 <calloc@plt>
   20f68:	mov	sl, r0
   20f6c:	cmp	r0, #0
   20f70:	beq	21548 <readstat_parse_spss_commands+0x6a0>
   20f74:	add	r0, r6, r4
   20f78:	cmp	r4, #0
   20f7c:	str	r7, [sp, #40]	; 0x28
   20f80:	str	r8, [sp, #36]	; 0x24
   20f84:	str	r5, [sl, #256]	; 0x100
   20f88:	str	r6, [sp, #32]
   20f8c:	str	r0, [sp, #76]	; 0x4c
   20f90:	beq	21550 <readstat_parse_spss_commands+0x6a8>
   20f94:	mov	r0, #0
   20f98:	vldr	d8, [pc, #1000]	; 21388 <readstat_parse_spss_commands+0x4e0>
   20f9c:	mov	r5, #628	; 0x274
   20fa0:	mov	r8, r6
   20fa4:	str	r6, [sp, #56]	; 0x38
   20fa8:	str	r0, [sp, #96]	; 0x60
   20fac:	mov	r0, #5
   20fb0:	str	r0, [sp, #100]	; 0x64
   20fb4:	mov	r0, #0
   20fb8:	str	r0, [sp, #84]	; 0x54
   20fbc:	mov	r0, #0
   20fc0:	str	r0, [sp, #48]	; 0x30
   20fc4:	mov	r0, #0
   20fc8:	str	r0, [sp, #44]	; 0x2c
   20fcc:	mov	r0, #0
   20fd0:	str	r0, [sp, #108]	; 0x6c
   20fd4:	mov	r0, #0
   20fd8:	str	r0, [sp, #92]	; 0x5c
   20fdc:	mov	r0, #0
   20fe0:	str	r0, [sp, #68]	; 0x44
   20fe4:	mov	r0, #0
   20fe8:	str	r0, [sp, #60]	; 0x3c
   20fec:	mov	r0, #0
   20ff0:	str	r0, [sp, #80]	; 0x50
   20ff4:	mov	r0, #0
   20ff8:	str	r0, [sp, #72]	; 0x48
   20ffc:	mov	r0, #0
   21000:	str	r0, [sp, #88]	; 0x58
   21004:	mov	r0, #0
   21008:	str	r0, [sp, #64]	; 0x40
   2100c:	mov	r0, #0
   21010:	str	r0, [sp, #104]	; 0x68
   21014:	ldr	r0, [pc, #1776]	; 2170c <readstat_parse_spss_commands+0x864>
   21018:	add	r0, pc, r0
   2101c:	ldrb	r1, [r0, r5]
   21020:	ldr	r0, [pc, #1768]	; 21710 <readstat_parse_spss_commands+0x868>
   21024:	ldr	r2, [pc, #1768]	; 21714 <readstat_parse_spss_commands+0x86c>
   21028:	add	r0, pc, r0
   2102c:	add	r2, pc, r2
   21030:	cmp	r1, #0
   21034:	add	r0, r0, r5, lsl #1
   21038:	ldrsh	r0, [r0]
   2103c:	add	r7, r2, r0
   21040:	ldr	r0, [pc, #1744]	; 21718 <readstat_parse_spss_commands+0x870>
   21044:	add	r0, pc, r0
   21048:	add	r0, r0, r5, lsl #1
   2104c:	ldrsh	r9, [r0]
   21050:	beq	210a0 <readstat_parse_spss_commands+0x1f8>
   21054:	add	ip, r7, r1
   21058:	sub	r3, ip, #1
   2105c:	cmp	r3, r7
   21060:	bcc	21098 <readstat_parse_spss_commands+0x1f0>
   21064:	ldrb	r6, [r8]
   21068:	mov	r2, r7
   2106c:	sub	r4, r3, r2
   21070:	mov	r0, r2
   21074:	ldrb	r4, [r0, r4, asr #1]!
   21078:	cmp	r6, r4
   2107c:	bcs	21088 <readstat_parse_spss_commands+0x1e0>
   21080:	sub	r3, r0, #1
   21084:	b	21090 <readstat_parse_spss_commands+0x1e8>
   21088:	bls	21110 <readstat_parse_spss_commands+0x268>
   2108c:	add	r2, r0, #1
   21090:	cmp	r3, r2
   21094:	bcs	2106c <readstat_parse_spss_commands+0x1c4>
   21098:	add	r9, r1, r9
   2109c:	b	210a4 <readstat_parse_spss_commands+0x1fc>
   210a0:	mov	ip, r7
   210a4:	ldr	r0, [pc, #1648]	; 2171c <readstat_parse_spss_commands+0x874>
   210a8:	mvn	r6, #1
   210ac:	add	r0, pc, r0
   210b0:	ldrb	r1, [r0, r5]
   210b4:	cmp	r1, #0
   210b8:	beq	21128 <readstat_parse_spss_commands+0x280>
   210bc:	add	r0, ip, r1, lsl #1
   210c0:	sub	r2, r0, #2
   210c4:	cmp	r2, ip
   210c8:	bcc	21124 <readstat_parse_spss_commands+0x27c>
   210cc:	ldrb	r3, [r8]
   210d0:	mov	r4, ip
   210d4:	sub	r0, r2, r4
   210d8:	and	r7, r6, r0, asr #1
   210dc:	mov	r0, r4
   210e0:	ldrb	r7, [r0, r7]!
   210e4:	cmp	r3, r7
   210e8:	bcs	210f4 <readstat_parse_spss_commands+0x24c>
   210ec:	sub	r2, r0, #2
   210f0:	b	21104 <readstat_parse_spss_commands+0x25c>
   210f4:	ldrb	r7, [r0, #1]
   210f8:	cmp	r3, r7
   210fc:	bls	2111c <readstat_parse_spss_commands+0x274>
   21100:	add	r4, r0, #2
   21104:	cmp	r2, r4
   21108:	bcs	210d4 <readstat_parse_spss_commands+0x22c>
   2110c:	b	21124 <readstat_parse_spss_commands+0x27c>
   21110:	sub	r1, r9, r7
   21114:	add	r9, r1, r0
   21118:	b	21128 <readstat_parse_spss_commands+0x280>
   2111c:	sub	r0, r0, ip
   21120:	asr	r1, r0, #1
   21124:	add	r9, r1, r9
   21128:	ldr	r0, [pc, #1520]	; 21720 <readstat_parse_spss_commands+0x878>
   2112c:	add	r0, pc, r0
   21130:	ldrb	r0, [r0, r9]
   21134:	cmp	r0, #0
   21138:	beq	214f4 <readstat_parse_spss_commands+0x64c>
   2113c:	ldr	r4, [pc, #1504]	; 21724 <readstat_parse_spss_commands+0x87c>
   21140:	add	r4, pc, r4
   21144:	ldrb	r6, [r4, r0]!
   21148:	cmp	r6, #0
   2114c:	beq	214f4 <readstat_parse_spss_commands+0x64c>
   21150:	ldrb	r0, [r4, #1]!
   21154:	cmp	r0, #35	; 0x23
   21158:	bhi	214ec <readstat_parse_spss_commands+0x644>
   2115c:	add	r1, pc, #4
   21160:	ldr	r0, [r1, r0, lsl #2]
   21164:	add	pc, r1, r0
   21168:	.word	0x000000bc
   2116c:	.word	0x000000cc
   21170:	.word	0x00000100
   21174:	.word	0x00000114
   21178:	.word	0x00000128
   2117c:	.word	0x00000138
   21180:	.word	0x00000150
   21184:	.word	0x00000158
   21188:	.word	0x0000016c
   2118c:	.word	0x0000019c
   21190:	.word	0x000001c4
   21194:	.word	0x000001cc
   21198:	.word	0x000001e0
   2119c:	.word	0x00000228
   211a0:	.word	0x0000028c
   211a4:	.word	0x00000098
   211a8:	.word	0x000000a0
   211ac:	.word	0x00000098
   211b0:	.word	0x000000a0
   211b4:	.word	0x00000304
   211b8:	.word	0x00000098
   211bc:	.word	0x000000a0
   211c0:	.word	0x000000b0
   211c4:	.word	0x000000b0
   211c8:	.word	0x00000090
   211cc:	.word	0x00000090
   211d0:	.word	0x000000b0
   211d4:	.word	0x00000318
   211d8:	.word	0x00000090
   211dc:	.word	0x00000090
   211e0:	.word	0x00000328
   211e4:	.word	0x00000330
   211e8:	.word	0x00000344
   211ec:	.word	0x00000360
   211f0:	.word	0x00000374
   211f4:	.word	0x0000037c
   211f8:	mov	r0, #5
   211fc:	b	2121c <readstat_parse_spss_commands+0x374>
   21200:	str	r8, [sp, #104]	; 0x68
   21204:	b	214ec <readstat_parse_spss_commands+0x644>
   21208:	ldr	r0, [sp, #104]	; 0x68
   2120c:	sub	r0, r8, r0
   21210:	str	r0, [sp, #96]	; 0x60
   21214:	b	214ec <readstat_parse_spss_commands+0x644>
   21218:	mov	r0, #0
   2121c:	str	r0, [sp, #100]	; 0x64
   21220:	b	214ec <readstat_parse_spss_commands+0x644>
   21224:	mov	r0, #0
   21228:	str	r0, [sp, #108]	; 0x6c
   2122c:	mov	r0, #0
   21230:	b	21260 <readstat_parse_spss_commands+0x3b8>
   21234:	ldr	r2, [sp, #92]	; 0x5c
   21238:	ldr	r1, [sp, #108]	; 0x6c
   2123c:	mov	r0, #10
   21240:	umull	r0, r1, r1, r0
   21244:	add	r2, r2, r2, lsl #2
   21248:	add	r1, r1, r2, lsl #1
   2124c:	ldrb	r2, [r8]
   21250:	sub	r2, r2, #48	; 0x30
   21254:	adds	r0, r0, r2
   21258:	str	r0, [sp, #108]	; 0x6c
   2125c:	adc	r0, r1, r2, asr #31
   21260:	str	r0, [sp, #92]	; 0x5c
   21264:	b	214ec <readstat_parse_spss_commands+0x644>
   21268:	ldr	r0, [sp, #108]	; 0x6c
   2126c:	sub	r0, r0, #1
   21270:	str	r0, [sp, #68]	; 0x44
   21274:	mov	r0, #1
   21278:	b	21288 <readstat_parse_spss_commands+0x3e0>
   2127c:	ldr	r0, [sp, #68]	; 0x44
   21280:	ldr	r1, [sp, #108]	; 0x6c
   21284:	sub	r0, r1, r0
   21288:	str	r0, [sp, #80]	; 0x50
   2128c:	b	214ec <readstat_parse_spss_commands+0x644>
   21290:	add	lr, sp, #1024	; 0x400
   21294:	mov	r1, #1024	; 0x400
   21298:	add	r0, lr, #116	; 0x74
   2129c:	b	212a8 <readstat_parse_spss_commands+0x400>
   212a0:	sub	r0, fp, #140	; 0x8c
   212a4:	mov	r1, #32
   212a8:	ldr	r2, [sp, #104]	; 0x68
   212ac:	ldr	r3, [sp, #96]	; 0x60
   212b0:	bl	4a24 <readstat_copy_quoted@plt>
   212b4:	b	214ec <readstat_parse_spss_commands+0x644>
   212b8:	sub	r0, fp, #76	; 0x4c
   212bc:	b	212c4 <readstat_parse_spss_commands+0x41c>
   212c0:	sub	r0, fp, #108	; 0x6c
   212c4:	ldr	r2, [sp, #104]	; 0x68
   212c8:	ldr	r3, [sp, #96]	; 0x60
   212cc:	mov	r1, #32
   212d0:	b	21324 <readstat_parse_spss_commands+0x47c>
   212d4:	sub	r1, fp, #76	; 0x4c
   212d8:	mov	r0, sl
   212dc:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   212e0:	ldr	r1, [sp, #100]	; 0x64
   212e4:	str	r1, [r0, #16]
   212e8:	ldr	r1, [sp, #60]	; 0x3c
   212ec:	str	r1, [r0]
   212f0:	ldr	r1, [sp, #68]	; 0x44
   212f4:	str	r1, [r0, #4]
   212f8:	ldr	r1, [sp, #80]	; 0x50
   212fc:	str	r1, [r0, #8]
   21300:	b	214ec <readstat_parse_spss_commands+0x644>
   21304:	sub	r1, fp, #76	; 0x4c
   21308:	mov	r0, sl
   2130c:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   21310:	add	lr, sp, #1024	; 0x400
   21314:	add	r0, r0, #580	; 0x244
   21318:	mov	r1, #1024	; 0x400
   2131c:	mov	r3, #1024	; 0x400
   21320:	add	r2, lr, #116	; 0x74
   21324:	bl	4868 <readstat_copy@plt>
   21328:	b	214ec <readstat_parse_spss_commands+0x644>
   2132c:	mov	r0, #0
   21330:	b	21340 <readstat_parse_spss_commands+0x498>
   21334:	ldr	r0, [sp, #72]	; 0x48
   21338:	cmp	r0, #1024	; 0x400
   2133c:	addcc	r0, r0, #1
   21340:	str	r0, [sp, #72]	; 0x48
   21344:	b	214ec <readstat_parse_spss_commands+0x644>
   21348:	ldr	r1, [pc, #984]	; 21728 <readstat_parse_spss_commands+0x880>
   2134c:	sub	r0, fp, #108	; 0x6c
   21350:	add	r1, pc, r1
   21354:	bl	4a18 <strcasecmp@plt>
   21358:	cmp	r0, #0
   2135c:	ldreq	r0, [sp, #108]	; 0x6c
   21360:	streq	r0, [sl, #264]	; 0x108
   21364:	sub	r0, fp, #108	; 0x6c
   21368:	ldr	r1, [pc, #956]	; 2172c <readstat_parse_spss_commands+0x884>
   2136c:	add	r1, pc, r1
   21370:	bl	4a18 <strcasecmp@plt>
   21374:	cmp	r0, #0
   21378:	ldrbeq	r0, [sp, #1140]	; 0x474
   2137c:	strbeq	r0, [sl, #272]	; 0x110
   21380:	b	214ec <readstat_parse_spss_commands+0x644>
   21384:	nop	{0}
   21388:	.word	0x00000000
   2138c:	.word	0x7ff80000
   21390:	ldr	r2, [pc, #920]	; 21730 <readstat_parse_spss_commands+0x888>
   21394:	ldr	r3, [sp, #64]	; 0x40
   21398:	add	r0, sp, #112	; 0x70
   2139c:	mov	r1, #256	; 0x100
   213a0:	add	r2, pc, r2
   213a4:	bl	4c4c <snprintf@plt>
   213a8:	ldr	r0, [sp, #72]	; 0x48
   213ac:	cmp	r0, #1
   213b0:	blt	213e4 <readstat_parse_spss_commands+0x53c>
   213b4:	ldr	r5, [sp, #72]	; 0x48
   213b8:	sub	r1, fp, #76	; 0x4c
   213bc:	mov	r0, sl
   213c0:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   213c4:	movw	r1, #2168	; 0x878
   213c8:	add	r2, sp, #112	; 0x70
   213cc:	mov	r3, #256	; 0x100
   213d0:	add	r0, r0, r1
   213d4:	mov	r1, #32
   213d8:	bl	4868 <readstat_copy@plt>
   213dc:	subs	r5, r5, #1
   213e0:	bne	213b8 <readstat_parse_spss_commands+0x510>
   213e4:	ldr	r0, [sp, #64]	; 0x40
   213e8:	add	r0, r0, #1
   213ec:	str	r0, [sp, #64]	; 0x40
   213f0:	b	214ec <readstat_parse_spss_commands+0x644>
   213f4:	ldr	r2, [pc, #824]	; 21734 <readstat_parse_spss_commands+0x88c>
   213f8:	ldr	r3, [sp, #64]	; 0x40
   213fc:	add	r5, sp, #112	; 0x70
   21400:	mov	r1, #256	; 0x100
   21404:	mov	r0, r5
   21408:	add	r2, pc, r2
   2140c:	bl	4c4c <snprintf@plt>
   21410:	ldr	r2, [sp, #48]	; 0x30
   21414:	add	lr, sp, #1024	; 0x400
   21418:	sub	r1, fp, #140	; 0x8c
   2141c:	vorr	d0, d8, d8
   21420:	add	r0, lr, #116	; 0x74
   21424:	str	r1, [sp, #16]
   21428:	mov	r1, r5
   2142c:	str	r0, [sp, #20]
   21430:	ldr	r0, [sp, #52]	; 0x34
   21434:	str	r2, [sp]
   21438:	ldr	r2, [sp, #44]	; 0x2c
   2143c:	str	r0, [sp, #24]
   21440:	ldr	r0, [sp, #40]	; 0x28
   21444:	str	r2, [sp, #4]
   21448:	ldr	r2, [sp, #108]	; 0x6c
   2144c:	str	r2, [sp, #8]
   21450:	ldr	r2, [sp, #92]	; 0x5c
   21454:	str	r2, [sp, #12]
   21458:	ldr	r2, [sp, #88]	; 0x58
   2145c:	bl	4a3c <submit_value_label@plt>
   21460:	cmp	r0, #0
   21464:	beq	214ec <readstat_parse_spss_commands+0x644>
   21468:	b	216b4 <readstat_parse_spss_commands+0x80c>
   2146c:	ldr	r0, [sp, #84]	; 0x54
   21470:	str	r8, [sp, #56]	; 0x38
   21474:	add	r0, r0, #1
   21478:	str	r0, [sp, #84]	; 0x54
   2147c:	b	214ec <readstat_parse_spss_commands+0x644>
   21480:	ldr	r0, [sp, #108]	; 0x6c
   21484:	sub	r0, r0, #1
   21488:	str	r0, [sp, #60]	; 0x3c
   2148c:	b	214ec <readstat_parse_spss_commands+0x644>
   21490:	mvn	r0, #0
   21494:	b	214e8 <readstat_parse_spss_commands+0x640>
   21498:	ldr	r0, [sp, #108]	; 0x6c
   2149c:	ldr	r1, [sp, #92]	; 0x5c
   214a0:	rsbs	r0, r0, #0
   214a4:	rsc	r1, r1, #0
   214a8:	b	214b4 <readstat_parse_spss_commands+0x60c>
   214ac:	ldr	r0, [sp, #108]	; 0x6c
   214b0:	ldr	r1, [sp, #92]	; 0x5c
   214b4:	bl	23654 <__aeabi_ul2d>
   214b8:	mov	r2, #0
   214bc:	vmov	d8, r0, r1
   214c0:	str	r2, [sp, #88]	; 0x58
   214c4:	b	214ec <readstat_parse_spss_commands+0x644>
   214c8:	ldr	r0, [sp, #108]	; 0x6c
   214cc:	str	r0, [sp, #48]	; 0x30
   214d0:	ldr	r0, [sp, #92]	; 0x5c
   214d4:	str	r0, [sp, #44]	; 0x2c
   214d8:	b	214ec <readstat_parse_spss_commands+0x644>
   214dc:	mov	r0, #2
   214e0:	b	214e8 <readstat_parse_spss_commands+0x640>
   214e4:	mov	r0, #1
   214e8:	str	r0, [sp, #88]	; 0x58
   214ec:	subs	r6, r6, #1
   214f0:	bne	21150 <readstat_parse_spss_commands+0x2a8>
   214f4:	ldr	r0, [pc, #572]	; 21738 <readstat_parse_spss_commands+0x890>
   214f8:	add	r0, pc, r0
   214fc:	add	r0, r0, r9, lsl #1
   21500:	ldrsh	r5, [r0]
   21504:	uxth	r0, r5
   21508:	cmp	r0, #0
   2150c:	beq	21618 <readstat_parse_spss_commands+0x770>
   21510:	ldr	r0, [sp, #76]	; 0x4c
   21514:	add	r8, r8, #1
   21518:	cmp	r8, r0
   2151c:	bne	21014 <readstat_parse_spss_commands+0x16c>
   21520:	ldr	r8, [sp, #76]	; 0x4c
   21524:	b	2157c <readstat_parse_spss_commands+0x6d4>
   21528:	cmp	r8, #0
   2152c:	mov	sl, #0
   21530:	movne	r0, #1
   21534:	strne	r0, [r8]
   21538:	b	216f8 <readstat_parse_spss_commands+0x850>
   2153c:	mov	r5, #15
   21540:	mov	sl, #0
   21544:	b	216c4 <readstat_parse_spss_commands+0x81c>
   21548:	mov	r5, #3
   2154c:	b	216c4 <readstat_parse_spss_commands+0x81c>
   21550:	mov	r0, #5
   21554:	mov	r5, #628	; 0x274
   21558:	mov	r8, r6
   2155c:	str	r6, [sp, #56]	; 0x38
   21560:	str	r0, [sp, #100]	; 0x64
   21564:	mov	r0, #0
   21568:	str	r0, [sp, #60]	; 0x3c
   2156c:	mov	r0, #0
   21570:	str	r0, [sp, #68]	; 0x44
   21574:	mov	r0, #0
   21578:	str	r0, [sp, #84]	; 0x54
   2157c:	ldr	r0, [pc, #440]	; 2173c <readstat_parse_spss_commands+0x894>
   21580:	ldr	r2, [pc, #440]	; 21740 <readstat_parse_spss_commands+0x898>
   21584:	add	r0, pc, r0
   21588:	add	r2, pc, r2
   2158c:	ldrb	r0, [r0, r5]
   21590:	ldrb	r1, [r2, r0]
   21594:	cmp	r1, #0
   21598:	beq	21610 <readstat_parse_spss_commands+0x768>
   2159c:	add	r0, r2, r0
   215a0:	rsb	r4, r1, #0
   215a4:	sub	r9, fp, #76	; 0x4c
   215a8:	add	r6, r0, #1
   215ac:	ldrb	r0, [r6]
   215b0:	cmp	r0, #19
   215b4:	beq	215f0 <readstat_parse_spss_commands+0x748>
   215b8:	cmp	r0, #8
   215bc:	bne	21604 <readstat_parse_spss_commands+0x75c>
   215c0:	mov	r0, sl
   215c4:	mov	r1, r9
   215c8:	bl	4ac0 <readstat_schema_find_or_create_entry@plt>
   215cc:	ldr	r1, [sp, #100]	; 0x64
   215d0:	str	r1, [r0, #16]
   215d4:	ldr	r1, [sp, #60]	; 0x3c
   215d8:	str	r1, [r0]
   215dc:	ldr	r1, [sp, #68]	; 0x44
   215e0:	str	r1, [r0, #4]
   215e4:	ldr	r1, [sp, #80]	; 0x50
   215e8:	str	r1, [r0, #8]
   215ec:	b	21604 <readstat_parse_spss_commands+0x75c>
   215f0:	ldr	r0, [sp, #84]	; 0x54
   215f4:	add	r0, r0, #1
   215f8:	str	r0, [sp, #84]	; 0x54
   215fc:	ldr	r0, [sp, #76]	; 0x4c
   21600:	str	r0, [sp, #56]	; 0x38
   21604:	add	r6, r6, #1
   21608:	adds	r4, r4, #1
   2160c:	bne	215ac <readstat_parse_spss_commands+0x704>
   21610:	cmp	r5, #628	; 0x274
   21614:	bge	21658 <readstat_parse_spss_commands+0x7b0>
   21618:	ldr	r0, [sp, #76]	; 0x4c
   2161c:	cmp	r8, r0
   21620:	beq	21674 <readstat_parse_spss_commands+0x7cc>
   21624:	ldr	r0, [sp, #56]	; 0x38
   21628:	mov	r1, #1024	; 0x400
   2162c:	rsb	r0, r0, #1
   21630:	ldrb	r0, [r8], r0
   21634:	str	r0, [sp, #4]
   21638:	str	r8, [sp]
   2163c:	ldr	r0, [sp, #84]	; 0x54
   21640:	ldr	r2, [pc, #256]	; 21748 <readstat_parse_spss_commands+0x8a0>
   21644:	add	r3, r0, #1
   21648:	add	r0, sp, #112	; 0x70
   2164c:	add	r2, pc, r2
   21650:	bl	4c4c <snprintf@plt>
   21654:	b	21688 <readstat_parse_spss_commands+0x7e0>
   21658:	ldr	r7, [sp, #40]	; 0x28
   2165c:	ldr	r2, [sp, #52]	; 0x34
   21660:	mov	r1, sl
   21664:	mov	r0, r7
   21668:	bl	4928 <submit_columns@plt>
   2166c:	ldr	r8, [sp, #36]	; 0x24
   21670:	b	216bc <readstat_parse_spss_commands+0x814>
   21674:	ldr	r1, [pc, #200]	; 21744 <readstat_parse_spss_commands+0x89c>
   21678:	add	r0, sp, #112	; 0x70
   2167c:	mov	r2, #67	; 0x43
   21680:	add	r1, pc, r1
   21684:	bl	4910 <memcpy@plt>
   21688:	ldr	r7, [sp, #40]	; 0x28
   2168c:	ldr	r8, [sp, #36]	; 0x24
   21690:	ldr	r6, [sp, #32]
   21694:	ldr	r2, [r7, #24]
   21698:	cmp	r2, #0
   2169c:	beq	216ac <readstat_parse_spss_commands+0x804>
   216a0:	ldr	r1, [sp, #52]	; 0x34
   216a4:	add	r0, sp, #112	; 0x70
   216a8:	blx	r2
   216ac:	mov	r5, #5
   216b0:	b	216c4 <readstat_parse_spss_commands+0x81c>
   216b4:	ldr	r8, [sp, #36]	; 0x24
   216b8:	ldr	r7, [sp, #40]	; 0x28
   216bc:	mov	r5, r0
   216c0:	ldr	r6, [sp, #32]
   216c4:	ldr	r0, [r7, #32]
   216c8:	ldr	r1, [r0, #4]
   216cc:	ldr	r0, [r0, #20]
   216d0:	blx	r1
   216d4:	mov	r0, r6
   216d8:	bl	48bc <free@plt>
   216dc:	cmp	r5, #0
   216e0:	beq	216f8 <readstat_parse_spss_commands+0x850>
   216e4:	cmp	r8, #0
   216e8:	mov	r0, sl
   216ec:	strne	r5, [r8]
   216f0:	bl	49a0 <readstat_schema_free@plt>
   216f4:	mov	sl, #0
   216f8:	mov	r0, sl
   216fc:	sub	sp, fp, #40	; 0x28
   21700:	vpop	{d8}
   21704:	add	sp, sp, #4
   21708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2170c:	.word	0x0000e3ee
   21710:	.word	0x0000d9fe
   21714:	.word	0x0000ce1e
   21718:	.word	0x0000ded2
   2171c:	.word	0x0000e5d2
   21720:	.word	0x00010176
   21724:	.word	0x00010e38
   21728:	.word	0x00010f43
   2172c:	.word	0x00010f31
   21730:	.word	0x00003573
   21734:	.word	0x0000350b
   21738:	.word	0x0000e3fe
   2173c:	.word	0x00010a97
   21740:	.word	0x000109f0
   21744:	.word	0x00010c68
   21748:	.word	0x00010c5c

0002174c <readstat_schema_free>:
   2174c:	cmp	r0, #0
   21750:	bxeq	lr
   21754:	push	{r4, sl, fp, lr}
   21758:	add	fp, sp, #8
   2175c:	mov	r4, r0
   21760:	ldr	r0, [r0, #276]	; 0x114
   21764:	bl	48bc <free@plt>
   21768:	mov	r0, r4
   2176c:	pop	{r4, sl, fp, lr}
   21770:	b	48bc <free@plt>

00021774 <readstat_schema_find_or_create_entry>:
   21774:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21778:	add	fp, sp, #24
   2177c:	ldr	r7, [r0, #268]	; 0x10c
   21780:	mov	r5, r1
   21784:	mov	r9, r0
   21788:	cmp	r7, #0
   2178c:	ble	217c4 <readstat_schema_find_or_create_entry+0x50>
   21790:	ldr	r8, [r9, #276]	; 0x114
   21794:	mov	r4, #0
   21798:	mov	r6, r8
   2179c:	add	r0, r6, #24
   217a0:	mov	r1, r5
   217a4:	bl	4808 <strcmp@plt>
   217a8:	cmp	r0, #0
   217ac:	beq	217cc <readstat_schema_find_or_create_entry+0x58>
   217b0:	add	r4, r4, #1
   217b4:	add	r6, r6, #2208	; 0x8a0
   217b8:	cmp	r4, r7
   217bc:	blt	2179c <readstat_schema_find_or_create_entry+0x28>
   217c0:	b	217d4 <readstat_schema_find_or_create_entry+0x60>
   217c4:	ldr	r8, [r9, #276]	; 0x114
   217c8:	b	217d4 <readstat_schema_find_or_create_entry+0x60>
   217cc:	cmp	r6, #0
   217d0:	bne	2183c <readstat_schema_find_or_create_entry+0xc8>
   217d4:	mov	r4, #2208	; 0x8a0
   217d8:	mul	r0, r7, r4
   217dc:	add	r1, r0, #2208	; 0x8a0
   217e0:	mov	r0, r8
   217e4:	bl	49e8 <realloc@plt>
   217e8:	str	r0, [r9, #276]	; 0x114
   217ec:	mov	r2, #2208	; 0x8a0
   217f0:	ldr	r1, [r9, #268]	; 0x10c
   217f4:	mla	r6, r1, r4, r0
   217f8:	mov	r1, #0
   217fc:	mov	r0, r6
   21800:	bl	4c70 <memset@plt>
   21804:	mov	r0, r5
   21808:	add	r7, r6, #24
   2180c:	bl	4bd4 <strlen@plt>
   21810:	mov	r3, r0
   21814:	mov	r0, r7
   21818:	mov	r1, #300	; 0x12c
   2181c:	mov	r2, r5
   21820:	bl	4868 <readstat_copy@plt>
   21824:	mov	r0, #46	; 0x2e
   21828:	strb	r0, [r6, #2200]	; 0x898
   2182c:	ldr	r0, [r9, #268]	; 0x10c
   21830:	add	r1, r0, #1
   21834:	str	r1, [r9, #268]	; 0x10c
   21838:	str	r0, [r6, #20]
   2183c:	mov	r0, r6
   21840:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00021844 <readstat_parse_stata_dictionary>:
   21844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21848:	add	fp, sp, #28
   2184c:	sub	sp, sp, #244	; 0xf4
   21850:	sub	sp, sp, #3072	; 0xc00
   21854:	mov	r7, r0
   21858:	ldr	r0, [r0, #32]
   2185c:	mov	r9, r3
   21860:	mov	r6, r2
   21864:	mov	r2, r1
   21868:	ldr	r3, [r0]
   2186c:	ldr	r1, [r0, #20]
   21870:	mov	r0, r2
   21874:	blx	r3
   21878:	cmn	r0, #1
   2187c:	beq	21e2c <readstat_parse_stata_dictionary+0x5e8>
   21880:	ldr	r0, [r7, #32]
   21884:	mov	r1, #2
   21888:	mov	r5, #0
   2188c:	ldr	r3, [r0, #8]
   21890:	ldr	r2, [r0, #20]
   21894:	mov	r0, #0
   21898:	blx	r3
   2189c:	cmn	r0, #1
   218a0:	beq	21e40 <readstat_parse_stata_dictionary+0x5fc>
   218a4:	mov	r4, r0
   218a8:	ldr	r0, [r7, #32]
   218ac:	mov	r1, #0
   218b0:	ldr	r3, [r0, #8]
   218b4:	ldr	r2, [r0, #20]
   218b8:	mov	r0, #0
   218bc:	blx	r3
   218c0:	mov	r0, r4
   218c4:	bl	4af0 <malloc@plt>
   218c8:	mov	r5, r0
   218cc:	ldr	r0, [r7, #32]
   218d0:	mov	r1, r4
   218d4:	ldr	r3, [r0, #12]
   218d8:	ldr	r2, [r0, #20]
   218dc:	mov	r0, r5
   218e0:	blx	r3
   218e4:	mov	r0, #1
   218e8:	mov	r1, #280	; 0x118
   218ec:	mov	r8, #1
   218f0:	bl	4778 <calloc@plt>
   218f4:	cmp	r0, #0
   218f8:	str	r0, [sp, #52]	; 0x34
   218fc:	beq	21e50 <readstat_parse_stata_dictionary+0x60c>
   21900:	mov	r1, #0
   21904:	str	r7, [sp, #36]	; 0x24
   21908:	cmp	r4, #0
   2190c:	mov	r7, r5
   21910:	str	r6, [sp, #20]
   21914:	str	r9, [sp, #8]
   21918:	str	r8, [r0, #256]	; 0x100
   2191c:	str	r5, [sp, #12]
   21920:	str	r1, [sp, #44]	; 0x2c
   21924:	add	r1, r5, r4
   21928:	str	r1, [sp, #48]	; 0x30
   2192c:	beq	21e5c <readstat_parse_stata_dictionary+0x618>
   21930:	add	r0, sp, #1104	; 0x450
   21934:	mov	r2, #0
   21938:	mvn	r4, #1
   2193c:	mov	sl, #0
   21940:	mov	r8, #0
   21944:	add	r1, r0, #16
   21948:	str	r1, [sp, #16]
   2194c:	add	r1, r0, #580	; 0x244
   21950:	add	r0, r0, #24
   21954:	str	r1, [sp, #28]
   21958:	mov	r1, #0
   2195c:	str	r0, [sp, #24]
   21960:	mov	r0, #1
   21964:	str	r1, [sp, #56]	; 0x38
   21968:	mov	r1, #0
   2196c:	ldr	r6, [pc, #1484]	; 21f40 <readstat_parse_stata_dictionary+0x6fc>
   21970:	str	r1, [sp, #40]	; 0x28
   21974:	ldr	r1, [sp, #12]
   21978:	ldr	r5, [sp, #52]	; 0x34
   2197c:	str	r2, [sp, #72]	; 0x48
   21980:	mov	r2, #0
   21984:	str	r2, [sp, #68]	; 0x44
   21988:	mov	r2, #0
   2198c:	str	r2, [sp, #60]	; 0x3c
   21990:	mov	r2, #0
   21994:	str	r2, [sp, #44]	; 0x2c
   21998:	add	r6, pc, r6
   2199c:	mov	r7, r1
   219a0:	str	r1, [sp, #32]
   219a4:	ldr	r1, [pc, #1432]	; 21f44 <readstat_parse_stata_dictionary+0x700>
   219a8:	add	r1, pc, r1
   219ac:	ldrb	r2, [r1, r0]
   219b0:	ldr	r1, [pc, #1424]	; 21f48 <readstat_parse_stata_dictionary+0x704>
   219b4:	ldr	r3, [pc, #1424]	; 21f4c <readstat_parse_stata_dictionary+0x708>
   219b8:	add	r1, pc, r1
   219bc:	add	r3, pc, r3
   219c0:	cmp	r2, #0
   219c4:	add	r1, r1, r0, lsl #1
   219c8:	ldrsh	r1, [r1]
   219cc:	add	lr, r3, r1
   219d0:	ldr	r1, [pc, #1400]	; 21f50 <readstat_parse_stata_dictionary+0x70c>
   219d4:	add	r1, pc, r1
   219d8:	add	r1, r1, r0, lsl #1
   219dc:	ldrsh	r3, [r1]
   219e0:	beq	21a48 <readstat_parse_stata_dictionary+0x204>
   219e4:	add	ip, lr, r2
   219e8:	mov	r9, r7
   219ec:	str	r3, [sp, #76]	; 0x4c
   219f0:	sub	r6, ip, #1
   219f4:	cmp	r6, lr
   219f8:	bcc	21a30 <readstat_parse_stata_dictionary+0x1ec>
   219fc:	ldrb	r7, [r9]
   21a00:	mov	r3, lr
   21a04:	sub	r5, r6, r3
   21a08:	mov	r1, r3
   21a0c:	ldrb	r5, [r1, r5, asr #1]!
   21a10:	cmp	r7, r5
   21a14:	bcs	21a20 <readstat_parse_stata_dictionary+0x1dc>
   21a18:	sub	r6, r1, #1
   21a1c:	b	21a28 <readstat_parse_stata_dictionary+0x1e4>
   21a20:	bls	21ac8 <readstat_parse_stata_dictionary+0x284>
   21a24:	add	r3, r1, #1
   21a28:	cmp	r6, r3
   21a2c:	bcs	21a04 <readstat_parse_stata_dictionary+0x1c0>
   21a30:	ldr	r3, [sp, #76]	; 0x4c
   21a34:	ldr	r5, [sp, #52]	; 0x34
   21a38:	ldr	r6, [pc, #1300]	; 21f54 <readstat_parse_stata_dictionary+0x710>
   21a3c:	add	r3, r2, r3
   21a40:	add	r6, pc, r6
   21a44:	b	21a50 <readstat_parse_stata_dictionary+0x20c>
   21a48:	mov	r9, r7
   21a4c:	mov	ip, lr
   21a50:	ldr	r1, [pc, #1280]	; 21f58 <readstat_parse_stata_dictionary+0x714>
   21a54:	add	r1, pc, r1
   21a58:	ldrb	r0, [r1, r0]
   21a5c:	cmp	r0, #0
   21a60:	beq	21ac0 <readstat_parse_stata_dictionary+0x27c>
   21a64:	add	r1, ip, r0, lsl #1
   21a68:	sub	r2, r1, #2
   21a6c:	cmp	r2, ip
   21a70:	bcc	21af8 <readstat_parse_stata_dictionary+0x2b4>
   21a74:	str	r3, [sp, #76]	; 0x4c
   21a78:	ldrb	r3, [r9]
   21a7c:	mov	lr, r5
   21a80:	mov	r5, ip
   21a84:	sub	r1, r2, r5
   21a88:	and	r7, r4, r1, asr #1
   21a8c:	mov	r1, r5
   21a90:	ldrb	r7, [r1, r7]!
   21a94:	cmp	r3, r7
   21a98:	bcs	21aa4 <readstat_parse_stata_dictionary+0x260>
   21a9c:	sub	r2, r1, #2
   21aa0:	b	21ab4 <readstat_parse_stata_dictionary+0x270>
   21aa4:	ldrb	r7, [r1, #1]
   21aa8:	cmp	r3, r7
   21aac:	bls	21ae8 <readstat_parse_stata_dictionary+0x2a4>
   21ab0:	add	r5, r1, #2
   21ab4:	cmp	r2, r5
   21ab8:	bcs	21a84 <readstat_parse_stata_dictionary+0x240>
   21abc:	b	21af0 <readstat_parse_stata_dictionary+0x2ac>
   21ac0:	mov	r7, r9
   21ac4:	b	21b00 <readstat_parse_stata_dictionary+0x2bc>
   21ac8:	ldr	r0, [sp, #76]	; 0x4c
   21acc:	ldr	r5, [sp, #52]	; 0x34
   21ad0:	ldr	r6, [pc, #1176]	; 21f70 <readstat_parse_stata_dictionary+0x72c>
   21ad4:	mov	r7, r9
   21ad8:	sub	r0, r0, lr
   21adc:	add	r6, pc, r6
   21ae0:	add	r3, r0, r1
   21ae4:	b	21b00 <readstat_parse_stata_dictionary+0x2bc>
   21ae8:	sub	r0, r1, ip
   21aec:	asr	r0, r0, #1
   21af0:	ldr	r3, [sp, #76]	; 0x4c
   21af4:	mov	r5, lr
   21af8:	mov	r7, r9
   21afc:	add	r3, r0, r3
   21b00:	ldr	r0, [pc, #1108]	; 21f5c <readstat_parse_stata_dictionary+0x718>
   21b04:	str	r3, [sp, #76]	; 0x4c
   21b08:	add	r0, pc, r0
   21b0c:	ldrb	r0, [r0, r3]
   21b10:	cmp	r0, #0
   21b14:	ldrbne	r1, [r6, r0]
   21b18:	cmpne	r1, #0
   21b1c:	beq	21de4 <readstat_parse_stata_dictionary+0x5a0>
   21b20:	add	r0, r6, r0
   21b24:	rsb	r6, r1, #0
   21b28:	str	r7, [sp, #64]	; 0x40
   21b2c:	add	r9, r0, #1
   21b30:	b	21bb4 <readstat_parse_stata_dictionary+0x370>
   21b34:	str	r8, [sp, #1112]	; 0x458
   21b38:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21b3c:	mov	r0, #44	; 0x2c
   21b40:	strb	r0, [sp, #3304]	; 0xce8
   21b44:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21b48:	mov	r0, #1
   21b4c:	str	r0, [sp, #1116]	; 0x45c
   21b50:	ldr	r0, [sp, #60]	; 0x3c
   21b54:	ldr	r1, [r4, #268]	; 0x10c
   21b58:	mov	r7, r4
   21b5c:	add	r0, r8, r0
   21b60:	str	r0, [sp, #60]	; 0x3c
   21b64:	ldr	r0, [r4, #276]	; 0x114
   21b68:	mov	r4, #2208	; 0x8a0
   21b6c:	mul	r1, r1, r4
   21b70:	add	r1, r1, #2208	; 0x8a0
   21b74:	bl	49e8 <realloc@plt>
   21b78:	str	r0, [r7, #276]	; 0x114
   21b7c:	ldr	r1, [r7, #268]	; 0x10c
   21b80:	add	r2, r1, #1
   21b84:	mla	r0, r1, r4, r0
   21b88:	add	r1, sp, #1104	; 0x450
   21b8c:	str	r2, [r7, #268]	; 0x10c
   21b90:	mov	r2, #2208	; 0x8a0
   21b94:	bl	4910 <memcpy@plt>
   21b98:	ldr	r0, [sp, #56]	; 0x38
   21b9c:	mov	r8, r5
   21ba0:	mov	r5, r7
   21ba4:	ldr	r7, [sp, #64]	; 0x40
   21ba8:	add	r0, r0, #1
   21bac:	str	r0, [sp, #56]	; 0x38
   21bb0:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21bb4:	ldrb	r0, [r9]
   21bb8:	cmp	r0, #28
   21bbc:	bhi	21dd8 <readstat_parse_stata_dictionary+0x594>
   21bc0:	add	r1, pc, #4
   21bc4:	ldr	r0, [r1, r0, lsl #2]
   21bc8:	add	pc, r1, r0
   21bcc:	.word	0x00000088
   21bd0:	.word	0x00000090
   21bd4:	.word	0x000000a4
   21bd8:	.word	0x000000d4
   21bdc:	.word	0x00000140
   21be0:	.word	0x0000014c
   21be4:	.word	0x00000158
   21be8:	.word	0x00000074
   21bec:	.word	0x0000007c
   21bf0:	.word	0x00000074
   21bf4:	.word	0x0000007c
   21bf8:	.word	0x00000074
   21bfc:	.word	0x0000007c
   21c00:	.word	0x00000174
   21c04:	.word	0x00000188
   21c08:	.word	0x00000190
   21c0c:	.word	0x00000198
   21c10:	.word	0x000001a4
   21c14:	.word	0x000001b0
   21c18:	.word	0x000001c4
   21c1c:	.word	0x000001cc
   21c20:	.word	0x000001d8
   21c24:	.word	0x000001e0
   21c28:	.word	0x000001e8
   21c2c:	.word	0x000001f0
   21c30:	.word	0x000001f8
   21c34:	.word	0x00000200
   21c38:	.word	0xffffff68
   21c3c:	.word	0xffffff70
   21c40:	mov	sl, r7
   21c44:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21c48:	sub	r0, r7, sl
   21c4c:	str	r0, [sp, #72]	; 0x48
   21c50:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21c54:	mov	r8, #0
   21c58:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21c5c:	ldrb	r0, [r7]
   21c60:	add	r1, r8, r8, lsl #2
   21c64:	add	r0, r0, r1, lsl #1
   21c68:	sub	r8, r0, #48	; 0x30
   21c6c:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21c70:	add	r0, sp, #1104	; 0x450
   21c74:	mov	r1, #0
   21c78:	mov	r2, #2208	; 0x8a0
   21c7c:	bl	4c70 <memset@plt>
   21c80:	mov	r0, #46	; 0x2e
   21c84:	ldr	r7, [sp, #64]	; 0x40
   21c88:	strb	r0, [sp, #3304]	; 0xce8
   21c8c:	mov	r0, #5
   21c90:	str	r0, [sp, #1120]	; 0x460
   21c94:	ldr	r0, [sp, #56]	; 0x38
   21c98:	str	r0, [sp, #1124]	; 0x464
   21c9c:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21ca0:	mov	r0, r5
   21ca4:	mov	r5, r8
   21ca8:	mov	r4, r0
   21cac:	ldr	r0, [sp, #60]	; 0x3c
   21cb0:	str	r0, [sp, #1108]	; 0x454
   21cb4:	ldr	r0, [sp, #68]	; 0x44
   21cb8:	str	r0, [sp, #1104]	; 0x450
   21cbc:	ldr	r0, [sp, #36]	; 0x24
   21cc0:	ldr	r8, [sp, #1112]	; 0x458
   21cc4:	ldr	r7, [r0, #8]
   21cc8:	cmp	r7, #0
   21ccc:	beq	21cfc <readstat_parse_stata_dictionary+0x4b8>
   21cd0:	ldr	r0, [sp, #40]	; 0x28
   21cd4:	ldr	r1, [sp, #16]
   21cd8:	ldr	r3, [sp, #20]
   21cdc:	mov	r2, #0
   21ce0:	str	r0, [sp, #3268]	; 0xcc4
   21ce4:	ldr	r0, [sp, #56]	; 0x38
   21ce8:	blx	r7
   21cec:	cmp	r0, #2
   21cf0:	beq	21b48 <readstat_parse_stata_dictionary+0x304>
   21cf4:	cmp	r0, #1
   21cf8:	beq	21f2c <readstat_parse_stata_dictionary+0x6e8>
   21cfc:	ldr	r0, [sp, #40]	; 0x28
   21d00:	add	r0, r0, #1
   21d04:	str	r0, [sp, #40]	; 0x28
   21d08:	b	21b50 <readstat_parse_stata_dictionary+0x30c>
   21d0c:	mov	r0, r5
   21d10:	mov	r1, #255	; 0xff
   21d14:	b	21d2c <readstat_parse_stata_dictionary+0x4e8>
   21d18:	ldr	r0, [sp, #24]
   21d1c:	mov	r1, #300	; 0x12c
   21d20:	b	21d2c <readstat_parse_stata_dictionary+0x4e8>
   21d24:	ldr	r0, [sp, #28]
   21d28:	mov	r1, #1024	; 0x400
   21d2c:	ldr	r3, [sp, #72]	; 0x48
   21d30:	mov	r2, sl
   21d34:	bl	4868 <readstat_copy@plt>
   21d38:	ldr	r7, [sp, #64]	; 0x40
   21d3c:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21d40:	ldr	r0, [sp, #44]	; 0x2c
   21d44:	str	r7, [sp, #32]
   21d48:	add	r0, r0, #1
   21d4c:	str	r0, [sp, #44]	; 0x2c
   21d50:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21d54:	str	r8, [r5, #256]	; 0x100
   21d58:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21d5c:	sub	r0, r8, #1
   21d60:	b	21d88 <readstat_parse_stata_dictionary+0x544>
   21d64:	sub	r0, r8, #1
   21d68:	str	r0, [sp, #60]	; 0x3c
   21d6c:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21d70:	ldr	r0, [sp, #68]	; 0x44
   21d74:	add	r0, r0, #1
   21d78:	b	21d88 <readstat_parse_stata_dictionary+0x544>
   21d7c:	ldr	r0, [sp, #68]	; 0x44
   21d80:	add	r0, r8, r0
   21d84:	sub	r0, r0, #1
   21d88:	str	r0, [sp, #68]	; 0x44
   21d8c:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21d90:	str	r8, [r5, #260]	; 0x104
   21d94:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21d98:	sub	r0, r8, #1
   21d9c:	str	r0, [r5, #264]	; 0x108
   21da0:	b	21dd8 <readstat_parse_stata_dictionary+0x594>
   21da4:	mov	r0, #1
   21da8:	b	21dd4 <readstat_parse_stata_dictionary+0x590>
   21dac:	mov	r0, #2
   21db0:	b	21dd4 <readstat_parse_stata_dictionary+0x590>
   21db4:	mov	r0, #3
   21db8:	b	21dd4 <readstat_parse_stata_dictionary+0x590>
   21dbc:	mov	r0, #4
   21dc0:	b	21dd4 <readstat_parse_stata_dictionary+0x590>
   21dc4:	mov	r0, #5
   21dc8:	b	21dd4 <readstat_parse_stata_dictionary+0x590>
   21dcc:	mov	r0, #0
   21dd0:	str	r8, [sp, #2716]	; 0xa9c
   21dd4:	str	r0, [sp, #1120]	; 0x460
   21dd8:	add	r9, r9, #1
   21ddc:	adds	r6, r6, #1
   21de0:	bne	21bb4 <readstat_parse_stata_dictionary+0x370>
   21de4:	ldr	r0, [pc, #372]	; 21f60 <readstat_parse_stata_dictionary+0x71c>
   21de8:	ldr	r1, [sp, #76]	; 0x4c
   21dec:	add	r0, pc, r0
   21df0:	ldrb	r0, [r0, r1]
   21df4:	cmp	r0, #0
   21df8:	beq	21e58 <readstat_parse_stata_dictionary+0x614>
   21dfc:	ldr	r1, [sp, #48]	; 0x30
   21e00:	ldr	r9, [pc, #352]	; 21f68 <readstat_parse_stata_dictionary+0x724>
   21e04:	add	r7, r7, #1
   21e08:	mvn	r4, #1
   21e0c:	add	r9, pc, r9
   21e10:	cmp	r7, r1
   21e14:	mov	r6, r9
   21e18:	bne	219a4 <readstat_parse_stata_dictionary+0x160>
   21e1c:	cmp	r0, #155	; 0x9b
   21e20:	bls	21ea8 <readstat_parse_stata_dictionary+0x664>
   21e24:	mov	r6, #0
   21e28:	b	21f30 <readstat_parse_stata_dictionary+0x6ec>
   21e2c:	cmp	r9, #0
   21e30:	mov	r0, #0
   21e34:	movne	r1, #1
   21e38:	strne	r1, [r9]
   21e3c:	b	21f24 <readstat_parse_stata_dictionary+0x6e0>
   21e40:	mov	r0, #0
   21e44:	mov	r6, #15
   21e48:	str	r0, [sp, #52]	; 0x34
   21e4c:	b	21ee8 <readstat_parse_stata_dictionary+0x6a4>
   21e50:	mov	r6, #3
   21e54:	b	21ee8 <readstat_parse_stata_dictionary+0x6a4>
   21e58:	ldr	r5, [sp, #32]
   21e5c:	ldr	r0, [sp, #48]	; 0x30
   21e60:	cmp	r7, r0
   21e64:	beq	21ea8 <readstat_parse_stata_dictionary+0x664>
   21e68:	ldrb	r0, [r7], #1
   21e6c:	add	r4, sp, #80	; 0x50
   21e70:	sub	r1, r7, r5
   21e74:	str	r0, [sp, #4]
   21e78:	ldr	r0, [sp, #44]	; 0x2c
   21e7c:	str	r1, [sp]
   21e80:	mov	r1, #1024	; 0x400
   21e84:	ldr	r2, [pc, #224]	; 21f6c <readstat_parse_stata_dictionary+0x728>
   21e88:	add	r3, r0, #1
   21e8c:	mov	r0, r4
   21e90:	add	r2, pc, r2
   21e94:	bl	4c4c <snprintf@plt>
   21e98:	ldr	r9, [sp, #8]
   21e9c:	ldr	r7, [sp, #36]	; 0x24
   21ea0:	ldr	r5, [sp, #12]
   21ea4:	b	21ecc <readstat_parse_stata_dictionary+0x688>
   21ea8:	ldr	r9, [sp, #8]
   21eac:	ldr	r7, [sp, #36]	; 0x24
   21eb0:	ldr	r5, [sp, #12]
   21eb4:	ldr	r1, [pc, #168]	; 21f64 <readstat_parse_stata_dictionary+0x720>
   21eb8:	add	r4, sp, #80	; 0x50
   21ebc:	mov	r2, #59	; 0x3b
   21ec0:	mov	r0, r4
   21ec4:	add	r1, pc, r1
   21ec8:	bl	4910 <memcpy@plt>
   21ecc:	ldr	r2, [r7, #24]
   21ed0:	ldr	r1, [sp, #20]
   21ed4:	cmp	r2, #0
   21ed8:	beq	21ee4 <readstat_parse_stata_dictionary+0x6a0>
   21edc:	mov	r0, r4
   21ee0:	blx	r2
   21ee4:	mov	r6, #5
   21ee8:	ldr	r0, [r7, #32]
   21eec:	ldr	r1, [r0, #4]
   21ef0:	ldr	r0, [r0, #20]
   21ef4:	blx	r1
   21ef8:	mov	r0, r5
   21efc:	bl	48bc <free@plt>
   21f00:	cmp	r6, #0
   21f04:	beq	21f20 <readstat_parse_stata_dictionary+0x6dc>
   21f08:	ldr	r0, [sp, #52]	; 0x34
   21f0c:	cmp	r9, #0
   21f10:	strne	r6, [r9]
   21f14:	bl	49a0 <readstat_schema_free@plt>
   21f18:	mov	r0, #0
   21f1c:	b	21f24 <readstat_parse_stata_dictionary+0x6e0>
   21f20:	ldr	r0, [sp, #52]	; 0x34
   21f24:	sub	sp, fp, #28
   21f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f2c:	mov	r6, #4
   21f30:	ldr	r9, [sp, #8]
   21f34:	ldr	r7, [sp, #36]	; 0x24
   21f38:	ldr	r5, [sp, #12]
   21f3c:	b	21ee8 <readstat_parse_stata_dictionary+0x6a4>
   21f40:	.word	0x00011683
   21f44:	.word	0x00010f32
   21f48:	.word	0x00010cae
   21f4c:	.word	0x00010970
   21f50:	.word	0x00010dcc
   21f54:	.word	0x000115db
   21f58:	.word	0x0001163e
   21f5c:	.word	0x000111c1
   21f60:	.word	0x00010b8b
   21f64:	.word	0x0001126c
   21f68:	.word	0x0001120f
   21f6c:	.word	0x000112e0
   21f70:	.word	0x0001153f

00021f74 <readstat_parse_txt>:
   21f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f78:	add	fp, sp, #28
   21f7c:	sub	sp, sp, #60	; 0x3c
   21f80:	sub	sp, sp, #4096	; 0x1000
   21f84:	ldr	r8, [r0, #32]
   21f88:	str	r0, [sp, #40]	; 0x28
   21f8c:	ldr	r0, [r0, #40]	; 0x28
   21f90:	mov	r5, r1
   21f94:	mov	r6, #0
   21f98:	mov	sl, #0
   21f9c:	str	r3, [sp, #24]
   21fa0:	str	r2, [sp, #36]	; 0x24
   21fa4:	cmp	r0, #0
   21fa8:	beq	21fd0 <readstat_parse_txt+0x5c>
   21fac:	ldr	r1, [sp, #40]	; 0x28
   21fb0:	mov	sl, #0
   21fb4:	ldr	r1, [r1, #36]	; 0x24
   21fb8:	cmp	r1, #0
   21fbc:	beq	21fd0 <readstat_parse_txt+0x5c>
   21fc0:	bl	4b14 <iconv_open@plt>
   21fc4:	mov	sl, r0
   21fc8:	cmn	r0, #1
   21fcc:	beq	220c0 <readstat_parse_txt+0x14c>
   21fd0:	ldr	r2, [r8]
   21fd4:	ldr	r1, [r8, #20]
   21fd8:	mov	r0, r5
   21fdc:	blx	r2
   21fe0:	cmn	r0, #1
   21fe4:	beq	220b0 <readstat_parse_txt+0x13c>
   21fe8:	ldr	r0, [sp, #36]	; 0x24
   21fec:	ldr	r4, [r0, #256]	; 0x100
   21ff0:	lsl	r0, r4, #2
   21ff4:	bl	4af0 <malloc@plt>
   21ff8:	mov	r7, r0
   21ffc:	mov	r5, #3
   22000:	mov	r9, #0
   22004:	cmp	r0, #0
   22008:	beq	220b8 <readstat_parse_txt+0x144>
   2200c:	ldr	r3, [sp, #36]	; 0x24
   22010:	cmp	r4, #1
   22014:	blt	22030 <readstat_parse_txt+0xbc>
   22018:	ldr	r0, [r3, #260]	; 0x104
   2201c:	mov	r1, r4
   22020:	mov	r2, r7
   22024:	str	r0, [r2], #4
   22028:	subs	r1, r1, #1
   2202c:	bne	22024 <readstat_parse_txt+0xb0>
   22030:	ldr	r0, [r3, #268]	; 0x10c
   22034:	str	r7, [sp, #44]	; 0x2c
   22038:	cmp	r0, #1
   2203c:	blt	22080 <readstat_parse_txt+0x10c>
   22040:	ldr	r1, [sp, #36]	; 0x24
   22044:	mov	r2, #0
   22048:	ldr	r1, [r1, #276]	; 0x114
   2204c:	add	r1, r1, #4
   22050:	ldmda	r1, {r3, r7}
   22054:	ldr	r5, [sp, #44]	; 0x2c
   22058:	ldr	r6, [r1, #4]
   2205c:	add	r2, r2, #1
   22060:	add	r1, r1, #2208	; 0x8a0
   22064:	ldr	r5, [r5, r3, lsl #2]
   22068:	add	r7, r6, r7
   2206c:	cmp	r5, r7
   22070:	ldrcc	r6, [sp, #44]	; 0x2c
   22074:	strcc	r7, [r6, r3, lsl #2]
   22078:	cmp	r2, r0
   2207c:	blt	22050 <readstat_parse_txt+0xdc>
   22080:	cmp	r4, #1
   22084:	blt	220d8 <readstat_parse_txt+0x164>
   22088:	ldr	r7, [sp, #44]	; 0x2c
   2208c:	mov	r0, #0
   22090:	mov	r1, r7
   22094:	ldr	r2, [r1], #4
   22098:	cmp	r0, r2
   2209c:	movcc	r0, r2
   220a0:	subs	r4, r4, #1
   220a4:	bne	22094 <readstat_parse_txt+0x120>
   220a8:	add	r0, r0, #2
   220ac:	b	220e0 <readstat_parse_txt+0x16c>
   220b0:	mov	r5, #1
   220b4:	b	220cc <readstat_parse_txt+0x158>
   220b8:	mov	r6, #0
   220bc:	b	22580 <readstat_parse_txt+0x60c>
   220c0:	mov	r5, #7
   220c4:	mov	sl, #0
   220c8:	mov	r6, #0
   220cc:	mov	r7, #0
   220d0:	mov	r9, #0
   220d4:	b	22580 <readstat_parse_txt+0x60c>
   220d8:	ldr	r7, [sp, #44]	; 0x2c
   220dc:	mov	r0, #2
   220e0:	mov	r5, #3
   220e4:	bl	4af0 <malloc@plt>
   220e8:	cmp	r0, #0
   220ec:	str	r0, [sp, #16]
   220f0:	beq	2257c <readstat_parse_txt+0x608>
   220f4:	ldr	r1, [sp, #36]	; 0x24
   220f8:	ldr	r0, [r1, #264]	; 0x108
   220fc:	cmp	r0, #2
   22100:	blt	22148 <readstat_parse_txt+0x1d4>
   22104:	mov	r1, #0
   22108:	sub	r5, r0, #1
   2210c:	add	r4, sp, #56	; 0x38
   22110:	strb	r1, [sp, #56]	; 0x38
   22114:	ldr	r3, [r8, #12]
   22118:	ldr	r2, [r8, #20]
   2211c:	mov	r0, r4
   22120:	mov	r1, #1
   22124:	blx	r3
   22128:	cmp	r0, #1
   2212c:	bne	2213c <readstat_parse_txt+0x1c8>
   22130:	ldrb	r0, [sp, #56]	; 0x38
   22134:	cmp	r0, #10
   22138:	bne	22114 <readstat_parse_txt+0x1a0>
   2213c:	subs	r5, r5, #1
   22140:	bne	22114 <readstat_parse_txt+0x1a0>
   22144:	ldr	r1, [sp, #36]	; 0x24
   22148:	ldrb	r0, [r1, #272]	; 0x110
   2214c:	str	sl, [sp, #12]
   22150:	cmp	r0, #0
   22154:	beq	22314 <readstat_parse_txt+0x3a0>
   22158:	mov	r0, #4096	; 0x1000
   2215c:	mov	sl, #4096	; 0x1000
   22160:	bl	4af0 <malloc@plt>
   22164:	ldr	r1, [sp, #40]	; 0x28
   22168:	ldr	r2, [sp, #36]	; 0x24
   2216c:	mov	r9, r0
   22170:	ldr	r1, [r1, #32]
   22174:	ldr	r0, [r2, #268]	; 0x10c
   22178:	str	r1, [sp, #48]	; 0x30
   2217c:	mov	r1, #0
   22180:	str	r1, [sp, #20]
   22184:	cmp	r0, #1
   22188:	blt	222f0 <readstat_parse_txt+0x37c>
   2218c:	mov	r4, #0
   22190:	sub	r0, r0, #1
   22194:	mov	r5, #10
   22198:	ldr	r6, [r2, #276]	; 0x114
   2219c:	mov	r1, #1
   221a0:	cmp	r4, r0
   221a4:	ldr	r0, [sp, #48]	; 0x30
   221a8:	ldrbne	r5, [r2, #272]	; 0x110
   221ac:	ldr	r3, [r0, #12]
   221b0:	ldr	r2, [r0, #20]
   221b4:	mov	r0, r9
   221b8:	blx	r3
   221bc:	cmp	r0, #1
   221c0:	bne	22240 <readstat_parse_txt+0x2cc>
   221c4:	str	r6, [sp, #28]
   221c8:	str	r4, [sp, #32]
   221cc:	mov	r6, #0
   221d0:	mov	r7, #1
   221d4:	mov	r4, r9
   221d8:	ldrb	r0, [r9]
   221dc:	cmp	r5, r0
   221e0:	beq	22250 <readstat_parse_txt+0x2dc>
   221e4:	add	r6, r6, #1
   221e8:	cmp	r7, sl
   221ec:	bne	22204 <readstat_parse_txt+0x290>
   221f0:	lsl	sl, sl, #1
   221f4:	mov	r0, r4
   221f8:	mov	r1, sl
   221fc:	bl	49e8 <realloc@plt>
   22200:	mov	r4, r0
   22204:	ldr	r1, [sp, #48]	; 0x30
   22208:	add	r0, r4, r7
   2220c:	add	r9, r4, r6
   22210:	ldr	r3, [r1, #12]
   22214:	ldr	r2, [r1, #20]
   22218:	mov	r1, #1
   2221c:	blx	r3
   22220:	add	r7, r7, #1
   22224:	cmp	r0, #1
   22228:	beq	221d8 <readstat_parse_txt+0x264>
   2222c:	mov	r9, r4
   22230:	ldr	r4, [sp, #32]
   22234:	ldr	r6, [sp, #28]
   22238:	sub	r7, r7, #1
   2223c:	b	22244 <readstat_parse_txt+0x2d0>
   22240:	mov	r7, #0
   22244:	cmn	r0, #1
   22248:	moveq	r7, r0
   2224c:	b	2225c <readstat_parse_txt+0x2e8>
   22250:	mov	r9, r4
   22254:	ldr	r4, [sp, #32]
   22258:	ldr	r6, [sp, #28]
   2225c:	cmn	r7, #1
   22260:	beq	224ac <readstat_parse_txt+0x538>
   22264:	cmp	r7, #0
   22268:	beq	2230c <readstat_parse_txt+0x398>
   2226c:	ldr	r0, [sp, #40]	; 0x28
   22270:	ldr	r0, [r0, #16]
   22274:	cmp	r0, #0
   22278:	beq	222dc <readstat_parse_txt+0x368>
   2227c:	mov	r0, #2208	; 0x8a0
   22280:	mla	r3, r4, r0, r6
   22284:	ldr	r0, [r3, #12]
   22288:	cmp	r0, #0
   2228c:	bne	222dc <readstat_parse_txt+0x368>
   22290:	sub	r0, r7, #1
   22294:	cmp	r7, #2
   22298:	blt	222ac <readstat_parse_txt+0x338>
   2229c:	sub	r1, r7, #2
   222a0:	ldrb	r2, [r9, r1]
   222a4:	cmp	r2, #13
   222a8:	moveq	r0, r1
   222ac:	mov	r1, #0
   222b0:	str	r0, [sp, #4]
   222b4:	ldr	r2, [sp, #20]
   222b8:	str	r9, [sp]
   222bc:	strb	r1, [r9, r0]
   222c0:	ldr	r0, [sp, #24]
   222c4:	ldr	r1, [sp, #12]
   222c8:	str	r0, [sp, #8]
   222cc:	ldr	r0, [sp, #40]	; 0x28
   222d0:	bl	225d8 <handle_value>
   222d4:	cmp	r0, #0
   222d8:	bne	224dc <readstat_parse_txt+0x568>
   222dc:	ldr	r2, [sp, #36]	; 0x24
   222e0:	add	r4, r4, #1
   222e4:	ldr	r0, [r2, #268]	; 0x10c
   222e8:	cmp	r4, r0
   222ec:	blt	22190 <readstat_parse_txt+0x21c>
   222f0:	ldr	r1, [sp, #40]	; 0x28
   222f4:	ldr	r3, [sp, #20]
   222f8:	ldr	r1, [r1, #44]	; 0x2c
   222fc:	add	r3, r3, #1
   22300:	str	r3, [sp, #20]
   22304:	cmp	r3, r1
   22308:	bne	22184 <readstat_parse_txt+0x210>
   2230c:	mov	r5, #0
   22310:	b	224b0 <readstat_parse_txt+0x53c>
   22314:	ldr	r0, [r1, #256]	; 0x100
   22318:	ldr	r1, [sp, #40]	; 0x28
   2231c:	ldr	r9, [r1, #32]
   22320:	mov	r1, #0
   22324:	str	r1, [sp, #20]
   22328:	cmp	r0, #1
   2232c:	blt	22488 <readstat_parse_txt+0x514>
   22330:	mov	sl, #0
   22334:	mov	r4, #0
   22338:	ldr	r1, [r7, r4, lsl #2]
   2233c:	ldr	r3, [r9, #12]
   22340:	ldr	r2, [r9, #20]
   22344:	ldr	r0, [sp, #16]
   22348:	blx	r3
   2234c:	cmp	r0, #0
   22350:	beq	224c4 <readstat_parse_txt+0x550>
   22354:	ldr	r1, [r7, r4, lsl #2]
   22358:	cmp	r0, r1
   2235c:	bcc	224d0 <readstat_parse_txt+0x55c>
   22360:	ldr	r3, [sp, #36]	; 0x24
   22364:	ldr	r0, [r3, #268]	; 0x10c
   22368:	cmp	sl, r0
   2236c:	bge	22430 <readstat_parse_txt+0x4bc>
   22370:	mov	r1, #2208	; 0x8a0
   22374:	mov	ip, #0
   22378:	str	r4, [sp, #48]	; 0x30
   2237c:	mul	r7, sl, r1
   22380:	ldr	r1, [r3, #276]	; 0x114
   22384:	mov	r6, r1
   22388:	ldr	r2, [r6, r7]!
   2238c:	cmp	r2, r4
   22390:	bne	22434 <readstat_parse_txt+0x4c0>
   22394:	add	r1, r1, r7
   22398:	ldr	r5, [r1, #8]
   2239c:	cmp	ip, r5, lsr #12
   223a0:	bne	2241c <readstat_parse_txt+0x4a8>
   223a4:	ldr	r2, [sp, #40]	; 0x28
   223a8:	ldr	r2, [r2, #16]
   223ac:	cmp	r2, #0
   223b0:	beq	2241c <readstat_parse_txt+0x4a8>
   223b4:	ldr	r2, [r1, #12]
   223b8:	cmp	r2, #0
   223bc:	bne	2241c <readstat_parse_txt+0x4a8>
   223c0:	ldr	r0, [r1, #4]
   223c4:	ldr	r1, [sp, #16]
   223c8:	add	r4, sp, #56	; 0x38
   223cc:	mov	r2, r5
   223d0:	add	r1, r1, r0
   223d4:	mov	r0, r4
   223d8:	bl	4910 <memcpy@plt>
   223dc:	mov	r0, #0
   223e0:	mov	r3, r6
   223e4:	strb	r0, [r4, r5]
   223e8:	stm	sp, {r4, r5}
   223ec:	ldr	r0, [sp, #24]
   223f0:	ldr	r1, [sp, #12]
   223f4:	ldr	r2, [sp, #20]
   223f8:	str	r0, [sp, #8]
   223fc:	ldr	r0, [sp, #40]	; 0x28
   22400:	bl	225d8 <handle_value>
   22404:	cmp	r0, #0
   22408:	bne	225c8 <readstat_parse_txt+0x654>
   2240c:	ldr	r3, [sp, #36]	; 0x24
   22410:	ldr	r4, [sp, #48]	; 0x30
   22414:	mov	ip, #0
   22418:	ldr	r0, [r3, #268]	; 0x10c
   2241c:	add	sl, sl, #1
   22420:	add	r7, r7, #2208	; 0x8a0
   22424:	cmp	sl, r0
   22428:	blt	22380 <readstat_parse_txt+0x40c>
   2242c:	b	22434 <readstat_parse_txt+0x4c0>
   22430:	mov	ip, #0
   22434:	ldr	r0, [r3, #260]	; 0x104
   22438:	ldr	r7, [sp, #44]	; 0x2c
   2243c:	add	r5, sp, #55	; 0x37
   22440:	cmp	r0, #0
   22444:	bne	22478 <readstat_parse_txt+0x504>
   22448:	strb	ip, [sp, #55]	; 0x37
   2244c:	ldr	r3, [r9, #12]
   22450:	ldr	r2, [r9, #20]
   22454:	mov	r0, r5
   22458:	mov	r1, #1
   2245c:	blx	r3
   22460:	cmp	r0, #1
   22464:	bne	22474 <readstat_parse_txt+0x500>
   22468:	ldrb	r0, [sp, #55]	; 0x37
   2246c:	cmp	r0, #10
   22470:	bne	2244c <readstat_parse_txt+0x4d8>
   22474:	ldr	r3, [sp, #36]	; 0x24
   22478:	ldr	r0, [r3, #256]	; 0x100
   2247c:	add	r4, r4, #1
   22480:	cmp	r4, r0
   22484:	blt	22338 <readstat_parse_txt+0x3c4>
   22488:	ldr	r1, [sp, #40]	; 0x28
   2248c:	ldr	r2, [sp, #20]
   22490:	ldr	sl, [sp, #12]
   22494:	ldr	r1, [r1, #44]	; 0x2c
   22498:	add	r2, r2, #1
   2249c:	str	r2, [sp, #20]
   224a0:	cmp	r2, r1
   224a4:	bne	22328 <readstat_parse_txt+0x3b4>
   224a8:	b	224c8 <readstat_parse_txt+0x554>
   224ac:	mov	r5, #2
   224b0:	ldr	sl, [sp, #12]
   224b4:	ldr	r7, [sp, #44]	; 0x2c
   224b8:	cmp	r9, #0
   224bc:	bne	224e8 <readstat_parse_txt+0x574>
   224c0:	b	224f0 <readstat_parse_txt+0x57c>
   224c4:	ldr	sl, [sp, #12]
   224c8:	mov	r5, #0
   224cc:	b	224f0 <readstat_parse_txt+0x57c>
   224d0:	ldr	sl, [sp, #12]
   224d4:	mov	r5, #2
   224d8:	b	224f0 <readstat_parse_txt+0x57c>
   224dc:	ldr	sl, [sp, #12]
   224e0:	ldr	r7, [sp, #44]	; 0x2c
   224e4:	mov	r5, r0
   224e8:	mov	r0, r9
   224ec:	bl	48bc <free@plt>
   224f0:	cmp	r5, #0
   224f4:	bne	22578 <readstat_parse_txt+0x604>
   224f8:	ldr	r0, [sp, #40]	; 0x28
   224fc:	ldr	r2, [r0]
   22500:	cmp	r2, #0
   22504:	beq	22574 <readstat_parse_txt+0x600>
   22508:	ldr	r0, [sp, #20]
   2250c:	vmov.i32	q8, #0	; 0x00000000
   22510:	str	r0, [sp, #56]	; 0x38
   22514:	asr	r0, r0, #31
   22518:	str	r0, [sp, #60]	; 0x3c
   2251c:	ldr	r0, [sp, #36]	; 0x24
   22520:	ldr	r1, [r0, #268]	; 0x10c
   22524:	add	r0, sp, #56	; 0x38
   22528:	add	r3, r0, #32
   2252c:	vst1.64	{d16-d17}, [r3]
   22530:	add	r3, r0, #16
   22534:	vst1.64	{d16-d17}, [r3]
   22538:	mov	r3, #0
   2253c:	str	r3, [sp, #104]	; 0x68
   22540:	ldrb	r3, [sp, #108]	; 0x6c
   22544:	and	r3, r3, #254	; 0xfe
   22548:	strb	r3, [sp, #108]	; 0x6c
   2254c:	str	r1, [sp, #64]	; 0x40
   22550:	asr	r1, r1, #31
   22554:	str	r1, [sp, #68]	; 0x44
   22558:	ldr	r1, [sp, #24]
   2255c:	blx	r2
   22560:	sub	r0, r0, #1
   22564:	clz	r0, r0
   22568:	lsr	r0, r0, #5
   2256c:	lsl	r5, r0, #2
   22570:	b	22578 <readstat_parse_txt+0x604>
   22574:	mov	r5, #0
   22578:	ldr	r9, [sp, #16]
   2257c:	mov	r6, r7
   22580:	ldr	r1, [r8, #4]
   22584:	ldr	r0, [r8, #20]
   22588:	blx	r1
   2258c:	cmp	r9, #0
   22590:	beq	2259c <readstat_parse_txt+0x628>
   22594:	mov	r0, r9
   22598:	bl	48bc <free@plt>
   2259c:	cmp	r7, #0
   225a0:	beq	225ac <readstat_parse_txt+0x638>
   225a4:	mov	r0, r6
   225a8:	bl	48bc <free@plt>
   225ac:	cmp	sl, #0
   225b0:	beq	225bc <readstat_parse_txt+0x648>
   225b4:	mov	r0, sl
   225b8:	bl	47d8 <iconv_close@plt>
   225bc:	mov	r0, r5
   225c0:	sub	sp, fp, #28
   225c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   225c8:	ldr	sl, [sp, #12]
   225cc:	ldr	r7, [sp, #44]	; 0x2c
   225d0:	mov	r5, r0
   225d4:	b	224f0 <readstat_parse_txt+0x57c>

000225d8 <handle_value>:
   225d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   225dc:	add	fp, sp, #28
   225e0:	sub	sp, sp, #12
   225e4:	ldr	r6, [fp, #12]
   225e8:	mov	r7, r0
   225ec:	mov	r0, #1
   225f0:	mov	r4, r3
   225f4:	mov	r8, r1
   225f8:	str	r2, [fp, #-40]	; 0xffffffd8
   225fc:	orr	r9, r0, r6, lsl #2
   22600:	add	r0, r9, #7
   22604:	bic	r0, r0, #7
   22608:	sub	r5, sp, r0
   2260c:	mov	sp, r5
   22610:	ldr	sl, [r4, #16]!
   22614:	mov	r0, sl
   22618:	bl	4820 <readstat_type_class@plt>
   2261c:	ldr	r3, [fp, #8]
   22620:	cmp	r0, #0
   22624:	beq	22660 <handle_value+0x88>
   22628:	mov	r6, #0
   2262c:	sub	r1, fp, #36	; 0x24
   22630:	str	r6, [fp, #-36]	; 0xffffffdc
   22634:	ldr	r0, [r4]
   22638:	cmp	r0, #4
   2263c:	beq	22698 <handle_value+0xc0>
   22640:	cmp	r0, #5
   22644:	bne	226b0 <handle_value+0xd8>
   22648:	mov	r0, r3
   2264c:	mov	r5, r3
   22650:	bl	4cd0 <strtod@plt>
   22654:	mov	r3, r5
   22658:	vmov	r5, r6, d0
   2265c:	b	226d0 <handle_value+0xf8>
   22660:	sub	sp, sp, #8
   22664:	mov	r2, r3
   22668:	mov	r0, r5
   2266c:	mov	r1, r9
   22670:	mov	r3, r6
   22674:	str	r8, [sp]
   22678:	bl	4c04 <readstat_convert@plt>
   2267c:	add	sp, sp, #8
   22680:	cmp	r0, #0
   22684:	bne	22728 <handle_value+0x150>
   22688:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2268c:	mov	r6, #0
   22690:	mov	r2, #0
   22694:	b	226ec <handle_value+0x114>
   22698:	mov	r0, r3
   2269c:	mov	r5, r3
   226a0:	bl	4ab4 <strtof@plt>
   226a4:	mov	r3, r5
   226a8:	vmov	r5, s0
   226ac:	b	226d0 <handle_value+0xf8>
   226b0:	mov	r0, r3
   226b4:	mov	r2, #10
   226b8:	mov	r5, r3
   226bc:	bl	482c <strtol@plt>
   226c0:	mov	r3, r5
   226c4:	mov	r5, r0
   226c8:	mov	r6, #0
   226cc:	mov	sl, #3
   226d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   226d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   226d8:	mov	r2, #0
   226dc:	sub	r1, r1, r3
   226e0:	clz	r1, r1
   226e4:	lsr	r1, r1, #5
   226e8:	orr	r2, r2, r1, lsl #8
   226ec:	ldr	r1, [fp, #16]
   226f0:	ldr	r7, [r7, #16]
   226f4:	sub	sp, sp, #16
   226f8:	str	r2, [sp, #4]
   226fc:	str	r1, [sp, #8]
   22700:	mov	r1, r4
   22704:	mov	r2, r5
   22708:	mov	r3, r6
   2270c:	str	sl, [sp]
   22710:	blx	r7
   22714:	add	sp, sp, #16
   22718:	sub	r0, r0, #1
   2271c:	clz	r0, r0
   22720:	lsr	r0, r0, #5
   22724:	lsl	r0, r0, #2
   22728:	sub	sp, fp, #28
   2272c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00022730 <zsav_ctx_init>:
   22730:	push	{r4, r5, r6, r7, fp, lr}
   22734:	add	fp, sp, #16
   22738:	mov	r6, r0
   2273c:	mov	r0, #1
   22740:	mov	r1, #40	; 0x28
   22744:	mov	r4, r3
   22748:	mov	r5, r2
   2274c:	bl	4778 <calloc@plt>
   22750:	mov	r7, r0
   22754:	mov	r0, r6
   22758:	bl	4af0 <malloc@plt>
   2275c:	str	r0, [r7]
   22760:	mov	r0, #10
   22764:	mov	r1, #4
   22768:	str	r0, [r7, #12]
   2276c:	mov	r0, #10
   22770:	bl	4778 <calloc@plt>
   22774:	movw	r2, #61440	; 0xf000
   22778:	str	r0, [r7, #4]
   2277c:	mov	r1, #0
   22780:	mvn	r0, #0
   22784:	movt	r2, #63	; 0x3f
   22788:	str	r1, [r7, #20]
   2278c:	str	r2, [r7, #16]
   22790:	str	r5, [r7, #24]
   22794:	str	r4, [r7, #28]
   22798:	str	r0, [r7, #32]
   2279c:	mov	r0, r7
   227a0:	pop	{r4, r5, r6, r7, fp, pc}

000227a4 <zsav_ctx_free>:
   227a4:	push	{r4, r5, r6, sl, fp, lr}
   227a8:	add	fp, sp, #16
   227ac:	mov	r4, r0
   227b0:	ldr	r0, [r0, #8]
   227b4:	cmp	r0, #1
   227b8:	blt	227f0 <zsav_ctx_free+0x4c>
   227bc:	mov	r6, #0
   227c0:	ldr	r0, [r4, #4]
   227c4:	ldr	r5, [r0, r6, lsl #2]
   227c8:	add	r0, r5, #8
   227cc:	bl	4ce8 <deflateEnd@plt>
   227d0:	ldr	r0, [r5, #64]	; 0x40
   227d4:	bl	48bc <free@plt>
   227d8:	mov	r0, r5
   227dc:	bl	48bc <free@plt>
   227e0:	ldr	r0, [r4, #8]
   227e4:	add	r6, r6, #1
   227e8:	cmp	r6, r0
   227ec:	blt	227c0 <zsav_ctx_free+0x1c>
   227f0:	ldr	r0, [r4, #4]
   227f4:	bl	48bc <free@plt>
   227f8:	ldr	r0, [r4]
   227fc:	bl	48bc <free@plt>
   22800:	mov	r0, r4
   22804:	pop	{r4, r5, r6, sl, fp, lr}
   22808:	b	48bc <free@plt>

0002280c <zsav_add_block>:
   2280c:	push	{r4, r5, r6, sl, fp, lr}
   22810:	add	fp, sp, #16
   22814:	ldrd	r2, [r0, #8]
   22818:	mov	r4, r0
   2281c:	cmp	r2, r3
   22820:	bne	2283c <zsav_add_block+0x30>
   22824:	lsl	r0, r2, #1
   22828:	lsl	r1, r2, #3
   2282c:	str	r0, [r4, #12]
   22830:	ldr	r0, [r4, #4]
   22834:	bl	49e8 <realloc@plt>
   22838:	str	r0, [r4, #4]
   2283c:	mov	r0, #1
   22840:	mov	r1, #72	; 0x48
   22844:	bl	4778 <calloc@plt>
   22848:	mov	r5, r0
   2284c:	ldmib	r4, {r0, r1}
   22850:	mov	r3, #56	; 0x38
   22854:	add	r6, r5, #8
   22858:	add	r2, r1, #1
   2285c:	str	r2, [r4, #8]
   22860:	str	r5, [r0, r1, lsl #2]
   22864:	mov	r0, r6
   22868:	ldr	r1, [r4, #32]
   2286c:	ldr	r2, [pc, #36]	; 22898 <zsav_add_block+0x8c>
   22870:	add	r2, pc, r2
   22874:	bl	4b08 <deflateInit_@plt>
   22878:	ldr	r1, [r4, #16]
   2287c:	mov	r0, r6
   22880:	bl	4880 <deflateBound@plt>
   22884:	str	r0, [r5, #68]	; 0x44
   22888:	bl	4af0 <malloc@plt>
   2288c:	str	r0, [r5, #64]	; 0x40
   22890:	mov	r0, r5
   22894:	pop	{r4, r5, r6, sl, fp, pc}
   22898:	.word	0x00010937

0002289c <zsav_current_block>:
   2289c:	ldr	r1, [r0, #8]
   228a0:	cmp	r1, #0
   228a4:	moveq	r0, #0
   228a8:	ldrne	r0, [r0, #4]
   228ac:	addne	r0, r0, r1, lsl #2
   228b0:	ldrne	r0, [r0, #-4]
   228b4:	bx	lr

000228b8 <zsav_compress_row>:
   228b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228bc:	add	fp, sp, #28
   228c0:	sub	sp, sp, #12
   228c4:	str	r0, [sp, #8]
   228c8:	ldr	r0, [r3, #8]
   228cc:	mov	r9, r3
   228d0:	mov	r6, r2
   228d4:	mov	sl, r1
   228d8:	cmp	r0, #0
   228dc:	beq	228f4 <zsav_compress_row+0x3c>
   228e0:	ldr	r1, [r9, #4]
   228e4:	add	r0, r1, r0, lsl #2
   228e8:	ldr	r5, [r0, #-4]
   228ec:	cmp	r5, #0
   228f0:	bne	22900 <zsav_compress_row+0x48>
   228f4:	mov	r0, r9
   228f8:	bl	4afc <zsav_add_block@plt>
   228fc:	mov	r5, r0
   22900:	ldr	r0, [sp, #8]
   22904:	mov	r7, r9
   22908:	str	r0, [r5, #8]
   2290c:	str	sl, [r5, #12]
   22910:	ldr	r0, [r5, #4]
   22914:	ldr	r1, [r5, #64]	; 0x40
   22918:	ldr	r2, [r5, #68]	; 0x44
   2291c:	ldr	r8, [r5]
   22920:	add	r1, r1, r0
   22924:	sub	r0, r2, r0
   22928:	str	r1, [r5, #20]
   2292c:	str	r0, [r5, #24]
   22930:	ldr	r4, [r7, #16]!
   22934:	ldr	r1, [r7, #4]
   22938:	subs	r0, r4, r8
   2293c:	sbc	r1, r1, r8, asr #31
   22940:	subs	r2, r0, sl
   22944:	sbcs	r1, r1, #0
   22948:	bge	229ec <zsav_compress_row+0x134>
   2294c:	stm	sp, {r6, sl}
   22950:	mov	r6, #0
   22954:	str	r0, [r5, #12]
   22958:	add	r0, r5, #8
   2295c:	mov	r1, #4
   22960:	bl	4a30 <deflate@plt>
   22964:	cmp	r0, #1
   22968:	bne	22a24 <zsav_compress_row+0x16c>
   2296c:	ldr	r1, [r5, #24]
   22970:	ldr	r2, [r5, #68]	; 0x44
   22974:	sub	r0, r4, r8
   22978:	add	r6, r0, r6
   2297c:	ldr	r0, [r5, #12]
   22980:	sub	r1, r2, r1
   22984:	str	r1, [r5, #4]
   22988:	ldr	r1, [r7]
   2298c:	sub	r0, r1, r0
   22990:	str	r0, [r5]
   22994:	ldr	r0, [sp, #8]
   22998:	add	r4, r0, r6
   2299c:	mov	r0, r9
   229a0:	bl	4afc <zsav_add_block@plt>
   229a4:	mov	r5, r0
   229a8:	ldr	r0, [sp, #4]
   229ac:	str	r4, [r5, #8]
   229b0:	sub	sl, r0, r6
   229b4:	str	sl, [r5, #12]
   229b8:	ldr	r0, [r5, #64]	; 0x40
   229bc:	ldr	r1, [r5, #68]	; 0x44
   229c0:	ldr	r8, [r5]
   229c4:	str	r0, [r5, #20]
   229c8:	str	r1, [r5, #24]
   229cc:	ldr	r4, [r7]
   229d0:	ldr	r1, [r7, #4]
   229d4:	subs	r0, r4, r8
   229d8:	sbc	r1, r1, r8, asr #31
   229dc:	subs	r2, r0, sl
   229e0:	sbcs	r1, r1, #0
   229e4:	blt	22954 <zsav_compress_row+0x9c>
   229e8:	ldr	r6, [sp]
   229ec:	cmp	r6, #0
   229f0:	add	r0, r5, #8
   229f4:	movwne	r6, #4
   229f8:	mov	r1, r6
   229fc:	bl	4a30 <deflate@plt>
   22a00:	ldr	r2, [r5, #24]
   22a04:	ldr	r3, [r5, #68]	; 0x44
   22a08:	ldr	r1, [r5, #12]
   22a0c:	sub	r2, r3, r2
   22a10:	sub	r1, sl, r1
   22a14:	str	r2, [r5, #4]
   22a18:	ldr	r2, [r5]
   22a1c:	add	r1, r1, r2
   22a20:	str	r1, [r5]
   22a24:	sub	sp, fp, #28
   22a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00022a2c <zsav_read_compressed_data>:
   22a2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22a30:	add	fp, sp, #28
   22a34:	sub	sp, sp, #148	; 0x94
   22a38:	mov	r4, r1
   22a3c:	mov	r5, r0
   22a40:	ldr	r7, [r0, #36]	; 0x24
   22a44:	ldr	r8, [r0, #344]	; 0x158
   22a48:	mov	r0, #0
   22a4c:	vmov.i32	q8, #0	; 0x00000000
   22a50:	mov	r1, #48	; 0x30
   22a54:	add	r2, sp, #88	; 0x58
   22a58:	add	r6, sp, #64	; 0x40
   22a5c:	str	r0, [fp, #-32]	; 0xffffffe0
   22a60:	vst1.64	{d16-d17}, [r2], r1
   22a64:	ldr	r1, [r5, #392]	; 0x188
   22a68:	ldr	r3, [r5, #396]	; 0x18c
   22a6c:	str	r3, [sp, #108]	; 0x6c
   22a70:	str	r1, [sp, #104]	; 0x68
   22a74:	vldr	d16, [r5, #416]	; 0x1a0
   22a78:	str	r0, [sp, #124]	; 0x7c
   22a7c:	str	r0, [sp, #120]	; 0x78
   22a80:	str	r0, [sp, #128]	; 0x80
   22a84:	vstr	d16, [sp, #112]	; 0x70
   22a88:	ldrb	r1, [r5, #436]	; 0x1b4
   22a8c:	str	r0, [r2]
   22a90:	and	r0, r1, #1
   22a94:	mov	r1, #24
   22a98:	str	r0, [sp, #132]	; 0x84
   22a9c:	mov	r0, r6
   22aa0:	ldr	r3, [r7, #12]
   22aa4:	ldr	r2, [r7, #20]
   22aa8:	blx	r3
   22aac:	mov	sl, #2
   22ab0:	cmp	r0, #24
   22ab4:	bcc	23000 <zsav_read_compressed_data+0x5d4>
   22ab8:	ldrb	r0, [r5, #436]	; 0x1b4
   22abc:	str	r4, [sp, #36]	; 0x24
   22ac0:	str	r8, [sp, #32]
   22ac4:	tst	r0, #1
   22ac8:	bne	22adc <zsav_read_compressed_data+0xb0>
   22acc:	ldr	r0, [sp, #72]	; 0x48
   22ad0:	ldr	r1, [sp, #76]	; 0x4c
   22ad4:	add	r4, r6, #8
   22ad8:	b	22b08 <zsav_read_compressed_data+0xdc>
   22adc:	ldr	r0, [sp, #64]	; 0x40
   22ae0:	ldr	r1, [sp, #68]	; 0x44
   22ae4:	bl	479c <byteswap8@plt>
   22ae8:	ldrb	r2, [r5, #436]	; 0x1b4
   22aec:	str	r1, [sp, #68]	; 0x44
   22af0:	str	r0, [sp, #64]	; 0x40
   22af4:	add	r4, r6, #8
   22af8:	ldr	r0, [sp, #72]	; 0x48
   22afc:	ldr	r1, [sp, #76]	; 0x4c
   22b00:	tst	r2, #1
   22b04:	bne	22bc8 <zsav_read_compressed_data+0x19c>
   22b08:	strd	r0, [r4]
   22b0c:	add	r6, r6, #16
   22b10:	ldr	r0, [sp, #80]	; 0x50
   22b14:	ldr	r1, [sp, #84]	; 0x54
   22b18:	strd	r0, [r6]
   22b1c:	mov	r0, #0
   22b20:	mov	r1, #1
   22b24:	ldr	r3, [r7, #8]
   22b28:	ldr	r2, [r7, #20]
   22b2c:	ldr	r9, [sp, #64]	; 0x40
   22b30:	ldr	r8, [sp, #68]	; 0x44
   22b34:	blx	r3
   22b38:	sub	r0, r0, #24
   22b3c:	eor	r0, r9, r0
   22b40:	orrs	r0, r0, r8
   22b44:	bne	22bc0 <zsav_read_compressed_data+0x194>
   22b48:	ldr	r0, [r4]
   22b4c:	ldr	r3, [r7, #8]
   22b50:	ldr	r2, [r7, #20]
   22b54:	ldrd	r8, [r6]
   22b58:	mov	r1, #0
   22b5c:	blx	r3
   22b60:	mov	r6, r0
   22b64:	subs	r0, r8, #24
   22b68:	mov	r2, #24
   22b6c:	mov	r3, #0
   22b70:	sbc	r1, r9, #0
   22b74:	bl	2379c <__aeabi_uldivmod>
   22b78:	cmn	r6, #1
   22b7c:	beq	22bf0 <zsav_read_compressed_data+0x1c4>
   22b80:	ldr	r3, [r7, #12]
   22b84:	ldr	r2, [r7, #20]
   22b88:	add	r6, sp, #40	; 0x28
   22b8c:	mov	r9, r0
   22b90:	mov	r1, #24
   22b94:	mov	r0, r6
   22b98:	blx	r3
   22b9c:	cmp	r0, #24
   22ba0:	bcc	23000 <zsav_read_compressed_data+0x5d4>
   22ba4:	ldrb	r0, [r5, #436]	; 0x1b4
   22ba8:	tst	r0, #1
   22bac:	bne	22bf8 <zsav_read_compressed_data+0x1cc>
   22bb0:	ldr	r0, [sp, #48]	; 0x30
   22bb4:	ldr	r1, [sp, #52]	; 0x34
   22bb8:	add	r4, r6, #8
   22bbc:	b	22c24 <zsav_read_compressed_data+0x1f8>
   22bc0:	mov	sl, #5
   22bc4:	b	23000 <zsav_read_compressed_data+0x5d4>
   22bc8:	bl	479c <byteswap8@plt>
   22bcc:	ldrb	r2, [r5, #436]	; 0x1b4
   22bd0:	strd	r0, [r4]
   22bd4:	add	r6, r6, #16
   22bd8:	ldr	r0, [sp, #80]	; 0x50
   22bdc:	ldr	r1, [sp, #84]	; 0x54
   22be0:	tst	r2, #1
   22be4:	beq	22b18 <zsav_read_compressed_data+0xec>
   22be8:	bl	479c <byteswap8@plt>
   22bec:	b	22b18 <zsav_read_compressed_data+0xec>
   22bf0:	mov	sl, #15
   22bf4:	b	23000 <zsav_read_compressed_data+0x5d4>
   22bf8:	ldr	r0, [sp, #40]	; 0x28
   22bfc:	ldr	r1, [sp, #44]	; 0x2c
   22c00:	bl	479c <byteswap8@plt>
   22c04:	ldrb	r2, [r5, #436]	; 0x1b4
   22c08:	str	r1, [sp, #44]	; 0x2c
   22c0c:	str	r0, [sp, #40]	; 0x28
   22c10:	add	r4, r6, #8
   22c14:	ldr	r0, [sp, #48]	; 0x30
   22c18:	ldr	r1, [sp, #52]	; 0x34
   22c1c:	tst	r2, #1
   22c20:	bne	22c78 <zsav_read_compressed_data+0x24c>
   22c24:	strd	r0, [r4]
   22c28:	ldr	r0, [sp, #56]	; 0x38
   22c2c:	str	r0, [sp, #56]	; 0x38
   22c30:	ldr	r0, [sp, #60]	; 0x3c
   22c34:	cmp	r0, r9
   22c38:	mov	sl, #5
   22c3c:	str	r0, [sp, #60]	; 0x3c
   22c40:	bne	23000 <zsav_read_compressed_data+0x5d4>
   22c44:	str	r7, [sp, #20]
   22c48:	mov	r7, #0
   22c4c:	cmp	r9, #0
   22c50:	beq	22cb0 <zsav_read_compressed_data+0x284>
   22c54:	add	r0, r9, r9, lsl #1
   22c58:	lsl	r6, r0, #3
   22c5c:	mov	r0, r6
   22c60:	bl	4bf8 <readstat_malloc@plt>
   22c64:	mov	r8, r0
   22c68:	cmp	r0, #0
   22c6c:	beq	22f60 <zsav_read_compressed_data+0x534>
   22c70:	mov	r0, r8
   22c74:	b	22cbc <zsav_read_compressed_data+0x290>
   22c78:	bl	479c <byteswap8@plt>
   22c7c:	ldrb	r2, [r5, #436]	; 0x1b4
   22c80:	strd	r0, [r4]
   22c84:	ldr	r0, [sp, #56]	; 0x38
   22c88:	tst	r2, #1
   22c8c:	beq	22c2c <zsav_read_compressed_data+0x200>
   22c90:	bl	47b4 <byteswap4@plt>
   22c94:	ldrb	r1, [r5, #436]	; 0x1b4
   22c98:	str	r0, [sp, #56]	; 0x38
   22c9c:	ldr	r0, [sp, #60]	; 0x3c
   22ca0:	tst	r1, #1
   22ca4:	beq	22c34 <zsav_read_compressed_data+0x208>
   22ca8:	bl	47b4 <byteswap4@plt>
   22cac:	b	22c34 <zsav_read_compressed_data+0x208>
   22cb0:	mov	r6, #0
   22cb4:	mov	r0, #0
   22cb8:	mov	r8, #0
   22cbc:	ldr	r1, [sp, #20]
   22cc0:	str	r0, [sp, #16]
   22cc4:	ldr	r3, [r1, #12]
   22cc8:	ldr	r2, [r1, #20]
   22ccc:	mov	r1, r6
   22cd0:	blx	r3
   22cd4:	mov	sl, #2
   22cd8:	cmp	r0, r6
   22cdc:	bcs	22ce8 <zsav_read_compressed_data+0x2bc>
   22ce0:	mov	r4, #0
   22ce4:	b	22fd0 <zsav_read_compressed_data+0x5a4>
   22ce8:	cmp	r9, #1
   22cec:	blt	22d70 <zsav_read_compressed_data+0x344>
   22cf0:	mov	r6, #0
   22cf4:	mov	r7, r8
   22cf8:	ldrb	r2, [r5, #436]	; 0x1b4
   22cfc:	ldrd	r0, [r7]
   22d00:	tst	r2, #1
   22d04:	beq	22d0c <zsav_read_compressed_data+0x2e0>
   22d08:	bl	479c <byteswap8@plt>
   22d0c:	strd	r0, [r7]
   22d10:	mov	r4, r7
   22d14:	ldrb	r2, [r5, #436]	; 0x1b4
   22d18:	ldr	r1, [r7, #12]
   22d1c:	ldr	r0, [r4, #8]!
   22d20:	tst	r2, #1
   22d24:	beq	22d2c <zsav_read_compressed_data+0x300>
   22d28:	bl	479c <byteswap8@plt>
   22d2c:	strd	r0, [r4]
   22d30:	ldrb	r1, [r5, #436]	; 0x1b4
   22d34:	ldr	r0, [r7, #16]
   22d38:	tst	r1, #1
   22d3c:	beq	22d44 <zsav_read_compressed_data+0x318>
   22d40:	bl	47b4 <byteswap4@plt>
   22d44:	str	r0, [r7, #16]
   22d48:	ldrb	r1, [r5, #436]	; 0x1b4
   22d4c:	ldr	r0, [r7, #20]
   22d50:	tst	r1, #1
   22d54:	beq	22d5c <zsav_read_compressed_data+0x330>
   22d58:	bl	47b4 <byteswap4@plt>
   22d5c:	add	r6, r6, #1
   22d60:	str	r0, [r7, #20]
   22d64:	add	r7, r7, #24
   22d68:	cmp	r6, r9
   22d6c:	blt	22cf8 <zsav_read_compressed_data+0x2cc>
   22d70:	ldr	r0, [sp, #32]
   22d74:	mov	r4, #0
   22d78:	lsl	r6, r0, #3
   22d7c:	cmp	r0, #0
   22d80:	mov	r0, #0
   22d84:	beq	22d98 <zsav_read_compressed_data+0x36c>
   22d88:	mov	r0, r6
   22d8c:	bl	4bf8 <readstat_malloc@plt>
   22d90:	cmp	r0, #0
   22d94:	beq	22f80 <zsav_read_compressed_data+0x554>
   22d98:	cmp	r9, #0
   22d9c:	str	r0, [sp, #32]
   22da0:	str	r8, [sp, #12]
   22da4:	beq	22f74 <zsav_read_compressed_data+0x548>
   22da8:	mov	r0, #0
   22dac:	str	r6, [sp, #28]
   22db0:	mov	r8, #0
   22db4:	mov	r7, #0
   22db8:	mov	r4, #0
   22dbc:	str	r9, [sp, #24]
   22dc0:	str	r0, [sp, #4]
   22dc4:	ldr	r1, [sp, #12]
   22dc8:	add	r0, r8, r8, lsl #1
   22dcc:	add	r6, r1, r0, lsl #3
   22dd0:	ldr	r1, [sp, #20]
   22dd4:	ldr	r0, [r6, #8]
   22dd8:	ldr	r3, [r1, #8]
   22ddc:	ldr	r2, [r1, #20]
   22de0:	mov	r1, #0
   22de4:	blx	r3
   22de8:	cmn	r0, #1
   22dec:	beq	22f9c <zsav_read_compressed_data+0x570>
   22df0:	mov	r0, r4
   22df4:	mov	r4, r6
   22df8:	ldr	r1, [r4, #20]!
   22dfc:	bl	4cb8 <readstat_realloc@plt>
   22e00:	mov	sl, #3
   22e04:	cmp	r0, #0
   22e08:	beq	22fa4 <zsav_read_compressed_data+0x578>
   22e0c:	ldr	r2, [sp, #20]
   22e10:	ldr	r1, [r4]
   22e14:	str	r0, [sp, #8]
   22e18:	ldr	r3, [r2, #12]
   22e1c:	ldr	r2, [r2, #20]
   22e20:	blx	r3
   22e24:	ldr	r1, [r4]
   22e28:	cmp	r0, r1
   22e2c:	bne	22fac <zsav_read_compressed_data+0x580>
   22e30:	ldr	r1, [r6, #16]!
   22e34:	mov	r0, r7
   22e38:	str	r1, [fp, #-32]	; 0xffffffe0
   22e3c:	bl	4cb8 <readstat_realloc@plt>
   22e40:	cmp	r0, #0
   22e44:	beq	22fb4 <zsav_read_compressed_data+0x588>
   22e48:	ldr	r3, [r4]
   22e4c:	ldr	r4, [sp, #8]
   22e50:	sub	r1, fp, #32
   22e54:	mov	r7, r0
   22e58:	mov	r2, r4
   22e5c:	bl	497c <uncompress@plt>
   22e60:	cmp	r0, #0
   22e64:	mov	sl, #5
   22e68:	ldreq	r1, [r6]
   22e6c:	ldreq	r0, [fp, #-32]	; 0xffffffe0
   22e70:	cmpeq	r0, r1
   22e74:	bne	22fbc <zsav_read_compressed_data+0x590>
   22e78:	ldr	r3, [sp, #4]
   22e7c:	mov	r1, #1
   22e80:	add	r8, r8, #1
   22e84:	str	r1, [sp, #136]	; 0x88
   22e88:	mov	r1, #0
   22e8c:	str	r8, [sp]
   22e90:	b	22e9c <zsav_read_compressed_data+0x470>
   22e94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22e98:	sub	r1, r4, r8
   22e9c:	sub	r0, r0, r1
   22ea0:	mov	r9, r7
   22ea4:	ldr	r6, [sp, #28]
   22ea8:	str	r0, [sp, #92]	; 0x5c
   22eac:	add	r0, r7, r1
   22eb0:	ldr	r7, [sp, #32]
   22eb4:	str	r0, [sp, #88]	; 0x58
   22eb8:	add	r0, r7, r3
   22ebc:	str	r0, [sp, #96]	; 0x60
   22ec0:	sub	r0, r6, r3
   22ec4:	str	r0, [sp, #100]	; 0x64
   22ec8:	add	r0, sp, #88	; 0x58
   22ecc:	bl	4be0 <sav_decompress_row@plt>
   22ed0:	ldr	r0, [sp, #136]	; 0x88
   22ed4:	ldr	r8, [sp, #92]	; 0x5c
   22ed8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   22edc:	cmp	r0, #2
   22ee0:	bne	22f0c <zsav_read_compressed_data+0x4e0>
   22ee4:	ldr	r3, [sp, #36]	; 0x24
   22ee8:	mov	r0, r7
   22eec:	mov	r1, r6
   22ef0:	mov	r2, r5
   22ef4:	blx	r3
   22ef8:	cmp	r0, #0
   22efc:	bne	22f8c <zsav_read_compressed_data+0x560>
   22f00:	ldr	r0, [sp, #136]	; 0x88
   22f04:	mov	r3, #0
   22f08:	b	22f14 <zsav_read_compressed_data+0x4e8>
   22f0c:	ldr	r1, [sp, #100]	; 0x64
   22f10:	sub	r3, r6, r1
   22f14:	mov	r7, r9
   22f18:	ldr	r9, [sp, #24]
   22f1c:	mov	sl, #0
   22f20:	cmp	r0, #3
   22f24:	beq	22fb8 <zsav_read_compressed_data+0x58c>
   22f28:	ldr	r1, [r5, #356]	; 0x164
   22f2c:	cmp	r1, #1
   22f30:	blt	22f40 <zsav_read_compressed_data+0x514>
   22f34:	ldr	r2, [r5, #364]	; 0x16c
   22f38:	cmp	r2, r1
   22f3c:	beq	22fb8 <zsav_read_compressed_data+0x58c>
   22f40:	cmp	r0, #0
   22f44:	bne	22e94 <zsav_read_compressed_data+0x468>
   22f48:	ldr	r8, [sp]
   22f4c:	ldr	r4, [sp, #8]
   22f50:	str	r3, [sp, #4]
   22f54:	cmp	r8, r9
   22f58:	bne	22dc4 <zsav_read_compressed_data+0x398>
   22f5c:	b	22fbc <zsav_read_compressed_data+0x590>
   22f60:	mov	r0, #0
   22f64:	mov	sl, #3
   22f68:	mov	r7, #0
   22f6c:	mov	r4, #0
   22f70:	b	22fd4 <zsav_read_compressed_data+0x5a8>
   22f74:	mov	r7, #0
   22f78:	mov	sl, #0
   22f7c:	b	22fbc <zsav_read_compressed_data+0x590>
   22f80:	mov	r7, #0
   22f84:	mov	sl, #3
   22f88:	b	22ce0 <zsav_read_compressed_data+0x2b4>
   22f8c:	ldr	r4, [sp, #8]
   22f90:	mov	sl, r0
   22f94:	mov	r7, r9
   22f98:	b	22fbc <zsav_read_compressed_data+0x590>
   22f9c:	mov	sl, #15
   22fa0:	b	22fbc <zsav_read_compressed_data+0x590>
   22fa4:	mov	r4, #0
   22fa8:	b	22fbc <zsav_read_compressed_data+0x590>
   22fac:	mov	sl, #2
   22fb0:	b	22fb8 <zsav_read_compressed_data+0x58c>
   22fb4:	mov	r7, #0
   22fb8:	ldr	r4, [sp, #8]
   22fbc:	ldr	r0, [sp, #32]
   22fc0:	cmp	r0, #0
   22fc4:	beq	22fcc <zsav_read_compressed_data+0x5a0>
   22fc8:	bl	48bc <free@plt>
   22fcc:	ldr	r8, [sp, #12]
   22fd0:	ldr	r0, [sp, #16]
   22fd4:	cmp	r8, #0
   22fd8:	beq	22fe0 <zsav_read_compressed_data+0x5b4>
   22fdc:	bl	48bc <free@plt>
   22fe0:	cmp	r4, #0
   22fe4:	beq	22ff0 <zsav_read_compressed_data+0x5c4>
   22fe8:	mov	r0, r4
   22fec:	bl	48bc <free@plt>
   22ff0:	cmp	r7, #0
   22ff4:	beq	23000 <zsav_read_compressed_data+0x5d4>
   22ff8:	mov	r0, r7
   22ffc:	bl	48bc <free@plt>
   23000:	mov	r0, sl
   23004:	sub	sp, fp, #28
   23008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002300c <zsav_write_compressed_row>:
   2300c:	push	{r4, r5, fp, lr}
   23010:	add	fp, sp, #8
   23014:	ldr	r5, [r0, #300]	; 0x12c
   23018:	mov	r4, r0
   2301c:	mov	r3, r4
   23020:	ldr	r0, [r5]
   23024:	bl	4e2c <sav_compress_row@plt>
   23028:	ldr	r2, [r4, #84]	; 0x54
   2302c:	mov	r1, r0
   23030:	ldr	r0, [r4, #80]	; 0x50
   23034:	mov	r3, r5
   23038:	add	r2, r2, #1
   2303c:	sub	r0, r2, r0
   23040:	clz	r0, r0
   23044:	lsr	r2, r0, #5
   23048:	ldr	r0, [r5]
   2304c:	bl	4e74 <zsav_compress_row@plt>
   23050:	mov	r1, #0
   23054:	cmp	r0, #1
   23058:	movwhi	r1, #13
   2305c:	mov	r0, r1
   23060:	pop	{r4, r5, fp, pc}

00023064 <zsav_end_data>:
   23064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23068:	add	fp, sp, #28
   2306c:	sub	sp, sp, #52	; 0x34
   23070:	ldr	r7, [r0, #300]	; 0x12c
   23074:	mov	r4, r0
   23078:	mov	r6, #24
   2307c:	mov	r5, r7
   23080:	ldr	r1, [r7, #28]
   23084:	ldr	r0, [r5, #24]!
   23088:	str	r1, [sp, #44]	; 0x2c
   2308c:	str	r0, [sp, #40]	; 0x28
   23090:	adds	r0, r0, #24
   23094:	adc	r1, r1, #0
   23098:	str	r0, [sp, #32]
   2309c:	str	r1, [sp, #36]	; 0x24
   230a0:	ldr	r2, [r7, #8]
   230a4:	add	r3, r2, r2, lsl #1
   230a8:	cmp	r2, #1
   230ac:	add	r3, r6, r3, lsl #3
   230b0:	str	r3, [sp, #16]
   230b4:	asr	r3, r3, #31
   230b8:	str	r3, [sp, #20]
   230bc:	blt	230e4 <zsav_end_data+0x80>
   230c0:	ldr	r3, [r7, #4]
   230c4:	ldr	r6, [r3], #4
   230c8:	ldr	r6, [r6, #4]
   230cc:	adds	r0, r0, r6
   230d0:	adc	r1, r1, r6, asr #31
   230d4:	subs	r2, r2, #1
   230d8:	bne	230c4 <zsav_end_data+0x60>
   230dc:	str	r0, [sp, #32]
   230e0:	str	r1, [sp, #36]	; 0x24
   230e4:	add	r1, sp, #40	; 0x28
   230e8:	mov	r0, r4
   230ec:	mov	r2, #8
   230f0:	bl	4e20 <readstat_write_bytes@plt>
   230f4:	cmp	r0, #0
   230f8:	bne	23124 <zsav_end_data+0xc0>
   230fc:	add	r1, sp, #32
   23100:	mov	r0, r4
   23104:	mov	r2, #8
   23108:	bl	4e20 <readstat_write_bytes@plt>
   2310c:	cmp	r0, #0
   23110:	bne	23124 <zsav_end_data+0xc0>
   23114:	add	r1, sp, #16
   23118:	mov	r0, r4
   2311c:	mov	r2, #8
   23120:	bl	4e20 <readstat_write_bytes@plt>
   23124:	cmp	r0, #0
   23128:	bne	231f4 <zsav_end_data+0x190>
   2312c:	ldr	r0, [r7, #8]
   23130:	cmp	r0, #1
   23134:	blt	2316c <zsav_end_data+0x108>
   23138:	mov	r6, #0
   2313c:	ldr	r0, [r7, #4]
   23140:	ldr	r0, [r0, r6, lsl #2]
   23144:	ldr	r2, [r0, #4]
   23148:	ldr	r1, [r0, #64]	; 0x40
   2314c:	mov	r0, r4
   23150:	bl	4e20 <readstat_write_bytes@plt>
   23154:	cmp	r0, #0
   23158:	bne	231f4 <zsav_end_data+0x190>
   2315c:	ldr	r0, [r7, #8]
   23160:	add	r6, r6, #1
   23164:	cmp	r6, r0
   23168:	blt	2313c <zsav_end_data+0xd8>
   2316c:	mvn	r1, #0
   23170:	mov	r2, #8
   23174:	str	r1, [sp, #44]	; 0x2c
   23178:	mvn	r1, #99	; 0x63
   2317c:	str	r1, [sp, #40]	; 0x28
   23180:	mov	r1, #0
   23184:	str	r1, [sp, #36]	; 0x24
   23188:	str	r1, [sp, #32]
   2318c:	ldr	r1, [r7, #16]
   23190:	str	r0, [sp, #24]
   23194:	mov	r0, r4
   23198:	str	r1, [sp, #28]
   2319c:	add	r1, sp, #40	; 0x28
   231a0:	bl	4e20 <readstat_write_bytes@plt>
   231a4:	cmp	r0, #0
   231a8:	bne	231f4 <zsav_end_data+0x190>
   231ac:	add	r1, sp, #32
   231b0:	mov	r0, r4
   231b4:	mov	r2, #8
   231b8:	bl	4e20 <readstat_write_bytes@plt>
   231bc:	cmp	r0, #0
   231c0:	bne	231f4 <zsav_end_data+0x190>
   231c4:	add	r1, sp, #28
   231c8:	mov	r0, r4
   231cc:	mov	r2, #4
   231d0:	bl	4e20 <readstat_write_bytes@plt>
   231d4:	cmp	r0, #0
   231d8:	bne	231f4 <zsav_end_data+0x190>
   231dc:	add	r1, sp, #24
   231e0:	mov	r0, r4
   231e4:	mov	r2, #4
   231e8:	bl	4e20 <readstat_write_bytes@plt>
   231ec:	cmp	r0, #0
   231f0:	beq	231fc <zsav_end_data+0x198>
   231f4:	sub	sp, fp, #28
   231f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231fc:	ldrd	r0, [r5]
   23200:	str	r0, [sp, #16]
   23204:	adds	r0, r0, #24
   23208:	str	r1, [sp, #20]
   2320c:	str	r0, [sp, #8]
   23210:	adc	r0, r1, #0
   23214:	str	r0, [sp, #12]
   23218:	ldr	r0, [r7, #8]
   2321c:	cmp	r0, #1
   23220:	blt	23300 <zsav_end_data+0x29c>
   23224:	mov	r6, #0
   23228:	add	r5, sp, #16
   2322c:	add	sl, sp, #8
   23230:	add	r9, sp, #4
   23234:	mov	r8, sp
   23238:	ldr	r0, [r7, #4]
   2323c:	mov	r2, #8
   23240:	ldr	r0, [r0, r6, lsl #2]
   23244:	ldr	r1, [r0]
   23248:	str	r1, [sp, #4]
   2324c:	mov	r1, r5
   23250:	ldr	r0, [r0, #4]
   23254:	str	r0, [sp]
   23258:	mov	r0, r4
   2325c:	bl	4e20 <readstat_write_bytes@plt>
   23260:	cmp	r0, #0
   23264:	bne	231f4 <zsav_end_data+0x190>
   23268:	mov	r0, r4
   2326c:	mov	r1, sl
   23270:	mov	r2, #8
   23274:	bl	4e20 <readstat_write_bytes@plt>
   23278:	cmp	r0, #0
   2327c:	bne	231f4 <zsav_end_data+0x190>
   23280:	mov	r0, r4
   23284:	mov	r1, r9
   23288:	mov	r2, #4
   2328c:	bl	4e20 <readstat_write_bytes@plt>
   23290:	cmp	r0, #0
   23294:	bne	231f4 <zsav_end_data+0x190>
   23298:	mov	r0, r4
   2329c:	mov	r1, r8
   232a0:	mov	r2, #4
   232a4:	bl	4e20 <readstat_write_bytes@plt>
   232a8:	cmp	r0, #0
   232ac:	bne	231f4 <zsav_end_data+0x190>
   232b0:	ldr	r0, [sp, #4]
   232b4:	ldr	r1, [sp, #16]
   232b8:	ldr	r2, [sp, #20]
   232bc:	ldr	r3, [sp, #12]
   232c0:	add	r6, r6, #1
   232c4:	adds	r1, r1, r0
   232c8:	adc	r0, r2, r0, asr #31
   232cc:	str	r1, [sp, #16]
   232d0:	ldr	r1, [sp]
   232d4:	ldr	r2, [sp, #8]
   232d8:	str	r0, [sp, #20]
   232dc:	adds	r2, r2, r1
   232e0:	adc	r0, r3, r1, asr #31
   232e4:	str	r2, [sp, #8]
   232e8:	str	r0, [sp, #12]
   232ec:	mov	r0, #0
   232f0:	ldr	r1, [r7, #8]
   232f4:	cmp	r6, r1
   232f8:	blt	23238 <zsav_end_data+0x1d4>
   232fc:	b	231f4 <zsav_end_data+0x190>
   23300:	mov	r0, #0
   23304:	b	231f4 <zsav_end_data+0x190>

00023308 <__aeabi_drsub>:
   23308:	eor	r1, r1, #-2147483648	; 0x80000000
   2330c:	b	23314 <__adddf3>

00023310 <__aeabi_dsub>:
   23310:	eor	r3, r3, #-2147483648	; 0x80000000

00023314 <__adddf3>:
   23314:	push	{r4, r5, lr}
   23318:	lsl	r4, r1, #1
   2331c:	lsl	r5, r3, #1
   23320:	teq	r4, r5
   23324:	teqeq	r0, r2
   23328:	orrsne	ip, r4, r0
   2332c:	orrsne	ip, r5, r2
   23330:	mvnsne	ip, r4, asr #21
   23334:	mvnsne	ip, r5, asr #21
   23338:	beq	23524 <__adddf3+0x210>
   2333c:	lsr	r4, r4, #21
   23340:	rsbs	r5, r4, r5, lsr #21
   23344:	rsblt	r5, r5, #0
   23348:	ble	23368 <__adddf3+0x54>
   2334c:	add	r4, r4, r5
   23350:	eor	r2, r0, r2
   23354:	eor	r3, r1, r3
   23358:	eor	r0, r2, r0
   2335c:	eor	r1, r3, r1
   23360:	eor	r2, r0, r2
   23364:	eor	r3, r1, r3
   23368:	cmp	r5, #54	; 0x36
   2336c:	pophi	{r4, r5, pc}
   23370:	tst	r1, #-2147483648	; 0x80000000
   23374:	lsl	r1, r1, #12
   23378:	mov	ip, #1048576	; 0x100000
   2337c:	orr	r1, ip, r1, lsr #12
   23380:	beq	2338c <__adddf3+0x78>
   23384:	rsbs	r0, r0, #0
   23388:	rsc	r1, r1, #0
   2338c:	tst	r3, #-2147483648	; 0x80000000
   23390:	lsl	r3, r3, #12
   23394:	orr	r3, ip, r3, lsr #12
   23398:	beq	233a4 <__adddf3+0x90>
   2339c:	rsbs	r2, r2, #0
   233a0:	rsc	r3, r3, #0
   233a4:	teq	r4, r5
   233a8:	beq	2350c <__adddf3+0x1f8>
   233ac:	sub	r4, r4, #1
   233b0:	rsbs	lr, r5, #32
   233b4:	blt	233d0 <__adddf3+0xbc>
   233b8:	lsl	ip, r2, lr
   233bc:	adds	r0, r0, r2, lsr r5
   233c0:	adc	r1, r1, #0
   233c4:	adds	r0, r0, r3, lsl lr
   233c8:	adcs	r1, r1, r3, asr r5
   233cc:	b	233ec <__adddf3+0xd8>
   233d0:	sub	r5, r5, #32
   233d4:	add	lr, lr, #32
   233d8:	cmp	r2, #1
   233dc:	lsl	ip, r3, lr
   233e0:	orrcs	ip, ip, #2
   233e4:	adds	r0, r0, r3, asr r5
   233e8:	adcs	r1, r1, r3, asr #31
   233ec:	and	r5, r1, #-2147483648	; 0x80000000
   233f0:	bpl	23400 <__adddf3+0xec>
   233f4:	rsbs	ip, ip, #0
   233f8:	rscs	r0, r0, #0
   233fc:	rsc	r1, r1, #0
   23400:	cmp	r1, #1048576	; 0x100000
   23404:	bcc	23444 <__adddf3+0x130>
   23408:	cmp	r1, #2097152	; 0x200000
   2340c:	bcc	2342c <__adddf3+0x118>
   23410:	lsrs	r1, r1, #1
   23414:	rrxs	r0, r0
   23418:	rrx	ip, ip
   2341c:	add	r4, r4, #1
   23420:	lsl	r2, r4, #21
   23424:	cmn	r2, #4194304	; 0x400000
   23428:	bcs	23584 <__adddf3+0x270>
   2342c:	cmp	ip, #-2147483648	; 0x80000000
   23430:	lsrseq	ip, r0, #1
   23434:	adcs	r0, r0, #0
   23438:	adc	r1, r1, r4, lsl #20
   2343c:	orr	r1, r1, r5
   23440:	pop	{r4, r5, pc}
   23444:	lsls	ip, ip, #1
   23448:	adcs	r0, r0, r0
   2344c:	adc	r1, r1, r1
   23450:	tst	r1, #1048576	; 0x100000
   23454:	sub	r4, r4, #1
   23458:	bne	2342c <__adddf3+0x118>
   2345c:	teq	r1, #0
   23460:	moveq	r1, r0
   23464:	moveq	r0, #0
   23468:	clz	r3, r1
   2346c:	addeq	r3, r3, #32
   23470:	sub	r3, r3, #11
   23474:	subs	r2, r3, #32
   23478:	bge	2349c <__adddf3+0x188>
   2347c:	adds	r2, r2, #12
   23480:	ble	23498 <__adddf3+0x184>
   23484:	add	ip, r2, #20
   23488:	rsb	r2, r2, #12
   2348c:	lsl	r0, r1, ip
   23490:	lsr	r1, r1, r2
   23494:	b	234ac <__adddf3+0x198>
   23498:	add	r2, r2, #20
   2349c:	rsble	ip, r2, #32
   234a0:	lsl	r1, r1, r2
   234a4:	orrle	r1, r1, r0, lsr ip
   234a8:	lslle	r0, r0, r2
   234ac:	subs	r4, r4, r3
   234b0:	addge	r1, r1, r4, lsl #20
   234b4:	orrge	r1, r1, r5
   234b8:	popge	{r4, r5, pc}
   234bc:	mvn	r4, r4
   234c0:	subs	r4, r4, #31
   234c4:	bge	23500 <__adddf3+0x1ec>
   234c8:	adds	r4, r4, #12
   234cc:	bgt	234e8 <__adddf3+0x1d4>
   234d0:	add	r4, r4, #20
   234d4:	rsb	r2, r4, #32
   234d8:	lsr	r0, r0, r4
   234dc:	orr	r0, r0, r1, lsl r2
   234e0:	orr	r1, r5, r1, lsr r4
   234e4:	pop	{r4, r5, pc}
   234e8:	rsb	r4, r4, #12
   234ec:	rsb	r2, r4, #32
   234f0:	lsr	r0, r0, r2
   234f4:	orr	r0, r0, r1, lsl r4
   234f8:	mov	r1, r5
   234fc:	pop	{r4, r5, pc}
   23500:	lsr	r0, r1, r4
   23504:	mov	r1, r5
   23508:	pop	{r4, r5, pc}
   2350c:	teq	r4, #0
   23510:	eor	r3, r3, #1048576	; 0x100000
   23514:	eoreq	r1, r1, #1048576	; 0x100000
   23518:	addeq	r4, r4, #1
   2351c:	subne	r5, r5, #1
   23520:	b	233ac <__adddf3+0x98>
   23524:	mvns	ip, r4, asr #21
   23528:	mvnsne	ip, r5, asr #21
   2352c:	beq	23594 <__adddf3+0x280>
   23530:	teq	r4, r5
   23534:	teqeq	r0, r2
   23538:	beq	2354c <__adddf3+0x238>
   2353c:	orrs	ip, r4, r0
   23540:	moveq	r1, r3
   23544:	moveq	r0, r2
   23548:	pop	{r4, r5, pc}
   2354c:	teq	r1, r3
   23550:	movne	r1, #0
   23554:	movne	r0, #0
   23558:	popne	{r4, r5, pc}
   2355c:	lsrs	ip, r4, #21
   23560:	bne	23574 <__adddf3+0x260>
   23564:	lsls	r0, r0, #1
   23568:	adcs	r1, r1, r1
   2356c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   23570:	pop	{r4, r5, pc}
   23574:	adds	r4, r4, #4194304	; 0x400000
   23578:	addcc	r1, r1, #1048576	; 0x100000
   2357c:	popcc	{r4, r5, pc}
   23580:	and	r5, r1, #-2147483648	; 0x80000000
   23584:	orr	r1, r5, #2130706432	; 0x7f000000
   23588:	orr	r1, r1, #15728640	; 0xf00000
   2358c:	mov	r0, #0
   23590:	pop	{r4, r5, pc}
   23594:	mvns	ip, r4, asr #21
   23598:	movne	r1, r3
   2359c:	movne	r0, r2
   235a0:	mvnseq	ip, r5, asr #21
   235a4:	movne	r3, r1
   235a8:	movne	r2, r0
   235ac:	orrs	r4, r0, r1, lsl #12
   235b0:	orrseq	r5, r2, r3, lsl #12
   235b4:	teqeq	r1, r3
   235b8:	orrne	r1, r1, #524288	; 0x80000
   235bc:	pop	{r4, r5, pc}

000235c0 <__aeabi_ui2d>:
   235c0:	teq	r0, #0
   235c4:	moveq	r1, #0
   235c8:	bxeq	lr
   235cc:	push	{r4, r5, lr}
   235d0:	mov	r4, #1024	; 0x400
   235d4:	add	r4, r4, #50	; 0x32
   235d8:	mov	r5, #0
   235dc:	mov	r1, #0
   235e0:	b	2345c <__adddf3+0x148>

000235e4 <__aeabi_i2d>:
   235e4:	teq	r0, #0
   235e8:	moveq	r1, #0
   235ec:	bxeq	lr
   235f0:	push	{r4, r5, lr}
   235f4:	mov	r4, #1024	; 0x400
   235f8:	add	r4, r4, #50	; 0x32
   235fc:	ands	r5, r0, #-2147483648	; 0x80000000
   23600:	rsbmi	r0, r0, #0
   23604:	mov	r1, #0
   23608:	b	2345c <__adddf3+0x148>

0002360c <__aeabi_f2d>:
   2360c:	lsls	r2, r0, #1
   23610:	asr	r1, r2, #3
   23614:	rrx	r1, r1
   23618:	lsl	r0, r2, #28
   2361c:	andsne	r3, r2, #-16777216	; 0xff000000
   23620:	teqne	r3, #-16777216	; 0xff000000
   23624:	eorne	r1, r1, #939524096	; 0x38000000
   23628:	bxne	lr
   2362c:	bics	r2, r2, #-16777216	; 0xff000000
   23630:	bxeq	lr
   23634:	teq	r3, #-16777216	; 0xff000000
   23638:	orreq	r1, r1, #524288	; 0x80000
   2363c:	bxeq	lr
   23640:	push	{r4, r5, lr}
   23644:	mov	r4, #896	; 0x380
   23648:	and	r5, r1, #-2147483648	; 0x80000000
   2364c:	bic	r1, r1, #-2147483648	; 0x80000000
   23650:	b	2345c <__adddf3+0x148>

00023654 <__aeabi_ul2d>:
   23654:	orrs	r2, r0, r1
   23658:	bxeq	lr
   2365c:	push	{r4, r5, lr}
   23660:	mov	r5, #0
   23664:	b	23684 <__aeabi_l2d+0x1c>

00023668 <__aeabi_l2d>:
   23668:	orrs	r2, r0, r1
   2366c:	bxeq	lr
   23670:	push	{r4, r5, lr}
   23674:	ands	r5, r1, #-2147483648	; 0x80000000
   23678:	bpl	23684 <__aeabi_l2d+0x1c>
   2367c:	rsbs	r0, r0, #0
   23680:	rsc	r1, r1, #0
   23684:	mov	r4, #1024	; 0x400
   23688:	add	r4, r4, #50	; 0x32
   2368c:	lsrs	ip, r1, #22
   23690:	beq	23400 <__adddf3+0xec>
   23694:	mov	r2, #3
   23698:	lsrs	ip, ip, #3
   2369c:	addne	r2, r2, #3
   236a0:	lsrs	ip, ip, #3
   236a4:	addne	r2, r2, #3
   236a8:	add	r2, r2, ip, lsr #3
   236ac:	rsb	r3, r2, #32
   236b0:	lsl	ip, r0, r3
   236b4:	lsr	r0, r0, r2
   236b8:	orr	r0, r0, r1, lsl r3
   236bc:	lsr	r1, r1, r2
   236c0:	add	r4, r4, r2
   236c4:	b	23400 <__adddf3+0xec>

000236c8 <__aeabi_ldivmod>:
   236c8:	cmp	r3, #0
   236cc:	cmpeq	r2, #0
   236d0:	bne	236f4 <__aeabi_ldivmod+0x2c>
   236d4:	cmp	r1, #0
   236d8:	movlt	r1, #-2147483648	; 0x80000000
   236dc:	movlt	r0, #0
   236e0:	blt	236f0 <__aeabi_ldivmod+0x28>
   236e4:	cmpeq	r0, #0
   236e8:	mvnne	r1, #-2147483648	; 0x80000000
   236ec:	mvnne	r0, #0
   236f0:	b	237d8 <__aeabi_idiv0>
   236f4:	sub	sp, sp, #8
   236f8:	push	{sp, lr}
   236fc:	cmp	r1, #0
   23700:	blt	23720 <__aeabi_ldivmod+0x58>
   23704:	cmp	r3, #0
   23708:	blt	23754 <__aeabi_ldivmod+0x8c>
   2370c:	bl	23858 <__udivmoddi4>
   23710:	ldr	lr, [sp, #4]
   23714:	add	sp, sp, #8
   23718:	pop	{r2, r3}
   2371c:	bx	lr
   23720:	rsbs	r0, r0, #0
   23724:	sbc	r1, r1, r1, lsl #1
   23728:	cmp	r3, #0
   2372c:	blt	23778 <__aeabi_ldivmod+0xb0>
   23730:	bl	23858 <__udivmoddi4>
   23734:	ldr	lr, [sp, #4]
   23738:	add	sp, sp, #8
   2373c:	pop	{r2, r3}
   23740:	rsbs	r0, r0, #0
   23744:	sbc	r1, r1, r1, lsl #1
   23748:	rsbs	r2, r2, #0
   2374c:	sbc	r3, r3, r3, lsl #1
   23750:	bx	lr
   23754:	rsbs	r2, r2, #0
   23758:	sbc	r3, r3, r3, lsl #1
   2375c:	bl	23858 <__udivmoddi4>
   23760:	ldr	lr, [sp, #4]
   23764:	add	sp, sp, #8
   23768:	pop	{r2, r3}
   2376c:	rsbs	r0, r0, #0
   23770:	sbc	r1, r1, r1, lsl #1
   23774:	bx	lr
   23778:	rsbs	r2, r2, #0
   2377c:	sbc	r3, r3, r3, lsl #1
   23780:	bl	23858 <__udivmoddi4>
   23784:	ldr	lr, [sp, #4]
   23788:	add	sp, sp, #8
   2378c:	pop	{r2, r3}
   23790:	rsbs	r2, r2, #0
   23794:	sbc	r3, r3, r3, lsl #1
   23798:	bx	lr

0002379c <__aeabi_uldivmod>:
   2379c:	cmp	r3, #0
   237a0:	cmpeq	r2, #0
   237a4:	bne	237bc <__aeabi_uldivmod+0x20>
   237a8:	cmp	r1, #0
   237ac:	cmpeq	r0, #0
   237b0:	mvnne	r1, #0
   237b4:	mvnne	r0, #0
   237b8:	b	237d8 <__aeabi_idiv0>
   237bc:	sub	sp, sp, #8
   237c0:	push	{sp, lr}
   237c4:	bl	23858 <__udivmoddi4>
   237c8:	ldr	lr, [sp, #4]
   237cc:	add	sp, sp, #8
   237d0:	pop	{r2, r3}
   237d4:	bx	lr

000237d8 <__aeabi_idiv0>:
   237d8:	push	{r1, lr}
   237dc:	mov	r0, #8
   237e0:	bl	47a8 <raise@plt>
   237e4:	pop	{r1, pc}

000237e8 <__aeabi_d2lz>:
   237e8:	vmov	d7, r0, r1
   237ec:	vcmpe.f64	d7, #0.0
   237f0:	vmrs	APSR_nzcv, fpscr
   237f4:	bmi	237fc <__aeabi_d2lz+0x14>
   237f8:	b	23818 <__aeabi_d2ulz>
   237fc:	push	{r4, lr}
   23800:	eor	r1, r1, #-2147483648	; 0x80000000
   23804:	bl	23818 <__aeabi_d2ulz>
   23808:	rsbs	r0, r0, #0
   2380c:	rsc	r1, r1, #0
   23810:	pop	{r4, pc}
   23814:	andeq	r0, r0, r0

00023818 <__aeabi_d2ulz>:
   23818:	vmov	d6, r0, r1
   2381c:	vldr	d7, [pc, #36]	; 23848 <__aeabi_d2ulz+0x30>
   23820:	vldr	d5, [pc, #40]	; 23850 <__aeabi_d2ulz+0x38>
   23824:	vmul.f64	d7, d6, d7
   23828:	vcvt.u32.f64	s14, d7
   2382c:	vcvt.f64.u32	d4, s14
   23830:	vmov	r1, s14
   23834:	vmls.f64	d6, d4, d5
   23838:	vcvt.u32.f64	s15, d6
   2383c:	vmov	r0, s15
   23840:	bx	lr
   23844:	nop			; (mov r0, r0)
   23848:	.word	0x00000000
   2384c:	.word	0x3df00000
   23850:	.word	0x00000000
   23854:	.word	0x41f00000

00023858 <__udivmoddi4>:
   23858:	cmp	r1, r3
   2385c:	cmpeq	r0, r2
   23860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23864:	mov	r4, r0
   23868:	movcc	r0, #0
   2386c:	mov	r5, r1
   23870:	ldr	lr, [sp, #36]	; 0x24
   23874:	movcc	r1, r0
   23878:	bcc	23974 <__udivmoddi4+0x11c>
   2387c:	cmp	r3, #0
   23880:	clzeq	ip, r2
   23884:	clzne	ip, r3
   23888:	addeq	ip, ip, #32
   2388c:	cmp	r5, #0
   23890:	clzeq	r1, r4
   23894:	addeq	r1, r1, #32
   23898:	clzne	r1, r5
   2389c:	sub	ip, ip, r1
   238a0:	sub	sl, ip, #32
   238a4:	lsl	r9, r3, ip
   238a8:	rsb	fp, ip, #32
   238ac:	orr	r9, r9, r2, lsl sl
   238b0:	orr	r9, r9, r2, lsr fp
   238b4:	lsl	r8, r2, ip
   238b8:	cmp	r5, r9
   238bc:	cmpeq	r4, r8
   238c0:	movcc	r0, #0
   238c4:	movcc	r1, r0
   238c8:	bcc	238e4 <__udivmoddi4+0x8c>
   238cc:	mov	r0, #1
   238d0:	subs	r4, r4, r8
   238d4:	lsl	r1, r0, sl
   238d8:	orr	r1, r1, r0, lsr fp
   238dc:	lsl	r0, r0, ip
   238e0:	sbc	r5, r5, r9
   238e4:	cmp	ip, #0
   238e8:	beq	23974 <__udivmoddi4+0x11c>
   238ec:	lsr	r6, r8, #1
   238f0:	orr	r6, r6, r9, lsl #31
   238f4:	lsr	r7, r9, #1
   238f8:	mov	r2, ip
   238fc:	b	23920 <__udivmoddi4+0xc8>
   23900:	subs	r3, r4, r6
   23904:	sbc	r8, r5, r7
   23908:	adds	r3, r3, r3
   2390c:	adc	r8, r8, r8
   23910:	adds	r4, r3, #1
   23914:	adc	r5, r8, #0
   23918:	subs	r2, r2, #1
   2391c:	beq	2393c <__udivmoddi4+0xe4>
   23920:	cmp	r5, r7
   23924:	cmpeq	r4, r6
   23928:	bcs	23900 <__udivmoddi4+0xa8>
   2392c:	adds	r4, r4, r4
   23930:	adc	r5, r5, r5
   23934:	subs	r2, r2, #1
   23938:	bne	23920 <__udivmoddi4+0xc8>
   2393c:	lsr	r3, r4, ip
   23940:	orr	r3, r3, r5, lsl fp
   23944:	lsr	r2, r5, ip
   23948:	orr	r3, r3, r5, lsr sl
   2394c:	adds	r0, r0, r4
   23950:	mov	r4, r3
   23954:	lsl	r3, r2, ip
   23958:	orr	r3, r3, r4, lsl sl
   2395c:	lsl	ip, r4, ip
   23960:	orr	r3, r3, r4, lsr fp
   23964:	adc	r1, r1, r5
   23968:	subs	r0, r0, ip
   2396c:	mov	r5, r2
   23970:	sbc	r1, r1, r3
   23974:	cmp	lr, #0
   23978:	strdne	r4, [lr]
   2397c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00023980 <_fini>:
   23980:	push	{r3, lr}
   23984:	pop	{r3, pc}
