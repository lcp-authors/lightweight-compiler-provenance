
../repos/inetutils/ping/ping6:     file format elf32-littlearm


Disassembly of section .init:

00011090 <.init>:
   11090:	push	{r3, lr}
   11094:	bl	11834 <__assert_fail@plt+0x430>
   11098:	pop	{r3, pc}

Disassembly of section .plt:

0001109c <calloc@plt-0x14>:
   1109c:	push	{lr}		; (str lr, [sp, #-4]!)
   110a0:	ldr	lr, [pc, #4]	; 110ac <calloc@plt-0x4>
   110a4:	add	lr, pc, lr
   110a8:	ldr	pc, [lr, #8]!
   110ac:	andeq	sl, r1, r4, asr pc

000110b0 <calloc@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #106496	; 0x1a000
   110b8:	ldr	pc, [ip, #3924]!	; 0xf54

000110bc <fputs_unlocked@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #106496	; 0x1a000
   110c4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c8 <setbuf@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #106496	; 0x1a000
   110d0:	ldr	pc, [ip, #3908]!	; 0xf44

000110d4 <strcmp@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #106496	; 0x1a000
   110dc:	ldr	pc, [ip, #3900]!	; 0xf3c

000110e0 <strtol@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #106496	; 0x1a000
   110e8:	ldr	pc, [ip, #3892]!	; 0xf34

000110ec <setsockopt@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #106496	; 0x1a000
   110f4:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f8 <printf@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #106496	; 0x1a000
   11100:	ldr	pc, [ip, #3876]!	; 0xf24

00011104 <fflush@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #106496	; 0x1a000
   1110c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011110 <getuid@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #106496	; 0x1a000
   11118:	ldr	pc, [ip, #3860]!	; 0xf14

0001111c <memmove@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #106496	; 0x1a000
   11124:	ldr	pc, [ip, #3852]!	; 0xf0c

00011128 <strchrnul@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #106496	; 0x1a000
   11130:	ldr	pc, [ip, #3844]!	; 0xf04

00011134 <free@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #106496	; 0x1a000
   1113c:	ldr	pc, [ip, #3836]!	; 0xefc

00011140 <gai_strerror@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #106496	; 0x1a000
   11148:	ldr	pc, [ip, #3828]!	; 0xef4

0001114c <strndup@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #106496	; 0x1a000
   11154:	ldr	pc, [ip, #3820]!	; 0xeec

00011158 <memcpy@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #106496	; 0x1a000
   11160:	ldr	pc, [ip, #3812]!	; 0xee4

00011164 <signal@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #106496	; 0x1a000
   1116c:	ldr	pc, [ip, #3804]!	; 0xedc

00011170 <fwrite_unlocked@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #106496	; 0x1a000
   11178:	ldr	pc, [ip, #3796]!	; 0xed4

0001117c <inet_ntoa@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #106496	; 0x1a000
   11184:	ldr	pc, [ip, #3788]!	; 0xecc

00011188 <select@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #106496	; 0x1a000
   11190:	ldr	pc, [ip, #3780]!	; 0xec4

00011194 <sleep@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #106496	; 0x1a000
   1119c:	ldr	pc, [ip, #3772]!	; 0xebc

000111a0 <gethostbyaddr@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #106496	; 0x1a000
   111a8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111ac <strdup@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #106496	; 0x1a000
   111b4:	ldr	pc, [ip, #3756]!	; 0xeac

000111b8 <realloc@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #106496	; 0x1a000
   111c0:	ldr	pc, [ip, #3748]!	; 0xea4

000111c4 <strcasecmp@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #106496	; 0x1a000
   111cc:	ldr	pc, [ip, #3740]!	; 0xe9c

000111d0 <funlockfile@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #106496	; 0x1a000
   111d8:	ldr	pc, [ip, #3732]!	; 0xe94

000111dc <fwrite@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #106496	; 0x1a000
   111e4:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e8 <gettimeofday@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #106496	; 0x1a000
   111f0:	ldr	pc, [ip, #3716]!	; 0xe84

000111f4 <error@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #106496	; 0x1a000
   111fc:	ldr	pc, [ip, #3708]!	; 0xe7c

00011200 <getenv@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #106496	; 0x1a000
   11208:	ldr	pc, [ip, #3700]!	; 0xe74

0001120c <puts@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #106496	; 0x1a000
   11214:	ldr	pc, [ip, #3692]!	; 0xe6c

00011218 <malloc@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #106496	; 0x1a000
   11220:	ldr	pc, [ip, #3684]!	; 0xe64

00011224 <__libc_start_main@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #106496	; 0x1a000
   1122c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011230 <strerror@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #106496	; 0x1a000
   11238:	ldr	pc, [ip, #3668]!	; 0xe54

0001123c <__ctype_tolower_loc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #106496	; 0x1a000
   11244:	ldr	pc, [ip, #3660]!	; 0xe4c

00011248 <__gmon_start__@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #106496	; 0x1a000
   11250:	ldr	pc, [ip, #3652]!	; 0xe44

00011254 <mempcpy@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #106496	; 0x1a000
   1125c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011260 <__ctype_b_loc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #106496	; 0x1a000
   11268:	ldr	pc, [ip, #3636]!	; 0xe34

0001126c <getpid@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #106496	; 0x1a000
   11274:	ldr	pc, [ip, #3628]!	; 0xe2c

00011278 <exit@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #106496	; 0x1a000
   11280:	ldr	pc, [ip, #3620]!	; 0xe24

00011284 <strtoul@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #106496	; 0x1a000
   1128c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011290 <strlen@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #106496	; 0x1a000
   11298:	ldr	pc, [ip, #3604]!	; 0xe14

0001129c <strchr@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #106496	; 0x1a000
   112a4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a8 <fprintf@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #106496	; 0x1a000
   112b0:	ldr	pc, [ip, #3588]!	; 0xe04

000112b4 <__errno_location@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #106496	; 0x1a000
   112bc:	ldr	pc, [ip, #3580]!	; 0xdfc

000112c0 <snprintf@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #106496	; 0x1a000
   112c8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112cc <strerror_r@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #106496	; 0x1a000
   112d4:	ldr	pc, [ip, #3564]!	; 0xdec

000112d8 <setvbuf@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #106496	; 0x1a000
   112e0:	ldr	pc, [ip, #3556]!	; 0xde4

000112e4 <memset@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #106496	; 0x1a000
   112ec:	ldr	pc, [ip, #3548]!	; 0xddc

000112f0 <putchar@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #106496	; 0x1a000
   112f8:	ldr	pc, [ip, #3540]!	; 0xdd4

000112fc <memchr@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #106496	; 0x1a000
   11304:	ldr	pc, [ip, #3532]!	; 0xdcc

00011308 <sendto@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #106496	; 0x1a000
   11310:	ldr	pc, [ip, #3524]!	; 0xdc4

00011314 <__overflow@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #106496	; 0x1a000
   1131c:	ldr	pc, [ip, #3516]!	; 0xdbc

00011320 <setlocale@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #106496	; 0x1a000
   11328:	ldr	pc, [ip, #3508]!	; 0xdb4

0001132c <getnameinfo@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #106496	; 0x1a000
   11334:	ldr	pc, [ip, #3500]!	; 0xdac

00011338 <strrchr@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #106496	; 0x1a000
   11340:	ldr	pc, [ip, #3492]!	; 0xda4

00011344 <vfprintf@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #106496	; 0x1a000
   1134c:	ldr	pc, [ip, #3484]!	; 0xd9c

00011350 <fputc@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #106496	; 0x1a000
   11358:	ldr	pc, [ip, #3476]!	; 0xd94

0001135c <setuid@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #106496	; 0x1a000
   11364:	ldr	pc, [ip, #3468]!	; 0xd8c

00011368 <sscanf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #106496	; 0x1a000
   11370:	ldr	pc, [ip, #3460]!	; 0xd84

00011374 <putc@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #106496	; 0x1a000
   1137c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011380 <flockfile@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #106496	; 0x1a000
   11388:	ldr	pc, [ip, #3444]!	; 0xd74

0001138c <vsnprintf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #106496	; 0x1a000
   11394:	ldr	pc, [ip, #3436]!	; 0xd6c

00011398 <recvmsg@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #106496	; 0x1a000
   113a0:	ldr	pc, [ip, #3428]!	; 0xd64

000113a4 <qsort@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #106496	; 0x1a000
   113ac:	ldr	pc, [ip, #3420]!	; 0xd5c

000113b0 <freeaddrinfo@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #106496	; 0x1a000
   113b8:	ldr	pc, [ip, #3412]!	; 0xd54

000113bc <getaddrinfo@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #106496	; 0x1a000
   113c4:	ldr	pc, [ip, #3404]!	; 0xd4c

000113c8 <inet_ntop@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #106496	; 0x1a000
   113d0:	ldr	pc, [ip, #3396]!	; 0xd44

000113d4 <socket@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #106496	; 0x1a000
   113dc:	ldr	pc, [ip, #3388]!	; 0xd3c

000113e0 <strncmp@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #106496	; 0x1a000
   113e8:	ldr	pc, [ip, #3380]!	; 0xd34

000113ec <abort@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #106496	; 0x1a000
   113f4:	ldr	pc, [ip, #3372]!	; 0xd2c

000113f8 <close@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #106496	; 0x1a000
   11400:	ldr	pc, [ip, #3364]!	; 0xd24

00011404 <__assert_fail@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #106496	; 0x1a000
   1140c:	ldr	pc, [ip, #3356]!	; 0xd1c

Disassembly of section .text:

00011410 <argp_failure@@Base-0x3efc>:
   11410:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11414:	movw	r5, #50148	; 0xc3e4
   11418:	movt	r5, #2
   1141c:	strd	r6, [sp, #8]
   11420:	movw	r7, #49464	; 0xc138
   11424:	movt	r7, #2
   11428:	strd	r8, [sp, #16]
   1142c:	mov	r8, r0
   11430:	mov	r4, #0
   11434:	strd	sl, [sp, #24]
   11438:	mov	sl, r1
   1143c:	mov	r9, #1
   11440:	str	lr, [sp, #32]
   11444:	sub	sp, sp, #60	; 0x3c
   11448:	ldr	r0, [r1]
   1144c:	bl	18034 <argp_parse@@Base+0x1110>
   11450:	movw	r1, #46052	; 0xb3e4
   11454:	movt	r1, #1
   11458:	mov	r0, #6
   1145c:	bl	11320 <setlocale@plt>
   11460:	bl	11110 <getuid@plt>
   11464:	cmp	r0, #0
   11468:	movw	r2, #42072	; 0xa458
   1146c:	movt	r2, #1
   11470:	moveq	r3, #1
   11474:	add	r1, r7, #128	; 0x80
   11478:	movw	r0, #42096	; 0xa470
   1147c:	movt	r0, #1
   11480:	strbeq	r3, [r5, #8]
   11484:	movw	r3, #50264	; 0xc458
   11488:	movt	r3, #2
   1148c:	str	r2, [r3]
   11490:	bl	17e2c <argp_parse@@Base+0xf08>
   11494:	add	ip, sp, #16
   11498:	mov	r3, r4
   1149c:	mov	r2, sl
   114a0:	mov	r1, r8
   114a4:	add	r0, r7, #136	; 0x88
   114a8:	str	ip, [sp]
   114ac:	str	r4, [sp, #4]
   114b0:	bl	16f24 <argp_parse@@Base>
   114b4:	bl	1126c <getpid@plt>
   114b8:	mov	r2, #58	; 0x3a
   114bc:	mov	r1, #3
   114c0:	str	r0, [sp, #12]
   114c4:	mov	r0, #10
   114c8:	str	r9, [sp, #20]
   114cc:	bl	113d4 <socket@plt>
   114d0:	subs	fp, r0, #0
   114d4:	blt	11788 <__assert_fail@plt+0x384>
   114d8:	mov	r3, #32
   114dc:	mvn	r1, #0
   114e0:	bic	lr, r1, #2
   114e4:	mov	r2, r9
   114e8:	str	r3, [sp]
   114ec:	bic	r3, r1, #30
   114f0:	str	r3, [sp, #24]
   114f4:	add	r3, sp, #24
   114f8:	str	r1, [sp, #28]
   114fc:	str	r1, [sp, #32]
   11500:	str	r1, [sp, #36]	; 0x24
   11504:	str	r1, [sp, #44]	; 0x2c
   11508:	str	r1, [sp, #48]	; 0x30
   1150c:	str	r1, [sp, #52]	; 0x34
   11510:	mov	r1, #58	; 0x3a
   11514:	str	lr, [sp, #40]	; 0x28
   11518:	bl	110ec <setsockopt@plt>
   1151c:	subs	r6, r0, #0
   11520:	bne	117d4 <__assert_fail@plt+0x3d0>
   11524:	mov	ip, #4
   11528:	add	r3, sp, #20
   1152c:	mov	r2, #51	; 0x33
   11530:	mov	r1, #41	; 0x29
   11534:	mov	r0, fp
   11538:	str	ip, [sp]
   1153c:	bl	110ec <setsockopt@plt>
   11540:	subs	r4, r0, #0
   11544:	bne	117c4 <__assert_fail@plt+0x3c0>
   11548:	mov	r0, #124	; 0x7c
   1154c:	bl	18a98 <argp_parse@@Base+0x1b74>
   11550:	subs	r6, r0, #0
   11554:	beq	117c4 <__assert_fail@plt+0x3c0>
   11558:	mov	r2, #120	; 0x78
   1155c:	mov	r1, r4
   11560:	add	r0, r6, #4
   11564:	bl	112e4 <memset@plt>
   11568:	ldrh	r3, [sp, #12]
   1156c:	mov	ip, #8
   11570:	mov	r2, #128	; 0x80
   11574:	mov	r0, #1000	; 0x3e8
   11578:	mov	r1, r4
   1157c:	str	fp, [r6]
   11580:	str	r4, [r6, #8]
   11584:	str	r0, [r6, #20]
   11588:	add	r0, r6, #12
   1158c:	str	ip, [r6, #56]	; 0x38
   11590:	str	r3, [r6, #60]	; 0x3c
   11594:	str	r2, [r6, #72]	; 0x48
   11598:	bl	111e8 <gettimeofday@plt>
   1159c:	mov	r1, #4
   115a0:	add	r3, r7, #164	; 0xa4
   115a4:	str	r6, [r5, #36]	; 0x24
   115a8:	mov	r2, #6
   115ac:	str	r1, [sp]
   115b0:	mov	r1, r9
   115b4:	ldr	r0, [r6]
   115b8:	bl	110ec <setsockopt@plt>
   115bc:	bl	11110 <getuid@plt>
   115c0:	bl	1135c <setuid@plt>
   115c4:	cmp	r0, #0
   115c8:	bne	1176c <__assert_fail@plt+0x368>
   115cc:	mov	r3, #0
   115d0:	movw	r1, #50140	; 0xc3dc
   115d4:	movt	r1, #2
   115d8:	mov	r2, #1
   115dc:	ldr	r0, [r1]
   115e0:	mov	r1, r3
   115e4:	bl	112d8 <setvbuf@plt>
   115e8:	ldr	r1, [r5, #4]
   115ec:	ldr	r3, [sp, #16]
   115f0:	cmp	r1, #0
   115f4:	sub	r8, r8, r3
   115f8:	add	sl, sl, r3, lsl #2
   115fc:	bne	11760 <__assert_fail@plt+0x35c>
   11600:	movw	r3, #50256	; 0xc450
   11604:	movt	r3, #2
   11608:	ldr	r1, [r3]
   1160c:	cmp	r1, #0
   11610:	bne	1174c <__assert_fail@plt+0x348>
   11614:	movw	r6, #50252	; 0xc44c
   11618:	movt	r6, #2
   1161c:	ldr	r3, [r6]
   11620:	tst	r3, #2
   11624:	bne	11734 <__assert_fail@plt+0x330>
   11628:	ldr	r3, [r5, #32]
   1162c:	cmp	r3, #0
   11630:	bgt	116ac <__assert_fail@plt+0x2a8>
   11634:	ldr	r3, [r6]
   11638:	tst	r3, #256	; 0x100
   1163c:	bne	116f0 <__assert_fail@plt+0x2ec>
   11640:	movw	r3, #50244	; 0xc444
   11644:	movt	r3, #2
   11648:	ldr	r1, [r7]
   1164c:	sub	r6, r8, #1
   11650:	ldr	r0, [r3]
   11654:	bl	12d24 <__assert_fail@plt+0x1920>
   11658:	cmp	r8, #0
   1165c:	beq	117e4 <__assert_fail@plt+0x3e0>
   11660:	mov	r7, #0
   11664:	ldr	r0, [sl], #4
   11668:	sub	r6, r6, #1
   1166c:	bl	12294 <__assert_fail@plt+0xe90>
   11670:	ldr	r3, [r5, #36]	; 0x24
   11674:	cmn	r6, #1
   11678:	orr	r4, r4, r0
   1167c:	str	r7, [r3, #112]	; 0x70
   11680:	str	r7, [r3, #116]	; 0x74
   11684:	str	r7, [r3, #120]	; 0x78
   11688:	bne	11664 <__assert_fail@plt+0x260>
   1168c:	mov	r0, r4
   11690:	add	sp, sp, #60	; 0x3c
   11694:	ldrd	r4, [sp]
   11698:	ldrd	r6, [sp, #8]
   1169c:	ldrd	r8, [sp, #16]
   116a0:	ldrd	sl, [sp, #24]
   116a4:	add	sp, sp, #32
   116a8:	pop	{pc}		; (ldr pc, [sp], #4)
   116ac:	ldr	r0, [r5, #36]	; 0x24
   116b0:	mov	r3, #4
   116b4:	mov	r2, #16
   116b8:	mov	r1, #41	; 0x29
   116bc:	str	r3, [sp]
   116c0:	ldr	r3, [pc, #292]	; 117ec <__assert_fail@plt+0x3e8>
   116c4:	ldr	r0, [r0]
   116c8:	bl	110ec <setsockopt@plt>
   116cc:	cmp	r0, #0
   116d0:	bge	11634 <__assert_fail@plt+0x230>
   116d4:	bl	112b4 <__errno_location@plt>
   116d8:	movw	r2, #42124	; 0xa48c
   116dc:	movt	r2, #1
   116e0:	ldr	r1, [r0]
   116e4:	mov	r0, #0
   116e8:	bl	111f4 <error@plt>
   116ec:	b	11634 <__assert_fail@plt+0x230>
   116f0:	ldr	r0, [r5, #36]	; 0x24
   116f4:	mov	r3, #4
   116f8:	mov	r2, #67	; 0x43
   116fc:	mov	r1, #41	; 0x29
   11700:	str	r3, [sp]
   11704:	ldr	r3, [pc, #228]	; 117f0 <__assert_fail@plt+0x3ec>
   11708:	ldr	r0, [r0]
   1170c:	bl	110ec <setsockopt@plt>
   11710:	cmp	r0, #0
   11714:	bge	11640 <__assert_fail@plt+0x23c>
   11718:	bl	112b4 <__errno_location@plt>
   1171c:	movw	r2, #42152	; 0xa4a8
   11720:	movt	r2, #1
   11724:	ldr	r1, [r0]
   11728:	mov	r0, #1
   1172c:	bl	111f4 <error@plt>
   11730:	b	11640 <__assert_fail@plt+0x23c>
   11734:	movw	r3, #50260	; 0xc454
   11738:	movt	r3, #2
   1173c:	ldr	r0, [r5, #36]	; 0x24
   11740:	ldr	r1, [r3]
   11744:	bl	13110 <__assert_fail@plt+0x1d0c>
   11748:	b	11628 <__assert_fail@plt+0x224>
   1174c:	mov	r3, #4
   11750:	ldr	r2, [pc, #156]	; 117f4 <__assert_fail@plt+0x3f0>
   11754:	ldr	r0, [r5, #36]	; 0x24
   11758:	bl	130e4 <__assert_fail@plt+0x1ce0>
   1175c:	b	11614 <__assert_fail@plt+0x210>
   11760:	ldr	r0, [r5, #36]	; 0x24
   11764:	bl	130dc <__assert_fail@plt+0x1cd8>
   11768:	b	11600 <__assert_fail@plt+0x1fc>
   1176c:	bl	112b4 <__errno_location@plt>
   11770:	movw	r2, #42116	; 0xa484
   11774:	movt	r2, #1
   11778:	ldr	r1, [r0]
   1177c:	mov	r0, r9
   11780:	bl	111f4 <error@plt>
   11784:	b	115cc <__assert_fail@plt+0x1c8>
   11788:	bl	112b4 <__errno_location@plt>
   1178c:	ldr	r1, [r0]
   11790:	cmp	r1, #13
   11794:	cmpne	r1, r9
   11798:	movne	r3, #0
   1179c:	moveq	r3, #1
   117a0:	strne	r3, [r5, #36]	; 0x24
   117a4:	bne	117bc <__assert_fail@plt+0x3b8>
   117a8:	mov	r0, r9
   117ac:	movw	r2, #42104	; 0xa478
   117b0:	movt	r2, #1
   117b4:	bl	111f4 <error@plt>
   117b8:	str	r4, [r5, #36]	; 0x24
   117bc:	mov	r0, #1
   117c0:	bl	11278 <exit@plt>
   117c4:	mov	r0, fp
   117c8:	bl	113f8 <close@plt>
   117cc:	str	r6, [r5, #36]	; 0x24
   117d0:	b	117bc <__assert_fail@plt+0x3b8>
   117d4:	mov	r0, fp
   117d8:	bl	113f8 <close@plt>
   117dc:	str	r4, [r5, #36]	; 0x24
   117e0:	b	117bc <__assert_fail@plt+0x3b8>
   117e4:	mov	r4, r8
   117e8:	b	1168c <__assert_fail@plt+0x288>
   117ec:	andeq	ip, r2, r4, lsl #8
   117f0:	andeq	ip, r2, r0, asr #2
   117f4:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   117f8:	mov	fp, #0
   117fc:	mov	lr, #0
   11800:	pop	{r1}		; (ldr r1, [sp], #4)
   11804:	mov	r2, sp
   11808:	push	{r2}		; (str r2, [sp, #-4]!)
   1180c:	push	{r0}		; (str r0, [sp, #-4]!)
   11810:	ldr	ip, [pc, #16]	; 11828 <__assert_fail@plt+0x424>
   11814:	push	{ip}		; (str ip, [sp, #-4]!)
   11818:	ldr	r0, [pc, #12]	; 1182c <__assert_fail@plt+0x428>
   1181c:	ldr	r3, [pc, #12]	; 11830 <__assert_fail@plt+0x42c>
   11820:	bl	11224 <__libc_start_main@plt>
   11824:	bl	113ec <abort@plt>
   11828:	andeq	sl, r1, r4
   1182c:	andeq	r1, r1, r0, lsl r4
   11830:	andeq	r9, r1, r4, lsr #31
   11834:	ldr	r3, [pc, #20]	; 11850 <__assert_fail@plt+0x44c>
   11838:	ldr	r2, [pc, #20]	; 11854 <__assert_fail@plt+0x450>
   1183c:	add	r3, pc, r3
   11840:	ldr	r2, [r3, r2]
   11844:	cmp	r2, #0
   11848:	bxeq	lr
   1184c:	b	11248 <__gmon_start__@plt>
   11850:			; <UNDEFINED> instruction: 0x0001a7bc
   11854:	andeq	r0, r0, ip, lsr #2
   11858:	ldr	r0, [pc, #24]	; 11878 <__assert_fail@plt+0x474>
   1185c:	ldr	r3, [pc, #24]	; 1187c <__assert_fail@plt+0x478>
   11860:	cmp	r3, r0
   11864:	bxeq	lr
   11868:	ldr	r3, [pc, #16]	; 11880 <__assert_fail@plt+0x47c>
   1186c:	cmp	r3, #0
   11870:	bxeq	lr
   11874:	bx	r3
   11878:	andeq	ip, r2, ip, asr #7
   1187c:	andeq	ip, r2, ip, asr #7
   11880:	andeq	r0, r0, r0
   11884:	ldr	r0, [pc, #36]	; 118b0 <__assert_fail@plt+0x4ac>
   11888:	ldr	r1, [pc, #36]	; 118b4 <__assert_fail@plt+0x4b0>
   1188c:	sub	r1, r1, r0
   11890:	asr	r1, r1, #2
   11894:	add	r1, r1, r1, lsr #31
   11898:	asrs	r1, r1, #1
   1189c:	bxeq	lr
   118a0:	ldr	r3, [pc, #16]	; 118b8 <__assert_fail@plt+0x4b4>
   118a4:	cmp	r3, #0
   118a8:	bxeq	lr
   118ac:	bx	r3
   118b0:	andeq	ip, r2, ip, asr #7
   118b4:	andeq	ip, r2, ip, asr #7
   118b8:	andeq	r0, r0, r0
   118bc:	push	{r4, lr}
   118c0:	ldr	r4, [pc, #24]	; 118e0 <__assert_fail@plt+0x4dc>
   118c4:	ldrb	r3, [r4]
   118c8:	cmp	r3, #0
   118cc:	popne	{r4, pc}
   118d0:	bl	11858 <__assert_fail@plt+0x454>
   118d4:	mov	r3, #1
   118d8:	strb	r3, [r4]
   118dc:	pop	{r4, pc}
   118e0:	andeq	ip, r2, r0, ror #7
   118e4:	b	11884 <__assert_fail@plt+0x480>
   118e8:	movw	r3, #50148	; 0xc3e4
   118ec:	movt	r3, #2
   118f0:	mov	r2, #1
   118f4:	str	r2, [r3]
   118f8:	bx	lr
   118fc:	cmp	r0, #112	; 0x70
   11900:	strd	r4, [sp, #-12]!
   11904:	mov	r4, r1
   11908:	str	lr, [sp, #8]
   1190c:	sub	sp, sp, #12
   11910:	beq	11ae4 <__assert_fail@plt+0x6e0>
   11914:	bgt	11974 <__assert_fail@plt+0x570>
   11918:	cmp	r0, #102	; 0x66
   1191c:	beq	11ba4 <__assert_fail@plt+0x7a0>
   11920:	bgt	119f0 <__assert_fail@plt+0x5ec>
   11924:	cmp	r0, #99	; 0x63
   11928:	beq	11b48 <__assert_fail@plt+0x744>
   1192c:	cmp	r0, #100	; 0x64
   11930:	beq	11b10 <__assert_fail@plt+0x70c>
   11934:	cmp	r0, #84	; 0x54
   11938:	bne	119a0 <__assert_fail@plt+0x59c>
   1193c:	movw	r3, #50252	; 0xc44c
   11940:	movt	r3, #2
   11944:	ldr	ip, [r3]
   11948:	mov	r2, #0
   1194c:	mov	r0, r1
   11950:	mov	r1, r2
   11954:	orr	ip, ip, #256	; 0x100
   11958:	str	ip, [r3]
   1195c:	bl	12c68 <__assert_fail@plt+0x1864>
   11960:	movw	r2, #49464	; 0xc138
   11964:	movt	r2, #2
   11968:	mov	r3, #0
   1196c:	str	r0, [r2, #8]
   11970:	b	119a4 <__assert_fail@plt+0x5a0>
   11974:	cmp	r0, #118	; 0x76
   11978:	beq	11a6c <__assert_fail@plt+0x668>
   1197c:	ble	119b8 <__assert_fail@plt+0x5b4>
   11980:	cmp	r0, #256	; 0x100
   11984:	beq	11a88 <__assert_fail@plt+0x684>
   11988:	mov	r1, #2
   1198c:	movt	r1, #256	; 0x100
   11990:	cmp	r0, r1
   11994:	beq	11aac <__assert_fail@plt+0x6a8>
   11998:	cmp	r0, #119	; 0x77
   1199c:	beq	11ac0 <__assert_fail@plt+0x6bc>
   119a0:	mov	r3, #7
   119a4:	mov	r0, r3
   119a8:	add	sp, sp, #12
   119ac:	ldrd	r4, [sp]
   119b0:	add	sp, sp, #8
   119b4:	pop	{pc}		; (ldr pc, [sp], #4)
   119b8:	cmp	r0, #114	; 0x72
   119bc:	beq	11b6c <__assert_fail@plt+0x768>
   119c0:	blt	11b88 <__assert_fail@plt+0x784>
   119c4:	cmp	r0, #115	; 0x73
   119c8:	bne	119a0 <__assert_fail@plt+0x59c>
   119cc:	mov	r0, r1
   119d0:	mov	r2, #1
   119d4:	movw	r1, #65527	; 0xfff7
   119d8:	bl	12c68 <__assert_fail@plt+0x1864>
   119dc:	movw	r2, #49464	; 0xc138
   119e0:	movt	r2, #2
   119e4:	mov	r3, #0
   119e8:	str	r0, [r2, #4]
   119ec:	b	119a4 <__assert_fail@plt+0x5a0>
   119f0:	cmp	r0, #108	; 0x6c
   119f4:	beq	11be8 <__assert_fail@plt+0x7e4>
   119f8:	cmp	r0, #110	; 0x6e
   119fc:	beq	11b2c <__assert_fail@plt+0x728>
   11a00:	cmp	r0, #105	; 0x69
   11a04:	bne	119a0 <__assert_fail@plt+0x59c>
   11a08:	movw	r3, #50252	; 0xc44c
   11a0c:	movt	r3, #2
   11a10:	ldr	ip, [r3]
   11a14:	mov	r2, #0
   11a18:	mov	r0, r1
   11a1c:	mov	r1, r2
   11a20:	orr	ip, ip, #2
   11a24:	str	ip, [r3]
   11a28:	bl	12c68 <__assert_fail@plt+0x1864>
   11a2c:	movw	r3, #50148	; 0xc3e4
   11a30:	movt	r3, #2
   11a34:	ldrb	r3, [r3, #8]
   11a38:	mov	r2, #1000	; 0x3e8
   11a3c:	movw	r1, #50260	; 0xc454
   11a40:	movt	r1, #2
   11a44:	mul	r0, r2, r0
   11a48:	eor	r3, r3, #1
   11a4c:	str	r0, [r1]
   11a50:	cmp	r0, #199	; 0xc7
   11a54:	movhi	r3, #0
   11a58:	andls	r3, r3, #1
   11a5c:	cmp	r3, #0
   11a60:	bne	11c6c <__assert_fail@plt+0x868>
   11a64:	mov	r3, #0
   11a68:	b	119a4 <__assert_fail@plt+0x5a0>
   11a6c:	movw	r2, #50252	; 0xc44c
   11a70:	movt	r2, #2
   11a74:	ldr	r1, [r2]
   11a78:	mov	r3, #0
   11a7c:	orr	r1, r1, #32
   11a80:	str	r1, [r2]
   11a84:	b	119a4 <__assert_fail@plt+0x5a0>
   11a88:	mov	r0, r1
   11a8c:	mov	r2, #0
   11a90:	mov	r1, #255	; 0xff
   11a94:	bl	12c68 <__assert_fail@plt+0x1864>
   11a98:	movw	r2, #50148	; 0xc3e4
   11a9c:	movt	r2, #2
   11aa0:	mov	r3, #0
   11aa4:	str	r0, [r2, #32]
   11aa8:	b	119a4 <__assert_fail@plt+0x5a0>
   11aac:	mov	r0, r2
   11ab0:	movw	r1, #41224	; 0xa108
   11ab4:	movt	r1, #1
   11ab8:	bl	1680c <argp_error@@Base>
   11abc:	b	119a0 <__assert_fail@plt+0x59c>
   11ac0:	mov	r2, #0
   11ac4:	mov	r0, r4
   11ac8:	mvn	r1, #-2147483648	; 0x80000000
   11acc:	bl	12c68 <__assert_fail@plt+0x1864>
   11ad0:	movw	r2, #49464	; 0xc138
   11ad4:	movt	r2, #2
   11ad8:	mov	r3, #0
   11adc:	str	r0, [r2, #12]
   11ae0:	b	119a4 <__assert_fail@plt+0x5a0>
   11ae4:	ldr	r5, [pc, #412]	; 11c88 <__assert_fail@plt+0x884>
   11ae8:	mov	r0, r1
   11aec:	movw	r1, #49464	; 0xc138
   11af0:	movt	r1, #2
   11af4:	mov	r2, r5
   11af8:	bl	12dfc <__assert_fail@plt+0x19f8>
   11afc:	movw	r2, #50244	; 0xc444
   11b00:	movt	r2, #2
   11b04:	mov	r3, #0
   11b08:	str	r5, [r2]
   11b0c:	b	119a4 <__assert_fail@plt+0x5a0>
   11b10:	movw	r2, #50256	; 0xc450
   11b14:	movt	r2, #2
   11b18:	ldr	r1, [r2]
   11b1c:	mov	r3, #0
   11b20:	orr	r1, r1, #1
   11b24:	str	r1, [r2]
   11b28:	b	119a4 <__assert_fail@plt+0x5a0>
   11b2c:	movw	r2, #50252	; 0xc44c
   11b30:	movt	r2, #2
   11b34:	ldr	r1, [r2]
   11b38:	mov	r3, #0
   11b3c:	orr	r1, r1, #4
   11b40:	str	r1, [r2]
   11b44:	b	119a4 <__assert_fail@plt+0x5a0>
   11b48:	mov	r2, #0
   11b4c:	mov	r0, r1
   11b50:	mov	r1, r2
   11b54:	bl	12c68 <__assert_fail@plt+0x1864>
   11b58:	movw	r2, #50148	; 0xc3e4
   11b5c:	movt	r2, #2
   11b60:	mov	r3, #0
   11b64:	str	r0, [r2, #4]
   11b68:	b	119a4 <__assert_fail@plt+0x5a0>
   11b6c:	movw	r2, #50256	; 0xc450
   11b70:	movt	r2, #2
   11b74:	ldr	r1, [r2]
   11b78:	mov	r3, #0
   11b7c:	orr	r1, r1, #5
   11b80:	str	r1, [r2]
   11b84:	b	119a4 <__assert_fail@plt+0x5a0>
   11b88:	movw	r2, #50252	; 0xc44c
   11b8c:	movt	r2, #2
   11b90:	ldr	r1, [r2]
   11b94:	mov	r3, #0
   11b98:	orr	r1, r1, #8
   11b9c:	str	r1, [r2]
   11ba0:	b	119a4 <__assert_fail@plt+0x5a0>
   11ba4:	movw	r3, #50148	; 0xc3e4
   11ba8:	movt	r3, #2
   11bac:	ldrb	r1, [r3, #8]
   11bb0:	cmp	r1, #0
   11bb4:	beq	11c58 <__assert_fail@plt+0x854>
   11bb8:	movw	r3, #50252	; 0xc44c
   11bbc:	movt	r3, #2
   11bc0:	ldr	r2, [r3]
   11bc4:	movw	r0, #50140	; 0xc3dc
   11bc8:	movt	r0, #2
   11bcc:	mov	r1, #0
   11bd0:	ldr	r0, [r0]
   11bd4:	orr	r2, r2, #1
   11bd8:	str	r2, [r3]
   11bdc:	bl	110c8 <setbuf@plt>
   11be0:	mov	r3, #0
   11be4:	b	119a4 <__assert_fail@plt+0x5a0>
   11be8:	movw	r5, #50148	; 0xc3e4
   11bec:	movt	r5, #2
   11bf0:	ldrb	r1, [r5, #8]
   11bf4:	cmp	r1, #0
   11bf8:	beq	11c44 <__assert_fail@plt+0x840>
   11bfc:	mov	r0, r4
   11c00:	mov	r2, #0
   11c04:	add	r1, sp, #4
   11c08:	bl	11284 <strtoul@plt>
   11c0c:	ldr	r3, [sp, #4]
   11c10:	str	r0, [r5, #12]
   11c14:	ldrb	r3, [r3]
   11c18:	cmp	r3, #0
   11c1c:	bne	11c28 <__assert_fail@plt+0x824>
   11c20:	cmp	r0, #0
   11c24:	bge	11a64 <__assert_fail@plt+0x660>
   11c28:	movw	r2, #41200	; 0xa0f0
   11c2c:	movt	r2, #1
   11c30:	mov	r1, #0
   11c34:	mov	r0, #1
   11c38:	bl	111f4 <error@plt>
   11c3c:	mov	r3, #0
   11c40:	b	119a4 <__assert_fail@plt+0x5a0>
   11c44:	movw	r2, #41168	; 0xa0d0
   11c48:	movt	r2, #1
   11c4c:	mov	r0, #1
   11c50:	bl	111f4 <error@plt>
   11c54:	b	11bfc <__assert_fail@plt+0x7f8>
   11c58:	movw	r2, #41108	; 0xa094
   11c5c:	movt	r2, #1
   11c60:	mov	r0, #1
   11c64:	bl	111f4 <error@plt>
   11c68:	b	11bb8 <__assert_fail@plt+0x7b4>
   11c6c:	mov	r3, r4
   11c70:	movw	r2, #41140	; 0xa0b4
   11c74:	movt	r2, #1
   11c78:	mov	r1, #0
   11c7c:	mov	r0, #1
   11c80:	bl	111f4 <error@plt>
   11c84:	b	11a64 <__assert_fail@plt+0x660>
   11c88:	strdeq	ip, [r2], -r4
   11c8c:	ldr	r1, [r0, #4]
   11c90:	movw	r0, #41248	; 0xa120
   11c94:	movt	r0, #1
   11c98:	b	110f8 <printf@plt>
   11c9c:	movw	r3, #50140	; 0xc3dc
   11ca0:	movt	r3, #2
   11ca4:	str	r4, [sp, #-24]!	; 0xffffffe8
   11ca8:	movw	r4, #50148	; 0xc3e4
   11cac:	movt	r4, #2
   11cb0:	ldr	r0, [r3]
   11cb4:	strd	r6, [sp, #4]
   11cb8:	strd	r8, [sp, #12]
   11cbc:	str	lr, [sp, #20]
   11cc0:	vpush	{d8}
   11cc4:	sub	sp, sp, #24
   11cc8:	bl	11104 <fflush@plt>
   11ccc:	ldr	r3, [r4, #36]	; 0x24
   11cd0:	movw	r0, #41272	; 0xa138
   11cd4:	movt	r0, #1
   11cd8:	ldr	r1, [r3, #52]	; 0x34
   11cdc:	bl	110f8 <printf@plt>
   11ce0:	ldr	r3, [r4, #36]	; 0x24
   11ce4:	movw	r0, #41300	; 0xa154
   11ce8:	movt	r0, #1
   11cec:	ldr	r1, [r3, #112]	; 0x70
   11cf0:	bl	110f8 <printf@plt>
   11cf4:	ldr	r3, [r4, #36]	; 0x24
   11cf8:	movw	r0, #41328	; 0xa170
   11cfc:	movt	r0, #1
   11d00:	ldr	r1, [r3, #116]	; 0x74
   11d04:	bl	110f8 <printf@plt>
   11d08:	ldr	r3, [r4, #36]	; 0x24
   11d0c:	ldr	r1, [r3, #120]	; 0x78
   11d10:	cmp	r1, #0
   11d14:	bne	11dac <__assert_fail@plt+0x9a8>
   11d18:	ldr	r2, [r3, #112]	; 0x70
   11d1c:	cmp	r2, #0
   11d20:	beq	11d3c <__assert_fail@plt+0x938>
   11d24:	ldr	r1, [r3, #116]	; 0x74
   11d28:	cmp	r2, r1
   11d2c:	bcs	11d8c <__assert_fail@plt+0x988>
   11d30:	movw	r0, #41372	; 0xa19c
   11d34:	movt	r0, #1
   11d38:	bl	110f8 <printf@plt>
   11d3c:	mov	r0, #10
   11d40:	bl	112f0 <putchar@plt>
   11d44:	ldr	r3, [r4, #36]	; 0x24
   11d48:	ldr	r0, [r3, #116]	; 0x74
   11d4c:	cmp	r0, #0
   11d50:	beq	11d68 <__assert_fail@plt+0x964>
   11d54:	movw	r2, #49464	; 0xc138
   11d58:	movt	r2, #2
   11d5c:	ldr	r2, [r2, #4]
   11d60:	cmp	r2, #7
   11d64:	bhi	11dc0 <__assert_fail@plt+0x9bc>
   11d68:	clz	r0, r0
   11d6c:	lsr	r0, r0, #5
   11d70:	add	sp, sp, #24
   11d74:	vpop	{d8}
   11d78:	ldr	r4, [sp]
   11d7c:	ldrd	r6, [sp, #4]
   11d80:	ldrd	r8, [sp, #12]
   11d84:	add	sp, sp, #20
   11d88:	pop	{pc}		; (ldr pc, [sp], #4)
   11d8c:	sub	r1, r2, r1
   11d90:	mov	r3, #100	; 0x64
   11d94:	movw	r0, #41408	; 0xa1c0
   11d98:	movt	r0, #1
   11d9c:	mul	r1, r3, r1
   11da0:	udiv	r1, r1, r2
   11da4:	bl	110f8 <printf@plt>
   11da8:	b	11d3c <__assert_fail@plt+0x938>
   11dac:	movw	r0, #41352	; 0xa188
   11db0:	movt	r0, #1
   11db4:	bl	110f8 <printf@plt>
   11db8:	ldr	r3, [r4, #36]	; 0x24
   11dbc:	b	11d18 <__assert_fail@plt+0x914>
   11dc0:	ldr	r2, [r3, #120]	; 0x78
   11dc4:	ldr	r3, [r3, #68]	; 0x44
   11dc8:	vldr	d1, [pc, #88]	; 11e28 <__assert_fail@plt+0xa24>
   11dcc:	add	r0, r0, r2
   11dd0:	vmov	s15, r0
   11dd4:	ldrd	r8, [r3]
   11dd8:	vldr	d5, [r3, #16]
   11ddc:	vldr	d6, [r3, #24]
   11de0:	ldrd	r6, [r3, #8]
   11de4:	vcvt.f64.u32	d7, s15
   11de8:	vdiv.f64	d8, d5, d7
   11dec:	vdiv.f64	d0, d6, d7
   11df0:	vmls.f64	d0, d8, d8
   11df4:	bl	12f10 <__assert_fail@plt+0x1b0c>
   11df8:	mov	r3, r9
   11dfc:	mov	r2, r8
   11e00:	vstr	d8, [sp]
   11e04:	movw	r0, #41428	; 0xa1d4
   11e08:	movt	r0, #1
   11e0c:	strd	r6, [sp, #8]
   11e10:	vstr	d0, [sp, #16]
   11e14:	bl	110f8 <printf@plt>
   11e18:	ldr	r3, [r4, #36]	; 0x24
   11e1c:	ldr	r0, [r3, #116]	; 0x74
   11e20:	b	11d68 <__assert_fail@plt+0x964>
   11e24:	nop	{0}
   11e28:	rscsle	sl, r1, #252, 18	; 0x3f0000
   11e2c:	svccc	0x0040624d
   11e30:	str	r4, [sp, #-8]!
   11e34:	mov	r4, r0
   11e38:	movw	r0, #41484	; 0xa20c
   11e3c:	movt	r0, #1
   11e40:	str	lr, [sp, #4]
   11e44:	bl	110f8 <printf@plt>
   11e48:	ldr	r3, [pc, #72]	; 11e98 <__assert_fail@plt+0xa94>
   11e4c:	ldrb	r1, [r4, #1]
   11e50:	add	r0, r3, #24
   11e54:	ldr	r2, [r3]
   11e58:	cmp	r2, r1
   11e5c:	beq	11e84 <__assert_fail@plt+0xa80>
   11e60:	add	r3, r3, #8
   11e64:	cmp	r3, r0
   11e68:	bne	11e54 <__assert_fail@plt+0xa50>
   11e6c:	movw	r0, #41504	; 0xa220
   11e70:	movt	r0, #1
   11e74:	ldr	r4, [sp]
   11e78:	ldr	lr, [sp, #4]
   11e7c:	add	sp, sp, #8
   11e80:	b	110f8 <printf@plt>
   11e84:	ldr	r4, [sp]
   11e88:	ldr	lr, [sp, #4]
   11e8c:	add	sp, sp, #8
   11e90:	ldr	r0, [r3, #4]
   11e94:	b	1120c <puts@plt>
   11e98:	andeq	ip, r2, r8, asr #2
   11e9c:	str	r4, [sp, #-8]!
   11ea0:	mov	r4, r0
   11ea4:	movw	r0, #41524	; 0xa234
   11ea8:	movt	r0, #1
   11eac:	str	lr, [sp, #4]
   11eb0:	bl	110f8 <printf@plt>
   11eb4:	ldr	r3, [pc, #72]	; 11f04 <__assert_fail@plt+0xb00>
   11eb8:	ldrb	r1, [r4, #1]
   11ebc:	add	r0, r3, #40	; 0x28
   11ec0:	ldr	r2, [r3]
   11ec4:	cmp	r2, r1
   11ec8:	beq	11ef0 <__assert_fail@plt+0xaec>
   11ecc:	add	r3, r3, #8
   11ed0:	cmp	r3, r0
   11ed4:	bne	11ec0 <__assert_fail@plt+0xabc>
   11ed8:	movw	r0, #41504	; 0xa220
   11edc:	movt	r0, #1
   11ee0:	ldr	r4, [sp]
   11ee4:	ldr	lr, [sp, #4]
   11ee8:	add	sp, sp, #8
   11eec:	b	110f8 <printf@plt>
   11ef0:	ldr	r4, [sp]
   11ef4:	ldr	lr, [sp, #4]
   11ef8:	add	sp, sp, #8
   11efc:	ldr	r0, [r3, #4]
   11f00:	b	1120c <puts@plt>
   11f04:	andeq	ip, r2, r0, ror #2
   11f08:	str	r4, [sp, #-8]!
   11f0c:	mov	r4, r0
   11f10:	movw	r0, #41552	; 0xa250
   11f14:	movt	r0, #1
   11f18:	str	lr, [sp, #4]
   11f1c:	bl	110f8 <printf@plt>
   11f20:	movw	r3, #49464	; 0xc138
   11f24:	movt	r3, #2
   11f28:	ldrb	r1, [r4, #1]
   11f2c:	ldr	r2, [r3, #80]	; 0x50
   11f30:	cmp	r2, r1
   11f34:	beq	11f5c <__assert_fail@plt+0xb58>
   11f38:	ldr	r2, [r3, #88]	; 0x58
   11f3c:	cmp	r1, r2
   11f40:	beq	11f74 <__assert_fail@plt+0xb70>
   11f44:	movw	r0, #41504	; 0xa220
   11f48:	movt	r0, #1
   11f4c:	ldr	r4, [sp]
   11f50:	ldr	lr, [sp, #4]
   11f54:	add	sp, sp, #8
   11f58:	b	110f8 <printf@plt>
   11f5c:	add	r3, r3, #80	; 0x50
   11f60:	ldr	r4, [sp]
   11f64:	ldr	lr, [sp, #4]
   11f68:	add	sp, sp, #8
   11f6c:	ldr	r0, [r3, #4]
   11f70:	b	1120c <puts@plt>
   11f74:	add	r3, r3, #88	; 0x58
   11f78:	b	11f60 <__assert_fail@plt+0xb5c>
   11f7c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11f80:	movw	r5, #49464	; 0xc138
   11f84:	movt	r5, #2
   11f88:	ldr	r3, [r5, #4]
   11f8c:	mov	r4, r0
   11f90:	strd	r6, [sp, #8]
   11f94:	strd	r8, [sp, #16]
   11f98:	str	lr, [sp, #24]
   11f9c:	sub	sp, sp, #20
   11fa0:	cmp	r3, #7
   11fa4:	movls	r2, #0
   11fa8:	bhi	120bc <__assert_fail@plt+0xcb8>
   11fac:	movw	r3, #50248	; 0xc448
   11fb0:	movt	r3, #2
   11fb4:	ldr	r1, [r3]
   11fb8:	cmp	r1, #0
   11fbc:	beq	11fdc <__assert_fail@plt+0xbd8>
   11fc0:	ldr	r3, [r5, #4]
   11fc4:	mov	r0, #1
   11fc8:	str	r0, [sp]
   11fcc:	mov	r0, r4
   11fd0:	cmp	r3, r2
   11fd4:	subhi	r3, r3, r2
   11fd8:	bl	13064 <__assert_fail@plt+0x1c60>
   11fdc:	mov	r1, #1
   11fe0:	mov	r0, r4
   11fe4:	bl	12fcc <__assert_fail@plt+0x1bc8>
   11fe8:	subs	r6, r0, #0
   11fec:	bne	120ec <__assert_fail@plt+0xce8>
   11ff0:	mov	r7, #1
   11ff4:	ldr	r5, [r4, #56]	; 0x38
   11ff8:	mov	r0, #128	; 0x80
   11ffc:	mov	lr, r4
   12000:	mov	r8, #28
   12004:	ldr	r2, [r4, #72]	; 0x48
   12008:	mov	r3, r6
   1200c:	ldr	r9, [r4, #112]	; 0x70
   12010:	add	r5, r5, #8
   12014:	ldr	ip, [r4, #76]	; 0x4c
   12018:	lsl	r1, r2, #3
   1201c:	udiv	r2, r9, r1
   12020:	mls	r2, r1, r2, r9
   12024:	ldrb	r1, [ip, r2, asr #3]
   12028:	and	r9, r2, #7
   1202c:	bic	r1, r1, r7, lsl r9
   12030:	strb	r1, [ip, r2, asr #3]
   12034:	mov	r2, r5
   12038:	ldr	ip, [r4, #80]	; 0x50
   1203c:	str	r0, [ip]
   12040:	mov	r1, ip
   12044:	ldr	r9, [r4, #60]	; 0x3c
   12048:	ldr	r7, [r4, #112]	; 0x70
   1204c:	ldr	r0, [lr], #24
   12050:	rev16	r9, r9
   12054:	rev16	r7, r7
   12058:	strh	r9, [ip, #4]
   1205c:	strh	r7, [ip, #6]
   12060:	str	lr, [sp]
   12064:	str	r8, [sp, #4]
   12068:	bl	11308 <sendto@plt>
   1206c:	subs	r3, r0, #0
   12070:	blt	120ec <__assert_fail@plt+0xce8>
   12074:	ldr	r2, [r4, #112]	; 0x70
   12078:	cmp	r5, r3
   1207c:	add	r2, r2, #1
   12080:	str	r2, [r4, #112]	; 0x70
   12084:	bne	120a4 <__assert_fail@plt+0xca0>
   12088:	mov	r0, r6
   1208c:	add	sp, sp, #20
   12090:	ldrd	r4, [sp]
   12094:	ldrd	r6, [sp, #8]
   12098:	ldrd	r8, [sp, #16]
   1209c:	add	sp, sp, #24
   120a0:	pop	{pc}		; (ldr pc, [sp], #4)
   120a4:	mov	r2, r5
   120a8:	movw	r0, #41568	; 0xa260
   120ac:	movt	r0, #1
   120b0:	ldr	r1, [r4, #52]	; 0x34
   120b4:	bl	110f8 <printf@plt>
   120b8:	b	12088 <__assert_fail@plt+0xc84>
   120bc:	mov	r1, #0
   120c0:	add	r0, sp, #8
   120c4:	bl	111e8 <gettimeofday@plt>
   120c8:	mov	r0, #1
   120cc:	mov	r2, #0
   120d0:	add	r1, sp, #8
   120d4:	mov	r3, #8
   120d8:	str	r0, [sp]
   120dc:	mov	r0, r4
   120e0:	bl	13064 <__assert_fail@plt+0x1c60>
   120e4:	mov	r2, #8
   120e8:	b	11fac <__assert_fail@plt+0xba8>
   120ec:	bl	112b4 <__errno_location@plt>
   120f0:	movw	r2, #41604	; 0xa284
   120f4:	movt	r2, #1
   120f8:	ldr	r1, [r0]
   120fc:	mov	r0, #1
   12100:	mvn	r6, #0
   12104:	bl	111f4 <error@plt>
   12108:	b	12088 <__assert_fail@plt+0xc84>
   1210c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12110:	add	r1, r0, #32
   12114:	mov	r3, #46	; 0x2e
   12118:	strd	r6, [sp, #8]
   1211c:	mov	r4, #0
   12120:	movw	r6, #41640	; 0xa2a8
   12124:	movt	r6, #1
   12128:	strd	r8, [sp, #16]
   1212c:	mov	r8, r0
   12130:	strd	sl, [sp, #24]
   12134:	mov	r0, #10
   12138:	add	r5, r8, #8
   1213c:	str	lr, [sp, #32]
   12140:	sub	sp, sp, #124	; 0x7c
   12144:	movw	r7, #41636	; 0xa2a4
   12148:	movt	r7, #1
   1214c:	add	sl, sp, #72	; 0x48
   12150:	mov	r2, sl
   12154:	add	fp, sp, #24
   12158:	bl	113c8 <inet_ntop@plt>
   1215c:	add	r1, r5, #8
   12160:	mov	r2, fp
   12164:	mov	r3, #46	; 0x2e
   12168:	mov	r0, #10
   1216c:	bl	113c8 <inet_ntop@plt>
   12170:	movw	r0, #41620	; 0xa294
   12174:	movt	r0, #1
   12178:	bl	110f8 <printf@plt>
   1217c:	movw	r2, #46052	; 0xb3e4
   12180:	movt	r2, #1
   12184:	ldrb	r1, [r8, #8]
   12188:	mov	r9, r2
   1218c:	b	121a0 <__assert_fail@plt+0xd9c>
   12190:	ldrb	r1, [r5, #1]!
   12194:	tst	r4, #1
   12198:	movne	r2, r7
   1219c:	moveq	r2, r9
   121a0:	add	r4, r4, #1
   121a4:	mov	r0, r6
   121a8:	bl	110f8 <printf@plt>
   121ac:	cmp	r4, #8
   121b0:	bne	12190 <__assert_fail@plt+0xd8c>
   121b4:	movw	r0, #41648	; 0xa2b0
   121b8:	movt	r0, #1
   121bc:	bl	1120c <puts@plt>
   121c0:	movw	r0, #41660	; 0xa2bc
   121c4:	movt	r0, #1
   121c8:	bl	1120c <puts@plt>
   121cc:	ldrh	r2, [r8, #12]
   121d0:	movw	r0, #41696	; 0xa2e0
   121d4:	movt	r0, #1
   121d8:	str	fp, [sp, #12]
   121dc:	ldr	r1, [r8, #8]
   121e0:	str	sl, [sp, #16]
   121e4:	ldrb	lr, [r8, #15]
   121e8:	rev16	r2, r2
   121ec:	ldrb	ip, [r8, #14]
   121f0:	uxth	r2, r2
   121f4:	rev	r1, r1
   121f8:	ubfx	r3, r1, #0, #20
   121fc:	stm	sp, {r2, ip, lr}
   12200:	ubfx	r2, r1, #20, #8
   12204:	lsr	r1, r1, #28
   12208:	bl	110f8 <printf@plt>
   1220c:	ldrb	r3, [r8, #14]
   12210:	cmp	r3, #58	; 0x3a
   12214:	beq	1223c <__assert_fail@plt+0xe38>
   12218:	mov	r0, #10
   1221c:	bl	112f0 <putchar@plt>
   12220:	add	sp, sp, #124	; 0x7c
   12224:	ldrd	r4, [sp]
   12228:	ldrd	r6, [sp, #8]
   1222c:	ldrd	r8, [sp, #16]
   12230:	ldrd	sl, [sp, #24]
   12234:	add	sp, sp, #32
   12238:	pop	{pc}		; (ldr pc, [sp], #4)
   1223c:	ldrh	r3, [r8, #12]
   12240:	movw	r0, #41736	; 0xa308
   12244:	movt	r0, #1
   12248:	ldrb	r2, [r8, #49]	; 0x31
   1224c:	ldrb	r1, [r8, #48]	; 0x30
   12250:	rev16	r3, r3
   12254:	uxth	r3, r3
   12258:	bl	110f8 <printf@plt>
   1225c:	ldrb	r3, [r8, #48]	; 0x30
   12260:	sub	r3, r3, #128	; 0x80
   12264:	cmp	r3, #1
   12268:	bhi	12218 <__assert_fail@plt+0xe14>
   1226c:	ldrh	r1, [r8, #52]	; 0x34
   12270:	movw	r0, #41776	; 0xa330
   12274:	movt	r0, #1
   12278:	ldrh	r3, [r8, #54]	; 0x36
   1227c:	rev16	r1, r1
   12280:	uxth	r1, r1
   12284:	rev16	r3, r3
   12288:	uxth	r2, r3
   1228c:	bl	110f8 <printf@plt>
   12290:	b	12218 <__assert_fail@plt+0xe14>
   12294:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12298:	strd	r6, [sp, #8]
   1229c:	mov	r7, r0
   122a0:	strd	r8, [sp, #16]
   122a4:	movw	r9, #50252	; 0xc44c
   122a8:	movt	r9, #2
   122ac:	ldr	r3, [r9]
   122b0:	strd	sl, [sp, #24]
   122b4:	str	lr, [sp, #32]
   122b8:	vpush	{d8-d10}
   122bc:	sub	sp, sp, #1840	; 0x730
   122c0:	sub	sp, sp, #4
   122c4:	and	r3, r3, #3
   122c8:	cmp	r3, #3
   122cc:	beq	12bf0 <__assert_fail@plt+0x17ec>
   122d0:	movw	sl, #50148	; 0xc3e4
   122d4:	movt	sl, #2
   122d8:	movw	fp, #49464	; 0xc138
   122dc:	movt	fp, #2
   122e0:	ldr	r6, [sl, #36]	; 0x24
   122e4:	mov	r0, #0
   122e8:	movt	r0, #65408	; 0xff80
   122ec:	ldr	lr, [fp, #4]
   122f0:	movw	r1, #52580	; 0xcd64
   122f4:	movt	r1, #16845	; 0x41cd
   122f8:	mov	r4, #0
   122fc:	mov	r5, #0
   12300:	add	ip, sp, #824	; 0x338
   12304:	add	r3, sp, #144	; 0x90
   12308:	strd	r0, [sp, #144]	; 0x90
   1230c:	mov	r1, #10
   12310:	mov	r0, #194	; 0xc2
   12314:	strd	r4, [sp, #152]	; 0x98
   12318:	add	r2, sp, #816	; 0x330
   1231c:	strd	r4, [sp, #160]	; 0xa0
   12320:	str	lr, [r6, #56]	; 0x38
   12324:	str	r3, [r6, #68]	; 0x44
   12328:	add	r3, sp, #560	; 0x230
   1232c:	strd	r4, [sp, #168]	; 0xa8
   12330:	str	r0, [sp, #816]	; 0x330
   12334:	mov	r0, r7
   12338:	str	r1, [sp, #820]	; 0x334
   1233c:	mov	r1, #0
   12340:	strd	r4, [ip]
   12344:	strd	r4, [ip, #8]
   12348:	strd	r4, [ip, #16]
   1234c:	bl	113bc <getaddrinfo@plt>
   12350:	cmp	r0, #0
   12354:	bne	12bb0 <__assert_fail@plt+0x17ac>
   12358:	ldr	r4, [sp, #560]	; 0x230
   1235c:	add	r0, r6, #24
   12360:	ldr	r2, [r4, #16]
   12364:	ldr	r1, [r4, #20]
   12368:	bl	11158 <memcpy@plt>
   1236c:	ldr	r0, [r4, #24]
   12370:	cmp	r0, #0
   12374:	moveq	r0, r7
   12378:	bl	111ac <strdup@plt>
   1237c:	str	r0, [r6, #52]	; 0x34
   12380:	mov	r0, r4
   12384:	bl	113b0 <freeaddrinfo@plt>
   12388:	ldr	r3, [r6, #52]	; 0x34
   1238c:	cmp	r3, #0
   12390:	beq	12bb8 <__assert_fail@plt+0x17b4>
   12394:	ldr	r0, [sl, #36]	; 0x24
   12398:	mov	r1, #0
   1239c:	mov	ip, #1
   123a0:	mov	r3, #256	; 0x100
   123a4:	add	r2, sp, #304	; 0x130
   123a8:	str	r1, [sp]
   123ac:	stmib	sp, {r1, ip}
   123b0:	mov	r1, #28
   123b4:	add	r0, r0, #24
   123b8:	bl	1132c <getnameinfo@plt>
   123bc:	subs	r3, r0, #0
   123c0:	beq	123e8 <__assert_fail@plt+0xfe4>
   123c4:	cmn	r3, #11
   123c8:	beq	12c08 <__assert_fail@plt+0x1804>
   123cc:	bl	11140 <gai_strerror@plt>
   123d0:	mov	r3, r0
   123d4:	movw	r2, #41848	; 0xa378
   123d8:	movt	r2, #1
   123dc:	mov	r1, #0
   123e0:	mov	r0, #1
   123e4:	bl	111f4 <error@plt>
   123e8:	ldr	r1, [sl, #36]	; 0x24
   123ec:	add	r2, sp, #304	; 0x130
   123f0:	movw	r0, #41864	; 0xa388
   123f4:	movt	r0, #1
   123f8:	ldr	r3, [fp, #4]
   123fc:	ldr	r1, [r1, #52]	; 0x34
   12400:	bl	110f8 <printf@plt>
   12404:	ldr	r3, [r9]
   12408:	tst	r3, #32
   1240c:	bne	12bd4 <__assert_fail@plt+0x17d0>
   12410:	mov	r0, #10
   12414:	bl	112f0 <putchar@plt>
   12418:	ldr	r4, [sl, #36]	; 0x24
   1241c:	movw	r1, #6376	; 0x18e8
   12420:	movt	r1, #1
   12424:	mov	r0, #2
   12428:	bl	11164 <signal@plt>
   1242c:	ldr	r0, [sl, #12]
   12430:	mov	r3, #0
   12434:	mov	r2, #0
   12438:	ldr	r1, [r4]
   1243c:	strd	r2, [sp, #68]	; 0x44
   12440:	strd	r2, [sp, #84]	; 0x54
   12444:	strd	r2, [sp, #92]	; 0x5c
   12448:	cmp	r0, #0
   1244c:	movne	r5, #0
   12450:	add	r3, r1, #1
   12454:	str	r3, [sp, #52]	; 0x34
   12458:	beq	12474 <__assert_fail@plt+0x1070>
   1245c:	mov	r0, r4
   12460:	add	r5, r5, #1
   12464:	bl	11f7c <__assert_fail@plt+0xb78>
   12468:	ldr	r3, [sl, #12]
   1246c:	cmp	r5, r3
   12470:	bcc	1245c <__assert_fail@plt+0x1058>
   12474:	ldr	r3, [r9]
   12478:	tst	r3, #1
   1247c:	movwne	r3, #10000	; 0x2710
   12480:	strne	r3, [sp, #88]	; 0x58
   12484:	bne	124b0 <__assert_fail@plt+0x10ac>
   12488:	ldr	r1, [r4, #20]
   1248c:	movw	r3, #19923	; 0x4dd3
   12490:	movt	r3, #4194	; 0x1062
   12494:	mov	r2, #1000	; 0x3e8
   12498:	umull	r0, r3, r3, r1
   1249c:	lsr	r3, r3, #6
   124a0:	mls	r1, r2, r3, r1
   124a4:	str	r3, [sp, #84]	; 0x54
   124a8:	mul	r2, r2, r1
   124ac:	str	r2, [sp, #88]	; 0x58
   124b0:	vldr	d9, [pc, #936]	; 12860 <__assert_fail@plt+0x145c>
   124b4:	mov	r1, #0
   124b8:	add	r0, sp, #76	; 0x4c
   124bc:	mov	r5, r1
   124c0:	movw	r8, #16959	; 0x423f
   124c4:	movt	r8, #15
   124c8:	vldr	d10, [pc, #920]	; 12868 <__assert_fail@plt+0x1464>
   124cc:	str	r1, [sp, #20]
   124d0:	bl	111e8 <gettimeofday@plt>
   124d4:	mov	r0, r4
   124d8:	str	r5, [sp, #36]	; 0x24
   124dc:	bl	11f7c <__assert_fail@plt+0xb78>
   124e0:	movw	r3, #50140	; 0xc3dc
   124e4:	movt	r3, #2
   124e8:	str	r5, [sp, #28]
   124ec:	str	r3, [sp, #40]	; 0x28
   124f0:	ldr	r3, [sl]
   124f4:	cmp	r3, #0
   124f8:	str	r3, [sp, #32]
   124fc:	bne	12640 <__assert_fail@plt+0x123c>
   12500:	ldr	r1, [sp, #32]
   12504:	add	r3, sp, #172	; 0xac
   12508:	add	r2, sp, #300	; 0x12c
   1250c:	str	r1, [r3, #4]!
   12510:	cmp	r2, r3
   12514:	bne	1250c <__assert_fail@plt+0x1108>
   12518:	ldr	r3, [r4]
   1251c:	mov	r1, #0
   12520:	mov	ip, #1
   12524:	add	r0, sp, #92	; 0x5c
   12528:	cmp	r3, r1
   1252c:	add	r2, r3, #31
   12530:	movge	r2, r3
   12534:	subs	lr, r1, r3
   12538:	and	lr, lr, #31
   1253c:	asr	r2, r2, #5
   12540:	and	r3, r3, #31
   12544:	rsbpl	r3, lr, #0
   12548:	add	lr, sp, #1840	; 0x730
   1254c:	add	r2, lr, r2, lsl #2
   12550:	ldr	lr, [r2, #-1664]	; 0xfffff980
   12554:	orr	r3, lr, ip, lsl r3
   12558:	str	r3, [r2, #-1664]	; 0xfffff980
   1255c:	bl	111e8 <gettimeofday@plt>
   12560:	ldrd	r2, [sp, #76]	; 0x4c
   12564:	ldr	r1, [sp, #84]	; 0x54
   12568:	ldr	ip, [sp, #88]	; 0x58
   1256c:	ldr	r0, [sp, #92]	; 0x5c
   12570:	add	r2, r2, r1
   12574:	ldr	r1, [sp, #96]	; 0x60
   12578:	add	r3, r3, ip
   1257c:	sub	r2, r2, r0
   12580:	sub	r3, r3, r1
   12584:	cmp	r3, #0
   12588:	strd	r2, [sp, #68]	; 0x44
   1258c:	bge	12684 <__assert_fail@plt+0x1280>
   12590:	sub	r1, r2, #1
   12594:	add	r3, r3, #999424	; 0xf4000
   12598:	mov	r2, r1
   1259c:	add	r3, r3, #576	; 0x240
   125a0:	sub	r1, r1, #1
   125a4:	cmp	r3, #0
   125a8:	blt	12594 <__assert_fail@plt+0x1190>
   125ac:	strd	r2, [sp, #68]	; 0x44
   125b0:	cmp	r2, #0
   125b4:	bge	125c4 <__assert_fail@plt+0x11c0>
   125b8:	mov	r3, #0
   125bc:	str	r3, [sp, #68]	; 0x44
   125c0:	str	r3, [sp, #72]	; 0x48
   125c4:	add	r0, sp, #68	; 0x44
   125c8:	mov	r3, #0
   125cc:	add	r1, sp, #176	; 0xb0
   125d0:	mov	r2, r3
   125d4:	str	r0, [sp]
   125d8:	ldr	r0, [sp, #52]	; 0x34
   125dc:	bl	11188 <select@plt>
   125e0:	subs	r6, r0, #0
   125e4:	blt	12824 <__assert_fail@plt+0x1420>
   125e8:	cmp	r6, #1
   125ec:	beq	126d4 <__assert_fail@plt+0x12d0>
   125f0:	ldr	r3, [r4, #8]
   125f4:	cmp	r3, #0
   125f8:	beq	126a4 <__assert_fail@plt+0x12a0>
   125fc:	ldr	r2, [r4, #112]	; 0x70
   12600:	cmp	r3, r2
   12604:	bhi	126a4 <__assert_fail@plt+0x12a0>
   12608:	ldr	r3, [sp, #36]	; 0x24
   1260c:	cmp	r3, #0
   12610:	bne	12640 <__assert_fail@plt+0x123c>
   12614:	mov	r3, #10
   12618:	mov	r2, #1
   1261c:	str	r2, [sp, #36]	; 0x24
   12620:	str	r3, [sp, #84]	; 0x54
   12624:	mov	r1, #0
   12628:	add	r0, sp, #76	; 0x4c
   1262c:	bl	111e8 <gettimeofday@plt>
   12630:	ldr	r3, [sl]
   12634:	cmp	r3, #0
   12638:	str	r3, [sp, #32]
   1263c:	beq	12500 <__assert_fail@plt+0x10fc>
   12640:	mov	r0, r4
   12644:	bl	13118 <__assert_fail@plt+0x1d14>
   12648:	bl	11c9c <__assert_fail@plt+0x898>
   1264c:	ldr	r3, [sl, #36]	; 0x24
   12650:	mov	r4, r0
   12654:	ldr	r0, [r3, #52]	; 0x34
   12658:	bl	17f08 <argp_parse@@Base+0xfe4>
   1265c:	mov	r0, r4
   12660:	add	sp, sp, #1840	; 0x730
   12664:	add	sp, sp, #4
   12668:	vpop	{d8-d10}
   1266c:	ldrd	r4, [sp]
   12670:	ldrd	r6, [sp, #8]
   12674:	ldrd	r8, [sp, #16]
   12678:	ldrd	sl, [sp, #24]
   1267c:	add	sp, sp, #32
   12680:	pop	{pc}		; (ldr pc, [sp], #4)
   12684:	cmp	r3, r8
   12688:	ble	125b0 <__assert_fail@plt+0x11ac>
   1268c:	sub	r3, r3, #999424	; 0xf4000
   12690:	add	r2, r2, #1
   12694:	sub	r3, r3, #576	; 0x240
   12698:	cmp	r3, r8
   1269c:	bgt	1268c <__assert_fail@plt+0x1288>
   126a0:	b	125ac <__assert_fail@plt+0x11a8>
   126a4:	mov	r0, r4
   126a8:	bl	11f7c <__assert_fail@plt+0xb78>
   126ac:	ldr	r3, [r9]
   126b0:	and	r3, r3, #9
   126b4:	cmp	r3, #1
   126b8:	beq	12848 <__assert_fail@plt+0x1444>
   126bc:	add	r0, r4, #12
   126c0:	ldr	r1, [fp, #12]
   126c4:	bl	13160 <__assert_fail@plt+0x1d5c>
   126c8:	cmp	r0, #0
   126cc:	beq	12624 <__assert_fail@plt+0x1220>
   126d0:	b	12640 <__assert_fail@plt+0x123c>
   126d4:	ldr	r3, [r4, #56]	; 0x38
   126d8:	mov	lr, #28
   126dc:	add	r2, sp, #100	; 0x64
   126e0:	mov	r0, #1024	; 0x400
   126e4:	mov	ip, #0
   126e8:	ldr	r1, [r4, #80]	; 0x50
   126ec:	add	r5, r4, #84	; 0x54
   126f0:	str	lr, [sp, #120]	; 0x78
   126f4:	add	lr, sp, #816	; 0x330
   126f8:	add	r3, r3, #8
   126fc:	str	r2, [sp, #124]	; 0x7c
   12700:	mov	r2, ip
   12704:	str	r0, [sp, #136]	; 0x88
   12708:	ldr	r0, [r4]
   1270c:	str	r1, [sp, #100]	; 0x64
   12710:	add	r1, sp, #116	; 0x74
   12714:	str	r5, [sp, #44]	; 0x2c
   12718:	str	r3, [sp, #104]	; 0x68
   1271c:	str	r5, [sp, #116]	; 0x74
   12720:	str	r6, [sp, #128]	; 0x80
   12724:	str	lr, [sp, #132]	; 0x84
   12728:	str	ip, [sp, #140]	; 0x8c
   1272c:	bl	11398 <recvmsg@plt>
   12730:	subs	r3, r0, #0
   12734:	str	r3, [sp, #24]
   12738:	blt	127c8 <__assert_fail@plt+0x13c4>
   1273c:	ldr	r1, [sp, #136]	; 0x88
   12740:	cmp	r1, #11
   12744:	bls	127a0 <__assert_fail@plt+0x139c>
   12748:	ldr	r3, [sp, #132]	; 0x84
   1274c:	cmp	r3, #0
   12750:	beq	127a0 <__assert_fail@plt+0x139c>
   12754:	add	r1, r3, r1
   12758:	ldr	r2, [r3, #4]
   1275c:	cmp	r2, #41	; 0x29
   12760:	beq	12810 <__assert_fail@plt+0x140c>
   12764:	ldr	r0, [r3]
   12768:	add	r2, r0, #3
   1276c:	cmp	r0, #11
   12770:	bic	r2, r2, #3
   12774:	bls	127a0 <__assert_fail@plt+0x139c>
   12778:	add	r3, r3, r2
   1277c:	add	r2, r3, #12
   12780:	cmp	r1, r2
   12784:	bcc	127a0 <__assert_fail@plt+0x139c>
   12788:	ldr	r2, [r3]
   1278c:	add	r2, r2, #3
   12790:	bic	r2, r2, #3
   12794:	add	r2, r3, r2
   12798:	cmp	r1, r2
   1279c:	bcs	12758 <__assert_fail@plt+0x1354>
   127a0:	mvn	r7, #0
   127a4:	ldr	r5, [r4, #80]	; 0x50
   127a8:	ldrb	r3, [r5]
   127ac:	cmp	r3, #129	; 0x81
   127b0:	beq	12878 <__assert_fail@plt+0x1474>
   127b4:	ldr	r3, [sl, #36]	; 0x24
   127b8:	ldr	r1, [r5, #32]
   127bc:	ldr	r2, [r3, #32]
   127c0:	cmp	r1, r2
   127c4:	beq	12a00 <__assert_fail@plt+0x15fc>
   127c8:	ldr	r3, [sp, #28]
   127cc:	cmp	r3, #0
   127d0:	beq	129ec <__assert_fail@plt+0x15e8>
   127d4:	add	r0, r4, #12
   127d8:	ldr	r1, [fp, #12]
   127dc:	bl	13160 <__assert_fail@plt+0x1d5c>
   127e0:	cmp	r0, #0
   127e4:	bne	12640 <__assert_fail@plt+0x123c>
   127e8:	ldr	r2, [r4, #8]
   127ec:	ldr	r3, [sp, #20]
   127f0:	cmp	r2, r3
   127f4:	movhi	r3, #0
   127f8:	movls	r3, #1
   127fc:	cmp	r2, #0
   12800:	moveq	r3, #0
   12804:	cmp	r3, #0
   12808:	beq	124f0 <__assert_fail@plt+0x10ec>
   1280c:	b	12640 <__assert_fail@plt+0x123c>
   12810:	ldr	r2, [r3, #8]
   12814:	cmp	r2, #52	; 0x34
   12818:	bne	12764 <__assert_fail@plt+0x1360>
   1281c:	ldr	r7, [r3, #12]
   12820:	b	127a4 <__assert_fail@plt+0x13a0>
   12824:	bl	112b4 <__errno_location@plt>
   12828:	ldr	r1, [r0]
   1282c:	cmp	r1, #4
   12830:	beq	124f0 <__assert_fail@plt+0x10ec>
   12834:	movw	r2, #41916	; 0xa3bc
   12838:	movt	r2, #1
   1283c:	mov	r0, #1
   12840:	bl	111f4 <error@plt>
   12844:	b	124f0 <__assert_fail@plt+0x10ec>
   12848:	ldr	r3, [sp, #40]	; 0x28
   1284c:	mov	r0, #46	; 0x2e
   12850:	ldr	r1, [r3]
   12854:	bl	11374 <putc@plt>
   12858:	b	126bc <__assert_fail@plt+0x12b8>
   1285c:	nop	{0}
	...
   1286c:	addmi	r4, pc, r0
   12870:	muleq	r2, r8, r1
   12874:			; <UNDEFINED> instruction: 0x0002c1b8
   12878:	ldrh	r3, [r5, #4]
   1287c:	ldr	r2, [r4, #60]	; 0x3c
   12880:	rev16	r3, r3
   12884:	uxth	r3, r3
   12888:	cmp	r3, r2
   1288c:	bne	127c8 <__assert_fail@plt+0x13c4>
   12890:	ldrh	r3, [r5, #6]
   12894:	ldr	r2, [r4, #72]	; 0x48
   12898:	ldr	r1, [r4, #76]	; 0x4c
   1289c:	rev16	r3, r3
   128a0:	uxth	r3, r3
   128a4:	lsl	r2, r2, #3
   128a8:	sdiv	r0, r3, r2
   128ac:	mls	r3, r2, r0, r3
   128b0:	ldrb	r2, [r1, r3, asr #3]
   128b4:	and	ip, r3, #7
   128b8:	asr	r0, r2, ip
   128bc:	ands	r0, r0, #1
   128c0:	str	r0, [sp, #60]	; 0x3c
   128c4:	beq	12ac0 <__assert_fail@plt+0x16bc>
   128c8:	ldr	r3, [r4, #120]	; 0x78
   128cc:	add	r3, r3, #1
   128d0:	str	r3, [r4, #120]	; 0x78
   128d4:	ldr	r2, [r4, #68]	; 0x44
   128d8:	add	r3, sp, #108	; 0x6c
   128dc:	mov	r1, #0
   128e0:	mov	r0, r3
   128e4:	str	r3, [sp, #48]	; 0x30
   128e8:	str	r2, [sp, #56]	; 0x38
   128ec:	bl	111e8 <gettimeofday@plt>
   128f0:	ldr	r3, [sp, #24]
   128f4:	ldr	r2, [sp, #56]	; 0x38
   128f8:	sub	r3, r3, #8
   128fc:	cmp	r3, #7
   12900:	vmovls.f64	d8, d9
   12904:	bhi	12b2c <__assert_fail@plt+0x1728>
   12908:	ldr	r3, [r9]
   1290c:	tst	r3, #8
   12910:	bne	129d4 <__assert_fail@plt+0x15d0>
   12914:	ands	r2, r3, #1
   12918:	bne	12c1c <__assert_fail@plt+0x1818>
   1291c:	tst	r3, #4
   12920:	mov	r1, #28
   12924:	str	r2, [sp]
   12928:	moveq	r6, #32
   1292c:	mov	r3, #256	; 0x100
   12930:	ldr	r0, [sp, #44]	; 0x2c
   12934:	stmib	sp, {r2, r6}
   12938:	add	r2, sp, #560	; 0x230
   1293c:	bl	1132c <getnameinfo@plt>
   12940:	subs	r3, r0, #0
   12944:	beq	12984 <__assert_fail@plt+0x1580>
   12948:	cmn	r3, #11
   1294c:	beq	12c30 <__assert_fail@plt+0x182c>
   12950:	bl	11140 <gai_strerror@plt>
   12954:	mov	r2, r0
   12958:	movw	r3, #50136	; 0xc3d8
   1295c:	movt	r3, #2
   12960:	movw	r1, #41932	; 0xa3cc
   12964:	movt	r1, #1
   12968:	ldr	r0, [r3]
   1296c:	bl	112a8 <fprintf@plt>
   12970:	movw	r3, #41956	; 0xa3e4
   12974:	movt	r3, #1
   12978:	ldrd	r2, [r3]
   1297c:	add	r1, sp, #560	; 0x230
   12980:	strd	r2, [r1]
   12984:	ldrh	r3, [r5, #6]
   12988:	movw	r0, #41964	; 0xa3ec
   1298c:	movt	r0, #1
   12990:	add	r2, sp, #560	; 0x230
   12994:	ldr	r1, [sp, #24]
   12998:	rev16	r3, r3
   1299c:	uxth	r3, r3
   129a0:	bl	110f8 <printf@plt>
   129a4:	cmp	r7, #0
   129a8:	bge	12adc <__assert_fail@plt+0x16d8>
   129ac:	ldr	r3, [sp, #32]
   129b0:	cmp	r3, #0
   129b4:	bne	12b0c <__assert_fail@plt+0x1708>
   129b8:	ldr	r3, [sp, #60]	; 0x3c
   129bc:	cmp	r3, #0
   129c0:	bne	12afc <__assert_fail@plt+0x16f8>
   129c4:	ldr	r3, [sp, #40]	; 0x28
   129c8:	mov	r0, #10
   129cc:	ldr	r1, [r3]
   129d0:	bl	11374 <putc@plt>
   129d4:	ldr	r3, [sp, #20]
   129d8:	add	r3, r3, #1
   129dc:	str	r3, [sp, #20]
   129e0:	ldr	r3, [sp, #28]
   129e4:	cmp	r3, #0
   129e8:	bne	127d4 <__assert_fail@plt+0x13d0>
   129ec:	add	r0, sp, #92	; 0x5c
   129f0:	mov	r1, r3
   129f4:	str	r0, [sp, #28]
   129f8:	bl	111e8 <gettimeofday@plt>
   129fc:	b	127d4 <__assert_fail@plt+0x13d0>
   12a00:	ldr	r2, [r3, #36]	; 0x24
   12a04:	ldr	r1, [r5, #36]	; 0x24
   12a08:	cmp	r1, r2
   12a0c:	bne	127c8 <__assert_fail@plt+0x13c4>
   12a10:	ldr	r2, [r3, #40]	; 0x28
   12a14:	ldr	r1, [r5, #40]	; 0x28
   12a18:	cmp	r1, r2
   12a1c:	bne	127c8 <__assert_fail@plt+0x13c4>
   12a20:	ldr	r3, [r3, #44]	; 0x2c
   12a24:	ldr	r2, [r5, #44]	; 0x2c
   12a28:	cmp	r2, r3
   12a2c:	bne	127c8 <__assert_fail@plt+0x13c4>
   12a30:	ldrb	r3, [r5, #14]
   12a34:	cmp	r3, #58	; 0x3a
   12a38:	bne	127c8 <__assert_fail@plt+0x13c4>
   12a3c:	ldrb	r3, [r5, #48]	; 0x30
   12a40:	cmp	r3, #128	; 0x80
   12a44:	bne	127c8 <__assert_fail@plt+0x13c4>
   12a48:	ldr	r3, [r4, #60]	; 0x3c
   12a4c:	ldrh	r2, [r5, #52]	; 0x34
   12a50:	rev16	r3, r3
   12a54:	uxth	r3, r3
   12a58:	cmp	r2, r3
   12a5c:	bne	127c8 <__assert_fail@plt+0x13c4>
   12a60:	mov	r1, #28
   12a64:	ldr	r0, [sp, #44]	; 0x2c
   12a68:	bl	131c4 <__assert_fail@plt+0x1dc0>
   12a6c:	mov	r2, r0
   12a70:	mov	r6, r0
   12a74:	ldr	r1, [sp, #24]
   12a78:	movw	r0, #42028	; 0xa42c
   12a7c:	movt	r0, #1
   12a80:	bl	110f8 <printf@plt>
   12a84:	mov	r0, r6
   12a88:	bl	17f08 <argp_parse@@Base+0xfe4>
   12a8c:	ldrb	r1, [r5]
   12a90:	ldr	r3, [pc, #-552]	; 12870 <__assert_fail@plt+0x146c>
   12a94:	ldr	r2, [r3]
   12a98:	cmp	r2, r1
   12a9c:	beq	12c44 <__assert_fail@plt+0x1840>
   12aa0:	ldr	r2, [pc, #-564]	; 12874 <__assert_fail@plt+0x1470>
   12aa4:	add	r3, r3, #8
   12aa8:	cmp	r3, r2
   12aac:	bne	12a94 <__assert_fail@plt+0x1690>
   12ab0:	movw	r0, #42048	; 0xa440
   12ab4:	movt	r0, #1
   12ab8:	bl	110f8 <printf@plt>
   12abc:	b	129d4 <__assert_fail@plt+0x15d0>
   12ac0:	mov	r0, #1
   12ac4:	orr	r2, r2, r0, lsl ip
   12ac8:	strb	r2, [r1, r3, asr #3]
   12acc:	ldr	r3, [r4, #116]	; 0x74
   12ad0:	add	r3, r3, r0
   12ad4:	str	r3, [r4, #116]	; 0x74
   12ad8:	b	128d4 <__assert_fail@plt+0x14d0>
   12adc:	mov	r1, r7
   12ae0:	movw	r0, #41996	; 0xa40c
   12ae4:	movt	r0, #1
   12ae8:	bl	110f8 <printf@plt>
   12aec:	ldr	r3, [sp, #32]
   12af0:	cmp	r3, #0
   12af4:	beq	129b8 <__assert_fail@plt+0x15b4>
   12af8:	b	12b0c <__assert_fail@plt+0x1708>
   12afc:	movw	r0, #42020	; 0xa424
   12b00:	movt	r0, #1
   12b04:	bl	110f8 <printf@plt>
   12b08:	b	129c4 <__assert_fail@plt+0x15c0>
   12b0c:	vmov	r2, r3, d8
   12b10:	movw	r0, #42004	; 0xa414
   12b14:	movt	r0, #1
   12b18:	bl	110f8 <printf@plt>
   12b1c:	ldr	r3, [sp, #60]	; 0x3c
   12b20:	cmp	r3, #0
   12b24:	beq	129c4 <__assert_fail@plt+0x15c0>
   12b28:	b	12afc <__assert_fail@plt+0x16f8>
   12b2c:	mov	r3, r5
   12b30:	add	r1, sp, #560	; 0x230
   12b34:	ldr	r0, [sp, #48]	; 0x30
   12b38:	str	r2, [sp, #32]
   12b3c:	ldr	ip, [r3, #8]!
   12b40:	ldr	r3, [r3, #4]
   12b44:	str	ip, [sp, #560]	; 0x230
   12b48:	str	r3, [sp, #564]	; 0x234
   12b4c:	bl	12ec8 <__assert_fail@plt+0x1ac4>
   12b50:	ldr	r2, [sp, #32]
   12b54:	mov	r3, #1
   12b58:	vldr	s15, [sp, #112]	; 0x70
   12b5c:	str	r3, [sp, #32]
   12b60:	vldr	d5, [r2]
   12b64:	vldr	d6, [r2, #24]
   12b68:	vcvt.f64.s32	d3, s15
   12b6c:	vldr	s15, [sp, #108]	; 0x6c
   12b70:	vdiv.f64	d8, d3, d10
   12b74:	vcvt.f64.s32	d4, s15
   12b78:	vldr	d7, [r2, #16]
   12b7c:	vmla.f64	d8, d4, d10
   12b80:	vmla.f64	d6, d8, d8
   12b84:	vadd.f64	d7, d7, d8
   12b88:	vcmpe.f64	d8, d5
   12b8c:	vstr	d7, [r2, #16]
   12b90:	vldr	d7, [r2, #8]
   12b94:	vmrs	APSR_nzcv, fpscr
   12b98:	vstr	d6, [r2, #24]
   12b9c:	vstrmi	d8, [r2]
   12ba0:	vcmpe.f64	d8, d7
   12ba4:	vmrs	APSR_nzcv, fpscr
   12ba8:	vstrgt	d8, [r2, #8]
   12bac:	b	12908 <__assert_fail@plt+0x1504>
   12bb0:	mov	r0, #0
   12bb4:	bl	17f08 <argp_parse@@Base+0xfe4>
   12bb8:	mov	r3, r7
   12bbc:	movw	r2, #41832	; 0xa368
   12bc0:	movt	r2, #1
   12bc4:	mov	r1, #0
   12bc8:	mov	r0, #1
   12bcc:	bl	111f4 <error@plt>
   12bd0:	b	12394 <__assert_fail@plt+0xf90>
   12bd4:	ldr	r3, [sl, #36]	; 0x24
   12bd8:	movw	r0, #41896	; 0xa3a8
   12bdc:	movt	r0, #1
   12be0:	ldr	r2, [r3, #60]	; 0x3c
   12be4:	mov	r1, r2
   12be8:	bl	110f8 <printf@plt>
   12bec:	b	12410 <__assert_fail@plt+0x100c>
   12bf0:	movw	r2, #41800	; 0xa348
   12bf4:	movt	r2, #1
   12bf8:	mov	r1, #0
   12bfc:	mov	r0, #1
   12c00:	bl	111f4 <error@plt>
   12c04:	b	122d0 <__assert_fail@plt+0xecc>
   12c08:	bl	112b4 <__errno_location@plt>
   12c0c:	ldr	r0, [r0]
   12c10:	bl	11230 <strerror@plt>
   12c14:	mov	r3, r0
   12c18:	b	123d4 <__assert_fail@plt+0xfd0>
   12c1c:	ldr	r3, [sp, #40]	; 0x28
   12c20:	mov	r0, #8
   12c24:	ldr	r1, [r3]
   12c28:	bl	11374 <putc@plt>
   12c2c:	b	129d4 <__assert_fail@plt+0x15d0>
   12c30:	bl	112b4 <__errno_location@plt>
   12c34:	ldr	r0, [r0]
   12c38:	bl	11230 <strerror@plt>
   12c3c:	mov	r2, r0
   12c40:	b	12958 <__assert_fail@plt+0x1554>
   12c44:	mov	r0, r5
   12c48:	ldr	r3, [r3, #4]
   12c4c:	blx	r3
   12c50:	ldr	r3, [r9]
   12c54:	tst	r3, #32
   12c58:	beq	129d4 <__assert_fail@plt+0x15d0>
   12c5c:	mov	r0, r5
   12c60:	bl	1210c <__assert_fail@plt+0xd08>
   12c64:	b	129d4 <__assert_fail@plt+0x15d0>
   12c68:	strd	r4, [sp, #-20]!	; 0xffffffec
   12c6c:	mov	r5, r2
   12c70:	mov	r2, #0
   12c74:	strd	r6, [sp, #8]
   12c78:	mov	r6, r1
   12c7c:	mov	r7, r0
   12c80:	str	lr, [sp, #16]
   12c84:	sub	sp, sp, #20
   12c88:	add	r1, sp, #12
   12c8c:	bl	11284 <strtoul@plt>
   12c90:	ldr	r3, [sp, #12]
   12c94:	mov	r4, r0
   12c98:	ldrb	r2, [r3]
   12c9c:	cmp	r2, #0
   12ca0:	bne	12d04 <__assert_fail@plt+0x1900>
   12ca4:	orrs	r1, r5, r4
   12ca8:	beq	12cec <__assert_fail@plt+0x18e8>
   12cac:	cmp	r6, #0
   12cb0:	cmpne	r4, r6
   12cb4:	bhi	12cd0 <__assert_fail@plt+0x18cc>
   12cb8:	mov	r0, r4
   12cbc:	add	sp, sp, #20
   12cc0:	ldrd	r4, [sp]
   12cc4:	ldrd	r6, [sp, #8]
   12cc8:	add	sp, sp, #16
   12ccc:	pop	{pc}		; (ldr pc, [sp], #4)
   12cd0:	mov	r3, r7
   12cd4:	movw	r2, #43212	; 0xa8cc
   12cd8:	movt	r2, #1
   12cdc:	mov	r1, #0
   12ce0:	mov	r0, #1
   12ce4:	bl	111f4 <error@plt>
   12ce8:	b	12cb8 <__assert_fail@plt+0x18b4>
   12cec:	mov	r3, r7
   12cf0:	movw	r2, #41140	; 0xa0b4
   12cf4:	movt	r2, #1
   12cf8:	mov	r0, #1
   12cfc:	bl	111f4 <error@plt>
   12d00:	b	12cb8 <__assert_fail@plt+0x18b4>
   12d04:	movw	r2, #43180	; 0xa8ac
   12d08:	movt	r2, #1
   12d0c:	str	r3, [sp]
   12d10:	mov	r1, #0
   12d14:	mov	r0, #1
   12d18:	mov	r3, r7
   12d1c:	bl	111f4 <error@plt>
   12d20:	b	12ca4 <__assert_fail@plt+0x18a0>
   12d24:	strd	r4, [sp, #-16]!
   12d28:	movw	r5, #49468	; 0xc13c
   12d2c:	movt	r5, #2
   12d30:	ldr	r2, [r5]
   12d34:	str	r6, [sp, #8]
   12d38:	str	lr, [sp, #12]
   12d3c:	cmp	r2, #0
   12d40:	bne	12d54 <__assert_fail@plt+0x1950>
   12d44:	ldrd	r4, [sp]
   12d48:	ldr	r6, [sp, #8]
   12d4c:	add	sp, sp, #12
   12d50:	pop	{pc}		; (ldr pc, [sp], #4)
   12d54:	mov	r4, r0
   12d58:	mov	r0, r2
   12d5c:	mov	r6, r1
   12d60:	bl	1857c <argp_parse@@Base+0x1658>
   12d64:	movw	r2, #50248	; 0xc448
   12d68:	movt	r2, #2
   12d6c:	cmp	r4, #0
   12d70:	str	r0, [r2]
   12d74:	beq	12dc0 <__assert_fail@plt+0x19bc>
   12d78:	ldr	r1, [r5]
   12d7c:	add	r1, r0, r1
   12d80:	cmp	r0, r1
   12d84:	bcs	12d44 <__assert_fail@plt+0x1940>
   12d88:	sub	r2, r0, #1
   12d8c:	sub	r1, r1, #1
   12d90:	mov	r3, #0
   12d94:	ldrb	r0, [r4, r3]
   12d98:	add	r3, r3, #1
   12d9c:	cmp	r3, r6
   12da0:	movcs	r3, #0
   12da4:	strb	r0, [r2, #1]!
   12da8:	cmp	r2, r1
   12dac:	bne	12d94 <__assert_fail@plt+0x1990>
   12db0:	ldrd	r4, [sp]
   12db4:	ldr	r6, [sp, #8]
   12db8:	add	sp, sp, #12
   12dbc:	pop	{pc}		; (ldr pc, [sp], #4)
   12dc0:	ldr	r3, [r5]
   12dc4:	cmp	r3, #0
   12dc8:	movne	r3, r4
   12dcc:	bne	12dd8 <__assert_fail@plt+0x19d4>
   12dd0:	b	12d44 <__assert_fail@plt+0x1940>
   12dd4:	ldr	r0, [r2]
   12dd8:	strb	r3, [r0, r3]
   12ddc:	add	r3, r3, #1
   12de0:	ldr	r1, [r5]
   12de4:	cmp	r1, r3
   12de8:	bhi	12dd4 <__assert_fail@plt+0x19d0>
   12dec:	ldrd	r4, [sp]
   12df0:	ldr	r6, [sp, #8]
   12df4:	add	sp, sp, #12
   12df8:	pop	{pc}		; (ldr pc, [sp], #4)
   12dfc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12e00:	strd	r6, [sp, #8]
   12e04:	strd	r8, [sp, #16]
   12e08:	mov	r9, r1
   12e0c:	str	lr, [sp, #24]
   12e10:	sub	sp, sp, #12
   12e14:	ldrb	r5, [r0]
   12e18:	cmp	r5, #0
   12e1c:	beq	12ea4 <__assert_fail@plt+0x1aa0>
   12e20:	ldr	r3, [r1]
   12e24:	cmp	r3, #0
   12e28:	ble	12ec0 <__assert_fail@plt+0x1abc>
   12e2c:	movw	r8, #43240	; 0xa8e8
   12e30:	movt	r8, #1
   12e34:	movw	r7, #43248	; 0xa8f0
   12e38:	movt	r7, #1
   12e3c:	mov	r4, r0
   12e40:	sub	r6, r2, #1
   12e44:	mov	r5, #0
   12e48:	b	12e58 <__assert_fail@plt+0x1a54>
   12e4c:	ldr	r3, [r9]
   12e50:	cmp	r3, r5
   12e54:	ble	12ea4 <__assert_fail@plt+0x1aa0>
   12e58:	add	r3, sp, #4
   12e5c:	mov	r2, sp
   12e60:	mov	r1, r8
   12e64:	mov	r0, r4
   12e68:	bl	11368 <sscanf@plt>
   12e6c:	cmp	r0, #1
   12e70:	mov	r3, r4
   12e74:	mov	r2, r7
   12e78:	mov	r1, #0
   12e7c:	mov	r0, #1
   12e80:	beq	12e88 <__assert_fail@plt+0x1a84>
   12e84:	bl	111f4 <error@plt>
   12e88:	ldr	r3, [sp]
   12e8c:	add	r5, r5, #1
   12e90:	ldr	r2, [sp, #4]
   12e94:	strb	r3, [r6, #1]!
   12e98:	ldrb	r3, [r4, r2]!
   12e9c:	cmp	r3, #0
   12ea0:	bne	12e4c <__assert_fail@plt+0x1a48>
   12ea4:	str	r5, [r9]
   12ea8:	add	sp, sp, #12
   12eac:	ldrd	r4, [sp]
   12eb0:	ldrd	r6, [sp, #8]
   12eb4:	ldrd	r8, [sp, #16]
   12eb8:	add	sp, sp, #24
   12ebc:	pop	{pc}		; (ldr pc, [sp], #4)
   12ec0:	mov	r5, #0
   12ec4:	b	12ea4 <__assert_fail@plt+0x1aa0>
   12ec8:	ldrd	r2, [r0]
   12ecc:	ldr	ip, [r1, #4]
   12ed0:	sub	r3, r3, ip
   12ed4:	cmp	r3, #0
   12ed8:	str	r3, [r0, #4]
   12edc:	bge	12ef0 <__assert_fail@plt+0x1aec>
   12ee0:	add	r3, r3, #999424	; 0xf4000
   12ee4:	sub	r2, r2, #1
   12ee8:	add	r3, r3, #576	; 0x240
   12eec:	strd	r2, [r0]
   12ef0:	ldr	r3, [r1]
   12ef4:	sub	r2, r2, r3
   12ef8:	str	r2, [r0]
   12efc:	bx	lr
   12f00:	vcmpe.f64	d0, #0.0
   12f04:	vmrs	APSR_nzcv, fpscr
   12f08:	vnegmi.f64	d0, d0
   12f0c:	bx	lr
   12f10:	vcmpe.f64	d0, #0.0
   12f14:	vmrs	APSR_nzcv, fpscr
   12f18:	bmi	12f68 <__assert_fail@plt+0x1b64>
   12f1c:	vcmpe.f64	d0, d1
   12f20:	vmrs	APSR_nzcv, fpscr
   12f24:	bmi	12f68 <__assert_fail@plt+0x1b64>
   12f28:	vldr	d6, [pc, #72]	; 12f78 <__assert_fail@plt+0x1b74>
   12f2c:	vmov.f64	d4, d6
   12f30:	vmul.f64	d6, d0, d6
   12f34:	vdiv.f64	d7, d0, d6
   12f38:	vadd.f64	d7, d7, d6
   12f3c:	vmul.f64	d7, d7, d4
   12f40:	vsub.f64	d5, d7, d6
   12f44:	vmov.f64	d6, d7
   12f48:	vcmpe.f64	d5, #0.0
   12f4c:	vmrs	APSR_nzcv, fpscr
   12f50:	vnegmi.f64	d5, d5
   12f54:	vcmpe.f64	d1, d5
   12f58:	vmrs	APSR_nzcv, fpscr
   12f5c:	bmi	12f34 <__assert_fail@plt+0x1b30>
   12f60:	vmov.f64	d0, d7
   12f64:	bx	lr
   12f68:	vldr	d7, [pc, #16]	; 12f80 <__assert_fail@plt+0x1b7c>
   12f6c:	vmov.f64	d0, d7
   12f70:	bx	lr
   12f74:	nop	{0}
   12f78:	andeq	r0, r0, r0
   12f7c:	svccc	0x00e00000
	...
   12f88:	mvn	r0, r0
   12f8c:	lsr	r0, r0, #31
   12f90:	bx	lr
   12f94:	cmp	r2, #0
   12f98:	bic	r3, r2, #-2147483648	; 0x80000000
   12f9c:	str	r4, [sp, #-8]!
   12fa0:	movwge	r2, #43276	; 0xa90c
   12fa4:	movwlt	r2, #43280	; 0xa910
   12fa8:	str	lr, [sp, #4]
   12fac:	mov	r4, r0
   12fb0:	movtge	r2, #1
   12fb4:	movtlt	r2, #1
   12fb8:	bl	112c0 <snprintf@plt>
   12fbc:	mov	r0, r4
   12fc0:	ldr	r4, [sp]
   12fc4:	add	sp, sp, #4
   12fc8:	pop	{pc}		; (ldr pc, [sp], #4)
   12fcc:	ldr	r3, [r0, #80]	; 0x50
   12fd0:	strd	r4, [sp, #-16]!
   12fd4:	mov	r5, r0
   12fd8:	str	r6, [sp, #8]
   12fdc:	str	lr, [sp, #12]
   12fe0:	cmp	r3, #0
   12fe4:	beq	13008 <__assert_fail@plt+0x1c04>
   12fe8:	ldr	r4, [r5, #76]	; 0x4c
   12fec:	cmp	r4, #0
   12ff0:	movne	r0, #0
   12ff4:	beq	13030 <__assert_fail@plt+0x1c2c>
   12ff8:	ldrd	r4, [sp]
   12ffc:	ldr	r6, [sp, #8]
   13000:	add	sp, sp, #12
   13004:	pop	{pc}		; (ldr pc, [sp], #4)
   13008:	ldr	r0, [r0, #56]	; 0x38
   1300c:	cmp	r1, #0
   13010:	addne	r0, r0, #8
   13014:	addeq	r0, r0, #80	; 0x50
   13018:	bl	18a98 <argp_parse@@Base+0x1b74>
   1301c:	cmp	r0, #0
   13020:	str	r0, [r5, #80]	; 0x50
   13024:	bne	12fe8 <__assert_fail@plt+0x1be4>
   13028:	mvn	r0, #0
   1302c:	b	12ff8 <__assert_fail@plt+0x1bf4>
   13030:	ldr	r0, [r5, #72]	; 0x48
   13034:	bl	18a98 <argp_parse@@Base+0x1b74>
   13038:	cmp	r0, #0
   1303c:	str	r0, [r5, #76]	; 0x4c
   13040:	beq	13028 <__assert_fail@plt+0x1c24>
   13044:	mov	r1, r4
   13048:	ldr	r2, [r5, #72]	; 0x48
   1304c:	bl	112e4 <memset@plt>
   13050:	mov	r0, r4
   13054:	ldrd	r4, [sp]
   13058:	ldr	r6, [sp, #8]
   1305c:	add	sp, sp, #12
   13060:	pop	{pc}		; (ldr pc, [sp], #4)
   13064:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13068:	mov	r4, r2
   1306c:	mov	r5, r3
   13070:	strd	r6, [sp, #8]
   13074:	mov	r6, r0
   13078:	str	r8, [sp, #16]
   1307c:	mov	r8, r1
   13080:	ldrb	r1, [sp, #24]
   13084:	str	lr, [sp, #20]
   13088:	bl	12fcc <__assert_fail@plt+0x1bc8>
   1308c:	subs	r7, r0, #0
   13090:	bne	130d4 <__assert_fail@plt+0x1cd0>
   13094:	ldr	r2, [r6, #56]	; 0x38
   13098:	add	r3, r4, r5
   1309c:	cmp	r2, r3
   130a0:	bcc	130d4 <__assert_fail@plt+0x1cd0>
   130a4:	ldr	r0, [r6, #80]	; 0x50
   130a8:	mov	r2, r5
   130ac:	mov	r1, r8
   130b0:	add	r0, r0, #8
   130b4:	add	r0, r0, r4
   130b8:	bl	11158 <memcpy@plt>
   130bc:	mov	r0, r7
   130c0:	ldrd	r4, [sp]
   130c4:	ldrd	r6, [sp, #8]
   130c8:	ldr	r8, [sp, #16]
   130cc:	add	sp, sp, #20
   130d0:	pop	{pc}		; (ldr pc, [sp], #4)
   130d4:	mvn	r7, #0
   130d8:	b	130bc <__assert_fail@plt+0x1cb8>
   130dc:	str	r1, [r0, #8]
   130e0:	bx	lr
   130e4:	push	{lr}		; (str lr, [sp, #-4]!)
   130e8:	sub	sp, sp, #20
   130ec:	ldr	r0, [r0]
   130f0:	str	r3, [sp]
   130f4:	add	r3, sp, #12
   130f8:	str	r2, [sp, #12]
   130fc:	mov	r2, r1
   13100:	mov	r1, #1
   13104:	bl	110ec <setsockopt@plt>
   13108:	add	sp, sp, #20
   1310c:	pop	{pc}		; (ldr pc, [sp], #4)
   13110:	str	r1, [r0, #20]
   13114:	bx	lr
   13118:	str	r4, [sp, #-8]!
   1311c:	mov	r4, r0
   13120:	ldr	r0, [r0, #80]	; 0x50
   13124:	str	lr, [sp, #4]
   13128:	cmp	r0, #0
   1312c:	beq	1313c <__assert_fail@plt+0x1d38>
   13130:	bl	17f08 <argp_parse@@Base+0xfe4>
   13134:	mov	r3, #0
   13138:	str	r3, [r4, #80]	; 0x50
   1313c:	ldr	r0, [r4, #76]	; 0x4c
   13140:	cmp	r0, #0
   13144:	beq	13154 <__assert_fail@plt+0x1d50>
   13148:	bl	17f08 <argp_parse@@Base+0xfe4>
   1314c:	mov	r3, #0
   13150:	str	r3, [r4, #76]	; 0x4c
   13154:	ldr	r4, [sp]
   13158:	add	sp, sp, #4
   1315c:	pop	{pc}		; (ldr pc, [sp], #4)
   13160:	strd	r4, [sp, #-12]!
   13164:	mov	r4, r1
   13168:	mov	r5, r0
   1316c:	str	lr, [sp, #8]
   13170:	sub	sp, sp, #12
   13174:	mov	r1, #0
   13178:	mov	r0, sp
   1317c:	bl	111e8 <gettimeofday@plt>
   13180:	cmn	r4, #1
   13184:	moveq	r0, #0
   13188:	beq	131b4 <__assert_fail@plt+0x1db0>
   1318c:	ldm	sp, {r0, r3}
   13190:	ldr	r2, [r5, #4]
   13194:	sub	r3, r3, r2
   13198:	cmp	r3, #0
   1319c:	ldr	r3, [r5]
   131a0:	sublt	r0, r0, #1
   131a4:	sub	r0, r0, r3
   131a8:	cmp	r4, r0
   131ac:	movgt	r0, #0
   131b0:	movle	r0, #1
   131b4:	add	sp, sp, #12
   131b8:	ldrd	r4, [sp]
   131bc:	add	sp, sp, #8
   131c0:	pop	{pc}		; (ldr pc, [sp], #4)
   131c4:	mov	ip, #0
   131c8:	strd	r4, [sp, #-12]!
   131cc:	mov	r3, #46	; 0x2e
   131d0:	str	lr, [sp, #8]
   131d4:	sub	sp, sp, #324	; 0x144
   131d8:	mov	lr, #1
   131dc:	add	r2, sp, #16
   131e0:	mov	r4, r0
   131e4:	str	ip, [sp]
   131e8:	mov	r5, r1
   131ec:	stmib	sp, {ip, lr}
   131f0:	bl	1132c <getnameinfo@plt>
   131f4:	subs	r3, r0, #0
   131f8:	bne	132a0 <__assert_fail@plt+0x1e9c>
   131fc:	movw	r3, #50252	; 0xc44c
   13200:	movt	r3, #2
   13204:	ldr	r3, [r3]
   13208:	ands	r3, r3, #4
   1320c:	bne	13290 <__assert_fail@plt+0x1e8c>
   13210:	mov	ip, #40	; 0x28
   13214:	mov	r1, r5
   13218:	str	r3, [sp]
   1321c:	mov	r0, r4
   13220:	add	r2, sp, #64	; 0x40
   13224:	stmib	sp, {r3, ip}
   13228:	mov	r3, #256	; 0x100
   1322c:	bl	1132c <getnameinfo@plt>
   13230:	cmp	r0, #0
   13234:	add	r0, sp, #16
   13238:	bne	132dc <__assert_fail@plt+0x1ed8>
   1323c:	bl	11290 <strlen@plt>
   13240:	mov	r4, r0
   13244:	add	r0, sp, #64	; 0x40
   13248:	bl	11290 <strlen@plt>
   1324c:	add	r4, r4, r0
   13250:	add	r4, r4, #4
   13254:	mov	r0, r4
   13258:	bl	1857c <argp_parse@@Base+0x1658>
   1325c:	add	r3, sp, #16
   13260:	movw	r2, #43288	; 0xa918
   13264:	movt	r2, #1
   13268:	mov	r1, r4
   1326c:	str	r3, [sp]
   13270:	add	r3, sp, #64	; 0x40
   13274:	mov	r5, r0
   13278:	bl	112c0 <snprintf@plt>
   1327c:	mov	r0, r5
   13280:	add	sp, sp, #324	; 0x144
   13284:	ldrd	r4, [sp]
   13288:	add	sp, sp, #8
   1328c:	pop	{pc}		; (ldr pc, [sp], #4)
   13290:	add	r0, sp, #16
   13294:	bl	189cc <argp_parse@@Base+0x1aa8>
   13298:	mov	r5, r0
   1329c:	b	1327c <__assert_fail@plt+0x1e78>
   132a0:	cmn	r3, #11
   132a4:	beq	132e8 <__assert_fail@plt+0x1ee4>
   132a8:	bl	11140 <gai_strerror@plt>
   132ac:	mov	r2, r0
   132b0:	movw	r3, #50136	; 0xc3d8
   132b4:	movt	r3, #2
   132b8:	movw	r1, #41932	; 0xa3cc
   132bc:	movt	r1, #1
   132c0:	ldr	r0, [r3]
   132c4:	bl	112a8 <fprintf@plt>
   132c8:	movw	r0, #41956	; 0xa3e4
   132cc:	movt	r0, #1
   132d0:	bl	189cc <argp_parse@@Base+0x1aa8>
   132d4:	mov	r5, r0
   132d8:	b	1327c <__assert_fail@plt+0x1e78>
   132dc:	bl	189cc <argp_parse@@Base+0x1aa8>
   132e0:	mov	r5, r0
   132e4:	b	1327c <__assert_fail@plt+0x1e78>
   132e8:	bl	112b4 <__errno_location@plt>
   132ec:	ldr	r0, [r0]
   132f0:	bl	11230 <strerror@plt>
   132f4:	mov	r2, r0
   132f8:	b	132b0 <__assert_fail@plt+0x1eac>
   132fc:	movw	r3, #50252	; 0xc44c
   13300:	movt	r3, #2
   13304:	strd	r4, [sp, #-20]!	; 0xffffffec
   13308:	ldr	r3, [r3]
   1330c:	strd	r6, [sp, #8]
   13310:	str	lr, [sp, #16]
   13314:	sub	sp, sp, #20
   13318:	str	r0, [sp, #12]
   1331c:	tst	r3, #4
   13320:	bne	1339c <__assert_fail@plt+0x1f98>
   13324:	mov	r2, #2
   13328:	mov	r1, #4
   1332c:	add	r0, sp, #12
   13330:	bl	111a0 <gethostbyaddr@plt>
   13334:	subs	r6, r0, #0
   13338:	ldr	r0, [sp, #12]
   1333c:	beq	1339c <__assert_fail@plt+0x1f98>
   13340:	bl	1117c <inet_ntoa@plt>
   13344:	mov	r7, r0
   13348:	bl	11290 <strlen@plt>
   1334c:	mov	r4, r0
   13350:	ldr	r0, [r6]
   13354:	cmp	r0, #0
   13358:	addeq	r4, r4, #1
   1335c:	beq	1336c <__assert_fail@plt+0x1f68>
   13360:	bl	11290 <strlen@plt>
   13364:	add	r4, r4, #5
   13368:	add	r4, r4, r0
   1336c:	mov	r0, r4
   13370:	bl	1857c <argp_parse@@Base+0x1658>
   13374:	ldr	r3, [r6]
   13378:	mov	r5, r0
   1337c:	cmp	r3, #0
   13380:	beq	133c0 <__assert_fail@plt+0x1fbc>
   13384:	mov	r1, r4
   13388:	movw	r2, #43288	; 0xa918
   1338c:	movt	r2, #1
   13390:	str	r7, [sp]
   13394:	bl	112c0 <snprintf@plt>
   13398:	b	133a8 <__assert_fail@plt+0x1fa4>
   1339c:	bl	1117c <inet_ntoa@plt>
   133a0:	bl	189cc <argp_parse@@Base+0x1aa8>
   133a4:	mov	r5, r0
   133a8:	mov	r0, r5
   133ac:	add	sp, sp, #20
   133b0:	ldrd	r4, [sp]
   133b4:	ldrd	r6, [sp, #8]
   133b8:	add	sp, sp, #16
   133bc:	pop	{pc}		; (ldr pc, [sp], #4)
   133c0:	mov	r3, r7
   133c4:	mov	r1, r4
   133c8:	movw	r2, #41164	; 0xa0cc
   133cc:	movt	r2, #1
   133d0:	bl	112c0 <snprintf@plt>
   133d4:	b	133a8 <__assert_fail@plt+0x1fa4>
   133d8:	strd	r4, [sp, #-16]!
   133dc:	mov	r5, r0
   133e0:	ldr	r0, [r0, #12]
   133e4:	str	r6, [sp, #8]
   133e8:	str	lr, [sp, #12]
   133ec:	cmp	r0, #0
   133f0:	beq	13404 <__assert_fail@plt+0x2000>
   133f4:	ldr	r4, [r0, #24]
   133f8:	bl	17f08 <argp_parse@@Base+0xfe4>
   133fc:	subs	r0, r4, #0
   13400:	bne	133f4 <__assert_fail@plt+0x1ff0>
   13404:	ldr	r3, [r5, #4]
   13408:	cmp	r3, #0
   1340c:	bne	13428 <__assert_fail@plt+0x2024>
   13410:	mov	r0, r5
   13414:	ldrd	r4, [sp]
   13418:	ldr	r6, [sp, #8]
   1341c:	ldr	lr, [sp, #12]
   13420:	add	sp, sp, #16
   13424:	b	17f08 <argp_parse@@Base+0xfe4>
   13428:	ldr	r0, [r5]
   1342c:	bl	17f08 <argp_parse@@Base+0xfe4>
   13430:	ldr	r0, [r5, #8]
   13434:	bl	17f08 <argp_parse@@Base+0xfe4>
   13438:	b	13410 <__assert_fail@plt+0x200c>
   1343c:	ldr	r3, [r0, #12]
   13440:	strd	r4, [sp, #-16]!
   13444:	ldr	r2, [r1, #12]
   13448:	str	r6, [sp, #8]
   1344c:	str	lr, [sp, #12]
   13450:	cmp	r3, r2
   13454:	beq	134b4 <__assert_fail@plt+0x20b0>
   13458:	mov	r5, r1
   1345c:	mov	r4, r0
   13460:	mov	r1, r2
   13464:	mov	r0, r3
   13468:	bl	1343c <__assert_fail@plt+0x2038>
   1346c:	cmp	r0, #0
   13470:	bne	134a4 <__assert_fail@plt+0x20a0>
   13474:	ldr	r3, [r5, #8]
   13478:	ldr	r0, [r4, #8]
   1347c:	mvn	r2, r3
   13480:	lsr	r2, r2, #31
   13484:	cmp	r2, r0, lsr #31
   13488:	subne	r0, r0, r3
   1348c:	subeq	r0, r3, r0
   13490:	cmp	r0, #0
   13494:	bne	134a4 <__assert_fail@plt+0x20a0>
   13498:	ldr	r0, [r4, #4]
   1349c:	ldr	r3, [r5, #4]
   134a0:	sub	r0, r3, r0
   134a4:	ldrd	r4, [sp]
   134a8:	ldr	r6, [sp, #8]
   134ac:	add	sp, sp, #12
   134b0:	pop	{pc}		; (ldr pc, [sp], #4)
   134b4:	ldr	lr, [r1, #4]
   134b8:	ldr	r3, [r1, #8]
   134bc:	ldr	r2, [r0, #8]
   134c0:	ldr	ip, [r0, #4]
   134c4:	mvn	r1, r3
   134c8:	lsr	r1, r1, #31
   134cc:	ldrd	r4, [sp]
   134d0:	cmp	r1, r2, lsr #31
   134d4:	ldr	r6, [sp, #8]
   134d8:	add	sp, sp, #12
   134dc:	subne	r0, r2, r3
   134e0:	subeq	r0, r3, r2
   134e4:	cmp	r0, #0
   134e8:	subeq	r0, lr, ip
   134ec:	pop	{pc}		; (ldr pc, [sp], #4)
   134f0:	ldr	r2, [r0, #8]
   134f4:	cmp	r2, #0
   134f8:	beq	13504 <__assert_fail@plt+0x2100>
   134fc:	mov	r0, #0
   13500:	bx	lr
   13504:	ldr	r2, [r1, #8]
   13508:	cmp	r2, #0
   1350c:	bne	134fc <__assert_fail@plt+0x20f8>
   13510:	ldr	r2, [r0, #12]
   13514:	ldr	r1, [r1, #12]
   13518:	orr	r2, r2, r1
   1351c:	tst	r2, #16
   13520:	bne	134fc <__assert_fail@plt+0x20f8>
   13524:	ldr	r2, [r3]
   13528:	ldr	r1, [r0, #4]
   1352c:	add	r0, r2, #1
   13530:	str	r0, [r3]
   13534:	strb	r1, [r2]
   13538:	b	134fc <__assert_fail@plt+0x20f8>
   1353c:	strd	r4, [sp, #-16]!
   13540:	ldr	r4, [r0, #12]
   13544:	str	r6, [sp, #8]
   13548:	str	lr, [sp, #12]
   1354c:	ands	r4, r4, #8
   13550:	movne	r4, #0
   13554:	bne	13580 <__assert_fail@plt+0x217c>
   13558:	ldr	r5, [r0, #4]
   1355c:	sub	r3, r5, #1
   13560:	cmp	r3, #254	; 0xfe
   13564:	bhi	13580 <__assert_fail@plt+0x217c>
   13568:	bl	11260 <__ctype_b_loc@plt>
   1356c:	ldr	r2, [r0]
   13570:	lsl	r3, r5, #1
   13574:	ldrh	r3, [r2, r3]
   13578:	tst	r3, #16384	; 0x4000
   1357c:	movne	r4, r5
   13580:	mov	r0, r4
   13584:	ldrd	r4, [sp]
   13588:	ldr	r6, [sp, #8]
   1358c:	add	sp, sp, #12
   13590:	pop	{pc}		; (ldr pc, [sp], #4)
   13594:	str	r4, [sp, #-8]!
   13598:	mov	r4, r0
   1359c:	str	lr, [sp, #4]
   135a0:	bl	11260 <__ctype_b_loc@plt>
   135a4:	ldr	lr, [r0]
   135a8:	ldr	r2, [r4]
   135ac:	b	135b4 <__assert_fail@plt+0x21b0>
   135b0:	str	r2, [r4]
   135b4:	ldrb	r1, [r2]
   135b8:	mov	r3, r2
   135bc:	add	r2, r2, #1
   135c0:	lsl	r0, r1, #1
   135c4:	ldrh	ip, [lr, r0]
   135c8:	tst	ip, #8192	; 0x2000
   135cc:	bne	135b0 <__assert_fail@plt+0x21ac>
   135d0:	subs	r0, r1, #45	; 0x2d
   135d4:	movne	r0, #1
   135d8:	cmp	r1, #0
   135dc:	beq	13610 <__assert_fail@plt+0x220c>
   135e0:	tst	ip, #8
   135e4:	beq	135f8 <__assert_fail@plt+0x21f4>
   135e8:	b	13610 <__assert_fail@plt+0x220c>
   135ec:	ldrh	r2, [lr, r1]
   135f0:	tst	r2, #8
   135f4:	bne	13610 <__assert_fail@plt+0x220c>
   135f8:	add	r3, r3, #1
   135fc:	str	r3, [r4]
   13600:	ldrb	r2, [r3]
   13604:	cmp	r2, #0
   13608:	lsl	r1, r2, #1
   1360c:	bne	135ec <__assert_fail@plt+0x21e8>
   13610:	ldr	r4, [sp]
   13614:	add	sp, sp, #4
   13618:	pop	{pc}		; (ldr pc, [sp], #4)
   1361c:	cmp	r1, #0
   13620:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13624:	strd	r6, [sp, #8]
   13628:	str	r8, [sp, #16]
   1362c:	str	lr, [sp, #20]
   13630:	beq	136b8 <__assert_fail@plt+0x22b4>
   13634:	mov	r6, r0
   13638:	mov	r8, r2
   1363c:	sub	r7, r1, #1
   13640:	ldrd	r4, [r6]
   13644:	cmp	r5, #0
   13648:	sub	r5, r5, #1
   1364c:	beq	1368c <__assert_fail@plt+0x2288>
   13650:	add	r4, r4, #24
   13654:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13658:	sub	r5, r5, #1
   1365c:	cmp	r0, #0
   13660:	beq	13680 <__assert_fail@plt+0x227c>
   13664:	ldr	r3, [r4, #-12]
   13668:	mov	r1, r8
   1366c:	tst	r3, #2
   13670:	bne	13680 <__assert_fail@plt+0x227c>
   13674:	bl	110d4 <strcmp@plt>
   13678:	cmp	r0, #0
   1367c:	beq	136a0 <__assert_fail@plt+0x229c>
   13680:	cmn	r5, #1
   13684:	add	r4, r4, #24
   13688:	bne	13654 <__assert_fail@plt+0x2250>
   1368c:	sub	r7, r7, #1
   13690:	add	r6, r6, #28
   13694:	cmn	r7, #1
   13698:	bne	13640 <__assert_fail@plt+0x223c>
   1369c:	mov	r6, #0
   136a0:	mov	r0, r6
   136a4:	ldrd	r4, [sp]
   136a8:	ldrd	r6, [sp, #8]
   136ac:	ldr	r8, [sp, #16]
   136b0:	add	sp, sp, #20
   136b4:	pop	{pc}		; (ldr pc, [sp], #4)
   136b8:	mov	r6, r1
   136bc:	b	136a0 <__assert_fail@plt+0x229c>
   136c0:	strd	r4, [sp, #-16]!
   136c4:	subs	r5, r0, #0
   136c8:	mov	r4, r1
   136cc:	str	r6, [sp, #8]
   136d0:	str	lr, [sp, #12]
   136d4:	beq	136e8 <__assert_fail@plt+0x22e4>
   136d8:	mov	r1, #10
   136dc:	bl	1129c <strchr@plt>
   136e0:	adds	r5, r0, #0
   136e4:	movne	r5, #1
   136e8:	cmp	r4, #0
   136ec:	beq	13718 <__assert_fail@plt+0x2314>
   136f0:	ldr	r3, [r4]
   136f4:	cmp	r3, #0
   136f8:	beq	13718 <__assert_fail@plt+0x2314>
   136fc:	ldr	r0, [r3, #8]
   13700:	ldr	r1, [r3, #16]
   13704:	bl	136c0 <__assert_fail@plt+0x22bc>
   13708:	ldr	r3, [r4, #16]!
   1370c:	add	r5, r5, r0
   13710:	cmp	r3, #0
   13714:	bne	136fc <__assert_fail@plt+0x22f8>
   13718:	mov	r0, r5
   1371c:	ldrd	r4, [sp]
   13720:	ldr	r6, [sp, #8]
   13724:	add	sp, sp, #12
   13728:	pop	{pc}		; (ldr pc, [sp], #4)
   1372c:	strd	r4, [sp, #-16]!
   13730:	mov	r5, r1
   13734:	mov	r1, r3
   13738:	str	r6, [sp, #8]
   1373c:	mov	r6, r0
   13740:	mov	r0, r2
   13744:	mov	r4, r2
   13748:	str	lr, [sp, #12]
   1374c:	bl	17da4 <argp_parse@@Base+0xe80>
   13750:	mov	r2, r0
   13754:	mov	r1, r6
   13758:	ldr	r6, [sp, #8]
   1375c:	mov	r0, r5
   13760:	ldr	lr, [sp, #12]
   13764:	ldr	r3, [r4, #20]
   13768:	ldrd	r4, [sp]
   1376c:	add	sp, sp, #16
   13770:	bx	r3
   13774:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13778:	ldr	r4, [r0]
   1377c:	strd	r6, [sp, #8]
   13780:	strd	r8, [sp, #16]
   13784:	strd	sl, [sp, #24]
   13788:	str	lr, [sp, #32]
   1378c:	sub	sp, sp, #52	; 0x34
   13790:	ldr	r7, [r0, #16]
   13794:	str	r1, [sp]
   13798:	str	r0, [sp, #4]
   1379c:	mov	r0, #16
   137a0:	bl	18a98 <argp_parse@@Base+0x1b74>
   137a4:	subs	fp, r0, #0
   137a8:	beq	13ddc <__assert_fail@plt+0x29d8>
   137ac:	mov	r3, #0
   137b0:	cmp	r4, r3
   137b4:	str	r3, [fp, #4]
   137b8:	str	r3, [fp, #12]
   137bc:	beq	13a20 <__assert_fail@plt+0x261c>
   137c0:	ldr	r0, [r4, #12]
   137c4:	ands	r0, r0, #4
   137c8:	bne	13e18 <__assert_fail@plt+0x2a14>
   137cc:	mov	r9, r0
   137d0:	add	r5, r4, #24
   137d4:	mov	r8, r0
   137d8:	b	13828 <__assert_fail@plt+0x2424>
   137dc:	ldr	r3, [r5, #-12]
   137e0:	tst	r3, #4
   137e4:	bne	137f4 <__assert_fail@plt+0x23f0>
   137e8:	add	r9, r9, #1
   137ec:	str	r9, [fp, #4]
   137f0:	ldr	r3, [r5, #-12]
   137f4:	tst	r3, #8
   137f8:	bne	13824 <__assert_fail@plt+0x2420>
   137fc:	ldr	r6, [r5, #-20]	; 0xffffffec
   13800:	sub	r3, r6, #1
   13804:	cmp	r3, #254	; 0xfe
   13808:	bhi	13824 <__assert_fail@plt+0x2420>
   1380c:	bl	11260 <__ctype_b_loc@plt>
   13810:	ldr	r3, [r0]
   13814:	lsl	r6, r6, #1
   13818:	ldrh	r3, [r3, r6]
   1381c:	tst	r3, #16384	; 0x4000
   13820:	addne	r8, r8, #1
   13824:	add	r5, r5, #24
   13828:	ldr	r3, [r5, #-20]	; 0xffffffec
   1382c:	cmp	r3, #0
   13830:	bne	137dc <__assert_fail@plt+0x23d8>
   13834:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13838:	cmp	r3, #0
   1383c:	bne	137dc <__assert_fail@plt+0x23d8>
   13840:	ldr	r3, [r5, #-8]
   13844:	cmp	r3, #0
   13848:	bne	137dc <__assert_fail@plt+0x23d8>
   1384c:	ldr	sl, [r5, #-4]
   13850:	cmp	sl, #0
   13854:	bne	137dc <__assert_fail@plt+0x23d8>
   13858:	rsb	r9, r9, r9, lsl #3
   1385c:	lsl	r0, r9, #2
   13860:	bl	18a98 <argp_parse@@Base+0x1b74>
   13864:	str	r0, [fp]
   13868:	add	r0, r8, #1
   1386c:	bl	18a98 <argp_parse@@Base+0x1b74>
   13870:	ldr	r5, [fp]
   13874:	mov	r8, r0
   13878:	str	r0, [fp, #8]
   1387c:	cmp	r5, #0
   13880:	cmpne	r0, #0
   13884:	beq	13d80 <__assert_fail@plt+0x297c>
   13888:	ldr	r2, [fp, #4]
   1388c:	movw	r3, #37449	; 0x9249
   13890:	movt	r3, #2340	; 0x924
   13894:	cmp	r2, r3
   13898:	bhi	13da0 <__assert_fail@plt+0x299c>
   1389c:	mov	r6, r0
   138a0:	mov	r0, sl
   138a4:	str	r7, [sp, #8]
   138a8:	mov	r7, r8
   138ac:	ldr	sl, [sp]
   138b0:	add	r5, r5, #28
   138b4:	str	fp, [sp, #12]
   138b8:	ldr	r3, [r4, #4]
   138bc:	ldr	r8, [sp, #4]
   138c0:	cmp	r3, #0
   138c4:	ldr	fp, [r4, #20]
   138c8:	bne	138d8 <__assert_fail@plt+0x24d4>
   138cc:	ldr	ip, [r4]
   138d0:	cmp	ip, #0
   138d4:	beq	139b8 <__assert_fail@plt+0x25b4>
   138d8:	mov	r2, #0
   138dc:	cmp	fp, #0
   138e0:	str	r4, [r5, #-28]	; 0xffffffe4
   138e4:	str	r2, [r5, #-24]	; 0xffffffe8
   138e8:	str	r6, [r5, #-20]	; 0xffffffec
   138ec:	bne	13900 <__assert_fail@plt+0x24fc>
   138f0:	ldr	r2, [r4]
   138f4:	orrs	r3, r2, r3
   138f8:	movne	fp, r0
   138fc:	beq	139d8 <__assert_fail@plt+0x25d4>
   13900:	mov	r3, #0
   13904:	str	fp, [r5, #-16]
   13908:	str	sl, [r5, #-12]
   1390c:	str	r8, [r5, #-8]
   13910:	add	r3, r3, #1
   13914:	str	r3, [r5, #-24]	; 0xffffffe8
   13918:	ldr	r3, [r4, #12]
   1391c:	tst	r3, #8
   13920:	bne	13988 <__assert_fail@plt+0x2584>
   13924:	ldr	r9, [r4, #4]
   13928:	sub	r3, r9, #1
   1392c:	cmp	r3, #254	; 0xfe
   13930:	bhi	13988 <__assert_fail@plt+0x2584>
   13934:	bl	11260 <__ctype_b_loc@plt>
   13938:	ldr	r0, [r0]
   1393c:	lsl	r3, r9, #1
   13940:	ldrh	r3, [r0, r3]
   13944:	tst	r3, #16384	; 0x4000
   13948:	beq	13988 <__assert_fail@plt+0x2584>
   1394c:	cmp	r7, r6
   13950:	uxtb	r9, r9
   13954:	bcs	13984 <__assert_fail@plt+0x2580>
   13958:	ldrb	r3, [r7]
   1395c:	cmp	r3, r9
   13960:	beq	13988 <__assert_fail@plt+0x2584>
   13964:	mov	r3, r7
   13968:	sub	r0, r6, #1
   1396c:	b	1397c <__assert_fail@plt+0x2578>
   13970:	ldrb	ip, [r3, #1]!
   13974:	cmp	ip, r9
   13978:	beq	13988 <__assert_fail@plt+0x2584>
   1397c:	cmp	r0, r3
   13980:	bne	13970 <__assert_fail@plt+0x256c>
   13984:	strb	r9, [r6], #1
   13988:	add	r4, r4, #24
   1398c:	ldr	r0, [r4, #4]
   13990:	cmp	r0, #0
   13994:	bne	139a4 <__assert_fail@plt+0x25a0>
   13998:	ldr	r3, [r4]
   1399c:	cmp	r3, #0
   139a0:	beq	139e0 <__assert_fail@plt+0x25dc>
   139a4:	ldr	r3, [r4, #12]
   139a8:	tst	r3, #4
   139ac:	beq	13a04 <__assert_fail@plt+0x2600>
   139b0:	ldr	r3, [r5, #-24]	; 0xffffffe8
   139b4:	b	13910 <__assert_fail@plt+0x250c>
   139b8:	ldr	ip, [r4, #16]
   139bc:	cmp	ip, #0
   139c0:	beq	13a0c <__assert_fail@plt+0x2608>
   139c4:	cmp	fp, #0
   139c8:	str	r4, [r5, #-28]	; 0xffffffe4
   139cc:	str	r3, [r5, #-24]	; 0xffffffe8
   139d0:	str	r6, [r5, #-20]	; 0xffffffec
   139d4:	bne	13900 <__assert_fail@plt+0x24fc>
   139d8:	add	fp, r0, #1
   139dc:	b	13900 <__assert_fail@plt+0x24fc>
   139e0:	ldr	r3, [r4, #16]
   139e4:	cmp	r3, #0
   139e8:	bne	139a4 <__assert_fail@plt+0x25a0>
   139ec:	ldr	r3, [r4, #20]
   139f0:	cmp	r3, #0
   139f4:	bne	139a4 <__assert_fail@plt+0x25a0>
   139f8:	add	r5, r5, #28
   139fc:	mov	r0, fp
   13a00:	b	138c0 <__assert_fail@plt+0x24bc>
   13a04:	mov	r3, r0
   13a08:	b	139f8 <__assert_fail@plt+0x25f4>
   13a0c:	cmp	fp, #0
   13a10:	bne	13b5c <__assert_fail@plt+0x2758>
   13a14:	ldr	r7, [sp, #8]
   13a18:	strb	r3, [r6]
   13a1c:	ldr	fp, [sp, #12]
   13a20:	cmp	r7, #0
   13a24:	beq	13b3c <__assert_fail@plt+0x2738>
   13a28:	ldr	r3, [r7]
   13a2c:	cmp	r3, #0
   13a30:	beq	13b3c <__assert_fail@plt+0x2738>
   13a34:	movw	r3, #37449	; 0x9249
   13a38:	movt	r3, #2340	; 0x924
   13a3c:	mov	sl, r7
   13a40:	str	r3, [sp, #28]
   13a44:	add	r3, fp, #12
   13a48:	str	r3, [sp, #44]	; 0x2c
   13a4c:	ldr	r6, [sl, #8]
   13a50:	ldr	r5, [sl, #12]
   13a54:	cmp	r5, #0
   13a58:	bne	13a64 <__assert_fail@plt+0x2660>
   13a5c:	cmp	r6, #0
   13a60:	beq	13d60 <__assert_fail@plt+0x295c>
   13a64:	ldr	r7, [sp, #4]
   13a68:	mov	r0, #28
   13a6c:	ldr	r4, [r7, #16]
   13a70:	bl	18a98 <argp_parse@@Base+0x1b74>
   13a74:	subs	r1, r0, #0
   13a78:	beq	13ab8 <__assert_fail@plt+0x26b4>
   13a7c:	ldr	r3, [sp]
   13a80:	sub	r4, sl, r4
   13a84:	asr	r4, r4, #4
   13a88:	str	r6, [r1]
   13a8c:	ldr	r2, [fp, #12]
   13a90:	str	r1, [fp, #12]
   13a94:	strd	r4, [r1, #4]
   13a98:	cmp	r3, #0
   13a9c:	str	r3, [r1, #12]
   13aa0:	ldrne	r3, [r3, #20]
   13aa4:	str	r7, [r1, #16]
   13aa8:	ldreq	r3, [sp]
   13aac:	str	r2, [r1, #24]
   13ab0:	addne	r3, r3, #1
   13ab4:	str	r3, [r1, #20]
   13ab8:	ldr	r0, [sl]
   13abc:	bl	13774 <__assert_fail@plt+0x2370>
   13ac0:	ldr	r3, [fp, #12]
   13ac4:	mov	r6, r0
   13ac8:	cmp	r3, #0
   13acc:	bne	13ad8 <__assert_fail@plt+0x26d4>
   13ad0:	b	13d68 <__assert_fail@plt+0x2964>
   13ad4:	mov	r3, r2
   13ad8:	ldr	r2, [r3, #24]
   13adc:	cmp	r2, #0
   13ae0:	bne	13ad4 <__assert_fail@plt+0x26d0>
   13ae4:	add	r3, r3, #24
   13ae8:	ldr	r2, [r6, #4]
   13aec:	ldr	r1, [r6, #12]
   13af0:	cmp	r2, #0
   13af4:	str	r1, [r3]
   13af8:	mov	r3, #0
   13afc:	str	r3, [r6, #12]
   13b00:	beq	13b28 <__assert_fail@plt+0x2724>
   13b04:	ldr	r3, [fp, #4]
   13b08:	cmp	r3, #0
   13b0c:	bne	13b6c <__assert_fail@plt+0x2768>
   13b10:	ldr	r1, [r6]
   13b14:	str	r2, [fp, #4]
   13b18:	ldr	r2, [r6, #8]
   13b1c:	str	r1, [fp]
   13b20:	str	r2, [fp, #8]
   13b24:	str	r3, [r6, #4]
   13b28:	mov	r0, r6
   13b2c:	bl	133d8 <__assert_fail@plt+0x1fd4>
   13b30:	ldr	r3, [sl, #16]!
   13b34:	cmp	r3, #0
   13b38:	bne	13a4c <__assert_fail@plt+0x2648>
   13b3c:	mov	r0, fp
   13b40:	add	sp, sp, #52	; 0x34
   13b44:	ldrd	r4, [sp]
   13b48:	ldrd	r6, [sp, #8]
   13b4c:	ldrd	r8, [sp, #16]
   13b50:	ldrd	sl, [sp, #24]
   13b54:	add	sp, sp, #32
   13b58:	pop	{pc}		; (ldr pc, [sp], #4)
   13b5c:	str	r4, [r5, #-28]	; 0xffffffe4
   13b60:	str	r3, [r5, #-24]	; 0xffffffe8
   13b64:	str	r6, [r5, #-20]	; 0xffffffec
   13b68:	b	13900 <__assert_fail@plt+0x24fc>
   13b6c:	add	r3, r2, r3
   13b70:	rsb	r0, r3, r3, lsl #3
   13b74:	str	r3, [sp, #12]
   13b78:	lsl	r0, r0, #2
   13b7c:	bl	18a98 <argp_parse@@Base+0x1b74>
   13b80:	mov	r4, r0
   13b84:	ldr	r0, [fp, #8]
   13b88:	str	r4, [sp, #8]
   13b8c:	bl	11290 <strlen@plt>
   13b90:	mov	r8, r0
   13b94:	ldr	r0, [r6, #8]
   13b98:	bl	11290 <strlen@plt>
   13b9c:	add	r0, r8, r0
   13ba0:	add	r0, r0, #1
   13ba4:	bl	18a98 <argp_parse@@Base+0x1b74>
   13ba8:	cmp	r4, #0
   13bac:	cmpne	r0, #0
   13bb0:	mov	r9, r0
   13bb4:	beq	13dc0 <__assert_fail@plt+0x29bc>
   13bb8:	ldr	r3, [sp, #12]
   13bbc:	ldr	r2, [sp, #28]
   13bc0:	cmp	r3, r2
   13bc4:	bhi	13dfc <__assert_fail@plt+0x29f8>
   13bc8:	ldm	fp, {r1, r5}
   13bcc:	ldr	r0, [sp, #8]
   13bd0:	rsb	r4, r5, r5, lsl #3
   13bd4:	str	r1, [sp, #24]
   13bd8:	lsl	r4, r4, #2
   13bdc:	mov	r2, r4
   13be0:	bl	11254 <mempcpy@plt>
   13be4:	ldm	r6, {r1, r3}
   13be8:	rsb	r2, r3, r3, lsl #3
   13bec:	str	r3, [sp, #16]
   13bf0:	lsl	r2, r2, #2
   13bf4:	bl	11158 <memcpy@plt>
   13bf8:	ldr	r7, [fp, #8]
   13bfc:	mov	r2, r8
   13c00:	mov	r0, r9
   13c04:	mov	r1, r7
   13c08:	bl	11158 <memcpy@plt>
   13c0c:	cmp	r5, #0
   13c10:	ldr	r3, [sp, #16]
   13c14:	beq	13d70 <__assert_fail@plt+0x296c>
   13c18:	ldr	r1, [sp, #8]
   13c1c:	subs	r5, r5, #1
   13c20:	add	r1, r1, #28
   13c24:	ldr	r2, [r1, #-20]	; 0xffffffec
   13c28:	sub	r2, r2, r7
   13c2c:	add	r2, r9, r2
   13c30:	str	r2, [r1, #-20]	; 0xffffffec
   13c34:	bne	13c1c <__assert_fail@plt+0x2818>
   13c38:	ldr	r2, [sp, #8]
   13c3c:	add	r4, r2, r4
   13c40:	add	r2, r9, r8
   13c44:	cmp	r3, #0
   13c48:	ldr	r1, [r6, #8]
   13c4c:	str	r2, [sp, #16]
   13c50:	beq	13d78 <__assert_fail@plt+0x2974>
   13c54:	mov	r8, r2
   13c58:	add	r4, r4, #28
   13c5c:	str	r6, [sp, #32]
   13c60:	sub	r2, r2, #1
   13c64:	strd	sl, [sp, #36]	; 0x24
   13c68:	mov	sl, r1
   13c6c:	mov	fp, r3
   13c70:	str	r2, [sp, #20]
   13c74:	str	r8, [r4, #-20]	; 0xffffffec
   13c78:	ldr	r6, [r4, #-24]	; 0xffffffe8
   13c7c:	ldr	r7, [r4, #-28]	; 0xffffffe4
   13c80:	cmp	r6, #0
   13c84:	beq	13cd8 <__assert_fail@plt+0x28d4>
   13c88:	ldr	r3, [r7, #12]
   13c8c:	tst	r3, #8
   13c90:	bne	13ccc <__assert_fail@plt+0x28c8>
   13c94:	ldr	r5, [r7, #4]
   13c98:	sub	r3, r5, #1
   13c9c:	cmp	r3, #254	; 0xfe
   13ca0:	bhi	13ccc <__assert_fail@plt+0x28c8>
   13ca4:	bl	11260 <__ctype_b_loc@plt>
   13ca8:	ldr	r1, [r0]
   13cac:	lsl	r2, r5, #1
   13cb0:	ldrb	r3, [sl]
   13cb4:	ldrh	r2, [r1, r2]
   13cb8:	sub	r5, r3, r5
   13cbc:	clz	r5, r5
   13cc0:	lsr	r5, r5, #5
   13cc4:	ands	r2, r5, r2, lsr #14
   13cc8:	bne	13d1c <__assert_fail@plt+0x2918>
   13ccc:	subs	r6, r6, #1
   13cd0:	add	r7, r7, #24
   13cd4:	bne	13c88 <__assert_fail@plt+0x2884>
   13cd8:	subs	fp, fp, #1
   13cdc:	add	r4, r4, #28
   13ce0:	bne	13c74 <__assert_fail@plt+0x2870>
   13ce4:	add	r6, sp, #32
   13ce8:	ldm	r6, {r6, sl, fp}
   13cec:	mov	r3, #0
   13cf0:	strb	r3, [r8]
   13cf4:	ldr	r0, [sp, #24]
   13cf8:	bl	17f08 <argp_parse@@Base+0xfe4>
   13cfc:	ldr	r0, [fp, #8]
   13d00:	bl	17f08 <argp_parse@@Base+0xfe4>
   13d04:	ldr	r3, [sp, #8]
   13d08:	str	r3, [fp]
   13d0c:	ldr	r3, [sp, #12]
   13d10:	str	r9, [fp, #8]
   13d14:	str	r3, [fp, #4]
   13d18:	b	13b28 <__assert_fail@plt+0x2724>
   13d1c:	ldr	r2, [sp, #16]
   13d20:	cmp	r9, r2
   13d24:	bcs	13d54 <__assert_fail@plt+0x2950>
   13d28:	ldrb	r2, [r9]
   13d2c:	cmp	r2, r3
   13d30:	beq	13d58 <__assert_fail@plt+0x2954>
   13d34:	mov	r2, r9
   13d38:	ldr	r0, [sp, #20]
   13d3c:	b	13d4c <__assert_fail@plt+0x2948>
   13d40:	ldrb	r1, [r2, #1]!
   13d44:	cmp	r1, r3
   13d48:	beq	13d58 <__assert_fail@plt+0x2954>
   13d4c:	cmp	r2, r0
   13d50:	bne	13d40 <__assert_fail@plt+0x293c>
   13d54:	strb	r3, [r8], #1
   13d58:	add	sl, sl, #1
   13d5c:	b	13ccc <__assert_fail@plt+0x28c8>
   13d60:	ldr	r1, [sp]
   13d64:	b	13ab8 <__assert_fail@plt+0x26b4>
   13d68:	ldr	r3, [sp, #44]	; 0x2c
   13d6c:	b	13ae8 <__assert_fail@plt+0x26e4>
   13d70:	ldr	r4, [sp, #8]
   13d74:	b	13c40 <__assert_fail@plt+0x283c>
   13d78:	ldr	r8, [sp, #16]
   13d7c:	b	13cec <__assert_fail@plt+0x28e8>
   13d80:	movw	r3, #43296	; 0xa920
   13d84:	movt	r3, #1
   13d88:	movw	r1, #43464	; 0xa9c8
   13d8c:	movt	r1, #1
   13d90:	movw	r0, #43496	; 0xa9e8
   13d94:	movt	r0, #1
   13d98:	movw	r2, #474	; 0x1da
   13d9c:	bl	11404 <__assert_fail@plt>
   13da0:	movw	r3, #43296	; 0xa920
   13da4:	movt	r3, #1
   13da8:	movw	r1, #43464	; 0xa9c8
   13dac:	movt	r1, #1
   13db0:	movw	r0, #43532	; 0xaa0c
   13db4:	movt	r0, #1
   13db8:	mov	r2, #476	; 0x1dc
   13dbc:	bl	11404 <__assert_fail@plt>
   13dc0:	movw	r1, #43464	; 0xa9c8
   13dc4:	movt	r1, #1
   13dc8:	ldr	r3, [pc, #104]	; 13e38 <__assert_fail@plt+0x2a34>
   13dcc:	movw	r0, #43592	; 0xaa48
   13dd0:	movt	r0, #1
   13dd4:	movw	r2, #970	; 0x3ca
   13dd8:	bl	11404 <__assert_fail@plt>
   13ddc:	movw	r3, #43296	; 0xa920
   13de0:	movt	r3, #1
   13de4:	movw	r1, #43464	; 0xa9c8
   13de8:	movt	r1, #1
   13dec:	movw	r0, #43476	; 0xa9d4
   13df0:	movt	r0, #1
   13df4:	movw	r2, #450	; 0x1c2
   13df8:	bl	11404 <__assert_fail@plt>
   13dfc:	movw	r1, #43464	; 0xa9c8
   13e00:	movt	r1, #1
   13e04:	ldr	r3, [pc, #44]	; 13e38 <__assert_fail@plt+0x2a34>
   13e08:	movw	r0, #43620	; 0xaa64
   13e0c:	movt	r0, #1
   13e10:	mov	r2, #972	; 0x3cc
   13e14:	bl	11404 <__assert_fail@plt>
   13e18:	movw	r3, #43296	; 0xa920
   13e1c:	movt	r3, #1
   13e20:	movw	r1, #43464	; 0xa9c8
   13e24:	movt	r1, #1
   13e28:	movw	r0, #43480	; 0xa9d8
   13e2c:	movt	r0, #1
   13e30:	mov	r2, #460	; 0x1cc
   13e34:	bl	11404 <__assert_fail@plt>
   13e38:	andeq	sl, r1, ip, lsr #18
   13e3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13e40:	ldr	r5, [r0, #4]
   13e44:	strd	r6, [sp, #8]
   13e48:	strd	r8, [sp, #16]
   13e4c:	strd	sl, [sp, #24]
   13e50:	str	lr, [sp, #32]
   13e54:	sub	sp, sp, #12
   13e58:	cmp	r5, #0
   13e5c:	ldr	r7, [r0]
   13e60:	ldr	r6, [r0, #8]
   13e64:	beq	13f34 <__assert_fail@plt+0x2b30>
   13e68:	mov	sl, r3
   13e6c:	mov	r4, r7
   13e70:	stm	sp, {r1, r2}
   13e74:	ldr	fp, [r4, #12]
   13e78:	ands	r8, fp, #8
   13e7c:	movne	r0, #1
   13e80:	movne	r8, #0
   13e84:	bne	13ec0 <__assert_fail@plt+0x2abc>
   13e88:	ldr	r9, [r4, #4]
   13e8c:	sub	r1, r9, #1
   13e90:	cmp	r1, #254	; 0xfe
   13e94:	bhi	13ebc <__assert_fail@plt+0x2ab8>
   13e98:	bl	11260 <__ctype_b_loc@plt>
   13e9c:	ldr	r0, [r0]
   13ea0:	lsl	r1, r9, #1
   13ea4:	ldrh	r1, [r0, r1]
   13ea8:	tst	r1, #16384	; 0x4000
   13eac:	beq	13ebc <__assert_fail@plt+0x2ab8>
   13eb0:	ldrb	r1, [r6]
   13eb4:	cmp	r1, r9
   13eb8:	beq	13ef4 <__assert_fail@plt+0x2af0>
   13ebc:	mov	r0, #1
   13ec0:	subs	r5, r5, #1
   13ec4:	add	r4, r4, #24
   13ec8:	moveq	r0, #0
   13ecc:	cmp	r0, #0
   13ed0:	bne	13e74 <__assert_fail@plt+0x2a70>
   13ed4:	mov	r0, r8
   13ed8:	add	sp, sp, #12
   13edc:	ldrd	r4, [sp]
   13ee0:	ldrd	r6, [sp, #8]
   13ee4:	ldrd	r8, [sp, #16]
   13ee8:	ldrd	sl, [sp, #24]
   13eec:	add	sp, sp, #32
   13ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ef4:	tst	fp, #4
   13ef8:	moveq	r7, r4
   13efc:	tst	fp, #2
   13f00:	movne	r0, #1
   13f04:	bne	13f2c <__assert_fail@plt+0x2b28>
   13f08:	mov	r3, sl
   13f0c:	mov	r1, r7
   13f10:	ldr	ip, [sp]
   13f14:	mov	r0, r4
   13f18:	ldr	r2, [sp, #4]
   13f1c:	blx	ip
   13f20:	mov	r8, r0
   13f24:	clz	r0, r0
   13f28:	lsr	r0, r0, #5
   13f2c:	add	r6, r6, #1
   13f30:	b	13ec0 <__assert_fail@plt+0x2abc>
   13f34:	mov	r8, r5
   13f38:	b	13ed4 <__assert_fail@plt+0x2ad0>
   13f3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13f40:	strd	r6, [sp, #8]
   13f44:	strd	r8, [sp, #16]
   13f48:	strd	sl, [sp, #24]
   13f4c:	add	fp, sp, #32
   13f50:	str	lr, [sp, #32]
   13f54:	sub	sp, sp, #20
   13f58:	ldr	r5, [r0, #4]
   13f5c:	cmp	r5, #0
   13f60:	beq	140b0 <__assert_fail@plt+0x2cac>
   13f64:	mov	r6, r0
   13f68:	ldr	r0, [r0, #8]
   13f6c:	mov	r9, r1
   13f70:	bl	11290 <strlen@plt>
   13f74:	add	r3, r0, #8
   13f78:	ldr	r4, [r6]
   13f7c:	movw	r7, #13552	; 0x34f0
   13f80:	movt	r7, #1
   13f84:	bic	r3, r3, #7
   13f88:	sub	sp, sp, r3
   13f8c:	mov	r8, sp
   13f90:	str	r8, [fp, #-40]	; 0xffffffd8
   13f94:	ldr	r2, [r4, #20]
   13f98:	mov	r0, r4
   13f9c:	sub	r3, fp, #40	; 0x28
   13fa0:	mov	r1, r7
   13fa4:	add	r4, r4, #28
   13fa8:	ldr	r2, [r2, #24]
   13fac:	bl	13e3c <__assert_fail@plt+0x2a38>
   13fb0:	subs	r5, r5, #1
   13fb4:	bne	13f94 <__assert_fail@plt+0x2b90>
   13fb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13fbc:	cmp	r3, r8
   13fc0:	bhi	140f0 <__assert_fail@plt+0x2cec>
   13fc4:	ldrd	r4, [r6]
   13fc8:	cmp	r5, #0
   13fcc:	beq	140b0 <__assert_fail@plt+0x2cac>
   13fd0:	movw	r7, #17976	; 0x4638
   13fd4:	movt	r7, #1
   13fd8:	ldr	r2, [r4, #20]
   13fdc:	mov	r0, r4
   13fe0:	mov	r3, r9
   13fe4:	mov	r1, r7
   13fe8:	add	r4, r4, #28
   13fec:	ldr	r2, [r2, #24]
   13ff0:	bl	13e3c <__assert_fail@plt+0x2a38>
   13ff4:	subs	r5, r5, #1
   13ff8:	bne	13fd8 <__assert_fail@plt+0x2bd4>
   13ffc:	ldm	r6, {r7, r8}
   14000:	cmp	r8, #0
   14004:	beq	140b0 <__assert_fail@plt+0x2cac>
   14008:	movw	r3, #43680	; 0xaaa0
   1400c:	movt	r3, #1
   14010:	movw	sl, #43696	; 0xaab0
   14014:	movt	sl, #1
   14018:	add	r7, r7, #28
   1401c:	str	r3, [fp, #-48]	; 0xffffffd0
   14020:	movw	r3, #43708	; 0xaabc
   14024:	movt	r3, #1
   14028:	str	r3, [fp, #-52]	; 0xffffffcc
   1402c:	ldr	r6, [r7, #-28]	; 0xffffffe4
   14030:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14034:	cmp	r5, #0
   14038:	movne	r4, r6
   1403c:	beq	140a4 <__assert_fail@plt+0x2ca0>
   14040:	ldr	r2, [r4]
   14044:	cmp	r2, #0
   14048:	beq	14098 <__assert_fail@plt+0x2c94>
   1404c:	ldr	r1, [r4, #12]
   14050:	tst	r1, #4
   14054:	moveq	r6, r4
   14058:	tst	r1, #2
   1405c:	bne	14098 <__assert_fail@plt+0x2c94>
   14060:	ldr	r3, [r4, #8]
   14064:	ldr	r0, [r6, #12]
   14068:	cmp	r3, #0
   1406c:	orr	r1, r1, r0
   14070:	and	r0, r1, #16
   14074:	beq	140cc <__assert_fail@plt+0x2cc8>
   14078:	cmp	r0, #0
   1407c:	bne	14098 <__assert_fail@plt+0x2c94>
   14080:	tst	r1, #1
   14084:	movne	r0, r9
   14088:	ldrne	r1, [fp, #-48]	; 0xffffffd0
   1408c:	moveq	r1, sl
   14090:	moveq	r0, r9
   14094:	bl	19250 <argp_parse@@Base+0x232c>
   14098:	subs	r5, r5, #1
   1409c:	add	r4, r4, #24
   140a0:	bne	14040 <__assert_fail@plt+0x2c3c>
   140a4:	subs	r8, r8, #1
   140a8:	add	r7, r7, #28
   140ac:	bne	1402c <__assert_fail@plt+0x2c28>
   140b0:	sub	sp, fp, #32
   140b4:	ldrd	r4, [sp]
   140b8:	ldrd	r6, [sp, #8]
   140bc:	ldrd	r8, [sp, #16]
   140c0:	ldrd	sl, [sp, #24]
   140c4:	add	sp, sp, #32
   140c8:	pop	{pc}		; (ldr pc, [sp], #4)
   140cc:	cmp	r0, #0
   140d0:	bne	14098 <__assert_fail@plt+0x2c94>
   140d4:	ldr	r3, [r6, #8]
   140d8:	cmp	r3, #0
   140dc:	bne	14080 <__assert_fail@plt+0x2c7c>
   140e0:	mov	r0, r9
   140e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   140e8:	bl	19250 <argp_parse@@Base+0x232c>
   140ec:	b	14098 <__assert_fail@plt+0x2c94>
   140f0:	add	r0, r3, #1
   140f4:	mov	r2, r8
   140f8:	movw	r1, #43672	; 0xaa98
   140fc:	movt	r1, #1
   14100:	str	r0, [fp, #-40]	; 0xffffffd8
   14104:	mov	r0, r9
   14108:	strb	r5, [r3]
   1410c:	bl	19250 <argp_parse@@Base+0x232c>
   14110:	ldrd	r4, [r6]
   14114:	cmp	r5, #0
   14118:	bne	13fd0 <__assert_fail@plt+0x2bcc>
   1411c:	b	140b0 <__assert_fail@plt+0x2cac>
   14120:	ldr	r3, [r0, #16]
   14124:	strd	r4, [sp, #-28]!	; 0xffffffe4
   14128:	strd	r6, [sp, #8]
   1412c:	strd	r8, [sp, #16]
   14130:	str	lr, [sp, #24]
   14134:	sub	sp, sp, #12
   14138:	cmp	r3, #0
   1413c:	movne	r2, r3
   14140:	bne	1414c <__assert_fail@plt+0x2d48>
   14144:	b	1444c <__assert_fail@plt+0x3048>
   14148:	mov	r2, ip
   1414c:	ldr	ip, [r2, #12]
   14150:	cmp	ip, #0
   14154:	bne	14148 <__assert_fail@plt+0x2d44>
   14158:	ldr	lr, [r2, #8]
   1415c:	ldr	r2, [r1, #16]
   14160:	cmp	r2, #0
   14164:	movne	ip, r2
   14168:	bne	14174 <__assert_fail@plt+0x2d70>
   1416c:	b	14444 <__assert_fail@plt+0x3040>
   14170:	mov	ip, r4
   14174:	ldr	r4, [ip, #12]
   14178:	cmp	r4, #0
   1417c:	bne	14170 <__assert_fail@plt+0x2d6c>
   14180:	ldr	r4, [ip, #8]
   14184:	mvn	ip, r4
   14188:	lsr	ip, ip, #31
   1418c:	cmp	ip, lr, lsr #31
   14190:	subne	r4, lr, r4
   14194:	subeq	r4, r4, lr
   14198:	cmp	r4, #0
   1419c:	bne	14204 <__assert_fail@plt+0x2e00>
   141a0:	adds	r4, r2, #0
   141a4:	movne	r4, #1
   141a8:	cmp	r3, #0
   141ac:	rsbeq	r4, r4, #0
   141b0:	rsbne	r4, r4, #1
   141b4:	cmp	r4, #0
   141b8:	bne	14204 <__assert_fail@plt+0x2e00>
   141bc:	cmp	r3, #0
   141c0:	mov	r5, r1
   141c4:	mov	r6, r0
   141c8:	beq	1425c <__assert_fail@plt+0x2e58>
   141cc:	ldr	r0, [r2, #20]
   141d0:	ldr	ip, [r3, #20]
   141d4:	cmp	ip, r0
   141d8:	bgt	14220 <__assert_fail@plt+0x2e1c>
   141dc:	bge	14248 <__assert_fail@plt+0x2e44>
   141e0:	ldr	r2, [r2, #12]
   141e4:	ldr	r1, [r2, #20]
   141e8:	cmp	ip, r1
   141ec:	blt	141e0 <__assert_fail@plt+0x2ddc>
   141f0:	mov	r1, r2
   141f4:	mov	r0, r3
   141f8:	bl	1343c <__assert_fail@plt+0x2038>
   141fc:	subs	r4, r0, #0
   14200:	mvneq	r4, #0
   14204:	mov	r0, r4
   14208:	add	sp, sp, #12
   1420c:	ldrd	r4, [sp]
   14210:	ldrd	r6, [sp, #8]
   14214:	ldrd	r8, [sp, #16]
   14218:	add	sp, sp, #24
   1421c:	pop	{pc}		; (ldr pc, [sp], #4)
   14220:	ldr	r3, [r3, #12]
   14224:	ldr	r1, [r3, #20]
   14228:	cmp	r0, r1
   1422c:	blt	14220 <__assert_fail@plt+0x2e1c>
   14230:	mov	r1, r2
   14234:	mov	r0, r3
   14238:	bl	1343c <__assert_fail@plt+0x2038>
   1423c:	subs	r4, r0, #0
   14240:	moveq	r4, #1
   14244:	b	14204 <__assert_fail@plt+0x2e00>
   14248:	mov	r1, r2
   1424c:	mov	r0, r3
   14250:	bl	1343c <__assert_fail@plt+0x2038>
   14254:	subs	r4, r0, #0
   14258:	bne	14204 <__assert_fail@plt+0x2e00>
   1425c:	ldr	r4, [r5, #12]
   14260:	ldr	r3, [r6, #12]
   14264:	mvn	r2, r4
   14268:	lsr	r2, r2, #31
   1426c:	cmp	r2, r3, lsr #31
   14270:	subne	r4, r3, r4
   14274:	subeq	r4, r4, r3
   14278:	cmp	r4, #0
   1427c:	bne	14204 <__assert_fail@plt+0x2e00>
   14280:	ldr	r7, [r6]
   14284:	ldr	r2, [r6, #4]
   14288:	cmp	r2, #0
   1428c:	beq	142b8 <__assert_fail@plt+0x2eb4>
   14290:	add	r3, r7, #24
   14294:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14298:	cmp	r1, #0
   1429c:	beq	142ac <__assert_fail@plt+0x2ea8>
   142a0:	ldr	r0, [r3, #-12]
   142a4:	tst	r0, #2
   142a8:	beq	14454 <__assert_fail@plt+0x3050>
   142ac:	subs	r2, r2, #1
   142b0:	add	r3, r3, #24
   142b4:	bne	14294 <__assert_fail@plt+0x2e90>
   142b8:	mov	lr, #0
   142bc:	ldr	ip, [r5]
   142c0:	ldr	r2, [r5, #4]
   142c4:	str	lr, [sp]
   142c8:	cmp	r2, lr
   142cc:	beq	144b0 <__assert_fail@plt+0x30ac>
   142d0:	add	r3, ip, #24
   142d4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   142d8:	cmp	r1, #0
   142dc:	beq	142ec <__assert_fail@plt+0x2ee8>
   142e0:	ldr	r0, [r3, #-12]
   142e4:	tst	r0, #2
   142e8:	beq	142fc <__assert_fail@plt+0x2ef8>
   142ec:	subs	r2, r2, #1
   142f0:	add	r3, r3, #24
   142f4:	bne	142d4 <__assert_fail@plt+0x2ed0>
   142f8:	mov	r1, r2
   142fc:	ldr	r3, [r7, #12]
   14300:	str	r1, [sp, #4]
   14304:	ands	r3, lr, r3, lsr #3
   14308:	bne	14470 <__assert_fail@plt+0x306c>
   1430c:	ldr	r3, [ip, #12]
   14310:	tst	r3, #8
   14314:	beq	1433c <__assert_fail@plt+0x2f38>
   14318:	ldr	r3, [sp, #4]
   1431c:	cmp	r3, #0
   14320:	beq	1433c <__assert_fail@plt+0x2f38>
   14324:	add	r0, sp, #4
   14328:	bl	13594 <__assert_fail@plt+0x2190>
   1432c:	cmp	r0, #0
   14330:	subne	r4, r4, #1
   14334:	cmp	r4, #0
   14338:	bne	14204 <__assert_fail@plt+0x2e00>
   1433c:	ldr	r2, [r6, #20]
   14340:	mov	r0, r6
   14344:	mov	r3, #0
   14348:	movw	r1, #13628	; 0x353c
   1434c:	movt	r1, #1
   14350:	ldr	r2, [r2, #24]
   14354:	bl	13e3c <__assert_fail@plt+0x2a38>
   14358:	ldr	r2, [r5, #20]
   1435c:	uxtb	r6, r0
   14360:	movw	r1, #13628	; 0x353c
   14364:	movt	r1, #1
   14368:	mov	r0, r5
   1436c:	mov	r3, #0
   14370:	ldr	r2, [r2, #24]
   14374:	bl	13e3c <__assert_fail@plt+0x2a38>
   14378:	cmp	r6, #0
   1437c:	uxtb	r5, r0
   14380:	movne	r7, r6
   14384:	lslne	r4, r6, #2
   14388:	bne	143a4 <__assert_fail@plt+0x2fa0>
   1438c:	ldr	r3, [sp]
   14390:	cmp	r3, #0
   14394:	ldrbne	r7, [r3]
   14398:	moveq	r4, r6
   1439c:	moveq	r7, r6
   143a0:	lslne	r4, r7, #2
   143a4:	cmp	r5, #0
   143a8:	movne	r8, r5
   143ac:	lslne	r9, r5, #2
   143b0:	bne	143cc <__assert_fail@plt+0x2fc8>
   143b4:	ldr	r3, [sp, #4]
   143b8:	cmp	r3, #0
   143bc:	ldrbne	r8, [r3]
   143c0:	moveq	r9, r5
   143c4:	moveq	r8, r5
   143c8:	lslne	r9, r8, #2
   143cc:	bl	1123c <__ctype_tolower_loc@plt>
   143d0:	ldr	r3, [r0]
   143d4:	ldr	r4, [r3, r4]
   143d8:	ldr	r3, [r3, r9]
   143dc:	subs	r4, r4, r3
   143e0:	bne	14204 <__assert_fail@plt+0x2e00>
   143e4:	subs	r4, r8, r7
   143e8:	bne	14204 <__assert_fail@plt+0x2e00>
   143ec:	adds	r4, r5, #0
   143f0:	movne	r4, #1
   143f4:	cmp	r6, #0
   143f8:	rsbeq	r4, r4, #0
   143fc:	rsbne	r4, r4, #1
   14400:	cmp	r4, #0
   14404:	bne	14204 <__assert_fail@plt+0x2e00>
   14408:	cmp	r6, #0
   1440c:	bne	14204 <__assert_fail@plt+0x2e00>
   14410:	ldrd	r0, [sp]
   14414:	adds	r4, r1, #0
   14418:	movne	r4, #1
   1441c:	cmp	r0, #0
   14420:	rsbeq	r4, r4, #0
   14424:	rsbne	r4, r4, #1
   14428:	cmp	r4, #0
   1442c:	bne	14204 <__assert_fail@plt+0x2e00>
   14430:	cmp	r0, #0
   14434:	beq	14204 <__assert_fail@plt+0x2e00>
   14438:	bl	111c4 <strcasecmp@plt>
   1443c:	mov	r4, r0
   14440:	b	14204 <__assert_fail@plt+0x2e00>
   14444:	ldr	r4, [r1, #12]
   14448:	b	14184 <__assert_fail@plt+0x2d80>
   1444c:	ldr	lr, [r0, #12]
   14450:	b	1415c <__assert_fail@plt+0x2d58>
   14454:	str	r1, [sp]
   14458:	ldr	r2, [r5, #4]
   1445c:	ldr	ip, [r5]
   14460:	cmp	r2, #0
   14464:	beq	144b8 <__assert_fail@plt+0x30b4>
   14468:	mov	lr, #1
   1446c:	b	142d0 <__assert_fail@plt+0x2ecc>
   14470:	mov	r0, sp
   14474:	bl	13594 <__assert_fail@plt+0x2190>
   14478:	cmp	r0, #0
   1447c:	beq	144a8 <__assert_fail@plt+0x30a4>
   14480:	ldr	r3, [r5]
   14484:	ldr	r3, [r3, #12]
   14488:	tst	r3, #8
   1448c:	moveq	r4, #1
   14490:	beq	14204 <__assert_fail@plt+0x2e00>
   14494:	ldr	r3, [sp, #4]
   14498:	mov	r4, #1
   1449c:	cmp	r3, #0
   144a0:	beq	14204 <__assert_fail@plt+0x2e00>
   144a4:	b	14324 <__assert_fail@plt+0x2f20>
   144a8:	ldr	ip, [r5]
   144ac:	b	1430c <__assert_fail@plt+0x2f08>
   144b0:	str	r2, [sp, #4]
   144b4:	b	1433c <__assert_fail@plt+0x2f38>
   144b8:	mov	r1, r2
   144bc:	mov	lr, #1
   144c0:	b	142fc <__assert_fail@plt+0x2ef8>
   144c4:	strd	r4, [sp, #-16]!
   144c8:	mov	r5, r1
   144cc:	mov	r4, r0
   144d0:	ldr	r2, [r0, #16]
   144d4:	ldr	r1, [r0, #24]
   144d8:	ldr	r3, [r0, #28]
   144dc:	str	r6, [sp, #8]
   144e0:	str	lr, [sp, #12]
   144e4:	sub	r3, r3, r1
   144e8:	cmp	r3, r2
   144ec:	bhi	14554 <__assert_fail@plt+0x3150>
   144f0:	ldr	r1, [r4, #20]
   144f4:	mov	r6, #32
   144f8:	cmp	r1, #0
   144fc:	subge	r5, r5, r1
   14500:	b	14530 <__assert_fail@plt+0x312c>
   14504:	ldr	r3, [r4, #28]
   14508:	ldr	r2, [r4, #32]
   1450c:	cmp	r3, r2
   14510:	bcc	14524 <__assert_fail@plt+0x3120>
   14514:	bl	19230 <argp_parse@@Base+0x230c>
   14518:	cmp	r0, #0
   1451c:	beq	14530 <__assert_fail@plt+0x312c>
   14520:	ldr	r3, [r4, #28]
   14524:	add	r2, r3, #1
   14528:	str	r2, [r4, #28]
   1452c:	strb	r6, [r3]
   14530:	cmp	r5, #0
   14534:	mov	r1, #1
   14538:	mov	r0, r4
   1453c:	sub	r5, r5, #1
   14540:	bgt	14504 <__assert_fail@plt+0x3100>
   14544:	ldrd	r4, [sp]
   14548:	ldr	r6, [sp, #8]
   1454c:	add	sp, sp, #12
   14550:	pop	{pc}		; (ldr pc, [sp], #4)
   14554:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   14558:	b	144f0 <__assert_fail@plt+0x30ec>
   1455c:	ldrd	r2, [r0, #24]
   14560:	strd	r4, [sp, #-16]!
   14564:	mov	r5, r1
   14568:	mov	r4, r0
   1456c:	ldr	r1, [r0, #16]
   14570:	str	r6, [sp, #8]
   14574:	str	lr, [sp, #12]
   14578:	sub	r2, r3, r2
   1457c:	cmp	r2, r1
   14580:	movls	ip, r3
   14584:	bhi	14628 <__assert_fail@plt+0x3224>
   14588:	ldr	r0, [r4, #8]
   1458c:	ldr	r1, [r4, #20]
   14590:	ldr	r2, [r4, #32]
   14594:	cmp	r1, #0
   14598:	addge	r5, r5, r1
   1459c:	cmp	r5, r0
   145a0:	bcc	145e8 <__assert_fail@plt+0x31e4>
   145a4:	cmp	r3, r2
   145a8:	bcs	145cc <__assert_fail@plt+0x31c8>
   145ac:	add	r1, r3, #1
   145b0:	mov	r2, #10
   145b4:	str	r1, [r4, #28]
   145b8:	strb	r2, [r3]
   145bc:	ldrd	r4, [sp]
   145c0:	ldr	r6, [sp, #8]
   145c4:	add	sp, sp, #12
   145c8:	pop	{pc}		; (ldr pc, [sp], #4)
   145cc:	mov	r1, #1
   145d0:	mov	r0, r4
   145d4:	bl	19230 <argp_parse@@Base+0x230c>
   145d8:	cmp	r0, #0
   145dc:	beq	145bc <__assert_fail@plt+0x31b8>
   145e0:	ldr	r3, [r4, #28]
   145e4:	b	145ac <__assert_fail@plt+0x31a8>
   145e8:	cmp	r3, r2
   145ec:	bcc	14608 <__assert_fail@plt+0x3204>
   145f0:	mov	r1, #1
   145f4:	mov	r0, r4
   145f8:	bl	19230 <argp_parse@@Base+0x230c>
   145fc:	cmp	r0, #0
   14600:	beq	145bc <__assert_fail@plt+0x31b8>
   14604:	ldr	ip, [r4, #28]
   14608:	add	r2, ip, #1
   1460c:	mov	r3, #32
   14610:	str	r2, [r4, #28]
   14614:	strb	r3, [ip]
   14618:	ldrd	r4, [sp]
   1461c:	ldr	r6, [sp, #8]
   14620:	add	sp, sp, #12
   14624:	pop	{pc}		; (ldr pc, [sp], #4)
   14628:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   1462c:	ldr	r3, [r4, #28]
   14630:	mov	ip, r3
   14634:	b	14588 <__assert_fail@plt+0x3184>
   14638:	strd	r4, [sp, #-16]!
   1463c:	ldr	r5, [r0, #8]
   14640:	str	r6, [sp, #8]
   14644:	str	lr, [sp, #12]
   14648:	cmp	r5, #0
   1464c:	beq	146a0 <__assert_fail@plt+0x329c>
   14650:	ldr	r2, [r0, #12]
   14654:	ldr	r1, [r1, #12]
   14658:	orr	r2, r2, r1
   1465c:	tst	r2, #16
   14660:	bne	1468c <__assert_fail@plt+0x3288>
   14664:	tst	r2, #1
   14668:	mov	r6, r3
   1466c:	mov	r4, r0
   14670:	beq	146b0 <__assert_fail@plt+0x32ac>
   14674:	movw	r1, #43716	; 0xaac4
   14678:	movt	r1, #1
   1467c:	ldr	r2, [r4, #4]
   14680:	mov	r3, r5
   14684:	mov	r0, r6
   14688:	bl	19250 <argp_parse@@Base+0x232c>
   1468c:	ldrd	r4, [sp]
   14690:	mov	r0, #0
   14694:	ldr	r6, [sp, #8]
   14698:	add	sp, sp, #12
   1469c:	pop	{pc}		; (ldr pc, [sp], #4)
   146a0:	ldr	r5, [r1, #8]
   146a4:	cmp	r5, #0
   146a8:	beq	1468c <__assert_fail@plt+0x3288>
   146ac:	b	14650 <__assert_fail@plt+0x324c>
   146b0:	mov	r0, r5
   146b4:	bl	11290 <strlen@plt>
   146b8:	add	r1, r0, #6
   146bc:	mov	r0, r6
   146c0:	bl	1455c <__assert_fail@plt+0x3158>
   146c4:	mov	r3, r5
   146c8:	mov	r0, r6
   146cc:	ldr	r2, [r4, #4]
   146d0:	movw	r1, #43728	; 0xaad0
   146d4:	movt	r1, #1
   146d8:	bl	19250 <argp_parse@@Base+0x232c>
   146dc:	b	1468c <__assert_fail@plt+0x3288>
   146e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   146e4:	mov	r4, r3
   146e8:	ldr	ip, [r0, #8]
   146ec:	ldr	r3, [r0, #20]
   146f0:	cmp	r3, #0
   146f4:	ldr	r3, [r0, #16]
   146f8:	strd	r6, [sp, #8]
   146fc:	strd	r8, [sp, #16]
   14700:	mov	r8, r2
   14704:	ldr	r2, [r2]
   14708:	strd	sl, [sp, #24]
   1470c:	mov	sl, r1
   14710:	str	lr, [sp, #32]
   14714:	sub	sp, sp, #28
   14718:	ldr	r7, [sp, #64]	; 0x40
   1471c:	str	r3, [sp, #8]
   14720:	str	ip, [sp, #12]
   14724:	str	r2, [sp, #16]
   14728:	beq	148f8 <__assert_fail@plt+0x34f4>
   1472c:	mov	r2, r0
   14730:	mov	r1, #6
   14734:	movt	r1, #512	; 0x200
   14738:	mov	r3, sl
   1473c:	mov	r0, ip
   14740:	bl	1372c <__assert_fail@plt+0x2328>
   14744:	mov	r9, r0
   14748:	cmp	r9, #0
   1474c:	beq	148c8 <__assert_fail@plt+0x34c4>
   14750:	mov	r1, #10
   14754:	mov	r0, r9
   14758:	bl	11128 <strchrnul@plt>
   1475c:	ldrb	r3, [r0]
   14760:	mov	r5, r0
   14764:	cmp	r3, #0
   14768:	moveq	r6, r9
   1476c:	streq	r3, [sp, #20]
   14770:	beq	147c0 <__assert_fail@plt+0x33bc>
   14774:	ldr	r3, [sp, #16]
   14778:	ldrb	r3, [r3]
   1477c:	cmp	r3, #0
   14780:	beq	14918 <__assert_fail@plt+0x3514>
   14784:	mov	fp, #0
   14788:	mov	r5, r3
   1478c:	add	r6, r0, #1
   14790:	add	fp, fp, #1
   14794:	mov	r0, r6
   14798:	mov	r1, #10
   1479c:	bl	11128 <strchrnul@plt>
   147a0:	cmp	fp, r5
   147a4:	bne	1478c <__assert_fail@plt+0x3388>
   147a8:	mov	r5, r0
   147ac:	ldr	r3, [r8]
   147b0:	mov	r2, #1
   147b4:	str	r2, [sp, #20]
   147b8:	add	r3, r3, r2
   147bc:	str	r3, [r8]
   147c0:	add	r1, r5, #1
   147c4:	mov	r0, r7
   147c8:	sub	r1, r1, r6
   147cc:	sub	fp, r5, r6
   147d0:	bl	1455c <__assert_fail@plt+0x3158>
   147d4:	ldr	r0, [r7, #28]
   147d8:	ldr	r2, [r7, #32]
   147dc:	add	r3, r0, fp
   147e0:	cmp	r2, r3
   147e4:	bcs	14800 <__assert_fail@plt+0x33fc>
   147e8:	mov	r1, fp
   147ec:	mov	r0, r7
   147f0:	bl	19230 <argp_parse@@Base+0x230c>
   147f4:	cmp	r0, #0
   147f8:	beq	14818 <__assert_fail@plt+0x3414>
   147fc:	ldr	r0, [r7, #28]
   14800:	mov	r2, fp
   14804:	mov	r1, r6
   14808:	bl	11158 <memcpy@plt>
   1480c:	ldr	r3, [r7, #28]
   14810:	add	fp, r3, fp
   14814:	str	fp, [r7, #28]
   14818:	ldr	r3, [sp, #12]
   1481c:	cmp	r3, r9
   14820:	beq	1482c <__assert_fail@plt+0x3428>
   14824:	mov	r0, r9
   14828:	bl	17f08 <argp_parse@@Base+0xfe4>
   1482c:	ldr	r3, [sp, #8]
   14830:	cmp	r3, #0
   14834:	beq	14878 <__assert_fail@plt+0x3474>
   14838:	ldr	r2, [r3]
   1483c:	cmp	r2, #0
   14840:	beq	14878 <__assert_fail@plt+0x3474>
   14844:	ldr	r6, [sp, #8]
   14848:	mov	r3, r4
   1484c:	mov	r0, r2
   14850:	mov	r1, sl
   14854:	str	r7, [sp]
   14858:	mov	r2, r8
   1485c:	bl	146e0 <__assert_fail@plt+0x32dc>
   14860:	ldr	r2, [r6, #16]!
   14864:	clz	r3, r0
   14868:	lsr	r3, r3, #5
   1486c:	cmp	r2, #0
   14870:	bne	1484c <__assert_fail@plt+0x3448>
   14874:	mov	r4, r3
   14878:	ldr	r3, [sp, #20]
   1487c:	cmp	r4, #0
   14880:	moveq	r3, #0
   14884:	cmp	r3, #0
   14888:	beq	148ec <__assert_fail@plt+0x34e8>
   1488c:	ldrb	r3, [r5]
   14890:	ldr	r2, [sp, #16]
   14894:	cmp	r3, #0
   14898:	ldrb	r0, [r2]
   1489c:	beq	14900 <__assert_fail@plt+0x34fc>
   148a0:	add	r4, r0, #1
   148a4:	mov	r0, #1
   148a8:	strb	r4, [r2]
   148ac:	add	sp, sp, #28
   148b0:	ldrd	r4, [sp]
   148b4:	ldrd	r6, [sp, #8]
   148b8:	ldrd	r8, [sp, #16]
   148bc:	ldrd	sl, [sp, #24]
   148c0:	add	sp, sp, #32
   148c4:	pop	{pc}		; (ldr pc, [sp], #4)
   148c8:	ldr	r3, [sp, #8]
   148cc:	cmp	r3, #0
   148d0:	beq	148ec <__assert_fail@plt+0x34e8>
   148d4:	ldr	r3, [sp, #8]
   148d8:	ldr	r2, [r3]
   148dc:	cmp	r2, #0
   148e0:	movne	r5, r9
   148e4:	strne	r5, [sp, #20]
   148e8:	bne	14844 <__assert_fail@plt+0x3440>
   148ec:	clz	r0, r4
   148f0:	lsr	r0, r0, #5
   148f4:	b	148ac <__assert_fail@plt+0x34a8>
   148f8:	ldr	r9, [sp, #12]
   148fc:	b	14748 <__assert_fail@plt+0x3344>
   14900:	cmp	r0, #0
   14904:	beq	148ac <__assert_fail@plt+0x34a8>
   14908:	ldr	r2, [sp, #16]
   1490c:	mov	r0, r3
   14910:	strb	r3, [r2]
   14914:	b	148ac <__assert_fail@plt+0x34a8>
   14918:	mov	r6, r9
   1491c:	b	147ac <__assert_fail@plt+0x33a8>
   14920:	cmp	r1, #0
   14924:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14928:	strd	r6, [sp, #8]
   1492c:	mov	r6, r2
   14930:	strd	r8, [sp, #16]
   14934:	mov	r8, r0
   14938:	strd	sl, [sp, #24]
   1493c:	str	lr, [sp, #32]
   14940:	sub	sp, sp, #12
   14944:	beq	14970 <__assert_fail@plt+0x356c>
   14948:	ldr	r3, [r1, #20]
   1494c:	cmp	r3, #0
   14950:	beq	14970 <__assert_fail@plt+0x356c>
   14954:	mov	r2, r1
   14958:	mov	r1, #3
   1495c:	movt	r1, #512	; 0x200
   14960:	ldr	r3, [r6, #16]
   14964:	bl	1372c <__assert_fail@plt+0x2328>
   14968:	mov	r4, r0
   1496c:	b	14974 <__assert_fail@plt+0x3570>
   14970:	mov	r4, r8
   14974:	cmp	r4, #0
   14978:	beq	14994 <__assert_fail@plt+0x3590>
   1497c:	ldrb	r2, [r4]
   14980:	ldr	r3, [r6, #8]
   14984:	cmp	r2, #0
   14988:	bne	149c0 <__assert_fail@plt+0x35bc>
   1498c:	mov	r2, #1
   14990:	str	r2, [r3, #4]
   14994:	cmp	r8, r4
   14998:	beq	14aa0 <__assert_fail@plt+0x369c>
   1499c:	mov	r0, r4
   149a0:	add	sp, sp, #12
   149a4:	ldrd	r4, [sp]
   149a8:	ldrd	r6, [sp, #8]
   149ac:	ldrd	r8, [sp, #16]
   149b0:	ldrd	sl, [sp, #24]
   149b4:	ldr	lr, [sp, #32]
   149b8:	add	sp, sp, #36	; 0x24
   149bc:	b	17f08 <argp_parse@@Base+0xfe4>
   149c0:	ldr	r3, [r3]
   149c4:	ldr	r5, [r6, #4]
   149c8:	cmp	r3, #0
   149cc:	beq	14a0c <__assert_fail@plt+0x3608>
   149d0:	ldr	r3, [r5, #28]
   149d4:	ldr	r2, [r5, #32]
   149d8:	cmp	r3, r2
   149dc:	bcc	149f8 <__assert_fail@plt+0x35f4>
   149e0:	mov	r1, #1
   149e4:	mov	r0, r5
   149e8:	bl	19230 <argp_parse@@Base+0x230c>
   149ec:	cmp	r0, #0
   149f0:	ldrne	r3, [r5, #28]
   149f4:	beq	14a08 <__assert_fail@plt+0x3604>
   149f8:	add	r1, r3, #1
   149fc:	mov	r2, #10
   14a00:	str	r1, [r5, #28]
   14a04:	strb	r2, [r3]
   14a08:	ldr	r5, [r6, #4]
   14a0c:	movw	r9, #50064	; 0xc390
   14a10:	movt	r9, #2
   14a14:	mov	r0, r5
   14a18:	ldr	r1, [r9, #24]
   14a1c:	bl	144c4 <__assert_fail@plt+0x30c0>
   14a20:	ldr	r5, [r6, #4]
   14a24:	ldr	sl, [r9, #24]
   14a28:	ldr	r1, [r5, #16]
   14a2c:	ldr	r3, [r5, #24]
   14a30:	ldr	r7, [r5, #28]
   14a34:	sub	r3, r7, r3
   14a38:	cmp	r3, r1
   14a3c:	movls	fp, r5
   14a40:	strls	sl, [r5, #4]
   14a44:	bhi	14b3c <__assert_fail@plt+0x3738>
   14a48:	mov	r0, r4
   14a4c:	str	sl, [fp, #12]
   14a50:	bl	11290 <strlen@plt>
   14a54:	subs	r9, r0, #0
   14a58:	bne	14aec <__assert_fail@plt+0x36e8>
   14a5c:	ldr	r2, [r5, #16]
   14a60:	ldr	r3, [r5, #24]
   14a64:	sub	r3, r7, r3
   14a68:	cmp	r3, r2
   14a6c:	movls	r9, r5
   14a70:	bhi	14ad8 <__assert_fail@plt+0x36d4>
   14a74:	ldr	r3, [r9, #32]
   14a78:	mov	r2, #0
   14a7c:	str	r2, [r5, #4]
   14a80:	cmp	r3, r7
   14a84:	bls	14abc <__assert_fail@plt+0x36b8>
   14a88:	add	r2, r7, #1
   14a8c:	mov	r3, #10
   14a90:	str	r2, [r9, #28]
   14a94:	strb	r3, [r7]
   14a98:	ldr	r3, [r6, #8]
   14a9c:	b	1498c <__assert_fail@plt+0x3588>
   14aa0:	add	sp, sp, #12
   14aa4:	ldrd	r4, [sp]
   14aa8:	ldrd	r6, [sp, #8]
   14aac:	ldrd	r8, [sp, #16]
   14ab0:	ldrd	sl, [sp, #24]
   14ab4:	add	sp, sp, #32
   14ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   14abc:	mov	r1, #1
   14ac0:	mov	r0, r9
   14ac4:	bl	19230 <argp_parse@@Base+0x230c>
   14ac8:	cmp	r0, #0
   14acc:	ldrne	r7, [r9, #28]
   14ad0:	bne	14a88 <__assert_fail@plt+0x3684>
   14ad4:	b	14a98 <__assert_fail@plt+0x3694>
   14ad8:	mov	r0, r5
   14adc:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   14ae0:	ldr	r9, [r6, #4]
   14ae4:	ldr	r7, [r9, #28]
   14ae8:	b	14a74 <__assert_fail@plt+0x3670>
   14aec:	ldr	r2, [r5, #32]
   14af0:	add	r3, r7, r9
   14af4:	cmp	r2, r3
   14af8:	bcs	14b14 <__assert_fail@plt+0x3710>
   14afc:	mov	r1, r9
   14b00:	mov	r0, r5
   14b04:	bl	19230 <argp_parse@@Base+0x230c>
   14b08:	cmp	r0, #0
   14b0c:	beq	14b30 <__assert_fail@plt+0x372c>
   14b10:	ldr	r7, [r5, #28]
   14b14:	mov	r2, r9
   14b18:	mov	r0, r7
   14b1c:	mov	r1, r4
   14b20:	bl	11158 <memcpy@plt>
   14b24:	ldr	r3, [r5, #28]
   14b28:	add	r9, r3, r9
   14b2c:	str	r9, [r5, #28]
   14b30:	ldr	r5, [r6, #4]
   14b34:	ldr	r7, [r5, #28]
   14b38:	b	14a5c <__assert_fail@plt+0x3658>
   14b3c:	mov	r0, r5
   14b40:	str	sl, [sp, #4]
   14b44:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   14b48:	ldr	fp, [r6, #4]
   14b4c:	ldr	r2, [sp, #4]
   14b50:	ldr	sl, [r9, #24]
   14b54:	ldr	r1, [fp, #16]
   14b58:	ldr	r3, [fp, #24]
   14b5c:	ldr	r7, [fp, #28]
   14b60:	str	r2, [r5, #4]
   14b64:	sub	r3, r7, r3
   14b68:	cmp	r3, r1
   14b6c:	bls	14b84 <__assert_fail@plt+0x3780>
   14b70:	mov	r0, fp
   14b74:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   14b78:	ldr	r5, [r6, #4]
   14b7c:	ldr	r7, [r5, #28]
   14b80:	b	14a48 <__assert_fail@plt+0x3644>
   14b84:	mov	r5, fp
   14b88:	b	14a48 <__assert_fail@plt+0x3644>
   14b8c:	ldr	r3, [r1, #12]
   14b90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14b94:	mov	r4, r1
   14b98:	ldr	r5, [r1, #4]
   14b9c:	strd	r6, [sp, #8]
   14ba0:	mov	r7, r0
   14ba4:	str	r8, [sp, #16]
   14ba8:	cmp	r3, #0
   14bac:	str	lr, [sp, #20]
   14bb0:	beq	14cdc <__assert_fail@plt+0x38d8>
   14bb4:	ldr	r2, [r1]
   14bb8:	ldr	r3, [r1, #8]
   14bbc:	ldr	r6, [r2, #16]
   14bc0:	ldr	r8, [r3]
   14bc4:	ldr	r3, [r3, #4]
   14bc8:	cmp	r3, #0
   14bcc:	cmpne	r8, #0
   14bd0:	bne	14c84 <__assert_fail@plt+0x3880>
   14bd4:	cmp	r6, #0
   14bd8:	beq	14c5c <__assert_fail@plt+0x3858>
   14bdc:	ldr	r0, [r6]
   14be0:	cmp	r0, #0
   14be4:	beq	14c5c <__assert_fail@plt+0x3858>
   14be8:	ldrb	r3, [r0]
   14bec:	cmp	r3, #0
   14bf0:	beq	14c5c <__assert_fail@plt+0x3858>
   14bf4:	cmp	r8, #0
   14bf8:	beq	14c28 <__assert_fail@plt+0x3824>
   14bfc:	ldr	r3, [r8, #16]
   14c00:	cmp	r3, r6
   14c04:	beq	14c5c <__assert_fail@plt+0x3858>
   14c08:	cmp	r3, #0
   14c0c:	beq	14c28 <__assert_fail@plt+0x3824>
   14c10:	ldr	r3, [r3, #12]
   14c14:	cmp	r3, #0
   14c18:	cmpne	r6, r3
   14c1c:	bne	14c10 <__assert_fail@plt+0x380c>
   14c20:	cmp	r6, r3
   14c24:	beq	14c5c <__assert_fail@plt+0x3858>
   14c28:	mov	r2, r4
   14c2c:	ldr	r1, [r6, #16]
   14c30:	ldr	r8, [r5, #12]
   14c34:	bl	14920 <__assert_fail@plt+0x351c>
   14c38:	ldr	r6, [r4, #4]
   14c3c:	ldr	r2, [r6, #16]
   14c40:	ldr	r1, [r6, #24]
   14c44:	ldr	r3, [r6, #28]
   14c48:	sub	r3, r3, r1
   14c4c:	cmp	r3, r2
   14c50:	movls	r5, r6
   14c54:	bhi	14d2c <__assert_fail@plt+0x3928>
   14c58:	str	r8, [r6, #12]
   14c5c:	mov	r3, #0
   14c60:	str	r3, [r4, #12]
   14c64:	mov	r1, r7
   14c68:	mov	r0, r5
   14c6c:	ldrd	r4, [sp]
   14c70:	ldrd	r6, [sp, #8]
   14c74:	ldr	r8, [sp, #16]
   14c78:	ldr	lr, [sp, #20]
   14c7c:	add	sp, sp, #24
   14c80:	b	144c4 <__assert_fail@plt+0x30c0>
   14c84:	ldr	r2, [r2, #12]
   14c88:	ldr	r3, [r8, #12]
   14c8c:	cmp	r2, r3
   14c90:	beq	14bd4 <__assert_fail@plt+0x37d0>
   14c94:	ldr	r3, [r5, #28]
   14c98:	ldr	r2, [r5, #32]
   14c9c:	cmp	r3, r2
   14ca0:	bcc	14cbc <__assert_fail@plt+0x38b8>
   14ca4:	mov	r1, #1
   14ca8:	mov	r0, r5
   14cac:	bl	19230 <argp_parse@@Base+0x230c>
   14cb0:	cmp	r0, #0
   14cb4:	ldrne	r3, [r5, #28]
   14cb8:	beq	14ccc <__assert_fail@plt+0x38c8>
   14cbc:	add	r1, r3, #1
   14cc0:	mov	r2, #10
   14cc4:	str	r1, [r5, #28]
   14cc8:	strb	r2, [r3]
   14ccc:	cmp	r6, #0
   14cd0:	ldr	r5, [r4, #4]
   14cd4:	bne	14bdc <__assert_fail@plt+0x37d8>
   14cd8:	b	14c5c <__assert_fail@plt+0x3858>
   14cdc:	ldr	r3, [r5, #28]
   14ce0:	ldr	r1, [r5, #32]
   14ce4:	add	r2, r3, #2
   14ce8:	cmp	r1, r2
   14cec:	bcs	14d08 <__assert_fail@plt+0x3904>
   14cf0:	mov	r1, #2
   14cf4:	mov	r0, r5
   14cf8:	bl	19230 <argp_parse@@Base+0x230c>
   14cfc:	cmp	r0, #0
   14d00:	beq	14d24 <__assert_fail@plt+0x3920>
   14d04:	ldr	r3, [r5, #28]
   14d08:	movw	r2, #41348	; 0xa184
   14d0c:	movt	r2, #1
   14d10:	ldrh	r2, [r2]
   14d14:	strh	r2, [r3]
   14d18:	ldr	r3, [r5, #28]
   14d1c:	add	r3, r3, #2
   14d20:	str	r3, [r5, #28]
   14d24:	ldr	r5, [r4, #4]
   14d28:	b	14c64 <__assert_fail@plt+0x3860>
   14d2c:	mov	r0, r6
   14d30:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   14d34:	ldr	r5, [r4, #4]
   14d38:	b	14c58 <__assert_fail@plt+0x3854>
   14d3c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14d40:	strd	r6, [sp, #8]
   14d44:	mov	r7, r0
   14d48:	ldr	r6, [r0, #12]
   14d4c:	strd	r8, [sp, #16]
   14d50:	mov	r8, r2
   14d54:	strd	sl, [sp, #24]
   14d58:	mov	sl, r3
   14d5c:	mov	fp, r1
   14d60:	ldr	r3, [r0, #16]
   14d64:	str	lr, [sp, #32]
   14d68:	sub	sp, sp, #28
   14d6c:	cmp	r6, #0
   14d70:	ldr	r5, [sp, #68]	; 0x44
   14d74:	str	r3, [sp, #8]
   14d78:	ldr	r3, [r0, #20]
   14d7c:	beq	150ec <__assert_fail@plt+0x3ce8>
   14d80:	mov	r1, #11
   14d84:	mov	r0, r6
   14d88:	str	r3, [sp, #12]
   14d8c:	bl	1129c <strchr@plt>
   14d90:	cmp	r8, #0
   14d94:	mov	r9, r0
   14d98:	ldr	r3, [sp, #12]
   14d9c:	bne	14fe8 <__assert_fail@plt+0x3be4>
   14da0:	cmp	r0, #0
   14da4:	beq	152e4 <__assert_fail@plt+0x3ee0>
   14da8:	subs	r1, r0, r6
   14dac:	movne	r4, #1
   14db0:	moveq	r4, #0
   14db4:	cmp	r3, #0
   14db8:	str	r1, [sp, #20]
   14dbc:	beq	15288 <__assert_fail@plt+0x3e84>
   14dc0:	cmp	r1, #0
   14dc4:	beq	152d8 <__assert_fail@plt+0x3ed4>
   14dc8:	mov	r0, r6
   14dcc:	mov	r4, #1
   14dd0:	bl	1114c <strndup@plt>
   14dd4:	adds	r3, r0, #0
   14dd8:	mov	r6, r0
   14ddc:	movne	r3, #1
   14de0:	str	r3, [sp, #16]
   14de4:	mov	r1, fp
   14de8:	mov	r0, r7
   14dec:	bl	17da4 <argp_parse@@Base+0xe80>
   14df0:	mov	r2, r0
   14df4:	mov	r1, r6
   14df8:	ldr	r3, [r7, #20]
   14dfc:	mov	r0, #1
   14e00:	movt	r0, #512	; 0x200
   14e04:	str	r2, [sp, #12]
   14e08:	blx	r3
   14e0c:	subs	r9, r0, #0
   14e10:	moveq	r4, r9
   14e14:	beq	14ea4 <__assert_fail@plt+0x3aa0>
   14e18:	cmp	r6, r9
   14e1c:	movne	r4, #0
   14e20:	andeq	r4, r4, #1
   14e24:	cmp	sl, #0
   14e28:	ldr	r2, [r5, #28]
   14e2c:	bne	15130 <__assert_fail@plt+0x3d2c>
   14e30:	cmp	r4, #0
   14e34:	beq	1508c <__assert_fail@plt+0x3c88>
   14e38:	ldr	r3, [sp, #20]
   14e3c:	ldr	r0, [r5, #32]
   14e40:	add	r1, r2, r3
   14e44:	cmp	r0, r1
   14e48:	bcs	15044 <__assert_fail@plt+0x3c40>
   14e4c:	mov	r1, r3
   14e50:	mov	r0, r5
   14e54:	bl	19230 <argp_parse@@Base+0x230c>
   14e58:	cmp	r0, #0
   14e5c:	ldr	r2, [r5, #28]
   14e60:	bne	15044 <__assert_fail@plt+0x3c40>
   14e64:	ldr	r0, [r5, #16]
   14e68:	ldr	r1, [r5, #24]
   14e6c:	sub	r2, r2, r1
   14e70:	cmp	r2, r0
   14e74:	bhi	15178 <__assert_fail@plt+0x3d74>
   14e78:	ldr	r1, [r5, #4]
   14e7c:	ldr	r2, [r5, #20]
   14e80:	bic	r2, r2, r2, asr #31
   14e84:	cmp	r1, r2
   14e88:	bcc	15154 <__assert_fail@plt+0x3d50>
   14e8c:	cmp	r9, r6
   14e90:	moveq	r4, #1
   14e94:	beq	14ea4 <__assert_fail@plt+0x3aa0>
   14e98:	mov	r0, r9
   14e9c:	mov	r4, #1
   14ea0:	bl	17f08 <argp_parse@@Base+0xfe4>
   14ea4:	ldr	r3, [sp, #16]
   14ea8:	cmp	r3, #0
   14eac:	beq	14ec4 <__assert_fail@plt+0x3ac0>
   14eb0:	ldr	r3, [r7, #20]
   14eb4:	cmp	r3, #0
   14eb8:	beq	14f44 <__assert_fail@plt+0x3b40>
   14ebc:	mov	r0, r6
   14ec0:	bl	17f08 <argp_parse@@Base+0xfe4>
   14ec4:	cmp	r8, #0
   14ec8:	beq	14f44 <__assert_fail@plt+0x3b40>
   14ecc:	ldr	r3, [r7, #20]
   14ed0:	cmp	r3, #0
   14ed4:	beq	14f44 <__assert_fail@plt+0x3b40>
   14ed8:	mov	r0, #4
   14edc:	movt	r0, #512	; 0x200
   14ee0:	ldr	r2, [sp, #12]
   14ee4:	mov	r1, #0
   14ee8:	blx	r3
   14eec:	subs	r6, r0, #0
   14ef0:	beq	14f44 <__assert_fail@plt+0x3b40>
   14ef4:	orrs	r3, sl, r4
   14ef8:	bne	15214 <__assert_fail@plt+0x3e10>
   14efc:	mov	r0, r6
   14f00:	bl	11290 <strlen@plt>
   14f04:	subs	r4, r0, #0
   14f08:	bne	151cc <__assert_fail@plt+0x3dc8>
   14f0c:	mov	r0, r6
   14f10:	bl	17f08 <argp_parse@@Base+0xfe4>
   14f14:	ldr	r2, [r5, #16]
   14f18:	ldr	r1, [r5, #24]
   14f1c:	ldr	r3, [r5, #28]
   14f20:	sub	r3, r3, r1
   14f24:	cmp	r3, r2
   14f28:	bhi	15260 <__assert_fail@plt+0x3e5c>
   14f2c:	ldr	r2, [r5, #4]
   14f30:	ldr	r3, [r5, #20]
   14f34:	bic	r3, r3, r3, asr #31
   14f38:	cmp	r2, r3
   14f3c:	bcc	15238 <__assert_fail@plt+0x3e34>
   14f40:	mov	r4, #1
   14f44:	ldr	r7, [sp, #8]
   14f48:	cmp	r7, #0
   14f4c:	beq	14fc8 <__assert_fail@plt+0x3bc4>
   14f50:	ldr	r3, [r7]
   14f54:	cmp	r3, #0
   14f58:	beq	14fc8 <__assert_fail@plt+0x3bc4>
   14f5c:	ldr	r2, [sp, #64]	; 0x40
   14f60:	eor	r6, r2, #1
   14f64:	eor	r2, r4, #1
   14f68:	orr	r2, r2, r6
   14f6c:	and	r6, r6, #1
   14f70:	tst	r2, #1
   14f74:	beq	15298 <__assert_fail@plt+0x3e94>
   14f78:	ldr	r9, [sp, #64]	; 0x40
   14f7c:	orrs	r2, r4, sl
   14f80:	mov	r0, r3
   14f84:	str	r9, [sp]
   14f88:	movne	r3, #1
   14f8c:	moveq	r3, #0
   14f90:	str	r5, [sp, #4]
   14f94:	mov	r2, r8
   14f98:	mov	r1, fp
   14f9c:	bl	14d3c <__assert_fail@plt+0x3938>
   14fa0:	ldr	r3, [r7, #16]
   14fa4:	orr	r4, r4, r0
   14fa8:	add	r7, r7, #16
   14fac:	cmp	r3, #0
   14fb0:	beq	14fc8 <__assert_fail@plt+0x3bc4>
   14fb4:	cmp	r4, #0
   14fb8:	movne	r2, r6
   14fbc:	moveq	r2, #1
   14fc0:	cmp	r2, #0
   14fc4:	bne	14f7c <__assert_fail@plt+0x3b78>
   14fc8:	mov	r0, r4
   14fcc:	add	sp, sp, #28
   14fd0:	ldrd	r4, [sp]
   14fd4:	ldrd	r6, [sp, #8]
   14fd8:	ldrd	r8, [sp, #16]
   14fdc:	ldrd	sl, [sp, #24]
   14fe0:	add	sp, sp, #32
   14fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   14fe8:	cmp	r0, #0
   14fec:	beq	1526c <__assert_fail@plt+0x3e68>
   14ff0:	cmp	r3, #0
   14ff4:	add	r6, r0, #1
   14ff8:	movne	r1, fp
   14ffc:	movne	r0, r7
   15000:	beq	15068 <__assert_fail@plt+0x3c64>
   15004:	bl	17da4 <argp_parse@@Base+0xe80>
   15008:	ldr	r3, [r7, #20]
   1500c:	str	r0, [sp, #12]
   15010:	mov	r0, #2
   15014:	movt	r0, #512	; 0x200
   15018:	mov	r1, r6
   1501c:	ldr	r2, [sp, #12]
   15020:	blx	r3
   15024:	subs	r9, r0, #0
   15028:	moveq	r4, r9
   1502c:	beq	14ec4 <__assert_fail@plt+0x3ac0>
   15030:	mov	r3, #0
   15034:	mov	r4, r3
   15038:	str	r3, [sp, #16]
   1503c:	str	r3, [sp, #20]
   15040:	b	14e18 <__assert_fail@plt+0x3a14>
   15044:	ldr	r4, [sp, #20]
   15048:	mov	r0, r2
   1504c:	mov	r1, r6
   15050:	mov	r2, r4
   15054:	bl	11158 <memcpy@plt>
   15058:	ldr	r2, [r5, #28]
   1505c:	add	r2, r2, r4
   15060:	str	r2, [r5, #28]
   15064:	b	14e64 <__assert_fail@plt+0x3a60>
   15068:	cmp	r6, #0
   1506c:	moveq	r4, r6
   15070:	beq	14f44 <__assert_fail@plt+0x3b40>
   15074:	cmp	sl, #0
   15078:	ldr	r2, [r5, #28]
   1507c:	bne	1511c <__assert_fail@plt+0x3d18>
   15080:	mov	r9, r6
   15084:	str	sl, [sp, #12]
   15088:	str	sl, [sp, #16]
   1508c:	mov	r0, r9
   15090:	str	r2, [sp, #20]
   15094:	bl	11290 <strlen@plt>
   15098:	subs	r4, r0, #0
   1509c:	ldr	r2, [sp, #20]
   150a0:	beq	14e64 <__assert_fail@plt+0x3a60>
   150a4:	ldr	r0, [r5, #32]
   150a8:	add	r1, r2, r4
   150ac:	cmp	r0, r1
   150b0:	bcs	150cc <__assert_fail@plt+0x3cc8>
   150b4:	mov	r1, r4
   150b8:	mov	r0, r5
   150bc:	bl	19230 <argp_parse@@Base+0x230c>
   150c0:	cmp	r0, #0
   150c4:	ldr	r2, [r5, #28]
   150c8:	beq	14e64 <__assert_fail@plt+0x3a60>
   150cc:	mov	r0, r2
   150d0:	mov	r1, r9
   150d4:	mov	r2, r4
   150d8:	bl	11158 <memcpy@plt>
   150dc:	ldr	r2, [r5, #28]
   150e0:	add	r2, r2, r4
   150e4:	str	r2, [r5, #28]
   150e8:	b	14e64 <__assert_fail@plt+0x3a60>
   150ec:	cmp	r3, #0
   150f0:	beq	15280 <__assert_fail@plt+0x3e7c>
   150f4:	bl	17da4 <argp_parse@@Base+0xe80>
   150f8:	mov	r2, #1
   150fc:	movt	r2, #512	; 0x200
   15100:	str	r0, [sp, #12]
   15104:	cmp	r8, #0
   15108:	mov	r0, #2
   1510c:	movt	r0, #512	; 0x200
   15110:	moveq	r0, r2
   15114:	ldr	r3, [r7, #20]
   15118:	b	15018 <__assert_fail@plt+0x3c14>
   1511c:	mov	r4, #0
   15120:	mov	r9, r6
   15124:	str	r4, [sp, #12]
   15128:	str	r4, [sp, #16]
   1512c:	str	r4, [sp, #20]
   15130:	ldr	r1, [r5, #32]
   15134:	cmp	r1, r2
   15138:	bls	15184 <__assert_fail@plt+0x3d80>
   1513c:	add	r0, r2, #1
   15140:	mov	r1, #10
   15144:	str	r0, [r5, #28]
   15148:	strb	r1, [r2]
   1514c:	ldr	r2, [r5, #28]
   15150:	b	14e30 <__assert_fail@plt+0x3a2c>
   15154:	ldr	r2, [r5, #28]
   15158:	ldr	r1, [r5, #32]
   1515c:	cmp	r2, r1
   15160:	bcs	151a0 <__assert_fail@plt+0x3d9c>
   15164:	add	r0, r2, #1
   15168:	mov	r1, #10
   1516c:	str	r0, [r5, #28]
   15170:	strb	r1, [r2]
   15174:	b	14e8c <__assert_fail@plt+0x3a88>
   15178:	mov	r0, r5
   1517c:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   15180:	b	14e78 <__assert_fail@plt+0x3a74>
   15184:	mov	r1, #1
   15188:	mov	r0, r5
   1518c:	bl	19230 <argp_parse@@Base+0x230c>
   15190:	cmp	r0, #0
   15194:	ldr	r2, [r5, #28]
   15198:	bne	1513c <__assert_fail@plt+0x3d38>
   1519c:	b	14e30 <__assert_fail@plt+0x3a2c>
   151a0:	mov	r1, #1
   151a4:	mov	r0, r5
   151a8:	bl	19230 <argp_parse@@Base+0x230c>
   151ac:	cmp	r0, #0
   151b0:	beq	14e8c <__assert_fail@plt+0x3a88>
   151b4:	ldr	r2, [r5, #28]
   151b8:	mov	r1, #10
   151bc:	add	r0, r2, #1
   151c0:	str	r0, [r5, #28]
   151c4:	strb	r1, [r2]
   151c8:	b	14e8c <__assert_fail@plt+0x3a88>
   151cc:	ldr	r0, [r5, #28]
   151d0:	ldr	r2, [r5, #32]
   151d4:	add	r3, r0, r4
   151d8:	cmp	r2, r3
   151dc:	bcs	151f8 <__assert_fail@plt+0x3df4>
   151e0:	mov	r1, r4
   151e4:	mov	r0, r5
   151e8:	bl	19230 <argp_parse@@Base+0x230c>
   151ec:	cmp	r0, #0
   151f0:	beq	14f0c <__assert_fail@plt+0x3b08>
   151f4:	ldr	r0, [r5, #28]
   151f8:	mov	r2, r4
   151fc:	mov	r1, r6
   15200:	bl	11158 <memcpy@plt>
   15204:	ldr	r3, [r5, #28]
   15208:	add	r4, r3, r4
   1520c:	str	r4, [r5, #28]
   15210:	b	14f0c <__assert_fail@plt+0x3b08>
   15214:	ldr	r3, [r5, #28]
   15218:	ldr	r2, [r5, #32]
   1521c:	cmp	r3, r2
   15220:	bcs	152bc <__assert_fail@plt+0x3eb8>
   15224:	add	r1, r3, #1
   15228:	mov	r2, #10
   1522c:	str	r1, [r5, #28]
   15230:	strb	r2, [r3]
   15234:	b	14efc <__assert_fail@plt+0x3af8>
   15238:	ldr	r3, [r5, #28]
   1523c:	ldr	r2, [r5, #32]
   15240:	cmp	r3, r2
   15244:	bcs	152a0 <__assert_fail@plt+0x3e9c>
   15248:	add	r1, r3, #1
   1524c:	mov	r2, #10
   15250:	mov	r4, #1
   15254:	str	r1, [r5, #28]
   15258:	strb	r2, [r3]
   1525c:	b	14f44 <__assert_fail@plt+0x3b40>
   15260:	mov	r0, r5
   15264:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   15268:	b	14f2c <__assert_fail@plt+0x3b28>
   1526c:	cmp	r3, #0
   15270:	movne	r1, fp
   15274:	movne	r0, r7
   15278:	movne	r6, r9
   1527c:	bne	15004 <__assert_fail@plt+0x3c00>
   15280:	mov	r4, r3
   15284:	b	14f44 <__assert_fail@plt+0x3b40>
   15288:	mov	r9, r6
   1528c:	str	r8, [sp, #12]
   15290:	str	r4, [sp, #16]
   15294:	b	14e18 <__assert_fail@plt+0x3a14>
   15298:	mov	r4, #1
   1529c:	b	14fc8 <__assert_fail@plt+0x3bc4>
   152a0:	mov	r1, #1
   152a4:	mov	r0, r5
   152a8:	bl	19230 <argp_parse@@Base+0x230c>
   152ac:	cmp	r0, #0
   152b0:	beq	14f40 <__assert_fail@plt+0x3b3c>
   152b4:	ldr	r3, [r5, #28]
   152b8:	b	15248 <__assert_fail@plt+0x3e44>
   152bc:	mov	r1, #1
   152c0:	mov	r0, r5
   152c4:	bl	19230 <argp_parse@@Base+0x230c>
   152c8:	cmp	r0, #0
   152cc:	beq	14efc <__assert_fail@plt+0x3af8>
   152d0:	ldr	r3, [r5, #28]
   152d4:	b	15224 <__assert_fail@plt+0x3e20>
   152d8:	ldr	r4, [sp, #20]
   152dc:	str	r4, [sp, #16]
   152e0:	b	14de4 <__assert_fail@plt+0x39e0>
   152e4:	cmp	r3, #0
   152e8:	beq	15074 <__assert_fail@plt+0x3c70>
   152ec:	mov	r1, fp
   152f0:	mov	r0, r7
   152f4:	bl	17da4 <argp_parse@@Base+0xe80>
   152f8:	str	r0, [sp, #12]
   152fc:	mov	r0, #1
   15300:	movt	r0, #512	; 0x200
   15304:	ldr	r3, [r7, #20]
   15308:	b	15018 <__assert_fail@plt+0x3c14>

0001530c <argp_failure@@Base>:
   1530c:	push	{r3}		; (str r3, [sp, #-4]!)
   15310:	strd	r4, [sp, #-20]!	; 0xffffffec
   15314:	subs	r5, r0, #0
   15318:	strd	r6, [sp, #8]
   1531c:	mov	r7, r1
   15320:	mov	r6, r2
   15324:	str	lr, [sp, #16]
   15328:	sub	sp, sp, #200	; 0xc8
   1532c:	beq	15488 <argp_failure@@Base+0x17c>
   15330:	ldr	r3, [r5, #16]
   15334:	tst	r3, #2
   15338:	bne	1546c <argp_failure@@Base+0x160>
   1533c:	ldr	r4, [r5, #44]	; 0x2c
   15340:	cmp	r4, #0
   15344:	beq	1546c <argp_failure@@Base+0x160>
   15348:	mov	r0, r4
   1534c:	bl	11380 <flockfile@plt>
   15350:	ldr	r0, [r5, #40]	; 0x28
   15354:	mov	r1, r4
   15358:	bl	110bc <fputs_unlocked@plt>
   1535c:	ldr	r3, [sp, #220]	; 0xdc
   15360:	cmp	r3, #0
   15364:	beq	153c0 <argp_failure@@Base+0xb4>
   15368:	ldr	r3, [r4, #20]
   1536c:	add	r1, sp, #224	; 0xe0
   15370:	ldr	r2, [r4, #24]
   15374:	str	r1, [sp]
   15378:	cmp	r3, r2
   1537c:	addcc	r1, r3, #1
   15380:	movcc	r2, #58	; 0x3a
   15384:	strcc	r1, [r4, #20]
   15388:	strbcc	r2, [r3]
   1538c:	bcs	154f8 <argp_failure@@Base+0x1ec>
   15390:	ldr	r3, [r4, #20]
   15394:	ldr	r2, [r4, #24]
   15398:	cmp	r3, r2
   1539c:	addcc	r1, r3, #1
   153a0:	movcc	r2, #32
   153a4:	strcc	r1, [r4, #20]
   153a8:	strbcc	r2, [r3]
   153ac:	bcs	154e8 <argp_failure@@Base+0x1dc>
   153b0:	mov	r0, r4
   153b4:	ldr	r2, [sp]
   153b8:	ldr	r1, [sp, #220]	; 0xdc
   153bc:	bl	11344 <vfprintf@plt>
   153c0:	cmp	r6, #0
   153c4:	ldr	r3, [r4, #20]
   153c8:	ldr	r2, [r4, #24]
   153cc:	beq	15430 <argp_failure@@Base+0x124>
   153d0:	cmp	r2, r3
   153d4:	addhi	r1, r3, #1
   153d8:	movhi	r2, #58	; 0x3a
   153dc:	strhi	r1, [r4, #20]
   153e0:	strbhi	r2, [r3]
   153e4:	bls	15518 <argp_failure@@Base+0x20c>
   153e8:	ldr	r3, [r4, #20]
   153ec:	ldr	r2, [r4, #24]
   153f0:	cmp	r3, r2
   153f4:	addcc	r1, r3, #1
   153f8:	movcc	r2, #32
   153fc:	strcc	r1, [r4, #20]
   15400:	strbcc	r2, [r3]
   15404:	bcs	15508 <argp_failure@@Base+0x1fc>
   15408:	mov	r2, #200	; 0xc8
   1540c:	mov	r1, sp
   15410:	mov	r0, r6
   15414:	bl	112cc <strerror_r@plt>
   15418:	cmp	r0, #0
   1541c:	beq	154cc <argp_failure@@Base+0x1c0>
   15420:	mov	r1, r4
   15424:	bl	110bc <fputs_unlocked@plt>
   15428:	ldr	r3, [r4, #20]
   1542c:	ldr	r2, [r4, #24]
   15430:	cmp	r3, r2
   15434:	addcc	r1, r3, #1
   15438:	movcc	r2, #10
   1543c:	strcc	r1, [r4, #20]
   15440:	strbcc	r2, [r3]
   15444:	bcs	154bc <argp_failure@@Base+0x1b0>
   15448:	mov	r0, r4
   1544c:	bl	111d0 <funlockfile@plt>
   15450:	cmp	r7, #0
   15454:	beq	1546c <argp_failure@@Base+0x160>
   15458:	cmp	r5, #0
   1545c:	beq	154b4 <argp_failure@@Base+0x1a8>
   15460:	ldr	r3, [r5, #16]
   15464:	tst	r3, #32
   15468:	beq	154b4 <argp_failure@@Base+0x1a8>
   1546c:	add	sp, sp, #200	; 0xc8
   15470:	ldrd	r4, [sp]
   15474:	ldrd	r6, [sp, #8]
   15478:	ldr	lr, [sp, #16]
   1547c:	add	sp, sp, #20
   15480:	add	sp, sp, #4
   15484:	bx	lr
   15488:	movw	r3, #50136	; 0xc3d8
   1548c:	movt	r3, #2
   15490:	ldr	r4, [r3]
   15494:	cmp	r4, #0
   15498:	beq	1546c <argp_failure@@Base+0x160>
   1549c:	mov	r0, r4
   154a0:	bl	11380 <flockfile@plt>
   154a4:	movw	r3, #50128	; 0xc3d0
   154a8:	movt	r3, #2
   154ac:	ldr	r0, [r3]
   154b0:	b	15354 <argp_failure@@Base+0x48>
   154b4:	mov	r0, r7
   154b8:	bl	11278 <exit@plt>
   154bc:	mov	r1, #10
   154c0:	mov	r0, r4
   154c4:	bl	11314 <__overflow@plt>
   154c8:	b	15448 <argp_failure@@Base+0x13c>
   154cc:	mov	r0, r6
   154d0:	bl	11230 <strerror@plt>
   154d4:	cmp	r0, #0
   154d8:	movw	r3, #43740	; 0xaadc
   154dc:	movt	r3, #1
   154e0:	moveq	r0, r3
   154e4:	b	15420 <argp_failure@@Base+0x114>
   154e8:	mov	r1, #32
   154ec:	mov	r0, r4
   154f0:	bl	11314 <__overflow@plt>
   154f4:	b	153b0 <argp_failure@@Base+0xa4>
   154f8:	mov	r1, #58	; 0x3a
   154fc:	mov	r0, r4
   15500:	bl	11314 <__overflow@plt>
   15504:	b	15390 <argp_failure@@Base+0x84>
   15508:	mov	r1, #32
   1550c:	mov	r0, r4
   15510:	bl	11314 <__overflow@plt>
   15514:	b	15408 <argp_failure@@Base+0xfc>
   15518:	mov	r1, #58	; 0x3a
   1551c:	mov	r0, r4
   15520:	bl	11314 <__overflow@plt>
   15524:	b	153e8 <argp_failure@@Base+0xdc>
   15528:	cmp	r2, #0
   1552c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15530:	strd	r6, [sp, #8]
   15534:	strd	r8, [sp, #16]
   15538:	strd	sl, [sp, #24]
   1553c:	add	fp, sp, #32
   15540:	str	lr, [sp, #32]
   15544:	sub	sp, sp, #124	; 0x7c
   15548:	str	r2, [fp, #-128]	; 0xffffff80
   1554c:	strd	r0, [fp, #-108]	; 0xffffff94
   15550:	str	r3, [fp, #-100]	; 0xffffff9c
   15554:	beq	159c8 <argp_failure@@Base+0x6bc>
   15558:	mov	r0, r2
   1555c:	movw	r8, #50064	; 0xc390
   15560:	movt	r8, #2
   15564:	bl	11380 <flockfile@plt>
   15568:	ldr	r3, [r8, #36]	; 0x24
   1556c:	cmp	r3, #0
   15570:	beq	159e4 <argp_failure@@Base+0x6d8>
   15574:	mov	r3, #0
   15578:	ldr	r0, [fp, #-128]	; 0xffffff80
   1557c:	mov	r1, r3
   15580:	ldr	r2, [r8, #32]
   15584:	bl	18b2c <argp_parse@@Base+0x1c08>
   15588:	subs	r7, r0, #0
   1558c:	beq	16504 <argp_failure@@Base+0x11f8>
   15590:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15594:	ands	r3, r3, #11
   15598:	streq	r3, [fp, #-136]	; 0xffffff78
   1559c:	bne	15d14 <argp_failure@@Base+0xa08>
   155a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155a4:	ands	r4, r3, #3
   155a8:	bne	15ba4 <argp_failure@@Base+0x898>
   155ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155b0:	tst	r3, #16
   155b4:	bne	15b70 <argp_failure@@Base+0x864>
   155b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   155bc:	tst	r3, #4
   155c0:	and	r5, r3, #8
   155c4:	bne	15aec <argp_failure@@Base+0x7e0>
   155c8:	cmp	r5, #0
   155cc:	beq	15960 <argp_failure@@Base+0x654>
   155d0:	ldr	r3, [fp, #-136]	; 0xffffff78
   155d4:	ldr	r3, [r3, #4]
   155d8:	cmp	r3, #0
   155dc:	str	r3, [fp, #-112]	; 0xffffff90
   155e0:	beq	15960 <argp_failure@@Base+0x654>
   155e4:	cmp	r4, #0
   155e8:	bne	15b1c <argp_failure@@Base+0x810>
   155ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   155f0:	ldr	r3, [r3]
   155f4:	str	r4, [fp, #-88]	; 0xffffffa8
   155f8:	str	r4, [fp, #-84]	; 0xffffffac
   155fc:	str	r4, [fp, #-80]	; 0xffffffb0
   15600:	mov	r2, r3
   15604:	movw	r3, #44576	; 0xae20
   15608:	movt	r3, #1
   1560c:	mov	r5, r2
   15610:	str	r3, [fp, #-140]	; 0xffffff74
   15614:	movw	r3, #44188	; 0xac9c
   15618:	movt	r3, #1
   1561c:	str	r8, [fp, #-96]	; 0xffffffa0
   15620:	str	r3, [fp, #-144]	; 0xffffff70
   15624:	ldr	r0, [r7, #16]
   15628:	ldr	r3, [r7, #24]
   1562c:	ldr	r2, [r7, #28]
   15630:	ldr	r4, [r5]
   15634:	ldr	r9, [r5, #8]
   15638:	sub	r2, r2, r3
   1563c:	cmp	r2, r0
   15640:	bhi	161f4 <argp_failure@@Base+0xee8>
   15644:	ldr	r1, [r7, #4]
   15648:	mov	r3, #1
   1564c:	ldr	r8, [r4, #12]
   15650:	str	r1, [fp, #-120]	; 0xffffff88
   15654:	mov	r1, #0
   15658:	str	r1, [r7, #4]
   1565c:	ldr	r1, [r7, #12]
   15660:	str	r3, [fp, #-64]	; 0xffffffc0
   15664:	ldr	r3, [fp, #-104]	; 0xffffff98
   15668:	str	r1, [fp, #-116]	; 0xffffff8c
   1566c:	ands	r1, r8, #8
   15670:	str	r5, [fp, #-76]	; 0xffffffb4
   15674:	str	r1, [fp, #-124]	; 0xffffff84
   15678:	sub	r1, fp, #88	; 0x58
   1567c:	str	r7, [fp, #-72]	; 0xffffffb8
   15680:	str	r3, [fp, #-60]	; 0xffffffc4
   15684:	movne	r3, #0
   15688:	str	r1, [fp, #-68]	; 0xffffffbc
   1568c:	strne	r3, [fp, #-124]	; 0xffffff84
   15690:	bne	156c8 <argp_failure@@Base+0x3bc>
   15694:	ldr	r1, [r5, #4]
   15698:	cmp	r1, #0
   1569c:	beq	156c8 <argp_failure@@Base+0x3bc>
   156a0:	add	r3, r4, #24
   156a4:	ldr	ip, [r3, #-24]	; 0xffffffe8
   156a8:	cmp	ip, #0
   156ac:	beq	156bc <argp_failure@@Base+0x3b0>
   156b0:	ldr	ip, [r3, #-12]
   156b4:	tst	ip, #2
   156b8:	beq	16314 <argp_failure@@Base+0x1008>
   156bc:	subs	r1, r1, #1
   156c0:	add	r3, r3, #24
   156c4:	bne	156a4 <argp_failure@@Base+0x398>
   156c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   156cc:	cmp	r2, r0
   156d0:	ldr	r6, [r3, #8]
   156d4:	bhi	16250 <argp_failure@@Base+0xf44>
   156d8:	str	r6, [r7, #12]
   156dc:	ldr	sl, [r5, #4]
   156e0:	cmp	sl, #0
   156e4:	movne	r6, r4
   156e8:	strne	r5, [fp, #-132]	; 0xffffff7c
   156ec:	movne	r5, r4
   156f0:	movne	r4, r9
   156f4:	beq	1574c <argp_failure@@Base+0x440>
   156f8:	ldr	r9, [r6, #12]
   156fc:	tst	r9, #8
   15700:	bne	15738 <argp_failure@@Base+0x42c>
   15704:	ldr	r8, [r6, #4]
   15708:	sub	r2, r8, #1
   1570c:	cmp	r2, #254	; 0xfe
   15710:	bhi	15738 <argp_failure@@Base+0x42c>
   15714:	bl	11260 <__ctype_b_loc@plt>
   15718:	ldr	r1, [r0]
   1571c:	lsl	r2, r8, #1
   15720:	ldrh	r2, [r1, r2]
   15724:	tst	r2, #16384	; 0x4000
   15728:	beq	15738 <argp_failure@@Base+0x42c>
   1572c:	ldrb	r2, [r4]
   15730:	cmp	r8, r2
   15734:	beq	15e7c <argp_failure@@Base+0xb70>
   15738:	subs	sl, sl, #1
   1573c:	add	r6, r6, #24
   15740:	bne	156f8 <argp_failure@@Base+0x3ec>
   15744:	mov	r4, r5
   15748:	ldr	r5, [fp, #-132]	; 0xffffff7c
   1574c:	ldr	r2, [r4, #12]
   15750:	ldr	r1, [r7, #24]
   15754:	ldr	r3, [r7, #28]
   15758:	tst	r2, #8
   1575c:	ldr	r2, [r7, #16]
   15760:	sub	r3, r3, r1
   15764:	beq	15f6c <argp_failure@@Base+0xc60>
   15768:	cmp	r3, r2
   1576c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15770:	ldr	r6, [r3, #16]
   15774:	bhi	16350 <argp_failure@@Base+0x1044>
   15778:	str	r6, [r7, #12]
   1577c:	ldr	r8, [r5, #4]
   15780:	cmp	r8, #0
   15784:	addne	r6, r4, #24
   15788:	bne	1579c <argp_failure@@Base+0x490>
   1578c:	b	1582c <argp_failure@@Base+0x520>
   15790:	subs	r8, r8, #1
   15794:	add	r6, r6, #24
   15798:	beq	1582c <argp_failure@@Base+0x520>
   1579c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   157a0:	cmp	r3, #0
   157a4:	beq	15790 <argp_failure@@Base+0x484>
   157a8:	ldr	r3, [r6, #-12]
   157ac:	tst	r3, #2
   157b0:	bne	15790 <argp_failure@@Base+0x484>
   157b4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   157b8:	sub	r1, fp, #76	; 0x4c
   157bc:	ldr	r0, [r3, #16]
   157c0:	bl	14b8c <__assert_fail@plt+0x3788>
   157c4:	ldr	sl, [r6, #-24]	; 0xffffffe8
   157c8:	mov	r0, sl
   157cc:	bl	11290 <strlen@plt>
   157d0:	subs	r9, r0, #0
   157d4:	beq	15790 <argp_failure@@Base+0x484>
   157d8:	ldr	ip, [r7, #28]
   157dc:	mov	r1, r9
   157e0:	mov	r0, r7
   157e4:	ldr	lr, [r7, #32]
   157e8:	add	r2, ip, r9
   157ec:	cmp	lr, r2
   157f0:	bcs	15804 <argp_failure@@Base+0x4f8>
   157f4:	bl	19230 <argp_parse@@Base+0x230c>
   157f8:	cmp	r0, #0
   157fc:	beq	15790 <argp_failure@@Base+0x484>
   15800:	ldr	ip, [r7, #28]
   15804:	mov	r2, r9
   15808:	mov	r1, sl
   1580c:	mov	r0, ip
   15810:	add	r6, r6, #24
   15814:	bl	11158 <memcpy@plt>
   15818:	ldr	r2, [r7, #28]
   1581c:	subs	r8, r8, #1
   15820:	add	r3, r2, r9
   15824:	str	r3, [r7, #28]
   15828:	bne	1579c <argp_failure@@Base+0x490>
   1582c:	ldr	r2, [r7, #16]
   15830:	ldr	r1, [r7, #24]
   15834:	ldr	r3, [r7, #28]
   15838:	sub	r3, r3, r1
   1583c:	cmp	r3, r2
   15840:	bhi	16244 <argp_failure@@Base+0xf38>
   15844:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15848:	mov	r2, #0
   1584c:	str	r2, [r7, #4]
   15850:	cmp	r3, r2
   15854:	beq	15e8c <argp_failure@@Base+0xb80>
   15858:	ldr	r3, [r4, #12]
   1585c:	tst	r3, #8
   15860:	bne	1588c <argp_failure@@Base+0x580>
   15864:	ldr	r6, [r4, #4]
   15868:	sub	r3, r6, #1
   1586c:	cmp	r3, #254	; 0xfe
   15870:	bhi	1588c <argp_failure@@Base+0x580>
   15874:	bl	11260 <__ctype_b_loc@plt>
   15878:	ldr	r3, [r0]
   1587c:	lsl	r6, r6, #1
   15880:	ldrh	r3, [r3, r6]
   15884:	tst	r3, #16384	; 0x4000
   15888:	bne	15898 <argp_failure@@Base+0x58c>
   1588c:	ldr	r3, [r4]
   15890:	cmp	r3, #0
   15894:	beq	16380 <argp_failure@@Base+0x1074>
   15898:	ldr	r2, [r7, #16]
   1589c:	ldr	r1, [r7, #24]
   158a0:	ldr	r3, [r7, #28]
   158a4:	sub	r3, r3, r1
   158a8:	cmp	r3, r2
   158ac:	bhi	16210 <argp_failure@@Base+0xf04>
   158b0:	ldr	r3, [fp, #-120]	; 0xffffff88
   158b4:	str	r3, [r7, #4]
   158b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   158bc:	add	r5, r5, #28
   158c0:	subs	r3, r3, #1
   158c4:	str	r3, [fp, #-112]	; 0xffffff90
   158c8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   158cc:	str	r3, [r7, #12]
   158d0:	bne	15624 <argp_failure@@Base+0x318>
   158d4:	ldr	r8, [fp, #-96]	; 0xffffffa0
   158d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   158dc:	cmp	r3, #0
   158e0:	beq	1595c <argp_failure@@Base+0x650>
   158e4:	ldr	r3, [r8, #4]
   158e8:	cmp	r3, #0
   158ec:	beq	1595c <argp_failure@@Base+0x650>
   158f0:	ldr	ip, [fp, #-104]	; 0xffffff98
   158f4:	cmp	ip, #0
   158f8:	beq	166c0 <argp_failure@@Base+0x13b4>
   158fc:	ldr	r2, [ip]
   15900:	cmp	r2, #0
   15904:	beq	16630 <argp_failure@@Base+0x1324>
   15908:	ldr	r3, [r2, #20]
   1590c:	cmp	r3, #0
   15910:	beq	16630 <argp_failure@@Base+0x1324>
   15914:	movw	r5, #43764	; 0xaaf4
   15918:	movt	r5, #1
   1591c:	mov	r0, r5
   15920:	mov	r1, #5
   15924:	movt	r1, #512	; 0x200
   15928:	mov	r3, ip
   1592c:	bl	1372c <__assert_fail@plt+0x2328>
   15930:	subs	r4, r0, #0
   15934:	beq	1595c <argp_failure@@Base+0x650>
   15938:	ldrb	r3, [r4]
   1593c:	subs	r5, r4, r5
   15940:	movne	r5, #1
   15944:	cmp	r3, #0
   15948:	bne	1663c <argp_failure@@Base+0x1330>
   1594c:	cmp	r5, #0
   15950:	beq	1595c <argp_failure@@Base+0x650>
   15954:	mov	r0, r4
   15958:	bl	17f08 <argp_parse@@Base+0xfe4>
   1595c:	mov	r4, #1
   15960:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15964:	tst	r3, #32
   15968:	bne	15e1c <argp_failure@@Base+0xb10>
   1596c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15970:	tst	r3, #64	; 0x40
   15974:	beq	159a4 <argp_failure@@Base+0x698>
   15978:	movw	r5, #50264	; 0xc458
   1597c:	movt	r5, #2
   15980:	ldr	r2, [r5]
   15984:	cmp	r2, #0
   15988:	beq	159a4 <argp_failure@@Base+0x698>
   1598c:	cmp	r4, #0
   15990:	bne	15e54 <argp_failure@@Base+0xb48>
   15994:	movw	r1, #44220	; 0xacbc
   15998:	movt	r1, #1
   1599c:	mov	r0, r7
   159a0:	bl	19250 <argp_parse@@Base+0x232c>
   159a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   159a8:	bl	111d0 <funlockfile@plt>
   159ac:	ldr	r3, [fp, #-136]	; 0xffffff78
   159b0:	cmp	r3, #0
   159b4:	beq	159c0 <argp_failure@@Base+0x6b4>
   159b8:	mov	r0, r3
   159bc:	bl	133d8 <__assert_fail@plt+0x1fd4>
   159c0:	mov	r0, r7
   159c4:	bl	19100 <argp_parse@@Base+0x21dc>
   159c8:	sub	sp, fp, #32
   159cc:	ldrd	r4, [sp]
   159d0:	ldrd	r6, [sp, #8]
   159d4:	ldrd	r8, [sp, #16]
   159d8:	ldrd	sl, [sp, #24]
   159dc:	add	sp, sp, #32
   159e0:	pop	{pc}		; (ldr pc, [sp], #4)
   159e4:	movw	r0, #43880	; 0xab68
   159e8:	movt	r0, #1
   159ec:	bl	11200 <getenv@plt>
   159f0:	subs	r5, r0, #0
   159f4:	ldrd	r2, [r8]
   159f8:	sub	ip, fp, #76	; 0x4c
   159fc:	ldrd	r0, [r8, #8]
   15a00:	str	ip, [fp, #-96]	; 0xffffffa0
   15a04:	ldrd	r6, [r8, #16]
   15a08:	strd	r2, [fp, #-76]	; 0xffffffb4
   15a0c:	ldrd	r2, [r8, #24]
   15a10:	strd	r0, [fp, #-68]	; 0xffffffbc
   15a14:	ldrd	r0, [r8, #32]
   15a18:	strd	r6, [fp, #-60]	; 0xffffffc4
   15a1c:	strd	r2, [fp, #-52]	; 0xffffffcc
   15a20:	strd	r0, [fp, #-44]	; 0xffffffd4
   15a24:	beq	15574 <argp_failure@@Base+0x268>
   15a28:	ldrb	sl, [r5]
   15a2c:	movw	r3, #43944	; 0xaba8
   15a30:	movt	r3, #1
   15a34:	ldr	r9, [pc, #3300]	; 16720 <argp_failure@@Base+0x1414>
   15a38:	str	r3, [fp, #-116]	; 0xffffff8c
   15a3c:	movw	r3, #43896	; 0xab78
   15a40:	movt	r3, #1
   15a44:	str	r3, [fp, #-120]	; 0xffffff88
   15a48:	cmp	sl, #0
   15a4c:	beq	15a84 <argp_failure@@Base+0x778>
   15a50:	bl	11260 <__ctype_b_loc@plt>
   15a54:	mov	r7, r0
   15a58:	ldr	r1, [r0]
   15a5c:	b	15a64 <argp_failure@@Base+0x758>
   15a60:	ldrb	sl, [r5, #1]!
   15a64:	lsl	r3, sl, #1
   15a68:	ldrh	r6, [r1, r3]
   15a6c:	tst	r6, #8192	; 0x2000
   15a70:	bne	15a60 <argp_failure@@Base+0x754>
   15a74:	ands	r2, r6, #1024	; 0x400
   15a78:	bne	160e8 <argp_failure@@Base+0xddc>
   15a7c:	cmp	sl, #0
   15a80:	bne	16510 <argp_failure@@Base+0x1204>
   15a84:	ldr	r1, [pc, #3224]	; 16724 <argp_failure@@Base+0x1418>
   15a88:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15a8c:	add	r3, r1, #16
   15a90:	cmp	r3, r9
   15a94:	mov	r1, r3
   15a98:	beq	163ec <argp_failure@@Base+0x10e0>
   15a9c:	ldrb	r2, [r3, #14]
   15aa0:	cmp	r2, #0
   15aa4:	bne	15a8c <argp_failure@@Base+0x780>
   15aa8:	ldrb	r0, [r3, #15]
   15aac:	sub	ip, fp, #36	; 0x24
   15ab0:	cmp	r0, #32
   15ab4:	add	ip, ip, r0
   15ab8:	beq	15a8c <argp_failure@@Base+0x780>
   15abc:	ldr	r0, [ip, #-40]	; 0xffffffd8
   15ac0:	cmp	r0, lr
   15ac4:	blt	15a8c <argp_failure@@Base+0x780>
   15ac8:	movw	r0, #44068	; 0xac24
   15acc:	movt	r0, #1
   15ad0:	mov	r1, r2
   15ad4:	stm	sp, {r0, r3}
   15ad8:	movw	r3, #44016	; 0xabf0
   15adc:	movt	r3, #1
   15ae0:	ldr	r0, [fp, #-104]	; 0xffffff98
   15ae4:	bl	1530c <argp_failure@@Base>
   15ae8:	b	15574 <argp_failure@@Base+0x268>
   15aec:	ldr	r3, [fp, #4]
   15af0:	movw	r1, #44132	; 0xac64
   15af4:	movt	r1, #1
   15af8:	mov	r0, r7
   15afc:	mov	r2, r3
   15b00:	bl	19250 <argp_parse@@Base+0x232c>
   15b04:	cmp	r5, #0
   15b08:	beq	1595c <argp_failure@@Base+0x650>
   15b0c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15b10:	ldr	r3, [r3, #4]
   15b14:	cmp	r3, #0
   15b18:	beq	1595c <argp_failure@@Base+0x650>
   15b1c:	ldr	r3, [r7, #28]
   15b20:	ldr	r2, [r7, #32]
   15b24:	cmp	r3, r2
   15b28:	bcs	16578 <argp_failure@@Base+0x126c>
   15b2c:	add	r1, r3, #1
   15b30:	mov	r2, #10
   15b34:	str	r1, [r7, #28]
   15b38:	strb	r2, [r3]
   15b3c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15b40:	ldr	r3, [r3, #4]
   15b44:	str	r3, [fp, #-112]	; 0xffffff90
   15b48:	mov	r3, #0
   15b4c:	ldr	r2, [fp, #-112]	; 0xffffff90
   15b50:	cmp	r2, r3
   15b54:	ldr	r2, [fp, #-136]	; 0xffffff78
   15b58:	ldr	r2, [r2]
   15b5c:	str	r3, [fp, #-88]	; 0xffffffa8
   15b60:	str	r3, [fp, #-84]	; 0xffffffac
   15b64:	str	r3, [fp, #-80]	; 0xffffffb0
   15b68:	bne	15604 <argp_failure@@Base+0x2f8>
   15b6c:	b	1595c <argp_failure@@Base+0x650>
   15b70:	mov	r0, #1
   15b74:	mov	r3, #0
   15b78:	ldr	r1, [fp, #-104]	; 0xffffff98
   15b7c:	mov	r2, r3
   15b80:	stm	sp, {r0, r7}
   15b84:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b88:	bl	14d3c <__assert_fail@plt+0x3938>
   15b8c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b90:	orr	r4, r4, r0
   15b94:	tst	r3, #4
   15b98:	and	r5, r3, #8
   15b9c:	beq	155c8 <argp_failure@@Base+0x2bc>
   15ba0:	b	15aec <argp_failure@@Base+0x7e0>
   15ba4:	ldr	r3, [fp, #-108]	; 0xffffff94
   15ba8:	movw	r2, #44108	; 0xac4c
   15bac:	movt	r2, #1
   15bb0:	movw	sl, #44100	; 0xac44
   15bb4:	movt	sl, #1
   15bb8:	str	r2, [fp, #-120]	; 0xffffff88
   15bbc:	mov	r4, #1
   15bc0:	ldr	r0, [r3, #8]
   15bc4:	ldr	r1, [r3, #16]
   15bc8:	movw	r3, #44092	; 0xac3c
   15bcc:	movt	r3, #1
   15bd0:	str	r3, [fp, #-124]	; 0xffffff84
   15bd4:	bl	136c0 <__assert_fail@plt+0x22bc>
   15bd8:	add	r3, r0, #7
   15bdc:	mov	r2, r0
   15be0:	bic	r3, r3, #7
   15be4:	mov	r1, #0
   15be8:	sub	sp, sp, r3
   15bec:	add	r9, sp, #8
   15bf0:	mov	r0, r9
   15bf4:	bl	112e4 <memset@plt>
   15bf8:	sub	r3, fp, #76	; 0x4c
   15bfc:	str	sl, [fp, #-116]	; 0xffffff8c
   15c00:	str	r9, [fp, #-112]	; 0xffffff90
   15c04:	str	r3, [fp, #-96]	; 0xffffffa0
   15c08:	ldr	r9, [fp, #-136]	; 0xffffff78
   15c0c:	ldr	sl, [fp, #-100]	; 0xffffff9c
   15c10:	b	15cec <argp_failure@@Base+0x9e0>
   15c14:	cmp	r4, #0
   15c18:	mov	r0, r7
   15c1c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15c20:	ldr	r3, [fp, #-112]	; 0xffffff90
   15c24:	ldrne	r2, [fp, #-124]	; 0xffffff84
   15c28:	ldreq	r2, [fp, #-120]	; 0xffffff88
   15c2c:	ldr	r4, [r7, #12]
   15c30:	str	r5, [r7, #12]
   15c34:	str	r3, [fp, #-76]	; 0xffffffb4
   15c38:	ldr	r3, [fp, #4]
   15c3c:	bl	19250 <argp_parse@@Base+0x232c>
   15c40:	ldr	r2, [r7, #16]
   15c44:	ldr	r1, [r7, #24]
   15c48:	ldr	r3, [r7, #28]
   15c4c:	ldr	r5, [r8, #28]
   15c50:	sub	r3, r3, r1
   15c54:	cmp	r3, r2
   15c58:	bhi	15e10 <argp_failure@@Base+0xb04>
   15c5c:	tst	sl, #2
   15c60:	ldr	r6, [r7, #4]
   15c64:	str	r5, [r7, #4]
   15c68:	beq	15dfc <argp_failure@@Base+0xaf0>
   15c6c:	ldr	r3, [r9, #4]
   15c70:	cmp	r3, #0
   15c74:	bne	16394 <argp_failure@@Base+0x1088>
   15c78:	mov	r3, #1
   15c7c:	str	r7, [sp]
   15c80:	ldrd	r0, [fp, #-108]	; 0xffffff94
   15c84:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15c88:	bl	146e0 <__assert_fail@plt+0x32dc>
   15c8c:	ldr	r1, [r7, #16]
   15c90:	mov	r5, r0
   15c94:	ldrd	r2, [r7, #24]
   15c98:	sub	r2, r3, r2
   15c9c:	cmp	r2, r1
   15ca0:	strls	r4, [r7, #12]
   15ca4:	bhi	15dcc <argp_failure@@Base+0xac0>
   15ca8:	ldr	r2, [r7, #32]
   15cac:	str	r6, [r7, #4]
   15cb0:	cmp	r2, r3
   15cb4:	bhi	15cd0 <argp_failure@@Base+0x9c4>
   15cb8:	mov	r1, #1
   15cbc:	mov	r0, r7
   15cc0:	bl	19230 <argp_parse@@Base+0x230c>
   15cc4:	cmp	r0, #0
   15cc8:	beq	15ce0 <argp_failure@@Base+0x9d4>
   15ccc:	ldr	r3, [r7, #28]
   15cd0:	add	r1, r3, #1
   15cd4:	mov	r2, #10
   15cd8:	str	r1, [r7, #28]
   15cdc:	strb	r2, [r3]
   15ce0:	cmp	r5, #0
   15ce4:	mov	r4, #0
   15ce8:	beq	15e3c <argp_failure@@Base+0xb30>
   15cec:	ldr	r2, [r7, #16]
   15cf0:	ldr	r1, [r7, #24]
   15cf4:	ldr	r3, [r7, #28]
   15cf8:	ldr	r5, [r8, #28]
   15cfc:	sub	r3, r3, r1
   15d00:	cmp	r3, r2
   15d04:	bls	15c14 <argp_failure@@Base+0x908>
   15d08:	mov	r0, r7
   15d0c:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   15d10:	b	15c14 <argp_failure@@Base+0x908>
   15d14:	mov	r1, #0
   15d18:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d1c:	bl	13774 <__assert_fail@plt+0x2370>
   15d20:	ldr	r5, [r0]
   15d24:	mov	r6, r0
   15d28:	movw	r2, #44076	; 0xac2c
   15d2c:	movt	r2, #1
   15d30:	ldr	r4, [r0, #4]
   15d34:	str	r6, [fp, #-136]	; 0xffffff78
   15d38:	mov	r0, r5
   15d3c:	mov	r1, r4
   15d40:	bl	1361c <__assert_fail@plt+0x2218>
   15d44:	cmp	r0, #0
   15d48:	beq	15d58 <argp_failure@@Base+0xa4c>
   15d4c:	mvn	r3, #0
   15d50:	str	r3, [r0, #12]
   15d54:	ldr	r4, [r6, #4]
   15d58:	movw	r2, #44084	; 0xac34
   15d5c:	movt	r2, #1
   15d60:	mov	r1, r4
   15d64:	mov	r0, r5
   15d68:	bl	1361c <__assert_fail@plt+0x2218>
   15d6c:	cmp	r0, #0
   15d70:	beq	15d84 <argp_failure@@Base+0xa78>
   15d74:	mvn	r3, #0
   15d78:	str	r3, [r0, #12]
   15d7c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15d80:	ldr	r4, [r3, #4]
   15d84:	cmp	r4, #0
   15d88:	beq	155a0 <argp_failure@@Base+0x294>
   15d8c:	mov	r3, r5
   15d90:	mov	r1, #0
   15d94:	str	r1, [r3, #24]
   15d98:	add	r1, r1, #1
   15d9c:	add	r3, r3, #28
   15da0:	cmp	r1, r4
   15da4:	bne	15d94 <argp_failure@@Base+0xa88>
   15da8:	mov	r0, r5
   15dac:	movw	r3, #16672	; 0x4120
   15db0:	movt	r3, #1
   15db4:	mov	r2, #28
   15db8:	bl	113a4 <qsort@plt>
   15dbc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15dc0:	ands	r4, r3, #3
   15dc4:	beq	155ac <argp_failure@@Base+0x2a0>
   15dc8:	b	15ba4 <argp_failure@@Base+0x898>
   15dcc:	mov	r0, r7
   15dd0:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   15dd4:	ldr	r1, [r7, #16]
   15dd8:	str	r4, [r7, #12]
   15ddc:	ldrd	r2, [r7, #24]
   15de0:	sub	r2, r3, r2
   15de4:	cmp	r2, r1
   15de8:	bls	15ca8 <argp_failure@@Base+0x99c>
   15dec:	mov	r0, r7
   15df0:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   15df4:	ldr	r3, [r7, #28]
   15df8:	b	15ca8 <argp_failure@@Base+0x99c>
   15dfc:	mov	r1, r7
   15e00:	mov	r0, r9
   15e04:	orr	sl, sl, #2
   15e08:	bl	13f3c <__assert_fail@plt+0x2b38>
   15e0c:	b	15c78 <argp_failure@@Base+0x96c>
   15e10:	mov	r0, r7
   15e14:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   15e18:	b	15c5c <argp_failure@@Base+0x950>
   15e1c:	mov	r2, #0
   15e20:	mov	r3, r4
   15e24:	ldrd	r0, [fp, #-108]	; 0xffffff94
   15e28:	stm	sp, {r2, r7}
   15e2c:	mov	r2, #1
   15e30:	bl	14d3c <__assert_fail@plt+0x3938>
   15e34:	orr	r4, r4, r0
   15e38:	b	1596c <argp_failure@@Base+0x660>
   15e3c:	str	sl, [fp, #-100]	; 0xffffff9c
   15e40:	mov	r4, #1
   15e44:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15e48:	tst	r3, #16
   15e4c:	beq	155b8 <argp_failure@@Base+0x2ac>
   15e50:	b	15b70 <argp_failure@@Base+0x864>
   15e54:	ldr	r3, [r7, #28]
   15e58:	ldr	r2, [r7, #32]
   15e5c:	cmp	r3, r2
   15e60:	bcs	16548 <argp_failure@@Base+0x123c>
   15e64:	add	r1, r3, #1
   15e68:	mov	r2, #10
   15e6c:	str	r1, [r7, #28]
   15e70:	strb	r2, [r3]
   15e74:	ldr	r2, [r5]
   15e78:	b	15994 <argp_failure@@Base+0x688>
   15e7c:	tst	r9, #2
   15e80:	beq	16264 <argp_failure@@Base+0xf58>
   15e84:	add	r4, r4, #1
   15e88:	b	15738 <argp_failure@@Base+0x42c>
   15e8c:	ldr	r2, [r5, #20]
   15e90:	ldr	r6, [r4, #16]
   15e94:	cmp	r2, #0
   15e98:	beq	1625c <argp_failure@@Base+0xf50>
   15e9c:	ldr	r3, [r2, #20]
   15ea0:	cmp	r3, #0
   15ea4:	beq	1625c <argp_failure@@Base+0xf50>
   15ea8:	mov	r0, r6
   15eac:	ldr	r3, [fp, #-104]	; 0xffffff98
   15eb0:	ldr	r1, [r4, #4]
   15eb4:	bl	1372c <__assert_fail@plt+0x2328>
   15eb8:	mov	r4, r0
   15ebc:	cmp	r4, #0
   15ec0:	beq	16090 <argp_failure@@Base+0xd84>
   15ec4:	ldrb	r3, [r4]
   15ec8:	cmp	r3, #0
   15ecc:	beq	16080 <argp_failure@@Base+0xd74>
   15ed0:	ldr	r2, [r7, #16]
   15ed4:	ldr	r1, [r7, #24]
   15ed8:	ldr	r3, [r7, #28]
   15edc:	sub	r3, r3, r1
   15ee0:	cmp	r3, r2
   15ee4:	bhi	16498 <argp_failure@@Base+0x118c>
   15ee8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15eec:	ldr	r9, [r7, #20]
   15ef0:	ldr	r8, [r3, #20]
   15ef4:	bic	r9, r9, r9, asr #31
   15ef8:	mov	sl, r8
   15efc:	str	r8, [r7, #4]
   15f00:	add	r3, r8, #3
   15f04:	str	sl, [r7, #12]
   15f08:	cmp	r3, r9
   15f0c:	bcc	16474 <argp_failure@@Base+0x1168>
   15f10:	cmp	r8, r9
   15f14:	bhi	16020 <argp_failure@@Base+0xd14>
   15f18:	ldr	r3, [r7, #28]
   15f1c:	ldr	r1, [r7, #32]
   15f20:	add	r2, r3, #3
   15f24:	cmp	r1, r2
   15f28:	bcs	15f44 <argp_failure@@Base+0xc38>
   15f2c:	mov	r1, #3
   15f30:	mov	r0, r7
   15f34:	bl	19230 <argp_parse@@Base+0x230c>
   15f38:	cmp	r0, #0
   15f3c:	beq	1602c <argp_failure@@Base+0xd20>
   15f40:	ldr	r3, [r7, #28]
   15f44:	movw	r2, #44216	; 0xacb8
   15f48:	movt	r2, #1
   15f4c:	ldrh	r1, [r2]
   15f50:	ldrb	r2, [r2, #2]
   15f54:	strh	r1, [r3]
   15f58:	strb	r2, [r3, #2]
   15f5c:	ldr	r3, [r7, #28]
   15f60:	add	r3, r3, #3
   15f64:	str	r3, [r7, #28]
   15f68:	b	1602c <argp_failure@@Base+0xd20>
   15f6c:	cmp	r3, r2
   15f70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f74:	ldr	r6, [r3, #12]
   15f78:	bhi	16334 <argp_failure@@Base+0x1028>
   15f7c:	str	r6, [r7, #12]
   15f80:	ldr	sl, [r5, #4]
   15f84:	cmp	sl, #0
   15f88:	beq	1582c <argp_failure@@Base+0x520>
   15f8c:	movw	r3, #44204	; 0xacac
   15f90:	movt	r3, #1
   15f94:	movw	r8, #44196	; 0xaca4
   15f98:	movt	r8, #1
   15f9c:	movw	r9, #44212	; 0xacb4
   15fa0:	movt	r9, #1
   15fa4:	str	r3, [fp, #-124]	; 0xffffff84
   15fa8:	add	r6, r4, #24
   15fac:	b	15fbc <argp_failure@@Base+0xcb0>
   15fb0:	subs	sl, sl, #1
   15fb4:	add	r6, r6, #24
   15fb8:	beq	1582c <argp_failure@@Base+0x520>
   15fbc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15fc0:	cmp	r3, #0
   15fc4:	beq	15fb0 <argp_failure@@Base+0xca4>
   15fc8:	ldr	r3, [r6, #-12]
   15fcc:	tst	r3, #2
   15fd0:	bne	15fb0 <argp_failure@@Base+0xca4>
   15fd4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15fd8:	sub	r1, fp, #76	; 0x4c
   15fdc:	ldr	r0, [r3, #12]
   15fe0:	bl	14b8c <__assert_fail@plt+0x3788>
   15fe4:	mov	r1, r8
   15fe8:	mov	r0, r7
   15fec:	ldr	r2, [r6, #-24]	; 0xffffffe8
   15ff0:	bl	19250 <argp_parse@@Base+0x232c>
   15ff4:	ldr	r3, [r4, #8]
   15ff8:	cmp	r3, #0
   15ffc:	beq	15fb0 <argp_failure@@Base+0xca4>
   16000:	ldr	ip, [r4, #12]
   16004:	mov	r1, r9
   16008:	mov	r2, r3
   1600c:	mov	r0, r7
   16010:	tst	ip, #1
   16014:	ldrne	r1, [fp, #-124]	; 0xffffff84
   16018:	bl	19250 <argp_parse@@Base+0x232c>
   1601c:	b	15fb0 <argp_failure@@Base+0xca4>
   16020:	mov	r1, r8
   16024:	mov	r0, r7
   16028:	bl	144c4 <__assert_fail@plt+0x30c0>
   1602c:	mov	r0, r4
   16030:	bl	11290 <strlen@plt>
   16034:	subs	r8, r0, #0
   16038:	beq	16080 <argp_failure@@Base+0xd74>
   1603c:	ldr	r0, [r7, #28]
   16040:	ldr	r2, [r7, #32]
   16044:	add	r3, r0, r8
   16048:	cmp	r2, r3
   1604c:	bcs	16068 <argp_failure@@Base+0xd5c>
   16050:	mov	r1, r8
   16054:	mov	r0, r7
   16058:	bl	19230 <argp_parse@@Base+0x230c>
   1605c:	cmp	r0, #0
   16060:	beq	16080 <argp_failure@@Base+0xd74>
   16064:	ldr	r0, [r7, #28]
   16068:	mov	r2, r8
   1606c:	mov	r1, r4
   16070:	bl	11158 <memcpy@plt>
   16074:	ldr	r3, [r7, #28]
   16078:	add	r8, r3, r8
   1607c:	str	r8, [r7, #28]
   16080:	cmp	r6, r4
   16084:	beq	16090 <argp_failure@@Base+0xd84>
   16088:	mov	r0, r4
   1608c:	bl	17f08 <argp_parse@@Base+0xfe4>
   16090:	ldr	r1, [r7, #16]
   16094:	ldrd	r2, [r7, #24]
   16098:	sub	r2, r3, r2
   1609c:	cmp	r2, r1
   160a0:	bhi	16340 <argp_failure@@Base+0x1034>
   160a4:	mov	r2, #0
   160a8:	str	r2, [r7, #4]
   160ac:	ldr	r2, [r7, #32]
   160b0:	cmp	r2, r3
   160b4:	bhi	160d0 <argp_failure@@Base+0xdc4>
   160b8:	mov	r1, #1
   160bc:	mov	r0, r7
   160c0:	bl	19230 <argp_parse@@Base+0x230c>
   160c4:	cmp	r0, #0
   160c8:	beq	160e0 <argp_failure@@Base+0xdd4>
   160cc:	ldr	r3, [r7, #28]
   160d0:	add	r1, r3, #1
   160d4:	mov	r2, #10
   160d8:	str	r1, [r7, #28]
   160dc:	strb	r2, [r3]
   160e0:	str	r5, [fp, #-88]	; 0xffffffa8
   160e4:	b	15898 <argp_failure@@Base+0x58c>
   160e8:	cmp	sl, #95	; 0x5f
   160ec:	cmpne	sl, #45	; 0x2d
   160f0:	ubfx	r6, r6, #3, #1
   160f4:	moveq	r3, #1
   160f8:	movne	r3, #0
   160fc:	orrs	r6, r3, r6
   16100:	beq	16624 <argp_failure@@Base+0x1318>
   16104:	mov	r4, r5
   16108:	ldrb	r3, [r4, #1]!
   1610c:	lsl	r2, r3, #1
   16110:	cmp	r3, #45	; 0x2d
   16114:	cmpne	r3, #95	; 0x5f
   16118:	moveq	ip, #1
   1611c:	movne	ip, #0
   16120:	ldrh	r2, [r1, r2]
   16124:	ubfx	r0, r2, #3, #1
   16128:	orrs	r0, ip, r0
   1612c:	bne	16108 <argp_failure@@Base+0xdfc>
   16130:	tst	r2, #8192	; 0x2000
   16134:	sub	r6, r4, r5
   16138:	beq	16150 <argp_failure@@Base+0xe44>
   1613c:	ldrb	r3, [r4, #1]!
   16140:	lsl	r2, r3, #1
   16144:	ldrh	r2, [r1, r2]
   16148:	tst	r2, #8192	; 0x2000
   1614c:	bne	1613c <argp_failure@@Base+0xe30>
   16150:	cmp	r3, #44	; 0x2c
   16154:	cmpne	r3, #0
   16158:	beq	16320 <argp_failure@@Base+0x1014>
   1615c:	cmp	r3, #61	; 0x3d
   16160:	beq	16594 <argp_failure@@Base+0x1288>
   16164:	ldrb	r3, [r4]
   16168:	lsl	r3, r3, #1
   1616c:	ldrh	r3, [r1, r3]
   16170:	ands	r3, r3, #2048	; 0x800
   16174:	moveq	r7, r3
   16178:	streq	r7, [fp, #-112]	; 0xffffff90
   1617c:	bne	165c4 <argp_failure@@Base+0x12b8>
   16180:	ldr	sl, [pc, #1436]	; 16724 <argp_failure@@Base+0x1418>
   16184:	b	16194 <argp_failure@@Base+0xe88>
   16188:	add	sl, sl, #16
   1618c:	cmp	sl, r9
   16190:	beq	16424 <argp_failure@@Base+0x1118>
   16194:	mov	r0, sl
   16198:	bl	11290 <strlen@plt>
   1619c:	cmp	r0, r6
   161a0:	bne	16188 <argp_failure@@Base+0xe7c>
   161a4:	mov	r2, r6
   161a8:	mov	r1, sl
   161ac:	mov	r0, r5
   161b0:	bl	113e0 <strncmp@plt>
   161b4:	cmp	r0, #0
   161b8:	bne	16188 <argp_failure@@Base+0xe7c>
   161bc:	cmp	r7, #0
   161c0:	bne	16564 <argp_failure@@Base+0x1258>
   161c4:	ldrb	r3, [sl, #15]
   161c8:	sub	r2, fp, #36	; 0x24
   161cc:	add	r3, r2, r3
   161d0:	ldr	r2, [fp, #-112]	; 0xffffff90
   161d4:	str	r2, [r3, #-40]	; 0xffffffd8
   161d8:	ldrb	sl, [r4]
   161dc:	cmp	sl, #44	; 0x2c
   161e0:	movne	r5, r4
   161e4:	bne	15a48 <argp_failure@@Base+0x73c>
   161e8:	add	r5, r4, #1
   161ec:	ldrb	sl, [r4, #1]
   161f0:	b	15a48 <argp_failure@@Base+0x73c>
   161f4:	mov	r0, r7
   161f8:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   161fc:	ldr	r0, [r7, #16]
   16200:	ldr	r3, [r7, #24]
   16204:	ldr	r2, [r7, #28]
   16208:	sub	r2, r2, r3
   1620c:	b	15644 <argp_failure@@Base+0x338>
   16210:	mov	r0, r7
   16214:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   16218:	ldr	r3, [fp, #-120]	; 0xffffff88
   1621c:	ldr	r2, [r7, #16]
   16220:	ldr	r1, [r7, #24]
   16224:	str	r3, [r7, #4]
   16228:	ldr	r3, [r7, #28]
   1622c:	sub	r3, r3, r1
   16230:	cmp	r3, r2
   16234:	bls	158b8 <argp_failure@@Base+0x5ac>
   16238:	mov	r0, r7
   1623c:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   16240:	b	158b8 <argp_failure@@Base+0x5ac>
   16244:	mov	r0, r7
   16248:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   1624c:	b	15844 <argp_failure@@Base+0x538>
   16250:	mov	r0, r7
   16254:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   16258:	b	156d8 <argp_failure@@Base+0x3cc>
   1625c:	mov	r4, r6
   16260:	b	15ebc <argp_failure@@Base+0xbb0>
   16264:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16268:	sub	r1, fp, #76	; 0x4c
   1626c:	ldr	r0, [r3, #8]
   16270:	bl	14b8c <__assert_fail@plt+0x3788>
   16274:	ldr	r2, [r7, #28]
   16278:	ldr	r1, [r7, #32]
   1627c:	cmp	r2, r1
   16280:	bcc	1629c <argp_failure@@Base+0xf90>
   16284:	mov	r1, #1
   16288:	mov	r0, r7
   1628c:	bl	19230 <argp_parse@@Base+0x230c>
   16290:	cmp	r0, #0
   16294:	beq	162ac <argp_failure@@Base+0xfa0>
   16298:	ldr	r2, [r7, #28]
   1629c:	add	r0, r2, #1
   162a0:	mov	r1, #45	; 0x2d
   162a4:	str	r0, [r7, #28]
   162a8:	strb	r1, [r2]
   162ac:	ldr	r2, [r7, #28]
   162b0:	ldr	r1, [r7, #32]
   162b4:	ldrb	r8, [r4]
   162b8:	cmp	r2, r1
   162bc:	bcc	162d8 <argp_failure@@Base+0xfcc>
   162c0:	mov	r1, #1
   162c4:	mov	r0, r7
   162c8:	bl	19230 <argp_parse@@Base+0x230c>
   162cc:	cmp	r0, #0
   162d0:	beq	162e4 <argp_failure@@Base+0xfd8>
   162d4:	ldr	r2, [r7, #28]
   162d8:	add	r1, r2, #1
   162dc:	str	r1, [r7, #28]
   162e0:	strb	r8, [r2]
   162e4:	ldr	r3, [fp, #-124]	; 0xffffff84
   162e8:	ldr	r2, [r5, #8]
   162ec:	cmp	r3, #0
   162f0:	beq	1635c <argp_failure@@Base+0x1050>
   162f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   162f8:	ldr	r1, [r3]
   162fc:	cmp	r1, #0
   16300:	bne	1635c <argp_failure@@Base+0x1050>
   16304:	cmp	r2, #0
   16308:	movne	r2, #1
   1630c:	strne	r2, [fp, #-80]	; 0xffffffb0
   16310:	b	15e84 <argp_failure@@Base+0xb78>
   16314:	mov	r3, #1
   16318:	str	r3, [fp, #-124]	; 0xffffff84
   1631c:	b	156c8 <argp_failure@@Base+0x3bc>
   16320:	cmp	sl, #110	; 0x6e
   16324:	beq	16444 <argp_failure@@Base+0x1138>
   16328:	mov	r7, #1
   1632c:	str	r7, [fp, #-112]	; 0xffffff90
   16330:	b	16180 <argp_failure@@Base+0xe74>
   16334:	mov	r0, r7
   16338:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   1633c:	b	15f7c <argp_failure@@Base+0xc70>
   16340:	mov	r0, r7
   16344:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   16348:	ldr	r3, [r7, #28]
   1634c:	b	160a4 <argp_failure@@Base+0xd98>
   16350:	mov	r0, r7
   16354:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   16358:	b	15778 <argp_failure@@Base+0x46c>
   1635c:	cmp	r2, #0
   16360:	beq	15e84 <argp_failure@@Base+0xb78>
   16364:	ldr	r1, [r5, #12]
   16368:	mov	r0, r7
   1636c:	tst	r1, #1
   16370:	ldrne	r1, [fp, #-144]	; 0xffffff70
   16374:	ldreq	r1, [fp, #-140]	; 0xffffff74
   16378:	bl	19250 <argp_parse@@Base+0x232c>
   1637c:	b	15e84 <argp_failure@@Base+0xb78>
   16380:	sub	r2, fp, #76	; 0x4c
   16384:	ldr	r0, [r4, #16]
   16388:	ldr	r1, [r5, #20]
   1638c:	bl	14920 <__assert_fail@plt+0x351c>
   16390:	b	160e0 <argp_failure@@Base+0xdd4>
   16394:	ldr	r3, [r7, #28]
   16398:	ldr	r1, [r7, #32]
   1639c:	add	r2, r3, #12
   163a0:	cmp	r1, r2
   163a4:	bcs	163c0 <argp_failure@@Base+0x10b4>
   163a8:	mov	r1, #12
   163ac:	mov	r0, r7
   163b0:	bl	19230 <argp_parse@@Base+0x230c>
   163b4:	cmp	r0, #0
   163b8:	beq	15c78 <argp_failure@@Base+0x96c>
   163bc:	ldr	r3, [r7, #28]
   163c0:	movw	r2, #44116	; 0xac54
   163c4:	movt	r2, #1
   163c8:	ldrd	r0, [r2]
   163cc:	ldr	r2, [r2, #8]
   163d0:	str	r0, [r3]
   163d4:	str	r1, [r3, #4]
   163d8:	str	r2, [r3, #8]
   163dc:	ldr	r3, [r7, #28]
   163e0:	add	r3, r3, #12
   163e4:	str	r3, [r7, #28]
   163e8:	b	15c78 <argp_failure@@Base+0x96c>
   163ec:	ldr	lr, [fp, #-96]	; 0xffffffa0
   163f0:	mov	ip, #1
   163f4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   163f8:	ldrd	r4, [lr, #8]
   163fc:	ldrd	r2, [lr, #32]
   16400:	strd	r0, [r8]
   16404:	ldrd	r0, [lr, #24]
   16408:	strd	r4, [r8, #8]
   1640c:	strd	r2, [r8, #32]
   16410:	ldrd	r2, [lr, #16]
   16414:	strd	r2, [r8, #16]
   16418:	strd	r0, [r8, #24]
   1641c:	str	ip, [r8, #36]	; 0x24
   16420:	b	15574 <argp_failure@@Base+0x268>
   16424:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16428:	mov	r2, #0
   1642c:	mov	r1, r2
   16430:	str	r6, [sp]
   16434:	str	r5, [sp, #4]
   16438:	ldr	r0, [fp, #-104]	; 0xffffff98
   1643c:	bl	1530c <argp_failure@@Base>
   16440:	b	161d8 <argp_failure@@Base+0xecc>
   16444:	ldrb	r3, [r5, #1]
   16448:	cmp	r3, #111	; 0x6f
   1644c:	bne	16328 <argp_failure@@Base+0x101c>
   16450:	ldrb	r3, [r5, #2]
   16454:	cmp	r3, #45	; 0x2d
   16458:	bne	16328 <argp_failure@@Base+0x101c>
   1645c:	mov	r3, #0
   16460:	add	r5, r5, #3
   16464:	sub	r6, r6, #3
   16468:	mov	r7, #1
   1646c:	str	r3, [fp, #-112]	; 0xffffff90
   16470:	b	16180 <argp_failure@@Base+0xe74>
   16474:	ldr	r3, [r7, #28]
   16478:	ldr	r2, [r7, #32]
   1647c:	cmp	r3, r2
   16480:	bcs	1652c <argp_failure@@Base+0x1220>
   16484:	add	r1, r3, #1
   16488:	mov	r2, #10
   1648c:	str	r1, [r7, #28]
   16490:	strb	r2, [r3]
   16494:	b	1602c <argp_failure@@Base+0xd20>
   16498:	mov	r0, r7
   1649c:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   164a0:	ldr	r2, [r7, #16]
   164a4:	ldr	r1, [r7, #24]
   164a8:	ldr	r3, [r7, #28]
   164ac:	ldr	sl, [fp, #-96]	; 0xffffffa0
   164b0:	ldr	r9, [r7, #20]
   164b4:	sub	r3, r3, r1
   164b8:	cmp	r3, r2
   164bc:	ldr	r8, [sl, #20]
   164c0:	bic	r9, r9, r9, asr #31
   164c4:	bls	15ef8 <argp_failure@@Base+0xbec>
   164c8:	mov	r0, r7
   164cc:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   164d0:	ldr	r2, [r7, #16]
   164d4:	str	r8, [r7, #4]
   164d8:	mov	r8, sl
   164dc:	ldr	r1, [r7, #24]
   164e0:	ldr	r3, [r7, #28]
   164e4:	ldr	sl, [sl, #20]
   164e8:	sub	r3, r3, r1
   164ec:	cmp	r3, r2
   164f0:	bls	16718 <argp_failure@@Base+0x140c>
   164f4:	mov	r0, r7
   164f8:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   164fc:	ldr	r8, [r8, #20]
   16500:	b	15f00 <argp_failure@@Base+0xbf4>
   16504:	ldr	r0, [fp, #-128]	; 0xffffff80
   16508:	bl	111d0 <funlockfile@plt>
   1650c:	b	159c8 <argp_failure@@Base+0x6bc>
   16510:	movw	r3, #43984	; 0xabd0
   16514:	movt	r3, #1
   16518:	str	r5, [sp]
   1651c:	mov	r1, r2
   16520:	ldr	r0, [fp, #-104]	; 0xffffff98
   16524:	bl	1530c <argp_failure@@Base>
   16528:	b	15a84 <argp_failure@@Base+0x778>
   1652c:	mov	r1, #1
   16530:	mov	r0, r7
   16534:	bl	19230 <argp_parse@@Base+0x230c>
   16538:	cmp	r0, #0
   1653c:	beq	1602c <argp_failure@@Base+0xd20>
   16540:	ldr	r3, [r7, #28]
   16544:	b	16484 <argp_failure@@Base+0x1178>
   16548:	mov	r1, #1
   1654c:	mov	r0, r7
   16550:	bl	19230 <argp_parse@@Base+0x230c>
   16554:	cmp	r0, #0
   16558:	ldrne	r3, [r7, #28]
   1655c:	bne	15e64 <argp_failure@@Base+0xb58>
   16560:	b	15e74 <argp_failure@@Base+0xb68>
   16564:	ldrb	r2, [sl, #14]
   16568:	cmp	r2, #0
   1656c:	bne	161c4 <argp_failure@@Base+0xeb8>
   16570:	ldr	r3, [fp, #-120]	; 0xffffff88
   16574:	b	1642c <argp_failure@@Base+0x1120>
   16578:	mov	r1, #1
   1657c:	mov	r0, r7
   16580:	bl	19230 <argp_parse@@Base+0x230c>
   16584:	cmp	r0, #0
   16588:	ldrne	r3, [r7, #28]
   1658c:	bne	15b2c <argp_failure@@Base+0x820>
   16590:	b	15b3c <argp_failure@@Base+0x830>
   16594:	ldrb	r3, [r4, #1]
   16598:	add	r4, r4, #1
   1659c:	lsl	r3, r3, #1
   165a0:	ldrh	r3, [r1, r3]
   165a4:	tst	r3, #8192	; 0x2000
   165a8:	beq	16170 <argp_failure@@Base+0xe64>
   165ac:	ldrb	r3, [r4, #1]!
   165b0:	lsl	r3, r3, #1
   165b4:	ldrh	r3, [r1, r3]
   165b8:	tst	r3, #8192	; 0x2000
   165bc:	bne	165ac <argp_failure@@Base+0x12a0>
   165c0:	b	16170 <argp_failure@@Base+0xe64>
   165c4:	mov	r2, #10
   165c8:	mov	r1, #0
   165cc:	mov	r0, r4
   165d0:	bl	110e0 <strtol@plt>
   165d4:	ldrb	r3, [r4]
   165d8:	ldr	r2, [r7]
   165dc:	lsl	r3, r3, #1
   165e0:	ldrh	r7, [r2, r3]
   165e4:	str	r0, [fp, #-112]	; 0xffffff90
   165e8:	tst	r7, #2048	; 0x800
   165ec:	beq	16604 <argp_failure@@Base+0x12f8>
   165f0:	ldrb	r3, [r4, #1]!
   165f4:	lsl	r3, r3, #1
   165f8:	ldrh	r7, [r2, r3]
   165fc:	tst	r7, #2048	; 0x800
   16600:	bne	165f0 <argp_failure@@Base+0x12e4>
   16604:	ands	r7, r7, #8192	; 0x2000
   16608:	beq	16180 <argp_failure@@Base+0xe74>
   1660c:	ldrb	r3, [r4, #1]!
   16610:	lsl	r3, r3, #1
   16614:	ldrh	r7, [r2, r3]
   16618:	ands	r7, r7, #8192	; 0x2000
   1661c:	bne	1660c <argp_failure@@Base+0x1300>
   16620:	b	16180 <argp_failure@@Base+0xe74>
   16624:	mov	r3, sl
   16628:	mov	r4, r5
   1662c:	b	16150 <argp_failure@@Base+0xe44>
   16630:	ldr	r5, [fp, #-112]	; 0xffffff90
   16634:	movw	r4, #43764	; 0xaaf4
   16638:	movt	r4, #1
   1663c:	ldr	r3, [r7, #28]
   16640:	ldr	r2, [r7, #32]
   16644:	cmp	r3, r2
   16648:	bcc	16664 <argp_failure@@Base+0x1358>
   1664c:	mov	r1, #1
   16650:	mov	r0, r7
   16654:	bl	19230 <argp_parse@@Base+0x230c>
   16658:	cmp	r0, #0
   1665c:	beq	16674 <argp_failure@@Base+0x1368>
   16660:	ldr	r3, [r7, #28]
   16664:	add	r1, r3, #1
   16668:	mov	r2, #10
   1666c:	str	r1, [r7, #28]
   16670:	strb	r2, [r3]
   16674:	mov	r0, r4
   16678:	bl	11290 <strlen@plt>
   1667c:	subs	r6, r0, #0
   16680:	ldr	r0, [r7, #28]
   16684:	ldr	r3, [r7, #32]
   16688:	bne	166d0 <argp_failure@@Base+0x13c4>
   1668c:	cmp	r0, r3
   16690:	bcc	166ac <argp_failure@@Base+0x13a0>
   16694:	mov	r1, #1
   16698:	mov	r0, r7
   1669c:	bl	19230 <argp_parse@@Base+0x230c>
   166a0:	cmp	r0, #0
   166a4:	beq	1594c <argp_failure@@Base+0x640>
   166a8:	ldr	r0, [r7, #28]
   166ac:	add	r2, r0, #1
   166b0:	mov	r3, #10
   166b4:	str	r2, [r7, #28]
   166b8:	strb	r3, [r0]
   166bc:	b	1594c <argp_failure@@Base+0x640>
   166c0:	movw	r4, #43764	; 0xaaf4
   166c4:	movt	r4, #1
   166c8:	ldr	r5, [fp, #-104]	; 0xffffff98
   166cc:	b	1663c <argp_failure@@Base+0x1330>
   166d0:	add	r2, r0, r6
   166d4:	cmp	r3, r2
   166d8:	bcs	166f8 <argp_failure@@Base+0x13ec>
   166dc:	mov	r1, r6
   166e0:	mov	r0, r7
   166e4:	bl	19230 <argp_parse@@Base+0x230c>
   166e8:	cmp	r0, #0
   166ec:	ldr	r0, [r7, #28]
   166f0:	ldreq	r3, [r7, #32]
   166f4:	beq	1668c <argp_failure@@Base+0x1380>
   166f8:	mov	r2, r6
   166fc:	mov	r1, r4
   16700:	bl	11158 <memcpy@plt>
   16704:	ldr	r0, [r7, #28]
   16708:	ldr	r3, [r7, #32]
   1670c:	add	r0, r0, r6
   16710:	str	r0, [r7, #28]
   16714:	b	1668c <argp_failure@@Base+0x1380>
   16718:	mov	r8, sl
   1671c:	b	15f00 <argp_failure@@Base+0xbf4>
   16720:	andeq	sl, r1, r8, asr #19
   16724:	andeq	sl, r1, r8, lsr r9

00016728 <argp_help@@Base>:
   16728:	push	{lr}		; (str lr, [sp, #-4]!)
   1672c:	sub	sp, sp, #12
   16730:	str	r3, [sp]
   16734:	mov	r3, r2
   16738:	mov	r2, r1
   1673c:	mov	r1, #0
   16740:	bl	15528 <argp_failure@@Base+0x21c>
   16744:	add	sp, sp, #12
   16748:	pop	{pc}		; (ldr pc, [sp], #4)

0001674c <argp_state_help@@Base>:
   1674c:	strd	r4, [sp, #-12]!
   16750:	subs	r4, r0, #0
   16754:	mov	r5, r2
   16758:	str	lr, [sp, #8]
   1675c:	sub	sp, sp, #12
   16760:	beq	167d0 <argp_state_help@@Base+0x84>
   16764:	ldr	r3, [r4, #16]
   16768:	adds	r2, r1, #0
   1676c:	movne	r2, #1
   16770:	eor	r0, r3, #2
   16774:	ands	r2, r2, r0, lsr #1
   16778:	bne	1678c <argp_state_help@@Base+0x40>
   1677c:	add	sp, sp, #12
   16780:	ldrd	r4, [sp]
   16784:	add	sp, sp, #8
   16788:	pop	{pc}		; (ldr pc, [sp], #4)
   1678c:	ldr	r0, [r4, #40]	; 0x28
   16790:	tst	r3, #64	; 0x40
   16794:	mov	r2, r1
   16798:	orrne	r5, r5, #128	; 0x80
   1679c:	mov	r1, r4
   167a0:	mov	r3, r5
   167a4:	str	r0, [sp]
   167a8:	ldr	r0, [r4]
   167ac:	bl	15528 <argp_failure@@Base+0x21c>
   167b0:	ldr	r3, [r4, #16]
   167b4:	tst	r3, #32
   167b8:	bne	1677c <argp_state_help@@Base+0x30>
   167bc:	ands	r0, r5, #256	; 0x100
   167c0:	bne	167fc <argp_state_help@@Base+0xb0>
   167c4:	tst	r5, #512	; 0x200
   167c8:	beq	1677c <argp_state_help@@Base+0x30>
   167cc:	bl	11278 <exit@plt>
   167d0:	cmp	r1, #0
   167d4:	beq	1677c <argp_state_help@@Base+0x30>
   167d8:	movw	r3, #50128	; 0xc3d0
   167dc:	movt	r3, #2
   167e0:	ldr	ip, [r3]
   167e4:	mov	r2, r1
   167e8:	mov	r3, r5
   167ec:	mov	r1, r4
   167f0:	str	ip, [sp]
   167f4:	bl	15528 <argp_failure@@Base+0x21c>
   167f8:	b	167bc <argp_state_help@@Base+0x70>
   167fc:	movw	r3, #50104	; 0xc3b8
   16800:	movt	r3, #2
   16804:	ldr	r0, [r3]
   16808:	bl	11278 <exit@plt>

0001680c <argp_error@@Base>:
   1680c:	push	{r1, r2, r3}
   16810:	strd	r4, [sp, #-12]!
   16814:	subs	r5, r0, #0
   16818:	str	lr, [sp, #8]
   1681c:	sub	sp, sp, #8
   16820:	beq	168f8 <argp_error@@Base+0xec>
   16824:	ldr	r3, [r5, #16]
   16828:	tst	r3, #2
   1682c:	bne	168e0 <argp_error@@Base+0xd4>
   16830:	ldr	r4, [r5, #44]	; 0x2c
   16834:	cmp	r4, #0
   16838:	beq	168e0 <argp_error@@Base+0xd4>
   1683c:	mov	r0, r4
   16840:	bl	11380 <flockfile@plt>
   16844:	ldr	r0, [r5, #40]	; 0x28
   16848:	add	r3, sp, #24
   1684c:	str	r3, [sp, #4]
   16850:	mov	r1, r4
   16854:	bl	110bc <fputs_unlocked@plt>
   16858:	ldr	r3, [r4, #20]
   1685c:	ldr	r2, [r4, #24]
   16860:	cmp	r3, r2
   16864:	addcc	r1, r3, #1
   16868:	movcc	r2, #58	; 0x3a
   1686c:	strcc	r1, [r4, #20]
   16870:	strbcc	r2, [r3]
   16874:	bcs	1693c <argp_error@@Base+0x130>
   16878:	ldr	r3, [r4, #20]
   1687c:	ldr	r2, [r4, #24]
   16880:	cmp	r3, r2
   16884:	addcc	r1, r3, #1
   16888:	movcc	r2, #32
   1688c:	strcc	r1, [r4, #20]
   16890:	strbcc	r2, [r3]
   16894:	bcs	1694c <argp_error@@Base+0x140>
   16898:	mov	r0, r4
   1689c:	ldr	r2, [sp, #4]
   168a0:	ldr	r1, [sp, #20]
   168a4:	bl	11344 <vfprintf@plt>
   168a8:	ldr	r3, [r4, #20]
   168ac:	ldr	r2, [r4, #24]
   168b0:	cmp	r3, r2
   168b4:	addcc	r1, r3, #1
   168b8:	movcc	r2, #10
   168bc:	strcc	r1, [r4, #20]
   168c0:	strbcc	r2, [r3]
   168c4:	bcs	1692c <argp_error@@Base+0x120>
   168c8:	mov	r0, r5
   168cc:	mov	r2, #260	; 0x104
   168d0:	mov	r1, r4
   168d4:	bl	1674c <argp_state_help@@Base>
   168d8:	mov	r0, r4
   168dc:	bl	111d0 <funlockfile@plt>
   168e0:	add	sp, sp, #8
   168e4:	ldrd	r4, [sp]
   168e8:	ldr	lr, [sp, #8]
   168ec:	add	sp, sp, #12
   168f0:	add	sp, sp, #12
   168f4:	bx	lr
   168f8:	movw	r3, #50136	; 0xc3d8
   168fc:	movt	r3, #2
   16900:	ldr	r4, [r3]
   16904:	cmp	r4, #0
   16908:	beq	168e0 <argp_error@@Base+0xd4>
   1690c:	mov	r0, r4
   16910:	bl	11380 <flockfile@plt>
   16914:	add	r2, sp, #24
   16918:	movw	r3, #50128	; 0xc3d0
   1691c:	movt	r3, #2
   16920:	str	r2, [sp, #4]
   16924:	ldr	r0, [r3]
   16928:	b	16850 <argp_error@@Base+0x44>
   1692c:	mov	r1, #10
   16930:	mov	r0, r4
   16934:	bl	11314 <__overflow@plt>
   16938:	b	168c8 <argp_error@@Base+0xbc>
   1693c:	mov	r1, #58	; 0x3a
   16940:	mov	r0, r4
   16944:	bl	11314 <__overflow@plt>
   16948:	b	16878 <argp_error@@Base+0x6c>
   1694c:	mov	r1, #32
   16950:	mov	r0, r4
   16954:	bl	11314 <__overflow@plt>
   16958:	b	16898 <argp_error@@Base+0x8c>
   1695c:	ldr	r3, [r0]
   16960:	strd	r4, [sp, #-16]!
   16964:	ldr	r5, [r0, #16]
   16968:	str	r6, [sp, #8]
   1696c:	str	lr, [sp, #12]
   16970:	cmp	r3, #0
   16974:	beq	16a20 <argp_error@@Base+0x214>
   16978:	ldr	r0, [r1, #8]
   1697c:	mov	r2, #0
   16980:	add	r0, r0, #1
   16984:	str	r0, [r1, #8]
   16988:	b	16990 <argp_error@@Base+0x184>
   1698c:	add	r2, r2, #1
   16990:	add	r3, r3, #24
   16994:	ldr	r0, [r3, #-20]	; 0xffffffec
   16998:	cmp	r0, #0
   1699c:	bne	1698c <argp_error@@Base+0x180>
   169a0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   169a4:	cmp	r0, #0
   169a8:	bne	1698c <argp_error@@Base+0x180>
   169ac:	ldr	r0, [r3, #-8]
   169b0:	cmp	r0, #0
   169b4:	bne	1698c <argp_error@@Base+0x180>
   169b8:	ldr	r0, [r3, #-4]
   169bc:	cmp	r0, #0
   169c0:	bne	1698c <argp_error@@Base+0x180>
   169c4:	ldm	r1, {r0, r3}
   169c8:	add	ip, r2, r2, lsl #1
   169cc:	add	r2, r3, r2
   169d0:	add	r0, r0, ip
   169d4:	stm	r1, {r0, r2}
   169d8:	cmp	r5, #0
   169dc:	beq	16a10 <argp_error@@Base+0x204>
   169e0:	ldr	r0, [r5]
   169e4:	cmp	r0, #0
   169e8:	beq	16a10 <argp_error@@Base+0x204>
   169ec:	mov	r4, r1
   169f0:	mov	r1, r4
   169f4:	bl	1695c <argp_error@@Base+0x150>
   169f8:	ldr	r3, [r4, #12]
   169fc:	ldr	r0, [r5, #16]!
   16a00:	add	r3, r3, #1
   16a04:	cmp	r0, #0
   16a08:	str	r3, [r4, #12]
   16a0c:	bne	169f0 <argp_error@@Base+0x1e4>
   16a10:	ldrd	r4, [sp]
   16a14:	ldr	r6, [sp, #8]
   16a18:	add	sp, sp, #12
   16a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a20:	ldr	r3, [r0, #4]
   16a24:	cmp	r3, #0
   16a28:	beq	169d8 <argp_error@@Base+0x1cc>
   16a2c:	ldr	r3, [r1, #8]
   16a30:	add	r3, r3, #1
   16a34:	str	r3, [r1, #8]
   16a38:	b	169d8 <argp_error@@Base+0x1cc>
   16a3c:	cmp	r0, #86	; 0x56
   16a40:	beq	16a4c <argp_error@@Base+0x240>
   16a44:	mov	r0, #7
   16a48:	bx	lr
   16a4c:	movw	r3, #50192	; 0xc410
   16a50:	movt	r3, #2
   16a54:	str	r4, [sp, #-8]!
   16a58:	ldr	r3, [r3]
   16a5c:	mov	r4, r2
   16a60:	str	lr, [sp, #4]
   16a64:	cmp	r3, #0
   16a68:	beq	16a98 <argp_error@@Base+0x28c>
   16a6c:	mov	r1, r2
   16a70:	ldr	r0, [r2, #48]	; 0x30
   16a74:	blx	r3
   16a78:	ldr	r0, [r4, #16]
   16a7c:	ands	r0, r0, #32
   16a80:	beq	16a94 <argp_error@@Base+0x288>
   16a84:	ldr	r4, [sp]
   16a88:	add	sp, sp, #4
   16a8c:	mov	r0, #0
   16a90:	pop	{pc}		; (ldr pc, [sp], #4)
   16a94:	bl	11278 <exit@plt>
   16a98:	movw	r3, #50268	; 0xc45c
   16a9c:	movt	r3, #2
   16aa0:	ldr	r2, [r3]
   16aa4:	cmp	r2, #0
   16aa8:	beq	16ac0 <argp_error@@Base+0x2b4>
   16aac:	movw	r1, #44916	; 0xaf74
   16ab0:	movt	r1, #1
   16ab4:	ldr	r0, [r4, #48]	; 0x30
   16ab8:	bl	112a8 <fprintf@plt>
   16abc:	b	16a78 <argp_error@@Base+0x26c>
   16ac0:	movw	r2, #44520	; 0xade8
   16ac4:	movt	r2, #1
   16ac8:	movw	r1, #41164	; 0xa0cc
   16acc:	movt	r1, #1
   16ad0:	mov	r0, r4
   16ad4:	bl	1680c <argp_error@@Base>
   16ad8:	b	16a78 <argp_error@@Base+0x26c>
   16adc:	cmn	r0, #3
   16ae0:	str	r4, [sp, #-8]!
   16ae4:	mov	r4, r2
   16ae8:	str	lr, [sp, #4]
   16aec:	sub	sp, sp, #8
   16af0:	beq	16bf0 <argp_error@@Base+0x3e4>
   16af4:	ble	16b2c <argp_error@@Base+0x320>
   16af8:	cmn	r0, #2
   16afc:	beq	16ba4 <argp_error@@Base+0x398>
   16b00:	cmp	r0, #63	; 0x3f
   16b04:	bne	16b90 <argp_error@@Base+0x384>
   16b08:	mov	r0, r4
   16b0c:	movw	r2, #634	; 0x27a
   16b10:	ldr	r1, [r4, #48]	; 0x30
   16b14:	bl	1674c <argp_state_help@@Base>
   16b18:	mov	r0, #0
   16b1c:	add	sp, sp, #8
   16b20:	ldr	r4, [sp]
   16b24:	add	sp, sp, #4
   16b28:	pop	{pc}		; (ldr pc, [sp], #4)
   16b2c:	cmn	r0, #4
   16b30:	bne	16b90 <argp_error@@Base+0x384>
   16b34:	cmp	r1, #0
   16b38:	movw	r0, #44556	; 0xae0c
   16b3c:	movt	r0, #1
   16b40:	mov	r2, #10
   16b44:	movne	r0, r1
   16b48:	movw	r4, #50188	; 0xc40c
   16b4c:	movt	r4, #2
   16b50:	mov	r1, #0
   16b54:	bl	110e0 <strtol@plt>
   16b58:	str	r0, [r4]
   16b5c:	b	16b68 <argp_error@@Base+0x35c>
   16b60:	mov	r0, #1
   16b64:	bl	11194 <sleep@plt>
   16b68:	ldr	r3, [r4]
   16b6c:	sub	r2, r3, #1
   16b70:	cmp	r3, #0
   16b74:	str	r2, [r4]
   16b78:	bgt	16b60 <argp_error@@Base+0x354>
   16b7c:	mov	r0, #0
   16b80:	add	sp, sp, #8
   16b84:	ldr	r4, [sp]
   16b88:	add	sp, sp, #4
   16b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b90:	mov	r0, #7
   16b94:	add	sp, sp, #8
   16b98:	ldr	r4, [sp]
   16b9c:	add	sp, sp, #4
   16ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ba4:	movw	r3, #50132	; 0xc3d4
   16ba8:	movt	r3, #2
   16bac:	str	r1, [sp, #4]
   16bb0:	mov	r0, r1
   16bb4:	str	r1, [r3]
   16bb8:	bl	17e50 <argp_parse@@Base+0xf2c>
   16bbc:	ldr	r3, [r4, #16]
   16bc0:	movw	r2, #50128	; 0xc3d0
   16bc4:	movt	r2, #2
   16bc8:	str	r0, [r4, #40]	; 0x28
   16bcc:	str	r0, [r2]
   16bd0:	ldr	r1, [sp, #4]
   16bd4:	and	r3, r3, #3
   16bd8:	cmp	r3, #1
   16bdc:	bne	16b7c <argp_error@@Base+0x370>
   16be0:	ldr	r3, [r4, #8]
   16be4:	mov	r0, #0
   16be8:	str	r1, [r3]
   16bec:	b	16b1c <argp_error@@Base+0x310>
   16bf0:	ldr	r1, [r4, #48]	; 0x30
   16bf4:	mov	r0, r4
   16bf8:	movw	r2, #513	; 0x201
   16bfc:	bl	1674c <argp_state_help@@Base>
   16c00:	mov	r0, #0
   16c04:	add	sp, sp, #8
   16c08:	ldr	r4, [sp]
   16c0c:	add	sp, sp, #4
   16c10:	pop	{pc}		; (ldr pc, [sp], #4)
   16c14:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16c18:	strd	r6, [sp, #8]
   16c1c:	strd	r8, [sp, #16]
   16c20:	strd	sl, [sp, #24]
   16c24:	str	lr, [sp, #32]
   16c28:	sub	sp, sp, #44	; 0x2c
   16c2c:	ldr	fp, [r0]
   16c30:	str	r3, [sp, #16]
   16c34:	ldr	r3, [r0, #16]
   16c38:	ldr	r7, [sp, #80]	; 0x50
   16c3c:	cmp	fp, #0
   16c40:	str	r3, [sp, #24]
   16c44:	strd	r0, [sp, #28]
   16c48:	str	r2, [sp, #36]	; 0x24
   16c4c:	beq	16ef8 <argp_error@@Base+0x6ec>
   16c50:	ldr	r9, [r7, #4]
   16c54:	movw	r3, #36409	; 0x8e39
   16c58:	movt	r3, #14563	; 0x38e3
   16c5c:	mov	r4, fp
   16c60:	str	r3, [sp, #20]
   16c64:	ldr	r6, [r4, #4]
   16c68:	cmp	r6, #0
   16c6c:	bne	16c7c <argp_error@@Base+0x470>
   16c70:	ldr	r3, [r4]
   16c74:	cmp	r3, #0
   16c78:	beq	16df0 <argp_error@@Base+0x5e4>
   16c7c:	ldr	r3, [r4, #12]
   16c80:	tst	r3, #4
   16c84:	moveq	r5, r3
   16c88:	moveq	fp, r4
   16c8c:	ldrne	r5, [fp, #12]
   16c90:	ands	r5, r5, #8
   16c94:	bne	16dd8 <argp_error@@Base+0x5cc>
   16c98:	tst	r3, #8
   16c9c:	bne	16d1c <argp_error@@Base+0x510>
   16ca0:	sub	r3, r6, #1
   16ca4:	cmp	r3, #254	; 0xfe
   16ca8:	bhi	16d1c <argp_error@@Base+0x510>
   16cac:	bl	11260 <__ctype_b_loc@plt>
   16cb0:	ldr	r1, [r0]
   16cb4:	lsl	r3, r6, #1
   16cb8:	ldrh	r3, [r1, r3]
   16cbc:	tst	r3, #16384	; 0x4000
   16cc0:	beq	16d1c <argp_error@@Base+0x510>
   16cc4:	add	r3, r9, #1
   16cc8:	str	r3, [r7, #4]
   16ccc:	strb	r6, [r9]
   16cd0:	ldr	r3, [fp, #8]
   16cd4:	cmp	r3, #0
   16cd8:	beq	16d0c <argp_error@@Base+0x500>
   16cdc:	ldr	r3, [r7, #4]
   16ce0:	mov	r2, #58	; 0x3a
   16ce4:	add	r1, r3, #1
   16ce8:	str	r1, [r7, #4]
   16cec:	strb	r2, [r3]
   16cf0:	ldr	r3, [fp, #12]
   16cf4:	tst	r3, #1
   16cf8:	beq	16d0c <argp_error@@Base+0x500>
   16cfc:	ldr	r3, [r7, #4]
   16d00:	add	r1, r3, #1
   16d04:	str	r1, [r7, #4]
   16d08:	strb	r2, [r3]
   16d0c:	ldr	r3, [r7, #4]
   16d10:	mov	r2, #0
   16d14:	strb	r2, [r3]
   16d18:	ldr	r9, [r7, #4]
   16d1c:	ldr	sl, [r4]
   16d20:	cmp	sl, #0
   16d24:	beq	16dd8 <argp_error@@Base+0x5cc>
   16d28:	ldr	r3, [r7]
   16d2c:	ldr	r8, [r3, #8]
   16d30:	str	r3, [sp, #12]
   16d34:	ldr	r0, [r8]
   16d38:	cmp	r0, #0
   16d3c:	beq	16d60 <argp_error@@Base+0x554>
   16d40:	mov	r6, r8
   16d44:	mov	r1, sl
   16d48:	bl	110d4 <strcmp@plt>
   16d4c:	cmp	r0, #0
   16d50:	beq	16de0 <argp_error@@Base+0x5d4>
   16d54:	ldr	r0, [r6, #16]!
   16d58:	cmp	r0, #0
   16d5c:	bne	16d44 <argp_error@@Base+0x538>
   16d60:	ldr	r0, [fp, #8]
   16d64:	ldr	r1, [r7, #8]
   16d68:	cmp	r0, #0
   16d6c:	str	sl, [r1]
   16d70:	beq	16d84 <argp_error@@Base+0x578>
   16d74:	ldr	r3, [fp, #12]
   16d78:	tst	r3, #1
   16d7c:	movne	r5, #2
   16d80:	moveq	r5, #1
   16d84:	str	r5, [r1, #4]
   16d88:	mov	r3, #0
   16d8c:	add	ip, r1, #16
   16d90:	ldr	r0, [r4, #4]
   16d94:	str	r3, [r1, #8]
   16d98:	ldr	r2, [sp, #16]
   16d9c:	cmp	r0, r3
   16da0:	ldr	r3, [sp, #12]
   16da4:	ldreq	r0, [fp, #4]
   16da8:	ldr	r3, [r3, #48]	; 0x30
   16dac:	bic	r0, r0, #-16777216	; 0xff000000
   16db0:	sub	r3, r2, r3
   16db4:	ldr	r2, [sp, #20]
   16db8:	asr	r3, r3, #2
   16dbc:	mul	r3, r2, r3
   16dc0:	add	r3, r3, #1
   16dc4:	add	r3, r0, r3, lsl #24
   16dc8:	str	r3, [r1, #12]
   16dcc:	mov	r3, #0
   16dd0:	str	ip, [r7, #8]
   16dd4:	str	r3, [r1, #16]
   16dd8:	add	r4, r4, #24
   16ddc:	b	16c64 <argp_error@@Base+0x458>
   16de0:	sub	r6, r6, r8
   16de4:	cmp	r6, #0
   16de8:	bge	16dd8 <argp_error@@Base+0x5cc>
   16dec:	b	16d60 <argp_error@@Base+0x554>
   16df0:	ldr	r3, [r4, #16]
   16df4:	cmp	r3, #0
   16df8:	bne	16c7c <argp_error@@Base+0x470>
   16dfc:	ldr	r3, [r4, #20]
   16e00:	cmp	r3, #0
   16e04:	bne	16c7c <argp_error@@Base+0x470>
   16e08:	ldr	r3, [sp, #28]
   16e0c:	ldr	r2, [r3, #4]
   16e10:	mov	r3, #0
   16e14:	ldr	r1, [sp, #16]
   16e18:	ldr	r0, [sp, #24]
   16e1c:	str	r2, [r1]
   16e20:	mov	r2, r1
   16e24:	ldr	r1, [sp, #28]
   16e28:	cmp	r0, r3
   16e2c:	stmib	r2, {r1, r9}
   16e30:	ldr	r1, [sp, #32]
   16e34:	str	r3, [r2, #12]
   16e38:	str	r1, [r2, #16]
   16e3c:	ldr	r1, [sp, #36]	; 0x24
   16e40:	str	r3, [r2, #24]
   16e44:	str	r3, [r2, #28]
   16e48:	str	r3, [r2, #32]
   16e4c:	str	r1, [r2, #20]
   16e50:	beq	16e8c <argp_error@@Base+0x680>
   16e54:	ldr	r2, [r0]
   16e58:	cmp	r2, r3
   16e5c:	beq	16f1c <argp_error@@Base+0x710>
   16e60:	mov	r1, r0
   16e64:	add	r3, r3, #1
   16e68:	ldr	r2, [r1, r3, lsl #4]
   16e6c:	cmp	r2, #0
   16e70:	bne	16e64 <argp_error@@Base+0x658>
   16e74:	lsl	r3, r3, #2
   16e78:	ldr	r2, [r7, #12]
   16e7c:	ldr	r1, [sp, #16]
   16e80:	add	r3, r2, r3
   16e84:	str	r2, [r1, #28]
   16e88:	str	r3, [r7, #12]
   16e8c:	ldr	r3, [sp, #16]
   16e90:	add	r0, r3, #36	; 0x24
   16e94:	ldr	r5, [sp, #24]
   16e98:	cmp	r5, #0
   16e9c:	beq	16edc <argp_error@@Base+0x6d0>
   16ea0:	ldr	r1, [r5]
   16ea4:	cmp	r1, #0
   16ea8:	beq	16edc <argp_error@@Base+0x6d0>
   16eac:	ldr	r6, [sp, #16]
   16eb0:	mov	r2, #0
   16eb4:	add	r4, r2, #1
   16eb8:	mov	r3, r0
   16ebc:	str	r7, [sp]
   16ec0:	mov	r0, r1
   16ec4:	mov	r1, r6
   16ec8:	bl	16c14 <argp_error@@Base+0x408>
   16ecc:	ldr	r1, [r5, r4, lsl #4]
   16ed0:	mov	r2, r4
   16ed4:	cmp	r1, #0
   16ed8:	bne	16eb4 <argp_error@@Base+0x6a8>
   16edc:	add	sp, sp, #44	; 0x2c
   16ee0:	ldrd	r4, [sp]
   16ee4:	ldrd	r6, [sp, #8]
   16ee8:	ldrd	r8, [sp, #16]
   16eec:	ldrd	sl, [sp, #24]
   16ef0:	add	sp, sp, #32
   16ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ef8:	ldr	r3, [sp, #28]
   16efc:	ldr	r2, [r3, #4]
   16f00:	cmp	r2, #0
   16f04:	beq	16f10 <argp_error@@Base+0x704>
   16f08:	ldr	r9, [r7, #4]
   16f0c:	b	16e10 <argp_error@@Base+0x604>
   16f10:	ldr	r0, [sp, #16]
   16f14:	str	r2, [sp, #16]
   16f18:	b	16e94 <argp_error@@Base+0x688>
   16f1c:	mov	r3, r2
   16f20:	b	16e78 <argp_error@@Base+0x66c>

00016f24 <argp_parse@@Base>:
   16f24:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16f28:	tst	r3, #1
   16f2c:	mov	r5, r3
   16f30:	strd	r6, [sp, #8]
   16f34:	mov	r7, r0
   16f38:	strd	r8, [sp, #16]
   16f3c:	strd	sl, [sp, #24]
   16f40:	add	fp, sp, #32
   16f44:	str	lr, [sp, #32]
   16f48:	sub	sp, sp, #236	; 0xec
   16f4c:	str	r1, [fp, #-244]	; 0xffffff0c
   16f50:	str	r2, [fp, #-232]	; 0xffffff18
   16f54:	bne	16f80 <argp_parse@@Base+0x5c>
   16f58:	movw	r3, #50132	; 0xc3d4
   16f5c:	movt	r3, #2
   16f60:	ldr	r2, [r3]
   16f64:	cmp	r2, #0
   16f68:	beq	179a4 <argp_parse@@Base+0xa80>
   16f6c:	movw	r4, #50128	; 0xc3d0
   16f70:	movt	r4, #2
   16f74:	ldr	r3, [r4]
   16f78:	cmp	r3, #0
   16f7c:	beq	179b4 <argp_parse@@Base+0xa90>
   16f80:	ands	r3, r5, #4
   16f84:	moveq	r6, #1
   16f88:	movne	r6, #0
   16f8c:	ands	ip, r5, #16
   16f90:	str	r3, [fp, #-236]	; 0xffffff14
   16f94:	beq	16fec <argp_parse@@Base+0xc8>
   16f98:	mov	r3, #0
   16f9c:	sub	r4, fp, #196	; 0xc4
   16fa0:	str	r6, [fp, #-228]	; 0xffffff1c
   16fa4:	cmp	r7, r3
   16fa8:	str	r3, [fp, #-224]	; 0xffffff20
   16fac:	str	r3, [fp, #-220]	; 0xffffff24
   16fb0:	str	r3, [fp, #-216]	; 0xffffff28
   16fb4:	str	r3, [r4, #8]
   16fb8:	str	r3, [r4, #12]
   16fbc:	str	r3, [r4, #16]
   16fc0:	str	r3, [r4, #20]
   16fc4:	str	r3, [r4, #24]
   16fc8:	str	r3, [r4, #28]
   16fcc:	str	r3, [r4, #32]
   16fd0:	bne	1709c <argp_parse@@Base+0x178>
   16fd4:	mov	r3, #52	; 0x34
   16fd8:	mov	sl, #36	; 0x24
   16fdc:	mov	r9, r7
   16fe0:	str	r3, [fp, #-236]	; 0xffffff14
   16fe4:	mov	r3, sl
   16fe8:	b	170d4 <argp_parse@@Base+0x1b0>
   16fec:	sub	sp, sp, #64	; 0x40
   16ff0:	mov	r1, ip
   16ff4:	add	r3, sp, #8
   16ff8:	sub	sp, sp, #32
   16ffc:	add	r4, sp, #8
   17000:	mov	r0, r3
   17004:	mov	r2, #64	; 0x40
   17008:	str	ip, [r4]
   1700c:	str	ip, [r4, #4]
   17010:	str	ip, [r4, #8]
   17014:	str	ip, [r4, #12]
   17018:	str	r3, [r4, #16]
   1701c:	str	ip, [r4, #20]
   17020:	str	ip, [r4, #24]
   17024:	bl	112e4 <memset@plt>
   17028:	movw	r2, #50268	; 0xc45c
   1702c:	movt	r2, #2
   17030:	ldr	r1, [r2]
   17034:	mov	r3, r0
   17038:	cmp	r7, #0
   1703c:	movw	r2, #44240	; 0xacd0
   17040:	movt	r2, #1
   17044:	strne	r7, [r3], #16
   17048:	str	r2, [r3]
   1704c:	cmp	r1, #0
   17050:	beq	17b1c <argp_parse@@Base+0xbf8>
   17054:	ldr	r1, [pc, #3392]	; 17d9c <argp_parse@@Base+0xe78>
   17058:	add	r2, r3, #32
   1705c:	str	r1, [r3, #16]
   17060:	mov	r3, #0
   17064:	mov	r7, r4
   17068:	str	r6, [fp, #-228]	; 0xffffff1c
   1706c:	sub	r4, fp, #196	; 0xc4
   17070:	str	r3, [fp, #-224]	; 0xffffff20
   17074:	str	r3, [fp, #-220]	; 0xffffff24
   17078:	str	r3, [fp, #-216]	; 0xffffff28
   1707c:	str	r3, [r2]
   17080:	str	r3, [r4, #8]
   17084:	str	r3, [r4, #12]
   17088:	str	r3, [r4, #16]
   1708c:	str	r3, [r4, #20]
   17090:	str	r3, [r4, #24]
   17094:	str	r3, [r4, #28]
   17098:	str	r3, [r4, #32]
   1709c:	sub	r1, fp, #228	; 0xe4
   170a0:	mov	r0, r7
   170a4:	bl	1695c <argp_error@@Base+0x150>
   170a8:	ldr	r6, [fp, #-228]	; 0xffffff1c
   170ac:	ldrd	r2, [fp, #-224]	; 0xffffff20
   170b0:	ldr	r9, [fp, #-216]	; 0xffffff28
   170b4:	add	r3, r3, #1
   170b8:	add	r2, r2, #1
   170bc:	add	r3, r3, r3, lsl #3
   170c0:	lsl	r9, r9, #2
   170c4:	lsl	r3, r3, #2
   170c8:	add	sl, r9, r3
   170cc:	add	r2, sl, r2, lsl #4
   170d0:	str	r2, [fp, #-236]	; 0xffffff14
   170d4:	str	r3, [fp, #-240]	; 0xffffff10
   170d8:	ldr	r3, [fp, #-236]	; 0xffffff14
   170dc:	add	r0, r6, r3
   170e0:	add	r0, r0, #1
   170e4:	bl	18a98 <argp_parse@@Base+0x1b74>
   170e8:	cmp	r0, #0
   170ec:	mov	r6, r0
   170f0:	str	r0, [fp, #-40]	; 0xffffffd8
   170f4:	moveq	r5, #12
   170f8:	ldr	r3, [fp, #-240]	; 0xffffff10
   170fc:	beq	1761c <argp_parse@@Base+0x6f8>
   17100:	mov	r2, r9
   17104:	mov	r1, #1
   17108:	ldrd	r8, [r4, #8]
   1710c:	add	ip, r0, sl
   17110:	add	r3, r0, r3
   17114:	str	r0, [fp, #-112]	; 0xffffff90
   17118:	ldr	lr, [fp, #-236]	; 0xffffff14
   1711c:	str	r1, [fp, #-196]	; 0xffffff3c
   17120:	str	r1, [fp, #-192]	; 0xffffff40
   17124:	str	ip, [fp, #-240]	; 0xffffff10
   17128:	strd	r8, [fp, #-140]	; 0xffffff74
   1712c:	ldrd	r8, [r4, #16]
   17130:	add	sl, r0, lr
   17134:	str	r3, [fp, #-104]	; 0xffffff98
   17138:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   1713c:	strd	r8, [fp, #-252]	; 0xffffff04
   17140:	ldrd	r8, [r4, #24]
   17144:	str	sl, [fp, #-156]	; 0xffffff64
   17148:	strd	r0, [fp, #-148]	; 0xffffff6c
   1714c:	mov	r0, r3
   17150:	sub	r3, fp, #260	; 0x104
   17154:	str	ip, [fp, #-152]	; 0xffffff68
   17158:	mov	r1, #0
   1715c:	ldr	ip, [r4, #32]
   17160:	strd	r8, [r3]
   17164:	ldrd	r8, [fp, #-252]	; 0xffffff04
   17168:	strd	r8, [fp, #-132]	; 0xffffff7c
   1716c:	ldrd	r8, [r3]
   17170:	str	ip, [fp, #-116]	; 0xffffff8c
   17174:	strd	r8, [fp, #-124]	; 0xffffff84
   17178:	bl	112e4 <memset@plt>
   1717c:	ldr	ip, [fp, #-240]	; 0xffffff10
   17180:	sub	r2, fp, #160	; 0xa0
   17184:	tst	r5, #8
   17188:	str	r2, [fp, #-212]	; 0xffffff2c
   1718c:	str	sl, [fp, #-208]	; 0xffffff30
   17190:	str	r0, [fp, #-200]	; 0xffffff38
   17194:	str	ip, [fp, #-204]	; 0xffffff34
   17198:	bne	1763c <argp_parse@@Base+0x718>
   1719c:	ands	r3, r5, #4
   171a0:	cmp	r3, #0
   171a4:	moveq	r3, sl
   171a8:	beq	171bc <argp_parse@@Base+0x298>
   171ac:	add	r3, sl, #1
   171b0:	mov	r2, #43	; 0x2b
   171b4:	str	r3, [fp, #-208]	; 0xffffff30
   171b8:	strb	r2, [sl]
   171bc:	ldr	r2, [fp, #-204]	; 0xffffff34
   171c0:	mov	r4, #0
   171c4:	cmp	r7, r4
   171c8:	strb	r4, [r3]
   171cc:	str	r4, [r2]
   171d0:	str	r7, [fp, #-160]	; 0xffffff60
   171d4:	beq	17824 <argp_parse@@Base+0x900>
   171d8:	sub	ip, fp, #212	; 0xd4
   171dc:	mov	r2, r4
   171e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   171e4:	mov	r1, r4
   171e8:	mov	r0, r7
   171ec:	str	ip, [sp]
   171f0:	bl	16c14 <argp_error@@Base+0x408>
   171f4:	movw	r1, #50136	; 0xc3d8
   171f8:	movt	r1, #2
   171fc:	ldr	r6, [fp, #-232]	; 0xffffff18
   17200:	movw	r2, #50140	; 0xc3dc
   17204:	movt	r2, #2
   17208:	str	r0, [fp, #-108]	; 0xffffff94
   1720c:	mov	lr, #1
   17210:	ldr	r3, [fp, #-112]	; 0xffffff90
   17214:	ldr	ip, [r1]
   17218:	str	lr, [fp, #-100]	; 0xffffff9c
   1721c:	ldr	r1, [fp, #-244]	; 0xffffff0c
   17220:	cmp	r0, r3
   17224:	mov	r0, #0
   17228:	ldr	r2, [r2]
   1722c:	movls	r3, r6
   17230:	ldr	lr, [fp, #-160]	; 0xffffff60
   17234:	str	ip, [fp, #-52]	; 0xffffffcc
   17238:	str	r1, [fp, #-92]	; 0xffffffa4
   1723c:	mov	r1, #0
   17240:	str	r2, [fp, #-48]	; 0xffffffd0
   17244:	sub	r2, fp, #160	; 0xa0
   17248:	str	lr, [fp, #-96]	; 0xffffffa0
   1724c:	str	r6, [fp, #-88]	; 0xffffffa8
   17250:	strd	r4, [fp, #-84]	; 0xffffffac
   17254:	strd	r0, [fp, #-76]	; 0xffffffb4
   17258:	strd	r0, [fp, #-68]	; 0xffffffbc
   1725c:	strd	r0, [fp, #-60]	; 0xffffffc4
   17260:	str	r2, [fp, #-44]	; 0xffffffd4
   17264:	bls	1734c <argp_parse@@Base+0x428>
   17268:	mov	r6, #3
   1726c:	movt	r6, #256	; 0x100
   17270:	ldr	r8, [fp, #-232]	; 0xffffff18
   17274:	add	r4, r3, #36	; 0x24
   17278:	ldr	r2, [fp, #8]
   1727c:	str	r2, [r3, #24]
   17280:	b	172cc <argp_parse@@Base+0x3a8>
   17284:	ldr	lr, [r4, #-24]	; 0xffffffe8
   17288:	ldr	ip, [r4, #-4]
   1728c:	str	ip, [fp, #-60]	; 0xffffffc4
   17290:	ldr	ip, [r4, #-12]
   17294:	str	ip, [fp, #-68]	; 0xffffffbc
   17298:	ldr	ip, [r4, #-8]
   1729c:	str	lr, [fp, #-76]	; 0xffffffb4
   172a0:	str	ip, [fp, #-64]	; 0xffffffc0
   172a4:	blx	r3
   172a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   172ac:	str	r3, [r4, #-4]
   172b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   172b4:	cmp	r4, r3
   172b8:	bcs	178d8 <argp_parse@@Base+0x9b4>
   172bc:	cmp	r0, #7
   172c0:	cmpne	r0, #0
   172c4:	bne	178c8 <argp_parse@@Base+0x9a4>
   172c8:	add	r4, r4, #36	; 0x24
   172cc:	ldr	r3, [r4, #-20]	; 0xffffffec
   172d0:	mov	r1, #0
   172d4:	sub	r2, fp, #96	; 0x60
   172d8:	mov	r0, r6
   172dc:	cmp	r3, r1
   172e0:	beq	172f4 <argp_parse@@Base+0x3d0>
   172e4:	ldr	ip, [r4, #-16]
   172e8:	ldr	r3, [r3, #28]
   172ec:	ldr	r3, [r3, ip, lsl #2]
   172f0:	str	r3, [r4, #-12]
   172f4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   172f8:	cmp	r3, #0
   172fc:	bne	17284 <argp_parse@@Base+0x360>
   17300:	ldr	r3, [r4, #-32]	; 0xffffffe0
   17304:	ldr	r3, [r3, #16]
   17308:	cmp	r3, #0
   1730c:	beq	17334 <argp_parse@@Base+0x410>
   17310:	ldr	r3, [r3]
   17314:	cmp	r3, #0
   17318:	beq	17334 <argp_parse@@Base+0x410>
   1731c:	ldr	ip, [r4, #-12]
   17320:	ldr	r3, [r4, #-8]
   17324:	str	ip, [r3]
   17328:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1732c:	cmp	r3, #0
   17330:	bne	17284 <argp_parse@@Base+0x360>
   17334:	ldr	r3, [fp, #-108]	; 0xffffff94
   17338:	cmp	r4, r3
   1733c:	bcc	172c8 <argp_parse@@Base+0x3a4>
   17340:	str	r8, [fp, #-232]	; 0xffffff18
   17344:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17348:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1734c:	tst	r5, #2
   17350:	beq	17898 <argp_parse@@Base+0x974>
   17354:	mov	r2, #0
   17358:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1735c:	tst	r5, #1
   17360:	subne	r3, r3, #4
   17364:	str	r2, [fp, #-144]	; 0xffffff70
   17368:	ldr	r2, [fp, #-232]	; 0xffffff18
   1736c:	strne	r3, [fp, #-88]	; 0xffffffa8
   17370:	addne	r4, r4, #1
   17374:	strne	r4, [fp, #-92]	; 0xffffffa4
   17378:	cmp	r2, r3
   1737c:	beq	178b0 <argp_parse@@Base+0x98c>
   17380:	movw	r3, #50128	; 0xc3d0
   17384:	movt	r3, #2
   17388:	ldr	r3, [r3]
   1738c:	str	r3, [fp, #-56]	; 0xffffffc8
   17390:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17394:	movw	r3, #44568	; 0xae18
   17398:	movt	r3, #1
   1739c:	mov	r9, #6
   173a0:	movt	r9, #256	; 0x100
   173a4:	ldr	r7, [fp, #-84]	; 0xffffffac
   173a8:	mov	r0, r4
   173ac:	str	r3, [fp, #-232]	; 0xffffff18
   173b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   173b4:	cmp	r3, #0
   173b8:	beq	174a0 <argp_parse@@Base+0x57c>
   173bc:	cmp	r3, r7
   173c0:	movgt	r3, #0
   173c4:	strgt	r3, [fp, #-72]	; 0xffffffb8
   173c8:	bgt	174a0 <argp_parse@@Base+0x57c>
   173cc:	cmp	r0, r7
   173d0:	ble	176e8 <argp_parse@@Base+0x7c4>
   173d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   173d8:	tst	r3, #4
   173dc:	bne	178fc <argp_parse@@Base+0x9d8>
   173e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   173e4:	ldr	sl, [r3, r7, lsl #2]
   173e8:	str	sl, [fp, #-136]	; 0xffffff78
   173ec:	ldr	r8, [fp, #-112]	; 0xffffff90
   173f0:	str	r7, [fp, #-84]	; 0xffffffac
   173f4:	ldr	ip, [fp, #-108]	; 0xffffff94
   173f8:	cmp	r8, ip
   173fc:	bcs	176e0 <argp_parse@@Base+0x7bc>
   17400:	mov	lr, r7
   17404:	add	r4, r8, #36	; 0x24
   17408:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1740c:	mov	r0, #0
   17410:	add	r6, lr, #1
   17414:	sub	r2, fp, #96	; 0x60
   17418:	mov	r1, sl
   1741c:	sub	r5, r4, #36	; 0x24
   17420:	mov	r8, r4
   17424:	str	r6, [fp, #-84]	; 0xffffffac
   17428:	cmp	r3, r0
   1742c:	beq	176cc <argp_parse@@Base+0x7a8>
   17430:	ldr	lr, [r4, #-24]	; 0xffffffe8
   17434:	ldr	ip, [r4, #-4]
   17438:	str	ip, [fp, #-60]	; 0xffffffc4
   1743c:	ldr	ip, [r4, #-12]
   17440:	str	ip, [fp, #-68]	; 0xffffffbc
   17444:	ldr	ip, [r4, #-8]
   17448:	str	lr, [fp, #-76]	; 0xffffffb4
   1744c:	str	ip, [fp, #-64]	; 0xffffffc0
   17450:	blx	r3
   17454:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17458:	cmp	r0, #7
   1745c:	str	r3, [r4, #-4]
   17460:	beq	17654 <argp_parse@@Base+0x730>
   17464:	cmp	r0, #0
   17468:	bne	1779c <argp_parse@@Base+0x878>
   1746c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17470:	ldr	r3, [fp, #-84]	; 0xffffffac
   17474:	cmp	r7, r3
   17478:	bge	177b4 <argp_parse@@Base+0x890>
   1747c:	ldr	r1, [r4, #-24]	; 0xffffffe8
   17480:	sub	ip, r3, r7
   17484:	mov	r7, r3
   17488:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1748c:	add	r3, r1, ip
   17490:	str	r3, [r4, #-24]	; 0xffffffe8
   17494:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17498:	cmp	r3, #0
   1749c:	bne	173bc <argp_parse@@Base+0x498>
   174a0:	cmp	r2, #0
   174a4:	beq	173cc <argp_parse@@Base+0x4a8>
   174a8:	mvn	r2, #0
   174ac:	str	r7, [fp, #-148]	; 0xffffff6c
   174b0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   174b4:	str	r2, [fp, #-140]	; 0xffffff74
   174b8:	ldr	r2, [fp, #-156]	; 0xffffff64
   174bc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   174c0:	ands	ip, r3, #64	; 0x40
   174c4:	ldr	r3, [fp, #-152]	; 0xffffff68
   174c8:	beq	177c8 <argp_parse@@Base+0x8a4>
   174cc:	mov	ip, #0
   174d0:	sub	lr, fp, #148	; 0x94
   174d4:	stm	sp, {ip, lr}
   174d8:	bl	17ff8 <argp_parse@@Base+0x10d4>
   174dc:	ldr	r7, [fp, #-148]	; 0xffffff6c
   174e0:	mov	r4, r0
   174e4:	cmn	r4, #1
   174e8:	str	r7, [fp, #-84]	; 0xffffffac
   174ec:	beq	177ec <argp_parse@@Base+0x8c8>
   174f0:	cmp	r4, #63	; 0x3f
   174f4:	beq	1750c <argp_parse@@Base+0x5e8>
   174f8:	cmp	r4, #1
   174fc:	bne	17a90 <argp_parse@@Base+0xb6c>
   17500:	sub	r7, r7, #1
   17504:	ldr	sl, [fp, #-136]	; 0xffffff78
   17508:	b	173ec <argp_parse@@Base+0x4c8>
   1750c:	ldr	r3, [fp, #-140]	; 0xffffff74
   17510:	cmn	r3, #1
   17514:	beq	179c8 <argp_parse@@Base+0xaa4>
   17518:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1751c:	sub	r7, fp, #96	; 0x60
   17520:	mov	r0, r7
   17524:	mov	r2, #260	; 0x104
   17528:	mov	r5, #7
   1752c:	bl	1674c <argp_state_help@@Base>
   17530:	ldr	r3, [fp, #-112]	; 0xffffff90
   17534:	ldr	ip, [fp, #-108]	; 0xffffff94
   17538:	cmp	r3, ip
   1753c:	mov	r4, r3
   17540:	bcs	17d2c <argp_parse@@Base+0xe08>
   17544:	mov	r6, #5
   17548:	movt	r6, #256	; 0x100
   1754c:	ldr	r3, [r4]
   17550:	mov	r1, #0
   17554:	sub	r2, fp, #96	; 0x60
   17558:	mov	r0, r6
   1755c:	cmp	r3, r1
   17560:	beq	17594 <argp_parse@@Base+0x670>
   17564:	ldr	lr, [r4, #12]
   17568:	ldr	ip, [r4, #32]
   1756c:	str	ip, [fp, #-60]	; 0xffffffc4
   17570:	ldr	ip, [r4, #24]
   17574:	str	ip, [fp, #-68]	; 0xffffffbc
   17578:	ldr	ip, [r4, #28]
   1757c:	str	lr, [fp, #-76]	; 0xffffffb4
   17580:	str	ip, [fp, #-64]	; 0xffffffc0
   17584:	blx	r3
   17588:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1758c:	str	r3, [r4, #32]
   17590:	ldr	ip, [fp, #-108]	; 0xffffff94
   17594:	add	r4, r4, #36	; 0x24
   17598:	cmp	r4, ip
   1759c:	bcc	1754c <argp_parse@@Base+0x628>
   175a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   175a4:	sub	r4, ip, #36	; 0x24
   175a8:	cmp	r4, r3
   175ac:	bcc	1760c <argp_parse@@Base+0x6e8>
   175b0:	mov	r7, #7
   175b4:	movt	r7, #256	; 0x100
   175b8:	ldr	r6, [r4]
   175bc:	mov	r1, #0
   175c0:	sub	r2, fp, #96	; 0x60
   175c4:	mov	r0, r7
   175c8:	cmp	r6, r1
   175cc:	beq	17600 <argp_parse@@Base+0x6dc>
   175d0:	ldr	ip, [r4, #12]
   175d4:	ldr	r3, [r4, #32]
   175d8:	str	r3, [fp, #-60]	; 0xffffffc4
   175dc:	ldr	r3, [r4, #24]
   175e0:	str	r3, [fp, #-68]	; 0xffffffbc
   175e4:	ldr	r3, [r4, #28]
   175e8:	str	ip, [fp, #-76]	; 0xffffffb4
   175ec:	str	r3, [fp, #-64]	; 0xffffffc0
   175f0:	blx	r6
   175f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   175f8:	str	r3, [r4, #32]
   175fc:	ldr	r3, [fp, #-112]	; 0xffffff90
   17600:	sub	r4, r4, #36	; 0x24
   17604:	cmp	r4, r3
   17608:	bcs	175b8 <argp_parse@@Base+0x694>
   1760c:	cmp	r5, #7
   17610:	moveq	r5, #22
   17614:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17618:	bl	17f08 <argp_parse@@Base+0xfe4>
   1761c:	mov	r0, r5
   17620:	sub	sp, fp, #32
   17624:	ldrd	r4, [sp]
   17628:	ldrd	r6, [sp, #8]
   1762c:	ldrd	r8, [sp, #16]
   17630:	ldrd	sl, [sp, #24]
   17634:	add	sp, sp, #32
   17638:	pop	{pc}		; (ldr pc, [sp], #4)
   1763c:	ldr	lr, [fp, #-236]	; 0xffffff14
   17640:	add	r3, sl, #1
   17644:	mov	r2, #45	; 0x2d
   17648:	str	r3, [fp, #-208]	; 0xffffff30
   1764c:	strb	r2, [r6, lr]
   17650:	b	171bc <argp_parse@@Base+0x298>
   17654:	ldr	lr, [fp, #-84]	; 0xffffffac
   17658:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1765c:	sub	lr, lr, #1
   17660:	cmp	r3, #0
   17664:	str	lr, [fp, #-84]	; 0xffffffac
   17668:	beq	17d68 <argp_parse@@Base+0xe44>
   1766c:	ldr	r6, [r5, #12]
   17670:	sub	r2, fp, #96	; 0x60
   17674:	mov	r1, #0
   17678:	mov	r0, r9
   1767c:	ldr	ip, [r5, #24]
   17680:	ldr	lr, [r5, #32]
   17684:	str	ip, [fp, #-68]	; 0xffffffbc
   17688:	ldr	ip, [r5, #28]
   1768c:	str	r6, [fp, #-76]	; 0xffffffb4
   17690:	str	ip, [fp, #-64]	; 0xffffffc0
   17694:	str	lr, [fp, #-60]	; 0xffffffc4
   17698:	blx	r3
   1769c:	ldr	ip, [fp, #-108]	; 0xffffff94
   176a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   176a4:	cmp	ip, r4
   176a8:	movls	r2, #0
   176ac:	movhi	r2, #1
   176b0:	cmp	r0, #7
   176b4:	str	r3, [r5, #32]
   176b8:	movne	r2, #0
   176bc:	cmp	r2, #0
   176c0:	beq	17d70 <argp_parse@@Base+0xe4c>
   176c4:	ldr	lr, [fp, #-84]	; 0xffffffac
   176c8:	b	17404 <argp_parse@@Base+0x4e0>
   176cc:	str	lr, [fp, #-84]	; 0xffffffac
   176d0:	add	r3, r4, #36	; 0x24
   176d4:	cmp	ip, r4
   176d8:	mov	r4, r3
   176dc:	bhi	17408 <argp_parse@@Base+0x4e4>
   176e0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   176e4:	ldr	r7, [fp, #-84]	; 0xffffffac
   176e8:	cmp	r7, r0
   176ec:	bne	178fc <argp_parse@@Base+0x9d8>
   176f0:	ldr	r4, [fp, #-112]	; 0xffffff90
   176f4:	ldr	ip, [fp, #-108]	; 0xffffff94
   176f8:	mov	r3, r4
   176fc:	cmp	r4, ip
   17700:	bcs	17d3c <argp_parse@@Base+0xe18>
   17704:	mov	r6, #2
   17708:	movt	r6, #256	; 0x100
   1770c:	mov	r5, #0
   17710:	b	17758 <argp_parse@@Base+0x834>
   17714:	ldr	ip, [r4, #-4]
   17718:	str	ip, [fp, #-60]	; 0xffffffc4
   1771c:	ldr	ip, [r4, #-12]
   17720:	str	ip, [fp, #-68]	; 0xffffffbc
   17724:	ldr	ip, [r4, #-8]
   17728:	str	r3, [fp, #-76]	; 0xffffffb4
   1772c:	str	ip, [fp, #-64]	; 0xffffffc0
   17730:	blx	r5
   17734:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17738:	mov	r5, r0
   1773c:	str	r3, [r4, #-4]
   17740:	ldr	ip, [fp, #-108]	; 0xffffff94
   17744:	cmp	ip, r4
   17748:	bls	17c10 <argp_parse@@Base+0xcec>
   1774c:	cmp	r5, #7
   17750:	cmpne	r5, #0
   17754:	bne	17bd8 <argp_parse@@Base+0xcb4>
   17758:	ldr	r3, [r4, #12]
   1775c:	sub	r2, fp, #96	; 0x60
   17760:	mov	r0, r6
   17764:	add	r4, r4, #36	; 0x24
   17768:	subs	r1, r3, #0
   1776c:	bne	17744 <argp_parse@@Base+0x820>
   17770:	ldr	r5, [r4, #-36]	; 0xffffffdc
   17774:	cmp	r5, #0
   17778:	bne	17714 <argp_parse@@Base+0x7f0>
   1777c:	cmp	r4, ip
   17780:	mov	r5, #7
   17784:	bcc	17758 <argp_parse@@Base+0x834>
   17788:	ldr	r3, [fp, #-112]	; 0xffffff90
   1778c:	sub	r4, ip, #36	; 0x24
   17790:	cmp	r4, r3
   17794:	bcs	17c2c <argp_parse@@Base+0xd08>
   17798:	b	17cb0 <argp_parse@@Base+0xd8c>
   1779c:	mov	r5, r0
   177a0:	cmp	r5, #7
   177a4:	bne	17530 <argp_parse@@Base+0x60c>
   177a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   177ac:	sub	r7, fp, #96	; 0x60
   177b0:	b	17520 <argp_parse@@Base+0x5fc>
   177b4:	mov	r1, #1
   177b8:	mov	r7, r3
   177bc:	mov	r2, r1
   177c0:	str	r1, [fp, #-100]	; 0xffffff9c
   177c4:	b	173b0 <argp_parse@@Base+0x48c>
   177c8:	str	ip, [sp]
   177cc:	sub	ip, fp, #148	; 0x94
   177d0:	str	ip, [sp, #4]
   177d4:	bl	17f90 <argp_parse@@Base+0x106c>
   177d8:	ldr	r7, [fp, #-148]	; 0xffffff6c
   177dc:	mov	r4, r0
   177e0:	cmn	r4, #1
   177e4:	str	r7, [fp, #-84]	; 0xffffffac
   177e8:	bne	174f0 <argp_parse@@Base+0x5cc>
   177ec:	mov	r3, #0
   177f0:	cmp	r7, #1
   177f4:	str	r3, [fp, #-100]	; 0xffffff9c
   177f8:	ble	178d0 <argp_parse@@Base+0x9ac>
   177fc:	sub	r3, r7, #-1073741823	; 0xc0000001
   17800:	ldr	r1, [fp, #-232]	; 0xffffff18
   17804:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17808:	ldr	r0, [r2, r3, lsl #2]
   1780c:	bl	110d4 <strcmp@plt>
   17810:	cmp	r0, #0
   17814:	bne	178d0 <argp_parse@@Base+0x9ac>
   17818:	str	r7, [fp, #-72]	; 0xffffffb8
   1781c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17820:	b	173cc <argp_parse@@Base+0x4a8>
   17824:	ldr	r2, [fp, #-244]	; 0xffffff0c
   17828:	movw	r3, #50136	; 0xc3d8
   1782c:	movt	r3, #2
   17830:	mov	r0, #1
   17834:	tst	r5, #2
   17838:	ldr	r1, [r3]
   1783c:	movw	r3, #50140	; 0xc3dc
   17840:	movt	r3, #2
   17844:	str	r0, [fp, #-100]	; 0xffffff9c
   17848:	mov	r0, #0
   1784c:	ldr	ip, [fp, #-232]	; 0xffffff18
   17850:	str	r7, [fp, #-96]	; 0xffffffa0
   17854:	str	r2, [fp, #-92]	; 0xffffffa4
   17858:	ldr	r2, [r3]
   1785c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17860:	str	r1, [fp, #-52]	; 0xffffffcc
   17864:	mov	r1, #0
   17868:	str	r2, [fp, #-48]	; 0xffffffd0
   1786c:	str	r3, [fp, #-108]	; 0xffffff94
   17870:	sub	r3, fp, #160	; 0xa0
   17874:	str	ip, [fp, #-88]	; 0xffffffa8
   17878:	str	r7, [fp, #-84]	; 0xffffffac
   1787c:	str	r5, [fp, #-80]	; 0xffffffb0
   17880:	strd	r0, [fp, #-76]	; 0xffffffb4
   17884:	strd	r0, [fp, #-68]	; 0xffffffbc
   17888:	strd	r0, [fp, #-60]	; 0xffffffc4
   1788c:	str	r3, [fp, #-44]	; 0xffffffd4
   17890:	mov	r3, ip
   17894:	bne	17354 <argp_parse@@Base+0x430>
   17898:	mov	r2, #1
   1789c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   178a0:	str	r2, [fp, #-144]	; 0xffffff70
   178a4:	ldr	r2, [fp, #-232]	; 0xffffff18
   178a8:	cmp	r2, r3
   178ac:	bne	17380 <argp_parse@@Base+0x45c>
   178b0:	ldr	r0, [r2]
   178b4:	cmp	r0, #0
   178b8:	beq	17380 <argp_parse@@Base+0x45c>
   178bc:	bl	17e50 <argp_parse@@Base+0xf2c>
   178c0:	str	r0, [fp, #-56]	; 0xffffffc8
   178c4:	b	17390 <argp_parse@@Base+0x46c>
   178c8:	mov	r5, r0
   178cc:	b	1761c <argp_parse@@Base+0x6f8>
   178d0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   178d4:	b	173cc <argp_parse@@Base+0x4a8>
   178d8:	cmp	r0, #7
   178dc:	mov	r5, r0
   178e0:	str	r8, [fp, #-232]	; 0xffffff18
   178e4:	beq	17344 <argp_parse@@Base+0x420>
   178e8:	cmp	r0, #0
   178ec:	bne	1761c <argp_parse@@Base+0x6f8>
   178f0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   178f4:	ldr	r5, [fp, #-80]	; 0xffffffb0
   178f8:	b	1734c <argp_parse@@Base+0x428>
   178fc:	ldr	r3, [fp, #4]
   17900:	cmp	r3, #0
   17904:	beq	17a44 <argp_parse@@Base+0xb20>
   17908:	str	r7, [r3]
   1790c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17910:	ldr	ip, [fp, #-108]	; 0xffffff94
   17914:	sub	r2, ip, #36	; 0x24
   17918:	cmp	r3, r2
   1791c:	movls	r6, #4
   17920:	subls	r4, ip, #72	; 0x48
   17924:	movtls	r6, #256	; 0x100
   17928:	bhi	17b58 <argp_parse@@Base+0xc34>
   1792c:	ldr	r5, [r4, #36]	; 0x24
   17930:	mov	r1, #0
   17934:	sub	r2, fp, #96	; 0x60
   17938:	mov	r0, r6
   1793c:	cmp	r5, r1
   17940:	beq	17a7c <argp_parse@@Base+0xb58>
   17944:	ldr	ip, [r4, #48]	; 0x30
   17948:	ldr	r3, [r4, #68]	; 0x44
   1794c:	str	r3, [fp, #-60]	; 0xffffffc4
   17950:	ldr	r3, [r4, #60]	; 0x3c
   17954:	str	r3, [fp, #-68]	; 0xffffffbc
   17958:	ldr	r3, [r4, #64]	; 0x40
   1795c:	str	ip, [fp, #-76]	; 0xffffffb4
   17960:	str	r3, [fp, #-64]	; 0xffffffc0
   17964:	blx	r5
   17968:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1796c:	str	r3, [r4, #68]	; 0x44
   17970:	ldr	r3, [fp, #-112]	; 0xffffff90
   17974:	cmp	r3, r4
   17978:	sub	r4, r4, #36	; 0x24
   1797c:	bhi	17b38 <argp_parse@@Base+0xc14>
   17980:	cmp	r0, #7
   17984:	cmpne	r0, #0
   17988:	beq	1792c <argp_parse@@Base+0xa08>
   1798c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17990:	mov	r5, r0
   17994:	sub	r4, ip, #36	; 0x24
   17998:	cmp	r4, r3
   1799c:	bcs	175b0 <argp_parse@@Base+0x68c>
   179a0:	b	17614 <argp_parse@@Base+0x6f0>
   179a4:	ldr	r2, [fp, #-232]	; 0xffffff18
   179a8:	ldr	r2, [r2]
   179ac:	str	r2, [r3]
   179b0:	b	16f6c <argp_parse@@Base+0x48>
   179b4:	ldr	r3, [fp, #-232]	; 0xffffff18
   179b8:	ldr	r0, [r3]
   179bc:	bl	17e50 <argp_parse@@Base+0xf2c>
   179c0:	str	r0, [r4]
   179c4:	b	16f80 <argp_parse@@Base+0x5c>
   179c8:	mov	r1, r4
   179cc:	ldr	r0, [fp, #-156]	; 0xffffff64
   179d0:	bl	1129c <strchr@plt>
   179d4:	cmp	r0, #0
   179d8:	beq	17a14 <argp_parse@@Base+0xaf0>
   179dc:	ldr	r5, [fp, #-112]	; 0xffffff90
   179e0:	ldr	r2, [fp, #-108]	; 0xffffff94
   179e4:	cmp	r5, r2
   179e8:	bcs	17a14 <argp_parse@@Base+0xaf0>
   179ec:	ldr	r3, [r5, #8]
   179f0:	cmp	r3, r0
   179f4:	bls	17a08 <argp_parse@@Base+0xae4>
   179f8:	b	17ccc <argp_parse@@Base+0xda8>
   179fc:	ldr	r3, [r5, #8]
   17a00:	cmp	r0, r3
   17a04:	bcc	17ccc <argp_parse@@Base+0xda8>
   17a08:	add	r5, r5, #36	; 0x24
   17a0c:	cmp	r5, r2
   17a10:	bcc	179fc <argp_parse@@Base+0xad8>
   17a14:	sub	r7, fp, #96	; 0x60
   17a18:	mov	r2, r4
   17a1c:	add	r4, r4, #1
   17a20:	ldr	r3, [pc, #888]	; 17da0 <argp_parse@@Base+0xe7c>
   17a24:	movw	r1, #44572	; 0xae1c
   17a28:	movt	r1, #1
   17a2c:	mov	r0, r7
   17a30:	bic	r4, r4, #2
   17a34:	bl	1680c <argp_error@@Base>
   17a38:	cmp	r4, #0
   17a3c:	bne	17a74 <argp_parse@@Base+0xb50>
   17a40:	b	176e0 <argp_parse@@Base+0x7bc>
   17a44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17a48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17a4c:	tst	r3, #2
   17a50:	bne	177ac <argp_parse@@Base+0x888>
   17a54:	cmp	r1, #0
   17a58:	beq	177ac <argp_parse@@Base+0x888>
   17a5c:	mov	r0, r1
   17a60:	movw	r1, #44592	; 0xae30
   17a64:	movt	r1, #1
   17a68:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17a6c:	sub	r7, fp, #96	; 0x60
   17a70:	bl	112a8 <fprintf@plt>
   17a74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17a78:	b	17520 <argp_parse@@Base+0x5fc>
   17a7c:	cmp	r4, r3
   17a80:	sub	r4, r4, #36	; 0x24
   17a84:	bcs	1792c <argp_parse@@Base+0xa08>
   17a88:	mov	r5, #7
   17a8c:	b	17b3c <argp_parse@@Base+0xc18>
   17a90:	asrs	r8, r4, #24
   17a94:	beq	179c8 <argp_parse@@Base+0xaa4>
   17a98:	add	r3, r8, r8, lsl #3
   17a9c:	ldr	r5, [fp, #-112]	; 0xffffff90
   17aa0:	ands	r2, r4, #8388608	; 0x800000
   17aa4:	movne	r2, #-16777216	; 0xff000000
   17aa8:	bic	r0, r4, #-16777216	; 0xff000000
   17aac:	lsl	r3, r3, #2
   17ab0:	orr	r0, r0, r2
   17ab4:	sub	r3, r3, #36	; 0x24
   17ab8:	ldr	r6, [r5, r3]
   17abc:	add	r5, r5, r3
   17ac0:	cmp	r6, #0
   17ac4:	beq	17d34 <argp_parse@@Base+0xe10>
   17ac8:	add	r1, r5, #24
   17acc:	ldr	lr, [r5, #12]
   17ad0:	sub	r7, fp, #96	; 0x60
   17ad4:	ldm	r1, {r1, r3, ip}
   17ad8:	mov	r2, r7
   17adc:	str	lr, [fp, #-76]	; 0xffffffb4
   17ae0:	str	r1, [fp, #-68]	; 0xffffffbc
   17ae4:	str	r3, [fp, #-64]	; 0xffffffc0
   17ae8:	str	ip, [fp, #-60]	; 0xffffffc4
   17aec:	ldr	r1, [fp, #-136]	; 0xffffff78
   17af0:	blx	r6
   17af4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17af8:	str	r3, [r5, #32]
   17afc:	cmp	r0, #7
   17b00:	beq	17b60 <argp_parse@@Base+0xc3c>
   17b04:	cmp	r0, #0
   17b08:	bne	1779c <argp_parse@@Base+0x878>
   17b0c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17b10:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17b14:	ldr	r7, [fp, #-84]	; 0xffffffac
   17b18:	b	173b0 <argp_parse@@Base+0x48c>
   17b1c:	movw	r2, #50192	; 0xc410
   17b20:	movt	r2, #2
   17b24:	ldr	r2, [r2]
   17b28:	cmp	r2, #0
   17b2c:	addeq	r2, r3, #16
   17b30:	bne	17054 <argp_parse@@Base+0x130>
   17b34:	b	17060 <argp_parse@@Base+0x13c>
   17b38:	mov	r5, r0
   17b3c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17b40:	cmp	r5, #7
   17b44:	sub	r4, ip, #36	; 0x24
   17b48:	bne	17998 <argp_parse@@Base+0xa74>
   17b4c:	cmp	r4, r3
   17b50:	movcs	r5, #0
   17b54:	bcs	175b0 <argp_parse@@Base+0x68c>
   17b58:	mov	r5, #0
   17b5c:	b	17614 <argp_parse@@Base+0x6f0>
   17b60:	cmp	r8, #0
   17b64:	beq	17a18 <argp_parse@@Base+0xaf4>
   17b68:	ldr	r3, [fp, #-152]	; 0xffffff68
   17b6c:	ldr	r2, [r3]
   17b70:	ldr	r1, [r3, #12]
   17b74:	cmp	r4, r1
   17b78:	bne	17b94 <argp_parse@@Base+0xc70>
   17b7c:	b	17bc4 <argp_parse@@Base+0xca0>
   17b80:	add	r3, r3, #16
   17b84:	ldr	r2, [r3]
   17b88:	ldr	r1, [r3, #12]
   17b8c:	cmp	r4, r1
   17b90:	beq	17bc4 <argp_parse@@Base+0xca0>
   17b94:	cmp	r2, #0
   17b98:	bne	17b80 <argp_parse@@Base+0xc5c>
   17b9c:	movw	r2, #44564	; 0xae14
   17ba0:	movt	r2, #1
   17ba4:	movw	r1, #44580	; 0xae24
   17ba8:	movt	r1, #1
   17bac:	ldr	r3, [pc, #492]	; 17da0 <argp_parse@@Base+0xe7c>
   17bb0:	mov	r0, r7
   17bb4:	add	r4, r4, #1
   17bb8:	bl	1680c <argp_error@@Base>
   17bbc:	bic	r4, r4, #2
   17bc0:	b	17a38 <argp_parse@@Base+0xb14>
   17bc4:	movw	r3, #44564	; 0xae14
   17bc8:	movt	r3, #1
   17bcc:	cmp	r2, #0
   17bd0:	moveq	r2, r3
   17bd4:	b	17ba4 <argp_parse@@Base+0xc80>
   17bd8:	ldr	r3, [fp, #-112]	; 0xffffff90
   17bdc:	sub	r2, ip, #36	; 0x24
   17be0:	cmp	r3, r2
   17be4:	bhi	17d58 <argp_parse@@Base+0xe34>
   17be8:	ldr	r2, [fp, #4]
   17bec:	cmp	r2, #0
   17bf0:	beq	17c00 <argp_parse@@Base+0xcdc>
   17bf4:	ldr	r2, [fp, #-84]	; 0xffffffac
   17bf8:	ldr	r1, [fp, #4]
   17bfc:	str	r2, [r1]
   17c00:	cmp	r5, #0
   17c04:	bne	177a0 <argp_parse@@Base+0x87c>
   17c08:	ldr	ip, [fp, #-108]	; 0xffffff94
   17c0c:	b	17914 <argp_parse@@Base+0x9f0>
   17c10:	ldr	r3, [fp, #-112]	; 0xffffff90
   17c14:	sub	r4, ip, #36	; 0x24
   17c18:	cmp	r4, r3
   17c1c:	bcc	17d20 <argp_parse@@Base+0xdfc>
   17c20:	cmp	r5, #7
   17c24:	cmpne	r5, #0
   17c28:	bne	17be8 <argp_parse@@Base+0xcc4>
   17c2c:	mov	r6, #1
   17c30:	movt	r6, #256	; 0x100
   17c34:	sub	r4, r4, #36	; 0x24
   17c38:	ldr	r5, [r4, #36]	; 0x24
   17c3c:	mov	r1, #0
   17c40:	sub	r2, fp, #96	; 0x60
   17c44:	mov	r0, r6
   17c48:	cmp	r5, r1
   17c4c:	beq	17ca0 <argp_parse@@Base+0xd7c>
   17c50:	ldr	ip, [r4, #48]	; 0x30
   17c54:	ldr	r3, [r4, #68]	; 0x44
   17c58:	str	r3, [fp, #-60]	; 0xffffffc4
   17c5c:	ldr	r3, [r4, #60]	; 0x3c
   17c60:	str	r3, [fp, #-68]	; 0xffffffbc
   17c64:	ldr	r3, [r4, #64]	; 0x40
   17c68:	str	ip, [fp, #-76]	; 0xffffffb4
   17c6c:	str	r3, [fp, #-64]	; 0xffffffc0
   17c70:	blx	r5
   17c74:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17c78:	str	r3, [r4, #68]	; 0x44
   17c7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17c80:	cmp	r3, r4
   17c84:	sub	r4, r4, #36	; 0x24
   17c88:	bhi	17d1c <argp_parse@@Base+0xdf8>
   17c8c:	cmp	r0, #7
   17c90:	cmpne	r0, #0
   17c94:	beq	17c38 <argp_parse@@Base+0xd14>
   17c98:	mov	r5, r0
   17c9c:	b	17be8 <argp_parse@@Base+0xcc4>
   17ca0:	cmp	r3, r4
   17ca4:	sub	r4, r4, #36	; 0x24
   17ca8:	bls	17c38 <argp_parse@@Base+0xd14>
   17cac:	ldr	ip, [fp, #-108]	; 0xffffff94
   17cb0:	ldr	r2, [fp, #4]
   17cb4:	cmp	r2, #0
   17cb8:	beq	17914 <argp_parse@@Base+0x9f0>
   17cbc:	ldr	r2, [fp, #-84]	; 0xffffffac
   17cc0:	ldr	r1, [fp, #4]
   17cc4:	str	r2, [r1]
   17cc8:	b	17914 <argp_parse@@Base+0x9f0>
   17ccc:	ldr	r3, [r5]
   17cd0:	cmp	r3, #0
   17cd4:	beq	17a14 <argp_parse@@Base+0xaf0>
   17cd8:	ldr	r6, [r5, #12]
   17cdc:	sub	r7, fp, #96	; 0x60
   17ce0:	mov	r0, r4
   17ce4:	mov	r2, r7
   17ce8:	mov	r8, #0
   17cec:	ldr	ip, [r5, #24]
   17cf0:	ldr	r1, [r5, #28]
   17cf4:	ldr	lr, [r5, #32]
   17cf8:	str	r6, [fp, #-76]	; 0xffffffb4
   17cfc:	str	ip, [fp, #-68]	; 0xffffffbc
   17d00:	str	r1, [fp, #-64]	; 0xffffffc0
   17d04:	ldr	r1, [fp, #-136]	; 0xffffff78
   17d08:	str	lr, [fp, #-60]	; 0xffffffc4
   17d0c:	blx	r3
   17d10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d14:	str	r3, [r5, #32]
   17d18:	b	17afc <argp_parse@@Base+0xbd8>
   17d1c:	mov	r5, r0
   17d20:	cmp	r5, #7
   17d24:	beq	17cac <argp_parse@@Base+0xd88>
   17d28:	b	17be8 <argp_parse@@Base+0xcc4>
   17d2c:	sub	r4, ip, #36	; 0x24
   17d30:	b	175a8 <argp_parse@@Base+0x684>
   17d34:	sub	r7, fp, #96	; 0x60
   17d38:	b	17b68 <argp_parse@@Base+0xc44>
   17d3c:	sub	r4, ip, #36	; 0x24
   17d40:	cmp	r3, r4
   17d44:	bls	17c2c <argp_parse@@Base+0xd08>
   17d48:	ldr	r2, [fp, #4]
   17d4c:	cmp	r2, #0
   17d50:	bne	17cbc <argp_parse@@Base+0xd98>
   17d54:	b	17b58 <argp_parse@@Base+0xc34>
   17d58:	ldr	r2, [fp, #4]
   17d5c:	cmp	r2, #0
   17d60:	bne	17bf4 <argp_parse@@Base+0xcd0>
   17d64:	b	17538 <argp_parse@@Base+0x614>
   17d68:	ldr	ip, [fp, #-108]	; 0xffffff94
   17d6c:	b	176d0 <argp_parse@@Base+0x7ac>
   17d70:	cmp	r0, #0
   17d74:	beq	17d8c <argp_parse@@Base+0xe68>
   17d78:	cmp	r0, #7
   17d7c:	mov	r5, r0
   17d80:	ldrne	r3, [fp, #-112]	; 0xffffff90
   17d84:	beq	176e0 <argp_parse@@Base+0x7bc>
   17d88:	b	17538 <argp_parse@@Base+0x614>
   17d8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   17d90:	mov	r0, r3
   17d94:	str	r3, [fp, #-84]	; 0xffffffac
   17d98:	b	17474 <argp_parse@@Base+0x550>
   17d9c:	andeq	sl, r1, ip, ror #25
   17da0:	andeq	sl, r1, r8, lsl #26
   17da4:	cmp	r1, #0
   17da8:	beq	17de8 <argp_parse@@Base+0xec4>
   17dac:	ldr	r2, [r1, #52]	; 0x34
   17db0:	ldr	r3, [r2, #48]	; 0x30
   17db4:	ldr	r1, [r2, #52]	; 0x34
   17db8:	cmp	r3, r1
   17dbc:	bcs	17de8 <argp_parse@@Base+0xec4>
   17dc0:	ldr	r2, [r3, #4]
   17dc4:	cmp	r0, r2
   17dc8:	bne	17ddc <argp_parse@@Base+0xeb8>
   17dcc:	b	17df0 <argp_parse@@Base+0xecc>
   17dd0:	ldr	r2, [r3, #4]
   17dd4:	cmp	r2, r0
   17dd8:	beq	17df0 <argp_parse@@Base+0xecc>
   17ddc:	add	r3, r3, #36	; 0x24
   17de0:	cmp	r3, r1
   17de4:	bcc	17dd0 <argp_parse@@Base+0xeac>
   17de8:	mov	r0, #0
   17dec:	bx	lr
   17df0:	ldr	r0, [r3, #24]
   17df4:	bx	lr
   17df8:	movw	r1, #50196	; 0xc414
   17dfc:	movt	r1, #2
   17e00:	push	{lr}		; (str lr, [sp, #-4]!)
   17e04:	ldm	r1, {r1, ip}
   17e08:	sub	sp, sp, #12
   17e0c:	movw	r3, #44808	; 0xaf08
   17e10:	movt	r3, #1
   17e14:	movw	r2, #44824	; 0xaf18
   17e18:	movt	r2, #1
   17e1c:	str	ip, [sp]
   17e20:	bl	18404 <argp_parse@@Base+0x14e0>
   17e24:	add	sp, sp, #12
   17e28:	pop	{pc}		; (ldr pc, [sp], #4)
   17e2c:	movw	r2, #50192	; 0xc410
   17e30:	movt	r2, #2
   17e34:	movw	ip, #32248	; 0x7df8
   17e38:	movt	ip, #1
   17e3c:	movw	r3, #50196	; 0xc414
   17e40:	movt	r3, #2
   17e44:	str	ip, [r2]
   17e48:	strd	r0, [r3]
   17e4c:	bx	lr
   17e50:	ldrb	r3, [r0]
   17e54:	cmp	r3, #47	; 0x2f
   17e58:	bne	17e68 <argp_parse@@Base+0xf44>
   17e5c:	ldrb	r3, [r0, #1]!
   17e60:	cmp	r3, #47	; 0x2f
   17e64:	beq	17e5c <argp_parse@@Base+0xf38>
   17e68:	cmp	r3, #0
   17e6c:	beq	17e9c <argp_parse@@Base+0xf78>
   17e70:	mov	r2, r0
   17e74:	mov	r1, #0
   17e78:	cmp	r3, #47	; 0x2f
   17e7c:	moveq	r1, #1
   17e80:	beq	17e90 <argp_parse@@Base+0xf6c>
   17e84:	cmp	r1, #0
   17e88:	movne	r0, r2
   17e8c:	movne	r1, #0
   17e90:	ldrb	r3, [r2, #1]!
   17e94:	cmp	r3, #0
   17e98:	bne	17e78 <argp_parse@@Base+0xf54>
   17e9c:	bx	lr
   17ea0:	str	r4, [sp, #-8]!
   17ea4:	mov	r4, r0
   17ea8:	str	lr, [sp, #4]
   17eac:	bl	11290 <strlen@plt>
   17eb0:	cmp	r0, #1
   17eb4:	bls	17ed8 <argp_parse@@Base+0xfb4>
   17eb8:	add	r2, r4, r0
   17ebc:	mov	r3, r0
   17ec0:	ldrb	r2, [r2, #-1]
   17ec4:	cmp	r2, #47	; 0x2f
   17ec8:	subeq	r3, r0, #2
   17ecc:	rsbeq	r1, r4, #1
   17ed0:	addeq	r3, r4, r3
   17ed4:	beq	17ee4 <argp_parse@@Base+0xfc0>
   17ed8:	ldr	r4, [sp]
   17edc:	add	sp, sp, #4
   17ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ee4:	cmp	r3, r4
   17ee8:	add	r0, r1, r3
   17eec:	beq	17ed8 <argp_parse@@Base+0xfb4>
   17ef0:	ldrb	r2, [r3], #-1
   17ef4:	cmp	r2, #47	; 0x2f
   17ef8:	beq	17ee4 <argp_parse@@Base+0xfc0>
   17efc:	ldr	r4, [sp]
   17f00:	add	sp, sp, #4
   17f04:	pop	{pc}		; (ldr pc, [sp], #4)
   17f08:	strd	r4, [sp, #-12]!
   17f0c:	mov	r5, r0
   17f10:	str	lr, [sp, #8]
   17f14:	sub	sp, sp, #12
   17f18:	bl	112b4 <__errno_location@plt>
   17f1c:	mov	r4, r0
   17f20:	mov	r2, #0
   17f24:	ldr	r3, [r4]
   17f28:	mov	r0, r5
   17f2c:	str	r2, [r4]
   17f30:	str	r3, [sp]
   17f34:	str	r3, [sp, #4]
   17f38:	bl	11134 <free@plt>
   17f3c:	ldr	r3, [r4]
   17f40:	add	r2, sp, #8
   17f44:	clz	r3, r3
   17f48:	lsr	r3, r3, #5
   17f4c:	add	r3, r2, r3, lsl #2
   17f50:	ldr	r3, [r3, #-8]
   17f54:	str	r3, [r4]
   17f58:	add	sp, sp, #12
   17f5c:	ldrd	r4, [sp]
   17f60:	add	sp, sp, #8
   17f64:	pop	{pc}		; (ldr pc, [sp], #4)
   17f68:	push	{lr}		; (str lr, [sp, #-4]!)
   17f6c:	sub	sp, sp, #20
   17f70:	mov	ip, #0
   17f74:	ldr	lr, [sp, #24]
   17f78:	str	lr, [sp]
   17f7c:	str	ip, [sp, #4]
   17f80:	str	ip, [sp, #8]
   17f84:	bl	19ec0 <argp_parse@@Base+0x2f9c>
   17f88:	add	sp, sp, #20
   17f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f90:	str	r4, [sp, #-8]!
   17f94:	mov	ip, #0
   17f98:	str	lr, [sp, #4]
   17f9c:	sub	sp, sp, #16
   17fa0:	ldr	r4, [sp, #24]
   17fa4:	str	ip, [sp, #12]
   17fa8:	ldr	lr, [sp, #28]
   17fac:	stm	sp, {r4, ip, lr}
   17fb0:	bl	19928 <argp_parse@@Base+0x2a04>
   17fb4:	add	sp, sp, #16
   17fb8:	ldr	r4, [sp]
   17fbc:	add	sp, sp, #4
   17fc0:	pop	{pc}		; (ldr pc, [sp], #4)
   17fc4:	str	r4, [sp, #-8]!
   17fc8:	mov	r4, #1
   17fcc:	str	lr, [sp, #4]
   17fd0:	sub	sp, sp, #16
   17fd4:	mov	lr, #0
   17fd8:	ldr	ip, [sp, #24]
   17fdc:	str	ip, [sp]
   17fe0:	stmib	sp, {r4, lr}
   17fe4:	bl	19ec0 <argp_parse@@Base+0x2f9c>
   17fe8:	add	sp, sp, #16
   17fec:	ldr	r4, [sp]
   17ff0:	add	sp, sp, #4
   17ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ff8:	strd	r4, [sp, #-12]!
   17ffc:	mov	r4, #0
   18000:	mov	r5, #1
   18004:	str	lr, [sp, #8]
   18008:	sub	sp, sp, #20
   1800c:	ldr	lr, [sp, #32]
   18010:	ldr	ip, [sp, #36]	; 0x24
   18014:	str	lr, [sp]
   18018:	str	r4, [sp, #12]
   1801c:	stmib	sp, {r5, ip}
   18020:	bl	19928 <argp_parse@@Base+0x2a04>
   18024:	add	sp, sp, #20
   18028:	ldrd	r4, [sp]
   1802c:	add	sp, sp, #8
   18030:	pop	{pc}		; (ldr pc, [sp], #4)
   18034:	strd	r4, [sp, #-16]!
   18038:	subs	r4, r0, #0
   1803c:	str	r6, [sp, #8]
   18040:	str	lr, [sp, #12]
   18044:	beq	180dc <argp_parse@@Base+0x11b8>
   18048:	mov	r1, #47	; 0x2f
   1804c:	bl	11338 <strrchr@plt>
   18050:	subs	r5, r0, #0
   18054:	beq	180b4 <argp_parse@@Base+0x1190>
   18058:	add	r6, r5, #1
   1805c:	sub	r3, r6, r4
   18060:	cmp	r3, #6
   18064:	ble	180b4 <argp_parse@@Base+0x1190>
   18068:	movw	r1, #44896	; 0xaf60
   1806c:	movt	r1, #1
   18070:	mov	r2, #7
   18074:	sub	r0, r5, #6
   18078:	bl	113e0 <strncmp@plt>
   1807c:	cmp	r0, #0
   18080:	bne	180b4 <argp_parse@@Base+0x1190>
   18084:	movw	r1, #44904	; 0xaf68
   18088:	movt	r1, #1
   1808c:	mov	r2, #3
   18090:	mov	r0, r6
   18094:	bl	113e0 <strncmp@plt>
   18098:	cmp	r0, #0
   1809c:	movne	r4, r6
   180a0:	bne	180b4 <argp_parse@@Base+0x1190>
   180a4:	add	r4, r5, #4
   180a8:	movw	r3, #50128	; 0xc3d0
   180ac:	movt	r3, #2
   180b0:	str	r4, [r3]
   180b4:	movw	r2, #50204	; 0xc41c
   180b8:	movt	r2, #2
   180bc:	ldr	r6, [sp, #8]
   180c0:	movw	r3, #50132	; 0xc3d4
   180c4:	movt	r3, #2
   180c8:	str	r4, [r2]
   180cc:	str	r4, [r3]
   180d0:	ldrd	r4, [sp]
   180d4:	add	sp, sp, #12
   180d8:	pop	{pc}		; (ldr pc, [sp], #4)
   180dc:	movw	r3, #50136	; 0xc3d8
   180e0:	movt	r3, #2
   180e4:	movw	r0, #44840	; 0xaf28
   180e8:	movt	r0, #1
   180ec:	ldr	r3, [r3]
   180f0:	mov	r2, #55	; 0x37
   180f4:	mov	r1, #1
   180f8:	bl	111dc <fwrite@plt>
   180fc:	bl	113ec <abort@plt>
   18100:	cmp	r1, #0
   18104:	strd	r4, [sp, #-16]!
   18108:	mov	r4, r0
   1810c:	str	r6, [sp, #8]
   18110:	str	lr, [sp, #12]
   18114:	sub	sp, sp, #32
   18118:	ldr	r5, [sp, #48]	; 0x30
   1811c:	ldr	r6, [sp, #52]	; 0x34
   18120:	beq	18224 <argp_parse@@Base+0x1300>
   18124:	mov	ip, r3
   18128:	mov	r3, r2
   1812c:	mov	r2, r1
   18130:	movw	r1, #44908	; 0xaf6c
   18134:	movt	r1, #1
   18138:	str	ip, [sp]
   1813c:	bl	112a8 <fprintf@plt>
   18140:	movw	r3, #2022	; 0x7e6
   18144:	movw	r2, #44920	; 0xaf78
   18148:	movt	r2, #1
   1814c:	movw	r1, #45688	; 0xb278
   18150:	movt	r1, #1
   18154:	mov	r0, r4
   18158:	bl	112a8 <fprintf@plt>
   1815c:	mov	r1, r4
   18160:	mov	r0, #10
   18164:	bl	11350 <fputc@plt>
   18168:	movw	r2, #44924	; 0xaf7c
   1816c:	movt	r2, #1
   18170:	movw	r1, #44960	; 0xafa0
   18174:	movt	r1, #1
   18178:	mov	r0, r4
   1817c:	bl	112a8 <fprintf@plt>
   18180:	mov	r1, r4
   18184:	mov	r0, #10
   18188:	bl	11350 <fputc@plt>
   1818c:	cmp	r6, #9
   18190:	ldrls	pc, [pc, r6, lsl #2]
   18194:	b	183f0 <argp_parse@@Base+0x14cc>
   18198:	andeq	r8, r1, r0, lsl r2
   1819c:	andeq	r8, r1, r4, lsr r2
   181a0:	andeq	r8, r1, ip, asr r2
   181a4:	andeq	r8, r1, r4, lsl #5
   181a8:			; <UNDEFINED> instruction: 0x000182b4
   181ac:	strdeq	r8, [r1], -r0
   181b0:	andeq	r8, r1, r4, lsr #6
   181b4:	andeq	r8, r1, r0, ror #6
   181b8:	andeq	r8, r1, r4, lsr #7
   181bc:	andeq	r8, r1, r0, asr #3
   181c0:	ldr	ip, [r5, #8]
   181c4:	movw	r1, #45400	; 0xb158
   181c8:	movt	r1, #1
   181cc:	mov	r0, r4
   181d0:	ldr	r3, [r5, #12]
   181d4:	ldr	r2, [r5, #32]
   181d8:	str	ip, [sp]
   181dc:	ldr	ip, [r5, #16]
   181e0:	str	r2, [sp, #24]
   181e4:	ldr	r2, [r5, #28]
   181e8:	str	r3, [sp, #4]
   181ec:	ldr	r3, [r5, #20]
   181f0:	str	ip, [sp, #8]
   181f4:	ldr	ip, [r5, #24]
   181f8:	str	r2, [sp, #20]
   181fc:	ldr	r2, [r5]
   18200:	str	r3, [sp, #12]
   18204:	ldr	r3, [r5, #4]
   18208:	str	ip, [sp, #16]
   1820c:	bl	112a8 <fprintf@plt>
   18210:	add	sp, sp, #32
   18214:	ldrd	r4, [sp]
   18218:	ldr	r6, [sp, #8]
   1821c:	add	sp, sp, #12
   18220:	pop	{pc}		; (ldr pc, [sp], #4)
   18224:	movw	r1, #41728	; 0xa300
   18228:	movt	r1, #1
   1822c:	bl	112a8 <fprintf@plt>
   18230:	b	18140 <argp_parse@@Base+0x121c>
   18234:	ldr	r2, [r5]
   18238:	mov	r0, r4
   1823c:	movw	r1, #45132	; 0xb04c
   18240:	movt	r1, #1
   18244:	add	sp, sp, #32
   18248:	ldrd	r4, [sp]
   1824c:	ldr	r6, [sp, #8]
   18250:	ldr	lr, [sp, #12]
   18254:	add	sp, sp, #16
   18258:	b	112a8 <fprintf@plt>
   1825c:	ldrd	r2, [r5]
   18260:	mov	r0, r4
   18264:	movw	r1, #45148	; 0xb05c
   18268:	movt	r1, #1
   1826c:	add	sp, sp, #32
   18270:	ldrd	r4, [sp]
   18274:	ldr	r6, [sp, #8]
   18278:	ldr	lr, [sp, #12]
   1827c:	add	sp, sp, #16
   18280:	b	112a8 <fprintf@plt>
   18284:	ldrd	r2, [r5]
   18288:	mov	r0, r4
   1828c:	movw	r1, #45172	; 0xb074
   18290:	movt	r1, #1
   18294:	ldr	ip, [r5, #8]
   18298:	str	ip, [sp, #48]	; 0x30
   1829c:	add	sp, sp, #32
   182a0:	ldrd	r4, [sp]
   182a4:	ldr	r6, [sp, #8]
   182a8:	ldr	lr, [sp, #12]
   182ac:	add	sp, sp, #16
   182b0:	b	112a8 <fprintf@plt>
   182b4:	ldr	r2, [r5]
   182b8:	mov	r0, r4
   182bc:	movw	r1, #45200	; 0xb090
   182c0:	movt	r1, #1
   182c4:	ldr	r3, [r5, #8]
   182c8:	ldr	ip, [r5, #12]
   182cc:	str	r3, [sp, #48]	; 0x30
   182d0:	ldr	r3, [r5, #4]
   182d4:	str	ip, [sp, #52]	; 0x34
   182d8:	add	sp, sp, #32
   182dc:	ldrd	r4, [sp]
   182e0:	ldr	r6, [sp, #8]
   182e4:	ldr	lr, [sp, #12]
   182e8:	add	sp, sp, #16
   182ec:	b	112a8 <fprintf@plt>
   182f0:	ldr	r2, [r5, #8]
   182f4:	mov	r0, r4
   182f8:	movw	r1, #45232	; 0xb0b0
   182fc:	movt	r1, #1
   18300:	ldr	ip, [r5, #12]
   18304:	ldr	r3, [r5, #16]
   18308:	str	r2, [sp]
   1830c:	ldr	r2, [r5]
   18310:	str	r3, [sp, #8]
   18314:	ldr	r3, [r5, #4]
   18318:	str	ip, [sp, #4]
   1831c:	bl	112a8 <fprintf@plt>
   18320:	b	18210 <argp_parse@@Base+0x12ec>
   18324:	ldr	ip, [r5, #8]
   18328:	mov	r0, r4
   1832c:	movw	r1, #45268	; 0xb0d4
   18330:	movt	r1, #1
   18334:	ldr	r3, [r5, #12]
   18338:	ldr	r2, [r5, #20]
   1833c:	str	ip, [sp]
   18340:	ldr	ip, [r5, #16]
   18344:	str	r2, [sp, #12]
   18348:	ldr	r2, [r5]
   1834c:	str	r3, [sp, #4]
   18350:	ldr	r3, [r5, #4]
   18354:	str	ip, [sp, #8]
   18358:	bl	112a8 <fprintf@plt>
   1835c:	b	18210 <argp_parse@@Base+0x12ec>
   18360:	ldr	r3, [r5, #8]
   18364:	mov	r0, r4
   18368:	movw	r1, #45308	; 0xb0fc
   1836c:	movt	r1, #1
   18370:	ldr	r2, [r5, #12]
   18374:	ldr	ip, [r5, #24]
   18378:	str	r3, [sp]
   1837c:	ldr	r3, [r5, #16]
   18380:	str	ip, [sp, #16]
   18384:	ldr	ip, [r5, #20]
   18388:	str	r2, [sp, #4]
   1838c:	ldr	r2, [r5]
   18390:	str	r3, [sp, #8]
   18394:	ldr	r3, [r5, #4]
   18398:	str	ip, [sp, #12]
   1839c:	bl	112a8 <fprintf@plt>
   183a0:	b	18210 <argp_parse@@Base+0x12ec>
   183a4:	ldr	r2, [r5, #8]
   183a8:	mov	r0, r4
   183ac:	movw	r1, #45352	; 0xb128
   183b0:	movt	r1, #1
   183b4:	ldr	ip, [r5, #12]
   183b8:	ldr	r3, [r5, #28]
   183bc:	str	r2, [sp]
   183c0:	ldr	r2, [r5, #16]
   183c4:	str	r3, [sp, #20]
   183c8:	ldr	r3, [r5, #24]
   183cc:	str	ip, [sp, #4]
   183d0:	ldr	ip, [r5, #20]
   183d4:	str	r2, [sp, #8]
   183d8:	ldr	r2, [r5]
   183dc:	str	r3, [sp, #16]
   183e0:	ldr	r3, [r5, #4]
   183e4:	str	ip, [sp, #12]
   183e8:	bl	112a8 <fprintf@plt>
   183ec:	b	18210 <argp_parse@@Base+0x12ec>
   183f0:	movw	r1, #45452	; 0xb18c
   183f4:	movt	r1, #1
   183f8:	ldr	ip, [r5, #8]
   183fc:	mov	r0, r4
   18400:	b	181d0 <argp_parse@@Base+0x12ac>
   18404:	strd	r4, [sp, #-12]!
   18408:	str	lr, [sp, #8]
   1840c:	sub	sp, sp, #12
   18410:	ldr	r5, [sp, #24]
   18414:	ldr	ip, [r5]
   18418:	cmp	ip, #0
   1841c:	beq	18438 <argp_parse@@Base+0x1514>
   18420:	mov	lr, r5
   18424:	mov	ip, #0
   18428:	ldr	r4, [lr, #4]!
   1842c:	add	ip, ip, #1
   18430:	cmp	r4, #0
   18434:	bne	18428 <argp_parse@@Base+0x1504>
   18438:	stm	sp, {r5, ip}
   1843c:	bl	18100 <argp_parse@@Base+0x11dc>
   18440:	add	sp, sp, #12
   18444:	ldrd	r4, [sp]
   18448:	add	sp, sp, #8
   1844c:	pop	{pc}		; (ldr pc, [sp], #4)
   18450:	strd	r4, [sp, #-16]!
   18454:	mov	ip, #0
   18458:	str	r6, [sp, #8]
   1845c:	str	lr, [sp, #12]
   18460:	sub	sp, sp, #48	; 0x30
   18464:	ldr	r5, [sp, #64]	; 0x40
   18468:	add	r6, sp, #8
   1846c:	mov	r4, r6
   18470:	ldr	lr, [r5], #4
   18474:	cmp	lr, #0
   18478:	str	lr, [r4], #4
   1847c:	beq	1848c <argp_parse@@Base+0x1568>
   18480:	add	ip, ip, #1
   18484:	cmp	ip, #10
   18488:	bne	18470 <argp_parse@@Base+0x154c>
   1848c:	stm	sp, {r6, ip}
   18490:	bl	18100 <argp_parse@@Base+0x11dc>
   18494:	add	sp, sp, #48	; 0x30
   18498:	ldrd	r4, [sp]
   1849c:	ldr	r6, [sp, #8]
   184a0:	add	sp, sp, #12
   184a4:	pop	{pc}		; (ldr pc, [sp], #4)
   184a8:	push	{r3}		; (str r3, [sp, #-4]!)
   184ac:	mov	ip, #0
   184b0:	strd	r4, [sp, #-12]!
   184b4:	str	lr, [sp, #8]
   184b8:	sub	sp, sp, #56	; 0x38
   184bc:	add	r3, sp, #72	; 0x48
   184c0:	add	r5, sp, #16
   184c4:	mov	r4, r3
   184c8:	mov	lr, r5
   184cc:	str	r3, [sp, #12]
   184d0:	ldr	r3, [r4], #4
   184d4:	cmp	r3, #0
   184d8:	str	r3, [lr], #4
   184dc:	beq	184ec <argp_parse@@Base+0x15c8>
   184e0:	add	ip, ip, #1
   184e4:	cmp	ip, #10
   184e8:	bne	184d0 <argp_parse@@Base+0x15ac>
   184ec:	ldr	r3, [sp, #68]	; 0x44
   184f0:	stm	sp, {r5, ip}
   184f4:	bl	18100 <argp_parse@@Base+0x11dc>
   184f8:	add	sp, sp, #56	; 0x38
   184fc:	ldrd	r4, [sp]
   18500:	ldr	lr, [sp, #8]
   18504:	add	sp, sp, #12
   18508:	add	sp, sp, #4
   1850c:	bx	lr
   18510:	movw	r3, #50140	; 0xc3dc
   18514:	movt	r3, #2
   18518:	str	r4, [sp, #-8]!
   1851c:	mov	r0, #10
   18520:	ldr	r1, [r3]
   18524:	str	lr, [sp, #4]
   18528:	bl	11350 <fputc@plt>
   1852c:	movw	r1, #45512	; 0xb1c8
   18530:	movt	r1, #1
   18534:	movw	r0, #45536	; 0xb1e0
   18538:	movt	r0, #1
   1853c:	bl	110f8 <printf@plt>
   18540:	movw	r2, #45556	; 0xb1f4
   18544:	movt	r2, #1
   18548:	movw	r1, #44824	; 0xaf18
   1854c:	movt	r1, #1
   18550:	movw	r0, #45596	; 0xb21c
   18554:	movt	r0, #1
   18558:	bl	110f8 <printf@plt>
   1855c:	movw	r1, #45616	; 0xb230
   18560:	movt	r1, #1
   18564:	ldr	r4, [sp]
   18568:	movw	r0, #45648	; 0xb250
   1856c:	movt	r0, #1
   18570:	ldr	lr, [sp, #4]
   18574:	add	sp, sp, #8
   18578:	b	110f8 <printf@plt>
   1857c:	str	r4, [sp, #-8]!
   18580:	str	lr, [sp, #4]
   18584:	bl	18a98 <argp_parse@@Base+0x1b74>
   18588:	cmp	r0, #0
   1858c:	beq	1859c <argp_parse@@Base+0x1678>
   18590:	ldr	r4, [sp]
   18594:	add	sp, sp, #4
   18598:	pop	{pc}		; (ldr pc, [sp], #4)
   1859c:	bl	189f4 <argp_parse@@Base+0x1ad0>
   185a0:	str	r4, [sp, #-8]!
   185a4:	str	lr, [sp, #4]
   185a8:	bl	18a98 <argp_parse@@Base+0x1b74>
   185ac:	cmp	r0, #0
   185b0:	beq	185c0 <argp_parse@@Base+0x169c>
   185b4:	ldr	r4, [sp]
   185b8:	add	sp, sp, #4
   185bc:	pop	{pc}		; (ldr pc, [sp], #4)
   185c0:	bl	189f4 <argp_parse@@Base+0x1ad0>
   185c4:	str	r4, [sp, #-8]!
   185c8:	str	lr, [sp, #4]
   185cc:	bl	18a98 <argp_parse@@Base+0x1b74>
   185d0:	cmp	r0, #0
   185d4:	beq	185e4 <argp_parse@@Base+0x16c0>
   185d8:	ldr	r4, [sp]
   185dc:	add	sp, sp, #4
   185e0:	pop	{pc}		; (ldr pc, [sp], #4)
   185e4:	bl	189f4 <argp_parse@@Base+0x1ad0>
   185e8:	strd	r4, [sp, #-16]!
   185ec:	mov	r5, r0
   185f0:	mov	r4, r1
   185f4:	str	r6, [sp, #8]
   185f8:	str	lr, [sp, #12]
   185fc:	bl	18ad4 <argp_parse@@Base+0x1bb0>
   18600:	cmp	r0, #0
   18604:	beq	18618 <argp_parse@@Base+0x16f4>
   18608:	ldrd	r4, [sp]
   1860c:	ldr	r6, [sp, #8]
   18610:	add	sp, sp, #12
   18614:	pop	{pc}		; (ldr pc, [sp], #4)
   18618:	adds	r4, r4, #0
   1861c:	movne	r4, #1
   18620:	cmp	r5, #0
   18624:	moveq	r4, #1
   18628:	cmp	r4, #0
   1862c:	beq	18608 <argp_parse@@Base+0x16e4>
   18630:	bl	189f4 <argp_parse@@Base+0x1ad0>
   18634:	cmp	r1, #0
   18638:	orreq	r1, r1, #1
   1863c:	str	r4, [sp, #-8]!
   18640:	str	lr, [sp, #4]
   18644:	bl	18ad4 <argp_parse@@Base+0x1bb0>
   18648:	cmp	r0, #0
   1864c:	beq	1865c <argp_parse@@Base+0x1738>
   18650:	ldr	r4, [sp]
   18654:	add	sp, sp, #4
   18658:	pop	{pc}		; (ldr pc, [sp], #4)
   1865c:	bl	189f4 <argp_parse@@Base+0x1ad0>
   18660:	strd	r4, [sp, #-16]!
   18664:	mov	r4, r0
   18668:	mov	r5, r2
   1866c:	str	r6, [sp, #8]
   18670:	mov	r6, r1
   18674:	str	lr, [sp, #12]
   18678:	bl	19f6c <argp_parse@@Base+0x3048>
   1867c:	cmp	r0, #0
   18680:	beq	18694 <argp_parse@@Base+0x1770>
   18684:	ldrd	r4, [sp]
   18688:	ldr	r6, [sp, #8]
   1868c:	add	sp, sp, #12
   18690:	pop	{pc}		; (ldr pc, [sp], #4)
   18694:	cmp	r4, #0
   18698:	beq	186a8 <argp_parse@@Base+0x1784>
   1869c:	cmp	r6, #0
   186a0:	cmpne	r5, #0
   186a4:	beq	18684 <argp_parse@@Base+0x1760>
   186a8:	bl	189f4 <argp_parse@@Base+0x1ad0>
   186ac:	b	18660 <argp_parse@@Base+0x173c>
   186b0:	cmp	r2, #0
   186b4:	cmpne	r1, #0
   186b8:	str	r4, [sp, #-8]!
   186bc:	moveq	r2, #1
   186c0:	str	lr, [sp, #4]
   186c4:	moveq	r1, r2
   186c8:	bl	19f6c <argp_parse@@Base+0x3048>
   186cc:	cmp	r0, #0
   186d0:	beq	186e0 <argp_parse@@Base+0x17bc>
   186d4:	ldr	r4, [sp]
   186d8:	add	sp, sp, #4
   186dc:	pop	{pc}		; (ldr pc, [sp], #4)
   186e0:	bl	189f4 <argp_parse@@Base+0x1ad0>
   186e4:	mov	r2, r1
   186e8:	mov	r1, r0
   186ec:	mov	r0, #0
   186f0:	b	18660 <argp_parse@@Base+0x173c>
   186f4:	mov	r2, r1
   186f8:	mov	r1, r0
   186fc:	mov	r0, #0
   18700:	b	186b0 <argp_parse@@Base+0x178c>
   18704:	cmp	r0, #0
   18708:	strd	r4, [sp, #-16]!
   1870c:	mov	r5, r1
   18710:	ldr	r4, [r1]
   18714:	str	r6, [sp, #8]
   18718:	str	lr, [sp, #12]
   1871c:	beq	1874c <argp_parse@@Base+0x1828>
   18720:	lsr	r3, r4, #1
   18724:	add	r3, r3, #1
   18728:	adds	r4, r4, r3
   1872c:	bcs	18768 <argp_parse@@Base+0x1844>
   18730:	mov	r1, r4
   18734:	bl	18660 <argp_parse@@Base+0x173c>
   18738:	ldr	r6, [sp, #8]
   1873c:	str	r4, [r5]
   18740:	ldrd	r4, [sp]
   18744:	add	sp, sp, #12
   18748:	pop	{pc}		; (ldr pc, [sp], #4)
   1874c:	cmp	r4, #0
   18750:	bne	18730 <argp_parse@@Base+0x180c>
   18754:	mov	r4, #64	; 0x40
   18758:	udiv	r4, r4, r2
   1875c:	cmp	r2, #64	; 0x40
   18760:	addhi	r4, r4, #1
   18764:	b	18730 <argp_parse@@Base+0x180c>
   18768:	bl	189f4 <argp_parse@@Base+0x1ad0>
   1876c:	mov	r2, #1
   18770:	b	18704 <argp_parse@@Base+0x17e0>
   18774:	ldr	ip, [r1]
   18778:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1877c:	mov	r5, r1
   18780:	strd	r6, [sp, #8]
   18784:	str	lr, [sp, #28]
   18788:	strd	r8, [sp, #16]
   1878c:	asr	lr, ip, #1
   18790:	ldr	r8, [sp, #32]
   18794:	str	sl, [sp, #24]
   18798:	adds	r4, ip, lr
   1879c:	mvn	lr, r3
   187a0:	lsr	lr, lr, #31
   187a4:	mvnvs	r4, #-2147483648	; 0x80000000
   187a8:	cmp	r3, r4
   187ac:	movge	r1, #0
   187b0:	andlt	r1, lr, #1
   187b4:	cmp	r1, #0
   187b8:	movne	r4, r3
   187bc:	smull	r6, r7, r4, r8
   187c0:	cmp	r7, r6, asr #31
   187c4:	bne	1884c <argp_parse@@Base+0x1928>
   187c8:	cmp	r6, #63	; 0x3f
   187cc:	mov	r1, r6
   187d0:	ble	18834 <argp_parse@@Base+0x1910>
   187d4:	cmp	r0, #0
   187d8:	sub	r6, r4, ip
   187dc:	streq	r0, [r5]
   187e0:	cmp	r6, r2
   187e4:	bge	18814 <argp_parse@@Base+0x18f0>
   187e8:	adds	r4, ip, r2
   187ec:	bvs	18848 <argp_parse@@Base+0x1924>
   187f0:	cmp	r4, r3
   187f4:	movle	r3, #0
   187f8:	andgt	r3, lr, #1
   187fc:	cmp	r3, #0
   18800:	bne	18848 <argp_parse@@Base+0x1924>
   18804:	smull	r8, r9, r4, r8
   18808:	cmp	r9, r8, asr #31
   1880c:	mov	r1, r8
   18810:	bne	18848 <argp_parse@@Base+0x1924>
   18814:	bl	185e8 <argp_parse@@Base+0x16c4>
   18818:	ldrd	r6, [sp, #8]
   1881c:	ldrd	r8, [sp, #16]
   18820:	ldr	sl, [sp, #24]
   18824:	str	r4, [r5]
   18828:	ldrd	r4, [sp]
   1882c:	add	sp, sp, #28
   18830:	pop	{pc}		; (ldr pc, [sp], #4)
   18834:	mov	r6, #64	; 0x40
   18838:	sdiv	r4, r6, r8
   1883c:	mls	r1, r8, r4, r6
   18840:	sub	r1, r6, r1
   18844:	b	187d4 <argp_parse@@Base+0x18b0>
   18848:	bl	189f4 <argp_parse@@Base+0x1ad0>
   1884c:	mvn	r6, #-2147483648	; 0x80000000
   18850:	b	18838 <argp_parse@@Base+0x1914>
   18854:	mov	r1, #1
   18858:	str	r4, [sp, #-8]!
   1885c:	str	lr, [sp, #4]
   18860:	bl	18a24 <argp_parse@@Base+0x1b00>
   18864:	cmp	r0, #0
   18868:	beq	18878 <argp_parse@@Base+0x1954>
   1886c:	ldr	r4, [sp]
   18870:	add	sp, sp, #4
   18874:	pop	{pc}		; (ldr pc, [sp], #4)
   18878:	bl	189f4 <argp_parse@@Base+0x1ad0>
   1887c:	mov	r1, #1
   18880:	str	r4, [sp, #-8]!
   18884:	str	lr, [sp, #4]
   18888:	bl	18a24 <argp_parse@@Base+0x1b00>
   1888c:	cmp	r0, #0
   18890:	beq	188a0 <argp_parse@@Base+0x197c>
   18894:	ldr	r4, [sp]
   18898:	add	sp, sp, #4
   1889c:	pop	{pc}		; (ldr pc, [sp], #4)
   188a0:	bl	189f4 <argp_parse@@Base+0x1ad0>
   188a4:	str	r4, [sp, #-8]!
   188a8:	str	lr, [sp, #4]
   188ac:	bl	18a24 <argp_parse@@Base+0x1b00>
   188b0:	cmp	r0, #0
   188b4:	beq	188c4 <argp_parse@@Base+0x19a0>
   188b8:	ldr	r4, [sp]
   188bc:	add	sp, sp, #4
   188c0:	pop	{pc}		; (ldr pc, [sp], #4)
   188c4:	bl	189f4 <argp_parse@@Base+0x1ad0>
   188c8:	str	r4, [sp, #-8]!
   188cc:	str	lr, [sp, #4]
   188d0:	bl	18a24 <argp_parse@@Base+0x1b00>
   188d4:	cmp	r0, #0
   188d8:	beq	188e8 <argp_parse@@Base+0x19c4>
   188dc:	ldr	r4, [sp]
   188e0:	add	sp, sp, #4
   188e4:	pop	{pc}		; (ldr pc, [sp], #4)
   188e8:	bl	189f4 <argp_parse@@Base+0x1ad0>
   188ec:	strd	r4, [sp, #-16]!
   188f0:	mov	r4, r1
   188f4:	str	r6, [sp, #8]
   188f8:	mov	r6, r0
   188fc:	mov	r0, r1
   18900:	str	lr, [sp, #12]
   18904:	bl	18a98 <argp_parse@@Base+0x1b74>
   18908:	subs	r5, r0, #0
   1890c:	beq	18930 <argp_parse@@Base+0x1a0c>
   18910:	mov	r2, r4
   18914:	mov	r1, r6
   18918:	bl	11158 <memcpy@plt>
   1891c:	mov	r0, r5
   18920:	ldrd	r4, [sp]
   18924:	ldr	r6, [sp, #8]
   18928:	add	sp, sp, #12
   1892c:	pop	{pc}		; (ldr pc, [sp], #4)
   18930:	bl	189f4 <argp_parse@@Base+0x1ad0>
   18934:	strd	r4, [sp, #-16]!
   18938:	mov	r4, r1
   1893c:	str	r6, [sp, #8]
   18940:	mov	r6, r0
   18944:	mov	r0, r1
   18948:	str	lr, [sp, #12]
   1894c:	bl	18a98 <argp_parse@@Base+0x1b74>
   18950:	subs	r5, r0, #0
   18954:	beq	18978 <argp_parse@@Base+0x1a54>
   18958:	mov	r2, r4
   1895c:	mov	r1, r6
   18960:	bl	11158 <memcpy@plt>
   18964:	mov	r0, r5
   18968:	ldrd	r4, [sp]
   1896c:	ldr	r6, [sp, #8]
   18970:	add	sp, sp, #12
   18974:	pop	{pc}		; (ldr pc, [sp], #4)
   18978:	bl	189f4 <argp_parse@@Base+0x1ad0>
   1897c:	strd	r4, [sp, #-16]!
   18980:	mov	r4, r1
   18984:	str	r6, [sp, #8]
   18988:	mov	r6, r0
   1898c:	add	r0, r1, #1
   18990:	str	lr, [sp, #12]
   18994:	bl	18a98 <argp_parse@@Base+0x1b74>
   18998:	subs	r5, r0, #0
   1899c:	beq	189c8 <argp_parse@@Base+0x1aa4>
   189a0:	mov	r3, #0
   189a4:	mov	r1, r6
   189a8:	mov	r2, r4
   189ac:	strb	r3, [r5, r4]
   189b0:	bl	11158 <memcpy@plt>
   189b4:	mov	r0, r5
   189b8:	ldrd	r4, [sp]
   189bc:	ldr	r6, [sp, #8]
   189c0:	add	sp, sp, #12
   189c4:	pop	{pc}		; (ldr pc, [sp], #4)
   189c8:	bl	189f4 <argp_parse@@Base+0x1ad0>
   189cc:	str	r4, [sp, #-8]!
   189d0:	mov	r4, r0
   189d4:	str	lr, [sp, #4]
   189d8:	bl	11290 <strlen@plt>
   189dc:	add	r1, r0, #1
   189e0:	mov	r0, r4
   189e4:	ldr	r4, [sp]
   189e8:	ldr	lr, [sp, #4]
   189ec:	add	sp, sp, #8
   189f0:	b	188ec <argp_parse@@Base+0x19c8>
   189f4:	movw	r3, #50108	; 0xc3bc
   189f8:	movt	r3, #2
   189fc:	str	r4, [sp, #-8]!
   18a00:	movw	r2, #41164	; 0xa0cc
   18a04:	movt	r2, #1
   18a08:	ldr	r0, [r3]
   18a0c:	mov	r1, #0
   18a10:	movw	r3, #45736	; 0xb2a8
   18a14:	movt	r3, #1
   18a18:	str	lr, [sp, #4]
   18a1c:	bl	111f4 <error@plt>
   18a20:	bl	113ec <abort@plt>
   18a24:	cmp	r1, #0
   18a28:	cmpne	r0, #0
   18a2c:	beq	18a78 <argp_parse@@Base+0x1b54>
   18a30:	strd	r4, [sp, #-16]!
   18a34:	umull	r4, r5, r0, r1
   18a38:	str	r6, [sp, #8]
   18a3c:	str	lr, [sp, #12]
   18a40:	adds	r3, r5, #0
   18a44:	movne	r3, #1
   18a48:	cmp	r4, #0
   18a4c:	blt	18a58 <argp_parse@@Base+0x1b34>
   18a50:	cmp	r3, #0
   18a54:	beq	18a84 <argp_parse@@Base+0x1b60>
   18a58:	bl	112b4 <__errno_location@plt>
   18a5c:	mov	r3, #12
   18a60:	ldrd	r4, [sp]
   18a64:	ldr	r6, [sp, #8]
   18a68:	add	sp, sp, #12
   18a6c:	str	r3, [r0]
   18a70:	mov	r0, #0
   18a74:	pop	{pc}		; (ldr pc, [sp], #4)
   18a78:	mov	r1, #1
   18a7c:	mov	r0, r1
   18a80:	b	110b0 <calloc@plt>
   18a84:	ldrd	r4, [sp]
   18a88:	ldr	r6, [sp, #8]
   18a8c:	ldr	lr, [sp, #12]
   18a90:	add	sp, sp, #16
   18a94:	b	110b0 <calloc@plt>
   18a98:	cmp	r0, #0
   18a9c:	beq	18aa8 <argp_parse@@Base+0x1b84>
   18aa0:	blt	18ab0 <argp_parse@@Base+0x1b8c>
   18aa4:	b	11218 <malloc@plt>
   18aa8:	mov	r0, #1
   18aac:	b	11218 <malloc@plt>
   18ab0:	str	r4, [sp, #-8]!
   18ab4:	str	lr, [sp, #4]
   18ab8:	bl	112b4 <__errno_location@plt>
   18abc:	mov	r3, #12
   18ac0:	ldr	r4, [sp]
   18ac4:	add	sp, sp, #4
   18ac8:	str	r3, [r0]
   18acc:	mov	r0, #0
   18ad0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ad4:	cmp	r0, #0
   18ad8:	beq	18b00 <argp_parse@@Base+0x1bdc>
   18adc:	cmp	r1, #0
   18ae0:	str	r4, [sp, #-8]!
   18ae4:	str	lr, [sp, #4]
   18ae8:	beq	18b08 <argp_parse@@Base+0x1be4>
   18aec:	blt	18b1c <argp_parse@@Base+0x1bf8>
   18af0:	ldr	r4, [sp]
   18af4:	ldr	lr, [sp, #4]
   18af8:	add	sp, sp, #8
   18afc:	b	111b8 <realloc@plt>
   18b00:	mov	r0, r1
   18b04:	b	18a98 <argp_parse@@Base+0x1b74>
   18b08:	bl	17f08 <argp_parse@@Base+0xfe4>
   18b0c:	ldr	r4, [sp]
   18b10:	add	sp, sp, #4
   18b14:	mov	r0, #0
   18b18:	pop	{pc}		; (ldr pc, [sp], #4)
   18b1c:	bl	112b4 <__errno_location@plt>
   18b20:	mov	r3, #12
   18b24:	str	r3, [r0]
   18b28:	b	18b0c <argp_parse@@Base+0x1be8>
   18b2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18b30:	mov	r5, r3
   18b34:	strd	r6, [sp, #8]
   18b38:	mov	r7, r1
   18b3c:	mov	r6, r2
   18b40:	str	r8, [sp, #16]
   18b44:	mov	r8, r0
   18b48:	mov	r0, #36	; 0x24
   18b4c:	str	lr, [sp, #20]
   18b50:	bl	18a98 <argp_parse@@Base+0x1b74>
   18b54:	subs	r4, r0, #0
   18b58:	beq	18b9c <argp_parse@@Base+0x1c78>
   18b5c:	mov	r3, #0
   18b60:	mov	r0, #200	; 0xc8
   18b64:	str	r8, [r4]
   18b68:	str	r7, [r4, #4]
   18b6c:	str	r6, [r4, #8]
   18b70:	str	r5, [r4, #12]
   18b74:	str	r3, [r4, #16]
   18b78:	str	r3, [r4, #20]
   18b7c:	bl	18a98 <argp_parse@@Base+0x1b74>
   18b80:	cmp	r0, #0
   18b84:	mov	r3, r0
   18b88:	str	r0, [r4, #24]
   18b8c:	addne	r2, r0, #200	; 0xc8
   18b90:	strne	r0, [r4, #28]
   18b94:	strne	r2, [r4, #32]
   18b98:	beq	18bb4 <argp_parse@@Base+0x1c90>
   18b9c:	mov	r0, r4
   18ba0:	ldrd	r4, [sp]
   18ba4:	ldrd	r6, [sp, #8]
   18ba8:	ldr	r8, [sp, #16]
   18bac:	add	sp, sp, #20
   18bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   18bb4:	mov	r0, r4
   18bb8:	mov	r4, r3
   18bbc:	bl	17f08 <argp_parse@@Base+0xfe4>
   18bc0:	b	18b9c <argp_parse@@Base+0x1c78>
   18bc4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18bc8:	mov	r5, r0
   18bcc:	ldr	r3, [r0, #16]
   18bd0:	ldr	r4, [r0, #24]
   18bd4:	strd	r6, [sp, #8]
   18bd8:	strd	r8, [sp, #16]
   18bdc:	ldr	r8, [r0, #28]
   18be0:	strd	sl, [sp, #24]
   18be4:	add	r4, r4, r3
   18be8:	str	lr, [sp, #32]
   18bec:	sub	sp, sp, #12
   18bf0:	cmp	r4, r8
   18bf4:	bcs	18d08 <argp_parse@@Base+0x1de4>
   18bf8:	ldr	r6, [r5, #20]
   18bfc:	cmp	r6, #0
   18c00:	bne	18c60 <argp_parse@@Base+0x1d3c>
   18c04:	ldr	r7, [r5, #4]
   18c08:	cmp	r7, #0
   18c0c:	beq	18ee8 <argp_parse@@Base+0x1fc4>
   18c10:	ldr	r2, [r5, #32]
   18c14:	add	r3, r8, r7
   18c18:	cmp	r2, r3
   18c1c:	bls	18fd4 <argp_parse@@Base+0x20b0>
   18c20:	add	r6, r4, r7
   18c24:	sub	r2, r8, r4
   18c28:	mov	r1, r4
   18c2c:	mov	r0, r6
   18c30:	bl	1111c <memmove@plt>
   18c34:	ldr	r3, [r5, #28]
   18c38:	mov	r0, r4
   18c3c:	mov	r2, r7
   18c40:	mov	r1, #32
   18c44:	mov	r4, r6
   18c48:	add	r3, r3, r7
   18c4c:	str	r3, [r5, #28]
   18c50:	bl	112e4 <memset@plt>
   18c54:	ldr	r8, [r5, #28]
   18c58:	mov	r6, r7
   18c5c:	str	r7, [r5, #20]
   18c60:	sub	r9, r8, r4
   18c64:	mov	r1, #10
   18c68:	mov	r2, r9
   18c6c:	mov	r0, r4
   18c70:	bl	112fc <memchr@plt>
   18c74:	cmp	r6, #0
   18c78:	mov	fp, r0
   18c7c:	bge	18c88 <argp_parse@@Base+0x1d64>
   18c80:	mov	r6, #0
   18c84:	str	r6, [r5, #20]
   18c88:	cmp	fp, #0
   18c8c:	ldr	r3, [r5, #8]
   18c90:	beq	18d30 <argp_parse@@Base+0x1e0c>
   18c94:	sub	r2, fp, r4
   18c98:	add	r2, r2, r6
   18c9c:	cmp	r2, r3
   18ca0:	blt	18f04 <argp_parse@@Base+0x1fe0>
   18ca4:	ldr	sl, [r5, #12]
   18ca8:	sub	r7, r3, #1
   18cac:	str	r3, [sp, #4]
   18cb0:	cmp	sl, #0
   18cb4:	bge	18d50 <argp_parse@@Base+0x1e2c>
   18cb8:	cmp	r8, fp
   18cbc:	bls	19088 <argp_parse@@Base+0x2164>
   18cc0:	sub	r0, r7, r6
   18cc4:	sub	r2, r8, fp
   18cc8:	add	r0, r4, r0
   18ccc:	mov	r1, fp
   18cd0:	bl	1111c <memmove@plt>
   18cd4:	ldr	r2, [r5, #20]
   18cd8:	mov	r3, #0
   18cdc:	str	r3, [r5, #20]
   18ce0:	ldr	r3, [sp, #4]
   18ce4:	ldr	r8, [r5, #28]
   18ce8:	sub	r7, r7, r2
   18cec:	add	r7, r4, r7
   18cf0:	sub	fp, r7, fp
   18cf4:	add	r4, r4, r3
   18cf8:	sub	r8, r8, fp
   18cfc:	cmp	r4, r8
   18d00:	str	r8, [r5, #28]
   18d04:	bcc	18bf8 <argp_parse@@Base+0x1cd4>
   18d08:	ldr	r3, [r5, #24]
   18d0c:	sub	r8, r8, r3
   18d10:	str	r8, [r5, #16]
   18d14:	add	sp, sp, #12
   18d18:	ldrd	r4, [sp]
   18d1c:	ldrd	r6, [sp, #8]
   18d20:	ldrd	r8, [sp, #16]
   18d24:	ldrd	sl, [sp, #24]
   18d28:	add	sp, sp, #32
   18d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   18d30:	add	r1, r6, r9
   18d34:	cmp	r1, r3
   18d38:	bcc	190f4 <argp_parse@@Base+0x21d0>
   18d3c:	ldr	sl, [r5, #12]
   18d40:	sub	r7, r3, #1
   18d44:	cmp	sl, #0
   18d48:	blt	1908c <argp_parse@@Base+0x2168>
   18d4c:	mov	fp, r8
   18d50:	add	r7, r7, #1
   18d54:	sub	r6, r7, r6
   18d58:	adds	r6, r4, r6
   18d5c:	bcs	18f48 <argp_parse@@Base+0x2024>
   18d60:	bl	11260 <__ctype_b_loc@plt>
   18d64:	mov	r3, r6
   18d68:	ldr	ip, [r0]
   18d6c:	b	18d7c <argp_parse@@Base+0x1e58>
   18d70:	cmp	r4, r0
   18d74:	mov	r3, r0
   18d78:	bhi	18f4c <argp_parse@@Base+0x2028>
   18d7c:	ldrb	r1, [r3]
   18d80:	mov	r7, r3
   18d84:	sub	r0, r3, #1
   18d88:	lsl	r1, r1, #1
   18d8c:	ldrh	r1, [ip, r1]
   18d90:	tst	r1, #1
   18d94:	beq	18d70 <argp_parse@@Base+0x1e4c>
   18d98:	add	r0, r3, #1
   18d9c:	cmp	r4, r0
   18da0:	bcs	18f5c <argp_parse@@Base+0x2038>
   18da4:	cmp	r4, r3
   18da8:	movhi	r6, r0
   18dac:	movhi	r7, r6
   18db0:	bls	18dcc <argp_parse@@Base+0x1ea8>
   18db4:	b	18de0 <argp_parse@@Base+0x1ebc>
   18db8:	ldrb	r1, [r6, #-1]
   18dbc:	lsl	r1, r1, #1
   18dc0:	ldrh	r1, [ip, r1]
   18dc4:	tst	r1, #1
   18dc8:	beq	18ddc <argp_parse@@Base+0x1eb8>
   18dcc:	cmp	r4, r3
   18dd0:	mov	r6, r3
   18dd4:	sub	r3, r3, #1
   18dd8:	bne	18db8 <argp_parse@@Base+0x1e94>
   18ddc:	mov	r7, r0
   18de0:	add	r3, r9, #1
   18de4:	add	r3, r4, r3
   18de8:	cmp	r7, r3
   18dec:	beq	18f18 <argp_parse@@Base+0x1ff4>
   18df0:	add	r1, r6, #1
   18df4:	sub	r3, r7, r1
   18df8:	cmp	r3, sl
   18dfc:	bge	18f30 <argp_parse@@Base+0x200c>
   18e00:	cmp	r7, r8
   18e04:	bcs	18f28 <argp_parse@@Base+0x2004>
   18e08:	ldr	r3, [r5, #32]
   18e0c:	add	sl, sl, #1
   18e10:	sub	r3, r3, r8
   18e14:	cmp	r3, sl
   18e18:	bgt	190a0 <argp_parse@@Base+0x217c>
   18e1c:	ldr	r3, [r5]
   18e20:	ldr	r0, [r5, #24]
   18e24:	cmp	r0, r6
   18e28:	bcs	18e3c <argp_parse@@Base+0x1f18>
   18e2c:	sub	r2, r6, r0
   18e30:	mov	r1, #1
   18e34:	bl	11170 <fwrite_unlocked@plt>
   18e38:	ldr	r3, [r5]
   18e3c:	ldr	r2, [r3, #20]
   18e40:	ldr	r1, [r3, #24]
   18e44:	cmp	r2, r1
   18e48:	addcc	r1, r2, #1
   18e4c:	strcc	r1, [r3, #20]
   18e50:	movcc	r3, #10
   18e54:	strbcc	r3, [r2]
   18e58:	bcs	190e4 <argp_parse@@Base+0x21c0>
   18e5c:	ldr	fp, [r5, #24]
   18e60:	sub	r4, r4, fp
   18e64:	sub	r3, r7, fp
   18e68:	add	r9, r9, r4
   18e6c:	mov	r8, r3
   18e70:	mov	r4, fp
   18e74:	ldr	r2, [r5, #12]
   18e78:	cmp	r2, r3
   18e7c:	ble	18ea0 <argp_parse@@Base+0x1f7c>
   18e80:	add	r3, r9, #1
   18e84:	add	r3, fp, r3
   18e88:	cmp	r7, r3
   18e8c:	bne	18f90 <argp_parse@@Base+0x206c>
   18e90:	ldr	r3, [r5, #32]
   18e94:	sub	r3, r3, r7
   18e98:	cmp	r2, r3
   18e9c:	bgt	18f90 <argp_parse@@Base+0x206c>
   18ea0:	cmp	r2, #0
   18ea4:	ble	18ec4 <argp_parse@@Base+0x1fa0>
   18ea8:	mov	r3, #0
   18eac:	mov	r1, #32
   18eb0:	strb	r1, [r4], #1
   18eb4:	add	r3, r3, #1
   18eb8:	ldr	r2, [r5, #12]
   18ebc:	cmp	r2, r3
   18ec0:	bgt	18eb0 <argp_parse@@Base+0x1f8c>
   18ec4:	cmp	r4, r7
   18ec8:	bcc	19020 <argp_parse@@Base+0x20fc>
   18ecc:	sub	r8, r9, r8
   18ed0:	cmp	r2, #0
   18ed4:	add	r8, r4, r8
   18ed8:	mvneq	r2, #0
   18edc:	str	r2, [r5, #20]
   18ee0:	str	r8, [r5, #28]
   18ee4:	b	18bf0 <argp_parse@@Base+0x1ccc>
   18ee8:	sub	r9, r8, r4
   18eec:	mov	r1, #10
   18ef0:	mov	r2, r9
   18ef4:	mov	r0, r4
   18ef8:	bl	112fc <memchr@plt>
   18efc:	mov	fp, r0
   18f00:	b	18c88 <argp_parse@@Base+0x1d64>
   18f04:	mov	r3, #0
   18f08:	add	r4, fp, #1
   18f0c:	ldr	r8, [r5, #28]
   18f10:	str	r3, [r5, #20]
   18f14:	b	18bf0 <argp_parse@@Base+0x1ccc>
   18f18:	ldr	r3, [r5, #32]
   18f1c:	sub	r3, r3, r6
   18f20:	cmp	r3, sl
   18f24:	ble	18e00 <argp_parse@@Base+0x1edc>
   18f28:	add	r1, r6, #1
   18f2c:	sub	r3, r7, r1
   18f30:	mov	r2, #10
   18f34:	sub	r8, r7, r4
   18f38:	mov	fp, r4
   18f3c:	mov	r4, r1
   18f40:	strb	r2, [r6]
   18f44:	b	18e74 <argp_parse@@Base+0x1f50>
   18f48:	add	r7, r6, #1
   18f4c:	cmp	r4, r7
   18f50:	bcs	18f5c <argp_parse@@Base+0x2038>
   18f54:	mov	r6, r7
   18f58:	b	18de0 <argp_parse@@Base+0x1ebc>
   18f5c:	cmp	r6, fp
   18f60:	bcc	19050 <argp_parse@@Base+0x212c>
   18f64:	cmp	r6, fp
   18f68:	beq	1903c <argp_parse@@Base+0x2118>
   18f6c:	bl	11260 <__ctype_b_loc@plt>
   18f70:	ldr	r1, [r0]
   18f74:	mov	r7, r6
   18f78:	ldrb	r3, [r7, #1]!
   18f7c:	lsl	r3, r3, #1
   18f80:	ldrh	r3, [r1, r3]
   18f84:	tst	r3, #1
   18f88:	bne	18f78 <argp_parse@@Base+0x2054>
   18f8c:	b	18de0 <argp_parse@@Base+0x1ebc>
   18f90:	cmp	r2, #0
   18f94:	movgt	r6, #0
   18f98:	movgt	sl, #32
   18f9c:	ble	18ec4 <argp_parse@@Base+0x1fa0>
   18fa0:	ldr	r0, [r5]
   18fa4:	ldr	r2, [r0, #20]
   18fa8:	ldr	r1, [r0, #24]
   18fac:	add	ip, r2, #1
   18fb0:	cmp	r2, r1
   18fb4:	strcc	ip, [r0, #20]
   18fb8:	strbcc	sl, [r2]
   18fbc:	bcs	19014 <argp_parse@@Base+0x20f0>
   18fc0:	ldr	r2, [r5, #12]
   18fc4:	add	r6, r6, #1
   18fc8:	cmp	r2, r6
   18fcc:	bgt	18fa0 <argp_parse@@Base+0x207c>
   18fd0:	b	18ec4 <argp_parse@@Base+0x1fa0>
   18fd4:	mov	r8, #32
   18fd8:	b	18fe8 <argp_parse@@Base+0x20c4>
   18fdc:	add	r6, r6, #1
   18fe0:	cmp	r7, r6
   18fe4:	beq	18c54 <argp_parse@@Base+0x1d30>
   18fe8:	ldr	r0, [r5]
   18fec:	ldr	r3, [r0, #20]
   18ff0:	ldr	r2, [r0, #24]
   18ff4:	add	r1, r3, #1
   18ff8:	cmp	r3, r2
   18ffc:	strcc	r1, [r0, #20]
   19000:	strbcc	r8, [r3]
   19004:	bcc	18fdc <argp_parse@@Base+0x20b8>
   19008:	mov	r1, #32
   1900c:	bl	11314 <__overflow@plt>
   19010:	b	18fdc <argp_parse@@Base+0x20b8>
   19014:	mov	r1, #32
   19018:	bl	11314 <__overflow@plt>
   1901c:	b	18fc0 <argp_parse@@Base+0x209c>
   19020:	add	r2, fp, r9
   19024:	mov	r1, r7
   19028:	sub	r2, r2, r7
   1902c:	mov	r0, r4
   19030:	bl	1111c <memmove@plt>
   19034:	ldr	r2, [r5, #12]
   19038:	b	18ecc <argp_parse@@Base+0x1fa8>
   1903c:	mov	r3, #0
   19040:	add	r4, r6, #1
   19044:	ldr	r8, [r5, #28]
   19048:	str	r3, [r5, #20]
   1904c:	b	18bf0 <argp_parse@@Base+0x1ccc>
   19050:	add	r7, r6, #1
   19054:	b	19078 <argp_parse@@Base+0x2154>
   19058:	bl	11260 <__ctype_b_loc@plt>
   1905c:	ldrb	r3, [r7]
   19060:	add	r7, r7, #1
   19064:	ldr	r1, [r0]
   19068:	lsl	r3, r3, #1
   1906c:	ldrh	r3, [r1, r3]
   19070:	tst	r3, #1
   19074:	bne	18f74 <argp_parse@@Base+0x2050>
   19078:	cmp	fp, r7
   1907c:	mov	r6, r7
   19080:	bne	19058 <argp_parse@@Base+0x2134>
   19084:	b	18f64 <argp_parse@@Base+0x2040>
   19088:	add	r1, r9, r6
   1908c:	sub	r7, r7, r1
   19090:	str	r1, [r5, #20]
   19094:	add	r8, r8, r7
   19098:	str	r8, [r5, #28]
   1909c:	b	18d08 <argp_parse@@Base+0x1de4>
   190a0:	sub	r8, r8, r7
   190a4:	mov	r1, r7
   190a8:	mov	r2, r8
   190ac:	add	r0, r6, sl
   190b0:	bl	1111c <memmove@plt>
   190b4:	ldr	r3, [r5, #12]
   190b8:	mov	r2, r6
   190bc:	mov	r1, #10
   190c0:	mov	fp, r4
   190c4:	strb	r1, [r2], #1
   190c8:	add	r7, r3, #1
   190cc:	add	r7, r6, r7
   190d0:	add	r9, r7, r8
   190d4:	sub	r8, r7, r4
   190d8:	sub	r9, r9, r4
   190dc:	mov	r4, r2
   190e0:	b	18e74 <argp_parse@@Base+0x1f50>
   190e4:	mov	r0, r3
   190e8:	mov	r1, #10
   190ec:	bl	11314 <__overflow@plt>
   190f0:	b	18e5c <argp_parse@@Base+0x1f38>
   190f4:	str	r1, [r5, #20]
   190f8:	ldr	r8, [r5, #28]
   190fc:	b	18d08 <argp_parse@@Base+0x1de4>
   19100:	str	r4, [sp, #-8]!
   19104:	mov	r4, r0
   19108:	str	lr, [sp, #4]
   1910c:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   19110:	ldr	r0, [r4, #24]
   19114:	ldr	r2, [r4, #28]
   19118:	cmp	r2, r0
   1911c:	bls	19134 <argp_parse@@Base+0x2210>
   19120:	sub	r2, r2, r0
   19124:	mov	r1, #1
   19128:	ldr	r3, [r4]
   1912c:	bl	11170 <fwrite_unlocked@plt>
   19130:	ldr	r0, [r4, #24]
   19134:	bl	17f08 <argp_parse@@Base+0xfe4>
   19138:	mov	r0, r4
   1913c:	ldr	r4, [sp]
   19140:	ldr	lr, [sp, #4]
   19144:	add	sp, sp, #8
   19148:	b	17f08 <argp_parse@@Base+0xfe4>
   1914c:	strd	r4, [sp, #-16]!
   19150:	mov	r4, r0
   19154:	mov	r5, r1
   19158:	str	r6, [sp, #8]
   1915c:	str	lr, [sp, #12]
   19160:	bl	18bc4 <argp_parse@@Base+0x1ca0>
   19164:	mov	r1, #1
   19168:	ldr	r3, [r4]
   1916c:	ldr	r2, [r4, #24]
   19170:	ldr	ip, [r4, #28]
   19174:	mov	r0, r2
   19178:	sub	r2, ip, r2
   1917c:	bl	11170 <fwrite_unlocked@plt>
   19180:	mov	ip, r0
   19184:	ldr	r0, [r4, #24]
   19188:	ldr	r3, [r4, #28]
   1918c:	sub	r2, r3, r0
   19190:	cmp	ip, r2
   19194:	bne	191f4 <argp_parse@@Base+0x22d0>
   19198:	ldr	r1, [r4, #32]
   1919c:	mov	r3, #0
   191a0:	str	r3, [r4, #16]
   191a4:	str	r0, [r4, #28]
   191a8:	sub	r1, r1, r0
   191ac:	cmp	r1, r5
   191b0:	movcs	r3, #1
   191b4:	bcs	191e0 <argp_parse@@Base+0x22bc>
   191b8:	adds	r5, r1, r5
   191bc:	bcs	1921c <argp_parse@@Base+0x22f8>
   191c0:	mov	r1, r5
   191c4:	bl	18ad4 <argp_parse@@Base+0x1bb0>
   191c8:	cmp	r0, #0
   191cc:	beq	1921c <argp_parse@@Base+0x22f8>
   191d0:	add	r1, r0, r5
   191d4:	mov	r3, #1
   191d8:	str	r0, [r4, #24]
   191dc:	strd	r0, [r4, #28]
   191e0:	ldrd	r4, [sp]
   191e4:	mov	r0, r3
   191e8:	ldr	r6, [sp, #8]
   191ec:	add	sp, sp, #12
   191f0:	pop	{pc}		; (ldr pc, [sp], #4)
   191f4:	ldr	lr, [r4, #16]
   191f8:	sub	r3, r3, ip
   191fc:	add	r1, r0, ip
   19200:	sub	r2, r3, r0
   19204:	str	r3, [r4, #28]
   19208:	sub	ip, lr, ip
   1920c:	str	ip, [r4, #16]
   19210:	bl	1111c <memmove@plt>
   19214:	mov	r3, #0
   19218:	b	191e0 <argp_parse@@Base+0x22bc>
   1921c:	bl	112b4 <__errno_location@plt>
   19220:	mov	r2, #12
   19224:	mov	r3, #0
   19228:	str	r2, [r0]
   1922c:	b	191e0 <argp_parse@@Base+0x22bc>
   19230:	ldr	ip, [r0, #28]
   19234:	ldr	r3, [r0, #32]
   19238:	sub	r3, r3, ip
   1923c:	cmp	r3, r1
   19240:	bcc	1924c <argp_parse@@Base+0x2328>
   19244:	mov	r0, #1
   19248:	bx	lr
   1924c:	b	1914c <argp_parse@@Base+0x2228>
   19250:	push	{r1, r2, r3}
   19254:	mov	r1, #150	; 0x96
   19258:	strd	r4, [sp, #-20]!	; 0xffffffec
   1925c:	mov	r5, r0
   19260:	strd	r6, [sp, #8]
   19264:	str	lr, [sp, #16]
   19268:	sub	sp, sp, #8
   1926c:	ldr	r7, [sp, #28]
   19270:	add	r6, sp, #32
   19274:	ldr	r0, [r5, #28]
   19278:	ldr	r3, [r5, #32]
   1927c:	sub	r2, r3, r0
   19280:	cmp	r1, r2
   19284:	bhi	192d4 <argp_parse@@Base+0x23b0>
   19288:	sub	r4, r3, r0
   1928c:	mov	r2, r7
   19290:	str	r6, [sp, #4]
   19294:	mov	r1, r4
   19298:	mov	r3, r6
   1929c:	bl	1138c <vsnprintf@plt>
   192a0:	cmp	r0, r4
   192a4:	add	r1, r0, #1
   192a8:	bcs	19274 <argp_parse@@Base+0x2350>
   192ac:	ldr	r3, [r5, #28]
   192b0:	add	r3, r3, r0
   192b4:	str	r3, [r5, #28]
   192b8:	add	sp, sp, #8
   192bc:	ldrd	r4, [sp]
   192c0:	ldrd	r6, [sp, #8]
   192c4:	ldr	lr, [sp, #16]
   192c8:	add	sp, sp, #20
   192cc:	add	sp, sp, #12
   192d0:	bx	lr
   192d4:	mov	r0, r5
   192d8:	bl	1914c <argp_parse@@Base+0x2228>
   192dc:	cmp	r0, #0
   192e0:	beq	192f0 <argp_parse@@Base+0x23cc>
   192e4:	ldr	r0, [r5, #28]
   192e8:	ldr	r3, [r5, #32]
   192ec:	b	19288 <argp_parse@@Base+0x2364>
   192f0:	mvn	r0, #0
   192f4:	b	192b8 <argp_parse@@Base+0x2394>
   192f8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   192fc:	ldr	r4, [r1, #32]
   19300:	strd	r6, [sp, #8]
   19304:	strd	r8, [sp, #16]
   19308:	ldr	r7, [r1]
   1930c:	str	sl, [sp, #24]
   19310:	ldr	r8, [r1, #28]
   19314:	add	r6, r0, r4, lsl #2
   19318:	str	lr, [sp, #28]
   1931c:	mov	r5, r7
   19320:	mov	r3, r8
   19324:	cmp	r5, r4
   19328:	movle	r2, #0
   1932c:	movgt	r2, #1
   19330:	cmp	r3, r4
   19334:	movge	r2, #0
   19338:	cmp	r2, #0
   1933c:	beq	193b0 <argp_parse@@Base+0x248c>
   19340:	sub	r2, r5, r4
   19344:	sub	lr, r4, r3
   19348:	cmp	r2, lr
   1934c:	ble	19380 <argp_parse@@Base+0x245c>
   19350:	sub	r5, r5, lr
   19354:	add	lr, lr, r3
   19358:	add	r2, r0, r3, lsl #2
   1935c:	add	lr, r0, lr, lsl #2
   19360:	add	ip, r0, r5, lsl #2
   19364:	ldr	sl, [ip]
   19368:	ldr	r9, [r2]
   1936c:	str	sl, [r2], #4
   19370:	cmp	lr, r2
   19374:	str	r9, [ip], #4
   19378:	bne	19364 <argp_parse@@Base+0x2440>
   1937c:	b	19324 <argp_parse@@Base+0x2400>
   19380:	add	sl, r2, r3
   19384:	add	r3, r0, r3, lsl #2
   19388:	mov	r2, r6
   1938c:	add	r9, r0, sl, lsl #2
   19390:	ldr	lr, [r2]
   19394:	ldr	ip, [r3]
   19398:	str	lr, [r3], #4
   1939c:	cmp	r3, r9
   193a0:	str	ip, [r2], #4
   193a4:	bne	19390 <argp_parse@@Base+0x246c>
   193a8:	mov	r3, sl
   193ac:	b	19324 <argp_parse@@Base+0x2400>
   193b0:	sub	r4, r7, r4
   193b4:	str	r7, [r1, #32]
   193b8:	add	r8, r4, r8
   193bc:	ldrd	r4, [sp]
   193c0:	str	r8, [r1, #28]
   193c4:	ldrd	r6, [sp, #8]
   193c8:	ldrd	r8, [sp, #16]
   193cc:	ldr	sl, [sp, #24]
   193d0:	add	sp, sp, #28
   193d4:	pop	{pc}		; (ldr pc, [sp], #4)
   193d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   193dc:	strd	r6, [sp, #8]
   193e0:	strd	r8, [sp, #16]
   193e4:	strd	sl, [sp, #24]
   193e8:	str	lr, [sp, #32]
   193ec:	sub	sp, sp, #52	; 0x34
   193f0:	str	r3, [sp, #12]
   193f4:	ldr	r3, [sp, #96]	; 0x60
   193f8:	str	r1, [sp, #28]
   193fc:	str	r2, [sp, #32]
   19400:	str	r0, [sp, #36]	; 0x24
   19404:	ldr	r8, [r3, #20]
   19408:	ldrb	r5, [r8]
   1940c:	mov	r9, r8
   19410:	cmp	r5, #61	; 0x3d
   19414:	cmpne	r5, #0
   19418:	movne	r5, #1
   1941c:	moveq	r5, #0
   19420:	beq	19438 <argp_parse@@Base+0x2514>
   19424:	ldrb	r3, [r9, #1]!
   19428:	cmp	r3, #0
   1942c:	cmpne	r3, #61	; 0x3d
   19430:	bne	19424 <argp_parse@@Base+0x2500>
   19434:	sub	r5, r9, r8
   19438:	ldr	r3, [sp, #12]
   1943c:	ldr	r3, [r3]
   19440:	cmp	r3, #0
   19444:	str	r3, [sp, #16]
   19448:	beq	19610 <argp_parse@@Base+0x26ec>
   1944c:	ldr	fp, [sp, #12]
   19450:	mov	r6, #0
   19454:	ldr	r4, [sp, #16]
   19458:	str	fp, [sp, #24]
   1945c:	b	19464 <argp_parse@@Base+0x2540>
   19460:	mov	r6, r7
   19464:	mov	r2, r5
   19468:	mov	r1, r8
   1946c:	mov	r0, r4
   19470:	add	r7, r6, #1
   19474:	bl	113e0 <strncmp@plt>
   19478:	cmp	r0, #0
   1947c:	mov	sl, fp
   19480:	mov	r0, r4
   19484:	bne	19494 <argp_parse@@Base+0x2570>
   19488:	bl	11290 <strlen@plt>
   1948c:	cmp	r0, r5
   19490:	beq	19548 <argp_parse@@Base+0x2624>
   19494:	ldr	r4, [fp, #16]!
   19498:	cmp	r4, #0
   1949c:	bne	19460 <argp_parse@@Base+0x253c>
   194a0:	ldr	r0, [sp, #16]
   194a4:	mvn	r3, #0
   194a8:	mov	r1, r8
   194ac:	str	r7, [sp, #16]
   194b0:	mov	sl, r4
   194b4:	mov	r8, r4
   194b8:	ldr	fp, [sp, #24]
   194bc:	str	r4, [sp, #20]
   194c0:	ldr	r7, [sp, #96]	; 0x60
   194c4:	str	r3, [sp, #40]	; 0x28
   194c8:	str	r4, [sp, #44]	; 0x2c
   194cc:	mov	r2, r5
   194d0:	bl	113e0 <strncmp@plt>
   194d4:	cmp	r0, #0
   194d8:	bne	19518 <argp_parse@@Base+0x25f4>
   194dc:	cmp	sl, #0
   194e0:	beq	19604 <argp_parse@@Base+0x26e0>
   194e4:	ldr	r3, [sp, #92]	; 0x5c
   194e8:	cmp	r3, #0
   194ec:	beq	195b8 <argp_parse@@Base+0x2694>
   194f0:	ldr	r3, [sp, #20]
   194f4:	cmp	r3, #0
   194f8:	bne	19518 <argp_parse@@Base+0x25f4>
   194fc:	ldr	r3, [sp, #100]	; 0x64
   19500:	cmp	r3, #0
   19504:	beq	19688 <argp_parse@@Base+0x2764>
   19508:	cmp	r4, #0
   1950c:	beq	197b0 <argp_parse@@Base+0x288c>
   19510:	mov	r3, #1
   19514:	strb	r3, [r4, r8]
   19518:	ldr	r0, [fp, #16]!
   1951c:	add	r8, r8, #1
   19520:	cmp	r0, #0
   19524:	beq	19530 <argp_parse@@Base+0x260c>
   19528:	ldr	r1, [r7, #20]
   1952c:	b	194cc <argp_parse@@Base+0x25a8>
   19530:	ldr	r3, [sp, #20]
   19534:	orrs	r3, r4, r3
   19538:	bne	196d8 <argp_parse@@Base+0x27b4>
   1953c:	cmp	sl, #0
   19540:	ldrne	r6, [sp, #40]	; 0x28
   19544:	beq	19610 <argp_parse@@Base+0x26ec>
   19548:	ldr	r3, [sp, #96]	; 0x60
   1954c:	mov	r2, #0
   19550:	ldr	r1, [sp, #96]	; 0x60
   19554:	ldr	r0, [sl, #4]
   19558:	ldr	r3, [r3]
   1955c:	str	r2, [r1, #20]
   19560:	add	r2, r3, #1
   19564:	str	r2, [r1]
   19568:	ldrb	r1, [r9]
   1956c:	cmp	r1, #0
   19570:	bne	195ec <argp_parse@@Base+0x26c8>
   19574:	cmp	r0, #1
   19578:	beq	19768 <argp_parse@@Base+0x2844>
   1957c:	ldr	r3, [sp, #88]	; 0x58
   19580:	cmp	r3, #0
   19584:	strne	r6, [r3]
   19588:	ldr	r3, [sl, #8]
   1958c:	ldr	r0, [sl, #12]
   19590:	cmp	r3, #0
   19594:	strne	r0, [r3]
   19598:	movne	r0, #0
   1959c:	add	sp, sp, #52	; 0x34
   195a0:	ldrd	r4, [sp]
   195a4:	ldrd	r6, [sp, #8]
   195a8:	ldrd	r8, [sp, #16]
   195ac:	ldrd	sl, [sp, #24]
   195b0:	add	sp, sp, #32
   195b4:	pop	{pc}		; (ldr pc, [sp], #4)
   195b8:	ldr	r1, [sl, #4]
   195bc:	ldr	r2, [fp, #4]
   195c0:	cmp	r1, r2
   195c4:	bne	194f0 <argp_parse@@Base+0x25cc>
   195c8:	ldr	r1, [sl, #8]
   195cc:	ldr	r2, [fp, #8]
   195d0:	cmp	r1, r2
   195d4:	bne	194f0 <argp_parse@@Base+0x25cc>
   195d8:	ldr	r1, [sl, #12]
   195dc:	ldr	r2, [fp, #12]
   195e0:	cmp	r1, r2
   195e4:	bne	194f0 <argp_parse@@Base+0x25cc>
   195e8:	b	19518 <argp_parse@@Base+0x25f4>
   195ec:	cmp	r0, #0
   195f0:	beq	19790 <argp_parse@@Base+0x286c>
   195f4:	ldr	r3, [sp, #96]	; 0x60
   195f8:	add	r9, r9, #1
   195fc:	str	r9, [r3, #12]
   19600:	b	1957c <argp_parse@@Base+0x2658>
   19604:	mov	sl, fp
   19608:	str	r8, [sp, #40]	; 0x28
   1960c:	b	19518 <argp_parse@@Base+0x25f4>
   19610:	ldr	r3, [sp, #92]	; 0x5c
   19614:	cmp	r3, #0
   19618:	beq	19654 <argp_parse@@Base+0x2730>
   1961c:	ldr	r2, [sp, #28]
   19620:	ldr	r3, [sp, #96]	; 0x60
   19624:	ldr	r3, [r3]
   19628:	ldr	r3, [r2, r3, lsl #2]
   1962c:	ldrb	r3, [r3, #1]
   19630:	cmp	r3, #45	; 0x2d
   19634:	beq	19654 <argp_parse@@Base+0x2730>
   19638:	ldr	r0, [sp, #32]
   1963c:	ldr	r3, [sp, #96]	; 0x60
   19640:	ldr	r3, [r3, #20]
   19644:	ldrb	r1, [r3]
   19648:	bl	1129c <strchr@plt>
   1964c:	cmp	r0, #0
   19650:	bne	19820 <argp_parse@@Base+0x28fc>
   19654:	ldr	r3, [sp, #100]	; 0x64
   19658:	cmp	r3, #0
   1965c:	bne	196a4 <argp_parse@@Base+0x2780>
   19660:	ldr	r3, [sp, #96]	; 0x60
   19664:	mov	r2, #0
   19668:	mov	r0, #63	; 0x3f
   1966c:	ldr	r1, [sp, #96]	; 0x60
   19670:	ldr	r3, [r3]
   19674:	str	r2, [r1, #8]
   19678:	str	r2, [r1, #20]
   1967c:	add	r3, r3, #1
   19680:	str	r3, [r1]
   19684:	b	1959c <argp_parse@@Base+0x2678>
   19688:	mov	r3, #1
   1968c:	cmp	r4, #0
   19690:	str	r3, [sp, #20]
   19694:	beq	19518 <argp_parse@@Base+0x25f4>
   19698:	mov	r3, #1
   1969c:	strb	r3, [r4, r8]
   196a0:	b	19518 <argp_parse@@Base+0x25f4>
   196a4:	ldr	r3, [sp, #96]	; 0x60
   196a8:	movw	r0, #50136	; 0xc3d8
   196ac:	movt	r0, #2
   196b0:	movw	r1, #45844	; 0xb314
   196b4:	movt	r1, #1
   196b8:	ldr	r0, [r0]
   196bc:	ldr	ip, [r3, #20]
   196c0:	ldr	r3, [sp, #28]
   196c4:	ldr	r2, [r3]
   196c8:	str	ip, [sp]
   196cc:	ldr	r3, [sp, #104]	; 0x68
   196d0:	bl	112a8 <fprintf@plt>
   196d4:	b	19660 <argp_parse@@Base+0x273c>
   196d8:	ldr	r3, [sp, #100]	; 0x64
   196dc:	cmp	r3, #0
   196e0:	beq	19720 <argp_parse@@Base+0x27fc>
   196e4:	ldr	r3, [sp, #20]
   196e8:	movw	r5, #50136	; 0xc3d8
   196ec:	movt	r5, #2
   196f0:	ldr	r0, [r5]
   196f4:	cmp	r3, #0
   196f8:	beq	19858 <argp_parse@@Base+0x2934>
   196fc:	ldr	r2, [sp, #28]
   19700:	movw	r1, #45756	; 0xb2bc
   19704:	movt	r1, #1
   19708:	ldr	r3, [sp, #96]	; 0x60
   1970c:	ldr	r2, [r2]
   19710:	ldr	ip, [r3, #20]
   19714:	ldr	r3, [sp, #104]	; 0x68
   19718:	str	ip, [sp]
   1971c:	bl	112a8 <fprintf@plt>
   19720:	ldr	r3, [sp, #44]	; 0x2c
   19724:	cmp	r3, #0
   19728:	bne	19814 <argp_parse@@Base+0x28f0>
   1972c:	ldr	r3, [sp, #96]	; 0x60
   19730:	ldr	r4, [r3, #20]
   19734:	mov	r0, r4
   19738:	bl	11290 <strlen@plt>
   1973c:	ldr	r3, [sp, #96]	; 0x60
   19740:	add	r4, r4, r0
   19744:	mov	r2, #0
   19748:	mov	r0, #63	; 0x3f
   1974c:	ldr	r1, [sp, #96]	; 0x60
   19750:	ldr	r3, [r3]
   19754:	str	r2, [r1, #8]
   19758:	str	r4, [r1, #20]
   1975c:	add	r3, r3, #1
   19760:	str	r3, [r1]
   19764:	b	1959c <argp_parse@@Base+0x2678>
   19768:	ldr	r1, [sp, #36]	; 0x24
   1976c:	cmp	r2, r1
   19770:	bge	19828 <argp_parse@@Base+0x2904>
   19774:	ldr	r1, [sp, #28]
   19778:	add	r3, r3, #2
   1977c:	ldr	r2, [r1, r2, lsl #2]
   19780:	ldr	r1, [sp, #96]	; 0x60
   19784:	str	r3, [r1]
   19788:	str	r2, [r1, #12]
   1978c:	b	1957c <argp_parse@@Base+0x2658>
   19790:	ldr	r3, [sp, #100]	; 0x64
   19794:	cmp	r3, #0
   19798:	bne	197e4 <argp_parse@@Base+0x28c0>
   1979c:	ldr	r3, [sl, #12]
   197a0:	mov	r0, #63	; 0x3f
   197a4:	ldr	r2, [sp, #96]	; 0x60
   197a8:	str	r3, [r2, #8]
   197ac:	b	1959c <argp_parse@@Base+0x2678>
   197b0:	ldr	r0, [sp, #16]
   197b4:	bl	18a98 <argp_parse@@Base+0x1b74>
   197b8:	subs	r4, r0, #0
   197bc:	beq	1991c <argp_parse@@Base+0x29f8>
   197c0:	ldr	r2, [sp, #16]
   197c4:	ldr	r1, [sp, #20]
   197c8:	bl	112e4 <memset@plt>
   197cc:	mov	r3, #1
   197d0:	mov	r2, #1
   197d4:	str	r3, [sp, #44]	; 0x2c
   197d8:	ldr	r3, [sp, #40]	; 0x28
   197dc:	strb	r2, [r4, r3]
   197e0:	b	19510 <argp_parse@@Base+0x25ec>
   197e4:	ldr	ip, [sl]
   197e8:	movw	r0, #50136	; 0xc3d8
   197ec:	movt	r0, #2
   197f0:	movw	r1, #45876	; 0xb334
   197f4:	movt	r1, #1
   197f8:	ldr	r3, [sp, #28]
   197fc:	ldr	r0, [r0]
   19800:	ldr	r2, [r3]
   19804:	str	ip, [sp]
   19808:	ldr	r3, [sp, #104]	; 0x68
   1980c:	bl	112a8 <fprintf@plt>
   19810:	b	1979c <argp_parse@@Base+0x2878>
   19814:	mov	r0, r4
   19818:	bl	17f08 <argp_parse@@Base+0xfe4>
   1981c:	b	1972c <argp_parse@@Base+0x2808>
   19820:	mvn	r0, #0
   19824:	b	1959c <argp_parse@@Base+0x2678>
   19828:	ldr	r3, [sp, #100]	; 0x64
   1982c:	cmp	r3, #0
   19830:	bne	198ec <argp_parse@@Base+0x29c8>
   19834:	ldr	r3, [sl, #12]
   19838:	ldr	r2, [sp, #96]	; 0x60
   1983c:	str	r3, [r2, #8]
   19840:	ldr	r3, [sp, #32]
   19844:	ldrb	r3, [r3]
   19848:	cmp	r3, #58	; 0x3a
   1984c:	moveq	r0, #58	; 0x3a
   19850:	movne	r0, #63	; 0x3f
   19854:	b	1959c <argp_parse@@Base+0x2678>
   19858:	bl	11380 <flockfile@plt>
   1985c:	ldr	r2, [sp, #28]
   19860:	movw	r1, #45788	; 0xb2dc
   19864:	movt	r1, #1
   19868:	movw	r7, #45836	; 0xb30c
   1986c:	movt	r7, #1
   19870:	ldr	r3, [sp, #96]	; 0x60
   19874:	add	r6, r4, r6
   19878:	sub	r8, r4, #1
   1987c:	ldr	r2, [r2]
   19880:	ldr	r0, [r3, #20]
   19884:	ldr	r3, [sp, #104]	; 0x68
   19888:	str	r0, [sp]
   1988c:	ldr	r0, [r5]
   19890:	bl	112a8 <fprintf@plt>
   19894:	ldr	r0, [r5]
   19898:	ldr	sl, [sp, #12]
   1989c:	ldr	r9, [sp, #20]
   198a0:	b	198b0 <argp_parse@@Base+0x298c>
   198a4:	cmp	r6, r8
   198a8:	add	r9, r9, #1
   198ac:	beq	198d4 <argp_parse@@Base+0x29b0>
   198b0:	ldrb	r3, [r8, #1]!
   198b4:	cmp	r3, #0
   198b8:	beq	198a4 <argp_parse@@Base+0x2980>
   198bc:	mov	r1, r7
   198c0:	ldr	r3, [sl, r9, lsl #4]
   198c4:	ldr	r2, [sp, #104]	; 0x68
   198c8:	bl	112a8 <fprintf@plt>
   198cc:	ldr	r0, [r5]
   198d0:	b	198a4 <argp_parse@@Base+0x2980>
   198d4:	mov	r1, r0
   198d8:	mov	r0, #10
   198dc:	bl	11350 <fputc@plt>
   198e0:	ldr	r0, [r5]
   198e4:	bl	111d0 <funlockfile@plt>
   198e8:	b	19720 <argp_parse@@Base+0x27fc>
   198ec:	ldr	ip, [sl]
   198f0:	movw	r0, #50136	; 0xc3d8
   198f4:	movt	r0, #2
   198f8:	movw	r1, #45924	; 0xb364
   198fc:	movt	r1, #1
   19900:	ldr	r3, [sp, #28]
   19904:	ldr	r0, [r0]
   19908:	ldr	r2, [r3]
   1990c:	str	ip, [sp]
   19910:	ldr	r3, [sp, #104]	; 0x68
   19914:	bl	112a8 <fprintf@plt>
   19918:	b	19834 <argp_parse@@Base+0x2910>
   1991c:	mov	r3, #1
   19920:	str	r3, [sp, #20]
   19924:	b	19518 <argp_parse@@Base+0x25f4>
   19928:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1992c:	subs	r5, r0, #0
   19930:	strd	r6, [sp, #8]
   19934:	strd	r8, [sp, #16]
   19938:	strd	sl, [sp, #24]
   1993c:	str	lr, [sp, #32]
   19940:	sub	sp, sp, #36	; 0x24
   19944:	ldr	r4, [sp, #80]	; 0x50
   19948:	ldr	r7, [r4, #4]
   1994c:	ble	19b3c <argp_parse@@Base+0x2c18>
   19950:	mov	r6, r2
   19954:	mov	sl, r3
   19958:	ldr	r2, [r4]
   1995c:	mov	r3, #0
   19960:	mov	r9, r1
   19964:	str	r3, [r4, #12]
   19968:	cmp	r2, r3
   1996c:	beq	19be4 <argp_parse@@Base+0x2cc0>
   19970:	ldr	r3, [r4, #16]
   19974:	cmp	r3, #0
   19978:	bne	19b08 <argp_parse@@Base+0x2be4>
   1997c:	mov	r3, #0
   19980:	str	r3, [r4, #20]
   19984:	str	r2, [r4, #28]
   19988:	str	r2, [r4, #32]
   1998c:	ldrb	r2, [r6]
   19990:	cmp	r2, #45	; 0x2d
   19994:	moveq	r2, #2
   19998:	addeq	r6, r6, #1
   1999c:	streq	r2, [r4, #24]
   199a0:	beq	199c8 <argp_parse@@Base+0x2aa4>
   199a4:	cmp	r2, #43	; 0x2b
   199a8:	addeq	r6, r6, #1
   199ac:	streq	r3, [r4, #24]
   199b0:	beq	199c8 <argp_parse@@Base+0x2aa4>
   199b4:	ldr	r2, [sp, #84]	; 0x54
   199b8:	cmp	r2, #0
   199bc:	beq	19d14 <argp_parse@@Base+0x2df0>
   199c0:	mov	r2, #0
   199c4:	str	r2, [r4, #24]
   199c8:	mov	r2, #1
   199cc:	str	r2, [r4, #16]
   199d0:	ldrb	r2, [r6]
   199d4:	cmp	r2, #58	; 0x3a
   199d8:	moveq	r7, #0
   199dc:	cmp	r3, #0
   199e0:	beq	19a74 <argp_parse@@Base+0x2b50>
   199e4:	ldrb	r2, [r3]
   199e8:	cmp	r2, #0
   199ec:	beq	19a74 <argp_parse@@Base+0x2b50>
   199f0:	add	fp, r3, #1
   199f4:	mov	r0, r6
   199f8:	str	r3, [sp, #28]
   199fc:	str	fp, [r4, #20]
   19a00:	ldrb	r8, [r3]
   19a04:	mov	r1, r8
   19a08:	str	r8, [sp, #24]
   19a0c:	bl	1129c <strchr@plt>
   19a10:	ldrd	r2, [sp, #24]
   19a14:	ldrb	r1, [r3, #1]
   19a18:	cmp	r1, #0
   19a1c:	bne	19a2c <argp_parse@@Base+0x2b08>
   19a20:	ldr	r1, [r4]
   19a24:	add	r1, r1, #1
   19a28:	str	r1, [r4]
   19a2c:	sub	r1, r8, #58	; 0x3a
   19a30:	cmp	r0, #0
   19a34:	cmpne	r1, #1
   19a38:	bls	19d90 <argp_parse@@Base+0x2e6c>
   19a3c:	ldrb	ip, [r0]
   19a40:	ldrb	r1, [r0, #1]
   19a44:	cmp	ip, #87	; 0x57
   19a48:	beq	19c94 <argp_parse@@Base+0x2d70>
   19a4c:	cmp	r1, #58	; 0x3a
   19a50:	beq	19d38 <argp_parse@@Base+0x2e14>
   19a54:	mov	r0, r2
   19a58:	add	sp, sp, #36	; 0x24
   19a5c:	ldrd	r4, [sp]
   19a60:	ldrd	r6, [sp, #8]
   19a64:	ldrd	r8, [sp, #16]
   19a68:	ldrd	sl, [sp, #24]
   19a6c:	add	sp, sp, #32
   19a70:	pop	{pc}		; (ldr pc, [sp], #4)
   19a74:	ldr	r8, [r4]
   19a78:	ldr	r3, [r4, #32]
   19a7c:	cmp	r3, r8
   19a80:	ldr	r3, [r4, #28]
   19a84:	strgt	r8, [r4, #32]
   19a88:	cmp	r8, r3
   19a8c:	ldr	r3, [r4, #24]
   19a90:	strlt	r8, [r4, #28]
   19a94:	cmp	r3, #1
   19a98:	beq	19b44 <argp_parse@@Base+0x2c20>
   19a9c:	cmp	r5, r8
   19aa0:	beq	19b24 <argp_parse@@Base+0x2c00>
   19aa4:	ldr	r3, [r9, r8, lsl #2]
   19aa8:	movw	fp, #44568	; 0xae18
   19aac:	movt	fp, #1
   19ab0:	mov	r1, fp
   19ab4:	mov	r0, r3
   19ab8:	str	r3, [sp, #24]
   19abc:	bl	110d4 <strcmp@plt>
   19ac0:	cmp	r0, #0
   19ac4:	ldr	r3, [sp, #24]
   19ac8:	bne	19bb8 <argp_parse@@Base+0x2c94>
   19acc:	ldr	r3, [r4, #28]
   19ad0:	add	r8, r8, #1
   19ad4:	ldr	r2, [r4, #32]
   19ad8:	str	r8, [r4]
   19adc:	cmp	r3, r2
   19ae0:	beq	19da4 <argp_parse@@Base+0x2e80>
   19ae4:	cmp	r8, r2
   19ae8:	beq	19afc <argp_parse@@Base+0x2bd8>
   19aec:	mov	r0, r9
   19af0:	mov	r1, r4
   19af4:	bl	192f8 <argp_parse@@Base+0x23d4>
   19af8:	ldr	r3, [r4, #28]
   19afc:	str	r5, [r4]
   19b00:	str	r5, [r4, #32]
   19b04:	b	19b2c <argp_parse@@Base+0x2c08>
   19b08:	ldrb	r2, [r6]
   19b0c:	ldr	r3, [r4, #20]
   19b10:	sub	r1, r2, #43	; 0x2b
   19b14:	tst	r1, #253	; 0xfd
   19b18:	ldrbeq	r2, [r6, #1]
   19b1c:	addeq	r6, r6, #1
   19b20:	b	199d4 <argp_parse@@Base+0x2ab0>
   19b24:	ldr	r3, [r4, #28]
   19b28:	ldr	r5, [r4, #32]
   19b2c:	cmp	r5, r3
   19b30:	mvnne	r2, #0
   19b34:	strne	r3, [r4]
   19b38:	bne	19a54 <argp_parse@@Base+0x2b30>
   19b3c:	mvn	r2, #0
   19b40:	b	19a54 <argp_parse@@Base+0x2b30>
   19b44:	ldrd	r2, [r4, #28]
   19b48:	cmp	r2, r3
   19b4c:	beq	19d78 <argp_parse@@Base+0x2e54>
   19b50:	cmp	r8, r3
   19b54:	beq	19b68 <argp_parse@@Base+0x2c44>
   19b58:	mov	r1, r4
   19b5c:	mov	r0, r9
   19b60:	bl	192f8 <argp_parse@@Base+0x23d4>
   19b64:	ldr	r3, [r4]
   19b68:	cmp	r5, r3
   19b6c:	ble	19d88 <argp_parse@@Base+0x2e64>
   19b70:	add	r1, r9, r3, lsl #2
   19b74:	b	19b88 <argp_parse@@Base+0x2c64>
   19b78:	add	r3, r3, #1
   19b7c:	cmp	r3, r5
   19b80:	str	r3, [r4]
   19b84:	beq	19d88 <argp_parse@@Base+0x2e64>
   19b88:	ldr	r2, [r1], #4
   19b8c:	ldrb	r0, [r2]
   19b90:	cmp	r0, #45	; 0x2d
   19b94:	bne	19b78 <argp_parse@@Base+0x2c54>
   19b98:	ldrb	r2, [r2, #1]
   19b9c:	cmp	r2, #0
   19ba0:	beq	19b78 <argp_parse@@Base+0x2c54>
   19ba4:	ldr	r8, [r4]
   19ba8:	cmp	r5, r8
   19bac:	str	r3, [r4, #32]
   19bb0:	bne	19aa4 <argp_parse@@Base+0x2b80>
   19bb4:	b	19b24 <argp_parse@@Base+0x2c00>
   19bb8:	ldrb	r2, [r3]
   19bbc:	cmp	r2, #45	; 0x2d
   19bc0:	beq	19bf4 <argp_parse@@Base+0x2cd0>
   19bc4:	ldr	r2, [r4, #24]
   19bc8:	cmp	r2, #0
   19bcc:	beq	19b3c <argp_parse@@Base+0x2c18>
   19bd0:	add	r8, r8, #1
   19bd4:	mov	r2, #1
   19bd8:	str	r8, [r4]
   19bdc:	str	r3, [r4, #12]
   19be0:	b	19a54 <argp_parse@@Base+0x2b30>
   19be4:	mov	r3, #1
   19be8:	mov	r2, r3
   19bec:	str	r3, [r4]
   19bf0:	b	1997c <argp_parse@@Base+0x2a58>
   19bf4:	ldrb	r1, [r3, #1]
   19bf8:	cmp	r1, #0
   19bfc:	beq	19bc4 <argp_parse@@Base+0x2ca0>
   19c00:	cmp	sl, #0
   19c04:	beq	19c8c <argp_parse@@Base+0x2d68>
   19c08:	cmp	r1, #45	; 0x2d
   19c0c:	beq	19e24 <argp_parse@@Base+0x2f00>
   19c10:	ldr	r2, [sp, #76]	; 0x4c
   19c14:	cmp	r2, #0
   19c18:	beq	19c8c <argp_parse@@Base+0x2d68>
   19c1c:	ldrb	r2, [r3, #2]
   19c20:	cmp	r2, #0
   19c24:	bne	19c40 <argp_parse@@Base+0x2d1c>
   19c28:	mov	r0, r6
   19c2c:	str	r3, [sp, #24]
   19c30:	bl	1129c <strchr@plt>
   19c34:	cmp	r0, #0
   19c38:	ldr	r3, [sp, #24]
   19c3c:	bne	19c8c <argp_parse@@Base+0x2d68>
   19c40:	ldr	r2, [sp, #72]	; 0x48
   19c44:	add	ip, r3, #1
   19c48:	movw	r0, #45980	; 0xb39c
   19c4c:	movt	r0, #1
   19c50:	mov	r3, sl
   19c54:	ldr	r1, [sp, #76]	; 0x4c
   19c58:	str	r2, [sp]
   19c5c:	mov	r2, r6
   19c60:	str	r0, [sp, #16]
   19c64:	mov	r0, r5
   19c68:	stmib	sp, {r1, r4, r7}
   19c6c:	mov	r1, r9
   19c70:	str	ip, [r4, #20]
   19c74:	bl	193d8 <argp_parse@@Base+0x24b4>
   19c78:	cmn	r0, #1
   19c7c:	mov	r2, r0
   19c80:	bne	19a54 <argp_parse@@Base+0x2b30>
   19c84:	ldr	r3, [r4]
   19c88:	ldr	r3, [r9, r3, lsl #2]
   19c8c:	add	r3, r3, #1
   19c90:	b	199f0 <argp_parse@@Base+0x2acc>
   19c94:	sub	ip, r1, #59	; 0x3b
   19c98:	cmp	sl, #0
   19c9c:	clz	ip, ip
   19ca0:	lsr	ip, ip, #5
   19ca4:	moveq	ip, #0
   19ca8:	cmp	ip, #0
   19cac:	beq	19a4c <argp_parse@@Base+0x2b28>
   19cb0:	ldrb	r3, [r3, #1]
   19cb4:	cmp	r3, #0
   19cb8:	bne	19ccc <argp_parse@@Base+0x2da8>
   19cbc:	ldr	r3, [r4]
   19cc0:	cmp	r3, r5
   19cc4:	beq	19e58 <argp_parse@@Base+0x2f34>
   19cc8:	ldr	fp, [r9, r3, lsl #2]
   19ccc:	mov	lr, #0
   19cd0:	movw	ip, #46056	; 0xb3e8
   19cd4:	movt	ip, #1
   19cd8:	ldr	r3, [sp, #72]	; 0x48
   19cdc:	mov	r2, r6
   19ce0:	mov	r1, r9
   19ce4:	mov	r0, r5
   19ce8:	str	r3, [sp]
   19cec:	mov	r3, sl
   19cf0:	str	r4, [sp, #8]
   19cf4:	str	r7, [sp, #12]
   19cf8:	str	ip, [sp, #16]
   19cfc:	str	fp, [r4, #20]
   19d00:	str	lr, [sp, #4]
   19d04:	str	lr, [r4, #12]
   19d08:	bl	193d8 <argp_parse@@Base+0x24b4>
   19d0c:	mov	r2, r0
   19d10:	b	19a54 <argp_parse@@Base+0x2b30>
   19d14:	movw	r0, #45964	; 0xb38c
   19d18:	movt	r0, #1
   19d1c:	bl	11200 <getenv@plt>
   19d20:	cmp	r0, #0
   19d24:	ldr	r3, [r4, #20]
   19d28:	bne	199c0 <argp_parse@@Base+0x2a9c>
   19d2c:	mov	r2, #1
   19d30:	str	r2, [r4, #24]
   19d34:	b	199c8 <argp_parse@@Base+0x2aa4>
   19d38:	ldrb	r1, [r0, #2]
   19d3c:	ldrb	r3, [r3, #1]
   19d40:	cmp	r1, #58	; 0x3a
   19d44:	beq	19de4 <argp_parse@@Base+0x2ec0>
   19d48:	cmp	r3, #0
   19d4c:	ldr	r3, [r4]
   19d50:	bne	19db0 <argp_parse@@Base+0x2e8c>
   19d54:	cmp	r5, r3
   19d58:	beq	19e04 <argp_parse@@Base+0x2ee0>
   19d5c:	ldr	r1, [r9, r3, lsl #2]
   19d60:	add	r3, r3, #1
   19d64:	str	r3, [r4]
   19d68:	str	r1, [r4, #12]
   19d6c:	mov	r3, #0
   19d70:	str	r3, [r4, #20]
   19d74:	b	19a54 <argp_parse@@Base+0x2b30>
   19d78:	cmp	r8, r3
   19d7c:	movne	r3, r8
   19d80:	strne	r8, [r4, #28]
   19d84:	b	19b68 <argp_parse@@Base+0x2c44>
   19d88:	mov	r8, r3
   19d8c:	b	19ba8 <argp_parse@@Base+0x2c84>
   19d90:	cmp	r7, #0
   19d94:	bne	19dc0 <argp_parse@@Base+0x2e9c>
   19d98:	mov	r2, #63	; 0x3f
   19d9c:	str	r8, [r4, #8]
   19da0:	b	19a54 <argp_parse@@Base+0x2b30>
   19da4:	mov	r3, r8
   19da8:	str	r8, [r4, #28]
   19dac:	b	19afc <argp_parse@@Base+0x2bd8>
   19db0:	add	r3, r3, #1
   19db4:	str	r3, [r4]
   19db8:	str	fp, [r4, #12]
   19dbc:	b	19d6c <argp_parse@@Base+0x2e48>
   19dc0:	movw	r0, #50136	; 0xc3d8
   19dc4:	movt	r0, #2
   19dc8:	ldr	r2, [r9]
   19dcc:	movw	r1, #45984	; 0xb3a0
   19dd0:	movt	r1, #1
   19dd4:	mov	r3, r8
   19dd8:	ldr	r0, [r0]
   19ddc:	bl	112a8 <fprintf@plt>
   19de0:	b	19d98 <argp_parse@@Base+0x2e74>
   19de4:	cmp	r3, #0
   19de8:	streq	r3, [r4, #12]
   19dec:	beq	19d6c <argp_parse@@Base+0x2e48>
   19df0:	ldr	r3, [r4]
   19df4:	str	fp, [r4, #12]
   19df8:	add	r3, r3, #1
   19dfc:	str	r3, [r4]
   19e00:	b	19d6c <argp_parse@@Base+0x2e48>
   19e04:	cmp	r7, #0
   19e08:	bne	19e78 <argp_parse@@Base+0x2f54>
   19e0c:	str	r8, [r4, #8]
   19e10:	ldrb	r3, [r6]
   19e14:	cmp	r3, #58	; 0x3a
   19e18:	moveq	r2, #58	; 0x3a
   19e1c:	movne	r2, #63	; 0x3f
   19e20:	b	19d6c <argp_parse@@Base+0x2e48>
   19e24:	ldr	r2, [sp, #72]	; 0x48
   19e28:	add	ip, r3, #2
   19e2c:	mov	r1, r9
   19e30:	mov	r3, sl
   19e34:	ldr	r0, [sp, #76]	; 0x4c
   19e38:	str	r2, [sp]
   19e3c:	mov	r2, r6
   19e40:	stmib	sp, {r0, r4, r7, fp}
   19e44:	mov	r0, r5
   19e48:	str	ip, [r4, #20]
   19e4c:	bl	193d8 <argp_parse@@Base+0x24b4>
   19e50:	mov	r2, r0
   19e54:	b	19a54 <argp_parse@@Base+0x2b30>
   19e58:	cmp	r7, #0
   19e5c:	bne	19e9c <argp_parse@@Base+0x2f78>
   19e60:	str	r8, [r4, #8]
   19e64:	ldrb	r3, [r6]
   19e68:	cmp	r3, #58	; 0x3a
   19e6c:	moveq	r2, #58	; 0x3a
   19e70:	movne	r2, #63	; 0x3f
   19e74:	b	19a54 <argp_parse@@Base+0x2b30>
   19e78:	movw	r0, #50136	; 0xc3d8
   19e7c:	movt	r0, #2
   19e80:	ldr	r2, [r9]
   19e84:	movw	r1, #46012	; 0xb3bc
   19e88:	movt	r1, #1
   19e8c:	mov	r3, r8
   19e90:	ldr	r0, [r0]
   19e94:	bl	112a8 <fprintf@plt>
   19e98:	b	19e0c <argp_parse@@Base+0x2ee8>
   19e9c:	movw	r0, #50136	; 0xc3d8
   19ea0:	movt	r0, #2
   19ea4:	ldr	r2, [r9]
   19ea8:	movw	r1, #46012	; 0xb3bc
   19eac:	movt	r1, #1
   19eb0:	mov	r3, r8
   19eb4:	ldr	r0, [r0]
   19eb8:	bl	112a8 <fprintf@plt>
   19ebc:	b	19e60 <argp_parse@@Base+0x2f3c>
   19ec0:	strd	r4, [sp, #-16]!
   19ec4:	movw	r5, #50112	; 0xc3c0
   19ec8:	movt	r5, #2
   19ecc:	str	r6, [sp, #8]
   19ed0:	movw	r4, #50208	; 0xc420
   19ed4:	movt	r4, #2
   19ed8:	str	lr, [sp, #12]
   19edc:	sub	sp, sp, #16
   19ee0:	ldr	lr, [sp, #32]
   19ee4:	ldr	ip, [r5]
   19ee8:	ldr	r6, [sp, #36]	; 0x24
   19eec:	str	lr, [sp]
   19ef0:	ldr	lr, [sp, #40]	; 0x28
   19ef4:	str	ip, [r4]
   19ef8:	ldr	ip, [r5, #4]
   19efc:	str	r6, [sp, #4]
   19f00:	str	r4, [sp, #8]
   19f04:	str	lr, [sp, #12]
   19f08:	str	ip, [r4, #4]
   19f0c:	bl	19928 <argp_parse@@Base+0x2a04>
   19f10:	ldr	ip, [r4]
   19f14:	movw	r3, #50272	; 0xc460
   19f18:	movt	r3, #2
   19f1c:	ldr	r1, [r4, #8]
   19f20:	ldr	r2, [r4, #12]
   19f24:	str	ip, [r5]
   19f28:	str	r1, [r5, #8]
   19f2c:	str	r2, [r3]
   19f30:	add	sp, sp, #16
   19f34:	ldrd	r4, [sp]
   19f38:	ldr	r6, [sp, #8]
   19f3c:	add	sp, sp, #12
   19f40:	pop	{pc}		; (ldr pc, [sp], #4)
   19f44:	mov	ip, #0
   19f48:	push	{lr}		; (str lr, [sp, #-4]!)
   19f4c:	mov	lr, #1
   19f50:	sub	sp, sp, #20
   19f54:	mov	r3, ip
   19f58:	str	ip, [sp]
   19f5c:	stmib	sp, {ip, lr}
   19f60:	bl	19ec0 <argp_parse@@Base+0x2f9c>
   19f64:	add	sp, sp, #20
   19f68:	pop	{pc}		; (ldr pc, [sp], #4)
   19f6c:	umull	r2, r3, r1, r2
   19f70:	cmp	r3, #0
   19f74:	bne	19f80 <argp_parse@@Base+0x305c>
   19f78:	mov	r1, r2
   19f7c:	b	18ad4 <argp_parse@@Base+0x1bb0>
   19f80:	str	r4, [sp, #-8]!
   19f84:	str	lr, [sp, #4]
   19f88:	bl	112b4 <__errno_location@plt>
   19f8c:	mov	r3, #12
   19f90:	ldr	r4, [sp]
   19f94:	add	sp, sp, #4
   19f98:	str	r3, [r0]
   19f9c:	mov	r0, #0
   19fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   19fa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19fa8:	mov	r7, r0
   19fac:	ldr	r6, [pc, #72]	; 19ffc <argp_parse@@Base+0x30d8>
   19fb0:	ldr	r5, [pc, #72]	; 1a000 <argp_parse@@Base+0x30dc>
   19fb4:	add	r6, pc, r6
   19fb8:	add	r5, pc, r5
   19fbc:	sub	r6, r6, r5
   19fc0:	mov	r8, r1
   19fc4:	mov	r9, r2
   19fc8:	bl	11090 <calloc@plt-0x20>
   19fcc:	asrs	r6, r6, #2
   19fd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19fd4:	mov	r4, #0
   19fd8:	add	r4, r4, #1
   19fdc:	ldr	r3, [r5], #4
   19fe0:	mov	r2, r9
   19fe4:	mov	r1, r8
   19fe8:	mov	r0, r7
   19fec:	blx	r3
   19ff0:	cmp	r6, r4
   19ff4:	bne	19fd8 <argp_parse@@Base+0x30b4>
   19ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ffc:	andeq	r1, r1, r8, asr pc
   1a000:	andeq	r1, r1, r0, asr pc
   1a004:	bx	lr

Disassembly of section .fini:

0001a008 <.fini>:
   1a008:	push	{r3, lr}
   1a00c:	pop	{r3, pc}
