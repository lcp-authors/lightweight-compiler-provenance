
../repos/coreutils/src/pinky:     file format elf32-littlearm


Disassembly of section .init:

00010f18 <.init>:
   10f18:	push	{r3, lr}
   10f1c:	bl	1171c <putchar_unlocked@plt+0x4c0>
   10f20:	pop	{r3, pc}

Disassembly of section .plt:

00010f24 <calloc@plt-0x14>:
   10f24:	push	{lr}		; (str lr, [sp, #-4]!)
   10f28:	ldr	lr, [pc, #4]	; 10f34 <calloc@plt-0x4>
   10f2c:	add	lr, pc, lr
   10f30:	ldr	pc, [lr, #8]!
   10f34:	andeq	r5, r1, ip, asr #1

00010f38 <calloc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #204]!	; 0xcc

00010f44 <fputs_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #196]!	; 0xc4

00010f50 <raise@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #188]!	; 0xbc

00010f5c <getpwnam@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #180]!	; 0xb4

00010f68 <strcmp@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #172]!	; 0xac

00010f74 <fflush@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #164]!	; 0xa4

00010f80 <utmpxname@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #156]!	; 0x9c

00010f8c <free@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #148]!	; 0x94

00010f98 <gai_strerror@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #140]!	; 0x8c

00010fa4 <_exit@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #132]!	; 0x84

00010fb0 <memcpy@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #124]!	; 0x7c

00010fbc <mbsinit@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #116]!	; 0x74

00010fc8 <time@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #108]!	; 0x6c

00010fd4 <fwrite_unlocked@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #100]!	; 0x64

00010fe0 <memcmp@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #92]!	; 0x5c

00010fec <stpcpy@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #84]!	; 0x54

00010ff8 <fputc_unlocked@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #76]!	; 0x4c

00011004 <dcgettext@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #68]!	; 0x44

00011010 <strdup@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #60]!	; 0x3c

0001101c <setutxent@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #52]!	; 0x34

00011028 <realloc@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #44]!	; 0x2c

00011034 <textdomain@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #36]!	; 0x24

00011040 <iswprint@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #28]!

0001104c <lseek64@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #20]!

00011058 <__ctype_get_mb_cur_max@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #12]!

00011064 <strcpy@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #4]!

00011070 <__fpending@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #20, 20	; 0x14000
   11078:	ldr	pc, [ip, #4092]!	; 0xffc

0001107c <ferror_unlocked@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #20, 20	; 0x14000
   11084:	ldr	pc, [ip, #4084]!	; 0xff4

00011088 <mbrtowc@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #20, 20	; 0x14000
   11090:	ldr	pc, [ip, #4076]!	; 0xfec

00011094 <error@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #20, 20	; 0x14000
   1109c:	ldr	pc, [ip, #4068]!	; 0xfe4

000110a0 <malloc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #20, 20	; 0x14000
   110a8:	ldr	pc, [ip, #4060]!	; 0xfdc

000110ac <__libc_start_main@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #20, 20	; 0x14000
   110b4:	ldr	pc, [ip, #4052]!	; 0xfd4

000110b8 <strftime@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #20, 20	; 0x14000
   110c0:	ldr	pc, [ip, #4044]!	; 0xfcc

000110c4 <__freading@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #20, 20	; 0x14000
   110cc:	ldr	pc, [ip, #4036]!	; 0xfc4

000110d0 <localtime@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #20, 20	; 0x14000
   110d8:	ldr	pc, [ip, #4028]!	; 0xfbc

000110dc <__ctype_toupper_loc@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #4020]!	; 0xfb4

000110e8 <__gmon_start__@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #20, 20	; 0x14000
   110f0:	ldr	pc, [ip, #4012]!	; 0xfac

000110f4 <getopt_long@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #20, 20	; 0x14000
   110fc:	ldr	pc, [ip, #4004]!	; 0xfa4

00011100 <kill@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #20, 20	; 0x14000
   11108:	ldr	pc, [ip, #3996]!	; 0xf9c

0001110c <__ctype_b_loc@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #20, 20	; 0x14000
   11114:	ldr	pc, [ip, #3988]!	; 0xf94

00011118 <exit@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #20, 20	; 0x14000
   11120:	ldr	pc, [ip, #3980]!	; 0xf8c

00011124 <strlen@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #20, 20	; 0x14000
   1112c:	ldr	pc, [ip, #3972]!	; 0xf84

00011130 <strchr@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #20, 20	; 0x14000
   11138:	ldr	pc, [ip, #3964]!	; 0xf7c

0001113c <__errno_location@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #20, 20	; 0x14000
   11144:	ldr	pc, [ip, #3956]!	; 0xf74

00011148 <__sprintf_chk@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #20, 20	; 0x14000
   11150:	ldr	pc, [ip, #3948]!	; 0xf6c

00011154 <__cxa_atexit@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #20, 20	; 0x14000
   1115c:	ldr	pc, [ip, #3940]!	; 0xf64

00011160 <memset@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #20, 20	; 0x14000
   11168:	ldr	pc, [ip, #3932]!	; 0xf5c

0001116c <strncpy@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #20, 20	; 0x14000
   11174:	ldr	pc, [ip, #3924]!	; 0xf54

00011178 <__printf_chk@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #20, 20	; 0x14000
   11180:	ldr	pc, [ip, #3916]!	; 0xf4c

00011184 <fileno@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #20, 20	; 0x14000
   1118c:	ldr	pc, [ip, #3908]!	; 0xf44

00011190 <__fprintf_chk@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #20, 20	; 0x14000
   11198:	ldr	pc, [ip, #3900]!	; 0xf3c

0001119c <fclose@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #20, 20	; 0x14000
   111a4:	ldr	pc, [ip, #3892]!	; 0xf34

000111a8 <fseeko64@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #20, 20	; 0x14000
   111b0:	ldr	pc, [ip, #3884]!	; 0xf2c

000111b4 <endutxent@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #20, 20	; 0x14000
   111bc:	ldr	pc, [ip, #3876]!	; 0xf24

000111c0 <setlocale@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #20, 20	; 0x14000
   111c8:	ldr	pc, [ip, #3868]!	; 0xf1c

000111cc <strrchr@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #20, 20	; 0x14000
   111d4:	ldr	pc, [ip, #3860]!	; 0xf14

000111d8 <nl_langinfo@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #20, 20	; 0x14000
   111e0:	ldr	pc, [ip, #3852]!	; 0xf0c

000111e4 <fopen64@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #20, 20	; 0x14000
   111ec:	ldr	pc, [ip, #3844]!	; 0xf04

000111f0 <freeaddrinfo@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #20, 20	; 0x14000
   111f8:	ldr	pc, [ip, #3836]!	; 0xefc

000111fc <getaddrinfo@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #20, 20	; 0x14000
   11204:	ldr	pc, [ip, #3828]!	; 0xef4

00011208 <bindtextdomain@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #20, 20	; 0x14000
   11210:	ldr	pc, [ip, #3820]!	; 0xeec

00011214 <fread_unlocked@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #20, 20	; 0x14000
   1121c:	ldr	pc, [ip, #3812]!	; 0xee4

00011220 <__xstat64@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #20, 20	; 0x14000
   11228:	ldr	pc, [ip, #3804]!	; 0xedc

0001122c <fputs@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #20, 20	; 0x14000
   11234:	ldr	pc, [ip, #3796]!	; 0xed4

00011238 <strncmp@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #20, 20	; 0x14000
   11240:	ldr	pc, [ip, #3788]!	; 0xecc

00011244 <abort@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #20, 20	; 0x14000
   1124c:	ldr	pc, [ip, #3780]!	; 0xec4

00011250 <getutxent@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #20, 20	; 0x14000
   11258:	ldr	pc, [ip, #3772]!	; 0xebc

0001125c <putchar_unlocked@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #20, 20	; 0x14000
   11264:	ldr	pc, [ip, #3764]!	; 0xeb4

Disassembly of section .text:

00011268 <.text>:
   11268:	push	{r4, lr}
   1126c:	bl	1113c <__errno_location@plt>
   11270:	mov	r3, #12
   11274:	str	r3, [r0]
   11278:	mov	r0, #0
   1127c:	pop	{r4, pc}
   11280:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11284:	mov	r6, r0
   11288:	sub	sp, sp, #24
   1128c:	mov	r7, r1
   11290:	ldr	r0, [r1]
   11294:	bl	12610 <putchar_unlocked@plt+0x13b4>
   11298:	ldr	r1, [pc, #956]	; 1165c <putchar_unlocked@plt+0x400>
   1129c:	mov	r0, #6
   112a0:	bl	111c0 <setlocale@plt>
   112a4:	ldr	r1, [pc, #948]	; 11660 <putchar_unlocked@plt+0x404>
   112a8:	ldr	r0, [pc, #948]	; 11664 <putchar_unlocked@plt+0x408>
   112ac:	bl	11208 <bindtextdomain@plt>
   112b0:	ldr	r0, [pc, #940]	; 11664 <putchar_unlocked@plt+0x408>
   112b4:	bl	11034 <textdomain@plt>
   112b8:	ldr	r0, [pc, #936]	; 11668 <putchar_unlocked@plt+0x40c>
   112bc:	ldr	r9, [pc, #936]	; 1166c <putchar_unlocked@plt+0x410>
   112c0:	ldr	r8, [pc, #936]	; 11670 <putchar_unlocked@plt+0x414>
   112c4:	ldr	r5, [pc, #936]	; 11674 <putchar_unlocked@plt+0x418>
   112c8:	bl	14a98 <putchar_unlocked@plt+0x383c>
   112cc:	mov	r4, #0
   112d0:	mov	r3, r9
   112d4:	mov	r2, r8
   112d8:	mov	r1, r7
   112dc:	mov	r0, r6
   112e0:	str	r4, [sp]
   112e4:	bl	110f4 <getopt_long@plt>
   112e8:	cmn	r0, #1
   112ec:	bne	11340 <putchar_unlocked@plt+0xe4>
   112f0:	ldr	r3, [pc, #896]	; 11678 <putchar_unlocked@plt+0x41c>
   112f4:	ldr	r8, [r3]
   112f8:	ldrb	r3, [r5, #6]
   112fc:	sub	r6, r6, r8
   11300:	lsl	r8, r8, #2
   11304:	cmp	r3, r4
   11308:	bne	11448 <putchar_unlocked@plt+0x1ec>
   1130c:	cmp	r6, r4
   11310:	addne	r7, r7, r8
   11314:	movne	r4, r3
   11318:	bne	11648 <putchar_unlocked@plt+0x3ec>
   1131c:	mov	r2, #5
   11320:	ldr	r1, [pc, #852]	; 1167c <putchar_unlocked@plt+0x420>
   11324:	mov	r0, r6
   11328:	bl	11004 <dcgettext@plt>
   1132c:	mov	r2, r0
   11330:	mov	r1, r6
   11334:	mov	r0, r6
   11338:	bl	11094 <error@plt>
   1133c:	b	1136c <putchar_unlocked@plt+0x110>
   11340:	cmp	r0, #105	; 0x69
   11344:	beq	113e4 <putchar_unlocked@plt+0x188>
   11348:	bgt	1138c <putchar_unlocked@plt+0x130>
   1134c:	cmp	r0, #98	; 0x62
   11350:	beq	11400 <putchar_unlocked@plt+0x1a4>
   11354:	bgt	11374 <putchar_unlocked@plt+0x118>
   11358:	cmn	r0, #3
   1135c:	beq	11408 <putchar_unlocked@plt+0x1ac>
   11360:	cmn	r0, #2
   11364:	moveq	r0, r4
   11368:	beq	11370 <putchar_unlocked@plt+0x114>
   1136c:	mov	r0, #1
   11370:	bl	11f04 <putchar_unlocked@plt+0xca8>
   11374:	cmp	r0, #102	; 0x66
   11378:	beq	113dc <putchar_unlocked@plt+0x180>
   1137c:	cmp	r0, #104	; 0x68
   11380:	bne	1136c <putchar_unlocked@plt+0x110>
   11384:	strb	r4, [r5, #1]
   11388:	b	112cc <putchar_unlocked@plt+0x70>
   1138c:	cmp	r0, #113	; 0x71
   11390:	beq	113f0 <putchar_unlocked@plt+0x194>
   11394:	bgt	113b0 <putchar_unlocked@plt+0x154>
   11398:	cmp	r0, #108	; 0x6c
   1139c:	beq	113d4 <putchar_unlocked@plt+0x178>
   113a0:	cmp	r0, #112	; 0x70
   113a4:	bne	1136c <putchar_unlocked@plt+0x110>
   113a8:	strb	r4, [r5, #2]
   113ac:	b	112cc <putchar_unlocked@plt+0x70>
   113b0:	cmp	r0, #115	; 0x73
   113b4:	beq	113c8 <putchar_unlocked@plt+0x16c>
   113b8:	cmp	r0, #119	; 0x77
   113bc:	bne	1136c <putchar_unlocked@plt+0x110>
   113c0:	strb	r4, [r5, #3]
   113c4:	b	112cc <putchar_unlocked@plt+0x70>
   113c8:	mov	r3, #1
   113cc:	strb	r3, [r5, #6]
   113d0:	b	112cc <putchar_unlocked@plt+0x70>
   113d4:	strb	r4, [r5, #6]
   113d8:	b	112cc <putchar_unlocked@plt+0x70>
   113dc:	strb	r4, [r5, #7]
   113e0:	b	112cc <putchar_unlocked@plt+0x70>
   113e4:	strb	r4, [r5, #3]
   113e8:	strb	r4, [r5, #5]
   113ec:	b	112cc <putchar_unlocked@plt+0x70>
   113f0:	strb	r4, [r5, #3]
   113f4:	strb	r4, [r5, #4]
   113f8:	strb	r4, [r5, #5]
   113fc:	b	112cc <putchar_unlocked@plt+0x70>
   11400:	strb	r4, [r5]
   11404:	b	112cc <putchar_unlocked@plt+0x70>
   11408:	ldr	r3, [pc, #624]	; 11680 <putchar_unlocked@plt+0x424>
   1140c:	ldr	r0, [pc, #624]	; 11684 <putchar_unlocked@plt+0x428>
   11410:	ldr	r2, [pc, #624]	; 11688 <putchar_unlocked@plt+0x42c>
   11414:	str	r3, [sp, #8]
   11418:	ldr	r3, [pc, #620]	; 1168c <putchar_unlocked@plt+0x430>
   1141c:	str	r4, [sp, #12]
   11420:	ldr	r1, [pc, #616]	; 11690 <putchar_unlocked@plt+0x434>
   11424:	str	r3, [sp, #4]
   11428:	ldr	r3, [pc, #612]	; 11694 <putchar_unlocked@plt+0x438>
   1142c:	str	r3, [sp]
   11430:	ldr	r3, [pc, #608]	; 11698 <putchar_unlocked@plt+0x43c>
   11434:	ldr	r0, [r0]
   11438:	ldr	r3, [r3]
   1143c:	bl	14220 <putchar_unlocked@plt+0x2fc4>
   11440:	mov	r0, #0
   11444:	bl	11118 <exit@plt>
   11448:	mov	r3, r4
   1144c:	add	r2, sp, #20
   11450:	ldr	r0, [pc, #580]	; 1169c <putchar_unlocked@plt+0x440>
   11454:	add	r1, sp, #16
   11458:	str	r4, [sp, #20]
   1145c:	bl	13c74 <putchar_unlocked@plt+0x2a18>
   11460:	cmp	r0, #0
   11464:	beq	11494 <putchar_unlocked@plt+0x238>
   11468:	bl	1113c <__errno_location@plt>
   1146c:	ldr	r5, [r0]
   11470:	mov	r1, #3
   11474:	mov	r0, r4
   11478:	ldr	r2, [pc, #540]	; 1169c <putchar_unlocked@plt+0x440>
   1147c:	bl	13ad0 <putchar_unlocked@plt+0x2874>
   11480:	mov	r3, r0
   11484:	ldr	r2, [pc, #532]	; 116a0 <putchar_unlocked@plt+0x444>
   11488:	mov	r0, #1
   1148c:	mov	r1, r5
   11490:	bl	11094 <error@plt>
   11494:	mov	r0, #2
   11498:	ldr	sl, [sp, #16]
   1149c:	ldr	r4, [sp, #20]
   114a0:	bl	124ec <putchar_unlocked@plt+0x1290>
   114a4:	cmp	r0, #0
   114a8:	ldr	r9, [pc, #500]	; 116a4 <putchar_unlocked@plt+0x448>
   114ac:	ldrne	r3, [pc, #500]	; 116a8 <putchar_unlocked@plt+0x44c>
   114b0:	ldreq	r3, [pc, #500]	; 116ac <putchar_unlocked@plt+0x450>
   114b4:	strne	r3, [r9, #52]	; 0x34
   114b8:	movne	r3, #16
   114bc:	streq	r3, [r9, #52]	; 0x34
   114c0:	moveq	r3, #12
   114c4:	str	r3, [r9, #56]	; 0x38
   114c8:	ldrb	r3, [r5, #7]
   114cc:	cmp	r3, #0
   114d0:	beq	115c8 <putchar_unlocked@plt+0x36c>
   114d4:	mov	r2, #5
   114d8:	ldr	r1, [pc, #464]	; 116b0 <putchar_unlocked@plt+0x454>
   114dc:	mov	r0, #0
   114e0:	bl	11004 <dcgettext@plt>
   114e4:	mov	r2, r0
   114e8:	ldr	r1, [pc, #452]	; 116b4 <putchar_unlocked@plt+0x458>
   114ec:	mov	r0, #1
   114f0:	bl	11178 <__printf_chk@plt>
   114f4:	ldrb	r3, [r5, #3]
   114f8:	cmp	r3, #0
   114fc:	beq	11520 <putchar_unlocked@plt+0x2c4>
   11500:	mov	r2, #5
   11504:	ldr	r1, [pc, #428]	; 116b8 <putchar_unlocked@plt+0x45c>
   11508:	mov	r0, #0
   1150c:	bl	11004 <dcgettext@plt>
   11510:	mov	r2, r0
   11514:	ldr	r1, [pc, #416]	; 116bc <putchar_unlocked@plt+0x460>
   11518:	mov	r0, #1
   1151c:	bl	11178 <__printf_chk@plt>
   11520:	mov	r2, #5
   11524:	ldr	r1, [pc, #404]	; 116c0 <putchar_unlocked@plt+0x464>
   11528:	mov	r0, #0
   1152c:	bl	11004 <dcgettext@plt>
   11530:	mov	r2, r0
   11534:	ldr	r1, [pc, #392]	; 116c4 <putchar_unlocked@plt+0x468>
   11538:	mov	r0, #1
   1153c:	bl	11178 <__printf_chk@plt>
   11540:	ldrb	r3, [r5, #4]
   11544:	cmp	r3, #0
   11548:	beq	1156c <putchar_unlocked@plt+0x310>
   1154c:	mov	r2, #5
   11550:	ldr	r1, [pc, #368]	; 116c8 <putchar_unlocked@plt+0x46c>
   11554:	mov	r0, #0
   11558:	bl	11004 <dcgettext@plt>
   1155c:	mov	r2, r0
   11560:	ldr	r1, [pc, #356]	; 116cc <putchar_unlocked@plt+0x470>
   11564:	mov	r0, #1
   11568:	bl	11178 <__printf_chk@plt>
   1156c:	ldr	r9, [r9, #56]	; 0x38
   11570:	mov	r2, #5
   11574:	mov	r0, #0
   11578:	ldr	r1, [pc, #336]	; 116d0 <putchar_unlocked@plt+0x474>
   1157c:	bl	11004 <dcgettext@plt>
   11580:	mov	r3, r0
   11584:	ldr	r1, [pc, #328]	; 116d4 <putchar_unlocked@plt+0x478>
   11588:	mov	r0, #1
   1158c:	mov	r2, r9
   11590:	bl	11178 <__printf_chk@plt>
   11594:	ldrb	r3, [r5, #5]
   11598:	cmp	r3, #0
   1159c:	beq	115c0 <putchar_unlocked@plt+0x364>
   115a0:	mov	r2, #5
   115a4:	ldr	r1, [pc, #300]	; 116d8 <putchar_unlocked@plt+0x47c>
   115a8:	mov	r0, #0
   115ac:	bl	11004 <dcgettext@plt>
   115b0:	mov	r2, r0
   115b4:	ldr	r1, [pc, #288]	; 116dc <putchar_unlocked@plt+0x480>
   115b8:	mov	r0, #1
   115bc:	bl	11178 <__printf_chk@plt>
   115c0:	mov	r0, #10
   115c4:	bl	1125c <putchar_unlocked@plt>
   115c8:	add	r7, r7, r8
   115cc:	subs	sl, sl, #1
   115d0:	bcc	11440 <putchar_unlocked@plt+0x1e4>
   115d4:	ldrb	r3, [r4, #44]	; 0x2c
   115d8:	cmp	r3, #0
   115dc:	beq	11634 <putchar_unlocked@plt+0x3d8>
   115e0:	ldrsh	r3, [r4]
   115e4:	cmp	r3, #7
   115e8:	bne	11634 <putchar_unlocked@plt+0x3d8>
   115ec:	cmp	r6, #0
   115f0:	beq	1161c <putchar_unlocked@plt+0x3c0>
   115f4:	mov	r9, r7
   115f8:	mov	r5, #0
   115fc:	add	r8, r4, #44	; 0x2c
   11600:	b	1162c <putchar_unlocked@plt+0x3d0>
   11604:	mov	r2, #32
   11608:	mov	r0, r8
   1160c:	ldr	r1, [r9], #4
   11610:	bl	11238 <strncmp@plt>
   11614:	cmp	r0, #0
   11618:	bne	11628 <putchar_unlocked@plt+0x3cc>
   1161c:	mov	r0, r4
   11620:	bl	11bb8 <putchar_unlocked@plt+0x95c>
   11624:	b	11634 <putchar_unlocked@plt+0x3d8>
   11628:	add	r5, r5, #1
   1162c:	cmp	r6, r5
   11630:	bgt	11604 <putchar_unlocked@plt+0x3a8>
   11634:	add	r4, r4, #384	; 0x180
   11638:	b	115cc <putchar_unlocked@plt+0x370>
   1163c:	add	r4, r4, #1
   11640:	ldr	r0, [r7], #4
   11644:	bl	118e4 <putchar_unlocked@plt+0x688>
   11648:	cmp	r6, r4
   1164c:	bgt	1163c <putchar_unlocked@plt+0x3e0>
   11650:	mov	r0, #0
   11654:	add	sp, sp, #24
   11658:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1165c:	andeq	r5, r1, r1, rrx
   11660:	andeq	r5, r1, r2, rrx
   11664:			; <UNDEFINED> instruction: 0x00014fbf
   11668:	andeq	r2, r1, r8, lsr r2
   1166c:	andeq	r4, r1, r4, lsl #22
   11670:	andeq	r5, r1, r7, lsr #1
   11674:	andeq	r6, r2, r8, lsr #2
   11678:	andeq	r6, r2, r0, lsl #3
   1167c:	strheq	r5, [r1], -r1
   11680:	andeq	r5, r1, sl, ror r0
   11684:	andeq	r6, r2, ip, lsl #3
   11688:			; <UNDEFINED> instruction: 0x00014fbb
   1168c:	andeq	r5, r1, r6, lsl #1
   11690:	andeq	r4, r1, fp, ror #23
   11694:	muleq	r1, r6, r0
   11698:	andeq	r6, r2, r0, lsr r1
   1169c:	andeq	r4, r1, lr, ror #30
   116a0:	ldrdeq	r5, [r1], -r3
   116a4:	muleq	r2, r4, r1
   116a8:	strdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   116ac:	andeq	r5, r1, r4, lsl #2
   116b0:	andeq	r5, r1, r0, lsl r1
   116b4:	andeq	r5, r1, r6, lsl r1
   116b8:	andeq	r5, r1, fp, lsl r1
   116bc:	andeq	r5, r1, r0, lsr #2
   116c0:	andeq	r5, r1, r7, lsr #2
   116c4:	andeq	r5, r1, ip, lsr #2
   116c8:	andeq	r5, r1, r2, lsr r1
   116cc:	ldrdeq	r4, [r1], -r8
   116d0:	andeq	r5, r1, r7, lsr r1
   116d4:	andeq	r5, r1, ip, lsr r1
   116d8:	andeq	r5, r1, r2, asr #2
   116dc:	ldrdeq	r5, [r1], -r2
   116e0:	mov	fp, #0
   116e4:	mov	lr, #0
   116e8:	pop	{r1}		; (ldr r1, [sp], #4)
   116ec:	mov	r2, sp
   116f0:	push	{r2}		; (str r2, [sp, #-4]!)
   116f4:	push	{r0}		; (str r0, [sp, #-4]!)
   116f8:	ldr	ip, [pc, #16]	; 11710 <putchar_unlocked@plt+0x4b4>
   116fc:	push	{ip}		; (str ip, [sp, #-4]!)
   11700:	ldr	r0, [pc, #12]	; 11714 <putchar_unlocked@plt+0x4b8>
   11704:	ldr	r3, [pc, #12]	; 11718 <putchar_unlocked@plt+0x4bc>
   11708:	bl	110ac <__libc_start_main@plt>
   1170c:	bl	11244 <abort@plt>
   11710:	muleq	r1, r4, sl
   11714:	andeq	r1, r1, r0, lsl #5
   11718:	andeq	r4, r1, r4, lsr sl
   1171c:	ldr	r3, [pc, #20]	; 11738 <putchar_unlocked@plt+0x4dc>
   11720:	ldr	r2, [pc, #20]	; 1173c <putchar_unlocked@plt+0x4e0>
   11724:	add	r3, pc, r3
   11728:	ldr	r2, [r3, r2]
   1172c:	cmp	r2, #0
   11730:	bxeq	lr
   11734:	b	110e8 <__gmon_start__@plt>
   11738:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1173c:	andeq	r0, r0, ip, lsl r1
   11740:	ldr	r0, [pc, #24]	; 11760 <putchar_unlocked@plt+0x504>
   11744:	ldr	r3, [pc, #24]	; 11764 <putchar_unlocked@plt+0x508>
   11748:	cmp	r3, r0
   1174c:	bxeq	lr
   11750:	ldr	r3, [pc, #16]	; 11768 <putchar_unlocked@plt+0x50c>
   11754:	cmp	r3, #0
   11758:	bxeq	lr
   1175c:	bx	r3
   11760:	andeq	r6, r2, r8, ror r1
   11764:	andeq	r6, r2, r8, ror r1
   11768:	andeq	r0, r0, r0
   1176c:	ldr	r0, [pc, #36]	; 11798 <putchar_unlocked@plt+0x53c>
   11770:	ldr	r1, [pc, #36]	; 1179c <putchar_unlocked@plt+0x540>
   11774:	sub	r1, r1, r0
   11778:	asr	r1, r1, #2
   1177c:	add	r1, r1, r1, lsr #31
   11780:	asrs	r1, r1, #1
   11784:	bxeq	lr
   11788:	ldr	r3, [pc, #16]	; 117a0 <putchar_unlocked@plt+0x544>
   1178c:	cmp	r3, #0
   11790:	bxeq	lr
   11794:	bx	r3
   11798:	andeq	r6, r2, r8, ror r1
   1179c:	andeq	r6, r2, r8, ror r1
   117a0:	andeq	r0, r0, r0
   117a4:	push	{r4, lr}
   117a8:	ldr	r4, [pc, #24]	; 117c8 <putchar_unlocked@plt+0x56c>
   117ac:	ldrb	r3, [r4]
   117b0:	cmp	r3, #0
   117b4:	popne	{r4, pc}
   117b8:	bl	11740 <putchar_unlocked@plt+0x4e4>
   117bc:	mov	r3, #1
   117c0:	strb	r3, [r4]
   117c4:	pop	{r4, pc}
   117c8:	muleq	r2, r0, r1
   117cc:	b	1176c <putchar_unlocked@plt+0x510>
   117d0:	add	r2, r1, r2
   117d4:	cmp	r2, r1
   117d8:	bls	117e8 <putchar_unlocked@plt+0x58c>
   117dc:	ldrb	r3, [r1], #1
   117e0:	cmp	r3, #0
   117e4:	bne	117f4 <putchar_unlocked@plt+0x598>
   117e8:	mov	r3, #0
   117ec:	strb	r3, [r0]
   117f0:	bx	lr
   117f4:	strb	r3, [r0], #1
   117f8:	b	117d4 <putchar_unlocked@plt+0x578>
   117fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11800:	mov	r6, r0
   11804:	mov	r7, r1
   11808:	sub	r6, r6, #1
   1180c:	mov	r4, #0
   11810:	bl	11124 <strlen@plt>
   11814:	add	r5, r0, #1
   11818:	mov	r2, r6
   1181c:	ldrb	r3, [r2, #1]!
   11820:	cmp	r3, #38	; 0x26
   11824:	addeq	r4, r4, #1
   11828:	beq	1181c <putchar_unlocked@plt+0x5c0>
   1182c:	cmp	r3, #0
   11830:	bne	1181c <putchar_unlocked@plt+0x5c0>
   11834:	cmp	r4, #0
   11838:	beq	11860 <putchar_unlocked@plt+0x604>
   1183c:	mov	r0, r7
   11840:	sub	r4, r4, #1
   11844:	bl	11124 <strlen@plt>
   11848:	umull	r0, r1, r0, r4
   1184c:	cmp	r1, #0
   11850:	bne	1185c <putchar_unlocked@plt+0x600>
   11854:	adds	r5, r5, r0
   11858:	bcc	11860 <putchar_unlocked@plt+0x604>
   1185c:	bl	145a0 <putchar_unlocked@plt+0x3344>
   11860:	mov	r0, r5
   11864:	add	r8, r7, #1
   11868:	bl	142e8 <putchar_unlocked@plt+0x308c>
   1186c:	mov	r5, r0
   11870:	mov	r4, r0
   11874:	ldrb	r3, [r6, #1]!
   11878:	cmp	r3, #0
   1187c:	bne	1188c <putchar_unlocked@plt+0x630>
   11880:	mov	r0, r5
   11884:	strb	r3, [r4]
   11888:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1188c:	cmp	r3, #38	; 0x26
   11890:	strbne	r3, [r4], #1
   11894:	bne	11874 <putchar_unlocked@plt+0x618>
   11898:	bl	1110c <__ctype_b_loc@plt>
   1189c:	ldrb	r9, [r7]
   118a0:	ldr	r2, [r0]
   118a4:	lsl	r3, r9, #1
   118a8:	ldrh	r3, [r2, r3]
   118ac:	tst	r3, #512	; 0x200
   118b0:	moveq	r3, r7
   118b4:	beq	118cc <putchar_unlocked@plt+0x670>
   118b8:	bl	110dc <__ctype_toupper_loc@plt>
   118bc:	ldr	r2, [r0]
   118c0:	mov	r3, r8
   118c4:	ldr	r2, [r2, r9, lsl #2]
   118c8:	strb	r2, [r4], #1
   118cc:	sub	r3, r3, #1
   118d0:	ldrb	r2, [r3, #1]!
   118d4:	cmp	r2, #0
   118d8:	beq	11874 <putchar_unlocked@plt+0x618>
   118dc:	strb	r2, [r4], #1
   118e0:	b	118d0 <putchar_unlocked@plt+0x674>
   118e4:	push	{r4, r5, r6, r7, r8, lr}
   118e8:	sub	sp, sp, #1024	; 0x400
   118ec:	mov	r5, r0
   118f0:	bl	10f5c <getpwnam@plt>
   118f4:	mov	r4, r0
   118f8:	mov	r2, #5
   118fc:	ldr	r1, [pc, #632]	; 11b7c <putchar_unlocked@plt+0x920>
   11900:	mov	r0, #0
   11904:	bl	11004 <dcgettext@plt>
   11908:	mov	r1, r0
   1190c:	mov	r0, #1
   11910:	bl	11178 <__printf_chk@plt>
   11914:	mov	r2, r5
   11918:	ldr	r1, [pc, #608]	; 11b80 <putchar_unlocked@plt+0x924>
   1191c:	mov	r0, #1
   11920:	bl	11178 <__printf_chk@plt>
   11924:	mov	r2, #5
   11928:	ldr	r1, [pc, #596]	; 11b84 <putchar_unlocked@plt+0x928>
   1192c:	mov	r0, #0
   11930:	bl	11004 <dcgettext@plt>
   11934:	mov	r1, r0
   11938:	mov	r0, #1
   1193c:	bl	11178 <__printf_chk@plt>
   11940:	cmp	r4, #0
   11944:	bne	11970 <putchar_unlocked@plt+0x714>
   11948:	mov	r2, #5
   1194c:	ldr	r1, [pc, #564]	; 11b88 <putchar_unlocked@plt+0x92c>
   11950:	mov	r0, r4
   11954:	bl	11004 <dcgettext@plt>
   11958:	mov	r2, r0
   1195c:	ldr	r1, [pc, #552]	; 11b8c <putchar_unlocked@plt+0x930>
   11960:	mov	r0, #1
   11964:	bl	11178 <__printf_chk@plt>
   11968:	add	sp, sp, #1024	; 0x400
   1196c:	pop	{r4, r5, r6, r7, r8, pc}
   11970:	mov	r1, #44	; 0x2c
   11974:	ldr	r0, [r4, #16]
   11978:	bl	11130 <strchr@plt>
   1197c:	cmp	r0, #0
   11980:	movne	r3, #0
   11984:	strbne	r3, [r0]
   11988:	ldr	r1, [r4]
   1198c:	ldr	r0, [r4, #16]
   11990:	bl	117fc <putchar_unlocked@plt+0x5a0>
   11994:	mov	r2, r0
   11998:	mov	r5, r0
   1199c:	ldr	r1, [pc, #488]	; 11b8c <putchar_unlocked@plt+0x930>
   119a0:	mov	r0, #1
   119a4:	bl	11178 <__printf_chk@plt>
   119a8:	mov	r0, r5
   119ac:	ldr	r5, [pc, #476]	; 11b90 <putchar_unlocked@plt+0x934>
   119b0:	bl	12404 <putchar_unlocked@plt+0x11a8>
   119b4:	mov	r0, #10
   119b8:	bl	1125c <putchar_unlocked@plt>
   119bc:	ldrb	r3, [r5]
   119c0:	cmp	r3, #0
   119c4:	beq	11a28 <putchar_unlocked@plt+0x7cc>
   119c8:	mov	r2, #5
   119cc:	ldr	r1, [pc, #448]	; 11b94 <putchar_unlocked@plt+0x938>
   119d0:	mov	r0, #0
   119d4:	bl	11004 <dcgettext@plt>
   119d8:	mov	r1, r0
   119dc:	mov	r0, #1
   119e0:	bl	11178 <__printf_chk@plt>
   119e4:	ldr	r1, [pc, #428]	; 11b98 <putchar_unlocked@plt+0x93c>
   119e8:	mov	r0, #1
   119ec:	ldr	r2, [r4, #20]
   119f0:	bl	11178 <__printf_chk@plt>
   119f4:	mov	r2, #5
   119f8:	ldr	r1, [pc, #412]	; 11b9c <putchar_unlocked@plt+0x940>
   119fc:	mov	r0, #0
   11a00:	bl	11004 <dcgettext@plt>
   11a04:	mov	r1, r0
   11a08:	mov	r0, #1
   11a0c:	bl	11178 <__printf_chk@plt>
   11a10:	ldr	r1, [pc, #372]	; 11b8c <putchar_unlocked@plt+0x930>
   11a14:	mov	r0, #1
   11a18:	ldr	r2, [r4, #24]
   11a1c:	bl	11178 <__printf_chk@plt>
   11a20:	mov	r0, #10
   11a24:	bl	1125c <putchar_unlocked@plt>
   11a28:	ldrb	r3, [r5, #1]
   11a2c:	cmp	r3, #0
   11a30:	beq	11ab8 <putchar_unlocked@plt+0x85c>
   11a34:	ldr	r0, [r4, #20]
   11a38:	bl	11124 <strlen@plt>
   11a3c:	add	r0, r0, #10
   11a40:	bl	142e8 <putchar_unlocked@plt+0x308c>
   11a44:	ldr	r1, [r4, #20]
   11a48:	mov	r6, r0
   11a4c:	bl	10fec <stpcpy@plt>
   11a50:	ldr	r1, [pc, #328]	; 11ba0 <putchar_unlocked@plt+0x944>
   11a54:	bl	11064 <strcpy@plt>
   11a58:	ldr	r1, [pc, #324]	; 11ba4 <putchar_unlocked@plt+0x948>
   11a5c:	mov	r0, r6
   11a60:	bl	111e4 <fopen64@plt>
   11a64:	subs	r7, r0, #0
   11a68:	beq	11ab0 <putchar_unlocked@plt+0x854>
   11a6c:	ldr	r8, [pc, #308]	; 11ba8 <putchar_unlocked@plt+0x94c>
   11a70:	mov	r2, #5
   11a74:	mov	r0, #0
   11a78:	ldr	r1, [pc, #300]	; 11bac <putchar_unlocked@plt+0x950>
   11a7c:	bl	11004 <dcgettext@plt>
   11a80:	mov	r1, r0
   11a84:	mov	r0, #1
   11a88:	bl	11178 <__printf_chk@plt>
   11a8c:	mov	r2, #1024	; 0x400
   11a90:	mov	r3, r7
   11a94:	mov	r1, #1
   11a98:	mov	r0, sp
   11a9c:	bl	11214 <fread_unlocked@plt>
   11aa0:	subs	r2, r0, #0
   11aa4:	bne	11b54 <putchar_unlocked@plt+0x8f8>
   11aa8:	mov	r0, r7
   11aac:	bl	1230c <putchar_unlocked@plt+0x10b0>
   11ab0:	mov	r0, r6
   11ab4:	bl	12404 <putchar_unlocked@plt+0x11a8>
   11ab8:	ldrb	r3, [r5, #2]
   11abc:	cmp	r3, #0
   11ac0:	beq	11b48 <putchar_unlocked@plt+0x8ec>
   11ac4:	ldr	r0, [r4, #20]
   11ac8:	bl	11124 <strlen@plt>
   11acc:	add	r0, r0, #7
   11ad0:	bl	142e8 <putchar_unlocked@plt+0x308c>
   11ad4:	ldr	r1, [r4, #20]
   11ad8:	mov	r5, r0
   11adc:	bl	10fec <stpcpy@plt>
   11ae0:	ldr	r1, [pc, #200]	; 11bb0 <putchar_unlocked@plt+0x954>
   11ae4:	bl	11064 <strcpy@plt>
   11ae8:	ldr	r1, [pc, #180]	; 11ba4 <putchar_unlocked@plt+0x948>
   11aec:	mov	r0, r5
   11af0:	bl	111e4 <fopen64@plt>
   11af4:	subs	r4, r0, #0
   11af8:	beq	11b40 <putchar_unlocked@plt+0x8e4>
   11afc:	ldr	r6, [pc, #164]	; 11ba8 <putchar_unlocked@plt+0x94c>
   11b00:	mov	r2, #5
   11b04:	mov	r0, #0
   11b08:	ldr	r1, [pc, #164]	; 11bb4 <putchar_unlocked@plt+0x958>
   11b0c:	bl	11004 <dcgettext@plt>
   11b10:	mov	r1, r0
   11b14:	mov	r0, #1
   11b18:	bl	11178 <__printf_chk@plt>
   11b1c:	mov	r2, #1024	; 0x400
   11b20:	mov	r3, r4
   11b24:	mov	r1, #1
   11b28:	mov	r0, sp
   11b2c:	bl	11214 <fread_unlocked@plt>
   11b30:	subs	r2, r0, #0
   11b34:	bne	11b68 <putchar_unlocked@plt+0x90c>
   11b38:	mov	r0, r4
   11b3c:	bl	1230c <putchar_unlocked@plt+0x10b0>
   11b40:	mov	r0, r5
   11b44:	bl	12404 <putchar_unlocked@plt+0x11a8>
   11b48:	mov	r0, #10
   11b4c:	bl	1125c <putchar_unlocked@plt>
   11b50:	b	11968 <putchar_unlocked@plt+0x70c>
   11b54:	mov	r1, #1
   11b58:	mov	r0, sp
   11b5c:	ldr	r3, [r8]
   11b60:	bl	10fd4 <fwrite_unlocked@plt>
   11b64:	b	11a8c <putchar_unlocked@plt+0x830>
   11b68:	mov	r1, #1
   11b6c:	mov	r0, sp
   11b70:	ldr	r3, [r6]
   11b74:	bl	10fd4 <fwrite_unlocked@plt>
   11b78:	b	11b1c <putchar_unlocked@plt+0x8c0>
   11b7c:	andeq	r4, r1, r4, lsr fp
   11b80:	andeq	r4, r1, r1, asr #22
   11b84:	andeq	r4, r1, r7, asr #22
   11b88:	andeq	r4, r1, r6, asr fp
   11b8c:	ldrdeq	r5, [r1], -r2
   11b90:	andeq	r6, r2, r8, lsr #2
   11b94:	andeq	r4, r1, fp, asr fp
   11b98:	andeq	r4, r1, r7, ror #22
   11b9c:	andeq	r4, r1, sp, ror #22
   11ba0:	andeq	r4, r1, r5, ror fp
   11ba4:	andeq	r5, r1, sp, asr #3
   11ba8:	andeq	r6, r2, ip, lsl #3
   11bac:	andeq	r4, r1, pc, ror fp
   11bb0:	andeq	r4, r1, r9, lsl #23
   11bb4:	muleq	r1, r0, fp
   11bb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bbc:	mov	r5, r0
   11bc0:	sub	sp, sp, #416	; 0x1a0
   11bc4:	add	sl, r5, #8
   11bc8:	mov	r2, #32
   11bcc:	mov	r1, sl
   11bd0:	ldrb	r3, [r0, #8]
   11bd4:	cmp	r3, #47	; 0x2f
   11bd8:	ldrne	r3, [pc, #732]	; 11ebc <putchar_unlocked@plt+0xc60>
   11bdc:	addeq	r0, sp, #8
   11be0:	ldrne	r0, [r3]
   11be4:	ldrhne	r3, [r3, #4]
   11be8:	strne	r0, [sp, #8]
   11bec:	addne	r0, sp, #13
   11bf0:	strhne	r3, [sp, #12]
   11bf4:	bl	117d0 <putchar_unlocked@plt+0x574>
   11bf8:	add	r1, sp, #48	; 0x30
   11bfc:	add	r0, sp, #8
   11c00:	bl	14ab0 <putchar_unlocked@plt+0x3854>
   11c04:	cmp	r0, #0
   11c08:	movne	r9, #63	; 0x3f
   11c0c:	movne	r8, #0
   11c10:	bne	11c28 <putchar_unlocked@plt+0x9cc>
   11c14:	ldr	r3, [sp, #64]	; 0x40
   11c18:	ldr	r8, [sp, #120]	; 0x78
   11c1c:	tst	r3, #16
   11c20:	movne	r9, #32
   11c24:	moveq	r9, #42	; 0x2a
   11c28:	ldr	r7, [pc, #656]	; 11ec0 <putchar_unlocked@plt+0xc64>
   11c2c:	add	r6, r5, #44	; 0x2c
   11c30:	mov	r2, #32
   11c34:	mov	r3, r6
   11c38:	mov	r0, #1
   11c3c:	ldr	r1, [pc, #640]	; 11ec4 <putchar_unlocked@plt+0xc68>
   11c40:	add	r4, sp, #156	; 0x9c
   11c44:	bl	11178 <__printf_chk@plt>
   11c48:	ldrb	r3, [r7, #3]
   11c4c:	cmp	r3, #0
   11c50:	beq	11c90 <putchar_unlocked@plt+0xa34>
   11c54:	mov	r1, r6
   11c58:	mov	r2, #32
   11c5c:	mov	r0, r4
   11c60:	bl	117d0 <putchar_unlocked@plt+0x574>
   11c64:	mov	r0, r4
   11c68:	bl	10f5c <getpwnam@plt>
   11c6c:	subs	r6, r0, #0
   11c70:	bne	11dfc <putchar_unlocked@plt+0xba0>
   11c74:	mov	r2, #5
   11c78:	ldr	r1, [pc, #584]	; 11ec8 <putchar_unlocked@plt+0xc6c>
   11c7c:	bl	11004 <dcgettext@plt>
   11c80:	mov	r2, r0
   11c84:	ldr	r1, [pc, #576]	; 11ecc <putchar_unlocked@plt+0xc70>
   11c88:	mov	r0, #1
   11c8c:	bl	11178 <__printf_chk@plt>
   11c90:	mov	r3, #32
   11c94:	mov	r2, r9
   11c98:	ldr	r1, [pc, #560]	; 11ed0 <putchar_unlocked@plt+0xc74>
   11c9c:	mov	r0, #1
   11ca0:	str	sl, [sp]
   11ca4:	bl	11178 <__printf_chk@plt>
   11ca8:	ldrb	r3, [r7, #4]
   11cac:	cmp	r3, #0
   11cb0:	beq	11d34 <putchar_unlocked@plt+0xad8>
   11cb4:	cmp	r8, #0
   11cb8:	beq	11e64 <putchar_unlocked@plt+0xc08>
   11cbc:	ldr	r6, [pc, #528]	; 11ed4 <putchar_unlocked@plt+0xc78>
   11cc0:	ldr	r3, [r6, #48]	; 0x30
   11cc4:	cmp	r3, #0
   11cc8:	bne	11cd4 <putchar_unlocked@plt+0xa78>
   11ccc:	add	r0, r6, #48	; 0x30
   11cd0:	bl	10fc8 <time@plt>
   11cd4:	ldr	r0, [r6, #48]	; 0x30
   11cd8:	sub	r0, r0, r8
   11cdc:	cmp	r0, #59	; 0x3b
   11ce0:	ldrle	r2, [pc, #496]	; 11ed8 <putchar_unlocked@plt+0xc7c>
   11ce4:	ble	11d28 <putchar_unlocked@plt+0xacc>
   11ce8:	ldr	r3, [pc, #492]	; 11edc <putchar_unlocked@plt+0xc80>
   11cec:	cmp	r0, r3
   11cf0:	bgt	11e40 <putchar_unlocked@plt+0xbe4>
   11cf4:	mov	r3, #3600	; 0xe10
   11cf8:	mov	r1, #1
   11cfc:	sdiv	r2, r0, r3
   11d00:	mls	r0, r3, r2, r0
   11d04:	mov	r3, #60	; 0x3c
   11d08:	str	r2, [sp]
   11d0c:	mov	r2, #13
   11d10:	udiv	r0, r0, r3
   11d14:	ldr	r3, [pc, #452]	; 11ee0 <putchar_unlocked@plt+0xc84>
   11d18:	str	r0, [sp, #4]
   11d1c:	ldr	r0, [pc, #432]	; 11ed4 <putchar_unlocked@plt+0xc78>
   11d20:	bl	11148 <__sprintf_chk@plt>
   11d24:	ldr	r2, [pc, #424]	; 11ed4 <putchar_unlocked@plt+0xc78>
   11d28:	mov	r0, #1
   11d2c:	ldr	r1, [pc, #432]	; 11ee4 <putchar_unlocked@plt+0xc88>
   11d30:	bl	11178 <__printf_chk@plt>
   11d34:	ldr	r3, [r5, #340]	; 0x154
   11d38:	mov	r0, r4
   11d3c:	str	r3, [sp, #156]	; 0x9c
   11d40:	bl	110d0 <localtime@plt>
   11d44:	subs	r3, r0, #0
   11d48:	beq	11e7c <putchar_unlocked@plt+0xc20>
   11d4c:	ldr	r6, [pc, #384]	; 11ed4 <putchar_unlocked@plt+0xc78>
   11d50:	mov	r1, #33	; 0x21
   11d54:	add	r0, r6, #13
   11d58:	ldr	r2, [r6, #52]	; 0x34
   11d5c:	bl	110b8 <strftime@plt>
   11d60:	add	r2, r6, #13
   11d64:	ldr	r1, [pc, #380]	; 11ee8 <putchar_unlocked@plt+0xc8c>
   11d68:	mov	r0, #1
   11d6c:	bl	11178 <__printf_chk@plt>
   11d70:	ldrb	r3, [r7, #5]
   11d74:	cmp	r3, #0
   11d78:	beq	11dec <putchar_unlocked@plt+0xb90>
   11d7c:	ldrb	r3, [r5, #76]	; 0x4c
   11d80:	cmp	r3, #0
   11d84:	beq	11dec <putchar_unlocked@plt+0xb90>
   11d88:	add	r1, r5, #76	; 0x4c
   11d8c:	mov	r2, #256	; 0x100
   11d90:	mov	r0, r4
   11d94:	bl	117d0 <putchar_unlocked@plt+0x574>
   11d98:	mov	r1, #58	; 0x3a
   11d9c:	mov	r0, r4
   11da0:	bl	11130 <strchr@plt>
   11da4:	subs	r5, r0, #0
   11da8:	movne	r3, #0
   11dac:	strbne	r3, [r5], #1
   11db0:	ldrb	r3, [sp, #156]	; 0x9c
   11db4:	cmp	r3, #0
   11db8:	bne	11e94 <putchar_unlocked@plt+0xc38>
   11dbc:	mov	r6, r4
   11dc0:	cmp	r5, #0
   11dc4:	beq	11ea8 <putchar_unlocked@plt+0xc4c>
   11dc8:	mov	r3, r5
   11dcc:	mov	r2, r6
   11dd0:	ldr	r1, [pc, #276]	; 11eec <putchar_unlocked@plt+0xc90>
   11dd4:	mov	r0, #1
   11dd8:	bl	11178 <__printf_chk@plt>
   11ddc:	cmp	r6, r4
   11de0:	beq	11dec <putchar_unlocked@plt+0xb90>
   11de4:	mov	r0, r6
   11de8:	bl	12404 <putchar_unlocked@plt+0x11a8>
   11dec:	mov	r0, #10
   11df0:	bl	1125c <putchar_unlocked@plt>
   11df4:	add	sp, sp, #416	; 0x1a0
   11df8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dfc:	mov	r1, #44	; 0x2c
   11e00:	ldr	r0, [r6, #16]
   11e04:	bl	11130 <strchr@plt>
   11e08:	cmp	r0, #0
   11e0c:	movne	r3, #0
   11e10:	strbne	r3, [r0]
   11e14:	ldr	r1, [r6]
   11e18:	ldr	r0, [r6, #16]
   11e1c:	bl	117fc <putchar_unlocked@plt+0x5a0>
   11e20:	mov	r6, r0
   11e24:	mov	r2, r0
   11e28:	ldr	r1, [pc, #192]	; 11ef0 <putchar_unlocked@plt+0xc94>
   11e2c:	mov	r0, #1
   11e30:	bl	11178 <__printf_chk@plt>
   11e34:	mov	r0, r6
   11e38:	bl	12404 <putchar_unlocked@plt+0x11a8>
   11e3c:	b	11c90 <putchar_unlocked@plt+0xa34>
   11e40:	ldr	r3, [pc, #172]	; 11ef4 <putchar_unlocked@plt+0xc98>
   11e44:	mov	r2, #13
   11e48:	mov	r1, #1
   11e4c:	sdiv	r0, r0, r3
   11e50:	ldr	r3, [pc, #160]	; 11ef8 <putchar_unlocked@plt+0xc9c>
   11e54:	str	r0, [sp]
   11e58:	ldr	r0, [pc, #116]	; 11ed4 <putchar_unlocked@plt+0xc78>
   11e5c:	bl	11148 <__sprintf_chk@plt>
   11e60:	b	11d24 <putchar_unlocked@plt+0xac8>
   11e64:	mov	r2, #5
   11e68:	ldr	r1, [pc, #140]	; 11efc <putchar_unlocked@plt+0xca0>
   11e6c:	mov	r0, r8
   11e70:	bl	11004 <dcgettext@plt>
   11e74:	mov	r2, r0
   11e78:	b	11d28 <putchar_unlocked@plt+0xacc>
   11e7c:	ldr	r0, [sp, #156]	; 0x9c
   11e80:	ldr	r2, [pc, #120]	; 11f00 <putchar_unlocked@plt+0xca4>
   11e84:	asr	r1, r0, #31
   11e88:	bl	12548 <putchar_unlocked@plt+0x12ec>
   11e8c:	mov	r2, r0
   11e90:	b	11d64 <putchar_unlocked@plt+0xb08>
   11e94:	mov	r0, r4
   11e98:	bl	121fc <putchar_unlocked@plt+0xfa0>
   11e9c:	subs	r6, r0, #0
   11ea0:	bne	11dc0 <putchar_unlocked@plt+0xb64>
   11ea4:	b	11dbc <putchar_unlocked@plt+0xb60>
   11ea8:	mov	r2, r6
   11eac:	ldr	r1, [pc, #52]	; 11ee8 <putchar_unlocked@plt+0xc8c>
   11eb0:	mov	r0, #1
   11eb4:	bl	11178 <__printf_chk@plt>
   11eb8:	b	11ddc <putchar_unlocked@plt+0xb80>
   11ebc:	muleq	r1, sp, fp
   11ec0:	andeq	r6, r2, r8, lsr #2
   11ec4:	andeq	r4, r1, r2, asr #23
   11ec8:	andeq	r4, r1, r3, lsr #23
   11ecc:	andeq	r4, r1, pc, lsr #23
   11ed0:			; <UNDEFINED> instruction: 0x00014bbf
   11ed4:	muleq	r2, r4, r1
   11ed8:	muleq	r1, r7, fp
   11edc:	andeq	r5, r1, pc, ror r1
   11ee0:	andeq	r4, r1, r9, asr #23
   11ee4:	ldrdeq	r4, [r1], -r8
   11ee8:	ldrdeq	r5, [r1], -r2
   11eec:	andeq	r4, r1, r4, ror #23
   11ef0:			; <UNDEFINED> instruction: 0x00014bb5
   11ef4:	andeq	r5, r1, r0, lsl #3
   11ef8:	ldrdeq	r4, [r1], -r3
   11efc:	ldrdeq	r4, [r1], -lr
   11f00:	andeq	r6, r2, r1, lsr #3
   11f04:	subs	r5, r0, #0
   11f08:	push	{r7, lr}
   11f0c:	sub	sp, sp, #56	; 0x38
   11f10:	ldr	r4, [pc, #504]	; 12110 <putchar_unlocked@plt+0xeb4>
   11f14:	beq	11f4c <putchar_unlocked@plt+0xcf0>
   11f18:	mov	r2, #5
   11f1c:	mov	r0, #0
   11f20:	ldr	r3, [pc, #492]	; 12114 <putchar_unlocked@plt+0xeb8>
   11f24:	ldr	r1, [pc, #492]	; 12118 <putchar_unlocked@plt+0xebc>
   11f28:	ldr	r6, [r3]
   11f2c:	bl	11004 <dcgettext@plt>
   11f30:	mov	r2, r0
   11f34:	mov	r1, #1
   11f38:	ldr	r3, [r4]
   11f3c:	mov	r0, r6
   11f40:	bl	11190 <__fprintf_chk@plt>
   11f44:	mov	r0, r5
   11f48:	bl	11118 <exit@plt>
   11f4c:	mov	r2, #5
   11f50:	ldr	r1, [pc, #452]	; 1211c <putchar_unlocked@plt+0xec0>
   11f54:	mov	r6, sp
   11f58:	bl	11004 <dcgettext@plt>
   11f5c:	ldr	r2, [r4]
   11f60:	mov	r1, r0
   11f64:	mov	r0, #1
   11f68:	bl	11178 <__printf_chk@plt>
   11f6c:	ldr	r4, [pc, #428]	; 12120 <putchar_unlocked@plt+0xec4>
   11f70:	mov	r2, #5
   11f74:	mov	r0, r5
   11f78:	ldr	r1, [pc, #420]	; 12124 <putchar_unlocked@plt+0xec8>
   11f7c:	bl	11004 <dcgettext@plt>
   11f80:	ldr	r7, [pc, #416]	; 12128 <putchar_unlocked@plt+0xecc>
   11f84:	ldr	r1, [r4]
   11f88:	bl	10f44 <fputs_unlocked@plt>
   11f8c:	mov	r2, #5
   11f90:	ldr	r1, [pc, #404]	; 1212c <putchar_unlocked@plt+0xed0>
   11f94:	mov	r0, r5
   11f98:	bl	11004 <dcgettext@plt>
   11f9c:	ldr	r1, [r4]
   11fa0:	bl	10f44 <fputs_unlocked@plt>
   11fa4:	mov	r2, #5
   11fa8:	ldr	r1, [pc, #384]	; 12130 <putchar_unlocked@plt+0xed4>
   11fac:	mov	r0, r5
   11fb0:	bl	11004 <dcgettext@plt>
   11fb4:	ldr	r1, [r4]
   11fb8:	bl	10f44 <fputs_unlocked@plt>
   11fbc:	mov	r2, #5
   11fc0:	ldr	r1, [pc, #364]	; 12134 <putchar_unlocked@plt+0xed8>
   11fc4:	mov	r0, r5
   11fc8:	bl	11004 <dcgettext@plt>
   11fcc:	ldr	r1, [r4]
   11fd0:	bl	10f44 <fputs_unlocked@plt>
   11fd4:	mov	r2, #5
   11fd8:	ldr	r1, [pc, #344]	; 12138 <putchar_unlocked@plt+0xedc>
   11fdc:	mov	r0, r5
   11fe0:	bl	11004 <dcgettext@plt>
   11fe4:	mov	r1, r0
   11fe8:	ldr	r2, [pc, #332]	; 1213c <putchar_unlocked@plt+0xee0>
   11fec:	mov	r0, #1
   11ff0:	bl	11178 <__printf_chk@plt>
   11ff4:	ldr	lr, [pc, #324]	; 12140 <putchar_unlocked@plt+0xee4>
   11ff8:	mov	ip, sp
   11ffc:	ldm	lr!, {r0, r1, r2, r3}
   12000:	stmia	ip!, {r0, r1, r2, r3}
   12004:	ldm	lr!, {r0, r1, r2, r3}
   12008:	stmia	ip!, {r0, r1, r2, r3}
   1200c:	ldm	lr!, {r0, r1, r2, r3}
   12010:	stmia	ip!, {r0, r1, r2, r3}
   12014:	ldm	lr, {r0, r1}
   12018:	stm	ip, {r0, r1}
   1201c:	ldr	r1, [r6]
   12020:	cmp	r1, #0
   12024:	bne	120c8 <putchar_unlocked@plt+0xe6c>
   12028:	ldr	r6, [r6, #4]
   1202c:	mov	r2, #5
   12030:	mov	r0, #0
   12034:	ldr	r7, [pc, #236]	; 12128 <putchar_unlocked@plt+0xecc>
   12038:	ldr	r1, [pc, #260]	; 12144 <putchar_unlocked@plt+0xee8>
   1203c:	cmp	r6, #0
   12040:	moveq	r6, r7
   12044:	bl	11004 <dcgettext@plt>
   12048:	mov	r1, r0
   1204c:	ldr	r3, [pc, #244]	; 12148 <putchar_unlocked@plt+0xeec>
   12050:	mov	r0, #1
   12054:	ldr	r2, [pc, #240]	; 1214c <putchar_unlocked@plt+0xef0>
   12058:	bl	11178 <__printf_chk@plt>
   1205c:	mov	r1, #0
   12060:	mov	r0, #5
   12064:	bl	111c0 <setlocale@plt>
   12068:	cmp	r0, #0
   1206c:	bne	120e0 <putchar_unlocked@plt+0xe84>
   12070:	mov	r2, #5
   12074:	ldr	r1, [pc, #212]	; 12150 <putchar_unlocked@plt+0xef4>
   12078:	mov	r0, #0
   1207c:	bl	11004 <dcgettext@plt>
   12080:	mov	r1, r0
   12084:	ldr	r3, [pc, #156]	; 12128 <putchar_unlocked@plt+0xecc>
   12088:	mov	r0, #1
   1208c:	ldr	r2, [pc, #180]	; 12148 <putchar_unlocked@plt+0xeec>
   12090:	bl	11178 <__printf_chk@plt>
   12094:	mov	r2, #5
   12098:	ldr	r1, [pc, #180]	; 12154 <putchar_unlocked@plt+0xef8>
   1209c:	mov	r0, #0
   120a0:	bl	11004 <dcgettext@plt>
   120a4:	ldr	r2, [pc, #172]	; 12158 <putchar_unlocked@plt+0xefc>
   120a8:	cmp	r6, r7
   120ac:	mov	r1, r0
   120b0:	mov	r0, #1
   120b4:	ldr	r3, [pc, #160]	; 1215c <putchar_unlocked@plt+0xf00>
   120b8:	moveq	r3, r2
   120bc:	mov	r2, r6
   120c0:	bl	11178 <__printf_chk@plt>
   120c4:	b	11f44 <putchar_unlocked@plt+0xce8>
   120c8:	mov	r0, r7
   120cc:	bl	10f68 <strcmp@plt>
   120d0:	cmp	r0, #0
   120d4:	beq	12028 <putchar_unlocked@plt+0xdcc>
   120d8:	add	r6, r6, #8
   120dc:	b	1201c <putchar_unlocked@plt+0xdc0>
   120e0:	mov	r2, #3
   120e4:	ldr	r1, [pc, #116]	; 12160 <putchar_unlocked@plt+0xf04>
   120e8:	bl	11238 <strncmp@plt>
   120ec:	cmp	r0, #0
   120f0:	beq	12070 <putchar_unlocked@plt+0xe14>
   120f4:	mov	r2, #5
   120f8:	ldr	r1, [pc, #100]	; 12164 <putchar_unlocked@plt+0xf08>
   120fc:	mov	r0, #0
   12100:	bl	11004 <dcgettext@plt>
   12104:	ldr	r1, [r4]
   12108:	bl	10f44 <fputs_unlocked@plt>
   1210c:	b	12070 <putchar_unlocked@plt+0xe14>
   12110:	strdeq	r6, [r2], -ip
   12114:	andeq	r6, r2, r8, lsl #3
   12118:	strdeq	r4, [r1], -r1
   1211c:	andeq	r4, r1, r8, lsl ip
   12120:	andeq	r6, r2, ip, lsl #3
   12124:	andeq	r4, r1, r9, lsr ip
   12128:	andeq	r4, r1, fp, ror #23
   1212c:	andeq	r4, r1, r1, lsl #27
   12130:			; <UNDEFINED> instruction: 0x00014eb6
   12134:	andeq	r4, r1, r3, ror #29
   12138:	andeq	r4, r1, r9, lsl pc
   1213c:	andeq	r4, r1, lr, ror #30
   12140:	andeq	r4, r1, ip, asr #21
   12144:	andeq	r4, r1, ip, ror pc
   12148:	muleq	r1, r3, pc	; <UNPREDICTABLE>
   1214c:			; <UNDEFINED> instruction: 0x00014fbb
   12150:	andeq	r5, r1, r4, lsl r0
   12154:	andeq	r5, r1, pc, lsr #32
   12158:	andeq	r5, r1, r4, ror #2
   1215c:	andeq	r5, r1, r1, rrx
   12160:	andeq	r4, r1, r9, asr #31
   12164:	andeq	r4, r1, sp, asr #31
   12168:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1216c:	mov	r3, #2
   12170:	mov	r5, #0
   12174:	mov	r4, r1
   12178:	mov	r1, r5
   1217c:	mov	r7, r0
   12180:	ldr	r2, [pc, #112]	; 121f8 <putchar_unlocked@plt+0xf9c>
   12184:	str	r5, [sp, #4]
   12188:	str	r3, [r2]
   1218c:	add	r3, sp, #4
   12190:	bl	111fc <getaddrinfo@plt>
   12194:	cmp	r0, #0
   12198:	bne	121e8 <putchar_unlocked@plt+0xf8c>
   1219c:	ldr	r6, [sp, #4]
   121a0:	ldr	r0, [r6, #24]
   121a4:	cmp	r0, r5
   121a8:	moveq	r0, r7
   121ac:	bl	11010 <strdup@plt>
   121b0:	adds	r3, r4, #0
   121b4:	mov	r5, r0
   121b8:	movne	r3, #1
   121bc:	cmp	r0, #0
   121c0:	movne	r3, #0
   121c4:	mov	r0, r6
   121c8:	cmp	r3, #0
   121cc:	mvnne	r3, #9
   121d0:	strne	r3, [r4]
   121d4:	bl	111f0 <freeaddrinfo@plt>
   121d8:	mov	r4, r5
   121dc:	mov	r0, r4
   121e0:	add	sp, sp, #12
   121e4:	pop	{r4, r5, r6, r7, pc}
   121e8:	cmp	r4, #0
   121ec:	beq	121dc <putchar_unlocked@plt+0xf80>
   121f0:	str	r0, [r4]
   121f4:	b	121d8 <putchar_unlocked@plt+0xf7c>
   121f8:	ldrdeq	r6, [r2], -r0
   121fc:	ldr	r1, [pc]	; 12204 <putchar_unlocked@plt+0xfa8>
   12200:	b	12168 <putchar_unlocked@plt+0xf0c>
   12204:	strdeq	r6, [r2], -r0
   12208:	ldr	r3, [pc, #4]	; 12214 <putchar_unlocked@plt+0xfb8>
   1220c:	ldr	r0, [r3, #32]
   12210:	b	10f98 <gai_strerror@plt>
   12214:	ldrdeq	r6, [r2], -r0
   12218:	ldr	r3, [pc, #4]	; 12224 <putchar_unlocked@plt+0xfc8>
   1221c:	str	r0, [r3]
   12220:	bx	lr
   12224:	strdeq	r6, [r2], -r4
   12228:	ldr	r3, [pc, #4]	; 12234 <putchar_unlocked@plt+0xfd8>
   1222c:	strb	r0, [r3, #4]
   12230:	bx	lr
   12234:	strdeq	r6, [r2], -r4
   12238:	ldr	r3, [pc, #176]	; 122f0 <putchar_unlocked@plt+0x1094>
   1223c:	push	{r0, r1, r4, r5, r6, lr}
   12240:	ldr	r0, [r3]
   12244:	bl	146a4 <putchar_unlocked@plt+0x3448>
   12248:	cmp	r0, #0
   1224c:	beq	122d4 <putchar_unlocked@plt+0x1078>
   12250:	ldr	r4, [pc, #156]	; 122f4 <putchar_unlocked@plt+0x1098>
   12254:	bl	1113c <__errno_location@plt>
   12258:	mov	r5, r0
   1225c:	ldrb	r6, [r4, #4]
   12260:	cmp	r6, #0
   12264:	beq	12274 <putchar_unlocked@plt+0x1018>
   12268:	ldr	r3, [r0]
   1226c:	cmp	r3, #32
   12270:	beq	122d4 <putchar_unlocked@plt+0x1078>
   12274:	mov	r2, #5
   12278:	ldr	r1, [pc, #120]	; 122f8 <putchar_unlocked@plt+0x109c>
   1227c:	mov	r0, #0
   12280:	bl	11004 <dcgettext@plt>
   12284:	mov	r6, r0
   12288:	ldr	r0, [r4]
   1228c:	cmp	r0, #0
   12290:	beq	122c0 <putchar_unlocked@plt+0x1064>
   12294:	ldr	r4, [r5]
   12298:	bl	13ac0 <putchar_unlocked@plt+0x2864>
   1229c:	mov	r3, r0
   122a0:	ldr	r2, [pc, #84]	; 122fc <putchar_unlocked@plt+0x10a0>
   122a4:	mov	r0, #0
   122a8:	str	r6, [sp]
   122ac:	mov	r1, r4
   122b0:	bl	11094 <error@plt>
   122b4:	ldr	r3, [pc, #68]	; 12300 <putchar_unlocked@plt+0x10a4>
   122b8:	ldr	r0, [r3]
   122bc:	bl	10fa4 <_exit@plt>
   122c0:	mov	r3, r6
   122c4:	ldr	r2, [pc, #56]	; 12304 <putchar_unlocked@plt+0x10a8>
   122c8:	ldr	r1, [r5]
   122cc:	bl	11094 <error@plt>
   122d0:	b	122b4 <putchar_unlocked@plt+0x1058>
   122d4:	ldr	r3, [pc, #44]	; 12308 <putchar_unlocked@plt+0x10ac>
   122d8:	ldr	r0, [r3]
   122dc:	bl	146a4 <putchar_unlocked@plt+0x3448>
   122e0:	cmp	r0, #0
   122e4:	bne	122b4 <putchar_unlocked@plt+0x1058>
   122e8:	add	sp, sp, #8
   122ec:	pop	{r4, r5, r6, pc}
   122f0:	andeq	r6, r2, ip, lsl #3
   122f4:	strdeq	r6, [r2], -r4
   122f8:	andeq	r5, r1, r3, asr #3
   122fc:	andeq	r5, r1, pc, asr #3
   12300:	andeq	r6, r2, r4, lsr r1
   12304:	ldrdeq	r5, [r1], -r3
   12308:	andeq	r6, r2, r8, lsl #3
   1230c:	push	{r0, r1, r2, r4, r5, lr}
   12310:	mov	r4, r0
   12314:	bl	11184 <fileno@plt>
   12318:	cmp	r0, #0
   1231c:	mov	r0, r4
   12320:	bge	12330 <putchar_unlocked@plt+0x10d4>
   12324:	add	sp, sp, #12
   12328:	pop	{r4, r5, lr}
   1232c:	b	1119c <fclose@plt>
   12330:	bl	110c4 <__freading@plt>
   12334:	cmp	r0, #0
   12338:	bne	12374 <putchar_unlocked@plt+0x1118>
   1233c:	mov	r0, r4
   12340:	bl	123b4 <putchar_unlocked@plt+0x1158>
   12344:	cmp	r0, #0
   12348:	bne	123a8 <putchar_unlocked@plt+0x114c>
   1234c:	mov	r5, #0
   12350:	mov	r0, r4
   12354:	bl	1119c <fclose@plt>
   12358:	cmp	r5, #0
   1235c:	beq	1236c <putchar_unlocked@plt+0x1110>
   12360:	bl	1113c <__errno_location@plt>
   12364:	str	r5, [r0]
   12368:	mvn	r0, #0
   1236c:	add	sp, sp, #12
   12370:	pop	{r4, r5, pc}
   12374:	mov	r0, r4
   12378:	bl	11184 <fileno@plt>
   1237c:	mov	r3, #1
   12380:	mov	r2, #0
   12384:	str	r3, [sp]
   12388:	mov	r3, #0
   1238c:	bl	1104c <lseek64@plt>
   12390:	mvn	r3, #0
   12394:	mvn	r2, #0
   12398:	cmp	r1, r3
   1239c:	cmpeq	r0, r2
   123a0:	bne	1233c <putchar_unlocked@plt+0x10e0>
   123a4:	b	1234c <putchar_unlocked@plt+0x10f0>
   123a8:	bl	1113c <__errno_location@plt>
   123ac:	ldr	r5, [r0]
   123b0:	b	12350 <putchar_unlocked@plt+0x10f4>
   123b4:	push	{r0, r1, r4, lr}
   123b8:	subs	r4, r0, #0
   123bc:	bne	123d0 <putchar_unlocked@plt+0x1174>
   123c0:	mov	r0, r4
   123c4:	add	sp, sp, #8
   123c8:	pop	{r4, lr}
   123cc:	b	10f74 <fflush@plt>
   123d0:	bl	110c4 <__freading@plt>
   123d4:	cmp	r0, #0
   123d8:	beq	123c0 <putchar_unlocked@plt+0x1164>
   123dc:	ldr	r3, [r4]
   123e0:	tst	r3, #256	; 0x100
   123e4:	beq	123c0 <putchar_unlocked@plt+0x1164>
   123e8:	mov	r3, #1
   123ec:	mov	r2, #0
   123f0:	mov	r0, r4
   123f4:	str	r3, [sp]
   123f8:	mov	r3, #0
   123fc:	bl	12454 <putchar_unlocked@plt+0x11f8>
   12400:	b	123c0 <putchar_unlocked@plt+0x1164>
   12404:	push	{r0, r1, r2, r4, r5, lr}
   12408:	mov	r5, r0
   1240c:	bl	1113c <__errno_location@plt>
   12410:	mov	r4, r0
   12414:	mov	r0, r5
   12418:	ldr	r3, [r4]
   1241c:	str	r3, [sp]
   12420:	str	r3, [sp, #4]
   12424:	mov	r3, #0
   12428:	str	r3, [r4]
   1242c:	bl	10f8c <free@plt>
   12430:	ldr	r3, [r4]
   12434:	add	r2, sp, #8
   12438:	clz	r3, r3
   1243c:	lsr	r3, r3, #5
   12440:	add	r3, r2, r3, lsl #2
   12444:	ldr	r3, [r3, #-8]
   12448:	str	r3, [r4]
   1244c:	add	sp, sp, #12
   12450:	pop	{r4, r5, pc}
   12454:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   12458:	mov	r4, r0
   1245c:	ldmib	r0, {ip, lr}
   12460:	ldr	r8, [sp, #32]
   12464:	cmp	lr, ip
   12468:	bne	124d8 <putchar_unlocked@plt+0x127c>
   1246c:	ldr	ip, [r0, #16]
   12470:	ldr	lr, [r0, #20]
   12474:	cmp	lr, ip
   12478:	bne	124d8 <putchar_unlocked@plt+0x127c>
   1247c:	ldr	r5, [r0, #36]	; 0x24
   12480:	cmp	r5, #0
   12484:	bne	124d8 <putchar_unlocked@plt+0x127c>
   12488:	mov	r6, r2
   1248c:	mov	r7, r3
   12490:	bl	11184 <fileno@plt>
   12494:	mov	r2, r6
   12498:	mov	r3, r7
   1249c:	str	r8, [sp]
   124a0:	bl	1104c <lseek64@plt>
   124a4:	mvn	r3, #0
   124a8:	mvn	r2, #0
   124ac:	cmp	r1, r3
   124b0:	cmpeq	r0, r2
   124b4:	mvneq	r0, #0
   124b8:	beq	124d0 <putchar_unlocked@plt+0x1274>
   124bc:	ldr	r3, [r4]
   124c0:	strd	r0, [r4, #80]	; 0x50
   124c4:	mov	r0, r5
   124c8:	bic	r3, r3, #16
   124cc:	str	r3, [r4]
   124d0:	add	sp, sp, #8
   124d4:	pop	{r4, r5, r6, r7, r8, pc}
   124d8:	mov	r0, r4
   124dc:	str	r8, [sp, #32]
   124e0:	add	sp, sp, #8
   124e4:	pop	{r4, r5, r6, r7, r8, lr}
   124e8:	b	111a8 <fseeko64@plt>
   124ec:	push	{lr}		; (str lr, [sp, #-4]!)
   124f0:	sub	sp, sp, #268	; 0x10c
   124f4:	movw	r2, #257	; 0x101
   124f8:	add	r1, sp, #4
   124fc:	bl	13d5c <putchar_unlocked@plt+0x2b00>
   12500:	cmp	r0, #0
   12504:	movne	r0, #0
   12508:	bne	12538 <putchar_unlocked@plt+0x12dc>
   1250c:	ldr	r1, [pc, #44]	; 12540 <putchar_unlocked@plt+0x12e4>
   12510:	add	r0, sp, #4
   12514:	bl	10f68 <strcmp@plt>
   12518:	cmp	r0, #0
   1251c:	beq	12534 <putchar_unlocked@plt+0x12d8>
   12520:	ldr	r1, [pc, #28]	; 12544 <putchar_unlocked@plt+0x12e8>
   12524:	add	r0, sp, #4
   12528:	bl	10f68 <strcmp@plt>
   1252c:	adds	r0, r0, #0
   12530:	movne	r0, #1
   12534:	and	r0, r0, #1
   12538:	add	sp, sp, #268	; 0x10c
   1253c:	pop	{pc}		; (ldr pc, [sp], #4)
   12540:	ldrdeq	r5, [r1], -r6
   12544:	ldrdeq	r5, [r1], -r8
   12548:	mov	r3, #0
   1254c:	cmp	r0, #0
   12550:	push	{r4, r5, r6, r7, r8, lr}
   12554:	mov	r4, r0
   12558:	mov	r5, r1
   1255c:	add	r6, r2, #20
   12560:	strb	r3, [r2, #20]
   12564:	sbcs	r3, r1, #0
   12568:	bge	125cc <putchar_unlocked@plt+0x1370>
   1256c:	mov	r0, r4
   12570:	mov	r1, r5
   12574:	mov	r2, #10
   12578:	mov	r3, #0
   1257c:	bl	147ec <putchar_unlocked@plt+0x3590>
   12580:	rsb	r2, r2, #48	; 0x30
   12584:	mov	r3, #0
   12588:	mov	r0, r4
   1258c:	mov	r1, r5
   12590:	strb	r2, [r6, #-1]
   12594:	mov	r2, #10
   12598:	sub	r7, r6, #1
   1259c:	bl	147ec <putchar_unlocked@plt+0x3590>
   125a0:	mov	r4, r0
   125a4:	mov	r5, r1
   125a8:	orrs	r3, r4, r5
   125ac:	bne	125c4 <putchar_unlocked@plt+0x1368>
   125b0:	mov	r3, #45	; 0x2d
   125b4:	sub	r6, r6, #2
   125b8:	strb	r3, [r7, #-1]
   125bc:	mov	r0, r6
   125c0:	pop	{r4, r5, r6, r7, r8, pc}
   125c4:	mov	r6, r7
   125c8:	b	1256c <putchar_unlocked@plt+0x1310>
   125cc:	mov	r0, r4
   125d0:	mov	r1, r5
   125d4:	mov	r2, #10
   125d8:	mov	r3, #0
   125dc:	bl	147ec <putchar_unlocked@plt+0x3590>
   125e0:	add	r2, r2, #48	; 0x30
   125e4:	mov	r3, #0
   125e8:	mov	r0, r4
   125ec:	mov	r1, r5
   125f0:	strb	r2, [r6, #-1]!
   125f4:	mov	r2, #10
   125f8:	bl	147ec <putchar_unlocked@plt+0x3590>
   125fc:	mov	r4, r0
   12600:	mov	r5, r1
   12604:	orrs	r3, r4, r5
   12608:	bne	125cc <putchar_unlocked@plt+0x1370>
   1260c:	b	125bc <putchar_unlocked@plt+0x1360>
   12610:	push	{r4, r5, r6, lr}
   12614:	subs	r4, r0, #0
   12618:	bne	12630 <putchar_unlocked@plt+0x13d4>
   1261c:	ldr	r3, [pc, #124]	; 126a0 <putchar_unlocked@plt+0x1444>
   12620:	ldr	r0, [pc, #124]	; 126a4 <putchar_unlocked@plt+0x1448>
   12624:	ldr	r1, [r3]
   12628:	bl	1122c <fputs@plt>
   1262c:	bl	11244 <abort@plt>
   12630:	mov	r1, #47	; 0x2f
   12634:	bl	111cc <strrchr@plt>
   12638:	subs	r6, r0, #0
   1263c:	beq	1268c <putchar_unlocked@plt+0x1430>
   12640:	add	r5, r6, #1
   12644:	sub	r3, r5, r4
   12648:	cmp	r3, #6
   1264c:	ble	1268c <putchar_unlocked@plt+0x1430>
   12650:	mov	r2, #7
   12654:	ldr	r1, [pc, #76]	; 126a8 <putchar_unlocked@plt+0x144c>
   12658:	sub	r0, r6, #6
   1265c:	bl	11238 <strncmp@plt>
   12660:	cmp	r0, #0
   12664:	bne	1268c <putchar_unlocked@plt+0x1430>
   12668:	mov	r2, #3
   1266c:	ldr	r1, [pc, #56]	; 126ac <putchar_unlocked@plt+0x1450>
   12670:	mov	r0, r5
   12674:	bl	11238 <strncmp@plt>
   12678:	cmp	r0, #0
   1267c:	ldreq	r3, [pc, #44]	; 126b0 <putchar_unlocked@plt+0x1454>
   12680:	addeq	r4, r6, #4
   12684:	movne	r4, r5
   12688:	streq	r4, [r3]
   1268c:	ldr	r3, [pc, #32]	; 126b4 <putchar_unlocked@plt+0x1458>
   12690:	str	r4, [r3]
   12694:	ldr	r3, [pc, #28]	; 126b8 <putchar_unlocked@plt+0x145c>
   12698:	str	r4, [r3]
   1269c:	pop	{r4, r5, r6, pc}
   126a0:	andeq	r6, r2, r8, lsl #3
   126a4:	ldrdeq	r5, [r1], -lr
   126a8:	andeq	r5, r1, r6, lsl r2
   126ac:	andeq	r5, r1, lr, lsl r2
   126b0:	andeq	r6, r2, r8, ror r1
   126b4:	strdeq	r6, [r2], -ip
   126b8:	andeq	r6, r2, ip, ror r1
   126bc:	push	{r4, lr}
   126c0:	mov	r2, #48	; 0x30
   126c4:	mov	r4, r1
   126c8:	mov	r1, #0
   126cc:	bl	11160 <memset@plt>
   126d0:	cmp	r4, #10
   126d4:	bne	126dc <putchar_unlocked@plt+0x1480>
   126d8:	bl	11244 <abort@plt>
   126dc:	str	r4, [r0]
   126e0:	pop	{r4, pc}
   126e4:	push	{r4, r5, r6, lr}
   126e8:	mov	r2, #5
   126ec:	mov	r6, r0
   126f0:	mov	r5, r1
   126f4:	mov	r1, r0
   126f8:	mov	r0, #0
   126fc:	bl	11004 <dcgettext@plt>
   12700:	cmp	r6, r0
   12704:	mov	r4, r0
   12708:	bne	12778 <putchar_unlocked@plt+0x151c>
   1270c:	bl	1473c <putchar_unlocked@plt+0x34e0>
   12710:	ldrb	r3, [r0]
   12714:	bic	r3, r3, #32
   12718:	cmp	r3, #85	; 0x55
   1271c:	bne	12780 <putchar_unlocked@plt+0x1524>
   12720:	ldrb	r3, [r0, #1]
   12724:	bic	r3, r3, #32
   12728:	cmp	r3, #84	; 0x54
   1272c:	bne	127f0 <putchar_unlocked@plt+0x1594>
   12730:	ldrb	r3, [r0, #2]
   12734:	bic	r3, r3, #32
   12738:	cmp	r3, #70	; 0x46
   1273c:	bne	127f0 <putchar_unlocked@plt+0x1594>
   12740:	ldrb	r3, [r0, #3]
   12744:	cmp	r3, #45	; 0x2d
   12748:	bne	127f0 <putchar_unlocked@plt+0x1594>
   1274c:	ldrb	r3, [r0, #4]
   12750:	cmp	r3, #56	; 0x38
   12754:	bne	127f0 <putchar_unlocked@plt+0x1594>
   12758:	ldrb	r3, [r0, #5]
   1275c:	cmp	r3, #0
   12760:	bne	127f0 <putchar_unlocked@plt+0x1594>
   12764:	ldrb	r2, [r4]
   12768:	ldr	r3, [pc, #144]	; 12800 <putchar_unlocked@plt+0x15a4>
   1276c:	ldr	r4, [pc, #144]	; 12804 <putchar_unlocked@plt+0x15a8>
   12770:	cmp	r2, #96	; 0x60
   12774:	movne	r4, r3
   12778:	mov	r0, r4
   1277c:	pop	{r4, r5, r6, pc}
   12780:	cmp	r3, #71	; 0x47
   12784:	bne	127f0 <putchar_unlocked@plt+0x1594>
   12788:	ldrb	r3, [r0, #1]
   1278c:	bic	r3, r3, #32
   12790:	cmp	r3, #66	; 0x42
   12794:	bne	127f0 <putchar_unlocked@plt+0x1594>
   12798:	ldrb	r3, [r0, #2]
   1279c:	cmp	r3, #49	; 0x31
   127a0:	bne	127f0 <putchar_unlocked@plt+0x1594>
   127a4:	ldrb	r3, [r0, #3]
   127a8:	cmp	r3, #56	; 0x38
   127ac:	bne	127f0 <putchar_unlocked@plt+0x1594>
   127b0:	ldrb	r3, [r0, #4]
   127b4:	cmp	r3, #48	; 0x30
   127b8:	bne	127f0 <putchar_unlocked@plt+0x1594>
   127bc:	ldrb	r3, [r0, #5]
   127c0:	cmp	r3, #51	; 0x33
   127c4:	bne	127f0 <putchar_unlocked@plt+0x1594>
   127c8:	ldrb	r3, [r0, #6]
   127cc:	cmp	r3, #48	; 0x30
   127d0:	bne	127f0 <putchar_unlocked@plt+0x1594>
   127d4:	ldrb	r3, [r0, #7]
   127d8:	cmp	r3, #0
   127dc:	bne	127f0 <putchar_unlocked@plt+0x1594>
   127e0:	ldrb	r2, [r4]
   127e4:	ldr	r3, [pc, #28]	; 12808 <putchar_unlocked@plt+0x15ac>
   127e8:	ldr	r4, [pc, #28]	; 1280c <putchar_unlocked@plt+0x15b0>
   127ec:	b	12770 <putchar_unlocked@plt+0x1514>
   127f0:	ldr	r4, [pc, #24]	; 12810 <putchar_unlocked@plt+0x15b4>
   127f4:	cmp	r5, #9
   127f8:	ldr	r3, [pc, #20]	; 12814 <putchar_unlocked@plt+0x15b8>
   127fc:	b	12774 <putchar_unlocked@plt+0x1518>
   12800:	andeq	r5, r1, sl, ror r2
   12804:	andeq	r5, r1, r5, lsl #5
   12808:	andeq	r5, r1, lr, ror r2
   1280c:	andeq	r5, r1, r1, lsl #5
   12810:	andeq	r5, r1, r8, ror r2
   12814:	andeq	r5, r1, r9, lsl #5
   12818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1281c:	sub	sp, sp, #108	; 0x6c
   12820:	mov	r8, r0
   12824:	mov	r5, r1
   12828:	mov	r6, #0
   1282c:	str	r3, [sp, #40]	; 0x28
   12830:	str	r2, [sp, #48]	; 0x30
   12834:	ldr	sl, [sp, #144]	; 0x90
   12838:	bl	11058 <__ctype_get_mb_cur_max@plt>
   1283c:	ldr	r3, [sp, #148]	; 0x94
   12840:	str	r6, [sp, #24]
   12844:	str	r6, [sp, #32]
   12848:	str	r6, [sp, #44]	; 0x2c
   1284c:	str	r6, [sp, #52]	; 0x34
   12850:	ubfx	r7, r3, #1, #1
   12854:	mov	r3, #1
   12858:	str	r6, [sp, #60]	; 0x3c
   1285c:	str	r3, [sp, #72]	; 0x48
   12860:	str	r0, [sp, #76]	; 0x4c
   12864:	cmp	sl, #10
   12868:	ldrls	pc, [pc, sl, lsl #2]
   1286c:	b	12ab0 <putchar_unlocked@plt+0x1854>
   12870:	muleq	r1, ip, r8
   12874:	andeq	r2, r1, r8, asr #21
   12878:	andeq	r2, r1, ip, asr #20
   1287c:	andeq	r2, r1, r4, ror #20
   12880:	andeq	r2, r1, r4, lsr sl
   12884:	andeq	r2, r1, ip, lsl #19
   12888:	andeq	r2, r1, ip, ror #18
   1288c:			; <UNDEFINED> instruction: 0x00012ab4
   12890:			; <UNDEFINED> instruction: 0x000129bc
   12894:			; <UNDEFINED> instruction: 0x000129bc
   12898:			; <UNDEFINED> instruction: 0x000129bc
   1289c:	mov	r4, sl
   128a0:	mov	r7, #0
   128a4:	mov	r9, r5
   128a8:	mov	r3, #0
   128ac:	str	r6, [sp, #68]	; 0x44
   128b0:	str	r3, [sp, #28]
   128b4:	ldr	r3, [sp, #40]	; 0x28
   128b8:	cmn	r3, #1
   128bc:	bne	1345c <putchar_unlocked@plt+0x2200>
   128c0:	ldr	r2, [sp, #28]
   128c4:	ldr	r3, [sp, #48]	; 0x30
   128c8:	ldrb	r3, [r3, r2]
   128cc:	adds	r3, r3, #0
   128d0:	movne	r3, #1
   128d4:	str	r3, [sp, #36]	; 0x24
   128d8:	ldr	r3, [sp, #36]	; 0x24
   128dc:	cmp	r3, #0
   128e0:	bne	12aec <putchar_unlocked@plt+0x1890>
   128e4:	sub	r3, sl, #2
   128e8:	cmp	r4, #0
   128ec:	clz	r3, r3
   128f0:	movne	r2, #0
   128f4:	lsr	r3, r3, #5
   128f8:	andeq	r2, r3, r7
   128fc:	cmp	r2, #0
   12900:	bne	12cb0 <putchar_unlocked@plt+0x1a54>
   12904:	eor	r7, r7, #1
   12908:	ands	r3, r3, r7
   1290c:	beq	134d4 <putchar_unlocked@plt+0x2278>
   12910:	ldr	r2, [sp, #68]	; 0x44
   12914:	cmp	r2, #0
   12918:	beq	1349c <putchar_unlocked@plt+0x2240>
   1291c:	ldr	r3, [sp, #72]	; 0x48
   12920:	cmp	r3, #0
   12924:	beq	13470 <putchar_unlocked@plt+0x2214>
   12928:	ldr	r2, [sp, #48]	; 0x30
   1292c:	ldr	r3, [sp, #160]	; 0xa0
   12930:	ldr	r1, [sp, #60]	; 0x3c
   12934:	str	r3, [sp, #16]
   12938:	ldr	r3, [sp, #156]	; 0x9c
   1293c:	str	r3, [sp, #12]
   12940:	ldr	r3, [sp, #152]	; 0x98
   12944:	str	r3, [sp, #8]
   12948:	ldr	r3, [sp, #148]	; 0x94
   1294c:	str	r3, [sp, #4]
   12950:	mov	r3, #5
   12954:	str	r3, [sp]
   12958:	ldr	r3, [sp, #40]	; 0x28
   1295c:	mov	r0, r8
   12960:	bl	12818 <putchar_unlocked@plt+0x15bc>
   12964:	mov	r4, r0
   12968:	b	134c8 <putchar_unlocked@plt+0x226c>
   1296c:	ldr	r3, [pc, #2948]	; 134f8 <putchar_unlocked@plt+0x229c>
   12970:	mov	r7, #1
   12974:	mov	r4, #0
   12978:	mov	sl, #5
   1297c:	str	r7, [sp, #24]
   12980:	str	r7, [sp, #32]
   12984:	str	r3, [sp, #44]	; 0x2c
   12988:	b	128a4 <putchar_unlocked@plt+0x1648>
   1298c:	cmp	r7, #0
   12990:	bne	12ad4 <putchar_unlocked@plt+0x1878>
   12994:	cmp	r5, #0
   12998:	mov	r4, #1
   1299c:	movne	r3, #34	; 0x22
   129a0:	strbne	r3, [r8]
   129a4:	mov	r3, #1
   129a8:	str	r3, [sp, #24]
   129ac:	str	r3, [sp, #32]
   129b0:	ldr	r3, [pc, #2880]	; 134f8 <putchar_unlocked@plt+0x229c>
   129b4:	str	r3, [sp, #44]	; 0x2c
   129b8:	b	128a4 <putchar_unlocked@plt+0x1648>
   129bc:	cmp	sl, #10
   129c0:	beq	129e4 <putchar_unlocked@plt+0x1788>
   129c4:	mov	r1, sl
   129c8:	ldr	r0, [pc, #2860]	; 134fc <putchar_unlocked@plt+0x22a0>
   129cc:	bl	126e4 <putchar_unlocked@plt+0x1488>
   129d0:	mov	r1, sl
   129d4:	str	r0, [sp, #156]	; 0x9c
   129d8:	ldr	r0, [pc, #2848]	; 13500 <putchar_unlocked@plt+0x22a4>
   129dc:	bl	126e4 <putchar_unlocked@plt+0x1488>
   129e0:	str	r0, [sp, #160]	; 0xa0
   129e4:	cmp	r7, #0
   129e8:	moveq	r4, r7
   129ec:	beq	12a04 <putchar_unlocked@plt+0x17a8>
   129f0:	mov	r4, #0
   129f4:	b	12a14 <putchar_unlocked@plt+0x17b8>
   129f8:	cmp	r5, r4
   129fc:	strbhi	r3, [r8, r4]
   12a00:	add	r4, r4, #1
   12a04:	ldr	r3, [sp, #156]	; 0x9c
   12a08:	ldrb	r3, [r3, r4]
   12a0c:	cmp	r3, #0
   12a10:	bne	129f8 <putchar_unlocked@plt+0x179c>
   12a14:	ldr	r0, [sp, #160]	; 0xa0
   12a18:	bl	11124 <strlen@plt>
   12a1c:	ldr	r3, [sp, #160]	; 0xa0
   12a20:	str	r0, [sp, #32]
   12a24:	str	r3, [sp, #44]	; 0x2c
   12a28:	mov	r3, #1
   12a2c:	str	r3, [sp, #24]
   12a30:	b	128a4 <putchar_unlocked@plt+0x1648>
   12a34:	mov	r3, #1
   12a38:	cmp	r7, #0
   12a3c:	streq	r3, [sp, #24]
   12a40:	beq	12a84 <putchar_unlocked@plt+0x1828>
   12a44:	str	r3, [sp, #32]
   12a48:	b	12a70 <putchar_unlocked@plt+0x1814>
   12a4c:	cmp	r7, #0
   12a50:	beq	12a84 <putchar_unlocked@plt+0x1828>
   12a54:	mov	r3, #1
   12a58:	str	r3, [sp, #32]
   12a5c:	ldr	r3, [pc, #2716]	; 13500 <putchar_unlocked@plt+0x22a4>
   12a60:	b	12ae4 <putchar_unlocked@plt+0x1888>
   12a64:	mov	r7, #1
   12a68:	str	r7, [sp, #24]
   12a6c:	str	r7, [sp, #32]
   12a70:	ldr	r3, [pc, #2696]	; 13500 <putchar_unlocked@plt+0x22a4>
   12a74:	mov	r4, #0
   12a78:	str	r3, [sp, #44]	; 0x2c
   12a7c:	mov	sl, #2
   12a80:	b	128a4 <putchar_unlocked@plt+0x1648>
   12a84:	cmp	r5, #0
   12a88:	movne	r3, #39	; 0x27
   12a8c:	movne	r7, #0
   12a90:	strbne	r3, [r8]
   12a94:	moveq	r7, r5
   12a98:	mov	r3, #1
   12a9c:	mov	r4, #1
   12aa0:	str	r3, [sp, #32]
   12aa4:	ldr	r3, [pc, #2644]	; 13500 <putchar_unlocked@plt+0x22a4>
   12aa8:	str	r3, [sp, #44]	; 0x2c
   12aac:	b	12a7c <putchar_unlocked@plt+0x1820>
   12ab0:	bl	11244 <abort@plt>
   12ab4:	mov	r3, #1
   12ab8:	mov	r7, #0
   12abc:	str	r3, [sp, #24]
   12ac0:	mov	r4, #0
   12ac4:	b	128a4 <putchar_unlocked@plt+0x1648>
   12ac8:	mov	r7, #1
   12acc:	str	sl, [sp, #32]
   12ad0:	b	12a70 <putchar_unlocked@plt+0x1814>
   12ad4:	mov	r3, #1
   12ad8:	str	r7, [sp, #24]
   12adc:	str	r3, [sp, #32]
   12ae0:	ldr	r3, [pc, #2576]	; 134f8 <putchar_unlocked@plt+0x229c>
   12ae4:	str	r3, [sp, #44]	; 0x2c
   12ae8:	b	12ac0 <putchar_unlocked@plt+0x1864>
   12aec:	ldr	fp, [sp, #24]
   12af0:	ldr	r3, [sp, #32]
   12af4:	cmp	sl, #2
   12af8:	moveq	fp, #0
   12afc:	andne	fp, fp, #1
   12b00:	adds	r5, r3, #0
   12b04:	movne	r5, #1
   12b08:	ands	r3, fp, r5
   12b0c:	str	r3, [sp, #64]	; 0x40
   12b10:	beq	12be0 <putchar_unlocked@plt+0x1984>
   12b14:	ldr	r3, [sp, #28]
   12b18:	ldr	r2, [sp, #32]
   12b1c:	cmp	r2, #1
   12b20:	add	r6, r3, r2
   12b24:	mov	r3, r2
   12b28:	ldr	r2, [sp, #40]	; 0x28
   12b2c:	movls	r3, #0
   12b30:	movhi	r3, #1
   12b34:	cmn	r2, #1
   12b38:	movne	r3, #0
   12b3c:	cmp	r3, #0
   12b40:	beq	12b50 <putchar_unlocked@plt+0x18f4>
   12b44:	ldr	r0, [sp, #48]	; 0x30
   12b48:	bl	11124 <strlen@plt>
   12b4c:	str	r0, [sp, #40]	; 0x28
   12b50:	ldr	r3, [sp, #40]	; 0x28
   12b54:	cmp	r6, r3
   12b58:	bhi	12bd8 <putchar_unlocked@plt+0x197c>
   12b5c:	ldr	r0, [sp, #28]
   12b60:	ldr	r2, [sp, #32]
   12b64:	ldr	r3, [sp, #48]	; 0x30
   12b68:	ldr	r1, [sp, #44]	; 0x2c
   12b6c:	add	r0, r3, r0
   12b70:	bl	10fe0 <memcmp@plt>
   12b74:	cmp	r0, #0
   12b78:	bne	12bd8 <putchar_unlocked@plt+0x197c>
   12b7c:	cmp	r7, #0
   12b80:	beq	12be0 <putchar_unlocked@plt+0x1984>
   12b84:	str	r7, [sp, #24]
   12b88:	ldr	r3, [sp, #24]
   12b8c:	mov	r1, r9
   12b90:	ldr	r2, [sp, #48]	; 0x30
   12b94:	cmp	sl, #2
   12b98:	movne	r3, #0
   12b9c:	andeq	r3, r3, #1
   12ba0:	cmp	r3, #0
   12ba4:	ldr	r3, [sp, #160]	; 0xa0
   12ba8:	movne	sl, #4
   12bac:	str	sl, [sp]
   12bb0:	str	r3, [sp, #16]
   12bb4:	ldr	r3, [sp, #156]	; 0x9c
   12bb8:	str	r3, [sp, #12]
   12bbc:	mov	r3, #0
   12bc0:	str	r3, [sp, #8]
   12bc4:	ldr	r3, [sp, #148]	; 0x94
   12bc8:	bic	r3, r3, #2
   12bcc:	str	r3, [sp, #4]
   12bd0:	ldr	r3, [sp, #40]	; 0x28
   12bd4:	b	1295c <putchar_unlocked@plt+0x1700>
   12bd8:	mov	r3, #0
   12bdc:	str	r3, [sp, #64]	; 0x40
   12be0:	ldr	r2, [sp, #28]
   12be4:	ldr	r3, [sp, #48]	; 0x30
   12be8:	add	r3, r3, r2
   12bec:	str	r3, [sp, #80]	; 0x50
   12bf0:	ldr	r3, [sp, #48]	; 0x30
   12bf4:	ldrb	r6, [r3, r2]
   12bf8:	cmp	r6, #58	; 0x3a
   12bfc:	bhi	12d60 <putchar_unlocked@plt+0x1b04>
   12c00:	cmp	r6, #43	; 0x2b
   12c04:	bcs	12f20 <putchar_unlocked@plt+0x1cc4>
   12c08:	cmp	r6, #32
   12c0c:	beq	12f74 <putchar_unlocked@plt+0x1d18>
   12c10:	bhi	12cb8 <putchar_unlocked@plt+0x1a5c>
   12c14:	cmp	r6, #9
   12c18:	beq	1311c <putchar_unlocked@plt+0x1ec0>
   12c1c:	bhi	12c7c <putchar_unlocked@plt+0x1a20>
   12c20:	cmp	r6, #7
   12c24:	beq	1312c <putchar_unlocked@plt+0x1ed0>
   12c28:	bhi	13148 <putchar_unlocked@plt+0x1eec>
   12c2c:	cmp	r6, #0
   12c30:	beq	12f90 <putchar_unlocked@plt+0x1d34>
   12c34:	ldr	r3, [sp, #76]	; 0x4c
   12c38:	cmp	r3, #1
   12c3c:	bne	13194 <putchar_unlocked@plt+0x1f38>
   12c40:	bl	1110c <__ctype_b_loc@plt>
   12c44:	ldr	r2, [r0]
   12c48:	sxth	r3, r6
   12c4c:	lsl	r3, r3, #1
   12c50:	ldrh	r5, [r2, r3]
   12c54:	ldr	r3, [sp, #76]	; 0x4c
   12c58:	ubfx	r5, r5, #14, #1
   12c5c:	str	r3, [sp, #56]	; 0x38
   12c60:	ldr	r3, [sp, #24]
   12c64:	eor	fp, r5, #1
   12c68:	and	fp, fp, r3
   12c6c:	ands	fp, fp, #255	; 0xff
   12c70:	beq	12e50 <putchar_unlocked@plt+0x1bf4>
   12c74:	mov	r5, #0
   12c78:	b	13240 <putchar_unlocked@plt+0x1fe4>
   12c7c:	cmp	r6, #11
   12c80:	beq	13150 <putchar_unlocked@plt+0x1ef4>
   12c84:	bcc	13124 <putchar_unlocked@plt+0x1ec8>
   12c88:	cmp	r6, #12
   12c8c:	beq	13158 <putchar_unlocked@plt+0x1efc>
   12c90:	cmp	r6, #13
   12c94:	moveq	r3, #114	; 0x72
   12c98:	bne	12c34 <putchar_unlocked@plt+0x19d8>
   12c9c:	cmp	sl, #2
   12ca0:	movne	r2, #0
   12ca4:	andeq	r2, r7, #1
   12ca8:	cmp	r2, #0
   12cac:	beq	13130 <putchar_unlocked@plt+0x1ed4>
   12cb0:	mov	sl, #2
   12cb4:	b	12b88 <putchar_unlocked@plt+0x192c>
   12cb8:	cmp	r6, #37	; 0x25
   12cbc:	beq	12f20 <putchar_unlocked@plt+0x1cc4>
   12cc0:	bhi	12cd4 <putchar_unlocked@plt+0x1a78>
   12cc4:	cmp	r6, #35	; 0x23
   12cc8:	beq	12f68 <putchar_unlocked@plt+0x1d0c>
   12ccc:	mov	r5, #0
   12cd0:	b	12f78 <putchar_unlocked@plt+0x1d1c>
   12cd4:	cmp	r6, #39	; 0x27
   12cd8:	bne	12ccc <putchar_unlocked@plt+0x1a70>
   12cdc:	cmp	sl, #2
   12ce0:	ldrne	r5, [sp, #36]	; 0x24
   12ce4:	movne	r3, r5
   12ce8:	strne	r3, [sp, #68]	; 0x44
   12cec:	bne	1306c <putchar_unlocked@plt+0x1e10>
   12cf0:	cmp	r7, #0
   12cf4:	bne	12b88 <putchar_unlocked@plt+0x192c>
   12cf8:	ldr	r3, [sp, #60]	; 0x3c
   12cfc:	cmp	r9, #0
   12d00:	clz	r3, r3
   12d04:	lsr	r3, r3, #5
   12d08:	moveq	r3, #0
   12d0c:	cmp	r3, #0
   12d10:	strne	r9, [sp, #60]	; 0x3c
   12d14:	movne	r9, #0
   12d18:	bne	12d28 <putchar_unlocked@plt+0x1acc>
   12d1c:	cmp	r9, r4
   12d20:	movhi	r3, #39	; 0x27
   12d24:	strbhi	r3, [r8, r4]
   12d28:	add	r3, r4, #1
   12d2c:	ldr	r5, [sp, #36]	; 0x24
   12d30:	mov	fp, #0
   12d34:	cmp	r3, r9
   12d38:	movcc	r2, #92	; 0x5c
   12d3c:	str	fp, [sp, #52]	; 0x34
   12d40:	strbcc	r2, [r8, r3]
   12d44:	add	r3, r4, #2
   12d48:	add	r4, r4, #3
   12d4c:	cmp	r3, r9
   12d50:	str	r5, [sp, #68]	; 0x44
   12d54:	movcc	r2, #39	; 0x27
   12d58:	strbcc	r2, [r8, r3]
   12d5c:	b	12e50 <putchar_unlocked@plt+0x1bf4>
   12d60:	cmp	r6, #94	; 0x5e
   12d64:	beq	12ccc <putchar_unlocked@plt+0x1a70>
   12d68:	bhi	12f28 <putchar_unlocked@plt+0x1ccc>
   12d6c:	cmp	r6, #90	; 0x5a
   12d70:	bhi	12f14 <putchar_unlocked@plt+0x1cb8>
   12d74:	cmp	r6, #65	; 0x41
   12d78:	bcs	12f20 <putchar_unlocked@plt+0x1cc4>
   12d7c:	cmp	r6, #62	; 0x3e
   12d80:	bls	12ccc <putchar_unlocked@plt+0x1a70>
   12d84:	cmp	r6, #63	; 0x3f
   12d88:	bne	12c34 <putchar_unlocked@plt+0x19d8>
   12d8c:	cmp	sl, #2
   12d90:	beq	13074 <putchar_unlocked@plt+0x1e18>
   12d94:	cmp	sl, #5
   12d98:	movne	fp, #0
   12d9c:	bne	13444 <putchar_unlocked@plt+0x21e8>
   12da0:	ldr	r3, [sp, #148]	; 0x94
   12da4:	tst	r3, #4
   12da8:	beq	1307c <putchar_unlocked@plt+0x1e20>
   12dac:	ldr	r3, [sp, #28]
   12db0:	add	r2, r3, #2
   12db4:	ldr	r3, [sp, #40]	; 0x28
   12db8:	cmp	r2, r3
   12dbc:	bcs	1307c <putchar_unlocked@plt+0x1e20>
   12dc0:	ldr	r1, [sp, #28]
   12dc4:	ldr	r3, [sp, #48]	; 0x30
   12dc8:	add	r3, r3, r1
   12dcc:	ldrb	r1, [r3, #1]
   12dd0:	cmp	r1, #63	; 0x3f
   12dd4:	bne	1307c <putchar_unlocked@plt+0x1e20>
   12dd8:	ldr	r3, [sp, #48]	; 0x30
   12ddc:	ldrb	r6, [r3, r2]
   12de0:	sub	r3, r6, #33	; 0x21
   12de4:	uxtb	r3, r3
   12de8:	cmp	r3, #29
   12dec:	bhi	1344c <putchar_unlocked@plt+0x21f0>
   12df0:	ldr	r0, [pc, #1804]	; 13504 <putchar_unlocked@plt+0x22a8>
   12df4:	mov	r5, #1
   12df8:	ands	r5, r0, r5, lsl r3
   12dfc:	beq	13454 <putchar_unlocked@plt+0x21f8>
   12e00:	cmp	r7, #0
   12e04:	bne	12b88 <putchar_unlocked@plt+0x192c>
   12e08:	cmp	r9, r4
   12e0c:	add	r3, r4, #1
   12e10:	str	r2, [sp, #28]
   12e14:	mov	r5, #0
   12e18:	strbhi	r1, [r8, r4]
   12e1c:	cmp	r9, r3
   12e20:	mov	fp, r5
   12e24:	movhi	r1, #34	; 0x22
   12e28:	strbhi	r1, [r8, r3]
   12e2c:	add	r3, r4, #2
   12e30:	cmp	r9, r3
   12e34:	movhi	r1, #34	; 0x22
   12e38:	strbhi	r1, [r8, r3]
   12e3c:	add	r3, r4, #3
   12e40:	add	r4, r4, #4
   12e44:	cmp	r9, r3
   12e48:	movhi	r1, #63	; 0x3f
   12e4c:	strbhi	r1, [r8, r3]
   12e50:	ldr	r3, [sp, #24]
   12e54:	eor	r3, r3, #1
   12e58:	cmp	sl, #2
   12e5c:	orreq	r3, r3, #1
   12e60:	eor	r3, r3, #1
   12e64:	orr	r3, r7, r3
   12e68:	tst	r3, #255	; 0xff
   12e6c:	beq	12e98 <putchar_unlocked@plt+0x1c3c>
   12e70:	ldr	r3, [sp, #152]	; 0x98
   12e74:	cmp	r3, #0
   12e78:	beq	12e98 <putchar_unlocked@plt+0x1c3c>
   12e7c:	ldr	r1, [sp, #152]	; 0x98
   12e80:	ubfx	r2, r6, #5, #8
   12e84:	and	r3, r6, #31
   12e88:	ldr	r2, [r1, r2, lsl #2]
   12e8c:	lsr	r3, r2, r3
   12e90:	tst	r3, #1
   12e94:	bne	12ea4 <putchar_unlocked@plt+0x1c48>
   12e98:	ldr	r3, [sp, #64]	; 0x40
   12e9c:	cmp	r3, #0
   12ea0:	beq	1309c <putchar_unlocked@plt+0x1e40>
   12ea4:	sub	r3, sl, #2
   12ea8:	cmp	r7, #0
   12eac:	clz	r3, r3
   12eb0:	lsr	r3, r3, #5
   12eb4:	bne	12b88 <putchar_unlocked@plt+0x192c>
   12eb8:	ldr	r2, [sp, #52]	; 0x34
   12ebc:	eor	r2, r2, #1
   12ec0:	ands	r3, r3, r2
   12ec4:	beq	12efc <putchar_unlocked@plt+0x1ca0>
   12ec8:	cmp	r9, r4
   12ecc:	str	r3, [sp, #52]	; 0x34
   12ed0:	movhi	r2, #39	; 0x27
   12ed4:	strbhi	r2, [r8, r4]
   12ed8:	add	r2, r4, #1
   12edc:	cmp	r9, r2
   12ee0:	movhi	r1, #36	; 0x24
   12ee4:	strbhi	r1, [r8, r2]
   12ee8:	add	r2, r4, #2
   12eec:	add	r4, r4, #3
   12ef0:	cmp	r9, r2
   12ef4:	movhi	r1, #39	; 0x27
   12ef8:	strbhi	r1, [r8, r2]
   12efc:	cmp	r9, r4
   12f00:	ldr	fp, [sp, #36]	; 0x24
   12f04:	movhi	r3, #92	; 0x5c
   12f08:	strbhi	r3, [r8, r4]
   12f0c:	add	r4, r4, #1
   12f10:	b	1309c <putchar_unlocked@plt+0x1e40>
   12f14:	cmp	r6, #92	; 0x5c
   12f18:	beq	13084 <putchar_unlocked@plt+0x1e28>
   12f1c:	bls	12ccc <putchar_unlocked@plt+0x1a70>
   12f20:	ldr	r5, [sp, #36]	; 0x24
   12f24:	b	1306c <putchar_unlocked@plt+0x1e10>
   12f28:	cmp	r6, #122	; 0x7a
   12f2c:	bhi	12f4c <putchar_unlocked@plt+0x1cf0>
   12f30:	cmp	r6, #97	; 0x61
   12f34:	bcs	12f20 <putchar_unlocked@plt+0x1cc4>
   12f38:	cmp	r6, #95	; 0x5f
   12f3c:	beq	12f20 <putchar_unlocked@plt+0x1cc4>
   12f40:	cmp	r6, #96	; 0x60
   12f44:	bne	12c34 <putchar_unlocked@plt+0x19d8>
   12f48:	b	12ccc <putchar_unlocked@plt+0x1a70>
   12f4c:	cmp	r6, #124	; 0x7c
   12f50:	beq	12ccc <putchar_unlocked@plt+0x1a70>
   12f54:	bcc	13160 <putchar_unlocked@plt+0x1f04>
   12f58:	cmp	r6, #125	; 0x7d
   12f5c:	beq	13160 <putchar_unlocked@plt+0x1f04>
   12f60:	cmp	r6, #126	; 0x7e
   12f64:	bne	12c34 <putchar_unlocked@plt+0x19d8>
   12f68:	ldr	r3, [sp, #28]
   12f6c:	cmp	r3, #0
   12f70:	bne	1307c <putchar_unlocked@plt+0x1e20>
   12f74:	ldr	r5, [sp, #36]	; 0x24
   12f78:	cmp	sl, #2
   12f7c:	movne	fp, #0
   12f80:	andeq	fp, r7, #1
   12f84:	cmp	fp, #0
   12f88:	beq	12e50 <putchar_unlocked@plt+0x1bf4>
   12f8c:	b	12cb0 <putchar_unlocked@plt+0x1a54>
   12f90:	ldr	r3, [sp, #24]
   12f94:	cmp	r3, #0
   12f98:	beq	13060 <putchar_unlocked@plt+0x1e04>
   12f9c:	sub	r2, sl, #2
   12fa0:	cmp	r7, #0
   12fa4:	clz	r2, r2
   12fa8:	lsr	r2, r2, #5
   12fac:	bne	12b84 <putchar_unlocked@plt+0x1928>
   12fb0:	ldr	r3, [sp, #52]	; 0x34
   12fb4:	eor	r3, r3, #1
   12fb8:	ands	r2, r2, r3
   12fbc:	moveq	r3, r4
   12fc0:	beq	12ff8 <putchar_unlocked@plt+0x1d9c>
   12fc4:	cmp	r9, r4
   12fc8:	str	r2, [sp, #52]	; 0x34
   12fcc:	movhi	r3, #39	; 0x27
   12fd0:	strbhi	r3, [r8, r4]
   12fd4:	add	r3, r4, #1
   12fd8:	cmp	r9, r3
   12fdc:	movhi	r1, #36	; 0x24
   12fe0:	strbhi	r1, [r8, r3]
   12fe4:	add	r3, r4, #2
   12fe8:	cmp	r9, r3
   12fec:	movhi	r1, #39	; 0x27
   12ff0:	strbhi	r1, [r8, r3]
   12ff4:	add	r3, r4, #3
   12ff8:	cmp	r9, r3
   12ffc:	add	r4, r3, #1
   13000:	movhi	r2, #92	; 0x5c
   13004:	strbhi	r2, [r8, r3]
   13008:	cmp	fp, #0
   1300c:	beq	13434 <putchar_unlocked@plt+0x21d8>
   13010:	ldr	r2, [sp, #28]
   13014:	ldr	r1, [sp, #40]	; 0x28
   13018:	add	r2, r2, #1
   1301c:	cmp	r2, r1
   13020:	bcs	13058 <putchar_unlocked@plt+0x1dfc>
   13024:	ldr	r1, [sp, #48]	; 0x30
   13028:	mov	r6, #48	; 0x30
   1302c:	ldrb	r2, [r1, r2]
   13030:	sub	r2, r2, #48	; 0x30
   13034:	cmp	r2, #9
   13038:	bhi	13444 <putchar_unlocked@plt+0x21e8>
   1303c:	cmp	r9, r4
   13040:	add	r2, r3, #2
   13044:	strbhi	r6, [r8, r4]
   13048:	cmp	r9, r2
   1304c:	add	r4, r3, #3
   13050:	movhi	r1, #48	; 0x30
   13054:	strbhi	r1, [r8, r2]
   13058:	mov	r5, #0
   1305c:	b	1343c <putchar_unlocked@plt+0x21e0>
   13060:	ldr	r3, [sp, #148]	; 0x94
   13064:	ands	r5, r3, #1
   13068:	bne	130f0 <putchar_unlocked@plt+0x1e94>
   1306c:	mov	fp, #0
   13070:	b	12e50 <putchar_unlocked@plt+0x1bf4>
   13074:	cmp	r7, #0
   13078:	bne	12b88 <putchar_unlocked@plt+0x192c>
   1307c:	mov	r5, #0
   13080:	b	1306c <putchar_unlocked@plt+0x1e10>
   13084:	cmp	sl, #2
   13088:	bne	130fc <putchar_unlocked@plt+0x1ea0>
   1308c:	cmp	r7, #0
   13090:	bne	12b88 <putchar_unlocked@plt+0x192c>
   13094:	mov	r5, r7
   13098:	mov	fp, r7
   1309c:	ldr	r3, [sp, #52]	; 0x34
   130a0:	eor	fp, fp, #1
   130a4:	tst	r3, fp
   130a8:	beq	130d4 <putchar_unlocked@plt+0x1e78>
   130ac:	cmp	r9, r4
   130b0:	movhi	r3, #39	; 0x27
   130b4:	strbhi	r3, [r8, r4]
   130b8:	add	r3, r4, #1
   130bc:	add	r4, r4, #2
   130c0:	cmp	r9, r3
   130c4:	movhi	r2, #39	; 0x27
   130c8:	strbhi	r2, [r8, r3]
   130cc:	mov	r3, #0
   130d0:	str	r3, [sp, #52]	; 0x34
   130d4:	cmp	r9, r4
   130d8:	ldr	r3, [sp, #72]	; 0x48
   130dc:	strbhi	r6, [r8, r4]
   130e0:	cmp	r5, #0
   130e4:	add	r4, r4, #1
   130e8:	moveq	r3, #0
   130ec:	str	r3, [sp, #72]	; 0x48
   130f0:	ldr	r3, [sp, #28]
   130f4:	add	r3, r3, #1
   130f8:	b	128b0 <putchar_unlocked@plt+0x1654>
   130fc:	ldr	r3, [sp, #24]
   13100:	and	r3, r3, r7
   13104:	tst	r5, r3
   13108:	moveq	r3, r6
   1310c:	beq	12c9c <putchar_unlocked@plt+0x1a40>
   13110:	mov	fp, #0
   13114:	mov	r5, fp
   13118:	b	1309c <putchar_unlocked@plt+0x1e40>
   1311c:	mov	r3, #116	; 0x74
   13120:	b	12c9c <putchar_unlocked@plt+0x1a40>
   13124:	mov	r3, #110	; 0x6e
   13128:	b	12c9c <putchar_unlocked@plt+0x1a40>
   1312c:	mov	r3, #97	; 0x61
   13130:	ldr	r2, [sp, #24]
   13134:	cmp	r2, #0
   13138:	beq	1307c <putchar_unlocked@plt+0x1e20>
   1313c:	mov	r6, r3
   13140:	mov	r5, #0
   13144:	b	12ea4 <putchar_unlocked@plt+0x1c48>
   13148:	mov	r3, #98	; 0x62
   1314c:	b	13130 <putchar_unlocked@plt+0x1ed4>
   13150:	mov	r3, #118	; 0x76
   13154:	b	13130 <putchar_unlocked@plt+0x1ed4>
   13158:	mov	r3, #102	; 0x66
   1315c:	b	13130 <putchar_unlocked@plt+0x1ed4>
   13160:	ldr	r3, [sp, #40]	; 0x28
   13164:	cmn	r3, #1
   13168:	bne	13188 <putchar_unlocked@plt+0x1f2c>
   1316c:	ldr	r3, [sp, #48]	; 0x30
   13170:	ldrb	r3, [r3, #1]
   13174:	adds	r3, r3, #0
   13178:	movne	r3, #1
   1317c:	cmp	r3, #0
   13180:	bne	1307c <putchar_unlocked@plt+0x1e20>
   13184:	b	12f68 <putchar_unlocked@plt+0x1d0c>
   13188:	ldr	r3, [sp, #40]	; 0x28
   1318c:	subs	r3, r3, #1
   13190:	b	13178 <putchar_unlocked@plt+0x1f1c>
   13194:	mov	r3, #0
   13198:	mov	r2, #0
   1319c:	strd	r2, [sp, #96]	; 0x60
   131a0:	ldr	r3, [sp, #40]	; 0x28
   131a4:	cmn	r3, #1
   131a8:	bne	131b8 <putchar_unlocked@plt+0x1f5c>
   131ac:	ldr	r0, [sp, #48]	; 0x30
   131b0:	bl	11124 <strlen@plt>
   131b4:	str	r0, [sp, #40]	; 0x28
   131b8:	ldr	r5, [sp, #36]	; 0x24
   131bc:	mov	r3, #0
   131c0:	str	r3, [sp, #56]	; 0x38
   131c4:	ldr	r3, [sp, #28]
   131c8:	add	r0, sp, #92	; 0x5c
   131cc:	ldr	r1, [sp, #40]	; 0x28
   131d0:	ldr	r2, [sp, #56]	; 0x38
   131d4:	add	r2, r3, r2
   131d8:	ldr	r3, [sp, #48]	; 0x30
   131dc:	add	fp, r3, r2
   131e0:	sub	r2, r1, r2
   131e4:	add	r3, sp, #96	; 0x60
   131e8:	mov	r1, fp
   131ec:	bl	14770 <putchar_unlocked@plt+0x3514>
   131f0:	subs	r2, r0, #0
   131f4:	beq	13234 <putchar_unlocked@plt+0x1fd8>
   131f8:	cmn	r2, #1
   131fc:	beq	13408 <putchar_unlocked@plt+0x21ac>
   13200:	cmn	r2, #2
   13204:	bne	13378 <putchar_unlocked@plt+0x211c>
   13208:	ldr	r3, [sp, #28]
   1320c:	ldr	r2, [sp, #56]	; 0x38
   13210:	add	r3, r3, r2
   13214:	ldr	r2, [sp, #40]	; 0x28
   13218:	cmp	r2, r3
   1321c:	bls	13408 <putchar_unlocked@plt+0x21ac>
   13220:	ldr	r2, [sp, #56]	; 0x38
   13224:	ldr	r3, [sp, #80]	; 0x50
   13228:	ldrb	r5, [r3, r2]
   1322c:	cmp	r5, #0
   13230:	bne	13368 <putchar_unlocked@plt+0x210c>
   13234:	ldr	r3, [sp, #56]	; 0x38
   13238:	cmp	r3, #1
   1323c:	bls	12c60 <putchar_unlocked@plt+0x1a04>
   13240:	ldr	r3, [sp, #28]
   13244:	mov	fp, #0
   13248:	mov	ip, #92	; 0x5c
   1324c:	ldr	r2, [sp, #56]	; 0x38
   13250:	add	r3, r3, r2
   13254:	ldr	r2, [sp, #24]
   13258:	str	r3, [sp, #36]	; 0x24
   1325c:	eor	r3, r5, #1
   13260:	and	r3, r3, r2
   13264:	mov	r2, #39	; 0x27
   13268:	uxtb	r3, r3
   1326c:	cmp	r3, #0
   13270:	beq	13410 <putchar_unlocked@plt+0x21b4>
   13274:	sub	r0, sl, #2
   13278:	cmp	r7, #0
   1327c:	clz	r0, r0
   13280:	lsr	r0, r0, #5
   13284:	bne	12b84 <putchar_unlocked@plt+0x1928>
   13288:	ldr	r1, [sp, #52]	; 0x34
   1328c:	eor	r1, r1, #1
   13290:	ands	r1, r0, r1
   13294:	beq	132c4 <putchar_unlocked@plt+0x2068>
   13298:	cmp	r9, r4
   1329c:	add	r0, r4, #1
   132a0:	str	r1, [sp, #52]	; 0x34
   132a4:	strbhi	r2, [r8, r4]
   132a8:	cmp	r9, r0
   132ac:	movhi	lr, #36	; 0x24
   132b0:	strbhi	lr, [r8, r0]
   132b4:	add	r0, r4, #2
   132b8:	add	r4, r4, #3
   132bc:	cmp	r9, r0
   132c0:	strbhi	r2, [r8, r0]
   132c4:	cmp	r9, r4
   132c8:	add	r0, r4, #1
   132cc:	mov	fp, r3
   132d0:	strbhi	ip, [r8, r4]
   132d4:	cmp	r9, r0
   132d8:	lsrhi	r1, r6, #6
   132dc:	addhi	r1, r1, #48	; 0x30
   132e0:	strbhi	r1, [r8, r0]
   132e4:	add	r0, r4, #2
   132e8:	add	r4, r4, #3
   132ec:	cmp	r9, r0
   132f0:	ubfxhi	r1, r6, #3, #3
   132f4:	and	r6, r6, #7
   132f8:	add	r6, r6, #48	; 0x30
   132fc:	addhi	r1, r1, #48	; 0x30
   13300:	strbhi	r1, [r8, r0]
   13304:	eor	r0, fp, #1
   13308:	ldr	r1, [sp, #28]
   1330c:	ldr	lr, [sp, #52]	; 0x34
   13310:	add	r1, r1, #1
   13314:	and	r0, r0, lr
   13318:	ldr	lr, [sp, #36]	; 0x24
   1331c:	cmp	r1, lr
   13320:	bcs	1309c <putchar_unlocked@plt+0x1e40>
   13324:	cmp	r0, #0
   13328:	beq	1334c <putchar_unlocked@plt+0x20f0>
   1332c:	cmp	r9, r4
   13330:	add	r0, r4, #1
   13334:	strbhi	r2, [r8, r4]
   13338:	cmp	r9, r0
   1333c:	add	r4, r4, #2
   13340:	strbhi	r2, [r8, r0]
   13344:	mov	r0, #0
   13348:	str	r0, [sp, #52]	; 0x34
   1334c:	ldr	r0, [sp, #48]	; 0x30
   13350:	cmp	r9, r4
   13354:	str	r1, [sp, #28]
   13358:	strbhi	r6, [r8, r4]
   1335c:	add	r4, r4, #1
   13360:	ldrb	r6, [r0, r1]
   13364:	b	1326c <putchar_unlocked@plt+0x2010>
   13368:	ldr	r3, [sp, #56]	; 0x38
   1336c:	add	r3, r3, #1
   13370:	str	r3, [sp, #56]	; 0x38
   13374:	b	13208 <putchar_unlocked@plt+0x1fac>
   13378:	cmp	sl, #2
   1337c:	movne	r3, #0
   13380:	andeq	r3, r7, #1
   13384:	cmp	r3, #0
   13388:	movne	r1, #1
   1338c:	bne	133e8 <putchar_unlocked@plt+0x218c>
   13390:	ldr	r0, [sp, #92]	; 0x5c
   13394:	str	r2, [sp, #84]	; 0x54
   13398:	bl	11040 <iswprint@plt>
   1339c:	ldr	r3, [sp, #56]	; 0x38
   133a0:	cmp	r0, #0
   133a4:	add	r0, sp, #96	; 0x60
   133a8:	moveq	r5, #0
   133ac:	ldr	r2, [sp, #84]	; 0x54
   133b0:	add	r3, r3, r2
   133b4:	str	r3, [sp, #56]	; 0x38
   133b8:	bl	10fbc <mbsinit@plt>
   133bc:	cmp	r0, #0
   133c0:	beq	131c4 <putchar_unlocked@plt+0x1f68>
   133c4:	b	13234 <putchar_unlocked@plt+0x1fd8>
   133c8:	ldrb	r3, [fp, #1]!
   133cc:	cmp	r3, #94	; 0x5e
   133d0:	beq	12cb0 <putchar_unlocked@plt+0x1a54>
   133d4:	bhi	133f4 <putchar_unlocked@plt+0x2198>
   133d8:	sub	r3, r3, #91	; 0x5b
   133dc:	cmp	r3, #1
   133e0:	bls	12cb0 <putchar_unlocked@plt+0x1a54>
   133e4:	add	r1, r1, #1
   133e8:	cmp	r1, r2
   133ec:	bne	133c8 <putchar_unlocked@plt+0x216c>
   133f0:	b	13390 <putchar_unlocked@plt+0x2134>
   133f4:	cmp	r3, #96	; 0x60
   133f8:	beq	12cb0 <putchar_unlocked@plt+0x1a54>
   133fc:	cmp	r3, #124	; 0x7c
   13400:	bne	133e4 <putchar_unlocked@plt+0x2188>
   13404:	b	12cb0 <putchar_unlocked@plt+0x1a54>
   13408:	mov	r5, #0
   1340c:	b	13234 <putchar_unlocked@plt+0x1fd8>
   13410:	ldr	r1, [sp, #64]	; 0x40
   13414:	cmp	r1, #0
   13418:	beq	13304 <putchar_unlocked@plt+0x20a8>
   1341c:	cmp	r9, r4
   13420:	mov	r1, #0
   13424:	strbhi	ip, [r8, r4]
   13428:	add	r4, r4, #1
   1342c:	str	r1, [sp, #64]	; 0x40
   13430:	b	13304 <putchar_unlocked@plt+0x20a8>
   13434:	mov	r5, fp
   13438:	ldr	fp, [sp, #24]
   1343c:	mov	r6, #48	; 0x30
   13440:	b	12e50 <putchar_unlocked@plt+0x1bf4>
   13444:	mov	r5, #0
   13448:	b	12e50 <putchar_unlocked@plt+0x1bf4>
   1344c:	mov	r6, r1
   13450:	b	1307c <putchar_unlocked@plt+0x1e20>
   13454:	mov	r6, r1
   13458:	b	1306c <putchar_unlocked@plt+0x1e10>
   1345c:	ldr	r2, [sp, #28]
   13460:	ldr	r3, [sp, #40]	; 0x28
   13464:	subs	r3, r3, r2
   13468:	movne	r3, #1
   1346c:	b	128d4 <putchar_unlocked@plt+0x1678>
   13470:	ldr	r3, [sp, #60]	; 0x3c
   13474:	mov	sl, #2
   13478:	ldr	r7, [sp, #72]	; 0x48
   1347c:	adds	r6, r3, #0
   13480:	mov	r5, r3
   13484:	movne	r6, #1
   13488:	cmp	r9, #0
   1348c:	movne	r6, #0
   13490:	cmp	r6, #0
   13494:	bne	12864 <putchar_unlocked@plt+0x1608>
   13498:	ldr	r3, [sp, #68]	; 0x44
   1349c:	ldr	r2, [sp, #44]	; 0x2c
   134a0:	cmp	r2, #0
   134a4:	moveq	r3, #0
   134a8:	andne	r3, r3, #1
   134ac:	cmp	r3, #0
   134b0:	movne	r3, r2
   134b4:	subne	r3, r3, #1
   134b8:	bne	134e8 <putchar_unlocked@plt+0x228c>
   134bc:	cmp	r9, r4
   134c0:	movhi	r3, #0
   134c4:	strbhi	r3, [r8, r4]
   134c8:	mov	r0, r4
   134cc:	add	sp, sp, #108	; 0x6c
   134d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134d4:	mov	r3, r7
   134d8:	b	1349c <putchar_unlocked@plt+0x2240>
   134dc:	cmp	r9, r4
   134e0:	strbhi	r2, [r8, r4]
   134e4:	add	r4, r4, #1
   134e8:	ldrb	r2, [r3, #1]!
   134ec:	cmp	r2, #0
   134f0:	bne	134dc <putchar_unlocked@plt+0x2280>
   134f4:	b	134bc <putchar_unlocked@plt+0x2260>
   134f8:	andeq	r5, r1, r8, ror r2
   134fc:	andeq	r5, r1, fp, lsl #5
   13500:	andeq	r5, r1, r9, lsl #5
   13504:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1350c:	sub	sp, sp, #52	; 0x34
   13510:	mov	r6, r0
   13514:	mov	r5, r3
   13518:	mov	r8, r1
   1351c:	mov	r9, r2
   13520:	bl	1113c <__errno_location@plt>
   13524:	ldr	r3, [r0]
   13528:	cmn	r6, #-2147483647	; 0x80000001
   1352c:	str	r0, [sp, #24]
   13530:	ldr	r7, [pc, #368]	; 136a8 <putchar_unlocked@plt+0x244c>
   13534:	str	r3, [sp, #32]
   13538:	movne	r3, #0
   1353c:	moveq	r3, #1
   13540:	orrs	r3, r3, r6, lsr #31
   13544:	ldr	r4, [r7]
   13548:	beq	13550 <putchar_unlocked@plt+0x22f4>
   1354c:	bl	11244 <abort@plt>
   13550:	ldr	r2, [r7, #4]
   13554:	cmp	r2, r6
   13558:	bgt	135c8 <putchar_unlocked@plt+0x236c>
   1355c:	add	sl, r7, #8
   13560:	mov	r3, #8
   13564:	cmp	r4, sl
   13568:	add	r1, sp, #44	; 0x2c
   1356c:	str	r2, [sp, #44]	; 0x2c
   13570:	sub	r2, r6, r2
   13574:	movne	r0, r4
   13578:	moveq	r0, #0
   1357c:	add	r2, r2, #1
   13580:	str	r3, [sp]
   13584:	mvn	r3, #-2147483648	; 0x80000000
   13588:	bl	14420 <putchar_unlocked@plt+0x31c4>
   1358c:	cmp	r4, sl
   13590:	mov	fp, r0
   13594:	str	r0, [r7]
   13598:	ldmeq	r4, {r0, r1}
   1359c:	mov	r4, fp
   135a0:	ldr	r2, [sp, #44]	; 0x2c
   135a4:	stmeq	fp, {r0, r1}
   135a8:	mov	r1, #0
   135ac:	ldr	r0, [r7, #4]
   135b0:	sub	r2, r2, r0
   135b4:	add	r0, fp, r0, lsl #3
   135b8:	lsl	r2, r2, #3
   135bc:	bl	11160 <memset@plt>
   135c0:	ldr	r3, [sp, #44]	; 0x2c
   135c4:	str	r3, [r7, #4]
   135c8:	ldr	r3, [r5, #4]
   135cc:	add	sl, r4, r6, lsl #3
   135d0:	mov	r2, r8
   135d4:	ldr	fp, [r4, r6, lsl #3]
   135d8:	ldr	r7, [sl, #4]
   135dc:	orr	r3, r3, #1
   135e0:	str	r3, [sp, #28]
   135e4:	add	r3, r5, #8
   135e8:	mov	r1, fp
   135ec:	str	r3, [sp, #36]	; 0x24
   135f0:	mov	r0, r7
   135f4:	ldr	r3, [r5, #44]	; 0x2c
   135f8:	str	r3, [sp, #16]
   135fc:	ldr	r3, [r5, #40]	; 0x28
   13600:	str	r3, [sp, #12]
   13604:	add	r3, r5, #8
   13608:	str	r3, [sp, #8]
   1360c:	ldr	r3, [sp, #28]
   13610:	str	r3, [sp, #4]
   13614:	ldr	r3, [r5]
   13618:	str	r3, [sp]
   1361c:	mov	r3, r9
   13620:	bl	12818 <putchar_unlocked@plt+0x15bc>
   13624:	cmp	fp, r0
   13628:	bhi	13690 <putchar_unlocked@plt+0x2434>
   1362c:	ldr	r3, [pc, #120]	; 136ac <putchar_unlocked@plt+0x2450>
   13630:	add	fp, r0, #1
   13634:	str	fp, [r4, r6, lsl #3]
   13638:	cmp	r7, r3
   1363c:	beq	13648 <putchar_unlocked@plt+0x23ec>
   13640:	mov	r0, r7
   13644:	bl	12404 <putchar_unlocked@plt+0x11a8>
   13648:	mov	r0, fp
   1364c:	bl	14310 <putchar_unlocked@plt+0x30b4>
   13650:	ldr	r3, [r5, #44]	; 0x2c
   13654:	mov	r2, r8
   13658:	mov	r1, fp
   1365c:	str	r0, [sl, #4]
   13660:	mov	r7, r0
   13664:	str	r3, [sp, #16]
   13668:	ldr	r3, [r5, #40]	; 0x28
   1366c:	str	r3, [sp, #12]
   13670:	add	r3, r5, #8
   13674:	str	r3, [sp, #8]
   13678:	ldr	r3, [sp, #28]
   1367c:	str	r3, [sp, #4]
   13680:	ldr	r3, [r5]
   13684:	str	r3, [sp]
   13688:	mov	r3, r9
   1368c:	bl	12818 <putchar_unlocked@plt+0x15bc>
   13690:	ldr	r3, [sp, #24]
   13694:	mov	r0, r7
   13698:	ldr	r2, [sp, #32]
   1369c:	str	r2, [r3]
   136a0:	add	sp, sp, #52	; 0x34
   136a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136a8:	andeq	r6, r2, r8, lsr r1
   136ac:	andeq	r6, r2, r0, lsl #4
   136b0:	push	{r4, r5, r6, lr}
   136b4:	mov	r5, r0
   136b8:	bl	1113c <__errno_location@plt>
   136bc:	mov	r4, r0
   136c0:	cmp	r5, #0
   136c4:	ldr	r0, [pc, #20]	; 136e0 <putchar_unlocked@plt+0x2484>
   136c8:	mov	r1, #48	; 0x30
   136cc:	movne	r0, r5
   136d0:	ldr	r6, [r4]
   136d4:	bl	14510 <putchar_unlocked@plt+0x32b4>
   136d8:	str	r6, [r4]
   136dc:	pop	{r4, r5, r6, pc}
   136e0:	andeq	r6, r2, r0, lsl #6
   136e4:	ldr	r3, [pc, #12]	; 136f8 <putchar_unlocked@plt+0x249c>
   136e8:	cmp	r0, #0
   136ec:	moveq	r0, r3
   136f0:	ldr	r0, [r0]
   136f4:	bx	lr
   136f8:	andeq	r6, r2, r0, lsl #6
   136fc:	ldr	r3, [pc, #12]	; 13710 <putchar_unlocked@plt+0x24b4>
   13700:	cmp	r0, #0
   13704:	moveq	r0, r3
   13708:	str	r1, [r0]
   1370c:	bx	lr
   13710:	andeq	r6, r2, r0, lsl #6
   13714:	ldr	r3, [pc, #52]	; 13750 <putchar_unlocked@plt+0x24f4>
   13718:	cmp	r0, #0
   1371c:	push	{lr}		; (str lr, [sp, #-4]!)
   13720:	lsr	lr, r1, #5
   13724:	and	r1, r1, #31
   13728:	moveq	r0, r3
   1372c:	add	r3, r0, #8
   13730:	ldr	ip, [r3, lr, lsl #2]
   13734:	lsr	r0, ip, r1
   13738:	eor	r2, r2, r0
   1373c:	and	r0, r0, #1
   13740:	and	r2, r2, #1
   13744:	eor	r1, ip, r2, lsl r1
   13748:	str	r1, [r3, lr, lsl #2]
   1374c:	pop	{pc}		; (ldr pc, [sp], #4)
   13750:	andeq	r6, r2, r0, lsl #6
   13754:	ldr	r3, [pc, #16]	; 1376c <putchar_unlocked@plt+0x2510>
   13758:	cmp	r0, #0
   1375c:	movne	r3, r0
   13760:	ldr	r0, [r3, #4]
   13764:	str	r1, [r3, #4]
   13768:	bx	lr
   1376c:	andeq	r6, r2, r0, lsl #6
   13770:	ldr	r3, [pc, #44]	; 137a4 <putchar_unlocked@plt+0x2548>
   13774:	cmp	r0, #0
   13778:	moveq	r0, r3
   1377c:	mov	r3, #10
   13780:	cmp	r2, #0
   13784:	cmpne	r1, #0
   13788:	str	r3, [r0]
   1378c:	bne	13798 <putchar_unlocked@plt+0x253c>
   13790:	push	{r4, lr}
   13794:	bl	11244 <abort@plt>
   13798:	str	r1, [r0, #40]	; 0x28
   1379c:	str	r2, [r0, #44]	; 0x2c
   137a0:	bx	lr
   137a4:	andeq	r6, r2, r0, lsl #6
   137a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137ac:	sub	sp, sp, #24
   137b0:	mov	sl, r3
   137b4:	mov	r7, r0
   137b8:	mov	r8, r1
   137bc:	mov	r9, r2
   137c0:	ldr	r4, [sp, #56]	; 0x38
   137c4:	ldr	r3, [pc, #88]	; 13824 <putchar_unlocked@plt+0x25c8>
   137c8:	cmp	r4, #0
   137cc:	moveq	r4, r3
   137d0:	bl	1113c <__errno_location@plt>
   137d4:	ldr	r3, [r4, #44]	; 0x2c
   137d8:	mov	r5, r0
   137dc:	mov	r2, r9
   137e0:	mov	r1, r8
   137e4:	mov	r0, r7
   137e8:	ldr	r6, [r5]
   137ec:	str	r3, [sp, #16]
   137f0:	ldr	r3, [r4, #40]	; 0x28
   137f4:	str	r3, [sp, #12]
   137f8:	add	r3, r4, #8
   137fc:	str	r3, [sp, #8]
   13800:	ldr	r3, [r4, #4]
   13804:	str	r3, [sp, #4]
   13808:	ldr	r3, [r4]
   1380c:	str	r3, [sp]
   13810:	mov	r3, sl
   13814:	bl	12818 <putchar_unlocked@plt+0x15bc>
   13818:	str	r6, [r5]
   1381c:	add	sp, sp, #24
   13820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13824:	andeq	r6, r2, r0, lsl #6
   13828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1382c:	cmp	r3, #0
   13830:	sub	sp, sp, #44	; 0x2c
   13834:	mov	r6, r2
   13838:	mov	sl, r1
   1383c:	mov	r9, r0
   13840:	ldr	r4, [pc, #176]	; 138f8 <putchar_unlocked@plt+0x269c>
   13844:	movne	r4, r3
   13848:	bl	1113c <__errno_location@plt>
   1384c:	ldr	r3, [r0]
   13850:	mov	r1, #0
   13854:	mov	r2, r9
   13858:	mov	r8, r0
   1385c:	mov	r0, r1
   13860:	ldr	r5, [r4, #4]
   13864:	add	fp, r4, #8
   13868:	str	r3, [sp, #28]
   1386c:	ldr	r3, [r4, #44]	; 0x2c
   13870:	cmp	r6, #0
   13874:	orreq	r5, r5, #1
   13878:	str	r3, [sp, #16]
   1387c:	ldr	r3, [r4, #40]	; 0x28
   13880:	stmib	sp, {r5, fp}
   13884:	str	r3, [sp, #12]
   13888:	ldr	r3, [r4]
   1388c:	str	r3, [sp]
   13890:	mov	r3, sl
   13894:	bl	12818 <putchar_unlocked@plt+0x15bc>
   13898:	add	r1, r0, #1
   1389c:	mov	r7, r0
   138a0:	mov	r0, r1
   138a4:	str	r1, [sp, #36]	; 0x24
   138a8:	bl	14310 <putchar_unlocked@plt+0x30b4>
   138ac:	ldr	r3, [r4, #44]	; 0x2c
   138b0:	mov	r2, r9
   138b4:	ldr	r1, [sp, #36]	; 0x24
   138b8:	str	r3, [sp, #16]
   138bc:	ldr	r3, [r4, #40]	; 0x28
   138c0:	stmib	sp, {r5, fp}
   138c4:	str	r0, [sp, #32]
   138c8:	str	r3, [sp, #12]
   138cc:	ldr	r3, [r4]
   138d0:	str	r3, [sp]
   138d4:	mov	r3, sl
   138d8:	bl	12818 <putchar_unlocked@plt+0x15bc>
   138dc:	ldr	r3, [sp, #28]
   138e0:	cmp	r6, #0
   138e4:	ldr	r0, [sp, #32]
   138e8:	str	r3, [r8]
   138ec:	strne	r7, [r6]
   138f0:	add	sp, sp, #44	; 0x2c
   138f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138f8:	andeq	r6, r2, r0, lsl #6
   138fc:	mov	r3, r2
   13900:	mov	r2, #0
   13904:	b	13828 <putchar_unlocked@plt+0x25cc>
   13908:	push	{r4, r5, r6, r7, r8, lr}
   1390c:	mov	r6, #1
   13910:	ldr	r4, [pc, #100]	; 1397c <putchar_unlocked@plt+0x2720>
   13914:	ldr	r5, [r4]
   13918:	add	r7, r5, #4
   1391c:	ldr	r3, [r4, #4]
   13920:	cmp	r3, r6
   13924:	bgt	1396c <putchar_unlocked@plt+0x2710>
   13928:	ldr	r6, [pc, #80]	; 13980 <putchar_unlocked@plt+0x2724>
   1392c:	ldr	r0, [r5, #4]
   13930:	cmp	r0, r6
   13934:	beq	13948 <putchar_unlocked@plt+0x26ec>
   13938:	bl	12404 <putchar_unlocked@plt+0x11a8>
   1393c:	mov	r3, #256	; 0x100
   13940:	str	r3, [r4, #8]
   13944:	str	r6, [r4, #12]
   13948:	ldr	r6, [pc, #52]	; 13984 <putchar_unlocked@plt+0x2728>
   1394c:	cmp	r5, r6
   13950:	beq	13960 <putchar_unlocked@plt+0x2704>
   13954:	mov	r0, r5
   13958:	bl	12404 <putchar_unlocked@plt+0x11a8>
   1395c:	str	r6, [r4]
   13960:	mov	r3, #1
   13964:	str	r3, [r4, #4]
   13968:	pop	{r4, r5, r6, r7, r8, pc}
   1396c:	ldr	r0, [r7, r6, lsl #3]
   13970:	add	r6, r6, #1
   13974:	bl	12404 <putchar_unlocked@plt+0x11a8>
   13978:	b	1391c <putchar_unlocked@plt+0x26c0>
   1397c:	andeq	r6, r2, r8, lsr r1
   13980:	andeq	r6, r2, r0, lsl #4
   13984:	andeq	r6, r2, r0, asr #2
   13988:	ldr	r3, [pc, #4]	; 13994 <putchar_unlocked@plt+0x2738>
   1398c:	mvn	r2, #0
   13990:	b	13508 <putchar_unlocked@plt+0x22ac>
   13994:	andeq	r6, r2, r0, lsl #6
   13998:	ldr	r3, [pc]	; 139a0 <putchar_unlocked@plt+0x2744>
   1399c:	b	13508 <putchar_unlocked@plt+0x22ac>
   139a0:	andeq	r6, r2, r0, lsl #6
   139a4:	mov	r1, r0
   139a8:	mov	r0, #0
   139ac:	b	13988 <putchar_unlocked@plt+0x272c>
   139b0:	mov	r2, r1
   139b4:	mov	r1, r0
   139b8:	mov	r0, #0
   139bc:	b	13998 <putchar_unlocked@plt+0x273c>
   139c0:	push	{r4, r5, lr}
   139c4:	sub	sp, sp, #52	; 0x34
   139c8:	mov	r5, r2
   139cc:	mov	r4, r0
   139d0:	mov	r0, sp
   139d4:	bl	126bc <putchar_unlocked@plt+0x1460>
   139d8:	mov	r3, sp
   139dc:	mvn	r2, #0
   139e0:	mov	r1, r5
   139e4:	mov	r0, r4
   139e8:	bl	13508 <putchar_unlocked@plt+0x22ac>
   139ec:	add	sp, sp, #52	; 0x34
   139f0:	pop	{r4, r5, pc}
   139f4:	push	{r4, r5, r6, lr}
   139f8:	sub	sp, sp, #48	; 0x30
   139fc:	mov	r5, r2
   13a00:	mov	r6, r3
   13a04:	mov	r4, r0
   13a08:	mov	r0, sp
   13a0c:	bl	126bc <putchar_unlocked@plt+0x1460>
   13a10:	mov	r3, sp
   13a14:	mov	r2, r6
   13a18:	mov	r1, r5
   13a1c:	mov	r0, r4
   13a20:	bl	13508 <putchar_unlocked@plt+0x22ac>
   13a24:	add	sp, sp, #48	; 0x30
   13a28:	pop	{r4, r5, r6, pc}
   13a2c:	mov	r2, r1
   13a30:	mov	r1, r0
   13a34:	mov	r0, #0
   13a38:	b	139c0 <putchar_unlocked@plt+0x2764>
   13a3c:	mov	r3, r2
   13a40:	mov	r2, r1
   13a44:	mov	r1, r0
   13a48:	mov	r0, #0
   13a4c:	b	139f4 <putchar_unlocked@plt+0x2798>
   13a50:	push	{r4, r5, r6, lr}
   13a54:	mov	r4, r0
   13a58:	mov	r5, r1
   13a5c:	mov	r6, r2
   13a60:	sub	sp, sp, #48	; 0x30
   13a64:	mov	ip, sp
   13a68:	ldr	lr, [pc, #64]	; 13ab0 <putchar_unlocked@plt+0x2854>
   13a6c:	ldm	lr!, {r0, r1, r2, r3}
   13a70:	stmia	ip!, {r0, r1, r2, r3}
   13a74:	ldm	lr!, {r0, r1, r2, r3}
   13a78:	stmia	ip!, {r0, r1, r2, r3}
   13a7c:	ldm	lr, {r0, r1, r2, r3}
   13a80:	stm	ip, {r0, r1, r2, r3}
   13a84:	mov	r1, r6
   13a88:	mov	r2, #1
   13a8c:	mov	r0, sp
   13a90:	bl	13714 <putchar_unlocked@plt+0x24b8>
   13a94:	mov	r3, sp
   13a98:	mov	r2, r5
   13a9c:	mov	r1, r4
   13aa0:	mov	r0, #0
   13aa4:	bl	13508 <putchar_unlocked@plt+0x22ac>
   13aa8:	add	sp, sp, #48	; 0x30
   13aac:	pop	{r4, r5, r6, pc}
   13ab0:	andeq	r6, r2, r0, lsl #6
   13ab4:	mov	r2, r1
   13ab8:	mvn	r1, #0
   13abc:	b	13a50 <putchar_unlocked@plt+0x27f4>
   13ac0:	mov	r1, #58	; 0x3a
   13ac4:	b	13ab4 <putchar_unlocked@plt+0x2858>
   13ac8:	mov	r2, #58	; 0x3a
   13acc:	b	13a50 <putchar_unlocked@plt+0x27f4>
   13ad0:	push	{r4, r5, lr}
   13ad4:	sub	sp, sp, #100	; 0x64
   13ad8:	mov	r4, r0
   13adc:	mov	r0, sp
   13ae0:	mov	r5, r2
   13ae4:	bl	126bc <putchar_unlocked@plt+0x1460>
   13ae8:	mov	ip, sp
   13aec:	add	lr, sp, #48	; 0x30
   13af0:	ldm	ip!, {r0, r1, r2, r3}
   13af4:	stmia	lr!, {r0, r1, r2, r3}
   13af8:	ldm	ip!, {r0, r1, r2, r3}
   13afc:	stmia	lr!, {r0, r1, r2, r3}
   13b00:	ldm	ip, {r0, r1, r2, r3}
   13b04:	stm	lr, {r0, r1, r2, r3}
   13b08:	mov	r2, #1
   13b0c:	mov	r1, #58	; 0x3a
   13b10:	add	r0, sp, #48	; 0x30
   13b14:	bl	13714 <putchar_unlocked@plt+0x24b8>
   13b18:	add	r3, sp, #48	; 0x30
   13b1c:	mvn	r2, #0
   13b20:	mov	r1, r5
   13b24:	mov	r0, r4
   13b28:	bl	13508 <putchar_unlocked@plt+0x22ac>
   13b2c:	add	sp, sp, #100	; 0x64
   13b30:	pop	{r4, r5, pc}
   13b34:	push	{r4, r5, r6, r7, lr}
   13b38:	mov	r4, r0
   13b3c:	mov	r6, r1
   13b40:	mov	r7, r2
   13b44:	mov	r5, r3
   13b48:	sub	sp, sp, #52	; 0x34
   13b4c:	ldr	lr, [pc, #68]	; 13b98 <putchar_unlocked@plt+0x293c>
   13b50:	mov	ip, sp
   13b54:	ldm	lr!, {r0, r1, r2, r3}
   13b58:	stmia	ip!, {r0, r1, r2, r3}
   13b5c:	ldm	lr!, {r0, r1, r2, r3}
   13b60:	stmia	ip!, {r0, r1, r2, r3}
   13b64:	ldm	lr, {r0, r1, r2, r3}
   13b68:	stm	ip, {r0, r1, r2, r3}
   13b6c:	mov	r2, r7
   13b70:	mov	r1, r6
   13b74:	mov	r0, sp
   13b78:	bl	13770 <putchar_unlocked@plt+0x2514>
   13b7c:	ldr	r2, [sp, #72]	; 0x48
   13b80:	mov	r3, sp
   13b84:	mov	r1, r5
   13b88:	mov	r0, r4
   13b8c:	bl	13508 <putchar_unlocked@plt+0x22ac>
   13b90:	add	sp, sp, #52	; 0x34
   13b94:	pop	{r4, r5, r6, r7, pc}
   13b98:	andeq	r6, r2, r0, lsl #6
   13b9c:	mvn	ip, #0
   13ba0:	push	{r0, r1, r2, lr}
   13ba4:	str	ip, [sp]
   13ba8:	bl	13b34 <putchar_unlocked@plt+0x28d8>
   13bac:	add	sp, sp, #12
   13bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   13bb4:	mov	r3, r2
   13bb8:	mov	r2, r1
   13bbc:	mov	r1, r0
   13bc0:	mov	r0, #0
   13bc4:	b	13b9c <putchar_unlocked@plt+0x2940>
   13bc8:	push	{r0, r1, r2, lr}
   13bcc:	str	r3, [sp]
   13bd0:	mov	r3, r2
   13bd4:	mov	r2, r1
   13bd8:	mov	r1, r0
   13bdc:	mov	r0, #0
   13be0:	bl	13b34 <putchar_unlocked@plt+0x28d8>
   13be4:	add	sp, sp, #12
   13be8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bec:	ldr	r3, [pc]	; 13bf4 <putchar_unlocked@plt+0x2998>
   13bf0:	b	13508 <putchar_unlocked@plt+0x22ac>
   13bf4:	andeq	r6, r2, r8, asr #2
   13bf8:	mov	r2, r1
   13bfc:	mov	r1, r0
   13c00:	mov	r0, #0
   13c04:	b	13bec <putchar_unlocked@plt+0x2990>
   13c08:	mvn	r2, #0
   13c0c:	b	13bec <putchar_unlocked@plt+0x2990>
   13c10:	mov	r1, r0
   13c14:	mov	r0, #0
   13c18:	b	13c08 <putchar_unlocked@plt+0x29ac>
   13c1c:	push	{r4, r5, r6, lr}
   13c20:	mov	r5, r0
   13c24:	mov	r0, #33	; 0x21
   13c28:	bl	142e8 <putchar_unlocked@plt+0x308c>
   13c2c:	mov	r4, r0
   13c30:	add	r1, r5, #44	; 0x2c
   13c34:	mov	r2, #32
   13c38:	mov	r5, #0
   13c3c:	bl	1116c <strncpy@plt>
   13c40:	mov	r0, r4
   13c44:	strb	r5, [r4, #32]
   13c48:	bl	11124 <strlen@plt>
   13c4c:	add	r0, r4, r0
   13c50:	cmp	r0, r4
   13c54:	bls	13c64 <putchar_unlocked@plt+0x2a08>
   13c58:	ldrb	r3, [r0, #-1]
   13c5c:	cmp	r3, #32
   13c60:	beq	13c6c <putchar_unlocked@plt+0x2a10>
   13c64:	mov	r0, r4
   13c68:	pop	{r4, r5, r6, pc}
   13c6c:	strb	r5, [r0, #-1]!
   13c70:	b	13c50 <putchar_unlocked@plt+0x29f4>
   13c74:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   13c78:	mov	r4, #0
   13c7c:	eor	r7, r3, #2
   13c80:	mov	sl, r1
   13c84:	mov	r9, r2
   13c88:	ubfx	r7, r7, #1, #1
   13c8c:	mov	r8, r3
   13c90:	mov	r6, r4
   13c94:	str	r4, [sp, #12]
   13c98:	bl	10f80 <utmpxname@plt>
   13c9c:	bl	1101c <setutxent@plt>
   13ca0:	bl	11250 <getutxent@plt>
   13ca4:	subs	r5, r0, #0
   13ca8:	bne	13cc4 <putchar_unlocked@plt+0x2a68>
   13cac:	bl	111b4 <endutxent@plt>
   13cb0:	mov	r0, r5
   13cb4:	str	r4, [sl]
   13cb8:	str	r6, [r9]
   13cbc:	add	sp, sp, #16
   13cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13cc4:	ldrb	r3, [r5, #44]	; 0x2c
   13cc8:	cmp	r3, #0
   13ccc:	ldrshne	r3, [r5]
   13cd0:	subne	r3, r3, #7
   13cd4:	clzne	r3, r3
   13cd8:	lsrne	r3, r3, #5
   13cdc:	orrs	r2, r7, r3
   13ce0:	beq	13ca0 <putchar_unlocked@plt+0x2a44>
   13ce4:	tst	r8, r3
   13ce8:	beq	13d18 <putchar_unlocked@plt+0x2abc>
   13cec:	ldr	r0, [r5, #4]
   13cf0:	cmp	r0, #0
   13cf4:	ble	13d18 <putchar_unlocked@plt+0x2abc>
   13cf8:	mov	r1, #0
   13cfc:	bl	11100 <kill@plt>
   13d00:	cmp	r0, #0
   13d04:	bge	13d18 <putchar_unlocked@plt+0x2abc>
   13d08:	bl	1113c <__errno_location@plt>
   13d0c:	ldr	r3, [r0]
   13d10:	cmp	r3, #3
   13d14:	beq	13ca0 <putchar_unlocked@plt+0x2a44>
   13d18:	ldr	r3, [sp, #12]
   13d1c:	cmp	r3, r4
   13d20:	bne	13d44 <putchar_unlocked@plt+0x2ae8>
   13d24:	mov	r3, #384	; 0x180
   13d28:	mov	r0, r6
   13d2c:	mov	r2, #1
   13d30:	add	r1, sp, #12
   13d34:	str	r3, [sp]
   13d38:	mvn	r3, #0
   13d3c:	bl	14420 <putchar_unlocked@plt+0x31c4>
   13d40:	mov	r6, r0
   13d44:	mov	r2, #384	; 0x180
   13d48:	mov	r1, r5
   13d4c:	mla	r0, r2, r4, r6
   13d50:	add	r4, r4, #1
   13d54:	bl	10fb0 <memcpy@plt>
   13d58:	b	13ca0 <putchar_unlocked@plt+0x2a44>
   13d5c:	push	{r4, r5, r6, lr}
   13d60:	mov	r5, r1
   13d64:	mov	r1, #0
   13d68:	mov	r4, r2
   13d6c:	bl	111c0 <setlocale@plt>
   13d70:	subs	r6, r0, #0
   13d74:	bne	13d88 <putchar_unlocked@plt+0x2b2c>
   13d78:	cmp	r4, #0
   13d7c:	mov	r0, #22
   13d80:	strbne	r6, [r5]
   13d84:	pop	{r4, r5, r6, pc}
   13d88:	bl	11124 <strlen@plt>
   13d8c:	cmp	r4, r0
   13d90:	bls	13dac <putchar_unlocked@plt+0x2b50>
   13d94:	add	r2, r0, #1
   13d98:	mov	r1, r6
   13d9c:	mov	r0, r5
   13da0:	bl	10fb0 <memcpy@plt>
   13da4:	mov	r0, #0
   13da8:	pop	{r4, r5, r6, pc}
   13dac:	cmp	r4, #0
   13db0:	beq	13dd0 <putchar_unlocked@plt+0x2b74>
   13db4:	sub	r4, r4, #1
   13db8:	mov	r1, r6
   13dbc:	mov	r2, r4
   13dc0:	mov	r0, r5
   13dc4:	bl	10fb0 <memcpy@plt>
   13dc8:	mov	r3, #0
   13dcc:	strb	r3, [r5, r4]
   13dd0:	mov	r0, #34	; 0x22
   13dd4:	pop	{r4, r5, r6, pc}
   13dd8:	mov	r1, #0
   13ddc:	b	111c0 <setlocale@plt>
   13de0:	push	{r4, r5, r6, lr}
   13de4:	cmp	r1, #0
   13de8:	sub	sp, sp, #32
   13dec:	mov	r5, r0
   13df0:	ldr	r4, [sp, #48]	; 0x30
   13df4:	ldr	r6, [sp, #52]	; 0x34
   13df8:	beq	13eac <putchar_unlocked@plt+0x2c50>
   13dfc:	strd	r2, [sp]
   13e00:	mov	r3, r1
   13e04:	mov	r1, #1
   13e08:	ldr	r2, [pc, #856]	; 14168 <putchar_unlocked@plt+0x2f0c>
   13e0c:	bl	11190 <__fprintf_chk@plt>
   13e10:	mov	r2, #5
   13e14:	ldr	r1, [pc, #848]	; 1416c <putchar_unlocked@plt+0x2f10>
   13e18:	mov	r0, #0
   13e1c:	bl	11004 <dcgettext@plt>
   13e20:	movw	r3, #2022	; 0x7e6
   13e24:	ldr	r2, [pc, #836]	; 14170 <putchar_unlocked@plt+0x2f14>
   13e28:	mov	r1, #1
   13e2c:	str	r3, [sp]
   13e30:	mov	r3, r0
   13e34:	mov	r0, r5
   13e38:	bl	11190 <__fprintf_chk@plt>
   13e3c:	mov	r1, r5
   13e40:	mov	r0, #10
   13e44:	bl	10ff8 <fputc_unlocked@plt>
   13e48:	mov	r2, #5
   13e4c:	ldr	r1, [pc, #800]	; 14174 <putchar_unlocked@plt+0x2f18>
   13e50:	mov	r0, #0
   13e54:	bl	11004 <dcgettext@plt>
   13e58:	mov	r2, r0
   13e5c:	mov	r1, #1
   13e60:	ldr	r3, [pc, #784]	; 14178 <putchar_unlocked@plt+0x2f1c>
   13e64:	mov	r0, r5
   13e68:	bl	11190 <__fprintf_chk@plt>
   13e6c:	mov	r1, r5
   13e70:	mov	r0, #10
   13e74:	bl	10ff8 <fputc_unlocked@plt>
   13e78:	cmp	r6, #9
   13e7c:	ldrls	pc, [pc, r6, lsl #2]
   13e80:	b	1415c <putchar_unlocked@plt+0x2f00>
   13e84:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   13e88:	andeq	r3, r1, r4, asr #29
   13e8c:	strdeq	r3, [r1], -r0
   13e90:	andeq	r3, r1, r4, lsr #30
   13e94:	andeq	r3, r1, r0, ror #30
   13e98:	andeq	r3, r1, r4, lsr #31
   13e9c:	andeq	r3, r1, ip, ror #31
   13ea0:	andeq	r4, r1, ip, lsr r0
   13ea4:	muleq	r1, r4, r0
   13ea8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13eac:	mov	r1, #1
   13eb0:	str	r3, [sp]
   13eb4:	mov	r3, r2
   13eb8:	ldr	r2, [pc, #700]	; 1417c <putchar_unlocked@plt+0x2f20>
   13ebc:	bl	11190 <__fprintf_chk@plt>
   13ec0:	b	13e10 <putchar_unlocked@plt+0x2bb4>
   13ec4:	mov	r2, #5
   13ec8:	ldr	r1, [pc, #688]	; 14180 <putchar_unlocked@plt+0x2f24>
   13ecc:	mov	r0, #0
   13ed0:	bl	11004 <dcgettext@plt>
   13ed4:	ldr	r3, [r4]
   13ed8:	mov	r2, r0
   13edc:	mov	r1, #1
   13ee0:	mov	r0, r5
   13ee4:	add	sp, sp, #32
   13ee8:	pop	{r4, r5, r6, lr}
   13eec:	b	11190 <__fprintf_chk@plt>
   13ef0:	mov	r2, #5
   13ef4:	ldr	r1, [pc, #648]	; 14184 <putchar_unlocked@plt+0x2f28>
   13ef8:	mov	r0, #0
   13efc:	bl	11004 <dcgettext@plt>
   13f00:	ldr	r3, [r4, #4]
   13f04:	mov	r2, r0
   13f08:	mov	r1, #1
   13f0c:	mov	r0, r5
   13f10:	str	r3, [sp, #48]	; 0x30
   13f14:	ldr	r3, [r4]
   13f18:	add	sp, sp, #32
   13f1c:	pop	{r4, r5, r6, lr}
   13f20:	b	11190 <__fprintf_chk@plt>
   13f24:	mov	r2, #5
   13f28:	ldr	r1, [pc, #600]	; 14188 <putchar_unlocked@plt+0x2f2c>
   13f2c:	mov	r0, #0
   13f30:	bl	11004 <dcgettext@plt>
   13f34:	ldr	r3, [r4, #8]
   13f38:	mov	r2, r0
   13f3c:	mov	r1, #1
   13f40:	mov	r0, r5
   13f44:	str	r3, [sp, #52]	; 0x34
   13f48:	ldr	r3, [r4, #4]
   13f4c:	str	r3, [sp, #48]	; 0x30
   13f50:	ldr	r3, [r4]
   13f54:	add	sp, sp, #32
   13f58:	pop	{r4, r5, r6, lr}
   13f5c:	b	11190 <__fprintf_chk@plt>
   13f60:	mov	r2, #5
   13f64:	ldr	r1, [pc, #544]	; 1418c <putchar_unlocked@plt+0x2f30>
   13f68:	mov	r0, #0
   13f6c:	bl	11004 <dcgettext@plt>
   13f70:	ldr	r3, [r4, #12]
   13f74:	mov	r2, r0
   13f78:	mov	r1, #1
   13f7c:	mov	r0, r5
   13f80:	str	r3, [sp, #8]
   13f84:	ldr	r3, [r4, #8]
   13f88:	str	r3, [sp, #4]
   13f8c:	ldr	r3, [r4, #4]
   13f90:	str	r3, [sp]
   13f94:	ldr	r3, [r4]
   13f98:	bl	11190 <__fprintf_chk@plt>
   13f9c:	add	sp, sp, #32
   13fa0:	pop	{r4, r5, r6, pc}
   13fa4:	mov	r2, #5
   13fa8:	ldr	r1, [pc, #480]	; 14190 <putchar_unlocked@plt+0x2f34>
   13fac:	mov	r0, #0
   13fb0:	bl	11004 <dcgettext@plt>
   13fb4:	ldr	r3, [r4, #16]
   13fb8:	mov	r2, r0
   13fbc:	mov	r1, #1
   13fc0:	mov	r0, r5
   13fc4:	str	r3, [sp, #12]
   13fc8:	ldr	r3, [r4, #12]
   13fcc:	str	r3, [sp, #8]
   13fd0:	ldr	r3, [r4, #8]
   13fd4:	str	r3, [sp, #4]
   13fd8:	ldr	r3, [r4, #4]
   13fdc:	str	r3, [sp]
   13fe0:	ldr	r3, [r4]
   13fe4:	bl	11190 <__fprintf_chk@plt>
   13fe8:	b	13f9c <putchar_unlocked@plt+0x2d40>
   13fec:	mov	r2, #5
   13ff0:	ldr	r1, [pc, #412]	; 14194 <putchar_unlocked@plt+0x2f38>
   13ff4:	mov	r0, #0
   13ff8:	bl	11004 <dcgettext@plt>
   13ffc:	ldr	r3, [r4, #20]
   14000:	mov	r2, r0
   14004:	mov	r1, #1
   14008:	mov	r0, r5
   1400c:	str	r3, [sp, #16]
   14010:	ldr	r3, [r4, #16]
   14014:	str	r3, [sp, #12]
   14018:	ldr	r3, [r4, #12]
   1401c:	str	r3, [sp, #8]
   14020:	ldr	r3, [r4, #8]
   14024:	str	r3, [sp, #4]
   14028:	ldr	r3, [r4, #4]
   1402c:	str	r3, [sp]
   14030:	ldr	r3, [r4]
   14034:	bl	11190 <__fprintf_chk@plt>
   14038:	b	13f9c <putchar_unlocked@plt+0x2d40>
   1403c:	mov	r2, #5
   14040:	ldr	r1, [pc, #336]	; 14198 <putchar_unlocked@plt+0x2f3c>
   14044:	mov	r0, #0
   14048:	bl	11004 <dcgettext@plt>
   1404c:	ldr	r3, [r4, #24]
   14050:	mov	r2, r0
   14054:	mov	r1, #1
   14058:	mov	r0, r5
   1405c:	str	r3, [sp, #20]
   14060:	ldr	r3, [r4, #20]
   14064:	str	r3, [sp, #16]
   14068:	ldr	r3, [r4, #16]
   1406c:	str	r3, [sp, #12]
   14070:	ldr	r3, [r4, #12]
   14074:	str	r3, [sp, #8]
   14078:	ldr	r3, [r4, #8]
   1407c:	str	r3, [sp, #4]
   14080:	ldr	r3, [r4, #4]
   14084:	str	r3, [sp]
   14088:	ldr	r3, [r4]
   1408c:	bl	11190 <__fprintf_chk@plt>
   14090:	b	13f9c <putchar_unlocked@plt+0x2d40>
   14094:	mov	r2, #5
   14098:	ldr	r1, [pc, #252]	; 1419c <putchar_unlocked@plt+0x2f40>
   1409c:	mov	r0, #0
   140a0:	bl	11004 <dcgettext@plt>
   140a4:	ldr	r3, [r4, #28]
   140a8:	mov	r2, r0
   140ac:	mov	r1, #1
   140b0:	mov	r0, r5
   140b4:	str	r3, [sp, #24]
   140b8:	ldr	r3, [r4, #24]
   140bc:	str	r3, [sp, #20]
   140c0:	ldr	r3, [r4, #20]
   140c4:	str	r3, [sp, #16]
   140c8:	ldr	r3, [r4, #16]
   140cc:	str	r3, [sp, #12]
   140d0:	ldr	r3, [r4, #12]
   140d4:	str	r3, [sp, #8]
   140d8:	ldr	r3, [r4, #8]
   140dc:	str	r3, [sp, #4]
   140e0:	ldr	r3, [r4, #4]
   140e4:	str	r3, [sp]
   140e8:	ldr	r3, [r4]
   140ec:	bl	11190 <__fprintf_chk@plt>
   140f0:	b	13f9c <putchar_unlocked@plt+0x2d40>
   140f4:	ldr	r1, [pc, #164]	; 141a0 <putchar_unlocked@plt+0x2f44>
   140f8:	mov	r2, #5
   140fc:	mov	r0, #0
   14100:	bl	11004 <dcgettext@plt>
   14104:	ldr	r3, [r4, #32]
   14108:	mov	r2, r0
   1410c:	mov	r1, #1
   14110:	mov	r0, r5
   14114:	str	r3, [sp, #28]
   14118:	ldr	r3, [r4, #28]
   1411c:	str	r3, [sp, #24]
   14120:	ldr	r3, [r4, #24]
   14124:	str	r3, [sp, #20]
   14128:	ldr	r3, [r4, #20]
   1412c:	str	r3, [sp, #16]
   14130:	ldr	r3, [r4, #16]
   14134:	str	r3, [sp, #12]
   14138:	ldr	r3, [r4, #12]
   1413c:	str	r3, [sp, #8]
   14140:	ldr	r3, [r4, #8]
   14144:	str	r3, [sp, #4]
   14148:	ldr	r3, [r4, #4]
   1414c:	str	r3, [sp]
   14150:	ldr	r3, [r4]
   14154:	bl	11190 <__fprintf_chk@plt>
   14158:	b	13f9c <putchar_unlocked@plt+0x2d40>
   1415c:	mov	r2, #5
   14160:	ldr	r1, [pc, #60]	; 141a4 <putchar_unlocked@plt+0x2f48>
   14164:	b	140fc <putchar_unlocked@plt+0x2ea0>
   14168:	ldrdeq	r5, [r1], -fp
   1416c:	andeq	r5, r1, lr, ror #5
   14170:			; <UNDEFINED> instruction: 0x000155bc
   14174:	strdeq	r5, [r1], -r2
   14178:	muleq	r1, sp, r3
   1417c:	andeq	r5, r1, r7, ror #5
   14180:			; <UNDEFINED> instruction: 0x000153bf
   14184:	andeq	r5, r1, pc, asr #7
   14188:	andeq	r5, r1, r6, ror #7
   1418c:	andeq	r5, r1, r2, lsl #8
   14190:	andeq	r5, r1, r2, lsr #8
   14194:	andeq	r5, r1, r6, asr #8
   14198:	andeq	r5, r1, lr, ror #8
   1419c:	muleq	r1, sl, r4
   141a0:	andeq	r5, r1, sl, asr #9
   141a4:	strdeq	r5, [r1], -lr
   141a8:	push	{r0, r1, r4, lr}
   141ac:	mov	ip, #0
   141b0:	ldr	lr, [sp, #16]
   141b4:	ldr	r4, [lr, ip, lsl #2]
   141b8:	cmp	r4, #0
   141bc:	bne	141d4 <putchar_unlocked@plt+0x2f78>
   141c0:	str	lr, [sp]
   141c4:	str	ip, [sp, #4]
   141c8:	bl	13de0 <putchar_unlocked@plt+0x2b84>
   141cc:	add	sp, sp, #8
   141d0:	pop	{r4, pc}
   141d4:	add	ip, ip, #1
   141d8:	b	141b4 <putchar_unlocked@plt+0x2f58>
   141dc:	push	{r4, r5, r6, lr}
   141e0:	sub	sp, sp, #48	; 0x30
   141e4:	mov	ip, #0
   141e8:	add	lr, sp, #8
   141ec:	mov	r5, lr
   141f0:	ldr	r6, [sp, #64]	; 0x40
   141f4:	ldr	r4, [r6, ip, lsl #2]
   141f8:	cmp	r4, #0
   141fc:	str	r4, [lr], #4
   14200:	beq	14210 <putchar_unlocked@plt+0x2fb4>
   14204:	add	ip, ip, #1
   14208:	cmp	ip, #10
   1420c:	bne	141f4 <putchar_unlocked@plt+0x2f98>
   14210:	stm	sp, {r5, ip}
   14214:	bl	13de0 <putchar_unlocked@plt+0x2b84>
   14218:	add	sp, sp, #48	; 0x30
   1421c:	pop	{r4, r5, r6, pc}
   14220:	push	{r3}		; (str r3, [sp, #-4]!)
   14224:	push	{r0, r1, r2, r3, lr}
   14228:	add	r3, sp, #24
   1422c:	str	r3, [sp]
   14230:	str	r3, [sp, #12]
   14234:	ldr	r3, [sp, #20]
   14238:	bl	141dc <putchar_unlocked@plt+0x2f80>
   1423c:	add	sp, sp, #16
   14240:	pop	{lr}		; (ldr lr, [sp], #4)
   14244:	add	sp, sp, #4
   14248:	bx	lr
   1424c:	ldr	r3, [pc, #116]	; 142c8 <putchar_unlocked@plt+0x306c>
   14250:	mov	r0, #10
   14254:	push	{r4, lr}
   14258:	ldr	r1, [r3]
   1425c:	bl	10ff8 <fputc_unlocked@plt>
   14260:	mov	r2, #5
   14264:	ldr	r1, [pc, #96]	; 142cc <putchar_unlocked@plt+0x3070>
   14268:	mov	r0, #0
   1426c:	bl	11004 <dcgettext@plt>
   14270:	mov	r1, r0
   14274:	ldr	r2, [pc, #84]	; 142d0 <putchar_unlocked@plt+0x3074>
   14278:	mov	r0, #1
   1427c:	bl	11178 <__printf_chk@plt>
   14280:	mov	r2, #5
   14284:	ldr	r1, [pc, #72]	; 142d4 <putchar_unlocked@plt+0x3078>
   14288:	mov	r0, #0
   1428c:	bl	11004 <dcgettext@plt>
   14290:	mov	r1, r0
   14294:	ldr	r3, [pc, #60]	; 142d8 <putchar_unlocked@plt+0x307c>
   14298:	mov	r0, #1
   1429c:	ldr	r2, [pc, #56]	; 142dc <putchar_unlocked@plt+0x3080>
   142a0:	bl	11178 <__printf_chk@plt>
   142a4:	mov	r2, #5
   142a8:	ldr	r1, [pc, #48]	; 142e0 <putchar_unlocked@plt+0x3084>
   142ac:	mov	r0, #0
   142b0:	bl	11004 <dcgettext@plt>
   142b4:	mov	r1, r0
   142b8:	ldr	r2, [pc, #36]	; 142e4 <putchar_unlocked@plt+0x3088>
   142bc:	mov	r0, #1
   142c0:	pop	{r4, lr}
   142c4:	b	11178 <__printf_chk@plt>
   142c8:	andeq	r6, r2, ip, lsl #3
   142cc:	andeq	r5, r1, sl, lsr r5
   142d0:	andeq	r5, r1, lr, asr #10
   142d4:	andeq	r5, r1, r4, ror #10
   142d8:	muleq	r1, r3, pc	; <UNPREDICTABLE>
   142dc:			; <UNDEFINED> instruction: 0x00014fbb
   142e0:	andeq	r5, r1, r8, ror r5
   142e4:	muleq	r1, pc, r5	; <UNPREDICTABLE>
   142e8:	push	{r4, lr}
   142ec:	bl	14634 <putchar_unlocked@plt+0x33d8>
   142f0:	cmp	r0, #0
   142f4:	popne	{r4, pc}
   142f8:	bl	145a0 <putchar_unlocked@plt+0x3344>
   142fc:	push	{r4, lr}
   14300:	bl	14634 <putchar_unlocked@plt+0x33d8>
   14304:	cmp	r0, #0
   14308:	popne	{r4, pc}
   1430c:	bl	145a0 <putchar_unlocked@plt+0x3344>
   14310:	b	142e8 <putchar_unlocked@plt+0x308c>
   14314:	push	{r4, r5, r6, lr}
   14318:	mov	r5, r0
   1431c:	mov	r4, r1
   14320:	bl	14660 <putchar_unlocked@plt+0x3404>
   14324:	cmp	r0, #0
   14328:	popne	{r4, r5, r6, pc}
   1432c:	adds	r4, r4, #0
   14330:	movne	r4, #1
   14334:	cmp	r5, #0
   14338:	moveq	r4, #1
   1433c:	cmp	r4, #0
   14340:	popeq	{r4, r5, r6, pc}
   14344:	bl	145a0 <putchar_unlocked@plt+0x3344>
   14348:	push	{r4, lr}
   1434c:	bl	14718 <putchar_unlocked@plt+0x34bc>
   14350:	cmp	r0, #0
   14354:	popne	{r4, pc}
   14358:	bl	145a0 <putchar_unlocked@plt+0x3344>
   1435c:	push	{r4, r5, r6, lr}
   14360:	mov	r6, r0
   14364:	mov	r5, r1
   14368:	mov	r4, r2
   1436c:	bl	147c0 <putchar_unlocked@plt+0x3564>
   14370:	cmp	r0, #0
   14374:	popne	{r4, r5, r6, pc}
   14378:	cmp	r6, #0
   1437c:	beq	1438c <putchar_unlocked@plt+0x3130>
   14380:	cmp	r5, #0
   14384:	cmpne	r4, #0
   14388:	popeq	{r4, r5, r6, pc}
   1438c:	bl	145a0 <putchar_unlocked@plt+0x3344>
   14390:	b	1435c <putchar_unlocked@plt+0x3100>
   14394:	push	{r4, lr}
   14398:	bl	14728 <putchar_unlocked@plt+0x34cc>
   1439c:	cmp	r0, #0
   143a0:	popne	{r4, pc}
   143a4:	bl	145a0 <putchar_unlocked@plt+0x3344>
   143a8:	mov	r2, r1
   143ac:	mov	r1, r0
   143b0:	mov	r0, #0
   143b4:	b	1435c <putchar_unlocked@plt+0x3100>
   143b8:	mov	r2, r1
   143bc:	mov	r1, r0
   143c0:	mov	r0, #0
   143c4:	b	14394 <putchar_unlocked@plt+0x3138>
   143c8:	cmp	r0, #0
   143cc:	push	{r4, r5, r6, lr}
   143d0:	mov	r5, r1
   143d4:	ldr	r4, [r1]
   143d8:	bne	14404 <putchar_unlocked@plt+0x31a8>
   143dc:	cmp	r4, #0
   143e0:	bne	143f4 <putchar_unlocked@plt+0x3198>
   143e4:	mov	r4, #64	; 0x40
   143e8:	udiv	r4, r4, r2
   143ec:	cmp	r2, #64	; 0x40
   143f0:	addhi	r4, r4, #1
   143f4:	mov	r1, r4
   143f8:	bl	1435c <putchar_unlocked@plt+0x3100>
   143fc:	str	r4, [r5]
   14400:	pop	{r4, r5, r6, pc}
   14404:	lsr	r3, r4, #1
   14408:	add	r3, r3, #1
   1440c:	adds	r4, r4, r3
   14410:	bcc	143f4 <putchar_unlocked@plt+0x3198>
   14414:	bl	145a0 <putchar_unlocked@plt+0x3344>
   14418:	mov	r2, #1
   1441c:	b	143c8 <putchar_unlocked@plt+0x316c>
   14420:	ldr	ip, [r1]
   14424:	push	{r4, r5, r6, r7, r8, lr}
   14428:	mov	r5, r1
   1442c:	mvn	r8, r3
   14430:	lsr	r8, r8, #31
   14434:	ldr	lr, [sp, #24]
   14438:	asr	r1, ip, #1
   1443c:	adds	r4, ip, r1
   14440:	mvnvs	r4, #-2147483648	; 0x80000000
   14444:	cmp	r3, r4
   14448:	movge	r1, #0
   1444c:	andlt	r1, r8, #1
   14450:	cmp	r1, #0
   14454:	movne	r4, r3
   14458:	smull	r6, r7, r4, lr
   1445c:	cmp	r7, r6, asr #31
   14460:	bne	14478 <putchar_unlocked@plt+0x321c>
   14464:	cmp	r6, #63	; 0x3f
   14468:	mov	r1, r6
   1446c:	bgt	14488 <putchar_unlocked@plt+0x322c>
   14470:	mov	r1, #64	; 0x40
   14474:	b	1447c <putchar_unlocked@plt+0x3220>
   14478:	mvn	r1, #-2147483648	; 0x80000000
   1447c:	sdiv	r4, r1, lr
   14480:	mls	r6, lr, r4, r1
   14484:	sub	r1, r1, r6
   14488:	cmp	r0, #0
   1448c:	sub	r6, r4, ip
   14490:	streq	r0, [r5]
   14494:	cmp	r6, r2
   14498:	bge	144cc <putchar_unlocked@plt+0x3270>
   1449c:	adds	r4, ip, r2
   144a0:	bvs	144c8 <putchar_unlocked@plt+0x326c>
   144a4:	cmp	r4, r3
   144a8:	movle	r3, #0
   144ac:	andgt	r3, r8, #1
   144b0:	cmp	r3, #0
   144b4:	bne	144c8 <putchar_unlocked@plt+0x326c>
   144b8:	smull	r2, r3, r4, lr
   144bc:	cmp	r3, r2, asr #31
   144c0:	mov	r1, r2
   144c4:	beq	144cc <putchar_unlocked@plt+0x3270>
   144c8:	bl	145a0 <putchar_unlocked@plt+0x3344>
   144cc:	bl	14314 <putchar_unlocked@plt+0x30b8>
   144d0:	str	r4, [r5]
   144d4:	pop	{r4, r5, r6, r7, r8, pc}
   144d8:	push	{r4, lr}
   144dc:	bl	145e0 <putchar_unlocked@plt+0x3384>
   144e0:	cmp	r0, #0
   144e4:	popne	{r4, pc}
   144e8:	bl	145a0 <putchar_unlocked@plt+0x3344>
   144ec:	mov	r1, #1
   144f0:	b	144d8 <putchar_unlocked@plt+0x327c>
   144f4:	push	{r4, lr}
   144f8:	bl	145e0 <putchar_unlocked@plt+0x3384>
   144fc:	cmp	r0, #0
   14500:	popne	{r4, pc}
   14504:	bl	145a0 <putchar_unlocked@plt+0x3344>
   14508:	mov	r1, #1
   1450c:	b	144f4 <putchar_unlocked@plt+0x3298>
   14510:	push	{r4, r5, r6, lr}
   14514:	mov	r4, r1
   14518:	mov	r5, r0
   1451c:	mov	r0, r1
   14520:	bl	142e8 <putchar_unlocked@plt+0x308c>
   14524:	mov	r2, r4
   14528:	mov	r1, r5
   1452c:	pop	{r4, r5, r6, lr}
   14530:	b	10fb0 <memcpy@plt>
   14534:	push	{r4, r5, r6, lr}
   14538:	mov	r4, r1
   1453c:	mov	r5, r0
   14540:	mov	r0, r1
   14544:	bl	142fc <putchar_unlocked@plt+0x30a0>
   14548:	mov	r2, r4
   1454c:	mov	r1, r5
   14550:	pop	{r4, r5, r6, lr}
   14554:	b	10fb0 <memcpy@plt>
   14558:	push	{r4, r5, r6, lr}
   1455c:	mov	r5, r0
   14560:	add	r0, r1, #1
   14564:	mov	r4, r1
   14568:	bl	142fc <putchar_unlocked@plt+0x30a0>
   1456c:	mov	r2, #0
   14570:	mov	r1, r5
   14574:	strb	r2, [r0, r4]
   14578:	mov	r2, r4
   1457c:	pop	{r4, r5, r6, lr}
   14580:	b	10fb0 <memcpy@plt>
   14584:	push	{r4, lr}
   14588:	mov	r4, r0
   1458c:	bl	11124 <strlen@plt>
   14590:	add	r1, r0, #1
   14594:	mov	r0, r4
   14598:	pop	{r4, lr}
   1459c:	b	14510 <putchar_unlocked@plt+0x32b4>
   145a0:	ldr	r3, [pc, #44]	; 145d4 <putchar_unlocked@plt+0x3378>
   145a4:	mov	r2, #5
   145a8:	mov	r0, #0
   145ac:	push	{r4, lr}
   145b0:	ldr	r1, [pc, #32]	; 145d8 <putchar_unlocked@plt+0x337c>
   145b4:	ldr	r4, [r3]
   145b8:	bl	11004 <dcgettext@plt>
   145bc:	mov	r3, r0
   145c0:	ldr	r2, [pc, #20]	; 145dc <putchar_unlocked@plt+0x3380>
   145c4:	mov	r1, #0
   145c8:	mov	r0, r4
   145cc:	bl	11094 <error@plt>
   145d0:	bl	11244 <abort@plt>
   145d4:	andeq	r6, r2, r4, lsr r1
   145d8:	andeq	r5, r1, fp, ror #11
   145dc:	ldrdeq	r5, [r1], -r3
   145e0:	cmp	r1, #0
   145e4:	cmpne	r0, #0
   145e8:	beq	14620 <putchar_unlocked@plt+0x33c4>
   145ec:	push	{r4, r5, r6, lr}
   145f0:	umull	r4, r5, r0, r1
   145f4:	adds	r3, r5, #0
   145f8:	movne	r3, #1
   145fc:	cmp	r4, #0
   14600:	blt	1460c <putchar_unlocked@plt+0x33b0>
   14604:	cmp	r3, #0
   14608:	beq	1462c <putchar_unlocked@plt+0x33d0>
   1460c:	bl	1113c <__errno_location@plt>
   14610:	mov	r3, #12
   14614:	str	r3, [r0]
   14618:	mov	r0, #0
   1461c:	pop	{r4, r5, r6, pc}
   14620:	mov	r1, #1
   14624:	mov	r0, r1
   14628:	b	10f38 <calloc@plt>
   1462c:	pop	{r4, r5, r6, lr}
   14630:	b	14628 <putchar_unlocked@plt+0x33cc>
   14634:	cmp	r0, #0
   14638:	beq	14658 <putchar_unlocked@plt+0x33fc>
   1463c:	bge	1465c <putchar_unlocked@plt+0x3400>
   14640:	push	{r4, lr}
   14644:	bl	1113c <__errno_location@plt>
   14648:	mov	r3, #12
   1464c:	str	r3, [r0]
   14650:	mov	r0, #0
   14654:	pop	{r4, pc}
   14658:	mov	r0, #1
   1465c:	b	110a0 <malloc@plt>
   14660:	cmp	r0, #0
   14664:	bne	14670 <putchar_unlocked@plt+0x3414>
   14668:	mov	r0, r1
   1466c:	b	14634 <putchar_unlocked@plt+0x33d8>
   14670:	cmp	r1, #0
   14674:	push	{r4, lr}
   14678:	bne	14688 <putchar_unlocked@plt+0x342c>
   1467c:	bl	12404 <putchar_unlocked@plt+0x11a8>
   14680:	mov	r0, #0
   14684:	pop	{r4, pc}
   14688:	blt	14694 <putchar_unlocked@plt+0x3438>
   1468c:	pop	{r4, lr}
   14690:	b	11028 <realloc@plt>
   14694:	bl	1113c <__errno_location@plt>
   14698:	mov	r3, #12
   1469c:	str	r3, [r0]
   146a0:	b	14680 <putchar_unlocked@plt+0x3424>
   146a4:	push	{r4, r5, r6, lr}
   146a8:	mov	r4, r0
   146ac:	bl	11070 <__fpending@plt>
   146b0:	mov	r5, r0
   146b4:	mov	r0, r4
   146b8:	bl	1107c <ferror_unlocked@plt>
   146bc:	mov	r6, r0
   146c0:	mov	r0, r4
   146c4:	bl	1230c <putchar_unlocked@plt+0x10b0>
   146c8:	cmp	r6, #0
   146cc:	mov	r4, r0
   146d0:	bne	146fc <putchar_unlocked@plt+0x34a0>
   146d4:	cmp	r0, #0
   146d8:	beq	146f4 <putchar_unlocked@plt+0x3498>
   146dc:	cmp	r5, #0
   146e0:	bne	1470c <putchar_unlocked@plt+0x34b0>
   146e4:	bl	1113c <__errno_location@plt>
   146e8:	ldr	r4, [r0]
   146ec:	subs	r4, r4, #9
   146f0:	mvnne	r4, #0
   146f4:	mov	r0, r4
   146f8:	pop	{r4, r5, r6, pc}
   146fc:	cmp	r0, #0
   14700:	bne	1470c <putchar_unlocked@plt+0x34b0>
   14704:	bl	1113c <__errno_location@plt>
   14708:	str	r4, [r0]
   1470c:	mvn	r4, #0
   14710:	b	146f4 <putchar_unlocked@plt+0x3498>
   14714:	b	14634 <putchar_unlocked@plt+0x33d8>
   14718:	cmp	r1, #0
   1471c:	orreq	r1, r1, #1
   14720:	b	14660 <putchar_unlocked@plt+0x3404>
   14724:	b	145e0 <putchar_unlocked@plt+0x3384>
   14728:	cmp	r2, #0
   1472c:	cmpne	r1, #0
   14730:	moveq	r2, #1
   14734:	moveq	r1, r2
   14738:	b	147c0 <putchar_unlocked@plt+0x3564>
   1473c:	push	{r4, lr}
   14740:	mov	r0, #14
   14744:	bl	111d8 <nl_langinfo@plt>
   14748:	cmp	r0, #0
   1474c:	beq	14764 <putchar_unlocked@plt+0x3508>
   14750:	ldrb	r2, [r0]
   14754:	ldr	r3, [pc, #16]	; 1476c <putchar_unlocked@plt+0x3510>
   14758:	cmp	r2, #0
   1475c:	moveq	r0, r3
   14760:	pop	{r4, pc}
   14764:	ldr	r0, [pc]	; 1476c <putchar_unlocked@plt+0x3510>
   14768:	pop	{r4, pc}
   1476c:	strdeq	r5, [r1], -ip
   14770:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14774:	subs	r5, r0, #0
   14778:	mov	r7, r2
   1477c:	addeq	r5, sp, #4
   14780:	mov	r6, r1
   14784:	mov	r0, r5
   14788:	bl	11088 <mbrtowc@plt>
   1478c:	cmp	r7, #0
   14790:	cmnne	r0, #3
   14794:	mov	r4, r0
   14798:	bls	147b4 <putchar_unlocked@plt+0x3558>
   1479c:	mov	r0, #0
   147a0:	bl	124ec <putchar_unlocked@plt+0x1290>
   147a4:	cmp	r0, #0
   147a8:	ldrbeq	r3, [r6]
   147ac:	moveq	r4, #1
   147b0:	streq	r3, [r5]
   147b4:	mov	r0, r4
   147b8:	add	sp, sp, #12
   147bc:	pop	{r4, r5, r6, r7, pc}
   147c0:	umull	r2, r3, r1, r2
   147c4:	cmp	r3, #0
   147c8:	bne	147d4 <putchar_unlocked@plt+0x3578>
   147cc:	mov	r1, r2
   147d0:	b	14660 <putchar_unlocked@plt+0x3404>
   147d4:	push	{r4, lr}
   147d8:	bl	1113c <__errno_location@plt>
   147dc:	mov	r3, #12
   147e0:	str	r3, [r0]
   147e4:	mov	r0, #0
   147e8:	pop	{r4, pc}
   147ec:	cmp	r3, #0
   147f0:	cmpeq	r2, #0
   147f4:	bne	14818 <putchar_unlocked@plt+0x35bc>
   147f8:	cmp	r1, #0
   147fc:	movlt	r1, #-2147483648	; 0x80000000
   14800:	movlt	r0, #0
   14804:	blt	14814 <putchar_unlocked@plt+0x35b8>
   14808:	cmpeq	r0, #0
   1480c:	mvnne	r1, #-2147483648	; 0x80000000
   14810:	mvnne	r0, #0
   14814:	b	148fc <putchar_unlocked@plt+0x36a0>
   14818:	sub	sp, sp, #8
   1481c:	push	{sp, lr}
   14820:	cmp	r1, #0
   14824:	blt	14844 <putchar_unlocked@plt+0x35e8>
   14828:	cmp	r3, #0
   1482c:	blt	14878 <putchar_unlocked@plt+0x361c>
   14830:	bl	1490c <putchar_unlocked@plt+0x36b0>
   14834:	ldr	lr, [sp, #4]
   14838:	add	sp, sp, #8
   1483c:	pop	{r2, r3}
   14840:	bx	lr
   14844:	rsbs	r0, r0, #0
   14848:	sbc	r1, r1, r1, lsl #1
   1484c:	cmp	r3, #0
   14850:	blt	1489c <putchar_unlocked@plt+0x3640>
   14854:	bl	1490c <putchar_unlocked@plt+0x36b0>
   14858:	ldr	lr, [sp, #4]
   1485c:	add	sp, sp, #8
   14860:	pop	{r2, r3}
   14864:	rsbs	r0, r0, #0
   14868:	sbc	r1, r1, r1, lsl #1
   1486c:	rsbs	r2, r2, #0
   14870:	sbc	r3, r3, r3, lsl #1
   14874:	bx	lr
   14878:	rsbs	r2, r2, #0
   1487c:	sbc	r3, r3, r3, lsl #1
   14880:	bl	1490c <putchar_unlocked@plt+0x36b0>
   14884:	ldr	lr, [sp, #4]
   14888:	add	sp, sp, #8
   1488c:	pop	{r2, r3}
   14890:	rsbs	r0, r0, #0
   14894:	sbc	r1, r1, r1, lsl #1
   14898:	bx	lr
   1489c:	rsbs	r2, r2, #0
   148a0:	sbc	r3, r3, r3, lsl #1
   148a4:	bl	1490c <putchar_unlocked@plt+0x36b0>
   148a8:	ldr	lr, [sp, #4]
   148ac:	add	sp, sp, #8
   148b0:	pop	{r2, r3}
   148b4:	rsbs	r2, r2, #0
   148b8:	sbc	r3, r3, r3, lsl #1
   148bc:	bx	lr
   148c0:	cmp	r3, #0
   148c4:	cmpeq	r2, #0
   148c8:	bne	148e0 <putchar_unlocked@plt+0x3684>
   148cc:	cmp	r1, #0
   148d0:	cmpeq	r0, #0
   148d4:	mvnne	r1, #0
   148d8:	mvnne	r0, #0
   148dc:	b	148fc <putchar_unlocked@plt+0x36a0>
   148e0:	sub	sp, sp, #8
   148e4:	push	{sp, lr}
   148e8:	bl	1490c <putchar_unlocked@plt+0x36b0>
   148ec:	ldr	lr, [sp, #4]
   148f0:	add	sp, sp, #8
   148f4:	pop	{r2, r3}
   148f8:	bx	lr
   148fc:	push	{r1, lr}
   14900:	mov	r0, #8
   14904:	bl	10f50 <raise@plt>
   14908:	pop	{r1, pc}
   1490c:	cmp	r1, r3
   14910:	cmpeq	r0, r2
   14914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14918:	mov	r4, r0
   1491c:	movcc	r0, #0
   14920:	mov	r5, r1
   14924:	ldr	lr, [sp, #36]	; 0x24
   14928:	movcc	r1, r0
   1492c:	bcc	14a28 <putchar_unlocked@plt+0x37cc>
   14930:	cmp	r3, #0
   14934:	clzeq	ip, r2
   14938:	clzne	ip, r3
   1493c:	addeq	ip, ip, #32
   14940:	cmp	r5, #0
   14944:	clzeq	r1, r4
   14948:	addeq	r1, r1, #32
   1494c:	clzne	r1, r5
   14950:	sub	ip, ip, r1
   14954:	sub	sl, ip, #32
   14958:	lsl	r9, r3, ip
   1495c:	rsb	fp, ip, #32
   14960:	orr	r9, r9, r2, lsl sl
   14964:	orr	r9, r9, r2, lsr fp
   14968:	lsl	r8, r2, ip
   1496c:	cmp	r5, r9
   14970:	cmpeq	r4, r8
   14974:	movcc	r0, #0
   14978:	movcc	r1, r0
   1497c:	bcc	14998 <putchar_unlocked@plt+0x373c>
   14980:	mov	r0, #1
   14984:	subs	r4, r4, r8
   14988:	lsl	r1, r0, sl
   1498c:	orr	r1, r1, r0, lsr fp
   14990:	lsl	r0, r0, ip
   14994:	sbc	r5, r5, r9
   14998:	cmp	ip, #0
   1499c:	beq	14a28 <putchar_unlocked@plt+0x37cc>
   149a0:	lsr	r6, r8, #1
   149a4:	orr	r6, r6, r9, lsl #31
   149a8:	lsr	r7, r9, #1
   149ac:	mov	r2, ip
   149b0:	b	149d4 <putchar_unlocked@plt+0x3778>
   149b4:	subs	r3, r4, r6
   149b8:	sbc	r8, r5, r7
   149bc:	adds	r3, r3, r3
   149c0:	adc	r8, r8, r8
   149c4:	adds	r4, r3, #1
   149c8:	adc	r5, r8, #0
   149cc:	subs	r2, r2, #1
   149d0:	beq	149f0 <putchar_unlocked@plt+0x3794>
   149d4:	cmp	r5, r7
   149d8:	cmpeq	r4, r6
   149dc:	bcs	149b4 <putchar_unlocked@plt+0x3758>
   149e0:	adds	r4, r4, r4
   149e4:	adc	r5, r5, r5
   149e8:	subs	r2, r2, #1
   149ec:	bne	149d4 <putchar_unlocked@plt+0x3778>
   149f0:	lsr	r3, r4, ip
   149f4:	orr	r3, r3, r5, lsl fp
   149f8:	lsr	r2, r5, ip
   149fc:	orr	r3, r3, r5, lsr sl
   14a00:	adds	r0, r0, r4
   14a04:	mov	r4, r3
   14a08:	lsl	r3, r2, ip
   14a0c:	orr	r3, r3, r4, lsl sl
   14a10:	lsl	ip, r4, ip
   14a14:	orr	r3, r3, r4, lsr fp
   14a18:	adc	r1, r1, r5
   14a1c:	subs	r0, r0, ip
   14a20:	mov	r5, r2
   14a24:	sbc	r1, r1, r3
   14a28:	cmp	lr, #0
   14a2c:	strdne	r4, [lr]
   14a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a38:	mov	r7, r0
   14a3c:	ldr	r6, [pc, #72]	; 14a8c <putchar_unlocked@plt+0x3830>
   14a40:	ldr	r5, [pc, #72]	; 14a90 <putchar_unlocked@plt+0x3834>
   14a44:	add	r6, pc, r6
   14a48:	add	r5, pc, r5
   14a4c:	sub	r6, r6, r5
   14a50:	mov	r8, r1
   14a54:	mov	r9, r2
   14a58:	bl	10f18 <calloc@plt-0x20>
   14a5c:	asrs	r6, r6, #2
   14a60:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a64:	mov	r4, #0
   14a68:	add	r4, r4, #1
   14a6c:	ldr	r3, [r5], #4
   14a70:	mov	r2, r9
   14a74:	mov	r1, r8
   14a78:	mov	r0, r7
   14a7c:	blx	r3
   14a80:	cmp	r6, r4
   14a84:	bne	14a68 <putchar_unlocked@plt+0x380c>
   14a88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a8c:	andeq	r1, r1, r8, asr #9
   14a90:	andeq	r1, r1, r0, asr #9
   14a94:	bx	lr
   14a98:	ldr	r3, [pc, #12]	; 14aac <putchar_unlocked@plt+0x3850>
   14a9c:	mov	r1, #0
   14aa0:	add	r3, pc, r3
   14aa4:	ldr	r2, [r3]
   14aa8:	b	11154 <__cxa_atexit@plt>
   14aac:	andeq	r1, r1, ip, ror r6
   14ab0:	mov	r2, r1
   14ab4:	mov	r1, r0
   14ab8:	mov	r0, #3
   14abc:	b	11220 <__xstat64@plt>

Disassembly of section .fini:

00014ac0 <.fini>:
   14ac0:	push	{r3, lr}
   14ac4:	pop	{r3, pc}
