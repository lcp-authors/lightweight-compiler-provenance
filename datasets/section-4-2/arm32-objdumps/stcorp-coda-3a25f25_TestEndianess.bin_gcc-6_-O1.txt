
../repos/stcorp-coda-3a25f25/CMakeFiles/TestEndianess.bin:     file format elf32-littlearm


Disassembly of section .init:

00010550 <.init>:
   10550:	push	{r3, lr}
   10554:	bl	105d0 <_start@@Base+0x3c>
   10558:	pop	{r3, pc}

Disassembly of section .plt:

0001055c <__libc_start_main@plt-0x14>:
   1055c:	push	{lr}		; (str lr, [sp, #-4]!)
   10560:	ldr	lr, [pc, #4]	; 1056c <__libc_start_main@plt-0x4>
   10564:	add	lr, pc, lr
   10568:	ldr	pc, [lr, #8]!
   1056c:	muleq	r1, r4, sl

00010570 <__libc_start_main@plt>:
   10570:	add	ip, pc, #0, 12
   10574:	add	ip, ip, #16, 20	; 0x10000
   10578:	ldr	pc, [ip, #2708]!	; 0xa94

0001057c <__gmon_start__@plt>:
   1057c:	add	ip, pc, #0, 12
   10580:	add	ip, ip, #16, 20	; 0x10000
   10584:	ldr	pc, [ip, #2700]!	; 0xa8c

00010588 <abort@plt>:
   10588:	add	ip, pc, #0, 12
   1058c:	add	ip, ip, #16, 20	; 0x10000
   10590:	ldr	pc, [ip, #2692]!	; 0xa84

Disassembly of section .text:

00010594 <_start@@Base>:
   10594:	mov	fp, #0
   10598:	mov	lr, #0
   1059c:	pop	{r1}		; (ldr r1, [sp], #4)
   105a0:	mov	r2, sp
   105a4:	push	{r2}		; (str r2, [sp, #-4]!)
   105a8:	push	{r0}		; (str r0, [sp, #-4]!)
   105ac:	ldr	ip, [pc, #16]	; 105c4 <_start@@Base+0x30>
   105b0:	push	{ip}		; (str ip, [sp, #-4]!)
   105b4:	ldr	r0, [pc, #12]	; 105c8 <_start@@Base+0x34>
   105b8:	ldr	r3, [pc, #12]	; 105cc <_start@@Base+0x38>
   105bc:	bl	10570 <__libc_start_main@plt>
   105c0:	bl	10588 <abort@plt>
   105c4:	andeq	r0, r1, ip, lsr r7
   105c8:			; <UNDEFINED> instruction: 0x000106bc
   105cc:	ldrdeq	r0, [r1], -ip
   105d0:	ldr	r3, [pc, #20]	; 105ec <_start@@Base+0x58>
   105d4:	ldr	r2, [pc, #20]	; 105f0 <_start@@Base+0x5c>
   105d8:	add	r3, pc, r3
   105dc:	ldr	r2, [r3, r2]
   105e0:	cmp	r2, #0
   105e4:	bxeq	lr
   105e8:	b	1057c <__gmon_start__@plt>
   105ec:	andeq	r0, r1, r0, lsr #20
   105f0:	andeq	r0, r0, r8, lsl r0
   105f4:	ldr	r3, [pc, #28]	; 10618 <_start@@Base+0x84>
   105f8:	ldr	r0, [pc, #28]	; 1061c <_start@@Base+0x88>
   105fc:	sub	r3, r3, r0
   10600:	cmp	r3, #6
   10604:	bxls	lr
   10608:	ldr	r3, [pc, #16]	; 10620 <_start@@Base+0x8c>
   1060c:	cmp	r3, #0
   10610:	bxeq	lr
   10614:	bx	r3
   10618:	andeq	r1, r2, r7, lsr #32
   1061c:	andeq	r1, r2, r4, lsr #32
   10620:	andeq	r0, r0, r0
   10624:	ldr	r1, [pc, #36]	; 10650 <_start@@Base+0xbc>
   10628:	ldr	r0, [pc, #36]	; 10654 <_start@@Base+0xc0>
   1062c:	sub	r1, r1, r0
   10630:	asr	r1, r1, #2
   10634:	add	r1, r1, r1, lsr #31
   10638:	asrs	r1, r1, #1
   1063c:	bxeq	lr
   10640:	ldr	r3, [pc, #16]	; 10658 <_start@@Base+0xc4>
   10644:	cmp	r3, #0
   10648:	bxeq	lr
   1064c:	bx	r3
   10650:	andeq	r1, r2, r4, lsr #32
   10654:	andeq	r1, r2, r4, lsr #32
   10658:	andeq	r0, r0, r0
   1065c:	push	{r4, lr}
   10660:	ldr	r4, [pc, #24]	; 10680 <_start@@Base+0xec>
   10664:	ldrb	r3, [r4]
   10668:	cmp	r3, #0
   1066c:	popne	{r4, pc}
   10670:	bl	105f4 <_start@@Base+0x60>
   10674:	mov	r3, #1
   10678:	strb	r3, [r4]
   1067c:	pop	{r4, pc}
   10680:	andeq	r1, r2, r4, lsr #32
   10684:	ldr	r0, [pc, #40]	; 106b4 <_start@@Base+0x120>
   10688:	ldr	r3, [r0]
   1068c:	cmp	r3, #0
   10690:	bne	10698 <_start@@Base+0x104>
   10694:	b	10624 <_start@@Base+0x90>
   10698:	ldr	r3, [pc, #24]	; 106b8 <_start@@Base+0x124>
   1069c:	cmp	r3, #0
   106a0:	beq	10694 <_start@@Base+0x100>
   106a4:	push	{r4, lr}
   106a8:	blx	r3
   106ac:	pop	{r4, lr}
   106b0:	b	10624 <_start@@Base+0x90>
   106b4:	andeq	r0, r2, r4, lsl pc
   106b8:	andeq	r0, r0, r0

000106bc <main@@Base>:
   106bc:	ldr	r3, [pc, #20]	; 106d8 <main@@Base+0x1c>
   106c0:	lsl	r0, r0, #1
   106c4:	add	r2, r3, r0
   106c8:	ldrh	r0, [r3, r0]
   106cc:	ldrh	r3, [r2, #24]
   106d0:	add	r0, r0, r3
   106d4:	bx	lr
   106d8:	andeq	r0, r1, ip, asr #14

000106dc <__libc_csu_init@@Base>:
   106dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   106e0:	mov	r7, r0
   106e4:	ldr	r6, [pc, #72]	; 10734 <__libc_csu_init@@Base+0x58>
   106e8:	ldr	r5, [pc, #72]	; 10738 <__libc_csu_init@@Base+0x5c>
   106ec:	add	r6, pc, r6
   106f0:	add	r5, pc, r5
   106f4:	sub	r6, r6, r5
   106f8:	mov	r8, r1
   106fc:	mov	r9, r2
   10700:	bl	10550 <__libc_start_main@plt-0x20>
   10704:	asrs	r6, r6, #2
   10708:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1070c:	mov	r4, #0
   10710:	add	r4, r4, #1
   10714:	ldr	r3, [r5], #4
   10718:	mov	r2, r9
   1071c:	mov	r1, r8
   10720:	mov	r0, r7
   10724:	blx	r3
   10728:	cmp	r6, r4
   1072c:	bne	10710 <__libc_csu_init@@Base+0x34>
   10730:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10734:	andeq	r0, r1, ip, lsl r8
   10738:	andeq	r0, r1, r4, lsl r8

0001073c <__libc_csu_fini@@Base>:
   1073c:	bx	lr

Disassembly of section .fini:

00010740 <.fini>:
   10740:	push	{r3, lr}
   10744:	pop	{r3, pc}
