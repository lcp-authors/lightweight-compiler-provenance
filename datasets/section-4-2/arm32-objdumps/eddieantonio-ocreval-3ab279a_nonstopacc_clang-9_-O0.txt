
../repos/eddieantonio-ocreval-3ab279a/nonstopacc/nonstopacc:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <.init>:
   10a8c:	push	{r3, lr}
   10a90:	bl	10c84 <__assert_fail@plt+0x4c>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <calloc@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <calloc@plt-0x4>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	andeq	r8, r1, r8, asr r5

00010aac <calloc@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #24, 20	; 0x18000
   10ab4:	ldr	pc, [ip, #1368]!	; 0x558

00010ab8 <strcmp@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #24, 20	; 0x18000
   10ac0:	ldr	pc, [ip, #1360]!	; 0x550

00010ac4 <printf@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #24, 20	; 0x18000
   10acc:	ldr	pc, [ip, #1352]!	; 0x548

00010ad0 <fopen@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #24, 20	; 0x18000
   10ad8:	ldr	pc, [ip, #1344]!	; 0x540

00010adc <free@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #24, 20	; 0x18000
   10ae4:	ldr	pc, [ip, #1336]!	; 0x538

00010ae8 <utf8proc_get_property@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #24, 20	; 0x18000
   10af0:	ldr	pc, [ip, #1328]!	; 0x530

00010af4 <fgets@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #24, 20	; 0x18000
   10afc:	ldr	pc, [ip, #1320]!	; 0x528

00010b00 <utf8proc_encode_char@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #24, 20	; 0x18000
   10b08:	ldr	pc, [ip, #1312]!	; 0x520

00010b0c <strdup@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #24, 20	; 0x18000
   10b14:	ldr	pc, [ip, #1304]!	; 0x518

00010b18 <rewind@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #24, 20	; 0x18000
   10b20:	ldr	pc, [ip, #1296]!	; 0x510

00010b24 <utf8proc_tolower@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #24, 20	; 0x18000
   10b2c:	ldr	pc, [ip, #1288]!	; 0x508

00010b30 <__xstat@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #24, 20	; 0x18000
   10b38:	ldr	pc, [ip, #1280]!	; 0x500

00010b3c <fread@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #24, 20	; 0x18000
   10b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b48 <utf8proc_iterate@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #24, 20	; 0x18000
   10b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b54 <malloc@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #24, 20	; 0x18000
   10b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b60 <__libc_start_main@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #24, 20	; 0x18000
   10b68:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b6c <__sysv_signal@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #24, 20	; 0x18000
   10b74:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b78 <__gmon_start__@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #24, 20	; 0x18000
   10b80:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b84 <exit@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #24, 20	; 0x18000
   10b8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b90 <utf8proc_category@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #24, 20	; 0x18000
   10b98:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b9c <strlen@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #24, 20	; 0x18000
   10ba4:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba8 <fprintf@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #24, 20	; 0x18000
   10bb0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb4 <__isoc99_sscanf@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #24, 20	; 0x18000
   10bbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bc0 <fclose@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #24, 20	; 0x18000
   10bc8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bcc <utf8proc_NFC@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #24, 20	; 0x18000
   10bd4:	ldr	pc, [ip, #1176]!	; 0x498

00010bd8 <fputc@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #24, 20	; 0x18000
   10be0:	ldr	pc, [ip, #1168]!	; 0x490

00010be4 <sprintf@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #24, 20	; 0x18000
   10bec:	ldr	pc, [ip, #1160]!	; 0x488

00010bf0 <atoi@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #24, 20	; 0x18000
   10bf8:	ldr	pc, [ip, #1152]!	; 0x480

00010bfc <utf8proc_errmsg@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #24, 20	; 0x18000
   10c04:	ldr	pc, [ip, #1144]!	; 0x478

00010c08 <fputs@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #24, 20	; 0x18000
   10c10:	ldr	pc, [ip, #1136]!	; 0x470

00010c14 <strncmp@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #24, 20	; 0x18000
   10c1c:	ldr	pc, [ip, #1128]!	; 0x468

00010c20 <abort@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #24, 20	; 0x18000
   10c28:	ldr	pc, [ip, #1120]!	; 0x460

00010c2c <getc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #24, 20	; 0x18000
   10c34:	ldr	pc, [ip, #1112]!	; 0x458

00010c38 <__assert_fail@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #24, 20	; 0x18000
   10c40:	ldr	pc, [ip, #1104]!	; 0x450

Disassembly of section .text:

00010c48 <error@@Base-0xfbc>:
   10c48:	mov	fp, #0
   10c4c:	mov	lr, #0
   10c50:	pop	{r1}		; (ldr r1, [sp], #4)
   10c54:	mov	r2, sp
   10c58:	push	{r2}		; (str r2, [sp, #-4]!)
   10c5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c60:	ldr	ip, [pc, #16]	; 10c78 <__assert_fail@plt+0x40>
   10c64:	push	{ip}		; (str ip, [sp, #-4]!)
   10c68:	ldr	r0, [pc, #12]	; 10c7c <__assert_fail@plt+0x44>
   10c6c:	ldr	r3, [pc, #12]	; 10c80 <__assert_fail@plt+0x48>
   10c70:	bl	10b60 <__libc_start_main@plt>
   10c74:	bl	10c20 <abort@plt>
   10c78:	andeq	r4, r1, r0, lsr ip
   10c7c:	andeq	r0, r1, r4, lsr pc
   10c80:	ldrdeq	r4, [r1], -r0
   10c84:	ldr	r3, [pc, #20]	; 10ca0 <__assert_fail@plt+0x68>
   10c88:	ldr	r2, [pc, #20]	; 10ca4 <__assert_fail@plt+0x6c>
   10c8c:	add	r3, pc, r3
   10c90:	ldr	r2, [r3, r2]
   10c94:	cmp	r2, #0
   10c98:	bxeq	lr
   10c9c:	b	10b78 <__gmon_start__@plt>
   10ca0:	andeq	r8, r1, ip, ror #6
   10ca4:	andeq	r0, r0, r0, ror #1
   10ca8:	ldr	r0, [pc, #24]	; 10cc8 <__assert_fail@plt+0x90>
   10cac:	ldr	r3, [pc, #24]	; 10ccc <__assert_fail@plt+0x94>
   10cb0:	cmp	r3, r0
   10cb4:	bxeq	lr
   10cb8:	ldr	r3, [pc, #16]	; 10cd0 <__assert_fail@plt+0x98>
   10cbc:	cmp	r3, #0
   10cc0:	bxeq	lr
   10cc4:	bx	r3
   10cc8:	andeq	r9, r2, r8, asr #2
   10ccc:	andeq	r9, r2, r8, asr #2
   10cd0:	andeq	r0, r0, r0
   10cd4:	ldr	r0, [pc, #36]	; 10d00 <__assert_fail@plt+0xc8>
   10cd8:	ldr	r1, [pc, #36]	; 10d04 <__assert_fail@plt+0xcc>
   10cdc:	sub	r1, r1, r0
   10ce0:	asr	r1, r1, #2
   10ce4:	add	r1, r1, r1, lsr #31
   10ce8:	asrs	r1, r1, #1
   10cec:	bxeq	lr
   10cf0:	ldr	r3, [pc, #16]	; 10d08 <__assert_fail@plt+0xd0>
   10cf4:	cmp	r3, #0
   10cf8:	bxeq	lr
   10cfc:	bx	r3
   10d00:	andeq	r9, r2, r8, asr #2
   10d04:	andeq	r9, r2, r8, asr #2
   10d08:	andeq	r0, r0, r0
   10d0c:	push	{r4, lr}
   10d10:	ldr	r4, [pc, #24]	; 10d30 <__assert_fail@plt+0xf8>
   10d14:	ldrb	r3, [r4]
   10d18:	cmp	r3, #0
   10d1c:	popne	{r4, pc}
   10d20:	bl	10ca8 <__assert_fail@plt+0x70>
   10d24:	mov	r3, #1
   10d28:	strb	r3, [r4]
   10d2c:	pop	{r4, pc}
   10d30:	andeq	r9, r2, r8, asr #2
   10d34:	b	10cd4 <__assert_fail@plt+0x9c>
   10d38:	push	{fp, lr}
   10d3c:	mov	fp, sp
   10d40:	sub	sp, sp, #16
   10d44:	ldr	r2, [pc, #104]	; 10db4 <__assert_fail@plt+0x17c>
   10d48:	ldr	r2, [pc, r2]
   10d4c:	str	r0, [fp, #-4]
   10d50:	str	r1, [sp, #8]
   10d54:	ldr	r0, [fp, #-4]
   10d58:	ldr	r1, [sp, #8]
   10d5c:	blx	r2
   10d60:	str	r0, [sp, #4]
   10d64:	ldr	r0, [sp, #4]
   10d68:	movw	r1, #0
   10d6c:	cmp	r0, r1
   10d70:	beq	10dac <__assert_fail@plt+0x174>
   10d74:	ldr	r0, [pc, #60]	; 10db8 <__assert_fail@plt+0x180>
   10d78:	ldr	r0, [pc, r0]
   10d7c:	ldr	r1, [pc, #56]	; 10dbc <__assert_fail@plt+0x184>
   10d80:	ldr	r1, [pc, r1]
   10d84:	ldr	r2, [sp, #4]
   10d88:	ldr	r2, [r2, #12]
   10d8c:	ldr	r3, [r1]
   10d90:	sub	r2, r3, r2
   10d94:	str	r2, [r1]
   10d98:	ldr	r1, [sp, #4]
   10d9c:	ldr	r1, [r1, #16]
   10da0:	ldr	r2, [r0]
   10da4:	sub	r1, r2, r1
   10da8:	str	r1, [r0]
   10dac:	mov	sp, fp
   10db0:	pop	{fp, pc}
   10db4:	andeq	r8, r1, ip, lsl #7
   10db8:	muleq	r1, r0, r3
   10dbc:	andeq	r8, r1, r0, lsl r3
   10dc0:	push	{fp, lr}
   10dc4:	mov	fp, sp
   10dc8:	ldr	r0, [pc, #104]	; 10e38 <__assert_fail@plt+0x200>
   10dcc:	add	r0, pc, r0
   10dd0:	ldr	r1, [pc, #100]	; 10e3c <__assert_fail@plt+0x204>
   10dd4:	ldr	r1, [pc, r1]
   10dd8:	vldr	d16, [pc, #80]	; 10e30 <__assert_fail@plt+0x1f8>
   10ddc:	ldr	r2, [pc, #92]	; 10e40 <__assert_fail@plt+0x208>
   10de0:	ldr	r2, [pc, r2]
   10de4:	ldr	r3, [pc, #88]	; 10e44 <__assert_fail@plt+0x20c>
   10de8:	add	r3, pc, r3
   10dec:	ldr	ip, [r3]
   10df0:	add	lr, ip, #1
   10df4:	str	lr, [r3]
   10df8:	ldr	r3, [r1]
   10dfc:	ldr	r2, [r2]
   10e00:	sub	r2, r3, r2
   10e04:	vmov	s0, r2
   10e08:	vcvt.f64.s32	d17, s0
   10e0c:	vmul.f64	d16, d16, d17
   10e10:	ldr	r1, [r1]
   10e14:	vmov	s0, r1
   10e18:	vcvt.f64.s32	d17, s0
   10e1c:	vdiv.f64	d16, d16, d17
   10e20:	mov	r1, ip
   10e24:	vmov	r2, r3, d16
   10e28:	bl	10ac4 <printf@plt>
   10e2c:	pop	{fp, pc}
   10e30:	andeq	r0, r0, r0
   10e34:	subsmi	r0, r9, r0
   10e38:	andeq	r3, r0, ip, ror lr
   10e3c:			; <UNDEFINED> instruction: 0x000182bc
   10e40:	andeq	r8, r1, r8, lsr #6
   10e44:	andeq	r8, r1, ip, asr r3
   10e48:	push	{fp, lr}
   10e4c:	mov	fp, sp
   10e50:	sub	sp, sp, #8
   10e54:	ldr	r0, [pc, #188]	; 10f18 <__assert_fail@plt+0x2e0>
   10e58:	ldr	r0, [pc, r0]
   10e5c:	ldr	r1, [pc, #184]	; 10f1c <__assert_fail@plt+0x2e4>
   10e60:	ldr	r1, [pc, r1]
   10e64:	ldr	r2, [pc, #180]	; 10f20 <__assert_fail@plt+0x2e8>
   10e68:	ldr	r2, [pc, r2]
   10e6c:	ldr	r3, [r2]
   10e70:	str	r3, [r0]
   10e74:	ldr	r2, [r2, #4]
   10e78:	str	r2, [r1]
   10e7c:	ldr	r0, [r0]
   10e80:	cmp	r0, #0
   10e84:	bne	10e8c <__assert_fail@plt+0x254>
   10e88:	b	10f10 <__assert_fail@plt+0x2d8>
   10e8c:	bl	10dc0 <__assert_fail@plt+0x188>
   10e90:	ldr	r0, [pc, #140]	; 10f24 <__assert_fail@plt+0x2ec>
   10e94:	ldr	r0, [pc, r0]
   10e98:	ldr	r0, [r0]
   10e9c:	str	r0, [sp, #4]
   10ea0:	ldr	r0, [sp, #4]
   10ea4:	movw	r1, #0
   10ea8:	cmp	r0, r1
   10eac:	beq	10f10 <__assert_fail@plt+0x2d8>
   10eb0:	ldr	r0, [pc, #120]	; 10f30 <__assert_fail@plt+0x2f8>
   10eb4:	ldr	r0, [pc, r0]
   10eb8:	add	r0, r0, #992	; 0x3e0
   10ebc:	ldr	r1, [sp, #4]
   10ec0:	ldr	r1, [r1, #8]
   10ec4:	bl	10d38 <__assert_fail@plt+0x100>
   10ec8:	ldr	r0, [pc, #92]	; 10f2c <__assert_fail@plt+0x2f4>
   10ecc:	ldr	r0, [pc, r0]
   10ed0:	movw	r1, #9048	; 0x2358
   10ed4:	add	r0, r0, r1
   10ed8:	ldr	r1, [sp, #4]
   10edc:	ldr	r1, [r1, #8]
   10ee0:	bl	10d38 <__assert_fail@plt+0x100>
   10ee4:	ldr	r0, [pc, #60]	; 10f28 <__assert_fail@plt+0x2f0>
   10ee8:	ldr	r0, [pc, r0]
   10eec:	ldr	r0, [r0]
   10ef0:	cmp	r0, #0
   10ef4:	bne	10efc <__assert_fail@plt+0x2c4>
   10ef8:	b	10f10 <__assert_fail@plt+0x2d8>
   10efc:	bl	10dc0 <__assert_fail@plt+0x188>
   10f00:	ldr	r0, [sp, #4]
   10f04:	ldr	r0, [r0, #4]
   10f08:	str	r0, [sp, #4]
   10f0c:	b	10ea0 <__assert_fail@plt+0x268>
   10f10:	mov	sp, fp
   10f14:	pop	{fp, pc}
   10f18:	andeq	r8, r1, r8, lsr r2
   10f1c:	andeq	r8, r1, r8, lsr #5
   10f20:	andeq	r8, r1, r8, ror r2
   10f24:	andeq	r8, r1, r8, lsr #4
   10f28:	andeq	r8, r1, r8, lsr #3
   10f2c:	andeq	r8, r1, r4, lsl r2
   10f30:	andeq	r8, r1, ip, lsr #4
   10f34:	push	{fp, lr}
   10f38:	mov	fp, sp
   10f3c:	sub	sp, sp, #24
   10f40:	ldr	r2, [pc, #212]	; 1101c <__assert_fail@plt+0x3e4>
   10f44:	add	r2, pc, r2
   10f48:	ldr	r3, [pc, #208]	; 11020 <__assert_fail@plt+0x3e8>
   10f4c:	ldr	r3, [pc, r3]
   10f50:	movw	ip, #0
   10f54:	str	ip, [fp, #-4]
   10f58:	str	r0, [fp, #-8]
   10f5c:	str	r1, [sp, #12]
   10f60:	ldr	r1, [sp, #12]
   10f64:	sub	r0, fp, #8
   10f68:	str	r3, [sp, #8]
   10f6c:	mov	r3, ip
   10f70:	ldr	ip, [sp, #8]
   10f74:	blx	ip
   10f78:	ldr	r0, [fp, #-8]
   10f7c:	cmp	r0, #2
   10f80:	beq	10f98 <__assert_fail@plt+0x360>
   10f84:	ldr	r0, [pc, #188]	; 11048 <__assert_fail@plt+0x410>
   10f88:	add	r0, pc, r0
   10f8c:	ldr	r1, [pc, #184]	; 1104c <__assert_fail@plt+0x414>
   10f90:	ldr	r1, [pc, r1]
   10f94:	blx	r1
   10f98:	ldr	r0, [pc, #156]	; 1103c <__assert_fail@plt+0x404>
   10f9c:	ldr	r0, [pc, r0]
   10fa0:	ldr	r1, [pc, #152]	; 11040 <__assert_fail@plt+0x408>
   10fa4:	ldr	r2, [pc, r1]
   10fa8:	ldr	r1, [pc, #148]	; 11044 <__assert_fail@plt+0x40c>
   10fac:	ldr	r1, [pc, r1]
   10fb0:	ldr	r3, [sp, #12]
   10fb4:	ldr	r3, [r3]
   10fb8:	str	r1, [sp, #4]
   10fbc:	mov	r1, r3
   10fc0:	ldr	r3, [sp, #4]
   10fc4:	blx	r3
   10fc8:	ldr	r0, [pc, #96]	; 11030 <__assert_fail@plt+0x3f8>
   10fcc:	ldr	r0, [pc, r0]
   10fd0:	ldr	r1, [pc, #92]	; 11034 <__assert_fail@plt+0x3fc>
   10fd4:	ldr	r1, [pc, r1]
   10fd8:	ldr	r2, [pc, #88]	; 11038 <__assert_fail@plt+0x400>
   10fdc:	ldr	r2, [pc, r2]
   10fe0:	blx	r2
   10fe4:	ldr	r0, [pc, #60]	; 11028 <__assert_fail@plt+0x3f0>
   10fe8:	ldr	r0, [pc, r0]
   10fec:	ldr	r1, [pc, #56]	; 1102c <__assert_fail@plt+0x3f4>
   10ff0:	ldr	r1, [pc, r1]
   10ff4:	ldr	r2, [sp, #12]
   10ff8:	ldr	r2, [r2, #4]
   10ffc:	str	r1, [sp]
   11000:	mov	r1, r2
   11004:	ldr	r2, [sp]
   11008:	blx	r2
   1100c:	bl	10e48 <__assert_fail@plt+0x210>
   11010:	ldr	r0, [pc, #12]	; 11024 <__assert_fail@plt+0x3ec>
   11014:	ldr	r0, [pc, r0]
   11018:	blx	r0
   1101c:	andeq	r3, r0, r0, lsl sp
   11020:	andeq	r8, r1, r0, lsl #3
   11024:	andeq	r8, r1, r4, ror #1
   11028:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1102c:	ldrdeq	r8, [r1], -r0
   11030:	strdeq	r8, [r1], -r0
   11034:	andeq	r8, r1, r0, asr #1
   11038:	andeq	r8, r1, r8, lsr r1
   1103c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11040:	andeq	r8, r1, r0, lsl r1
   11044:	andeq	r8, r1, r8, asr #2
   11048:	strdeq	r3, [r0], -r0
   1104c:	andeq	r8, r1, r0, lsl r1
   11050:	push	{fp, lr}
   11054:	mov	fp, sp
   11058:	sub	sp, sp, #16
   1105c:	str	r0, [fp, #-4]
   11060:	movw	r0, #0
   11064:	strh	r0, [fp, #-6]
   11068:	ldrsh	r0, [fp, #-6]
   1106c:	movw	r1, #503	; 0x1f7
   11070:	cmp	r0, r1
   11074:	bge	110b0 <__assert_fail@plt+0x478>
   11078:	ldr	r0, [pc, #92]	; 110dc <__assert_fail@plt+0x4a4>
   1107c:	ldr	r0, [pc, r0]
   11080:	ldr	r1, [fp, #-4]
   11084:	ldrsh	r2, [fp, #-6]
   11088:	add	r1, r1, r2, lsl #4
   1108c:	str	r0, [sp, #4]
   11090:	mov	r0, r1
   11094:	ldr	r1, [sp, #4]
   11098:	blx	r1
   1109c:	ldrh	r0, [fp, #-6]
   110a0:	movw	r1, #1
   110a4:	add	r0, r0, r1
   110a8:	strh	r0, [fp, #-6]
   110ac:	b	11068 <__assert_fail@plt+0x430>
   110b0:	ldr	r0, [fp, #-4]
   110b4:	movw	r1, #8048	; 0x1f70
   110b8:	add	r0, r0, r1
   110bc:	movw	r1, #0
   110c0:	str	r1, [r0]
   110c4:	ldr	r0, [fp, #-4]
   110c8:	movw	r2, #8052	; 0x1f74
   110cc:	add	r0, r0, r2
   110d0:	str	r1, [r0]
   110d4:	mov	sp, fp
   110d8:	pop	{fp, pc}
   110dc:	andeq	r8, r1, r4, lsl #1
   110e0:	push	{fp, lr}
   110e4:	mov	fp, sp
   110e8:	sub	sp, sp, #24
   110ec:	str	r0, [fp, #-4]
   110f0:	str	r1, [fp, #-8]
   110f4:	ldr	r0, [fp, #-4]
   110f8:	ldr	r1, [fp, #-8]
   110fc:	str	r0, [sp, #8]
   11100:	mov	r0, r1
   11104:	bl	11180 <__assert_fail@plt+0x548>
   11108:	mov	r1, r0
   1110c:	ldr	r2, [sp, #8]
   11110:	add	r0, r2, r0, lsl #4
   11114:	ldr	r0, [r0]
   11118:	str	r0, [sp, #12]
   1111c:	ldr	r0, [sp, #12]
   11120:	movw	r1, #0
   11124:	cmp	r0, r1
   11128:	movw	r0, #0
   1112c:	str	r0, [sp, #4]
   11130:	beq	11154 <__assert_fail@plt+0x51c>
   11134:	ldr	r0, [fp, #-8]
   11138:	ldr	r1, [sp, #12]
   1113c:	ldr	r1, [r1, #8]
   11140:	bl	10ab8 <strcmp@plt>
   11144:	cmp	r0, #0
   11148:	movw	r0, #0
   1114c:	movne	r0, #1
   11150:	str	r0, [sp, #4]
   11154:	ldr	r0, [sp, #4]
   11158:	tst	r0, #1
   1115c:	beq	11174 <__assert_fail@plt+0x53c>
   11160:	b	11164 <__assert_fail@plt+0x52c>
   11164:	ldr	r0, [sp, #12]
   11168:	ldr	r0, [r0, #4]
   1116c:	str	r0, [sp, #12]
   11170:	b	1111c <__assert_fail@plt+0x4e4>
   11174:	ldr	r0, [sp, #12]
   11178:	mov	sp, fp
   1117c:	pop	{fp, pc}
   11180:	sub	sp, sp, #16
   11184:	str	r0, [sp, #12]
   11188:	ldr	r0, [sp, #12]
   1118c:	str	r0, [sp, #8]
   11190:	movw	r0, #0
   11194:	str	r0, [sp]
   11198:	str	r0, [sp, #4]
   1119c:	ldr	r0, [sp, #8]
   111a0:	ldr	r1, [sp, #4]
   111a4:	add	r0, r0, r1
   111a8:	ldrsb	r0, [r0]
   111ac:	cmp	r0, #0
   111b0:	beq	111e0 <__assert_fail@plt+0x5a8>
   111b4:	ldr	r0, [sp, #8]
   111b8:	ldr	r1, [sp, #4]
   111bc:	add	r0, r0, r1
   111c0:	ldrb	r0, [r0]
   111c4:	ldr	r1, [sp]
   111c8:	add	r0, r1, r0
   111cc:	str	r0, [sp]
   111d0:	ldr	r0, [sp, #4]
   111d4:	add	r0, r0, #1
   111d8:	str	r0, [sp, #4]
   111dc:	b	1119c <__assert_fail@plt+0x564>
   111e0:	ldr	r0, [sp]
   111e4:	movw	r1, #20065	; 0x4e61
   111e8:	movt	r1, #33354	; 0x824a
   111ec:	smmla	r1, r0, r1, r0
   111f0:	asr	r2, r1, #8
   111f4:	add	r1, r2, r1, lsr #31
   111f8:	movw	r2, #503	; 0x1f7
   111fc:	mls	r0, r1, r2, r0
   11200:	sxth	r0, r0
   11204:	add	sp, sp, #16
   11208:	bx	lr
   1120c:	push	{fp, lr}
   11210:	mov	fp, sp
   11214:	sub	sp, sp, #24
   11218:	ldr	r2, [pc, #112]	; 11290 <__assert_fail@plt+0x658>
   1121c:	ldr	r2, [pc, r2]
   11220:	str	r0, [fp, #-4]
   11224:	str	r1, [fp, #-8]
   11228:	ldr	r0, [fp, #-4]
   1122c:	ldr	r1, [fp, #-8]
   11230:	ldr	r1, [r1, #8]
   11234:	str	r0, [sp, #12]
   11238:	mov	r0, r1
   1123c:	str	r2, [sp, #8]
   11240:	bl	11180 <__assert_fail@plt+0x548>
   11244:	mov	r1, r0
   11248:	ldr	r2, [sp, #12]
   1124c:	add	r0, r2, r0, lsl #4
   11250:	ldr	r3, [fp, #-8]
   11254:	str	r1, [sp, #4]
   11258:	mov	r1, r3
   1125c:	ldr	r3, [sp, #8]
   11260:	blx	r3
   11264:	ldr	r0, [fp, #-4]
   11268:	bl	11294 <__assert_fail@plt+0x65c>
   1126c:	ldr	r0, [fp, #-4]
   11270:	movw	r1, #8052	; 0x1f74
   11274:	add	r2, r0, r1
   11278:	ldr	r2, [r2]
   1127c:	add	r2, r2, #1
   11280:	add	r0, r0, r1
   11284:	str	r2, [r0]
   11288:	mov	sp, fp
   1128c:	pop	{fp, pc}
   11290:	andeq	r7, r1, r0, lsl #29
   11294:	push	{fp, lr}
   11298:	mov	fp, sp
   1129c:	sub	sp, sp, #8
   112a0:	str	r0, [sp, #4]
   112a4:	ldr	r0, [sp, #4]
   112a8:	movw	r1, #8048	; 0x1f70
   112ac:	add	r0, r0, r1
   112b0:	ldr	r0, [r0]
   112b4:	movw	r1, #0
   112b8:	cmp	r0, r1
   112bc:	beq	112e8 <__assert_fail@plt+0x6b0>
   112c0:	ldr	r0, [sp, #4]
   112c4:	movw	r1, #8048	; 0x1f70
   112c8:	add	r0, r0, r1
   112cc:	ldr	r0, [r0]
   112d0:	bl	10adc <free@plt>
   112d4:	ldr	r0, [sp, #4]
   112d8:	movw	r1, #8048	; 0x1f70
   112dc:	add	r0, r0, r1
   112e0:	movw	r1, #0
   112e4:	str	r1, [r0]
   112e8:	mov	sp, fp
   112ec:	pop	{fp, pc}
   112f0:	push	{fp, lr}
   112f4:	mov	fp, sp
   112f8:	sub	sp, sp, #24
   112fc:	ldr	r2, [pc, #116]	; 11378 <__assert_fail@plt+0x740>
   11300:	ldr	r2, [pc, r2]
   11304:	str	r0, [fp, #-4]
   11308:	str	r1, [fp, #-8]
   1130c:	ldr	r0, [fp, #-4]
   11310:	ldr	r1, [fp, #-8]
   11314:	ldr	r1, [r1, #8]
   11318:	str	r0, [sp, #12]
   1131c:	mov	r0, r1
   11320:	str	r2, [sp, #8]
   11324:	bl	11180 <__assert_fail@plt+0x548>
   11328:	mov	r1, r0
   1132c:	ldr	r2, [sp, #12]
   11330:	add	r0, r2, r0, lsl #4
   11334:	ldr	r3, [fp, #-8]
   11338:	str	r1, [sp, #4]
   1133c:	mov	r1, r3
   11340:	ldr	r3, [sp, #8]
   11344:	blx	r3
   11348:	ldr	r0, [fp, #-4]
   1134c:	bl	11294 <__assert_fail@plt+0x65c>
   11350:	ldr	r0, [fp, #-4]
   11354:	movw	r1, #8052	; 0x1f74
   11358:	add	r2, r0, r1
   1135c:	ldr	r2, [r2]
   11360:	mvn	r3, #0
   11364:	add	r2, r2, r3
   11368:	add	r0, r0, r1
   1136c:	str	r2, [r0]
   11370:	mov	sp, fp
   11374:	pop	{fp, pc}
   11378:	andeq	r7, r1, r0, lsr #28
   1137c:	push	{fp, lr}
   11380:	mov	fp, sp
   11384:	sub	sp, sp, #24
   11388:	str	r0, [fp, #-4]
   1138c:	movw	r0, #0
   11390:	str	r0, [sp, #8]
   11394:	ldr	r1, [fp, #-4]
   11398:	movw	r2, #8048	; 0x1f70
   1139c:	add	r1, r1, r2
   113a0:	ldr	r1, [r1]
   113a4:	cmp	r1, r0
   113a8:	bne	113c4 <__assert_fail@plt+0x78c>
   113ac:	ldr	r0, [fp, #-4]
   113b0:	movw	r1, #8052	; 0x1f74
   113b4:	add	r0, r0, r1
   113b8:	ldr	r0, [r0]
   113bc:	cmp	r0, #0
   113c0:	bne	113c8 <__assert_fail@plt+0x790>
   113c4:	b	11488 <__assert_fail@plt+0x850>
   113c8:	ldr	r0, [pc, #192]	; 11490 <__assert_fail@plt+0x858>
   113cc:	ldr	r0, [pc, r0]
   113d0:	ldr	r1, [fp, #-4]
   113d4:	movw	r2, #8052	; 0x1f74
   113d8:	add	r1, r1, r2
   113dc:	ldr	r1, [r1]
   113e0:	str	r0, [sp, #4]
   113e4:	mov	r0, r1
   113e8:	movw	r1, #4
   113ec:	ldr	r2, [sp, #4]
   113f0:	blx	r2
   113f4:	ldr	r1, [fp, #-4]
   113f8:	movw	r2, #8048	; 0x1f70
   113fc:	add	r1, r1, r2
   11400:	str	r0, [r1]
   11404:	movw	r0, #0
   11408:	str	r0, [sp, #12]
   1140c:	ldr	r0, [sp, #12]
   11410:	movw	r1, #503	; 0x1f7
   11414:	cmp	r0, r1
   11418:	bge	11488 <__assert_fail@plt+0x850>
   1141c:	ldr	r0, [fp, #-4]
   11420:	ldr	r1, [sp, #12]
   11424:	add	r0, r0, r1, lsl #4
   11428:	ldr	r0, [r0]
   1142c:	str	r0, [fp, #-8]
   11430:	ldr	r0, [fp, #-8]
   11434:	movw	r1, #0
   11438:	cmp	r0, r1
   1143c:	beq	11474 <__assert_fail@plt+0x83c>
   11440:	ldr	r0, [fp, #-8]
   11444:	ldr	r1, [fp, #-4]
   11448:	movw	r2, #8048	; 0x1f70
   1144c:	ldr	r1, [r1, r2]
   11450:	ldr	r2, [sp, #8]
   11454:	add	r3, r2, #1
   11458:	str	r3, [sp, #8]
   1145c:	add	r1, r1, r2, lsl #2
   11460:	str	r0, [r1]
   11464:	ldr	r0, [fp, #-8]
   11468:	ldr	r0, [r0, #4]
   1146c:	str	r0, [fp, #-8]
   11470:	b	11430 <__assert_fail@plt+0x7f8>
   11474:	b	11478 <__assert_fail@plt+0x840>
   11478:	ldr	r0, [sp, #12]
   1147c:	add	r0, r0, #1
   11480:	str	r0, [sp, #12]
   11484:	b	1140c <__assert_fail@plt+0x7d4>
   11488:	mov	sp, fp
   1148c:	pop	{fp, pc}
   11490:	andeq	r7, r1, r4, asr #26
   11494:	push	{fp, lr}
   11498:	mov	fp, sp
   1149c:	sub	sp, sp, #16
   114a0:	str	r0, [fp, #-4]
   114a4:	str	r1, [sp, #8]
   114a8:	movw	r0, #0
   114ac:	strh	r0, [sp, #6]
   114b0:	ldrsh	r0, [sp, #6]
   114b4:	movw	r1, #503	; 0x1f7
   114b8:	cmp	r0, r1
   114bc:	bge	11500 <__assert_fail@plt+0x8c8>
   114c0:	ldr	r0, [pc, #92]	; 11524 <__assert_fail@plt+0x8ec>
   114c4:	ldr	r0, [pc, r0]
   114c8:	ldr	r1, [fp, #-4]
   114cc:	ldrsh	r2, [sp, #6]
   114d0:	add	r1, r1, r2, lsl #4
   114d4:	ldr	r2, [sp, #8]
   114d8:	str	r0, [sp]
   114dc:	mov	r0, r1
   114e0:	mov	r1, r2
   114e4:	ldr	r2, [sp]
   114e8:	blx	r2
   114ec:	ldrh	r0, [sp, #6]
   114f0:	movw	r1, #1
   114f4:	add	r0, r0, r1
   114f8:	strh	r0, [sp, #6]
   114fc:	b	114b0 <__assert_fail@plt+0x878>
   11500:	ldr	r0, [fp, #-4]
   11504:	bl	11294 <__assert_fail@plt+0x65c>
   11508:	ldr	r0, [fp, #-4]
   1150c:	movw	r1, #8052	; 0x1f74
   11510:	add	r0, r0, r1
   11514:	movw	r1, #0
   11518:	str	r1, [r0]
   1151c:	mov	sp, fp
   11520:	pop	{fp, pc}
   11524:	andeq	r7, r1, r8, asr ip
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #16
   11534:	str	r0, [fp, #-4]
   11538:	str	r1, [sp, #8]
   1153c:	ldr	r0, [fp, #-4]
   11540:	ldr	r1, [sp, #8]
   11544:	bl	10aac <calloc@plt>
   11548:	str	r0, [sp, #4]
   1154c:	ldr	r0, [sp, #4]
   11550:	movw	r1, #0
   11554:	cmp	r0, r1
   11558:	bne	11568 <__assert_fail@plt+0x930>
   1155c:	ldr	r0, [pc, #16]	; 11574 <__assert_fail@plt+0x93c>
   11560:	add	r0, pc, r0
   11564:	bl	11c04 <error@@Base>
   11568:	ldr	r0, [sp, #4]
   1156c:	mov	sp, fp
   11570:	pop	{fp, pc}
   11574:	andeq	r3, r0, r0, lsr r7
   11578:	sub	sp, sp, #20
   1157c:	str	r0, [sp, #12]
   11580:	str	r1, [sp, #8]
   11584:	movw	r0, #0
   11588:	str	r0, [sp, #4]
   1158c:	ldr	r0, [sp, #12]
   11590:	ldr	r1, [sp, #4]
   11594:	add	r0, r0, r1
   11598:	ldrb	r0, [r0]
   1159c:	cmp	r0, #0
   115a0:	movw	r0, #0
   115a4:	str	r0, [sp]
   115a8:	beq	115dc <__assert_fail@plt+0x9a4>
   115ac:	ldr	r0, [sp, #12]
   115b0:	ldr	r1, [sp, #4]
   115b4:	add	r0, r0, r1
   115b8:	ldrb	r0, [r0]
   115bc:	ldr	r1, [sp, #8]
   115c0:	ldr	r2, [sp, #4]
   115c4:	add	r1, r1, r2
   115c8:	ldrb	r1, [r1]
   115cc:	cmp	r0, r1
   115d0:	movw	r0, #0
   115d4:	moveq	r0, #1
   115d8:	str	r0, [sp]
   115dc:	ldr	r0, [sp]
   115e0:	tst	r0, #1
   115e4:	beq	115fc <__assert_fail@plt+0x9c4>
   115e8:	b	115ec <__assert_fail@plt+0x9b4>
   115ec:	ldr	r0, [sp, #4]
   115f0:	add	r0, r0, #1
   115f4:	str	r0, [sp, #4]
   115f8:	b	1158c <__assert_fail@plt+0x954>
   115fc:	ldr	r0, [sp, #12]
   11600:	ldr	r1, [sp, #4]
   11604:	add	r0, r0, r1
   11608:	ldrb	r0, [r0]
   1160c:	cmp	r0, #0
   11610:	bne	1162c <__assert_fail@plt+0x9f4>
   11614:	ldr	r0, [sp, #8]
   11618:	ldr	r1, [sp, #4]
   1161c:	add	r0, r0, r1
   11620:	ldrb	r0, [r0]
   11624:	cmp	r0, #0
   11628:	beq	1166c <__assert_fail@plt+0xa34>
   1162c:	ldr	r0, [sp, #12]
   11630:	ldr	r1, [sp, #4]
   11634:	add	r0, r0, r1
   11638:	ldrb	r0, [r0]
   1163c:	ldr	r1, [sp, #8]
   11640:	ldr	r2, [sp, #4]
   11644:	add	r1, r1, r2
   11648:	ldrb	r1, [r1]
   1164c:	cmp	r0, r1
   11650:	movw	r0, #0
   11654:	movlt	r0, #1
   11658:	tst	r0, #1
   1165c:	mvn	r0, #0
   11660:	moveq	r0, #1
   11664:	str	r0, [sp, #16]
   11668:	b	11674 <__assert_fail@plt+0xa3c>
   1166c:	movw	r0, #0
   11670:	str	r0, [sp, #16]
   11674:	ldr	r0, [sp, #16]
   11678:	add	sp, sp, #20
   1167c:	bx	lr
   11680:	push	{fp, lr}
   11684:	mov	fp, sp
   11688:	sub	sp, sp, #24
   1168c:	str	r0, [fp, #-8]
   11690:	str	r1, [sp, #12]
   11694:	ldr	r0, [fp, #-8]
   11698:	movw	r1, #0
   1169c:	cmp	r0, r1
   116a0:	bne	116e4 <__assert_fail@plt+0xaac>
   116a4:	ldr	r0, [sp, #12]
   116a8:	ldrb	r0, [r0]
   116ac:	cmp	r0, #114	; 0x72
   116b0:	bne	116c8 <__assert_fail@plt+0xa90>
   116b4:	ldr	r0, [pc, #148]	; 11750 <__assert_fail@plt+0xb18>
   116b8:	ldr	r0, [pc, r0]
   116bc:	ldr	r0, [r0]
   116c0:	str	r0, [sp, #4]
   116c4:	b	116d8 <__assert_fail@plt+0xaa0>
   116c8:	ldr	r0, [pc, #124]	; 1174c <__assert_fail@plt+0xb14>
   116cc:	ldr	r0, [pc, r0]
   116d0:	ldr	r0, [r0]
   116d4:	str	r0, [sp, #4]
   116d8:	ldr	r0, [sp, #4]
   116dc:	str	r0, [fp, #-4]
   116e0:	b	11740 <__assert_fail@plt+0xb08>
   116e4:	ldr	r0, [fp, #-8]
   116e8:	ldr	r1, [sp, #12]
   116ec:	bl	10ad0 <fopen@plt>
   116f0:	str	r0, [sp, #8]
   116f4:	ldr	r0, [sp, #8]
   116f8:	movw	r1, #0
   116fc:	cmp	r0, r1
   11700:	beq	11710 <__assert_fail@plt+0xad8>
   11704:	ldr	r0, [sp, #8]
   11708:	str	r0, [fp, #-4]
   1170c:	b	11740 <__assert_fail@plt+0xb08>
   11710:	ldr	r0, [sp, #12]
   11714:	ldrb	r0, [r0]
   11718:	cmp	r0, #119	; 0x77
   1171c:	bne	11730 <__assert_fail@plt+0xaf8>
   11720:	ldr	r0, [pc, #48]	; 11758 <__assert_fail@plt+0xb20>
   11724:	add	r0, pc, r0
   11728:	ldr	r1, [fp, #-8]
   1172c:	bl	11c64 <error@@Base+0x60>
   11730:	ldr	r0, [pc, #28]	; 11754 <__assert_fail@plt+0xb1c>
   11734:	add	r0, pc, r0
   11738:	ldr	r1, [fp, #-8]
   1173c:	bl	11c64 <error@@Base+0x60>
   11740:	ldr	r0, [fp, #-4]
   11744:	mov	sp, fp
   11748:	pop	{fp, pc}
   1174c:	andeq	r7, r1, r0, lsr sl
   11750:	andeq	r7, r1, r8, lsr sl
   11754:	andeq	r3, r0, ip, lsl #11
   11758:	andeq	r3, r0, r6, lsl #11
   1175c:	push	{fp, lr}
   11760:	mov	fp, sp
   11764:	sub	sp, sp, #8
   11768:	ldr	r1, [pc, #60]	; 117ac <__assert_fail@plt+0xb74>
   1176c:	ldr	r1, [pc, r1]
   11770:	str	r0, [sp, #4]
   11774:	ldr	r0, [sp, #4]
   11778:	ldr	r1, [r1]
   1177c:	cmp	r0, r1
   11780:	beq	117a4 <__assert_fail@plt+0xb6c>
   11784:	ldr	r0, [pc, #36]	; 117b0 <__assert_fail@plt+0xb78>
   11788:	ldr	r0, [pc, r0]
   1178c:	ldr	r1, [sp, #4]
   11790:	ldr	r0, [r0]
   11794:	cmp	r1, r0
   11798:	beq	117a4 <__assert_fail@plt+0xb6c>
   1179c:	ldr	r0, [sp, #4]
   117a0:	bl	10bc0 <fclose@plt>
   117a4:	mov	sp, fp
   117a8:	pop	{fp, pc}
   117ac:	andeq	r7, r1, r4, lsl #19
   117b0:	andeq	r7, r1, r4, ror r9
   117b4:	push	{fp, lr}
   117b8:	mov	fp, sp
   117bc:	sub	sp, sp, #96	; 0x60
   117c0:	str	r0, [fp, #-4]
   117c4:	ldr	r0, [fp, #-4]
   117c8:	mov	r1, sp
   117cc:	bl	14c34 <error@@Base+0x3030>
   117d0:	cmp	r0, #0
   117d4:	movw	r0, #0
   117d8:	moveq	r0, #1
   117dc:	tst	r0, #1
   117e0:	movw	r0, #1
   117e4:	moveq	r0, #0
   117e8:	and	r0, r0, #255	; 0xff
   117ec:	mov	sp, fp
   117f0:	pop	{fp, pc}
   117f4:	push	{fp, lr}
   117f8:	mov	fp, sp
   117fc:	sub	sp, sp, #8
   11800:	ldr	r0, [pc, #68]	; 1184c <__assert_fail@plt+0xc14>
   11804:	add	r0, pc, r0
   11808:	ldrh	r1, [r0]
   1180c:	movw	r2, #1
   11810:	add	r1, r1, r2
   11814:	strh	r1, [r0]
   11818:	sxth	r0, r1
   1181c:	bl	11850 <__assert_fail@plt+0xc18>
   11820:	ldr	r1, [pc, #32]	; 11848 <__assert_fail@plt+0xc10>
   11824:	ldr	r1, [pc, r1]
   11828:	str	r0, [sp, #4]
   1182c:	ldr	r0, [sp, #4]
   11830:	blx	r1
   11834:	ldr	r1, [sp, #4]
   11838:	str	r0, [sp]
   1183c:	mov	r0, r1
   11840:	mov	sp, fp
   11844:	pop	{fp, pc}
   11848:	andeq	r7, r1, ip, lsl #17
   1184c:	andeq	r7, r1, r4, asr #18
   11850:	push	{fp, lr}
   11854:	mov	fp, sp
   11858:	sub	sp, sp, #128	; 0x80
   1185c:	ldr	r1, [pc, #112]	; 118d4 <__assert_fail@plt+0xc9c>
   11860:	ldr	r1, [pc, r1]
   11864:	ldr	r2, [pc, #108]	; 118d8 <__assert_fail@plt+0xca0>
   11868:	ldr	r2, [pc, r2]
   1186c:	add	r3, sp, #26
   11870:	strh	r0, [fp, #-2]
   11874:	ldr	r2, [r2]
   11878:	str	r3, [sp, #20]
   1187c:	str	r2, [sp, #16]
   11880:	blx	r1
   11884:	ldr	r1, [pc, #68]	; 118d0 <__assert_fail@plt+0xc98>
   11888:	add	r1, pc, r1
   1188c:	ldrsh	r2, [fp, #-2]
   11890:	ldr	r3, [sp, #20]
   11894:	str	r0, [sp, #12]
   11898:	mov	r0, r3
   1189c:	ldr	ip, [sp, #16]
   118a0:	str	r2, [sp, #8]
   118a4:	mov	r2, ip
   118a8:	ldr	r3, [sp, #12]
   118ac:	ldr	lr, [sp, #8]
   118b0:	str	lr, [sp]
   118b4:	bl	10be4 <sprintf@plt>
   118b8:	add	r1, sp, #26
   118bc:	str	r0, [sp, #4]
   118c0:	mov	r0, r1
   118c4:	bl	10b0c <strdup@plt>
   118c8:	mov	sp, fp
   118cc:	pop	{fp, pc}
   118d0:	andeq	r3, r0, r1, ror #8
   118d4:	andeq	r7, r1, r4, lsl #17
   118d8:	andeq	r7, r1, r4, ror r8
   118dc:	push	{fp, lr}
   118e0:	mov	fp, sp
   118e4:	sub	sp, sp, #16
   118e8:	str	r0, [fp, #-4]
   118ec:	movw	r0, #47	; 0x2f
   118f0:	strb	r0, [fp, #-5]
   118f4:	ldr	r0, [fp, #-4]
   118f8:	bl	10b9c <strlen@plt>
   118fc:	sub	r0, r0, #1
   11900:	strh	r0, [sp, #8]
   11904:	ldrsh	r0, [sp, #8]
   11908:	cmp	r0, #0
   1190c:	movw	r0, #0
   11910:	str	r0, [sp, #4]
   11914:	blt	1193c <__assert_fail@plt+0xd04>
   11918:	ldr	r0, [fp, #-4]
   1191c:	ldrsh	r1, [sp, #8]
   11920:	add	r0, r0, r1
   11924:	ldrb	r0, [r0]
   11928:	ldrb	r1, [fp, #-5]
   1192c:	cmp	r0, r1
   11930:	movw	r0, #0
   11934:	movne	r0, #1
   11938:	str	r0, [sp, #4]
   1193c:	ldr	r0, [sp, #4]
   11940:	tst	r0, #1
   11944:	beq	11960 <__assert_fail@plt+0xd28>
   11948:	b	1194c <__assert_fail@plt+0xd14>
   1194c:	ldrh	r0, [sp, #8]
   11950:	movw	r1, #65535	; 0xffff
   11954:	add	r0, r0, r1
   11958:	strh	r0, [sp, #8]
   1195c:	b	11904 <__assert_fail@plt+0xccc>
   11960:	ldr	r0, [fp, #-4]
   11964:	ldrsh	r1, [sp, #8]
   11968:	add	r1, r1, #1
   1196c:	add	r0, r0, r1
   11970:	mov	sp, fp
   11974:	pop	{fp, pc}
   11978:	push	{fp, lr}
   1197c:	mov	fp, sp
   11980:	sub	sp, sp, #16
   11984:	str	r0, [fp, #-4]
   11988:	str	r1, [sp, #8]
   1198c:	str	r2, [sp, #4]
   11990:	str	r3, [sp]
   11994:	ldr	r0, [sp, #8]
   11998:	ldr	r0, [r0]
   1199c:	bl	118dc <__assert_fail@plt+0xca4>
   119a0:	ldr	r1, [pc, #36]	; 119cc <__assert_fail@plt+0xd94>
   119a4:	ldr	r1, [pc, r1]
   119a8:	str	r0, [r1]
   119ac:	bl	11d40 <error@@Base+0x13c>
   119b0:	ldr	r0, [fp, #-4]
   119b4:	ldr	r1, [sp, #8]
   119b8:	ldr	r2, [sp, #4]
   119bc:	ldr	r3, [sp]
   119c0:	bl	119d0 <__assert_fail@plt+0xd98>
   119c4:	mov	sp, fp
   119c8:	pop	{fp, pc}
   119cc:	andeq	r7, r1, r8, lsr r7
   119d0:	push	{fp, lr}
   119d4:	mov	fp, sp
   119d8:	sub	sp, sp, #48	; 0x30
   119dc:	str	r0, [fp, #-4]
   119e0:	str	r1, [fp, #-8]
   119e4:	str	r2, [fp, #-12]
   119e8:	str	r3, [fp, #-16]
   119ec:	movw	r0, #0
   119f0:	strh	r0, [fp, #-20]	; 0xffffffec
   119f4:	ldr	r0, [fp, #-4]
   119f8:	ldr	r0, [r0]
   119fc:	cmp	r0, #1
   11a00:	bne	11a20 <__assert_fail@plt+0xde8>
   11a04:	ldr	r0, [pc, #404]	; 11ba0 <__assert_fail@plt+0xf68>
   11a08:	ldr	r0, [pc, r0]
   11a0c:	ldrb	r0, [r0]
   11a10:	cmp	r0, #0
   11a14:	beq	11a20 <__assert_fail@plt+0xde8>
   11a18:	ldr	r0, [fp, #-12]
   11a1c:	bl	11dd8 <error@@Base+0x1d4>
   11a20:	movw	r0, #1
   11a24:	strh	r0, [fp, #-18]	; 0xffffffee
   11a28:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   11a2c:	ldr	r1, [fp, #-4]
   11a30:	ldr	r1, [r1]
   11a34:	cmp	r0, r1
   11a38:	bge	11b8c <__assert_fail@plt+0xf54>
   11a3c:	ldr	r0, [fp, #-8]
   11a40:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11a44:	add	r0, r0, r1, lsl #2
   11a48:	ldr	r0, [r0]
   11a4c:	ldrb	r0, [r0]
   11a50:	cmp	r0, #45	; 0x2d
   11a54:	bne	11b54 <__assert_fail@plt+0xf1c>
   11a58:	ldr	r0, [fp, #-8]
   11a5c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11a60:	add	r0, r0, r1, lsl #2
   11a64:	ldr	r0, [r0]
   11a68:	ldrb	r0, [r0, #1]
   11a6c:	cmp	r0, #0
   11a70:	beq	11b54 <__assert_fail@plt+0xf1c>
   11a74:	ldr	r0, [pc, #296]	; 11ba4 <__assert_fail@plt+0xf6c>
   11a78:	add	r0, pc, r0
   11a7c:	ldr	r1, [fp, #-8]
   11a80:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   11a84:	ldr	r2, [r1, r2, lsl #2]!
   11a88:	ldr	r1, [r1]
   11a8c:	str	r0, [sp, #24]
   11a90:	mov	r0, r1
   11a94:	str	r2, [sp, #20]
   11a98:	bl	10b9c <strlen@plt>
   11a9c:	ldr	r1, [sp, #24]
   11aa0:	str	r0, [sp, #16]
   11aa4:	mov	r0, r1
   11aa8:	ldr	r1, [sp, #20]
   11aac:	ldr	r2, [sp, #16]
   11ab0:	bl	10c14 <strncmp@plt>
   11ab4:	cmp	r0, #0
   11ab8:	bne	11ac4 <__assert_fail@plt+0xe8c>
   11abc:	ldr	r0, [fp, #-12]
   11ac0:	bl	11dd8 <error@@Base+0x1d4>
   11ac4:	ldr	r0, [fp, #-8]
   11ac8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11acc:	add	r0, r0, r1, lsl #2
   11ad0:	ldr	r0, [r0]
   11ad4:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11ad8:	add	r1, r1, #1
   11adc:	ldr	r2, [fp, #-4]
   11ae0:	ldr	r2, [r2]
   11ae4:	cmp	r1, r2
   11ae8:	str	r0, [sp, #12]
   11aec:	bge	11b0c <__assert_fail@plt+0xed4>
   11af0:	ldr	r0, [fp, #-8]
   11af4:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11af8:	add	r1, r1, #1
   11afc:	add	r0, r0, r1, lsl #2
   11b00:	ldr	r0, [r0]
   11b04:	str	r0, [sp, #8]
   11b08:	b	11b18 <__assert_fail@plt+0xee0>
   11b0c:	movw	r0, #0
   11b10:	str	r0, [sp, #8]
   11b14:	b	11b18 <__assert_fail@plt+0xee0>
   11b18:	ldr	r0, [sp, #8]
   11b1c:	ldr	r2, [fp, #-16]
   11b20:	ldr	r1, [sp, #12]
   11b24:	str	r0, [sp, #4]
   11b28:	mov	r0, r1
   11b2c:	ldr	r1, [sp, #4]
   11b30:	bl	11e60 <error@@Base+0x25c>
   11b34:	sxtb	r0, r0
   11b38:	cmp	r0, #0
   11b3c:	beq	11b50 <__assert_fail@plt+0xf18>
   11b40:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11b44:	movw	r1, #1
   11b48:	add	r0, r0, r1
   11b4c:	strh	r0, [fp, #-18]	; 0xffffffee
   11b50:	b	11b74 <__assert_fail@plt+0xf3c>
   11b54:	ldr	r0, [fp, #-8]
   11b58:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11b5c:	ldr	r1, [r0, r1, lsl #2]
   11b60:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   11b64:	add	r3, r2, #1
   11b68:	strh	r3, [fp, #-20]	; 0xffffffec
   11b6c:	add	r0, r0, r2, lsl #2
   11b70:	str	r1, [r0]
   11b74:	b	11b78 <__assert_fail@plt+0xf40>
   11b78:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11b7c:	movw	r1, #1
   11b80:	add	r0, r0, r1
   11b84:	strh	r0, [fp, #-18]	; 0xffffffee
   11b88:	b	11a28 <__assert_fail@plt+0xdf0>
   11b8c:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11b90:	ldr	r1, [fp, #-4]
   11b94:	str	r0, [r1]
   11b98:	mov	sp, fp
   11b9c:	pop	{fp, pc}
   11ba0:	muleq	r1, r0, r6
   11ba4:	andeq	r3, r0, lr, lsl #5
   11ba8:	push	{fp, lr}
   11bac:	mov	fp, sp
   11bb0:	movw	r0, #0
   11bb4:	bl	11bb8 <__assert_fail@plt+0xf80>
   11bb8:	push	{fp, lr}
   11bbc:	mov	fp, sp
   11bc0:	sub	sp, sp, #8
   11bc4:	ldr	r1, [pc, #48]	; 11bfc <__assert_fail@plt+0xfc4>
   11bc8:	ldr	r1, [pc, r1]
   11bcc:	str	r0, [sp, #4]
   11bd0:	ldr	r0, [r1]
   11bd4:	movw	r1, #0
   11bd8:	cmp	r0, r1
   11bdc:	beq	11bf0 <__assert_fail@plt+0xfb8>
   11be0:	ldr	r0, [pc, #24]	; 11c00 <__assert_fail@plt+0xfc8>
   11be4:	ldr	r0, [pc, r0]
   11be8:	ldr	r0, [r0]
   11bec:	blx	r0
   11bf0:	bl	120d4 <error@@Base+0x4d0>
   11bf4:	ldr	r0, [sp, #4]
   11bf8:	bl	10b84 <exit@plt>
   11bfc:	andeq	r7, r1, r0, lsr #10
   11c00:	andeq	r7, r1, r4, lsl #10

00011c04 <error@@Base>:
   11c04:	push	{fp, lr}
   11c08:	mov	fp, sp
   11c0c:	sub	sp, sp, #8
   11c10:	ldr	r1, [pc, #64]	; 11c58 <error@@Base+0x54>
   11c14:	add	r1, pc, r1
   11c18:	ldr	r2, [pc, #60]	; 11c5c <error@@Base+0x58>
   11c1c:	ldr	r2, [pc, r2]
   11c20:	ldr	r3, [pc, #56]	; 11c60 <error@@Base+0x5c>
   11c24:	ldr	r3, [pc, r3]
   11c28:	str	r0, [sp, #4]
   11c2c:	ldr	r0, [r3]
   11c30:	ldr	r2, [r2]
   11c34:	ldr	r3, [sp, #4]
   11c38:	bl	10ba8 <fprintf@plt>
   11c3c:	ldr	r1, [pc, #16]	; 11c54 <error@@Base+0x50>
   11c40:	ldr	r1, [pc, r1]
   11c44:	ldr	r1, [r1]
   11c48:	str	r0, [sp]
   11c4c:	mov	r0, r1
   11c50:	bl	11bb8 <__assert_fail@plt+0xf80>
   11c54:	andeq	r7, r1, ip, asr #9
   11c58:	andeq	r3, r0, r0, asr #1
   11c5c:	andeq	r7, r1, r0, asr #9
   11c60:	andeq	r7, r1, r0, lsr #9
   11c64:	push	{fp, lr}
   11c68:	mov	fp, sp
   11c6c:	sub	sp, sp, #24
   11c70:	ldr	r2, [pc, #88]	; 11cd0 <error@@Base+0xcc>
   11c74:	add	r2, pc, r2
   11c78:	ldr	r3, [pc, #84]	; 11cd4 <error@@Base+0xd0>
   11c7c:	ldr	r3, [pc, r3]
   11c80:	ldr	ip, [pc, #80]	; 11cd8 <error@@Base+0xd4>
   11c84:	ldr	ip, [pc, ip]
   11c88:	str	r0, [fp, #-4]
   11c8c:	str	r1, [fp, #-8]
   11c90:	ldr	r0, [ip]
   11c94:	ldr	r1, [r3]
   11c98:	ldr	r3, [fp, #-4]
   11c9c:	ldr	ip, [fp, #-8]
   11ca0:	str	r1, [sp, #12]
   11ca4:	mov	r1, r2
   11ca8:	ldr	r2, [sp, #12]
   11cac:	str	ip, [sp]
   11cb0:	bl	10ba8 <fprintf@plt>
   11cb4:	ldr	r1, [pc, #16]	; 11ccc <error@@Base+0xc8>
   11cb8:	ldr	r1, [pc, r1]
   11cbc:	ldr	r1, [r1]
   11cc0:	str	r0, [sp, #8]
   11cc4:	mov	r0, r1
   11cc8:	bl	11bb8 <__assert_fail@plt+0xf80>
   11ccc:	andeq	r7, r1, r4, asr r4
   11cd0:	andeq	r3, r0, r8, rrx
   11cd4:	andeq	r7, r1, r0, ror #8
   11cd8:	andeq	r7, r1, r0, asr #8
   11cdc:	push	{fp, lr}
   11ce0:	mov	fp, sp
   11ce4:	sub	sp, sp, #16
   11ce8:	ldr	r2, [pc, #68]	; 11d34 <error@@Base+0x130>
   11cec:	add	r2, pc, r2
   11cf0:	ldr	r3, [pc, #64]	; 11d38 <error@@Base+0x134>
   11cf4:	ldr	r3, [pc, r3]
   11cf8:	ldr	ip, [pc, #60]	; 11d3c <error@@Base+0x138>
   11cfc:	ldr	ip, [pc, ip]
   11d00:	str	r0, [fp, #-4]
   11d04:	str	r1, [sp, #8]
   11d08:	ldr	r0, [ip]
   11d0c:	ldr	r1, [r3]
   11d10:	ldr	r3, [fp, #-4]
   11d14:	ldr	ip, [sp, #8]
   11d18:	str	r1, [sp, #4]
   11d1c:	mov	r1, r2
   11d20:	ldr	r2, [sp, #4]
   11d24:	str	ip, [sp]
   11d28:	bl	10ba8 <fprintf@plt>
   11d2c:	mov	sp, fp
   11d30:	pop	{fp, pc}
   11d34:	strdeq	r2, [r0], -r0
   11d38:	andeq	r7, r1, r8, ror #7
   11d3c:	andeq	r7, r1, r8, asr #7
   11d40:	push	{fp, lr}
   11d44:	mov	fp, sp
   11d48:	sub	sp, sp, #8
   11d4c:	ldr	r0, [pc, #44]	; 11d80 <error@@Base+0x17c>
   11d50:	add	r1, pc, r0
   11d54:	movw	r0, #2
   11d58:	bl	10b6c <__sysv_signal@plt>
   11d5c:	ldr	r1, [pc, #24]	; 11d7c <error@@Base+0x178>
   11d60:	add	r1, pc, r1
   11d64:	movw	r2, #15
   11d68:	str	r0, [sp, #4]
   11d6c:	mov	r0, r2
   11d70:	bl	10b6c <__sysv_signal@plt>
   11d74:	mov	sp, fp
   11d78:	pop	{fp, pc}
   11d7c:	andeq	r0, r0, ip, lsl r0
   11d80:	andeq	r0, r0, ip, lsr #32
   11d84:	push	{fp, lr}
   11d88:	mov	fp, sp
   11d8c:	sub	sp, sp, #8
   11d90:	ldr	r1, [pc, #52]	; 11dcc <error@@Base+0x1c8>
   11d94:	add	r1, pc, r1
   11d98:	str	r0, [sp, #4]
   11d9c:	ldrsb	r0, [r1]
   11da0:	cmp	r0, #0
   11da4:	beq	11db0 <error@@Base+0x1ac>
   11da8:	mov	sp, fp
   11dac:	pop	{fp, pc}
   11db0:	ldr	r0, [pc, #24]	; 11dd0 <error@@Base+0x1cc>
   11db4:	add	r0, pc, r0
   11db8:	ldr	r1, [pc, #20]	; 11dd4 <error@@Base+0x1d0>
   11dbc:	add	r1, pc, r1
   11dc0:	movw	r2, #1
   11dc4:	strb	r2, [r1]
   11dc8:	bl	11c04 <error@@Base>
   11dcc:			; <UNDEFINED> instruction: 0x000173b6
   11dd0:	andeq	r2, r0, r3, asr #30
   11dd4:	andeq	r7, r1, lr, lsl #7
   11dd8:	push	{fp, lr}
   11ddc:	mov	fp, sp
   11de0:	sub	sp, sp, #8
   11de4:	ldr	r1, [pc, #96]	; 11e4c <error@@Base+0x248>
   11de8:	ldr	r1, [pc, r1]
   11dec:	str	r0, [sp, #4]
   11df0:	ldr	r0, [r1]
   11df4:	movw	r1, #0
   11df8:	cmp	r0, r1
   11dfc:	beq	11e14 <error@@Base+0x210>
   11e00:	ldr	r0, [pc, #84]	; 11e5c <error@@Base+0x258>
   11e04:	ldr	r0, [pc, r0]
   11e08:	ldr	r0, [r0]
   11e0c:	blx	r0
   11e10:	b	11e48 <error@@Base+0x244>
   11e14:	ldr	r0, [pc, #52]	; 11e50 <error@@Base+0x24c>
   11e18:	add	r1, pc, r0
   11e1c:	ldr	r0, [pc, #48]	; 11e54 <error@@Base+0x250>
   11e20:	ldr	r0, [pc, r0]
   11e24:	ldr	r2, [pc, #44]	; 11e58 <error@@Base+0x254>
   11e28:	ldr	r2, [pc, r2]
   11e2c:	ldr	r2, [r2]
   11e30:	ldr	r0, [r0]
   11e34:	ldr	r3, [sp, #4]
   11e38:	str	r0, [sp]
   11e3c:	mov	r0, r2
   11e40:	ldr	r2, [sp]
   11e44:	bl	10ba8 <fprintf@plt>
   11e48:	bl	11ba8 <__assert_fail@plt+0xf70>
   11e4c:	andeq	r7, r1, r0, asr #5
   11e50:	strdeq	r2, [r0], -r4
   11e54:			; <UNDEFINED> instruction: 0x000172bc
   11e58:	muleq	r1, ip, r2
   11e5c:	andeq	r7, r1, r4, lsr #5
   11e60:	push	{fp, lr}
   11e64:	mov	fp, sp
   11e68:	sub	sp, sp, #32
   11e6c:	str	r0, [fp, #-8]
   11e70:	str	r1, [fp, #-12]
   11e74:	str	r2, [sp, #16]
   11e78:	ldr	r0, [sp, #16]
   11e7c:	movw	r1, #0
   11e80:	cmp	r0, r1
   11e84:	bne	11e8c <error@@Base+0x288>
   11e88:	b	120a0 <error@@Base+0x49c>
   11e8c:	movw	r0, #0
   11e90:	strh	r0, [sp, #14]
   11e94:	ldr	r0, [sp, #16]
   11e98:	ldrsh	r1, [sp, #14]
   11e9c:	movw	r2, #12
   11ea0:	mul	r1, r1, r2
   11ea4:	add	r0, r0, r1
   11ea8:	ldrb	r0, [r0]
   11eac:	cmp	r0, #0
   11eb0:	movw	r0, #0
   11eb4:	str	r0, [sp, #8]
   11eb8:	beq	11eec <error@@Base+0x2e8>
   11ebc:	ldr	r0, [fp, #-8]
   11ec0:	ldrb	r0, [r0, #1]
   11ec4:	ldr	r1, [sp, #16]
   11ec8:	ldrsh	r2, [sp, #14]
   11ecc:	movw	r3, #12
   11ed0:	mul	r2, r2, r3
   11ed4:	add	r1, r1, r2
   11ed8:	ldrb	r1, [r1]
   11edc:	cmp	r0, r1
   11ee0:	movw	r0, #0
   11ee4:	movne	r0, #1
   11ee8:	str	r0, [sp, #8]
   11eec:	ldr	r0, [sp, #8]
   11ef0:	tst	r0, #1
   11ef4:	beq	11f10 <error@@Base+0x30c>
   11ef8:	b	11efc <error@@Base+0x2f8>
   11efc:	ldrh	r0, [sp, #14]
   11f00:	movw	r1, #1
   11f04:	add	r0, r0, r1
   11f08:	strh	r0, [sp, #14]
   11f0c:	b	11e94 <error@@Base+0x290>
   11f10:	ldr	r0, [sp, #16]
   11f14:	ldrsh	r1, [sp, #14]
   11f18:	movw	r2, #12
   11f1c:	mul	r1, r1, r2
   11f20:	add	r0, r0, r1
   11f24:	ldrsb	r0, [r0]
   11f28:	cmp	r0, #0
   11f2c:	bne	11f34 <error@@Base+0x330>
   11f30:	b	120a0 <error@@Base+0x49c>
   11f34:	ldr	r0, [sp, #16]
   11f38:	ldrsh	r1, [sp, #14]
   11f3c:	movw	r2, #12
   11f40:	mul	r1, r1, r2
   11f44:	add	r0, r0, r1
   11f48:	ldr	r0, [r0, #4]
   11f4c:	movw	r1, #0
   11f50:	cmp	r0, r1
   11f54:	beq	12014 <error@@Base+0x410>
   11f58:	ldr	r0, [fp, #-8]
   11f5c:	ldrb	r0, [r0, #2]
   11f60:	cmp	r0, #0
   11f64:	bne	11f78 <error@@Base+0x374>
   11f68:	ldr	r0, [fp, #-12]
   11f6c:	movw	r1, #0
   11f70:	cmp	r0, r1
   11f74:	beq	12014 <error@@Base+0x410>
   11f78:	ldr	r0, [sp, #16]
   11f7c:	ldrsh	r1, [sp, #14]
   11f80:	movw	r2, #12
   11f84:	mul	r1, r1, r2
   11f88:	add	r0, r0, r1
   11f8c:	ldr	r0, [r0, #4]
   11f90:	ldr	r0, [r0]
   11f94:	movw	r1, #0
   11f98:	cmp	r0, r1
   11f9c:	beq	11fa4 <error@@Base+0x3a0>
   11fa0:	b	120b0 <error@@Base+0x4ac>
   11fa4:	ldr	r0, [fp, #-8]
   11fa8:	ldrb	r0, [r0, #2]
   11fac:	cmp	r0, #0
   11fb0:	beq	11fc4 <error@@Base+0x3c0>
   11fb4:	ldr	r0, [fp, #-8]
   11fb8:	add	r0, r0, #2
   11fbc:	str	r0, [sp, #4]
   11fc0:	b	11fcc <error@@Base+0x3c8>
   11fc4:	ldr	r0, [fp, #-12]
   11fc8:	str	r0, [sp, #4]
   11fcc:	ldr	r0, [sp, #4]
   11fd0:	ldr	r1, [sp, #16]
   11fd4:	ldrsh	r2, [sp, #14]
   11fd8:	movw	r3, #12
   11fdc:	mul	r2, r2, r3
   11fe0:	add	r1, r1, r2
   11fe4:	ldr	r1, [r1, #4]
   11fe8:	str	r0, [r1]
   11fec:	ldr	r0, [fp, #-8]
   11ff0:	ldrb	r0, [r0, #2]
   11ff4:	cmp	r0, #0
   11ff8:	movw	r0, #0
   11ffc:	movne	r0, #1
   12000:	tst	r0, #1
   12004:	movw	r0, #0
   12008:	moveq	r0, #1
   1200c:	strb	r0, [fp, #-1]
   12010:	b	120c0 <error@@Base+0x4bc>
   12014:	ldr	r0, [sp, #16]
   12018:	ldrsh	r1, [sp, #14]
   1201c:	movw	r2, #12
   12020:	mul	r1, r1, r2
   12024:	add	r0, r0, r1
   12028:	ldr	r0, [r0, #8]
   1202c:	movw	r1, #0
   12030:	cmp	r0, r1
   12034:	beq	1209c <error@@Base+0x498>
   12038:	ldr	r0, [fp, #-8]
   1203c:	ldrsb	r0, [r0, #2]
   12040:	cmp	r0, #0
   12044:	bne	1209c <error@@Base+0x498>
   12048:	ldr	r0, [sp, #16]
   1204c:	ldrsh	r1, [sp, #14]
   12050:	movw	r2, #12
   12054:	mul	r1, r1, r2
   12058:	add	r0, r0, r1
   1205c:	ldr	r0, [r0, #8]
   12060:	ldrsb	r0, [r0]
   12064:	cmp	r0, #0
   12068:	beq	12070 <error@@Base+0x46c>
   1206c:	b	120b0 <error@@Base+0x4ac>
   12070:	ldr	r0, [sp, #16]
   12074:	ldrsh	r1, [sp, #14]
   12078:	movw	r2, #12
   1207c:	mul	r1, r1, r2
   12080:	add	r0, r0, r1
   12084:	ldr	r0, [r0, #8]
   12088:	movw	r1, #1
   1208c:	strb	r1, [r0]
   12090:	movw	r0, #0
   12094:	strb	r0, [fp, #-1]
   12098:	b	120c0 <error@@Base+0x4bc>
   1209c:	b	120a0 <error@@Base+0x49c>
   120a0:	ldr	r0, [pc, #36]	; 120cc <error@@Base+0x4c8>
   120a4:	add	r0, pc, r0
   120a8:	ldr	r1, [fp, #-8]
   120ac:	bl	11c64 <error@@Base+0x60>
   120b0:	ldr	r0, [pc, #24]	; 120d0 <error@@Base+0x4cc>
   120b4:	add	r0, pc, r0
   120b8:	ldr	r1, [fp, #-8]
   120bc:	bl	11c64 <error@@Base+0x60>
   120c0:	ldrb	r0, [fp, #-1]
   120c4:	mov	sp, fp
   120c8:	pop	{fp, pc}
   120cc:	andeq	r2, r0, r7, ror ip
   120d0:	andeq	r2, r0, r6, ror ip
   120d4:	push	{fp, lr}
   120d8:	mov	fp, sp
   120dc:	sub	sp, sp, #16
   120e0:	movw	r0, #1
   120e4:	strh	r0, [fp, #-2]
   120e8:	ldr	r0, [pc, #88]	; 12148 <error@@Base+0x544>
   120ec:	add	r0, pc, r0
   120f0:	ldrsh	r1, [fp, #-2]
   120f4:	ldrsh	r0, [r0]
   120f8:	cmp	r1, r0
   120fc:	bgt	12140 <error@@Base+0x53c>
   12100:	ldrsh	r0, [fp, #-2]
   12104:	bl	11850 <__assert_fail@plt+0xc18>
   12108:	ldr	r1, [pc, #60]	; 1214c <error@@Base+0x548>
   1210c:	ldr	r1, [pc, r1]
   12110:	str	r0, [sp, #8]
   12114:	ldr	r0, [sp, #8]
   12118:	blx	r1
   1211c:	ldr	r1, [sp, #8]
   12120:	str	r0, [sp, #4]
   12124:	mov	r0, r1
   12128:	bl	10adc <free@plt>
   1212c:	ldrh	r0, [fp, #-2]
   12130:	movw	r1, #1
   12134:	add	r0, r0, r1
   12138:	strh	r0, [fp, #-2]
   1213c:	b	120e8 <error@@Base+0x4e4>
   12140:	mov	sp, fp
   12144:	pop	{fp, pc}
   12148:	andeq	r7, r1, ip, asr r0
   1214c:	andeq	r6, r1, r4, lsr #31
   12150:	sub	sp, sp, #12
   12154:	str	r0, [sp, #8]
   12158:	str	r1, [sp, #4]
   1215c:	str	r2, [sp]
   12160:	ldr	r0, [sp, #4]
   12164:	ldr	r1, [sp, #8]
   12168:	ldr	r2, [r1]
   1216c:	add	r0, r2, r0
   12170:	str	r0, [r1]
   12174:	ldr	r0, [sp]
   12178:	ldr	r1, [sp, #8]
   1217c:	ldr	r2, [r1, #4]
   12180:	add	r0, r2, r0
   12184:	str	r0, [r1, #4]
   12188:	add	sp, sp, #12
   1218c:	bx	lr
   12190:	push	{fp, lr}
   12194:	mov	fp, sp
   12198:	sub	sp, sp, #32
   1219c:	ldr	ip, [pc, #160]	; 12244 <error@@Base+0x640>
   121a0:	ldr	ip, [pc, ip]
   121a4:	str	r0, [fp, #-4]
   121a8:	str	r1, [fp, #-8]
   121ac:	str	r2, [fp, #-12]
   121b0:	str	r3, [sp, #16]
   121b4:	ldr	r0, [fp, #-4]
   121b8:	ldr	r1, [fp, #-8]
   121bc:	blx	ip
   121c0:	str	r0, [sp, #12]
   121c4:	ldr	r0, [sp, #12]
   121c8:	movw	r1, #0
   121cc:	cmp	r0, r1
   121d0:	bne	12228 <error@@Base+0x624>
   121d4:	ldr	r0, [pc, #112]	; 1224c <error@@Base+0x648>
   121d8:	ldr	r0, [pc, r0]
   121dc:	movw	r1, #1
   121e0:	str	r0, [sp, #8]
   121e4:	mov	r0, r1
   121e8:	movw	r1, #20
   121ec:	ldr	r2, [sp, #8]
   121f0:	blx	r2
   121f4:	str	r0, [sp, #12]
   121f8:	ldr	r0, [fp, #-8]
   121fc:	bl	10b0c <strdup@plt>
   12200:	ldr	r1, [pc, #64]	; 12248 <error@@Base+0x644>
   12204:	ldr	r1, [pc, r1]
   12208:	ldr	r2, [sp, #12]
   1220c:	str	r0, [r2, #8]
   12210:	ldr	r0, [fp, #-4]
   12214:	ldr	r2, [sp, #12]
   12218:	str	r1, [sp, #4]
   1221c:	mov	r1, r2
   12220:	ldr	r2, [sp, #4]
   12224:	blx	r2
   12228:	ldr	r0, [sp, #12]
   1222c:	add	r0, r0, #12
   12230:	ldr	r1, [fp, #-12]
   12234:	ldr	r2, [sp, #16]
   12238:	bl	12150 <error@@Base+0x54c>
   1223c:	mov	sp, fp
   12240:	pop	{fp, pc}
   12244:	andeq	r6, r1, r4, lsr pc
   12248:	andeq	r6, r1, r0, lsr #29
   1224c:	andeq	r6, r1, r8, lsr pc
   12250:	push	{fp, lr}
   12254:	mov	fp, sp
   12258:	sub	sp, sp, #40	; 0x28
   1225c:	ldr	r2, [pc, #504]	; 1245c <error@@Base+0x858>
   12260:	add	r2, pc, r2
   12264:	ldr	r3, [pc, #500]	; 12460 <error@@Base+0x85c>
   12268:	ldr	r3, [pc, r3]
   1226c:	str	r0, [fp, #-4]
   12270:	str	r1, [fp, #-8]
   12274:	ldr	r0, [fp, #-8]
   12278:	mov	r1, r2
   1227c:	blx	r3
   12280:	str	r0, [fp, #-12]
   12284:	ldr	r0, [fp, #-12]
   12288:	bl	12484 <error@@Base+0x880>
   1228c:	and	r0, r0, #255	; 0xff
   12290:	cmp	r0, #0
   12294:	beq	123e8 <error@@Base+0x7e4>
   12298:	ldr	r0, [pc, #452]	; 12464 <error@@Base+0x860>
   1229c:	add	r0, pc, r0
   122a0:	ldr	r1, [pc, #448]	; 12468 <error@@Base+0x864>
   122a4:	add	r1, pc, r1
   122a8:	movw	r2, #45	; 0x2d
   122ac:	bl	10c14 <strncmp@plt>
   122b0:	cmp	r0, #0
   122b4:	bne	123e8 <error@@Base+0x7e4>
   122b8:	ldr	r0, [fp, #-12]
   122bc:	bl	12484 <error@@Base+0x880>
   122c0:	and	r0, r0, #255	; 0xff
   122c4:	cmp	r0, #0
   122c8:	beq	123e8 <error@@Base+0x7e4>
   122cc:	ldr	r0, [pc, #424]	; 1247c <error@@Base+0x878>
   122d0:	add	r0, pc, r0
   122d4:	ldr	r1, [pc, #420]	; 12480 <error@@Base+0x87c>
   122d8:	add	r1, pc, r1
   122dc:	bl	10ab8 <strcmp@plt>
   122e0:	cmp	r0, #0
   122e4:	bne	123e8 <error@@Base+0x7e4>
   122e8:	ldr	r0, [fp, #-12]
   122ec:	sub	r1, fp, #16
   122f0:	bl	124d8 <error@@Base+0x8d4>
   122f4:	and	r0, r0, #255	; 0xff
   122f8:	cmp	r0, #0
   122fc:	beq	123e8 <error@@Base+0x7e4>
   12300:	ldr	r0, [fp, #-12]
   12304:	add	r1, sp, #20
   12308:	bl	124d8 <error@@Base+0x8d4>
   1230c:	and	r0, r0, #255	; 0xff
   12310:	cmp	r0, #0
   12314:	beq	123e8 <error@@Base+0x7e4>
   12318:	ldr	r0, [fp, #-12]
   1231c:	bl	12484 <error@@Base+0x880>
   12320:	and	r0, r0, #255	; 0xff
   12324:	cmp	r0, #0
   12328:	beq	123e8 <error@@Base+0x7e4>
   1232c:	ldr	r0, [fp, #-12]
   12330:	bl	12484 <error@@Base+0x880>
   12334:	and	r0, r0, #255	; 0xff
   12338:	cmp	r0, #0
   1233c:	beq	123e8 <error@@Base+0x7e4>
   12340:	ldr	r0, [fp, #-4]
   12344:	ldr	r1, [fp, #-16]
   12348:	ldr	r2, [sp, #20]
   1234c:	bl	12150 <error@@Base+0x54c>
   12350:	ldr	r0, [fp, #-12]
   12354:	ldr	r1, [fp, #-4]
   12358:	add	r1, r1, #8
   1235c:	bl	12554 <error@@Base+0x950>
   12360:	str	r0, [sp, #16]
   12364:	ldr	r0, [fp, #-12]
   12368:	ldr	r1, [fp, #-4]
   1236c:	add	r1, r1, #416	; 0x1a0
   12370:	bl	12554 <error@@Base+0x950>
   12374:	str	r0, [sp, #12]
   12378:	ldr	r0, [fp, #-12]
   1237c:	ldr	r1, [fp, #-4]
   12380:	add	r1, r1, #824	; 0x338
   12384:	bl	12554 <error@@Base+0x950>
   12388:	ldr	r1, [fp, #-16]
   1238c:	cmp	r1, #0
   12390:	ble	123e4 <error@@Base+0x7e0>
   12394:	ldr	r0, [fp, #-12]
   12398:	ldr	r1, [fp, #-4]
   1239c:	add	r1, r1, #920	; 0x398
   123a0:	bl	12554 <error@@Base+0x950>
   123a4:	ldr	r1, [sp, #16]
   123a8:	cmp	r1, #0
   123ac:	ble	123c0 <error@@Base+0x7bc>
   123b0:	ldr	r0, [fp, #-12]
   123b4:	ldr	r1, [fp, #-4]
   123b8:	add	r1, r1, #992	; 0x3e0
   123bc:	bl	12648 <error@@Base+0xa44>
   123c0:	ldr	r0, [sp, #12]
   123c4:	cmp	r0, #0
   123c8:	ble	123e0 <error@@Base+0x7dc>
   123cc:	ldr	r0, [fp, #-12]
   123d0:	ldr	r1, [fp, #-4]
   123d4:	movw	r2, #9048	; 0x2358
   123d8:	add	r1, r1, r2
   123dc:	bl	12648 <error@@Base+0xa44>
   123e0:	b	123e4 <error@@Base+0x7e0>
   123e4:	b	12438 <error@@Base+0x834>
   123e8:	ldr	r0, [fp, #-8]
   123ec:	movw	r1, #0
   123f0:	cmp	r0, r1
   123f4:	beq	12404 <error@@Base+0x800>
   123f8:	ldr	r0, [fp, #-8]
   123fc:	str	r0, [sp, #8]
   12400:	b	12414 <error@@Base+0x810>
   12404:	ldr	r0, [pc, #96]	; 1246c <error@@Base+0x868>
   12408:	add	r0, pc, r0
   1240c:	str	r0, [sp, #8]
   12410:	b	12414 <error@@Base+0x810>
   12414:	ldr	r0, [sp, #8]
   12418:	ldr	r1, [pc, #80]	; 12470 <error@@Base+0x86c>
   1241c:	add	r1, pc, r1
   12420:	ldr	r2, [pc, #76]	; 12474 <error@@Base+0x870>
   12424:	ldr	r2, [pc, r2]
   12428:	str	r0, [sp, #4]
   1242c:	mov	r0, r1
   12430:	ldr	r1, [sp, #4]
   12434:	blx	r2
   12438:	ldr	r0, [pc, #56]	; 12478 <error@@Base+0x874>
   1243c:	ldr	r0, [pc, r0]
   12440:	ldr	r1, [fp, #-12]
   12444:	str	r0, [sp]
   12448:	mov	r0, r1
   1244c:	ldr	r1, [sp]
   12450:	blx	r1
   12454:	mov	sp, fp
   12458:	pop	{fp, pc}
   1245c:	strheq	r6, [r0], -r1
   12460:	andeq	r6, r1, r4, asr #28
   12464:	andeq	r6, r1, pc, lsr #29
   12468:	muleq	r0, r7, sl
   1246c:	andeq	r2, r0, r5, ror r9
   12470:	andeq	r2, r0, pc, asr #18
   12474:	strdeq	r6, [r1], -r4
   12478:	andeq	r6, r1, r0, asr ip
   1247c:	andeq	r6, r1, fp, ror lr
   12480:	strdeq	r5, [r0], -r3
   12484:	push	{fp, lr}
   12488:	mov	fp, sp
   1248c:	sub	sp, sp, #8
   12490:	ldr	r1, [pc, #60]	; 124d4 <error@@Base+0x8d0>
   12494:	add	r1, pc, r1
   12498:	str	r0, [sp, #4]
   1249c:	ldr	r2, [sp, #4]
   124a0:	mov	r0, r1
   124a4:	movw	r1, #99	; 0x63
   124a8:	bl	10af4 <fgets@plt>
   124ac:	movw	r1, #0
   124b0:	cmp	r0, r1
   124b4:	movw	r0, #0
   124b8:	movne	r0, #1
   124bc:	tst	r0, #1
   124c0:	movw	r0, #1
   124c4:	moveq	r0, #0
   124c8:	and	r0, r0, #255	; 0xff
   124cc:	mov	sp, fp
   124d0:	pop	{fp, pc}
   124d4:			; <UNDEFINED> instruction: 0x00016cb7
   124d8:	push	{fp, lr}
   124dc:	mov	fp, sp
   124e0:	sub	sp, sp, #16
   124e4:	str	r0, [fp, #-4]
   124e8:	str	r1, [sp, #8]
   124ec:	ldr	r0, [fp, #-4]
   124f0:	bl	12484 <error@@Base+0x880>
   124f4:	and	r0, r0, #255	; 0xff
   124f8:	cmp	r0, #0
   124fc:	movw	r0, #0
   12500:	str	r0, [sp, #4]
   12504:	beq	12530 <error@@Base+0x92c>
   12508:	ldr	r0, [pc, #60]	; 1254c <error@@Base+0x948>
   1250c:	add	r0, pc, r0
   12510:	ldr	r1, [pc, #56]	; 12550 <error@@Base+0x94c>
   12514:	add	r1, pc, r1
   12518:	ldr	r2, [sp, #8]
   1251c:	bl	10bb4 <__isoc99_sscanf@plt>
   12520:	cmp	r0, #1
   12524:	movw	r0, #0
   12528:	moveq	r0, #1
   1252c:	str	r0, [sp, #4]
   12530:	ldr	r0, [sp, #4]
   12534:	tst	r0, #1
   12538:	movw	r0, #1
   1253c:	moveq	r0, #0
   12540:	and	r0, r0, #255	; 0xff
   12544:	mov	sp, fp
   12548:	pop	{fp, pc}
   1254c:	andeq	r6, r1, pc, lsr ip
   12550:	ldrdeq	r2, [r0], -ip
   12554:	push	{fp, lr}
   12558:	mov	fp, sp
   1255c:	sub	sp, sp, #24
   12560:	str	r0, [fp, #-4]
   12564:	str	r1, [fp, #-8]
   12568:	movw	r0, #0
   1256c:	str	r0, [sp]
   12570:	ldr	r0, [fp, #-4]
   12574:	bl	12484 <error@@Base+0x880>
   12578:	and	r0, r0, #255	; 0xff
   1257c:	cmp	r0, #0
   12580:	beq	12630 <error@@Base+0xa2c>
   12584:	ldr	r0, [fp, #-4]
   12588:	bl	12484 <error@@Base+0x880>
   1258c:	and	r0, r0, #255	; 0xff
   12590:	cmp	r0, #0
   12594:	beq	12630 <error@@Base+0xa2c>
   12598:	b	1259c <error@@Base+0x998>
   1259c:	ldr	r0, [fp, #-4]
   125a0:	add	r1, sp, #12
   125a4:	add	r2, sp, #8
   125a8:	bl	12ce0 <error@@Base+0x10dc>
   125ac:	sxtb	r0, r0
   125b0:	cmp	r0, #0
   125b4:	beq	1262c <error@@Base+0xa28>
   125b8:	ldr	r0, [pc, #124]	; 1263c <error@@Base+0xa38>
   125bc:	add	r0, pc, r0
   125c0:	add	r0, r0, #29
   125c4:	bl	10bf0 <atoi@plt>
   125c8:	str	r0, [sp, #4]
   125cc:	ldr	r0, [sp, #4]
   125d0:	cmp	r0, #0
   125d4:	bne	12610 <error@@Base+0xa0c>
   125d8:	ldr	r0, [pc, #96]	; 12640 <error@@Base+0xa3c>
   125dc:	add	r0, pc, r0
   125e0:	add	r0, r0, #29
   125e4:	ldr	r1, [pc, #88]	; 12644 <error@@Base+0xa40>
   125e8:	add	r1, pc, r1
   125ec:	bl	10ab8 <strcmp@plt>
   125f0:	cmp	r0, #0
   125f4:	bne	12604 <error@@Base+0xa00>
   125f8:	ldr	r0, [sp, #12]
   125fc:	str	r0, [sp]
   12600:	b	1260c <error@@Base+0xa08>
   12604:	movw	r0, #11
   12608:	str	r0, [sp, #4]
   1260c:	b	12610 <error@@Base+0xa0c>
   12610:	ldr	r0, [fp, #-8]
   12614:	ldr	r1, [sp, #4]
   12618:	add	r0, r0, r1, lsl #3
   1261c:	ldr	r1, [sp, #12]
   12620:	ldr	r2, [sp, #8]
   12624:	bl	12150 <error@@Base+0x54c>
   12628:	b	1259c <error@@Base+0x998>
   1262c:	b	12630 <error@@Base+0xa2c>
   12630:	ldr	r0, [sp]
   12634:	mov	sp, fp
   12638:	pop	{fp, pc}
   1263c:	andeq	r6, r1, pc, lsl #23
   12640:	andeq	r6, r1, pc, ror #22
   12644:	strdeq	r2, [r0], -ip
   12648:	push	{fp, lr}
   1264c:	mov	fp, sp
   12650:	sub	sp, sp, #24
   12654:	str	r0, [fp, #-4]
   12658:	str	r1, [fp, #-8]
   1265c:	ldr	r0, [fp, #-4]
   12660:	bl	12484 <error@@Base+0x880>
   12664:	and	r0, r0, #255	; 0xff
   12668:	cmp	r0, #0
   1266c:	beq	126f8 <error@@Base+0xaf4>
   12670:	ldr	r0, [fp, #-4]
   12674:	bl	12484 <error@@Base+0x880>
   12678:	and	r0, r0, #255	; 0xff
   1267c:	cmp	r0, #0
   12680:	beq	126f8 <error@@Base+0xaf4>
   12684:	b	12688 <error@@Base+0xa84>
   12688:	ldr	r0, [fp, #-4]
   1268c:	add	r1, sp, #12
   12690:	add	r2, sp, #8
   12694:	bl	12ce0 <error@@Base+0x10dc>
   12698:	sxtb	r0, r0
   1269c:	cmp	r0, #0
   126a0:	beq	126f4 <error@@Base+0xaf0>
   126a4:	ldr	r0, [pc, #84]	; 12700 <error@@Base+0xafc>
   126a8:	add	r0, pc, r0
   126ac:	add	r1, r0, #29
   126b0:	ldr	r2, [pc, #76]	; 12704 <error@@Base+0xb00>
   126b4:	add	r2, pc, r2
   126b8:	str	r0, [sp, #4]
   126bc:	mov	r0, r2
   126c0:	str	r1, [sp]
   126c4:	bl	10b9c <strlen@plt>
   126c8:	sub	r0, r0, #1
   126cc:	ldr	r1, [sp, #4]
   126d0:	add	r0, r1, r0
   126d4:	movw	r2, #0
   126d8:	strb	r2, [r0]
   126dc:	ldr	r0, [fp, #-8]
   126e0:	ldr	r2, [sp, #12]
   126e4:	ldr	r3, [sp, #8]
   126e8:	ldr	r1, [sp]
   126ec:	bl	12190 <error@@Base+0x58c>
   126f0:	b	12688 <error@@Base+0xa84>
   126f4:	b	126f8 <error@@Base+0xaf4>
   126f8:	mov	sp, fp
   126fc:	pop	{fp, pc}
   12700:	andeq	r6, r1, r3, lsr #21
   12704:	muleq	r1, r7, sl
   12708:	push	{fp, lr}
   1270c:	mov	fp, sp
   12710:	sub	sp, sp, #40	; 0x28
   12714:	ldr	r2, [pc, #532]	; 12930 <error@@Base+0xd2c>
   12718:	add	r2, pc, r2
   1271c:	ldr	r3, [pc, #528]	; 12934 <error@@Base+0xd30>
   12720:	ldr	r3, [pc, r3]
   12724:	str	r0, [fp, #-4]
   12728:	str	r1, [fp, #-8]
   1272c:	ldr	r0, [fp, #-8]
   12730:	mov	r1, r2
   12734:	blx	r3
   12738:	ldr	r1, [pc, #484]	; 12924 <error@@Base+0xd20>
   1273c:	add	r1, pc, r1
   12740:	ldr	r2, [pc, #480]	; 12928 <error@@Base+0xd24>
   12744:	add	r2, pc, r2
   12748:	ldr	r3, [pc, #476]	; 1292c <error@@Base+0xd28>
   1274c:	add	r3, pc, r3
   12750:	str	r0, [fp, #-12]
   12754:	ldr	r0, [fp, #-12]
   12758:	bl	10ba8 <fprintf@plt>
   1275c:	ldr	r1, [pc, #444]	; 12920 <error@@Base+0xd1c>
   12760:	add	r1, pc, r1
   12764:	ldr	r2, [fp, #-12]
   12768:	ldr	r3, [fp, #-4]
   1276c:	ldr	r3, [r3]
   12770:	str	r0, [fp, #-16]
   12774:	mov	r0, r2
   12778:	mov	r2, r3
   1277c:	bl	10ba8 <fprintf@plt>
   12780:	ldr	r1, [pc, #404]	; 1291c <error@@Base+0xd18>
   12784:	add	r1, pc, r1
   12788:	ldr	r2, [fp, #-12]
   1278c:	ldr	r3, [fp, #-4]
   12790:	ldr	r3, [r3, #4]
   12794:	str	r0, [sp, #20]
   12798:	mov	r0, r2
   1279c:	mov	r2, r3
   127a0:	bl	10ba8 <fprintf@plt>
   127a4:	ldr	r1, [fp, #-12]
   127a8:	ldr	r2, [fp, #-4]
   127ac:	str	r0, [sp, #16]
   127b0:	mov	r0, r1
   127b4:	mov	r1, r2
   127b8:	bl	12948 <error@@Base+0xd44>
   127bc:	ldr	r0, [pc, #340]	; 12918 <error@@Base+0xd14>
   127c0:	add	r0, pc, r0
   127c4:	ldr	r1, [fp, #-12]
   127c8:	bl	10c08 <fputs@plt>
   127cc:	ldr	r1, [pc, #320]	; 12914 <error@@Base+0xd10>
   127d0:	add	r3, pc, r1
   127d4:	ldr	r1, [fp, #-12]
   127d8:	ldr	r2, [fp, #-4]
   127dc:	add	r2, r2, #8
   127e0:	str	r0, [sp, #12]
   127e4:	mov	r0, r1
   127e8:	mov	r1, r2
   127ec:	movw	r2, #50	; 0x32
   127f0:	movw	ip, #0
   127f4:	str	ip, [sp]
   127f8:	movw	ip, #1
   127fc:	str	ip, [sp, #4]
   12800:	bl	129e8 <error@@Base+0xde4>
   12804:	ldr	r0, [pc, #260]	; 12910 <error@@Base+0xd0c>
   12808:	add	r3, pc, r0
   1280c:	ldr	r0, [fp, #-12]
   12810:	ldr	r1, [fp, #-4]
   12814:	add	r1, r1, #416	; 0x1a0
   12818:	movw	r2, #50	; 0x32
   1281c:	movw	ip, #0
   12820:	str	ip, [sp]
   12824:	movw	ip, #1
   12828:	str	ip, [sp, #4]
   1282c:	bl	129e8 <error@@Base+0xde4>
   12830:	ldr	r0, [pc, #212]	; 1290c <error@@Base+0xd08>
   12834:	add	r3, pc, r0
   12838:	ldr	r0, [fp, #-12]
   1283c:	ldr	r1, [fp, #-4]
   12840:	add	r1, r1, #824	; 0x338
   12844:	movw	r2, #10
   12848:	movw	ip, #1
   1284c:	str	ip, [sp]
   12850:	str	ip, [sp, #4]
   12854:	bl	129e8 <error@@Base+0xde4>
   12858:	ldr	r0, [fp, #-4]
   1285c:	ldr	r0, [r0]
   12860:	cmp	r0, #0
   12864:	ble	128e8 <error@@Base+0xce4>
   12868:	ldr	r0, [pc, #200]	; 12938 <error@@Base+0xd34>
   1286c:	add	r3, pc, r0
   12870:	ldr	r0, [fp, #-12]
   12874:	ldr	r1, [fp, #-4]
   12878:	add	r1, r1, #920	; 0x398
   1287c:	movw	r2, #8
   12880:	movw	ip, #0
   12884:	str	ip, [sp]
   12888:	str	ip, [sp, #4]
   1288c:	bl	129e8 <error@@Base+0xde4>
   12890:	ldr	r0, [fp, #-4]
   12894:	ldr	r0, [r0, #8]
   12898:	cmp	r0, #0
   1289c:	ble	128b8 <error@@Base+0xcb4>
   128a0:	ldr	r0, [pc, #148]	; 1293c <error@@Base+0xd38>
   128a4:	add	r2, pc, r0
   128a8:	ldr	r0, [fp, #-12]
   128ac:	ldr	r1, [fp, #-4]
   128b0:	add	r1, r1, #992	; 0x3e0
   128b4:	bl	12b8c <error@@Base+0xf88>
   128b8:	ldr	r0, [fp, #-4]
   128bc:	ldr	r0, [r0, #416]	; 0x1a0
   128c0:	cmp	r0, #0
   128c4:	ble	128e4 <error@@Base+0xce0>
   128c8:	ldr	r0, [pc, #112]	; 12940 <error@@Base+0xd3c>
   128cc:	add	r2, pc, r0
   128d0:	ldr	r0, [fp, #-12]
   128d4:	ldr	r1, [fp, #-4]
   128d8:	movw	r3, #9048	; 0x2358
   128dc:	add	r1, r1, r3
   128e0:	bl	12b8c <error@@Base+0xf88>
   128e4:	b	128e8 <error@@Base+0xce4>
   128e8:	ldr	r0, [pc, #84]	; 12944 <error@@Base+0xd40>
   128ec:	ldr	r0, [pc, r0]
   128f0:	ldr	r1, [fp, #-12]
   128f4:	str	r0, [sp, #8]
   128f8:	mov	r0, r1
   128fc:	ldr	r1, [sp, #8]
   12900:	blx	r1
   12904:	mov	sp, fp
   12908:	pop	{fp, pc}
   1290c:	muleq	r0, r1, r5
   12910:	andeq	r2, r0, r6, asr #11
   12914:	andeq	r2, r0, fp, ror #11
   12918:	andeq	r2, r0, lr, ror #11
   1291c:	andeq	r2, r0, r4, lsl r6
   12920:	andeq	r2, r0, sl, lsr #12
   12924:	andeq	r2, r0, r9, asr #12
   12928:	strdeq	r2, [r0], -r7
   1292c:	andeq	r5, r0, pc, ror fp
   12930:	andeq	r2, r0, fp, ror #12
   12934:	andeq	r6, r1, ip, lsl #19
   12938:	andeq	r2, r0, r0, ror r5
   1293c:	andeq	r2, r0, r7, lsl r5
   12940:	andeq	r2, r0, r2, lsl #10
   12944:	andeq	r6, r1, r0, lsr #15
   12948:	push	{fp, lr}
   1294c:	mov	fp, sp
   12950:	sub	sp, sp, #8
   12954:	str	r0, [sp, #4]
   12958:	str	r1, [sp]
   1295c:	ldr	r0, [sp]
   12960:	ldr	r0, [r0]
   12964:	cmp	r0, #0
   12968:	bne	12980 <error@@Base+0xd7c>
   1296c:	ldr	r0, [pc, #112]	; 129e4 <error@@Base+0xde0>
   12970:	add	r0, pc, r0
   12974:	ldr	r1, [sp, #4]
   12978:	bl	10c08 <fputs@plt>
   1297c:	b	129cc <error@@Base+0xdc8>
   12980:	ldr	r0, [pc, #88]	; 129e0 <error@@Base+0xddc>
   12984:	add	r1, pc, r0
   12988:	vldr	d16, [pc, #72]	; 129d8 <error@@Base+0xdd4>
   1298c:	ldr	r0, [sp, #4]
   12990:	ldr	r2, [sp]
   12994:	ldr	r2, [r2]
   12998:	ldr	r3, [sp]
   1299c:	ldr	r3, [r3, #4]
   129a0:	sub	r2, r2, r3
   129a4:	vmov	s0, r2
   129a8:	vcvt.f64.s32	d17, s0
   129ac:	vmul.f64	d16, d16, d17
   129b0:	ldr	r2, [sp]
   129b4:	ldr	r2, [r2]
   129b8:	vmov	s0, r2
   129bc:	vcvt.f64.s32	d17, s0
   129c0:	vdiv.f64	d16, d16, d17
   129c4:	vmov	r2, r3, d16
   129c8:	bl	10ba8 <fprintf@plt>
   129cc:	mov	sp, fp
   129d0:	pop	{fp, pc}
   129d4:	nop	{0}
   129d8:	andeq	r0, r0, r0
   129dc:	subsmi	r0, r9, r0
   129e0:	andeq	r2, r0, r9, ror r4
   129e4:	andeq	r2, r0, r4, lsl #9
   129e8:	push	{r4, sl, fp, lr}
   129ec:	add	fp, sp, #8
   129f0:	sub	sp, sp, #24
   129f4:	ldr	ip, [fp, #12]
   129f8:	ldr	lr, [fp, #8]
   129fc:	ldr	r4, [pc, #376]	; 12b7c <error@@Base+0xf78>
   12a00:	add	r4, pc, r4
   12a04:	str	r0, [fp, #-12]
   12a08:	str	r1, [sp, #16]
   12a0c:	strh	r2, [sp, #14]
   12a10:	str	r3, [sp, #8]
   12a14:	strb	lr, [sp, #7]
   12a18:	strb	ip, [sp, #6]
   12a1c:	ldr	r0, [fp, #-12]
   12a20:	ldr	r2, [sp, #8]
   12a24:	mov	r1, r4
   12a28:	bl	10ba8 <fprintf@plt>
   12a2c:	ldr	r1, [fp, #-12]
   12a30:	str	r0, [sp]
   12a34:	mov	r0, r1
   12a38:	movw	r1, #0
   12a3c:	bl	12d64 <error@@Base+0x1160>
   12a40:	ldr	r0, [pc, #296]	; 12b70 <error@@Base+0xf6c>
   12a44:	add	r1, pc, r0
   12a48:	ldr	r0, [pc, #292]	; 12b74 <error@@Base+0xf70>
   12a4c:	add	r0, pc, r0
   12a50:	ldr	r2, [pc, #288]	; 12b78 <error@@Base+0xf74>
   12a54:	add	r2, pc, r2
   12a58:	ldr	r3, [fp, #-12]
   12a5c:	ldrb	ip, [sp, #7]
   12a60:	cmp	ip, #0
   12a64:	movw	ip, #0
   12a68:	movne	ip, #1
   12a6c:	tst	ip, #1
   12a70:	movne	r2, r0
   12a74:	mov	r0, r3
   12a78:	bl	10ba8 <fprintf@plt>
   12a7c:	movw	r1, #1
   12a80:	strh	r1, [sp, #4]
   12a84:	ldrsh	r0, [sp, #4]
   12a88:	ldrsh	r1, [sp, #14]
   12a8c:	cmp	r0, r1
   12a90:	bgt	12aec <error@@Base+0xee8>
   12a94:	ldr	r0, [sp, #16]
   12a98:	ldrsh	r1, [sp, #4]
   12a9c:	add	r0, r0, r1, lsl #3
   12aa0:	ldr	r0, [r0]
   12aa4:	cmp	r0, #0
   12aa8:	ble	12ad4 <error@@Base+0xed0>
   12aac:	ldr	r0, [fp, #-12]
   12ab0:	ldr	r1, [sp, #16]
   12ab4:	ldrsh	r2, [sp, #4]
   12ab8:	add	r1, r1, r2, lsl #3
   12abc:	bl	12d64 <error@@Base+0x1160>
   12ac0:	ldr	r0, [pc, #192]	; 12b88 <error@@Base+0xf84>
   12ac4:	add	r1, pc, r0
   12ac8:	ldr	r0, [fp, #-12]
   12acc:	ldrsh	r2, [sp, #4]
   12ad0:	bl	10ba8 <fprintf@plt>
   12ad4:	b	12ad8 <error@@Base+0xed4>
   12ad8:	ldrh	r0, [sp, #4]
   12adc:	movw	r1, #1
   12ae0:	add	r0, r0, r1
   12ae4:	strh	r0, [sp, #4]
   12ae8:	b	12a84 <error@@Base+0xe80>
   12aec:	ldrb	r0, [sp, #7]
   12af0:	cmp	r0, #0
   12af4:	beq	12b40 <error@@Base+0xf3c>
   12af8:	ldr	r0, [sp, #16]
   12afc:	ldrsh	r1, [sp, #14]
   12b00:	add	r1, r1, #1
   12b04:	add	r0, r0, r1, lsl #3
   12b08:	ldr	r0, [r0]
   12b0c:	cmp	r0, #0
   12b10:	ble	12b40 <error@@Base+0xf3c>
   12b14:	ldr	r0, [fp, #-12]
   12b18:	ldr	r1, [sp, #16]
   12b1c:	ldrsh	r2, [sp, #14]
   12b20:	add	r2, r2, #1
   12b24:	add	r1, r1, r2, lsl #3
   12b28:	bl	12d64 <error@@Base+0x1160>
   12b2c:	ldr	r0, [pc, #76]	; 12b80 <error@@Base+0xf7c>
   12b30:	add	r1, pc, r0
   12b34:	ldr	r0, [fp, #-12]
   12b38:	ldrsh	r2, [sp, #14]
   12b3c:	bl	10ba8 <fprintf@plt>
   12b40:	ldrsb	r0, [sp, #6]
   12b44:	cmp	r0, #0
   12b48:	beq	12b68 <error@@Base+0xf64>
   12b4c:	ldr	r0, [fp, #-12]
   12b50:	ldr	r1, [sp, #16]
   12b54:	bl	12d64 <error@@Base+0x1160>
   12b58:	ldr	r0, [pc, #36]	; 12b84 <error@@Base+0xf80>
   12b5c:	add	r0, pc, r0
   12b60:	ldr	r1, [fp, #-12]
   12b64:	bl	10c08 <fputs@plt>
   12b68:	sub	sp, fp, #8
   12b6c:	pop	{r4, sl, fp, pc}
   12b70:	andeq	r2, r0, r0, asr #7
   12b74:			; <UNDEFINED> instruction: 0x000023bc
   12b78:			; <UNDEFINED> instruction: 0x000023bb
   12b7c:	andeq	r2, r0, r3, lsl #8
   12b80:	andeq	r2, r0, pc, ror #5
   12b84:	andeq	r2, r0, r8, lsl #5
   12b88:	andeq	r2, r0, r2, asr r3
   12b8c:	push	{fp, lr}
   12b90:	mov	fp, sp
   12b94:	sub	sp, sp, #40	; 0x28
   12b98:	ldr	r3, [pc, #312]	; 12cd8 <error@@Base+0x10d4>
   12b9c:	ldr	r3, [pc, r3]
   12ba0:	str	r0, [fp, #-4]
   12ba4:	str	r1, [fp, #-8]
   12ba8:	str	r2, [fp, #-12]
   12bac:	ldr	r0, [fp, #-8]
   12bb0:	blx	r3
   12bb4:	ldr	r0, [pc, #276]	; 12cd0 <error@@Base+0x10cc>
   12bb8:	add	r0, pc, r0
   12bbc:	ldr	r1, [pc, #272]	; 12cd4 <error@@Base+0x10d0>
   12bc0:	ldr	r1, [pc, r1]
   12bc4:	ldr	r2, [fp, #-8]
   12bc8:	movw	r3, #8052	; 0x1f74
   12bcc:	add	r2, r2, r3
   12bd0:	ldr	r2, [r2]
   12bd4:	ldr	r3, [fp, #-8]
   12bd8:	movw	ip, #8048	; 0x1f70
   12bdc:	add	r3, r3, ip
   12be0:	ldr	r3, [r3]
   12be4:	str	r0, [sp, #20]
   12be8:	mov	r0, r2
   12bec:	str	r1, [sp, #16]
   12bf0:	mov	r1, r3
   12bf4:	ldr	r2, [sp, #20]
   12bf8:	ldr	r3, [sp, #16]
   12bfc:	blx	r3
   12c00:	ldr	r0, [pc, #196]	; 12ccc <error@@Base+0x10c8>
   12c04:	add	r1, pc, r0
   12c08:	ldr	r0, [fp, #-4]
   12c0c:	ldr	r2, [fp, #-12]
   12c10:	bl	10ba8 <fprintf@plt>
   12c14:	ldr	r1, [fp, #-4]
   12c18:	str	r0, [sp, #12]
   12c1c:	mov	r0, r1
   12c20:	movw	r1, #0
   12c24:	bl	12d64 <error@@Base+0x1160>
   12c28:	ldr	r1, [fp, #-4]
   12c2c:	movw	r0, #10
   12c30:	bl	10bd8 <fputc@plt>
   12c34:	movw	r1, #0
   12c38:	str	r1, [fp, #-16]
   12c3c:	ldr	r0, [fp, #-16]
   12c40:	ldr	r1, [fp, #-8]
   12c44:	movw	r2, #8052	; 0x1f74
   12c48:	add	r1, r1, r2
   12c4c:	ldr	r1, [r1]
   12c50:	cmp	r0, r1
   12c54:	bge	12cc4 <error@@Base+0x10c0>
   12c58:	ldr	r0, [pc, #124]	; 12cdc <error@@Base+0x10d8>
   12c5c:	add	r1, pc, r0
   12c60:	ldr	r0, [fp, #-4]
   12c64:	ldr	r2, [fp, #-8]
   12c68:	movw	r3, #8048	; 0x1f70
   12c6c:	ldr	r2, [r2, r3]
   12c70:	ldr	ip, [fp, #-16]
   12c74:	ldr	r2, [r2, ip, lsl #2]
   12c78:	add	r2, r2, #12
   12c7c:	str	r1, [sp, #8]
   12c80:	mov	r1, r2
   12c84:	str	r3, [sp, #4]
   12c88:	bl	12d64 <error@@Base+0x1160>
   12c8c:	ldr	r0, [fp, #-4]
   12c90:	ldr	r1, [fp, #-8]
   12c94:	ldr	r2, [sp, #4]
   12c98:	ldr	r1, [r1, r2]
   12c9c:	ldr	r3, [fp, #-16]
   12ca0:	add	r1, r1, r3, lsl #2
   12ca4:	ldr	r1, [r1]
   12ca8:	ldr	r2, [r1, #8]
   12cac:	ldr	r1, [sp, #8]
   12cb0:	bl	10ba8 <fprintf@plt>
   12cb4:	ldr	r0, [fp, #-16]
   12cb8:	add	r0, r0, #1
   12cbc:	str	r0, [fp, #-16]
   12cc0:	b	12c3c <error@@Base+0x1038>
   12cc4:	mov	sp, fp
   12cc8:	pop	{fp, pc}
   12ccc:	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
   12cd0:	andeq	r0, r0, r8, lsr r2
   12cd4:	strdeq	r6, [r1], -r8
   12cd8:	andeq	r6, r1, ip, lsr #10
   12cdc:	andeq	r2, r0, r8, lsr #3
   12ce0:	push	{fp, lr}
   12ce4:	mov	fp, sp
   12ce8:	sub	sp, sp, #16
   12cec:	str	r0, [fp, #-4]
   12cf0:	str	r1, [sp, #8]
   12cf4:	str	r2, [sp, #4]
   12cf8:	ldr	r0, [fp, #-4]
   12cfc:	bl	12484 <error@@Base+0x880>
   12d00:	and	r0, r0, #255	; 0xff
   12d04:	cmp	r0, #0
   12d08:	movw	r0, #0
   12d0c:	str	r0, [sp]
   12d10:	beq	12d40 <error@@Base+0x113c>
   12d14:	ldr	r0, [pc, #64]	; 12d5c <error@@Base+0x1158>
   12d18:	add	r0, pc, r0
   12d1c:	ldr	r1, [pc, #60]	; 12d60 <error@@Base+0x115c>
   12d20:	add	r1, pc, r1
   12d24:	ldr	r2, [sp, #8]
   12d28:	ldr	r3, [sp, #4]
   12d2c:	bl	10bb4 <__isoc99_sscanf@plt>
   12d30:	cmp	r0, #2
   12d34:	movw	r0, #0
   12d38:	moveq	r0, #1
   12d3c:	str	r0, [sp]
   12d40:	ldr	r0, [sp]
   12d44:	tst	r0, #1
   12d48:	movw	r0, #1
   12d4c:	moveq	r0, #0
   12d50:	and	r0, r0, #255	; 0xff
   12d54:	mov	sp, fp
   12d58:	pop	{fp, pc}
   12d5c:	andeq	r6, r1, r3, lsr r4
   12d60:	andeq	r2, r0, ip, asr #1
   12d64:	push	{fp, lr}
   12d68:	mov	fp, sp
   12d6c:	sub	sp, sp, #16
   12d70:	str	r0, [fp, #-4]
   12d74:	str	r1, [sp, #8]
   12d78:	ldr	r0, [sp, #8]
   12d7c:	movw	r1, #0
   12d80:	cmp	r0, r1
   12d84:	beq	12dc4 <error@@Base+0x11c0>
   12d88:	ldr	r0, [pc, #96]	; 12df0 <error@@Base+0x11ec>
   12d8c:	add	r1, pc, r0
   12d90:	ldr	r0, [fp, #-4]
   12d94:	ldr	r2, [sp, #8]
   12d98:	ldr	r2, [r2]
   12d9c:	ldr	r3, [sp, #8]
   12da0:	ldr	r3, [r3, #4]
   12da4:	bl	10ba8 <fprintf@plt>
   12da8:	ldr	r1, [fp, #-4]
   12dac:	ldr	r2, [sp, #8]
   12db0:	str	r0, [sp, #4]
   12db4:	mov	r0, r1
   12db8:	mov	r1, r2
   12dbc:	bl	12948 <error@@Base+0xd44>
   12dc0:	b	12dd4 <error@@Base+0x11d0>
   12dc4:	ldr	r0, [pc, #32]	; 12dec <error@@Base+0x11e8>
   12dc8:	add	r0, pc, r0
   12dcc:	ldr	r1, [fp, #-4]
   12dd0:	bl	10c08 <fputs@plt>
   12dd4:	ldr	r0, [pc, #24]	; 12df4 <error@@Base+0x11f0>
   12dd8:	add	r0, pc, r0
   12ddc:	ldr	r1, [fp, #-4]
   12de0:	bl	10c08 <fputs@plt>
   12de4:	mov	sp, fp
   12de8:	pop	{fp, pc}
   12dec:	andeq	r2, r0, fp, rrx
   12df0:	muleq	r0, ip, r0
   12df4:	andeq	r2, r0, r6, ror r0
   12df8:	push	{fp, lr}
   12dfc:	mov	fp, sp
   12e00:	sub	sp, sp, #8
   12e04:	ldr	r2, [pc, #36]	; 12e30 <error@@Base+0x122c>
   12e08:	ldr	r2, [pc, r2]
   12e0c:	str	r0, [sp, #4]
   12e10:	str	r1, [sp]
   12e14:	ldr	r0, [sp, #4]
   12e18:	ldr	r0, [r0, #8]
   12e1c:	ldr	r1, [sp]
   12e20:	ldr	r1, [r1, #8]
   12e24:	blx	r2
   12e28:	mov	sp, fp
   12e2c:	pop	{fp, pc}
   12e30:	strdeq	r6, [r1], -ip
   12e34:	push	{fp, lr}
   12e38:	mov	fp, sp
   12e3c:	sub	sp, sp, #16
   12e40:	str	r0, [fp, #-4]
   12e44:	str	r1, [sp, #8]
   12e48:	ldr	r0, [sp, #8]
   12e4c:	ldr	r0, [r0]
   12e50:	str	r0, [sp, #4]
   12e54:	ldr	r0, [sp, #4]
   12e58:	bl	12eac <error@@Base+0x12a8>
   12e5c:	str	r0, [sp]
   12e60:	movw	r1, #0
   12e64:	cmp	r0, r1
   12e68:	beq	12ea4 <error@@Base+0x12a0>
   12e6c:	ldr	r0, [sp, #4]
   12e70:	ldr	r0, [r0, #12]
   12e74:	bl	132dc <error@@Base+0x16d8>
   12e78:	sxtb	r0, r0
   12e7c:	cmp	r0, #0
   12e80:	beq	12e94 <error@@Base+0x1290>
   12e84:	ldr	r0, [fp, #-4]
   12e88:	ldr	r1, [sp, #4]
   12e8c:	ldr	r2, [sp]
   12e90:	bl	13344 <error@@Base+0x1740>
   12e94:	ldr	r0, [sp]
   12e98:	ldr	r0, [r0, #4]
   12e9c:	str	r0, [sp, #4]
   12ea0:	b	12e54 <error@@Base+0x1250>
   12ea4:	mov	sp, fp
   12ea8:	pop	{fp, pc}
   12eac:	push	{fp, lr}
   12eb0:	mov	fp, sp
   12eb4:	sub	sp, sp, #48	; 0x30
   12eb8:	str	r0, [fp, #-8]
   12ebc:	ldr	r0, [fp, #-8]
   12ec0:	str	r0, [sp, #28]
   12ec4:	add	r0, sp, #24
   12ec8:	str	r0, [sp, #20]
   12ecc:	movw	r0, #17
   12ed0:	str	r0, [sp, #16]
   12ed4:	ldr	r0, [fp, #-8]
   12ed8:	movw	r1, #0
   12edc:	cmp	r0, r1
   12ee0:	bne	12ef0 <error@@Base+0x12ec>
   12ee4:	movw	r0, #0
   12ee8:	str	r0, [fp, #-4]
   12eec:	b	132d0 <error@@Base+0x16cc>
   12ef0:	b	12ef4 <error@@Base+0x12f0>
   12ef4:	ldr	r0, [sp, #20]
   12ef8:	ldr	r0, [r0, #4]
   12efc:	movw	r1, #0
   12f00:	cmp	r0, r1
   12f04:	beq	132c4 <error@@Base+0x16c0>
   12f08:	ldr	r0, [sp, #20]
   12f0c:	bl	13430 <error@@Base+0x182c>
   12f10:	str	r0, [sp, #20]
   12f14:	ldr	r0, [sp, #16]
   12f18:	str	r0, [sp, #4]
   12f1c:	ldr	r0, [sp, #20]
   12f20:	bl	134dc <error@@Base+0x18d8>
   12f24:	str	r0, [sp, #16]
   12f28:	ldr	r0, [sp, #20]
   12f2c:	bl	13430 <error@@Base+0x182c>
   12f30:	bl	134dc <error@@Base+0x18d8>
   12f34:	str	r0, [sp, #12]
   12f38:	ldr	r0, [sp, #20]
   12f3c:	bl	13524 <error@@Base+0x1920>
   12f40:	bl	134dc <error@@Base+0x18d8>
   12f44:	str	r0, [sp, #8]
   12f48:	ldr	r0, [sp, #16]
   12f4c:	cmp	r0, #1
   12f50:	bne	12f64 <error@@Base+0x1360>
   12f54:	ldr	r0, [sp, #12]
   12f58:	cmp	r0, #2
   12f5c:	bne	12f64 <error@@Base+0x1360>
   12f60:	b	12ef4 <error@@Base+0x12f0>
   12f64:	ldr	r0, [sp, #16]
   12f68:	cmp	r0, #3
   12f6c:	beq	12f88 <error@@Base+0x1384>
   12f70:	ldr	r0, [sp, #16]
   12f74:	cmp	r0, #1
   12f78:	beq	12f88 <error@@Base+0x1384>
   12f7c:	ldr	r0, [sp, #16]
   12f80:	cmp	r0, #2
   12f84:	bne	12f8c <error@@Base+0x1388>
   12f88:	b	132c4 <error@@Base+0x16c0>
   12f8c:	ldr	r0, [sp, #12]
   12f90:	cmp	r0, #3
   12f94:	beq	12fb0 <error@@Base+0x13ac>
   12f98:	ldr	r0, [sp, #12]
   12f9c:	cmp	r0, #1
   12fa0:	beq	12fb0 <error@@Base+0x13ac>
   12fa4:	ldr	r0, [sp, #12]
   12fa8:	cmp	r0, #2
   12fac:	bne	12fb4 <error@@Base+0x13b0>
   12fb0:	b	132c4 <error@@Base+0x16c0>
   12fb4:	ldr	r0, [sp, #16]
   12fb8:	cmp	r0, #9
   12fbc:	beq	12fcc <error@@Base+0x13c8>
   12fc0:	ldr	r0, [sp, #16]
   12fc4:	cmp	r0, #8
   12fc8:	bne	12fe8 <error@@Base+0x13e4>
   12fcc:	ldr	r0, [sp, #12]
   12fd0:	cmp	r0, #9
   12fd4:	beq	12fe4 <error@@Base+0x13e0>
   12fd8:	ldr	r0, [sp, #12]
   12fdc:	cmp	r0, #8
   12fe0:	bne	12fe8 <error@@Base+0x13e4>
   12fe4:	b	12ef4 <error@@Base+0x12f0>
   12fe8:	ldr	r0, [sp, #16]
   12fec:	cmp	r0, #9
   12ff0:	beq	13000 <error@@Base+0x13fc>
   12ff4:	ldr	r0, [sp, #16]
   12ff8:	cmp	r0, #8
   12ffc:	bne	13040 <error@@Base+0x143c>
   13000:	ldr	r0, [sp, #12]
   13004:	cmp	r0, #13
   13008:	beq	13024 <error@@Base+0x1420>
   1300c:	ldr	r0, [sp, #12]
   13010:	cmp	r0, #12
   13014:	beq	13024 <error@@Base+0x1420>
   13018:	ldr	r0, [sp, #12]
   1301c:	cmp	r0, #10
   13020:	bne	13040 <error@@Base+0x143c>
   13024:	ldr	r0, [sp, #8]
   13028:	cmp	r0, #9
   1302c:	beq	1303c <error@@Base+0x1438>
   13030:	ldr	r0, [sp, #8]
   13034:	cmp	r0, #8
   13038:	bne	13040 <error@@Base+0x143c>
   1303c:	b	12ef4 <error@@Base+0x12f0>
   13040:	ldr	r0, [sp, #4]
   13044:	cmp	r0, #9
   13048:	beq	13058 <error@@Base+0x1454>
   1304c:	ldr	r0, [sp, #4]
   13050:	cmp	r0, #8
   13054:	bne	13098 <error@@Base+0x1494>
   13058:	ldr	r0, [sp, #16]
   1305c:	cmp	r0, #13
   13060:	beq	1307c <error@@Base+0x1478>
   13064:	ldr	r0, [sp, #16]
   13068:	cmp	r0, #12
   1306c:	beq	1307c <error@@Base+0x1478>
   13070:	ldr	r0, [sp, #16]
   13074:	cmp	r0, #10
   13078:	bne	13098 <error@@Base+0x1494>
   1307c:	ldr	r0, [sp, #12]
   13080:	cmp	r0, #9
   13084:	beq	13094 <error@@Base+0x1490>
   13088:	ldr	r0, [sp, #12]
   1308c:	cmp	r0, #8
   13090:	bne	13098 <error@@Base+0x1494>
   13094:	b	12ef4 <error@@Base+0x12f0>
   13098:	ldr	r0, [sp, #16]
   1309c:	cmp	r0, #8
   130a0:	bne	130b4 <error@@Base+0x14b0>
   130a4:	ldr	r0, [sp, #12]
   130a8:	cmp	r0, #10
   130ac:	bne	130b4 <error@@Base+0x14b0>
   130b0:	b	12ef4 <error@@Base+0x12f0>
   130b4:	ldr	r0, [sp, #16]
   130b8:	cmp	r0, #8
   130bc:	bne	130dc <error@@Base+0x14d8>
   130c0:	ldr	r0, [sp, #12]
   130c4:	cmp	r0, #11
   130c8:	bne	130dc <error@@Base+0x14d8>
   130cc:	ldr	r0, [sp, #8]
   130d0:	cmp	r0, #8
   130d4:	bne	130dc <error@@Base+0x14d8>
   130d8:	b	12ef4 <error@@Base+0x12f0>
   130dc:	ldr	r0, [sp, #4]
   130e0:	cmp	r0, #8
   130e4:	bne	13104 <error@@Base+0x1500>
   130e8:	ldr	r0, [sp, #16]
   130ec:	cmp	r0, #11
   130f0:	bne	13104 <error@@Base+0x1500>
   130f4:	ldr	r0, [sp, #12]
   130f8:	cmp	r0, #8
   130fc:	bne	13104 <error@@Base+0x1500>
   13100:	b	12ef4 <error@@Base+0x12f0>
   13104:	ldr	r0, [sp, #16]
   13108:	cmp	r0, #15
   1310c:	bne	13120 <error@@Base+0x151c>
   13110:	ldr	r0, [sp, #12]
   13114:	cmp	r0, #15
   13118:	bne	13120 <error@@Base+0x151c>
   1311c:	b	12ef4 <error@@Base+0x12f0>
   13120:	ldr	r0, [sp, #16]
   13124:	cmp	r0, #9
   13128:	beq	13138 <error@@Base+0x1534>
   1312c:	ldr	r0, [sp, #16]
   13130:	cmp	r0, #8
   13134:	bne	13148 <error@@Base+0x1544>
   13138:	ldr	r0, [sp, #12]
   1313c:	cmp	r0, #15
   13140:	bne	13148 <error@@Base+0x1544>
   13144:	b	12ef4 <error@@Base+0x12f0>
   13148:	ldr	r0, [sp, #16]
   1314c:	cmp	r0, #15
   13150:	bne	13170 <error@@Base+0x156c>
   13154:	ldr	r0, [sp, #12]
   13158:	cmp	r0, #9
   1315c:	beq	1316c <error@@Base+0x1568>
   13160:	ldr	r0, [sp, #12]
   13164:	cmp	r0, #8
   13168:	bne	13170 <error@@Base+0x156c>
   1316c:	b	12ef4 <error@@Base+0x12f0>
   13170:	ldr	r0, [sp, #4]
   13174:	cmp	r0, #15
   13178:	bne	131b0 <error@@Base+0x15ac>
   1317c:	ldr	r0, [sp, #16]
   13180:	cmp	r0, #14
   13184:	beq	131a0 <error@@Base+0x159c>
   13188:	ldr	r0, [sp, #16]
   1318c:	cmp	r0, #12
   13190:	beq	131a0 <error@@Base+0x159c>
   13194:	ldr	r0, [sp, #16]
   13198:	cmp	r0, #10
   1319c:	bne	131b0 <error@@Base+0x15ac>
   131a0:	ldr	r0, [sp, #12]
   131a4:	cmp	r0, #15
   131a8:	bne	131b0 <error@@Base+0x15ac>
   131ac:	b	12ef4 <error@@Base+0x12f0>
   131b0:	ldr	r0, [sp, #16]
   131b4:	cmp	r0, #15
   131b8:	bne	131f0 <error@@Base+0x15ec>
   131bc:	ldr	r0, [sp, #12]
   131c0:	cmp	r0, #14
   131c4:	beq	131e0 <error@@Base+0x15dc>
   131c8:	ldr	r0, [sp, #12]
   131cc:	cmp	r0, #12
   131d0:	beq	131e0 <error@@Base+0x15dc>
   131d4:	ldr	r0, [sp, #12]
   131d8:	cmp	r0, #10
   131dc:	bne	131f0 <error@@Base+0x15ec>
   131e0:	ldr	r0, [sp, #8]
   131e4:	cmp	r0, #15
   131e8:	bne	131f0 <error@@Base+0x15ec>
   131ec:	b	12ef4 <error@@Base+0x12f0>
   131f0:	ldr	r0, [sp, #16]
   131f4:	cmp	r0, #7
   131f8:	bne	1320c <error@@Base+0x1608>
   131fc:	ldr	r0, [sp, #12]
   13200:	cmp	r0, #7
   13204:	bne	1320c <error@@Base+0x1608>
   13208:	b	12ef4 <error@@Base+0x12f0>
   1320c:	ldr	r0, [sp, #16]
   13210:	cmp	r0, #9
   13214:	beq	13248 <error@@Base+0x1644>
   13218:	ldr	r0, [sp, #16]
   1321c:	cmp	r0, #8
   13220:	beq	13248 <error@@Base+0x1644>
   13224:	ldr	r0, [sp, #16]
   13228:	cmp	r0, #15
   1322c:	beq	13248 <error@@Base+0x1644>
   13230:	ldr	r0, [sp, #16]
   13234:	cmp	r0, #7
   13238:	beq	13248 <error@@Base+0x1644>
   1323c:	ldr	r0, [sp, #16]
   13240:	cmp	r0, #16
   13244:	bne	13258 <error@@Base+0x1654>
   13248:	ldr	r0, [sp, #12]
   1324c:	cmp	r0, #16
   13250:	bne	13258 <error@@Base+0x1654>
   13254:	b	12ef4 <error@@Base+0x12f0>
   13258:	ldr	r0, [sp, #16]
   1325c:	cmp	r0, #16
   13260:	bne	132a4 <error@@Base+0x16a0>
   13264:	ldr	r0, [sp, #12]
   13268:	cmp	r0, #9
   1326c:	beq	132a0 <error@@Base+0x169c>
   13270:	ldr	r0, [sp, #12]
   13274:	cmp	r0, #8
   13278:	beq	132a0 <error@@Base+0x169c>
   1327c:	ldr	r0, [sp, #12]
   13280:	cmp	r0, #15
   13284:	beq	132a0 <error@@Base+0x169c>
   13288:	ldr	r0, [sp, #12]
   1328c:	cmp	r0, #7
   13290:	beq	132a0 <error@@Base+0x169c>
   13294:	ldr	r0, [sp, #12]
   13298:	cmp	r0, #16
   1329c:	bne	132a4 <error@@Base+0x16a0>
   132a0:	b	12ef4 <error@@Base+0x12f0>
   132a4:	ldr	r0, [sp, #16]
   132a8:	cmp	r0, #5
   132ac:	bne	132c0 <error@@Base+0x16bc>
   132b0:	ldr	r0, [sp, #12]
   132b4:	cmp	r0, #5
   132b8:	bne	132c0 <error@@Base+0x16bc>
   132bc:	b	12ef4 <error@@Base+0x12f0>
   132c0:	b	132c4 <error@@Base+0x16c0>
   132c4:	ldr	r0, [sp, #20]
   132c8:	bl	13548 <error@@Base+0x1944>
   132cc:	str	r0, [fp, #-4]
   132d0:	ldr	r0, [fp, #-4]
   132d4:	mov	sp, fp
   132d8:	pop	{fp, pc}
   132dc:	push	{fp, lr}
   132e0:	mov	fp, sp
   132e4:	sub	sp, sp, #16
   132e8:	str	r0, [sp, #8]
   132ec:	ldr	r0, [sp, #8]
   132f0:	bl	10ae8 <utf8proc_get_property@plt>
   132f4:	str	r0, [sp, #4]
   132f8:	ldr	r0, [sp, #4]
   132fc:	ldrsh	r0, [r0]
   13300:	sub	r1, r0, #1
   13304:	cmp	r1, #12
   13308:	str	r0, [sp]
   1330c:	bcc	13324 <error@@Base+0x1720>
   13310:	b	13314 <error@@Base+0x1710>
   13314:	ldr	r0, [sp]
   13318:	cmp	r0, #29
   1331c:	bne	13330 <error@@Base+0x172c>
   13320:	b	13324 <error@@Base+0x1720>
   13324:	movw	r0, #1
   13328:	strb	r0, [fp, #-1]
   1332c:	b	13338 <error@@Base+0x1734>
   13330:	movw	r0, #0
   13334:	strb	r0, [fp, #-1]
   13338:	ldrb	r0, [fp, #-1]
   1333c:	mov	sp, fp
   13340:	pop	{fp, pc}
   13344:	push	{fp, lr}
   13348:	mov	fp, sp
   1334c:	sub	sp, sp, #40	; 0x28
   13350:	str	r0, [fp, #-4]
   13354:	str	r1, [fp, #-8]
   13358:	str	r2, [fp, #-12]
   1335c:	ldr	r0, [fp, #-12]
   13360:	ldr	r0, [r0, #4]
   13364:	str	r0, [sp, #20]
   13368:	ldr	r0, [fp, #-8]
   1336c:	ldr	r1, [sp, #20]
   13370:	bl	13770 <error@@Base+0x1b6c>
   13374:	str	r0, [sp, #16]
   13378:	ldr	r0, [sp, #16]
   1337c:	add	r0, r0, #1
   13380:	bl	10b54 <malloc@plt>
   13384:	str	r0, [sp, #8]
   13388:	ldr	r0, [sp, #8]
   1338c:	ldr	r1, [fp, #-8]
   13390:	ldr	r2, [sp, #20]
   13394:	bl	13864 <error@@Base+0x1c60>
   13398:	ldr	r0, [pc, #96]	; 13400 <error@@Base+0x17fc>
   1339c:	ldr	r0, [pc, r0]
   133a0:	movw	r1, #1
   133a4:	str	r0, [sp, #4]
   133a8:	mov	r0, r1
   133ac:	movw	r1, #12
   133b0:	ldr	r2, [sp, #4]
   133b4:	blx	r2
   133b8:	str	r0, [fp, #-16]
   133bc:	ldr	r0, [sp, #8]
   133c0:	bl	10bcc <utf8proc_NFC@plt>
   133c4:	ldr	r1, [pc, #48]	; 133fc <error@@Base+0x17f8>
   133c8:	ldr	r1, [pc, r1]
   133cc:	ldr	r2, [fp, #-16]
   133d0:	str	r0, [r2, #8]
   133d4:	ldr	r0, [fp, #-4]
   133d8:	ldr	r2, [fp, #-16]
   133dc:	str	r1, [sp]
   133e0:	mov	r1, r2
   133e4:	ldr	r2, [sp]
   133e8:	blx	r2
   133ec:	ldr	r0, [sp, #8]
   133f0:	bl	10adc <free@plt>
   133f4:	mov	sp, fp
   133f8:	pop	{fp, pc}
   133fc:	andeq	r5, r1, r8, lsl #26
   13400:	andeq	r5, r1, r4, ror sp
   13404:	push	{fp, lr}
   13408:	mov	fp, sp
   1340c:	sub	sp, sp, #8
   13410:	str	r0, [sp, #4]
   13414:	ldr	r0, [sp, #4]
   13418:	ldr	r0, [r0, #8]
   1341c:	bl	10adc <free@plt>
   13420:	ldr	r0, [sp, #4]
   13424:	bl	10adc <free@plt>
   13428:	mov	sp, fp
   1342c:	pop	{fp, pc}
   13430:	push	{fp, lr}
   13434:	mov	fp, sp
   13438:	sub	sp, sp, #16
   1343c:	str	r0, [sp, #8]
   13440:	ldr	r0, [sp, #8]
   13444:	movw	r1, #0
   13448:	cmp	r0, r1
   1344c:	bne	1345c <error@@Base+0x1858>
   13450:	movw	r0, #0
   13454:	str	r0, [fp, #-4]
   13458:	b	134d0 <error@@Base+0x18cc>
   1345c:	b	13460 <error@@Base+0x185c>
   13460:	ldr	r0, [sp, #8]
   13464:	ldr	r0, [r0, #4]
   13468:	str	r0, [sp, #8]
   1346c:	ldr	r0, [sp, #8]
   13470:	movw	r1, #0
   13474:	cmp	r0, r1
   13478:	movw	r0, #0
   1347c:	str	r0, [sp, #4]
   13480:	beq	134bc <error@@Base+0x18b8>
   13484:	ldr	r0, [sp, #8]
   13488:	bl	134dc <error@@Base+0x18d8>
   1348c:	cmp	r0, #4
   13490:	movw	r0, #1
   13494:	str	r0, [sp]
   13498:	beq	134b4 <error@@Base+0x18b0>
   1349c:	ldr	r0, [sp, #8]
   134a0:	bl	134dc <error@@Base+0x18d8>
   134a4:	cmp	r0, #6
   134a8:	movw	r0, #0
   134ac:	moveq	r0, #1
   134b0:	str	r0, [sp]
   134b4:	ldr	r0, [sp]
   134b8:	str	r0, [sp, #4]
   134bc:	ldr	r0, [sp, #4]
   134c0:	tst	r0, #1
   134c4:	bne	13460 <error@@Base+0x185c>
   134c8:	ldr	r0, [sp, #8]
   134cc:	str	r0, [fp, #-4]
   134d0:	ldr	r0, [fp, #-4]
   134d4:	mov	sp, fp
   134d8:	pop	{fp, pc}
   134dc:	push	{fp, lr}
   134e0:	mov	fp, sp
   134e4:	sub	sp, sp, #8
   134e8:	str	r0, [sp]
   134ec:	ldr	r0, [sp]
   134f0:	movw	r1, #0
   134f4:	cmp	r0, r1
   134f8:	bne	13508 <error@@Base+0x1904>
   134fc:	movw	r0, #18
   13500:	str	r0, [sp, #4]
   13504:	b	13518 <error@@Base+0x1914>
   13508:	ldr	r0, [sp]
   1350c:	ldr	r0, [r0, #12]
   13510:	bl	13604 <error@@Base+0x1a00>
   13514:	str	r0, [sp, #4]
   13518:	ldr	r0, [sp, #4]
   1351c:	mov	sp, fp
   13520:	pop	{fp, pc}
   13524:	push	{fp, lr}
   13528:	mov	fp, sp
   1352c:	sub	sp, sp, #8
   13530:	str	r0, [sp, #4]
   13534:	ldr	r0, [sp, #4]
   13538:	bl	13430 <error@@Base+0x182c>
   1353c:	bl	13430 <error@@Base+0x182c>
   13540:	mov	sp, fp
   13544:	pop	{fp, pc}
   13548:	push	{fp, lr}
   1354c:	mov	fp, sp
   13550:	sub	sp, sp, #16
   13554:	str	r0, [sp, #8]
   13558:	ldr	r0, [sp, #8]
   1355c:	movw	r1, #0
   13560:	cmp	r0, r1
   13564:	bne	13574 <error@@Base+0x1970>
   13568:	movw	r0, #0
   1356c:	str	r0, [fp, #-4]
   13570:	b	135f8 <error@@Base+0x19f4>
   13574:	b	13578 <error@@Base+0x1974>
   13578:	ldr	r0, [sp, #8]
   1357c:	ldr	r0, [r0, #4]
   13580:	movw	r1, #0
   13584:	cmp	r0, r1
   13588:	movw	r0, #0
   1358c:	str	r0, [sp, #4]
   13590:	beq	135d4 <error@@Base+0x19d0>
   13594:	ldr	r0, [sp, #8]
   13598:	ldr	r0, [r0, #4]
   1359c:	bl	134dc <error@@Base+0x18d8>
   135a0:	cmp	r0, #4
   135a4:	movw	r0, #1
   135a8:	str	r0, [sp]
   135ac:	beq	135cc <error@@Base+0x19c8>
   135b0:	ldr	r0, [sp, #8]
   135b4:	ldr	r0, [r0, #4]
   135b8:	bl	134dc <error@@Base+0x18d8>
   135bc:	cmp	r0, #6
   135c0:	movw	r0, #0
   135c4:	moveq	r0, #1
   135c8:	str	r0, [sp]
   135cc:	ldr	r0, [sp]
   135d0:	str	r0, [sp, #4]
   135d4:	ldr	r0, [sp, #4]
   135d8:	tst	r0, #1
   135dc:	beq	135f0 <error@@Base+0x19ec>
   135e0:	ldr	r0, [sp, #8]
   135e4:	ldr	r0, [r0, #4]
   135e8:	str	r0, [sp, #8]
   135ec:	b	13578 <error@@Base+0x1974>
   135f0:	ldr	r0, [sp, #8]
   135f4:	str	r0, [fp, #-4]
   135f8:	ldr	r0, [fp, #-4]
   135fc:	mov	sp, fp
   13600:	pop	{fp, pc}
   13604:	push	{fp, lr}
   13608:	mov	fp, sp
   1360c:	sub	sp, sp, #8
   13610:	str	r0, [sp, #4]
   13614:	movw	r0, #1093	; 0x445
   13618:	str	r0, [sp]
   1361c:	ldr	r0, [sp, #4]
   13620:	movw	r1, #0
   13624:	movw	r2, #1092	; 0x444
   13628:	bl	13634 <error@@Base+0x1a30>
   1362c:	mov	sp, fp
   13630:	pop	{fp, pc}
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	sub	sp, sp, #24
   13640:	str	r0, [fp, #-8]
   13644:	str	r1, [sp, #12]
   13648:	str	r2, [sp, #8]
   1364c:	ldr	r0, [sp, #8]
   13650:	ldr	r1, [sp, #12]
   13654:	cmp	r0, r1
   13658:	bcs	13668 <error@@Base+0x1a64>
   1365c:	movw	r0, #0
   13660:	str	r0, [fp, #-4]
   13664:	b	13754 <error@@Base+0x1b50>
   13668:	ldr	r0, [pc, #240]	; 13760 <error@@Base+0x1b5c>
   1366c:	add	r0, pc, r0
   13670:	ldr	r1, [sp, #12]
   13674:	ldr	r2, [sp, #8]
   13678:	sub	r2, r2, r1
   1367c:	lsr	r2, r2, #1
   13680:	add	r1, r1, r2
   13684:	str	r1, [sp, #4]
   13688:	ldr	r1, [sp, #4]
   1368c:	movw	r2, #12
   13690:	mul	r1, r1, r2
   13694:	add	r0, r0, r1
   13698:	str	r0, [sp]
   1369c:	ldr	r0, [fp, #-8]
   136a0:	ldr	r1, [sp]
   136a4:	ldr	r1, [r1]
   136a8:	cmp	r0, r1
   136ac:	bcs	136cc <error@@Base+0x1ac8>
   136b0:	ldr	r0, [fp, #-8]
   136b4:	ldr	r1, [sp, #12]
   136b8:	ldr	r2, [sp, #4]
   136bc:	sub	r2, r2, #1
   136c0:	bl	13634 <error@@Base+0x1a30>
   136c4:	str	r0, [fp, #-4]
   136c8:	b	13754 <error@@Base+0x1b50>
   136cc:	ldr	r0, [fp, #-8]
   136d0:	ldr	r1, [sp]
   136d4:	ldr	r1, [r1, #4]
   136d8:	cmp	r0, r1
   136dc:	bls	136fc <error@@Base+0x1af8>
   136e0:	ldr	r0, [fp, #-8]
   136e4:	ldr	r1, [sp, #4]
   136e8:	add	r1, r1, #1
   136ec:	ldr	r2, [sp, #8]
   136f0:	bl	13634 <error@@Base+0x1a30>
   136f4:	str	r0, [fp, #-4]
   136f8:	b	13754 <error@@Base+0x1b50>
   136fc:	ldr	r0, [fp, #-8]
   13700:	ldr	r1, [sp]
   13704:	ldr	r1, [r1]
   13708:	cmp	r0, r1
   1370c:	bcc	13728 <error@@Base+0x1b24>
   13710:	ldr	r0, [fp, #-8]
   13714:	ldr	r1, [sp]
   13718:	ldr	r1, [r1, #4]
   1371c:	cmp	r0, r1
   13720:	bhi	13728 <error@@Base+0x1b24>
   13724:	b	13748 <error@@Base+0x1b44>
   13728:	ldr	r0, [pc, #52]	; 13764 <error@@Base+0x1b60>
   1372c:	add	r0, pc, r0
   13730:	ldr	r1, [pc, #48]	; 13768 <error@@Base+0x1b64>
   13734:	add	r1, pc, r1
   13738:	ldr	r2, [pc, #44]	; 1376c <error@@Base+0x1b68>
   1373c:	add	r3, pc, r2
   13740:	movw	r2, #63	; 0x3f
   13744:	bl	10c38 <__assert_fail@plt>
   13748:	ldr	r0, [sp]
   1374c:	ldr	r0, [r0, #8]
   13750:	str	r0, [fp, #-4]
   13754:	ldr	r0, [fp, #-4]
   13758:	mov	sp, fp
   1375c:	pop	{fp, pc}
   13760:	andeq	r1, r0, r8, ror #15
   13764:	andeq	r4, r0, r4, ror #20
   13768:	muleq	r0, r5, sl
   1376c:	muleq	r0, r4, sl
   13770:	push	{fp, lr}
   13774:	mov	fp, sp
   13778:	sub	sp, sp, #24
   1377c:	str	r0, [fp, #-4]
   13780:	str	r1, [fp, #-8]
   13784:	movw	r0, #0
   13788:	str	r0, [sp, #8]
   1378c:	str	r0, [sp, #4]
   13790:	ldr	r0, [fp, #-4]
   13794:	str	r0, [sp, #12]
   13798:	ldr	r0, [sp, #12]
   1379c:	ldr	r1, [fp, #-8]
   137a0:	cmp	r0, r1
   137a4:	beq	13840 <error@@Base+0x1c3c>
   137a8:	ldr	r0, [sp, #12]
   137ac:	movw	r1, #0
   137b0:	cmp	r0, r1
   137b4:	beq	137bc <error@@Base+0x1bb8>
   137b8:	b	137dc <error@@Base+0x1bd8>
   137bc:	ldr	r0, [pc, #136]	; 1384c <error@@Base+0x1c48>
   137c0:	add	r0, pc, r0
   137c4:	ldr	r1, [pc, #132]	; 13850 <error@@Base+0x1c4c>
   137c8:	add	r1, pc, r1
   137cc:	ldr	r2, [pc, #128]	; 13854 <error@@Base+0x1c50>
   137d0:	add	r3, pc, r2
   137d4:	movw	r2, #249	; 0xf9
   137d8:	bl	10c38 <__assert_fail@plt>
   137dc:	mov	r1, sp
   137e0:	ldr	r0, [sp, #12]
   137e4:	ldr	r0, [r0, #12]
   137e8:	bl	10b00 <utf8proc_encode_char@plt>
   137ec:	str	r0, [sp, #4]
   137f0:	ldr	r0, [sp, #4]
   137f4:	cmp	r0, #0
   137f8:	bls	13800 <error@@Base+0x1bfc>
   137fc:	b	13820 <error@@Base+0x1c1c>
   13800:	ldr	r0, [pc, #80]	; 13858 <error@@Base+0x1c54>
   13804:	add	r0, pc, r0
   13808:	ldr	r1, [pc, #76]	; 1385c <error@@Base+0x1c58>
   1380c:	add	r1, pc, r1
   13810:	ldr	r2, [pc, #72]	; 13860 <error@@Base+0x1c5c>
   13814:	add	r3, pc, r2
   13818:	movw	r2, #253	; 0xfd
   1381c:	bl	10c38 <__assert_fail@plt>
   13820:	ldr	r0, [sp, #4]
   13824:	ldr	r1, [sp, #8]
   13828:	add	r0, r1, r0
   1382c:	str	r0, [sp, #8]
   13830:	ldr	r0, [sp, #12]
   13834:	ldr	r0, [r0, #4]
   13838:	str	r0, [sp, #12]
   1383c:	b	13798 <error@@Base+0x1b94>
   13840:	ldr	r0, [sp, #8]
   13844:	mov	sp, fp
   13848:	pop	{fp, pc}
   1384c:	andeq	r4, r0, r2, lsr sl
   13850:	andeq	r4, r0, r1, lsl #20
   13854:	andeq	r4, r0, r2, lsr sl
   13858:	andeq	r4, r0, r8, lsl sl
   1385c:			; <UNDEFINED> instruction: 0x000049bd
   13860:	andeq	r4, r0, lr, ror #19
   13864:	push	{fp, lr}
   13868:	mov	fp, sp
   1386c:	sub	sp, sp, #24
   13870:	str	r0, [fp, #-4]
   13874:	str	r1, [fp, #-8]
   13878:	str	r2, [sp, #12]
   1387c:	movw	r0, #0
   13880:	str	r0, [sp, #4]
   13884:	ldr	r0, [fp, #-8]
   13888:	str	r0, [sp, #8]
   1388c:	ldr	r0, [sp, #8]
   13890:	ldr	r1, [sp, #12]
   13894:	cmp	r0, r1
   13898:	beq	13904 <error@@Base+0x1d00>
   1389c:	ldr	r0, [sp, #8]
   138a0:	movw	r1, #0
   138a4:	cmp	r0, r1
   138a8:	beq	138b0 <error@@Base+0x1cac>
   138ac:	b	138d0 <error@@Base+0x1ccc>
   138b0:	ldr	r0, [pc, #104]	; 13920 <error@@Base+0x1d1c>
   138b4:	add	r0, pc, r0
   138b8:	ldr	r1, [pc, #100]	; 13924 <error@@Base+0x1d20>
   138bc:	add	r1, pc, r1
   138c0:	ldr	r2, [pc, #96]	; 13928 <error@@Base+0x1d24>
   138c4:	add	r3, pc, r2
   138c8:	movw	r2, #269	; 0x10d
   138cc:	bl	10c38 <__assert_fail@plt>
   138d0:	ldr	r0, [sp, #8]
   138d4:	ldr	r0, [r0, #12]
   138d8:	ldr	r1, [fp, #-4]
   138dc:	ldr	r2, [sp, #4]
   138e0:	add	r1, r1, r2
   138e4:	bl	10b00 <utf8proc_encode_char@plt>
   138e8:	ldr	r1, [sp, #4]
   138ec:	add	r0, r1, r0
   138f0:	str	r0, [sp, #4]
   138f4:	ldr	r0, [sp, #8]
   138f8:	ldr	r0, [r0, #4]
   138fc:	str	r0, [sp, #8]
   13900:	b	1388c <error@@Base+0x1c88>
   13904:	ldr	r0, [fp, #-4]
   13908:	ldr	r1, [sp, #4]
   1390c:	add	r0, r0, r1
   13910:	movw	r1, #0
   13914:	strb	r1, [r0]
   13918:	mov	sp, fp
   1391c:	pop	{fp, pc}
   13920:	andeq	r4, r0, lr, lsr r9
   13924:	andeq	r4, r0, sp, lsl #18
   13928:	andeq	r4, r0, fp, ror #18
   1392c:	push	{fp, lr}
   13930:	mov	fp, sp
   13934:	sub	sp, sp, #24
   13938:	ldr	r3, [pc, #96]	; 139a0 <error@@Base+0x1d9c>
   1393c:	ldr	r3, [pc, r3]
   13940:	str	r0, [fp, #-4]
   13944:	strb	r1, [fp, #-5]
   13948:	str	r2, [sp, #12]
   1394c:	movw	r0, #1
   13950:	movw	r1, #16
   13954:	blx	r3
   13958:	ldr	r1, [pc, #60]	; 1399c <error@@Base+0x1d98>
   1395c:	ldr	r1, [pc, r1]
   13960:	str	r0, [sp, #8]
   13964:	ldrb	r0, [fp, #-5]
   13968:	ldr	r2, [sp, #8]
   1396c:	strb	r0, [r2, #8]
   13970:	ldr	r0, [sp, #12]
   13974:	ldr	r2, [sp, #8]
   13978:	str	r0, [r2, #12]
   1397c:	ldr	r0, [fp, #-4]
   13980:	ldr	r2, [sp, #8]
   13984:	str	r1, [sp, #4]
   13988:	mov	r1, r2
   1398c:	ldr	r2, [sp, #4]
   13990:	blx	r2
   13994:	mov	sp, fp
   13998:	pop	{fp, pc}
   1399c:	andeq	r5, r1, r4, ror r7
   139a0:	ldrdeq	r5, [r1], -r4
   139a4:	push	{fp, lr}
   139a8:	mov	fp, sp
   139ac:	sub	sp, sp, #64	; 0x40
   139b0:	str	r0, [fp, #-4]
   139b4:	str	r1, [fp, #-8]
   139b8:	str	r2, [fp, #-12]
   139bc:	ldr	r0, [fp, #-12]
   139c0:	ldrb	r0, [r0]
   139c4:	cmp	r0, #0
   139c8:	beq	139f8 <error@@Base+0x1df4>
   139cc:	ldr	r0, [fp, #-8]
   139d0:	movw	r1, #0
   139d4:	cmp	r0, r1
   139d8:	bne	139f8 <error@@Base+0x1df4>
   139dc:	ldr	r0, [pc, #404]	; 13b78 <error@@Base+0x1f74>
   139e0:	add	r0, pc, r0
   139e4:	ldr	r1, [pc, #400]	; 13b7c <error@@Base+0x1f78>
   139e8:	add	r1, pc, r1
   139ec:	ldr	r2, [pc, #396]	; 13b80 <error@@Base+0x1f7c>
   139f0:	ldr	r2, [pc, r2]
   139f4:	blx	r2
   139f8:	ldr	r0, [pc, #388]	; 13b84 <error@@Base+0x1f80>
   139fc:	add	r1, pc, r0
   13a00:	ldr	r0, [pc, #384]	; 13b88 <error@@Base+0x1f84>
   13a04:	ldr	r0, [pc, r0]
   13a08:	ldr	r2, [fp, #-4]
   13a0c:	ldr	r2, [r2, #4]
   13a10:	str	r2, [fp, #-16]
   13a14:	ldr	r2, [fp, #-8]
   13a18:	str	r0, [fp, #-24]	; 0xffffffe8
   13a1c:	mov	r0, r2
   13a20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13a24:	blx	r2
   13a28:	str	r0, [fp, #-20]	; 0xffffffec
   13a2c:	ldr	r0, [fp, #-12]
   13a30:	ldrsb	r0, [r0]
   13a34:	cmp	r0, #0
   13a38:	beq	13a4c <error@@Base+0x1e48>
   13a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a40:	bl	13b90 <error@@Base+0x1f8c>
   13a44:	ldr	r1, [fp, #-12]
   13a48:	strb	r0, [r1, #11]
   13a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a50:	ldr	r1, [fp, #-4]
   13a54:	ldr	r2, [fp, #-12]
   13a58:	ldrb	r2, [r2, #1]
   13a5c:	ldr	r3, [fp, #-12]
   13a60:	ldr	r3, [r3, #4]
   13a64:	cmp	r3, #0
   13a68:	str	r0, [fp, #-28]	; 0xffffffe4
   13a6c:	str	r1, [sp, #32]
   13a70:	str	r2, [sp, #28]
   13a74:	beq	13a88 <error@@Base+0x1e84>
   13a78:	ldr	r0, [fp, #-12]
   13a7c:	ldr	r0, [r0, #4]
   13a80:	str	r0, [sp, #24]
   13a84:	b	13a94 <error@@Base+0x1e90>
   13a88:	movw	r0, #94	; 0x5e
   13a8c:	str	r0, [sp, #24]
   13a90:	b	13a94 <error@@Base+0x1e90>
   13a94:	ldr	r0, [sp, #24]
   13a98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a9c:	str	r0, [sp, #20]
   13aa0:	mov	r0, r1
   13aa4:	ldr	r1, [sp, #32]
   13aa8:	ldr	r2, [sp, #28]
   13aac:	ldr	r3, [sp, #20]
   13ab0:	bl	13c88 <error@@Base+0x2084>
   13ab4:	ldr	r0, [pc, #208]	; 13b8c <error@@Base+0x1f88>
   13ab8:	ldr	r0, [pc, r0]
   13abc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ac0:	str	r0, [sp, #16]
   13ac4:	mov	r0, r1
   13ac8:	ldr	r1, [sp, #16]
   13acc:	blx	r1
   13ad0:	ldr	r0, [fp, #-12]
   13ad4:	ldrsb	r0, [r0, #9]
   13ad8:	cmp	r0, #0
   13adc:	beq	13b2c <error@@Base+0x1f28>
   13ae0:	ldr	r0, [fp, #-4]
   13ae4:	ldr	r1, [fp, #-16]
   13ae8:	movw	r2, #0
   13aec:	cmp	r1, r2
   13af0:	str	r0, [sp, #12]
   13af4:	beq	13b08 <error@@Base+0x1f04>
   13af8:	ldr	r0, [fp, #-16]
   13afc:	ldr	r0, [r0, #4]
   13b00:	str	r0, [sp, #8]
   13b04:	b	13b14 <error@@Base+0x1f10>
   13b08:	ldr	r0, [fp, #-4]
   13b0c:	ldr	r0, [r0]
   13b10:	str	r0, [sp, #8]
   13b14:	ldr	r0, [sp, #8]
   13b18:	ldr	r1, [sp, #12]
   13b1c:	str	r0, [sp, #4]
   13b20:	mov	r0, r1
   13b24:	ldr	r1, [sp, #4]
   13b28:	bl	13e04 <error@@Base+0x2200>
   13b2c:	ldr	r0, [fp, #-12]
   13b30:	ldrsb	r0, [r0, #10]
   13b34:	cmp	r0, #0
   13b38:	beq	13b70 <error@@Base+0x1f6c>
   13b3c:	ldr	r0, [fp, #-16]
   13b40:	movw	r1, #0
   13b44:	cmp	r0, r1
   13b48:	beq	13b5c <error@@Base+0x1f58>
   13b4c:	ldr	r0, [fp, #-16]
   13b50:	ldr	r0, [r0, #4]
   13b54:	str	r0, [sp]
   13b58:	b	13b68 <error@@Base+0x1f64>
   13b5c:	ldr	r0, [fp, #-4]
   13b60:	ldr	r0, [r0]
   13b64:	str	r0, [sp]
   13b68:	ldr	r0, [sp]
   13b6c:	bl	13fac <error@@Base+0x23a8>
   13b70:	mov	sp, fp
   13b74:	pop	{fp, pc}
   13b78:	andeq	r4, r0, r7, ror #16
   13b7c:	andeq	r4, r0, pc, ror #16
   13b80:	andeq	r5, r1, r8, lsr #14
   13b84:	andeq	r4, r0, r5, lsl r9
   13b88:	andeq	r5, r1, r8, lsr #13
   13b8c:	ldrdeq	r5, [r1], -r4
   13b90:	push	{fp, lr}
   13b94:	mov	fp, sp
   13b98:	sub	sp, sp, #120	; 0x78
   13b9c:	add	r1, sp, #12
   13ba0:	str	r0, [fp, #-8]
   13ba4:	movw	r0, #0
   13ba8:	strh	r0, [sp, #10]
   13bac:	ldr	r2, [fp, #-8]
   13bb0:	mov	r0, r1
   13bb4:	movw	r1, #99	; 0x63
   13bb8:	bl	10af4 <fgets@plt>
   13bbc:	movw	r1, #0
   13bc0:	cmp	r0, r1
   13bc4:	beq	13c64 <error@@Base+0x2060>
   13bc8:	ldr	r0, [pc, #176]	; 13c80 <error@@Base+0x207c>
   13bcc:	add	r1, pc, r0
   13bd0:	add	r0, sp, #12
   13bd4:	movw	r2, #51	; 0x33
   13bd8:	bl	10c14 <strncmp@plt>
   13bdc:	cmp	r0, #0
   13be0:	bne	13c64 <error@@Base+0x2060>
   13be4:	b	13be8 <error@@Base+0x1fe4>
   13be8:	ldrsh	r0, [sp, #10]
   13bec:	cmp	r0, #2
   13bf0:	movw	r0, #0
   13bf4:	str	r0, [sp, #4]
   13bf8:	bge	13c20 <error@@Base+0x201c>
   13bfc:	add	r0, sp, #12
   13c00:	ldr	r2, [fp, #-8]
   13c04:	movw	r1, #99	; 0x63
   13c08:	bl	10af4 <fgets@plt>
   13c0c:	movw	r1, #0
   13c10:	cmp	r0, r1
   13c14:	movw	r0, #0
   13c18:	movne	r0, #1
   13c1c:	str	r0, [sp, #4]
   13c20:	ldr	r0, [sp, #4]
   13c24:	tst	r0, #1
   13c28:	beq	13c58 <error@@Base+0x2054>
   13c2c:	add	r0, sp, #12
   13c30:	ldr	r1, [pc, #76]	; 13c84 <error@@Base+0x2080>
   13c34:	add	r1, pc, r1
   13c38:	bl	10ab8 <strcmp@plt>
   13c3c:	cmp	r0, #0
   13c40:	bne	13c54 <error@@Base+0x2050>
   13c44:	ldrh	r0, [sp, #10]
   13c48:	movw	r1, #1
   13c4c:	add	r0, r0, r1
   13c50:	strh	r0, [sp, #10]
   13c54:	b	13be8 <error@@Base+0x1fe4>
   13c58:	movw	r0, #1
   13c5c:	strb	r0, [fp, #-1]
   13c60:	b	13c74 <error@@Base+0x2070>
   13c64:	ldr	r0, [fp, #-8]
   13c68:	bl	10b18 <rewind@plt>
   13c6c:	movw	r0, #0
   13c70:	strb	r0, [fp, #-1]
   13c74:	ldrb	r0, [fp, #-1]
   13c78:	mov	sp, fp
   13c7c:	pop	{fp, pc}
   13c80:			; <UNDEFINED> instruction: 0x000046bf
   13c84:	andeq	r4, r0, pc, lsl #13
   13c88:	push	{fp, lr}
   13c8c:	mov	fp, sp
   13c90:	sub	sp, sp, #48	; 0x30
   13c94:	str	r0, [fp, #-4]
   13c98:	str	r1, [fp, #-8]
   13c9c:	strb	r2, [fp, #-9]
   13ca0:	str	r3, [fp, #-16]
   13ca4:	movw	r0, #0
   13ca8:	strb	r0, [fp, #-17]	; 0xffffffef
   13cac:	ldr	r0, [fp, #-4]
   13cb0:	bl	10c2c <getc@plt>
   13cb4:	str	r0, [sp, #20]
   13cb8:	ldr	r0, [sp, #20]
   13cbc:	cmn	r0, #1
   13cc0:	beq	13de4 <error@@Base+0x21e0>
   13cc4:	ldr	r0, [pc, #288]	; 13dec <error@@Base+0x21e8>
   13cc8:	ldr	r0, [pc, r0]
   13ccc:	ldr	r1, [sp, #20]
   13cd0:	add	r0, r0, r1
   13cd4:	ldrsb	r0, [r0]
   13cd8:	str	r0, [sp, #8]
   13cdc:	ldr	r0, [sp, #8]
   13ce0:	cmp	r0, #1
   13ce4:	bge	13cfc <error@@Base+0x20f8>
   13ce8:	ldr	r0, [pc, #268]	; 13dfc <error@@Base+0x21f8>
   13cec:	add	r0, pc, r0
   13cf0:	ldr	r1, [pc, #264]	; 13e00 <error@@Base+0x21fc>
   13cf4:	ldr	r1, [pc, r1]
   13cf8:	blx	r1
   13cfc:	ldr	r0, [sp, #20]
   13d00:	strb	r0, [fp, #-21]	; 0xffffffeb
   13d04:	ldr	r0, [sp, #8]
   13d08:	cmp	r0, #1
   13d0c:	ble	13d5c <error@@Base+0x2158>
   13d10:	sub	r0, fp, #21
   13d14:	add	r0, r0, #1
   13d18:	ldr	r1, [sp, #8]
   13d1c:	sub	r2, r1, #1
   13d20:	ldr	r3, [fp, #-4]
   13d24:	movw	r1, #1
   13d28:	bl	10b3c <fread@plt>
   13d2c:	str	r0, [sp, #16]
   13d30:	ldr	r0, [sp, #16]
   13d34:	ldr	r1, [sp, #8]
   13d38:	sub	r1, r1, #1
   13d3c:	cmp	r0, r1
   13d40:	beq	13d58 <error@@Base+0x2154>
   13d44:	ldr	r0, [pc, #168]	; 13df4 <error@@Base+0x21f0>
   13d48:	add	r0, pc, r0
   13d4c:	ldr	r1, [pc, #164]	; 13df8 <error@@Base+0x21f4>
   13d50:	ldr	r1, [pc, r1]
   13d54:	blx	r1
   13d58:	b	13d5c <error@@Base+0x2158>
   13d5c:	sub	r0, fp, #21
   13d60:	movw	r1, #4
   13d64:	add	r2, sp, #4
   13d68:	bl	10b48 <utf8proc_iterate@plt>
   13d6c:	str	r0, [sp, #12]
   13d70:	ldr	r0, [sp, #12]
   13d74:	ldr	r1, [sp, #8]
   13d78:	cmp	r0, r1
   13d7c:	beq	13d94 <error@@Base+0x2190>
   13d80:	ldr	r0, [sp, #12]
   13d84:	bl	10bfc <utf8proc_errmsg@plt>
   13d88:	ldr	r1, [pc, #96]	; 13df0 <error@@Base+0x21ec>
   13d8c:	ldr	r1, [pc, r1]
   13d90:	blx	r1
   13d94:	ldrb	r0, [fp, #-9]
   13d98:	cmp	r0, #0
   13d9c:	beq	13dbc <error@@Base+0x21b8>
   13da0:	ldr	r0, [sp, #4]
   13da4:	ldr	r1, [fp, #-16]
   13da8:	cmp	r0, r1
   13dac:	bne	13dbc <error@@Base+0x21b8>
   13db0:	movw	r0, #1
   13db4:	strb	r0, [fp, #-17]	; 0xffffffef
   13db8:	b	13dd4 <error@@Base+0x21d0>
   13dbc:	ldr	r0, [fp, #-8]
   13dc0:	ldrb	r1, [fp, #-17]	; 0xffffffef
   13dc4:	ldr	r2, [sp, #4]
   13dc8:	bl	1392c <error@@Base+0x1d28>
   13dcc:	movw	r0, #0
   13dd0:	strb	r0, [fp, #-17]	; 0xffffffef
   13dd4:	ldr	r0, [fp, #-4]
   13dd8:	bl	10c2c <getc@plt>
   13ddc:	str	r0, [sp, #20]
   13de0:	b	13cb8 <error@@Base+0x20b4>
   13de4:	mov	sp, fp
   13de8:	pop	{fp, pc}
   13dec:	andeq	r5, r1, r4, lsr #8
   13df0:	andeq	r5, r1, r4, lsl r3
   13df4:	andeq	r4, r0, fp, asr #11
   13df8:	andeq	r5, r1, r0, asr r3
   13dfc:	andeq	r4, r0, pc, lsl #12
   13e00:	andeq	r5, r1, ip, lsr #7
   13e04:	push	{fp, lr}
   13e08:	mov	fp, sp
   13e0c:	sub	sp, sp, #24
   13e10:	str	r0, [fp, #-4]
   13e14:	str	r1, [fp, #-8]
   13e18:	movw	r0, #0
   13e1c:	strb	r0, [fp, #-9]
   13e20:	ldr	r0, [fp, #-8]
   13e24:	str	r0, [sp, #8]
   13e28:	ldr	r0, [sp, #8]
   13e2c:	movw	r1, #0
   13e30:	cmp	r0, r1
   13e34:	beq	13e70 <error@@Base+0x226c>
   13e38:	ldr	r0, [sp, #8]
   13e3c:	ldr	r0, [r0, #12]
   13e40:	bl	14490 <error@@Base+0x288c>
   13e44:	sxtb	r0, r0
   13e48:	cmp	r0, #0
   13e4c:	beq	13e5c <error@@Base+0x2258>
   13e50:	ldr	r0, [sp, #8]
   13e54:	movw	r1, #32
   13e58:	str	r1, [r0, #12]
   13e5c:	b	13e60 <error@@Base+0x225c>
   13e60:	ldr	r0, [sp, #8]
   13e64:	ldr	r0, [r0, #4]
   13e68:	str	r0, [sp, #8]
   13e6c:	b	13e28 <error@@Base+0x2224>
   13e70:	ldr	r0, [fp, #-8]
   13e74:	str	r0, [sp, #8]
   13e78:	ldr	r0, [sp, #8]
   13e7c:	movw	r1, #0
   13e80:	cmp	r0, r1
   13e84:	beq	13fa0 <error@@Base+0x239c>
   13e88:	ldr	r0, [sp, #8]
   13e8c:	ldr	r0, [r0, #4]
   13e90:	str	r0, [sp, #4]
   13e94:	ldr	r0, [sp, #8]
   13e98:	ldr	r0, [r0, #12]
   13e9c:	cmp	r0, #32
   13ea0:	bne	13ee0 <error@@Base+0x22dc>
   13ea4:	ldrsb	r0, [fp, #-9]
   13ea8:	cmp	r0, #0
   13eac:	beq	13efc <error@@Base+0x22f8>
   13eb0:	ldr	r0, [sp, #4]
   13eb4:	movw	r1, #0
   13eb8:	cmp	r0, r1
   13ebc:	beq	13efc <error@@Base+0x22f8>
   13ec0:	ldr	r0, [sp, #4]
   13ec4:	ldr	r0, [r0, #12]
   13ec8:	cmp	r0, #32
   13ecc:	beq	13efc <error@@Base+0x22f8>
   13ed0:	ldr	r0, [sp, #4]
   13ed4:	ldr	r0, [r0, #12]
   13ed8:	cmp	r0, #10
   13edc:	beq	13efc <error@@Base+0x22f8>
   13ee0:	ldr	r0, [sp, #8]
   13ee4:	ldr	r0, [r0, #12]
   13ee8:	cmp	r0, #10
   13eec:	bne	13f70 <error@@Base+0x236c>
   13ef0:	ldrsb	r0, [fp, #-9]
   13ef4:	cmp	r0, #0
   13ef8:	bne	13f70 <error@@Base+0x236c>
   13efc:	ldrb	r0, [fp, #-9]
   13f00:	cmp	r0, #0
   13f04:	beq	13f40 <error@@Base+0x233c>
   13f08:	ldr	r0, [sp, #4]
   13f0c:	movw	r1, #0
   13f10:	cmp	r0, r1
   13f14:	beq	13f40 <error@@Base+0x233c>
   13f18:	ldr	r0, [sp, #4]
   13f1c:	ldr	r0, [r0, #12]
   13f20:	cmp	r0, #32
   13f24:	bne	13f40 <error@@Base+0x233c>
   13f28:	ldr	r0, [sp, #8]
   13f2c:	ldrb	r0, [r0, #8]
   13f30:	ldr	r1, [sp, #4]
   13f34:	ldrb	r2, [r1, #8]
   13f38:	orr	r0, r2, r0
   13f3c:	strb	r0, [r1, #8]
   13f40:	ldr	r0, [pc, #96]	; 13fa8 <error@@Base+0x23a4>
   13f44:	ldr	r0, [pc, r0]
   13f48:	ldr	r1, [fp, #-4]
   13f4c:	ldr	r2, [sp, #8]
   13f50:	str	r0, [sp]
   13f54:	mov	r0, r1
   13f58:	mov	r1, r2
   13f5c:	ldr	r2, [sp]
   13f60:	blx	r2
   13f64:	ldr	r0, [sp, #8]
   13f68:	bl	10adc <free@plt>
   13f6c:	b	13f94 <error@@Base+0x2390>
   13f70:	ldr	r0, [sp, #8]
   13f74:	ldr	r0, [r0, #12]
   13f78:	cmp	r0, #10
   13f7c:	movw	r0, #0
   13f80:	moveq	r0, #1
   13f84:	tst	r0, #1
   13f88:	movw	r0, #0
   13f8c:	moveq	r0, #1
   13f90:	strb	r0, [fp, #-9]
   13f94:	ldr	r0, [sp, #4]
   13f98:	str	r0, [sp, #8]
   13f9c:	b	13e78 <error@@Base+0x2274>
   13fa0:	mov	sp, fp
   13fa4:	pop	{fp, pc}
   13fa8:	ldrdeq	r5, [r1], -ip
   13fac:	push	{fp, lr}
   13fb0:	mov	fp, sp
   13fb4:	sub	sp, sp, #8
   13fb8:	str	r0, [sp, #4]
   13fbc:	ldr	r0, [sp, #4]
   13fc0:	str	r0, [sp]
   13fc4:	ldr	r0, [sp]
   13fc8:	movw	r1, #0
   13fcc:	cmp	r0, r1
   13fd0:	beq	13ff8 <error@@Base+0x23f4>
   13fd4:	ldr	r0, [sp]
   13fd8:	ldr	r0, [r0, #12]
   13fdc:	bl	10b24 <utf8proc_tolower@plt>
   13fe0:	ldr	r1, [sp]
   13fe4:	str	r0, [r1, #12]
   13fe8:	ldr	r0, [sp]
   13fec:	ldr	r0, [r0, #4]
   13ff0:	str	r0, [sp]
   13ff4:	b	13fc4 <error@@Base+0x23c0>
   13ff8:	mov	sp, fp
   13ffc:	pop	{fp, pc}
   14000:	push	{fp, lr}
   14004:	mov	fp, sp
   14008:	sub	sp, sp, #16
   1400c:	str	r0, [fp, #-4]
   14010:	str	r1, [sp, #8]
   14014:	ldr	r0, [fp, #-4]
   14018:	ldr	r1, [sp, #8]
   1401c:	bl	10b00 <utf8proc_encode_char@plt>
   14020:	str	r0, [sp, #4]
   14024:	ldr	r0, [sp, #4]
   14028:	cmp	r0, #1
   1402c:	bge	14044 <error@@Base+0x2440>
   14030:	ldr	r0, [pc, #28]	; 14054 <error@@Base+0x2450>
   14034:	add	r0, pc, r0
   14038:	ldr	r1, [pc, #24]	; 14058 <error@@Base+0x2454>
   1403c:	ldr	r1, [pc, r1]
   14040:	blx	r1
   14044:	ldr	r0, [sp, #4]
   14048:	sxtb	r0, r0
   1404c:	mov	sp, fp
   14050:	pop	{fp, pc}
   14054:	andeq	r4, r0, sp, lsr #4
   14058:	andeq	r5, r1, r4, rrx
   1405c:	push	{fp, lr}
   14060:	mov	fp, sp
   14064:	sub	sp, sp, #24
   14068:	strb	r0, [fp, #-1]
   1406c:	str	r1, [fp, #-8]
   14070:	str	r2, [sp, #12]
   14074:	strb	r3, [sp, #11]
   14078:	movw	r0, #0
   1407c:	strh	r0, [sp, #8]
   14080:	ldr	r0, [sp, #12]
   14084:	str	r0, [sp, #4]
   14088:	ldrsb	r0, [fp, #-1]
   1408c:	cmp	r0, #0
   14090:	beq	140b0 <error@@Base+0x24ac>
   14094:	ldr	r1, [sp, #4]
   14098:	movw	r0, #94	; 0x5e
   1409c:	bl	14000 <error@@Base+0x23fc>
   140a0:	sxtb	r0, r0
   140a4:	ldrsh	r1, [sp, #8]
   140a8:	add	r0, r1, r0
   140ac:	strh	r0, [sp, #8]
   140b0:	ldr	r0, [fp, #-8]
   140b4:	cmp	r0, #10
   140b8:	bne	140fc <error@@Base+0x24f8>
   140bc:	ldr	r0, [pc, #304]	; 141f4 <error@@Base+0x25f0>
   140c0:	add	r0, pc, r0
   140c4:	ldr	r1, [pc, #300]	; 141f8 <error@@Base+0x25f4>
   140c8:	add	r1, pc, r1
   140cc:	ldr	r2, [sp, #12]
   140d0:	ldrsh	r3, [sp, #8]
   140d4:	add	r2, r2, r3
   140d8:	ldrb	r3, [sp, #11]
   140dc:	cmp	r3, #0
   140e0:	movw	r3, #0
   140e4:	movne	r3, #1
   140e8:	tst	r3, #1
   140ec:	movne	r1, r0
   140f0:	mov	r0, r2
   140f4:	bl	10be4 <sprintf@plt>
   140f8:	b	141e4 <error@@Base+0x25e0>
   140fc:	ldr	r0, [fp, #-8]
   14100:	bl	141fc <error@@Base+0x25f8>
   14104:	sxtb	r0, r0
   14108:	cmp	r0, #0
   1410c:	beq	14194 <error@@Base+0x2590>
   14110:	ldr	r0, [fp, #-8]
   14114:	bl	1427c <error@@Base+0x2678>
   14118:	sxtb	r0, r0
   1411c:	cmp	r0, #0
   14120:	beq	14148 <error@@Base+0x2544>
   14124:	ldr	r0, [sp, #4]
   14128:	ldrsh	r1, [sp, #8]
   1412c:	add	r1, r0, r1
   14130:	movw	r0, #9676	; 0x25cc
   14134:	bl	14000 <error@@Base+0x23fc>
   14138:	sxtb	r0, r0
   1413c:	ldrsh	r1, [sp, #8]
   14140:	add	r0, r1, r0
   14144:	strh	r0, [sp, #8]
   14148:	ldr	r0, [fp, #-8]
   1414c:	ldr	r1, [sp, #4]
   14150:	ldrsh	r2, [sp, #8]
   14154:	add	r1, r1, r2
   14158:	bl	14000 <error@@Base+0x23fc>
   1415c:	sxtb	r0, r0
   14160:	ldrsh	r1, [sp, #8]
   14164:	add	r0, r1, r0
   14168:	strh	r0, [sp, #8]
   1416c:	ldr	r0, [sp, #12]
   14170:	ldrh	r1, [sp, #8]
   14174:	movw	r2, #1
   14178:	add	r2, r1, r2
   1417c:	strh	r2, [sp, #8]
   14180:	sxth	r1, r1
   14184:	add	r0, r0, r1
   14188:	movw	r1, #0
   1418c:	strb	r1, [r0]
   14190:	b	141e0 <error@@Base+0x25dc>
   14194:	ldr	r0, [fp, #-8]
   14198:	cmp	r0, #256	; 0x100
   1419c:	bcs	141c0 <error@@Base+0x25bc>
   141a0:	ldr	r0, [pc, #72]	; 141f0 <error@@Base+0x25ec>
   141a4:	add	r1, pc, r0
   141a8:	ldr	r0, [sp, #12]
   141ac:	ldrsh	r2, [sp, #8]
   141b0:	add	r0, r0, r2
   141b4:	ldr	r2, [fp, #-8]
   141b8:	bl	10be4 <sprintf@plt>
   141bc:	b	141dc <error@@Base+0x25d8>
   141c0:	ldr	r0, [pc, #36]	; 141ec <error@@Base+0x25e8>
   141c4:	add	r1, pc, r0
   141c8:	ldr	r0, [sp, #12]
   141cc:	ldrsh	r2, [sp, #8]
   141d0:	add	r0, r0, r2
   141d4:	ldr	r2, [fp, #-8]
   141d8:	bl	10be4 <sprintf@plt>
   141dc:	b	141e0 <error@@Base+0x25dc>
   141e0:	b	141e4 <error@@Base+0x25e0>
   141e4:	mov	sp, fp
   141e8:	pop	{fp, pc}
   141ec:	andeq	r4, r0, r0, asr #1
   141f0:	ldrdeq	r4, [r0], -r9
   141f4:			; <UNDEFINED> instruction: 0x000041b8
   141f8:	andeq	r0, r0, pc, lsl ip
   141fc:	push	{fp, lr}
   14200:	mov	fp, sp
   14204:	sub	sp, sp, #16
   14208:	str	r0, [sp, #8]
   1420c:	ldr	r0, [sp, #8]
   14210:	bl	10ae8 <utf8proc_get_property@plt>
   14214:	str	r0, [sp, #4]
   14218:	ldr	r0, [sp, #8]
   1421c:	cmp	r0, #32
   14220:	bne	14230 <error@@Base+0x262c>
   14224:	movw	r0, #1
   14228:	strb	r0, [fp, #-1]
   1422c:	b	14270 <error@@Base+0x266c>
   14230:	ldr	r0, [sp, #4]
   14234:	ldrsh	r0, [r0]
   14238:	sub	r1, r0, #1
   1423c:	cmp	r1, #22
   14240:	str	r0, [sp]
   14244:	bcc	1425c <error@@Base+0x2658>
   14248:	b	1424c <error@@Base+0x2648>
   1424c:	ldr	r0, [sp]
   14250:	cmp	r0, #29
   14254:	bne	14268 <error@@Base+0x2664>
   14258:	b	1425c <error@@Base+0x2658>
   1425c:	movw	r0, #1
   14260:	strb	r0, [fp, #-1]
   14264:	b	14270 <error@@Base+0x266c>
   14268:	movw	r0, #0
   1426c:	strb	r0, [fp, #-1]
   14270:	ldrb	r0, [fp, #-1]
   14274:	mov	sp, fp
   14278:	pop	{fp, pc}
   1427c:	push	{fp, lr}
   14280:	mov	fp, sp
   14284:	sub	sp, sp, #8
   14288:	str	r0, [sp]
   1428c:	ldr	r0, [sp]
   14290:	bl	10b90 <utf8proc_category@plt>
   14294:	sub	r0, r0, #6
   14298:	cmp	r0, #2
   1429c:	bhi	142b0 <error@@Base+0x26ac>
   142a0:	b	142a4 <error@@Base+0x26a0>
   142a4:	movw	r0, #1
   142a8:	strb	r0, [fp, #-1]
   142ac:	b	142b8 <error@@Base+0x26b4>
   142b0:	movw	r0, #0
   142b4:	strb	r0, [fp, #-1]
   142b8:	ldrb	r0, [fp, #-1]
   142bc:	mov	sp, fp
   142c0:	pop	{fp, pc}
   142c4:	push	{fp, lr}
   142c8:	mov	fp, sp
   142cc:	sub	sp, sp, #48	; 0x30
   142d0:	ldr	r3, [pc, #252]	; 143d4 <error@@Base+0x27d0>
   142d4:	add	r3, pc, r3
   142d8:	ldr	ip, [pc, #248]	; 143d8 <error@@Base+0x27d4>
   142dc:	ldr	ip, [pc, ip]
   142e0:	str	r0, [fp, #-4]
   142e4:	str	r1, [fp, #-8]
   142e8:	str	r2, [fp, #-12]
   142ec:	ldr	r0, [fp, #-8]
   142f0:	mov	r1, r3
   142f4:	blx	ip
   142f8:	str	r0, [fp, #-16]
   142fc:	ldr	r0, [fp, #-12]
   14300:	movw	r1, #0
   14304:	cmp	r0, r1
   14308:	beq	1435c <error@@Base+0x2758>
   1430c:	ldr	r0, [pc, #208]	; 143e4 <error@@Base+0x27e0>
   14310:	add	r0, pc, r0
   14314:	ldr	r1, [fp, #-16]
   14318:	bl	10c08 <fputs@plt>
   1431c:	ldr	r1, [pc, #188]	; 143e0 <error@@Base+0x27dc>
   14320:	add	r1, pc, r1
   14324:	ldr	r2, [fp, #-16]
   14328:	str	r0, [sp, #12]
   1432c:	mov	r0, r1
   14330:	mov	r1, r2
   14334:	bl	10c08 <fputs@plt>
   14338:	ldr	r1, [fp, #-12]
   1433c:	ldr	r2, [fp, #-16]
   14340:	str	r0, [sp, #8]
   14344:	mov	r0, r2
   14348:	blx	r1
   1434c:	ldr	r0, [pc, #136]	; 143dc <error@@Base+0x27d8>
   14350:	add	r0, pc, r0
   14354:	ldr	r1, [fp, #-16]
   14358:	bl	10c08 <fputs@plt>
   1435c:	ldr	r0, [fp, #-4]
   14360:	ldr	r0, [r0]
   14364:	str	r0, [fp, #-20]	; 0xffffffec
   14368:	ldr	r0, [fp, #-20]	; 0xffffffec
   1436c:	movw	r1, #0
   14370:	cmp	r0, r1
   14374:	beq	143b0 <error@@Base+0x27ac>
   14378:	add	r2, sp, #19
   1437c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14380:	ldrb	r0, [r0, #8]
   14384:	ldr	r1, [fp, #-20]	; 0xffffffec
   14388:	ldr	r1, [r1, #12]
   1438c:	movw	r3, #0
   14390:	bl	1405c <error@@Base+0x2458>
   14394:	add	r0, sp, #19
   14398:	ldr	r1, [fp, #-16]
   1439c:	bl	10c08 <fputs@plt>
   143a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   143a4:	ldr	r0, [r0, #4]
   143a8:	str	r0, [fp, #-20]	; 0xffffffec
   143ac:	b	14368 <error@@Base+0x2764>
   143b0:	ldr	r0, [pc, #48]	; 143e8 <error@@Base+0x27e4>
   143b4:	ldr	r0, [pc, r0]
   143b8:	ldr	r1, [fp, #-16]
   143bc:	str	r0, [sp, #4]
   143c0:	mov	r0, r1
   143c4:	ldr	r1, [sp, #4]
   143c8:	blx	r1
   143cc:	mov	sp, fp
   143d0:	pop	{fp, pc}
   143d4:	andeq	r0, r0, pc, lsr #21
   143d8:	ldrdeq	r4, [r1], -r0
   143dc:	andeq	r3, r0, r3, ror pc
   143e0:	andeq	r3, r0, r3, lsr #31
   143e4:	andeq	r3, r0, fp, ror pc
   143e8:	ldrdeq	r4, [r1], -r8
   143ec:	push	{fp, lr}
   143f0:	mov	fp, sp
   143f4:	sub	sp, sp, #24
   143f8:	str	r0, [fp, #-8]
   143fc:	str	r1, [sp, #12]
   14400:	ldr	r0, [sp, #12]
   14404:	str	r0, [sp, #8]
   14408:	movw	r0, #0
   1440c:	str	r0, [sp, #4]
   14410:	str	r0, [sp]
   14414:	ldr	r0, [sp, #12]
   14418:	str	r0, [sp, #8]
   1441c:	ldr	r0, [sp, #8]
   14420:	ldrb	r0, [r0]
   14424:	cmp	r0, #0
   14428:	beq	1447c <error@@Base+0x2878>
   1442c:	ldr	r0, [sp, #8]
   14430:	mvn	r1, #0
   14434:	mov	r2, sp
   14438:	bl	10b48 <utf8proc_iterate@plt>
   1443c:	str	r0, [sp, #4]
   14440:	ldr	r0, [sp, #4]
   14444:	cmp	r0, #1
   14448:	bge	14458 <error@@Base+0x2854>
   1444c:	movw	r0, #0
   14450:	strb	r0, [fp, #-1]
   14454:	b	14484 <error@@Base+0x2880>
   14458:	ldr	r0, [fp, #-8]
   1445c:	ldr	r2, [sp]
   14460:	movw	r1, #0
   14464:	bl	1392c <error@@Base+0x1d28>
   14468:	ldr	r0, [sp, #4]
   1446c:	ldr	r1, [sp, #8]
   14470:	add	r0, r1, r0
   14474:	str	r0, [sp, #8]
   14478:	b	1441c <error@@Base+0x2818>
   1447c:	movw	r0, #1
   14480:	strb	r0, [fp, #-1]
   14484:	ldrb	r0, [fp, #-1]
   14488:	mov	sp, fp
   1448c:	pop	{fp, pc}
   14490:	push	{fp, lr}
   14494:	mov	fp, sp
   14498:	sub	sp, sp, #16
   1449c:	str	r0, [sp, #8]
   144a0:	ldr	r0, [sp, #8]
   144a4:	bl	10ae8 <utf8proc_get_property@plt>
   144a8:	str	r0, [sp, #4]
   144ac:	ldr	r0, [sp, #8]
   144b0:	cmp	r0, #9
   144b4:	str	r0, [sp]
   144b8:	beq	14500 <error@@Base+0x28fc>
   144bc:	b	144c0 <error@@Base+0x28bc>
   144c0:	ldr	r0, [sp]
   144c4:	cmp	r0, #10
   144c8:	beq	144f4 <error@@Base+0x28f0>
   144cc:	b	144d0 <error@@Base+0x28cc>
   144d0:	ldr	r0, [sp]
   144d4:	sub	r1, r0, #11
   144d8:	cmp	r1, #3
   144dc:	bcc	14500 <error@@Base+0x28fc>
   144e0:	b	144e4 <error@@Base+0x28e0>
   144e4:	ldr	r0, [sp]
   144e8:	cmp	r0, #160	; 0xa0
   144ec:	beq	14500 <error@@Base+0x28fc>
   144f0:	b	1450c <error@@Base+0x2908>
   144f4:	movw	r0, #0
   144f8:	strb	r0, [fp, #-1]
   144fc:	b	14538 <error@@Base+0x2934>
   14500:	movw	r0, #1
   14504:	strb	r0, [fp, #-1]
   14508:	b	14538 <error@@Base+0x2934>
   1450c:	ldr	r0, [sp, #4]
   14510:	ldrsh	r0, [r0]
   14514:	sub	r0, r0, #23
   14518:	cmp	r0, #2
   1451c:	bhi	14530 <error@@Base+0x292c>
   14520:	b	14524 <error@@Base+0x2920>
   14524:	movw	r0, #1
   14528:	strb	r0, [fp, #-1]
   1452c:	b	14538 <error@@Base+0x2934>
   14530:	movw	r0, #0
   14534:	strb	r0, [fp, #-1]
   14538:	ldrb	r0, [fp, #-1]
   1453c:	mov	sp, fp
   14540:	pop	{fp, pc}
   14544:	sub	sp, sp, #4
   14548:	str	r0, [sp]
   1454c:	ldr	r0, [sp]
   14550:	movw	r1, #0
   14554:	str	r1, [r0, #4]
   14558:	ldr	r0, [sp]
   1455c:	str	r1, [r0]
   14560:	ldr	r0, [sp]
   14564:	str	r1, [r0, #8]
   14568:	ldr	r0, [sp]
   1456c:	str	r1, [r0, #12]
   14570:	add	sp, sp, #4
   14574:	bx	lr
   14578:	push	{fp, lr}
   1457c:	mov	fp, sp
   14580:	sub	sp, sp, #8
   14584:	str	r0, [sp, #4]
   14588:	str	r1, [sp]
   1458c:	ldr	r0, [sp, #4]
   14590:	ldr	r2, [sp]
   14594:	ldr	r1, [sp, #4]
   14598:	ldr	r3, [r1]
   1459c:	movw	r1, #0
   145a0:	bl	145ac <error@@Base+0x29a8>
   145a4:	mov	sp, fp
   145a8:	pop	{fp, pc}
   145ac:	push	{fp, lr}
   145b0:	mov	fp, sp
   145b4:	sub	sp, sp, #16
   145b8:	str	r0, [fp, #-4]
   145bc:	str	r1, [sp, #8]
   145c0:	str	r2, [sp, #4]
   145c4:	str	r3, [sp]
   145c8:	ldr	r0, [sp, #8]
   145cc:	ldr	r1, [sp, #4]
   145d0:	str	r0, [r1]
   145d4:	ldr	r0, [sp]
   145d8:	ldr	r1, [sp, #4]
   145dc:	str	r0, [r1, #4]
   145e0:	ldr	r0, [sp, #8]
   145e4:	movw	r1, #0
   145e8:	cmp	r0, r1
   145ec:	beq	14600 <error@@Base+0x29fc>
   145f0:	ldr	r0, [sp, #4]
   145f4:	ldr	r1, [sp, #8]
   145f8:	str	r0, [r1, #4]
   145fc:	b	1460c <error@@Base+0x2a08>
   14600:	ldr	r0, [sp, #4]
   14604:	ldr	r1, [fp, #-4]
   14608:	str	r0, [r1]
   1460c:	ldr	r0, [sp]
   14610:	movw	r1, #0
   14614:	cmp	r0, r1
   14618:	beq	1462c <error@@Base+0x2a28>
   1461c:	ldr	r0, [sp, #4]
   14620:	ldr	r1, [sp]
   14624:	str	r0, [r1]
   14628:	b	14638 <error@@Base+0x2a34>
   1462c:	ldr	r0, [sp, #4]
   14630:	ldr	r1, [fp, #-4]
   14634:	str	r0, [r1, #4]
   14638:	ldr	r0, [fp, #-4]
   1463c:	bl	147c0 <error@@Base+0x2bbc>
   14640:	ldr	r0, [fp, #-4]
   14644:	ldr	r1, [r0, #12]
   14648:	add	r1, r1, #1
   1464c:	str	r1, [r0, #12]
   14650:	mov	sp, fp
   14654:	pop	{fp, pc}
   14658:	push	{fp, lr}
   1465c:	mov	fp, sp
   14660:	sub	sp, sp, #8
   14664:	str	r0, [sp, #4]
   14668:	str	r1, [sp]
   1466c:	ldr	r0, [sp, #4]
   14670:	ldr	r1, [sp, #4]
   14674:	ldr	r1, [r1, #4]
   14678:	ldr	r2, [sp]
   1467c:	movw	r3, #0
   14680:	bl	145ac <error@@Base+0x29a8>
   14684:	mov	sp, fp
   14688:	pop	{fp, pc}
   1468c:	push	{fp, lr}
   14690:	mov	fp, sp
   14694:	sub	sp, sp, #16
   14698:	str	r0, [fp, #-4]
   1469c:	str	r1, [sp, #8]
   146a0:	str	r2, [sp, #4]
   146a4:	ldr	r0, [fp, #-4]
   146a8:	ldr	r1, [sp, #4]
   146ac:	ldr	r1, [r1]
   146b0:	ldr	r2, [sp, #8]
   146b4:	ldr	r3, [sp, #4]
   146b8:	bl	145ac <error@@Base+0x29a8>
   146bc:	mov	sp, fp
   146c0:	pop	{fp, pc}
   146c4:	push	{fp, lr}
   146c8:	mov	fp, sp
   146cc:	sub	sp, sp, #16
   146d0:	str	r0, [fp, #-4]
   146d4:	str	r1, [sp, #8]
   146d8:	str	r2, [sp, #4]
   146dc:	ldr	r0, [fp, #-4]
   146e0:	ldr	r1, [sp, #8]
   146e4:	ldr	r2, [sp, #4]
   146e8:	ldr	r3, [sp, #8]
   146ec:	ldr	r3, [r3, #4]
   146f0:	bl	145ac <error@@Base+0x29a8>
   146f4:	mov	sp, fp
   146f8:	pop	{fp, pc}
   146fc:	push	{fp, lr}
   14700:	mov	fp, sp
   14704:	sub	sp, sp, #8
   14708:	str	r0, [sp, #4]
   1470c:	str	r1, [sp]
   14710:	ldr	r0, [sp]
   14714:	ldr	r0, [r0]
   14718:	movw	r1, #0
   1471c:	cmp	r0, r1
   14720:	beq	1473c <error@@Base+0x2b38>
   14724:	ldr	r0, [sp]
   14728:	ldr	r0, [r0, #4]
   1472c:	ldr	r1, [sp]
   14730:	ldr	r1, [r1]
   14734:	str	r0, [r1, #4]
   14738:	b	1474c <error@@Base+0x2b48>
   1473c:	ldr	r0, [sp]
   14740:	ldr	r0, [r0, #4]
   14744:	ldr	r1, [sp, #4]
   14748:	str	r0, [r1]
   1474c:	ldr	r0, [sp]
   14750:	ldr	r0, [r0, #4]
   14754:	movw	r1, #0
   14758:	cmp	r0, r1
   1475c:	beq	14778 <error@@Base+0x2b74>
   14760:	ldr	r0, [sp]
   14764:	ldr	r0, [r0]
   14768:	ldr	r1, [sp]
   1476c:	ldr	r1, [r1, #4]
   14770:	str	r0, [r1]
   14774:	b	14788 <error@@Base+0x2b84>
   14778:	ldr	r0, [sp]
   1477c:	ldr	r0, [r0]
   14780:	ldr	r1, [sp, #4]
   14784:	str	r0, [r1, #4]
   14788:	ldr	r0, [sp]
   1478c:	movw	r1, #0
   14790:	str	r1, [r0, #4]
   14794:	ldr	r0, [sp]
   14798:	str	r1, [r0]
   1479c:	ldr	r0, [sp, #4]
   147a0:	bl	147c0 <error@@Base+0x2bbc>
   147a4:	ldr	r0, [sp, #4]
   147a8:	ldr	r1, [r0, #12]
   147ac:	mvn	r2, #0
   147b0:	add	r1, r1, r2
   147b4:	str	r1, [r0, #12]
   147b8:	mov	sp, fp
   147bc:	pop	{fp, pc}
   147c0:	push	{fp, lr}
   147c4:	mov	fp, sp
   147c8:	sub	sp, sp, #8
   147cc:	str	r0, [sp, #4]
   147d0:	ldr	r0, [sp, #4]
   147d4:	ldr	r0, [r0, #8]
   147d8:	movw	r1, #0
   147dc:	cmp	r0, r1
   147e0:	beq	147fc <error@@Base+0x2bf8>
   147e4:	ldr	r0, [sp, #4]
   147e8:	ldr	r0, [r0, #8]
   147ec:	bl	10adc <free@plt>
   147f0:	ldr	r0, [sp, #4]
   147f4:	movw	r1, #0
   147f8:	str	r1, [r0, #8]
   147fc:	mov	sp, fp
   14800:	pop	{fp, pc}
   14804:	push	{fp, lr}
   14808:	mov	fp, sp
   1480c:	sub	sp, sp, #16
   14810:	str	r0, [fp, #-4]
   14814:	movw	r0, #0
   14818:	str	r0, [sp, #4]
   1481c:	ldr	r1, [fp, #-4]
   14820:	ldr	r1, [r1, #8]
   14824:	cmp	r1, r0
   14828:	bne	1483c <error@@Base+0x2c38>
   1482c:	ldr	r0, [fp, #-4]
   14830:	ldr	r0, [r0, #12]
   14834:	cmp	r0, #0
   14838:	bne	14840 <error@@Base+0x2c3c>
   1483c:	b	148b8 <error@@Base+0x2cb4>
   14840:	ldr	r0, [pc, #120]	; 148c0 <error@@Base+0x2cbc>
   14844:	ldr	r0, [pc, r0]
   14848:	ldr	r1, [fp, #-4]
   1484c:	ldr	r1, [r1, #12]
   14850:	str	r0, [sp]
   14854:	mov	r0, r1
   14858:	movw	r1, #4
   1485c:	ldr	r2, [sp]
   14860:	blx	r2
   14864:	ldr	r1, [fp, #-4]
   14868:	str	r0, [r1, #8]
   1486c:	ldr	r0, [fp, #-4]
   14870:	ldr	r0, [r0]
   14874:	str	r0, [sp, #8]
   14878:	ldr	r0, [sp, #8]
   1487c:	movw	r1, #0
   14880:	cmp	r0, r1
   14884:	beq	148b8 <error@@Base+0x2cb4>
   14888:	ldr	r0, [sp, #8]
   1488c:	ldr	r1, [fp, #-4]
   14890:	ldr	r1, [r1, #8]
   14894:	ldr	r2, [sp, #4]
   14898:	add	r3, r2, #1
   1489c:	str	r3, [sp, #4]
   148a0:	add	r1, r1, r2, lsl #2
   148a4:	str	r0, [r1]
   148a8:	ldr	r0, [sp, #8]
   148ac:	ldr	r0, [r0, #4]
   148b0:	str	r0, [sp, #8]
   148b4:	b	14878 <error@@Base+0x2c74>
   148b8:	mov	sp, fp
   148bc:	pop	{fp, pc}
   148c0:	andeq	r4, r1, ip, asr #17
   148c4:	push	{fp, lr}
   148c8:	mov	fp, sp
   148cc:	sub	sp, sp, #16
   148d0:	str	r0, [fp, #-4]
   148d4:	str	r1, [sp, #8]
   148d8:	ldr	r0, [fp, #-4]
   148dc:	ldr	r0, [r0]
   148e0:	movw	r1, #0
   148e4:	cmp	r0, r1
   148e8:	beq	14920 <error@@Base+0x2d1c>
   148ec:	ldr	r0, [fp, #-4]
   148f0:	ldr	r0, [r0]
   148f4:	str	r0, [sp, #4]
   148f8:	ldr	r0, [fp, #-4]
   148fc:	ldr	r1, [sp, #4]
   14900:	bl	146fc <error@@Base+0x2af8>
   14904:	ldr	r0, [sp, #8]
   14908:	ldr	r1, [sp, #4]
   1490c:	str	r0, [sp]
   14910:	mov	r0, r1
   14914:	ldr	r1, [sp]
   14918:	blx	r1
   1491c:	b	148d8 <error@@Base+0x2cd4>
   14920:	mov	sp, fp
   14924:	pop	{fp, pc}
   14928:	push	{fp, lr}
   1492c:	mov	fp, sp
   14930:	sub	sp, sp, #16
   14934:	str	r0, [fp, #-4]
   14938:	str	r1, [sp, #8]
   1493c:	str	r2, [sp, #4]
   14940:	ldr	r0, [fp, #-4]
   14944:	cmp	r0, #2
   14948:	bge	14950 <error@@Base+0x2d4c>
   1494c:	b	14980 <error@@Base+0x2d7c>
   14950:	ldr	r0, [pc, #48]	; 14988 <error@@Base+0x2d84>
   14954:	add	r0, pc, r0
   14958:	ldr	r1, [pc, #44]	; 1498c <error@@Base+0x2d88>
   1495c:	add	r1, pc, r1
   14960:	ldr	r2, [sp, #8]
   14964:	str	r2, [r1]
   14968:	ldr	r1, [sp, #4]
   1496c:	str	r1, [r0]
   14970:	ldr	r0, [fp, #-4]
   14974:	sub	r1, r0, #1
   14978:	movw	r0, #0
   1497c:	bl	14990 <error@@Base+0x2d8c>
   14980:	mov	sp, fp
   14984:	pop	{fp, pc}
   14988:	andeq	r4, r1, r0, ror #16
   1498c:	andeq	r4, r1, r4, asr r8
   14990:	push	{fp, lr}
   14994:	mov	fp, sp
   14998:	sub	sp, sp, #40	; 0x28
   1499c:	str	r0, [fp, #-4]
   149a0:	str	r1, [fp, #-8]
   149a4:	ldr	r0, [fp, #-4]
   149a8:	str	r0, [fp, #-12]
   149ac:	ldr	r0, [fp, #-8]
   149b0:	str	r0, [fp, #-16]
   149b4:	ldr	r0, [pc, #500]	; 14bb0 <error@@Base+0x2fac>
   149b8:	ldr	r0, [pc, r0]
   149bc:	ldr	r1, [fp, #-12]
   149c0:	add	r0, r0, r1, lsl #2
   149c4:	ldr	r0, [r0]
   149c8:	str	r0, [sp, #20]
   149cc:	ldr	r0, [fp, #-12]
   149d0:	ldr	r1, [fp, #-16]
   149d4:	cmp	r0, r1
   149d8:	bge	14b44 <error@@Base+0x2f40>
   149dc:	b	149e0 <error@@Base+0x2ddc>
   149e0:	ldr	r0, [fp, #-12]
   149e4:	ldr	r1, [fp, #-16]
   149e8:	cmp	r0, r1
   149ec:	movw	r0, #0
   149f0:	str	r0, [sp, #16]
   149f4:	bge	14a3c <error@@Base+0x2e38>
   149f8:	ldr	r0, [pc, #436]	; 14bb4 <error@@Base+0x2fb0>
   149fc:	ldr	r0, [pc, r0]
   14a00:	ldr	r1, [sp, #20]
   14a04:	ldr	r2, [pc, #428]	; 14bb8 <error@@Base+0x2fb4>
   14a08:	ldr	r2, [pc, r2]
   14a0c:	ldr	r3, [fp, #-16]
   14a10:	add	r2, r2, r3, lsl #2
   14a14:	ldr	r2, [r2]
   14a18:	str	r0, [sp, #12]
   14a1c:	mov	r0, r1
   14a20:	mov	r1, r2
   14a24:	ldr	r2, [sp, #12]
   14a28:	blx	r2
   14a2c:	cmp	r0, #0
   14a30:	movw	r0, #0
   14a34:	movlt	r0, #1
   14a38:	str	r0, [sp, #16]
   14a3c:	ldr	r0, [sp, #16]
   14a40:	tst	r0, #1
   14a44:	beq	14a5c <error@@Base+0x2e58>
   14a48:	ldr	r0, [fp, #-16]
   14a4c:	mvn	r1, #0
   14a50:	add	r0, r0, r1
   14a54:	str	r0, [fp, #-16]
   14a58:	b	149e0 <error@@Base+0x2ddc>
   14a5c:	ldr	r0, [fp, #-12]
   14a60:	ldr	r1, [fp, #-16]
   14a64:	cmp	r0, r1
   14a68:	beq	14a90 <error@@Base+0x2e8c>
   14a6c:	ldr	r0, [pc, #328]	; 14bbc <error@@Base+0x2fb8>
   14a70:	ldr	r0, [pc, r0]
   14a74:	ldr	r1, [fp, #-16]
   14a78:	ldr	r1, [r0, r1, lsl #2]
   14a7c:	ldr	r2, [fp, #-12]
   14a80:	add	r3, r2, #1
   14a84:	str	r3, [fp, #-12]
   14a88:	add	r0, r0, r2, lsl #2
   14a8c:	str	r1, [r0]
   14a90:	b	14a94 <error@@Base+0x2e90>
   14a94:	ldr	r0, [fp, #-12]
   14a98:	ldr	r1, [fp, #-16]
   14a9c:	cmp	r0, r1
   14aa0:	movw	r0, #0
   14aa4:	str	r0, [sp, #8]
   14aa8:	bge	14af0 <error@@Base+0x2eec>
   14aac:	ldr	r0, [pc, #268]	; 14bc0 <error@@Base+0x2fbc>
   14ab0:	ldr	r0, [pc, r0]
   14ab4:	ldr	r1, [sp, #20]
   14ab8:	ldr	r2, [pc, #260]	; 14bc4 <error@@Base+0x2fc0>
   14abc:	ldr	r2, [pc, r2]
   14ac0:	ldr	r3, [fp, #-12]
   14ac4:	add	r2, r2, r3, lsl #2
   14ac8:	ldr	r2, [r2]
   14acc:	str	r0, [sp, #4]
   14ad0:	mov	r0, r1
   14ad4:	mov	r1, r2
   14ad8:	ldr	r2, [sp, #4]
   14adc:	blx	r2
   14ae0:	cmp	r0, #0
   14ae4:	movw	r0, #0
   14ae8:	movgt	r0, #1
   14aec:	str	r0, [sp, #8]
   14af0:	ldr	r0, [sp, #8]
   14af4:	tst	r0, #1
   14af8:	beq	14b0c <error@@Base+0x2f08>
   14afc:	ldr	r0, [fp, #-12]
   14b00:	add	r0, r0, #1
   14b04:	str	r0, [fp, #-12]
   14b08:	b	14a94 <error@@Base+0x2e90>
   14b0c:	ldr	r0, [fp, #-12]
   14b10:	ldr	r1, [fp, #-16]
   14b14:	cmp	r0, r1
   14b18:	beq	14b40 <error@@Base+0x2f3c>
   14b1c:	ldr	r0, [pc, #164]	; 14bc8 <error@@Base+0x2fc4>
   14b20:	ldr	r0, [pc, r0]
   14b24:	ldr	r1, [fp, #-12]
   14b28:	ldr	r1, [r0, r1, lsl #2]
   14b2c:	ldr	r2, [fp, #-16]
   14b30:	sub	r3, r2, #1
   14b34:	str	r3, [fp, #-16]
   14b38:	add	r0, r0, r2, lsl #2
   14b3c:	str	r1, [r0]
   14b40:	b	149cc <error@@Base+0x2dc8>
   14b44:	ldr	r0, [sp, #20]
   14b48:	ldr	r1, [pc, #124]	; 14bcc <error@@Base+0x2fc8>
   14b4c:	ldr	r1, [pc, r1]
   14b50:	ldr	r2, [fp, #-16]
   14b54:	add	r1, r1, r2, lsl #2
   14b58:	str	r0, [r1]
   14b5c:	ldr	r0, [fp, #-4]
   14b60:	ldr	r1, [fp, #-16]
   14b64:	mvn	r2, #0
   14b68:	add	r1, r1, r2
   14b6c:	str	r1, [fp, #-16]
   14b70:	cmp	r0, r1
   14b74:	bge	14b84 <error@@Base+0x2f80>
   14b78:	ldr	r0, [fp, #-4]
   14b7c:	ldr	r1, [fp, #-16]
   14b80:	bl	14990 <error@@Base+0x2d8c>
   14b84:	ldr	r0, [fp, #-12]
   14b88:	add	r0, r0, #1
   14b8c:	str	r0, [fp, #-12]
   14b90:	ldr	r1, [fp, #-8]
   14b94:	cmp	r0, r1
   14b98:	bge	14ba8 <error@@Base+0x2fa4>
   14b9c:	ldr	r0, [fp, #-12]
   14ba0:	ldr	r1, [fp, #-8]
   14ba4:	bl	14990 <error@@Base+0x2d8c>
   14ba8:	mov	sp, fp
   14bac:	pop	{fp, pc}
   14bb0:	strdeq	r4, [r1], -r8
   14bb4:			; <UNDEFINED> instruction: 0x000147b8
   14bb8:	andeq	r4, r1, r8, lsr #15
   14bbc:	andeq	r4, r1, r0, asr #14
   14bc0:	andeq	r4, r1, r4, lsl #14
   14bc4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14bc8:	muleq	r1, r0, r6
   14bcc:	andeq	r4, r1, r4, ror #12
   14bd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bd4:	mov	r7, r0
   14bd8:	ldr	r6, [pc, #72]	; 14c28 <error@@Base+0x3024>
   14bdc:	ldr	r5, [pc, #72]	; 14c2c <error@@Base+0x3028>
   14be0:	add	r6, pc, r6
   14be4:	add	r5, pc, r5
   14be8:	sub	r6, r6, r5
   14bec:	mov	r8, r1
   14bf0:	mov	r9, r2
   14bf4:	bl	10a8c <calloc@plt-0x20>
   14bf8:	asrs	r6, r6, #2
   14bfc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c00:	mov	r4, #0
   14c04:	add	r4, r4, #1
   14c08:	ldr	r3, [r5], #4
   14c0c:	mov	r2, r9
   14c10:	mov	r1, r8
   14c14:	mov	r0, r7
   14c18:	blx	r3
   14c1c:	cmp	r6, r4
   14c20:	bne	14c04 <error@@Base+0x3000>
   14c24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c28:	andeq	r4, r1, r4, lsl r3
   14c2c:	andeq	r4, r1, ip, lsl #6
   14c30:	bx	lr
   14c34:	mov	r2, r1
   14c38:	mov	r1, r0
   14c3c:	mov	r0, #3
   14c40:	b	10b30 <__xstat@plt>

Disassembly of section .fini:

00014c44 <.fini>:
   14c44:	push	{r3, lr}
   14c48:	pop	{r3, pc}
