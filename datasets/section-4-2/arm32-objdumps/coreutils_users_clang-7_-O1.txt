
../repos/coreutils/src/users:     file format elf32-littlearm


Disassembly of section .init:

00010d78 <.init>:
   10d78:	push	{r3, lr}
   10d7c:	bl	1102c <putchar_unlocked@plt+0x48>
   10d80:	pop	{r3, pc}

Disassembly of section .plt:

00010d84 <calloc@plt-0x14>:
   10d84:	push	{lr}		; (str lr, [sp, #-4]!)
   10d88:	ldr	lr, [pc, #4]	; 10d94 <calloc@plt-0x4>
   10d8c:	add	lr, pc, lr
   10d90:	ldr	pc, [lr, #8]!
   10d94:	andeq	r5, r1, ip, ror #4

00010d98 <calloc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #620]!	; 0x26c

00010da4 <fputs_unlocked@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #612]!	; 0x264

00010db0 <strcmp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #604]!	; 0x25c

00010dbc <fflush@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #596]!	; 0x254

00010dc8 <utmpxname@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #588]!	; 0x24c

00010dd4 <free@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #580]!	; 0x244

00010de0 <_exit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #572]!	; 0x23c

00010dec <memcpy@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #564]!	; 0x234

00010df8 <mbsinit@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #556]!	; 0x22c

00010e04 <memcmp@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #548]!	; 0x224

00010e10 <dcgettext@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #540]!	; 0x21c

00010e1c <setutxent@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #532]!	; 0x214

00010e28 <realloc@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #524]!	; 0x20c

00010e34 <textdomain@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #516]!	; 0x204

00010e40 <iswprint@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #508]!	; 0x1fc

00010e4c <fwrite@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #500]!	; 0x1f4

00010e58 <lseek64@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #492]!	; 0x1ec

00010e64 <__ctype_get_mb_cur_max@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e70 <__fpending@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #476]!	; 0x1dc

00010e7c <ferror_unlocked@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #468]!	; 0x1d4

00010e88 <mbrtowc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #460]!	; 0x1cc

00010e94 <error@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #452]!	; 0x1c4

00010ea0 <malloc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #444]!	; 0x1bc

00010eac <__libc_start_main@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #436]!	; 0x1b4

00010eb8 <__freading@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #428]!	; 0x1ac

00010ec4 <__gmon_start__@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #420]!	; 0x1a4

00010ed0 <getopt_long@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #412]!	; 0x19c

00010edc <kill@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #404]!	; 0x194

00010ee8 <__ctype_b_loc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #396]!	; 0x18c

00010ef4 <exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #388]!	; 0x184

00010f00 <strlen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #380]!	; 0x17c

00010f0c <__errno_location@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #372]!	; 0x174

00010f18 <__cxa_atexit@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #364]!	; 0x16c

00010f24 <memset@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #356]!	; 0x164

00010f30 <strncpy@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #348]!	; 0x15c

00010f3c <__printf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #340]!	; 0x154

00010f48 <fileno@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #332]!	; 0x14c

00010f54 <__fprintf_chk@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #324]!	; 0x144

00010f60 <fclose@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #316]!	; 0x13c

00010f6c <fseeko64@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #308]!	; 0x134

00010f78 <endutxent@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #300]!	; 0x12c

00010f84 <setlocale@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #292]!	; 0x124

00010f90 <strrchr@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #284]!	; 0x11c

00010f9c <nl_langinfo@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #276]!	; 0x114

00010fa8 <qsort@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #268]!	; 0x10c

00010fb4 <bindtextdomain@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #260]!	; 0x104

00010fc0 <strncmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #252]!	; 0xfc

00010fcc <abort@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #244]!	; 0xf4

00010fd8 <getutxent@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #236]!	; 0xec

00010fe4 <putchar_unlocked@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #228]!	; 0xe4

Disassembly of section .text:

00010ff0 <.text>:
   10ff0:	mov	fp, #0
   10ff4:	mov	lr, #0
   10ff8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ffc:	mov	r2, sp
   11000:	push	{r2}		; (str r2, [sp, #-4]!)
   11004:	push	{r0}		; (str r0, [sp, #-4]!)
   11008:	ldr	ip, [pc, #16]	; 11020 <putchar_unlocked@plt+0x3c>
   1100c:	push	{ip}		; (str ip, [sp, #-4]!)
   11010:	ldr	r0, [pc, #12]	; 11024 <putchar_unlocked@plt+0x40>
   11014:	ldr	r3, [pc, #12]	; 11028 <putchar_unlocked@plt+0x44>
   11018:	bl	10eac <__libc_start_main@plt>
   1101c:	bl	10fcc <abort@plt>
   11020:	andeq	r4, r1, r0, asr r8
   11024:	andeq	r1, r1, r4, ror #6
   11028:	strdeq	r4, [r1], -r0
   1102c:	ldr	r3, [pc, #20]	; 11048 <putchar_unlocked@plt+0x64>
   11030:	ldr	r2, [pc, #20]	; 1104c <putchar_unlocked@plt+0x68>
   11034:	add	r3, pc, r3
   11038:	ldr	r2, [r3, r2]
   1103c:	cmp	r2, #0
   11040:	bxeq	lr
   11044:	b	10ec4 <__gmon_start__@plt>
   11048:	andeq	r4, r1, r4, asr #31
   1104c:	ldrdeq	r0, [r0], -r4
   11050:	ldr	r0, [pc, #24]	; 11070 <putchar_unlocked@plt+0x8c>
   11054:	ldr	r3, [pc, #24]	; 11074 <putchar_unlocked@plt+0x90>
   11058:	cmp	r3, r0
   1105c:	bxeq	lr
   11060:	ldr	r3, [pc, #16]	; 11078 <putchar_unlocked@plt+0x94>
   11064:	cmp	r3, #0
   11068:	bxeq	lr
   1106c:	bx	r3
   11070:	andeq	r6, r2, r8, lsr #2
   11074:	andeq	r6, r2, r8, lsr #2
   11078:	andeq	r0, r0, r0
   1107c:	ldr	r0, [pc, #36]	; 110a8 <putchar_unlocked@plt+0xc4>
   11080:	ldr	r1, [pc, #36]	; 110ac <putchar_unlocked@plt+0xc8>
   11084:	sub	r1, r1, r0
   11088:	asr	r1, r1, #2
   1108c:	add	r1, r1, r1, lsr #31
   11090:	asrs	r1, r1, #1
   11094:	bxeq	lr
   11098:	ldr	r3, [pc, #16]	; 110b0 <putchar_unlocked@plt+0xcc>
   1109c:	cmp	r3, #0
   110a0:	bxeq	lr
   110a4:	bx	r3
   110a8:	andeq	r6, r2, r8, lsr #2
   110ac:	andeq	r6, r2, r8, lsr #2
   110b0:	andeq	r0, r0, r0
   110b4:	push	{r4, lr}
   110b8:	ldr	r4, [pc, #24]	; 110d8 <putchar_unlocked@plt+0xf4>
   110bc:	ldrb	r3, [r4]
   110c0:	cmp	r3, #0
   110c4:	popne	{r4, pc}
   110c8:	bl	11050 <putchar_unlocked@plt+0x6c>
   110cc:	mov	r3, #1
   110d0:	strb	r3, [r4]
   110d4:	pop	{r4, pc}
   110d8:	andeq	r6, r2, r4, asr #2
   110dc:	b	1107c <putchar_unlocked@plt+0x98>
   110e0:	push	{fp, lr}
   110e4:	mov	fp, sp
   110e8:	mov	r4, r0
   110ec:	cmp	r0, #0
   110f0:	bne	1119c <putchar_unlocked@plt+0x1b8>
   110f4:	movw	r1, #18595	; 0x48a3
   110f8:	movt	r1, #1
   110fc:	mov	r0, #0
   11100:	mov	r2, #5
   11104:	bl	10e10 <dcgettext@plt>
   11108:	mov	r1, r0
   1110c:	movw	r0, #24912	; 0x6150
   11110:	movt	r0, #2
   11114:	ldr	r2, [r0]
   11118:	mov	r0, #1
   1111c:	bl	10f3c <__printf_chk@plt>
   11120:	movw	r1, #18625	; 0x48c1
   11124:	movt	r1, #1
   11128:	mov	r0, #0
   1112c:	mov	r2, #5
   11130:	bl	10e10 <dcgettext@plt>
   11134:	mov	r1, r0
   11138:	movw	r2, #18737	; 0x4931
   1113c:	movt	r2, #1
   11140:	movw	r3, #18751	; 0x493f
   11144:	movt	r3, #1
   11148:	mov	r0, #1
   1114c:	bl	10f3c <__printf_chk@plt>
   11150:	movw	r1, #18765	; 0x494d
   11154:	movt	r1, #1
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	bl	10e10 <dcgettext@plt>
   11164:	movw	r5, #24892	; 0x613c
   11168:	movt	r5, #2
   1116c:	ldr	r1, [r5]
   11170:	bl	10da4 <fputs_unlocked@plt>
   11174:	movw	r1, #18810	; 0x497a
   11178:	movt	r1, #1
   1117c:	mov	r0, #0
   11180:	mov	r2, #5
   11184:	bl	10e10 <dcgettext@plt>
   11188:	ldr	r1, [r5]
   1118c:	bl	10da4 <fputs_unlocked@plt>
   11190:	bl	111e0 <putchar_unlocked@plt+0x1fc>
   11194:	mov	r0, r4
   11198:	bl	10ef4 <exit@plt>
   1119c:	movw	r0, #24888	; 0x6138
   111a0:	movt	r0, #2
   111a4:	ldr	r5, [r0]
   111a8:	movw	r1, #18556	; 0x487c
   111ac:	movt	r1, #1
   111b0:	mov	r0, #0
   111b4:	mov	r2, #5
   111b8:	bl	10e10 <dcgettext@plt>
   111bc:	mov	r2, r0
   111c0:	movw	r0, #24912	; 0x6150
   111c4:	movt	r0, #2
   111c8:	ldr	r3, [r0]
   111cc:	mov	r0, r5
   111d0:	mov	r1, #1
   111d4:	bl	10f54 <__fprintf_chk@plt>
   111d8:	mov	r0, r4
   111dc:	bl	10ef4 <exit@plt>
   111e0:	push	{r4, r5, fp, lr}
   111e4:	add	fp, sp, #8
   111e8:	sub	sp, sp, #56	; 0x38
   111ec:	movw	r0, #19272	; 0x4b48
   111f0:	movt	r0, #1
   111f4:	add	r1, r0, #32
   111f8:	mov	r5, sp
   111fc:	mov	r2, #48	; 0x30
   11200:	vld1.64	{d16-d17}, [r1]
   11204:	add	r1, r5, #32
   11208:	add	r3, r0, #16
   1120c:	vld1.64	{d18-d19}, [r0], r2
   11210:	vld1.64	{d20-d21}, [r3]
   11214:	vldr	d22, [r0]
   11218:	vst1.64	{d16-d17}, [r1]
   1121c:	add	r0, r5, #16
   11220:	vst1.64	{d20-d21}, [r0]
   11224:	mov	r0, r5
   11228:	vst1.64	{d18-d19}, [r0], r2
   1122c:	vstr	d22, [r0]
   11230:	ldr	r1, [sp]
   11234:	cmp	r1, #0
   11238:	beq	11260 <putchar_unlocked@plt+0x27c>
   1123c:	mov	r5, sp
   11240:	movw	r4, #18864	; 0x49b0
   11244:	movt	r4, #1
   11248:	mov	r0, r4
   1124c:	bl	10db0 <strcmp@plt>
   11250:	cmp	r0, #0
   11254:	ldrne	r1, [r5, #8]!
   11258:	cmpne	r1, #0
   1125c:	bne	11248 <putchar_unlocked@plt+0x264>
   11260:	ldr	r4, [r5, #4]
   11264:	movw	r1, #19053	; 0x4a6d
   11268:	movt	r1, #1
   1126c:	mov	r0, #0
   11270:	mov	r2, #5
   11274:	bl	10e10 <dcgettext@plt>
   11278:	mov	r1, r0
   1127c:	movw	r2, #18894	; 0x49ce
   11280:	movt	r2, #1
   11284:	movw	r3, #19076	; 0x4a84
   11288:	movt	r3, #1
   1128c:	mov	r0, #1
   11290:	bl	10f3c <__printf_chk@plt>
   11294:	movw	r5, #18864	; 0x49b0
   11298:	movt	r5, #1
   1129c:	cmp	r4, #0
   112a0:	moveq	r4, r5
   112a4:	mov	r0, #5
   112a8:	mov	r1, #0
   112ac:	bl	10f84 <setlocale@plt>
   112b0:	cmp	r0, #0
   112b4:	beq	112f4 <putchar_unlocked@plt+0x310>
   112b8:	movw	r1, #19116	; 0x4aac
   112bc:	movt	r1, #1
   112c0:	mov	r2, #3
   112c4:	bl	10fc0 <strncmp@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	112f4 <putchar_unlocked@plt+0x310>
   112d0:	movw	r1, #19120	; 0x4ab0
   112d4:	movt	r1, #1
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	bl	10e10 <dcgettext@plt>
   112e4:	movw	r1, #24892	; 0x613c
   112e8:	movt	r1, #2
   112ec:	ldr	r1, [r1]
   112f0:	bl	10da4 <fputs_unlocked@plt>
   112f4:	movw	r1, #19191	; 0x4af7
   112f8:	movt	r1, #1
   112fc:	mov	r0, #0
   11300:	mov	r2, #5
   11304:	bl	10e10 <dcgettext@plt>
   11308:	mov	r1, r0
   1130c:	movw	r2, #19076	; 0x4a84
   11310:	movt	r2, #1
   11314:	mov	r0, #1
   11318:	mov	r3, r5
   1131c:	bl	10f3c <__printf_chk@plt>
   11320:	movw	r1, #19218	; 0x4b12
   11324:	movt	r1, #1
   11328:	mov	r0, #0
   1132c:	mov	r2, #5
   11330:	bl	10e10 <dcgettext@plt>
   11334:	mov	r1, r0
   11338:	movw	r0, #18986	; 0x4a2a
   1133c:	movt	r0, #1
   11340:	movw	r3, #18736	; 0x4930
   11344:	movt	r3, #1
   11348:	cmp	r4, r5
   1134c:	moveq	r3, r0
   11350:	mov	r0, #1
   11354:	mov	r2, r4
   11358:	bl	10f3c <__printf_chk@plt>
   1135c:	sub	sp, fp, #8
   11360:	pop	{r4, r5, fp, pc}
   11364:	push	{r4, r5, r6, sl, fp, lr}
   11368:	add	fp, sp, #16
   1136c:	sub	sp, sp, #24
   11370:	mov	r4, r1
   11374:	mov	r5, r0
   11378:	ldr	r0, [r1]
   1137c:	bl	118c0 <putchar_unlocked@plt+0x8dc>
   11380:	movw	r1, #18736	; 0x4930
   11384:	movt	r1, #1
   11388:	mov	r0, #6
   1138c:	bl	10f84 <setlocale@plt>
   11390:	movw	r6, #18898	; 0x49d2
   11394:	movt	r6, #1
   11398:	movw	r1, #18870	; 0x49b6
   1139c:	movt	r1, #1
   113a0:	mov	r0, r6
   113a4:	bl	10fb4 <bindtextdomain@plt>
   113a8:	mov	r0, r6
   113ac:	bl	10e34 <textdomain@plt>
   113b0:	movw	r0, #5692	; 0x163c
   113b4:	movt	r0, #1
   113b8:	bl	14854 <putchar_unlocked@plt+0x3870>
   113bc:	movw	r0, #24800	; 0x60e0
   113c0:	movt	r0, #2
   113c4:	ldr	r0, [r0]
   113c8:	mov	ip, #0
   113cc:	movw	r2, #18925	; 0x49ed
   113d0:	movt	r2, #1
   113d4:	movw	r3, #18908	; 0x49dc
   113d8:	movt	r3, #1
   113dc:	movw	r6, #4320	; 0x10e0
   113e0:	movt	r6, #1
   113e4:	mov	r1, #1
   113e8:	stm	sp, {r0, r1, r6}
   113ec:	str	r3, [sp, #12]
   113f0:	str	r2, [sp, #16]
   113f4:	str	ip, [sp, #20]
   113f8:	movw	r2, #18864	; 0x49b0
   113fc:	movt	r2, #1
   11400:	movw	r3, #18894	; 0x49ce
   11404:	movt	r3, #1
   11408:	mov	r0, r5
   1140c:	mov	r1, r4
   11410:	bl	117f8 <putchar_unlocked@plt+0x814>
   11414:	movw	r6, #24880	; 0x6130
   11418:	movt	r6, #2
   1141c:	ldr	r0, [r6]
   11420:	sub	r1, r5, r0
   11424:	cmp	r1, #1
   11428:	beq	11444 <putchar_unlocked@plt+0x460>
   1142c:	cmp	r1, #0
   11430:	bne	1145c <putchar_unlocked@plt+0x478>
   11434:	movw	r0, #18737	; 0x4931
   11438:	movt	r0, #1
   1143c:	mov	r1, #1
   11440:	b	1144c <putchar_unlocked@plt+0x468>
   11444:	ldr	r0, [r4, r0, lsl #2]
   11448:	mov	r1, #0
   1144c:	bl	114a0 <putchar_unlocked@plt+0x4bc>
   11450:	mov	r0, #0
   11454:	sub	sp, fp, #16
   11458:	pop	{r4, r5, r6, sl, fp, pc}
   1145c:	movw	r1, #18941	; 0x49fd
   11460:	movt	r1, #1
   11464:	mov	r0, #0
   11468:	mov	r2, #5
   1146c:	bl	10e10 <dcgettext@plt>
   11470:	mov	r5, r0
   11474:	ldr	r0, [r6]
   11478:	add	r0, r4, r0, lsl #2
   1147c:	ldr	r0, [r0, #4]
   11480:	bl	130f8 <putchar_unlocked@plt+0x2114>
   11484:	mov	r3, r0
   11488:	mov	r0, #0
   1148c:	mov	r1, #0
   11490:	mov	r2, r5
   11494:	bl	10e94 <error@plt>
   11498:	mov	r0, #1
   1149c:	bl	110e0 <putchar_unlocked@plt+0xfc>
   114a0:	push	{r4, r5, fp, lr}
   114a4:	add	fp, sp, #8
   114a8:	sub	sp, sp, #8
   114ac:	mov	r3, r1
   114b0:	mov	r4, r0
   114b4:	add	r1, sp, #4
   114b8:	mov	r2, sp
   114bc:	bl	13574 <putchar_unlocked@plt+0x2590>
   114c0:	cmp	r0, #0
   114c4:	bne	114e4 <putchar_unlocked@plt+0x500>
   114c8:	ldr	r1, [sp]
   114cc:	ldr	r0, [sp, #4]
   114d0:	bl	11514 <putchar_unlocked@plt+0x530>
   114d4:	ldr	r0, [sp]
   114d8:	bl	11724 <putchar_unlocked@plt+0x740>
   114dc:	sub	sp, fp, #8
   114e0:	pop	{r4, r5, fp, pc}
   114e4:	bl	10f0c <__errno_location@plt>
   114e8:	ldr	r5, [r0]
   114ec:	mov	r0, #0
   114f0:	mov	r1, #3
   114f4:	mov	r2, r4
   114f8:	bl	12fb8 <putchar_unlocked@plt+0x1fd4>
   114fc:	mov	r3, r0
   11500:	movw	r2, #19359	; 0x4b9f
   11504:	movt	r2, #1
   11508:	mov	r0, #1
   1150c:	mov	r1, r5
   11510:	bl	10e94 <error@plt>
   11514:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11518:	add	fp, sp, #24
   1151c:	mov	r6, r1
   11520:	mov	r7, r0
   11524:	mov	r1, #4
   11528:	bl	13c38 <putchar_unlocked@plt+0x2c54>
   1152c:	mov	r4, r0
   11530:	cmp	r7, #0
   11534:	beq	115ec <putchar_unlocked@plt+0x608>
   11538:	mov	r5, #0
   1153c:	ldrb	r0, [r6, #44]	; 0x2c
   11540:	sub	r7, r7, #1
   11544:	cmp	r0, #0
   11548:	beq	11568 <putchar_unlocked@plt+0x584>
   1154c:	ldrh	r0, [r6]
   11550:	cmp	r0, #7
   11554:	bne	11568 <putchar_unlocked@plt+0x584>
   11558:	mov	r0, r6
   1155c:	bl	1350c <putchar_unlocked@plt+0x2528>
   11560:	str	r0, [r4, r5, lsl #2]
   11564:	add	r5, r5, #1
   11568:	add	r6, r6, #384	; 0x180
   1156c:	cmp	r7, #0
   11570:	bne	1153c <putchar_unlocked@plt+0x558>
   11574:	movw	r3, #5648	; 0x1610
   11578:	movt	r3, #1
   1157c:	mov	r0, r4
   11580:	mov	r1, r5
   11584:	mov	r2, #4
   11588:	bl	10fa8 <qsort@plt>
   1158c:	cmp	r5, #0
   11590:	beq	11604 <putchar_unlocked@plt+0x620>
   11594:	sub	r6, r5, #1
   11598:	mov	r7, #0
   1159c:	movw	r8, #24892	; 0x613c
   115a0:	movt	r8, #2
   115a4:	ldr	r0, [r4, r7, lsl #2]
   115a8:	ldr	r1, [r8]
   115ac:	bl	10da4 <fputs_unlocked@plt>
   115b0:	cmp	r7, r6
   115b4:	mov	r0, #10
   115b8:	movwcc	r0, #32
   115bc:	bl	10fe4 <putchar_unlocked@plt>
   115c0:	add	r7, r7, #1
   115c4:	cmp	r5, r7
   115c8:	bne	115a4 <putchar_unlocked@plt+0x5c0>
   115cc:	cmp	r5, #0
   115d0:	beq	11604 <putchar_unlocked@plt+0x620>
   115d4:	mov	r6, r4
   115d8:	ldr	r0, [r6], #4
   115dc:	bl	11724 <putchar_unlocked@plt+0x740>
   115e0:	subs	r5, r5, #1
   115e4:	bne	115d8 <putchar_unlocked@plt+0x5f4>
   115e8:	b	11604 <putchar_unlocked@plt+0x620>
   115ec:	movw	r3, #5648	; 0x1610
   115f0:	movt	r3, #1
   115f4:	mov	r0, r4
   115f8:	mov	r1, #0
   115fc:	mov	r2, #4
   11600:	bl	10fa8 <qsort@plt>
   11604:	mov	r0, r4
   11608:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1160c:	b	11724 <putchar_unlocked@plt+0x740>
   11610:	ldr	r1, [r1]
   11614:	ldr	r0, [r0]
   11618:	b	10db0 <strcmp@plt>
   1161c:	movw	r1, #24904	; 0x6148
   11620:	movt	r1, #2
   11624:	str	r0, [r1]
   11628:	bx	lr
   1162c:	movw	r1, #24908	; 0x614c
   11630:	movt	r1, #2
   11634:	strb	r0, [r1]
   11638:	bx	lr
   1163c:	push	{r4, r5, r6, sl, fp, lr}
   11640:	add	fp, sp, #16
   11644:	sub	sp, sp, #8
   11648:	movw	r0, #24892	; 0x613c
   1164c:	movt	r0, #2
   11650:	ldr	r0, [r0]
   11654:	bl	1438c <putchar_unlocked@plt+0x33a8>
   11658:	cmp	r0, #0
   1165c:	beq	11684 <putchar_unlocked@plt+0x6a0>
   11660:	movw	r0, #24908	; 0x614c
   11664:	movt	r0, #2
   11668:	ldrb	r0, [r0]
   1166c:	cmp	r0, #0
   11670:	beq	116a4 <putchar_unlocked@plt+0x6c0>
   11674:	bl	10f0c <__errno_location@plt>
   11678:	ldr	r0, [r0]
   1167c:	cmp	r0, #32
   11680:	bne	116a4 <putchar_unlocked@plt+0x6c0>
   11684:	movw	r0, #24888	; 0x6138
   11688:	movt	r0, #2
   1168c:	ldr	r0, [r0]
   11690:	bl	1438c <putchar_unlocked@plt+0x33a8>
   11694:	cmp	r0, #0
   11698:	subeq	sp, fp, #16
   1169c:	popeq	{r4, r5, r6, sl, fp, pc}
   116a0:	b	11714 <putchar_unlocked@plt+0x730>
   116a4:	movw	r1, #19343	; 0x4b8f
   116a8:	movt	r1, #1
   116ac:	mov	r0, #0
   116b0:	mov	r2, #5
   116b4:	bl	10e10 <dcgettext@plt>
   116b8:	mov	r4, r0
   116bc:	movw	r0, #24904	; 0x6148
   116c0:	movt	r0, #2
   116c4:	ldr	r6, [r0]
   116c8:	bl	10f0c <__errno_location@plt>
   116cc:	ldr	r5, [r0]
   116d0:	cmp	r6, #0
   116d4:	bne	116f0 <putchar_unlocked@plt+0x70c>
   116d8:	movw	r2, #19359	; 0x4b9f
   116dc:	movt	r2, #1
   116e0:	mov	r0, #0
   116e4:	mov	r1, r5
   116e8:	mov	r3, r4
   116ec:	b	11710 <putchar_unlocked@plt+0x72c>
   116f0:	mov	r0, r6
   116f4:	bl	12fa8 <putchar_unlocked@plt+0x1fc4>
   116f8:	mov	r3, r0
   116fc:	str	r4, [sp]
   11700:	movw	r2, #19355	; 0x4b9b
   11704:	movt	r2, #1
   11708:	mov	r0, #0
   1170c:	mov	r1, r5
   11710:	bl	10e94 <error@plt>
   11714:	movw	r0, #24804	; 0x60e4
   11718:	movt	r0, #2
   1171c:	ldr	r0, [r0]
   11720:	bl	10de0 <_exit@plt>
   11724:	push	{r4, r5, r6, sl, fp, lr}
   11728:	add	fp, sp, #16
   1172c:	mov	r4, r0
   11730:	bl	10f0c <__errno_location@plt>
   11734:	mov	r5, r0
   11738:	ldr	r6, [r0]
   1173c:	mov	r0, r4
   11740:	bl	10dd4 <free@plt>
   11744:	str	r6, [r5]
   11748:	pop	{r4, r5, r6, sl, fp, pc}
   1174c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11750:	add	fp, sp, #24
   11754:	sub	sp, sp, #8
   11758:	movw	r6, #24896	; 0x6140
   1175c:	movt	r6, #2
   11760:	ldr	r7, [r6]
   11764:	mov	r4, #0
   11768:	str	r4, [r6]
   1176c:	cmp	r0, #2
   11770:	bne	117e0 <putchar_unlocked@plt+0x7fc>
   11774:	mov	r8, r3
   11778:	mov	r5, r2
   1177c:	str	r4, [sp]
   11780:	movw	r2, #19362	; 0x4ba2
   11784:	movt	r2, #1
   11788:	movw	r3, #19380	; 0x4bb4
   1178c:	movt	r3, #1
   11790:	bl	10ed0 <getopt_long@plt>
   11794:	cmp	r0, #104	; 0x68
   11798:	beq	117d4 <putchar_unlocked@plt+0x7f0>
   1179c:	cmp	r0, #118	; 0x76
   117a0:	bne	117e0 <putchar_unlocked@plt+0x7fc>
   117a4:	ldr	r3, [fp, #8]
   117a8:	add	r1, fp, #16
   117ac:	str	r1, [sp, #4]
   117b0:	movw	r0, #24892	; 0x613c
   117b4:	movt	r0, #2
   117b8:	ldr	r0, [r0]
   117bc:	str	r1, [sp]
   117c0:	mov	r1, r5
   117c4:	mov	r2, r8
   117c8:	bl	13a48 <putchar_unlocked@plt+0x2a64>
   117cc:	mov	r0, #0
   117d0:	bl	10ef4 <exit@plt>
   117d4:	ldr	r1, [fp, #12]
   117d8:	mov	r0, #0
   117dc:	blx	r1
   117e0:	movw	r0, #24880	; 0x6130
   117e4:	movt	r0, #2
   117e8:	str	r4, [r0]
   117ec:	str	r7, [r6]
   117f0:	sub	sp, fp, #24
   117f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   117f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   117fc:	add	fp, sp, #24
   11800:	sub	sp, sp, #8
   11804:	mov	r8, r3
   11808:	mov	r5, r2
   1180c:	movw	r6, #24896	; 0x6140
   11810:	movt	r6, #2
   11814:	ldr	r7, [r6]
   11818:	mov	r2, #1
   1181c:	str	r2, [r6]
   11820:	mov	r2, #0
   11824:	str	r2, [sp]
   11828:	ldr	r3, [fp, #12]
   1182c:	movw	r4, #18736	; 0x4930
   11830:	movt	r4, #1
   11834:	movw	r2, #19362	; 0x4ba2
   11838:	movt	r2, #1
   1183c:	cmp	r3, #0
   11840:	movne	r2, r4
   11844:	movw	r3, #19380	; 0x4bb4
   11848:	movt	r3, #1
   1184c:	bl	10ed0 <getopt_long@plt>
   11850:	cmn	r0, #1
   11854:	beq	11884 <putchar_unlocked@plt+0x8a0>
   11858:	ldr	r1, [fp, #16]
   1185c:	cmp	r0, #104	; 0x68
   11860:	beq	1187c <putchar_unlocked@plt+0x898>
   11864:	cmp	r0, #118	; 0x76
   11868:	beq	11890 <putchar_unlocked@plt+0x8ac>
   1186c:	movw	r0, #24804	; 0x60e4
   11870:	movt	r0, #2
   11874:	ldr	r0, [r0]
   11878:	b	11880 <putchar_unlocked@plt+0x89c>
   1187c:	mov	r0, #0
   11880:	blx	r1
   11884:	str	r7, [r6]
   11888:	sub	sp, fp, #24
   1188c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11890:	ldr	r3, [fp, #8]
   11894:	add	r1, fp, #20
   11898:	str	r1, [sp, #4]
   1189c:	movw	r0, #24892	; 0x613c
   118a0:	movt	r0, #2
   118a4:	ldr	r0, [r0]
   118a8:	str	r1, [sp]
   118ac:	mov	r1, r5
   118b0:	mov	r2, r8
   118b4:	bl	13a48 <putchar_unlocked@plt+0x2a64>
   118b8:	mov	r0, #0
   118bc:	bl	10ef4 <exit@plt>
   118c0:	push	{r4, r5, fp, lr}
   118c4:	add	fp, sp, #8
   118c8:	cmp	r0, #0
   118cc:	beq	11960 <putchar_unlocked@plt+0x97c>
   118d0:	mov	r4, r0
   118d4:	mov	r1, #47	; 0x2f
   118d8:	bl	10f90 <strrchr@plt>
   118dc:	cmp	r0, #0
   118e0:	mov	r5, r4
   118e4:	addne	r5, r0, #1
   118e8:	sub	r0, r5, r4
   118ec:	cmp	r0, #7
   118f0:	blt	11944 <putchar_unlocked@plt+0x960>
   118f4:	sub	r0, r5, #7
   118f8:	movw	r1, #19484	; 0x4c1c
   118fc:	movt	r1, #1
   11900:	mov	r2, #7
   11904:	bl	10fc0 <strncmp@plt>
   11908:	cmp	r0, #0
   1190c:	bne	11944 <putchar_unlocked@plt+0x960>
   11910:	movw	r1, #19492	; 0x4c24
   11914:	movt	r1, #1
   11918:	mov	r0, r5
   1191c:	mov	r2, #3
   11920:	bl	10fc0 <strncmp@plt>
   11924:	cmp	r0, #0
   11928:	beq	11934 <putchar_unlocked@plt+0x950>
   1192c:	mov	r4, r5
   11930:	b	11944 <putchar_unlocked@plt+0x960>
   11934:	add	r4, r5, #3
   11938:	movw	r0, #24872	; 0x6128
   1193c:	movt	r0, #2
   11940:	str	r4, [r0]
   11944:	movw	r0, #24876	; 0x612c
   11948:	movt	r0, #2
   1194c:	str	r4, [r0]
   11950:	movw	r0, #24912	; 0x6150
   11954:	movt	r0, #2
   11958:	str	r4, [r0]
   1195c:	pop	{r4, r5, fp, pc}
   11960:	movw	r0, #24888	; 0x6138
   11964:	movt	r0, #2
   11968:	ldr	r3, [r0]
   1196c:	movw	r0, #19428	; 0x4be4
   11970:	movt	r0, #1
   11974:	mov	r1, #55	; 0x37
   11978:	mov	r2, #1
   1197c:	bl	10e4c <fwrite@plt>
   11980:	bl	10fcc <abort@plt>
   11984:	push	{r4, r5, r6, sl, fp, lr}
   11988:	add	fp, sp, #16
   1198c:	mov	r4, r0
   11990:	movw	r0, #24920	; 0x6158
   11994:	movt	r0, #2
   11998:	cmp	r4, #0
   1199c:	moveq	r4, r0
   119a0:	bl	10f0c <__errno_location@plt>
   119a4:	mov	r5, r0
   119a8:	ldr	r6, [r0]
   119ac:	mov	r0, r4
   119b0:	mov	r1, #48	; 0x30
   119b4:	bl	13e90 <putchar_unlocked@plt+0x2eac>
   119b8:	str	r6, [r5]
   119bc:	pop	{r4, r5, r6, sl, fp, pc}
   119c0:	movw	r1, #24920	; 0x6158
   119c4:	movt	r1, #2
   119c8:	cmp	r0, #0
   119cc:	movne	r1, r0
   119d0:	ldr	r0, [r1]
   119d4:	bx	lr
   119d8:	movw	r2, #24920	; 0x6158
   119dc:	movt	r2, #2
   119e0:	cmp	r0, #0
   119e4:	movne	r2, r0
   119e8:	str	r1, [r2]
   119ec:	bx	lr
   119f0:	movw	r3, #24920	; 0x6158
   119f4:	movt	r3, #2
   119f8:	cmp	r0, #0
   119fc:	movne	r3, r0
   11a00:	ubfx	r0, r1, #5, #3
   11a04:	add	r0, r3, r0, lsl #2
   11a08:	ldr	r3, [r0, #8]
   11a0c:	and	r1, r1, #31
   11a10:	eor	r2, r2, r3, lsr r1
   11a14:	and	r2, r2, #1
   11a18:	eor	r2, r3, r2, lsl r1
   11a1c:	str	r2, [r0, #8]
   11a20:	mov	r0, #1
   11a24:	and	r0, r0, r3, lsr r1
   11a28:	bx	lr
   11a2c:	movw	r2, #24920	; 0x6158
   11a30:	movt	r2, #2
   11a34:	cmp	r0, #0
   11a38:	movne	r2, r0
   11a3c:	ldr	r0, [r2, #4]
   11a40:	str	r1, [r2, #4]
   11a44:	bx	lr
   11a48:	movw	r3, #24920	; 0x6158
   11a4c:	movt	r3, #2
   11a50:	cmp	r0, #0
   11a54:	movne	r3, r0
   11a58:	mov	r0, #10
   11a5c:	str	r0, [r3]
   11a60:	cmp	r1, #0
   11a64:	cmpne	r2, #0
   11a68:	bne	11a78 <putchar_unlocked@plt+0xa94>
   11a6c:	push	{fp, lr}
   11a70:	mov	fp, sp
   11a74:	bl	10fcc <abort@plt>
   11a78:	str	r1, [r3, #40]	; 0x28
   11a7c:	str	r2, [r3, #44]	; 0x2c
   11a80:	bx	lr
   11a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a88:	add	fp, sp, #28
   11a8c:	sub	sp, sp, #20
   11a90:	mov	r8, r3
   11a94:	mov	r9, r2
   11a98:	mov	sl, r1
   11a9c:	mov	r7, r0
   11aa0:	ldr	r0, [fp, #8]
   11aa4:	movw	r5, #24920	; 0x6158
   11aa8:	movt	r5, #2
   11aac:	cmp	r0, #0
   11ab0:	movne	r5, r0
   11ab4:	bl	10f0c <__errno_location@plt>
   11ab8:	mov	r4, r0
   11abc:	ldm	r5, {r0, r1}
   11ac0:	ldr	r2, [r5, #40]	; 0x28
   11ac4:	ldr	r3, [r5, #44]	; 0x2c
   11ac8:	ldr	r6, [r4]
   11acc:	add	r5, r5, #8
   11ad0:	stm	sp, {r0, r1, r5}
   11ad4:	str	r2, [sp, #12]
   11ad8:	str	r3, [sp, #16]
   11adc:	mov	r0, r7
   11ae0:	mov	r1, sl
   11ae4:	mov	r2, r9
   11ae8:	mov	r3, r8
   11aec:	bl	11afc <putchar_unlocked@plt+0xb18>
   11af0:	str	r6, [r4]
   11af4:	sub	sp, fp, #28
   11af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b00:	add	fp, sp, #28
   11b04:	sub	sp, sp, #156	; 0x9c
   11b08:	mov	r9, r3
   11b0c:	str	r2, [fp, #-84]	; 0xffffffac
   11b10:	mov	r6, r1
   11b14:	mov	r7, r0
   11b18:	ldr	r0, [fp, #12]
   11b1c:	and	r1, r0, #4
   11b20:	str	r1, [sp, #32]
   11b24:	and	r1, r0, #1
   11b28:	str	r1, [sp, #36]	; 0x24
   11b2c:	ubfx	sl, r0, #1, #1
   11b30:	bl	10e64 <__ctype_get_mb_cur_max@plt>
   11b34:	str	r0, [sp, #40]	; 0x28
   11b38:	ldr	r0, [fp, #24]
   11b3c:	str	r0, [sp, #76]	; 0x4c
   11b40:	ldr	r0, [fp, #20]
   11b44:	str	r0, [sp, #68]	; 0x44
   11b48:	ldr	r0, [fp, #8]
   11b4c:	str	r0, [fp, #-60]	; 0xffffffc4
   11b50:	mov	r0, #0
   11b54:	str	r0, [sp, #72]	; 0x48
   11b58:	mov	r0, #0
   11b5c:	str	r0, [sp, #92]	; 0x5c
   11b60:	mov	r0, #0
   11b64:	str	r0, [fp, #-72]	; 0xffffffb8
   11b68:	mov	r0, #0
   11b6c:	mov	r1, #0
   11b70:	str	r1, [fp, #-56]	; 0xffffffc8
   11b74:	mov	r1, #0
   11b78:	str	r1, [sp, #56]	; 0x38
   11b7c:	mov	r5, #1
   11b80:	str	r7, [sp, #80]	; 0x50
   11b84:	mov	r4, r6
   11b88:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11b8c:	cmp	r6, #10
   11b90:	bhi	12af8 <putchar_unlocked@plt+0x1b14>
   11b94:	add	r1, pc, #20
   11b98:	mov	r8, #0
   11b9c:	mov	r2, #1
   11ba0:	mov	r3, #0
   11ba4:	ldr	ip, [fp, #-84]	; 0xffffffac
   11ba8:	mov	lr, r9
   11bac:	ldr	pc, [r1, r6, lsl #2]
   11bb0:	andeq	r1, r1, r8, lsl #25
   11bb4:			; <UNDEFINED> instruction: 0x00011cb8
   11bb8:	andeq	r1, r1, r8, ror ip
   11bbc:	andeq	r1, r1, r0, ror ip
   11bc0:	andeq	r1, r1, ip, lsr #25
   11bc4:	andeq	r1, r1, ip, lsl #26
   11bc8:	muleq	r1, r8, ip
   11bcc:	andeq	r1, r1, r8, ror #26
   11bd0:	ldrdeq	r1, [r1], -ip
   11bd4:	ldrdeq	r1, [r1], -ip
   11bd8:	andeq	r1, r1, r4, lsl #24
   11bdc:	movw	r0, #19576	; 0x4c78
   11be0:	movt	r0, #1
   11be4:	mov	r1, r6
   11be8:	bl	13104 <putchar_unlocked@plt+0x2120>
   11bec:	str	r0, [sp, #68]	; 0x44
   11bf0:	movw	r0, #19578	; 0x4c7a
   11bf4:	movt	r0, #1
   11bf8:	mov	r1, r6
   11bfc:	bl	13104 <putchar_unlocked@plt+0x2120>
   11c00:	str	r0, [sp, #76]	; 0x4c
   11c04:	mov	r8, #0
   11c08:	tst	sl, #1
   11c0c:	bne	11c44 <putchar_unlocked@plt+0xc60>
   11c10:	ldr	r0, [sp, #68]	; 0x44
   11c14:	ldrb	r0, [r0]
   11c18:	cmp	r0, #0
   11c1c:	beq	11c44 <putchar_unlocked@plt+0xc60>
   11c20:	ldr	r1, [sp, #68]	; 0x44
   11c24:	add	r1, r1, #1
   11c28:	mov	r8, #0
   11c2c:	cmp	r8, r4
   11c30:	strbcc	r0, [r7, r8]
   11c34:	ldrb	r0, [r1, r8]
   11c38:	add	r8, r8, #1
   11c3c:	cmp	r0, #0
   11c40:	bne	11c2c <putchar_unlocked@plt+0xc48>
   11c44:	ldr	r6, [sp, #76]	; 0x4c
   11c48:	mov	r0, r6
   11c4c:	bl	10f00 <strlen@plt>
   11c50:	str	r0, [fp, #-72]	; 0xffffffb8
   11c54:	str	r6, [sp, #92]	; 0x5c
   11c58:	mov	r2, #1
   11c5c:	mov	r3, sl
   11c60:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c64:	mov	lr, r9
   11c68:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11c6c:	b	11d68 <putchar_unlocked@plt+0xd84>
   11c70:	mov	r0, #1
   11c74:	b	11cb8 <putchar_unlocked@plt+0xcd4>
   11c78:	tst	sl, #1
   11c7c:	bne	11cb8 <putchar_unlocked@plt+0xcd4>
   11c80:	mov	r2, r0
   11c84:	b	11ce0 <putchar_unlocked@plt+0xcfc>
   11c88:	mov	r6, #0
   11c8c:	mov	r8, #0
   11c90:	mov	r2, r0
   11c94:	b	11d64 <putchar_unlocked@plt+0xd80>
   11c98:	mov	r0, #1
   11c9c:	str	r0, [fp, #-72]	; 0xffffffb8
   11ca0:	mov	r8, #0
   11ca4:	mov	r6, #5
   11ca8:	b	11d24 <putchar_unlocked@plt+0xd40>
   11cac:	mov	r2, #1
   11cb0:	tst	sl, #1
   11cb4:	beq	11ce0 <putchar_unlocked@plt+0xcfc>
   11cb8:	mov	r1, #1
   11cbc:	str	r1, [fp, #-72]	; 0xffffffb8
   11cc0:	mov	r8, #0
   11cc4:	mov	r6, #2
   11cc8:	movw	r1, #19578	; 0x4c7a
   11ccc:	movt	r1, #1
   11cd0:	str	r1, [sp, #92]	; 0x5c
   11cd4:	mov	r2, r0
   11cd8:	mov	r3, #1
   11cdc:	b	11d68 <putchar_unlocked@plt+0xd84>
   11ce0:	mov	r8, #1
   11ce4:	mov	r6, #2
   11ce8:	cmp	r4, #0
   11cec:	movne	r0, #39	; 0x27
   11cf0:	strbne	r0, [r7]
   11cf4:	movw	r0, #19578	; 0x4c7a
   11cf8:	movt	r0, #1
   11cfc:	str	r0, [sp, #92]	; 0x5c
   11d00:	mov	r0, #1
   11d04:	str	r0, [fp, #-72]	; 0xffffffb8
   11d08:	b	11d64 <putchar_unlocked@plt+0xd80>
   11d0c:	mov	r6, #5
   11d10:	tst	sl, #1
   11d14:	beq	11d3c <putchar_unlocked@plt+0xd58>
   11d18:	mov	r0, #1
   11d1c:	str	r0, [fp, #-72]	; 0xffffffb8
   11d20:	mov	r8, #0
   11d24:	movw	r0, #19574	; 0x4c76
   11d28:	movt	r0, #1
   11d2c:	str	r0, [sp, #92]	; 0x5c
   11d30:	mov	r2, #1
   11d34:	mov	r3, #1
   11d38:	b	11d68 <putchar_unlocked@plt+0xd84>
   11d3c:	cmp	r4, #0
   11d40:	movne	r0, #34	; 0x22
   11d44:	strbne	r0, [r7]
   11d48:	mov	r8, #1
   11d4c:	movw	r0, #19574	; 0x4c76
   11d50:	movt	r0, #1
   11d54:	str	r0, [sp, #92]	; 0x5c
   11d58:	mov	r0, #1
   11d5c:	str	r0, [fp, #-72]	; 0xffffffb8
   11d60:	mov	r2, #1
   11d64:	mov	r3, #0
   11d68:	ldr	r0, [fp, #16]
   11d6c:	cmp	r0, #0
   11d70:	movwne	r0, #1
   11d74:	and	r0, r0, r3
   11d78:	str	r0, [fp, #-88]	; 0xffffffa8
   11d7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11d80:	cmp	r0, #0
   11d84:	movwne	r0, #1
   11d88:	and	r1, r0, r3
   11d8c:	and	r1, r2, r1
   11d90:	str	r1, [sp, #48]	; 0x30
   11d94:	str	r6, [fp, #-60]	; 0xffffffc4
   11d98:	subs	r6, r6, #2
   11d9c:	clz	r1, r6
   11da0:	lsr	r1, r1, #5
   11da4:	and	r1, r1, r3
   11da8:	str	r1, [sp, #60]	; 0x3c
   11dac:	str	r6, [fp, #-80]	; 0xffffffb0
   11db0:	mov	r1, r6
   11db4:	movwne	r1, #1
   11db8:	str	r3, [fp, #-76]	; 0xffffffb4
   11dbc:	eor	r3, r3, #1
   11dc0:	str	r3, [sp, #88]	; 0x58
   11dc4:	orr	r3, r1, r3
   11dc8:	str	r3, [sp, #64]	; 0x40
   11dcc:	and	r1, r1, r2
   11dd0:	str	r1, [fp, #-68]	; 0xffffffbc
   11dd4:	and	r0, r0, r1
   11dd8:	str	r0, [fp, #-64]	; 0xffffffc0
   11ddc:	str	r2, [sp, #84]	; 0x54
   11de0:	eor	r0, r2, #1
   11de4:	str	r0, [sp, #52]	; 0x34
   11de8:	mov	r6, #0
   11dec:	cmn	lr, #1
   11df0:	beq	11e00 <putchar_unlocked@plt+0xe1c>
   11df4:	cmp	r6, lr
   11df8:	bne	11e0c <putchar_unlocked@plt+0xe28>
   11dfc:	b	12978 <putchar_unlocked@plt+0x1994>
   11e00:	ldrb	r0, [ip, r6]
   11e04:	cmp	r0, #0
   11e08:	beq	12978 <putchar_unlocked@plt+0x1994>
   11e0c:	str	r5, [fp, #-48]	; 0xffffffd0
   11e10:	mov	sl, #0
   11e14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11e18:	cmp	r0, #0
   11e1c:	beq	11e50 <putchar_unlocked@plt+0xe6c>
   11e20:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11e24:	add	r5, r6, r0
   11e28:	cmp	r0, #2
   11e2c:	bcc	11e48 <putchar_unlocked@plt+0xe64>
   11e30:	cmn	lr, #1
   11e34:	bne	11e48 <putchar_unlocked@plt+0xe64>
   11e38:	mov	r0, ip
   11e3c:	bl	10f00 <strlen@plt>
   11e40:	ldr	ip, [fp, #-84]	; 0xffffffac
   11e44:	mov	lr, r0
   11e48:	cmp	r5, lr
   11e4c:	bls	11e5c <putchar_unlocked@plt+0xe78>
   11e50:	mov	r0, #0
   11e54:	str	r0, [fp, #-52]	; 0xffffffcc
   11e58:	b	11ea8 <putchar_unlocked@plt+0xec4>
   11e5c:	mov	r5, r4
   11e60:	mov	r4, lr
   11e64:	add	r0, ip, r6
   11e68:	ldr	r1, [sp, #92]	; 0x5c
   11e6c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11e70:	bl	10e04 <memcmp@plt>
   11e74:	cmp	r0, #0
   11e78:	mov	r1, r0
   11e7c:	movwne	r1, #1
   11e80:	ldr	r2, [sp, #88]	; 0x58
   11e84:	orr	r1, r1, r2
   11e88:	tst	r1, #1
   11e8c:	beq	12a3c <putchar_unlocked@plt+0x1a58>
   11e90:	clz	r0, r0
   11e94:	lsr	r0, r0, #5
   11e98:	str	r0, [fp, #-52]	; 0xffffffcc
   11e9c:	ldr	ip, [fp, #-84]	; 0xffffffac
   11ea0:	mov	lr, r4
   11ea4:	mov	r4, r5
   11ea8:	ldrb	r5, [ip, r6]
   11eac:	cmp	r5, #126	; 0x7e
   11eb0:	bhi	1226c <putchar_unlocked@plt+0x1288>
   11eb4:	mov	r9, #1
   11eb8:	mov	r2, #110	; 0x6e
   11ebc:	mov	r0, #97	; 0x61
   11ec0:	add	r3, pc, #4
   11ec4:	mov	r1, #0
   11ec8:	ldr	pc, [r3, r5, lsl #2]
   11ecc:	andeq	r2, r1, r4, ror #2
   11ed0:	andeq	r2, r1, ip, ror #4
   11ed4:	andeq	r2, r1, ip, ror #4
   11ed8:	andeq	r2, r1, ip, ror #4
   11edc:	andeq	r2, r1, ip, ror #4
   11ee0:	andeq	r2, r1, ip, ror #4
   11ee4:	andeq	r2, r1, ip, ror #4
   11ee8:	andeq	r2, r1, r0, lsr r3
   11eec:	andeq	r2, r1, r4, asr #2
   11ef0:	andeq	r2, r1, ip, lsr r1
   11ef4:	andeq	r2, r1, r0, asr r1
   11ef8:	ldrdeq	r2, [r1], -r4
   11efc:	andeq	r2, r1, r4, lsr r1
   11f00:	andeq	r2, r1, ip, asr #2
   11f04:	andeq	r2, r1, ip, ror #4
   11f08:	andeq	r2, r1, ip, ror #4
   11f0c:	andeq	r2, r1, ip, ror #4
   11f10:	andeq	r2, r1, ip, ror #4
   11f14:	andeq	r2, r1, ip, ror #4
   11f18:	andeq	r2, r1, ip, ror #4
   11f1c:	andeq	r2, r1, ip, ror #4
   11f20:	andeq	r2, r1, ip, ror #4
   11f24:	andeq	r2, r1, ip, ror #4
   11f28:	andeq	r2, r1, ip, ror #4
   11f2c:	andeq	r2, r1, ip, ror #4
   11f30:	andeq	r2, r1, ip, ror #4
   11f34:	andeq	r2, r1, ip, ror #4
   11f38:	andeq	r2, r1, ip, ror #4
   11f3c:	andeq	r2, r1, ip, ror #4
   11f40:	andeq	r2, r1, ip, ror #4
   11f44:	andeq	r2, r1, ip, ror #4
   11f48:	andeq	r2, r1, ip, ror #4
   11f4c:	andeq	r2, r1, r0, ror #5
   11f50:	andeq	r2, r1, r4, ror #5
   11f54:	andeq	r2, r1, r4, ror #5
   11f58:	ldrdeq	r2, [r1], -ip
   11f5c:	andeq	r2, r1, r4, ror #5
   11f60:	andeq	r2, r1, r8, asr #1
   11f64:	andeq	r2, r1, r4, ror #5
   11f68:	ldrdeq	r2, [r1], -ip
   11f6c:	andeq	r2, r1, r4, ror #5
   11f70:	andeq	r2, r1, r4, ror #5
   11f74:	andeq	r2, r1, r4, ror #5
   11f78:	andeq	r2, r1, r8, asr #1
   11f7c:	andeq	r2, r1, r8, asr #1
   11f80:	andeq	r2, r1, r8, asr #1
   11f84:	andeq	r2, r1, r8, asr #1
   11f88:	andeq	r2, r1, r8, asr #1
   11f8c:	andeq	r2, r1, r8, asr #1
   11f90:	andeq	r2, r1, r8, asr #1
   11f94:	andeq	r2, r1, r8, asr #1
   11f98:	andeq	r2, r1, r8, asr #1
   11f9c:	andeq	r2, r1, r8, asr #1
   11fa0:	andeq	r2, r1, r8, asr #1
   11fa4:	andeq	r2, r1, r8, asr #1
   11fa8:	andeq	r2, r1, r8, asr #1
   11fac:	andeq	r2, r1, r8, asr #1
   11fb0:	andeq	r2, r1, r8, asr #1
   11fb4:	andeq	r2, r1, r8, asr #1
   11fb8:	andeq	r2, r1, r4, ror #5
   11fbc:	andeq	r2, r1, r4, ror #5
   11fc0:	andeq	r2, r1, r4, ror #5
   11fc4:	andeq	r2, r1, r4, ror #5
   11fc8:	andeq	r2, r1, r4, lsr #3
   11fcc:	andeq	r2, r1, ip, ror #4
   11fd0:	andeq	r2, r1, r8, asr #1
   11fd4:	andeq	r2, r1, r8, asr #1
   11fd8:	andeq	r2, r1, r8, asr #1
   11fdc:	andeq	r2, r1, r8, asr #1
   11fe0:	andeq	r2, r1, r8, asr #1
   11fe4:	andeq	r2, r1, r8, asr #1
   11fe8:	andeq	r2, r1, r8, asr #1
   11fec:	andeq	r2, r1, r8, asr #1
   11ff0:	andeq	r2, r1, r8, asr #1
   11ff4:	andeq	r2, r1, r8, asr #1
   11ff8:	andeq	r2, r1, r8, asr #1
   11ffc:	andeq	r2, r1, r8, asr #1
   12000:	andeq	r2, r1, r8, asr #1
   12004:	andeq	r2, r1, r8, asr #1
   12008:	andeq	r2, r1, r8, asr #1
   1200c:	andeq	r2, r1, r8, asr #1
   12010:	andeq	r2, r1, r8, asr #1
   12014:	andeq	r2, r1, r8, asr #1
   12018:	andeq	r2, r1, r8, asr #1
   1201c:	andeq	r2, r1, r8, asr #1
   12020:	andeq	r2, r1, r8, asr #1
   12024:	andeq	r2, r1, r8, asr #1
   12028:	andeq	r2, r1, r8, asr #1
   1202c:	andeq	r2, r1, r8, asr #1
   12030:	andeq	r2, r1, r8, asr #1
   12034:	andeq	r2, r1, r8, asr #1
   12038:	andeq	r2, r1, r4, ror #5
   1203c:	andeq	r2, r1, r0, lsl r1
   12040:	andeq	r2, r1, r8, asr #1
   12044:	andeq	r2, r1, r4, ror #5
   12048:	andeq	r2, r1, r8, asr #1
   1204c:	andeq	r2, r1, r4, ror #5
   12050:	andeq	r2, r1, r8, asr #1
   12054:	andeq	r2, r1, r8, asr #1
   12058:	andeq	r2, r1, r8, asr #1
   1205c:	andeq	r2, r1, r8, asr #1
   12060:	andeq	r2, r1, r8, asr #1
   12064:	andeq	r2, r1, r8, asr #1
   12068:	andeq	r2, r1, r8, asr #1
   1206c:	andeq	r2, r1, r8, asr #1
   12070:	andeq	r2, r1, r8, asr #1
   12074:	andeq	r2, r1, r8, asr #1
   12078:	andeq	r2, r1, r8, asr #1
   1207c:	andeq	r2, r1, r8, asr #1
   12080:	andeq	r2, r1, r8, asr #1
   12084:	andeq	r2, r1, r8, asr #1
   12088:	andeq	r2, r1, r8, asr #1
   1208c:	andeq	r2, r1, r8, asr #1
   12090:	andeq	r2, r1, r8, asr #1
   12094:	andeq	r2, r1, r8, asr #1
   12098:	andeq	r2, r1, r8, asr #1
   1209c:	andeq	r2, r1, r8, asr #1
   120a0:	andeq	r2, r1, r8, asr #1
   120a4:	andeq	r2, r1, r8, asr #1
   120a8:	andeq	r2, r1, r8, asr #1
   120ac:	andeq	r2, r1, r8, asr #1
   120b0:	andeq	r2, r1, r8, asr #1
   120b4:	andeq	r2, r1, r8, asr #1
   120b8:	strdeq	r2, [r1], -r0
   120bc:	andeq	r2, r1, r4, ror #5
   120c0:	strdeq	r2, [r1], -r0
   120c4:	ldrdeq	r2, [r1], -ip
   120c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   120cc:	cmp	r0, #0
   120d0:	beq	12344 <putchar_unlocked@plt+0x1360>
   120d4:	ldr	r0, [fp, #16]
   120d8:	b	12348 <putchar_unlocked@plt+0x1364>
   120dc:	mov	r9, #0
   120e0:	cmp	r6, #0
   120e4:	beq	122e0 <putchar_unlocked@plt+0x12fc>
   120e8:	mov	sl, #0
   120ec:	b	120c8 <putchar_unlocked@plt+0x10e4>
   120f0:	mov	r9, #0
   120f4:	cmn	lr, #1
   120f8:	beq	122c4 <putchar_unlocked@plt+0x12e0>
   120fc:	cmp	r6, #0
   12100:	bne	120e8 <putchar_unlocked@plt+0x1104>
   12104:	cmp	lr, #1
   12108:	beq	122e0 <putchar_unlocked@plt+0x12fc>
   1210c:	b	120e8 <putchar_unlocked@plt+0x1104>
   12110:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12114:	cmp	r0, #2
   12118:	bne	1230c <putchar_unlocked@plt+0x1328>
   1211c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12120:	tst	r0, #1
   12124:	bne	12a54 <putchar_unlocked@plt+0x1a70>
   12128:	mov	sl, #0
   1212c:	mov	r0, #92	; 0x5c
   12130:	b	12320 <putchar_unlocked@plt+0x133c>
   12134:	mov	r0, #102	; 0x66
   12138:	b	12330 <putchar_unlocked@plt+0x134c>
   1213c:	mov	r2, #116	; 0x74
   12140:	b	12150 <putchar_unlocked@plt+0x116c>
   12144:	mov	r0, #98	; 0x62
   12148:	b	12330 <putchar_unlocked@plt+0x134c>
   1214c:	mov	r2, #114	; 0x72
   12150:	ldr	r0, [sp, #64]	; 0x40
   12154:	tst	r0, #1
   12158:	mov	r0, r2
   1215c:	bne	12330 <putchar_unlocked@plt+0x134c>
   12160:	b	12a54 <putchar_unlocked@plt+0x1a70>
   12164:	ldr	r0, [sp, #84]	; 0x54
   12168:	tst	r0, #1
   1216c:	beq	12420 <putchar_unlocked@plt+0x143c>
   12170:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12174:	tst	r0, #1
   12178:	bne	12a54 <putchar_unlocked@plt+0x1a70>
   1217c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12180:	cmp	r0, #2
   12184:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12188:	movwne	r0, #1
   1218c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12190:	orr	r0, r0, r2
   12194:	tst	r0, #1
   12198:	beq	12814 <putchar_unlocked@plt+0x1830>
   1219c:	mov	r0, r8
   121a0:	b	12848 <putchar_unlocked@plt+0x1864>
   121a4:	mov	sl, #0
   121a8:	mov	r5, #63	; 0x3f
   121ac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   121b0:	cmp	r0, #5
   121b4:	beq	125d4 <putchar_unlocked@plt+0x15f0>
   121b8:	cmp	r0, #2
   121bc:	bne	12674 <putchar_unlocked@plt+0x1690>
   121c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121c4:	tst	r0, #1
   121c8:	mov	r9, #0
   121cc:	beq	120c8 <putchar_unlocked@plt+0x10e4>
   121d0:	b	12a54 <putchar_unlocked@plt+0x1a70>
   121d4:	mov	r0, #118	; 0x76
   121d8:	b	12330 <putchar_unlocked@plt+0x134c>
   121dc:	mov	r5, #39	; 0x27
   121e0:	mov	r0, #1
   121e4:	str	r0, [sp, #56]	; 0x38
   121e8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   121ec:	cmp	r0, #2
   121f0:	bne	12440 <putchar_unlocked@plt+0x145c>
   121f4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   121f8:	tst	r0, #1
   121fc:	bne	12a54 <putchar_unlocked@plt+0x1a70>
   12200:	ldr	r2, [sp, #72]	; 0x48
   12204:	cmp	r2, #0
   12208:	mov	r0, r2
   1220c:	movwne	r0, #1
   12210:	clz	r1, r4
   12214:	lsr	r1, r1, #5
   12218:	orrs	r0, r0, r1
   1221c:	moveq	r2, r4
   12220:	str	r2, [sp, #72]	; 0x48
   12224:	moveq	r4, r0
   12228:	cmp	r8, r4
   1222c:	movcc	r0, #39	; 0x27
   12230:	strbcc	r0, [r7, r8]
   12234:	add	r0, r8, #1
   12238:	cmp	r0, r4
   1223c:	movcc	r1, #92	; 0x5c
   12240:	strbcc	r1, [r7, r0]
   12244:	add	r0, r8, #2
   12248:	cmp	r0, r4
   1224c:	movcc	r1, #39	; 0x27
   12250:	strbcc	r1, [r7, r0]
   12254:	add	r8, r8, #3
   12258:	mov	r0, #0
   1225c:	str	r0, [fp, #-56]	; 0xffffffc8
   12260:	mov	sl, #0
   12264:	mov	r9, #1
   12268:	b	120c8 <putchar_unlocked@plt+0x10e4>
   1226c:	str	r4, [sp, #24]
   12270:	ldr	r0, [sp, #40]	; 0x28
   12274:	cmp	r0, #1
   12278:	bne	12448 <putchar_unlocked@plt+0x1464>
   1227c:	str	lr, [sp, #28]
   12280:	bl	10ee8 <__ctype_b_loc@plt>
   12284:	ldr	ip, [fp, #-84]	; 0xffffffac
   12288:	ldr	r0, [r0]
   1228c:	add	r0, r0, r5, lsl #1
   12290:	ldrb	r0, [r0, #1]
   12294:	ubfx	r9, r0, #6, #1
   12298:	mov	r1, #1
   1229c:	ldr	r4, [sp, #24]
   122a0:	ldr	r0, [sp, #52]	; 0x34
   122a4:	orr	r0, r9, r0
   122a8:	mov	r2, r1
   122ac:	cmp	r1, #1
   122b0:	bhi	1267c <putchar_unlocked@plt+0x1698>
   122b4:	tst	r0, #1
   122b8:	beq	1267c <putchar_unlocked@plt+0x1698>
   122bc:	ldr	lr, [sp, #28]
   122c0:	b	120c8 <putchar_unlocked@plt+0x10e4>
   122c4:	cmp	r6, #0
   122c8:	ldrbeq	r0, [ip, #1]
   122cc:	cmpeq	r0, #0
   122d0:	beq	122e0 <putchar_unlocked@plt+0x12fc>
   122d4:	mvn	lr, #0
   122d8:	mov	sl, #0
   122dc:	b	120c8 <putchar_unlocked@plt+0x10e4>
   122e0:	mov	r1, #1
   122e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   122e8:	cmp	r0, #2
   122ec:	bne	12304 <putchar_unlocked@plt+0x1320>
   122f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   122f4:	tst	r0, #1
   122f8:	mov	r9, r1
   122fc:	beq	120c8 <putchar_unlocked@plt+0x10e4>
   12300:	b	12a54 <putchar_unlocked@plt+0x1a70>
   12304:	mov	r9, r1
   12308:	b	120c8 <putchar_unlocked@plt+0x10e4>
   1230c:	mov	sl, #0
   12310:	mov	r0, #92	; 0x5c
   12314:	ldr	r1, [sp, #48]	; 0x30
   12318:	cmp	r1, #0
   1231c:	beq	12330 <putchar_unlocked@plt+0x134c>
   12320:	mov	r9, #0
   12324:	cmp	sl, #0
   12328:	beq	128e0 <putchar_unlocked@plt+0x18fc>
   1232c:	b	1291c <putchar_unlocked@plt+0x1938>
   12330:	mov	r9, #0
   12334:	ldr	r1, [sp, #84]	; 0x54
   12338:	tst	r1, #1
   1233c:	mov	sl, #0
   12340:	bne	12380 <putchar_unlocked@plt+0x139c>
   12344:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12348:	cmp	r0, #0
   1234c:	mov	r0, r5
   12350:	beq	12374 <putchar_unlocked@plt+0x1390>
   12354:	ubfx	r0, r5, #5, #3
   12358:	ldr	r1, [fp, #16]
   1235c:	ldr	r0, [r1, r0, lsl #2]
   12360:	and	r1, r5, #31
   12364:	mov	r2, #1
   12368:	tst	r0, r2, lsl r1
   1236c:	mov	r0, r5
   12370:	bne	12380 <putchar_unlocked@plt+0x139c>
   12374:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12378:	cmp	r1, #0
   1237c:	beq	128d8 <putchar_unlocked@plt+0x18f4>
   12380:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12384:	tst	r1, #1
   12388:	bne	12a54 <putchar_unlocked@plt+0x1a70>
   1238c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12390:	cmp	r1, #2
   12394:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12398:	movwne	r1, #1
   1239c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   123a0:	orr	r1, r1, r2
   123a4:	tst	r1, #1
   123a8:	beq	123b4 <putchar_unlocked@plt+0x13d0>
   123ac:	ldr	r5, [fp, #-48]	; 0xffffffd0
   123b0:	b	123f0 <putchar_unlocked@plt+0x140c>
   123b4:	cmp	r8, r4
   123b8:	movcc	r1, #39	; 0x27
   123bc:	strbcc	r1, [r7, r8]
   123c0:	add	r1, r8, #1
   123c4:	cmp	r1, r4
   123c8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   123cc:	movcc	r2, #36	; 0x24
   123d0:	strbcc	r2, [r7, r1]
   123d4:	add	r1, r8, #2
   123d8:	cmp	r1, r4
   123dc:	movcc	r2, #39	; 0x27
   123e0:	strbcc	r2, [r7, r1]
   123e4:	add	r8, r8, #3
   123e8:	mov	r1, #1
   123ec:	str	r1, [fp, #-56]	; 0xffffffc8
   123f0:	cmp	r8, r4
   123f4:	movcc	r1, #92	; 0x5c
   123f8:	strbcc	r1, [r7, r8]
   123fc:	add	r8, r8, #1
   12400:	cmp	r8, r4
   12404:	strbcc	r0, [r7, r8]
   12408:	and	r5, r5, r9
   1240c:	add	r8, r8, #1
   12410:	add	r6, r6, #1
   12414:	cmn	lr, #1
   12418:	bne	11df4 <putchar_unlocked@plt+0xe10>
   1241c:	b	11e00 <putchar_unlocked@plt+0xe1c>
   12420:	mov	r9, #0
   12424:	ldr	r0, [sp, #36]	; 0x24
   12428:	cmp	r0, #0
   1242c:	mov	sl, #0
   12430:	mov	r5, #0
   12434:	beq	12344 <putchar_unlocked@plt+0x1360>
   12438:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1243c:	b	12410 <putchar_unlocked@plt+0x142c>
   12440:	mov	r9, #1
   12444:	b	120c8 <putchar_unlocked@plt+0x10e4>
   12448:	mov	r0, #0
   1244c:	str	r0, [fp, #-36]	; 0xffffffdc
   12450:	str	r0, [fp, #-40]	; 0xffffffd8
   12454:	cmn	lr, #1
   12458:	bne	1246c <putchar_unlocked@plt+0x1488>
   1245c:	mov	r0, ip
   12460:	bl	10f00 <strlen@plt>
   12464:	ldr	ip, [fp, #-84]	; 0xffffffac
   12468:	mov	lr, r0
   1246c:	add	r0, ip, r6
   12470:	str	r0, [sp, #20]
   12474:	mov	r9, #1
   12478:	mov	r7, #0
   1247c:	sub	r4, fp, #40	; 0x28
   12480:	str	lr, [sp, #28]
   12484:	str	r7, [sp, #44]	; 0x2c
   12488:	add	r7, r7, r6
   1248c:	add	r1, ip, r7
   12490:	sub	r2, lr, r7
   12494:	sub	r0, fp, #44	; 0x2c
   12498:	mov	r3, r4
   1249c:	bl	14648 <putchar_unlocked@plt+0x3664>
   124a0:	cmp	r0, #0
   124a4:	beq	12964 <putchar_unlocked@plt+0x1980>
   124a8:	cmn	r0, #1
   124ac:	beq	12924 <putchar_unlocked@plt+0x1940>
   124b0:	cmn	r0, #2
   124b4:	ldr	lr, [sp, #28]
   124b8:	beq	1292c <putchar_unlocked@plt+0x1948>
   124bc:	cmp	r0, #2
   124c0:	mov	r1, #0
   124c4:	movwcc	r1, #1
   124c8:	ldr	r2, [sp, #60]	; 0x3c
   124cc:	eor	r2, r2, #1
   124d0:	orrs	r1, r2, r1
   124d4:	ldr	r4, [sp, #24]
   124d8:	bne	12598 <putchar_unlocked@plt+0x15b4>
   124dc:	ldr	r1, [sp, #44]	; 0x2c
   124e0:	ldr	r2, [sp, #20]
   124e4:	add	r1, r2, r1
   124e8:	mov	r2, #1
   124ec:	ldrb	r3, [r1, r2]
   124f0:	sub	r3, r3, #91	; 0x5b
   124f4:	cmp	r3, #33	; 0x21
   124f8:	bhi	1258c <putchar_unlocked@plt+0x15a8>
   124fc:	add	r7, pc, #0
   12500:	ldr	pc, [r7, r3, lsl #2]
   12504:	andeq	r2, r1, ip, asr #20
   12508:	andeq	r2, r1, ip, asr #20
   1250c:	andeq	r2, r1, ip, lsl #11
   12510:	andeq	r2, r1, ip, asr #20
   12514:	andeq	r2, r1, ip, lsl #11
   12518:	andeq	r2, r1, ip, asr #20
   1251c:	andeq	r2, r1, ip, lsl #11
   12520:	andeq	r2, r1, ip, lsl #11
   12524:	andeq	r2, r1, ip, lsl #11
   12528:	andeq	r2, r1, ip, lsl #11
   1252c:	andeq	r2, r1, ip, lsl #11
   12530:	andeq	r2, r1, ip, lsl #11
   12534:	andeq	r2, r1, ip, lsl #11
   12538:	andeq	r2, r1, ip, lsl #11
   1253c:	andeq	r2, r1, ip, lsl #11
   12540:	andeq	r2, r1, ip, lsl #11
   12544:	andeq	r2, r1, ip, lsl #11
   12548:	andeq	r2, r1, ip, lsl #11
   1254c:	andeq	r2, r1, ip, lsl #11
   12550:	andeq	r2, r1, ip, lsl #11
   12554:	andeq	r2, r1, ip, lsl #11
   12558:	andeq	r2, r1, ip, lsl #11
   1255c:	andeq	r2, r1, ip, lsl #11
   12560:	andeq	r2, r1, ip, lsl #11
   12564:	andeq	r2, r1, ip, lsl #11
   12568:	andeq	r2, r1, ip, lsl #11
   1256c:	andeq	r2, r1, ip, lsl #11
   12570:	andeq	r2, r1, ip, lsl #11
   12574:	andeq	r2, r1, ip, lsl #11
   12578:	andeq	r2, r1, ip, lsl #11
   1257c:	andeq	r2, r1, ip, lsl #11
   12580:	andeq	r2, r1, ip, lsl #11
   12584:	andeq	r2, r1, ip, lsl #11
   12588:	andeq	r2, r1, ip, asr #20
   1258c:	add	r2, r2, #1
   12590:	cmp	r2, r0
   12594:	bcc	124ec <putchar_unlocked@plt+0x1508>
   12598:	ldr	r7, [sp, #44]	; 0x2c
   1259c:	add	r7, r0, r7
   125a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   125a4:	bl	10e40 <iswprint@plt>
   125a8:	cmp	r0, #0
   125ac:	movwne	r0, #1
   125b0:	and	r9, r9, r0
   125b4:	sub	r4, fp, #40	; 0x28
   125b8:	mov	r0, r4
   125bc:	bl	10df8 <mbsinit@plt>
   125c0:	ldr	lr, [sp, #28]
   125c4:	cmp	r0, #0
   125c8:	ldr	ip, [fp, #-84]	; 0xffffffac
   125cc:	beq	12484 <putchar_unlocked@plt+0x14a0>
   125d0:	b	1296c <putchar_unlocked@plt+0x1988>
   125d4:	ldr	r0, [sp, #32]
   125d8:	cmp	r0, #0
   125dc:	beq	12674 <putchar_unlocked@plt+0x1690>
   125e0:	add	r0, r6, #2
   125e4:	cmp	r0, lr
   125e8:	bcs	12674 <putchar_unlocked@plt+0x1690>
   125ec:	add	r1, ip, r6
   125f0:	ldrb	r1, [r1, #1]
   125f4:	cmp	r1, #63	; 0x3f
   125f8:	bne	12674 <putchar_unlocked@plt+0x1690>
   125fc:	ldrb	r9, [ip, r0]
   12600:	sub	r2, r9, #33	; 0x21
   12604:	cmp	r2, #29
   12608:	bhi	12674 <putchar_unlocked@plt+0x1690>
   1260c:	mov	r3, #1
   12610:	movw	r1, #20929	; 0x51c1
   12614:	movt	r1, #14336	; 0x3800
   12618:	tst	r1, r3, lsl r2
   1261c:	beq	12674 <putchar_unlocked@plt+0x1690>
   12620:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12624:	tst	r1, #1
   12628:	bne	12a54 <putchar_unlocked@plt+0x1a70>
   1262c:	cmp	r8, r4
   12630:	movcc	r1, #63	; 0x3f
   12634:	strbcc	r1, [r7, r8]
   12638:	add	r2, r8, #1
   1263c:	cmp	r2, r4
   12640:	movcc	r1, #34	; 0x22
   12644:	strbcc	r1, [r7, r2]
   12648:	add	r2, r8, #2
   1264c:	cmp	r2, r4
   12650:	movcc	r1, #34	; 0x22
   12654:	strbcc	r1, [r7, r2]
   12658:	add	r2, r8, #3
   1265c:	cmp	r2, r4
   12660:	movcc	r1, #63	; 0x3f
   12664:	strbcc	r1, [r7, r2]
   12668:	add	r8, r8, #4
   1266c:	mov	r6, r0
   12670:	mov	r5, r9
   12674:	mov	r9, #0
   12678:	b	120c8 <putchar_unlocked@plt+0x10e4>
   1267c:	add	r1, r2, r6
   12680:	str	r1, [sp, #44]	; 0x2c
   12684:	add	r1, r6, #1
   12688:	mov	r3, #0
   1268c:	ldr	lr, [sp, #28]
   12690:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12694:	tst	r0, #1
   12698:	bne	1278c <putchar_unlocked@plt+0x17a8>
   1269c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   126a0:	tst	r2, #1
   126a4:	bne	12a54 <putchar_unlocked@plt+0x1a70>
   126a8:	cmp	r6, #2
   126ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   126b0:	movwne	r3, #1
   126b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   126b8:	orr	r3, r3, r2
   126bc:	tst	r3, #1
   126c0:	bne	126fc <putchar_unlocked@plt+0x1718>
   126c4:	cmp	r8, r4
   126c8:	movcc	r2, #39	; 0x27
   126cc:	strbcc	r2, [r7, r8]
   126d0:	add	r3, r8, #1
   126d4:	cmp	r3, r4
   126d8:	movcc	r2, #36	; 0x24
   126dc:	strbcc	r2, [r7, r3]
   126e0:	add	r3, r8, #2
   126e4:	cmp	r3, r4
   126e8:	movcc	r2, #39	; 0x27
   126ec:	strbcc	r2, [r7, r3]
   126f0:	add	r8, r8, #3
   126f4:	mov	r2, #1
   126f8:	str	r2, [fp, #-56]	; 0xffffffc8
   126fc:	cmp	r8, r4
   12700:	movcc	r2, #92	; 0x5c
   12704:	strbcc	r2, [r7, r8]
   12708:	add	r3, r8, #1
   1270c:	cmp	r3, r4
   12710:	bcs	12730 <putchar_unlocked@plt+0x174c>
   12714:	and	r7, r5, #192	; 0xc0
   12718:	mov	r2, #48	; 0x30
   1271c:	orr	r7, r2, r7, lsr #6
   12720:	ldr	r6, [sp, #80]	; 0x50
   12724:	strb	r7, [r6, r3]
   12728:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1272c:	ldr	r7, [sp, #80]	; 0x50
   12730:	add	r3, r8, #2
   12734:	cmp	r3, r4
   12738:	bcs	12758 <putchar_unlocked@plt+0x1774>
   1273c:	lsr	r7, r5, #3
   12740:	mov	r2, #6
   12744:	bfi	r7, r2, #3, #29
   12748:	ldr	r6, [sp, #80]	; 0x50
   1274c:	strb	r7, [r6, r3]
   12750:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12754:	ldr	r7, [sp, #80]	; 0x50
   12758:	mov	r2, #6
   1275c:	bfi	r5, r2, #3, #29
   12760:	add	r8, r8, #3
   12764:	mov	r3, #1
   12768:	b	127b0 <putchar_unlocked@plt+0x17cc>
   1276c:	ldr	r7, [sp, #80]	; 0x50
   12770:	cmp	r8, r4
   12774:	strbcc	r5, [r7, r8]
   12778:	ldrb	r5, [ip, r1]
   1277c:	add	r1, r1, #1
   12780:	add	r8, r8, #1
   12784:	tst	r0, #1
   12788:	beq	1269c <putchar_unlocked@plt+0x16b8>
   1278c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12790:	tst	r2, #1
   12794:	beq	127a8 <putchar_unlocked@plt+0x17c4>
   12798:	cmp	r8, r4
   1279c:	movcc	r2, #92	; 0x5c
   127a0:	strbcc	r2, [r7, r8]
   127a4:	add	r8, r8, #1
   127a8:	mov	r2, #0
   127ac:	str	r2, [fp, #-52]	; 0xffffffcc
   127b0:	and	sl, r3, #1
   127b4:	ldr	r2, [sp, #44]	; 0x2c
   127b8:	cmp	r2, r1
   127bc:	bls	128c8 <putchar_unlocked@plt+0x18e4>
   127c0:	cmp	sl, #0
   127c4:	movwne	sl, #1
   127c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   127cc:	mvn	r7, r2
   127d0:	orr	r7, r7, sl
   127d4:	tst	r7, #1
   127d8:	bne	1276c <putchar_unlocked@plt+0x1788>
   127dc:	cmp	r8, r4
   127e0:	ldrcc	r7, [sp, #80]	; 0x50
   127e4:	movcc	r2, #39	; 0x27
   127e8:	strbcc	r2, [r7, r8]
   127ec:	add	r7, r8, #1
   127f0:	cmp	r7, r4
   127f4:	ldrcc	r6, [sp, #80]	; 0x50
   127f8:	movcc	r2, #39	; 0x27
   127fc:	strbcc	r2, [r6, r7]
   12800:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   12804:	add	r8, r8, #2
   12808:	mov	r2, #0
   1280c:	str	r2, [fp, #-56]	; 0xffffffc8
   12810:	b	1276c <putchar_unlocked@plt+0x1788>
   12814:	cmp	r8, r4
   12818:	movcc	r0, #39	; 0x27
   1281c:	strbcc	r0, [r7, r8]
   12820:	add	r0, r8, #1
   12824:	cmp	r0, r4
   12828:	movcc	r1, #36	; 0x24
   1282c:	strbcc	r1, [r7, r0]
   12830:	add	r0, r8, #2
   12834:	cmp	r0, r4
   12838:	movcc	r1, #39	; 0x27
   1283c:	strbcc	r1, [r7, r0]
   12840:	add	r0, r8, #3
   12844:	mov	r2, #1
   12848:	cmp	r0, r4
   1284c:	movcc	r1, #92	; 0x5c
   12850:	strbcc	r1, [r7, r0]
   12854:	str	r2, [fp, #-56]	; 0xffffffc8
   12858:	add	r8, r0, #1
   1285c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12860:	cmp	r1, #2
   12864:	beq	128b8 <putchar_unlocked@plt+0x18d4>
   12868:	add	r1, r6, #1
   1286c:	mov	r9, #0
   12870:	mov	sl, #1
   12874:	mov	r5, #48	; 0x30
   12878:	cmp	r1, lr
   1287c:	bcs	120c8 <putchar_unlocked@plt+0x10e4>
   12880:	ldrb	r1, [ip, r1]
   12884:	sub	r1, r1, #48	; 0x30
   12888:	uxtb	r1, r1
   1288c:	cmp	r1, #9
   12890:	bhi	120c8 <putchar_unlocked@plt+0x10e4>
   12894:	cmp	r8, r4
   12898:	movcc	r1, #48	; 0x30
   1289c:	strbcc	r1, [r7, r8]
   128a0:	add	r1, r0, #2
   128a4:	cmp	r1, r4
   128a8:	movcc	r2, #48	; 0x30
   128ac:	strbcc	r2, [r7, r1]
   128b0:	add	r8, r0, #3
   128b4:	b	120c8 <putchar_unlocked@plt+0x10e4>
   128b8:	mov	r0, #48	; 0x30
   128bc:	mov	sl, #1
   128c0:	mov	r9, #0
   128c4:	b	12374 <putchar_unlocked@plt+0x1390>
   128c8:	sub	r6, r1, #1
   128cc:	cmp	sl, #0
   128d0:	movwne	sl, #1
   128d4:	mov	r0, r5
   128d8:	cmp	sl, #0
   128dc:	bne	1291c <putchar_unlocked@plt+0x1938>
   128e0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   128e4:	tst	r1, #1
   128e8:	beq	1291c <putchar_unlocked@plt+0x1938>
   128ec:	cmp	r8, r4
   128f0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   128f4:	movcc	r1, #39	; 0x27
   128f8:	strbcc	r1, [r7, r8]
   128fc:	add	r1, r8, #1
   12900:	cmp	r1, r4
   12904:	movcc	r2, #39	; 0x27
   12908:	strbcc	r2, [r7, r1]
   1290c:	add	r8, r8, #2
   12910:	mov	r1, #0
   12914:	str	r1, [fp, #-56]	; 0xffffffc8
   12918:	b	12400 <putchar_unlocked@plt+0x141c>
   1291c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12920:	b	12400 <putchar_unlocked@plt+0x141c>
   12924:	mov	r9, #0
   12928:	b	12964 <putchar_unlocked@plt+0x1980>
   1292c:	mov	r9, #0
   12930:	cmp	r7, lr
   12934:	bcs	12964 <putchar_unlocked@plt+0x1980>
   12938:	ldr	ip, [fp, #-84]	; 0xffffffac
   1293c:	ldr	r7, [sp, #44]	; 0x2c
   12940:	ldr	r0, [sp, #20]
   12944:	ldrb	r0, [r0, r7]
   12948:	cmp	r0, #0
   1294c:	beq	1296c <putchar_unlocked@plt+0x1988>
   12950:	add	r7, r7, #1
   12954:	add	r0, r6, r7
   12958:	cmp	r0, lr
   1295c:	bcc	12940 <putchar_unlocked@plt+0x195c>
   12960:	b	1296c <putchar_unlocked@plt+0x1988>
   12964:	ldr	ip, [fp, #-84]	; 0xffffffac
   12968:	ldr	r7, [sp, #44]	; 0x2c
   1296c:	mov	r1, r7
   12970:	ldr	r7, [sp, #80]	; 0x50
   12974:	b	1229c <putchar_unlocked@plt+0x12b8>
   12978:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1297c:	eor	r0, r1, #2
   12980:	orr	r0, r0, r8
   12984:	clz	r0, r0
   12988:	lsr	r0, r0, #5
   1298c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12990:	tst	r2, r0
   12994:	bne	12a54 <putchar_unlocked@plt+0x1a70>
   12998:	cmp	r1, #2
   1299c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   129a0:	movwne	r0, #1
   129a4:	orr	r0, r2, r0
   129a8:	tst	r0, #1
   129ac:	ldreq	r0, [sp, #56]	; 0x38
   129b0:	eoreq	r0, r0, #1
   129b4:	tsteq	r0, #1
   129b8:	bne	129ec <putchar_unlocked@plt+0x1a08>
   129bc:	mov	r9, lr
   129c0:	tst	r5, #1
   129c4:	bne	12abc <putchar_unlocked@plt+0x1ad8>
   129c8:	ldr	r0, [sp, #72]	; 0x48
   129cc:	cmp	r0, #0
   129d0:	beq	129ec <putchar_unlocked@plt+0x1a08>
   129d4:	mov	r5, #0
   129d8:	cmp	r4, #0
   129dc:	ldr	r0, [sp, #84]	; 0x54
   129e0:	mov	sl, r2
   129e4:	ldr	r6, [sp, #72]	; 0x48
   129e8:	beq	11b84 <putchar_unlocked@plt+0xba0>
   129ec:	ldr	r1, [sp, #92]	; 0x5c
   129f0:	clz	r0, r1
   129f4:	lsr	r0, r0, #5
   129f8:	orr	r0, r0, r2
   129fc:	tst	r0, #1
   12a00:	bne	12a2c <putchar_unlocked@plt+0x1a48>
   12a04:	ldrb	r0, [r1]
   12a08:	cmp	r0, #0
   12a0c:	beq	12a2c <putchar_unlocked@plt+0x1a48>
   12a10:	add	r1, r1, #1
   12a14:	cmp	r8, r4
   12a18:	strbcc	r0, [r7, r8]
   12a1c:	add	r8, r8, #1
   12a20:	ldrb	r0, [r1], #1
   12a24:	cmp	r0, #0
   12a28:	bne	12a14 <putchar_unlocked@plt+0x1a30>
   12a2c:	cmp	r8, r4
   12a30:	movcc	r0, #0
   12a34:	strbcc	r0, [r7, r8]
   12a38:	b	12ab0 <putchar_unlocked@plt+0x1acc>
   12a3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a40:	mov	lr, r4
   12a44:	mov	r4, r5
   12a48:	b	12a54 <putchar_unlocked@plt+0x1a70>
   12a4c:	ldr	r7, [sp, #80]	; 0x50
   12a50:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a54:	mov	r0, #0
   12a58:	ldr	r1, [fp, #12]
   12a5c:	bic	r1, r1, #2
   12a60:	ldr	r2, [sp, #84]	; 0x54
   12a64:	tst	r2, #1
   12a68:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12a6c:	mov	r2, r3
   12a70:	movwne	r2, #4
   12a74:	cmp	r3, #2
   12a78:	movne	r2, r3
   12a7c:	str	r2, [sp]
   12a80:	str	r1, [sp, #4]
   12a84:	str	r0, [sp, #8]
   12a88:	ldr	r0, [sp, #68]	; 0x44
   12a8c:	str	r0, [sp, #12]
   12a90:	ldr	r0, [sp, #76]	; 0x4c
   12a94:	str	r0, [sp, #16]
   12a98:	mov	r0, r7
   12a9c:	mov	r1, r4
   12aa0:	mov	r2, ip
   12aa4:	mov	r3, lr
   12aa8:	bl	11afc <putchar_unlocked@plt+0xb18>
   12aac:	mov	r8, r0
   12ab0:	mov	r0, r8
   12ab4:	sub	sp, fp, #28
   12ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12abc:	mov	r0, #5
   12ac0:	str	r0, [sp]
   12ac4:	ldr	r0, [fp, #12]
   12ac8:	str	r0, [sp, #4]
   12acc:	ldr	r0, [fp, #16]
   12ad0:	str	r0, [sp, #8]
   12ad4:	ldr	r0, [sp, #68]	; 0x44
   12ad8:	str	r0, [sp, #12]
   12adc:	ldr	r0, [sp, #76]	; 0x4c
   12ae0:	str	r0, [sp, #16]
   12ae4:	mov	r0, r7
   12ae8:	ldr	r1, [sp, #72]	; 0x48
   12aec:	ldr	r2, [fp, #-84]	; 0xffffffac
   12af0:	mov	r3, r9
   12af4:	b	12aa8 <putchar_unlocked@plt+0x1ac4>
   12af8:	bl	10fcc <abort@plt>
   12afc:	mov	r3, r2
   12b00:	mov	r2, #0
   12b04:	b	12b08 <putchar_unlocked@plt+0x1b24>
   12b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b0c:	add	fp, sp, #28
   12b10:	sub	sp, sp, #36	; 0x24
   12b14:	mov	r4, r2
   12b18:	str	r2, [sp, #24]
   12b1c:	mov	r5, r1
   12b20:	mov	r6, r0
   12b24:	str	r0, [sp, #20]
   12b28:	movw	r8, #24920	; 0x6158
   12b2c:	movt	r8, #2
   12b30:	cmp	r3, #0
   12b34:	movne	r8, r3
   12b38:	bl	10f0c <__errno_location@plt>
   12b3c:	str	r0, [sp, #28]
   12b40:	ldm	r8, {r3, r9}
   12b44:	ldr	r1, [r8, #40]	; 0x28
   12b48:	ldr	r2, [r8, #44]	; 0x2c
   12b4c:	ldr	r7, [r0]
   12b50:	str	r7, [sp, #32]
   12b54:	add	sl, r8, #8
   12b58:	cmp	r4, #0
   12b5c:	orreq	r9, r9, #1
   12b60:	stm	sp, {r3, r9, sl}
   12b64:	str	r1, [sp, #12]
   12b68:	str	r2, [sp, #16]
   12b6c:	mov	r0, #0
   12b70:	mov	r1, #0
   12b74:	mov	r2, r6
   12b78:	mov	r3, r5
   12b7c:	mov	r7, r5
   12b80:	bl	11afc <putchar_unlocked@plt+0xb18>
   12b84:	mov	r5, r0
   12b88:	add	r4, r0, #1
   12b8c:	mov	r0, r4
   12b90:	bl	13bd8 <putchar_unlocked@plt+0x2bf4>
   12b94:	mov	r6, r0
   12b98:	ldr	r0, [r8]
   12b9c:	ldr	r1, [r8, #40]	; 0x28
   12ba0:	ldr	r2, [r8, #44]	; 0x2c
   12ba4:	stm	sp, {r0, r9, sl}
   12ba8:	str	r1, [sp, #12]
   12bac:	str	r2, [sp, #16]
   12bb0:	mov	r0, r6
   12bb4:	mov	r1, r4
   12bb8:	ldr	r2, [sp, #20]
   12bbc:	mov	r3, r7
   12bc0:	bl	11afc <putchar_unlocked@plt+0xb18>
   12bc4:	ldr	r0, [sp, #24]
   12bc8:	ldr	r1, [sp, #32]
   12bcc:	ldr	r2, [sp, #28]
   12bd0:	str	r1, [r2]
   12bd4:	cmp	r0, #0
   12bd8:	strne	r5, [r0]
   12bdc:	mov	r0, r6
   12be0:	sub	sp, fp, #28
   12be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12be8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12bec:	add	fp, sp, #24
   12bf0:	movw	r8, #24808	; 0x60e8
   12bf4:	movt	r8, #2
   12bf8:	ldr	r4, [r8]
   12bfc:	movw	r5, #24812	; 0x60ec
   12c00:	movt	r5, #2
   12c04:	ldr	r0, [r5]
   12c08:	cmp	r0, #2
   12c0c:	blt	12c38 <putchar_unlocked@plt+0x1c54>
   12c10:	add	r7, r4, #12
   12c14:	mov	r6, #0
   12c18:	ldr	r0, [r7, r6, lsl #3]
   12c1c:	bl	11724 <putchar_unlocked@plt+0x740>
   12c20:	add	r0, r6, #1
   12c24:	ldr	r1, [r5]
   12c28:	add	r2, r6, #2
   12c2c:	cmp	r2, r1
   12c30:	mov	r6, r0
   12c34:	blt	12c18 <putchar_unlocked@plt+0x1c34>
   12c38:	ldr	r0, [r4, #4]
   12c3c:	movw	r7, #24968	; 0x6188
   12c40:	movt	r7, #2
   12c44:	cmp	r0, r7
   12c48:	beq	12c60 <putchar_unlocked@plt+0x1c7c>
   12c4c:	bl	11724 <putchar_unlocked@plt+0x740>
   12c50:	movw	r0, #24816	; 0x60f0
   12c54:	movt	r0, #2
   12c58:	mov	r6, #256	; 0x100
   12c5c:	strd	r6, [r0]
   12c60:	movw	r6, #24816	; 0x60f0
   12c64:	movt	r6, #2
   12c68:	cmp	r4, r6
   12c6c:	beq	12c7c <putchar_unlocked@plt+0x1c98>
   12c70:	mov	r0, r4
   12c74:	bl	11724 <putchar_unlocked@plt+0x740>
   12c78:	str	r6, [r8]
   12c7c:	mov	r0, #1
   12c80:	str	r0, [r5]
   12c84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12c88:	movw	r3, #24920	; 0x6158
   12c8c:	movt	r3, #2
   12c90:	mvn	r2, #0
   12c94:	b	12c98 <putchar_unlocked@plt+0x1cb4>
   12c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c9c:	add	fp, sp, #28
   12ca0:	sub	sp, sp, #44	; 0x2c
   12ca4:	mov	r7, r3
   12ca8:	str	r2, [sp, #36]	; 0x24
   12cac:	str	r1, [sp, #32]
   12cb0:	mov	r5, r0
   12cb4:	bl	10f0c <__errno_location@plt>
   12cb8:	cmp	r5, #0
   12cbc:	blt	12e28 <putchar_unlocked@plt+0x1e44>
   12cc0:	cmn	r5, #-2147483647	; 0x80000001
   12cc4:	beq	12e28 <putchar_unlocked@plt+0x1e44>
   12cc8:	movw	r4, #24808	; 0x60e8
   12ccc:	movt	r4, #2
   12cd0:	ldr	r6, [r4]
   12cd4:	str	r0, [sp, #28]
   12cd8:	ldr	r0, [r0]
   12cdc:	str	r0, [sp, #24]
   12ce0:	movw	r8, #24812	; 0x60ec
   12ce4:	movt	r8, #2
   12ce8:	ldr	r1, [r8]
   12cec:	cmp	r1, r5
   12cf0:	ble	12cfc <putchar_unlocked@plt+0x1d18>
   12cf4:	mov	sl, r6
   12cf8:	b	12d64 <putchar_unlocked@plt+0x1d80>
   12cfc:	str	r1, [fp, #-32]	; 0xffffffe0
   12d00:	mov	r0, #8
   12d04:	str	r0, [sp]
   12d08:	movw	r9, #24816	; 0x60f0
   12d0c:	movt	r9, #2
   12d10:	subs	r0, r6, r9
   12d14:	movne	r0, r6
   12d18:	add	r2, r5, #1
   12d1c:	sub	r2, r2, r1
   12d20:	sub	r1, fp, #32
   12d24:	mvn	r3, #-2147483648	; 0x80000000
   12d28:	bl	13cc0 <putchar_unlocked@plt+0x2cdc>
   12d2c:	mov	sl, r0
   12d30:	str	r0, [r4]
   12d34:	cmp	r6, r9
   12d38:	ldrdeq	r0, [r9]
   12d3c:	stmeq	sl, {r0, r1}
   12d40:	ldr	r1, [r8]
   12d44:	add	r0, sl, r1, lsl #3
   12d48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12d4c:	sub	r1, r2, r1
   12d50:	lsl	r2, r1, #3
   12d54:	mov	r1, #0
   12d58:	bl	10f24 <memset@plt>
   12d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d60:	str	r0, [r8]
   12d64:	mov	r9, sl
   12d68:	ldr	r6, [r9, r5, lsl #3]!
   12d6c:	ldr	r4, [r9, #4]!
   12d70:	ldm	r7, {r0, r1}
   12d74:	ldr	r2, [r7, #40]	; 0x28
   12d78:	ldr	r3, [r7, #44]	; 0x2c
   12d7c:	orr	r8, r1, #1
   12d80:	add	r1, r7, #8
   12d84:	stm	sp, {r0, r8}
   12d88:	str	r1, [sp, #20]
   12d8c:	add	r0, sp, #8
   12d90:	stm	r0, {r1, r2, r3}
   12d94:	mov	r0, r4
   12d98:	mov	r1, r6
   12d9c:	ldr	r2, [sp, #32]
   12da0:	ldr	r3, [sp, #36]	; 0x24
   12da4:	bl	11afc <putchar_unlocked@plt+0xb18>
   12da8:	cmp	r6, r0
   12dac:	bhi	12e10 <putchar_unlocked@plt+0x1e2c>
   12db0:	add	r6, r0, #1
   12db4:	str	r6, [sl, r5, lsl #3]
   12db8:	movw	r0, #24968	; 0x6188
   12dbc:	movt	r0, #2
   12dc0:	cmp	r4, r0
   12dc4:	beq	12dd0 <putchar_unlocked@plt+0x1dec>
   12dc8:	mov	r0, r4
   12dcc:	bl	11724 <putchar_unlocked@plt+0x740>
   12dd0:	mov	r0, r6
   12dd4:	bl	13bd8 <putchar_unlocked@plt+0x2bf4>
   12dd8:	mov	r4, r0
   12ddc:	str	r0, [r9]
   12de0:	ldr	r0, [r7]
   12de4:	ldr	r1, [r7, #40]	; 0x28
   12de8:	ldr	r2, [r7, #44]	; 0x2c
   12dec:	stm	sp, {r0, r8}
   12df0:	ldr	r0, [sp, #20]
   12df4:	add	r3, sp, #8
   12df8:	stm	r3, {r0, r1, r2}
   12dfc:	mov	r0, r4
   12e00:	mov	r1, r6
   12e04:	ldr	r2, [sp, #32]
   12e08:	ldr	r3, [sp, #36]	; 0x24
   12e0c:	bl	11afc <putchar_unlocked@plt+0xb18>
   12e10:	ldr	r0, [sp, #28]
   12e14:	ldr	r1, [sp, #24]
   12e18:	str	r1, [r0]
   12e1c:	mov	r0, r4
   12e20:	sub	sp, fp, #28
   12e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e28:	bl	10fcc <abort@plt>
   12e2c:	movw	r3, #24920	; 0x6158
   12e30:	movt	r3, #2
   12e34:	b	12c98 <putchar_unlocked@plt+0x1cb4>
   12e38:	mov	r1, r0
   12e3c:	mov	r0, #0
   12e40:	b	12c88 <putchar_unlocked@plt+0x1ca4>
   12e44:	mov	r2, r1
   12e48:	mov	r1, r0
   12e4c:	mov	r0, #0
   12e50:	b	12e2c <putchar_unlocked@plt+0x1e48>
   12e54:	push	{r4, r5, r6, sl, fp, lr}
   12e58:	add	fp, sp, #16
   12e5c:	sub	sp, sp, #48	; 0x30
   12e60:	mov	r4, r2
   12e64:	mov	r5, r0
   12e68:	mov	r6, sp
   12e6c:	mov	r0, r6
   12e70:	bl	12e90 <putchar_unlocked@plt+0x1eac>
   12e74:	mov	r0, r5
   12e78:	mov	r1, r4
   12e7c:	mvn	r2, #0
   12e80:	mov	r3, r6
   12e84:	bl	12c98 <putchar_unlocked@plt+0x1cb4>
   12e88:	sub	sp, fp, #16
   12e8c:	pop	{r4, r5, r6, sl, fp, pc}
   12e90:	vmov.i32	q8, #0	; 0x00000000
   12e94:	mov	r2, #32
   12e98:	mov	r3, r0
   12e9c:	vst1.32	{d16-d17}, [r3], r2
   12ea0:	vst1.32	{d16-d17}, [r3]
   12ea4:	add	r2, r0, #16
   12ea8:	vst1.32	{d16-d17}, [r2]
   12eac:	cmp	r1, #10
   12eb0:	strne	r1, [r0]
   12eb4:	bxne	lr
   12eb8:	push	{fp, lr}
   12ebc:	mov	fp, sp
   12ec0:	bl	10fcc <abort@plt>
   12ec4:	push	{r4, r5, r6, r7, fp, lr}
   12ec8:	add	fp, sp, #16
   12ecc:	sub	sp, sp, #48	; 0x30
   12ed0:	mov	r4, r3
   12ed4:	mov	r5, r2
   12ed8:	mov	r6, r0
   12edc:	mov	r7, sp
   12ee0:	mov	r0, r7
   12ee4:	bl	12e90 <putchar_unlocked@plt+0x1eac>
   12ee8:	mov	r0, r6
   12eec:	mov	r1, r5
   12ef0:	mov	r2, r4
   12ef4:	mov	r3, r7
   12ef8:	bl	12c98 <putchar_unlocked@plt+0x1cb4>
   12efc:	sub	sp, fp, #16
   12f00:	pop	{r4, r5, r6, r7, fp, pc}
   12f04:	mov	r2, r1
   12f08:	mov	r1, r0
   12f0c:	mov	r0, #0
   12f10:	b	12e54 <putchar_unlocked@plt+0x1e70>
   12f14:	mov	r3, r2
   12f18:	mov	r2, r1
   12f1c:	mov	r1, r0
   12f20:	mov	r0, #0
   12f24:	b	12ec4 <putchar_unlocked@plt+0x1ee0>
   12f28:	push	{r4, r5, r6, sl, fp, lr}
   12f2c:	add	fp, sp, #16
   12f30:	sub	sp, sp, #48	; 0x30
   12f34:	mov	r4, r1
   12f38:	mov	r5, r0
   12f3c:	mov	r0, #32
   12f40:	movw	r1, #24920	; 0x6158
   12f44:	movt	r1, #2
   12f48:	add	r3, r1, #16
   12f4c:	vld1.64	{d16-d17}, [r1], r0
   12f50:	mov	r6, sp
   12f54:	vld1.64	{d18-d19}, [r3]
   12f58:	add	r3, r6, #16
   12f5c:	vld1.64	{d20-d21}, [r1]
   12f60:	vst1.64	{d18-d19}, [r3]
   12f64:	mov	r1, r6
   12f68:	vst1.64	{d16-d17}, [r1], r0
   12f6c:	vst1.64	{d20-d21}, [r1]
   12f70:	mov	r0, r6
   12f74:	mov	r1, r2
   12f78:	mov	r2, #1
   12f7c:	bl	119f0 <putchar_unlocked@plt+0xa0c>
   12f80:	mov	r0, #0
   12f84:	mov	r1, r5
   12f88:	mov	r2, r4
   12f8c:	mov	r3, r6
   12f90:	bl	12c98 <putchar_unlocked@plt+0x1cb4>
   12f94:	sub	sp, fp, #16
   12f98:	pop	{r4, r5, r6, sl, fp, pc}
   12f9c:	mov	r2, r1
   12fa0:	mvn	r1, #0
   12fa4:	b	12f28 <putchar_unlocked@plt+0x1f44>
   12fa8:	mov	r1, #58	; 0x3a
   12fac:	b	12f9c <putchar_unlocked@plt+0x1fb8>
   12fb0:	mov	r2, #58	; 0x3a
   12fb4:	b	12f28 <putchar_unlocked@plt+0x1f44>
   12fb8:	push	{r4, r5, r6, sl, fp, lr}
   12fbc:	add	fp, sp, #16
   12fc0:	sub	sp, sp, #48	; 0x30
   12fc4:	mov	r4, r2
   12fc8:	mov	r5, r0
   12fcc:	mov	r6, sp
   12fd0:	mov	r0, r6
   12fd4:	bl	12e90 <putchar_unlocked@plt+0x1eac>
   12fd8:	mov	r0, r6
   12fdc:	mov	r1, #58	; 0x3a
   12fe0:	mov	r2, #1
   12fe4:	bl	119f0 <putchar_unlocked@plt+0xa0c>
   12fe8:	mov	r0, r5
   12fec:	mov	r1, r4
   12ff0:	mvn	r2, #0
   12ff4:	mov	r3, r6
   12ff8:	bl	12c98 <putchar_unlocked@plt+0x1cb4>
   12ffc:	sub	sp, fp, #16
   13000:	pop	{r4, r5, r6, sl, fp, pc}
   13004:	push	{fp, lr}
   13008:	mov	fp, sp
   1300c:	sub	sp, sp, #8
   13010:	mvn	ip, #0
   13014:	str	ip, [sp]
   13018:	bl	13024 <putchar_unlocked@plt+0x2040>
   1301c:	mov	sp, fp
   13020:	pop	{fp, pc}
   13024:	push	{r4, r5, r6, r7, fp, lr}
   13028:	add	fp, sp, #16
   1302c:	sub	sp, sp, #48	; 0x30
   13030:	mov	r7, r3
   13034:	mov	r5, r0
   13038:	mov	r0, #32
   1303c:	movw	r3, #24920	; 0x6158
   13040:	movt	r3, #2
   13044:	add	r4, r3, #16
   13048:	vld1.64	{d16-d17}, [r3], r0
   1304c:	mov	r6, sp
   13050:	vld1.64	{d18-d19}, [r4]
   13054:	add	r4, r6, #16
   13058:	vld1.64	{d20-d21}, [r3]
   1305c:	vst1.64	{d18-d19}, [r4]
   13060:	mov	r3, r6
   13064:	vst1.64	{d16-d17}, [r3], r0
   13068:	vst1.64	{d20-d21}, [r3]
   1306c:	mov	r0, r6
   13070:	bl	11a48 <putchar_unlocked@plt+0xa64>
   13074:	ldr	r2, [fp, #8]
   13078:	mov	r0, r5
   1307c:	mov	r1, r7
   13080:	mov	r3, r6
   13084:	bl	12c98 <putchar_unlocked@plt+0x1cb4>
   13088:	sub	sp, fp, #16
   1308c:	pop	{r4, r5, r6, r7, fp, pc}
   13090:	mov	r3, r2
   13094:	mov	r2, r1
   13098:	mov	r1, r0
   1309c:	mov	r0, #0
   130a0:	b	13004 <putchar_unlocked@plt+0x2020>
   130a4:	push	{fp, lr}
   130a8:	mov	fp, sp
   130ac:	sub	sp, sp, #8
   130b0:	mov	ip, r2
   130b4:	mov	r2, r1
   130b8:	mov	r1, r0
   130bc:	str	r3, [sp]
   130c0:	mov	r0, #0
   130c4:	mov	r3, ip
   130c8:	bl	13024 <putchar_unlocked@plt+0x2040>
   130cc:	mov	sp, fp
   130d0:	pop	{fp, pc}
   130d4:	movw	r3, #24824	; 0x60f8
   130d8:	movt	r3, #2
   130dc:	b	12c98 <putchar_unlocked@plt+0x1cb4>
   130e0:	mov	r2, r1
   130e4:	mov	r1, r0
   130e8:	mov	r0, #0
   130ec:	b	130d4 <putchar_unlocked@plt+0x20f0>
   130f0:	mvn	r2, #0
   130f4:	b	130d4 <putchar_unlocked@plt+0x20f0>
   130f8:	mov	r1, r0
   130fc:	mov	r0, #0
   13100:	b	130f0 <putchar_unlocked@plt+0x210c>
   13104:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13108:	add	fp, sp, #24
   1310c:	sub	sp, sp, #16
   13110:	mov	r4, r1
   13114:	mov	r5, r0
   13118:	mov	r7, #0
   1311c:	mov	r0, #0
   13120:	mov	r1, r5
   13124:	mov	r2, #5
   13128:	bl	10e10 <dcgettext@plt>
   1312c:	cmp	r0, r5
   13130:	beq	1313c <putchar_unlocked@plt+0x2158>
   13134:	sub	sp, fp, #24
   13138:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1313c:	bl	14610 <putchar_unlocked@plt+0x362c>
   13140:	mov	r6, r0
   13144:	mov	r8, #56	; 0x38
   13148:	mov	r0, #45	; 0x2d
   1314c:	stm	sp, {r0, r8}
   13150:	str	r7, [sp, #8]
   13154:	str	r7, [sp, #12]
   13158:	mov	r0, r6
   1315c:	mov	r1, #85	; 0x55
   13160:	mov	r2, #84	; 0x54
   13164:	mov	r3, #70	; 0x46
   13168:	bl	13200 <putchar_unlocked@plt+0x221c>
   1316c:	cmp	r0, #0
   13170:	beq	1318c <putchar_unlocked@plt+0x21a8>
   13174:	ldrb	r1, [r5]
   13178:	movw	r2, #19580	; 0x4c7c
   1317c:	movt	r2, #1
   13180:	movw	r0, #19584	; 0x4c80
   13184:	movt	r0, #1
   13188:	b	131d0 <putchar_unlocked@plt+0x21ec>
   1318c:	mov	r0, #48	; 0x30
   13190:	mov	r1, #51	; 0x33
   13194:	str	r8, [sp]
   13198:	stmib	sp, {r0, r1}
   1319c:	str	r0, [sp, #12]
   131a0:	mov	r0, r6
   131a4:	mov	r1, #71	; 0x47
   131a8:	mov	r2, #66	; 0x42
   131ac:	mov	r3, #49	; 0x31
   131b0:	bl	13200 <putchar_unlocked@plt+0x221c>
   131b4:	cmp	r0, #0
   131b8:	beq	131e0 <putchar_unlocked@plt+0x21fc>
   131bc:	ldrb	r1, [r5]
   131c0:	movw	r2, #19588	; 0x4c84
   131c4:	movt	r2, #1
   131c8:	movw	r0, #19592	; 0x4c88
   131cc:	movt	r0, #1
   131d0:	cmp	r1, #96	; 0x60
   131d4:	moveq	r0, r2
   131d8:	sub	sp, fp, #24
   131dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131e0:	movw	r1, #19574	; 0x4c76
   131e4:	movt	r1, #1
   131e8:	movw	r0, #19578	; 0x4c7a
   131ec:	movt	r0, #1
   131f0:	cmp	r4, #9
   131f4:	moveq	r0, r1
   131f8:	sub	sp, fp, #24
   131fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13200:	push	{r4, r5, r6, r7, fp, lr}
   13204:	add	fp, sp, #16
   13208:	sub	sp, sp, #16
   1320c:	mov	r4, r3
   13210:	mov	r5, r2
   13214:	mov	r7, r1
   13218:	mov	r6, r0
   1321c:	mov	r0, r1
   13220:	bl	1431c <putchar_unlocked@plt+0x3338>
   13224:	ldrb	r1, [r6]
   13228:	cmp	r0, #0
   1322c:	andne	r1, r1, #223	; 0xdf
   13230:	mov	r0, #0
   13234:	cmp	r1, r7
   13238:	bne	13278 <putchar_unlocked@plt+0x2294>
   1323c:	cmp	r7, #0
   13240:	moveq	r0, #1
   13244:	subeq	sp, fp, #16
   13248:	popeq	{r4, r5, r6, r7, fp, pc}
   1324c:	ldr	r0, [fp, #20]
   13250:	ldr	r1, [fp, #16]
   13254:	ldr	r2, [fp, #12]
   13258:	ldr	r3, [fp, #8]
   1325c:	str	r2, [sp]
   13260:	str	r1, [sp, #4]
   13264:	str	r0, [sp, #8]
   13268:	mov	r0, r6
   1326c:	mov	r1, r5
   13270:	mov	r2, r4
   13274:	bl	13280 <putchar_unlocked@plt+0x229c>
   13278:	sub	sp, fp, #16
   1327c:	pop	{r4, r5, r6, r7, fp, pc}
   13280:	push	{r4, r5, r6, r7, fp, lr}
   13284:	add	fp, sp, #16
   13288:	sub	sp, sp, #8
   1328c:	mov	r4, r3
   13290:	mov	r5, r2
   13294:	mov	r7, r1
   13298:	mov	r6, r0
   1329c:	mov	r0, r1
   132a0:	bl	1431c <putchar_unlocked@plt+0x3338>
   132a4:	ldrb	r1, [r6, #1]
   132a8:	cmp	r0, #0
   132ac:	andne	r1, r1, #223	; 0xdf
   132b0:	mov	r0, #0
   132b4:	cmp	r1, r7
   132b8:	bne	132f0 <putchar_unlocked@plt+0x230c>
   132bc:	cmp	r7, #0
   132c0:	moveq	r0, #1
   132c4:	subeq	sp, fp, #16
   132c8:	popeq	{r4, r5, r6, r7, fp, pc}
   132cc:	ldr	r0, [fp, #16]
   132d0:	ldr	r1, [fp, #12]
   132d4:	ldr	r3, [fp, #8]
   132d8:	str	r1, [sp]
   132dc:	str	r0, [sp, #4]
   132e0:	mov	r0, r6
   132e4:	mov	r1, r5
   132e8:	mov	r2, r4
   132ec:	bl	132f8 <putchar_unlocked@plt+0x2314>
   132f0:	sub	sp, fp, #16
   132f4:	pop	{r4, r5, r6, r7, fp, pc}
   132f8:	push	{r4, r5, r6, r7, fp, lr}
   132fc:	add	fp, sp, #16
   13300:	sub	sp, sp, #8
   13304:	mov	r4, r3
   13308:	mov	r5, r2
   1330c:	mov	r7, r1
   13310:	mov	r6, r0
   13314:	mov	r0, r1
   13318:	bl	1431c <putchar_unlocked@plt+0x3338>
   1331c:	ldrb	r1, [r6, #2]
   13320:	cmp	r0, #0
   13324:	andne	r1, r1, #223	; 0xdf
   13328:	mov	r0, #0
   1332c:	cmp	r1, r7
   13330:	bne	13360 <putchar_unlocked@plt+0x237c>
   13334:	cmp	r7, #0
   13338:	moveq	r0, #1
   1333c:	subeq	sp, fp, #16
   13340:	popeq	{r4, r5, r6, r7, fp, pc}
   13344:	ldr	r0, [fp, #12]
   13348:	ldr	r3, [fp, #8]
   1334c:	str	r0, [sp]
   13350:	mov	r0, r6
   13354:	mov	r1, r5
   13358:	mov	r2, r4
   1335c:	bl	13368 <putchar_unlocked@plt+0x2384>
   13360:	sub	sp, fp, #16
   13364:	pop	{r4, r5, r6, r7, fp, pc}
   13368:	push	{r4, r5, r6, r7, fp, lr}
   1336c:	add	fp, sp, #16
   13370:	mov	r4, r3
   13374:	mov	r5, r2
   13378:	mov	r7, r1
   1337c:	mov	r6, r0
   13380:	mov	r0, r1
   13384:	bl	1431c <putchar_unlocked@plt+0x3338>
   13388:	ldrb	r1, [r6, #3]
   1338c:	ldr	r3, [fp, #8]
   13390:	cmp	r0, #0
   13394:	andne	r1, r1, #223	; 0xdf
   13398:	mov	r0, #0
   1339c:	cmp	r1, r7
   133a0:	popne	{r4, r5, r6, r7, fp, pc}
   133a4:	cmp	r7, #0
   133a8:	beq	133c0 <putchar_unlocked@plt+0x23dc>
   133ac:	mov	r0, r6
   133b0:	mov	r1, r5
   133b4:	mov	r2, r4
   133b8:	pop	{r4, r5, r6, r7, fp, lr}
   133bc:	b	133c8 <putchar_unlocked@plt+0x23e4>
   133c0:	mov	r0, #1
   133c4:	pop	{r4, r5, r6, r7, fp, pc}
   133c8:	push	{r4, r5, r6, r7, fp, lr}
   133cc:	add	fp, sp, #16
   133d0:	mov	r4, r3
   133d4:	mov	r5, r2
   133d8:	mov	r7, r1
   133dc:	mov	r6, r0
   133e0:	mov	r0, r1
   133e4:	bl	1431c <putchar_unlocked@plt+0x3338>
   133e8:	ldrb	r1, [r6, #4]
   133ec:	cmp	r0, #0
   133f0:	andne	r1, r1, #223	; 0xdf
   133f4:	mov	r0, #0
   133f8:	cmp	r1, r7
   133fc:	popne	{r4, r5, r6, r7, fp, pc}
   13400:	cmp	r7, #0
   13404:	beq	1341c <putchar_unlocked@plt+0x2438>
   13408:	mov	r0, r6
   1340c:	mov	r1, r5
   13410:	mov	r2, r4
   13414:	pop	{r4, r5, r6, r7, fp, lr}
   13418:	b	13424 <putchar_unlocked@plt+0x2440>
   1341c:	mov	r0, #1
   13420:	pop	{r4, r5, r6, r7, fp, pc}
   13424:	push	{r4, r5, r6, sl, fp, lr}
   13428:	add	fp, sp, #16
   1342c:	mov	r4, r2
   13430:	mov	r6, r1
   13434:	mov	r5, r0
   13438:	mov	r0, r1
   1343c:	bl	1431c <putchar_unlocked@plt+0x3338>
   13440:	ldrb	r1, [r5, #5]
   13444:	cmp	r0, #0
   13448:	andne	r1, r1, #223	; 0xdf
   1344c:	mov	r0, #0
   13450:	cmp	r1, r6
   13454:	popne	{r4, r5, r6, sl, fp, pc}
   13458:	cmp	r6, #0
   1345c:	beq	13470 <putchar_unlocked@plt+0x248c>
   13460:	mov	r0, r5
   13464:	mov	r1, r4
   13468:	pop	{r4, r5, r6, sl, fp, lr}
   1346c:	b	13478 <putchar_unlocked@plt+0x2494>
   13470:	mov	r0, #1
   13474:	pop	{r4, r5, r6, sl, fp, pc}
   13478:	push	{r4, r5, fp, lr}
   1347c:	add	fp, sp, #8
   13480:	mov	r5, r1
   13484:	mov	r4, r0
   13488:	mov	r0, r1
   1348c:	bl	1431c <putchar_unlocked@plt+0x3338>
   13490:	ldrb	r1, [r4, #6]
   13494:	cmp	r0, #0
   13498:	andne	r1, r1, #223	; 0xdf
   1349c:	mov	r0, #0
   134a0:	cmp	r1, r5
   134a4:	popne	{r4, r5, fp, pc}
   134a8:	cmp	r5, #0
   134ac:	beq	134bc <putchar_unlocked@plt+0x24d8>
   134b0:	mov	r0, r4
   134b4:	pop	{r4, r5, fp, lr}
   134b8:	b	134c4 <putchar_unlocked@plt+0x24e0>
   134bc:	mov	r0, #1
   134c0:	pop	{r4, r5, fp, pc}
   134c4:	push	{r4, sl, fp, lr}
   134c8:	add	fp, sp, #8
   134cc:	mov	r4, r0
   134d0:	mov	r0, #0
   134d4:	bl	1431c <putchar_unlocked@plt+0x3338>
   134d8:	ldrb	r1, [r4, #7]
   134dc:	cmp	r0, #0
   134e0:	beq	134f8 <putchar_unlocked@plt+0x2514>
   134e4:	tst	r1, #223	; 0xdf
   134e8:	moveq	r0, #1
   134ec:	popeq	{r4, sl, fp, pc}
   134f0:	mov	r0, #0
   134f4:	pop	{r4, sl, fp, pc}
   134f8:	cmp	r1, #0
   134fc:	moveq	r0, #1
   13500:	popeq	{r4, sl, fp, pc}
   13504:	mov	r0, #0
   13508:	pop	{r4, sl, fp, pc}
   1350c:	push	{r4, r5, fp, lr}
   13510:	add	fp, sp, #8
   13514:	mov	r5, r0
   13518:	mov	r0, #33	; 0x21
   1351c:	bl	13b9c <putchar_unlocked@plt+0x2bb8>
   13520:	mov	r4, r0
   13524:	add	r1, r5, #44	; 0x2c
   13528:	mov	r2, #32
   1352c:	bl	10f30 <strncpy@plt>
   13530:	mov	r5, #0
   13534:	strb	r5, [r4, #32]
   13538:	mov	r0, r4
   1353c:	bl	10f00 <strlen@plt>
   13540:	cmp	r0, #1
   13544:	blt	1356c <putchar_unlocked@plt+0x2588>
   13548:	add	r1, r4, r0
   1354c:	mov	r0, r1
   13550:	ldrb	r2, [r0, #-1]!
   13554:	cmp	r2, #32
   13558:	bne	1356c <putchar_unlocked@plt+0x2588>
   1355c:	strb	r5, [r1, #-1]
   13560:	cmp	r4, r0
   13564:	mov	r1, r0
   13568:	bcc	13550 <putchar_unlocked@plt+0x256c>
   1356c:	mov	r0, r4
   13570:	pop	{r4, r5, fp, pc}
   13574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13578:	add	fp, sp, #28
   1357c:	sub	sp, sp, #12
   13580:	mov	r6, r3
   13584:	str	r2, [sp, #4]
   13588:	mov	r9, r1
   1358c:	mov	r7, #0
   13590:	str	r7, [sp, #8]
   13594:	bl	10dc8 <utmpxname@plt>
   13598:	bl	10e1c <setutxent@plt>
   1359c:	bl	10fd8 <getutxent@plt>
   135a0:	cmp	r0, #0
   135a4:	beq	13624 <putchar_unlocked@plt+0x2640>
   135a8:	mov	r5, r0
   135ac:	mov	r4, #0
   135b0:	mov	r8, #384	; 0x180
   135b4:	add	sl, sp, #8
   135b8:	mov	r7, #0
   135bc:	mov	r0, r5
   135c0:	mov	r1, r6
   135c4:	bl	13644 <putchar_unlocked@plt+0x2660>
   135c8:	cmp	r0, #0
   135cc:	beq	13610 <putchar_unlocked@plt+0x262c>
   135d0:	ldr	r0, [sp, #8]
   135d4:	cmp	r4, r0
   135d8:	bne	135f8 <putchar_unlocked@plt+0x2614>
   135dc:	str	r8, [sp]
   135e0:	mov	r0, r7
   135e4:	mov	r1, sl
   135e8:	mov	r2, #1
   135ec:	mvn	r3, #0
   135f0:	bl	13cc0 <putchar_unlocked@plt+0x2cdc>
   135f4:	mov	r7, r0
   135f8:	add	r0, r4, r4, lsl #1
   135fc:	add	r0, r7, r0, lsl #7
   13600:	mov	r1, r5
   13604:	mov	r2, #384	; 0x180
   13608:	bl	10dec <memcpy@plt>
   1360c:	add	r4, r4, #1
   13610:	bl	10fd8 <getutxent@plt>
   13614:	mov	r5, r0
   13618:	cmp	r0, #0
   1361c:	bne	135bc <putchar_unlocked@plt+0x25d8>
   13620:	b	13628 <putchar_unlocked@plt+0x2644>
   13624:	mov	r4, #0
   13628:	bl	10f78 <endutxent@plt>
   1362c:	str	r4, [r9]
   13630:	ldr	r0, [sp, #4]
   13634:	str	r7, [r0]
   13638:	mov	r0, #0
   1363c:	sub	sp, fp, #28
   13640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13644:	push	{r4, sl, fp, lr}
   13648:	add	fp, sp, #8
   1364c:	ldrb	r2, [r0, #44]	; 0x2c
   13650:	mov	r4, #0
   13654:	cmp	r2, #0
   13658:	mov	r2, #0
   1365c:	ldrhne	r2, [r0]
   13660:	subne	r2, r2, #7
   13664:	clzne	r2, r2
   13668:	lsrne	r2, r2, #5
   1366c:	tst	r1, #2
   13670:	beq	13684 <putchar_unlocked@plt+0x26a0>
   13674:	cmp	r2, #0
   13678:	bne	13684 <putchar_unlocked@plt+0x26a0>
   1367c:	mov	r0, r4
   13680:	pop	{r4, sl, fp, pc}
   13684:	tst	r1, #1
   13688:	beq	136b4 <putchar_unlocked@plt+0x26d0>
   1368c:	eors	r1, r2, #1
   13690:	bne	136b4 <putchar_unlocked@plt+0x26d0>
   13694:	ldr	r0, [r0, #4]
   13698:	cmp	r0, #1
   1369c:	blt	136b4 <putchar_unlocked@plt+0x26d0>
   136a0:	mov	r4, #0
   136a4:	mov	r1, #0
   136a8:	bl	10edc <kill@plt>
   136ac:	cmn	r0, #1
   136b0:	ble	136c0 <putchar_unlocked@plt+0x26dc>
   136b4:	mov	r4, #1
   136b8:	mov	r0, r4
   136bc:	pop	{r4, sl, fp, pc}
   136c0:	bl	10f0c <__errno_location@plt>
   136c4:	ldr	r0, [r0]
   136c8:	cmp	r0, #3
   136cc:	movne	r4, #1
   136d0:	mov	r0, r4
   136d4:	pop	{r4, sl, fp, pc}
   136d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   136dc:	add	fp, sp, #24
   136e0:	sub	sp, sp, #32
   136e4:	mov	r4, r2
   136e8:	mov	r8, r0
   136ec:	ldr	r6, [fp, #12]
   136f0:	ldr	r7, [fp, #8]
   136f4:	cmp	r1, #0
   136f8:	beq	13720 <putchar_unlocked@plt+0x273c>
   136fc:	mov	r5, r1
   13700:	str	r4, [sp]
   13704:	str	r3, [sp, #4]
   13708:	movw	r2, #19680	; 0x4ce0
   1370c:	movt	r2, #1
   13710:	mov	r0, r8
   13714:	mov	r1, #1
   13718:	mov	r3, r5
   1371c:	b	13738 <putchar_unlocked@plt+0x2754>
   13720:	str	r3, [sp]
   13724:	movw	r2, #19692	; 0x4cec
   13728:	movt	r2, #1
   1372c:	mov	r0, r8
   13730:	mov	r1, #1
   13734:	mov	r3, r4
   13738:	bl	10f54 <__fprintf_chk@plt>
   1373c:	movw	r1, #19699	; 0x4cf3
   13740:	movt	r1, #1
   13744:	mov	r0, #0
   13748:	mov	r2, #5
   1374c:	bl	10e10 <dcgettext@plt>
   13750:	mov	r3, r0
   13754:	movw	r0, #2022	; 0x7e6
   13758:	str	r0, [sp]
   1375c:	movw	r2, #20417	; 0x4fc1
   13760:	movt	r2, #1
   13764:	mov	r0, r8
   13768:	mov	r1, #1
   1376c:	bl	10f54 <__fprintf_chk@plt>
   13770:	movw	r4, #18735	; 0x492f
   13774:	movt	r4, #1
   13778:	mov	r0, r4
   1377c:	mov	r1, r8
   13780:	bl	10da4 <fputs_unlocked@plt>
   13784:	movw	r1, #19703	; 0x4cf7
   13788:	movt	r1, #1
   1378c:	mov	r0, #0
   13790:	mov	r2, #5
   13794:	bl	10e10 <dcgettext@plt>
   13798:	mov	r2, r0
   1379c:	movw	r3, #19874	; 0x4da2
   137a0:	movt	r3, #1
   137a4:	mov	r0, r8
   137a8:	mov	r1, #1
   137ac:	bl	10f54 <__fprintf_chk@plt>
   137b0:	mov	r0, r4
   137b4:	mov	r1, r8
   137b8:	bl	10da4 <fputs_unlocked@plt>
   137bc:	cmp	r6, #9
   137c0:	bhi	137fc <putchar_unlocked@plt+0x2818>
   137c4:	add	r0, pc, #0
   137c8:	ldr	pc, [r0, r6, lsl #2]
   137cc:	strdeq	r3, [r1], -r4
   137d0:	andeq	r3, r1, r8, lsl #16
   137d4:	andeq	r3, r1, r8, lsr r8
   137d8:	andeq	r3, r1, r0, ror #16
   137dc:	andeq	r3, r1, r8, lsl #17
   137e0:			; <UNDEFINED> instruction: 0x000138b0
   137e4:	ldrdeq	r3, [r1], -r8
   137e8:	andeq	r3, r1, r0, lsl r9
   137ec:			; <UNDEFINED> instruction: 0x000139b0
   137f0:	andeq	r3, r1, r8, asr r9
   137f4:	sub	sp, fp, #24
   137f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   137fc:	movw	r1, #20227	; 0x4f03
   13800:	movt	r1, #1
   13804:	b	13960 <putchar_unlocked@plt+0x297c>
   13808:	movw	r1, #19908	; 0x4dc4
   1380c:	movt	r1, #1
   13810:	mov	r0, #0
   13814:	mov	r2, #5
   13818:	bl	10e10 <dcgettext@plt>
   1381c:	mov	r2, r0
   13820:	ldr	r3, [r7]
   13824:	mov	r0, r8
   13828:	mov	r1, #1
   1382c:	sub	sp, fp, #24
   13830:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13834:	b	10f54 <__fprintf_chk@plt>
   13838:	movw	r1, #19924	; 0x4dd4
   1383c:	movt	r1, #1
   13840:	mov	r0, #0
   13844:	mov	r2, #5
   13848:	bl	10e10 <dcgettext@plt>
   1384c:	mov	r2, r0
   13850:	ldr	r3, [r7]
   13854:	ldr	r0, [r7, #4]
   13858:	str	r0, [sp]
   1385c:	b	1394c <putchar_unlocked@plt+0x2968>
   13860:	movw	r1, #19947	; 0x4deb
   13864:	movt	r1, #1
   13868:	mov	r0, #0
   1386c:	mov	r2, #5
   13870:	bl	10e10 <dcgettext@plt>
   13874:	mov	r2, r0
   13878:	ldr	r3, [r7]
   1387c:	ldmib	r7, {r0, r1}
   13880:	stm	sp, {r0, r1}
   13884:	b	1394c <putchar_unlocked@plt+0x2968>
   13888:	movw	r1, #19975	; 0x4e07
   1388c:	movt	r1, #1
   13890:	mov	r0, #0
   13894:	mov	r2, #5
   13898:	bl	10e10 <dcgettext@plt>
   1389c:	mov	r2, r0
   138a0:	ldr	r3, [r7]
   138a4:	ldmib	r7, {r0, r1, r7}
   138a8:	stm	sp, {r0, r1, r7}
   138ac:	b	1394c <putchar_unlocked@plt+0x2968>
   138b0:	movw	r1, #20007	; 0x4e27
   138b4:	movt	r1, #1
   138b8:	mov	r0, #0
   138bc:	mov	r2, #5
   138c0:	bl	10e10 <dcgettext@plt>
   138c4:	mov	r2, r0
   138c8:	ldr	r3, [r7]
   138cc:	ldmib	r7, {r0, r1, r6, r7}
   138d0:	stm	sp, {r0, r1, r6, r7}
   138d4:	b	1394c <putchar_unlocked@plt+0x2968>
   138d8:	movw	r1, #20043	; 0x4e4b
   138dc:	movt	r1, #1
   138e0:	mov	r0, #0
   138e4:	mov	r2, #5
   138e8:	bl	10e10 <dcgettext@plt>
   138ec:	mov	r2, r0
   138f0:	ldr	r3, [r7]
   138f4:	ldmib	r7, {r0, r1, r6}
   138f8:	ldr	r5, [r7, #16]
   138fc:	ldr	r7, [r7, #20]
   13900:	stm	sp, {r0, r1, r6}
   13904:	str	r5, [sp, #12]
   13908:	str	r7, [sp, #16]
   1390c:	b	1394c <putchar_unlocked@plt+0x2968>
   13910:	movw	r1, #20083	; 0x4e73
   13914:	movt	r1, #1
   13918:	mov	r0, #0
   1391c:	mov	r2, #5
   13920:	bl	10e10 <dcgettext@plt>
   13924:	mov	r2, r0
   13928:	ldr	r3, [r7]
   1392c:	ldmib	r7, {r0, r1, r6}
   13930:	ldr	r5, [r7, #16]
   13934:	ldr	r4, [r7, #20]
   13938:	ldr	r7, [r7, #24]
   1393c:	stm	sp, {r0, r1, r6}
   13940:	str	r5, [sp, #12]
   13944:	str	r4, [sp, #16]
   13948:	str	r7, [sp, #20]
   1394c:	mov	r0, r8
   13950:	mov	r1, #1
   13954:	b	13a00 <putchar_unlocked@plt+0x2a1c>
   13958:	movw	r1, #20175	; 0x4ecf
   1395c:	movt	r1, #1
   13960:	mov	r0, #0
   13964:	mov	r2, #5
   13968:	bl	10e10 <dcgettext@plt>
   1396c:	mov	ip, r0
   13970:	ldr	r3, [r7]
   13974:	ldr	r0, [r7, #4]
   13978:	ldr	r1, [r7, #8]
   1397c:	ldr	r6, [r7, #12]
   13980:	ldr	r5, [r7, #16]
   13984:	ldr	r4, [r7, #20]
   13988:	ldr	r2, [r7, #24]
   1398c:	ldr	lr, [r7, #28]
   13990:	ldr	r7, [r7, #32]
   13994:	stm	sp, {r0, r1, r6}
   13998:	str	r5, [sp, #12]
   1399c:	str	r4, [sp, #16]
   139a0:	str	r2, [sp, #20]
   139a4:	str	lr, [sp, #24]
   139a8:	str	r7, [sp, #28]
   139ac:	b	139f4 <putchar_unlocked@plt+0x2a10>
   139b0:	movw	r1, #20127	; 0x4e9f
   139b4:	movt	r1, #1
   139b8:	mov	r0, #0
   139bc:	mov	r2, #5
   139c0:	bl	10e10 <dcgettext@plt>
   139c4:	mov	ip, r0
   139c8:	ldr	r3, [r7]
   139cc:	ldmib	r7, {r0, r1, r6}
   139d0:	ldr	r5, [r7, #16]
   139d4:	ldr	r4, [r7, #20]
   139d8:	ldr	r2, [r7, #24]
   139dc:	ldr	r7, [r7, #28]
   139e0:	stm	sp, {r0, r1, r6}
   139e4:	str	r5, [sp, #12]
   139e8:	str	r4, [sp, #16]
   139ec:	str	r2, [sp, #20]
   139f0:	str	r7, [sp, #24]
   139f4:	mov	r0, r8
   139f8:	mov	r1, #1
   139fc:	mov	r2, ip
   13a00:	bl	10f54 <__fprintf_chk@plt>
   13a04:	sub	sp, fp, #24
   13a08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a0c:	push	{r4, sl, fp, lr}
   13a10:	add	fp, sp, #8
   13a14:	sub	sp, sp, #8
   13a18:	mov	lr, #0
   13a1c:	ldr	ip, [fp, #8]
   13a20:	ldr	r4, [ip, lr, lsl #2]
   13a24:	add	lr, lr, #1
   13a28:	cmp	r4, #0
   13a2c:	bne	13a20 <putchar_unlocked@plt+0x2a3c>
   13a30:	sub	r4, lr, #1
   13a34:	str	ip, [sp]
   13a38:	str	r4, [sp, #4]
   13a3c:	bl	136d8 <putchar_unlocked@plt+0x26f4>
   13a40:	sub	sp, fp, #8
   13a44:	pop	{r4, sl, fp, pc}
   13a48:	push	{r4, r5, fp, lr}
   13a4c:	add	fp, sp, #8
   13a50:	sub	sp, sp, #48	; 0x30
   13a54:	mov	ip, #0
   13a58:	ldr	r4, [fp, #8]
   13a5c:	add	lr, sp, #8
   13a60:	ldr	r5, [r4]
   13a64:	str	r5, [lr, ip, lsl #2]
   13a68:	cmp	r5, #0
   13a6c:	beq	13a80 <putchar_unlocked@plt+0x2a9c>
   13a70:	add	ip, ip, #1
   13a74:	add	r4, r4, #4
   13a78:	cmp	ip, #10
   13a7c:	bcc	13a60 <putchar_unlocked@plt+0x2a7c>
   13a80:	str	lr, [sp]
   13a84:	str	ip, [sp, #4]
   13a88:	bl	136d8 <putchar_unlocked@plt+0x26f4>
   13a8c:	sub	sp, fp, #8
   13a90:	pop	{r4, r5, fp, pc}
   13a94:	push	{fp, lr}
   13a98:	mov	fp, sp
   13a9c:	sub	sp, sp, #8
   13aa0:	add	ip, fp, #8
   13aa4:	str	ip, [sp, #4]
   13aa8:	str	ip, [sp]
   13aac:	bl	13a48 <putchar_unlocked@plt+0x2a64>
   13ab0:	mov	sp, fp
   13ab4:	pop	{fp, pc}
   13ab8:	push	{fp, lr}
   13abc:	mov	fp, sp
   13ac0:	movw	r0, #24892	; 0x613c
   13ac4:	movt	r0, #2
   13ac8:	ldr	r1, [r0]
   13acc:	movw	r0, #18735	; 0x492f
   13ad0:	movt	r0, #1
   13ad4:	bl	10da4 <fputs_unlocked@plt>
   13ad8:	movw	r1, #20287	; 0x4f3f
   13adc:	movt	r1, #1
   13ae0:	mov	r0, #0
   13ae4:	mov	r2, #5
   13ae8:	bl	10e10 <dcgettext@plt>
   13aec:	mov	r1, r0
   13af0:	movw	r2, #20307	; 0x4f53
   13af4:	movt	r2, #1
   13af8:	mov	r0, #1
   13afc:	bl	10f3c <__printf_chk@plt>
   13b00:	movw	r1, #20329	; 0x4f69
   13b04:	movt	r1, #1
   13b08:	mov	r0, #0
   13b0c:	mov	r2, #5
   13b10:	bl	10e10 <dcgettext@plt>
   13b14:	mov	r1, r0
   13b18:	movw	r2, #18894	; 0x49ce
   13b1c:	movt	r2, #1
   13b20:	movw	r3, #19076	; 0x4a84
   13b24:	movt	r3, #1
   13b28:	mov	r0, #1
   13b2c:	bl	10f3c <__printf_chk@plt>
   13b30:	movw	r1, #20349	; 0x4f7d
   13b34:	movt	r1, #1
   13b38:	mov	r0, #0
   13b3c:	mov	r2, #5
   13b40:	bl	10e10 <dcgettext@plt>
   13b44:	mov	r1, r0
   13b48:	movw	r2, #20388	; 0x4fa4
   13b4c:	movt	r2, #1
   13b50:	mov	r0, #1
   13b54:	pop	{fp, lr}
   13b58:	b	10f3c <__printf_chk@plt>
   13b5c:	b	13b60 <putchar_unlocked@plt+0x2b7c>
   13b60:	push	{r4, r5, r6, sl, fp, lr}
   13b64:	add	fp, sp, #16
   13b68:	mov	r4, r2
   13b6c:	mov	r5, r1
   13b70:	mov	r6, r0
   13b74:	bl	146a8 <putchar_unlocked@plt+0x36c4>
   13b78:	cmp	r0, #0
   13b7c:	popne	{r4, r5, r6, sl, fp, pc}
   13b80:	cmp	r6, #0
   13b84:	beq	13b98 <putchar_unlocked@plt+0x2bb4>
   13b88:	cmp	r5, #0
   13b8c:	cmpne	r4, #0
   13b90:	bne	13b98 <putchar_unlocked@plt+0x2bb4>
   13b94:	pop	{r4, r5, r6, sl, fp, pc}
   13b98:	bl	13f4c <putchar_unlocked@plt+0x2f68>
   13b9c:	push	{fp, lr}
   13ba0:	mov	fp, sp
   13ba4:	bl	13fe4 <putchar_unlocked@plt+0x3000>
   13ba8:	bl	13bb0 <putchar_unlocked@plt+0x2bcc>
   13bac:	pop	{fp, pc}
   13bb0:	cmp	r0, #0
   13bb4:	bxne	lr
   13bb8:	push	{fp, lr}
   13bbc:	mov	fp, sp
   13bc0:	bl	13f4c <putchar_unlocked@plt+0x2f68>
   13bc4:	push	{fp, lr}
   13bc8:	mov	fp, sp
   13bcc:	bl	145dc <putchar_unlocked@plt+0x35f8>
   13bd0:	bl	13bb0 <putchar_unlocked@plt+0x2bcc>
   13bd4:	pop	{fp, pc}
   13bd8:	b	13b9c <putchar_unlocked@plt+0x2bb8>
   13bdc:	push	{r4, r5, fp, lr}
   13be0:	add	fp, sp, #8
   13be4:	mov	r4, r1
   13be8:	mov	r5, r0
   13bec:	bl	14014 <putchar_unlocked@plt+0x3030>
   13bf0:	cmp	r0, #0
   13bf4:	popne	{r4, r5, fp, pc}
   13bf8:	cmp	r5, #0
   13bfc:	beq	13c0c <putchar_unlocked@plt+0x2c28>
   13c00:	cmp	r4, #0
   13c04:	bne	13c0c <putchar_unlocked@plt+0x2c28>
   13c08:	pop	{r4, r5, fp, pc}
   13c0c:	bl	13f4c <putchar_unlocked@plt+0x2f68>
   13c10:	push	{fp, lr}
   13c14:	mov	fp, sp
   13c18:	bl	145e0 <putchar_unlocked@plt+0x35fc>
   13c1c:	bl	13bb0 <putchar_unlocked@plt+0x2bcc>
   13c20:	pop	{fp, pc}
   13c24:	push	{fp, lr}
   13c28:	mov	fp, sp
   13c2c:	bl	145f0 <putchar_unlocked@plt+0x360c>
   13c30:	bl	13bb0 <putchar_unlocked@plt+0x2bcc>
   13c34:	pop	{fp, pc}
   13c38:	push	{fp, lr}
   13c3c:	mov	fp, sp
   13c40:	mov	r2, r1
   13c44:	mov	r1, r0
   13c48:	mov	r0, #0
   13c4c:	bl	13b60 <putchar_unlocked@plt+0x2b7c>
   13c50:	pop	{fp, pc}
   13c54:	mov	r2, r1
   13c58:	mov	r1, r0
   13c5c:	mov	r0, #0
   13c60:	b	13c24 <putchar_unlocked@plt+0x2c40>
   13c64:	mov	r2, #1
   13c68:	b	13c6c <putchar_unlocked@plt+0x2c88>
   13c6c:	push	{r4, r5, fp, lr}
   13c70:	add	fp, sp, #8
   13c74:	mov	r4, r1
   13c78:	ldr	r5, [r1]
   13c7c:	cmp	r0, #0
   13c80:	beq	13c98 <putchar_unlocked@plt+0x2cb4>
   13c84:	mov	r1, #1
   13c88:	add	r1, r1, r5, lsr #1
   13c8c:	adds	r5, r5, r1
   13c90:	bcc	13cb0 <putchar_unlocked@plt+0x2ccc>
   13c94:	bl	13f4c <putchar_unlocked@plt+0x2f68>
   13c98:	cmp	r5, #0
   13c9c:	bne	13cb0 <putchar_unlocked@plt+0x2ccc>
   13ca0:	mov	r1, #64	; 0x40
   13ca4:	udiv	r5, r1, r2
   13ca8:	cmp	r2, #64	; 0x40
   13cac:	addhi	r5, r5, #1
   13cb0:	mov	r1, r5
   13cb4:	bl	13b60 <putchar_unlocked@plt+0x2b7c>
   13cb8:	str	r5, [r4]
   13cbc:	pop	{r4, r5, fp, pc}
   13cc0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cc4:	add	fp, sp, #24
   13cc8:	mov	r8, r1
   13ccc:	ldr	r6, [r1]
   13cd0:	add	r1, r6, r6, asr #1
   13cd4:	cmp	r1, r6
   13cd8:	mvnvs	r1, #-2147483648	; 0x80000000
   13cdc:	cmp	r1, r3
   13ce0:	mov	r5, r1
   13ce4:	movgt	r5, r3
   13ce8:	cmn	r3, #1
   13cec:	movle	r5, r1
   13cf0:	ldr	r4, [fp, #8]
   13cf4:	cmn	r4, #1
   13cf8:	ble	13d20 <putchar_unlocked@plt+0x2d3c>
   13cfc:	cmp	r4, #0
   13d00:	beq	13d74 <putchar_unlocked@plt+0x2d90>
   13d04:	cmn	r5, #1
   13d08:	ble	13d48 <putchar_unlocked@plt+0x2d64>
   13d0c:	mvn	r7, #-2147483648	; 0x80000000
   13d10:	udiv	r1, r7, r4
   13d14:	cmp	r1, r5
   13d18:	bge	13d74 <putchar_unlocked@plt+0x2d90>
   13d1c:	b	13d84 <putchar_unlocked@plt+0x2da0>
   13d20:	cmn	r5, #1
   13d24:	ble	13d64 <putchar_unlocked@plt+0x2d80>
   13d28:	cmn	r4, #1
   13d2c:	beq	13d74 <putchar_unlocked@plt+0x2d90>
   13d30:	mov	r1, #-2147483648	; 0x80000000
   13d34:	sdiv	r1, r1, r4
   13d38:	mvn	r7, #-2147483648	; 0x80000000
   13d3c:	cmp	r1, r5
   13d40:	bge	13d74 <putchar_unlocked@plt+0x2d90>
   13d44:	b	13d84 <putchar_unlocked@plt+0x2da0>
   13d48:	beq	13d74 <putchar_unlocked@plt+0x2d90>
   13d4c:	mov	r1, #-2147483648	; 0x80000000
   13d50:	sdiv	r1, r1, r5
   13d54:	mvn	r7, #-2147483648	; 0x80000000
   13d58:	cmp	r1, r4
   13d5c:	bge	13d74 <putchar_unlocked@plt+0x2d90>
   13d60:	b	13d84 <putchar_unlocked@plt+0x2da0>
   13d64:	mvn	r7, #-2147483648	; 0x80000000
   13d68:	sdiv	r1, r7, r4
   13d6c:	cmp	r5, r1
   13d70:	blt	13d84 <putchar_unlocked@plt+0x2da0>
   13d74:	mul	r1, r5, r4
   13d78:	mov	r7, #64	; 0x40
   13d7c:	cmp	r1, #63	; 0x3f
   13d80:	bgt	13d8c <putchar_unlocked@plt+0x2da8>
   13d84:	sdiv	r5, r7, r4
   13d88:	mul	r1, r5, r4
   13d8c:	cmp	r0, #0
   13d90:	moveq	r7, #0
   13d94:	streq	r7, [r8]
   13d98:	sub	r7, r5, r6
   13d9c:	cmp	r7, r2
   13da0:	bge	13e4c <putchar_unlocked@plt+0x2e68>
   13da4:	add	r5, r6, r2
   13da8:	mov	r1, #0
   13dac:	cmp	r5, r3
   13db0:	mov	r2, #0
   13db4:	movwgt	r2, #1
   13db8:	cmn	r3, #1
   13dbc:	movwgt	r1, #1
   13dc0:	cmp	r5, r6
   13dc4:	bvs	13e34 <putchar_unlocked@plt+0x2e50>
   13dc8:	ands	r1, r1, r2
   13dcc:	bne	13e34 <putchar_unlocked@plt+0x2e50>
   13dd0:	cmn	r4, #1
   13dd4:	ble	13dfc <putchar_unlocked@plt+0x2e18>
   13dd8:	cmp	r4, #0
   13ddc:	beq	13e48 <putchar_unlocked@plt+0x2e64>
   13de0:	cmn	r5, #1
   13de4:	ble	13e20 <putchar_unlocked@plt+0x2e3c>
   13de8:	mvn	r1, #-2147483648	; 0x80000000
   13dec:	udiv	r1, r1, r4
   13df0:	cmp	r1, r5
   13df4:	bge	13e48 <putchar_unlocked@plt+0x2e64>
   13df8:	b	13e34 <putchar_unlocked@plt+0x2e50>
   13dfc:	cmn	r5, #1
   13e00:	ble	13e38 <putchar_unlocked@plt+0x2e54>
   13e04:	cmn	r4, #1
   13e08:	beq	13e48 <putchar_unlocked@plt+0x2e64>
   13e0c:	mov	r1, #-2147483648	; 0x80000000
   13e10:	sdiv	r1, r1, r4
   13e14:	cmp	r1, r5
   13e18:	bge	13e48 <putchar_unlocked@plt+0x2e64>
   13e1c:	b	13e34 <putchar_unlocked@plt+0x2e50>
   13e20:	beq	13e48 <putchar_unlocked@plt+0x2e64>
   13e24:	mov	r1, #-2147483648	; 0x80000000
   13e28:	sdiv	r1, r1, r5
   13e2c:	cmp	r1, r4
   13e30:	bge	13e48 <putchar_unlocked@plt+0x2e64>
   13e34:	bl	13f4c <putchar_unlocked@plt+0x2f68>
   13e38:	mvn	r1, #-2147483648	; 0x80000000
   13e3c:	sdiv	r1, r1, r4
   13e40:	cmp	r5, r1
   13e44:	blt	13e34 <putchar_unlocked@plt+0x2e50>
   13e48:	mul	r1, r5, r4
   13e4c:	bl	13bdc <putchar_unlocked@plt+0x2bf8>
   13e50:	str	r5, [r8]
   13e54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e58:	mov	r1, #1
   13e5c:	b	13e60 <putchar_unlocked@plt+0x2e7c>
   13e60:	push	{fp, lr}
   13e64:	mov	fp, sp
   13e68:	bl	13f90 <putchar_unlocked@plt+0x2fac>
   13e6c:	bl	13bb0 <putchar_unlocked@plt+0x2bcc>
   13e70:	pop	{fp, pc}
   13e74:	mov	r1, #1
   13e78:	b	13e7c <putchar_unlocked@plt+0x2e98>
   13e7c:	push	{fp, lr}
   13e80:	mov	fp, sp
   13e84:	bl	145ec <putchar_unlocked@plt+0x3608>
   13e88:	bl	13bb0 <putchar_unlocked@plt+0x2bcc>
   13e8c:	pop	{fp, pc}
   13e90:	push	{r4, r5, r6, sl, fp, lr}
   13e94:	add	fp, sp, #16
   13e98:	mov	r4, r1
   13e9c:	mov	r5, r0
   13ea0:	mov	r0, r1
   13ea4:	bl	13b9c <putchar_unlocked@plt+0x2bb8>
   13ea8:	mov	r6, r0
   13eac:	mov	r1, r5
   13eb0:	mov	r2, r4
   13eb4:	bl	10dec <memcpy@plt>
   13eb8:	mov	r0, r6
   13ebc:	pop	{r4, r5, r6, sl, fp, pc}
   13ec0:	push	{r4, r5, r6, sl, fp, lr}
   13ec4:	add	fp, sp, #16
   13ec8:	mov	r4, r1
   13ecc:	mov	r5, r0
   13ed0:	mov	r0, r1
   13ed4:	bl	13bc4 <putchar_unlocked@plt+0x2be0>
   13ed8:	mov	r6, r0
   13edc:	mov	r1, r5
   13ee0:	mov	r2, r4
   13ee4:	bl	10dec <memcpy@plt>
   13ee8:	mov	r0, r6
   13eec:	pop	{r4, r5, r6, sl, fp, pc}
   13ef0:	push	{r4, r5, r6, sl, fp, lr}
   13ef4:	add	fp, sp, #16
   13ef8:	mov	r4, r1
   13efc:	mov	r5, r0
   13f00:	add	r0, r1, #1
   13f04:	bl	13bc4 <putchar_unlocked@plt+0x2be0>
   13f08:	mov	r6, r0
   13f0c:	mov	r0, #0
   13f10:	strb	r0, [r6, r4]
   13f14:	mov	r0, r6
   13f18:	mov	r1, r5
   13f1c:	mov	r2, r4
   13f20:	bl	10dec <memcpy@plt>
   13f24:	mov	r0, r6
   13f28:	pop	{r4, r5, r6, sl, fp, pc}
   13f2c:	push	{r4, sl, fp, lr}
   13f30:	add	fp, sp, #8
   13f34:	mov	r4, r0
   13f38:	bl	10f00 <strlen@plt>
   13f3c:	add	r1, r0, #1
   13f40:	mov	r0, r4
   13f44:	pop	{r4, sl, fp, lr}
   13f48:	b	13e90 <putchar_unlocked@plt+0x2eac>
   13f4c:	push	{fp, lr}
   13f50:	mov	fp, sp
   13f54:	movw	r0, #24804	; 0x60e4
   13f58:	movt	r0, #2
   13f5c:	ldr	r4, [r0]
   13f60:	movw	r1, #20464	; 0x4ff0
   13f64:	movt	r1, #1
   13f68:	mov	r0, #0
   13f6c:	mov	r2, #5
   13f70:	bl	10e10 <dcgettext@plt>
   13f74:	mov	r3, r0
   13f78:	movw	r2, #19359	; 0x4b9f
   13f7c:	movt	r2, #1
   13f80:	mov	r0, r4
   13f84:	mov	r1, #0
   13f88:	bl	10e94 <error@plt>
   13f8c:	bl	10fcc <abort@plt>
   13f90:	clz	r2, r1
   13f94:	lsr	r2, r2, #5
   13f98:	clz	r3, r0
   13f9c:	lsr	r3, r3, #5
   13fa0:	orrs	r2, r3, r2
   13fa4:	movwne	r1, #1
   13fa8:	movwne	r0, #1
   13fac:	cmp	r1, #0
   13fb0:	beq	13fe0 <putchar_unlocked@plt+0x2ffc>
   13fb4:	mvn	r2, #-2147483648	; 0x80000000
   13fb8:	udiv	r2, r2, r1
   13fbc:	cmp	r2, r0
   13fc0:	bcs	13fe0 <putchar_unlocked@plt+0x2ffc>
   13fc4:	push	{fp, lr}
   13fc8:	mov	fp, sp
   13fcc:	bl	10f0c <__errno_location@plt>
   13fd0:	mov	r1, #12
   13fd4:	str	r1, [r0]
   13fd8:	mov	r0, #0
   13fdc:	pop	{fp, pc}
   13fe0:	b	10d98 <calloc@plt>
   13fe4:	cmp	r0, #0
   13fe8:	movweq	r0, #1
   13fec:	cmn	r0, #1
   13ff0:	ble	13ff8 <putchar_unlocked@plt+0x3014>
   13ff4:	b	10ea0 <malloc@plt>
   13ff8:	push	{fp, lr}
   13ffc:	mov	fp, sp
   14000:	bl	10f0c <__errno_location@plt>
   14004:	mov	r1, #12
   14008:	str	r1, [r0]
   1400c:	mov	r0, #0
   14010:	pop	{fp, pc}
   14014:	push	{fp, lr}
   14018:	mov	fp, sp
   1401c:	cmp	r0, #0
   14020:	beq	1403c <putchar_unlocked@plt+0x3058>
   14024:	cmp	r1, #0
   14028:	beq	14048 <putchar_unlocked@plt+0x3064>
   1402c:	cmn	r1, #1
   14030:	ble	14054 <putchar_unlocked@plt+0x3070>
   14034:	pop	{fp, lr}
   14038:	b	10e28 <realloc@plt>
   1403c:	mov	r0, r1
   14040:	pop	{fp, lr}
   14044:	b	13fe4 <putchar_unlocked@plt+0x3000>
   14048:	bl	11724 <putchar_unlocked@plt+0x740>
   1404c:	mov	r0, #0
   14050:	pop	{fp, pc}
   14054:	bl	10f0c <__errno_location@plt>
   14058:	mov	r1, #12
   1405c:	str	r1, [r0]
   14060:	mov	r0, #0
   14064:	pop	{fp, pc}
   14068:	mov	r1, r0
   1406c:	sub	r2, r0, #65	; 0x41
   14070:	mov	r0, #1
   14074:	cmp	r2, #26
   14078:	subcs	r2, r1, #97	; 0x61
   1407c:	cmpcs	r2, #26
   14080:	bcs	14088 <putchar_unlocked@plt+0x30a4>
   14084:	bx	lr
   14088:	sub	r1, r1, #48	; 0x30
   1408c:	cmp	r1, #10
   14090:	movcs	r0, #0
   14094:	bx	lr
   14098:	mov	r1, r0
   1409c:	sub	r2, r0, #65	; 0x41
   140a0:	mov	r0, #1
   140a4:	cmp	r2, #26
   140a8:	subcs	r1, r1, #97	; 0x61
   140ac:	cmpcs	r1, #26
   140b0:	movcs	r0, #0
   140b4:	bx	lr
   140b8:	mov	r1, #0
   140bc:	cmp	r0, #128	; 0x80
   140c0:	movwcc	r1, #1
   140c4:	mov	r0, r1
   140c8:	bx	lr
   140cc:	sub	r1, r0, #9
   140d0:	clz	r1, r1
   140d4:	lsr	r1, r1, #5
   140d8:	sub	r0, r0, #32
   140dc:	clz	r0, r0
   140e0:	lsr	r0, r0, #5
   140e4:	orr	r0, r0, r1
   140e8:	bx	lr
   140ec:	mov	r1, r0
   140f0:	mov	r0, #1
   140f4:	cmp	r1, #32
   140f8:	bxcc	lr
   140fc:	cmp	r1, #127	; 0x7f
   14100:	movne	r0, #0
   14104:	bx	lr
   14108:	sub	r1, r0, #48	; 0x30
   1410c:	mov	r0, #0
   14110:	cmp	r1, #10
   14114:	movwcc	r0, #1
   14118:	bx	lr
   1411c:	sub	r1, r0, #33	; 0x21
   14120:	mov	r0, #0
   14124:	cmp	r1, #94	; 0x5e
   14128:	movwcc	r0, #1
   1412c:	bx	lr
   14130:	sub	r1, r0, #97	; 0x61
   14134:	mov	r0, #0
   14138:	cmp	r1, #26
   1413c:	movwcc	r0, #1
   14140:	bx	lr
   14144:	sub	r1, r0, #32
   14148:	mov	r0, #0
   1414c:	cmp	r1, #95	; 0x5f
   14150:	movwcc	r0, #1
   14154:	bx	lr
   14158:	sub	r1, r0, #33	; 0x21
   1415c:	cmp	r1, #93	; 0x5d
   14160:	bhi	142ec <putchar_unlocked@plt+0x3308>
   14164:	mov	r0, #1
   14168:	add	r2, pc, #0
   1416c:	ldr	pc, [r2, r1, lsl #2]
   14170:	andeq	r4, r1, r8, ror #5
   14174:	andeq	r4, r1, r8, ror #5
   14178:	andeq	r4, r1, r8, ror #5
   1417c:	andeq	r4, r1, r8, ror #5
   14180:	andeq	r4, r1, r8, ror #5
   14184:	andeq	r4, r1, r8, ror #5
   14188:	andeq	r4, r1, r8, ror #5
   1418c:	andeq	r4, r1, r8, ror #5
   14190:	andeq	r4, r1, r8, ror #5
   14194:	andeq	r4, r1, r8, ror #5
   14198:	andeq	r4, r1, r8, ror #5
   1419c:	andeq	r4, r1, r8, ror #5
   141a0:	andeq	r4, r1, r8, ror #5
   141a4:	andeq	r4, r1, r8, ror #5
   141a8:	andeq	r4, r1, r8, ror #5
   141ac:	andeq	r4, r1, ip, ror #5
   141b0:	andeq	r4, r1, ip, ror #5
   141b4:	andeq	r4, r1, ip, ror #5
   141b8:	andeq	r4, r1, ip, ror #5
   141bc:	andeq	r4, r1, ip, ror #5
   141c0:	andeq	r4, r1, ip, ror #5
   141c4:	andeq	r4, r1, ip, ror #5
   141c8:	andeq	r4, r1, ip, ror #5
   141cc:	andeq	r4, r1, ip, ror #5
   141d0:	andeq	r4, r1, ip, ror #5
   141d4:	andeq	r4, r1, r8, ror #5
   141d8:	andeq	r4, r1, r8, ror #5
   141dc:	andeq	r4, r1, r8, ror #5
   141e0:	andeq	r4, r1, r8, ror #5
   141e4:	andeq	r4, r1, r8, ror #5
   141e8:	andeq	r4, r1, r8, ror #5
   141ec:	andeq	r4, r1, r8, ror #5
   141f0:	andeq	r4, r1, ip, ror #5
   141f4:	andeq	r4, r1, ip, ror #5
   141f8:	andeq	r4, r1, ip, ror #5
   141fc:	andeq	r4, r1, ip, ror #5
   14200:	andeq	r4, r1, ip, ror #5
   14204:	andeq	r4, r1, ip, ror #5
   14208:	andeq	r4, r1, ip, ror #5
   1420c:	andeq	r4, r1, ip, ror #5
   14210:	andeq	r4, r1, ip, ror #5
   14214:	andeq	r4, r1, ip, ror #5
   14218:	andeq	r4, r1, ip, ror #5
   1421c:	andeq	r4, r1, ip, ror #5
   14220:	andeq	r4, r1, ip, ror #5
   14224:	andeq	r4, r1, ip, ror #5
   14228:	andeq	r4, r1, ip, ror #5
   1422c:	andeq	r4, r1, ip, ror #5
   14230:	andeq	r4, r1, ip, ror #5
   14234:	andeq	r4, r1, ip, ror #5
   14238:	andeq	r4, r1, ip, ror #5
   1423c:	andeq	r4, r1, ip, ror #5
   14240:	andeq	r4, r1, ip, ror #5
   14244:	andeq	r4, r1, ip, ror #5
   14248:	andeq	r4, r1, ip, ror #5
   1424c:	andeq	r4, r1, ip, ror #5
   14250:	andeq	r4, r1, ip, ror #5
   14254:	andeq	r4, r1, ip, ror #5
   14258:	andeq	r4, r1, r8, ror #5
   1425c:	andeq	r4, r1, r8, ror #5
   14260:	andeq	r4, r1, r8, ror #5
   14264:	andeq	r4, r1, r8, ror #5
   14268:	andeq	r4, r1, r8, ror #5
   1426c:	andeq	r4, r1, r8, ror #5
   14270:	andeq	r4, r1, ip, ror #5
   14274:	andeq	r4, r1, ip, ror #5
   14278:	andeq	r4, r1, ip, ror #5
   1427c:	andeq	r4, r1, ip, ror #5
   14280:	andeq	r4, r1, ip, ror #5
   14284:	andeq	r4, r1, ip, ror #5
   14288:	andeq	r4, r1, ip, ror #5
   1428c:	andeq	r4, r1, ip, ror #5
   14290:	andeq	r4, r1, ip, ror #5
   14294:	andeq	r4, r1, ip, ror #5
   14298:	andeq	r4, r1, ip, ror #5
   1429c:	andeq	r4, r1, ip, ror #5
   142a0:	andeq	r4, r1, ip, ror #5
   142a4:	andeq	r4, r1, ip, ror #5
   142a8:	andeq	r4, r1, ip, ror #5
   142ac:	andeq	r4, r1, ip, ror #5
   142b0:	andeq	r4, r1, ip, ror #5
   142b4:	andeq	r4, r1, ip, ror #5
   142b8:	andeq	r4, r1, ip, ror #5
   142bc:	andeq	r4, r1, ip, ror #5
   142c0:	andeq	r4, r1, ip, ror #5
   142c4:	andeq	r4, r1, ip, ror #5
   142c8:	andeq	r4, r1, ip, ror #5
   142cc:	andeq	r4, r1, ip, ror #5
   142d0:	andeq	r4, r1, ip, ror #5
   142d4:	andeq	r4, r1, ip, ror #5
   142d8:	andeq	r4, r1, r8, ror #5
   142dc:	andeq	r4, r1, r8, ror #5
   142e0:	andeq	r4, r1, r8, ror #5
   142e4:	andeq	r4, r1, r8, ror #5
   142e8:	bx	lr
   142ec:	mov	r0, #0
   142f0:	bx	lr
   142f4:	sub	r0, r0, #9
   142f8:	cmp	r0, #23
   142fc:	movhi	r0, #0
   14300:	bxhi	lr
   14304:	bic	r0, r0, #-16777216	; 0xff000000
   14308:	movw	r1, #31
   1430c:	movt	r1, #128	; 0x80
   14310:	mov	r2, #1
   14314:	and	r0, r2, r1, lsr r0
   14318:	bx	lr
   1431c:	sub	r1, r0, #65	; 0x41
   14320:	mov	r0, #0
   14324:	cmp	r1, #26
   14328:	movwcc	r0, #1
   1432c:	bx	lr
   14330:	mov	r1, r0
   14334:	sub	r2, r0, #48	; 0x30
   14338:	mov	r0, #1
   1433c:	cmp	r2, #22
   14340:	bhi	14358 <putchar_unlocked@plt+0x3374>
   14344:	mov	ip, #1
   14348:	movw	r3, #1023	; 0x3ff
   1434c:	movt	r3, #126	; 0x7e
   14350:	tst	r3, ip, lsl r2
   14354:	bxne	lr
   14358:	sub	r1, r1, #97	; 0x61
   1435c:	cmp	r1, #6
   14360:	movcs	r0, #0
   14364:	bxcs	lr
   14368:	bx	lr
   1436c:	sub	r1, r0, #65	; 0x41
   14370:	cmp	r1, #26
   14374:	addcc	r0, r0, #32
   14378:	bx	lr
   1437c:	sub	r1, r0, #97	; 0x61
   14380:	cmp	r1, #26
   14384:	subcc	r0, r0, #32
   14388:	bx	lr
   1438c:	push	{r4, r5, r6, sl, fp, lr}
   14390:	add	fp, sp, #16
   14394:	mov	r4, r0
   14398:	bl	10e70 <__fpending@plt>
   1439c:	mov	r5, r0
   143a0:	mov	r0, r4
   143a4:	bl	10e7c <ferror_unlocked@plt>
   143a8:	mov	r6, r0
   143ac:	mov	r0, r4
   143b0:	bl	14414 <putchar_unlocked@plt+0x3430>
   143b4:	cmp	r6, #0
   143b8:	beq	143d8 <putchar_unlocked@plt+0x33f4>
   143bc:	mvn	r4, #0
   143c0:	cmp	r0, #0
   143c4:	bne	1440c <putchar_unlocked@plt+0x3428>
   143c8:	bl	10f0c <__errno_location@plt>
   143cc:	mov	r1, #0
   143d0:	str	r1, [r0]
   143d4:	b	1440c <putchar_unlocked@plt+0x3428>
   143d8:	cmp	r0, #0
   143dc:	mov	r4, r0
   143e0:	mvnne	r4, #0
   143e4:	cmp	r5, #0
   143e8:	bne	1440c <putchar_unlocked@plt+0x3428>
   143ec:	cmp	r0, #0
   143f0:	beq	1440c <putchar_unlocked@plt+0x3428>
   143f4:	bl	10f0c <__errno_location@plt>
   143f8:	ldr	r0, [r0]
   143fc:	subs	r4, r0, #9
   14400:	mvnne	r4, #0
   14404:	mov	r0, r4
   14408:	pop	{r4, r5, r6, sl, fp, pc}
   1440c:	mov	r0, r4
   14410:	pop	{r4, r5, r6, sl, fp, pc}
   14414:	push	{r4, r5, fp, lr}
   14418:	add	fp, sp, #8
   1441c:	sub	sp, sp, #8
   14420:	mov	r4, r0
   14424:	bl	10f48 <fileno@plt>
   14428:	cmn	r0, #1
   1442c:	ble	144a4 <putchar_unlocked@plt+0x34c0>
   14430:	mov	r0, r4
   14434:	bl	10eb8 <__freading@plt>
   14438:	cmp	r0, #0
   1443c:	beq	14468 <putchar_unlocked@plt+0x3484>
   14440:	mov	r0, r4
   14444:	bl	10f48 <fileno@plt>
   14448:	mov	r1, #1
   1444c:	str	r1, [sp]
   14450:	mov	r2, #0
   14454:	mov	r3, #0
   14458:	bl	10e58 <lseek64@plt>
   1445c:	and	r0, r0, r1
   14460:	cmn	r0, #1
   14464:	beq	144a4 <putchar_unlocked@plt+0x34c0>
   14468:	mov	r0, r4
   1446c:	bl	144b4 <putchar_unlocked@plt+0x34d0>
   14470:	cmp	r0, #0
   14474:	beq	144a4 <putchar_unlocked@plt+0x34c0>
   14478:	bl	10f0c <__errno_location@plt>
   1447c:	ldr	r5, [r0]
   14480:	mov	r0, r4
   14484:	bl	10f60 <fclose@plt>
   14488:	cmp	r5, #0
   1448c:	beq	1449c <putchar_unlocked@plt+0x34b8>
   14490:	bl	10f0c <__errno_location@plt>
   14494:	str	r5, [r0]
   14498:	mvn	r0, #0
   1449c:	sub	sp, fp, #8
   144a0:	pop	{r4, r5, fp, pc}
   144a4:	mov	r0, r4
   144a8:	sub	sp, fp, #8
   144ac:	pop	{r4, r5, fp, lr}
   144b0:	b	10f60 <fclose@plt>
   144b4:	push	{r4, sl, fp, lr}
   144b8:	add	fp, sp, #8
   144bc:	mov	r4, r0
   144c0:	cmp	r0, #0
   144c4:	beq	144dc <putchar_unlocked@plt+0x34f8>
   144c8:	mov	r0, r4
   144cc:	bl	10eb8 <__freading@plt>
   144d0:	cmp	r0, #0
   144d4:	movne	r0, r4
   144d8:	blne	144e8 <putchar_unlocked@plt+0x3504>
   144dc:	mov	r0, r4
   144e0:	pop	{r4, sl, fp, lr}
   144e4:	b	10dbc <fflush@plt>
   144e8:	ldrb	r1, [r0, #1]
   144ec:	tst	r1, #1
   144f0:	bxeq	lr
   144f4:	push	{fp, lr}
   144f8:	mov	fp, sp
   144fc:	sub	sp, sp, #8
   14500:	mov	r1, #1
   14504:	str	r1, [sp]
   14508:	mov	r2, #0
   1450c:	mov	r3, #0
   14510:	bl	1451c <putchar_unlocked@plt+0x3538>
   14514:	mov	sp, fp
   14518:	pop	{fp, pc}
   1451c:	push	{r4, r5, r6, r7, fp, lr}
   14520:	add	fp, sp, #16
   14524:	sub	sp, sp, #8
   14528:	mov	r5, r3
   1452c:	mov	r6, r2
   14530:	mov	r4, r0
   14534:	ldr	r0, [r0, #4]
   14538:	ldr	r1, [r4, #8]
   1453c:	cmp	r1, r0
   14540:	bne	1455c <putchar_unlocked@plt+0x3578>
   14544:	ldrd	r0, [r4, #16]
   14548:	cmp	r1, r0
   1454c:	bne	1455c <putchar_unlocked@plt+0x3578>
   14550:	ldr	r0, [r4, #36]	; 0x24
   14554:	cmp	r0, #0
   14558:	beq	14574 <putchar_unlocked@plt+0x3590>
   1455c:	mov	r0, r4
   14560:	mov	r2, r6
   14564:	mov	r3, r5
   14568:	sub	sp, fp, #16
   1456c:	pop	{r4, r5, r6, r7, fp, lr}
   14570:	b	10f6c <fseeko64@plt>
   14574:	ldr	r7, [fp, #8]
   14578:	mov	r0, r4
   1457c:	bl	10f48 <fileno@plt>
   14580:	str	r7, [sp]
   14584:	mov	r2, r6
   14588:	mov	r3, r5
   1458c:	bl	10e58 <lseek64@plt>
   14590:	and	r2, r0, r1
   14594:	cmn	r2, #1
   14598:	mvneq	r0, #0
   1459c:	subeq	sp, fp, #16
   145a0:	popeq	{r4, r5, r6, r7, fp, pc}
   145a4:	strd	r0, [r4, #80]	; 0x50
   145a8:	ldr	r0, [r4]
   145ac:	bic	r0, r0, #16
   145b0:	str	r0, [r4]
   145b4:	mov	r0, #0
   145b8:	sub	sp, fp, #16
   145bc:	pop	{r4, r5, r6, r7, fp, pc}
   145c0:	push	{fp, lr}
   145c4:	mov	fp, sp
   145c8:	bl	10f0c <__errno_location@plt>
   145cc:	mov	r1, #12
   145d0:	str	r1, [r0]
   145d4:	mov	r0, #0
   145d8:	pop	{fp, pc}
   145dc:	b	13fe4 <putchar_unlocked@plt+0x3000>
   145e0:	cmp	r1, #0
   145e4:	orreq	r1, r1, #1
   145e8:	b	14014 <putchar_unlocked@plt+0x3030>
   145ec:	b	13f90 <putchar_unlocked@plt+0x2fac>
   145f0:	clz	r3, r2
   145f4:	lsr	ip, r3, #5
   145f8:	clz	r3, r1
   145fc:	lsr	r3, r3, #5
   14600:	orrs	r3, r3, ip
   14604:	movwne	r1, #1
   14608:	movwne	r2, #1
   1460c:	b	146a8 <putchar_unlocked@plt+0x36c4>
   14610:	push	{fp, lr}
   14614:	mov	fp, sp
   14618:	mov	r0, #14
   1461c:	bl	10f9c <nl_langinfo@plt>
   14620:	movw	r1, #18736	; 0x4930
   14624:	movt	r1, #1
   14628:	cmp	r0, #0
   1462c:	movne	r1, r0
   14630:	ldrb	r2, [r1]
   14634:	movw	r0, #20481	; 0x5001
   14638:	movt	r0, #1
   1463c:	cmp	r2, #0
   14640:	movne	r0, r1
   14644:	pop	{fp, pc}
   14648:	push	{r4, r5, r6, r7, fp, lr}
   1464c:	add	fp, sp, #16
   14650:	sub	sp, sp, #8
   14654:	mov	r7, r2
   14658:	mov	r4, r1
   1465c:	add	r5, sp, #4
   14660:	cmp	r0, #0
   14664:	movne	r5, r0
   14668:	mov	r0, r5
   1466c:	bl	10e88 <mbrtowc@plt>
   14670:	mov	r6, r0
   14674:	cmp	r7, #0
   14678:	beq	1469c <putchar_unlocked@plt+0x36b8>
   1467c:	cmn	r6, #2
   14680:	bcc	1469c <putchar_unlocked@plt+0x36b8>
   14684:	mov	r0, #0
   14688:	bl	146e4 <putchar_unlocked@plt+0x3700>
   1468c:	cmp	r0, #0
   14690:	ldrbeq	r0, [r4]
   14694:	streq	r0, [r5]
   14698:	moveq	r6, #1
   1469c:	mov	r0, r6
   146a0:	sub	sp, fp, #16
   146a4:	pop	{r4, r5, r6, r7, fp, pc}
   146a8:	cmp	r2, #0
   146ac:	beq	146dc <putchar_unlocked@plt+0x36f8>
   146b0:	mvn	r3, #0
   146b4:	udiv	r3, r3, r2
   146b8:	cmp	r3, r1
   146bc:	bcs	146dc <putchar_unlocked@plt+0x36f8>
   146c0:	push	{fp, lr}
   146c4:	mov	fp, sp
   146c8:	bl	10f0c <__errno_location@plt>
   146cc:	mov	r1, #12
   146d0:	str	r1, [r0]
   146d4:	mov	r0, #0
   146d8:	pop	{fp, pc}
   146dc:	mul	r1, r2, r1
   146e0:	b	14014 <putchar_unlocked@plt+0x3030>
   146e4:	push	{r4, sl, fp, lr}
   146e8:	add	fp, sp, #8
   146ec:	sub	sp, sp, #264	; 0x108
   146f0:	add	r1, sp, #7
   146f4:	movw	r2, #257	; 0x101
   146f8:	bl	14748 <putchar_unlocked@plt+0x3764>
   146fc:	mov	r4, #0
   14700:	cmp	r0, #0
   14704:	bne	1473c <putchar_unlocked@plt+0x3758>
   14708:	add	r0, sp, #7
   1470c:	movw	r1, #20487	; 0x5007
   14710:	movt	r1, #1
   14714:	bl	10db0 <strcmp@plt>
   14718:	cmp	r0, #0
   1471c:	beq	1473c <putchar_unlocked@plt+0x3758>
   14720:	add	r0, sp, #7
   14724:	movw	r1, #20489	; 0x5009
   14728:	movt	r1, #1
   1472c:	bl	10db0 <strcmp@plt>
   14730:	mov	r4, r0
   14734:	cmp	r0, #0
   14738:	movwne	r4, #1
   1473c:	mov	r0, r4
   14740:	sub	sp, fp, #8
   14744:	pop	{r4, sl, fp, pc}
   14748:	b	1474c <putchar_unlocked@plt+0x3768>
   1474c:	push	{r4, r5, r6, r7, fp, lr}
   14750:	add	fp, sp, #16
   14754:	mov	r6, r2
   14758:	mov	r4, r1
   1475c:	bl	147e8 <putchar_unlocked@plt+0x3804>
   14760:	cmp	r0, #0
   14764:	beq	14794 <putchar_unlocked@plt+0x37b0>
   14768:	mov	r7, r0
   1476c:	bl	10f00 <strlen@plt>
   14770:	cmp	r0, r6
   14774:	bcs	147b4 <putchar_unlocked@plt+0x37d0>
   14778:	add	r2, r0, #1
   1477c:	mov	r0, r4
   14780:	mov	r1, r7
   14784:	bl	10dec <memcpy@plt>
   14788:	mov	r5, #0
   1478c:	mov	r0, r5
   14790:	pop	{r4, r5, r6, r7, fp, pc}
   14794:	mov	r5, #22
   14798:	cmp	r6, #0
   1479c:	movne	r0, #0
   147a0:	strbne	r0, [r4]
   147a4:	movne	r0, r5
   147a8:	popne	{r4, r5, r6, r7, fp, pc}
   147ac:	mov	r0, r5
   147b0:	pop	{r4, r5, r6, r7, fp, pc}
   147b4:	mov	r5, #34	; 0x22
   147b8:	cmp	r6, #0
   147bc:	beq	147dc <putchar_unlocked@plt+0x37f8>
   147c0:	sub	r6, r6, #1
   147c4:	mov	r0, r4
   147c8:	mov	r1, r7
   147cc:	mov	r2, r6
   147d0:	bl	10dec <memcpy@plt>
   147d4:	mov	r0, #0
   147d8:	strb	r0, [r4, r6]
   147dc:	mov	r0, r5
   147e0:	pop	{r4, r5, r6, r7, fp, pc}
   147e4:	b	147e8 <putchar_unlocked@plt+0x3804>
   147e8:	mov	r1, #0
   147ec:	b	10f84 <setlocale@plt>
   147f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   147f4:	mov	r7, r0
   147f8:	ldr	r6, [pc, #72]	; 14848 <putchar_unlocked@plt+0x3864>
   147fc:	ldr	r5, [pc, #72]	; 1484c <putchar_unlocked@plt+0x3868>
   14800:	add	r6, pc, r6
   14804:	add	r5, pc, r5
   14808:	sub	r6, r6, r5
   1480c:	mov	r8, r1
   14810:	mov	r9, r2
   14814:	bl	10d78 <calloc@plt-0x20>
   14818:	asrs	r6, r6, #2
   1481c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14820:	mov	r4, #0
   14824:	add	r4, r4, #1
   14828:	ldr	r3, [r5], #4
   1482c:	mov	r2, r9
   14830:	mov	r1, r8
   14834:	mov	r0, r7
   14838:	blx	r3
   1483c:	cmp	r6, r4
   14840:	bne	14824 <putchar_unlocked@plt+0x3840>
   14844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14848:	andeq	r1, r1, r4, lsl #14
   1484c:	strdeq	r1, [r1], -ip
   14850:	bx	lr
   14854:	ldr	r3, [pc, #12]	; 14868 <putchar_unlocked@plt+0x3884>
   14858:	mov	r1, #0
   1485c:	add	r3, pc, r3
   14860:	ldr	r2, [r3]
   14864:	b	10f18 <__cxa_atexit@plt>
   14868:	andeq	r1, r1, r8, ror r8

Disassembly of section .fini:

0001486c <.fini>:
   1486c:	push	{r3, lr}
   14870:	pop	{r3, pc}
