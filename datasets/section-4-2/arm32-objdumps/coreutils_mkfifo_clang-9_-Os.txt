
../repos/coreutils/src/mkfifo:     file format elf32-littlearm


Disassembly of section .init:

00011710 <.init>:
   11710:	push	{r3, lr}
   11714:	bl	11b9c <__assert_fail@plt+0x4c>
   11718:	pop	{r3, pc}

Disassembly of section .plt:

0001171c <fstatfs64@plt-0x14>:
   1171c:	push	{lr}		; (str lr, [sp, #-4]!)
   11720:	ldr	lr, [pc, #4]	; 1172c <fstatfs64@plt-0x4>
   11724:	add	lr, pc, lr
   11728:	ldr	pc, [lr, #8]!
   1172c:	ldrdeq	r9, [r1], -r4

00011730 <fstatfs64@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #102400	; 0x19000
   11738:	ldr	pc, [ip, #2260]!	; 0x8d4

0001173c <selabel_lookup@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #102400	; 0x19000
   11744:	ldr	pc, [ip, #2252]!	; 0x8cc

00011748 <calloc@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #102400	; 0x19000
   11750:	ldr	pc, [ip, #2244]!	; 0x8c4

00011754 <fputs_unlocked@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #102400	; 0x19000
   1175c:	ldr	pc, [ip, #2236]!	; 0x8bc

00011760 <raise@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #102400	; 0x19000
   11768:	ldr	pc, [ip, #2228]!	; 0x8b4

0001176c <is_selinux_enabled@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #102400	; 0x19000
   11774:	ldr	pc, [ip, #2220]!	; 0x8ac

00011778 <strcmp@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #102400	; 0x19000
   11780:	ldr	pc, [ip, #2212]!	; 0x8a4

00011784 <context_type_get@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #102400	; 0x19000
   1178c:	ldr	pc, [ip, #2204]!	; 0x89c

00011790 <fflush@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #102400	; 0x19000
   11798:	ldr	pc, [ip, #2196]!	; 0x894

0001179c <lsetfilecon@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #102400	; 0x19000
   117a4:	ldr	pc, [ip, #2188]!	; 0x88c

000117a8 <memmove@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #102400	; 0x19000
   117b0:	ldr	pc, [ip, #2180]!	; 0x884

000117b4 <free@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #102400	; 0x19000
   117bc:	ldr	pc, [ip, #2172]!	; 0x87c

000117c0 <faccessat@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #102400	; 0x19000
   117c8:	ldr	pc, [ip, #2164]!	; 0x874

000117cc <_exit@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #102400	; 0x19000
   117d4:	ldr	pc, [ip, #2156]!	; 0x86c

000117d8 <memcpy@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #102400	; 0x19000
   117e0:	ldr	pc, [ip, #2148]!	; 0x864

000117e4 <mbsinit@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #102400	; 0x19000
   117ec:	ldr	pc, [ip, #2140]!	; 0x85c

000117f0 <context_new@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #102400	; 0x19000
   117f8:	ldr	pc, [ip, #2132]!	; 0x854

000117fc <dcgettext@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #102400	; 0x19000
   11804:	ldr	pc, [ip, #2124]!	; 0x84c

00011808 <context_type_set@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #102400	; 0x19000
   11810:	ldr	pc, [ip, #2116]!	; 0x844

00011814 <realloc@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #102400	; 0x19000
   1181c:	ldr	pc, [ip, #2108]!	; 0x83c

00011820 <fgetfilecon@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #102400	; 0x19000
   11828:	ldr	pc, [ip, #2100]!	; 0x834

0001182c <textdomain@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #102400	; 0x19000
   11834:	ldr	pc, [ip, #2092]!	; 0x82c

00011838 <rawmemchr@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #102400	; 0x19000
   11840:	ldr	pc, [ip, #2084]!	; 0x824

00011844 <__fxstatat64@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #102400	; 0x19000
   1184c:	ldr	pc, [ip, #2076]!	; 0x81c

00011850 <iswprint@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #102400	; 0x19000
   11858:	ldr	pc, [ip, #2068]!	; 0x814

0001185c <__fxstat64@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #102400	; 0x19000
   11864:	ldr	pc, [ip, #2060]!	; 0x80c

00011868 <readlink@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #102400	; 0x19000
   11870:	ldr	pc, [ip, #2052]!	; 0x804

00011874 <lseek64@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #102400	; 0x19000
   1187c:	ldr	pc, [ip, #2044]!	; 0x7fc

00011880 <__ctype_get_mb_cur_max@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #102400	; 0x19000
   11888:	ldr	pc, [ip, #2036]!	; 0x7f4

0001188c <getcon@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #102400	; 0x19000
   11894:	ldr	pc, [ip, #2028]!	; 0x7ec

00011898 <__fpending@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #102400	; 0x19000
   118a0:	ldr	pc, [ip, #2020]!	; 0x7e4

000118a4 <ferror_unlocked@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #102400	; 0x19000
   118ac:	ldr	pc, [ip, #2012]!	; 0x7dc

000118b0 <mbrtowc@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #102400	; 0x19000
   118b8:	ldr	pc, [ip, #2004]!	; 0x7d4

000118bc <error@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #102400	; 0x19000
   118c4:	ldr	pc, [ip, #1996]!	; 0x7cc

000118c8 <open64@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #102400	; 0x19000
   118d0:	ldr	pc, [ip, #1988]!	; 0x7c4

000118d4 <lgetfilecon@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #102400	; 0x19000
   118dc:	ldr	pc, [ip, #1980]!	; 0x7bc

000118e0 <malloc@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #102400	; 0x19000
   118e8:	ldr	pc, [ip, #1972]!	; 0x7b4

000118ec <__libc_start_main@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #102400	; 0x19000
   118f4:	ldr	pc, [ip, #1964]!	; 0x7ac

000118f8 <__freading@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #102400	; 0x19000
   11900:	ldr	pc, [ip, #1956]!	; 0x7a4

00011904 <__gmon_start__@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #102400	; 0x19000
   1190c:	ldr	pc, [ip, #1948]!	; 0x79c

00011910 <context_free@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #102400	; 0x19000
   11918:	ldr	pc, [ip, #1940]!	; 0x794

0001191c <getopt_long@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #102400	; 0x19000
   11924:	ldr	pc, [ip, #1932]!	; 0x78c

00011928 <__ctype_b_loc@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #102400	; 0x19000
   11930:	ldr	pc, [ip, #1924]!	; 0x784

00011934 <getcwd@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #102400	; 0x19000
   1193c:	ldr	pc, [ip, #1916]!	; 0x77c

00011940 <exit@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #102400	; 0x19000
   11948:	ldr	pc, [ip, #1908]!	; 0x774

0001194c <getfilecon@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #102400	; 0x19000
   11954:	ldr	pc, [ip, #1900]!	; 0x76c

00011958 <bcmp@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #102400	; 0x19000
   11960:	ldr	pc, [ip, #1892]!	; 0x764

00011964 <strlen@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #102400	; 0x19000
   1196c:	ldr	pc, [ip, #1884]!	; 0x75c

00011970 <selabel_open@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #102400	; 0x19000
   11978:	ldr	pc, [ip, #1876]!	; 0x754

0001197c <openat64@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #102400	; 0x19000
   11984:	ldr	pc, [ip, #1868]!	; 0x74c

00011988 <setfscreatecon@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #102400	; 0x19000
   11990:	ldr	pc, [ip, #1860]!	; 0x744

00011994 <__errno_location@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #102400	; 0x19000
   1199c:	ldr	pc, [ip, #1852]!	; 0x73c

000119a0 <__sprintf_chk@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #102400	; 0x19000
   119a8:	ldr	pc, [ip, #1844]!	; 0x734

000119ac <__cxa_atexit@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #102400	; 0x19000
   119b4:	ldr	pc, [ip, #1836]!	; 0x72c

000119b8 <memset@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #102400	; 0x19000
   119c0:	ldr	pc, [ip, #1828]!	; 0x724

000119c4 <__printf_chk@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #102400	; 0x19000
   119cc:	ldr	pc, [ip, #1820]!	; 0x71c

000119d0 <fileno@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #102400	; 0x19000
   119d8:	ldr	pc, [ip, #1812]!	; 0x714

000119dc <__fprintf_chk@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #102400	; 0x19000
   119e4:	ldr	pc, [ip, #1804]!	; 0x70c

000119e8 <fclose@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #102400	; 0x19000
   119f0:	ldr	pc, [ip, #1796]!	; 0x704

000119f4 <fseeko64@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #102400	; 0x19000
   119fc:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a00 <fcntl64@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #102400	; 0x19000
   11a08:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a0c <setlocale@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #102400	; 0x19000
   11a14:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a18 <fsetfilecon@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #102400	; 0x19000
   11a20:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a24 <strrchr@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #102400	; 0x19000
   11a2c:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a30 <nl_langinfo@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #102400	; 0x19000
   11a38:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a3c <readdir64@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #102400	; 0x19000
   11a44:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a48 <fdopendir@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #102400	; 0x19000
   11a50:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a54 <security_compute_create@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #102400	; 0x19000
   11a5c:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a60 <dirfd@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #102400	; 0x19000
   11a68:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a6c <fchdir@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #102400	; 0x19000
   11a74:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a78 <qsort@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #102400	; 0x19000
   11a80:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a84 <freecon@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #102400	; 0x19000
   11a8c:	ldr	pc, [ip, #1692]!	; 0x69c

00011a90 <bindtextdomain@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #102400	; 0x19000
   11a98:	ldr	pc, [ip, #1684]!	; 0x694

00011a9c <getfscreatecon@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #102400	; 0x19000
   11aa4:	ldr	pc, [ip, #1676]!	; 0x68c

00011aa8 <umask@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #102400	; 0x19000
   11ab0:	ldr	pc, [ip, #1668]!	; 0x684

00011ab4 <context_str@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #102400	; 0x19000
   11abc:	ldr	pc, [ip, #1660]!	; 0x67c

00011ac0 <chmod@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #102400	; 0x19000
   11ac8:	ldr	pc, [ip, #1652]!	; 0x674

00011acc <__xstat64@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #102400	; 0x19000
   11ad4:	ldr	pc, [ip, #1644]!	; 0x66c

00011ad8 <fputs@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #102400	; 0x19000
   11ae0:	ldr	pc, [ip, #1636]!	; 0x664

00011ae4 <strncmp@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #102400	; 0x19000
   11aec:	ldr	pc, [ip, #1628]!	; 0x65c

00011af0 <abort@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #102400	; 0x19000
   11af8:	ldr	pc, [ip, #1620]!	; 0x654

00011afc <close@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #102400	; 0x19000
   11b04:	ldr	pc, [ip, #1612]!	; 0x64c

00011b08 <__lxstat64@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #102400	; 0x19000
   11b10:	ldr	pc, [ip, #1604]!	; 0x644

00011b14 <mkfifo@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #102400	; 0x19000
   11b1c:	ldr	pc, [ip, #1596]!	; 0x63c

00011b20 <mode_to_security_class@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #102400	; 0x19000
   11b28:	ldr	pc, [ip, #1588]!	; 0x634

00011b2c <closedir@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #102400	; 0x19000
   11b34:	ldr	pc, [ip, #1580]!	; 0x62c

00011b38 <strspn@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #102400	; 0x19000
   11b40:	ldr	pc, [ip, #1572]!	; 0x624

00011b44 <__mempcpy_chk@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #102400	; 0x19000
   11b4c:	ldr	pc, [ip, #1564]!	; 0x61c

00011b50 <__assert_fail@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #102400	; 0x19000
   11b58:	ldr	pc, [ip, #1556]!	; 0x614

Disassembly of section .text:

00011b60 <lchmod@@Base-0x476c>:
   11b60:	mov	fp, #0
   11b64:	mov	lr, #0
   11b68:	pop	{r1}		; (ldr r1, [sp], #4)
   11b6c:	mov	r2, sp
   11b70:	push	{r2}		; (str r2, [sp, #-4]!)
   11b74:	push	{r0}		; (str r0, [sp, #-4]!)
   11b78:	ldr	ip, [pc, #16]	; 11b90 <__assert_fail@plt+0x40>
   11b7c:	push	{ip}		; (str ip, [sp, #-4]!)
   11b80:	ldr	r0, [pc, #12]	; 11b94 <__assert_fail@plt+0x44>
   11b84:	ldr	r3, [pc, #12]	; 11b98 <__assert_fail@plt+0x48>
   11b88:	bl	118ec <__libc_start_main@plt>
   11b8c:	bl	11af0 <abort@plt>
   11b90:	strdeq	r9, [r1], -r0
   11b94:	andeq	r1, r1, r8, asr #29
   11b98:	muleq	r1, r0, sl
   11b9c:	ldr	r3, [pc, #20]	; 11bb8 <__assert_fail@plt+0x68>
   11ba0:	ldr	r2, [pc, #20]	; 11bbc <__assert_fail@plt+0x6c>
   11ba4:	add	r3, pc, r3
   11ba8:	ldr	r2, [r3, r2]
   11bac:	cmp	r2, #0
   11bb0:	bxeq	lr
   11bb4:	b	11904 <__gmon_start__@plt>
   11bb8:	andeq	r9, r1, r4, asr r4
   11bbc:	andeq	r0, r0, r0, ror r1
   11bc0:	ldr	r0, [pc, #24]	; 11be0 <__assert_fail@plt+0x90>
   11bc4:	ldr	r3, [pc, #24]	; 11be4 <__assert_fail@plt+0x94>
   11bc8:	cmp	r3, r0
   11bcc:	bxeq	lr
   11bd0:	ldr	r3, [pc, #16]	; 11be8 <__assert_fail@plt+0x98>
   11bd4:	cmp	r3, #0
   11bd8:	bxeq	lr
   11bdc:	bx	r3
   11be0:	andeq	fp, r2, r8, asr #3
   11be4:	andeq	fp, r2, r8, asr #3
   11be8:	andeq	r0, r0, r0
   11bec:	ldr	r0, [pc, #36]	; 11c18 <__assert_fail@plt+0xc8>
   11bf0:	ldr	r1, [pc, #36]	; 11c1c <__assert_fail@plt+0xcc>
   11bf4:	sub	r1, r1, r0
   11bf8:	asr	r1, r1, #2
   11bfc:	add	r1, r1, r1, lsr #31
   11c00:	asrs	r1, r1, #1
   11c04:	bxeq	lr
   11c08:	ldr	r3, [pc, #16]	; 11c20 <__assert_fail@plt+0xd0>
   11c0c:	cmp	r3, #0
   11c10:	bxeq	lr
   11c14:	bx	r3
   11c18:	andeq	fp, r2, r8, asr #3
   11c1c:	andeq	fp, r2, r8, asr #3
   11c20:	andeq	r0, r0, r0
   11c24:	push	{r4, lr}
   11c28:	ldr	r4, [pc, #24]	; 11c48 <__assert_fail@plt+0xf8>
   11c2c:	ldrb	r3, [r4]
   11c30:	cmp	r3, #0
   11c34:	popne	{r4, pc}
   11c38:	bl	11bc0 <__assert_fail@plt+0x70>
   11c3c:	mov	r3, #1
   11c40:	strb	r3, [r4]
   11c44:	pop	{r4, pc}
   11c48:	andeq	fp, r2, r4, ror #3
   11c4c:	b	11bec <__assert_fail@plt+0x9c>
   11c50:	push	{fp, lr}
   11c54:	mov	fp, sp
   11c58:	sub	sp, sp, #56	; 0x38
   11c5c:	mov	r8, r0
   11c60:	cmp	r0, #0
   11c64:	bne	11e88 <__assert_fail@plt+0x338>
   11c68:	movw	r1, #39835	; 0x9b9b
   11c6c:	mov	r0, #0
   11c70:	mov	r2, #5
   11c74:	movt	r1, #1
   11c78:	bl	117fc <dcgettext@plt>
   11c7c:	mov	r1, r0
   11c80:	movw	r0, #45552	; 0xb1f0
   11c84:	movt	r0, #2
   11c88:	ldr	r2, [r0]
   11c8c:	mov	r0, #1
   11c90:	bl	119c4 <__printf_chk@plt>
   11c94:	movw	r1, #39866	; 0x9bba
   11c98:	mov	r0, #0
   11c9c:	mov	r2, #5
   11ca0:	movt	r1, #1
   11ca4:	bl	117fc <dcgettext@plt>
   11ca8:	movw	r9, #45532	; 0xb1dc
   11cac:	movt	r9, #2
   11cb0:	ldr	r1, [r9]
   11cb4:	bl	11754 <fputs_unlocked@plt>
   11cb8:	movw	r1, #40635	; 0x9ebb
   11cbc:	mov	r0, #0
   11cc0:	mov	r2, #5
   11cc4:	movt	r1, #1
   11cc8:	bl	117fc <dcgettext@plt>
   11ccc:	ldr	r1, [r9]
   11cd0:	bl	11754 <fputs_unlocked@plt>
   11cd4:	movw	r1, #39916	; 0x9bec
   11cd8:	mov	r0, #0
   11cdc:	mov	r2, #5
   11ce0:	movt	r1, #1
   11ce4:	bl	117fc <dcgettext@plt>
   11ce8:	ldr	r1, [r9]
   11cec:	bl	11754 <fputs_unlocked@plt>
   11cf0:	movw	r1, #39989	; 0x9c35
   11cf4:	mov	r0, #0
   11cf8:	mov	r2, #5
   11cfc:	movt	r1, #1
   11d00:	bl	117fc <dcgettext@plt>
   11d04:	ldr	r1, [r9]
   11d08:	bl	11754 <fputs_unlocked@plt>
   11d0c:	movw	r1, #40196	; 0x9d04
   11d10:	mov	r0, #0
   11d14:	mov	r2, #5
   11d18:	movt	r1, #1
   11d1c:	bl	117fc <dcgettext@plt>
   11d20:	ldr	r1, [r9]
   11d24:	bl	11754 <fputs_unlocked@plt>
   11d28:	movw	r1, #40241	; 0x9d31
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	movt	r1, #1
   11d38:	bl	117fc <dcgettext@plt>
   11d3c:	ldr	r1, [r9]
   11d40:	bl	11754 <fputs_unlocked@plt>
   11d44:	movw	r0, #41120	; 0xa0a0
   11d48:	mov	r6, sp
   11d4c:	movt	r0, #1
   11d50:	mov	r1, r6
   11d54:	ldm	r0!, {r2, r3, r4, r5}
   11d58:	stmia	r1!, {r2, r3, r4, r5}
   11d5c:	ldm	r0!, {r2, r3, r4, r5, r7}
   11d60:	stmia	r1!, {r2, r3, r4, r5, r7}
   11d64:	ldm	r0, {r2, r3, r4, r5, r7}
   11d68:	stm	r1, {r2, r3, r4, r5, r7}
   11d6c:	movw	r1, #40710	; 0x9f06
   11d70:	movw	r5, #40295	; 0x9d67
   11d74:	movt	r1, #1
   11d78:	movt	r5, #1
   11d7c:	mov	r0, r5
   11d80:	bl	11778 <strcmp@plt>
   11d84:	cmp	r0, #0
   11d88:	ldrne	r1, [r6, #8]!
   11d8c:	cmpne	r1, #0
   11d90:	bne	11d7c <__assert_fail@plt+0x22c>
   11d94:	movw	r1, #40805	; 0x9f65
   11d98:	ldr	r6, [r6, #4]
   11d9c:	mov	r0, #0
   11da0:	mov	r2, #5
   11da4:	movt	r1, #1
   11da8:	bl	117fc <dcgettext@plt>
   11dac:	movw	r2, #40431	; 0x9def
   11db0:	movw	r3, #40828	; 0x9f7c
   11db4:	mov	r1, r0
   11db8:	mov	r0, #1
   11dbc:	movt	r2, #1
   11dc0:	movt	r3, #1
   11dc4:	bl	119c4 <__printf_chk@plt>
   11dc8:	cmp	r6, #0
   11dcc:	mov	r0, #5
   11dd0:	mov	r1, #0
   11dd4:	moveq	r6, r5
   11dd8:	bl	11a0c <setlocale@plt>
   11ddc:	cmp	r0, #0
   11de0:	beq	11e18 <__assert_fail@plt+0x2c8>
   11de4:	movw	r1, #40868	; 0x9fa4
   11de8:	mov	r2, #3
   11dec:	movt	r1, #1
   11df0:	bl	11ae4 <strncmp@plt>
   11df4:	cmp	r0, #0
   11df8:	beq	11e18 <__assert_fail@plt+0x2c8>
   11dfc:	movw	r1, #40872	; 0x9fa8
   11e00:	mov	r0, #0
   11e04:	mov	r2, #5
   11e08:	movt	r1, #1
   11e0c:	bl	117fc <dcgettext@plt>
   11e10:	ldr	r1, [r9]
   11e14:	bl	11754 <fputs_unlocked@plt>
   11e18:	movw	r1, #40943	; 0x9fef
   11e1c:	mov	r0, #0
   11e20:	mov	r2, #5
   11e24:	movt	r1, #1
   11e28:	bl	117fc <dcgettext@plt>
   11e2c:	movw	r2, #40828	; 0x9f7c
   11e30:	mov	r1, r0
   11e34:	mov	r0, #1
   11e38:	mov	r3, r5
   11e3c:	movt	r2, #1
   11e40:	bl	119c4 <__printf_chk@plt>
   11e44:	movw	r1, #40970	; 0xa00a
   11e48:	mov	r0, #0
   11e4c:	mov	r2, #5
   11e50:	movt	r1, #1
   11e54:	bl	117fc <dcgettext@plt>
   11e58:	mov	r1, r0
   11e5c:	movw	r0, #40738	; 0x9f22
   11e60:	movw	r3, #41020	; 0xa03c
   11e64:	cmp	r6, r5
   11e68:	mov	r2, r6
   11e6c:	movt	r0, #1
   11e70:	movt	r3, #1
   11e74:	moveq	r3, r0
   11e78:	mov	r0, #1
   11e7c:	bl	119c4 <__printf_chk@plt>
   11e80:	mov	r0, r8
   11e84:	bl	11940 <exit@plt>
   11e88:	movw	r0, #45528	; 0xb1d8
   11e8c:	movw	r1, #39796	; 0x9b74
   11e90:	mov	r2, #5
   11e94:	movt	r0, #2
   11e98:	movt	r1, #1
   11e9c:	ldr	r5, [r0]
   11ea0:	mov	r0, #0
   11ea4:	bl	117fc <dcgettext@plt>
   11ea8:	mov	r2, r0
   11eac:	movw	r0, #45552	; 0xb1f0
   11eb0:	mov	r1, #1
   11eb4:	movt	r0, #2
   11eb8:	ldr	r3, [r0]
   11ebc:	mov	r0, r5
   11ec0:	bl	119dc <__fprintf_chk@plt>
   11ec4:	b	11e80 <__assert_fail@plt+0x330>
   11ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ecc:	add	fp, sp, #28
   11ed0:	sub	sp, sp, #20
   11ed4:	str	r0, [sp, #16]
   11ed8:	ldr	r0, [r1]
   11edc:	mov	r4, r1
   11ee0:	bl	16928 <lchmod@@Base+0x65c>
   11ee4:	movw	r1, #41020	; 0xa03c
   11ee8:	mov	r0, #6
   11eec:	movt	r1, #1
   11ef0:	bl	11a0c <setlocale@plt>
   11ef4:	movw	r6, #40435	; 0x9df3
   11ef8:	movw	r1, #40302	; 0x9d6e
   11efc:	movt	r6, #1
   11f00:	movt	r1, #1
   11f04:	mov	r0, r6
   11f08:	bl	11a90 <bindtextdomain@plt>
   11f0c:	mov	r0, r6
   11f10:	bl	1182c <textdomain@plt>
   11f14:	movw	r0, #12036	; 0x2f04
   11f18:	movt	r0, #1
   11f1c:	bl	19af4 <lchmod@@Base+0x3828>
   11f20:	movw	r5, #40326	; 0x9d86
   11f24:	movw	r6, #41040	; 0xa050
   11f28:	movw	r9, #45536	; 0xb1e0
   11f2c:	mov	r7, #0
   11f30:	mov	r8, #0
   11f34:	mov	sl, #0
   11f38:	mov	r0, #0
   11f3c:	movt	r5, #1
   11f40:	movt	r6, #1
   11f44:	movt	r9, #2
   11f48:	str	r0, [sp, #12]
   11f4c:	ldr	r0, [sp, #16]
   11f50:	mov	r1, r4
   11f54:	mov	r2, r5
   11f58:	mov	r3, r6
   11f5c:	str	r7, [sp]
   11f60:	bl	1191c <getopt_long@plt>
   11f64:	cmp	r0, #89	; 0x59
   11f68:	ble	12028 <__assert_fail@plt+0x4d8>
   11f6c:	cmp	r0, #90	; 0x5a
   11f70:	bne	12018 <__assert_fail@plt+0x4c8>
   11f74:	bl	1176c <is_selinux_enabled@plt>
   11f78:	ldr	r1, [r9]
   11f7c:	cmp	r0, #1
   11f80:	bge	11fb4 <__assert_fail@plt+0x464>
   11f84:	cmp	r1, #0
   11f88:	beq	11f4c <__assert_fail@plt+0x3fc>
   11f8c:	movw	r1, #40358	; 0x9da6
   11f90:	mov	r0, #0
   11f94:	mov	r2, #5
   11f98:	movt	r1, #1
   11f9c:	bl	117fc <dcgettext@plt>
   11fa0:	mov	r2, r0
   11fa4:	mov	r0, #0
   11fa8:	mov	r1, #0
   11fac:	bl	118bc <error@plt>
   11fb0:	b	11f4c <__assert_fail@plt+0x3fc>
   11fb4:	cmp	r1, #0
   11fb8:	bne	12010 <__assert_fail@plt+0x4c0>
   11fbc:	mov	r0, #0
   11fc0:	mov	r1, #0
   11fc4:	mov	r2, #0
   11fc8:	bl	11970 <selabel_open@plt>
   11fcc:	mov	sl, r0
   11fd0:	cmp	r0, #0
   11fd4:	bne	11f4c <__assert_fail@plt+0x3fc>
   11fd8:	bl	11994 <__errno_location@plt>
   11fdc:	ldr	r0, [r0]
   11fe0:	movw	r1, #40330	; 0x9d8a
   11fe4:	mov	r2, #5
   11fe8:	mov	sl, #0
   11fec:	movt	r1, #1
   11ff0:	str	r0, [sp, #8]
   11ff4:	mov	r0, #0
   11ff8:	bl	117fc <dcgettext@plt>
   11ffc:	ldr	r1, [sp, #8]
   12000:	mov	r2, r0
   12004:	mov	r0, #0
   12008:	bl	118bc <error@plt>
   1200c:	b	11f4c <__assert_fail@plt+0x3fc>
   12010:	mov	r8, r1
   12014:	b	11f4c <__assert_fail@plt+0x3fc>
   12018:	cmp	r0, #109	; 0x6d
   1201c:	bne	12244 <__assert_fail@plt+0x6f4>
   12020:	ldr	r0, [r9]
   12024:	b	11f48 <__assert_fail@plt+0x3f8>
   12028:	cmn	r0, #1
   1202c:	bne	121c0 <__assert_fail@plt+0x670>
   12030:	movw	r9, #45520	; 0xb1d0
   12034:	ldr	r1, [sp, #16]
   12038:	movt	r9, #2
   1203c:	ldr	r0, [r9]
   12040:	cmp	r0, r1
   12044:	beq	12220 <__assert_fail@plt+0x6d0>
   12048:	cmp	r8, #0
   1204c:	beq	12060 <__assert_fail@plt+0x510>
   12050:	mov	r0, r8
   12054:	bl	11988 <setfscreatecon@plt>
   12058:	cmn	r0, #1
   1205c:	ble	1224c <__assert_fail@plt+0x6fc>
   12060:	ldr	r0, [sp, #12]
   12064:	cmp	r0, #0
   12068:	beq	120c8 <__assert_fail@plt+0x578>
   1206c:	bl	163e8 <lchmod@@Base+0x11c>
   12070:	cmp	r0, #0
   12074:	beq	12288 <__assert_fail@plt+0x738>
   12078:	mov	r8, r0
   1207c:	mov	r0, #0
   12080:	mov	r5, #0
   12084:	bl	11aa8 <umask@plt>
   12088:	mov	r6, r0
   1208c:	bl	11aa8 <umask@plt>
   12090:	movw	r0, #438	; 0x1b6
   12094:	mov	r1, #0
   12098:	mov	r2, r6
   1209c:	mov	r3, r8
   120a0:	str	r5, [sp]
   120a4:	bl	16788 <lchmod@@Base+0x4bc>
   120a8:	mov	r6, r0
   120ac:	mov	r0, r8
   120b0:	bl	13178 <__assert_fail@plt+0x1628>
   120b4:	cmp	r6, #512	; 0x200
   120b8:	bcc	120cc <__assert_fail@plt+0x57c>
   120bc:	movw	r1, #40540	; 0x9e5c
   120c0:	movt	r1, #1
   120c4:	b	12290 <__assert_fail@plt+0x740>
   120c8:	movw	r6, #438	; 0x1b6
   120cc:	ldr	r0, [r9]
   120d0:	ldr	r1, [sp, #16]
   120d4:	mov	r8, #0
   120d8:	cmp	r0, r1
   120dc:	bge	121b4 <__assert_fail@plt+0x664>
   120e0:	mov	r8, #0
   120e4:	cmp	sl, #0
   120e8:	beq	12100 <__assert_fail@plt+0x5b0>
   120ec:	ldr	r1, [r4, r0, lsl #2]
   120f0:	mov	r0, sl
   120f4:	mov	r2, #4096	; 0x1000
   120f8:	bl	122ac <__assert_fail@plt+0x75c>
   120fc:	ldr	r0, [r9]
   12100:	ldr	r0, [r4, r0, lsl #2]
   12104:	mov	r1, r6
   12108:	bl	11b14 <mkfifo@plt>
   1210c:	cmp	r0, #0
   12110:	beq	12178 <__assert_fail@plt+0x628>
   12114:	bl	11994 <__errno_location@plt>
   12118:	ldr	r5, [r0]
   1211c:	movw	r1, #40584	; 0x9e88
   12120:	mov	r0, #0
   12124:	movt	r1, #1
   12128:	mov	r2, #5
   1212c:	bl	117fc <dcgettext@plt>
   12130:	mov	r7, r0
   12134:	ldr	r0, [r9]
   12138:	ldr	r1, [r4, r0, lsl #2]
   1213c:	mov	r0, #4
   12140:	bl	17fdc <lchmod@@Base+0x1d10>
   12144:	mov	r3, r0
   12148:	mov	r0, #0
   1214c:	mov	r1, r5
   12150:	mov	r2, r7
   12154:	bl	118bc <error@plt>
   12158:	mov	r8, #1
   1215c:	ldr	r0, [r9]
   12160:	ldr	r1, [sp, #16]
   12164:	add	r0, r0, #1
   12168:	cmp	r0, r1
   1216c:	str	r0, [r9]
   12170:	blt	120e4 <__assert_fail@plt+0x594>
   12174:	b	121b4 <__assert_fail@plt+0x664>
   12178:	ldr	r0, [sp, #12]
   1217c:	cmp	r0, #0
   12180:	beq	1215c <__assert_fail@plt+0x60c>
   12184:	ldr	r0, [r9]
   12188:	mov	r1, r6
   1218c:	ldr	r0, [r4, r0, lsl #2]
   12190:	bl	162cc <lchmod@@Base>
   12194:	cmp	r0, #0
   12198:	beq	1215c <__assert_fail@plt+0x60c>
   1219c:	bl	11994 <__errno_location@plt>
   121a0:	ldr	r5, [r0]
   121a4:	movw	r1, #40606	; 0x9e9e
   121a8:	mov	r0, #0
   121ac:	movt	r1, #1
   121b0:	b	12128 <__assert_fail@plt+0x5d8>
   121b4:	mov	r0, r8
   121b8:	sub	sp, fp, #28
   121bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121c0:	cmn	r0, #3
   121c4:	bne	12210 <__assert_fail@plt+0x6c0>
   121c8:	movw	r0, #45440	; 0xb180
   121cc:	movw	r2, #40445	; 0x9dfd
   121d0:	mov	r1, #0
   121d4:	movt	r0, #2
   121d8:	movt	r2, #1
   121dc:	str	r1, [sp, #4]
   121e0:	movw	r1, #40295	; 0x9d67
   121e4:	movt	r1, #1
   121e8:	ldr	r3, [r0]
   121ec:	movw	r0, #45532	; 0xb1dc
   121f0:	str	r2, [sp]
   121f4:	movw	r2, #40431	; 0x9def
   121f8:	movt	r0, #2
   121fc:	movt	r2, #1
   12200:	ldr	r0, [r0]
   12204:	bl	18a98 <lchmod@@Base+0x27cc>
   12208:	mov	r0, #0
   1220c:	bl	11940 <exit@plt>
   12210:	cmn	r0, #2
   12214:	bne	12244 <__assert_fail@plt+0x6f4>
   12218:	mov	r0, #0
   1221c:	bl	11c50 <__assert_fail@plt+0x100>
   12220:	movw	r1, #40461	; 0x9e0d
   12224:	mov	r0, #0
   12228:	mov	r2, #5
   1222c:	movt	r1, #1
   12230:	bl	117fc <dcgettext@plt>
   12234:	mov	r2, r0
   12238:	mov	r0, #0
   1223c:	mov	r1, #0
   12240:	bl	118bc <error@plt>
   12244:	mov	r0, #1
   12248:	bl	11c50 <__assert_fail@plt+0x100>
   1224c:	bl	11994 <__errno_location@plt>
   12250:	movw	r1, #40477	; 0x9e1d
   12254:	ldr	r4, [r0]
   12258:	mov	r0, #0
   1225c:	mov	r2, #5
   12260:	movt	r1, #1
   12264:	bl	117fc <dcgettext@plt>
   12268:	mov	r5, r0
   1226c:	mov	r0, r8
   12270:	bl	18314 <lchmod@@Base+0x2048>
   12274:	mov	r3, r0
   12278:	mov	r0, #1
   1227c:	mov	r1, r4
   12280:	mov	r2, r5
   12284:	bl	118bc <error@plt>
   12288:	movw	r1, #40527	; 0x9e4f
   1228c:	movt	r1, #1
   12290:	mov	r0, #0
   12294:	mov	r2, #5
   12298:	bl	117fc <dcgettext@plt>
   1229c:	mov	r2, r0
   122a0:	mov	r0, #1
   122a4:	mov	r1, #0
   122a8:	bl	118bc <error@plt>
   122ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   122b0:	add	fp, sp, #24
   122b4:	sub	sp, sp, #16
   122b8:	mov	r4, #0
   122bc:	mov	r7, r0
   122c0:	mov	r5, r2
   122c4:	mov	r6, r1
   122c8:	str	r4, [sp, #4]
   122cc:	str	r4, [sp]
   122d0:	ldrb	r0, [r1]
   122d4:	cmp	r0, #47	; 0x2f
   122d8:	beq	122f8 <__assert_fail@plt+0x7a8>
   122dc:	mov	r0, r6
   122e0:	mov	r1, #2
   122e4:	bl	12808 <__assert_fail@plt+0xcb8>
   122e8:	mov	r4, r0
   122ec:	cmp	r0, #0
   122f0:	mov	r6, r0
   122f4:	beq	12448 <__assert_fail@plt+0x8f8>
   122f8:	add	r1, sp, #4
   122fc:	mov	r0, r7
   12300:	mov	r2, r6
   12304:	mov	r3, r5
   12308:	bl	1173c <selabel_lookup@plt>
   1230c:	cmn	r0, #1
   12310:	ble	12420 <__assert_fail@plt+0x8d0>
   12314:	mov	r0, #0
   12318:	str	r0, [sp, #12]
   1231c:	str	r0, [sp, #8]
   12320:	mov	r0, r6
   12324:	bl	12fec <__assert_fail@plt+0x149c>
   12328:	mov	r6, r0
   1232c:	add	r0, sp, #12
   12330:	bl	1188c <getcon@plt>
   12334:	mov	r9, #1
   12338:	cmp	r0, #0
   1233c:	bmi	1237c <__assert_fail@plt+0x82c>
   12340:	add	r1, sp, #8
   12344:	mov	r0, r6
   12348:	bl	185d4 <lchmod@@Base+0x2308>
   1234c:	cmp	r0, #0
   12350:	bmi	1237c <__assert_fail@plt+0x82c>
   12354:	mov	r0, r5
   12358:	bl	11b20 <mode_to_security_class@plt>
   1235c:	cmp	r0, #0
   12360:	beq	1237c <__assert_fail@plt+0x82c>
   12364:	mov	r2, r0
   12368:	ldr	r1, [sp, #8]
   1236c:	ldr	r0, [sp, #12]
   12370:	mov	r3, sp
   12374:	bl	11a54 <security_compute_create@plt>
   12378:	lsr	r9, r0, #31
   1237c:	bl	11994 <__errno_location@plt>
   12380:	ldr	r7, [r0]
   12384:	mov	r5, r0
   12388:	mov	r0, r6
   1238c:	bl	13178 <__assert_fail@plt+0x1628>
   12390:	ldr	r0, [sp, #12]
   12394:	bl	11a84 <freecon@plt>
   12398:	ldr	r0, [sp, #8]
   1239c:	bl	11a84 <freecon@plt>
   123a0:	mvn	r8, #0
   123a4:	cmp	r9, #0
   123a8:	str	r7, [r5]
   123ac:	bne	12418 <__assert_fail@plt+0x8c8>
   123b0:	ldr	r0, [sp, #4]
   123b4:	bl	117f0 <context_new@plt>
   123b8:	cmp	r0, #0
   123bc:	beq	12418 <__assert_fail@plt+0x8c8>
   123c0:	mov	r6, r0
   123c4:	ldr	r0, [sp]
   123c8:	bl	117f0 <context_new@plt>
   123cc:	cmp	r0, #0
   123d0:	beq	12464 <__assert_fail@plt+0x914>
   123d4:	mov	r9, r0
   123d8:	mov	r0, r6
   123dc:	bl	11784 <context_type_get@plt>
   123e0:	cmp	r0, #0
   123e4:	beq	12468 <__assert_fail@plt+0x918>
   123e8:	mov	r1, r0
   123ec:	mov	r0, r9
   123f0:	bl	11808 <context_type_set@plt>
   123f4:	cmp	r0, #0
   123f8:	bne	12468 <__assert_fail@plt+0x918>
   123fc:	mov	r0, r9
   12400:	bl	11ab4 <context_str@plt>
   12404:	cmp	r0, #0
   12408:	beq	12468 <__assert_fail@plt+0x918>
   1240c:	bl	11988 <setfscreatecon@plt>
   12410:	mov	r8, r0
   12414:	b	12468 <__assert_fail@plt+0x918>
   12418:	mov	r9, #0
   1241c:	b	12440 <__assert_fail@plt+0x8f0>
   12420:	bl	11994 <__errno_location@plt>
   12424:	mov	r5, r0
   12428:	ldr	r0, [r0]
   1242c:	mvn	r8, #0
   12430:	mov	r9, #0
   12434:	cmp	r0, #2
   12438:	moveq	r0, #61	; 0x3d
   1243c:	streq	r0, [r5]
   12440:	mov	r6, #0
   12444:	b	12468 <__assert_fail@plt+0x918>
   12448:	mov	r9, #0
   1244c:	mvn	r8, #0
   12450:	bl	11994 <__errno_location@plt>
   12454:	mov	r5, r0
   12458:	mov	r6, #0
   1245c:	mov	r4, #0
   12460:	b	12468 <__assert_fail@plt+0x918>
   12464:	mov	r9, #0
   12468:	ldr	r7, [r5]
   1246c:	mov	r0, r6
   12470:	bl	11910 <context_free@plt>
   12474:	mov	r0, r9
   12478:	bl	11910 <context_free@plt>
   1247c:	ldr	r0, [sp, #4]
   12480:	bl	11a84 <freecon@plt>
   12484:	ldr	r0, [sp]
   12488:	bl	11a84 <freecon@plt>
   1248c:	mov	r0, r4
   12490:	bl	13178 <__assert_fail@plt+0x1628>
   12494:	str	r7, [r5]
   12498:	mov	r0, r8
   1249c:	sub	sp, fp, #24
   124a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   124a4:	push	{r4, r5, r6, r7, fp, lr}
   124a8:	add	fp, sp, #16
   124ac:	sub	sp, sp, #8
   124b0:	mov	r5, r0
   124b4:	ldrb	r0, [r1]
   124b8:	mov	r6, r2
   124bc:	mov	r4, #0
   124c0:	cmp	r0, #47	; 0x2f
   124c4:	beq	124e4 <__assert_fail@plt+0x994>
   124c8:	mov	r0, r1
   124cc:	mov	r1, #2
   124d0:	bl	12808 <__assert_fail@plt+0xcb8>
   124d4:	mov	r4, r0
   124d8:	cmp	r0, #0
   124dc:	mov	r1, r0
   124e0:	beq	125b0 <__assert_fail@plt+0xa60>
   124e4:	cmp	r6, #0
   124e8:	beq	1257c <__assert_fail@plt+0xa2c>
   124ec:	mov	r7, #0
   124f0:	stm	sp, {r1, r7}
   124f4:	mov	r0, sp
   124f8:	mov	r1, #16
   124fc:	mov	r2, #0
   12500:	bl	19010 <lchmod@@Base+0x2d44>
   12504:	mov	r6, r0
   12508:	bl	13a70 <__assert_fail@plt+0x1f20>
   1250c:	cmp	r0, #0
   12510:	beq	12544 <__assert_fail@plt+0x9f4>
   12514:	mov	r7, #0
   12518:	ldr	r1, [r6, #24]
   1251c:	mov	r0, r5
   12520:	bl	125bc <__assert_fail@plt+0xa6c>
   12524:	cmn	r0, #1
   12528:	bgt	12534 <__assert_fail@plt+0x9e4>
   1252c:	bl	11994 <__errno_location@plt>
   12530:	ldr	r7, [r0]
   12534:	mov	r0, r6
   12538:	bl	13a70 <__assert_fail@plt+0x1f20>
   1253c:	cmp	r0, #0
   12540:	bne	12518 <__assert_fail@plt+0x9c8>
   12544:	bl	11994 <__errno_location@plt>
   12548:	mov	r5, r0
   1254c:	ldr	r0, [r0]
   12550:	cmp	r0, #0
   12554:	movne	r7, r0
   12558:	mov	r0, r6
   1255c:	bl	138e8 <__assert_fail@plt+0x1d98>
   12560:	cmp	r0, #0
   12564:	mov	r0, r4
   12568:	ldrne	r7, [r5]
   1256c:	bl	13178 <__assert_fail@plt+0x1628>
   12570:	clz	r0, r7
   12574:	lsr	r0, r0, #5
   12578:	b	125b4 <__assert_fail@plt+0xa64>
   1257c:	mov	r0, r5
   12580:	bl	125bc <__assert_fail@plt+0xa6c>
   12584:	mov	r5, r0
   12588:	bl	11994 <__errno_location@plt>
   1258c:	ldr	r7, [r0]
   12590:	mov	r6, r0
   12594:	mov	r0, r4
   12598:	bl	13178 <__assert_fail@plt+0x1628>
   1259c:	mvn	r0, #0
   125a0:	str	r7, [r6]
   125a4:	subs	r0, r5, r0
   125a8:	movwne	r0, #1
   125ac:	b	125b4 <__assert_fail@plt+0xa64>
   125b0:	mov	r0, #0
   125b4:	sub	sp, fp, #16
   125b8:	pop	{r4, r5, r6, r7, fp, pc}
   125bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125c0:	add	fp, sp, #28
   125c4:	sub	sp, sp, #116	; 0x74
   125c8:	mov	r6, r0
   125cc:	mov	r0, #0
   125d0:	mov	r7, r1
   125d4:	cmp	r6, #0
   125d8:	str	r0, [sp, #4]
   125dc:	str	r0, [sp]
   125e0:	beq	12630 <__assert_fail@plt+0xae0>
   125e4:	mov	r0, r7
   125e8:	mov	r1, #32768	; 0x8000
   125ec:	bl	118c8 <open64@plt>
   125f0:	mov	sl, r0
   125f4:	cmn	r0, #1
   125f8:	beq	1266c <__assert_fail@plt+0xb1c>
   125fc:	add	r1, sp, #8
   12600:	mov	r0, sl
   12604:	bl	19b1c <lchmod@@Base+0x3850>
   12608:	mov	r5, #1
   1260c:	cmn	r0, #1
   12610:	bgt	126a0 <__assert_fail@plt+0xb50>
   12614:	bl	11994 <__errno_location@plt>
   12618:	ldr	r5, [r0]
   1261c:	mov	r4, r0
   12620:	mov	r8, #0
   12624:	mvn	r9, #0
   12628:	mov	r6, #0
   1262c:	b	127b0 <__assert_fail@plt+0xc60>
   12630:	mov	r0, sp
   12634:	bl	11a9c <getfscreatecon@plt>
   12638:	mvn	r9, #0
   1263c:	cmp	r0, #0
   12640:	bmi	127ec <__assert_fail@plt+0xc9c>
   12644:	ldr	r1, [sp]
   12648:	cmp	r1, #0
   1264c:	beq	1270c <__assert_fail@plt+0xbbc>
   12650:	mov	r0, r7
   12654:	bl	1179c <lsetfilecon@plt>
   12658:	mov	r9, r0
   1265c:	bl	11994 <__errno_location@plt>
   12660:	ldr	r5, [r0]
   12664:	mov	r4, r0
   12668:	b	127e0 <__assert_fail@plt+0xc90>
   1266c:	bl	11994 <__errno_location@plt>
   12670:	ldr	r5, [r0]
   12674:	mov	r4, r0
   12678:	mov	r8, #0
   1267c:	mvn	r9, #0
   12680:	cmp	r5, #40	; 0x28
   12684:	bne	127c4 <__assert_fail@plt+0xc74>
   12688:	add	r1, sp, #8
   1268c:	mov	r0, r7
   12690:	bl	19b2c <lchmod@@Base+0x3860>
   12694:	mov	r5, #0
   12698:	cmn	r0, #1
   1269c:	ble	127bc <__assert_fail@plt+0xc6c>
   126a0:	ldr	r3, [sp, #24]
   126a4:	add	r1, sp, #4
   126a8:	mov	r0, r6
   126ac:	mov	r2, r7
   126b0:	bl	1173c <selabel_lookup@plt>
   126b4:	cmn	r0, #1
   126b8:	ble	126ec <__assert_fail@plt+0xb9c>
   126bc:	ldr	r0, [sp, #4]
   126c0:	bl	117f0 <context_new@plt>
   126c4:	mvn	r9, #0
   126c8:	cmp	r0, #0
   126cc:	beq	1271c <__assert_fail@plt+0xbcc>
   126d0:	mov	r8, r0
   126d4:	mov	r1, sp
   126d8:	cmp	r5, #0
   126dc:	beq	12728 <__assert_fail@plt+0xbd8>
   126e0:	mov	r0, sl
   126e4:	bl	1867c <lchmod@@Base+0x23b0>
   126e8:	b	12730 <__assert_fail@plt+0xbe0>
   126ec:	bl	11994 <__errno_location@plt>
   126f0:	ldr	r1, [r0]
   126f4:	mvn	r9, #0
   126f8:	mov	r6, #0
   126fc:	cmp	r1, #2
   12700:	moveq	r1, #61	; 0x3d
   12704:	streq	r1, [r0]
   12708:	b	12720 <__assert_fail@plt+0xbd0>
   1270c:	bl	11994 <__errno_location@plt>
   12710:	mov	r1, #61	; 0x3d
   12714:	str	r1, [r0]
   12718:	b	127ec <__assert_fail@plt+0xc9c>
   1271c:	mov	r6, #0
   12720:	mov	r8, #0
   12724:	b	1279c <__assert_fail@plt+0xc4c>
   12728:	mov	r0, r7
   1272c:	bl	18660 <lchmod@@Base+0x2394>
   12730:	cmp	r0, #0
   12734:	bmi	12798 <__assert_fail@plt+0xc48>
   12738:	ldr	r0, [sp]
   1273c:	bl	117f0 <context_new@plt>
   12740:	cmp	r0, #0
   12744:	beq	12798 <__assert_fail@plt+0xc48>
   12748:	mov	r6, r0
   1274c:	mov	r0, r8
   12750:	bl	11784 <context_type_get@plt>
   12754:	cmp	r0, #0
   12758:	beq	1279c <__assert_fail@plt+0xc4c>
   1275c:	mov	r1, r0
   12760:	mov	r0, r6
   12764:	bl	11808 <context_type_set@plt>
   12768:	cmp	r0, #0
   1276c:	bne	1279c <__assert_fail@plt+0xc4c>
   12770:	mov	r0, r6
   12774:	bl	11ab4 <context_str@plt>
   12778:	cmp	r0, #0
   1277c:	beq	1279c <__assert_fail@plt+0xc4c>
   12780:	mov	r1, r0
   12784:	cmp	r5, #0
   12788:	beq	127f8 <__assert_fail@plt+0xca8>
   1278c:	mov	r0, sl
   12790:	bl	11a18 <fsetfilecon@plt>
   12794:	b	12800 <__assert_fail@plt+0xcb0>
   12798:	mov	r6, #0
   1279c:	bl	11994 <__errno_location@plt>
   127a0:	ldr	r5, [r0]
   127a4:	mov	r4, r0
   127a8:	cmn	sl, #1
   127ac:	beq	127c8 <__assert_fail@plt+0xc78>
   127b0:	mov	r0, sl
   127b4:	bl	11afc <close@plt>
   127b8:	b	127c8 <__assert_fail@plt+0xc78>
   127bc:	ldr	r5, [r4]
   127c0:	mov	r8, #0
   127c4:	mov	r6, #0
   127c8:	mov	r0, r8
   127cc:	bl	11910 <context_free@plt>
   127d0:	mov	r0, r6
   127d4:	bl	11910 <context_free@plt>
   127d8:	ldr	r0, [sp, #4]
   127dc:	bl	11a84 <freecon@plt>
   127e0:	ldr	r0, [sp]
   127e4:	bl	11a84 <freecon@plt>
   127e8:	str	r5, [r4]
   127ec:	mov	r0, r9
   127f0:	sub	sp, fp, #28
   127f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127f8:	mov	r0, r7
   127fc:	bl	1179c <lsetfilecon@plt>
   12800:	mov	r9, r0
   12804:	b	1279c <__assert_fail@plt+0xc4c>
   12808:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1280c:	add	fp, sp, #28
   12810:	sub	sp, sp, #180	; 0xb4
   12814:	sub	sp, sp, #3072	; 0xc00
   12818:	and	r7, r1, #3
   1281c:	mov	r8, r0
   12820:	sub	r0, r7, #1
   12824:	tst	r7, r0
   12828:	bne	128b4 <__assert_fail@plt+0xd64>
   1282c:	cmp	r8, #0
   12830:	beq	128b4 <__assert_fail@plt+0xd64>
   12834:	ldrb	r0, [r8]
   12838:	cmp	r0, #0
   1283c:	beq	128d0 <__assert_fail@plt+0xd80>
   12840:	mov	r4, r1
   12844:	mov	r1, #1024	; 0x400
   12848:	sub	lr, fp, #1024	; 0x400
   1284c:	cmp	r0, #47	; 0x2f
   12850:	str	r1, [fp, #-1060]	; 0xfffffbdc
   12854:	str	r1, [sp, #52]	; 0x34
   12858:	str	r1, [sp, #1188]	; 0x4a4
   1285c:	add	r1, sp, #1184	; 0x4a0
   12860:	sub	r2, lr, #40	; 0x28
   12864:	add	r1, r1, #8
   12868:	add	r2, r2, #8
   1286c:	str	r1, [sp, #16]
   12870:	str	r1, [sp, #1184]	; 0x4a0
   12874:	add	r1, sp, #48	; 0x30
   12878:	str	r2, [sp, #12]
   1287c:	str	r2, [fp, #-1064]	; 0xfffffbd8
   12880:	add	r5, r1, #8
   12884:	mov	r0, r5
   12888:	str	r5, [sp, #48]	; 0x30
   1288c:	str	r5, [sp, #8]
   12890:	bne	128dc <__assert_fail@plt+0xd8c>
   12894:	mov	r1, r8
   12898:	mov	r2, #0
   1289c:	mov	r3, #1024	; 0x400
   128a0:	bl	11b44 <__mempcpy_chk@plt>
   128a4:	mov	r6, r0
   128a8:	mov	r0, #47	; 0x2f
   128ac:	strb	r0, [r6], #1
   128b0:	b	128fc <__assert_fail@plt+0xdac>
   128b4:	bl	11994 <__errno_location@plt>
   128b8:	mov	r1, #22
   128bc:	mov	r4, #0
   128c0:	str	r1, [r0]
   128c4:	mov	r0, r4
   128c8:	sub	sp, fp, #28
   128cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128d0:	bl	11994 <__errno_location@plt>
   128d4:	mov	r1, #2
   128d8:	b	128bc <__assert_fail@plt+0xd6c>
   128dc:	mov	r1, #1024	; 0x400
   128e0:	bl	11934 <getcwd@plt>
   128e4:	cmp	r0, #0
   128e8:	beq	12e08 <__assert_fail@plt+0x12b8>
   128ec:	mov	r0, r5
   128f0:	mov	r1, #0
   128f4:	bl	11838 <rawmemchr@plt>
   128f8:	mov	r6, r0
   128fc:	ldrb	r0, [r8]
   12900:	cmp	r0, #0
   12904:	beq	12dcc <__assert_fail@plt+0x127c>
   12908:	and	r1, r4, #4
   1290c:	add	r9, sp, #48	; 0x30
   12910:	str	r7, [sp, #32]
   12914:	str	r1, [sp, #40]	; 0x28
   12918:	mov	r1, #0
   1291c:	str	r1, [sp, #24]
   12920:	mov	r1, #0
   12924:	str	r1, [sp, #36]	; 0x24
   12928:	mov	r1, #0
   1292c:	str	r1, [sp, #20]
   12930:	uxtb	r1, r0
   12934:	cmp	r1, #47	; 0x2f
   12938:	bne	12948 <__assert_fail@plt+0xdf8>
   1293c:	ldrb	r0, [r8, #1]!
   12940:	cmp	r0, #47	; 0x2f
   12944:	beq	1293c <__assert_fail@plt+0xdec>
   12948:	mov	r1, r0
   1294c:	mov	sl, r8
   12950:	b	12958 <__assert_fail@plt+0xe08>
   12954:	ldrb	r1, [sl, #1]!
   12958:	uxtb	r1, r1
   1295c:	cmp	r1, #0
   12960:	cmpne	r1, #47	; 0x2f
   12964:	bne	12954 <__assert_fail@plt+0xe04>
   12968:	sub	r2, sl, r8
   1296c:	cmp	r2, #1
   12970:	beq	12988 <__assert_fail@plt+0xe38>
   12974:	cmp	r2, #2
   12978:	beq	12998 <__assert_fail@plt+0xe48>
   1297c:	cmp	r2, #0
   12980:	bne	129e0 <__assert_fail@plt+0xe90>
   12984:	b	12dd4 <__assert_fail@plt+0x1284>
   12988:	uxtb	r0, r0
   1298c:	cmp	r0, #46	; 0x2e
   12990:	bne	129e0 <__assert_fail@plt+0xe90>
   12994:	b	12ad4 <__assert_fail@plt+0xf84>
   12998:	uxtb	r0, r0
   1299c:	cmp	r0, #46	; 0x2e
   129a0:	bne	129e0 <__assert_fail@plt+0xe90>
   129a4:	ldrb	r0, [r8, #1]
   129a8:	cmp	r0, #46	; 0x2e
   129ac:	bne	129e0 <__assert_fail@plt+0xe90>
   129b0:	add	r0, r5, #1
   129b4:	cmp	r6, r0
   129b8:	bls	12ad4 <__assert_fail@plt+0xf84>
   129bc:	sub	r0, r6, #1
   129c0:	mov	r6, r0
   129c4:	cmp	r0, r5
   129c8:	bls	12ad4 <__assert_fail@plt+0xf84>
   129cc:	mov	r0, r6
   129d0:	ldrb	r1, [r0, #-1]!
   129d4:	cmp	r1, #47	; 0x2f
   129d8:	bne	129c0 <__assert_fail@plt+0xe70>
   129dc:	b	12ad4 <__assert_fail@plt+0xf84>
   129e0:	ldrb	r0, [r6, #-1]
   129e4:	add	r4, r2, #2
   129e8:	str	r2, [sp, #44]	; 0x2c
   129ec:	cmp	r0, #47	; 0x2f
   129f0:	movne	r0, #47	; 0x2f
   129f4:	strbne	r0, [r6], #1
   129f8:	ldr	r0, [sp, #52]	; 0x34
   129fc:	add	r0, r5, r0
   12a00:	sub	r0, r0, r6
   12a04:	cmp	r0, r4
   12a08:	bcs	12a40 <__assert_fail@plt+0xef0>
   12a0c:	mov	r0, r9
   12a10:	bl	18530 <lchmod@@Base+0x2264>
   12a14:	cmp	r0, #0
   12a18:	beq	12ecc <__assert_fail@plt+0x137c>
   12a1c:	sub	r0, r6, r5
   12a20:	ldr	r5, [sp, #48]	; 0x30
   12a24:	ldr	r1, [sp, #52]	; 0x34
   12a28:	add	r6, r5, r0
   12a2c:	add	r0, r5, r1
   12a30:	sub	r0, r0, r6
   12a34:	cmp	r0, r4
   12a38:	bcc	12a0c <__assert_fail@plt+0xebc>
   12a3c:	ldr	r2, [sp, #44]	; 0x2c
   12a40:	mov	r0, r6
   12a44:	mov	r1, r8
   12a48:	mvn	r3, #0
   12a4c:	bl	11b44 <__mempcpy_chk@plt>
   12a50:	mov	r6, r0
   12a54:	mov	r0, #0
   12a58:	strb	r0, [r6]
   12a5c:	ldr	r0, [sp, #40]	; 0x28
   12a60:	cmp	r0, #0
   12a64:	bne	12ac8 <__assert_fail@plt+0xf78>
   12a68:	ldr	r0, [sp, #1188]	; 0x4a4
   12a6c:	ldr	r7, [sp, #1184]	; 0x4a0
   12a70:	sub	r9, r0, #1
   12a74:	mov	r0, r5
   12a78:	mov	r1, r7
   12a7c:	mov	r2, r9
   12a80:	bl	11868 <readlink@plt>
   12a84:	cmp	r0, r9
   12a88:	blt	12aa0 <__assert_fail@plt+0xf50>
   12a8c:	add	r0, sp, #1184	; 0x4a0
   12a90:	bl	184c4 <lchmod@@Base+0x21f8>
   12a94:	cmp	r0, #0
   12a98:	bne	12a68 <__assert_fail@plt+0xf18>
   12a9c:	b	12ecc <__assert_fail@plt+0x137c>
   12aa0:	mov	r4, r0
   12aa4:	cmp	r0, #0
   12aa8:	add	r9, sp, #48	; 0x30
   12aac:	bmi	12ac8 <__assert_fail@plt+0xf78>
   12ab0:	ldr	r0, [sp, #24]
   12ab4:	cmp	r0, #19
   12ab8:	bgt	12b4c <__assert_fail@plt+0xffc>
   12abc:	add	r0, r0, #1
   12ac0:	str	r0, [sp, #24]
   12ac4:	b	12cb4 <__assert_fail@plt+0x1164>
   12ac8:	ldr	r7, [sp, #32]
   12acc:	cmp	r7, #2
   12ad0:	bne	12ae8 <__assert_fail@plt+0xf98>
   12ad4:	mov	r8, sl
   12ad8:	ldrb	r0, [r8]
   12adc:	cmp	r0, #0
   12ae0:	bne	12930 <__assert_fail@plt+0xde0>
   12ae4:	b	12dd4 <__assert_fail@plt+0x1284>
   12ae8:	ldrb	r0, [sl]
   12aec:	cmp	r0, #47	; 0x2f
   12af0:	bne	12c1c <__assert_fail@plt+0x10cc>
   12af4:	mov	r2, sl
   12af8:	mov	r1, r2
   12afc:	ldrb	r3, [r2, #1]!
   12b00:	cmp	r3, #47	; 0x2f
   12b04:	beq	12af8 <__assert_fail@plt+0xfa8>
   12b08:	cmp	r3, #46	; 0x2e
   12b0c:	bne	12c14 <__assert_fail@plt+0x10c4>
   12b10:	add	r2, r1, #2
   12b14:	ldrb	r3, [r2]
   12b18:	cmp	r3, #47	; 0x2f
   12b1c:	beq	12af8 <__assert_fail@plt+0xfa8>
   12b20:	cmp	r3, #0
   12b24:	beq	12b40 <__assert_fail@plt+0xff0>
   12b28:	cmp	r3, #46	; 0x2e
   12b2c:	bne	12c1c <__assert_fail@plt+0x10cc>
   12b30:	ldrb	r1, [r1, #3]
   12b34:	cmp	r1, #47	; 0x2f
   12b38:	cmpne	r1, #0
   12b3c:	bne	12c1c <__assert_fail@plt+0x10cc>
   12b40:	mov	r0, #47	; 0x2f
   12b44:	strh	r0, [r6]
   12b48:	b	12c30 <__assert_fail@plt+0x10e0>
   12b4c:	ldrb	r0, [r8]
   12b50:	add	lr, sp, #1024	; 0x400
   12b54:	add	r2, lr, #56	; 0x38
   12b58:	cmp	r0, #0
   12b5c:	beq	12cb4 <__assert_fail@plt+0x1164>
   12b60:	ldr	r9, [sp, #44]	; 0x2c
   12b64:	mov	r0, #0
   12b68:	movw	r1, #41211	; 0xa0fb
   12b6c:	movt	r1, #1
   12b70:	strb	r0, [r6, -r9]
   12b74:	ldrb	r0, [r5]
   12b78:	cmp	r0, #0
   12b7c:	mov	r0, r5
   12b80:	moveq	r0, r1
   12b84:	mov	r1, r2
   12b88:	bl	19b0c <lchmod@@Base+0x3840>
   12b8c:	cmp	r0, #0
   12b90:	bne	12edc <__assert_fail@plt+0x138c>
   12b94:	rsb	r0, r9, #0
   12b98:	ldr	r9, [sp, #20]
   12b9c:	ldrb	r1, [r8]
   12ba0:	cmp	r9, #0
   12ba4:	strb	r1, [r6, r0]
   12ba8:	bne	12be0 <__assert_fail@plt+0x1090>
   12bac:	movw	r0, #25052	; 0x61dc
   12bb0:	movw	r2, #24892	; 0x613c
   12bb4:	movw	r3, #24948	; 0x6174
   12bb8:	mov	r1, #0
   12bbc:	movt	r0, #1
   12bc0:	movt	r2, #1
   12bc4:	movt	r3, #1
   12bc8:	str	r0, [sp]
   12bcc:	mov	r0, #7
   12bd0:	bl	1566c <__assert_fail@plt+0x3b1c>
   12bd4:	mov	r9, r0
   12bd8:	cmp	r0, #0
   12bdc:	beq	12ecc <__assert_fail@plt+0x137c>
   12be0:	add	lr, sp, #1024	; 0x400
   12be4:	mov	r0, r9
   12be8:	mov	r1, r8
   12bec:	add	r2, lr, #56	; 0x38
   12bf0:	bl	13128 <__assert_fail@plt+0x15d8>
   12bf4:	cmp	r0, #0
   12bf8:	str	r9, [sp, #20]
   12bfc:	beq	12ca0 <__assert_fail@plt+0x1150>
   12c00:	ldr	r7, [sp, #32]
   12c04:	cmp	r7, #2
   12c08:	bne	12ed0 <__assert_fail@plt+0x1380>
   12c0c:	mov	r8, sl
   12c10:	b	12d88 <__assert_fail@plt+0x1238>
   12c14:	cmp	r3, #0
   12c18:	beq	12b40 <__assert_fail@plt+0xff0>
   12c1c:	ldr	r1, [sp, #40]	; 0x28
   12c20:	cmp	r1, #0
   12c24:	beq	12c50 <__assert_fail@plt+0x1100>
   12c28:	cmp	r0, #0
   12c2c:	bne	12ad4 <__assert_fail@plt+0xf84>
   12c30:	mvn	r0, #99	; 0x63
   12c34:	mov	r1, r5
   12c38:	mov	r2, #0
   12c3c:	mov	r3, #512	; 0x200
   12c40:	bl	117c0 <faccessat@plt>
   12c44:	cmp	r0, #0
   12c48:	bne	12c60 <__assert_fail@plt+0x1110>
   12c4c:	b	12ad4 <__assert_fail@plt+0xf84>
   12c50:	bl	11994 <__errno_location@plt>
   12c54:	ldr	r0, [r0]
   12c58:	cmp	r0, #22
   12c5c:	beq	12ad4 <__assert_fail@plt+0xf84>
   12c60:	mov	r4, #1
   12c64:	cmp	r7, #1
   12c68:	bne	12df4 <__assert_fail@plt+0x12a4>
   12c6c:	bl	11994 <__errno_location@plt>
   12c70:	ldr	r0, [r0]
   12c74:	cmp	r0, #2
   12c78:	bne	12df4 <__assert_fail@plt+0x12a4>
   12c7c:	movw	r1, #42409	; 0xa5a9
   12c80:	mov	r0, sl
   12c84:	movt	r1, #1
   12c88:	bl	11b38 <strspn@plt>
   12c8c:	ldrb	r0, [sl, r0]
   12c90:	mov	r8, sl
   12c94:	cmp	r0, #0
   12c98:	beq	12ad8 <__assert_fail@plt+0xf88>
   12c9c:	b	12df4 <__assert_fail@plt+0x12a4>
   12ca0:	add	lr, sp, #1024	; 0x400
   12ca4:	mov	r0, r9
   12ca8:	mov	r1, r8
   12cac:	add	r2, lr, #56	; 0x38
   12cb0:	bl	130ac <__assert_fail@plt+0x155c>
   12cb4:	mov	r0, #0
   12cb8:	strb	r0, [r7, r4]
   12cbc:	ldr	r0, [sp, #36]	; 0x24
   12cc0:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12cc4:	tst	r0, #1
   12cc8:	ldr	r0, [sp, #28]
   12ccc:	subne	r0, sl, r8
   12cd0:	str	r0, [sp, #28]
   12cd4:	mov	r0, sl
   12cd8:	bl	11964 <strlen@plt>
   12cdc:	mvn	r1, r4
   12ce0:	cmp	r0, r1
   12ce4:	bhi	12ecc <__assert_fail@plt+0x137c>
   12ce8:	str	r0, [sp, #44]	; 0x2c
   12cec:	add	r9, r0, r4
   12cf0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12cf4:	cmp	r0, r9
   12cf8:	bhi	12d20 <__assert_fail@plt+0x11d0>
   12cfc:	sub	lr, fp, #1024	; 0x400
   12d00:	sub	r0, lr, #40	; 0x28
   12d04:	bl	18530 <lchmod@@Base+0x2264>
   12d08:	cmp	r0, #0
   12d0c:	beq	12ecc <__assert_fail@plt+0x137c>
   12d10:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   12d14:	cmp	r0, r9
   12d18:	bls	12cfc <__assert_fail@plt+0x11ac>
   12d1c:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   12d20:	ldr	r0, [sp, #36]	; 0x24
   12d24:	ldr	r1, [sp, #44]	; 0x2c
   12d28:	tst	r0, #1
   12d2c:	ldr	r0, [sp, #28]
   12d30:	add	r2, r1, #1
   12d34:	addne	sl, r8, r0
   12d38:	add	r0, r8, r4
   12d3c:	mov	r1, sl
   12d40:	bl	117a8 <memmove@plt>
   12d44:	mov	r0, r8
   12d48:	mov	r1, r7
   12d4c:	mov	r2, r4
   12d50:	bl	117d8 <memcpy@plt>
   12d54:	ldrb	r0, [r7]
   12d58:	cmp	r0, #47	; 0x2f
   12d5c:	bne	12d90 <__assert_fail@plt+0x1240>
   12d60:	mov	r0, r5
   12d64:	mov	r1, r7
   12d68:	mov	r2, #0
   12d6c:	mvn	r3, #0
   12d70:	bl	11b44 <__mempcpy_chk@plt>
   12d74:	mov	r6, r0
   12d78:	mov	r0, #47	; 0x2f
   12d7c:	strb	r0, [r6], #1
   12d80:	mov	r0, #1
   12d84:	str	r0, [sp, #36]	; 0x24
   12d88:	add	r9, sp, #48	; 0x30
   12d8c:	b	12ad8 <__assert_fail@plt+0xf88>
   12d90:	add	r0, r5, #1
   12d94:	mov	r1, #1
   12d98:	add	r9, sp, #48	; 0x30
   12d9c:	cmp	r6, r0
   12da0:	str	r1, [sp, #36]	; 0x24
   12da4:	bls	12ad8 <__assert_fail@plt+0xf88>
   12da8:	sub	r0, r6, #1
   12dac:	mov	r6, r0
   12db0:	cmp	r0, r5
   12db4:	bls	12ad8 <__assert_fail@plt+0xf88>
   12db8:	mov	r0, r6
   12dbc:	ldrb	r1, [r0, #-1]!
   12dc0:	cmp	r1, #47	; 0x2f
   12dc4:	bne	12dac <__assert_fail@plt+0x125c>
   12dc8:	b	12ad8 <__assert_fail@plt+0xf88>
   12dcc:	mov	r0, #0
   12dd0:	str	r0, [sp, #20]
   12dd4:	add	r0, r5, #1
   12dd8:	cmp	r6, r0
   12ddc:	bls	12df0 <__assert_fail@plt+0x12a0>
   12de0:	mov	r0, r6
   12de4:	ldrb	r1, [r0, #-1]!
   12de8:	cmp	r1, #47	; 0x2f
   12dec:	moveq	r6, r0
   12df0:	mov	r4, #0
   12df4:	ldr	r0, [sp, #20]
   12df8:	cmp	r0, #0
   12dfc:	beq	12e60 <__assert_fail@plt+0x1310>
   12e00:	bl	15998 <__assert_fail@plt+0x3e48>
   12e04:	b	12e60 <__assert_fail@plt+0x1310>
   12e08:	bl	11994 <__errno_location@plt>
   12e0c:	ldr	r5, [sp, #8]
   12e10:	mov	r6, r0
   12e14:	add	r9, sp, #48	; 0x30
   12e18:	ldr	r0, [r6]
   12e1c:	cmp	r0, #34	; 0x22
   12e20:	bne	12e50 <__assert_fail@plt+0x1300>
   12e24:	mov	r0, r9
   12e28:	bl	184c4 <lchmod@@Base+0x21f8>
   12e2c:	cmp	r0, #0
   12e30:	beq	12ecc <__assert_fail@plt+0x137c>
   12e34:	ldr	r5, [sp, #48]	; 0x30
   12e38:	ldr	r1, [sp, #52]	; 0x34
   12e3c:	mov	r0, r5
   12e40:	bl	11934 <getcwd@plt>
   12e44:	cmp	r0, #0
   12e48:	beq	12e18 <__assert_fail@plt+0x12c8>
   12e4c:	b	128ec <__assert_fail@plt+0xd9c>
   12e50:	cmp	r0, #12
   12e54:	beq	12ecc <__assert_fail@plt+0x137c>
   12e58:	mov	r4, #1
   12e5c:	mov	r6, r5
   12e60:	ldr	r1, [sp, #12]
   12e64:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   12e68:	ldr	r7, [sp, #16]
   12e6c:	cmp	r0, r1
   12e70:	beq	12e78 <__assert_fail@plt+0x1328>
   12e74:	bl	13178 <__assert_fail@plt+0x1628>
   12e78:	ldr	r0, [sp, #1184]	; 0x4a0
   12e7c:	cmp	r0, r7
   12e80:	beq	12e88 <__assert_fail@plt+0x1338>
   12e84:	bl	13178 <__assert_fail@plt+0x1628>
   12e88:	cmp	r4, #0
   12e8c:	beq	12eac <__assert_fail@plt+0x135c>
   12e90:	ldr	r0, [sp, #48]	; 0x30
   12e94:	ldr	r1, [sp, #8]
   12e98:	mov	r4, #0
   12e9c:	cmp	r0, r1
   12ea0:	beq	128c4 <__assert_fail@plt+0xd74>
   12ea4:	bl	13178 <__assert_fail@plt+0x1628>
   12ea8:	b	128c4 <__assert_fail@plt+0xd74>
   12eac:	mov	r0, #0
   12eb0:	strb	r0, [r6], -r5
   12eb4:	add	r0, sp, #48	; 0x30
   12eb8:	add	r1, r6, #1
   12ebc:	bl	18460 <lchmod@@Base+0x2194>
   12ec0:	mov	r4, r0
   12ec4:	cmp	r0, #0
   12ec8:	bne	128c4 <__assert_fail@plt+0xd74>
   12ecc:	bl	18fcc <lchmod@@Base+0x2d00>
   12ed0:	bl	11994 <__errno_location@plt>
   12ed4:	mov	r1, #40	; 0x28
   12ed8:	str	r1, [r0]
   12edc:	mov	r4, #1
   12ee0:	b	12df4 <__assert_fail@plt+0x12a4>
   12ee4:	movw	r1, #45544	; 0xb1e8
   12ee8:	movt	r1, #2
   12eec:	str	r0, [r1]
   12ef0:	bx	lr
   12ef4:	movw	r1, #45548	; 0xb1ec
   12ef8:	movt	r1, #2
   12efc:	strb	r0, [r1]
   12f00:	bx	lr
   12f04:	push	{r4, r5, r6, sl, fp, lr}
   12f08:	add	fp, sp, #16
   12f0c:	sub	sp, sp, #8
   12f10:	movw	r0, #45532	; 0xb1dc
   12f14:	movt	r0, #2
   12f18:	ldr	r0, [r0]
   12f1c:	bl	191e0 <lchmod@@Base+0x2f14>
   12f20:	cmp	r0, #0
   12f24:	beq	12f4c <__assert_fail@plt+0x13fc>
   12f28:	movw	r0, #45548	; 0xb1ec
   12f2c:	movt	r0, #2
   12f30:	ldrb	r0, [r0]
   12f34:	cmp	r0, #0
   12f38:	beq	12f6c <__assert_fail@plt+0x141c>
   12f3c:	bl	11994 <__errno_location@plt>
   12f40:	ldr	r0, [r0]
   12f44:	cmp	r0, #32
   12f48:	bne	12f6c <__assert_fail@plt+0x141c>
   12f4c:	movw	r0, #45528	; 0xb1d8
   12f50:	movt	r0, #2
   12f54:	ldr	r0, [r0]
   12f58:	bl	191e0 <lchmod@@Base+0x2f14>
   12f5c:	cmp	r0, #0
   12f60:	subeq	sp, fp, #16
   12f64:	popeq	{r4, r5, r6, sl, fp, pc}
   12f68:	b	12fdc <__assert_fail@plt+0x148c>
   12f6c:	movw	r1, #41191	; 0xa0e7
   12f70:	mov	r0, #0
   12f74:	mov	r2, #5
   12f78:	movt	r1, #1
   12f7c:	bl	117fc <dcgettext@plt>
   12f80:	mov	r4, r0
   12f84:	movw	r0, #45544	; 0xb1e8
   12f88:	movt	r0, #2
   12f8c:	ldr	r6, [r0]
   12f90:	bl	11994 <__errno_location@plt>
   12f94:	ldr	r5, [r0]
   12f98:	cmp	r6, #0
   12f9c:	bne	12fb8 <__assert_fail@plt+0x1468>
   12fa0:	movw	r2, #41207	; 0xa0f7
   12fa4:	mov	r0, #0
   12fa8:	mov	r1, r5
   12fac:	mov	r3, r4
   12fb0:	movt	r2, #1
   12fb4:	b	12fd8 <__assert_fail@plt+0x1488>
   12fb8:	mov	r0, r6
   12fbc:	bl	180d4 <lchmod@@Base+0x1e08>
   12fc0:	movw	r2, #41203	; 0xa0f3
   12fc4:	mov	r3, r0
   12fc8:	str	r4, [sp]
   12fcc:	mov	r0, #0
   12fd0:	mov	r1, r5
   12fd4:	movt	r2, #1
   12fd8:	bl	118bc <error@plt>
   12fdc:	movw	r0, #45444	; 0xb184
   12fe0:	movt	r0, #2
   12fe4:	ldr	r0, [r0]
   12fe8:	bl	117cc <_exit@plt>
   12fec:	push	{fp, lr}
   12ff0:	mov	fp, sp
   12ff4:	bl	1304c <__assert_fail@plt+0x14fc>
   12ff8:	cmp	r0, #0
   12ffc:	popne	{fp, pc}
   13000:	bl	18fcc <lchmod@@Base+0x2d00>
   13004:	push	{r4, r5, r6, sl, fp, lr}
   13008:	add	fp, sp, #16
   1300c:	mov	r5, r0
   13010:	mov	r4, r0
   13014:	ldrb	r6, [r5], #-1
   13018:	bl	19160 <lchmod@@Base+0x2e94>
   1301c:	sub	r2, r0, r4
   13020:	sub	r0, r6, #47	; 0x2f
   13024:	clz	r0, r0
   13028:	lsr	r1, r0, #5
   1302c:	mov	r0, r2
   13030:	cmp	r2, r1
   13034:	bls	13048 <__assert_fail@plt+0x14f8>
   13038:	ldrb	r3, [r5, r0]
   1303c:	sub	r2, r0, #1
   13040:	cmp	r3, #47	; 0x2f
   13044:	beq	1302c <__assert_fail@plt+0x14dc>
   13048:	pop	{r4, r5, r6, sl, fp, pc}
   1304c:	push	{r4, r5, r6, sl, fp, lr}
   13050:	add	fp, sp, #16
   13054:	mov	r6, r0
   13058:	bl	13004 <__assert_fail@plt+0x14b4>
   1305c:	cmp	r0, #0
   13060:	mov	r4, r0
   13064:	addeq	r0, r0, #1
   13068:	add	r0, r0, #1
   1306c:	bl	190e0 <lchmod@@Base+0x2e14>
   13070:	mov	r5, r0
   13074:	cmp	r0, #0
   13078:	beq	130a4 <__assert_fail@plt+0x1554>
   1307c:	mov	r0, r5
   13080:	mov	r1, r6
   13084:	mov	r2, r4
   13088:	bl	117d8 <memcpy@plt>
   1308c:	cmp	r4, #0
   13090:	moveq	r0, #46	; 0x2e
   13094:	moveq	r4, #1
   13098:	strbeq	r0, [r5]
   1309c:	mov	r0, #0
   130a0:	strb	r0, [r5, r4]
   130a4:	mov	r0, r5
   130a8:	pop	{r4, r5, r6, sl, fp, pc}
   130ac:	push	{r4, r5, r6, r7, fp, lr}
   130b0:	add	fp, sp, #16
   130b4:	cmp	r0, #0
   130b8:	beq	13120 <__assert_fail@plt+0x15d0>
   130bc:	mov	r5, r0
   130c0:	mov	r0, #24
   130c4:	mov	r6, r2
   130c8:	mov	r7, r1
   130cc:	bl	18ba0 <lchmod@@Base+0x28d4>
   130d0:	mov	r4, r0
   130d4:	mov	r0, r7
   130d8:	bl	18f94 <lchmod@@Base+0x2cc8>
   130dc:	str	r0, [r4]
   130e0:	ldrd	r0, [r6, #96]	; 0x60
   130e4:	str	r0, [r4, #8]
   130e8:	str	r1, [r4, #12]
   130ec:	ldrd	r0, [r6]
   130f0:	str	r1, [r4, #20]
   130f4:	str	r0, [r4, #16]
   130f8:	mov	r0, r5
   130fc:	mov	r1, r4
   13100:	bl	15fe8 <__assert_fail@plt+0x4498>
   13104:	cmp	r0, #0
   13108:	beq	13124 <__assert_fail@plt+0x15d4>
   1310c:	cmp	r0, r4
   13110:	beq	13120 <__assert_fail@plt+0x15d0>
   13114:	mov	r0, r4
   13118:	pop	{r4, r5, r6, r7, fp, lr}
   1311c:	b	161dc <__assert_fail@plt+0x468c>
   13120:	pop	{r4, r5, r6, r7, fp, pc}
   13124:	bl	18fcc <lchmod@@Base+0x2d00>
   13128:	cmp	r0, #0
   1312c:	moveq	r0, #0
   13130:	bxeq	lr
   13134:	push	{r4, r5, fp, lr}
   13138:	add	fp, sp, #8
   1313c:	sub	sp, sp, #24
   13140:	str	r1, [sp]
   13144:	mov	ip, sp
   13148:	mov	r1, sp
   1314c:	ldrd	r4, [r2, #96]	; 0x60
   13150:	add	r3, ip, #8
   13154:	add	ip, ip, #16
   13158:	strd	r4, [r3]
   1315c:	ldrd	r2, [r2]
   13160:	strd	r2, [ip]
   13164:	bl	153b8 <__assert_fail@plt+0x3868>
   13168:	cmp	r0, #0
   1316c:	movwne	r0, #1
   13170:	sub	sp, fp, #8
   13174:	pop	{r4, r5, fp, pc}
   13178:	push	{r4, r5, r6, sl, fp, lr}
   1317c:	add	fp, sp, #16
   13180:	mov	r4, r0
   13184:	bl	11994 <__errno_location@plt>
   13188:	ldr	r6, [r0]
   1318c:	mov	r5, r0
   13190:	mov	r0, r4
   13194:	bl	117b4 <free@plt>
   13198:	str	r6, [r5]
   1319c:	pop	{r4, r5, r6, sl, fp, pc}
   131a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131a4:	add	fp, sp, #28
   131a8:	sub	sp, sp, #12
   131ac:	cmp	r1, #4096	; 0x1000
   131b0:	bcs	131cc <__assert_fail@plt+0x167c>
   131b4:	mov	r6, r0
   131b8:	and	r0, r1, #516	; 0x204
   131bc:	mov	r5, r1
   131c0:	cmp	r0, #516	; 0x204
   131c4:	tstne	r5, #18
   131c8:	bne	131e8 <__assert_fail@plt+0x1698>
   131cc:	bl	11994 <__errno_location@plt>
   131d0:	mov	r1, #22
   131d4:	str	r1, [r0]
   131d8:	mov	r8, #0
   131dc:	mov	r0, r8
   131e0:	sub	sp, fp, #28
   131e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e8:	mov	r0, #1
   131ec:	mov	r1, #96	; 0x60
   131f0:	mov	r9, r2
   131f4:	bl	1908c <lchmod@@Base+0x2dc0>
   131f8:	cmp	r0, #0
   131fc:	beq	131d8 <__assert_fail@plt+0x1688>
   13200:	mov	r8, r0
   13204:	mvn	r0, #99	; 0x63
   13208:	tst	r5, #2
   1320c:	mov	r1, r5
   13210:	str	r0, [r8, #32]
   13214:	bic	r0, r5, #516	; 0x204
   13218:	str	r9, [r8, #44]	; 0x2c
   1321c:	orrne	r1, r0, #4
   13220:	str	r1, [r8, #48]	; 0x30
   13224:	ldr	r0, [r6]
   13228:	cmp	r0, #0
   1322c:	beq	13260 <__assert_fail@plt+0x1710>
   13230:	add	r4, r6, #4
   13234:	mov	r7, #0
   13238:	bl	11964 <strlen@plt>
   1323c:	cmp	r0, r7
   13240:	movhi	r7, r0
   13244:	ldr	r0, [r4], #4
   13248:	cmp	r0, #0
   1324c:	bne	13238 <__assert_fail@plt+0x16e8>
   13250:	add	r1, r7, #1
   13254:	cmp	r1, #4096	; 0x1000
   13258:	movls	r1, #4096	; 0x1000
   1325c:	b	13264 <__assert_fail@plt+0x1714>
   13260:	mov	r1, #4096	; 0x1000
   13264:	mov	r0, r8
   13268:	bl	134c8 <__assert_fail@plt+0x1978>
   1326c:	cmp	r0, #0
   13270:	beq	134bc <__assert_fail@plt+0x196c>
   13274:	ldr	r0, [r6]
   13278:	cmp	r0, #0
   1327c:	beq	132ac <__assert_fail@plt+0x175c>
   13280:	movw	r1, #41020	; 0xa03c
   13284:	mov	r0, r8
   13288:	mov	r2, #0
   1328c:	movt	r1, #1
   13290:	bl	1353c <__assert_fail@plt+0x19ec>
   13294:	cmp	r0, #0
   13298:	beq	134b4 <__assert_fail@plt+0x1964>
   1329c:	mov	r4, r0
   132a0:	mvn	r0, #0
   132a4:	str	r0, [r4, #48]	; 0x30
   132a8:	b	132b0 <__assert_fail@plt+0x1760>
   132ac:	mov	r4, #0
   132b0:	cmp	r9, #0
   132b4:	beq	132c4 <__assert_fail@plt+0x1774>
   132b8:	ldrb	r0, [r8, #49]	; 0x31
   132bc:	ubfx	r0, r0, #2, #1
   132c0:	b	132c8 <__assert_fail@plt+0x1778>
   132c4:	mov	r0, #1
   132c8:	ldr	r7, [r6]
   132cc:	cmp	r7, #0
   132d0:	beq	133f0 <__assert_fail@plt+0x18a0>
   132d4:	eor	r0, r0, #1
   132d8:	and	r1, r5, #2048	; 0x800
   132dc:	mov	sl, #0
   132e0:	mov	r5, #0
   132e4:	str	r0, [sp, #4]
   132e8:	mov	r0, #0
   132ec:	str	r1, [sp, #8]
   132f0:	str	r0, [sp]
   132f4:	mov	r0, r7
   132f8:	bl	11964 <strlen@plt>
   132fc:	mov	r2, r0
   13300:	ldr	r0, [sp, #8]
   13304:	cmp	r0, #0
   13308:	bne	13340 <__assert_fail@plt+0x17f0>
   1330c:	cmp	r2, #3
   13310:	bcc	13340 <__assert_fail@plt+0x17f0>
   13314:	add	r0, r2, r7
   13318:	ldrb	r0, [r0, #-1]
   1331c:	cmp	r0, #47	; 0x2f
   13320:	bne	13340 <__assert_fail@plt+0x17f0>
   13324:	sub	r0, r7, #2
   13328:	ldrb	r1, [r0, r2]
   1332c:	cmp	r1, #47	; 0x2f
   13330:	bne	13340 <__assert_fail@plt+0x17f0>
   13334:	sub	r2, r2, #1
   13338:	cmp	r2, #1
   1333c:	bhi	13328 <__assert_fail@plt+0x17d8>
   13340:	mov	r0, r8
   13344:	mov	r1, r7
   13348:	bl	1353c <__assert_fail@plt+0x19ec>
   1334c:	cmp	r0, #0
   13350:	beq	134a4 <__assert_fail@plt+0x1954>
   13354:	mov	r1, #0
   13358:	ldr	r2, [sp, #4]
   1335c:	str	r4, [r0, #4]
   13360:	mov	r7, r0
   13364:	str	r1, [r0, #48]	; 0x30
   13368:	add	r0, r0, #168	; 0xa8
   1336c:	str	r0, [r7, #24]
   13370:	clz	r0, sl
   13374:	lsr	r0, r0, #5
   13378:	orrs	r0, r2, r0
   1337c:	bne	13390 <__assert_fail@plt+0x1840>
   13380:	mov	r0, #2
   13384:	strd	r0, [r7, #112]	; 0x70
   13388:	mov	r0, #11
   1338c:	b	133a4 <__assert_fail@plt+0x1854>
   13390:	mov	r0, r8
   13394:	mov	r1, r7
   13398:	mov	r2, #0
   1339c:	bl	135bc <__assert_fail@plt+0x1a6c>
   133a0:	mov	r1, #0
   133a4:	cmp	r9, #0
   133a8:	strh	r0, [r7, #56]	; 0x38
   133ac:	beq	133bc <__assert_fail@plt+0x186c>
   133b0:	str	sl, [r7, #8]
   133b4:	mov	sl, r7
   133b8:	b	133d4 <__assert_fail@plt+0x1884>
   133bc:	cmp	sl, #0
   133c0:	str	r1, [r7, #8]
   133c4:	beq	133e8 <__assert_fail@plt+0x1898>
   133c8:	ldr	r0, [sp]
   133cc:	str	r7, [sp]
   133d0:	str	r7, [r0, #8]
   133d4:	ldr	r7, [r6, #4]!
   133d8:	add	r5, r5, #1
   133dc:	cmp	r7, #0
   133e0:	bne	132f4 <__assert_fail@plt+0x17a4>
   133e4:	b	133f8 <__assert_fail@plt+0x18a8>
   133e8:	str	r7, [sp]
   133ec:	b	133b4 <__assert_fail@plt+0x1864>
   133f0:	mov	sl, #0
   133f4:	b	1341c <__assert_fail@plt+0x18cc>
   133f8:	cmp	r9, #0
   133fc:	beq	1341c <__assert_fail@plt+0x18cc>
   13400:	cmp	r5, #2
   13404:	bcc	1341c <__assert_fail@plt+0x18cc>
   13408:	mov	r0, r8
   1340c:	mov	r1, sl
   13410:	mov	r2, r5
   13414:	bl	136f8 <__assert_fail@plt+0x1ba8>
   13418:	mov	sl, r0
   1341c:	movw	r1, #41020	; 0xa03c
   13420:	mov	r0, r8
   13424:	mov	r2, #0
   13428:	movt	r1, #1
   1342c:	bl	1353c <__assert_fail@plt+0x19ec>
   13430:	cmp	r0, #0
   13434:	str	r0, [r8]
   13438:	beq	134a4 <__assert_fail@plt+0x1954>
   1343c:	mov	r1, #9
   13440:	strh	r1, [r0, #56]	; 0x38
   13444:	mov	r1, #1
   13448:	str	sl, [r0, #8]
   1344c:	str	r1, [r0, #48]	; 0x30
   13450:	mov	r0, r8
   13454:	bl	137ec <__assert_fail@plt+0x1c9c>
   13458:	cmp	r0, #0
   1345c:	beq	134a4 <__assert_fail@plt+0x1954>
   13460:	ldrh	r0, [r8, #48]	; 0x30
   13464:	tst	r0, #516	; 0x204
   13468:	bne	13494 <__assert_fail@plt+0x1944>
   1346c:	movw	r1, #41211	; 0xa0fb
   13470:	mov	r0, r8
   13474:	movt	r1, #1
   13478:	bl	13878 <__assert_fail@plt+0x1d28>
   1347c:	cmn	r0, #1
   13480:	str	r0, [r8, #28]
   13484:	bgt	13494 <__assert_fail@plt+0x1944>
   13488:	ldr	r0, [r8, #48]	; 0x30
   1348c:	orr	r0, r0, #4
   13490:	str	r0, [r8, #48]	; 0x30
   13494:	add	r0, r8, #60	; 0x3c
   13498:	mvn	r1, #0
   1349c:	bl	161fc <__assert_fail@plt+0x46ac>
   134a0:	b	131dc <__assert_fail@plt+0x168c>
   134a4:	mov	r0, sl
   134a8:	bl	138a8 <__assert_fail@plt+0x1d58>
   134ac:	mov	r0, r4
   134b0:	bl	13178 <__assert_fail@plt+0x1628>
   134b4:	ldr	r0, [r8, #24]
   134b8:	bl	13178 <__assert_fail@plt+0x1628>
   134bc:	mov	r0, r8
   134c0:	bl	13178 <__assert_fail@plt+0x1628>
   134c4:	b	131d8 <__assert_fail@plt+0x1688>
   134c8:	push	{r4, r5, fp, lr}
   134cc:	add	fp, sp, #8
   134d0:	mov	r4, r0
   134d4:	ldr	r0, [r0, #36]	; 0x24
   134d8:	add	r1, r1, #256	; 0x100
   134dc:	adds	r1, r1, r0
   134e0:	bcc	13504 <__assert_fail@plt+0x19b4>
   134e4:	ldr	r0, [r4, #24]
   134e8:	bl	13178 <__assert_fail@plt+0x1628>
   134ec:	mov	r5, #0
   134f0:	str	r5, [r4, #24]
   134f4:	bl	11994 <__errno_location@plt>
   134f8:	mov	r1, #36	; 0x24
   134fc:	str	r1, [r0]
   13500:	b	13534 <__assert_fail@plt+0x19e4>
   13504:	str	r1, [r4, #36]	; 0x24
   13508:	ldr	r0, [r4, #24]
   1350c:	bl	19110 <lchmod@@Base+0x2e44>
   13510:	cmp	r0, #0
   13514:	beq	13524 <__assert_fail@plt+0x19d4>
   13518:	mov	r5, #1
   1351c:	str	r0, [r4, #24]
   13520:	b	13534 <__assert_fail@plt+0x19e4>
   13524:	ldr	r0, [r4, #24]
   13528:	bl	13178 <__assert_fail@plt+0x1628>
   1352c:	mov	r5, #0
   13530:	str	r5, [r4, #24]
   13534:	mov	r0, r5
   13538:	pop	{r4, r5, fp, pc}
   1353c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13540:	add	fp, sp, #24
   13544:	mov	r5, r0
   13548:	add	r0, r2, #176	; 0xb0
   1354c:	mov	r6, r2
   13550:	mov	r8, r1
   13554:	bic	r0, r0, #7
   13558:	bl	190e0 <lchmod@@Base+0x2e14>
   1355c:	cmp	r0, #0
   13560:	beq	135b0 <__assert_fail@plt+0x1a60>
   13564:	add	r7, r0, #168	; 0xa8
   13568:	mov	r4, r0
   1356c:	mov	r1, r8
   13570:	mov	r2, r6
   13574:	mov	r0, r7
   13578:	bl	117d8 <memcpy@plt>
   1357c:	mov	r0, #0
   13580:	mov	r2, #196608	; 0x30000
   13584:	strb	r0, [r7, r6]
   13588:	str	r6, [r4, #52]	; 0x34
   1358c:	str	r5, [r4, #44]	; 0x2c
   13590:	ldr	r1, [r5, #24]
   13594:	str	r0, [r4, #12]
   13598:	str	r0, [r4, #16]
   1359c:	str	r0, [r4, #20]
   135a0:	str	r2, [r4, #58]	; 0x3a
   135a4:	str	r1, [r4, #28]
   135a8:	str	r0, [r4, #32]
   135ac:	b	135b4 <__assert_fail@plt+0x1a64>
   135b0:	mov	r4, #0
   135b4:	mov	r0, r4
   135b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   135bc:	push	{r4, r5, r6, sl, fp, lr}
   135c0:	add	fp, sp, #16
   135c4:	mov	r4, r1
   135c8:	ldr	r1, [r0, #48]	; 0x30
   135cc:	ldr	r3, [r4, #48]	; 0x30
   135d0:	add	r5, r4, #64	; 0x40
   135d4:	cmp	r3, #0
   135d8:	andeq	r3, r1, #1
   135dc:	orreq	r2, r3, r2
   135e0:	cmp	r2, #0
   135e4:	andseq	r1, r1, #2
   135e8:	beq	13638 <__assert_fail@plt+0x1ae8>
   135ec:	ldr	r0, [r4, #24]
   135f0:	mov	r1, r5
   135f4:	bl	19b0c <lchmod@@Base+0x3840>
   135f8:	cmp	r0, #0
   135fc:	beq	1367c <__assert_fail@plt+0x1b2c>
   13600:	bl	11994 <__errno_location@plt>
   13604:	mov	r6, r0
   13608:	ldr	r0, [r0]
   1360c:	cmp	r0, #2
   13610:	bne	13660 <__assert_fail@plt+0x1b10>
   13614:	ldr	r0, [r4, #24]
   13618:	mov	r1, r5
   1361c:	bl	19b2c <lchmod@@Base+0x3860>
   13620:	cmp	r0, #0
   13624:	bne	1365c <__assert_fail@plt+0x1b0c>
   13628:	mov	r0, #0
   1362c:	str	r0, [r6]
   13630:	mov	r0, #13
   13634:	pop	{r4, r5, r6, sl, fp, pc}
   13638:	ldr	r1, [r4, #24]
   1363c:	ldr	r0, [r0, #32]
   13640:	mov	r2, r5
   13644:	mov	r3, #256	; 0x100
   13648:	bl	19b3c <lchmod@@Base+0x3870>
   1364c:	cmp	r0, #0
   13650:	beq	1367c <__assert_fail@plt+0x1b2c>
   13654:	bl	11994 <__errno_location@plt>
   13658:	mov	r6, r0
   1365c:	ldr	r0, [r6]
   13660:	str	r0, [r4, #32]
   13664:	mov	r0, r5
   13668:	mov	r1, #0
   1366c:	mov	r2, #104	; 0x68
   13670:	bl	119b8 <memset@plt>
   13674:	mov	r0, #10
   13678:	pop	{r4, r5, r6, sl, fp, pc}
   1367c:	ldr	r0, [r4, #80]	; 0x50
   13680:	and	r0, r0, #61440	; 0xf000
   13684:	cmp	r0, #40960	; 0xa000
   13688:	beq	136e0 <__assert_fail@plt+0x1b90>
   1368c:	cmp	r0, #32768	; 0x8000
   13690:	beq	136e8 <__assert_fail@plt+0x1b98>
   13694:	cmp	r0, #16384	; 0x4000
   13698:	bne	136f0 <__assert_fail@plt+0x1ba0>
   1369c:	ldrb	r1, [r4, #168]	; 0xa8
   136a0:	mov	r0, #1
   136a4:	cmp	r1, #46	; 0x2e
   136a8:	bne	136f4 <__assert_fail@plt+0x1ba4>
   136ac:	ldrb	r1, [r4, #169]	; 0xa9
   136b0:	cmp	r1, #0
   136b4:	beq	136cc <__assert_fail@plt+0x1b7c>
   136b8:	cmp	r1, #46	; 0x2e
   136bc:	bne	136f4 <__assert_fail@plt+0x1ba4>
   136c0:	ldrb	r1, [r4, #170]	; 0xaa
   136c4:	cmp	r1, #0
   136c8:	popne	{r4, r5, r6, sl, fp, pc}
   136cc:	ldr	r1, [r4, #48]	; 0x30
   136d0:	mov	r0, #5
   136d4:	cmp	r1, #0
   136d8:	movweq	r0, #1
   136dc:	pop	{r4, r5, r6, sl, fp, pc}
   136e0:	mov	r0, #12
   136e4:	pop	{r4, r5, r6, sl, fp, pc}
   136e8:	mov	r0, #8
   136ec:	pop	{r4, r5, r6, sl, fp, pc}
   136f0:	mov	r0, #3
   136f4:	pop	{r4, r5, r6, sl, fp, pc}
   136f8:	push	{r4, r5, r6, r7, fp, lr}
   136fc:	add	fp, sp, #16
   13700:	mov	r6, r0
   13704:	ldr	r7, [r0, #44]	; 0x2c
   13708:	ldr	r0, [r0, #40]	; 0x28
   1370c:	mov	r5, r2
   13710:	mov	r4, r1
   13714:	cmp	r0, r2
   13718:	bcs	13748 <__assert_fail@plt+0x1bf8>
   1371c:	add	r1, r5, #40	; 0x28
   13720:	cmn	r1, #-1073741823	; 0xc0000001
   13724:	str	r1, [r6, #40]	; 0x28
   13728:	bhi	137bc <__assert_fail@plt+0x1c6c>
   1372c:	ldr	r0, [r6, #8]
   13730:	lsl	r1, r1, #2
   13734:	bl	19110 <lchmod@@Base+0x2e44>
   13738:	cmp	r0, #0
   1373c:	beq	137bc <__assert_fail@plt+0x1c6c>
   13740:	str	r0, [r6, #8]
   13744:	b	1374c <__assert_fail@plt+0x1bfc>
   13748:	ldr	r0, [r6, #8]
   1374c:	cmp	r4, #0
   13750:	beq	13768 <__assert_fail@plt+0x1c18>
   13754:	str	r4, [r0], #4
   13758:	ldr	r4, [r4, #8]
   1375c:	cmp	r4, #0
   13760:	bne	13754 <__assert_fail@plt+0x1c04>
   13764:	ldr	r0, [r6, #8]
   13768:	mov	r1, r5
   1376c:	mov	r2, #4
   13770:	mov	r3, r7
   13774:	bl	11a78 <qsort@plt>
   13778:	ldr	r0, [r6, #8]
   1377c:	cmp	r5, #1
   13780:	ldr	r4, [r0]
   13784:	mov	r1, r4
   13788:	beq	137dc <__assert_fail@plt+0x1c8c>
   1378c:	ldr	r1, [r0, #4]!
   13790:	str	r1, [r4, #8]
   13794:	subs	r1, r5, #2
   13798:	beq	137d4 <__assert_fail@plt+0x1c84>
   1379c:	mov	r2, r0
   137a0:	ldr	r3, [r2, #4]!
   137a4:	ldr	r0, [r0]
   137a8:	subs	r1, r1, #1
   137ac:	str	r3, [r0, #8]
   137b0:	mov	r0, r2
   137b4:	bne	137a0 <__assert_fail@plt+0x1c50>
   137b8:	b	137d8 <__assert_fail@plt+0x1c88>
   137bc:	ldr	r0, [r6, #8]
   137c0:	bl	13178 <__assert_fail@plt+0x1628>
   137c4:	mov	r0, #0
   137c8:	str	r0, [r6, #40]	; 0x28
   137cc:	str	r0, [r6, #8]
   137d0:	b	137e4 <__assert_fail@plt+0x1c94>
   137d4:	mov	r2, r0
   137d8:	ldr	r1, [r2]
   137dc:	mov	r0, #0
   137e0:	str	r0, [r1, #8]
   137e4:	mov	r0, r4
   137e8:	pop	{r4, r5, r6, r7, fp, pc}
   137ec:	push	{r4, r5, fp, lr}
   137f0:	add	fp, sp, #8
   137f4:	sub	sp, sp, #8
   137f8:	mov	r4, r0
   137fc:	ldrh	r0, [r0, #48]	; 0x30
   13800:	movw	r1, #258	; 0x102
   13804:	tst	r0, r1
   13808:	beq	13848 <__assert_fail@plt+0x1cf8>
   1380c:	movw	r0, #12664	; 0x3178
   13810:	movw	r2, #20448	; 0x4fe0
   13814:	movw	r3, #20480	; 0x5000
   13818:	mov	r1, #0
   1381c:	mov	r5, #0
   13820:	movt	r0, #1
   13824:	movt	r2, #1
   13828:	movt	r3, #1
   1382c:	str	r0, [sp]
   13830:	mov	r0, #31
   13834:	bl	1566c <__assert_fail@plt+0x3b1c>
   13838:	cmp	r0, #0
   1383c:	str	r0, [r4, #56]	; 0x38
   13840:	movne	r5, #1
   13844:	b	1386c <__assert_fail@plt+0x1d1c>
   13848:	mov	r0, #32
   1384c:	bl	190e0 <lchmod@@Base+0x2e14>
   13850:	cmp	r0, #0
   13854:	str	r0, [r4, #56]	; 0x38
   13858:	beq	13868 <__assert_fail@plt+0x1d18>
   1385c:	bl	19260 <lchmod@@Base+0x2f94>
   13860:	mov	r5, #1
   13864:	b	1386c <__assert_fail@plt+0x1d1c>
   13868:	mov	r5, #0
   1386c:	mov	r0, r5
   13870:	sub	sp, fp, #8
   13874:	pop	{r4, r5, fp, pc}
   13878:	ldr	r3, [r0, #48]	; 0x30
   1387c:	mov	r2, #32768	; 0x8000
   13880:	and	r2, r2, r3, lsl #11
   13884:	tst	r3, #512	; 0x200
   13888:	orr	r2, r2, #18688	; 0x4900
   1388c:	orr	r2, r2, #524288	; 0x80000
   13890:	bne	138a0 <__assert_fail@plt+0x1d50>
   13894:	mov	r0, r1
   13898:	mov	r1, r2
   1389c:	b	195c0 <lchmod@@Base+0x32f4>
   138a0:	ldr	r0, [r0, #32]
   138a4:	b	16890 <lchmod@@Base+0x5c4>
   138a8:	push	{r4, r6, r7, sl, fp, lr}
   138ac:	add	fp, sp, #16
   138b0:	cmp	r0, #0
   138b4:	beq	138e4 <__assert_fail@plt+0x1d94>
   138b8:	mov	r4, r0
   138bc:	ldrd	r6, [r4, #8]
   138c0:	cmp	r7, #0
   138c4:	beq	138d0 <__assert_fail@plt+0x1d80>
   138c8:	mov	r0, r7
   138cc:	bl	11b2c <closedir@plt>
   138d0:	mov	r0, r4
   138d4:	bl	13178 <__assert_fail@plt+0x1628>
   138d8:	cmp	r6, #0
   138dc:	mov	r4, r6
   138e0:	bne	138bc <__assert_fail@plt+0x1d6c>
   138e4:	pop	{r4, r6, r7, sl, fp, pc}
   138e8:	push	{r4, r5, fp, lr}
   138ec:	add	fp, sp, #8
   138f0:	mov	r4, r0
   138f4:	ldr	r0, [r0]
   138f8:	cmp	r0, #0
   138fc:	beq	1393c <__assert_fail@plt+0x1dec>
   13900:	ldr	r1, [r0, #48]	; 0x30
   13904:	cmp	r1, #0
   13908:	bmi	13930 <__assert_fail@plt+0x1de0>
   1390c:	ldr	r5, [r0, #8]
   13910:	cmp	r5, #0
   13914:	ldreq	r5, [r0, #4]
   13918:	bl	13178 <__assert_fail@plt+0x1628>
   1391c:	ldr	r0, [r5, #48]	; 0x30
   13920:	cmn	r0, #1
   13924:	mov	r0, r5
   13928:	bgt	1390c <__assert_fail@plt+0x1dbc>
   1392c:	b	13934 <__assert_fail@plt+0x1de4>
   13930:	mov	r5, r0
   13934:	mov	r0, r5
   13938:	bl	13178 <__assert_fail@plt+0x1628>
   1393c:	ldr	r0, [r4, #4]
   13940:	cmp	r0, #0
   13944:	blne	138a8 <__assert_fail@plt+0x1d58>
   13948:	ldr	r0, [r4, #8]
   1394c:	bl	13178 <__assert_fail@plt+0x1628>
   13950:	ldr	r0, [r4, #24]
   13954:	bl	13178 <__assert_fail@plt+0x1628>
   13958:	ldr	r0, [r4, #48]	; 0x30
   1395c:	tst	r0, #512	; 0x200
   13960:	bne	1398c <__assert_fail@plt+0x1e3c>
   13964:	mov	r5, #0
   13968:	tst	r0, #4
   1396c:	bne	139c8 <__assert_fail@plt+0x1e78>
   13970:	ldr	r0, [r4, #28]
   13974:	bl	11a6c <fchdir@plt>
   13978:	cmp	r0, #0
   1397c:	beq	139a4 <__assert_fail@plt+0x1e54>
   13980:	bl	11994 <__errno_location@plt>
   13984:	ldr	r5, [r0]
   13988:	b	139a8 <__assert_fail@plt+0x1e58>
   1398c:	ldr	r0, [r4, #32]
   13990:	mov	r5, #0
   13994:	cmp	r0, #0
   13998:	bmi	139c8 <__assert_fail@plt+0x1e78>
   1399c:	bl	11afc <close@plt>
   139a0:	b	139b8 <__assert_fail@plt+0x1e68>
   139a4:	mov	r5, #0
   139a8:	ldr	r0, [r4, #28]
   139ac:	bl	11afc <close@plt>
   139b0:	cmp	r5, #0
   139b4:	bne	139c8 <__assert_fail@plt+0x1e78>
   139b8:	cmp	r0, #0
   139bc:	beq	139c8 <__assert_fail@plt+0x1e78>
   139c0:	bl	11994 <__errno_location@plt>
   139c4:	ldr	r5, [r0]
   139c8:	add	r0, r4, #60	; 0x3c
   139cc:	bl	13a10 <__assert_fail@plt+0x1ec0>
   139d0:	ldr	r0, [r4, #52]	; 0x34
   139d4:	cmp	r0, #0
   139d8:	beq	139e0 <__assert_fail@plt+0x1e90>
   139dc:	bl	15998 <__assert_fail@plt+0x3e48>
   139e0:	mov	r0, r4
   139e4:	bl	13a48 <__assert_fail@plt+0x1ef8>
   139e8:	mov	r0, r4
   139ec:	bl	13178 <__assert_fail@plt+0x1628>
   139f0:	cmp	r5, #0
   139f4:	beq	13a08 <__assert_fail@plt+0x1eb8>
   139f8:	bl	11994 <__errno_location@plt>
   139fc:	str	r5, [r0]
   13a00:	mvn	r0, #0
   13a04:	pop	{r4, r5, fp, pc}
   13a08:	mov	r0, #0
   13a0c:	pop	{r4, r5, fp, pc}
   13a10:	push	{r4, sl, fp, lr}
   13a14:	add	fp, sp, #8
   13a18:	mov	r4, r0
   13a1c:	bl	16220 <__assert_fail@plt+0x46d0>
   13a20:	cmp	r0, #0
   13a24:	bne	13a44 <__assert_fail@plt+0x1ef4>
   13a28:	mov	r0, r4
   13a2c:	bl	16274 <__assert_fail@plt+0x4724>
   13a30:	cmp	r0, #0
   13a34:	bmi	13a3c <__assert_fail@plt+0x1eec>
   13a38:	bl	11afc <close@plt>
   13a3c:	mov	r0, r4
   13a40:	b	13a1c <__assert_fail@plt+0x1ecc>
   13a44:	pop	{r4, sl, fp, pc}
   13a48:	ldrh	r1, [r0, #48]	; 0x30
   13a4c:	movw	r2, #258	; 0x102
   13a50:	tst	r1, r2
   13a54:	beq	13a68 <__assert_fail@plt+0x1f18>
   13a58:	ldr	r0, [r0, #56]	; 0x38
   13a5c:	cmp	r0, #0
   13a60:	bxeq	lr
   13a64:	b	15998 <__assert_fail@plt+0x3e48>
   13a68:	ldr	r0, [r0, #56]	; 0x38
   13a6c:	b	13178 <__assert_fail@plt+0x1628>
   13a70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a74:	add	fp, sp, #24
   13a78:	ldr	r6, [r0]
   13a7c:	mov	r5, #0
   13a80:	cmp	r6, #0
   13a84:	beq	14074 <__assert_fail@plt+0x2524>
   13a88:	ldr	r1, [r0, #48]	; 0x30
   13a8c:	mov	r4, r0
   13a90:	tst	r1, #8192	; 0x2000
   13a94:	bne	14074 <__assert_fail@plt+0x2524>
   13a98:	ldrh	r0, [r6, #60]	; 0x3c
   13a9c:	mov	r2, #3
   13aa0:	strh	r2, [r6, #60]	; 0x3c
   13aa4:	cmp	r0, #1
   13aa8:	beq	13b18 <__assert_fail@plt+0x1fc8>
   13aac:	cmp	r0, #2
   13ab0:	bne	13b30 <__assert_fail@plt+0x1fe0>
   13ab4:	ldrh	r2, [r6, #56]	; 0x38
   13ab8:	bic	r3, r2, #1
   13abc:	cmp	r3, #12
   13ac0:	bne	13b34 <__assert_fail@plt+0x1fe4>
   13ac4:	mov	r0, r4
   13ac8:	mov	r1, r6
   13acc:	mov	r2, #1
   13ad0:	bl	135bc <__assert_fail@plt+0x1a6c>
   13ad4:	cmp	r0, #1
   13ad8:	strh	r0, [r6, #56]	; 0x38
   13adc:	bne	13ec8 <__assert_fail@plt+0x2378>
   13ae0:	ldrb	r0, [r4, #48]	; 0x30
   13ae4:	tst	r0, #4
   13ae8:	bne	13ec8 <__assert_fail@plt+0x2378>
   13aec:	movw	r1, #41211	; 0xa0fb
   13af0:	mov	r0, r4
   13af4:	movt	r1, #1
   13af8:	bl	13878 <__assert_fail@plt+0x1d28>
   13afc:	cmn	r0, #1
   13b00:	str	r0, [r6, #36]	; 0x24
   13b04:	ble	13eb4 <__assert_fail@plt+0x2364>
   13b08:	ldrh	r0, [r6, #58]	; 0x3a
   13b0c:	orr	r0, r0, #2
   13b10:	strh	r0, [r6, #58]	; 0x3a
   13b14:	b	13ec8 <__assert_fail@plt+0x2378>
   13b18:	mov	r0, r4
   13b1c:	mov	r1, r6
   13b20:	mov	r2, #0
   13b24:	bl	135bc <__assert_fail@plt+0x1a6c>
   13b28:	strh	r0, [r6, #56]	; 0x38
   13b2c:	b	13b84 <__assert_fail@plt+0x2034>
   13b30:	ldrh	r2, [r6, #56]	; 0x38
   13b34:	cmp	r2, #1
   13b38:	bne	13b8c <__assert_fail@plt+0x203c>
   13b3c:	cmp	r0, #4
   13b40:	bne	13c1c <__assert_fail@plt+0x20cc>
   13b44:	ldrb	r0, [r6, #58]	; 0x3a
   13b48:	tst	r0, #2
   13b4c:	beq	13b58 <__assert_fail@plt+0x2008>
   13b50:	ldr	r0, [r6, #36]	; 0x24
   13b54:	bl	11afc <close@plt>
   13b58:	ldr	r0, [r4, #4]
   13b5c:	cmp	r0, #0
   13b60:	beq	13b70 <__assert_fail@plt+0x2020>
   13b64:	bl	138a8 <__assert_fail@plt+0x1d58>
   13b68:	mov	r0, #0
   13b6c:	str	r0, [r4, #4]
   13b70:	mov	r0, #6
   13b74:	strh	r0, [r6, #56]	; 0x38
   13b78:	mov	r0, r4
   13b7c:	mov	r1, r6
   13b80:	bl	14080 <__assert_fail@plt+0x2530>
   13b84:	mov	r5, r6
   13b88:	b	14074 <__assert_fail@plt+0x2524>
   13b8c:	ldr	r5, [r6, #8]
   13b90:	cmp	r5, #0
   13b94:	beq	13cb4 <__assert_fail@plt+0x2164>
   13b98:	mov	r0, r6
   13b9c:	str	r5, [r4]
   13ba0:	bl	13178 <__assert_fail@plt+0x1628>
   13ba4:	ldr	r0, [r5, #48]	; 0x30
   13ba8:	cmp	r0, #0
   13bac:	beq	13d00 <__assert_fail@plt+0x21b0>
   13bb0:	ldrh	r0, [r5, #60]	; 0x3c
   13bb4:	mov	r6, r5
   13bb8:	cmp	r0, #4
   13bbc:	beq	13b8c <__assert_fail@plt+0x203c>
   13bc0:	cmp	r0, #2
   13bc4:	bne	13f5c <__assert_fail@plt+0x240c>
   13bc8:	mov	r0, r4
   13bcc:	mov	r1, r5
   13bd0:	mov	r2, #1
   13bd4:	bl	135bc <__assert_fail@plt+0x1a6c>
   13bd8:	cmp	r0, #1
   13bdc:	strh	r0, [r5, #56]	; 0x38
   13be0:	bne	13f54 <__assert_fail@plt+0x2404>
   13be4:	ldrb	r0, [r4, #48]	; 0x30
   13be8:	tst	r0, #4
   13bec:	bne	13f54 <__assert_fail@plt+0x2404>
   13bf0:	movw	r1, #41211	; 0xa0fb
   13bf4:	mov	r0, r4
   13bf8:	movt	r1, #1
   13bfc:	bl	13878 <__assert_fail@plt+0x1d28>
   13c00:	cmn	r0, #1
   13c04:	str	r0, [r5, #36]	; 0x24
   13c08:	ble	13f40 <__assert_fail@plt+0x23f0>
   13c0c:	ldrh	r0, [r5, #58]	; 0x3a
   13c10:	orr	r0, r0, #2
   13c14:	strh	r0, [r5, #58]	; 0x3a
   13c18:	b	13f54 <__assert_fail@plt+0x2404>
   13c1c:	tst	r1, #64	; 0x40
   13c20:	beq	13c44 <__assert_fail@plt+0x20f4>
   13c24:	ldr	r0, [r4, #16]
   13c28:	ldr	r2, [r6, #64]	; 0x40
   13c2c:	ldr	r3, [r4, #20]
   13c30:	ldr	r5, [r6, #68]	; 0x44
   13c34:	eor	r3, r5, r3
   13c38:	eor	r0, r2, r0
   13c3c:	orrs	r0, r0, r3
   13c40:	bne	13b44 <__assert_fail@plt+0x1ff4>
   13c44:	ldr	r0, [r4, #4]
   13c48:	cmp	r0, #0
   13c4c:	beq	13dc0 <__assert_fail@plt+0x2270>
   13c50:	tst	r1, #4096	; 0x1000
   13c54:	bne	13dac <__assert_fail@plt+0x225c>
   13c58:	ldr	r3, [r6, #24]
   13c5c:	mov	r0, r4
   13c60:	mov	r1, r6
   13c64:	mvn	r2, #0
   13c68:	bl	14158 <__assert_fail@plt+0x2608>
   13c6c:	cmp	r0, #0
   13c70:	beq	13dd8 <__assert_fail@plt+0x2288>
   13c74:	bl	11994 <__errno_location@plt>
   13c78:	ldr	r0, [r0]
   13c7c:	str	r0, [r6, #32]
   13c80:	ldrh	r0, [r6, #58]	; 0x3a
   13c84:	orr	r0, r0, #1
   13c88:	strh	r0, [r6, #58]	; 0x3a
   13c8c:	ldr	r0, [r4, #4]
   13c90:	cmp	r0, #0
   13c94:	beq	13dd8 <__assert_fail@plt+0x2288>
   13c98:	ldmib	r0, {r1, r2}
   13c9c:	cmp	r2, #0
   13ca0:	ldr	r1, [r1, #24]
   13ca4:	str	r1, [r0, #24]
   13ca8:	mov	r0, r2
   13cac:	bne	13c98 <__assert_fail@plt+0x2148>
   13cb0:	b	13dd8 <__assert_fail@plt+0x2288>
   13cb4:	ldr	r5, [r6, #4]
   13cb8:	ldr	r0, [r5, #12]
   13cbc:	cmp	r0, #0
   13cc0:	beq	13e28 <__assert_fail@plt+0x22d8>
   13cc4:	str	r5, [r4]
   13cc8:	ldr	r1, [r5, #40]	; 0x28
   13ccc:	ldr	r0, [r4, #24]
   13cd0:	mov	r5, #0
   13cd4:	strb	r5, [r0, r1]
   13cd8:	mov	r0, r4
   13cdc:	mov	r1, #3
   13ce0:	bl	14338 <__assert_fail@plt+0x27e8>
   13ce4:	cmp	r0, #0
   13ce8:	beq	13e18 <__assert_fail@plt+0x22c8>
   13cec:	mov	r7, r0
   13cf0:	mov	r0, r6
   13cf4:	bl	13178 <__assert_fail@plt+0x1628>
   13cf8:	mov	r5, r7
   13cfc:	b	13f5c <__assert_fail@plt+0x240c>
   13d00:	mov	r0, r4
   13d04:	bl	14cc8 <__assert_fail@plt+0x3178>
   13d08:	cmp	r0, #0
   13d0c:	beq	13d24 <__assert_fail@plt+0x21d4>
   13d10:	ldr	r0, [r4, #48]	; 0x30
   13d14:	mov	r5, #0
   13d18:	orr	r0, r0, #8192	; 0x2000
   13d1c:	str	r0, [r4, #48]	; 0x30
   13d20:	b	14074 <__assert_fail@plt+0x2524>
   13d24:	mov	r0, r4
   13d28:	bl	13a48 <__assert_fail@plt+0x1ef8>
   13d2c:	ldr	r1, [r5, #52]	; 0x34
   13d30:	add	r6, r5, #168	; 0xa8
   13d34:	str	r1, [r5, #40]	; 0x28
   13d38:	add	r2, r1, #1
   13d3c:	mov	r1, r6
   13d40:	ldr	r0, [r4, #24]
   13d44:	bl	117a8 <memmove@plt>
   13d48:	mov	r0, r6
   13d4c:	mov	r1, #47	; 0x2f
   13d50:	bl	11a24 <strrchr@plt>
   13d54:	cmp	r0, #0
   13d58:	beq	13d94 <__assert_fail@plt+0x2244>
   13d5c:	cmp	r0, r6
   13d60:	bne	13d70 <__assert_fail@plt+0x2220>
   13d64:	ldrb	r1, [r5, #169]	; 0xa9
   13d68:	cmp	r1, #0
   13d6c:	beq	13d94 <__assert_fail@plt+0x2244>
   13d70:	add	r7, r0, #1
   13d74:	mov	r0, r7
   13d78:	bl	11964 <strlen@plt>
   13d7c:	mov	r8, r0
   13d80:	add	r2, r0, #1
   13d84:	mov	r0, r6
   13d88:	mov	r1, r7
   13d8c:	bl	117a8 <memmove@plt>
   13d90:	str	r8, [r5, #52]	; 0x34
   13d94:	ldr	r0, [r4, #24]
   13d98:	str	r0, [r5, #24]
   13d9c:	str	r0, [r5, #28]
   13da0:	mov	r0, r4
   13da4:	bl	137ec <__assert_fail@plt+0x1c9c>
   13da8:	b	13f98 <__assert_fail@plt+0x2448>
   13dac:	bic	r1, r1, #4096	; 0x1000
   13db0:	str	r1, [r4, #48]	; 0x30
   13db4:	bl	138a8 <__assert_fail@plt+0x1d58>
   13db8:	mov	r0, #0
   13dbc:	str	r0, [r4, #4]
   13dc0:	mov	r0, r4
   13dc4:	mov	r1, #3
   13dc8:	bl	14338 <__assert_fail@plt+0x27e8>
   13dcc:	cmp	r0, #0
   13dd0:	str	r0, [r4, #4]
   13dd4:	beq	13de8 <__assert_fail@plt+0x2298>
   13dd8:	ldr	r5, [r4, #4]
   13ddc:	mov	r0, #0
   13de0:	str	r0, [r4, #4]
   13de4:	b	13f5c <__assert_fail@plt+0x240c>
   13de8:	ldrb	r0, [r4, #49]	; 0x31
   13dec:	mov	r5, #0
   13df0:	tst	r0, #32
   13df4:	bne	14074 <__assert_fail@plt+0x2524>
   13df8:	ldr	r0, [r6, #32]
   13dfc:	cmp	r0, #0
   13e00:	beq	13b78 <__assert_fail@plt+0x2028>
   13e04:	ldrh	r0, [r6, #56]	; 0x38
   13e08:	cmp	r0, #4
   13e0c:	beq	13b78 <__assert_fail@plt+0x2028>
   13e10:	mov	r0, #7
   13e14:	b	13b74 <__assert_fail@plt+0x2024>
   13e18:	ldrb	r0, [r4, #49]	; 0x31
   13e1c:	tst	r0, #32
   13e20:	bne	14074 <__assert_fail@plt+0x2524>
   13e24:	ldr	r5, [r6, #4]
   13e28:	mov	r0, r6
   13e2c:	str	r5, [r4]
   13e30:	bl	13178 <__assert_fail@plt+0x1628>
   13e34:	ldr	r0, [r5, #48]	; 0x30
   13e38:	cmn	r0, #1
   13e3c:	beq	13e98 <__assert_fail@plt+0x2348>
   13e40:	ldrh	r0, [r5, #56]	; 0x38
   13e44:	cmp	r0, #11
   13e48:	beq	1407c <__assert_fail@plt+0x252c>
   13e4c:	ldr	r0, [r5, #40]	; 0x28
   13e50:	ldr	r1, [r4, #24]
   13e54:	mov	r2, #0
   13e58:	strb	r2, [r1, r0]
   13e5c:	ldr	r0, [r5, #48]	; 0x30
   13e60:	cmp	r0, #0
   13e64:	beq	13ed0 <__assert_fail@plt+0x2380>
   13e68:	ldrh	r0, [r5, #58]	; 0x3a
   13e6c:	tst	r0, #2
   13e70:	bne	13efc <__assert_fail@plt+0x23ac>
   13e74:	tst	r0, #1
   13e78:	bne	14038 <__assert_fail@plt+0x24e8>
   13e7c:	ldr	r1, [r5, #4]
   13e80:	movw	r3, #41210	; 0xa0fa
   13e84:	mov	r0, r4
   13e88:	mvn	r2, #0
   13e8c:	movt	r3, #1
   13e90:	bl	14158 <__assert_fail@plt+0x2608>
   13e94:	b	13ed8 <__assert_fail@plt+0x2388>
   13e98:	mov	r0, r5
   13e9c:	bl	13178 <__assert_fail@plt+0x1628>
   13ea0:	bl	11994 <__errno_location@plt>
   13ea4:	mov	r5, #0
   13ea8:	str	r5, [r0]
   13eac:	str	r5, [r4]
   13eb0:	b	14074 <__assert_fail@plt+0x2524>
   13eb4:	bl	11994 <__errno_location@plt>
   13eb8:	ldr	r0, [r0]
   13ebc:	mov	r1, #7
   13ec0:	strh	r1, [r6, #56]	; 0x38
   13ec4:	str	r0, [r6, #32]
   13ec8:	mov	r5, r6
   13ecc:	b	13f98 <__assert_fail@plt+0x2448>
   13ed0:	mov	r0, r4
   13ed4:	bl	14cc8 <__assert_fail@plt+0x3178>
   13ed8:	cmp	r0, #0
   13edc:	beq	14038 <__assert_fail@plt+0x24e8>
   13ee0:	bl	11994 <__errno_location@plt>
   13ee4:	ldr	r0, [r0]
   13ee8:	str	r0, [r5, #32]
   13eec:	ldr	r0, [r4, #48]	; 0x30
   13ef0:	orr	r0, r0, #8192	; 0x2000
   13ef4:	str	r0, [r4, #48]	; 0x30
   13ef8:	b	14038 <__assert_fail@plt+0x24e8>
   13efc:	ldr	r0, [r4, #48]	; 0x30
   13f00:	tst	r0, #4
   13f04:	bne	14030 <__assert_fail@plt+0x24e0>
   13f08:	ldr	r1, [r5, #36]	; 0x24
   13f0c:	tst	r0, #512	; 0x200
   13f10:	bne	14024 <__assert_fail@plt+0x24d4>
   13f14:	mov	r0, r1
   13f18:	bl	11a6c <fchdir@plt>
   13f1c:	cmp	r0, #0
   13f20:	beq	14030 <__assert_fail@plt+0x24e0>
   13f24:	bl	11994 <__errno_location@plt>
   13f28:	ldr	r0, [r0]
   13f2c:	str	r0, [r5, #32]
   13f30:	ldr	r0, [r4, #48]	; 0x30
   13f34:	orr	r0, r0, #8192	; 0x2000
   13f38:	str	r0, [r4, #48]	; 0x30
   13f3c:	b	14030 <__assert_fail@plt+0x24e0>
   13f40:	bl	11994 <__errno_location@plt>
   13f44:	ldr	r0, [r0]
   13f48:	mov	r1, #7
   13f4c:	strh	r1, [r5, #56]	; 0x38
   13f50:	str	r0, [r5, #32]
   13f54:	mov	r0, #3
   13f58:	strh	r0, [r5, #60]	; 0x3c
   13f5c:	ldr	r0, [r5, #4]
   13f60:	ldr	r1, [r0, #28]
   13f64:	ldr	r0, [r0, #40]	; 0x28
   13f68:	sub	r2, r0, #1
   13f6c:	ldrb	r1, [r1, r2]
   13f70:	cmp	r1, #47	; 0x2f
   13f74:	ldr	r1, [r4, #24]
   13f78:	moveq	r0, r2
   13f7c:	mov	r2, #47	; 0x2f
   13f80:	strb	r2, [r1, r0]!
   13f84:	ldr	r2, [r5, #52]	; 0x34
   13f88:	add	r0, r1, #1
   13f8c:	add	r1, r5, #168	; 0xa8
   13f90:	add	r2, r2, #1
   13f94:	bl	117a8 <memmove@plt>
   13f98:	str	r5, [r4]
   13f9c:	ldrh	r0, [r5, #56]	; 0x38
   13fa0:	cmp	r0, #11
   13fa4:	bne	13fdc <__assert_fail@plt+0x248c>
   13fa8:	add	r0, r5, #112	; 0x70
   13fac:	ldrd	r0, [r0]
   13fb0:	eor	r2, r0, #1
   13fb4:	orrs	r2, r2, r1
   13fb8:	beq	14074 <__assert_fail@plt+0x2524>
   13fbc:	eor	r0, r0, #2
   13fc0:	orrs	r0, r0, r1
   13fc4:	bne	1407c <__assert_fail@plt+0x252c>
   13fc8:	mov	r0, r4
   13fcc:	mov	r1, r5
   13fd0:	mov	r2, #0
   13fd4:	bl	135bc <__assert_fail@plt+0x1a6c>
   13fd8:	strh	r0, [r5, #56]	; 0x38
   13fdc:	cmp	r0, #1
   13fe0:	bne	14074 <__assert_fail@plt+0x2524>
   13fe4:	ldr	r0, [r5, #48]	; 0x30
   13fe8:	cmp	r0, #0
   13fec:	bne	13ffc <__assert_fail@plt+0x24ac>
   13ff0:	add	r0, r5, #64	; 0x40
   13ff4:	ldrd	r0, [r0]
   13ff8:	strd	r0, [r4, #16]
   13ffc:	mov	r0, r4
   14000:	mov	r1, r5
   14004:	bl	14d24 <__assert_fail@plt+0x31d4>
   14008:	cmp	r0, #0
   1400c:	bne	14074 <__assert_fail@plt+0x2524>
   14010:	bl	11994 <__errno_location@plt>
   14014:	mov	r1, #12
   14018:	mov	r5, #0
   1401c:	str	r1, [r0]
   14020:	b	14074 <__assert_fail@plt+0x2524>
   14024:	mov	r0, r4
   14028:	mov	r2, #1
   1402c:	bl	14de0 <__assert_fail@plt+0x3290>
   14030:	ldr	r0, [r5, #36]	; 0x24
   14034:	bl	11afc <close@plt>
   14038:	ldrh	r0, [r5, #56]	; 0x38
   1403c:	cmp	r0, #2
   14040:	beq	14068 <__assert_fail@plt+0x2518>
   14044:	ldr	r0, [r5, #32]
   14048:	mov	r1, #7
   1404c:	cmp	r0, #0
   14050:	movweq	r1, #6
   14054:	strh	r1, [r5, #56]	; 0x38
   14058:	bne	14068 <__assert_fail@plt+0x2518>
   1405c:	mov	r0, r4
   14060:	mov	r1, r5
   14064:	bl	14080 <__assert_fail@plt+0x2530>
   14068:	ldrb	r0, [r4, #49]	; 0x31
   1406c:	tst	r0, #32
   14070:	movne	r5, #0
   14074:	mov	r0, r5
   14078:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1407c:	bl	11af0 <abort@plt>
   14080:	push	{r4, r5, r7, sl, fp, lr}
   14084:	add	fp, sp, #16
   14088:	sub	sp, sp, #24
   1408c:	ldrh	r2, [r0, #48]	; 0x30
   14090:	movw	r3, #258	; 0x102
   14094:	add	lr, r1, #64	; 0x40
   14098:	add	r4, r1, #160	; 0xa0
   1409c:	tst	r2, r3
   140a0:	beq	140d8 <__assert_fail@plt+0x2588>
   140a4:	ldrd	r2, [lr]
   140a8:	mov	r1, sp
   140ac:	stm	sp, {r2, r3}
   140b0:	ldrd	r2, [r4]
   140b4:	str	r3, [sp, #12]
   140b8:	str	r2, [sp, #8]
   140bc:	ldr	r0, [r0, #56]	; 0x38
   140c0:	bl	16028 <__assert_fail@plt+0x44d8>
   140c4:	cmp	r0, #0
   140c8:	beq	14154 <__assert_fail@plt+0x2604>
   140cc:	bl	13178 <__assert_fail@plt+0x1628>
   140d0:	sub	sp, fp, #16
   140d4:	pop	{r4, r5, r7, sl, fp, pc}
   140d8:	ldr	r1, [r1, #4]
   140dc:	cmp	r1, #0
   140e0:	beq	140d0 <__assert_fail@plt+0x2580>
   140e4:	ldr	r2, [r1, #48]	; 0x30
   140e8:	cmp	r2, #0
   140ec:	bmi	140d0 <__assert_fail@plt+0x2580>
   140f0:	ldr	ip, [r0, #56]	; 0x38
   140f4:	ldrd	r2, [ip, #16]
   140f8:	orrs	r2, r2, r3
   140fc:	beq	14154 <__assert_fail@plt+0x2604>
   14100:	ldrd	r2, [r4]
   14104:	ldrd	r4, [ip]
   14108:	eor	r3, r5, r3
   1410c:	eor	r2, r4, r2
   14110:	orrs	r2, r2, r3
   14114:	bne	140d0 <__assert_fail@plt+0x2580>
   14118:	add	r3, ip, #8
   1411c:	ldm	lr, {r2, r5}
   14120:	ldm	r3, {r4, r7}
   14124:	eor	r7, r7, r5
   14128:	eor	r2, r4, r2
   1412c:	orrs	r2, r2, r7
   14130:	bne	140d0 <__assert_fail@plt+0x2580>
   14134:	add	r2, r1, #64	; 0x40
   14138:	add	r1, r1, #160	; 0xa0
   1413c:	ldm	r2, {r2, r5}
   14140:	stm	r3, {r2, r5}
   14144:	ldr	r0, [r0, #56]	; 0x38
   14148:	ldrd	r2, [r1]
   1414c:	strd	r2, [r0]
   14150:	b	140d0 <__assert_fail@plt+0x2580>
   14154:	bl	11af0 <abort@plt>
   14158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1415c:	add	fp, sp, #28
   14160:	sub	sp, sp, #108	; 0x6c
   14164:	mov	r7, r3
   14168:	mov	r4, r2
   1416c:	mov	r8, r1
   14170:	mov	sl, r0
   14174:	cmp	r3, #0
   14178:	beq	1419c <__assert_fail@plt+0x264c>
   1417c:	movw	r1, #41210	; 0xa0fa
   14180:	mov	r0, r7
   14184:	movt	r1, #1
   14188:	bl	11778 <strcmp@plt>
   1418c:	cmp	r0, #0
   14190:	mov	r6, r0
   14194:	movwne	r6, #1
   14198:	b	141a0 <__assert_fail@plt+0x2650>
   1419c:	mov	r6, #1
   141a0:	ldr	r0, [sl, #48]	; 0x30
   141a4:	tst	r0, #4
   141a8:	bne	14200 <__assert_fail@plt+0x26b0>
   141ac:	cmn	r4, #1
   141b0:	mov	r1, #0
   141b4:	mov	r9, #0
   141b8:	movwgt	r1, #1
   141bc:	orrs	r1, r1, r6
   141c0:	bne	14220 <__assert_fail@plt+0x26d0>
   141c4:	ands	r0, r0, #512	; 0x200
   141c8:	beq	14220 <__assert_fail@plt+0x26d0>
   141cc:	add	r4, sl, #60	; 0x3c
   141d0:	mov	r0, r4
   141d4:	bl	16220 <__assert_fail@plt+0x46d0>
   141d8:	cmp	r0, #0
   141dc:	bne	14228 <__assert_fail@plt+0x26d8>
   141e0:	mov	r0, r4
   141e4:	bl	16274 <__assert_fail@plt+0x4724>
   141e8:	cmn	r0, #1
   141ec:	ble	14228 <__assert_fail@plt+0x26d8>
   141f0:	mov	r4, r0
   141f4:	mov	r9, #0
   141f8:	mov	r7, #0
   141fc:	b	14244 <__assert_fail@plt+0x26f4>
   14200:	mov	r5, #0
   14204:	cmp	r4, #0
   14208:	bmi	1432c <__assert_fail@plt+0x27dc>
   1420c:	ands	r0, r0, #512	; 0x200
   14210:	beq	1432c <__assert_fail@plt+0x27dc>
   14214:	mov	r0, r4
   14218:	bl	11afc <close@plt>
   1421c:	b	1432c <__assert_fail@plt+0x27dc>
   14220:	cmn	r4, #1
   14224:	bgt	14244 <__assert_fail@plt+0x26f4>
   14228:	mov	r0, sl
   1422c:	mov	r1, r7
   14230:	bl	13878 <__assert_fail@plt+0x1d28>
   14234:	cmp	r0, #0
   14238:	bmi	142dc <__assert_fail@plt+0x278c>
   1423c:	mov	r4, r0
   14240:	mov	r9, #1
   14244:	ldr	r5, [sl, #48]	; 0x30
   14248:	tst	r5, #2
   1424c:	bne	14270 <__assert_fail@plt+0x2720>
   14250:	cmp	r7, #0
   14254:	beq	142c4 <__assert_fail@plt+0x2774>
   14258:	movw	r1, #41210	; 0xa0fa
   1425c:	mov	r0, r7
   14260:	movt	r1, #1
   14264:	bl	11778 <strcmp@plt>
   14268:	cmp	r0, #0
   1426c:	bne	142c4 <__assert_fail@plt+0x2774>
   14270:	mov	r1, sp
   14274:	mov	r0, r4
   14278:	bl	19b1c <lchmod@@Base+0x3850>
   1427c:	cmp	r0, #0
   14280:	bne	14308 <__assert_fail@plt+0x27b8>
   14284:	add	r0, r8, #64	; 0x40
   14288:	ldm	sp, {r2, r3}
   1428c:	ldrd	r0, [r0]
   14290:	eor	r1, r1, r3
   14294:	eor	r0, r0, r2
   14298:	orrs	r0, r0, r1
   1429c:	bne	142fc <__assert_fail@plt+0x27ac>
   142a0:	add	r0, r8, #160	; 0xa0
   142a4:	ldr	r2, [sp, #96]	; 0x60
   142a8:	ldr	r3, [sp, #100]	; 0x64
   142ac:	ldrd	r0, [r0]
   142b0:	eor	r1, r1, r3
   142b4:	eor	r0, r0, r2
   142b8:	orrs	r0, r0, r1
   142bc:	bne	142fc <__assert_fail@plt+0x27ac>
   142c0:	ldr	r5, [sl, #48]	; 0x30
   142c4:	tst	r5, #512	; 0x200
   142c8:	bne	142e4 <__assert_fail@plt+0x2794>
   142cc:	mov	r0, r4
   142d0:	bl	11a6c <fchdir@plt>
   142d4:	mov	r5, r0
   142d8:	b	1430c <__assert_fail@plt+0x27bc>
   142dc:	mvn	r5, #0
   142e0:	b	1432c <__assert_fail@plt+0x27dc>
   142e4:	mov	r0, sl
   142e8:	mov	r1, r4
   142ec:	mov	r2, r6
   142f0:	bl	14de0 <__assert_fail@plt+0x3290>
   142f4:	mov	r5, #0
   142f8:	b	1432c <__assert_fail@plt+0x27dc>
   142fc:	bl	11994 <__errno_location@plt>
   14300:	mov	r1, #2
   14304:	str	r1, [r0]
   14308:	mvn	r5, #0
   1430c:	cmp	r9, #0
   14310:	beq	1432c <__assert_fail@plt+0x27dc>
   14314:	bl	11994 <__errno_location@plt>
   14318:	ldr	r7, [r0]
   1431c:	mov	r6, r0
   14320:	mov	r0, r4
   14324:	bl	11afc <close@plt>
   14328:	str	r7, [r6]
   1432c:	mov	r0, r5
   14330:	sub	sp, fp, #28
   14334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1433c:	add	fp, sp, #28
   14340:	sub	sp, sp, #68	; 0x44
   14344:	ldr	sl, [r0]
   14348:	mov	r4, r1
   1434c:	str	r0, [fp, #-36]	; 0xffffffdc
   14350:	ldr	r9, [sl, #12]
   14354:	cmp	r9, #0
   14358:	beq	1439c <__assert_fail@plt+0x284c>
   1435c:	mov	r0, r9
   14360:	bl	11a60 <dirfd@plt>
   14364:	cmn	r0, #1
   14368:	str	r0, [fp, #-32]	; 0xffffffe0
   1436c:	ble	143d4 <__assert_fail@plt+0x2884>
   14370:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14374:	mov	ip, #0
   14378:	mov	r1, r7
   1437c:	ldr	r0, [r1, #44]!	; 0x2c
   14380:	str	r1, [sp, #24]
   14384:	mvn	r1, #0
   14388:	cmp	r0, #0
   1438c:	movweq	r1, #34464	; 0x86a0
   14390:	movteq	r1, #1
   14394:	str	r1, [sp, #32]
   14398:	b	1463c <__assert_fail@plt+0x2aec>
   1439c:	ldr	r3, [r0, #48]	; 0x30
   143a0:	mov	r2, r0
   143a4:	mvn	r0, #99	; 0x63
   143a8:	and	r1, r3, #516	; 0x204
   143ac:	cmp	r1, #512	; 0x200
   143b0:	ldr	r1, [sl, #24]
   143b4:	ldreq	r0, [r2, #32]
   143b8:	mov	r2, #0
   143bc:	tst	r3, #16
   143c0:	beq	143f4 <__assert_fail@plt+0x28a4>
   143c4:	tst	r3, #1
   143c8:	bne	143e8 <__assert_fail@plt+0x2898>
   143cc:	mov	r2, #32768	; 0x8000
   143d0:	b	143f4 <__assert_fail@plt+0x28a4>
   143d4:	ldr	r0, [sl, #12]
   143d8:	bl	11b2c <closedir@plt>
   143dc:	mov	r5, #0
   143e0:	str	r5, [sl, #12]
   143e4:	b	14434 <__assert_fail@plt+0x28e4>
   143e8:	ldr	r3, [sl, #48]	; 0x30
   143ec:	cmp	r3, #0
   143f0:	movne	r2, #32768	; 0x8000
   143f4:	sub	r3, fp, #32
   143f8:	bl	168c8 <lchmod@@Base+0x5fc>
   143fc:	cmp	r0, #0
   14400:	str	r0, [sl, #12]
   14404:	beq	14430 <__assert_fail@plt+0x28e0>
   14408:	ldrh	r0, [sl, #56]	; 0x38
   1440c:	cmp	r0, #11
   14410:	bne	14454 <__assert_fail@plt+0x2904>
   14414:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14418:	mov	r1, sl
   1441c:	mov	r2, #0
   14420:	mov	r0, r7
   14424:	bl	135bc <__assert_fail@plt+0x1a6c>
   14428:	strh	r0, [sl, #56]	; 0x38
   1442c:	b	1449c <__assert_fail@plt+0x294c>
   14430:	mov	r5, #0
   14434:	cmp	r4, #3
   14438:	bne	14cbc <__assert_fail@plt+0x316c>
   1443c:	mov	r0, #4
   14440:	strh	r0, [sl, #56]	; 0x38
   14444:	bl	11994 <__errno_location@plt>
   14448:	ldr	r0, [r0]
   1444c:	str	r0, [sl, #32]
   14450:	b	14cbc <__assert_fail@plt+0x316c>
   14454:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14458:	ldrb	r0, [r7, #49]	; 0x31
   1445c:	tst	r0, #1
   14460:	beq	1449c <__assert_fail@plt+0x294c>
   14464:	mov	r0, r7
   14468:	mov	r1, sl
   1446c:	bl	14080 <__assert_fail@plt+0x2530>
   14470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14474:	mov	r1, sl
   14478:	mov	r2, #0
   1447c:	mov	r5, #0
   14480:	bl	135bc <__assert_fail@plt+0x1a6c>
   14484:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14488:	mov	r1, sl
   1448c:	bl	14d24 <__assert_fail@plt+0x31d4>
   14490:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14494:	cmp	r0, #0
   14498:	beq	14540 <__assert_fail@plt+0x29f0>
   1449c:	mov	r1, r7
   144a0:	ldr	r0, [r1, #44]!	; 0x2c
   144a4:	str	r1, [sp, #24]
   144a8:	mvn	r1, #0
   144ac:	cmp	r0, #0
   144b0:	movweq	r1, #34464	; 0x86a0
   144b4:	movteq	r1, #1
   144b8:	cmp	r4, #2
   144bc:	str	r1, [sp, #32]
   144c0:	bne	144e0 <__assert_fail@plt+0x2990>
   144c4:	mov	ip, #1
   144c8:	cmp	r4, #3
   144cc:	bne	1463c <__assert_fail@plt+0x2aec>
   144d0:	sub	r0, r4, #3
   144d4:	mov	r8, r4
   144d8:	mov	r5, #0
   144dc:	b	14574 <__assert_fail@plt+0x2a24>
   144e0:	ldr	r0, [r7, #48]	; 0x30
   144e4:	and	r0, r0, #56	; 0x38
   144e8:	cmp	r0, #24
   144ec:	bne	14568 <__assert_fail@plt+0x2a18>
   144f0:	ldr	r0, [sl, #84]	; 0x54
   144f4:	cmp	r0, #2
   144f8:	bne	14568 <__assert_fail@plt+0x2a18>
   144fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14500:	mov	r0, sl
   14504:	bl	15080 <__assert_fail@plt+0x3530>
   14508:	movw	r1, #26984	; 0x6968
   1450c:	cmp	r0, r1
   14510:	ble	14550 <__assert_fail@plt+0x2a00>
   14514:	movw	r1, #26985	; 0x6969
   14518:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1451c:	cmp	r0, r1
   14520:	movwne	r1, #16719	; 0x414f
   14524:	movtne	r1, #21318	; 0x5346
   14528:	cmpne	r0, r1
   1452c:	beq	14568 <__assert_fail@plt+0x2a18>
   14530:	movw	r1, #40864	; 0x9fa0
   14534:	cmp	r0, r1
   14538:	beq	14568 <__assert_fail@plt+0x2a18>
   1453c:	b	144c4 <__assert_fail@plt+0x2974>
   14540:	bl	11994 <__errno_location@plt>
   14544:	mov	r1, #12
   14548:	str	r1, [r0]
   1454c:	b	14cbc <__assert_fail@plt+0x316c>
   14550:	movw	r1, #19778	; 0x4d42
   14554:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14558:	movt	r1, #65363	; 0xff53
   1455c:	cmp	r0, r1
   14560:	cmpne	r0, #0
   14564:	bne	144c4 <__assert_fail@plt+0x2974>
   14568:	sub	r0, r4, #3
   1456c:	mov	r8, r4
   14570:	mov	r5, #1
   14574:	clz	r0, r0
   14578:	lsr	r4, r0, #5
   1457c:	ldrb	r0, [r7, #49]	; 0x31
   14580:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14584:	tst	r0, #2
   14588:	beq	145a8 <__assert_fail@plt+0x2a58>
   1458c:	mov	r0, r2
   14590:	movw	r1, #1030	; 0x406
   14594:	mov	r2, #3
   14598:	bl	193e8 <lchmod@@Base+0x311c>
   1459c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   145a0:	mov	r2, r0
   145a4:	str	r0, [fp, #-32]	; 0xffffffe0
   145a8:	cmp	r2, #0
   145ac:	bmi	145cc <__assert_fail@plt+0x2a7c>
   145b0:	mov	r0, r7
   145b4:	mov	r1, sl
   145b8:	mov	r3, #0
   145bc:	bl	14158 <__assert_fail@plt+0x2608>
   145c0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   145c4:	cmp	r0, #0
   145c8:	beq	14634 <__assert_fail@plt+0x2ae4>
   145cc:	and	r0, r4, r5
   145d0:	cmp	r0, #1
   145d4:	bne	145e4 <__assert_fail@plt+0x2a94>
   145d8:	bl	11994 <__errno_location@plt>
   145dc:	ldr	r0, [r0]
   145e0:	str	r0, [sl, #32]
   145e4:	ldrh	r0, [sl, #58]	; 0x3a
   145e8:	orr	r0, r0, #1
   145ec:	strh	r0, [sl, #58]	; 0x3a
   145f0:	ldr	r0, [sl, #12]
   145f4:	bl	11b2c <closedir@plt>
   145f8:	ldr	r7, [fp, #-36]	; 0xffffffdc
   145fc:	mov	r4, #0
   14600:	str	r4, [sl, #12]
   14604:	ldrb	r0, [r7, #49]	; 0x31
   14608:	tst	r0, #2
   1460c:	beq	14624 <__assert_fail@plt+0x2ad4>
   14610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14614:	cmp	r0, #0
   14618:	bmi	14624 <__assert_fail@plt+0x2ad4>
   1461c:	bl	11afc <close@plt>
   14620:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14624:	str	r4, [sl, #12]
   14628:	mov	ip, #1
   1462c:	mov	r4, r8
   14630:	b	1463c <__assert_fail@plt+0x2aec>
   14634:	mov	r4, r8
   14638:	mov	ip, #0
   1463c:	ldr	r0, [sl, #40]	; 0x28
   14640:	ldr	r1, [sl, #28]
   14644:	mov	r5, #0
   14648:	str	r4, [sp, #12]
   1464c:	sub	r2, r0, #1
   14650:	ldrb	r1, [r1, r2]
   14654:	cmp	r1, #47	; 0x2f
   14658:	ldrb	r1, [r7, #48]	; 0x30
   1465c:	moveq	r0, r2
   14660:	tst	r1, #4
   14664:	mov	r1, #0
   14668:	str	r1, [sp, #40]	; 0x28
   1466c:	beq	14684 <__assert_fail@plt+0x2b34>
   14670:	ldr	r1, [r7, #24]
   14674:	mov	r2, #47	; 0x2f
   14678:	strb	r2, [r1, r0]!
   1467c:	add	r1, r1, #1
   14680:	str	r1, [sp, #40]	; 0x28
   14684:	ldr	r4, [sl, #12]
   14688:	add	r1, r0, #1
   1468c:	str	r1, [sp, #48]	; 0x30
   14690:	cmp	r4, #0
   14694:	beq	149d8 <__assert_fail@plt+0x2e88>
   14698:	ldr	r0, [sl, #48]	; 0x30
   1469c:	str	ip, [sp, #4]
   146a0:	str	r9, [sp, #8]
   146a4:	add	r0, r0, #1
   146a8:	str	r0, [sp, #28]
   146ac:	ldr	r0, [r7, #36]	; 0x24
   146b0:	sub	r0, r0, r1
   146b4:	str	r0, [fp, #-44]	; 0xffffffd4
   146b8:	bl	11994 <__errno_location@plt>
   146bc:	str	r0, [sp, #36]	; 0x24
   146c0:	mov	r0, #0
   146c4:	mov	r1, #0
   146c8:	mov	r5, #0
   146cc:	mov	r8, #0
   146d0:	mov	r9, #0
   146d4:	str	r0, [sp, #20]
   146d8:	mov	r0, #0
   146dc:	str	r0, [sp, #16]
   146e0:	ldr	r0, [sp, #36]	; 0x24
   146e4:	str	r5, [fp, #-40]	; 0xffffffd8
   146e8:	mov	r5, sl
   146ec:	str	r1, [r0]
   146f0:	mov	r0, r4
   146f4:	bl	11a3c <readdir64@plt>
   146f8:	cmp	r0, #0
   146fc:	beq	14a34 <__assert_fail@plt+0x2ee4>
   14700:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14704:	mov	sl, r0
   14708:	ldrb	r0, [r7, #48]	; 0x30
   1470c:	tst	r0, #32
   14710:	bne	14740 <__assert_fail@plt+0x2bf0>
   14714:	ldrb	r0, [sl, #19]
   14718:	cmp	r0, #46	; 0x2e
   1471c:	bne	14740 <__assert_fail@plt+0x2bf0>
   14720:	ldrb	r0, [sl, #20]
   14724:	cmp	r0, #0
   14728:	beq	1497c <__assert_fail@plt+0x2e2c>
   1472c:	cmp	r0, #46	; 0x2e
   14730:	bne	14740 <__assert_fail@plt+0x2bf0>
   14734:	ldrb	r0, [sl, #21]
   14738:	cmp	r0, #0
   1473c:	beq	1497c <__assert_fail@plt+0x2e2c>
   14740:	add	r6, sl, #19
   14744:	str	r9, [sp, #44]	; 0x2c
   14748:	mov	r0, r6
   1474c:	bl	11964 <strlen@plt>
   14750:	mov	r4, r0
   14754:	mov	r0, r7
   14758:	mov	r1, r6
   1475c:	mov	r2, r4
   14760:	bl	1353c <__assert_fail@plt+0x19ec>
   14764:	mov	r9, r0
   14768:	cmp	r0, #0
   1476c:	beq	149ec <__assert_fail@plt+0x2e9c>
   14770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14774:	cmp	r4, r0
   14778:	bcs	1478c <__assert_fail@plt+0x2c3c>
   1477c:	ldr	r2, [sp, #48]	; 0x30
   14780:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14784:	add	r4, r4, r2
   14788:	b	147ec <__assert_fail@plt+0x2c9c>
   1478c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14790:	ldr	r0, [sp, #48]	; 0x30
   14794:	ldr	r6, [r7, #24]
   14798:	add	r4, r4, r0
   1479c:	mov	r0, r7
   147a0:	add	r1, r4, #1
   147a4:	bl	134c8 <__assert_fail@plt+0x1978>
   147a8:	cmp	r0, #0
   147ac:	beq	149ec <__assert_fail@plt+0x2e9c>
   147b0:	ldr	r0, [r7, #24]
   147b4:	cmp	r6, r0
   147b8:	beq	147e0 <__assert_fail@plt+0x2c90>
   147bc:	ldrb	r1, [r7, #48]	; 0x30
   147c0:	ldr	r2, [sp, #48]	; 0x30
   147c4:	tst	r1, #4
   147c8:	ldr	r1, [sp, #40]	; 0x28
   147cc:	addne	r1, r0, r2
   147d0:	mov	r0, #1
   147d4:	str	r1, [sp, #40]	; 0x28
   147d8:	str	r0, [sp, #16]
   147dc:	b	147e4 <__assert_fail@plt+0x2c94>
   147e0:	ldr	r2, [sp, #48]	; 0x30
   147e4:	ldr	r0, [r7, #36]	; 0x24
   147e8:	sub	r0, r0, r2
   147ec:	cmp	r4, r2
   147f0:	bcc	14a90 <__assert_fail@plt+0x2f40>
   147f4:	ldr	r1, [sp, #28]
   147f8:	str	r0, [fp, #-44]	; 0xffffffd4
   147fc:	add	r0, r9, #160	; 0xa0
   14800:	str	r1, [r9, #48]	; 0x30
   14804:	ldr	r1, [r7]
   14808:	str	r4, [r9, #40]	; 0x28
   1480c:	str	r1, [r9, #4]
   14810:	ldrd	r2, [sl]
   14814:	strd	r2, [r0]
   14818:	ldrb	r0, [r7, #48]	; 0x30
   1481c:	tst	r0, #4
   14820:	bne	14830 <__assert_fail@plt+0x2ce0>
   14824:	add	r0, r9, #168	; 0xa8
   14828:	str	r0, [r9, #24]
   1482c:	b	14850 <__assert_fail@plt+0x2d00>
   14830:	ldr	r0, [r9, #28]
   14834:	ldr	r2, [r9, #52]	; 0x34
   14838:	add	r1, r9, #168	; 0xa8
   1483c:	str	r0, [r9, #24]
   14840:	ldr	r0, [sp, #40]	; 0x28
   14844:	add	r2, r2, #1
   14848:	bl	117a8 <memmove@plt>
   1484c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14850:	ldr	r0, [r7, #44]	; 0x2c
   14854:	ldr	r2, [r7, #48]	; 0x30
   14858:	cmp	r0, #0
   1485c:	beq	14890 <__assert_fail@plt+0x2d40>
   14860:	ands	r0, r2, #1024	; 0x400
   14864:	bne	14890 <__assert_fail@plt+0x2d40>
   14868:	mov	r0, r7
   1486c:	mov	r1, r9
   14870:	mov	r2, #0
   14874:	bl	135bc <__assert_fail@plt+0x1a6c>
   14878:	mov	sl, r5
   1487c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14880:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14884:	mov	r1, #0
   14888:	strh	r0, [r9, #56]	; 0x38
   1488c:	b	14910 <__assert_fail@plt+0x2dc0>
   14890:	ldrb	r3, [sl, #18]
   14894:	mov	r0, #0
   14898:	tst	r2, #8
   1489c:	mov	r1, #0
   148a0:	beq	148c4 <__assert_fail@plt+0x2d74>
   148a4:	orr	r1, r3, #4
   148a8:	cmp	r1, #4
   148ac:	mov	r1, #0
   148b0:	beq	148c4 <__assert_fail@plt+0x2d74>
   148b4:	eor	r1, r3, #10
   148b8:	and	r2, r2, #16
   148bc:	orrs	r1, r2, r1
   148c0:	movwne	r1, #1
   148c4:	mov	r6, #11
   148c8:	mov	sl, r5
   148cc:	sub	r3, r3, #1
   148d0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   148d4:	add	r2, r9, #112	; 0x70
   148d8:	strh	r6, [r9, #56]	; 0x38
   148dc:	uxtb	r6, r3
   148e0:	cmp	r6, #11
   148e4:	bhi	148f8 <__assert_fail@plt+0x2da8>
   148e8:	sxtb	r0, r3
   148ec:	movw	r3, #41216	; 0xa100
   148f0:	movt	r3, #1
   148f4:	ldr	r0, [r3, r0, lsl #2]
   148f8:	cmp	r1, #0
   148fc:	str	r0, [r9, #80]	; 0x50
   14900:	mov	r0, #2
   14904:	mov	r1, #0
   14908:	movwne	r0, #1
   1490c:	strd	r0, [r2]
   14910:	cmp	r5, #0
   14914:	str	r1, [r9, #8]
   14918:	mov	r4, r9
   1491c:	ldrne	r0, [sp, #44]	; 0x2c
   14920:	movne	r4, r5
   14924:	strne	r9, [r0, #8]
   14928:	movw	r0, #10000	; 0x2710
   1492c:	cmp	r8, r0
   14930:	bne	149a8 <__assert_fail@plt+0x2e58>
   14934:	ldr	r0, [sp, #24]
   14938:	ldr	r0, [r0]
   1493c:	cmp	r0, #0
   14940:	bne	149a8 <__assert_fail@plt+0x2e58>
   14944:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14948:	mov	r0, sl
   1494c:	bl	15080 <__assert_fail@plt+0x3530>
   14950:	mov	r1, #0
   14954:	str	r1, [sp, #20]
   14958:	movw	r1, #19778	; 0x4d42
   1495c:	movt	r1, #65363	; 0xff53
   14960:	cmp	r0, r1
   14964:	movwne	r1, #26985	; 0x6969
   14968:	cmpne	r0, r1
   1496c:	bne	1498c <__assert_fail@plt+0x2e3c>
   14970:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14974:	mov	r1, #0
   14978:	b	149a8 <__assert_fail@plt+0x2e58>
   1497c:	mov	sl, r5
   14980:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14984:	mov	r1, #0
   14988:	b	149bc <__assert_fail@plt+0x2e6c>
   1498c:	movw	r1, #6548	; 0x1994
   14990:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14994:	movt	r1, #258	; 0x102
   14998:	cmp	r0, r1
   1499c:	mov	r1, #0
   149a0:	movne	r0, #1
   149a4:	strne	r0, [sp, #20]
   149a8:	ldr	r0, [sp, #32]
   149ac:	add	r8, r8, #1
   149b0:	cmp	r0, r8
   149b4:	bls	14ad8 <__assert_fail@plt+0x2f88>
   149b8:	mov	r5, r4
   149bc:	ldr	r4, [sl, #12]
   149c0:	cmp	r4, #0
   149c4:	bne	146e0 <__assert_fail@plt+0x2b90>
   149c8:	ldr	r0, [sp, #16]
   149cc:	ldr	r4, [sp, #12]
   149d0:	ldr	r9, [sp, #8]
   149d4:	b	14a84 <__assert_fail@plt+0x2f34>
   149d8:	ldr	r4, [sp, #12]
   149dc:	mov	r8, #0
   149e0:	mov	r0, #0
   149e4:	str	r0, [sp, #20]
   149e8:	b	14b80 <__assert_fail@plt+0x3030>
   149ec:	ldr	r6, [sp, #36]	; 0x24
   149f0:	mov	r0, r9
   149f4:	ldr	r4, [r6]
   149f8:	bl	13178 <__assert_fail@plt+0x1628>
   149fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a00:	bl	138a8 <__assert_fail@plt+0x1d58>
   14a04:	ldr	r0, [r5, #12]
   14a08:	mov	r8, r5
   14a0c:	bl	11b2c <closedir@plt>
   14a10:	mov	r0, #7
   14a14:	strh	r0, [r5, #56]	; 0x38
   14a18:	mov	r5, #0
   14a1c:	str	r5, [r8, #12]
   14a20:	ldr	r0, [r7, #48]	; 0x30
   14a24:	orr	r0, r0, #8192	; 0x2000
   14a28:	str	r0, [r7, #48]	; 0x30
   14a2c:	str	r4, [r6]
   14a30:	b	14cbc <__assert_fail@plt+0x316c>
   14a34:	ldr	r0, [sp, #36]	; 0x24
   14a38:	ldr	r9, [sp, #8]
   14a3c:	mov	sl, r5
   14a40:	ldr	r0, [r0]
   14a44:	cmp	r0, #0
   14a48:	beq	14a60 <__assert_fail@plt+0x2f10>
   14a4c:	str	r0, [sl, #32]
   14a50:	orrs	r0, r9, r8
   14a54:	mov	r0, #4
   14a58:	movwne	r0, #7
   14a5c:	strh	r0, [sl, #56]	; 0x38
   14a60:	ldr	r0, [sl, #12]
   14a64:	ldr	r4, [sp, #12]
   14a68:	ldr	r5, [fp, #-40]	; 0xffffffd8
   14a6c:	cmp	r0, #0
   14a70:	beq	14a80 <__assert_fail@plt+0x2f30>
   14a74:	bl	11b2c <closedir@plt>
   14a78:	mov	r0, #0
   14a7c:	str	r0, [sl, #12]
   14a80:	ldr	r0, [sp, #16]
   14a84:	tst	r0, #1
   14a88:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14a8c:	b	14aec <__assert_fail@plt+0x2f9c>
   14a90:	mov	r0, r9
   14a94:	bl	13178 <__assert_fail@plt+0x1628>
   14a98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14a9c:	bl	138a8 <__assert_fail@plt+0x1d58>
   14aa0:	ldr	r0, [r5, #12]
   14aa4:	mov	r8, r5
   14aa8:	bl	11b2c <closedir@plt>
   14aac:	mov	r0, #7
   14ab0:	ldr	r1, [sp, #36]	; 0x24
   14ab4:	strh	r0, [r5, #56]	; 0x38
   14ab8:	mov	r5, #0
   14abc:	str	r5, [r8, #12]
   14ac0:	ldr	r0, [r7, #48]	; 0x30
   14ac4:	orr	r0, r0, #8192	; 0x2000
   14ac8:	str	r0, [r7, #48]	; 0x30
   14acc:	mov	r0, #36	; 0x24
   14ad0:	str	r0, [r1]
   14ad4:	b	14cbc <__assert_fail@plt+0x316c>
   14ad8:	ldr	r0, [sp, #16]
   14adc:	mov	r5, r4
   14ae0:	ldr	r4, [sp, #12]
   14ae4:	ldr	r9, [sp, #8]
   14ae8:	tst	r0, #1
   14aec:	ldr	ip, [sp, #4]
   14af0:	beq	14b80 <__assert_fail@plt+0x3030>
   14af4:	ldr	r1, [r7, #4]
   14af8:	ldr	r0, [r7, #24]
   14afc:	cmp	r1, #0
   14b00:	beq	14b30 <__assert_fail@plt+0x2fe0>
   14b04:	ldr	r2, [r1, #24]
   14b08:	add	r3, r1, #168	; 0xa8
   14b0c:	cmp	r2, r3
   14b10:	beq	14b24 <__assert_fail@plt+0x2fd4>
   14b14:	ldr	r3, [r1, #28]
   14b18:	sub	r2, r2, r3
   14b1c:	add	r2, r0, r2
   14b20:	str	r2, [r1, #24]
   14b24:	str	r0, [r1, #28]
   14b28:	ldr	r1, [r1, #8]
   14b2c:	b	14afc <__assert_fail@plt+0x2fac>
   14b30:	ldr	r1, [r5, #48]	; 0x30
   14b34:	cmp	r1, #0
   14b38:	bmi	14b80 <__assert_fail@plt+0x3030>
   14b3c:	mov	r1, r5
   14b40:	ldr	r2, [r1, #24]
   14b44:	add	r3, r1, #168	; 0xa8
   14b48:	cmp	r2, r3
   14b4c:	beq	14b60 <__assert_fail@plt+0x3010>
   14b50:	ldr	r3, [r1, #28]
   14b54:	sub	r2, r2, r3
   14b58:	add	r2, r0, r2
   14b5c:	str	r2, [r1, #24]
   14b60:	str	r0, [r1, #28]
   14b64:	ldr	r2, [r1, #8]
   14b68:	cmp	r2, #0
   14b6c:	ldreq	r2, [r1, #4]
   14b70:	ldr	r1, [r2, #48]	; 0x30
   14b74:	cmn	r1, #1
   14b78:	mov	r1, r2
   14b7c:	bgt	14b40 <__assert_fail@plt+0x2ff0>
   14b80:	ldrb	r0, [r7, #48]	; 0x30
   14b84:	tst	r0, #4
   14b88:	beq	14bb4 <__assert_fail@plt+0x3064>
   14b8c:	ldr	r2, [sp, #40]	; 0x28
   14b90:	ldr	r0, [r7, #36]	; 0x24
   14b94:	ldr	r3, [sp, #48]	; 0x30
   14b98:	cmp	r3, r0
   14b9c:	sub	r1, r2, #1
   14ba0:	mov	r0, #0
   14ba4:	moveq	r2, r1
   14ba8:	cmp	r8, #0
   14bac:	moveq	r2, r1
   14bb0:	strb	r0, [r2]
   14bb4:	cmp	r9, #0
   14bb8:	movwne	r9, #1
   14bbc:	orrs	r0, r9, ip
   14bc0:	beq	14bec <__assert_fail@plt+0x309c>
   14bc4:	cmp	r8, #0
   14bc8:	bne	14c20 <__assert_fail@plt+0x30d0>
   14bcc:	cmp	r4, #3
   14bd0:	bne	14cb0 <__assert_fail@plt+0x3160>
   14bd4:	ldrh	r0, [sl, #56]	; 0x38
   14bd8:	cmp	r0, #4
   14bdc:	cmpne	r0, #7
   14be0:	movne	r0, #6
   14be4:	strhne	r0, [sl, #56]	; 0x38
   14be8:	b	14cb0 <__assert_fail@plt+0x3160>
   14bec:	cmp	r4, #1
   14bf0:	cmpne	r8, #0
   14bf4:	bne	14c20 <__assert_fail@plt+0x30d0>
   14bf8:	ldr	r0, [sl, #48]	; 0x30
   14bfc:	cmp	r0, #0
   14c00:	beq	14c88 <__assert_fail@plt+0x3138>
   14c04:	ldr	r1, [sl, #4]
   14c08:	movw	r3, #41210	; 0xa0fa
   14c0c:	mov	r0, r7
   14c10:	mvn	r2, #0
   14c14:	movt	r3, #1
   14c18:	bl	14158 <__assert_fail@plt+0x2608>
   14c1c:	b	14c90 <__assert_fail@plt+0x3140>
   14c20:	ldr	r0, [sp, #20]
   14c24:	tst	r0, #1
   14c28:	beq	14c58 <__assert_fail@plt+0x3108>
   14c2c:	movw	r0, #20552	; 0x5048
   14c30:	mov	r1, r5
   14c34:	mov	r2, r8
   14c38:	movt	r0, #1
   14c3c:	str	r0, [r7, #44]	; 0x2c
   14c40:	mov	r0, r7
   14c44:	bl	136f8 <__assert_fail@plt+0x1ba8>
   14c48:	mov	r5, r0
   14c4c:	mov	r0, #0
   14c50:	str	r0, [r7, #44]	; 0x2c
   14c54:	b	14cbc <__assert_fail@plt+0x316c>
   14c58:	cmp	r8, #2
   14c5c:	bcc	14cbc <__assert_fail@plt+0x316c>
   14c60:	ldr	r0, [sp, #24]
   14c64:	ldr	r0, [r0]
   14c68:	cmp	r0, #0
   14c6c:	beq	14cbc <__assert_fail@plt+0x316c>
   14c70:	mov	r0, r7
   14c74:	mov	r1, r5
   14c78:	mov	r2, r8
   14c7c:	bl	136f8 <__assert_fail@plt+0x1ba8>
   14c80:	mov	r5, r0
   14c84:	b	14cbc <__assert_fail@plt+0x316c>
   14c88:	mov	r0, r7
   14c8c:	bl	14cc8 <__assert_fail@plt+0x3178>
   14c90:	ldr	r7, [fp, #-36]	; 0xffffffdc
   14c94:	cmp	r0, #0
   14c98:	beq	14bc4 <__assert_fail@plt+0x3074>
   14c9c:	mov	r0, #7
   14ca0:	strh	r0, [sl, #56]	; 0x38
   14ca4:	ldr	r0, [r7, #48]	; 0x30
   14ca8:	orr	r0, r0, #8192	; 0x2000
   14cac:	str	r0, [r7, #48]	; 0x30
   14cb0:	mov	r0, r5
   14cb4:	bl	138a8 <__assert_fail@plt+0x1d58>
   14cb8:	mov	r5, #0
   14cbc:	mov	r0, r5
   14cc0:	sub	sp, fp, #28
   14cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cc8:	push	{r4, r5, fp, lr}
   14ccc:	add	fp, sp, #8
   14cd0:	mov	r4, r0
   14cd4:	ldr	r0, [r0, #48]	; 0x30
   14cd8:	mov	r5, #0
   14cdc:	tst	r0, #4
   14ce0:	bne	14d14 <__assert_fail@plt+0x31c4>
   14ce4:	tst	r0, #512	; 0x200
   14ce8:	bne	14d04 <__assert_fail@plt+0x31b4>
   14cec:	ldr	r0, [r4, #28]
   14cf0:	bl	11a6c <fchdir@plt>
   14cf4:	cmp	r0, #0
   14cf8:	mov	r5, r0
   14cfc:	movwne	r5, #1
   14d00:	b	14d14 <__assert_fail@plt+0x31c4>
   14d04:	mov	r0, r4
   14d08:	mvn	r1, #99	; 0x63
   14d0c:	mov	r2, #1
   14d10:	bl	14de0 <__assert_fail@plt+0x3290>
   14d14:	add	r0, r4, #60	; 0x3c
   14d18:	bl	13a10 <__assert_fail@plt+0x1ec0>
   14d1c:	mov	r0, r5
   14d20:	pop	{r4, r5, fp, pc}
   14d24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d28:	add	fp, sp, #24
   14d2c:	mov	r6, r0
   14d30:	ldrh	r0, [r0, #48]	; 0x30
   14d34:	mov	r4, r1
   14d38:	add	r5, r1, #64	; 0x40
   14d3c:	movw	r1, #258	; 0x102
   14d40:	tst	r0, r1
   14d44:	beq	14db8 <__assert_fail@plt+0x3268>
   14d48:	mov	r0, #24
   14d4c:	bl	190e0 <lchmod@@Base+0x2e14>
   14d50:	mov	r8, #0
   14d54:	cmp	r0, #0
   14d58:	beq	14dd8 <__assert_fail@plt+0x3288>
   14d5c:	ldrd	r2, [r5]
   14d60:	mov	r7, r0
   14d64:	add	r0, r4, #160	; 0xa0
   14d68:	stm	r7, {r2, r3}
   14d6c:	add	r2, r7, #8
   14d70:	ldrd	r0, [r0]
   14d74:	stm	r2, {r0, r1, r4}
   14d78:	mov	r1, r7
   14d7c:	ldr	r0, [r6, #56]	; 0x38
   14d80:	bl	15fe8 <__assert_fail@plt+0x4498>
   14d84:	cmp	r0, r7
   14d88:	beq	14db0 <__assert_fail@plt+0x3260>
   14d8c:	mov	r5, r0
   14d90:	mov	r0, r7
   14d94:	bl	13178 <__assert_fail@plt+0x1628>
   14d98:	cmp	r5, #0
   14d9c:	beq	14dd8 <__assert_fail@plt+0x3288>
   14da0:	ldr	r0, [r5, #16]
   14da4:	mov	r1, #2
   14da8:	strh	r1, [r4, #56]	; 0x38
   14dac:	str	r0, [r4]
   14db0:	mov	r8, #1
   14db4:	b	14dd8 <__assert_fail@plt+0x3288>
   14db8:	ldr	r0, [r6, #56]	; 0x38
   14dbc:	mov	r1, r5
   14dc0:	bl	1927c <lchmod@@Base+0x2fb0>
   14dc4:	cmp	r0, #0
   14dc8:	mov	r8, #1
   14dcc:	movne	r0, #2
   14dd0:	strhne	r0, [r4, #56]	; 0x38
   14dd4:	strne	r4, [r4]
   14dd8:	mov	r0, r8
   14ddc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14de0:	push	{r4, r5, fp, lr}
   14de4:	add	fp, sp, #8
   14de8:	mov	r4, r1
   14dec:	ldr	r1, [r0, #32]
   14df0:	mov	r5, r0
   14df4:	cmp	r1, r4
   14df8:	bne	14e04 <__assert_fail@plt+0x32b4>
   14dfc:	cmn	r1, #100	; 0x64
   14e00:	bne	14e44 <__assert_fail@plt+0x32f4>
   14e04:	cmp	r2, #0
   14e08:	beq	14e20 <__assert_fail@plt+0x32d0>
   14e0c:	add	r0, r5, #60	; 0x3c
   14e10:	bl	16228 <__assert_fail@plt+0x46d8>
   14e14:	cmp	r0, #0
   14e18:	bpl	14e38 <__assert_fail@plt+0x32e8>
   14e1c:	b	14e3c <__assert_fail@plt+0x32ec>
   14e20:	cmp	r1, #0
   14e24:	bmi	14e3c <__assert_fail@plt+0x32ec>
   14e28:	ldr	r0, [r5, #48]	; 0x30
   14e2c:	ands	r0, r0, #4
   14e30:	bne	14e3c <__assert_fail@plt+0x32ec>
   14e34:	mov	r0, r1
   14e38:	bl	11afc <close@plt>
   14e3c:	str	r4, [r5, #32]
   14e40:	pop	{r4, r5, fp, pc}
   14e44:	bl	11af0 <abort@plt>
   14e48:	push	{fp, lr}
   14e4c:	mov	fp, sp
   14e50:	cmp	r2, #5
   14e54:	bcc	14e6c <__assert_fail@plt+0x331c>
   14e58:	bl	11994 <__errno_location@plt>
   14e5c:	mov	r1, #22
   14e60:	str	r1, [r0]
   14e64:	mov	r0, #1
   14e68:	pop	{fp, pc}
   14e6c:	mov	r0, #0
   14e70:	strh	r2, [r1, #60]	; 0x3c
   14e74:	pop	{fp, pc}
   14e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e7c:	add	fp, sp, #28
   14e80:	sub	sp, sp, #4
   14e84:	mov	r5, r0
   14e88:	mvn	r0, #4096	; 0x1000
   14e8c:	tst	r1, r0
   14e90:	beq	14ea8 <__assert_fail@plt+0x3358>
   14e94:	bl	11994 <__errno_location@plt>
   14e98:	mov	r1, #22
   14e9c:	mov	r4, #0
   14ea0:	str	r1, [r0]
   14ea4:	b	14fa4 <__assert_fail@plt+0x3454>
   14ea8:	ldr	r6, [r5]
   14eac:	mov	r7, r1
   14eb0:	bl	11994 <__errno_location@plt>
   14eb4:	mov	r4, #0
   14eb8:	mov	sl, r0
   14ebc:	str	r4, [r0]
   14ec0:	ldrb	r0, [r5, #49]	; 0x31
   14ec4:	tst	r0, #32
   14ec8:	bne	14fa4 <__assert_fail@plt+0x3454>
   14ecc:	ldrh	r0, [r6, #56]	; 0x38
   14ed0:	cmp	r0, #1
   14ed4:	beq	14ee4 <__assert_fail@plt+0x3394>
   14ed8:	cmp	r0, #9
   14edc:	ldreq	r4, [r6, #8]
   14ee0:	b	14fa4 <__assert_fail@plt+0x3454>
   14ee4:	ldr	r0, [r5, #4]
   14ee8:	cmp	r0, #0
   14eec:	blne	138a8 <__assert_fail@plt+0x1d58>
   14ef0:	mov	r9, #1
   14ef4:	cmp	r7, #4096	; 0x1000
   14ef8:	bne	14f0c <__assert_fail@plt+0x33bc>
   14efc:	ldr	r0, [r5, #48]	; 0x30
   14f00:	mov	r9, #2
   14f04:	orr	r0, r0, #4096	; 0x1000
   14f08:	str	r0, [r5, #48]	; 0x30
   14f0c:	ldr	r0, [r6, #48]	; 0x30
   14f10:	cmp	r0, #0
   14f14:	bne	14f90 <__assert_fail@plt+0x3440>
   14f18:	ldr	r0, [r6, #24]
   14f1c:	ldrb	r0, [r0]
   14f20:	cmp	r0, #47	; 0x2f
   14f24:	beq	14f90 <__assert_fail@plt+0x3440>
   14f28:	ldrb	r0, [r5, #48]	; 0x30
   14f2c:	tst	r0, #4
   14f30:	bne	14f90 <__assert_fail@plt+0x3440>
   14f34:	movw	r1, #41211	; 0xa0fb
   14f38:	mov	r0, r5
   14f3c:	movt	r1, #1
   14f40:	bl	13878 <__assert_fail@plt+0x1d28>
   14f44:	cmn	r0, #1
   14f48:	ble	14fb0 <__assert_fail@plt+0x3460>
   14f4c:	mov	r8, r0
   14f50:	mov	r0, r5
   14f54:	mov	r1, r9
   14f58:	bl	14338 <__assert_fail@plt+0x27e8>
   14f5c:	str	r0, [r5, #4]
   14f60:	ldrb	r0, [r5, #49]	; 0x31
   14f64:	tst	r0, #2
   14f68:	bne	14fbc <__assert_fail@plt+0x346c>
   14f6c:	mov	r0, r8
   14f70:	bl	11a6c <fchdir@plt>
   14f74:	cmp	r0, #0
   14f78:	beq	14fd0 <__assert_fail@plt+0x3480>
   14f7c:	ldr	r5, [sl]
   14f80:	mov	r0, r8
   14f84:	bl	11afc <close@plt>
   14f88:	str	r5, [sl]
   14f8c:	b	14fa4 <__assert_fail@plt+0x3454>
   14f90:	mov	r0, r5
   14f94:	mov	r1, r9
   14f98:	bl	14338 <__assert_fail@plt+0x27e8>
   14f9c:	mov	r4, r0
   14fa0:	str	r0, [r5, #4]
   14fa4:	mov	r0, r4
   14fa8:	sub	sp, fp, #28
   14fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fb0:	mov	r4, #0
   14fb4:	str	r4, [r5, #4]
   14fb8:	b	14fa4 <__assert_fail@plt+0x3454>
   14fbc:	mov	r0, r5
   14fc0:	mov	r1, r8
   14fc4:	mov	r2, #1
   14fc8:	bl	14de0 <__assert_fail@plt+0x3290>
   14fcc:	b	14fd8 <__assert_fail@plt+0x3488>
   14fd0:	mov	r0, r8
   14fd4:	bl	11afc <close@plt>
   14fd8:	ldr	r4, [r5, #4]
   14fdc:	b	14fa4 <__assert_fail@plt+0x3454>
   14fe0:	push	{fp, lr}
   14fe4:	mov	fp, sp
   14fe8:	mov	r2, r1
   14fec:	ldrd	r0, [r0, #8]
   14ff0:	mov	r3, #0
   14ff4:	bl	1991c <lchmod@@Base+0x3650>
   14ff8:	mov	r0, r2
   14ffc:	pop	{fp, pc}
   15000:	push	{r4, r5, fp, lr}
   15004:	add	fp, sp, #8
   15008:	ldrd	r2, [r1, #8]
   1500c:	ldrd	r4, [r0, #8]
   15010:	eor	r3, r5, r3
   15014:	eor	r2, r4, r2
   15018:	orrs	r2, r2, r3
   1501c:	mov	r2, #0
   15020:	bne	15040 <__assert_fail@plt+0x34f0>
   15024:	ldrd	r2, [r1]
   15028:	ldrd	r0, [r0]
   1502c:	eor	r1, r1, r3
   15030:	eor	r0, r0, r2
   15034:	orr	r0, r0, r1
   15038:	clz	r0, r0
   1503c:	lsr	r2, r0, #5
   15040:	mov	r0, r2
   15044:	pop	{r4, r5, fp, pc}
   15048:	push	{r4, r5, fp, lr}
   1504c:	add	fp, sp, #8
   15050:	ldr	r0, [r0]
   15054:	ldrd	r2, [r0, #160]	; 0xa0
   15058:	ldr	r0, [r1]
   1505c:	ldrd	r4, [r0, #160]	; 0xa0
   15060:	mov	r0, #0
   15064:	subs	r1, r4, r2
   15068:	sbcs	r1, r5, r3
   1506c:	movwcc	r0, #1
   15070:	subs	r1, r2, r4
   15074:	sbcs	r1, r3, r5
   15078:	subcc	r0, r0, #1
   1507c:	pop	{r4, r5, fp, pc}
   15080:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15084:	add	fp, sp, #24
   15088:	sub	sp, sp, #96	; 0x60
   1508c:	ldr	r7, [r0, #44]	; 0x2c
   15090:	mov	r4, r0
   15094:	mov	r5, #0
   15098:	ldrb	r0, [r7, #49]	; 0x31
   1509c:	tst	r0, #2
   150a0:	beq	15194 <__assert_fail@plt+0x3644>
   150a4:	ldr	r6, [r7, #52]	; 0x34
   150a8:	mov	r9, r1
   150ac:	cmp	r6, #0
   150b0:	bne	150f0 <__assert_fail@plt+0x35a0>
   150b4:	movw	r0, #12664	; 0x3178
   150b8:	movw	r2, #20896	; 0x51a0
   150bc:	movw	r3, #20928	; 0x51c0
   150c0:	mov	r1, #0
   150c4:	mov	r8, #0
   150c8:	movt	r0, #1
   150cc:	movt	r2, #1
   150d0:	movt	r3, #1
   150d4:	str	r0, [sp]
   150d8:	mov	r0, #13
   150dc:	bl	1566c <__assert_fail@plt+0x3b1c>
   150e0:	mov	r6, r0
   150e4:	cmp	r0, #0
   150e8:	str	r0, [r7, #52]	; 0x34
   150ec:	beq	15120 <__assert_fail@plt+0x35d0>
   150f0:	ldrd	r0, [r4, #64]	; 0x40
   150f4:	str	r1, [sp, #12]
   150f8:	str	r0, [sp, #8]
   150fc:	add	r1, sp, #8
   15100:	mov	r0, r6
   15104:	bl	153b8 <__assert_fail@plt+0x3868>
   15108:	cmp	r0, #0
   1510c:	beq	15118 <__assert_fail@plt+0x35c8>
   15110:	ldr	r5, [r0, #8]
   15114:	b	15194 <__assert_fail@plt+0x3644>
   15118:	mov	r8, #1
   1511c:	b	15124 <__assert_fail@plt+0x35d4>
   15120:	mov	r6, #0
   15124:	cmp	r9, #0
   15128:	bmi	15194 <__assert_fail@plt+0x3644>
   1512c:	add	r1, sp, #8
   15130:	mov	r0, r9
   15134:	bl	11730 <fstatfs64@plt>
   15138:	cmp	r0, #0
   1513c:	bne	15194 <__assert_fail@plt+0x3644>
   15140:	cmp	r8, #0
   15144:	beq	15190 <__assert_fail@plt+0x3640>
   15148:	mov	r0, #16
   1514c:	bl	190e0 <lchmod@@Base+0x2e14>
   15150:	cmp	r0, #0
   15154:	beq	15190 <__assert_fail@plt+0x3640>
   15158:	mov	r5, r0
   1515c:	ldrd	r0, [r4, #64]	; 0x40
   15160:	ldr	r2, [sp, #8]
   15164:	stm	r5, {r0, r1, r2}
   15168:	mov	r0, r6
   1516c:	mov	r1, r5
   15170:	bl	15fe8 <__assert_fail@plt+0x4498>
   15174:	cmp	r0, #0
   15178:	beq	15188 <__assert_fail@plt+0x3638>
   1517c:	cmp	r0, r5
   15180:	beq	15190 <__assert_fail@plt+0x3640>
   15184:	bl	11af0 <abort@plt>
   15188:	mov	r0, r5
   1518c:	bl	13178 <__assert_fail@plt+0x1628>
   15190:	ldr	r5, [sp, #8]
   15194:	mov	r0, r5
   15198:	sub	sp, fp, #24
   1519c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   151a0:	push	{fp, lr}
   151a4:	mov	fp, sp
   151a8:	mov	r2, r1
   151ac:	ldrd	r0, [r0]
   151b0:	mov	r3, #0
   151b4:	bl	1991c <lchmod@@Base+0x3650>
   151b8:	mov	r0, r2
   151bc:	pop	{fp, pc}
   151c0:	ldrd	r2, [r1]
   151c4:	ldrd	r0, [r0]
   151c8:	eor	r1, r1, r3
   151cc:	eor	r0, r0, r2
   151d0:	orr	r0, r0, r1
   151d4:	clz	r0, r0
   151d8:	lsr	r0, r0, #5
   151dc:	bx	lr
   151e0:	ldr	r0, [r0, #8]
   151e4:	bx	lr
   151e8:	ldr	r0, [r0, #12]
   151ec:	bx	lr
   151f0:	ldr	r0, [r0, #16]
   151f4:	bx	lr
   151f8:	ldm	r0, {r2, ip}
   151fc:	mov	r0, #0
   15200:	cmp	r2, ip
   15204:	bxcs	lr
   15208:	mov	r0, #0
   1520c:	ldr	r1, [r2]
   15210:	cmp	r1, #0
   15214:	beq	15238 <__assert_fail@plt+0x36e8>
   15218:	mov	r3, #0
   1521c:	mov	r1, r2
   15220:	ldr	r1, [r1, #4]
   15224:	add	r3, r3, #1
   15228:	cmp	r1, #0
   1522c:	bne	15220 <__assert_fail@plt+0x36d0>
   15230:	cmp	r3, r0
   15234:	movhi	r0, r3
   15238:	add	r2, r2, #8
   1523c:	cmp	r2, ip
   15240:	bcc	1520c <__assert_fail@plt+0x36bc>
   15244:	bx	lr
   15248:	push	{fp, lr}
   1524c:	mov	fp, sp
   15250:	ldm	r0, {r3, ip}
   15254:	mov	lr, #0
   15258:	mov	r1, #0
   1525c:	cmp	r3, ip
   15260:	bcs	1529c <__assert_fail@plt+0x374c>
   15264:	mov	r1, #0
   15268:	mov	lr, #0
   1526c:	ldr	r2, [r3]
   15270:	cmp	r2, #0
   15274:	beq	15290 <__assert_fail@plt+0x3740>
   15278:	mov	r2, r3
   1527c:	ldr	r2, [r2, #4]
   15280:	add	r1, r1, #1
   15284:	cmp	r2, #0
   15288:	bne	1527c <__assert_fail@plt+0x372c>
   1528c:	add	lr, lr, #1
   15290:	add	r3, r3, #8
   15294:	cmp	r3, ip
   15298:	bcc	1526c <__assert_fail@plt+0x371c>
   1529c:	ldr	r2, [r0, #12]
   152a0:	cmp	lr, r2
   152a4:	bne	152bc <__assert_fail@plt+0x376c>
   152a8:	ldr	r2, [r0, #16]
   152ac:	mov	r0, #1
   152b0:	cmp	r1, r2
   152b4:	movne	r0, #0
   152b8:	pop	{fp, pc}
   152bc:	mov	r0, #0
   152c0:	pop	{fp, pc}
   152c4:	nop	{0}
   152c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   152cc:	add	fp, sp, #24
   152d0:	sub	sp, sp, #8
   152d4:	ldr	r6, [r0]
   152d8:	ldmib	r0, {r2, r7, r8}
   152dc:	ldr	r3, [r0, #16]
   152e0:	mov	r4, r1
   152e4:	mov	r5, #0
   152e8:	cmp	r6, r2
   152ec:	bcs	1532c <__assert_fail@plt+0x37dc>
   152f0:	mov	r5, #0
   152f4:	ldr	r0, [r6]
   152f8:	cmp	r0, #0
   152fc:	beq	15320 <__assert_fail@plt+0x37d0>
   15300:	mov	r0, #0
   15304:	mov	r1, r6
   15308:	ldr	r1, [r1, #4]
   1530c:	add	r0, r0, #1
   15310:	cmp	r1, #0
   15314:	bne	15308 <__assert_fail@plt+0x37b8>
   15318:	cmp	r0, r5
   1531c:	movhi	r5, r0
   15320:	add	r6, r6, #8
   15324:	cmp	r6, r2
   15328:	bcc	152f4 <__assert_fail@plt+0x37a4>
   1532c:	movw	r2, #41264	; 0xa130
   15330:	mov	r0, r4
   15334:	mov	r1, #1
   15338:	movt	r2, #1
   1533c:	bl	119dc <__fprintf_chk@plt>
   15340:	movw	r2, #41288	; 0xa148
   15344:	mov	r0, r4
   15348:	mov	r1, #1
   1534c:	mov	r3, r7
   15350:	movt	r2, #1
   15354:	bl	119dc <__fprintf_chk@plt>
   15358:	vmov	s0, r8
   1535c:	vldr	d16, [pc, #76]	; 153b0 <__assert_fail@plt+0x3860>
   15360:	movw	r2, #41312	; 0xa160
   15364:	mov	r0, r4
   15368:	mov	r1, #1
   1536c:	mov	r3, r8
   15370:	movt	r2, #1
   15374:	vcvt.f64.u32	d17, s0
   15378:	vmov	s0, r7
   1537c:	vcvt.f64.u32	d18, s0
   15380:	vmul.f64	d16, d17, d16
   15384:	vdiv.f64	d16, d16, d18
   15388:	vstr	d16, [sp]
   1538c:	bl	119dc <__fprintf_chk@plt>
   15390:	movw	r2, #41345	; 0xa181
   15394:	mov	r0, r4
   15398:	mov	r1, #1
   1539c:	mov	r3, r5
   153a0:	movt	r2, #1
   153a4:	sub	sp, fp, #24
   153a8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   153ac:	b	119dc <__fprintf_chk@plt>
   153b0:	andeq	r0, r0, r0
   153b4:	subsmi	r0, r9, r0
   153b8:	push	{r4, r5, r6, r7, fp, lr}
   153bc:	add	fp, sp, #16
   153c0:	mov	r4, r1
   153c4:	ldr	r1, [r0, #8]
   153c8:	ldr	r2, [r0, #24]
   153cc:	mov	r5, r0
   153d0:	mov	r0, r4
   153d4:	blx	r2
   153d8:	ldr	r1, [r5, #8]
   153dc:	cmp	r0, r1
   153e0:	bcs	15440 <__assert_fail@plt+0x38f0>
   153e4:	ldr	r7, [r5]
   153e8:	mov	r6, #0
   153ec:	ldr	r1, [r7, r0, lsl #3]!
   153f0:	cmp	r1, #0
   153f4:	cmpne	r7, #0
   153f8:	bne	15428 <__assert_fail@plt+0x38d8>
   153fc:	mov	r0, r6
   15400:	pop	{r4, r5, r6, r7, fp, pc}
   15404:	ldr	r2, [r5, #28]
   15408:	mov	r0, r4
   1540c:	blx	r2
   15410:	cmp	r0, #0
   15414:	bne	15438 <__assert_fail@plt+0x38e8>
   15418:	ldr	r7, [r7, #4]
   1541c:	cmp	r7, #0
   15420:	beq	153fc <__assert_fail@plt+0x38ac>
   15424:	ldr	r1, [r7]
   15428:	cmp	r1, r4
   1542c:	bne	15404 <__assert_fail@plt+0x38b4>
   15430:	mov	r6, r4
   15434:	b	153fc <__assert_fail@plt+0x38ac>
   15438:	ldr	r6, [r7]
   1543c:	b	153fc <__assert_fail@plt+0x38ac>
   15440:	bl	11af0 <abort@plt>
   15444:	push	{fp, lr}
   15448:	mov	fp, sp
   1544c:	ldr	r1, [r0, #16]
   15450:	cmp	r1, #0
   15454:	beq	15474 <__assert_fail@plt+0x3924>
   15458:	ldm	r0, {r1, r2}
   1545c:	cmp	r1, r2
   15460:	bcs	1547c <__assert_fail@plt+0x392c>
   15464:	ldr	r0, [r1], #8
   15468:	cmp	r0, #0
   1546c:	beq	1545c <__assert_fail@plt+0x390c>
   15470:	pop	{fp, pc}
   15474:	mov	r0, #0
   15478:	pop	{fp, pc}
   1547c:	bl	11af0 <abort@plt>
   15480:	push	{r4, r5, fp, lr}
   15484:	add	fp, sp, #8
   15488:	mov	r5, r1
   1548c:	ldr	r1, [r0, #8]
   15490:	ldr	r2, [r0, #24]
   15494:	mov	r4, r0
   15498:	mov	r0, r5
   1549c:	blx	r2
   154a0:	ldr	r1, [r4, #8]
   154a4:	cmp	r0, r1
   154a8:	bcs	1550c <__assert_fail@plt+0x39bc>
   154ac:	ldr	r1, [r4]
   154b0:	add	r2, r1, r0, lsl #3
   154b4:	ldr	r3, [r2]
   154b8:	ldr	r2, [r2, #4]
   154bc:	cmp	r3, r5
   154c0:	beq	154d0 <__assert_fail@plt+0x3980>
   154c4:	cmp	r2, #0
   154c8:	bne	154b4 <__assert_fail@plt+0x3964>
   154cc:	b	154e0 <__assert_fail@plt+0x3990>
   154d0:	cmp	r2, #0
   154d4:	beq	154e0 <__assert_fail@plt+0x3990>
   154d8:	ldr	r0, [r2]
   154dc:	pop	{r4, r5, fp, pc}
   154e0:	ldr	r2, [r4, #4]
   154e4:	add	r0, r1, r0, lsl #3
   154e8:	add	r1, r0, #8
   154ec:	cmp	r1, r2
   154f0:	bcs	15504 <__assert_fail@plt+0x39b4>
   154f4:	ldr	r0, [r1], #8
   154f8:	cmp	r0, #0
   154fc:	beq	154ec <__assert_fail@plt+0x399c>
   15500:	pop	{r4, r5, fp, pc}
   15504:	mov	r0, #0
   15508:	pop	{r4, r5, fp, pc}
   1550c:	bl	11af0 <abort@plt>
   15510:	push	{r4, r5, fp, lr}
   15514:	add	fp, sp, #8
   15518:	ldm	r0, {r5, lr}
   1551c:	mov	ip, r0
   15520:	mov	r0, #0
   15524:	cmp	r5, lr
   15528:	popcs	{r4, r5, fp, pc}
   1552c:	mov	r0, #0
   15530:	ldr	r3, [r5]
   15534:	cmp	r3, #0
   15538:	cmpne	r5, #0
   1553c:	bne	15550 <__assert_fail@plt+0x3a00>
   15540:	add	r5, r5, #8
   15544:	cmp	r5, lr
   15548:	bcc	15530 <__assert_fail@plt+0x39e0>
   1554c:	b	1557c <__assert_fail@plt+0x3a2c>
   15550:	mov	r3, r5
   15554:	cmp	r0, r2
   15558:	bcs	1557c <__assert_fail@plt+0x3a2c>
   1555c:	ldr	r4, [r3]
   15560:	str	r4, [r1, r0, lsl #2]
   15564:	add	r0, r0, #1
   15568:	ldr	r3, [r3, #4]
   1556c:	cmp	r3, #0
   15570:	bne	15554 <__assert_fail@plt+0x3a04>
   15574:	ldr	lr, [ip, #4]
   15578:	b	15540 <__assert_fail@plt+0x39f0>
   1557c:	pop	{r4, r5, fp, pc}
   15580:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15584:	add	fp, sp, #24
   15588:	mov	r5, r1
   1558c:	ldr	r4, [r0]
   15590:	ldr	r1, [r0, #4]
   15594:	mov	r6, #0
   15598:	cmp	r4, r1
   1559c:	bcs	15610 <__assert_fail@plt+0x3ac0>
   155a0:	mov	r9, r2
   155a4:	mov	r8, r0
   155a8:	mov	r6, #0
   155ac:	ldr	r0, [r4]
   155b0:	cmp	r0, #0
   155b4:	cmpne	r4, #0
   155b8:	bne	155cc <__assert_fail@plt+0x3a7c>
   155bc:	add	r4, r4, #8
   155c0:	cmp	r4, r1
   155c4:	bcc	155ac <__assert_fail@plt+0x3a5c>
   155c8:	b	15610 <__assert_fail@plt+0x3ac0>
   155cc:	mov	r1, r9
   155d0:	blx	r5
   155d4:	cmp	r0, #0
   155d8:	beq	15610 <__assert_fail@plt+0x3ac0>
   155dc:	mov	r7, r4
   155e0:	ldr	r7, [r7, #4]
   155e4:	add	r6, r6, #1
   155e8:	cmp	r7, #0
   155ec:	beq	15608 <__assert_fail@plt+0x3ab8>
   155f0:	ldr	r0, [r7]
   155f4:	mov	r1, r9
   155f8:	blx	r5
   155fc:	cmp	r0, #0
   15600:	bne	155e0 <__assert_fail@plt+0x3a90>
   15604:	b	15610 <__assert_fail@plt+0x3ac0>
   15608:	ldr	r1, [r8, #4]
   1560c:	b	155bc <__assert_fail@plt+0x3a6c>
   15610:	mov	r0, r6
   15614:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15618:	ldrb	r2, [r0]
   1561c:	cmp	r2, #0
   15620:	moveq	r0, #0
   15624:	bxeq	lr
   15628:	add	r3, r0, #1
   1562c:	mov	r0, #0
   15630:	rsb	r0, r0, r0, lsl #5
   15634:	uxtab	r0, r0, r2
   15638:	udiv	r2, r0, r1
   1563c:	mls	r0, r2, r1, r0
   15640:	ldrb	r2, [r3], #1
   15644:	cmp	r2, #0
   15648:	bne	15630 <__assert_fail@plt+0x3ae0>
   1564c:	bx	lr
   15650:	movw	r1, #41376	; 0xa1a0
   15654:	movt	r1, #1
   15658:	vld1.32	{d16-d17}, [r1]!
   1565c:	ldr	r1, [r1]
   15660:	vst1.32	{d16-d17}, [r0]!
   15664:	str	r1, [r0]
   15668:	bx	lr
   1566c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15670:	add	fp, sp, #28
   15674:	sub	sp, sp, #4
   15678:	movw	sl, #22368	; 0x5760
   1567c:	cmp	r3, #0
   15680:	movw	r5, #22348	; 0x574c
   15684:	mov	r8, r0
   15688:	mov	r0, #40	; 0x28
   1568c:	mov	r7, r1
   15690:	movt	sl, #1
   15694:	movne	sl, r3
   15698:	cmp	r2, #0
   1569c:	movt	r5, #1
   156a0:	movne	r5, r2
   156a4:	bl	190e0 <lchmod@@Base+0x2e14>
   156a8:	mov	r9, #0
   156ac:	cmp	r0, #0
   156b0:	beq	15740 <__assert_fail@plt+0x3bf0>
   156b4:	movw	r6, #41376	; 0xa1a0
   156b8:	cmp	r7, #0
   156bc:	mov	r4, r0
   156c0:	movt	r6, #1
   156c4:	movne	r6, r7
   156c8:	str	r6, [r0, #20]
   156cc:	bl	15770 <__assert_fail@plt+0x3c20>
   156d0:	cmp	r0, #0
   156d4:	beq	15738 <__assert_fail@plt+0x3be8>
   156d8:	mov	r0, r8
   156dc:	mov	r1, r6
   156e0:	bl	1581c <__assert_fail@plt+0x3ccc>
   156e4:	cmp	r0, #0
   156e8:	str	r0, [r4, #8]
   156ec:	beq	15738 <__assert_fail@plt+0x3be8>
   156f0:	mov	r1, #8
   156f4:	bl	1908c <lchmod@@Base+0x2dc0>
   156f8:	cmp	r0, #0
   156fc:	str	r0, [r4]
   15700:	beq	15738 <__assert_fail@plt+0x3be8>
   15704:	ldr	r1, [fp, #8]
   15708:	mov	r2, #0
   1570c:	str	r5, [r4, #24]
   15710:	str	sl, [r4, #28]
   15714:	mov	r9, r4
   15718:	str	r1, [r4, #32]
   1571c:	str	r2, [r4, #36]	; 0x24
   15720:	str	r2, [r4, #12]
   15724:	str	r2, [r4, #16]
   15728:	ldr	r1, [r4, #8]
   1572c:	add	r0, r0, r1, lsl #3
   15730:	str	r0, [r4, #4]
   15734:	b	15740 <__assert_fail@plt+0x3bf0>
   15738:	mov	r0, r4
   1573c:	bl	13178 <__assert_fail@plt+0x1628>
   15740:	mov	r0, r9
   15744:	sub	sp, fp, #28
   15748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1574c:	ror	r2, r0, #3
   15750:	udiv	r2, r2, r1
   15754:	mul	r1, r2, r1
   15758:	rsb	r0, r1, r0, ror #3
   1575c:	bx	lr
   15760:	sub	r0, r0, r1
   15764:	clz	r0, r0
   15768:	lsr	r0, r0, #5
   1576c:	bx	lr
   15770:	ldr	r3, [r0, #20]
   15774:	movw	r2, #41376	; 0xa1a0
   15778:	mov	r1, r0
   1577c:	mov	r0, #1
   15780:	movt	r2, #1
   15784:	cmp	r3, r2
   15788:	beq	1580c <__assert_fail@plt+0x3cbc>
   1578c:	vldr	s2, [pc, #124]	; 15810 <__assert_fail@plt+0x3cc0>
   15790:	vldr	s0, [r3, #8]
   15794:	vcmpe.f32	s0, s2
   15798:	vmrs	APSR_nzcv, fpscr
   1579c:	ble	15804 <__assert_fail@plt+0x3cb4>
   157a0:	vldr	s4, [pc, #108]	; 15814 <__assert_fail@plt+0x3cc4>
   157a4:	vcmpe.f32	s0, s4
   157a8:	vmrs	APSR_nzcv, fpscr
   157ac:	bpl	15804 <__assert_fail@plt+0x3cb4>
   157b0:	vldr	s4, [pc, #96]	; 15818 <__assert_fail@plt+0x3cc8>
   157b4:	vldr	s6, [r3, #12]
   157b8:	vcmpe.f32	s6, s4
   157bc:	vmrs	APSR_nzcv, fpscr
   157c0:	ble	15804 <__assert_fail@plt+0x3cb4>
   157c4:	vldr	s4, [r3]
   157c8:	vcmpe.f32	s4, #0.0
   157cc:	vmrs	APSR_nzcv, fpscr
   157d0:	blt	15804 <__assert_fail@plt+0x3cb4>
   157d4:	vadd.f32	s2, s4, s2
   157d8:	vcmpe.f32	s2, s0
   157dc:	vmrs	APSR_nzcv, fpscr
   157e0:	bpl	15804 <__assert_fail@plt+0x3cb4>
   157e4:	vldr	s0, [r3, #4]
   157e8:	vmov.f32	s4, #112	; 0x3f800000  1.0
   157ec:	vcmpe.f32	s0, s4
   157f0:	vmrs	APSR_nzcv, fpscr
   157f4:	bhi	15804 <__assert_fail@plt+0x3cb4>
   157f8:	vcmpe.f32	s2, s0
   157fc:	vmrs	APSR_nzcv, fpscr
   15800:	bxmi	lr
   15804:	mov	r0, #0
   15808:	str	r2, [r1, #20]
   1580c:	bx	lr
   15810:	stclcc	12, cr12, [ip, #820]	; 0x334
   15814:	svccc	0x00666666
   15818:	svccc	0x008ccccd
   1581c:	ldrb	r2, [r1, #16]
   15820:	cmp	r2, #0
   15824:	bne	15854 <__assert_fail@plt+0x3d04>
   15828:	vmov	s2, r0
   1582c:	vldr	s0, [r1, #8]
   15830:	vldr	s4, [pc, #156]	; 158d4 <__assert_fail@plt+0x3d84>
   15834:	mov	r0, #0
   15838:	vcvt.f32.u32	s2, s2
   1583c:	vdiv.f32	s2, s2, s0
   15840:	vcmpe.f32	s2, s4
   15844:	vcvt.u32.f32	s0, s2
   15848:	vmrs	APSR_nzcv, fpscr
   1584c:	bxge	lr
   15850:	vmov	r0, s0
   15854:	cmp	r0, #10
   15858:	movls	r0, #10
   1585c:	orr	r0, r0, #1
   15860:	cmn	r0, #1
   15864:	beq	158c0 <__assert_fail@plt+0x3d70>
   15868:	mov	r1, #3
   1586c:	cmp	r0, #10
   15870:	bcc	158a8 <__assert_fail@plt+0x3d58>
   15874:	mov	r1, #3
   15878:	mov	ip, #9
   1587c:	mov	r2, #12
   15880:	udiv	r3, r0, r1
   15884:	mls	r3, r3, r1, r0
   15888:	cmp	r3, #0
   1588c:	beq	158a8 <__assert_fail@plt+0x3d58>
   15890:	add	r3, ip, r2
   15894:	add	r2, r2, #8
   15898:	add	r1, r1, #2
   1589c:	add	ip, r3, #4
   158a0:	cmp	ip, r0
   158a4:	bcc	15880 <__assert_fail@plt+0x3d30>
   158a8:	udiv	r2, r0, r1
   158ac:	mls	r1, r2, r1, r0
   158b0:	cmp	r1, #0
   158b4:	bne	158c8 <__assert_fail@plt+0x3d78>
   158b8:	add	r0, r0, #2
   158bc:	b	15860 <__assert_fail@plt+0x3d10>
   158c0:	mov	r0, #0
   158c4:	bx	lr
   158c8:	cmp	r0, #536870912	; 0x20000000
   158cc:	movcs	r0, #0
   158d0:	bx	lr
   158d4:	svcmi	0x00800000
   158d8:	push	{r4, r5, r6, r7, fp, lr}
   158dc:	add	fp, sp, #16
   158e0:	mov	r4, r0
   158e4:	ldr	r5, [r0]
   158e8:	ldr	r0, [r0, #4]
   158ec:	cmp	r5, r0
   158f0:	bcs	15988 <__assert_fail@plt+0x3e38>
   158f4:	mov	r6, #0
   158f8:	ldr	r1, [r5]
   158fc:	cmp	r1, #0
   15900:	beq	1597c <__assert_fail@plt+0x3e2c>
   15904:	ldr	r1, [r4, #32]
   15908:	ldr	r7, [r5, #4]
   1590c:	cmp	r1, #0
   15910:	mov	r0, r1
   15914:	movwne	r0, #1
   15918:	cmp	r7, #0
   1591c:	beq	15960 <__assert_fail@plt+0x3e10>
   15920:	tst	r0, #1
   15924:	beq	15934 <__assert_fail@plt+0x3de4>
   15928:	ldr	r0, [r7]
   1592c:	blx	r1
   15930:	ldr	r1, [r4, #32]
   15934:	str	r6, [r7]
   15938:	cmp	r1, #0
   1593c:	ldr	r2, [r7, #4]
   15940:	ldr	r0, [r4, #36]	; 0x24
   15944:	str	r0, [r7, #4]
   15948:	mov	r0, r1
   1594c:	str	r7, [r4, #36]	; 0x24
   15950:	movwne	r0, #1
   15954:	cmp	r2, #0
   15958:	mov	r7, r2
   1595c:	bne	15920 <__assert_fail@plt+0x3dd0>
   15960:	cmp	r0, #0
   15964:	beq	15970 <__assert_fail@plt+0x3e20>
   15968:	ldr	r0, [r5]
   1596c:	blx	r1
   15970:	str	r6, [r5]
   15974:	str	r6, [r5, #4]
   15978:	ldr	r0, [r4, #4]
   1597c:	add	r5, r5, #8
   15980:	cmp	r5, r0
   15984:	bcc	158f8 <__assert_fail@plt+0x3da8>
   15988:	mov	r0, #0
   1598c:	str	r0, [r4, #12]
   15990:	str	r0, [r4, #16]
   15994:	pop	{r4, r5, r6, r7, fp, pc}
   15998:	push	{r4, r5, r6, sl, fp, lr}
   1599c:	add	fp, sp, #16
   159a0:	mov	r4, r0
   159a4:	ldr	r0, [r0, #32]
   159a8:	cmp	r0, #0
   159ac:	beq	15a10 <__assert_fail@plt+0x3ec0>
   159b0:	ldr	r0, [r4, #16]
   159b4:	cmp	r0, #0
   159b8:	beq	15a10 <__assert_fail@plt+0x3ec0>
   159bc:	ldr	r5, [r4]
   159c0:	ldr	r1, [r4, #4]
   159c4:	cmp	r5, r1
   159c8:	bcs	15a10 <__assert_fail@plt+0x3ec0>
   159cc:	ldr	r0, [r5]
   159d0:	cmp	r0, #0
   159d4:	cmpne	r5, #0
   159d8:	beq	15a08 <__assert_fail@plt+0x3eb8>
   159dc:	ldr	r1, [r4, #32]
   159e0:	blx	r1
   159e4:	ldr	r6, [r5, #4]
   159e8:	cmp	r6, #0
   159ec:	beq	15a04 <__assert_fail@plt+0x3eb4>
   159f0:	ldr	r1, [r4, #32]
   159f4:	ldr	r0, [r6]
   159f8:	blx	r1
   159fc:	ldr	r6, [r6, #4]
   15a00:	b	159e8 <__assert_fail@plt+0x3e98>
   15a04:	ldr	r1, [r4, #4]
   15a08:	add	r5, r5, #8
   15a0c:	b	159c4 <__assert_fail@plt+0x3e74>
   15a10:	ldr	r5, [r4]
   15a14:	ldr	r1, [r4, #4]
   15a18:	cmp	r5, r1
   15a1c:	bcs	15a4c <__assert_fail@plt+0x3efc>
   15a20:	ldr	r0, [r5, #4]
   15a24:	cmp	r0, #0
   15a28:	beq	15a44 <__assert_fail@plt+0x3ef4>
   15a2c:	ldr	r6, [r0, #4]
   15a30:	bl	13178 <__assert_fail@plt+0x1628>
   15a34:	cmp	r6, #0
   15a38:	mov	r0, r6
   15a3c:	bne	15a2c <__assert_fail@plt+0x3edc>
   15a40:	ldr	r1, [r4, #4]
   15a44:	add	r5, r5, #8
   15a48:	b	15a18 <__assert_fail@plt+0x3ec8>
   15a4c:	ldr	r0, [r4, #36]	; 0x24
   15a50:	cmp	r0, #0
   15a54:	beq	15a6c <__assert_fail@plt+0x3f1c>
   15a58:	ldr	r5, [r0, #4]
   15a5c:	bl	13178 <__assert_fail@plt+0x1628>
   15a60:	cmp	r5, #0
   15a64:	mov	r0, r5
   15a68:	bne	15a58 <__assert_fail@plt+0x3f08>
   15a6c:	ldr	r0, [r4]
   15a70:	bl	13178 <__assert_fail@plt+0x1628>
   15a74:	mov	r0, r4
   15a78:	pop	{r4, r5, r6, sl, fp, lr}
   15a7c:	b	13178 <__assert_fail@plt+0x1628>
   15a80:	push	{r4, r5, r6, r7, fp, lr}
   15a84:	add	fp, sp, #16
   15a88:	sub	sp, sp, #40	; 0x28
   15a8c:	mov	r7, r0
   15a90:	mov	r2, r1
   15a94:	mov	r4, r0
   15a98:	ldr	r1, [r7, #20]!
   15a9c:	mov	r0, r2
   15aa0:	bl	1581c <__assert_fail@plt+0x3ccc>
   15aa4:	mov	r5, #0
   15aa8:	cmp	r0, #0
   15aac:	beq	15b40 <__assert_fail@plt+0x3ff0>
   15ab0:	mov	r6, r0
   15ab4:	ldr	r0, [r4, #8]
   15ab8:	cmp	r6, r0
   15abc:	beq	15b3c <__assert_fail@plt+0x3fec>
   15ac0:	mov	r0, r6
   15ac4:	mov	r1, #8
   15ac8:	bl	1908c <lchmod@@Base+0x2dc0>
   15acc:	cmp	r0, #0
   15ad0:	str	r0, [sp]
   15ad4:	beq	15b40 <__assert_fail@plt+0x3ff0>
   15ad8:	add	r0, r0, r6, lsl #3
   15adc:	mov	r1, #0
   15ae0:	mov	r5, sp
   15ae4:	mov	r2, #0
   15ae8:	str	r1, [sp, #16]
   15aec:	str	r1, [sp, #12]
   15af0:	str	r6, [sp, #8]
   15af4:	mov	r1, r4
   15af8:	str	r0, [sp, #4]
   15afc:	add	r0, r5, #20
   15b00:	vld1.32	{d16-d17}, [r7]
   15b04:	vst1.32	{d16-d17}, [r0]
   15b08:	ldr	r0, [r4, #36]	; 0x24
   15b0c:	str	r0, [sp, #36]	; 0x24
   15b10:	mov	r0, r5
   15b14:	bl	15b98 <__assert_fail@plt+0x4048>
   15b18:	cmp	r0, #0
   15b1c:	beq	15b4c <__assert_fail@plt+0x3ffc>
   15b20:	ldr	r0, [r4]
   15b24:	bl	13178 <__assert_fail@plt+0x1628>
   15b28:	mov	r0, #36	; 0x24
   15b2c:	vld1.32	{d16-d17}, [r5], r0
   15b30:	vst1.32	{d16-d17}, [r4], r0
   15b34:	ldr	r0, [r5]
   15b38:	str	r0, [r4]
   15b3c:	mov	r5, #1
   15b40:	mov	r0, r5
   15b44:	sub	sp, fp, #16
   15b48:	pop	{r4, r5, r6, r7, fp, pc}
   15b4c:	ldr	r0, [sp, #36]	; 0x24
   15b50:	mov	r1, sp
   15b54:	mov	r2, #1
   15b58:	str	r0, [r4, #36]	; 0x24
   15b5c:	mov	r0, r4
   15b60:	bl	15b98 <__assert_fail@plt+0x4048>
   15b64:	cmp	r0, #0
   15b68:	beq	15b94 <__assert_fail@plt+0x4044>
   15b6c:	mov	r1, sp
   15b70:	mov	r0, r4
   15b74:	mov	r2, #0
   15b78:	mov	r5, #0
   15b7c:	bl	15b98 <__assert_fail@plt+0x4048>
   15b80:	cmp	r0, #0
   15b84:	beq	15b94 <__assert_fail@plt+0x4044>
   15b88:	ldr	r0, [sp]
   15b8c:	bl	13178 <__assert_fail@plt+0x1628>
   15b90:	b	15b40 <__assert_fail@plt+0x3ff0>
   15b94:	bl	11af0 <abort@plt>
   15b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b9c:	add	fp, sp, #28
   15ba0:	sub	sp, sp, #12
   15ba4:	ldr	sl, [r1]
   15ba8:	str	r1, [sp, #8]
   15bac:	ldr	r1, [r1, #4]
   15bb0:	mov	r7, r0
   15bb4:	mov	r0, #1
   15bb8:	str	r2, [sp, #4]
   15bbc:	cmp	sl, r1
   15bc0:	bcs	15d14 <__assert_fail@plt+0x41c4>
   15bc4:	add	r8, r7, #36	; 0x24
   15bc8:	mov	r9, #0
   15bcc:	ldr	r4, [sl]
   15bd0:	cmp	r4, #0
   15bd4:	beq	15cfc <__assert_fail@plt+0x41ac>
   15bd8:	ldr	r5, [sl, #4]
   15bdc:	cmp	r5, #0
   15be0:	beq	15c58 <__assert_fail@plt+0x4108>
   15be4:	ldr	r1, [r7, #8]
   15be8:	ldr	r4, [r5]
   15bec:	ldr	r2, [r7, #24]
   15bf0:	mov	r0, r4
   15bf4:	blx	r2
   15bf8:	ldr	r1, [r7, #8]
   15bfc:	cmp	r0, r1
   15c00:	bcs	15d24 <__assert_fail@plt+0x41d4>
   15c04:	ldr	r3, [r7]
   15c08:	ldr	r2, [r5, #4]
   15c0c:	ldr	r6, [r3, r0, lsl #3]
   15c10:	cmp	r6, #0
   15c14:	beq	15c24 <__assert_fail@plt+0x40d4>
   15c18:	add	r0, r3, r0, lsl #3
   15c1c:	add	r0, r0, #4
   15c20:	b	15c3c <__assert_fail@plt+0x40ec>
   15c24:	str	r4, [r3, r0, lsl #3]
   15c28:	ldr	r0, [r7, #12]
   15c2c:	add	r0, r0, #1
   15c30:	str	r0, [r7, #12]
   15c34:	mov	r0, r8
   15c38:	str	r9, [r5]
   15c3c:	ldr	r3, [r0]
   15c40:	cmp	r2, #0
   15c44:	str	r3, [r5, #4]
   15c48:	str	r5, [r0]
   15c4c:	mov	r5, r2
   15c50:	bne	15be8 <__assert_fail@plt+0x4098>
   15c54:	ldr	r4, [sl]
   15c58:	ldr	r0, [sp, #4]
   15c5c:	str	r9, [sl, #4]
   15c60:	cmp	r0, #0
   15c64:	bne	15cfc <__assert_fail@plt+0x41ac>
   15c68:	ldr	r1, [r7, #8]
   15c6c:	ldr	r2, [r7, #24]
   15c70:	mov	r0, r4
   15c74:	blx	r2
   15c78:	mov	r5, r0
   15c7c:	ldr	r0, [r7, #8]
   15c80:	cmp	r5, r0
   15c84:	bcs	15d24 <__assert_fail@plt+0x41d4>
   15c88:	ldr	r6, [r7]
   15c8c:	ldr	r0, [r6, r5, lsl #3]
   15c90:	cmp	r0, #0
   15c94:	beq	15cb0 <__assert_fail@plt+0x4160>
   15c98:	ldr	r0, [r8]
   15c9c:	cmp	r0, #0
   15ca0:	beq	15cc4 <__assert_fail@plt+0x4174>
   15ca4:	ldr	r1, [r0, #4]
   15ca8:	str	r1, [r8]
   15cac:	b	15cd4 <__assert_fail@plt+0x4184>
   15cb0:	str	r4, [r6, r5, lsl #3]
   15cb4:	ldr	r0, [r7, #12]
   15cb8:	add	r0, r0, #1
   15cbc:	str	r0, [r7, #12]
   15cc0:	b	15ce8 <__assert_fail@plt+0x4198>
   15cc4:	mov	r0, #8
   15cc8:	bl	190e0 <lchmod@@Base+0x2e14>
   15ccc:	cmp	r0, #0
   15cd0:	beq	15d1c <__assert_fail@plt+0x41cc>
   15cd4:	add	r1, r6, r5, lsl #3
   15cd8:	str	r4, [r0]
   15cdc:	ldr	r2, [r1, #4]
   15ce0:	str	r2, [r0, #4]
   15ce4:	str	r0, [r1, #4]
   15ce8:	ldr	r1, [sp, #8]
   15cec:	str	r9, [sl]
   15cf0:	ldr	r0, [r1, #12]
   15cf4:	sub	r0, r0, #1
   15cf8:	str	r0, [r1, #12]
   15cfc:	ldr	r0, [sp, #8]
   15d00:	add	sl, sl, #8
   15d04:	ldr	r0, [r0, #4]
   15d08:	cmp	sl, r0
   15d0c:	bcc	15bcc <__assert_fail@plt+0x407c>
   15d10:	mov	r0, #1
   15d14:	sub	sp, fp, #28
   15d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d1c:	mov	r0, #0
   15d20:	b	15d14 <__assert_fail@plt+0x41c4>
   15d24:	bl	11af0 <abort@plt>
   15d28:	push	{r4, r5, r6, r7, fp, lr}
   15d2c:	add	fp, sp, #16
   15d30:	sub	sp, sp, #8
   15d34:	cmp	r1, #0
   15d38:	beq	15eb0 <__assert_fail@plt+0x4360>
   15d3c:	mov	r7, r2
   15d40:	add	r2, sp, #4
   15d44:	mov	r3, #0
   15d48:	mov	r5, r1
   15d4c:	mov	r4, r0
   15d50:	mov	r6, #0
   15d54:	bl	15eb8 <__assert_fail@plt+0x4368>
   15d58:	cmp	r0, #0
   15d5c:	beq	15d6c <__assert_fail@plt+0x421c>
   15d60:	cmp	r7, #0
   15d64:	strne	r0, [r7]
   15d68:	b	15e9c <__assert_fail@plt+0x434c>
   15d6c:	vldr	s0, [r4, #8]
   15d70:	ldr	r0, [r4, #20]
   15d74:	vldr	s2, [r4, #12]
   15d78:	vldr	s4, [r0, #8]
   15d7c:	vcvt.f32.u32	s0, s0
   15d80:	vcvt.f32.u32	s2, s2
   15d84:	vmul.f32	s0, s4, s0
   15d88:	vcmpe.f32	s0, s2
   15d8c:	vmrs	APSR_nzcv, fpscr
   15d90:	bpl	15e24 <__assert_fail@plt+0x42d4>
   15d94:	mov	r0, r4
   15d98:	bl	15770 <__assert_fail@plt+0x3c20>
   15d9c:	vldr	s0, [r4, #8]
   15da0:	ldr	r0, [r4, #20]
   15da4:	vldr	s4, [r4, #12]
   15da8:	vcvt.f32.u32	s2, s0
   15dac:	vldr	s0, [r0, #8]
   15db0:	vcvt.f32.u32	s4, s4
   15db4:	vmul.f32	s6, s0, s2
   15db8:	vcmpe.f32	s6, s4
   15dbc:	vmrs	APSR_nzcv, fpscr
   15dc0:	bpl	15e24 <__assert_fail@plt+0x42d4>
   15dc4:	vldr	s4, [r0, #12]
   15dc8:	ldrb	r0, [r0, #16]
   15dcc:	mvn	r6, #0
   15dd0:	cmp	r0, #0
   15dd4:	vmul.f32	s2, s4, s2
   15dd8:	vldr	s4, [pc, #212]	; 15eb4 <__assert_fail@plt+0x4364>
   15ddc:	vmul.f32	s0, s0, s2
   15de0:	vseleq.f32	s0, s0, s2
   15de4:	vcmpe.f32	s0, s4
   15de8:	vmrs	APSR_nzcv, fpscr
   15dec:	bge	15e9c <__assert_fail@plt+0x434c>
   15df0:	vcvt.u32.f32	s0, s0
   15df4:	mov	r0, r4
   15df8:	vmov	r1, s0
   15dfc:	bl	15a80 <__assert_fail@plt+0x3f30>
   15e00:	cmp	r0, #0
   15e04:	beq	15e9c <__assert_fail@plt+0x434c>
   15e08:	add	r2, sp, #4
   15e0c:	mov	r0, r4
   15e10:	mov	r1, r5
   15e14:	mov	r3, #0
   15e18:	bl	15eb8 <__assert_fail@plt+0x4368>
   15e1c:	cmp	r0, #0
   15e20:	bne	15eb0 <__assert_fail@plt+0x4360>
   15e24:	ldr	r6, [sp, #4]
   15e28:	ldr	r0, [r6]
   15e2c:	cmp	r0, #0
   15e30:	beq	15e4c <__assert_fail@plt+0x42fc>
   15e34:	ldr	r0, [r4, #36]	; 0x24
   15e38:	cmp	r0, #0
   15e3c:	beq	15e6c <__assert_fail@plt+0x431c>
   15e40:	ldr	r1, [r0, #4]
   15e44:	str	r1, [r4, #36]	; 0x24
   15e48:	b	15e7c <__assert_fail@plt+0x432c>
   15e4c:	str	r5, [r6]
   15e50:	ldr	r0, [r4, #12]
   15e54:	ldr	r1, [r4, #16]
   15e58:	add	r0, r0, #1
   15e5c:	add	r1, r1, #1
   15e60:	str	r0, [r4, #12]
   15e64:	str	r1, [r4, #16]
   15e68:	b	15e98 <__assert_fail@plt+0x4348>
   15e6c:	mov	r0, #8
   15e70:	bl	190e0 <lchmod@@Base+0x2e14>
   15e74:	cmp	r0, #0
   15e78:	beq	15ea8 <__assert_fail@plt+0x4358>
   15e7c:	str	r5, [r0]
   15e80:	ldr	r1, [r6, #4]
   15e84:	str	r1, [r0, #4]
   15e88:	str	r0, [r6, #4]
   15e8c:	ldr	r0, [r4, #16]
   15e90:	add	r0, r0, #1
   15e94:	str	r0, [r4, #16]
   15e98:	mov	r6, #1
   15e9c:	mov	r0, r6
   15ea0:	sub	sp, fp, #16
   15ea4:	pop	{r4, r5, r6, r7, fp, pc}
   15ea8:	mvn	r6, #0
   15eac:	b	15e9c <__assert_fail@plt+0x434c>
   15eb0:	bl	11af0 <abort@plt>
   15eb4:	svcmi	0x00800000
   15eb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ebc:	add	fp, sp, #24
   15ec0:	mov	r7, r2
   15ec4:	mov	r4, r1
   15ec8:	ldr	r1, [r0, #8]
   15ecc:	ldr	r2, [r0, #24]
   15ed0:	mov	r5, r0
   15ed4:	mov	r8, r3
   15ed8:	mov	r0, r4
   15edc:	blx	r2
   15ee0:	ldr	r1, [r5, #8]
   15ee4:	cmp	r0, r1
   15ee8:	bcs	15fe4 <__assert_fail@plt+0x4494>
   15eec:	ldr	r1, [r5]
   15ef0:	add	r6, r1, r0, lsl #3
   15ef4:	str	r6, [r7]
   15ef8:	ldr	r1, [r1, r0, lsl #3]
   15efc:	cmp	r1, #0
   15f00:	beq	15f98 <__assert_fail@plt+0x4448>
   15f04:	cmp	r1, r4
   15f08:	beq	15f24 <__assert_fail@plt+0x43d4>
   15f0c:	ldr	r2, [r5, #28]
   15f10:	mov	r0, r4
   15f14:	blx	r2
   15f18:	cmp	r0, #0
   15f1c:	beq	15f58 <__assert_fail@plt+0x4408>
   15f20:	ldr	r4, [r6]
   15f24:	cmp	r8, #0
   15f28:	beq	15f9c <__assert_fail@plt+0x444c>
   15f2c:	ldr	r0, [r6, #4]
   15f30:	cmp	r0, #0
   15f34:	beq	15fa4 <__assert_fail@plt+0x4454>
   15f38:	ldm	r0, {r1, r2}
   15f3c:	stm	r6, {r1, r2}
   15f40:	mov	r1, #0
   15f44:	str	r1, [r0]
   15f48:	ldr	r1, [r5, #36]	; 0x24
   15f4c:	str	r1, [r0, #4]
   15f50:	str	r0, [r5, #36]	; 0x24
   15f54:	b	15f9c <__assert_fail@plt+0x444c>
   15f58:	ldr	r0, [r6, #4]!
   15f5c:	cmp	r0, #0
   15f60:	beq	15f98 <__assert_fail@plt+0x4448>
   15f64:	ldr	r1, [r0]
   15f68:	cmp	r1, r4
   15f6c:	beq	15fb0 <__assert_fail@plt+0x4460>
   15f70:	ldr	r2, [r5, #28]
   15f74:	mov	r0, r4
   15f78:	blx	r2
   15f7c:	ldr	r1, [r6]
   15f80:	cmp	r0, #0
   15f84:	bne	15fb8 <__assert_fail@plt+0x4468>
   15f88:	ldr	r0, [r1, #4]!
   15f8c:	mov	r6, r1
   15f90:	cmp	r0, #0
   15f94:	bne	15f64 <__assert_fail@plt+0x4414>
   15f98:	mov	r4, #0
   15f9c:	mov	r0, r4
   15fa0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15fa4:	mov	r0, #0
   15fa8:	str	r0, [r6]
   15fac:	b	15f9c <__assert_fail@plt+0x444c>
   15fb0:	mov	r1, r0
   15fb4:	b	15fbc <__assert_fail@plt+0x446c>
   15fb8:	ldr	r4, [r1]
   15fbc:	cmp	r8, #0
   15fc0:	beq	15f9c <__assert_fail@plt+0x444c>
   15fc4:	ldr	r0, [r1, #4]
   15fc8:	str	r0, [r6]
   15fcc:	mov	r0, #0
   15fd0:	str	r0, [r1]
   15fd4:	ldr	r0, [r5, #36]	; 0x24
   15fd8:	str	r0, [r1, #4]
   15fdc:	str	r1, [r5, #36]	; 0x24
   15fe0:	b	15f9c <__assert_fail@plt+0x444c>
   15fe4:	bl	11af0 <abort@plt>
   15fe8:	push	{r4, sl, fp, lr}
   15fec:	add	fp, sp, #8
   15ff0:	sub	sp, sp, #8
   15ff4:	add	r2, sp, #4
   15ff8:	mov	r4, r1
   15ffc:	bl	15d28 <__assert_fail@plt+0x41d8>
   16000:	cmn	r0, #1
   16004:	beq	16018 <__assert_fail@plt+0x44c8>
   16008:	ldr	r1, [sp, #4]
   1600c:	cmp	r0, #0
   16010:	moveq	r4, r1
   16014:	b	1601c <__assert_fail@plt+0x44cc>
   16018:	mov	r4, #0
   1601c:	mov	r0, r4
   16020:	sub	sp, fp, #8
   16024:	pop	{r4, sl, fp, pc}
   16028:	push	{r4, r5, r6, sl, fp, lr}
   1602c:	add	fp, sp, #16
   16030:	sub	sp, sp, #8
   16034:	add	r2, sp, #4
   16038:	mov	r3, #1
   1603c:	mov	r4, r0
   16040:	bl	15eb8 <__assert_fail@plt+0x4368>
   16044:	mov	r5, r0
   16048:	cmp	r0, #0
   1604c:	beq	1612c <__assert_fail@plt+0x45dc>
   16050:	ldr	r0, [r4, #16]
   16054:	sub	r0, r0, #1
   16058:	str	r0, [r4, #16]
   1605c:	ldr	r0, [sp, #4]
   16060:	ldr	r0, [r0]
   16064:	cmp	r0, #0
   16068:	bne	1612c <__assert_fail@plt+0x45dc>
   1606c:	ldr	r0, [r4, #12]
   16070:	vldr	s0, [r4, #8]
   16074:	sub	r0, r0, #1
   16078:	str	r0, [r4, #12]
   1607c:	vmov	s4, r0
   16080:	ldr	r1, [r4, #20]
   16084:	vldr	s2, [r1]
   16088:	vcvt.f32.u32	s0, s0
   1608c:	vcvt.f32.u32	s4, s4
   16090:	vmul.f32	s0, s2, s0
   16094:	vcmpe.f32	s0, s4
   16098:	vmrs	APSR_nzcv, fpscr
   1609c:	ble	1612c <__assert_fail@plt+0x45dc>
   160a0:	mov	r0, r4
   160a4:	bl	15770 <__assert_fail@plt+0x3c20>
   160a8:	vldr	s0, [r4, #8]
   160ac:	ldr	r0, [r4, #20]
   160b0:	vldr	s2, [r4, #12]
   160b4:	vcvt.f32.u32	s0, s0
   160b8:	vldr	s4, [r0]
   160bc:	vcvt.f32.u32	s2, s2
   160c0:	vmul.f32	s4, s4, s0
   160c4:	vcmpe.f32	s4, s2
   160c8:	vmrs	APSR_nzcv, fpscr
   160cc:	ble	1612c <__assert_fail@plt+0x45dc>
   160d0:	vldr	s2, [r0, #4]
   160d4:	ldrb	r1, [r0, #16]
   160d8:	cmp	r1, #0
   160dc:	vmul.f32	s0, s2, s0
   160e0:	bne	160ec <__assert_fail@plt+0x459c>
   160e4:	vldr	s2, [r0, #8]
   160e8:	vmul.f32	s0, s0, s2
   160ec:	vcvt.u32.f32	s0, s0
   160f0:	mov	r0, r4
   160f4:	vmov	r1, s0
   160f8:	bl	15a80 <__assert_fail@plt+0x3f30>
   160fc:	cmp	r0, #0
   16100:	bne	1612c <__assert_fail@plt+0x45dc>
   16104:	ldr	r0, [r4, #36]	; 0x24
   16108:	cmp	r0, #0
   1610c:	beq	16124 <__assert_fail@plt+0x45d4>
   16110:	ldr	r6, [r0, #4]
   16114:	bl	13178 <__assert_fail@plt+0x1628>
   16118:	cmp	r6, #0
   1611c:	mov	r0, r6
   16120:	bne	16110 <__assert_fail@plt+0x45c0>
   16124:	mov	r0, #0
   16128:	str	r0, [r4, #36]	; 0x24
   1612c:	mov	r0, r5
   16130:	sub	sp, fp, #16
   16134:	pop	{r4, r5, r6, sl, fp, pc}
   16138:	b	16028 <__assert_fail@plt+0x44d8>
   1613c:	push	{r4, r5, fp, lr}
   16140:	add	fp, sp, #8
   16144:	mov	r5, r0
   16148:	ldr	r0, [r0]
   1614c:	mov	r4, r1
   16150:	bl	196fc <lchmod@@Base+0x3430>
   16154:	ldrd	r2, [r5, #8]
   16158:	eor	r0, r2, r0
   1615c:	mov	r1, r3
   16160:	mov	r2, r4
   16164:	mov	r3, #0
   16168:	bl	1991c <lchmod@@Base+0x3650>
   1616c:	mov	r0, r2
   16170:	pop	{r4, r5, fp, pc}
   16174:	push	{r4, r5, fp, lr}
   16178:	add	fp, sp, #8
   1617c:	mov	lr, r1
   16180:	mov	r2, r0
   16184:	ldr	r3, [r2, #8]!
   16188:	ldr	ip, [lr, #8]!
   1618c:	ldr	r4, [r2, #4]
   16190:	eor	ip, r3, ip
   16194:	ldr	r3, [lr, #4]
   16198:	eor	r3, r4, r3
   1619c:	orrs	r3, ip, r3
   161a0:	mov	ip, #0
   161a4:	bne	161d4 <__assert_fail@plt+0x4684>
   161a8:	ldrd	r4, [lr, #8]
   161ac:	ldrd	r2, [r2, #8]
   161b0:	eor	r3, r3, r5
   161b4:	eor	r2, r2, r4
   161b8:	orrs	r2, r2, r3
   161bc:	bne	161d4 <__assert_fail@plt+0x4684>
   161c0:	ldr	r1, [r1]
   161c4:	ldr	r0, [r0]
   161c8:	bl	11778 <strcmp@plt>
   161cc:	clz	r0, r0
   161d0:	lsr	ip, r0, #5
   161d4:	mov	r0, ip
   161d8:	pop	{r4, r5, fp, pc}
   161dc:	push	{r4, sl, fp, lr}
   161e0:	add	fp, sp, #8
   161e4:	mov	r4, r0
   161e8:	ldr	r0, [r0]
   161ec:	bl	13178 <__assert_fail@plt+0x1628>
   161f0:	mov	r0, r4
   161f4:	pop	{r4, sl, fp, lr}
   161f8:	b	13178 <__assert_fail@plt+0x1628>
   161fc:	vdup.32	q8, r1
   16200:	mov	r2, #0
   16204:	str	r2, [r0, #20]
   16208:	str	r2, [r0, #24]
   1620c:	mov	r2, #1
   16210:	strb	r2, [r0, #28]
   16214:	vst1.32	{d16-d17}, [r0]!
   16218:	str	r1, [r0]
   1621c:	bx	lr
   16220:	ldrb	r0, [r0, #28]
   16224:	bx	lr
   16228:	push	{fp, lr}
   1622c:	mov	fp, sp
   16230:	ldrb	r3, [r0, #28]
   16234:	ldr	r2, [r0, #20]
   16238:	eor	lr, r3, #1
   1623c:	add	r2, r2, lr
   16240:	and	r3, r2, #3
   16244:	ldr	ip, [r0, r3, lsl #2]
   16248:	str	r1, [r0, r3, lsl #2]
   1624c:	str	r3, [r0, #20]
   16250:	ldr	r1, [r0, #24]
   16254:	cmp	r3, r1
   16258:	addeq	r1, r2, lr
   1625c:	andeq	r1, r1, #3
   16260:	streq	r1, [r0, #24]
   16264:	mov	r1, #0
   16268:	strb	r1, [r0, #28]
   1626c:	mov	r0, ip
   16270:	pop	{fp, pc}
   16274:	push	{fp, lr}
   16278:	mov	fp, sp
   1627c:	ldrb	r1, [r0, #28]
   16280:	cmp	r1, #0
   16284:	bne	162c8 <__assert_fail@plt+0x4778>
   16288:	ldr	r3, [r0, #20]
   1628c:	ldr	r2, [r0, #16]
   16290:	ldr	r1, [r0, r3, lsl #2]
   16294:	str	r2, [r0, r3, lsl #2]
   16298:	ldr	r2, [r0, #20]
   1629c:	ldr	r3, [r0, #24]
   162a0:	cmp	r2, r3
   162a4:	bne	162b4 <__assert_fail@plt+0x4764>
   162a8:	mov	r2, #1
   162ac:	strb	r2, [r0, #28]
   162b0:	b	162c0 <__assert_fail@plt+0x4770>
   162b4:	sub	r2, r2, #1
   162b8:	and	r2, r2, #3
   162bc:	str	r2, [r0, #20]
   162c0:	mov	r0, r1
   162c4:	pop	{fp, pc}
   162c8:	bl	11af0 <abort@plt>

000162cc <lchmod@@Base>:
   162cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   162d0:	add	fp, sp, #24
   162d4:	sub	sp, sp, #136	; 0x88
   162d8:	mov	r4, r1
   162dc:	mov	r1, #2654208	; 0x288000
   162e0:	mov	r5, r0
   162e4:	bl	118c8 <open64@plt>
   162e8:	mov	r6, r0
   162ec:	cmp	r0, #0
   162f0:	bmi	16334 <lchmod@@Base+0x68>
   162f4:	movw	r1, #41020	; 0xa03c
   162f8:	add	r2, sp, #32
   162fc:	mov	r0, r6
   16300:	mov	r3, #4096	; 0x1000
   16304:	movt	r1, #1
   16308:	bl	19b3c <lchmod@@Base+0x3870>
   1630c:	cmp	r0, #0
   16310:	beq	1633c <lchmod@@Base+0x70>
   16314:	bl	11994 <__errno_location@plt>
   16318:	ldr	r5, [r0]
   1631c:	mov	r4, r0
   16320:	mov	r0, r6
   16324:	bl	11afc <close@plt>
   16328:	str	r5, [r4]
   1632c:	mvn	r7, #0
   16330:	b	163dc <lchmod@@Base+0x110>
   16334:	mov	r7, r6
   16338:	b	163dc <lchmod@@Base+0x110>
   1633c:	ldr	r0, [sp, #48]	; 0x30
   16340:	and	r0, r0, #61440	; 0xf000
   16344:	cmp	r0, #40960	; 0xa000
   16348:	bne	16368 <lchmod@@Base+0x9c>
   1634c:	mov	r0, r6
   16350:	bl	11afc <close@plt>
   16354:	bl	11994 <__errno_location@plt>
   16358:	mov	r1, #95	; 0x5f
   1635c:	mvn	r7, #0
   16360:	str	r1, [r0]
   16364:	b	163dc <lchmod@@Base+0x110>
   16368:	movw	r3, #41396	; 0xa1b4
   1636c:	add	r7, sp, #6
   16370:	mov	r1, #1
   16374:	mov	r2, #26
   16378:	str	r6, [sp]
   1637c:	movt	r3, #1
   16380:	mov	r0, r7
   16384:	bl	119a0 <__sprintf_chk@plt>
   16388:	mov	r0, r7
   1638c:	mov	r1, r4
   16390:	bl	11ac0 <chmod@plt>
   16394:	mov	r7, r0
   16398:	bl	11994 <__errno_location@plt>
   1639c:	ldr	r9, [r0]
   163a0:	mov	r8, r0
   163a4:	mov	r0, r6
   163a8:	bl	11afc <close@plt>
   163ac:	cmp	r7, #0
   163b0:	beq	163d0 <lchmod@@Base+0x104>
   163b4:	cmp	r9, #2
   163b8:	bne	163d8 <lchmod@@Base+0x10c>
   163bc:	mov	r0, r5
   163c0:	mov	r1, r4
   163c4:	bl	11ac0 <chmod@plt>
   163c8:	mov	r7, r0
   163cc:	b	163dc <lchmod@@Base+0x110>
   163d0:	mov	r7, #0
   163d4:	b	163dc <lchmod@@Base+0x110>
   163d8:	str	r9, [r8]
   163dc:	mov	r0, r7
   163e0:	sub	sp, fp, #24
   163e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   163e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163ec:	add	fp, sp, #28
   163f0:	sub	sp, sp, #4
   163f4:	ldrb	r1, [r0]
   163f8:	mov	r4, r0
   163fc:	and	r0, r1, #248	; 0xf8
   16400:	cmp	r0, #48	; 0x30
   16404:	bne	16488 <lchmod@@Base+0x1bc>
   16408:	mov	r0, #0
   1640c:	mov	r5, #0
   16410:	mov	r2, r4
   16414:	lsl	r3, r5, #3
   16418:	uxtab	r1, r3, r1
   1641c:	sub	r5, r1, #48	; 0x30
   16420:	cmp	r0, r5, lsr #12
   16424:	bne	1671c <lchmod@@Base+0x450>
   16428:	ldrb	r1, [r2, #1]
   1642c:	add	r6, r2, #1
   16430:	and	r2, r1, #248	; 0xf8
   16434:	cmp	r2, #48	; 0x30
   16438:	mov	r2, r6
   1643c:	beq	16414 <lchmod@@Base+0x148>
   16440:	cmp	r1, #0
   16444:	bne	1671c <lchmod@@Base+0x450>
   16448:	mov	r0, #32
   1644c:	bl	18ba0 <lchmod@@Base+0x28d4>
   16450:	mov	r1, #0
   16454:	movw	r2, #317	; 0x13d
   16458:	and	r3, r5, #3072	; 0xc00
   1645c:	movw	r7, #1023	; 0x3ff
   16460:	strb	r1, [r0, #17]
   16464:	strh	r2, [r0]
   16468:	sub	r2, r6, r4
   1646c:	movw	r1, #4095	; 0xfff
   16470:	cmp	r2, #5
   16474:	str	r1, [r0, #4]
   16478:	str	r5, [r0, #8]
   1647c:	orrlt	r1, r3, r7
   16480:	str	r1, [r0, #12]
   16484:	b	1671c <lchmod@@Base+0x450>
   16488:	movw	r5, #5
   1648c:	mov	r2, #1
   16490:	mvn	r3, #42	; 0x2a
   16494:	mov	r7, #1
   16498:	mov	r0, #1
   1649c:	movt	r5, #4
   164a0:	uxtab	r6, r3, r1
   164a4:	uxtb	r1, r1
   164a8:	cmp	r6, #18
   164ac:	bhi	164bc <lchmod@@Base+0x1f0>
   164b0:	tst	r5, r2, lsl r6
   164b4:	mov	r6, #1
   164b8:	bne	164c8 <lchmod@@Base+0x1fc>
   164bc:	cmp	r1, #0
   164c0:	beq	164d8 <lchmod@@Base+0x20c>
   164c4:	mov	r6, #0
   164c8:	ldrb	r1, [r4, r7]
   164cc:	add	r0, r6, r0
   164d0:	add	r7, r7, #1
   164d4:	b	164a0 <lchmod@@Base+0x1d4>
   164d8:	mov	r1, #16
   164dc:	bl	18c70 <lchmod@@Base+0x29a4>
   164e0:	mov	sl, #0
   164e4:	mov	ip, #1
   164e8:	mvn	lr, #113	; 0x71
   164ec:	mov	r9, #0
   164f0:	mov	r2, #0
   164f4:	ldrb	r6, [r4]
   164f8:	cmp	r6, #110	; 0x6e
   164fc:	bgt	16518 <lchmod@@Base+0x24c>
   16500:	cmp	r6, #97	; 0x61
   16504:	beq	16530 <lchmod@@Base+0x264>
   16508:	cmp	r6, #103	; 0x67
   1650c:	bne	16548 <lchmod@@Base+0x27c>
   16510:	movw	r3, #1080	; 0x438
   16514:	b	1653c <lchmod@@Base+0x270>
   16518:	cmp	r6, #111	; 0x6f
   1651c:	beq	16538 <lchmod@@Base+0x26c>
   16520:	mov	r3, #2496	; 0x9c0
   16524:	cmp	r6, #117	; 0x75
   16528:	beq	1653c <lchmod@@Base+0x270>
   1652c:	b	16714 <lchmod@@Base+0x448>
   16530:	movw	r3, #4095	; 0xfff
   16534:	b	1653c <lchmod@@Base+0x270>
   16538:	movw	r3, #519	; 0x207
   1653c:	orr	r2, r2, r3
   16540:	add	r4, r4, #1
   16544:	b	164f4 <lchmod@@Base+0x228>
   16548:	sub	r1, r6, #43	; 0x2b
   1654c:	cmp	r1, #18
   16550:	bhi	16714 <lchmod@@Base+0x448>
   16554:	tst	r5, ip, lsl r1
   16558:	beq	16714 <lchmod@@Base+0x448>
   1655c:	ldrb	r3, [r4, #1]
   16560:	add	r4, r4, #2
   16564:	sub	r1, r3, #48	; 0x30
   16568:	cmp	r1, #8
   1656c:	bcs	165c4 <lchmod@@Base+0x2f8>
   16570:	mov	r7, #0
   16574:	lsl	r1, r7, #3
   16578:	uxtab	r1, r1, r3
   1657c:	sub	r7, r1, #48	; 0x30
   16580:	cmp	sl, r7, lsr #12
   16584:	bne	16714 <lchmod@@Base+0x448>
   16588:	ldrb	r3, [r4], #1
   1658c:	and	r1, r3, #248	; 0xf8
   16590:	cmp	r1, #48	; 0x30
   16594:	beq	16574 <lchmod@@Base+0x2a8>
   16598:	cmp	r2, #0
   1659c:	bne	16714 <lchmod@@Base+0x448>
   165a0:	sub	r4, r4, #1
   165a4:	mov	r8, #1
   165a8:	movw	r2, #4095	; 0xfff
   165ac:	cmp	r3, #0
   165b0:	beq	165ec <lchmod@@Base+0x320>
   165b4:	cmp	r3, #44	; 0x2c
   165b8:	movw	r3, #4095	; 0xfff
   165bc:	beq	16694 <lchmod@@Base+0x3c8>
   165c0:	b	16714 <lchmod@@Base+0x448>
   165c4:	cmp	r3, #103	; 0x67
   165c8:	beq	165f4 <lchmod@@Base+0x328>
   165cc:	cmp	r3, #111	; 0x6f
   165d0:	beq	16604 <lchmod@@Base+0x338>
   165d4:	cmp	r3, #117	; 0x75
   165d8:	bne	16614 <lchmod@@Base+0x348>
   165dc:	mov	r8, #3
   165e0:	mov	r3, #0
   165e4:	mov	r7, #448	; 0x1c0
   165e8:	b	16694 <lchmod@@Base+0x3c8>
   165ec:	movw	r3, #4095	; 0xfff
   165f0:	b	16694 <lchmod@@Base+0x3c8>
   165f4:	mov	r8, #3
   165f8:	mov	r3, #0
   165fc:	mov	r7, #56	; 0x38
   16600:	b	16694 <lchmod@@Base+0x3c8>
   16604:	mov	r8, #3
   16608:	mov	r3, #0
   1660c:	mov	r7, #7
   16610:	b	16694 <lchmod@@Base+0x3c8>
   16614:	mov	r8, #1
   16618:	mov	r7, #0
   1661c:	uxtab	r1, lr, r3
   16620:	cmp	r1, #6
   16624:	bhi	16654 <lchmod@@Base+0x388>
   16628:	add	r3, pc, #0
   1662c:	ldr	pc, [r3, r1, lsl #2]
   16630:	andeq	r6, r1, ip, asr #12
   16634:	andeq	r6, r1, r8, ror #12
   16638:	andeq	r6, r1, r0, ror r6
   1663c:	andeq	r6, r1, ip, lsl #13
   16640:	andeq	r6, r1, ip, lsl #13
   16644:	andeq	r6, r1, r8, ror r6
   16648:	andeq	r6, r1, r0, lsl #13
   1664c:	orr	r7, r7, #292	; 0x124
   16650:	b	16684 <lchmod@@Base+0x3b8>
   16654:	uxtb	r1, r3
   16658:	cmp	r1, #88	; 0x58
   1665c:	bne	1668c <lchmod@@Base+0x3c0>
   16660:	mov	r8, #2
   16664:	b	16684 <lchmod@@Base+0x3b8>
   16668:	orr	r7, r7, #3072	; 0xc00
   1666c:	b	16684 <lchmod@@Base+0x3b8>
   16670:	orr	r7, r7, #512	; 0x200
   16674:	b	16684 <lchmod@@Base+0x3b8>
   16678:	orr	r7, r7, #146	; 0x92
   1667c:	b	16684 <lchmod@@Base+0x3b8>
   16680:	orr	r7, r7, #73	; 0x49
   16684:	ldrb	r3, [r4], #1
   16688:	b	1661c <lchmod@@Base+0x350>
   1668c:	sub	r4, r4, #1
   16690:	mov	r3, #0
   16694:	mov	r1, r0
   16698:	cmp	r3, #0
   1669c:	strb	r6, [r1, r9, lsl #4]!
   166a0:	stmib	r1, {r2, r7}
   166a4:	strb	r8, [r1, #1]
   166a8:	bne	166b8 <lchmod@@Base+0x3ec>
   166ac:	cmp	r2, #0
   166b0:	andne	r7, r7, r2
   166b4:	mov	r3, r7
   166b8:	add	r1, r0, r9, lsl #4
   166bc:	add	r7, r9, #1
   166c0:	str	r3, [r1, #12]
   166c4:	ldrb	r6, [r4]
   166c8:	cmp	r6, #44	; 0x2c
   166cc:	ble	166ec <lchmod@@Base+0x420>
   166d0:	cmp	r6, #45	; 0x2d
   166d4:	mov	r9, r7
   166d8:	beq	1655c <lchmod@@Base+0x290>
   166dc:	cmp	r6, #61	; 0x3d
   166e0:	mov	r9, r7
   166e4:	beq	1655c <lchmod@@Base+0x290>
   166e8:	b	16714 <lchmod@@Base+0x448>
   166ec:	cmp	r6, #43	; 0x2b
   166f0:	mov	r9, r7
   166f4:	beq	1655c <lchmod@@Base+0x290>
   166f8:	cmp	r6, #0
   166fc:	beq	16724 <lchmod@@Base+0x458>
   16700:	cmp	r6, #44	; 0x2c
   16704:	bne	16714 <lchmod@@Base+0x448>
   16708:	add	r4, r4, #1
   1670c:	mov	r9, r7
   16710:	b	164f0 <lchmod@@Base+0x224>
   16714:	bl	13178 <__assert_fail@plt+0x1628>
   16718:	mov	r0, #0
   1671c:	sub	sp, fp, #28
   16720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16724:	add	r1, r0, r7, lsl #4
   16728:	mov	r2, #0
   1672c:	strb	r2, [r1, #1]
   16730:	b	1671c <lchmod@@Base+0x450>
   16734:	push	{r4, sl, fp, lr}
   16738:	add	fp, sp, #8
   1673c:	sub	sp, sp, #104	; 0x68
   16740:	mov	r1, sp
   16744:	bl	19b0c <lchmod@@Base+0x3840>
   16748:	mov	r1, r0
   1674c:	mov	r0, #0
   16750:	cmp	r1, #0
   16754:	bne	16780 <lchmod@@Base+0x4b4>
   16758:	ldr	r4, [sp, #16]
   1675c:	mov	r0, #32
   16760:	bl	18ba0 <lchmod@@Base+0x28d4>
   16764:	mov	r1, #0
   16768:	strb	r1, [r0, #17]
   1676c:	movw	r1, #4095	; 0xfff
   16770:	stmib	r0, {r1, r4}
   16774:	str	r1, [r0, #12]
   16778:	movw	r1, #317	; 0x13d
   1677c:	strh	r1, [r0]
   16780:	sub	sp, fp, #8
   16784:	pop	{r4, sl, fp, pc}
   16788:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1678c:	add	fp, sp, #24
   16790:	ldrb	r4, [r3, #1]
   16794:	ldr	ip, [fp, #8]
   16798:	bfc	r0, #12, #20
   1679c:	cmp	r4, #0
   167a0:	beq	16880 <lchmod@@Base+0x5b4>
   167a4:	cmp	r1, #0
   167a8:	mov	lr, r1
   167ac:	add	r3, r3, #8
   167b0:	mov	r9, #0
   167b4:	movw	r8, #4095	; 0xfff
   167b8:	movwne	lr, #3072	; 0xc00
   167bc:	mov	r5, r3
   167c0:	ldr	r7, [r3, #-4]
   167c4:	ldr	r3, [r3]
   167c8:	uxtb	r4, r4
   167cc:	ldr	r6, [r5, #4]
   167d0:	cmp	r4, #2
   167d4:	bic	r6, lr, r6
   167d8:	beq	16804 <lchmod@@Base+0x538>
   167dc:	cmp	r4, #3
   167e0:	bne	16810 <lchmod@@Base+0x544>
   167e4:	and	r4, r3, r0
   167e8:	tst	r4, #146	; 0x92
   167ec:	mov	r3, r4
   167f0:	orrne	r3, r3, #146	; 0x92
   167f4:	tst	r4, #292	; 0x124
   167f8:	orrne	r3, r3, #292	; 0x124
   167fc:	tst	r4, #73	; 0x49
   16800:	b	1680c <lchmod@@Base+0x540>
   16804:	and	r4, r0, #73	; 0x49
   16808:	orrs	r4, r4, r1
   1680c:	orrne	r3, r3, #73	; 0x49
   16810:	cmp	r7, #0
   16814:	mov	r4, r7
   16818:	mvneq	r4, r2
   1681c:	bic	r4, r4, r6
   16820:	and	r3, r4, r3
   16824:	ldrb	r4, [r5, #-8]
   16828:	cmp	r4, #43	; 0x2b
   1682c:	beq	1685c <lchmod@@Base+0x590>
   16830:	cmp	r4, #45	; 0x2d
   16834:	beq	16864 <lchmod@@Base+0x598>
   16838:	cmp	r4, #61	; 0x3d
   1683c:	bne	1686c <lchmod@@Base+0x5a0>
   16840:	mvn	r4, r7
   16844:	cmp	r7, #0
   16848:	orrne	r6, r6, r4
   1684c:	and	r0, r6, r0
   16850:	orr	r0, r3, r0
   16854:	bic	r3, r8, r6
   16858:	b	16868 <lchmod@@Base+0x59c>
   1685c:	orr	r0, r3, r0
   16860:	b	16868 <lchmod@@Base+0x59c>
   16864:	bic	r0, r0, r3
   16868:	orr	r9, r3, r9
   1686c:	ldrb	r4, [r5, #9]
   16870:	add	r3, r5, #16
   16874:	cmp	r4, #0
   16878:	bne	167bc <lchmod@@Base+0x4f0>
   1687c:	b	16884 <lchmod@@Base+0x5b8>
   16880:	mov	r9, #0
   16884:	cmp	ip, #0
   16888:	strne	r9, [ip]
   1688c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16890:	sub	sp, sp, #4
   16894:	push	{fp, lr}
   16898:	mov	fp, sp
   1689c:	sub	sp, sp, #4
   168a0:	str	r3, [fp, #8]
   168a4:	tst	r2, #64	; 0x40
   168a8:	mov	r3, #0
   168ac:	ldrne	r3, [fp, #8]
   168b0:	bl	1197c <openat64@plt>
   168b4:	bl	18698 <lchmod@@Base+0x23cc>
   168b8:	mov	sp, fp
   168bc:	pop	{fp, lr}
   168c0:	add	sp, sp, #4
   168c4:	bx	lr
   168c8:	push	{r4, r5, r6, sl, fp, lr}
   168cc:	add	fp, sp, #16
   168d0:	orr	r2, r2, #18688	; 0x4900
   168d4:	mov	r4, r3
   168d8:	orr	r2, r2, #524288	; 0x80000
   168dc:	bl	16890 <lchmod@@Base+0x5c4>
   168e0:	mov	r5, r0
   168e4:	mov	r0, #0
   168e8:	cmp	r5, #0
   168ec:	bmi	16924 <lchmod@@Base+0x658>
   168f0:	mov	r0, r5
   168f4:	bl	11a48 <fdopendir@plt>
   168f8:	cmp	r0, #0
   168fc:	beq	16908 <lchmod@@Base+0x63c>
   16900:	str	r5, [r4]
   16904:	pop	{r4, r5, r6, sl, fp, pc}
   16908:	bl	11994 <__errno_location@plt>
   1690c:	ldr	r6, [r0]
   16910:	mov	r4, r0
   16914:	mov	r0, r5
   16918:	bl	11afc <close@plt>
   1691c:	mov	r0, #0
   16920:	str	r6, [r4]
   16924:	pop	{r4, r5, r6, sl, fp, pc}
   16928:	push	{r4, r5, fp, lr}
   1692c:	add	fp, sp, #8
   16930:	cmp	r0, #0
   16934:	beq	169c8 <lchmod@@Base+0x6fc>
   16938:	mov	r1, #47	; 0x2f
   1693c:	mov	r4, r0
   16940:	bl	11a24 <strrchr@plt>
   16944:	cmp	r0, #0
   16948:	mov	r5, r4
   1694c:	addne	r5, r0, #1
   16950:	sub	r0, r5, r4
   16954:	cmp	r0, #7
   16958:	blt	169ac <lchmod@@Base+0x6e0>
   1695c:	movw	r1, #41469	; 0xa1fd
   16960:	sub	r0, r5, #7
   16964:	mov	r2, #7
   16968:	movt	r1, #1
   1696c:	bl	11ae4 <strncmp@plt>
   16970:	cmp	r0, #0
   16974:	bne	169ac <lchmod@@Base+0x6e0>
   16978:	movw	r1, #41477	; 0xa205
   1697c:	mov	r0, r5
   16980:	mov	r2, #3
   16984:	movt	r1, #1
   16988:	bl	11ae4 <strncmp@plt>
   1698c:	cmp	r0, #0
   16990:	beq	1699c <lchmod@@Base+0x6d0>
   16994:	mov	r4, r5
   16998:	b	169ac <lchmod@@Base+0x6e0>
   1699c:	movw	r0, #45512	; 0xb1c8
   169a0:	add	r4, r5, #3
   169a4:	movt	r0, #2
   169a8:	str	r4, [r0]
   169ac:	movw	r0, #45516	; 0xb1cc
   169b0:	movt	r0, #2
   169b4:	str	r4, [r0]
   169b8:	movw	r0, #45552	; 0xb1f0
   169bc:	movt	r0, #2
   169c0:	str	r4, [r0]
   169c4:	pop	{r4, r5, fp, pc}
   169c8:	movw	r0, #45528	; 0xb1d8
   169cc:	movt	r0, #2
   169d0:	ldr	r1, [r0]
   169d4:	movw	r0, #41413	; 0xa1c5
   169d8:	movt	r0, #1
   169dc:	bl	11ad8 <fputs@plt>
   169e0:	bl	11af0 <abort@plt>
   169e4:	push	{r4, r5, r6, sl, fp, lr}
   169e8:	add	fp, sp, #16
   169ec:	mov	r4, r0
   169f0:	movw	r0, #45560	; 0xb1f8
   169f4:	movt	r0, #2
   169f8:	cmp	r4, #0
   169fc:	moveq	r4, r0
   16a00:	bl	11994 <__errno_location@plt>
   16a04:	ldr	r6, [r0]
   16a08:	mov	r5, r0
   16a0c:	mov	r0, r4
   16a10:	mov	r1, #48	; 0x30
   16a14:	bl	18ef0 <lchmod@@Base+0x2c24>
   16a18:	str	r6, [r5]
   16a1c:	pop	{r4, r5, r6, sl, fp, pc}
   16a20:	movw	r1, #45560	; 0xb1f8
   16a24:	cmp	r0, #0
   16a28:	movt	r1, #2
   16a2c:	movne	r1, r0
   16a30:	ldr	r0, [r1]
   16a34:	bx	lr
   16a38:	movw	r2, #45560	; 0xb1f8
   16a3c:	cmp	r0, #0
   16a40:	movt	r2, #2
   16a44:	movne	r2, r0
   16a48:	str	r1, [r2]
   16a4c:	bx	lr
   16a50:	movw	r3, #45560	; 0xb1f8
   16a54:	cmp	r0, #0
   16a58:	and	r2, r2, #1
   16a5c:	movt	r3, #2
   16a60:	movne	r3, r0
   16a64:	ubfx	r0, r1, #5, #3
   16a68:	and	r1, r1, #31
   16a6c:	add	ip, r3, r0, lsl #2
   16a70:	mov	r0, #1
   16a74:	ldr	r3, [ip, #8]
   16a78:	and	r0, r0, r3, lsr r1
   16a7c:	eor	r2, r0, r2
   16a80:	eor	r1, r3, r2, lsl r1
   16a84:	str	r1, [ip, #8]
   16a88:	bx	lr
   16a8c:	movw	r2, #45560	; 0xb1f8
   16a90:	cmp	r0, #0
   16a94:	movt	r2, #2
   16a98:	movne	r2, r0
   16a9c:	ldr	r0, [r2, #4]
   16aa0:	str	r1, [r2, #4]
   16aa4:	bx	lr
   16aa8:	push	{fp, lr}
   16aac:	mov	fp, sp
   16ab0:	movw	r3, #45560	; 0xb1f8
   16ab4:	cmp	r0, #0
   16ab8:	movt	r3, #2
   16abc:	movne	r3, r0
   16ac0:	cmp	r1, #0
   16ac4:	mov	r0, #10
   16ac8:	cmpne	r2, #0
   16acc:	str	r0, [r3]
   16ad0:	bne	16ad8 <lchmod@@Base+0x80c>
   16ad4:	bl	11af0 <abort@plt>
   16ad8:	str	r1, [r3, #40]	; 0x28
   16adc:	str	r2, [r3, #44]	; 0x2c
   16ae0:	pop	{fp, pc}
   16ae4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ae8:	add	fp, sp, #28
   16aec:	sub	sp, sp, #20
   16af0:	mov	r7, r0
   16af4:	ldr	r0, [fp, #8]
   16af8:	movw	r5, #45560	; 0xb1f8
   16afc:	mov	r8, r3
   16b00:	mov	r9, r2
   16b04:	mov	sl, r1
   16b08:	movt	r5, #2
   16b0c:	cmp	r0, #0
   16b10:	movne	r5, r0
   16b14:	bl	11994 <__errno_location@plt>
   16b18:	ldr	r2, [r5, #40]	; 0x28
   16b1c:	ldr	r3, [r5, #44]	; 0x2c
   16b20:	mov	r4, r0
   16b24:	ldm	r5, {r0, r1}
   16b28:	add	r5, r5, #8
   16b2c:	ldr	r6, [r4]
   16b30:	stm	sp, {r0, r1, r5}
   16b34:	mov	r0, r7
   16b38:	mov	r1, sl
   16b3c:	str	r2, [sp, #12]
   16b40:	str	r3, [sp, #16]
   16b44:	mov	r2, r9
   16b48:	mov	r3, r8
   16b4c:	bl	16b5c <lchmod@@Base+0x890>
   16b50:	str	r6, [r4]
   16b54:	sub	sp, fp, #28
   16b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b60:	add	fp, sp, #28
   16b64:	sub	sp, sp, #156	; 0x9c
   16b68:	mov	r5, r0
   16b6c:	add	r0, r2, #1
   16b70:	mov	r6, r1
   16b74:	mov	sl, r3
   16b78:	str	r2, [fp, #-80]	; 0xffffffb0
   16b7c:	str	r0, [sp, #72]	; 0x48
   16b80:	ldr	r0, [fp, #12]
   16b84:	and	r1, r0, #1
   16b88:	str	r1, [sp, #32]
   16b8c:	and	r1, r0, #4
   16b90:	str	r1, [sp, #28]
   16b94:	ubfx	r9, r0, #1, #1
   16b98:	bl	11880 <__ctype_get_mb_cur_max@plt>
   16b9c:	str	r0, [sp, #40]	; 0x28
   16ba0:	ldr	r0, [fp, #24]
   16ba4:	ldr	r7, [fp, #8]
   16ba8:	mov	r1, #0
   16bac:	mov	lr, #0
   16bb0:	str	r5, [fp, #-84]	; 0xffffffac
   16bb4:	str	r1, [sp, #60]	; 0x3c
   16bb8:	mov	r1, #1
   16bbc:	str	r1, [fp, #-48]	; 0xffffffd0
   16bc0:	str	r0, [sp, #80]	; 0x50
   16bc4:	ldr	r0, [fp, #20]
   16bc8:	str	r0, [sp, #76]	; 0x4c
   16bcc:	mov	r0, #0
   16bd0:	str	r0, [sp, #56]	; 0x38
   16bd4:	mov	r0, #0
   16bd8:	str	r0, [fp, #-88]	; 0xffffffa8
   16bdc:	mov	r0, #0
   16be0:	str	r0, [fp, #-72]	; 0xffffffb8
   16be4:	mov	r0, #0
   16be8:	cmp	r7, #10
   16bec:	bhi	17bc8 <lchmod@@Base+0x18fc>
   16bf0:	add	r1, pc, #24
   16bf4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   16bf8:	mov	ip, r6
   16bfc:	mov	r8, #0
   16c00:	mov	r2, #1
   16c04:	mov	r6, #0
   16c08:	mov	r3, sl
   16c0c:	ldr	pc, [r1, r7, lsl #2]
   16c10:	strdeq	r6, [r1], -ip
   16c14:	andeq	r6, r1, r0, asr sp
   16c18:	andeq	r6, r1, r0, lsl sp
   16c1c:	strdeq	r6, [r1], -r4
   16c20:	andeq	r6, r1, r4, asr #26
   16c24:	andeq	r6, r1, r8, ror sp
   16c28:	andeq	r6, r1, r0, lsr #26
   16c2c:	strdeq	r6, [r1], -ip
   16c30:	andeq	r6, r1, ip, lsr ip
   16c34:	andeq	r6, r1, ip, lsr ip
   16c38:	andeq	r6, r1, ip, ror ip
   16c3c:	movw	r0, #41559	; 0xa257
   16c40:	mov	r1, r7
   16c44:	mov	r6, r5
   16c48:	mov	r4, ip
   16c4c:	mov	r5, lr
   16c50:	movt	r0, #1
   16c54:	bl	1832c <lchmod@@Base+0x2060>
   16c58:	str	r0, [sp, #76]	; 0x4c
   16c5c:	movw	r0, #41561	; 0xa259
   16c60:	mov	r1, r7
   16c64:	movt	r0, #1
   16c68:	bl	1832c <lchmod@@Base+0x2060>
   16c6c:	mov	lr, r5
   16c70:	mov	r5, r6
   16c74:	mov	ip, r4
   16c78:	str	r0, [sp, #80]	; 0x50
   16c7c:	mov	r8, #0
   16c80:	tst	r9, #1
   16c84:	str	lr, [sp, #44]	; 0x2c
   16c88:	bne	16cc0 <lchmod@@Base+0x9f4>
   16c8c:	ldr	r0, [sp, #76]	; 0x4c
   16c90:	ldrb	r0, [r0]
   16c94:	cmp	r0, #0
   16c98:	beq	16cc0 <lchmod@@Base+0x9f4>
   16c9c:	ldr	r1, [sp, #76]	; 0x4c
   16ca0:	mov	r8, #0
   16ca4:	add	r1, r1, #1
   16ca8:	cmp	r8, ip
   16cac:	strbcc	r0, [r5, r8]
   16cb0:	ldrb	r0, [r1, r8]
   16cb4:	add	r8, r8, #1
   16cb8:	cmp	r0, #0
   16cbc:	bne	16ca8 <lchmod@@Base+0x9dc>
   16cc0:	ldr	r6, [sp, #80]	; 0x50
   16cc4:	mov	r4, ip
   16cc8:	mov	r0, r6
   16ccc:	bl	11964 <strlen@plt>
   16cd0:	mov	ip, r4
   16cd4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   16cd8:	ldr	lr, [sp, #44]	; 0x2c
   16cdc:	str	r6, [fp, #-88]	; 0xffffffa8
   16ce0:	str	r0, [fp, #-72]	; 0xffffffb8
   16ce4:	mov	r2, #1
   16ce8:	mov	r6, r9
   16cec:	mov	r3, sl
   16cf0:	b	16dfc <lchmod@@Base+0xb30>
   16cf4:	mov	r0, #1
   16cf8:	b	16d50 <lchmod@@Base+0xa84>
   16cfc:	mov	r7, #0
   16d00:	mov	r8, #0
   16d04:	mov	r2, r0
   16d08:	mov	r6, #0
   16d0c:	b	16dfc <lchmod@@Base+0xb30>
   16d10:	tst	r9, #1
   16d14:	bne	16d50 <lchmod@@Base+0xa84>
   16d18:	mov	r2, r0
   16d1c:	b	16da8 <lchmod@@Base+0xadc>
   16d20:	mov	r0, #1
   16d24:	mov	r8, #0
   16d28:	mov	r7, #5
   16d2c:	mov	r2, #1
   16d30:	str	r0, [fp, #-72]	; 0xffffffb8
   16d34:	movw	r0, #41557	; 0xa255
   16d38:	movt	r0, #1
   16d3c:	str	r0, [fp, #-88]	; 0xffffffa8
   16d40:	b	16d70 <lchmod@@Base+0xaa4>
   16d44:	mov	r2, #1
   16d48:	tst	r9, #1
   16d4c:	beq	16da8 <lchmod@@Base+0xadc>
   16d50:	mov	r1, #1
   16d54:	mov	r8, #0
   16d58:	mov	r7, #2
   16d5c:	mov	r2, r0
   16d60:	str	r1, [fp, #-72]	; 0xffffffb8
   16d64:	movw	r1, #41561	; 0xa259
   16d68:	movt	r1, #1
   16d6c:	str	r1, [fp, #-88]	; 0xffffffa8
   16d70:	mov	r6, #1
   16d74:	b	16dfc <lchmod@@Base+0xb30>
   16d78:	tst	r9, #1
   16d7c:	beq	16dcc <lchmod@@Base+0xb00>
   16d80:	mov	r0, #1
   16d84:	mov	r8, #0
   16d88:	mov	r2, #1
   16d8c:	mov	r6, #1
   16d90:	mov	r7, #5
   16d94:	str	r0, [fp, #-72]	; 0xffffffb8
   16d98:	movw	r0, #41557	; 0xa255
   16d9c:	movt	r0, #1
   16da0:	str	r0, [fp, #-88]	; 0xffffffa8
   16da4:	b	16dfc <lchmod@@Base+0xb30>
   16da8:	cmp	ip, #0
   16dac:	mov	r8, #1
   16db0:	mov	r6, #0
   16db4:	mov	r7, #2
   16db8:	movne	r0, #39	; 0x27
   16dbc:	strbne	r0, [r5]
   16dc0:	movw	r0, #41561	; 0xa259
   16dc4:	movt	r0, #1
   16dc8:	b	16df0 <lchmod@@Base+0xb24>
   16dcc:	cmp	ip, #0
   16dd0:	mov	r8, #1
   16dd4:	mov	r2, #1
   16dd8:	mov	r7, #5
   16ddc:	mov	r6, #0
   16de0:	movne	r0, #34	; 0x22
   16de4:	strbne	r0, [r5]
   16de8:	movw	r0, #41557	; 0xa255
   16dec:	movt	r0, #1
   16df0:	str	r0, [fp, #-88]	; 0xffffffa8
   16df4:	mov	r0, #1
   16df8:	str	r0, [fp, #-72]	; 0xffffffb8
   16dfc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16e00:	str	r7, [fp, #-68]	; 0xffffffbc
   16e04:	str	r6, [fp, #-76]	; 0xffffffb4
   16e08:	str	r2, [sp, #84]	; 0x54
   16e0c:	cmp	r0, #0
   16e10:	movwne	r0, #1
   16e14:	and	r1, r0, r6
   16e18:	and	r1, r2, r1
   16e1c:	str	r1, [sp, #48]	; 0x30
   16e20:	sub	r1, r7, #2
   16e24:	clz	r1, r1
   16e28:	lsr	r1, r1, #5
   16e2c:	and	r1, r1, r6
   16e30:	str	r1, [sp, #64]	; 0x40
   16e34:	subs	r1, r7, #2
   16e38:	eor	r7, r6, #1
   16e3c:	movwne	r1, #1
   16e40:	str	r7, [sp, #92]	; 0x5c
   16e44:	orr	r7, r1, r7
   16e48:	and	r1, r1, r2
   16e4c:	and	r0, r0, r1
   16e50:	str	r7, [sp, #68]	; 0x44
   16e54:	mov	r7, #0
   16e58:	str	r0, [fp, #-60]	; 0xffffffc4
   16e5c:	orr	r0, r1, r6
   16e60:	ldr	r1, [fp, #16]
   16e64:	eor	r0, r0, #1
   16e68:	clz	r1, r1
   16e6c:	lsr	r1, r1, #5
   16e70:	orr	r0, r1, r0
   16e74:	str	r0, [fp, #-64]	; 0xffffffc0
   16e78:	eor	r0, r2, #1
   16e7c:	str	r0, [sp, #52]	; 0x34
   16e80:	cmn	r3, #1
   16e84:	beq	16e94 <lchmod@@Base+0xbc8>
   16e88:	cmp	r7, r3
   16e8c:	bne	16ea0 <lchmod@@Base+0xbd4>
   16e90:	b	179fc <lchmod@@Base+0x1730>
   16e94:	ldrb	r0, [r4, r7]
   16e98:	cmp	r0, #0
   16e9c:	beq	17a04 <lchmod@@Base+0x1738>
   16ea0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16ea4:	cmp	r0, #0
   16ea8:	beq	16ef0 <lchmod@@Base+0xc24>
   16eac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16eb0:	add	r5, r7, r0
   16eb4:	cmp	r0, #2
   16eb8:	bcc	16f04 <lchmod@@Base+0xc38>
   16ebc:	mov	r0, #0
   16ec0:	cmn	r3, #1
   16ec4:	str	r0, [fp, #-56]	; 0xffffffc8
   16ec8:	bne	16f0c <lchmod@@Base+0xc40>
   16ecc:	mov	r0, r4
   16ed0:	mov	r4, ip
   16ed4:	mov	r6, lr
   16ed8:	bl	11964 <strlen@plt>
   16edc:	mov	ip, r4
   16ee0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   16ee4:	mov	lr, r6
   16ee8:	mov	r3, r0
   16eec:	b	16f0c <lchmod@@Base+0xc40>
   16ef0:	mov	r0, #0
   16ef4:	mov	sl, r3
   16ef8:	str	r0, [fp, #-56]	; 0xffffffc8
   16efc:	mov	r0, #0
   16f00:	b	16f78 <lchmod@@Base+0xcac>
   16f04:	mov	r0, #0
   16f08:	str	r0, [fp, #-56]	; 0xffffffc8
   16f0c:	cmp	r5, r3
   16f10:	bls	16f24 <lchmod@@Base+0xc58>
   16f14:	ldr	r5, [fp, #-84]	; 0xffffffac
   16f18:	mov	r0, #0
   16f1c:	mov	sl, r3
   16f20:	b	16f78 <lchmod@@Base+0xcac>
   16f24:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16f28:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16f2c:	add	r0, r4, r7
   16f30:	mov	r5, lr
   16f34:	mov	r6, ip
   16f38:	mov	sl, r3
   16f3c:	bl	11958 <bcmp@plt>
   16f40:	ldr	r2, [sp, #92]	; 0x5c
   16f44:	cmp	r0, #0
   16f48:	ldr	r3, [fp, #-84]	; 0xffffffac
   16f4c:	mov	r1, r0
   16f50:	movwne	r1, #1
   16f54:	orr	r1, r1, r2
   16f58:	tst	r1, #1
   16f5c:	beq	17a88 <lchmod@@Base+0x17bc>
   16f60:	ldr	r4, [fp, #-80]	; 0xffffffb0
   16f64:	clz	r0, r0
   16f68:	mov	lr, r5
   16f6c:	mov	ip, r6
   16f70:	mov	r5, r3
   16f74:	lsr	r0, r0, #5
   16f78:	str	r0, [fp, #-52]	; 0xffffffcc
   16f7c:	ldrb	r6, [r4, r7]
   16f80:	cmp	r6, #126	; 0x7e
   16f84:	bhi	174ac <lchmod@@Base+0x11e0>
   16f88:	add	r3, pc, #16
   16f8c:	mov	r9, #1
   16f90:	mov	r2, #110	; 0x6e
   16f94:	mov	r0, #97	; 0x61
   16f98:	mov	r1, #0
   16f9c:	ldr	pc, [r3, r6, lsl #2]
   16fa0:	andeq	r7, r1, r0, lsl r3
   16fa4:	andeq	r7, r1, ip, lsr #9
   16fa8:	andeq	r7, r1, ip, lsr #9
   16fac:	andeq	r7, r1, ip, lsr #9
   16fb0:	andeq	r7, r1, ip, lsr #9
   16fb4:	andeq	r7, r1, ip, lsr #9
   16fb8:	andeq	r7, r1, ip, lsr #9
   16fbc:	andeq	r7, r1, ip, lsr #10
   16fc0:	strdeq	r7, [r1], -r0
   16fc4:	andeq	r7, r1, r8, ror #5
   16fc8:	strdeq	r7, [r1], -ip
   16fcc:	andeq	r7, r1, r4, lsl r4
   16fd0:	andeq	r7, r1, r0, ror #5
   16fd4:	strdeq	r7, [r1], -r8
   16fd8:	andeq	r7, r1, ip, lsr #9
   16fdc:	andeq	r7, r1, ip, lsr #9
   16fe0:	andeq	r7, r1, ip, lsr #9
   16fe4:	andeq	r7, r1, ip, lsr #9
   16fe8:	andeq	r7, r1, ip, lsr #9
   16fec:	andeq	r7, r1, ip, lsr #9
   16ff0:	andeq	r7, r1, ip, lsr #9
   16ff4:	andeq	r7, r1, ip, lsr #9
   16ff8:	andeq	r7, r1, ip, lsr #9
   16ffc:	andeq	r7, r1, ip, lsr #9
   17000:	andeq	r7, r1, ip, lsr #9
   17004:	andeq	r7, r1, ip, lsr #9
   17008:	andeq	r7, r1, ip, lsr #9
   1700c:	andeq	r7, r1, ip, lsr #9
   17010:	andeq	r7, r1, ip, lsr #9
   17014:	andeq	r7, r1, ip, lsr #9
   17018:	andeq	r7, r1, ip, lsr #9
   1701c:	andeq	r7, r1, ip, lsr #9
   17020:	muleq	r1, r0, r2
   17024:	muleq	r1, r4, r2
   17028:	muleq	r1, r4, r2
   1702c:	andeq	r7, r1, r8, ror r2
   17030:	muleq	r1, r4, r2
   17034:	muleq	r1, ip, r1
   17038:	muleq	r1, r4, r2
   1703c:	andeq	r7, r1, ip, lsl r4
   17040:	muleq	r1, r4, r2
   17044:	muleq	r1, r4, r2
   17048:	muleq	r1, r4, r2
   1704c:	muleq	r1, ip, r1
   17050:	muleq	r1, ip, r1
   17054:	muleq	r1, ip, r1
   17058:	muleq	r1, ip, r1
   1705c:	muleq	r1, ip, r1
   17060:	muleq	r1, ip, r1
   17064:	muleq	r1, ip, r1
   17068:	muleq	r1, ip, r1
   1706c:	muleq	r1, ip, r1
   17070:	muleq	r1, ip, r1
   17074:	muleq	r1, ip, r1
   17078:	muleq	r1, ip, r1
   1707c:	muleq	r1, ip, r1
   17080:	muleq	r1, ip, r1
   17084:	muleq	r1, ip, r1
   17088:	muleq	r1, ip, r1
   1708c:	muleq	r1, r4, r2
   17090:	muleq	r1, r4, r2
   17094:	muleq	r1, r4, r2
   17098:	muleq	r1, r4, r2
   1709c:	andeq	r7, r1, r8, ror #7
   170a0:	andeq	r7, r1, ip, lsr #9
   170a4:	muleq	r1, ip, r1
   170a8:	muleq	r1, ip, r1
   170ac:	muleq	r1, ip, r1
   170b0:	muleq	r1, ip, r1
   170b4:	muleq	r1, ip, r1
   170b8:	muleq	r1, ip, r1
   170bc:	muleq	r1, ip, r1
   170c0:	muleq	r1, ip, r1
   170c4:	muleq	r1, ip, r1
   170c8:	muleq	r1, ip, r1
   170cc:	muleq	r1, ip, r1
   170d0:	muleq	r1, ip, r1
   170d4:	muleq	r1, ip, r1
   170d8:	muleq	r1, ip, r1
   170dc:	muleq	r1, ip, r1
   170e0:	muleq	r1, ip, r1
   170e4:	muleq	r1, ip, r1
   170e8:	muleq	r1, ip, r1
   170ec:	muleq	r1, ip, r1
   170f0:	muleq	r1, ip, r1
   170f4:	muleq	r1, ip, r1
   170f8:	muleq	r1, ip, r1
   170fc:	muleq	r1, ip, r1
   17100:	muleq	r1, ip, r1
   17104:	muleq	r1, ip, r1
   17108:	muleq	r1, ip, r1
   1710c:	muleq	r1, r4, r2
   17110:			; <UNDEFINED> instruction: 0x000172bc
   17114:	muleq	r1, ip, r1
   17118:	muleq	r1, r4, r2
   1711c:	muleq	r1, ip, r1
   17120:	muleq	r1, r4, r2
   17124:	muleq	r1, ip, r1
   17128:	muleq	r1, ip, r1
   1712c:	muleq	r1, ip, r1
   17130:	muleq	r1, ip, r1
   17134:	muleq	r1, ip, r1
   17138:	muleq	r1, ip, r1
   1713c:	muleq	r1, ip, r1
   17140:	muleq	r1, ip, r1
   17144:	muleq	r1, ip, r1
   17148:	muleq	r1, ip, r1
   1714c:	muleq	r1, ip, r1
   17150:	muleq	r1, ip, r1
   17154:	muleq	r1, ip, r1
   17158:	muleq	r1, ip, r1
   1715c:	muleq	r1, ip, r1
   17160:	muleq	r1, ip, r1
   17164:	muleq	r1, ip, r1
   17168:	muleq	r1, ip, r1
   1716c:	muleq	r1, ip, r1
   17170:	muleq	r1, ip, r1
   17174:	muleq	r1, ip, r1
   17178:	muleq	r1, ip, r1
   1717c:	muleq	r1, ip, r1
   17180:	muleq	r1, ip, r1
   17184:	muleq	r1, ip, r1
   17188:	muleq	r1, ip, r1
   1718c:	andeq	r7, r1, r0, asr r2
   17190:	muleq	r1, r4, r2
   17194:	andeq	r7, r1, r0, asr r2
   17198:	andeq	r7, r1, r8, ror r2
   1719c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   171a0:	tst	r0, #1
   171a4:	bne	171d0 <lchmod@@Base+0xf04>
   171a8:	ldr	r1, [fp, #16]
   171ac:	ubfx	r0, r6, #5, #3
   171b0:	mov	r2, #1
   171b4:	ldr	r0, [r1, r0, lsl #2]
   171b8:	and	r1, r6, #31
   171bc:	tst	r0, r2, lsl r1
   171c0:	beq	171d0 <lchmod@@Base+0xf04>
   171c4:	mov	r0, r6
   171c8:	mov	r1, r9
   171cc:	b	171e4 <lchmod@@Base+0xf18>
   171d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   171d4:	mov	r1, r9
   171d8:	cmp	r0, #0
   171dc:	mov	r0, r6
   171e0:	beq	17930 <lchmod@@Base+0x1664>
   171e4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   171e8:	tst	r2, #1
   171ec:	bne	17acc <lchmod@@Base+0x1800>
   171f0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   171f4:	subs	r2, r2, #2
   171f8:	movwne	r2, #1
   171fc:	orr	r2, r2, lr
   17200:	tst	r2, #1
   17204:	bne	1723c <lchmod@@Base+0xf70>
   17208:	cmp	r8, ip
   1720c:	mov	lr, #1
   17210:	movcc	r2, #39	; 0x27
   17214:	strbcc	r2, [r5, r8]
   17218:	add	r2, r8, #1
   1721c:	cmp	r2, ip
   17220:	movcc	r3, #36	; 0x24
   17224:	strbcc	r3, [r5, r2]
   17228:	add	r2, r8, #2
   1722c:	add	r8, r8, #3
   17230:	cmp	r2, ip
   17234:	movcc	r3, #39	; 0x27
   17238:	strbcc	r3, [r5, r2]
   1723c:	cmp	r8, ip
   17240:	movcc	r2, #92	; 0x5c
   17244:	strbcc	r2, [r5, r8]
   17248:	add	r8, r8, #1
   1724c:	b	17970 <lchmod@@Base+0x16a4>
   17250:	cmp	sl, #1
   17254:	beq	17278 <lchmod@@Base+0xfac>
   17258:	mov	r9, #0
   1725c:	cmn	sl, #1
   17260:	bne	17284 <lchmod@@Base+0xfb8>
   17264:	ldrb	r0, [r4, #1]
   17268:	cmp	r0, #0
   1726c:	beq	17278 <lchmod@@Base+0xfac>
   17270:	mvn	sl, #0
   17274:	b	17284 <lchmod@@Base+0xfb8>
   17278:	mov	r9, #0
   1727c:	cmp	r7, #0
   17280:	beq	17290 <lchmod@@Base+0xfc4>
   17284:	mov	r0, #0
   17288:	str	r0, [fp, #-56]	; 0xffffffc8
   1728c:	b	1719c <lchmod@@Base+0xed0>
   17290:	mov	r1, #1
   17294:	ldr	r0, [fp, #-68]	; 0xffffffbc
   17298:	cmp	r0, #2
   1729c:	bne	172b4 <lchmod@@Base+0xfe8>
   172a0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   172a4:	mov	r9, r1
   172a8:	tst	r0, #1
   172ac:	beq	1719c <lchmod@@Base+0xed0>
   172b0:	b	17acc <lchmod@@Base+0x1800>
   172b4:	mov	r9, r1
   172b8:	b	1719c <lchmod@@Base+0xed0>
   172bc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   172c0:	cmp	r0, #2
   172c4:	bne	17508 <lchmod@@Base+0x123c>
   172c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   172cc:	tst	r0, #1
   172d0:	bne	17acc <lchmod@@Base+0x1800>
   172d4:	mov	r0, #0
   172d8:	str	r0, [fp, #-56]	; 0xffffffc8
   172dc:	b	17520 <lchmod@@Base+0x1254>
   172e0:	mov	r0, #102	; 0x66
   172e4:	b	1752c <lchmod@@Base+0x1260>
   172e8:	mov	r2, #116	; 0x74
   172ec:	b	172fc <lchmod@@Base+0x1030>
   172f0:	mov	r0, #98	; 0x62
   172f4:	b	1752c <lchmod@@Base+0x1260>
   172f8:	mov	r2, #114	; 0x72
   172fc:	ldr	r0, [sp, #68]	; 0x44
   17300:	tst	r0, #1
   17304:	mov	r0, r2
   17308:	bne	1752c <lchmod@@Base+0x1260>
   1730c:	b	17acc <lchmod@@Base+0x1800>
   17310:	ldr	r0, [sp, #84]	; 0x54
   17314:	tst	r0, #1
   17318:	beq	1754c <lchmod@@Base+0x1280>
   1731c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17320:	tst	r0, #1
   17324:	bne	17bb8 <lchmod@@Base+0x18ec>
   17328:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1732c:	mov	r2, sl
   17330:	subs	r0, r0, #2
   17334:	movwne	r0, #1
   17338:	orr	r0, r0, lr
   1733c:	tst	r0, #1
   17340:	bne	17378 <lchmod@@Base+0x10ac>
   17344:	cmp	r8, ip
   17348:	mov	lr, #1
   1734c:	movcc	r0, #39	; 0x27
   17350:	strbcc	r0, [r5, r8]
   17354:	add	r0, r8, #1
   17358:	cmp	r0, ip
   1735c:	movcc	r1, #36	; 0x24
   17360:	strbcc	r1, [r5, r0]
   17364:	add	r0, r8, #2
   17368:	add	r8, r8, #3
   1736c:	cmp	r0, ip
   17370:	movcc	r1, #39	; 0x27
   17374:	strbcc	r1, [r5, r0]
   17378:	mov	r1, #1
   1737c:	cmp	r8, ip
   17380:	mov	r9, #0
   17384:	mov	r6, #48	; 0x30
   17388:	str	r1, [fp, #-56]	; 0xffffffc8
   1738c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17390:	movcc	r0, #92	; 0x5c
   17394:	strbcc	r0, [r5, r8]
   17398:	add	r0, r8, #1
   1739c:	cmp	r1, #2
   173a0:	beq	176a8 <lchmod@@Base+0x13dc>
   173a4:	add	r1, r7, #1
   173a8:	cmp	r1, r2
   173ac:	bcs	176a8 <lchmod@@Base+0x13dc>
   173b0:	ldrb	r1, [r4, r1]
   173b4:	sub	r1, r1, #48	; 0x30
   173b8:	uxtb	r1, r1
   173bc:	cmp	r1, #9
   173c0:	bhi	176a8 <lchmod@@Base+0x13dc>
   173c4:	cmp	r0, ip
   173c8:	movcc	r1, #48	; 0x30
   173cc:	strbcc	r1, [r5, r0]
   173d0:	add	r0, r8, #2
   173d4:	add	r8, r8, #3
   173d8:	cmp	r0, ip
   173dc:	movcc	r1, #48	; 0x30
   173e0:	strbcc	r1, [r5, r0]
   173e4:	b	1719c <lchmod@@Base+0xed0>
   173e8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   173ec:	mov	r6, #63	; 0x3f
   173f0:	cmp	r0, #5
   173f4:	beq	176b0 <lchmod@@Base+0x13e4>
   173f8:	mov	r1, #0
   173fc:	cmp	r0, #2
   17400:	str	r1, [fp, #-56]	; 0xffffffc8
   17404:	bne	17764 <lchmod@@Base+0x1498>
   17408:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1740c:	mov	r9, #0
   17410:	b	172a8 <lchmod@@Base+0xfdc>
   17414:	mov	r0, #118	; 0x76
   17418:	b	1752c <lchmod@@Base+0x1260>
   1741c:	mov	r0, #1
   17420:	mov	r6, #39	; 0x27
   17424:	str	r0, [sp, #60]	; 0x3c
   17428:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1742c:	cmp	r0, #2
   17430:	bne	174a4 <lchmod@@Base+0x11d8>
   17434:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17438:	tst	r0, #1
   1743c:	bne	17acc <lchmod@@Base+0x1800>
   17440:	ldr	r2, [sp, #56]	; 0x38
   17444:	clz	r1, ip
   17448:	mov	lr, #0
   1744c:	lsr	r1, r1, #5
   17450:	cmp	r2, #0
   17454:	mov	r0, r2
   17458:	movwne	r0, #1
   1745c:	orrs	r0, r0, r1
   17460:	moveq	r2, ip
   17464:	moveq	ip, r0
   17468:	cmp	r8, ip
   1746c:	str	r2, [sp, #56]	; 0x38
   17470:	movcc	r0, #39	; 0x27
   17474:	strbcc	r0, [r5, r8]
   17478:	add	r0, r8, #1
   1747c:	cmp	r0, ip
   17480:	movcc	r1, #92	; 0x5c
   17484:	strbcc	r1, [r5, r0]
   17488:	add	r0, r8, #2
   1748c:	add	r8, r8, #3
   17490:	cmp	r0, ip
   17494:	movcc	r1, #39	; 0x27
   17498:	strbcc	r1, [r5, r0]
   1749c:	mov	r0, #0
   174a0:	str	r0, [fp, #-56]	; 0xffffffc8
   174a4:	mov	r9, #1
   174a8:	b	1719c <lchmod@@Base+0xed0>
   174ac:	ldr	r0, [sp, #40]	; 0x28
   174b0:	str	lr, [sp, #44]	; 0x2c
   174b4:	str	ip, [sp, #88]	; 0x58
   174b8:	cmp	r0, #1
   174bc:	bne	1756c <lchmod@@Base+0x12a0>
   174c0:	str	sl, [sp, #36]	; 0x24
   174c4:	bl	11928 <__ctype_b_loc@plt>
   174c8:	ldr	r0, [r0]
   174cc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   174d0:	mov	r1, #1
   174d4:	add	r0, r0, r6, lsl #1
   174d8:	ldrb	r0, [r0, #1]
   174dc:	ubfx	r9, r0, #6, #1
   174e0:	ldr	r0, [sp, #52]	; 0x34
   174e4:	ldr	lr, [sp, #44]	; 0x2c
   174e8:	cmp	r1, #1
   174ec:	orr	r3, r9, r0
   174f0:	bhi	1776c <lchmod@@Base+0x14a0>
   174f4:	tst	r3, #1
   174f8:	beq	1776c <lchmod@@Base+0x14a0>
   174fc:	ldr	sl, [sp, #36]	; 0x24
   17500:	ldr	ip, [sp, #88]	; 0x58
   17504:	b	1719c <lchmod@@Base+0xed0>
   17508:	ldr	r1, [sp, #48]	; 0x30
   1750c:	mov	r0, #0
   17510:	str	r0, [fp, #-56]	; 0xffffffc8
   17514:	mov	r0, #92	; 0x5c
   17518:	cmp	r1, #0
   1751c:	beq	1752c <lchmod@@Base+0x1260>
   17520:	mov	r6, #92	; 0x5c
   17524:	mov	r9, #0
   17528:	b	17930 <lchmod@@Base+0x1664>
   1752c:	mov	r1, #0
   17530:	mov	r9, #0
   17534:	str	r1, [fp, #-56]	; 0xffffffc8
   17538:	ldr	r1, [sp, #84]	; 0x54
   1753c:	tst	r1, #1
   17540:	mov	r1, #0
   17544:	beq	1719c <lchmod@@Base+0xed0>
   17548:	b	171e4 <lchmod@@Base+0xf18>
   1754c:	ldr	r0, [sp, #32]
   17550:	mov	r6, #0
   17554:	mov	r9, #0
   17558:	cmp	r0, #0
   1755c:	mov	r0, #0
   17560:	str	r0, [fp, #-56]	; 0xffffffc8
   17564:	beq	1719c <lchmod@@Base+0xed0>
   17568:	b	17988 <lchmod@@Base+0x16bc>
   1756c:	mov	r0, #0
   17570:	cmn	sl, #1
   17574:	sub	r3, fp, #40	; 0x28
   17578:	str	r0, [fp, #-36]	; 0xffffffdc
   1757c:	str	r0, [fp, #-40]	; 0xffffffd8
   17580:	bne	17598 <lchmod@@Base+0x12cc>
   17584:	mov	r0, r4
   17588:	bl	11964 <strlen@plt>
   1758c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17590:	sub	r3, fp, #40	; 0x28
   17594:	mov	sl, r0
   17598:	ldr	r0, [sp, #72]	; 0x48
   1759c:	mov	r9, #1
   175a0:	mov	r1, #0
   175a4:	str	sl, [sp, #36]	; 0x24
   175a8:	add	r0, r0, r7
   175ac:	str	r0, [sp, #20]
   175b0:	add	r0, r1, r7
   175b4:	str	r1, [sp, #24]
   175b8:	add	r1, r4, r0
   175bc:	mov	r4, r0
   175c0:	sub	r2, sl, r0
   175c4:	sub	r0, fp, #44	; 0x2c
   175c8:	bl	19770 <lchmod@@Base+0x34a4>
   175cc:	cmp	r0, #0
   175d0:	beq	179dc <lchmod@@Base+0x1710>
   175d4:	cmn	r0, #1
   175d8:	beq	17994 <lchmod@@Base+0x16c8>
   175dc:	ldr	r2, [sp, #36]	; 0x24
   175e0:	cmn	r0, #2
   175e4:	beq	1799c <lchmod@@Base+0x16d0>
   175e8:	ldr	r2, [sp, #64]	; 0x40
   175ec:	ldr	ip, [sp, #88]	; 0x58
   175f0:	ldr	r4, [sp, #84]	; 0x54
   175f4:	ldr	lr, [fp, #-48]	; 0xffffffd0
   175f8:	cmp	r0, #2
   175fc:	mov	r1, #0
   17600:	movwcc	r1, #1
   17604:	eor	r2, r2, #1
   17608:	orrs	r1, r2, r1
   1760c:	bne	1765c <lchmod@@Base+0x1390>
   17610:	ldr	r1, [sp, #24]
   17614:	ldr	r2, [sp, #20]
   17618:	add	r1, r2, r1
   1761c:	sub	r2, r0, #1
   17620:	ldrb	r3, [r1]
   17624:	sub	r5, r3, #94	; 0x5e
   17628:	cmp	r5, #30
   1762c:	bhi	17644 <lchmod@@Base+0x1378>
   17630:	mov	r4, #1
   17634:	mov	sl, #1073741829	; 0x40000005
   17638:	tst	sl, r4, lsl r5
   1763c:	ldr	r4, [sp, #84]	; 0x54
   17640:	bne	17aa4 <lchmod@@Base+0x17d8>
   17644:	sub	r3, r3, #91	; 0x5b
   17648:	cmp	r3, #2
   1764c:	bcc	17aa4 <lchmod@@Base+0x17d8>
   17650:	add	r1, r1, #1
   17654:	subs	r2, r2, #1
   17658:	bne	17620 <lchmod@@Base+0x1354>
   1765c:	ldr	r5, [sp, #24]
   17660:	str	lr, [fp, #-48]	; 0xffffffd0
   17664:	add	r5, r0, r5
   17668:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1766c:	bl	11850 <iswprint@plt>
   17670:	cmp	r0, #0
   17674:	sub	r4, fp, #40	; 0x28
   17678:	movwne	r0, #1
   1767c:	and	r9, r9, r0
   17680:	mov	r0, r4
   17684:	bl	117e4 <mbsinit@plt>
   17688:	mov	r1, r5
   1768c:	mov	r3, r4
   17690:	ldr	sl, [sp, #36]	; 0x24
   17694:	ldr	r5, [fp, #-84]	; 0xffffffac
   17698:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1769c:	cmp	r0, #0
   176a0:	beq	175b0 <lchmod@@Base+0x12e4>
   176a4:	b	174e0 <lchmod@@Base+0x1214>
   176a8:	mov	r8, r0
   176ac:	b	1719c <lchmod@@Base+0xed0>
   176b0:	mov	r0, #0
   176b4:	str	r0, [fp, #-56]	; 0xffffffc8
   176b8:	ldr	r0, [sp, #28]
   176bc:	cmp	r0, #0
   176c0:	beq	17764 <lchmod@@Base+0x1498>
   176c4:	add	r0, r7, #2
   176c8:	mov	r1, sl
   176cc:	cmp	r0, sl
   176d0:	bcs	17764 <lchmod@@Base+0x1498>
   176d4:	add	r1, r7, r4
   176d8:	ldrb	r1, [r1, #1]
   176dc:	cmp	r1, #63	; 0x3f
   176e0:	bne	17764 <lchmod@@Base+0x1498>
   176e4:	ldrb	r9, [r4, r0]
   176e8:	sub	r2, r9, #33	; 0x21
   176ec:	cmp	r2, #29
   176f0:	bhi	17764 <lchmod@@Base+0x1498>
   176f4:	mov	r1, r4
   176f8:	movw	r4, #20929	; 0x51c1
   176fc:	mov	r3, #1
   17700:	movt	r4, #14336	; 0x3800
   17704:	tst	r4, r3, lsl r2
   17708:	beq	179f0 <lchmod@@Base+0x1724>
   1770c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17710:	tst	r2, #1
   17714:	bne	17bc0 <lchmod@@Base+0x18f4>
   17718:	cmp	r8, ip
   1771c:	mov	r4, r1
   17720:	mov	r7, r0
   17724:	mov	r6, r9
   17728:	movcc	r2, #63	; 0x3f
   1772c:	strbcc	r2, [r5, r8]
   17730:	add	r2, r8, #1
   17734:	cmp	r2, ip
   17738:	movcc	r3, #34	; 0x22
   1773c:	strbcc	r3, [r5, r2]
   17740:	add	r2, r8, #2
   17744:	cmp	r2, ip
   17748:	movcc	r3, #34	; 0x22
   1774c:	strbcc	r3, [r5, r2]
   17750:	add	r2, r8, #3
   17754:	add	r8, r8, #4
   17758:	cmp	r2, ip
   1775c:	movcc	r3, #63	; 0x3f
   17760:	strbcc	r3, [r5, r2]
   17764:	mov	r9, #0
   17768:	b	1719c <lchmod@@Base+0xed0>
   1776c:	ldr	sl, [sp, #36]	; 0x24
   17770:	add	r0, r1, r7
   17774:	mov	r2, #0
   17778:	str	r3, [sp, #24]
   1777c:	str	r0, [fp, #-56]	; 0xffffffc8
   17780:	tst	r3, #1
   17784:	beq	177b0 <lchmod@@Base+0x14e4>
   17788:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1778c:	tst	r0, #1
   17790:	beq	17878 <lchmod@@Base+0x15ac>
   17794:	ldr	r1, [sp, #88]	; 0x58
   17798:	mov	r0, r3
   1779c:	cmp	r8, r1
   177a0:	movcc	r1, #92	; 0x5c
   177a4:	strbcc	r1, [r5, r8]
   177a8:	add	r8, r8, #1
   177ac:	b	1787c <lchmod@@Base+0x15b0>
   177b0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   177b4:	tst	r1, #1
   177b8:	bne	17ac8 <lchmod@@Base+0x17fc>
   177bc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   177c0:	subs	r2, r1, #2
   177c4:	movwne	r2, #1
   177c8:	orr	r2, r2, lr
   177cc:	tst	r2, #1
   177d0:	bne	17814 <lchmod@@Base+0x1548>
   177d4:	ldr	r1, [sp, #88]	; 0x58
   177d8:	add	r2, r8, #1
   177dc:	mov	lr, #1
   177e0:	cmp	r8, r1
   177e4:	movcc	r1, #39	; 0x27
   177e8:	strbcc	r1, [r5, r8]
   177ec:	ldr	r1, [sp, #88]	; 0x58
   177f0:	cmp	r2, r1
   177f4:	movcc	r1, #36	; 0x24
   177f8:	strbcc	r1, [r5, r2]
   177fc:	ldr	r1, [sp, #88]	; 0x58
   17800:	add	r2, r8, #2
   17804:	add	r8, r8, #3
   17808:	cmp	r2, r1
   1780c:	movcc	r1, #39	; 0x27
   17810:	strbcc	r1, [r5, r2]
   17814:	ldr	r1, [sp, #88]	; 0x58
   17818:	add	r2, r8, #1
   1781c:	mov	r0, r3
   17820:	cmp	r8, r1
   17824:	movcc	r1, #92	; 0x5c
   17828:	strbcc	r1, [r5, r8]
   1782c:	ldr	r1, [sp, #88]	; 0x58
   17830:	cmp	r2, r1
   17834:	bcs	17848 <lchmod@@Base+0x157c>
   17838:	uxtb	r3, r6
   1783c:	mov	r1, #48	; 0x30
   17840:	orr	r3, r1, r3, lsr #6
   17844:	strb	r3, [r5, r2]
   17848:	ldr	r1, [sp, #88]	; 0x58
   1784c:	add	r2, r8, #2
   17850:	add	r8, r8, #3
   17854:	cmp	r2, r1
   17858:	lsrcc	r3, r6, #3
   1785c:	movcc	r1, #6
   17860:	bficc	r3, r1, #3, #29
   17864:	mov	r1, #6
   17868:	bfi	r6, r1, #3, #29
   1786c:	strbcc	r3, [r5, r2]
   17870:	mov	r2, #1
   17874:	b	17884 <lchmod@@Base+0x15b8>
   17878:	mov	r0, r3
   1787c:	mov	r1, #0
   17880:	str	r1, [fp, #-52]	; 0xffffffcc
   17884:	mov	ip, r2
   17888:	and	r1, r2, #1
   1788c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17890:	add	r3, r7, #1
   17894:	cmp	r2, r3
   17898:	bls	17920 <lchmod@@Base+0x1654>
   1789c:	cmp	r1, #0
   178a0:	mvn	r5, lr
   178a4:	movwne	r1, #1
   178a8:	orr	r5, r5, r1
   178ac:	tst	r5, #1
   178b0:	bne	178f4 <lchmod@@Base+0x1628>
   178b4:	ldr	r1, [sp, #88]	; 0x58
   178b8:	ldr	r5, [fp, #-84]	; 0xffffffac
   178bc:	mov	r2, r4
   178c0:	ldr	r4, [sp, #88]	; 0x58
   178c4:	ldr	r0, [sp, #24]
   178c8:	mov	lr, #0
   178cc:	cmp	r8, r1
   178d0:	movcc	r1, #39	; 0x27
   178d4:	strbcc	r1, [r5, r8]
   178d8:	add	r1, r8, #1
   178dc:	add	r8, r8, #2
   178e0:	cmp	r1, r4
   178e4:	movcc	r4, #39	; 0x27
   178e8:	strbcc	r4, [r5, r1]
   178ec:	mov	r4, r2
   178f0:	b	178f8 <lchmod@@Base+0x162c>
   178f4:	ldr	r5, [fp, #-84]	; 0xffffffac
   178f8:	ldr	r1, [sp, #88]	; 0x58
   178fc:	mov	r2, ip
   17900:	cmp	r8, r1
   17904:	ldr	r1, [sp, #72]	; 0x48
   17908:	strbcc	r6, [r5, r8]
   1790c:	add	r8, r8, #1
   17910:	ldrb	r6, [r1, r7]
   17914:	mov	r7, r3
   17918:	mov	r3, r0
   1791c:	b	17780 <lchmod@@Base+0x14b4>
   17920:	ldr	ip, [sp, #88]	; 0x58
   17924:	cmp	r1, #0
   17928:	movwne	r1, #1
   1792c:	str	r1, [fp, #-56]	; 0xffffffc8
   17930:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17934:	cmp	r0, #0
   17938:	bne	17968 <lchmod@@Base+0x169c>
   1793c:	tst	lr, #1
   17940:	beq	17968 <lchmod@@Base+0x169c>
   17944:	cmp	r8, ip
   17948:	mov	lr, #0
   1794c:	movcc	r0, #39	; 0x27
   17950:	strbcc	r0, [r5, r8]
   17954:	add	r0, r8, #1
   17958:	add	r8, r8, #2
   1795c:	cmp	r0, ip
   17960:	movcc	r1, #39	; 0x27
   17964:	strbcc	r1, [r5, r0]
   17968:	mov	r1, r9
   1796c:	mov	r0, r6
   17970:	cmp	r8, ip
   17974:	strbcc	r0, [r5, r8]
   17978:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1797c:	add	r8, r8, #1
   17980:	and	r0, r0, r1
   17984:	str	r0, [fp, #-48]	; 0xffffffd0
   17988:	mov	r3, sl
   1798c:	add	r7, r7, #1
   17990:	b	16e80 <lchmod@@Base+0xbb4>
   17994:	mov	r9, #0
   17998:	b	179dc <lchmod@@Base+0x1710>
   1799c:	mov	r9, #0
   179a0:	cmp	r2, r4
   179a4:	bls	179dc <lchmod@@Base+0x1710>
   179a8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   179ac:	ldr	r1, [sp, #24]
   179b0:	add	r0, r4, r7
   179b4:	mov	r3, r1
   179b8:	ldrb	r1, [r0, r1]
   179bc:	cmp	r1, #0
   179c0:	beq	179e8 <lchmod@@Base+0x171c>
   179c4:	add	r3, r3, #1
   179c8:	add	r1, r7, r3
   179cc:	cmp	r1, r2
   179d0:	mov	r1, r3
   179d4:	bcc	179b4 <lchmod@@Base+0x16e8>
   179d8:	b	174e0 <lchmod@@Base+0x1214>
   179dc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   179e0:	ldr	r1, [sp, #24]
   179e4:	b	174e0 <lchmod@@Base+0x1214>
   179e8:	mov	r1, r3
   179ec:	b	174e0 <lchmod@@Base+0x1214>
   179f0:	mov	r9, #0
   179f4:	mov	r4, r1
   179f8:	b	1719c <lchmod@@Base+0xed0>
   179fc:	mov	sl, r7
   17a00:	b	17a08 <lchmod@@Base+0x173c>
   17a04:	mvn	sl, #0
   17a08:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17a0c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17a10:	eor	r0, r1, #2
   17a14:	orr	r0, r0, r8
   17a18:	clz	r0, r0
   17a1c:	lsr	r0, r0, #5
   17a20:	tst	r2, r0
   17a24:	bne	17acc <lchmod@@Base+0x1800>
   17a28:	subs	r0, r1, #2
   17a2c:	movwne	r0, #1
   17a30:	orr	r0, r2, r0
   17a34:	tst	r0, #1
   17a38:	ldreq	r0, [sp, #60]	; 0x3c
   17a3c:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   17a40:	eoreq	r0, r0, #1
   17a44:	tsteq	r0, #1
   17a48:	bne	17b60 <lchmod@@Base+0x1894>
   17a4c:	tst	r1, #1
   17a50:	bne	17b2c <lchmod@@Base+0x1860>
   17a54:	ldr	r6, [sp, #56]	; 0x38
   17a58:	mov	r9, #0
   17a5c:	cmp	r6, #0
   17a60:	beq	17b58 <lchmod@@Base+0x188c>
   17a64:	ldr	r0, [sp, #84]	; 0x54
   17a68:	mov	r1, #0
   17a6c:	mov	r7, #2
   17a70:	cmp	ip, #0
   17a74:	str	r1, [fp, #-48]	; 0xffffffd0
   17a78:	mov	r1, #0
   17a7c:	str	r1, [fp, #-76]	; 0xffffffb4
   17a80:	beq	16be8 <lchmod@@Base+0x91c>
   17a84:	b	17b60 <lchmod@@Base+0x1894>
   17a88:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17a8c:	ldr	r1, [fp, #12]
   17a90:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17a94:	mov	r5, r3
   17a98:	mov	ip, r6
   17a9c:	mov	r3, sl
   17aa0:	b	17af0 <lchmod@@Base+0x1824>
   17aa4:	tst	r4, #1
   17aa8:	ldr	r5, [fp, #-84]	; 0xffffffac
   17aac:	ldr	r4, [fp, #-80]	; 0xffffffb0
   17ab0:	ldr	r1, [fp, #12]
   17ab4:	ldr	r3, [sp, #36]	; 0x24
   17ab8:	mov	r0, #2
   17abc:	movwne	r0, #4
   17ac0:	mov	r2, r0
   17ac4:	b	17af0 <lchmod@@Base+0x1824>
   17ac8:	ldr	ip, [sp, #88]	; 0x58
   17acc:	ldr	r1, [sp, #84]	; 0x54
   17ad0:	mov	r0, #2
   17ad4:	tst	r1, #1
   17ad8:	movwne	r0, #4
   17adc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17ae0:	ldr	r1, [fp, #12]
   17ae4:	mov	r3, sl
   17ae8:	cmp	r2, #2
   17aec:	moveq	r2, r0
   17af0:	mov	r0, #0
   17af4:	bic	r1, r1, #2
   17af8:	str	r2, [sp]
   17afc:	mov	r2, r4
   17b00:	str	r0, [sp, #8]
   17b04:	ldr	r0, [sp, #76]	; 0x4c
   17b08:	str	r1, [sp, #4]
   17b0c:	mov	r1, ip
   17b10:	str	r0, [sp, #12]
   17b14:	ldr	r0, [sp, #80]	; 0x50
   17b18:	str	r0, [sp, #16]
   17b1c:	mov	r0, r5
   17b20:	bl	16b5c <lchmod@@Base+0x890>
   17b24:	mov	r8, r0
   17b28:	b	17bac <lchmod@@Base+0x18e0>
   17b2c:	mov	r0, #5
   17b30:	ldr	r1, [sp, #56]	; 0x38
   17b34:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17b38:	mov	r3, sl
   17b3c:	str	r0, [sp]
   17b40:	ldr	r0, [fp, #12]
   17b44:	str	r0, [sp, #4]
   17b48:	ldr	r0, [fp, #16]
   17b4c:	str	r0, [sp, #8]
   17b50:	ldr	r0, [sp, #76]	; 0x4c
   17b54:	b	17b10 <lchmod@@Base+0x1844>
   17b58:	mov	r0, #0
   17b5c:	str	r0, [fp, #-76]	; 0xffffffb4
   17b60:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17b64:	cmp	r1, #0
   17b68:	beq	17ba0 <lchmod@@Base+0x18d4>
   17b6c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17b70:	tst	r0, #1
   17b74:	bne	17ba0 <lchmod@@Base+0x18d4>
   17b78:	ldrb	r0, [r1]
   17b7c:	cmp	r0, #0
   17b80:	beq	17ba0 <lchmod@@Base+0x18d4>
   17b84:	add	r1, r1, #1
   17b88:	cmp	r8, ip
   17b8c:	strbcc	r0, [r5, r8]
   17b90:	add	r8, r8, #1
   17b94:	ldrb	r0, [r1], #1
   17b98:	cmp	r0, #0
   17b9c:	bne	17b88 <lchmod@@Base+0x18bc>
   17ba0:	cmp	r8, ip
   17ba4:	movcc	r0, #0
   17ba8:	strbcc	r0, [r5, r8]
   17bac:	mov	r0, r8
   17bb0:	sub	sp, fp, #28
   17bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bb8:	mov	r0, #4
   17bbc:	b	17adc <lchmod@@Base+0x1810>
   17bc0:	mov	r4, r1
   17bc4:	b	17acc <lchmod@@Base+0x1800>
   17bc8:	bl	11af0 <abort@plt>
   17bcc:	mov	r3, r2
   17bd0:	mov	r2, #0
   17bd4:	b	17bd8 <lchmod@@Base+0x190c>
   17bd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bdc:	add	fp, sp, #28
   17be0:	sub	sp, sp, #36	; 0x24
   17be4:	movw	r8, #45560	; 0xb1f8
   17be8:	cmp	r3, #0
   17bec:	mov	r4, r2
   17bf0:	str	r2, [sp, #24]
   17bf4:	mov	r5, r1
   17bf8:	mov	r6, r0
   17bfc:	str	r0, [sp, #20]
   17c00:	movt	r8, #2
   17c04:	movne	r8, r3
   17c08:	bl	11994 <__errno_location@plt>
   17c0c:	str	r0, [sp, #28]
   17c10:	ldr	r1, [r8, #40]	; 0x28
   17c14:	ldr	r2, [r8, #44]	; 0x2c
   17c18:	ldr	r7, [r0]
   17c1c:	cmp	r4, #0
   17c20:	add	sl, r8, #8
   17c24:	mov	r0, #0
   17c28:	ldm	r8, {r3, r9}
   17c2c:	orreq	r9, r9, #1
   17c30:	stm	sp, {r3, r9, sl}
   17c34:	str	r1, [sp, #12]
   17c38:	str	r2, [sp, #16]
   17c3c:	mov	r1, #0
   17c40:	mov	r2, r6
   17c44:	mov	r3, r5
   17c48:	str	r7, [sp, #32]
   17c4c:	mov	r7, r5
   17c50:	bl	16b5c <lchmod@@Base+0x890>
   17c54:	add	r4, r0, #1
   17c58:	mov	r5, r0
   17c5c:	mov	r0, r4
   17c60:	bl	18bd0 <lchmod@@Base+0x2904>
   17c64:	mov	r6, r0
   17c68:	ldr	r0, [r8]
   17c6c:	ldr	r2, [r8, #44]	; 0x2c
   17c70:	ldr	r1, [r8, #40]	; 0x28
   17c74:	mov	r3, r7
   17c78:	stm	sp, {r0, r9, sl}
   17c7c:	str	r2, [sp, #16]
   17c80:	ldr	r2, [sp, #20]
   17c84:	str	r1, [sp, #12]
   17c88:	mov	r0, r6
   17c8c:	mov	r1, r4
   17c90:	bl	16b5c <lchmod@@Base+0x890>
   17c94:	ldr	r0, [sp, #24]
   17c98:	ldr	r1, [sp, #32]
   17c9c:	ldr	r2, [sp, #28]
   17ca0:	cmp	r0, #0
   17ca4:	str	r1, [r2]
   17ca8:	strne	r5, [r0]
   17cac:	mov	r0, r6
   17cb0:	sub	sp, fp, #28
   17cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17cb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17cbc:	add	fp, sp, #24
   17cc0:	movw	r5, #45452	; 0xb18c
   17cc4:	movw	r8, #45448	; 0xb188
   17cc8:	movt	r5, #2
   17ccc:	movt	r8, #2
   17cd0:	ldr	r0, [r5]
   17cd4:	ldr	r4, [r8]
   17cd8:	cmp	r0, #2
   17cdc:	blt	17d08 <lchmod@@Base+0x1a3c>
   17ce0:	add	r7, r4, #12
   17ce4:	mov	r6, #0
   17ce8:	ldr	r0, [r7, r6, lsl #3]
   17cec:	bl	13178 <__assert_fail@plt+0x1628>
   17cf0:	ldr	r1, [r5]
   17cf4:	add	r2, r6, #2
   17cf8:	add	r0, r6, #1
   17cfc:	mov	r6, r0
   17d00:	cmp	r2, r1
   17d04:	blt	17ce8 <lchmod@@Base+0x1a1c>
   17d08:	ldr	r0, [r4, #4]
   17d0c:	movw	r9, #45608	; 0xb228
   17d10:	movw	r7, #45456	; 0xb190
   17d14:	movt	r9, #2
   17d18:	movt	r7, #2
   17d1c:	cmp	r0, r9
   17d20:	beq	17d30 <lchmod@@Base+0x1a64>
   17d24:	bl	13178 <__assert_fail@plt+0x1628>
   17d28:	mov	r0, #256	; 0x100
   17d2c:	stm	r7, {r0, r9}
   17d30:	cmp	r4, r7
   17d34:	beq	17d44 <lchmod@@Base+0x1a78>
   17d38:	mov	r0, r4
   17d3c:	bl	13178 <__assert_fail@plt+0x1628>
   17d40:	str	r7, [r8]
   17d44:	mov	r0, #1
   17d48:	str	r0, [r5]
   17d4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17d50:	movw	r3, #45560	; 0xb1f8
   17d54:	mvn	r2, #0
   17d58:	movt	r3, #2
   17d5c:	b	17d60 <lchmod@@Base+0x1a94>
   17d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d64:	add	fp, sp, #28
   17d68:	sub	sp, sp, #44	; 0x2c
   17d6c:	mov	r7, r3
   17d70:	str	r2, [sp, #36]	; 0x24
   17d74:	str	r1, [sp, #32]
   17d78:	mov	r5, r0
   17d7c:	bl	11994 <__errno_location@plt>
   17d80:	cmp	r5, #0
   17d84:	bmi	17ef4 <lchmod@@Base+0x1c28>
   17d88:	cmn	r5, #-2147483647	; 0x80000001
   17d8c:	beq	17ef4 <lchmod@@Base+0x1c28>
   17d90:	movw	r8, #45452	; 0xb18c
   17d94:	movw	r4, #45448	; 0xb188
   17d98:	str	r0, [sp, #28]
   17d9c:	ldr	r0, [r0]
   17da0:	movt	r8, #2
   17da4:	movt	r4, #2
   17da8:	ldr	r1, [r8]
   17dac:	ldr	r6, [r4]
   17db0:	str	r0, [sp, #24]
   17db4:	cmp	r1, r5
   17db8:	ble	17dc4 <lchmod@@Base+0x1af8>
   17dbc:	mov	sl, r6
   17dc0:	b	17e30 <lchmod@@Base+0x1b64>
   17dc4:	movw	r9, #45456	; 0xb190
   17dc8:	mov	r0, #8
   17dcc:	str	r1, [fp, #-32]	; 0xffffffe0
   17dd0:	sub	r1, r5, r1
   17dd4:	mvn	r3, #-2147483648	; 0x80000000
   17dd8:	movt	r9, #2
   17ddc:	str	r0, [sp]
   17de0:	add	r2, r1, #1
   17de4:	sub	r1, fp, #32
   17de8:	subs	r0, r6, r9
   17dec:	movne	r0, r6
   17df0:	bl	18d00 <lchmod@@Base+0x2a34>
   17df4:	mov	sl, r0
   17df8:	cmp	r6, r9
   17dfc:	str	r0, [r4]
   17e00:	bne	17e0c <lchmod@@Base+0x1b40>
   17e04:	ldrd	r0, [r9]
   17e08:	stm	sl, {r0, r1}
   17e0c:	ldr	r1, [r8]
   17e10:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17e14:	add	r0, sl, r1, lsl #3
   17e18:	sub	r1, r2, r1
   17e1c:	lsl	r2, r1, #3
   17e20:	mov	r1, #0
   17e24:	bl	119b8 <memset@plt>
   17e28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e2c:	str	r0, [r8]
   17e30:	mov	r9, sl
   17e34:	ldm	r7, {r0, r1}
   17e38:	orr	r8, r1, #1
   17e3c:	add	r1, r7, #8
   17e40:	ldr	r2, [r7, #40]	; 0x28
   17e44:	ldr	r3, [r7, #44]	; 0x2c
   17e48:	ldr	r6, [r9, r5, lsl #3]!
   17e4c:	str	r1, [sp, #20]
   17e50:	ldr	r4, [r9, #4]!
   17e54:	stm	sp, {r0, r8}
   17e58:	add	r0, sp, #8
   17e5c:	stm	r0, {r1, r2, r3}
   17e60:	ldr	r2, [sp, #32]
   17e64:	ldr	r3, [sp, #36]	; 0x24
   17e68:	mov	r1, r6
   17e6c:	mov	r0, r4
   17e70:	bl	16b5c <lchmod@@Base+0x890>
   17e74:	cmp	r6, r0
   17e78:	bhi	17edc <lchmod@@Base+0x1c10>
   17e7c:	add	r6, r0, #1
   17e80:	movw	r0, #45608	; 0xb228
   17e84:	movt	r0, #2
   17e88:	str	r6, [sl, r5, lsl #3]
   17e8c:	cmp	r4, r0
   17e90:	beq	17e9c <lchmod@@Base+0x1bd0>
   17e94:	mov	r0, r4
   17e98:	bl	13178 <__assert_fail@plt+0x1628>
   17e9c:	mov	r0, r6
   17ea0:	bl	18bd0 <lchmod@@Base+0x2904>
   17ea4:	str	r0, [r9]
   17ea8:	mov	r4, r0
   17eac:	add	r3, sp, #8
   17eb0:	ldr	r0, [r7]
   17eb4:	ldr	r1, [r7, #40]	; 0x28
   17eb8:	ldr	r2, [r7, #44]	; 0x2c
   17ebc:	stm	sp, {r0, r8}
   17ec0:	ldr	r0, [sp, #20]
   17ec4:	stm	r3, {r0, r1, r2}
   17ec8:	ldr	r2, [sp, #32]
   17ecc:	ldr	r3, [sp, #36]	; 0x24
   17ed0:	mov	r0, r4
   17ed4:	mov	r1, r6
   17ed8:	bl	16b5c <lchmod@@Base+0x890>
   17edc:	ldr	r0, [sp, #28]
   17ee0:	ldr	r1, [sp, #24]
   17ee4:	str	r1, [r0]
   17ee8:	mov	r0, r4
   17eec:	sub	sp, fp, #28
   17ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ef4:	bl	11af0 <abort@plt>
   17ef8:	movw	r3, #45560	; 0xb1f8
   17efc:	movt	r3, #2
   17f00:	b	17d60 <lchmod@@Base+0x1a94>
   17f04:	movw	r3, #45560	; 0xb1f8
   17f08:	mov	r1, r0
   17f0c:	mov	r0, #0
   17f10:	mvn	r2, #0
   17f14:	movt	r3, #2
   17f18:	b	17d60 <lchmod@@Base+0x1a94>
   17f1c:	movw	r3, #45560	; 0xb1f8
   17f20:	mov	r2, r1
   17f24:	mov	r1, r0
   17f28:	mov	r0, #0
   17f2c:	movt	r3, #2
   17f30:	b	17d60 <lchmod@@Base+0x1a94>
   17f34:	push	{fp, lr}
   17f38:	mov	fp, sp
   17f3c:	sub	sp, sp, #48	; 0x30
   17f40:	vmov.i32	q8, #0	; 0x00000000
   17f44:	mov	ip, #32
   17f48:	mov	r3, sp
   17f4c:	mov	lr, r2
   17f50:	cmp	r1, #10
   17f54:	add	r2, r3, #16
   17f58:	vst1.64	{d16-d17}, [r3], ip
   17f5c:	vst1.64	{d16-d17}, [r2]
   17f60:	vst1.64	{d16-d17}, [r3]
   17f64:	beq	17f84 <lchmod@@Base+0x1cb8>
   17f68:	str	r1, [sp]
   17f6c:	mov	r3, sp
   17f70:	mov	r1, lr
   17f74:	mvn	r2, #0
   17f78:	bl	17d60 <lchmod@@Base+0x1a94>
   17f7c:	mov	sp, fp
   17f80:	pop	{fp, pc}
   17f84:	bl	11af0 <abort@plt>
   17f88:	push	{r4, sl, fp, lr}
   17f8c:	add	fp, sp, #8
   17f90:	sub	sp, sp, #48	; 0x30
   17f94:	vmov.i32	q8, #0	; 0x00000000
   17f98:	mov	ip, r3
   17f9c:	mov	r3, sp
   17fa0:	mov	lr, #32
   17fa4:	cmp	r1, #10
   17fa8:	add	r4, r3, #16
   17fac:	vst1.64	{d16-d17}, [r3], lr
   17fb0:	vst1.64	{d16-d17}, [r4]
   17fb4:	vst1.64	{d16-d17}, [r3]
   17fb8:	beq	17fd8 <lchmod@@Base+0x1d0c>
   17fbc:	str	r1, [sp]
   17fc0:	mov	r1, r2
   17fc4:	mov	r3, sp
   17fc8:	mov	r2, ip
   17fcc:	bl	17d60 <lchmod@@Base+0x1a94>
   17fd0:	sub	sp, fp, #8
   17fd4:	pop	{r4, sl, fp, pc}
   17fd8:	bl	11af0 <abort@plt>
   17fdc:	mov	r2, r1
   17fe0:	mov	r1, r0
   17fe4:	mov	r0, #0
   17fe8:	b	17f34 <lchmod@@Base+0x1c68>
   17fec:	mov	r3, r2
   17ff0:	mov	r2, r1
   17ff4:	mov	r1, r0
   17ff8:	mov	r0, #0
   17ffc:	b	17f88 <lchmod@@Base+0x1cbc>
   18000:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18004:	add	fp, sp, #24
   18008:	sub	sp, sp, #48	; 0x30
   1800c:	movw	r8, #45560	; 0xb1f8
   18010:	mov	lr, r0
   18014:	mov	r3, sp
   18018:	mov	ip, r1
   1801c:	movt	r8, #2
   18020:	mov	r1, r3
   18024:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   18028:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   1802c:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   18030:	stm	r1, {r0, r4, r5, r6, r7, r9}
   18034:	ubfx	r0, r2, #5, #3
   18038:	and	r2, r2, #31
   1803c:	mov	r4, #1
   18040:	add	r0, r3, r0, lsl #2
   18044:	ldr	r1, [r0, #8]
   18048:	bic	r4, r4, r1, lsr r2
   1804c:	eor	r1, r1, r4, lsl r2
   18050:	mov	r2, ip
   18054:	str	r1, [r0, #8]
   18058:	mov	r0, #0
   1805c:	mov	r1, lr
   18060:	bl	17d60 <lchmod@@Base+0x1a94>
   18064:	sub	sp, fp, #24
   18068:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1806c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18070:	add	fp, sp, #24
   18074:	sub	sp, sp, #48	; 0x30
   18078:	movw	lr, #45560	; 0xb1f8
   1807c:	mov	ip, r0
   18080:	mov	r3, sp
   18084:	movt	lr, #2
   18088:	mov	r2, r3
   1808c:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   18090:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   18094:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   18098:	stm	r2, {r0, r4, r5, r6, r7, r8}
   1809c:	ubfx	r0, r1, #5, #3
   180a0:	and	r1, r1, #31
   180a4:	mov	r7, #1
   180a8:	add	r0, r3, r0, lsl #2
   180ac:	ldr	r2, [r0, #8]
   180b0:	bic	r7, r7, r2, lsr r1
   180b4:	eor	r1, r2, r7, lsl r1
   180b8:	mvn	r2, #0
   180bc:	str	r1, [r0, #8]
   180c0:	mov	r0, #0
   180c4:	mov	r1, ip
   180c8:	bl	17d60 <lchmod@@Base+0x1a94>
   180cc:	sub	sp, fp, #24
   180d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   180d4:	push	{r4, r5, r6, r7, fp, lr}
   180d8:	add	fp, sp, #16
   180dc:	sub	sp, sp, #48	; 0x30
   180e0:	movw	lr, #45560	; 0xb1f8
   180e4:	mov	ip, r0
   180e8:	mov	r3, sp
   180ec:	movt	lr, #2
   180f0:	mov	r2, r3
   180f4:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   180f8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   180fc:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   18100:	stm	r2, {r0, r1, r4, r5, r6, r7}
   18104:	mov	r1, ip
   18108:	mvn	r2, #0
   1810c:	ldr	r0, [sp, #12]
   18110:	orr	r0, r0, #67108864	; 0x4000000
   18114:	str	r0, [sp, #12]
   18118:	mov	r0, #0
   1811c:	bl	17d60 <lchmod@@Base+0x1a94>
   18120:	sub	sp, fp, #16
   18124:	pop	{r4, r5, r6, r7, fp, pc}
   18128:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1812c:	add	fp, sp, #24
   18130:	sub	sp, sp, #48	; 0x30
   18134:	movw	r8, #45560	; 0xb1f8
   18138:	mov	ip, r1
   1813c:	mov	lr, r0
   18140:	mov	r3, sp
   18144:	movt	r8, #2
   18148:	mov	r2, r3
   1814c:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   18150:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   18154:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   18158:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1815c:	mov	r1, lr
   18160:	mov	r2, ip
   18164:	ldr	r0, [sp, #12]
   18168:	orr	r0, r0, #67108864	; 0x4000000
   1816c:	str	r0, [sp, #12]
   18170:	mov	r0, #0
   18174:	bl	17d60 <lchmod@@Base+0x1a94>
   18178:	sub	sp, fp, #24
   1817c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18180:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18184:	add	fp, sp, #24
   18188:	sub	sp, sp, #96	; 0x60
   1818c:	vmov.i32	q8, #0	; 0x00000000
   18190:	mov	lr, sp
   18194:	mov	ip, r2
   18198:	cmp	r1, #10
   1819c:	add	r3, lr, #16
   181a0:	mov	r2, lr
   181a4:	vst1.64	{d16-d17}, [r3]
   181a8:	mov	r3, #28
   181ac:	vst1.64	{d16-d17}, [r2], r3
   181b0:	vst1.32	{d16-d17}, [r2]
   181b4:	beq	181f4 <lchmod@@Base+0x1f28>
   181b8:	str	r1, [sp, #48]	; 0x30
   181bc:	add	r3, sp, #48	; 0x30
   181c0:	ldm	lr!, {r2, r4, r5, r6, r7}
   181c4:	add	r1, r3, #4
   181c8:	stmia	r1!, {r2, r4, r5, r6, r7}
   181cc:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   181d0:	stm	r1, {r2, r4, r5, r6, r7, r8}
   181d4:	mvn	r2, #0
   181d8:	ldr	r1, [sp, #60]	; 0x3c
   181dc:	orr	r1, r1, #67108864	; 0x4000000
   181e0:	str	r1, [sp, #60]	; 0x3c
   181e4:	mov	r1, ip
   181e8:	bl	17d60 <lchmod@@Base+0x1a94>
   181ec:	sub	sp, fp, #24
   181f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   181f4:	bl	11af0 <abort@plt>
   181f8:	push	{fp, lr}
   181fc:	mov	fp, sp
   18200:	sub	sp, sp, #8
   18204:	mvn	ip, #0
   18208:	str	ip, [sp]
   1820c:	bl	18218 <lchmod@@Base+0x1f4c>
   18210:	mov	sp, fp
   18214:	pop	{fp, pc}
   18218:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1821c:	add	fp, sp, #24
   18220:	sub	sp, sp, #48	; 0x30
   18224:	movw	ip, #45560	; 0xb1f8
   18228:	mov	lr, r3
   1822c:	mov	r3, sp
   18230:	cmp	r1, #0
   18234:	movt	ip, #2
   18238:	cmpne	r2, #0
   1823c:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   18240:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   18244:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   18248:	stm	r3, {r4, r5, r6, r7, r8, r9}
   1824c:	mov	r3, #10
   18250:	str	r3, [sp]
   18254:	bne	1825c <lchmod@@Base+0x1f90>
   18258:	bl	11af0 <abort@plt>
   1825c:	ldr	ip, [fp, #8]
   18260:	str	r2, [sp, #44]	; 0x2c
   18264:	str	r1, [sp, #40]	; 0x28
   18268:	mov	r3, sp
   1826c:	mov	r1, lr
   18270:	mov	r2, ip
   18274:	bl	17d60 <lchmod@@Base+0x1a94>
   18278:	sub	sp, fp, #24
   1827c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18280:	push	{fp, lr}
   18284:	mov	fp, sp
   18288:	sub	sp, sp, #8
   1828c:	mov	r3, r2
   18290:	mov	r2, r1
   18294:	mov	r1, r0
   18298:	mvn	r0, #0
   1829c:	str	r0, [sp]
   182a0:	mov	r0, #0
   182a4:	bl	18218 <lchmod@@Base+0x1f4c>
   182a8:	mov	sp, fp
   182ac:	pop	{fp, pc}
   182b0:	push	{fp, lr}
   182b4:	mov	fp, sp
   182b8:	sub	sp, sp, #8
   182bc:	mov	ip, r2
   182c0:	mov	r2, r1
   182c4:	mov	r1, r0
   182c8:	str	r3, [sp]
   182cc:	mov	r0, #0
   182d0:	mov	r3, ip
   182d4:	bl	18218 <lchmod@@Base+0x1f4c>
   182d8:	mov	sp, fp
   182dc:	pop	{fp, pc}
   182e0:	movw	r3, #45464	; 0xb198
   182e4:	movt	r3, #2
   182e8:	b	17d60 <lchmod@@Base+0x1a94>
   182ec:	movw	r3, #45464	; 0xb198
   182f0:	mov	r2, r1
   182f4:	mov	r1, r0
   182f8:	mov	r0, #0
   182fc:	movt	r3, #2
   18300:	b	17d60 <lchmod@@Base+0x1a94>
   18304:	movw	r3, #45464	; 0xb198
   18308:	mvn	r2, #0
   1830c:	movt	r3, #2
   18310:	b	17d60 <lchmod@@Base+0x1a94>
   18314:	movw	r3, #45464	; 0xb198
   18318:	mov	r1, r0
   1831c:	mov	r0, #0
   18320:	mvn	r2, #0
   18324:	movt	r3, #2
   18328:	b	17d60 <lchmod@@Base+0x1a94>
   1832c:	push	{r4, r5, fp, lr}
   18330:	add	fp, sp, #8
   18334:	mov	r5, r0
   18338:	mov	r4, r1
   1833c:	mov	r0, #0
   18340:	mov	r2, #5
   18344:	mov	r1, r5
   18348:	bl	117fc <dcgettext@plt>
   1834c:	cmp	r0, r5
   18350:	popne	{r4, r5, fp, pc}
   18354:	bl	19738 <lchmod@@Base+0x346c>
   18358:	ldrb	r1, [r0]
   1835c:	and	r1, r1, #223	; 0xdf
   18360:	cmp	r1, #71	; 0x47
   18364:	beq	183cc <lchmod@@Base+0x2100>
   18368:	cmp	r1, #85	; 0x55
   1836c:	bne	18424 <lchmod@@Base+0x2158>
   18370:	ldrb	r1, [r0, #1]
   18374:	and	r1, r1, #223	; 0xdf
   18378:	cmp	r1, #84	; 0x54
   1837c:	bne	18424 <lchmod@@Base+0x2158>
   18380:	ldrb	r1, [r0, #2]
   18384:	and	r1, r1, #223	; 0xdf
   18388:	cmp	r1, #70	; 0x46
   1838c:	bne	18424 <lchmod@@Base+0x2158>
   18390:	ldrb	r1, [r0, #3]
   18394:	cmp	r1, #45	; 0x2d
   18398:	bne	18424 <lchmod@@Base+0x2158>
   1839c:	ldrb	r1, [r0, #4]
   183a0:	cmp	r1, #56	; 0x38
   183a4:	bne	18424 <lchmod@@Base+0x2158>
   183a8:	ldrb	r0, [r0, #5]
   183ac:	cmp	r0, #0
   183b0:	bne	18424 <lchmod@@Base+0x2158>
   183b4:	ldrb	r1, [r5]
   183b8:	movw	r2, #41563	; 0xa25b
   183bc:	movw	r0, #41567	; 0xa25f
   183c0:	movt	r2, #1
   183c4:	movt	r0, #1
   183c8:	b	18454 <lchmod@@Base+0x2188>
   183cc:	ldrb	r1, [r0, #1]
   183d0:	and	r1, r1, #223	; 0xdf
   183d4:	cmp	r1, #66	; 0x42
   183d8:	bne	18424 <lchmod@@Base+0x2158>
   183dc:	ldrb	r1, [r0, #2]
   183e0:	cmp	r1, #49	; 0x31
   183e4:	bne	18424 <lchmod@@Base+0x2158>
   183e8:	ldrb	r1, [r0, #3]
   183ec:	cmp	r1, #56	; 0x38
   183f0:	bne	18424 <lchmod@@Base+0x2158>
   183f4:	ldrb	r1, [r0, #4]
   183f8:	cmp	r1, #48	; 0x30
   183fc:	bne	18424 <lchmod@@Base+0x2158>
   18400:	ldrb	r1, [r0, #5]
   18404:	cmp	r1, #51	; 0x33
   18408:	bne	18424 <lchmod@@Base+0x2158>
   1840c:	ldrb	r1, [r0, #6]
   18410:	cmp	r1, #48	; 0x30
   18414:	bne	18424 <lchmod@@Base+0x2158>
   18418:	ldrb	r0, [r0, #7]
   1841c:	cmp	r0, #0
   18420:	beq	18440 <lchmod@@Base+0x2174>
   18424:	movw	r1, #41557	; 0xa255
   18428:	movw	r0, #41561	; 0xa259
   1842c:	cmp	r4, #9
   18430:	movt	r1, #1
   18434:	movt	r0, #1
   18438:	moveq	r0, r1
   1843c:	pop	{r4, r5, fp, pc}
   18440:	ldrb	r1, [r5]
   18444:	movw	r2, #41571	; 0xa263
   18448:	movw	r0, #41575	; 0xa267
   1844c:	movt	r2, #1
   18450:	movt	r0, #1
   18454:	cmp	r1, #96	; 0x60
   18458:	moveq	r0, r2
   1845c:	pop	{r4, r5, fp, pc}
   18460:	push	{r4, r5, r6, sl, fp, lr}
   18464:	add	fp, sp, #16
   18468:	ldr	r4, [r0], #8
   1846c:	mov	r5, r1
   18470:	cmp	r4, r0
   18474:	beq	18494 <lchmod@@Base+0x21c8>
   18478:	mov	r0, r4
   1847c:	mov	r1, r5
   18480:	bl	19110 <lchmod@@Base+0x2e44>
   18484:	cmp	r0, #0
   18488:	mov	r6, r0
   1848c:	moveq	r6, r4
   18490:	b	184bc <lchmod@@Base+0x21f0>
   18494:	mov	r0, r5
   18498:	bl	190e0 <lchmod@@Base+0x2e14>
   1849c:	cmp	r0, #0
   184a0:	beq	184b8 <lchmod@@Base+0x21ec>
   184a4:	mov	r1, r4
   184a8:	mov	r2, r5
   184ac:	mov	r6, r0
   184b0:	bl	117d8 <memcpy@plt>
   184b4:	b	184bc <lchmod@@Base+0x21f0>
   184b8:	mov	r6, #0
   184bc:	mov	r0, r6
   184c0:	pop	{r4, r5, r6, sl, fp, pc}
   184c4:	push	{r4, r5, r6, sl, fp, lr}
   184c8:	add	fp, sp, #16
   184cc:	mov	r4, r0
   184d0:	add	r6, r0, #8
   184d4:	ldrd	r0, [r0]
   184d8:	lsl	r5, r1, #1
   184dc:	cmp	r0, r6
   184e0:	beq	184ec <lchmod@@Base+0x2220>
   184e4:	bl	13178 <__assert_fail@plt+0x1628>
   184e8:	ldr	r1, [r4, #4]
   184ec:	cmp	r5, r1
   184f0:	bcc	18514 <lchmod@@Base+0x2248>
   184f4:	mov	r0, r5
   184f8:	bl	190e0 <lchmod@@Base+0x2e14>
   184fc:	cmp	r0, #0
   18500:	beq	18520 <lchmod@@Base+0x2254>
   18504:	str	r0, [r4]
   18508:	mov	r0, #1
   1850c:	str	r5, [r4, #4]
   18510:	pop	{r4, r5, r6, sl, fp, pc}
   18514:	bl	11994 <__errno_location@plt>
   18518:	mov	r1, #12
   1851c:	str	r1, [r0]
   18520:	str	r6, [r4]
   18524:	mov	r0, #0
   18528:	mov	r5, #1024	; 0x400
   1852c:	b	1850c <lchmod@@Base+0x2240>
   18530:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18534:	add	fp, sp, #24
   18538:	ldrd	r8, [r0]
   1853c:	add	r7, r0, #8
   18540:	mov	r4, r0
   18544:	lsl	r5, r9, #1
   18548:	cmp	r8, r7
   1854c:	beq	18578 <lchmod@@Base+0x22ac>
   18550:	cmp	r5, r9
   18554:	bcc	185b0 <lchmod@@Base+0x22e4>
   18558:	mov	r0, r8
   1855c:	mov	r1, r5
   18560:	bl	19110 <lchmod@@Base+0x2e44>
   18564:	mov	r6, r0
   18568:	cmp	r0, #0
   1856c:	bne	18598 <lchmod@@Base+0x22cc>
   18570:	ldr	r8, [r4]
   18574:	b	185bc <lchmod@@Base+0x22f0>
   18578:	mov	r0, r5
   1857c:	bl	190e0 <lchmod@@Base+0x2e14>
   18580:	cmp	r0, #0
   18584:	beq	185a8 <lchmod@@Base+0x22dc>
   18588:	ldr	r2, [r4, #4]
   1858c:	mov	r1, r8
   18590:	mov	r6, r0
   18594:	bl	117d8 <memcpy@plt>
   18598:	mov	r0, #1
   1859c:	str	r6, [r4]
   185a0:	str	r5, [r4, #4]
   185a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   185a8:	mov	r0, #0
   185ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   185b0:	bl	11994 <__errno_location@plt>
   185b4:	mov	r1, #12
   185b8:	str	r1, [r0]
   185bc:	mov	r0, r8
   185c0:	bl	13178 <__assert_fail@plt+0x1628>
   185c4:	str	r7, [r4]
   185c8:	mov	r0, #0
   185cc:	mov	r5, #1024	; 0x400
   185d0:	b	185a0 <lchmod@@Base+0x22d4>
   185d4:	push	{r4, sl, fp, lr}
   185d8:	add	fp, sp, #8
   185dc:	mov	r4, r1
   185e0:	bl	1194c <getfilecon@plt>
   185e4:	mov	r1, r4
   185e8:	pop	{r4, sl, fp, lr}
   185ec:	b	185f0 <lchmod@@Base+0x2324>
   185f0:	push	{r4, r5, fp, lr}
   185f4:	add	fp, sp, #8
   185f8:	cmp	r0, #10
   185fc:	beq	18614 <lchmod@@Base+0x2348>
   18600:	cmp	r0, #0
   18604:	bne	1865c <lchmod@@Base+0x2390>
   18608:	bl	11994 <__errno_location@plt>
   1860c:	mov	r1, #95	; 0x5f
   18610:	b	18654 <lchmod@@Base+0x2388>
   18614:	ldr	r5, [r1]
   18618:	mov	r4, r1
   1861c:	movw	r1, #41664	; 0xa2c0
   18620:	movt	r1, #1
   18624:	mov	r0, r5
   18628:	bl	11778 <strcmp@plt>
   1862c:	mov	r1, r0
   18630:	mov	r0, #10
   18634:	cmp	r1, #0
   18638:	popne	{r4, r5, fp, pc}
   1863c:	mov	r0, r5
   18640:	bl	11a84 <freecon@plt>
   18644:	mov	r0, #0
   18648:	str	r0, [r4]
   1864c:	bl	11994 <__errno_location@plt>
   18650:	mov	r1, #61	; 0x3d
   18654:	str	r1, [r0]
   18658:	mvn	r0, #0
   1865c:	pop	{r4, r5, fp, pc}
   18660:	push	{r4, sl, fp, lr}
   18664:	add	fp, sp, #8
   18668:	mov	r4, r1
   1866c:	bl	118d4 <lgetfilecon@plt>
   18670:	mov	r1, r4
   18674:	pop	{r4, sl, fp, lr}
   18678:	b	185f0 <lchmod@@Base+0x2324>
   1867c:	push	{r4, sl, fp, lr}
   18680:	add	fp, sp, #8
   18684:	mov	r4, r1
   18688:	bl	11820 <fgetfilecon@plt>
   1868c:	mov	r1, r4
   18690:	pop	{r4, sl, fp, lr}
   18694:	b	185f0 <lchmod@@Base+0x2324>
   18698:	push	{r4, r5, r6, r7, fp, lr}
   1869c:	add	fp, sp, #16
   186a0:	mov	r4, r0
   186a4:	cmp	r0, #2
   186a8:	bhi	186d8 <lchmod@@Base+0x240c>
   186ac:	mov	r0, r4
   186b0:	bl	19810 <lchmod@@Base+0x3544>
   186b4:	mov	r5, r0
   186b8:	bl	11994 <__errno_location@plt>
   186bc:	ldr	r7, [r0]
   186c0:	mov	r6, r0
   186c4:	mov	r0, r4
   186c8:	bl	11afc <close@plt>
   186cc:	mov	r0, r5
   186d0:	str	r7, [r6]
   186d4:	pop	{r4, r5, r6, r7, fp, pc}
   186d8:	mov	r0, r4
   186dc:	pop	{r4, r5, r6, r7, fp, pc}
   186e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   186e4:	add	fp, sp, #24
   186e8:	sub	sp, sp, #32
   186ec:	ldr	r6, [fp, #12]
   186f0:	ldr	r7, [fp, #8]
   186f4:	mov	r4, r2
   186f8:	mov	r8, r0
   186fc:	cmp	r1, #0
   18700:	beq	18728 <lchmod@@Base+0x245c>
   18704:	movw	r2, #41674	; 0xa2ca
   18708:	mov	r5, r1
   1870c:	str	r3, [sp, #4]
   18710:	str	r4, [sp]
   18714:	mov	r0, r8
   18718:	mov	r1, #1
   1871c:	movt	r2, #1
   18720:	mov	r3, r5
   18724:	b	18740 <lchmod@@Base+0x2474>
   18728:	movw	r2, #41686	; 0xa2d6
   1872c:	str	r3, [sp]
   18730:	mov	r0, r8
   18734:	mov	r1, #1
   18738:	mov	r3, r4
   1873c:	movt	r2, #1
   18740:	bl	119dc <__fprintf_chk@plt>
   18744:	movw	r1, #41693	; 0xa2dd
   18748:	mov	r0, #0
   1874c:	mov	r2, #5
   18750:	movt	r1, #1
   18754:	bl	117fc <dcgettext@plt>
   18758:	movw	r2, #42411	; 0xa5ab
   1875c:	mov	r3, r0
   18760:	movw	r0, #2022	; 0x7e6
   18764:	mov	r1, #1
   18768:	movt	r2, #1
   1876c:	str	r0, [sp]
   18770:	mov	r0, r8
   18774:	bl	119dc <__fprintf_chk@plt>
   18778:	movw	r4, #41019	; 0xa03b
   1877c:	mov	r1, r8
   18780:	movt	r4, #1
   18784:	mov	r0, r4
   18788:	bl	11754 <fputs_unlocked@plt>
   1878c:	movw	r1, #41697	; 0xa2e1
   18790:	mov	r0, #0
   18794:	mov	r2, #5
   18798:	movt	r1, #1
   1879c:	bl	117fc <dcgettext@plt>
   187a0:	movw	r3, #41868	; 0xa38c
   187a4:	mov	r2, r0
   187a8:	mov	r0, r8
   187ac:	mov	r1, #1
   187b0:	movt	r3, #1
   187b4:	bl	119dc <__fprintf_chk@plt>
   187b8:	mov	r0, r4
   187bc:	mov	r1, r8
   187c0:	bl	11754 <fputs_unlocked@plt>
   187c4:	cmp	r6, #9
   187c8:	bhi	1882c <lchmod@@Base+0x2560>
   187cc:	add	r0, pc, #0
   187d0:	ldr	pc, [r0, r6, lsl #2]
   187d4:	andeq	r8, r1, r4, lsl #20
   187d8:	strdeq	r8, [r1], -ip
   187dc:	andeq	r8, r1, r8, lsr r8
   187e0:	andeq	r8, r1, r0, ror #16
   187e4:	andeq	r8, r1, r8, lsl #17
   187e8:			; <UNDEFINED> instruction: 0x000188b0
   187ec:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   187f0:	andeq	r8, r1, r0, lsl r9
   187f4:			; <UNDEFINED> instruction: 0x000189b0
   187f8:	andeq	r8, r1, r8, asr r9
   187fc:	movw	r1, #41902	; 0xa3ae
   18800:	mov	r0, #0
   18804:	mov	r2, #5
   18808:	movt	r1, #1
   1880c:	bl	117fc <dcgettext@plt>
   18810:	ldr	r3, [r7]
   18814:	mov	r2, r0
   18818:	mov	r0, r8
   1881c:	mov	r1, #1
   18820:	sub	sp, fp, #24
   18824:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18828:	b	119dc <__fprintf_chk@plt>
   1882c:	movw	r1, #42221	; 0xa4ed
   18830:	movt	r1, #1
   18834:	b	18960 <lchmod@@Base+0x2694>
   18838:	movw	r1, #41918	; 0xa3be
   1883c:	mov	r0, #0
   18840:	mov	r2, #5
   18844:	movt	r1, #1
   18848:	bl	117fc <dcgettext@plt>
   1884c:	mov	r2, r0
   18850:	ldr	r3, [r7]
   18854:	ldr	r0, [r7, #4]
   18858:	str	r0, [sp]
   1885c:	b	1894c <lchmod@@Base+0x2680>
   18860:	movw	r1, #41941	; 0xa3d5
   18864:	mov	r0, #0
   18868:	mov	r2, #5
   1886c:	movt	r1, #1
   18870:	bl	117fc <dcgettext@plt>
   18874:	mov	r2, r0
   18878:	ldr	r3, [r7]
   1887c:	ldmib	r7, {r0, r1}
   18880:	stm	sp, {r0, r1}
   18884:	b	1894c <lchmod@@Base+0x2680>
   18888:	movw	r1, #41969	; 0xa3f1
   1888c:	mov	r0, #0
   18890:	mov	r2, #5
   18894:	movt	r1, #1
   18898:	bl	117fc <dcgettext@plt>
   1889c:	ldr	r3, [r7]
   188a0:	mov	r2, r0
   188a4:	ldmib	r7, {r0, r1, r7}
   188a8:	stm	sp, {r0, r1, r7}
   188ac:	b	1894c <lchmod@@Base+0x2680>
   188b0:	movw	r1, #42001	; 0xa411
   188b4:	mov	r0, #0
   188b8:	mov	r2, #5
   188bc:	movt	r1, #1
   188c0:	bl	117fc <dcgettext@plt>
   188c4:	ldr	r3, [r7]
   188c8:	mov	r2, r0
   188cc:	ldmib	r7, {r0, r1, r6, r7}
   188d0:	stm	sp, {r0, r1, r6, r7}
   188d4:	b	1894c <lchmod@@Base+0x2680>
   188d8:	movw	r1, #42037	; 0xa435
   188dc:	mov	r0, #0
   188e0:	mov	r2, #5
   188e4:	movt	r1, #1
   188e8:	bl	117fc <dcgettext@plt>
   188ec:	mov	r2, r0
   188f0:	ldr	r3, [r7]
   188f4:	ldmib	r7, {r0, r1, r6}
   188f8:	ldr	r5, [r7, #16]
   188fc:	ldr	r7, [r7, #20]
   18900:	stm	sp, {r0, r1, r6}
   18904:	str	r5, [sp, #12]
   18908:	str	r7, [sp, #16]
   1890c:	b	1894c <lchmod@@Base+0x2680>
   18910:	movw	r1, #42077	; 0xa45d
   18914:	mov	r0, #0
   18918:	mov	r2, #5
   1891c:	movt	r1, #1
   18920:	bl	117fc <dcgettext@plt>
   18924:	mov	r2, r0
   18928:	ldr	r3, [r7]
   1892c:	ldmib	r7, {r0, r1, r6}
   18930:	ldr	r5, [r7, #16]
   18934:	ldr	r4, [r7, #20]
   18938:	ldr	r7, [r7, #24]
   1893c:	stm	sp, {r0, r1, r6}
   18940:	str	r5, [sp, #12]
   18944:	str	r4, [sp, #16]
   18948:	str	r7, [sp, #20]
   1894c:	mov	r0, r8
   18950:	mov	r1, #1
   18954:	b	18a00 <lchmod@@Base+0x2734>
   18958:	movw	r1, #42169	; 0xa4b9
   1895c:	movt	r1, #1
   18960:	mov	r0, #0
   18964:	mov	r2, #5
   18968:	bl	117fc <dcgettext@plt>
   1896c:	mov	ip, r0
   18970:	ldr	r3, [r7]
   18974:	ldr	r0, [r7, #4]
   18978:	ldr	r1, [r7, #8]
   1897c:	ldr	r6, [r7, #12]
   18980:	ldr	r5, [r7, #16]
   18984:	ldr	r4, [r7, #20]
   18988:	ldr	r2, [r7, #24]
   1898c:	ldr	lr, [r7, #28]
   18990:	ldr	r7, [r7, #32]
   18994:	stm	sp, {r0, r1, r6}
   18998:	str	r5, [sp, #12]
   1899c:	str	r4, [sp, #16]
   189a0:	str	r2, [sp, #20]
   189a4:	str	lr, [sp, #24]
   189a8:	str	r7, [sp, #28]
   189ac:	b	189f4 <lchmod@@Base+0x2728>
   189b0:	movw	r1, #42121	; 0xa489
   189b4:	mov	r0, #0
   189b8:	mov	r2, #5
   189bc:	movt	r1, #1
   189c0:	bl	117fc <dcgettext@plt>
   189c4:	mov	ip, r0
   189c8:	ldr	r3, [r7]
   189cc:	ldmib	r7, {r0, r1, r6}
   189d0:	ldr	r5, [r7, #16]
   189d4:	ldr	r4, [r7, #20]
   189d8:	ldr	r2, [r7, #24]
   189dc:	ldr	r7, [r7, #28]
   189e0:	stm	sp, {r0, r1, r6}
   189e4:	str	r5, [sp, #12]
   189e8:	str	r4, [sp, #16]
   189ec:	str	r2, [sp, #20]
   189f0:	str	r7, [sp, #24]
   189f4:	mov	r0, r8
   189f8:	mov	r1, #1
   189fc:	mov	r2, ip
   18a00:	bl	119dc <__fprintf_chk@plt>
   18a04:	sub	sp, fp, #24
   18a08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18a0c:	push	{r4, sl, fp, lr}
   18a10:	add	fp, sp, #8
   18a14:	sub	sp, sp, #8
   18a18:	ldr	ip, [fp, #8]
   18a1c:	mov	lr, #0
   18a20:	ldr	r4, [ip, lr, lsl #2]
   18a24:	add	lr, lr, #1
   18a28:	cmp	r4, #0
   18a2c:	bne	18a20 <lchmod@@Base+0x2754>
   18a30:	sub	r4, lr, #1
   18a34:	str	ip, [sp]
   18a38:	str	r4, [sp, #4]
   18a3c:	bl	186e0 <lchmod@@Base+0x2414>
   18a40:	sub	sp, fp, #8
   18a44:	pop	{r4, sl, fp, pc}
   18a48:	push	{r4, r5, fp, lr}
   18a4c:	add	fp, sp, #8
   18a50:	sub	sp, sp, #48	; 0x30
   18a54:	ldr	r4, [fp, #8]
   18a58:	mov	ip, #0
   18a5c:	add	lr, sp, #8
   18a60:	ldr	r5, [r4]
   18a64:	cmp	r5, #0
   18a68:	str	r5, [lr, ip, lsl #2]
   18a6c:	beq	18a84 <lchmod@@Base+0x27b8>
   18a70:	add	ip, ip, #1
   18a74:	add	r4, r4, #4
   18a78:	cmp	ip, #10
   18a7c:	bne	18a60 <lchmod@@Base+0x2794>
   18a80:	mov	ip, #10
   18a84:	str	lr, [sp]
   18a88:	str	ip, [sp, #4]
   18a8c:	bl	186e0 <lchmod@@Base+0x2414>
   18a90:	sub	sp, fp, #8
   18a94:	pop	{r4, r5, fp, pc}
   18a98:	push	{fp, lr}
   18a9c:	mov	fp, sp
   18aa0:	sub	sp, sp, #8
   18aa4:	add	ip, fp, #8
   18aa8:	str	ip, [sp, #4]
   18aac:	str	ip, [sp]
   18ab0:	bl	18a48 <lchmod@@Base+0x277c>
   18ab4:	mov	sp, fp
   18ab8:	pop	{fp, pc}
   18abc:	push	{fp, lr}
   18ac0:	mov	fp, sp
   18ac4:	movw	r0, #45532	; 0xb1dc
   18ac8:	movt	r0, #2
   18acc:	ldr	r1, [r0]
   18ad0:	movw	r0, #41019	; 0xa03b
   18ad4:	movt	r0, #1
   18ad8:	bl	11754 <fputs_unlocked@plt>
   18adc:	movw	r1, #42281	; 0xa529
   18ae0:	mov	r0, #0
   18ae4:	mov	r2, #5
   18ae8:	movt	r1, #1
   18aec:	bl	117fc <dcgettext@plt>
   18af0:	movw	r2, #42301	; 0xa53d
   18af4:	mov	r1, r0
   18af8:	mov	r0, #1
   18afc:	movt	r2, #1
   18b00:	bl	119c4 <__printf_chk@plt>
   18b04:	movw	r1, #42323	; 0xa553
   18b08:	mov	r0, #0
   18b0c:	mov	r2, #5
   18b10:	movt	r1, #1
   18b14:	bl	117fc <dcgettext@plt>
   18b18:	movw	r2, #40431	; 0x9def
   18b1c:	movw	r3, #40828	; 0x9f7c
   18b20:	mov	r1, r0
   18b24:	mov	r0, #1
   18b28:	movt	r2, #1
   18b2c:	movt	r3, #1
   18b30:	bl	119c4 <__printf_chk@plt>
   18b34:	movw	r1, #42343	; 0xa567
   18b38:	mov	r0, #0
   18b3c:	mov	r2, #5
   18b40:	movt	r1, #1
   18b44:	bl	117fc <dcgettext@plt>
   18b48:	movw	r2, #42382	; 0xa58e
   18b4c:	mov	r1, r0
   18b50:	mov	r0, #1
   18b54:	movt	r2, #1
   18b58:	pop	{fp, lr}
   18b5c:	b	119c4 <__printf_chk@plt>
   18b60:	b	18b64 <lchmod@@Base+0x2898>
   18b64:	push	{r4, r5, r6, sl, fp, lr}
   18b68:	add	fp, sp, #16
   18b6c:	mov	r4, r2
   18b70:	mov	r5, r1
   18b74:	mov	r6, r0
   18b78:	bl	197d4 <lchmod@@Base+0x3508>
   18b7c:	cmp	r0, #0
   18b80:	popne	{r4, r5, r6, sl, fp, pc}
   18b84:	cmp	r6, #0
   18b88:	beq	18b9c <lchmod@@Base+0x28d0>
   18b8c:	cmp	r5, #0
   18b90:	cmpne	r4, #0
   18b94:	bne	18b9c <lchmod@@Base+0x28d0>
   18b98:	pop	{r4, r5, r6, sl, fp, pc}
   18b9c:	bl	18fcc <lchmod@@Base+0x2d00>
   18ba0:	push	{fp, lr}
   18ba4:	mov	fp, sp
   18ba8:	bl	190e0 <lchmod@@Base+0x2e14>
   18bac:	cmp	r0, #0
   18bb0:	popne	{fp, pc}
   18bb4:	bl	18fcc <lchmod@@Base+0x2d00>
   18bb8:	push	{fp, lr}
   18bbc:	mov	fp, sp
   18bc0:	bl	190e0 <lchmod@@Base+0x2e14>
   18bc4:	cmp	r0, #0
   18bc8:	popne	{fp, pc}
   18bcc:	bl	18fcc <lchmod@@Base+0x2d00>
   18bd0:	push	{fp, lr}
   18bd4:	mov	fp, sp
   18bd8:	bl	190e0 <lchmod@@Base+0x2e14>
   18bdc:	cmp	r0, #0
   18be0:	popne	{fp, pc}
   18be4:	bl	18fcc <lchmod@@Base+0x2d00>
   18be8:	push	{r4, r5, fp, lr}
   18bec:	add	fp, sp, #8
   18bf0:	mov	r4, r1
   18bf4:	mov	r5, r0
   18bf8:	bl	19110 <lchmod@@Base+0x2e44>
   18bfc:	cmp	r0, #0
   18c00:	popne	{r4, r5, fp, pc}
   18c04:	cmp	r5, #0
   18c08:	beq	18c18 <lchmod@@Base+0x294c>
   18c0c:	cmp	r4, #0
   18c10:	bne	18c18 <lchmod@@Base+0x294c>
   18c14:	pop	{r4, r5, fp, pc}
   18c18:	bl	18fcc <lchmod@@Base+0x2d00>
   18c1c:	push	{fp, lr}
   18c20:	mov	fp, sp
   18c24:	cmp	r1, #0
   18c28:	orreq	r1, r1, #1
   18c2c:	bl	19110 <lchmod@@Base+0x2e44>
   18c30:	cmp	r0, #0
   18c34:	popne	{fp, pc}
   18c38:	bl	18fcc <lchmod@@Base+0x2d00>
   18c3c:	push	{fp, lr}
   18c40:	mov	fp, sp
   18c44:	clz	r3, r2
   18c48:	lsr	ip, r3, #5
   18c4c:	clz	r3, r1
   18c50:	lsr	r3, r3, #5
   18c54:	orrs	r3, r3, ip
   18c58:	movwne	r1, #1
   18c5c:	movwne	r2, #1
   18c60:	bl	197d4 <lchmod@@Base+0x3508>
   18c64:	cmp	r0, #0
   18c68:	popne	{fp, pc}
   18c6c:	bl	18fcc <lchmod@@Base+0x2d00>
   18c70:	push	{fp, lr}
   18c74:	mov	fp, sp
   18c78:	mov	r2, r1
   18c7c:	mov	r1, r0
   18c80:	mov	r0, #0
   18c84:	bl	197d4 <lchmod@@Base+0x3508>
   18c88:	cmp	r0, #0
   18c8c:	popne	{fp, pc}
   18c90:	bl	18fcc <lchmod@@Base+0x2d00>
   18c94:	mov	r2, r1
   18c98:	mov	r1, r0
   18c9c:	mov	r0, #0
   18ca0:	b	18c3c <lchmod@@Base+0x2970>
   18ca4:	mov	r2, #1
   18ca8:	b	18cac <lchmod@@Base+0x29e0>
   18cac:	push	{r4, r5, fp, lr}
   18cb0:	add	fp, sp, #8
   18cb4:	ldr	r5, [r1]
   18cb8:	mov	r4, r1
   18cbc:	cmp	r0, #0
   18cc0:	beq	18cd8 <lchmod@@Base+0x2a0c>
   18cc4:	mov	r1, #1
   18cc8:	add	r1, r1, r5, lsr #1
   18ccc:	adds	r5, r5, r1
   18cd0:	bcc	18cf0 <lchmod@@Base+0x2a24>
   18cd4:	bl	18fcc <lchmod@@Base+0x2d00>
   18cd8:	cmp	r5, #0
   18cdc:	bne	18cf0 <lchmod@@Base+0x2a24>
   18ce0:	mov	r1, #64	; 0x40
   18ce4:	cmp	r2, #64	; 0x40
   18ce8:	udiv	r5, r1, r2
   18cec:	addhi	r5, r5, #1
   18cf0:	mov	r1, r5
   18cf4:	bl	18b64 <lchmod@@Base+0x2898>
   18cf8:	str	r5, [r4]
   18cfc:	pop	{r4, r5, fp, pc}
   18d00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18d04:	add	fp, sp, #24
   18d08:	ldr	r6, [r1]
   18d0c:	mov	r8, r1
   18d10:	ldr	r4, [fp, #8]
   18d14:	add	r1, r6, r6, asr #1
   18d18:	cmp	r1, r6
   18d1c:	mvnvs	r1, #-2147483648	; 0x80000000
   18d20:	cmp	r1, r3
   18d24:	mov	r5, r1
   18d28:	movgt	r5, r3
   18d2c:	cmn	r3, #1
   18d30:	movle	r5, r1
   18d34:	cmn	r4, #1
   18d38:	ble	18d58 <lchmod@@Base+0x2a8c>
   18d3c:	cmp	r4, #0
   18d40:	beq	18dac <lchmod@@Base+0x2ae0>
   18d44:	cmn	r5, #1
   18d48:	ble	18d80 <lchmod@@Base+0x2ab4>
   18d4c:	mvn	r7, #-2147483648	; 0x80000000
   18d50:	udiv	r1, r7, r4
   18d54:	b	18d74 <lchmod@@Base+0x2aa8>
   18d58:	cmn	r5, #1
   18d5c:	ble	18d9c <lchmod@@Base+0x2ad0>
   18d60:	cmn	r4, #1
   18d64:	beq	18dac <lchmod@@Base+0x2ae0>
   18d68:	mov	r1, #-2147483648	; 0x80000000
   18d6c:	mvn	r7, #-2147483648	; 0x80000000
   18d70:	sdiv	r1, r1, r4
   18d74:	cmp	r1, r5
   18d78:	bge	18dac <lchmod@@Base+0x2ae0>
   18d7c:	b	18dbc <lchmod@@Base+0x2af0>
   18d80:	beq	18dac <lchmod@@Base+0x2ae0>
   18d84:	mov	r1, #-2147483648	; 0x80000000
   18d88:	mvn	r7, #-2147483648	; 0x80000000
   18d8c:	sdiv	r1, r1, r5
   18d90:	cmp	r1, r4
   18d94:	bge	18dac <lchmod@@Base+0x2ae0>
   18d98:	b	18dbc <lchmod@@Base+0x2af0>
   18d9c:	mvn	r7, #-2147483648	; 0x80000000
   18da0:	sdiv	r1, r7, r4
   18da4:	cmp	r5, r1
   18da8:	blt	18dbc <lchmod@@Base+0x2af0>
   18dac:	mul	r1, r5, r4
   18db0:	mov	r7, #64	; 0x40
   18db4:	cmp	r1, #63	; 0x3f
   18db8:	bgt	18dc4 <lchmod@@Base+0x2af8>
   18dbc:	sdiv	r5, r7, r4
   18dc0:	mul	r1, r5, r4
   18dc4:	cmp	r0, #0
   18dc8:	moveq	r7, #0
   18dcc:	streq	r7, [r8]
   18dd0:	sub	r7, r5, r6
   18dd4:	cmp	r7, r2
   18dd8:	bge	18e7c <lchmod@@Base+0x2bb0>
   18ddc:	add	r5, r6, r2
   18de0:	mov	r2, #0
   18de4:	mov	r1, #0
   18de8:	cmp	r5, r3
   18dec:	movwgt	r2, #1
   18df0:	cmn	r3, #1
   18df4:	movwgt	r1, #1
   18df8:	cmp	r5, r6
   18dfc:	bvs	18e64 <lchmod@@Base+0x2b98>
   18e00:	ands	r1, r1, r2
   18e04:	bne	18e64 <lchmod@@Base+0x2b98>
   18e08:	cmn	r4, #1
   18e0c:	ble	18e2c <lchmod@@Base+0x2b60>
   18e10:	cmp	r4, #0
   18e14:	beq	18e78 <lchmod@@Base+0x2bac>
   18e18:	cmn	r5, #1
   18e1c:	ble	18e50 <lchmod@@Base+0x2b84>
   18e20:	mvn	r1, #-2147483648	; 0x80000000
   18e24:	udiv	r1, r1, r4
   18e28:	b	18e44 <lchmod@@Base+0x2b78>
   18e2c:	cmn	r5, #1
   18e30:	ble	18e68 <lchmod@@Base+0x2b9c>
   18e34:	cmn	r4, #1
   18e38:	beq	18e78 <lchmod@@Base+0x2bac>
   18e3c:	mov	r1, #-2147483648	; 0x80000000
   18e40:	sdiv	r1, r1, r4
   18e44:	cmp	r1, r5
   18e48:	bge	18e78 <lchmod@@Base+0x2bac>
   18e4c:	b	18e64 <lchmod@@Base+0x2b98>
   18e50:	beq	18e78 <lchmod@@Base+0x2bac>
   18e54:	mov	r1, #-2147483648	; 0x80000000
   18e58:	sdiv	r1, r1, r5
   18e5c:	cmp	r1, r4
   18e60:	bge	18e78 <lchmod@@Base+0x2bac>
   18e64:	bl	18fcc <lchmod@@Base+0x2d00>
   18e68:	mvn	r1, #-2147483648	; 0x80000000
   18e6c:	sdiv	r1, r1, r4
   18e70:	cmp	r5, r1
   18e74:	blt	18e64 <lchmod@@Base+0x2b98>
   18e78:	mul	r1, r5, r4
   18e7c:	bl	18be8 <lchmod@@Base+0x291c>
   18e80:	str	r5, [r8]
   18e84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18e88:	push	{fp, lr}
   18e8c:	mov	fp, sp
   18e90:	mov	r1, #1
   18e94:	bl	1908c <lchmod@@Base+0x2dc0>
   18e98:	cmp	r0, #0
   18e9c:	popne	{fp, pc}
   18ea0:	bl	18fcc <lchmod@@Base+0x2d00>
   18ea4:	push	{fp, lr}
   18ea8:	mov	fp, sp
   18eac:	bl	1908c <lchmod@@Base+0x2dc0>
   18eb0:	cmp	r0, #0
   18eb4:	popne	{fp, pc}
   18eb8:	bl	18fcc <lchmod@@Base+0x2d00>
   18ebc:	push	{fp, lr}
   18ec0:	mov	fp, sp
   18ec4:	mov	r1, #1
   18ec8:	bl	1908c <lchmod@@Base+0x2dc0>
   18ecc:	cmp	r0, #0
   18ed0:	popne	{fp, pc}
   18ed4:	bl	18fcc <lchmod@@Base+0x2d00>
   18ed8:	push	{fp, lr}
   18edc:	mov	fp, sp
   18ee0:	bl	1908c <lchmod@@Base+0x2dc0>
   18ee4:	cmp	r0, #0
   18ee8:	popne	{fp, pc}
   18eec:	bl	18fcc <lchmod@@Base+0x2d00>
   18ef0:	push	{r4, r5, fp, lr}
   18ef4:	add	fp, sp, #8
   18ef8:	mov	r5, r0
   18efc:	mov	r0, r1
   18f00:	mov	r4, r1
   18f04:	bl	190e0 <lchmod@@Base+0x2e14>
   18f08:	cmp	r0, #0
   18f0c:	beq	18f20 <lchmod@@Base+0x2c54>
   18f10:	mov	r1, r5
   18f14:	mov	r2, r4
   18f18:	pop	{r4, r5, fp, lr}
   18f1c:	b	117d8 <memcpy@plt>
   18f20:	bl	18fcc <lchmod@@Base+0x2d00>
   18f24:	push	{r4, r5, fp, lr}
   18f28:	add	fp, sp, #8
   18f2c:	mov	r5, r0
   18f30:	mov	r0, r1
   18f34:	mov	r4, r1
   18f38:	bl	190e0 <lchmod@@Base+0x2e14>
   18f3c:	cmp	r0, #0
   18f40:	beq	18f54 <lchmod@@Base+0x2c88>
   18f44:	mov	r1, r5
   18f48:	mov	r2, r4
   18f4c:	pop	{r4, r5, fp, lr}
   18f50:	b	117d8 <memcpy@plt>
   18f54:	bl	18fcc <lchmod@@Base+0x2d00>
   18f58:	push	{r4, r5, fp, lr}
   18f5c:	add	fp, sp, #8
   18f60:	mov	r5, r0
   18f64:	add	r0, r1, #1
   18f68:	mov	r4, r1
   18f6c:	bl	190e0 <lchmod@@Base+0x2e14>
   18f70:	cmp	r0, #0
   18f74:	beq	18f90 <lchmod@@Base+0x2cc4>
   18f78:	mov	r1, #0
   18f7c:	mov	r2, r4
   18f80:	strb	r1, [r0, r4]
   18f84:	mov	r1, r5
   18f88:	pop	{r4, r5, fp, lr}
   18f8c:	b	117d8 <memcpy@plt>
   18f90:	bl	18fcc <lchmod@@Base+0x2d00>
   18f94:	push	{r4, r5, fp, lr}
   18f98:	add	fp, sp, #8
   18f9c:	mov	r4, r0
   18fa0:	bl	11964 <strlen@plt>
   18fa4:	add	r5, r0, #1
   18fa8:	mov	r0, r5
   18fac:	bl	190e0 <lchmod@@Base+0x2e14>
   18fb0:	cmp	r0, #0
   18fb4:	beq	18fc8 <lchmod@@Base+0x2cfc>
   18fb8:	mov	r1, r4
   18fbc:	mov	r2, r5
   18fc0:	pop	{r4, r5, fp, lr}
   18fc4:	b	117d8 <memcpy@plt>
   18fc8:	bl	18fcc <lchmod@@Base+0x2d00>
   18fcc:	push	{fp, lr}
   18fd0:	mov	fp, sp
   18fd4:	movw	r0, #45444	; 0xb184
   18fd8:	movw	r1, #42458	; 0xa5da
   18fdc:	mov	r2, #5
   18fe0:	movt	r0, #2
   18fe4:	movt	r1, #1
   18fe8:	ldr	r4, [r0]
   18fec:	mov	r0, #0
   18ff0:	bl	117fc <dcgettext@plt>
   18ff4:	movw	r2, #41207	; 0xa0f7
   18ff8:	mov	r3, r0
   18ffc:	mov	r0, r4
   19000:	mov	r1, #0
   19004:	movt	r2, #1
   19008:	bl	118bc <error@plt>
   1900c:	bl	11af0 <abort@plt>
   19010:	push	{fp, lr}
   19014:	mov	fp, sp
   19018:	orr	r1, r1, #512	; 0x200
   1901c:	bl	131a0 <__assert_fail@plt+0x1650>
   19020:	cmp	r0, #0
   19024:	popne	{fp, pc}
   19028:	bl	11994 <__errno_location@plt>
   1902c:	ldr	r0, [r0]
   19030:	cmp	r0, #22
   19034:	bne	19058 <lchmod@@Base+0x2d8c>
   19038:	movw	r0, #42475	; 0xa5eb
   1903c:	movw	r1, #42491	; 0xa5fb
   19040:	movw	r3, #42502	; 0xa606
   19044:	mov	r2, #41	; 0x29
   19048:	movt	r0, #1
   1904c:	movt	r1, #1
   19050:	movt	r3, #1
   19054:	bl	11b50 <__assert_fail@plt>
   19058:	bl	18fcc <lchmod@@Base+0x2d00>
   1905c:	ldr	r0, [r0, #48]	; 0x30
   19060:	and	r0, r0, #17
   19064:	cmp	r0, #16
   19068:	moveq	r0, #1
   1906c:	bxeq	lr
   19070:	cmp	r0, #17
   19074:	movne	r0, #0
   19078:	bxne	lr
   1907c:	ldr	r0, [r1, #48]	; 0x30
   19080:	cmp	r0, #0
   19084:	movwne	r0, #1
   19088:	bx	lr
   1908c:	clz	r2, r1
   19090:	clz	r3, r0
   19094:	lsr	r2, r2, #5
   19098:	lsr	r3, r3, #5
   1909c:	orrs	r2, r3, r2
   190a0:	movwne	r1, #1
   190a4:	movwne	r0, #1
   190a8:	cmp	r1, #0
   190ac:	beq	190dc <lchmod@@Base+0x2e10>
   190b0:	mvn	r2, #-2147483648	; 0x80000000
   190b4:	udiv	r2, r2, r1
   190b8:	cmp	r2, r0
   190bc:	bcs	190dc <lchmod@@Base+0x2e10>
   190c0:	push	{fp, lr}
   190c4:	mov	fp, sp
   190c8:	bl	11994 <__errno_location@plt>
   190cc:	mov	r1, #12
   190d0:	str	r1, [r0]
   190d4:	mov	r0, #0
   190d8:	pop	{fp, pc}
   190dc:	b	11748 <calloc@plt>
   190e0:	cmp	r0, #0
   190e4:	movweq	r0, #1
   190e8:	cmn	r0, #1
   190ec:	ble	190f4 <lchmod@@Base+0x2e28>
   190f0:	b	118e0 <malloc@plt>
   190f4:	push	{fp, lr}
   190f8:	mov	fp, sp
   190fc:	bl	11994 <__errno_location@plt>
   19100:	mov	r1, #12
   19104:	str	r1, [r0]
   19108:	mov	r0, #0
   1910c:	pop	{fp, pc}
   19110:	push	{fp, lr}
   19114:	mov	fp, sp
   19118:	cmp	r0, #0
   1911c:	beq	19138 <lchmod@@Base+0x2e6c>
   19120:	cmp	r1, #0
   19124:	beq	19144 <lchmod@@Base+0x2e78>
   19128:	cmn	r1, #1
   1912c:	ble	1914c <lchmod@@Base+0x2e80>
   19130:	pop	{fp, lr}
   19134:	b	11814 <realloc@plt>
   19138:	mov	r0, r1
   1913c:	pop	{fp, lr}
   19140:	b	190e0 <lchmod@@Base+0x2e14>
   19144:	bl	13178 <__assert_fail@plt+0x1628>
   19148:	b	19158 <lchmod@@Base+0x2e8c>
   1914c:	bl	11994 <__errno_location@plt>
   19150:	mov	r1, #12
   19154:	str	r1, [r0]
   19158:	mov	r0, #0
   1915c:	pop	{fp, pc}
   19160:	sub	r0, r0, #1
   19164:	ldrb	r3, [r0, #1]!
   19168:	cmp	r3, #47	; 0x2f
   1916c:	beq	19164 <lchmod@@Base+0x2e98>
   19170:	mov	r2, #0
   19174:	mov	r1, r0
   19178:	uxtb	r3, r3
   1917c:	cmp	r3, #47	; 0x2f
   19180:	beq	1919c <lchmod@@Base+0x2ed0>
   19184:	cmp	r3, #0
   19188:	bxeq	lr
   1918c:	tst	r2, #1
   19190:	mov	r2, #0
   19194:	movne	r0, r1
   19198:	b	191a0 <lchmod@@Base+0x2ed4>
   1919c:	mov	r2, #1
   191a0:	ldrb	r3, [r1, #1]!
   191a4:	b	19178 <lchmod@@Base+0x2eac>
   191a8:	push	{r4, sl, fp, lr}
   191ac:	add	fp, sp, #8
   191b0:	mov	r4, r0
   191b4:	bl	11964 <strlen@plt>
   191b8:	mov	r1, r0
   191bc:	sub	r2, r4, #1
   191c0:	mov	r0, r1
   191c4:	cmp	r1, #2
   191c8:	bcc	191dc <lchmod@@Base+0x2f10>
   191cc:	ldrb	r3, [r2, r0]
   191d0:	sub	r1, r0, #1
   191d4:	cmp	r3, #47	; 0x2f
   191d8:	beq	191c0 <lchmod@@Base+0x2ef4>
   191dc:	pop	{r4, sl, fp, pc}
   191e0:	push	{r4, r5, r6, sl, fp, lr}
   191e4:	add	fp, sp, #16
   191e8:	mov	r4, r0
   191ec:	bl	11898 <__fpending@plt>
   191f0:	mov	r5, r0
   191f4:	mov	r0, r4
   191f8:	bl	118a4 <ferror_unlocked@plt>
   191fc:	mov	r6, r0
   19200:	mov	r0, r4
   19204:	bl	1934c <lchmod@@Base+0x3080>
   19208:	cmp	r6, #0
   1920c:	beq	1922c <lchmod@@Base+0x2f60>
   19210:	mvn	r4, #0
   19214:	cmp	r0, #0
   19218:	bne	19258 <lchmod@@Base+0x2f8c>
   1921c:	bl	11994 <__errno_location@plt>
   19220:	mov	r1, #0
   19224:	str	r1, [r0]
   19228:	b	19258 <lchmod@@Base+0x2f8c>
   1922c:	cmp	r0, #0
   19230:	mov	r4, r0
   19234:	mvnne	r4, #0
   19238:	cmp	r5, #0
   1923c:	bne	19258 <lchmod@@Base+0x2f8c>
   19240:	cmp	r0, #0
   19244:	beq	19258 <lchmod@@Base+0x2f8c>
   19248:	bl	11994 <__errno_location@plt>
   1924c:	ldr	r0, [r0]
   19250:	subs	r4, r0, #9
   19254:	mvnne	r4, #0
   19258:	mov	r0, r4
   1925c:	pop	{r4, r5, r6, sl, fp, pc}
   19260:	movw	r2, #62998	; 0xf616
   19264:	mov	r1, #0
   19268:	movt	r2, #149	; 0x95
   1926c:	str	r1, [r0, #16]
   19270:	str	r1, [r0, #20]
   19274:	str	r2, [r0, #24]
   19278:	bx	lr
   1927c:	push	{r4, r5, r6, r7, r9, sl, fp, lr}
   19280:	add	fp, sp, #24
   19284:	ldr	r2, [r0, #24]
   19288:	movw	r3, #62998	; 0xf616
   1928c:	movt	r3, #149	; 0x95
   19290:	cmp	r2, r3
   19294:	bne	1932c <lchmod@@Base+0x3060>
   19298:	add	r3, r0, #16
   1929c:	add	ip, r0, #8
   192a0:	ldrd	r4, [r3]
   192a4:	orrs	r2, r4, r5
   192a8:	beq	192e4 <lchmod@@Base+0x3018>
   192ac:	ldr	r6, [r1, #96]	; 0x60
   192b0:	ldr	r9, [r1, #100]	; 0x64
   192b4:	ldm	r0, {r2, r7}
   192b8:	eor	r7, r9, r7
   192bc:	eor	r2, r6, r2
   192c0:	orrs	r2, r2, r7
   192c4:	bne	192e4 <lchmod@@Base+0x3018>
   192c8:	ldm	ip, {r2, r7}
   192cc:	ldm	r1, {r6, r9}
   192d0:	eor	r7, r9, r7
   192d4:	eor	r2, r6, r2
   192d8:	orrs	r2, r2, r7
   192dc:	mov	r2, #1
   192e0:	beq	19324 <lchmod@@Base+0x3058>
   192e4:	adds	r6, r4, #1
   192e8:	adc	r7, r5, #0
   192ec:	and	r2, r6, r4
   192f0:	strd	r6, [r3]
   192f4:	and	r3, r7, r5
   192f8:	orrs	r2, r2, r3
   192fc:	mov	r2, #0
   19300:	bne	19324 <lchmod@@Base+0x3058>
   19304:	orrs	r3, r6, r7
   19308:	beq	19320 <lchmod@@Base+0x3054>
   1930c:	ldrd	r4, [r1]
   19310:	strd	r4, [ip]
   19314:	ldrd	r4, [r1, #96]	; 0x60
   19318:	strd	r4, [r0]
   1931c:	b	19324 <lchmod@@Base+0x3058>
   19320:	mov	r2, #1
   19324:	mov	r0, r2
   19328:	pop	{r4, r5, r6, r7, r9, sl, fp, pc}
   1932c:	movw	r0, #42580	; 0xa654
   19330:	movw	r1, #42604	; 0xa66c
   19334:	movw	r3, #42622	; 0xa67e
   19338:	mov	r2, #60	; 0x3c
   1933c:	movt	r0, #1
   19340:	movt	r1, #1
   19344:	movt	r3, #1
   19348:	bl	11b50 <__assert_fail@plt>
   1934c:	push	{r4, r5, r6, sl, fp, lr}
   19350:	add	fp, sp, #16
   19354:	sub	sp, sp, #8
   19358:	mov	r4, r0
   1935c:	bl	119d0 <fileno@plt>
   19360:	cmn	r0, #1
   19364:	ble	193d8 <lchmod@@Base+0x310c>
   19368:	mov	r0, r4
   1936c:	bl	118f8 <__freading@plt>
   19370:	cmp	r0, #0
   19374:	beq	193a0 <lchmod@@Base+0x30d4>
   19378:	mov	r0, r4
   1937c:	bl	119d0 <fileno@plt>
   19380:	mov	r1, #1
   19384:	mov	r2, #0
   19388:	mov	r3, #0
   1938c:	str	r1, [sp]
   19390:	bl	11874 <lseek64@plt>
   19394:	and	r0, r0, r1
   19398:	cmn	r0, #1
   1939c:	beq	193d8 <lchmod@@Base+0x310c>
   193a0:	mov	r0, r4
   193a4:	bl	195fc <lchmod@@Base+0x3330>
   193a8:	cmp	r0, #0
   193ac:	beq	193d8 <lchmod@@Base+0x310c>
   193b0:	bl	11994 <__errno_location@plt>
   193b4:	ldr	r6, [r0]
   193b8:	mov	r5, r0
   193bc:	mov	r0, r4
   193c0:	bl	119e8 <fclose@plt>
   193c4:	cmp	r6, #0
   193c8:	strne	r6, [r5]
   193cc:	mvnne	r0, #0
   193d0:	sub	sp, fp, #16
   193d4:	pop	{r4, r5, r6, sl, fp, pc}
   193d8:	mov	r0, r4
   193dc:	sub	sp, fp, #16
   193e0:	pop	{r4, r5, r6, sl, fp, lr}
   193e4:	b	119e8 <fclose@plt>
   193e8:	sub	sp, sp, #8
   193ec:	push	{r4, r5, r6, r7, fp, lr}
   193f0:	add	fp, sp, #16
   193f4:	sub	sp, sp, #8
   193f8:	mov	r5, r0
   193fc:	add	r0, fp, #8
   19400:	cmp	r1, #11
   19404:	str	r2, [fp, #8]
   19408:	str	r3, [fp, #12]
   1940c:	str	r0, [sp, #4]
   19410:	bhi	1944c <lchmod@@Base+0x3180>
   19414:	mov	r0, #1
   19418:	movw	r2, #1300	; 0x514
   1941c:	tst	r2, r0, lsl r1
   19420:	bne	19504 <lchmod@@Base+0x3238>
   19424:	movw	r2, #2570	; 0xa0a
   19428:	tst	r2, r0, lsl r1
   1942c:	bne	19474 <lchmod@@Base+0x31a8>
   19430:	cmp	r1, #0
   19434:	bne	1944c <lchmod@@Base+0x3180>
   19438:	ldr	r0, [sp, #4]
   1943c:	add	r1, r0, #4
   19440:	str	r1, [sp, #4]
   19444:	mov	r1, #0
   19448:	b	19510 <lchmod@@Base+0x3244>
   1944c:	sub	r0, r1, #1024	; 0x400
   19450:	cmp	r0, #10
   19454:	bhi	19504 <lchmod@@Base+0x3238>
   19458:	mov	r2, #1
   1945c:	movw	r3, #645	; 0x285
   19460:	tst	r3, r2, lsl r0
   19464:	bne	19504 <lchmod@@Base+0x3238>
   19468:	movw	r3, #1282	; 0x502
   1946c:	tst	r3, r2, lsl r0
   19470:	beq	19480 <lchmod@@Base+0x31b4>
   19474:	mov	r0, r5
   19478:	bl	11a00 <fcntl64@plt>
   1947c:	b	1951c <lchmod@@Base+0x3250>
   19480:	cmp	r0, #6
   19484:	bne	19504 <lchmod@@Base+0x3238>
   19488:	ldr	r0, [sp, #4]
   1948c:	movw	r7, #45864	; 0xb328
   19490:	movt	r7, #2
   19494:	add	r1, r0, #4
   19498:	str	r1, [sp, #4]
   1949c:	ldr	r6, [r0]
   194a0:	ldr	r0, [r7]
   194a4:	cmp	r0, #0
   194a8:	bmi	19540 <lchmod@@Base+0x3274>
   194ac:	mov	r0, r5
   194b0:	movw	r1, #1030	; 0x406
   194b4:	mov	r2, r6
   194b8:	bl	11a00 <fcntl64@plt>
   194bc:	mov	r4, r0
   194c0:	cmn	r0, #1
   194c4:	bgt	19534 <lchmod@@Base+0x3268>
   194c8:	bl	11994 <__errno_location@plt>
   194cc:	ldr	r0, [r0]
   194d0:	cmp	r0, #22
   194d4:	bne	19534 <lchmod@@Base+0x3268>
   194d8:	mov	r0, r5
   194dc:	mov	r1, #0
   194e0:	mov	r2, r6
   194e4:	bl	11a00 <fcntl64@plt>
   194e8:	mov	r4, r0
   194ec:	cmp	r0, #0
   194f0:	bmi	19520 <lchmod@@Base+0x3254>
   194f4:	mvn	r0, #0
   194f8:	str	r0, [r7]
   194fc:	mov	r0, #1
   19500:	b	19564 <lchmod@@Base+0x3298>
   19504:	ldr	r0, [sp, #4]
   19508:	add	r2, r0, #4
   1950c:	str	r2, [sp, #4]
   19510:	ldr	r2, [r0]
   19514:	mov	r0, r5
   19518:	bl	11a00 <fcntl64@plt>
   1951c:	mov	r4, r0
   19520:	mov	r0, r4
   19524:	sub	sp, fp, #16
   19528:	pop	{r4, r5, r6, r7, fp, lr}
   1952c:	add	sp, sp, #8
   19530:	bx	lr
   19534:	mov	r0, #1
   19538:	str	r0, [r7]
   1953c:	b	19520 <lchmod@@Base+0x3254>
   19540:	mov	r0, r5
   19544:	mov	r1, #0
   19548:	mov	r2, r6
   1954c:	bl	11a00 <fcntl64@plt>
   19550:	mov	r4, r0
   19554:	ldr	r0, [r7]
   19558:	add	r0, r0, #1
   1955c:	clz	r0, r0
   19560:	lsr	r0, r0, #5
   19564:	cmp	r0, #0
   19568:	beq	19520 <lchmod@@Base+0x3254>
   1956c:	cmp	r4, #0
   19570:	bmi	19520 <lchmod@@Base+0x3254>
   19574:	mov	r0, r4
   19578:	mov	r1, #1
   1957c:	bl	11a00 <fcntl64@plt>
   19580:	cmp	r0, #0
   19584:	bmi	195a0 <lchmod@@Base+0x32d4>
   19588:	orr	r2, r0, #1
   1958c:	mov	r0, r4
   19590:	mov	r1, #2
   19594:	bl	11a00 <fcntl64@plt>
   19598:	cmn	r0, #1
   1959c:	bne	19520 <lchmod@@Base+0x3254>
   195a0:	bl	11994 <__errno_location@plt>
   195a4:	ldr	r6, [r0]
   195a8:	mov	r5, r0
   195ac:	mov	r0, r4
   195b0:	bl	11afc <close@plt>
   195b4:	str	r6, [r5]
   195b8:	mvn	r4, #0
   195bc:	b	19520 <lchmod@@Base+0x3254>
   195c0:	sub	sp, sp, #8
   195c4:	push	{fp, lr}
   195c8:	mov	fp, sp
   195cc:	sub	sp, sp, #8
   195d0:	str	r2, [fp, #8]
   195d4:	str	r3, [fp, #12]
   195d8:	tst	r1, #64	; 0x40
   195dc:	mov	r2, #0
   195e0:	ldrne	r2, [fp, #8]
   195e4:	bl	118c8 <open64@plt>
   195e8:	bl	18698 <lchmod@@Base+0x23cc>
   195ec:	mov	sp, fp
   195f0:	pop	{fp, lr}
   195f4:	add	sp, sp, #8
   195f8:	bx	lr
   195fc:	push	{r4, sl, fp, lr}
   19600:	add	fp, sp, #8
   19604:	sub	sp, sp, #8
   19608:	mov	r4, r0
   1960c:	cmp	r0, #0
   19610:	beq	19648 <lchmod@@Base+0x337c>
   19614:	mov	r0, r4
   19618:	bl	118f8 <__freading@plt>
   1961c:	cmp	r0, #0
   19620:	beq	19648 <lchmod@@Base+0x337c>
   19624:	ldrb	r0, [r4, #1]
   19628:	tst	r0, #1
   1962c:	beq	19648 <lchmod@@Base+0x337c>
   19630:	mov	r0, #1
   19634:	mov	r2, #0
   19638:	mov	r3, #0
   1963c:	str	r0, [sp]
   19640:	mov	r0, r4
   19644:	bl	19658 <lchmod@@Base+0x338c>
   19648:	mov	r0, r4
   1964c:	sub	sp, fp, #8
   19650:	pop	{r4, sl, fp, lr}
   19654:	b	11790 <fflush@plt>
   19658:	push	{r4, r5, r6, r7, fp, lr}
   1965c:	add	fp, sp, #16
   19660:	sub	sp, sp, #8
   19664:	mov	r4, r0
   19668:	ldr	r0, [r0, #4]
   1966c:	mov	r5, r3
   19670:	mov	r6, r2
   19674:	ldr	r1, [r4, #8]
   19678:	cmp	r1, r0
   1967c:	bne	19698 <lchmod@@Base+0x33cc>
   19680:	ldrd	r0, [r4, #16]
   19684:	cmp	r1, r0
   19688:	bne	19698 <lchmod@@Base+0x33cc>
   1968c:	ldr	r0, [r4, #36]	; 0x24
   19690:	cmp	r0, #0
   19694:	beq	196b0 <lchmod@@Base+0x33e4>
   19698:	mov	r0, r4
   1969c:	mov	r2, r6
   196a0:	mov	r3, r5
   196a4:	sub	sp, fp, #16
   196a8:	pop	{r4, r5, r6, r7, fp, lr}
   196ac:	b	119f4 <fseeko64@plt>
   196b0:	ldr	r7, [fp, #8]
   196b4:	mov	r0, r4
   196b8:	bl	119d0 <fileno@plt>
   196bc:	mov	r2, r6
   196c0:	mov	r3, r5
   196c4:	str	r7, [sp]
   196c8:	bl	11874 <lseek64@plt>
   196cc:	and	r2, r0, r1
   196d0:	cmn	r2, #1
   196d4:	beq	196f0 <lchmod@@Base+0x3424>
   196d8:	strd	r0, [r4, #80]	; 0x50
   196dc:	ldr	r0, [r4]
   196e0:	bic	r0, r0, #16
   196e4:	str	r0, [r4]
   196e8:	mov	r0, #0
   196ec:	b	196f4 <lchmod@@Base+0x3428>
   196f0:	mvn	r0, #0
   196f4:	sub	sp, fp, #16
   196f8:	pop	{r4, r5, r6, r7, fp, pc}
   196fc:	ldrb	r2, [r0]
   19700:	cmp	r2, #0
   19704:	beq	19728 <lchmod@@Base+0x345c>
   19708:	add	r3, r0, #1
   1970c:	mov	r0, #0
   19710:	ror	r0, r0, #23
   19714:	uxtab	r0, r0, r2
   19718:	ldrb	r2, [r3], #1
   1971c:	cmp	r2, #0
   19720:	bne	19710 <lchmod@@Base+0x3444>
   19724:	b	1972c <lchmod@@Base+0x3460>
   19728:	mov	r0, #0
   1972c:	udiv	r2, r0, r1
   19730:	mls	r0, r2, r1, r0
   19734:	bx	lr
   19738:	push	{fp, lr}
   1973c:	mov	fp, sp
   19740:	mov	r0, #14
   19744:	bl	11a30 <nl_langinfo@plt>
   19748:	movw	r1, #41020	; 0xa03c
   1974c:	cmp	r0, #0
   19750:	movt	r1, #1
   19754:	movne	r1, r0
   19758:	movw	r0, #42689	; 0xa6c1
   1975c:	ldrb	r2, [r1]
   19760:	movt	r0, #1
   19764:	cmp	r2, #0
   19768:	movne	r0, r1
   1976c:	pop	{fp, pc}
   19770:	push	{r4, r5, r6, r7, fp, lr}
   19774:	add	fp, sp, #16
   19778:	sub	sp, sp, #8
   1977c:	cmp	r0, #0
   19780:	add	r5, sp, #4
   19784:	mov	r7, r2
   19788:	mov	r4, r1
   1978c:	movne	r5, r0
   19790:	mov	r0, r5
   19794:	bl	118b0 <mbrtowc@plt>
   19798:	mov	r6, r0
   1979c:	cmp	r7, #0
   197a0:	beq	197c8 <lchmod@@Base+0x34fc>
   197a4:	cmn	r6, #2
   197a8:	bcc	197c8 <lchmod@@Base+0x34fc>
   197ac:	mov	r0, #0
   197b0:	bl	1981c <lchmod@@Base+0x3550>
   197b4:	cmp	r0, #0
   197b8:	bne	197c8 <lchmod@@Base+0x34fc>
   197bc:	ldrb	r0, [r4]
   197c0:	mov	r6, #1
   197c4:	str	r0, [r5]
   197c8:	mov	r0, r6
   197cc:	sub	sp, fp, #16
   197d0:	pop	{r4, r5, r6, r7, fp, pc}
   197d4:	cmp	r2, #0
   197d8:	beq	19808 <lchmod@@Base+0x353c>
   197dc:	mvn	r3, #0
   197e0:	udiv	r3, r3, r2
   197e4:	cmp	r3, r1
   197e8:	bcs	19808 <lchmod@@Base+0x353c>
   197ec:	push	{fp, lr}
   197f0:	mov	fp, sp
   197f4:	bl	11994 <__errno_location@plt>
   197f8:	mov	r1, #12
   197fc:	str	r1, [r0]
   19800:	mov	r0, #0
   19804:	pop	{fp, pc}
   19808:	mul	r1, r2, r1
   1980c:	b	19110 <lchmod@@Base+0x2e44>
   19810:	mov	r1, #0
   19814:	mov	r2, #3
   19818:	b	193e8 <lchmod@@Base+0x311c>
   1981c:	push	{r4, sl, fp, lr}
   19820:	add	fp, sp, #8
   19824:	sub	sp, sp, #264	; 0x108
   19828:	add	r1, sp, #7
   1982c:	movw	r2, #257	; 0x101
   19830:	bl	19888 <lchmod@@Base+0x35bc>
   19834:	mov	r4, #0
   19838:	cmp	r0, #0
   1983c:	bne	1987c <lchmod@@Base+0x35b0>
   19840:	movw	r1, #42695	; 0xa6c7
   19844:	add	r0, sp, #7
   19848:	mov	r2, #2
   1984c:	movt	r1, #1
   19850:	bl	11958 <bcmp@plt>
   19854:	cmp	r0, #0
   19858:	beq	1987c <lchmod@@Base+0x35b0>
   1985c:	movw	r1, #42697	; 0xa6c9
   19860:	add	r0, sp, #7
   19864:	mov	r2, #6
   19868:	movt	r1, #1
   1986c:	bl	11958 <bcmp@plt>
   19870:	cmp	r0, #0
   19874:	mov	r4, r0
   19878:	movwne	r4, #1
   1987c:	mov	r0, r4
   19880:	sub	sp, fp, #8
   19884:	pop	{r4, sl, fp, pc}
   19888:	push	{r4, r5, r6, r7, fp, lr}
   1988c:	add	fp, sp, #16
   19890:	mov	r4, r1
   19894:	mov	r1, #0
   19898:	mov	r6, r2
   1989c:	bl	11a0c <setlocale@plt>
   198a0:	cmp	r0, #0
   198a4:	beq	198d0 <lchmod@@Base+0x3604>
   198a8:	mov	r7, r0
   198ac:	bl	11964 <strlen@plt>
   198b0:	cmp	r0, r6
   198b4:	bcs	198e4 <lchmod@@Base+0x3618>
   198b8:	add	r2, r0, #1
   198bc:	mov	r0, r4
   198c0:	mov	r1, r7
   198c4:	bl	117d8 <memcpy@plt>
   198c8:	mov	r5, #0
   198cc:	b	1990c <lchmod@@Base+0x3640>
   198d0:	cmp	r6, #0
   198d4:	mov	r5, #22
   198d8:	movne	r0, #0
   198dc:	strbne	r0, [r4]
   198e0:	b	1990c <lchmod@@Base+0x3640>
   198e4:	mov	r5, #34	; 0x22
   198e8:	cmp	r6, #0
   198ec:	beq	1990c <lchmod@@Base+0x3640>
   198f0:	sub	r6, r6, #1
   198f4:	mov	r0, r4
   198f8:	mov	r1, r7
   198fc:	mov	r2, r6
   19900:	bl	117d8 <memcpy@plt>
   19904:	mov	r0, #0
   19908:	strb	r0, [r4, r6]
   1990c:	mov	r0, r5
   19910:	pop	{r4, r5, r6, r7, fp, pc}
   19914:	mov	r1, #0
   19918:	b	11a0c <setlocale@plt>
   1991c:	cmp	r3, #0
   19920:	cmpeq	r2, #0
   19924:	bne	1993c <lchmod@@Base+0x3670>
   19928:	cmp	r1, #0
   1992c:	cmpeq	r0, #0
   19930:	mvnne	r1, #0
   19934:	mvnne	r0, #0
   19938:	b	19958 <lchmod@@Base+0x368c>
   1993c:	sub	sp, sp, #8
   19940:	push	{sp, lr}
   19944:	bl	19968 <lchmod@@Base+0x369c>
   19948:	ldr	lr, [sp, #4]
   1994c:	add	sp, sp, #8
   19950:	pop	{r2, r3}
   19954:	bx	lr
   19958:	push	{r1, lr}
   1995c:	mov	r0, #8
   19960:	bl	11760 <raise@plt>
   19964:	pop	{r1, pc}
   19968:	cmp	r1, r3
   1996c:	cmpeq	r0, r2
   19970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19974:	mov	r4, r0
   19978:	movcc	r0, #0
   1997c:	mov	r5, r1
   19980:	ldr	lr, [sp, #36]	; 0x24
   19984:	movcc	r1, r0
   19988:	bcc	19a84 <lchmod@@Base+0x37b8>
   1998c:	cmp	r3, #0
   19990:	clzeq	ip, r2
   19994:	clzne	ip, r3
   19998:	addeq	ip, ip, #32
   1999c:	cmp	r5, #0
   199a0:	clzeq	r1, r4
   199a4:	addeq	r1, r1, #32
   199a8:	clzne	r1, r5
   199ac:	sub	ip, ip, r1
   199b0:	sub	sl, ip, #32
   199b4:	lsl	r9, r3, ip
   199b8:	rsb	fp, ip, #32
   199bc:	orr	r9, r9, r2, lsl sl
   199c0:	orr	r9, r9, r2, lsr fp
   199c4:	lsl	r8, r2, ip
   199c8:	cmp	r5, r9
   199cc:	cmpeq	r4, r8
   199d0:	movcc	r0, #0
   199d4:	movcc	r1, r0
   199d8:	bcc	199f4 <lchmod@@Base+0x3728>
   199dc:	mov	r0, #1
   199e0:	subs	r4, r4, r8
   199e4:	lsl	r1, r0, sl
   199e8:	orr	r1, r1, r0, lsr fp
   199ec:	lsl	r0, r0, ip
   199f0:	sbc	r5, r5, r9
   199f4:	cmp	ip, #0
   199f8:	beq	19a84 <lchmod@@Base+0x37b8>
   199fc:	lsr	r6, r8, #1
   19a00:	orr	r6, r6, r9, lsl #31
   19a04:	lsr	r7, r9, #1
   19a08:	mov	r2, ip
   19a0c:	b	19a30 <lchmod@@Base+0x3764>
   19a10:	subs	r3, r4, r6
   19a14:	sbc	r8, r5, r7
   19a18:	adds	r3, r3, r3
   19a1c:	adc	r8, r8, r8
   19a20:	adds	r4, r3, #1
   19a24:	adc	r5, r8, #0
   19a28:	subs	r2, r2, #1
   19a2c:	beq	19a4c <lchmod@@Base+0x3780>
   19a30:	cmp	r5, r7
   19a34:	cmpeq	r4, r6
   19a38:	bcs	19a10 <lchmod@@Base+0x3744>
   19a3c:	adds	r4, r4, r4
   19a40:	adc	r5, r5, r5
   19a44:	subs	r2, r2, #1
   19a48:	bne	19a30 <lchmod@@Base+0x3764>
   19a4c:	lsr	r3, r4, ip
   19a50:	orr	r3, r3, r5, lsl fp
   19a54:	lsr	r2, r5, ip
   19a58:	orr	r3, r3, r5, lsr sl
   19a5c:	adds	r0, r0, r4
   19a60:	mov	r4, r3
   19a64:	lsl	r3, r2, ip
   19a68:	orr	r3, r3, r4, lsl sl
   19a6c:	lsl	ip, r4, ip
   19a70:	orr	r3, r3, r4, lsr fp
   19a74:	adc	r1, r1, r5
   19a78:	subs	r0, r0, ip
   19a7c:	mov	r5, r2
   19a80:	sbc	r1, r1, r3
   19a84:	cmp	lr, #0
   19a88:	strdne	r4, [lr]
   19a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19a94:	mov	r7, r0
   19a98:	ldr	r6, [pc, #72]	; 19ae8 <lchmod@@Base+0x381c>
   19a9c:	ldr	r5, [pc, #72]	; 19aec <lchmod@@Base+0x3820>
   19aa0:	add	r6, pc, r6
   19aa4:	add	r5, pc, r5
   19aa8:	sub	r6, r6, r5
   19aac:	mov	r8, r1
   19ab0:	mov	r9, r2
   19ab4:	bl	11710 <fstatfs64@plt-0x20>
   19ab8:	asrs	r6, r6, #2
   19abc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ac0:	mov	r4, #0
   19ac4:	add	r4, r4, #1
   19ac8:	ldr	r3, [r5], #4
   19acc:	mov	r2, r9
   19ad0:	mov	r1, r8
   19ad4:	mov	r0, r7
   19ad8:	blx	r3
   19adc:	cmp	r6, r4
   19ae0:	bne	19ac4 <lchmod@@Base+0x37f8>
   19ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ae8:	andeq	r1, r1, ip, asr r4
   19aec:	andeq	r1, r1, r4, asr r4
   19af0:	bx	lr
   19af4:	ldr	r3, [pc, #12]	; 19b08 <lchmod@@Base+0x383c>
   19af8:	mov	r1, #0
   19afc:	add	r3, pc, r3
   19b00:	ldr	r2, [r3]
   19b04:	b	119ac <__cxa_atexit@plt>
   19b08:	andeq	r1, r1, r8, ror r6
   19b0c:	mov	r2, r1
   19b10:	mov	r1, r0
   19b14:	mov	r0, #3
   19b18:	b	11acc <__xstat64@plt>
   19b1c:	mov	r2, r1
   19b20:	mov	r1, r0
   19b24:	mov	r0, #3
   19b28:	b	1185c <__fxstat64@plt>
   19b2c:	mov	r2, r1
   19b30:	mov	r1, r0
   19b34:	mov	r0, #3
   19b38:	b	11b08 <__lxstat64@plt>
   19b3c:	push	{lr}		; (str lr, [sp, #-4]!)
   19b40:	sub	sp, sp, #12
   19b44:	str	r3, [sp]
   19b48:	mov	r3, r2
   19b4c:	mov	r2, r1
   19b50:	mov	r1, r0
   19b54:	mov	r0, #3
   19b58:	bl	11844 <__fxstatat64@plt>
   19b5c:	add	sp, sp, #12
   19b60:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00019b64 <.fini>:
   19b64:	push	{r3, lr}
   19b68:	pop	{r3, pc}
