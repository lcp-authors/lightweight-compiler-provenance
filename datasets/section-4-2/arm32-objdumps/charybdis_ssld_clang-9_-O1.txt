
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00011134 <.init>:
   11134:	push	{r3, lr}
   11138:	bl	114b4 <__errno_location@plt+0x48>
   1113c:	pop	{r3, pc}

Disassembly of section .plt:

00011140 <open@plt-0x14>:
   11140:	push	{lr}		; (str lr, [sp, #-4]!)
   11144:	ldr	lr, [pc, #4]	; 11150 <open@plt-0x4>
   11148:	add	lr, pc, lr
   1114c:	ldr	pc, [lr, #8]!
   11150:			; <UNDEFINED> instruction: 0x00012eb0

00011154 <open@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #73728	; 0x12000
   1115c:	ldr	pc, [ip, #3760]!	; 0xeb0

00011160 <sigemptyset@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #73728	; 0x12000
   11168:	ldr	pc, [ip, #3752]!	; 0xea8

0001116c <strerror@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #73728	; 0x12000
   11174:	ldr	pc, [ip, #3744]!	; 0xea0

00011178 <rb_get_type@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #73728	; 0x12000
   11180:	ldr	pc, [ip, #3736]!	; 0xe98

00011184 <zError@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #73728	; 0x12000
   1118c:	ldr	pc, [ip, #3728]!	; 0xe90

00011190 <abort@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #73728	; 0x12000
   11198:	ldr	pc, [ip, #3720]!	; 0xe88

0001119c <rb_event_addish@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #73728	; 0x12000
   111a4:	ldr	pc, [ip, #3712]!	; 0xe80

000111a8 <rb_ignore_errno@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #73728	; 0x12000
   111b0:	ldr	pc, [ip, #3704]!	; 0xe78

000111b4 <rb_lib_version@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #73728	; 0x12000
   111bc:	ldr	pc, [ip, #3696]!	; 0xe70

000111c0 <inflateEnd@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #73728	; 0x12000
   111c8:	ldr	pc, [ip, #3688]!	; 0xe68

000111cc <__libc_start_main@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #73728	; 0x12000
   111d4:	ldr	pc, [ip, #3680]!	; 0xe60

000111d8 <rb_setselect@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #73728	; 0x12000
   111e0:	ldr	pc, [ip, #3672]!	; 0xe58

000111e4 <__gmon_start__@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #73728	; 0x12000
   111ec:	ldr	pc, [ip, #3664]!	; 0xe50

000111f0 <rb_ssl_handshake_count@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #73728	; 0x12000
   111f8:	ldr	pc, [ip, #3656]!	; 0xe48

000111fc <rb_send_fd_buf@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #73728	; 0x12000
   11204:	ldr	pc, [ip, #3648]!	; 0xe40

00011208 <vsnprintf@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #73728	; 0x12000
   11210:	ldr	pc, [ip, #3640]!	; 0xe38

00011214 <strncpy@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #73728	; 0x12000
   1121c:	ldr	pc, [ip, #3632]!	; 0xe30

00011220 <getenv@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #73728	; 0x12000
   11228:	ldr	pc, [ip, #3624]!	; 0xe28

0001122c <deflate@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #73728	; 0x12000
   11234:	ldr	pc, [ip, #3616]!	; 0xe20

00011238 <deflateInit_@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #73728	; 0x12000
   11240:	ldr	pc, [ip, #3608]!	; 0xe18

00011244 <calloc@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #73728	; 0x12000
   1124c:	ldr	pc, [ip, #3600]!	; 0xe10

00011250 <rb_set_nb@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #73728	; 0x12000
   11258:	ldr	pc, [ip, #3592]!	; 0xe08

0001125c <memset@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #73728	; 0x12000
   11264:	ldr	pc, [ip, #3584]!	; 0xe00

00011268 <__assert_fail@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #73728	; 0x12000
   11270:	ldr	pc, [ip, #3576]!	; 0xdf8

00011274 <rb_strlcpy@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #73728	; 0x12000
   1127c:	ldr	pc, [ip, #3568]!	; 0xdf0

00011280 <rb_get_ssl_certfp@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #73728	; 0x12000
   11288:	ldr	pc, [ip, #3560]!	; 0xde8

0001128c <inflate@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #73728	; 0x12000
   11294:	ldr	pc, [ip, #3552]!	; 0xde0

00011298 <rb_init_rawbuffers@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #73728	; 0x12000
   112a0:	ldr	pc, [ip, #3544]!	; 0xdd8

000112a4 <free@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #73728	; 0x12000
   112ac:	ldr	pc, [ip, #3536]!	; 0xdd0

000112b0 <rb_lib_loop@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #73728	; 0x12000
   112b8:	ldr	pc, [ip, #3528]!	; 0xdc8

000112bc <deflateEnd@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #73728	; 0x12000
   112c4:	ldr	pc, [ip, #3520]!	; 0xdc0

000112c8 <rb_read@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #73728	; 0x12000
   112d0:	ldr	pc, [ip, #3512]!	; 0xdb8

000112d4 <rb_set_type@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #73728	; 0x12000
   112dc:	ldr	pc, [ip, #3504]!	; 0xdb0

000112e0 <strlen@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #73728	; 0x12000
   112e8:	ldr	pc, [ip, #3496]!	; 0xda8

000112ec <rb_ssl_get_cipher@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #73728	; 0x12000
   112f4:	ldr	pc, [ip, #3488]!	; 0xda0

000112f8 <memcpy@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #73728	; 0x12000
   11300:	ldr	pc, [ip, #3480]!	; 0xd98

00011304 <rb_close@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #73728	; 0x12000
   1130c:	ldr	pc, [ip, #3472]!	; 0xd90

00011310 <sigaddset@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #73728	; 0x12000
   11318:	ldr	pc, [ip, #3464]!	; 0xd88

0001131c <strcpy@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #73728	; 0x12000
   11324:	ldr	pc, [ip, #3456]!	; 0xd80

00011328 <rb_ssl_clear_handshake_count@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #73728	; 0x12000
   11330:	ldr	pc, [ip, #3448]!	; 0xd78

00011334 <atoi@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #73728	; 0x12000
   1133c:	ldr	pc, [ip, #3440]!	; 0xd70

00011340 <rb_rawbuf_length@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #73728	; 0x12000
   11348:	ldr	pc, [ip, #3432]!	; 0xd68

0001134c <rb_free_rawbuffer@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #73728	; 0x12000
   11354:	ldr	pc, [ip, #3424]!	; 0xd60

00011358 <rb_get_ssl_strerror@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #73728	; 0x12000
   11360:	ldr	pc, [ip, #3416]!	; 0xd58

00011364 <close@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #73728	; 0x12000
   1136c:	ldr	pc, [ip, #3408]!	; 0xd50

00011370 <fwrite@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #73728	; 0x12000
   11378:	ldr	pc, [ip, #3400]!	; 0xd48

0001137c <rb_init_prng@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #73728	; 0x12000
   11384:	ldr	pc, [ip, #3392]!	; 0xd40

00011388 <rb_outofmemory@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #73728	; 0x12000
   11390:	ldr	pc, [ip, #3384]!	; 0xd38

00011394 <rb_supports_ssl@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #73728	; 0x12000
   1139c:	ldr	pc, [ip, #3376]!	; 0xd30

000113a0 <sigaction@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #73728	; 0x12000
   113a8:	ldr	pc, [ip, #3368]!	; 0xd28

000113ac <rb_ssl_start_connected@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #73728	; 0x12000
   113b4:	ldr	pc, [ip, #3360]!	; 0xd20

000113b8 <rb_lib_init@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #73728	; 0x12000
   113c0:	ldr	pc, [ip, #3352]!	; 0xd18

000113c4 <rb_new_rawbuffer@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #73728	; 0x12000
   113cc:	ldr	pc, [ip, #3344]!	; 0xd10

000113d0 <rb_open@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #73728	; 0x12000
   113d8:	ldr	pc, [ip, #3336]!	; 0xd08

000113dc <inflateInit_@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #73728	; 0x12000
   113e4:	ldr	pc, [ip, #3328]!	; 0xd00

000113e8 <rb_recv_fd_buf@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #73728	; 0x12000
   113f0:	ldr	pc, [ip, #3320]!	; 0xcf8

000113f4 <rb_ssl_start_accepted@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #73728	; 0x12000
   113fc:	ldr	pc, [ip, #3312]!	; 0xcf0

00011400 <dup2@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #73728	; 0x12000
   11408:	ldr	pc, [ip, #3304]!	; 0xce8

0001140c <rb_event_add@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #73728	; 0x12000
   11414:	ldr	pc, [ip, #3296]!	; 0xce0

00011418 <snprintf@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #73728	; 0x12000
   11420:	ldr	pc, [ip, #3288]!	; 0xcd8

00011424 <strncmp@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #73728	; 0x12000
   1142c:	ldr	pc, [ip, #3280]!	; 0xcd0

00011430 <getrlimit@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #73728	; 0x12000
   11438:	ldr	pc, [ip, #3272]!	; 0xcc8

0001143c <rb_rawbuf_append@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #73728	; 0x12000
   11444:	ldr	pc, [ip, #3264]!	; 0xcc0

00011448 <rb_rawbuf_flush@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #73728	; 0x12000
   11450:	ldr	pc, [ip, #3256]!	; 0xcb8

00011454 <rb_setup_ssl_server@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #73728	; 0x12000
   1145c:	ldr	pc, [ip, #3248]!	; 0xcb0

00011460 <exit@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #73728	; 0x12000
   11468:	ldr	pc, [ip, #3240]!	; 0xca8

0001146c <__errno_location@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #73728	; 0x12000
   11474:	ldr	pc, [ip, #3232]!	; 0xca0

Disassembly of section .text:

00011478 <.text>:
   11478:	mov	fp, #0
   1147c:	mov	lr, #0
   11480:	pop	{r1}		; (ldr r1, [sp], #4)
   11484:	mov	r2, sp
   11488:	push	{r2}		; (str r2, [sp, #-4]!)
   1148c:	push	{r0}		; (str r0, [sp, #-4]!)
   11490:	ldr	ip, [pc, #16]	; 114a8 <__errno_location@plt+0x3c>
   11494:	push	{ip}		; (str ip, [sp, #-4]!)
   11498:	ldr	r0, [pc, #12]	; 114ac <__errno_location@plt+0x40>
   1149c:	ldr	r3, [pc, #12]	; 114b0 <__errno_location@plt+0x44>
   114a0:	bl	111cc <__libc_start_main@plt>
   114a4:	bl	11190 <abort@plt>
   114a8:	muleq	r1, r8, r3
   114ac:	andeq	r1, r1, r8, ror #10
   114b0:	andeq	r3, r1, r8, lsr r3
   114b4:	ldr	r3, [pc, #20]	; 114d0 <__errno_location@plt+0x64>
   114b8:	ldr	r2, [pc, #20]	; 114d4 <__errno_location@plt+0x68>
   114bc:	add	r3, pc, r3
   114c0:	ldr	r2, [r3, r2]
   114c4:	cmp	r2, #0
   114c8:	bxeq	lr
   114cc:	b	111e4 <__gmon_start__@plt>
   114d0:	andeq	r2, r1, ip, lsr fp
   114d4:	andeq	r0, r0, r8, lsl r1
   114d8:	ldr	r0, [pc, #24]	; 114f8 <__errno_location@plt+0x8c>
   114dc:	ldr	r3, [pc, #24]	; 114fc <__errno_location@plt+0x90>
   114e0:	cmp	r3, r0
   114e4:	bxeq	lr
   114e8:	ldr	r3, [pc, #16]	; 11500 <__errno_location@plt+0x94>
   114ec:	cmp	r3, #0
   114f0:	bxeq	lr
   114f4:	bx	r3
   114f8:	andeq	r4, r2, r4, lsr #2
   114fc:	andeq	r4, r2, r4, lsr #2
   11500:	andeq	r0, r0, r0
   11504:	ldr	r0, [pc, #36]	; 11530 <__errno_location@plt+0xc4>
   11508:	ldr	r1, [pc, #36]	; 11534 <__errno_location@plt+0xc8>
   1150c:	sub	r1, r1, r0
   11510:	asr	r1, r1, #2
   11514:	add	r1, r1, r1, lsr #31
   11518:	asrs	r1, r1, #1
   1151c:	bxeq	lr
   11520:	ldr	r3, [pc, #16]	; 11538 <__errno_location@plt+0xcc>
   11524:	cmp	r3, #0
   11528:	bxeq	lr
   1152c:	bx	r3
   11530:	andeq	r4, r2, r4, lsr #2
   11534:	andeq	r4, r2, r4, lsr #2
   11538:	andeq	r0, r0, r0
   1153c:	push	{r4, lr}
   11540:	ldr	r4, [pc, #24]	; 11560 <__errno_location@plt+0xf4>
   11544:	ldrb	r3, [r4]
   11548:	cmp	r3, #0
   1154c:	popne	{r4, pc}
   11550:	bl	114d8 <__errno_location@plt+0x6c>
   11554:	mov	r3, #1
   11558:	strb	r3, [r4]
   1155c:	pop	{r4, pc}
   11560:	andeq	r4, r2, ip, lsr #2
   11564:	b	11504 <__errno_location@plt+0x98>
   11568:	push	{fp, lr}
   1156c:	mov	fp, sp
   11570:	sub	sp, sp, #16
   11574:	bl	11814 <__errno_location@plt+0x3a8>
   11578:	mov	r6, r0
   1157c:	movw	r0, #13224	; 0x33a8
   11580:	movt	r0, #1
   11584:	bl	11220 <getenv@plt>
   11588:	mov	r5, r0
   1158c:	movw	r0, #13231	; 0x33af
   11590:	movt	r0, #1
   11594:	bl	11220 <getenv@plt>
   11598:	mov	r4, r0
   1159c:	movw	r0, #13240	; 0x33b8
   115a0:	movt	r0, #1
   115a4:	bl	11220 <getenv@plt>
   115a8:	cmp	r5, #0
   115ac:	beq	115c0 <__errno_location@plt+0x154>
   115b0:	cmp	r4, #0
   115b4:	movne	r7, r0
   115b8:	cmpne	r0, #0
   115bc:	bne	11600 <__errno_location@plt+0x194>
   115c0:	movw	r4, #16680	; 0x4128
   115c4:	movt	r4, #2
   115c8:	ldr	r3, [r4]
   115cc:	movw	r0, #13249	; 0x33c1
   115d0:	movt	r0, #1
   115d4:	mov	r1, #50	; 0x32
   115d8:	mov	r2, #1
   115dc:	bl	11370 <fwrite@plt>
   115e0:	ldr	r3, [r4]
   115e4:	movw	r0, #13300	; 0x33f4
   115e8:	movt	r0, #1
   115ec:	mov	r1, #49	; 0x31
   115f0:	mov	r2, #1
   115f4:	bl	11370 <fwrite@plt>
   115f8:	mov	r0, #1
   115fc:	bl	11460 <exit@plt>
   11600:	mov	r0, r5
   11604:	bl	11334 <atoi@plt>
   11608:	mov	r5, r0
   1160c:	mov	r0, r4
   11610:	bl	11334 <atoi@plt>
   11614:	mov	r4, r0
   11618:	mov	r0, r7
   1161c:	bl	11334 <atoi@plt>
   11620:	movw	r1, #16688	; 0x4130
   11624:	movt	r1, #2
   11628:	str	r0, [r1]
   1162c:	cmp	r6, #4
   11630:	blt	11660 <__errno_location@plt+0x1f4>
   11634:	mov	r7, #3
   11638:	b	11648 <__errno_location@plt+0x1dc>
   1163c:	add	r7, r7, #1
   11640:	cmp	r6, r7
   11644:	beq	11660 <__errno_location@plt+0x1f4>
   11648:	cmp	r5, r7
   1164c:	cmpne	r4, r7
   11650:	beq	1163c <__errno_location@plt+0x1d0>
   11654:	mov	r0, r7
   11658:	bl	11364 <close@plt>
   1165c:	b	1163c <__errno_location@plt+0x1d0>
   11660:	movw	r0, #13350	; 0x3426
   11664:	movt	r0, #1
   11668:	mov	r1, #2
   1166c:	bl	11154 <open@plt>
   11670:	cmp	r0, #0
   11674:	bmi	116c8 <__errno_location@plt+0x25c>
   11678:	mov	r7, r0
   1167c:	cmp	r5, #0
   11680:	cmpne	r4, #0
   11684:	beq	11694 <__errno_location@plt+0x228>
   11688:	mov	r0, r7
   1168c:	mov	r1, #0
   11690:	bl	11400 <dup2@plt>
   11694:	cmp	r5, #1
   11698:	cmpne	r4, #1
   1169c:	beq	116ac <__errno_location@plt+0x240>
   116a0:	mov	r0, r7
   116a4:	mov	r1, #1
   116a8:	bl	11400 <dup2@plt>
   116ac:	cmp	r5, #2
   116b0:	cmpne	r4, #2
   116b4:	bne	117fc <__errno_location@plt+0x390>
   116b8:	cmp	r7, #3
   116bc:	blt	116c8 <__errno_location@plt+0x25c>
   116c0:	mov	r0, r7
   116c4:	bl	11364 <close@plt>
   116c8:	bl	11844 <__errno_location@plt+0x3d8>
   116cc:	mov	r0, #4096	; 0x1000
   116d0:	mov	r1, #1024	; 0x400
   116d4:	str	r6, [sp]
   116d8:	str	r1, [sp, #4]
   116dc:	str	r0, [sp, #8]
   116e0:	mov	r0, #0
   116e4:	mov	r1, #0
   116e8:	mov	r2, #0
   116ec:	mov	r3, #0
   116f0:	bl	113b8 <rb_lib_init@plt>
   116f4:	mov	r0, #1024	; 0x400
   116f8:	bl	11298 <rb_init_rawbuffers@plt>
   116fc:	mov	r0, #0
   11700:	mov	r1, #1
   11704:	bl	1137c <rb_init_prng@plt>
   11708:	bl	11394 <rb_supports_ssl@plt>
   1170c:	cmp	r0, #0
   11710:	movwne	r0, #1
   11714:	movw	r6, #16692	; 0x4134
   11718:	movt	r6, #2
   1171c:	strb	r0, [r6]
   11720:	mov	r0, #48	; 0x30
   11724:	bl	118f4 <__errno_location@plt+0x488>
   11728:	movw	r7, #16696	; 0x4138
   1172c:	movt	r7, #2
   11730:	str	r0, [r7]
   11734:	movw	r2, #13360	; 0x3430
   11738:	movt	r2, #1
   1173c:	mov	r0, r5
   11740:	mov	r1, #4
   11744:	bl	113d0 <rb_open@plt>
   11748:	ldr	r1, [r7]
   1174c:	str	r0, [r1, #16]
   11750:	movw	r2, #13380	; 0x3444
   11754:	movt	r2, #1
   11758:	mov	r0, r4
   1175c:	mov	r1, #8
   11760:	bl	113d0 <rb_open@plt>
   11764:	ldr	r1, [r7]
   11768:	str	r0, [r1, #20]
   1176c:	ldr	r0, [r1, #16]
   11770:	bl	11250 <rb_set_nb@plt>
   11774:	ldr	r0, [r7]
   11778:	ldr	r0, [r0, #20]
   1177c:	bl	11250 <rb_set_nb@plt>
   11780:	movw	r0, #13390	; 0x344e
   11784:	movt	r0, #1
   11788:	movw	r1, #6420	; 0x1914
   1178c:	movt	r1, #1
   11790:	mov	r2, #0
   11794:	mov	r3, #10
   11798:	bl	1119c <rb_event_addish@plt>
   1179c:	movw	r0, #13407	; 0x345f
   117a0:	movt	r0, #1
   117a4:	movw	r1, #6484	; 0x1954
   117a8:	movt	r1, #1
   117ac:	mov	r2, #0
   117b0:	mov	r3, #10
   117b4:	bl	1140c <rb_event_add@plt>
   117b8:	ldr	r0, [r7]
   117bc:	ldr	r0, [r0, #20]
   117c0:	mov	r1, #0
   117c4:	bl	119e8 <__errno_location@plt+0x57c>
   117c8:	ldr	r1, [r7]
   117cc:	ldr	r0, [r1, #16]
   117d0:	bl	11a54 <__errno_location@plt+0x5e8>
   117d4:	ldr	r0, [r7]
   117d8:	bl	11b58 <__errno_location@plt+0x6ec>
   117dc:	ldrb	r0, [r6]
   117e0:	cmp	r0, #0
   117e4:	bne	117f4 <__errno_location@plt+0x388>
   117e8:	ldr	r0, [r7]
   117ec:	mov	r1, #0
   117f0:	bl	11bbc <__errno_location@plt+0x750>
   117f4:	mov	r0, #0
   117f8:	bl	112b0 <rb_lib_loop@plt>
   117fc:	mov	r0, r7
   11800:	mov	r1, #2
   11804:	bl	11400 <dup2@plt>
   11808:	cmp	r7, #3
   1180c:	bge	116c0 <__errno_location@plt+0x254>
   11810:	b	116c8 <__errno_location@plt+0x25c>
   11814:	push	{fp, lr}
   11818:	mov	fp, sp
   1181c:	sub	sp, sp, #8
   11820:	mov	r1, sp
   11824:	mov	r0, #7
   11828:	bl	11430 <getrlimit@plt>
   1182c:	ldr	r1, [sp]
   11830:	cmp	r0, #0
   11834:	movwne	r1, #65535	; 0xffff
   11838:	mov	r0, r1
   1183c:	mov	sp, fp
   11840:	pop	{fp, pc}
   11844:	push	{r4, r5, fp, lr}
   11848:	add	fp, sp, #8
   1184c:	sub	sp, sp, #144	; 0x90
   11850:	mov	r0, #1
   11854:	str	r0, [sp, #4]
   11858:	mov	r0, #0
   1185c:	str	r0, [sp, #136]	; 0x88
   11860:	add	r4, sp, #4
   11864:	add	r5, r4, #4
   11868:	mov	r0, r5
   1186c:	bl	11160 <sigemptyset@plt>
   11870:	mov	r0, r5
   11874:	mov	r1, #13
   11878:	bl	11310 <sigaddset@plt>
   1187c:	mov	r0, r5
   11880:	mov	r1, #14
   11884:	bl	11310 <sigaddset@plt>
   11888:	mov	r0, r5
   1188c:	mov	r1, #5
   11890:	bl	11310 <sigaddset@plt>
   11894:	mov	r0, r5
   11898:	mov	r1, #28
   1189c:	bl	11310 <sigaddset@plt>
   118a0:	mov	r0, #28
   118a4:	mov	r1, r4
   118a8:	mov	r2, #0
   118ac:	bl	113a0 <sigaction@plt>
   118b0:	mov	r0, #13
   118b4:	mov	r1, r4
   118b8:	mov	r2, #0
   118bc:	bl	113a0 <sigaction@plt>
   118c0:	mov	r0, #5
   118c4:	mov	r1, r4
   118c8:	mov	r2, #0
   118cc:	bl	113a0 <sigaction@plt>
   118d0:	movw	r0, #13108	; 0x3334
   118d4:	movt	r0, #1
   118d8:	str	r0, [sp, #4]
   118dc:	mov	r0, #14
   118e0:	mov	r1, r4
   118e4:	mov	r2, #0
   118e8:	bl	113a0 <sigaction@plt>
   118ec:	sub	sp, fp, #8
   118f0:	pop	{r4, r5, fp, pc}
   118f4:	push	{fp, lr}
   118f8:	mov	fp, sp
   118fc:	mov	r1, r0
   11900:	mov	r0, #1
   11904:	bl	11244 <calloc@plt>
   11908:	cmp	r0, #0
   1190c:	popne	{fp, pc}
   11910:	bl	11388 <rb_outofmemory@plt>
   11914:	push	{r4, r5, fp, lr}
   11918:	add	fp, sp, #8
   1191c:	movw	r4, #16700	; 0x413c
   11920:	movt	r4, #2
   11924:	ldr	r5, [r4]
   11928:	cmp	r5, #0
   1192c:	beq	11944 <__errno_location@plt+0x4d8>
   11930:	ldr	r0, [r5]
   11934:	ldr	r5, [r5, #8]
   11938:	bl	11c2c <__errno_location@plt+0x7c0>
   1193c:	cmp	r5, #0
   11940:	bne	11930 <__errno_location@plt+0x4c4>
   11944:	mov	r0, #0
   11948:	str	r0, [r4]
   1194c:	str	r0, [r4, #4]
   11950:	pop	{r4, r5, fp, pc}
   11954:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11958:	add	fp, sp, #24
   1195c:	mov	r6, #0
   11960:	movw	r8, #16712	; 0x4148
   11964:	movt	r8, #2
   11968:	movw	r4, #13429	; 0x3475
   1196c:	movt	r4, #1
   11970:	b	11980 <__errno_location@plt+0x514>
   11974:	add	r6, r6, #1
   11978:	cmp	r6, #2000	; 0x7d0
   1197c:	beq	119e4 <__errno_location@plt+0x578>
   11980:	add	r0, r6, r6, lsl #1
   11984:	ldr	r7, [r8, r0, lsl #2]
   11988:	cmp	r7, #0
   1198c:	bne	119a4 <__errno_location@plt+0x538>
   11990:	b	11974 <__errno_location@plt+0x508>
   11994:	ldr	r0, [r5, #28]
   11998:	bl	11328 <rb_ssl_clear_handshake_count@plt>
   1199c:	cmp	r7, #0
   119a0:	beq	11974 <__errno_location@plt+0x508>
   119a4:	ldr	r5, [r7]
   119a8:	ldr	r7, [r7, #8]
   119ac:	ldrb	r0, [r5, #72]	; 0x48
   119b0:	tst	r0, #1
   119b4:	beq	1199c <__errno_location@plt+0x530>
   119b8:	ldr	r0, [r5, #28]
   119bc:	bl	111f0 <rb_ssl_handshake_count@plt>
   119c0:	cmp	r0, #3
   119c4:	bcc	11994 <__errno_location@plt+0x528>
   119c8:	mov	r0, r5
   119cc:	mov	r1, #1
   119d0:	mov	r2, r4
   119d4:	bl	11c88 <__errno_location@plt+0x81c>
   119d8:	cmp	r7, #0
   119dc:	bne	119a4 <__errno_location@plt+0x538>
   119e0:	b	11974 <__errno_location@plt+0x508>
   119e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119e8:	push	{r4, r5, r6, r7, fp, lr}
   119ec:	add	fp, sp, #16
   119f0:	sub	sp, sp, #16384	; 0x4000
   119f4:	mov	r4, r0
   119f8:	mov	r5, sp
   119fc:	mov	r0, r4
   11a00:	mov	r1, r5
   11a04:	mov	r2, #16384	; 0x4000
   11a08:	bl	112c8 <rb_read@plt>
   11a0c:	cmp	r0, #0
   11a10:	bgt	119fc <__errno_location@plt+0x590>
   11a14:	beq	11a4c <__errno_location@plt+0x5e0>
   11a18:	bl	1146c <__errno_location@plt>
   11a1c:	ldr	r0, [r0]
   11a20:	bl	111a8 <rb_ignore_errno@plt>
   11a24:	cmp	r0, #0
   11a28:	beq	11a4c <__errno_location@plt+0x5e0>
   11a2c:	movw	r2, #6632	; 0x19e8
   11a30:	movt	r2, #1
   11a34:	mov	r0, r4
   11a38:	mov	r1, #1
   11a3c:	mov	r3, #0
   11a40:	bl	111d8 <rb_setselect@plt>
   11a44:	sub	sp, fp, #16
   11a48:	pop	{r4, r5, r6, r7, fp, pc}
   11a4c:	mov	r0, #0
   11a50:	bl	11460 <exit@plt>
   11a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a58:	add	fp, sp, #28
   11a5c:	sub	sp, sp, #4
   11a60:	mov	r8, r1
   11a64:	add	r5, r1, #24
   11a68:	mov	r9, #16384	; 0x4000
   11a6c:	mov	sl, #4
   11a70:	b	11a84 <__errno_location@plt+0x618>
   11a74:	mov	r0, #4
   11a78:	str	r0, [r6, #36]	; 0x24
   11a7c:	cmp	r7, #0
   11a80:	ble	11b0c <__errno_location@plt+0x6a0>
   11a84:	mov	r0, #40	; 0x28
   11a88:	bl	118f4 <__errno_location@plt+0x488>
   11a8c:	mov	r6, r0
   11a90:	mov	r0, #16384	; 0x4000
   11a94:	bl	118f4 <__errno_location@plt+0x488>
   11a98:	mov	r1, r0
   11a9c:	str	r0, [r6, #12]
   11aa0:	str	r9, [r6, #16]
   11aa4:	ldr	r0, [r8, #16]
   11aa8:	str	sl, [sp]
   11aac:	add	r4, r6, #20
   11ab0:	mov	r2, #16384	; 0x4000
   11ab4:	mov	r3, r4
   11ab8:	bl	113e8 <rb_recv_fd_buf@plt>
   11abc:	mov	r7, r0
   11ac0:	cmp	r0, #0
   11ac4:	ble	11afc <__errno_location@plt+0x690>
   11ac8:	str	r7, [r6, #16]
   11acc:	mov	r0, r6
   11ad0:	mov	r1, r6
   11ad4:	mov	r2, r5
   11ad8:	bl	1204c <__errno_location@plt+0xbe0>
   11adc:	mov	r0, #0
   11ae0:	ldr	r1, [r4, r0, lsl #2]
   11ae4:	cmp	r1, #0
   11ae8:	beq	11a78 <__errno_location@plt+0x60c>
   11aec:	add	r0, r0, #1
   11af0:	cmp	r0, #4
   11af4:	bne	11ae0 <__errno_location@plt+0x674>
   11af8:	b	11a74 <__errno_location@plt+0x608>
   11afc:	ldr	r0, [r6, #12]
   11b00:	bl	11c7c <__errno_location@plt+0x810>
   11b04:	mov	r0, r6
   11b08:	bl	11c7c <__errno_location@plt+0x810>
   11b0c:	cmp	r7, #0
   11b10:	beq	11b50 <__errno_location@plt+0x6e4>
   11b14:	bl	1146c <__errno_location@plt>
   11b18:	ldr	r0, [r0]
   11b1c:	bl	111a8 <rb_ignore_errno@plt>
   11b20:	cmp	r0, #0
   11b24:	beq	11b50 <__errno_location@plt+0x6e4>
   11b28:	mov	r0, r8
   11b2c:	bl	12234 <__errno_location@plt+0xdc8>
   11b30:	ldr	r0, [r8, #16]
   11b34:	movw	r2, #6740	; 0x1a54
   11b38:	movt	r2, #1
   11b3c:	mov	r1, #1
   11b40:	mov	r3, r8
   11b44:	sub	sp, fp, #28
   11b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b4c:	b	111d8 <rb_setselect@plt>
   11b50:	mov	r0, #0
   11b54:	bl	11460 <exit@plt>
   11b58:	push	{r4, r5, r6, sl, fp, lr}
   11b5c:	add	fp, sp, #16
   11b60:	sub	sp, sp, #256	; 0x100
   11b64:	mov	r4, r0
   11b68:	mov	r5, sp
   11b6c:	add	r6, r5, #1
   11b70:	mov	r0, r6
   11b74:	mov	r1, #0
   11b78:	mov	r2, #255	; 0xff
   11b7c:	bl	1125c <memset@plt>
   11b80:	mov	r0, #86	; 0x56
   11b84:	strb	r0, [sp]
   11b88:	bl	111b4 <rb_lib_version@plt>
   11b8c:	mov	r1, r0
   11b90:	mov	r0, r6
   11b94:	mov	r2, #254	; 0xfe
   11b98:	bl	11214 <strncpy@plt>
   11b9c:	mov	r0, r5
   11ba0:	bl	112e0 <strlen@plt>
   11ba4:	mov	r2, r0
   11ba8:	mov	r0, r4
   11bac:	mov	r1, r5
   11bb0:	bl	11fe8 <__errno_location@plt+0xb7c>
   11bb4:	sub	sp, fp, #16
   11bb8:	pop	{r4, r5, r6, sl, fp, pc}
   11bbc:	push	{r4, r5, r6, sl, fp, lr}
   11bc0:	add	fp, sp, #16
   11bc4:	mov	r4, r0
   11bc8:	cmp	r1, #0
   11bcc:	beq	11c14 <__errno_location@plt+0x7a8>
   11bd0:	mov	r5, r1
   11bd4:	ldr	r1, [r1, #20]
   11bd8:	ldr	r2, [r5, #24]
   11bdc:	mov	r0, r4
   11be0:	bl	12820 <__errno_location@plt+0x13b4>
   11be4:	mov	r6, r0
   11be8:	ldr	r0, [r5, #12]
   11bec:	add	r0, r0, #1
   11bf0:	bl	12880 <__errno_location@plt+0x1414>
   11bf4:	mov	r1, r0
   11bf8:	mov	r0, r6
   11bfc:	bl	12888 <__errno_location@plt+0x141c>
   11c00:	movw	r2, #13984	; 0x36a0
   11c04:	movt	r2, #1
   11c08:	mov	r0, r6
   11c0c:	mov	r1, #1
   11c10:	bl	11c88 <__errno_location@plt+0x81c>
   11c14:	movw	r1, #13982	; 0x369e
   11c18:	movt	r1, #1
   11c1c:	mov	r0, r4
   11c20:	mov	r2, #1
   11c24:	pop	{r4, r5, r6, sl, fp, lr}
   11c28:	b	11fe8 <__errno_location@plt+0xb7c>
   11c2c:	push	{r4, r5, fp, lr}
   11c30:	add	fp, sp, #8
   11c34:	mov	r4, r0
   11c38:	ldr	r0, [r0, #16]
   11c3c:	bl	1134c <rb_free_rawbuffer@plt>
   11c40:	ldr	r0, [r4, #20]
   11c44:	bl	1134c <rb_free_rawbuffer@plt>
   11c48:	ldrb	r0, [r4, #72]	; 0x48
   11c4c:	tst	r0, #2
   11c50:	beq	11c70 <__errno_location@plt+0x804>
   11c54:	ldr	r5, [r4, #76]	; 0x4c
   11c58:	mov	r0, r5
   11c5c:	bl	111c0 <inflateEnd@plt>
   11c60:	add	r0, r5, #56	; 0x38
   11c64:	bl	112bc <deflateEnd@plt>
   11c68:	mov	r0, r5
   11c6c:	bl	11c7c <__errno_location@plt+0x810>
   11c70:	mov	r0, r4
   11c74:	pop	{r4, r5, fp, lr}
   11c78:	b	11c7c <__errno_location@plt+0x810>
   11c7c:	cmp	r0, #0
   11c80:	bxeq	lr
   11c84:	b	112a4 <free@plt>
   11c88:	sub	sp, sp, #4
   11c8c:	push	{r4, r5, r6, sl, fp, lr}
   11c90:	add	fp, sp, #16
   11c94:	sub	sp, sp, #388	; 0x184
   11c98:	mov	r4, r0
   11c9c:	str	r3, [fp, #8]
   11ca0:	ldrb	r0, [r0, #72]	; 0x48
   11ca4:	tst	r0, #8
   11ca8:	bne	11dd0 <__errno_location@plt+0x964>
   11cac:	mov	r5, r2
   11cb0:	mov	r6, r1
   11cb4:	ldr	r0, [r4, #16]
   11cb8:	ldr	r1, [r4, #28]
   11cbc:	bl	11448 <rb_rawbuf_flush@plt>
   11cc0:	ldr	r0, [r4, #20]
   11cc4:	ldr	r1, [r4, #32]
   11cc8:	bl	11448 <rb_rawbuf_flush@plt>
   11ccc:	ldr	r0, [r4, #28]
   11cd0:	bl	11304 <rb_close@plt>
   11cd4:	ldrb	r0, [r4, #72]	; 0x48
   11cd8:	orr	r1, r0, #8
   11cdc:	strb	r1, [r4, #72]	; 0x48
   11ce0:	tst	r0, #64	; 0x40
   11ce4:	bne	11d1c <__errno_location@plt+0x8b0>
   11ce8:	ldr	r0, [r4, #24]
   11cec:	movw	r1, #19923	; 0x4dd3
   11cf0:	movt	r1, #4194	; 0x1062
   11cf4:	umull	r1, r2, r0, r1
   11cf8:	lsr	r1, r2, #7
   11cfc:	mov	r2, #2000	; 0x7d0
   11d00:	mls	r0, r1, r2, r0
   11d04:	add	r0, r0, r0, lsl #1
   11d08:	movw	r1, #16712	; 0x4148
   11d0c:	movt	r1, #2
   11d10:	add	r1, r1, r0, lsl #2
   11d14:	mov	r0, r4
   11d18:	bl	11de0 <__errno_location@plt+0x974>
   11d1c:	ldr	r0, [r4, #32]
   11d20:	cmp	r6, #0
   11d24:	cmpne	r5, #0
   11d28:	bne	11d48 <__errno_location@plt+0x8dc>
   11d2c:	bl	11304 <rb_close@plt>
   11d30:	movw	r2, #16700	; 0x413c
   11d34:	movt	r2, #2
   11d38:	mov	r0, r4
   11d3c:	mov	r1, r4
   11d40:	bl	11e80 <__errno_location@plt+0xa14>
   11d44:	b	11dd0 <__errno_location@plt+0x964>
   11d48:	movw	r2, #8012	; 0x1f4c
   11d4c:	movt	r2, #1
   11d50:	mov	r1, #1
   11d54:	mov	r3, r4
   11d58:	bl	111d8 <rb_setselect@plt>
   11d5c:	ldr	r0, [r4, #32]
   11d60:	mov	r1, #2
   11d64:	mov	r2, #0
   11d68:	mov	r3, #0
   11d6c:	bl	111d8 <rb_setselect@plt>
   11d70:	add	r3, fp, #8
   11d74:	str	r3, [fp, #-20]	; 0xffffffec
   11d78:	sub	r6, fp, #148	; 0x94
   11d7c:	mov	r0, r6
   11d80:	mov	r1, #128	; 0x80
   11d84:	mov	r2, r5
   11d88:	bl	11208 <vsnprintf@plt>
   11d8c:	mov	r0, #68	; 0x44
   11d90:	strb	r0, [sp]
   11d94:	ldr	r1, [r4, #24]
   11d98:	mov	r5, sp
   11d9c:	add	r0, r5, #1
   11da0:	bl	11fe0 <__errno_location@plt+0xb74>
   11da4:	add	r0, r5, #5
   11da8:	mov	r1, r6
   11dac:	mov	r2, #251	; 0xfb
   11db0:	bl	11274 <rb_strlcpy@plt>
   11db4:	mov	r0, r6
   11db8:	bl	112e0 <strlen@plt>
   11dbc:	ldr	r1, [r4, #12]
   11dc0:	add	r2, r0, #6
   11dc4:	mov	r0, r1
   11dc8:	mov	r1, r5
   11dcc:	bl	11fe8 <__errno_location@plt+0xb7c>
   11dd0:	sub	sp, fp, #16
   11dd4:	pop	{r4, r5, r6, sl, fp, lr}
   11dd8:	add	sp, sp, #4
   11ddc:	bx	lr
   11de0:	push	{fp, lr}
   11de4:	mov	fp, sp
   11de8:	cmp	r0, #0
   11dec:	beq	11e40 <__errno_location@plt+0x9d4>
   11df0:	cmp	r1, #0
   11df4:	beq	11e60 <__errno_location@plt+0x9f4>
   11df8:	ldr	ip, [r0, #4]
   11dfc:	ldr	r3, [r0, #8]
   11e00:	add	r2, r3, #4
   11e04:	cmp	r3, #0
   11e08:	addeq	r2, r1, #4
   11e0c:	str	ip, [r2]
   11e10:	ldmib	r0, {r2, ip}
   11e14:	cmp	r2, #0
   11e18:	mov	r3, r1
   11e1c:	addne	r3, r2, #8
   11e20:	str	ip, [r3]
   11e24:	mov	r2, #0
   11e28:	str	r2, [r0, #4]
   11e2c:	str	r2, [r0, #8]
   11e30:	ldr	r0, [r1, #8]
   11e34:	sub	r0, r0, #1
   11e38:	str	r0, [r1, #8]
   11e3c:	pop	{fp, pc}
   11e40:	movw	r0, #13448	; 0x3488
   11e44:	movt	r0, #1
   11e48:	movw	r1, #13458	; 0x3492
   11e4c:	movt	r1, #1
   11e50:	movw	r3, #13486	; 0x34ae
   11e54:	movt	r3, #1
   11e58:	mov	r2, #235	; 0xeb
   11e5c:	bl	11268 <__assert_fail@plt>
   11e60:	movw	r0, #13540	; 0x34e4
   11e64:	movt	r0, #1
   11e68:	movw	r1, #13458	; 0x3492
   11e6c:	movt	r1, #1
   11e70:	movw	r3, #13486	; 0x34ae
   11e74:	movt	r3, #1
   11e78:	mov	r2, #236	; 0xec
   11e7c:	bl	11268 <__assert_fail@plt>
   11e80:	push	{fp, lr}
   11e84:	mov	fp, sp
   11e88:	cmp	r0, #0
   11e8c:	beq	11eec <__errno_location@plt+0xa80>
   11e90:	cmp	r1, #0
   11e94:	beq	11f0c <__errno_location@plt+0xaa0>
   11e98:	cmp	r2, #0
   11e9c:	beq	11f2c <__errno_location@plt+0xac0>
   11ea0:	mov	r3, #0
   11ea4:	stm	r1, {r0, r3}
   11ea8:	ldr	r0, [r2]
   11eac:	str	r0, [r1, #8]
   11eb0:	ldr	r0, [r2]
   11eb4:	cmp	r0, #0
   11eb8:	beq	11ec8 <__errno_location@plt+0xa5c>
   11ebc:	add	r0, r0, #4
   11ec0:	str	r1, [r0]
   11ec4:	b	11ed8 <__errno_location@plt+0xa6c>
   11ec8:	mov	r0, r2
   11ecc:	ldr	r3, [r0, #4]!
   11ed0:	cmp	r3, #0
   11ed4:	streq	r1, [r0]
   11ed8:	str	r1, [r2]
   11edc:	ldr	r0, [r2, #8]
   11ee0:	add	r0, r0, #1
   11ee4:	str	r0, [r2, #8]
   11ee8:	pop	{fp, pc}
   11eec:	movw	r0, #13553	; 0x34f1
   11ef0:	movt	r0, #1
   11ef4:	movw	r1, #13458	; 0x3492
   11ef8:	movt	r1, #1
   11efc:	movw	r3, #13566	; 0x34fe
   11f00:	movt	r3, #1
   11f04:	mov	r2, #143	; 0x8f
   11f08:	bl	11268 <__assert_fail@plt>
   11f0c:	movw	r0, #13448	; 0x3488
   11f10:	movt	r0, #1
   11f14:	movw	r1, #13458	; 0x3492
   11f18:	movt	r1, #1
   11f1c:	movw	r3, #13566	; 0x34fe
   11f20:	movt	r3, #1
   11f24:	mov	r2, #144	; 0x90
   11f28:	bl	11268 <__assert_fail@plt>
   11f2c:	movw	r0, #13540	; 0x34e4
   11f30:	movt	r0, #1
   11f34:	movw	r1, #13458	; 0x3492
   11f38:	movt	r1, #1
   11f3c:	movw	r3, #13566	; 0x34fe
   11f40:	movt	r3, #1
   11f44:	mov	r2, #145	; 0x91
   11f48:	bl	11268 <__assert_fail@plt>
   11f4c:	push	{r4, r5, r6, r7, fp, lr}
   11f50:	add	fp, sp, #16
   11f54:	sub	sp, sp, #16384	; 0x4000
   11f58:	cmp	r1, #0
   11f5c:	beq	11fb4 <__errno_location@plt+0xb48>
   11f60:	mov	r4, r1
   11f64:	mov	r5, sp
   11f68:	ldr	r0, [r4, #32]
   11f6c:	mov	r1, r5
   11f70:	mov	r2, #16384	; 0x4000
   11f74:	bl	112c8 <rb_read@plt>
   11f78:	cmp	r0, #0
   11f7c:	beq	11fbc <__errno_location@plt+0xb50>
   11f80:	cmn	r0, #1
   11f84:	bgt	11f68 <__errno_location@plt+0xafc>
   11f88:	bl	1146c <__errno_location@plt>
   11f8c:	ldr	r0, [r0]
   11f90:	bl	111a8 <rb_ignore_errno@plt>
   11f94:	cmp	r0, #0
   11f98:	beq	11fbc <__errno_location@plt+0xb50>
   11f9c:	ldr	r0, [r4, #32]
   11fa0:	movw	r2, #8012	; 0x1f4c
   11fa4:	movt	r2, #1
   11fa8:	mov	r1, #1
   11fac:	mov	r3, r4
   11fb0:	bl	111d8 <rb_setselect@plt>
   11fb4:	sub	sp, fp, #16
   11fb8:	pop	{r4, r5, r6, r7, fp, pc}
   11fbc:	ldr	r0, [r4, #32]
   11fc0:	bl	11304 <rb_close@plt>
   11fc4:	movw	r2, #16700	; 0x413c
   11fc8:	movt	r2, #2
   11fcc:	mov	r0, r4
   11fd0:	mov	r1, r4
   11fd4:	bl	11e80 <__errno_location@plt+0xa14>
   11fd8:	sub	sp, fp, #16
   11fdc:	pop	{r4, r5, r6, r7, fp, pc}
   11fe0:	str	r1, [r0]
   11fe4:	bx	lr
   11fe8:	push	{r4, r5, r6, r7, fp, lr}
   11fec:	add	fp, sp, #16
   11ff0:	mov	r4, r2
   11ff4:	mov	r5, r1
   11ff8:	mov	r6, r0
   11ffc:	mov	r0, #40	; 0x28
   12000:	bl	118f4 <__errno_location@plt+0x488>
   12004:	mov	r7, r0
   12008:	mov	r0, r4
   1200c:	bl	118f4 <__errno_location@plt+0x488>
   12010:	str	r0, [r7, #12]
   12014:	str	r4, [r7, #16]
   12018:	mov	r1, r5
   1201c:	mov	r2, r4
   12020:	bl	112f8 <memcpy@plt>
   12024:	mov	r0, #0
   12028:	str	r0, [r7, #36]	; 0x24
   1202c:	add	r2, r6, #36	; 0x24
   12030:	mov	r0, r7
   12034:	mov	r1, r7
   12038:	bl	1204c <__errno_location@plt+0xbe0>
   1203c:	ldr	r0, [r6, #16]
   12040:	mov	r1, r6
   12044:	pop	{r4, r5, r6, r7, fp, lr}
   12048:	b	12120 <__errno_location@plt+0xcb4>
   1204c:	push	{fp, lr}
   12050:	mov	fp, sp
   12054:	cmp	r1, #0
   12058:	beq	120c0 <__errno_location@plt+0xc54>
   1205c:	cmp	r2, #0
   12060:	beq	120e0 <__errno_location@plt+0xc74>
   12064:	cmp	r0, #0
   12068:	beq	12100 <__errno_location@plt+0xc94>
   1206c:	mov	r3, #0
   12070:	str	r3, [r1, #8]
   12074:	str	r0, [r1]
   12078:	ldr	r0, [r2, #4]
   1207c:	str	r0, [r1, #4]
   12080:	ldr	r0, [r2, #4]
   12084:	cmp	r0, #0
   12088:	beq	12098 <__errno_location@plt+0xc2c>
   1208c:	add	r0, r0, #8
   12090:	str	r1, [r0]
   12094:	b	120a4 <__errno_location@plt+0xc38>
   12098:	ldr	r0, [r2]
   1209c:	cmp	r0, #0
   120a0:	beq	120b8 <__errno_location@plt+0xc4c>
   120a4:	str	r1, [r2, #4]
   120a8:	ldr	r0, [r2, #8]
   120ac:	add	r0, r0, #1
   120b0:	str	r0, [r2, #8]
   120b4:	pop	{fp, pc}
   120b8:	mov	r0, r2
   120bc:	b	12090 <__errno_location@plt+0xc24>
   120c0:	movw	r0, #13448	; 0x3488
   120c4:	movt	r0, #1
   120c8:	movw	r1, #13458	; 0x3492
   120cc:	movt	r1, #1
   120d0:	movw	r3, #13625	; 0x3539
   120d4:	movt	r3, #1
   120d8:	mov	r2, #211	; 0xd3
   120dc:	bl	11268 <__assert_fail@plt>
   120e0:	movw	r0, #13540	; 0x34e4
   120e4:	movt	r0, #1
   120e8:	movw	r1, #13458	; 0x3492
   120ec:	movt	r1, #1
   120f0:	movw	r3, #13625	; 0x3539
   120f4:	movt	r3, #1
   120f8:	mov	r2, #212	; 0xd4
   120fc:	bl	11268 <__assert_fail@plt>
   12100:	movw	r0, #13553	; 0x34f1
   12104:	movt	r0, #1
   12108:	movw	r1, #13458	; 0x3492
   1210c:	movt	r1, #1
   12110:	movw	r3, #13625	; 0x3539
   12114:	movt	r3, #1
   12118:	mov	r2, #213	; 0xd5
   1211c:	bl	11268 <__assert_fail@plt>
   12120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12124:	add	fp, sp, #28
   12128:	sub	sp, sp, #12
   1212c:	mov	r9, r1
   12130:	mov	r8, r1
   12134:	ldr	r4, [r8, #36]!	; 0x24
   12138:	cmp	r4, #0
   1213c:	bne	12150 <__errno_location@plt+0xce4>
   12140:	b	12200 <__errno_location@plt+0xd94>
   12144:	cmp	sl, #0
   12148:	mov	r4, sl
   1214c:	beq	12200 <__errno_location@plt+0xd94>
   12150:	ldr	r0, [r9, #16]
   12154:	ldr	r6, [r4]
   12158:	ldr	sl, [r4, #8]
   1215c:	ldr	r3, [r6, #12]
   12160:	ldr	r1, [r6, #16]
   12164:	ldr	r2, [r6, #36]	; 0x24
   12168:	movw	r7, #16688	; 0x4130
   1216c:	movt	r7, #2
   12170:	ldr	r7, [r7]
   12174:	stm	sp, {r1, r7}
   12178:	add	r5, r6, #20
   1217c:	mov	r1, r5
   12180:	bl	111fc <rb_send_fd_buf@plt>
   12184:	mov	r7, r0
   12188:	cmp	r0, #1
   1218c:	blt	121d4 <__errno_location@plt+0xd68>
   12190:	mov	r0, r4
   12194:	mov	r1, r8
   12198:	bl	11de0 <__errno_location@plt+0x974>
   1219c:	ldr	r0, [r6, #36]	; 0x24
   121a0:	cmp	r0, #1
   121a4:	blt	121c4 <__errno_location@plt+0xd58>
   121a8:	mov	r4, #0
   121ac:	ldr	r0, [r5, r4, lsl #2]
   121b0:	bl	11304 <rb_close@plt>
   121b4:	add	r4, r4, #1
   121b8:	ldr	r0, [r6, #36]	; 0x24
   121bc:	cmp	r4, r0
   121c0:	blt	121ac <__errno_location@plt+0xd40>
   121c4:	ldr	r0, [r6, #12]
   121c8:	bl	11c7c <__errno_location@plt+0x810>
   121cc:	mov	r0, r6
   121d0:	bl	11c7c <__errno_location@plt+0x810>
   121d4:	cmp	r7, #0
   121d8:	beq	121f8 <__errno_location@plt+0xd8c>
   121dc:	cmn	r7, #1
   121e0:	bgt	12144 <__errno_location@plt+0xcd8>
   121e4:	bl	1146c <__errno_location@plt>
   121e8:	ldr	r0, [r0]
   121ec:	bl	111a8 <rb_ignore_errno@plt>
   121f0:	cmp	r0, #0
   121f4:	bne	12144 <__errno_location@plt+0xcd8>
   121f8:	mov	r0, #0
   121fc:	bl	11460 <exit@plt>
   12200:	ldr	r0, [r9, #44]	; 0x2c
   12204:	cmp	r0, #0
   12208:	beq	1222c <__errno_location@plt+0xdc0>
   1220c:	ldr	r0, [r9, #16]
   12210:	movw	r2, #8480	; 0x2120
   12214:	movt	r2, #1
   12218:	mov	r1, #2
   1221c:	mov	r3, r9
   12220:	sub	sp, fp, #28
   12224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12228:	b	111d8 <rb_setselect@plt>
   1222c:	sub	sp, fp, #28
   12230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12234:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12238:	add	fp, sp, #24
   1223c:	mov	r5, r0
   12240:	ldr	r4, [r5, #24]!
   12244:	cmp	r4, #0
   12248:	beq	123f0 <__errno_location@plt+0xf84>
   1224c:	mov	r8, r0
   12250:	movw	r9, #16692	; 0x4134
   12254:	movt	r9, #2
   12258:	b	12288 <__errno_location@plt+0xe1c>
   1225c:	mov	r0, r6
   12260:	bl	123f4 <__errno_location@plt+0xf88>
   12264:	mov	r0, r7
   12268:	mov	r1, r5
   1226c:	bl	11de0 <__errno_location@plt+0x974>
   12270:	ldr	r0, [r6, #12]
   12274:	bl	11c7c <__errno_location@plt+0x810>
   12278:	mov	r0, r6
   1227c:	bl	11c7c <__errno_location@plt+0x810>
   12280:	cmp	r4, #0
   12284:	beq	123f0 <__errno_location@plt+0xf84>
   12288:	mov	r7, r4
   1228c:	ldr	r6, [r4]
   12290:	ldr	r4, [r4, #8]
   12294:	ldr	r0, [r6, #12]
   12298:	ldrb	r0, [r0]
   1229c:	sub	r0, r0, #65	; 0x41
   122a0:	cmp	r0, #25
   122a4:	bhi	12264 <__errno_location@plt+0xdf8>
   122a8:	add	r1, pc, #0
   122ac:	ldr	pc, [r1, r0, lsl #2]
   122b0:	andeq	r2, r1, r8, lsl r3
   122b4:	andeq	r2, r1, r4, ror #4
   122b8:	andeq	r2, r1, ip, asr #6
   122bc:	andeq	r2, r1, r4, ror #4
   122c0:	andeq	r2, r1, r4, ror #4
   122c4:	andeq	r2, r1, r4, ror r3
   122c8:	andeq	r2, r1, r4, ror #4
   122cc:	andeq	r2, r1, r4, ror #4
   122d0:	andeq	r2, r1, r4, ror #4
   122d4:	andeq	r2, r1, r4, ror #4
   122d8:	andeq	r2, r1, ip, lsl #7
   122dc:	andeq	r2, r1, r4, ror #4
   122e0:	andeq	r2, r1, r4, ror #4
   122e4:	andeq	r2, r1, r4, ror #4
   122e8:	andeq	r2, r1, r4, ror #4
   122ec:	andeq	r2, r1, r4, ror #4
   122f0:	andeq	r2, r1, r4, ror #4
   122f4:	andeq	r2, r1, r4, ror #4
   122f8:	andeq	r2, r1, r8, lsr #7
   122fc:	andeq	r2, r1, r4, ror #4
   12300:	andeq	r2, r1, r4, ror #4
   12304:	andeq	r2, r1, r4, ror #4
   12308:	andeq	r2, r1, r4, ror #4
   1230c:	andeq	r2, r1, r4, ror #4
   12310:	andeq	r2, r1, r4, ror #4
   12314:			; <UNDEFINED> instruction: 0x000123b8
   12318:	ldr	r0, [r6, #36]	; 0x24
   1231c:	cmp	r0, #2
   12320:	bne	1225c <__errno_location@plt+0xdf0>
   12324:	ldr	r0, [r6, #16]
   12328:	cmp	r0, #5
   1232c:	bne	1225c <__errno_location@plt+0xdf0>
   12330:	ldrb	r0, [r9]
   12334:	cmp	r0, #0
   12338:	beq	123e0 <__errno_location@plt+0xf74>
   1233c:	mov	r0, r8
   12340:	mov	r1, r6
   12344:	bl	12430 <__errno_location@plt+0xfc4>
   12348:	b	12264 <__errno_location@plt+0xdf8>
   1234c:	ldr	r0, [r6, #16]
   12350:	cmp	r0, #5
   12354:	bne	1225c <__errno_location@plt+0xdf0>
   12358:	ldrb	r0, [r9]
   1235c:	cmp	r0, #0
   12360:	beq	123e0 <__errno_location@plt+0xf74>
   12364:	mov	r0, r8
   12368:	mov	r1, r6
   1236c:	bl	124c4 <__errno_location@plt+0x1058>
   12370:	b	12264 <__errno_location@plt+0xdf8>
   12374:	ldr	r0, [r6, #16]
   12378:	cmp	r0, #5
   1237c:	bne	1225c <__errno_location@plt+0xdf0>
   12380:	mov	r0, r6
   12384:	bl	12558 <__errno_location@plt+0x10ec>
   12388:	b	12264 <__errno_location@plt+0xdf8>
   1238c:	ldrb	r0, [r9]
   12390:	cmp	r0, #0
   12394:	beq	123e0 <__errno_location@plt+0xf74>
   12398:	mov	r0, r8
   1239c:	mov	r1, r6
   123a0:	bl	1257c <__errno_location@plt+0x1110>
   123a4:	b	12264 <__errno_location@plt+0xdf8>
   123a8:	mov	r0, r8
   123ac:	mov	r1, r6
   123b0:	bl	1262c <__errno_location@plt+0x11c0>
   123b4:	b	12264 <__errno_location@plt+0xdf8>
   123b8:	ldr	r0, [r6, #36]	; 0x24
   123bc:	cmp	r0, #2
   123c0:	bne	1225c <__errno_location@plt+0xdf0>
   123c4:	ldr	r0, [r6, #16]
   123c8:	cmp	r0, #5
   123cc:	bls	1225c <__errno_location@plt+0xdf0>
   123d0:	mov	r0, r8
   123d4:	mov	r1, r6
   123d8:	bl	126d0 <__errno_location@plt+0x1264>
   123dc:	b	12264 <__errno_location@plt+0xdf8>
   123e0:	mov	r0, r8
   123e4:	mov	r1, r6
   123e8:	bl	11bbc <__errno_location@plt+0x750>
   123ec:	b	12264 <__errno_location@plt+0xdf8>
   123f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   123f4:	push	{r4, r5, r6, sl, fp, lr}
   123f8:	add	fp, sp, #16
   123fc:	mov	r4, r0
   12400:	ldr	r0, [r0, #36]	; 0x24
   12404:	cmp	r0, #1
   12408:	blt	1242c <__errno_location@plt+0xfc0>
   1240c:	add	r5, r4, #20
   12410:	mov	r6, #0
   12414:	ldr	r0, [r5, r6, lsl #2]
   12418:	bl	11304 <rb_close@plt>
   1241c:	add	r6, r6, #1
   12420:	ldr	r0, [r4, #36]	; 0x24
   12424:	cmp	r6, r0
   12428:	blt	12414 <__errno_location@plt+0xfa8>
   1242c:	pop	{r4, r5, r6, sl, fp, pc}
   12430:	push	{r4, r5, fp, lr}
   12434:	add	fp, sp, #8
   12438:	mov	r4, r1
   1243c:	ldr	r1, [r1, #20]
   12440:	ldr	r2, [r4, #24]
   12444:	bl	12820 <__errno_location@plt+0x13b4>
   12448:	mov	r5, r0
   1244c:	ldr	r0, [r4, #12]
   12450:	add	r0, r0, #1
   12454:	bl	12880 <__errno_location@plt+0x1414>
   12458:	mov	r1, r0
   1245c:	mov	r0, r5
   12460:	bl	12888 <__errno_location@plt+0x141c>
   12464:	ldrb	r0, [r5, #72]	; 0x48
   12468:	orr	r0, r0, #1
   1246c:	strb	r0, [r5, #72]	; 0x48
   12470:	ldr	r0, [r5, #28]
   12474:	bl	11178 <rb_get_type@plt>
   12478:	tst	r0, #64	; 0x40
   1247c:	beq	1248c <__errno_location@plt+0x1020>
   12480:	ldr	r0, [r5, #28]
   12484:	mov	r1, #4
   12488:	bl	112d4 <rb_set_type@plt>
   1248c:	ldr	r0, [r5, #32]
   12490:	bl	11178 <rb_get_type@plt>
   12494:	cmp	r0, #64	; 0x40
   12498:	bne	124a8 <__errno_location@plt+0x103c>
   1249c:	ldr	r0, [r5, #32]
   124a0:	mov	r1, #4
   124a4:	bl	112d4 <rb_set_type@plt>
   124a8:	ldr	r0, [r4, #20]
   124ac:	movw	r1, #10428	; 0x28bc
   124b0:	movt	r1, #1
   124b4:	mov	r2, r5
   124b8:	mov	r3, #10
   124bc:	pop	{r4, r5, fp, lr}
   124c0:	b	113f4 <rb_ssl_start_accepted@plt>
   124c4:	push	{r4, r5, fp, lr}
   124c8:	add	fp, sp, #8
   124cc:	mov	r4, r1
   124d0:	ldr	r1, [r1, #20]
   124d4:	ldr	r2, [r4, #24]
   124d8:	bl	12820 <__errno_location@plt+0x13b4>
   124dc:	mov	r5, r0
   124e0:	ldr	r0, [r4, #12]
   124e4:	add	r0, r0, #1
   124e8:	bl	12880 <__errno_location@plt+0x1414>
   124ec:	mov	r1, r0
   124f0:	mov	r0, r5
   124f4:	bl	12888 <__errno_location@plt+0x141c>
   124f8:	ldrb	r0, [r5, #72]	; 0x48
   124fc:	orr	r0, r0, #1
   12500:	strb	r0, [r5, #72]	; 0x48
   12504:	ldr	r0, [r5, #28]
   12508:	bl	11178 <rb_get_type@plt>
   1250c:	cmp	r0, #64	; 0x40
   12510:	bne	12520 <__errno_location@plt+0x10b4>
   12514:	ldr	r0, [r5, #28]
   12518:	mov	r1, #4
   1251c:	bl	112d4 <rb_set_type@plt>
   12520:	ldr	r0, [r5, #32]
   12524:	bl	11178 <rb_get_type@plt>
   12528:	cmp	r0, #64	; 0x40
   1252c:	bne	1253c <__errno_location@plt+0x10d0>
   12530:	ldr	r0, [r5, #32]
   12534:	mov	r1, #4
   12538:	bl	112d4 <rb_set_type@plt>
   1253c:	ldr	r0, [r4, #20]
   12540:	movw	r1, #12820	; 0x3214
   12544:	movt	r1, #1
   12548:	mov	r2, r5
   1254c:	mov	r3, #10
   12550:	pop	{r4, r5, fp, lr}
   12554:	b	113ac <rb_ssl_start_connected@plt>
   12558:	push	{fp, lr}
   1255c:	mov	fp, sp
   12560:	ldr	r0, [r0, #12]
   12564:	add	r0, r0, #1
   12568:	bl	12880 <__errno_location@plt+0x1414>
   1256c:	movw	r1, #40712	; 0x9f08
   12570:	movt	r1, #2
   12574:	str	r0, [r1]
   12578:	pop	{fp, pc}
   1257c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12580:	add	fp, sp, #28
   12584:	sub	sp, sp, #4
   12588:	mov	r8, r0
   1258c:	ldr	r0, [r1, #12]
   12590:	add	sl, r0, #2
   12594:	mov	r0, sl
   12598:	bl	112e0 <strlen@plt>
   1259c:	add	r0, r0, sl
   125a0:	add	r6, r0, #1
   125a4:	mov	r0, r6
   125a8:	bl	112e0 <strlen@plt>
   125ac:	mov	r9, r0
   125b0:	add	r0, r0, r6
   125b4:	add	r4, r0, #1
   125b8:	mov	r0, r4
   125bc:	bl	112e0 <strlen@plt>
   125c0:	mov	r7, r0
   125c4:	add	r0, r0, r4
   125c8:	add	r5, r0, #1
   125cc:	mov	r0, r5
   125d0:	bl	112e0 <strlen@plt>
   125d4:	cmp	r0, #0
   125d8:	moveq	r5, r0
   125dc:	cmp	r7, #0
   125e0:	moveq	r4, r7
   125e4:	cmp	r9, #0
   125e8:	moveq	r6, sl
   125ec:	mov	r0, sl
   125f0:	mov	r1, r6
   125f4:	mov	r2, r4
   125f8:	mov	r3, r5
   125fc:	bl	11454 <rb_setup_ssl_server@plt>
   12600:	cmp	r0, #0
   12604:	beq	12610 <__errno_location@plt+0x11a4>
   12608:	sub	sp, fp, #28
   1260c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12610:	movw	r1, #13948	; 0x367c
   12614:	movt	r1, #1
   12618:	mov	r0, r8
   1261c:	mov	r2, #1
   12620:	sub	sp, fp, #28
   12624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12628:	b	11fe8 <__errno_location@plt+0xb7c>
   1262c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12630:	add	fp, sp, #28
   12634:	sub	sp, sp, #548	; 0x224
   12638:	mov	sl, r0
   1263c:	ldr	r5, [r1, #12]
   12640:	add	r0, r5, #1
   12644:	bl	12880 <__errno_location@plt+0x1414>
   12648:	bl	132b4 <__errno_location@plt+0x1e48>
   1264c:	cmp	r0, #0
   12650:	beq	126c8 <__errno_location@plt+0x125c>
   12654:	add	r6, r0, #40	; 0x28
   12658:	add	r1, r0, #48	; 0x30
   1265c:	add	r2, r0, #56	; 0x38
   12660:	add	r0, r0, #64	; 0x40
   12664:	ldm	r0, {r0, r3}
   12668:	ldrd	r8, [r1]
   1266c:	ldr	r1, [r2, #4]
   12670:	ldr	r2, [r2]
   12674:	ldm	r6, {r4, r7}
   12678:	stm	sp, {r0, r3, r8, r9}
   1267c:	str	r2, [sp, #16]
   12680:	add	r0, sp, #20
   12684:	stm	r0, {r1, r4, r7}
   12688:	add	r3, r5, #5
   1268c:	add	r5, sp, #32
   12690:	movw	r2, #13950	; 0x367e
   12694:	movt	r2, #1
   12698:	mov	r0, r5
   1269c:	mov	r1, #512	; 0x200
   126a0:	bl	11418 <snprintf@plt>
   126a4:	vmov.i32	q8, #0	; 0x00000000
   126a8:	vst1.64	{d16-d17}, [r6]!
   126ac:	vst1.64	{d16-d17}, [r6]
   126b0:	mov	r0, r5
   126b4:	bl	112e0 <strlen@plt>
   126b8:	add	r2, r0, #1
   126bc:	mov	r0, sl
   126c0:	mov	r1, r5
   126c4:	bl	11fe8 <__errno_location@plt+0xb7c>
   126c8:	sub	sp, fp, #28
   126cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126d4:	add	fp, sp, #28
   126d8:	sub	sp, sp, #12
   126dc:	mov	r5, r1
   126e0:	ldr	r1, [r1, #20]
   126e4:	ldr	r2, [r5, #24]
   126e8:	bl	12820 <__errno_location@plt+0x13b4>
   126ec:	mov	r4, r0
   126f0:	ldr	r0, [r0, #28]
   126f4:	bl	11178 <rb_get_type@plt>
   126f8:	cmp	r0, #64	; 0x40
   126fc:	bne	1270c <__errno_location@plt+0x12a0>
   12700:	ldr	r0, [r4, #28]
   12704:	mov	r1, #4
   12708:	bl	112d4 <rb_set_type@plt>
   1270c:	ldr	r0, [r4, #32]
   12710:	bl	11178 <rb_get_type@plt>
   12714:	cmp	r0, #64	; 0x40
   12718:	bne	12728 <__errno_location@plt+0x12bc>
   1271c:	ldr	r0, [r4, #32]
   12720:	mov	r1, #4
   12724:	bl	112d4 <rb_set_type@plt>
   12728:	ldr	r0, [r5, #12]
   1272c:	add	r0, r0, #1
   12730:	bl	12880 <__errno_location@plt+0x1414>
   12734:	mov	r1, r0
   12738:	mov	r0, r4
   1273c:	bl	12888 <__errno_location@plt+0x141c>
   12740:	ldr	r0, [r5, #12]
   12744:	ldr	r1, [r5, #16]
   12748:	stmib	sp, {r0, r1}
   1274c:	ldrb	r5, [r0, #5]
   12750:	ldrb	r0, [r4, #72]	; 0x48
   12754:	orr	r0, r0, #2
   12758:	strb	r0, [r4, #72]	; 0x48
   1275c:	mov	r0, #112	; 0x70
   12760:	bl	118f4 <__errno_location@plt+0x488>
   12764:	mov	r6, r0
   12768:	str	r0, [r4, #76]	; 0x4c
   1276c:	mov	r7, #0
   12770:	str	r7, [r0, #8]
   12774:	str	r7, [r0, #20]
   12778:	movw	r9, #13092	; 0x3324
   1277c:	movt	r9, #1
   12780:	movw	r8, #13100	; 0x332c
   12784:	movt	r8, #1
   12788:	str	r9, [r0, #32]
   1278c:	str	r8, [r0, #36]	; 0x24
   12790:	mov	sl, #1
   12794:	str	sl, [r0, #44]	; 0x2c
   12798:	ldr	r0, [r4, #76]	; 0x4c
   1279c:	movw	r1, #13975	; 0x3697
   127a0:	movt	r1, #1
   127a4:	mov	r2, #56	; 0x38
   127a8:	bl	113dc <inflateInit_@plt>
   127ac:	str	sl, [r6, #100]	; 0x64
   127b0:	str	r9, [r6, #88]	; 0x58
   127b4:	str	r8, [r6, #92]	; 0x5c
   127b8:	str	r7, [r6, #76]	; 0x4c
   127bc:	str	r7, [r6, #64]	; 0x40
   127c0:	ldr	r0, [r4, #76]	; 0x4c
   127c4:	cmp	r5, #9
   127c8:	movwhi	r5, #255	; 0xff
   127cc:	add	r0, r0, #56	; 0x38
   127d0:	mov	r1, r5
   127d4:	movw	r2, #13975	; 0x3697
   127d8:	movt	r2, #1
   127dc:	mov	r3, #56	; 0x38
   127e0:	bl	11238 <deflateInit_@plt>
   127e4:	ldr	r0, [sp, #8]
   127e8:	subs	r2, r0, #6
   127ec:	beq	12800 <__errno_location@plt+0x1394>
   127f0:	ldr	r0, [sp, #4]
   127f4:	add	r1, r0, #6
   127f8:	mov	r0, r4
   127fc:	bl	12fc0 <__errno_location@plt+0x1b54>
   12800:	ldr	r0, [r4, #28]
   12804:	mov	r1, r4
   12808:	bl	12a5c <__errno_location@plt+0x15f0>
   1280c:	ldr	r0, [r4, #32]
   12810:	mov	r1, r4
   12814:	sub	sp, fp, #28
   12818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1281c:	b	12c18 <__errno_location@plt+0x17ac>
   12820:	push	{r4, r5, r6, r7, fp, lr}
   12824:	add	fp, sp, #16
   12828:	mov	r4, r2
   1282c:	mov	r5, r1
   12830:	mov	r6, r0
   12834:	mov	r0, #80	; 0x50
   12838:	bl	118f4 <__errno_location@plt+0x488>
   1283c:	mov	r7, r0
   12840:	str	r6, [r0, #12]
   12844:	bl	113c4 <rb_new_rawbuffer@plt>
   12848:	str	r0, [r7, #16]
   1284c:	bl	113c4 <rb_new_rawbuffer@plt>
   12850:	mov	r1, #0
   12854:	str	r1, [r7, #76]	; 0x4c
   12858:	mvn	r1, #0
   1285c:	add	r2, r7, #20
   12860:	stm	r2, {r0, r1, r5}
   12864:	str	r4, [r7, #32]
   12868:	mov	r0, r5
   1286c:	bl	11250 <rb_set_nb@plt>
   12870:	mov	r0, r4
   12874:	bl	11250 <rb_set_nb@plt>
   12878:	mov	r0, r7
   1287c:	pop	{r4, r5, r6, r7, fp, pc}
   12880:	ldr	r0, [r0]
   12884:	bx	lr
   12888:	str	r1, [r0, #24]
   1288c:	movw	r2, #19923	; 0x4dd3
   12890:	movt	r2, #4194	; 0x1062
   12894:	umull	r2, r3, r1, r2
   12898:	lsr	r2, r3, #7
   1289c:	mov	r3, #2000	; 0x7d0
   128a0:	mls	r1, r2, r3, r1
   128a4:	add	r1, r1, r1, lsl #1
   128a8:	movw	r2, #16712	; 0x4148
   128ac:	movt	r2, #2
   128b0:	add	r2, r2, r1, lsl #2
   128b4:	mov	r1, r0
   128b8:	b	11e80 <__errno_location@plt+0xa14>
   128bc:	push	{r4, sl, fp, lr}
   128c0:	add	fp, sp, #8
   128c4:	ldr	r4, [fp, #8]
   128c8:	cmp	r1, #0
   128cc:	beq	128e4 <__errno_location@plt+0x1478>
   128d0:	mov	r0, r4
   128d4:	mov	r1, #0
   128d8:	mov	r2, #0
   128dc:	pop	{r4, sl, fp, lr}
   128e0:	b	11c88 <__errno_location@plt+0x81c>
   128e4:	mov	r0, r4
   128e8:	bl	12918 <__errno_location@plt+0x14ac>
   128ec:	mov	r0, r4
   128f0:	bl	129a0 <__errno_location@plt+0x1534>
   128f4:	mov	r0, r4
   128f8:	bl	12a1c <__errno_location@plt+0x15b0>
   128fc:	ldr	r0, [r4, #28]
   12900:	mov	r1, r4
   12904:	bl	12a5c <__errno_location@plt+0x15f0>
   12908:	ldr	r0, [r4, #32]
   1290c:	mov	r1, r4
   12910:	pop	{r4, sl, fp, lr}
   12914:	b	12c18 <__errno_location@plt+0x17ac>
   12918:	push	{r4, r5, r6, sl, fp, lr}
   1291c:	add	fp, sp, #16
   12920:	sub	sp, sp, #768	; 0x300
   12924:	mov	r4, r0
   12928:	ldrb	r0, [r0, #72]	; 0x48
   1292c:	tst	r0, #1
   12930:	beq	12998 <__errno_location@plt+0x152c>
   12934:	ldr	r0, [r4, #28]
   12938:	bl	112ec <rb_ssl_get_cipher@plt>
   1293c:	cmp	r0, #0
   12940:	beq	12998 <__errno_location@plt+0x152c>
   12944:	mov	r1, r0
   12948:	mov	r5, sp
   1294c:	mov	r0, r5
   12950:	mov	r2, #256	; 0x100
   12954:	bl	11274 <rb_strlcpy@plt>
   12958:	mov	r0, #67	; 0x43
   1295c:	strb	r0, [sp, #256]	; 0x100
   12960:	ldr	r1, [r4, #24]
   12964:	add	r6, sp, #256	; 0x100
   12968:	add	r0, r6, #1
   1296c:	bl	11fe0 <__errno_location@plt+0xb74>
   12970:	add	r0, r6, #5
   12974:	mov	r1, r5
   12978:	bl	1131c <strcpy@plt>
   1297c:	mov	r0, r5
   12980:	bl	112e0 <strlen@plt>
   12984:	ldr	r1, [r4, #12]
   12988:	add	r2, r0, #6
   1298c:	mov	r0, r1
   12990:	mov	r1, r6
   12994:	bl	11fe8 <__errno_location@plt+0xb7c>
   12998:	sub	sp, fp, #16
   1299c:	pop	{r4, r5, r6, sl, fp, pc}
   129a0:	push	{r4, r5, r6, r7, fp, lr}
   129a4:	add	fp, sp, #16
   129a8:	sub	sp, sp, #80	; 0x50
   129ac:	mov	r4, r0
   129b0:	movw	r7, #40712	; 0x9f08
   129b4:	movt	r7, #2
   129b8:	ldr	r2, [r7]
   129bc:	ldr	r0, [r0, #28]
   129c0:	add	r5, sp, #3
   129c4:	add	r1, r5, #13
   129c8:	bl	11280 <rb_get_ssl_certfp@plt>
   129cc:	cmp	r0, #0
   129d0:	beq	12a14 <__errno_location@plt+0x15a8>
   129d4:	mov	r6, r0
   129d8:	mov	r0, #70	; 0x46
   129dc:	strb	r0, [sp, #3]
   129e0:	ldr	r1, [r4, #24]
   129e4:	add	r0, r5, #1
   129e8:	bl	11fe0 <__errno_location@plt+0xb74>
   129ec:	ldr	r1, [r7]
   129f0:	add	r0, r5, #5
   129f4:	bl	11fe0 <__errno_location@plt+0xb74>
   129f8:	add	r0, r5, #9
   129fc:	mov	r1, r6
   12a00:	bl	11fe0 <__errno_location@plt+0xb74>
   12a04:	ldr	r0, [r4, #12]
   12a08:	add	r2, r6, #13
   12a0c:	mov	r1, r5
   12a10:	bl	11fe8 <__errno_location@plt+0xb7c>
   12a14:	sub	sp, fp, #16
   12a18:	pop	{r4, r5, r6, r7, fp, pc}
   12a1c:	push	{r4, r5, fp, lr}
   12a20:	add	fp, sp, #8
   12a24:	sub	sp, sp, #8
   12a28:	mov	r4, r0
   12a2c:	mov	r0, #79	; 0x4f
   12a30:	strb	r0, [sp, #3]
   12a34:	ldr	r1, [r4, #24]
   12a38:	add	r5, sp, #3
   12a3c:	add	r0, r5, #1
   12a40:	bl	11fe0 <__errno_location@plt+0xb74>
   12a44:	ldr	r0, [r4, #12]
   12a48:	mov	r1, r5
   12a4c:	mov	r2, #5
   12a50:	bl	11fe8 <__errno_location@plt+0xb7c>
   12a54:	sub	sp, fp, #8
   12a58:	pop	{r4, r5, fp, pc}
   12a5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a60:	add	fp, sp, #24
   12a64:	sub	sp, sp, #16384	; 0x4000
   12a68:	cmp	r1, #0
   12a6c:	beq	12b30 <__errno_location@plt+0x16c4>
   12a70:	mov	r4, r1
   12a74:	ldrb	r0, [r1, #72]	; 0x48
   12a78:	tst	r0, #8
   12a7c:	bne	12b30 <__errno_location@plt+0x16c4>
   12a80:	tst	r0, #32
   12a84:	beq	12aa8 <__errno_location@plt+0x163c>
   12a88:	and	r0, r0, #223	; 0xdf
   12a8c:	strb	r0, [r4, #72]	; 0x48
   12a90:	ldr	r0, [r4, #28]
   12a94:	mov	r1, r4
   12a98:	bl	12d3c <__errno_location@plt+0x18d0>
   12a9c:	ldrb	r0, [r4, #72]	; 0x48
   12aa0:	tst	r0, #8
   12aa4:	bne	12b30 <__errno_location@plt+0x16c4>
   12aa8:	ldrb	r0, [r4, #72]	; 0x48
   12aac:	tst	r0, #8
   12ab0:	bne	12b30 <__errno_location@plt+0x16c4>
   12ab4:	add	r7, r4, #48	; 0x30
   12ab8:	mov	r5, sp
   12abc:	b	12adc <__errno_location@plt+0x1670>
   12ac0:	mov	r0, r4
   12ac4:	mov	r1, r5
   12ac8:	mov	r2, r6
   12acc:	bl	130d8 <__errno_location@plt+0x1c6c>
   12ad0:	ldrb	r0, [r4, #72]	; 0x48
   12ad4:	tst	r0, #8
   12ad8:	bne	12b30 <__errno_location@plt+0x16c4>
   12adc:	ldr	r0, [r4, #28]
   12ae0:	mov	r1, r5
   12ae4:	mov	r2, #16384	; 0x4000
   12ae8:	bl	112c8 <rb_read@plt>
   12aec:	cmp	r0, #0
   12af0:	beq	12b38 <__errno_location@plt+0x16cc>
   12af4:	mov	r6, r0
   12af8:	cmn	r0, #1
   12afc:	ble	12b4c <__errno_location@plt+0x16e0>
   12b00:	ldrd	r0, [r7]
   12b04:	adds	r0, r0, r6
   12b08:	adc	r1, r1, r6, asr #31
   12b0c:	strd	r0, [r7]
   12b10:	ldrb	r0, [r4, #72]	; 0x48
   12b14:	tst	r0, #2
   12b18:	beq	12ac0 <__errno_location@plt+0x1654>
   12b1c:	mov	r0, r4
   12b20:	mov	r1, r5
   12b24:	mov	r2, r6
   12b28:	bl	12fc0 <__errno_location@plt+0x1b54>
   12b2c:	b	12ad0 <__errno_location@plt+0x1664>
   12b30:	sub	sp, fp, #24
   12b34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12b38:	movw	r2, #13823	; 0x35ff
   12b3c:	movt	r2, #1
   12b40:	movw	r3, #13719	; 0x3597
   12b44:	movt	r3, #1
   12b48:	b	12c04 <__errno_location@plt+0x1798>
   12b4c:	bl	1146c <__errno_location@plt>
   12b50:	mov	r5, r0
   12b54:	ldr	r0, [r0]
   12b58:	bl	111a8 <rb_ignore_errno@plt>
   12b5c:	cmp	r0, #0
   12b60:	beq	12ba8 <__errno_location@plt+0x173c>
   12b64:	ldr	r0, [r4, #28]
   12b68:	cmn	r6, #4
   12b6c:	bne	12bc8 <__errno_location@plt+0x175c>
   12b70:	mov	r1, #1
   12b74:	mov	r2, #0
   12b78:	mov	r3, #0
   12b7c:	bl	111d8 <rb_setselect@plt>
   12b80:	ldr	r0, [r4, #28]
   12b84:	movw	r2, #10844	; 0x2a5c
   12b88:	movt	r2, #1
   12b8c:	mov	r1, #2
   12b90:	mov	r3, r4
   12b94:	bl	111d8 <rb_setselect@plt>
   12b98:	ldrb	r0, [r4, #72]	; 0x48
   12b9c:	orr	r0, r0, #32
   12ba0:	strb	r0, [r4, #72]	; 0x48
   12ba4:	b	12bdc <__errno_location@plt+0x1770>
   12ba8:	cmn	r6, #2
   12bac:	bne	12bf0 <__errno_location@plt+0x1784>
   12bb0:	ldrb	r0, [r4, #72]	; 0x48
   12bb4:	ands	r0, r0, #1
   12bb8:	beq	12bf0 <__errno_location@plt+0x1784>
   12bbc:	ldr	r0, [r4, #28]
   12bc0:	bl	11358 <rb_get_ssl_strerror@plt>
   12bc4:	b	12bf8 <__errno_location@plt+0x178c>
   12bc8:	movw	r2, #10844	; 0x2a5c
   12bcc:	movt	r2, #1
   12bd0:	mov	r1, #1
   12bd4:	mov	r3, r4
   12bd8:	bl	111d8 <rb_setselect@plt>
   12bdc:	ldr	r0, [r4, #32]
   12be0:	mov	r1, r4
   12be4:	bl	12ef4 <__errno_location@plt+0x1a88>
   12be8:	sub	sp, fp, #24
   12bec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12bf0:	ldr	r0, [r5]
   12bf4:	bl	1116c <strerror@plt>
   12bf8:	mov	r3, r0
   12bfc:	movw	r2, #13688	; 0x3578
   12c00:	movt	r2, #1
   12c04:	mov	r0, r4
   12c08:	mov	r1, #1
   12c0c:	bl	11c88 <__errno_location@plt+0x81c>
   12c10:	sub	sp, fp, #24
   12c14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12c18:	push	{r4, r5, r6, sl, fp, lr}
   12c1c:	add	fp, sp, #16
   12c20:	sub	sp, sp, #16384	; 0x4000
   12c24:	cmp	r1, #0
   12c28:	beq	12c4c <__errno_location@plt+0x17e0>
   12c2c:	mov	r4, r1
   12c30:	ldrb	r0, [r1, #72]	; 0x48
   12c34:	tst	r0, #8
   12c38:	bne	12c4c <__errno_location@plt+0x17e0>
   12c3c:	mov	r0, r4
   12c40:	bl	130ec <__errno_location@plt+0x1c80>
   12c44:	cmp	r0, #0
   12c48:	beq	12c54 <__errno_location@plt+0x17e8>
   12c4c:	sub	sp, fp, #16
   12c50:	pop	{r4, r5, r6, sl, fp, pc}
   12c54:	add	r6, r4, #56	; 0x38
   12c58:	mov	r5, sp
   12c5c:	ldrb	r0, [r4, #72]	; 0x48
   12c60:	tst	r0, #8
   12c64:	bne	12c4c <__errno_location@plt+0x17e0>
   12c68:	ldr	r0, [r4, #32]
   12c6c:	mov	r1, r5
   12c70:	mov	r2, #16384	; 0x4000
   12c74:	bl	112c8 <rb_read@plt>
   12c78:	cmp	r0, #0
   12c7c:	beq	12d24 <__errno_location@plt+0x18b8>
   12c80:	mov	r2, r0
   12c84:	cmn	r0, #1
   12c88:	ble	12ce4 <__errno_location@plt+0x1878>
   12c8c:	ldrd	r0, [r6]
   12c90:	adds	r0, r0, r2
   12c94:	adc	r1, r1, r2, asr #31
   12c98:	strd	r0, [r6]
   12c9c:	ldrb	r0, [r4, #72]	; 0x48
   12ca0:	tst	r0, #2
   12ca4:	bne	12cb8 <__errno_location@plt+0x184c>
   12ca8:	mov	r0, r4
   12cac:	mov	r1, r5
   12cb0:	bl	13200 <__errno_location@plt+0x1d94>
   12cb4:	b	12cc4 <__errno_location@plt+0x1858>
   12cb8:	mov	r0, r4
   12cbc:	mov	r1, r5
   12cc0:	bl	13144 <__errno_location@plt+0x1cd8>
   12cc4:	ldrb	r0, [r4, #72]	; 0x48
   12cc8:	tst	r0, #8
   12ccc:	bne	12c4c <__errno_location@plt+0x17e0>
   12cd0:	mov	r0, r4
   12cd4:	bl	130ec <__errno_location@plt+0x1c80>
   12cd8:	cmp	r0, #0
   12cdc:	beq	12c5c <__errno_location@plt+0x17f0>
   12ce0:	b	12c4c <__errno_location@plt+0x17e0>
   12ce4:	bl	1146c <__errno_location@plt>
   12ce8:	ldr	r0, [r0]
   12cec:	bl	111a8 <rb_ignore_errno@plt>
   12cf0:	cmp	r0, #0
   12cf4:	beq	12d24 <__errno_location@plt+0x18b8>
   12cf8:	ldr	r0, [r4, #32]
   12cfc:	movw	r2, #11288	; 0x2c18
   12d00:	movt	r2, #1
   12d04:	mov	r1, #1
   12d08:	mov	r3, r4
   12d0c:	bl	111d8 <rb_setselect@plt>
   12d10:	ldr	r0, [r4, #28]
   12d14:	mov	r1, r4
   12d18:	bl	12d3c <__errno_location@plt+0x18d0>
   12d1c:	sub	sp, fp, #16
   12d20:	pop	{r4, r5, r6, sl, fp, pc}
   12d24:	mov	r0, r4
   12d28:	mov	r1, #0
   12d2c:	mov	r2, #0
   12d30:	bl	11c88 <__errno_location@plt+0x81c>
   12d34:	sub	sp, fp, #16
   12d38:	pop	{r4, r5, r6, sl, fp, pc}
   12d3c:	push	{r4, r5, r6, r7, fp, lr}
   12d40:	add	fp, sp, #16
   12d44:	mov	r5, r0
   12d48:	ldrb	r0, [r1, #72]	; 0x48
   12d4c:	tst	r0, #8
   12d50:	bne	12ed4 <__errno_location@plt+0x1a68>
   12d54:	mov	r4, r1
   12d58:	tst	r0, #16
   12d5c:	beq	12d80 <__errno_location@plt+0x1914>
   12d60:	and	r0, r0, #239	; 0xef
   12d64:	strb	r0, [r4, #72]	; 0x48
   12d68:	ldr	r0, [r4, #28]
   12d6c:	mov	r1, r4
   12d70:	bl	12a5c <__errno_location@plt+0x15f0>
   12d74:	ldrb	r0, [r4, #72]	; 0x48
   12d78:	tst	r0, #8
   12d7c:	bne	12ed4 <__errno_location@plt+0x1a68>
   12d80:	ldr	r0, [r4, #16]
   12d84:	mov	r1, r5
   12d88:	bl	11448 <rb_rawbuf_flush@plt>
   12d8c:	mov	r6, r0
   12d90:	cmp	r0, #1
   12d94:	blt	12dc4 <__errno_location@plt+0x1958>
   12d98:	add	r7, r4, #40	; 0x28
   12d9c:	ldrd	r0, [r7]
   12da0:	adds	r0, r0, r6
   12da4:	adc	r1, r1, r6, asr #31
   12da8:	strd	r0, [r7]
   12dac:	ldr	r0, [r4, #16]
   12db0:	mov	r1, r5
   12db4:	bl	11448 <rb_rawbuf_flush@plt>
   12db8:	mov	r6, r0
   12dbc:	cmp	r0, #0
   12dc0:	bgt	12d9c <__errno_location@plt+0x1930>
   12dc4:	cmp	r6, #0
   12dc8:	beq	12e34 <__errno_location@plt+0x19c8>
   12dcc:	bl	1146c <__errno_location@plt>
   12dd0:	ldr	r0, [r0]
   12dd4:	bl	111a8 <rb_ignore_errno@plt>
   12dd8:	cmp	r0, #0
   12ddc:	beq	12e60 <__errno_location@plt+0x19f4>
   12de0:	ldr	r0, [r4, #16]
   12de4:	bl	11340 <rb_rawbuf_length@plt>
   12de8:	cmp	r0, #1
   12dec:	blt	12e98 <__errno_location@plt+0x1a2c>
   12df0:	ldr	r0, [r4, #28]
   12df4:	movw	r2, #11580	; 0x2d3c
   12df8:	movt	r2, #1
   12dfc:	cmn	r6, #3
   12e00:	bne	12eac <__errno_location@plt+0x1a40>
   12e04:	mov	r1, #1
   12e08:	mov	r3, r4
   12e0c:	bl	111d8 <rb_setselect@plt>
   12e10:	ldr	r0, [r4, #28]
   12e14:	mov	r1, #2
   12e18:	mov	r2, #0
   12e1c:	mov	r3, #0
   12e20:	bl	111d8 <rb_setselect@plt>
   12e24:	ldrb	r0, [r4, #72]	; 0x48
   12e28:	orr	r0, r0, #16
   12e2c:	strb	r0, [r4, #72]	; 0x48
   12e30:	b	12eb8 <__errno_location@plt+0x1a4c>
   12e34:	movw	r2, #13823	; 0x35ff
   12e38:	movt	r2, #1
   12e3c:	movw	r3, #13719	; 0x3597
   12e40:	movt	r3, #1
   12e44:	mov	r0, r4
   12e48:	mov	r1, #1
   12e4c:	bl	11c88 <__errno_location@plt+0x81c>
   12e50:	bl	1146c <__errno_location@plt>
   12e54:	ldr	r0, [r0]
   12e58:	bl	1116c <strerror@plt>
   12e5c:	b	12e7c <__errno_location@plt+0x1a10>
   12e60:	cmn	r6, #2
   12e64:	bne	12e50 <__errno_location@plt+0x19e4>
   12e68:	ldrb	r0, [r4, #72]	; 0x48
   12e6c:	ands	r0, r0, #1
   12e70:	beq	12e50 <__errno_location@plt+0x19e4>
   12e74:	ldr	r0, [r4, #28]
   12e78:	bl	11358 <rb_get_ssl_strerror@plt>
   12e7c:	mov	r3, r0
   12e80:	movw	r2, #13703	; 0x3587
   12e84:	movt	r2, #1
   12e88:	mov	r0, r4
   12e8c:	mov	r1, #1
   12e90:	pop	{r4, r5, r6, r7, fp, lr}
   12e94:	b	11c88 <__errno_location@plt+0x81c>
   12e98:	ldr	r0, [r4, #28]
   12e9c:	mov	r1, #2
   12ea0:	mov	r2, #0
   12ea4:	mov	r3, #0
   12ea8:	b	12eb4 <__errno_location@plt+0x1a48>
   12eac:	mov	r1, #2
   12eb0:	mov	r3, r4
   12eb4:	bl	111d8 <rb_setselect@plt>
   12eb8:	ldrb	r0, [r4, #72]	; 0x48
   12ebc:	tst	r0, #4
   12ec0:	popeq	{r4, r5, r6, r7, fp, pc}
   12ec4:	ldr	r0, [r4, #16]
   12ec8:	bl	11340 <rb_rawbuf_length@plt>
   12ecc:	cmp	r0, #0
   12ed0:	beq	12ed8 <__errno_location@plt+0x1a6c>
   12ed4:	pop	{r4, r5, r6, r7, fp, pc}
   12ed8:	ldrb	r0, [r4, #72]	; 0x48
   12edc:	and	r0, r0, #251	; 0xfb
   12ee0:	strb	r0, [r4, #72]	; 0x48
   12ee4:	ldr	r0, [r4, #32]
   12ee8:	mov	r1, r4
   12eec:	pop	{r4, r5, r6, r7, fp, lr}
   12ef0:	b	12c18 <__errno_location@plt+0x17ac>
   12ef4:	push	{r4, r5, r6, sl, fp, lr}
   12ef8:	add	fp, sp, #16
   12efc:	mov	r5, r0
   12f00:	ldrb	r0, [r1, #72]	; 0x48
   12f04:	tst	r0, #8
   12f08:	popne	{r4, r5, r6, sl, fp, pc}
   12f0c:	mov	r4, r1
   12f10:	ldr	r0, [r1, #20]
   12f14:	mov	r1, r5
   12f18:	bl	11448 <rb_rawbuf_flush@plt>
   12f1c:	cmp	r0, #1
   12f20:	blt	12f4c <__errno_location@plt+0x1ae0>
   12f24:	add	r6, r4, #64	; 0x40
   12f28:	ldrd	r2, [r6]
   12f2c:	adds	r2, r2, r0
   12f30:	adc	r3, r3, r0, asr #31
   12f34:	strd	r2, [r6]
   12f38:	ldr	r0, [r4, #20]
   12f3c:	mov	r1, r5
   12f40:	bl	11448 <rb_rawbuf_flush@plt>
   12f44:	cmp	r0, #0
   12f48:	bgt	12f28 <__errno_location@plt+0x1abc>
   12f4c:	cmp	r0, #0
   12f50:	beq	12f98 <__errno_location@plt+0x1b2c>
   12f54:	bl	1146c <__errno_location@plt>
   12f58:	ldr	r0, [r0]
   12f5c:	bl	111a8 <rb_ignore_errno@plt>
   12f60:	cmp	r0, #0
   12f64:	beq	12f98 <__errno_location@plt+0x1b2c>
   12f68:	ldr	r0, [r4, #20]
   12f6c:	bl	11340 <rb_rawbuf_length@plt>
   12f70:	mov	r1, r0
   12f74:	ldr	r0, [r4, #32]
   12f78:	cmp	r1, #1
   12f7c:	blt	12fac <__errno_location@plt+0x1b40>
   12f80:	movw	r2, #12020	; 0x2ef4
   12f84:	movt	r2, #1
   12f88:	mov	r1, #2
   12f8c:	mov	r3, r4
   12f90:	pop	{r4, r5, r6, sl, fp, lr}
   12f94:	b	111d8 <rb_setselect@plt>
   12f98:	mov	r0, r4
   12f9c:	mov	r1, #0
   12fa0:	mov	r2, #0
   12fa4:	pop	{r4, r5, r6, sl, fp, lr}
   12fa8:	b	11c88 <__errno_location@plt+0x81c>
   12fac:	mov	r1, #2
   12fb0:	mov	r2, #0
   12fb4:	mov	r3, #0
   12fb8:	pop	{r4, r5, r6, sl, fp, lr}
   12fbc:	b	111d8 <rb_setselect@plt>
   12fc0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fc4:	add	fp, sp, #24
   12fc8:	sub	sp, sp, #16384	; 0x4000
   12fcc:	mov	r8, r1
   12fd0:	mov	r4, r0
   12fd4:	ldr	r0, [r0, #76]	; 0x4c
   12fd8:	mov	r5, #16384	; 0x4000
   12fdc:	mov	r6, sp
   12fe0:	str	r6, [r0, #12]
   12fe4:	str	r5, [r0, #16]
   12fe8:	stm	r0, {r1, r2}
   12fec:	ldr	r0, [r4, #76]	; 0x4c
   12ff0:	ldr	r1, [r0, #4]
   12ff4:	cmp	r1, #0
   12ff8:	bne	13014 <__errno_location@plt+0x1ba8>
   12ffc:	sub	sp, fp, #24
   13000:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13004:	ldr	r0, [r4, #76]	; 0x4c
   13008:	ldr	r1, [r0, #4]
   1300c:	cmp	r1, #0
   13010:	beq	130a4 <__errno_location@plt+0x1c38>
   13014:	mov	r1, #0
   13018:	bl	1128c <inflate@plt>
   1301c:	cmp	r0, #0
   13020:	bne	1305c <__errno_location@plt+0x1bf0>
   13024:	ldr	r0, [r4, #76]	; 0x4c
   13028:	ldr	r1, [r0, #4]
   1302c:	ldr	r0, [r0, #16]
   13030:	rsb	r2, r0, #16384	; 0x4000
   13034:	cmp	r1, #0
   13038:	beq	13004 <__errno_location@plt+0x1b98>
   1303c:	mov	r0, r4
   13040:	mov	r1, r6
   13044:	bl	130d8 <__errno_location@plt+0x1c6c>
   13048:	ldr	r0, [r4, #76]	; 0x4c
   1304c:	str	r6, [r0, #12]
   13050:	str	r5, [r0, #16]
   13054:	mov	r2, #0
   13058:	b	13004 <__errno_location@plt+0x1b98>
   1305c:	mov	r7, r0
   13060:	movw	r0, #13753	; 0x35b9
   13064:	movt	r0, #1
   13068:	mov	r1, r8
   1306c:	mov	r2, #6
   13070:	bl	11424 <strncmp@plt>
   13074:	cmp	r0, #0
   13078:	beq	130bc <__errno_location@plt+0x1c50>
   1307c:	mov	r0, r7
   13080:	bl	11184 <zError@plt>
   13084:	mov	r3, r0
   13088:	movw	r2, #13788	; 0x35dc
   1308c:	movt	r2, #1
   13090:	mov	r0, r4
   13094:	mov	r1, #1
   13098:	bl	11c88 <__errno_location@plt+0x81c>
   1309c:	sub	sp, fp, #24
   130a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   130a4:	cmp	r2, #0
   130a8:	movne	r1, sp
   130ac:	movne	r0, r4
   130b0:	blne	130d8 <__errno_location@plt+0x1c6c>
   130b4:	sub	sp, fp, #24
   130b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   130bc:	movw	r2, #13760	; 0x35c0
   130c0:	movt	r2, #1
   130c4:	mov	r0, r4
   130c8:	mov	r1, #1
   130cc:	bl	11c88 <__errno_location@plt+0x81c>
   130d0:	sub	sp, fp, #24
   130d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   130d8:	ldrb	r3, [r0, #72]	; 0x48
   130dc:	tst	r3, #8
   130e0:	bxne	lr
   130e4:	ldr	r0, [r0, #20]
   130e8:	b	1143c <rb_rawbuf_append@plt>
   130ec:	push	{r4, r5, fp, lr}
   130f0:	add	fp, sp, #8
   130f4:	mov	r4, r0
   130f8:	ldr	r0, [r0, #16]
   130fc:	bl	11340 <rb_rawbuf_length@plt>
   13100:	mov	r5, #0
   13104:	cmp	r0, #4096	; 0x1000
   13108:	blt	1313c <__errno_location@plt+0x1cd0>
   1310c:	ldrb	r0, [r4, #72]	; 0x48
   13110:	orr	r0, r0, #4
   13114:	strb	r0, [r4, #72]	; 0x48
   13118:	ldr	r0, [r4, #32]
   1311c:	mov	r5, #1
   13120:	mov	r1, #1
   13124:	mov	r2, #0
   13128:	mov	r3, #0
   1312c:	bl	111d8 <rb_setselect@plt>
   13130:	ldr	r0, [r4, #28]
   13134:	mov	r1, r4
   13138:	bl	12d3c <__errno_location@plt+0x18d0>
   1313c:	mov	r0, r5
   13140:	pop	{r4, r5, fp, pc}
   13144:	push	{r4, r5, r6, r7, fp, lr}
   13148:	add	fp, sp, #16
   1314c:	sub	sp, sp, #16384	; 0x4000
   13150:	mov	r4, r0
   13154:	ldr	r5, [r0, #76]	; 0x4c
   13158:	mov	r0, #16384	; 0x4000
   1315c:	mov	r3, sp
   13160:	str	r3, [r5, #68]	; 0x44
   13164:	str	r0, [r5, #72]	; 0x48
   13168:	str	r2, [r5, #60]	; 0x3c
   1316c:	mov	r0, r5
   13170:	str	r1, [r0, #56]!	; 0x38
   13174:	mov	r1, #2
   13178:	bl	1122c <deflate@plt>
   1317c:	cmp	r0, #0
   13180:	beq	131a8 <__errno_location@plt+0x1d3c>
   13184:	bl	11184 <zError@plt>
   13188:	mov	r3, r0
   1318c:	movw	r2, #13807	; 0x35ef
   13190:	movt	r2, #1
   13194:	mov	r0, r4
   13198:	mov	r1, #1
   1319c:	bl	11c88 <__errno_location@plt+0x81c>
   131a0:	sub	sp, fp, #16
   131a4:	pop	{r4, r5, r6, r7, fp, pc}
   131a8:	ldr	r0, [r5, #72]	; 0x48
   131ac:	cmp	r0, #0
   131b0:	beq	131cc <__errno_location@plt+0x1d60>
   131b4:	ldr	r1, [r5, #60]	; 0x3c
   131b8:	cmp	r1, #0
   131bc:	beq	131e8 <__errno_location@plt+0x1d7c>
   131c0:	movw	r2, #13865	; 0x3629
   131c4:	movt	r2, #1
   131c8:	b	131d4 <__errno_location@plt+0x1d68>
   131cc:	movw	r2, #13826	; 0x3602
   131d0:	movt	r2, #1
   131d4:	mov	r0, r4
   131d8:	mov	r1, #1
   131dc:	bl	11c88 <__errno_location@plt+0x81c>
   131e0:	sub	sp, fp, #16
   131e4:	pop	{r4, r5, r6, r7, fp, pc}
   131e8:	rsb	r2, r0, #16384	; 0x4000
   131ec:	mov	r1, sp
   131f0:	mov	r0, r4
   131f4:	bl	13200 <__errno_location@plt+0x1d94>
   131f8:	sub	sp, fp, #16
   131fc:	pop	{r4, r5, r6, r7, fp, pc}
   13200:	ldrb	r3, [r0, #72]	; 0x48
   13204:	tst	r3, #8
   13208:	bxne	lr
   1320c:	ldr	r0, [r0, #16]
   13210:	b	1143c <rb_rawbuf_append@plt>
   13214:	push	{r4, sl, fp, lr}
   13218:	add	fp, sp, #8
   1321c:	mov	r4, r2
   13220:	cmp	r1, #6
   13224:	beq	1326c <__errno_location@plt+0x1e00>
   13228:	cmp	r1, #3
   1322c:	beq	13290 <__errno_location@plt+0x1e24>
   13230:	cmp	r1, #0
   13234:	bne	1329c <__errno_location@plt+0x1e30>
   13238:	mov	r0, r4
   1323c:	bl	12918 <__errno_location@plt+0x14ac>
   13240:	mov	r0, r4
   13244:	bl	129a0 <__errno_location@plt+0x1534>
   13248:	mov	r0, r4
   1324c:	bl	12a1c <__errno_location@plt+0x15b0>
   13250:	ldr	r0, [r4, #28]
   13254:	mov	r1, r4
   13258:	bl	12a5c <__errno_location@plt+0x15f0>
   1325c:	ldr	r0, [r4, #32]
   13260:	mov	r1, r4
   13264:	pop	{r4, sl, fp, lr}
   13268:	b	12c18 <__errno_location@plt+0x17ac>
   1326c:	ldr	r0, [r4, #28]
   13270:	bl	11358 <rb_get_ssl_strerror@plt>
   13274:	mov	r3, r0
   13278:	movw	r2, #13823	; 0x35ff
   1327c:	movt	r2, #1
   13280:	mov	r0, r4
   13284:	mov	r1, #1
   13288:	pop	{r4, sl, fp, lr}
   1328c:	b	11c88 <__errno_location@plt+0x81c>
   13290:	movw	r2, #13903	; 0x364f
   13294:	movt	r2, #1
   13298:	b	132a4 <__errno_location@plt+0x1e38>
   1329c:	movw	r2, #13927	; 0x3667
   132a0:	movt	r2, #1
   132a4:	mov	r0, r4
   132a8:	mov	r1, #1
   132ac:	pop	{r4, sl, fp, lr}
   132b0:	b	11c88 <__errno_location@plt+0x81c>
   132b4:	movw	r1, #19923	; 0x4dd3
   132b8:	movt	r1, #4194	; 0x1062
   132bc:	umull	r1, r2, r0, r1
   132c0:	lsr	r1, r2, #7
   132c4:	mov	r2, #2000	; 0x7d0
   132c8:	mls	r1, r1, r2, r0
   132cc:	add	r1, r1, r1, lsl #1
   132d0:	movw	r2, #16712	; 0x4148
   132d4:	movt	r2, #2
   132d8:	ldr	r2, [r2, r1, lsl #2]
   132dc:	cmp	r2, #0
   132e0:	bne	132f4 <__errno_location@plt+0x1e88>
   132e4:	b	13318 <__errno_location@plt+0x1eac>
   132e8:	ldr	r2, [r2, #8]
   132ec:	cmp	r2, #0
   132f0:	beq	13318 <__errno_location@plt+0x1eac>
   132f4:	ldr	r1, [r2]
   132f8:	ldr	r3, [r1, #24]
   132fc:	cmp	r3, r0
   13300:	bne	132e8 <__errno_location@plt+0x1e7c>
   13304:	ldrb	r3, [r1, #72]	; 0x48
   13308:	tst	r3, #8
   1330c:	bne	132e8 <__errno_location@plt+0x1e7c>
   13310:	mov	r0, r1
   13314:	bx	lr
   13318:	mov	r1, #0
   1331c:	mov	r0, r1
   13320:	bx	lr
   13324:	mul	r0, r2, r1
   13328:	b	118f4 <__errno_location@plt+0x488>
   1332c:	mov	r0, r1
   13330:	b	11c7c <__errno_location@plt+0x810>
   13334:	bx	lr
   13338:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1333c:	mov	r7, r0
   13340:	ldr	r6, [pc, #72]	; 13390 <__errno_location@plt+0x1f24>
   13344:	ldr	r5, [pc, #72]	; 13394 <__errno_location@plt+0x1f28>
   13348:	add	r6, pc, r6
   1334c:	add	r5, pc, r5
   13350:	sub	r6, r6, r5
   13354:	mov	r8, r1
   13358:	mov	r9, r2
   1335c:	bl	11134 <open@plt-0x20>
   13360:	asrs	r6, r6, #2
   13364:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13368:	mov	r4, #0
   1336c:	add	r4, r4, #1
   13370:	ldr	r3, [r5], #4
   13374:	mov	r2, r9
   13378:	mov	r1, r8
   1337c:	mov	r0, r7
   13380:	blx	r3
   13384:	cmp	r6, r4
   13388:	bne	1336c <__errno_location@plt+0x1f00>
   1338c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13390:	muleq	r1, ip, fp
   13394:	muleq	r1, r4, fp
   13398:	bx	lr

Disassembly of section .fini:

0001339c <.fini>:
   1339c:	push	{r3, lr}
   133a0:	pop	{r3, pc}
