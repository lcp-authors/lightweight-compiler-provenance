
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010ec4 <.init>:
   10ec4:	push	{r3, lr}
   10ec8:	bl	111cc <__mempcpy_chk@plt+0x48>
   10ecc:	pop	{r3, pc}

Disassembly of section .plt:

00010ed0 <calloc@plt-0x14>:
   10ed0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ed4:	ldr	lr, [pc, #4]	; 10ee0 <calloc@plt-0x4>
   10ed8:	add	lr, pc, lr
   10edc:	ldr	pc, [lr, #8]!
   10ee0:	andeq	r6, r1, r0, lsr #2

00010ee4 <calloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #90112	; 0x16000
   10eec:	ldr	pc, [ip, #288]!	; 0x120

00010ef0 <fputs_unlocked@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #90112	; 0x16000
   10ef8:	ldr	pc, [ip, #280]!	; 0x118

00010efc <uselocale@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #90112	; 0x16000
   10f04:	ldr	pc, [ip, #272]!	; 0x110

00010f08 <strcmp@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #90112	; 0x16000
   10f10:	ldr	pc, [ip, #264]!	; 0x108

00010f14 <strtol@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #90112	; 0x16000
   10f1c:	ldr	pc, [ip, #256]!	; 0x100

00010f20 <strcspn@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #248]!	; 0xf8

00010f2c <fflush@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #240]!	; 0xf0

00010f38 <memmove@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #232]!	; 0xe8

00010f44 <free@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #224]!	; 0xe0

00010f50 <_exit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #216]!	; 0xd8

00010f5c <memcpy@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #208]!	; 0xd0

00010f68 <mbsinit@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #90112	; 0x16000
   10f70:	ldr	pc, [ip, #200]!	; 0xc8

00010f74 <strtold@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #90112	; 0x16000
   10f7c:	ldr	pc, [ip, #192]!	; 0xc0

00010f80 <fwrite_unlocked@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #90112	; 0x16000
   10f88:	ldr	pc, [ip, #184]!	; 0xb8

00010f8c <memcmp@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #90112	; 0x16000
   10f94:	ldr	pc, [ip, #176]!	; 0xb0

00010f98 <dcgettext@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #90112	; 0x16000
   10fa0:	ldr	pc, [ip, #168]!	; 0xa8

00010fa4 <realloc@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #90112	; 0x16000
   10fac:	ldr	pc, [ip, #160]!	; 0xa0

00010fb0 <textdomain@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #90112	; 0x16000
   10fb8:	ldr	pc, [ip, #152]!	; 0x98

00010fbc <iswprint@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #90112	; 0x16000
   10fc4:	ldr	pc, [ip, #144]!	; 0x90

00010fc8 <fwrite@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #90112	; 0x16000
   10fd0:	ldr	pc, [ip, #136]!	; 0x88

00010fd4 <lseek64@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #90112	; 0x16000
   10fdc:	ldr	pc, [ip, #128]!	; 0x80

00010fe0 <__ctype_get_mb_cur_max@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #90112	; 0x16000
   10fe8:	ldr	pc, [ip, #120]!	; 0x78

00010fec <strcpy@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #90112	; 0x16000
   10ff4:	ldr	pc, [ip, #112]!	; 0x70

00010ff8 <__fpending@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #90112	; 0x16000
   11000:	ldr	pc, [ip, #104]!	; 0x68

00011004 <mbrtowc@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #90112	; 0x16000
   1100c:	ldr	pc, [ip, #96]!	; 0x60

00011010 <error@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #90112	; 0x16000
   11018:	ldr	pc, [ip, #88]!	; 0x58

0001101c <__asprintf_chk@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #90112	; 0x16000
   11024:	ldr	pc, [ip, #80]!	; 0x50

00011028 <malloc@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #90112	; 0x16000
   11030:	ldr	pc, [ip, #72]!	; 0x48

00011034 <__libc_start_main@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #90112	; 0x16000
   1103c:	ldr	pc, [ip, #64]!	; 0x40

00011040 <__freading@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #90112	; 0x16000
   11048:	ldr	pc, [ip, #56]!	; 0x38

0001104c <__gmon_start__@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #90112	; 0x16000
   11054:	ldr	pc, [ip, #48]!	; 0x30

00011058 <getopt_long@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #90112	; 0x16000
   11060:	ldr	pc, [ip, #40]!	; 0x28

00011064 <__ctype_b_loc@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #90112	; 0x16000
   1106c:	ldr	pc, [ip, #32]!

00011070 <exit@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #90112	; 0x16000
   11078:	ldr	pc, [ip, #24]!

0001107c <bcmp@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #90112	; 0x16000
   11084:	ldr	pc, [ip, #16]!

00011088 <strlen@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #90112	; 0x16000
   11090:	ldr	pc, [ip, #8]!

00011094 <strchr@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #90112	; 0x16000
   1109c:	ldr	pc, [ip, #0]!

000110a0 <__errno_location@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #86016	; 0x15000
   110a8:	ldr	pc, [ip, #4088]!	; 0xff8

000110ac <__sprintf_chk@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #86016	; 0x15000
   110b4:	ldr	pc, [ip, #4080]!	; 0xff0

000110b8 <__cxa_atexit@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #86016	; 0x15000
   110c0:	ldr	pc, [ip, #4072]!	; 0xfe8

000110c4 <memset@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #86016	; 0x15000
   110cc:	ldr	pc, [ip, #4064]!	; 0xfe0

000110d0 <__printf_chk@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #86016	; 0x15000
   110d8:	ldr	pc, [ip, #4056]!	; 0xfd8

000110dc <fileno@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #86016	; 0x15000
   110e4:	ldr	pc, [ip, #4048]!	; 0xfd0

000110e8 <__fprintf_chk@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #86016	; 0x15000
   110f0:	ldr	pc, [ip, #4040]!	; 0xfc8

000110f4 <memchr@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #86016	; 0x15000
   110fc:	ldr	pc, [ip, #4032]!	; 0xfc0

00011100 <fclose@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #86016	; 0x15000
   11108:	ldr	pc, [ip, #4024]!	; 0xfb8

0001110c <fseeko64@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #86016	; 0x15000
   11114:	ldr	pc, [ip, #4016]!	; 0xfb0

00011118 <setlocale@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #86016	; 0x15000
   11120:	ldr	pc, [ip, #4008]!	; 0xfa8

00011124 <strrchr@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #86016	; 0x15000
   1112c:	ldr	pc, [ip, #4000]!	; 0xfa0

00011130 <nl_langinfo@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #86016	; 0x15000
   11138:	ldr	pc, [ip, #3992]!	; 0xf98

0001113c <newlocale@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #86016	; 0x15000
   11144:	ldr	pc, [ip, #3984]!	; 0xf90

00011148 <clearerr_unlocked@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #86016	; 0x15000
   11150:	ldr	pc, [ip, #3976]!	; 0xf88

00011154 <bindtextdomain@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #86016	; 0x15000
   1115c:	ldr	pc, [ip, #3968]!	; 0xf80

00011160 <strncmp@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #86016	; 0x15000
   11168:	ldr	pc, [ip, #3960]!	; 0xf78

0001116c <abort@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #86016	; 0x15000
   11174:	ldr	pc, [ip, #3952]!	; 0xf70

00011178 <strspn@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #86016	; 0x15000
   11180:	ldr	pc, [ip, #3944]!	; 0xf68

00011184 <__mempcpy_chk@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #86016	; 0x15000
   1118c:	ldr	pc, [ip, #3936]!	; 0xf60

Disassembly of section .text:

00011190 <.text>:
   11190:	mov	fp, #0
   11194:	mov	lr, #0
   11198:	pop	{r1}		; (ldr r1, [sp], #4)
   1119c:	mov	r2, sp
   111a0:	push	{r2}		; (str r2, [sp, #-4]!)
   111a4:	push	{r0}		; (str r0, [sp, #-4]!)
   111a8:	ldr	ip, [pc, #16]	; 111c0 <__mempcpy_chk@plt+0x3c>
   111ac:	push	{ip}		; (str ip, [sp, #-4]!)
   111b0:	ldr	r0, [pc, #12]	; 111c4 <__mempcpy_chk@plt+0x40>
   111b4:	ldr	r3, [pc, #12]	; 111c8 <__mempcpy_chk@plt+0x44>
   111b8:	bl	11034 <__libc_start_main@plt>
   111bc:	bl	1116c <abort@plt>
   111c0:	muleq	r1, r8, fp
   111c4:	andeq	r1, r1, r0, asr #10
   111c8:	andeq	r5, r1, r8, lsr fp
   111cc:	ldr	r3, [pc, #20]	; 111e8 <__mempcpy_chk@plt+0x64>
   111d0:	ldr	r2, [pc, #20]	; 111ec <__mempcpy_chk@plt+0x68>
   111d4:	add	r3, pc, r3
   111d8:	ldr	r2, [r3, r2]
   111dc:	cmp	r2, #0
   111e0:	bxeq	lr
   111e4:	b	1104c <__gmon_start__@plt>
   111e8:	andeq	r5, r1, r4, lsr #28
   111ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   111f0:	ldr	r0, [pc, #24]	; 11210 <__mempcpy_chk@plt+0x8c>
   111f4:	ldr	r3, [pc, #24]	; 11214 <__mempcpy_chk@plt+0x90>
   111f8:	cmp	r3, r0
   111fc:	bxeq	lr
   11200:	ldr	r3, [pc, #16]	; 11218 <__mempcpy_chk@plt+0x94>
   11204:	cmp	r3, #0
   11208:	bxeq	lr
   1120c:	bx	r3
   11210:	andeq	r7, r2, r8, asr #2
   11214:	andeq	r7, r2, r8, asr #2
   11218:	andeq	r0, r0, r0
   1121c:	ldr	r0, [pc, #36]	; 11248 <__mempcpy_chk@plt+0xc4>
   11220:	ldr	r1, [pc, #36]	; 1124c <__mempcpy_chk@plt+0xc8>
   11224:	sub	r1, r1, r0
   11228:	asr	r1, r1, #2
   1122c:	add	r1, r1, r1, lsr #31
   11230:	asrs	r1, r1, #1
   11234:	bxeq	lr
   11238:	ldr	r3, [pc, #16]	; 11250 <__mempcpy_chk@plt+0xcc>
   1123c:	cmp	r3, #0
   11240:	bxeq	lr
   11244:	bx	r3
   11248:	andeq	r7, r2, r8, asr #2
   1124c:	andeq	r7, r2, r8, asr #2
   11250:	andeq	r0, r0, r0
   11254:	push	{r4, lr}
   11258:	ldr	r4, [pc, #24]	; 11278 <__mempcpy_chk@plt+0xf4>
   1125c:	ldrb	r3, [r4]
   11260:	cmp	r3, #0
   11264:	popne	{r4, pc}
   11268:	bl	111f0 <__mempcpy_chk@plt+0x6c>
   1126c:	mov	r3, #1
   11270:	strb	r3, [r4]
   11274:	pop	{r4, pc}
   11278:	andeq	r7, r2, r4, ror #2
   1127c:	b	1121c <__mempcpy_chk@plt+0x98>
   11280:	push	{fp, lr}
   11284:	mov	fp, sp
   11288:	sub	sp, sp, #64	; 0x40
   1128c:	mov	r4, r0
   11290:	cmp	r0, #0
   11294:	bne	114f8 <__mempcpy_chk@plt+0x374>
   11298:	movw	r1, #23531	; 0x5beb
   1129c:	mov	r0, #0
   112a0:	mov	r2, #5
   112a4:	movt	r1, #1
   112a8:	bl	10f98 <dcgettext@plt>
   112ac:	mov	r1, r0
   112b0:	movw	r0, #29076	; 0x7194
   112b4:	movt	r0, #2
   112b8:	ldr	r2, [r0]
   112bc:	mov	r0, #1
   112c0:	mov	r3, r2
   112c4:	str	r2, [sp]
   112c8:	bl	110d0 <__printf_chk@plt>
   112cc:	movw	r1, #23635	; 0x5c53
   112d0:	mov	r0, #0
   112d4:	mov	r2, #5
   112d8:	movt	r1, #1
   112dc:	bl	10f98 <dcgettext@plt>
   112e0:	movw	r7, #29020	; 0x715c
   112e4:	movt	r7, #2
   112e8:	ldr	r1, [r7]
   112ec:	bl	10ef0 <fputs_unlocked@plt>
   112f0:	movw	r1, #24936	; 0x6168
   112f4:	mov	r0, #0
   112f8:	mov	r2, #5
   112fc:	movt	r1, #1
   11300:	bl	10f98 <dcgettext@plt>
   11304:	ldr	r1, [r7]
   11308:	bl	10ef0 <fputs_unlocked@plt>
   1130c:	movw	r1, #23693	; 0x5c8d
   11310:	mov	r0, #0
   11314:	mov	r2, #5
   11318:	movt	r1, #1
   1131c:	bl	10f98 <dcgettext@plt>
   11320:	ldr	r1, [r7]
   11324:	bl	10ef0 <fputs_unlocked@plt>
   11328:	movw	r1, #23905	; 0x5d61
   1132c:	mov	r0, #0
   11330:	mov	r2, #5
   11334:	movt	r1, #1
   11338:	bl	10f98 <dcgettext@plt>
   1133c:	ldr	r1, [r7]
   11340:	bl	10ef0 <fputs_unlocked@plt>
   11344:	movw	r1, #23950	; 0x5d8e
   11348:	mov	r0, #0
   1134c:	mov	r2, #5
   11350:	movt	r1, #1
   11354:	bl	10f98 <dcgettext@plt>
   11358:	ldr	r1, [r7]
   1135c:	bl	10ef0 <fputs_unlocked@plt>
   11360:	movw	r1, #24004	; 0x5dc4
   11364:	mov	r0, #0
   11368:	mov	r2, #5
   1136c:	movt	r1, #1
   11370:	bl	10f98 <dcgettext@plt>
   11374:	ldr	r1, [r7]
   11378:	bl	10ef0 <fputs_unlocked@plt>
   1137c:	movw	r1, #24517	; 0x5fc5
   11380:	mov	r0, #0
   11384:	mov	r2, #5
   11388:	movt	r1, #1
   1138c:	bl	10f98 <dcgettext@plt>
   11390:	ldr	r1, [r7]
   11394:	bl	10ef0 <fputs_unlocked@plt>
   11398:	movw	r0, #25752	; 0x6498
   1139c:	mov	r2, #48	; 0x30
   113a0:	add	r6, sp, #8
   113a4:	movw	r5, #24725	; 0x6095
   113a8:	movt	r0, #1
   113ac:	movt	r5, #1
   113b0:	add	r1, r0, #32
   113b4:	add	r3, r0, #16
   113b8:	vld1.64	{d18-d19}, [r0], r2
   113bc:	vld1.64	{d16-d17}, [r1]
   113c0:	vld1.64	{d20-d21}, [r3]
   113c4:	vldr	d22, [r0]
   113c8:	add	r1, r6, #32
   113cc:	add	r0, r6, #16
   113d0:	vst1.64	{d16-d17}, [r1]
   113d4:	movw	r1, #25011	; 0x61b3
   113d8:	vst1.64	{d20-d21}, [r0]
   113dc:	mov	r0, r6
   113e0:	movt	r1, #1
   113e4:	vst1.64	{d18-d19}, [r0], r2
   113e8:	vstr	d22, [r0]
   113ec:	mov	r0, r5
   113f0:	bl	10f08 <strcmp@plt>
   113f4:	cmp	r0, #0
   113f8:	ldrne	r1, [r6, #8]!
   113fc:	cmpne	r1, #0
   11400:	bne	113ec <__mempcpy_chk@plt+0x268>
   11404:	movw	r1, #25106	; 0x6212
   11408:	ldr	r6, [r6, #4]
   1140c:	mov	r0, #0
   11410:	mov	r2, #5
   11414:	movt	r1, #1
   11418:	bl	10f98 <dcgettext@plt>
   1141c:	movw	r2, #24760	; 0x60b8
   11420:	movw	r3, #25129	; 0x6229
   11424:	mov	r1, r0
   11428:	mov	r0, #1
   1142c:	movt	r2, #1
   11430:	movt	r3, #1
   11434:	bl	110d0 <__printf_chk@plt>
   11438:	cmp	r6, #0
   1143c:	mov	r0, #5
   11440:	mov	r1, #0
   11444:	moveq	r6, r5
   11448:	bl	11118 <setlocale@plt>
   1144c:	cmp	r0, #0
   11450:	beq	11488 <__mempcpy_chk@plt+0x304>
   11454:	movw	r1, #25169	; 0x6251
   11458:	mov	r2, #3
   1145c:	movt	r1, #1
   11460:	bl	11160 <strncmp@plt>
   11464:	cmp	r0, #0
   11468:	beq	11488 <__mempcpy_chk@plt+0x304>
   1146c:	movw	r1, #25173	; 0x6255
   11470:	mov	r0, #0
   11474:	mov	r2, #5
   11478:	movt	r1, #1
   1147c:	bl	10f98 <dcgettext@plt>
   11480:	ldr	r1, [r7]
   11484:	bl	10ef0 <fputs_unlocked@plt>
   11488:	movw	r1, #25244	; 0x629c
   1148c:	mov	r0, #0
   11490:	mov	r2, #5
   11494:	movt	r1, #1
   11498:	bl	10f98 <dcgettext@plt>
   1149c:	movw	r2, #25129	; 0x6229
   114a0:	mov	r1, r0
   114a4:	mov	r0, #1
   114a8:	mov	r3, r5
   114ac:	movt	r2, #1
   114b0:	bl	110d0 <__printf_chk@plt>
   114b4:	movw	r1, #25271	; 0x62b7
   114b8:	mov	r0, #0
   114bc:	mov	r2, #5
   114c0:	movt	r1, #1
   114c4:	bl	10f98 <dcgettext@plt>
   114c8:	mov	r1, r0
   114cc:	movw	r0, #25039	; 0x61cf
   114d0:	movw	r3, #25321	; 0x62e9
   114d4:	cmp	r6, r5
   114d8:	mov	r2, r6
   114dc:	movt	r0, #1
   114e0:	movt	r3, #1
   114e4:	moveq	r3, r0
   114e8:	mov	r0, #1
   114ec:	bl	110d0 <__printf_chk@plt>
   114f0:	mov	r0, r4
   114f4:	bl	11070 <exit@plt>
   114f8:	movw	r0, #29016	; 0x7158
   114fc:	movw	r1, #23492	; 0x5bc4
   11500:	mov	r2, #5
   11504:	movt	r0, #2
   11508:	movt	r1, #1
   1150c:	ldr	r5, [r0]
   11510:	mov	r0, #0
   11514:	bl	10f98 <dcgettext@plt>
   11518:	mov	r2, r0
   1151c:	movw	r0, #29076	; 0x7194
   11520:	mov	r1, #1
   11524:	movt	r0, #2
   11528:	ldr	r3, [r0]
   1152c:	mov	r0, r5
   11530:	bl	110e8 <__fprintf_chk@plt>
   11534:	mov	r0, r4
   11538:	bl	11070 <exit@plt>
   1153c:	nop	{0}
   11540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11544:	add	fp, sp, #28
   11548:	sub	sp, sp, #4
   1154c:	vpush	{d8-d14}
   11550:	sub	sp, sp, #72	; 0x48
   11554:	mov	sl, r0
   11558:	movw	r0, #25632	; 0x6420
   1155c:	mov	r9, r1
   11560:	movt	r0, #1
   11564:	vld1.64	{d16-d17}, [r0]
   11568:	add	r0, sp, #48	; 0x30
   1156c:	vst1.64	{d16-d17}, [r0]
   11570:	ldr	r0, [r1]
   11574:	bl	12afc <__mempcpy_chk@plt+0x1978>
   11578:	movw	r1, #25321	; 0x62e9
   1157c:	mov	r0, #6
   11580:	movt	r1, #1
   11584:	bl	11118 <setlocale@plt>
   11588:	movw	r1, #29032	; 0x7168
   1158c:	cmp	r0, #0
   11590:	movw	r4, #24764	; 0x60bc
   11594:	movt	r1, #2
   11598:	movwne	r0, #1
   1159c:	movt	r4, #1
   115a0:	strb	r0, [r1]
   115a4:	movw	r1, #24729	; 0x6099
   115a8:	mov	r0, r4
   115ac:	movt	r1, #1
   115b0:	bl	11154 <bindtextdomain@plt>
   115b4:	mov	r0, r4
   115b8:	bl	10fb0 <textdomain@plt>
   115bc:	movw	r0, #10732	; 0x29ec
   115c0:	movt	r0, #1
   115c4:	bl	15b9c <__mempcpy_chk@plt+0x4a18>
   115c8:	movw	r0, #29033	; 0x7169
   115cc:	mov	r7, #0
   115d0:	movw	r1, #29036	; 0x716c
   115d4:	movw	r3, #29008	; 0x7150
   115d8:	movt	r0, #2
   115dc:	movt	r1, #2
   115e0:	movt	r3, #2
   115e4:	strb	r7, [r0]
   115e8:	movw	r0, #25648	; 0x6430
   115ec:	movt	r0, #1
   115f0:	str	r0, [r1]
   115f4:	ldr	r0, [r3]
   115f8:	cmp	r0, sl
   115fc:	bge	116d8 <__mempcpy_chk@plt+0x554>
   11600:	movw	r4, #24753	; 0x60b1
   11604:	movw	r6, #25652	; 0x6434
   11608:	movw	r5, #29024	; 0x7160
   1160c:	mov	r8, #0
   11610:	mov	r7, #0
   11614:	movt	r4, #1
   11618:	movt	r6, #1
   1161c:	movt	r5, #2
   11620:	ldr	r1, [r9, r0, lsl #2]
   11624:	ldrb	r2, [r1]
   11628:	cmp	r2, #45	; 0x2d
   1162c:	bne	11648 <__mempcpy_chk@plt+0x4c4>
   11630:	ldrb	r1, [r1, #1]
   11634:	cmp	r1, #46	; 0x2e
   11638:	beq	116d8 <__mempcpy_chk@plt+0x554>
   1163c:	sub	r1, r1, #48	; 0x30
   11640:	cmp	r1, #10
   11644:	bcc	116d8 <__mempcpy_chk@plt+0x554>
   11648:	mov	r0, sl
   1164c:	mov	r1, r9
   11650:	mov	r2, r4
   11654:	mov	r3, r6
   11658:	str	r8, [sp]
   1165c:	bl	11058 <getopt_long@plt>
   11660:	cmp	r0, #101	; 0x65
   11664:	ble	116c4 <__mempcpy_chk@plt+0x540>
   11668:	movw	r3, #29008	; 0x7150
   1166c:	cmp	r0, #102	; 0x66
   11670:	movt	r3, #2
   11674:	beq	11694 <__mempcpy_chk@plt+0x510>
   11678:	cmp	r0, #115	; 0x73
   1167c:	bne	1169c <__mempcpy_chk@plt+0x518>
   11680:	ldr	r0, [r5]
   11684:	movw	r1, #29036	; 0x716c
   11688:	movt	r1, #2
   1168c:	str	r0, [r1]
   11690:	b	116b4 <__mempcpy_chk@plt+0x530>
   11694:	ldr	r7, [r5]
   11698:	b	116b4 <__mempcpy_chk@plt+0x530>
   1169c:	cmp	r0, #119	; 0x77
   116a0:	bne	12190 <__mempcpy_chk@plt+0x100c>
   116a4:	movw	r0, #29033	; 0x7169
   116a8:	mov	r1, #1
   116ac:	movt	r0, #2
   116b0:	strb	r1, [r0]
   116b4:	ldr	r0, [r3]
   116b8:	cmp	r0, sl
   116bc:	blt	11620 <__mempcpy_chk@plt+0x49c>
   116c0:	b	116d8 <__mempcpy_chk@plt+0x554>
   116c4:	movw	r3, #29008	; 0x7150
   116c8:	cmn	r0, #1
   116cc:	movt	r3, #2
   116d0:	bne	120f8 <__mempcpy_chk@plt+0xf74>
   116d4:	ldr	r0, [r3]
   116d8:	subs	r6, sl, r0
   116dc:	beq	12158 <__mempcpy_chk@plt+0xfd4>
   116e0:	cmp	r6, #4
   116e4:	bcs	12164 <__mempcpy_chk@plt+0xfe0>
   116e8:	cmp	r7, #0
   116ec:	str	sl, [sp, #28]
   116f0:	str	r6, [sp, #20]
   116f4:	beq	11870 <__mempcpy_chk@plt+0x6ec>
   116f8:	mov	r5, #0
   116fc:	mov	r0, #0
   11700:	b	11720 <__mempcpy_chk@plt+0x59c>
   11704:	cmp	r1, #0
   11708:	beq	120b8 <__mempcpy_chk@plt+0xf34>
   1170c:	cmp	r1, #37	; 0x25
   11710:	mov	r1, #1
   11714:	add	r5, r5, #1
   11718:	movweq	r1, #2
   1171c:	add	r0, r1, r0
   11720:	ldrb	r1, [r7, r0]
   11724:	cmp	r1, #37	; 0x25
   11728:	bne	11704 <__mempcpy_chk@plt+0x580>
   1172c:	add	r4, r0, #1
   11730:	ldrb	r2, [r7, r4]
   11734:	cmp	r2, #37	; 0x25
   11738:	beq	1170c <__mempcpy_chk@plt+0x588>
   1173c:	movw	r1, #25394	; 0x6332
   11740:	add	r0, r7, r4
   11744:	movt	r1, #1
   11748:	bl	11178 <strspn@plt>
   1174c:	movw	r1, #25401	; 0x6339
   11750:	add	r4, r0, r4
   11754:	movt	r1, #1
   11758:	add	r0, r7, r4
   1175c:	bl	11178 <strspn@plt>
   11760:	add	r6, r4, r0
   11764:	mov	r8, r9
   11768:	ldrb	r0, [r7, r6]
   1176c:	cmp	r0, #46	; 0x2e
   11770:	bne	11790 <__mempcpy_chk@plt+0x60c>
   11774:	movw	r1, #25401	; 0x6339
   11778:	add	r4, r6, #1
   1177c:	movt	r1, #1
   11780:	add	r0, r7, r4
   11784:	bl	11178 <strspn@plt>
   11788:	add	r6, r0, r4
   1178c:	ldrb	r0, [r7, r6]
   11790:	sub	r0, r0, #76	; 0x4c
   11794:	clz	r0, r0
   11798:	lsr	r9, r0, #5
   1179c:	add	r4, r6, r9
   117a0:	ldrb	r1, [r7, r4]
   117a4:	cmp	r1, #0
   117a8:	beq	12198 <__mempcpy_chk@plt+0x1014>
   117ac:	movw	r0, #25433	; 0x6359
   117b0:	mov	r2, #9
   117b4:	str	r8, [sp, #24]
   117b8:	movt	r0, #1
   117bc:	bl	110f4 <memchr@plt>
   117c0:	cmp	r0, #0
   117c4:	beq	121a4 <__mempcpy_chk@plt+0x1020>
   117c8:	add	r3, r7, r6
   117cc:	add	r0, r4, #1
   117d0:	mov	r8, #0
   117d4:	b	117fc <__mempcpy_chk@plt+0x678>
   117d8:	add	r2, r0, r7
   117dc:	ldrb	r2, [r2, #1]
   117e0:	cmp	r2, #37	; 0x25
   117e4:	bne	120c4 <__mempcpy_chk@plt+0xf40>
   117e8:	cmp	r1, #37	; 0x25
   117ec:	mov	r1, #1
   117f0:	add	r8, r8, #1
   117f4:	movweq	r1, #2
   117f8:	add	r0, r1, r0
   117fc:	ldrb	r1, [r7, r0]
   11800:	cmp	r1, #37	; 0x25
   11804:	beq	117d8 <__mempcpy_chk@plt+0x654>
   11808:	cmp	r1, #0
   1180c:	bne	117e8 <__mempcpy_chk@plt+0x664>
   11810:	add	r0, r0, #2
   11814:	mov	r4, r3
   11818:	bl	14f54 <__mempcpy_chk@plt+0x3dd0>
   1181c:	mov	r1, r7
   11820:	mov	r2, r6
   11824:	mov	sl, r0
   11828:	bl	10f5c <memcpy@plt>
   1182c:	mov	r0, #76	; 0x4c
   11830:	mov	r1, sl
   11834:	strb	r0, [r1, r6]!
   11838:	add	r0, r1, #1
   1183c:	add	r1, r4, r9
   11840:	bl	10fec <strcpy@plt>
   11844:	movw	r0, #29033	; 0x7169
   11848:	movt	r0, #2
   1184c:	ldrb	r0, [r0]
   11850:	cmp	r0, #1
   11854:	beq	121e0 <__mempcpy_chk@plt+0x105c>
   11858:	ldr	r9, [sp, #24]
   1185c:	ldr	r6, [sp, #20]
   11860:	movw	r3, #29008	; 0x7150
   11864:	mov	r0, #1
   11868:	movt	r3, #2
   1186c:	b	11880 <__mempcpy_chk@plt+0x6fc>
   11870:	mov	r0, #0
   11874:	mov	sl, #0
   11878:	mov	r5, #0
   1187c:	mov	r8, #0
   11880:	str	r0, [sp, #16]
   11884:	cmp	r6, #3
   11888:	bne	11928 <__mempcpy_chk@plt+0x7a4>
   1188c:	ldr	r0, [r3]
   11890:	mov	r4, #0
   11894:	add	r0, r9, r0, lsl #2
   11898:	ldr	r6, [r0, #4]
   1189c:	ldrb	r0, [r6]
   118a0:	sub	r0, r0, #48	; 0x30
   118a4:	cmp	r0, #9
   118a8:	bhi	1192c <__mempcpy_chk@plt+0x7a8>
   118ac:	mov	r0, r6
   118b0:	bl	11088 <strlen@plt>
   118b4:	movw	r1, #25401	; 0x6339
   118b8:	mov	r7, r0
   118bc:	mov	r0, r6
   118c0:	movt	r1, #1
   118c4:	bl	11178 <strspn@plt>
   118c8:	movw	r3, #29008	; 0x7150
   118cc:	cmp	r7, r0
   118d0:	movt	r3, #2
   118d4:	bne	1192c <__mempcpy_chk@plt+0x7a8>
   118d8:	movw	r3, #10568	; 0x2948
   118dc:	add	r2, sp, #48	; 0x30
   118e0:	mov	r0, r6
   118e4:	mov	r1, #0
   118e8:	mov	r4, #0
   118ec:	movt	r3, #1
   118f0:	bl	154d4 <__mempcpy_chk@plt+0x4350>
   118f4:	cmp	r0, #0
   118f8:	beq	11ff4 <__mempcpy_chk@plt+0xe70>
   118fc:	vldr	d16, [sp, #48]	; 0x30
   11900:	vcmpe.f64	d16, #0.0
   11904:	vmrs	APSR_nzcv, fpscr
   11908:	ble	11ff4 <__mempcpy_chk@plt+0xe70>
   1190c:	vldr	d17, [pc, #636]	; 11b90 <__mempcpy_chk@plt+0xa0c>
   11910:	movw	r3, #29008	; 0x7150
   11914:	movt	r3, #2
   11918:	vcmpe.f64	d16, d17
   1191c:	vmrs	APSR_nzcv, fpscr
   11920:	movls	r4, #1
   11924:	b	1192c <__mempcpy_chk@plt+0x7a8>
   11928:	mov	r4, #1
   1192c:	str	r4, [sp, #12]
   11930:	ldr	r4, [r3]
   11934:	str	sl, [sp, #24]
   11938:	ldr	r6, [r9, r4, lsl #2]
   1193c:	ldrb	r0, [r6]
   11940:	sub	r0, r0, #48	; 0x30
   11944:	cmp	r0, #9
   11948:	bhi	11ab4 <__mempcpy_chk@plt+0x930>
   1194c:	mov	r0, r6
   11950:	bl	11088 <strlen@plt>
   11954:	movw	r1, #25401	; 0x6339
   11958:	mov	r7, r0
   1195c:	mov	r0, r6
   11960:	movt	r1, #1
   11964:	bl	11178 <strspn@plt>
   11968:	cmp	r7, r0
   1196c:	bne	11aac <__mempcpy_chk@plt+0x928>
   11970:	ldr	r0, [sp, #20]
   11974:	movw	r3, #29008	; 0x7150
   11978:	movt	r3, #2
   1197c:	cmp	r0, #1
   11980:	bne	11a08 <__mempcpy_chk@plt+0x884>
   11984:	movw	r0, #29033	; 0x7169
   11988:	ldr	r1, [sp, #16]
   1198c:	movt	r0, #2
   11990:	ldrb	r0, [r0]
   11994:	orr	r0, r1, r0
   11998:	tst	r0, #1
   1199c:	bne	11ab4 <__mempcpy_chk@plt+0x930>
   119a0:	movw	r0, #29036	; 0x716c
   119a4:	movt	r0, #2
   119a8:	ldr	r0, [r0]
   119ac:	bl	11088 <strlen@plt>
   119b0:	cmp	r0, #1
   119b4:	bne	11aac <__mempcpy_chk@plt+0x928>
   119b8:	ldr	r1, [sp, #20]
   119bc:	vldr	d16, [sp, #48]	; 0x30
   119c0:	movw	r0, #24891	; 0x613b
   119c4:	movt	r0, #1
   119c8:	cmp	r1, #1
   119cc:	moveq	r6, r0
   119d0:	add	r0, r1, r4
   119d4:	add	r4, r9, r0, lsl #2
   119d8:	vmov	r0, r1, d16
   119dc:	bl	15af8 <__mempcpy_chk@plt+0x4974>
   119e0:	mov	r3, r1
   119e4:	ldr	r1, [r4, #-4]
   119e8:	mov	r2, r0
   119ec:	mov	r0, r6
   119f0:	bl	12254 <__mempcpy_chk@plt+0x10d0>
   119f4:	movw	r3, #29008	; 0x7150
   119f8:	movt	r3, #2
   119fc:	ldr	r4, [r3]
   11a00:	ldr	r6, [r9, r4, lsl #2]
   11a04:	b	11ab4 <__mempcpy_chk@plt+0x930>
   11a08:	add	sl, r9, r4, lsl #2
   11a0c:	ldr	r7, [sl, #4]
   11a10:	ldrb	r0, [r7]
   11a14:	sub	r0, r0, #48	; 0x30
   11a18:	cmp	r0, #9
   11a1c:	bhi	11ab4 <__mempcpy_chk@plt+0x930>
   11a20:	mov	r0, r7
   11a24:	bl	11088 <strlen@plt>
   11a28:	movw	r1, #25401	; 0x6339
   11a2c:	str	r0, [sp, #8]
   11a30:	mov	r0, r7
   11a34:	movt	r1, #1
   11a38:	bl	11178 <strspn@plt>
   11a3c:	ldr	r1, [sp, #8]
   11a40:	cmp	r1, r0
   11a44:	bne	11aac <__mempcpy_chk@plt+0x928>
   11a48:	ldr	r0, [sp, #20]
   11a4c:	movw	r3, #29008	; 0x7150
   11a50:	movt	r3, #2
   11a54:	cmp	r0, #3
   11a58:	bcc	11984 <__mempcpy_chk@plt+0x800>
   11a5c:	ldr	r0, [sp, #12]
   11a60:	cmp	r0, #0
   11a64:	beq	11ab4 <__mempcpy_chk@plt+0x930>
   11a68:	ldr	r7, [sl, #8]
   11a6c:	ldrb	r0, [r7]
   11a70:	sub	r0, r0, #48	; 0x30
   11a74:	cmp	r0, #9
   11a78:	bhi	11ab4 <__mempcpy_chk@plt+0x930>
   11a7c:	mov	r0, r7
   11a80:	bl	11088 <strlen@plt>
   11a84:	movw	r1, #25401	; 0x6339
   11a88:	mov	sl, r0
   11a8c:	mov	r0, r7
   11a90:	movt	r1, #1
   11a94:	bl	11178 <strspn@plt>
   11a98:	movw	r3, #29008	; 0x7150
   11a9c:	cmp	sl, r0
   11aa0:	movt	r3, #2
   11aa4:	beq	11984 <__mempcpy_chk@plt+0x800>
   11aa8:	b	11ab4 <__mempcpy_chk@plt+0x930>
   11aac:	movw	r3, #29008	; 0x7150
   11ab0:	movt	r3, #2
   11ab4:	add	r0, r4, #1
   11ab8:	mov	r1, r6
   11abc:	str	r0, [r3]
   11ac0:	add	r0, sp, #32
   11ac4:	bl	125d8 <__mempcpy_chk@plt+0x1454>
   11ac8:	movw	r2, #29008	; 0x7150
   11acc:	ldr	r4, [sp, #28]
   11ad0:	ldr	r7, [sp, #32]
   11ad4:	ldr	r6, [sp, #36]	; 0x24
   11ad8:	ldr	r3, [sp, #40]	; 0x28
   11adc:	ldr	ip, [sp, #44]	; 0x2c
   11ae0:	movt	r2, #2
   11ae4:	ldr	r0, [r2]
   11ae8:	cmp	r0, r4
   11aec:	bge	11b98 <__mempcpy_chk@plt+0xa14>
   11af0:	add	r1, r0, #1
   11af4:	str	r3, [sp, #12]
   11af8:	str	ip, [sp, #20]
   11afc:	str	r1, [r2]
   11b00:	ldr	r1, [r9, r0, lsl #2]
   11b04:	add	r0, sp, #32
   11b08:	bl	125d8 <__mempcpy_chk@plt+0x1454>
   11b0c:	movw	r3, #29008	; 0x7150
   11b10:	ldr	lr, [sp, #32]
   11b14:	ldr	r2, [sp, #36]	; 0x24
   11b18:	ldr	r1, [sp, #40]	; 0x28
   11b1c:	ldr	ip, [sp, #44]	; 0x2c
   11b20:	movt	r3, #2
   11b24:	ldr	r0, [r3]
   11b28:	cmp	r0, r4
   11b2c:	bge	11b74 <__mempcpy_chk@plt+0x9f0>
   11b30:	vmov	d16, lr, r2
   11b34:	str	r1, [sp, #56]	; 0x38
   11b38:	str	lr, [sp, #48]	; 0x30
   11b3c:	str	ip, [sp, #60]	; 0x3c
   11b40:	str	r2, [sp, #52]	; 0x34
   11b44:	vcmp.f64	d16, #0.0
   11b48:	vmrs	APSR_nzcv, fpscr
   11b4c:	beq	1220c <__mempcpy_chk@plt+0x1088>
   11b50:	add	r1, r0, #1
   11b54:	str	r1, [r3]
   11b58:	ldr	r1, [r9, r0, lsl #2]
   11b5c:	add	r0, sp, #32
   11b60:	bl	125d8 <__mempcpy_chk@plt+0x1454>
   11b64:	ldr	lr, [sp, #32]
   11b68:	ldr	r2, [sp, #36]	; 0x24
   11b6c:	ldr	r1, [sp, #40]	; 0x28
   11b70:	ldr	ip, [sp, #44]	; 0x2c
   11b74:	ldr	r3, [sp, #20]
   11b78:	ldr	r4, [sp, #12]
   11b7c:	mov	sl, r7
   11b80:	mov	r9, r6
   11b84:	cmp	r3, #0
   11b88:	beq	11bb8 <__mempcpy_chk@plt+0xa34>
   11b8c:	b	11bd0 <__mempcpy_chk@plt+0xa4c>
   11b90:	andeq	r0, r0, r0
   11b94:	rsbmi	r0, r9, r0
   11b98:	movw	r9, #0
   11b9c:	mov	r1, r3
   11ba0:	mov	sl, #0
   11ba4:	mov	r4, #1
   11ba8:	mov	r3, #0
   11bac:	mov	lr, r7
   11bb0:	mov	r2, r6
   11bb4:	movt	r9, #16368	; 0x3ff0
   11bb8:	cmp	ip, #0
   11bbc:	ldreq	r0, [sp, #60]	; 0x3c
   11bc0:	cmpeq	r0, #0
   11bc4:	beq	11e08 <__mempcpy_chk@plt+0xc84>
   11bc8:	mov	r7, sl
   11bcc:	mov	r6, r9
   11bd0:	ldr	sl, [sp, #24]
   11bd4:	str	r5, [sp, #28]
   11bd8:	cmp	sl, #0
   11bdc:	bne	11c00 <__mempcpy_chk@plt+0xa7c>
   11be0:	ldr	r0, [sp, #60]	; 0x3c
   11be4:	movw	sl, #25626	; 0x641a
   11be8:	movt	sl, #1
   11bec:	cmp	r3, r0
   11bf0:	movgt	r0, r3
   11bf4:	cmn	ip, #-2147483647	; 0x80000001
   11bf8:	cmnne	r0, #-2147483647	; 0x80000001
   11bfc:	bne	11efc <__mempcpy_chk@plt+0xd78>
   11c00:	vmov	d9, lr, r2
   11c04:	vmov	d10, r7, r6
   11c08:	vldr	d8, [sp, #48]	; 0x30
   11c0c:	mov	r1, #0
   11c10:	mov	r0, #0
   11c14:	vcmpe.f64	d10, d9
   11c18:	vmrs	APSR_nzcv, fpscr
   11c1c:	vcmpe.f64	d9, d10
   11c20:	movwmi	r1, #1
   11c24:	vmrs	APSR_nzcv, fpscr
   11c28:	vcmpe.f64	d8, #0.0
   11c2c:	movwmi	r0, #1
   11c30:	vmrs	APSR_nzcv, fpscr
   11c34:	movmi	r0, r1
   11c38:	cmp	r0, #0
   11c3c:	bne	11fe0 <__mempcpy_chk@plt+0xe5c>
   11c40:	mov	r0, #1
   11c44:	mov	r1, sl
   11c48:	mov	r2, r7
   11c4c:	mov	r3, r6
   11c50:	bl	110d0 <__printf_chk@plt>
   11c54:	cmp	r0, #0
   11c58:	bmi	11e04 <__mempcpy_chk@plt+0xc80>
   11c5c:	vmov.f64	d11, #112	; 0x3f800000  1.0
   11c60:	movw	r6, #29020	; 0x715c
   11c64:	vorr	d14, d10, d10
   11c68:	mov	r4, #0
   11c6c:	mov	r7, #0
   11c70:	movt	r6, #2
   11c74:	vmov.f64	d12, d11
   11c78:	tst	r7, #1
   11c7c:	bne	11fc8 <__mempcpy_chk@plt+0xe44>
   11c80:	vmov.f64	d13, d10
   11c84:	mov	r0, #0
   11c88:	mov	r7, #0
   11c8c:	vmla.f64	d13, d8, d12
   11c90:	vcmpe.f64	d13, d9
   11c94:	vmrs	APSR_nzcv, fpscr
   11c98:	vcmpe.f64	d8, #0.0
   11c9c:	movwmi	r0, #1
   11ca0:	movwgt	r7, #1
   11ca4:	vmrs	APSR_nzcv, fpscr
   11ca8:	movmi	r7, r0
   11cac:	cmp	r7, #1
   11cb0:	bne	11dc8 <__mempcpy_chk@plt+0xc44>
   11cb4:	movw	r0, #29032	; 0x7168
   11cb8:	movt	r0, #2
   11cbc:	ldrb	r0, [r0]
   11cc0:	cmp	r0, #0
   11cc4:	beq	11cd8 <__mempcpy_chk@plt+0xb54>
   11cc8:	movw	r1, #25630	; 0x641e
   11ccc:	mov	r0, #1
   11cd0:	movt	r1, #1
   11cd4:	bl	11118 <setlocale@plt>
   11cd8:	add	r0, sp, #68	; 0x44
   11cdc:	mov	r1, #1
   11ce0:	mov	r2, sl
   11ce4:	vstr	d13, [sp]
   11ce8:	bl	1101c <__asprintf_chk@plt>
   11cec:	mov	r9, r0
   11cf0:	movw	r0, #29032	; 0x7168
   11cf4:	movt	r0, #2
   11cf8:	ldrb	r0, [r0]
   11cfc:	cmp	r0, #0
   11d00:	beq	11d14 <__mempcpy_chk@plt+0xb90>
   11d04:	movw	r1, #25321	; 0x62e9
   11d08:	mov	r0, #1
   11d0c:	movt	r1, #1
   11d10:	bl	11118 <setlocale@plt>
   11d14:	cmn	r9, #1
   11d18:	ble	11ef8 <__mempcpy_chk@plt+0xd74>
   11d1c:	ldr	r1, [sp, #68]	; 0x44
   11d20:	sub	r0, r9, r8
   11d24:	movw	r3, #10568	; 0x2948
   11d28:	add	r2, sp, #32
   11d2c:	movt	r3, #1
   11d30:	strb	r4, [r1, r0]
   11d34:	ldr	r1, [sp, #28]
   11d38:	ldr	r0, [sp, #68]	; 0x44
   11d3c:	add	r0, r0, r1
   11d40:	mov	r1, #0
   11d44:	bl	154d4 <__mempcpy_chk@plt+0x4350>
   11d48:	cmp	r0, #0
   11d4c:	beq	11fc0 <__mempcpy_chk@plt+0xe3c>
   11d50:	vldr	d16, [sp, #32]
   11d54:	vcmp.f64	d16, d9
   11d58:	vmrs	APSR_nzcv, fpscr
   11d5c:	bne	11fc0 <__mempcpy_chk@plt+0xe3c>
   11d60:	add	r0, sp, #64	; 0x40
   11d64:	mov	r1, #1
   11d68:	mov	r2, sl
   11d6c:	str	r4, [sp, #64]	; 0x40
   11d70:	vstr	d14, [sp]
   11d74:	mov	r5, #0
   11d78:	mov	r4, sl
   11d7c:	bl	1101c <__asprintf_chk@plt>
   11d80:	cmn	r0, #1
   11d84:	ble	11ef8 <__mempcpy_chk@plt+0xd74>
   11d88:	ldr	r1, [sp, #64]	; 0x40
   11d8c:	sub	r0, r0, r8
   11d90:	strb	r5, [r1, r0]
   11d94:	ldr	r5, [sp, #64]	; 0x40
   11d98:	ldr	r1, [sp, #68]	; 0x44
   11d9c:	mov	r0, r5
   11da0:	bl	10f08 <strcmp@plt>
   11da4:	mov	r9, r0
   11da8:	mov	r0, r5
   11dac:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   11db0:	ldr	r0, [sp, #68]	; 0x44
   11db4:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   11db8:	cmp	r9, #0
   11dbc:	beq	11fc8 <__mempcpy_chk@plt+0xe44>
   11dc0:	mov	sl, r4
   11dc4:	mov	r4, #0
   11dc8:	movw	r0, #29036	; 0x716c
   11dcc:	ldr	r1, [r6]
   11dd0:	movt	r0, #2
   11dd4:	ldr	r0, [r0]
   11dd8:	bl	10ef0 <fputs_unlocked@plt>
   11ddc:	cmn	r0, #1
   11de0:	beq	11e04 <__mempcpy_chk@plt+0xc80>
   11de4:	vmov	r2, r3, d13
   11de8:	mov	r0, #1
   11dec:	mov	r1, sl
   11df0:	bl	110d0 <__printf_chk@plt>
   11df4:	vadd.f64	d12, d12, d11
   11df8:	vorr	d14, d13, d13
   11dfc:	cmp	r0, #0
   11e00:	bpl	11c78 <__mempcpy_chk@plt+0xaf4>
   11e04:	bl	12904 <__mempcpy_chk@plt+0x1780>
   11e08:	vmov	d9, sl, r9
   11e0c:	vcmpe.f64	d9, #0.0
   11e10:	vmrs	APSR_nzcv, fpscr
   11e14:	blt	11bc8 <__mempcpy_chk@plt+0xa44>
   11e18:	vmov.i32	d16, #0	; 0x00000000
   11e1c:	vmul.f64	d16, d9, d16
   11e20:	vcmp.f64	d16, #0.0
   11e24:	vmrs	APSR_nzcv, fpscr
   11e28:	bne	11bc8 <__mempcpy_chk@plt+0xa44>
   11e2c:	vmov	d8, lr, r2
   11e30:	vcmpe.f64	d8, #0.0
   11e34:	vmrs	APSR_nzcv, fpscr
   11e38:	blt	11bc8 <__mempcpy_chk@plt+0xa44>
   11e3c:	vldr	d16, [sp, #48]	; 0x30
   11e40:	vcmpe.f64	d16, #0.0
   11e44:	vmrs	APSR_nzcv, fpscr
   11e48:	ble	11bc8 <__mempcpy_chk@plt+0xa44>
   11e4c:	vldr	d17, [pc, #-708]	; 11b90 <__mempcpy_chk@plt+0xa0c>
   11e50:	vcmpe.f64	d16, d17
   11e54:	vmrs	APSR_nzcv, fpscr
   11e58:	bhi	11bc8 <__mempcpy_chk@plt+0xa44>
   11e5c:	movw	r0, #29033	; 0x7169
   11e60:	str	r1, [sp, #28]
   11e64:	ldr	r1, [sp, #16]
   11e68:	movt	r0, #2
   11e6c:	ldrb	r0, [r0]
   11e70:	orr	r0, r1, r0
   11e74:	tst	r0, #1
   11e78:	bne	120a8 <__mempcpy_chk@plt+0xf24>
   11e7c:	movw	r0, #29036	; 0x716c
   11e80:	str	ip, [sp, #8]
   11e84:	str	r3, [sp, #20]
   11e88:	str	r2, [sp, #12]
   11e8c:	str	lr, [sp, #16]
   11e90:	movt	r0, #2
   11e94:	ldr	r0, [r0]
   11e98:	bl	11088 <strlen@plt>
   11e9c:	cmp	r0, #1
   11ea0:	bne	12098 <__mempcpy_chk@plt+0xf14>
   11ea4:	movw	r2, #24926	; 0x615e
   11ea8:	add	r0, sp, #32
   11eac:	mov	r1, #1
   11eb0:	vstr	d9, [sp]
   11eb4:	movt	r2, #1
   11eb8:	bl	1101c <__asprintf_chk@plt>
   11ebc:	cmn	r0, #1
   11ec0:	ble	11ef8 <__mempcpy_chk@plt+0xd74>
   11ec4:	vmov.i32	d16, #0	; 0x00000000
   11ec8:	vmul.f64	d16, d8, d16
   11ecc:	vcmp.f64	d16, #0.0
   11ed0:	vmrs	APSR_nzcv, fpscr
   11ed4:	bne	12034 <__mempcpy_chk@plt+0xeb0>
   11ed8:	movw	r2, #24926	; 0x615e
   11edc:	add	r0, sp, #68	; 0x44
   11ee0:	mov	r1, #1
   11ee4:	vstr	d8, [sp]
   11ee8:	movt	r2, #1
   11eec:	bl	1101c <__asprintf_chk@plt>
   11ef0:	cmn	r0, #1
   11ef4:	bgt	12044 <__mempcpy_chk@plt+0xec0>
   11ef8:	bl	15490 <__mempcpy_chk@plt+0x430c>
   11efc:	mov	r5, r1
   11f00:	movw	r1, #29033	; 0x7169
   11f04:	mov	r9, r2
   11f08:	movt	r1, #2
   11f0c:	ldrb	r1, [r1]
   11f10:	cmp	r1, #1
   11f14:	bne	12000 <__mempcpy_chk@plt+0xe7c>
   11f18:	sub	r1, r4, r3
   11f1c:	clz	r3, r3
   11f20:	cmp	r0, #0
   11f24:	mov	r2, r0
   11f28:	clz	r4, r0
   11f2c:	movw	sl, #25626	; 0x641a
   11f30:	movwne	r2, #1
   11f34:	lsr	r3, r3, #5
   11f38:	add	r1, r1, r0
   11f3c:	cmp	ip, #0
   11f40:	lsr	r4, r4, #5
   11f44:	movt	sl, #1
   11f48:	and	r3, r3, r2
   11f4c:	add	r3, r1, r3
   11f50:	sub	r1, r5, ip
   11f54:	clz	r5, ip
   11f58:	movwne	ip, #1
   11f5c:	lsr	r5, r5, #5
   11f60:	add	r1, r1, r0
   11f64:	and	r4, ip, r4
   11f68:	sub	r1, r1, r4
   11f6c:	and	r2, r5, r2
   11f70:	add	r1, r1, r2
   11f74:	mov	r2, r9
   11f78:	cmp	r3, r1
   11f7c:	movhi	r1, r3
   11f80:	cmp	r1, #0
   11f84:	bmi	11c00 <__mempcpy_chk@plt+0xa7c>
   11f88:	movw	sl, #29040	; 0x7170
   11f8c:	movw	r3, #25607	; 0x6407
   11f90:	str	r1, [sp]
   11f94:	str	r0, [sp, #4]
   11f98:	mov	r1, #1
   11f9c:	mov	r2, #28
   11fa0:	mov	r4, lr
   11fa4:	movt	sl, #2
   11fa8:	movt	r3, #1
   11fac:	mov	r0, sl
   11fb0:	bl	110ac <__sprintf_chk@plt>
   11fb4:	mov	r2, r9
   11fb8:	mov	lr, r4
   11fbc:	b	11c00 <__mempcpy_chk@plt+0xa7c>
   11fc0:	ldr	r0, [sp, #68]	; 0x44
   11fc4:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   11fc8:	ldr	r1, [r6]
   11fcc:	movw	r0, #25648	; 0x6430
   11fd0:	movt	r0, #1
   11fd4:	bl	10ef0 <fputs_unlocked@plt>
   11fd8:	cmn	r0, #1
   11fdc:	beq	11e04 <__mempcpy_chk@plt+0xc80>
   11fe0:	mov	r0, #0
   11fe4:	sub	sp, fp, #88	; 0x58
   11fe8:	vpop	{d8-d14}
   11fec:	add	sp, sp, #4
   11ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ff4:	movw	r3, #29008	; 0x7150
   11ff8:	movt	r3, #2
   11ffc:	b	1192c <__mempcpy_chk@plt+0x7a8>
   12000:	movw	sl, #29040	; 0x7170
   12004:	movw	r3, #25618	; 0x6412
   12008:	str	r0, [sp]
   1200c:	mov	r1, #1
   12010:	mov	r2, #28
   12014:	mov	r4, lr
   12018:	movt	sl, #2
   1201c:	movt	r3, #1
   12020:	mov	r0, sl
   12024:	bl	110ac <__sprintf_chk@plt>
   12028:	mov	lr, r4
   1202c:	mov	r2, r9
   12030:	b	11c00 <__mempcpy_chk@plt+0xa7c>
   12034:	movw	r0, #24932	; 0x6164
   12038:	movt	r0, #1
   1203c:	bl	15458 <__mempcpy_chk@plt+0x42d4>
   12040:	str	r0, [sp, #68]	; 0x44
   12044:	ldr	r7, [sp, #32]
   12048:	ldrb	r0, [r7]
   1204c:	cmp	r0, #45	; 0x2d
   12050:	beq	12088 <__mempcpy_chk@plt+0xf04>
   12054:	ldr	r6, [sp, #68]	; 0x44
   12058:	ldrb	r0, [r6]
   1205c:	cmp	r0, #45	; 0x2d
   12060:	beq	12088 <__mempcpy_chk@plt+0xf04>
   12064:	vldr	d16, [sp, #48]	; 0x30
   12068:	vmov	r0, r1, d16
   1206c:	bl	15af8 <__mempcpy_chk@plt+0x4974>
   12070:	mov	r2, r0
   12074:	mov	r3, r1
   12078:	mov	r0, r7
   1207c:	mov	r1, r6
   12080:	bl	12254 <__mempcpy_chk@plt+0x10d0>
   12084:	ldr	r7, [sp, #32]
   12088:	mov	r0, r7
   1208c:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   12090:	ldr	r0, [sp, #68]	; 0x44
   12094:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   12098:	ldr	lr, [sp, #16]
   1209c:	ldr	r2, [sp, #12]
   120a0:	ldr	r3, [sp, #20]
   120a4:	ldr	ip, [sp, #8]
   120a8:	mov	r7, sl
   120ac:	mov	r6, r9
   120b0:	ldr	r1, [sp, #28]
   120b4:	b	11bd0 <__mempcpy_chk@plt+0xa4c>
   120b8:	movw	r1, #25364	; 0x6314
   120bc:	movt	r1, #1
   120c0:	b	120cc <__mempcpy_chk@plt+0xf48>
   120c4:	movw	r1, #25479	; 0x6387
   120c8:	movt	r1, #1
   120cc:	mov	r0, #0
   120d0:	mov	r2, #5
   120d4:	bl	10f98 <dcgettext@plt>
   120d8:	mov	r4, r0
   120dc:	mov	r0, r7
   120e0:	bl	14750 <__mempcpy_chk@plt+0x35cc>
   120e4:	mov	r3, r0
   120e8:	mov	r0, #1
   120ec:	mov	r1, #0
   120f0:	mov	r2, r4
   120f4:	bl	11010 <error@plt>
   120f8:	cmn	r0, #3
   120fc:	bne	12148 <__mempcpy_chk@plt+0xfc4>
   12100:	movw	r0, #28928	; 0x7100
   12104:	movw	r2, #24774	; 0x60c6
   12108:	mov	r1, #0
   1210c:	movt	r0, #2
   12110:	movt	r2, #1
   12114:	str	r1, [sp, #4]
   12118:	movw	r1, #24725	; 0x6095
   1211c:	movt	r1, #1
   12120:	ldr	r3, [r0]
   12124:	movw	r0, #29020	; 0x715c
   12128:	str	r2, [sp]
   1212c:	movw	r2, #24760	; 0x60b8
   12130:	movt	r0, #2
   12134:	movt	r2, #1
   12138:	ldr	r0, [r0]
   1213c:	bl	14d20 <__mempcpy_chk@plt+0x3b9c>
   12140:	mov	r0, #0
   12144:	bl	11070 <exit@plt>
   12148:	cmn	r0, #2
   1214c:	bne	12190 <__mempcpy_chk@plt+0x100c>
   12150:	mov	r0, #0
   12154:	bl	11280 <__mempcpy_chk@plt+0xfc>
   12158:	movw	r1, #24789	; 0x60d5
   1215c:	movt	r1, #1
   12160:	b	121e8 <__mempcpy_chk@plt+0x1064>
   12164:	movw	r1, #24805	; 0x60e5
   12168:	mov	r0, #0
   1216c:	mov	r2, #5
   12170:	mov	r5, r3
   12174:	movt	r1, #1
   12178:	bl	10f98 <dcgettext@plt>
   1217c:	mov	r4, r0
   12180:	ldr	r0, [r5]
   12184:	add	r0, r9, r0, lsl #2
   12188:	ldr	r0, [r0, #12]
   1218c:	b	12234 <__mempcpy_chk@plt+0x10b0>
   12190:	mov	r0, #1
   12194:	bl	11280 <__mempcpy_chk@plt+0xfc>
   12198:	movw	r1, #25412	; 0x6344
   1219c:	movt	r1, #1
   121a0:	b	120cc <__mempcpy_chk@plt+0xf48>
   121a4:	movw	r1, #25442	; 0x6362
   121a8:	mov	r0, #0
   121ac:	mov	r2, #5
   121b0:	movt	r1, #1
   121b4:	bl	10f98 <dcgettext@plt>
   121b8:	mov	r5, r0
   121bc:	mov	r0, r7
   121c0:	bl	14750 <__mempcpy_chk@plt+0x35cc>
   121c4:	mov	r3, r0
   121c8:	ldrb	r0, [r7, r4]
   121cc:	mov	r1, #0
   121d0:	mov	r2, r5
   121d4:	str	r0, [sp]
   121d8:	mov	r0, #1
   121dc:	bl	11010 <error@plt>
   121e0:	movw	r1, #24822	; 0x60f6
   121e4:	movt	r1, #1
   121e8:	mov	r0, #0
   121ec:	mov	r2, #5
   121f0:	bl	10f98 <dcgettext@plt>
   121f4:	mov	r2, r0
   121f8:	mov	r0, #0
   121fc:	mov	r1, #0
   12200:	bl	11010 <error@plt>
   12204:	mov	r0, #1
   12208:	bl	11280 <__mempcpy_chk@plt+0xfc>
   1220c:	movw	r1, #24893	; 0x613d
   12210:	mov	r0, #0
   12214:	mov	r2, #5
   12218:	mov	r5, r3
   1221c:	movt	r1, #1
   12220:	bl	10f98 <dcgettext@plt>
   12224:	mov	r4, r0
   12228:	ldr	r0, [r5]
   1222c:	add	r0, r9, r0, lsl #2
   12230:	ldr	r0, [r0, #-4]
   12234:	bl	14750 <__mempcpy_chk@plt+0x35cc>
   12238:	mov	r3, r0
   1223c:	mov	r0, #0
   12240:	mov	r1, #0
   12244:	mov	r2, r4
   12248:	bl	11010 <error@plt>
   1224c:	mov	r0, #1
   12250:	bl	11280 <__mempcpy_chk@plt+0xfc>
   12254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12258:	add	fp, sp, #28
   1225c:	sub	sp, sp, #44	; 0x2c
   12260:	mov	sl, r1
   12264:	movw	r1, #24932	; 0x6164
   12268:	mov	r6, r0
   1226c:	str	r3, [sp, #28]
   12270:	str	r2, [sp, #24]
   12274:	movt	r1, #1
   12278:	mov	r0, sl
   1227c:	bl	10f08 <strcmp@plt>
   12280:	str	r0, [sp, #20]
   12284:	mov	r0, #0
   12288:	ldrb	r1, [r6]
   1228c:	cmp	r1, #48	; 0x30
   12290:	bne	122a0 <__mempcpy_chk@plt+0x111c>
   12294:	sub	r0, r0, #1
   12298:	add	r6, r6, #1
   1229c:	b	12288 <__mempcpy_chk@plt+0x1104>
   122a0:	cmp	r1, #0
   122a4:	bne	122b0 <__mempcpy_chk@plt+0x112c>
   122a8:	cmp	r0, #0
   122ac:	subne	r6, r6, #1
   122b0:	mov	r0, #0
   122b4:	ldrb	r1, [sl]
   122b8:	cmp	r1, #48	; 0x30
   122bc:	bne	122cc <__mempcpy_chk@plt+0x1148>
   122c0:	sub	r0, r0, #1
   122c4:	add	sl, sl, #1
   122c8:	b	122b4 <__mempcpy_chk@plt+0x1130>
   122cc:	cmp	r1, #0
   122d0:	bne	122dc <__mempcpy_chk@plt+0x1158>
   122d4:	cmp	r0, #0
   122d8:	subne	sl, sl, #1
   122dc:	mov	r0, r6
   122e0:	bl	11088 <strlen@plt>
   122e4:	mov	r7, r0
   122e8:	mov	r0, #0
   122ec:	str	r0, [sp]
   122f0:	ldr	r0, [sp, #20]
   122f4:	cmp	r0, #0
   122f8:	mov	r0, #0
   122fc:	beq	12308 <__mempcpy_chk@plt+0x1184>
   12300:	mov	r0, sl
   12304:	bl	11088 <strlen@plt>
   12308:	add	r4, r7, #1
   1230c:	mov	r5, r0
   12310:	str	r0, [sp, #36]	; 0x24
   12314:	cmp	r4, r0
   12318:	movhi	r5, r4
   1231c:	cmp	r5, #31
   12320:	movls	r5, #31
   12324:	add	r8, r5, #1
   12328:	mov	r0, r8
   1232c:	bl	14f54 <__mempcpy_chk@plt+0x3dd0>
   12330:	str	r0, [sp, #16]
   12334:	add	r0, r0, r5
   12338:	mov	r1, r6
   1233c:	mov	r2, r4
   12340:	mov	r4, r8
   12344:	ldr	r6, [sp, #36]	; 0x24
   12348:	sub	r9, r0, r7
   1234c:	mov	r0, r9
   12350:	bl	10f5c <memcpy@plt>
   12354:	ldr	r0, [sp, #20]
   12358:	cmp	r0, #0
   1235c:	beq	123ac <__mempcpy_chk@plt+0x1228>
   12360:	mov	r0, r4
   12364:	bl	14f54 <__mempcpy_chk@plt+0x3dd0>
   12368:	mov	r8, r0
   1236c:	add	r0, r0, r5
   12370:	add	r2, r6, #1
   12374:	mov	r1, sl
   12378:	sub	r0, r0, r6
   1237c:	str	r0, [sp]
   12380:	bl	10f5c <memcpy@plt>
   12384:	cmp	r7, r6
   12388:	bcc	123ac <__mempcpy_chk@plt+0x1228>
   1238c:	cmp	r6, r7
   12390:	bcc	125c0 <__mempcpy_chk@plt+0x143c>
   12394:	ldr	r1, [sp]
   12398:	mov	r0, r9
   1239c:	mov	r2, r7
   123a0:	bl	10f8c <memcmp@plt>
   123a4:	cmp	r0, #0
   123a8:	bgt	125c0 <__mempcpy_chk@plt+0x143c>
   123ac:	lsl	r0, r4, #1
   123b0:	mov	r1, r4
   123b4:	mov	r4, #8192	; 0x2000
   123b8:	str	r5, [fp, #-32]	; 0xffffffe0
   123bc:	cmp	r0, #8192	; 0x2000
   123c0:	lslhi	r4, r1, #1
   123c4:	mov	r0, r4
   123c8:	bl	14f54 <__mempcpy_chk@plt+0x3dd0>
   123cc:	add	r1, r0, r4
   123d0:	str	r4, [sp, #4]
   123d4:	mov	r2, r7
   123d8:	mvn	r3, #0
   123dc:	str	r1, [sp, #32]
   123e0:	mov	r1, r9
   123e4:	str	r0, [sp, #12]
   123e8:	bl	11184 <__mempcpy_chk@plt>
   123ec:	mov	sl, r0
   123f0:	ldr	r0, [sp, #28]
   123f4:	ldr	r1, [sp, #24]
   123f8:	mov	r5, #48	; 0x30
   123fc:	mov	r8, #49	; 0x31
   12400:	orr	r0, r1, r0
   12404:	str	r0, [sp, #8]
   12408:	ldr	r0, [sp, #8]
   1240c:	ldr	r1, [sp, #28]
   12410:	cmp	r0, #0
   12414:	ldr	r0, [sp, #24]
   12418:	bne	1243c <__mempcpy_chk@plt+0x12b8>
   1241c:	b	12468 <__mempcpy_chk@plt+0x12e4>
   12420:	add	r7, r7, #1
   12424:	mov	r9, r2
   12428:	strb	r8, [r2]
   1242c:	subs	r0, r0, #1
   12430:	sbc	r1, r1, #0
   12434:	orrs	r2, r0, r1
   12438:	beq	12468 <__mempcpy_chk@plt+0x12e4>
   1243c:	sub	r2, r9, #1
   12440:	add	r3, r2, r7
   12444:	ldrb	r4, [r3]
   12448:	add	r6, r4, #1
   1244c:	cmp	r4, #57	; 0x39
   12450:	strb	r6, [r3]
   12454:	bcc	1242c <__mempcpy_chk@plt+0x12a8>
   12458:	strb	r5, [r3], #-1
   1245c:	cmp	r3, r9
   12460:	bcs	12444 <__mempcpy_chk@plt+0x12c0>
   12464:	b	12420 <__mempcpy_chk@plt+0x129c>
   12468:	ldr	r0, [sp, #20]
   1246c:	cmp	r0, #0
   12470:	beq	124a4 <__mempcpy_chk@plt+0x1320>
   12474:	ldr	r0, [sp, #36]	; 0x24
   12478:	cmp	r7, r0
   1247c:	bcc	124a4 <__mempcpy_chk@plt+0x1320>
   12480:	ldr	r0, [sp, #36]	; 0x24
   12484:	cmp	r0, r7
   12488:	bcc	12588 <__mempcpy_chk@plt+0x1404>
   1248c:	ldr	r1, [sp]
   12490:	mov	r0, r9
   12494:	mov	r2, r7
   12498:	bl	10f8c <memcmp@plt>
   1249c:	cmp	r0, #0
   124a0:	bgt	12588 <__mempcpy_chk@plt+0x1404>
   124a4:	movw	r0, #29036	; 0x716c
   124a8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   124ac:	movt	r0, #2
   124b0:	ldr	r0, [r0]
   124b4:	cmp	r7, r6
   124b8:	ldrb	r0, [r0]
   124bc:	strb	r0, [sl], #1
   124c0:	bne	1252c <__mempcpy_chk@plt+0x13a8>
   124c4:	mov	r0, #1
   124c8:	orr	r4, r0, r6, lsl #1
   124cc:	ldr	r0, [sp, #16]
   124d0:	mov	r1, r4
   124d4:	bl	14f9c <__mempcpy_chk@plt+0x3e18>
   124d8:	add	r9, r0, r6
   124dc:	mov	r1, r0
   124e0:	add	r2, r6, #1
   124e4:	mov	r0, r9
   124e8:	str	r1, [sp, #16]
   124ec:	bl	10f38 <memmove@plt>
   124f0:	lsl	r6, r6, #1
   124f4:	str	r6, [fp, #-32]	; 0xffffffe0
   124f8:	ldr	r0, [sp, #4]
   124fc:	cmp	r0, r4, lsl #1
   12500:	bcs	1252c <__mempcpy_chk@plt+0x13a8>
   12504:	ldr	r0, [sp, #12]
   12508:	lsl	r6, r4, #1
   1250c:	mov	r1, r6
   12510:	sub	r4, sl, r0
   12514:	bl	14f9c <__mempcpy_chk@plt+0x3e18>
   12518:	add	sl, r0, r4
   1251c:	str	r6, [sp, #4]
   12520:	str	r0, [sp, #12]
   12524:	add	r0, r0, r6
   12528:	str	r0, [sp, #32]
   1252c:	mov	r0, sl
   12530:	mov	r1, r9
   12534:	mov	r2, r7
   12538:	mvn	r3, #0
   1253c:	bl	11184 <__mempcpy_chk@plt>
   12540:	ldr	r1, [sp, #32]
   12544:	mov	sl, r0
   12548:	mvn	r0, r7
   1254c:	add	r0, r1, r0
   12550:	cmp	r0, sl
   12554:	bcs	12408 <__mempcpy_chk@plt+0x1284>
   12558:	movw	r0, #29020	; 0x715c
   1255c:	ldr	r4, [sp, #12]
   12560:	mov	r2, #1
   12564:	movt	r0, #2
   12568:	ldr	r3, [r0]
   1256c:	sub	r1, sl, r4
   12570:	mov	r0, r4
   12574:	mov	sl, r4
   12578:	bl	10f80 <fwrite_unlocked@plt>
   1257c:	cmp	r0, #1
   12580:	beq	12408 <__mempcpy_chk@plt+0x1284>
   12584:	b	125bc <__mempcpy_chk@plt+0x1438>
   12588:	ldr	r0, [sp, #12]
   1258c:	movw	r2, #29020	; 0x715c
   12590:	mov	r1, #10
   12594:	movt	r2, #2
   12598:	strb	r1, [sl], -r0
   1259c:	ldr	r3, [r2]
   125a0:	mov	r2, #1
   125a4:	add	r1, sl, #1
   125a8:	bl	10f80 <fwrite_unlocked@plt>
   125ac:	cmp	r0, #1
   125b0:	bne	125bc <__mempcpy_chk@plt+0x1438>
   125b4:	mov	r0, #0
   125b8:	bl	11070 <exit@plt>
   125bc:	bl	12904 <__mempcpy_chk@plt+0x1780>
   125c0:	ldr	r0, [sp, #16]
   125c4:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   125c8:	mov	r0, r8
   125cc:	sub	sp, fp, #28
   125d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125d4:	b	12ad4 <__mempcpy_chk@plt+0x1950>
   125d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125dc:	add	fp, sp, #28
   125e0:	sub	sp, sp, #4
   125e4:	vpush	{d8}
   125e8:	sub	sp, sp, #16
   125ec:	movw	r3, #10568	; 0x2948
   125f0:	mov	r4, r0
   125f4:	mov	r5, r1
   125f8:	mov	r0, r1
   125fc:	mov	r1, #0
   12600:	movt	r3, #1
   12604:	mov	r2, r4
   12608:	bl	154d4 <__mempcpy_chk@plt+0x4350>
   1260c:	cmp	r0, #0
   12610:	beq	12878 <__mempcpy_chk@plt+0x16f4>
   12614:	vldr	d8, [r4]
   12618:	vcmpe.f64	d8, d8
   1261c:	vmrs	APSR_nzcv, fpscr
   12620:	bvs	128ac <__mempcpy_chk@plt+0x1728>
   12624:	sub	r5, r5, #1
   12628:	bl	11064 <__ctype_b_loc@plt>
   1262c:	ldr	r0, [r0]
   12630:	ldrb	r2, [r5, #1]!
   12634:	add	r1, r0, r2, lsl #1
   12638:	cmp	r2, #43	; 0x2b
   1263c:	ldrh	r1, [r1]
   12640:	and	r1, r1, #8192	; 0x2000
   12644:	beq	12630 <__mempcpy_chk@plt+0x14ac>
   12648:	cmp	r1, #0
   1264c:	bne	12630 <__mempcpy_chk@plt+0x14ac>
   12650:	mvn	r1, #-2147483648	; 0x80000000
   12654:	mov	r0, #0
   12658:	strd	r0, [r4, #8]
   1265c:	mov	r0, r5
   12660:	mov	r1, #46	; 0x2e
   12664:	bl	11094 <strchr@plt>
   12668:	mov	r9, r0
   1266c:	cmp	r0, #0
   12670:	bne	1268c <__mempcpy_chk@plt+0x1508>
   12674:	mov	r0, r5
   12678:	mov	r1, #112	; 0x70
   1267c:	bl	11094 <strchr@plt>
   12680:	cmp	r0, #0
   12684:	moveq	r0, #0
   12688:	streq	r0, [r4, #12]
   1268c:	movw	r1, #25601	; 0x6401
   12690:	mov	r0, r5
   12694:	movt	r1, #1
   12698:	bl	10f20 <strcspn@plt>
   1269c:	vmov.i32	d16, #0	; 0x00000000
   126a0:	vmul.f64	d16, d8, d16
   126a4:	vcmp.f64	d16, #0.0
   126a8:	vmrs	APSR_nzcv, fpscr
   126ac:	ldrbeq	r0, [r5, r0]
   126b0:	cmpeq	r0, #0
   126b4:	bne	12868 <__mempcpy_chk@plt+0x16e4>
   126b8:	mov	r0, r5
   126bc:	bl	11088 <strlen@plt>
   126c0:	cmp	r9, #0
   126c4:	str	r0, [r4, #8]
   126c8:	beq	12714 <__mempcpy_chk@plt+0x1590>
   126cc:	movw	r1, #25604	; 0x6404
   126d0:	mov	r6, r0
   126d4:	add	r0, r9, #1
   126d8:	movt	r1, #1
   126dc:	bl	10f20 <strcspn@plt>
   126e0:	mov	r8, r0
   126e4:	cmp	r0, #0
   126e8:	bmi	126f4 <__mempcpy_chk@plt+0x1570>
   126ec:	str	r8, [r4, #12]
   126f0:	beq	12724 <__mempcpy_chk@plt+0x15a0>
   126f4:	cmp	r9, r5
   126f8:	beq	1271c <__mempcpy_chk@plt+0x1598>
   126fc:	ldrb	r0, [r9, #-1]
   12700:	sub	r1, r0, #48	; 0x30
   12704:	mov	r0, #0
   12708:	cmp	r1, #9
   1270c:	movwhi	r0, #1
   12710:	b	12728 <__mempcpy_chk@plt+0x15a4>
   12714:	mov	r8, #0
   12718:	b	12730 <__mempcpy_chk@plt+0x15ac>
   1271c:	mov	r0, #1
   12720:	b	12728 <__mempcpy_chk@plt+0x15a4>
   12724:	mvn	r0, #0
   12728:	add	r0, r0, r6
   1272c:	str	r0, [r4, #8]
   12730:	mov	r0, r5
   12734:	mov	r1, #101	; 0x65
   12738:	bl	11094 <strchr@plt>
   1273c:	mov	r6, r0
   12740:	cmp	r0, #0
   12744:	bne	12760 <__mempcpy_chk@plt+0x15dc>
   12748:	mov	r0, r5
   1274c:	mov	r1, #69	; 0x45
   12750:	bl	11094 <strchr@plt>
   12754:	mov	r6, r0
   12758:	cmp	r0, #0
   1275c:	beq	12868 <__mempcpy_chk@plt+0x16e4>
   12760:	add	r7, r6, #1
   12764:	mov	r1, #0
   12768:	mov	r2, #10
   1276c:	mov	r0, r7
   12770:	bl	10f14 <strtol@plt>
   12774:	mov	sl, #-2147483647	; 0x80000001
   12778:	cmp	r0, #-2147483646	; 0x80000002
   1277c:	str	r8, [sp, #8]
   12780:	blt	127bc <__mempcpy_chk@plt+0x1638>
   12784:	mov	r0, r7
   12788:	mov	r1, #0
   1278c:	mov	r2, #10
   12790:	bl	10f14 <strtol@plt>
   12794:	mov	sl, r0
   12798:	cmp	r0, #0
   1279c:	bmi	127cc <__mempcpy_chk@plt+0x1648>
   127a0:	ldr	r1, [r4, #12]
   127a4:	mov	r0, sl
   127a8:	cmp	r1, sl
   127ac:	movlt	r0, r1
   127b0:	mov	r1, #0
   127b4:	str	r1, [sp, #12]
   127b8:	b	127d8 <__mempcpy_chk@plt+0x1654>
   127bc:	mov	r0, #1
   127c0:	str	r0, [sp, #12]
   127c4:	mov	r0, #-2147483647	; 0x80000001
   127c8:	b	127d8 <__mempcpy_chk@plt+0x1654>
   127cc:	mov	r0, #1
   127d0:	str	r0, [sp, #12]
   127d4:	mov	r0, sl
   127d8:	ldr	r1, [r4, #12]
   127dc:	sub	r8, r6, r5
   127e0:	sub	r7, r1, r0
   127e4:	mov	r0, r5
   127e8:	str	r7, [r4, #12]
   127ec:	bl	11088 <strlen@plt>
   127f0:	ldr	r1, [r4, #8]
   127f4:	sub	r0, r8, r0
   127f8:	add	r0, r0, r1
   127fc:	ldr	r1, [sp, #12]
   12800:	str	r0, [r4, #8]
   12804:	cmp	r1, #0
   12808:	beq	1282c <__mempcpy_chk@plt+0x16a8>
   1280c:	cmp	r9, #0
   12810:	addne	r1, r9, #1
   12814:	cmpne	r6, r1
   12818:	bne	12824 <__mempcpy_chk@plt+0x16a0>
   1281c:	add	r0, r0, #1
   12820:	str	r0, [r4, #8]
   12824:	rsb	r1, sl, #0
   12828:	b	12860 <__mempcpy_chk@plt+0x16dc>
   1282c:	cmp	r9, #0
   12830:	beq	12850 <__mempcpy_chk@plt+0x16cc>
   12834:	ldr	r1, [sp, #8]
   12838:	cmp	r1, #0
   1283c:	beq	12854 <__mempcpy_chk@plt+0x16d0>
   12840:	cmp	r7, #0
   12844:	subeq	r0, r0, #1
   12848:	streq	r0, [r4, #8]
   1284c:	b	12854 <__mempcpy_chk@plt+0x16d0>
   12850:	ldr	r1, [sp, #8]
   12854:	cmp	r1, sl
   12858:	movcs	r1, sl
   1285c:	sub	r1, sl, r1
   12860:	add	r0, r0, r1
   12864:	str	r0, [r4, #8]
   12868:	sub	sp, fp, #40	; 0x28
   1286c:	vpop	{d8}
   12870:	add	sp, sp, #4
   12874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12878:	movw	r1, #25528	; 0x63b8
   1287c:	mov	r0, #0
   12880:	mov	r2, #5
   12884:	movt	r1, #1
   12888:	bl	10f98 <dcgettext@plt>
   1288c:	mov	r4, r0
   12890:	mov	r0, r5
   12894:	bl	14750 <__mempcpy_chk@plt+0x35cc>
   12898:	mov	r3, r0
   1289c:	mov	r0, #0
   128a0:	mov	r1, #0
   128a4:	mov	r2, r4
   128a8:	b	128f8 <__mempcpy_chk@plt+0x1774>
   128ac:	movw	r1, #25564	; 0x63dc
   128b0:	mov	r0, #0
   128b4:	mov	r2, #5
   128b8:	movt	r1, #1
   128bc:	bl	10f98 <dcgettext@plt>
   128c0:	movw	r1, #25588	; 0x63f4
   128c4:	mov	r4, r0
   128c8:	mov	r0, #0
   128cc:	movt	r1, #1
   128d0:	bl	14740 <__mempcpy_chk@plt+0x35bc>
   128d4:	mov	r6, r0
   128d8:	mov	r0, #1
   128dc:	mov	r1, r5
   128e0:	bl	14740 <__mempcpy_chk@plt+0x35bc>
   128e4:	str	r0, [sp]
   128e8:	mov	r0, #0
   128ec:	mov	r1, #0
   128f0:	mov	r2, r4
   128f4:	mov	r3, r6
   128f8:	bl	11010 <error@plt>
   128fc:	mov	r0, #1
   12900:	bl	11280 <__mempcpy_chk@plt+0xfc>
   12904:	push	{fp, lr}
   12908:	mov	fp, sp
   1290c:	movw	r0, #29020	; 0x715c
   12910:	movt	r0, #2
   12914:	ldr	r0, [r0]
   12918:	bl	11148 <clearerr_unlocked@plt>
   1291c:	bl	110a0 <__errno_location@plt>
   12920:	movw	r1, #25516	; 0x63ac
   12924:	ldr	r4, [r0]
   12928:	mov	r0, #0
   1292c:	mov	r2, #5
   12930:	movt	r1, #1
   12934:	bl	10f98 <dcgettext@plt>
   12938:	mov	r2, r0
   1293c:	mov	r0, #1
   12940:	mov	r1, r4
   12944:	bl	11010 <error@plt>
   12948:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1294c:	add	fp, sp, #24
   12950:	vpush	{d8}
   12954:	sub	sp, sp, #8
   12958:	mov	r4, r1
   1295c:	add	r1, sp, #4
   12960:	mov	r5, r0
   12964:	bl	10f74 <strtold@plt>
   12968:	ldr	r7, [sp, #4]
   1296c:	vmov.f64	d8, d0
   12970:	ldrb	r0, [r7]
   12974:	cmp	r0, #0
   12978:	beq	129b4 <__mempcpy_chk@plt+0x1830>
   1297c:	bl	110a0 <__errno_location@plt>
   12980:	ldr	r8, [r0]
   12984:	mov	r6, r0
   12988:	mov	r1, sp
   1298c:	mov	r0, r5
   12990:	bl	15644 <__mempcpy_chk@plt+0x44c0>
   12994:	ldr	r0, [sp]
   12998:	cmp	r7, r0
   1299c:	bcs	129b0 <__mempcpy_chk@plt+0x182c>
   129a0:	str	r0, [sp, #4]
   129a4:	mov	r7, r0
   129a8:	vmov.f64	d8, d0
   129ac:	b	129b4 <__mempcpy_chk@plt+0x1830>
   129b0:	str	r8, [r6]
   129b4:	cmp	r4, #0
   129b8:	vmov.f64	d0, d8
   129bc:	strne	r7, [r4]
   129c0:	sub	sp, fp, #32
   129c4:	vpop	{d8}
   129c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   129cc:	movw	r1, #29068	; 0x718c
   129d0:	movt	r1, #2
   129d4:	str	r0, [r1]
   129d8:	bx	lr
   129dc:	movw	r1, #29072	; 0x7190
   129e0:	movt	r1, #2
   129e4:	strb	r0, [r1]
   129e8:	bx	lr
   129ec:	push	{r4, r5, r6, sl, fp, lr}
   129f0:	add	fp, sp, #16
   129f4:	sub	sp, sp, #8
   129f8:	movw	r0, #29020	; 0x715c
   129fc:	movt	r0, #2
   12a00:	ldr	r0, [r0]
   12a04:	bl	156f0 <__mempcpy_chk@plt+0x456c>
   12a08:	cmp	r0, #0
   12a0c:	beq	12a34 <__mempcpy_chk@plt+0x18b0>
   12a10:	movw	r0, #29072	; 0x7190
   12a14:	movt	r0, #2
   12a18:	ldrb	r0, [r0]
   12a1c:	cmp	r0, #0
   12a20:	beq	12a54 <__mempcpy_chk@plt+0x18d0>
   12a24:	bl	110a0 <__errno_location@plt>
   12a28:	ldr	r0, [r0]
   12a2c:	cmp	r0, #32
   12a30:	bne	12a54 <__mempcpy_chk@plt+0x18d0>
   12a34:	movw	r0, #29016	; 0x7158
   12a38:	movt	r0, #2
   12a3c:	ldr	r0, [r0]
   12a40:	bl	156f0 <__mempcpy_chk@plt+0x456c>
   12a44:	cmp	r0, #0
   12a48:	subeq	sp, fp, #16
   12a4c:	popeq	{r4, r5, r6, sl, fp, pc}
   12a50:	b	12ac4 <__mempcpy_chk@plt+0x1940>
   12a54:	movw	r1, #25516	; 0x63ac
   12a58:	mov	r0, #0
   12a5c:	mov	r2, #5
   12a60:	movt	r1, #1
   12a64:	bl	10f98 <dcgettext@plt>
   12a68:	mov	r4, r0
   12a6c:	movw	r0, #29068	; 0x718c
   12a70:	movt	r0, #2
   12a74:	ldr	r6, [r0]
   12a78:	bl	110a0 <__errno_location@plt>
   12a7c:	ldr	r5, [r0]
   12a80:	cmp	r6, #0
   12a84:	bne	12aa0 <__mempcpy_chk@plt+0x191c>
   12a88:	movw	r2, #24923	; 0x615b
   12a8c:	mov	r0, #0
   12a90:	mov	r1, r5
   12a94:	mov	r3, r4
   12a98:	movt	r2, #1
   12a9c:	b	12ac0 <__mempcpy_chk@plt+0x193c>
   12aa0:	mov	r0, r6
   12aa4:	bl	143c8 <__mempcpy_chk@plt+0x3244>
   12aa8:	movw	r2, #25823	; 0x64df
   12aac:	mov	r3, r0
   12ab0:	str	r4, [sp]
   12ab4:	mov	r0, #0
   12ab8:	mov	r1, r5
   12abc:	movt	r2, #1
   12ac0:	bl	11010 <error@plt>
   12ac4:	movw	r0, #28932	; 0x7104
   12ac8:	movt	r0, #2
   12acc:	ldr	r0, [r0]
   12ad0:	bl	10f50 <_exit@plt>
   12ad4:	push	{r4, r5, r6, sl, fp, lr}
   12ad8:	add	fp, sp, #16
   12adc:	mov	r4, r0
   12ae0:	bl	110a0 <__errno_location@plt>
   12ae4:	ldr	r6, [r0]
   12ae8:	mov	r5, r0
   12aec:	mov	r0, r4
   12af0:	bl	10f44 <free@plt>
   12af4:	str	r6, [r5]
   12af8:	pop	{r4, r5, r6, sl, fp, pc}
   12afc:	push	{r4, r5, fp, lr}
   12b00:	add	fp, sp, #8
   12b04:	cmp	r0, #0
   12b08:	beq	12b9c <__mempcpy_chk@plt+0x1a18>
   12b0c:	mov	r1, #47	; 0x2f
   12b10:	mov	r4, r0
   12b14:	bl	11124 <strrchr@plt>
   12b18:	cmp	r0, #0
   12b1c:	mov	r5, r4
   12b20:	addne	r5, r0, #1
   12b24:	sub	r0, r5, r4
   12b28:	cmp	r0, #7
   12b2c:	blt	12b80 <__mempcpy_chk@plt+0x19fc>
   12b30:	movw	r1, #25886	; 0x651e
   12b34:	sub	r0, r5, #7
   12b38:	mov	r2, #7
   12b3c:	movt	r1, #1
   12b40:	bl	11160 <strncmp@plt>
   12b44:	cmp	r0, #0
   12b48:	bne	12b80 <__mempcpy_chk@plt+0x19fc>
   12b4c:	movw	r1, #25894	; 0x6526
   12b50:	mov	r0, r5
   12b54:	mov	r2, #3
   12b58:	movt	r1, #1
   12b5c:	bl	11160 <strncmp@plt>
   12b60:	cmp	r0, #0
   12b64:	beq	12b70 <__mempcpy_chk@plt+0x19ec>
   12b68:	mov	r4, r5
   12b6c:	b	12b80 <__mempcpy_chk@plt+0x19fc>
   12b70:	movw	r0, #29000	; 0x7148
   12b74:	add	r4, r5, #3
   12b78:	movt	r0, #2
   12b7c:	str	r4, [r0]
   12b80:	movw	r0, #29004	; 0x714c
   12b84:	movt	r0, #2
   12b88:	str	r4, [r0]
   12b8c:	movw	r0, #29076	; 0x7194
   12b90:	movt	r0, #2
   12b94:	str	r4, [r0]
   12b98:	pop	{r4, r5, fp, pc}
   12b9c:	movw	r0, #29016	; 0x7158
   12ba0:	mov	r1, #55	; 0x37
   12ba4:	mov	r2, #1
   12ba8:	movt	r0, #2
   12bac:	ldr	r3, [r0]
   12bb0:	movw	r0, #25830	; 0x64e6
   12bb4:	movt	r0, #1
   12bb8:	bl	10fc8 <fwrite@plt>
   12bbc:	bl	1116c <abort@plt>
   12bc0:	push	{r4, r5, r6, sl, fp, lr}
   12bc4:	add	fp, sp, #16
   12bc8:	mov	r4, r0
   12bcc:	movw	r0, #29080	; 0x7198
   12bd0:	movt	r0, #2
   12bd4:	cmp	r4, #0
   12bd8:	moveq	r4, r0
   12bdc:	bl	110a0 <__errno_location@plt>
   12be0:	ldr	r6, [r0]
   12be4:	mov	r5, r0
   12be8:	mov	r0, r4
   12bec:	mov	r1, #48	; 0x30
   12bf0:	bl	153b4 <__mempcpy_chk@plt+0x4230>
   12bf4:	str	r6, [r5]
   12bf8:	pop	{r4, r5, r6, sl, fp, pc}
   12bfc:	movw	r1, #29080	; 0x7198
   12c00:	cmp	r0, #0
   12c04:	movt	r1, #2
   12c08:	movne	r1, r0
   12c0c:	ldr	r0, [r1]
   12c10:	bx	lr
   12c14:	movw	r2, #29080	; 0x7198
   12c18:	cmp	r0, #0
   12c1c:	movt	r2, #2
   12c20:	movne	r2, r0
   12c24:	str	r1, [r2]
   12c28:	bx	lr
   12c2c:	movw	r3, #29080	; 0x7198
   12c30:	cmp	r0, #0
   12c34:	and	r2, r2, #1
   12c38:	movt	r3, #2
   12c3c:	movne	r3, r0
   12c40:	ubfx	r0, r1, #5, #3
   12c44:	and	r1, r1, #31
   12c48:	add	ip, r3, r0, lsl #2
   12c4c:	mov	r0, #1
   12c50:	ldr	r3, [ip, #8]
   12c54:	and	r0, r0, r3, lsr r1
   12c58:	eor	r2, r0, r2
   12c5c:	eor	r1, r3, r2, lsl r1
   12c60:	str	r1, [ip, #8]
   12c64:	bx	lr
   12c68:	movw	r2, #29080	; 0x7198
   12c6c:	cmp	r0, #0
   12c70:	movt	r2, #2
   12c74:	movne	r2, r0
   12c78:	ldr	r0, [r2, #4]
   12c7c:	str	r1, [r2, #4]
   12c80:	bx	lr
   12c84:	push	{fp, lr}
   12c88:	mov	fp, sp
   12c8c:	movw	r3, #29080	; 0x7198
   12c90:	cmp	r0, #0
   12c94:	movt	r3, #2
   12c98:	movne	r3, r0
   12c9c:	cmp	r1, #0
   12ca0:	mov	r0, #10
   12ca4:	cmpne	r2, #0
   12ca8:	str	r0, [r3]
   12cac:	bne	12cb4 <__mempcpy_chk@plt+0x1b30>
   12cb0:	bl	1116c <abort@plt>
   12cb4:	str	r1, [r3, #40]	; 0x28
   12cb8:	str	r2, [r3, #44]	; 0x2c
   12cbc:	pop	{fp, pc}
   12cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cc4:	add	fp, sp, #28
   12cc8:	sub	sp, sp, #20
   12ccc:	mov	r7, r0
   12cd0:	ldr	r0, [fp, #8]
   12cd4:	movw	r5, #29080	; 0x7198
   12cd8:	mov	r8, r3
   12cdc:	mov	r9, r2
   12ce0:	mov	sl, r1
   12ce4:	movt	r5, #2
   12ce8:	cmp	r0, #0
   12cec:	movne	r5, r0
   12cf0:	bl	110a0 <__errno_location@plt>
   12cf4:	ldr	r2, [r5, #40]	; 0x28
   12cf8:	ldr	r3, [r5, #44]	; 0x2c
   12cfc:	mov	r4, r0
   12d00:	ldm	r5, {r0, r1}
   12d04:	add	r5, r5, #8
   12d08:	ldr	r6, [r4]
   12d0c:	stm	sp, {r0, r1, r5}
   12d10:	mov	r0, r7
   12d14:	mov	r1, sl
   12d18:	str	r2, [sp, #12]
   12d1c:	str	r3, [sp, #16]
   12d20:	mov	r2, r9
   12d24:	mov	r3, r8
   12d28:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   12d2c:	str	r6, [r4]
   12d30:	sub	sp, fp, #28
   12d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d3c:	add	fp, sp, #28
   12d40:	sub	sp, sp, #156	; 0x9c
   12d44:	mov	r5, r0
   12d48:	add	r0, r2, #1
   12d4c:	mov	r6, r1
   12d50:	mov	sl, r3
   12d54:	str	r2, [fp, #-80]	; 0xffffffb0
   12d58:	str	r0, [sp, #72]	; 0x48
   12d5c:	ldr	r0, [fp, #12]
   12d60:	and	r1, r0, #1
   12d64:	str	r1, [sp, #36]	; 0x24
   12d68:	and	r1, r0, #4
   12d6c:	str	r1, [sp, #32]
   12d70:	ubfx	r9, r0, #1, #1
   12d74:	bl	10fe0 <__ctype_get_mb_cur_max@plt>
   12d78:	str	r0, [sp, #40]	; 0x28
   12d7c:	ldr	r0, [fp, #24]
   12d80:	ldr	r7, [fp, #8]
   12d84:	mov	r1, #0
   12d88:	str	r5, [fp, #-84]	; 0xffffffac
   12d8c:	str	r1, [fp, #-56]	; 0xffffffc8
   12d90:	mov	r1, #0
   12d94:	str	r1, [sp, #60]	; 0x3c
   12d98:	mov	r1, #1
   12d9c:	str	r1, [fp, #-48]	; 0xffffffd0
   12da0:	str	r0, [sp, #80]	; 0x50
   12da4:	ldr	r0, [fp, #20]
   12da8:	str	r0, [sp, #76]	; 0x4c
   12dac:	mov	r0, #0
   12db0:	str	r0, [sp, #56]	; 0x38
   12db4:	mov	r0, #0
   12db8:	str	r0, [fp, #-88]	; 0xffffffa8
   12dbc:	mov	r0, #0
   12dc0:	str	r0, [fp, #-72]	; 0xffffffb8
   12dc4:	mov	r0, #0
   12dc8:	cmp	r7, #10
   12dcc:	bhi	13d60 <__mempcpy_chk@plt+0x2bdc>
   12dd0:	add	r1, pc, #24
   12dd4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12dd8:	mov	r4, r6
   12ddc:	mov	r8, #0
   12de0:	mov	r2, #1
   12de4:	mov	r3, #0
   12de8:	mov	lr, sl
   12dec:	ldr	pc, [r1, r7, lsl #2]
   12df0:			; <UNDEFINED> instruction: 0x00012eb4
   12df4:	andeq	r2, r1, r8, lsl #30
   12df8:	andeq	r2, r1, r8, asr #29
   12dfc:	andeq	r2, r1, ip, lsr #29
   12e00:	strdeq	r2, [r1], -ip
   12e04:	andeq	r2, r1, r0, lsr pc
   12e08:	ldrdeq	r2, [r1], -r8
   12e0c:			; <UNDEFINED> instruction: 0x00012fb4
   12e10:	andeq	r2, r1, ip, lsl lr
   12e14:	andeq	r2, r1, ip, lsl lr
   12e18:	andeq	r2, r1, r4, asr #28
   12e1c:	movw	r0, #25978	; 0x657a
   12e20:	mov	r1, r7
   12e24:	movt	r0, #1
   12e28:	bl	14768 <__mempcpy_chk@plt+0x35e4>
   12e2c:	str	r0, [sp, #76]	; 0x4c
   12e30:	movw	r0, #25399	; 0x6337
   12e34:	mov	r1, r7
   12e38:	movt	r0, #1
   12e3c:	bl	14768 <__mempcpy_chk@plt+0x35e4>
   12e40:	str	r0, [sp, #80]	; 0x50
   12e44:	mov	r8, #0
   12e48:	tst	r9, #1
   12e4c:	bne	12e84 <__mempcpy_chk@plt+0x1d00>
   12e50:	ldr	r0, [sp, #76]	; 0x4c
   12e54:	ldrb	r0, [r0]
   12e58:	cmp	r0, #0
   12e5c:	beq	12e84 <__mempcpy_chk@plt+0x1d00>
   12e60:	ldr	r1, [sp, #76]	; 0x4c
   12e64:	mov	r8, #0
   12e68:	add	r1, r1, #1
   12e6c:	cmp	r8, r4
   12e70:	strbcc	r0, [r5, r8]
   12e74:	ldrb	r0, [r1, r8]
   12e78:	add	r8, r8, #1
   12e7c:	cmp	r0, #0
   12e80:	bne	12e6c <__mempcpy_chk@plt+0x1ce8>
   12e84:	ldr	r6, [sp, #80]	; 0x50
   12e88:	mov	r0, r6
   12e8c:	bl	11088 <strlen@plt>
   12e90:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12e94:	str	r0, [fp, #-72]	; 0xffffffb8
   12e98:	str	r6, [fp, #-88]	; 0xffffffa8
   12e9c:	mov	r2, #1
   12ea0:	mov	r3, r9
   12ea4:	mov	lr, sl
   12ea8:	b	12fb4 <__mempcpy_chk@plt+0x1e30>
   12eac:	mov	r0, #1
   12eb0:	b	12f08 <__mempcpy_chk@plt+0x1d84>
   12eb4:	mov	r7, #0
   12eb8:	mov	r8, #0
   12ebc:	mov	r2, r0
   12ec0:	mov	r3, #0
   12ec4:	b	12fb4 <__mempcpy_chk@plt+0x1e30>
   12ec8:	tst	r9, #1
   12ecc:	bne	12f08 <__mempcpy_chk@plt+0x1d84>
   12ed0:	mov	r2, r0
   12ed4:	b	12f60 <__mempcpy_chk@plt+0x1ddc>
   12ed8:	mov	r0, #1
   12edc:	mov	r8, #0
   12ee0:	mov	r7, #5
   12ee4:	mov	r2, #1
   12ee8:	str	r0, [fp, #-72]	; 0xffffffb8
   12eec:	movw	r0, #25976	; 0x6578
   12ef0:	movt	r0, #1
   12ef4:	str	r0, [fp, #-88]	; 0xffffffa8
   12ef8:	b	12f28 <__mempcpy_chk@plt+0x1da4>
   12efc:	mov	r2, #1
   12f00:	tst	r9, #1
   12f04:	beq	12f60 <__mempcpy_chk@plt+0x1ddc>
   12f08:	mov	r1, #1
   12f0c:	mov	r8, #0
   12f10:	mov	r7, #2
   12f14:	mov	r2, r0
   12f18:	str	r1, [fp, #-72]	; 0xffffffb8
   12f1c:	movw	r1, #25399	; 0x6337
   12f20:	movt	r1, #1
   12f24:	str	r1, [fp, #-88]	; 0xffffffa8
   12f28:	mov	r3, #1
   12f2c:	b	12fb4 <__mempcpy_chk@plt+0x1e30>
   12f30:	tst	r9, #1
   12f34:	beq	12f84 <__mempcpy_chk@plt+0x1e00>
   12f38:	mov	r0, #1
   12f3c:	mov	r8, #0
   12f40:	mov	r2, #1
   12f44:	mov	r3, #1
   12f48:	mov	r7, #5
   12f4c:	str	r0, [fp, #-72]	; 0xffffffb8
   12f50:	movw	r0, #25976	; 0x6578
   12f54:	movt	r0, #1
   12f58:	str	r0, [fp, #-88]	; 0xffffffa8
   12f5c:	b	12fb4 <__mempcpy_chk@plt+0x1e30>
   12f60:	cmp	r4, #0
   12f64:	mov	r8, #1
   12f68:	mov	r3, #0
   12f6c:	mov	r7, #2
   12f70:	movne	r0, #39	; 0x27
   12f74:	strbne	r0, [r5]
   12f78:	movw	r0, #25399	; 0x6337
   12f7c:	movt	r0, #1
   12f80:	b	12fa8 <__mempcpy_chk@plt+0x1e24>
   12f84:	cmp	r4, #0
   12f88:	mov	r8, #1
   12f8c:	mov	r2, #1
   12f90:	mov	r7, #5
   12f94:	mov	r3, #0
   12f98:	movne	r0, #34	; 0x22
   12f9c:	strbne	r0, [r5]
   12fa0:	movw	r0, #25976	; 0x6578
   12fa4:	movt	r0, #1
   12fa8:	str	r0, [fp, #-88]	; 0xffffffa8
   12fac:	mov	r0, #1
   12fb0:	str	r0, [fp, #-72]	; 0xffffffb8
   12fb4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12fb8:	eor	r6, r3, #1
   12fbc:	str	r7, [fp, #-68]	; 0xffffffbc
   12fc0:	str	r3, [fp, #-76]	; 0xffffffb4
   12fc4:	str	r2, [sp, #84]	; 0x54
   12fc8:	str	r6, [sp, #92]	; 0x5c
   12fcc:	cmp	r0, #0
   12fd0:	movwne	r0, #1
   12fd4:	and	r1, r0, r3
   12fd8:	and	r1, r2, r1
   12fdc:	str	r1, [sp, #48]	; 0x30
   12fe0:	sub	r1, r7, #2
   12fe4:	clz	r1, r1
   12fe8:	lsr	r1, r1, #5
   12fec:	and	r1, r1, r3
   12ff0:	str	r1, [sp, #64]	; 0x40
   12ff4:	subs	r1, r7, #2
   12ff8:	mov	r7, #0
   12ffc:	movwne	r1, #1
   13000:	orr	r6, r1, r6
   13004:	and	r1, r1, r2
   13008:	and	r0, r0, r1
   1300c:	str	r6, [sp, #68]	; 0x44
   13010:	str	r0, [fp, #-60]	; 0xffffffc4
   13014:	orr	r0, r1, r3
   13018:	ldr	r1, [fp, #16]
   1301c:	eor	r0, r0, #1
   13020:	clz	r1, r1
   13024:	lsr	r1, r1, #5
   13028:	orr	r0, r1, r0
   1302c:	str	r0, [fp, #-64]	; 0xffffffc0
   13030:	eor	r0, r2, #1
   13034:	str	r0, [sp, #52]	; 0x34
   13038:	cmn	lr, #1
   1303c:	beq	1304c <__mempcpy_chk@plt+0x1ec8>
   13040:	cmp	r7, lr
   13044:	bne	13058 <__mempcpy_chk@plt+0x1ed4>
   13048:	b	13ba0 <__mempcpy_chk@plt+0x2a1c>
   1304c:	ldrb	r0, [ip, r7]
   13050:	cmp	r0, #0
   13054:	beq	13ba8 <__mempcpy_chk@plt+0x2a24>
   13058:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1305c:	mov	sl, #0
   13060:	cmp	r0, #0
   13064:	beq	1309c <__mempcpy_chk@plt+0x1f18>
   13068:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1306c:	add	r5, r7, r0
   13070:	cmp	r0, #2
   13074:	bcc	13090 <__mempcpy_chk@plt+0x1f0c>
   13078:	cmn	lr, #1
   1307c:	bne	13090 <__mempcpy_chk@plt+0x1f0c>
   13080:	mov	r0, ip
   13084:	bl	11088 <strlen@plt>
   13088:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1308c:	mov	lr, r0
   13090:	cmp	r5, lr
   13094:	bls	130a4 <__mempcpy_chk@plt+0x1f20>
   13098:	ldr	r5, [fp, #-84]	; 0xffffffac
   1309c:	mov	r0, #0
   130a0:	b	130f0 <__mempcpy_chk@plt+0x1f6c>
   130a4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   130a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   130ac:	add	r0, ip, r7
   130b0:	mov	r6, r4
   130b4:	mov	r4, lr
   130b8:	bl	1107c <bcmp@plt>
   130bc:	ldr	r2, [sp, #92]	; 0x5c
   130c0:	cmp	r0, #0
   130c4:	ldr	r5, [fp, #-84]	; 0xffffffac
   130c8:	mov	r1, r0
   130cc:	movwne	r1, #1
   130d0:	orr	r1, r1, r2
   130d4:	tst	r1, #1
   130d8:	beq	13c30 <__mempcpy_chk@plt+0x2aac>
   130dc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   130e0:	clz	r0, r0
   130e4:	mov	lr, r4
   130e8:	mov	r4, r6
   130ec:	lsr	r0, r0, #5
   130f0:	str	r0, [fp, #-52]	; 0xffffffcc
   130f4:	ldrb	r6, [ip, r7]
   130f8:	cmp	r6, #126	; 0x7e
   130fc:	bhi	1362c <__mempcpy_chk@plt+0x24a8>
   13100:	add	r3, pc, #16
   13104:	mov	r9, #1
   13108:	mov	r2, #110	; 0x6e
   1310c:	mov	r0, #97	; 0x61
   13110:	mov	r1, #0
   13114:	ldr	pc, [r3, r6, lsl #2]
   13118:	andeq	r3, r1, ip, lsl #9
   1311c:	andeq	r3, r1, ip, lsr #12
   13120:	andeq	r3, r1, ip, lsr #12
   13124:	andeq	r3, r1, ip, lsr #12
   13128:	andeq	r3, r1, ip, lsr #12
   1312c:	andeq	r3, r1, ip, lsr #12
   13130:	andeq	r3, r1, ip, lsr #12
   13134:	andeq	r3, r1, r8, lsl #14
   13138:	andeq	r3, r1, ip, ror #8
   1313c:	andeq	r3, r1, r4, ror #8
   13140:	andeq	r3, r1, r8, ror r4
   13144:	muleq	r1, r4, r5
   13148:	andeq	r3, r1, ip, asr r4
   1314c:	andeq	r3, r1, r4, ror r4
   13150:	andeq	r3, r1, ip, lsr #12
   13154:	andeq	r3, r1, ip, lsr #12
   13158:	andeq	r3, r1, ip, lsr #12
   1315c:	andeq	r3, r1, ip, lsr #12
   13160:	andeq	r3, r1, ip, lsr #12
   13164:	andeq	r3, r1, ip, lsr #12
   13168:	andeq	r3, r1, ip, lsr #12
   1316c:	andeq	r3, r1, ip, lsr #12
   13170:	andeq	r3, r1, ip, lsr #12
   13174:	andeq	r3, r1, ip, lsr #12
   13178:	andeq	r3, r1, ip, lsr #12
   1317c:	andeq	r3, r1, ip, lsr #12
   13180:	andeq	r3, r1, ip, lsr #12
   13184:	andeq	r3, r1, ip, lsr #12
   13188:	andeq	r3, r1, ip, lsr #12
   1318c:	andeq	r3, r1, ip, lsr #12
   13190:	andeq	r3, r1, ip, lsr #12
   13194:	andeq	r3, r1, ip, lsr #12
   13198:	andeq	r3, r1, r0, lsl r4
   1319c:	andeq	r3, r1, r4, lsl r4
   131a0:	andeq	r3, r1, r4, lsl r4
   131a4:	strdeq	r3, [r1], -ip
   131a8:	andeq	r3, r1, r4, lsl r4
   131ac:	andeq	r3, r1, r4, lsl r3
   131b0:	andeq	r3, r1, r4, lsl r4
   131b4:	muleq	r1, ip, r5
   131b8:	andeq	r3, r1, r4, lsl r4
   131bc:	andeq	r3, r1, r4, lsl r4
   131c0:	andeq	r3, r1, r4, lsl r4
   131c4:	andeq	r3, r1, r4, lsl r3
   131c8:	andeq	r3, r1, r4, lsl r3
   131cc:	andeq	r3, r1, r4, lsl r3
   131d0:	andeq	r3, r1, r4, lsl r3
   131d4:	andeq	r3, r1, r4, lsl r3
   131d8:	andeq	r3, r1, r4, lsl r3
   131dc:	andeq	r3, r1, r4, lsl r3
   131e0:	andeq	r3, r1, r4, lsl r3
   131e4:	andeq	r3, r1, r4, lsl r3
   131e8:	andeq	r3, r1, r4, lsl r3
   131ec:	andeq	r3, r1, r4, lsl r3
   131f0:	andeq	r3, r1, r4, lsl r3
   131f4:	andeq	r3, r1, r4, lsl r3
   131f8:	andeq	r3, r1, r4, lsl r3
   131fc:	andeq	r3, r1, r4, lsl r3
   13200:	andeq	r3, r1, r4, lsl r3
   13204:	andeq	r3, r1, r4, lsl r4
   13208:	andeq	r3, r1, r4, lsl r4
   1320c:	andeq	r3, r1, r4, lsl r4
   13210:	andeq	r3, r1, r4, lsl r4
   13214:	andeq	r3, r1, r4, ror #10
   13218:	andeq	r3, r1, ip, lsr #12
   1321c:	andeq	r3, r1, r4, lsl r3
   13220:	andeq	r3, r1, r4, lsl r3
   13224:	andeq	r3, r1, r4, lsl r3
   13228:	andeq	r3, r1, r4, lsl r3
   1322c:	andeq	r3, r1, r4, lsl r3
   13230:	andeq	r3, r1, r4, lsl r3
   13234:	andeq	r3, r1, r4, lsl r3
   13238:	andeq	r3, r1, r4, lsl r3
   1323c:	andeq	r3, r1, r4, lsl r3
   13240:	andeq	r3, r1, r4, lsl r3
   13244:	andeq	r3, r1, r4, lsl r3
   13248:	andeq	r3, r1, r4, lsl r3
   1324c:	andeq	r3, r1, r4, lsl r3
   13250:	andeq	r3, r1, r4, lsl r3
   13254:	andeq	r3, r1, r4, lsl r3
   13258:	andeq	r3, r1, r4, lsl r3
   1325c:	andeq	r3, r1, r4, lsl r3
   13260:	andeq	r3, r1, r4, lsl r3
   13264:	andeq	r3, r1, r4, lsl r3
   13268:	andeq	r3, r1, r4, lsl r3
   1326c:	andeq	r3, r1, r4, lsl r3
   13270:	andeq	r3, r1, r4, lsl r3
   13274:	andeq	r3, r1, r4, lsl r3
   13278:	andeq	r3, r1, r4, lsl r3
   1327c:	andeq	r3, r1, r4, lsl r3
   13280:	andeq	r3, r1, r4, lsl r3
   13284:	andeq	r3, r1, r4, lsl r4
   13288:	andeq	r3, r1, ip, lsr r4
   1328c:	andeq	r3, r1, r4, lsl r3
   13290:	andeq	r3, r1, r4, lsl r4
   13294:	andeq	r3, r1, r4, lsl r3
   13298:	andeq	r3, r1, r4, lsl r4
   1329c:	andeq	r3, r1, r4, lsl r3
   132a0:	andeq	r3, r1, r4, lsl r3
   132a4:	andeq	r3, r1, r4, lsl r3
   132a8:	andeq	r3, r1, r4, lsl r3
   132ac:	andeq	r3, r1, r4, lsl r3
   132b0:	andeq	r3, r1, r4, lsl r3
   132b4:	andeq	r3, r1, r4, lsl r3
   132b8:	andeq	r3, r1, r4, lsl r3
   132bc:	andeq	r3, r1, r4, lsl r3
   132c0:	andeq	r3, r1, r4, lsl r3
   132c4:	andeq	r3, r1, r4, lsl r3
   132c8:	andeq	r3, r1, r4, lsl r3
   132cc:	andeq	r3, r1, r4, lsl r3
   132d0:	andeq	r3, r1, r4, lsl r3
   132d4:	andeq	r3, r1, r4, lsl r3
   132d8:	andeq	r3, r1, r4, lsl r3
   132dc:	andeq	r3, r1, r4, lsl r3
   132e0:	andeq	r3, r1, r4, lsl r3
   132e4:	andeq	r3, r1, r4, lsl r3
   132e8:	andeq	r3, r1, r4, lsl r3
   132ec:	andeq	r3, r1, r4, lsl r3
   132f0:	andeq	r3, r1, r4, lsl r3
   132f4:	andeq	r3, r1, r4, lsl r3
   132f8:	andeq	r3, r1, r4, lsl r3
   132fc:	andeq	r3, r1, r4, lsl r3
   13300:	andeq	r3, r1, r4, lsl r3
   13304:	ldrdeq	r3, [r1], -r0
   13308:	andeq	r3, r1, r4, lsl r4
   1330c:	ldrdeq	r3, [r1], -r0
   13310:	strdeq	r3, [r1], -ip
   13314:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13318:	tst	r0, #1
   1331c:	bne	13348 <__mempcpy_chk@plt+0x21c4>
   13320:	ldr	r1, [fp, #16]
   13324:	ubfx	r0, r6, #5, #3
   13328:	mov	r2, #1
   1332c:	ldr	r0, [r1, r0, lsl #2]
   13330:	and	r1, r6, #31
   13334:	tst	r0, r2, lsl r1
   13338:	beq	13348 <__mempcpy_chk@plt+0x21c4>
   1333c:	mov	r0, r6
   13340:	mov	r1, r9
   13344:	b	1335c <__mempcpy_chk@plt+0x21d8>
   13348:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1334c:	mov	r1, r9
   13350:	cmp	r0, #0
   13354:	mov	r0, r6
   13358:	beq	1369c <__mempcpy_chk@plt+0x2518>
   1335c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13360:	tst	r2, #1
   13364:	bne	13c6c <__mempcpy_chk@plt+0x2ae8>
   13368:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1336c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13370:	subs	r2, r2, #2
   13374:	movwne	r2, #1
   13378:	orr	r2, r2, r3
   1337c:	tst	r2, #1
   13380:	bne	133bc <__mempcpy_chk@plt+0x2238>
   13384:	cmp	r8, r4
   13388:	movcc	r2, #39	; 0x27
   1338c:	strbcc	r2, [r5, r8]
   13390:	add	r2, r8, #1
   13394:	cmp	r2, r4
   13398:	movcc	r3, #36	; 0x24
   1339c:	strbcc	r3, [r5, r2]
   133a0:	add	r2, r8, #2
   133a4:	add	r8, r8, #3
   133a8:	cmp	r2, r4
   133ac:	movcc	r3, #39	; 0x27
   133b0:	strbcc	r3, [r5, r2]
   133b4:	mov	r2, #1
   133b8:	str	r2, [fp, #-56]	; 0xffffffc8
   133bc:	cmp	r8, r4
   133c0:	movcc	r2, #92	; 0x5c
   133c4:	strbcc	r2, [r5, r8]
   133c8:	add	r8, r8, #1
   133cc:	b	136e0 <__mempcpy_chk@plt+0x255c>
   133d0:	cmp	lr, #1
   133d4:	beq	133fc <__mempcpy_chk@plt+0x2278>
   133d8:	mov	r9, #0
   133dc:	cmn	lr, #1
   133e0:	bne	13408 <__mempcpy_chk@plt+0x2284>
   133e4:	ldrb	r0, [ip, #1]
   133e8:	cmp	r0, #0
   133ec:	beq	133fc <__mempcpy_chk@plt+0x2278>
   133f0:	mvn	lr, #0
   133f4:	mov	sl, #0
   133f8:	b	13314 <__mempcpy_chk@plt+0x2190>
   133fc:	mov	r9, #0
   13400:	cmp	r7, #0
   13404:	beq	13410 <__mempcpy_chk@plt+0x228c>
   13408:	mov	sl, #0
   1340c:	b	13314 <__mempcpy_chk@plt+0x2190>
   13410:	mov	r1, #1
   13414:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13418:	cmp	r0, #2
   1341c:	bne	13434 <__mempcpy_chk@plt+0x22b0>
   13420:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13424:	mov	r9, r1
   13428:	tst	r0, #1
   1342c:	beq	13314 <__mempcpy_chk@plt+0x2190>
   13430:	b	13c6c <__mempcpy_chk@plt+0x2ae8>
   13434:	mov	r9, r1
   13438:	b	13314 <__mempcpy_chk@plt+0x2190>
   1343c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13440:	cmp	r0, #2
   13444:	bne	13680 <__mempcpy_chk@plt+0x24fc>
   13448:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1344c:	tst	r0, #1
   13450:	bne	13c6c <__mempcpy_chk@plt+0x2ae8>
   13454:	mov	sl, #0
   13458:	b	13694 <__mempcpy_chk@plt+0x2510>
   1345c:	mov	r0, #102	; 0x66
   13460:	b	13708 <__mempcpy_chk@plt+0x2584>
   13464:	mov	r2, #116	; 0x74
   13468:	b	13478 <__mempcpy_chk@plt+0x22f4>
   1346c:	mov	r0, #98	; 0x62
   13470:	b	13708 <__mempcpy_chk@plt+0x2584>
   13474:	mov	r2, #114	; 0x72
   13478:	ldr	r0, [sp, #68]	; 0x44
   1347c:	tst	r0, #1
   13480:	mov	r0, r2
   13484:	bne	13708 <__mempcpy_chk@plt+0x2584>
   13488:	b	13c6c <__mempcpy_chk@plt+0x2ae8>
   1348c:	ldr	r0, [sp, #84]	; 0x54
   13490:	tst	r0, #1
   13494:	beq	13724 <__mempcpy_chk@plt+0x25a0>
   13498:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1349c:	tst	r0, #1
   134a0:	bne	13d58 <__mempcpy_chk@plt+0x2bd4>
   134a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   134ac:	subs	r0, r0, #2
   134b0:	movwne	r0, #1
   134b4:	orr	r0, r0, r1
   134b8:	tst	r0, #1
   134bc:	bne	134f8 <__mempcpy_chk@plt+0x2374>
   134c0:	cmp	r8, r4
   134c4:	movcc	r0, #39	; 0x27
   134c8:	strbcc	r0, [r5, r8]
   134cc:	add	r0, r8, #1
   134d0:	cmp	r0, r4
   134d4:	movcc	r1, #36	; 0x24
   134d8:	strbcc	r1, [r5, r0]
   134dc:	add	r0, r8, #2
   134e0:	add	r8, r8, #3
   134e4:	cmp	r0, r4
   134e8:	movcc	r1, #39	; 0x27
   134ec:	strbcc	r1, [r5, r0]
   134f0:	mov	r0, #1
   134f4:	str	r0, [fp, #-56]	; 0xffffffc8
   134f8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   134fc:	cmp	r8, r4
   13500:	mov	r9, #0
   13504:	mov	sl, #1
   13508:	mov	r6, #48	; 0x30
   1350c:	movcc	r0, #92	; 0x5c
   13510:	strbcc	r0, [r5, r8]
   13514:	add	r0, r8, #1
   13518:	cmp	r1, #2
   1351c:	beq	138ec <__mempcpy_chk@plt+0x2768>
   13520:	add	r1, r7, #1
   13524:	cmp	r1, lr
   13528:	bcs	138ec <__mempcpy_chk@plt+0x2768>
   1352c:	ldrb	r1, [ip, r1]
   13530:	sub	r1, r1, #48	; 0x30
   13534:	uxtb	r1, r1
   13538:	cmp	r1, #9
   1353c:	bhi	138ec <__mempcpy_chk@plt+0x2768>
   13540:	cmp	r0, r4
   13544:	movcc	r1, #48	; 0x30
   13548:	strbcc	r1, [r5, r0]
   1354c:	add	r0, r8, #2
   13550:	add	r8, r8, #3
   13554:	cmp	r0, r4
   13558:	movcc	r1, #48	; 0x30
   1355c:	strbcc	r1, [r5, r0]
   13560:	b	13314 <__mempcpy_chk@plt+0x2190>
   13564:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13568:	mov	sl, #0
   1356c:	mov	r6, #63	; 0x3f
   13570:	cmp	r0, #5
   13574:	beq	138f4 <__mempcpy_chk@plt+0x2770>
   13578:	cmp	r0, #2
   1357c:	bne	1399c <__mempcpy_chk@plt+0x2818>
   13580:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13584:	mov	r9, #0
   13588:	tst	r0, #1
   1358c:	beq	13314 <__mempcpy_chk@plt+0x2190>
   13590:	b	13c6c <__mempcpy_chk@plt+0x2ae8>
   13594:	mov	r0, #118	; 0x76
   13598:	b	13708 <__mempcpy_chk@plt+0x2584>
   1359c:	mov	r0, #1
   135a0:	mov	r6, #39	; 0x27
   135a4:	str	r0, [sp, #60]	; 0x3c
   135a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   135ac:	cmp	r0, #2
   135b0:	bne	13740 <__mempcpy_chk@plt+0x25bc>
   135b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   135b8:	tst	r0, #1
   135bc:	bne	13c6c <__mempcpy_chk@plt+0x2ae8>
   135c0:	ldr	r2, [sp, #56]	; 0x38
   135c4:	clz	r1, r4
   135c8:	mov	sl, #0
   135cc:	mov	r9, #1
   135d0:	lsr	r1, r1, #5
   135d4:	cmp	r2, #0
   135d8:	mov	r0, r2
   135dc:	movwne	r0, #1
   135e0:	orrs	r0, r0, r1
   135e4:	moveq	r2, r4
   135e8:	moveq	r4, r0
   135ec:	cmp	r8, r4
   135f0:	str	r2, [sp, #56]	; 0x38
   135f4:	movcc	r0, #39	; 0x27
   135f8:	strbcc	r0, [r5, r8]
   135fc:	add	r0, r8, #1
   13600:	cmp	r0, r4
   13604:	movcc	r1, #92	; 0x5c
   13608:	strbcc	r1, [r5, r0]
   1360c:	add	r0, r8, #2
   13610:	add	r8, r8, #3
   13614:	cmp	r0, r4
   13618:	movcc	r1, #39	; 0x27
   1361c:	strbcc	r1, [r5, r0]
   13620:	mov	r0, #0
   13624:	str	r0, [fp, #-56]	; 0xffffffc8
   13628:	b	13314 <__mempcpy_chk@plt+0x2190>
   1362c:	ldr	r0, [sp, #40]	; 0x28
   13630:	str	r4, [sp, #88]	; 0x58
   13634:	cmp	r0, #1
   13638:	bne	13748 <__mempcpy_chk@plt+0x25c4>
   1363c:	str	lr, [sp, #28]
   13640:	bl	11064 <__ctype_b_loc@plt>
   13644:	ldr	r0, [r0]
   13648:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1364c:	mov	r2, #1
   13650:	add	r0, r0, r6, lsl #1
   13654:	ldrb	r0, [r0, #1]
   13658:	ubfx	r9, r0, #6, #1
   1365c:	ldr	r0, [sp, #52]	; 0x34
   13660:	cmp	r2, #1
   13664:	orr	r0, r9, r0
   13668:	bhi	139a4 <__mempcpy_chk@plt+0x2820>
   1366c:	tst	r0, #1
   13670:	beq	139a4 <__mempcpy_chk@plt+0x2820>
   13674:	ldr	lr, [sp, #28]
   13678:	ldr	r4, [sp, #88]	; 0x58
   1367c:	b	13314 <__mempcpy_chk@plt+0x2190>
   13680:	ldr	r1, [sp, #48]	; 0x30
   13684:	mov	sl, #0
   13688:	mov	r0, #92	; 0x5c
   1368c:	cmp	r1, #0
   13690:	beq	13708 <__mempcpy_chk@plt+0x2584>
   13694:	mov	r6, #92	; 0x5c
   13698:	mov	r9, #0
   1369c:	cmp	sl, #0
   136a0:	bne	136d8 <__mempcpy_chk@plt+0x2554>
   136a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   136a8:	tst	r0, #1
   136ac:	beq	136d8 <__mempcpy_chk@plt+0x2554>
   136b0:	cmp	r8, r4
   136b4:	movcc	r0, #39	; 0x27
   136b8:	strbcc	r0, [r5, r8]
   136bc:	add	r0, r8, #1
   136c0:	add	r8, r8, #2
   136c4:	cmp	r0, r4
   136c8:	movcc	r1, #39	; 0x27
   136cc:	strbcc	r1, [r5, r0]
   136d0:	mov	r0, #0
   136d4:	str	r0, [fp, #-56]	; 0xffffffc8
   136d8:	mov	r1, r9
   136dc:	mov	r0, r6
   136e0:	cmp	r8, r4
   136e4:	strbcc	r0, [r5, r8]
   136e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   136ec:	add	r8, r8, #1
   136f0:	and	r0, r0, r1
   136f4:	str	r0, [fp, #-48]	; 0xffffffd0
   136f8:	add	r7, r7, #1
   136fc:	cmn	lr, #1
   13700:	bne	13040 <__mempcpy_chk@plt+0x1ebc>
   13704:	b	1304c <__mempcpy_chk@plt+0x1ec8>
   13708:	ldr	r1, [sp, #84]	; 0x54
   1370c:	mov	sl, #0
   13710:	mov	r9, #0
   13714:	tst	r1, #1
   13718:	mov	r1, #0
   1371c:	beq	13314 <__mempcpy_chk@plt+0x2190>
   13720:	b	1335c <__mempcpy_chk@plt+0x21d8>
   13724:	ldr	r0, [sp, #36]	; 0x24
   13728:	mov	r6, #0
   1372c:	mov	sl, #0
   13730:	mov	r9, #0
   13734:	cmp	r0, #0
   13738:	beq	13314 <__mempcpy_chk@plt+0x2190>
   1373c:	b	136f8 <__mempcpy_chk@plt+0x2574>
   13740:	mov	r9, #1
   13744:	b	13314 <__mempcpy_chk@plt+0x2190>
   13748:	mov	r0, #0
   1374c:	cmn	lr, #1
   13750:	sub	r4, fp, #40	; 0x28
   13754:	str	r0, [fp, #-36]	; 0xffffffdc
   13758:	str	r0, [fp, #-40]	; 0xffffffd8
   1375c:	bne	13770 <__mempcpy_chk@plt+0x25ec>
   13760:	mov	r0, ip
   13764:	bl	11088 <strlen@plt>
   13768:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1376c:	mov	lr, r0
   13770:	ldr	r0, [sp, #72]	; 0x48
   13774:	mov	r9, #1
   13778:	mov	r2, #0
   1377c:	str	lr, [sp, #28]
   13780:	add	r0, r0, r7
   13784:	str	r0, [sp, #20]
   13788:	b	137cc <__mempcpy_chk@plt+0x2648>
   1378c:	ldr	r5, [sp, #44]	; 0x2c
   13790:	add	r5, r0, r5
   13794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13798:	bl	10fbc <iswprint@plt>
   1379c:	cmp	r0, #0
   137a0:	sub	r4, fp, #40	; 0x28
   137a4:	movwne	r0, #1
   137a8:	and	r9, r9, r0
   137ac:	mov	r0, r4
   137b0:	bl	10f68 <mbsinit@plt>
   137b4:	mov	r2, r5
   137b8:	ldr	lr, [sp, #28]
   137bc:	ldr	r5, [fp, #-84]	; 0xffffffac
   137c0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   137c4:	cmp	r0, #0
   137c8:	bne	1365c <__mempcpy_chk@plt+0x24d8>
   137cc:	add	r0, r2, r7
   137d0:	str	r2, [sp, #44]	; 0x2c
   137d4:	mov	r3, r4
   137d8:	add	r1, ip, r0
   137dc:	str	r0, [sp, #24]
   137e0:	sub	r2, lr, r0
   137e4:	sub	r0, fp, #44	; 0x2c
   137e8:	bl	1594c <__mempcpy_chk@plt+0x47c8>
   137ec:	cmp	r0, #0
   137f0:	beq	13b94 <__mempcpy_chk@plt+0x2a10>
   137f4:	cmn	r0, #1
   137f8:	beq	13b50 <__mempcpy_chk@plt+0x29cc>
   137fc:	ldr	lr, [sp, #28]
   13800:	cmn	r0, #2
   13804:	beq	13b58 <__mempcpy_chk@plt+0x29d4>
   13808:	ldr	r2, [sp, #64]	; 0x40
   1380c:	ldr	r4, [sp, #88]	; 0x58
   13810:	ldr	ip, [sp, #84]	; 0x54
   13814:	cmp	r0, #2
   13818:	mov	r1, #0
   1381c:	movwcc	r1, #1
   13820:	eor	r2, r2, #1
   13824:	orrs	r1, r2, r1
   13828:	bne	1378c <__mempcpy_chk@plt+0x2608>
   1382c:	ldr	r1, [sp, #44]	; 0x2c
   13830:	ldr	r2, [sp, #20]
   13834:	add	r1, r2, r1
   13838:	sub	r2, r0, #1
   1383c:	b	1384c <__mempcpy_chk@plt+0x26c8>
   13840:	add	r1, r1, #1
   13844:	subs	r2, r2, #1
   13848:	beq	1378c <__mempcpy_chk@plt+0x2608>
   1384c:	ldrb	r3, [r1]
   13850:	sub	r3, r3, #91	; 0x5b
   13854:	cmp	r3, #33	; 0x21
   13858:	bhi	13840 <__mempcpy_chk@plt+0x26bc>
   1385c:	add	r5, pc, #0
   13860:	ldr	pc, [r5, r3, lsl #2]
   13864:	andeq	r3, r1, r8, asr #24
   13868:	andeq	r3, r1, r8, asr #24
   1386c:	andeq	r3, r1, r0, asr #16
   13870:	andeq	r3, r1, r8, asr #24
   13874:	andeq	r3, r1, r0, asr #16
   13878:	andeq	r3, r1, r8, asr #24
   1387c:	andeq	r3, r1, r0, asr #16
   13880:	andeq	r3, r1, r0, asr #16
   13884:	andeq	r3, r1, r0, asr #16
   13888:	andeq	r3, r1, r0, asr #16
   1388c:	andeq	r3, r1, r0, asr #16
   13890:	andeq	r3, r1, r0, asr #16
   13894:	andeq	r3, r1, r0, asr #16
   13898:	andeq	r3, r1, r0, asr #16
   1389c:	andeq	r3, r1, r0, asr #16
   138a0:	andeq	r3, r1, r0, asr #16
   138a4:	andeq	r3, r1, r0, asr #16
   138a8:	andeq	r3, r1, r0, asr #16
   138ac:	andeq	r3, r1, r0, asr #16
   138b0:	andeq	r3, r1, r0, asr #16
   138b4:	andeq	r3, r1, r0, asr #16
   138b8:	andeq	r3, r1, r0, asr #16
   138bc:	andeq	r3, r1, r0, asr #16
   138c0:	andeq	r3, r1, r0, asr #16
   138c4:	andeq	r3, r1, r0, asr #16
   138c8:	andeq	r3, r1, r0, asr #16
   138cc:	andeq	r3, r1, r0, asr #16
   138d0:	andeq	r3, r1, r0, asr #16
   138d4:	andeq	r3, r1, r0, asr #16
   138d8:	andeq	r3, r1, r0, asr #16
   138dc:	andeq	r3, r1, r0, asr #16
   138e0:	andeq	r3, r1, r0, asr #16
   138e4:	andeq	r3, r1, r0, asr #16
   138e8:	andeq	r3, r1, r8, asr #24
   138ec:	mov	r8, r0
   138f0:	b	13314 <__mempcpy_chk@plt+0x2190>
   138f4:	ldr	r0, [sp, #32]
   138f8:	cmp	r0, #0
   138fc:	beq	1399c <__mempcpy_chk@plt+0x2818>
   13900:	add	r0, r7, #2
   13904:	cmp	r0, lr
   13908:	bcs	1399c <__mempcpy_chk@plt+0x2818>
   1390c:	add	r1, r7, ip
   13910:	ldrb	r1, [r1, #1]
   13914:	cmp	r1, #63	; 0x3f
   13918:	bne	1399c <__mempcpy_chk@plt+0x2818>
   1391c:	ldrb	r9, [ip, r0]
   13920:	sub	r2, r9, #33	; 0x21
   13924:	cmp	r2, #29
   13928:	bhi	1399c <__mempcpy_chk@plt+0x2818>
   1392c:	movw	r1, #20929	; 0x51c1
   13930:	mov	r3, #1
   13934:	movt	r1, #14336	; 0x3800
   13938:	tst	r1, r3, lsl r2
   1393c:	beq	1399c <__mempcpy_chk@plt+0x2818>
   13940:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13944:	tst	r1, #1
   13948:	bne	13c6c <__mempcpy_chk@plt+0x2ae8>
   1394c:	cmp	r8, r4
   13950:	add	r2, r8, #1
   13954:	mov	r6, r9
   13958:	mov	r7, r0
   1395c:	mov	r9, #0
   13960:	movcc	r1, #63	; 0x3f
   13964:	strbcc	r1, [r5, r8]
   13968:	cmp	r2, r4
   1396c:	movcc	r1, #34	; 0x22
   13970:	strbcc	r1, [r5, r2]
   13974:	add	r2, r8, #2
   13978:	cmp	r2, r4
   1397c:	movcc	r1, #34	; 0x22
   13980:	strbcc	r1, [r5, r2]
   13984:	add	r2, r8, #3
   13988:	add	r8, r8, #4
   1398c:	cmp	r2, r4
   13990:	movcc	r1, #63	; 0x3f
   13994:	strbcc	r1, [r5, r2]
   13998:	b	13314 <__mempcpy_chk@plt+0x2190>
   1399c:	mov	r9, #0
   139a0:	b	13314 <__mempcpy_chk@plt+0x2190>
   139a4:	ldr	lr, [sp, #28]
   139a8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   139ac:	add	r1, r2, r7
   139b0:	mov	r2, #0
   139b4:	str	r1, [sp, #44]	; 0x2c
   139b8:	tst	r0, #1
   139bc:	bne	13ad8 <__mempcpy_chk@plt+0x2954>
   139c0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   139c4:	tst	r1, #1
   139c8:	bne	13c68 <__mempcpy_chk@plt+0x2ae4>
   139cc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   139d0:	subs	r2, r1, #2
   139d4:	movwne	r2, #1
   139d8:	orr	r2, r2, r4
   139dc:	tst	r2, #1
   139e0:	bne	13a24 <__mempcpy_chk@plt+0x28a0>
   139e4:	ldr	r1, [sp, #88]	; 0x58
   139e8:	add	r2, r8, #1
   139ec:	mov	r4, #1
   139f0:	cmp	r8, r1
   139f4:	movcc	r1, #39	; 0x27
   139f8:	strbcc	r1, [r5, r8]
   139fc:	ldr	r1, [sp, #88]	; 0x58
   13a00:	cmp	r2, r1
   13a04:	movcc	r1, #36	; 0x24
   13a08:	strbcc	r1, [r5, r2]
   13a0c:	ldr	r1, [sp, #88]	; 0x58
   13a10:	add	r2, r8, #2
   13a14:	add	r8, r8, #3
   13a18:	cmp	r2, r1
   13a1c:	movcc	r1, #39	; 0x27
   13a20:	strbcc	r1, [r5, r2]
   13a24:	ldr	r1, [sp, #88]	; 0x58
   13a28:	add	r2, r8, #1
   13a2c:	cmp	r8, r1
   13a30:	movcc	r1, #92	; 0x5c
   13a34:	strbcc	r1, [r5, r8]
   13a38:	ldr	r1, [sp, #88]	; 0x58
   13a3c:	cmp	r2, r1
   13a40:	bcs	13a54 <__mempcpy_chk@plt+0x28d0>
   13a44:	uxtb	r3, r6
   13a48:	mov	r1, #48	; 0x30
   13a4c:	orr	r3, r1, r3, lsr #6
   13a50:	strb	r3, [r5, r2]
   13a54:	ldr	r1, [sp, #88]	; 0x58
   13a58:	add	r2, r8, #2
   13a5c:	add	r8, r8, #3
   13a60:	cmp	r2, r1
   13a64:	lsrcc	r3, r6, #3
   13a68:	movcc	r1, #6
   13a6c:	bficc	r3, r1, #3, #29
   13a70:	mov	r1, #6
   13a74:	bfi	r6, r1, #3, #29
   13a78:	strbcc	r3, [r5, r2]
   13a7c:	mov	r2, #1
   13a80:	b	13b00 <__mempcpy_chk@plt+0x297c>
   13a84:	ldr	r1, [sp, #88]	; 0x58
   13a88:	ldr	r5, [fp, #-84]	; 0xffffffac
   13a8c:	ldr	r4, [sp, #88]	; 0x58
   13a90:	cmp	r8, r1
   13a94:	movcc	r1, #39	; 0x27
   13a98:	strbcc	r1, [r5, r8]
   13a9c:	add	r1, r8, #1
   13aa0:	add	r8, r8, #2
   13aa4:	cmp	r1, r4
   13aa8:	movcc	r4, #39	; 0x27
   13aac:	strbcc	r4, [r5, r1]
   13ab0:	mov	r4, #0
   13ab4:	ldr	r1, [sp, #88]	; 0x58
   13ab8:	cmp	r8, r1
   13abc:	ldr	r1, [sp, #72]	; 0x48
   13ac0:	strbcc	r6, [r5, r8]
   13ac4:	add	r8, r8, #1
   13ac8:	ldrb	r6, [r1, r7]
   13acc:	mov	r7, r3
   13ad0:	tst	r0, #1
   13ad4:	beq	139c0 <__mempcpy_chk@plt+0x283c>
   13ad8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13adc:	tst	r1, #1
   13ae0:	beq	13af8 <__mempcpy_chk@plt+0x2974>
   13ae4:	ldr	r1, [sp, #88]	; 0x58
   13ae8:	cmp	r8, r1
   13aec:	movcc	r1, #92	; 0x5c
   13af0:	strbcc	r1, [r5, r8]
   13af4:	add	r8, r8, #1
   13af8:	mov	r1, #0
   13afc:	str	r1, [fp, #-52]	; 0xffffffcc
   13b00:	ldr	r1, [sp, #44]	; 0x2c
   13b04:	add	r3, r7, #1
   13b08:	and	sl, r2, #1
   13b0c:	cmp	r1, r3
   13b10:	bls	13b34 <__mempcpy_chk@plt+0x29b0>
   13b14:	cmp	sl, #0
   13b18:	mvn	r5, r4
   13b1c:	movwne	sl, #1
   13b20:	orr	r5, r5, sl
   13b24:	tst	r5, #1
   13b28:	beq	13a84 <__mempcpy_chk@plt+0x2900>
   13b2c:	ldr	r5, [fp, #-84]	; 0xffffffac
   13b30:	b	13ab4 <__mempcpy_chk@plt+0x2930>
   13b34:	str	r4, [fp, #-56]	; 0xffffffc8
   13b38:	ldr	r4, [sp, #88]	; 0x58
   13b3c:	cmp	sl, #0
   13b40:	movwne	sl, #1
   13b44:	cmp	sl, #0
   13b48:	beq	136a4 <__mempcpy_chk@plt+0x2520>
   13b4c:	b	136d8 <__mempcpy_chk@plt+0x2554>
   13b50:	mov	r9, #0
   13b54:	b	13b94 <__mempcpy_chk@plt+0x2a10>
   13b58:	ldr	r0, [sp, #24]
   13b5c:	mov	r9, #0
   13b60:	cmp	lr, r0
   13b64:	bls	13b94 <__mempcpy_chk@plt+0x2a10>
   13b68:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b6c:	ldr	r2, [sp, #44]	; 0x2c
   13b70:	add	r0, ip, r7
   13b74:	ldrb	r1, [r0, r2]
   13b78:	cmp	r1, #0
   13b7c:	beq	1365c <__mempcpy_chk@plt+0x24d8>
   13b80:	add	r2, r2, #1
   13b84:	add	r1, r7, r2
   13b88:	cmp	r1, lr
   13b8c:	bcc	13b74 <__mempcpy_chk@plt+0x29f0>
   13b90:	b	1365c <__mempcpy_chk@plt+0x24d8>
   13b94:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13b98:	ldr	r2, [sp, #44]	; 0x2c
   13b9c:	b	1365c <__mempcpy_chk@plt+0x24d8>
   13ba0:	mov	lr, r7
   13ba4:	b	13bac <__mempcpy_chk@plt+0x2a28>
   13ba8:	mvn	lr, #0
   13bac:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13bb0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13bb4:	eor	r0, r1, #2
   13bb8:	orr	r0, r0, r8
   13bbc:	clz	r0, r0
   13bc0:	lsr	r0, r0, #5
   13bc4:	tst	r2, r0
   13bc8:	bne	13c6c <__mempcpy_chk@plt+0x2ae8>
   13bcc:	subs	r0, r1, #2
   13bd0:	movwne	r0, #1
   13bd4:	orr	r0, r2, r0
   13bd8:	tst	r0, #1
   13bdc:	ldreq	r0, [sp, #60]	; 0x3c
   13be0:	eoreq	r0, r0, #1
   13be4:	tsteq	r0, #1
   13be8:	bne	13d00 <__mempcpy_chk@plt+0x2b7c>
   13bec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13bf0:	mov	sl, lr
   13bf4:	tst	r0, #1
   13bf8:	bne	13ccc <__mempcpy_chk@plt+0x2b48>
   13bfc:	ldr	r6, [sp, #56]	; 0x38
   13c00:	mov	r9, #0
   13c04:	cmp	r6, #0
   13c08:	beq	13cf8 <__mempcpy_chk@plt+0x2b74>
   13c0c:	ldr	r0, [sp, #84]	; 0x54
   13c10:	mov	r1, #0
   13c14:	mov	r7, #2
   13c18:	cmp	r4, #0
   13c1c:	str	r1, [fp, #-48]	; 0xffffffd0
   13c20:	mov	r1, #0
   13c24:	str	r1, [fp, #-76]	; 0xffffffb4
   13c28:	beq	12dc8 <__mempcpy_chk@plt+0x1c44>
   13c2c:	b	13d00 <__mempcpy_chk@plt+0x2b7c>
   13c30:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13c34:	ldr	r1, [fp, #12]
   13c38:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13c3c:	mov	lr, r4
   13c40:	mov	r4, r6
   13c44:	b	13c8c <__mempcpy_chk@plt+0x2b08>
   13c48:	tst	ip, #1
   13c4c:	ldr	r5, [fp, #-84]	; 0xffffffac
   13c50:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13c54:	ldr	r1, [fp, #12]
   13c58:	mov	r0, #2
   13c5c:	movwne	r0, #4
   13c60:	mov	r2, r0
   13c64:	b	13c8c <__mempcpy_chk@plt+0x2b08>
   13c68:	ldr	r4, [sp, #88]	; 0x58
   13c6c:	ldr	r1, [sp, #84]	; 0x54
   13c70:	mov	r0, #2
   13c74:	tst	r1, #1
   13c78:	movwne	r0, #4
   13c7c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13c80:	ldr	r1, [fp, #12]
   13c84:	cmp	r2, #2
   13c88:	moveq	r2, r0
   13c8c:	mov	r0, #0
   13c90:	bic	r1, r1, #2
   13c94:	str	r2, [sp]
   13c98:	mov	r2, ip
   13c9c:	mov	r3, lr
   13ca0:	str	r0, [sp, #8]
   13ca4:	ldr	r0, [sp, #76]	; 0x4c
   13ca8:	str	r1, [sp, #4]
   13cac:	mov	r1, r4
   13cb0:	str	r0, [sp, #12]
   13cb4:	ldr	r0, [sp, #80]	; 0x50
   13cb8:	str	r0, [sp, #16]
   13cbc:	mov	r0, r5
   13cc0:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   13cc4:	mov	r8, r0
   13cc8:	b	13d4c <__mempcpy_chk@plt+0x2bc8>
   13ccc:	mov	r0, #5
   13cd0:	ldr	r1, [sp, #56]	; 0x38
   13cd4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13cd8:	mov	r3, sl
   13cdc:	str	r0, [sp]
   13ce0:	ldr	r0, [fp, #12]
   13ce4:	str	r0, [sp, #4]
   13ce8:	ldr	r0, [fp, #16]
   13cec:	str	r0, [sp, #8]
   13cf0:	ldr	r0, [sp, #76]	; 0x4c
   13cf4:	b	13cb0 <__mempcpy_chk@plt+0x2b2c>
   13cf8:	mov	r0, #0
   13cfc:	str	r0, [fp, #-76]	; 0xffffffb4
   13d00:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13d04:	cmp	r1, #0
   13d08:	beq	13d40 <__mempcpy_chk@plt+0x2bbc>
   13d0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13d10:	tst	r0, #1
   13d14:	bne	13d40 <__mempcpy_chk@plt+0x2bbc>
   13d18:	ldrb	r0, [r1]
   13d1c:	cmp	r0, #0
   13d20:	beq	13d40 <__mempcpy_chk@plt+0x2bbc>
   13d24:	add	r1, r1, #1
   13d28:	cmp	r8, r4
   13d2c:	strbcc	r0, [r5, r8]
   13d30:	add	r8, r8, #1
   13d34:	ldrb	r0, [r1], #1
   13d38:	cmp	r0, #0
   13d3c:	bne	13d28 <__mempcpy_chk@plt+0x2ba4>
   13d40:	cmp	r8, r4
   13d44:	movcc	r0, #0
   13d48:	strbcc	r0, [r5, r8]
   13d4c:	mov	r0, r8
   13d50:	sub	sp, fp, #28
   13d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d58:	mov	r0, #4
   13d5c:	b	13c7c <__mempcpy_chk@plt+0x2af8>
   13d60:	bl	1116c <abort@plt>
   13d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d68:	add	fp, sp, #28
   13d6c:	sub	sp, sp, #28
   13d70:	movw	r5, #29080	; 0x7198
   13d74:	cmp	r2, #0
   13d78:	mov	r4, r1
   13d7c:	mov	r7, r0
   13d80:	str	r0, [sp, #20]
   13d84:	movt	r5, #2
   13d88:	movne	r5, r2
   13d8c:	bl	110a0 <__errno_location@plt>
   13d90:	mov	sl, r0
   13d94:	ldr	r2, [r5, #40]	; 0x28
   13d98:	ldr	r3, [r5, #44]	; 0x2c
   13d9c:	ldm	r5, {r0, r1}
   13da0:	orr	r8, r1, #1
   13da4:	add	r9, r5, #8
   13da8:	mov	r1, #0
   13dac:	ldr	r6, [sl]
   13db0:	stm	sp, {r0, r8, r9}
   13db4:	mov	r0, #0
   13db8:	str	r2, [sp, #12]
   13dbc:	str	r3, [sp, #16]
   13dc0:	mov	r2, r7
   13dc4:	mov	r3, r4
   13dc8:	str	r6, [sp, #24]
   13dcc:	mov	r6, r4
   13dd0:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   13dd4:	add	r7, r0, #1
   13dd8:	mov	r0, r7
   13ddc:	bl	14f84 <__mempcpy_chk@plt+0x3e00>
   13de0:	mov	r4, r0
   13de4:	ldr	r0, [r5]
   13de8:	ldr	r2, [r5, #44]	; 0x2c
   13dec:	ldr	r1, [r5, #40]	; 0x28
   13df0:	mov	r3, r6
   13df4:	stm	sp, {r0, r8, r9}
   13df8:	str	r2, [sp, #16]
   13dfc:	ldr	r2, [sp, #20]
   13e00:	str	r1, [sp, #12]
   13e04:	mov	r0, r4
   13e08:	mov	r1, r7
   13e0c:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   13e10:	ldr	r0, [sp, #24]
   13e14:	str	r0, [sl]
   13e18:	mov	r0, r4
   13e1c:	sub	sp, fp, #28
   13e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e28:	add	fp, sp, #28
   13e2c:	sub	sp, sp, #36	; 0x24
   13e30:	movw	r8, #29080	; 0x7198
   13e34:	cmp	r3, #0
   13e38:	mov	r4, r2
   13e3c:	str	r2, [sp, #24]
   13e40:	mov	r5, r1
   13e44:	mov	r6, r0
   13e48:	str	r0, [sp, #20]
   13e4c:	movt	r8, #2
   13e50:	movne	r8, r3
   13e54:	bl	110a0 <__errno_location@plt>
   13e58:	str	r0, [sp, #28]
   13e5c:	ldr	r1, [r8, #40]	; 0x28
   13e60:	ldr	r2, [r8, #44]	; 0x2c
   13e64:	ldr	r7, [r0]
   13e68:	cmp	r4, #0
   13e6c:	add	sl, r8, #8
   13e70:	mov	r0, #0
   13e74:	ldm	r8, {r3, r9}
   13e78:	orreq	r9, r9, #1
   13e7c:	stm	sp, {r3, r9, sl}
   13e80:	str	r1, [sp, #12]
   13e84:	str	r2, [sp, #16]
   13e88:	mov	r1, #0
   13e8c:	mov	r2, r6
   13e90:	mov	r3, r5
   13e94:	str	r7, [sp, #32]
   13e98:	mov	r7, r5
   13e9c:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   13ea0:	add	r4, r0, #1
   13ea4:	mov	r5, r0
   13ea8:	mov	r0, r4
   13eac:	bl	14f84 <__mempcpy_chk@plt+0x3e00>
   13eb0:	mov	r6, r0
   13eb4:	ldr	r0, [r8]
   13eb8:	ldr	r2, [r8, #44]	; 0x2c
   13ebc:	ldr	r1, [r8, #40]	; 0x28
   13ec0:	mov	r3, r7
   13ec4:	stm	sp, {r0, r9, sl}
   13ec8:	str	r2, [sp, #16]
   13ecc:	ldr	r2, [sp, #20]
   13ed0:	str	r1, [sp, #12]
   13ed4:	mov	r0, r6
   13ed8:	mov	r1, r4
   13edc:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   13ee0:	ldr	r0, [sp, #24]
   13ee4:	ldr	r1, [sp, #32]
   13ee8:	ldr	r2, [sp, #28]
   13eec:	cmp	r0, #0
   13ef0:	str	r1, [r2]
   13ef4:	strne	r5, [r0]
   13ef8:	mov	r0, r6
   13efc:	sub	sp, fp, #28
   13f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f08:	add	fp, sp, #24
   13f0c:	movw	r5, #28940	; 0x710c
   13f10:	movw	r8, #28936	; 0x7108
   13f14:	movt	r5, #2
   13f18:	movt	r8, #2
   13f1c:	ldr	r0, [r5]
   13f20:	ldr	r4, [r8]
   13f24:	cmp	r0, #2
   13f28:	blt	13f54 <__mempcpy_chk@plt+0x2dd0>
   13f2c:	add	r7, r4, #12
   13f30:	mov	r6, #0
   13f34:	ldr	r0, [r7, r6, lsl #3]
   13f38:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   13f3c:	ldr	r1, [r5]
   13f40:	add	r2, r6, #2
   13f44:	add	r0, r6, #1
   13f48:	mov	r6, r0
   13f4c:	cmp	r2, r1
   13f50:	blt	13f34 <__mempcpy_chk@plt+0x2db0>
   13f54:	ldr	r0, [r4, #4]
   13f58:	movw	r9, #29128	; 0x71c8
   13f5c:	movw	r7, #28944	; 0x7110
   13f60:	movt	r9, #2
   13f64:	movt	r7, #2
   13f68:	cmp	r0, r9
   13f6c:	beq	13f7c <__mempcpy_chk@plt+0x2df8>
   13f70:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   13f74:	mov	r0, #256	; 0x100
   13f78:	stm	r7, {r0, r9}
   13f7c:	cmp	r4, r7
   13f80:	beq	13f90 <__mempcpy_chk@plt+0x2e0c>
   13f84:	mov	r0, r4
   13f88:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   13f8c:	str	r7, [r8]
   13f90:	mov	r0, #1
   13f94:	str	r0, [r5]
   13f98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f9c:	movw	r3, #29080	; 0x7198
   13fa0:	mvn	r2, #0
   13fa4:	movt	r3, #2
   13fa8:	b	13fac <__mempcpy_chk@plt+0x2e28>
   13fac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fb0:	add	fp, sp, #28
   13fb4:	sub	sp, sp, #44	; 0x2c
   13fb8:	mov	r7, r3
   13fbc:	str	r2, [sp, #36]	; 0x24
   13fc0:	str	r1, [sp, #32]
   13fc4:	mov	r5, r0
   13fc8:	bl	110a0 <__errno_location@plt>
   13fcc:	cmp	r5, #0
   13fd0:	bmi	14140 <__mempcpy_chk@plt+0x2fbc>
   13fd4:	cmn	r5, #-2147483647	; 0x80000001
   13fd8:	beq	14140 <__mempcpy_chk@plt+0x2fbc>
   13fdc:	movw	r8, #28940	; 0x710c
   13fe0:	movw	r4, #28936	; 0x7108
   13fe4:	str	r0, [sp, #28]
   13fe8:	ldr	r0, [r0]
   13fec:	movt	r8, #2
   13ff0:	movt	r4, #2
   13ff4:	ldr	r1, [r8]
   13ff8:	ldr	r6, [r4]
   13ffc:	str	r0, [sp, #24]
   14000:	cmp	r1, r5
   14004:	ble	14010 <__mempcpy_chk@plt+0x2e8c>
   14008:	mov	sl, r6
   1400c:	b	1407c <__mempcpy_chk@plt+0x2ef8>
   14010:	movw	r9, #28944	; 0x7110
   14014:	mov	r0, #8
   14018:	str	r1, [fp, #-32]	; 0xffffffe0
   1401c:	sub	r1, r5, r1
   14020:	mvn	r3, #-2147483648	; 0x80000000
   14024:	movt	r9, #2
   14028:	str	r0, [sp]
   1402c:	add	r2, r1, #1
   14030:	sub	r1, fp, #32
   14034:	subs	r0, r6, r9
   14038:	movne	r0, r6
   1403c:	bl	15184 <__mempcpy_chk@plt+0x4000>
   14040:	mov	sl, r0
   14044:	cmp	r6, r9
   14048:	str	r0, [r4]
   1404c:	bne	14058 <__mempcpy_chk@plt+0x2ed4>
   14050:	ldrd	r0, [r9]
   14054:	stm	sl, {r0, r1}
   14058:	ldr	r1, [r8]
   1405c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14060:	add	r0, sl, r1, lsl #3
   14064:	sub	r1, r2, r1
   14068:	lsl	r2, r1, #3
   1406c:	mov	r1, #0
   14070:	bl	110c4 <memset@plt>
   14074:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14078:	str	r0, [r8]
   1407c:	mov	r9, sl
   14080:	ldm	r7, {r0, r1}
   14084:	orr	r8, r1, #1
   14088:	add	r1, r7, #8
   1408c:	ldr	r2, [r7, #40]	; 0x28
   14090:	ldr	r3, [r7, #44]	; 0x2c
   14094:	ldr	r6, [r9, r5, lsl #3]!
   14098:	str	r1, [sp, #20]
   1409c:	ldr	r4, [r9, #4]!
   140a0:	stm	sp, {r0, r8}
   140a4:	add	r0, sp, #8
   140a8:	stm	r0, {r1, r2, r3}
   140ac:	ldr	r2, [sp, #32]
   140b0:	ldr	r3, [sp, #36]	; 0x24
   140b4:	mov	r1, r6
   140b8:	mov	r0, r4
   140bc:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   140c0:	cmp	r6, r0
   140c4:	bhi	14128 <__mempcpy_chk@plt+0x2fa4>
   140c8:	add	r6, r0, #1
   140cc:	movw	r0, #29128	; 0x71c8
   140d0:	movt	r0, #2
   140d4:	str	r6, [sl, r5, lsl #3]
   140d8:	cmp	r4, r0
   140dc:	beq	140e8 <__mempcpy_chk@plt+0x2f64>
   140e0:	mov	r0, r4
   140e4:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   140e8:	mov	r0, r6
   140ec:	bl	14f84 <__mempcpy_chk@plt+0x3e00>
   140f0:	str	r0, [r9]
   140f4:	mov	r4, r0
   140f8:	add	r3, sp, #8
   140fc:	ldr	r0, [r7]
   14100:	ldr	r1, [r7, #40]	; 0x28
   14104:	ldr	r2, [r7, #44]	; 0x2c
   14108:	stm	sp, {r0, r8}
   1410c:	ldr	r0, [sp, #20]
   14110:	stm	r3, {r0, r1, r2}
   14114:	ldr	r2, [sp, #32]
   14118:	ldr	r3, [sp, #36]	; 0x24
   1411c:	mov	r0, r4
   14120:	mov	r1, r6
   14124:	bl	12d38 <__mempcpy_chk@plt+0x1bb4>
   14128:	ldr	r0, [sp, #28]
   1412c:	ldr	r1, [sp, #24]
   14130:	str	r1, [r0]
   14134:	mov	r0, r4
   14138:	sub	sp, fp, #28
   1413c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14140:	bl	1116c <abort@plt>
   14144:	movw	r3, #29080	; 0x7198
   14148:	movt	r3, #2
   1414c:	b	13fac <__mempcpy_chk@plt+0x2e28>
   14150:	movw	r3, #29080	; 0x7198
   14154:	mov	r1, r0
   14158:	mov	r0, #0
   1415c:	mvn	r2, #0
   14160:	movt	r3, #2
   14164:	b	13fac <__mempcpy_chk@plt+0x2e28>
   14168:	movw	r3, #29080	; 0x7198
   1416c:	mov	r2, r1
   14170:	mov	r1, r0
   14174:	mov	r0, #0
   14178:	movt	r3, #2
   1417c:	b	13fac <__mempcpy_chk@plt+0x2e28>
   14180:	push	{fp, lr}
   14184:	mov	fp, sp
   14188:	sub	sp, sp, #48	; 0x30
   1418c:	vmov.i32	q8, #0	; 0x00000000
   14190:	mov	ip, #32
   14194:	mov	r3, sp
   14198:	mov	lr, r2
   1419c:	cmp	r1, #10
   141a0:	add	r2, r3, #16
   141a4:	vst1.64	{d16-d17}, [r3], ip
   141a8:	vst1.64	{d16-d17}, [r2]
   141ac:	vst1.64	{d16-d17}, [r3]
   141b0:	beq	141d0 <__mempcpy_chk@plt+0x304c>
   141b4:	str	r1, [sp]
   141b8:	mov	r3, sp
   141bc:	mov	r1, lr
   141c0:	mvn	r2, #0
   141c4:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   141c8:	mov	sp, fp
   141cc:	pop	{fp, pc}
   141d0:	bl	1116c <abort@plt>
   141d4:	push	{r4, sl, fp, lr}
   141d8:	add	fp, sp, #8
   141dc:	sub	sp, sp, #48	; 0x30
   141e0:	vmov.i32	q8, #0	; 0x00000000
   141e4:	mov	ip, r3
   141e8:	mov	r3, sp
   141ec:	mov	lr, #32
   141f0:	cmp	r1, #10
   141f4:	add	r4, r3, #16
   141f8:	vst1.64	{d16-d17}, [r3], lr
   141fc:	vst1.64	{d16-d17}, [r4]
   14200:	vst1.64	{d16-d17}, [r3]
   14204:	beq	14224 <__mempcpy_chk@plt+0x30a0>
   14208:	str	r1, [sp]
   1420c:	mov	r1, r2
   14210:	mov	r3, sp
   14214:	mov	r2, ip
   14218:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   1421c:	sub	sp, fp, #8
   14220:	pop	{r4, sl, fp, pc}
   14224:	bl	1116c <abort@plt>
   14228:	push	{fp, lr}
   1422c:	mov	fp, sp
   14230:	sub	sp, sp, #48	; 0x30
   14234:	vmov.i32	q8, #0	; 0x00000000
   14238:	mov	r3, sp
   1423c:	mov	ip, #32
   14240:	cmp	r0, #10
   14244:	add	r2, r3, #16
   14248:	vst1.64	{d16-d17}, [r3], ip
   1424c:	vst1.64	{d16-d17}, [r2]
   14250:	vst1.64	{d16-d17}, [r3]
   14254:	beq	14274 <__mempcpy_chk@plt+0x30f0>
   14258:	str	r0, [sp]
   1425c:	mov	r3, sp
   14260:	mov	r0, #0
   14264:	mvn	r2, #0
   14268:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   1426c:	mov	sp, fp
   14270:	pop	{fp, pc}
   14274:	bl	1116c <abort@plt>
   14278:	push	{fp, lr}
   1427c:	mov	fp, sp
   14280:	sub	sp, sp, #48	; 0x30
   14284:	vmov.i32	q8, #0	; 0x00000000
   14288:	mov	r3, sp
   1428c:	mov	ip, #32
   14290:	cmp	r0, #10
   14294:	add	lr, r3, #16
   14298:	vst1.64	{d16-d17}, [r3], ip
   1429c:	vst1.64	{d16-d17}, [lr]
   142a0:	vst1.64	{d16-d17}, [r3]
   142a4:	beq	142c0 <__mempcpy_chk@plt+0x313c>
   142a8:	str	r0, [sp]
   142ac:	mov	r3, sp
   142b0:	mov	r0, #0
   142b4:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   142b8:	mov	sp, fp
   142bc:	pop	{fp, pc}
   142c0:	bl	1116c <abort@plt>
   142c4:	push	{r4, sl, fp, lr}
   142c8:	add	fp, sp, #8
   142cc:	sub	sp, sp, #48	; 0x30
   142d0:	mov	lr, r0
   142d4:	movw	r0, #29080	; 0x7198
   142d8:	mov	ip, r1
   142dc:	mov	r1, #32
   142e0:	mov	r4, #1
   142e4:	movt	r0, #2
   142e8:	add	r3, r0, #16
   142ec:	vld1.64	{d16-d17}, [r0], r1
   142f0:	vld1.64	{d20-d21}, [r0]
   142f4:	vld1.64	{d18-d19}, [r3]
   142f8:	mov	r3, sp
   142fc:	add	r0, r3, #32
   14300:	add	r1, r3, #16
   14304:	vst1.64	{d20-d21}, [r0]
   14308:	mov	r0, #28
   1430c:	vst1.64	{d18-d19}, [r1]
   14310:	mov	r1, r3
   14314:	and	r0, r0, r2, lsr #3
   14318:	and	r2, r2, #31
   1431c:	vst1.64	{d16-d17}, [r1], r0
   14320:	ldr	r0, [r1, #8]
   14324:	bic	r4, r4, r0, lsr r2
   14328:	eor	r0, r0, r4, lsl r2
   1432c:	mov	r2, ip
   14330:	str	r0, [r1, #8]
   14334:	mov	r0, #0
   14338:	mov	r1, lr
   1433c:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   14340:	sub	sp, fp, #8
   14344:	pop	{r4, sl, fp, pc}
   14348:	push	{fp, lr}
   1434c:	mov	fp, sp
   14350:	sub	sp, sp, #48	; 0x30
   14354:	mov	ip, r0
   14358:	movw	r0, #29080	; 0x7198
   1435c:	mov	r2, #32
   14360:	movt	r0, #2
   14364:	add	r3, r0, #16
   14368:	vld1.64	{d16-d17}, [r0], r2
   1436c:	vld1.64	{d20-d21}, [r0]
   14370:	vld1.64	{d18-d19}, [r3]
   14374:	mov	r3, sp
   14378:	add	r0, r3, #32
   1437c:	add	r2, r3, #16
   14380:	vst1.64	{d20-d21}, [r0]
   14384:	mov	r0, #28
   14388:	vst1.64	{d18-d19}, [r2]
   1438c:	mov	r2, r3
   14390:	and	r0, r0, r1, lsr #3
   14394:	and	r1, r1, #31
   14398:	vst1.64	{d16-d17}, [r2], r0
   1439c:	mov	r0, #1
   143a0:	ldr	lr, [r2, #8]
   143a4:	bic	r0, r0, lr, lsr r1
   143a8:	eor	r0, lr, r0, lsl r1
   143ac:	mov	r1, ip
   143b0:	str	r0, [r2, #8]
   143b4:	mov	r0, #0
   143b8:	mvn	r2, #0
   143bc:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   143c0:	mov	sp, fp
   143c4:	pop	{fp, pc}
   143c8:	push	{fp, lr}
   143cc:	mov	fp, sp
   143d0:	sub	sp, sp, #48	; 0x30
   143d4:	mov	r1, r0
   143d8:	movw	r0, #29080	; 0x7198
   143dc:	mov	r3, #32
   143e0:	movt	r0, #2
   143e4:	add	r2, r0, #16
   143e8:	vld1.64	{d16-d17}, [r0], r3
   143ec:	mov	r3, sp
   143f0:	vld1.64	{d18-d19}, [r2]
   143f4:	vld1.64	{d20-d21}, [r0]
   143f8:	add	r2, r3, #16
   143fc:	add	r0, r3, #32
   14400:	vst1.64	{d18-d19}, [r2]
   14404:	vst1.64	{d20-d21}, [r0]
   14408:	mov	r0, #12
   1440c:	mov	r2, r3
   14410:	vst1.64	{d16-d17}, [r2], r0
   14414:	ldr	r0, [r2]
   14418:	orr	r0, r0, #67108864	; 0x4000000
   1441c:	str	r0, [r2]
   14420:	mov	r0, #0
   14424:	mvn	r2, #0
   14428:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   1442c:	mov	sp, fp
   14430:	pop	{fp, pc}
   14434:	push	{fp, lr}
   14438:	mov	fp, sp
   1443c:	sub	sp, sp, #48	; 0x30
   14440:	mov	ip, r1
   14444:	mov	r1, r0
   14448:	movw	r0, #29080	; 0x7198
   1444c:	mov	r2, #32
   14450:	movt	r0, #2
   14454:	add	r3, r0, #16
   14458:	vld1.64	{d16-d17}, [r0], r2
   1445c:	vld1.64	{d18-d19}, [r3]
   14460:	vld1.64	{d20-d21}, [r0]
   14464:	mov	r3, sp
   14468:	add	r2, r3, #16
   1446c:	add	r0, r3, #32
   14470:	vst1.64	{d18-d19}, [r2]
   14474:	vst1.64	{d20-d21}, [r0]
   14478:	mov	r0, #12
   1447c:	mov	r2, r3
   14480:	vst1.64	{d16-d17}, [r2], r0
   14484:	ldr	r0, [r2]
   14488:	orr	r0, r0, #67108864	; 0x4000000
   1448c:	str	r0, [r2]
   14490:	mov	r0, #0
   14494:	mov	r2, ip
   14498:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   1449c:	mov	sp, fp
   144a0:	pop	{fp, pc}
   144a4:	push	{r4, sl, fp, lr}
   144a8:	add	fp, sp, #8
   144ac:	sub	sp, sp, #96	; 0x60
   144b0:	vmov.i32	q8, #0	; 0x00000000
   144b4:	mov	ip, r2
   144b8:	mov	r2, sp
   144bc:	mov	r4, #28
   144c0:	cmp	r1, #10
   144c4:	mov	r3, r2
   144c8:	add	lr, r2, #16
   144cc:	vst1.64	{d16-d17}, [r3], r4
   144d0:	vst1.64	{d16-d17}, [lr]
   144d4:	vst1.32	{d16-d17}, [r3]
   144d8:	beq	14528 <__mempcpy_chk@plt+0x33a4>
   144dc:	vld1.64	{d16-d17}, [r2], r4
   144e0:	vld1.64	{d18-d19}, [lr]
   144e4:	add	r3, sp, #48	; 0x30
   144e8:	vld1.32	{d20-d21}, [r2]
   144ec:	add	r2, r3, #20
   144f0:	add	r4, r3, #4
   144f4:	vst1.32	{d18-d19}, [r2]
   144f8:	add	r2, r3, #32
   144fc:	vst1.32	{d16-d17}, [r4]
   14500:	vst1.32	{d20-d21}, [r2]
   14504:	str	r1, [sp, #48]	; 0x30
   14508:	mvn	r2, #0
   1450c:	ldr	r1, [sp, #60]	; 0x3c
   14510:	orr	r1, r1, #67108864	; 0x4000000
   14514:	str	r1, [sp, #60]	; 0x3c
   14518:	mov	r1, ip
   1451c:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   14520:	sub	sp, fp, #8
   14524:	pop	{r4, sl, fp, pc}
   14528:	bl	1116c <abort@plt>
   1452c:	push	{r4, r5, r6, sl, fp, lr}
   14530:	add	fp, sp, #16
   14534:	sub	sp, sp, #48	; 0x30
   14538:	mov	ip, r3
   1453c:	movw	r3, #29080	; 0x7198
   14540:	mov	r6, #32
   14544:	cmp	r1, #0
   14548:	mov	r4, sp
   1454c:	movt	r3, #2
   14550:	cmpne	r2, #0
   14554:	add	r5, r4, #16
   14558:	add	lr, r3, #16
   1455c:	vld1.64	{d16-d17}, [r3], r6
   14560:	vld1.64	{d18-d19}, [lr]
   14564:	vld1.64	{d20-d21}, [r3]
   14568:	mov	r3, #10
   1456c:	vst1.64	{d16-d17}, [r4], r6
   14570:	vst1.64	{d18-d19}, [r5]
   14574:	vst1.64	{d20-d21}, [r4]
   14578:	str	r3, [sp]
   1457c:	bne	14584 <__mempcpy_chk@plt+0x3400>
   14580:	bl	1116c <abort@plt>
   14584:	str	r2, [sp, #44]	; 0x2c
   14588:	str	r1, [sp, #40]	; 0x28
   1458c:	mov	r3, sp
   14590:	mov	r1, ip
   14594:	mvn	r2, #0
   14598:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   1459c:	sub	sp, fp, #16
   145a0:	pop	{r4, r5, r6, sl, fp, pc}
   145a4:	push	{r4, r5, r6, sl, fp, lr}
   145a8:	add	fp, sp, #16
   145ac:	sub	sp, sp, #48	; 0x30
   145b0:	mov	lr, r3
   145b4:	movw	r3, #29080	; 0x7198
   145b8:	mov	r6, #32
   145bc:	cmp	r1, #0
   145c0:	mov	r4, sp
   145c4:	movt	r3, #2
   145c8:	cmpne	r2, #0
   145cc:	add	r5, r4, #16
   145d0:	add	ip, r3, #16
   145d4:	vld1.64	{d16-d17}, [r3], r6
   145d8:	vld1.64	{d18-d19}, [ip]
   145dc:	vld1.64	{d20-d21}, [r3]
   145e0:	mov	r3, #10
   145e4:	vst1.64	{d16-d17}, [r4], r6
   145e8:	vst1.64	{d18-d19}, [r5]
   145ec:	vst1.64	{d20-d21}, [r4]
   145f0:	str	r3, [sp]
   145f4:	bne	145fc <__mempcpy_chk@plt+0x3478>
   145f8:	bl	1116c <abort@plt>
   145fc:	ldr	ip, [fp, #8]
   14600:	str	r2, [sp, #44]	; 0x2c
   14604:	str	r1, [sp, #40]	; 0x28
   14608:	mov	r3, sp
   1460c:	mov	r1, lr
   14610:	mov	r2, ip
   14614:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   14618:	sub	sp, fp, #16
   1461c:	pop	{r4, r5, r6, sl, fp, pc}
   14620:	push	{r4, sl, fp, lr}
   14624:	add	fp, sp, #8
   14628:	sub	sp, sp, #48	; 0x30
   1462c:	movw	r3, #29080	; 0x7198
   14630:	mov	lr, #32
   14634:	mov	ip, r2
   14638:	cmp	r0, #0
   1463c:	movt	r3, #2
   14640:	cmpne	r1, #0
   14644:	add	r2, r3, #16
   14648:	vld1.64	{d16-d17}, [r3], lr
   1464c:	vld1.64	{d20-d21}, [r3]
   14650:	vld1.64	{d18-d19}, [r2]
   14654:	mov	r2, sp
   14658:	add	r4, r2, #16
   1465c:	vst1.64	{d16-d17}, [r2], lr
   14660:	vst1.64	{d20-d21}, [r2]
   14664:	mov	r2, #10
   14668:	vst1.64	{d18-d19}, [r4]
   1466c:	str	r2, [sp]
   14670:	bne	14678 <__mempcpy_chk@plt+0x34f4>
   14674:	bl	1116c <abort@plt>
   14678:	str	r1, [sp, #44]	; 0x2c
   1467c:	str	r0, [sp, #40]	; 0x28
   14680:	mov	r3, sp
   14684:	mov	r0, #0
   14688:	mov	r1, ip
   1468c:	mvn	r2, #0
   14690:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   14694:	sub	sp, fp, #8
   14698:	pop	{r4, sl, fp, pc}
   1469c:	push	{r4, r5, fp, lr}
   146a0:	add	fp, sp, #8
   146a4:	sub	sp, sp, #48	; 0x30
   146a8:	mov	ip, r3
   146ac:	movw	r3, #29080	; 0x7198
   146b0:	mov	r4, #32
   146b4:	mov	lr, r2
   146b8:	cmp	r0, #0
   146bc:	movt	r3, #2
   146c0:	cmpne	r1, #0
   146c4:	add	r2, r3, #16
   146c8:	vld1.64	{d16-d17}, [r3], r4
   146cc:	vld1.64	{d20-d21}, [r3]
   146d0:	vld1.64	{d18-d19}, [r2]
   146d4:	mov	r2, sp
   146d8:	add	r5, r2, #16
   146dc:	vst1.64	{d16-d17}, [r2], r4
   146e0:	vst1.64	{d20-d21}, [r2]
   146e4:	mov	r2, #10
   146e8:	vst1.64	{d18-d19}, [r5]
   146ec:	str	r2, [sp]
   146f0:	bne	146f8 <__mempcpy_chk@plt+0x3574>
   146f4:	bl	1116c <abort@plt>
   146f8:	str	r1, [sp, #44]	; 0x2c
   146fc:	str	r0, [sp, #40]	; 0x28
   14700:	mov	r3, sp
   14704:	mov	r0, #0
   14708:	mov	r1, lr
   1470c:	mov	r2, ip
   14710:	bl	13fac <__mempcpy_chk@plt+0x2e28>
   14714:	sub	sp, fp, #8
   14718:	pop	{r4, r5, fp, pc}
   1471c:	movw	r3, #28952	; 0x7118
   14720:	movt	r3, #2
   14724:	b	13fac <__mempcpy_chk@plt+0x2e28>
   14728:	movw	r3, #28952	; 0x7118
   1472c:	mov	r2, r1
   14730:	mov	r1, r0
   14734:	mov	r0, #0
   14738:	movt	r3, #2
   1473c:	b	13fac <__mempcpy_chk@plt+0x2e28>
   14740:	movw	r3, #28952	; 0x7118
   14744:	mvn	r2, #0
   14748:	movt	r3, #2
   1474c:	b	13fac <__mempcpy_chk@plt+0x2e28>
   14750:	movw	r3, #28952	; 0x7118
   14754:	mov	r1, r0
   14758:	mov	r0, #0
   1475c:	mvn	r2, #0
   14760:	movt	r3, #2
   14764:	b	13fac <__mempcpy_chk@plt+0x2e28>
   14768:	push	{r4, r5, fp, lr}
   1476c:	add	fp, sp, #8
   14770:	mov	r5, r0
   14774:	mov	r4, r1
   14778:	mov	r0, #0
   1477c:	mov	r2, #5
   14780:	mov	r1, r5
   14784:	bl	10f98 <dcgettext@plt>
   14788:	cmp	r0, r5
   1478c:	popne	{r4, r5, fp, pc}
   14790:	bl	15914 <__mempcpy_chk@plt+0x4790>
   14794:	ldrb	r1, [r0]
   14798:	and	r1, r1, #223	; 0xdf
   1479c:	cmp	r1, #71	; 0x47
   147a0:	beq	14808 <__mempcpy_chk@plt+0x3684>
   147a4:	cmp	r1, #85	; 0x55
   147a8:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   147ac:	ldrb	r1, [r0, #1]
   147b0:	and	r1, r1, #223	; 0xdf
   147b4:	cmp	r1, #84	; 0x54
   147b8:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   147bc:	ldrb	r1, [r0, #2]
   147c0:	and	r1, r1, #223	; 0xdf
   147c4:	cmp	r1, #70	; 0x46
   147c8:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   147cc:	ldrb	r1, [r0, #3]
   147d0:	cmp	r1, #45	; 0x2d
   147d4:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   147d8:	ldrb	r1, [r0, #4]
   147dc:	cmp	r1, #56	; 0x38
   147e0:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   147e4:	ldrb	r0, [r0, #5]
   147e8:	cmp	r0, #0
   147ec:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   147f0:	ldrb	r1, [r5]
   147f4:	movw	r2, #25980	; 0x657c
   147f8:	movw	r0, #25984	; 0x6580
   147fc:	movt	r2, #1
   14800:	movt	r0, #1
   14804:	b	14890 <__mempcpy_chk@plt+0x370c>
   14808:	ldrb	r1, [r0, #1]
   1480c:	and	r1, r1, #223	; 0xdf
   14810:	cmp	r1, #66	; 0x42
   14814:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   14818:	ldrb	r1, [r0, #2]
   1481c:	cmp	r1, #49	; 0x31
   14820:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   14824:	ldrb	r1, [r0, #3]
   14828:	cmp	r1, #56	; 0x38
   1482c:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   14830:	ldrb	r1, [r0, #4]
   14834:	cmp	r1, #48	; 0x30
   14838:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   1483c:	ldrb	r1, [r0, #5]
   14840:	cmp	r1, #51	; 0x33
   14844:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   14848:	ldrb	r1, [r0, #6]
   1484c:	cmp	r1, #48	; 0x30
   14850:	bne	14860 <__mempcpy_chk@plt+0x36dc>
   14854:	ldrb	r0, [r0, #7]
   14858:	cmp	r0, #0
   1485c:	beq	1487c <__mempcpy_chk@plt+0x36f8>
   14860:	movw	r1, #25976	; 0x6578
   14864:	movw	r0, #25399	; 0x6337
   14868:	cmp	r4, #9
   1486c:	movt	r1, #1
   14870:	movt	r0, #1
   14874:	moveq	r0, r1
   14878:	pop	{r4, r5, fp, pc}
   1487c:	ldrb	r1, [r5]
   14880:	movw	r2, #25988	; 0x6584
   14884:	movw	r0, #25992	; 0x6588
   14888:	movt	r2, #1
   1488c:	movt	r0, #1
   14890:	cmp	r1, #96	; 0x60
   14894:	moveq	r0, r2
   14898:	pop	{r4, r5, fp, pc}
   1489c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148a0:	add	fp, sp, #24
   148a4:	sub	sp, sp, #32
   148a8:	ldr	r6, [fp, #12]
   148ac:	ldr	r7, [fp, #8]
   148b0:	mov	r4, r2
   148b4:	mov	r8, r0
   148b8:	cmp	r1, #0
   148bc:	beq	148e4 <__mempcpy_chk@plt+0x3760>
   148c0:	movw	r2, #26080	; 0x65e0
   148c4:	mov	r5, r1
   148c8:	str	r3, [sp, #4]
   148cc:	str	r4, [sp]
   148d0:	mov	r0, r8
   148d4:	mov	r1, #1
   148d8:	movt	r2, #1
   148dc:	mov	r3, r5
   148e0:	b	148fc <__mempcpy_chk@plt+0x3778>
   148e4:	movw	r2, #26092	; 0x65ec
   148e8:	str	r3, [sp]
   148ec:	mov	r0, r8
   148f0:	mov	r1, #1
   148f4:	mov	r3, r4
   148f8:	movt	r2, #1
   148fc:	bl	110e8 <__fprintf_chk@plt>
   14900:	movw	r1, #26099	; 0x65f3
   14904:	mov	r0, #0
   14908:	mov	r2, #5
   1490c:	movt	r1, #1
   14910:	bl	10f98 <dcgettext@plt>
   14914:	movw	r2, #26817	; 0x68c1
   14918:	mov	r3, r0
   1491c:	movw	r0, #2022	; 0x7e6
   14920:	mov	r1, #1
   14924:	movt	r2, #1
   14928:	str	r0, [sp]
   1492c:	mov	r0, r8
   14930:	bl	110e8 <__fprintf_chk@plt>
   14934:	movw	r4, #25320	; 0x62e8
   14938:	mov	r1, r8
   1493c:	movt	r4, #1
   14940:	mov	r0, r4
   14944:	bl	10ef0 <fputs_unlocked@plt>
   14948:	movw	r1, #26103	; 0x65f7
   1494c:	mov	r0, #0
   14950:	mov	r2, #5
   14954:	movt	r1, #1
   14958:	bl	10f98 <dcgettext@plt>
   1495c:	movw	r3, #26274	; 0x66a2
   14960:	mov	r2, r0
   14964:	mov	r0, r8
   14968:	mov	r1, #1
   1496c:	movt	r3, #1
   14970:	bl	110e8 <__fprintf_chk@plt>
   14974:	mov	r0, r4
   14978:	mov	r1, r8
   1497c:	bl	10ef0 <fputs_unlocked@plt>
   14980:	cmp	r6, #9
   14984:	bhi	149c0 <__mempcpy_chk@plt+0x383c>
   14988:	add	r0, pc, #0
   1498c:	ldr	pc, [r0, r6, lsl #2]
   14990:			; <UNDEFINED> instruction: 0x000149b8
   14994:	andeq	r4, r1, ip, asr #19
   14998:	strdeq	r4, [r1], -ip
   1499c:	andeq	r4, r1, r4, lsr #20
   149a0:	andeq	r4, r1, ip, asr #20
   149a4:	andeq	r4, r1, r4, ror sl
   149a8:	muleq	r1, ip, sl
   149ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   149b0:	andeq	r4, r1, r4, ror fp
   149b4:	andeq	r4, r1, ip, lsl fp
   149b8:	sub	sp, fp, #24
   149bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149c0:	movw	r1, #26627	; 0x6803
   149c4:	movt	r1, #1
   149c8:	b	14b24 <__mempcpy_chk@plt+0x39a0>
   149cc:	movw	r1, #26308	; 0x66c4
   149d0:	mov	r0, #0
   149d4:	mov	r2, #5
   149d8:	movt	r1, #1
   149dc:	bl	10f98 <dcgettext@plt>
   149e0:	ldr	r3, [r7]
   149e4:	mov	r2, r0
   149e8:	mov	r0, r8
   149ec:	mov	r1, #1
   149f0:	sub	sp, fp, #24
   149f4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   149f8:	b	110e8 <__fprintf_chk@plt>
   149fc:	movw	r1, #26324	; 0x66d4
   14a00:	mov	r0, #0
   14a04:	mov	r2, #5
   14a08:	movt	r1, #1
   14a0c:	bl	10f98 <dcgettext@plt>
   14a10:	mov	r2, r0
   14a14:	ldr	r3, [r7]
   14a18:	ldr	r0, [r7, #4]
   14a1c:	str	r0, [sp]
   14a20:	b	14b10 <__mempcpy_chk@plt+0x398c>
   14a24:	movw	r1, #26347	; 0x66eb
   14a28:	mov	r0, #0
   14a2c:	mov	r2, #5
   14a30:	movt	r1, #1
   14a34:	bl	10f98 <dcgettext@plt>
   14a38:	mov	r2, r0
   14a3c:	ldr	r3, [r7]
   14a40:	ldmib	r7, {r0, r1}
   14a44:	stm	sp, {r0, r1}
   14a48:	b	14b10 <__mempcpy_chk@plt+0x398c>
   14a4c:	movw	r1, #26375	; 0x6707
   14a50:	mov	r0, #0
   14a54:	mov	r2, #5
   14a58:	movt	r1, #1
   14a5c:	bl	10f98 <dcgettext@plt>
   14a60:	ldr	r3, [r7]
   14a64:	mov	r2, r0
   14a68:	ldmib	r7, {r0, r1, r7}
   14a6c:	stm	sp, {r0, r1, r7}
   14a70:	b	14b10 <__mempcpy_chk@plt+0x398c>
   14a74:	movw	r1, #26407	; 0x6727
   14a78:	mov	r0, #0
   14a7c:	mov	r2, #5
   14a80:	movt	r1, #1
   14a84:	bl	10f98 <dcgettext@plt>
   14a88:	ldr	r3, [r7]
   14a8c:	mov	r2, r0
   14a90:	ldmib	r7, {r0, r1, r6, r7}
   14a94:	stm	sp, {r0, r1, r6, r7}
   14a98:	b	14b10 <__mempcpy_chk@plt+0x398c>
   14a9c:	movw	r1, #26443	; 0x674b
   14aa0:	mov	r0, #0
   14aa4:	mov	r2, #5
   14aa8:	movt	r1, #1
   14aac:	bl	10f98 <dcgettext@plt>
   14ab0:	mov	r2, r0
   14ab4:	ldr	r3, [r7]
   14ab8:	ldmib	r7, {r0, r1, r6}
   14abc:	ldr	r5, [r7, #16]
   14ac0:	ldr	r7, [r7, #20]
   14ac4:	stm	sp, {r0, r1, r6}
   14ac8:	str	r5, [sp, #12]
   14acc:	str	r7, [sp, #16]
   14ad0:	b	14b10 <__mempcpy_chk@plt+0x398c>
   14ad4:	movw	r1, #26483	; 0x6773
   14ad8:	mov	r0, #0
   14adc:	mov	r2, #5
   14ae0:	movt	r1, #1
   14ae4:	bl	10f98 <dcgettext@plt>
   14ae8:	mov	r2, r0
   14aec:	ldr	r3, [r7]
   14af0:	ldmib	r7, {r0, r1, r6}
   14af4:	ldr	r5, [r7, #16]
   14af8:	ldr	r4, [r7, #20]
   14afc:	ldr	r7, [r7, #24]
   14b00:	stm	sp, {r0, r1, r6}
   14b04:	str	r5, [sp, #12]
   14b08:	str	r4, [sp, #16]
   14b0c:	str	r7, [sp, #20]
   14b10:	mov	r0, r8
   14b14:	mov	r1, #1
   14b18:	b	14bc4 <__mempcpy_chk@plt+0x3a40>
   14b1c:	movw	r1, #26575	; 0x67cf
   14b20:	movt	r1, #1
   14b24:	mov	r0, #0
   14b28:	mov	r2, #5
   14b2c:	bl	10f98 <dcgettext@plt>
   14b30:	mov	ip, r0
   14b34:	ldr	r3, [r7]
   14b38:	ldr	r0, [r7, #4]
   14b3c:	ldr	r1, [r7, #8]
   14b40:	ldr	r6, [r7, #12]
   14b44:	ldr	r5, [r7, #16]
   14b48:	ldr	r4, [r7, #20]
   14b4c:	ldr	r2, [r7, #24]
   14b50:	ldr	lr, [r7, #28]
   14b54:	ldr	r7, [r7, #32]
   14b58:	stm	sp, {r0, r1, r6}
   14b5c:	str	r5, [sp, #12]
   14b60:	str	r4, [sp, #16]
   14b64:	str	r2, [sp, #20]
   14b68:	str	lr, [sp, #24]
   14b6c:	str	r7, [sp, #28]
   14b70:	b	14bb8 <__mempcpy_chk@plt+0x3a34>
   14b74:	movw	r1, #26527	; 0x679f
   14b78:	mov	r0, #0
   14b7c:	mov	r2, #5
   14b80:	movt	r1, #1
   14b84:	bl	10f98 <dcgettext@plt>
   14b88:	mov	ip, r0
   14b8c:	ldr	r3, [r7]
   14b90:	ldmib	r7, {r0, r1, r6}
   14b94:	ldr	r5, [r7, #16]
   14b98:	ldr	r4, [r7, #20]
   14b9c:	ldr	r2, [r7, #24]
   14ba0:	ldr	r7, [r7, #28]
   14ba4:	stm	sp, {r0, r1, r6}
   14ba8:	str	r5, [sp, #12]
   14bac:	str	r4, [sp, #16]
   14bb0:	str	r2, [sp, #20]
   14bb4:	str	r7, [sp, #24]
   14bb8:	mov	r0, r8
   14bbc:	mov	r1, #1
   14bc0:	mov	r2, ip
   14bc4:	bl	110e8 <__fprintf_chk@plt>
   14bc8:	sub	sp, fp, #24
   14bcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14bd0:	push	{r4, sl, fp, lr}
   14bd4:	add	fp, sp, #8
   14bd8:	sub	sp, sp, #8
   14bdc:	ldr	ip, [fp, #8]
   14be0:	mov	lr, #0
   14be4:	ldr	r4, [ip, lr, lsl #2]
   14be8:	add	lr, lr, #1
   14bec:	cmp	r4, #0
   14bf0:	bne	14be4 <__mempcpy_chk@plt+0x3a60>
   14bf4:	sub	r4, lr, #1
   14bf8:	str	ip, [sp]
   14bfc:	str	r4, [sp, #4]
   14c00:	bl	1489c <__mempcpy_chk@plt+0x3718>
   14c04:	sub	sp, fp, #8
   14c08:	pop	{r4, sl, fp, pc}
   14c0c:	push	{fp, lr}
   14c10:	mov	fp, sp
   14c14:	sub	sp, sp, #48	; 0x30
   14c18:	ldr	ip, [fp, #8]
   14c1c:	ldr	lr, [ip]
   14c20:	cmp	lr, #0
   14c24:	str	lr, [sp, #8]
   14c28:	beq	14cc4 <__mempcpy_chk@plt+0x3b40>
   14c2c:	ldr	lr, [ip, #4]
   14c30:	cmp	lr, #0
   14c34:	str	lr, [sp, #12]
   14c38:	beq	14ccc <__mempcpy_chk@plt+0x3b48>
   14c3c:	ldr	lr, [ip, #8]
   14c40:	cmp	lr, #0
   14c44:	str	lr, [sp, #16]
   14c48:	beq	14cd4 <__mempcpy_chk@plt+0x3b50>
   14c4c:	ldr	lr, [ip, #12]
   14c50:	cmp	lr, #0
   14c54:	str	lr, [sp, #20]
   14c58:	beq	14cdc <__mempcpy_chk@plt+0x3b58>
   14c5c:	ldr	lr, [ip, #16]
   14c60:	cmp	lr, #0
   14c64:	str	lr, [sp, #24]
   14c68:	beq	14ce4 <__mempcpy_chk@plt+0x3b60>
   14c6c:	ldr	lr, [ip, #20]
   14c70:	cmp	lr, #0
   14c74:	str	lr, [sp, #28]
   14c78:	beq	14cec <__mempcpy_chk@plt+0x3b68>
   14c7c:	ldr	lr, [ip, #24]
   14c80:	cmp	lr, #0
   14c84:	str	lr, [sp, #32]
   14c88:	beq	14cf4 <__mempcpy_chk@plt+0x3b70>
   14c8c:	ldr	lr, [ip, #28]
   14c90:	cmp	lr, #0
   14c94:	str	lr, [sp, #36]	; 0x24
   14c98:	beq	14cfc <__mempcpy_chk@plt+0x3b78>
   14c9c:	ldr	lr, [ip, #32]
   14ca0:	cmp	lr, #0
   14ca4:	str	lr, [sp, #40]	; 0x28
   14ca8:	beq	14d04 <__mempcpy_chk@plt+0x3b80>
   14cac:	ldr	lr, [ip, #36]	; 0x24
   14cb0:	mov	ip, #10
   14cb4:	cmp	lr, #0
   14cb8:	str	lr, [sp, #44]	; 0x2c
   14cbc:	movweq	ip, #9
   14cc0:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14cc4:	mov	ip, #0
   14cc8:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14ccc:	mov	ip, #1
   14cd0:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14cd4:	mov	ip, #2
   14cd8:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14cdc:	mov	ip, #3
   14ce0:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14ce4:	mov	ip, #4
   14ce8:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14cec:	mov	ip, #5
   14cf0:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14cf4:	mov	ip, #6
   14cf8:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14cfc:	mov	ip, #7
   14d00:	b	14d08 <__mempcpy_chk@plt+0x3b84>
   14d04:	mov	ip, #8
   14d08:	add	lr, sp, #8
   14d0c:	str	ip, [sp, #4]
   14d10:	str	lr, [sp]
   14d14:	bl	1489c <__mempcpy_chk@plt+0x3718>
   14d18:	mov	sp, fp
   14d1c:	pop	{fp, pc}
   14d20:	push	{fp, lr}
   14d24:	mov	fp, sp
   14d28:	sub	sp, sp, #56	; 0x38
   14d2c:	add	ip, fp, #8
   14d30:	str	ip, [sp, #12]
   14d34:	ldr	lr, [fp, #8]
   14d38:	cmp	lr, #0
   14d3c:	str	lr, [sp, #16]
   14d40:	beq	14ddc <__mempcpy_chk@plt+0x3c58>
   14d44:	ldr	lr, [ip, #4]
   14d48:	cmp	lr, #0
   14d4c:	str	lr, [sp, #20]
   14d50:	beq	14de4 <__mempcpy_chk@plt+0x3c60>
   14d54:	ldr	lr, [ip, #8]
   14d58:	cmp	lr, #0
   14d5c:	str	lr, [sp, #24]
   14d60:	beq	14dec <__mempcpy_chk@plt+0x3c68>
   14d64:	ldr	lr, [ip, #12]
   14d68:	cmp	lr, #0
   14d6c:	str	lr, [sp, #28]
   14d70:	beq	14df4 <__mempcpy_chk@plt+0x3c70>
   14d74:	ldr	lr, [ip, #16]
   14d78:	cmp	lr, #0
   14d7c:	str	lr, [sp, #32]
   14d80:	beq	14dfc <__mempcpy_chk@plt+0x3c78>
   14d84:	ldr	lr, [ip, #20]
   14d88:	cmp	lr, #0
   14d8c:	str	lr, [sp, #36]	; 0x24
   14d90:	beq	14e04 <__mempcpy_chk@plt+0x3c80>
   14d94:	ldr	lr, [ip, #24]
   14d98:	cmp	lr, #0
   14d9c:	str	lr, [sp, #40]	; 0x28
   14da0:	beq	14e0c <__mempcpy_chk@plt+0x3c88>
   14da4:	ldr	lr, [ip, #28]
   14da8:	cmp	lr, #0
   14dac:	str	lr, [sp, #44]	; 0x2c
   14db0:	beq	14e14 <__mempcpy_chk@plt+0x3c90>
   14db4:	ldr	lr, [ip, #32]
   14db8:	cmp	lr, #0
   14dbc:	str	lr, [sp, #48]	; 0x30
   14dc0:	beq	14e1c <__mempcpy_chk@plt+0x3c98>
   14dc4:	ldr	lr, [ip, #36]	; 0x24
   14dc8:	mov	ip, #10
   14dcc:	cmp	lr, #0
   14dd0:	str	lr, [sp, #52]	; 0x34
   14dd4:	movweq	ip, #9
   14dd8:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14ddc:	mov	ip, #0
   14de0:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14de4:	mov	ip, #1
   14de8:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14dec:	mov	ip, #2
   14df0:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14df4:	mov	ip, #3
   14df8:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14dfc:	mov	ip, #4
   14e00:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14e04:	mov	ip, #5
   14e08:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14e0c:	mov	ip, #6
   14e10:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14e14:	mov	ip, #7
   14e18:	b	14e20 <__mempcpy_chk@plt+0x3c9c>
   14e1c:	mov	ip, #8
   14e20:	add	lr, sp, #16
   14e24:	str	ip, [sp, #4]
   14e28:	str	lr, [sp]
   14e2c:	bl	1489c <__mempcpy_chk@plt+0x3718>
   14e30:	mov	sp, fp
   14e34:	pop	{fp, pc}
   14e38:	push	{fp, lr}
   14e3c:	mov	fp, sp
   14e40:	movw	r0, #29020	; 0x715c
   14e44:	movt	r0, #2
   14e48:	ldr	r1, [r0]
   14e4c:	movw	r0, #25320	; 0x62e8
   14e50:	movt	r0, #1
   14e54:	bl	10ef0 <fputs_unlocked@plt>
   14e58:	movw	r1, #26687	; 0x683f
   14e5c:	mov	r0, #0
   14e60:	mov	r2, #5
   14e64:	movt	r1, #1
   14e68:	bl	10f98 <dcgettext@plt>
   14e6c:	movw	r2, #26707	; 0x6853
   14e70:	mov	r1, r0
   14e74:	mov	r0, #1
   14e78:	movt	r2, #1
   14e7c:	bl	110d0 <__printf_chk@plt>
   14e80:	movw	r1, #26729	; 0x6869
   14e84:	mov	r0, #0
   14e88:	mov	r2, #5
   14e8c:	movt	r1, #1
   14e90:	bl	10f98 <dcgettext@plt>
   14e94:	movw	r2, #24760	; 0x60b8
   14e98:	movw	r3, #25129	; 0x6229
   14e9c:	mov	r1, r0
   14ea0:	mov	r0, #1
   14ea4:	movt	r2, #1
   14ea8:	movt	r3, #1
   14eac:	bl	110d0 <__printf_chk@plt>
   14eb0:	movw	r1, #26749	; 0x687d
   14eb4:	mov	r0, #0
   14eb8:	mov	r2, #5
   14ebc:	movt	r1, #1
   14ec0:	bl	10f98 <dcgettext@plt>
   14ec4:	movw	r2, #26788	; 0x68a4
   14ec8:	mov	r1, r0
   14ecc:	mov	r0, #1
   14ed0:	movt	r2, #1
   14ed4:	pop	{fp, lr}
   14ed8:	b	110d0 <__printf_chk@plt>
   14edc:	push	{r4, r5, r6, sl, fp, lr}
   14ee0:	add	fp, sp, #16
   14ee4:	mov	r4, r2
   14ee8:	mov	r5, r1
   14eec:	mov	r6, r0
   14ef0:	bl	159b0 <__mempcpy_chk@plt+0x482c>
   14ef4:	cmp	r0, #0
   14ef8:	popne	{r4, r5, r6, sl, fp, pc}
   14efc:	cmp	r6, #0
   14f00:	beq	14f14 <__mempcpy_chk@plt+0x3d90>
   14f04:	cmp	r5, #0
   14f08:	cmpne	r4, #0
   14f0c:	bne	14f14 <__mempcpy_chk@plt+0x3d90>
   14f10:	pop	{r4, r5, r6, sl, fp, pc}
   14f14:	bl	15490 <__mempcpy_chk@plt+0x430c>
   14f18:	push	{r4, r5, r6, sl, fp, lr}
   14f1c:	add	fp, sp, #16
   14f20:	mov	r4, r2
   14f24:	mov	r5, r1
   14f28:	mov	r6, r0
   14f2c:	bl	159b0 <__mempcpy_chk@plt+0x482c>
   14f30:	cmp	r0, #0
   14f34:	popne	{r4, r5, r6, sl, fp, pc}
   14f38:	cmp	r6, #0
   14f3c:	beq	14f50 <__mempcpy_chk@plt+0x3dcc>
   14f40:	cmp	r5, #0
   14f44:	cmpne	r4, #0
   14f48:	bne	14f50 <__mempcpy_chk@plt+0x3dcc>
   14f4c:	pop	{r4, r5, r6, sl, fp, pc}
   14f50:	bl	15490 <__mempcpy_chk@plt+0x430c>
   14f54:	push	{fp, lr}
   14f58:	mov	fp, sp
   14f5c:	bl	155c0 <__mempcpy_chk@plt+0x443c>
   14f60:	cmp	r0, #0
   14f64:	popne	{fp, pc}
   14f68:	bl	15490 <__mempcpy_chk@plt+0x430c>
   14f6c:	push	{fp, lr}
   14f70:	mov	fp, sp
   14f74:	bl	155c0 <__mempcpy_chk@plt+0x443c>
   14f78:	cmp	r0, #0
   14f7c:	popne	{fp, pc}
   14f80:	bl	15490 <__mempcpy_chk@plt+0x430c>
   14f84:	push	{fp, lr}
   14f88:	mov	fp, sp
   14f8c:	bl	155c0 <__mempcpy_chk@plt+0x443c>
   14f90:	cmp	r0, #0
   14f94:	popne	{fp, pc}
   14f98:	bl	15490 <__mempcpy_chk@plt+0x430c>
   14f9c:	push	{r4, r5, fp, lr}
   14fa0:	add	fp, sp, #8
   14fa4:	mov	r4, r1
   14fa8:	mov	r5, r0
   14fac:	bl	155f0 <__mempcpy_chk@plt+0x446c>
   14fb0:	cmp	r0, #0
   14fb4:	popne	{r4, r5, fp, pc}
   14fb8:	cmp	r5, #0
   14fbc:	beq	14fcc <__mempcpy_chk@plt+0x3e48>
   14fc0:	cmp	r4, #0
   14fc4:	bne	14fcc <__mempcpy_chk@plt+0x3e48>
   14fc8:	pop	{r4, r5, fp, pc}
   14fcc:	bl	15490 <__mempcpy_chk@plt+0x430c>
   14fd0:	push	{fp, lr}
   14fd4:	mov	fp, sp
   14fd8:	cmp	r1, #0
   14fdc:	orreq	r1, r1, #1
   14fe0:	bl	155f0 <__mempcpy_chk@plt+0x446c>
   14fe4:	cmp	r0, #0
   14fe8:	popne	{fp, pc}
   14fec:	bl	15490 <__mempcpy_chk@plt+0x430c>
   14ff0:	push	{fp, lr}
   14ff4:	mov	fp, sp
   14ff8:	clz	r3, r2
   14ffc:	lsr	ip, r3, #5
   15000:	clz	r3, r1
   15004:	lsr	r3, r3, #5
   15008:	orrs	r3, r3, ip
   1500c:	movwne	r1, #1
   15010:	movwne	r2, #1
   15014:	bl	159b0 <__mempcpy_chk@plt+0x482c>
   15018:	cmp	r0, #0
   1501c:	popne	{fp, pc}
   15020:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15024:	push	{fp, lr}
   15028:	mov	fp, sp
   1502c:	mov	r2, r1
   15030:	mov	r1, r0
   15034:	mov	r0, #0
   15038:	bl	159b0 <__mempcpy_chk@plt+0x482c>
   1503c:	cmp	r0, #0
   15040:	popne	{fp, pc}
   15044:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15048:	push	{fp, lr}
   1504c:	mov	fp, sp
   15050:	mov	r2, r1
   15054:	mov	r1, r0
   15058:	clz	r0, r2
   1505c:	clz	r3, r1
   15060:	lsr	r0, r0, #5
   15064:	lsr	r3, r3, #5
   15068:	orrs	r0, r3, r0
   1506c:	mov	r0, #0
   15070:	movwne	r1, #1
   15074:	movwne	r2, #1
   15078:	bl	159b0 <__mempcpy_chk@plt+0x482c>
   1507c:	cmp	r0, #0
   15080:	popne	{fp, pc}
   15084:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15088:	push	{r4, r5, r6, sl, fp, lr}
   1508c:	add	fp, sp, #16
   15090:	ldr	r5, [r1]
   15094:	mov	r4, r1
   15098:	mov	r6, r0
   1509c:	cmp	r0, #0
   150a0:	beq	150b8 <__mempcpy_chk@plt+0x3f34>
   150a4:	mov	r0, #1
   150a8:	add	r0, r0, r5, lsr #1
   150ac:	adds	r5, r5, r0
   150b0:	bcc	150c0 <__mempcpy_chk@plt+0x3f3c>
   150b4:	b	150fc <__mempcpy_chk@plt+0x3f78>
   150b8:	cmp	r5, #0
   150bc:	movweq	r5, #64	; 0x40
   150c0:	mov	r0, r6
   150c4:	mov	r1, r5
   150c8:	mov	r2, #1
   150cc:	bl	159b0 <__mempcpy_chk@plt+0x482c>
   150d0:	cmp	r5, #0
   150d4:	mov	r1, r5
   150d8:	movwne	r1, #1
   150dc:	cmp	r0, #0
   150e0:	bne	150f4 <__mempcpy_chk@plt+0x3f70>
   150e4:	clz	r2, r6
   150e8:	lsr	r2, r2, #5
   150ec:	orrs	r1, r2, r1
   150f0:	bne	150fc <__mempcpy_chk@plt+0x3f78>
   150f4:	str	r5, [r4]
   150f8:	pop	{r4, r5, r6, sl, fp, pc}
   150fc:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15100:	push	{r4, r5, r6, r7, fp, lr}
   15104:	add	fp, sp, #16
   15108:	ldr	r5, [r1]
   1510c:	mov	r6, r2
   15110:	mov	r4, r1
   15114:	mov	r7, r0
   15118:	cmp	r0, #0
   1511c:	beq	15134 <__mempcpy_chk@plt+0x3fb0>
   15120:	mov	r0, #1
   15124:	add	r0, r0, r5, lsr #1
   15128:	adds	r5, r5, r0
   1512c:	bcc	1514c <__mempcpy_chk@plt+0x3fc8>
   15130:	b	15180 <__mempcpy_chk@plt+0x3ffc>
   15134:	cmp	r5, #0
   15138:	bne	1514c <__mempcpy_chk@plt+0x3fc8>
   1513c:	mov	r0, #64	; 0x40
   15140:	cmp	r6, #64	; 0x40
   15144:	udiv	r5, r0, r6
   15148:	addhi	r5, r5, #1
   1514c:	mov	r0, r7
   15150:	mov	r1, r5
   15154:	mov	r2, r6
   15158:	bl	159b0 <__mempcpy_chk@plt+0x482c>
   1515c:	cmp	r0, #0
   15160:	bne	15178 <__mempcpy_chk@plt+0x3ff4>
   15164:	cmp	r7, #0
   15168:	beq	15180 <__mempcpy_chk@plt+0x3ffc>
   1516c:	cmp	r6, #0
   15170:	cmpne	r5, #0
   15174:	bne	15180 <__mempcpy_chk@plt+0x3ffc>
   15178:	str	r5, [r4]
   1517c:	pop	{r4, r5, r6, r7, fp, pc}
   15180:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15184:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15188:	add	fp, sp, #24
   1518c:	mov	r8, r1
   15190:	ldr	r1, [r1]
   15194:	mov	r5, r0
   15198:	add	r0, r1, r1, asr #1
   1519c:	cmp	r0, r1
   151a0:	mvnvs	r0, #-2147483648	; 0x80000000
   151a4:	cmp	r0, r3
   151a8:	mov	r7, r0
   151ac:	movgt	r7, r3
   151b0:	cmn	r3, #1
   151b4:	movle	r7, r0
   151b8:	ldr	r0, [fp, #8]
   151bc:	cmn	r0, #1
   151c0:	ble	151e8 <__mempcpy_chk@plt+0x4064>
   151c4:	cmp	r0, #0
   151c8:	beq	1523c <__mempcpy_chk@plt+0x40b8>
   151cc:	cmn	r7, #1
   151d0:	ble	15210 <__mempcpy_chk@plt+0x408c>
   151d4:	mvn	r4, #-2147483648	; 0x80000000
   151d8:	udiv	r6, r4, r0
   151dc:	cmp	r6, r7
   151e0:	bge	1523c <__mempcpy_chk@plt+0x40b8>
   151e4:	b	1524c <__mempcpy_chk@plt+0x40c8>
   151e8:	cmn	r7, #1
   151ec:	ble	1522c <__mempcpy_chk@plt+0x40a8>
   151f0:	cmn	r0, #1
   151f4:	beq	1523c <__mempcpy_chk@plt+0x40b8>
   151f8:	mov	r6, #-2147483648	; 0x80000000
   151fc:	mvn	r4, #-2147483648	; 0x80000000
   15200:	sdiv	r6, r6, r0
   15204:	cmp	r6, r7
   15208:	bge	1523c <__mempcpy_chk@plt+0x40b8>
   1520c:	b	1524c <__mempcpy_chk@plt+0x40c8>
   15210:	beq	1523c <__mempcpy_chk@plt+0x40b8>
   15214:	mov	r6, #-2147483648	; 0x80000000
   15218:	mvn	r4, #-2147483648	; 0x80000000
   1521c:	sdiv	r6, r6, r7
   15220:	cmp	r6, r0
   15224:	bge	1523c <__mempcpy_chk@plt+0x40b8>
   15228:	b	1524c <__mempcpy_chk@plt+0x40c8>
   1522c:	mvn	r4, #-2147483648	; 0x80000000
   15230:	sdiv	r6, r4, r0
   15234:	cmp	r7, r6
   15238:	blt	1524c <__mempcpy_chk@plt+0x40c8>
   1523c:	mul	r6, r7, r0
   15240:	mov	r4, #64	; 0x40
   15244:	cmp	r6, #63	; 0x3f
   15248:	bgt	15254 <__mempcpy_chk@plt+0x40d0>
   1524c:	sdiv	r7, r4, r0
   15250:	mul	r6, r7, r0
   15254:	cmp	r5, #0
   15258:	moveq	r4, #0
   1525c:	streq	r4, [r8]
   15260:	sub	r4, r7, r1
   15264:	cmp	r4, r2
   15268:	bge	15314 <__mempcpy_chk@plt+0x4190>
   1526c:	add	r7, r1, r2
   15270:	mov	r6, #0
   15274:	mov	r2, #0
   15278:	cmp	r7, r3
   1527c:	movwgt	r6, #1
   15280:	cmn	r3, #1
   15284:	movwgt	r2, #1
   15288:	cmp	r7, r1
   1528c:	bvs	15348 <__mempcpy_chk@plt+0x41c4>
   15290:	ands	r1, r2, r6
   15294:	bne	15348 <__mempcpy_chk@plt+0x41c4>
   15298:	cmn	r0, #1
   1529c:	ble	152c4 <__mempcpy_chk@plt+0x4140>
   152a0:	cmp	r0, #0
   152a4:	beq	15310 <__mempcpy_chk@plt+0x418c>
   152a8:	cmn	r7, #1
   152ac:	ble	152e8 <__mempcpy_chk@plt+0x4164>
   152b0:	mvn	r1, #-2147483648	; 0x80000000
   152b4:	udiv	r1, r1, r0
   152b8:	cmp	r1, r7
   152bc:	bge	15310 <__mempcpy_chk@plt+0x418c>
   152c0:	b	15348 <__mempcpy_chk@plt+0x41c4>
   152c4:	cmn	r7, #1
   152c8:	ble	15300 <__mempcpy_chk@plt+0x417c>
   152cc:	cmn	r0, #1
   152d0:	beq	15310 <__mempcpy_chk@plt+0x418c>
   152d4:	mov	r1, #-2147483648	; 0x80000000
   152d8:	sdiv	r1, r1, r0
   152dc:	cmp	r1, r7
   152e0:	bge	15310 <__mempcpy_chk@plt+0x418c>
   152e4:	b	15348 <__mempcpy_chk@plt+0x41c4>
   152e8:	beq	15310 <__mempcpy_chk@plt+0x418c>
   152ec:	mov	r1, #-2147483648	; 0x80000000
   152f0:	sdiv	r1, r1, r7
   152f4:	cmp	r1, r0
   152f8:	bge	15310 <__mempcpy_chk@plt+0x418c>
   152fc:	b	15348 <__mempcpy_chk@plt+0x41c4>
   15300:	mvn	r1, #-2147483648	; 0x80000000
   15304:	sdiv	r1, r1, r0
   15308:	cmp	r7, r1
   1530c:	blt	15348 <__mempcpy_chk@plt+0x41c4>
   15310:	mul	r6, r7, r0
   15314:	mov	r0, r5
   15318:	mov	r1, r6
   1531c:	bl	155f0 <__mempcpy_chk@plt+0x446c>
   15320:	cmp	r6, #0
   15324:	movwne	r6, #1
   15328:	cmp	r0, #0
   1532c:	bne	15340 <__mempcpy_chk@plt+0x41bc>
   15330:	clz	r1, r5
   15334:	lsr	r1, r1, #5
   15338:	orrs	r1, r1, r6
   1533c:	bne	15348 <__mempcpy_chk@plt+0x41c4>
   15340:	str	r7, [r8]
   15344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15348:	bl	15490 <__mempcpy_chk@plt+0x430c>
   1534c:	push	{fp, lr}
   15350:	mov	fp, sp
   15354:	mov	r1, #1
   15358:	bl	1556c <__mempcpy_chk@plt+0x43e8>
   1535c:	cmp	r0, #0
   15360:	popne	{fp, pc}
   15364:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15368:	push	{fp, lr}
   1536c:	mov	fp, sp
   15370:	bl	1556c <__mempcpy_chk@plt+0x43e8>
   15374:	cmp	r0, #0
   15378:	popne	{fp, pc}
   1537c:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15380:	push	{fp, lr}
   15384:	mov	fp, sp
   15388:	mov	r1, #1
   1538c:	bl	1556c <__mempcpy_chk@plt+0x43e8>
   15390:	cmp	r0, #0
   15394:	popne	{fp, pc}
   15398:	bl	15490 <__mempcpy_chk@plt+0x430c>
   1539c:	push	{fp, lr}
   153a0:	mov	fp, sp
   153a4:	bl	1556c <__mempcpy_chk@plt+0x43e8>
   153a8:	cmp	r0, #0
   153ac:	popne	{fp, pc}
   153b0:	bl	15490 <__mempcpy_chk@plt+0x430c>
   153b4:	push	{r4, r5, fp, lr}
   153b8:	add	fp, sp, #8
   153bc:	mov	r5, r0
   153c0:	mov	r0, r1
   153c4:	mov	r4, r1
   153c8:	bl	155c0 <__mempcpy_chk@plt+0x443c>
   153cc:	cmp	r0, #0
   153d0:	beq	153e4 <__mempcpy_chk@plt+0x4260>
   153d4:	mov	r1, r5
   153d8:	mov	r2, r4
   153dc:	pop	{r4, r5, fp, lr}
   153e0:	b	10f5c <memcpy@plt>
   153e4:	bl	15490 <__mempcpy_chk@plt+0x430c>
   153e8:	push	{r4, r5, fp, lr}
   153ec:	add	fp, sp, #8
   153f0:	mov	r5, r0
   153f4:	mov	r0, r1
   153f8:	mov	r4, r1
   153fc:	bl	155c0 <__mempcpy_chk@plt+0x443c>
   15400:	cmp	r0, #0
   15404:	beq	15418 <__mempcpy_chk@plt+0x4294>
   15408:	mov	r1, r5
   1540c:	mov	r2, r4
   15410:	pop	{r4, r5, fp, lr}
   15414:	b	10f5c <memcpy@plt>
   15418:	bl	15490 <__mempcpy_chk@plt+0x430c>
   1541c:	push	{r4, r5, fp, lr}
   15420:	add	fp, sp, #8
   15424:	mov	r5, r0
   15428:	add	r0, r1, #1
   1542c:	mov	r4, r1
   15430:	bl	155c0 <__mempcpy_chk@plt+0x443c>
   15434:	cmp	r0, #0
   15438:	beq	15454 <__mempcpy_chk@plt+0x42d0>
   1543c:	mov	r1, #0
   15440:	mov	r2, r4
   15444:	strb	r1, [r0, r4]
   15448:	mov	r1, r5
   1544c:	pop	{r4, r5, fp, lr}
   15450:	b	10f5c <memcpy@plt>
   15454:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15458:	push	{r4, r5, fp, lr}
   1545c:	add	fp, sp, #8
   15460:	mov	r4, r0
   15464:	bl	11088 <strlen@plt>
   15468:	add	r5, r0, #1
   1546c:	mov	r0, r5
   15470:	bl	155c0 <__mempcpy_chk@plt+0x443c>
   15474:	cmp	r0, #0
   15478:	beq	1548c <__mempcpy_chk@plt+0x4308>
   1547c:	mov	r1, r4
   15480:	mov	r2, r5
   15484:	pop	{r4, r5, fp, lr}
   15488:	b	10f5c <memcpy@plt>
   1548c:	bl	15490 <__mempcpy_chk@plt+0x430c>
   15490:	push	{fp, lr}
   15494:	mov	fp, sp
   15498:	movw	r0, #28932	; 0x7104
   1549c:	movw	r1, #26864	; 0x68f0
   154a0:	mov	r2, #5
   154a4:	movt	r0, #2
   154a8:	movt	r1, #1
   154ac:	ldr	r4, [r0]
   154b0:	mov	r0, #0
   154b4:	bl	10f98 <dcgettext@plt>
   154b8:	movw	r2, #24923	; 0x615b
   154bc:	mov	r3, r0
   154c0:	mov	r0, r4
   154c4:	mov	r1, #0
   154c8:	movt	r2, #1
   154cc:	bl	11010 <error@plt>
   154d0:	bl	1116c <abort@plt>
   154d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154d8:	add	fp, sp, #24
   154dc:	sub	sp, sp, #8
   154e0:	mov	r4, r3
   154e4:	mov	r8, r2
   154e8:	mov	r9, r1
   154ec:	mov	r5, r0
   154f0:	bl	110a0 <__errno_location@plt>
   154f4:	mov	r6, #0
   154f8:	mov	r7, r0
   154fc:	add	r1, sp, #4
   15500:	str	r6, [r0]
   15504:	mov	r0, r5
   15508:	blx	r4
   1550c:	ldr	r0, [sp, #4]
   15510:	cmp	r0, r5
   15514:	beq	15554 <__mempcpy_chk@plt+0x43d0>
   15518:	cmp	r9, #0
   1551c:	beq	1553c <__mempcpy_chk@plt+0x43b8>
   15520:	vcmp.f64	d0, #0.0
   15524:	vmrs	APSR_nzcv, fpscr
   15528:	beq	15550 <__mempcpy_chk@plt+0x43cc>
   1552c:	ldr	r1, [r7]
   15530:	subs	r6, r1, #34	; 0x22
   15534:	movwne	r6, #1
   15538:	b	15554 <__mempcpy_chk@plt+0x43d0>
   1553c:	ldrb	r1, [r0]
   15540:	mov	r6, #0
   15544:	cmp	r1, #0
   15548:	bne	1555c <__mempcpy_chk@plt+0x43d8>
   1554c:	b	15520 <__mempcpy_chk@plt+0x439c>
   15550:	mov	r6, #1
   15554:	cmp	r9, #0
   15558:	strne	r0, [r9]
   1555c:	vstr	d0, [r8]
   15560:	mov	r0, r6
   15564:	sub	sp, fp, #24
   15568:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1556c:	clz	r2, r1
   15570:	clz	r3, r0
   15574:	lsr	r2, r2, #5
   15578:	lsr	r3, r3, #5
   1557c:	orrs	r2, r3, r2
   15580:	movwne	r1, #1
   15584:	movwne	r0, #1
   15588:	cmp	r1, #0
   1558c:	beq	155bc <__mempcpy_chk@plt+0x4438>
   15590:	mvn	r2, #-2147483648	; 0x80000000
   15594:	udiv	r2, r2, r1
   15598:	cmp	r2, r0
   1559c:	bcs	155bc <__mempcpy_chk@plt+0x4438>
   155a0:	push	{fp, lr}
   155a4:	mov	fp, sp
   155a8:	bl	110a0 <__errno_location@plt>
   155ac:	mov	r1, #12
   155b0:	str	r1, [r0]
   155b4:	mov	r0, #0
   155b8:	pop	{fp, pc}
   155bc:	b	10ee4 <calloc@plt>
   155c0:	cmp	r0, #0
   155c4:	movweq	r0, #1
   155c8:	cmn	r0, #1
   155cc:	ble	155d4 <__mempcpy_chk@plt+0x4450>
   155d0:	b	11028 <malloc@plt>
   155d4:	push	{fp, lr}
   155d8:	mov	fp, sp
   155dc:	bl	110a0 <__errno_location@plt>
   155e0:	mov	r1, #12
   155e4:	str	r1, [r0]
   155e8:	mov	r0, #0
   155ec:	pop	{fp, pc}
   155f0:	push	{fp, lr}
   155f4:	mov	fp, sp
   155f8:	cmp	r0, #0
   155fc:	beq	15618 <__mempcpy_chk@plt+0x4494>
   15600:	cmp	r1, #0
   15604:	beq	15624 <__mempcpy_chk@plt+0x44a0>
   15608:	cmn	r1, #1
   1560c:	ble	15630 <__mempcpy_chk@plt+0x44ac>
   15610:	pop	{fp, lr}
   15614:	b	10fa4 <realloc@plt>
   15618:	mov	r0, r1
   1561c:	pop	{fp, lr}
   15620:	b	155c0 <__mempcpy_chk@plt+0x443c>
   15624:	bl	12ad4 <__mempcpy_chk@plt+0x1950>
   15628:	mov	r0, #0
   1562c:	pop	{fp, pc}
   15630:	bl	110a0 <__errno_location@plt>
   15634:	mov	r1, #12
   15638:	str	r1, [r0]
   1563c:	mov	r0, #0
   15640:	pop	{fp, pc}
   15644:	push	{r4, r5, r6, sl, fp, lr}
   15648:	add	fp, sp, #16
   1564c:	vpush	{d8}
   15650:	movw	r6, #29384	; 0x72c8
   15654:	mov	r5, r0
   15658:	mov	r4, r1
   1565c:	movt	r6, #2
   15660:	ldr	r0, [r6]
   15664:	cmp	r0, #0
   15668:	bne	15684 <__mempcpy_chk@plt+0x4500>
   1566c:	movw	r1, #25630	; 0x641e
   15670:	movw	r0, #8127	; 0x1fbf
   15674:	mov	r2, #0
   15678:	movt	r1, #1
   1567c:	bl	1113c <newlocale@plt>
   15680:	str	r0, [r6]
   15684:	ldr	r0, [r6]
   15688:	cmp	r0, #0
   1568c:	beq	156d4 <__mempcpy_chk@plt+0x4550>
   15690:	bl	10efc <uselocale@plt>
   15694:	cmp	r0, #0
   15698:	beq	156d4 <__mempcpy_chk@plt+0x4550>
   1569c:	mov	r6, r0
   156a0:	mov	r0, r5
   156a4:	mov	r1, r4
   156a8:	bl	10f74 <strtold@plt>
   156ac:	vorr	d8, d0, d0
   156b0:	bl	110a0 <__errno_location@plt>
   156b4:	ldr	r5, [r0]
   156b8:	mov	r4, r0
   156bc:	mov	r0, r6
   156c0:	bl	10efc <uselocale@plt>
   156c4:	cmp	r0, #0
   156c8:	beq	156ec <__mempcpy_chk@plt+0x4568>
   156cc:	str	r5, [r4]
   156d0:	b	156e0 <__mempcpy_chk@plt+0x455c>
   156d4:	cmp	r4, #0
   156d8:	vmov.i32	d8, #0	; 0x00000000
   156dc:	strne	r5, [r4]
   156e0:	vorr	d0, d8, d8
   156e4:	vpop	{d8}
   156e8:	pop	{r4, r5, r6, sl, fp, pc}
   156ec:	bl	1116c <abort@plt>
   156f0:	push	{r4, r5, r6, sl, fp, lr}
   156f4:	add	fp, sp, #16
   156f8:	mov	r4, r0
   156fc:	bl	10ff8 <__fpending@plt>
   15700:	ldr	r6, [r4]
   15704:	mov	r5, r0
   15708:	mov	r0, r4
   1570c:	bl	15774 <__mempcpy_chk@plt+0x45f0>
   15710:	tst	r6, #32
   15714:	bne	1574c <__mempcpy_chk@plt+0x45c8>
   15718:	cmp	r0, #0
   1571c:	mov	r4, r0
   15720:	mvnne	r4, #0
   15724:	cmp	r5, #0
   15728:	bne	15758 <__mempcpy_chk@plt+0x45d4>
   1572c:	cmp	r0, #0
   15730:	beq	15758 <__mempcpy_chk@plt+0x45d4>
   15734:	bl	110a0 <__errno_location@plt>
   15738:	ldr	r0, [r0]
   1573c:	subs	r4, r0, #9
   15740:	mvnne	r4, #0
   15744:	mov	r0, r4
   15748:	pop	{r4, r5, r6, sl, fp, pc}
   1574c:	mvn	r4, #0
   15750:	cmp	r0, #0
   15754:	beq	15760 <__mempcpy_chk@plt+0x45dc>
   15758:	mov	r0, r4
   1575c:	pop	{r4, r5, r6, sl, fp, pc}
   15760:	bl	110a0 <__errno_location@plt>
   15764:	mov	r1, #0
   15768:	str	r1, [r0]
   1576c:	mov	r0, r4
   15770:	pop	{r4, r5, r6, sl, fp, pc}
   15774:	push	{r4, r5, r6, sl, fp, lr}
   15778:	add	fp, sp, #16
   1577c:	sub	sp, sp, #8
   15780:	mov	r4, r0
   15784:	bl	110dc <fileno@plt>
   15788:	cmn	r0, #1
   1578c:	ble	15800 <__mempcpy_chk@plt+0x467c>
   15790:	mov	r0, r4
   15794:	bl	11040 <__freading@plt>
   15798:	cmp	r0, #0
   1579c:	beq	157c8 <__mempcpy_chk@plt+0x4644>
   157a0:	mov	r0, r4
   157a4:	bl	110dc <fileno@plt>
   157a8:	mov	r1, #1
   157ac:	mov	r2, #0
   157b0:	mov	r3, #0
   157b4:	str	r1, [sp]
   157b8:	bl	10fd4 <lseek64@plt>
   157bc:	and	r0, r0, r1
   157c0:	cmn	r0, #1
   157c4:	beq	15800 <__mempcpy_chk@plt+0x467c>
   157c8:	mov	r0, r4
   157cc:	bl	15810 <__mempcpy_chk@plt+0x468c>
   157d0:	cmp	r0, #0
   157d4:	beq	15800 <__mempcpy_chk@plt+0x467c>
   157d8:	bl	110a0 <__errno_location@plt>
   157dc:	ldr	r6, [r0]
   157e0:	mov	r5, r0
   157e4:	mov	r0, r4
   157e8:	bl	11100 <fclose@plt>
   157ec:	cmp	r6, #0
   157f0:	strne	r6, [r5]
   157f4:	mvnne	r0, #0
   157f8:	sub	sp, fp, #16
   157fc:	pop	{r4, r5, r6, sl, fp, pc}
   15800:	mov	r0, r4
   15804:	sub	sp, fp, #16
   15808:	pop	{r4, r5, r6, sl, fp, lr}
   1580c:	b	11100 <fclose@plt>
   15810:	push	{r4, sl, fp, lr}
   15814:	add	fp, sp, #8
   15818:	sub	sp, sp, #8
   1581c:	mov	r4, r0
   15820:	cmp	r0, #0
   15824:	beq	1585c <__mempcpy_chk@plt+0x46d8>
   15828:	mov	r0, r4
   1582c:	bl	11040 <__freading@plt>
   15830:	cmp	r0, #0
   15834:	beq	1585c <__mempcpy_chk@plt+0x46d8>
   15838:	ldrb	r0, [r4, #1]
   1583c:	tst	r0, #1
   15840:	beq	1585c <__mempcpy_chk@plt+0x46d8>
   15844:	mov	r0, #1
   15848:	mov	r2, #0
   1584c:	mov	r3, #0
   15850:	str	r0, [sp]
   15854:	mov	r0, r4
   15858:	bl	1586c <__mempcpy_chk@plt+0x46e8>
   1585c:	mov	r0, r4
   15860:	sub	sp, fp, #8
   15864:	pop	{r4, sl, fp, lr}
   15868:	b	10f2c <fflush@plt>
   1586c:	push	{r4, r5, r6, r7, fp, lr}
   15870:	add	fp, sp, #16
   15874:	sub	sp, sp, #8
   15878:	mov	r4, r0
   1587c:	ldr	r0, [r0, #4]
   15880:	mov	r5, r3
   15884:	mov	r6, r2
   15888:	ldr	r1, [r4, #8]
   1588c:	cmp	r1, r0
   15890:	bne	158ac <__mempcpy_chk@plt+0x4728>
   15894:	ldrd	r0, [r4, #16]
   15898:	cmp	r1, r0
   1589c:	bne	158ac <__mempcpy_chk@plt+0x4728>
   158a0:	ldr	r0, [r4, #36]	; 0x24
   158a4:	cmp	r0, #0
   158a8:	beq	158c4 <__mempcpy_chk@plt+0x4740>
   158ac:	mov	r0, r4
   158b0:	mov	r2, r6
   158b4:	mov	r3, r5
   158b8:	sub	sp, fp, #16
   158bc:	pop	{r4, r5, r6, r7, fp, lr}
   158c0:	b	1110c <fseeko64@plt>
   158c4:	ldr	r7, [fp, #8]
   158c8:	mov	r0, r4
   158cc:	bl	110dc <fileno@plt>
   158d0:	mov	r2, r6
   158d4:	mov	r3, r5
   158d8:	str	r7, [sp]
   158dc:	bl	10fd4 <lseek64@plt>
   158e0:	and	r2, r0, r1
   158e4:	cmn	r2, #1
   158e8:	beq	15908 <__mempcpy_chk@plt+0x4784>
   158ec:	strd	r0, [r4, #80]	; 0x50
   158f0:	ldr	r0, [r4]
   158f4:	bic	r0, r0, #16
   158f8:	str	r0, [r4]
   158fc:	mov	r0, #0
   15900:	sub	sp, fp, #16
   15904:	pop	{r4, r5, r6, r7, fp, pc}
   15908:	mvn	r0, #0
   1590c:	sub	sp, fp, #16
   15910:	pop	{r4, r5, r6, r7, fp, pc}
   15914:	push	{fp, lr}
   15918:	mov	fp, sp
   1591c:	mov	r0, #14
   15920:	bl	11130 <nl_langinfo@plt>
   15924:	movw	r1, #25321	; 0x62e9
   15928:	cmp	r0, #0
   1592c:	movt	r1, #1
   15930:	movne	r1, r0
   15934:	movw	r0, #26881	; 0x6901
   15938:	ldrb	r2, [r1]
   1593c:	movt	r0, #1
   15940:	cmp	r2, #0
   15944:	movne	r0, r1
   15948:	pop	{fp, pc}
   1594c:	push	{r4, r5, r6, r7, fp, lr}
   15950:	add	fp, sp, #16
   15954:	sub	sp, sp, #8
   15958:	cmp	r0, #0
   1595c:	add	r5, sp, #4
   15960:	mov	r7, r2
   15964:	mov	r4, r1
   15968:	movne	r5, r0
   1596c:	mov	r0, r5
   15970:	bl	11004 <mbrtowc@plt>
   15974:	mov	r6, r0
   15978:	cmp	r7, #0
   1597c:	beq	159a4 <__mempcpy_chk@plt+0x4820>
   15980:	cmn	r6, #2
   15984:	bcc	159a4 <__mempcpy_chk@plt+0x4820>
   15988:	mov	r0, #0
   1598c:	bl	159ec <__mempcpy_chk@plt+0x4868>
   15990:	cmp	r0, #0
   15994:	bne	159a4 <__mempcpy_chk@plt+0x4820>
   15998:	ldrb	r0, [r4]
   1599c:	mov	r6, #1
   159a0:	str	r0, [r5]
   159a4:	mov	r0, r6
   159a8:	sub	sp, fp, #16
   159ac:	pop	{r4, r5, r6, r7, fp, pc}
   159b0:	cmp	r2, #0
   159b4:	beq	159e4 <__mempcpy_chk@plt+0x4860>
   159b8:	mvn	r3, #0
   159bc:	udiv	r3, r3, r2
   159c0:	cmp	r3, r1
   159c4:	bcs	159e4 <__mempcpy_chk@plt+0x4860>
   159c8:	push	{fp, lr}
   159cc:	mov	fp, sp
   159d0:	bl	110a0 <__errno_location@plt>
   159d4:	mov	r1, #12
   159d8:	str	r1, [r0]
   159dc:	mov	r0, #0
   159e0:	pop	{fp, pc}
   159e4:	mul	r1, r2, r1
   159e8:	b	155f0 <__mempcpy_chk@plt+0x446c>
   159ec:	push	{r4, sl, fp, lr}
   159f0:	add	fp, sp, #8
   159f4:	sub	sp, sp, #264	; 0x108
   159f8:	add	r1, sp, #7
   159fc:	movw	r2, #257	; 0x101
   15a00:	bl	15a58 <__mempcpy_chk@plt+0x48d4>
   15a04:	mov	r4, #0
   15a08:	cmp	r0, #0
   15a0c:	bne	15a4c <__mempcpy_chk@plt+0x48c8>
   15a10:	movw	r1, #25630	; 0x641e
   15a14:	add	r0, sp, #7
   15a18:	mov	r2, #2
   15a1c:	movt	r1, #1
   15a20:	bl	1107c <bcmp@plt>
   15a24:	cmp	r0, #0
   15a28:	beq	15a4c <__mempcpy_chk@plt+0x48c8>
   15a2c:	movw	r1, #26887	; 0x6907
   15a30:	add	r0, sp, #7
   15a34:	mov	r2, #6
   15a38:	movt	r1, #1
   15a3c:	bl	1107c <bcmp@plt>
   15a40:	cmp	r0, #0
   15a44:	mov	r4, r0
   15a48:	movwne	r4, #1
   15a4c:	mov	r0, r4
   15a50:	sub	sp, fp, #8
   15a54:	pop	{r4, sl, fp, pc}
   15a58:	push	{r4, r5, r6, r7, fp, lr}
   15a5c:	add	fp, sp, #16
   15a60:	mov	r4, r1
   15a64:	mov	r1, #0
   15a68:	mov	r6, r2
   15a6c:	bl	11118 <setlocale@plt>
   15a70:	cmp	r0, #0
   15a74:	beq	15aa4 <__mempcpy_chk@plt+0x4920>
   15a78:	mov	r7, r0
   15a7c:	bl	11088 <strlen@plt>
   15a80:	cmp	r0, r6
   15a84:	bcs	15ac0 <__mempcpy_chk@plt+0x493c>
   15a88:	add	r2, r0, #1
   15a8c:	mov	r0, r4
   15a90:	mov	r1, r7
   15a94:	bl	10f5c <memcpy@plt>
   15a98:	mov	r5, #0
   15a9c:	mov	r0, r5
   15aa0:	pop	{r4, r5, r6, r7, fp, pc}
   15aa4:	mov	r5, #22
   15aa8:	cmp	r6, #0
   15aac:	beq	15ae8 <__mempcpy_chk@plt+0x4964>
   15ab0:	mov	r0, #0
   15ab4:	strb	r0, [r4]
   15ab8:	mov	r0, r5
   15abc:	pop	{r4, r5, r6, r7, fp, pc}
   15ac0:	mov	r5, #34	; 0x22
   15ac4:	cmp	r6, #0
   15ac8:	beq	15ae8 <__mempcpy_chk@plt+0x4964>
   15acc:	sub	r6, r6, #1
   15ad0:	mov	r0, r4
   15ad4:	mov	r1, r7
   15ad8:	mov	r2, r6
   15adc:	bl	10f5c <memcpy@plt>
   15ae0:	mov	r0, #0
   15ae4:	strb	r0, [r4, r6]
   15ae8:	mov	r0, r5
   15aec:	pop	{r4, r5, r6, r7, fp, pc}
   15af0:	mov	r1, #0
   15af4:	b	11118 <setlocale@plt>
   15af8:	vmov	d6, r0, r1
   15afc:	vldr	d7, [pc, #36]	; 15b28 <__mempcpy_chk@plt+0x49a4>
   15b00:	vldr	d5, [pc, #40]	; 15b30 <__mempcpy_chk@plt+0x49ac>
   15b04:	vmul.f64	d7, d6, d7
   15b08:	vcvt.u32.f64	s14, d7
   15b0c:	vcvt.f64.u32	d4, s14
   15b10:	vmov	r1, s14
   15b14:	vmls.f64	d6, d4, d5
   15b18:	vcvt.u32.f64	s15, d6
   15b1c:	vmov	r0, s15
   15b20:	bx	lr
   15b24:	nop			; (mov r0, r0)
   15b28:	andeq	r0, r0, r0
   15b2c:	ldclcc	0, cr0, [r0]
   15b30:	andeq	r0, r0, r0
   15b34:	mvnsmi	r0, r0
   15b38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15b3c:	mov	r7, r0
   15b40:	ldr	r6, [pc, #72]	; 15b90 <__mempcpy_chk@plt+0x4a0c>
   15b44:	ldr	r5, [pc, #72]	; 15b94 <__mempcpy_chk@plt+0x4a10>
   15b48:	add	r6, pc, r6
   15b4c:	add	r5, pc, r5
   15b50:	sub	r6, r6, r5
   15b54:	mov	r8, r1
   15b58:	mov	r9, r2
   15b5c:	bl	10ec4 <calloc@plt-0x20>
   15b60:	asrs	r6, r6, #2
   15b64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b68:	mov	r4, #0
   15b6c:	add	r4, r4, #1
   15b70:	ldr	r3, [r5], #4
   15b74:	mov	r2, r9
   15b78:	mov	r1, r8
   15b7c:	mov	r0, r7
   15b80:	blx	r3
   15b84:	cmp	r6, r4
   15b88:	bne	15b6c <__mempcpy_chk@plt+0x49e8>
   15b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b90:			; <UNDEFINED> instruction: 0x000113bc
   15b94:			; <UNDEFINED> instruction: 0x000113b4
   15b98:	bx	lr
   15b9c:	ldr	r3, [pc, #12]	; 15bb0 <__mempcpy_chk@plt+0x4a2c>
   15ba0:	mov	r1, #0
   15ba4:	add	r3, pc, r3
   15ba8:	ldr	r2, [r3]
   15bac:	b	110b8 <__cxa_atexit@plt>
   15bb0:	andeq	r1, r1, r0, asr r5

Disassembly of section .fini:

00015bb4 <.fini>:
   15bb4:	push	{r3, lr}
   15bb8:	pop	{r3, pc}
