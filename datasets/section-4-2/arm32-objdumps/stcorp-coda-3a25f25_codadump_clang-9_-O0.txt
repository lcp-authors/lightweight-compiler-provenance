
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

0001256c <.init>:
   1256c:	push	{r3, lr}
   12570:	bl	12a48 <_start@@Base+0x3c>
   12574:	pop	{r3, pc}

Disassembly of section .plt:

00012578 <coda_cursor_get_byte_size@plt-0x14>:
   12578:	push	{lr}		; (str lr, [sp, #-4]!)
   1257c:	ldr	lr, [pc, #4]	; 12588 <coda_cursor_get_byte_size@plt-0x4>
   12580:	add	lr, pc, lr
   12584:	ldr	pc, [lr, #8]!
   12588:	andeq	lr, r1, r8, ror sl

0001258c <coda_cursor_get_byte_size@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #122880	; 0x1e000
   12594:	ldr	pc, [ip, #2680]!	; 0xa78

00012598 <coda_type_get_special_type_name@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #122880	; 0x1e000
   125a0:	ldr	pc, [ip, #2672]!	; 0xa70

000125a4 <coda_set_option_use_fast_size_expressions@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #122880	; 0x1e000
   125ac:	ldr	pc, [ip, #2664]!	; 0xa68

000125b0 <raise@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #122880	; 0x1e000
   125b8:	ldr	pc, [ip, #2656]!	; 0xa60

000125bc <coda_get_option_bypass_special_types@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #122880	; 0x1e000
   125c4:	ldr	pc, [ip, #2648]!	; 0xa58

000125c8 <coda_set_option_perform_boundary_checks@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #122880	; 0x1e000
   125d0:	ldr	pc, [ip, #2640]!	; 0xa50

000125d4 <strcmp@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #122880	; 0x1e000
   125dc:	ldr	pc, [ip, #2632]!	; 0xa48

000125e0 <coda_type_get_record_field_hidden_status@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #122880	; 0x1e000
   125e8:	ldr	pc, [ip, #2624]!	; 0xa40

000125ec <printf@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #122880	; 0x1e000
   125f4:	ldr	pc, [ip, #2616]!	; 0xa38

000125f8 <coda_cursor_get_record_field_available_status@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #122880	; 0x1e000
   12600:	ldr	pc, [ip, #2608]!	; 0xa30

00012604 <fopen@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #122880	; 0x1e000
   1260c:	ldr	pc, [ip, #2600]!	; 0xa28

00012610 <coda_set_error@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #122880	; 0x1e000
   12618:	ldr	pc, [ip, #2592]!	; 0xa20

0001261c <coda_open@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #122880	; 0x1e000
   12624:	ldr	pc, [ip, #2584]!	; 0xa18

00012628 <fflush@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #122880	; 0x1e000
   12630:	ldr	pc, [ip, #2576]!	; 0xa10

00012634 <coda_time_double_to_string@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #122880	; 0x1e000
   1263c:	ldr	pc, [ip, #2568]!	; 0xa08

00012640 <coda_cursor_get_num_elements@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #122880	; 0x1e000
   12648:	ldr	pc, [ip, #2560]!	; 0xa00

0001264c <coda_str64u@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #122880	; 0x1e000
   12654:	ldr	pc, [ip, #2552]!	; 0x9f8

00012658 <free@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #122880	; 0x1e000
   12660:	ldr	pc, [ip, #2544]!	; 0x9f0

00012664 <coda_set_option_use_mmap@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #122880	; 0x1e000
   1266c:	ldr	pc, [ip, #2536]!	; 0x9e8

00012670 <coda_set_definition_path_conditional@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #122880	; 0x1e000
   12678:	ldr	pc, [ip, #2528]!	; 0x9e0

0001267c <coda_cursor_read_uint32@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #122880	; 0x1e000
   12684:	ldr	pc, [ip, #2520]!	; 0x9d8

00012688 <coda_set_option_bypass_special_types@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #122880	; 0x1e000
   12690:	ldr	pc, [ip, #2512]!	; 0x9d0

00012694 <coda_type_get_record_field_type@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #122880	; 0x1e000
   1269c:	ldr	pc, [ip, #2504]!	; 0x9c8

000126a0 <coda_cursor_get_type@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #122880	; 0x1e000
   126a8:	ldr	pc, [ip, #2496]!	; 0x9c0

000126ac <memcpy@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #122880	; 0x1e000
   126b4:	ldr	pc, [ip, #2488]!	; 0x9b8

000126b8 <coda_isInf@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #122880	; 0x1e000
   126c0:	ldr	pc, [ip, #2480]!	; 0x9b0

000126c4 <coda_type_get_bit_size@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #122880	; 0x1e000
   126cc:	ldr	pc, [ip, #2472]!	; 0x9a8

000126d0 <coda_type_get_record_field_available_status@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #122880	; 0x1e000
   126d8:	ldr	pc, [ip, #2464]!	; 0x9a0

000126dc <coda_cursor_has_attributes@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #122880	; 0x1e000
   126e4:	ldr	pc, [ip, #2456]!	; 0x998

000126e8 <coda_cursor_get_type_class@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #122880	; 0x1e000
   126f0:	ldr	pc, [ip, #2448]!	; 0x990

000126f4 <coda_set_definition_path@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #122880	; 0x1e000
   126fc:	ldr	pc, [ip, #2440]!	; 0x988

00012700 <coda_get_product_format@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #122880	; 0x1e000
   12708:	ldr	pc, [ip, #2432]!	; 0x980

0001270c <coda_type_get_unit@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #122880	; 0x1e000
   12714:	ldr	pc, [ip, #2424]!	; 0x978

00012718 <coda_type_get_description@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #122880	; 0x1e000
   12720:	ldr	pc, [ip, #2416]!	; 0x970

00012724 <coda_cursor_get_special_type@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #122880	; 0x1e000
   1272c:	ldr	pc, [ip, #2408]!	; 0x968

00012730 <coda_cursor_goto_first_array_element@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #122880	; 0x1e000
   12738:	ldr	pc, [ip, #2400]!	; 0x960

0001273c <coda_cursor_set_product@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #122880	; 0x1e000
   12744:	ldr	pc, [ip, #2392]!	; 0x958

00012748 <strcpy@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #122880	; 0x1e000
   12750:	ldr	pc, [ip, #2384]!	; 0x950

00012754 <coda_cursor_goto_first_record_field@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #122880	; 0x1e000
   1275c:	ldr	pc, [ip, #2376]!	; 0x948

00012760 <coda_cursor_goto_record_field_by_index@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #122880	; 0x1e000
   12768:	ldr	pc, [ip, #2368]!	; 0x940

0001276c <coda_done@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #122880	; 0x1e000
   12774:	ldr	pc, [ip, #2360]!	; 0x938

00012778 <coda_cursor_get_read_type@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #122880	; 0x1e000
   12780:	ldr	pc, [ip, #2352]!	; 0x930

00012784 <malloc@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #122880	; 0x1e000
   1278c:	ldr	pc, [ip, #2344]!	; 0x928

00012790 <__libc_start_main@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #122880	; 0x1e000
   12798:	ldr	pc, [ip, #2336]!	; 0x920

0001279c <__gmon_start__@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #122880	; 0x1e000
   127a4:	ldr	pc, [ip, #2328]!	; 0x918

000127a8 <coda_cursor_read_string@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #122880	; 0x1e000
   127b0:	ldr	pc, [ip, #2320]!	; 0x910

000127b4 <coda_cursor_goto_parent@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #122880	; 0x1e000
   127bc:	ldr	pc, [ip, #2312]!	; 0x908

000127c0 <coda_type_get_num_record_fields@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #122880	; 0x1e000
   127c8:	ldr	pc, [ip, #2304]!	; 0x900

000127cc <exit@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #122880	; 0x1e000
   127d4:	ldr	pc, [ip, #2296]!	; 0x8f8

000127d8 <coda_type_get_read_type@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #122880	; 0x1e000
   127e0:	ldr	pc, [ip, #2288]!	; 0x8f0

000127e4 <coda_cursor_get_string_length@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #122880	; 0x1e000
   127ec:	ldr	pc, [ip, #2280]!	; 0x8e8

000127f0 <coda_cursor_read_uint64@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #122880	; 0x1e000
   127f8:	ldr	pc, [ip, #2272]!	; 0x8e0

000127fc <coda_cursor_read_double@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #122880	; 0x1e000
   12804:	ldr	pc, [ip, #2264]!	; 0x8d8

00012808 <coda_isNaN@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #122880	; 0x1e000
   12810:	ldr	pc, [ip, #2256]!	; 0x8d0

00012814 <fprintf@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #122880	; 0x1e000
   1281c:	ldr	pc, [ip, #2248]!	; 0x8c8

00012820 <coda_cursor_goto_next_array_element@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #122880	; 0x1e000
   12828:	ldr	pc, [ip, #2240]!	; 0x8c0

0001282c <coda_open_as@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #122880	; 0x1e000
   12834:	ldr	pc, [ip, #2232]!	; 0x8b8

00012838 <coda_init@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #122880	; 0x1e000
   12840:	ldr	pc, [ip, #2224]!	; 0x8b0

00012844 <coda_set_option_perform_conversions@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #122880	; 0x1e000
   1284c:	ldr	pc, [ip, #2216]!	; 0x8a8

00012850 <coda_cursor_goto_attributes@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #122880	; 0x1e000
   12858:	ldr	pc, [ip, #2208]!	; 0x8a0

0001285c <coda_cursor_read_char@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #122880	; 0x1e000
   12864:	ldr	pc, [ip, #2200]!	; 0x898

00012868 <memset@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #122880	; 0x1e000
   12870:	ldr	pc, [ip, #2192]!	; 0x890

00012874 <strncpy@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #122880	; 0x1e000
   1287c:	ldr	pc, [ip, #2184]!	; 0x888

00012880 <coda_type_get_special_type@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #122880	; 0x1e000
   12888:	ldr	pc, [ip, #2176]!	; 0x880

0001288c <coda_type_get_record_union_status@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #122880	; 0x1e000
   12894:	ldr	pc, [ip, #2168]!	; 0x878

00012898 <coda_cursor_read_complex_double_split@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #122880	; 0x1e000
   128a0:	ldr	pc, [ip, #2160]!	; 0x870

000128a4 <coda_type_get_array_base_type@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #122880	; 0x1e000
   128ac:	ldr	pc, [ip, #2152]!	; 0x868

000128b0 <fclose@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #122880	; 0x1e000
   128b8:	ldr	pc, [ip, #2144]!	; 0x860

000128bc <coda_type_get_string_length@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #122880	; 0x1e000
   128c4:	ldr	pc, [ip, #2136]!	; 0x858

000128c8 <coda_type_get_native_type_name@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #122880	; 0x1e000
   128d0:	ldr	pc, [ip, #2128]!	; 0x850

000128d4 <coda_cursor_get_array_dim@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #122880	; 0x1e000
   128dc:	ldr	pc, [ip, #2120]!	; 0x848

000128e0 <coda_cursor_has_ascii_content@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #122880	; 0x1e000
   128e8:	ldr	pc, [ip, #2112]!	; 0x840

000128ec <coda_close@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #122880	; 0x1e000
   128f4:	ldr	pc, [ip, #2104]!	; 0x838

000128f8 <coda_cursor_read_int64@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #122880	; 0x1e000
   12900:	ldr	pc, [ip, #2096]!	; 0x830

00012904 <vfprintf@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #122880	; 0x1e000
   1290c:	ldr	pc, [ip, #2088]!	; 0x828

00012910 <coda_cursor_goto@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #122880	; 0x1e000
   12918:	ldr	pc, [ip, #2080]!	; 0x820

0001291c <coda_type_get_record_field_index_from_name@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #122880	; 0x1e000
   12924:	ldr	pc, [ip, #2072]!	; 0x818

00012928 <coda_cursor_read_complex_double_pair@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #122880	; 0x1e000
   12930:	ldr	pc, [ip, #2064]!	; 0x810

00012934 <coda_cursor_goto_next_record_field@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #122880	; 0x1e000
   1293c:	ldr	pc, [ip, #2056]!	; 0x808

00012940 <coda_type_get_array_dim@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #122880	; 0x1e000
   12948:	ldr	pc, [ip, #2048]!	; 0x800

0001294c <coda_cursor_get_bit_size@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #122880	; 0x1e000
   12954:	ldr	pc, [ip, #2040]!	; 0x7f8

00012958 <atoi@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #122880	; 0x1e000
   12960:	ldr	pc, [ip, #2032]!	; 0x7f0

00012964 <coda_errno_to_string@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #122880	; 0x1e000
   1296c:	ldr	pc, [ip, #2024]!	; 0x7e8

00012970 <coda_cursor_use_base_type_of_special_type@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #122880	; 0x1e000
   12978:	ldr	pc, [ip, #2016]!	; 0x7e0

0001297c <coda_cursor_get_available_union_field_index@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #122880	; 0x1e000
   12984:	ldr	pc, [ip, #2008]!	; 0x7d8

00012988 <coda_cursor_read_int32@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #122880	; 0x1e000
   12990:	ldr	pc, [ip, #2000]!	; 0x7d0

00012994 <coda_cursor_get_file_bit_offset@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #122880	; 0x1e000
   1299c:	ldr	pc, [ip, #1992]!	; 0x7c8

000129a0 <coda_get_libcoda_version@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #122880	; 0x1e000
   129a8:	ldr	pc, [ip, #1984]!	; 0x7c0

000129ac <coda_get_errno@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #122880	; 0x1e000
   129b4:	ldr	pc, [ip, #1976]!	; 0x7b8

000129b8 <coda_type_get_special_base_type@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #122880	; 0x1e000
   129c0:	ldr	pc, [ip, #1968]!	; 0x7b0

000129c4 <coda_type_get_record_field_name@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #122880	; 0x1e000
   129cc:	ldr	pc, [ip, #1960]!	; 0x7a8

000129d0 <abort@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #122880	; 0x1e000
   129d8:	ldr	pc, [ip, #1952]!	; 0x7a0

000129dc <coda_cursor_read_bits@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #122880	; 0x1e000
   129e4:	ldr	pc, [ip, #1944]!	; 0x798

000129e8 <coda_str64@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #122880	; 0x1e000
   129f0:	ldr	pc, [ip, #1936]!	; 0x790

000129f4 <__assert_fail@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #122880	; 0x1e000
   129fc:	ldr	pc, [ip, #1928]!	; 0x788

00012a00 <coda_type_get_class@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #122880	; 0x1e000
   12a08:	ldr	pc, [ip, #1920]!	; 0x780

Disassembly of section .text:

00012a0c <_start@@Base>:
   12a0c:	mov	fp, #0
   12a10:	mov	lr, #0
   12a14:	pop	{r1}		; (ldr r1, [sp], #4)
   12a18:	mov	r2, sp
   12a1c:	push	{r2}		; (str r2, [sp, #-4]!)
   12a20:	push	{r0}		; (str r0, [sp, #-4]!)
   12a24:	ldr	ip, [pc, #16]	; 12a3c <_start@@Base+0x30>
   12a28:	push	{ip}		; (str ip, [sp, #-4]!)
   12a2c:	ldr	r0, [pc, #12]	; 12a40 <_start@@Base+0x34>
   12a30:	ldr	r3, [pc, #12]	; 12a44 <_start@@Base+0x38>
   12a34:	bl	12790 <__libc_start_main@plt>
   12a38:	bl	129d0 <abort@plt>
   12a3c:	andeq	lr, r1, r0, lsl #22
   12a40:	andeq	fp, r1, ip, lsl r9
   12a44:	andeq	lr, r1, r0, lsr #21
   12a48:	ldr	r3, [pc, #20]	; 12a64 <_start@@Base+0x58>
   12a4c:	ldr	r2, [pc, #20]	; 12a68 <_start@@Base+0x5c>
   12a50:	add	r3, pc, r3
   12a54:	ldr	r2, [r3, r2]
   12a58:	cmp	r2, #0
   12a5c:	bxeq	lr
   12a60:	b	1279c <__gmon_start__@plt>
   12a64:	andeq	lr, r1, r8, lsr #11
   12a68:	ldrdeq	r0, [r0], -r8
   12a6c:	ldr	r0, [pc, #24]	; 12a8c <_start@@Base+0x80>
   12a70:	ldr	r3, [pc, #24]	; 12a90 <_start@@Base+0x84>
   12a74:	cmp	r3, r0
   12a78:	bxeq	lr
   12a7c:	ldr	r3, [pc, #16]	; 12a94 <_start@@Base+0x88>
   12a80:	cmp	r3, #0
   12a84:	bxeq	lr
   12a88:	bx	r3
   12a8c:	andeq	r1, r3, ip, lsl r2
   12a90:	andeq	r1, r3, ip, lsl r2
   12a94:	andeq	r0, r0, r0
   12a98:	ldr	r0, [pc, #36]	; 12ac4 <_start@@Base+0xb8>
   12a9c:	ldr	r1, [pc, #36]	; 12ac8 <_start@@Base+0xbc>
   12aa0:	sub	r1, r1, r0
   12aa4:	asr	r1, r1, #2
   12aa8:	add	r1, r1, r1, lsr #31
   12aac:	asrs	r1, r1, #1
   12ab0:	bxeq	lr
   12ab4:	ldr	r3, [pc, #16]	; 12acc <_start@@Base+0xc0>
   12ab8:	cmp	r3, #0
   12abc:	bxeq	lr
   12ac0:	bx	r3
   12ac4:	andeq	r1, r3, ip, lsl r2
   12ac8:	andeq	r1, r3, ip, lsl r2
   12acc:	andeq	r0, r0, r0
   12ad0:	push	{r4, lr}
   12ad4:	ldr	r4, [pc, #24]	; 12af4 <_start@@Base+0xe8>
   12ad8:	ldrb	r3, [r4]
   12adc:	cmp	r3, #0
   12ae0:	popne	{r4, pc}
   12ae4:	bl	12a6c <_start@@Base+0x60>
   12ae8:	mov	r3, #1
   12aec:	strb	r3, [r4]
   12af0:	pop	{r4, pc}
   12af4:	andeq	r1, r3, r0, lsr #4
   12af8:	b	12a98 <_start@@Base+0x8c>

00012afc <export_data_element_to_ascii@@Base>:
   12afc:	push	{fp, lr}
   12b00:	mov	fp, sp
   12b04:	sub	sp, sp, #8
   12b08:	ldr	r0, [pc, #228]	; 12bf4 <export_data_element_to_ascii@@Base+0xf8>
   12b0c:	add	r0, pc, r0
   12b10:	ldr	r0, [r0]
   12b14:	cmp	r0, #0
   12b18:	beq	12b30 <export_data_element_to_ascii@@Base+0x34>
   12b1c:	ldr	r0, [pc, #220]	; 12c00 <export_data_element_to_ascii@@Base+0x104>
   12b20:	add	r0, pc, r0
   12b24:	movw	r1, #0
   12b28:	str	r1, [r0]
   12b2c:	b	12b48 <export_data_element_to_ascii@@Base+0x4c>
   12b30:	ldr	r0, [pc, #192]	; 12bf8 <export_data_element_to_ascii@@Base+0xfc>
   12b34:	add	r1, pc, r0
   12b38:	ldr	r0, [pc, #188]	; 12bfc <export_data_element_to_ascii@@Base+0x100>
   12b3c:	ldr	r0, [pc, r0]
   12b40:	ldr	r0, [r0]
   12b44:	bl	12814 <fprintf@plt>
   12b48:	ldr	r0, [pc, #180]	; 12c04 <export_data_element_to_ascii@@Base+0x108>
   12b4c:	ldr	r0, [pc, r0]
   12b50:	ldr	r0, [r0]
   12b54:	cmp	r0, #0
   12b58:	beq	12b8c <export_data_element_to_ascii@@Base+0x90>
   12b5c:	ldr	r0, [pc, #172]	; 12c10 <export_data_element_to_ascii@@Base+0x114>
   12b60:	ldr	r0, [pc, r0]
   12b64:	ldr	r0, [r0]
   12b68:	movw	r1, #2
   12b6c:	movw	r2, #0
   12b70:	bl	19088 <print_full_field_name@@Base>
   12b74:	ldr	r0, [pc, #140]	; 12c08 <export_data_element_to_ascii@@Base+0x10c>
   12b78:	add	r1, pc, r0
   12b7c:	ldr	r0, [pc, #136]	; 12c0c <export_data_element_to_ascii@@Base+0x110>
   12b80:	ldr	r0, [pc, r0]
   12b84:	ldr	r0, [r0]
   12b88:	bl	12814 <fprintf@plt>
   12b8c:	ldr	r0, [pc, #128]	; 12c14 <export_data_element_to_ascii@@Base+0x118>
   12b90:	ldr	r0, [pc, r0]
   12b94:	ldr	r0, [r0]
   12b98:	cmp	r0, #0
   12b9c:	ble	12bcc <export_data_element_to_ascii@@Base+0xd0>
   12ba0:	ldr	r0, [pc, #116]	; 12c1c <export_data_element_to_ascii@@Base+0x120>
   12ba4:	ldr	r0, [pc, r0]
   12ba8:	ldr	r1, [r0]
   12bac:	add	r0, r0, r1, lsl #3
   12bb0:	ldr	r1, [r0, #296]	; 0x128
   12bb4:	ldr	r0, [r0, #300]	; 0x12c
   12bb8:	orr	r0, r1, r0
   12bbc:	cmp	r0, #0
   12bc0:	bne	12bcc <export_data_element_to_ascii@@Base+0xd0>
   12bc4:	b	12bc8 <export_data_element_to_ascii@@Base+0xcc>
   12bc8:	b	12bec <export_data_element_to_ascii@@Base+0xf0>
   12bcc:	ldr	r0, [pc, #68]	; 12c18 <export_data_element_to_ascii@@Base+0x11c>
   12bd0:	ldr	r0, [pc, r0]
   12bd4:	ldr	r0, [r0]
   12bd8:	movw	r1, #0
   12bdc:	str	r1, [sp, #4]
   12be0:	ldr	r2, [sp, #4]
   12be4:	ldr	r3, [sp, #4]
   12be8:	bl	12c20 <export_data_element_to_ascii@@Base+0x124>
   12bec:	mov	sp, fp
   12bf0:	pop	{fp, pc}
   12bf4:	strdeq	lr, [r1], -ip
   12bf8:	andeq	sp, r0, r7, lsr sl
   12bfc:	andeq	lr, r1, ip, ror r6
   12c00:	andeq	lr, r1, r8, ror #13
   12c04:	andeq	lr, r1, ip, lsr #13
   12c08:	strdeq	sp, [r0], -r3
   12c0c:	andeq	lr, r1, r8, lsr r6
   12c10:	andeq	lr, r1, r8, asr r6
   12c14:	andeq	lr, r1, r0, ror #12
   12c18:	andeq	lr, r1, r8, ror #11
   12c1c:	andeq	lr, r1, ip, asr #12
   12c20:	push	{fp, lr}
   12c24:	mov	fp, sp
   12c28:	sub	sp, sp, #96	; 0x60
   12c2c:	ldr	ip, [pc, #1268]	; 13128 <export_data_element_to_ascii@@Base+0x62c>
   12c30:	ldr	ip, [pc, ip]
   12c34:	add	ip, ip, #8
   12c38:	str	r0, [fp, #-4]
   12c3c:	str	r1, [fp, #-8]
   12c40:	str	r2, [fp, #-12]
   12c44:	str	r3, [fp, #-16]
   12c48:	ldr	r0, [fp, #-8]
   12c4c:	ldr	r1, [pc, #1316]	; 13178 <export_data_element_to_ascii@@Base+0x67c>
   12c50:	ldr	r1, [pc, r1]
   12c54:	add	r0, r1, r0, lsl #2
   12c58:	add	r0, r0, #8
   12c5c:	ldr	r0, [r0]
   12c60:	sub	r1, fp, #20
   12c64:	str	ip, [sp, #12]
   12c68:	bl	12a00 <coda_type_get_class@plt>
   12c6c:	cmp	r0, #0
   12c70:	beq	12c80 <export_data_element_to_ascii@@Base+0x184>
   12c74:	ldr	r0, [pc, #1200]	; 1312c <export_data_element_to_ascii@@Base+0x630>
   12c78:	ldr	r0, [pc, r0]
   12c7c:	blx	r0
   12c80:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c84:	cmp	r0, #0
   12c88:	str	r0, [sp, #8]
   12c8c:	beq	1302c <export_data_element_to_ascii@@Base+0x530>
   12c90:	b	12c94 <export_data_element_to_ascii@@Base+0x198>
   12c94:	ldr	r0, [sp, #8]
   12c98:	cmp	r0, #1
   12c9c:	bne	13114 <export_data_element_to_ascii@@Base+0x618>
   12ca0:	b	12ca4 <export_data_element_to_ascii@@Base+0x1a8>
   12ca4:	ldr	r0, [pc, #1176]	; 13144 <export_data_element_to_ascii@@Base+0x648>
   12ca8:	ldr	r0, [pc, r0]
   12cac:	add	r0, r0, #800	; 0x320
   12cb0:	ldr	r1, [fp, #-12]
   12cb4:	movw	r2, #80	; 0x50
   12cb8:	mul	r1, r1, r2
   12cbc:	add	r0, r0, r1
   12cc0:	str	r0, [fp, #-24]	; 0xffffffe8
   12cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cc8:	ldr	r0, [r0]
   12ccc:	str	r0, [sp, #28]
   12cd0:	ldr	r0, [fp, #-12]
   12cd4:	cmp	r0, #0
   12cd8:	bne	12ce8 <export_data_element_to_ascii@@Base+0x1ec>
   12cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ce0:	movw	r1, #0
   12ce4:	str	r1, [r0, #44]	; 0x2c
   12ce8:	ldr	r0, [pc, #1112]	; 13148 <export_data_element_to_ascii@@Base+0x64c>
   12cec:	ldr	r0, [pc, r0]
   12cf0:	ldr	r0, [r0, #104]	; 0x68
   12cf4:	ldr	r1, [sp, #28]
   12cf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12cfc:	ldr	r2, [r2, #4]
   12d00:	add	r1, r1, r2
   12d04:	cmp	r0, r1
   12d08:	movw	r0, #0
   12d0c:	movge	r0, #1
   12d10:	and	r0, r0, #1
   12d14:	str	r0, [fp, #-32]	; 0xffffffe0
   12d18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d1c:	cmp	r0, #0
   12d20:	beq	12d78 <export_data_element_to_ascii@@Base+0x27c>
   12d24:	ldr	r0, [pc, #1056]	; 1314c <export_data_element_to_ascii@@Base+0x650>
   12d28:	ldr	r0, [pc, r0]
   12d2c:	ldr	r1, [fp, #-12]
   12d30:	ldr	r0, [r0, #3360]	; 0xd20
   12d34:	sub	r0, r0, #1
   12d38:	cmp	r1, r0
   12d3c:	bge	12d78 <export_data_element_to_ascii@@Base+0x27c>
   12d40:	ldr	r0, [pc, #1032]	; 13150 <export_data_element_to_ascii@@Base+0x654>
   12d44:	ldr	r0, [pc, r0]
   12d48:	add	r0, r0, #800	; 0x320
   12d4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d50:	ldr	r1, [r1, #44]	; 0x2c
   12d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d58:	ldr	r2, [r2, #40]	; 0x28
   12d5c:	mul	r1, r1, r2
   12d60:	ldr	r2, [fp, #-12]
   12d64:	add	r2, r2, #1
   12d68:	movw	r3, #80	; 0x50
   12d6c:	mul	r2, r2, r3
   12d70:	add	r0, r0, r2
   12d74:	str	r1, [r0, #44]	; 0x2c
   12d78:	movw	r0, #1
   12d7c:	str	r0, [fp, #-28]	; 0xffffffe4
   12d80:	movw	r0, #0
   12d84:	str	r0, [sp, #24]
   12d88:	ldr	r0, [sp, #24]
   12d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d90:	ldr	r1, [r1, #4]
   12d94:	cmp	r0, r1
   12d98:	bge	12e70 <export_data_element_to_ascii@@Base+0x374>
   12d9c:	ldr	r0, [pc, #976]	; 13174 <export_data_element_to_ascii@@Base+0x678>
   12da0:	ldr	r0, [pc, r0]
   12da4:	add	r0, r0, #72	; 0x48
   12da8:	ldr	r1, [sp, #28]
   12dac:	ldr	r2, [sp, #24]
   12db0:	add	r1, r1, r2
   12db4:	ldr	r2, [pc, #960]	; 1317c <export_data_element_to_ascii@@Base+0x680>
   12db8:	ldr	r2, [pc, r2]
   12dbc:	add	r1, r2, r1, lsl #2
   12dc0:	add	r1, r1, #72	; 0x48
   12dc4:	ldr	r1, [r1]
   12dc8:	cmp	r1, #0
   12dcc:	beq	12e08 <export_data_element_to_ascii@@Base+0x30c>
   12dd0:	ldr	r0, [sp, #28]
   12dd4:	ldr	r1, [sp, #24]
   12dd8:	add	r0, r0, r1
   12ddc:	ldr	r2, [pc, #924]	; 13180 <export_data_element_to_ascii@@Base+0x684>
   12de0:	ldr	r2, [pc, r2]
   12de4:	add	r0, r2, r0, lsl #2
   12de8:	ldr	r0, [r0, #108]	; 0x6c
   12dec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12df0:	ldr	r2, [r2, #44]	; 0x2c
   12df4:	ldr	r0, [r0, r2, lsl #2]
   12df8:	add	r2, sp, #32
   12dfc:	add	r1, r2, r1, lsl #2
   12e00:	str	r0, [r1]
   12e04:	b	12e30 <export_data_element_to_ascii@@Base+0x334>
   12e08:	ldr	r0, [sp, #28]
   12e0c:	ldr	r1, [sp, #24]
   12e10:	add	r0, r0, r1
   12e14:	ldr	r2, [pc, #872]	; 13184 <export_data_element_to_ascii@@Base+0x688>
   12e18:	ldr	r2, [pc, r2]
   12e1c:	add	r0, r2, r0, lsl #2
   12e20:	ldr	r0, [r0, #4]
   12e24:	add	r2, sp, #32
   12e28:	add	r1, r2, r1, lsl #2
   12e2c:	str	r0, [r1]
   12e30:	ldr	r0, [sp, #24]
   12e34:	add	r1, sp, #32
   12e38:	ldr	r0, [r1, r0, lsl #2]
   12e3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e40:	mul	r0, r1, r0
   12e44:	str	r0, [fp, #-28]	; 0xffffffe4
   12e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e4c:	add	r0, r0, #48	; 0x30
   12e50:	ldr	r1, [sp, #24]
   12e54:	add	r0, r0, r1, lsl #2
   12e58:	movw	r1, #0
   12e5c:	str	r1, [r0]
   12e60:	ldr	r0, [sp, #24]
   12e64:	add	r0, r0, #1
   12e68:	str	r0, [sp, #24]
   12e6c:	b	12d88 <export_data_element_to_ascii@@Base+0x28c>
   12e70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e74:	cmp	r0, #0
   12e78:	bne	12e80 <export_data_element_to_ascii@@Base+0x384>
   12e7c:	b	13120 <export_data_element_to_ascii@@Base+0x624>
   12e80:	ldr	r0, [pc, #716]	; 13154 <export_data_element_to_ascii@@Base+0x658>
   12e84:	ldr	r0, [pc, r0]
   12e88:	add	r0, r0, #144	; 0x90
   12e8c:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   12e90:	cmp	r0, #0
   12e94:	beq	12ea4 <export_data_element_to_ascii@@Base+0x3a8>
   12e98:	ldr	r0, [pc, #696]	; 13158 <export_data_element_to_ascii@@Base+0x65c>
   12e9c:	ldr	r0, [pc, r0]
   12ea0:	blx	r0
   12ea4:	movw	r0, #0
   12ea8:	str	r0, [sp, #24]
   12eac:	ldr	r0, [sp, #24]
   12eb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12eb4:	cmp	r0, r1
   12eb8:	bge	13018 <export_data_element_to_ascii@@Base+0x51c>
   12ebc:	ldr	r0, [fp, #-4]
   12ec0:	ldr	r1, [fp, #-8]
   12ec4:	add	r1, r1, #1
   12ec8:	ldr	r2, [fp, #-12]
   12ecc:	add	r2, r2, #1
   12ed0:	ldr	r3, [fp, #-16]
   12ed4:	bl	12c20 <export_data_element_to_ascii@@Base+0x124>
   12ed8:	ldr	r0, [sp, #24]
   12edc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ee0:	sub	r1, r1, #1
   12ee4:	cmp	r0, r1
   12ee8:	bge	13004 <export_data_element_to_ascii@@Base+0x508>
   12eec:	ldr	r0, [pc, #620]	; 13160 <export_data_element_to_ascii@@Base+0x664>
   12ef0:	ldr	r0, [pc, r0]
   12ef4:	add	r0, r0, #144	; 0x90
   12ef8:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   12efc:	cmp	r0, #0
   12f00:	beq	12f10 <export_data_element_to_ascii@@Base+0x414>
   12f04:	ldr	r0, [pc, #600]	; 13164 <export_data_element_to_ascii@@Base+0x668>
   12f08:	ldr	r0, [pc, r0]
   12f0c:	blx	r0
   12f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f14:	cmp	r0, #0
   12f18:	beq	12f64 <export_data_element_to_ascii@@Base+0x468>
   12f1c:	ldr	r0, [pc, #580]	; 13168 <export_data_element_to_ascii@@Base+0x66c>
   12f20:	ldr	r0, [pc, r0]
   12f24:	ldr	r1, [fp, #-12]
   12f28:	ldr	r0, [r0, #3360]	; 0xd20
   12f2c:	sub	r0, r0, #1
   12f30:	cmp	r1, r0
   12f34:	bge	12f64 <export_data_element_to_ascii@@Base+0x468>
   12f38:	ldr	r0, [pc, #556]	; 1316c <export_data_element_to_ascii@@Base+0x670>
   12f3c:	ldr	r0, [pc, r0]
   12f40:	add	r0, r0, #800	; 0x320
   12f44:	ldr	r1, [fp, #-12]
   12f48:	add	r1, r1, #1
   12f4c:	movw	r2, #80	; 0x50
   12f50:	mul	r1, r1, r2
   12f54:	add	r0, r0, r1
   12f58:	ldr	r1, [r0, #44]	; 0x2c
   12f5c:	add	r1, r1, #1
   12f60:	str	r1, [r0, #44]	; 0x2c
   12f64:	ldr	r0, [pc, #516]	; 13170 <export_data_element_to_ascii@@Base+0x674>
   12f68:	ldr	r0, [pc, r0]
   12f6c:	ldr	r0, [r0]
   12f70:	cmp	r0, #0
   12f74:	beq	13000 <export_data_element_to_ascii@@Base+0x504>
   12f78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f7c:	ldr	r0, [r0, #4]
   12f80:	sub	r0, r0, #1
   12f84:	str	r0, [sp, #20]
   12f88:	ldr	r0, [sp, #20]
   12f8c:	cmp	r0, #0
   12f90:	blt	12ffc <export_data_element_to_ascii@@Base+0x500>
   12f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f98:	ldr	r1, [sp, #20]
   12f9c:	add	r0, r0, r1, lsl #2
   12fa0:	ldr	r1, [r0, #48]	; 0x30
   12fa4:	add	r1, r1, #1
   12fa8:	str	r1, [r0, #48]	; 0x30
   12fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fb0:	ldr	r1, [sp, #20]
   12fb4:	add	r0, r0, r1, lsl #2
   12fb8:	ldr	r0, [r0, #48]	; 0x30
   12fbc:	add	r2, sp, #32
   12fc0:	add	r1, r2, r1, lsl #2
   12fc4:	ldr	r1, [r1]
   12fc8:	cmp	r0, r1
   12fcc:	bne	12ff4 <export_data_element_to_ascii@@Base+0x4f8>
   12fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fd4:	add	r0, r0, #48	; 0x30
   12fd8:	ldr	r1, [sp, #20]
   12fdc:	sub	r2, r1, #1
   12fe0:	str	r2, [sp, #20]
   12fe4:	add	r0, r0, r1, lsl #2
   12fe8:	movw	r1, #0
   12fec:	str	r1, [r0]
   12ff0:	b	12ff8 <export_data_element_to_ascii@@Base+0x4fc>
   12ff4:	b	12ffc <export_data_element_to_ascii@@Base+0x500>
   12ff8:	b	12f88 <export_data_element_to_ascii@@Base+0x48c>
   12ffc:	b	13000 <export_data_element_to_ascii@@Base+0x504>
   13000:	b	13004 <export_data_element_to_ascii@@Base+0x508>
   13004:	b	13008 <export_data_element_to_ascii@@Base+0x50c>
   13008:	ldr	r0, [sp, #24]
   1300c:	add	r0, r0, #1
   13010:	str	r0, [sp, #24]
   13014:	b	12eac <export_data_element_to_ascii@@Base+0x3b0>
   13018:	ldr	r0, [pc, #316]	; 1315c <export_data_element_to_ascii@@Base+0x660>
   1301c:	ldr	r0, [pc, r0]
   13020:	add	r0, r0, #144	; 0x90
   13024:	bl	127b4 <coda_cursor_goto_parent@plt>
   13028:	b	13120 <export_data_element_to_ascii@@Base+0x624>
   1302c:	ldr	r0, [pc, #252]	; 13130 <export_data_element_to_ascii@@Base+0x634>
   13030:	ldr	r0, [pc, r0]
   13034:	add	r1, r0, #144	; 0x90
   13038:	movw	r2, #3492	; 0xda4
   1303c:	add	r0, r0, r2
   13040:	ldr	r2, [fp, #-16]
   13044:	ldr	r3, [pc, #316]	; 13188 <export_data_element_to_ascii@@Base+0x68c>
   13048:	ldr	r3, [pc, r3]
   1304c:	add	r2, r3, r2, lsl #2
   13050:	movw	r3, #3492	; 0xda4
   13054:	add	r2, r2, r3
   13058:	ldr	r2, [r2]
   1305c:	str	r0, [sp, #4]
   13060:	mov	r0, r1
   13064:	mov	r1, r2
   13068:	add	r2, sp, #16
   1306c:	bl	125f8 <coda_cursor_get_record_field_available_status@plt>
   13070:	cmp	r0, #0
   13074:	beq	13084 <export_data_element_to_ascii@@Base+0x588>
   13078:	ldr	r0, [pc, #180]	; 13134 <export_data_element_to_ascii@@Base+0x638>
   1307c:	ldr	r0, [pc, r0]
   13080:	blx	r0
   13084:	ldr	r0, [sp, #16]
   13088:	cmp	r0, #0
   1308c:	beq	13110 <export_data_element_to_ascii@@Base+0x614>
   13090:	ldr	r0, [pc, #160]	; 13138 <export_data_element_to_ascii@@Base+0x63c>
   13094:	ldr	r0, [pc, r0]
   13098:	add	r1, r0, #144	; 0x90
   1309c:	movw	r2, #3492	; 0xda4
   130a0:	add	r0, r0, r2
   130a4:	ldr	r2, [fp, #-16]
   130a8:	ldr	r3, [pc, #220]	; 1318c <export_data_element_to_ascii@@Base+0x690>
   130ac:	ldr	r3, [pc, r3]
   130b0:	add	r2, r3, r2, lsl #2
   130b4:	movw	r3, #3492	; 0xda4
   130b8:	add	r2, r2, r3
   130bc:	ldr	r2, [r2]
   130c0:	str	r0, [sp]
   130c4:	mov	r0, r1
   130c8:	mov	r1, r2
   130cc:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   130d0:	cmp	r0, #0
   130d4:	beq	130e4 <export_data_element_to_ascii@@Base+0x5e8>
   130d8:	ldr	r0, [pc, #92]	; 1313c <export_data_element_to_ascii@@Base+0x640>
   130dc:	ldr	r0, [pc, r0]
   130e0:	blx	r0
   130e4:	ldr	r0, [fp, #-4]
   130e8:	ldr	r1, [fp, #-8]
   130ec:	add	r1, r1, #1
   130f0:	ldr	r2, [fp, #-12]
   130f4:	ldr	r3, [fp, #-16]
   130f8:	add	r3, r3, #1
   130fc:	bl	12c20 <export_data_element_to_ascii@@Base+0x124>
   13100:	ldr	r0, [pc, #56]	; 13140 <export_data_element_to_ascii@@Base+0x644>
   13104:	ldr	r0, [pc, r0]
   13108:	add	r0, r0, #144	; 0x90
   1310c:	bl	127b4 <coda_cursor_goto_parent@plt>
   13110:	b	13120 <export_data_element_to_ascii@@Base+0x624>
   13114:	ldr	r0, [fp, #-4]
   13118:	ldr	r1, [fp, #-8]
   1311c:	bl	13190 <export_data_element_to_ascii@@Base+0x694>
   13120:	mov	sp, fp
   13124:	pop	{fp, pc}
   13128:	andeq	lr, r1, ip, ror r5
   1312c:	andeq	lr, r1, r0, ror #10
   13130:	andeq	lr, r1, ip, ror r1
   13134:	andeq	lr, r1, ip, asr r1
   13138:	andeq	lr, r1, r8, lsl r1
   1313c:	strdeq	lr, [r1], -ip
   13140:	andeq	lr, r1, r8, lsr #1
   13144:	andeq	lr, r1, r4, lsl #10
   13148:	andeq	lr, r1, r4, lsl #10
   1314c:	andeq	lr, r1, r4, lsl #9
   13150:	andeq	lr, r1, r8, ror #8
   13154:	andeq	lr, r1, r8, lsr #6
   13158:	andeq	lr, r1, ip, lsr r3
   1315c:	muleq	r1, r0, r1
   13160:			; <UNDEFINED> instruction: 0x0001e2bc
   13164:	ldrdeq	lr, [r1], -r0
   13168:	andeq	lr, r1, ip, lsl #5
   1316c:	andeq	lr, r1, r0, ror r2
   13170:	andeq	lr, r1, r0, ror #4
   13174:	andeq	lr, r1, r0, asr r4
   13178:	andeq	lr, r1, ip, asr r5
   1317c:	andeq	lr, r1, r8, lsr r4
   13180:	andeq	lr, r1, r0, lsl r4
   13184:	ldrdeq	lr, [r1], -r8
   13188:	andeq	lr, r1, r4, ror #2
   1318c:	andeq	lr, r1, r0, lsl #2
   13190:	push	{r4, r5, fp, lr}
   13194:	add	fp, sp, #8
   13198:	sub	sp, sp, #264	; 0x108
   1319c:	ldr	r2, [pc, #2376]	; 13aec <export_data_element_to_ascii@@Base+0xff0>
   131a0:	ldr	r2, [pc, r2]
   131a4:	str	r0, [fp, #-12]
   131a8:	str	r1, [fp, #-16]
   131ac:	ldr	r0, [r2]
   131b0:	cmp	r0, #0
   131b4:	beq	131c0 <export_data_element_to_ascii@@Base+0x6c4>
   131b8:	ldr	r0, [fp, #-12]
   131bc:	bl	13c2c <export_data_element_to_ascii@@Base+0x1130>
   131c0:	ldr	r0, [pc, #2344]	; 13af0 <export_data_element_to_ascii@@Base+0xff4>
   131c4:	ldr	r0, [pc, r0]
   131c8:	add	r0, r0, #8
   131cc:	ldr	r1, [fp, #-16]
   131d0:	ldr	r2, [pc, #2624]	; 13c18 <export_data_element_to_ascii@@Base+0x111c>
   131d4:	ldr	r2, [pc, r2]
   131d8:	add	r1, r2, r1, lsl #2
   131dc:	add	r1, r1, #8
   131e0:	ldr	r1, [r1]
   131e4:	str	r0, [sp, #52]	; 0x34
   131e8:	mov	r0, r1
   131ec:	sub	r1, fp, #20
   131f0:	bl	12a00 <coda_type_get_class@plt>
   131f4:	cmp	r0, #0
   131f8:	beq	13208 <export_data_element_to_ascii@@Base+0x70c>
   131fc:	ldr	r0, [pc, #2288]	; 13af4 <export_data_element_to_ascii@@Base+0xff8>
   13200:	ldr	r0, [pc, r0]
   13204:	blx	r0
   13208:	ldr	r0, [fp, #-20]	; 0xffffffec
   1320c:	cmp	r0, #2
   13210:	str	r0, [sp, #48]	; 0x30
   13214:	bcc	13ab4 <export_data_element_to_ascii@@Base+0xfb8>
   13218:	b	1321c <export_data_element_to_ascii@@Base+0x720>
   1321c:	ldr	r0, [sp, #48]	; 0x30
   13220:	sub	r1, r0, #2
   13224:	cmp	r1, #4
   13228:	bcc	13240 <export_data_element_to_ascii@@Base+0x744>
   1322c:	b	13230 <export_data_element_to_ascii@@Base+0x734>
   13230:	ldr	r0, [sp, #48]	; 0x30
   13234:	cmp	r0, #6
   13238:	beq	138c0 <export_data_element_to_ascii@@Base+0xdc4>
   1323c:	b	13ad4 <export_data_element_to_ascii@@Base+0xfd8>
   13240:	ldr	r0, [pc, #2296]	; 13b40 <export_data_element_to_ascii@@Base+0x1044>
   13244:	ldr	r0, [pc, r0]
   13248:	add	r0, r0, #8
   1324c:	ldr	r1, [fp, #-16]
   13250:	ldr	r2, [pc, #2500]	; 13c1c <export_data_element_to_ascii@@Base+0x1120>
   13254:	ldr	r2, [pc, r2]
   13258:	add	r1, r2, r1, lsl #2
   1325c:	add	r1, r1, #8
   13260:	ldr	r1, [r1]
   13264:	str	r0, [sp, #44]	; 0x2c
   13268:	mov	r0, r1
   1326c:	sub	r1, fp, #24
   13270:	bl	127d8 <coda_type_get_read_type@plt>
   13274:	cmp	r0, #0
   13278:	beq	13288 <export_data_element_to_ascii@@Base+0x78c>
   1327c:	ldr	r0, [pc, #2240]	; 13b44 <export_data_element_to_ascii@@Base+0x1048>
   13280:	ldr	r0, [pc, r0]
   13284:	blx	r0
   13288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1328c:	add	r0, r0, #1
   13290:	cmp	r0, #13
   13294:	str	r0, [sp, #40]	; 0x28
   13298:	bhi	138bc <export_data_element_to_ascii@@Base+0xdc0>
   1329c:	add	r0, pc, #8
   132a0:	ldr	r1, [sp, #40]	; 0x28
   132a4:	ldr	r2, [r0, r1, lsl #2]
   132a8:	add	pc, r0, r2
   132ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   132b0:	andeq	r0, r0, r4, ror #8
   132b4:	andeq	r0, r0, r4, lsr #9
   132b8:	andeq	r0, r0, r4, ror #8
   132bc:	andeq	r0, r0, r4, lsr #9
   132c0:	andeq	r0, r0, r4, ror #8
   132c4:	andeq	r0, r0, r4, lsr #9
   132c8:	andeq	r0, r0, r4, ror #9
   132cc:	andeq	r0, r0, r4, lsr r5
   132d0:	andeq	r0, r0, r4, lsl #11
   132d4:	andeq	r0, r0, r4, lsl #11
   132d8:	andeq	r0, r0, r8, lsr r0
   132dc:	andeq	r0, r0, r4, lsr #1
   132e0:	muleq	r0, ip, r1
   132e4:	ldr	r0, [pc, #2324]	; 13c00 <export_data_element_to_ascii@@Base+0x1104>
   132e8:	ldr	r0, [pc, r0]
   132ec:	add	r0, r0, #144	; 0x90
   132f0:	sub	r1, fp, #25
   132f4:	bl	1285c <coda_cursor_read_char@plt>
   132f8:	cmp	r0, #0
   132fc:	beq	1330c <export_data_element_to_ascii@@Base+0x810>
   13300:	ldr	r0, [pc, #2300]	; 13c04 <export_data_element_to_ascii@@Base+0x1108>
   13304:	ldr	r0, [pc, r0]
   13308:	blx	r0
   1330c:	ldr	r0, [pc, #2292]	; 13c08 <export_data_element_to_ascii@@Base+0x110c>
   13310:	ldr	r0, [pc, r0]
   13314:	ldr	r0, [r0]
   13318:	cmp	r0, #0
   1331c:	beq	13338 <export_data_element_to_ascii@@Base+0x83c>
   13320:	ldr	r0, [pc, #2280]	; 13c10 <export_data_element_to_ascii@@Base+0x1114>
   13324:	add	r1, pc, r0
   13328:	ldr	r0, [fp, #-12]
   1332c:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   13330:	bl	12814 <fprintf@plt>
   13334:	b	1334c <export_data_element_to_ascii@@Base+0x850>
   13338:	ldr	r0, [pc, #2252]	; 13c0c <export_data_element_to_ascii@@Base+0x1110>
   1333c:	add	r1, pc, r0
   13340:	ldr	r0, [fp, #-12]
   13344:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   13348:	bl	12814 <fprintf@plt>
   1334c:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   13350:	ldr	r0, [pc, #2176]	; 13bd8 <export_data_element_to_ascii@@Base+0x10dc>
   13354:	ldr	r0, [pc, r0]
   13358:	add	r0, r0, #144	; 0x90
   1335c:	sub	r1, fp, #32
   13360:	bl	127e4 <coda_cursor_get_string_length@plt>
   13364:	cmp	r0, #0
   13368:	beq	13378 <export_data_element_to_ascii@@Base+0x87c>
   1336c:	ldr	r0, [pc, #2152]	; 13bdc <export_data_element_to_ascii@@Base+0x10e0>
   13370:	ldr	r0, [pc, r0]
   13374:	blx	r0
   13378:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1337c:	add	r0, r0, #1
   13380:	bl	12784 <malloc@plt>
   13384:	str	r0, [fp, #-36]	; 0xffffffdc
   13388:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1338c:	movw	r1, #0
   13390:	cmp	r0, r1
   13394:	bne	133cc <export_data_element_to_ascii@@Base+0x8d0>
   13398:	ldr	r0, [pc, #2116]	; 13be4 <export_data_element_to_ascii@@Base+0x10e8>
   1339c:	add	r1, pc, r0
   133a0:	ldr	r0, [pc, #2112]	; 13be8 <export_data_element_to_ascii@@Base+0x10ec>
   133a4:	add	r3, pc, r0
   133a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133ac:	add	r2, r0, #1
   133b0:	mvn	r0, #0
   133b4:	movw	ip, #126	; 0x7e
   133b8:	str	ip, [sp]
   133bc:	bl	12610 <coda_set_error@plt>
   133c0:	ldr	r0, [pc, #2072]	; 13be0 <export_data_element_to_ascii@@Base+0x10e4>
   133c4:	ldr	r0, [pc, r0]
   133c8:	blx	r0
   133cc:	ldr	r0, [pc, #2072]	; 13bec <export_data_element_to_ascii@@Base+0x10f0>
   133d0:	ldr	r0, [pc, r0]
   133d4:	add	r0, r0, #144	; 0x90
   133d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   133dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   133e0:	add	r2, r2, #1
   133e4:	bl	127a8 <coda_cursor_read_string@plt>
   133e8:	cmp	r0, #0
   133ec:	beq	133fc <export_data_element_to_ascii@@Base+0x900>
   133f0:	ldr	r0, [pc, #2040]	; 13bf0 <export_data_element_to_ascii@@Base+0x10f4>
   133f4:	ldr	r0, [pc, r0]
   133f8:	blx	r0
   133fc:	ldr	r0, [pc, #2032]	; 13bf4 <export_data_element_to_ascii@@Base+0x10f8>
   13400:	ldr	r0, [pc, r0]
   13404:	ldr	r0, [r0]
   13408:	cmp	r0, #0
   1340c:	beq	13428 <export_data_element_to_ascii@@Base+0x92c>
   13410:	ldr	r0, [pc, #2020]	; 13bfc <export_data_element_to_ascii@@Base+0x1100>
   13414:	add	r1, pc, r0
   13418:	ldr	r0, [fp, #-12]
   1341c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13420:	bl	12814 <fprintf@plt>
   13424:	b	1343c <export_data_element_to_ascii@@Base+0x940>
   13428:	ldr	r0, [pc, #1992]	; 13bf8 <export_data_element_to_ascii@@Base+0x10fc>
   1342c:	add	r1, pc, r0
   13430:	ldr	r0, [fp, #-12]
   13434:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13438:	bl	12814 <fprintf@plt>
   1343c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13440:	bl	12658 <free@plt>
   13444:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   13448:	ldr	r0, [pc, #1860]	; 13b94 <export_data_element_to_ascii@@Base+0x1098>
   1344c:	ldr	r0, [pc, r0]
   13450:	add	r0, r0, #144	; 0x90
   13454:	sub	r1, fp, #48	; 0x30
   13458:	bl	1294c <coda_cursor_get_bit_size@plt>
   1345c:	cmp	r0, #0
   13460:	beq	13470 <export_data_element_to_ascii@@Base+0x974>
   13464:	ldr	r0, [pc, #1836]	; 13b98 <export_data_element_to_ascii@@Base+0x109c>
   13468:	ldr	r0, [pc, r0]
   1346c:	blx	r0
   13470:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13474:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13478:	lsr	r2, r0, #3
   1347c:	orr	r2, r2, r1, lsl #29
   13480:	asr	r1, r1, #3
   13484:	and	r0, r0, #7
   13488:	adds	r3, r2, #1
   1348c:	adc	ip, r1, #0
   13490:	cmp	r0, #0
   13494:	movne	r2, r3
   13498:	cmp	r0, #0
   1349c:	movne	r1, ip
   134a0:	str	r2, [fp, #-56]	; 0xffffffc8
   134a4:	str	r1, [fp, #-52]	; 0xffffffcc
   134a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   134ac:	bl	12784 <malloc@plt>
   134b0:	str	r0, [fp, #-60]	; 0xffffffc4
   134b4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134b8:	movw	r1, #0
   134bc:	cmp	r0, r1
   134c0:	bne	134f4 <export_data_element_to_ascii@@Base+0x9f8>
   134c4:	ldr	r0, [pc, #1748]	; 13ba0 <export_data_element_to_ascii@@Base+0x10a4>
   134c8:	add	r1, pc, r0
   134cc:	ldr	r0, [pc, #1744]	; 13ba4 <export_data_element_to_ascii@@Base+0x10a8>
   134d0:	add	r3, pc, r0
   134d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   134d8:	mvn	r0, #0
   134dc:	movw	ip, #163	; 0xa3
   134e0:	str	ip, [sp]
   134e4:	bl	12610 <coda_set_error@plt>
   134e8:	ldr	r0, [pc, #1708]	; 13b9c <export_data_element_to_ascii@@Base+0x10a0>
   134ec:	ldr	r0, [pc, r0]
   134f0:	blx	r0
   134f4:	ldr	r0, [pc, #1708]	; 13ba8 <export_data_element_to_ascii@@Base+0x10ac>
   134f8:	ldr	r0, [pc, r0]
   134fc:	add	r0, r0, #144	; 0x90
   13500:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13504:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13508:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1350c:	mov	ip, sp
   13510:	str	r3, [ip, #4]
   13514:	str	r2, [ip]
   13518:	ldr	r2, [pc, #1792]	; 13c20 <export_data_element_to_ascii@@Base+0x1124>
   1351c:	ldr	r2, [pc, r2]
   13520:	add	r2, r2, #144	; 0x90
   13524:	mov	r3, #0
   13528:	str	r0, [sp, #36]	; 0x24
   1352c:	mov	r0, r2
   13530:	mov	r2, r3
   13534:	bl	129dc <coda_cursor_read_bits@plt>
   13538:	cmp	r0, #0
   1353c:	beq	1354c <export_data_element_to_ascii@@Base+0xa50>
   13540:	ldr	r0, [pc, #1636]	; 13bac <export_data_element_to_ascii@@Base+0x10b0>
   13544:	ldr	r0, [pc, r0]
   13548:	blx	r0
   1354c:	movw	r0, #0
   13550:	str	r0, [fp, #-64]	; 0xffffffc0
   13554:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13558:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1355c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13560:	subs	r1, r0, r1
   13564:	rscs	r0, r2, r0, asr #31
   13568:	bge	13704 <export_data_element_to_ascii@@Base+0xc08>
   1356c:	b	13570 <export_data_element_to_ascii@@Base+0xa74>
   13570:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13574:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13578:	ldrb	r0, [r0, r1]
   1357c:	strb	r0, [fp, #-65]	; 0xffffffbf
   13580:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13584:	mov	r1, r0
   13588:	cmp	r0, #7
   1358c:	str	r1, [sp, #32]
   13590:	beq	13608 <export_data_element_to_ascii@@Base+0xb0c>
   13594:	b	13598 <export_data_element_to_ascii@@Base+0xa9c>
   13598:	ldr	r0, [sp, #32]
   1359c:	cmp	r0, #8
   135a0:	beq	1361c <export_data_element_to_ascii@@Base+0xb20>
   135a4:	b	135a8 <export_data_element_to_ascii@@Base+0xaac>
   135a8:	ldr	r0, [sp, #32]
   135ac:	cmp	r0, #9
   135b0:	beq	13630 <export_data_element_to_ascii@@Base+0xb34>
   135b4:	b	135b8 <export_data_element_to_ascii@@Base+0xabc>
   135b8:	ldr	r0, [sp, #32]
   135bc:	cmp	r0, #10
   135c0:	beq	13644 <export_data_element_to_ascii@@Base+0xb48>
   135c4:	b	135c8 <export_data_element_to_ascii@@Base+0xacc>
   135c8:	ldr	r0, [sp, #32]
   135cc:	cmp	r0, #11
   135d0:	beq	13658 <export_data_element_to_ascii@@Base+0xb5c>
   135d4:	b	135d8 <export_data_element_to_ascii@@Base+0xadc>
   135d8:	ldr	r0, [sp, #32]
   135dc:	cmp	r0, #12
   135e0:	beq	1366c <export_data_element_to_ascii@@Base+0xb70>
   135e4:	b	135e8 <export_data_element_to_ascii@@Base+0xaec>
   135e8:	ldr	r0, [sp, #32]
   135ec:	cmp	r0, #13
   135f0:	beq	13680 <export_data_element_to_ascii@@Base+0xb84>
   135f4:	b	135f8 <export_data_element_to_ascii@@Base+0xafc>
   135f8:	ldr	r0, [sp, #32]
   135fc:	cmp	r0, #92	; 0x5c
   13600:	beq	13694 <export_data_element_to_ascii@@Base+0xb98>
   13604:	b	136a8 <export_data_element_to_ascii@@Base+0xbac>
   13608:	ldr	r0, [pc, #1468]	; 13bcc <export_data_element_to_ascii@@Base+0x10d0>
   1360c:	add	r1, pc, r0
   13610:	ldr	r0, [fp, #-12]
   13614:	bl	12814 <fprintf@plt>
   13618:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   1361c:	ldr	r0, [pc, #1444]	; 13bc8 <export_data_element_to_ascii@@Base+0x10cc>
   13620:	add	r1, pc, r0
   13624:	ldr	r0, [fp, #-12]
   13628:	bl	12814 <fprintf@plt>
   1362c:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   13630:	ldr	r0, [pc, #1420]	; 13bc4 <export_data_element_to_ascii@@Base+0x10c8>
   13634:	add	r1, pc, r0
   13638:	ldr	r0, [fp, #-12]
   1363c:	bl	12814 <fprintf@plt>
   13640:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   13644:	ldr	r0, [pc, #1396]	; 13bc0 <export_data_element_to_ascii@@Base+0x10c4>
   13648:	add	r1, pc, r0
   1364c:	ldr	r0, [fp, #-12]
   13650:	bl	12814 <fprintf@plt>
   13654:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   13658:	ldr	r0, [pc, #1372]	; 13bbc <export_data_element_to_ascii@@Base+0x10c0>
   1365c:	add	r1, pc, r0
   13660:	ldr	r0, [fp, #-12]
   13664:	bl	12814 <fprintf@plt>
   13668:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   1366c:	ldr	r0, [pc, #1348]	; 13bb8 <export_data_element_to_ascii@@Base+0x10bc>
   13670:	add	r1, pc, r0
   13674:	ldr	r0, [fp, #-12]
   13678:	bl	12814 <fprintf@plt>
   1367c:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   13680:	ldr	r0, [pc, #1324]	; 13bb4 <export_data_element_to_ascii@@Base+0x10b8>
   13684:	add	r1, pc, r0
   13688:	ldr	r0, [fp, #-12]
   1368c:	bl	12814 <fprintf@plt>
   13690:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   13694:	ldr	r0, [pc, #1300]	; 13bb0 <export_data_element_to_ascii@@Base+0x10b4>
   13698:	add	r1, pc, r0
   1369c:	ldr	r0, [fp, #-12]
   136a0:	bl	12814 <fprintf@plt>
   136a4:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   136a8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   136ac:	cmp	r0, #32
   136b0:	blt	136d8 <export_data_element_to_ascii@@Base+0xbdc>
   136b4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   136b8:	cmp	r0, #126	; 0x7e
   136bc:	bgt	136d8 <export_data_element_to_ascii@@Base+0xbdc>
   136c0:	ldr	r0, [pc, #1292]	; 13bd4 <export_data_element_to_ascii@@Base+0x10d8>
   136c4:	add	r1, pc, r0
   136c8:	ldr	r0, [fp, #-12]
   136cc:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   136d0:	bl	12814 <fprintf@plt>
   136d4:	b	136ec <export_data_element_to_ascii@@Base+0xbf0>
   136d8:	ldr	r0, [pc, #1264]	; 13bd0 <export_data_element_to_ascii@@Base+0x10d4>
   136dc:	add	r1, pc, r0
   136e0:	ldr	r0, [fp, #-12]
   136e4:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   136e8:	bl	12814 <fprintf@plt>
   136ec:	b	136f0 <export_data_element_to_ascii@@Base+0xbf4>
   136f0:	b	136f4 <export_data_element_to_ascii@@Base+0xbf8>
   136f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   136f8:	add	r0, r0, #1
   136fc:	str	r0, [fp, #-64]	; 0xffffffc0
   13700:	b	13554 <export_data_element_to_ascii@@Base+0xa58>
   13704:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13708:	bl	12658 <free@plt>
   1370c:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   13710:	ldr	r0, [pc, #1136]	; 13b88 <export_data_element_to_ascii@@Base+0x108c>
   13714:	ldr	r0, [pc, r0]
   13718:	add	r0, r0, #144	; 0x90
   1371c:	sub	r1, fp, #72	; 0x48
   13720:	bl	12988 <coda_cursor_read_int32@plt>
   13724:	cmp	r0, #0
   13728:	beq	13738 <export_data_element_to_ascii@@Base+0xc3c>
   1372c:	ldr	r0, [pc, #1112]	; 13b8c <export_data_element_to_ascii@@Base+0x1090>
   13730:	ldr	r0, [pc, r0]
   13734:	blx	r0
   13738:	ldr	r0, [pc, #1104]	; 13b90 <export_data_element_to_ascii@@Base+0x1094>
   1373c:	add	r1, pc, r0
   13740:	ldr	r0, [fp, #-12]
   13744:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13748:	bl	12814 <fprintf@plt>
   1374c:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   13750:	ldr	r0, [pc, #1060]	; 13b7c <export_data_element_to_ascii@@Base+0x1080>
   13754:	ldr	r0, [pc, r0]
   13758:	add	r0, r0, #144	; 0x90
   1375c:	sub	r1, fp, #76	; 0x4c
   13760:	bl	1267c <coda_cursor_read_uint32@plt>
   13764:	cmp	r0, #0
   13768:	beq	13778 <export_data_element_to_ascii@@Base+0xc7c>
   1376c:	ldr	r0, [pc, #1036]	; 13b80 <export_data_element_to_ascii@@Base+0x1084>
   13770:	ldr	r0, [pc, r0]
   13774:	blx	r0
   13778:	ldr	r0, [pc, #1028]	; 13b84 <export_data_element_to_ascii@@Base+0x1088>
   1377c:	add	r1, pc, r0
   13780:	ldr	r0, [fp, #-12]
   13784:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13788:	bl	12814 <fprintf@plt>
   1378c:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   13790:	ldr	r0, [pc, #984]	; 13b70 <export_data_element_to_ascii@@Base+0x1074>
   13794:	ldr	r0, [pc, r0]
   13798:	add	r0, r0, #144	; 0x90
   1379c:	sub	r1, fp, #88	; 0x58
   137a0:	bl	128f8 <coda_cursor_read_int64@plt>
   137a4:	cmp	r0, #0
   137a8:	beq	137b8 <export_data_element_to_ascii@@Base+0xcbc>
   137ac:	ldr	r0, [pc, #960]	; 13b74 <export_data_element_to_ascii@@Base+0x1078>
   137b0:	ldr	r0, [pc, r0]
   137b4:	blx	r0
   137b8:	sub	r2, fp, #109	; 0x6d
   137bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   137c0:	ldr	r1, [fp, #-84]	; 0xffffffac
   137c4:	bl	129e8 <coda_str64@plt>
   137c8:	ldr	r0, [pc, #936]	; 13b78 <export_data_element_to_ascii@@Base+0x107c>
   137cc:	add	r1, pc, r0
   137d0:	sub	r2, fp, #109	; 0x6d
   137d4:	ldr	r0, [fp, #-12]
   137d8:	bl	12814 <fprintf@plt>
   137dc:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   137e0:	ldr	r0, [pc, #892]	; 13b64 <export_data_element_to_ascii@@Base+0x1068>
   137e4:	ldr	r0, [pc, r0]
   137e8:	add	r0, r0, #144	; 0x90
   137ec:	sub	r1, fp, #120	; 0x78
   137f0:	bl	127f0 <coda_cursor_read_uint64@plt>
   137f4:	cmp	r0, #0
   137f8:	beq	13808 <export_data_element_to_ascii@@Base+0xd0c>
   137fc:	ldr	r0, [pc, #868]	; 13b68 <export_data_element_to_ascii@@Base+0x106c>
   13800:	ldr	r0, [pc, r0]
   13804:	blx	r0
   13808:	add	r2, sp, #131	; 0x83
   1380c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13810:	ldr	r1, [fp, #-116]	; 0xffffff8c
   13814:	bl	1264c <coda_str64u@plt>
   13818:	ldr	r0, [pc, #844]	; 13b6c <export_data_element_to_ascii@@Base+0x1070>
   1381c:	add	r1, pc, r0
   13820:	add	r2, sp, #131	; 0x83
   13824:	ldr	r0, [fp, #-12]
   13828:	bl	12814 <fprintf@plt>
   1382c:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   13830:	ldr	r0, [pc, #796]	; 13b54 <export_data_element_to_ascii@@Base+0x1058>
   13834:	ldr	r0, [pc, r0]
   13838:	add	r0, r0, #144	; 0x90
   1383c:	add	r1, sp, #120	; 0x78
   13840:	bl	127fc <coda_cursor_read_double@plt>
   13844:	cmp	r0, #0
   13848:	beq	13858 <export_data_element_to_ascii@@Base+0xd5c>
   1384c:	ldr	r0, [pc, #772]	; 13b58 <export_data_element_to_ascii@@Base+0x105c>
   13850:	ldr	r0, [pc, r0]
   13854:	blx	r0
   13858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1385c:	cmp	r0, #8
   13860:	bne	13880 <export_data_element_to_ascii@@Base+0xd84>
   13864:	ldr	r0, [pc, #756]	; 13b60 <export_data_element_to_ascii@@Base+0x1064>
   13868:	add	r1, pc, r0
   1386c:	ldr	r0, [fp, #-12]
   13870:	vldr	d16, [sp, #120]	; 0x78
   13874:	vmov	r2, r3, d16
   13878:	bl	12814 <fprintf@plt>
   1387c:	b	13898 <export_data_element_to_ascii@@Base+0xd9c>
   13880:	ldr	r0, [pc, #724]	; 13b5c <export_data_element_to_ascii@@Base+0x1060>
   13884:	add	r1, pc, r0
   13888:	ldr	r0, [fp, #-12]
   1388c:	vldr	d16, [sp, #120]	; 0x78
   13890:	vmov	r2, r3, d16
   13894:	bl	12814 <fprintf@plt>
   13898:	b	138bc <export_data_element_to_ascii@@Base+0xdc0>
   1389c:	ldr	r0, [pc, #676]	; 13b48 <export_data_element_to_ascii@@Base+0x104c>
   138a0:	add	r0, pc, r0
   138a4:	ldr	r1, [pc, #672]	; 13b4c <export_data_element_to_ascii@@Base+0x1050>
   138a8:	add	r1, pc, r1
   138ac:	ldr	r2, [pc, #668]	; 13b50 <export_data_element_to_ascii@@Base+0x1054>
   138b0:	add	r3, pc, r2
   138b4:	movw	r2, #294	; 0x126
   138b8:	bl	129f4 <__assert_fail@plt>
   138bc:	b	13ad4 <export_data_element_to_ascii@@Base+0xfd8>
   138c0:	ldr	r0, [pc, #572]	; 13b04 <export_data_element_to_ascii@@Base+0x1008>
   138c4:	ldr	r0, [pc, r0]
   138c8:	add	r0, r0, #8
   138cc:	ldr	r1, [fp, #-16]
   138d0:	ldr	r2, [pc, #844]	; 13c24 <export_data_element_to_ascii@@Base+0x1128>
   138d4:	ldr	r2, [pc, r2]
   138d8:	add	r1, r2, r1, lsl #2
   138dc:	add	r1, r1, #8
   138e0:	ldr	r1, [r1]
   138e4:	str	r0, [sp, #28]
   138e8:	mov	r0, r1
   138ec:	add	r1, sp, #116	; 0x74
   138f0:	bl	12880 <coda_type_get_special_type@plt>
   138f4:	cmp	r0, #0
   138f8:	beq	13908 <export_data_element_to_ascii@@Base+0xe0c>
   138fc:	ldr	r0, [pc, #516]	; 13b08 <export_data_element_to_ascii@@Base+0x100c>
   13900:	ldr	r0, [pc, r0]
   13904:	blx	r0
   13908:	ldr	r0, [sp, #116]	; 0x74
   1390c:	cmp	r0, #0
   13910:	str	r0, [sp, #24]
   13914:	beq	13940 <export_data_element_to_ascii@@Base+0xe44>
   13918:	b	1391c <export_data_element_to_ascii@@Base+0xe20>
   1391c:	ldr	r0, [sp, #24]
   13920:	sub	r1, r0, #1
   13924:	cmp	r1, #2
   13928:	bcc	13944 <export_data_element_to_ascii@@Base+0xe48>
   1392c:	b	13930 <export_data_element_to_ascii@@Base+0xe34>
   13930:	ldr	r0, [sp, #24]
   13934:	cmp	r0, #3
   13938:	beq	13a4c <export_data_element_to_ascii@@Base+0xf50>
   1393c:	b	13ab0 <export_data_element_to_ascii@@Base+0xfb4>
   13940:	b	13ab0 <export_data_element_to_ascii@@Base+0xfb4>
   13944:	ldr	r0, [pc, #464]	; 13b1c <export_data_element_to_ascii@@Base+0x1020>
   13948:	ldr	r0, [pc, r0]
   1394c:	add	r0, r0, #144	; 0x90
   13950:	add	r1, sp, #104	; 0x68
   13954:	bl	127fc <coda_cursor_read_double@plt>
   13958:	cmp	r0, #0
   1395c:	beq	1396c <export_data_element_to_ascii@@Base+0xe70>
   13960:	ldr	r0, [pc, #440]	; 13b20 <export_data_element_to_ascii@@Base+0x1024>
   13964:	ldr	r0, [pc, r0]
   13968:	blx	r0
   1396c:	ldr	r0, [sp, #116]	; 0x74
   13970:	cmp	r0, #2
   13974:	bne	13a30 <export_data_element_to_ascii@@Base+0xf34>
   13978:	ldr	r0, [pc, #420]	; 13b24 <export_data_element_to_ascii@@Base+0x1028>
   1397c:	ldr	r0, [pc, r0]
   13980:	ldr	r0, [r0]
   13984:	cmp	r0, #0
   13988:	beq	13a30 <export_data_element_to_ascii@@Base+0xf34>
   1398c:	vldr	d0, [sp, #104]	; 0x68
   13990:	bl	12808 <coda_isNaN@plt>
   13994:	cmp	r0, #0
   13998:	bne	139ac <export_data_element_to_ascii@@Base+0xeb0>
   1399c:	vldr	d0, [sp, #104]	; 0x68
   139a0:	bl	126b8 <coda_isInf@plt>
   139a4:	cmp	r0, #0
   139a8:	beq	139c0 <export_data_element_to_ascii@@Base+0xec4>
   139ac:	add	r0, sp, #77	; 0x4d
   139b0:	ldr	r1, [pc, #624]	; 13c28 <export_data_element_to_ascii@@Base+0x112c>
   139b4:	add	r1, pc, r1
   139b8:	bl	12748 <strcpy@plt>
   139bc:	b	139ec <export_data_element_to_ascii@@Base+0xef0>
   139c0:	ldr	r0, [pc, #356]	; 13b2c <export_data_element_to_ascii@@Base+0x1030>
   139c4:	add	r0, pc, r0
   139c8:	add	r1, sp, #77	; 0x4d
   139cc:	vldr	d0, [sp, #104]	; 0x68
   139d0:	bl	12634 <coda_time_double_to_string@plt>
   139d4:	cmp	r0, #0
   139d8:	beq	139e8 <export_data_element_to_ascii@@Base+0xeec>
   139dc:	ldr	r0, [pc, #332]	; 13b30 <export_data_element_to_ascii@@Base+0x1034>
   139e0:	ldr	r0, [pc, r0]
   139e4:	blx	r0
   139e8:	b	139ec <export_data_element_to_ascii@@Base+0xef0>
   139ec:	ldr	r0, [pc, #320]	; 13b34 <export_data_element_to_ascii@@Base+0x1038>
   139f0:	ldr	r0, [pc, r0]
   139f4:	ldr	r0, [r0]
   139f8:	cmp	r0, #0
   139fc:	beq	13a18 <export_data_element_to_ascii@@Base+0xf1c>
   13a00:	ldr	r0, [pc, #308]	; 13b3c <export_data_element_to_ascii@@Base+0x1040>
   13a04:	add	r1, pc, r0
   13a08:	add	r2, sp, #77	; 0x4d
   13a0c:	ldr	r0, [fp, #-12]
   13a10:	bl	12814 <fprintf@plt>
   13a14:	b	13a2c <export_data_element_to_ascii@@Base+0xf30>
   13a18:	ldr	r0, [pc, #280]	; 13b38 <export_data_element_to_ascii@@Base+0x103c>
   13a1c:	add	r1, pc, r0
   13a20:	add	r2, sp, #77	; 0x4d
   13a24:	ldr	r0, [fp, #-12]
   13a28:	bl	12814 <fprintf@plt>
   13a2c:	b	13a48 <export_data_element_to_ascii@@Base+0xf4c>
   13a30:	ldr	r0, [pc, #240]	; 13b28 <export_data_element_to_ascii@@Base+0x102c>
   13a34:	add	r1, pc, r0
   13a38:	ldr	r0, [fp, #-12]
   13a3c:	vldr	d16, [sp, #104]	; 0x68
   13a40:	vmov	r2, r3, d16
   13a44:	bl	12814 <fprintf@plt>
   13a48:	b	13ab0 <export_data_element_to_ascii@@Base+0xfb4>
   13a4c:	ldr	r0, [pc, #184]	; 13b0c <export_data_element_to_ascii@@Base+0x1010>
   13a50:	ldr	r0, [pc, r0]
   13a54:	add	r0, r0, #144	; 0x90
   13a58:	add	r1, sp, #56	; 0x38
   13a5c:	bl	12928 <coda_cursor_read_complex_double_pair@plt>
   13a60:	cmp	r0, #0
   13a64:	beq	13a74 <export_data_element_to_ascii@@Base+0xf78>
   13a68:	ldr	r0, [pc, #160]	; 13b10 <export_data_element_to_ascii@@Base+0x1014>
   13a6c:	ldr	r0, [pc, r0]
   13a70:	blx	r0
   13a74:	ldr	r0, [pc, #152]	; 13b14 <export_data_element_to_ascii@@Base+0x1018>
   13a78:	add	r1, pc, r0
   13a7c:	ldr	r0, [pc, #148]	; 13b18 <export_data_element_to_ascii@@Base+0x101c>
   13a80:	ldr	r0, [pc, r0]
   13a84:	ldr	r2, [fp, #-12]
   13a88:	vldr	d16, [sp, #56]	; 0x38
   13a8c:	ldr	r0, [r0]
   13a90:	vldr	d17, [sp, #64]	; 0x40
   13a94:	str	r0, [sp, #20]
   13a98:	mov	r0, r2
   13a9c:	vmov	r2, r3, d16
   13aa0:	ldr	ip, [sp, #20]
   13aa4:	str	ip, [sp]
   13aa8:	vstr	d17, [sp, #8]
   13aac:	bl	12814 <fprintf@plt>
   13ab0:	b	13ad4 <export_data_element_to_ascii@@Base+0xfd8>
   13ab4:	ldr	r0, [pc, #60]	; 13af8 <export_data_element_to_ascii@@Base+0xffc>
   13ab8:	add	r0, pc, r0
   13abc:	ldr	r1, [pc, #56]	; 13afc <export_data_element_to_ascii@@Base+0x1000>
   13ac0:	add	r1, pc, r1
   13ac4:	ldr	r2, [pc, #52]	; 13b00 <export_data_element_to_ascii@@Base+0x1004>
   13ac8:	add	r3, pc, r2
   13acc:	movw	r2, #368	; 0x170
   13ad0:	bl	129f4 <__assert_fail@plt>
   13ad4:	ldr	r0, [pc, #312]	; 13c14 <export_data_element_to_ascii@@Base+0x1118>
   13ad8:	add	r1, pc, r0
   13adc:	ldr	r0, [fp, #-12]
   13ae0:	bl	12814 <fprintf@plt>
   13ae4:	sub	sp, fp, #8
   13ae8:	pop	{r4, r5, fp, pc}
   13aec:	andeq	lr, r1, r8, lsr #32
   13af0:	andeq	sp, r1, r8, ror #31
   13af4:	ldrdeq	sp, [r1], -r8
   13af8:	muleq	r0, fp, r2
   13afc:	andeq	fp, r0, r5, lsl #1
   13b00:	andeq	fp, r0, ip, lsl #2
   13b04:	andeq	sp, r1, r8, ror #17
   13b08:	ldrdeq	sp, [r1], -r8
   13b0c:	andeq	sp, r1, ip, asr r7
   13b10:	andeq	sp, r1, ip, ror #14
   13b14:			; <UNDEFINED> instruction: 0x0000b1b5
   13b18:	andeq	sp, r1, ip, lsr r7
   13b1c:	andeq	sp, r1, r4, ror #16
   13b20:	andeq	sp, r1, r4, ror r8
   13b24:	andeq	sp, r1, r0, lsr #16
   13b28:	muleq	r0, sl, r1
   13b2c:	andeq	fp, r0, lr, asr #4
   13b30:	strdeq	sp, [r1], -r8
   13b34:	andeq	sp, r1, ip, lsl #16
   13b38:	andeq	fp, r0, sl, lsr #18
   13b3c:	andeq	fp, r0, r4, lsl #19
   13b40:	andeq	sp, r1, r8, ror #30
   13b44:	andeq	sp, r1, r8, asr pc
   13b48:			; <UNDEFINED> instruction: 0x0000b4b3
   13b4c:	muleq	r0, sp, r2
   13b50:	andeq	fp, r0, r4, lsr #6
   13b54:	andeq	sp, r1, r8, ror r9
   13b58:	andeq	sp, r1, r8, lsl #19
   13b5c:	andeq	fp, r0, sl, asr #6
   13b60:	andeq	fp, r0, r1, ror #6
   13b64:	andeq	sp, r1, r8, asr #19
   13b68:	ldrdeq	sp, [r1], -r8
   13b6c:	andeq	fp, r0, sl, lsr #22
   13b70:	andeq	sp, r1, r8, lsl sl
   13b74:	andeq	sp, r1, r8, lsr #20
   13b78:	andeq	fp, r0, sl, ror fp
   13b7c:	andeq	sp, r1, r8, asr sl
   13b80:	andeq	sp, r1, r8, ror #20
   13b84:	andeq	fp, r0, r9, asr #8
   13b88:	muleq	r1, r8, sl
   13b8c:	andeq	sp, r1, r8, lsr #21
   13b90:	andeq	fp, r0, r8, asr #22
   13b94:	andeq	sp, r1, r0, ror #26
   13b98:	andeq	sp, r1, r0, ror sp
   13b9c:	andeq	sp, r1, ip, ror #25
   13ba0:	andeq	fp, r0, r8, asr #12
   13ba4:	andeq	fp, r0, r5, ror r6
   13ba8:			; <UNDEFINED> instruction: 0x0001dcb4
   13bac:	muleq	r1, r4, ip
   13bb0:	andeq	fp, r0, r4, lsr #10
   13bb4:	andeq	fp, r0, r5, lsr r5
   13bb8:	andeq	fp, r0, r6, asr #10
   13bbc:	andeq	fp, r0, r7, asr r5
   13bc0:	andeq	fp, r0, r8, ror #10
   13bc4:	andeq	fp, r0, r9, ror r5
   13bc8:	andeq	fp, r0, sl, lsl #11
   13bcc:	muleq	r0, fp, r5
   13bd0:	andeq	fp, r0, r3, ror #9
   13bd4:	andeq	fp, r0, r9, asr #8
   13bd8:	andeq	sp, r1, r8, asr lr
   13bdc:	andeq	sp, r1, r8, ror #28
   13be0:	andeq	sp, r1, r4, lsl lr
   13be4:	andeq	fp, r0, r4, ror r7
   13be8:	andeq	fp, r0, r1, lsr #15
   13bec:	ldrdeq	sp, [r1], -ip
   13bf0:	andeq	sp, r1, r4, ror #27
   13bf4:	strdeq	sp, [r1], -ip
   13bf8:	andeq	fp, r0, sl, lsl pc
   13bfc:	andeq	fp, r0, r4, ror pc
   13c00:	andeq	sp, r1, r4, asr #29
   13c04:	ldrdeq	sp, [r1], -r4
   13c08:	andeq	sp, r1, ip, ror #29
   13c0c:	ldrdeq	fp, [r0], -r1
   13c10:	andeq	fp, r0, r4, ror #15
   13c14:	muleq	r0, r3, sl
   13c18:	ldrdeq	sp, [r1], -r8
   13c1c:	andeq	sp, r1, r8, asr pc
   13c20:	muleq	r1, r0, ip
   13c24:	ldrdeq	sp, [r1], -r8
   13c28:	andeq	fp, r0, r3, asr #4
   13c2c:	push	{fp, lr}
   13c30:	mov	fp, sp
   13c34:	sub	sp, sp, #32
   13c38:	str	r0, [fp, #-4]
   13c3c:	movw	r0, #0
   13c40:	str	r0, [fp, #-8]
   13c44:	str	r0, [fp, #-12]
   13c48:	ldr	r0, [pc, #288]	; 13d70 <export_data_element_to_ascii@@Base+0x1274>
   13c4c:	ldr	r0, [pc, r0]
   13c50:	ldr	r1, [fp, #-12]
   13c54:	ldr	r0, [r0, #136]	; 0x88
   13c58:	cmp	r1, r0
   13c5c:	bge	13d68 <export_data_element_to_ascii@@Base+0x126c>
   13c60:	ldr	r0, [pc, #268]	; 13d74 <export_data_element_to_ascii@@Base+0x1278>
   13c64:	ldr	r0, [pc, r0]
   13c68:	add	r0, r0, #8
   13c6c:	ldr	r1, [fp, #-12]
   13c70:	ldr	r2, [pc, #272]	; 13d88 <export_data_element_to_ascii@@Base+0x128c>
   13c74:	ldr	r2, [pc, r2]
   13c78:	add	r1, r2, r1, lsl #2
   13c7c:	add	r1, r1, #8
   13c80:	ldr	r1, [r1]
   13c84:	str	r0, [sp, #8]
   13c88:	mov	r0, r1
   13c8c:	add	r1, sp, #16
   13c90:	bl	12a00 <coda_type_get_class@plt>
   13c94:	cmp	r0, #0
   13c98:	beq	13ca8 <export_data_element_to_ascii@@Base+0x11ac>
   13c9c:	ldr	r0, [pc, #212]	; 13d78 <export_data_element_to_ascii@@Base+0x127c>
   13ca0:	ldr	r0, [pc, r0]
   13ca4:	blx	r0
   13ca8:	ldr	r0, [sp, #16]
   13cac:	cmp	r0, #1
   13cb0:	bne	13d54 <export_data_element_to_ascii@@Base+0x1258>
   13cb4:	movw	r0, #0
   13cb8:	str	r0, [sp, #12]
   13cbc:	ldr	r0, [pc, #184]	; 13d7c <export_data_element_to_ascii@@Base+0x1280>
   13cc0:	ldr	r0, [pc, r0]
   13cc4:	add	r0, r0, #800	; 0x320
   13cc8:	ldr	r1, [sp, #12]
   13ccc:	ldr	r2, [fp, #-8]
   13cd0:	movw	r3, #80	; 0x50
   13cd4:	mul	r2, r2, r3
   13cd8:	add	r0, r0, r2
   13cdc:	ldr	r0, [r0, #4]
   13ce0:	cmp	r1, r0
   13ce4:	bge	13d48 <export_data_element_to_ascii@@Base+0x124c>
   13ce8:	ldr	r0, [pc, #144]	; 13d80 <export_data_element_to_ascii@@Base+0x1284>
   13cec:	add	r1, pc, r0
   13cf0:	ldr	r0, [pc, #140]	; 13d84 <export_data_element_to_ascii@@Base+0x1288>
   13cf4:	ldr	r0, [pc, r0]
   13cf8:	ldr	r2, [fp, #-4]
   13cfc:	ldr	r3, [fp, #-8]
   13d00:	add	r3, r3, r3, lsl #2
   13d04:	ldr	ip, [pc, #128]	; 13d8c <export_data_element_to_ascii@@Base+0x1290>
   13d08:	ldr	ip, [pc, ip]
   13d0c:	add	r3, ip, r3, lsl #4
   13d10:	add	r3, r3, #848	; 0x350
   13d14:	ldr	ip, [sp, #12]
   13d18:	add	r3, r3, ip, lsl #2
   13d1c:	ldr	r3, [r3]
   13d20:	ldr	r0, [r0]
   13d24:	str	r0, [sp, #4]
   13d28:	mov	r0, r2
   13d2c:	mov	r2, r3
   13d30:	ldr	r3, [sp, #4]
   13d34:	bl	12814 <fprintf@plt>
   13d38:	ldr	r0, [sp, #12]
   13d3c:	add	r0, r0, #1
   13d40:	str	r0, [sp, #12]
   13d44:	b	13cbc <export_data_element_to_ascii@@Base+0x11c0>
   13d48:	ldr	r0, [fp, #-8]
   13d4c:	add	r0, r0, #1
   13d50:	str	r0, [fp, #-8]
   13d54:	b	13d58 <export_data_element_to_ascii@@Base+0x125c>
   13d58:	ldr	r0, [fp, #-12]
   13d5c:	add	r0, r0, #1
   13d60:	str	r0, [fp, #-12]
   13d64:	b	13c48 <export_data_element_to_ascii@@Base+0x114c>
   13d68:	mov	sp, fp
   13d6c:	pop	{fp, pc}
   13d70:	andeq	sp, r1, r0, ror #10
   13d74:	andeq	sp, r1, r8, asr #10
   13d78:	andeq	sp, r1, r8, lsr r5
   13d7c:	andeq	sp, r1, ip, ror #9
   13d80:	andeq	sl, r0, r8, asr #30
   13d84:	andeq	sp, r1, r8, asr #9
   13d88:	andeq	sp, r1, r8, lsr r5
   13d8c:	andeq	sp, r1, r4, lsr #9

00013d90 <print_debug_data@@Base>:
   13d90:	push	{r4, r5, fp, lr}
   13d94:	add	fp, sp, #8
   13d98:	sub	sp, sp, #560	; 0x230
   13d9c:	str	r0, [fp, #-12]
   13da0:	str	r1, [fp, #-16]
   13da4:	str	r2, [fp, #-20]	; 0xffffffec
   13da8:	ldr	r0, [fp, #-12]
   13dac:	movw	r1, #0
   13db0:	cmp	r0, r1
   13db4:	bne	13dd4 <print_debug_data@@Base+0x44>
   13db8:	ldr	r0, [pc, #480]	; 13fa0 <print_debug_data@@Base+0x210>
   13dbc:	ldr	r0, [pc, r0]
   13dc0:	ldr	r0, [r0]
   13dc4:	sub	r1, fp, #24
   13dc8:	bl	1261c <coda_open@plt>
   13dcc:	str	r0, [sp, #16]
   13dd0:	b	13dfc <print_debug_data@@Base+0x6c>
   13dd4:	ldr	r0, [pc, #448]	; 13f9c <print_debug_data@@Base+0x20c>
   13dd8:	ldr	r0, [pc, r0]
   13ddc:	ldr	r0, [r0]
   13de0:	ldr	r1, [fp, #-12]
   13de4:	ldr	r2, [fp, #-16]
   13de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13dec:	sub	ip, fp, #24
   13df0:	str	ip, [sp]
   13df4:	bl	1282c <coda_open_as@plt>
   13df8:	str	r0, [sp, #16]
   13dfc:	ldr	r0, [sp, #16]
   13e00:	cmp	r0, #0
   13e04:	beq	13e7c <print_debug_data@@Base+0xec>
   13e08:	bl	129ac <coda_get_errno@plt>
   13e0c:	ldr	r0, [r0]
   13e10:	cmn	r0, #21
   13e14:	bne	13e7c <print_debug_data@@Base+0xec>
   13e18:	movw	r0, #0
   13e1c:	bl	12664 <coda_set_option_use_mmap@plt>
   13e20:	ldr	r1, [fp, #-12]
   13e24:	movw	r2, #0
   13e28:	cmp	r1, r2
   13e2c:	bne	13e4c <print_debug_data@@Base+0xbc>
   13e30:	ldr	r0, [pc, #368]	; 13fa8 <print_debug_data@@Base+0x218>
   13e34:	ldr	r0, [pc, r0]
   13e38:	ldr	r0, [r0]
   13e3c:	sub	r1, fp, #24
   13e40:	bl	1261c <coda_open@plt>
   13e44:	str	r0, [sp, #16]
   13e48:	b	13e74 <print_debug_data@@Base+0xe4>
   13e4c:	ldr	r0, [pc, #336]	; 13fa4 <print_debug_data@@Base+0x214>
   13e50:	ldr	r0, [pc, r0]
   13e54:	ldr	r0, [r0]
   13e58:	ldr	r1, [fp, #-12]
   13e5c:	ldr	r2, [fp, #-16]
   13e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e64:	sub	ip, fp, #24
   13e68:	str	ip, [sp]
   13e6c:	bl	1282c <coda_open_as@plt>
   13e70:	str	r0, [sp, #16]
   13e74:	movw	r0, #1
   13e78:	bl	12664 <coda_set_option_use_mmap@plt>
   13e7c:	ldr	r0, [sp, #16]
   13e80:	cmp	r0, #0
   13e84:	beq	13e94 <print_debug_data@@Base+0x104>
   13e88:	ldr	r0, [pc, #284]	; 13fac <print_debug_data@@Base+0x21c>
   13e8c:	ldr	r0, [pc, r0]
   13e90:	blx	r0
   13e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e98:	add	r1, sp, #20
   13e9c:	bl	12700 <coda_get_product_format@plt>
   13ea0:	cmp	r0, #0
   13ea4:	beq	13eb4 <print_debug_data@@Base+0x124>
   13ea8:	ldr	r0, [pc, #256]	; 13fb0 <print_debug_data@@Base+0x220>
   13eac:	ldr	r0, [pc, r0]
   13eb0:	blx	r0
   13eb4:	ldr	r0, [sp, #20]
   13eb8:	cmp	r0, #0
   13ebc:	movw	r0, #1
   13ec0:	str	r0, [sp, #12]
   13ec4:	beq	13ef0 <print_debug_data@@Base+0x160>
   13ec8:	ldr	r0, [sp, #20]
   13ecc:	cmp	r0, #1
   13ed0:	movw	r0, #1
   13ed4:	str	r0, [sp, #12]
   13ed8:	beq	13ef0 <print_debug_data@@Base+0x160>
   13edc:	ldr	r0, [sp, #20]
   13ee0:	cmp	r0, #2
   13ee4:	movw	r0, #0
   13ee8:	moveq	r0, #1
   13eec:	str	r0, [sp, #12]
   13ef0:	ldr	r0, [sp, #12]
   13ef4:	ldr	r1, [pc, #184]	; 13fb4 <print_debug_data@@Base+0x224>
   13ef8:	add	r1, pc, r1
   13efc:	and	r0, r0, #1
   13f00:	str	r0, [r1]
   13f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f08:	add	r0, sp, #24
   13f0c:	bl	1273c <coda_cursor_set_product@plt>
   13f10:	cmp	r0, #0
   13f14:	beq	13f24 <print_debug_data@@Base+0x194>
   13f18:	ldr	r0, [pc, #152]	; 13fb8 <print_debug_data@@Base+0x228>
   13f1c:	ldr	r0, [pc, r0]
   13f20:	blx	r0
   13f24:	ldr	r0, [pc, #144]	; 13fbc <print_debug_data@@Base+0x22c>
   13f28:	ldr	r0, [pc, r0]
   13f2c:	ldr	r0, [r0]
   13f30:	movw	r1, #0
   13f34:	cmp	r0, r1
   13f38:	beq	13f70 <print_debug_data@@Base+0x1e0>
   13f3c:	ldr	r0, [pc, #124]	; 13fc0 <print_debug_data@@Base+0x230>
   13f40:	ldr	r0, [pc, r0]
   13f44:	ldr	r1, [r0]
   13f48:	add	r0, sp, #24
   13f4c:	bl	12910 <coda_cursor_goto@plt>
   13f50:	str	r0, [sp, #16]
   13f54:	ldr	r0, [sp, #16]
   13f58:	cmp	r0, #0
   13f5c:	beq	13f6c <print_debug_data@@Base+0x1dc>
   13f60:	ldr	r0, [pc, #92]	; 13fc4 <print_debug_data@@Base+0x234>
   13f64:	ldr	r0, [pc, r0]
   13f68:	blx	r0
   13f6c:	b	13f70 <print_debug_data@@Base+0x1e0>
   13f70:	movw	r0, #0
   13f74:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   13f78:	add	r1, sp, #24
   13f7c:	str	r0, [sp, #8]
   13f80:	mov	r0, r1
   13f84:	movw	r1, #0
   13f88:	bl	13fc8 <print_debug_data@@Base+0x238>
   13f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f90:	bl	128ec <coda_close@plt>
   13f94:	sub	sp, fp, #8
   13f98:	pop	{r4, r5, fp, pc}
   13f9c:	ldrdeq	sp, [r1], -r4
   13fa0:	strdeq	sp, [r1], -r0
   13fa4:	andeq	sp, r1, ip, asr r3
   13fa8:	andeq	sp, r1, r8, ror r3
   13fac:	andeq	sp, r1, ip, asr #6
   13fb0:	andeq	sp, r1, ip, lsr #6
   13fb4:	andeq	sp, r1, r4, lsl r3
   13fb8:			; <UNDEFINED> instruction: 0x0001d2bc
   13fbc:			; <UNDEFINED> instruction: 0x0001d2b8
   13fc0:	andeq	sp, r1, r0, lsr #5
   13fc4:	andeq	sp, r1, r4, ror r2
   13fc8:	push	{r4, r5, fp, lr}
   13fcc:	add	fp, sp, #8
   13fd0:	sub	sp, sp, #1040	; 0x410
   13fd4:	str	r0, [fp, #-12]
   13fd8:	str	r1, [fp, #-16]
   13fdc:	ldr	r0, [fp, #-12]
   13fe0:	sub	r1, fp, #24
   13fe4:	bl	126dc <coda_cursor_has_attributes@plt>
   13fe8:	cmp	r0, #0
   13fec:	beq	13ffc <print_debug_data@@Base+0x26c>
   13ff0:	ldr	r0, [pc, #3788]	; 14ec4 <print_debug_data@@Base+0x1134>
   13ff4:	ldr	r0, [pc, r0]
   13ff8:	blx	r0
   13ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14000:	cmp	r0, #0
   14004:	beq	1407c <print_debug_data@@Base+0x2ec>
   14008:	ldr	r0, [fp, #-12]
   1400c:	bl	12850 <coda_cursor_goto_attributes@plt>
   14010:	cmp	r0, #0
   14014:	beq	14024 <print_debug_data@@Base+0x294>
   14018:	ldr	r0, [pc, #3752]	; 14ec8 <print_debug_data@@Base+0x1138>
   1401c:	ldr	r0, [pc, r0]
   14020:	blx	r0
   14024:	ldr	r0, [pc, #3752]	; 14ed4 <print_debug_data@@Base+0x1144>
   14028:	add	r0, pc, r0
   1402c:	bl	15054 <print_debug_data@@Base+0x12c4>
   14030:	ldr	r1, [pc, #3736]	; 14ed0 <print_debug_data@@Base+0x1140>
   14034:	add	r1, pc, r1
   14038:	ldr	r2, [r1]
   1403c:	add	r2, r2, #1
   14040:	str	r2, [r1]
   14044:	ldr	r1, [fp, #-12]
   14048:	ldr	r2, [fp, #-16]
   1404c:	str	r0, [sp, #76]	; 0x4c
   14050:	mov	r0, r1
   14054:	mov	r1, r2
   14058:	bl	13fc8 <print_debug_data@@Base+0x238>
   1405c:	ldr	r0, [pc, #3688]	; 14ecc <print_debug_data@@Base+0x113c>
   14060:	add	r0, pc, r0
   14064:	ldr	r1, [r0]
   14068:	mvn	r2, #0
   1406c:	add	r1, r1, r2
   14070:	str	r1, [r0]
   14074:	ldr	r0, [fp, #-12]
   14078:	bl	127b4 <coda_cursor_goto_parent@plt>
   1407c:	ldr	r0, [fp, #-12]
   14080:	sub	r1, fp, #20
   14084:	bl	126e8 <coda_cursor_get_type_class@plt>
   14088:	cmp	r0, #0
   1408c:	beq	1409c <print_debug_data@@Base+0x30c>
   14090:	ldr	r0, [pc, #3648]	; 14ed8 <print_debug_data@@Base+0x1148>
   14094:	ldr	r0, [pc, r0]
   14098:	blx	r0
   1409c:	ldr	r0, [fp, #-20]	; 0xffffffec
   140a0:	cmp	r0, #6
   140a4:	str	r0, [sp, #72]	; 0x48
   140a8:	bhi	14ebc <print_debug_data@@Base+0x112c>
   140ac:	add	r0, pc, #8
   140b0:	ldr	r1, [sp, #72]	; 0x48
   140b4:	ldr	r2, [r0, r1, lsl #2]
   140b8:	add	pc, r0, r2
   140bc:	andeq	r0, r0, ip, lsl r0
   140c0:	andeq	r0, r0, ip, lsl r4
   140c4:	andeq	r0, r0, r4, asr r7
   140c8:	andeq	r0, r0, r4, asr r7
   140cc:	andeq	r0, r0, r4, asr r7
   140d0:	andeq	r0, r0, r4, asr r7
   140d4:	andeq	r0, r0, ip, lsl #24
   140d8:	ldr	r0, [fp, #-12]
   140dc:	sub	r1, fp, #28
   140e0:	bl	12640 <coda_cursor_get_num_elements@plt>
   140e4:	cmp	r0, #0
   140e8:	beq	140f8 <print_debug_data@@Base+0x368>
   140ec:	ldr	r0, [pc, #3792]	; 14fc4 <print_debug_data@@Base+0x1234>
   140f0:	ldr	r0, [pc, r0]
   140f4:	blx	r0
   140f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   140fc:	cmp	r0, #0
   14100:	ble	144d4 <print_debug_data@@Base+0x744>
   14104:	ldr	r0, [fp, #-12]
   14108:	sub	r1, fp, #32
   1410c:	bl	126a0 <coda_cursor_get_type@plt>
   14110:	cmp	r0, #0
   14114:	beq	14124 <print_debug_data@@Base+0x394>
   14118:	ldr	r0, [pc, #3752]	; 14fc8 <print_debug_data@@Base+0x1238>
   1411c:	ldr	r0, [pc, r0]
   14120:	blx	r0
   14124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14128:	sub	r1, fp, #36	; 0x24
   1412c:	bl	1288c <coda_type_get_record_union_status@plt>
   14130:	cmp	r0, #0
   14134:	beq	14144 <print_debug_data@@Base+0x3b4>
   14138:	ldr	r0, [pc, #3724]	; 14fcc <print_debug_data@@Base+0x123c>
   1413c:	ldr	r0, [pc, r0]
   14140:	blx	r0
   14144:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14148:	cmp	r0, #0
   1414c:	beq	142f4 <print_debug_data@@Base+0x564>
   14150:	ldr	r0, [fp, #-12]
   14154:	sub	r1, fp, #40	; 0x28
   14158:	bl	1297c <coda_cursor_get_available_union_field_index@plt>
   1415c:	cmp	r0, #0
   14160:	beq	14170 <print_debug_data@@Base+0x3e0>
   14164:	ldr	r0, [pc, #3736]	; 15004 <print_debug_data@@Base+0x1274>
   14168:	ldr	r0, [pc, r0]
   1416c:	blx	r0
   14170:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14174:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14178:	sub	r2, fp, #44	; 0x2c
   1417c:	bl	129c4 <coda_type_get_record_field_name@plt>
   14180:	cmp	r0, #0
   14184:	beq	14194 <print_debug_data@@Base+0x404>
   14188:	ldr	r0, [pc, #3704]	; 15008 <print_debug_data@@Base+0x1278>
   1418c:	ldr	r0, [pc, r0]
   14190:	blx	r0
   14194:	ldr	r0, [fp, #-12]
   14198:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1419c:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   141a0:	cmp	r0, #0
   141a4:	beq	141b4 <print_debug_data@@Base+0x424>
   141a8:	ldr	r0, [pc, #3676]	; 1500c <print_debug_data@@Base+0x127c>
   141ac:	ldr	r0, [pc, r0]
   141b0:	blx	r0
   141b4:	ldr	r0, [pc, #3672]	; 15014 <print_debug_data@@Base+0x1284>
   141b8:	add	r0, pc, r0
   141bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141c0:	bl	15054 <print_debug_data@@Base+0x12c4>
   141c4:	ldr	r1, [pc, #3652]	; 15010 <print_debug_data@@Base+0x1280>
   141c8:	add	r1, pc, r1
   141cc:	ldr	r1, [r1]
   141d0:	cmp	r1, #0
   141d4:	beq	14264 <print_debug_data@@Base+0x4d4>
   141d8:	ldr	r0, [fp, #-12]
   141dc:	sub	r1, fp, #56	; 0x38
   141e0:	bl	12994 <coda_cursor_get_file_bit_offset@plt>
   141e4:	cmp	r0, #0
   141e8:	beq	141f8 <print_debug_data@@Base+0x468>
   141ec:	ldr	r0, [pc, #3620]	; 15018 <print_debug_data@@Base+0x1288>
   141f0:	ldr	r0, [pc, r0]
   141f4:	blx	r0
   141f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   141fc:	cmp	r0, #0
   14200:	bmi	14260 <print_debug_data@@Base+0x4d0>
   14204:	b	14208 <print_debug_data@@Base+0x478>
   14208:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1420c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14210:	lsr	r0, r0, #3
   14214:	orr	r0, r0, r1, lsl #29
   14218:	asr	r1, r1, #3
   1421c:	sub	r2, fp, #77	; 0x4d
   14220:	str	r2, [sp, #68]	; 0x44
   14224:	bl	129e8 <coda_str64@plt>
   14228:	ldr	r0, [pc, #3592]	; 15038 <print_debug_data@@Base+0x12a8>
   1422c:	add	r0, pc, r0
   14230:	ldr	r1, [sp, #68]	; 0x44
   14234:	bl	150c0 <print_debug_data@@Base+0x1330>
   14238:	ldrb	r1, [fp, #-56]	; 0xffffffc8
   1423c:	tst	r1, #7
   14240:	beq	1425c <print_debug_data@@Base+0x4cc>
   14244:	b	14248 <print_debug_data@@Base+0x4b8>
   14248:	ldr	r0, [pc, #3532]	; 1501c <print_debug_data@@Base+0x128c>
   1424c:	add	r0, pc, r0
   14250:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14254:	and	r1, r1, #7
   14258:	bl	150c0 <print_debug_data@@Base+0x1330>
   1425c:	b	14260 <print_debug_data@@Base+0x4d0>
   14260:	b	14264 <print_debug_data@@Base+0x4d4>
   14264:	ldr	r0, [pc, #3516]	; 15028 <print_debug_data@@Base+0x1298>
   14268:	add	r0, pc, r0
   1426c:	bl	150c0 <print_debug_data@@Base+0x1330>
   14270:	ldr	r1, [pc, #3496]	; 15020 <print_debug_data@@Base+0x1290>
   14274:	ldr	r1, [pc, r1]
   14278:	ldr	r2, [pc, #3492]	; 15024 <print_debug_data@@Base+0x1294>
   1427c:	add	r2, pc, r2
   14280:	ldr	r3, [r2]
   14284:	add	r3, r3, #1
   14288:	str	r3, [r2]
   1428c:	ldr	r1, [r1]
   14290:	cmp	r1, #0
   14294:	blt	142b0 <print_debug_data@@Base+0x520>
   14298:	ldr	r0, [pc, #3468]	; 1502c <print_debug_data@@Base+0x129c>
   1429c:	ldr	r0, [pc, r0]
   142a0:	ldr	r1, [fp, #-16]
   142a4:	ldr	r0, [r0]
   142a8:	cmp	r1, r0
   142ac:	bge	142c4 <print_debug_data@@Base+0x534>
   142b0:	ldr	r0, [fp, #-12]
   142b4:	ldr	r1, [fp, #-16]
   142b8:	add	r1, r1, #1
   142bc:	bl	13fc8 <print_debug_data@@Base+0x238>
   142c0:	b	142d0 <print_debug_data@@Base+0x540>
   142c4:	ldr	r0, [pc, #3428]	; 15030 <print_debug_data@@Base+0x12a0>
   142c8:	add	r0, pc, r0
   142cc:	bl	15054 <print_debug_data@@Base+0x12c4>
   142d0:	ldr	r0, [pc, #3420]	; 15034 <print_debug_data@@Base+0x12a4>
   142d4:	add	r0, pc, r0
   142d8:	ldr	r1, [r0]
   142dc:	mvn	r2, #0
   142e0:	add	r1, r1, r2
   142e4:	str	r1, [r0]
   142e8:	ldr	r0, [fp, #-12]
   142ec:	bl	127b4 <coda_cursor_goto_parent@plt>
   142f0:	b	144d0 <print_debug_data@@Base+0x740>
   142f4:	ldr	r0, [fp, #-12]
   142f8:	bl	12754 <coda_cursor_goto_first_record_field@plt>
   142fc:	cmp	r0, #0
   14300:	beq	14310 <print_debug_data@@Base+0x580>
   14304:	ldr	r0, [pc, #3268]	; 14fd0 <print_debug_data@@Base+0x1240>
   14308:	ldr	r0, [pc, r0]
   1430c:	blx	r0
   14310:	movw	r0, #0
   14314:	str	r0, [fp, #-40]	; 0xffffffd8
   14318:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1431c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14320:	cmp	r0, r1
   14324:	bge	144c8 <print_debug_data@@Base+0x738>
   14328:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1432c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14330:	sub	r2, fp, #84	; 0x54
   14334:	bl	129c4 <coda_type_get_record_field_name@plt>
   14338:	cmp	r0, #0
   1433c:	beq	1434c <print_debug_data@@Base+0x5bc>
   14340:	ldr	r0, [pc, #3212]	; 14fd4 <print_debug_data@@Base+0x1244>
   14344:	ldr	r0, [pc, r0]
   14348:	blx	r0
   1434c:	ldr	r0, [pc, #3208]	; 14fdc <print_debug_data@@Base+0x124c>
   14350:	add	r0, pc, r0
   14354:	ldr	r1, [fp, #-84]	; 0xffffffac
   14358:	bl	15054 <print_debug_data@@Base+0x12c4>
   1435c:	ldr	r1, [pc, #3188]	; 14fd8 <print_debug_data@@Base+0x1248>
   14360:	add	r1, pc, r1
   14364:	ldr	r1, [r1]
   14368:	cmp	r1, #0
   1436c:	beq	143fc <print_debug_data@@Base+0x66c>
   14370:	ldr	r0, [fp, #-12]
   14374:	sub	r1, fp, #96	; 0x60
   14378:	bl	12994 <coda_cursor_get_file_bit_offset@plt>
   1437c:	cmp	r0, #0
   14380:	beq	14390 <print_debug_data@@Base+0x600>
   14384:	ldr	r0, [pc, #3156]	; 14fe0 <print_debug_data@@Base+0x1250>
   14388:	ldr	r0, [pc, r0]
   1438c:	blx	r0
   14390:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14394:	cmp	r0, #0
   14398:	bmi	143f8 <print_debug_data@@Base+0x668>
   1439c:	b	143a0 <print_debug_data@@Base+0x610>
   143a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   143a4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   143a8:	lsr	r0, r0, #3
   143ac:	orr	r0, r0, r1, lsl #29
   143b0:	asr	r1, r1, #3
   143b4:	sub	r2, fp, #117	; 0x75
   143b8:	str	r2, [sp, #64]	; 0x40
   143bc:	bl	129e8 <coda_str64@plt>
   143c0:	ldr	r0, [pc, #3188]	; 1503c <print_debug_data@@Base+0x12ac>
   143c4:	add	r0, pc, r0
   143c8:	ldr	r1, [sp, #64]	; 0x40
   143cc:	bl	150c0 <print_debug_data@@Base+0x1330>
   143d0:	ldrb	r1, [fp, #-96]	; 0xffffffa0
   143d4:	tst	r1, #7
   143d8:	beq	143f4 <print_debug_data@@Base+0x664>
   143dc:	b	143e0 <print_debug_data@@Base+0x650>
   143e0:	ldr	r0, [pc, #3068]	; 14fe4 <print_debug_data@@Base+0x1254>
   143e4:	add	r0, pc, r0
   143e8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   143ec:	and	r1, r1, #7
   143f0:	bl	150c0 <print_debug_data@@Base+0x1330>
   143f4:	b	143f8 <print_debug_data@@Base+0x668>
   143f8:	b	143fc <print_debug_data@@Base+0x66c>
   143fc:	ldr	r0, [pc, #3052]	; 14ff0 <print_debug_data@@Base+0x1260>
   14400:	add	r0, pc, r0
   14404:	bl	150c0 <print_debug_data@@Base+0x1330>
   14408:	ldr	r1, [pc, #3032]	; 14fe8 <print_debug_data@@Base+0x1258>
   1440c:	ldr	r1, [pc, r1]
   14410:	ldr	r2, [pc, #3028]	; 14fec <print_debug_data@@Base+0x125c>
   14414:	add	r2, pc, r2
   14418:	ldr	r3, [r2]
   1441c:	add	r3, r3, #1
   14420:	str	r3, [r2]
   14424:	ldr	r1, [r1]
   14428:	cmp	r1, #0
   1442c:	blt	14448 <print_debug_data@@Base+0x6b8>
   14430:	ldr	r0, [pc, #3004]	; 14ff4 <print_debug_data@@Base+0x1264>
   14434:	ldr	r0, [pc, r0]
   14438:	ldr	r1, [fp, #-16]
   1443c:	ldr	r0, [r0]
   14440:	cmp	r1, r0
   14444:	bge	1445c <print_debug_data@@Base+0x6cc>
   14448:	ldr	r0, [fp, #-12]
   1444c:	ldr	r1, [fp, #-16]
   14450:	add	r1, r1, #1
   14454:	bl	13fc8 <print_debug_data@@Base+0x238>
   14458:	b	14468 <print_debug_data@@Base+0x6d8>
   1445c:	ldr	r0, [pc, #2964]	; 14ff8 <print_debug_data@@Base+0x1268>
   14460:	add	r0, pc, r0
   14464:	bl	15054 <print_debug_data@@Base+0x12c4>
   14468:	ldr	r0, [pc, #2956]	; 14ffc <print_debug_data@@Base+0x126c>
   1446c:	add	r0, pc, r0
   14470:	ldr	r1, [r0]
   14474:	mvn	r2, #0
   14478:	add	r1, r1, r2
   1447c:	str	r1, [r0]
   14480:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14488:	sub	r1, r1, #1
   1448c:	cmp	r0, r1
   14490:	bge	144b4 <print_debug_data@@Base+0x724>
   14494:	ldr	r0, [fp, #-12]
   14498:	bl	12934 <coda_cursor_goto_next_record_field@plt>
   1449c:	cmp	r0, #0
   144a0:	beq	144b0 <print_debug_data@@Base+0x720>
   144a4:	ldr	r0, [pc, #2900]	; 15000 <print_debug_data@@Base+0x1270>
   144a8:	ldr	r0, [pc, r0]
   144ac:	blx	r0
   144b0:	b	144b4 <print_debug_data@@Base+0x724>
   144b4:	b	144b8 <print_debug_data@@Base+0x728>
   144b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144bc:	add	r0, r0, #1
   144c0:	str	r0, [fp, #-40]	; 0xffffffd8
   144c4:	b	14318 <print_debug_data@@Base+0x588>
   144c8:	ldr	r0, [fp, #-12]
   144cc:	bl	127b4 <coda_cursor_goto_parent@plt>
   144d0:	b	144d4 <print_debug_data@@Base+0x744>
   144d4:	b	14ebc <print_debug_data@@Base+0x112c>
   144d8:	sub	r2, fp, #152	; 0x98
   144dc:	ldr	r0, [fp, #-12]
   144e0:	sub	r1, fp, #156	; 0x9c
   144e4:	bl	128d4 <coda_cursor_get_array_dim@plt>
   144e8:	cmp	r0, #0
   144ec:	beq	144fc <print_debug_data@@Base+0x76c>
   144f0:	ldr	r0, [pc, #2700]	; 14f84 <print_debug_data@@Base+0x11f4>
   144f4:	ldr	r0, [pc, r0]
   144f8:	blx	r0
   144fc:	ldr	r0, [fp, #-156]	; 0xffffff64
   14500:	cmp	r0, #0
   14504:	blt	1480c <print_debug_data@@Base+0xa7c>
   14508:	movw	r0, #1
   1450c:	str	r0, [fp, #-160]	; 0xffffff60
   14510:	movw	r0, #0
   14514:	str	r0, [fp, #-196]	; 0xffffff3c
   14518:	ldr	r0, [fp, #-196]	; 0xffffff3c
   1451c:	ldr	r1, [fp, #-156]	; 0xffffff64
   14520:	cmp	r0, r1
   14524:	bge	14564 <print_debug_data@@Base+0x7d4>
   14528:	ldr	r0, [fp, #-196]	; 0xffffff3c
   1452c:	sub	r1, fp, #152	; 0x98
   14530:	ldr	r0, [r1, r0, lsl #2]
   14534:	ldr	r1, [fp, #-160]	; 0xffffff60
   14538:	mul	r0, r1, r0
   1453c:	str	r0, [fp, #-160]	; 0xffffff60
   14540:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14544:	sub	r1, fp, #192	; 0xc0
   14548:	add	r0, r1, r0, lsl #2
   1454c:	movw	r1, #0
   14550:	str	r1, [r0]
   14554:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14558:	add	r0, r0, #1
   1455c:	str	r0, [fp, #-196]	; 0xffffff3c
   14560:	b	14518 <print_debug_data@@Base+0x788>
   14564:	ldr	r0, [fp, #-160]	; 0xffffff60
   14568:	cmp	r0, #0
   1456c:	ble	14808 <print_debug_data@@Base+0xa78>
   14570:	ldr	r0, [fp, #-12]
   14574:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   14578:	cmp	r0, #0
   1457c:	beq	1458c <print_debug_data@@Base+0x7fc>
   14580:	ldr	r0, [pc, #2560]	; 14f88 <print_debug_data@@Base+0x11f8>
   14584:	ldr	r0, [pc, r0]
   14588:	blx	r0
   1458c:	movw	r0, #0
   14590:	str	r0, [fp, #-196]	; 0xffffff3c
   14594:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14598:	ldr	r1, [fp, #-160]	; 0xffffff60
   1459c:	cmp	r0, r1
   145a0:	bge	14800 <print_debug_data@@Base+0xa70>
   145a4:	ldr	r0, [pc, #2528]	; 14f8c <print_debug_data@@Base+0x11fc>
   145a8:	add	r0, pc, r0
   145ac:	bl	15054 <print_debug_data@@Base+0x12c4>
   145b0:	movw	r1, #0
   145b4:	str	r1, [fp, #-200]	; 0xffffff38
   145b8:	ldr	r0, [fp, #-200]	; 0xffffff38
   145bc:	ldr	r1, [fp, #-156]	; 0xffffff64
   145c0:	cmp	r0, r1
   145c4:	bge	14618 <print_debug_data@@Base+0x888>
   145c8:	ldr	r0, [pc, #2540]	; 14fbc <print_debug_data@@Base+0x122c>
   145cc:	add	r0, pc, r0
   145d0:	ldr	r1, [fp, #-200]	; 0xffffff38
   145d4:	sub	r2, fp, #192	; 0xc0
   145d8:	add	r1, r2, r1, lsl #2
   145dc:	ldr	r1, [r1]
   145e0:	bl	150c0 <print_debug_data@@Base+0x1330>
   145e4:	ldr	r1, [fp, #-200]	; 0xffffff38
   145e8:	ldr	r2, [fp, #-156]	; 0xffffff64
   145ec:	sub	r2, r2, #1
   145f0:	cmp	r1, r2
   145f4:	bge	14604 <print_debug_data@@Base+0x874>
   145f8:	ldr	r0, [pc, #2496]	; 14fc0 <print_debug_data@@Base+0x1230>
   145fc:	add	r0, pc, r0
   14600:	bl	150c0 <print_debug_data@@Base+0x1330>
   14604:	b	14608 <print_debug_data@@Base+0x878>
   14608:	ldr	r0, [fp, #-200]	; 0xffffff38
   1460c:	add	r0, r0, #1
   14610:	str	r0, [fp, #-200]	; 0xffffff38
   14614:	b	145b8 <print_debug_data@@Base+0x828>
   14618:	ldr	r0, [pc, #2420]	; 14f94 <print_debug_data@@Base+0x1204>
   1461c:	add	r0, pc, r0
   14620:	bl	150c0 <print_debug_data@@Base+0x1330>
   14624:	ldr	r1, [pc, #2404]	; 14f90 <print_debug_data@@Base+0x1200>
   14628:	add	r1, pc, r1
   1462c:	ldr	r1, [r1]
   14630:	cmp	r1, #0
   14634:	beq	146c4 <print_debug_data@@Base+0x934>
   14638:	ldr	r0, [fp, #-12]
   1463c:	sub	r1, fp, #208	; 0xd0
   14640:	bl	12994 <coda_cursor_get_file_bit_offset@plt>
   14644:	cmp	r0, #0
   14648:	beq	14658 <print_debug_data@@Base+0x8c8>
   1464c:	ldr	r0, [pc, #2372]	; 14f98 <print_debug_data@@Base+0x1208>
   14650:	ldr	r0, [pc, r0]
   14654:	blx	r0
   14658:	ldr	r0, [fp, #-204]	; 0xffffff34
   1465c:	cmp	r0, #0
   14660:	bmi	146c0 <print_debug_data@@Base+0x930>
   14664:	b	14668 <print_debug_data@@Base+0x8d8>
   14668:	ldr	r0, [fp, #-208]	; 0xffffff30
   1466c:	ldr	r1, [fp, #-204]	; 0xffffff34
   14670:	lsr	r0, r0, #3
   14674:	orr	r0, r0, r1, lsl #29
   14678:	asr	r1, r1, #3
   1467c:	sub	r2, fp, #229	; 0xe5
   14680:	str	r2, [sp, #60]	; 0x3c
   14684:	bl	129e8 <coda_str64@plt>
   14688:	ldr	r0, [pc, #2480]	; 15040 <print_debug_data@@Base+0x12b0>
   1468c:	add	r0, pc, r0
   14690:	ldr	r1, [sp, #60]	; 0x3c
   14694:	bl	150c0 <print_debug_data@@Base+0x1330>
   14698:	ldrb	r1, [fp, #-208]	; 0xffffff30
   1469c:	tst	r1, #7
   146a0:	beq	146bc <print_debug_data@@Base+0x92c>
   146a4:	b	146a8 <print_debug_data@@Base+0x918>
   146a8:	ldr	r0, [pc, #2284]	; 14f9c <print_debug_data@@Base+0x120c>
   146ac:	add	r0, pc, r0
   146b0:	ldr	r1, [fp, #-208]	; 0xffffff30
   146b4:	and	r1, r1, #7
   146b8:	bl	150c0 <print_debug_data@@Base+0x1330>
   146bc:	b	146c0 <print_debug_data@@Base+0x930>
   146c0:	b	146c4 <print_debug_data@@Base+0x934>
   146c4:	ldr	r0, [pc, #2268]	; 14fa8 <print_debug_data@@Base+0x1218>
   146c8:	add	r0, pc, r0
   146cc:	bl	150c0 <print_debug_data@@Base+0x1330>
   146d0:	ldr	r1, [pc, #2248]	; 14fa0 <print_debug_data@@Base+0x1210>
   146d4:	ldr	r1, [pc, r1]
   146d8:	ldr	r2, [pc, #2244]	; 14fa4 <print_debug_data@@Base+0x1214>
   146dc:	add	r2, pc, r2
   146e0:	ldr	r3, [r2]
   146e4:	add	r3, r3, #1
   146e8:	str	r3, [r2]
   146ec:	ldr	r1, [r1]
   146f0:	cmp	r1, #0
   146f4:	blt	14710 <print_debug_data@@Base+0x980>
   146f8:	ldr	r0, [pc, #2220]	; 14fac <print_debug_data@@Base+0x121c>
   146fc:	ldr	r0, [pc, r0]
   14700:	ldr	r1, [fp, #-16]
   14704:	ldr	r0, [r0]
   14708:	cmp	r1, r0
   1470c:	bge	14724 <print_debug_data@@Base+0x994>
   14710:	ldr	r0, [fp, #-12]
   14714:	ldr	r1, [fp, #-16]
   14718:	add	r1, r1, #1
   1471c:	bl	13fc8 <print_debug_data@@Base+0x238>
   14720:	b	14730 <print_debug_data@@Base+0x9a0>
   14724:	ldr	r0, [pc, #2180]	; 14fb0 <print_debug_data@@Base+0x1220>
   14728:	add	r0, pc, r0
   1472c:	bl	15054 <print_debug_data@@Base+0x12c4>
   14730:	ldr	r0, [pc, #2172]	; 14fb4 <print_debug_data@@Base+0x1224>
   14734:	add	r0, pc, r0
   14738:	ldr	r1, [r0]
   1473c:	mvn	r2, #0
   14740:	add	r1, r1, r2
   14744:	str	r1, [r0]
   14748:	ldr	r0, [fp, #-156]	; 0xffffff64
   1474c:	sub	r0, r0, #1
   14750:	str	r0, [fp, #-200]	; 0xffffff38
   14754:	ldr	r0, [fp, #-200]	; 0xffffff38
   14758:	cmp	r0, #0
   1475c:	blt	147b8 <print_debug_data@@Base+0xa28>
   14760:	ldr	r0, [fp, #-200]	; 0xffffff38
   14764:	sub	r1, fp, #192	; 0xc0
   14768:	ldr	r2, [r1, r0, lsl #2]
   1476c:	add	r2, r2, #1
   14770:	str	r2, [r1, r0, lsl #2]
   14774:	ldr	r0, [fp, #-200]	; 0xffffff38
   14778:	ldr	r1, [r1, r0, lsl #2]
   1477c:	sub	r2, fp, #152	; 0x98
   14780:	add	r0, r2, r0, lsl #2
   14784:	ldr	r0, [r0]
   14788:	cmp	r1, r0
   1478c:	bne	147b0 <print_debug_data@@Base+0xa20>
   14790:	ldr	r0, [fp, #-200]	; 0xffffff38
   14794:	sub	r1, r0, #1
   14798:	str	r1, [fp, #-200]	; 0xffffff38
   1479c:	sub	r1, fp, #192	; 0xc0
   147a0:	add	r0, r1, r0, lsl #2
   147a4:	movw	r1, #0
   147a8:	str	r1, [r0]
   147ac:	b	147b4 <print_debug_data@@Base+0xa24>
   147b0:	b	147b8 <print_debug_data@@Base+0xa28>
   147b4:	b	14754 <print_debug_data@@Base+0x9c4>
   147b8:	ldr	r0, [fp, #-196]	; 0xffffff3c
   147bc:	ldr	r1, [fp, #-160]	; 0xffffff60
   147c0:	sub	r1, r1, #1
   147c4:	cmp	r0, r1
   147c8:	bge	147ec <print_debug_data@@Base+0xa5c>
   147cc:	ldr	r0, [fp, #-12]
   147d0:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   147d4:	cmp	r0, #0
   147d8:	beq	147e8 <print_debug_data@@Base+0xa58>
   147dc:	ldr	r0, [pc, #2004]	; 14fb8 <print_debug_data@@Base+0x1228>
   147e0:	ldr	r0, [pc, r0]
   147e4:	blx	r0
   147e8:	b	147ec <print_debug_data@@Base+0xa5c>
   147ec:	b	147f0 <print_debug_data@@Base+0xa60>
   147f0:	ldr	r0, [fp, #-196]	; 0xffffff3c
   147f4:	add	r0, r0, #1
   147f8:	str	r0, [fp, #-196]	; 0xffffff3c
   147fc:	b	14594 <print_debug_data@@Base+0x804>
   14800:	ldr	r0, [fp, #-12]
   14804:	bl	127b4 <coda_cursor_goto_parent@plt>
   14808:	b	1480c <print_debug_data@@Base+0xa7c>
   1480c:	b	14ebc <print_debug_data@@Base+0x112c>
   14810:	ldr	r0, [fp, #-12]
   14814:	sub	r1, fp, #240	; 0xf0
   14818:	bl	128e0 <coda_cursor_has_ascii_content@plt>
   1481c:	cmp	r0, #0
   14820:	beq	14830 <print_debug_data@@Base+0xaa0>
   14824:	ldr	r0, [pc, #1760]	; 14f0c <print_debug_data@@Base+0x117c>
   14828:	ldr	r0, [pc, r0]
   1482c:	blx	r0
   14830:	ldr	r0, [fp, #-240]	; 0xffffff10
   14834:	cmp	r0, #0
   14838:	beq	1491c <print_debug_data@@Base+0xb8c>
   1483c:	ldr	r0, [fp, #-12]
   14840:	sub	r1, fp, #244	; 0xf4
   14844:	bl	127e4 <coda_cursor_get_string_length@plt>
   14848:	cmp	r0, #0
   1484c:	beq	1485c <print_debug_data@@Base+0xacc>
   14850:	ldr	r0, [pc, #1720]	; 14f10 <print_debug_data@@Base+0x1180>
   14854:	ldr	r0, [pc, r0]
   14858:	blx	r0
   1485c:	ldr	r0, [fp, #-244]	; 0xffffff0c
   14860:	add	r0, r0, #1
   14864:	bl	12784 <malloc@plt>
   14868:	str	r0, [fp, #-248]	; 0xffffff08
   1486c:	ldr	r0, [fp, #-248]	; 0xffffff08
   14870:	movw	r1, #0
   14874:	cmp	r0, r1
   14878:	bne	148b0 <print_debug_data@@Base+0xb20>
   1487c:	ldr	r0, [pc, #1684]	; 14f18 <print_debug_data@@Base+0x1188>
   14880:	add	r1, pc, r0
   14884:	ldr	r0, [pc, #1680]	; 14f1c <print_debug_data@@Base+0x118c>
   14888:	add	r3, pc, r0
   1488c:	ldr	r0, [fp, #-244]	; 0xffffff0c
   14890:	add	r2, r0, #1
   14894:	mvn	r0, #0
   14898:	movw	ip, #410	; 0x19a
   1489c:	str	ip, [sp]
   148a0:	bl	12610 <coda_set_error@plt>
   148a4:	ldr	r0, [pc, #1640]	; 14f14 <print_debug_data@@Base+0x1184>
   148a8:	ldr	r0, [pc, r0]
   148ac:	blx	r0
   148b0:	ldr	r0, [fp, #-12]
   148b4:	ldr	r1, [fp, #-248]	; 0xffffff08
   148b8:	ldr	r2, [fp, #-244]	; 0xffffff0c
   148bc:	add	r2, r2, #1
   148c0:	bl	127a8 <coda_cursor_read_string@plt>
   148c4:	cmp	r0, #0
   148c8:	beq	148d8 <print_debug_data@@Base+0xb48>
   148cc:	ldr	r0, [pc, #1612]	; 14f20 <print_debug_data@@Base+0x1190>
   148d0:	ldr	r0, [pc, r0]
   148d4:	blx	r0
   148d8:	ldr	r0, [pc, #1608]	; 14f28 <print_debug_data@@Base+0x1198>
   148dc:	add	r0, pc, r0
   148e0:	bl	15054 <print_debug_data@@Base+0x12c4>
   148e4:	ldr	r1, [fp, #-248]	; 0xffffff08
   148e8:	ldr	r2, [fp, #-244]	; 0xffffff0c
   148ec:	str	r0, [sp, #56]	; 0x38
   148f0:	mov	r0, r1
   148f4:	mov	r1, r2
   148f8:	bl	15128 <print_debug_data@@Base+0x1398>
   148fc:	ldr	r0, [pc, #1568]	; 14f24 <print_debug_data@@Base+0x1194>
   14900:	add	r0, pc, r0
   14904:	ldr	r1, [fp, #-244]	; 0xffffff0c
   14908:	bl	150c0 <print_debug_data@@Base+0x1330>
   1490c:	ldr	r1, [fp, #-248]	; 0xffffff08
   14910:	str	r0, [sp, #52]	; 0x34
   14914:	mov	r0, r1
   14918:	bl	12658 <free@plt>
   1491c:	ldr	r0, [fp, #-12]
   14920:	sub	r1, fp, #236	; 0xec
   14924:	bl	12778 <coda_cursor_get_read_type@plt>
   14928:	cmp	r0, #0
   1492c:	beq	1493c <print_debug_data@@Base+0xbac>
   14930:	ldr	r0, [pc, #1524]	; 14f2c <print_debug_data@@Base+0x119c>
   14934:	ldr	r0, [pc, r0]
   14938:	blx	r0
   1493c:	ldr	r0, [fp, #-236]	; 0xffffff14
   14940:	add	r0, r0, #1
   14944:	cmp	r0, #13
   14948:	str	r0, [sp, #48]	; 0x30
   1494c:	bhi	14cc4 <print_debug_data@@Base+0xf34>
   14950:	add	r0, pc, #8
   14954:	ldr	r1, [sp, #48]	; 0x30
   14958:	ldr	r2, [r0, r1, lsl #2]
   1495c:	add	pc, r0, r2
   14960:	andeq	r0, r0, r0, lsr r3
   14964:	ldrdeq	r0, [r0], -r4
   14968:	andeq	r0, r0, r8, lsl #4
   1496c:	ldrdeq	r0, [r0], -r4
   14970:	andeq	r0, r0, r8, lsl #4
   14974:	ldrdeq	r0, [r0], -r4
   14978:	andeq	r0, r0, r8, lsl #4
   1497c:	andeq	r0, r0, ip, lsr r2
   14980:	andeq	r0, r0, r8, lsl #5
   14984:	ldrdeq	r0, [r0], -r4
   14988:	ldrdeq	r0, [r0], -r4
   1498c:	andeq	r0, r0, r0, lsr r3
   14990:	andeq	r0, r0, r0, lsr r3
   14994:	andeq	r0, r0, r8, lsr r0
   14998:	ldr	r0, [fp, #-12]
   1499c:	sub	r1, fp, #256	; 0x100
   149a0:	bl	1294c <coda_cursor_get_bit_size@plt>
   149a4:	cmp	r0, #0
   149a8:	beq	149b8 <print_debug_data@@Base+0xc28>
   149ac:	ldr	r0, [pc, #1460]	; 14f68 <print_debug_data@@Base+0x11d8>
   149b0:	ldr	r0, [pc, r0]
   149b4:	blx	r0
   149b8:	ldr	r0, [fp, #-256]	; 0xffffff00
   149bc:	ldr	r1, [fp, #-252]	; 0xffffff04
   149c0:	lsr	r2, r0, #3
   149c4:	orr	r2, r2, r1, lsl #29
   149c8:	asr	r1, r1, #3
   149cc:	and	r0, r0, #7
   149d0:	adds	r3, r2, #1
   149d4:	adc	ip, r1, #0
   149d8:	cmp	r0, #0
   149dc:	movne	r2, r3
   149e0:	cmp	r0, #0
   149e4:	movne	r1, ip
   149e8:	str	r2, [fp, #-264]	; 0xfffffef8
   149ec:	str	r1, [fp, #-260]	; 0xfffffefc
   149f0:	ldr	r0, [fp, #-264]	; 0xfffffef8
   149f4:	bl	12784 <malloc@plt>
   149f8:	str	r0, [fp, #-268]	; 0xfffffef4
   149fc:	ldr	r0, [fp, #-268]	; 0xfffffef4
   14a00:	movw	r1, #0
   14a04:	cmp	r0, r1
   14a08:	bne	14a3c <print_debug_data@@Base+0xcac>
   14a0c:	ldr	r0, [pc, #1372]	; 14f70 <print_debug_data@@Base+0x11e0>
   14a10:	add	r1, pc, r0
   14a14:	ldr	r0, [pc, #1368]	; 14f74 <print_debug_data@@Base+0x11e4>
   14a18:	add	r3, pc, r0
   14a1c:	ldr	r2, [fp, #-264]	; 0xfffffef8
   14a20:	mvn	r0, #0
   14a24:	movw	ip, #447	; 0x1bf
   14a28:	str	ip, [sp]
   14a2c:	bl	12610 <coda_set_error@plt>
   14a30:	ldr	r0, [pc, #1332]	; 14f6c <print_debug_data@@Base+0x11dc>
   14a34:	ldr	r0, [pc, r0]
   14a38:	blx	r0
   14a3c:	ldr	r0, [fp, #-12]
   14a40:	ldr	r1, [fp, #-268]	; 0xfffffef4
   14a44:	ldr	r2, [fp, #-256]	; 0xffffff00
   14a48:	ldr	r3, [fp, #-252]	; 0xffffff04
   14a4c:	mov	ip, sp
   14a50:	str	r3, [ip, #4]
   14a54:	str	r2, [ip]
   14a58:	mov	r2, #0
   14a5c:	str	r2, [sp, #44]	; 0x2c
   14a60:	ldr	r3, [sp, #44]	; 0x2c
   14a64:	bl	129dc <coda_cursor_read_bits@plt>
   14a68:	cmp	r0, #0
   14a6c:	beq	14a7c <print_debug_data@@Base+0xcec>
   14a70:	ldr	r0, [pc, #1280]	; 14f78 <print_debug_data@@Base+0x11e8>
   14a74:	ldr	r0, [pc, r0]
   14a78:	blx	r0
   14a7c:	ldr	r0, [pc, #1472]	; 15044 <print_debug_data@@Base+0x12b4>
   14a80:	add	r0, pc, r0
   14a84:	bl	15054 <print_debug_data@@Base+0x12c4>
   14a88:	ldr	r1, [fp, #-268]	; 0xfffffef4
   14a8c:	ldr	r2, [fp, #-264]	; 0xfffffef8
   14a90:	str	r0, [sp, #40]	; 0x28
   14a94:	mov	r0, r1
   14a98:	mov	r1, r2
   14a9c:	bl	15128 <print_debug_data@@Base+0x1398>
   14aa0:	ldr	r0, [pc, #1440]	; 15048 <print_debug_data@@Base+0x12b8>
   14aa4:	add	r0, pc, r0
   14aa8:	bl	150c0 <print_debug_data@@Base+0x1330>
   14aac:	ldr	r1, [fp, #-256]	; 0xffffff00
   14ab0:	ldr	r2, [fp, #-252]	; 0xffffff04
   14ab4:	lsr	r1, r1, #3
   14ab8:	orr	r1, r1, r2, lsl #29
   14abc:	asr	r2, r2, #3
   14ac0:	sub	lr, fp, #256	; 0x100
   14ac4:	sub	r3, lr, #33	; 0x21
   14ac8:	str	r0, [sp, #36]	; 0x24
   14acc:	mov	r0, r1
   14ad0:	mov	r1, r2
   14ad4:	mov	r2, r3
   14ad8:	str	r3, [sp, #32]
   14adc:	bl	129e8 <coda_str64@plt>
   14ae0:	ldr	r0, [pc, #1380]	; 1504c <print_debug_data@@Base+0x12bc>
   14ae4:	add	r0, pc, r0
   14ae8:	ldr	r1, [sp, #32]
   14aec:	bl	150c0 <print_debug_data@@Base+0x1330>
   14af0:	ldrb	r1, [fp, #-256]	; 0xffffff00
   14af4:	tst	r1, #7
   14af8:	beq	14b14 <print_debug_data@@Base+0xd84>
   14afc:	b	14b00 <print_debug_data@@Base+0xd70>
   14b00:	ldr	r0, [pc, #1140]	; 14f7c <print_debug_data@@Base+0x11ec>
   14b04:	add	r0, pc, r0
   14b08:	ldr	r1, [fp, #-256]	; 0xffffff00
   14b0c:	and	r1, r1, #7
   14b10:	bl	150c0 <print_debug_data@@Base+0x1330>
   14b14:	ldr	r0, [pc, #1124]	; 14f80 <print_debug_data@@Base+0x11f0>
   14b18:	add	r0, pc, r0
   14b1c:	bl	150c0 <print_debug_data@@Base+0x1330>
   14b20:	ldr	r1, [fp, #-268]	; 0xfffffef4
   14b24:	str	r0, [sp, #28]
   14b28:	mov	r0, r1
   14b2c:	bl	12658 <free@plt>
   14b30:	b	14cc4 <print_debug_data@@Base+0xf34>
   14b34:	ldr	r0, [fp, #-12]
   14b38:	sub	r1, fp, #296	; 0x128
   14b3c:	bl	12988 <coda_cursor_read_int32@plt>
   14b40:	cmp	r0, #0
   14b44:	beq	14b54 <print_debug_data@@Base+0xdc4>
   14b48:	ldr	r0, [pc, #1040]	; 14f60 <print_debug_data@@Base+0x11d0>
   14b4c:	ldr	r0, [pc, r0]
   14b50:	blx	r0
   14b54:	ldr	r0, [pc, #1032]	; 14f64 <print_debug_data@@Base+0x11d4>
   14b58:	add	r0, pc, r0
   14b5c:	ldr	r1, [fp, #-296]	; 0xfffffed8
   14b60:	bl	15054 <print_debug_data@@Base+0x12c4>
   14b64:	b	14cc4 <print_debug_data@@Base+0xf34>
   14b68:	ldr	r0, [fp, #-12]
   14b6c:	sub	r1, fp, #300	; 0x12c
   14b70:	bl	1267c <coda_cursor_read_uint32@plt>
   14b74:	cmp	r0, #0
   14b78:	beq	14b88 <print_debug_data@@Base+0xdf8>
   14b7c:	ldr	r0, [pc, #980]	; 14f58 <print_debug_data@@Base+0x11c8>
   14b80:	ldr	r0, [pc, r0]
   14b84:	blx	r0
   14b88:	ldr	r0, [pc, #972]	; 14f5c <print_debug_data@@Base+0x11cc>
   14b8c:	add	r0, pc, r0
   14b90:	ldr	r1, [fp, #-300]	; 0xfffffed4
   14b94:	bl	15054 <print_debug_data@@Base+0x12c4>
   14b98:	b	14cc4 <print_debug_data@@Base+0xf34>
   14b9c:	ldr	r0, [fp, #-12]
   14ba0:	sub	r1, fp, #312	; 0x138
   14ba4:	bl	128f8 <coda_cursor_read_int64@plt>
   14ba8:	cmp	r0, #0
   14bac:	beq	14bbc <print_debug_data@@Base+0xe2c>
   14bb0:	ldr	r0, [pc, #920]	; 14f50 <print_debug_data@@Base+0x11c0>
   14bb4:	ldr	r0, [pc, r0]
   14bb8:	blx	r0
   14bbc:	sub	lr, fp, #256	; 0x100
   14bc0:	sub	r2, lr, #77	; 0x4d
   14bc4:	ldr	r0, [fp, #-312]	; 0xfffffec8
   14bc8:	ldr	r1, [fp, #-308]	; 0xfffffecc
   14bcc:	bl	129e8 <coda_str64@plt>
   14bd0:	ldr	r0, [pc, #892]	; 14f54 <print_debug_data@@Base+0x11c4>
   14bd4:	add	r0, pc, r0
   14bd8:	sub	lr, fp, #256	; 0x100
   14bdc:	sub	r1, lr, #77	; 0x4d
   14be0:	bl	15054 <print_debug_data@@Base+0x12c4>
   14be4:	b	14cc4 <print_debug_data@@Base+0xf34>
   14be8:	ldr	r0, [fp, #-12]
   14bec:	sub	r1, fp, #344	; 0x158
   14bf0:	bl	127f0 <coda_cursor_read_uint64@plt>
   14bf4:	cmp	r0, #0
   14bf8:	beq	14c08 <print_debug_data@@Base+0xe78>
   14bfc:	ldr	r0, [pc, #836]	; 14f48 <print_debug_data@@Base+0x11b8>
   14c00:	ldr	r0, [pc, r0]
   14c04:	blx	r0
   14c08:	sub	lr, fp, #256	; 0x100
   14c0c:	sub	r2, lr, #109	; 0x6d
   14c10:	ldr	r0, [fp, #-344]	; 0xfffffea8
   14c14:	ldr	r1, [fp, #-340]	; 0xfffffeac
   14c18:	bl	1264c <coda_str64u@plt>
   14c1c:	ldr	r0, [pc, #808]	; 14f4c <print_debug_data@@Base+0x11bc>
   14c20:	add	r0, pc, r0
   14c24:	sub	lr, fp, #256	; 0x100
   14c28:	sub	r1, lr, #109	; 0x6d
   14c2c:	bl	15054 <print_debug_data@@Base+0x12c4>
   14c30:	b	14cc4 <print_debug_data@@Base+0xf34>
   14c34:	ldr	r0, [fp, #-12]
   14c38:	sub	r1, fp, #376	; 0x178
   14c3c:	bl	127fc <coda_cursor_read_double@plt>
   14c40:	cmp	r0, #0
   14c44:	beq	14c54 <print_debug_data@@Base+0xec4>
   14c48:	ldr	r0, [pc, #748]	; 14f3c <print_debug_data@@Base+0x11ac>
   14c4c:	ldr	r0, [pc, r0]
   14c50:	blx	r0
   14c54:	ldr	r0, [fp, #-236]	; 0xffffff14
   14c58:	cmp	r0, #8
   14c5c:	bne	14c78 <print_debug_data@@Base+0xee8>
   14c60:	ldr	r0, [pc, #732]	; 14f44 <print_debug_data@@Base+0x11b4>
   14c64:	add	r0, pc, r0
   14c68:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14c6c:	vmov	r2, r3, d16
   14c70:	bl	15054 <print_debug_data@@Base+0x12c4>
   14c74:	b	14c8c <print_debug_data@@Base+0xefc>
   14c78:	ldr	r0, [pc, #704]	; 14f40 <print_debug_data@@Base+0x11b0>
   14c7c:	add	r0, pc, r0
   14c80:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14c84:	vmov	r2, r3, d16
   14c88:	bl	15054 <print_debug_data@@Base+0x12c4>
   14c8c:	b	14cc4 <print_debug_data@@Base+0xf34>
   14c90:	ldr	r0, [fp, #-240]	; 0xffffff10
   14c94:	cmp	r0, #0
   14c98:	beq	14ca0 <print_debug_data@@Base+0xf10>
   14c9c:	b	14cc0 <print_debug_data@@Base+0xf30>
   14ca0:	ldr	r0, [pc, #648]	; 14f30 <print_debug_data@@Base+0x11a0>
   14ca4:	add	r0, pc, r0
   14ca8:	ldr	r1, [pc, #644]	; 14f34 <print_debug_data@@Base+0x11a4>
   14cac:	add	r1, pc, r1
   14cb0:	ldr	r2, [pc, #640]	; 14f38 <print_debug_data@@Base+0x11a8>
   14cb4:	add	r3, pc, r2
   14cb8:	movw	r2, #548	; 0x224
   14cbc:	bl	129f4 <__assert_fail@plt>
   14cc0:	b	14cc4 <print_debug_data@@Base+0xf34>
   14cc4:	b	14ebc <print_debug_data@@Base+0x112c>
   14cc8:	ldr	r0, [fp, #-12]
   14ccc:	sub	r1, fp, #380	; 0x17c
   14cd0:	bl	12724 <coda_cursor_get_special_type@plt>
   14cd4:	cmp	r0, #0
   14cd8:	beq	14ce8 <print_debug_data@@Base+0xf58>
   14cdc:	ldr	r0, [pc, #504]	; 14edc <print_debug_data@@Base+0x114c>
   14ce0:	ldr	r0, [pc, r0]
   14ce4:	blx	r0
   14ce8:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14cec:	cmp	r0, #0
   14cf0:	beq	14d44 <print_debug_data@@Base+0xfb4>
   14cf4:	ldr	r0, [fp, #-12]
   14cf8:	add	r1, sp, #144	; 0x90
   14cfc:	mov	r2, r1
   14d00:	str	r0, [sp, #24]
   14d04:	mov	r0, r2
   14d08:	ldr	r2, [sp, #24]
   14d0c:	str	r1, [sp, #20]
   14d10:	mov	r1, r2
   14d14:	movw	r2, #520	; 0x208
   14d18:	bl	126ac <memcpy@plt>
   14d1c:	ldr	r0, [sp, #20]
   14d20:	bl	12970 <coda_cursor_use_base_type_of_special_type@plt>
   14d24:	cmp	r0, #0
   14d28:	beq	14d38 <print_debug_data@@Base+0xfa8>
   14d2c:	ldr	r0, [pc, #428]	; 14ee0 <print_debug_data@@Base+0x1150>
   14d30:	ldr	r0, [pc, r0]
   14d34:	blx	r0
   14d38:	ldr	r1, [fp, #-16]
   14d3c:	add	r0, sp, #144	; 0x90
   14d40:	bl	13fc8 <print_debug_data@@Base+0x238>
   14d44:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14d48:	bl	12598 <coda_type_get_special_type_name@plt>
   14d4c:	ldr	r1, [pc, #764]	; 15050 <print_debug_data@@Base+0x12c0>
   14d50:	add	r1, pc, r1
   14d54:	str	r0, [sp, #16]
   14d58:	mov	r0, r1
   14d5c:	ldr	r1, [sp, #16]
   14d60:	bl	15054 <print_debug_data@@Base+0x12c4>
   14d64:	ldr	r1, [fp, #-380]	; 0xfffffe84
   14d68:	cmp	r1, #3
   14d6c:	str	r1, [sp, #12]
   14d70:	bhi	14eb8 <print_debug_data@@Base+0x1128>
   14d74:	add	r0, pc, #8
   14d78:	ldr	r1, [sp, #12]
   14d7c:	ldr	r2, [r0, r1, lsl #2]
   14d80:	add	pc, r0, r2
   14d84:	andeq	r0, r0, r0, lsl r0
   14d88:	andeq	r0, r0, r0, lsr #32
   14d8c:	andeq	r0, r0, r8, asr r0
   14d90:	strdeq	r0, [r0], -r4
   14d94:	ldr	r0, [pc, #364]	; 14f08 <print_debug_data@@Base+0x1178>
   14d98:	add	r0, pc, r0
   14d9c:	bl	150c0 <print_debug_data@@Base+0x1330>
   14da0:	b	14eb8 <print_debug_data@@Base+0x1128>
   14da4:	ldr	r0, [fp, #-12]
   14da8:	add	r1, sp, #136	; 0x88
   14dac:	bl	127fc <coda_cursor_read_double@plt>
   14db0:	cmp	r0, #0
   14db4:	beq	14dc4 <print_debug_data@@Base+0x1034>
   14db8:	ldr	r0, [pc, #320]	; 14f00 <print_debug_data@@Base+0x1170>
   14dbc:	ldr	r0, [pc, r0]
   14dc0:	blx	r0
   14dc4:	ldr	r0, [pc, #312]	; 14f04 <print_debug_data@@Base+0x1174>
   14dc8:	add	r0, pc, r0
   14dcc:	vldr	d16, [sp, #136]	; 0x88
   14dd0:	vmov	r2, r3, d16
   14dd4:	bl	150c0 <print_debug_data@@Base+0x1330>
   14dd8:	b	14eb8 <print_debug_data@@Base+0x1128>
   14ddc:	ldr	r0, [fp, #-12]
   14de0:	add	r1, sp, #128	; 0x80
   14de4:	bl	127fc <coda_cursor_read_double@plt>
   14de8:	cmp	r0, #0
   14dec:	beq	14dfc <print_debug_data@@Base+0x106c>
   14df0:	ldr	r0, [pc, #244]	; 14eec <print_debug_data@@Base+0x115c>
   14df4:	ldr	r0, [pc, r0]
   14df8:	blx	r0
   14dfc:	vldr	d0, [sp, #128]	; 0x80
   14e00:	bl	12808 <coda_isNaN@plt>
   14e04:	cmp	r0, #0
   14e08:	bne	14e1c <print_debug_data@@Base+0x108c>
   14e0c:	vldr	d0, [sp, #128]	; 0x80
   14e10:	bl	126b8 <coda_isInf@plt>
   14e14:	cmp	r0, #0
   14e18:	beq	14e34 <print_debug_data@@Base+0x10a4>
   14e1c:	ldr	r0, [pc, #216]	; 14efc <print_debug_data@@Base+0x116c>
   14e20:	add	r0, pc, r0
   14e24:	vldr	d16, [sp, #128]	; 0x80
   14e28:	vmov	r2, r3, d16
   14e2c:	bl	150c0 <print_debug_data@@Base+0x1330>
   14e30:	b	14e74 <print_debug_data@@Base+0x10e4>
   14e34:	ldr	r0, [pc, #180]	; 14ef0 <print_debug_data@@Base+0x1160>
   14e38:	add	r0, pc, r0
   14e3c:	add	r1, sp, #101	; 0x65
   14e40:	vldr	d0, [sp, #128]	; 0x80
   14e44:	bl	12634 <coda_time_double_to_string@plt>
   14e48:	cmp	r0, #0
   14e4c:	beq	14e60 <print_debug_data@@Base+0x10d0>
   14e50:	ldr	r0, [pc, #160]	; 14ef8 <print_debug_data@@Base+0x1168>
   14e54:	add	r0, pc, r0
   14e58:	bl	150c0 <print_debug_data@@Base+0x1330>
   14e5c:	b	14e70 <print_debug_data@@Base+0x10e0>
   14e60:	ldr	r0, [pc, #140]	; 14ef4 <print_debug_data@@Base+0x1164>
   14e64:	add	r0, pc, r0
   14e68:	add	r1, sp, #101	; 0x65
   14e6c:	bl	150c0 <print_debug_data@@Base+0x1330>
   14e70:	b	14e74 <print_debug_data@@Base+0x10e4>
   14e74:	b	14eb8 <print_debug_data@@Base+0x1128>
   14e78:	ldr	r0, [fp, #-12]
   14e7c:	add	r1, sp, #88	; 0x58
   14e80:	add	r2, sp, #80	; 0x50
   14e84:	bl	12898 <coda_cursor_read_complex_double_split@plt>
   14e88:	cmp	r0, #0
   14e8c:	beq	14e9c <print_debug_data@@Base+0x110c>
   14e90:	ldr	r0, [pc, #76]	; 14ee4 <print_debug_data@@Base+0x1154>
   14e94:	ldr	r0, [pc, r0]
   14e98:	blx	r0
   14e9c:	ldr	r0, [pc, #68]	; 14ee8 <print_debug_data@@Base+0x1158>
   14ea0:	add	r0, pc, r0
   14ea4:	vldr	d16, [sp, #88]	; 0x58
   14ea8:	vldr	d17, [sp, #80]	; 0x50
   14eac:	vmov	r2, r3, d16
   14eb0:	vstr	d17, [sp]
   14eb4:	bl	150c0 <print_debug_data@@Base+0x1330>
   14eb8:	b	14ebc <print_debug_data@@Base+0x112c>
   14ebc:	sub	sp, fp, #8
   14ec0:	pop	{r4, r5, fp, pc}
   14ec4:	andeq	sp, r1, r4, ror #3
   14ec8:			; <UNDEFINED> instruction: 0x0001d1bc
   14ecc:			; <UNDEFINED> instruction: 0x0001d1bc
   14ed0:	andeq	sp, r1, r8, ror #3
   14ed4:	andeq	sl, r0, r2, lsl ip
   14ed8:	andeq	sp, r1, r4, asr #2
   14edc:	strdeq	ip, [r1], -r8
   14ee0:	andeq	ip, r1, r8, lsr #9
   14ee4:	andeq	ip, r1, r4, asr #6
   14ee8:	muleq	r0, lr, lr
   14eec:	andeq	ip, r1, r4, ror #7
   14ef0:	ldrdeq	r9, [r0], -sl
   14ef4:			; <UNDEFINED> instruction: 0x0000a5b4
   14ef8:	andeq	r9, r0, pc, asr #29
   14efc:	strdeq	r9, [r0], -fp
   14f00:	andeq	ip, r1, ip, lsl r4
   14f04:	andeq	r9, r0, r4, asr pc
   14f08:	ldrdeq	fp, [r0], -r3
   14f0c:			; <UNDEFINED> instruction: 0x0001c9b0
   14f10:	andeq	ip, r1, r4, lsl #19
   14f14:	andeq	ip, r1, r0, lsr r9
   14f18:	muleq	r0, r0, r2
   14f1c:	andeq	sl, r0, sp, asr #7
   14f20:	andeq	ip, r1, r8, lsl #18
   14f24:			; <UNDEFINED> instruction: 0x0000a3b7
   14f28:	muleq	r0, r0, r9
   14f2c:	andeq	ip, r1, r4, lsr #17
   14f30:	andeq	sl, r0, ip, lsr r0
   14f34:	andeq	r9, r0, r9, lsr #31
   14f38:	andeq	sl, r0, lr, lsr r0
   14f3c:	andeq	ip, r1, ip, lsl #11
   14f40:	andeq	sl, r0, r0, lsr #1
   14f44:	andeq	sl, r0, r6, ror r0
   14f48:	ldrdeq	ip, [r1], -r8
   14f4c:	strdeq	sl, [r0], -r9
   14f50:	andeq	ip, r1, r4, lsr #12
   14f54:	andeq	sl, r0, r5, asr #16
   14f58:	andeq	ip, r1, r8, asr r6
   14f5c:	andeq	sl, r0, r9, asr #2
   14f60:	andeq	ip, r1, ip, lsl #13
   14f64:	andeq	sl, r0, r8, ror r1
   14f68:	andeq	ip, r1, r8, lsr #16
   14f6c:	andeq	ip, r1, r4, lsr #15
   14f70:	andeq	sl, r0, r0, lsl #2
   14f74:	andeq	sl, r0, sp, lsr r2
   14f78:	andeq	ip, r1, r4, ror #14
   14f7c:	andeq	sl, r0, r8, asr #2
   14f80:	strdeq	sl, [r0], -fp
   14f84:	andeq	ip, r1, r4, ror #25
   14f88:	andeq	ip, r1, r4, asr ip
   14f8c:	andeq	sl, r0, r6, ror r8
   14f90:	andeq	ip, r1, r4, ror #23
   14f94:	strdeq	sl, [r0], -r3
   14f98:	andeq	ip, r1, r8, lsl #23
   14f9c:	andeq	sl, r0, r0, lsr #11
   14fa0:	andeq	ip, r1, r8, lsl fp
   14fa4:	andeq	ip, r1, r0, asr #22
   14fa8:	andeq	fp, r0, r3, lsr #29
   14fac:	strdeq	ip, [r1], -r0
   14fb0:	andeq	sl, r0, r8, lsr #10
   14fb4:	andeq	ip, r1, r8, ror #21
   14fb8:	strdeq	ip, [r1], -r8
   14fbc:	andeq	sl, r0, r1, lsl #13
   14fc0:	andeq	sl, r0, r6, lsl r8
   14fc4:	andeq	sp, r1, r8, ror #1
   14fc8:	strheq	sp, [r1], -ip
   14fcc:	muleq	r1, ip, r0
   14fd0:	ldrdeq	ip, [r1], -r0
   14fd4:	muleq	r1, r4, lr
   14fd8:	andeq	ip, r1, ip, lsr #29
   14fdc:	andeq	fp, r0, r2, lsr r0
   14fe0:	andeq	ip, r1, r0, asr lr
   14fe4:	andeq	sl, r0, r8, ror #16
   14fe8:	andeq	ip, r1, r0, ror #27
   14fec:	andeq	ip, r1, r8, lsl #28
   14ff0:	andeq	ip, r0, fp, ror #2
   14ff4:			; <UNDEFINED> instruction: 0x0001cdb8
   14ff8:	strdeq	sl, [r0], -r0
   14ffc:			; <UNDEFINED> instruction: 0x0001cdb0
   15000:	andeq	ip, r1, r0, lsr sp
   15004:	andeq	sp, r1, r0, ror r0
   15008:	andeq	sp, r1, ip, asr #32
   1500c:	andeq	sp, r1, ip, lsr #32
   15010:	andeq	sp, r1, r4, asr #32
   15014:	andeq	fp, r0, sl, asr #3
   15018:	andeq	ip, r1, r8, ror #31
   1501c:	andeq	sl, r0, r0, lsl #20
   15020:	andeq	ip, r1, r8, ror pc
   15024:	andeq	ip, r1, r0, lsr #31
   15028:	andeq	ip, r0, r3, lsl #6
   1502c:	andeq	ip, r1, r0, asr pc
   15030:	andeq	sl, r0, r8, lsl #19
   15034:	andeq	ip, r1, r8, asr #30
   15038:	andeq	sl, r0, ip, lsl sl
   1503c:	andeq	sl, r0, r4, lsl #17
   15040:			; <UNDEFINED> instruction: 0x0000a5bc
   15044:	andeq	sl, r0, ip, ror #15
   15048:	andeq	sl, r0, r3, lsr #4
   1504c:	andeq	sl, r0, r2, ror #16
   15050:	andeq	r9, r0, r6, asr #31
   15054:	sub	sp, sp, #12
   15058:	push	{fp, lr}
   1505c:	mov	fp, sp
   15060:	sub	sp, sp, #20
   15064:	str	r3, [fp, #16]
   15068:	str	r2, [fp, #12]
   1506c:	str	r1, [fp, #8]
   15070:	str	r0, [fp, #-4]
   15074:	bl	152f0 <print_debug_data@@Base+0x1560>
   15078:	add	r0, fp, #8
   1507c:	str	r0, [sp, #8]
   15080:	ldr	r0, [pc, #52]	; 150bc <print_debug_data@@Base+0x132c>
   15084:	ldr	r0, [pc, r0]
   15088:	ldr	r0, [r0]
   1508c:	ldr	r1, [fp, #-4]
   15090:	ldr	r2, [sp, #8]
   15094:	bl	12904 <vfprintf@plt>
   15098:	str	r0, [fp, #-8]
   1509c:	add	r0, sp, #8
   150a0:	ldr	r1, [fp, #-8]
   150a4:	str	r0, [sp, #4]
   150a8:	mov	r0, r1
   150ac:	mov	sp, fp
   150b0:	pop	{fp, lr}
   150b4:	add	sp, sp, #12
   150b8:	bx	lr
   150bc:	andeq	ip, r1, r4, lsr r1
   150c0:	sub	sp, sp, #12
   150c4:	push	{fp, lr}
   150c8:	mov	fp, sp
   150cc:	sub	sp, sp, #20
   150d0:	str	r3, [fp, #16]
   150d4:	str	r2, [fp, #12]
   150d8:	str	r1, [fp, #8]
   150dc:	str	r0, [fp, #-4]
   150e0:	add	r0, fp, #8
   150e4:	str	r0, [sp, #8]
   150e8:	ldr	r0, [pc, #52]	; 15124 <print_debug_data@@Base+0x1394>
   150ec:	ldr	r0, [pc, r0]
   150f0:	ldr	r0, [r0]
   150f4:	ldr	r1, [fp, #-4]
   150f8:	ldr	r2, [sp, #8]
   150fc:	bl	12904 <vfprintf@plt>
   15100:	str	r0, [fp, #-8]
   15104:	add	r0, sp, #8
   15108:	ldr	r1, [fp, #-8]
   1510c:	str	r0, [sp, #4]
   15110:	mov	r0, r1
   15114:	mov	sp, fp
   15118:	pop	{fp, lr}
   1511c:	add	sp, sp, #12
   15120:	bx	lr
   15124:	andeq	ip, r1, ip, asr #1
   15128:	push	{fp, lr}
   1512c:	mov	fp, sp
   15130:	sub	sp, sp, #24
   15134:	str	r0, [fp, #-4]
   15138:	str	r1, [fp, #-8]
   1513c:	movw	r0, #0
   15140:	str	r0, [sp, #12]
   15144:	ldr	r0, [sp, #12]
   15148:	ldr	r1, [fp, #-8]
   1514c:	cmp	r0, r1
   15150:	bge	152c0 <print_debug_data@@Base+0x1530>
   15154:	ldr	r0, [fp, #-4]
   15158:	ldr	r1, [sp, #12]
   1515c:	ldrb	r0, [r0, r1]
   15160:	strb	r0, [sp, #11]
   15164:	ldrb	r0, [sp, #11]
   15168:	mov	r1, r0
   1516c:	cmp	r0, #7
   15170:	str	r1, [sp, #4]
   15174:	beq	151ec <print_debug_data@@Base+0x145c>
   15178:	b	1517c <print_debug_data@@Base+0x13ec>
   1517c:	ldr	r0, [sp, #4]
   15180:	cmp	r0, #8
   15184:	beq	151fc <print_debug_data@@Base+0x146c>
   15188:	b	1518c <print_debug_data@@Base+0x13fc>
   1518c:	ldr	r0, [sp, #4]
   15190:	cmp	r0, #9
   15194:	beq	1520c <print_debug_data@@Base+0x147c>
   15198:	b	1519c <print_debug_data@@Base+0x140c>
   1519c:	ldr	r0, [sp, #4]
   151a0:	cmp	r0, #10
   151a4:	beq	1521c <print_debug_data@@Base+0x148c>
   151a8:	b	151ac <print_debug_data@@Base+0x141c>
   151ac:	ldr	r0, [sp, #4]
   151b0:	cmp	r0, #11
   151b4:	beq	1522c <print_debug_data@@Base+0x149c>
   151b8:	b	151bc <print_debug_data@@Base+0x142c>
   151bc:	ldr	r0, [sp, #4]
   151c0:	cmp	r0, #12
   151c4:	beq	1523c <print_debug_data@@Base+0x14ac>
   151c8:	b	151cc <print_debug_data@@Base+0x143c>
   151cc:	ldr	r0, [sp, #4]
   151d0:	cmp	r0, #13
   151d4:	beq	1524c <print_debug_data@@Base+0x14bc>
   151d8:	b	151dc <print_debug_data@@Base+0x144c>
   151dc:	ldr	r0, [sp, #4]
   151e0:	cmp	r0, #92	; 0x5c
   151e4:	beq	1525c <print_debug_data@@Base+0x14cc>
   151e8:	b	1526c <print_debug_data@@Base+0x14dc>
   151ec:	ldr	r0, [pc, #240]	; 152e4 <print_debug_data@@Base+0x1554>
   151f0:	add	r0, pc, r0
   151f4:	bl	150c0 <print_debug_data@@Base+0x1330>
   151f8:	b	152ac <print_debug_data@@Base+0x151c>
   151fc:	ldr	r0, [pc, #220]	; 152e0 <print_debug_data@@Base+0x1550>
   15200:	add	r0, pc, r0
   15204:	bl	150c0 <print_debug_data@@Base+0x1330>
   15208:	b	152ac <print_debug_data@@Base+0x151c>
   1520c:	ldr	r0, [pc, #200]	; 152dc <print_debug_data@@Base+0x154c>
   15210:	add	r0, pc, r0
   15214:	bl	150c0 <print_debug_data@@Base+0x1330>
   15218:	b	152ac <print_debug_data@@Base+0x151c>
   1521c:	ldr	r0, [pc, #180]	; 152d8 <print_debug_data@@Base+0x1548>
   15220:	add	r0, pc, r0
   15224:	bl	150c0 <print_debug_data@@Base+0x1330>
   15228:	b	152ac <print_debug_data@@Base+0x151c>
   1522c:	ldr	r0, [pc, #160]	; 152d4 <print_debug_data@@Base+0x1544>
   15230:	add	r0, pc, r0
   15234:	bl	150c0 <print_debug_data@@Base+0x1330>
   15238:	b	152ac <print_debug_data@@Base+0x151c>
   1523c:	ldr	r0, [pc, #140]	; 152d0 <print_debug_data@@Base+0x1540>
   15240:	add	r0, pc, r0
   15244:	bl	150c0 <print_debug_data@@Base+0x1330>
   15248:	b	152ac <print_debug_data@@Base+0x151c>
   1524c:	ldr	r0, [pc, #120]	; 152cc <print_debug_data@@Base+0x153c>
   15250:	add	r0, pc, r0
   15254:	bl	150c0 <print_debug_data@@Base+0x1330>
   15258:	b	152ac <print_debug_data@@Base+0x151c>
   1525c:	ldr	r0, [pc, #100]	; 152c8 <print_debug_data@@Base+0x1538>
   15260:	add	r0, pc, r0
   15264:	bl	150c0 <print_debug_data@@Base+0x1330>
   15268:	b	152ac <print_debug_data@@Base+0x151c>
   1526c:	ldrb	r0, [sp, #11]
   15270:	cmp	r0, #32
   15274:	blt	15298 <print_debug_data@@Base+0x1508>
   15278:	ldrb	r0, [sp, #11]
   1527c:	cmp	r0, #126	; 0x7e
   15280:	bgt	15298 <print_debug_data@@Base+0x1508>
   15284:	ldr	r0, [pc, #96]	; 152ec <print_debug_data@@Base+0x155c>
   15288:	add	r0, pc, r0
   1528c:	ldrb	r1, [sp, #11]
   15290:	bl	150c0 <print_debug_data@@Base+0x1330>
   15294:	b	152a8 <print_debug_data@@Base+0x1518>
   15298:	ldr	r0, [pc, #72]	; 152e8 <print_debug_data@@Base+0x1558>
   1529c:	add	r0, pc, r0
   152a0:	ldrb	r1, [sp, #11]
   152a4:	bl	150c0 <print_debug_data@@Base+0x1330>
   152a8:	b	152ac <print_debug_data@@Base+0x151c>
   152ac:	b	152b0 <print_debug_data@@Base+0x1520>
   152b0:	ldr	r0, [sp, #12]
   152b4:	add	r0, r0, #1
   152b8:	str	r0, [sp, #12]
   152bc:	b	15144 <print_debug_data@@Base+0x13b4>
   152c0:	mov	sp, fp
   152c4:	pop	{fp, pc}
   152c8:	andeq	r9, r0, ip, asr r9
   152cc:	andeq	r9, r0, r9, ror #18
   152d0:	andeq	r9, r0, r6, ror r9
   152d4:	andeq	r9, r0, r3, lsl #19
   152d8:	muleq	r0, r0, r9
   152dc:	muleq	r0, sp, r9
   152e0:	andeq	r9, r0, sl, lsr #19
   152e4:			; <UNDEFINED> instruction: 0x000099b7
   152e8:	andeq	r9, r0, r3, lsr #18
   152ec:	andeq	r9, r0, r5, lsl #17
   152f0:	push	{fp, lr}
   152f4:	mov	fp, sp
   152f8:	sub	sp, sp, #8
   152fc:	ldr	r0, [pc, #128]	; 15384 <print_debug_data@@Base+0x15f4>
   15300:	add	r0, pc, r0
   15304:	ldr	r0, [r0]
   15308:	cmp	r0, #0
   1530c:	blt	15314 <print_debug_data@@Base+0x1584>
   15310:	b	15334 <print_debug_data@@Base+0x15a4>
   15314:	ldr	r0, [pc, #108]	; 15388 <print_debug_data@@Base+0x15f8>
   15318:	add	r0, pc, r0
   1531c:	ldr	r1, [pc, #104]	; 1538c <print_debug_data@@Base+0x15fc>
   15320:	add	r1, pc, r1
   15324:	ldr	r2, [pc, #100]	; 15390 <print_debug_data@@Base+0x1600>
   15328:	add	r3, pc, r2
   1532c:	movw	r2, #44	; 0x2c
   15330:	bl	129f4 <__assert_fail@plt>
   15334:	ldr	r0, [pc, #88]	; 15394 <print_debug_data@@Base+0x1604>
   15338:	add	r0, pc, r0
   1533c:	ldr	r0, [r0]
   15340:	str	r0, [sp, #4]
   15344:	ldr	r0, [sp, #4]
   15348:	cmp	r0, #0
   1534c:	ble	1537c <print_debug_data@@Base+0x15ec>
   15350:	ldr	r0, [pc, #64]	; 15398 <print_debug_data@@Base+0x1608>
   15354:	add	r1, pc, r0
   15358:	ldr	r0, [pc, #60]	; 1539c <print_debug_data@@Base+0x160c>
   1535c:	ldr	r0, [pc, r0]
   15360:	ldr	r0, [r0]
   15364:	bl	12814 <fprintf@plt>
   15368:	ldr	r0, [sp, #4]
   1536c:	mvn	r1, #0
   15370:	add	r0, r0, r1
   15374:	str	r0, [sp, #4]
   15378:	b	15344 <print_debug_data@@Base+0x15b4>
   1537c:	mov	sp, fp
   15380:	pop	{fp, pc}
   15384:	andeq	fp, r1, ip, lsl pc
   15388:	andeq	r9, r0, r1, lsr sl
   1538c:	andeq	r9, r0, r5, lsr r9
   15390:	andeq	r9, r0, sp, lsr #20
   15394:	andeq	fp, r1, r4, ror #29
   15398:			; <UNDEFINED> instruction: 0x000098bb
   1539c:	andeq	fp, r1, ip, asr lr

000153a0 <dim_info_init@@Base>:
   153a0:	ldr	r0, [pc, #24]	; 153c0 <dim_info_init@@Base+0x20>
   153a4:	ldr	r0, [pc, r0]
   153a8:	movw	r1, #0
   153ac:	str	r1, [r0]
   153b0:	str	r1, [r0, #68]	; 0x44
   153b4:	mvn	r1, #0
   153b8:	str	r1, [r0, #104]	; 0x68
   153bc:	bx	lr
   153c0:	andeq	fp, r1, ip, asr #28

000153c4 <dim_info_done@@Base>:
   153c4:	bx	lr

000153c8 <print_all_distinct_dims@@Base>:
   153c8:	push	{fp, lr}
   153cc:	mov	fp, sp
   153d0:	sub	sp, sp, #40	; 0x28
   153d4:	ldr	r1, [pc, #924]	; 15778 <print_all_distinct_dims@@Base+0x3b0>
   153d8:	ldr	r1, [pc, r1]
   153dc:	str	r0, [fp, #-4]
   153e0:	ldr	r0, [fp, #-4]
   153e4:	ldr	r1, [r1]
   153e8:	cmp	r0, r1
   153ec:	bge	153f4 <print_all_distinct_dims@@Base+0x2c>
   153f0:	b	15414 <print_all_distinct_dims@@Base+0x4c>
   153f4:	ldr	r0, [pc, #896]	; 1577c <print_all_distinct_dims@@Base+0x3b4>
   153f8:	add	r0, pc, r0
   153fc:	ldr	r1, [pc, #892]	; 15780 <print_all_distinct_dims@@Base+0x3b8>
   15400:	add	r1, pc, r1
   15404:	ldr	r2, [pc, #888]	; 15784 <print_all_distinct_dims@@Base+0x3bc>
   15408:	add	r3, pc, r2
   1540c:	movw	r2, #50	; 0x32
   15410:	bl	129f4 <__assert_fail@plt>
   15414:	ldr	r0, [pc, #876]	; 15788 <print_all_distinct_dims@@Base+0x3c0>
   15418:	ldr	r0, [pc, r0]
   1541c:	add	r0, r0, #72	; 0x48
   15420:	ldr	r1, [fp, #-4]
   15424:	ldr	r2, [pc, #908]	; 157b8 <print_all_distinct_dims@@Base+0x3f0>
   15428:	ldr	r2, [pc, r2]
   1542c:	add	r1, r2, r1, lsl #2
   15430:	add	r1, r1, #72	; 0x48
   15434:	ldr	r1, [r1]
   15438:	cmp	r1, #0
   1543c:	bne	15444 <print_all_distinct_dims@@Base+0x7c>
   15440:	b	15770 <print_all_distinct_dims@@Base+0x3a8>
   15444:	ldr	r0, [fp, #-4]
   15448:	ldr	r1, [pc, #876]	; 157bc <print_all_distinct_dims@@Base+0x3f4>
   1544c:	ldr	r1, [pc, r1]
   15450:	add	r0, r1, r0, lsl #2
   15454:	ldr	r0, [r0, #4]
   15458:	add	r0, r0, #1
   1545c:	lsl	r0, r0, #2
   15460:	bl	12784 <malloc@plt>
   15464:	str	r0, [fp, #-8]
   15468:	ldr	r0, [fp, #-8]
   1546c:	movw	r1, #0
   15470:	cmp	r0, r1
   15474:	bne	154c0 <print_all_distinct_dims@@Base+0xf8>
   15478:	ldr	r0, [pc, #784]	; 15790 <print_all_distinct_dims@@Base+0x3c8>
   1547c:	add	r1, pc, r0
   15480:	ldr	r0, [pc, #780]	; 15794 <print_all_distinct_dims@@Base+0x3cc>
   15484:	add	r3, pc, r0
   15488:	ldr	r0, [fp, #-4]
   1548c:	ldr	r2, [pc, #812]	; 157c0 <print_all_distinct_dims@@Base+0x3f8>
   15490:	ldr	r2, [pc, r2]
   15494:	add	r0, r2, r0, lsl #2
   15498:	ldr	r0, [r0, #4]
   1549c:	add	r0, r0, #1
   154a0:	lsl	r2, r0, #2
   154a4:	mvn	r0, #0
   154a8:	movw	ip, #61	; 0x3d
   154ac:	str	ip, [sp]
   154b0:	bl	12610 <coda_set_error@plt>
   154b4:	ldr	r0, [pc, #720]	; 1578c <print_all_distinct_dims@@Base+0x3c4>
   154b8:	ldr	r0, [pc, r0]
   154bc:	blx	r0
   154c0:	ldr	r0, [fp, #-8]
   154c4:	ldr	r1, [fp, #-4]
   154c8:	ldr	r2, [pc, #756]	; 157c4 <print_all_distinct_dims@@Base+0x3fc>
   154cc:	ldr	r2, [pc, r2]
   154d0:	add	r1, r2, r1, lsl #2
   154d4:	ldr	r1, [r1, #4]
   154d8:	add	r1, r1, #1
   154dc:	lsl	r2, r1, #2
   154e0:	movw	r1, #0
   154e4:	and	r1, r1, #255	; 0xff
   154e8:	bl	12868 <memset@plt>
   154ec:	movw	r0, #0
   154f0:	str	r0, [fp, #-12]
   154f4:	ldr	r0, [fp, #-12]
   154f8:	ldr	r1, [fp, #-4]
   154fc:	ldr	r2, [pc, #708]	; 157c8 <print_all_distinct_dims@@Base+0x400>
   15500:	ldr	r2, [pc, r2]
   15504:	add	r1, r2, r1, lsl #2
   15508:	ldr	r1, [r1, #140]	; 0x8c
   1550c:	add	r1, r2, r1, lsl #3
   15510:	ldr	r2, [r1, #232]	; 0xe8
   15514:	ldr	r1, [r1, #236]	; 0xec
   15518:	subs	r2, r0, r2
   1551c:	rscs	r0, r1, r0, asr #31
   15520:	bge	15594 <print_all_distinct_dims@@Base+0x1cc>
   15524:	b	15528 <print_all_distinct_dims@@Base+0x160>
   15528:	ldr	r0, [fp, #-4]
   1552c:	ldr	r1, [pc, #664]	; 157cc <print_all_distinct_dims@@Base+0x404>
   15530:	ldr	r1, [pc, r1]
   15534:	add	r0, r1, r0, lsl #2
   15538:	ldr	r0, [r0, #108]	; 0x6c
   1553c:	ldr	r1, [fp, #-12]
   15540:	add	r0, r0, r1, lsl #2
   15544:	ldr	r0, [r0]
   15548:	cmp	r0, #0
   1554c:	blt	15580 <print_all_distinct_dims@@Base+0x1b8>
   15550:	ldr	r0, [fp, #-8]
   15554:	ldr	r1, [fp, #-4]
   15558:	ldr	r2, [pc, #624]	; 157d0 <print_all_distinct_dims@@Base+0x408>
   1555c:	ldr	r2, [pc, r2]
   15560:	add	r1, r2, r1, lsl #2
   15564:	ldr	r1, [r1, #108]	; 0x6c
   15568:	ldr	r2, [fp, #-12]
   1556c:	ldr	r1, [r1, r2, lsl #2]
   15570:	add	r0, r0, r1, lsl #2
   15574:	ldr	r1, [r0]
   15578:	add	r1, r1, #1
   1557c:	str	r1, [r0]
   15580:	b	15584 <print_all_distinct_dims@@Base+0x1bc>
   15584:	ldr	r0, [fp, #-12]
   15588:	add	r0, r0, #1
   1558c:	str	r0, [fp, #-12]
   15590:	b	154f4 <print_all_distinct_dims@@Base+0x12c>
   15594:	ldr	r0, [pc, #508]	; 15798 <print_all_distinct_dims@@Base+0x3d0>
   15598:	ldr	r0, [pc, r0]
   1559c:	add	r0, r0, #36	; 0x24
   155a0:	ldr	r1, [fp, #-4]
   155a4:	add	r1, r1, #1
   155a8:	ldr	r2, [pc, #548]	; 157d4 <print_all_distinct_dims@@Base+0x40c>
   155ac:	add	r2, pc, r2
   155b0:	str	r0, [fp, #-16]
   155b4:	mov	r0, r2
   155b8:	bl	125ec <printf@plt>
   155bc:	ldr	r1, [fp, #-4]
   155c0:	ldr	r2, [pc, #528]	; 157d8 <print_all_distinct_dims@@Base+0x410>
   155c4:	ldr	r2, [pc, r2]
   155c8:	add	r1, r2, r1, lsl #2
   155cc:	add	r1, r1, #36	; 0x24
   155d0:	ldr	r1, [r1]
   155d4:	str	r1, [fp, #-12]
   155d8:	ldr	r0, [pc, #444]	; 1579c <print_all_distinct_dims@@Base+0x3d4>
   155dc:	ldr	r0, [pc, r0]
   155e0:	add	r0, r0, #4
   155e4:	ldr	r1, [fp, #-12]
   155e8:	ldr	r2, [fp, #-4]
   155ec:	ldr	r3, [pc, #488]	; 157dc <print_all_distinct_dims@@Base+0x414>
   155f0:	ldr	r3, [pc, r3]
   155f4:	add	r2, r3, r2, lsl #2
   155f8:	add	r2, r2, #4
   155fc:	ldr	r2, [r2]
   15600:	cmp	r1, r2
   15604:	bge	15644 <print_all_distinct_dims@@Base+0x27c>
   15608:	ldr	r0, [fp, #-8]
   1560c:	ldr	r1, [fp, #-12]
   15610:	add	r0, r0, r1, lsl #2
   15614:	ldr	r0, [r0]
   15618:	cmp	r0, #0
   1561c:	ble	15630 <print_all_distinct_dims@@Base+0x268>
   15620:	ldr	r0, [pc, #396]	; 157b4 <print_all_distinct_dims@@Base+0x3ec>
   15624:	add	r0, pc, r0
   15628:	ldr	r1, [fp, #-12]
   1562c:	bl	125ec <printf@plt>
   15630:	b	15634 <print_all_distinct_dims@@Base+0x26c>
   15634:	ldr	r0, [fp, #-12]
   15638:	add	r0, r0, #1
   1563c:	str	r0, [fp, #-12]
   15640:	b	155d8 <print_all_distinct_dims@@Base+0x210>
   15644:	ldr	r0, [pc, #340]	; 157a0 <print_all_distinct_dims@@Base+0x3d8>
   15648:	ldr	r0, [pc, r0]
   1564c:	add	r0, r0, #36	; 0x24
   15650:	ldr	r1, [fp, #-4]
   15654:	ldr	r2, [pc, #388]	; 157e0 <print_all_distinct_dims@@Base+0x418>
   15658:	ldr	r2, [pc, r2]
   1565c:	add	r1, r2, r1, lsl #2
   15660:	ldr	r1, [r1, #4]
   15664:	ldr	r3, [pc, #376]	; 157e4 <print_all_distinct_dims@@Base+0x41c>
   15668:	add	r3, pc, r3
   1566c:	str	r0, [sp, #20]
   15670:	mov	r0, r3
   15674:	str	r2, [sp, #16]
   15678:	bl	125ec <printf@plt>
   1567c:	ldr	r1, [pc, #356]	; 157e8 <print_all_distinct_dims@@Base+0x420>
   15680:	add	r1, pc, r1
   15684:	str	r0, [sp, #12]
   15688:	mov	r0, r1
   1568c:	bl	125ec <printf@plt>
   15690:	ldr	r1, [fp, #-4]
   15694:	ldr	r2, [sp, #16]
   15698:	add	r1, r2, r1, lsl #2
   1569c:	add	r1, r1, #36	; 0x24
   156a0:	ldr	r1, [r1]
   156a4:	str	r1, [fp, #-12]
   156a8:	ldr	r0, [pc, #244]	; 157a4 <print_all_distinct_dims@@Base+0x3dc>
   156ac:	ldr	r0, [pc, r0]
   156b0:	add	r0, r0, #4
   156b4:	ldr	r1, [fp, #-12]
   156b8:	ldr	r2, [fp, #-4]
   156bc:	ldr	r3, [pc, #296]	; 157ec <print_all_distinct_dims@@Base+0x424>
   156c0:	ldr	r3, [pc, r3]
   156c4:	add	r2, r3, r2, lsl #2
   156c8:	add	r2, r2, #4
   156cc:	ldr	r2, [r2]
   156d0:	cmp	r1, r2
   156d4:	bge	15720 <print_all_distinct_dims@@Base+0x358>
   156d8:	ldr	r0, [fp, #-8]
   156dc:	ldr	r1, [fp, #-12]
   156e0:	add	r0, r0, r1, lsl #2
   156e4:	ldr	r0, [r0]
   156e8:	cmp	r0, #0
   156ec:	ble	1570c <print_all_distinct_dims@@Base+0x344>
   156f0:	ldr	r0, [pc, #184]	; 157b0 <print_all_distinct_dims@@Base+0x3e8>
   156f4:	add	r0, pc, r0
   156f8:	ldr	r1, [fp, #-8]
   156fc:	ldr	r2, [fp, #-12]
   15700:	add	r1, r1, r2, lsl #2
   15704:	ldr	r1, [r1]
   15708:	bl	125ec <printf@plt>
   1570c:	b	15710 <print_all_distinct_dims@@Base+0x348>
   15710:	ldr	r0, [fp, #-12]
   15714:	add	r0, r0, #1
   15718:	str	r0, [fp, #-12]
   1571c:	b	156a8 <print_all_distinct_dims@@Base+0x2e0>
   15720:	ldr	r0, [pc, #132]	; 157ac <print_all_distinct_dims@@Base+0x3e4>
   15724:	add	r0, pc, r0
   15728:	ldr	r1, [fp, #-8]
   1572c:	ldr	r2, [fp, #-4]
   15730:	ldr	r3, [pc, #184]	; 157f0 <print_all_distinct_dims@@Base+0x428>
   15734:	ldr	r3, [pc, r3]
   15738:	add	r2, r3, r2, lsl #2
   1573c:	ldr	r2, [r2, #4]
   15740:	add	r1, r1, r2, lsl #2
   15744:	ldr	r1, [r1]
   15748:	bl	125ec <printf@plt>
   1574c:	ldr	r1, [pc, #84]	; 157a8 <print_all_distinct_dims@@Base+0x3e0>
   15750:	add	r1, pc, r1
   15754:	str	r0, [sp, #8]
   15758:	mov	r0, r1
   1575c:	bl	125ec <printf@plt>
   15760:	ldr	r1, [fp, #-8]
   15764:	str	r0, [sp, #4]
   15768:	mov	r0, r1
   1576c:	bl	12658 <free@plt>
   15770:	mov	sp, fp
   15774:	pop	{fp, pc}
   15778:	andeq	fp, r1, r8, lsl lr
   1577c:	andeq	r9, r0, pc, ror #18
   15780:	andeq	r9, r0, r2, lsl #19
   15784:	ldrdeq	r9, [r0], -sl
   15788:	ldrdeq	fp, [r1], -r8
   1578c:	andeq	fp, r1, r0, lsr #26
   15790:	muleq	r0, r4, r6
   15794:	strdeq	r9, [r0], -lr
   15798:	andeq	fp, r1, r8, asr ip
   1579c:	andeq	fp, r1, r4, lsl ip
   157a0:	andeq	fp, r1, r8, lsr #23
   157a4:	andeq	fp, r1, r4, asr #22
   157a8:	andeq	sl, r0, fp, lsl lr
   157ac:	strdeq	r9, [r0], -r0
   157b0:	andeq	r9, r0, ip, lsl r7
   157b4:	andeq	r9, r0, ip, ror #15
   157b8:	andeq	fp, r1, r8, asr #27
   157bc:	andeq	fp, r1, r4, lsr #27
   157c0:	andeq	fp, r1, r0, ror #26
   157c4:	andeq	fp, r1, r4, lsr #26
   157c8:	strdeq	fp, [r1], -r0
   157cc:	andeq	fp, r1, r0, asr #25
   157d0:	muleq	r1, r4, ip
   157d4:	andeq	r9, r0, r8, asr r8
   157d8:	andeq	fp, r1, ip, lsr #24
   157dc:	andeq	fp, r1, r0, lsl #24
   157e0:	muleq	r1, r8, fp
   157e4:	andeq	r9, r0, ip, lsr #15
   157e8:	muleq	r0, r8, r7
   157ec:	andeq	fp, r1, r0, lsr fp
   157f0:			; <UNDEFINED> instruction: 0x0001babc

000157f4 <dim_enter_array@@Base>:
   157f4:	push	{r4, r5, fp, lr}
   157f8:	add	fp, sp, #8
   157fc:	sub	sp, sp, #168	; 0xa8
   15800:	ldr	r0, [pc, #3424]	; 16568 <dim_enter_array@@Base+0xd74>
   15804:	ldr	r0, [pc, r0]
   15808:	add	r0, r0, #8
   1580c:	ldr	r1, [pc, #3564]	; 16600 <dim_enter_array@@Base+0xe0c>
   15810:	ldr	r1, [pc, r1]
   15814:	ldr	r2, [r1, #3360]	; 0xd20
   15818:	add	r2, r2, r2, lsl #2
   1581c:	add	r2, r1, r2, lsl #4
   15820:	add	r2, r2, #800	; 0x320
   15824:	str	r2, [fp, #-16]
   15828:	ldr	r2, [r1, #136]	; 0x88
   1582c:	add	r1, r1, r2, lsl #2
   15830:	add	r1, r1, #8
   15834:	ldr	r1, [r1]
   15838:	str	r0, [sp, #56]	; 0x38
   1583c:	mov	r0, r1
   15840:	sub	r1, fp, #12
   15844:	bl	12a00 <coda_type_get_class@plt>
   15848:	cmp	r0, #0
   1584c:	beq	1585c <dim_enter_array@@Base+0x68>
   15850:	ldr	r0, [pc, #3348]	; 1656c <dim_enter_array@@Base+0xd78>
   15854:	ldr	r0, [pc, r0]
   15858:	blx	r0
   1585c:	ldr	r0, [fp, #-12]
   15860:	sub	r0, r0, #1
   15864:	cmp	r0, #5
   15868:	str	r0, [sp, #52]	; 0x34
   1586c:	bhi	15ad0 <dim_enter_array@@Base+0x2dc>
   15870:	add	r0, pc, #8
   15874:	ldr	r1, [sp, #52]	; 0x34
   15878:	ldr	r2, [r0, r1, lsl #2]
   1587c:	add	pc, r0, r2
   15880:	andeq	r0, r0, r8, lsl r0
   15884:	andeq	r0, r0, r0, asr r2
   15888:	andeq	r0, r0, r0, asr r2
   1588c:	andeq	r0, r0, r0, asr r1
   15890:			; <UNDEFINED> instruction: 0x000001b4
   15894:	strheq	r0, [r0], -r8
   15898:	sub	r2, fp, #80	; 0x50
   1589c:	ldr	r0, [pc, #3312]	; 16594 <dim_enter_array@@Base+0xda0>
   158a0:	ldr	r0, [pc, r0]
   158a4:	add	r0, r0, #8
   158a8:	ldr	r1, [pc, #3412]	; 16604 <dim_enter_array@@Base+0xe10>
   158ac:	ldr	r1, [pc, r1]
   158b0:	ldr	r3, [r1, #136]	; 0x88
   158b4:	add	r1, r1, r3, lsl #2
   158b8:	add	r1, r1, #8
   158bc:	ldr	r1, [r1]
   158c0:	str	r0, [sp, #48]	; 0x30
   158c4:	mov	r0, r1
   158c8:	sub	r1, fp, #84	; 0x54
   158cc:	bl	12940 <coda_type_get_array_dim@plt>
   158d0:	cmp	r0, #0
   158d4:	beq	158e4 <dim_enter_array@@Base+0xf0>
   158d8:	ldr	r0, [pc, #3256]	; 16598 <dim_enter_array@@Base+0xda4>
   158dc:	ldr	r0, [pc, r0]
   158e0:	blx	r0
   158e4:	ldr	r0, [fp, #-84]	; 0xffffffac
   158e8:	ldr	r1, [fp, #-16]
   158ec:	str	r0, [r1, #4]
   158f0:	movw	r0, #0
   158f4:	str	r0, [fp, #-48]	; 0xffffffd0
   158f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   158fc:	ldr	r1, [fp, #-84]	; 0xffffffac
   15900:	cmp	r0, r1
   15904:	bge	15934 <dim_enter_array@@Base+0x140>
   15908:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1590c:	sub	r1, fp, #80	; 0x50
   15910:	ldr	r1, [r1, r0, lsl #2]
   15914:	ldr	r2, [fp, #-16]
   15918:	add	r2, r2, #8
   1591c:	add	r0, r2, r0, lsl #2
   15920:	str	r1, [r0]
   15924:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15928:	add	r0, r0, #1
   1592c:	str	r0, [fp, #-48]	; 0xffffffd0
   15930:	b	158f8 <dim_enter_array@@Base+0x104>
   15934:	b	15af0 <dim_enter_array@@Base+0x2fc>
   15938:	ldr	r0, [pc, #3136]	; 16580 <dim_enter_array@@Base+0xd8c>
   1593c:	ldr	r0, [pc, r0]
   15940:	add	r0, r0, #8
   15944:	ldr	r1, [pc, #3260]	; 16608 <dim_enter_array@@Base+0xe14>
   15948:	ldr	r1, [pc, r1]
   1594c:	ldr	r2, [r1, #136]	; 0x88
   15950:	add	r1, r1, r2, lsl #2
   15954:	add	r1, r1, #8
   15958:	ldr	r1, [r1]
   1595c:	str	r0, [sp, #44]	; 0x2c
   15960:	mov	r0, r1
   15964:	add	r1, sp, #88	; 0x58
   15968:	bl	12880 <coda_type_get_special_type@plt>
   1596c:	cmp	r0, #0
   15970:	beq	15980 <dim_enter_array@@Base+0x18c>
   15974:	ldr	r0, [pc, #3080]	; 16584 <dim_enter_array@@Base+0xd90>
   15978:	ldr	r0, [pc, r0]
   1597c:	blx	r0
   15980:	ldr	r0, [sp, #88]	; 0x58
   15984:	cmp	r0, #3
   15988:	bne	159ac <dim_enter_array@@Base+0x1b8>
   1598c:	b	15990 <dim_enter_array@@Base+0x19c>
   15990:	ldr	r0, [fp, #-16]
   15994:	movw	r1, #1
   15998:	str	r1, [r0, #4]
   1599c:	ldr	r0, [fp, #-16]
   159a0:	movw	r1, #2
   159a4:	str	r1, [r0, #8]
   159a8:	b	159cc <dim_enter_array@@Base+0x1d8>
   159ac:	ldr	r0, [pc, #3028]	; 16588 <dim_enter_array@@Base+0xd94>
   159b0:	add	r0, pc, r0
   159b4:	ldr	r1, [pc, #3024]	; 1658c <dim_enter_array@@Base+0xd98>
   159b8:	add	r1, pc, r1
   159bc:	ldr	r2, [pc, #3020]	; 16590 <dim_enter_array@@Base+0xd9c>
   159c0:	add	r3, pc, r2
   159c4:	movw	r2, #349	; 0x15d
   159c8:	bl	129f4 <__assert_fail@plt>
   159cc:	b	15af0 <dim_enter_array@@Base+0x2fc>
   159d0:	ldr	r0, [pc, #2976]	; 16578 <dim_enter_array@@Base+0xd84>
   159d4:	ldr	r0, [pc, r0]
   159d8:	add	r0, r0, #8
   159dc:	ldr	r1, [pc, #3112]	; 1660c <dim_enter_array@@Base+0xe18>
   159e0:	ldr	r1, [pc, r1]
   159e4:	ldr	r2, [r1, #136]	; 0x88
   159e8:	add	r1, r1, r2, lsl #2
   159ec:	add	r1, r1, #8
   159f0:	ldr	r1, [r1]
   159f4:	str	r0, [sp, #40]	; 0x28
   159f8:	mov	r0, r1
   159fc:	add	r1, sp, #84	; 0x54
   15a00:	bl	128bc <coda_type_get_string_length@plt>
   15a04:	cmp	r0, #0
   15a08:	beq	15a18 <dim_enter_array@@Base+0x224>
   15a0c:	ldr	r0, [pc, #2920]	; 1657c <dim_enter_array@@Base+0xd88>
   15a10:	ldr	r0, [pc, r0]
   15a14:	blx	r0
   15a18:	ldr	r0, [fp, #-16]
   15a1c:	movw	r1, #1
   15a20:	str	r1, [r0, #4]
   15a24:	ldr	r0, [sp, #84]	; 0x54
   15a28:	ldr	r1, [fp, #-16]
   15a2c:	str	r0, [r1, #8]
   15a30:	b	15af0 <dim_enter_array@@Base+0x2fc>
   15a34:	ldr	r0, [pc, #2868]	; 16570 <dim_enter_array@@Base+0xd7c>
   15a38:	ldr	r0, [pc, r0]
   15a3c:	add	r0, r0, #8
   15a40:	ldr	r1, [pc, #3016]	; 16610 <dim_enter_array@@Base+0xe1c>
   15a44:	ldr	r1, [pc, r1]
   15a48:	ldr	r2, [r1, #136]	; 0x88
   15a4c:	add	r1, r1, r2, lsl #2
   15a50:	add	r1, r1, #8
   15a54:	ldr	r1, [r1]
   15a58:	str	r0, [sp, #36]	; 0x24
   15a5c:	mov	r0, r1
   15a60:	add	r1, sp, #72	; 0x48
   15a64:	bl	126c4 <coda_type_get_bit_size@plt>
   15a68:	cmp	r0, #0
   15a6c:	beq	15a7c <dim_enter_array@@Base+0x288>
   15a70:	ldr	r0, [pc, #2812]	; 16574 <dim_enter_array@@Base+0xd80>
   15a74:	ldr	r0, [pc, r0]
   15a78:	blx	r0
   15a7c:	ldr	r0, [fp, #-16]
   15a80:	mov	r1, #1
   15a84:	str	r1, [r0, #4]
   15a88:	ldr	r0, [sp, #76]	; 0x4c
   15a8c:	cmp	r0, #0
   15a90:	bmi	15ac0 <dim_enter_array@@Base+0x2cc>
   15a94:	b	15a98 <dim_enter_array@@Base+0x2a4>
   15a98:	ldr	r0, [sp, #72]	; 0x48
   15a9c:	ldr	r1, [sp, #76]	; 0x4c
   15aa0:	lsr	r2, r0, #3
   15aa4:	orr	r1, r2, r1, lsl #29
   15aa8:	add	r2, r1, #1
   15aac:	tst	r0, #7
   15ab0:	movne	r1, r2
   15ab4:	ldr	r0, [fp, #-16]
   15ab8:	str	r1, [r0, #8]
   15abc:	b	15acc <dim_enter_array@@Base+0x2d8>
   15ac0:	ldr	r0, [fp, #-16]
   15ac4:	mvn	r1, #0
   15ac8:	str	r1, [r0, #8]
   15acc:	b	15af0 <dim_enter_array@@Base+0x2fc>
   15ad0:	ldr	r0, [pc, #2844]	; 165f4 <dim_enter_array@@Base+0xe00>
   15ad4:	add	r0, pc, r0
   15ad8:	ldr	r1, [pc, #2840]	; 165f8 <dim_enter_array@@Base+0xe04>
   15adc:	add	r1, pc, r1
   15ae0:	ldr	r2, [pc, #2836]	; 165fc <dim_enter_array@@Base+0xe08>
   15ae4:	add	r3, pc, r2
   15ae8:	movw	r2, #386	; 0x182
   15aec:	bl	129f4 <__assert_fail@plt>
   15af0:	ldr	r0, [pc, #2724]	; 1659c <dim_enter_array@@Base+0xda8>
   15af4:	ldr	r0, [pc, r0]
   15af8:	ldr	r0, [r0]
   15afc:	cmp	r0, #0
   15b00:	bne	15b28 <dim_enter_array@@Base+0x334>
   15b04:	ldr	r0, [fp, #-16]
   15b08:	mvn	r1, #0
   15b0c:	str	r1, [r0]
   15b10:	ldr	r0, [fp, #-16]
   15b14:	movw	r1, #0
   15b18:	str	r1, [r0, #40]	; 0x28
   15b1c:	ldr	r0, [fp, #-16]
   15b20:	str	r1, [r0, #44]	; 0x2c
   15b24:	b	16560 <dim_enter_array@@Base+0xd6c>
   15b28:	ldr	r0, [pc, #2672]	; 165a0 <dim_enter_array@@Base+0xdac>
   15b2c:	ldr	r0, [pc, r0]
   15b30:	ldr	r1, [r0]
   15b34:	str	r1, [fp, #-44]	; 0xffffffd4
   15b38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b3c:	ldr	r2, [fp, #-16]
   15b40:	str	r1, [r2]
   15b44:	ldr	r0, [r0]
   15b48:	ldr	r1, [fp, #-16]
   15b4c:	ldr	r1, [r1, #4]
   15b50:	add	r0, r0, r1
   15b54:	cmp	r0, #8
   15b58:	bgt	15b60 <dim_enter_array@@Base+0x36c>
   15b5c:	b	15b80 <dim_enter_array@@Base+0x38c>
   15b60:	ldr	r0, [pc, #2620]	; 165a4 <dim_enter_array@@Base+0xdb0>
   15b64:	add	r0, pc, r0
   15b68:	ldr	r1, [pc, #2616]	; 165a8 <dim_enter_array@@Base+0xdb4>
   15b6c:	add	r1, pc, r1
   15b70:	ldr	r2, [pc, #2612]	; 165ac <dim_enter_array@@Base+0xdb8>
   15b74:	add	r3, pc, r2
   15b78:	movw	r2, #402	; 0x192
   15b7c:	bl	129f4 <__assert_fail@plt>
   15b80:	ldr	r0, [pc, #2600]	; 165b0 <dim_enter_array@@Base+0xdbc>
   15b84:	ldr	r0, [pc, r0]
   15b88:	ldr	r1, [fp, #-16]
   15b8c:	ldr	r1, [r1, #4]
   15b90:	ldr	r2, [r0]
   15b94:	add	r1, r2, r1
   15b98:	str	r1, [r0]
   15b9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ba0:	cmp	r0, #0
   15ba4:	ble	15be4 <dim_enter_array@@Base+0x3f0>
   15ba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bac:	ldr	r1, [pc, #2656]	; 16614 <dim_enter_array@@Base+0xe20>
   15bb0:	ldr	r1, [pc, r1]
   15bb4:	add	r0, r1, r0, lsl #3
   15bb8:	ldr	r2, [r0, #232]	; 0xe8
   15bbc:	ldr	r0, [r0, #236]	; 0xec
   15bc0:	str	r0, [fp, #-20]	; 0xffffffec
   15bc4:	str	r2, [fp, #-24]	; 0xffffffe8
   15bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bcc:	add	r0, r1, r0, lsl #3
   15bd0:	ldr	r1, [r0, #296]	; 0x128
   15bd4:	ldr	r0, [r0, #300]	; 0x12c
   15bd8:	str	r0, [fp, #-28]	; 0xffffffe4
   15bdc:	str	r1, [fp, #-32]	; 0xffffffe0
   15be0:	b	15bfc <dim_enter_array@@Base+0x408>
   15be4:	mov	r0, #0
   15be8:	str	r0, [fp, #-20]	; 0xffffffec
   15bec:	mov	r1, #1
   15bf0:	str	r1, [fp, #-24]	; 0xffffffe8
   15bf4:	str	r0, [fp, #-28]	; 0xffffffe4
   15bf8:	str	r1, [fp, #-32]	; 0xffffffe0
   15bfc:	mov	r0, #0
   15c00:	str	r0, [fp, #-36]	; 0xffffffdc
   15c04:	str	r0, [fp, #-40]	; 0xffffffd8
   15c08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c10:	subs	r0, r0, #1
   15c14:	sbcs	r1, r1, #0
   15c18:	blt	15cb8 <dim_enter_array@@Base+0x4c4>
   15c1c:	b	15c20 <dim_enter_array@@Base+0x42c>
   15c20:	movw	r0, #0
   15c24:	str	r0, [fp, #-48]	; 0xffffffd0
   15c28:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c2c:	ldr	r1, [fp, #-16]
   15c30:	ldr	r1, [r1, #4]
   15c34:	cmp	r0, r1
   15c38:	bge	15cb4 <dim_enter_array@@Base+0x4c0>
   15c3c:	ldr	r0, [fp, #-16]
   15c40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c44:	add	r0, r0, r1, lsl #2
   15c48:	ldr	r0, [r0, #8]
   15c4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15c50:	add	r1, r2, r1
   15c54:	ldr	r2, [pc, #2492]	; 16618 <dim_enter_array@@Base+0xe24>
   15c58:	ldr	r2, [pc, r2]
   15c5c:	add	r1, r2, r1, lsl #2
   15c60:	str	r0, [r1, #4]
   15c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c68:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c6c:	add	r0, r0, r1
   15c70:	add	r0, r2, r0, lsl #2
   15c74:	mov	r1, #0
   15c78:	str	r1, [r0, #72]	; 0x48
   15c7c:	ldr	r0, [fp, #-16]
   15c80:	add	r0, r0, #8
   15c84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15c88:	add	r0, r0, r1, lsl #2
   15c8c:	ldr	r0, [r0]
   15c90:	cmn	r0, #1
   15c94:	bne	15ca0 <dim_enter_array@@Base+0x4ac>
   15c98:	movw	r0, #1
   15c9c:	str	r0, [fp, #-36]	; 0xffffffdc
   15ca0:	b	15ca4 <dim_enter_array@@Base+0x4b0>
   15ca4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ca8:	add	r0, r0, #1
   15cac:	str	r0, [fp, #-48]	; 0xffffffd0
   15cb0:	b	15c28 <dim_enter_array@@Base+0x434>
   15cb4:	b	15d30 <dim_enter_array@@Base+0x53c>
   15cb8:	movw	r0, #0
   15cbc:	str	r0, [fp, #-48]	; 0xffffffd0
   15cc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cc4:	ldr	r1, [fp, #-16]
   15cc8:	ldr	r1, [r1, #4]
   15ccc:	cmp	r0, r1
   15cd0:	bge	15d2c <dim_enter_array@@Base+0x538>
   15cd4:	ldr	r0, [pc, #2264]	; 165b4 <dim_enter_array@@Base+0xdc0>
   15cd8:	ldr	r0, [pc, r0]
   15cdc:	add	r0, r0, #72	; 0x48
   15ce0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ce4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15ce8:	add	r1, r1, r2
   15cec:	ldr	r2, [pc, #2344]	; 1661c <dim_enter_array@@Base+0xe28>
   15cf0:	ldr	r2, [pc, r2]
   15cf4:	add	r1, r2, r1, lsl #2
   15cf8:	mov	r3, #0
   15cfc:	str	r3, [r1, #4]
   15d00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15d08:	add	r1, r1, r3
   15d0c:	add	r1, r2, r1, lsl #2
   15d10:	add	r1, r1, #72	; 0x48
   15d14:	movw	r2, #0
   15d18:	str	r2, [r1]
   15d1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d20:	add	r0, r0, #1
   15d24:	str	r0, [fp, #-48]	; 0xffffffd0
   15d28:	b	15cc0 <dim_enter_array@@Base+0x4cc>
   15d2c:	b	15d30 <dim_enter_array@@Base+0x53c>
   15d30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d34:	cmp	r0, #0
   15d38:	beq	16050 <dim_enter_array@@Base+0x85c>
   15d3c:	movw	r0, #0
   15d40:	str	r0, [fp, #-48]	; 0xffffffd0
   15d44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d48:	ldr	r1, [fp, #-16]
   15d4c:	ldr	r1, [r1, #4]
   15d50:	cmp	r0, r1
   15d54:	bge	15ee0 <dim_enter_array@@Base+0x6ec>
   15d58:	ldr	r0, [fp, #-16]
   15d5c:	add	r0, r0, #8
   15d60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15d64:	add	r0, r0, r1, lsl #2
   15d68:	ldr	r0, [r0]
   15d6c:	cmn	r0, #1
   15d70:	bne	15e84 <dim_enter_array@@Base+0x690>
   15d74:	ldr	r0, [pc, #2152]	; 165e4 <dim_enter_array@@Base+0xdf0>
   15d78:	ldr	r0, [pc, r0]
   15d7c:	add	r0, r0, #108	; 0x6c
   15d80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15d88:	add	r2, r1, r2
   15d8c:	ldr	r3, [pc, #2188]	; 16620 <dim_enter_array@@Base+0xe2c>
   15d90:	ldr	r3, [pc, r3]
   15d94:	add	r2, r3, r2, lsl #2
   15d98:	str	r1, [r2, #140]	; 0x8c
   15d9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15da0:	lsl	r1, r1, #2
   15da4:	str	r0, [sp, #32]
   15da8:	mov	r0, r1
   15dac:	str	r3, [sp, #28]
   15db0:	bl	12784 <malloc@plt>
   15db4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15db8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15dbc:	add	r1, r1, r2
   15dc0:	ldr	r2, [sp, #28]
   15dc4:	add	r3, r2, #108	; 0x6c
   15dc8:	str	r0, [r3, r1, lsl #2]
   15dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dd0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15dd4:	add	r0, r0, r1
   15dd8:	add	r0, r3, r0, lsl #2
   15ddc:	ldr	r0, [r0]
   15de0:	movw	r1, #0
   15de4:	cmp	r0, r1
   15de8:	bne	15e20 <dim_enter_array@@Base+0x62c>
   15dec:	ldr	r0, [pc, #2040]	; 165ec <dim_enter_array@@Base+0xdf8>
   15df0:	add	r1, pc, r0
   15df4:	ldr	r0, [pc, #2036]	; 165f0 <dim_enter_array@@Base+0xdfc>
   15df8:	add	r3, pc, r0
   15dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e00:	lsl	r2, r0, #2
   15e04:	mvn	r0, #0
   15e08:	movw	ip, #456	; 0x1c8
   15e0c:	str	ip, [sp]
   15e10:	bl	12610 <coda_set_error@plt>
   15e14:	ldr	r0, [pc, #1996]	; 165e8 <dim_enter_array@@Base+0xdf4>
   15e18:	ldr	r0, [pc, r0]
   15e1c:	blx	r0
   15e20:	movw	r0, #0
   15e24:	str	r0, [sp, #68]	; 0x44
   15e28:	ldr	r0, [sp, #68]	; 0x44
   15e2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e30:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e34:	subs	r1, r0, r1
   15e38:	rscs	r0, r2, r0, asr #31
   15e3c:	bge	15e80 <dim_enter_array@@Base+0x68c>
   15e40:	b	15e44 <dim_enter_array@@Base+0x650>
   15e44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e48:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e4c:	add	r0, r0, r1
   15e50:	ldr	r1, [pc, #1996]	; 16624 <dim_enter_array@@Base+0xe30>
   15e54:	ldr	r1, [pc, r1]
   15e58:	add	r0, r1, r0, lsl #2
   15e5c:	ldr	r0, [r0, #108]	; 0x6c
   15e60:	ldr	r1, [sp, #68]	; 0x44
   15e64:	add	r0, r0, r1, lsl #2
   15e68:	mvn	r1, #0
   15e6c:	str	r1, [r0]
   15e70:	ldr	r0, [sp, #68]	; 0x44
   15e74:	add	r0, r0, #1
   15e78:	str	r0, [sp, #68]	; 0x44
   15e7c:	b	15e28 <dim_enter_array@@Base+0x634>
   15e80:	b	15ecc <dim_enter_array@@Base+0x6d8>
   15e84:	ldr	r0, [pc, #1876]	; 165e0 <dim_enter_array@@Base+0xdec>
   15e88:	ldr	r0, [pc, r0]
   15e8c:	add	r0, r0, #108	; 0x6c
   15e90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e94:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15e98:	add	r1, r1, r2
   15e9c:	ldr	r2, [pc, #1924]	; 16628 <dim_enter_array@@Base+0xe34>
   15ea0:	ldr	r2, [pc, r2]
   15ea4:	add	r1, r2, r1, lsl #2
   15ea8:	mov	r3, #0
   15eac:	str	r3, [r1, #140]	; 0x8c
   15eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15eb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15eb8:	add	r1, r1, r3
   15ebc:	add	r1, r2, r1, lsl #2
   15ec0:	add	r1, r1, #108	; 0x6c
   15ec4:	movw	r2, #0
   15ec8:	str	r2, [r1]
   15ecc:	b	15ed0 <dim_enter_array@@Base+0x6dc>
   15ed0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ed4:	add	r0, r0, #1
   15ed8:	str	r0, [fp, #-48]	; 0xffffffd0
   15edc:	b	15d44 <dim_enter_array@@Base+0x550>
   15ee0:	ldr	r0, [fp, #-16]
   15ee4:	movw	r1, #0
   15ee8:	str	r1, [r0, #44]	; 0x2c
   15eec:	mov	r0, r1
   15ef0:	str	r1, [sp, #24]
   15ef4:	ldr	r2, [sp, #24]
   15ef8:	bl	16674 <dim_enter_array@@Base+0xe80>
   15efc:	movw	r0, #0
   15f00:	str	r0, [fp, #-48]	; 0xffffffd0
   15f04:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f08:	ldr	r1, [fp, #-16]
   15f0c:	ldr	r1, [r1, #4]
   15f10:	cmp	r0, r1
   15f14:	bge	1604c <dim_enter_array@@Base+0x858>
   15f18:	ldr	r0, [fp, #-16]
   15f1c:	add	r0, r0, #8
   15f20:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15f24:	add	r0, r0, r1, lsl #2
   15f28:	ldr	r0, [r0]
   15f2c:	cmn	r0, #1
   15f30:	bne	16038 <dim_enter_array@@Base+0x844>
   15f34:	ldr	r0, [pc, #1688]	; 165d4 <dim_enter_array@@Base+0xde0>
   15f38:	ldr	r0, [pc, r0]
   15f3c:	add	r0, r0, #36	; 0x24
   15f40:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f44:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15f48:	add	r1, r1, r2
   15f4c:	ldr	r2, [pc, #1752]	; 1662c <dim_enter_array@@Base+0xe38>
   15f50:	ldr	r2, [pc, r2]
   15f54:	add	r1, r2, r1, lsl #2
   15f58:	ldr	r2, [r1, #4]
   15f5c:	add	r1, r1, #36	; 0x24
   15f60:	ldr	r1, [r1]
   15f64:	cmp	r2, r1
   15f68:	beq	15fa4 <dim_enter_array@@Base+0x7b0>
   15f6c:	ldr	r0, [pc, #1640]	; 165dc <dim_enter_array@@Base+0xde8>
   15f70:	ldr	r0, [pc, r0]
   15f74:	add	r0, r0, #72	; 0x48
   15f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15f80:	add	r1, r1, r2
   15f84:	ldr	r2, [pc, #1700]	; 16630 <dim_enter_array@@Base+0xe3c>
   15f88:	ldr	r2, [pc, r2]
   15f8c:	add	r1, r2, r1, lsl #2
   15f90:	add	r1, r1, #72	; 0x48
   15f94:	movw	r2, #1
   15f98:	str	r2, [r1]
   15f9c:	str	r2, [fp, #-40]	; 0xffffffd8
   15fa0:	b	16034 <dim_enter_array@@Base+0x840>
   15fa4:	ldr	r0, [pc, #1580]	; 165d8 <dim_enter_array@@Base+0xde4>
   15fa8:	ldr	r0, [pc, r0]
   15fac:	add	r0, r0, #140	; 0x8c
   15fb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15fb4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15fb8:	add	r1, r1, r2
   15fbc:	ldr	r2, [pc, #1648]	; 16634 <dim_enter_array@@Base+0xe40>
   15fc0:	ldr	r2, [pc, r2]
   15fc4:	add	r1, r2, r1, lsl #2
   15fc8:	mov	r3, #0
   15fcc:	str	r3, [r1, #72]	; 0x48
   15fd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15fd4:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15fd8:	add	r1, r1, ip
   15fdc:	add	ip, r2, #108	; 0x6c
   15fe0:	ldr	r1, [ip, r1, lsl #2]
   15fe4:	str	r0, [sp, #20]
   15fe8:	mov	r0, r1
   15fec:	str	r2, [sp, #16]
   15ff0:	str	r3, [sp, #12]
   15ff4:	str	ip, [sp, #8]
   15ff8:	bl	12658 <free@plt>
   15ffc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16000:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16004:	add	r0, r0, r1
   16008:	ldr	r1, [sp, #12]
   1600c:	ldr	r2, [sp, #8]
   16010:	str	r1, [r2, r0, lsl #2]
   16014:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16018:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1601c:	add	r0, r0, r3
   16020:	ldr	r3, [sp, #16]
   16024:	add	r0, r3, r0, lsl #2
   16028:	add	r0, r0, #140	; 0x8c
   1602c:	movw	ip, #0
   16030:	str	ip, [r0]
   16034:	b	16038 <dim_enter_array@@Base+0x844>
   16038:	b	1603c <dim_enter_array@@Base+0x848>
   1603c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16040:	add	r0, r0, #1
   16044:	str	r0, [fp, #-48]	; 0xffffffd0
   16048:	b	15f04 <dim_enter_array@@Base+0x710>
   1604c:	b	16050 <dim_enter_array@@Base+0x85c>
   16050:	ldr	r0, [pc, #1376]	; 165b8 <dim_enter_array@@Base+0xdc4>
   16054:	ldr	r0, [pc, r0]
   16058:	movw	r1, #0
   1605c:	str	r1, [r0, #68]	; 0x44
   16060:	mvn	r2, #0
   16064:	str	r2, [r0, #104]	; 0x68
   16068:	str	r1, [fp, #-48]	; 0xffffffd0
   1606c:	ldr	r0, [pc, #1352]	; 165bc <dim_enter_array@@Base+0xdc8>
   16070:	ldr	r0, [pc, r0]
   16074:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16078:	ldr	r0, [r0]
   1607c:	cmp	r1, r0
   16080:	bge	160dc <dim_enter_array@@Base+0x8e8>
   16084:	ldr	r0, [pc, #1344]	; 165cc <dim_enter_array@@Base+0xdd8>
   16088:	ldr	r0, [pc, r0]
   1608c:	add	r0, r0, #72	; 0x48
   16090:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16094:	ldr	r2, [pc, #1436]	; 16638 <dim_enter_array@@Base+0xe44>
   16098:	ldr	r2, [pc, r2]
   1609c:	add	r1, r2, r1, lsl #2
   160a0:	add	r1, r1, #72	; 0x48
   160a4:	ldr	r1, [r1]
   160a8:	cmp	r1, #0
   160ac:	beq	160c8 <dim_enter_array@@Base+0x8d4>
   160b0:	ldr	r0, [pc, #1304]	; 165d0 <dim_enter_array@@Base+0xddc>
   160b4:	ldr	r0, [pc, r0]
   160b8:	movw	r1, #1
   160bc:	str	r1, [r0, #68]	; 0x44
   160c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   160c4:	str	r1, [r0, #104]	; 0x68
   160c8:	b	160cc <dim_enter_array@@Base+0x8d8>
   160cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160d0:	add	r0, r0, #1
   160d4:	str	r0, [fp, #-48]	; 0xffffffd0
   160d8:	b	1606c <dim_enter_array@@Base+0x878>
   160dc:	ldr	r0, [fp, #-16]
   160e0:	movw	r1, #1
   160e4:	str	r1, [r0, #40]	; 0x28
   160e8:	movw	r0, #0
   160ec:	str	r0, [fp, #-48]	; 0xffffffd0
   160f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   160f4:	ldr	r1, [fp, #-16]
   160f8:	ldr	r1, [r1, #4]
   160fc:	cmp	r0, r1
   16100:	bge	161dc <dim_enter_array@@Base+0x9e8>
   16104:	ldr	r0, [pc, #1212]	; 165c8 <dim_enter_array@@Base+0xdd4>
   16108:	ldr	r0, [pc, r0]
   1610c:	add	r0, r0, #4
   16110:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16114:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16118:	add	r1, r1, r2
   1611c:	ldr	r2, [pc, #1304]	; 1663c <dim_enter_array@@Base+0xe48>
   16120:	ldr	r2, [pc, r2]
   16124:	add	r1, r2, r1, lsl #2
   16128:	add	r1, r1, #4
   1612c:	ldr	r1, [r1]
   16130:	ldr	r2, [fp, #-16]
   16134:	ldr	r3, [r2, #40]	; 0x28
   16138:	mul	r1, r3, r1
   1613c:	str	r1, [r2, #40]	; 0x28
   16140:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16144:	cmp	r1, #0
   16148:	bne	16188 <dim_enter_array@@Base+0x994>
   1614c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16150:	ldr	r1, [fp, #-20]	; 0xffffffec
   16154:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16158:	ldr	r3, [pc, #1248]	; 16640 <dim_enter_array@@Base+0xe4c>
   1615c:	ldr	r3, [pc, r3]
   16160:	add	ip, r3, r2, lsl #2
   16164:	ldr	ip, [ip, #4]
   16168:	asr	lr, ip, #31
   1616c:	umull	r4, r5, r0, ip
   16170:	mla	r0, r0, lr, r5
   16174:	mla	r0, r1, ip, r0
   16178:	add	r1, r3, r2, lsl #3
   1617c:	str	r4, [r1, #240]	; 0xf0
   16180:	str	r0, [r1, #244]	; 0xf4
   16184:	b	161c8 <dim_enter_array@@Base+0x9d4>
   16188:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1618c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16190:	add	r0, r0, r1
   16194:	ldr	r1, [pc, #1192]	; 16644 <dim_enter_array@@Base+0xe50>
   16198:	ldr	r1, [pc, r1]
   1619c:	add	r2, r1, r0, lsl #3
   161a0:	ldr	r3, [r2, #232]	; 0xe8
   161a4:	ldr	ip, [r2, #236]	; 0xec
   161a8:	add	r0, r1, r0, lsl #2
   161ac:	ldr	r0, [r0, #4]
   161b0:	asr	r1, r0, #31
   161b4:	umull	lr, r4, r3, r0
   161b8:	mla	r1, r3, r1, r4
   161bc:	mla	r0, ip, r0, r1
   161c0:	str	lr, [r2, #240]	; 0xf0
   161c4:	str	r0, [r2, #244]	; 0xf4
   161c8:	b	161cc <dim_enter_array@@Base+0x9d8>
   161cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   161d0:	add	r0, r0, #1
   161d4:	str	r0, [fp, #-48]	; 0xffffffd0
   161d8:	b	160f0 <dim_enter_array@@Base+0x8fc>
   161dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   161e0:	cmp	r0, #0
   161e4:	beq	16380 <dim_enter_array@@Base+0xb8c>
   161e8:	movw	r0, #0
   161ec:	str	r0, [fp, #-48]	; 0xffffffd0
   161f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   161f4:	ldr	r1, [fp, #-16]
   161f8:	ldr	r1, [r1, #4]
   161fc:	cmp	r0, r1
   16200:	bge	16238 <dim_enter_array@@Base+0xa44>
   16204:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16208:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1620c:	add	r0, r0, r1
   16210:	ldr	r1, [pc, #1072]	; 16648 <dim_enter_array@@Base+0xe54>
   16214:	ldr	r1, [pc, r1]
   16218:	add	r0, r1, r0, lsl #3
   1621c:	mov	r1, #0
   16220:	str	r1, [r0, #308]	; 0x134
   16224:	str	r1, [r0, #304]	; 0x130
   16228:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1622c:	add	r0, r0, #1
   16230:	str	r0, [fp, #-48]	; 0xffffffd0
   16234:	b	161f0 <dim_enter_array@@Base+0x9fc>
   16238:	movw	r0, #0
   1623c:	str	r0, [sp, #64]	; 0x40
   16240:	ldr	r0, [sp, #64]	; 0x40
   16244:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16248:	ldr	r2, [fp, #-20]	; 0xffffffec
   1624c:	subs	r1, r0, r1
   16250:	rscs	r0, r2, r0, asr #31
   16254:	bge	1637c <dim_enter_array@@Base+0xb88>
   16258:	b	1625c <dim_enter_array@@Base+0xa68>
   1625c:	movw	r0, #1
   16260:	str	r0, [sp, #60]	; 0x3c
   16264:	movw	r0, #0
   16268:	str	r0, [fp, #-48]	; 0xffffffd0
   1626c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16270:	ldr	r1, [fp, #-16]
   16274:	ldr	r1, [r1, #4]
   16278:	cmp	r0, r1
   1627c:	bge	16368 <dim_enter_array@@Base+0xb74>
   16280:	ldr	r0, [pc, #824]	; 165c0 <dim_enter_array@@Base+0xdcc>
   16284:	ldr	r0, [pc, r0]
   16288:	add	r0, r0, #72	; 0x48
   1628c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16290:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16294:	add	r1, r1, r2
   16298:	ldr	r2, [pc, #940]	; 1664c <dim_enter_array@@Base+0xe58>
   1629c:	ldr	r2, [pc, r2]
   162a0:	add	r1, r2, r1, lsl #2
   162a4:	add	r1, r1, #72	; 0x48
   162a8:	ldr	r1, [r1]
   162ac:	cmp	r1, #0
   162b0:	beq	162ec <dim_enter_array@@Base+0xaf8>
   162b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162b8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   162bc:	add	r0, r0, r1
   162c0:	ldr	r1, [pc, #904]	; 16650 <dim_enter_array@@Base+0xe5c>
   162c4:	ldr	r1, [pc, r1]
   162c8:	add	r0, r1, r0, lsl #2
   162cc:	ldr	r0, [r0, #108]	; 0x6c
   162d0:	ldr	r1, [sp, #64]	; 0x40
   162d4:	add	r0, r0, r1, lsl #2
   162d8:	ldr	r0, [r0]
   162dc:	ldr	r1, [sp, #60]	; 0x3c
   162e0:	mul	r0, r1, r0
   162e4:	str	r0, [sp, #60]	; 0x3c
   162e8:	b	16324 <dim_enter_array@@Base+0xb30>
   162ec:	ldr	r0, [pc, #720]	; 165c4 <dim_enter_array@@Base+0xdd0>
   162f0:	ldr	r0, [pc, r0]
   162f4:	add	r0, r0, #4
   162f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16300:	add	r1, r1, r2
   16304:	ldr	r2, [pc, #840]	; 16654 <dim_enter_array@@Base+0xe60>
   16308:	ldr	r2, [pc, r2]
   1630c:	add	r1, r2, r1, lsl #2
   16310:	add	r1, r1, #4
   16314:	ldr	r1, [r1]
   16318:	ldr	r2, [sp, #60]	; 0x3c
   1631c:	mul	r1, r2, r1
   16320:	str	r1, [sp, #60]	; 0x3c
   16324:	ldr	r0, [sp, #60]	; 0x3c
   16328:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1632c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16330:	add	r1, r1, r2
   16334:	ldr	r2, [pc, #796]	; 16658 <dim_enter_array@@Base+0xe64>
   16338:	ldr	r2, [pc, r2]
   1633c:	add	r1, r2, r1, lsl #3
   16340:	ldr	r2, [r1, #304]	; 0x130
   16344:	ldr	r3, [r1, #308]	; 0x134
   16348:	adds	r2, r2, r0
   1634c:	adc	r0, r3, r0, asr #31
   16350:	str	r2, [r1, #304]	; 0x130
   16354:	str	r0, [r1, #308]	; 0x134
   16358:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1635c:	add	r0, r0, #1
   16360:	str	r0, [fp, #-48]	; 0xffffffd0
   16364:	b	1626c <dim_enter_array@@Base+0xa78>
   16368:	b	1636c <dim_enter_array@@Base+0xb78>
   1636c:	ldr	r0, [sp, #64]	; 0x40
   16370:	add	r0, r0, #1
   16374:	str	r0, [sp, #64]	; 0x40
   16378:	b	16240 <dim_enter_array@@Base+0xa4c>
   1637c:	b	16428 <dim_enter_array@@Base+0xc34>
   16380:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16384:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16388:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1638c:	ldr	r3, [pc, #712]	; 1665c <dim_enter_array@@Base+0xe68>
   16390:	ldr	r3, [pc, r3]
   16394:	add	ip, r3, r2, lsl #2
   16398:	ldr	ip, [ip, #4]
   1639c:	asr	lr, ip, #31
   163a0:	umull	r4, r5, r0, ip
   163a4:	mla	r0, r0, lr, r5
   163a8:	mla	r0, r1, ip, r0
   163ac:	add	r1, r3, r2, lsl #3
   163b0:	str	r4, [r1, #304]	; 0x130
   163b4:	str	r0, [r1, #308]	; 0x134
   163b8:	movw	r0, #1
   163bc:	str	r0, [fp, #-48]	; 0xffffffd0
   163c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   163c4:	ldr	r1, [fp, #-16]
   163c8:	ldr	r1, [r1, #4]
   163cc:	cmp	r0, r1
   163d0:	bge	16424 <dim_enter_array@@Base+0xc30>
   163d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163d8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   163dc:	add	r0, r0, r1
   163e0:	ldr	r1, [pc, #632]	; 16660 <dim_enter_array@@Base+0xe6c>
   163e4:	ldr	r1, [pc, r1]
   163e8:	add	r2, r1, r0, lsl #3
   163ec:	ldr	r3, [r2, #296]	; 0x128
   163f0:	ldr	ip, [r2, #300]	; 0x12c
   163f4:	add	r0, r1, r0, lsl #2
   163f8:	ldr	r0, [r0, #4]
   163fc:	asr	r1, r0, #31
   16400:	umull	lr, r4, r3, r0
   16404:	mla	r1, r3, r1, r4
   16408:	mla	r0, ip, r0, r1
   1640c:	str	lr, [r2, #304]	; 0x130
   16410:	str	r0, [r2, #308]	; 0x134
   16414:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16418:	add	r0, r0, #1
   1641c:	str	r0, [fp, #-48]	; 0xffffffd0
   16420:	b	163c0 <dim_enter_array@@Base+0xbcc>
   16424:	b	16428 <dim_enter_array@@Base+0xc34>
   16428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1642c:	ldr	r1, [fp, #-16]
   16430:	ldr	r1, [r1, #4]
   16434:	add	r0, r0, r1
   16438:	ldr	r1, [pc, #548]	; 16664 <dim_enter_array@@Base+0xe70>
   1643c:	ldr	r1, [pc, r1]
   16440:	add	r0, r1, r0, lsl #3
   16444:	ldr	r1, [r0, #296]	; 0x128
   16448:	ldr	r0, [r0, #300]	; 0x12c
   1644c:	subs	r1, r1, #1
   16450:	sbcs	r0, r0, #0
   16454:	blt	16560 <dim_enter_array@@Base+0xd6c>
   16458:	b	1645c <dim_enter_array@@Base+0xc68>
   1645c:	ldr	r0, [pc, #516]	; 16668 <dim_enter_array@@Base+0xe74>
   16460:	ldr	r0, [pc, r0]
   16464:	ldr	r1, [r0]
   16468:	sub	r1, r1, #1
   1646c:	add	r2, r0, r1, lsl #2
   16470:	ldr	r2, [r2, #4]
   16474:	asr	r3, r2, #31
   16478:	add	r0, r0, r1, lsl #3
   1647c:	str	r2, [r0, #176]	; 0xb0
   16480:	str	r3, [r0, #180]	; 0xb4
   16484:	ldr	r0, [fp, #-16]
   16488:	ldr	r0, [r0, #4]
   1648c:	sub	r0, r0, #2
   16490:	str	r0, [fp, #-48]	; 0xffffffd0
   16494:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16498:	cmp	r0, #0
   1649c:	blt	164f4 <dim_enter_array@@Base+0xd00>
   164a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   164a8:	add	r0, r0, r1
   164ac:	ldr	r1, [pc, #440]	; 1666c <dim_enter_array@@Base+0xe78>
   164b0:	ldr	r1, [pc, r1]
   164b4:	add	r2, r1, r0, lsl #2
   164b8:	ldr	r2, [r2, #4]
   164bc:	asr	r3, r2, #31
   164c0:	add	r0, r1, r0, lsl #3
   164c4:	ldr	r1, [r0, #184]	; 0xb8
   164c8:	ldr	ip, [r0, #188]	; 0xbc
   164cc:	umull	lr, r4, r2, r1
   164d0:	mla	r2, r2, ip, r4
   164d4:	mla	r1, r3, r1, r2
   164d8:	str	lr, [r0, #176]	; 0xb0
   164dc:	str	r1, [r0, #180]	; 0xb4
   164e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   164e4:	mvn	r1, #0
   164e8:	add	r0, r0, r1
   164ec:	str	r0, [fp, #-48]	; 0xffffffd0
   164f0:	b	16494 <dim_enter_array@@Base+0xca0>
   164f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164f8:	sub	r0, r0, #1
   164fc:	str	r0, [fp, #-48]	; 0xffffffd0
   16500:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16504:	cmp	r0, #0
   16508:	blt	1655c <dim_enter_array@@Base+0xd68>
   1650c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16510:	ldr	r1, [pc, #344]	; 16670 <dim_enter_array@@Base+0xe7c>
   16514:	ldr	r1, [pc, r1]
   16518:	add	r1, r1, #176	; 0xb0
   1651c:	mov	r2, r1
   16520:	ldr	r0, [r2, r0, lsl #3]!
   16524:	ldr	r2, [r2, #4]
   16528:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1652c:	ldr	r3, [r1, r3, lsl #3]!
   16530:	ldr	ip, [r1, #4]
   16534:	umull	lr, r4, r3, r0
   16538:	mla	r2, r3, r2, r4
   1653c:	mla	r0, ip, r0, r2
   16540:	str	lr, [r1]
   16544:	str	r0, [r1, #4]
   16548:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1654c:	mvn	r1, #0
   16550:	add	r0, r0, r1
   16554:	str	r0, [fp, #-48]	; 0xffffffd0
   16558:	b	16500 <dim_enter_array@@Base+0xd0c>
   1655c:	b	16560 <dim_enter_array@@Base+0xd6c>
   16560:	sub	sp, fp, #8
   16564:	pop	{r4, r5, fp, pc}
   16568:	andeq	fp, r1, r8, lsr #19
   1656c:	andeq	fp, r1, r4, lsl #19
   16570:	andeq	fp, r1, r4, ror r7
   16574:	andeq	fp, r1, r4, ror #14
   16578:	ldrdeq	fp, [r1], -r8
   1657c:	andeq	fp, r1, r8, asr #15
   16580:	andeq	fp, r1, r0, ror r8
   16584:	andeq	fp, r1, r0, ror #16
   16588:	andeq	r9, r0, r3, lsr #7
   1658c:	andeq	r9, r0, sl, asr #7
   16590:	andeq	r9, r0, r0, ror #8
   16594:	andeq	fp, r1, ip, lsl #18
   16598:	strdeq	fp, [r1], -ip
   1659c:			; <UNDEFINED> instruction: 0x0001b6b4
   165a0:	andeq	fp, r1, r4, asr #13
   165a4:	ldrdeq	r9, [r0], -r3
   165a8:	andeq	r9, r0, r6, lsl r2
   165ac:	andeq	r9, r0, ip, lsr #5
   165b0:	andeq	fp, r1, ip, ror #12
   165b4:	andeq	fp, r1, r8, lsl r5
   165b8:	muleq	r1, ip, r1
   165bc:	andeq	fp, r1, r0, lsl #3
   165c0:	andeq	sl, r1, ip, ror #30
   165c4:	andeq	sl, r1, r0, lsl #30
   165c8:	andeq	fp, r1, r8, ror #1
   165cc:	andeq	fp, r1, r8, ror #2
   165d0:	andeq	fp, r1, ip, lsr r1
   165d4:			; <UNDEFINED> instruction: 0x0001b2b8
   165d8:	andeq	fp, r1, r8, asr #4
   165dc:	andeq	fp, r1, r0, lsl #5
   165e0:	andeq	fp, r1, r8, ror #6
   165e4:	andeq	fp, r1, r8, ror r4
   165e8:	andeq	fp, r1, r0, asr #7
   165ec:	andeq	r8, r0, r0, lsr #26
   165f0:	andeq	r8, r0, sl, lsl #31
   165f4:	andeq	r9, r0, pc, ror r2
   165f8:	andeq	r9, r0, r6, lsr #5
   165fc:	andeq	r9, r0, ip, lsr r3
   16600:	muleq	r1, ip, r9
   16604:	andeq	fp, r1, r0, lsl #18
   16608:	andeq	fp, r1, r4, ror #16
   1660c:	andeq	fp, r1, ip, asr #15
   16610:	andeq	fp, r1, r8, ror #14
   16614:	andeq	fp, r1, r0, asr #12
   16618:	muleq	r1, r8, r5
   1661c:	andeq	fp, r1, r0, lsl #10
   16620:	andeq	fp, r1, r0, ror #8
   16624:	muleq	r1, ip, r3
   16628:	andeq	fp, r1, r0, asr r3
   1662c:	andeq	fp, r1, r0, lsr #5
   16630:	andeq	fp, r1, r8, ror #4
   16634:	andeq	fp, r1, r0, lsr r2
   16638:	andeq	fp, r1, r8, asr r1
   1663c:	ldrdeq	fp, [r1], -r0
   16640:	muleq	r1, r4, r0
   16644:	andeq	fp, r1, r8, asr r0
   16648:	ldrdeq	sl, [r1], -ip
   1664c:	andeq	sl, r1, r4, asr pc
   16650:	andeq	sl, r1, ip, lsr #30
   16654:	andeq	sl, r1, r8, ror #29
   16658:			; <UNDEFINED> instruction: 0x0001aeb8
   1665c:	andeq	sl, r1, r0, ror #28
   16660:	andeq	sl, r1, ip, lsl #28
   16664:			; <UNDEFINED> instruction: 0x0001adb4
   16668:	muleq	r1, r0, sp
   1666c:	andeq	sl, r1, r0, asr #26
   16670:	ldrdeq	sl, [r1], -ip
   16674:	push	{fp, lr}
   16678:	mov	fp, sp
   1667c:	sub	sp, sp, #128	; 0x80
   16680:	ldr	r3, [pc, #2356]	; 16fbc <dim_enter_array@@Base+0x17c8>
   16684:	ldr	r3, [pc, r3]
   16688:	add	r3, r3, #144	; 0x90
   1668c:	str	r0, [fp, #-4]
   16690:	str	r1, [fp, #-8]
   16694:	str	r2, [fp, #-12]
   16698:	mov	r0, r3
   1669c:	sub	r1, fp, #16
   166a0:	bl	126e8 <coda_cursor_get_type_class@plt>
   166a4:	cmp	r0, #0
   166a8:	beq	166b8 <dim_enter_array@@Base+0xec4>
   166ac:	ldr	r0, [pc, #2316]	; 16fc0 <dim_enter_array@@Base+0x17cc>
   166b0:	ldr	r0, [pc, r0]
   166b4:	blx	r0
   166b8:	ldr	r0, [fp, #-16]
   166bc:	cmp	r0, #0
   166c0:	str	r0, [sp, #8]
   166c4:	beq	16b6c <dim_enter_array@@Base+0x1378>
   166c8:	b	166cc <dim_enter_array@@Base+0xed8>
   166cc:	ldr	r0, [sp, #8]
   166d0:	cmp	r0, #1
   166d4:	beq	166f0 <dim_enter_array@@Base+0xefc>
   166d8:	b	166dc <dim_enter_array@@Base+0xee8>
   166dc:	ldr	r0, [sp, #8]
   166e0:	sub	r1, r0, #4
   166e4:	cmp	r1, #2
   166e8:	bcc	16d88 <dim_enter_array@@Base+0x1594>
   166ec:	b	16f94 <dim_enter_array@@Base+0x17a0>
   166f0:	ldr	r0, [pc, #2336]	; 17018 <dim_enter_array@@Base+0x1824>
   166f4:	ldr	r0, [pc, r0]
   166f8:	add	r1, r0, #800	; 0x320
   166fc:	ldr	r2, [fp, #-8]
   16700:	movw	r3, #80	; 0x50
   16704:	mul	r2, r2, r3
   16708:	add	r1, r1, r2
   1670c:	str	r1, [fp, #-20]	; 0xffffffec
   16710:	ldr	r1, [fp, #-20]	; 0xffffffec
   16714:	ldr	r1, [r1]
   16718:	str	r1, [fp, #-24]	; 0xffffffe8
   1671c:	ldr	r1, [fp, #-8]
   16720:	ldr	r0, [r0, #3360]	; 0xd20
   16724:	cmp	r1, r0
   16728:	bne	1695c <dim_enter_array@@Base+0x1168>
   1672c:	ldr	r0, [pc, #2316]	; 17040 <dim_enter_array@@Base+0x184c>
   16730:	ldr	r0, [pc, r0]
   16734:	add	r0, r0, #144	; 0x90
   16738:	sub	r2, fp, #56	; 0x38
   1673c:	sub	r1, fp, #60	; 0x3c
   16740:	bl	128d4 <coda_cursor_get_array_dim@plt>
   16744:	cmp	r0, #0
   16748:	beq	16758 <dim_enter_array@@Base+0xf64>
   1674c:	ldr	r0, [pc, #2288]	; 17044 <dim_enter_array@@Base+0x1850>
   16750:	ldr	r0, [pc, r0]
   16754:	blx	r0
   16758:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1675c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16760:	ldr	r1, [r1, #4]
   16764:	cmp	r0, r1
   16768:	bne	16770 <dim_enter_array@@Base+0xf7c>
   1676c:	b	16790 <dim_enter_array@@Base+0xf9c>
   16770:	ldr	r0, [pc, #2256]	; 17048 <dim_enter_array@@Base+0x1854>
   16774:	add	r0, pc, r0
   16778:	ldr	r1, [pc, #2252]	; 1704c <dim_enter_array@@Base+0x1858>
   1677c:	add	r1, pc, r1
   16780:	ldr	r2, [pc, #2248]	; 17050 <dim_enter_array@@Base+0x185c>
   16784:	add	r3, pc, r2
   16788:	movw	r2, #125	; 0x7d
   1678c:	bl	129f4 <__assert_fail@plt>
   16790:	movw	r0, #0
   16794:	str	r0, [sp, #64]	; 0x40
   16798:	ldr	r0, [sp, #64]	; 0x40
   1679c:	ldr	r1, [fp, #-20]	; 0xffffffec
   167a0:	ldr	r1, [r1, #4]
   167a4:	cmp	r0, r1
   167a8:	bge	16958 <dim_enter_array@@Base+0x1164>
   167ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   167b0:	add	r0, r0, #8
   167b4:	ldr	r1, [sp, #64]	; 0x40
   167b8:	add	r0, r0, r1, lsl #2
   167bc:	ldr	r0, [r0]
   167c0:	cmn	r0, #1
   167c4:	bne	16944 <dim_enter_array@@Base+0x1150>
   167c8:	ldr	r0, [pc, #2180]	; 17054 <dim_enter_array@@Base+0x1860>
   167cc:	ldr	r0, [pc, r0]
   167d0:	add	r0, r0, #4
   167d4:	ldr	r1, [sp, #64]	; 0x40
   167d8:	sub	r2, fp, #56	; 0x38
   167dc:	ldr	r2, [r2, r1, lsl #2]
   167e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   167e4:	add	r1, r3, r1
   167e8:	ldr	r3, [pc, #2176]	; 17070 <dim_enter_array@@Base+0x187c>
   167ec:	ldr	r3, [pc, r3]
   167f0:	add	r1, r3, r1, lsl #2
   167f4:	ldr	r1, [r1, #108]	; 0x6c
   167f8:	ldr	ip, [fp, #-20]	; 0xffffffec
   167fc:	ldr	ip, [ip, #44]	; 0x2c
   16800:	str	r2, [r1, ip, lsl #2]
   16804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16808:	ldr	r2, [sp, #64]	; 0x40
   1680c:	add	r1, r1, r2
   16810:	add	r1, r3, r1, lsl #2
   16814:	add	r1, r1, #4
   16818:	ldr	r1, [r1]
   1681c:	cmn	r1, #1
   16820:	bne	16874 <dim_enter_array@@Base+0x1080>
   16824:	ldr	r0, [pc, #2100]	; 17060 <dim_enter_array@@Base+0x186c>
   16828:	ldr	r0, [pc, r0]
   1682c:	add	r0, r0, #36	; 0x24
   16830:	ldr	r1, [sp, #64]	; 0x40
   16834:	sub	r2, fp, #56	; 0x38
   16838:	ldr	r3, [r2, r1, lsl #2]
   1683c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   16840:	add	r1, ip, r1
   16844:	ldr	ip, [pc, #2088]	; 17074 <dim_enter_array@@Base+0x1880>
   16848:	ldr	ip, [pc, ip]
   1684c:	add	r1, ip, r1, lsl #2
   16850:	str	r3, [r1, #4]
   16854:	ldr	r1, [sp, #64]	; 0x40
   16858:	ldr	r2, [r2, r1, lsl #2]
   1685c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16860:	add	r1, r3, r1
   16864:	add	r1, ip, r1, lsl #2
   16868:	add	r1, r1, #36	; 0x24
   1686c:	str	r2, [r1]
   16870:	b	16940 <dim_enter_array@@Base+0x114c>
   16874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16878:	ldr	r1, [sp, #64]	; 0x40
   1687c:	add	r0, r0, r1
   16880:	ldr	r2, [pc, #2032]	; 17078 <dim_enter_array@@Base+0x1884>
   16884:	ldr	r2, [pc, r2]
   16888:	add	r0, r2, r0, lsl #2
   1688c:	ldr	r0, [r0, #4]
   16890:	sub	r2, fp, #56	; 0x38
   16894:	add	r1, r2, r1, lsl #2
   16898:	ldr	r1, [r1]
   1689c:	cmp	r0, r1
   168a0:	bge	168d8 <dim_enter_array@@Base+0x10e4>
   168a4:	ldr	r0, [pc, #1964]	; 17058 <dim_enter_array@@Base+0x1864>
   168a8:	ldr	r0, [pc, r0]
   168ac:	add	r0, r0, #4
   168b0:	ldr	r1, [sp, #64]	; 0x40
   168b4:	sub	r2, fp, #56	; 0x38
   168b8:	ldr	r2, [r2, r1, lsl #2]
   168bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168c0:	add	r1, r3, r1
   168c4:	ldr	r3, [pc, #1968]	; 1707c <dim_enter_array@@Base+0x1888>
   168c8:	ldr	r3, [pc, r3]
   168cc:	add	r1, r3, r1, lsl #2
   168d0:	add	r1, r1, #4
   168d4:	str	r2, [r1]
   168d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168dc:	ldr	r1, [sp, #64]	; 0x40
   168e0:	add	r0, r0, r1
   168e4:	ldr	r2, [pc, #1940]	; 17080 <dim_enter_array@@Base+0x188c>
   168e8:	ldr	r2, [pc, r2]
   168ec:	add	r0, r2, r0, lsl #2
   168f0:	ldr	r0, [r0, #36]	; 0x24
   168f4:	sub	r2, fp, #56	; 0x38
   168f8:	add	r1, r2, r1, lsl #2
   168fc:	ldr	r1, [r1]
   16900:	cmp	r0, r1
   16904:	ble	1693c <dim_enter_array@@Base+0x1148>
   16908:	ldr	r0, [pc, #1868]	; 1705c <dim_enter_array@@Base+0x1868>
   1690c:	ldr	r0, [pc, r0]
   16910:	add	r0, r0, #36	; 0x24
   16914:	ldr	r1, [sp, #64]	; 0x40
   16918:	sub	r2, fp, #56	; 0x38
   1691c:	ldr	r2, [r2, r1, lsl #2]
   16920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16924:	add	r1, r3, r1
   16928:	ldr	r3, [pc, #1876]	; 17084 <dim_enter_array@@Base+0x1890>
   1692c:	ldr	r3, [pc, r3]
   16930:	add	r1, r3, r1, lsl #2
   16934:	add	r1, r1, #36	; 0x24
   16938:	str	r2, [r1]
   1693c:	b	16940 <dim_enter_array@@Base+0x114c>
   16940:	b	16944 <dim_enter_array@@Base+0x1150>
   16944:	b	16948 <dim_enter_array@@Base+0x1154>
   16948:	ldr	r0, [sp, #64]	; 0x40
   1694c:	add	r0, r0, #1
   16950:	str	r0, [sp, #64]	; 0x40
   16954:	b	16798 <dim_enter_array@@Base+0xfa4>
   16958:	b	16b68 <dim_enter_array@@Base+0x1374>
   1695c:	ldr	r0, [fp, #-8]
   16960:	cmp	r0, #0
   16964:	bne	16974 <dim_enter_array@@Base+0x1180>
   16968:	ldr	r0, [fp, #-20]	; 0xffffffec
   1696c:	movw	r1, #0
   16970:	str	r1, [r0, #44]	; 0x2c
   16974:	ldr	r0, [pc, #1696]	; 1701c <dim_enter_array@@Base+0x1828>
   16978:	ldr	r0, [pc, r0]
   1697c:	add	r0, r0, #800	; 0x320
   16980:	ldr	r1, [fp, #-20]	; 0xffffffec
   16984:	ldr	r1, [r1, #44]	; 0x2c
   16988:	ldr	r2, [fp, #-20]	; 0xffffffec
   1698c:	ldr	r2, [r2, #40]	; 0x28
   16990:	mul	r1, r1, r2
   16994:	ldr	r2, [fp, #-8]
   16998:	add	r2, r2, #1
   1699c:	movw	r3, #80	; 0x50
   169a0:	mul	r2, r2, r3
   169a4:	add	r0, r0, r2
   169a8:	str	r1, [r0, #44]	; 0x2c
   169ac:	movw	r0, #1
   169b0:	str	r0, [sp, #60]	; 0x3c
   169b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169b8:	str	r0, [sp, #56]	; 0x38
   169bc:	ldr	r0, [sp, #56]	; 0x38
   169c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   169c8:	ldr	r2, [r2, #4]
   169cc:	add	r1, r1, r2
   169d0:	cmp	r0, r1
   169d4:	bge	16a7c <dim_enter_array@@Base+0x1288>
   169d8:	ldr	r0, [pc, #1624]	; 17038 <dim_enter_array@@Base+0x1844>
   169dc:	ldr	r0, [pc, r0]
   169e0:	add	r0, r0, #72	; 0x48
   169e4:	ldr	r1, [sp, #56]	; 0x38
   169e8:	ldr	r2, [pc, #1688]	; 17088 <dim_enter_array@@Base+0x1894>
   169ec:	ldr	r2, [pc, r2]
   169f0:	add	r1, r2, r1, lsl #2
   169f4:	add	r1, r1, #72	; 0x48
   169f8:	ldr	r1, [r1]
   169fc:	cmp	r1, #0
   16a00:	beq	16a38 <dim_enter_array@@Base+0x1244>
   16a04:	ldr	r0, [sp, #56]	; 0x38
   16a08:	ldr	r1, [pc, #1660]	; 1708c <dim_enter_array@@Base+0x1898>
   16a0c:	ldr	r1, [pc, r1]
   16a10:	add	r0, r1, r0, lsl #2
   16a14:	ldr	r0, [r0, #108]	; 0x6c
   16a18:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a1c:	ldr	r1, [r1, #44]	; 0x2c
   16a20:	add	r0, r0, r1, lsl #2
   16a24:	ldr	r0, [r0]
   16a28:	ldr	r1, [sp, #60]	; 0x3c
   16a2c:	mul	r0, r1, r0
   16a30:	str	r0, [sp, #60]	; 0x3c
   16a34:	b	16a68 <dim_enter_array@@Base+0x1274>
   16a38:	ldr	r0, [pc, #1532]	; 1703c <dim_enter_array@@Base+0x1848>
   16a3c:	ldr	r0, [pc, r0]
   16a40:	add	r0, r0, #4
   16a44:	ldr	r1, [sp, #56]	; 0x38
   16a48:	ldr	r2, [pc, #1600]	; 17090 <dim_enter_array@@Base+0x189c>
   16a4c:	ldr	r2, [pc, r2]
   16a50:	add	r1, r2, r1, lsl #2
   16a54:	add	r1, r1, #4
   16a58:	ldr	r1, [r1]
   16a5c:	ldr	r2, [sp, #60]	; 0x3c
   16a60:	mul	r1, r2, r1
   16a64:	str	r1, [sp, #60]	; 0x3c
   16a68:	b	16a6c <dim_enter_array@@Base+0x1278>
   16a6c:	ldr	r0, [sp, #56]	; 0x38
   16a70:	add	r0, r0, #1
   16a74:	str	r0, [sp, #56]	; 0x38
   16a78:	b	169bc <dim_enter_array@@Base+0x11c8>
   16a7c:	ldr	r0, [sp, #60]	; 0x3c
   16a80:	cmp	r0, #0
   16a84:	ble	16b64 <dim_enter_array@@Base+0x1370>
   16a88:	ldr	r0, [pc, #1424]	; 17020 <dim_enter_array@@Base+0x182c>
   16a8c:	ldr	r0, [pc, r0]
   16a90:	add	r0, r0, #144	; 0x90
   16a94:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   16a98:	cmp	r0, #0
   16a9c:	beq	16aac <dim_enter_array@@Base+0x12b8>
   16aa0:	ldr	r0, [pc, #1404]	; 17024 <dim_enter_array@@Base+0x1830>
   16aa4:	ldr	r0, [pc, r0]
   16aa8:	blx	r0
   16aac:	movw	r0, #0
   16ab0:	str	r0, [sp, #52]	; 0x34
   16ab4:	ldr	r0, [sp, #52]	; 0x34
   16ab8:	ldr	r1, [sp, #60]	; 0x3c
   16abc:	cmp	r0, r1
   16ac0:	bge	16b54 <dim_enter_array@@Base+0x1360>
   16ac4:	ldr	r0, [fp, #-4]
   16ac8:	add	r0, r0, #1
   16acc:	ldr	r1, [fp, #-8]
   16ad0:	add	r1, r1, #1
   16ad4:	ldr	r2, [fp, #-12]
   16ad8:	bl	16674 <dim_enter_array@@Base+0xe80>
   16adc:	ldr	r0, [sp, #52]	; 0x34
   16ae0:	ldr	r1, [sp, #60]	; 0x3c
   16ae4:	sub	r1, r1, #1
   16ae8:	cmp	r0, r1
   16aec:	bge	16b40 <dim_enter_array@@Base+0x134c>
   16af0:	ldr	r0, [pc, #1332]	; 1702c <dim_enter_array@@Base+0x1838>
   16af4:	ldr	r0, [pc, r0]
   16af8:	add	r0, r0, #144	; 0x90
   16afc:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   16b00:	cmp	r0, #0
   16b04:	beq	16b14 <dim_enter_array@@Base+0x1320>
   16b08:	ldr	r0, [pc, #1312]	; 17030 <dim_enter_array@@Base+0x183c>
   16b0c:	ldr	r0, [pc, r0]
   16b10:	blx	r0
   16b14:	ldr	r0, [pc, #1304]	; 17034 <dim_enter_array@@Base+0x1840>
   16b18:	ldr	r0, [pc, r0]
   16b1c:	add	r0, r0, #800	; 0x320
   16b20:	ldr	r1, [fp, #-8]
   16b24:	add	r1, r1, #1
   16b28:	movw	r2, #80	; 0x50
   16b2c:	mul	r1, r1, r2
   16b30:	add	r0, r0, r1
   16b34:	ldr	r1, [r0, #44]	; 0x2c
   16b38:	add	r1, r1, #1
   16b3c:	str	r1, [r0, #44]	; 0x2c
   16b40:	b	16b44 <dim_enter_array@@Base+0x1350>
   16b44:	ldr	r0, [sp, #52]	; 0x34
   16b48:	add	r0, r0, #1
   16b4c:	str	r0, [sp, #52]	; 0x34
   16b50:	b	16ab4 <dim_enter_array@@Base+0x12c0>
   16b54:	ldr	r0, [pc, #1228]	; 17028 <dim_enter_array@@Base+0x1834>
   16b58:	ldr	r0, [pc, r0]
   16b5c:	add	r0, r0, #144	; 0x90
   16b60:	bl	127b4 <coda_cursor_goto_parent@plt>
   16b64:	b	16b68 <dim_enter_array@@Base+0x1374>
   16b68:	b	16fb4 <dim_enter_array@@Base+0x17c0>
   16b6c:	ldr	r0, [pc, #1152]	; 16ff4 <dim_enter_array@@Base+0x1800>
   16b70:	ldr	r0, [pc, r0]
   16b74:	add	r1, r0, #144	; 0x90
   16b78:	movw	r2, #3492	; 0xda4
   16b7c:	add	r0, r0, r2
   16b80:	ldr	r2, [fp, #-12]
   16b84:	ldr	r3, [pc, #1288]	; 17094 <dim_enter_array@@Base+0x18a0>
   16b88:	ldr	r3, [pc, r3]
   16b8c:	add	r2, r3, r2, lsl #2
   16b90:	movw	r3, #3492	; 0xda4
   16b94:	add	r2, r2, r3
   16b98:	ldr	r2, [r2]
   16b9c:	str	r0, [sp, #4]
   16ba0:	mov	r0, r1
   16ba4:	mov	r1, r2
   16ba8:	add	r2, sp, #48	; 0x30
   16bac:	bl	125f8 <coda_cursor_get_record_field_available_status@plt>
   16bb0:	cmp	r0, #0
   16bb4:	beq	16bc4 <dim_enter_array@@Base+0x13d0>
   16bb8:	ldr	r0, [pc, #1080]	; 16ff8 <dim_enter_array@@Base+0x1804>
   16bbc:	ldr	r0, [pc, r0]
   16bc0:	blx	r0
   16bc4:	ldr	r0, [sp, #48]	; 0x30
   16bc8:	cmp	r0, #0
   16bcc:	beq	16c50 <dim_enter_array@@Base+0x145c>
   16bd0:	ldr	r0, [pc, #1076]	; 1700c <dim_enter_array@@Base+0x1818>
   16bd4:	ldr	r0, [pc, r0]
   16bd8:	add	r1, r0, #144	; 0x90
   16bdc:	movw	r2, #3492	; 0xda4
   16be0:	add	r0, r0, r2
   16be4:	ldr	r2, [fp, #-12]
   16be8:	ldr	r3, [pc, #1192]	; 17098 <dim_enter_array@@Base+0x18a4>
   16bec:	ldr	r3, [pc, r3]
   16bf0:	add	r2, r3, r2, lsl #2
   16bf4:	movw	r3, #3492	; 0xda4
   16bf8:	add	r2, r2, r3
   16bfc:	ldr	r2, [r2]
   16c00:	str	r0, [sp]
   16c04:	mov	r0, r1
   16c08:	mov	r1, r2
   16c0c:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   16c10:	cmp	r0, #0
   16c14:	beq	16c24 <dim_enter_array@@Base+0x1430>
   16c18:	ldr	r0, [pc, #1008]	; 17010 <dim_enter_array@@Base+0x181c>
   16c1c:	ldr	r0, [pc, r0]
   16c20:	blx	r0
   16c24:	ldr	r0, [fp, #-4]
   16c28:	add	r0, r0, #1
   16c2c:	ldr	r1, [fp, #-8]
   16c30:	ldr	r2, [fp, #-12]
   16c34:	add	r2, r2, #1
   16c38:	bl	16674 <dim_enter_array@@Base+0xe80>
   16c3c:	ldr	r0, [pc, #976]	; 17014 <dim_enter_array@@Base+0x1820>
   16c40:	ldr	r0, [pc, r0]
   16c44:	add	r0, r0, #144	; 0x90
   16c48:	bl	127b4 <coda_cursor_goto_parent@plt>
   16c4c:	b	16d84 <dim_enter_array@@Base+0x1590>
   16c50:	ldr	r0, [pc, #932]	; 16ffc <dim_enter_array@@Base+0x1808>
   16c54:	ldr	r0, [pc, r0]
   16c58:	add	r1, r0, #800	; 0x320
   16c5c:	ldr	r0, [r0, #3360]	; 0xd20
   16c60:	movw	r2, #80	; 0x50
   16c64:	mul	r0, r0, r2
   16c68:	add	r0, r1, r0
   16c6c:	str	r0, [sp, #44]	; 0x2c
   16c70:	ldr	r0, [sp, #44]	; 0x2c
   16c74:	ldr	r0, [r0]
   16c78:	str	r0, [sp, #40]	; 0x28
   16c7c:	movw	r0, #0
   16c80:	str	r0, [sp, #36]	; 0x24
   16c84:	ldr	r0, [sp, #36]	; 0x24
   16c88:	ldr	r1, [sp, #44]	; 0x2c
   16c8c:	ldr	r1, [r1, #4]
   16c90:	cmp	r0, r1
   16c94:	bge	16d80 <dim_enter_array@@Base+0x158c>
   16c98:	ldr	r0, [sp, #44]	; 0x2c
   16c9c:	add	r0, r0, #8
   16ca0:	ldr	r1, [sp, #36]	; 0x24
   16ca4:	add	r0, r0, r1, lsl #2
   16ca8:	ldr	r0, [r0]
   16cac:	cmn	r0, #1
   16cb0:	bne	16d6c <dim_enter_array@@Base+0x1578>
   16cb4:	ldr	r0, [pc, #836]	; 17000 <dim_enter_array@@Base+0x180c>
   16cb8:	ldr	r0, [pc, r0]
   16cbc:	add	r0, r0, #4
   16cc0:	ldr	r1, [sp, #40]	; 0x28
   16cc4:	ldr	r2, [sp, #36]	; 0x24
   16cc8:	add	r1, r1, r2
   16ccc:	ldr	r2, [pc, #968]	; 1709c <dim_enter_array@@Base+0x18a8>
   16cd0:	ldr	r2, [pc, r2]
   16cd4:	add	r1, r2, r1, lsl #2
   16cd8:	ldr	r1, [r1, #108]	; 0x6c
   16cdc:	ldr	r3, [sp, #44]	; 0x2c
   16ce0:	ldr	r3, [r3, #44]	; 0x2c
   16ce4:	mov	ip, #0
   16ce8:	str	ip, [r1, r3, lsl #2]
   16cec:	ldr	r1, [sp, #40]	; 0x28
   16cf0:	ldr	r3, [sp, #36]	; 0x24
   16cf4:	add	r1, r1, r3
   16cf8:	add	r1, r2, r1, lsl #2
   16cfc:	add	r1, r1, #4
   16d00:	ldr	r1, [r1]
   16d04:	cmn	r1, #1
   16d08:	bne	16d3c <dim_enter_array@@Base+0x1548>
   16d0c:	ldr	r0, [pc, #752]	; 17004 <dim_enter_array@@Base+0x1810>
   16d10:	ldr	r0, [pc, r0]
   16d14:	add	r0, r0, #4
   16d18:	ldr	r1, [sp, #40]	; 0x28
   16d1c:	ldr	r2, [sp, #36]	; 0x24
   16d20:	add	r1, r1, r2
   16d24:	ldr	r2, [pc, #884]	; 170a0 <dim_enter_array@@Base+0x18ac>
   16d28:	ldr	r2, [pc, r2]
   16d2c:	add	r1, r2, r1, lsl #2
   16d30:	add	r1, r1, #4
   16d34:	movw	r2, #0
   16d38:	str	r2, [r1]
   16d3c:	ldr	r0, [pc, #708]	; 17008 <dim_enter_array@@Base+0x1814>
   16d40:	ldr	r0, [pc, r0]
   16d44:	add	r0, r0, #36	; 0x24
   16d48:	ldr	r1, [sp, #40]	; 0x28
   16d4c:	ldr	r2, [sp, #36]	; 0x24
   16d50:	add	r1, r1, r2
   16d54:	ldr	r2, [pc, #840]	; 170a4 <dim_enter_array@@Base+0x18b0>
   16d58:	ldr	r2, [pc, r2]
   16d5c:	add	r1, r2, r1, lsl #2
   16d60:	add	r1, r1, #36	; 0x24
   16d64:	movw	r2, #0
   16d68:	str	r2, [r1]
   16d6c:	b	16d70 <dim_enter_array@@Base+0x157c>
   16d70:	ldr	r0, [sp, #36]	; 0x24
   16d74:	add	r0, r0, #1
   16d78:	str	r0, [sp, #36]	; 0x24
   16d7c:	b	16c84 <dim_enter_array@@Base+0x1490>
   16d80:	b	16d84 <dim_enter_array@@Base+0x1590>
   16d84:	b	16fb4 <dim_enter_array@@Base+0x17c0>
   16d88:	ldr	r0, [pc, #564]	; 16fc4 <dim_enter_array@@Base+0x17d0>
   16d8c:	ldr	r0, [pc, r0]
   16d90:	ldr	r1, [fp, #-8]
   16d94:	ldr	r0, [r0, #3360]	; 0xd20
   16d98:	cmp	r1, r0
   16d9c:	bne	16da4 <dim_enter_array@@Base+0x15b0>
   16da0:	b	16dc4 <dim_enter_array@@Base+0x15d0>
   16da4:	ldr	r0, [pc, #540]	; 16fc8 <dim_enter_array@@Base+0x17d4>
   16da8:	add	r0, pc, r0
   16dac:	ldr	r1, [pc, #536]	; 16fcc <dim_enter_array@@Base+0x17d8>
   16db0:	add	r1, pc, r1
   16db4:	ldr	r2, [pc, #532]	; 16fd0 <dim_enter_array@@Base+0x17dc>
   16db8:	add	r3, pc, r2
   16dbc:	movw	r2, #252	; 0xfc
   16dc0:	bl	129f4 <__assert_fail@plt>
   16dc4:	ldr	r0, [fp, #-16]
   16dc8:	cmp	r0, #4
   16dcc:	bne	16e0c <dim_enter_array@@Base+0x1618>
   16dd0:	ldr	r0, [pc, #516]	; 16fdc <dim_enter_array@@Base+0x17e8>
   16dd4:	ldr	r0, [pc, r0]
   16dd8:	add	r0, r0, #144	; 0x90
   16ddc:	add	r1, sp, #12
   16de0:	bl	127e4 <coda_cursor_get_string_length@plt>
   16de4:	cmp	r0, #0
   16de8:	beq	16df8 <dim_enter_array@@Base+0x1604>
   16dec:	ldr	r0, [pc, #492]	; 16fe0 <dim_enter_array@@Base+0x17ec>
   16df0:	ldr	r0, [pc, r0]
   16df4:	blx	r0
   16df8:	ldr	r0, [sp, #12]
   16dfc:	asr	r1, r0, #31
   16e00:	str	r0, [sp, #16]
   16e04:	str	r1, [sp, #20]
   16e08:	b	16e38 <dim_enter_array@@Base+0x1644>
   16e0c:	ldr	r0, [pc, #448]	; 16fd4 <dim_enter_array@@Base+0x17e0>
   16e10:	ldr	r0, [pc, r0]
   16e14:	add	r0, r0, #144	; 0x90
   16e18:	add	r1, sp, #16
   16e1c:	bl	1258c <coda_cursor_get_byte_size@plt>
   16e20:	cmp	r0, #0
   16e24:	beq	16e34 <dim_enter_array@@Base+0x1640>
   16e28:	ldr	r0, [pc, #424]	; 16fd8 <dim_enter_array@@Base+0x17e4>
   16e2c:	ldr	r0, [pc, r0]
   16e30:	blx	r0
   16e34:	b	16e38 <dim_enter_array@@Base+0x1644>
   16e38:	ldr	r0, [pc, #420]	; 16fe4 <dim_enter_array@@Base+0x17f0>
   16e3c:	ldr	r0, [pc, r0]
   16e40:	add	r0, r0, #4
   16e44:	ldr	r1, [fp, #-8]
   16e48:	add	r1, r1, r1, lsl #2
   16e4c:	ldr	r2, [pc, #596]	; 170a8 <dim_enter_array@@Base+0x18b4>
   16e50:	ldr	r2, [pc, r2]
   16e54:	add	r1, r2, r1, lsl #4
   16e58:	add	r1, r1, #800	; 0x320
   16e5c:	str	r1, [sp, #32]
   16e60:	ldr	r1, [sp, #32]
   16e64:	ldr	r1, [r1]
   16e68:	str	r1, [sp, #28]
   16e6c:	ldr	r1, [sp, #16]
   16e70:	ldr	r2, [sp, #28]
   16e74:	ldr	r3, [pc, #560]	; 170ac <dim_enter_array@@Base+0x18b8>
   16e78:	ldr	r3, [pc, r3]
   16e7c:	add	r2, r3, r2, lsl #2
   16e80:	ldr	r2, [r2, #108]	; 0x6c
   16e84:	ldr	ip, [sp, #32]
   16e88:	ldr	ip, [ip, #44]	; 0x2c
   16e8c:	str	r1, [r2, ip, lsl #2]
   16e90:	ldr	r1, [sp, #28]
   16e94:	add	r1, r3, r1, lsl #2
   16e98:	add	r1, r1, #4
   16e9c:	ldr	r1, [r1]
   16ea0:	cmn	r1, #1
   16ea4:	bne	16ee4 <dim_enter_array@@Base+0x16f0>
   16ea8:	ldr	r0, [pc, #320]	; 16ff0 <dim_enter_array@@Base+0x17fc>
   16eac:	ldr	r0, [pc, r0]
   16eb0:	add	r0, r0, #36	; 0x24
   16eb4:	ldr	r1, [sp, #16]
   16eb8:	ldr	r2, [sp, #28]
   16ebc:	ldr	r3, [pc, #492]	; 170b0 <dim_enter_array@@Base+0x18bc>
   16ec0:	ldr	r3, [pc, r3]
   16ec4:	add	r2, r3, r2, lsl #2
   16ec8:	str	r1, [r2, #4]
   16ecc:	ldr	r1, [sp, #16]
   16ed0:	ldr	r2, [sp, #28]
   16ed4:	add	r2, r3, r2, lsl #2
   16ed8:	add	r2, r2, #36	; 0x24
   16edc:	str	r1, [r2]
   16ee0:	b	16f90 <dim_enter_array@@Base+0x179c>
   16ee4:	ldr	r0, [sp, #28]
   16ee8:	ldr	r1, [pc, #452]	; 170b4 <dim_enter_array@@Base+0x18c0>
   16eec:	ldr	r1, [pc, r1]
   16ef0:	add	r0, r1, r0, lsl #2
   16ef4:	ldr	r0, [r0, #4]
   16ef8:	ldr	r1, [sp, #16]
   16efc:	ldr	r2, [sp, #20]
   16f00:	subs	r1, r0, r1
   16f04:	rscs	r0, r2, r0, asr #31
   16f08:	bge	16f38 <dim_enter_array@@Base+0x1744>
   16f0c:	b	16f10 <dim_enter_array@@Base+0x171c>
   16f10:	ldr	r0, [pc, #208]	; 16fe8 <dim_enter_array@@Base+0x17f4>
   16f14:	ldr	r0, [pc, r0]
   16f18:	add	r0, r0, #4
   16f1c:	ldr	r1, [sp, #16]
   16f20:	ldr	r2, [sp, #28]
   16f24:	ldr	r3, [pc, #396]	; 170b8 <dim_enter_array@@Base+0x18c4>
   16f28:	ldr	r3, [pc, r3]
   16f2c:	add	r2, r3, r2, lsl #2
   16f30:	add	r2, r2, #4
   16f34:	str	r1, [r2]
   16f38:	ldr	r0, [sp, #28]
   16f3c:	ldr	r1, [pc, #376]	; 170bc <dim_enter_array@@Base+0x18c8>
   16f40:	ldr	r1, [pc, r1]
   16f44:	add	r0, r1, r0, lsl #2
   16f48:	ldr	r0, [r0, #36]	; 0x24
   16f4c:	ldr	r1, [sp, #16]
   16f50:	ldr	r2, [sp, #20]
   16f54:	subs	r1, r1, r0
   16f58:	sbcs	r0, r2, r0, asr #31
   16f5c:	bge	16f8c <dim_enter_array@@Base+0x1798>
   16f60:	b	16f64 <dim_enter_array@@Base+0x1770>
   16f64:	ldr	r0, [pc, #128]	; 16fec <dim_enter_array@@Base+0x17f8>
   16f68:	ldr	r0, [pc, r0]
   16f6c:	add	r0, r0, #36	; 0x24
   16f70:	ldr	r1, [sp, #16]
   16f74:	ldr	r2, [sp, #28]
   16f78:	ldr	r3, [pc, #320]	; 170c0 <dim_enter_array@@Base+0x18cc>
   16f7c:	ldr	r3, [pc, r3]
   16f80:	add	r2, r3, r2, lsl #2
   16f84:	add	r2, r2, #36	; 0x24
   16f88:	str	r1, [r2]
   16f8c:	b	16f90 <dim_enter_array@@Base+0x179c>
   16f90:	b	16fb4 <dim_enter_array@@Base+0x17c0>
   16f94:	ldr	r0, [pc, #200]	; 17064 <dim_enter_array@@Base+0x1870>
   16f98:	add	r0, pc, r0
   16f9c:	ldr	r1, [pc, #196]	; 17068 <dim_enter_array@@Base+0x1874>
   16fa0:	add	r1, pc, r1
   16fa4:	ldr	r2, [pc, #192]	; 1706c <dim_enter_array@@Base+0x1878>
   16fa8:	add	r3, pc, r2
   16fac:	movw	r2, #294	; 0x126
   16fb0:	bl	129f4 <__assert_fail@plt>
   16fb4:	mov	sp, fp
   16fb8:	pop	{fp, pc}
   16fbc:	andeq	sl, r1, r8, lsr #22
   16fc0:	andeq	sl, r1, r8, lsr #22
   16fc4:	andeq	sl, r1, r0, lsr #8
   16fc8:	andeq	r8, r0, r9, asr #2
   16fcc:	ldrdeq	r7, [r0], -r2
   16fd0:	andeq	r8, r0, lr, lsl #2
   16fd4:	muleq	r1, ip, r3
   16fd8:	andeq	sl, r1, ip, lsr #7
   16fdc:	ldrdeq	sl, [r1], -r8
   16fe0:	andeq	sl, r1, r8, ror #7
   16fe4:			; <UNDEFINED> instruction: 0x0001a3b4
   16fe8:	ldrdeq	sl, [r1], -ip
   16fec:	andeq	sl, r1, r8, lsl #5
   16ff0:	andeq	sl, r1, r4, asr #6
   16ff4:	andeq	sl, r1, ip, lsr r6
   16ff8:	andeq	sl, r1, ip, lsl r6
   16ffc:	andeq	sl, r1, r8, asr r5
   17000:	andeq	sl, r1, r8, lsr r5
   17004:	andeq	sl, r1, r0, ror #9
   17008:			; <UNDEFINED> instruction: 0x0001a4b0
   1700c:	ldrdeq	sl, [r1], -r8
   17010:			; <UNDEFINED> instruction: 0x0001a5bc
   17014:	andeq	sl, r1, ip, ror #10
   17018:			; <UNDEFINED> instruction: 0x0001aab8
   1701c:	andeq	sl, r1, r4, lsr r8
   17020:	andeq	sl, r1, r0, lsr #14
   17024:	andeq	sl, r1, r4, lsr r7
   17028:	andeq	sl, r1, r4, asr r6
   1702c:			; <UNDEFINED> instruction: 0x0001a6b8
   17030:	andeq	sl, r1, ip, asr #13
   17034:	muleq	r1, r4, r6
   17038:	andeq	sl, r1, r4, lsl r8
   1703c:			; <UNDEFINED> instruction: 0x0001a7b4
   17040:	andeq	sl, r1, ip, ror sl
   17044:	andeq	sl, r1, r8, lsl #21
   17048:	andeq	r8, r0, r1, lsr r7
   1704c:	andeq	r8, r0, r6, lsl #12
   17050:	andeq	r8, r0, r2, asr #14
   17054:	andeq	sl, r1, r4, lsr #20
   17058:	andeq	sl, r1, r8, asr #18
   1705c:	andeq	sl, r1, r4, ror #17
   17060:	andeq	sl, r1, r8, asr #19
   17064:			; <UNDEFINED> instruction: 0x00007dbb
   17068:	andeq	r7, r0, r2, ror #27
   1706c:	andeq	r7, r0, lr, lsl pc
   17070:	andeq	sl, r1, r4, lsl #20
   17074:	andeq	sl, r1, r8, lsr #19
   17078:	andeq	sl, r1, ip, ror #18
   1707c:	andeq	sl, r1, r8, lsr #18
   17080:	andeq	sl, r1, r8, lsl #18
   17084:	andeq	sl, r1, r4, asr #17
   17088:	andeq	sl, r1, r4, lsl #16
   1708c:	andeq	sl, r1, r4, ror #15
   17090:	andeq	sl, r1, r4, lsr #15
   17094:	andeq	sl, r1, r4, lsr #12
   17098:	andeq	sl, r1, r0, asr #11
   1709c:	andeq	sl, r1, r0, lsr #10
   170a0:	andeq	sl, r1, r8, asr #9
   170a4:	muleq	r1, r8, r4
   170a8:	andeq	sl, r1, ip, asr r3
   170ac:	andeq	sl, r1, r8, ror r3
   170b0:	andeq	sl, r1, r0, lsr r3
   170b4:	andeq	sl, r1, r4, lsl #6
   170b8:	andeq	sl, r1, r8, asr #5
   170bc:			; <UNDEFINED> instruction: 0x0001a2b0
   170c0:	andeq	sl, r1, r4, ror r2

000170c4 <dim_leave_array@@Base>:
   170c4:	push	{fp, lr}
   170c8:	mov	fp, sp
   170cc:	sub	sp, sp, #24
   170d0:	ldr	r0, [pc, #600]	; 17330 <dim_leave_array@@Base+0x26c>
   170d4:	ldr	r0, [pc, r0]
   170d8:	ldr	r0, [r0, #3360]	; 0xd20
   170dc:	cmp	r0, #0
   170e0:	blt	170e8 <dim_leave_array@@Base+0x24>
   170e4:	b	17108 <dim_leave_array@@Base+0x44>
   170e8:	ldr	r0, [pc, #580]	; 17334 <dim_leave_array@@Base+0x270>
   170ec:	add	r0, pc, r0
   170f0:	ldr	r1, [pc, #576]	; 17338 <dim_leave_array@@Base+0x274>
   170f4:	add	r1, pc, r1
   170f8:	ldr	r2, [pc, #572]	; 1733c <dim_leave_array@@Base+0x278>
   170fc:	add	r3, pc, r2
   17100:	movw	r2, #579	; 0x243
   17104:	bl	129f4 <__assert_fail@plt>
   17108:	ldr	r0, [pc, #560]	; 17340 <dim_leave_array@@Base+0x27c>
   1710c:	ldr	r0, [pc, r0]
   17110:	ldr	r1, [pc, #556]	; 17344 <dim_leave_array@@Base+0x280>
   17114:	ldr	r1, [pc, r1]
   17118:	add	r2, r1, #800	; 0x320
   1711c:	ldr	r1, [r1, #3360]	; 0xd20
   17120:	movw	r3, #80	; 0x50
   17124:	mul	r1, r1, r3
   17128:	add	r1, r2, r1
   1712c:	str	r1, [fp, #-4]
   17130:	ldr	r1, [fp, #-4]
   17134:	ldr	r1, [r1]
   17138:	str	r1, [fp, #-8]
   1713c:	ldr	r1, [fp, #-4]
   17140:	ldr	r1, [r1, #4]
   17144:	ldr	r2, [r0]
   17148:	sub	r1, r2, r1
   1714c:	str	r1, [r0]
   17150:	movw	r0, #0
   17154:	str	r0, [sp, #12]
   17158:	ldr	r0, [sp, #12]
   1715c:	ldr	r1, [fp, #-4]
   17160:	ldr	r1, [r1, #4]
   17164:	cmp	r0, r1
   17168:	bge	171ec <dim_leave_array@@Base+0x128>
   1716c:	ldr	r0, [pc, #484]	; 17358 <dim_leave_array@@Base+0x294>
   17170:	ldr	r0, [pc, r0]
   17174:	add	r0, r0, #72	; 0x48
   17178:	ldr	r1, [fp, #-8]
   1717c:	ldr	r2, [sp, #12]
   17180:	add	r1, r1, r2
   17184:	ldr	r2, [pc, #468]	; 17360 <dim_leave_array@@Base+0x29c>
   17188:	ldr	r2, [pc, r2]
   1718c:	add	r1, r2, r1, lsl #2
   17190:	add	r1, r1, #72	; 0x48
   17194:	ldr	r1, [r1]
   17198:	cmp	r1, #0
   1719c:	beq	171d8 <dim_leave_array@@Base+0x114>
   171a0:	ldr	r0, [pc, #436]	; 1735c <dim_leave_array@@Base+0x298>
   171a4:	ldr	r0, [pc, r0]
   171a8:	add	r0, r0, #108	; 0x6c
   171ac:	ldr	r1, [fp, #-8]
   171b0:	ldr	r2, [sp, #12]
   171b4:	add	r1, r1, r2
   171b8:	ldr	r2, [pc, #420]	; 17364 <dim_leave_array@@Base+0x2a0>
   171bc:	ldr	r2, [pc, r2]
   171c0:	add	r1, r2, r1, lsl #2
   171c4:	add	r1, r1, #108	; 0x6c
   171c8:	ldr	r1, [r1]
   171cc:	str	r0, [sp, #8]
   171d0:	mov	r0, r1
   171d4:	bl	12658 <free@plt>
   171d8:	b	171dc <dim_leave_array@@Base+0x118>
   171dc:	ldr	r0, [sp, #12]
   171e0:	add	r0, r0, #1
   171e4:	str	r0, [sp, #12]
   171e8:	b	17158 <dim_leave_array@@Base+0x94>
   171ec:	ldr	r0, [pc, #340]	; 17348 <dim_leave_array@@Base+0x284>
   171f0:	ldr	r0, [pc, r0]
   171f4:	movw	r1, #0
   171f8:	str	r1, [r0, #68]	; 0x44
   171fc:	mvn	r2, #0
   17200:	str	r2, [r0, #104]	; 0x68
   17204:	str	r1, [sp, #12]
   17208:	ldr	r0, [pc, #316]	; 1734c <dim_leave_array@@Base+0x288>
   1720c:	ldr	r0, [pc, r0]
   17210:	ldr	r1, [sp, #12]
   17214:	ldr	r0, [r0]
   17218:	cmp	r1, r0
   1721c:	bge	17278 <dim_leave_array@@Base+0x1b4>
   17220:	ldr	r0, [pc, #296]	; 17350 <dim_leave_array@@Base+0x28c>
   17224:	ldr	r0, [pc, r0]
   17228:	add	r0, r0, #72	; 0x48
   1722c:	ldr	r1, [sp, #12]
   17230:	ldr	r2, [pc, #304]	; 17368 <dim_leave_array@@Base+0x2a4>
   17234:	ldr	r2, [pc, r2]
   17238:	add	r1, r2, r1, lsl #2
   1723c:	add	r1, r1, #72	; 0x48
   17240:	ldr	r1, [r1]
   17244:	cmp	r1, #0
   17248:	beq	17264 <dim_leave_array@@Base+0x1a0>
   1724c:	ldr	r0, [pc, #256]	; 17354 <dim_leave_array@@Base+0x290>
   17250:	ldr	r0, [pc, r0]
   17254:	movw	r1, #1
   17258:	str	r1, [r0, #68]	; 0x44
   1725c:	ldr	r1, [sp, #12]
   17260:	str	r1, [r0, #104]	; 0x68
   17264:	b	17268 <dim_leave_array@@Base+0x1a4>
   17268:	ldr	r0, [sp, #12]
   1726c:	add	r0, r0, #1
   17270:	str	r0, [sp, #12]
   17274:	b	17208 <dim_leave_array@@Base+0x144>
   17278:	ldr	r0, [fp, #-8]
   1727c:	ldr	r1, [fp, #-4]
   17280:	ldr	r1, [r1, #4]
   17284:	add	r0, r0, r1
   17288:	ldr	r1, [pc, #220]	; 1736c <dim_leave_array@@Base+0x2a8>
   1728c:	ldr	r1, [pc, r1]
   17290:	add	r0, r1, r0, lsl #3
   17294:	ldr	r1, [r0, #296]	; 0x128
   17298:	ldr	r0, [r0, #300]	; 0x12c
   1729c:	subs	r1, r1, #1
   172a0:	sbcs	r0, r0, #0
   172a4:	blt	17328 <dim_leave_array@@Base+0x264>
   172a8:	b	172ac <dim_leave_array@@Base+0x1e8>
   172ac:	ldr	r0, [fp, #-8]
   172b0:	sub	r0, r0, #1
   172b4:	str	r0, [sp, #12]
   172b8:	ldr	r0, [sp, #12]
   172bc:	cmp	r0, #0
   172c0:	blt	17324 <dim_leave_array@@Base+0x260>
   172c4:	ldr	r0, [fp, #-8]
   172c8:	ldr	r1, [pc, #160]	; 17370 <dim_leave_array@@Base+0x2ac>
   172cc:	ldr	r1, [pc, r1]
   172d0:	add	r1, r1, #176	; 0xb0
   172d4:	mov	r2, r1
   172d8:	ldr	r0, [r2, r0, lsl #3]!
   172dc:	ldr	r3, [r2, #4]
   172e0:	ldr	r2, [sp, #12]
   172e4:	ldr	r2, [r1, r2, lsl #3]!
   172e8:	ldr	ip, [r1, #4]
   172ec:	str	r0, [sp, #4]
   172f0:	mov	r0, r2
   172f4:	str	r1, [sp]
   172f8:	mov	r1, ip
   172fc:	ldr	r2, [sp, #4]
   17300:	bl	1e894 <main@@Base+0x2f78>
   17304:	ldr	r2, [sp]
   17308:	str	r1, [r2, #4]
   1730c:	str	r0, [r2]
   17310:	ldr	r0, [sp, #12]
   17314:	mvn	r1, #0
   17318:	add	r0, r0, r1
   1731c:	str	r0, [sp, #12]
   17320:	b	172b8 <dim_leave_array@@Base+0x1f4>
   17324:	b	17328 <dim_leave_array@@Base+0x264>
   17328:	mov	sp, fp
   1732c:	pop	{fp, pc}
   17330:	ldrdeq	sl, [r1], -r8
   17334:	andeq	r7, r0, r4, lsl #27
   17338:	andeq	r7, r0, lr, lsl #25
   1733c:	muleq	r0, r2, sp
   17340:	andeq	sl, r1, r4, ror #1
   17344:	muleq	r1, r8, r0
   17348:	andeq	sl, r1, r0
   1734c:	andeq	r9, r1, r4, ror #31
   17350:	andeq	r9, r1, ip, asr #31
   17354:	andeq	r9, r1, r0, lsr #31
   17358:	andeq	sl, r1, r0, lsl #1
   1735c:	andeq	sl, r1, ip, asr #32
   17360:	andeq	sl, r1, r8, rrx
   17364:	andeq	sl, r1, r4, lsr r0
   17368:			; <UNDEFINED> instruction: 0x00019fbc
   1736c:	andeq	r9, r1, r4, ror #30
   17370:	andeq	r9, r1, r4, lsr #30

00017374 <dim_record_field_available@@Base>:
   17374:	push	{fp, lr}
   17378:	mov	fp, sp
   1737c:	sub	sp, sp, #8
   17380:	movw	r0, #0
   17384:	str	r0, [sp, #4]
   17388:	ldr	r1, [sp, #4]
   1738c:	ldr	r2, [sp, #4]
   17390:	bl	1739c <dim_record_field_available@@Base+0x28>
   17394:	mov	sp, fp
   17398:	pop	{fp, pc}
   1739c:	push	{fp, lr}
   173a0:	mov	fp, sp
   173a4:	sub	sp, sp, #56	; 0x38
   173a8:	ldr	r3, [pc, #1124]	; 17814 <dim_record_field_available@@Base+0x4a0>
   173ac:	ldr	r3, [pc, r3]
   173b0:	add	r3, r3, #144	; 0x90
   173b4:	str	r0, [fp, #-8]
   173b8:	str	r1, [fp, #-12]
   173bc:	str	r2, [fp, #-16]
   173c0:	mov	r0, r3
   173c4:	sub	r1, fp, #20
   173c8:	bl	126e8 <coda_cursor_get_type_class@plt>
   173cc:	cmp	r0, #0
   173d0:	beq	173e0 <dim_record_field_available@@Base+0x6c>
   173d4:	ldr	r0, [pc, #1084]	; 17818 <dim_record_field_available@@Base+0x4a4>
   173d8:	ldr	r0, [pc, r0]
   173dc:	blx	r0
   173e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   173e4:	cmp	r0, #0
   173e8:	str	r0, [sp, #8]
   173ec:	beq	176ac <dim_record_field_available@@Base+0x338>
   173f0:	b	173f4 <dim_record_field_available@@Base+0x80>
   173f4:	ldr	r0, [sp, #8]
   173f8:	cmp	r0, #1
   173fc:	bne	177e0 <dim_record_field_available@@Base+0x46c>
   17400:	b	17404 <dim_record_field_available@@Base+0x90>
   17404:	ldr	r0, [pc, #1064]	; 17834 <dim_record_field_available@@Base+0x4c0>
   17408:	ldr	r0, [pc, r0]
   1740c:	add	r1, r0, #800	; 0x320
   17410:	ldr	r2, [fp, #-12]
   17414:	movw	r3, #80	; 0x50
   17418:	mul	r2, r2, r3
   1741c:	add	r1, r1, r2
   17420:	str	r1, [fp, #-24]	; 0xffffffe8
   17424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17428:	ldr	r1, [r1]
   1742c:	str	r1, [sp, #24]
   17430:	ldr	r1, [fp, #-12]
   17434:	ldr	r0, [r0, #3360]	; 0xd20
   17438:	cmp	r1, r0
   1743c:	bge	17444 <dim_record_field_available@@Base+0xd0>
   17440:	b	17464 <dim_record_field_available@@Base+0xf0>
   17444:	ldr	r0, [pc, #1004]	; 17838 <dim_record_field_available@@Base+0x4c4>
   17448:	add	r0, pc, r0
   1744c:	ldr	r1, [pc, #1000]	; 1783c <dim_record_field_available@@Base+0x4c8>
   17450:	add	r1, pc, r1
   17454:	ldr	r2, [pc, #996]	; 17840 <dim_record_field_available@@Base+0x4cc>
   17458:	add	r3, pc, r2
   1745c:	movw	r2, #638	; 0x27e
   17460:	bl	129f4 <__assert_fail@plt>
   17464:	ldr	r0, [fp, #-12]
   17468:	cmp	r0, #0
   1746c:	bne	1747c <dim_record_field_available@@Base+0x108>
   17470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17474:	movw	r1, #0
   17478:	str	r1, [r0, #44]	; 0x2c
   1747c:	ldr	r0, [pc, #960]	; 17844 <dim_record_field_available@@Base+0x4d0>
   17480:	ldr	r0, [pc, r0]
   17484:	ldr	r1, [fp, #-12]
   17488:	ldr	r0, [r0, #3360]	; 0xd20
   1748c:	cmp	r1, r0
   17490:	bge	174cc <dim_record_field_available@@Base+0x158>
   17494:	ldr	r0, [pc, #940]	; 17848 <dim_record_field_available@@Base+0x4d4>
   17498:	ldr	r0, [pc, r0]
   1749c:	add	r0, r0, #800	; 0x320
   174a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174a4:	ldr	r1, [r1, #44]	; 0x2c
   174a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174ac:	ldr	r2, [r2, #40]	; 0x28
   174b0:	mul	r1, r1, r2
   174b4:	ldr	r2, [fp, #-12]
   174b8:	add	r2, r2, #1
   174bc:	movw	r3, #80	; 0x50
   174c0:	mul	r2, r2, r3
   174c4:	add	r0, r0, r2
   174c8:	str	r1, [r0, #44]	; 0x2c
   174cc:	movw	r0, #1
   174d0:	str	r0, [sp, #28]
   174d4:	ldr	r0, [sp, #24]
   174d8:	str	r0, [sp, #20]
   174dc:	ldr	r0, [sp, #20]
   174e0:	ldr	r1, [sp, #24]
   174e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   174e8:	ldr	r2, [r2, #4]
   174ec:	add	r1, r1, r2
   174f0:	cmp	r0, r1
   174f4:	bge	1759c <dim_record_field_available@@Base+0x228>
   174f8:	ldr	r0, [pc, #872]	; 17868 <dim_record_field_available@@Base+0x4f4>
   174fc:	ldr	r0, [pc, r0]
   17500:	add	r0, r0, #72	; 0x48
   17504:	ldr	r1, [sp, #20]
   17508:	ldr	r2, [pc, #876]	; 1787c <dim_record_field_available@@Base+0x508>
   1750c:	ldr	r2, [pc, r2]
   17510:	add	r1, r2, r1, lsl #2
   17514:	add	r1, r1, #72	; 0x48
   17518:	ldr	r1, [r1]
   1751c:	cmp	r1, #0
   17520:	beq	17558 <dim_record_field_available@@Base+0x1e4>
   17524:	ldr	r0, [sp, #20]
   17528:	ldr	r1, [pc, #848]	; 17880 <dim_record_field_available@@Base+0x50c>
   1752c:	ldr	r1, [pc, r1]
   17530:	add	r0, r1, r0, lsl #2
   17534:	ldr	r0, [r0, #108]	; 0x6c
   17538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1753c:	ldr	r1, [r1, #44]	; 0x2c
   17540:	add	r0, r0, r1, lsl #2
   17544:	ldr	r0, [r0]
   17548:	ldr	r1, [sp, #28]
   1754c:	mul	r0, r1, r0
   17550:	str	r0, [sp, #28]
   17554:	b	17588 <dim_record_field_available@@Base+0x214>
   17558:	ldr	r0, [pc, #780]	; 1786c <dim_record_field_available@@Base+0x4f8>
   1755c:	ldr	r0, [pc, r0]
   17560:	add	r0, r0, #4
   17564:	ldr	r1, [sp, #20]
   17568:	ldr	r2, [pc, #788]	; 17884 <dim_record_field_available@@Base+0x510>
   1756c:	ldr	r2, [pc, r2]
   17570:	add	r1, r2, r1, lsl #2
   17574:	add	r1, r1, #4
   17578:	ldr	r1, [r1]
   1757c:	ldr	r2, [sp, #28]
   17580:	mul	r1, r2, r1
   17584:	str	r1, [sp, #28]
   17588:	b	1758c <dim_record_field_available@@Base+0x218>
   1758c:	ldr	r0, [sp, #20]
   17590:	add	r0, r0, #1
   17594:	str	r0, [sp, #20]
   17598:	b	174dc <dim_record_field_available@@Base+0x168>
   1759c:	ldr	r0, [sp, #28]
   175a0:	cmp	r0, #0
   175a4:	ble	176a8 <dim_record_field_available@@Base+0x334>
   175a8:	ldr	r0, [pc, #668]	; 1784c <dim_record_field_available@@Base+0x4d8>
   175ac:	ldr	r0, [pc, r0]
   175b0:	add	r0, r0, #144	; 0x90
   175b4:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   175b8:	cmp	r0, #0
   175bc:	beq	175cc <dim_record_field_available@@Base+0x258>
   175c0:	ldr	r0, [pc, #648]	; 17850 <dim_record_field_available@@Base+0x4dc>
   175c4:	ldr	r0, [pc, r0]
   175c8:	blx	r0
   175cc:	movw	r0, #0
   175d0:	str	r0, [sp, #16]
   175d4:	ldr	r0, [sp, #16]
   175d8:	ldr	r1, [sp, #28]
   175dc:	cmp	r0, r1
   175e0:	bge	17698 <dim_record_field_available@@Base+0x324>
   175e4:	ldr	r0, [fp, #-8]
   175e8:	add	r0, r0, #1
   175ec:	ldr	r1, [fp, #-12]
   175f0:	add	r1, r1, #1
   175f4:	ldr	r2, [fp, #-16]
   175f8:	bl	1739c <dim_record_field_available@@Base+0x28>
   175fc:	cmp	r0, #0
   17600:	beq	17620 <dim_record_field_available@@Base+0x2ac>
   17604:	ldr	r0, [pc, #600]	; 17864 <dim_record_field_available@@Base+0x4f0>
   17608:	ldr	r0, [pc, r0]
   1760c:	add	r0, r0, #144	; 0x90
   17610:	bl	127b4 <coda_cursor_goto_parent@plt>
   17614:	movw	r1, #1
   17618:	str	r1, [fp, #-4]
   1761c:	b	17808 <dim_record_field_available@@Base+0x494>
   17620:	ldr	r0, [sp, #16]
   17624:	ldr	r1, [sp, #28]
   17628:	sub	r1, r1, #1
   1762c:	cmp	r0, r1
   17630:	bge	17684 <dim_record_field_available@@Base+0x310>
   17634:	ldr	r0, [pc, #540]	; 17858 <dim_record_field_available@@Base+0x4e4>
   17638:	ldr	r0, [pc, r0]
   1763c:	add	r0, r0, #144	; 0x90
   17640:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   17644:	cmp	r0, #0
   17648:	beq	17658 <dim_record_field_available@@Base+0x2e4>
   1764c:	ldr	r0, [pc, #520]	; 1785c <dim_record_field_available@@Base+0x4e8>
   17650:	ldr	r0, [pc, r0]
   17654:	blx	r0
   17658:	ldr	r0, [pc, #512]	; 17860 <dim_record_field_available@@Base+0x4ec>
   1765c:	ldr	r0, [pc, r0]
   17660:	add	r0, r0, #800	; 0x320
   17664:	ldr	r1, [fp, #-12]
   17668:	add	r1, r1, #1
   1766c:	movw	r2, #80	; 0x50
   17670:	mul	r1, r1, r2
   17674:	add	r0, r0, r1
   17678:	ldr	r1, [r0, #44]	; 0x2c
   1767c:	add	r1, r1, #1
   17680:	str	r1, [r0, #44]	; 0x2c
   17684:	b	17688 <dim_record_field_available@@Base+0x314>
   17688:	ldr	r0, [sp, #16]
   1768c:	add	r0, r0, #1
   17690:	str	r0, [sp, #16]
   17694:	b	175d4 <dim_record_field_available@@Base+0x260>
   17698:	ldr	r0, [pc, #436]	; 17854 <dim_record_field_available@@Base+0x4e0>
   1769c:	ldr	r0, [pc, r0]
   176a0:	add	r0, r0, #144	; 0x90
   176a4:	bl	127b4 <coda_cursor_goto_parent@plt>
   176a8:	b	17800 <dim_record_field_available@@Base+0x48c>
   176ac:	ldr	r0, [pc, #360]	; 1781c <dim_record_field_available@@Base+0x4a8>
   176b0:	ldr	r0, [pc, r0]
   176b4:	add	r1, r0, #144	; 0x90
   176b8:	movw	r2, #3492	; 0xda4
   176bc:	add	r0, r0, r2
   176c0:	ldr	r2, [fp, #-16]
   176c4:	ldr	r3, [pc, #444]	; 17888 <dim_record_field_available@@Base+0x514>
   176c8:	ldr	r3, [pc, r3]
   176cc:	add	r2, r3, r2, lsl #2
   176d0:	movw	r3, #3492	; 0xda4
   176d4:	add	r2, r2, r3
   176d8:	ldr	r2, [r2]
   176dc:	str	r0, [sp, #4]
   176e0:	mov	r0, r1
   176e4:	mov	r1, r2
   176e8:	add	r2, sp, #12
   176ec:	bl	125f8 <coda_cursor_get_record_field_available_status@plt>
   176f0:	cmp	r0, #0
   176f4:	beq	17704 <dim_record_field_available@@Base+0x390>
   176f8:	ldr	r0, [pc, #288]	; 17820 <dim_record_field_available@@Base+0x4ac>
   176fc:	ldr	r0, [pc, r0]
   17700:	blx	r0
   17704:	ldr	r0, [sp, #12]
   17708:	cmp	r0, #0
   1770c:	beq	177dc <dim_record_field_available@@Base+0x468>
   17710:	ldr	r0, [pc, #268]	; 17824 <dim_record_field_available@@Base+0x4b0>
   17714:	ldr	r0, [pc, r0]
   17718:	ldr	r1, [fp, #-16]
   1771c:	ldr	r0, [r0, #3748]	; 0xea4
   17720:	sub	r0, r0, #1
   17724:	cmp	r1, r0
   17728:	bne	17738 <dim_record_field_available@@Base+0x3c4>
   1772c:	movw	r0, #1
   17730:	str	r0, [fp, #-4]
   17734:	b	17808 <dim_record_field_available@@Base+0x494>
   17738:	ldr	r0, [pc, #232]	; 17828 <dim_record_field_available@@Base+0x4b4>
   1773c:	ldr	r0, [pc, r0]
   17740:	add	r1, r0, #144	; 0x90
   17744:	movw	r2, #3492	; 0xda4
   17748:	add	r0, r0, r2
   1774c:	ldr	r2, [fp, #-16]
   17750:	ldr	r3, [pc, #308]	; 1788c <dim_record_field_available@@Base+0x518>
   17754:	ldr	r3, [pc, r3]
   17758:	add	r2, r3, r2, lsl #2
   1775c:	movw	r3, #3492	; 0xda4
   17760:	add	r2, r2, r3
   17764:	ldr	r2, [r2]
   17768:	str	r0, [sp]
   1776c:	mov	r0, r1
   17770:	mov	r1, r2
   17774:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   17778:	cmp	r0, #0
   1777c:	beq	1778c <dim_record_field_available@@Base+0x418>
   17780:	ldr	r0, [pc, #164]	; 1782c <dim_record_field_available@@Base+0x4b8>
   17784:	ldr	r0, [pc, r0]
   17788:	blx	r0
   1778c:	ldr	r0, [fp, #-8]
   17790:	add	r0, r0, #1
   17794:	ldr	r1, [fp, #-12]
   17798:	ldr	r2, [fp, #-16]
   1779c:	add	r2, r2, #1
   177a0:	bl	1739c <dim_record_field_available@@Base+0x28>
   177a4:	ldr	r1, [pc, #132]	; 17830 <dim_record_field_available@@Base+0x4bc>
   177a8:	ldr	r1, [pc, r1]
   177ac:	add	r1, r1, #144	; 0x90
   177b0:	str	r0, [sp, #12]
   177b4:	mov	r0, r1
   177b8:	bl	127b4 <coda_cursor_goto_parent@plt>
   177bc:	ldr	r1, [sp, #12]
   177c0:	cmp	r1, #0
   177c4:	beq	177d4 <dim_record_field_available@@Base+0x460>
   177c8:	movw	r0, #1
   177cc:	str	r0, [fp, #-4]
   177d0:	b	17808 <dim_record_field_available@@Base+0x494>
   177d4:	b	177d8 <dim_record_field_available@@Base+0x464>
   177d8:	b	177dc <dim_record_field_available@@Base+0x468>
   177dc:	b	17800 <dim_record_field_available@@Base+0x48c>
   177e0:	ldr	r0, [pc, #136]	; 17870 <dim_record_field_available@@Base+0x4fc>
   177e4:	add	r0, pc, r0
   177e8:	ldr	r1, [pc, #132]	; 17874 <dim_record_field_available@@Base+0x500>
   177ec:	add	r1, pc, r1
   177f0:	ldr	r2, [pc, #128]	; 17878 <dim_record_field_available@@Base+0x504>
   177f4:	add	r3, pc, r2
   177f8:	movw	r2, #729	; 0x2d9
   177fc:	bl	129f4 <__assert_fail@plt>
   17800:	movw	r0, #0
   17804:	str	r0, [fp, #-4]
   17808:	ldr	r0, [fp, #-4]
   1780c:	mov	sp, fp
   17810:	pop	{fp, pc}
   17814:	andeq	r9, r1, r0, lsl #28
   17818:	andeq	r9, r1, r0, lsl #28
   1781c:	strdeq	r9, [r1], -ip
   17820:	ldrdeq	r9, [r1], -ip
   17824:	muleq	r1, r8, sl
   17828:	andeq	r9, r1, r0, ror sl
   1782c:	andeq	r9, r1, r4, asr sl
   17830:	andeq	r9, r1, r4, lsl #20
   17834:	andeq	r9, r1, r4, lsr #27
   17838:	ldrdeq	r7, [r0], -r1
   1783c:	andeq	r7, r0, r2, lsr r9
   17840:	andeq	r7, r0, r8, ror #21
   17844:	andeq	r9, r1, ip, lsr #26
   17848:	andeq	r9, r1, r4, lsl sp
   1784c:	andeq	r9, r1, r0, lsl #24
   17850:	andeq	r9, r1, r4, lsl ip
   17854:	andeq	r9, r1, r0, lsl fp
   17858:	andeq	r9, r1, r4, ror fp
   1785c:	andeq	r9, r1, r8, lsl #23
   17860:	andeq	r9, r1, r0, asr fp
   17864:	andeq	r9, r1, r4, lsr #23
   17868:	strdeq	r9, [r1], -r4
   1786c:	muleq	r1, r4, ip
   17870:	andeq	r7, r0, pc, ror #10
   17874:	muleq	r0, r6, r5
   17878:	andeq	r7, r0, ip, asr #14
   1787c:	andeq	r9, r1, r4, ror #25
   17880:	andeq	r9, r1, r4, asr #25
   17884:	andeq	r9, r1, r4, lsl #25
   17888:	andeq	r9, r1, r4, ror #21
   1788c:	andeq	r9, r1, r8, asr sl

00017890 <codadump_filter_create@@Base>:
   17890:	push	{fp, lr}
   17894:	mov	fp, sp
   17898:	sub	sp, sp, #8
   1789c:	str	r0, [sp, #4]
   178a0:	movw	r0, #0
   178a4:	str	r0, [sp]
   178a8:	ldr	r0, [sp, #4]
   178ac:	mov	r1, sp
   178b0:	bl	178c0 <codadump_filter_create@@Base+0x30>
   178b4:	ldr	r0, [sp]
   178b8:	mov	sp, fp
   178bc:	pop	{fp, pc}
   178c0:	push	{fp, lr}
   178c4:	mov	fp, sp
   178c8:	sub	sp, sp, #16
   178cc:	str	r0, [fp, #-4]
   178d0:	str	r1, [sp, #8]
   178d4:	movw	r0, #0
   178d8:	str	r0, [sp, #4]
   178dc:	ldr	r1, [fp, #-4]
   178e0:	str	r1, [sp]
   178e4:	ldr	r1, [fp, #-4]
   178e8:	cmp	r1, r0
   178ec:	bne	178f4 <codadump_filter_create@@Base+0x64>
   178f0:	b	1794c <codadump_filter_create@@Base+0xbc>
   178f4:	b	178f8 <codadump_filter_create@@Base+0x68>
   178f8:	ldr	r0, [sp]
   178fc:	ldrb	r0, [r0]
   17900:	cmp	r0, #0
   17904:	beq	1794c <codadump_filter_create@@Base+0xbc>
   17908:	ldr	r0, [sp]
   1790c:	add	r1, sp, #4
   17910:	mov	r2, sp
   17914:	bl	17b80 <codadump_filter_get_next_filter@@Base+0x60>
   17918:	ldr	r0, [sp, #4]
   1791c:	movw	r1, #0
   17920:	cmp	r0, r1
   17924:	bne	17934 <codadump_filter_create@@Base+0xa4>
   17928:	ldr	r0, [sp, #8]
   1792c:	bl	17954 <codadump_filter_remove@@Base>
   17930:	b	1794c <codadump_filter_create@@Base+0xbc>
   17934:	ldr	r0, [sp, #8]
   17938:	ldr	r1, [sp, #4]
   1793c:	bl	18018 <codadump_filter_get_next_filter@@Base+0x4f8>
   17940:	movw	r0, #0
   17944:	str	r0, [sp, #4]
   17948:	b	178f8 <codadump_filter_create@@Base+0x68>
   1794c:	mov	sp, fp
   17950:	pop	{fp, pc}

00017954 <codadump_filter_remove@@Base>:
   17954:	push	{fp, lr}
   17958:	mov	fp, sp
   1795c:	sub	sp, sp, #8
   17960:	str	r0, [sp, #4]
   17964:	ldr	r0, [sp, #4]
   17968:	movw	r1, #0
   1796c:	cmp	r0, r1
   17970:	beq	17978 <codadump_filter_remove@@Base+0x24>
   17974:	b	17998 <codadump_filter_remove@@Base+0x44>
   17978:	ldr	r0, [pc, #212]	; 17a54 <codadump_filter_remove@@Base+0x100>
   1797c:	add	r0, pc, r0
   17980:	ldr	r1, [pc, #208]	; 17a58 <codadump_filter_remove@@Base+0x104>
   17984:	add	r1, pc, r1
   17988:	ldr	r2, [pc, #204]	; 17a5c <codadump_filter_remove@@Base+0x108>
   1798c:	add	r3, pc, r2
   17990:	movw	r2, #192	; 0xc0
   17994:	bl	129f4 <__assert_fail@plt>
   17998:	ldr	r0, [sp, #4]
   1799c:	ldr	r0, [r0]
   179a0:	movw	r1, #0
   179a4:	cmp	r0, r1
   179a8:	beq	17a4c <codadump_filter_remove@@Base+0xf8>
   179ac:	ldr	r0, [sp, #4]
   179b0:	ldr	r0, [r0]
   179b4:	ldr	r0, [r0, #8]
   179b8:	movw	r1, #0
   179bc:	cmp	r0, r1
   179c0:	beq	179d4 <codadump_filter_remove@@Base+0x80>
   179c4:	ldr	r0, [sp, #4]
   179c8:	ldr	r0, [r0]
   179cc:	add	r0, r0, #8
   179d0:	bl	17954 <codadump_filter_remove@@Base>
   179d4:	ldr	r0, [sp, #4]
   179d8:	ldr	r0, [r0]
   179dc:	ldr	r0, [r0, #4]
   179e0:	movw	r1, #0
   179e4:	cmp	r0, r1
   179e8:	beq	179fc <codadump_filter_remove@@Base+0xa8>
   179ec:	ldr	r0, [sp, #4]
   179f0:	ldr	r0, [r0]
   179f4:	add	r0, r0, #4
   179f8:	bl	17954 <codadump_filter_remove@@Base>
   179fc:	ldr	r0, [sp, #4]
   17a00:	ldr	r0, [r0]
   17a04:	ldr	r0, [r0]
   17a08:	movw	r1, #0
   17a0c:	cmp	r0, r1
   17a10:	beq	17a34 <codadump_filter_remove@@Base+0xe0>
   17a14:	ldr	r0, [sp, #4]
   17a18:	ldr	r0, [r0]
   17a1c:	ldr	r0, [r0]
   17a20:	bl	12658 <free@plt>
   17a24:	ldr	r0, [sp, #4]
   17a28:	ldr	r0, [r0]
   17a2c:	movw	r1, #0
   17a30:	str	r1, [r0]
   17a34:	ldr	r0, [sp, #4]
   17a38:	ldr	r0, [r0]
   17a3c:	bl	12658 <free@plt>
   17a40:	ldr	r0, [sp, #4]
   17a44:	movw	r1, #0
   17a48:	str	r1, [r0]
   17a4c:	mov	sp, fp
   17a50:	pop	{fp, pc}
   17a54:	strdeq	r7, [r0], -r9
   17a58:	andeq	r7, r0, r0, lsl #12
   17a5c:	andeq	r7, r0, fp, asr r6

00017a60 <codadump_filter_get_fieldname@@Base>:
   17a60:	push	{fp, lr}
   17a64:	mov	fp, sp
   17a68:	sub	sp, sp, #8
   17a6c:	str	r0, [sp, #4]
   17a70:	ldr	r0, [sp, #4]
   17a74:	movw	r1, #0
   17a78:	cmp	r0, r1
   17a7c:	beq	17a84 <codadump_filter_get_fieldname@@Base+0x24>
   17a80:	b	17aa4 <codadump_filter_get_fieldname@@Base+0x44>
   17a84:	ldr	r0, [pc, #40]	; 17ab4 <codadump_filter_get_fieldname@@Base+0x54>
   17a88:	add	r0, pc, r0
   17a8c:	ldr	r1, [pc, #36]	; 17ab8 <codadump_filter_get_fieldname@@Base+0x58>
   17a90:	add	r1, pc, r1
   17a94:	ldr	r2, [pc, #32]	; 17abc <codadump_filter_get_fieldname@@Base+0x5c>
   17a98:	add	r3, pc, r2
   17a9c:	movw	r2, #216	; 0xd8
   17aa0:	bl	129f4 <__assert_fail@plt>
   17aa4:	ldr	r0, [sp, #4]
   17aa8:	ldr	r0, [r0]
   17aac:	mov	sp, fp
   17ab0:	pop	{fp, pc}
   17ab4:	andeq	r7, r0, sp, ror #9
   17ab8:	strdeq	r7, [r0], -r4
   17abc:	andeq	r7, r0, pc, ror r5

00017ac0 <codadump_filter_get_subfilter@@Base>:
   17ac0:	push	{fp, lr}
   17ac4:	mov	fp, sp
   17ac8:	sub	sp, sp, #8
   17acc:	str	r0, [sp, #4]
   17ad0:	ldr	r0, [sp, #4]
   17ad4:	movw	r1, #0
   17ad8:	cmp	r0, r1
   17adc:	beq	17ae4 <codadump_filter_get_subfilter@@Base+0x24>
   17ae0:	b	17b04 <codadump_filter_get_subfilter@@Base+0x44>
   17ae4:	ldr	r0, [pc, #40]	; 17b14 <codadump_filter_get_subfilter@@Base+0x54>
   17ae8:	add	r0, pc, r0
   17aec:	ldr	r1, [pc, #36]	; 17b18 <codadump_filter_get_subfilter@@Base+0x58>
   17af0:	add	r1, pc, r1
   17af4:	ldr	r2, [pc, #32]	; 17b1c <codadump_filter_get_subfilter@@Base+0x5c>
   17af8:	add	r3, pc, r2
   17afc:	movw	r2, #223	; 0xdf
   17b00:	bl	129f4 <__assert_fail@plt>
   17b04:	ldr	r0, [sp, #4]
   17b08:	ldr	r0, [r0, #4]
   17b0c:	mov	sp, fp
   17b10:	pop	{fp, pc}
   17b14:	andeq	r7, r0, sp, lsl #9
   17b18:	muleq	r0, r4, r4
   17b1c:	andeq	r7, r0, ip, asr r5

00017b20 <codadump_filter_get_next_filter@@Base>:
   17b20:	push	{fp, lr}
   17b24:	mov	fp, sp
   17b28:	sub	sp, sp, #8
   17b2c:	str	r0, [sp, #4]
   17b30:	ldr	r0, [sp, #4]
   17b34:	movw	r1, #0
   17b38:	cmp	r0, r1
   17b3c:	beq	17b44 <codadump_filter_get_next_filter@@Base+0x24>
   17b40:	b	17b64 <codadump_filter_get_next_filter@@Base+0x44>
   17b44:	ldr	r0, [pc, #40]	; 17b74 <codadump_filter_get_next_filter@@Base+0x54>
   17b48:	add	r0, pc, r0
   17b4c:	ldr	r1, [pc, #36]	; 17b78 <codadump_filter_get_next_filter@@Base+0x58>
   17b50:	add	r1, pc, r1
   17b54:	ldr	r2, [pc, #32]	; 17b7c <codadump_filter_get_next_filter@@Base+0x5c>
   17b58:	add	r3, pc, r2
   17b5c:	movw	r2, #230	; 0xe6
   17b60:	bl	129f4 <__assert_fail@plt>
   17b64:	ldr	r0, [sp, #4]
   17b68:	ldr	r0, [r0, #8]
   17b6c:	mov	sp, fp
   17b70:	pop	{fp, pc}
   17b74:	andeq	r7, r0, sp, lsr #8
   17b78:	andeq	r7, r0, r4, lsr r4
   17b7c:	andeq	r7, r0, lr, lsr r5
   17b80:	push	{fp, lr}
   17b84:	mov	fp, sp
   17b88:	sub	sp, sp, #40	; 0x28
   17b8c:	str	r0, [fp, #-4]
   17b90:	str	r1, [fp, #-8]
   17b94:	str	r2, [fp, #-12]
   17b98:	movw	r0, #0
   17b9c:	str	r0, [fp, #-16]
   17ba0:	ldr	r1, [fp, #-4]
   17ba4:	cmp	r1, r0
   17ba8:	beq	17bb0 <codadump_filter_get_next_filter@@Base+0x90>
   17bac:	b	17bd0 <codadump_filter_get_next_filter@@Base+0xb0>
   17bb0:	ldr	r0, [pc, #1060]	; 17fdc <codadump_filter_get_next_filter@@Base+0x4bc>
   17bb4:	add	r0, pc, r0
   17bb8:	ldr	r1, [pc, #1056]	; 17fe0 <codadump_filter_get_next_filter@@Base+0x4c0>
   17bbc:	add	r1, pc, r1
   17bc0:	ldr	r2, [pc, #1052]	; 17fe4 <codadump_filter_get_next_filter@@Base+0x4c4>
   17bc4:	add	r3, pc, r2
   17bc8:	movw	r2, #44	; 0x2c
   17bcc:	bl	129f4 <__assert_fail@plt>
   17bd0:	ldr	r0, [fp, #-8]
   17bd4:	movw	r1, #0
   17bd8:	cmp	r0, r1
   17bdc:	beq	17be4 <codadump_filter_get_next_filter@@Base+0xc4>
   17be0:	b	17c04 <codadump_filter_get_next_filter@@Base+0xe4>
   17be4:	ldr	r0, [pc, #1020]	; 17fe8 <codadump_filter_get_next_filter@@Base+0x4c8>
   17be8:	add	r0, pc, r0
   17bec:	ldr	r1, [pc, #1016]	; 17fec <codadump_filter_get_next_filter@@Base+0x4cc>
   17bf0:	add	r1, pc, r1
   17bf4:	ldr	r2, [pc, #1012]	; 17ff0 <codadump_filter_get_next_filter@@Base+0x4d0>
   17bf8:	add	r3, pc, r2
   17bfc:	movw	r2, #45	; 0x2d
   17c00:	bl	129f4 <__assert_fail@plt>
   17c04:	ldr	r0, [fp, #-12]
   17c08:	movw	r1, #0
   17c0c:	cmp	r0, r1
   17c10:	beq	17c18 <codadump_filter_get_next_filter@@Base+0xf8>
   17c14:	b	17c38 <codadump_filter_get_next_filter@@Base+0x118>
   17c18:	ldr	r0, [pc, #980]	; 17ff4 <codadump_filter_get_next_filter@@Base+0x4d4>
   17c1c:	add	r0, pc, r0
   17c20:	ldr	r1, [pc, #976]	; 17ff8 <codadump_filter_get_next_filter@@Base+0x4d8>
   17c24:	add	r1, pc, r1
   17c28:	ldr	r2, [pc, #972]	; 17ffc <codadump_filter_get_next_filter@@Base+0x4dc>
   17c2c:	add	r3, pc, r2
   17c30:	movw	r2, #46	; 0x2e
   17c34:	bl	129f4 <__assert_fail@plt>
   17c38:	b	17c3c <codadump_filter_get_next_filter@@Base+0x11c>
   17c3c:	ldr	r0, [fp, #-4]
   17c40:	ldrb	r0, [r0]
   17c44:	cmp	r0, #32
   17c48:	movw	r0, #1
   17c4c:	str	r0, [sp, #16]
   17c50:	beq	17c84 <codadump_filter_get_next_filter@@Base+0x164>
   17c54:	ldr	r0, [fp, #-4]
   17c58:	ldrb	r0, [r0]
   17c5c:	cmp	r0, #9
   17c60:	movw	r0, #1
   17c64:	str	r0, [sp, #16]
   17c68:	beq	17c84 <codadump_filter_get_next_filter@@Base+0x164>
   17c6c:	ldr	r0, [fp, #-4]
   17c70:	ldrb	r0, [r0]
   17c74:	cmp	r0, #10
   17c78:	movw	r0, #0
   17c7c:	moveq	r0, #1
   17c80:	str	r0, [sp, #16]
   17c84:	ldr	r0, [sp, #16]
   17c88:	tst	r0, #1
   17c8c:	beq	17ca0 <codadump_filter_get_next_filter@@Base+0x180>
   17c90:	ldr	r0, [fp, #-4]
   17c94:	add	r0, r0, #1
   17c98:	str	r0, [fp, #-4]
   17c9c:	b	17c3c <codadump_filter_get_next_filter@@Base+0x11c>
   17ca0:	b	17ca4 <codadump_filter_get_next_filter@@Base+0x184>
   17ca4:	ldr	r0, [fp, #-4]
   17ca8:	ldr	r1, [fp, #-16]
   17cac:	add	r0, r0, r1
   17cb0:	ldrb	r0, [r0]
   17cb4:	cmp	r0, #0
   17cb8:	movw	r0, #0
   17cbc:	str	r0, [sp, #12]
   17cc0:	beq	17d24 <codadump_filter_get_next_filter@@Base+0x204>
   17cc4:	ldr	r0, [fp, #-4]
   17cc8:	ldr	r1, [fp, #-16]
   17ccc:	add	r0, r0, r1
   17cd0:	ldrb	r0, [r0]
   17cd4:	cmp	r0, #46	; 0x2e
   17cd8:	movw	r0, #0
   17cdc:	str	r0, [sp, #12]
   17ce0:	beq	17d24 <codadump_filter_get_next_filter@@Base+0x204>
   17ce4:	ldr	r0, [fp, #-4]
   17ce8:	ldr	r1, [fp, #-16]
   17cec:	add	r0, r0, r1
   17cf0:	ldrb	r0, [r0]
   17cf4:	cmp	r0, #59	; 0x3b
   17cf8:	movw	r0, #0
   17cfc:	str	r0, [sp, #12]
   17d00:	beq	17d24 <codadump_filter_get_next_filter@@Base+0x204>
   17d04:	ldr	r0, [fp, #-4]
   17d08:	ldr	r1, [fp, #-16]
   17d0c:	add	r0, r0, r1
   17d10:	ldrb	r0, [r0]
   17d14:	cmp	r0, #44	; 0x2c
   17d18:	movw	r0, #0
   17d1c:	movne	r0, #1
   17d20:	str	r0, [sp, #12]
   17d24:	ldr	r0, [sp, #12]
   17d28:	tst	r0, #1
   17d2c:	beq	17d40 <codadump_filter_get_next_filter@@Base+0x220>
   17d30:	ldr	r0, [fp, #-16]
   17d34:	add	r0, r0, #1
   17d38:	str	r0, [fp, #-16]
   17d3c:	b	17ca4 <codadump_filter_get_next_filter@@Base+0x184>
   17d40:	ldr	r0, [fp, #-16]
   17d44:	cmp	r0, #0
   17d48:	ble	17fc8 <codadump_filter_get_next_filter@@Base+0x4a8>
   17d4c:	ldr	r0, [fp, #-16]
   17d50:	str	r0, [sp, #20]
   17d54:	movw	r0, #12
   17d58:	bl	12784 <malloc@plt>
   17d5c:	ldr	r1, [fp, #-8]
   17d60:	str	r0, [r1]
   17d64:	ldr	r0, [fp, #-8]
   17d68:	ldr	r0, [r0]
   17d6c:	movw	r1, #0
   17d70:	cmp	r0, r1
   17d74:	bne	17da8 <codadump_filter_get_next_filter@@Base+0x288>
   17d78:	ldr	r0, [pc, #644]	; 18004 <codadump_filter_get_next_filter@@Base+0x4e4>
   17d7c:	add	r1, pc, r0
   17d80:	ldr	r0, [pc, #640]	; 18008 <codadump_filter_get_next_filter@@Base+0x4e8>
   17d84:	add	r3, pc, r0
   17d88:	mvn	r0, #0
   17d8c:	movw	r2, #12
   17d90:	movw	ip, #69	; 0x45
   17d94:	str	ip, [sp]
   17d98:	bl	12610 <coda_set_error@plt>
   17d9c:	ldr	r0, [pc, #604]	; 18000 <codadump_filter_get_next_filter@@Base+0x4e0>
   17da0:	ldr	r0, [pc, r0]
   17da4:	blx	r0
   17da8:	ldr	r0, [fp, #-16]
   17dac:	add	r0, r0, #1
   17db0:	bl	12784 <malloc@plt>
   17db4:	ldr	r1, [fp, #-8]
   17db8:	ldr	r1, [r1]
   17dbc:	str	r0, [r1]
   17dc0:	ldr	r0, [fp, #-8]
   17dc4:	ldr	r0, [r0]
   17dc8:	ldr	r0, [r0]
   17dcc:	movw	r1, #0
   17dd0:	cmp	r0, r1
   17dd4:	bne	17e0c <codadump_filter_get_next_filter@@Base+0x2ec>
   17dd8:	ldr	r0, [pc, #560]	; 18010 <codadump_filter_get_next_filter@@Base+0x4f0>
   17ddc:	add	r1, pc, r0
   17de0:	ldr	r0, [pc, #556]	; 18014 <codadump_filter_get_next_filter@@Base+0x4f4>
   17de4:	add	r3, pc, r0
   17de8:	ldr	r0, [fp, #-16]
   17dec:	add	r2, r0, #1
   17df0:	mvn	r0, #0
   17df4:	movw	ip, #76	; 0x4c
   17df8:	str	ip, [sp]
   17dfc:	bl	12610 <coda_set_error@plt>
   17e00:	ldr	r0, [pc, #516]	; 1800c <codadump_filter_get_next_filter@@Base+0x4ec>
   17e04:	ldr	r0, [pc, r0]
   17e08:	blx	r0
   17e0c:	ldr	r0, [fp, #-8]
   17e10:	ldr	r0, [r0]
   17e14:	ldr	r0, [r0]
   17e18:	ldr	r1, [fp, #-4]
   17e1c:	ldr	r2, [fp, #-16]
   17e20:	bl	12874 <strncpy@plt>
   17e24:	ldr	r1, [fp, #-8]
   17e28:	ldr	r1, [r1]
   17e2c:	movw	r2, #0
   17e30:	str	r2, [r1, #4]
   17e34:	ldr	r1, [fp, #-8]
   17e38:	ldr	r1, [r1]
   17e3c:	str	r2, [r1, #8]
   17e40:	ldr	r0, [fp, #-8]
   17e44:	ldr	r0, [r0]
   17e48:	ldr	r0, [r0]
   17e4c:	ldr	r1, [fp, #-16]
   17e50:	sub	r1, r1, #1
   17e54:	add	r0, r0, r1
   17e58:	ldrb	r0, [r0]
   17e5c:	cmp	r0, #32
   17e60:	movw	r0, #1
   17e64:	str	r0, [sp, #8]
   17e68:	beq	17ec4 <codadump_filter_get_next_filter@@Base+0x3a4>
   17e6c:	ldr	r0, [fp, #-8]
   17e70:	ldr	r0, [r0]
   17e74:	ldr	r0, [r0]
   17e78:	ldr	r1, [fp, #-16]
   17e7c:	sub	r1, r1, #1
   17e80:	add	r0, r0, r1
   17e84:	ldrb	r0, [r0]
   17e88:	cmp	r0, #9
   17e8c:	movw	r0, #1
   17e90:	str	r0, [sp, #8]
   17e94:	beq	17ec4 <codadump_filter_get_next_filter@@Base+0x3a4>
   17e98:	ldr	r0, [fp, #-8]
   17e9c:	ldr	r0, [r0]
   17ea0:	ldr	r0, [r0]
   17ea4:	ldr	r1, [fp, #-16]
   17ea8:	sub	r1, r1, #1
   17eac:	add	r0, r0, r1
   17eb0:	ldrb	r0, [r0]
   17eb4:	cmp	r0, #10
   17eb8:	movw	r0, #0
   17ebc:	moveq	r0, #1
   17ec0:	str	r0, [sp, #8]
   17ec4:	ldr	r0, [sp, #8]
   17ec8:	tst	r0, #1
   17ecc:	beq	17ee4 <codadump_filter_get_next_filter@@Base+0x3c4>
   17ed0:	ldr	r0, [fp, #-16]
   17ed4:	mvn	r1, #0
   17ed8:	add	r0, r0, r1
   17edc:	str	r0, [fp, #-16]
   17ee0:	b	17e40 <codadump_filter_get_next_filter@@Base+0x320>
   17ee4:	ldr	r0, [fp, #-8]
   17ee8:	ldr	r0, [r0]
   17eec:	ldr	r0, [r0]
   17ef0:	ldr	r1, [fp, #-16]
   17ef4:	add	r0, r0, r1
   17ef8:	movw	r1, #0
   17efc:	strb	r1, [r0]
   17f00:	ldr	r0, [fp, #-4]
   17f04:	ldr	r1, [sp, #20]
   17f08:	add	r0, r0, r1
   17f0c:	ldrb	r0, [r0]
   17f10:	cmp	r0, #46	; 0x2e
   17f14:	bne	17f60 <codadump_filter_get_next_filter@@Base+0x440>
   17f18:	ldr	r0, [fp, #-4]
   17f1c:	ldr	r1, [sp, #20]
   17f20:	add	r1, r1, #1
   17f24:	add	r0, r0, r1
   17f28:	ldr	r1, [fp, #-8]
   17f2c:	ldr	r1, [r1]
   17f30:	add	r1, r1, #4
   17f34:	ldr	r2, [fp, #-12]
   17f38:	bl	17b80 <codadump_filter_get_next_filter@@Base+0x60>
   17f3c:	ldr	r0, [fp, #-8]
   17f40:	ldr	r0, [r0]
   17f44:	ldr	r0, [r0, #4]
   17f48:	movw	r1, #0
   17f4c:	cmp	r0, r1
   17f50:	bne	17f5c <codadump_filter_get_next_filter@@Base+0x43c>
   17f54:	ldr	r0, [fp, #-8]
   17f58:	bl	17954 <codadump_filter_remove@@Base>
   17f5c:	b	17fc4 <codadump_filter_get_next_filter@@Base+0x4a4>
   17f60:	ldr	r0, [fp, #-4]
   17f64:	ldr	r1, [sp, #20]
   17f68:	add	r0, r0, r1
   17f6c:	ldrb	r0, [r0]
   17f70:	cmp	r0, #59	; 0x3b
   17f74:	beq	17f90 <codadump_filter_get_next_filter@@Base+0x470>
   17f78:	ldr	r0, [fp, #-4]
   17f7c:	ldr	r1, [sp, #20]
   17f80:	add	r0, r0, r1
   17f84:	ldrb	r0, [r0]
   17f88:	cmp	r0, #44	; 0x2c
   17f8c:	bne	17fac <codadump_filter_get_next_filter@@Base+0x48c>
   17f90:	ldr	r0, [fp, #-4]
   17f94:	ldr	r1, [sp, #20]
   17f98:	add	r1, r1, #1
   17f9c:	add	r0, r0, r1
   17fa0:	ldr	r1, [fp, #-12]
   17fa4:	str	r0, [r1]
   17fa8:	b	17fc0 <codadump_filter_get_next_filter@@Base+0x4a0>
   17fac:	ldr	r0, [fp, #-4]
   17fb0:	ldr	r1, [sp, #20]
   17fb4:	add	r0, r0, r1
   17fb8:	ldr	r1, [fp, #-12]
   17fbc:	str	r0, [r1]
   17fc0:	b	17fc4 <codadump_filter_get_next_filter@@Base+0x4a4>
   17fc4:	b	17fd4 <codadump_filter_get_next_filter@@Base+0x4b4>
   17fc8:	ldr	r0, [fp, #-8]
   17fcc:	movw	r1, #0
   17fd0:	str	r1, [r0]
   17fd4:	mov	sp, fp
   17fd8:	pop	{fp, pc}
   17fdc:	andeq	r7, r0, r6, lsr #10
   17fe0:	andeq	r7, r0, r8, asr #7
   17fe4:	andeq	r7, r0, sl, lsr #10
   17fe8:	andeq	r7, r0, sp, lsl #7
   17fec:	muleq	r0, r4, r3
   17ff0:	strdeq	r7, [r0], -r6
   17ff4:	andeq	r7, r0, r2, lsl r5
   17ff8:	andeq	r7, r0, r0, ror #6
   17ffc:	andeq	r7, r0, r2, asr #9
   18000:	andeq	r9, r1, r8, lsr r4
   18004:	muleq	r0, r4, sp
   18008:	andeq	r7, r0, r0, lsl #4
   1800c:	ldrdeq	r9, [r1], -r4
   18010:	andeq	r7, r0, pc, asr r3
   18014:	andeq	r7, r0, r0, lsr #3
   18018:	push	{fp, lr}
   1801c:	mov	fp, sp
   18020:	sub	sp, sp, #8
   18024:	str	r0, [sp, #4]
   18028:	str	r1, [sp]
   1802c:	ldr	r0, [sp, #4]
   18030:	movw	r1, #0
   18034:	cmp	r0, r1
   18038:	beq	18040 <codadump_filter_get_next_filter@@Base+0x520>
   1803c:	b	18060 <codadump_filter_get_next_filter@@Base+0x540>
   18040:	ldr	r0, [pc, #304]	; 18178 <codadump_filter_get_next_filter@@Base+0x658>
   18044:	add	r0, pc, r0
   18048:	ldr	r1, [pc, #300]	; 1817c <codadump_filter_get_next_filter@@Base+0x65c>
   1804c:	add	r1, pc, r1
   18050:	ldr	r2, [pc, #296]	; 18180 <codadump_filter_get_next_filter@@Base+0x660>
   18054:	add	r3, pc, r2
   18058:	movw	r2, #117	; 0x75
   1805c:	bl	129f4 <__assert_fail@plt>
   18060:	ldr	r0, [sp]
   18064:	movw	r1, #0
   18068:	cmp	r0, r1
   1806c:	bne	18074 <codadump_filter_get_next_filter@@Base+0x554>
   18070:	b	18170 <codadump_filter_get_next_filter@@Base+0x650>
   18074:	ldr	r0, [sp, #4]
   18078:	ldr	r0, [r0]
   1807c:	movw	r1, #0
   18080:	cmp	r0, r1
   18084:	bne	18098 <codadump_filter_get_next_filter@@Base+0x578>
   18088:	ldr	r0, [sp]
   1808c:	ldr	r1, [sp, #4]
   18090:	str	r0, [r1]
   18094:	b	18170 <codadump_filter_get_next_filter@@Base+0x650>
   18098:	ldr	r0, [sp, #4]
   1809c:	ldr	r0, [r0]
   180a0:	ldr	r0, [r0]
   180a4:	ldr	r1, [sp]
   180a8:	ldr	r1, [r1]
   180ac:	bl	125d4 <strcmp@plt>
   180b0:	cmp	r0, #0
   180b4:	bne	1812c <codadump_filter_get_next_filter@@Base+0x60c>
   180b8:	ldr	r0, [sp, #4]
   180bc:	ldr	r0, [r0]
   180c0:	ldr	r0, [r0, #4]
   180c4:	movw	r1, #0
   180c8:	cmp	r0, r1
   180cc:	beq	18120 <codadump_filter_get_next_filter@@Base+0x600>
   180d0:	ldr	r0, [sp]
   180d4:	ldr	r0, [r0, #4]
   180d8:	movw	r1, #0
   180dc:	cmp	r0, r1
   180e0:	beq	1810c <codadump_filter_get_next_filter@@Base+0x5ec>
   180e4:	ldr	r0, [sp, #4]
   180e8:	ldr	r0, [r0]
   180ec:	add	r0, r0, #4
   180f0:	ldr	r1, [sp]
   180f4:	ldr	r1, [r1, #4]
   180f8:	bl	18018 <codadump_filter_get_next_filter@@Base+0x4f8>
   180fc:	ldr	r0, [sp]
   18100:	movw	r1, #0
   18104:	str	r1, [r0, #4]
   18108:	b	1811c <codadump_filter_get_next_filter@@Base+0x5fc>
   1810c:	ldr	r0, [sp, #4]
   18110:	ldr	r0, [r0]
   18114:	add	r0, r0, #4
   18118:	bl	17954 <codadump_filter_remove@@Base>
   1811c:	b	18120 <codadump_filter_get_next_filter@@Base+0x600>
   18120:	mov	r0, sp
   18124:	bl	17954 <codadump_filter_remove@@Base>
   18128:	b	18170 <codadump_filter_get_next_filter@@Base+0x650>
   1812c:	ldr	r0, [sp, #4]
   18130:	ldr	r0, [r0]
   18134:	ldr	r0, [r0, #8]
   18138:	movw	r1, #0
   1813c:	cmp	r0, r1
   18140:	beq	1815c <codadump_filter_get_next_filter@@Base+0x63c>
   18144:	ldr	r0, [sp, #4]
   18148:	ldr	r0, [r0]
   1814c:	add	r0, r0, #8
   18150:	ldr	r1, [sp]
   18154:	bl	18018 <codadump_filter_get_next_filter@@Base+0x4f8>
   18158:	b	1816c <codadump_filter_get_next_filter@@Base+0x64c>
   1815c:	ldr	r0, [sp]
   18160:	ldr	r1, [sp, #4]
   18164:	ldr	r1, [r1]
   18168:	str	r0, [r1, #8]
   1816c:	b	18170 <codadump_filter_get_next_filter@@Base+0x650>
   18170:	mov	sp, fp
   18174:	pop	{fp, pc}
   18178:	andeq	r6, r0, r1, lsr pc
   1817c:	andeq	r6, r0, r8, lsr pc
   18180:	andeq	r7, r0, fp, lsl r1

00018184 <print_json_data@@Base>:
   18184:	push	{r4, r5, fp, lr}
   18188:	add	fp, sp, #8
   1818c:	sub	sp, sp, #544	; 0x220
   18190:	ldr	r1, [pc, #304]	; 182c8 <print_json_data@@Base+0x144>
   18194:	ldr	r1, [pc, r1]
   18198:	ldr	r2, [pc, #300]	; 182cc <print_json_data@@Base+0x148>
   1819c:	add	r2, pc, r2
   181a0:	str	r0, [fp, #-12]
   181a4:	ldr	r0, [fp, #-12]
   181a8:	str	r0, [r2]
   181ac:	ldr	r0, [r1]
   181b0:	sub	r1, fp, #16
   181b4:	bl	1261c <coda_open@plt>
   181b8:	str	r0, [sp, #12]
   181bc:	ldr	r0, [sp, #12]
   181c0:	cmp	r0, #0
   181c4:	beq	18208 <print_json_data@@Base+0x84>
   181c8:	bl	129ac <coda_get_errno@plt>
   181cc:	ldr	r0, [r0]
   181d0:	cmn	r0, #21
   181d4:	bne	18208 <print_json_data@@Base+0x84>
   181d8:	movw	r0, #0
   181dc:	bl	12664 <coda_set_option_use_mmap@plt>
   181e0:	ldr	r1, [pc, #232]	; 182d0 <print_json_data@@Base+0x14c>
   181e4:	ldr	r1, [pc, r1]
   181e8:	ldr	r1, [r1]
   181ec:	str	r0, [sp, #8]
   181f0:	mov	r0, r1
   181f4:	sub	r1, fp, #16
   181f8:	bl	1261c <coda_open@plt>
   181fc:	str	r0, [sp, #12]
   18200:	movw	r0, #1
   18204:	bl	12664 <coda_set_option_use_mmap@plt>
   18208:	ldr	r0, [sp, #12]
   1820c:	cmp	r0, #0
   18210:	beq	18220 <print_json_data@@Base+0x9c>
   18214:	ldr	r0, [pc, #184]	; 182d4 <print_json_data@@Base+0x150>
   18218:	ldr	r0, [pc, r0]
   1821c:	blx	r0
   18220:	ldr	r1, [fp, #-16]
   18224:	add	r0, sp, #16
   18228:	bl	1273c <coda_cursor_set_product@plt>
   1822c:	cmp	r0, #0
   18230:	beq	18240 <print_json_data@@Base+0xbc>
   18234:	ldr	r0, [pc, #156]	; 182d8 <print_json_data@@Base+0x154>
   18238:	ldr	r0, [pc, r0]
   1823c:	blx	r0
   18240:	ldr	r0, [pc, #148]	; 182dc <print_json_data@@Base+0x158>
   18244:	ldr	r0, [pc, r0]
   18248:	ldr	r0, [r0]
   1824c:	movw	r1, #0
   18250:	cmp	r0, r1
   18254:	beq	1828c <print_json_data@@Base+0x108>
   18258:	ldr	r0, [pc, #128]	; 182e0 <print_json_data@@Base+0x15c>
   1825c:	ldr	r0, [pc, r0]
   18260:	ldr	r1, [r0]
   18264:	add	r0, sp, #16
   18268:	bl	12910 <coda_cursor_goto@plt>
   1826c:	str	r0, [sp, #12]
   18270:	ldr	r0, [sp, #12]
   18274:	cmp	r0, #0
   18278:	beq	18288 <print_json_data@@Base+0x104>
   1827c:	ldr	r0, [pc, #96]	; 182e4 <print_json_data@@Base+0x160>
   18280:	ldr	r0, [pc, r0]
   18284:	blx	r0
   18288:	b	1828c <print_json_data@@Base+0x108>
   1828c:	movw	r0, #0
   18290:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   18294:	add	r1, sp, #16
   18298:	str	r0, [sp, #4]
   1829c:	mov	r0, r1
   182a0:	bl	182ec <print_json_data@@Base+0x168>
   182a4:	ldr	r0, [pc, #60]	; 182e8 <print_json_data@@Base+0x164>
   182a8:	add	r0, pc, r0
   182ac:	bl	18e7c <print_json_data@@Base+0xcf8>
   182b0:	ldr	r1, [fp, #-16]
   182b4:	str	r0, [sp]
   182b8:	mov	r0, r1
   182bc:	bl	128ec <coda_close@plt>
   182c0:	sub	sp, fp, #8
   182c4:	pop	{r4, r5, fp, pc}
   182c8:	andeq	r9, r1, r8, lsl r0
   182cc:	andeq	r9, r1, r4, lsl #1
   182d0:	andeq	r8, r1, r8, asr #31
   182d4:	andeq	r8, r1, r0, asr #31
   182d8:	andeq	r8, r1, r0, lsr #31
   182dc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   182e0:	andeq	r8, r1, r4, lsl #31
   182e4:	andeq	r8, r1, r8, asr pc
   182e8:	andeq	r8, r0, r3, asr #5
   182ec:	push	{r4, r5, fp, lr}
   182f0:	add	fp, sp, #8
   182f4:	sub	sp, sp, #352	; 0x160
   182f8:	ldr	r1, [pc, #2664]	; 18d68 <print_json_data@@Base+0xbe4>
   182fc:	add	r1, pc, r1
   18300:	str	r0, [fp, #-12]
   18304:	movw	r0, #0
   18308:	str	r0, [fp, #-20]	; 0xffffffec
   1830c:	ldr	r0, [r1]
   18310:	cmp	r0, #0
   18314:	beq	1839c <print_json_data@@Base+0x218>
   18318:	ldr	r0, [fp, #-12]
   1831c:	sub	r1, fp, #20
   18320:	bl	126dc <coda_cursor_has_attributes@plt>
   18324:	cmp	r0, #0
   18328:	beq	18338 <print_json_data@@Base+0x1b4>
   1832c:	ldr	r0, [pc, #2616]	; 18d6c <print_json_data@@Base+0xbe8>
   18330:	ldr	r0, [pc, r0]
   18334:	blx	r0
   18338:	ldr	r0, [fp, #-20]	; 0xffffffec
   1833c:	cmp	r0, #0
   18340:	beq	18398 <print_json_data@@Base+0x214>
   18344:	ldr	r0, [pc, #2596]	; 18d70 <print_json_data@@Base+0xbec>
   18348:	add	r0, pc, r0
   1834c:	bl	18e7c <print_json_data@@Base+0xcf8>
   18350:	ldr	r1, [fp, #-12]
   18354:	str	r0, [sp, #68]	; 0x44
   18358:	mov	r0, r1
   1835c:	bl	12850 <coda_cursor_goto_attributes@plt>
   18360:	cmp	r0, #0
   18364:	beq	18374 <print_json_data@@Base+0x1f0>
   18368:	ldr	r0, [pc, #2564]	; 18d74 <print_json_data@@Base+0xbf0>
   1836c:	ldr	r0, [pc, r0]
   18370:	blx	r0
   18374:	ldr	r0, [fp, #-12]
   18378:	bl	182ec <print_json_data@@Base+0x168>
   1837c:	ldr	r0, [fp, #-12]
   18380:	bl	127b4 <coda_cursor_goto_parent@plt>
   18384:	ldr	r1, [pc, #2540]	; 18d78 <print_json_data@@Base+0xbf4>
   18388:	add	r1, pc, r1
   1838c:	str	r0, [sp, #64]	; 0x40
   18390:	mov	r0, r1
   18394:	bl	18e7c <print_json_data@@Base+0xcf8>
   18398:	b	1839c <print_json_data@@Base+0x218>
   1839c:	ldr	r0, [fp, #-12]
   183a0:	sub	r1, fp, #16
   183a4:	bl	126e8 <coda_cursor_get_type_class@plt>
   183a8:	cmp	r0, #0
   183ac:	beq	183bc <print_json_data@@Base+0x238>
   183b0:	ldr	r0, [pc, #2500]	; 18d7c <print_json_data@@Base+0xbf8>
   183b4:	ldr	r0, [pc, r0]
   183b8:	blx	r0
   183bc:	ldr	r0, [fp, #-16]
   183c0:	cmp	r0, #6
   183c4:	str	r0, [sp, #60]	; 0x3c
   183c8:	bhi	18d48 <print_json_data@@Base+0xbc4>
   183cc:	add	r0, pc, #8
   183d0:	ldr	r1, [sp, #60]	; 0x3c
   183d4:	ldr	r2, [r0, r1, lsl #2]
   183d8:	add	pc, r0, r2
   183dc:	andeq	r0, r0, ip, lsl r0
   183e0:	andeq	r0, r0, r0, ror r2
   183e4:	andeq	r0, r0, r0, asr #7
   183e8:	andeq	r0, r0, r0, asr #7
   183ec:	andeq	r0, r0, r0, asr #7
   183f0:	andeq	r0, r0, r0, asr #7
   183f4:	strdeq	r0, [r0], -r4
   183f8:	ldr	r0, [pc, #2616]	; 18e38 <print_json_data@@Base+0xcb4>
   183fc:	add	r0, pc, r0
   18400:	bl	18e7c <print_json_data@@Base+0xcf8>
   18404:	ldr	r1, [fp, #-12]
   18408:	str	r0, [sp, #56]	; 0x38
   1840c:	mov	r0, r1
   18410:	sub	r1, fp, #24
   18414:	bl	12640 <coda_cursor_get_num_elements@plt>
   18418:	cmp	r0, #0
   1841c:	beq	1842c <print_json_data@@Base+0x2a8>
   18420:	ldr	r0, [pc, #2580]	; 18e3c <print_json_data@@Base+0xcb8>
   18424:	ldr	r0, [pc, r0]
   18428:	blx	r0
   1842c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18430:	cmp	r0, #0
   18434:	ble	1863c <print_json_data@@Base+0x4b8>
   18438:	ldr	r0, [fp, #-12]
   1843c:	sub	r1, fp, #28
   18440:	bl	126a0 <coda_cursor_get_type@plt>
   18444:	cmp	r0, #0
   18448:	beq	18458 <print_json_data@@Base+0x2d4>
   1844c:	ldr	r0, [pc, #2540]	; 18e40 <print_json_data@@Base+0xcbc>
   18450:	ldr	r0, [pc, r0]
   18454:	blx	r0
   18458:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1845c:	sub	r1, fp, #32
   18460:	bl	1288c <coda_type_get_record_union_status@plt>
   18464:	cmp	r0, #0
   18468:	beq	18478 <print_json_data@@Base+0x2f4>
   1846c:	ldr	r0, [pc, #2512]	; 18e44 <print_json_data@@Base+0xcc0>
   18470:	ldr	r0, [pc, r0]
   18474:	blx	r0
   18478:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1847c:	cmp	r0, #0
   18480:	beq	18514 <print_json_data@@Base+0x390>
   18484:	ldr	r0, [fp, #-12]
   18488:	sub	r1, fp, #36	; 0x24
   1848c:	bl	1297c <coda_cursor_get_available_union_field_index@plt>
   18490:	cmp	r0, #0
   18494:	beq	184a4 <print_json_data@@Base+0x320>
   18498:	ldr	r0, [pc, #2496]	; 18e60 <print_json_data@@Base+0xcdc>
   1849c:	ldr	r0, [pc, r0]
   184a0:	blx	r0
   184a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   184a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   184ac:	sub	r2, fp, #40	; 0x28
   184b0:	bl	129c4 <coda_type_get_record_field_name@plt>
   184b4:	cmp	r0, #0
   184b8:	beq	184c8 <print_json_data@@Base+0x344>
   184bc:	ldr	r0, [pc, #2464]	; 18e64 <print_json_data@@Base+0xce0>
   184c0:	ldr	r0, [pc, r0]
   184c4:	blx	r0
   184c8:	ldr	r0, [fp, #-12]
   184cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   184d0:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   184d4:	cmp	r0, #0
   184d8:	beq	184e8 <print_json_data@@Base+0x364>
   184dc:	ldr	r0, [pc, #2436]	; 18e68 <print_json_data@@Base+0xce4>
   184e0:	ldr	r0, [pc, r0]
   184e4:	blx	r0
   184e8:	ldr	r0, [pc, #2428]	; 18e6c <print_json_data@@Base+0xce8>
   184ec:	add	r0, pc, r0
   184f0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   184f4:	bl	18e7c <print_json_data@@Base+0xcf8>
   184f8:	ldr	r1, [fp, #-12]
   184fc:	str	r0, [sp, #52]	; 0x34
   18500:	mov	r0, r1
   18504:	bl	182ec <print_json_data@@Base+0x168>
   18508:	ldr	r0, [fp, #-12]
   1850c:	bl	127b4 <coda_cursor_goto_parent@plt>
   18510:	b	18638 <print_json_data@@Base+0x4b4>
   18514:	movw	r0, #1
   18518:	str	r0, [fp, #-44]	; 0xffffffd4
   1851c:	ldr	r0, [fp, #-12]
   18520:	bl	12754 <coda_cursor_goto_first_record_field@plt>
   18524:	cmp	r0, #0
   18528:	beq	18538 <print_json_data@@Base+0x3b4>
   1852c:	ldr	r0, [pc, #2324]	; 18e48 <print_json_data@@Base+0xcc4>
   18530:	ldr	r0, [pc, r0]
   18534:	blx	r0
   18538:	movw	r0, #0
   1853c:	str	r0, [fp, #-36]	; 0xffffffdc
   18540:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18548:	cmp	r0, r1
   1854c:	bge	18630 <print_json_data@@Base+0x4ac>
   18550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18554:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18558:	sub	r2, fp, #52	; 0x34
   1855c:	bl	125e0 <coda_type_get_record_field_hidden_status@plt>
   18560:	cmp	r0, #0
   18564:	beq	18574 <print_json_data@@Base+0x3f0>
   18568:	ldr	r0, [pc, #2268]	; 18e4c <print_json_data@@Base+0xcc8>
   1856c:	ldr	r0, [pc, r0]
   18570:	blx	r0
   18574:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18578:	cmp	r0, #0
   1857c:	bne	185e8 <print_json_data@@Base+0x464>
   18580:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18584:	cmp	r0, #0
   18588:	bne	1859c <print_json_data@@Base+0x418>
   1858c:	ldr	r0, [pc, #2236]	; 18e50 <print_json_data@@Base+0xccc>
   18590:	add	r0, pc, r0
   18594:	bl	18e7c <print_json_data@@Base+0xcf8>
   18598:	b	185a4 <print_json_data@@Base+0x420>
   1859c:	movw	r0, #0
   185a0:	str	r0, [fp, #-44]	; 0xffffffd4
   185a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   185a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   185ac:	sub	r2, fp, #48	; 0x30
   185b0:	bl	129c4 <coda_type_get_record_field_name@plt>
   185b4:	cmp	r0, #0
   185b8:	beq	185c8 <print_json_data@@Base+0x444>
   185bc:	ldr	r0, [pc, #2192]	; 18e54 <print_json_data@@Base+0xcd0>
   185c0:	ldr	r0, [pc, r0]
   185c4:	blx	r0
   185c8:	ldr	r0, [pc, #2184]	; 18e58 <print_json_data@@Base+0xcd4>
   185cc:	add	r0, pc, r0
   185d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   185d4:	bl	18e7c <print_json_data@@Base+0xcf8>
   185d8:	ldr	r1, [fp, #-12]
   185dc:	str	r0, [sp, #48]	; 0x30
   185e0:	mov	r0, r1
   185e4:	bl	182ec <print_json_data@@Base+0x168>
   185e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   185ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185f0:	sub	r1, r1, #1
   185f4:	cmp	r0, r1
   185f8:	bge	1861c <print_json_data@@Base+0x498>
   185fc:	ldr	r0, [fp, #-12]
   18600:	bl	12934 <coda_cursor_goto_next_record_field@plt>
   18604:	cmp	r0, #0
   18608:	beq	18618 <print_json_data@@Base+0x494>
   1860c:	ldr	r0, [pc, #2120]	; 18e5c <print_json_data@@Base+0xcd8>
   18610:	ldr	r0, [pc, r0]
   18614:	blx	r0
   18618:	b	1861c <print_json_data@@Base+0x498>
   1861c:	b	18620 <print_json_data@@Base+0x49c>
   18620:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18624:	add	r0, r0, #1
   18628:	str	r0, [fp, #-36]	; 0xffffffdc
   1862c:	b	18540 <print_json_data@@Base+0x3bc>
   18630:	ldr	r0, [fp, #-12]
   18634:	bl	127b4 <coda_cursor_goto_parent@plt>
   18638:	b	1863c <print_json_data@@Base+0x4b8>
   1863c:	ldr	r0, [pc, #2092]	; 18e70 <print_json_data@@Base+0xcec>
   18640:	add	r0, pc, r0
   18644:	bl	18e7c <print_json_data@@Base+0xcf8>
   18648:	b	18d48 <print_json_data@@Base+0xbc4>
   1864c:	ldr	r0, [pc, #1996]	; 18e20 <print_json_data@@Base+0xc9c>
   18650:	add	r0, pc, r0
   18654:	bl	18e7c <print_json_data@@Base+0xcf8>
   18658:	sub	r2, fp, #84	; 0x54
   1865c:	ldr	r1, [fp, #-12]
   18660:	str	r0, [sp, #44]	; 0x2c
   18664:	mov	r0, r1
   18668:	sub	r1, fp, #88	; 0x58
   1866c:	bl	128d4 <coda_cursor_get_array_dim@plt>
   18670:	cmp	r0, #0
   18674:	beq	18684 <print_json_data@@Base+0x500>
   18678:	ldr	r0, [pc, #1956]	; 18e24 <print_json_data@@Base+0xca0>
   1867c:	ldr	r0, [pc, r0]
   18680:	blx	r0
   18684:	ldr	r0, [fp, #-88]	; 0xffffffa8
   18688:	cmp	r0, #0
   1868c:	blt	1878c <print_json_data@@Base+0x608>
   18690:	movw	r0, #1
   18694:	str	r0, [fp, #-92]	; 0xffffffa4
   18698:	movw	r0, #0
   1869c:	str	r0, [fp, #-96]	; 0xffffffa0
   186a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   186a4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   186a8:	cmp	r0, r1
   186ac:	bge	186dc <print_json_data@@Base+0x558>
   186b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   186b4:	sub	r1, fp, #84	; 0x54
   186b8:	add	r0, r1, r0, lsl #2
   186bc:	ldr	r0, [r0]
   186c0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   186c4:	mul	r0, r1, r0
   186c8:	str	r0, [fp, #-92]	; 0xffffffa4
   186cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   186d0:	add	r0, r0, #1
   186d4:	str	r0, [fp, #-96]	; 0xffffffa0
   186d8:	b	186a0 <print_json_data@@Base+0x51c>
   186dc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   186e0:	cmp	r0, #0
   186e4:	ble	18788 <print_json_data@@Base+0x604>
   186e8:	ldr	r0, [fp, #-12]
   186ec:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   186f0:	cmp	r0, #0
   186f4:	beq	18704 <print_json_data@@Base+0x580>
   186f8:	ldr	r0, [pc, #1832]	; 18e28 <print_json_data@@Base+0xca4>
   186fc:	ldr	r0, [pc, r0]
   18700:	blx	r0
   18704:	movw	r0, #0
   18708:	str	r0, [fp, #-96]	; 0xffffffa0
   1870c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18710:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18714:	cmp	r0, r1
   18718:	bge	18780 <print_json_data@@Base+0x5fc>
   1871c:	ldr	r0, [fp, #-12]
   18720:	bl	182ec <print_json_data@@Base+0x168>
   18724:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18728:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1872c:	sub	r1, r1, #1
   18730:	cmp	r0, r1
   18734:	bge	1876c <print_json_data@@Base+0x5e8>
   18738:	ldr	r0, [pc, #1776]	; 18e30 <print_json_data@@Base+0xcac>
   1873c:	add	r0, pc, r0
   18740:	bl	18e7c <print_json_data@@Base+0xcf8>
   18744:	ldr	r1, [fp, #-12]
   18748:	str	r0, [sp, #40]	; 0x28
   1874c:	mov	r0, r1
   18750:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   18754:	cmp	r0, #0
   18758:	beq	18768 <print_json_data@@Base+0x5e4>
   1875c:	ldr	r0, [pc, #1744]	; 18e34 <print_json_data@@Base+0xcb0>
   18760:	ldr	r0, [pc, r0]
   18764:	blx	r0
   18768:	b	1876c <print_json_data@@Base+0x5e8>
   1876c:	b	18770 <print_json_data@@Base+0x5ec>
   18770:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18774:	add	r0, r0, #1
   18778:	str	r0, [fp, #-96]	; 0xffffffa0
   1877c:	b	1870c <print_json_data@@Base+0x588>
   18780:	ldr	r0, [fp, #-12]
   18784:	bl	127b4 <coda_cursor_goto_parent@plt>
   18788:	b	1878c <print_json_data@@Base+0x608>
   1878c:	ldr	r0, [pc, #1688]	; 18e2c <print_json_data@@Base+0xca8>
   18790:	add	r0, pc, r0
   18794:	bl	18e7c <print_json_data@@Base+0xcf8>
   18798:	b	18d48 <print_json_data@@Base+0xbc4>
   1879c:	ldr	r0, [fp, #-12]
   187a0:	sub	r1, fp, #100	; 0x64
   187a4:	bl	12778 <coda_cursor_get_read_type@plt>
   187a8:	cmp	r0, #0
   187ac:	beq	187bc <print_json_data@@Base+0x638>
   187b0:	ldr	r0, [pc, #1524]	; 18dac <print_json_data@@Base+0xc28>
   187b4:	ldr	r0, [pc, r0]
   187b8:	blx	r0
   187bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   187c0:	add	r0, r0, #1
   187c4:	cmp	r0, #13
   187c8:	str	r0, [sp, #36]	; 0x24
   187cc:	bhi	18bcc <print_json_data@@Base+0xa48>
   187d0:	add	r0, pc, #8
   187d4:	ldr	r1, [sp, #36]	; 0x24
   187d8:	ldr	r2, [r0, r1, lsl #2]
   187dc:	add	pc, r0, r2
   187e0:	andeq	r0, r0, r0, ror #7
   187e4:	muleq	r0, r4, r2
   187e8:	andeq	r0, r0, r8, asr #5
   187ec:	muleq	r0, r4, r2
   187f0:	andeq	r0, r0, r8, asr #5
   187f4:	muleq	r0, r4, r2
   187f8:	andeq	r0, r0, r8, asr #5
   187fc:	strdeq	r0, [r0], -ip
   18800:	andeq	r0, r0, r0, asr #6
   18804:	andeq	r0, r0, r4, lsl #7
   18808:	andeq	r0, r0, r4, lsl #7
   1880c:	andeq	r0, r0, r8, lsr r0
   18810:	andeq	r0, r0, r8, lsl #1
   18814:	andeq	r0, r0, ip, ror #2
   18818:	ldr	r0, [fp, #-12]
   1881c:	sub	r1, fp, #101	; 0x65
   18820:	bl	1285c <coda_cursor_read_char@plt>
   18824:	cmp	r0, #0
   18828:	beq	18838 <print_json_data@@Base+0x6b4>
   1882c:	ldr	r0, [pc, #1504]	; 18e14 <print_json_data@@Base+0xc90>
   18830:	ldr	r0, [pc, r0]
   18834:	blx	r0
   18838:	ldr	r0, [pc, #1500]	; 18e1c <print_json_data@@Base+0xc98>
   1883c:	add	r0, pc, r0
   18840:	bl	18e7c <print_json_data@@Base+0xcf8>
   18844:	sub	r1, fp, #101	; 0x65
   18848:	str	r0, [sp, #32]
   1884c:	mov	r0, r1
   18850:	movw	r1, #1
   18854:	bl	18ee4 <print_json_data@@Base+0xd60>
   18858:	ldr	r0, [pc, #1464]	; 18e18 <print_json_data@@Base+0xc94>
   1885c:	add	r0, pc, r0
   18860:	bl	18e7c <print_json_data@@Base+0xcf8>
   18864:	b	18bcc <print_json_data@@Base+0xa48>
   18868:	ldr	r0, [fp, #-12]
   1886c:	sub	r1, fp, #108	; 0x6c
   18870:	bl	127e4 <coda_cursor_get_string_length@plt>
   18874:	cmp	r0, #0
   18878:	beq	18888 <print_json_data@@Base+0x704>
   1887c:	ldr	r0, [pc, #1396]	; 18df8 <print_json_data@@Base+0xc74>
   18880:	ldr	r0, [pc, r0]
   18884:	blx	r0
   18888:	ldr	r0, [fp, #-108]	; 0xffffff94
   1888c:	add	r0, r0, #1
   18890:	bl	12784 <malloc@plt>
   18894:	str	r0, [fp, #-112]	; 0xffffff90
   18898:	ldr	r0, [fp, #-112]	; 0xffffff90
   1889c:	movw	r1, #0
   188a0:	cmp	r0, r1
   188a4:	bne	188dc <print_json_data@@Base+0x758>
   188a8:	ldr	r0, [pc, #1360]	; 18e00 <print_json_data@@Base+0xc7c>
   188ac:	add	r1, pc, r0
   188b0:	ldr	r0, [pc, #1356]	; 18e04 <print_json_data@@Base+0xc80>
   188b4:	add	r3, pc, r0
   188b8:	ldr	r0, [fp, #-108]	; 0xffffff94
   188bc:	add	r2, r0, #1
   188c0:	mvn	r0, #0
   188c4:	movw	ip, #303	; 0x12f
   188c8:	str	ip, [sp]
   188cc:	bl	12610 <coda_set_error@plt>
   188d0:	ldr	r0, [pc, #1316]	; 18dfc <print_json_data@@Base+0xc78>
   188d4:	ldr	r0, [pc, r0]
   188d8:	blx	r0
   188dc:	ldr	r0, [fp, #-12]
   188e0:	ldr	r1, [fp, #-112]	; 0xffffff90
   188e4:	ldr	r2, [fp, #-108]	; 0xffffff94
   188e8:	add	r2, r2, #1
   188ec:	bl	127a8 <coda_cursor_read_string@plt>
   188f0:	cmp	r0, #0
   188f4:	beq	18904 <print_json_data@@Base+0x780>
   188f8:	ldr	r0, [pc, #1288]	; 18e08 <print_json_data@@Base+0xc84>
   188fc:	ldr	r0, [pc, r0]
   18900:	blx	r0
   18904:	ldr	r0, [pc, #1284]	; 18e10 <print_json_data@@Base+0xc8c>
   18908:	add	r0, pc, r0
   1890c:	bl	18e7c <print_json_data@@Base+0xcf8>
   18910:	ldr	r1, [fp, #-112]	; 0xffffff90
   18914:	ldr	r2, [fp, #-108]	; 0xffffff94
   18918:	str	r0, [sp, #28]
   1891c:	mov	r0, r1
   18920:	mov	r1, r2
   18924:	bl	18ee4 <print_json_data@@Base+0xd60>
   18928:	ldr	r0, [pc, #1244]	; 18e0c <print_json_data@@Base+0xc88>
   1892c:	add	r0, pc, r0
   18930:	ldr	r1, [fp, #-108]	; 0xffffff94
   18934:	bl	18e7c <print_json_data@@Base+0xcf8>
   18938:	ldr	r1, [fp, #-112]	; 0xffffff90
   1893c:	str	r0, [sp, #24]
   18940:	mov	r0, r1
   18944:	bl	12658 <free@plt>
   18948:	b	18bcc <print_json_data@@Base+0xa48>
   1894c:	ldr	r0, [fp, #-12]
   18950:	sub	r1, fp, #120	; 0x78
   18954:	bl	1294c <coda_cursor_get_bit_size@plt>
   18958:	cmp	r0, #0
   1895c:	beq	1896c <print_json_data@@Base+0x7e8>
   18960:	ldr	r0, [pc, #1144]	; 18de0 <print_json_data@@Base+0xc5c>
   18964:	ldr	r0, [pc, r0]
   18968:	blx	r0
   1896c:	ldr	r0, [fp, #-120]	; 0xffffff88
   18970:	ldr	r1, [fp, #-116]	; 0xffffff8c
   18974:	lsr	r2, r0, #3
   18978:	orr	r2, r2, r1, lsl #29
   1897c:	asr	r1, r1, #3
   18980:	and	r0, r0, #7
   18984:	adds	r3, r2, #1
   18988:	adc	ip, r1, #0
   1898c:	cmp	r0, #0
   18990:	movne	r2, r3
   18994:	cmp	r0, #0
   18998:	movne	r1, ip
   1899c:	str	r2, [fp, #-128]	; 0xffffff80
   189a0:	str	r1, [fp, #-124]	; 0xffffff84
   189a4:	ldr	r0, [fp, #-128]	; 0xffffff80
   189a8:	bl	12784 <malloc@plt>
   189ac:	str	r0, [fp, #-132]	; 0xffffff7c
   189b0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   189b4:	movw	r1, #0
   189b8:	cmp	r0, r1
   189bc:	bne	189f0 <print_json_data@@Base+0x86c>
   189c0:	ldr	r0, [pc, #1056]	; 18de8 <print_json_data@@Base+0xc64>
   189c4:	add	r1, pc, r0
   189c8:	ldr	r0, [pc, #1052]	; 18dec <print_json_data@@Base+0xc68>
   189cc:	add	r3, pc, r0
   189d0:	ldr	r2, [fp, #-128]	; 0xffffff80
   189d4:	mvn	r0, #0
   189d8:	movw	ip, #334	; 0x14e
   189dc:	str	ip, [sp]
   189e0:	bl	12610 <coda_set_error@plt>
   189e4:	ldr	r0, [pc, #1016]	; 18de4 <print_json_data@@Base+0xc60>
   189e8:	ldr	r0, [pc, r0]
   189ec:	blx	r0
   189f0:	ldr	r0, [fp, #-12]
   189f4:	ldr	r1, [fp, #-132]	; 0xffffff7c
   189f8:	ldr	r2, [fp, #-120]	; 0xffffff88
   189fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18a00:	mov	ip, sp
   18a04:	str	r3, [ip, #4]
   18a08:	str	r2, [ip]
   18a0c:	mov	r2, #0
   18a10:	str	r2, [sp, #20]
   18a14:	ldr	r3, [sp, #20]
   18a18:	bl	129dc <coda_cursor_read_bits@plt>
   18a1c:	cmp	r0, #0
   18a20:	beq	18a30 <print_json_data@@Base+0x8ac>
   18a24:	ldr	r0, [pc, #964]	; 18df0 <print_json_data@@Base+0xc6c>
   18a28:	ldr	r0, [pc, r0]
   18a2c:	blx	r0
   18a30:	ldr	r0, [pc, #1088]	; 18e78 <print_json_data@@Base+0xcf4>
   18a34:	add	r0, pc, r0
   18a38:	bl	18e7c <print_json_data@@Base+0xcf8>
   18a3c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18a40:	ldr	r2, [fp, #-128]	; 0xffffff80
   18a44:	str	r0, [sp, #16]
   18a48:	mov	r0, r1
   18a4c:	mov	r1, r2
   18a50:	bl	18ee4 <print_json_data@@Base+0xd60>
   18a54:	ldr	r0, [pc, #920]	; 18df4 <print_json_data@@Base+0xc70>
   18a58:	add	r0, pc, r0
   18a5c:	bl	18e7c <print_json_data@@Base+0xcf8>
   18a60:	ldr	r1, [fp, #-132]	; 0xffffff7c
   18a64:	str	r0, [sp, #12]
   18a68:	mov	r0, r1
   18a6c:	bl	12658 <free@plt>
   18a70:	b	18bcc <print_json_data@@Base+0xa48>
   18a74:	ldr	r0, [fp, #-12]
   18a78:	sub	r1, fp, #136	; 0x88
   18a7c:	bl	12988 <coda_cursor_read_int32@plt>
   18a80:	cmp	r0, #0
   18a84:	beq	18a94 <print_json_data@@Base+0x910>
   18a88:	ldr	r0, [pc, #840]	; 18dd8 <print_json_data@@Base+0xc54>
   18a8c:	ldr	r0, [pc, r0]
   18a90:	blx	r0
   18a94:	ldr	r0, [pc, #832]	; 18ddc <print_json_data@@Base+0xc58>
   18a98:	add	r0, pc, r0
   18a9c:	ldr	r1, [fp, #-136]	; 0xffffff78
   18aa0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18aa4:	b	18bcc <print_json_data@@Base+0xa48>
   18aa8:	ldr	r0, [fp, #-12]
   18aac:	sub	r1, fp, #140	; 0x8c
   18ab0:	bl	1267c <coda_cursor_read_uint32@plt>
   18ab4:	cmp	r0, #0
   18ab8:	beq	18ac8 <print_json_data@@Base+0x944>
   18abc:	ldr	r0, [pc, #780]	; 18dd0 <print_json_data@@Base+0xc4c>
   18ac0:	ldr	r0, [pc, r0]
   18ac4:	blx	r0
   18ac8:	ldr	r0, [pc, #772]	; 18dd4 <print_json_data@@Base+0xc50>
   18acc:	add	r0, pc, r0
   18ad0:	ldr	r1, [fp, #-140]	; 0xffffff74
   18ad4:	bl	18e7c <print_json_data@@Base+0xcf8>
   18ad8:	b	18bcc <print_json_data@@Base+0xa48>
   18adc:	ldr	r0, [fp, #-12]
   18ae0:	sub	r1, fp, #152	; 0x98
   18ae4:	bl	128f8 <coda_cursor_read_int64@plt>
   18ae8:	cmp	r0, #0
   18aec:	beq	18afc <print_json_data@@Base+0x978>
   18af0:	ldr	r0, [pc, #720]	; 18dc8 <print_json_data@@Base+0xc44>
   18af4:	ldr	r0, [pc, r0]
   18af8:	blx	r0
   18afc:	sub	r2, fp, #173	; 0xad
   18b00:	ldr	r0, [fp, #-152]	; 0xffffff68
   18b04:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18b08:	bl	129e8 <coda_str64@plt>
   18b0c:	ldr	r0, [pc, #696]	; 18dcc <print_json_data@@Base+0xc48>
   18b10:	add	r0, pc, r0
   18b14:	sub	r1, fp, #173	; 0xad
   18b18:	bl	18e7c <print_json_data@@Base+0xcf8>
   18b1c:	b	18bcc <print_json_data@@Base+0xa48>
   18b20:	ldr	r0, [fp, #-12]
   18b24:	add	r1, sp, #176	; 0xb0
   18b28:	bl	127f0 <coda_cursor_read_uint64@plt>
   18b2c:	cmp	r0, #0
   18b30:	beq	18b40 <print_json_data@@Base+0x9bc>
   18b34:	ldr	r0, [pc, #644]	; 18dc0 <print_json_data@@Base+0xc3c>
   18b38:	ldr	r0, [pc, r0]
   18b3c:	blx	r0
   18b40:	add	r2, sp, #155	; 0x9b
   18b44:	ldr	r0, [sp, #176]	; 0xb0
   18b48:	ldr	r1, [sp, #180]	; 0xb4
   18b4c:	bl	1264c <coda_str64u@plt>
   18b50:	ldr	r0, [pc, #620]	; 18dc4 <print_json_data@@Base+0xc40>
   18b54:	add	r0, pc, r0
   18b58:	add	r1, sp, #155	; 0x9b
   18b5c:	bl	18e7c <print_json_data@@Base+0xcf8>
   18b60:	b	18bcc <print_json_data@@Base+0xa48>
   18b64:	ldr	r0, [fp, #-12]
   18b68:	add	r1, sp, #144	; 0x90
   18b6c:	bl	127fc <coda_cursor_read_double@plt>
   18b70:	cmp	r0, #0
   18b74:	beq	18b84 <print_json_data@@Base+0xa00>
   18b78:	ldr	r0, [pc, #564]	; 18db4 <print_json_data@@Base+0xc30>
   18b7c:	ldr	r0, [pc, r0]
   18b80:	blx	r0
   18b84:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18b88:	cmp	r0, #8
   18b8c:	bne	18ba8 <print_json_data@@Base+0xa24>
   18b90:	ldr	r0, [pc, #548]	; 18dbc <print_json_data@@Base+0xc38>
   18b94:	add	r0, pc, r0
   18b98:	vldr	d16, [sp, #144]	; 0x90
   18b9c:	vmov	r2, r3, d16
   18ba0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18ba4:	b	18bbc <print_json_data@@Base+0xa38>
   18ba8:	ldr	r0, [pc, #520]	; 18db8 <print_json_data@@Base+0xc34>
   18bac:	add	r0, pc, r0
   18bb0:	vldr	d16, [sp, #144]	; 0x90
   18bb4:	vmov	r2, r3, d16
   18bb8:	bl	18e7c <print_json_data@@Base+0xcf8>
   18bbc:	b	18bcc <print_json_data@@Base+0xa48>
   18bc0:	ldr	r0, [pc, #488]	; 18db0 <print_json_data@@Base+0xc2c>
   18bc4:	add	r0, pc, r0
   18bc8:	bl	18e7c <print_json_data@@Base+0xcf8>
   18bcc:	b	18d48 <print_json_data@@Base+0xbc4>
   18bd0:	ldr	r0, [fp, #-12]
   18bd4:	add	r1, sp, #140	; 0x8c
   18bd8:	bl	12724 <coda_cursor_get_special_type@plt>
   18bdc:	cmp	r0, #0
   18be0:	beq	18bf0 <print_json_data@@Base+0xa6c>
   18be4:	ldr	r0, [pc, #404]	; 18d80 <print_json_data@@Base+0xbfc>
   18be8:	ldr	r0, [pc, r0]
   18bec:	blx	r0
   18bf0:	ldr	r0, [sp, #140]	; 0x8c
   18bf4:	cmp	r0, #3
   18bf8:	str	r0, [sp, #8]
   18bfc:	bhi	18d44 <print_json_data@@Base+0xbc0>
   18c00:	add	r0, pc, #8
   18c04:	ldr	r1, [sp, #8]
   18c08:	ldr	r2, [r0, r1, lsl #2]
   18c0c:	add	pc, r0, r2
   18c10:	andeq	r0, r0, r0, lsl r0
   18c14:	andeq	r0, r0, r0, lsr #32
   18c18:	andeq	r0, r0, r8, asr r0
   18c1c:	strdeq	r0, [r0], -r4
   18c20:	ldr	r0, [pc, #384]	; 18da8 <print_json_data@@Base+0xc24>
   18c24:	add	r0, pc, r0
   18c28:	bl	18e7c <print_json_data@@Base+0xcf8>
   18c2c:	b	18d44 <print_json_data@@Base+0xbc0>
   18c30:	ldr	r0, [fp, #-12]
   18c34:	add	r1, sp, #128	; 0x80
   18c38:	bl	127fc <coda_cursor_read_double@plt>
   18c3c:	cmp	r0, #0
   18c40:	beq	18c50 <print_json_data@@Base+0xacc>
   18c44:	ldr	r0, [pc, #340]	; 18da0 <print_json_data@@Base+0xc1c>
   18c48:	ldr	r0, [pc, r0]
   18c4c:	blx	r0
   18c50:	ldr	r0, [pc, #332]	; 18da4 <print_json_data@@Base+0xc20>
   18c54:	add	r0, pc, r0
   18c58:	vldr	d16, [sp, #128]	; 0x80
   18c5c:	vmov	r2, r3, d16
   18c60:	bl	18e7c <print_json_data@@Base+0xcf8>
   18c64:	b	18d44 <print_json_data@@Base+0xbc0>
   18c68:	ldr	r0, [fp, #-12]
   18c6c:	add	r1, sp, #120	; 0x78
   18c70:	bl	127fc <coda_cursor_read_double@plt>
   18c74:	cmp	r0, #0
   18c78:	beq	18c88 <print_json_data@@Base+0xb04>
   18c7c:	ldr	r0, [pc, #264]	; 18d8c <print_json_data@@Base+0xc08>
   18c80:	ldr	r0, [pc, r0]
   18c84:	blx	r0
   18c88:	vldr	d0, [sp, #120]	; 0x78
   18c8c:	bl	12808 <coda_isNaN@plt>
   18c90:	cmp	r0, #0
   18c94:	bne	18ca8 <print_json_data@@Base+0xb24>
   18c98:	vldr	d0, [sp, #120]	; 0x78
   18c9c:	bl	126b8 <coda_isInf@plt>
   18ca0:	cmp	r0, #0
   18ca4:	beq	18cc0 <print_json_data@@Base+0xb3c>
   18ca8:	ldr	r0, [pc, #236]	; 18d9c <print_json_data@@Base+0xc18>
   18cac:	add	r0, pc, r0
   18cb0:	vldr	d16, [sp, #120]	; 0x78
   18cb4:	vmov	r2, r3, d16
   18cb8:	bl	18e7c <print_json_data@@Base+0xcf8>
   18cbc:	b	18d00 <print_json_data@@Base+0xb7c>
   18cc0:	ldr	r0, [pc, #200]	; 18d90 <print_json_data@@Base+0xc0c>
   18cc4:	add	r0, pc, r0
   18cc8:	add	r1, sp, #93	; 0x5d
   18ccc:	vldr	d0, [sp, #120]	; 0x78
   18cd0:	bl	12634 <coda_time_double_to_string@plt>
   18cd4:	cmp	r0, #0
   18cd8:	beq	18cec <print_json_data@@Base+0xb68>
   18cdc:	ldr	r0, [pc, #180]	; 18d98 <print_json_data@@Base+0xc14>
   18ce0:	add	r0, pc, r0
   18ce4:	bl	18e7c <print_json_data@@Base+0xcf8>
   18ce8:	b	18cfc <print_json_data@@Base+0xb78>
   18cec:	ldr	r0, [pc, #160]	; 18d94 <print_json_data@@Base+0xc10>
   18cf0:	add	r0, pc, r0
   18cf4:	add	r1, sp, #93	; 0x5d
   18cf8:	bl	18e7c <print_json_data@@Base+0xcf8>
   18cfc:	b	18d00 <print_json_data@@Base+0xb7c>
   18d00:	b	18d44 <print_json_data@@Base+0xbc0>
   18d04:	ldr	r0, [fp, #-12]
   18d08:	add	r1, sp, #80	; 0x50
   18d0c:	add	r2, sp, #72	; 0x48
   18d10:	bl	12898 <coda_cursor_read_complex_double_split@plt>
   18d14:	cmp	r0, #0
   18d18:	beq	18d28 <print_json_data@@Base+0xba4>
   18d1c:	ldr	r0, [pc, #96]	; 18d84 <print_json_data@@Base+0xc00>
   18d20:	ldr	r0, [pc, r0]
   18d24:	blx	r0
   18d28:	ldr	r0, [pc, #88]	; 18d88 <print_json_data@@Base+0xc04>
   18d2c:	add	r0, pc, r0
   18d30:	vldr	d16, [sp, #80]	; 0x50
   18d34:	vldr	d17, [sp, #72]	; 0x48
   18d38:	vmov	r2, r3, d16
   18d3c:	vstr	d17, [sp]
   18d40:	bl	18e7c <print_json_data@@Base+0xcf8>
   18d44:	b	18d48 <print_json_data@@Base+0xbc4>
   18d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   18d4c:	cmp	r0, #0
   18d50:	beq	18d60 <print_json_data@@Base+0xbdc>
   18d54:	ldr	r0, [pc, #280]	; 18e74 <print_json_data@@Base+0xcf0>
   18d58:	add	r0, pc, r0
   18d5c:	bl	18e7c <print_json_data@@Base+0xcf8>
   18d60:	sub	sp, fp, #8
   18d64:	pop	{r4, r5, fp, pc}
   18d68:	andeq	r8, r1, r4, lsr #30
   18d6c:	andeq	r8, r1, r8, lsr #29
   18d70:	andeq	r6, r0, lr, asr lr
   18d74:	andeq	r8, r1, ip, ror #28
   18d78:	andeq	r6, r0, r7, lsr #28
   18d7c:	andeq	r8, r1, r4, lsr #28
   18d80:	strdeq	r8, [r1], -r0
   18d84:			; <UNDEFINED> instruction: 0x000184b8
   18d88:	andeq	r6, r0, r4, lsr r5
   18d8c:	andeq	r8, r1, r8, asr r5
   18d90:	andeq	r6, r0, r4, ror #10
   18d94:	muleq	r0, r8, r6
   18d98:	andeq	r6, r0, r5, ror #10
   18d9c:	andeq	r5, r0, r2, lsr #30
   18da0:	muleq	r1, r0, r5
   18da4:	andeq	r5, r0, sl, ror pc
   18da8:	strdeq	r6, [r0], -pc	; <UNPREDICTABLE>
   18dac:	andeq	r8, r1, r4, lsr #20
   18db0:	andeq	r6, r0, pc, asr r6
   18db4:	andeq	r8, r1, ip, asr r6
   18db8:	andeq	r6, r0, r2, lsr #32
   18dbc:	andeq	r6, r0, r5, lsr r0
   18dc0:	andeq	r8, r1, r0, lsr #13
   18dc4:	strdeq	r6, [r0], -r2
   18dc8:	andeq	r8, r1, r4, ror #13
   18dcc:	andeq	r6, r0, r6, lsr r8
   18dd0:	andeq	r8, r1, r8, lsl r7
   18dd4:	strdeq	r6, [r0], -r9
   18dd8:	andeq	r8, r1, ip, asr #14
   18ddc:	andeq	r6, r0, ip, ror #15
   18de0:	andeq	r8, r1, r4, ror r8
   18de4:	strdeq	r8, [r1], -r0
   18de8:	andeq	r6, r0, ip, asr #2
   18dec:	strdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   18df0:			; <UNDEFINED> instruction: 0x000187b0
   18df4:	andeq	r6, r0, r4, lsl r8
   18df8:	andeq	r8, r1, r8, asr r9
   18dfc:	andeq	r8, r1, r4, lsl #18
   18e00:	andeq	r6, r0, r4, ror #4
   18e04:	andeq	r6, r0, lr, lsl #18
   18e08:	ldrdeq	r8, [r1], -ip
   18e0c:	andeq	r6, r0, r0, asr #18
   18e10:	andeq	r6, r0, r4, ror #18
   18e14:	andeq	r8, r1, r8, lsr #19
   18e18:	andeq	r6, r0, r0, lsl sl
   18e1c:	andeq	r6, r0, r0, lsr sl
   18e20:	andeq	r6, r0, lr, lsr #24
   18e24:	andeq	r8, r1, ip, asr fp
   18e28:	ldrdeq	r8, [r1], -ip
   18e2c:	strdeq	r6, [r0], -r5
   18e30:	ldrdeq	r6, [r0], -r6	; <UNPREDICTABLE>
   18e34:	andeq	r8, r1, r8, ror sl
   18e38:			; <UNDEFINED> instruction: 0x00006dbc
   18e3c:			; <UNDEFINED> instruction: 0x00018db4
   18e40:	andeq	r8, r1, r8, lsl #27
   18e44:	andeq	r8, r1, r8, ror #26
   18e48:	andeq	r8, r1, r8, lsr #25
   18e4c:	andeq	r8, r1, ip, ror #24
   18e50:	andeq	r6, r0, r2, lsl #17
   18e54:	andeq	r8, r1, r8, lsl ip
   18e58:	andeq	r6, r0, lr, ror #23
   18e5c:	andeq	r8, r1, r8, asr #23
   18e60:	andeq	r8, r1, ip, lsr sp
   18e64:	andeq	r8, r1, r8, lsl sp
   18e68:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18e6c:	andeq	r6, r0, lr, asr #25
   18e70:	andeq	r6, r0, r0, lsl #23
   18e74:	andeq	r6, r0, r8, ror #8
   18e78:	andeq	r6, r0, r8, lsr r8
   18e7c:	sub	sp, sp, #12
   18e80:	push	{fp, lr}
   18e84:	mov	fp, sp
   18e88:	sub	sp, sp, #20
   18e8c:	str	r3, [fp, #16]
   18e90:	str	r2, [fp, #12]
   18e94:	str	r1, [fp, #8]
   18e98:	str	r0, [fp, #-4]
   18e9c:	add	r0, fp, #8
   18ea0:	str	r0, [sp, #8]
   18ea4:	ldr	r0, [pc, #52]	; 18ee0 <print_json_data@@Base+0xd5c>
   18ea8:	ldr	r0, [pc, r0]
   18eac:	ldr	r0, [r0]
   18eb0:	ldr	r1, [fp, #-4]
   18eb4:	ldr	r2, [sp, #8]
   18eb8:	bl	12904 <vfprintf@plt>
   18ebc:	str	r0, [fp, #-8]
   18ec0:	add	r0, sp, #8
   18ec4:	ldr	r1, [fp, #-8]
   18ec8:	str	r0, [sp, #4]
   18ecc:	mov	r0, r1
   18ed0:	mov	sp, fp
   18ed4:	pop	{fp, lr}
   18ed8:	add	sp, sp, #12
   18edc:	bx	lr
   18ee0:	andeq	r8, r1, r0, lsl r3
   18ee4:	push	{fp, lr}
   18ee8:	mov	fp, sp
   18eec:	sub	sp, sp, #24
   18ef0:	str	r0, [fp, #-4]
   18ef4:	str	r1, [fp, #-8]
   18ef8:	movw	r0, #0
   18efc:	str	r0, [sp, #12]
   18f00:	ldr	r0, [sp, #12]
   18f04:	ldr	r1, [fp, #-8]
   18f08:	cmp	r0, r1
   18f0c:	bge	1905c <print_json_data@@Base+0xed8>
   18f10:	ldr	r0, [fp, #-4]
   18f14:	ldr	r1, [sp, #12]
   18f18:	ldrb	r0, [r0, r1]
   18f1c:	strb	r0, [sp, #11]
   18f20:	ldrb	r0, [sp, #11]
   18f24:	mov	r1, r0
   18f28:	cmp	r0, #8
   18f2c:	str	r1, [sp, #4]
   18f30:	beq	18f98 <print_json_data@@Base+0xe14>
   18f34:	b	18f38 <print_json_data@@Base+0xdb4>
   18f38:	ldr	r0, [sp, #4]
   18f3c:	cmp	r0, #9
   18f40:	beq	18fd8 <print_json_data@@Base+0xe54>
   18f44:	b	18f48 <print_json_data@@Base+0xdc4>
   18f48:	ldr	r0, [sp, #4]
   18f4c:	cmp	r0, #10
   18f50:	beq	18fb8 <print_json_data@@Base+0xe34>
   18f54:	b	18f58 <print_json_data@@Base+0xdd4>
   18f58:	ldr	r0, [sp, #4]
   18f5c:	cmp	r0, #12
   18f60:	beq	18fa8 <print_json_data@@Base+0xe24>
   18f64:	b	18f68 <print_json_data@@Base+0xde4>
   18f68:	ldr	r0, [sp, #4]
   18f6c:	cmp	r0, #13
   18f70:	beq	18fc8 <print_json_data@@Base+0xe44>
   18f74:	b	18f78 <print_json_data@@Base+0xdf4>
   18f78:	ldr	r0, [sp, #4]
   18f7c:	cmp	r0, #34	; 0x22
   18f80:	beq	18fe8 <print_json_data@@Base+0xe64>
   18f84:	b	18f88 <print_json_data@@Base+0xe04>
   18f88:	ldr	r0, [sp, #4]
   18f8c:	cmp	r0, #92	; 0x5c
   18f90:	beq	18ff8 <print_json_data@@Base+0xe74>
   18f94:	b	19008 <print_json_data@@Base+0xe84>
   18f98:	ldr	r0, [pc, #220]	; 1907c <print_json_data@@Base+0xef8>
   18f9c:	add	r0, pc, r0
   18fa0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18fa4:	b	19048 <print_json_data@@Base+0xec4>
   18fa8:	ldr	r0, [pc, #200]	; 19078 <print_json_data@@Base+0xef4>
   18fac:	add	r0, pc, r0
   18fb0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18fb4:	b	19048 <print_json_data@@Base+0xec4>
   18fb8:	ldr	r0, [pc, #180]	; 19074 <print_json_data@@Base+0xef0>
   18fbc:	add	r0, pc, r0
   18fc0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18fc4:	b	19048 <print_json_data@@Base+0xec4>
   18fc8:	ldr	r0, [pc, #160]	; 19070 <print_json_data@@Base+0xeec>
   18fcc:	add	r0, pc, r0
   18fd0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18fd4:	b	19048 <print_json_data@@Base+0xec4>
   18fd8:	ldr	r0, [pc, #140]	; 1906c <print_json_data@@Base+0xee8>
   18fdc:	add	r0, pc, r0
   18fe0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18fe4:	b	19048 <print_json_data@@Base+0xec4>
   18fe8:	ldr	r0, [pc, #120]	; 19068 <print_json_data@@Base+0xee4>
   18fec:	add	r0, pc, r0
   18ff0:	bl	18e7c <print_json_data@@Base+0xcf8>
   18ff4:	b	19048 <print_json_data@@Base+0xec4>
   18ff8:	ldr	r0, [pc, #100]	; 19064 <print_json_data@@Base+0xee0>
   18ffc:	add	r0, pc, r0
   19000:	bl	18e7c <print_json_data@@Base+0xcf8>
   19004:	b	19048 <print_json_data@@Base+0xec4>
   19008:	ldrb	r0, [sp, #11]
   1900c:	cmp	r0, #32
   19010:	blt	19034 <print_json_data@@Base+0xeb0>
   19014:	ldrb	r0, [sp, #11]
   19018:	cmp	r0, #126	; 0x7e
   1901c:	bgt	19034 <print_json_data@@Base+0xeb0>
   19020:	ldr	r0, [pc, #92]	; 19084 <print_json_data@@Base+0xf00>
   19024:	add	r0, pc, r0
   19028:	ldrb	r1, [sp, #11]
   1902c:	bl	18e7c <print_json_data@@Base+0xcf8>
   19030:	b	19044 <print_json_data@@Base+0xec0>
   19034:	ldr	r0, [pc, #68]	; 19080 <print_json_data@@Base+0xefc>
   19038:	add	r0, pc, r0
   1903c:	ldrb	r1, [sp, #11]
   19040:	bl	18e7c <print_json_data@@Base+0xcf8>
   19044:	b	19048 <print_json_data@@Base+0xec4>
   19048:	b	1904c <print_json_data@@Base+0xec8>
   1904c:	ldr	r0, [sp, #12]
   19050:	add	r0, r0, #1
   19054:	str	r0, [sp, #12]
   19058:	b	18f00 <print_json_data@@Base+0xd7c>
   1905c:	mov	sp, fp
   19060:	pop	{fp, pc}
   19064:	andeq	r5, r0, r0, asr #23
   19068:	andeq	r6, r0, pc, ror r2
   1906c:	ldrdeq	r5, [r0], -r1
   19070:	andeq	r5, r0, sp, ror #23
   19074:	strdeq	r5, [r0], -r4
   19078:	andeq	r5, r0, sl, lsl #24
   1907c:	andeq	r5, r0, lr, lsl #24
   19080:	andeq	r6, r0, r6, lsr r2
   19084:	andeq	r5, r0, r9, ror #21

00019088 <print_full_field_name@@Base>:
   19088:	push	{fp, lr}
   1908c:	mov	fp, sp
   19090:	sub	sp, sp, #64	; 0x40
   19094:	str	r0, [fp, #-4]
   19098:	str	r1, [fp, #-8]
   1909c:	str	r2, [fp, #-12]
   190a0:	ldr	r0, [fp, #-8]
   190a4:	cmp	r0, #1
   190a8:	bne	1929c <print_full_field_name@@Base+0x214>
   190ac:	movw	r0, #0
   190b0:	str	r0, [fp, #-20]	; 0xffffffec
   190b4:	str	r0, [fp, #-24]	; 0xffffffe8
   190b8:	str	r0, [fp, #-16]
   190bc:	ldr	r0, [pc, #1160]	; 1954c <print_full_field_name@@Base+0x4c4>
   190c0:	ldr	r0, [pc, r0]
   190c4:	ldr	r1, [fp, #-16]
   190c8:	ldr	r0, [r0, #136]	; 0x88
   190cc:	cmp	r1, r0
   190d0:	bge	1923c <print_full_field_name@@Base+0x1b4>
   190d4:	ldr	r0, [pc, #1152]	; 1955c <print_full_field_name@@Base+0x4d4>
   190d8:	ldr	r0, [pc, r0]
   190dc:	add	r0, r0, #8
   190e0:	ldr	r1, [fp, #-16]
   190e4:	ldr	r2, [pc, #1168]	; 1957c <print_full_field_name@@Base+0x4f4>
   190e8:	ldr	r2, [pc, r2]
   190ec:	add	r1, r2, r1, lsl #2
   190f0:	add	r1, r1, #8
   190f4:	ldr	r1, [r1]
   190f8:	str	r0, [sp, #24]
   190fc:	mov	r0, r1
   19100:	sub	r1, fp, #28
   19104:	bl	12a00 <coda_type_get_class@plt>
   19108:	cmp	r0, #0
   1910c:	beq	1911c <print_full_field_name@@Base+0x94>
   19110:	ldr	r0, [pc, #1096]	; 19560 <print_full_field_name@@Base+0x4d8>
   19114:	ldr	r0, [pc, r0]
   19118:	blx	r0
   1911c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19120:	cmp	r0, #0
   19124:	str	r0, [sp, #20]
   19128:	beq	19140 <print_full_field_name@@Base+0xb8>
   1912c:	b	19130 <print_full_field_name@@Base+0xa8>
   19130:	ldr	r0, [sp, #20]
   19134:	cmp	r0, #1
   19138:	beq	19198 <print_full_field_name@@Base+0x110>
   1913c:	b	19224 <print_full_field_name@@Base+0x19c>
   19140:	ldr	r0, [pc, #1068]	; 19574 <print_full_field_name@@Base+0x4ec>
   19144:	add	r1, pc, r0
   19148:	ldr	r0, [pc, #1064]	; 19578 <print_full_field_name@@Base+0x4f0>
   1914c:	ldr	r0, [pc, r0]
   19150:	movw	r2, #3620	; 0xe24
   19154:	add	r0, r0, r2
   19158:	ldr	r2, [fp, #-4]
   1915c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19160:	ldr	ip, [pc, #1048]	; 19580 <print_full_field_name@@Base+0x4f8>
   19164:	ldr	ip, [pc, ip]
   19168:	add	r3, ip, r3, lsl #2
   1916c:	movw	ip, #3620	; 0xe24
   19170:	add	r3, r3, ip
   19174:	ldr	r3, [r3]
   19178:	str	r0, [sp, #16]
   1917c:	mov	r0, r2
   19180:	mov	r2, r3
   19184:	bl	12814 <fprintf@plt>
   19188:	ldr	r1, [fp, #-20]	; 0xffffffec
   1918c:	add	r1, r1, #1
   19190:	str	r1, [fp, #-20]	; 0xffffffec
   19194:	b	19228 <print_full_field_name@@Base+0x1a0>
   19198:	ldr	r0, [fp, #-16]
   1919c:	cmp	r0, #0
   191a0:	bne	191b4 <print_full_field_name@@Base+0x12c>
   191a4:	ldr	r0, [pc, #952]	; 19564 <print_full_field_name@@Base+0x4dc>
   191a8:	add	r1, pc, r0
   191ac:	ldr	r0, [fp, #-4]
   191b0:	bl	12814 <fprintf@plt>
   191b4:	ldr	r0, [pc, #940]	; 19568 <print_full_field_name@@Base+0x4e0>
   191b8:	ldr	r0, [pc, r0]
   191bc:	add	r0, r0, #800	; 0x320
   191c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191c4:	movw	r2, #80	; 0x50
   191c8:	mul	r1, r1, r2
   191cc:	add	r0, r0, r1
   191d0:	ldr	r0, [r0, #4]
   191d4:	cmp	r0, #0
   191d8:	ble	19214 <print_full_field_name@@Base+0x18c>
   191dc:	ldr	r0, [pc, #908]	; 19570 <print_full_field_name@@Base+0x4e8>
   191e0:	add	r1, pc, r0
   191e4:	ldr	r0, [fp, #-4]
   191e8:	bl	12814 <fprintf@plt>
   191ec:	ldr	r1, [fp, #-4]
   191f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   191f4:	str	r0, [sp, #12]
   191f8:	mov	r0, r1
   191fc:	mov	r1, r2
   19200:	bl	1958c <print_full_field_name@@Base+0x504>
   19204:	ldr	r0, [pc, #864]	; 1956c <print_full_field_name@@Base+0x4e4>
   19208:	add	r1, pc, r0
   1920c:	ldr	r0, [fp, #-4]
   19210:	bl	12814 <fprintf@plt>
   19214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19218:	add	r0, r0, #1
   1921c:	str	r0, [fp, #-24]	; 0xffffffe8
   19220:	b	19228 <print_full_field_name@@Base+0x1a0>
   19224:	b	19228 <print_full_field_name@@Base+0x1a0>
   19228:	b	1922c <print_full_field_name@@Base+0x1a4>
   1922c:	ldr	r0, [fp, #-16]
   19230:	add	r0, r0, #1
   19234:	str	r0, [fp, #-16]
   19238:	b	190bc <print_full_field_name@@Base+0x34>
   1923c:	ldr	r0, [fp, #-12]
   19240:	cmp	r0, #0
   19244:	beq	19298 <print_full_field_name@@Base+0x210>
   19248:	ldr	r0, [pc, #768]	; 19550 <print_full_field_name@@Base+0x4c8>
   1924c:	ldr	r0, [pc, r0]
   19250:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19254:	ldr	r0, [r0, #3360]	; 0xd20
   19258:	cmp	r1, r0
   1925c:	bge	19298 <print_full_field_name@@Base+0x210>
   19260:	ldr	r0, [pc, #752]	; 19558 <print_full_field_name@@Base+0x4d0>
   19264:	add	r1, pc, r0
   19268:	ldr	r0, [fp, #-4]
   1926c:	bl	12814 <fprintf@plt>
   19270:	ldr	r1, [fp, #-4]
   19274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19278:	str	r0, [sp, #8]
   1927c:	mov	r0, r1
   19280:	mov	r1, r2
   19284:	bl	1958c <print_full_field_name@@Base+0x504>
   19288:	ldr	r0, [pc, #708]	; 19554 <print_full_field_name@@Base+0x4cc>
   1928c:	add	r1, pc, r0
   19290:	ldr	r0, [fp, #-4]
   19294:	bl	12814 <fprintf@plt>
   19298:	b	19504 <print_full_field_name@@Base+0x47c>
   1929c:	movw	r0, #0
   192a0:	str	r0, [fp, #-16]
   192a4:	ldr	r0, [pc, #608]	; 1950c <print_full_field_name@@Base+0x484>
   192a8:	ldr	r0, [pc, r0]
   192ac:	ldr	r1, [fp, #-16]
   192b0:	ldr	r0, [r0, #3748]	; 0xea4
   192b4:	cmp	r1, r0
   192b8:	bge	19330 <print_full_field_name@@Base+0x2a8>
   192bc:	ldr	r0, [fp, #-16]
   192c0:	cmp	r0, #0
   192c4:	ble	192d8 <print_full_field_name@@Base+0x250>
   192c8:	ldr	r0, [pc, #624]	; 19540 <print_full_field_name@@Base+0x4b8>
   192cc:	add	r1, pc, r0
   192d0:	ldr	r0, [fp, #-4]
   192d4:	bl	12814 <fprintf@plt>
   192d8:	ldr	r0, [pc, #612]	; 19544 <print_full_field_name@@Base+0x4bc>
   192dc:	add	r1, pc, r0
   192e0:	ldr	r0, [pc, #608]	; 19548 <print_full_field_name@@Base+0x4c0>
   192e4:	ldr	r0, [pc, r0]
   192e8:	movw	r2, #3620	; 0xe24
   192ec:	add	r0, r0, r2
   192f0:	ldr	r2, [fp, #-4]
   192f4:	ldr	r3, [fp, #-16]
   192f8:	ldr	ip, [pc, #644]	; 19584 <print_full_field_name@@Base+0x4fc>
   192fc:	ldr	ip, [pc, ip]
   19300:	add	r3, ip, r3, lsl #2
   19304:	movw	ip, #3620	; 0xe24
   19308:	add	r3, r3, ip
   1930c:	ldr	r3, [r3]
   19310:	str	r0, [sp, #4]
   19314:	mov	r0, r2
   19318:	mov	r2, r3
   1931c:	bl	12814 <fprintf@plt>
   19320:	ldr	r0, [fp, #-16]
   19324:	add	r0, r0, #1
   19328:	str	r0, [fp, #-16]
   1932c:	b	192a4 <print_full_field_name@@Base+0x21c>
   19330:	ldr	r0, [fp, #-8]
   19334:	cmp	r0, #2
   19338:	bne	19500 <print_full_field_name@@Base+0x478>
   1933c:	movw	r0, #0
   19340:	str	r0, [sp, #32]
   19344:	str	r0, [fp, #-16]
   19348:	ldr	r0, [pc, #448]	; 19510 <print_full_field_name@@Base+0x488>
   1934c:	ldr	r0, [pc, r0]
   19350:	ldr	r1, [fp, #-16]
   19354:	ldr	r0, [r0, #136]	; 0x88
   19358:	cmp	r1, r0
   1935c:	bge	19458 <print_full_field_name@@Base+0x3d0>
   19360:	ldr	r0, [pc, #448]	; 19528 <print_full_field_name@@Base+0x4a0>
   19364:	ldr	r0, [pc, r0]
   19368:	add	r0, r0, #8
   1936c:	ldr	r1, [fp, #-16]
   19370:	ldr	r2, [pc, #528]	; 19588 <print_full_field_name@@Base+0x500>
   19374:	ldr	r2, [pc, r2]
   19378:	add	r1, r2, r1, lsl #2
   1937c:	add	r1, r1, #8
   19380:	ldr	r1, [r1]
   19384:	str	r0, [sp]
   19388:	mov	r0, r1
   1938c:	add	r1, sp, #28
   19390:	bl	12a00 <coda_type_get_class@plt>
   19394:	cmp	r0, #0
   19398:	beq	193a8 <print_full_field_name@@Base+0x320>
   1939c:	ldr	r0, [pc, #392]	; 1952c <print_full_field_name@@Base+0x4a4>
   193a0:	ldr	r0, [pc, r0]
   193a4:	blx	r0
   193a8:	ldr	r0, [sp, #28]
   193ac:	cmp	r0, #1
   193b0:	bne	19444 <print_full_field_name@@Base+0x3bc>
   193b4:	ldr	r0, [pc, #372]	; 19530 <print_full_field_name@@Base+0x4a8>
   193b8:	ldr	r0, [pc, r0]
   193bc:	add	r0, r0, #800	; 0x320
   193c0:	ldr	r1, [sp, #32]
   193c4:	movw	r2, #80	; 0x50
   193c8:	mul	r1, r1, r2
   193cc:	add	r0, r0, r1
   193d0:	ldr	r0, [r0, #4]
   193d4:	cmp	r0, #0
   193d8:	ble	19440 <print_full_field_name@@Base+0x3b8>
   193dc:	ldr	r0, [pc, #336]	; 19534 <print_full_field_name@@Base+0x4ac>
   193e0:	ldr	r0, [pc, r0]
   193e4:	add	r0, r0, #800	; 0x320
   193e8:	ldr	r1, [sp, #32]
   193ec:	movw	r2, #80	; 0x50
   193f0:	mul	r1, r1, r2
   193f4:	add	r0, r0, r1
   193f8:	ldr	r0, [r0]
   193fc:	cmp	r0, #0
   19400:	bne	19418 <print_full_field_name@@Base+0x390>
   19404:	ldr	r0, [pc, #304]	; 1953c <print_full_field_name@@Base+0x4b4>
   19408:	add	r1, pc, r0
   1940c:	ldr	r0, [fp, #-4]
   19410:	bl	12814 <fprintf@plt>
   19414:	b	19428 <print_full_field_name@@Base+0x3a0>
   19418:	ldr	r0, [pc, #280]	; 19538 <print_full_field_name@@Base+0x4b0>
   1941c:	add	r1, pc, r0
   19420:	ldr	r0, [fp, #-4]
   19424:	bl	12814 <fprintf@plt>
   19428:	ldr	r0, [fp, #-4]
   1942c:	ldr	r1, [sp, #32]
   19430:	bl	1958c <print_full_field_name@@Base+0x504>
   19434:	ldr	r0, [sp, #32]
   19438:	add	r0, r0, #1
   1943c:	str	r0, [sp, #32]
   19440:	b	19444 <print_full_field_name@@Base+0x3bc>
   19444:	b	19448 <print_full_field_name@@Base+0x3c0>
   19448:	ldr	r0, [fp, #-16]
   1944c:	add	r0, r0, #1
   19450:	str	r0, [fp, #-16]
   19454:	b	19348 <print_full_field_name@@Base+0x2c0>
   19458:	ldr	r0, [fp, #-12]
   1945c:	cmp	r0, #0
   19460:	beq	194e0 <print_full_field_name@@Base+0x458>
   19464:	ldr	r0, [pc, #168]	; 19514 <print_full_field_name@@Base+0x48c>
   19468:	ldr	r0, [pc, r0]
   1946c:	ldr	r1, [sp, #32]
   19470:	ldr	r0, [r0, #3360]	; 0xd20
   19474:	cmp	r1, r0
   19478:	bge	194e0 <print_full_field_name@@Base+0x458>
   1947c:	ldr	r0, [pc, #148]	; 19518 <print_full_field_name@@Base+0x490>
   19480:	ldr	r0, [pc, r0]
   19484:	add	r0, r0, #800	; 0x320
   19488:	ldr	r1, [sp, #32]
   1948c:	movw	r2, #80	; 0x50
   19490:	mul	r1, r1, r2
   19494:	add	r0, r0, r1
   19498:	ldr	r0, [r0]
   1949c:	cmp	r0, #0
   194a0:	bne	194b8 <print_full_field_name@@Base+0x430>
   194a4:	ldr	r0, [pc, #116]	; 19520 <print_full_field_name@@Base+0x498>
   194a8:	add	r1, pc, r0
   194ac:	ldr	r0, [fp, #-4]
   194b0:	bl	12814 <fprintf@plt>
   194b4:	b	194c8 <print_full_field_name@@Base+0x440>
   194b8:	ldr	r0, [pc, #92]	; 1951c <print_full_field_name@@Base+0x494>
   194bc:	add	r1, pc, r0
   194c0:	ldr	r0, [fp, #-4]
   194c4:	bl	12814 <fprintf@plt>
   194c8:	ldr	r0, [fp, #-4]
   194cc:	ldr	r1, [sp, #32]
   194d0:	bl	1958c <print_full_field_name@@Base+0x504>
   194d4:	ldr	r0, [sp, #32]
   194d8:	add	r0, r0, #1
   194dc:	str	r0, [sp, #32]
   194e0:	ldr	r0, [sp, #32]
   194e4:	cmp	r0, #0
   194e8:	ble	194fc <print_full_field_name@@Base+0x474>
   194ec:	ldr	r0, [pc, #48]	; 19524 <print_full_field_name@@Base+0x49c>
   194f0:	add	r1, pc, r0
   194f4:	ldr	r0, [fp, #-4]
   194f8:	bl	12814 <fprintf@plt>
   194fc:	b	19500 <print_full_field_name@@Base+0x478>
   19500:	b	19504 <print_full_field_name@@Base+0x47c>
   19504:	mov	sp, fp
   19508:	pop	{fp, pc}
   1950c:	andeq	r7, r1, r4, lsl #30
   19510:	andeq	r7, r1, r0, ror #28
   19514:	andeq	r7, r1, r4, asr #26
   19518:	andeq	r7, r1, ip, lsr #26
   1951c:	andeq	r5, r0, r6, asr r9
   19520:	ldrdeq	r5, [r0], -r5	; <UNPREDICTABLE>
   19524:	muleq	r0, r5, lr
   19528:	andeq	r7, r1, r8, asr #28
   1952c:	andeq	r7, r1, r8, lsr lr
   19530:	strdeq	r7, [r1], -r4
   19534:	andeq	r7, r1, ip, asr #27
   19538:	strdeq	r5, [r0], -r6
   1953c:	andeq	r5, r0, r5, ror lr
   19540:	andeq	r5, r0, pc, lsr #31
   19544:	andeq	r6, r0, sl, rrx
   19548:	andeq	r7, r1, r8, asr #29
   1954c:	andeq	r8, r1, ip, ror #1
   19550:	andeq	r7, r1, r0, ror #30
   19554:	strdeq	r6, [r0], -r9
   19558:	andeq	r6, r0, sl, lsl r0
   1955c:	ldrdeq	r8, [r1], -r4
   19560:	andeq	r8, r1, r4, asr #1
   19564:	ldrdeq	r6, [r0], -r1
   19568:	strdeq	r7, [r1], -r4
   1956c:	andeq	r6, r0, sp, ror r1
   19570:	muleq	r0, lr, r0
   19574:	andeq	r6, r0, r1, lsr r1
   19578:	andeq	r8, r1, r0, rrx
   1957c:	andeq	r8, r1, r4, asr #1
   19580:	andeq	r8, r1, r8, asr #32
   19584:			; <UNDEFINED> instruction: 0x00017eb0
   19588:	andeq	r7, r1, r8, lsr lr
   1958c:	push	{fp, lr}
   19590:	mov	fp, sp
   19594:	sub	sp, sp, #24
   19598:	ldr	r2, [pc, #444]	; 1975c <print_full_field_name@@Base+0x6d4>
   1959c:	ldr	r2, [pc, r2]
   195a0:	add	r2, r2, #800	; 0x320
   195a4:	str	r0, [fp, #-4]
   195a8:	str	r1, [fp, #-8]
   195ac:	ldr	r0, [fp, #-8]
   195b0:	movw	r1, #80	; 0x50
   195b4:	mul	r0, r0, r1
   195b8:	add	r0, r2, r0
   195bc:	str	r0, [sp, #12]
   195c0:	movw	r0, #0
   195c4:	str	r0, [sp, #8]
   195c8:	ldr	r0, [sp, #8]
   195cc:	ldr	r1, [sp, #12]
   195d0:	ldr	r1, [r1, #4]
   195d4:	cmp	r0, r1
   195d8:	bge	19754 <print_full_field_name@@Base+0x6cc>
   195dc:	ldr	r0, [sp, #8]
   195e0:	cmp	r0, #0
   195e4:	ble	195f8 <print_full_field_name@@Base+0x570>
   195e8:	ldr	r0, [pc, #368]	; 19760 <print_full_field_name@@Base+0x6d8>
   195ec:	add	r1, pc, r0
   195f0:	ldr	r0, [fp, #-4]
   195f4:	bl	12814 <fprintf@plt>
   195f8:	ldr	r0, [pc, #356]	; 19764 <print_full_field_name@@Base+0x6dc>
   195fc:	ldr	r0, [pc, r0]
   19600:	ldr	r0, [r0]
   19604:	cmp	r0, #0
   19608:	beq	196e8 <print_full_field_name@@Base+0x660>
   1960c:	ldr	r0, [pc, #348]	; 19770 <print_full_field_name@@Base+0x6e8>
   19610:	ldr	r0, [pc, r0]
   19614:	add	r0, r0, #72	; 0x48
   19618:	ldr	r1, [sp, #12]
   1961c:	ldr	r1, [r1]
   19620:	ldr	r2, [sp, #8]
   19624:	add	r1, r1, r2
   19628:	ldr	r2, [pc, #340]	; 19784 <print_full_field_name@@Base+0x6fc>
   1962c:	ldr	r2, [pc, r2]
   19630:	add	r1, r2, r1, lsl #2
   19634:	add	r1, r1, #72	; 0x48
   19638:	ldr	r1, [r1]
   1963c:	cmp	r1, #0
   19640:	beq	19698 <print_full_field_name@@Base+0x610>
   19644:	ldr	r0, [pc, #304]	; 1977c <print_full_field_name@@Base+0x6f4>
   19648:	add	r1, pc, r0
   1964c:	ldr	r0, [pc, #300]	; 19780 <print_full_field_name@@Base+0x6f8>
   19650:	ldr	r0, [pc, r0]
   19654:	add	r0, r0, #4
   19658:	ldr	r2, [fp, #-4]
   1965c:	ldr	r3, [sp, #12]
   19660:	ldr	r3, [r3]
   19664:	ldr	ip, [sp, #8]
   19668:	add	r3, r3, ip
   1966c:	ldr	ip, [pc, #276]	; 19788 <print_full_field_name@@Base+0x700>
   19670:	ldr	ip, [pc, ip]
   19674:	add	r3, ip, r3, lsl #2
   19678:	ldr	ip, [r3, #36]	; 0x24
   1967c:	add	r3, r3, #4
   19680:	ldr	r3, [r3]
   19684:	str	r0, [sp, #4]
   19688:	mov	r0, r2
   1968c:	mov	r2, ip
   19690:	bl	12814 <fprintf@plt>
   19694:	b	196e4 <print_full_field_name@@Base+0x65c>
   19698:	ldr	r0, [pc, #212]	; 19774 <print_full_field_name@@Base+0x6ec>
   1969c:	add	r1, pc, r0
   196a0:	ldr	r0, [pc, #208]	; 19778 <print_full_field_name@@Base+0x6f0>
   196a4:	ldr	r0, [pc, r0]
   196a8:	add	r0, r0, #4
   196ac:	ldr	r2, [fp, #-4]
   196b0:	ldr	r3, [sp, #12]
   196b4:	ldr	r3, [r3]
   196b8:	ldr	ip, [sp, #8]
   196bc:	add	r3, r3, ip
   196c0:	ldr	ip, [pc, #196]	; 1978c <print_full_field_name@@Base+0x704>
   196c4:	ldr	ip, [pc, ip]
   196c8:	add	r3, ip, r3, lsl #2
   196cc:	add	r3, r3, #4
   196d0:	ldr	r3, [r3]
   196d4:	str	r0, [sp]
   196d8:	mov	r0, r2
   196dc:	mov	r2, r3
   196e0:	bl	12814 <fprintf@plt>
   196e4:	b	19740 <print_full_field_name@@Base+0x6b8>
   196e8:	ldr	r0, [sp, #12]
   196ec:	add	r0, r0, #8
   196f0:	ldr	r1, [sp, #8]
   196f4:	add	r0, r0, r1, lsl #2
   196f8:	ldr	r0, [r0]
   196fc:	cmn	r0, #1
   19700:	bne	19718 <print_full_field_name@@Base+0x690>
   19704:	ldr	r0, [pc, #96]	; 1976c <print_full_field_name@@Base+0x6e4>
   19708:	add	r1, pc, r0
   1970c:	ldr	r0, [fp, #-4]
   19710:	bl	12814 <fprintf@plt>
   19714:	b	1973c <print_full_field_name@@Base+0x6b4>
   19718:	ldr	r0, [pc, #72]	; 19768 <print_full_field_name@@Base+0x6e0>
   1971c:	add	r1, pc, r0
   19720:	ldr	r0, [fp, #-4]
   19724:	ldr	r2, [sp, #12]
   19728:	add	r2, r2, #8
   1972c:	ldr	r3, [sp, #8]
   19730:	add	r2, r2, r3, lsl #2
   19734:	ldr	r2, [r2]
   19738:	bl	12814 <fprintf@plt>
   1973c:	b	19740 <print_full_field_name@@Base+0x6b8>
   19740:	b	19744 <print_full_field_name@@Base+0x6bc>
   19744:	ldr	r0, [sp, #8]
   19748:	add	r0, r0, #1
   1974c:	str	r0, [sp, #8]
   19750:	b	195c8 <print_full_field_name@@Base+0x540>
   19754:	mov	sp, fp
   19758:	pop	{fp, pc}
   1975c:	andeq	r7, r1, r0, lsl ip
   19760:	andeq	r5, r0, r6, lsr #16
   19764:	andeq	r7, r1, ip, lsr #23
   19768:	andeq	r5, r0, r8, ror #22
   1976c:	andeq	r5, r0, r0, lsl #23
   19770:	andeq	r7, r1, r0, ror #23
   19774:	andeq	r5, r0, r8, ror #23
   19778:	andeq	r7, r1, ip, asr #22
   1977c:	andeq	r5, r0, r8, lsr ip
   19780:	andeq	r7, r1, r0, lsr #23
   19784:	andeq	r7, r1, r4, asr #23
   19788:	andeq	r7, r1, r0, lsl #23
   1978c:	andeq	r7, r1, ip, lsr #22

00019790 <traverse_info_init@@Base>:
   19790:	ldr	r0, [pc, #24]	; 197b0 <traverse_info_init@@Base+0x20>
   19794:	ldr	r0, [pc, r0]
   19798:	movw	r1, #0
   1979c:	str	r1, [r0, #4]
   197a0:	str	r1, [r0, #136]	; 0x88
   197a4:	str	r1, [r0, #3360]	; 0xd20
   197a8:	str	r1, [r0, #3748]	; 0xea4
   197ac:	bx	lr
   197b0:	andeq	r7, r1, r8, lsl sl

000197b4 <traverse_info_done@@Base>:
   197b4:	push	{fp, lr}
   197b8:	mov	fp, sp
   197bc:	ldr	r0, [pc, #76]	; 19810 <traverse_info_done@@Base+0x5c>
   197c0:	ldr	r0, [pc, r0]
   197c4:	ldr	r0, [r0, #4]
   197c8:	movw	r1, #0
   197cc:	cmp	r0, r1
   197d0:	beq	197e4 <traverse_info_done@@Base+0x30>
   197d4:	ldr	r0, [pc, #56]	; 19814 <traverse_info_done@@Base+0x60>
   197d8:	ldr	r0, [pc, r0]
   197dc:	ldr	r0, [r0, #4]
   197e0:	bl	128ec <coda_close@plt>
   197e4:	ldr	r0, [pc, #44]	; 19818 <traverse_info_done@@Base+0x64>
   197e8:	ldr	r0, [pc, r0]
   197ec:	ldr	r0, [r0, #664]	; 0x298
   197f0:	movw	r1, #0
   197f4:	cmp	r0, r1
   197f8:	beq	1980c <traverse_info_done@@Base+0x58>
   197fc:	ldr	r0, [pc, #24]	; 1981c <traverse_info_done@@Base+0x68>
   19800:	ldr	r0, [pc, r0]
   19804:	add	r0, r0, #664	; 0x298
   19808:	bl	17954 <codadump_filter_remove@@Base>
   1980c:	pop	{fp, pc}
   19810:	andeq	r7, r1, ip, ror #19
   19814:	ldrdeq	r7, [r1], -r4
   19818:	andeq	r7, r1, r4, asr #19
   1981c:	andeq	r7, r1, ip, lsr #19

00019820 <traverse_product@@Base>:
   19820:	push	{fp, lr}
   19824:	mov	fp, sp
   19828:	sub	sp, sp, #16
   1982c:	ldr	r0, [pc, #288]	; 19954 <traverse_product@@Base+0x134>
   19830:	ldr	r0, [pc, r0]
   19834:	add	r1, r0, #4
   19838:	ldr	r0, [r0]
   1983c:	bl	1261c <coda_open@plt>
   19840:	str	r0, [fp, #-4]
   19844:	ldr	r0, [fp, #-4]
   19848:	cmp	r0, #0
   1984c:	beq	19894 <traverse_product@@Base+0x74>
   19850:	bl	129ac <coda_get_errno@plt>
   19854:	ldr	r0, [r0]
   19858:	cmn	r0, #21
   1985c:	bne	19894 <traverse_product@@Base+0x74>
   19860:	movw	r0, #0
   19864:	bl	12664 <coda_set_option_use_mmap@plt>
   19868:	ldr	r1, [pc, #232]	; 19958 <traverse_product@@Base+0x138>
   1986c:	ldr	r1, [pc, r1]
   19870:	add	r2, r1, #4
   19874:	ldr	r1, [r1]
   19878:	str	r0, [sp, #8]
   1987c:	mov	r0, r1
   19880:	mov	r1, r2
   19884:	bl	1261c <coda_open@plt>
   19888:	str	r0, [fp, #-4]
   1988c:	movw	r0, #1
   19890:	bl	12664 <coda_set_option_use_mmap@plt>
   19894:	ldr	r0, [fp, #-4]
   19898:	cmp	r0, #0
   1989c:	beq	198ac <traverse_product@@Base+0x8c>
   198a0:	ldr	r0, [pc, #180]	; 1995c <traverse_product@@Base+0x13c>
   198a4:	ldr	r0, [pc, r0]
   198a8:	blx	r0
   198ac:	ldr	r0, [pc, #172]	; 19960 <traverse_product@@Base+0x140>
   198b0:	ldr	r0, [pc, r0]
   198b4:	add	r1, r0, #144	; 0x90
   198b8:	ldr	r0, [r0, #4]
   198bc:	str	r0, [sp, #4]
   198c0:	mov	r0, r1
   198c4:	ldr	r1, [sp, #4]
   198c8:	bl	1273c <coda_cursor_set_product@plt>
   198cc:	cmp	r0, #0
   198d0:	beq	198e0 <traverse_product@@Base+0xc0>
   198d4:	ldr	r0, [pc, #136]	; 19964 <traverse_product@@Base+0x144>
   198d8:	ldr	r0, [pc, r0]
   198dc:	blx	r0
   198e0:	ldr	r0, [pc, #128]	; 19968 <traverse_product@@Base+0x148>
   198e4:	ldr	r0, [pc, r0]
   198e8:	add	r1, r0, #144	; 0x90
   198ec:	add	r0, r0, #8
   198f0:	ldr	r2, [pc, #128]	; 19978 <traverse_product@@Base+0x158>
   198f4:	ldr	r2, [pc, r2]
   198f8:	ldr	r3, [r2, #136]	; 0x88
   198fc:	add	r2, r2, r3, lsl #2
   19900:	add	r2, r2, #8
   19904:	str	r0, [sp]
   19908:	mov	r0, r1
   1990c:	mov	r1, r2
   19910:	bl	126a0 <coda_cursor_get_type@plt>
   19914:	cmp	r0, #0
   19918:	beq	19928 <traverse_product@@Base+0x108>
   1991c:	ldr	r0, [pc, #72]	; 1996c <traverse_product@@Base+0x14c>
   19920:	ldr	r0, [pc, r0]
   19924:	blx	r0
   19928:	bl	1997c <traverse_product@@Base+0x15c>
   1992c:	ldr	r0, [pc, #64]	; 19974 <traverse_product@@Base+0x154>
   19930:	ldr	r0, [pc, r0]
   19934:	ldr	r0, [r0, #4]
   19938:	bl	128ec <coda_close@plt>
   1993c:	ldr	r1, [pc, #44]	; 19970 <traverse_product@@Base+0x150>
   19940:	ldr	r1, [pc, r1]
   19944:	movw	r2, #0
   19948:	str	r2, [r1, #4]
   1994c:	mov	sp, fp
   19950:	pop	{fp, pc}
   19954:	andeq	r7, r1, ip, ror r9
   19958:	andeq	r7, r1, r0, asr #18
   1995c:	andeq	r7, r1, r4, lsr r9
   19960:	strdeq	r7, [r1], -ip
   19964:	andeq	r7, r1, r0, lsl #18
   19968:	andeq	r7, r1, r8, asr #17
   1996c:			; <UNDEFINED> instruction: 0x000178b8
   19970:	andeq	r7, r1, ip, ror #16
   19974:	andeq	r7, r1, ip, ror r8
   19978:			; <UNDEFINED> instruction: 0x000178b8
   1997c:	push	{fp, lr}
   19980:	mov	fp, sp
   19984:	sub	sp, sp, #88	; 0x58
   19988:	ldr	r0, [pc, #1588]	; 19fc4 <traverse_product@@Base+0x7a4>
   1998c:	ldr	r0, [pc, r0]
   19990:	add	r0, r0, #8
   19994:	ldr	r1, [pc, #1728]	; 1a05c <traverse_product@@Base+0x83c>
   19998:	ldr	r1, [pc, r1]
   1999c:	ldr	r2, [r1, #136]	; 0x88
   199a0:	add	r1, r1, r2, lsl #2
   199a4:	add	r1, r1, #8
   199a8:	ldr	r1, [r1]
   199ac:	str	r0, [fp, #-32]	; 0xffffffe0
   199b0:	mov	r0, r1
   199b4:	sub	r1, fp, #4
   199b8:	bl	12a00 <coda_type_get_class@plt>
   199bc:	cmp	r0, #0
   199c0:	beq	199d0 <traverse_product@@Base+0x1b0>
   199c4:	ldr	r0, [pc, #1532]	; 19fc8 <traverse_product@@Base+0x7a8>
   199c8:	ldr	r0, [pc, r0]
   199cc:	blx	r0
   199d0:	ldr	r0, [fp, #-4]
   199d4:	cmp	r0, #6
   199d8:	str	r0, [fp, #-36]	; 0xffffffdc
   199dc:	bhi	19fbc <traverse_product@@Base+0x79c>
   199e0:	add	r0, pc, #8
   199e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   199e8:	ldr	r2, [r0, r1, lsl #2]
   199ec:	add	pc, r0, r2
   199f0:	andeq	r0, r0, ip, lsl r0
   199f4:	andeq	r0, r0, r8, lsr r3
   199f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   199fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   19a00:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   19a04:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   19a08:	andeq	r0, r0, r0, lsr #9
   19a0c:	ldr	r0, [pc, #1540]	; 1a018 <traverse_product@@Base+0x7f8>
   19a10:	ldr	r0, [pc, r0]
   19a14:	ldr	r0, [r0, #136]	; 0x88
   19a18:	cmp	r0, #31
   19a1c:	blt	19a24 <traverse_product@@Base+0x204>
   19a20:	b	19fbc <traverse_product@@Base+0x79c>
   19a24:	ldr	r0, [pc, #1520]	; 1a01c <traverse_product@@Base+0x7fc>
   19a28:	ldr	r0, [pc, r0]
   19a2c:	add	r0, r0, #8
   19a30:	ldr	r1, [pc, #1576]	; 1a060 <traverse_product@@Base+0x840>
   19a34:	ldr	r1, [pc, r1]
   19a38:	ldr	r2, [r1, #3748]	; 0xea4
   19a3c:	add	r2, r2, #1
   19a40:	str	r2, [r1, #3748]	; 0xea4
   19a44:	ldr	r2, [r1, #136]	; 0x88
   19a48:	add	r1, r1, r2, lsl #2
   19a4c:	add	r1, r1, #8
   19a50:	ldr	r1, [r1]
   19a54:	str	r0, [fp, #-40]	; 0xffffffd8
   19a58:	mov	r0, r1
   19a5c:	sub	r1, fp, #8
   19a60:	bl	127c0 <coda_type_get_num_record_fields@plt>
   19a64:	cmp	r0, #0
   19a68:	beq	19a78 <traverse_product@@Base+0x258>
   19a6c:	ldr	r0, [pc, #1452]	; 1a020 <traverse_product@@Base+0x800>
   19a70:	ldr	r0, [pc, r0]
   19a74:	blx	r0
   19a78:	ldr	r0, [pc, #1444]	; 1a024 <traverse_product@@Base+0x804>
   19a7c:	ldr	r0, [pc, r0]
   19a80:	add	r0, r0, #664	; 0x298
   19a84:	ldr	r1, [pc, #1496]	; 1a064 <traverse_product@@Base+0x844>
   19a88:	ldr	r1, [pc, r1]
   19a8c:	ldr	r2, [r1, #136]	; 0x88
   19a90:	add	r2, r2, #1
   19a94:	str	r2, [r1, #136]	; 0x88
   19a98:	ldr	r2, [r1, #796]	; 0x31c
   19a9c:	add	r1, r1, r2, lsl #2
   19aa0:	add	r1, r1, #664	; 0x298
   19aa4:	ldr	r1, [r1]
   19aa8:	movw	r2, #0
   19aac:	cmp	r1, r2
   19ab0:	beq	19cc8 <traverse_product@@Base+0x4a8>
   19ab4:	ldr	r0, [pc, #1388]	; 1a028 <traverse_product@@Base+0x808>
   19ab8:	ldr	r0, [pc, r0]
   19abc:	add	r0, r0, #664	; 0x298
   19ac0:	ldr	r1, [pc, #1440]	; 1a068 <traverse_product@@Base+0x848>
   19ac4:	ldr	r1, [pc, r1]
   19ac8:	ldr	r2, [r1, #796]	; 0x31c
   19acc:	add	r1, r1, r2, lsl #2
   19ad0:	add	r1, r1, #664	; 0x298
   19ad4:	ldr	r1, [r1]
   19ad8:	str	r1, [fp, #-16]
   19adc:	ldr	r0, [pc, #1352]	; 1a02c <traverse_product@@Base+0x80c>
   19ae0:	ldr	r0, [pc, r0]
   19ae4:	add	r0, r0, #664	; 0x298
   19ae8:	ldr	r1, [pc, #1404]	; 1a06c <traverse_product@@Base+0x84c>
   19aec:	ldr	r1, [pc, r1]
   19af0:	ldr	r2, [r1, #796]	; 0x31c
   19af4:	add	r1, r1, r2, lsl #2
   19af8:	add	r1, r1, #664	; 0x298
   19afc:	ldr	r1, [r1]
   19b00:	movw	r2, #0
   19b04:	cmp	r1, r2
   19b08:	beq	19c9c <traverse_product@@Base+0x47c>
   19b0c:	ldr	r0, [pc, #1316]	; 1a038 <traverse_product@@Base+0x818>
   19b10:	ldr	r0, [pc, r0]
   19b14:	add	r0, r0, #664	; 0x298
   19b18:	ldr	r1, [pc, #1360]	; 1a070 <traverse_product@@Base+0x850>
   19b1c:	ldr	r1, [pc, r1]
   19b20:	ldr	r2, [r1, #796]	; 0x31c
   19b24:	add	r1, r1, r2, lsl #2
   19b28:	add	r1, r1, #664	; 0x298
   19b2c:	ldr	r1, [r1]
   19b30:	str	r0, [sp, #44]	; 0x2c
   19b34:	mov	r0, r1
   19b38:	bl	17a60 <codadump_filter_get_fieldname@@Base>
   19b3c:	str	r0, [fp, #-20]	; 0xffffffec
   19b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b44:	movw	r1, #0
   19b48:	cmp	r0, r1
   19b4c:	beq	19b54 <traverse_product@@Base+0x334>
   19b50:	b	19b74 <traverse_product@@Base+0x354>
   19b54:	ldr	r0, [pc, #1248]	; 1a03c <traverse_product@@Base+0x81c>
   19b58:	add	r0, pc, r0
   19b5c:	ldr	r1, [pc, #1244]	; 1a040 <traverse_product@@Base+0x820>
   19b60:	add	r1, pc, r1
   19b64:	ldr	r2, [pc, #1240]	; 1a044 <traverse_product@@Base+0x824>
   19b68:	add	r3, pc, r2
   19b6c:	movw	r2, #393	; 0x189
   19b70:	bl	129f4 <__assert_fail@plt>
   19b74:	ldr	r0, [pc, #1228]	; 1a048 <traverse_product@@Base+0x828>
   19b78:	ldr	r0, [pc, r0]
   19b7c:	add	r0, r0, #8
   19b80:	ldr	r1, [pc, #1260]	; 1a074 <traverse_product@@Base+0x854>
   19b84:	ldr	r1, [pc, r1]
   19b88:	ldr	r2, [r1, #136]	; 0x88
   19b8c:	sub	r2, r2, #1
   19b90:	add	r1, r1, r2, lsl #2
   19b94:	add	r1, r1, #8
   19b98:	ldr	r1, [r1]
   19b9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19ba0:	str	r0, [sp, #40]	; 0x28
   19ba4:	mov	r0, r1
   19ba8:	mov	r1, r2
   19bac:	sub	r2, fp, #12
   19bb0:	bl	1291c <coda_type_get_record_field_index_from_name@plt>
   19bb4:	cmp	r0, #0
   19bb8:	beq	19c04 <traverse_product@@Base+0x3e4>
   19bbc:	bl	129ac <coda_get_errno@plt>
   19bc0:	ldr	r0, [r0]
   19bc4:	cmn	r0, #102	; 0x66
   19bc8:	bne	19bf8 <traverse_product@@Base+0x3d8>
   19bcc:	ldr	r0, [pc, #1152]	; 1a054 <traverse_product@@Base+0x834>
   19bd0:	add	r1, pc, r0
   19bd4:	ldr	r0, [pc, #1148]	; 1a058 <traverse_product@@Base+0x838>
   19bd8:	ldr	r0, [pc, r0]
   19bdc:	ldr	r0, [r0]
   19be0:	ldr	r2, [fp, #-20]	; 0xffffffec
   19be4:	bl	12814 <fprintf@plt>
   19be8:	movw	r1, #1
   19bec:	str	r0, [sp, #36]	; 0x24
   19bf0:	mov	r0, r1
   19bf4:	bl	127cc <exit@plt>
   19bf8:	ldr	r0, [pc, #1100]	; 1a04c <traverse_product@@Base+0x82c>
   19bfc:	ldr	r0, [pc, r0]
   19c00:	blx	r0
   19c04:	ldr	r0, [pc, #1092]	; 1a050 <traverse_product@@Base+0x830>
   19c08:	ldr	r0, [pc, r0]
   19c0c:	add	r0, r0, #664	; 0x298
   19c10:	ldr	r1, [pc, #1120]	; 1a078 <traverse_product@@Base+0x858>
   19c14:	ldr	r1, [pc, r1]
   19c18:	ldr	r2, [r1, #796]	; 0x31c
   19c1c:	add	r3, r1, #664	; 0x298
   19c20:	ldr	r2, [r3, r2, lsl #2]
   19c24:	str	r0, [sp, #32]
   19c28:	mov	r0, r2
   19c2c:	str	r1, [sp, #28]
   19c30:	str	r3, [sp, #24]
   19c34:	bl	17ac0 <codadump_filter_get_subfilter@@Base>
   19c38:	ldr	r1, [sp, #28]
   19c3c:	ldr	r2, [r1, #796]	; 0x31c
   19c40:	ldr	r3, [sp, #24]
   19c44:	add	r2, r3, r2, lsl #2
   19c48:	str	r0, [r2, #4]
   19c4c:	ldr	r0, [r1, #796]	; 0x31c
   19c50:	add	r0, r0, #1
   19c54:	str	r0, [r1, #796]	; 0x31c
   19c58:	ldr	r0, [fp, #-12]
   19c5c:	mov	r1, #1
   19c60:	bl	1a090 <traverse_product@@Base+0x870>
   19c64:	ldr	r0, [sp, #28]
   19c68:	ldr	r1, [r0, #796]	; 0x31c
   19c6c:	sub	r1, r1, #1
   19c70:	str	r1, [r0, #796]	; 0x31c
   19c74:	ldr	r1, [r0, #796]	; 0x31c
   19c78:	ldr	r2, [sp, #24]
   19c7c:	ldr	r0, [r2, r1, lsl #2]
   19c80:	bl	17b20 <codadump_filter_get_next_filter@@Base>
   19c84:	ldr	r1, [sp, #28]
   19c88:	ldr	r2, [r1, #796]	; 0x31c
   19c8c:	ldr	r3, [sp, #24]
   19c90:	add	r2, r3, r2, lsl #2
   19c94:	str	r0, [r2]
   19c98:	b	19adc <traverse_product@@Base+0x2bc>
   19c9c:	ldr	r0, [pc, #908]	; 1a030 <traverse_product@@Base+0x810>
   19ca0:	ldr	r0, [pc, r0]
   19ca4:	add	r0, r0, #664	; 0x298
   19ca8:	ldr	r1, [fp, #-16]
   19cac:	ldr	r2, [pc, #968]	; 1a07c <traverse_product@@Base+0x85c>
   19cb0:	ldr	r2, [pc, r2]
   19cb4:	ldr	r3, [r2, #796]	; 0x31c
   19cb8:	add	r2, r2, r3, lsl #2
   19cbc:	add	r2, r2, #664	; 0x298
   19cc0:	str	r1, [r2]
   19cc4:	b	19d00 <traverse_product@@Base+0x4e0>
   19cc8:	movw	r0, #0
   19ccc:	str	r0, [fp, #-12]
   19cd0:	ldr	r0, [fp, #-12]
   19cd4:	ldr	r1, [fp, #-8]
   19cd8:	cmp	r0, r1
   19cdc:	bge	19cfc <traverse_product@@Base+0x4dc>
   19ce0:	ldr	r0, [fp, #-12]
   19ce4:	movw	r1, #0
   19ce8:	bl	1a090 <traverse_product@@Base+0x870>
   19cec:	ldr	r0, [fp, #-12]
   19cf0:	add	r0, r0, #1
   19cf4:	str	r0, [fp, #-12]
   19cf8:	b	19cd0 <traverse_product@@Base+0x4b0>
   19cfc:	b	19d00 <traverse_product@@Base+0x4e0>
   19d00:	ldr	r0, [pc, #812]	; 1a034 <traverse_product@@Base+0x814>
   19d04:	ldr	r0, [pc, r0]
   19d08:	ldr	r1, [r0, #136]	; 0x88
   19d0c:	mvn	r2, #0
   19d10:	add	r1, r1, r2
   19d14:	str	r1, [r0, #136]	; 0x88
   19d18:	ldr	r1, [r0, #3748]	; 0xea4
   19d1c:	add	r1, r1, r2
   19d20:	str	r1, [r0, #3748]	; 0xea4
   19d24:	b	19fbc <traverse_product@@Base+0x79c>
   19d28:	ldr	r0, [pc, #724]	; 1a004 <traverse_product@@Base+0x7e4>
   19d2c:	ldr	r0, [pc, r0]
   19d30:	ldr	r0, [r0, #136]	; 0x88
   19d34:	cmp	r0, #31
   19d38:	blt	19d40 <traverse_product@@Base+0x520>
   19d3c:	b	19fbc <traverse_product@@Base+0x79c>
   19d40:	ldr	r0, [pc, #704]	; 1a008 <traverse_product@@Base+0x7e8>
   19d44:	ldr	r0, [pc, r0]
   19d48:	add	r0, r0, #8
   19d4c:	str	r0, [sp, #20]
   19d50:	bl	157f4 <dim_enter_array@@Base>
   19d54:	ldr	r0, [pc, #804]	; 1a080 <traverse_product@@Base+0x860>
   19d58:	ldr	r0, [pc, r0]
   19d5c:	ldr	r1, [r0, #3360]	; 0xd20
   19d60:	add	r1, r1, #1
   19d64:	str	r1, [r0, #3360]	; 0xd20
   19d68:	ldr	r1, [r0, #136]	; 0x88
   19d6c:	add	r1, r1, #1
   19d70:	str	r1, [r0, #136]	; 0x88
   19d74:	ldr	r1, [r0, #136]	; 0x88
   19d78:	add	r0, r0, r1, lsl #2
   19d7c:	ldr	r1, [r0, #4]
   19d80:	add	r0, r0, #8
   19d84:	str	r0, [sp, #16]
   19d88:	mov	r0, r1
   19d8c:	ldr	r1, [sp, #16]
   19d90:	bl	128a4 <coda_type_get_array_base_type@plt>
   19d94:	cmp	r0, #0
   19d98:	beq	19da8 <traverse_product@@Base+0x588>
   19d9c:	ldr	r0, [pc, #616]	; 1a00c <traverse_product@@Base+0x7ec>
   19da0:	ldr	r0, [pc, r0]
   19da4:	blx	r0
   19da8:	bl	1997c <traverse_product@@Base+0x15c>
   19dac:	ldr	r0, [pc, #604]	; 1a010 <traverse_product@@Base+0x7f0>
   19db0:	ldr	r0, [pc, r0]
   19db4:	ldr	r1, [pc, #600]	; 1a014 <traverse_product@@Base+0x7f4>
   19db8:	ldr	r1, [pc, r1]
   19dbc:	ldr	r2, [r1, #136]	; 0x88
   19dc0:	mvn	r3, #0
   19dc4:	add	r2, r2, r3
   19dc8:	str	r2, [r1, #136]	; 0x88
   19dcc:	ldr	r2, [r1, #3360]	; 0xd20
   19dd0:	add	r2, r2, r3
   19dd4:	str	r2, [r1, #3360]	; 0xd20
   19dd8:	blx	r0
   19ddc:	b	19fbc <traverse_product@@Base+0x79c>
   19de0:	ldr	r0, [pc, #516]	; 19fec <traverse_product@@Base+0x7cc>
   19de4:	ldr	r0, [pc, r0]
   19de8:	add	r0, r0, #8
   19dec:	ldr	r1, [pc, #656]	; 1a084 <traverse_product@@Base+0x864>
   19df0:	ldr	r1, [pc, r1]
   19df4:	ldr	r2, [r1, #136]	; 0x88
   19df8:	add	r1, r1, r2, lsl #2
   19dfc:	add	r1, r1, #8
   19e00:	ldr	r1, [r1]
   19e04:	str	r0, [sp, #12]
   19e08:	mov	r0, r1
   19e0c:	sub	r1, fp, #24
   19e10:	bl	127d8 <coda_type_get_read_type@plt>
   19e14:	cmp	r0, #0
   19e18:	beq	19e28 <traverse_product@@Base+0x608>
   19e1c:	ldr	r0, [pc, #460]	; 19ff0 <traverse_product@@Base+0x7d0>
   19e20:	ldr	r0, [pc, r0]
   19e24:	blx	r0
   19e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e2c:	sub	r0, r0, #11
   19e30:	cmp	r0, #1
   19e34:	bhi	19e88 <traverse_product@@Base+0x668>
   19e38:	b	19e3c <traverse_product@@Base+0x61c>
   19e3c:	ldr	r0, [pc, #444]	; 1a000 <traverse_product@@Base+0x7e0>
   19e40:	ldr	r0, [pc, r0]
   19e44:	blx	r0
   19e48:	ldr	r0, [pc, #428]	; 19ffc <traverse_product@@Base+0x7dc>
   19e4c:	ldr	r0, [pc, r0]
   19e50:	ldr	r1, [r0, #3360]	; 0xd20
   19e54:	add	r1, r1, #1
   19e58:	str	r1, [r0, #3360]	; 0xd20
   19e5c:	bl	1a2ec <traverse_product@@Base+0xacc>
   19e60:	ldr	r0, [pc, #396]	; 19ff4 <traverse_product@@Base+0x7d4>
   19e64:	ldr	r0, [pc, r0]
   19e68:	ldr	r1, [pc, #392]	; 19ff8 <traverse_product@@Base+0x7d8>
   19e6c:	ldr	r1, [pc, r1]
   19e70:	ldr	r2, [r1, #3360]	; 0xd20
   19e74:	mvn	r3, #0
   19e78:	add	r2, r2, r3
   19e7c:	str	r2, [r1, #3360]	; 0xd20
   19e80:	blx	r0
   19e84:	b	19e8c <traverse_product@@Base+0x66c>
   19e88:	bl	1a2ec <traverse_product@@Base+0xacc>
   19e8c:	b	19fbc <traverse_product@@Base+0x79c>
   19e90:	bl	125bc <coda_get_option_bypass_special_types@plt>
   19e94:	cmp	r0, #0
   19e98:	beq	19ee4 <traverse_product@@Base+0x6c4>
   19e9c:	ldr	r0, [pc, #320]	; 19fe4 <traverse_product@@Base+0x7c4>
   19ea0:	ldr	r0, [pc, r0]
   19ea4:	add	r0, r0, #8
   19ea8:	ldr	r1, [pc, #472]	; 1a088 <traverse_product@@Base+0x868>
   19eac:	ldr	r1, [pc, r1]
   19eb0:	ldr	r2, [r1, #136]	; 0x88
   19eb4:	add	r1, r1, r2, lsl #2
   19eb8:	ldr	r2, [r1, #8]!
   19ebc:	str	r0, [sp, #8]
   19ec0:	mov	r0, r2
   19ec4:	bl	129b8 <coda_type_get_special_base_type@plt>
   19ec8:	cmp	r0, #0
   19ecc:	beq	19edc <traverse_product@@Base+0x6bc>
   19ed0:	ldr	r0, [pc, #272]	; 19fe8 <traverse_product@@Base+0x7c8>
   19ed4:	ldr	r0, [pc, r0]
   19ed8:	blx	r0
   19edc:	bl	1997c <traverse_product@@Base+0x15c>
   19ee0:	b	19fbc <traverse_product@@Base+0x79c>
   19ee4:	ldr	r0, [pc, #224]	; 19fcc <traverse_product@@Base+0x7ac>
   19ee8:	ldr	r0, [pc, r0]
   19eec:	add	r0, r0, #8
   19ef0:	ldr	r1, [pc, #404]	; 1a08c <traverse_product@@Base+0x86c>
   19ef4:	ldr	r1, [pc, r1]
   19ef8:	ldr	r2, [r1, #136]	; 0x88
   19efc:	add	r1, r1, r2, lsl #2
   19f00:	add	r1, r1, #8
   19f04:	ldr	r1, [r1]
   19f08:	str	r0, [sp, #4]
   19f0c:	mov	r0, r1
   19f10:	sub	r1, fp, #28
   19f14:	bl	12880 <coda_type_get_special_type@plt>
   19f18:	cmp	r0, #0
   19f1c:	beq	19f2c <traverse_product@@Base+0x70c>
   19f20:	ldr	r0, [pc, #168]	; 19fd0 <traverse_product@@Base+0x7b0>
   19f24:	ldr	r0, [pc, r0]
   19f28:	blx	r0
   19f2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19f30:	cmp	r0, #0
   19f34:	str	r0, [sp]
   19f38:	beq	19f64 <traverse_product@@Base+0x744>
   19f3c:	b	19f40 <traverse_product@@Base+0x720>
   19f40:	ldr	r0, [sp]
   19f44:	sub	r1, r0, #1
   19f48:	cmp	r1, #2
   19f4c:	bcc	19f68 <traverse_product@@Base+0x748>
   19f50:	b	19f54 <traverse_product@@Base+0x734>
   19f54:	ldr	r0, [sp]
   19f58:	cmp	r0, #3
   19f5c:	beq	19f70 <traverse_product@@Base+0x750>
   19f60:	b	19fb8 <traverse_product@@Base+0x798>
   19f64:	b	19fbc <traverse_product@@Base+0x79c>
   19f68:	bl	1a2ec <traverse_product@@Base+0xacc>
   19f6c:	b	19fb8 <traverse_product@@Base+0x798>
   19f70:	ldr	r0, [pc, #104]	; 19fe0 <traverse_product@@Base+0x7c0>
   19f74:	ldr	r0, [pc, r0]
   19f78:	blx	r0
   19f7c:	ldr	r0, [pc, #88]	; 19fdc <traverse_product@@Base+0x7bc>
   19f80:	ldr	r0, [pc, r0]
   19f84:	ldr	r1, [r0, #3360]	; 0xd20
   19f88:	add	r1, r1, #1
   19f8c:	str	r1, [r0, #3360]	; 0xd20
   19f90:	bl	1a2ec <traverse_product@@Base+0xacc>
   19f94:	ldr	r0, [pc, #56]	; 19fd4 <traverse_product@@Base+0x7b4>
   19f98:	ldr	r0, [pc, r0]
   19f9c:	ldr	r1, [pc, #52]	; 19fd8 <traverse_product@@Base+0x7b8>
   19fa0:	ldr	r1, [pc, r1]
   19fa4:	ldr	r2, [r1, #3360]	; 0xd20
   19fa8:	mvn	r3, #0
   19fac:	add	r2, r2, r3
   19fb0:	str	r2, [r1, #3360]	; 0xd20
   19fb4:	blx	r0
   19fb8:	b	19fbc <traverse_product@@Base+0x79c>
   19fbc:	mov	sp, fp
   19fc0:	pop	{fp, pc}
   19fc4:	andeq	r7, r1, r0, lsr #16
   19fc8:	andeq	r7, r1, r0, lsl r8
   19fcc:	andeq	r7, r1, r4, asr #5
   19fd0:			; <UNDEFINED> instruction: 0x000172b4
   19fd4:	andeq	r7, r1, r0, lsl #4
   19fd8:	andeq	r7, r1, ip, lsl #4
   19fdc:	andeq	r7, r1, ip, lsr #4
   19fe0:	andeq	r7, r1, r0, ror #4
   19fe4:	andeq	r7, r1, ip, lsl #6
   19fe8:	andeq	r7, r1, r4, lsl #6
   19fec:	andeq	r7, r1, r8, asr #7
   19ff0:			; <UNDEFINED> instruction: 0x000173b8
   19ff4:	andeq	r7, r1, r4, lsr r3
   19ff8:	andeq	r7, r1, r0, asr #6
   19ffc:	andeq	r7, r1, r0, ror #6
   1a000:	muleq	r1, r4, r3
   1a004:	andeq	r7, r1, r0, lsl #9
   1a008:	andeq	r7, r1, r8, ror #8
   1a00c:	andeq	r7, r1, r8, lsr r4
   1a010:	andeq	r7, r1, r8, ror #7
   1a014:	strdeq	r7, [r1], -r4
   1a018:	muleq	r1, ip, r7
   1a01c:	andeq	r7, r1, r4, lsl #15
   1a020:	andeq	r7, r1, r8, ror #14
   1a024:	andeq	r7, r1, r0, lsr r7
   1a028:	strdeq	r7, [r1], -r4
   1a02c:	andeq	r7, r1, ip, asr #13
   1a030:	andeq	r7, r1, ip, lsl #10
   1a034:	andeq	r7, r1, r8, lsr #9
   1a038:	muleq	r1, ip, r6
   1a03c:	andeq	r5, r0, r2, lsr r7
   1a040:	andeq	r5, r0, r7, lsr r7
   1a044:	muleq	r0, r4, r7
   1a048:	andeq	r7, r1, r4, lsr r6
   1a04c:	ldrdeq	r7, [r1], -ip
   1a050:	andeq	r7, r1, r4, lsr #11
   1a054:	andeq	r5, r0, r1, asr #14
   1a058:	ldrdeq	r7, [r1], -r8
   1a05c:	andeq	r7, r1, r4, lsl r8
   1a060:	andeq	r7, r1, r8, ror r7
   1a064:	andeq	r7, r1, r4, lsr #14
   1a068:	andeq	r7, r1, r8, ror #13
   1a06c:	andeq	r7, r1, r0, asr #13
   1a070:	muleq	r1, r0, r6
   1a074:	andeq	r7, r1, r8, lsr #12
   1a078:	muleq	r1, r8, r5
   1a07c:	strdeq	r7, [r1], -ip
   1a080:	andeq	r7, r1, r4, asr r4
   1a084:			; <UNDEFINED> instruction: 0x000173bc
   1a088:	andeq	r7, r1, r0, lsl #6
   1a08c:			; <UNDEFINED> instruction: 0x000172b8
   1a090:	push	{fp, lr}
   1a094:	mov	fp, sp
   1a098:	sub	sp, sp, #40	; 0x28
   1a09c:	ldr	r2, [pc, #520]	; 1a2ac <traverse_product@@Base+0xa8c>
   1a0a0:	ldr	r2, [pc, r2]
   1a0a4:	add	r2, r2, #8
   1a0a8:	str	r0, [fp, #-4]
   1a0ac:	str	r1, [fp, #-8]
   1a0b0:	ldr	r0, [fp, #-4]
   1a0b4:	ldr	r1, [pc, #540]	; 1a2d8 <traverse_product@@Base+0xab8>
   1a0b8:	ldr	r1, [pc, r1]
   1a0bc:	ldr	r3, [r1, #3748]	; 0xea4
   1a0c0:	add	r3, r1, r3, lsl #2
   1a0c4:	str	r0, [r3, #3488]	; 0xda0
   1a0c8:	ldr	r0, [r1, #136]	; 0x88
   1a0cc:	sub	r0, r0, #1
   1a0d0:	add	r0, r1, r0, lsl #2
   1a0d4:	add	r0, r0, #8
   1a0d8:	ldr	r0, [r0]
   1a0dc:	ldr	r1, [fp, #-4]
   1a0e0:	sub	r3, fp, #12
   1a0e4:	str	r2, [sp, #20]
   1a0e8:	mov	r2, r3
   1a0ec:	bl	125e0 <coda_type_get_record_field_hidden_status@plt>
   1a0f0:	cmp	r0, #0
   1a0f4:	beq	1a104 <traverse_product@@Base+0x8e4>
   1a0f8:	ldr	r0, [pc, #432]	; 1a2b0 <traverse_product@@Base+0xa90>
   1a0fc:	ldr	r0, [pc, r0]
   1a100:	blx	r0
   1a104:	ldr	r0, [fp, #-12]
   1a108:	cmp	r0, #0
   1a10c:	beq	1a120 <traverse_product@@Base+0x900>
   1a110:	ldr	r0, [fp, #-8]
   1a114:	cmp	r0, #0
   1a118:	bne	1a120 <traverse_product@@Base+0x900>
   1a11c:	b	1a2a4 <traverse_product@@Base+0xa84>
   1a120:	ldr	r0, [pc, #396]	; 1a2b4 <traverse_product@@Base+0xa94>
   1a124:	ldr	r0, [pc, r0]
   1a128:	ldr	r0, [r0]
   1a12c:	cmp	r0, #0
   1a130:	beq	1a1e4 <traverse_product@@Base+0x9c4>
   1a134:	ldr	r0, [pc, #380]	; 1a2b8 <traverse_product@@Base+0xa98>
   1a138:	ldr	r0, [pc, r0]
   1a13c:	add	r0, r0, #8
   1a140:	ldr	r1, [pc, #404]	; 1a2dc <traverse_product@@Base+0xabc>
   1a144:	ldr	r1, [pc, r1]
   1a148:	ldr	r2, [r1, #136]	; 0x88
   1a14c:	sub	r2, r2, #1
   1a150:	add	r1, r1, r2, lsl #2
   1a154:	add	r1, r1, #8
   1a158:	ldr	r1, [r1]
   1a15c:	ldr	r2, [fp, #-4]
   1a160:	str	r0, [sp, #16]
   1a164:	mov	r0, r1
   1a168:	mov	r1, r2
   1a16c:	sub	r2, fp, #16
   1a170:	bl	126d0 <coda_type_get_record_field_available_status@plt>
   1a174:	cmp	r0, #0
   1a178:	beq	1a188 <traverse_product@@Base+0x968>
   1a17c:	ldr	r0, [pc, #312]	; 1a2bc <traverse_product@@Base+0xa9c>
   1a180:	ldr	r0, [pc, r0]
   1a184:	blx	r0
   1a188:	ldr	r0, [fp, #-16]
   1a18c:	cmn	r0, #1
   1a190:	bne	1a1b0 <traverse_product@@Base+0x990>
   1a194:	ldr	r0, [pc, #292]	; 1a2c0 <traverse_product@@Base+0xaa0>
   1a198:	ldr	r0, [pc, r0]
   1a19c:	blx	r0
   1a1a0:	cmp	r0, #0
   1a1a4:	bne	1a1ac <traverse_product@@Base+0x98c>
   1a1a8:	b	1a2a4 <traverse_product@@Base+0xa84>
   1a1ac:	b	1a1b0 <traverse_product@@Base+0x990>
   1a1b0:	ldr	r0, [pc, #268]	; 1a2c4 <traverse_product@@Base+0xaa4>
   1a1b4:	ldr	r0, [pc, r0]
   1a1b8:	movw	r1, #3364	; 0xd24
   1a1bc:	add	r0, r0, r1
   1a1c0:	ldr	r1, [fp, #-16]
   1a1c4:	ldr	r2, [pc, #276]	; 1a2e0 <traverse_product@@Base+0xac0>
   1a1c8:	ldr	r2, [pc, r2]
   1a1cc:	ldr	r3, [r2, #136]	; 0x88
   1a1d0:	sub	r3, r3, #1
   1a1d4:	add	r2, r2, r3, lsl #2
   1a1d8:	movw	r3, #3364	; 0xd24
   1a1dc:	add	r2, r2, r3
   1a1e0:	str	r1, [r2]
   1a1e4:	ldr	r0, [pc, #220]	; 1a2c8 <traverse_product@@Base+0xaa8>
   1a1e8:	ldr	r0, [pc, r0]
   1a1ec:	movw	r1, #3620	; 0xe24
   1a1f0:	add	r0, r0, r1
   1a1f4:	ldr	r1, [pc, #232]	; 1a2e4 <traverse_product@@Base+0xac4>
   1a1f8:	ldr	r1, [pc, r1]
   1a1fc:	ldr	r2, [r1, #136]	; 0x88
   1a200:	add	r2, r1, r2, lsl #2
   1a204:	ldr	r2, [r2, #4]
   1a208:	ldr	r3, [fp, #-4]
   1a20c:	ldr	ip, [r1, #3748]	; 0xea4
   1a210:	sub	ip, ip, #1
   1a214:	add	r1, r1, ip, lsl #2
   1a218:	movw	ip, #3620	; 0xe24
   1a21c:	add	r1, r1, ip
   1a220:	str	r0, [sp, #12]
   1a224:	mov	r0, r2
   1a228:	str	r1, [sp, #8]
   1a22c:	mov	r1, r3
   1a230:	ldr	r2, [sp, #8]
   1a234:	bl	129c4 <coda_type_get_record_field_name@plt>
   1a238:	cmp	r0, #0
   1a23c:	beq	1a24c <traverse_product@@Base+0xa2c>
   1a240:	ldr	r0, [pc, #132]	; 1a2cc <traverse_product@@Base+0xaac>
   1a244:	ldr	r0, [pc, r0]
   1a248:	blx	r0
   1a24c:	ldr	r0, [pc, #124]	; 1a2d0 <traverse_product@@Base+0xab0>
   1a250:	ldr	r0, [pc, r0]
   1a254:	add	r0, r0, #8
   1a258:	ldr	r1, [pc, #136]	; 1a2e8 <traverse_product@@Base+0xac8>
   1a25c:	ldr	r1, [pc, r1]
   1a260:	ldr	r2, [r1, #136]	; 0x88
   1a264:	add	r1, r1, r2, lsl #2
   1a268:	ldr	r2, [r1, #4]
   1a26c:	ldr	r3, [fp, #-4]
   1a270:	add	r1, r1, #8
   1a274:	str	r0, [sp, #4]
   1a278:	mov	r0, r2
   1a27c:	str	r1, [sp]
   1a280:	mov	r1, r3
   1a284:	ldr	r2, [sp]
   1a288:	bl	12694 <coda_type_get_record_field_type@plt>
   1a28c:	cmp	r0, #0
   1a290:	beq	1a2a0 <traverse_product@@Base+0xa80>
   1a294:	ldr	r0, [pc, #56]	; 1a2d4 <traverse_product@@Base+0xab4>
   1a298:	ldr	r0, [pc, r0]
   1a29c:	blx	r0
   1a2a0:	bl	1997c <traverse_product@@Base+0x15c>
   1a2a4:	mov	sp, fp
   1a2a8:	pop	{fp, pc}
   1a2ac:	andeq	r7, r1, ip, lsl #2
   1a2b0:	ldrdeq	r7, [r1], -ip
   1a2b4:	andeq	r7, r1, r4, lsl #1
   1a2b8:	andeq	r7, r1, r4, ror r0
   1a2bc:	andeq	r7, r1, r8, asr r0
   1a2c0:	strdeq	r6, [r1], -r8
   1a2c4:	strdeq	r6, [r1], -r8
   1a2c8:	andeq	r6, r1, r4, asr #31
   1a2cc:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1a2d0:	andeq	r6, r1, ip, asr pc
   1a2d4:	andeq	r6, r1, r0, asr #30
   1a2d8:	strdeq	r7, [r1], -r4
   1a2dc:	andeq	r7, r1, r8, rrx
   1a2e0:	andeq	r6, r1, r4, ror #31
   1a2e4:			; <UNDEFINED> instruction: 0x00016fb4
   1a2e8:	andeq	r6, r1, r0, asr pc
   1a2ec:	push	{fp, lr}
   1a2f0:	mov	fp, sp
   1a2f4:	sub	sp, sp, #56	; 0x38
   1a2f8:	ldr	r0, [pc, #936]	; 1a6a8 <traverse_product@@Base+0xe88>
   1a2fc:	ldr	r0, [pc, r0]
   1a300:	ldr	r0, [r0]
   1a304:	cmp	r0, #0
   1a308:	bne	1a67c <traverse_product@@Base+0xe5c>
   1a30c:	ldr	r0, [pc, #932]	; 1a6b8 <traverse_product@@Base+0xe98>
   1a310:	ldr	r0, [pc, r0]
   1a314:	ldr	r0, [r0]
   1a318:	movw	r1, #1
   1a31c:	movw	r2, #0
   1a320:	bl	19088 <print_full_field_name@@Base>
   1a324:	ldr	r0, [pc, #904]	; 1a6b4 <traverse_product@@Base+0xe94>
   1a328:	ldr	r0, [pc, r0]
   1a32c:	ldr	r0, [r0]
   1a330:	cmp	r0, #0
   1a334:	beq	1a4fc <traverse_product@@Base+0xcdc>
   1a338:	ldr	r0, [pc, #892]	; 1a6bc <traverse_product@@Base+0xe9c>
   1a33c:	ldr	r0, [pc, r0]
   1a340:	add	r0, r0, #8
   1a344:	ldr	r1, [pc, #988]	; 1a728 <traverse_product@@Base+0xf08>
   1a348:	ldr	r1, [pc, r1]
   1a34c:	ldr	r2, [r1, #136]	; 0x88
   1a350:	add	r1, r1, r2, lsl #2
   1a354:	add	r1, r1, #8
   1a358:	ldr	r1, [r1]
   1a35c:	str	r0, [sp, #28]
   1a360:	mov	r0, r1
   1a364:	sub	r1, fp, #4
   1a368:	bl	12a00 <coda_type_get_class@plt>
   1a36c:	cmp	r0, #0
   1a370:	beq	1a380 <traverse_product@@Base+0xb60>
   1a374:	ldr	r0, [pc, #836]	; 1a6c0 <traverse_product@@Base+0xea0>
   1a378:	ldr	r0, [pc, r0]
   1a37c:	blx	r0
   1a380:	ldr	r0, [fp, #-4]
   1a384:	cmp	r0, #6
   1a388:	bne	1a3f8 <traverse_product@@Base+0xbd8>
   1a38c:	ldr	r0, [pc, #860]	; 1a6f0 <traverse_product@@Base+0xed0>
   1a390:	ldr	r0, [pc, r0]
   1a394:	add	r0, r0, #8
   1a398:	ldr	r1, [pc, #908]	; 1a72c <traverse_product@@Base+0xf0c>
   1a39c:	ldr	r1, [pc, r1]
   1a3a0:	ldr	r2, [r1, #136]	; 0x88
   1a3a4:	add	r1, r1, r2, lsl #2
   1a3a8:	add	r1, r1, #8
   1a3ac:	ldr	r1, [r1]
   1a3b0:	str	r0, [sp, #24]
   1a3b4:	mov	r0, r1
   1a3b8:	sub	r1, fp, #8
   1a3bc:	bl	12880 <coda_type_get_special_type@plt>
   1a3c0:	cmp	r0, #0
   1a3c4:	beq	1a3d4 <traverse_product@@Base+0xbb4>
   1a3c8:	ldr	r0, [pc, #804]	; 1a6f4 <traverse_product@@Base+0xed4>
   1a3cc:	ldr	r0, [pc, r0]
   1a3d0:	blx	r0
   1a3d4:	ldr	r0, [fp, #-8]
   1a3d8:	bl	12598 <coda_type_get_special_type_name@plt>
   1a3dc:	ldr	r1, [pc, #788]	; 1a6f8 <traverse_product@@Base+0xed8>
   1a3e0:	add	r1, pc, r1
   1a3e4:	str	r0, [sp, #20]
   1a3e8:	mov	r0, r1
   1a3ec:	ldr	r1, [sp, #20]
   1a3f0:	bl	125ec <printf@plt>
   1a3f4:	b	1a4f8 <traverse_product@@Base+0xcd8>
   1a3f8:	ldr	r0, [pc, #708]	; 1a6c4 <traverse_product@@Base+0xea4>
   1a3fc:	ldr	r0, [pc, r0]
   1a400:	add	r0, r0, #8
   1a404:	ldr	r1, [pc, #804]	; 1a730 <traverse_product@@Base+0xf10>
   1a408:	ldr	r1, [pc, r1]
   1a40c:	ldr	r2, [r1, #136]	; 0x88
   1a410:	add	r1, r1, r2, lsl #2
   1a414:	add	r1, r1, #8
   1a418:	ldr	r1, [r1]
   1a41c:	str	r0, [sp, #16]
   1a420:	mov	r0, r1
   1a424:	sub	r1, fp, #12
   1a428:	bl	127d8 <coda_type_get_read_type@plt>
   1a42c:	cmp	r0, #0
   1a430:	beq	1a440 <traverse_product@@Base+0xc20>
   1a434:	ldr	r0, [pc, #652]	; 1a6c8 <traverse_product@@Base+0xea8>
   1a438:	ldr	r0, [pc, r0]
   1a43c:	blx	r0
   1a440:	ldr	r0, [fp, #-12]
   1a444:	bl	128c8 <coda_type_get_native_type_name@plt>
   1a448:	ldr	r1, [pc, #636]	; 1a6cc <traverse_product@@Base+0xeac>
   1a44c:	add	r1, pc, r1
   1a450:	str	r0, [sp, #12]
   1a454:	mov	r0, r1
   1a458:	ldr	r1, [sp, #12]
   1a45c:	bl	125ec <printf@plt>
   1a460:	ldr	r1, [fp, #-12]
   1a464:	cmp	r1, #11
   1a468:	beq	1a478 <traverse_product@@Base+0xc58>
   1a46c:	ldr	r0, [fp, #-12]
   1a470:	cmp	r0, #12
   1a474:	bne	1a4f4 <traverse_product@@Base+0xcd4>
   1a478:	ldr	r0, [pc, #596]	; 1a6d4 <traverse_product@@Base+0xeb4>
   1a47c:	add	r0, pc, r0
   1a480:	bl	125ec <printf@plt>
   1a484:	ldr	r1, [pc, #580]	; 1a6d0 <traverse_product@@Base+0xeb0>
   1a488:	ldr	r1, [pc, r1]
   1a48c:	ldr	r1, [r1, #3360]	; 0xd20
   1a490:	cmp	r1, #0
   1a494:	ble	1a49c <traverse_product@@Base+0xc7c>
   1a498:	b	1a4bc <traverse_product@@Base+0xc9c>
   1a49c:	ldr	r0, [pc, #564]	; 1a6d8 <traverse_product@@Base+0xeb8>
   1a4a0:	add	r0, pc, r0
   1a4a4:	ldr	r1, [pc, #560]	; 1a6dc <traverse_product@@Base+0xebc>
   1a4a8:	add	r1, pc, r1
   1a4ac:	ldr	r2, [pc, #556]	; 1a6e0 <traverse_product@@Base+0xec0>
   1a4b0:	add	r3, pc, r2
   1a4b4:	movw	r2, #238	; 0xee
   1a4b8:	bl	129f4 <__assert_fail@plt>
   1a4bc:	ldr	r0, [pc, #548]	; 1a6e8 <traverse_product@@Base+0xec8>
   1a4c0:	ldr	r0, [pc, r0]
   1a4c4:	ldr	r1, [pc, #544]	; 1a6ec <traverse_product@@Base+0xecc>
   1a4c8:	ldr	r1, [pc, r1]
   1a4cc:	ldr	r1, [r1]
   1a4d0:	ldr	r0, [r0, #3360]	; 0xd20
   1a4d4:	sub	r0, r0, #1
   1a4d8:	str	r0, [sp, #8]
   1a4dc:	mov	r0, r1
   1a4e0:	ldr	r1, [sp, #8]
   1a4e4:	bl	1958c <print_full_field_name@@Base+0x504>
   1a4e8:	ldr	r0, [pc, #500]	; 1a6e4 <traverse_product@@Base+0xec4>
   1a4ec:	add	r0, pc, r0
   1a4f0:	bl	125ec <printf@plt>
   1a4f4:	b	1a4f8 <traverse_product@@Base+0xcd8>
   1a4f8:	b	1a4fc <traverse_product@@Base+0xcdc>
   1a4fc:	ldr	r0, [pc, #504]	; 1a6fc <traverse_product@@Base+0xedc>
   1a500:	ldr	r0, [pc, r0]
   1a504:	ldr	r0, [r0]
   1a508:	cmp	r0, #0
   1a50c:	beq	1a58c <traverse_product@@Base+0xd6c>
   1a510:	ldr	r0, [pc, #488]	; 1a700 <traverse_product@@Base+0xee0>
   1a514:	ldr	r0, [pc, r0]
   1a518:	add	r0, r0, #8
   1a51c:	ldr	r1, [pc, #528]	; 1a734 <traverse_product@@Base+0xf14>
   1a520:	ldr	r1, [pc, r1]
   1a524:	ldr	r2, [r1, #136]	; 0x88
   1a528:	add	r1, r1, r2, lsl #2
   1a52c:	add	r1, r1, #8
   1a530:	ldr	r1, [r1]
   1a534:	str	r0, [sp, #4]
   1a538:	mov	r0, r1
   1a53c:	sub	r1, fp, #16
   1a540:	bl	1270c <coda_type_get_unit@plt>
   1a544:	cmp	r0, #0
   1a548:	beq	1a558 <traverse_product@@Base+0xd38>
   1a54c:	ldr	r0, [pc, #432]	; 1a704 <traverse_product@@Base+0xee4>
   1a550:	ldr	r0, [pc, r0]
   1a554:	blx	r0
   1a558:	ldr	r0, [fp, #-16]
   1a55c:	movw	r1, #0
   1a560:	cmp	r0, r1
   1a564:	beq	1a588 <traverse_product@@Base+0xd68>
   1a568:	ldr	r0, [fp, #-16]
   1a56c:	ldrb	r0, [r0]
   1a570:	cmp	r0, #0
   1a574:	beq	1a588 <traverse_product@@Base+0xd68>
   1a578:	ldr	r0, [pc, #392]	; 1a708 <traverse_product@@Base+0xee8>
   1a57c:	add	r0, pc, r0
   1a580:	ldr	r1, [fp, #-16]
   1a584:	bl	125ec <printf@plt>
   1a588:	b	1a58c <traverse_product@@Base+0xd6c>
   1a58c:	ldr	r0, [pc, #376]	; 1a70c <traverse_product@@Base+0xeec>
   1a590:	ldr	r0, [pc, r0]
   1a594:	ldr	r0, [r0]
   1a598:	cmp	r0, #0
   1a59c:	beq	1a61c <traverse_product@@Base+0xdfc>
   1a5a0:	ldr	r0, [pc, #360]	; 1a710 <traverse_product@@Base+0xef0>
   1a5a4:	ldr	r0, [pc, r0]
   1a5a8:	add	r0, r0, #8
   1a5ac:	ldr	r1, [pc, #388]	; 1a738 <traverse_product@@Base+0xf18>
   1a5b0:	ldr	r1, [pc, r1]
   1a5b4:	ldr	r2, [r1, #136]	; 0x88
   1a5b8:	add	r1, r1, r2, lsl #2
   1a5bc:	add	r1, r1, #8
   1a5c0:	ldr	r1, [r1]
   1a5c4:	str	r0, [sp]
   1a5c8:	mov	r0, r1
   1a5cc:	sub	r1, fp, #20
   1a5d0:	bl	12718 <coda_type_get_description@plt>
   1a5d4:	cmp	r0, #0
   1a5d8:	beq	1a5e8 <traverse_product@@Base+0xdc8>
   1a5dc:	ldr	r0, [pc, #304]	; 1a714 <traverse_product@@Base+0xef4>
   1a5e0:	ldr	r0, [pc, r0]
   1a5e4:	blx	r0
   1a5e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a5ec:	movw	r1, #0
   1a5f0:	cmp	r0, r1
   1a5f4:	beq	1a618 <traverse_product@@Base+0xdf8>
   1a5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a5fc:	ldrb	r0, [r0]
   1a600:	cmp	r0, #0
   1a604:	beq	1a618 <traverse_product@@Base+0xdf8>
   1a608:	ldr	r0, [pc, #264]	; 1a718 <traverse_product@@Base+0xef8>
   1a60c:	add	r0, pc, r0
   1a610:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a614:	bl	125ec <printf@plt>
   1a618:	b	1a61c <traverse_product@@Base+0xdfc>
   1a61c:	ldr	r0, [pc, #252]	; 1a720 <traverse_product@@Base+0xf00>
   1a620:	add	r0, pc, r0
   1a624:	bl	125ec <printf@plt>
   1a628:	ldr	r1, [pc, #236]	; 1a71c <traverse_product@@Base+0xefc>
   1a62c:	ldr	r1, [pc, r1]
   1a630:	ldr	r1, [r1]
   1a634:	cmp	r1, #0
   1a638:	beq	1a678 <traverse_product@@Base+0xe58>
   1a63c:	movw	r0, #0
   1a640:	str	r0, [fp, #-24]	; 0xffffffe8
   1a644:	ldr	r0, [pc, #216]	; 1a724 <traverse_product@@Base+0xf04>
   1a648:	ldr	r0, [pc, r0]
   1a64c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a650:	ldr	r0, [r0]
   1a654:	cmp	r1, r0
   1a658:	bge	1a674 <traverse_product@@Base+0xe54>
   1a65c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a660:	bl	153c8 <print_all_distinct_dims@@Base>
   1a664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a668:	add	r0, r0, #1
   1a66c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a670:	b	1a644 <traverse_product@@Base+0xe24>
   1a674:	b	1a678 <traverse_product@@Base+0xe58>
   1a678:	b	1a6a0 <traverse_product@@Base+0xe80>
   1a67c:	ldr	r0, [pc, #40]	; 1a6ac <traverse_product@@Base+0xe8c>
   1a680:	ldr	r0, [pc, r0]
   1a684:	ldr	r0, [r0]
   1a688:	cmp	r0, #1
   1a68c:	bne	1a69c <traverse_product@@Base+0xe7c>
   1a690:	ldr	r0, [pc, #24]	; 1a6b0 <traverse_product@@Base+0xe90>
   1a694:	ldr	r0, [pc, r0]
   1a698:	blx	r0
   1a69c:	b	1a6a0 <traverse_product@@Base+0xe80>
   1a6a0:	mov	sp, fp
   1a6a4:	pop	{fp, pc}
   1a6a8:	andeq	r6, r1, r0, ror #29
   1a6ac:	andeq	r6, r1, ip, asr fp
   1a6b0:	strdeq	r6, [r1], -r0
   1a6b4:	muleq	r1, r8, lr
   1a6b8:	ldrdeq	r6, [r1], -r4
   1a6bc:	andeq	r6, r1, r0, ror lr
   1a6c0:	andeq	r6, r1, r0, ror #28
   1a6c4:			; <UNDEFINED> instruction: 0x00016db0
   1a6c8:	andeq	r6, r1, r0, lsr #27
   1a6cc:	strdeq	r4, [r0], -r9
   1a6d0:	andeq	r6, r1, r4, lsr #26
   1a6d4:	andeq	r4, r0, r2, lsr #19
   1a6d8:	andeq	r4, r0, r9, lsr #29
   1a6dc:	andeq	r4, r0, pc, ror #27
   1a6e0:			; <UNDEFINED> instruction: 0x00004eb6
   1a6e4:	andeq	r4, r0, r3, lsr #28
   1a6e8:	andeq	r6, r1, ip, ror #25
   1a6ec:	andeq	r6, r1, ip, lsl sp
   1a6f0:	andeq	r6, r1, ip, lsl lr
   1a6f4:	andeq	r6, r1, ip, lsl #28
   1a6f8:	andeq	r4, r0, r5, ror #30
   1a6fc:	andeq	r6, r1, r0, lsr #25
   1a700:	muleq	r1, r8, ip
   1a704:	andeq	r6, r1, r8, lsl #25
   1a708:	andeq	r4, r0, r5, lsl #28
   1a70c:	andeq	r6, r1, r4, lsr ip
   1a710:	andeq	r6, r1, r8, lsl #24
   1a714:	strdeq	r6, [r1], -r8
   1a718:	andeq	r4, r0, fp, ror sp
   1a71c:	andeq	r6, r1, r0, ror #22
   1a720:	andeq	r5, r0, fp, asr #30
   1a724:	andeq	r6, r1, r8, lsr #23
   1a728:	andeq	r6, r1, r4, ror #28
   1a72c:	andeq	r6, r1, r0, lsl lr
   1a730:	andeq	r6, r1, r4, lsr #27
   1a734:	andeq	r6, r1, ip, lsl #25
   1a738:	strdeq	r6, [r1], -ip

0001a73c <print_yaml_data@@Base>:
   1a73c:	push	{r4, r5, fp, lr}
   1a740:	add	fp, sp, #8
   1a744:	sub	sp, sp, #544	; 0x220
   1a748:	ldr	r1, [pc, #288]	; 1a870 <print_yaml_data@@Base+0x134>
   1a74c:	ldr	r1, [pc, r1]
   1a750:	ldr	r2, [pc, #284]	; 1a874 <print_yaml_data@@Base+0x138>
   1a754:	add	r2, pc, r2
   1a758:	str	r0, [fp, #-12]
   1a75c:	ldr	r0, [fp, #-12]
   1a760:	str	r0, [r2]
   1a764:	ldr	r0, [r1]
   1a768:	sub	r1, fp, #16
   1a76c:	bl	1261c <coda_open@plt>
   1a770:	str	r0, [sp, #12]
   1a774:	ldr	r0, [sp, #12]
   1a778:	cmp	r0, #0
   1a77c:	beq	1a7c0 <print_yaml_data@@Base+0x84>
   1a780:	bl	129ac <coda_get_errno@plt>
   1a784:	ldr	r0, [r0]
   1a788:	cmn	r0, #21
   1a78c:	bne	1a7c0 <print_yaml_data@@Base+0x84>
   1a790:	movw	r0, #0
   1a794:	bl	12664 <coda_set_option_use_mmap@plt>
   1a798:	ldr	r1, [pc, #216]	; 1a878 <print_yaml_data@@Base+0x13c>
   1a79c:	ldr	r1, [pc, r1]
   1a7a0:	ldr	r1, [r1]
   1a7a4:	str	r0, [sp, #8]
   1a7a8:	mov	r0, r1
   1a7ac:	sub	r1, fp, #16
   1a7b0:	bl	1261c <coda_open@plt>
   1a7b4:	str	r0, [sp, #12]
   1a7b8:	movw	r0, #1
   1a7bc:	bl	12664 <coda_set_option_use_mmap@plt>
   1a7c0:	ldr	r0, [sp, #12]
   1a7c4:	cmp	r0, #0
   1a7c8:	beq	1a7d8 <print_yaml_data@@Base+0x9c>
   1a7cc:	ldr	r0, [pc, #168]	; 1a87c <print_yaml_data@@Base+0x140>
   1a7d0:	ldr	r0, [pc, r0]
   1a7d4:	blx	r0
   1a7d8:	ldr	r1, [fp, #-16]
   1a7dc:	add	r0, sp, #16
   1a7e0:	bl	1273c <coda_cursor_set_product@plt>
   1a7e4:	cmp	r0, #0
   1a7e8:	beq	1a7f8 <print_yaml_data@@Base+0xbc>
   1a7ec:	ldr	r0, [pc, #140]	; 1a880 <print_yaml_data@@Base+0x144>
   1a7f0:	ldr	r0, [pc, r0]
   1a7f4:	blx	r0
   1a7f8:	ldr	r0, [pc, #132]	; 1a884 <print_yaml_data@@Base+0x148>
   1a7fc:	ldr	r0, [pc, r0]
   1a800:	ldr	r0, [r0]
   1a804:	movw	r1, #0
   1a808:	cmp	r0, r1
   1a80c:	beq	1a844 <print_yaml_data@@Base+0x108>
   1a810:	ldr	r0, [pc, #112]	; 1a888 <print_yaml_data@@Base+0x14c>
   1a814:	ldr	r0, [pc, r0]
   1a818:	ldr	r1, [r0]
   1a81c:	add	r0, sp, #16
   1a820:	bl	12910 <coda_cursor_goto@plt>
   1a824:	str	r0, [sp, #12]
   1a828:	ldr	r0, [sp, #12]
   1a82c:	cmp	r0, #0
   1a830:	beq	1a840 <print_yaml_data@@Base+0x104>
   1a834:	ldr	r0, [pc, #80]	; 1a88c <print_yaml_data@@Base+0x150>
   1a838:	ldr	r0, [pc, r0]
   1a83c:	blx	r0
   1a840:	b	1a844 <print_yaml_data@@Base+0x108>
   1a844:	movw	r0, #0
   1a848:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   1a84c:	add	r1, sp, #16
   1a850:	str	r0, [sp, #4]
   1a854:	mov	r0, r1
   1a858:	movw	r1, #0
   1a85c:	bl	1a890 <print_yaml_data@@Base+0x154>
   1a860:	ldr	r0, [fp, #-16]
   1a864:	bl	128ec <coda_close@plt>
   1a868:	sub	sp, fp, #8
   1a86c:	pop	{r4, r5, fp, pc}
   1a870:	andeq	r6, r1, r0, ror #20
   1a874:	ldrdeq	r6, [r1], -r0
   1a878:	andeq	r6, r1, r0, lsl sl
   1a87c:	andeq	r6, r1, r8, lsl #20
   1a880:	andeq	r6, r1, r8, ror #19
   1a884:	andeq	r6, r1, r4, ror #19
   1a888:	andeq	r6, r1, ip, asr #19
   1a88c:	andeq	r6, r1, r0, lsr #19
   1a890:	push	{r4, r5, fp, lr}
   1a894:	add	fp, sp, #8
   1a898:	sub	sp, sp, #360	; 0x168
   1a89c:	ldr	r2, [pc, #2972]	; 1b440 <print_yaml_data@@Base+0xd04>
   1a8a0:	add	r2, pc, r2
   1a8a4:	str	r0, [fp, #-12]
   1a8a8:	str	r1, [fp, #-16]
   1a8ac:	movw	r0, #0
   1a8b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a8b4:	ldr	r0, [r2]
   1a8b8:	cmp	r0, #0
   1a8bc:	beq	1a9a8 <print_yaml_data@@Base+0x26c>
   1a8c0:	ldr	r0, [fp, #-12]
   1a8c4:	sub	r1, fp, #24
   1a8c8:	bl	126dc <coda_cursor_has_attributes@plt>
   1a8cc:	cmp	r0, #0
   1a8d0:	beq	1a8e0 <print_yaml_data@@Base+0x1a4>
   1a8d4:	ldr	r0, [pc, #2920]	; 1b444 <print_yaml_data@@Base+0xd08>
   1a8d8:	ldr	r0, [pc, r0]
   1a8dc:	blx	r0
   1a8e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8e4:	cmp	r0, #0
   1a8e8:	beq	1a9a4 <print_yaml_data@@Base+0x268>
   1a8ec:	ldr	r0, [fp, #-16]
   1a8f0:	cmp	r0, #0
   1a8f4:	beq	1a90c <print_yaml_data@@Base+0x1d0>
   1a8f8:	ldr	r0, [pc, #2888]	; 1b448 <print_yaml_data@@Base+0xd0c>
   1a8fc:	add	r0, pc, r0
   1a900:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1a904:	str	r0, [sp, #68]	; 0x44
   1a908:	bl	1b5e4 <print_yaml_data@@Base+0xea8>
   1a90c:	ldr	r0, [pc, #2872]	; 1b44c <print_yaml_data@@Base+0xd10>
   1a910:	add	r0, pc, r0
   1a914:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1a918:	ldr	r1, [fp, #-12]
   1a91c:	str	r0, [sp, #64]	; 0x40
   1a920:	mov	r0, r1
   1a924:	bl	12850 <coda_cursor_goto_attributes@plt>
   1a928:	cmp	r0, #0
   1a92c:	beq	1a93c <print_yaml_data@@Base+0x200>
   1a930:	ldr	r0, [pc, #2840]	; 1b450 <print_yaml_data@@Base+0xd14>
   1a934:	ldr	r0, [pc, r0]
   1a938:	blx	r0
   1a93c:	ldr	r0, [pc, #2844]	; 1b460 <print_yaml_data@@Base+0xd24>
   1a940:	add	r0, pc, r0
   1a944:	ldr	r1, [r0]
   1a948:	add	r1, r1, #1
   1a94c:	str	r1, [r0]
   1a950:	ldr	r0, [fp, #-12]
   1a954:	movw	r1, #1
   1a958:	bl	1a890 <print_yaml_data@@Base+0x154>
   1a95c:	ldr	r0, [pc, #2808]	; 1b45c <print_yaml_data@@Base+0xd20>
   1a960:	add	r0, pc, r0
   1a964:	ldr	r1, [r0]
   1a968:	mvn	r2, #0
   1a96c:	add	r1, r1, r2
   1a970:	str	r1, [r0]
   1a974:	ldr	r0, [fp, #-12]
   1a978:	bl	127b4 <coda_cursor_goto_parent@plt>
   1a97c:	ldr	r1, [pc, #2772]	; 1b458 <print_yaml_data@@Base+0xd1c>
   1a980:	add	r1, pc, r1
   1a984:	str	r0, [sp, #60]	; 0x3c
   1a988:	mov	r0, r1
   1a98c:	bl	1b694 <print_yaml_data@@Base+0xf58>
   1a990:	ldr	r1, [pc, #2748]	; 1b454 <print_yaml_data@@Base+0xd18>
   1a994:	add	r1, pc, r1
   1a998:	ldr	r2, [r1]
   1a99c:	add	r2, r2, #1
   1a9a0:	str	r2, [r1]
   1a9a4:	b	1a9a8 <print_yaml_data@@Base+0x26c>
   1a9a8:	ldr	r0, [fp, #-12]
   1a9ac:	sub	r1, fp, #20
   1a9b0:	bl	126e8 <coda_cursor_get_type_class@plt>
   1a9b4:	cmp	r0, #0
   1a9b8:	beq	1a9c8 <print_yaml_data@@Base+0x28c>
   1a9bc:	ldr	r0, [pc, #2720]	; 1b464 <print_yaml_data@@Base+0xd28>
   1a9c0:	ldr	r0, [pc, r0]
   1a9c4:	blx	r0
   1a9c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a9cc:	cmp	r0, #6
   1a9d0:	str	r0, [sp, #56]	; 0x38
   1a9d4:	bhi	1b414 <print_yaml_data@@Base+0xcd8>
   1a9d8:	add	r0, pc, #8
   1a9dc:	ldr	r1, [sp, #56]	; 0x38
   1a9e0:	ldr	r2, [r0, r1, lsl #2]
   1a9e4:	add	pc, r0, r2
   1a9e8:	andeq	r0, r0, ip, lsl r0
   1a9ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a9f0:	andeq	r0, r0, r0, lsl #9
   1a9f4:	andeq	r0, r0, r0, lsl #9
   1a9f8:	andeq	r0, r0, r0, lsl #9
   1a9fc:	andeq	r0, r0, r0, lsl #9
   1aa00:			; <UNDEFINED> instruction: 0x000008b4
   1aa04:	ldr	r0, [fp, #-12]
   1aa08:	sub	r1, fp, #28
   1aa0c:	bl	12640 <coda_cursor_get_num_elements@plt>
   1aa10:	cmp	r0, #0
   1aa14:	beq	1aa24 <print_yaml_data@@Base+0x2e8>
   1aa18:	ldr	r0, [pc, #2828]	; 1b52c <print_yaml_data@@Base+0xdf0>
   1aa1c:	ldr	r0, [pc, r0]
   1aa20:	blx	r0
   1aa24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aa28:	cmp	r0, #0
   1aa2c:	ble	1acc8 <print_yaml_data@@Base+0x58c>
   1aa30:	ldr	r0, [fp, #-16]
   1aa34:	cmp	r0, #0
   1aa38:	beq	1aa48 <print_yaml_data@@Base+0x30c>
   1aa3c:	ldr	r0, [pc, #2800]	; 1b534 <print_yaml_data@@Base+0xdf8>
   1aa40:	add	r0, pc, r0
   1aa44:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1aa48:	ldr	r0, [fp, #-12]
   1aa4c:	sub	r1, fp, #32
   1aa50:	bl	126a0 <coda_cursor_get_type@plt>
   1aa54:	cmp	r0, #0
   1aa58:	beq	1aa68 <print_yaml_data@@Base+0x32c>
   1aa5c:	ldr	r0, [pc, #2772]	; 1b538 <print_yaml_data@@Base+0xdfc>
   1aa60:	ldr	r0, [pc, r0]
   1aa64:	blx	r0
   1aa68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa6c:	sub	r1, fp, #36	; 0x24
   1aa70:	bl	1288c <coda_type_get_record_union_status@plt>
   1aa74:	cmp	r0, #0
   1aa78:	beq	1aa88 <print_yaml_data@@Base+0x34c>
   1aa7c:	ldr	r0, [pc, #2744]	; 1b53c <print_yaml_data@@Base+0xe00>
   1aa80:	ldr	r0, [pc, r0]
   1aa84:	blx	r0
   1aa88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aa8c:	cmp	r0, #0
   1aa90:	beq	1ab64 <print_yaml_data@@Base+0x428>
   1aa94:	ldr	r0, [fp, #-12]
   1aa98:	sub	r1, fp, #40	; 0x28
   1aa9c:	bl	1297c <coda_cursor_get_available_union_field_index@plt>
   1aaa0:	cmp	r0, #0
   1aaa4:	beq	1aab4 <print_yaml_data@@Base+0x378>
   1aaa8:	ldr	r0, [pc, #2732]	; 1b55c <print_yaml_data@@Base+0xe20>
   1aaac:	ldr	r0, [pc, r0]
   1aab0:	blx	r0
   1aab4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aab8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aabc:	sub	r2, fp, #44	; 0x2c
   1aac0:	bl	129c4 <coda_type_get_record_field_name@plt>
   1aac4:	cmp	r0, #0
   1aac8:	beq	1aad8 <print_yaml_data@@Base+0x39c>
   1aacc:	ldr	r0, [pc, #2700]	; 1b560 <print_yaml_data@@Base+0xe24>
   1aad0:	ldr	r0, [pc, r0]
   1aad4:	blx	r0
   1aad8:	ldr	r0, [fp, #-12]
   1aadc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aae0:	bl	12760 <coda_cursor_goto_record_field_by_index@plt>
   1aae4:	cmp	r0, #0
   1aae8:	beq	1aaf8 <print_yaml_data@@Base+0x3bc>
   1aaec:	ldr	r0, [pc, #2672]	; 1b564 <print_yaml_data@@Base+0xe28>
   1aaf0:	ldr	r0, [pc, r0]
   1aaf4:	blx	r0
   1aaf8:	ldr	r0, [fp, #-16]
   1aafc:	cmp	r0, #0
   1ab00:	beq	1ab08 <print_yaml_data@@Base+0x3cc>
   1ab04:	bl	1b5e4 <print_yaml_data@@Base+0xea8>
   1ab08:	ldr	r0, [pc, #2656]	; 1b570 <print_yaml_data@@Base+0xe34>
   1ab0c:	add	r0, pc, r0
   1ab10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab14:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1ab18:	ldr	r1, [pc, #2636]	; 1b56c <print_yaml_data@@Base+0xe30>
   1ab1c:	add	r1, pc, r1
   1ab20:	ldr	r2, [r1]
   1ab24:	add	r2, r2, #1
   1ab28:	str	r2, [r1]
   1ab2c:	ldr	r1, [fp, #-12]
   1ab30:	str	r0, [sp, #52]	; 0x34
   1ab34:	mov	r0, r1
   1ab38:	movw	r1, #1
   1ab3c:	bl	1a890 <print_yaml_data@@Base+0x154>
   1ab40:	ldr	r0, [pc, #2592]	; 1b568 <print_yaml_data@@Base+0xe2c>
   1ab44:	add	r0, pc, r0
   1ab48:	ldr	r1, [r0]
   1ab4c:	mvn	r2, #0
   1ab50:	add	r1, r1, r2
   1ab54:	str	r1, [r0]
   1ab58:	ldr	r0, [fp, #-12]
   1ab5c:	bl	127b4 <coda_cursor_goto_parent@plt>
   1ab60:	b	1acc4 <print_yaml_data@@Base+0x588>
   1ab64:	movw	r0, #1
   1ab68:	str	r0, [fp, #-48]	; 0xffffffd0
   1ab6c:	ldr	r0, [fp, #-12]
   1ab70:	bl	12754 <coda_cursor_goto_first_record_field@plt>
   1ab74:	cmp	r0, #0
   1ab78:	beq	1ab88 <print_yaml_data@@Base+0x44c>
   1ab7c:	ldr	r0, [pc, #2492]	; 1b540 <print_yaml_data@@Base+0xe04>
   1ab80:	ldr	r0, [pc, r0]
   1ab84:	blx	r0
   1ab88:	movw	r0, #0
   1ab8c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ab90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ab94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab98:	cmp	r0, r1
   1ab9c:	bge	1acbc <print_yaml_data@@Base+0x580>
   1aba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aba4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aba8:	sub	r2, fp, #56	; 0x38
   1abac:	bl	125e0 <coda_type_get_record_field_hidden_status@plt>
   1abb0:	cmp	r0, #0
   1abb4:	beq	1abc4 <print_yaml_data@@Base+0x488>
   1abb8:	ldr	r0, [pc, #2436]	; 1b544 <print_yaml_data@@Base+0xe08>
   1abbc:	ldr	r0, [pc, r0]
   1abc0:	blx	r0
   1abc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1abc8:	cmp	r0, #0
   1abcc:	bne	1ac74 <print_yaml_data@@Base+0x538>
   1abd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1abd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1abd8:	sub	r2, fp, #52	; 0x34
   1abdc:	bl	129c4 <coda_type_get_record_field_name@plt>
   1abe0:	cmp	r0, #0
   1abe4:	beq	1abf4 <print_yaml_data@@Base+0x4b8>
   1abe8:	ldr	r0, [pc, #2392]	; 1b548 <print_yaml_data@@Base+0xe0c>
   1abec:	ldr	r0, [pc, r0]
   1abf0:	blx	r0
   1abf4:	ldr	r0, [fp, #-16]
   1abf8:	cmp	r0, #0
   1abfc:	bne	1ac0c <print_yaml_data@@Base+0x4d0>
   1ac00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac04:	cmp	r0, #0
   1ac08:	bne	1ac10 <print_yaml_data@@Base+0x4d4>
   1ac0c:	bl	1b5e4 <print_yaml_data@@Base+0xea8>
   1ac10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ac14:	cmp	r0, #0
   1ac18:	beq	1ac24 <print_yaml_data@@Base+0x4e8>
   1ac1c:	movw	r0, #0
   1ac20:	str	r0, [fp, #-48]	; 0xffffffd0
   1ac24:	ldr	r0, [pc, #2344]	; 1b554 <print_yaml_data@@Base+0xe18>
   1ac28:	add	r0, pc, r0
   1ac2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ac30:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1ac34:	ldr	r1, [pc, #2324]	; 1b550 <print_yaml_data@@Base+0xe14>
   1ac38:	add	r1, pc, r1
   1ac3c:	ldr	r2, [r1]
   1ac40:	add	r2, r2, #1
   1ac44:	str	r2, [r1]
   1ac48:	ldr	r1, [fp, #-12]
   1ac4c:	str	r0, [sp, #48]	; 0x30
   1ac50:	mov	r0, r1
   1ac54:	movw	r1, #1
   1ac58:	bl	1a890 <print_yaml_data@@Base+0x154>
   1ac5c:	ldr	r0, [pc, #2280]	; 1b54c <print_yaml_data@@Base+0xe10>
   1ac60:	add	r0, pc, r0
   1ac64:	ldr	r1, [r0]
   1ac68:	mvn	r2, #0
   1ac6c:	add	r1, r1, r2
   1ac70:	str	r1, [r0]
   1ac74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ac78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac7c:	sub	r1, r1, #1
   1ac80:	cmp	r0, r1
   1ac84:	bge	1aca8 <print_yaml_data@@Base+0x56c>
   1ac88:	ldr	r0, [fp, #-12]
   1ac8c:	bl	12934 <coda_cursor_goto_next_record_field@plt>
   1ac90:	cmp	r0, #0
   1ac94:	beq	1aca4 <print_yaml_data@@Base+0x568>
   1ac98:	ldr	r0, [pc, #2232]	; 1b558 <print_yaml_data@@Base+0xe1c>
   1ac9c:	ldr	r0, [pc, r0]
   1aca0:	blx	r0
   1aca4:	b	1aca8 <print_yaml_data@@Base+0x56c>
   1aca8:	b	1acac <print_yaml_data@@Base+0x570>
   1acac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1acb0:	add	r0, r0, #1
   1acb4:	str	r0, [fp, #-40]	; 0xffffffd8
   1acb8:	b	1ab90 <print_yaml_data@@Base+0x454>
   1acbc:	ldr	r0, [fp, #-12]
   1acc0:	bl	127b4 <coda_cursor_goto_parent@plt>
   1acc4:	b	1acd4 <print_yaml_data@@Base+0x598>
   1acc8:	ldr	r0, [pc, #2144]	; 1b530 <print_yaml_data@@Base+0xdf4>
   1accc:	add	r0, pc, r0
   1acd0:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1acd4:	b	1b414 <print_yaml_data@@Base+0xcd8>
   1acd8:	sub	r2, fp, #88	; 0x58
   1acdc:	ldr	r0, [fp, #-12]
   1ace0:	sub	r1, fp, #92	; 0x5c
   1ace4:	bl	128d4 <coda_cursor_get_array_dim@plt>
   1ace8:	cmp	r0, #0
   1acec:	beq	1acfc <print_yaml_data@@Base+0x5c0>
   1acf0:	ldr	r0, [pc, #2064]	; 1b508 <print_yaml_data@@Base+0xdcc>
   1acf4:	ldr	r0, [pc, r0]
   1acf8:	blx	r0
   1acfc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1ad00:	cmp	r0, #0
   1ad04:	blt	1ae58 <print_yaml_data@@Base+0x71c>
   1ad08:	movw	r0, #1
   1ad0c:	str	r0, [fp, #-96]	; 0xffffffa0
   1ad10:	movw	r0, #0
   1ad14:	str	r0, [fp, #-100]	; 0xffffff9c
   1ad18:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ad1c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1ad20:	cmp	r0, r1
   1ad24:	bge	1ad54 <print_yaml_data@@Base+0x618>
   1ad28:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ad2c:	sub	r1, fp, #88	; 0x58
   1ad30:	add	r0, r1, r0, lsl #2
   1ad34:	ldr	r0, [r0]
   1ad38:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1ad3c:	mul	r0, r1, r0
   1ad40:	str	r0, [fp, #-96]	; 0xffffffa0
   1ad44:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ad48:	add	r0, r0, #1
   1ad4c:	str	r0, [fp, #-100]	; 0xffffff9c
   1ad50:	b	1ad18 <print_yaml_data@@Base+0x5dc>
   1ad54:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ad58:	cmp	r0, #0
   1ad5c:	ble	1ae48 <print_yaml_data@@Base+0x70c>
   1ad60:	ldr	r0, [pc, #1964]	; 1b514 <print_yaml_data@@Base+0xdd8>
   1ad64:	add	r0, pc, r0
   1ad68:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1ad6c:	ldr	r1, [fp, #-12]
   1ad70:	str	r0, [sp, #44]	; 0x2c
   1ad74:	mov	r0, r1
   1ad78:	bl	12730 <coda_cursor_goto_first_array_element@plt>
   1ad7c:	cmp	r0, #0
   1ad80:	beq	1ad90 <print_yaml_data@@Base+0x654>
   1ad84:	ldr	r0, [pc, #1932]	; 1b518 <print_yaml_data@@Base+0xddc>
   1ad88:	ldr	r0, [pc, r0]
   1ad8c:	blx	r0
   1ad90:	movw	r0, #0
   1ad94:	str	r0, [fp, #-100]	; 0xffffff9c
   1ad98:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ad9c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1ada0:	cmp	r0, r1
   1ada4:	bge	1ae3c <print_yaml_data@@Base+0x700>
   1ada8:	ldr	r0, [pc, #1908]	; 1b524 <print_yaml_data@@Base+0xde8>
   1adac:	add	r0, pc, r0
   1adb0:	bl	1b694 <print_yaml_data@@Base+0xf58>
   1adb4:	ldr	r1, [pc, #1892]	; 1b520 <print_yaml_data@@Base+0xde4>
   1adb8:	add	r1, pc, r1
   1adbc:	ldr	r2, [r1]
   1adc0:	add	r2, r2, #1
   1adc4:	str	r2, [r1]
   1adc8:	ldr	r1, [fp, #-12]
   1adcc:	str	r0, [sp, #40]	; 0x28
   1add0:	mov	r0, r1
   1add4:	movw	r1, #0
   1add8:	bl	1a890 <print_yaml_data@@Base+0x154>
   1addc:	ldr	r0, [pc, #1848]	; 1b51c <print_yaml_data@@Base+0xde0>
   1ade0:	add	r0, pc, r0
   1ade4:	ldr	r1, [r0]
   1ade8:	mvn	r2, #0
   1adec:	add	r1, r1, r2
   1adf0:	str	r1, [r0]
   1adf4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1adf8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1adfc:	sub	r1, r1, #1
   1ae00:	cmp	r0, r1
   1ae04:	bge	1ae28 <print_yaml_data@@Base+0x6ec>
   1ae08:	ldr	r0, [fp, #-12]
   1ae0c:	bl	12820 <coda_cursor_goto_next_array_element@plt>
   1ae10:	cmp	r0, #0
   1ae14:	beq	1ae24 <print_yaml_data@@Base+0x6e8>
   1ae18:	ldr	r0, [pc, #1800]	; 1b528 <print_yaml_data@@Base+0xdec>
   1ae1c:	ldr	r0, [pc, r0]
   1ae20:	blx	r0
   1ae24:	b	1ae28 <print_yaml_data@@Base+0x6ec>
   1ae28:	b	1ae2c <print_yaml_data@@Base+0x6f0>
   1ae2c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ae30:	add	r0, r0, #1
   1ae34:	str	r0, [fp, #-100]	; 0xffffff9c
   1ae38:	b	1ad98 <print_yaml_data@@Base+0x65c>
   1ae3c:	ldr	r0, [fp, #-12]
   1ae40:	bl	127b4 <coda_cursor_goto_parent@plt>
   1ae44:	b	1ae54 <print_yaml_data@@Base+0x718>
   1ae48:	ldr	r0, [pc, #1728]	; 1b510 <print_yaml_data@@Base+0xdd4>
   1ae4c:	add	r0, pc, r0
   1ae50:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1ae54:	b	1ae64 <print_yaml_data@@Base+0x728>
   1ae58:	ldr	r0, [pc, #1708]	; 1b50c <print_yaml_data@@Base+0xdd0>
   1ae5c:	add	r0, pc, r0
   1ae60:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1ae64:	b	1b414 <print_yaml_data@@Base+0xcd8>
   1ae68:	ldr	r0, [fp, #-12]
   1ae6c:	sub	r1, fp, #104	; 0x68
   1ae70:	bl	12778 <coda_cursor_get_read_type@plt>
   1ae74:	cmp	r0, #0
   1ae78:	beq	1ae88 <print_yaml_data@@Base+0x74c>
   1ae7c:	ldr	r0, [pc, #1552]	; 1b494 <print_yaml_data@@Base+0xd58>
   1ae80:	ldr	r0, [pc, r0]
   1ae84:	blx	r0
   1ae88:	ldr	r0, [fp, #-104]	; 0xffffff98
   1ae8c:	add	r0, r0, #1
   1ae90:	cmp	r0, #13
   1ae94:	str	r0, [sp, #36]	; 0x24
   1ae98:	bhi	1b298 <print_yaml_data@@Base+0xb5c>
   1ae9c:	add	r0, pc, #8
   1aea0:	ldr	r1, [sp, #36]	; 0x24
   1aea4:	ldr	r2, [r0, r1, lsl #2]
   1aea8:	add	pc, r0, r2
   1aeac:	andeq	r0, r0, r0, ror #7
   1aeb0:	muleq	r0, r4, r2
   1aeb4:	andeq	r0, r0, r8, asr #5
   1aeb8:	muleq	r0, r4, r2
   1aebc:	andeq	r0, r0, r8, asr #5
   1aec0:	muleq	r0, r4, r2
   1aec4:	andeq	r0, r0, r8, asr #5
   1aec8:	strdeq	r0, [r0], -ip
   1aecc:	andeq	r0, r0, r0, asr #6
   1aed0:	andeq	r0, r0, r4, lsl #7
   1aed4:	andeq	r0, r0, r4, lsl #7
   1aed8:	andeq	r0, r0, r8, lsr r0
   1aedc:	andeq	r0, r0, r8, lsl #1
   1aee0:	andeq	r0, r0, ip, ror #2
   1aee4:	ldr	r0, [fp, #-12]
   1aee8:	sub	r1, fp, #105	; 0x69
   1aeec:	bl	1285c <coda_cursor_read_char@plt>
   1aef0:	cmp	r0, #0
   1aef4:	beq	1af04 <print_yaml_data@@Base+0x7c8>
   1aef8:	ldr	r0, [pc, #1532]	; 1b4fc <print_yaml_data@@Base+0xdc0>
   1aefc:	ldr	r0, [pc, r0]
   1af00:	blx	r0
   1af04:	ldr	r0, [pc, #1528]	; 1b504 <print_yaml_data@@Base+0xdc8>
   1af08:	add	r0, pc, r0
   1af0c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1af10:	sub	r1, fp, #105	; 0x69
   1af14:	str	r0, [sp, #32]
   1af18:	mov	r0, r1
   1af1c:	movw	r1, #1
   1af20:	bl	1b700 <print_yaml_data@@Base+0xfc4>
   1af24:	ldr	r0, [pc, #1492]	; 1b500 <print_yaml_data@@Base+0xdc4>
   1af28:	add	r0, pc, r0
   1af2c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1af30:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1af34:	ldr	r0, [fp, #-12]
   1af38:	sub	r1, fp, #112	; 0x70
   1af3c:	bl	127e4 <coda_cursor_get_string_length@plt>
   1af40:	cmp	r0, #0
   1af44:	beq	1af54 <print_yaml_data@@Base+0x818>
   1af48:	ldr	r0, [pc, #1424]	; 1b4e0 <print_yaml_data@@Base+0xda4>
   1af4c:	ldr	r0, [pc, r0]
   1af50:	blx	r0
   1af54:	ldr	r0, [fp, #-112]	; 0xffffff90
   1af58:	add	r0, r0, #1
   1af5c:	bl	12784 <malloc@plt>
   1af60:	str	r0, [fp, #-116]	; 0xffffff8c
   1af64:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1af68:	movw	r1, #0
   1af6c:	cmp	r0, r1
   1af70:	bne	1afa8 <print_yaml_data@@Base+0x86c>
   1af74:	ldr	r0, [pc, #1388]	; 1b4e8 <print_yaml_data@@Base+0xdac>
   1af78:	add	r1, pc, r0
   1af7c:	ldr	r0, [pc, #1384]	; 1b4ec <print_yaml_data@@Base+0xdb0>
   1af80:	add	r3, pc, r0
   1af84:	ldr	r0, [fp, #-112]	; 0xffffff90
   1af88:	add	r2, r0, #1
   1af8c:	mvn	r0, #0
   1af90:	movw	ip, #361	; 0x169
   1af94:	str	ip, [sp]
   1af98:	bl	12610 <coda_set_error@plt>
   1af9c:	ldr	r0, [pc, #1344]	; 1b4e4 <print_yaml_data@@Base+0xda8>
   1afa0:	ldr	r0, [pc, r0]
   1afa4:	blx	r0
   1afa8:	ldr	r0, [fp, #-12]
   1afac:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1afb0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1afb4:	add	r2, r2, #1
   1afb8:	bl	127a8 <coda_cursor_read_string@plt>
   1afbc:	cmp	r0, #0
   1afc0:	beq	1afd0 <print_yaml_data@@Base+0x894>
   1afc4:	ldr	r0, [pc, #1316]	; 1b4f0 <print_yaml_data@@Base+0xdb4>
   1afc8:	ldr	r0, [pc, r0]
   1afcc:	blx	r0
   1afd0:	ldr	r0, [pc, #1312]	; 1b4f8 <print_yaml_data@@Base+0xdbc>
   1afd4:	add	r0, pc, r0
   1afd8:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1afdc:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1afe0:	ldr	r2, [fp, #-112]	; 0xffffff90
   1afe4:	str	r0, [sp, #28]
   1afe8:	mov	r0, r1
   1afec:	mov	r1, r2
   1aff0:	bl	1b700 <print_yaml_data@@Base+0xfc4>
   1aff4:	ldr	r0, [pc, #1272]	; 1b4f4 <print_yaml_data@@Base+0xdb8>
   1aff8:	add	r0, pc, r0
   1affc:	ldr	r1, [fp, #-112]	; 0xffffff90
   1b000:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b004:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1b008:	str	r0, [sp, #24]
   1b00c:	mov	r0, r1
   1b010:	bl	12658 <free@plt>
   1b014:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1b018:	ldr	r0, [fp, #-12]
   1b01c:	sub	r1, fp, #128	; 0x80
   1b020:	bl	1294c <coda_cursor_get_bit_size@plt>
   1b024:	cmp	r0, #0
   1b028:	beq	1b038 <print_yaml_data@@Base+0x8fc>
   1b02c:	ldr	r0, [pc, #1172]	; 1b4c8 <print_yaml_data@@Base+0xd8c>
   1b030:	ldr	r0, [pc, r0]
   1b034:	blx	r0
   1b038:	ldr	r0, [fp, #-128]	; 0xffffff80
   1b03c:	ldr	r1, [fp, #-124]	; 0xffffff84
   1b040:	lsr	r2, r0, #3
   1b044:	orr	r2, r2, r1, lsl #29
   1b048:	asr	r1, r1, #3
   1b04c:	and	r0, r0, #7
   1b050:	adds	r3, r2, #1
   1b054:	adc	ip, r1, #0
   1b058:	cmp	r0, #0
   1b05c:	movne	r2, r3
   1b060:	cmp	r0, #0
   1b064:	movne	r1, ip
   1b068:	str	r2, [fp, #-136]	; 0xffffff78
   1b06c:	str	r1, [fp, #-132]	; 0xffffff7c
   1b070:	ldr	r0, [fp, #-136]	; 0xffffff78
   1b074:	bl	12784 <malloc@plt>
   1b078:	str	r0, [fp, #-140]	; 0xffffff74
   1b07c:	ldr	r0, [fp, #-140]	; 0xffffff74
   1b080:	movw	r1, #0
   1b084:	cmp	r0, r1
   1b088:	bne	1b0bc <print_yaml_data@@Base+0x980>
   1b08c:	ldr	r0, [pc, #1084]	; 1b4d0 <print_yaml_data@@Base+0xd94>
   1b090:	add	r1, pc, r0
   1b094:	ldr	r0, [pc, #1080]	; 1b4d4 <print_yaml_data@@Base+0xd98>
   1b098:	add	r3, pc, r0
   1b09c:	ldr	r2, [fp, #-136]	; 0xffffff78
   1b0a0:	mvn	r0, #0
   1b0a4:	movw	ip, #392	; 0x188
   1b0a8:	str	ip, [sp]
   1b0ac:	bl	12610 <coda_set_error@plt>
   1b0b0:	ldr	r0, [pc, #1044]	; 1b4cc <print_yaml_data@@Base+0xd90>
   1b0b4:	ldr	r0, [pc, r0]
   1b0b8:	blx	r0
   1b0bc:	ldr	r0, [fp, #-12]
   1b0c0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b0c4:	ldr	r2, [fp, #-128]	; 0xffffff80
   1b0c8:	ldr	r3, [fp, #-124]	; 0xffffff84
   1b0cc:	mov	ip, sp
   1b0d0:	str	r3, [ip, #4]
   1b0d4:	str	r2, [ip]
   1b0d8:	mov	r2, #0
   1b0dc:	str	r2, [sp, #20]
   1b0e0:	ldr	r3, [sp, #20]
   1b0e4:	bl	129dc <coda_cursor_read_bits@plt>
   1b0e8:	cmp	r0, #0
   1b0ec:	beq	1b0fc <print_yaml_data@@Base+0x9c0>
   1b0f0:	ldr	r0, [pc, #992]	; 1b4d8 <print_yaml_data@@Base+0xd9c>
   1b0f4:	ldr	r0, [pc, r0]
   1b0f8:	blx	r0
   1b0fc:	ldr	r0, [pc, #1140]	; 1b578 <print_yaml_data@@Base+0xe3c>
   1b100:	add	r0, pc, r0
   1b104:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b108:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b10c:	ldr	r2, [fp, #-136]	; 0xffffff78
   1b110:	str	r0, [sp, #16]
   1b114:	mov	r0, r1
   1b118:	mov	r1, r2
   1b11c:	bl	1b700 <print_yaml_data@@Base+0xfc4>
   1b120:	ldr	r0, [pc, #948]	; 1b4dc <print_yaml_data@@Base+0xda0>
   1b124:	add	r0, pc, r0
   1b128:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b12c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b130:	str	r0, [sp, #12]
   1b134:	mov	r0, r1
   1b138:	bl	12658 <free@plt>
   1b13c:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1b140:	ldr	r0, [fp, #-12]
   1b144:	sub	r1, fp, #144	; 0x90
   1b148:	bl	12988 <coda_cursor_read_int32@plt>
   1b14c:	cmp	r0, #0
   1b150:	beq	1b160 <print_yaml_data@@Base+0xa24>
   1b154:	ldr	r0, [pc, #868]	; 1b4c0 <print_yaml_data@@Base+0xd84>
   1b158:	ldr	r0, [pc, r0]
   1b15c:	blx	r0
   1b160:	ldr	r0, [pc, #860]	; 1b4c4 <print_yaml_data@@Base+0xd88>
   1b164:	add	r0, pc, r0
   1b168:	ldr	r1, [fp, #-144]	; 0xffffff70
   1b16c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b170:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1b174:	ldr	r0, [fp, #-12]
   1b178:	sub	r1, fp, #148	; 0x94
   1b17c:	bl	1267c <coda_cursor_read_uint32@plt>
   1b180:	cmp	r0, #0
   1b184:	beq	1b194 <print_yaml_data@@Base+0xa58>
   1b188:	ldr	r0, [pc, #808]	; 1b4b8 <print_yaml_data@@Base+0xd7c>
   1b18c:	ldr	r0, [pc, r0]
   1b190:	blx	r0
   1b194:	ldr	r0, [pc, #800]	; 1b4bc <print_yaml_data@@Base+0xd80>
   1b198:	add	r0, pc, r0
   1b19c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1b1a0:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b1a4:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1b1a8:	ldr	r0, [fp, #-12]
   1b1ac:	sub	r1, fp, #160	; 0xa0
   1b1b0:	bl	128f8 <coda_cursor_read_int64@plt>
   1b1b4:	cmp	r0, #0
   1b1b8:	beq	1b1c8 <print_yaml_data@@Base+0xa8c>
   1b1bc:	ldr	r0, [pc, #748]	; 1b4b0 <print_yaml_data@@Base+0xd74>
   1b1c0:	ldr	r0, [pc, r0]
   1b1c4:	blx	r0
   1b1c8:	sub	r2, fp, #181	; 0xb5
   1b1cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1b1d0:	ldr	r1, [fp, #-156]	; 0xffffff64
   1b1d4:	bl	129e8 <coda_str64@plt>
   1b1d8:	ldr	r0, [pc, #724]	; 1b4b4 <print_yaml_data@@Base+0xd78>
   1b1dc:	add	r0, pc, r0
   1b1e0:	sub	r1, fp, #181	; 0xb5
   1b1e4:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b1e8:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1b1ec:	ldr	r0, [fp, #-12]
   1b1f0:	add	r1, sp, #176	; 0xb0
   1b1f4:	bl	127f0 <coda_cursor_read_uint64@plt>
   1b1f8:	cmp	r0, #0
   1b1fc:	beq	1b20c <print_yaml_data@@Base+0xad0>
   1b200:	ldr	r0, [pc, #672]	; 1b4a8 <print_yaml_data@@Base+0xd6c>
   1b204:	ldr	r0, [pc, r0]
   1b208:	blx	r0
   1b20c:	add	r2, sp, #155	; 0x9b
   1b210:	ldr	r0, [sp, #176]	; 0xb0
   1b214:	ldr	r1, [sp, #180]	; 0xb4
   1b218:	bl	1264c <coda_str64u@plt>
   1b21c:	ldr	r0, [pc, #648]	; 1b4ac <print_yaml_data@@Base+0xd70>
   1b220:	add	r0, pc, r0
   1b224:	add	r1, sp, #155	; 0x9b
   1b228:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b22c:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1b230:	ldr	r0, [fp, #-12]
   1b234:	add	r1, sp, #144	; 0x90
   1b238:	bl	127fc <coda_cursor_read_double@plt>
   1b23c:	cmp	r0, #0
   1b240:	beq	1b250 <print_yaml_data@@Base+0xb14>
   1b244:	ldr	r0, [pc, #592]	; 1b49c <print_yaml_data@@Base+0xd60>
   1b248:	ldr	r0, [pc, r0]
   1b24c:	blx	r0
   1b250:	ldr	r0, [fp, #-104]	; 0xffffff98
   1b254:	cmp	r0, #8
   1b258:	bne	1b274 <print_yaml_data@@Base+0xb38>
   1b25c:	ldr	r0, [pc, #576]	; 1b4a4 <print_yaml_data@@Base+0xd68>
   1b260:	add	r0, pc, r0
   1b264:	vldr	d16, [sp, #144]	; 0x90
   1b268:	vmov	r2, r3, d16
   1b26c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b270:	b	1b288 <print_yaml_data@@Base+0xb4c>
   1b274:	ldr	r0, [pc, #548]	; 1b4a0 <print_yaml_data@@Base+0xd64>
   1b278:	add	r0, pc, r0
   1b27c:	vldr	d16, [sp, #144]	; 0x90
   1b280:	vmov	r2, r3, d16
   1b284:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b288:	b	1b298 <print_yaml_data@@Base+0xb5c>
   1b28c:	ldr	r0, [pc, #516]	; 1b498 <print_yaml_data@@Base+0xd5c>
   1b290:	add	r0, pc, r0
   1b294:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b298:	b	1b414 <print_yaml_data@@Base+0xcd8>
   1b29c:	ldr	r0, [fp, #-12]
   1b2a0:	add	r1, sp, #140	; 0x8c
   1b2a4:	bl	12724 <coda_cursor_get_special_type@plt>
   1b2a8:	cmp	r0, #0
   1b2ac:	beq	1b2bc <print_yaml_data@@Base+0xb80>
   1b2b0:	ldr	r0, [pc, #432]	; 1b468 <print_yaml_data@@Base+0xd2c>
   1b2b4:	ldr	r0, [pc, r0]
   1b2b8:	blx	r0
   1b2bc:	ldr	r0, [sp, #140]	; 0x8c
   1b2c0:	cmp	r0, #3
   1b2c4:	str	r0, [sp, #8]
   1b2c8:	bhi	1b410 <print_yaml_data@@Base+0xcd4>
   1b2cc:	add	r0, pc, #8
   1b2d0:	ldr	r1, [sp, #8]
   1b2d4:	ldr	r2, [r0, r1, lsl #2]
   1b2d8:	add	pc, r0, r2
   1b2dc:	andeq	r0, r0, r0, lsl r0
   1b2e0:	andeq	r0, r0, r0, lsr #32
   1b2e4:	andeq	r0, r0, r8, asr r0
   1b2e8:	strdeq	r0, [r0], -r4
   1b2ec:	ldr	r0, [pc, #412]	; 1b490 <print_yaml_data@@Base+0xd54>
   1b2f0:	add	r0, pc, r0
   1b2f4:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b2f8:	b	1b410 <print_yaml_data@@Base+0xcd4>
   1b2fc:	ldr	r0, [fp, #-12]
   1b300:	add	r1, sp, #128	; 0x80
   1b304:	bl	127fc <coda_cursor_read_double@plt>
   1b308:	cmp	r0, #0
   1b30c:	beq	1b31c <print_yaml_data@@Base+0xbe0>
   1b310:	ldr	r0, [pc, #368]	; 1b488 <print_yaml_data@@Base+0xd4c>
   1b314:	ldr	r0, [pc, r0]
   1b318:	blx	r0
   1b31c:	ldr	r0, [pc, #360]	; 1b48c <print_yaml_data@@Base+0xd50>
   1b320:	add	r0, pc, r0
   1b324:	vldr	d16, [sp, #128]	; 0x80
   1b328:	vmov	r2, r3, d16
   1b32c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b330:	b	1b410 <print_yaml_data@@Base+0xcd4>
   1b334:	ldr	r0, [fp, #-12]
   1b338:	add	r1, sp, #120	; 0x78
   1b33c:	bl	127fc <coda_cursor_read_double@plt>
   1b340:	cmp	r0, #0
   1b344:	beq	1b354 <print_yaml_data@@Base+0xc18>
   1b348:	ldr	r0, [pc, #292]	; 1b474 <print_yaml_data@@Base+0xd38>
   1b34c:	ldr	r0, [pc, r0]
   1b350:	blx	r0
   1b354:	vldr	d0, [sp, #120]	; 0x78
   1b358:	bl	12808 <coda_isNaN@plt>
   1b35c:	cmp	r0, #0
   1b360:	bne	1b374 <print_yaml_data@@Base+0xc38>
   1b364:	vldr	d0, [sp, #120]	; 0x78
   1b368:	bl	126b8 <coda_isInf@plt>
   1b36c:	cmp	r0, #0
   1b370:	beq	1b38c <print_yaml_data@@Base+0xc50>
   1b374:	ldr	r0, [pc, #264]	; 1b484 <print_yaml_data@@Base+0xd48>
   1b378:	add	r0, pc, r0
   1b37c:	vldr	d16, [sp, #120]	; 0x78
   1b380:	vmov	r2, r3, d16
   1b384:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b388:	b	1b3cc <print_yaml_data@@Base+0xc90>
   1b38c:	ldr	r0, [pc, #228]	; 1b478 <print_yaml_data@@Base+0xd3c>
   1b390:	add	r0, pc, r0
   1b394:	add	r1, sp, #93	; 0x5d
   1b398:	vldr	d0, [sp, #120]	; 0x78
   1b39c:	bl	12634 <coda_time_double_to_string@plt>
   1b3a0:	cmp	r0, #0
   1b3a4:	beq	1b3b8 <print_yaml_data@@Base+0xc7c>
   1b3a8:	ldr	r0, [pc, #208]	; 1b480 <print_yaml_data@@Base+0xd44>
   1b3ac:	add	r0, pc, r0
   1b3b0:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b3b4:	b	1b3c8 <print_yaml_data@@Base+0xc8c>
   1b3b8:	ldr	r0, [pc, #188]	; 1b47c <print_yaml_data@@Base+0xd40>
   1b3bc:	add	r0, pc, r0
   1b3c0:	add	r1, sp, #93	; 0x5d
   1b3c4:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b3c8:	b	1b3cc <print_yaml_data@@Base+0xc90>
   1b3cc:	b	1b410 <print_yaml_data@@Base+0xcd4>
   1b3d0:	ldr	r0, [fp, #-12]
   1b3d4:	add	r1, sp, #80	; 0x50
   1b3d8:	add	r2, sp, #72	; 0x48
   1b3dc:	bl	12898 <coda_cursor_read_complex_double_split@plt>
   1b3e0:	cmp	r0, #0
   1b3e4:	beq	1b3f4 <print_yaml_data@@Base+0xcb8>
   1b3e8:	ldr	r0, [pc, #124]	; 1b46c <print_yaml_data@@Base+0xd30>
   1b3ec:	ldr	r0, [pc, r0]
   1b3f0:	blx	r0
   1b3f4:	ldr	r0, [pc, #116]	; 1b470 <print_yaml_data@@Base+0xd34>
   1b3f8:	add	r0, pc, r0
   1b3fc:	vldr	d16, [sp, #80]	; 0x50
   1b400:	vldr	d17, [sp, #72]	; 0x48
   1b404:	vmov	r2, r3, d16
   1b408:	vstr	d17, [sp]
   1b40c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b410:	b	1b414 <print_yaml_data@@Base+0xcd8>
   1b414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b418:	cmp	r0, #0
   1b41c:	beq	1b438 <print_yaml_data@@Base+0xcfc>
   1b420:	ldr	r0, [pc, #332]	; 1b574 <print_yaml_data@@Base+0xe38>
   1b424:	add	r0, pc, r0
   1b428:	ldr	r1, [r0]
   1b42c:	mvn	r2, #0
   1b430:	add	r1, r1, r2
   1b434:	str	r1, [r0]
   1b438:	sub	sp, fp, #8
   1b43c:	pop	{r4, r5, fp, pc}
   1b440:	andeq	r6, r1, r4, lsl #19
   1b444:	andeq	r6, r1, r0, lsl #18
   1b448:	andeq	r5, r0, pc, ror #24
   1b44c:	andeq	r4, r0, sp, ror sl
   1b450:	andeq	r6, r1, r4, lsr #17
   1b454:	muleq	r1, r4, r8
   1b458:	andeq	r4, r0, r4, lsl sl
   1b45c:	andeq	r6, r1, r8, asr #17
   1b460:	andeq	r6, r1, r8, ror #17
   1b464:	andeq	r6, r1, r8, lsl r8
   1b468:	andeq	r5, r1, r4, lsr #30
   1b46c:	andeq	r5, r1, ip, ror #27
   1b470:	andeq	r3, r0, r7, asr #18
   1b474:	andeq	r5, r1, ip, lsl #29
   1b478:	muleq	r0, r8, lr
   1b47c:	andeq	r4, r0, sp, asr r0
   1b480:	muleq	r0, r9, lr
   1b484:	andeq	r3, r0, r4, lsr #19
   1b488:	andeq	r5, r1, r4, asr #29
   1b48c:	strdeq	r3, [r0], -ip
   1b490:	andeq	r4, r0, ip, lsl r1
   1b494:	andeq	r6, r1, r8, asr r3
   1b498:	andeq	r4, r0, ip, ror r1
   1b49c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1b4a0:	andeq	r3, r0, r4, lsr #21
   1b4a4:	andeq	r3, r0, sl, ror sl
   1b4a8:	ldrdeq	r5, [r1], -r4
   1b4ac:	strdeq	r4, [r0], -r9
   1b4b0:	andeq	r6, r1, r8, lsl r0
   1b4b4:	andeq	r4, r0, sp, lsr r2
   1b4b8:	andeq	r6, r1, ip, asr #32
   1b4bc:	andeq	r3, r0, sp, lsr fp
   1b4c0:	andeq	r6, r1, r0, lsl #1
   1b4c4:	andeq	r3, r0, ip, ror #22
   1b4c8:	andeq	r6, r1, r8, lsr #3
   1b4cc:	andeq	r6, r1, r4, lsr #2
   1b4d0:	andeq	r3, r0, r0, lsl #21
   1b4d4:	andeq	r4, r0, r3, lsl r3
   1b4d8:	andeq	r6, r1, r4, ror #1
   1b4dc:	andeq	r5, r0, r6, asr #8
   1b4e0:	andeq	r6, r1, ip, lsl #5
   1b4e4:	andeq	r6, r1, r8, lsr r2
   1b4e8:	muleq	r0, r8, fp
   1b4ec:	andeq	r4, r0, fp, lsr #8
   1b4f0:	andeq	r6, r1, r0, lsl r2
   1b4f4:	andeq	r5, r0, r2, ror r5
   1b4f8:	muleq	r0, r8, r2
   1b4fc:	ldrdeq	r6, [r1], -ip
   1b500:	andeq	r5, r0, r2, asr #12
   1b504:	andeq	r4, r0, r4, ror #6
   1b508:	andeq	r6, r1, r4, ror #9
   1b50c:	andeq	r4, r0, fp, asr #10
   1b510:	andeq	r4, r0, fp, asr r5
   1b514:	andeq	r5, r0, r7, lsl #16
   1b518:	andeq	r6, r1, r0, asr r4
   1b51c:	andeq	r6, r1, r8, asr #8
   1b520:	andeq	r6, r1, r0, ror r4
   1b524:	strdeq	r4, [r0], -r8
   1b528:			; <UNDEFINED> instruction: 0x000163bc
   1b52c:			; <UNDEFINED> instruction: 0x000167bc
   1b530:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1b534:	andeq	r5, r0, fp, lsr #22
   1b538:	andeq	r6, r1, r8, ror r7
   1b53c:	andeq	r6, r1, r8, asr r7
   1b540:	andeq	r6, r1, r8, asr r6
   1b544:	andeq	r6, r1, ip, lsl r6
   1b548:	andeq	r6, r1, ip, ror #11
   1b54c:	andeq	r6, r1, r8, asr #11
   1b550:	strdeq	r6, [r1], -r0
   1b554:	andeq	r4, r0, r3, ror r7
   1b558:	andeq	r6, r1, ip, lsr r5
   1b55c:	andeq	r6, r1, ip, lsr #14
   1b560:	andeq	r6, r1, r8, lsl #14
   1b564:	andeq	r6, r1, r8, ror #13
   1b568:	andeq	r6, r1, r4, ror #13
   1b56c:	andeq	r6, r1, ip, lsl #14
   1b570:	andeq	r4, r0, pc, lsl #17
   1b574:	andeq	r5, r1, r4, lsl #28
   1b578:	andeq	r4, r0, ip, ror #2
   1b57c:	sub	sp, sp, #12
   1b580:	push	{fp, lr}
   1b584:	mov	fp, sp
   1b588:	sub	sp, sp, #20
   1b58c:	str	r3, [fp, #16]
   1b590:	str	r2, [fp, #12]
   1b594:	str	r1, [fp, #8]
   1b598:	str	r0, [fp, #-4]
   1b59c:	add	r0, fp, #8
   1b5a0:	str	r0, [sp, #8]
   1b5a4:	ldr	r0, [pc, #52]	; 1b5e0 <print_yaml_data@@Base+0xea4>
   1b5a8:	ldr	r0, [pc, r0]
   1b5ac:	ldr	r0, [r0]
   1b5b0:	ldr	r1, [fp, #-4]
   1b5b4:	ldr	r2, [sp, #8]
   1b5b8:	bl	12904 <vfprintf@plt>
   1b5bc:	str	r0, [fp, #-8]
   1b5c0:	add	r0, sp, #8
   1b5c4:	ldr	r1, [fp, #-8]
   1b5c8:	str	r0, [sp, #4]
   1b5cc:	mov	r0, r1
   1b5d0:	mov	sp, fp
   1b5d4:	pop	{fp, lr}
   1b5d8:	add	sp, sp, #12
   1b5dc:	bx	lr
   1b5e0:	andeq	r5, r1, r0, lsl ip
   1b5e4:	push	{fp, lr}
   1b5e8:	mov	fp, sp
   1b5ec:	sub	sp, sp, #8
   1b5f0:	ldr	r0, [pc, #128]	; 1b678 <print_yaml_data@@Base+0xf3c>
   1b5f4:	add	r0, pc, r0
   1b5f8:	ldr	r0, [r0]
   1b5fc:	cmp	r0, #0
   1b600:	blt	1b608 <print_yaml_data@@Base+0xecc>
   1b604:	b	1b628 <print_yaml_data@@Base+0xeec>
   1b608:	ldr	r0, [pc, #108]	; 1b67c <print_yaml_data@@Base+0xf40>
   1b60c:	add	r0, pc, r0
   1b610:	ldr	r1, [pc, #104]	; 1b680 <print_yaml_data@@Base+0xf44>
   1b614:	add	r1, pc, r1
   1b618:	ldr	r2, [pc, #100]	; 1b684 <print_yaml_data@@Base+0xf48>
   1b61c:	add	r3, pc, r2
   1b620:	movw	r2, #44	; 0x2c
   1b624:	bl	129f4 <__assert_fail@plt>
   1b628:	ldr	r0, [pc, #88]	; 1b688 <print_yaml_data@@Base+0xf4c>
   1b62c:	add	r0, pc, r0
   1b630:	ldr	r0, [r0]
   1b634:	str	r0, [sp, #4]
   1b638:	ldr	r0, [sp, #4]
   1b63c:	cmp	r0, #0
   1b640:	ble	1b670 <print_yaml_data@@Base+0xf34>
   1b644:	ldr	r0, [pc, #64]	; 1b68c <print_yaml_data@@Base+0xf50>
   1b648:	add	r1, pc, r0
   1b64c:	ldr	r0, [pc, #60]	; 1b690 <print_yaml_data@@Base+0xf54>
   1b650:	ldr	r0, [pc, r0]
   1b654:	ldr	r0, [r0]
   1b658:	bl	12814 <fprintf@plt>
   1b65c:	ldr	r0, [sp, #4]
   1b660:	mvn	r1, #0
   1b664:	add	r0, r0, r1
   1b668:	str	r0, [sp, #4]
   1b66c:	b	1b638 <print_yaml_data@@Base+0xefc>
   1b670:	mov	sp, fp
   1b674:	pop	{fp, pc}
   1b678:	andeq	r5, r1, r4, lsr ip
   1b67c:	andeq	r3, r0, sp, lsr r7
   1b680:	muleq	r0, r7, sp
   1b684:	andeq	r3, r0, r9, lsr r7
   1b688:	strdeq	r5, [r1], -ip
   1b68c:	andeq	r3, r0, r7, asr #11
   1b690:	andeq	r5, r1, r8, ror #22
   1b694:	sub	sp, sp, #12
   1b698:	push	{fp, lr}
   1b69c:	mov	fp, sp
   1b6a0:	sub	sp, sp, #20
   1b6a4:	str	r3, [fp, #16]
   1b6a8:	str	r2, [fp, #12]
   1b6ac:	str	r1, [fp, #8]
   1b6b0:	str	r0, [fp, #-4]
   1b6b4:	bl	1b5e4 <print_yaml_data@@Base+0xea8>
   1b6b8:	add	r0, fp, #8
   1b6bc:	str	r0, [sp, #8]
   1b6c0:	ldr	r0, [pc, #52]	; 1b6fc <print_yaml_data@@Base+0xfc0>
   1b6c4:	ldr	r0, [pc, r0]
   1b6c8:	ldr	r0, [r0]
   1b6cc:	ldr	r1, [fp, #-4]
   1b6d0:	ldr	r2, [sp, #8]
   1b6d4:	bl	12904 <vfprintf@plt>
   1b6d8:	str	r0, [fp, #-8]
   1b6dc:	add	r0, sp, #8
   1b6e0:	ldr	r1, [fp, #-8]
   1b6e4:	str	r0, [sp, #4]
   1b6e8:	mov	r0, r1
   1b6ec:	mov	sp, fp
   1b6f0:	pop	{fp, lr}
   1b6f4:	add	sp, sp, #12
   1b6f8:	bx	lr
   1b6fc:	strdeq	r5, [r1], -r4
   1b700:	push	{fp, lr}
   1b704:	mov	fp, sp
   1b708:	sub	sp, sp, #24
   1b70c:	str	r0, [fp, #-4]
   1b710:	str	r1, [fp, #-8]
   1b714:	movw	r0, #0
   1b718:	str	r0, [sp, #12]
   1b71c:	ldr	r0, [sp, #12]
   1b720:	ldr	r1, [fp, #-8]
   1b724:	cmp	r0, r1
   1b728:	bge	1b878 <print_yaml_data@@Base+0x113c>
   1b72c:	ldr	r0, [fp, #-4]
   1b730:	ldr	r1, [sp, #12]
   1b734:	ldrb	r0, [r0, r1]
   1b738:	strb	r0, [sp, #11]
   1b73c:	ldrb	r0, [sp, #11]
   1b740:	mov	r1, r0
   1b744:	cmp	r0, #8
   1b748:	str	r1, [sp, #4]
   1b74c:	beq	1b7b4 <print_yaml_data@@Base+0x1078>
   1b750:	b	1b754 <print_yaml_data@@Base+0x1018>
   1b754:	ldr	r0, [sp, #4]
   1b758:	cmp	r0, #9
   1b75c:	beq	1b7f4 <print_yaml_data@@Base+0x10b8>
   1b760:	b	1b764 <print_yaml_data@@Base+0x1028>
   1b764:	ldr	r0, [sp, #4]
   1b768:	cmp	r0, #10
   1b76c:	beq	1b7d4 <print_yaml_data@@Base+0x1098>
   1b770:	b	1b774 <print_yaml_data@@Base+0x1038>
   1b774:	ldr	r0, [sp, #4]
   1b778:	cmp	r0, #12
   1b77c:	beq	1b7c4 <print_yaml_data@@Base+0x1088>
   1b780:	b	1b784 <print_yaml_data@@Base+0x1048>
   1b784:	ldr	r0, [sp, #4]
   1b788:	cmp	r0, #13
   1b78c:	beq	1b7e4 <print_yaml_data@@Base+0x10a8>
   1b790:	b	1b794 <print_yaml_data@@Base+0x1058>
   1b794:	ldr	r0, [sp, #4]
   1b798:	cmp	r0, #34	; 0x22
   1b79c:	beq	1b804 <print_yaml_data@@Base+0x10c8>
   1b7a0:	b	1b7a4 <print_yaml_data@@Base+0x1068>
   1b7a4:	ldr	r0, [sp, #4]
   1b7a8:	cmp	r0, #92	; 0x5c
   1b7ac:	beq	1b814 <print_yaml_data@@Base+0x10d8>
   1b7b0:	b	1b824 <print_yaml_data@@Base+0x10e8>
   1b7b4:	ldr	r0, [pc, #220]	; 1b898 <print_yaml_data@@Base+0x115c>
   1b7b8:	add	r0, pc, r0
   1b7bc:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b7c0:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b7c4:	ldr	r0, [pc, #200]	; 1b894 <print_yaml_data@@Base+0x1158>
   1b7c8:	add	r0, pc, r0
   1b7cc:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b7d0:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b7d4:	ldr	r0, [pc, #180]	; 1b890 <print_yaml_data@@Base+0x1154>
   1b7d8:	add	r0, pc, r0
   1b7dc:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b7e0:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b7e4:	ldr	r0, [pc, #160]	; 1b88c <print_yaml_data@@Base+0x1150>
   1b7e8:	add	r0, pc, r0
   1b7ec:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b7f0:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b7f4:	ldr	r0, [pc, #140]	; 1b888 <print_yaml_data@@Base+0x114c>
   1b7f8:	add	r0, pc, r0
   1b7fc:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b800:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b804:	ldr	r0, [pc, #120]	; 1b884 <print_yaml_data@@Base+0x1148>
   1b808:	add	r0, pc, r0
   1b80c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b810:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b814:	ldr	r0, [pc, #100]	; 1b880 <print_yaml_data@@Base+0x1144>
   1b818:	add	r0, pc, r0
   1b81c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b820:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b824:	ldrb	r0, [sp, #11]
   1b828:	cmp	r0, #32
   1b82c:	blt	1b850 <print_yaml_data@@Base+0x1114>
   1b830:	ldrb	r0, [sp, #11]
   1b834:	cmp	r0, #126	; 0x7e
   1b838:	bgt	1b850 <print_yaml_data@@Base+0x1114>
   1b83c:	ldr	r0, [pc, #92]	; 1b8a0 <print_yaml_data@@Base+0x1164>
   1b840:	add	r0, pc, r0
   1b844:	ldrb	r1, [sp, #11]
   1b848:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b84c:	b	1b860 <print_yaml_data@@Base+0x1124>
   1b850:	ldr	r0, [pc, #68]	; 1b89c <print_yaml_data@@Base+0x1160>
   1b854:	add	r0, pc, r0
   1b858:	ldrb	r1, [sp, #11]
   1b85c:	bl	1b57c <print_yaml_data@@Base+0xe40>
   1b860:	b	1b864 <print_yaml_data@@Base+0x1128>
   1b864:	b	1b868 <print_yaml_data@@Base+0x112c>
   1b868:	ldr	r0, [sp, #12]
   1b86c:	add	r0, r0, #1
   1b870:	str	r0, [sp, #12]
   1b874:	b	1b71c <print_yaml_data@@Base+0xfe0>
   1b878:	mov	sp, fp
   1b87c:	pop	{fp, pc}
   1b880:	andeq	r3, r0, r4, lsr #7
   1b884:	andeq	r3, r0, r3, ror #20
   1b888:			; <UNDEFINED> instruction: 0x000033b5
   1b88c:	ldrdeq	r3, [r0], -r1
   1b890:	ldrdeq	r3, [r0], -r8
   1b894:	andeq	r3, r0, lr, ror #7
   1b898:	strdeq	r3, [r0], -r2
   1b89c:	andeq	r3, r0, sl, lsl sl
   1b8a0:	andeq	r3, r0, sp, asr #5

0001b8a4 <handle_coda_error@@Base>:
   1b8a4:	push	{fp, lr}
   1b8a8:	mov	fp, sp
   1b8ac:	sub	sp, sp, #16
   1b8b0:	ldr	r0, [pc, #96]	; 1b918 <handle_coda_error@@Base+0x74>
   1b8b4:	ldr	r0, [pc, r0]
   1b8b8:	ldr	r0, [r0]
   1b8bc:	str	r0, [fp, #-4]
   1b8c0:	bl	129ac <coda_get_errno@plt>
   1b8c4:	ldr	r0, [r0]
   1b8c8:	bl	12964 <coda_errno_to_string@plt>
   1b8cc:	ldr	r1, [pc, #64]	; 1b914 <handle_coda_error@@Base+0x70>
   1b8d0:	add	r1, pc, r1
   1b8d4:	ldr	r2, [fp, #-4]
   1b8d8:	str	r0, [sp, #8]
   1b8dc:	mov	r0, r2
   1b8e0:	ldr	r2, [sp, #8]
   1b8e4:	bl	12814 <fprintf@plt>
   1b8e8:	ldr	r1, [pc, #32]	; 1b910 <handle_coda_error@@Base+0x6c>
   1b8ec:	ldr	r1, [pc, r1]
   1b8f0:	ldr	r1, [r1]
   1b8f4:	str	r0, [sp, #4]
   1b8f8:	mov	r0, r1
   1b8fc:	bl	12628 <fflush@plt>
   1b900:	movw	r1, #1
   1b904:	str	r0, [sp]
   1b908:	mov	r0, r1
   1b90c:	bl	127cc <exit@plt>
   1b910:	andeq	r5, r1, r4, asr #17
   1b914:	andeq	r3, r0, r2, asr #22
   1b918:	strdeq	r5, [r1], -ip

0001b91c <main@@Base>:
   1b91c:	push	{fp, lr}
   1b920:	mov	fp, sp
   1b924:	sub	sp, sp, #40	; 0x28
   1b928:	movw	r2, #0
   1b92c:	str	r2, [fp, #-4]
   1b930:	str	r0, [fp, #-8]
   1b934:	str	r1, [fp, #-12]
   1b938:	ldr	r0, [fp, #-8]
   1b93c:	cmp	r0, #1
   1b940:	beq	1b97c <main@@Base+0x60>
   1b944:	ldr	r0, [fp, #-12]
   1b948:	ldr	r0, [r0, #4]
   1b94c:	ldr	r1, [pc, #888]	; 1bccc <main@@Base+0x3b0>
   1b950:	add	r1, pc, r1
   1b954:	bl	125d4 <strcmp@plt>
   1b958:	cmp	r0, #0
   1b95c:	beq	1b97c <main@@Base+0x60>
   1b960:	ldr	r0, [fp, #-12]
   1b964:	ldr	r0, [r0, #4]
   1b968:	ldr	r1, [pc, #864]	; 1bcd0 <main@@Base+0x3b4>
   1b96c:	add	r1, pc, r1
   1b970:	bl	125d4 <strcmp@plt>
   1b974:	cmp	r0, #0
   1b978:	bne	1b988 <main@@Base+0x6c>
   1b97c:	bl	1dd14 <main@@Base+0x23f8>
   1b980:	movw	r0, #0
   1b984:	bl	127cc <exit@plt>
   1b988:	ldr	r0, [fp, #-12]
   1b98c:	ldr	r0, [r0, #4]
   1b990:	ldr	r1, [pc, #828]	; 1bcd4 <main@@Base+0x3b8>
   1b994:	add	r1, pc, r1
   1b998:	bl	125d4 <strcmp@plt>
   1b99c:	cmp	r0, #0
   1b9a0:	beq	1b9c0 <main@@Base+0xa4>
   1b9a4:	ldr	r0, [fp, #-12]
   1b9a8:	ldr	r0, [r0, #4]
   1b9ac:	ldr	r1, [pc, #804]	; 1bcd8 <main@@Base+0x3bc>
   1b9b0:	add	r1, pc, r1
   1b9b4:	bl	125d4 <strcmp@plt>
   1b9b8:	cmp	r0, #0
   1b9bc:	bne	1b9cc <main@@Base+0xb0>
   1b9c0:	bl	1e830 <main@@Base+0x2f14>
   1b9c4:	movw	r0, #0
   1b9c8:	bl	127cc <exit@plt>
   1b9cc:	movw	r0, #1
   1b9d0:	str	r0, [fp, #-16]
   1b9d4:	ldr	r0, [fp, #-16]
   1b9d8:	add	r0, r0, #1
   1b9dc:	ldr	r1, [fp, #-8]
   1b9e0:	cmp	r0, r1
   1b9e4:	bge	1ba34 <main@@Base+0x118>
   1b9e8:	ldr	r0, [fp, #-12]
   1b9ec:	ldr	r1, [fp, #-16]
   1b9f0:	add	r0, r0, r1, lsl #2
   1b9f4:	ldr	r0, [r0]
   1b9f8:	ldr	r1, [pc, #732]	; 1bcdc <main@@Base+0x3c0>
   1b9fc:	add	r1, pc, r1
   1ba00:	bl	125d4 <strcmp@plt>
   1ba04:	cmp	r0, #0
   1ba08:	bne	1ba34 <main@@Base+0x118>
   1ba0c:	ldr	r0, [fp, #-12]
   1ba10:	ldr	r1, [fp, #-16]
   1ba14:	add	r1, r1, #1
   1ba18:	add	r0, r0, r1, lsl #2
   1ba1c:	ldr	r0, [r0]
   1ba20:	bl	126f4 <coda_set_definition_path@plt>
   1ba24:	ldr	r1, [fp, #-16]
   1ba28:	add	r1, r1, #2
   1ba2c:	str	r1, [fp, #-16]
   1ba30:	b	1baa8 <main@@Base+0x18c>
   1ba34:	ldr	r0, [pc, #636]	; 1bcb8 <main@@Base+0x39c>
   1ba38:	add	r0, pc, r0
   1ba3c:	str	r0, [sp, #20]
   1ba40:	ldr	r0, [fp, #-12]
   1ba44:	ldr	r0, [r0]
   1ba48:	ldr	r2, [sp, #20]
   1ba4c:	movw	r1, #0
   1ba50:	bl	12670 <coda_set_definition_path_conditional@plt>
   1ba54:	cmp	r0, #0
   1ba58:	beq	1baa4 <main@@Base+0x188>
   1ba5c:	ldr	r0, [pc, #604]	; 1bcc0 <main@@Base+0x3a4>
   1ba60:	ldr	r0, [pc, r0]
   1ba64:	ldr	r0, [r0]
   1ba68:	str	r0, [sp, #16]
   1ba6c:	bl	129ac <coda_get_errno@plt>
   1ba70:	ldr	r0, [r0]
   1ba74:	bl	12964 <coda_errno_to_string@plt>
   1ba78:	ldr	r1, [pc, #572]	; 1bcbc <main@@Base+0x3a0>
   1ba7c:	add	r1, pc, r1
   1ba80:	ldr	r2, [sp, #16]
   1ba84:	str	r0, [sp, #12]
   1ba88:	mov	r0, r2
   1ba8c:	ldr	r2, [sp, #12]
   1ba90:	bl	12814 <fprintf@plt>
   1ba94:	movw	r1, #1
   1ba98:	str	r0, [sp, #8]
   1ba9c:	mov	r0, r1
   1baa0:	bl	127cc <exit@plt>
   1baa4:	b	1baa8 <main@@Base+0x18c>
   1baa8:	ldr	r0, [fp, #-12]
   1baac:	ldr	r1, [fp, #-16]
   1bab0:	add	r0, r0, r1, lsl #2
   1bab4:	ldr	r0, [r0]
   1bab8:	ldr	r1, [pc, #544]	; 1bce0 <main@@Base+0x3c4>
   1babc:	add	r1, pc, r1
   1bac0:	bl	125d4 <strcmp@plt>
   1bac4:	cmp	r0, #0
   1bac8:	bne	1bb04 <main@@Base+0x1e8>
   1bacc:	ldr	r0, [pc, #528]	; 1bce4 <main@@Base+0x3c8>
   1bad0:	ldr	r0, [pc, r0]
   1bad4:	mov	r1, #0
   1bad8:	str	r1, [r0]
   1badc:	ldr	r0, [fp, #-16]
   1bae0:	add	r0, r0, #1
   1bae4:	str	r0, [fp, #-16]
   1bae8:	ldr	r0, [fp, #-8]
   1baec:	ldr	r1, [fp, #-16]
   1baf0:	sub	r0, r0, r1
   1baf4:	ldr	r2, [fp, #-12]
   1baf8:	add	r1, r2, r1, lsl #2
   1bafc:	bl	1bd08 <main@@Base+0x3ec>
   1bb00:	b	1bcac <main@@Base+0x390>
   1bb04:	ldr	r0, [fp, #-12]
   1bb08:	ldr	r1, [fp, #-16]
   1bb0c:	add	r0, r0, r1, lsl #2
   1bb10:	ldr	r0, [r0]
   1bb14:	ldr	r1, [pc, #460]	; 1bce8 <main@@Base+0x3cc>
   1bb18:	add	r1, pc, r1
   1bb1c:	bl	125d4 <strcmp@plt>
   1bb20:	cmp	r0, #0
   1bb24:	bne	1bb60 <main@@Base+0x244>
   1bb28:	ldr	r0, [pc, #444]	; 1bcec <main@@Base+0x3d0>
   1bb2c:	ldr	r0, [pc, r0]
   1bb30:	mov	r1, #1
   1bb34:	str	r1, [r0]
   1bb38:	ldr	r0, [fp, #-16]
   1bb3c:	add	r0, r0, #1
   1bb40:	str	r0, [fp, #-16]
   1bb44:	ldr	r0, [fp, #-8]
   1bb48:	ldr	r1, [fp, #-16]
   1bb4c:	sub	r0, r0, r1
   1bb50:	ldr	r2, [fp, #-12]
   1bb54:	add	r1, r2, r1, lsl #2
   1bb58:	bl	1c324 <main@@Base+0xa08>
   1bb5c:	b	1bca8 <main@@Base+0x38c>
   1bb60:	ldr	r0, [fp, #-12]
   1bb64:	ldr	r1, [fp, #-16]
   1bb68:	add	r0, r0, r1, lsl #2
   1bb6c:	ldr	r0, [r0]
   1bb70:	ldr	r1, [pc, #376]	; 1bcf0 <main@@Base+0x3d4>
   1bb74:	add	r1, pc, r1
   1bb78:	bl	125d4 <strcmp@plt>
   1bb7c:	cmp	r0, #0
   1bb80:	bne	1bbbc <main@@Base+0x2a0>
   1bb84:	ldr	r0, [pc, #360]	; 1bcf4 <main@@Base+0x3d8>
   1bb88:	ldr	r0, [pc, r0]
   1bb8c:	mov	r1, #3
   1bb90:	str	r1, [r0]
   1bb94:	ldr	r0, [fp, #-16]
   1bb98:	add	r0, r0, #1
   1bb9c:	str	r0, [fp, #-16]
   1bba0:	ldr	r0, [fp, #-8]
   1bba4:	ldr	r1, [fp, #-16]
   1bba8:	sub	r0, r0, r1
   1bbac:	ldr	r2, [fp, #-12]
   1bbb0:	add	r1, r2, r1, lsl #2
   1bbb4:	bl	1cbc4 <main@@Base+0x12a8>
   1bbb8:	b	1bca4 <main@@Base+0x388>
   1bbbc:	ldr	r0, [fp, #-12]
   1bbc0:	ldr	r1, [fp, #-16]
   1bbc4:	add	r0, r0, r1, lsl #2
   1bbc8:	ldr	r0, [r0]
   1bbcc:	ldr	r1, [pc, #292]	; 1bcf8 <main@@Base+0x3dc>
   1bbd0:	add	r1, pc, r1
   1bbd4:	bl	125d4 <strcmp@plt>
   1bbd8:	cmp	r0, #0
   1bbdc:	bne	1bc18 <main@@Base+0x2fc>
   1bbe0:	ldr	r0, [pc, #276]	; 1bcfc <main@@Base+0x3e0>
   1bbe4:	ldr	r0, [pc, r0]
   1bbe8:	mov	r1, #4
   1bbec:	str	r1, [r0]
   1bbf0:	ldr	r0, [fp, #-16]
   1bbf4:	add	r0, r0, #1
   1bbf8:	str	r0, [fp, #-16]
   1bbfc:	ldr	r0, [fp, #-8]
   1bc00:	ldr	r1, [fp, #-16]
   1bc04:	sub	r0, r0, r1
   1bc08:	ldr	r2, [fp, #-12]
   1bc0c:	add	r1, r2, r1, lsl #2
   1bc10:	bl	1d13c <main@@Base+0x1820>
   1bc14:	b	1bca0 <main@@Base+0x384>
   1bc18:	ldr	r0, [fp, #-12]
   1bc1c:	ldr	r1, [fp, #-16]
   1bc20:	add	r0, r0, r1, lsl #2
   1bc24:	ldr	r0, [r0]
   1bc28:	ldr	r1, [pc, #208]	; 1bd00 <main@@Base+0x3e4>
   1bc2c:	add	r1, pc, r1
   1bc30:	bl	125d4 <strcmp@plt>
   1bc34:	cmp	r0, #0
   1bc38:	bne	1bc74 <main@@Base+0x358>
   1bc3c:	ldr	r0, [pc, #192]	; 1bd04 <main@@Base+0x3e8>
   1bc40:	ldr	r0, [pc, r0]
   1bc44:	mov	r1, #5
   1bc48:	str	r1, [r0]
   1bc4c:	ldr	r0, [fp, #-16]
   1bc50:	add	r0, r0, #1
   1bc54:	str	r0, [fp, #-16]
   1bc58:	ldr	r0, [fp, #-8]
   1bc5c:	ldr	r1, [fp, #-16]
   1bc60:	sub	r0, r0, r1
   1bc64:	ldr	r2, [fp, #-12]
   1bc68:	add	r1, r2, r1, lsl #2
   1bc6c:	bl	1d6b4 <main@@Base+0x1d98>
   1bc70:	b	1bc9c <main@@Base+0x380>
   1bc74:	ldr	r0, [pc, #72]	; 1bcc4 <main@@Base+0x3a8>
   1bc78:	add	r1, pc, r0
   1bc7c:	ldr	r0, [pc, #68]	; 1bcc8 <main@@Base+0x3ac>
   1bc80:	ldr	r0, [pc, r0]
   1bc84:	ldr	r0, [r0]
   1bc88:	bl	12814 <fprintf@plt>
   1bc8c:	str	r0, [sp, #4]
   1bc90:	bl	1dd14 <main@@Base+0x23f8>
   1bc94:	movw	r0, #1
   1bc98:	bl	127cc <exit@plt>
   1bc9c:	b	1bca0 <main@@Base+0x384>
   1bca0:	b	1bca4 <main@@Base+0x388>
   1bca4:	b	1bca8 <main@@Base+0x38c>
   1bca8:	b	1bcac <main@@Base+0x390>
   1bcac:	movw	r0, #0
   1bcb0:	mov	sp, fp
   1bcb4:	pop	{fp, pc}
   1bcb8:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   1bcbc:	muleq	r0, r6, r9
   1bcc0:	andeq	r5, r1, r0, asr r7
   1bcc4:	strdeq	r3, [r0], -r4
   1bcc8:	andeq	r5, r1, r0, lsr r5
   1bccc:	andeq	r3, r0, sp, asr #21
   1bcd0:			; <UNDEFINED> instruction: 0x00003ab4
   1bcd4:	muleq	r0, r3, sl
   1bcd8:	andeq	r3, r0, sl, ror sl
   1bcdc:	andeq	r3, r0, r8, lsr sl
   1bce0:	muleq	r0, r5, r9
   1bce4:	andeq	r5, r1, ip, lsl #14
   1bce8:	andeq	r3, r0, lr, lsr r9
   1bcec:			; <UNDEFINED> instruction: 0x000156b0
   1bcf0:	andeq	r3, r0, r8, ror #17
   1bcf4:	andeq	r5, r1, r4, asr r6
   1bcf8:	muleq	r0, r1, r8
   1bcfc:	strdeq	r5, [r1], -r8
   1bd00:	andeq	r3, r0, sl, lsr r8
   1bd04:	muleq	r1, ip, r5
   1bd08:	push	{r4, r5, r6, sl, fp, lr}
   1bd0c:	add	fp, sp, #16
   1bd10:	sub	sp, sp, #56	; 0x38
   1bd14:	ldr	r2, [pc, #1372]	; 1c278 <main@@Base+0x95c>
   1bd18:	ldr	r2, [pc, r2]
   1bd1c:	ldr	r3, [pc, #1368]	; 1c27c <main@@Base+0x960>
   1bd20:	ldr	r3, [pc, r3]
   1bd24:	ldr	ip, [pc, #1364]	; 1c280 <main@@Base+0x964>
   1bd28:	ldr	ip, [pc, ip]
   1bd2c:	ldr	lr, [pc, #1360]	; 1c284 <main@@Base+0x968>
   1bd30:	ldr	lr, [pc, lr]
   1bd34:	ldr	r4, [pc, #1356]	; 1c288 <main@@Base+0x96c>
   1bd38:	ldr	r4, [pc, r4]
   1bd3c:	ldr	r5, [pc, #1352]	; 1c28c <main@@Base+0x970>
   1bd40:	ldr	r5, [pc, r5]
   1bd44:	ldr	r6, [pc, #1348]	; 1c290 <main@@Base+0x974>
   1bd48:	ldr	r6, [pc, r6]
   1bd4c:	str	r0, [fp, #-20]	; 0xffffffec
   1bd50:	str	r1, [fp, #-24]	; 0xffffffe8
   1bd54:	movw	r0, #0
   1bd58:	str	r0, [r6]
   1bd5c:	str	r0, [r6, #664]	; 0x298
   1bd60:	movw	r1, #1
   1bd64:	str	r1, [r5]
   1bd68:	str	r0, [r4]
   1bd6c:	str	r1, [fp, #-28]	; 0xffffffe4
   1bd70:	str	r1, [fp, #-32]	; 0xffffffe0
   1bd74:	str	r0, [lr]
   1bd78:	str	r0, [ip]
   1bd7c:	str	r0, [r3]
   1bd80:	str	r0, [r2]
   1bd84:	str	r0, [sp, #36]	; 0x24
   1bd88:	ldr	r0, [sp, #36]	; 0x24
   1bd8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd90:	cmp	r0, r1
   1bd94:	bge	1c140 <main@@Base+0x824>
   1bd98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd9c:	ldr	r1, [sp, #36]	; 0x24
   1bda0:	add	r0, r0, r1, lsl #2
   1bda4:	ldr	r0, [r0]
   1bda8:	ldr	r1, [pc, #1344]	; 1c2f0 <main@@Base+0x9d4>
   1bdac:	add	r1, pc, r1
   1bdb0:	bl	125d4 <strcmp@plt>
   1bdb4:	cmp	r0, #0
   1bdb8:	beq	1bde0 <main@@Base+0x4c4>
   1bdbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bdc0:	ldr	r1, [sp, #36]	; 0x24
   1bdc4:	add	r0, r0, r1, lsl #2
   1bdc8:	ldr	r0, [r0]
   1bdcc:	ldr	r1, [pc, #1312]	; 1c2f4 <main@@Base+0x9d8>
   1bdd0:	add	r1, pc, r1
   1bdd4:	bl	125d4 <strcmp@plt>
   1bdd8:	cmp	r0, #0
   1bddc:	bne	1bdf4 <main@@Base+0x4d8>
   1bde0:	ldr	r0, [pc, #1284]	; 1c2ec <main@@Base+0x9d0>
   1bde4:	ldr	r0, [pc, r0]
   1bde8:	movw	r1, #1
   1bdec:	str	r1, [r0]
   1bdf0:	b	1c12c <main@@Base+0x810>
   1bdf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bdf8:	ldr	r1, [sp, #36]	; 0x24
   1bdfc:	add	r0, r0, r1, lsl #2
   1be00:	ldr	r0, [r0]
   1be04:	ldr	r1, [pc, #1260]	; 1c2f8 <main@@Base+0x9dc>
   1be08:	add	r1, pc, r1
   1be0c:	bl	125d4 <strcmp@plt>
   1be10:	cmp	r0, #0
   1be14:	beq	1be3c <main@@Base+0x520>
   1be18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be1c:	ldr	r1, [sp, #36]	; 0x24
   1be20:	add	r0, r0, r1, lsl #2
   1be24:	ldr	r0, [r0]
   1be28:	ldr	r1, [pc, #1228]	; 1c2fc <main@@Base+0x9e0>
   1be2c:	add	r1, pc, r1
   1be30:	bl	125d4 <strcmp@plt>
   1be34:	cmp	r0, #0
   1be38:	bne	1be48 <main@@Base+0x52c>
   1be3c:	movw	r0, #0
   1be40:	str	r0, [fp, #-32]	; 0xffffffe0
   1be44:	b	1c128 <main@@Base+0x80c>
   1be48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be4c:	ldr	r1, [sp, #36]	; 0x24
   1be50:	add	r0, r0, r1, lsl #2
   1be54:	ldr	r0, [r0]
   1be58:	ldr	r1, [pc, #1184]	; 1c300 <main@@Base+0x9e4>
   1be5c:	add	r1, pc, r1
   1be60:	bl	125d4 <strcmp@plt>
   1be64:	cmp	r0, #0
   1be68:	beq	1be90 <main@@Base+0x574>
   1be6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be70:	ldr	r1, [sp, #36]	; 0x24
   1be74:	add	r0, r0, r1, lsl #2
   1be78:	ldr	r0, [r0]
   1be7c:	ldr	r1, [pc, #1152]	; 1c304 <main@@Base+0x9e8>
   1be80:	add	r1, pc, r1
   1be84:	bl	125d4 <strcmp@plt>
   1be88:	cmp	r0, #0
   1be8c:	bne	1bf30 <main@@Base+0x614>
   1be90:	ldr	r0, [sp, #36]	; 0x24
   1be94:	add	r0, r0, #1
   1be98:	ldr	r1, [fp, #-20]	; 0xffffffec
   1be9c:	cmp	r0, r1
   1bea0:	bge	1bf30 <main@@Base+0x614>
   1bea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bea8:	ldr	r1, [sp, #36]	; 0x24
   1beac:	add	r1, r1, #1
   1beb0:	add	r0, r0, r1, lsl #2
   1beb4:	ldr	r0, [r0]
   1beb8:	ldrb	r0, [r0]
   1bebc:	cmp	r0, #45	; 0x2d
   1bec0:	beq	1bf30 <main@@Base+0x614>
   1bec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bec8:	ldr	r1, [sp, #36]	; 0x24
   1becc:	add	r1, r1, #1
   1bed0:	add	r0, r0, r1, lsl #2
   1bed4:	ldr	r0, [r0]
   1bed8:	bl	17890 <codadump_filter_create@@Base>
   1bedc:	ldr	r1, [pc, #1020]	; 1c2e0 <main@@Base+0x9c4>
   1bee0:	ldr	r1, [pc, r1]
   1bee4:	str	r0, [r1, #664]	; 0x298
   1bee8:	ldr	r0, [r1, #664]	; 0x298
   1beec:	movw	r1, #0
   1bef0:	cmp	r0, r1
   1bef4:	bne	1bf20 <main@@Base+0x604>
   1bef8:	ldr	r0, [pc, #996]	; 1c2e4 <main@@Base+0x9c8>
   1befc:	add	r1, pc, r0
   1bf00:	ldr	r0, [pc, #992]	; 1c2e8 <main@@Base+0x9cc>
   1bf04:	ldr	r0, [pc, r0]
   1bf08:	ldr	r0, [r0]
   1bf0c:	bl	12814 <fprintf@plt>
   1bf10:	str	r0, [sp, #32]
   1bf14:	bl	1dd14 <main@@Base+0x23f8>
   1bf18:	movw	r0, #1
   1bf1c:	bl	127cc <exit@plt>
   1bf20:	ldr	r0, [sp, #36]	; 0x24
   1bf24:	add	r0, r0, #1
   1bf28:	str	r0, [sp, #36]	; 0x24
   1bf2c:	b	1c124 <main@@Base+0x808>
   1bf30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf34:	ldr	r1, [sp, #36]	; 0x24
   1bf38:	add	r0, r0, r1, lsl #2
   1bf3c:	ldr	r0, [r0]
   1bf40:	ldr	r1, [pc, #960]	; 1c308 <main@@Base+0x9ec>
   1bf44:	add	r1, pc, r1
   1bf48:	bl	125d4 <strcmp@plt>
   1bf4c:	cmp	r0, #0
   1bf50:	beq	1bf78 <main@@Base+0x65c>
   1bf54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf58:	ldr	r1, [sp, #36]	; 0x24
   1bf5c:	add	r0, r0, r1, lsl #2
   1bf60:	ldr	r0, [r0]
   1bf64:	ldr	r1, [pc, #928]	; 1c30c <main@@Base+0x9f0>
   1bf68:	add	r1, pc, r1
   1bf6c:	bl	125d4 <strcmp@plt>
   1bf70:	cmp	r0, #0
   1bf74:	bne	1bf8c <main@@Base+0x670>
   1bf78:	ldr	r0, [pc, #860]	; 1c2dc <main@@Base+0x9c0>
   1bf7c:	ldr	r0, [pc, r0]
   1bf80:	movw	r1, #1
   1bf84:	str	r1, [r0]
   1bf88:	b	1c120 <main@@Base+0x804>
   1bf8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf90:	ldr	r1, [sp, #36]	; 0x24
   1bf94:	add	r0, r0, r1, lsl #2
   1bf98:	ldr	r0, [r0]
   1bf9c:	ldr	r1, [pc, #876]	; 1c310 <main@@Base+0x9f4>
   1bfa0:	add	r1, pc, r1
   1bfa4:	bl	125d4 <strcmp@plt>
   1bfa8:	cmp	r0, #0
   1bfac:	beq	1bfd4 <main@@Base+0x6b8>
   1bfb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfb4:	ldr	r1, [sp, #36]	; 0x24
   1bfb8:	add	r0, r0, r1, lsl #2
   1bfbc:	ldr	r0, [r0]
   1bfc0:	ldr	r1, [pc, #844]	; 1c314 <main@@Base+0x9f8>
   1bfc4:	add	r1, pc, r1
   1bfc8:	bl	125d4 <strcmp@plt>
   1bfcc:	cmp	r0, #0
   1bfd0:	bne	1bfe8 <main@@Base+0x6cc>
   1bfd4:	ldr	r0, [pc, #764]	; 1c2d8 <main@@Base+0x9bc>
   1bfd8:	ldr	r0, [pc, r0]
   1bfdc:	movw	r1, #1
   1bfe0:	str	r1, [r0]
   1bfe4:	b	1c11c <main@@Base+0x800>
   1bfe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfec:	ldr	r1, [sp, #36]	; 0x24
   1bff0:	add	r0, r0, r1, lsl #2
   1bff4:	ldr	r0, [r0]
   1bff8:	ldr	r1, [pc, #792]	; 1c318 <main@@Base+0x9fc>
   1bffc:	add	r1, pc, r1
   1c000:	bl	125d4 <strcmp@plt>
   1c004:	cmp	r0, #0
   1c008:	bne	1c020 <main@@Base+0x704>
   1c00c:	ldr	r0, [pc, #704]	; 1c2d4 <main@@Base+0x9b8>
   1c010:	ldr	r0, [pc, r0]
   1c014:	movw	r1, #1
   1c018:	str	r1, [r0]
   1c01c:	b	1c118 <main@@Base+0x7fc>
   1c020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c024:	ldr	r1, [sp, #36]	; 0x24
   1c028:	add	r0, r0, r1, lsl #2
   1c02c:	ldr	r0, [r0]
   1c030:	ldr	r1, [pc, #740]	; 1c31c <main@@Base+0xa00>
   1c034:	add	r1, pc, r1
   1c038:	bl	125d4 <strcmp@plt>
   1c03c:	cmp	r0, #0
   1c040:	bne	1c064 <main@@Base+0x748>
   1c044:	ldr	r0, [pc, #640]	; 1c2cc <main@@Base+0x9b0>
   1c048:	ldr	r0, [pc, r0]
   1c04c:	ldr	r1, [pc, #636]	; 1c2d0 <main@@Base+0x9b4>
   1c050:	ldr	r1, [pc, r1]
   1c054:	movw	r2, #1
   1c058:	str	r2, [r1]
   1c05c:	str	r2, [r0]
   1c060:	b	1c114 <main@@Base+0x7f8>
   1c064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c068:	ldr	r1, [sp, #36]	; 0x24
   1c06c:	add	r0, r0, r1, lsl #2
   1c070:	ldr	r0, [r0]
   1c074:	ldr	r1, [pc, #676]	; 1c320 <main@@Base+0xa04>
   1c078:	add	r1, pc, r1
   1c07c:	bl	125d4 <strcmp@plt>
   1c080:	cmp	r0, #0
   1c084:	bne	1c094 <main@@Base+0x778>
   1c088:	movw	r0, #0
   1c08c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c090:	b	1c110 <main@@Base+0x7f4>
   1c094:	ldr	r0, [sp, #36]	; 0x24
   1c098:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c09c:	sub	r1, r1, #1
   1c0a0:	cmp	r0, r1
   1c0a4:	bne	1c0e4 <main@@Base+0x7c8>
   1c0a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c0ac:	ldr	r1, [sp, #36]	; 0x24
   1c0b0:	add	r0, r0, r1, lsl #2
   1c0b4:	ldr	r0, [r0]
   1c0b8:	ldrb	r0, [r0]
   1c0bc:	cmp	r0, #45	; 0x2d
   1c0c0:	beq	1c0e4 <main@@Base+0x7c8>
   1c0c4:	ldr	r0, [pc, #508]	; 1c2c8 <main@@Base+0x9ac>
   1c0c8:	ldr	r0, [pc, r0]
   1c0cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0d0:	ldr	r2, [sp, #36]	; 0x24
   1c0d4:	add	r1, r1, r2, lsl #2
   1c0d8:	ldr	r1, [r1]
   1c0dc:	str	r1, [r0]
   1c0e0:	b	1c10c <main@@Base+0x7f0>
   1c0e4:	ldr	r0, [pc, #468]	; 1c2c0 <main@@Base+0x9a4>
   1c0e8:	add	r1, pc, r0
   1c0ec:	ldr	r0, [pc, #464]	; 1c2c4 <main@@Base+0x9a8>
   1c0f0:	ldr	r0, [pc, r0]
   1c0f4:	ldr	r0, [r0]
   1c0f8:	bl	12814 <fprintf@plt>
   1c0fc:	str	r0, [sp, #28]
   1c100:	bl	1dd14 <main@@Base+0x23f8>
   1c104:	movw	r0, #1
   1c108:	bl	127cc <exit@plt>
   1c10c:	b	1c110 <main@@Base+0x7f4>
   1c110:	b	1c114 <main@@Base+0x7f8>
   1c114:	b	1c118 <main@@Base+0x7fc>
   1c118:	b	1c11c <main@@Base+0x800>
   1c11c:	b	1c120 <main@@Base+0x804>
   1c120:	b	1c124 <main@@Base+0x808>
   1c124:	b	1c128 <main@@Base+0x80c>
   1c128:	b	1c12c <main@@Base+0x810>
   1c12c:	b	1c130 <main@@Base+0x814>
   1c130:	ldr	r0, [sp, #36]	; 0x24
   1c134:	add	r0, r0, #1
   1c138:	str	r0, [sp, #36]	; 0x24
   1c13c:	b	1bd88 <main@@Base+0x46c>
   1c140:	ldr	r0, [pc, #332]	; 1c294 <main@@Base+0x978>
   1c144:	ldr	r0, [pc, r0]
   1c148:	ldr	r0, [r0]
   1c14c:	movw	r1, #0
   1c150:	cmp	r0, r1
   1c154:	beq	1c170 <main@@Base+0x854>
   1c158:	ldr	r0, [pc, #312]	; 1c298 <main@@Base+0x97c>
   1c15c:	ldr	r0, [pc, r0]
   1c160:	ldr	r0, [r0]
   1c164:	ldrb	r0, [r0]
   1c168:	cmp	r0, #0
   1c16c:	bne	1c198 <main@@Base+0x87c>
   1c170:	ldr	r0, [pc, #320]	; 1c2b8 <main@@Base+0x99c>
   1c174:	add	r1, pc, r0
   1c178:	ldr	r0, [pc, #316]	; 1c2bc <main@@Base+0x9a0>
   1c17c:	ldr	r0, [pc, r0]
   1c180:	ldr	r0, [r0]
   1c184:	bl	12814 <fprintf@plt>
   1c188:	str	r0, [sp, #24]
   1c18c:	bl	1dd14 <main@@Base+0x23f8>
   1c190:	movw	r0, #1
   1c194:	bl	127cc <exit@plt>
   1c198:	bl	12838 <coda_init@plt>
   1c19c:	cmp	r0, #0
   1c1a0:	beq	1c1ec <main@@Base+0x8d0>
   1c1a4:	ldr	r0, [pc, #264]	; 1c2b4 <main@@Base+0x998>
   1c1a8:	ldr	r0, [pc, r0]
   1c1ac:	ldr	r0, [r0]
   1c1b0:	str	r0, [sp, #20]
   1c1b4:	bl	129ac <coda_get_errno@plt>
   1c1b8:	ldr	r0, [r0]
   1c1bc:	bl	12964 <coda_errno_to_string@plt>
   1c1c0:	ldr	r1, [pc, #232]	; 1c2b0 <main@@Base+0x994>
   1c1c4:	add	r1, pc, r1
   1c1c8:	ldr	r2, [sp, #20]
   1c1cc:	str	r0, [sp, #16]
   1c1d0:	mov	r0, r2
   1c1d4:	ldr	r2, [sp, #16]
   1c1d8:	bl	12814 <fprintf@plt>
   1c1dc:	movw	r1, #1
   1c1e0:	str	r0, [sp, #12]
   1c1e4:	mov	r0, r1
   1c1e8:	bl	127cc <exit@plt>
   1c1ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c1f0:	cmp	r0, #0
   1c1f4:	movw	r0, #0
   1c1f8:	movne	r0, #1
   1c1fc:	mvn	r1, #0
   1c200:	eor	r0, r0, r1
   1c204:	and	r0, r0, #1
   1c208:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1c20c:	movw	r1, #0
   1c210:	str	r0, [sp, #8]
   1c214:	mov	r0, r1
   1c218:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   1c21c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c220:	str	r0, [sp, #4]
   1c224:	mov	r0, r1
   1c228:	bl	12844 <coda_set_option_perform_conversions@plt>
   1c22c:	ldr	r1, [pc, #120]	; 1c2ac <main@@Base+0x990>
   1c230:	ldr	r1, [pc, r1]
   1c234:	str	r0, [sp]
   1c238:	blx	r1
   1c23c:	ldr	r0, [pc, #100]	; 1c2a8 <main@@Base+0x98c>
   1c240:	ldr	r0, [pc, r0]
   1c244:	blx	r0
   1c248:	ldr	r0, [pc, #84]	; 1c2a4 <main@@Base+0x988>
   1c24c:	ldr	r0, [pc, r0]
   1c250:	blx	r0
   1c254:	ldr	r0, [pc, #68]	; 1c2a0 <main@@Base+0x984>
   1c258:	ldr	r0, [pc, r0]
   1c25c:	blx	r0
   1c260:	ldr	r0, [pc, #52]	; 1c29c <main@@Base+0x980>
   1c264:	ldr	r0, [pc, r0]
   1c268:	blx	r0
   1c26c:	bl	1276c <coda_done@plt>
   1c270:	sub	sp, fp, #16
   1c274:	pop	{r4, r5, r6, sl, fp, pc}
   1c278:	andeq	r5, r1, ip, lsr #9
   1c27c:	andeq	r5, r1, r0, lsl #9
   1c280:	muleq	r1, r8, r4
   1c284:	andeq	r5, r1, ip, asr r4
   1c288:	andeq	r5, r1, r0, ror r4
   1c28c:	andeq	r5, r1, r8, asr #8
   1c290:	andeq	r5, r1, r4, ror #8
   1c294:	andeq	r5, r1, r8, rrx
   1c298:	andeq	r5, r1, r0, asr r0
   1c29c:	andeq	r4, r1, r4, lsl #31
   1c2a0:	andeq	r4, r1, ip, asr pc
   1c2a4:	andeq	r4, r1, r8, asr pc
   1c2a8:			; <UNDEFINED> instruction: 0x00014fb4
   1c2ac:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1c2b0:	andeq	r3, r0, lr, asr #4
   1c2b4:	andeq	r5, r1, r8
   1c2b8:	strdeq	r3, [r0], -r8
   1c2bc:	andeq	r5, r1, r4, lsr r0
   1c2c0:	andeq	r3, r0, r4, lsl #7
   1c2c4:	andeq	r5, r1, r0, asr #1
   1c2c8:	andeq	r5, r1, r4, ror #1
   1c2cc:	andeq	r5, r1, r4, asr #2
   1c2d0:	andeq	r5, r1, r8, asr r1
   1c2d4:			; <UNDEFINED> instruction: 0x000151b4
   1c2d8:	andeq	r5, r1, r8, asr #3
   1c2dc:	andeq	r5, r1, r4, asr #4
   1c2e0:	andeq	r5, r1, ip, asr #5
   1c2e4:	andeq	r4, r0, lr, ror r5
   1c2e8:	andeq	r5, r1, ip, lsr #5
   1c2ec:	andeq	r5, r1, r4, asr #7
   1c2f0:	muleq	r0, fp, r6
   1c2f4:	andeq	r4, r0, sl, ror r6
   1c2f8:	andeq	r4, r0, sp, asr #12
   1c2fc:	andeq	r4, r0, ip, lsr #12
   1c300:	andeq	r4, r0, r2, lsl r6
   1c304:	strdeq	r4, [r0], -r1
   1c308:	andeq	r4, r0, pc, asr r5
   1c30c:	andeq	r4, r0, lr, lsr r5
   1c310:	andeq	r4, r0, sp, lsl #10
   1c314:	andeq	r4, r0, ip, ror #9
   1c318:			; <UNDEFINED> instruction: 0x000044bb
   1c31c:	muleq	r0, r1, r4
   1c320:	andeq	r4, r0, sl, asr r4
   1c324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c328:	add	fp, sp, #28
   1c32c:	sub	sp, sp, #76	; 0x4c
   1c330:	ldr	r2, [pc, #1944]	; 1cad0 <main@@Base+0x11b4>
   1c334:	ldr	r2, [pc, r2]
   1c338:	ldr	r3, [pc, #1940]	; 1cad4 <main@@Base+0x11b8>
   1c33c:	ldr	r3, [pc, r3]
   1c340:	ldr	ip, [pc, #1936]	; 1cad8 <main@@Base+0x11bc>
   1c344:	ldr	ip, [pc, ip]
   1c348:	ldr	lr, [pc, #1932]	; 1cadc <main@@Base+0x11c0>
   1c34c:	ldr	lr, [pc, lr]
   1c350:	ldr	r4, [pc, #1928]	; 1cae0 <main@@Base+0x11c4>
   1c354:	ldr	r4, [pc, r4]
   1c358:	ldr	r5, [pc, #1924]	; 1cae4 <main@@Base+0x11c8>
   1c35c:	ldr	r5, [pc, r5]
   1c360:	ldr	r6, [pc, #1920]	; 1cae8 <main@@Base+0x11cc>
   1c364:	ldr	r6, [pc, r6]
   1c368:	ldr	r7, [pc, #1916]	; 1caec <main@@Base+0x11d0>
   1c36c:	ldr	r7, [pc, r7]
   1c370:	ldr	r8, [pc, #1912]	; 1caf0 <main@@Base+0x11d4>
   1c374:	add	r8, pc, r8
   1c378:	ldr	r9, [pc, #1908]	; 1caf4 <main@@Base+0x11d8>
   1c37c:	ldr	r9, [pc, r9]
   1c380:	ldr	sl, [pc, #1904]	; 1caf8 <main@@Base+0x11dc>
   1c384:	ldr	sl, [pc, sl]
   1c388:	str	r0, [sp, #52]	; 0x34
   1c38c:	ldr	r0, [pc, #1896]	; 1cafc <main@@Base+0x11e0>
   1c390:	ldr	r0, [pc, r0]
   1c394:	str	r0, [sp, #48]	; 0x30
   1c398:	ldr	r0, [sp, #52]	; 0x34
   1c39c:	str	r0, [fp, #-32]	; 0xffffffe0
   1c3a0:	str	r1, [fp, #-36]	; 0xffffffdc
   1c3a4:	movw	r1, #0
   1c3a8:	ldr	r0, [sp, #48]	; 0x30
   1c3ac:	str	r1, [r0]
   1c3b0:	str	r1, [r0, #664]	; 0x298
   1c3b4:	str	r1, [sl]
   1c3b8:	str	r8, [r9]
   1c3bc:	ldr	r7, [r7]
   1c3c0:	str	r7, [r6]
   1c3c4:	movw	r6, #1
   1c3c8:	str	r6, [r5]
   1c3cc:	str	r6, [r4]
   1c3d0:	str	r6, [fp, #-40]	; 0xffffffd8
   1c3d4:	str	r6, [fp, #-44]	; 0xffffffd4
   1c3d8:	str	r1, [lr]
   1c3dc:	str	r1, [ip]
   1c3e0:	str	r1, [r3]
   1c3e4:	str	r1, [r2]
   1c3e8:	str	r1, [fp, #-48]	; 0xffffffd0
   1c3ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c3f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c3f4:	cmp	r0, r1
   1c3f8:	bge	1c8e0 <main@@Base+0xfc4>
   1c3fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c400:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c404:	add	r0, r0, r1, lsl #2
   1c408:	ldr	r0, [r0]
   1c40c:	ldr	r1, [pc, #1900]	; 1cb80 <main@@Base+0x1264>
   1c410:	add	r1, pc, r1
   1c414:	bl	125d4 <strcmp@plt>
   1c418:	cmp	r0, #0
   1c41c:	beq	1c444 <main@@Base+0xb28>
   1c420:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c424:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c428:	add	r0, r0, r1, lsl #2
   1c42c:	ldr	r0, [r0]
   1c430:	ldr	r1, [pc, #1868]	; 1cb84 <main@@Base+0x1268>
   1c434:	add	r1, pc, r1
   1c438:	bl	125d4 <strcmp@plt>
   1c43c:	cmp	r0, #0
   1c440:	bne	1c450 <main@@Base+0xb34>
   1c444:	movw	r0, #0
   1c448:	str	r0, [fp, #-44]	; 0xffffffd4
   1c44c:	b	1c8cc <main@@Base+0xfb0>
   1c450:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c454:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c458:	add	r0, r0, r1, lsl #2
   1c45c:	ldr	r0, [r0]
   1c460:	ldr	r1, [pc, #1824]	; 1cb88 <main@@Base+0x126c>
   1c464:	add	r1, pc, r1
   1c468:	bl	125d4 <strcmp@plt>
   1c46c:	cmp	r0, #0
   1c470:	beq	1c498 <main@@Base+0xb7c>
   1c474:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c478:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c47c:	add	r0, r0, r1, lsl #2
   1c480:	ldr	r0, [r0]
   1c484:	ldr	r1, [pc, #1792]	; 1cb8c <main@@Base+0x1270>
   1c488:	add	r1, pc, r1
   1c48c:	bl	125d4 <strcmp@plt>
   1c490:	cmp	r0, #0
   1c494:	bne	1c538 <main@@Base+0xc1c>
   1c498:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c49c:	add	r0, r0, #1
   1c4a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c4a4:	cmp	r0, r1
   1c4a8:	bge	1c538 <main@@Base+0xc1c>
   1c4ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c4b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c4b4:	add	r1, r1, #1
   1c4b8:	add	r0, r0, r1, lsl #2
   1c4bc:	ldr	r0, [r0]
   1c4c0:	ldrb	r0, [r0]
   1c4c4:	cmp	r0, #45	; 0x2d
   1c4c8:	beq	1c538 <main@@Base+0xc1c>
   1c4cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c4d0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c4d4:	add	r1, r1, #1
   1c4d8:	add	r0, r0, r1, lsl #2
   1c4dc:	ldr	r0, [r0]
   1c4e0:	bl	17890 <codadump_filter_create@@Base>
   1c4e4:	ldr	r1, [pc, #1672]	; 1cb74 <main@@Base+0x1258>
   1c4e8:	ldr	r1, [pc, r1]
   1c4ec:	str	r0, [r1, #664]	; 0x298
   1c4f0:	ldr	r0, [r1, #664]	; 0x298
   1c4f4:	movw	r1, #0
   1c4f8:	cmp	r0, r1
   1c4fc:	bne	1c528 <main@@Base+0xc0c>
   1c500:	ldr	r0, [pc, #1648]	; 1cb78 <main@@Base+0x125c>
   1c504:	add	r1, pc, r0
   1c508:	ldr	r0, [pc, #1644]	; 1cb7c <main@@Base+0x1260>
   1c50c:	ldr	r0, [pc, r0]
   1c510:	ldr	r0, [r0]
   1c514:	bl	12814 <fprintf@plt>
   1c518:	str	r0, [sp, #44]	; 0x2c
   1c51c:	bl	1dd14 <main@@Base+0x23f8>
   1c520:	movw	r0, #1
   1c524:	bl	127cc <exit@plt>
   1c528:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c52c:	add	r0, r0, #1
   1c530:	str	r0, [fp, #-48]	; 0xffffffd0
   1c534:	b	1c8c8 <main@@Base+0xfac>
   1c538:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c53c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c540:	add	r0, r0, r1, lsl #2
   1c544:	ldr	r0, [r0]
   1c548:	ldr	r1, [pc, #1600]	; 1cb90 <main@@Base+0x1274>
   1c54c:	add	r1, pc, r1
   1c550:	bl	125d4 <strcmp@plt>
   1c554:	cmp	r0, #0
   1c558:	beq	1c580 <main@@Base+0xc64>
   1c55c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c560:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c564:	add	r0, r0, r1, lsl #2
   1c568:	ldr	r0, [r0]
   1c56c:	ldr	r1, [pc, #1568]	; 1cb94 <main@@Base+0x1278>
   1c570:	add	r1, pc, r1
   1c574:	bl	125d4 <strcmp@plt>
   1c578:	cmp	r0, #0
   1c57c:	bne	1c594 <main@@Base+0xc78>
   1c580:	ldr	r0, [pc, #1512]	; 1cb70 <main@@Base+0x1254>
   1c584:	ldr	r0, [pc, r0]
   1c588:	movw	r1, #1
   1c58c:	str	r1, [r0]
   1c590:	b	1c8c4 <main@@Base+0xfa8>
   1c594:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c598:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c59c:	add	r0, r0, r1, lsl #2
   1c5a0:	ldr	r0, [r0]
   1c5a4:	ldr	r1, [pc, #1516]	; 1cb98 <main@@Base+0x127c>
   1c5a8:	add	r1, pc, r1
   1c5ac:	bl	125d4 <strcmp@plt>
   1c5b0:	cmp	r0, #0
   1c5b4:	beq	1c5dc <main@@Base+0xcc0>
   1c5b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c5bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c5c0:	add	r0, r0, r1, lsl #2
   1c5c4:	ldr	r0, [r0]
   1c5c8:	ldr	r1, [pc, #1484]	; 1cb9c <main@@Base+0x1280>
   1c5cc:	add	r1, pc, r1
   1c5d0:	bl	125d4 <strcmp@plt>
   1c5d4:	cmp	r0, #0
   1c5d8:	bne	1c5f0 <main@@Base+0xcd4>
   1c5dc:	ldr	r0, [pc, #1416]	; 1cb6c <main@@Base+0x1250>
   1c5e0:	ldr	r0, [pc, r0]
   1c5e4:	movw	r1, #1
   1c5e8:	str	r1, [r0]
   1c5ec:	b	1c8c0 <main@@Base+0xfa4>
   1c5f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c5f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c5f8:	add	r0, r0, r1, lsl #2
   1c5fc:	ldr	r0, [r0]
   1c600:	ldr	r1, [pc, #1432]	; 1cba0 <main@@Base+0x1284>
   1c604:	add	r1, pc, r1
   1c608:	bl	125d4 <strcmp@plt>
   1c60c:	cmp	r0, #0
   1c610:	beq	1c638 <main@@Base+0xd1c>
   1c614:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c618:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c61c:	add	r0, r0, r1, lsl #2
   1c620:	ldr	r0, [r0]
   1c624:	ldr	r1, [pc, #1400]	; 1cba4 <main@@Base+0x1288>
   1c628:	add	r1, pc, r1
   1c62c:	bl	125d4 <strcmp@plt>
   1c630:	cmp	r0, #0
   1c634:	bne	1c69c <main@@Base+0xd80>
   1c638:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c63c:	add	r0, r0, #1
   1c640:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c644:	cmp	r0, r1
   1c648:	bge	1c69c <main@@Base+0xd80>
   1c64c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c650:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c654:	add	r1, r1, #1
   1c658:	add	r0, r0, r1, lsl #2
   1c65c:	ldr	r0, [r0]
   1c660:	ldrb	r0, [r0]
   1c664:	cmp	r0, #45	; 0x2d
   1c668:	beq	1c69c <main@@Base+0xd80>
   1c66c:	ldr	r0, [pc, #1268]	; 1cb68 <main@@Base+0x124c>
   1c670:	ldr	r0, [pc, r0]
   1c674:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c678:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c67c:	add	r2, r2, #1
   1c680:	add	r1, r1, r2, lsl #2
   1c684:	ldr	r1, [r1]
   1c688:	str	r1, [r0]
   1c68c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c690:	add	r0, r0, #1
   1c694:	str	r0, [fp, #-48]	; 0xffffffd0
   1c698:	b	1c8bc <main@@Base+0xfa0>
   1c69c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c6a0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c6a4:	add	r0, r0, r1, lsl #2
   1c6a8:	ldr	r0, [r0]
   1c6ac:	ldr	r1, [pc, #1268]	; 1cba8 <main@@Base+0x128c>
   1c6b0:	add	r1, pc, r1
   1c6b4:	bl	125d4 <strcmp@plt>
   1c6b8:	cmp	r0, #0
   1c6bc:	beq	1c6e4 <main@@Base+0xdc8>
   1c6c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c6c4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c6c8:	add	r0, r0, r1, lsl #2
   1c6cc:	ldr	r0, [r0]
   1c6d0:	ldr	r1, [pc, #1236]	; 1cbac <main@@Base+0x1290>
   1c6d4:	add	r1, pc, r1
   1c6d8:	bl	125d4 <strcmp@plt>
   1c6dc:	cmp	r0, #0
   1c6e0:	bne	1c6f8 <main@@Base+0xddc>
   1c6e4:	ldr	r0, [pc, #1144]	; 1cb64 <main@@Base+0x1248>
   1c6e8:	ldr	r0, [pc, r0]
   1c6ec:	movw	r1, #1
   1c6f0:	str	r1, [r0]
   1c6f4:	b	1c8b8 <main@@Base+0xf9c>
   1c6f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c6fc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c700:	add	r0, r0, r1, lsl #2
   1c704:	ldr	r0, [r0]
   1c708:	ldr	r1, [pc, #1184]	; 1cbb0 <main@@Base+0x1294>
   1c70c:	add	r1, pc, r1
   1c710:	bl	125d4 <strcmp@plt>
   1c714:	cmp	r0, #0
   1c718:	beq	1c740 <main@@Base+0xe24>
   1c71c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c720:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c724:	add	r0, r0, r1, lsl #2
   1c728:	ldr	r0, [r0]
   1c72c:	ldr	r1, [pc, #1152]	; 1cbb4 <main@@Base+0x1298>
   1c730:	add	r1, pc, r1
   1c734:	bl	125d4 <strcmp@plt>
   1c738:	cmp	r0, #0
   1c73c:	bne	1c7a4 <main@@Base+0xe88>
   1c740:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c744:	add	r0, r0, #1
   1c748:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c74c:	cmp	r0, r1
   1c750:	bge	1c7a4 <main@@Base+0xe88>
   1c754:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c758:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c75c:	add	r1, r1, #1
   1c760:	add	r0, r0, r1, lsl #2
   1c764:	ldr	r0, [r0]
   1c768:	ldrb	r0, [r0]
   1c76c:	cmp	r0, #45	; 0x2d
   1c770:	beq	1c7a4 <main@@Base+0xe88>
   1c774:	ldr	r0, [pc, #996]	; 1cb60 <main@@Base+0x1244>
   1c778:	ldr	r0, [pc, r0]
   1c77c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c780:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c784:	add	r2, r2, #1
   1c788:	add	r1, r1, r2, lsl #2
   1c78c:	ldr	r1, [r1]
   1c790:	str	r1, [r0]
   1c794:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c798:	add	r0, r0, #1
   1c79c:	str	r0, [fp, #-48]	; 0xffffffd0
   1c7a0:	b	1c8b4 <main@@Base+0xf98>
   1c7a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c7ac:	add	r0, r0, r1, lsl #2
   1c7b0:	ldr	r0, [r0]
   1c7b4:	ldr	r1, [pc, #1020]	; 1cbb8 <main@@Base+0x129c>
   1c7b8:	add	r1, pc, r1
   1c7bc:	bl	125d4 <strcmp@plt>
   1c7c0:	cmp	r0, #0
   1c7c4:	beq	1c7ec <main@@Base+0xed0>
   1c7c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c7d0:	add	r0, r0, r1, lsl #2
   1c7d4:	ldr	r0, [r0]
   1c7d8:	ldr	r1, [pc, #988]	; 1cbbc <main@@Base+0x12a0>
   1c7dc:	add	r1, pc, r1
   1c7e0:	bl	125d4 <strcmp@plt>
   1c7e4:	cmp	r0, #0
   1c7e8:	bne	1c800 <main@@Base+0xee4>
   1c7ec:	ldr	r0, [pc, #872]	; 1cb5c <main@@Base+0x1240>
   1c7f0:	ldr	r0, [pc, r0]
   1c7f4:	movw	r1, #1
   1c7f8:	str	r1, [r0]
   1c7fc:	b	1c8b0 <main@@Base+0xf94>
   1c800:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c804:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c808:	add	r0, r0, r1, lsl #2
   1c80c:	ldr	r0, [r0]
   1c810:	ldr	r1, [pc, #936]	; 1cbc0 <main@@Base+0x12a4>
   1c814:	add	r1, pc, r1
   1c818:	bl	125d4 <strcmp@plt>
   1c81c:	cmp	r0, #0
   1c820:	bne	1c830 <main@@Base+0xf14>
   1c824:	movw	r0, #0
   1c828:	str	r0, [fp, #-40]	; 0xffffffd8
   1c82c:	b	1c8ac <main@@Base+0xf90>
   1c830:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c834:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c838:	sub	r1, r1, #1
   1c83c:	cmp	r0, r1
   1c840:	bne	1c880 <main@@Base+0xf64>
   1c844:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c848:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c84c:	add	r0, r0, r1, lsl #2
   1c850:	ldr	r0, [r0]
   1c854:	ldrb	r0, [r0]
   1c858:	cmp	r0, #45	; 0x2d
   1c85c:	beq	1c880 <main@@Base+0xf64>
   1c860:	ldr	r0, [pc, #752]	; 1cb58 <main@@Base+0x123c>
   1c864:	ldr	r0, [pc, r0]
   1c868:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c86c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c870:	add	r1, r1, r2, lsl #2
   1c874:	ldr	r1, [r1]
   1c878:	str	r1, [r0]
   1c87c:	b	1c8a8 <main@@Base+0xf8c>
   1c880:	ldr	r0, [pc, #712]	; 1cb50 <main@@Base+0x1234>
   1c884:	add	r1, pc, r0
   1c888:	ldr	r0, [pc, #708]	; 1cb54 <main@@Base+0x1238>
   1c88c:	ldr	r0, [pc, r0]
   1c890:	ldr	r0, [r0]
   1c894:	bl	12814 <fprintf@plt>
   1c898:	str	r0, [sp, #40]	; 0x28
   1c89c:	bl	1dd14 <main@@Base+0x23f8>
   1c8a0:	movw	r0, #1
   1c8a4:	bl	127cc <exit@plt>
   1c8a8:	b	1c8ac <main@@Base+0xf90>
   1c8ac:	b	1c8b0 <main@@Base+0xf94>
   1c8b0:	b	1c8b4 <main@@Base+0xf98>
   1c8b4:	b	1c8b8 <main@@Base+0xf9c>
   1c8b8:	b	1c8bc <main@@Base+0xfa0>
   1c8bc:	b	1c8c0 <main@@Base+0xfa4>
   1c8c0:	b	1c8c4 <main@@Base+0xfa8>
   1c8c4:	b	1c8c8 <main@@Base+0xfac>
   1c8c8:	b	1c8cc <main@@Base+0xfb0>
   1c8cc:	b	1c8d0 <main@@Base+0xfb4>
   1c8d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c8d4:	add	r0, r0, #1
   1c8d8:	str	r0, [fp, #-48]	; 0xffffffd0
   1c8dc:	b	1c3ec <main@@Base+0xad0>
   1c8e0:	ldr	r0, [pc, #536]	; 1cb00 <main@@Base+0x11e4>
   1c8e4:	ldr	r0, [pc, r0]
   1c8e8:	ldr	r0, [r0]
   1c8ec:	movw	r1, #0
   1c8f0:	cmp	r0, r1
   1c8f4:	beq	1c910 <main@@Base+0xff4>
   1c8f8:	ldr	r0, [pc, #516]	; 1cb04 <main@@Base+0x11e8>
   1c8fc:	ldr	r0, [pc, r0]
   1c900:	ldr	r0, [r0]
   1c904:	ldrb	r0, [r0]
   1c908:	cmp	r0, #0
   1c90c:	bne	1c938 <main@@Base+0x101c>
   1c910:	ldr	r0, [pc, #560]	; 1cb48 <main@@Base+0x122c>
   1c914:	add	r1, pc, r0
   1c918:	ldr	r0, [pc, #556]	; 1cb4c <main@@Base+0x1230>
   1c91c:	ldr	r0, [pc, r0]
   1c920:	ldr	r0, [r0]
   1c924:	bl	12814 <fprintf@plt>
   1c928:	str	r0, [sp, #36]	; 0x24
   1c92c:	bl	1dd14 <main@@Base+0x23f8>
   1c930:	movw	r0, #1
   1c934:	bl	127cc <exit@plt>
   1c938:	bl	12838 <coda_init@plt>
   1c93c:	cmp	r0, #0
   1c940:	beq	1c98c <main@@Base+0x1070>
   1c944:	ldr	r0, [pc, #504]	; 1cb44 <main@@Base+0x1228>
   1c948:	ldr	r0, [pc, r0]
   1c94c:	ldr	r0, [r0]
   1c950:	str	r0, [sp, #32]
   1c954:	bl	129ac <coda_get_errno@plt>
   1c958:	ldr	r0, [r0]
   1c95c:	bl	12964 <coda_errno_to_string@plt>
   1c960:	ldr	r1, [pc, #472]	; 1cb40 <main@@Base+0x1224>
   1c964:	add	r1, pc, r1
   1c968:	ldr	r2, [sp, #32]
   1c96c:	str	r0, [sp, #28]
   1c970:	mov	r0, r2
   1c974:	ldr	r2, [sp, #28]
   1c978:	bl	12814 <fprintf@plt>
   1c97c:	movw	r1, #1
   1c980:	str	r0, [sp, #24]
   1c984:	mov	r0, r1
   1c988:	bl	127cc <exit@plt>
   1c98c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c990:	cmp	r0, #0
   1c994:	movw	r0, #0
   1c998:	movne	r0, #1
   1c99c:	mvn	r1, #0
   1c9a0:	eor	r0, r0, r1
   1c9a4:	and	r0, r0, #1
   1c9a8:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1c9ac:	movw	r1, #0
   1c9b0:	str	r0, [sp, #20]
   1c9b4:	mov	r0, r1
   1c9b8:	bl	125c8 <coda_set_option_perform_boundary_checks@plt>
   1c9bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c9c0:	str	r0, [sp, #16]
   1c9c4:	mov	r0, r1
   1c9c8:	bl	12844 <coda_set_option_perform_conversions@plt>
   1c9cc:	ldr	r1, [pc, #316]	; 1cb10 <main@@Base+0x11f4>
   1c9d0:	ldr	r1, [pc, r1]
   1c9d4:	str	r0, [sp, #12]
   1c9d8:	blx	r1
   1c9dc:	ldr	r0, [pc, #296]	; 1cb0c <main@@Base+0x11f0>
   1c9e0:	ldr	r0, [pc, r0]
   1c9e4:	blx	r0
   1c9e8:	ldr	r0, [pc, #280]	; 1cb08 <main@@Base+0x11ec>
   1c9ec:	ldr	r0, [pc, r0]
   1c9f0:	ldr	r0, [r0]
   1c9f4:	movw	r1, #0
   1c9f8:	cmp	r0, r1
   1c9fc:	beq	1ca78 <main@@Base+0x115c>
   1ca00:	ldr	r0, [pc, #272]	; 1cb18 <main@@Base+0x11fc>
   1ca04:	add	r1, pc, r0
   1ca08:	ldr	r0, [pc, #268]	; 1cb1c <main@@Base+0x1200>
   1ca0c:	ldr	r0, [pc, r0]
   1ca10:	ldr	r0, [r0]
   1ca14:	bl	12604 <fopen@plt>
   1ca18:	ldr	r1, [pc, #244]	; 1cb14 <main@@Base+0x11f8>
   1ca1c:	ldr	r1, [pc, r1]
   1ca20:	str	r0, [r1]
   1ca24:	ldr	r0, [r1]
   1ca28:	movw	r1, #0
   1ca2c:	cmp	r0, r1
   1ca30:	bne	1ca74 <main@@Base+0x1158>
   1ca34:	ldr	r0, [pc, #248]	; 1cb34 <main@@Base+0x1218>
   1ca38:	add	r1, pc, r0
   1ca3c:	ldr	r0, [pc, #244]	; 1cb38 <main@@Base+0x121c>
   1ca40:	ldr	r0, [pc, r0]
   1ca44:	ldr	r2, [pc, #240]	; 1cb3c <main@@Base+0x1220>
   1ca48:	ldr	r2, [pc, r2]
   1ca4c:	ldr	r2, [r2]
   1ca50:	ldr	r0, [r0]
   1ca54:	str	r0, [sp, #8]
   1ca58:	mov	r0, r2
   1ca5c:	ldr	r2, [sp, #8]
   1ca60:	bl	12814 <fprintf@plt>
   1ca64:	movw	r1, #1
   1ca68:	str	r0, [sp, #4]
   1ca6c:	mov	r0, r1
   1ca70:	bl	127cc <exit@plt>
   1ca74:	b	1ca78 <main@@Base+0x115c>
   1ca78:	ldr	r0, [pc, #164]	; 1cb24 <main@@Base+0x1208>
   1ca7c:	ldr	r0, [pc, r0]
   1ca80:	blx	r0
   1ca84:	ldr	r0, [pc, #148]	; 1cb20 <main@@Base+0x1204>
   1ca88:	ldr	r0, [pc, r0]
   1ca8c:	ldr	r0, [r0]
   1ca90:	movw	r1, #0
   1ca94:	cmp	r0, r1
   1ca98:	beq	1caac <main@@Base+0x1190>
   1ca9c:	ldr	r0, [pc, #132]	; 1cb28 <main@@Base+0x120c>
   1caa0:	ldr	r0, [pc, r0]
   1caa4:	ldr	r0, [r0]
   1caa8:	bl	128b0 <fclose@plt>
   1caac:	ldr	r0, [pc, #124]	; 1cb30 <main@@Base+0x1214>
   1cab0:	ldr	r0, [pc, r0]
   1cab4:	blx	r0
   1cab8:	ldr	r0, [pc, #108]	; 1cb2c <main@@Base+0x1210>
   1cabc:	ldr	r0, [pc, r0]
   1cac0:	blx	r0
   1cac4:	bl	1276c <coda_done@plt>
   1cac8:	sub	sp, fp, #28
   1cacc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cad0:	andeq	r4, r1, r8, ror #28
   1cad4:	andeq	r4, r1, r0, asr #29
   1cad8:			; <UNDEFINED> instruction: 0x00014eb4
   1cadc:	andeq	r4, r1, ip, ror lr
   1cae0:	andeq	r4, r1, r4, asr lr
   1cae4:	andeq	r4, r1, ip, lsr #28
   1cae8:	andeq	r4, r1, r4, asr lr
   1caec:	andeq	r4, r1, r8, ror lr
   1caf0:	muleq	r0, ip, r8
   1caf4:	andeq	r4, r1, r0, asr #28
   1caf8:	andeq	r4, r1, r0, lsl lr
   1cafc:	andeq	r4, r1, ip, lsl lr
   1cb00:	andeq	r4, r1, r8, asr #17
   1cb04:			; <UNDEFINED> instruction: 0x000148b0
   1cb08:	andeq	r4, r1, r8, lsr #15
   1cb0c:	andeq	r4, r1, r4, lsl r8
   1cb10:	strdeq	r4, [r1], -ip
   1cb14:	muleq	r1, ip, r7
   1cb18:	andeq	r3, r0, sp, lsr fp
   1cb1c:	andeq	r4, r1, r8, lsl #15
   1cb20:	andeq	r4, r1, ip, lsl #14
   1cb24:	andeq	r4, r1, r8, lsr #14
   1cb28:	andeq	r4, r1, r8, lsl r7
   1cb2c:	andeq	r4, r1, ip, lsr #14
   1cb30:	andeq	r4, r1, r4, lsl #14
   1cb34:	andeq	r3, r0, fp, lsl #22
   1cb38:	andeq	r4, r1, r4, asr r7
   1cb3c:	andeq	r4, r1, r8, ror #14
   1cb40:	andeq	r2, r0, lr, lsr #21
   1cb44:	andeq	r4, r1, r8, ror #16
   1cb48:	andeq	r2, r0, r8, asr fp
   1cb4c:	muleq	r1, r4, r8
   1cb50:	andeq	r2, r0, r8, ror #23
   1cb54:	andeq	r4, r1, r4, lsr #18
   1cb58:	andeq	r4, r1, r8, asr #18
   1cb5c:	andeq	r4, r1, ip, lsr #19
   1cb60:	andeq	r4, r1, r4, asr #20
   1cb64:	andeq	r4, r1, r4, lsl fp
   1cb68:	andeq	r4, r1, r4, lsr #22
   1cb6c:	andeq	r4, r1, r8, lsl ip
   1cb70:	andeq	r4, r1, r4, asr #24
   1cb74:	andeq	r4, r1, r4, asr #25
   1cb78:	andeq	r3, r0, r6, ror pc
   1cb7c:	andeq	r4, r1, r4, lsr #25
   1cb80:	andeq	r4, r0, r5, asr #32
   1cb84:	andeq	r4, r0, r4, lsr #32
   1cb88:	andeq	r4, r0, sl
   1cb8c:	andeq	r3, r0, r9, ror #31
   1cb90:	muleq	r0, r9, pc	; <UNPREDICTABLE>
   1cb94:	andeq	r3, r0, r8, ror pc
   1cb98:	andeq	r3, r0, r8, asr #30
   1cb9c:	andeq	r3, r0, r7, lsr #30
   1cba0:	strdeq	r3, [r0], -r7
   1cba4:	ldrdeq	r3, [r0], -r6
   1cba8:	andeq	r3, r0, r7, asr lr
   1cbac:	andeq	r3, r0, r6, lsr lr
   1cbb0:	andeq	r3, r0, lr, lsl #28
   1cbb4:	andeq	r3, r0, sp, ror #27
   1cbb8:	andeq	r3, r0, fp, ror #25
   1cbbc:	andeq	r3, r0, r4, asr sp
   1cbc0:			; <UNDEFINED> instruction: 0x00003cbe
   1cbc4:	push	{r4, sl, fp, lr}
   1cbc8:	add	fp, sp, #8
   1cbcc:	sub	sp, sp, #56	; 0x38
   1cbd0:	ldr	r2, [pc, #1244]	; 1d0b4 <main@@Base+0x1798>
   1cbd4:	ldr	r2, [pc, r2]
   1cbd8:	ldr	r3, [pc, #1240]	; 1d0b8 <main@@Base+0x179c>
   1cbdc:	ldr	r3, [pc, r3]
   1cbe0:	ldr	ip, [pc, #1236]	; 1d0bc <main@@Base+0x17a0>
   1cbe4:	ldr	ip, [pc, ip]
   1cbe8:	ldr	lr, [pc, #1232]	; 1d0c0 <main@@Base+0x17a4>
   1cbec:	ldr	lr, [pc, lr]
   1cbf0:	ldr	r4, [pc, #1228]	; 1d0c4 <main@@Base+0x17a8>
   1cbf4:	ldr	r4, [pc, r4]
   1cbf8:	str	r0, [fp, #-12]
   1cbfc:	str	r1, [fp, #-16]
   1cc00:	movw	r0, #0
   1cc04:	str	r0, [r4]
   1cc08:	str	r0, [lr]
   1cc0c:	str	r0, [ip]
   1cc10:	ldr	r1, [r3]
   1cc14:	str	r1, [r2]
   1cc18:	movw	r1, #1
   1cc1c:	str	r1, [fp, #-20]	; 0xffffffec
   1cc20:	str	r1, [fp, #-24]	; 0xffffffe8
   1cc24:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc28:	str	r0, [sp, #32]
   1cc2c:	ldr	r0, [sp, #32]
   1cc30:	ldr	r1, [fp, #-12]
   1cc34:	cmp	r0, r1
   1cc38:	bge	1cf0c <main@@Base+0x15f0>
   1cc3c:	ldr	r0, [fp, #-16]
   1cc40:	ldr	r1, [sp, #32]
   1cc44:	add	r0, r0, r1, lsl #2
   1cc48:	ldr	r0, [r0]
   1cc4c:	ldr	r1, [pc, #1220]	; 1d118 <main@@Base+0x17fc>
   1cc50:	add	r1, pc, r1
   1cc54:	bl	125d4 <strcmp@plt>
   1cc58:	cmp	r0, #0
   1cc5c:	beq	1cc84 <main@@Base+0x1368>
   1cc60:	ldr	r0, [fp, #-16]
   1cc64:	ldr	r1, [sp, #32]
   1cc68:	add	r0, r0, r1, lsl #2
   1cc6c:	ldr	r0, [r0]
   1cc70:	ldr	r1, [pc, #1188]	; 1d11c <main@@Base+0x1800>
   1cc74:	add	r1, pc, r1
   1cc78:	bl	125d4 <strcmp@plt>
   1cc7c:	cmp	r0, #0
   1cc80:	bne	1cc90 <main@@Base+0x1374>
   1cc84:	movw	r0, #1
   1cc88:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc8c:	b	1cef8 <main@@Base+0x15dc>
   1cc90:	ldr	r0, [fp, #-16]
   1cc94:	ldr	r1, [sp, #32]
   1cc98:	add	r0, r0, r1, lsl #2
   1cc9c:	ldr	r0, [r0]
   1cca0:	ldr	r1, [pc, #1144]	; 1d120 <main@@Base+0x1804>
   1cca4:	add	r1, pc, r1
   1cca8:	bl	125d4 <strcmp@plt>
   1ccac:	cmp	r0, #0
   1ccb0:	beq	1ccd8 <main@@Base+0x13bc>
   1ccb4:	ldr	r0, [fp, #-16]
   1ccb8:	ldr	r1, [sp, #32]
   1ccbc:	add	r0, r0, r1, lsl #2
   1ccc0:	ldr	r0, [r0]
   1ccc4:	ldr	r1, [pc, #1112]	; 1d124 <main@@Base+0x1808>
   1ccc8:	add	r1, pc, r1
   1cccc:	bl	125d4 <strcmp@plt>
   1ccd0:	cmp	r0, #0
   1ccd4:	bne	1cce4 <main@@Base+0x13c8>
   1ccd8:	movw	r0, #0
   1ccdc:	str	r0, [fp, #-24]	; 0xffffffe8
   1cce0:	b	1cef4 <main@@Base+0x15d8>
   1cce4:	ldr	r0, [fp, #-16]
   1cce8:	ldr	r1, [sp, #32]
   1ccec:	add	r0, r0, r1, lsl #2
   1ccf0:	ldr	r0, [r0]
   1ccf4:	ldr	r1, [pc, #1068]	; 1d128 <main@@Base+0x180c>
   1ccf8:	add	r1, pc, r1
   1ccfc:	bl	125d4 <strcmp@plt>
   1cd00:	cmp	r0, #0
   1cd04:	beq	1cd2c <main@@Base+0x1410>
   1cd08:	ldr	r0, [fp, #-16]
   1cd0c:	ldr	r1, [sp, #32]
   1cd10:	add	r0, r0, r1, lsl #2
   1cd14:	ldr	r0, [r0]
   1cd18:	ldr	r1, [pc, #1036]	; 1d12c <main@@Base+0x1810>
   1cd1c:	add	r1, pc, r1
   1cd20:	bl	125d4 <strcmp@plt>
   1cd24:	cmp	r0, #0
   1cd28:	bne	1cd90 <main@@Base+0x1474>
   1cd2c:	ldr	r0, [sp, #32]
   1cd30:	add	r0, r0, #1
   1cd34:	ldr	r1, [fp, #-12]
   1cd38:	cmp	r0, r1
   1cd3c:	bge	1cd90 <main@@Base+0x1474>
   1cd40:	ldr	r0, [fp, #-16]
   1cd44:	ldr	r1, [sp, #32]
   1cd48:	add	r1, r1, #1
   1cd4c:	add	r0, r0, r1, lsl #2
   1cd50:	ldr	r0, [r0]
   1cd54:	ldrb	r0, [r0]
   1cd58:	cmp	r0, #45	; 0x2d
   1cd5c:	beq	1cd90 <main@@Base+0x1474>
   1cd60:	ldr	r0, [pc, #940]	; 1d114 <main@@Base+0x17f8>
   1cd64:	ldr	r0, [pc, r0]
   1cd68:	ldr	r1, [fp, #-16]
   1cd6c:	ldr	r2, [sp, #32]
   1cd70:	add	r2, r2, #1
   1cd74:	add	r1, r1, r2, lsl #2
   1cd78:	ldr	r1, [r1]
   1cd7c:	str	r1, [r0]
   1cd80:	ldr	r0, [sp, #32]
   1cd84:	add	r0, r0, #1
   1cd88:	str	r0, [sp, #32]
   1cd8c:	b	1cef0 <main@@Base+0x15d4>
   1cd90:	ldr	r0, [fp, #-16]
   1cd94:	ldr	r1, [sp, #32]
   1cd98:	add	r0, r0, r1, lsl #2
   1cd9c:	ldr	r0, [r0]
   1cda0:	ldr	r1, [pc, #904]	; 1d130 <main@@Base+0x1814>
   1cda4:	add	r1, pc, r1
   1cda8:	bl	125d4 <strcmp@plt>
   1cdac:	cmp	r0, #0
   1cdb0:	beq	1cdd8 <main@@Base+0x14bc>
   1cdb4:	ldr	r0, [fp, #-16]
   1cdb8:	ldr	r1, [sp, #32]
   1cdbc:	add	r0, r0, r1, lsl #2
   1cdc0:	ldr	r0, [r0]
   1cdc4:	ldr	r1, [pc, #872]	; 1d134 <main@@Base+0x1818>
   1cdc8:	add	r1, pc, r1
   1cdcc:	bl	125d4 <strcmp@plt>
   1cdd0:	cmp	r0, #0
   1cdd4:	bne	1ce3c <main@@Base+0x1520>
   1cdd8:	ldr	r0, [sp, #32]
   1cddc:	add	r0, r0, #1
   1cde0:	ldr	r1, [fp, #-12]
   1cde4:	cmp	r0, r1
   1cde8:	bge	1ce3c <main@@Base+0x1520>
   1cdec:	ldr	r0, [fp, #-16]
   1cdf0:	ldr	r1, [sp, #32]
   1cdf4:	add	r1, r1, #1
   1cdf8:	add	r0, r0, r1, lsl #2
   1cdfc:	ldr	r0, [r0]
   1ce00:	ldrb	r0, [r0]
   1ce04:	cmp	r0, #45	; 0x2d
   1ce08:	beq	1ce3c <main@@Base+0x1520>
   1ce0c:	ldr	r0, [pc, #764]	; 1d110 <main@@Base+0x17f4>
   1ce10:	ldr	r0, [pc, r0]
   1ce14:	ldr	r1, [fp, #-16]
   1ce18:	ldr	r2, [sp, #32]
   1ce1c:	add	r2, r2, #1
   1ce20:	add	r1, r1, r2, lsl #2
   1ce24:	ldr	r1, [r1]
   1ce28:	str	r1, [r0]
   1ce2c:	ldr	r0, [sp, #32]
   1ce30:	add	r0, r0, #1
   1ce34:	str	r0, [sp, #32]
   1ce38:	b	1ceec <main@@Base+0x15d0>
   1ce3c:	ldr	r0, [fp, #-16]
   1ce40:	ldr	r1, [sp, #32]
   1ce44:	add	r0, r0, r1, lsl #2
   1ce48:	ldr	r0, [r0]
   1ce4c:	ldr	r1, [pc, #740]	; 1d138 <main@@Base+0x181c>
   1ce50:	add	r1, pc, r1
   1ce54:	bl	125d4 <strcmp@plt>
   1ce58:	cmp	r0, #0
   1ce5c:	bne	1ce6c <main@@Base+0x1550>
   1ce60:	movw	r0, #0
   1ce64:	str	r0, [fp, #-20]	; 0xffffffec
   1ce68:	b	1cee8 <main@@Base+0x15cc>
   1ce6c:	ldr	r0, [sp, #32]
   1ce70:	ldr	r1, [fp, #-12]
   1ce74:	sub	r1, r1, #1
   1ce78:	cmp	r0, r1
   1ce7c:	bne	1cebc <main@@Base+0x15a0>
   1ce80:	ldr	r0, [fp, #-16]
   1ce84:	ldr	r1, [sp, #32]
   1ce88:	add	r0, r0, r1, lsl #2
   1ce8c:	ldr	r0, [r0]
   1ce90:	ldrb	r0, [r0]
   1ce94:	cmp	r0, #45	; 0x2d
   1ce98:	beq	1cebc <main@@Base+0x15a0>
   1ce9c:	ldr	r0, [pc, #616]	; 1d10c <main@@Base+0x17f0>
   1cea0:	ldr	r0, [pc, r0]
   1cea4:	ldr	r1, [fp, #-16]
   1cea8:	ldr	r2, [sp, #32]
   1ceac:	add	r1, r1, r2, lsl #2
   1ceb0:	ldr	r1, [r1]
   1ceb4:	str	r1, [r0]
   1ceb8:	b	1cee4 <main@@Base+0x15c8>
   1cebc:	ldr	r0, [pc, #576]	; 1d104 <main@@Base+0x17e8>
   1cec0:	add	r1, pc, r0
   1cec4:	ldr	r0, [pc, #572]	; 1d108 <main@@Base+0x17ec>
   1cec8:	ldr	r0, [pc, r0]
   1cecc:	ldr	r0, [r0]
   1ced0:	bl	12814 <fprintf@plt>
   1ced4:	str	r0, [sp, #28]
   1ced8:	bl	1dd14 <main@@Base+0x23f8>
   1cedc:	movw	r0, #1
   1cee0:	bl	127cc <exit@plt>
   1cee4:	b	1cee8 <main@@Base+0x15cc>
   1cee8:	b	1ceec <main@@Base+0x15d0>
   1ceec:	b	1cef0 <main@@Base+0x15d4>
   1cef0:	b	1cef4 <main@@Base+0x15d8>
   1cef4:	b	1cef8 <main@@Base+0x15dc>
   1cef8:	b	1cefc <main@@Base+0x15e0>
   1cefc:	ldr	r0, [sp, #32]
   1cf00:	add	r0, r0, #1
   1cf04:	str	r0, [sp, #32]
   1cf08:	b	1cc2c <main@@Base+0x1310>
   1cf0c:	ldr	r0, [pc, #436]	; 1d0c8 <main@@Base+0x17ac>
   1cf10:	ldr	r0, [pc, r0]
   1cf14:	ldr	r0, [r0]
   1cf18:	movw	r1, #0
   1cf1c:	cmp	r0, r1
   1cf20:	beq	1cf3c <main@@Base+0x1620>
   1cf24:	ldr	r0, [pc, #416]	; 1d0cc <main@@Base+0x17b0>
   1cf28:	ldr	r0, [pc, r0]
   1cf2c:	ldr	r0, [r0]
   1cf30:	ldrb	r0, [r0]
   1cf34:	cmp	r0, #0
   1cf38:	bne	1cf64 <main@@Base+0x1648>
   1cf3c:	ldr	r0, [pc, #440]	; 1d0fc <main@@Base+0x17e0>
   1cf40:	add	r1, pc, r0
   1cf44:	ldr	r0, [pc, #436]	; 1d100 <main@@Base+0x17e4>
   1cf48:	ldr	r0, [pc, r0]
   1cf4c:	ldr	r0, [r0]
   1cf50:	bl	12814 <fprintf@plt>
   1cf54:	str	r0, [sp, #24]
   1cf58:	bl	1dd14 <main@@Base+0x23f8>
   1cf5c:	movw	r0, #1
   1cf60:	bl	127cc <exit@plt>
   1cf64:	bl	12838 <coda_init@plt>
   1cf68:	cmp	r0, #0
   1cf6c:	beq	1cfb8 <main@@Base+0x169c>
   1cf70:	ldr	r0, [pc, #384]	; 1d0f8 <main@@Base+0x17dc>
   1cf74:	ldr	r0, [pc, r0]
   1cf78:	ldr	r0, [r0]
   1cf7c:	str	r0, [sp, #20]
   1cf80:	bl	129ac <coda_get_errno@plt>
   1cf84:	ldr	r0, [r0]
   1cf88:	bl	12964 <coda_errno_to_string@plt>
   1cf8c:	ldr	r1, [pc, #352]	; 1d0f4 <main@@Base+0x17d8>
   1cf90:	add	r1, pc, r1
   1cf94:	ldr	r2, [sp, #20]
   1cf98:	str	r0, [sp, #16]
   1cf9c:	mov	r0, r2
   1cfa0:	ldr	r2, [sp, #16]
   1cfa4:	bl	12814 <fprintf@plt>
   1cfa8:	movw	r1, #1
   1cfac:	str	r0, [sp, #12]
   1cfb0:	mov	r0, r1
   1cfb4:	bl	127cc <exit@plt>
   1cfb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cfbc:	cmp	r0, #0
   1cfc0:	movw	r0, #0
   1cfc4:	movne	r0, #1
   1cfc8:	mvn	r1, #0
   1cfcc:	eor	r0, r0, r1
   1cfd0:	and	r0, r0, #1
   1cfd4:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1cfd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cfdc:	str	r0, [sp, #8]
   1cfe0:	mov	r0, r1
   1cfe4:	bl	12844 <coda_set_option_perform_conversions@plt>
   1cfe8:	ldr	r1, [pc, #224]	; 1d0d0 <main@@Base+0x17b4>
   1cfec:	ldr	r1, [pc, r1]
   1cff0:	ldr	r1, [r1]
   1cff4:	movw	r2, #0
   1cff8:	cmp	r1, r2
   1cffc:	beq	1d078 <main@@Base+0x175c>
   1d000:	ldr	r0, [pc, #208]	; 1d0d8 <main@@Base+0x17bc>
   1d004:	add	r1, pc, r0
   1d008:	ldr	r0, [pc, #204]	; 1d0dc <main@@Base+0x17c0>
   1d00c:	ldr	r0, [pc, r0]
   1d010:	ldr	r0, [r0]
   1d014:	bl	12604 <fopen@plt>
   1d018:	ldr	r1, [pc, #180]	; 1d0d4 <main@@Base+0x17b8>
   1d01c:	ldr	r1, [pc, r1]
   1d020:	str	r0, [r1]
   1d024:	ldr	r0, [r1]
   1d028:	movw	r1, #0
   1d02c:	cmp	r0, r1
   1d030:	bne	1d074 <main@@Base+0x1758>
   1d034:	ldr	r0, [pc, #172]	; 1d0e8 <main@@Base+0x17cc>
   1d038:	add	r1, pc, r0
   1d03c:	ldr	r0, [pc, #168]	; 1d0ec <main@@Base+0x17d0>
   1d040:	ldr	r0, [pc, r0]
   1d044:	ldr	r2, [pc, #164]	; 1d0f0 <main@@Base+0x17d4>
   1d048:	ldr	r2, [pc, r2]
   1d04c:	ldr	r2, [r2]
   1d050:	ldr	r0, [r0]
   1d054:	str	r0, [sp, #4]
   1d058:	mov	r0, r2
   1d05c:	ldr	r2, [sp, #4]
   1d060:	bl	12814 <fprintf@plt>
   1d064:	movw	r1, #1
   1d068:	str	r0, [sp]
   1d06c:	mov	r0, r1
   1d070:	bl	127cc <exit@plt>
   1d074:	b	1d078 <main@@Base+0x175c>
   1d078:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d07c:	bl	18184 <print_json_data@@Base>
   1d080:	ldr	r0, [pc, #88]	; 1d0e0 <main@@Base+0x17c4>
   1d084:	ldr	r0, [pc, r0]
   1d088:	ldr	r0, [r0]
   1d08c:	movw	r1, #0
   1d090:	cmp	r0, r1
   1d094:	beq	1d0a8 <main@@Base+0x178c>
   1d098:	ldr	r0, [pc, #68]	; 1d0e4 <main@@Base+0x17c8>
   1d09c:	ldr	r0, [pc, r0]
   1d0a0:	ldr	r0, [r0]
   1d0a4:	bl	128b0 <fclose@plt>
   1d0a8:	bl	1276c <coda_done@plt>
   1d0ac:	sub	sp, fp, #8
   1d0b0:	pop	{r4, sl, fp, pc}
   1d0b4:	andeq	r4, r1, r4, ror #11
   1d0b8:	andeq	r4, r1, r8, lsl #12
   1d0bc:	strdeq	r4, [r1], -ip
   1d0c0:	andeq	r4, r1, r8, lsr #11
   1d0c4:			; <UNDEFINED> instruction: 0x000145b8
   1d0c8:	muleq	r1, ip, r2
   1d0cc:	andeq	r4, r1, r4, lsl #5
   1d0d0:	andeq	r4, r1, r8, lsr #3
   1d0d4:	muleq	r1, ip, r1
   1d0d8:	andeq	r3, r0, sp, lsr r5
   1d0dc:	andeq	r4, r1, r8, lsl #3
   1d0e0:	andeq	r4, r1, r0, lsl r1
   1d0e4:	andeq	r4, r1, ip, lsl r1
   1d0e8:	andeq	r3, r0, fp, lsl #10
   1d0ec:	andeq	r4, r1, r4, asr r1
   1d0f0:	andeq	r4, r1, r8, ror #2
   1d0f4:	andeq	r2, r0, r2, lsl #9
   1d0f8:	andeq	r4, r1, ip, lsr r2
   1d0fc:	andeq	r2, r0, ip, lsr #10
   1d100:	andeq	r4, r1, r8, ror #4
   1d104:	andeq	r2, r0, ip, lsr #11
   1d108:	andeq	r4, r1, r8, ror #5
   1d10c:	andeq	r4, r1, ip, lsl #6
   1d110:	ldrdeq	r4, [r1], -r0
   1d114:	andeq	r4, r1, r0, lsr r4
   1d118:	andeq	r3, r0, sp, lsl r9
   1d11c:	strdeq	r3, [r0], -ip
   1d120:			; <UNDEFINED> instruction: 0x000037b1
   1d124:	muleq	r0, r0, r7
   1d128:	andeq	r3, r0, r3, lsl #16
   1d12c:	andeq	r3, r0, r2, ror #15
   1d130:	ldrdeq	r3, [r0], -r9
   1d134:			; <UNDEFINED> instruction: 0x000037b8
   1d138:	andeq	r3, r0, r2, lsl #13
   1d13c:	push	{r4, sl, fp, lr}
   1d140:	add	fp, sp, #8
   1d144:	sub	sp, sp, #56	; 0x38
   1d148:	ldr	r2, [pc, #1244]	; 1d62c <main@@Base+0x1d10>
   1d14c:	ldr	r2, [pc, r2]
   1d150:	ldr	r3, [pc, #1240]	; 1d630 <main@@Base+0x1d14>
   1d154:	ldr	r3, [pc, r3]
   1d158:	ldr	ip, [pc, #1236]	; 1d634 <main@@Base+0x1d18>
   1d15c:	ldr	ip, [pc, ip]
   1d160:	ldr	lr, [pc, #1232]	; 1d638 <main@@Base+0x1d1c>
   1d164:	ldr	lr, [pc, lr]
   1d168:	ldr	r4, [pc, #1228]	; 1d63c <main@@Base+0x1d20>
   1d16c:	ldr	r4, [pc, r4]
   1d170:	str	r0, [fp, #-12]
   1d174:	str	r1, [fp, #-16]
   1d178:	movw	r0, #0
   1d17c:	str	r0, [r4]
   1d180:	str	r0, [lr]
   1d184:	str	r0, [ip]
   1d188:	ldr	r1, [r3]
   1d18c:	str	r1, [r2]
   1d190:	movw	r1, #1
   1d194:	str	r1, [fp, #-20]	; 0xffffffec
   1d198:	str	r1, [fp, #-24]	; 0xffffffe8
   1d19c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d1a0:	str	r0, [sp, #32]
   1d1a4:	ldr	r0, [sp, #32]
   1d1a8:	ldr	r1, [fp, #-12]
   1d1ac:	cmp	r0, r1
   1d1b0:	bge	1d484 <main@@Base+0x1b68>
   1d1b4:	ldr	r0, [fp, #-16]
   1d1b8:	ldr	r1, [sp, #32]
   1d1bc:	add	r0, r0, r1, lsl #2
   1d1c0:	ldr	r0, [r0]
   1d1c4:	ldr	r1, [pc, #1220]	; 1d690 <main@@Base+0x1d74>
   1d1c8:	add	r1, pc, r1
   1d1cc:	bl	125d4 <strcmp@plt>
   1d1d0:	cmp	r0, #0
   1d1d4:	beq	1d1fc <main@@Base+0x18e0>
   1d1d8:	ldr	r0, [fp, #-16]
   1d1dc:	ldr	r1, [sp, #32]
   1d1e0:	add	r0, r0, r1, lsl #2
   1d1e4:	ldr	r0, [r0]
   1d1e8:	ldr	r1, [pc, #1188]	; 1d694 <main@@Base+0x1d78>
   1d1ec:	add	r1, pc, r1
   1d1f0:	bl	125d4 <strcmp@plt>
   1d1f4:	cmp	r0, #0
   1d1f8:	bne	1d208 <main@@Base+0x18ec>
   1d1fc:	movw	r0, #1
   1d200:	str	r0, [fp, #-28]	; 0xffffffe4
   1d204:	b	1d470 <main@@Base+0x1b54>
   1d208:	ldr	r0, [fp, #-16]
   1d20c:	ldr	r1, [sp, #32]
   1d210:	add	r0, r0, r1, lsl #2
   1d214:	ldr	r0, [r0]
   1d218:	ldr	r1, [pc, #1144]	; 1d698 <main@@Base+0x1d7c>
   1d21c:	add	r1, pc, r1
   1d220:	bl	125d4 <strcmp@plt>
   1d224:	cmp	r0, #0
   1d228:	beq	1d250 <main@@Base+0x1934>
   1d22c:	ldr	r0, [fp, #-16]
   1d230:	ldr	r1, [sp, #32]
   1d234:	add	r0, r0, r1, lsl #2
   1d238:	ldr	r0, [r0]
   1d23c:	ldr	r1, [pc, #1112]	; 1d69c <main@@Base+0x1d80>
   1d240:	add	r1, pc, r1
   1d244:	bl	125d4 <strcmp@plt>
   1d248:	cmp	r0, #0
   1d24c:	bne	1d25c <main@@Base+0x1940>
   1d250:	movw	r0, #0
   1d254:	str	r0, [fp, #-24]	; 0xffffffe8
   1d258:	b	1d46c <main@@Base+0x1b50>
   1d25c:	ldr	r0, [fp, #-16]
   1d260:	ldr	r1, [sp, #32]
   1d264:	add	r0, r0, r1, lsl #2
   1d268:	ldr	r0, [r0]
   1d26c:	ldr	r1, [pc, #1068]	; 1d6a0 <main@@Base+0x1d84>
   1d270:	add	r1, pc, r1
   1d274:	bl	125d4 <strcmp@plt>
   1d278:	cmp	r0, #0
   1d27c:	beq	1d2a4 <main@@Base+0x1988>
   1d280:	ldr	r0, [fp, #-16]
   1d284:	ldr	r1, [sp, #32]
   1d288:	add	r0, r0, r1, lsl #2
   1d28c:	ldr	r0, [r0]
   1d290:	ldr	r1, [pc, #1036]	; 1d6a4 <main@@Base+0x1d88>
   1d294:	add	r1, pc, r1
   1d298:	bl	125d4 <strcmp@plt>
   1d29c:	cmp	r0, #0
   1d2a0:	bne	1d308 <main@@Base+0x19ec>
   1d2a4:	ldr	r0, [sp, #32]
   1d2a8:	add	r0, r0, #1
   1d2ac:	ldr	r1, [fp, #-12]
   1d2b0:	cmp	r0, r1
   1d2b4:	bge	1d308 <main@@Base+0x19ec>
   1d2b8:	ldr	r0, [fp, #-16]
   1d2bc:	ldr	r1, [sp, #32]
   1d2c0:	add	r1, r1, #1
   1d2c4:	add	r0, r0, r1, lsl #2
   1d2c8:	ldr	r0, [r0]
   1d2cc:	ldrb	r0, [r0]
   1d2d0:	cmp	r0, #45	; 0x2d
   1d2d4:	beq	1d308 <main@@Base+0x19ec>
   1d2d8:	ldr	r0, [pc, #940]	; 1d68c <main@@Base+0x1d70>
   1d2dc:	ldr	r0, [pc, r0]
   1d2e0:	ldr	r1, [fp, #-16]
   1d2e4:	ldr	r2, [sp, #32]
   1d2e8:	add	r2, r2, #1
   1d2ec:	add	r1, r1, r2, lsl #2
   1d2f0:	ldr	r1, [r1]
   1d2f4:	str	r1, [r0]
   1d2f8:	ldr	r0, [sp, #32]
   1d2fc:	add	r0, r0, #1
   1d300:	str	r0, [sp, #32]
   1d304:	b	1d468 <main@@Base+0x1b4c>
   1d308:	ldr	r0, [fp, #-16]
   1d30c:	ldr	r1, [sp, #32]
   1d310:	add	r0, r0, r1, lsl #2
   1d314:	ldr	r0, [r0]
   1d318:	ldr	r1, [pc, #904]	; 1d6a8 <main@@Base+0x1d8c>
   1d31c:	add	r1, pc, r1
   1d320:	bl	125d4 <strcmp@plt>
   1d324:	cmp	r0, #0
   1d328:	beq	1d350 <main@@Base+0x1a34>
   1d32c:	ldr	r0, [fp, #-16]
   1d330:	ldr	r1, [sp, #32]
   1d334:	add	r0, r0, r1, lsl #2
   1d338:	ldr	r0, [r0]
   1d33c:	ldr	r1, [pc, #872]	; 1d6ac <main@@Base+0x1d90>
   1d340:	add	r1, pc, r1
   1d344:	bl	125d4 <strcmp@plt>
   1d348:	cmp	r0, #0
   1d34c:	bne	1d3b4 <main@@Base+0x1a98>
   1d350:	ldr	r0, [sp, #32]
   1d354:	add	r0, r0, #1
   1d358:	ldr	r1, [fp, #-12]
   1d35c:	cmp	r0, r1
   1d360:	bge	1d3b4 <main@@Base+0x1a98>
   1d364:	ldr	r0, [fp, #-16]
   1d368:	ldr	r1, [sp, #32]
   1d36c:	add	r1, r1, #1
   1d370:	add	r0, r0, r1, lsl #2
   1d374:	ldr	r0, [r0]
   1d378:	ldrb	r0, [r0]
   1d37c:	cmp	r0, #45	; 0x2d
   1d380:	beq	1d3b4 <main@@Base+0x1a98>
   1d384:	ldr	r0, [pc, #764]	; 1d688 <main@@Base+0x1d6c>
   1d388:	ldr	r0, [pc, r0]
   1d38c:	ldr	r1, [fp, #-16]
   1d390:	ldr	r2, [sp, #32]
   1d394:	add	r2, r2, #1
   1d398:	add	r1, r1, r2, lsl #2
   1d39c:	ldr	r1, [r1]
   1d3a0:	str	r1, [r0]
   1d3a4:	ldr	r0, [sp, #32]
   1d3a8:	add	r0, r0, #1
   1d3ac:	str	r0, [sp, #32]
   1d3b0:	b	1d464 <main@@Base+0x1b48>
   1d3b4:	ldr	r0, [fp, #-16]
   1d3b8:	ldr	r1, [sp, #32]
   1d3bc:	add	r0, r0, r1, lsl #2
   1d3c0:	ldr	r0, [r0]
   1d3c4:	ldr	r1, [pc, #740]	; 1d6b0 <main@@Base+0x1d94>
   1d3c8:	add	r1, pc, r1
   1d3cc:	bl	125d4 <strcmp@plt>
   1d3d0:	cmp	r0, #0
   1d3d4:	bne	1d3e4 <main@@Base+0x1ac8>
   1d3d8:	movw	r0, #0
   1d3dc:	str	r0, [fp, #-20]	; 0xffffffec
   1d3e0:	b	1d460 <main@@Base+0x1b44>
   1d3e4:	ldr	r0, [sp, #32]
   1d3e8:	ldr	r1, [fp, #-12]
   1d3ec:	sub	r1, r1, #1
   1d3f0:	cmp	r0, r1
   1d3f4:	bne	1d434 <main@@Base+0x1b18>
   1d3f8:	ldr	r0, [fp, #-16]
   1d3fc:	ldr	r1, [sp, #32]
   1d400:	add	r0, r0, r1, lsl #2
   1d404:	ldr	r0, [r0]
   1d408:	ldrb	r0, [r0]
   1d40c:	cmp	r0, #45	; 0x2d
   1d410:	beq	1d434 <main@@Base+0x1b18>
   1d414:	ldr	r0, [pc, #616]	; 1d684 <main@@Base+0x1d68>
   1d418:	ldr	r0, [pc, r0]
   1d41c:	ldr	r1, [fp, #-16]
   1d420:	ldr	r2, [sp, #32]
   1d424:	add	r1, r1, r2, lsl #2
   1d428:	ldr	r1, [r1]
   1d42c:	str	r1, [r0]
   1d430:	b	1d45c <main@@Base+0x1b40>
   1d434:	ldr	r0, [pc, #576]	; 1d67c <main@@Base+0x1d60>
   1d438:	add	r1, pc, r0
   1d43c:	ldr	r0, [pc, #572]	; 1d680 <main@@Base+0x1d64>
   1d440:	ldr	r0, [pc, r0]
   1d444:	ldr	r0, [r0]
   1d448:	bl	12814 <fprintf@plt>
   1d44c:	str	r0, [sp, #28]
   1d450:	bl	1dd14 <main@@Base+0x23f8>
   1d454:	movw	r0, #1
   1d458:	bl	127cc <exit@plt>
   1d45c:	b	1d460 <main@@Base+0x1b44>
   1d460:	b	1d464 <main@@Base+0x1b48>
   1d464:	b	1d468 <main@@Base+0x1b4c>
   1d468:	b	1d46c <main@@Base+0x1b50>
   1d46c:	b	1d470 <main@@Base+0x1b54>
   1d470:	b	1d474 <main@@Base+0x1b58>
   1d474:	ldr	r0, [sp, #32]
   1d478:	add	r0, r0, #1
   1d47c:	str	r0, [sp, #32]
   1d480:	b	1d1a4 <main@@Base+0x1888>
   1d484:	ldr	r0, [pc, #436]	; 1d640 <main@@Base+0x1d24>
   1d488:	ldr	r0, [pc, r0]
   1d48c:	ldr	r0, [r0]
   1d490:	movw	r1, #0
   1d494:	cmp	r0, r1
   1d498:	beq	1d4b4 <main@@Base+0x1b98>
   1d49c:	ldr	r0, [pc, #416]	; 1d644 <main@@Base+0x1d28>
   1d4a0:	ldr	r0, [pc, r0]
   1d4a4:	ldr	r0, [r0]
   1d4a8:	ldrb	r0, [r0]
   1d4ac:	cmp	r0, #0
   1d4b0:	bne	1d4dc <main@@Base+0x1bc0>
   1d4b4:	ldr	r0, [pc, #440]	; 1d674 <main@@Base+0x1d58>
   1d4b8:	add	r1, pc, r0
   1d4bc:	ldr	r0, [pc, #436]	; 1d678 <main@@Base+0x1d5c>
   1d4c0:	ldr	r0, [pc, r0]
   1d4c4:	ldr	r0, [r0]
   1d4c8:	bl	12814 <fprintf@plt>
   1d4cc:	str	r0, [sp, #24]
   1d4d0:	bl	1dd14 <main@@Base+0x23f8>
   1d4d4:	movw	r0, #1
   1d4d8:	bl	127cc <exit@plt>
   1d4dc:	bl	12838 <coda_init@plt>
   1d4e0:	cmp	r0, #0
   1d4e4:	beq	1d530 <main@@Base+0x1c14>
   1d4e8:	ldr	r0, [pc, #384]	; 1d670 <main@@Base+0x1d54>
   1d4ec:	ldr	r0, [pc, r0]
   1d4f0:	ldr	r0, [r0]
   1d4f4:	str	r0, [sp, #20]
   1d4f8:	bl	129ac <coda_get_errno@plt>
   1d4fc:	ldr	r0, [r0]
   1d500:	bl	12964 <coda_errno_to_string@plt>
   1d504:	ldr	r1, [pc, #352]	; 1d66c <main@@Base+0x1d50>
   1d508:	add	r1, pc, r1
   1d50c:	ldr	r2, [sp, #20]
   1d510:	str	r0, [sp, #16]
   1d514:	mov	r0, r2
   1d518:	ldr	r2, [sp, #16]
   1d51c:	bl	12814 <fprintf@plt>
   1d520:	movw	r1, #1
   1d524:	str	r0, [sp, #12]
   1d528:	mov	r0, r1
   1d52c:	bl	127cc <exit@plt>
   1d530:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d534:	cmp	r0, #0
   1d538:	movw	r0, #0
   1d53c:	movne	r0, #1
   1d540:	mvn	r1, #0
   1d544:	eor	r0, r0, r1
   1d548:	and	r0, r0, #1
   1d54c:	bl	12688 <coda_set_option_bypass_special_types@plt>
   1d550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d554:	str	r0, [sp, #8]
   1d558:	mov	r0, r1
   1d55c:	bl	12844 <coda_set_option_perform_conversions@plt>
   1d560:	ldr	r1, [pc, #224]	; 1d648 <main@@Base+0x1d2c>
   1d564:	ldr	r1, [pc, r1]
   1d568:	ldr	r1, [r1]
   1d56c:	movw	r2, #0
   1d570:	cmp	r1, r2
   1d574:	beq	1d5f0 <main@@Base+0x1cd4>
   1d578:	ldr	r0, [pc, #208]	; 1d650 <main@@Base+0x1d34>
   1d57c:	add	r1, pc, r0
   1d580:	ldr	r0, [pc, #204]	; 1d654 <main@@Base+0x1d38>
   1d584:	ldr	r0, [pc, r0]
   1d588:	ldr	r0, [r0]
   1d58c:	bl	12604 <fopen@plt>
   1d590:	ldr	r1, [pc, #180]	; 1d64c <main@@Base+0x1d30>
   1d594:	ldr	r1, [pc, r1]
   1d598:	str	r0, [r1]
   1d59c:	ldr	r0, [r1]
   1d5a0:	movw	r1, #0
   1d5a4:	cmp	r0, r1
   1d5a8:	bne	1d5ec <main@@Base+0x1cd0>
   1d5ac:	ldr	r0, [pc, #172]	; 1d660 <main@@Base+0x1d44>
   1d5b0:	add	r1, pc, r0
   1d5b4:	ldr	r0, [pc, #168]	; 1d664 <main@@Base+0x1d48>
   1d5b8:	ldr	r0, [pc, r0]
   1d5bc:	ldr	r2, [pc, #164]	; 1d668 <main@@Base+0x1d4c>
   1d5c0:	ldr	r2, [pc, r2]
   1d5c4:	ldr	r2, [r2]
   1d5c8:	ldr	r0, [r0]
   1d5cc:	str	r0, [sp, #4]
   1d5d0:	mov	r0, r2
   1d5d4:	ldr	r2, [sp, #4]
   1d5d8:	bl	12814 <fprintf@plt>
   1d5dc:	movw	r1, #1
   1d5e0:	str	r0, [sp]
   1d5e4:	mov	r0, r1
   1d5e8:	bl	127cc <exit@plt>
   1d5ec:	b	1d5f0 <main@@Base+0x1cd4>
   1d5f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d5f4:	bl	1a73c <print_yaml_data@@Base>
   1d5f8:	ldr	r0, [pc, #88]	; 1d658 <main@@Base+0x1d3c>
   1d5fc:	ldr	r0, [pc, r0]
   1d600:	ldr	r0, [r0]
   1d604:	movw	r1, #0
   1d608:	cmp	r0, r1
   1d60c:	beq	1d620 <main@@Base+0x1d04>
   1d610:	ldr	r0, [pc, #68]	; 1d65c <main@@Base+0x1d40>
   1d614:	ldr	r0, [pc, r0]
   1d618:	ldr	r0, [r0]
   1d61c:	bl	128b0 <fclose@plt>
   1d620:	bl	1276c <coda_done@plt>
   1d624:	sub	sp, fp, #8
   1d628:	pop	{r4, sl, fp, pc}
   1d62c:	andeq	r4, r1, ip, rrx
   1d630:	muleq	r1, r0, r0
   1d634:	andeq	r4, r1, r4, lsl #1
   1d638:	andeq	r4, r1, r0, lsr r0
   1d63c:	andeq	r4, r1, r0, asr #32
   1d640:	andeq	r3, r1, r4, lsr #26
   1d644:	andeq	r3, r1, ip, lsl #26
   1d648:	andeq	r3, r1, r0, lsr ip
   1d64c:	andeq	r3, r1, r4, lsr #24
   1d650:	andeq	r2, r0, r5, asr #31
   1d654:	andeq	r3, r1, r0, lsl ip
   1d658:	muleq	r1, r8, fp
   1d65c:	andeq	r3, r1, r4, lsr #23
   1d660:	muleq	r0, r3, pc	; <UNPREDICTABLE>
   1d664:	ldrdeq	r3, [r1], -ip
   1d668:	strdeq	r3, [r1], -r0
   1d66c:	andeq	r1, r0, sl, lsl #30
   1d670:	andeq	r3, r1, r4, asr #25
   1d674:			; <UNDEFINED> instruction: 0x00001fb4
   1d678:	strdeq	r3, [r1], -r0
   1d67c:	andeq	r2, r0, r4, lsr r0
   1d680:	andeq	r3, r1, r0, ror sp
   1d684:	muleq	r1, r4, sp
   1d688:	andeq	r3, r1, r8, asr lr
   1d68c:			; <UNDEFINED> instruction: 0x00013eb8
   1d690:	andeq	r3, r0, r5, lsr #7
   1d694:	andeq	r3, r0, r4, lsl #7
   1d698:	andeq	r3, r0, r9, lsr r2
   1d69c:	andeq	r3, r0, r8, lsl r2
   1d6a0:	andeq	r3, r0, fp, lsl #5
   1d6a4:	andeq	r3, r0, sl, ror #4
   1d6a8:	andeq	r3, r0, r1, ror #4
   1d6ac:	andeq	r3, r0, r0, asr #4
   1d6b0:	andeq	r3, r0, sl, lsl #2
   1d6b4:	push	{r4, sl, fp, lr}
   1d6b8:	add	fp, sp, #8
   1d6bc:	sub	sp, sp, #64	; 0x40
   1d6c0:	ldr	r2, [pc, #1476]	; 1dc8c <main@@Base+0x2370>
   1d6c4:	ldr	r2, [pc, r2]
   1d6c8:	ldr	r3, [pc, #1472]	; 1dc90 <main@@Base+0x2374>
   1d6cc:	ldr	r3, [pc, r3]
   1d6d0:	ldr	ip, [pc, #1468]	; 1dc94 <main@@Base+0x2378>
   1d6d4:	ldr	ip, [pc, ip]
   1d6d8:	ldr	lr, [pc, #1464]	; 1dc98 <main@@Base+0x237c>
   1d6dc:	ldr	lr, [pc, lr]
   1d6e0:	ldr	r4, [pc, #1460]	; 1dc9c <main@@Base+0x2380>
   1d6e4:	ldr	r4, [pc, r4]
   1d6e8:	str	r0, [fp, #-12]
   1d6ec:	str	r1, [fp, #-16]
   1d6f0:	movw	r0, #0
   1d6f4:	str	r0, [fp, #-20]	; 0xffffffec
   1d6f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1d6fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1d700:	str	r0, [r4]
   1d704:	str	r0, [lr]
   1d708:	str	r0, [ip]
   1d70c:	ldr	r1, [r3]
   1d710:	str	r1, [r2]
   1d714:	movw	r1, #1
   1d718:	str	r1, [fp, #-32]	; 0xffffffe0
   1d71c:	str	r0, [sp, #36]	; 0x24
   1d720:	ldr	r0, [sp, #36]	; 0x24
   1d724:	ldr	r1, [fp, #-12]
   1d728:	cmp	r0, r1
   1d72c:	bge	1daf4 <main@@Base+0x21d8>
   1d730:	ldr	r0, [fp, #-16]
   1d734:	ldr	r1, [sp, #36]	; 0x24
   1d738:	add	r0, r0, r1, lsl #2
   1d73c:	ldr	r0, [r0]
   1d740:	ldr	r1, [pc, #1452]	; 1dcf4 <main@@Base+0x23d8>
   1d744:	add	r1, pc, r1
   1d748:	bl	125d4 <strcmp@plt>
   1d74c:	cmp	r0, #0
   1d750:	beq	1d778 <main@@Base+0x1e5c>
   1d754:	ldr	r0, [fp, #-16]
   1d758:	ldr	r1, [sp, #36]	; 0x24
   1d75c:	add	r0, r0, r1, lsl #2
   1d760:	ldr	r0, [r0]
   1d764:	ldr	r1, [pc, #1420]	; 1dcf8 <main@@Base+0x23dc>
   1d768:	add	r1, pc, r1
   1d76c:	bl	125d4 <strcmp@plt>
   1d770:	cmp	r0, #0
   1d774:	bne	1d784 <main@@Base+0x1e68>
   1d778:	movw	r0, #0
   1d77c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d780:	b	1dae0 <main@@Base+0x21c4>
   1d784:	ldr	r0, [fp, #-16]
   1d788:	ldr	r1, [sp, #36]	; 0x24
   1d78c:	add	r0, r0, r1, lsl #2
   1d790:	ldr	r0, [r0]
   1d794:	ldr	r1, [pc, #1376]	; 1dcfc <main@@Base+0x23e0>
   1d798:	add	r1, pc, r1
   1d79c:	bl	125d4 <strcmp@plt>
   1d7a0:	cmp	r0, #0
   1d7a4:	beq	1d7cc <main@@Base+0x1eb0>
   1d7a8:	ldr	r0, [fp, #-16]
   1d7ac:	ldr	r1, [sp, #36]	; 0x24
   1d7b0:	add	r0, r0, r1, lsl #2
   1d7b4:	ldr	r0, [r0]
   1d7b8:	ldr	r1, [pc, #1344]	; 1dd00 <main@@Base+0x23e4>
   1d7bc:	add	r1, pc, r1
   1d7c0:	bl	125d4 <strcmp@plt>
   1d7c4:	cmp	r0, #0
   1d7c8:	bne	1d830 <main@@Base+0x1f14>
   1d7cc:	ldr	r0, [sp, #36]	; 0x24
   1d7d0:	add	r0, r0, #1
   1d7d4:	ldr	r1, [fp, #-12]
   1d7d8:	cmp	r0, r1
   1d7dc:	bge	1d830 <main@@Base+0x1f14>
   1d7e0:	ldr	r0, [fp, #-16]
   1d7e4:	ldr	r1, [sp, #36]	; 0x24
   1d7e8:	add	r1, r1, #1
   1d7ec:	add	r0, r0, r1, lsl #2
   1d7f0:	ldr	r0, [r0]
   1d7f4:	ldrb	r0, [r0]
   1d7f8:	cmp	r0, #45	; 0x2d
   1d7fc:	beq	1d830 <main@@Base+0x1f14>
   1d800:	ldr	r0, [pc, #1256]	; 1dcf0 <main@@Base+0x23d4>
   1d804:	ldr	r0, [pc, r0]
   1d808:	ldr	r1, [fp, #-16]
   1d80c:	ldr	r2, [sp, #36]	; 0x24
   1d810:	add	r2, r2, #1
   1d814:	add	r1, r1, r2, lsl #2
   1d818:	ldr	r1, [r1]
   1d81c:	str	r1, [r0]
   1d820:	ldr	r0, [sp, #36]	; 0x24
   1d824:	add	r0, r0, #1
   1d828:	str	r0, [sp, #36]	; 0x24
   1d82c:	b	1dadc <main@@Base+0x21c0>
   1d830:	ldr	r0, [fp, #-16]
   1d834:	ldr	r1, [sp, #36]	; 0x24
   1d838:	add	r0, r0, r1, lsl #2
   1d83c:	ldr	r0, [r0]
   1d840:	ldr	r1, [pc, #1212]	; 1dd04 <main@@Base+0x23e8>
   1d844:	add	r1, pc, r1
   1d848:	bl	125d4 <strcmp@plt>
   1d84c:	cmp	r0, #0
   1d850:	beq	1d878 <main@@Base+0x1f5c>
   1d854:	ldr	r0, [fp, #-16]
   1d858:	ldr	r1, [sp, #36]	; 0x24
   1d85c:	add	r0, r0, r1, lsl #2
   1d860:	ldr	r0, [r0]
   1d864:	ldr	r1, [pc, #1180]	; 1dd08 <main@@Base+0x23ec>
   1d868:	add	r1, pc, r1
   1d86c:	bl	125d4 <strcmp@plt>
   1d870:	cmp	r0, #0
   1d874:	bne	1d8dc <main@@Base+0x1fc0>
   1d878:	ldr	r0, [sp, #36]	; 0x24
   1d87c:	add	r0, r0, #1
   1d880:	ldr	r1, [fp, #-12]
   1d884:	cmp	r0, r1
   1d888:	bge	1d8dc <main@@Base+0x1fc0>
   1d88c:	ldr	r0, [fp, #-16]
   1d890:	ldr	r1, [sp, #36]	; 0x24
   1d894:	add	r1, r1, #1
   1d898:	add	r0, r0, r1, lsl #2
   1d89c:	ldr	r0, [r0]
   1d8a0:	ldrb	r0, [r0]
   1d8a4:	cmp	r0, #45	; 0x2d
   1d8a8:	beq	1d8dc <main@@Base+0x1fc0>
   1d8ac:	ldr	r0, [pc, #1080]	; 1dcec <main@@Base+0x23d0>
   1d8b0:	ldr	r0, [pc, r0]
   1d8b4:	ldr	r1, [fp, #-16]
   1d8b8:	ldr	r2, [sp, #36]	; 0x24
   1d8bc:	add	r2, r2, #1
   1d8c0:	add	r1, r1, r2, lsl #2
   1d8c4:	ldr	r1, [r1]
   1d8c8:	str	r1, [r0]
   1d8cc:	ldr	r0, [sp, #36]	; 0x24
   1d8d0:	add	r0, r0, #1
   1d8d4:	str	r0, [sp, #36]	; 0x24
   1d8d8:	b	1dad8 <main@@Base+0x21bc>
   1d8dc:	ldr	r0, [fp, #-16]
   1d8e0:	ldr	r1, [sp, #36]	; 0x24
   1d8e4:	add	r0, r0, r1, lsl #2
   1d8e8:	ldr	r0, [r0]
   1d8ec:	ldr	r1, [pc, #1048]	; 1dd0c <main@@Base+0x23f0>
   1d8f0:	add	r1, pc, r1
   1d8f4:	bl	125d4 <strcmp@plt>
   1d8f8:	cmp	r0, #0
   1d8fc:	bne	1d968 <main@@Base+0x204c>
   1d900:	ldr	r0, [sp, #36]	; 0x24
   1d904:	add	r0, r0, #1
   1d908:	ldr	r1, [fp, #-12]
   1d90c:	cmp	r0, r1
   1d910:	bge	1d968 <main@@Base+0x204c>
   1d914:	ldr	r0, [fp, #-16]
   1d918:	ldr	r1, [sp, #36]	; 0x24
   1d91c:	add	r1, r1, #1
   1d920:	add	r0, r0, r1, lsl #2
   1d924:	ldr	r0, [r0]
   1d928:	ldrb	r0, [r0]
   1d92c:	cmp	r0, #45	; 0x2d
   1d930:	beq	1d968 <main@@Base+0x204c>
   1d934:	ldr	r0, [fp, #-16]
   1d938:	ldr	r1, [sp, #36]	; 0x24
   1d93c:	add	r1, r1, #1
   1d940:	add	r0, r0, r1, lsl #2
   1d944:	ldr	r0, [r0]
   1d948:	bl	12958 <atoi@plt>
   1d94c:	ldr	r1, [pc, #916]	; 1dce8 <main@@Base+0x23cc>
   1d950:	ldr	r1, [pc, r1]
   1d954:	str	r0, [r1]
   1d958:	ldr	r0, [sp, #36]	; 0x24
   1d95c:	add	r0, r0, #1
   1d960:	str	r0, [sp, #36]	; 0x24
   1d964:	b	1dad4 <main@@Base+0x21b8>
   1d968:	ldr	r0, [fp, #-16]
   1d96c:	ldr	r1, [sp, #36]	; 0x24
   1d970:	add	r0, r0, r1, lsl #2
   1d974:	ldr	r0, [r0]
   1d978:	ldr	r1, [pc, #912]	; 1dd10 <main@@Base+0x23f4>
   1d97c:	add	r1, pc, r1
   1d980:	bl	125d4 <strcmp@plt>
   1d984:	cmp	r0, #0
   1d988:	bne	1da54 <main@@Base+0x2138>
   1d98c:	ldr	r0, [sp, #36]	; 0x24
   1d990:	add	r0, r0, #3
   1d994:	ldr	r1, [fp, #-12]
   1d998:	cmp	r0, r1
   1d99c:	bge	1da54 <main@@Base+0x2138>
   1d9a0:	ldr	r0, [fp, #-16]
   1d9a4:	ldr	r1, [sp, #36]	; 0x24
   1d9a8:	add	r1, r1, #1
   1d9ac:	add	r0, r0, r1, lsl #2
   1d9b0:	ldr	r0, [r0]
   1d9b4:	ldrb	r0, [r0]
   1d9b8:	cmp	r0, #45	; 0x2d
   1d9bc:	beq	1da54 <main@@Base+0x2138>
   1d9c0:	ldr	r0, [fp, #-16]
   1d9c4:	ldr	r1, [sp, #36]	; 0x24
   1d9c8:	add	r1, r1, #2
   1d9cc:	add	r0, r0, r1, lsl #2
   1d9d0:	ldr	r0, [r0]
   1d9d4:	ldrb	r0, [r0]
   1d9d8:	cmp	r0, #45	; 0x2d
   1d9dc:	beq	1da54 <main@@Base+0x2138>
   1d9e0:	ldr	r0, [fp, #-16]
   1d9e4:	ldr	r1, [sp, #36]	; 0x24
   1d9e8:	add	r1, r1, #3
   1d9ec:	add	r0, r0, r1, lsl #2
   1d9f0:	ldr	r0, [r0]
   1d9f4:	ldrb	r0, [r0]
   1d9f8:	cmp	r0, #45	; 0x2d
   1d9fc:	beq	1da54 <main@@Base+0x2138>
   1da00:	ldr	r0, [fp, #-16]
   1da04:	ldr	r1, [sp, #36]	; 0x24
   1da08:	add	r0, r0, r1, lsl #2
   1da0c:	ldr	r0, [r0, #4]
   1da10:	str	r0, [fp, #-20]	; 0xffffffec
   1da14:	ldr	r0, [fp, #-16]
   1da18:	ldr	r1, [sp, #36]	; 0x24
   1da1c:	add	r0, r0, r1, lsl #2
   1da20:	ldr	r0, [r0, #8]
   1da24:	str	r0, [fp, #-24]	; 0xffffffe8
   1da28:	ldr	r0, [fp, #-16]
   1da2c:	ldr	r1, [sp, #36]	; 0x24
   1da30:	add	r1, r1, #3
   1da34:	add	r0, r0, r1, lsl #2
   1da38:	ldr	r0, [r0]
   1da3c:	bl	12958 <atoi@plt>
   1da40:	str	r0, [fp, #-28]	; 0xffffffe4
   1da44:	ldr	r0, [sp, #36]	; 0x24
   1da48:	add	r0, r0, #3
   1da4c:	str	r0, [sp, #36]	; 0x24
   1da50:	b	1dad0 <main@@Base+0x21b4>
   1da54:	ldr	r0, [sp, #36]	; 0x24
   1da58:	ldr	r1, [fp, #-12]
   1da5c:	sub	r1, r1, #1
   1da60:	cmp	r0, r1
   1da64:	bne	1daa4 <main@@Base+0x2188>
   1da68:	ldr	r0, [fp, #-16]
   1da6c:	ldr	r1, [sp, #36]	; 0x24
   1da70:	add	r0, r0, r1, lsl #2
   1da74:	ldr	r0, [r0]
   1da78:	ldrb	r0, [r0]
   1da7c:	cmp	r0, #45	; 0x2d
   1da80:	beq	1daa4 <main@@Base+0x2188>
   1da84:	ldr	r0, [pc, #600]	; 1dce4 <main@@Base+0x23c8>
   1da88:	ldr	r0, [pc, r0]
   1da8c:	ldr	r1, [fp, #-16]
   1da90:	ldr	r2, [sp, #36]	; 0x24
   1da94:	add	r1, r1, r2, lsl #2
   1da98:	ldr	r1, [r1]
   1da9c:	str	r1, [r0]
   1daa0:	b	1dacc <main@@Base+0x21b0>
   1daa4:	ldr	r0, [pc, #560]	; 1dcdc <main@@Base+0x23c0>
   1daa8:	add	r1, pc, r0
   1daac:	ldr	r0, [pc, #556]	; 1dce0 <main@@Base+0x23c4>
   1dab0:	ldr	r0, [pc, r0]
   1dab4:	ldr	r0, [r0]
   1dab8:	bl	12814 <fprintf@plt>
   1dabc:	str	r0, [sp, #32]
   1dac0:	bl	1dd14 <main@@Base+0x23f8>
   1dac4:	movw	r0, #1
   1dac8:	bl	127cc <exit@plt>
   1dacc:	b	1dad0 <main@@Base+0x21b4>
   1dad0:	b	1dad4 <main@@Base+0x21b8>
   1dad4:	b	1dad8 <main@@Base+0x21bc>
   1dad8:	b	1dadc <main@@Base+0x21c0>
   1dadc:	b	1dae0 <main@@Base+0x21c4>
   1dae0:	b	1dae4 <main@@Base+0x21c8>
   1dae4:	ldr	r0, [sp, #36]	; 0x24
   1dae8:	add	r0, r0, #1
   1daec:	str	r0, [sp, #36]	; 0x24
   1daf0:	b	1d720 <main@@Base+0x1e04>
   1daf4:	ldr	r0, [pc, #420]	; 1dca0 <main@@Base+0x2384>
   1daf8:	ldr	r0, [pc, r0]
   1dafc:	ldr	r0, [r0]
   1db00:	movw	r1, #0
   1db04:	cmp	r0, r1
   1db08:	beq	1db24 <main@@Base+0x2208>
   1db0c:	ldr	r0, [pc, #400]	; 1dca4 <main@@Base+0x2388>
   1db10:	ldr	r0, [pc, r0]
   1db14:	ldr	r0, [r0]
   1db18:	ldrb	r0, [r0]
   1db1c:	cmp	r0, #0
   1db20:	bne	1db4c <main@@Base+0x2230>
   1db24:	ldr	r0, [pc, #424]	; 1dcd4 <main@@Base+0x23b8>
   1db28:	add	r1, pc, r0
   1db2c:	ldr	r0, [pc, #420]	; 1dcd8 <main@@Base+0x23bc>
   1db30:	ldr	r0, [pc, r0]
   1db34:	ldr	r0, [r0]
   1db38:	bl	12814 <fprintf@plt>
   1db3c:	str	r0, [sp, #28]
   1db40:	bl	1dd14 <main@@Base+0x23f8>
   1db44:	movw	r0, #1
   1db48:	bl	127cc <exit@plt>
   1db4c:	bl	12838 <coda_init@plt>
   1db50:	cmp	r0, #0
   1db54:	beq	1dba0 <main@@Base+0x2284>
   1db58:	ldr	r0, [pc, #368]	; 1dcd0 <main@@Base+0x23b4>
   1db5c:	ldr	r0, [pc, r0]
   1db60:	ldr	r0, [r0]
   1db64:	str	r0, [sp, #24]
   1db68:	bl	129ac <coda_get_errno@plt>
   1db6c:	ldr	r0, [r0]
   1db70:	bl	12964 <coda_errno_to_string@plt>
   1db74:	ldr	r1, [pc, #336]	; 1dccc <main@@Base+0x23b0>
   1db78:	add	r1, pc, r1
   1db7c:	ldr	r2, [sp, #24]
   1db80:	str	r0, [sp, #20]
   1db84:	mov	r0, r2
   1db88:	ldr	r2, [sp, #20]
   1db8c:	bl	12814 <fprintf@plt>
   1db90:	movw	r1, #1
   1db94:	str	r0, [sp, #16]
   1db98:	mov	r0, r1
   1db9c:	bl	127cc <exit@plt>
   1dba0:	movw	r0, #0
   1dba4:	bl	12844 <coda_set_option_perform_conversions@plt>
   1dba8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1dbac:	str	r0, [sp, #12]
   1dbb0:	mov	r0, r1
   1dbb4:	bl	125a4 <coda_set_option_use_fast_size_expressions@plt>
   1dbb8:	ldr	r1, [pc, #232]	; 1dca8 <main@@Base+0x238c>
   1dbbc:	ldr	r1, [pc, r1]
   1dbc0:	ldr	r1, [r1]
   1dbc4:	movw	r2, #0
   1dbc8:	cmp	r1, r2
   1dbcc:	beq	1dc48 <main@@Base+0x232c>
   1dbd0:	ldr	r0, [pc, #216]	; 1dcb0 <main@@Base+0x2394>
   1dbd4:	add	r1, pc, r0
   1dbd8:	ldr	r0, [pc, #212]	; 1dcb4 <main@@Base+0x2398>
   1dbdc:	ldr	r0, [pc, r0]
   1dbe0:	ldr	r0, [r0]
   1dbe4:	bl	12604 <fopen@plt>
   1dbe8:	ldr	r1, [pc, #188]	; 1dcac <main@@Base+0x2390>
   1dbec:	ldr	r1, [pc, r1]
   1dbf0:	str	r0, [r1]
   1dbf4:	ldr	r0, [r1]
   1dbf8:	movw	r1, #0
   1dbfc:	cmp	r0, r1
   1dc00:	bne	1dc44 <main@@Base+0x2328>
   1dc04:	ldr	r0, [pc, #180]	; 1dcc0 <main@@Base+0x23a4>
   1dc08:	add	r1, pc, r0
   1dc0c:	ldr	r0, [pc, #176]	; 1dcc4 <main@@Base+0x23a8>
   1dc10:	ldr	r0, [pc, r0]
   1dc14:	ldr	r2, [pc, #172]	; 1dcc8 <main@@Base+0x23ac>
   1dc18:	ldr	r2, [pc, r2]
   1dc1c:	ldr	r2, [r2]
   1dc20:	ldr	r0, [r0]
   1dc24:	str	r0, [sp, #8]
   1dc28:	mov	r0, r2
   1dc2c:	ldr	r2, [sp, #8]
   1dc30:	bl	12814 <fprintf@plt>
   1dc34:	movw	r1, #1
   1dc38:	str	r0, [sp, #4]
   1dc3c:	mov	r0, r1
   1dc40:	bl	127cc <exit@plt>
   1dc44:	b	1dc48 <main@@Base+0x232c>
   1dc48:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dc4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dc54:	bl	13d90 <print_debug_data@@Base>
   1dc58:	ldr	r0, [pc, #88]	; 1dcb8 <main@@Base+0x239c>
   1dc5c:	ldr	r0, [pc, r0]
   1dc60:	ldr	r0, [r0]
   1dc64:	movw	r1, #0
   1dc68:	cmp	r0, r1
   1dc6c:	beq	1dc80 <main@@Base+0x2364>
   1dc70:	ldr	r0, [pc, #68]	; 1dcbc <main@@Base+0x23a0>
   1dc74:	ldr	r0, [pc, r0]
   1dc78:	ldr	r0, [r0]
   1dc7c:	bl	128b0 <fclose@plt>
   1dc80:	bl	1276c <coda_done@plt>
   1dc84:	sub	sp, fp, #8
   1dc88:	pop	{r4, sl, fp, pc}
   1dc8c:	strdeq	r3, [r1], -r4
   1dc90:	andeq	r3, r1, r8, lsl fp
   1dc94:	andeq	r3, r1, ip, lsl #22
   1dc98:			; <UNDEFINED> instruction: 0x00013ab8
   1dc9c:	andeq	r3, r1, r8, asr #21
   1dca0:			; <UNDEFINED> instruction: 0x000136b4
   1dca4:	muleq	r1, ip, r6
   1dca8:	ldrdeq	r3, [r1], -r8
   1dcac:	andeq	r3, r1, ip, asr #11
   1dcb0:	andeq	r2, r0, sp, ror #18
   1dcb4:			; <UNDEFINED> instruction: 0x000135b8
   1dcb8:	andeq	r3, r1, r8, lsr r5
   1dcbc:	andeq	r3, r1, r4, asr #10
   1dcc0:	andeq	r2, r0, fp, lsr r9
   1dcc4:	andeq	r3, r1, r4, lsl #11
   1dcc8:	muleq	r1, r8, r5
   1dccc:	muleq	r0, sl, r8
   1dcd0:	andeq	r3, r1, r4, asr r6
   1dcd4:	andeq	r1, r0, r4, asr #18
   1dcd8:	andeq	r3, r1, r0, lsl #13
   1dcdc:	andeq	r1, r0, r4, asr #19
   1dce0:	andeq	r3, r1, r0, lsl #14
   1dce4:	andeq	r3, r1, r4, lsr #14
   1dce8:	muleq	r1, ip, r8
   1dcec:	andeq	r3, r1, r0, lsr r9
   1dcf0:	muleq	r1, r0, r9
   1dcf4:	andeq	r2, r0, r1, lsl sp
   1dcf8:	andeq	r2, r0, pc, lsl lr
   1dcfc:	andeq	r2, r0, r3, ror #26
   1dd00:	andeq	r2, r0, r2, asr #26
   1dd04:	andeq	r2, r0, r9, lsr sp
   1dd08:	andeq	r2, r0, r8, lsl sp
   1dd0c:			; <UNDEFINED> instruction: 0x00002cb7
   1dd10:	andeq	r2, r0, r7, lsr ip
   1dd14:	push	{fp, lr}
   1dd18:	mov	fp, sp
   1dd1c:	sub	sp, sp, #472	; 0x1d8
   1dd20:	ldr	r0, [pc, #2820]	; 1e82c <main@@Base+0x2f10>
   1dd24:	add	r0, pc, r0
   1dd28:	bl	125ec <printf@plt>
   1dd2c:	ldr	r1, [pc, #2804]	; 1e828 <main@@Base+0x2f0c>
   1dd30:	add	r1, pc, r1
   1dd34:	str	r0, [fp, #-4]
   1dd38:	mov	r0, r1
   1dd3c:	bl	125ec <printf@plt>
   1dd40:	ldr	r1, [pc, #2780]	; 1e824 <main@@Base+0x2f08>
   1dd44:	add	r1, pc, r1
   1dd48:	str	r0, [fp, #-8]
   1dd4c:	mov	r0, r1
   1dd50:	bl	125ec <printf@plt>
   1dd54:	ldr	r1, [pc, #2756]	; 1e820 <main@@Base+0x2f04>
   1dd58:	add	r1, pc, r1
   1dd5c:	str	r0, [fp, #-12]
   1dd60:	mov	r0, r1
   1dd64:	bl	125ec <printf@plt>
   1dd68:	ldr	r1, [pc, #2732]	; 1e81c <main@@Base+0x2f00>
   1dd6c:	add	r1, pc, r1
   1dd70:	str	r0, [fp, #-16]
   1dd74:	mov	r0, r1
   1dd78:	bl	125ec <printf@plt>
   1dd7c:	ldr	r1, [pc, #2708]	; 1e818 <main@@Base+0x2efc>
   1dd80:	add	r1, pc, r1
   1dd84:	str	r0, [fp, #-20]	; 0xffffffec
   1dd88:	mov	r0, r1
   1dd8c:	bl	125ec <printf@plt>
   1dd90:	ldr	r1, [pc, #2684]	; 1e814 <main@@Base+0x2ef8>
   1dd94:	add	r1, pc, r1
   1dd98:	str	r0, [fp, #-24]	; 0xffffffe8
   1dd9c:	mov	r0, r1
   1dda0:	bl	125ec <printf@plt>
   1dda4:	ldr	r1, [pc, #2660]	; 1e810 <main@@Base+0x2ef4>
   1dda8:	add	r1, pc, r1
   1ddac:	str	r0, [fp, #-28]	; 0xffffffe4
   1ddb0:	mov	r0, r1
   1ddb4:	bl	125ec <printf@plt>
   1ddb8:	ldr	r1, [pc, #2636]	; 1e80c <main@@Base+0x2ef0>
   1ddbc:	add	r1, pc, r1
   1ddc0:	str	r0, [fp, #-32]	; 0xffffffe0
   1ddc4:	mov	r0, r1
   1ddc8:	bl	125ec <printf@plt>
   1ddcc:	ldr	r1, [pc, #2612]	; 1e808 <main@@Base+0x2eec>
   1ddd0:	add	r1, pc, r1
   1ddd4:	str	r0, [fp, #-36]	; 0xffffffdc
   1ddd8:	mov	r0, r1
   1dddc:	bl	125ec <printf@plt>
   1dde0:	ldr	r1, [pc, #2588]	; 1e804 <main@@Base+0x2ee8>
   1dde4:	add	r1, pc, r1
   1dde8:	str	r0, [fp, #-40]	; 0xffffffd8
   1ddec:	mov	r0, r1
   1ddf0:	bl	125ec <printf@plt>
   1ddf4:	ldr	r1, [pc, #2564]	; 1e800 <main@@Base+0x2ee4>
   1ddf8:	add	r1, pc, r1
   1ddfc:	str	r0, [fp, #-44]	; 0xffffffd4
   1de00:	mov	r0, r1
   1de04:	bl	125ec <printf@plt>
   1de08:	ldr	r1, [pc, #2540]	; 1e7fc <main@@Base+0x2ee0>
   1de0c:	add	r1, pc, r1
   1de10:	str	r0, [fp, #-48]	; 0xffffffd0
   1de14:	mov	r0, r1
   1de18:	bl	125ec <printf@plt>
   1de1c:	ldr	r1, [pc, #2516]	; 1e7f8 <main@@Base+0x2edc>
   1de20:	add	r1, pc, r1
   1de24:	str	r0, [fp, #-52]	; 0xffffffcc
   1de28:	mov	r0, r1
   1de2c:	bl	125ec <printf@plt>
   1de30:	ldr	r1, [pc, #2492]	; 1e7f4 <main@@Base+0x2ed8>
   1de34:	add	r1, pc, r1
   1de38:	str	r0, [fp, #-56]	; 0xffffffc8
   1de3c:	mov	r0, r1
   1de40:	bl	125ec <printf@plt>
   1de44:	ldr	r1, [pc, #2468]	; 1e7f0 <main@@Base+0x2ed4>
   1de48:	add	r1, pc, r1
   1de4c:	str	r0, [fp, #-60]	; 0xffffffc4
   1de50:	mov	r0, r1
   1de54:	bl	125ec <printf@plt>
   1de58:	ldr	r1, [pc, #2444]	; 1e7ec <main@@Base+0x2ed0>
   1de5c:	add	r1, pc, r1
   1de60:	str	r0, [fp, #-64]	; 0xffffffc0
   1de64:	mov	r0, r1
   1de68:	bl	125ec <printf@plt>
   1de6c:	ldr	r1, [pc, #2420]	; 1e7e8 <main@@Base+0x2ecc>
   1de70:	add	r1, pc, r1
   1de74:	str	r0, [fp, #-68]	; 0xffffffbc
   1de78:	mov	r0, r1
   1de7c:	bl	125ec <printf@plt>
   1de80:	ldr	r1, [pc, #2396]	; 1e7e4 <main@@Base+0x2ec8>
   1de84:	add	r1, pc, r1
   1de88:	str	r0, [fp, #-72]	; 0xffffffb8
   1de8c:	mov	r0, r1
   1de90:	bl	125ec <printf@plt>
   1de94:	ldr	r1, [pc, #2372]	; 1e7e0 <main@@Base+0x2ec4>
   1de98:	add	r1, pc, r1
   1de9c:	str	r0, [fp, #-76]	; 0xffffffb4
   1dea0:	mov	r0, r1
   1dea4:	bl	125ec <printf@plt>
   1dea8:	ldr	r1, [pc, #2348]	; 1e7dc <main@@Base+0x2ec0>
   1deac:	add	r1, pc, r1
   1deb0:	str	r0, [fp, #-80]	; 0xffffffb0
   1deb4:	mov	r0, r1
   1deb8:	bl	125ec <printf@plt>
   1debc:	ldr	r1, [pc, #2324]	; 1e7d8 <main@@Base+0x2ebc>
   1dec0:	add	r1, pc, r1
   1dec4:	str	r0, [fp, #-84]	; 0xffffffac
   1dec8:	mov	r0, r1
   1decc:	bl	125ec <printf@plt>
   1ded0:	ldr	r1, [pc, #2300]	; 1e7d4 <main@@Base+0x2eb8>
   1ded4:	add	r1, pc, r1
   1ded8:	str	r0, [fp, #-88]	; 0xffffffa8
   1dedc:	mov	r0, r1
   1dee0:	bl	125ec <printf@plt>
   1dee4:	ldr	r1, [pc, #2276]	; 1e7d0 <main@@Base+0x2eb4>
   1dee8:	add	r1, pc, r1
   1deec:	str	r0, [fp, #-92]	; 0xffffffa4
   1def0:	mov	r0, r1
   1def4:	bl	125ec <printf@plt>
   1def8:	ldr	r1, [pc, #2252]	; 1e7cc <main@@Base+0x2eb0>
   1defc:	add	r1, pc, r1
   1df00:	str	r0, [fp, #-96]	; 0xffffffa0
   1df04:	mov	r0, r1
   1df08:	bl	125ec <printf@plt>
   1df0c:	ldr	r1, [pc, #2228]	; 1e7c8 <main@@Base+0x2eac>
   1df10:	add	r1, pc, r1
   1df14:	str	r0, [fp, #-100]	; 0xffffff9c
   1df18:	mov	r0, r1
   1df1c:	bl	125ec <printf@plt>
   1df20:	ldr	r1, [pc, #2204]	; 1e7c4 <main@@Base+0x2ea8>
   1df24:	add	r1, pc, r1
   1df28:	str	r0, [fp, #-104]	; 0xffffff98
   1df2c:	mov	r0, r1
   1df30:	bl	125ec <printf@plt>
   1df34:	ldr	r1, [pc, #2180]	; 1e7c0 <main@@Base+0x2ea4>
   1df38:	add	r1, pc, r1
   1df3c:	str	r0, [fp, #-108]	; 0xffffff94
   1df40:	mov	r0, r1
   1df44:	bl	125ec <printf@plt>
   1df48:	ldr	r1, [pc, #2156]	; 1e7bc <main@@Base+0x2ea0>
   1df4c:	add	r1, pc, r1
   1df50:	str	r0, [fp, #-112]	; 0xffffff90
   1df54:	mov	r0, r1
   1df58:	bl	125ec <printf@plt>
   1df5c:	ldr	r1, [pc, #2132]	; 1e7b8 <main@@Base+0x2e9c>
   1df60:	add	r1, pc, r1
   1df64:	str	r0, [fp, #-116]	; 0xffffff8c
   1df68:	mov	r0, r1
   1df6c:	bl	125ec <printf@plt>
   1df70:	ldr	r1, [pc, #2108]	; 1e7b4 <main@@Base+0x2e98>
   1df74:	add	r1, pc, r1
   1df78:	str	r0, [fp, #-120]	; 0xffffff88
   1df7c:	mov	r0, r1
   1df80:	bl	125ec <printf@plt>
   1df84:	ldr	r1, [pc, #2084]	; 1e7b0 <main@@Base+0x2e94>
   1df88:	add	r1, pc, r1
   1df8c:	str	r0, [fp, #-124]	; 0xffffff84
   1df90:	mov	r0, r1
   1df94:	bl	125ec <printf@plt>
   1df98:	ldr	r1, [pc, #2060]	; 1e7ac <main@@Base+0x2e90>
   1df9c:	add	r1, pc, r1
   1dfa0:	str	r0, [fp, #-128]	; 0xffffff80
   1dfa4:	mov	r0, r1
   1dfa8:	bl	125ec <printf@plt>
   1dfac:	ldr	r1, [pc, #2036]	; 1e7a8 <main@@Base+0x2e8c>
   1dfb0:	add	r1, pc, r1
   1dfb4:	str	r0, [fp, #-132]	; 0xffffff7c
   1dfb8:	mov	r0, r1
   1dfbc:	bl	125ec <printf@plt>
   1dfc0:	ldr	r1, [pc, #2012]	; 1e7a4 <main@@Base+0x2e88>
   1dfc4:	add	r1, pc, r1
   1dfc8:	str	r0, [fp, #-136]	; 0xffffff78
   1dfcc:	mov	r0, r1
   1dfd0:	bl	125ec <printf@plt>
   1dfd4:	ldr	r1, [pc, #1988]	; 1e7a0 <main@@Base+0x2e84>
   1dfd8:	add	r1, pc, r1
   1dfdc:	str	r0, [fp, #-140]	; 0xffffff74
   1dfe0:	mov	r0, r1
   1dfe4:	bl	125ec <printf@plt>
   1dfe8:	ldr	r1, [pc, #1964]	; 1e79c <main@@Base+0x2e80>
   1dfec:	add	r1, pc, r1
   1dff0:	str	r0, [fp, #-144]	; 0xffffff70
   1dff4:	mov	r0, r1
   1dff8:	bl	125ec <printf@plt>
   1dffc:	ldr	r1, [pc, #1940]	; 1e798 <main@@Base+0x2e7c>
   1e000:	add	r1, pc, r1
   1e004:	str	r0, [fp, #-148]	; 0xffffff6c
   1e008:	mov	r0, r1
   1e00c:	bl	125ec <printf@plt>
   1e010:	ldr	r1, [pc, #1916]	; 1e794 <main@@Base+0x2e78>
   1e014:	add	r1, pc, r1
   1e018:	str	r0, [fp, #-152]	; 0xffffff68
   1e01c:	mov	r0, r1
   1e020:	bl	125ec <printf@plt>
   1e024:	ldr	r1, [pc, #1892]	; 1e790 <main@@Base+0x2e74>
   1e028:	add	r1, pc, r1
   1e02c:	str	r0, [fp, #-156]	; 0xffffff64
   1e030:	mov	r0, r1
   1e034:	bl	125ec <printf@plt>
   1e038:	ldr	r1, [pc, #1868]	; 1e78c <main@@Base+0x2e70>
   1e03c:	add	r1, pc, r1
   1e040:	str	r0, [fp, #-160]	; 0xffffff60
   1e044:	mov	r0, r1
   1e048:	bl	125ec <printf@plt>
   1e04c:	ldr	r1, [pc, #1844]	; 1e788 <main@@Base+0x2e6c>
   1e050:	add	r1, pc, r1
   1e054:	str	r0, [fp, #-164]	; 0xffffff5c
   1e058:	mov	r0, r1
   1e05c:	bl	125ec <printf@plt>
   1e060:	ldr	r1, [pc, #1820]	; 1e784 <main@@Base+0x2e68>
   1e064:	add	r1, pc, r1
   1e068:	str	r0, [fp, #-168]	; 0xffffff58
   1e06c:	mov	r0, r1
   1e070:	bl	125ec <printf@plt>
   1e074:	ldr	r1, [pc, #1796]	; 1e780 <main@@Base+0x2e64>
   1e078:	add	r1, pc, r1
   1e07c:	str	r0, [fp, #-172]	; 0xffffff54
   1e080:	mov	r0, r1
   1e084:	bl	125ec <printf@plt>
   1e088:	ldr	r1, [pc, #1772]	; 1e77c <main@@Base+0x2e60>
   1e08c:	add	r1, pc, r1
   1e090:	str	r0, [fp, #-176]	; 0xffffff50
   1e094:	mov	r0, r1
   1e098:	bl	125ec <printf@plt>
   1e09c:	ldr	r1, [pc, #1748]	; 1e778 <main@@Base+0x2e5c>
   1e0a0:	add	r1, pc, r1
   1e0a4:	str	r0, [fp, #-180]	; 0xffffff4c
   1e0a8:	mov	r0, r1
   1e0ac:	bl	125ec <printf@plt>
   1e0b0:	ldr	r1, [pc, #1724]	; 1e774 <main@@Base+0x2e58>
   1e0b4:	add	r1, pc, r1
   1e0b8:	str	r0, [fp, #-184]	; 0xffffff48
   1e0bc:	mov	r0, r1
   1e0c0:	bl	125ec <printf@plt>
   1e0c4:	ldr	r1, [pc, #1700]	; 1e770 <main@@Base+0x2e54>
   1e0c8:	add	r1, pc, r1
   1e0cc:	str	r0, [fp, #-188]	; 0xffffff44
   1e0d0:	mov	r0, r1
   1e0d4:	bl	125ec <printf@plt>
   1e0d8:	ldr	r1, [pc, #1676]	; 1e76c <main@@Base+0x2e50>
   1e0dc:	add	r1, pc, r1
   1e0e0:	str	r0, [fp, #-192]	; 0xffffff40
   1e0e4:	mov	r0, r1
   1e0e8:	bl	125ec <printf@plt>
   1e0ec:	ldr	r1, [pc, #1652]	; 1e768 <main@@Base+0x2e4c>
   1e0f0:	add	r1, pc, r1
   1e0f4:	str	r0, [fp, #-196]	; 0xffffff3c
   1e0f8:	mov	r0, r1
   1e0fc:	bl	125ec <printf@plt>
   1e100:	ldr	r1, [pc, #1628]	; 1e764 <main@@Base+0x2e48>
   1e104:	add	r1, pc, r1
   1e108:	str	r0, [fp, #-200]	; 0xffffff38
   1e10c:	mov	r0, r1
   1e110:	bl	125ec <printf@plt>
   1e114:	ldr	r1, [pc, #1604]	; 1e760 <main@@Base+0x2e44>
   1e118:	add	r1, pc, r1
   1e11c:	str	r0, [fp, #-204]	; 0xffffff34
   1e120:	mov	r0, r1
   1e124:	bl	125ec <printf@plt>
   1e128:	ldr	r1, [pc, #1580]	; 1e75c <main@@Base+0x2e40>
   1e12c:	add	r1, pc, r1
   1e130:	str	r0, [fp, #-208]	; 0xffffff30
   1e134:	mov	r0, r1
   1e138:	bl	125ec <printf@plt>
   1e13c:	ldr	r1, [pc, #1556]	; 1e758 <main@@Base+0x2e3c>
   1e140:	add	r1, pc, r1
   1e144:	str	r0, [fp, #-212]	; 0xffffff2c
   1e148:	mov	r0, r1
   1e14c:	bl	125ec <printf@plt>
   1e150:	ldr	r1, [pc, #1532]	; 1e754 <main@@Base+0x2e38>
   1e154:	add	r1, pc, r1
   1e158:	str	r0, [fp, #-216]	; 0xffffff28
   1e15c:	mov	r0, r1
   1e160:	bl	125ec <printf@plt>
   1e164:	ldr	r1, [pc, #1508]	; 1e750 <main@@Base+0x2e34>
   1e168:	add	r1, pc, r1
   1e16c:	str	r0, [fp, #-220]	; 0xffffff24
   1e170:	mov	r0, r1
   1e174:	bl	125ec <printf@plt>
   1e178:	ldr	r1, [pc, #1484]	; 1e74c <main@@Base+0x2e30>
   1e17c:	add	r1, pc, r1
   1e180:	str	r0, [fp, #-224]	; 0xffffff20
   1e184:	mov	r0, r1
   1e188:	bl	125ec <printf@plt>
   1e18c:	ldr	r1, [pc, #1460]	; 1e748 <main@@Base+0x2e2c>
   1e190:	add	r1, pc, r1
   1e194:	str	r0, [fp, #-228]	; 0xffffff1c
   1e198:	mov	r0, r1
   1e19c:	bl	125ec <printf@plt>
   1e1a0:	ldr	r1, [pc, #1436]	; 1e744 <main@@Base+0x2e28>
   1e1a4:	add	r1, pc, r1
   1e1a8:	str	r0, [fp, #-232]	; 0xffffff18
   1e1ac:	mov	r0, r1
   1e1b0:	bl	125ec <printf@plt>
   1e1b4:	ldr	r1, [pc, #1412]	; 1e740 <main@@Base+0x2e24>
   1e1b8:	add	r1, pc, r1
   1e1bc:	str	r0, [sp, #236]	; 0xec
   1e1c0:	mov	r0, r1
   1e1c4:	bl	125ec <printf@plt>
   1e1c8:	ldr	r1, [pc, #1388]	; 1e73c <main@@Base+0x2e20>
   1e1cc:	add	r1, pc, r1
   1e1d0:	str	r0, [sp, #232]	; 0xe8
   1e1d4:	mov	r0, r1
   1e1d8:	bl	125ec <printf@plt>
   1e1dc:	ldr	r1, [pc, #1364]	; 1e738 <main@@Base+0x2e1c>
   1e1e0:	add	r1, pc, r1
   1e1e4:	str	r0, [sp, #228]	; 0xe4
   1e1e8:	mov	r0, r1
   1e1ec:	bl	125ec <printf@plt>
   1e1f0:	ldr	r1, [pc, #1340]	; 1e734 <main@@Base+0x2e18>
   1e1f4:	add	r1, pc, r1
   1e1f8:	str	r0, [sp, #224]	; 0xe0
   1e1fc:	mov	r0, r1
   1e200:	bl	125ec <printf@plt>
   1e204:	ldr	r1, [pc, #1316]	; 1e730 <main@@Base+0x2e14>
   1e208:	add	r1, pc, r1
   1e20c:	str	r0, [sp, #220]	; 0xdc
   1e210:	mov	r0, r1
   1e214:	bl	125ec <printf@plt>
   1e218:	ldr	r1, [pc, #1292]	; 1e72c <main@@Base+0x2e10>
   1e21c:	add	r1, pc, r1
   1e220:	str	r0, [sp, #216]	; 0xd8
   1e224:	mov	r0, r1
   1e228:	bl	125ec <printf@plt>
   1e22c:	ldr	r1, [pc, #1268]	; 1e728 <main@@Base+0x2e0c>
   1e230:	add	r1, pc, r1
   1e234:	str	r0, [sp, #212]	; 0xd4
   1e238:	mov	r0, r1
   1e23c:	bl	125ec <printf@plt>
   1e240:	ldr	r1, [pc, #1244]	; 1e724 <main@@Base+0x2e08>
   1e244:	add	r1, pc, r1
   1e248:	str	r0, [sp, #208]	; 0xd0
   1e24c:	mov	r0, r1
   1e250:	bl	125ec <printf@plt>
   1e254:	ldr	r1, [pc, #1220]	; 1e720 <main@@Base+0x2e04>
   1e258:	add	r1, pc, r1
   1e25c:	str	r0, [sp, #204]	; 0xcc
   1e260:	mov	r0, r1
   1e264:	bl	125ec <printf@plt>
   1e268:	ldr	r1, [pc, #1196]	; 1e71c <main@@Base+0x2e00>
   1e26c:	add	r1, pc, r1
   1e270:	str	r0, [sp, #200]	; 0xc8
   1e274:	mov	r0, r1
   1e278:	bl	125ec <printf@plt>
   1e27c:	ldr	r1, [pc, #1172]	; 1e718 <main@@Base+0x2dfc>
   1e280:	add	r1, pc, r1
   1e284:	str	r0, [sp, #196]	; 0xc4
   1e288:	mov	r0, r1
   1e28c:	bl	125ec <printf@plt>
   1e290:	ldr	r1, [pc, #1148]	; 1e714 <main@@Base+0x2df8>
   1e294:	add	r1, pc, r1
   1e298:	str	r0, [sp, #192]	; 0xc0
   1e29c:	mov	r0, r1
   1e2a0:	bl	125ec <printf@plt>
   1e2a4:	ldr	r1, [pc, #1124]	; 1e710 <main@@Base+0x2df4>
   1e2a8:	add	r1, pc, r1
   1e2ac:	str	r0, [sp, #188]	; 0xbc
   1e2b0:	mov	r0, r1
   1e2b4:	bl	125ec <printf@plt>
   1e2b8:	ldr	r1, [pc, #1100]	; 1e70c <main@@Base+0x2df0>
   1e2bc:	add	r1, pc, r1
   1e2c0:	str	r0, [sp, #184]	; 0xb8
   1e2c4:	mov	r0, r1
   1e2c8:	bl	125ec <printf@plt>
   1e2cc:	ldr	r1, [pc, #1076]	; 1e708 <main@@Base+0x2dec>
   1e2d0:	add	r1, pc, r1
   1e2d4:	str	r0, [sp, #180]	; 0xb4
   1e2d8:	mov	r0, r1
   1e2dc:	bl	125ec <printf@plt>
   1e2e0:	ldr	r1, [pc, #1052]	; 1e704 <main@@Base+0x2de8>
   1e2e4:	add	r1, pc, r1
   1e2e8:	str	r0, [sp, #176]	; 0xb0
   1e2ec:	mov	r0, r1
   1e2f0:	bl	125ec <printf@plt>
   1e2f4:	ldr	r1, [pc, #1028]	; 1e700 <main@@Base+0x2de4>
   1e2f8:	add	r1, pc, r1
   1e2fc:	str	r0, [sp, #172]	; 0xac
   1e300:	mov	r0, r1
   1e304:	bl	125ec <printf@plt>
   1e308:	ldr	r1, [pc, #1004]	; 1e6fc <main@@Base+0x2de0>
   1e30c:	add	r1, pc, r1
   1e310:	str	r0, [sp, #168]	; 0xa8
   1e314:	mov	r0, r1
   1e318:	bl	125ec <printf@plt>
   1e31c:	ldr	r1, [pc, #980]	; 1e6f8 <main@@Base+0x2ddc>
   1e320:	add	r1, pc, r1
   1e324:	str	r0, [sp, #164]	; 0xa4
   1e328:	mov	r0, r1
   1e32c:	bl	125ec <printf@plt>
   1e330:	ldr	r1, [pc, #956]	; 1e6f4 <main@@Base+0x2dd8>
   1e334:	add	r1, pc, r1
   1e338:	str	r0, [sp, #160]	; 0xa0
   1e33c:	mov	r0, r1
   1e340:	bl	125ec <printf@plt>
   1e344:	ldr	r1, [pc, #932]	; 1e6f0 <main@@Base+0x2dd4>
   1e348:	add	r1, pc, r1
   1e34c:	str	r0, [sp, #156]	; 0x9c
   1e350:	mov	r0, r1
   1e354:	bl	125ec <printf@plt>
   1e358:	ldr	r1, [pc, #908]	; 1e6ec <main@@Base+0x2dd0>
   1e35c:	add	r1, pc, r1
   1e360:	str	r0, [sp, #152]	; 0x98
   1e364:	mov	r0, r1
   1e368:	bl	125ec <printf@plt>
   1e36c:	ldr	r1, [pc, #884]	; 1e6e8 <main@@Base+0x2dcc>
   1e370:	add	r1, pc, r1
   1e374:	str	r0, [sp, #148]	; 0x94
   1e378:	mov	r0, r1
   1e37c:	bl	125ec <printf@plt>
   1e380:	ldr	r1, [pc, #860]	; 1e6e4 <main@@Base+0x2dc8>
   1e384:	add	r1, pc, r1
   1e388:	str	r0, [sp, #144]	; 0x90
   1e38c:	mov	r0, r1
   1e390:	bl	125ec <printf@plt>
   1e394:	ldr	r1, [pc, #836]	; 1e6e0 <main@@Base+0x2dc4>
   1e398:	add	r1, pc, r1
   1e39c:	str	r0, [sp, #140]	; 0x8c
   1e3a0:	mov	r0, r1
   1e3a4:	bl	125ec <printf@plt>
   1e3a8:	ldr	r1, [pc, #812]	; 1e6dc <main@@Base+0x2dc0>
   1e3ac:	add	r1, pc, r1
   1e3b0:	str	r0, [sp, #136]	; 0x88
   1e3b4:	mov	r0, r1
   1e3b8:	bl	125ec <printf@plt>
   1e3bc:	ldr	r1, [pc, #788]	; 1e6d8 <main@@Base+0x2dbc>
   1e3c0:	add	r1, pc, r1
   1e3c4:	str	r0, [sp, #132]	; 0x84
   1e3c8:	mov	r0, r1
   1e3cc:	bl	125ec <printf@plt>
   1e3d0:	ldr	r1, [pc, #764]	; 1e6d4 <main@@Base+0x2db8>
   1e3d4:	add	r1, pc, r1
   1e3d8:	str	r0, [sp, #128]	; 0x80
   1e3dc:	mov	r0, r1
   1e3e0:	bl	125ec <printf@plt>
   1e3e4:	ldr	r1, [pc, #740]	; 1e6d0 <main@@Base+0x2db4>
   1e3e8:	add	r1, pc, r1
   1e3ec:	str	r0, [sp, #124]	; 0x7c
   1e3f0:	mov	r0, r1
   1e3f4:	bl	125ec <printf@plt>
   1e3f8:	ldr	r1, [pc, #716]	; 1e6cc <main@@Base+0x2db0>
   1e3fc:	add	r1, pc, r1
   1e400:	str	r0, [sp, #120]	; 0x78
   1e404:	mov	r0, r1
   1e408:	bl	125ec <printf@plt>
   1e40c:	ldr	r1, [pc, #692]	; 1e6c8 <main@@Base+0x2dac>
   1e410:	add	r1, pc, r1
   1e414:	str	r0, [sp, #116]	; 0x74
   1e418:	mov	r0, r1
   1e41c:	bl	125ec <printf@plt>
   1e420:	ldr	r1, [pc, #668]	; 1e6c4 <main@@Base+0x2da8>
   1e424:	add	r1, pc, r1
   1e428:	str	r0, [sp, #112]	; 0x70
   1e42c:	mov	r0, r1
   1e430:	bl	125ec <printf@plt>
   1e434:	ldr	r1, [pc, #644]	; 1e6c0 <main@@Base+0x2da4>
   1e438:	add	r1, pc, r1
   1e43c:	str	r0, [sp, #108]	; 0x6c
   1e440:	mov	r0, r1
   1e444:	bl	125ec <printf@plt>
   1e448:	ldr	r1, [pc, #620]	; 1e6bc <main@@Base+0x2da0>
   1e44c:	add	r1, pc, r1
   1e450:	str	r0, [sp, #104]	; 0x68
   1e454:	mov	r0, r1
   1e458:	bl	125ec <printf@plt>
   1e45c:	ldr	r1, [pc, #596]	; 1e6b8 <main@@Base+0x2d9c>
   1e460:	add	r1, pc, r1
   1e464:	str	r0, [sp, #100]	; 0x64
   1e468:	mov	r0, r1
   1e46c:	bl	125ec <printf@plt>
   1e470:	ldr	r1, [pc, #572]	; 1e6b4 <main@@Base+0x2d98>
   1e474:	add	r1, pc, r1
   1e478:	str	r0, [sp, #96]	; 0x60
   1e47c:	mov	r0, r1
   1e480:	bl	125ec <printf@plt>
   1e484:	ldr	r1, [pc, #548]	; 1e6b0 <main@@Base+0x2d94>
   1e488:	add	r1, pc, r1
   1e48c:	str	r0, [sp, #92]	; 0x5c
   1e490:	mov	r0, r1
   1e494:	bl	125ec <printf@plt>
   1e498:	ldr	r1, [pc, #524]	; 1e6ac <main@@Base+0x2d90>
   1e49c:	add	r1, pc, r1
   1e4a0:	str	r0, [sp, #88]	; 0x58
   1e4a4:	mov	r0, r1
   1e4a8:	bl	125ec <printf@plt>
   1e4ac:	ldr	r1, [pc, #500]	; 1e6a8 <main@@Base+0x2d8c>
   1e4b0:	add	r1, pc, r1
   1e4b4:	str	r0, [sp, #84]	; 0x54
   1e4b8:	mov	r0, r1
   1e4bc:	bl	125ec <printf@plt>
   1e4c0:	ldr	r1, [pc, #476]	; 1e6a4 <main@@Base+0x2d88>
   1e4c4:	add	r1, pc, r1
   1e4c8:	str	r0, [sp, #80]	; 0x50
   1e4cc:	mov	r0, r1
   1e4d0:	bl	125ec <printf@plt>
   1e4d4:	ldr	r1, [pc, #452]	; 1e6a0 <main@@Base+0x2d84>
   1e4d8:	add	r1, pc, r1
   1e4dc:	str	r0, [sp, #76]	; 0x4c
   1e4e0:	mov	r0, r1
   1e4e4:	bl	125ec <printf@plt>
   1e4e8:	ldr	r1, [pc, #428]	; 1e69c <main@@Base+0x2d80>
   1e4ec:	add	r1, pc, r1
   1e4f0:	str	r0, [sp, #72]	; 0x48
   1e4f4:	mov	r0, r1
   1e4f8:	bl	125ec <printf@plt>
   1e4fc:	ldr	r1, [pc, #404]	; 1e698 <main@@Base+0x2d7c>
   1e500:	add	r1, pc, r1
   1e504:	str	r0, [sp, #68]	; 0x44
   1e508:	mov	r0, r1
   1e50c:	bl	125ec <printf@plt>
   1e510:	ldr	r1, [pc, #380]	; 1e694 <main@@Base+0x2d78>
   1e514:	add	r1, pc, r1
   1e518:	str	r0, [sp, #64]	; 0x40
   1e51c:	mov	r0, r1
   1e520:	bl	125ec <printf@plt>
   1e524:	ldr	r1, [pc, #356]	; 1e690 <main@@Base+0x2d74>
   1e528:	add	r1, pc, r1
   1e52c:	str	r0, [sp, #60]	; 0x3c
   1e530:	mov	r0, r1
   1e534:	bl	125ec <printf@plt>
   1e538:	ldr	r1, [pc, #332]	; 1e68c <main@@Base+0x2d70>
   1e53c:	add	r1, pc, r1
   1e540:	str	r0, [sp, #56]	; 0x38
   1e544:	mov	r0, r1
   1e548:	bl	125ec <printf@plt>
   1e54c:	ldr	r1, [pc, #308]	; 1e688 <main@@Base+0x2d6c>
   1e550:	add	r1, pc, r1
   1e554:	str	r0, [sp, #52]	; 0x34
   1e558:	mov	r0, r1
   1e55c:	bl	125ec <printf@plt>
   1e560:	ldr	r1, [pc, #284]	; 1e684 <main@@Base+0x2d68>
   1e564:	add	r1, pc, r1
   1e568:	str	r0, [sp, #48]	; 0x30
   1e56c:	mov	r0, r1
   1e570:	bl	125ec <printf@plt>
   1e574:	ldr	r1, [pc, #260]	; 1e680 <main@@Base+0x2d64>
   1e578:	add	r1, pc, r1
   1e57c:	str	r0, [sp, #44]	; 0x2c
   1e580:	mov	r0, r1
   1e584:	bl	125ec <printf@plt>
   1e588:	ldr	r1, [pc, #236]	; 1e67c <main@@Base+0x2d60>
   1e58c:	add	r1, pc, r1
   1e590:	str	r0, [sp, #40]	; 0x28
   1e594:	mov	r0, r1
   1e598:	bl	125ec <printf@plt>
   1e59c:	ldr	r1, [pc, #212]	; 1e678 <main@@Base+0x2d5c>
   1e5a0:	add	r1, pc, r1
   1e5a4:	str	r0, [sp, #36]	; 0x24
   1e5a8:	mov	r0, r1
   1e5ac:	bl	125ec <printf@plt>
   1e5b0:	ldr	r1, [pc, #188]	; 1e674 <main@@Base+0x2d58>
   1e5b4:	add	r1, pc, r1
   1e5b8:	str	r0, [sp, #32]
   1e5bc:	mov	r0, r1
   1e5c0:	bl	125ec <printf@plt>
   1e5c4:	ldr	r1, [pc, #164]	; 1e670 <main@@Base+0x2d54>
   1e5c8:	add	r1, pc, r1
   1e5cc:	str	r0, [sp, #28]
   1e5d0:	mov	r0, r1
   1e5d4:	bl	125ec <printf@plt>
   1e5d8:	ldr	r1, [pc, #140]	; 1e66c <main@@Base+0x2d50>
   1e5dc:	add	r1, pc, r1
   1e5e0:	str	r0, [sp, #24]
   1e5e4:	mov	r0, r1
   1e5e8:	bl	125ec <printf@plt>
   1e5ec:	ldr	r1, [pc, #116]	; 1e668 <main@@Base+0x2d4c>
   1e5f0:	add	r1, pc, r1
   1e5f4:	str	r0, [sp, #20]
   1e5f8:	mov	r0, r1
   1e5fc:	bl	125ec <printf@plt>
   1e600:	ldr	r1, [pc, #92]	; 1e664 <main@@Base+0x2d48>
   1e604:	add	r1, pc, r1
   1e608:	str	r0, [sp, #16]
   1e60c:	mov	r0, r1
   1e610:	bl	125ec <printf@plt>
   1e614:	ldr	r1, [pc, #68]	; 1e660 <main@@Base+0x2d44>
   1e618:	add	r1, pc, r1
   1e61c:	str	r0, [sp, #12]
   1e620:	mov	r0, r1
   1e624:	bl	125ec <printf@plt>
   1e628:	ldr	r1, [pc, #44]	; 1e65c <main@@Base+0x2d40>
   1e62c:	add	r1, pc, r1
   1e630:	str	r0, [sp, #8]
   1e634:	mov	r0, r1
   1e638:	bl	125ec <printf@plt>
   1e63c:	ldr	r1, [pc, #20]	; 1e658 <main@@Base+0x2d3c>
   1e640:	add	r1, pc, r1
   1e644:	str	r0, [sp, #4]
   1e648:	mov	r0, r1
   1e64c:	bl	125ec <printf@plt>
   1e650:	mov	sp, fp
   1e654:	pop	{fp, pc}
   1e658:	andeq	r1, r0, fp, lsr #30
   1e65c:	muleq	r0, r4, sp
   1e660:	andeq	r1, r0, r8, ror #26
   1e664:	andeq	r1, r0, r5, lsr sp
   1e668:	strdeq	r1, [r0], -ip
   1e66c:	andeq	r1, r0, r4, ror #25
   1e670:	andeq	r1, r0, lr, lsr #25
   1e674:	andeq	r1, r0, r3, ror ip
   1e678:	andeq	r1, r0, fp, asr #31
   1e67c:	andeq	r1, r0, r8, ror #24
   1e680:	andeq	r1, r0, r0, ror #24
   1e684:	andeq	r2, r0, r7
   1e688:	andeq	r1, r0, r9, ror #24
   1e68c:	andeq	r1, r0, r4, ror #24
   1e690:	andeq	r2, r0, r3, asr #32
   1e694:	andeq	r1, r0, r6, asr ip
   1e698:	andeq	r1, r0, ip, lsl ip
   1e69c:	strdeq	r1, [r0], -r0
   1e6a0:			; <UNDEFINED> instruction: 0x00001bb8
   1e6a4:	andeq	r1, r0, sp, ror fp
   1e6a8:	andeq	r1, r0, r0, ror fp
   1e6ac:	andeq	r1, r0, r1, lsr #17
   1e6b0:	andeq	r1, r0, ip, ror #16
   1e6b4:	andeq	r1, r0, r1, ror #16
   1e6b8:	andeq	r1, r0, pc, lsl #11
   1e6bc:	andeq	r1, r0, lr, ror r5
   1e6c0:			; <UNDEFINED> instruction: 0x00001bb2
   1e6c4:	muleq	r0, r5, fp
   1e6c8:	muleq	r0, r1, fp
   1e6cc:	andeq	r1, r0, r6, ror fp
   1e6d0:	andeq	r1, r0, pc, lsr fp
   1e6d4:	andeq	r1, r0, r8, lsl #22
   1e6d8:	ldrdeq	r1, [r0], -r3
   1e6dc:			; <UNDEFINED> instruction: 0x000021bf
   1e6e0:	andeq	r1, r0, sp, asr #9
   1e6e4:	muleq	r0, r2, r4
   1e6e8:	andeq	r1, r0, r5, asr r4
   1e6ec:	andeq	r1, r0, r9, asr #8
   1e6f0:	strdeq	r1, [r0], -r5
   1e6f4:	andeq	r1, r0, r0, asr #19
   1e6f8:			; <UNDEFINED> instruction: 0x000019b5
   1e6fc:	andeq	r1, r0, r3, ror #13
   1e700:	ldrdeq	r1, [r0], -r2
   1e704:			; <UNDEFINED> instruction: 0x000012b0
   1e708:	muleq	r0, sp, r2
   1e70c:			; <UNDEFINED> instruction: 0x00001bb7
   1e710:	andeq	r1, r0, lr, ror fp
   1e714:	andeq	r1, r0, sp, lsr #19
   1e718:	andeq	r1, r0, r3, lsr #19
   1e71c:	andeq	r1, r0, r3, lsr #23
   1e720:	andeq	r1, r0, sl, ror fp
   1e724:	andeq	r1, r0, r7, asr #22
   1e728:	andeq	r2, r0, fp, lsr r3
   1e72c:	andeq	r1, r0, r9, asr #12
   1e730:	andeq	r1, r0, lr, lsl #12
   1e734:	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   1e738:	andeq	r1, r0, r5, asr #11
   1e73c:	andeq	r1, r0, r1, ror fp
   1e740:	andeq	r1, r0, ip, lsr fp
   1e744:	andeq	r1, r0, r1, lsr fp
   1e748:	andeq	r1, r0, pc, asr r8
   1e74c:	andeq	r1, r0, lr, asr #16
   1e750:	andeq	r1, r0, ip, lsr #8
   1e754:	andeq	r1, r0, r9, lsl r4
   1e758:	andeq	r1, r0, r9, asr #22
   1e75c:	andeq	r1, r0, r5, lsl fp
   1e760:	andeq	r1, r0, fp, lsl #22
   1e764:	andeq	r1, r0, r8, lsl #22
   1e768:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   1e76c:	andeq	r1, r0, ip, lsr #21
   1e770:	andeq	r2, r0, r3, lsr #9
   1e774:			; <UNDEFINED> instruction: 0x000017b1
   1e778:	andeq	r1, r0, r6, ror r7
   1e77c:	andeq	r1, r0, r9, lsr r7
   1e780:	andeq	r1, r0, sp, lsr #14
   1e784:	ldrdeq	r1, [r0], -r4
   1e788:	andeq	r1, r0, r6, asr #21
   1e78c:	andeq	r1, r0, sp, lsl #21
   1e790:	andeq	r1, r0, r8, ror #20
   1e794:	andeq	r1, r0, r0, lsr sl
   1e798:	andeq	r1, r0, r3, lsr #20
   1e79c:	andeq	r1, r0, r3, lsl #20
   1e7a0:	strdeq	r1, [r0], -r2
   1e7a4:			; <UNDEFINED> instruction: 0x000019ba
   1e7a8:			; <UNDEFINED> instruction: 0x000019b5
   1e7ac:	andeq	r1, r0, r7, lsl #19
   1e7b0:	andeq	r1, r0, r2, lsl #19
   1e7b4:	andeq	r1, r0, fp, lsl #13
   1e7b8:	andeq	r1, r0, pc, ror #12
   1e7bc:	andeq	r1, r0, r8, asr #12
   1e7c0:	andeq	r1, r0, r5, lsr r6
   1e7c4:	ldrdeq	r1, [r0], -lr
   1e7c8:			; <UNDEFINED> instruction: 0x000019bd
   1e7cc:	andeq	r1, r0, r8, lsl #19
   1e7d0:	andeq	r2, r0, r3, lsl #13
   1e7d4:	muleq	r0, r1, r9
   1e7d8:	andeq	r1, r0, r6, asr r9
   1e7dc:	andeq	r1, r0, r9, lsl r9
   1e7e0:	andeq	r1, r0, sp, lsl #18
   1e7e4:	strdeq	r1, [r0], -r7
   1e7e8:	andeq	r1, r0, r4, asr #17
   1e7ec:			; <UNDEFINED> instruction: 0x000018be
   1e7f0:	andeq	r1, r0, r0, lsr #17
   1e7f4:	muleq	r0, r9, r8
   1e7f8:	andeq	r1, r0, r2, lsl #17
   1e7fc:	andeq	r1, r0, lr, ror r8
   1e800:	andeq	r1, r0, r8, ror #16
   1e804:	andeq	r1, r0, r4, ror #16
   1e808:	andeq	r1, r0, pc, lsr #16
   1e80c:	andeq	r1, r0, r3, lsl r8
   1e810:	andeq	r1, r0, ip, ror #15
   1e814:	ldrdeq	r1, [r0], -r9
   1e818:			; <UNDEFINED> instruction: 0x000017b5
   1e81c:	andeq	r1, r0, sp, lsr #15
   1e820:	andeq	r1, r0, sl, lsr #15
   1e824:	muleq	r0, r1, r7
   1e828:	andeq	r1, r0, lr, asr r7
   1e82c:	andeq	r1, r0, r2, ror #14
   1e830:	push	{fp, lr}
   1e834:	mov	fp, sp
   1e838:	sub	sp, sp, #16
   1e83c:	bl	129a0 <coda_get_libcoda_version@plt>
   1e840:	ldr	r1, [pc, #72]	; 1e890 <main@@Base+0x2f74>
   1e844:	add	r1, pc, r1
   1e848:	str	r0, [fp, #-4]
   1e84c:	mov	r0, r1
   1e850:	ldr	r1, [fp, #-4]
   1e854:	bl	125ec <printf@plt>
   1e858:	ldr	r1, [pc, #44]	; 1e88c <main@@Base+0x2f70>
   1e85c:	add	r1, pc, r1
   1e860:	str	r0, [sp, #8]
   1e864:	mov	r0, r1
   1e868:	bl	125ec <printf@plt>
   1e86c:	ldr	r1, [pc, #20]	; 1e888 <main@@Base+0x2f6c>
   1e870:	add	r1, pc, r1
   1e874:	str	r0, [sp, #4]
   1e878:	mov	r0, r1
   1e87c:	bl	125ec <printf@plt>
   1e880:	mov	sp, fp
   1e884:	pop	{fp, pc}
   1e888:	strdeq	r1, [r0], -fp
   1e88c:			; <UNDEFINED> instruction: 0x00001bba
   1e890:			; <UNDEFINED> instruction: 0x00001bbd
   1e894:	cmp	r3, #0
   1e898:	cmpeq	r2, #0
   1e89c:	bne	1e8c0 <main@@Base+0x2fa4>
   1e8a0:	cmp	r1, #0
   1e8a4:	movlt	r1, #-2147483648	; 0x80000000
   1e8a8:	movlt	r0, #0
   1e8ac:	blt	1e8bc <main@@Base+0x2fa0>
   1e8b0:	cmpeq	r0, #0
   1e8b4:	mvnne	r1, #-2147483648	; 0x80000000
   1e8b8:	mvnne	r0, #0
   1e8bc:	b	1e968 <main@@Base+0x304c>
   1e8c0:	sub	sp, sp, #8
   1e8c4:	push	{sp, lr}
   1e8c8:	cmp	r1, #0
   1e8cc:	blt	1e8ec <main@@Base+0x2fd0>
   1e8d0:	cmp	r3, #0
   1e8d4:	blt	1e920 <main@@Base+0x3004>
   1e8d8:	bl	1e978 <main@@Base+0x305c>
   1e8dc:	ldr	lr, [sp, #4]
   1e8e0:	add	sp, sp, #8
   1e8e4:	pop	{r2, r3}
   1e8e8:	bx	lr
   1e8ec:	rsbs	r0, r0, #0
   1e8f0:	sbc	r1, r1, r1, lsl #1
   1e8f4:	cmp	r3, #0
   1e8f8:	blt	1e944 <main@@Base+0x3028>
   1e8fc:	bl	1e978 <main@@Base+0x305c>
   1e900:	ldr	lr, [sp, #4]
   1e904:	add	sp, sp, #8
   1e908:	pop	{r2, r3}
   1e90c:	rsbs	r0, r0, #0
   1e910:	sbc	r1, r1, r1, lsl #1
   1e914:	rsbs	r2, r2, #0
   1e918:	sbc	r3, r3, r3, lsl #1
   1e91c:	bx	lr
   1e920:	rsbs	r2, r2, #0
   1e924:	sbc	r3, r3, r3, lsl #1
   1e928:	bl	1e978 <main@@Base+0x305c>
   1e92c:	ldr	lr, [sp, #4]
   1e930:	add	sp, sp, #8
   1e934:	pop	{r2, r3}
   1e938:	rsbs	r0, r0, #0
   1e93c:	sbc	r1, r1, r1, lsl #1
   1e940:	bx	lr
   1e944:	rsbs	r2, r2, #0
   1e948:	sbc	r3, r3, r3, lsl #1
   1e94c:	bl	1e978 <main@@Base+0x305c>
   1e950:	ldr	lr, [sp, #4]
   1e954:	add	sp, sp, #8
   1e958:	pop	{r2, r3}
   1e95c:	rsbs	r2, r2, #0
   1e960:	sbc	r3, r3, r3, lsl #1
   1e964:	bx	lr
   1e968:	push	{r1, lr}
   1e96c:	mov	r0, #8
   1e970:	bl	125b0 <raise@plt>
   1e974:	pop	{r1, pc}
   1e978:	cmp	r1, r3
   1e97c:	cmpeq	r0, r2
   1e980:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e984:	mov	r4, r0
   1e988:	movcc	r0, #0
   1e98c:	mov	r5, r1
   1e990:	ldr	lr, [sp, #36]	; 0x24
   1e994:	movcc	r1, r0
   1e998:	bcc	1ea94 <main@@Base+0x3178>
   1e99c:	cmp	r3, #0
   1e9a0:	clzeq	ip, r2
   1e9a4:	clzne	ip, r3
   1e9a8:	addeq	ip, ip, #32
   1e9ac:	cmp	r5, #0
   1e9b0:	clzeq	r1, r4
   1e9b4:	addeq	r1, r1, #32
   1e9b8:	clzne	r1, r5
   1e9bc:	sub	ip, ip, r1
   1e9c0:	sub	sl, ip, #32
   1e9c4:	lsl	r9, r3, ip
   1e9c8:	rsb	fp, ip, #32
   1e9cc:	orr	r9, r9, r2, lsl sl
   1e9d0:	orr	r9, r9, r2, lsr fp
   1e9d4:	lsl	r8, r2, ip
   1e9d8:	cmp	r5, r9
   1e9dc:	cmpeq	r4, r8
   1e9e0:	movcc	r0, #0
   1e9e4:	movcc	r1, r0
   1e9e8:	bcc	1ea04 <main@@Base+0x30e8>
   1e9ec:	mov	r0, #1
   1e9f0:	subs	r4, r4, r8
   1e9f4:	lsl	r1, r0, sl
   1e9f8:	orr	r1, r1, r0, lsr fp
   1e9fc:	lsl	r0, r0, ip
   1ea00:	sbc	r5, r5, r9
   1ea04:	cmp	ip, #0
   1ea08:	beq	1ea94 <main@@Base+0x3178>
   1ea0c:	lsr	r6, r8, #1
   1ea10:	orr	r6, r6, r9, lsl #31
   1ea14:	lsr	r7, r9, #1
   1ea18:	mov	r2, ip
   1ea1c:	b	1ea40 <main@@Base+0x3124>
   1ea20:	subs	r3, r4, r6
   1ea24:	sbc	r8, r5, r7
   1ea28:	adds	r3, r3, r3
   1ea2c:	adc	r8, r8, r8
   1ea30:	adds	r4, r3, #1
   1ea34:	adc	r5, r8, #0
   1ea38:	subs	r2, r2, #1
   1ea3c:	beq	1ea5c <main@@Base+0x3140>
   1ea40:	cmp	r5, r7
   1ea44:	cmpeq	r4, r6
   1ea48:	bcs	1ea20 <main@@Base+0x3104>
   1ea4c:	adds	r4, r4, r4
   1ea50:	adc	r5, r5, r5
   1ea54:	subs	r2, r2, #1
   1ea58:	bne	1ea40 <main@@Base+0x3124>
   1ea5c:	lsr	r3, r4, ip
   1ea60:	orr	r3, r3, r5, lsl fp
   1ea64:	lsr	r2, r5, ip
   1ea68:	orr	r3, r3, r5, lsr sl
   1ea6c:	adds	r0, r0, r4
   1ea70:	mov	r4, r3
   1ea74:	lsl	r3, r2, ip
   1ea78:	orr	r3, r3, r4, lsl sl
   1ea7c:	lsl	ip, r4, ip
   1ea80:	orr	r3, r3, r4, lsr fp
   1ea84:	adc	r1, r1, r5
   1ea88:	subs	r0, r0, ip
   1ea8c:	mov	r5, r2
   1ea90:	sbc	r1, r1, r3
   1ea94:	cmp	lr, #0
   1ea98:	strdne	r4, [lr]
   1ea9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001eaa0 <__libc_csu_init@@Base>:
   1eaa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eaa4:	mov	r7, r0
   1eaa8:	ldr	r6, [pc, #72]	; 1eaf8 <__libc_csu_init@@Base+0x58>
   1eaac:	ldr	r5, [pc, #72]	; 1eafc <__libc_csu_init@@Base+0x5c>
   1eab0:	add	r6, pc, r6
   1eab4:	add	r5, pc, r5
   1eab8:	sub	r6, r6, r5
   1eabc:	mov	r8, r1
   1eac0:	mov	r9, r2
   1eac4:	bl	1256c <coda_cursor_get_byte_size@plt-0x20>
   1eac8:	asrs	r6, r6, #2
   1eacc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ead0:	mov	r4, #0
   1ead4:	add	r4, r4, #1
   1ead8:	ldr	r3, [r5], #4
   1eadc:	mov	r2, r9
   1eae0:	mov	r1, r8
   1eae4:	mov	r0, r7
   1eae8:	blx	r3
   1eaec:	cmp	r6, r4
   1eaf0:	bne	1ead4 <__libc_csu_init@@Base+0x34>
   1eaf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eaf8:	andeq	r2, r1, ip, lsr r4
   1eafc:	andeq	r2, r1, r4, lsr r4

0001eb00 <__libc_csu_fini@@Base>:
   1eb00:	bx	lr

Disassembly of section .fini:

0001eb04 <.fini>:
   1eb04:	push	{r3, lr}
   1eb08:	pop	{r3, pc}
