
../repos/charybdis/modules/.libs/um_regonlymsg.so:     file format elf32-littlearm


Disassembly of section .init:

00000460 <_init>:
 460:	push	{r3, lr}
 464:	bl	4e0 <call_weak_fn>
 468:	pop	{r3, pc}

Disassembly of section .plt:

0000046c <.plt>:
 46c:	push	{lr}		; (str lr, [sp, #-4]!)
 470:	ldr	lr, [pc, #4]	; 47c <.plt+0x10>
 474:	add	lr, pc, lr
 478:	ldr	pc, [lr, #8]!
 47c:	.word	0x00010b84

00000480 <__cxa_finalize@plt>:
 480:	add	ip, pc, #0, 12
 484:	add	ip, ip, #16, 20	; 0x10000
 488:	ldr	pc, [ip, #2948]!	; 0xb84

0000048c <ierror@plt>:
 48c:	add	ip, pc, #0, 12
 490:	add	ip, ip, #16, 20	; 0x10000
 494:	ldr	pc, [ip, #2940]!	; 0xb7c

00000498 <find_umode_slot@plt>:
 498:	add	ip, pc, #0, 12
 49c:	add	ip, ip, #16, 20	; 0x10000
 4a0:	ldr	pc, [ip, #2932]!	; 0xb74

000004a4 <__gmon_start__@plt>:
 4a4:	add	ip, pc, #0, 12
 4a8:	add	ip, ip, #16, 20	; 0x10000
 4ac:	ldr	pc, [ip, #2924]!	; 0xb6c

000004b0 <sendto_one_numeric@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2916]!	; 0xb64

000004bc <snprintf@plt>:
 4bc:	add	ip, pc, #0, 12
 4c0:	add	ip, ip, #16, 20	; 0x10000
 4c4:	ldr	pc, [ip, #2908]!	; 0xb5c

000004c8 <__assert_fail@plt>:
 4c8:	add	ip, pc, #0, 12
 4cc:	add	ip, ip, #16, 20	; 0x10000
 4d0:	ldr	pc, [ip, #2900]!	; 0xb54

000004d4 <construct_umodebuf@plt>:
 4d4:	add	ip, pc, #0, 12
 4d8:	add	ip, ip, #16, 20	; 0x10000
 4dc:	ldr	pc, [ip, #2892]!	; 0xb4c

Disassembly of section .text:

000004e0 <call_weak_fn>:
 4e0:	ldr	r3, [pc, #20]	; 4fc <call_weak_fn+0x1c>
 4e4:	ldr	r2, [pc, #20]	; 500 <call_weak_fn+0x20>
 4e8:	add	r3, pc, r3
 4ec:	ldr	r2, [r3, r2]
 4f0:	cmp	r2, #0
 4f4:	bxeq	lr
 4f8:	b	4a4 <__gmon_start__@plt>
 4fc:	.word	0x00010b10
 500:	.word	0x00000038

00000504 <deregister_tm_clones>:
 504:	ldr	r0, [pc, #44]	; 538 <deregister_tm_clones+0x34>
 508:	ldr	r3, [pc, #44]	; 53c <deregister_tm_clones+0x38>
 50c:	add	r0, pc, r0
 510:	add	r3, pc, r3
 514:	cmp	r3, r0
 518:	ldr	r3, [pc, #32]	; 540 <deregister_tm_clones+0x3c>
 51c:	add	r3, pc, r3
 520:	bxeq	lr
 524:	ldr	r2, [pc, #24]	; 544 <deregister_tm_clones+0x40>
 528:	ldr	r3, [r3, r2]
 52c:	cmp	r3, #0
 530:	bxeq	lr
 534:	bx	r3
 538:	.word	0x00010b7c
 53c:	.word	0x00010b78
 540:	.word	0x00010adc
 544:	.word	0x00000030

00000548 <register_tm_clones>:
 548:	ldr	r0, [pc, #56]	; 588 <register_tm_clones+0x40>
 54c:	ldr	r3, [pc, #56]	; 58c <register_tm_clones+0x44>
 550:	add	r0, pc, r0
 554:	add	r3, pc, r3
 558:	sub	r1, r3, r0
 55c:	ldr	r3, [pc, #44]	; 590 <register_tm_clones+0x48>
 560:	asr	r1, r1, #2
 564:	add	r3, pc, r3
 568:	add	r1, r1, r1, lsr #31
 56c:	asrs	r1, r1, #1
 570:	bxeq	lr
 574:	ldr	r2, [pc, #24]	; 594 <register_tm_clones+0x4c>
 578:	ldr	r3, [r3, r2]
 57c:	cmp	r3, #0
 580:	bxeq	lr
 584:	bx	r3
 588:	.word	0x00010b38
 58c:	.word	0x00010b34
 590:	.word	0x00010a94
 594:	.word	0x0000003c

00000598 <__do_global_dtors_aux>:
 598:	ldr	r3, [pc, #76]	; 5ec <__do_global_dtors_aux+0x54>
 59c:	ldr	r2, [pc, #76]	; 5f0 <__do_global_dtors_aux+0x58>
 5a0:	add	r3, pc, r3
 5a4:	add	r2, pc, r2
 5a8:	ldrb	r3, [r3]
 5ac:	cmp	r3, #0
 5b0:	bxne	lr
 5b4:	ldr	r3, [pc, #56]	; 5f4 <__do_global_dtors_aux+0x5c>
 5b8:	push	{r4, lr}
 5bc:	ldr	r3, [r2, r3]
 5c0:	cmp	r3, #0
 5c4:	beq	5d4 <__do_global_dtors_aux+0x3c>
 5c8:	ldr	r3, [pc, #40]	; 5f8 <__do_global_dtors_aux+0x60>
 5cc:	ldr	r0, [pc, r3]
 5d0:	bl	480 <__cxa_finalize@plt>
 5d4:	bl	504 <deregister_tm_clones>
 5d8:	ldr	r3, [pc, #28]	; 5fc <__do_global_dtors_aux+0x64>
 5dc:	mov	r2, #1
 5e0:	add	r3, pc, r3
 5e4:	strb	r2, [r3]
 5e8:	pop	{r4, pc}
 5ec:	.word	0x00010ae8
 5f0:	.word	0x00010a54
 5f4:	.word	0x0000002c
 5f8:	.word	0x00010a6c
 5fc:	.word	0x00010aa8

00000600 <frame_dummy>:
 600:	b	548 <register_tm_clones>

00000604 <rb_dlinkFind>:
 604:	str	fp, [sp, #-8]!
 608:	str	lr, [sp, #4]
 60c:	add	fp, sp, #4
 610:	sub	sp, sp, #16
 614:	str	r0, [fp, #-16]
 618:	str	r1, [fp, #-20]	; 0xffffffec
 61c:	ldr	r3, [fp, #-20]	; 0xffffffec
 620:	cmp	r3, #0
 624:	bne	648 <rb_dlinkFind+0x44>
 628:	ldr	r3, [pc, #160]	; 6d0 <rb_dlinkFind+0xcc>
 62c:	add	r3, pc, r3
 630:	movw	r2, #310	; 0x136
 634:	ldr	r1, [pc, #152]	; 6d4 <rb_dlinkFind+0xd0>
 638:	add	r1, pc, r1
 63c:	ldr	r0, [pc, #148]	; 6d8 <rb_dlinkFind+0xd4>
 640:	add	r0, pc, r0
 644:	bl	4c8 <__assert_fail@plt>
 648:	ldr	r3, [fp, #-16]
 64c:	cmp	r3, #0
 650:	bne	674 <rb_dlinkFind+0x70>
 654:	ldr	r3, [pc, #128]	; 6dc <rb_dlinkFind+0xd8>
 658:	add	r3, pc, r3
 65c:	movw	r2, #311	; 0x137
 660:	ldr	r1, [pc, #120]	; 6e0 <rb_dlinkFind+0xdc>
 664:	add	r1, pc, r1
 668:	ldr	r0, [pc, #116]	; 6e4 <rb_dlinkFind+0xe0>
 66c:	add	r0, pc, r0
 670:	bl	4c8 <__assert_fail@plt>
 674:	ldr	r3, [fp, #-20]	; 0xffffffec
 678:	ldr	r3, [r3]
 67c:	str	r3, [fp, #-8]
 680:	b	6ac <rb_dlinkFind+0xa8>
 684:	ldr	r3, [fp, #-8]
 688:	ldr	r3, [r3]
 68c:	ldr	r2, [fp, #-16]
 690:	cmp	r2, r3
 694:	bne	6a0 <rb_dlinkFind+0x9c>
 698:	ldr	r3, [fp, #-8]
 69c:	b	6bc <rb_dlinkFind+0xb8>
 6a0:	ldr	r3, [fp, #-8]
 6a4:	ldr	r3, [r3, #8]
 6a8:	str	r3, [fp, #-8]
 6ac:	ldr	r3, [fp, #-8]
 6b0:	cmp	r3, #0
 6b4:	bne	684 <rb_dlinkFind+0x80>
 6b8:	mov	r3, #0
 6bc:	mov	r0, r3
 6c0:	sub	sp, fp, #4
 6c4:	ldr	fp, [sp]
 6c8:	add	sp, sp, #4
 6cc:	pop	{pc}		; (ldr pc, [sp], #4)
 6d0:	.word	0x0000056c
 6d4:	.word	0x00000440
 6d8:	.word	0x00000454
 6dc:	.word	0x00000540
 6e0:	.word	0x00000414
 6e4:	.word	0x00000438

000006e8 <um_regonlymsg_modinit>:
 6e8:	strd	r4, [sp, #-16]!
 6ec:	str	fp, [sp, #8]
 6f0:	str	lr, [sp, #12]
 6f4:	add	fp, sp, #12
 6f8:	ldr	r4, [pc, #100]	; 764 <um_regonlymsg_modinit+0x7c>
 6fc:	add	r4, pc, r4
 700:	bl	498 <find_umode_slot@plt>
 704:	mov	r3, r0
 708:	mov	r2, r3
 70c:	ldr	r3, [pc, #84]	; 768 <um_regonlymsg_modinit+0x80>
 710:	ldr	r3, [r4, r3]
 714:	str	r2, [r3, #328]	; 0x148
 718:	bl	4d4 <construct_umodebuf@plt>
 71c:	ldr	r3, [pc, #68]	; 768 <um_regonlymsg_modinit+0x80>
 720:	ldr	r3, [r4, r3]
 724:	ldr	r3, [r3, #328]	; 0x148
 728:	cmp	r3, #0
 72c:	bne	748 <um_regonlymsg_modinit+0x60>
 730:	ldr	r3, [pc, #52]	; 76c <um_regonlymsg_modinit+0x84>
 734:	add	r3, pc, r3
 738:	mov	r0, r3
 73c:	bl	48c <ierror@plt>
 740:	mvn	r3, #0
 744:	b	74c <um_regonlymsg_modinit+0x64>
 748:	mov	r3, #0
 74c:	mov	r0, r3
 750:	sub	sp, fp, #12
 754:	ldrd	r4, [sp]
 758:	ldr	fp, [sp, #8]
 75c:	add	sp, sp, #12
 760:	pop	{pc}		; (ldr pc, [sp], #4)
 764:	.word	0x000108fc
 768:	.word	0x00000034
 76c:	.word	0x00000380

00000770 <um_regonlymsg_moddeinit>:
 770:	str	fp, [sp, #-8]!
 774:	str	lr, [sp, #4]
 778:	add	fp, sp, #4
 77c:	ldr	r2, [pc, #40]	; 7ac <um_regonlymsg_moddeinit+0x3c>
 780:	add	r2, pc, r2
 784:	ldr	r3, [pc, #36]	; 7b0 <um_regonlymsg_moddeinit+0x40>
 788:	ldr	r3, [r2, r3]
 78c:	mov	r2, #0
 790:	str	r2, [r3, #328]	; 0x148
 794:	bl	4d4 <construct_umodebuf@plt>
 798:	nop	{0}
 79c:	sub	sp, fp, #4
 7a0:	ldr	fp, [sp]
 7a4:	add	sp, sp, #4
 7a8:	pop	{pc}		; (ldr pc, [sp], #4)
 7ac:	.word	0x00010878
 7b0:	.word	0x00000034

000007b4 <allow_message>:
 7b4:	strd	r4, [sp, #-16]!
 7b8:	str	fp, [sp, #8]
 7bc:	str	lr, [sp, #12]
 7c0:	add	fp, sp, #12
 7c4:	sub	sp, sp, #8
 7c8:	str	r0, [fp, #-16]
 7cc:	str	r1, [fp, #-20]	; 0xffffffec
 7d0:	ldr	ip, [pc, #276]	; 8ec <allow_message+0x138>
 7d4:	add	ip, pc, ip
 7d8:	ldr	r1, [fp, #-20]	; 0xffffffec
 7dc:	ldrd	r0, [r1, #64]	; 0x40
 7e0:	mov	r4, #8192	; 0x2000
 7e4:	mov	r5, #0
 7e8:	and	r2, r0, r4
 7ec:	and	r3, r1, r5
 7f0:	orrs	r3, r2, r3
 7f4:	beq	808 <allow_message+0x54>
 7f8:	ldr	r3, [fp, #-20]	; 0xffffffec
 7fc:	ldrh	r3, [r3, #80]	; 0x50
 800:	cmp	r3, #64	; 0x40
 804:	beq	810 <allow_message+0x5c>
 808:	mov	r3, #1
 80c:	b	8d4 <allow_message+0x120>
 810:	ldr	r3, [fp, #-20]	; 0xffffffec
 814:	ldr	r3, [r3, #56]	; 0x38
 818:	ldr	r2, [pc, #208]	; 8f0 <allow_message+0x13c>
 81c:	ldr	r2, [ip, r2]
 820:	ldr	r2, [r2, #328]	; 0x148
 824:	and	r3, r3, r2
 828:	ldr	r2, [pc, #192]	; 8f0 <allow_message+0x13c>
 82c:	ldr	r2, [ip, r2]
 830:	ldr	r2, [r2, #328]	; 0x148
 834:	cmp	r3, r2
 838:	beq	844 <allow_message+0x90>
 83c:	mov	r3, #1
 840:	b	8d4 <allow_message+0x120>
 844:	ldr	r3, [fp, #-16]
 848:	ldrh	r3, [r3, #80]	; 0x50
 84c:	cmp	r3, #32
 850:	bne	85c <allow_message+0xa8>
 854:	mov	r3, #1
 858:	b	8d4 <allow_message+0x120>
 85c:	ldr	r3, [fp, #-16]
 860:	ldr	r3, [r3, #56]	; 0x38
 864:	and	r3, r3, #4096	; 0x1000
 868:	cmp	r3, #0
 86c:	beq	878 <allow_message+0xc4>
 870:	mov	r3, #1
 874:	b	8d4 <allow_message+0x120>
 878:	ldr	r2, [fp, #-16]
 87c:	ldr	r3, [fp, #-20]	; 0xffffffec
 880:	cmp	r2, r3
 884:	beq	8ac <allow_message+0xf8>
 888:	ldr	r3, [fp, #-20]	; 0xffffffec
 88c:	ldr	r3, [r3, #432]	; 0x1b0
 890:	add	r3, r3, #316	; 0x13c
 894:	mov	r1, r3
 898:	ldr	r0, [fp, #-16]
 89c:	bl	604 <rb_dlinkFind>
 8a0:	mov	r3, r0
 8a4:	cmp	r3, #0
 8a8:	beq	8b4 <allow_message+0x100>
 8ac:	mov	r3, #1
 8b0:	b	8d4 <allow_message+0x120>
 8b4:	ldr	r3, [fp, #-16]
 8b8:	ldr	r3, [r3, #24]
 8bc:	ldrb	r3, [r3, #40]	; 0x28
 8c0:	cmp	r3, #0
 8c4:	beq	8d0 <allow_message+0x11c>
 8c8:	mov	r3, #1
 8cc:	b	8d4 <allow_message+0x120>
 8d0:	mov	r3, #0
 8d4:	mov	r0, r3
 8d8:	sub	sp, fp, #12
 8dc:	ldrd	r4, [sp]
 8e0:	ldr	fp, [sp, #8]
 8e4:	add	sp, sp, #12
 8e8:	pop	{pc}		; (ldr pc, [sp], #4)
 8ec:	.word	0x00010824
 8f0:	.word	0x00000034

000008f4 <h_hdl_invite>:
 8f4:	str	fp, [sp, #-8]!
 8f8:	str	lr, [sp, #4]
 8fc:	add	fp, sp, #4
 900:	sub	sp, sp, #24
 904:	str	r0, [fp, #-24]	; 0xffffffe8
 908:	ldr	r3, [fp, #-24]	; 0xffffffe8
 90c:	str	r3, [fp, #-8]
 910:	ldr	r3, [fp, #-8]
 914:	ldr	r3, [r3]
 918:	str	r3, [fp, #-12]
 91c:	ldr	r3, [fp, #-8]
 920:	ldr	r3, [r3, #12]
 924:	str	r3, [fp, #-16]
 928:	ldr	r3, [fp, #-8]
 92c:	ldr	r3, [r3, #16]
 930:	cmp	r3, #0
 934:	bne	990 <h_hdl_invite+0x9c>
 938:	ldr	r1, [fp, #-16]
 93c:	ldr	r0, [fp, #-12]
 940:	bl	7b4 <allow_message>
 944:	mov	r3, r0
 948:	cmp	r3, #0
 94c:	bne	998 <h_hdl_invite+0xa4>
 950:	ldr	r3, [fp, #-16]
 954:	add	r3, r3, #88	; 0x58
 958:	ldr	r2, [pc, #76]	; 9ac <h_hdl_invite+0xb8>
 95c:	add	r2, pc, r2
 960:	mov	r1, #512	; 0x200
 964:	ldr	r0, [pc, #68]	; 9b0 <h_hdl_invite+0xbc>
 968:	add	r0, pc, r0
 96c:	bl	4bc <snprintf@plt>
 970:	ldr	r3, [fp, #-8]
 974:	movw	r2, #486	; 0x1e6
 978:	str	r2, [r3, #16]
 97c:	ldr	r3, [fp, #-8]
 980:	ldr	r2, [pc, #44]	; 9b4 <h_hdl_invite+0xc0>
 984:	add	r2, pc, r2
 988:	str	r2, [r3, #28]
 98c:	b	99c <h_hdl_invite+0xa8>
 990:	nop	{0}
 994:	b	99c <h_hdl_invite+0xa8>
 998:	nop	{0}
 99c:	sub	sp, fp, #4
 9a0:	ldr	fp, [sp]
 9a4:	add	sp, sp, #4
 9a8:	pop	{pc}		; (ldr pc, [sp], #4)
 9ac:	.word	0x000001ec
 9b0:	.word	0x00010724
 9b4:	.word	0x00010708

000009b8 <h_hdl_privmsg_user>:
 9b8:	str	fp, [sp, #-8]!
 9bc:	str	lr, [sp, #4]
 9c0:	add	fp, sp, #4
 9c4:	sub	sp, sp, #24
 9c8:	str	r0, [fp, #-24]	; 0xffffffe8
 9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9d0:	str	r3, [fp, #-8]
 9d4:	ldr	r3, [fp, #-8]
 9d8:	ldr	r3, [r3, #4]
 9dc:	str	r3, [fp, #-12]
 9e0:	ldr	r3, [fp, #-8]
 9e4:	ldr	r3, [r3, #8]
 9e8:	str	r3, [fp, #-16]
 9ec:	ldr	r3, [fp, #-8]
 9f0:	ldr	r3, [r3, #16]
 9f4:	cmp	r3, #0
 9f8:	bne	a50 <h_hdl_privmsg_user+0x98>
 9fc:	ldr	r1, [fp, #-16]
 a00:	ldr	r0, [fp, #-12]
 a04:	bl	7b4 <allow_message>
 a08:	mov	r3, r0
 a0c:	cmp	r3, #0
 a10:	bne	a58 <h_hdl_privmsg_user+0xa0>
 a14:	ldr	r3, [fp, #-8]
 a18:	ldr	r3, [r3]
 a1c:	cmp	r3, #0
 a20:	beq	a60 <h_hdl_privmsg_user+0xa8>
 a24:	ldr	r3, [fp, #-16]
 a28:	add	r3, r3, #88	; 0x58
 a2c:	ldr	r2, [pc, #64]	; a74 <h_hdl_privmsg_user+0xbc>
 a30:	add	r2, pc, r2
 a34:	movw	r1, #486	; 0x1e6
 a38:	ldr	r0, [fp, #-12]
 a3c:	bl	4b0 <sendto_one_numeric@plt>
 a40:	ldr	r3, [fp, #-8]
 a44:	movw	r2, #486	; 0x1e6
 a48:	str	r2, [r3, #16]
 a4c:	b	a64 <h_hdl_privmsg_user+0xac>
 a50:	nop	{0}
 a54:	b	a64 <h_hdl_privmsg_user+0xac>
 a58:	nop	{0}
 a5c:	b	a64 <h_hdl_privmsg_user+0xac>
 a60:	nop	{0}
 a64:	sub	sp, fp, #4
 a68:	ldr	fp, [sp]
 a6c:	add	sp, sp, #4
 a70:	pop	{pc}		; (ldr pc, [sp], #4)
 a74:	.word	0x00000118

Disassembly of section .fini:

00000a78 <_fini>:
 a78:	push	{r3, lr}
 a7c:	pop	{r3, pc}
