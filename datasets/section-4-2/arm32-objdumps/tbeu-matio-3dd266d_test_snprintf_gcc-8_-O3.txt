
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf32-littlearm


Disassembly of section .init:

00010424 <.init>:
   10424:	push	{r3, lr}
   10428:	bl	10a8c <abort@plt+0x5dc>
   1042c:	pop	{r3, pc}

Disassembly of section .plt:

00010430 <strcmp@plt-0x14>:
   10430:	push	{lr}		; (str lr, [sp, #-4]!)
   10434:	ldr	lr, [pc, #4]	; 10440 <strcmp@plt-0x4>
   10438:	add	lr, pc, lr
   1043c:	ldr	pc, [lr, #8]!
   10440:	andeq	r1, r1, r0, asr #23

00010444 <strcmp@plt>:
   10444:	add	ip, pc, #0, 12
   10448:	add	ip, ip, #69632	; 0x11000
   1044c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010450 <printf@plt>:
   10450:	add	ip, pc, #0, 12
   10454:	add	ip, ip, #69632	; 0x11000
   10458:	ldr	pc, [ip, #3000]!	; 0xbb8

0001045c <memcpy@plt>:
   1045c:	add	ip, pc, #0, 12
   10460:	add	ip, ip, #69632	; 0x11000
   10464:	ldr	pc, [ip, #2992]!	; 0xbb0

00010468 <pow@plt>:
   10468:	add	ip, pc, #0, 12
   1046c:	add	ip, ip, #69632	; 0x11000
   10470:	ldr	pc, [ip, #2984]!	; 0xba8

00010474 <puts@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #69632	; 0x11000
   1047c:	ldr	pc, [ip, #2976]!	; 0xba0

00010480 <__libc_start_main@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #69632	; 0x11000
   10488:	ldr	pc, [ip, #2968]!	; 0xb98

0001048c <__gmon_start__@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #69632	; 0x11000
   10494:	ldr	pc, [ip, #2960]!	; 0xb90

00010498 <snprintf@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #69632	; 0x11000
   104a0:	ldr	pc, [ip, #2952]!	; 0xb88

000104a4 <sprintf@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #69632	; 0x11000
   104ac:	ldr	pc, [ip, #2944]!	; 0xb80

000104b0 <abort@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #69632	; 0x11000
   104b8:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000104c0 <.text>:
   104c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   104c4:	mov	r2, #112	; 0x70
   104c8:	strd	r6, [sp, #8]
   104cc:	strd	sl, [sp, #24]
   104d0:	movw	sl, #3000	; 0xbb8
   104d4:	movt	sl, #1
   104d8:	ldrd	r6, [sl]
   104dc:	add	r1, sl, #64	; 0x40
   104e0:	strd	r8, [sp, #16]
   104e4:	ldrd	r4, [sl, #8]
   104e8:	str	lr, [sp, #32]
   104ec:	vpush	{d8-d10}
   104f0:	sub	sp, sp, #2384	; 0x950
   104f4:	sub	sp, sp, #12
   104f8:	ldrd	r8, [sl, #16]
   104fc:	add	r0, sp, #232	; 0xe8
   10500:	strd	r6, [sp, #168]	; 0xa8
   10504:	strd	r4, [sp, #176]	; 0xb0
   10508:	ldrd	r6, [sl, #24]
   1050c:	strd	r8, [sp, #184]	; 0xb8
   10510:	ldrd	r4, [sl, #32]
   10514:	ldrd	r8, [sl, #40]	; 0x28
   10518:	strd	r6, [sp, #192]	; 0xc0
   1051c:	ldrd	r6, [sl, #48]	; 0x30
   10520:	strd	r4, [sp, #200]	; 0xc8
   10524:	ldrd	r4, [sl, #56]	; 0x38
   10528:	strd	r8, [sp, #208]	; 0xd0
   1052c:	strd	r6, [sp, #216]	; 0xd8
   10530:	add	r6, sp, #88	; 0x58
   10534:	strd	r4, [sp, #224]	; 0xe0
   10538:	bl	1045c <memcpy@plt>
   1053c:	ldrd	r2, [sl, #184]	; 0xb8
   10540:	add	lr, sl, #288	; 0x120
   10544:	add	ip, sl, #244	; 0xf4
   10548:	ldrd	r0, [lr]
   1054c:	ldr	r5, [sl, #284]	; 0x11c
   10550:	strd	r2, [r6], #-8
   10554:	ldrd	r2, [sl, #192]	; 0xc0
   10558:	str	r6, [sp, #24]
   1055c:	strd	r0, [sp, #36]	; 0x24
   10560:	ldr	r1, [sl, #216]	; 0xd8
   10564:	str	r5, [sp, #164]	; 0xa4
   10568:	strd	r2, [r6, #16]
   1056c:	ldrd	r2, [sl, #200]	; 0xc8
   10570:	ldrd	r4, [sl, #244]	; 0xf4
   10574:	strd	r2, [r6, #24]
   10578:	ldrd	r2, [sl, #176]	; 0xb0
   1057c:	str	r1, [r6, #40]	; 0x28
   10580:	ldrd	r0, [sl, #208]	; 0xd0
   10584:	strd	r2, [sp, #80]	; 0x50
   10588:	ldrd	r2, [sl, #228]	; 0xe4
   1058c:	strd	r0, [r6, #32]
   10590:	ldrd	r0, [sl, #252]	; 0xfc
   10594:	strd	r2, [sp, #64]	; 0x40
   10598:	ldrd	r2, [sl, #220]	; 0xdc
   1059c:	strd	r2, [sp, #56]	; 0x38
   105a0:	ldrd	r2, [ip, #16]
   105a4:	strd	r4, [sp, #124]	; 0x7c
   105a8:	strd	r0, [sp, #132]	; 0x84
   105ac:	ldrd	r4, [ip, #24]
   105b0:	strd	r2, [sp, #140]	; 0x8c
   105b4:	ldrd	r2, [ip, #32]
   105b8:	ldrd	r0, [sl, #236]	; 0xec
   105bc:	strd	r0, [sp, #72]	; 0x48
   105c0:	movw	r0, #3308	; 0xcec
   105c4:	movt	r0, #1
   105c8:	strd	r4, [sp, #148]	; 0x94
   105cc:	strd	r2, [sp, #156]	; 0x9c
   105d0:	ldrd	r2, [lr, #8]
   105d4:	ldr	r1, [sl, #304]	; 0x130
   105d8:	strd	r2, [sp, #44]	; 0x2c
   105dc:	str	r1, [sp, #52]	; 0x34
   105e0:	bl	10474 <puts@plt>
   105e4:	ldr	r7, [sp, #168]	; 0xa8
   105e8:	cmp	r7, #0
   105ec:	beq	10a24 <abort@plt+0x574>
   105f0:	add	r3, sp, #168	; 0xa8
   105f4:	vldr	d9, [sp, #232]	; 0xe8
   105f8:	mov	r6, #0
   105fc:	add	r5, sp, #1360	; 0x550
   10600:	mov	fp, r6
   10604:	str	r3, [sp, #20]
   10608:	movw	r3, #3364	; 0xd24
   1060c:	movt	r3, #1
   10610:	add	r4, sp, #344	; 0x158
   10614:	add	r5, r5, #8
   10618:	str	r3, [sp, #16]
   1061c:	movw	r3, #3436	; 0xd6c
   10620:	movt	r3, #1
   10624:	str	r3, [sp, #12]
   10628:	vcmp.f64	d9, #0.0
   1062c:	vmrs	APSR_nzcv, fpscr
   10630:	vmovne.f64	d8, d9
   10634:	addne	sl, sp, #240	; 0xf0
   10638:	beq	106c4 <abort@plt+0x214>
   1063c:	mov	r1, #0
   10640:	mov	r2, r7
   10644:	vstr	d8, [sp]
   10648:	mov	r0, r1
   1064c:	bl	10498 <snprintf@plt>
   10650:	mov	r9, r0
   10654:	mov	r2, r7
   10658:	vstr	d8, [sp]
   1065c:	mov	r1, #1024	; 0x400
   10660:	mov	r0, r4
   10664:	bl	10498 <snprintf@plt>
   10668:	mov	r8, r0
   1066c:	vmov	r2, r3, d8
   10670:	mov	r1, r7
   10674:	mov	r0, r5
   10678:	bl	104a4 <sprintf@plt>
   1067c:	mov	r1, r5
   10680:	mov	r0, r4
   10684:	bl	10444 <strcmp@plt>
   10688:	cmp	r0, #0
   1068c:	bne	10998 <abort@plt+0x4e8>
   10690:	cmp	r9, r8
   10694:	mov	r3, r7
   10698:	ldr	r0, [sp, #12]
   1069c:	mov	r2, r8
   106a0:	mov	r1, r9
   106a4:	beq	10980 <abort@plt+0x4d0>
   106a8:	bl	10450 <printf@plt>
   106ac:	vldmia	sl!, {d8}
   106b0:	add	fp, fp, #1
   106b4:	add	r6, r6, #1
   106b8:	vcmp.f64	d8, #0.0
   106bc:	vmrs	APSR_nzcv, fpscr
   106c0:	bne	1063c <abort@plt+0x18c>
   106c4:	ldr	r3, [sp, #20]
   106c8:	ldr	r7, [r3, #4]!
   106cc:	cmp	r7, #0
   106d0:	str	r3, [sp, #20]
   106d4:	bne	10628 <abort@plt+0x178>
   106d8:	ldr	r8, [sp, #80]	; 0x50
   106dc:	cmp	r8, #0
   106e0:	beq	107c8 <abort@plt+0x318>
   106e4:	ldr	r3, [sp, #24]
   106e8:	str	fp, [sp, #12]
   106ec:	str	r3, [sp, #20]
   106f0:	movw	r3, #3364	; 0xd24
   106f4:	movt	r3, #1
   106f8:	str	r3, [sp, #28]
   106fc:	movw	r3, #3436	; 0xd6c
   10700:	movt	r3, #1
   10704:	str	r3, [sp, #16]
   10708:	ldr	r3, [sp, #56]	; 0x38
   1070c:	str	r3, [sp, #24]
   10710:	ldr	r3, [sp, #24]
   10714:	cmp	r3, #0
   10718:	movne	r7, r3
   1071c:	addne	fp, sp, #56	; 0x38
   10720:	beq	107b0 <abort@plt+0x300>
   10724:	mov	r1, #0
   10728:	mov	r3, r7
   1072c:	mov	r0, r1
   10730:	mov	r2, r8
   10734:	bl	10498 <snprintf@plt>
   10738:	mov	sl, r0
   1073c:	mov	r3, r7
   10740:	mov	r2, r8
   10744:	mov	r1, #1024	; 0x400
   10748:	mov	r0, r4
   1074c:	bl	10498 <snprintf@plt>
   10750:	mov	r9, r0
   10754:	mov	r2, r7
   10758:	mov	r1, r8
   1075c:	mov	r0, r5
   10760:	bl	104a4 <sprintf@plt>
   10764:	mov	r1, r5
   10768:	mov	r0, r4
   1076c:	bl	10444 <strcmp@plt>
   10770:	cmp	r0, #0
   10774:	bne	109dc <abort@plt+0x52c>
   10778:	cmp	sl, r9
   1077c:	mov	r3, r8
   10780:	ldr	r0, [sp, #16]
   10784:	mov	r2, r9
   10788:	mov	r1, sl
   1078c:	beq	109b4 <abort@plt+0x504>
   10790:	bl	10450 <printf@plt>
   10794:	ldr	r3, [sp, #12]
   10798:	add	r6, r6, #1
   1079c:	ldr	r7, [fp, #4]!
   107a0:	add	r3, r3, #1
   107a4:	cmp	r7, #0
   107a8:	str	r3, [sp, #12]
   107ac:	bne	10724 <abort@plt+0x274>
   107b0:	ldr	r3, [sp, #20]
   107b4:	ldr	r8, [r3, #4]!
   107b8:	cmp	r8, #0
   107bc:	str	r3, [sp, #20]
   107c0:	bne	10710 <abort@plt+0x260>
   107c4:	ldr	fp, [sp, #12]
   107c8:	ldr	r8, [sp, #124]	; 0x7c
   107cc:	cmp	r8, #0
   107d0:	beq	108b8 <abort@plt+0x408>
   107d4:	add	r3, sp, #124	; 0x7c
   107d8:	str	fp, [sp, #12]
   107dc:	str	r3, [sp, #20]
   107e0:	movw	r3, #3364	; 0xd24
   107e4:	movt	r3, #1
   107e8:	str	r3, [sp, #28]
   107ec:	movw	r3, #3436	; 0xd6c
   107f0:	movt	r3, #1
   107f4:	str	r3, [sp, #16]
   107f8:	ldr	r3, [sp, #36]	; 0x24
   107fc:	str	r3, [sp, #24]
   10800:	ldr	r3, [sp, #24]
   10804:	cmp	r3, #0
   10808:	movne	r7, r3
   1080c:	addne	fp, sp, #40	; 0x28
   10810:	beq	108a0 <abort@plt+0x3f0>
   10814:	mov	r1, #0
   10818:	mov	r3, r7
   1081c:	mov	r0, r1
   10820:	mov	r2, r8
   10824:	bl	10498 <snprintf@plt>
   10828:	mov	sl, r0
   1082c:	mov	r3, r7
   10830:	mov	r2, r8
   10834:	mov	r1, #1024	; 0x400
   10838:	mov	r0, r4
   1083c:	bl	10498 <snprintf@plt>
   10840:	mov	r9, r0
   10844:	mov	r2, r7
   10848:	mov	r1, r8
   1084c:	mov	r0, r5
   10850:	bl	104a4 <sprintf@plt>
   10854:	mov	r1, r5
   10858:	mov	r0, r4
   1085c:	bl	10444 <strcmp@plt>
   10860:	cmp	r0, #0
   10864:	bne	10a00 <abort@plt+0x550>
   10868:	cmp	sl, r9
   1086c:	mov	r3, r8
   10870:	ldr	r0, [sp, #16]
   10874:	mov	r2, r9
   10878:	mov	r1, sl
   1087c:	beq	109c8 <abort@plt+0x518>
   10880:	bl	10450 <printf@plt>
   10884:	ldr	r3, [sp, #12]
   10888:	add	r6, r6, #1
   1088c:	ldr	r7, [fp], #4
   10890:	add	r3, r3, #1
   10894:	cmp	r7, #0
   10898:	str	r3, [sp, #12]
   1089c:	bne	10814 <abort@plt+0x364>
   108a0:	ldr	r3, [sp, #20]
   108a4:	ldr	r8, [r3, #4]!
   108a8:	cmp	r8, #0
   108ac:	str	r3, [sp, #20]
   108b0:	bne	10800 <abort@plt+0x350>
   108b4:	ldr	fp, [sp, #12]
   108b8:	mov	r2, r6
   108bc:	mov	r1, fp
   108c0:	movw	r0, #3468	; 0xd8c
   108c4:	movt	r0, #1
   108c8:	vldr	d10, [pc, #368]	; 10a40 <abort@plt+0x590>
   108cc:	bl	10450 <printf@plt>
   108d0:	movw	r0, #3496	; 0xda8
   108d4:	movt	r0, #1
   108d8:	vldr	d9, [pc, #360]	; 10a48 <abort@plt+0x598>
   108dc:	movw	r7, #3532	; 0xdcc
   108e0:	movt	r7, #1
   108e4:	mov	r6, #0
   108e8:	bl	10474 <puts@plt>
   108ec:	b	108fc <abort@plt+0x44c>
   108f0:	add	r6, r6, #1
   108f4:	cmp	r6, #100	; 0x64
   108f8:	beq	10958 <abort@plt+0x4a8>
   108fc:	vmov	s15, r6
   10900:	vmov.f64	d0, d10
   10904:	vcvt.f64.s32	d1, s15
   10908:	bl	10468 <pow@plt>
   1090c:	vmul.f64	d8, d0, d9
   10910:	mov	r2, r7
   10914:	mov	r1, #1024	; 0x400
   10918:	mov	r0, r4
   1091c:	vstr	d8, [sp]
   10920:	bl	10498 <snprintf@plt>
   10924:	vmov	r2, r3, d8
   10928:	mov	r1, r7
   1092c:	mov	r0, r5
   10930:	bl	104a4 <sprintf@plt>
   10934:	mov	r1, r5
   10938:	mov	r0, r4
   1093c:	bl	10444 <strcmp@plt>
   10940:	cmp	r0, #0
   10944:	beq	108f0 <abort@plt+0x440>
   10948:	movw	r0, #3540	; 0xdd4
   1094c:	movt	r0, #1
   10950:	sub	r1, r6, #1
   10954:	bl	10450 <printf@plt>
   10958:	mov	r0, #0
   1095c:	add	sp, sp, #2384	; 0x950
   10960:	add	sp, sp, #12
   10964:	vpop	{d8-d10}
   10968:	ldrd	r4, [sp]
   1096c:	ldrd	r6, [sp, #8]
   10970:	ldrd	r8, [sp, #16]
   10974:	ldrd	sl, [sp, #24]
   10978:	add	sp, sp, #32
   1097c:	pop	{pc}		; (ldr pc, [sp], #4)
   10980:	vldmia	sl!, {d8}
   10984:	add	r6, r6, #1
   10988:	vcmp.f64	d8, #0.0
   1098c:	vmrs	APSR_nzcv, fpscr
   10990:	bne	1063c <abort@plt+0x18c>
   10994:	b	106c4 <abort@plt+0x214>
   10998:	mov	r3, r5
   1099c:	mov	r2, r4
   109a0:	ldr	r0, [sp, #16]
   109a4:	mov	r1, r7
   109a8:	add	fp, fp, #1
   109ac:	bl	10450 <printf@plt>
   109b0:	b	10690 <abort@plt+0x1e0>
   109b4:	ldr	r7, [fp, #4]!
   109b8:	add	r6, r6, #1
   109bc:	cmp	r7, #0
   109c0:	bne	10724 <abort@plt+0x274>
   109c4:	b	107b0 <abort@plt+0x300>
   109c8:	ldr	r7, [fp], #4
   109cc:	add	r6, r6, #1
   109d0:	cmp	r7, #0
   109d4:	bne	10814 <abort@plt+0x364>
   109d8:	b	108a0 <abort@plt+0x3f0>
   109dc:	ldr	r3, [sp, #12]
   109e0:	mov	r2, r4
   109e4:	mov	r1, r8
   109e8:	ldr	r0, [sp, #28]
   109ec:	add	r3, r3, #1
   109f0:	str	r3, [sp, #12]
   109f4:	mov	r3, r5
   109f8:	bl	10450 <printf@plt>
   109fc:	b	10778 <abort@plt+0x2c8>
   10a00:	ldr	r3, [sp, #12]
   10a04:	mov	r2, r4
   10a08:	mov	r1, r8
   10a0c:	ldr	r0, [sp, #28]
   10a10:	add	r3, r3, #1
   10a14:	str	r3, [sp, #12]
   10a18:	mov	r3, r5
   10a1c:	bl	10450 <printf@plt>
   10a20:	b	10868 <abort@plt+0x3b8>
   10a24:	add	r5, sp, #1360	; 0x550
   10a28:	mov	r6, r7
   10a2c:	add	r4, sp, #344	; 0x158
   10a30:	mov	fp, r7
   10a34:	add	r5, r5, #8
   10a38:	b	106d8 <abort@plt+0x228>
   10a3c:	nop	{0}
   10a40:	andeq	r0, r0, r0
   10a44:	eormi	r0, r4, r0
   10a48:	smlsldcc	pc, r6, pc, r6	; <UNPREDICTABLE>
   10a4c:	svccc	0x00bf9add
   10a50:	mov	fp, #0
   10a54:	mov	lr, #0
   10a58:	pop	{r1}		; (ldr r1, [sp], #4)
   10a5c:	mov	r2, sp
   10a60:	push	{r2}		; (str r2, [sp, #-4]!)
   10a64:	push	{r0}		; (str r0, [sp, #-4]!)
   10a68:	ldr	ip, [pc, #16]	; 10a80 <abort@plt+0x5d0>
   10a6c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a70:	ldr	r0, [pc, #12]	; 10a84 <abort@plt+0x5d4>
   10a74:	ldr	r3, [pc, #12]	; 10a88 <abort@plt+0x5d8>
   10a78:	bl	10480 <__libc_start_main@plt>
   10a7c:	bl	104b0 <abort@plt>
   10a80:	andeq	r0, r1, r0, lsr #23
   10a84:	andeq	r0, r1, r0, asr #9
   10a88:	andeq	r0, r1, r0, asr #22
   10a8c:	ldr	r3, [pc, #20]	; 10aa8 <abort@plt+0x5f8>
   10a90:	ldr	r2, [pc, #20]	; 10aac <abort@plt+0x5fc>
   10a94:	add	r3, pc, r3
   10a98:	ldr	r2, [r3, r2]
   10a9c:	cmp	r2, #0
   10aa0:	bxeq	lr
   10aa4:	b	1048c <__gmon_start__@plt>
   10aa8:	andeq	r1, r1, r4, ror #10
   10aac:	andeq	r0, r0, r4, lsr r0
   10ab0:	ldr	r0, [pc, #24]	; 10ad0 <abort@plt+0x620>
   10ab4:	ldr	r3, [pc, #24]	; 10ad4 <abort@plt+0x624>
   10ab8:	cmp	r3, r0
   10abc:	bxeq	lr
   10ac0:	ldr	r3, [pc, #16]	; 10ad8 <abort@plt+0x628>
   10ac4:	cmp	r3, #0
   10ac8:	bxeq	lr
   10acc:	bx	r3
   10ad0:	andeq	r2, r2, r0, asr #32
   10ad4:	andeq	r2, r2, r0, asr #32
   10ad8:	andeq	r0, r0, r0
   10adc:	ldr	r0, [pc, #36]	; 10b08 <abort@plt+0x658>
   10ae0:	ldr	r1, [pc, #36]	; 10b0c <abort@plt+0x65c>
   10ae4:	sub	r1, r1, r0
   10ae8:	asr	r1, r1, #2
   10aec:	add	r1, r1, r1, lsr #31
   10af0:	asrs	r1, r1, #1
   10af4:	bxeq	lr
   10af8:	ldr	r3, [pc, #16]	; 10b10 <abort@plt+0x660>
   10afc:	cmp	r3, #0
   10b00:	bxeq	lr
   10b04:	bx	r3
   10b08:	andeq	r2, r2, r0, asr #32
   10b0c:	andeq	r2, r2, r0, asr #32
   10b10:	andeq	r0, r0, r0
   10b14:	push	{r4, lr}
   10b18:	ldr	r4, [pc, #24]	; 10b38 <abort@plt+0x688>
   10b1c:	ldrb	r3, [r4]
   10b20:	cmp	r3, #0
   10b24:	popne	{r4, pc}
   10b28:	bl	10ab0 <abort@plt+0x600>
   10b2c:	mov	r3, #1
   10b30:	strb	r3, [r4]
   10b34:	pop	{r4, pc}
   10b38:	andeq	r2, r2, r0, asr #32
   10b3c:	b	10adc <abort@plt+0x62c>
   10b40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b44:	mov	r7, r0
   10b48:	ldr	r6, [pc, #72]	; 10b98 <abort@plt+0x6e8>
   10b4c:	ldr	r5, [pc, #72]	; 10b9c <abort@plt+0x6ec>
   10b50:	add	r6, pc, r6
   10b54:	add	r5, pc, r5
   10b58:	sub	r6, r6, r5
   10b5c:	mov	r8, r1
   10b60:	mov	r9, r2
   10b64:	bl	10424 <strcmp@plt-0x20>
   10b68:	asrs	r6, r6, #2
   10b6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b70:	mov	r4, #0
   10b74:	add	r4, r4, #1
   10b78:	ldr	r3, [r5], #4
   10b7c:	mov	r2, r9
   10b80:	mov	r1, r8
   10b84:	mov	r0, r7
   10b88:	blx	r3
   10b8c:	cmp	r6, r4
   10b90:	bne	10b74 <abort@plt+0x6c4>
   10b94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b98:			; <UNDEFINED> instruction: 0x000113b4
   10b9c:	andeq	r1, r1, ip, lsr #7
   10ba0:	bx	lr

Disassembly of section .fini:

00010ba4 <.fini>:
   10ba4:	push	{r3, lr}
   10ba8:	pop	{r3, pc}
