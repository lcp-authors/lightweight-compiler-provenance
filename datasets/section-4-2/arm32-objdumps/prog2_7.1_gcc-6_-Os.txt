
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10f20 <_start@@Base+0x3c>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <strcmp@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <strcmp@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <strcmp@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <printf@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <fopen@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #69632	; 0x11000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <free@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #69632	; 0x11000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <fgets@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #69632	; 0x11000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <realloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #69632	; 0x11000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <strcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #69632	; 0x11000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <puts@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #69632	; 0x11000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <malloc@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #69632	; 0x11000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <__libc_start_main@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #69632	; 0x11000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <__gmon_start__@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #69632	; 0x11000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <strlen@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #69632	; 0x11000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <putchar@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #69632	; 0x11000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <fclose@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #69632	; 0x11000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <strtok@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #69632	; 0x11000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #69632	; 0x11000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

Disassembly of section .text:

00010d2c <main@@Base>:
   10d2c:	push	{r4, r5, r6, r7, lr}
   10d30:	sub	sp, sp, #148	; 0x94
   10d34:	ldr	r0, [pc, #380]	; 10eb8 <main@@Base+0x18c>
   10d38:	bl	10cc0 <puts@plt>
   10d3c:	ldr	lr, [pc, #376]	; 10ebc <main@@Base+0x190>
   10d40:	add	ip, sp, #4
   10d44:	mov	r4, #0
   10d48:	ldm	lr!, {r0, r1, r2, r3}
   10d4c:	add	r6, sp, #4
   10d50:	stmia	ip!, {r0, r1, r2, r3}
   10d54:	ldm	lr!, {r0, r1, r2, r3}
   10d58:	stmia	ip!, {r0, r1, r2, r3}
   10d5c:	ldm	lr, {r0, r1}
   10d60:	stm	ip, {r0, r1}
   10d64:	bl	11614 <bst_nova@@Base>
   10d68:	mov	r5, r0
   10d6c:	ldr	r1, [r6, r4, lsl #2]
   10d70:	mov	r0, r5
   10d74:	add	r4, r4, #1
   10d78:	bl	117ac <bst_insere@@Base>
   10d7c:	cmp	r4, #10
   10d80:	bne	10d6c <main@@Base+0x40>
   10d84:	ldr	r0, [r5]
   10d88:	bl	11950 <bst_altura@@Base>
   10d8c:	ldr	r6, [pc, #300]	; 10ec0 <main@@Base+0x194>
   10d90:	mov	r7, #100	; 0x64
   10d94:	mov	r1, r0
   10d98:	ldr	r0, [pc, #292]	; 10ec4 <main@@Base+0x198>
   10d9c:	bl	10c78 <printf@plt>
   10da0:	mov	r0, r5
   10da4:	bl	119e4 <bst_imprime@@Base>
   10da8:	ldr	r0, [pc, #280]	; 10ec8 <main@@Base+0x19c>
   10dac:	bl	10cc0 <puts@plt>
   10db0:	bl	1100c <avl_nova@@Base>
   10db4:	ldr	r1, [pc, #272]	; 10ecc <main@@Base+0x1a0>
   10db8:	mov	r4, r0
   10dbc:	ldr	r0, [pc, #268]	; 10ed0 <main@@Base+0x1a4>
   10dc0:	bl	10c84 <fopen@plt>
   10dc4:	mov	r5, r0
   10dc8:	mov	r2, r5
   10dcc:	mov	r1, r7
   10dd0:	add	r0, sp, #44	; 0x2c
   10dd4:	bl	10c9c <fgets@plt>
   10dd8:	cmp	r0, #0
   10ddc:	bne	10e60 <main@@Base+0x134>
   10de0:	mov	r0, r5
   10de4:	bl	10d08 <fclose@plt>
   10de8:	ldr	r1, [pc, #228]	; 10ed4 <main@@Base+0x1a8>
   10dec:	mov	r0, r4
   10df0:	bl	1121c <avl_pesquisa@@Base>
   10df4:	cmp	r0, #0
   10df8:	beq	10e0c <main@@Base+0xe0>
   10dfc:	ldr	r2, [r0, #16]
   10e00:	ldr	r1, [r0]
   10e04:	ldr	r0, [pc, #204]	; 10ed8 <main@@Base+0x1ac>
   10e08:	bl	10c78 <printf@plt>
   10e0c:	ldr	r1, [pc, #200]	; 10edc <main@@Base+0x1b0>
   10e10:	mov	r0, r4
   10e14:	bl	1121c <avl_pesquisa@@Base>
   10e18:	cmp	r0, #0
   10e1c:	beq	10e30 <main@@Base+0x104>
   10e20:	ldr	r2, [r0, #16]
   10e24:	ldr	r1, [r0]
   10e28:	ldr	r0, [pc, #168]	; 10ed8 <main@@Base+0x1ac>
   10e2c:	bl	10c78 <printf@plt>
   10e30:	ldr	r1, [pc, #168]	; 10ee0 <main@@Base+0x1b4>
   10e34:	mov	r0, r4
   10e38:	bl	1121c <avl_pesquisa@@Base>
   10e3c:	cmp	r0, #0
   10e40:	beq	10e54 <main@@Base+0x128>
   10e44:	ldr	r2, [r0, #16]
   10e48:	ldr	r1, [r0]
   10e4c:	ldr	r0, [pc, #132]	; 10ed8 <main@@Base+0x1ac>
   10e50:	bl	10c78 <printf@plt>
   10e54:	mov	r0, #0
   10e58:	add	sp, sp, #148	; 0x94
   10e5c:	pop	{r4, r5, r6, r7, pc}
   10e60:	mov	r1, r6
   10e64:	add	r0, sp, #44	; 0x2c
   10e68:	bl	10d14 <strtok@plt>
   10e6c:	mov	r1, r0
   10e70:	add	r0, sp, #44	; 0x2c
   10e74:	bl	10cb4 <strcpy@plt>
   10e78:	mov	r1, r6
   10e7c:	mov	r0, #0
   10e80:	bl	10d14 <strtok@plt>
   10e84:	mov	r1, r0
   10e88:	add	r0, sp, #44	; 0x2c
   10e8c:	bl	10cb4 <strcpy@plt>
   10e90:	add	r0, sp, #44	; 0x2c
   10e94:	bl	10cf0 <strlen@plt>
   10e98:	add	r3, sp, #144	; 0x90
   10e9c:	add	r1, sp, #44	; 0x2c
   10ea0:	add	r0, r3, r0
   10ea4:	mov	r3, #0
   10ea8:	strb	r3, [r0, #-101]	; 0xffffff9b
   10eac:	mov	r0, r4
   10eb0:	bl	1133c <avl_insere@@Base>
   10eb4:	b	10dc8 <main@@Base+0x9c>
   10eb8:	andeq	r1, r1, r8, lsr #21
   10ebc:	andeq	r1, r1, r0, lsl #21
   10ec0:	ldrdeq	r1, [r1], -r2
   10ec4:	andeq	r1, r1, ip, lsr #21
   10ec8:	andeq	r1, r1, r0, asr #21
   10ecc:	andeq	r1, r1, r4, asr #21
   10ed0:	andeq	r1, r1, r6, asr #21
   10ed4:	ldrdeq	r1, [r1], -r4
   10ed8:	ldrdeq	r1, [r1], -sp
   10edc:	andeq	r1, r1, r6, ror #21
   10ee0:	andeq	r1, r1, ip, ror #21

00010ee4 <_start@@Base>:
   10ee4:	mov	fp, #0
   10ee8:	mov	lr, #0
   10eec:	pop	{r1}		; (ldr r1, [sp], #4)
   10ef0:	mov	r2, sp
   10ef4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ef8:	push	{r0}		; (str r0, [sp, #-4]!)
   10efc:	ldr	ip, [pc, #16]	; 10f14 <_start@@Base+0x30>
   10f00:	push	{ip}		; (str ip, [sp, #-4]!)
   10f04:	ldr	r0, [pc, #12]	; 10f18 <_start@@Base+0x34>
   10f08:	ldr	r3, [pc, #12]	; 10f1c <_start@@Base+0x38>
   10f0c:	bl	10cd8 <__libc_start_main@plt>
   10f10:	bl	10d20 <abort@plt>
   10f14:	andeq	r1, r1, r0, ror sl
   10f18:	andeq	r0, r1, ip, lsr #26
   10f1c:	andeq	r1, r1, r0, lsl sl
   10f20:	ldr	r3, [pc, #20]	; 10f3c <_start@@Base+0x58>
   10f24:	ldr	r2, [pc, #20]	; 10f40 <_start@@Base+0x5c>
   10f28:	add	r3, pc, r3
   10f2c:	ldr	r2, [r3, r2]
   10f30:	cmp	r2, #0
   10f34:	bxeq	lr
   10f38:	b	10ce4 <__gmon_start__@plt>
   10f3c:	ldrdeq	r1, [r1], -r0
   10f40:	andeq	r0, r0, ip, asr #32
   10f44:	ldr	r3, [pc, #28]	; 10f68 <_start@@Base+0x84>
   10f48:	ldr	r0, [pc, #28]	; 10f6c <_start@@Base+0x88>
   10f4c:	sub	r3, r3, r0
   10f50:	cmp	r3, #6
   10f54:	bxls	lr
   10f58:	ldr	r3, [pc, #16]	; 10f70 <_start@@Base+0x8c>
   10f5c:	cmp	r3, #0
   10f60:	bxeq	lr
   10f64:	bx	r3
   10f68:	andeq	r2, r2, fp, asr r0
   10f6c:	andeq	r2, r2, r8, asr r0
   10f70:	andeq	r0, r0, r0
   10f74:	ldr	r1, [pc, #36]	; 10fa0 <_start@@Base+0xbc>
   10f78:	ldr	r0, [pc, #36]	; 10fa4 <_start@@Base+0xc0>
   10f7c:	sub	r1, r1, r0
   10f80:	asr	r1, r1, #2
   10f84:	add	r1, r1, r1, lsr #31
   10f88:	asrs	r1, r1, #1
   10f8c:	bxeq	lr
   10f90:	ldr	r3, [pc, #16]	; 10fa8 <_start@@Base+0xc4>
   10f94:	cmp	r3, #0
   10f98:	bxeq	lr
   10f9c:	bx	r3
   10fa0:	andeq	r2, r2, r8, asr r0
   10fa4:	andeq	r2, r2, r8, asr r0
   10fa8:	andeq	r0, r0, r0
   10fac:	push	{r4, lr}
   10fb0:	ldr	r4, [pc, #24]	; 10fd0 <_start@@Base+0xec>
   10fb4:	ldrb	r3, [r4]
   10fb8:	cmp	r3, #0
   10fbc:	popne	{r4, pc}
   10fc0:	bl	10f44 <_start@@Base+0x60>
   10fc4:	mov	r3, #1
   10fc8:	strb	r3, [r4]
   10fcc:	pop	{r4, pc}
   10fd0:	andeq	r2, r2, r8, asr r0
   10fd4:	ldr	r0, [pc, #40]	; 11004 <_start@@Base+0x120>
   10fd8:	ldr	r3, [r0]
   10fdc:	cmp	r3, #0
   10fe0:	bne	10fe8 <_start@@Base+0x104>
   10fe4:	b	10f74 <_start@@Base+0x90>
   10fe8:	ldr	r3, [pc, #24]	; 11008 <_start@@Base+0x124>
   10fec:	cmp	r3, #0
   10ff0:	beq	10fe4 <_start@@Base+0x100>
   10ff4:	push	{r4, lr}
   10ff8:	blx	r3
   10ffc:	pop	{r4, lr}
   11000:	b	10f74 <_start@@Base+0x90>
   11004:	andeq	r1, r2, r4, lsl pc
   11008:	andeq	r0, r0, r0

0001100c <avl_nova@@Base>:
   1100c:	push	{r4, lr}
   11010:	mov	r0, #4
   11014:	bl	10ccc <malloc@plt>
   11018:	cmp	r0, #0
   1101c:	movne	r3, #0
   11020:	strne	r3, [r0]
   11024:	pop	{r4, pc}

00011028 <avl_min@@Base>:
   11028:	cmp	r0, #0
   1102c:	ldrne	r3, [r0]
   11030:	bne	1103c <avl_min@@Base+0x14>
   11034:	bx	lr
   11038:	mov	r3, r2
   1103c:	ldr	r2, [r3, #4]
   11040:	cmp	r2, #0
   11044:	bne	11038 <avl_min@@Base+0x10>
   11048:	ldr	r0, [r3]
   1104c:	bx	lr

00011050 <avl_max@@Base>:
   11050:	cmp	r0, #0
   11054:	ldrne	r3, [r0]
   11058:	bne	11064 <avl_max@@Base+0x14>
   1105c:	bx	lr
   11060:	mov	r3, r2
   11064:	ldr	r2, [r3, #8]
   11068:	cmp	r2, #0
   1106c:	bne	11060 <avl_max@@Base+0x10>
   11070:	ldr	r0, [r3]
   11074:	bx	lr

00011078 <avl_altura@@Base>:
   11078:	cmp	r0, #0
   1107c:	ldrne	r0, [r0, #12]
   11080:	mvneq	r0, #0
   11084:	bx	lr

00011088 <max@@Base>:
   11088:	cmp	r1, r0
   1108c:	movge	r0, r1
   11090:	bx	lr

00011094 <avl_novo_no@@Base>:
   11094:	push	{r4, r5, r6, lr}
   11098:	mov	r5, r0
   1109c:	mov	r0, #20
   110a0:	bl	10ccc <malloc@plt>
   110a4:	mov	r4, r0
   110a8:	mov	r0, r5
   110ac:	bl	10cf0 <strlen@plt>
   110b0:	add	r0, r0, #1
   110b4:	bl	10ccc <malloc@plt>
   110b8:	mov	r1, r5
   110bc:	str	r0, [r4]
   110c0:	bl	10cb4 <strcpy@plt>
   110c4:	mov	r3, #0
   110c8:	str	r3, [r4, #4]
   110cc:	str	r3, [r4, #8]
   110d0:	str	r3, [r4, #12]
   110d4:	mov	r3, #1
   110d8:	str	r3, [r4, #16]
   110dc:	mov	r0, r4
   110e0:	pop	{r4, r5, r6, pc}

000110e4 <roda_direita@@Base>:
   110e4:	ldr	r1, [r0, #4]
   110e8:	ldr	r3, [r1, #8]
   110ec:	str	r0, [r1, #8]
   110f0:	cmp	r3, #0
   110f4:	str	r3, [r0, #4]
   110f8:	ldrne	r2, [r3, #12]
   110fc:	ldr	r3, [r0, #8]
   11100:	mvneq	r2, #0
   11104:	cmp	r3, #0
   11108:	mvneq	r3, #0
   1110c:	ldrne	r3, [r3, #12]
   11110:	cmp	r3, r2
   11114:	movlt	r3, r2
   11118:	ldr	r2, [r1, #4]
   1111c:	add	r3, r3, #1
   11120:	cmp	r2, #0
   11124:	str	r3, [r0, #12]
   11128:	ldrne	r2, [r2, #12]
   1112c:	mvneq	r2, #0
   11130:	cmp	r2, r3
   11134:	movge	r3, r2
   11138:	add	r3, r3, #1
   1113c:	str	r3, [r1, #12]
   11140:	mov	r0, r1
   11144:	bx	lr

00011148 <roda_esquerda@@Base>:
   11148:	mov	r2, r0
   1114c:	ldr	r0, [r0, #8]
   11150:	ldr	r1, [r0, #4]
   11154:	str	r2, [r0, #4]
   11158:	ldr	r3, [r2, #4]
   1115c:	str	r1, [r2, #8]
   11160:	cmp	r3, #0
   11164:	ldrne	r3, [r3, #12]
   11168:	mvneq	r3, #0
   1116c:	cmp	r1, #0
   11170:	orreq	r3, r3, r3, asr #31
   11174:	beq	11184 <roda_esquerda@@Base+0x3c>
   11178:	ldr	r1, [r1, #12]
   1117c:	cmp	r3, r1
   11180:	movlt	r3, r1
   11184:	add	r3, r3, #1
   11188:	str	r3, [r2, #12]
   1118c:	ldr	r2, [r0, #8]
   11190:	cmp	r2, #0
   11194:	mvneq	r2, #0
   11198:	ldrne	r2, [r2, #12]
   1119c:	cmp	r3, r2
   111a0:	movlt	r3, r2
   111a4:	add	r3, r3, #1
   111a8:	str	r3, [r0, #12]
   111ac:	bx	lr

000111b0 <calc_balanceamento@@Base>:
   111b0:	cmp	r0, #0
   111b4:	bxeq	lr
   111b8:	ldr	r3, [r0, #8]
   111bc:	ldr	r2, [r0, #4]
   111c0:	cmp	r3, #0
   111c4:	mvneq	r3, #0
   111c8:	ldrne	r3, [r3, #12]
   111cc:	cmp	r2, #0
   111d0:	mvneq	r0, #0
   111d4:	ldrne	r0, [r2, #12]
   111d8:	sub	r0, r3, r0
   111dc:	bx	lr

000111e0 <avl_pesquisa_impl@@Base>:
   111e0:	push	{r4, r5, r6, lr}
   111e4:	mov	r5, r1
   111e8:	mov	r4, r0
   111ec:	cmp	r4, #0
   111f0:	beq	11214 <avl_pesquisa_impl@@Base+0x34>
   111f4:	ldr	r1, [r4]
   111f8:	mov	r0, r5
   111fc:	bl	10c6c <strcmp@plt>
   11200:	cmp	r0, #0
   11204:	ldrlt	r4, [r4, #4]
   11208:	blt	111ec <avl_pesquisa_impl@@Base+0xc>
   1120c:	ldrne	r4, [r4, #8]
   11210:	bne	111ec <avl_pesquisa_impl@@Base+0xc>
   11214:	mov	r0, r4
   11218:	pop	{r4, r5, r6, pc}

0001121c <avl_pesquisa@@Base>:
   1121c:	cmp	r1, #0
   11220:	cmpne	r0, #0
   11224:	beq	11230 <avl_pesquisa@@Base+0x14>
   11228:	ldr	r0, [r0]
   1122c:	b	111e0 <avl_pesquisa_impl@@Base>
   11230:	mov	r0, #0
   11234:	bx	lr

00011238 <avl_insere_impl@@Base>:
   11238:	push	{r4, r5, r6, lr}
   1123c:	subs	r4, r0, #0
   11240:	bne	11250 <avl_insere_impl@@Base+0x18>
   11244:	mov	r0, r1
   11248:	pop	{r4, r5, r6, lr}
   1124c:	b	11094 <avl_novo_no@@Base>
   11250:	mov	r5, r1
   11254:	mov	r0, r5
   11258:	ldr	r1, [r4]
   1125c:	bl	10c6c <strcmp@plt>
   11260:	cmp	r0, #0
   11264:	bge	112e0 <avl_insere_impl@@Base+0xa8>
   11268:	mov	r1, r5
   1126c:	ldr	r0, [r4, #4]
   11270:	bl	11238 <avl_insere_impl@@Base>
   11274:	str	r0, [r4, #4]
   11278:	ldr	r1, [r4, #4]
   1127c:	ldr	r5, [r4, #8]
   11280:	cmp	r1, #0
   11284:	mvneq	r3, #0
   11288:	ldrne	r3, [r1, #12]
   1128c:	cmp	r5, #0
   11290:	mvneq	r2, #0
   11294:	ldrne	r2, [r5, #12]
   11298:	mov	r0, r4
   1129c:	cmp	r3, r2
   112a0:	movlt	r3, r2
   112a4:	add	r3, r3, #1
   112a8:	str	r3, [r4, #12]
   112ac:	bl	111b0 <calc_balanceamento@@Base>
   112b0:	cmp	r0, #1
   112b4:	ble	1130c <avl_insere_impl@@Base+0xd4>
   112b8:	mov	r0, r5
   112bc:	bl	111b0 <calc_balanceamento@@Base>
   112c0:	cmp	r0, #0
   112c4:	bge	112d4 <avl_insere_impl@@Base+0x9c>
   112c8:	mov	r0, r5
   112cc:	bl	110e4 <roda_direita@@Base>
   112d0:	str	r0, [r4, #8]
   112d4:	mov	r0, r4
   112d8:	pop	{r4, r5, r6, lr}
   112dc:	b	11148 <roda_esquerda@@Base>
   112e0:	beq	112f8 <avl_insere_impl@@Base+0xc0>
   112e4:	mov	r1, r5
   112e8:	ldr	r0, [r4, #8]
   112ec:	bl	11238 <avl_insere_impl@@Base>
   112f0:	str	r0, [r4, #8]
   112f4:	b	11278 <avl_insere_impl@@Base+0x40>
   112f8:	ldr	r3, [r4, #16]
   112fc:	add	r3, r3, #1
   11300:	str	r3, [r4, #16]
   11304:	mov	r0, r4
   11308:	pop	{r4, r5, r6, pc}
   1130c:	cmn	r0, #1
   11310:	bge	11304 <avl_insere_impl@@Base+0xcc>
   11314:	mov	r0, r1
   11318:	bl	111b0 <calc_balanceamento@@Base>
   1131c:	cmp	r0, #0
   11320:	ble	11330 <avl_insere_impl@@Base+0xf8>
   11324:	mov	r0, r1
   11328:	bl	11148 <roda_esquerda@@Base>
   1132c:	str	r0, [r4, #4]
   11330:	mov	r0, r4
   11334:	pop	{r4, r5, r6, lr}
   11338:	b	110e4 <roda_direita@@Base>

0001133c <avl_insere@@Base>:
   1133c:	cmp	r1, #0
   11340:	cmpne	r0, #0
   11344:	push	{r4, r5, r6, lr}
   11348:	moveq	r5, #1
   1134c:	movne	r5, #0
   11350:	beq	1136c <avl_insere@@Base+0x30>
   11354:	mov	r4, r0
   11358:	ldr	r0, [r0]
   1135c:	bl	11238 <avl_insere_impl@@Base>
   11360:	str	r0, [r4]
   11364:	mov	r0, r5
   11368:	pop	{r4, r5, r6, pc}
   1136c:	mvn	r0, #0
   11370:	pop	{r4, r5, r6, pc}

00011374 <avl_no_valormin@@Base>:
   11374:	ldr	r3, [r0, #4]
   11378:	cmp	r3, #0
   1137c:	bne	11384 <avl_no_valormin@@Base+0x10>
   11380:	bx	lr
   11384:	mov	r0, r3
   11388:	b	11374 <avl_no_valormin@@Base>

0001138c <avl_no_valormax@@Base>:
   1138c:	ldr	r3, [r0, #8]
   11390:	cmp	r3, #0
   11394:	bne	1139c <avl_no_valormax@@Base+0x10>
   11398:	bx	lr
   1139c:	mov	r0, r3
   113a0:	b	1138c <avl_no_valormax@@Base>

000113a4 <avl_remove_impl@@Base>:
   113a4:	push	{r4, r5, r6, r7, r8, lr}
   113a8:	subs	r4, r0, #0
   113ac:	bne	113bc <avl_remove_impl@@Base+0x18>
   113b0:	mov	r4, #0
   113b4:	mov	r0, r4
   113b8:	pop	{r4, r5, r6, r7, r8, pc}
   113bc:	ldr	r7, [r4]
   113c0:	mov	r5, r1
   113c4:	mov	r0, r5
   113c8:	mov	r1, r7
   113cc:	bl	10c6c <strcmp@plt>
   113d0:	cmp	r0, #0
   113d4:	bge	11450 <avl_remove_impl@@Base+0xac>
   113d8:	mov	r1, r5
   113dc:	ldr	r0, [r4, #4]
   113e0:	bl	113a4 <avl_remove_impl@@Base>
   113e4:	str	r0, [r4, #4]
   113e8:	ldr	r1, [r4, #4]
   113ec:	ldr	r5, [r4, #8]
   113f0:	cmp	r1, #0
   113f4:	mvneq	r3, #0
   113f8:	ldrne	r3, [r1, #12]
   113fc:	cmp	r5, #0
   11400:	mvneq	r2, #0
   11404:	ldrne	r2, [r5, #12]
   11408:	mov	r0, r4
   1140c:	cmp	r3, r2
   11410:	movlt	r3, r2
   11414:	add	r3, r3, #1
   11418:	str	r3, [r4, #12]
   1141c:	bl	111b0 <calc_balanceamento@@Base>
   11420:	cmp	r0, #1
   11424:	ble	11520 <avl_remove_impl@@Base+0x17c>
   11428:	mov	r0, r5
   1142c:	bl	111b0 <calc_balanceamento@@Base>
   11430:	cmp	r0, #0
   11434:	bge	11444 <avl_remove_impl@@Base+0xa0>
   11438:	mov	r0, r5
   1143c:	bl	110e4 <roda_direita@@Base>
   11440:	str	r0, [r4, #8]
   11444:	mov	r0, r4
   11448:	pop	{r4, r5, r6, r7, r8, lr}
   1144c:	b	11148 <roda_esquerda@@Base>
   11450:	movne	r1, r5
   11454:	bne	11510 <avl_remove_impl@@Base+0x16c>
   11458:	ldr	r5, [r4, #4]
   1145c:	ldr	r6, [r4, #8]
   11460:	cmp	r5, #0
   11464:	beq	114ac <avl_remove_impl@@Base+0x108>
   11468:	cmp	r6, #0
   1146c:	bne	114e0 <avl_remove_impl@@Base+0x13c>
   11470:	ldr	r0, [r5]
   11474:	bl	10cf0 <strlen@plt>
   11478:	add	r1, r0, #1
   1147c:	mov	r0, r7
   11480:	bl	10ca8 <realloc@plt>
   11484:	str	r0, [r4]
   11488:	ldr	r1, [r5]
   1148c:	bl	10cb4 <strcpy@plt>
   11490:	ldr	r3, [r5, #4]
   11494:	str	r3, [r4, #4]
   11498:	ldr	r3, [r5, #8]
   1149c:	str	r3, [r4, #8]
   114a0:	ldr	r3, [r5, #12]
   114a4:	str	r3, [r4, #12]
   114a8:	b	114c0 <avl_remove_impl@@Base+0x11c>
   114ac:	subs	r5, r6, #0
   114b0:	moveq	r3, r4
   114b4:	moveq	r4, r5
   114b8:	moveq	r5, r3
   114bc:	bne	11470 <avl_remove_impl@@Base+0xcc>
   114c0:	ldr	r0, [r5]
   114c4:	bl	10c90 <free@plt>
   114c8:	mov	r0, r5
   114cc:	bl	10c90 <free@plt>
   114d0:	cmp	r4, #0
   114d4:	beq	113b0 <avl_remove_impl@@Base+0xc>
   114d8:	b	113e8 <avl_remove_impl@@Base+0x44>
   114dc:	mov	r6, r3
   114e0:	ldr	r3, [r6, #4]
   114e4:	cmp	r3, #0
   114e8:	bne	114dc <avl_remove_impl@@Base+0x138>
   114ec:	ldr	r0, [r6]
   114f0:	bl	10cf0 <strlen@plt>
   114f4:	add	r1, r0, #1
   114f8:	mov	r0, r7
   114fc:	bl	10ca8 <realloc@plt>
   11500:	str	r0, [r4]
   11504:	ldr	r1, [r6]
   11508:	bl	10cb4 <strcpy@plt>
   1150c:	ldr	r1, [r6]
   11510:	ldr	r0, [r4, #8]
   11514:	bl	113a4 <avl_remove_impl@@Base>
   11518:	str	r0, [r4, #8]
   1151c:	b	113e8 <avl_remove_impl@@Base+0x44>
   11520:	cmn	r0, #1
   11524:	bge	113b4 <avl_remove_impl@@Base+0x10>
   11528:	mov	r0, r1
   1152c:	bl	111b0 <calc_balanceamento@@Base>
   11530:	cmp	r0, #0
   11534:	ble	11544 <avl_remove_impl@@Base+0x1a0>
   11538:	mov	r0, r1
   1153c:	bl	11148 <roda_esquerda@@Base>
   11540:	str	r0, [r4, #4]
   11544:	mov	r0, r4
   11548:	pop	{r4, r5, r6, r7, r8, lr}
   1154c:	b	110e4 <roda_direita@@Base>

00011550 <avl_apaga@@Base>:
   11550:	push	{r4, lr}
   11554:	subs	r4, r0, #0
   11558:	bne	1156c <avl_apaga@@Base+0x1c>
   1155c:	pop	{r4, pc}
   11560:	ldr	r1, [r0]
   11564:	bl	113a4 <avl_remove_impl@@Base>
   11568:	str	r0, [r4]
   1156c:	ldr	r0, [r4]
   11570:	cmp	r0, #0
   11574:	bne	11560 <avl_apaga@@Base+0x10>
   11578:	mov	r0, r4
   1157c:	pop	{r4, lr}
   11580:	b	10c90 <free@plt>

00011584 <avl_remove@@Base>:
   11584:	cmp	r1, #0
   11588:	cmpne	r0, #0
   1158c:	push	{r4, r5, r6, lr}
   11590:	moveq	r5, #1
   11594:	movne	r5, #0
   11598:	beq	115b4 <avl_remove@@Base+0x30>
   1159c:	mov	r4, r0
   115a0:	ldr	r0, [r0]
   115a4:	bl	113a4 <avl_remove_impl@@Base>
   115a8:	str	r0, [r4]
   115ac:	mov	r0, r5
   115b0:	pop	{r4, r5, r6, pc}
   115b4:	mvn	r0, #0
   115b8:	pop	{r4, r5, r6, pc}

000115bc <avl_preordem_impl@@Base>:
   115bc:	push	{r4, r5, r6, lr}
   115c0:	mov	r4, r0
   115c4:	ldr	r5, [pc, #36]	; 115f0 <avl_preordem_impl@@Base+0x34>
   115c8:	cmp	r4, #0
   115cc:	popeq	{r4, r5, r6, pc}
   115d0:	ldr	r2, [r4, #16]
   115d4:	ldr	r1, [r4]
   115d8:	mov	r0, r5
   115dc:	bl	10c78 <printf@plt>
   115e0:	ldr	r0, [r4, #4]
   115e4:	bl	115bc <avl_preordem_impl@@Base>
   115e8:	ldr	r4, [r4, #8]
   115ec:	b	115c8 <avl_preordem_impl@@Base+0xc>
   115f0:	andeq	r1, r1, r5, lsl #22

000115f4 <avl_imprime@@Base>:
   115f4:	cmp	r0, #0
   115f8:	bxeq	lr
   115fc:	push	{r4, lr}
   11600:	ldr	r0, [r0]
   11604:	bl	115bc <avl_preordem_impl@@Base>
   11608:	mov	r0, #10
   1160c:	pop	{r4, lr}
   11610:	b	10cfc <putchar@plt>

00011614 <bst_nova@@Base>:
   11614:	push	{r4, lr}
   11618:	mov	r0, #4
   1161c:	bl	10ccc <malloc@plt>
   11620:	cmp	r0, #0
   11624:	movne	r3, #0
   11628:	strne	r3, [r0]
   1162c:	pop	{r4, pc}

00011630 <bst_min@@Base>:
   11630:	cmp	r0, #0
   11634:	ldrne	r3, [r0]
   11638:	bne	11644 <bst_min@@Base+0x14>
   1163c:	bx	lr
   11640:	mov	r3, r2
   11644:	ldr	r2, [r3, #4]
   11648:	cmp	r2, #0
   1164c:	bne	11640 <bst_min@@Base+0x10>
   11650:	ldr	r0, [r3]
   11654:	bx	lr

00011658 <bst_max@@Base>:
   11658:	cmp	r0, #0
   1165c:	ldrne	r3, [r0]
   11660:	bne	1166c <bst_max@@Base+0x14>
   11664:	bx	lr
   11668:	mov	r3, r2
   1166c:	ldr	r2, [r3, #8]
   11670:	cmp	r2, #0
   11674:	bne	11668 <bst_max@@Base+0x10>
   11678:	ldr	r0, [r3]
   1167c:	bx	lr

00011680 <bst_novo_no@@Base>:
   11680:	push	{r4, r5, r6, lr}
   11684:	mov	r5, r0
   11688:	mov	r0, #12
   1168c:	bl	10ccc <malloc@plt>
   11690:	mov	r4, r0
   11694:	mov	r0, r5
   11698:	bl	10cf0 <strlen@plt>
   1169c:	add	r0, r0, #1
   116a0:	bl	10ccc <malloc@plt>
   116a4:	mov	r1, r5
   116a8:	str	r0, [r4]
   116ac:	bl	10cb4 <strcpy@plt>
   116b0:	mov	r3, #0
   116b4:	str	r3, [r4, #4]
   116b8:	str	r3, [r4, #8]
   116bc:	mov	r0, r4
   116c0:	pop	{r4, r5, r6, pc}

000116c4 <bst_no_valormin@@Base>:
   116c4:	ldr	r3, [r0, #4]
   116c8:	cmp	r3, #0
   116cc:	bne	116d4 <bst_no_valormin@@Base+0x10>
   116d0:	bx	lr
   116d4:	mov	r0, r3
   116d8:	b	116c4 <bst_no_valormin@@Base>

000116dc <bst_no_valormax@@Base>:
   116dc:	ldr	r3, [r0, #8]
   116e0:	cmp	r3, #0
   116e4:	bne	116ec <bst_no_valormax@@Base+0x10>
   116e8:	bx	lr
   116ec:	mov	r0, r3
   116f0:	b	116dc <bst_no_valormax@@Base>

000116f4 <bst_pesquisa_impl@@Base>:
   116f4:	push	{r4, r5, r6, lr}
   116f8:	mov	r5, r1
   116fc:	mov	r4, r0
   11700:	cmp	r4, #0
   11704:	beq	11728 <bst_pesquisa_impl@@Base+0x34>
   11708:	ldr	r1, [r4]
   1170c:	mov	r0, r5
   11710:	bl	10c6c <strcmp@plt>
   11714:	cmp	r0, #0
   11718:	ldrlt	r4, [r4, #4]
   1171c:	blt	11700 <bst_pesquisa_impl@@Base+0xc>
   11720:	ldrne	r4, [r4, #8]
   11724:	bne	11700 <bst_pesquisa_impl@@Base+0xc>
   11728:	mov	r0, r4
   1172c:	pop	{r4, r5, r6, pc}

00011730 <bst_pesquisa@@Base>:
   11730:	cmp	r1, #0
   11734:	cmpne	r0, #0
   11738:	beq	11744 <bst_pesquisa@@Base+0x14>
   1173c:	ldr	r0, [r0]
   11740:	b	116f4 <bst_pesquisa_impl@@Base>
   11744:	mov	r0, #0
   11748:	bx	lr

0001174c <bst_insere_impl@@Base>:
   1174c:	push	{r4, r5, r6, lr}
   11750:	subs	r4, r0, #0
   11754:	bne	11764 <bst_insere_impl@@Base+0x18>
   11758:	mov	r0, r1
   1175c:	pop	{r4, r5, r6, lr}
   11760:	b	11680 <bst_novo_no@@Base>
   11764:	mov	r5, r1
   11768:	mov	r0, r5
   1176c:	ldr	r1, [r4]
   11770:	bl	10c6c <strcmp@plt>
   11774:	cmp	r0, #0
   11778:	bge	11794 <bst_insere_impl@@Base+0x48>
   1177c:	mov	r1, r5
   11780:	ldr	r0, [r4, #4]
   11784:	bl	1174c <bst_insere_impl@@Base>
   11788:	str	r0, [r4, #4]
   1178c:	mov	r0, r4
   11790:	pop	{r4, r5, r6, pc}
   11794:	beq	1178c <bst_insere_impl@@Base+0x40>
   11798:	mov	r1, r5
   1179c:	ldr	r0, [r4, #8]
   117a0:	bl	1174c <bst_insere_impl@@Base>
   117a4:	str	r0, [r4, #8]
   117a8:	b	1178c <bst_insere_impl@@Base+0x40>

000117ac <bst_insere@@Base>:
   117ac:	cmp	r1, #0
   117b0:	cmpne	r0, #0
   117b4:	push	{r4, r5, r6, lr}
   117b8:	moveq	r5, #1
   117bc:	movne	r5, #0
   117c0:	beq	117dc <bst_insere@@Base+0x30>
   117c4:	mov	r4, r0
   117c8:	ldr	r0, [r0]
   117cc:	bl	1174c <bst_insere_impl@@Base>
   117d0:	str	r0, [r4]
   117d4:	mov	r0, r5
   117d8:	pop	{r4, r5, r6, pc}
   117dc:	mvn	r0, #0
   117e0:	pop	{r4, r5, r6, pc}

000117e4 <bst_remove_impl@@Base>:
   117e4:	push	{r4, r5, r6, r7, r8, lr}
   117e8:	subs	r4, r0, #0
   117ec:	beq	1181c <bst_remove_impl@@Base+0x38>
   117f0:	ldr	r7, [r4]
   117f4:	mov	r5, r1
   117f8:	mov	r0, r5
   117fc:	mov	r1, r7
   11800:	bl	10c6c <strcmp@plt>
   11804:	cmp	r0, #0
   11808:	bge	11824 <bst_remove_impl@@Base+0x40>
   1180c:	mov	r1, r5
   11810:	ldr	r0, [r4, #4]
   11814:	bl	117e4 <bst_remove_impl@@Base>
   11818:	str	r0, [r4, #4]
   1181c:	mov	r0, r4
   11820:	pop	{r4, r5, r6, r7, r8, pc}
   11824:	movne	r1, r5
   11828:	bne	118d8 <bst_remove_impl@@Base+0xf4>
   1182c:	ldr	r6, [r4, #4]
   11830:	ldr	r5, [r4, #8]
   11834:	cmp	r6, #0
   11838:	beq	11884 <bst_remove_impl@@Base+0xa0>
   1183c:	cmp	r5, #0
   11840:	bne	118a8 <bst_remove_impl@@Base+0xc4>
   11844:	ldr	r0, [r6]
   11848:	bl	10cf0 <strlen@plt>
   1184c:	add	r1, r0, #1
   11850:	mov	r0, r7
   11854:	bl	10ca8 <realloc@plt>
   11858:	str	r0, [r4]
   1185c:	ldr	r1, [r6]
   11860:	bl	10cb4 <strcpy@plt>
   11864:	ldr	r3, [r6, #4]
   11868:	str	r3, [r4, #4]
   1186c:	ldr	r3, [r6, #8]
   11870:	str	r3, [r4, #8]
   11874:	mov	r3, r6
   11878:	mov	r6, r4
   1187c:	mov	r4, r3
   11880:	b	1188c <bst_remove_impl@@Base+0xa8>
   11884:	subs	r6, r5, #0
   11888:	bne	11844 <bst_remove_impl@@Base+0x60>
   1188c:	ldr	r0, [r4]
   11890:	bl	10c90 <free@plt>
   11894:	mov	r0, r4
   11898:	bl	10c90 <free@plt>
   1189c:	mov	r4, r6
   118a0:	b	1181c <bst_remove_impl@@Base+0x38>
   118a4:	mov	r5, r3
   118a8:	ldr	r3, [r5, #4]
   118ac:	cmp	r3, #0
   118b0:	bne	118a4 <bst_remove_impl@@Base+0xc0>
   118b4:	ldr	r0, [r5]
   118b8:	bl	10cf0 <strlen@plt>
   118bc:	add	r1, r0, #1
   118c0:	mov	r0, r7
   118c4:	bl	10ca8 <realloc@plt>
   118c8:	str	r0, [r4]
   118cc:	ldr	r1, [r5]
   118d0:	bl	10cb4 <strcpy@plt>
   118d4:	ldr	r1, [r5]
   118d8:	ldr	r0, [r4, #8]
   118dc:	bl	117e4 <bst_remove_impl@@Base>
   118e0:	str	r0, [r4, #8]
   118e4:	b	1181c <bst_remove_impl@@Base+0x38>

000118e8 <bst_apaga@@Base>:
   118e8:	push	{r4, lr}
   118ec:	mov	r4, r0
   118f0:	ldr	r0, [r4]
   118f4:	cmp	r0, #0
   118f8:	bne	11908 <bst_apaga@@Base+0x20>
   118fc:	mov	r0, r4
   11900:	pop	{r4, lr}
   11904:	b	10c90 <free@plt>
   11908:	ldr	r1, [r0]
   1190c:	bl	117e4 <bst_remove_impl@@Base>
   11910:	str	r0, [r4]
   11914:	b	118f0 <bst_apaga@@Base+0x8>

00011918 <bst_remove@@Base>:
   11918:	cmp	r1, #0
   1191c:	cmpne	r0, #0
   11920:	push	{r4, r5, r6, lr}
   11924:	moveq	r5, #1
   11928:	movne	r5, #0
   1192c:	beq	11948 <bst_remove@@Base+0x30>
   11930:	mov	r4, r0
   11934:	ldr	r0, [r0]
   11938:	bl	117e4 <bst_remove_impl@@Base>
   1193c:	str	r0, [r4]
   11940:	mov	r0, r5
   11944:	pop	{r4, r5, r6, pc}
   11948:	mvn	r0, #0
   1194c:	pop	{r4, r5, r6, pc}

00011950 <bst_altura@@Base>:
   11950:	push	{r4, r5, r6, r7, r8, lr}
   11954:	mov	r6, #1
   11958:	cmp	r0, #0
   1195c:	sub	r3, r6, #1
   11960:	beq	119a4 <bst_altura@@Base+0x54>
   11964:	ldr	r5, [r0, #8]
   11968:	ldr	r4, [r0, #4]
   1196c:	cmp	r5, #0
   11970:	bne	1197c <bst_altura@@Base+0x2c>
   11974:	cmp	r4, #0
   11978:	beq	119a8 <bst_altura@@Base+0x58>
   1197c:	mov	r0, r4
   11980:	bl	11950 <bst_altura@@Base>
   11984:	add	r6, r6, #1
   11988:	mov	r7, r0
   1198c:	mov	r0, r5
   11990:	bl	11950 <bst_altura@@Base>
   11994:	cmp	r7, r0
   11998:	movle	r0, r5
   1199c:	movgt	r0, r4
   119a0:	b	11958 <bst_altura@@Base+0x8>
   119a4:	mvn	r4, #0
   119a8:	add	r0, r4, r3
   119ac:	pop	{r4, r5, r6, r7, r8, pc}

000119b0 <bst_preordem_impl@@Base>:
   119b0:	push	{r4, r5, r6, lr}
   119b4:	mov	r4, r0
   119b8:	ldr	r5, [pc, #32]	; 119e0 <bst_preordem_impl@@Base+0x30>
   119bc:	cmp	r4, #0
   119c0:	popeq	{r4, r5, r6, pc}
   119c4:	ldr	r1, [r4]
   119c8:	mov	r0, r5
   119cc:	bl	10c78 <printf@plt>
   119d0:	ldr	r0, [r4, #4]
   119d4:	bl	119b0 <bst_preordem_impl@@Base>
   119d8:	ldr	r4, [r4, #8]
   119dc:	b	119bc <bst_preordem_impl@@Base+0xc>
   119e0:	andeq	r1, r1, ip, lsl #22

000119e4 <bst_imprime@@Base>:
   119e4:	push	{r4, lr}
   119e8:	subs	r4, r0, #0
   119ec:	popeq	{r4, pc}
   119f0:	ldr	r0, [pc, #20]	; 11a0c <bst_imprime@@Base+0x28>
   119f4:	bl	10c78 <printf@plt>
   119f8:	ldr	r0, [r4]
   119fc:	bl	119b0 <bst_preordem_impl@@Base>
   11a00:	mov	r0, #10
   11a04:	pop	{r4, lr}
   11a08:	b	10cfc <putchar@plt>
   11a0c:	andeq	r1, r1, r0, lsl fp

00011a10 <__libc_csu_init@@Base>:
   11a10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a14:	mov	r7, r0
   11a18:	ldr	r6, [pc, #72]	; 11a68 <__libc_csu_init@@Base+0x58>
   11a1c:	ldr	r5, [pc, #72]	; 11a6c <__libc_csu_init@@Base+0x5c>
   11a20:	add	r6, pc, r6
   11a24:	add	r5, pc, r5
   11a28:	sub	r6, r6, r5
   11a2c:	mov	r8, r1
   11a30:	mov	r9, r2
   11a34:	bl	10c4c <strcmp@plt-0x20>
   11a38:	asrs	r6, r6, #2
   11a3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a40:	mov	r4, #0
   11a44:	add	r4, r4, #1
   11a48:	ldr	r3, [r5], #4
   11a4c:	mov	r2, r9
   11a50:	mov	r1, r8
   11a54:	mov	r0, r7
   11a58:	blx	r3
   11a5c:	cmp	r6, r4
   11a60:	bne	11a44 <__libc_csu_init@@Base+0x34>
   11a64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a68:	andeq	r0, r1, r8, ror #9
   11a6c:	andeq	r0, r1, r0, ror #9

00011a70 <__libc_csu_fini@@Base>:
   11a70:	bx	lr

Disassembly of section .fini:

00011a74 <.fini>:
   11a74:	push	{r3, lr}
   11a78:	pop	{r3, pc}
