
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

000006ec <_init>:
 6ec:	push	{r3, lr}
 6f0:	bl	808 <call_weak_fn>
 6f4:	pop	{r3, pc}

Disassembly of section .plt:

000006f8 <.plt>:
 6f8:	push	{lr}		; (str lr, [sp, #-4]!)
 6fc:	ldr	lr, [pc, #4]	; 708 <.plt+0x10>
 700:	add	lr, pc, lr
 704:	ldr	pc, [lr, #8]!
 708:	.word	0x000118f8

0000070c <calloc@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2296]!	; 0x8f8

00000718 <strcmp@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2288]!	; 0x8f0

00000724 <__cxa_finalize@plt>:
 724:	add	ip, pc, #0, 12
 728:	add	ip, ip, #69632	; 0x11000
 72c:	ldr	pc, [ip, #2280]!	; 0x8e8

00000730 <strtol@plt>:
 730:	add	ip, pc, #0, 12
 734:	add	ip, ip, #69632	; 0x11000
 738:	ldr	pc, [ip, #2272]!	; 0x8e0

0000073c <free@plt>:
 73c:	add	ip, pc, #0, 12
 740:	add	ip, ip, #69632	; 0x11000
 744:	ldr	pc, [ip, #2264]!	; 0x8d8

00000748 <memcpy@plt>:
 748:	add	ip, pc, #0, 12
 74c:	add	ip, ip, #69632	; 0x11000
 750:	ldr	pc, [ip, #2256]!	; 0x8d0

00000754 <select@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2248]!	; 0x8c8

00000760 <recvfrom@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2240]!	; 0x8c0

0000076c <strdup@plt>:
 76c:	add	ip, pc, #0, 12
 770:	add	ip, ip, #69632	; 0x11000
 774:	ldr	pc, [ip, #2232]!	; 0x8b8

00000778 <gettimeofday@plt>:
 778:	add	ip, pc, #0, 12
 77c:	add	ip, ip, #69632	; 0x11000
 780:	ldr	pc, [ip, #2224]!	; 0x8b0

00000784 <malloc@plt>:
 784:	add	ip, pc, #0, 12
 788:	add	ip, ip, #69632	; 0x11000
 78c:	ldr	pc, [ip, #2216]!	; 0x8a8

00000790 <sfbpf_compile@plt>:
 790:	add	ip, pc, #0, 12
 794:	add	ip, ip, #69632	; 0x11000
 798:	ldr	pc, [ip, #2208]!	; 0x8a0

0000079c <strerror@plt>:
 79c:	add	ip, pc, #0, 12
 7a0:	add	ip, ip, #69632	; 0x11000
 7a4:	ldr	pc, [ip, #2200]!	; 0x898

000007a8 <__gmon_start__@plt>:
 7a8:	add	ip, pc, #0, 12
 7ac:	add	ip, ip, #69632	; 0x11000
 7b0:	ldr	pc, [ip, #2192]!	; 0x890

000007b4 <__errno_location@plt>:
 7b4:	add	ip, pc, #0, 12
 7b8:	add	ip, ip, #69632	; 0x11000
 7bc:	ldr	pc, [ip, #2184]!	; 0x888

000007c0 <snprintf@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2176]!	; 0x880

000007cc <bind@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2168]!	; 0x878

000007d8 <sendto@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2160]!	; 0x870

000007e4 <sfbpf_filter@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2152]!	; 0x868

000007f0 <socket@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2144]!	; 0x860

000007fc <close@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2136]!	; 0x858

Disassembly of section .text:

00000808 <call_weak_fn>:
     808:	ldr	r3, [pc, #20]	; 824 <call_weak_fn+0x1c>
     80c:	ldr	r2, [pc, #20]	; 828 <call_weak_fn+0x20>
     810:	add	r3, pc, r3
     814:	ldr	r2, [r3, r2]
     818:	cmp	r2, #0
     81c:	bxeq	lr
     820:	b	7a8 <__gmon_start__@plt>
     824:	.word	0x000117e8
     828:	.word	0x00000068

0000082c <deregister_tm_clones>:
     82c:	ldr	r0, [pc, #44]	; 860 <deregister_tm_clones+0x34>
     830:	ldr	r3, [pc, #44]	; 864 <deregister_tm_clones+0x38>
     834:	add	r0, pc, r0
     838:	add	r3, pc, r3
     83c:	cmp	r3, r0
     840:	ldr	r3, [pc, #32]	; 868 <deregister_tm_clones+0x3c>
     844:	add	r3, pc, r3
     848:	bxeq	lr
     84c:	ldr	r2, [pc, #24]	; 86c <deregister_tm_clones+0x40>
     850:	ldr	r3, [r3, r2]
     854:	cmp	r3, #0
     858:	bxeq	lr
     85c:	bx	r3
     860:	.word	0x000118a0
     864:	.word	0x0001189c
     868:	.word	0x000117b4
     86c:	.word	0x00000064

00000870 <register_tm_clones>:
     870:	ldr	r0, [pc, #56]	; 8b0 <register_tm_clones+0x40>
     874:	ldr	r3, [pc, #56]	; 8b4 <register_tm_clones+0x44>
     878:	add	r0, pc, r0
     87c:	add	r3, pc, r3
     880:	sub	r1, r3, r0
     884:	ldr	r3, [pc, #44]	; 8b8 <register_tm_clones+0x48>
     888:	asr	r1, r1, #2
     88c:	add	r3, pc, r3
     890:	add	r1, r1, r1, lsr #31
     894:	asrs	r1, r1, #1
     898:	bxeq	lr
     89c:	ldr	r2, [pc, #24]	; 8bc <register_tm_clones+0x4c>
     8a0:	ldr	r3, [r3, r2]
     8a4:	cmp	r3, #0
     8a8:	bxeq	lr
     8ac:	bx	r3
     8b0:	.word	0x0001185c
     8b4:	.word	0x00011858
     8b8:	.word	0x0001176c
     8bc:	.word	0x0000006c

000008c0 <__do_global_dtors_aux>:
     8c0:	ldr	r3, [pc, #76]	; 914 <__do_global_dtors_aux+0x54>
     8c4:	ldr	r2, [pc, #76]	; 918 <__do_global_dtors_aux+0x58>
     8c8:	add	r3, pc, r3
     8cc:	add	r2, pc, r2
     8d0:	ldrb	r3, [r3]
     8d4:	cmp	r3, #0
     8d8:	bxne	lr
     8dc:	ldr	r3, [pc, #56]	; 91c <__do_global_dtors_aux+0x5c>
     8e0:	push	{r4, lr}
     8e4:	ldr	r3, [r2, r3]
     8e8:	cmp	r3, #0
     8ec:	beq	8fc <__do_global_dtors_aux+0x3c>
     8f0:	ldr	r3, [pc, #40]	; 920 <__do_global_dtors_aux+0x60>
     8f4:	ldr	r0, [pc, r3]
     8f8:	bl	724 <__cxa_finalize@plt>
     8fc:	bl	82c <deregister_tm_clones>
     900:	ldr	r3, [pc, #28]	; 924 <__do_global_dtors_aux+0x64>
     904:	mov	r2, #1
     908:	add	r3, pc, r3
     90c:	strb	r2, [r3]
     910:	pop	{r4, pc}
     914:	.word	0x00011810
     918:	.word	0x0001172c
     91c:	.word	0x00000060
     920:	.word	0x00011774
     924:	.word	0x000117d0

00000928 <frame_dummy>:
     928:	b	870 <register_tm_clones>

0000092c <ipfw_daq_initialize>:
     92c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     930:	add	fp, sp, #28
     934:	sub	sp, sp, #28
     938:	mov	r5, r1
     93c:	mov	r7, r0
     940:	mov	r0, #1
     944:	mov	r1, #416	; 0x1a0
     948:	mov	r8, r3
     94c:	mov	r6, r2
     950:	bl	70c <calloc@plt>
     954:	cmp	r0, #0
     958:	beq	a74 <ipfw_daq_initialize+0x148>
     95c:	mov	r4, r0
     960:	mov	r0, #8000	; 0x1f40
     964:	mov	r2, #2
     968:	str	r5, [sp, #20]
     96c:	stmib	r4, {r0, r2}
     970:	ldr	sl, [r7, #20]
     974:	cmp	sl, #0
     978:	beq	a08 <ipfw_daq_initialize+0xdc>
     97c:	str	r6, [sp, #12]
     980:	str	r8, [sp, #16]
     984:	movw	r6, #65534	; 0xfffe
     988:	ldr	r5, [pc, #480]	; b70 <ipfw_daq_initialize+0x244>
     98c:	add	r5, pc, r5
     990:	ldr	r8, [sl, #4]
     994:	cmp	r8, #0
     998:	ldrbne	r0, [r8]
     99c:	cmpne	r0, #0
     9a0:	beq	a98 <ipfw_daq_initialize+0x16c>
     9a4:	ldr	r9, [sl]
     9a8:	mov	r1, r5
     9ac:	mov	r0, r9
     9b0:	bl	718 <strcmp@plt>
     9b4:	cmp	r0, #0
     9b8:	bne	af8 <ipfw_daq_initialize+0x1cc>
     9bc:	mov	r0, r8
     9c0:	add	r1, sp, #24
     9c4:	mov	r2, #0
     9c8:	str	r8, [sp, #24]
     9cc:	bl	730 <strtol@plt>
     9d0:	sub	r1, r0, #1
     9d4:	str	r0, [r4, #4]
     9d8:	cmp	r1, r6
     9dc:	bhi	b0c <ipfw_daq_initialize+0x1e0>
     9e0:	ldr	r1, [sp, #24]
     9e4:	ldrb	r1, [r1]
     9e8:	cmp	r1, #0
     9ec:	bne	b0c <ipfw_daq_initialize+0x1e0>
     9f0:	ldr	sl, [sl, #8]
     9f4:	cmp	sl, #0
     9f8:	bne	990 <ipfw_daq_initialize+0x64>
     9fc:	ldr	r2, [r4, #8]
     a00:	ldr	r8, [sp, #16]
     a04:	ldr	r6, [sp, #12]
     a08:	ldmib	r7, {r1, r3, r7}
     a0c:	rev16	r0, r0
     a10:	mov	r5, #0
     a14:	cmp	r1, #0
     a18:	movweq	r1, #65535	; 0xffff
     a1c:	str	r1, [r4, #24]
     a20:	str	r3, [r4, #20]
     a24:	mov	r3, #300	; 0x12c
     a28:	strh	r2, [r4, r3]
     a2c:	movw	r2, #302	; 0x12e
     a30:	strh	r0, [r4, r2]
     a34:	clz	r0, r7
     a38:	str	r5, [r4, #304]	; 0x130
     a3c:	lsr	r0, r0, #5
     a40:	str	r0, [r4, #16]
     a44:	mov	r0, r1
     a48:	bl	784 <malloc@plt>
     a4c:	cmp	r0, #0
     a50:	str	r0, [r4, #28]
     a54:	beq	aac <ipfw_daq_initialize+0x180>
     a58:	mov	r0, #1
     a5c:	str	r0, [r4, #316]	; 0x13c
     a60:	mvn	r0, #0
     a64:	str	r0, [r4]
     a68:	ldr	r0, [sp, #20]
     a6c:	str	r4, [r0]
     a70:	b	b5c <ipfw_daq_initialize+0x230>
     a74:	ldr	r2, [pc, #236]	; b68 <ipfw_daq_initialize+0x23c>
     a78:	ldr	r3, [pc, #236]	; b6c <ipfw_daq_initialize+0x240>
     a7c:	mov	r0, r6
     a80:	mov	r1, r8
     a84:	add	r2, pc, r2
     a88:	add	r3, pc, r3
     a8c:	bl	7c0 <snprintf@plt>
     a90:	mvn	r5, #1
     a94:	b	b5c <ipfw_daq_initialize+0x230>
     a98:	ldr	r0, [sl]
     a9c:	str	r0, [sp]
     aa0:	ldr	r2, [pc, #204]	; b74 <ipfw_daq_initialize+0x248>
     aa4:	add	r2, pc, r2
     aa8:	b	b1c <ipfw_daq_initialize+0x1f0>
     aac:	ldr	r2, [pc, #208]	; b84 <ipfw_daq_initialize+0x258>
     ab0:	ldr	r3, [pc, #208]	; b88 <ipfw_daq_initialize+0x25c>
     ab4:	mov	r0, r6
     ab8:	mov	r1, r8
     abc:	add	r2, pc, r2
     ac0:	add	r3, pc, r3
     ac4:	bl	7c0 <snprintf@plt>
     ac8:	ldr	r0, [r4, #32]
     acc:	cmp	r0, #0
     ad0:	beq	ad8 <ipfw_daq_initialize+0x1ac>
     ad4:	bl	73c <free@plt>
     ad8:	ldr	r0, [r4, #28]
     adc:	cmp	r0, #0
     ae0:	beq	ae8 <ipfw_daq_initialize+0x1bc>
     ae4:	bl	73c <free@plt>
     ae8:	mov	r0, r4
     aec:	bl	73c <free@plt>
     af0:	mvn	r5, #1
     af4:	b	b5c <ipfw_daq_initialize+0x230>
     af8:	str	r9, [sp]
     afc:	str	r8, [sp, #4]
     b00:	ldr	r2, [pc, #120]	; b80 <ipfw_daq_initialize+0x254>
     b04:	add	r2, pc, r2
     b08:	b	b1c <ipfw_daq_initialize+0x1f0>
     b0c:	ldr	r0, [sl, #4]
     b10:	str	r0, [sp]
     b14:	ldr	r2, [pc, #96]	; b7c <ipfw_daq_initialize+0x250>
     b18:	add	r2, pc, r2
     b1c:	ldr	r3, [pc, #84]	; b78 <ipfw_daq_initialize+0x24c>
     b20:	ldr	r0, [sp, #12]
     b24:	ldr	r1, [sp, #16]
     b28:	add	r3, pc, r3
     b2c:	bl	7c0 <snprintf@plt>
     b30:	ldr	r0, [r4, #32]
     b34:	cmp	r0, #0
     b38:	beq	b40 <ipfw_daq_initialize+0x214>
     b3c:	bl	73c <free@plt>
     b40:	ldr	r0, [r4, #28]
     b44:	cmp	r0, #0
     b48:	beq	b50 <ipfw_daq_initialize+0x224>
     b4c:	bl	73c <free@plt>
     b50:	mov	r0, r4
     b54:	bl	73c <free@plt>
     b58:	mvn	r5, #0
     b5c:	mov	r0, r5
     b60:	sub	sp, fp, #28
     b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b68:	.word	0x00000791
     b6c:	.word	0x000007b6
     b70:	.word	0x00000920
     b74:	.word	0x000007d6
     b78:	.word	0x00000771
     b7c:	.word	0x00000799
     b80:	.word	0x000007c0
     b84:	.word	0x00000796
     b88:	.word	0x0000077e

00000b8c <ipfw_daq_set_filter>:
     b8c:	push	{r4, r5, r6, sl, fp, lr}
     b90:	add	fp, sp, #16
     b94:	sub	sp, sp, #16
     b98:	mov	r4, r0
     b9c:	ldr	r0, [r0, #24]
     ba0:	mov	r5, r1
     ba4:	mov	r1, #0
     ba8:	mov	r2, #1
     bac:	str	r2, [sp]
     bb0:	str	r1, [sp, #4]
     bb4:	add	r2, sp, #8
     bb8:	mov	r1, #228	; 0xe4
     bbc:	mov	r3, r5
     bc0:	bl	790 <sfbpf_compile@plt>
     bc4:	cmp	r0, #0
     bc8:	mvnlt	r0, #0
     bcc:	sublt	sp, fp, #16
     bd0:	poplt	{r4, r5, r6, sl, fp, pc}
     bd4:	ldr	r0, [r4, #32]
     bd8:	cmp	r0, #0
     bdc:	beq	be4 <ipfw_daq_set_filter+0x58>
     be0:	bl	73c <free@plt>
     be4:	ldr	r0, [r4, #296]	; 0x128
     be8:	add	r6, r4, #292	; 0x124
     bec:	cmp	r0, #0
     bf0:	beq	bf8 <ipfw_daq_set_filter+0x6c>
     bf4:	bl	73c <free@plt>
     bf8:	mov	r0, r5
     bfc:	bl	76c <strdup@plt>
     c00:	str	r0, [r4, #32]
     c04:	ldr	r0, [sp, #8]
     c08:	ldr	r1, [sp, #12]
     c0c:	stm	r6, {r0, r1}
     c10:	mov	r0, #0
     c14:	sub	sp, fp, #16
     c18:	pop	{r4, r5, r6, sl, fp, pc}

00000c1c <ipfw_daq_start>:
     c1c:	push	{r4, sl, fp, lr}
     c20:	add	fp, sp, #8
     c24:	sub	sp, sp, #8
     c28:	mov	r4, r0
     c2c:	ldr	r0, [r0, #8]
     c30:	mov	r1, #3
     c34:	mov	r2, #254	; 0xfe
     c38:	bl	7f0 <socket@plt>
     c3c:	cmn	r0, #1
     c40:	str	r0, [r4]
     c44:	beq	c8c <ipfw_daq_start+0x70>
     c48:	add	r1, r4, #300	; 0x12c
     c4c:	mov	r2, #16
     c50:	bl	7cc <bind@plt>
     c54:	cmn	r0, #1
     c58:	movne	r0, #2
     c5c:	strne	r0, [r4, #316]	; 0x13c
     c60:	movne	r0, #0
     c64:	subne	sp, fp, #8
     c68:	popne	{r4, sl, fp, pc}
     c6c:	bl	7b4 <__errno_location@plt>
     c70:	ldr	r0, [r0]
     c74:	bl	79c <strerror@plt>
     c78:	str	r0, [sp]
     c7c:	add	r0, r4, #36	; 0x24
     c80:	ldr	r2, [pc, #68]	; ccc <ipfw_daq_start+0xb0>
     c84:	add	r2, pc, r2
     c88:	b	ca8 <ipfw_daq_start+0x8c>
     c8c:	bl	7b4 <__errno_location@plt>
     c90:	ldr	r0, [r0]
     c94:	bl	79c <strerror@plt>
     c98:	str	r0, [sp]
     c9c:	add	r0, r4, #36	; 0x24
     ca0:	ldr	r2, [pc, #28]	; cc4 <ipfw_daq_start+0xa8>
     ca4:	add	r2, pc, r2
     ca8:	ldr	r3, [pc, #24]	; cc8 <ipfw_daq_start+0xac>
     cac:	mov	r1, #256	; 0x100
     cb0:	add	r3, pc, r3
     cb4:	bl	7c0 <snprintf@plt>
     cb8:	mvn	r0, #0
     cbc:	sub	sp, fp, #8
     cc0:	pop	{r4, sl, fp, pc}
     cc4:	.word	0x00000642
     cc8:	.word	0x0000065b
     ccc:	.word	0x00000696

00000cd0 <ipfw_daq_acquire>:
     cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     cd4:	add	fp, sp, #28
     cd8:	sub	sp, sp, #4
     cdc:	vpush	{d8-d9}
     ce0:	sub	sp, sp, #248	; 0xf8
     ce4:	mov	r6, r0
     ce8:	mov	r0, #0
     cec:	add	r4, sp, #112	; 0x70
     cf0:	cmp	r1, #0
     cf4:	vmov.i32	q4, #0	; 0x00000000
     cf8:	mov	r7, #1
     cfc:	mov	r5, #0
     d00:	mov	r8, #0
     d04:	str	r2, [sp, #24]
     d08:	str	r0, [sp, #108]	; 0x6c
     d0c:	add	r0, r6, #36	; 0x24
     d10:	mvneq	r1, #0
     d14:	str	r0, [sp, #12]
     d18:	add	r0, r6, #344	; 0x158
     d1c:	str	r1, [r6, #12]
     d20:	str	r0, [sp, #8]
     d24:	add	r0, r6, #336	; 0x150
     d28:	str	r0, [sp, #20]
     d2c:	add	r0, r6, #360	; 0x168
     d30:	str	r0, [sp, #16]
     d34:	add	r0, sp, #48	; 0x30
     d38:	add	r9, r0, #16
     d3c:	add	r0, r6, #320	; 0x140
     d40:	str	r0, [sp, #28]
     d44:	add	r0, r6, #300	; 0x12c
     d48:	str	r0, [sp, #44]	; 0x2c
     d4c:	add	r0, r4, #96	; 0x60
     d50:	str	r0, [sp, #40]	; 0x28
     d54:	add	r0, r4, #80	; 0x50
     d58:	str	r0, [sp, #36]	; 0x24
     d5c:	add	r0, r4, #64	; 0x40
     d60:	str	r0, [sp, #32]
     d64:	mov	r0, r4
     d68:	mov	r1, #112	; 0x70
     d6c:	vst1.64	{d8-d9}, [r0], r1
     d70:	vst1.64	{d8-d9}, [r0]
     d74:	ldr	r0, [sp, #40]	; 0x28
     d78:	vst1.64	{d8-d9}, [r0]
     d7c:	ldr	r0, [sp, #36]	; 0x24
     d80:	vst1.64	{d8-d9}, [r0]
     d84:	ldr	r0, [sp, #32]
     d88:	vst1.64	{d8-d9}, [r0]
     d8c:	add	r0, r4, #48	; 0x30
     d90:	vst1.64	{d8-d9}, [r0]
     d94:	add	r0, r4, #32
     d98:	vst1.64	{d8-d9}, [r0]
     d9c:	add	r0, r4, #16
     da0:	vst1.64	{d8-d9}, [r0]
     da4:	ldr	r0, [r6]
     da8:	asr	r1, r0, #31
     dac:	and	r3, r0, #31
     db0:	add	r1, r0, r1, lsr #27
     db4:	add	r0, r0, #1
     db8:	asr	r1, r1, #5
     dbc:	ldr	r2, [r4, r1, lsl #2]
     dc0:	orr	r2, r2, r7, lsl r3
     dc4:	mov	r3, #0
     dc8:	str	r2, [r4, r1, lsl #2]
     dcc:	mov	r2, #0
     dd0:	ldr	r1, [r6, #20]
     dd4:	str	r1, [sp, #104]	; 0x68
     dd8:	add	r1, sp, #104	; 0x68
     ddc:	str	r1, [sp]
     de0:	mov	r1, r4
     de4:	bl	754 <select@plt>
     de8:	cmn	r0, #1
     dec:	ble	fc8 <ipfw_daq_acquire+0x2f8>
     df0:	ldr	r0, [r6]
     df4:	asr	r1, r0, #31
     df8:	and	r2, r0, #31
     dfc:	add	r1, r0, r1, lsr #27
     e00:	asr	r1, r1, #5
     e04:	ldr	r1, [r4, r1, lsl #2]
     e08:	tst	r1, r7, lsl r2
     e0c:	beq	fb0 <ipfw_daq_acquire+0x2e0>
     e10:	mov	r1, #16
     e14:	str	r1, [sp, #100]	; 0x64
     e18:	ldr	r1, [sp, #44]	; 0x2c
     e1c:	ldrd	r2, [r6, #24]
     e20:	str	r1, [sp]
     e24:	add	r1, sp, #100	; 0x64
     e28:	str	r1, [sp, #4]
     e2c:	mov	r1, r3
     e30:	mov	r3, #0
     e34:	bl	760 <recvfrom@plt>
     e38:	mov	sl, r0
     e3c:	cmn	r0, #1
     e40:	bne	e54 <ipfw_daq_acquire+0x184>
     e44:	bl	7b4 <__errno_location@plt>
     e48:	ldr	r0, [r0]
     e4c:	cmp	r0, #4
     e50:	bne	ff4 <ipfw_daq_acquire+0x324>
     e54:	ldr	r7, [pc, #468]	; 1030 <ipfw_daq_acquire+0x360>
     e58:	mov	r1, #0
     e5c:	add	r7, pc, r7
     e60:	mov	r0, r7
     e64:	str	r8, [r7]
     e68:	str	r8, [r7, #4]
     e6c:	bl	778 <gettimeofday@plt>
     e70:	ldr	r0, [r7, #4]
     e74:	str	sl, [sp, #56]	; 0x38
     e78:	str	sl, [sp, #60]	; 0x3c
     e7c:	str	r0, [sp, #52]	; 0x34
     e80:	ldr	r0, [pc, #428]	; 1034 <ipfw_daq_acquire+0x364>
     e84:	ldr	r0, [pc, r0]
     e88:	ldr	r2, [sp, #28]
     e8c:	str	r0, [sp, #48]	; 0x30
     e90:	mvn	r0, #0
     e94:	str	r0, [r9]
     e98:	str	r0, [r9, #4]
     e9c:	str	r0, [r9, #8]
     ea0:	str	r0, [r9, #12]
     ea4:	str	r8, [sp, #80]	; 0x50
     ea8:	strh	r8, [sp, #96]	; 0x60
     eac:	ldrd	r0, [r2]
     eb0:	adds	r0, r0, #1
     eb4:	adc	r1, r1, #0
     eb8:	strd	r0, [r2]
     ebc:	ldr	r0, [r6, #296]	; 0x128
     ec0:	cmp	r0, #0
     ec4:	beq	ee0 <ipfw_daq_acquire+0x210>
     ec8:	ldr	r1, [r6, #28]
     ecc:	mov	r2, sl
     ed0:	mov	r3, sl
     ed4:	bl	7e4 <sfbpf_filter@plt>
     ed8:	cmp	r0, #0
     edc:	beq	f20 <ipfw_daq_acquire+0x250>
     ee0:	ldr	r2, [r6, #28]
     ee4:	ldr	r3, [sp, #24]
     ee8:	mov	r0, #0
     eec:	add	r1, sp, #48	; 0x30
     ef0:	blx	r3
     ef4:	ldr	r1, [sp, #16]
     ef8:	cmp	r0, #6
     efc:	movwhi	r0, #1
     f00:	ldr	r2, [r1, r0, lsl #3]!
     f04:	adds	r2, r2, #1
     f08:	str	r2, [r1]
     f0c:	ldr	r2, [r1, #4]
     f10:	adc	r2, r2, #0
     f14:	str	r2, [r1, #4]
     f18:	ldr	r1, [sp, #20]
     f1c:	b	f28 <ipfw_daq_acquire+0x258>
     f20:	ldr	r1, [sp, #8]
     f24:	mov	r0, #0
     f28:	ldrd	r2, [r1]
     f2c:	mov	r7, #1
     f30:	adds	r2, r2, #1
     f34:	adc	r3, r3, #0
     f38:	strd	r2, [r1]
     f3c:	ldr	r1, [r6, #16]
     f40:	cmp	r1, #0
     f44:	bne	f54 <ipfw_daq_acquire+0x284>
     f48:	mov	r1, #45	; 0x2d
     f4c:	tst	r7, r1, lsr r0
     f50:	beq	fac <ipfw_daq_acquire+0x2dc>
     f54:	ldr	r3, [sp, #44]	; 0x2c
     f58:	ldr	r0, [r6]
     f5c:	ldr	r1, [r6, #28]
     f60:	ldr	r2, [sp, #60]	; 0x3c
     f64:	str	r3, [sp]
     f68:	mov	r3, #16
     f6c:	str	r3, [sp, #4]
     f70:	mov	r3, #0
     f74:	bl	7d8 <sendto@plt>
     f78:	cmn	r0, #1
     f7c:	bne	fac <ipfw_daq_acquire+0x2dc>
     f80:	bl	7b4 <__errno_location@plt>
     f84:	ldr	r0, [r0]
     f88:	bl	79c <strerror@plt>
     f8c:	str	r0, [sp]
     f90:	ldr	r0, [sp, #12]
     f94:	mov	r1, #256	; 0x100
     f98:	ldr	r2, [pc, #152]	; 1038 <ipfw_daq_acquire+0x368>
     f9c:	ldr	r3, [pc, #152]	; 103c <ipfw_daq_acquire+0x36c>
     fa0:	add	r2, pc, r2
     fa4:	add	r3, pc, r3
     fa8:	bl	7c0 <snprintf@plt>
     fac:	add	r5, r5, #1
     fb0:	ldr	r0, [r6, #12]
     fb4:	cmp	r0, #0
     fb8:	cmpge	r5, r0
     fbc:	blt	d64 <ipfw_daq_acquire+0x94>
     fc0:	mov	r0, #0
     fc4:	b	101c <ipfw_daq_acquire+0x34c>
     fc8:	bl	7b4 <__errno_location@plt>
     fcc:	ldr	r1, [r0]
     fd0:	mov	r0, #0
     fd4:	cmp	r1, #4
     fd8:	beq	101c <ipfw_daq_acquire+0x34c>
     fdc:	mov	r0, r1
     fe0:	bl	79c <strerror@plt>
     fe4:	str	r0, [sp]
     fe8:	ldr	r2, [pc, #60]	; 102c <ipfw_daq_acquire+0x35c>
     fec:	add	r2, pc, r2
     ff0:	b	1004 <ipfw_daq_acquire+0x334>
     ff4:	bl	79c <strerror@plt>
     ff8:	str	r0, [sp]
     ffc:	ldr	r2, [pc, #60]	; 1040 <ipfw_daq_acquire+0x370>
    1000:	add	r2, pc, r2
    1004:	ldr	r3, [pc, #56]	; 1044 <ipfw_daq_acquire+0x374>
    1008:	ldr	r0, [sp, #12]
    100c:	mov	r1, #256	; 0x100
    1010:	add	r3, pc, r3
    1014:	bl	7c0 <snprintf@plt>
    1018:	mvn	r0, #0
    101c:	sub	sp, fp, #48	; 0x30
    1020:	vpop	{d8-d9}
    1024:	add	sp, sp, #4
    1028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    102c:	.word	0x00000351
    1030:	.word	0x00011284
    1034:	.word	0x0001125c
    1038:	.word	0x000003fa
    103c:	.word	0x0000041b
    1040:	.word	0x00000373
    1044:	.word	0x00000352

00001048 <ipfw_daq_inject>:
    1048:	push	{r4, r5, fp, lr}
    104c:	add	fp, sp, #8
    1050:	sub	sp, sp, #8
    1054:	mov	r1, r2
    1058:	mov	r2, r0
    105c:	mov	r4, r0
    1060:	mov	r5, #16
    1064:	ldr	r0, [r2], #300	; 0x12c
    1068:	stm	sp, {r2, r5}
    106c:	mov	r2, r3
    1070:	mov	r3, #0
    1074:	mov	r5, #0
    1078:	bl	7d8 <sendto@plt>
    107c:	cmn	r0, #1
    1080:	beq	10a0 <ipfw_daq_inject+0x58>
    1084:	ldr	r0, [r4, #352]	; 0x160
    1088:	ldr	r1, [r4, #356]	; 0x164
    108c:	adds	r0, r0, #1
    1090:	adc	r1, r1, #0
    1094:	str	r0, [r4, #352]	; 0x160
    1098:	str	r1, [r4, #356]	; 0x164
    109c:	b	10d0 <ipfw_daq_inject+0x88>
    10a0:	bl	7b4 <__errno_location@plt>
    10a4:	ldr	r0, [r0]
    10a8:	bl	79c <strerror@plt>
    10ac:	str	r0, [sp]
    10b0:	add	r0, r4, #36	; 0x24
    10b4:	mov	r1, #256	; 0x100
    10b8:	ldr	r2, [pc, #28]	; 10dc <ipfw_daq_inject+0x94>
    10bc:	ldr	r3, [pc, #28]	; 10e0 <ipfw_daq_inject+0x98>
    10c0:	add	r2, pc, r2
    10c4:	add	r3, pc, r3
    10c8:	bl	7c0 <snprintf@plt>
    10cc:	mvn	r5, #0
    10d0:	mov	r0, r5
    10d4:	sub	sp, fp, #8
    10d8:	pop	{r4, r5, fp, pc}
    10dc:	.word	0x000002da
    10e0:	.word	0x000002fb

000010e4 <ipfw_daq_breakloop>:
    10e4:	mov	r1, #0
    10e8:	str	r1, [r0, #12]
    10ec:	mov	r0, #0
    10f0:	bx	lr

000010f4 <ipfw_daq_stop>:
    10f4:	push	{r4, sl, fp, lr}
    10f8:	add	fp, sp, #8
    10fc:	mov	r4, r0
    1100:	ldr	r0, [r0]
    1104:	bl	7fc <close@plt>
    1108:	mvn	r0, #0
    110c:	str	r0, [r4]
    1110:	mov	r0, #3
    1114:	str	r0, [r4, #316]	; 0x13c
    1118:	mov	r0, #0
    111c:	pop	{r4, sl, fp, pc}

00001120 <ipfw_daq_shutdown>:
    1120:	push	{r4, sl, fp, lr}
    1124:	add	fp, sp, #8
    1128:	mov	r4, r0
    112c:	ldr	r0, [r0, #32]
    1130:	cmp	r0, #0
    1134:	beq	113c <ipfw_daq_shutdown+0x1c>
    1138:	bl	73c <free@plt>
    113c:	ldr	r0, [r4, #28]
    1140:	cmp	r0, #0
    1144:	beq	114c <ipfw_daq_shutdown+0x2c>
    1148:	bl	73c <free@plt>
    114c:	mov	r0, r4
    1150:	pop	{r4, sl, fp, lr}
    1154:	b	73c <free@plt>

00001158 <ipfw_daq_check_status>:
    1158:	ldr	r0, [r0, #316]	; 0x13c
    115c:	bx	lr

00001160 <ipfw_daq_get_stats>:
    1160:	push	{fp, lr}
    1164:	mov	fp, sp
    1168:	mov	r2, r1
    116c:	add	r1, r0, #320	; 0x140
    1170:	mov	r0, r2
    1174:	mov	r2, #96	; 0x60
    1178:	bl	748 <memcpy@plt>
    117c:	mov	r0, #0
    1180:	pop	{fp, pc}

00001184 <ipfw_daq_reset_stats>:
    1184:	vmov.i32	q8, #0	; 0x00000000
    1188:	add	r1, r0, #400	; 0x190
    118c:	vst1.64	{d16-d17}, [r1]
    1190:	add	r1, r0, #384	; 0x180
    1194:	vst1.64	{d16-d17}, [r1]
    1198:	add	r1, r0, #368	; 0x170
    119c:	vst1.64	{d16-d17}, [r1]
    11a0:	add	r1, r0, #352	; 0x160
    11a4:	vst1.64	{d16-d17}, [r1]
    11a8:	add	r1, r0, #336	; 0x150
    11ac:	add	r0, r0, #320	; 0x140
    11b0:	vst1.64	{d16-d17}, [r1]
    11b4:	vst1.64	{d16-d17}, [r0]
    11b8:	bx	lr

000011bc <ipfw_daq_get_snaplen>:
    11bc:	ldr	r0, [r0, #24]
    11c0:	bx	lr

000011c4 <ipfw_daq_get_capabilities>:
    11c4:	movw	r0, #743	; 0x2e7
    11c8:	bx	lr

000011cc <ipfw_daq_get_datalink_type>:
    11cc:	mov	r0, #228	; 0xe4
    11d0:	bx	lr

000011d4 <ipfw_daq_get_errbuf>:
    11d4:	add	r0, r0, #36	; 0x24
    11d8:	bx	lr

000011dc <ipfw_daq_set_errbuf>:
    11dc:	ldr	r3, [pc, #28]	; 1200 <ipfw_daq_set_errbuf+0x24>
    11e0:	ldr	r2, [pc, #28]	; 1204 <ipfw_daq_set_errbuf+0x28>
    11e4:	cmp	r1, #0
    11e8:	add	r0, r0, #36	; 0x24
    11ec:	add	r3, pc, r3
    11f0:	add	r2, pc, r2
    11f4:	movne	r3, r1
    11f8:	mov	r1, #256	; 0x100
    11fc:	b	7c0 <snprintf@plt>
    1200:	.word	0x000000ac
    1204:	.word	0x000001e0

00001208 <ipfw_daq_get_device_index>:
    1208:	mvn	r0, #3
    120c:	bx	lr

Disassembly of section .fini:

00001210 <_fini>:
    1210:	push	{r3, lr}
    1214:	pop	{r3, pc}
