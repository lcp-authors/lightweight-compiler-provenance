
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

00000650 <_init>:
 650:	push	{r3, lr}
 654:	bl	70c <call_weak_fn>
 658:	pop	{r3, pc}

Disassembly of section .plt:

0000065c <.plt>:
 65c:	push	{lr}		; (str lr, [sp, #-4]!)
 660:	ldr	lr, [pc, #4]	; 66c <.plt+0x10>
 664:	add	lr, pc, lr
 668:	ldr	pc, [lr, #8]!
 66c:	.word	0x00010994

00000670 <__cxa_finalize@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #16, 20	; 0x10000
 678:	ldr	pc, [ip, #2452]!	; 0x994

0000067c <match_esc@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #16, 20	; 0x10000
 684:	ldr	pc, [ip, #2444]!	; 0x98c

00000688 <sendto_one@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #16, 20	; 0x10000
 690:	ldr	pc, [ip, #2436]!	; 0x984

00000694 <collapse_esc@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #16, 20	; 0x10000
 69c:	ldr	pc, [ip, #2428]!	; 0x97c

000006a0 <match_ips@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #16, 20	; 0x10000
 6a8:	ldr	pc, [ip, #2420]!	; 0x974

000006ac <strcpy@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #16, 20	; 0x10000
 6b4:	ldr	pc, [ip, #2412]!	; 0x96c

000006b8 <__gmon_start__@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #16, 20	; 0x10000
 6c0:	ldr	pc, [ip, #2404]!	; 0x964

000006c4 <strlen@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #16, 20	; 0x10000
 6cc:	ldr	pc, [ip, #2396]!	; 0x95c

000006d0 <strchr@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #16, 20	; 0x10000
 6d8:	ldr	pc, [ip, #2388]!	; 0x954

000006dc <collapse@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #16, 20	; 0x10000
 6e4:	ldr	pc, [ip, #2380]!	; 0x94c

000006e8 <match@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #16, 20	; 0x10000
 6f0:	ldr	pc, [ip, #2372]!	; 0x944

000006f4 <sendto_one_notice@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #16, 20	; 0x10000
 6fc:	ldr	pc, [ip, #2364]!	; 0x93c

00000700 <show_ip@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #16, 20	; 0x10000
 708:	ldr	pc, [ip, #2356]!	; 0x934

Disassembly of section .text:

0000070c <call_weak_fn>:
 70c:	ldr	r3, [pc, #20]	; 728 <call_weak_fn+0x1c>
 710:	ldr	r2, [pc, #20]	; 72c <call_weak_fn+0x20>
 714:	add	r3, pc, r3
 718:	ldr	r2, [r3, r2]
 71c:	cmp	r2, #0
 720:	bxeq	lr
 724:	b	6b8 <__gmon_start__@plt>
 728:	.word	0x000108e4
 72c:	.word	0x00000048

00000730 <deregister_tm_clones>:
 730:	ldr	r0, [pc, #44]	; 764 <deregister_tm_clones+0x34>
 734:	ldr	r3, [pc, #44]	; 768 <deregister_tm_clones+0x38>
 738:	add	r0, pc, r0
 73c:	add	r3, pc, r3
 740:	cmp	r3, r0
 744:	ldr	r3, [pc, #32]	; 76c <deregister_tm_clones+0x3c>
 748:	add	r3, pc, r3
 74c:	bxeq	lr
 750:	ldr	r2, [pc, #24]	; 770 <deregister_tm_clones+0x40>
 754:	ldr	r3, [r3, r2]
 758:	cmp	r3, #0
 75c:	bxeq	lr
 760:	bx	r3
 764:	.word	0x00010990
 768:	.word	0x0001098c
 76c:	.word	0x000108b0
 770:	.word	0x00000044

00000774 <register_tm_clones>:
 774:	ldr	r0, [pc, #56]	; 7b4 <register_tm_clones+0x40>
 778:	ldr	r3, [pc, #56]	; 7b8 <register_tm_clones+0x44>
 77c:	add	r0, pc, r0
 780:	add	r3, pc, r3
 784:	sub	r1, r3, r0
 788:	ldr	r3, [pc, #44]	; 7bc <register_tm_clones+0x48>
 78c:	asr	r1, r1, #2
 790:	add	r3, pc, r3
 794:	add	r1, r1, r1, lsr #31
 798:	asrs	r1, r1, #1
 79c:	bxeq	lr
 7a0:	ldr	r2, [pc, #24]	; 7c0 <register_tm_clones+0x4c>
 7a4:	ldr	r3, [r3, r2]
 7a8:	cmp	r3, #0
 7ac:	bxeq	lr
 7b0:	bx	r3
 7b4:	.word	0x0001094c
 7b8:	.word	0x00010948
 7bc:	.word	0x00010868
 7c0:	.word	0x00000050

000007c4 <__do_global_dtors_aux>:
 7c4:	ldr	r3, [pc, #76]	; 818 <__do_global_dtors_aux+0x54>
 7c8:	ldr	r2, [pc, #76]	; 81c <__do_global_dtors_aux+0x58>
 7cc:	add	r3, pc, r3
 7d0:	add	r2, pc, r2
 7d4:	ldrb	r3, [r3]
 7d8:	cmp	r3, #0
 7dc:	bxne	lr
 7e0:	ldr	r3, [pc, #56]	; 820 <__do_global_dtors_aux+0x5c>
 7e4:	push	{r4, lr}
 7e8:	ldr	r3, [r2, r3]
 7ec:	cmp	r3, #0
 7f0:	beq	800 <__do_global_dtors_aux+0x3c>
 7f4:	ldr	r3, [pc, #40]	; 824 <__do_global_dtors_aux+0x60>
 7f8:	ldr	r0, [pc, r3]
 7fc:	bl	670 <__cxa_finalize@plt>
 800:	bl	730 <deregister_tm_clones>
 804:	ldr	r3, [pc, #28]	; 828 <__do_global_dtors_aux+0x64>
 808:	mov	r2, #1
 80c:	add	r3, pc, r3
 810:	strb	r2, [r3]
 814:	pop	{r4, pc}
 818:	.word	0x000108fc
 81c:	.word	0x00010828
 820:	.word	0x00000040
 824:	.word	0x00010858
 828:	.word	0x000108bc

0000082c <frame_dummy>:
 82c:	b	774 <register_tm_clones>

00000830 <mo_testmask>:
 830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 834:	add	fp, sp, #28
 838:	sub	sp, sp, #20
 83c:	ldr	r8, [fp, #8]
 840:	mov	r4, r3
 844:	mov	r7, r2
 848:	ldr	r6, [r8, #4]
 84c:	mov	r0, r6
 850:	bl	6c4 <strlen@plt>
 854:	add	r0, r0, #8
 858:	bic	r0, r0, #7
 85c:	sub	r5, sp, r0
 860:	mov	sp, r5
 864:	mov	r0, r5
 868:	mov	r1, r6
 86c:	bl	6ac <strcpy@plt>
 870:	bl	6dc <collapse@plt>
 874:	mov	r0, r5
 878:	mov	r1, #64	; 0x40
 87c:	bl	6d0 <strchr@plt>
 880:	cmp	r0, #0
 884:	beq	afc <mo_testmask+0x2cc>
 888:	mov	r6, r0
 88c:	mov	r0, #0
 890:	mov	r1, #33	; 0x21
 894:	strb	r0, [r6], #1
 898:	mov	r0, r5
 89c:	bl	6d0 <strchr@plt>
 8a0:	cmp	r0, #0
 8a4:	beq	8b8 <mo_testmask+0x88>
 8a8:	mov	sl, r0
 8ac:	mov	r0, #0
 8b0:	strb	r0, [sl], #1
 8b4:	b	8c0 <mo_testmask+0x90>
 8b8:	mov	sl, r5
 8bc:	mov	r5, #0
 8c0:	ldrb	r0, [sl]
 8c4:	cmp	r0, #0
 8c8:	beq	afc <mo_testmask+0x2cc>
 8cc:	ldrb	r0, [r6]
 8d0:	cmp	r0, #0
 8d4:	beq	afc <mo_testmask+0x2cc>
 8d8:	str	r7, [fp, #-40]	; 0xffffffd8
 8dc:	mov	r0, #0
 8e0:	cmp	r4, #3
 8e4:	mov	r7, #0
 8e8:	str	r0, [fp, #-36]	; 0xffffffdc
 8ec:	blt	938 <mo_testmask+0x108>
 8f0:	ldr	r4, [r8, #8]
 8f4:	mov	r7, #0
 8f8:	cmp	r4, #0
 8fc:	beq	938 <mo_testmask+0x108>
 900:	ldrb	r0, [r4]
 904:	mov	r7, #0
 908:	cmp	r0, #0
 90c:	beq	938 <mo_testmask+0x108>
 910:	mov	r0, r4
 914:	bl	6c4 <strlen@plt>
 918:	add	r0, r0, #8
 91c:	bic	r0, r0, #7
 920:	sub	r7, sp, r0
 924:	mov	sp, r7
 928:	mov	r0, r7
 92c:	mov	r1, r4
 930:	bl	6ac <strcpy@plt>
 934:	bl	694 <collapse_esc@plt>
 938:	str	r7, [fp, #-44]	; 0xffffffd4
 93c:	ldr	r0, [pc, #468]	; b18 <mo_testmask+0x2e8>
 940:	ldr	r0, [pc, r0]
 944:	ldr	r8, [r0]
 948:	mov	r0, #0
 94c:	str	r0, [fp, #-48]	; 0xffffffd0
 950:	cmp	r8, #0
 954:	beq	a9c <mo_testmask+0x26c>
 958:	mov	r0, #0
 95c:	str	r0, [fp, #-48]	; 0xffffffd0
 960:	mov	r0, #0
 964:	str	r0, [fp, #-36]	; 0xffffffdc
 968:	ldr	r9, [r8]
 96c:	ldrh	r0, [r9, #80]	; 0x50
 970:	cmp	r0, #64	; 0x40
 974:	bne	a90 <mo_testmask+0x260>
 978:	ldr	r0, [r9, #24]
 97c:	cmp	r0, #0
 980:	beq	a90 <mo_testmask+0x260>
 984:	mov	r4, r9
 988:	ldrb	r0, [r4, #291]!	; 0x123
 98c:	ldr	r7, [pc, #392]	; b1c <mo_testmask+0x2ec>
 990:	cmp	r0, #0
 994:	add	r7, pc, r7
 998:	beq	9bc <mo_testmask+0x18c>
 99c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 9a0:	mov	r1, r9
 9a4:	bl	700 <show_ip@plt>
 9a8:	cmp	r0, #0
 9ac:	ldr	r0, [pc, #364]	; b20 <mo_testmask+0x2f0>
 9b0:	add	r0, pc, r0
 9b4:	moveq	r4, r0
 9b8:	mov	r7, r4
 9bc:	add	r1, r9, #152	; 0x98
 9c0:	mov	r0, sl
 9c4:	bl	6e8 <match@plt>
 9c8:	cmp	r0, #0
 9cc:	beq	a90 <mo_testmask+0x260>
 9d0:	add	r1, r9, #163	; 0xa3
 9d4:	mov	r0, r6
 9d8:	bl	6e8 <match@plt>
 9dc:	cmp	r0, #0
 9e0:	bne	a20 <mo_testmask+0x1f0>
 9e4:	add	r1, r9, #227	; 0xe3
 9e8:	mov	r0, r6
 9ec:	bl	6e8 <match@plt>
 9f0:	cmp	r0, #0
 9f4:	bne	a20 <mo_testmask+0x1f0>
 9f8:	mov	r0, r6
 9fc:	mov	r1, r7
 a00:	bl	6e8 <match@plt>
 a04:	cmp	r0, #0
 a08:	bne	a20 <mo_testmask+0x1f0>
 a0c:	mov	r0, r6
 a10:	mov	r1, r7
 a14:	bl	6a0 <match_ips@plt>
 a18:	cmp	r0, #0
 a1c:	beq	a90 <mo_testmask+0x260>
 a20:	cmp	r5, #0
 a24:	beq	a3c <mo_testmask+0x20c>
 a28:	add	r1, r9, #88	; 0x58
 a2c:	mov	r0, r5
 a30:	bl	6e8 <match@plt>
 a34:	cmp	r0, #0
 a38:	beq	a90 <mo_testmask+0x260>
 a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
 a40:	cmp	r0, #0
 a44:	beq	a5c <mo_testmask+0x22c>
 a48:	movw	r1, #345	; 0x159
 a4c:	add	r1, r9, r1
 a50:	bl	67c <match_esc@plt>
 a54:	cmp	r0, #0
 a58:	beq	a90 <mo_testmask+0x260>
 a5c:	ldrb	r0, [r9, #65]	; 0x41
 a60:	tst	r0, #32
 a64:	beq	a84 <mo_testmask+0x254>
 a68:	ldrh	r0, [r9, #80]	; 0x50
 a6c:	cmp	r0, #64	; 0x40
 a70:	bne	a84 <mo_testmask+0x254>
 a74:	ldr	r0, [fp, #-48]	; 0xffffffd0
 a78:	add	r0, r0, #1
 a7c:	str	r0, [fp, #-48]	; 0xffffffd0
 a80:	b	a90 <mo_testmask+0x260>
 a84:	ldr	r0, [fp, #-36]	; 0xffffffdc
 a88:	add	r0, r0, #1
 a8c:	str	r0, [fp, #-36]	; 0xffffffdc
 a90:	ldr	r8, [r8, #8]
 a94:	cmp	r8, #0
 a98:	bne	968 <mo_testmask+0x138>
 a9c:	ldr	r0, [pc, #128]	; b24 <mo_testmask+0x2f4>
 aa0:	ldr	r1, [fp, #-44]	; 0xffffffd4
 aa4:	add	r0, pc, r0
 aa8:	cmp	r1, #0
 aac:	moveq	r1, r0
 ab0:	sub	sp, sp, #24
 ab4:	cmp	r5, #0
 ab8:	moveq	r5, r0
 abc:	ldr	r0, [fp, #-48]	; 0xffffffd0
 ac0:	str	r0, [sp]
 ac4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 ac8:	stmib	sp, {r0, r5, sl}
 acc:	str	r6, [sp, #16]
 ad0:	str	r1, [sp, #20]
 ad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
 ad8:	ldr	r1, [pc, #72]	; b28 <mo_testmask+0x2f8>
 adc:	add	r3, r0, #88	; 0x58
 ae0:	ldr	r1, [pc, r1]
 ae4:	add	r2, r1, #88	; 0x58
 ae8:	ldr	r1, [pc, #60]	; b2c <mo_testmask+0x2fc>
 aec:	add	r1, pc, r1
 af0:	bl	688 <sendto_one@plt>
 af4:	add	sp, sp, #24
 af8:	b	b0c <mo_testmask+0x2dc>
 afc:	ldr	r1, [pc, #16]	; b14 <mo_testmask+0x2e4>
 b00:	mov	r0, r7
 b04:	add	r1, pc, r1
 b08:	bl	6f4 <sendto_one_notice@plt>
 b0c:	sub	sp, fp, #28
 b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 b14:	.word	0x00000035
 b18:	.word	0x00010704
 b1c:	.word	0x000001f4
 b20:	.word	0x000001e8
 b24:	.word	0x000000e2
 b28:	.word	0x0001056c
 b2c:	.word	0x00000061

Disassembly of section .fini:

00000b30 <_fini>:
 b30:	push	{r3, lr}
 b34:	pop	{r3, pc}
