
../repos/charybdis/extensions/.libs/extb_realname.so:     file format elf32-littlearm


Disassembly of section .init:

0000036c <_init>:
 36c:	push	{r3, lr}
 370:	bl	3b0 <call_weak_fn>
 374:	pop	{r3, pc}

Disassembly of section .plt:

00000378 <.plt>:
 378:	push	{lr}		; (str lr, [sp, #-4]!)
 37c:	ldr	lr, [pc, #4]	; 388 <.plt+0x10>
 380:	add	lr, pc, lr
 384:	ldr	pc, [lr, #8]!
 388:	.word	0x00010c78

0000038c <__cxa_finalize@plt>:
 38c:	add	ip, pc, #0, 12
 390:	add	ip, ip, #16, 20	; 0x10000
 394:	ldr	pc, [ip, #3192]!	; 0xc78

00000398 <__gmon_start__@plt>:
 398:	add	ip, pc, #0, 12
 39c:	add	ip, ip, #16, 20	; 0x10000
 3a0:	ldr	pc, [ip, #3184]!	; 0xc70

000003a4 <match@plt>:
 3a4:	add	ip, pc, #0, 12
 3a8:	add	ip, ip, #16, 20	; 0x10000
 3ac:	ldr	pc, [ip, #3176]!	; 0xc68

Disassembly of section .text:

000003b0 <call_weak_fn>:
 3b0:	ldr	r3, [pc, #20]	; 3cc <call_weak_fn+0x1c>
 3b4:	ldr	r2, [pc, #20]	; 3d0 <call_weak_fn+0x20>
 3b8:	add	r3, pc, r3
 3bc:	ldr	r2, [r3, r2]
 3c0:	cmp	r2, #0
 3c4:	bxeq	lr
 3c8:	b	398 <__gmon_start__@plt>
 3cc:	.word	0x00010c40
 3d0:	.word	0x00000020

000003d4 <deregister_tm_clones>:
 3d4:	ldr	r0, [pc, #44]	; 408 <deregister_tm_clones+0x34>
 3d8:	ldr	r3, [pc, #44]	; 40c <deregister_tm_clones+0x38>
 3dc:	add	r0, pc, r0
 3e0:	add	r3, pc, r3
 3e4:	cmp	r3, r0
 3e8:	ldr	r3, [pc, #32]	; 410 <deregister_tm_clones+0x3c>
 3ec:	add	r3, pc, r3
 3f0:	bxeq	lr
 3f4:	ldr	r2, [pc, #24]	; 414 <deregister_tm_clones+0x40>
 3f8:	ldr	r3, [r3, r2]
 3fc:	cmp	r3, #0
 400:	bxeq	lr
 404:	bx	r3
 408:	.word	0x00010c74
 40c:	.word	0x00010c70
 410:	.word	0x00010c0c
 414:	.word	0x0000001c

00000418 <register_tm_clones>:
 418:	ldr	r0, [pc, #56]	; 458 <register_tm_clones+0x40>
 41c:	ldr	r3, [pc, #56]	; 45c <register_tm_clones+0x44>
 420:	add	r0, pc, r0
 424:	add	r3, pc, r3
 428:	sub	r1, r3, r0
 42c:	ldr	r3, [pc, #44]	; 460 <register_tm_clones+0x48>
 430:	asr	r1, r1, #2
 434:	add	r3, pc, r3
 438:	add	r1, r1, r1, lsr #31
 43c:	asrs	r1, r1, #1
 440:	bxeq	lr
 444:	ldr	r2, [pc, #24]	; 464 <register_tm_clones+0x4c>
 448:	ldr	r3, [r3, r2]
 44c:	cmp	r3, #0
 450:	bxeq	lr
 454:	bx	r3
 458:	.word	0x00010c30
 45c:	.word	0x00010c2c
 460:	.word	0x00010bc4
 464:	.word	0x00000028

00000468 <__do_global_dtors_aux>:
 468:	ldr	r3, [pc, #76]	; 4bc <__do_global_dtors_aux+0x54>
 46c:	ldr	r2, [pc, #76]	; 4c0 <__do_global_dtors_aux+0x58>
 470:	add	r3, pc, r3
 474:	add	r2, pc, r2
 478:	ldrb	r3, [r3]
 47c:	cmp	r3, #0
 480:	bxne	lr
 484:	ldr	r3, [pc, #56]	; 4c4 <__do_global_dtors_aux+0x5c>
 488:	push	{r4, lr}
 48c:	ldr	r3, [r2, r3]
 490:	cmp	r3, #0
 494:	beq	4a4 <__do_global_dtors_aux+0x3c>
 498:	ldr	r3, [pc, #40]	; 4c8 <__do_global_dtors_aux+0x60>
 49c:	ldr	r0, [pc, r3]
 4a0:	bl	38c <__cxa_finalize@plt>
 4a4:	bl	3d4 <deregister_tm_clones>
 4a8:	ldr	r3, [pc, #28]	; 4cc <__do_global_dtors_aux+0x64>
 4ac:	mov	r2, #1
 4b0:	add	r3, pc, r3
 4b4:	strb	r2, [r3]
 4b8:	pop	{r4, pc}
 4bc:	.word	0x00010be0
 4c0:	.word	0x00010b84
 4c4:	.word	0x00000018
 4c8:	.word	0x00010b88
 4cc:	.word	0x00010ba0

000004d0 <frame_dummy>:
 4d0:	b	418 <register_tm_clones>

000004d4 <_modinit>:
 4d4:	ldr	r3, [pc, #28]	; 4f8 <_modinit+0x24>
 4d8:	add	r3, pc, r3
 4dc:	ldr	r2, [pc, #24]	; 4fc <_modinit+0x28>
 4e0:	ldr	r3, [r3, r2]
 4e4:	ldr	r2, [pc, #20]	; 500 <_modinit+0x2c>
 4e8:	add	r2, pc, r2
 4ec:	str	r2, [r3, #456]	; 0x1c8
 4f0:	mov	r0, #0
 4f4:	bx	lr
 4f8:	.word	0x00010b20
 4fc:	.word	0x00000024
 500:	.word	0x00000038

00000504 <_moddeinit>:
 504:	ldr	r3, [pc, #20]	; 520 <_moddeinit+0x1c>
 508:	add	r3, pc, r3
 50c:	ldr	r2, [pc, #16]	; 524 <_moddeinit+0x20>
 510:	ldr	r3, [r3, r2]
 514:	mov	r2, #0
 518:	str	r2, [r3, #456]	; 0x1c8
 51c:	bx	lr
 520:	.word	0x00010af0
 524:	.word	0x00000024

00000528 <eb_realname>:
 528:	add	r3, r3, #-536870912	; 0xe0000000
 52c:	bics	r3, r3, #536870912	; 0x20000000
 530:	moveq	r3, #1
 534:	movne	r3, #0
 538:	cmp	r0, #0
 53c:	moveq	r3, #1
 540:	cmp	r3, #0
 544:	beq	550 <eb_realname+0x28>
 548:	mvn	r0, #0
 54c:	bx	lr
 550:	str	r4, [sp, #-8]!
 554:	str	lr, [sp, #4]
 558:	add	r1, r1, #344	; 0x158
 55c:	add	r1, r1, #1
 560:	bl	3a4 <match@plt>
 564:	adds	r0, r0, #0
 568:	movne	r0, #1
 56c:	ldr	r4, [sp]
 570:	add	sp, sp, #4
 574:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00000578 <_fini>:
 578:	push	{r3, lr}
 57c:	pop	{r3, pc}
